
409ae3a874cc039e8ad32ca7930d9de9b280e3ae0d8a02f364d50caad074faa8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a623
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429857
  401084:	mov    ecx,DWORD PTR ds:0x429f43
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a62b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429f53
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a62f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429f4f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a633
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a637
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a63f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a643
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a647
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x570492fe
  40178d:	cwde   
  40178e:	stc    
  40178f:	add    DWORD PTR [ebx+0x5cef8383],0xffffff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x77057776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x24],ebx
  40183b:	hlt    
  40183c:	imul   ebp,DWORD PTR [esi+0x41],0x95a5dc50
  401843:	xchg   ebx,eax
  401844:	sbb    al,0x42
  401846:	push   esi
  401847:	adc    eax,0xd0a2a89d
  40184c:	or     BYTE PTR [eax-0x5377d113],ch
  401852:	jnp    0x401836
  401854:	call   DWORD PTR [ebx+0x2fb2e3d3]
  40185b:	shr    DWORD PTR [ebp-0x30],0xc9
  40185f:	mov    ebp,0xc85a7e09
  401864:	dec    esp
  401865:	shl    cl,0x88
  401868:	popa   
  401869:	ret    
  40186a:	nop
  40186b:	fisubr WORD PTR [ecx]
  40186d:	xor    DWORD PTR [ebx+esi*8],ebx
  401870:	rcr    eax,cl
  401872:	cmovae edi,DWORD PTR [ecx+ecx*8]
  401876:	aaa    
  401877:	pop    esp
  401878:	(bad)  
  401879:	adc    eax,esi
  40187b:	sbb    DWORD PTR [eax-0x76],ebx
  40187e:	jae    0x401869
  401880:	mov    dh,0x26
  401882:	ds test eax,0x45419859
  401888:	inc    ebx
  401889:	int    0xd9
  40188b:	(bad)  
  40188c:	aad    0x21
  40188e:	jmp    0xd629:0x79fc0b41
  401895:	stos   DWORD PTR es:[edi],eax
  401896:	lahf   
  401897:	adc    al,0x6c
  401899:	push   esp
  40189a:	outs   dx,BYTE PTR ds:[esi]
  40189b:	or     edx,DWORD PTR [ebx+0x60575040]
  4018a1:	mov    esp,0x32e05eaa
  4018a6:	cmp    bl,BYTE PTR [esi-0x19091f03]
  4018ac:	pop    ss
  4018ad:	xchg   esp,eax
  4018ae:	adc    DWORD PTR [ecx-0xd],esi
  4018b1:	sar    BYTE PTR [ecx],0x17
  4018b4:	pop    ds
  4018b5:	loop   0x401913
  4018b7:	ret    
  4018b8:	pop    esi
  4018b9:	inc    ebx
  4018ba:	stos   BYTE PTR es:[edi],al
  4018bb:	in     al,0x79
  4018bd:	push   es
  4018be:	pop    ds
  4018bf:	add    esi,edx
  4018c1:	jp     0x40192e
  4018c3:	dec    edx
  4018c4:	(bad)  
  4018c6:	adc    esi,ebp
  4018c8:	pusha  
  4018c9:	pop    edx
  4018ca:	xchg   esp,eax
  4018cb:	nop
  4018cc:	stos   DWORD PTR es:[edi],eax
  4018cd:	test   DWORD PTR [ebx-0x71cf58b5],eax
  4018d3:	jl     0x401869
  4018d5:	mov    bl,0x93
  4018d7:	xchg   DWORD PTR [edx-0x739bad73],edx
  4018dd:	add    bh,BYTE PTR [esi+0x1d5541ee]
  4018e3:	lahf   
  4018e4:	es pushf 
  4018e6:	sub    eax,0x1457aad5
  4018eb:	into   
  4018ec:	xor    al,0x1c
  4018ee:	int    0x1a
  4018f0:	out    0x7e,eax
  4018f2:	jbe    0x4018f4
  4018f4:	mov    esi,DWORD PTR [edx+0x12db6d68]
  4018fa:	in     al,dx
  4018fb:	xchg   ebp,eax
  4018fc:	iret   
  4018fd:	aam    0x4b
  4018ff:	pop    edx
  401900:	xor    al,0xaa
  401902:	jne    0x401925
  401904:	hlt    
  401905:	push   edi
  401906:	xchg   ebx,eax
  401907:	sbb    ebp,edx
  401909:	repz pushf 
  40190b:	jmp    0x6102:0xe8109f88
  401912:	mov    al,0xc7
  401914:	add    esp,ebx
  401916:	xchg   edi,eax
  401917:	jge    0x4018a7
  401919:	xchg   ebp,eax
  40191a:	dec    ebp
  40191b:	mov    eax,ds:0x7e70d6ac
  401920:	sbb    edx,DWORD PTR [esi+esi*2-0x70]
  401924:	out    dx,al
  401925:	push   esp
  401926:	lds    edi,FWORD PTR [ebp+0x4f66f13]
  40192c:	arpl   WORD PTR [bx+di],cx
  40192f:	dec    esp
  401930:	lds    ebp,FWORD PTR [edi-0x58306c56]
  401936:	and    eax,0x582b1614
  40193b:	call   0x4607:0xcfdc87fc
  401942:	les    esp,FWORD PTR [ecx+0x4c85de4d]
  401948:	out    dx,eax
  401949:	jbe    0x401988
  40194b:	jl     0x40197a
  40194d:	mov    dl,0x5
  40194f:	xor    bh,cl
  401951:	fnsave [ebp+0x1b0ef2a3]
  401957:	call   0x889c:0x3014fb6
  40195e:	xchg   ecx,eax
  40195f:	cmc    
  401960:	sbb    bl,ah
  401962:	int    0x2d
  401964:	(bad)  
  401965:	in     eax,0xb6
  401967:	mov    cl,0xeb
  401969:	pop    edi
  40196a:	cs cmp al,0x3a
  40196d:	cmp    BYTE PTR [ebx],bh
  40196f:	fs or  ebx,DWORD PTR gs:[eax+0x54aa089a]
  401977:	cwde   
  401978:	xchg   ebp,eax
  401979:	(bad)  
  40197a:	push   0x20381c82
  40197f:	int    0x15
  401981:	leave  
  401982:	add    BYTE PTR [edx+esi*2],ah
  401985:	push   ss
  401986:	aas    
  401987:	push   ecx
  401988:	mov    edx,0x98676f11
  40198d:	cmp    eax,ebp
  40198f:	pop    ebx
  401990:	in     al,0xf
  401992:	inc    esp
  401993:	add    ebx,0xffffffd4
  401996:	shl    DWORD PTR [edi-0x6b],1
  401999:	out    dx,al
  40199a:	lods   al,BYTE PTR ds:[esi]
  40199b:	test   al,0x41
  40199d:	xchg   edx,eax
  40199e:	ins    DWORD PTR es:[edi],dx
  40199f:	int    0x2e
  4019a1:	lea    esi,ds:0x97f30ed
  4019a7:	or     DWORD PTR [edx+0x54],0x65
  4019ab:	je     0x4019ed
  4019ad:	inc    esp
  4019ae:	fnstenv gs:[edx+0x5b00d472]
  4019b5:	call   0x1dc11c3b
  4019ba:	jmp    0x60bb88a8
  4019bf:	lahf   
  4019c0:	sbb    eax,0xcd858024
  4019c5:	shl    BYTE PTR gs:[ebp-0x651bcd62],cl
  4019cc:	xor    dl,bh
  4019ce:	jge    0x4019ec
  4019d0:	push   eax
  4019d1:	stos   BYTE PTR es:[edi],al
  4019d2:	(bad)  
  4019d4:	sbb    eax,0xea9c4e58
  4019d9:	scas   al,BYTE PTR es:[edi]
  4019da:	mov    esp,DWORD PTR ds:0xd6d058b
  4019e0:	jns    0x4019b0
  4019e2:	outs   dx,BYTE PTR ds:[esi]
  4019e3:	jae    0x4019e8
  4019e5:	and    al,0xb9
  4019e7:	add    ebp,ecx
  4019e9:	xchg   ecx,eax
  4019ea:	frndint 
  4019ec:	fild   QWORD PTR [ebx-0x13]
  4019ef:	loope  0x401996
  4019f1:	dec    esp
  4019f2:	pop    ebx
  4019f3:	jl     0x401a4f
  4019f5:	and    esi,ebp
  4019f7:	mov    ch,0xfc
  4019f9:	jge    0x401995
  4019fb:	jo     0x4019d1
  4019fd:	jne    0x401a0c
  4019ff:	retf   0x4d3
  401a02:	sbb    DWORD PTR [edi-0x9],esp
  401a05:	push   edx
  401a06:	xor    eax,0x41a89a30
  401a0b:	inc    ebx
  401a0c:	sbb    ebp,ebx
  401a0e:	icebp  
  401a0f:	minps  xmm2,XMMWORD PTR [ebp+0x573190ec]
  401a16:	pop    ecx
  401a17:	xchg   ecx,eax
  401a18:	pop    es
  401a19:	repz shr DWORD PTR es:[esi+0x54e9ab2d],0x37
  401a22:	(bad)  
  401a23:	push   eax
  401a24:	repnz sti 
  401a26:	push   ebx
  401a27:	mov    ds:0xafd0942f,al
  401a2c:	cmp    eax,0x7e323c13
  401a31:	int    0x50
  401a33:	mov    bh,ch
  401a35:	ins    BYTE PTR es:[edi],dx
  401a36:	sub    al,0x4d
  401a39:	mov    ebx,0x55e1f6fe
  401a3e:	xlat   BYTE PTR ds:[ebx]
  401a3f:	lock daa 
  401a41:	jl     0x401aa9
  401a43:	inc    ebx
  401a44:	xor    BYTE PTR [ebx+eax*8-0x42],bl
  401a48:	std    
  401a49:	in     eax,dx
  401a4a:	(bad)  
  401a4b:	leave  
  401a4c:	cmp    eax,0x9b1eecf7
  401a51:	out    dx,al
  401a52:	or     BYTE PTR [edi+0x2b7f8183],ah
  401a58:	jmp    0xd318:0x5e4ecc7b
  401a5f:	push   ebp
  401a60:	pop    edi
  401a61:	mov    ds:0xac3dd8b6,eax
  401a66:	leave  
  401a67:	es jecxz 0x401a5c
  401a6a:	repz shl DWORD PTR [edi+0x65],0x22
  401a6f:	xchg   esi,eax
  401a70:	and    al,0x54
  401a72:	std    
  401a73:	cwde   
  401a74:	xlat   BYTE PTR ds:[ebx]
  401a75:	add    eax,0x8b1a452f
  401a7a:	(bad)  ss:[edx]
  401a7d:	jo     0x401aa7
  401a7f:	test   al,0x4d
  401a81:	pop    edx
  401a82:	into   
  401a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a84:	mov    edx,0x520aa2e7
  401a89:	sbb    al,0x65
  401a8b:	mov    ebp,0x39601e50
  401a90:	mov    edx,0x1272a44d
  401a95:	(bad)  
  401a96:	push   ecx
  401a97:	jne    0x401a93
  401a99:	adc    edi,DWORD PTR [edx+edx*8]
  401a9c:	pop    edx
  401a9d:	lds    edx,FWORD PTR [edi+0x28d0160a]
  401aa3:	mov    ch,BYTE PTR [ebx+0x571a6f66]
  401aa9:	(bad)  [ebp-0x6a]
  401aac:	cli    
  401aad:	stos   BYTE PTR es:[edi],al
  401aae:	lock push ebx
  401ab0:	aad    0xf9
  401ab2:	or     ch,BYTE PTR [edx]
  401ab4:	ins    DWORD PTR es:[edi],dx
  401ab5:	cmp    BYTE PTR [esi],cl
  401ab7:	bound  eax,QWORD PTR [esi]
  401ab9:	clc    
  401aba:	xchg   ebx,eax
  401abb:	je     0x401a8b
  401abd:	sbb    ah,BYTE PTR [edx+0x6a]
  401ac0:	cdq    
  401ac1:	call   0x2684:0x4d134a68
  401ac8:	pop    ss
  401ac9:	adc    ebp,0xdf949ad1
  401acf:	mov    BYTE PTR [ecx+eax*2-0x51032962],0xaa
  401ad7:	xor    BYTE PTR [ecx],0x75
  401ada:	je     0x401b29
  401adc:	or     eax,0x3451772e
  401ae1:	jge    0x1d6b709d
  401ae7:	or     BYTE PTR [edi+0x28],ah
  401aea:	mov    ch,cl
  401aec:	test   DWORD PTR [esi-0x5b],ebx
  401aef:	and    ebx,DWORD PTR [esi]
  401af1:	xor    esi,edx
  401af3:	inc    ebp
  401af4:	idiv   ebx
  401af6:	jg     0x401b3d
  401af8:	push   esi
  401af9:	retf   0x75bb
  401afc:	xor    eax,0xbc3153fe
  401b01:	cmp    edi,0x5d469990
  401b07:	and    al,BYTE PTR [eax+0x7ec43a13]
  401b0d:	imul   edx,DWORD PTR [eiz*8+0xbbc19fd],0x1aac90cd
  401b18:	es jge 0x401b47
  401b1b:	je     0x401b2d
  401b1d:	int3   
  401b1e:	into   
  401b1f:	test   al,0x75
  401b21:	add    edx,esp
  401b23:	jns    0x401b82
  401b25:	in     eax,0x58
  401b27:	ins    DWORD PTR es:[edi],dx
  401b28:	push   DWORD PTR [ebp+0x71]
  401b2b:	jmp    0x3685:0xafa63c0a
  401b32:	lods   al,BYTE PTR ds:[esi]
  401b33:	jns    0x401b65
  401b35:	cmp    BYTE PTR ds:0xc66e7e0b,dl
  401b3b:	adc    esp,DWORD PTR ds:0xdfcd02fc
  401b41:	push   ss
  401b42:	test   BYTE PTR es:[eax+0x1b],dl
  401b46:	mov    dl,0x24
  401b48:	leave  
  401b49:	and    edx,0xc92ea7ec
  401b4f:	leave  
  401b50:	mov    dl,0xe8
  401b52:	mov    cl,0xf5
  401b54:	ret    
  401b55:	aad    0x6d
  401b57:	adc    DWORD PTR [edi],ecx
  401b59:	push   ss
  401b5a:	pop    es
  401b5b:	dec    ebx
  401b5c:	jl     0x401b04
  401b5e:	and    ebp,edi
  401b60:	fs xchg ebp,eax
  401b62:	jmp    0xea8a0f15
  401b67:	and    ebx,esp
  401b69:	das    
  401b6a:	cli    
  401b6b:	mov    ds:0xd159d777,eax
  401b71:	mov    eax,ds:0xca376ec6
  401b76:	ret    
  401b77:	scas   al,BYTE PTR es:[edi]
  401b78:	jne    0x401b44
  401b7a:	mov    al,0x5e
  401b7c:	std    
  401b7d:	cmp    bh,BYTE PTR [esi+0x76]
  401b80:	dec    ebx
  401b81:	and    al,0x78
  401b83:	push   ebx
  401b84:	mov    eax,ds:0xb464e569
  401b89:	lea    edx,[esi+eiz*8-0x5a]
  401b8d:	and    bl,BYTE PTR [ecx-0x3ed46760]
  401b93:	loopne 0x401baa
  401b95:	pop    eax
  401b96:	adc    BYTE PTR [edi],0xc2
  401b99:	sub    DWORD PTR [edi],ebx
  401b9b:	pop    ecx
  401b9c:	das    
  401b9d:	xchg   edx,eax
  401b9e:	pushf  
  401b9f:	sahf   
  401ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ba1:	test   eax,0xa640af69
  401ba6:	fist   DWORD PTR [ebp-0x43]
  401ba9:	inc    ecx
  401baa:	pop    ebx
  401bab:	xor    eax,0x690d8f12
  401bb0:	(bad)  
  401bb1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb3:	dec    ecx
  401bb4:	(bad)  [edx]
  401bb6:	test   BYTE PTR [esi+edi*4],0x8e
  401bba:	or     BYTE PTR [edi+0x61f6fbf9],ch
  401bc0:	pop    esi
  401bc1:	jnp    0x401b49
  401bc3:	mov    eax,ebx
  401bc5:	jp     0x401be9
  401bc7:	je     0x401ba4
  401bc9:	jmp    0x5e33:0xeab4c3bd
  401bd0:	js     0x401c3a
  401bd2:	fwait
  401bd3:	mov    ah,0x50
  401bd5:	sub    DWORD PTR [ebx+ecx*8],esi
  401bd8:	fild   WORD PTR [ebp+0x36]
  401bdb:	xchg   ebx,eax
  401bdc:	adc    BYTE PTR [esi-0x35727f4f],ch
  401be2:	ret    
  401be3:	js     0x401bb4
  401be5:	jg     0x401bb0
  401be7:	xchg   edx,eax
  401be8:	mov    ebp,0xef26d805
  401bed:	into   
  401bee:	aad    0xa4
  401bf0:	xchg   esp,eax
  401bf1:	rcl    BYTE PTR ds:[esp+ebp*2-0x3a],1
  401bf6:	dec    ebx
  401bf7:	(bad)  
  401bf9:	cmp    eax,0xab61331a
  401bfe:	sub    cl,BYTE PTR [ecx]
  401c00:	dec    edi
  401c01:	dec    eax
  401c02:	fmul   st(2),st
  401c04:	xchg   ecx,eax
  401c05:	bound  ebx,QWORD PTR [esi+esi*8-0x97e4964]
  401c0c:	dec    eax
  401c0d:	outs   dx,BYTE PTR ds:[esi]
  401c0e:	test   al,0xbd
  401c10:	sbb    esp,ebp
  401c12:	push   0xcf7e7b5f
  401c17:	add    ch,BYTE PTR [ecx]
  401c19:	sbb    BYTE PTR [edi+0x36a1ebbf],ah
  401c1f:	pop    edi
  401c20:	inc    edi
  401c21:	fcomip st,st(6)
  401c23:	int    0x9a
  401c25:	imul   edi,DWORD PTR [esi-0x4a],0x656b0b85
  401c2c:	inc    esp
  401c2d:	adc    eax,0xe6c99409
  401c32:	jmp    0x797c9216
  401c37:	add    ebp,ebx
  401c39:	inc    edx
  401c3a:	push   ss
  401c3b:	repz sbb ecx,DWORD PTR [eax+0x67]
  401c3f:	pop    ebx
  401c40:	loopne 0x401c86
  401c42:	lds    ebx,FWORD PTR [esp+edi*4]
  401c45:	jge    0x401c16
  401c47:	(bad)  
  401c48:	mov    dl,0x3e
  401c4a:	add    eax,0x84f6f9eb
  401c4f:	clc    
  401c50:	int3   
  401c51:	sub    DWORD PTR [ecx],0xbd8a9861
  401c57:	xor    eax,DWORD PTR [ebp-0x67f2568]
  401c5d:	shr    DWORD PTR [esi],0x61
  401c60:	les    ecx,FWORD PTR [ecx+ebx*4+0x761859b8]
  401c67:	cmp    eax,0xd415a4cb
  401c6c:	daa    
  401c6d:	ret    
  401c6e:	mov    bh,0xad
  401c70:	or     BYTE PTR [edi],dh
  401c72:	mov    ds:0x344f836f,al
  401c77:	das    
  401c78:	ret    0x65f6
  401c7b:	mov    esp,DWORD PTR [eax+0x48]
  401c7e:	jmp    0xbe89:0xb82b1a90
  401c85:	dec    ecx
  401c86:	pop    ebp
  401c87:	jmp    0x401c5a
  401c89:	test   DWORD PTR [esi],ebx
  401c8b:	xchg   edx,eax
  401c8c:	lahf   
  401c8d:	jle    0x401cbe
  401c8f:	call   0xd87a3479
  401c94:	enter  0x14ef,0xa0
  401c98:	sbb    DWORD PTR [edi-0x54077f88],ebx
  401c9e:	and    eax,0xb161c3e4
  401ca3:	in     eax,dx
  401ca4:	cwde   
  401ca5:	lds    ecx,FWORD PTR [eiz*2-0x2eb943c0]
  401cac:	call   0x89b:0xec8b8021
  401cb3:	xchg   ebx,eax
  401cb4:	in     eax,dx
  401cb5:	out    dx,eax
  401cb6:	xor    eax,DWORD PTR [edi+0xd41da3e]
  401cbc:	sbb    DWORD PTR [esi+edi*2-0xd171816],0x12b421d3
  401cc7:	mov    ?,WORD PTR [eax]
  401cc9:	mov    fs,ebx
  401ccb:	out    dx,al
  401ccc:	outs   dx,BYTE PTR ds:[esi]
  401ccd:	dec    edx
  401cce:	out    0xa,eax
  401cd0:	in     eax,0x86
  401cd2:	mov    WORD PTR [ecx+0x69],es
  401cd5:	cmp    DWORD PTR [esi-0x15],0xffffffcd
  401cd9:	ja     0x401cfe
  401cdb:	std    
  401cdc:	sbb    esp,DWORD PTR [ebp*2+0x2e456a5]
  401ce3:	jno    0x401c8c
  401ce5:	jnp    0x401d5c
  401ce7:	inc    ebp
  401ce8:	aad    0xf4
  401cea:	pusha  
  401ceb:	shl    DWORD PTR [ecx+ebp*4],0xe9
  401cef:	gs sti 
  401cf1:	out    0xc,eax
  401cf3:	cdq    
  401cf4:	fisttp WORD PTR [esi+0x11]
  401cf7:	cmc    
  401cf8:	sub    dh,ch
  401cfa:	scas   eax,DWORD PTR es:[edi]
  401cfb:	popf   
  401cfc:	mov    edi,0xa88f86fb
  401d01:	mov    esi,0xe3b4b625
  401d06:	jae    0x401d3f
  401d08:	pop    ebp
  401d09:	fdiv   st,st(5)
  401d0b:	jns    0x401d57
  401d0d:	push   0xf4e5a51d
  401d12:	aas    
  401d13:	sub    DWORD PTR [eax+ecx*1+0x75],0x55
  401d18:	out    dx,al
  401d19:	pusha  
  401d1a:	je     0x401d25
  401d1c:	test   BYTE PTR [eax],dl
  401d1e:	scas   al,BYTE PTR es:[edi]
  401d1f:	inc    ecx
  401d20:	stc    
  401d21:	mov    ecx,0x5236baea
  401d26:	call   0x8704665c
  401d2b:	jmp    0xc3db:0xf935efd1
  401d32:	and    BYTE PTR [ebp-0x2a0ff8a7],cl
  401d38:	dec    esp
  401d3a:	pushw  0xcb95
  401d3e:	mov    dl,0xd9
  401d40:	les    ecx,FWORD PTR [ecx-0x24f660ed]
  401d46:	out    0x1d,al
  401d48:	fwait
  401d49:	and    esi,DWORD PTR [eax+0x40]
  401d4c:	out    dx,eax
  401d4d:	add    esi,DWORD PTR [edx-0x5]
  401d50:	jmp    0xfabd:0xc093c64e
  401d57:	dec    eax
  401d58:	and    eax,DWORD PTR ds:0x14645a70
  401d5e:	adc    dh,ah
  401d60:	xchg   DWORD PTR [ebx-0x71b99adf],edx
  401d66:	shl    BYTE PTR [eax+0x736eba00],1
  401d6c:	nop
  401d6d:	add    esp,DWORD PTR [edi]
  401d6f:	add    al,0xc3
  401d71:	ficom  WORD PTR [eax+0x62]
  401d74:	adc    BYTE PTR [ebp-0x4148a76],ah
  401d7a:	push   ss
  401d7b:	xchg   DWORD PTR [ebp+0xb],ecx
  401d7e:	test   eax,0x2044e5bd
  401d83:	sub    al,ch
  401d85:	pushf  
  401d86:	xor    al,BYTE PTR [ebx]
  401d88:	std    
  401d89:	jle    0x401da6
  401d8b:	adc    esp,DWORD PTR [edi]
  401d8d:	xchg   edi,eax
  401d8e:	pop    edx
  401d8f:	adc    dh,0x6f
  401d92:	ins    BYTE PTR es:[edi],dx
  401d93:	inc    esp
  401d94:	cmc    
  401d95:	mov    cl,0xc3
  401d97:	ss sub al,0xf6
  401d9a:	jns    0x401d97
  401d9c:	mul    DWORD PTR [esi-0x10784408]
  401da2:	fsubr  QWORD PTR [ebx+0xb4d4ff5]
  401da8:	jg     0x401d72
  401daa:	jp     0x401ded
  401dac:	mov    edi,DWORD PTR [edi+0x3]
  401daf:	jmp    0xcc28f70
  401db4:	sub    eax,0x2dfa647f
  401db9:	retf   0x29c5
  401dbc:	iret   
  401dbd:	punpcklbw mm5,mm2
  401dc0:	les    esp,FWORD PTR [ebx+0x64]
  401dc3:	xor    eax,0xf5900e66
  401dc8:	adc    ecx,esp
  401dca:	test   eax,0x593f6447
  401dcf:	xor    BYTE PTR [eax+0x6e6d4a27],ch
  401dd5:	xor    BYTE PTR [eax],dl
  401dd7:	pop    es
  401dd8:	inc    edx
  401dd9:	dec    esi
  401dda:	mov    al,ds:0x242aaadf
  401ddf:	add    BYTE PTR [ecx-0x22a8b50e],dl
  401de5:	mov    ah,0xb6
  401de7:	cmp    esi,ebp
  401de9:	mov    edi,0xd985295a
  401dee:	add    DWORD PTR [edi],0x66
  401df1:	fadd   DWORD PTR [esi+0x11]
  401df4:	(bad)  
  401df5:	pop    ebx
  401df6:	or     al,0x85
  401df8:	jp     0x401e39
  401dfa:	repz hlt 
  401dfc:	jae    0x401da4
  401dfe:	push   esp
  401dff:	adc    eax,0xce141c1b
  401e04:	fwait
  401e05:	mov    esi,edx
  401e07:	jmp    0xabdd:0xe2be94e2
  401e0e:	push   ebp
  401e0f:	test   al,0x64
  401e11:	data16 lods al,BYTE PTR ds:[esi]
  401e13:	sbb    BYTE PTR [esi-0x23],al
  401e16:	out    dx,al
  401e17:	inc    eax
  401e18:	data16 cs das 
  401e1b:	fisubr DWORD PTR ds:0xe055d6e1
  401e21:	pop    ds
  401e22:	jl     0x401e45
  401e24:	sub    eax,0xa72cbc81
  401e29:	sti    
  401e2a:	clc    
  401e2b:	call   0xb6e1ee68
  401e30:	(bad)  
  401e31:	push   es
  401e32:	push   cs
  401e33:	fnsetpm(287 only) 
  401e35:	arpl   WORD PTR [ecx-0x3c337bd4],dx
  401e3b:	mov    dl,0x8a
  401e3d:	cmp    eax,0x6ebf5906
  401e42:	nop
  401e43:	xchg   edi,eax
  401e44:	xchg   DWORD PTR [esi*4-0x760c0c05],esp
  401e4b:	cmp    DWORD PTR [edi+ecx*1+0x7096e827],ebx
  401e52:	adc    DWORD PTR [edx-0x1b],eax
  401e55:	retf   0x13ef
  401e58:	push   esi
  401e59:	mov    dl,0x38
  401e5b:	pop    es
  401e5c:	and    dh,BYTE PTR [esi-0x4a2aae9b]
  401e62:	icebp  
  401e63:	ds shl BYTE PTR es:[edx],0x8
  401e68:	stc    
  401e69:	and    bl,BYTE PTR [ebx-0x1]
  401e6c:	stos   BYTE PTR es:[edi],al
  401e6d:	adc    eax,0xc5b8adc7
  401e72:	fld    TBYTE PTR [edx+0xc798089]
  401e78:	ret    0x8c96
  401e7b:	pop    ecx
  401e7c:	mov    cl,0x39
  401e7e:	sbb    BYTE PTR [ebp-0x18],cl
  401e81:	ja     0x401ee7
  401e83:	jno    0x401e1f
  401e85:	inc    edi
  401e86:	sbb    DWORD PTR [ecx-0x611dafa6],ebx
  401e8c:	rcr    BYTE PTR [edi+0x65],1
  401e8f:	packssdw mm7,QWORD PTR [esi]
  401e92:	or     DWORD PTR [esi+edi*2-0x63],edx
  401e96:	cmp    esp,esp
  401e98:	aas    
  401e99:	clc    
  401e9a:	mov    dh,0xf7
  401e9c:	xor    dl,BYTE PTR [ebx-0x13]
  401e9f:	mov    ebp,0x593fb425
  401ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ea5:	aad    0x4c
  401ea7:	js     0x401ee5
  401ea9:	aam    0xac
  401eab:	jle    0x401e42
  401ead:	ins    BYTE PTR es:[edi],dx
  401eae:	cli    
  401eaf:	cdq    
  401eb0:	lock sar DWORD PTR [esi],1
  401eb3:	cmp    DWORD PTR [edx+0x23],eax
  401eb6:	aaa    
  401eb7:	jp     0x401f20
  401eb9:	enter  0x414e,0xa9
  401ebd:	nop
  401ebe:	jns    0x401eb6
  401ec0:	pop    eax
  401ec1:	mov    al,ds:0xab9c8906
  401ec6:	sbb    dh,dh
  401ec8:	mov    edi,0x2cb2d4bb
  401ecd:	cmp    DWORD PTR [eax],ebp
  401ecf:	mov    ecx,0xf43b0af4
  401ed4:	int    0x8d
  401ed6:	std    
  401ed7:	jnp    0x401e80
  401ed9:	cmp    edi,DWORD PTR [eax-0x22]
  401edc:	cdq    
  401edd:	mov    eax,0xef593bab
  401ee2:	sub    edi,DWORD PTR [edx]
  401ee4:	jo     0x401f0c
  401ee6:	mov    eax,0x4d7bf6aa
  401eeb:	mov    ds:0xda24a3bc,al
  401ef0:	cmp    ecx,ecx
  401ef2:	mov    DWORD PTR [ebx],ecx
  401ef4:	test   ebx,eax
  401ef6:	cdq    
  401ef7:	in     al,0x78
  401ef9:	pop    ebp
  401efa:	mov    BYTE PTR [ebx+0x67],bl
  401efd:	pop    ss
  401efe:	xchg   BYTE PTR [ebp-0x2a4f1df1],bh
  401f04:	popa   
  401f05:	add    BYTE PTR [ebp+0x6ddae3de],ch
  401f0b:	stos   BYTE PTR es:[edi],al
  401f0c:	xor    edi,esp
  401f0e:	int    0x82
  401f10:	push   ebp
  401f11:	pop    edi
  401f12:	or     ebx,DWORD PTR [ebx-0x735f4a24]
  401f18:	(bad)  
  401f1b:	cmp    edi,esi
  401f1d:	pop    edx
  401f1e:	inc    edx
  401f1f:	std    
  401f20:	mov    ebx,edx
  401f22:	or     eax,0x9762628d
  401f27:	aas    
  401f28:	inc    esi
  401f29:	div    DWORD PTR [esi-0x192d1f4a]
  401f2f:	not    ecx
  401f31:	sbb    al,0xb6
  401f33:	sbb    DWORD PTR [edx+esi*4-0x6a59e3f],esi
  401f3a:	fild   DWORD PTR [ebp+0x38]
  401f3d:	pop    eax
  401f3e:	std    
  401f3f:	dec    eax
  401f40:	mov    bh,0x99
  401f42:	sbb    cl,BYTE PTR [esi]
  401f44:	cs jo  0x401fa0
  401f47:	aam    0xf4
  401f49:	add    al,0x52
  401f4b:	cli    
  401f4c:	scas   al,BYTE PTR es:[edi]
  401f4d:	cmc    
  401f4e:	push   ecx
  401f4f:	push   cs
  401f50:	and    eax,eax
  401f52:	into   
  401f53:	push   ds
  401f54:	add    DWORD PTR [edx+eiz*4-0x1f9c72b3],0xffffff8b
  401f5c:	cmp    DWORD PTR [ebp+0x42],ebp
  401f5f:	pusha  
  401f60:	dec    ebx
  401f61:	push   ebx
  401f62:	sub    DWORD PTR [ebp-0x5f],ebx
  401f65:	lahf   
  401f66:	add    al,0x7b
  401f68:	sahf   
  401f69:	test   eax,0x3dc15a2c
  401f6e:	dec    ecx
  401f6f:	mov    ah,0x7d
  401f71:	hlt    
  401f72:	rcr    DWORD PTR [eax+0x39b7be4],cl
  401f78:	xor    BYTE PTR [edi-0x19],dh
  401f7b:	or     esi,DWORD PTR [ebx]
  401f7d:	outs   dx,DWORD PTR ds:[esi]
  401f7e:	mov    esp,0x633f6063
  401f83:	(bad)  
  401f85:	pop    ecx
  401f86:	push   cs
  401f87:	int3   
  401f88:	pop    ss
  401f89:	or     cl,BYTE PTR ds:0xc67389c1
  401f8f:	jp     0x401f26
  401f91:	mov    cr6,edx
  401f94:	or     edi,DWORD PTR [ebx-0x20]
  401f97:	add    BYTE PTR [ecx],ch
  401f99:	pop    eax
  401f9a:	ja     0x401fb9
  401f9c:	push   ecx
  401f9d:	outs   dx,BYTE PTR ds:[esi]
  401f9e:	jb     0x402000
  401fa0:	(bad)  
  401fa1:	ficom  WORD PTR [edx]
  401fa3:	out    dx,al
  401fa4:	aam    0xe3
  401fa6:	pop    eax
  401fa7:	xchg   BYTE PTR [ebx-0x6d],dl
  401faa:	popf   
  401fab:	xor    eax,0x6d4cf812
  401fb0:	ret    0x4ada
  401fb3:	add    eax,DWORD PTR [edi-0xb03866f]
  401fb9:	sub    al,0xee
  401fbb:	jo     0x401f4f
  401fbd:	(bad)  
  401fbe:	(bad)  
  401fbf:	jl     0x40203d
  401fc1:	jbe    0x401fa4
  401fc3:	add    ch,BYTE PTR [ebx+0x24]
  401fc6:	jmp    0xc8a5:0x145a4e20
  401fcd:	retf   
  401fce:	mov    bh,0x5f
  401fd0:	xor    BYTE PTR [edx-0x26f902e2],bl
  401fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fd7:	pushf  
  401fd8:	sbb    DWORD PTR [ebp+0x67],0xb7aa12d5
  401fdf:	mov    ebx,0xce3419d9
  401fe4:	dec    esi
  401fe5:	fnstenv [ebx]
  401fe7:	in     al,dx
  401fe8:	or     BYTE PTR [ebx-0xb],bl
  401feb:	xor    BYTE PTR [eax],ch
  401fed:	xor    DWORD PTR [esi-0x66e7470b],esi
  401ff3:	(bad)  
  401ff4:	mov    esi,0xa5d4a0be
  401ff9:	dec    ecx
  401ffa:	(bad)  
  401ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ffc:	cs aas 
  401ffe:	pop    ecx
  401fff:	pop    es
  402000:	jae    0x40201b
  402002:	mov    eax,0xb87cdb19
  402007:	cld    
  402008:	outs   dx,DWORD PTR ds:[esi]
  402009:	(bad)  [eax-0x54]
  40200c:	add    edi,DWORD PTR ds:0xa1ea5bce
  402012:	mov    cl,0x18
  402014:	sub    eax,0x437ded3c
  402019:	je     0x402027
  40201b:	mov    esi,0xc8d66836
  402020:	in     al,0x82
  402022:	test   eax,0x908afde7
  402027:	inc    edi
  402028:	cli    
  402029:	push   esi
  40202a:	ret    
  40202b:	addr16 jnp 0x40207f
  40202e:	mov    bl,0x1f
  402030:	lods   eax,DWORD PTR ds:[esi]
  402031:	daa    
  402032:	ins    DWORD PTR es:[edi],dx
  402033:	enter  0x576f,0xaa
  402037:	leave  
  402038:	pop    edx
  402039:	mov    ecx,DWORD PTR [eax-0x68]
  40203c:	and    dh,bh
  40203e:	out    0xb2,eax
  402040:	(bad)  
  402042:	pcmpgtd mm1,QWORD PTR [ebx]
  402045:	sub    BYTE PTR [edx-0x2faa4d1f],al
  40204b:	jecxz  0x401fda
  40204d:	enter  0x8497,0xd1
  402051:	pop    edx
  402052:	adc    BYTE PTR [ebp-0x5c],bh
  402055:	stos   DWORD PTR es:[edi],eax
  402056:	test   eax,0x9df22536
  40205b:	gs or  al,0xee
  40205e:	lds    eax,FWORD PTR [esi]
  402060:	xchg   edx,eax
  402061:	aam    0x27
  402063:	xor    BYTE PTR [ecx],bl
  402065:	inc    esi
  402066:	popa   
  402067:	cmc    
  402068:	idiv   ebx
  40206a:	xchg   ecx,eax
  40206b:	mov    dh,0x1
  40206d:	stos   DWORD PTR es:[edi],eax
  40206e:	sub    DWORD PTR [esi],ebx
  402070:	xchg   DWORD PTR [ebp+0x54ef3fd6],eax
  402076:	jnp    0x4020ef
  402078:	out    0xc3,al
  40207a:	into   
  40207b:	(bad)
  40207f:	or     cl,BYTE PTR [ebx+edi*4]
  402082:	dec    edi
  402083:	cmp    BYTE PTR [edi-0x4e],bh
  402086:	mov    BYTE PTR [edi-0x36f751ba],ch
  40208c:	mov    DWORD PTR [ebp+0x681db03f],esp
  402092:	pop    ecx
  402093:	mov    bl,0x78
  402095:	int3   
  402096:	and    edx,DWORD PTR [edi+0x5e]
  402099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40209a:	leave  
  40209b:	sub    eax,0xf1b244dd
  4020a0:	and    DWORD PTR [ebp+0x19d89080],esp
  4020a6:	(bad)  
  4020a7:	fucomp st(1)
  4020a9:	xor    edx,esp
  4020ab:	dec    edx
  4020ac:	repz pop edi
  4020ae:	jl     0x402078
  4020b0:	xchg   esp,eax
  4020b1:	in     eax,dx
  4020b2:	sbb    ch,BYTE PTR [eax+ecx*2]
  4020b5:	sahf   
  4020b6:	popa   
  4020b7:	popa   
  4020b8:	ret    0x7345
  4020bb:	sbb    eax,0x85fec8e5
  4020c0:	inc    eax
  4020c1:	sub    eax,0x6d4a5a5c
  4020c6:	jge    0x402103
  4020c8:	or     ecx,DWORD PTR [esi]
  4020ca:	call   0xa476:0xb0f3a4fd
  4020d1:	jp     0x402100
  4020d3:	loope  0x4020d8
  4020d5:	inc    esp
  4020d6:	add    al,0xed
  4020d8:	dec    ebp
  4020d9:	hlt    
  4020da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020db:	test   BYTE PTR [edi],0xc3
  4020de:	and    esi,DWORD PTR [esi]
  4020e0:	sbb    esi,DWORD PTR [edi-0x1a62630f]
  4020e6:	mov    esi,0x14b5f79f
  4020eb:	jo     0x4020e9
  4020ed:	and    ebx,0x59
  4020f0:	mov    bl,0x51
  4020f2:	jle    0x4020fd
  4020f4:	inc    ebp
  4020f5:	out    0x94,al
  4020f7:	and    al,0xb9
  4020f9:	scas   al,BYTE PTR es:[edi]
  4020fa:	lahf   
  4020fb:	aad    0xc9
  4020fd:	push   eax
  4020fe:	out    dx,al
  4020ff:	iret   
  402100:	push   edx
  402101:	or     edi,DWORD PTR [eax-0x11b94ea2]
  402107:	mov    ds:0xadb928d4,al
  40210c:	cdq    
  40210d:	fdivr  DWORD PTR [ecx+esi*2]
  402110:	xchg   edi,eax
  402111:	sahf   
  402112:	mov    ebx,0xe8bd3246
  402117:	cs aas 
  402119:	mov    bl,BYTE PTR [eax+0x4]
  40211c:	das    
  40211d:	cli    
  40211e:	cmp    eax,0xbd85281d
  402123:	mov    cl,0xfa
  402125:	jb     0x4020cf
  402127:	rol    BYTE PTR [ecx+0x3f],cl
  40212a:	out    0x34,eax
  40212c:	jp     0x402158
  40212e:	inc    esp
  40212f:	int    0xfa
  402131:	xchg   ebx,eax
  402132:	loop   0x40210f
  402134:	add    DWORD PTR [ebx],edi
  402136:	inc    edi
  402137:	mov    ah,0x15
  402139:	jp     0x402179
  40213b:	or     dh,BYTE PTR es:[eax+0x62bac9a]
  402142:	fisubr DWORD PTR [edi-0x52674691]
  402148:	xlat   BYTE PTR ds:[ebx]
  402149:	pop    esp
  40214a:	sub    al,0xff
  40214c:	cvtdq2ps xmm6,XMMWORD PTR [esi]
  40214f:	rcr    DWORD PTR [eax-0x1e],0x1
  402153:	jp     0x4020e1
  402155:	or     BYTE PTR [ecx+0x11bfae9f],cl
  40215b:	lea    esp,[ecx+edx*2]
  40215e:	imul   ebx,DWORD PTR [ecx+0x7],0xaf220c69
  402165:	push   edx
  402166:	popf   
  402167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402168:	clc    
  402169:	push   esi
  40216a:	xchg   edx,eax
  40216b:	in     al,0x7d
  40216d:	data16 mov al,0xe1
  402170:	pop    ss
  402171:	sbb    ah,BYTE PTR [eax-0x382816a5]
  402177:	mov    ebp,0x32d16ce9
  40217c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40217d:	or     al,BYTE PTR [esi-0x17]
  402180:	sbb    bh,BYTE PTR [ebx-0x4fd7d4e7]
  402186:	adc    al,0xdd
  402188:	mov    ecx,0x995f994f
  40218d:	add    al,0x26
  40218f:	imul   esp,DWORD PTR [edx-0x68],0x217abcda
  402196:	jnp    0x402128
  402198:	je     0x40218b
  40219a:	mov    ds:0x364b3211,eax
  40219f:	xchg   edx,eax
  4021a0:	dec    ebx
  4021a1:	jecxz  0x402174
  4021a3:	stc    
  4021a4:	sbb    edx,DWORD PTR ds:0x22e7e545
  4021aa:	dec    eax
  4021ab:	dec    ebx
  4021ac:	add    ebp,edi
  4021ae:	mov    esp,0xd65b7ad7
  4021b3:	sub    BYTE PTR [ecx],0x37
  4021b6:	popa   
  4021b7:	not    esi
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	std    
  4021bb:	push   0x6
  4021bd:	jp     0x4021ac
  4021bf:	(bad)  
  4021c0:	test   al,0x51
  4021c2:	stos   DWORD PTR es:[edi],eax
  4021c3:	clc    
  4021c4:	sub    eax,0x679ebd9b
  4021c9:	ds retf 0x8db1
  4021cd:	(bad)  
  4021ce:	cld    
  4021cf:	les    ebp,FWORD PTR ds:0x7011f616
  4021d5:	cli    
  4021d6:	cld    
  4021d7:	pop    es
  4021d8:	test   al,0x1f
  4021da:	lock xchg DWORD PTR ds:0xcd0360af,esi
  4021e1:	or     ch,BYTE PTR [eax-0x19]
  4021e4:	in     eax,0x2c
  4021e6:	ins    BYTE PTR es:[edi],dx
  4021e7:	fadd   DWORD PTR [esi+0xf0766bd]
  4021ed:	mov    ebx,0x9f268941
  4021f2:	inc    esp
  4021f3:	jae    0x402244
  4021f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021f6:	scas   eax,DWORD PTR es:[edi]
  4021f7:	push   0x3
  4021f9:	ins    DWORD PTR es:[edi],dx
  4021fa:	std    
  4021fb:	xor    al,ch
  4021fd:	(bad)  
  4021fe:	xor    ebp,edx
  402200:	mov    ebx,eax
  402202:	mov    bh,0x1d
  402204:	xor    eax,DWORD PTR [ecx+ecx*4+0x55154f39]
  40220b:	mov    bl,ah
  40220d:	push   ebx
  40220e:	nop
  40220f:	lahf   
  402210:	repnz es stc 
  402213:	aaa    
  402214:	sbb    ecx,DWORD PTR [edi-0x721b275]
  40221a:	and    al,0xcd
  40221c:	or     ebx,edi
  40221e:	daa    
  40221f:	cld    
  402220:	sar    BYTE PTR [edx],0x1
  402223:	clc    
  402224:	fistp  QWORD PTR [ebx+0x60]
  402227:	daa    
  402228:	and    DWORD PTR [esi+0x49],0x63955ad6
  40222f:	push   edi
  402230:	fwait
  402231:	lock loop 0x4021f5
  402234:	stos   DWORD PTR es:[edi],eax
  402235:	sub    al,0xa7
  402237:	mov    bl,0xb5
  402239:	push   eax
  40223a:	mov    eax,ds:0xcfac709d
  40223f:	dec    edi
  402240:	iret   
  402241:	or     DWORD PTR es:[ebp+0x28],ebp
  402245:	cmp    DWORD PTR ss:[esi-0x47],edx
  402249:	push   cs
  40224a:	ja     0x4022c9
  40224c:	add    DWORD PTR [edi-0x223c3aca],ecx
  402252:	mov    eax,0xd26c8658
  402257:	imul   ebp,edx,0xffffffbe
  40225a:	mov    dh,0x6c
  40225c:	addr16 and eax,0xf113532e
  402262:	sbb    bh,ch
  402264:	adc    esi,DWORD PTR [esi+0x4b]
  402267:	add    ecx,ebp
  402269:	lock mov WORD PTR [edi+ebp*2+0x46],es
  40226e:	retf   0x76db
  402271:	dec    ebp
  402272:	jle    0x4021f7
  402274:	dec    BYTE PTR [ecx+0x1b6416e7]
  40227a:	adc    al,0x73
  40227c:	mov    ch,0x7f
  40227e:	mov    eax,DWORD PTR [edi+0x76a85ed7]
  402284:	pop    eax
  402285:	sub    al,BYTE PTR [esi]
  402287:	push   ecx
  402288:	jae    0x402294
  40228a:	inc    ecx
  40228b:	inc    esi
  40228c:	xchg   ebx,eax
  40228d:	mov    ah,0xf
  40228f:	or     BYTE PTR [esi+0x59],dl
  402292:	out    0x3b,al
  402294:	icebp  
  402295:	ss or  eax,0x6ef3b894
  40229b:	adc    eax,0x45e14e67
  4022a0:	adc    dh,BYTE PTR [edi]
  4022a2:	(bad)  
  4022a3:	xor    BYTE PTR [eax-0x659320d8],al
  4022a9:	push   cs
  4022aa:	mov    esp,0x38ae70b8
  4022af:	push   es
  4022b0:	fwait
  4022b1:	cmp    eax,0x2834d83b
  4022b6:	mov    eax,ds:0x41f69335
  4022bb:	sub    al,0x8d
  4022bd:	jg     0x4022c3
  4022bf:	cld    
  4022c0:	push   esp
  4022c1:	mov    ch,0xca
  4022c3:	mov    WORD PTR [edi-0x560c3f4a],?
  4022c9:	outs   dx,DWORD PTR ds:[esi]
  4022ca:	fwait
  4022cb:	popf   
  4022cc:	in     al,0x9e
  4022ce:	test   DWORD PTR [esi+0x38],esp
  4022d1:	or     DWORD PTR [esi],ebp
  4022d3:	fisttp DWORD PTR [edi]
  4022d5:	pop    edx
  4022d6:	jg     0x4022a3
  4022d8:	xchg   ebx,eax
  4022d9:	mov    ds,WORD PTR [edi-0x4ba9e90c]
  4022df:	ds push ecx
  4022e1:	mov    bh,0x64
  4022e3:	sbb    DWORD PTR [ebp+0x75],esp
  4022e6:	sbb    ebp,ebx
  4022e8:	mov    bl,0xde
  4022ea:	dec    eax
  4022eb:	xor    DWORD PTR [ecx-0x4cb49b35],ebp
  4022f1:	mov    db4,edx
  4022f4:	mov    ecx,0x5675b03d
  4022f9:	cmp    al,0x1d
  4022fb:	add    al,dl
  4022fd:	inc    esi
  4022fe:	pushf  
  4022ff:	adc    ah,BYTE PTR [ecx]
  402301:	aad    0x30
  402303:	adc    eax,esp
  402305:	xchg   ebx,eax
  402306:	push   ss
  402307:	jle    0x4022b3
  402309:	jp     0x4022fc
  40230b:	push   esi
  40230c:	dec    eax
  40230d:	and    al,dh
  40230f:	std    
  402310:	jl     0x40232e
  402312:	popf   
  402313:	dec    eax
  402314:	outs   dx,BYTE PTR ds:[esi]
  402315:	fcmovnbe st,st(6)
  402317:	push   ecx
  402318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402319:	mov    al,ds:0xe5cd68cd
  40231e:	jecxz  0x40233a
  402320:	push   0x3ae5d807
  402325:	or     bh,BYTE PTR [esi+eiz*1-0x14]
  402329:	mov    eax,ds:0x6e14c7d7
  40232e:	rep lods eax,DWORD PTR ds:[esi]
  402330:	cs cmp eax,0xf5a2c405
  402336:	repnz or al,0x2f
  402339:	xor    bl,BYTE PTR ds:0xb3b0b8ec
  40233f:	inc    edx
  402340:	mov    esp,0x906ddc1c
  402345:	adc    eax,0x8736e711
  40234a:	dec    ecx
  40234b:	dec    esp
  40234c:	dec    edi
  40234d:	sbb    al,BYTE PTR ds:0x53aa420e
  402353:	mov    ds:0xdd8f97a8,al
  402358:	lods   eax,DWORD PTR ds:[esi]
  402359:	test   BYTE PTR [ebp-0x202b46d9],dl
  40235f:	out    0xa3,al
  402361:	das    
  402362:	inc    ebp
  402363:	xchg   ebx,eax
  402364:	mov    WORD PTR [edi],es
  402366:	mov    bl,0x77
  402368:	shr    DWORD PTR ds:0xb6ae8805,1
  40236e:	pop    ds
  40236f:	test   DWORD PTR [esi-0x23d3d105],0x88f0f284
  402379:	pop    ebx
  40237a:	in     al,0x98
  40237c:	dec    esp
  40237d:	das    
  40237e:	iret   
  40237f:	leave  
  402380:	or     esi,DWORD PTR [ebx]
  402382:	mov    cl,0x90
  402384:	in     eax,dx
  402385:	pushf  
  402386:	xchg   ebp,eax
  402387:	mov    ?,WORD PTR [edx-0xb374fa4]
  40238d:	jmp    0xceb9:0x41820b6e
  402394:	call   0x26325d3c
  402399:	cdq    
  40239a:	adc    bh,BYTE PTR [eax-0x3b]
  40239d:	mov    esi,0x11a175c5
  4023a2:	ins    BYTE PTR es:[edi],dx
  4023a3:	int    0x96
  4023a5:	add    BYTE PTR [ebp+0x5e0942b4],bh
  4023ab:	jb     0x40241e
  4023ad:	mov    al,0x1b
  4023af:	fistp  DWORD PTR [edx-0x17e12995]
  4023b5:	imul   BYTE PTR [edi-0x4bfd118c]
  4023bb:	adc    dh,BYTE PTR [edx+0x3e]
  4023be:	mov    cl,0xad
  4023c0:	mov    fs,WORD PTR [edi+ebx*1]
  4023c3:	shl    DWORD PTR [edx+0x22],1
  4023c6:	sub    ebp,DWORD PTR [edi]
  4023c8:	fdiv   QWORD PTR [ebp-0x66823456]
  4023ce:	aam    0xf2
  4023d0:	cmp    eax,0x23c32bdb
  4023d5:	out    0xb4,eax
  4023d7:	(bad)  
  4023d8:	jmp    0x7b96:0x608cbc3b
  4023df:	popa   
  4023e0:	cld    
  4023e1:	mov    es,WORD PTR [esi-0x5ba2951a]
  4023e7:	push   es
  4023e8:	dec    eax
  4023e9:	or     eax,0xed063456
  4023ee:	adc    BYTE PTR [esi+0x15],0xf2
  4023f2:	mov    ebx,0x20d5328
  4023f7:	jge    0x40243f
  4023f9:	pop    eax
  4023fa:	xchg   ecx,eax
  4023fb:	sahf   
  4023fc:	loop   0x402452
  4023fe:	das    
  4023ff:	xor    BYTE PTR [ebx+0x2f],bl
  402402:	or     esp,DWORD PTR [ebp+0x15]
  402405:	or     al,0x60
  402407:	push   es
  402408:	jb     0x40244d
  40240a:	adc    edi,DWORD PTR [ebx-0x59]
  40240d:	add    al,BYTE PTR [ecx-0x1a]
  402410:	push   0xffffff9e
  402412:	add    DWORD PTR [edi+eax*2+0x661f560c],ebp
  402419:	lock jno 0x4023b1
  40241c:	mov    esi,0x3ec0d01c
  402421:	and    DWORD PTR [edi+0x4c],edi
  402424:	adc    BYTE PTR [edx+0x3],bh
  402427:	btr    DWORD PTR [edi-0xd],edi
  40242b:	pushf  
  40242c:	adc    al,0x6c
  40242e:	out    0x5d,al
  402430:	xor    ebp,esp
  402432:	jmp    0xbffa006
  402437:	rcl    BYTE PTR [ebp-0x30],cl
  40243a:	fs jg  0x40249c
  40243d:	sbb    bh,BYTE PTR [ebp+0x9d2eeb4]
  402443:	xchg   esp,eax
  402444:	jge    0x4023ec
  402446:	inc    ecx
  402447:	inc    esp
  402448:	es jl  0x4023d4
  40244b:	mov    dh,0x67
  40244d:	dec    edi
  40244e:	pop    edx
  40244f:	bnd jb 0x4024c1
  402452:	add    edx,DWORD PTR [edx-0x23]
  402455:	lea    ecx,[edi-0x7ae8b46]
  40245b:	pop    edx
  40245c:	pop    ebx
  40245d:	mov    edx,0x2f0eee81
  402462:	imul   edx,DWORD PTR [eax-0x20],0xffffff9c
  402466:	mov    ds:0x8d0a5df6,eax
  40246b:	dec    esi
  40246c:	test   eax,0x6c338bbb
  402471:	in     al,0x12
  402473:	pop    es
  402474:	push   0x7f
  402476:	test   BYTE PTR [edi+0x46],cl
  402479:	xchg   edi,eax
  40247a:	adc    DWORD PTR [esi+0x46],0x3ecb3f86
  402481:	pop    ebp
  402482:	mov    ecx,0xe59538f3
  402487:	fwait
  402488:	or     edi,DWORD PTR [ebp+0x4f]
  40248b:	hlt    
  40248c:	vrcpss xmm7,xmm3,DWORD PTR [eax]
  402490:	and    DWORD PTR [ebp+0x73863ee3],eax
  402496:	push   edi
  402497:	pushf  
  402498:	push   0x7c
  40249a:	push   esp
  40249b:	arpl   WORD PTR [esi+0x533bbf97],si
  4024a1:	aad    0xeb
  4024a3:	ret    0x8822
  4024a6:	mov    cs,WORD PTR [edi]
  4024a8:	(bad)  
  4024a9:	mov    ds,WORD PTR [edx+0x44]
  4024ac:	div    DWORD PTR [edi-0x27]
  4024af:	jmp    0x40248b
  4024b1:	xor    BYTE PTR [eax+0x4a13e15c],al
  4024b7:	sbb    al,0xf1
  4024b9:	mov    cs,esp
  4024bb:	jns    0x402474
  4024bd:	mov    esi,0xd355449e
  4024c2:	int    0x38
  4024c4:	cmp    ebp,DWORD PTR [esi+ebx*8+0x4d617fe]
  4024cb:	aad    0x83
  4024cd:	fadd   QWORD PTR [eax+0x1f]
  4024d0:	nop
  4024d1:	idiv   BYTE PTR [ebx]
  4024d3:	into   
  4024d4:	pop    edx
  4024d5:	std    
  4024d6:	inc    esp
  4024d7:	les    ebx,FWORD PTR [ecx-0x3b676df6]
  4024dd:	sahf   
  4024de:	ins    DWORD PTR es:[edi],dx
  4024df:	jmp    0x40253a
  4024e1:	popf   
  4024e2:	inc    eax
  4024e3:	cld    
  4024e4:	dec    esi
  4024e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024e6:	mov    BYTE PTR [esi-0x51f7dc2e],dh
  4024ec:	adc    dh,ah
  4024ee:	dec    edx
  4024ef:	fwait
  4024f0:	out    dx,eax
  4024f1:	xor    bh,BYTE PTR [ecx]
  4024f3:	xchg   esi,eax
  4024f4:	xchg   edx,eax
  4024f6:	mov    DWORD PTR [eax],ebx
  4024f8:	lods   eax,DWORD PTR ds:[esi]
  4024f9:	inc    ebp
  4024fa:	push   ebp
  4024fb:	lea    esi,[edi]
  4024fd:	push   edi
  4024fe:	pop    edx
  4024ff:	add    eax,ebp
  402501:	xor    eax,0x13283ab8
  402506:	push   ebx
  402507:	push   0x601fb11
  40250c:	xchg   ebx,eax
  40250d:	add    eax,0x5ae60096
  402512:	call   0x92f001ab
  402517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402518:	(bad)  
  402519:	sahf   
  40251a:	and    BYTE PTR [ebx],bh
  40251c:	inc    esp
  40251d:	xlat   BYTE PTR ds:[ebx]
  40251e:	push   0xce3ed0d4
  402523:	jle    0x4024c4
  402525:	popf   
  402526:	mov    esi,DWORD PTR [edx]
  402528:	cmp    bh,BYTE PTR [edi]
  40252a:	adc    eax,0x91a449fb
  40252f:	sbb    al,0x5
  402531:	push   esi
  402532:	mov    ah,dh
  402534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402535:	jae    0x40251d
  402537:	mov    esp,0xe94510fa
  40253c:	bnd jno 0x402585
  40253f:	cmp    al,0x67
  402541:	sbb    BYTE PTR [eax+edi*8],bl
  402544:	es ret 0x6a23
  402548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402549:	xor    DWORD PTR [eax-0x6163a4d8],edi
  40254f:	fadd   QWORD PTR [edi+0x11]
  402552:	sbb    eax,0x23f15e2e
  402557:	mov    ebp,0x544553ed
  40255c:	ins    BYTE PTR es:[edi],dx
  40255d:	inc    edx
  40255e:	test   DWORD PTR [eax],esp
  402560:	out    0x6e,eax
  402562:	jl     0x40259c
  402564:	into   
  402565:	mov    esp,0xab6a1a07
  40256a:	mov    esp,edi
  40256c:	xchg   DWORD PTR [ebp-0xd7cef92],ebx
  402572:	std    
  402573:	pop    ebp
  402574:	jp     0x4025b9
  402576:	xchg   edi,eax
  402577:	out    0xaf,al
  402579:	neg    DWORD PTR [eax+0x555f12c7]
  40257f:	push   es
  402580:	mov    bh,0x38
  402582:	(bad)  
  402583:	daa    
  402584:	inc    ecx
  402585:	lea    edx,[eax-0x2f3a8f62]
  40258b:	fst    QWORD PTR [ebp+0x18]
  40258e:	sbb    BYTE PTR [ebx],dl
  402590:	cmp    al,BYTE PTR [esi+ecx*4]
  402593:	mov    dh,0x5c
  402595:	arpl   sp,di
  402597:	lods   al,BYTE PTR ds:[esi]
  402598:	lods   al,BYTE PTR ds:[esi]
  402599:	in     al,dx
  40259a:	nop
  40259b:	repnz pop ss
  40259d:	mov    esi,0xb1882b5a
  4025a2:	mov    dh,BYTE PTR [ebp+0xc]
  4025a5:	mov    DWORD PTR [edi+0x42],esp
  4025a8:	cmp    bh,BYTE PTR [esi+0x2ca59200]
  4025ae:	ins    DWORD PTR es:[edi],dx
  4025af:	add    BYTE PTR [ebx],cl
  4025b1:	stos   BYTE PTR es:[edi],al
  4025b2:	mov    ds:0x6867112c,eax
  4025b7:	outs   dx,BYTE PTR ds:[esi]
  4025b8:	mov    ebx,0x92913852
  4025bd:	or     esi,DWORD PTR [edx+0x4ca2543f]
  4025c3:	jmp    0x4080:0xd9c594ca
  4025ca:	jne    0x402563
  4025cc:	ss ror edi,1
  4025cf:	in     al,dx
  4025d0:	sbb    al,BYTE PTR [ebp-0x1c7259d6]
  4025d6:	outs   dx,DWORD PTR ds:[esi]
  4025d7:	adc    ebp,0x66f29920
  4025dd:	out    0xb9,eax
  4025df:	sub    dh,bl
  4025e1:	out    dx,al
  4025e2:	dec    esp
  4025e3:	sbb    al,0x4b
  4025e5:	sub    DWORD PTR [ecx*8+0x485ccb96],0x11
  4025ed:	pop    edx
  4025ee:	jmp    0xce16:0xf1e95ac
  4025f5:	jmp    0x4025f4
  4025f7:	inc    esp
  4025f8:	inc    ebp
  4025f9:	jg     0x40266f
  4025fb:	test   al,0x15
  4025fd:	jnp    0x40262a
  4025ff:	and    DWORD PTR [ebx+0x1e],edi
  402602:	stos   BYTE PTR es:[edi],al
  402603:	or     al,0x90
  402605:	fidiv  DWORD PTR [eax+0x31fcd5fb]
  40260b:	dec    eax
  40260c:	shl    esp,0xb0
  40260f:	add    DWORD PTR cs:[edi+edx*4-0x3e],esp
  402614:	xor    bl,BYTE PTR ds:0xf7c443ff
  40261a:	rcr    al,1
  40261c:	out    dx,al
  40261d:	clc    
  40261e:	inc    esp
  40261f:	adc    bh,BYTE PTR [edx-0x7eac49a]
  402625:	push   ss
  402626:	int3   
  402627:	pop    ss
  402628:	jne    0x402672
  40262a:	js     0x402691
  40262c:	push   esi
  40262d:	shl    BYTE PTR [ecx+0x3ea89f83],cl
  402633:	fnstenv [edi-0x13b3102f]
  402639:	pop    ebp
  40263a:	test   al,0xa3
  40263c:	or     ebp,esi
  40263e:	jae    0x402697
  402640:	mov    edx,0xc43554c6
  402645:	mov    dl,0xa7
  402647:	jne    0x40260a
  402649:	add    bh,dl
  40264b:	test   eax,0x86a4ecf
  402650:	inc    eax
  402651:	ja     0x402606
  402653:	xchg   edi,eax
  402654:	or     DWORD PTR [ebp+0x2b],ebp
  402657:	or     al,0xd4
  402659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40265a:	clc    
  40265b:	dec    eax
  40265c:	aad    0x35
  40265e:	shr    DWORD PTR [ebx-0x630f88db],cl
  402664:	xchg   dh,cl
  402666:	sar    ecx,cl
  402668:	or     esi,0x7a039d57
  40266e:	lods   al,BYTE PTR ds:[esi]
  40266f:	cmp    al,0xf6
  402671:	sub    BYTE PTR [edi],cl
  402673:	out    dx,al
  402674:	vmrun  
  402677:	cmp    edi,eax
  402679:	icebp  
  40267a:	jge    0x4026dc
  40267c:	(bad)  
  40267e:	jg     0x4026ce
  402680:	retf   
  402681:	jbe    0x402655
  402683:	and    BYTE PTR ds:0x6fd48fba,dh
  402689:	add    al,0x8c
  40268b:	pushf  
  40268c:	test   eax,0x502ba2d9
  402691:	scas   al,BYTE PTR es:[edi]
  402692:	jl     0x4026e1
  402694:	pop    esp
  402695:	pushf  
  402696:	adc    BYTE PTR [eax-0x258785a7],bl
  40269c:	jmp    FWORD PTR [edi-0x72]
  40269f:	add    BYTE PTR [ebx+edx*8+0xa9464f1],bh
  4026a6:	or     DWORD PTR [ebx*1-0x56c06bf5],0x7e
  4026ae:	enter  0x49aa,0xce
  4026b2:	sub    ah,BYTE PTR [edx+0x4bb7397c]
  4026b8:	dec    edx
  4026b9:	jbe    0x402686
  4026bb:	or     ah,bl
  4026bd:	outs   dx,DWORD PTR ds:[esi]
  4026be:	cmp    esp,DWORD PTR ds:0x9e0f3650
  4026c4:	jne    0x402667
  4026c6:	leave  
  4026c7:	pop    eax
  4026c8:	jecxz  0x40267c
  4026ca:	adc    edi,DWORD PTR [edx+esi*8+0x723e3b38]
  4026d1:	pop    ebx
  4026d2:	push   ebp
  4026d3:	retf   0xc5da
  4026d6:	arpl   dx,bp
  4026d8:	push   esp
  4026d9:	(bad)  
  4026db:	sub    eax,0x50904290
  4026e0:	mov    eax,0x55ac74ae
  4026e5:	xor    al,0x66
  4026e7:	adc    eax,0xa0f4d72d
  4026ec:	xor    ah,dh
  4026ee:	sbb    BYTE PTR [edx+0x2a029dea],dh
  4026f4:	call   0x6a16:0x5aacbc6b
  4026fb:	push   ebp
  4026fc:	cwd    
  4026fe:	pop    ebp
  4026ff:	jnp    0x4026cc
  402701:	xchg   edx,eax
  402702:	ror    DWORD PTR [edx],0xc7
  402705:	lods   al,BYTE PTR ds:[esi]
  402706:	loopne 0x4026c7
  402708:	jge    0x402744
  40270a:	add    DWORD PTR [esi],edi
  40270c:	fisub  WORD PTR [edi]
  40270e:	(bad)  
  40270f:	in     eax,dx
  402710:	mov    ah,0x56
  402712:	dec    ebx
  402713:	add    DWORD PTR [edi],edi
  402715:	sub    eax,0xa27ebe2c
  40271a:	iret   
  40271b:	fwait
  40271c:	clc    
  40271d:	stos   BYTE PTR es:[edi],al
  40271e:	pusha  
  40271f:	xor    bh,0x7e
  402722:	loopne 0x402792
  402724:	dec    edi
  402725:	fisttp DWORD PTR [ecx-0x50b177c]
  40272b:	jg     0x402741
  40272d:	xchg   BYTE PTR [ecx],al
  40272f:	cmc    
  402730:	(bad)  
  402731:	lock jbe 0x4026e2
  402734:	adc    bl,bh
  402736:	ror    DWORD PTR [edx],cl
  402738:	jb     0x402723
  40273a:	add    cl,BYTE PTR [eax+ebx*2+0x3c8e4bb5]
  402741:	sub    BYTE PTR [esi],al
  402743:	ins    BYTE PTR es:[edi],dx
  402744:	push   edx
  402745:	inc    edi
  402746:	mov    ch,0x82
  402748:	mov    ds:0x25bc8e23,eax
  40274d:	mov    al,0x17
  40274f:	cmp    BYTE PTR [ebp-0x1bd5d519],dl
  402755:	out    dx,eax
  402756:	(bad)  
  402758:	or     ecx,DWORD PTR [edi+0x7e]
  40275b:	(bad)  [ebp-0x8]
  40275e:	(bad)  
  402760:	pop    eax
  402761:	int3   
  402762:	mov    al,0xb
  402764:	ins    BYTE PTR es:[edi],dx
  402765:	(bad)  
  402766:	mov    al,ds:0xa6b5dffa
  40276b:	inc    esi
  40276c:	sti    
  40276d:	dec    edx
  40276e:	scas   al,BYTE PTR es:[edi]
  40276f:	push   es
  402770:	inc    esi
  402771:	(bad)  [esi-0x70]
  402774:	pop    ds
  402775:	push   ebx
  402776:	scas   al,BYTE PTR es:[edi]
  402777:	adc    edi,DWORD PTR [ebp-0x69d6d0a]
  40277d:	jl     0x402768
  40277f:	push   ecx
  402780:	sub    edi,eax
  402782:	push   edi
  402783:	mov    al,0x28
  402785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402786:	les    eax,FWORD PTR [ebx+ebp*4-0x5]
  40278a:	jo     0x402809
  40278c:	adc    BYTE PTR [edi+0x1df962ac],0xa9
  402793:	cmp    al,0xba
  402795:	loope  0x402778
  402797:	sahf   
  402798:	push   ds
  402799:	jmp    0x3463:0x29c2bf16
  4027a0:	aaa    
  4027a1:	loopne 0x4027d8
  4027a3:	push   ss
  4027a4:	or     BYTE PTR [esi-0x4b4844c3],bh
  4027aa:	add    al,0x40
  4027ac:	test   BYTE PTR [edi+0x9a1dab2],ah
  4027b2:	scas   eax,DWORD PTR es:[edi]
  4027b3:	popf   
  4027b4:	imul   esp,esi,0x41ba4ed1
  4027ba:	fsubr  st(6),st
  4027bc:	rep stos DWORD PTR es:[edi],eax
  4027be:	popa   
  4027bf:	adc    eax,0xdbd86987
  4027c4:	(bad)  
  4027c5:	jp     0x40281d
  4027c7:	mov    cl,0xa4
  4027c9:	aam    0x10
  4027cb:	mul    BYTE PTR [ebx+0xd4f8d0]
  4027d1:	add    BYTE PTR [ebp+0x14d30526],dl
  4027d7:	or     BYTE PTR [eax],cl
  4027d9:	std    
  4027da:	rcr    BYTE PTR [ebp+0x3842617a],1
  4027e0:	xchg   ecx,eax
  4027e1:	int    0xe5
  4027e3:	push   cs
  4027e4:	dec    edx
  4027e5:	mov    al,BYTE PTR [edx-0x2b]
  4027e8:	les    eax,FWORD PTR [edx-0x2864c7d3]
  4027ee:	inc    edi
  4027ef:	pop    ds
  4027f0:	adc    al,0xb1
  4027f2:	inc    eax
  4027f3:	test   eax,0x92c11ac0
  4027f8:	push   edi
  4027f9:	xchg   ecx,eax
  4027fa:	das    
  4027fb:	fwait
  4027fc:	push   edi
  4027fd:	aas    
  4027fe:	sub    eax,0xac70005c
  402803:	pop    eax
  402804:	retf   0x5532
  402807:	push   0xe3c540af
  40280c:	add    ah,BYTE PTR [edi+0x3ec56979]
  402812:	and    al,0xc6
  402814:	mov    edi,0x6a546207
  402819:	xchg   edi,eax
  40281a:	nop
  40281b:	dec    edx
  40281c:	xor    BYTE PTR ds:0x90ce794d,ah
  402822:	ins    BYTE PTR es:[edi],dx
  402823:	pop    esp
  402824:	mov    DWORD PTR ds:0xe7d3f476,edx
  40282a:	and    ebx,ecx
  40282c:	shl    DWORD PTR [esi],1
  40282e:	cdq    
  40282f:	jo     0x40282a
  402831:	aam    0x11
  402833:	and    ch,dl
  402835:	mov    ?,esi
  402837:	mov    al,ds:0xe6c64a4b
  40283c:	test   eax,0xbdd941b2
  402841:	push   eax
  402842:	cli    
  402843:	pop    ebx
  402844:	jns    0x4028a5
  402846:	add    ecx,DWORD PTR [edx-0x134b9555]
  40284c:	sub    esi,esi
  40284e:	sbb    al,0x69
  402850:	bound  ebp,QWORD PTR [edi]
  402852:	add    eax,0xf10b484
  402857:	sub    DWORD PTR [ebx-0x23b2cd41],esp
  40285d:	mov    esp,0xe753afb7
  402862:	bound  eax,QWORD PTR [ebx+0x708287ca]
  402868:	inc    edi
  402869:	adc    al,0xc0
  40286b:	add    BYTE PTR [ebx+edx*2-0x65f959bc],ah
  402872:	jge    0x4028f3
  402874:	lds    ecx,FWORD PTR [esi+esi*1-0x32]
  402878:	(bad)  
  402879:	sub    edi,ebp
  40287b:	push   eax
  40287c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40287d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40287e:	xchg   ebp,eax
  40287f:	mov    edi,0x185515f8
  402884:	xchg   esp,eax
  402885:	add    al,0xac
  402887:	(bad)  
  402888:	out    dx,al
  402889:	pop    ds
  40288a:	fstp   TBYTE PTR [edx]
  40288c:	jmp    0xe103420
  402891:	jns    0x402847
  402893:	push   es
  402894:	dec    edi
  402895:	add    eax,0xc0fb7ff5
  40289a:	xor    esi,DWORD PTR [eax-0x3812ffe8]
  4028a0:	(bad)  
  4028a1:	mul    DWORD PTR [ebp+0x20062a2f]
  4028a7:	inc    eax
  4028a8:	or     eax,0xb7b3ac56
  4028ad:	and    edi,DWORD PTR [esi+0x74]
  4028b0:	sbb    BYTE PTR [edx+0xc],al
  4028b3:	add    al,BYTE PTR [edi+0x39]
  4028b6:	jmp    0x4028f7
  4028b8:	xchg   esp,eax
  4028b9:	jno    0x4028b6
  4028bb:	add    dl,BYTE PTR ss:[ebp-0x41]
  4028bf:	call   0x344d52ff
  4028c4:	addr16 jmp 0x1f5b:0xb2cfe005
  4028cc:	cmp    al,0x83
  4028ce:	or     DWORD PTR [esi],ebx
  4028d0:	ja     0x40287a
  4028d2:	mov    bh,0xbd
  4028d4:	pop    DWORD PTR [eax+0x16]
  4028d7:	or     DWORD PTR [edi-0x4f],edi
  4028da:	jno    0x402890
  4028dc:	push   esi
  4028dd:	sub    eax,0x75e65949
  4028e2:	xlat   BYTE PTR ds:[ebx]
  4028e3:	mov    bh,0x60
  4028e5:	ss jns 0x402875
  4028e8:	das    
  4028e9:	lods   al,BYTE PTR ds:[esi]
  4028ea:	pushf  
  4028eb:	shr    DWORD PTR [esi-0x59],cl
  4028ee:	lods   al,BYTE PTR ds:[esi]
  4028ef:	cmp    bh,BYTE PTR [edi-0x22]
  4028f2:	mov    eax,ds:0x7e8e4a91
  4028f7:	push   edx
  4028f8:	loopne 0x40295e
  4028fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028fc:	lds    ebx,FWORD PTR [eax+0x5de5dbac]
  402902:	out    0xe1,eax
  402904:	mov    esp,0x8ba8e71b
  402909:	push   eax
  40290a:	pop    edx
  40290b:	xor    BYTE PTR [edx],al
  40290d:	inc    esp
  40290e:	mov    ah,0xb3
  402910:	int    0x77
  402912:	mov    edi,0x290f005b
  402917:	in     al,dx
  402918:	mov    ah,0x48
  40291a:	jno    0x402926
  40291c:	add    ebx,0x2
  40291f:	aam    0xcd
  402921:	mov    al,ds:0xa625bff0
  402926:	sbb    cl,BYTE PTR [ecx-0x25]
  402929:	in     eax,dx
  40292a:	mov    ah,0x59
  40292c:	addr16 add esp,ecx
  40292f:	ret    0xc32f
  402932:	or     DWORD PTR ds:0xaac236a3,edi
  402938:	pusha  
  402939:	cwde   
  40293a:	xlat   BYTE PTR ds:[ebx]
  40293b:	out    dx,eax
  40293c:	mov    dl,0x67
  40293e:	jg     0x40292b
  402940:	int3   
  402941:	mov    esp,DWORD PTR [edx+eiz*1+0x702f1d12]
  402948:	xor    ah,dh
  40294a:	inc    esi
  40294b:	popa   
  40294c:	pop    es
  40294d:	mov    eax,ds:0x5d0f47f
  402952:	out    dx,eax
  402953:	cdq    
  402954:	es xchg ah,al
  402957:	push   esi
  402958:	pop    ss
  402959:	inc    ecx
  40295a:	imul   DWORD PTR [ebx*8+0x473cd920]
  402961:	pop    edx
  402962:	pop    ss
  402963:	and    eax,0x2adb90
  402968:	inc    edi
  402969:	retf   0xdf95
  40296c:	pusha  
  40296d:	jmp    DWORD PTR [ecx+eiz*4-0xf0a07b5]
  402974:	mov    al,0x5
  402976:	pop    ds
  402977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402978:	push   ebp
  402979:	ficomp DWORD PTR [esi]
  40297b:	aas    
  40297c:	fcom   QWORD PTR [edx+esi*8]
  40297f:	lds    edi,FWORD PTR [ecx-0x3baf7e8]
  402985:	mov    ebx,0x6f00a298
  40298a:	jp     0x4029f4
  40298c:	sahf   
  40298d:	xlat   BYTE PTR ds:[ebx]
  40298e:	ret    
  40298f:	imul   edi,DWORD PTR [edx-0x76dd032f],0x1e
  402996:	push   cs
  402997:	mov    ds,WORD PTR [esi-0x17ef235c]
  40299d:	dec    ebx
  40299e:	push   esp
  40299f:	cmp    dh,BYTE PTR [esi-0x56]
  4029a2:	cmp    DWORD PTR [esi],esi
  4029a4:	cs inc edx
  4029a6:	or     al,0xd9
  4029a8:	inc    esp
  4029a9:	jnp    0x4029df
  4029ab:	sti    
  4029ac:	pop    edi
  4029ad:	repnz fucom st(3)
  4029b0:	mov    al,ds:0x7d03ab4e
  4029b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029b7:	lods   eax,DWORD PTR ds:[esi]
  4029b8:	test   BYTE PTR [edi],ch
  4029ba:	test   DWORD PTR [esi+0x2a],0xae800379
  4029c1:	fstp   QWORD PTR [edi]
  4029c3:	cmp    ecx,DWORD PTR [esi]
  4029c5:	lock mov ebp,0x37f3d4dd
  4029cb:	les    eax,FWORD PTR ds:[esi-0x4f4cf7d0]
  4029d2:	cwde   
  4029d3:	xchg   DWORD PTR es:[edi-0x68550305],eax
  4029da:	test   DWORD PTR [ecx+0xf14abe9],eax
  4029e0:	arpl   bx,ax
  4029e2:	sti    
  4029e3:	mov    eax,ds:0x13d9ecb2
  4029e8:	cmp    DWORD PTR [esi-0x49],ebp
  4029eb:	xchg   edi,eax
  4029ec:	ret    
  4029ed:	scas   eax,DWORD PTR es:[edi]
  4029ee:	jle    0x402a6d
  4029f0:	das    
  4029f1:	inc    esi
  4029f2:	mov    cl,0xcb
  4029f4:	sar    DWORD PTR [edi],1
  4029f6:	and    eax,edx
  4029f8:	neg    esi
  4029fa:	pop    ebx
  4029fb:	xchg   edi,eax
  4029fc:	int3   
  4029fd:	fs push 0x5a
  402a00:	loope  0x402a57
  402a02:	mov    edx,DWORD PTR [ecx]
  402a04:	test   al,0x5c
  402a06:	aam    0x8e
  402a08:	mov    ch,0x18
  402a0a:	mov    al,ds:0xbafa5cd9
  402a0f:	xchg   esi,eax
  402a10:	in     al,0xb8
  402a12:	leave  
  402a13:	outs   dx,DWORD PTR ds:[esi]
  402a14:	xor    eax,0x21304cc6
  402a19:	sub    eax,0xbe9bfd9b
  402a1e:	popf   
  402a1f:	dec    edx
  402a20:	xchg   esp,eax
  402a21:	or     al,0x3b
  402a23:	adc    al,0x8c
  402a25:	out    0x3a,al
  402a27:	ds push ebp
  402a29:	pop    ebx
  402a2a:	popf   
  402a2b:	push   es
  402a2c:	push   ds
  402a2d:	arpl   bx,si
  402a2f:	xchg   edi,eax
  402a30:	sbb    al,0xb5
  402a32:	adc    al,0xe4
  402a34:	dec    ebx
  402a35:	mov    dl,0x68
  402a37:	push   edi
  402a38:	dec    ebx
  402a39:	mov    eax,ds:0x667526a5
  402a3e:	add    al,0x45
  402a41:	lods   al,BYTE PTR ds:[esi]
  402a42:	out    0xbc,eax
  402a44:	or     BYTE PTR [ebx+edx*1-0x2caea566],ah
  402a4b:	outs   dx,DWORD PTR ds:[esi]
  402a4c:	add    BYTE PTR [eax],bl
  402a4e:	sub    DWORD PTR [ecx-0x7905a3be],ebx
  402a54:	jp     0x402ab0
  402a56:	dec    ebx
  402a57:	mov    bl,0x6f
  402a59:	push   ebx
  402a5b:	daa    
  402a5c:	jnp    0x4029f1
  402a5e:	clc    
  402a5f:	fdiv   st,st(4)
  402a61:	aam    0x87
  402a63:	lock mov WORD PTR [edi],ss
  402a66:	ret    0x886
  402a69:	sbb    al,0x9f
  402a6b:	sbb    al,0xf
  402a6d:	mov    ah,0x84
  402a6f:	pop    edi
  402a70:	add    cl,BYTE PTR [edi-0x5b]
  402a73:	lea    eax,[edx+0x37]
  402a76:	test   al,0x6
  402a78:	mov    dh,0x78
  402a7a:	test   DWORD PTR [edx-0x65],edi
  402a7d:	js     0x402a86
  402a7f:	repz pop es
  402a81:	pop    esp
  402a82:	mov    esp,0x4608530a
  402a87:	out    0xe4,al
  402a89:	mov    WORD PTR [ebx],es
  402a8b:	add    DWORD PTR [edi+esi*4-0x26],0x6a
  402a90:	lods   al,BYTE PTR ds:[esi]
  402a91:	ret    0xace2
  402a94:	pushf  
  402a95:	das    
  402a96:	pop    ss
  402a97:	pop    ebx
  402a98:	jbe    0x402ad1
  402a9a:	aad    0x49
  402a9c:	push   ebx
  402a9d:	(bad)  
  402a9e:	mov    bl,0x10
  402aa0:	dec    edx
  402aa1:	ror    ecx,1
  402aa3:	mov    ah,ah
  402aa5:	sbb    al,0x3c
  402aa7:	pop    ebp
  402aa8:	std    
  402aa9:	push   es
  402aaa:	fs push ds
  402aac:	(bad)  
  402aad:	push   ebx
  402aae:	inc    ebx
  402aaf:	sub    eax,0xcfdf903c
  402ab4:	cmp    BYTE PTR [edi-0x35],0xeb
  402ab8:	into   
  402ab9:	cmp    eax,0xc9c1f8a8
  402abe:	jo     0x402a41
  402ac0:	xchg   esi,eax
  402ac1:	call   0xede:0x12bc1f73
  402ac8:	inc    ebx
  402ac9:	rol    BYTE PTR fs:[eax],0xc
  402acd:	and    ebx,DWORD PTR [ecx+ebp*4+0x1dedd47b]
  402ad4:	mov    ch,ch
  402ad6:	mov    dh,0x55
  402ad8:	push   edx
  402ad9:	add    BYTE PTR [eax-0x62],al
  402adc:	pop    ecx
  402add:	into   
  402ade:	lahf   
  402adf:	mov    WORD PTR ds:[esi],es
  402ae2:	ret    0x3843
  402ae5:	imul   ecx,DWORD PTR [edi],0x5fff8c39
  402aeb:	jns    0x402ac8
  402aed:	mov    bl,bl
  402aef:	jae    0x402a80
  402af1:	(bad)  
  402af2:	jmp    0x402b45
  402af4:	(bad)  
  402af5:	jmp    0xe8c48f9a
  402afa:	retf   
  402afb:	dec    esi
  402afc:	fwait
  402afd:	add    esp,DWORD PTR [eax+0x4b350173]
  402b03:	push   ds
  402b04:	fcmovnbe st,st(7)
  402b06:	shr    BYTE PTR ds:0xc544ab2d,cl
  402b0c:	xor    BYTE PTR [ebx],cl
  402b0e:	dec    edi
  402b0f:	ficom  WORD PTR [ecx]
  402b11:	fcmove st,st(1)
  402b13:	(bad)  
  402b15:	mov    bh,0x64
  402b17:	scas   eax,DWORD PTR es:[edi]
  402b18:	mov    DWORD PTR [ebp+0x29],edx
  402b1b:	jbe    0x402b6f
  402b1d:	(bad)  
  402b1f:	add    eax,0x6186dd0b
  402b24:	es xchg edi,eax
  402b26:	nop
  402b27:	mov    bh,0xe8
  402b29:	js     0x402b1b
  402b2b:	jne    0x402aba
  402b2d:	and    BYTE PTR [edx],bh
  402b2f:	push   0xffffffb4
  402b31:	jp     0x402ad9
  402b33:	(bad)  
  402b34:	sahf   
  402b35:	xor    al,0xa0
  402b37:	sbb    eax,0x743e93e8
  402b3c:	push   ebx
  402b3d:	addr16 enter 0xe631,0x2b
  402b42:	jnp    0x402b33
  402b44:	dec    ebx
  402b45:	shl    BYTE PTR [ebp-0x7d],cl
  402b48:	mov    ah,0xec
  402b4a:	and    edx,ecx
  402b4c:	ds pop edx
  402b4e:	inc    esi
  402b4f:	cli    
  402b50:	mov    dl,0xbc
  402b53:	xchg   ecx,eax
  402b54:	add    ah,BYTE PTR [ecx+0x5e]
  402b57:	(bad)  
  402b58:	mov    edx,0xab603da7
  402b5d:	sub    eax,0xc389fef1
  402b62:	hlt    
  402b63:	dec    eax
  402b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b66:	sub    eax,0x4d7426a2
  402b6b:	dec    edx
  402b6c:	aad    0xda
  402b6e:	outs   dx,BYTE PTR ds:[esi]
  402b6f:	mov    eax,0xd45e9e03
  402b74:	ins    BYTE PTR es:[edi],dx
  402b75:	jge    0x402b13
  402b77:	int    0x7a
  402b79:	scas   eax,DWORD PTR es:[edi]
  402b7a:	sti    
  402b7b:	retf   0xb199
  402b7e:	sub    eax,DWORD PTR ds:0x78d691f
  402b84:	leave  
  402b85:	rcl    ecx,1
  402b87:	mov    eax,ds:0x97ba92a5
  402b8c:	daa    
  402b8d:	js     0x402b6e
  402b8f:	push   eax
  402b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b91:	xlat   BYTE PTR ds:[ebx]
  402b92:	sbb    esi,0xffffffae
  402b95:	dec    esp
  402b96:	(bad)
  402b99:	mov    edi,0xa8c49039
  402b9e:	cld    
  402b9f:	mov    cs,WORD PTR ds:0xacd75cfe
  402ba5:	pop    esi
  402ba6:	xor    DWORD PTR [bx+di+0x3b2f],ecx
  402bab:	jmp    0x8ed2:0x3e3a815d
  402bb2:	jle    0x402b9d
  402bb4:	daa    
  402bb5:	push   ecx
  402bb6:	mov    ebp,0x54f1a65b
  402bbb:	sbb    eax,0xe03fca3d
  402bc0:	js     0x402b82
  402bc2:	pop    ecx
  402bc3:	sbb    eax,0x2870a1ba
  402bc8:	cwde   
  402bc9:	mov    ebx,0x237ee369
  402bce:	cmp    DWORD PTR [esi+0x737898bf],ecx
  402bd4:	or     al,0x7a
  402bd6:	retf   0x68a3
  402bd9:	xchg   ebp,eax
  402bda:	movzx  esi,WORD PTR [eax]
  402bdd:	mov    ah,0x25
  402bdf:	mov    al,0xb6
  402be1:	and    eax,0xdacdeea4
  402be6:	jmp    0x1c080cd1
  402beb:	frstor [edi+esi*4]
  402bee:	jo     0x402c69
  402bf0:	cmp    eax,eax
  402bf2:	jbe    0x402c47
  402bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf5:	fistp  QWORD PTR ds:0x65e9433d
  402bfb:	mov    ch,0xf4
  402bfd:	outs   dx,BYTE PTR ds:[esi]
  402bfe:	bnd ret 0x1e55
  402c02:	iret   
  402c03:	xchg   esi,eax
  402c04:	aam    0xc
  402c06:	pop    ds
  402c07:	dec    esp
  402c08:	fs inc eax
  402c0a:	pop    esp
  402c0b:	sar    DWORD PTR [ebx],0xcd
  402c0e:	push   0x7454ca12
  402c13:	cmp    ch,cl
  402c15:	push   cs
  402c16:	or     al,0xeb
  402c19:	pop    ebp
  402c1a:	mov    al,0x7e
  402c1c:	jle    0x402c2b
  402c1e:	add    esp,DWORD PTR [ebx+0x4a]
  402c21:	arpl   WORD PTR [ecx+0x5253a121],ax
  402c27:	(bad)
  402c2a:	or     DWORD PTR [eax-0x7c27cf32],0x9a74c2b5
  402c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c35:	xor    cl,BYTE PTR [esi]
  402c37:	pop    ds
  402c38:	mov    ds:0x78f4891a,al
  402c3d:	adc    edi,DWORD PTR [eax]
  402c3f:	push   es
  402c40:	cld    
  402c41:	ret    0xfadd
  402c44:	xchg   esp,eax
  402c45:	mov    ebp,0xf335b4ef
  402c4a:	pop    edi
  402c4b:	adc    edi,edi
  402c4d:	jnp    0x402c90
  402c4f:	jmp    0xafc04519
  402c54:	outs   dx,BYTE PTR ds:[esi]
  402c55:	pushf  
  402c56:	cs cmp eax,0x41f3f304
  402c5c:	dec    edi
  402c5d:	mov    ds:0x8c68a022,eax
  402c62:	(bad)  
  402c63:	out    0x3e,eax
  402c65:	pop    esp
  402c66:	or     ch,BYTE PTR [ebp+0x7a441591]
  402c6c:	add    eax,0x88a4e443
  402c71:	outs   dx,DWORD PTR ds:[esi]
  402c72:	mov    dh,0xc1
  402c74:	or     DWORD PTR [ebx],edx
  402c76:	mov    ?,WORD PTR [ebx]
  402c78:	int    0x11
  402c7a:	rcr    dh,0x64
  402c7d:	addr16 mov ebx,0xe9d48e16
  402c83:	sti    
  402c84:	sub    al,BYTE PTR [ecx-0x6b474f87]
  402c8a:	inc    ebx
  402c8b:	mov    al,0xaf
  402c8d:	inc    ebp
  402c8e:	mov    cl,0x42
  402c90:	int    0xcf
  402c92:	add    ebx,DWORD PTR [eax-0x7cba5f2c]
  402c98:	test   eax,0x9916e570
  402c9d:	int    0x4b
  402c9f:	xchg   esp,eax
  402ca0:	fstp   DWORD PTR [ebx-0x1625b431]
  402ca6:	ret    
  402ca7:	(bad)  
  402ca8:	sub    ecx,DWORD PTR [ebp+0x56494f1b]
  402cae:	mov    ecx,0xeb340c82
  402cb3:	fsubr  QWORD PTR [eax+ecx*4]
  402cb6:	iret   
  402cb7:	or     bl,BYTE PTR [eax+0x2f8f7cb1]
  402cbd:	clc    
  402cbe:	pop    ebp
  402cbf:	jg     0x402c65
  402cc1:	mov    al,ds:0x44262977
  402cc6:	pop    esp
  402cc7:	mov    es,WORD PTR [edx-0x2663b168]
  402ccd:	mov    dl,dl
  402ccf:	pop    ebp
  402cd0:	jle    0x402cbe
  402cd2:	jo     0x402c79
  402cd4:	pop    edx
  402cd5:	inc    edi
  402cd6:	out    0x7f,al
  402cd8:	cld    
  402cd9:	bound  ebx,QWORD PTR [edx-0x57b55620]
  402cdf:	test   al,0x7e
  402ce1:	xchg   ebx,eax
  402ce2:	cdq    
  402ce3:	pusha  
  402ce4:	sub    DWORD PTR [ebx-0x76],ecx
  402ce7:	sahf   
  402ce8:	xchg   BYTE PTR [edi+eiz*4],cl
  402ceb:	(bad)  
  402ced:	(bad)  
  402cee:	fst    QWORD PTR [ebx+ebp*2-0x1d99d41]
  402cf5:	adc    eax,0x8a8b2c5e
  402cfa:	imul   ebp
  402cfc:	fldcw  WORD PTR [ecx]
  402cfe:	xchg   ecx,eax
  402cff:	mov    bh,0x4f
  402d01:	test   al,0xe7
  402d03:	aaa    
  402d04:	imul   ebp,DWORD PTR [ebx],0x7b22e68d
  402d0a:	aaa    
  402d0b:	and    bl,al
  402d0d:	inc    esi
  402d0e:	dec    ecx
  402d0f:	int    0xa4
  402d11:	push   ss
  402d12:	dec    edi
  402d13:	adc    ah,BYTE PTR [edi-0x1c07afc8]
  402d19:	dec    eax
  402d1a:	stc    
  402d1b:	rcl    BYTE PTR [edx+0x4d0bd463],1
  402d21:	pop    edx
  402d22:	cmp    ecx,DWORD PTR [edi+0x1e02fab0]
  402d28:	jne    0x402d1e
  402d2a:	jl     0x402cb4
  402d2c:	mov    al,ds:0x2ebf1c0f
  402d31:	cmp    BYTE PTR [ebx+eiz*2],bl
  402d34:	das    
  402d35:	sbb    ah,BYTE PTR [edi]
  402d37:	add    DWORD PTR [edi+0x49d47119],0xffffffd7
  402d3e:	dec    ebp
  402d3f:	inc    ecx
  402d40:	out    0x94,al
  402d42:	xor    WORD PTR [esp+edi*1-0xb],si
  402d47:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  402d49:	dec    esi
  402d4a:	push   0xffffff82
  402d4c:	stc    
  402d4d:	mov    esp,DWORD PTR [edi-0x42]
  402d50:	dec    edx
  402d51:	mov    edi,0x96bd751e
  402d56:	add    eax,0xece13331
  402d5b:	not    eax
  402d5d:	sbb    eax,0x1d505d05
  402d62:	push   0x23bd4edf
  402d67:	push   esp
  402d68:	pop    edi
  402d69:	mov    esi,0xc5ab9627
  402d6e:	pop    ebp
  402d6f:	retf   0x5f12
  402d72:	adc    al,0xef
  402d74:	pop    ds
  402d75:	sbb    dh,ch
  402d77:	mov    al,ds:0x4be4dbb3
  402d7c:	(bad)
  402d7f:	imul   esp,DWORD PTR [edx-0x3d8b0b19],0xe148e734
  402d89:	push   cs
  402d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d8b:	inc    esi
  402d8c:	rol    edx,cl
  402d8e:	cld    
  402d8f:	mov    ds:0xf97a493b,eax
  402d94:	cmp    BYTE PTR [ecx+0x1c9f6fdf],cl
  402d9a:	push   0xa522aa48
  402d9f:	das    
  402da0:	inc    esp
  402da1:	push   edx
  402da2:	sub    edx,eax
  402da4:	mov    esi,0xf67c5579
  402da9:	dec    ebp
  402daa:	outs   dx,BYTE PTR ds:[esi]
  402dab:	test   eax,0x715c55f0
  402db0:	dec    esp
  402db1:	out    0xf8,eax
  402db3:	sub    edx,edx
  402db5:	inc    ecx
  402db6:	mov    edx,0x179e4fb6
  402dbb:	call   DWORD PTR [esi-0x3a]
  402dbe:	pop    esp
  402dbf:	push   es
  402dc0:	fidiv  DWORD PTR [edx+eiz*1]
  402dc3:	or     BYTE PTR [esi],ch
  402dc5:	sbb    dh,BYTE PTR [ebx+0x353eb079]
  402dcb:	xlat   BYTE PTR ds:[ebx]
  402dcc:	(bad)  
  402dcd:	scas   eax,DWORD PTR es:[edi]
  402dce:	push   edi
  402dcf:	cli    
  402dd0:	sub    DWORD PTR [edx-0x38],ebp
  402dd3:	(bad)  
  402dd6:	shl    BYTE PTR [ebx+0x6ec6de25],0x50
  402ddd:	mov    edx,0x36fd1f20
  402de2:	cmp    DWORD PTR [eax+0x45],ebp
  402de5:	mov    ch,0xea
  402de7:	jne    0x402e40
  402de9:	cmp    BYTE PTR [edi+0x6d42a3f4],0x41
  402df0:	(bad)  
  402df1:	xor    BYTE PTR [ebp-0x4b],ch
  402df4:	sub    DWORD PTR ds:0xcfe9f061,esi
  402dfa:	sbb    bl,BYTE PTR [ebx-0x4d]
  402dfd:	sub    al,0x1b
  402dff:	xchg   esp,eax
  402e00:	mov    esp,edx
  402e02:	cmp    eax,0x360cb6ad
  402e07:	popa   
  402e08:	das    
  402e09:	stos   DWORD PTR es:[edi],eax
  402e0a:	jle    0x402def
  402e0c:	sahf   
  402e0d:	sub    ch,dl
  402e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e10:	test   DWORD PTR [si],esp
  402e13:	les    ecx,FWORD PTR [ebp+ecx*2+0x26]
  402e17:	or     DWORD PTR [ebp-0x2e],esp
  402e1a:	adc    al,0xbf
  402e1c:	and    al,0xc3
  402e1e:	fisttp WORD PTR [ecx-0x138fa16c]
  402e24:	clc    
  402e25:	mov    esi,0xe9d3e899
  402e2a:	pop    esi
  402e2b:	daa    
  402e2c:	jne    0x402dfb
  402e2e:	and    al,0x46
  402e30:	retf   
  402e31:	fiadd  DWORD PTR [ecx+0x50]
  402e34:	frstor [ebp-0x7fb26a5f]
  402e3a:	push   edx
  402e3b:	sub    ax,0x3c65
  402e3f:	jb     0x402e6d
  402e41:	ins    DWORD PTR es:[edi],dx
  402e42:	gs loop 0x402e44
  402e45:	mov    BYTE PTR [ebp+0x5d],al
  402e48:	push   es
  402e49:	jmp    FWORD PTR [ebp-0x7ce9afdd]
  402e4f:	clc    
  402e50:	push   ebp
  402e51:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  402e53:	sbb    edx,ebx
  402e55:	fs and al,0xd6
  402e58:	dec    edx
  402e59:	xor    eax,0xeb3e5731
  402e5e:	mov    ecx,0xe15baeec
  402e63:	mov    WORD PTR [ebx-0x38],cs
  402e66:	dec    esp
  402e67:	ds jnp 0x402e0a
  402e6a:	and    eax,0xcc71389
  402e6f:	iret   
  402e70:	dec    ecx
  402e71:	mov    al,0x39
  402e73:	pop    edx
  402e74:	dec    esi
  402e75:	sbb    al,0x81
  402e77:	leave  
  402e78:	mov    esp,0xcbc6975d
  402e7d:	into   
  402e7e:	ror    BYTE PTR [ecx+0x54],1
  402e81:	mov    al,ds:0x11ca50c6
  402e86:	in     al,dx
  402e87:	out    0x5d,eax
  402e89:	inc    edi
  402e8a:	pop    ebx
  402e8b:	sbb    eax,0xa49f4a2c
  402e90:	imul   BYTE PTR [ecx+0x50aed3e6]
  402e96:	and    dh,ch
  402e98:	and    BYTE PTR [edx],0xf0
  402e9b:	in     eax,dx
  402e9c:	lock mov ds:0xf472884d,eax
  402ea2:	sets   BYTE PTR [edx-0x44]
  402ea6:	sbb    BYTE PTR [ecx-0x7e46a582],bh
  402eac:	lods   eax,DWORD PTR ds:[si]
  402eae:	je     0x402f09
  402eb0:	sub    edx,DWORD PTR [esi]
  402eb2:	out    0x5b,al
  402eb4:	adc    BYTE PTR [ecx+0x30],ah
  402eb7:	stos   DWORD PTR es:[edi],eax
  402eb8:	test   BYTE PTR [ebx-0x5e],dh
  402ebb:	outs   dx,BYTE PTR ds:[esi]
  402ebc:	inc    ebp
  402ebd:	adc    bl,bh
  402ebf:	mov    ah,0x46
  402ec1:	adc    BYTE PTR [esi-0x73e4aa26],dl
  402ec7:	lahf   
  402ec8:	retf   
  402ec9:	inc    ebx
  402eca:	xor    bl,BYTE PTR [ebp-0x2fc8c6df]
  402ed0:	cmp    DWORD PTR [esi-0x2e64147f],eax
  402ed6:	push   0x2f
  402ed8:	jmp    0x9c60:0xb8f0218d
  402edf:	sar    DWORD PTR [ebx+0x20903cc5],0xb0
  402ee6:	push   esi
  402ee7:	pop    ebp
  402ee8:	mov    WORD PTR [esi],?
  402eea:	mov    cl,0x41
  402eec:	pop    edx
  402eed:	repz inc edx
  402eef:	or     ah,ah
  402ef1:	sar    bh,1
  402ef3:	lahf   
  402ef4:	ds into 
  402ef6:	xlat   BYTE PTR ds:[ebx]
  402ef7:	enter  0x3324,0x94
  402efb:	outs   dx,DWORD PTR cs:[esi]
  402efd:	lea    esi,[ebp-0x2833f8d8]
  402f03:	call   0xc1a16d77
  402f08:	push   edi
  402f09:	les    ebp,FWORD PTR [edx+0x5f]
  402f0c:	and    al,0xb2
  402f0e:	sub    eax,0x4b05eaaf
  402f13:	cmp    DWORD PTR [edi],esp
  402f15:	(bad)  [esi+0x479f20f0]
  402f1b:	mov    ecx,0xec92d696
  402f20:	push   ecx
  402f21:	loopne 0x402f91
  402f23:	and    eax,0xebb7258d
  402f28:	add    ebp,DWORD PTR [ebp-0xa]
  402f2b:	push   0xcbcbbfc7
  402f30:	leave  
  402f31:	loope  0x402f46
  402f33:	add    DWORD PTR [ecx-0x5974fc27],0xbd815338
  402f3d:	out    dx,eax
  402f3e:	hlt    
  402f3f:	ret    0xd91c
  402f42:	mov    WORD PTR [ecx],es
  402f44:	dec    edi
  402f45:	push   edx
  402f46:	ret    
  402f47:	dec    ebx
  402f48:	or     al,BYTE PTR [ebp+0x290a12b8]
  402f4e:	repz cld 
  402f50:	push   esi
  402f51:	xchg   DWORD PTR [ebx-0x6b],ecx
  402f54:	xchg   ecx,eax
  402f55:	test   BYTE PTR [edi-0x12],dl
  402f58:	fdivr  st(1),st
  402f5a:	mov    eax,ds:0x1dbeefac
  402f5f:	sub    edx,DWORD PTR [eax]
  402f61:	lods   eax,DWORD PTR ds:[esi]
  402f62:	in     eax,dx
  402f63:	mov    bl,0x8e
  402f65:	jg     0x402fcf
  402f67:	xchg   ecx,eax
  402f68:	mov    WORD PTR es:[edi-0x368ed9b5],?
  402f6f:	add    DWORD PTR [ecx],0x84a3207a
  402f75:	adc    eax,0x62d35a7d
  402f7a:	idiv   dh
  402f7c:	xchg   esi,eax
  402f7d:	jo     0x402fb1
  402f7f:	adc    ecx,DWORD PTR [edi-0x7e]
  402f82:	call   0x6baa5c31
  402f87:	adc    ebx,DWORD PTR [eiz*4-0x6dfc1653]
  402f8e:	mov    WORD PTR [eax+0x6e],gs
  402f91:	mov    ah,0xaf
  402f93:	imul   eax,DWORD PTR [ebx],0xa16d90fa
  402f99:	mov    eax,0x8f35003d
  402f9e:	sub    BYTE PTR [ebx+ecx*8+0x57],al
  402fa2:	test   eax,0x6e03c6e6
  402fa7:	add    DWORD PTR [esi+eiz*8+0x1a],ecx
  402fab:	in     al,0xb6
  402fad:	jnp    0x402f39
  402faf:	neg    DWORD PTR [esi+0x6b]
  402fb2:	push   cs
  402fb3:	mov    ?,eax
  402fb5:	cmp    al,0xdc
  402fb7:	sbb    eax,0x4141ef1a
  402fbc:	inc    esp
  402fbd:	fiadd  WORD PTR gs:[ebp-0x22e62833]
  402fc4:	mov    dh,0xf3
  402fc6:	in     al,0xa0
  402fc8:	loope  0x402f58
  402fca:	mov    edi,0x87e0694
  402fcf:	push   ebx
  402fd0:	inc    eax
  402fd1:	sub    DWORD PTR [ecx-0x7ccbe07a],edi
  402fd7:	adc    BYTE PTR [edi],dh
  402fd9:	test   eax,0x9fc88b8f
  402fde:	and    dl,dh
  402fe0:	push   ss
  402fe1:	jnp    0x403026
  402fe3:	mov    dh,0x6d
  402fe5:	and    ebx,DWORD PTR [ebx]
  402fe7:	scas   eax,DWORD PTR es:[edi]
  402fe8:	scas   al,BYTE PTR es:[edi]
  402fe9:	xor    eax,DWORD PTR [esi+esi*8+0x448dad3d]
  402ff0:	shrd   ecx,esp,0xd7
  402ff4:	sbb    cl,BYTE PTR [ebx+ebx*1]
  402ff7:	out    0xc4,eax
  402ff9:	fldcw  WORD PTR [edi+0x1511ce11]
  402fff:	dec    ebx
  403000:	pop    ecx
  403001:	xor    eax,0x97ffa0d2
  403006:	pop    eax
  403007:	pushf  
  403008:	fucomi st,st(7)
  40300a:	mov    ebp,gs
  40300c:	stos   DWORD PTR es:[edi],eax
  40300d:	test   al,0x86
  40300f:	pop    ds
  403010:	lahf   
  403011:	shr    DWORD PTR [edi],0x9f
  403014:	je     0x40305a
  403016:	test   al,0x5
  403018:	adc    eax,0xf49d8c5f
  40301d:	fild   WORD PTR [ecx]
  40301f:	or     BYTE PTR [ebx+edx*2],cl
  403022:	ds mov bl,0x94
  403025:	imul   ecx,edi,0xffffffe0
  403028:	mov    cl,0x1e
  40302a:	sar    DWORD PTR [ecx+0x3d7dfaf1],0xd
  403031:	into   
  403032:	das    
  403033:	pop    eax
  403034:	cwde   
  403035:	sub    eax,0xbcf6cbca
  40303a:	mov    ah,0x88
  40303c:	cmc    
  40303d:	jno    0x40307a
  40303f:	add    DWORD PTR [edx],eax
  403041:	push   es
  403042:	sub    edx,esp
  403044:	rol    DWORD PTR [eax-0x68],1
  403047:	pop    eax
  403048:	sub    bl,0xa5
  40304b:	cmp    cl,BYTE PTR [esi]
  40304d:	jle    0x4030ba
  40304f:	inc    ebx
  403050:	test   al,0xe1
  403052:	mov    WORD PTR [edx-0x1a],?
  403055:	sti    
  403056:	aaa    
  403057:	fmul   DWORD PTR [esp+edi*4-0xb]
  40305b:	int    0x9e
  40305d:	jp     0x40300e
  40305f:	leave  
  403060:	xchg   esp,eax
  403061:	mov    edi,ebx
  403063:	xchg   edi,eax
  403064:	mov    eax,0x74932ea5
  403069:	das    
  40306a:	aaa    
  40306b:	cmp    ebp,eax
  40306d:	cli    
  40306e:	sbb    BYTE PTR [edx+0x72],ah
  403071:	js     0x4030e9
  403073:	rol    BYTE PTR [eax+0x3d],cl
  403076:	inc    edi
  403077:	ins    BYTE PTR es:[edi],dx
  403078:	sbb    DWORD PTR [eax-0x2e],0x1
  40307c:	dec    ebp
  40307d:	sbb    edi,esp
  40307f:	jmp    0xe118:0x3a51b776
  403086:	scas   eax,DWORD PTR es:[edi]
  403087:	(bad)  
  403088:	mov    ebx,0xb605103e
  40308d:	pusha  
  40308e:	mov    eax,ds:0xedb1f926
  403093:	lods   al,BYTE PTR ds:[esi]
  403094:	repnz sbb DWORD PTR ds:0x7176ba10,0xffffffb2
  40309c:	std    
  40309d:	sub    al,0xc0
  40309f:	lock (bad) 
  4030a1:	cld    
  4030a2:	pushf  
  4030a3:	pop    es
  4030a4:	dec    edx
  4030a5:	cmp    eax,DWORD PTR [esi+0x25]
  4030a8:	add    eax,0x81db3ee2
  4030ad:	mov    eax,0x5e8e769e
  4030b2:	into   
  4030b3:	test   DWORD PTR [ecx],0x44df8dd4
  4030b9:	sbb    bh,BYTE PTR [ebx-0x51]
  4030bc:	mov    ecx,0x784ad130
  4030c1:	dec    ecx
  4030c2:	loope  0x403075
  4030c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030c5:	xchg   al,bl
  4030c7:	aad    0xa8
  4030c9:	pop    esi
  4030ca:	sub    al,0x3d
  4030cc:	mov    bh,0x4a
  4030ce:	js     0x4030ed
  4030d0:	jmp    0x3513:0x1c137e04
  4030d7:	sub    eax,0xfabbab45
  4030dc:	xchg   edx,eax
  4030dd:	sub    eax,0x6084a6d7
  4030e2:	cmc    
  4030e3:	in     eax,dx
  4030e4:	pop    esp
  4030e5:	retf   0x767c
  4030e8:	xchg   BYTE PTR cs:[ebx+0x108661f6],dl
  4030ef:	xchg   ebx,eax
  4030f0:	push   ds
  4030f1:	inc    ebx
  4030f2:	pop    esp
  4030f3:	test   eax,0x5734e68c
  4030f8:	(bad)  
  4030fa:	out    dx,eax
  4030fb:	xor    eax,0x69225f31
  403100:	mov    edx,0x7d6a222d
  403105:	ins    DWORD PTR es:[edi],dx
  403106:	xchg   edi,eax
  403107:	fstp   QWORD PTR [esp+edx*1-0x7]
  40310b:	or     DWORD PTR [ecx],edx
  40310d:	(bad)
  403110:	jle    0x403140
  403112:	cld    
  403113:	in     eax,dx
  403114:	ins    BYTE PTR es:[edi],dx
  403115:	sahf   
  403116:	addr16 in al,dx
  403118:	int3   
  403119:	xchg   edi,eax
  40311a:	push   es
  40311b:	in     eax,0x65
  40311d:	xchg   esp,eax
  40311e:	xlat   BYTE PTR ds:[ebx]
  40311f:	xor    DWORD PTR [edi+0x743d55],eax
  403125:	imul   ebx,DWORD PTR [ecx-0x17],0xe35d2258
  40312c:	call   0x45f4:0x8b3c5422
  403133:	mov    dh,BYTE PTR [eax+0x72]
  403136:	nop
  403137:	push   ecx
  403138:	push   es
  403139:	(bad)  
  40313a:	enter  0xda4f,0x92
  40313e:	cld    
  40313f:	and    eax,0x45ae6d5a
  403144:	xchg   edi,eax
  403145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403146:	dec    edi
  403147:	mov    dl,0xa4
  403149:	ret    0xfff6
  40314c:	scas   eax,DWORD PTR es:[edi]
  40314d:	mov    eax,0xa37a2c4f
  403152:	int    0xf0
  403154:	sub    al,0xc0
  403156:	imul   esi,DWORD PTR [ecx+ebp*1+0x17],0x48851b06
  40315e:	jp     0x40310a
  403160:	popf   
  403161:	mov    bl,0x8d
  403163:	push   cs
  403164:	sti    
  403165:	sbb    eax,0xc619c2b3
  40316a:	jbe    0x40314e
  40316c:	je     0x40314b
  40316e:	cmp    edx,DWORD PTR [ebp+0x4629454b]
  403174:	test   BYTE PTR [ecx+0x21aca71d],dh
  40317a:	or     ah,BYTE PTR [ecx]
  40317c:	mov    esp,0xbb817aa3
  403181:	out    0xb,eax
  403183:	push   ebp
  403184:	jp     0x4031f2
  403186:	mov    ebp,edi
  403188:	push   0xfffffff5
  40318a:	fisubr WORD PTR [edi+0x4659a9e8]
  403190:	mov    bh,BYTE PTR [ecx-0x3b]
  403193:	(bad)  
  403194:	call   0x6bd1:0x2a6c6496
  40319b:	adc    eax,0xcf09ae94
  4031a0:	leave  
  4031a1:	scas   eax,DWORD PTR es:[edi]
  4031a2:	mov    edi,0xefafee58
  4031a7:	fild   DWORD PTR gs:[edi]
  4031aa:	push   edi
  4031ab:	shl    BYTE PTR [eax+0x6f141452],cl
  4031b1:	jmp    0x57bc:0xbe84f6c5
  4031b8:	retf   0xe1c9
  4031bb:	and    ebx,DWORD PTR [edx]
  4031bd:	dec    esi
  4031be:	cmp    DWORD PTR [eax-0x709dd2],ebp
  4031c4:	sbb    BYTE PTR [eax+0x7751a911],cl
  4031ca:	gs push esi
  4031cc:	lods   al,BYTE PTR ds:[esi]
  4031cd:	int    0x8d
  4031cf:	pop    edi
  4031d0:	arpl   bp,bx
  4031d2:	push   edi
  4031d3:	jl     0x403188
  4031d5:	sar    DWORD PTR [edx],cl
  4031d7:	mov    BYTE PTR [edx+0x42],ch
  4031da:	jns    0x403165
  4031dc:	jmp    0x20780888
  4031e1:	xchg   ebx,eax
  4031e2:	jb     0x4031bb
  4031e4:	sar    BYTE PTR [edx],1
  4031e6:	out    0xd,al
  4031e8:	rol    BYTE PTR [esi+0x18],0x43
  4031ec:	mov    dh,0x75
  4031ee:	repnz cmp bl,BYTE PTR [edi-0x200c0c0b]
  4031f5:	fnsave [edi+0x4778df8b]
  4031fb:	aad    0xa7
  4031fd:	call   0xff5c79a7
  403202:	and    BYTE PTR [eax+ecx*2+0x36],ch
  403206:	daa    
  403207:	cmp    DWORD PTR [ecx],esi
  403209:	jmp    0x4031f3
  40320b:	dec    esp
  40320c:	(bad)  
  40320d:	pop    ds
  40320e:	dec    ebp
  40320f:	sub    ecx,DWORD PTR [ebp+eax*2-0x3928dc90]
  403216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403217:	jecxz  0x403276
  403219:	test   BYTE PTR [eax-0x5b967529],cl
  40321f:	aad    0xd7
  403221:	cmp    al,ch
  403223:	int3   
  403224:	xchg   ebx,eax
  403225:	sbb    BYTE PTR [eax+0x4b],dh
  403228:	aaa    
  403229:	inc    edi
  40322a:	rcl    BYTE PTR [ecx],1
  40322c:	and    esp,edx
  40322e:	mov    esp,0x8a31639d
  403233:	jge    0x4032b4
  403235:	or     al,0x55
  403237:	aas    
  403238:	xor    esp,DWORD PTR [edi]
  40323a:	mov    DWORD PTR [ecx],edx
  40323c:	pushf  
  40323d:	adc    edx,edi
  40323f:	scas   al,BYTE PTR es:[edi]
  403240:	or     edx,DWORD PTR [eax-0xcffa57a]
  403246:	sbb    BYTE PTR [eax-0x69],ah
  403249:	sbb    edi,DWORD PTR [ebp+0x47]
  40324c:	call   0x9cc3:0xf2196060
  403253:	daa    
  403254:	push   es
  403255:	pop    ss
  403256:	and    BYTE PTR [ebp-0x6e],al
  403259:	add    DWORD PTR [edi+0x5ca1f390],esp
  40325f:	inc    esp
  403260:	xor    esi,DWORD PTR [edx+0x1]
  403263:	jne    0x4032af
  403265:	jmp    DWORD PTR [edi]
  403267:	sub    al,0x5c
  403269:	out    0x42,al
  40326b:	xchg   esi,ebx
  40326d:	repnz sbb BYTE PTR [ebx+0x72],bl
  403271:	sub    DWORD PTR [edi+0x1962fb15],esp
  403277:	retf   
  403278:	mov    ebx,DWORD PTR [esi+0x21]
  40327b:	sbb    ebp,ebp
  40327d:	dec    eax
  40327e:	fst    QWORD PTR [ecx+0x65]
  403281:	xor    BYTE PTR [ecx+0x74],0x35
  403285:	xchg   DWORD PTR [eax],edi
  403287:	out    0x94,eax
  403289:	add    DWORD PTR [eax+0x44],esp
  40328c:	test   esp,esp
  40328e:	mov    ebp,0x423ce853
  403293:	xor    ebx,edi
  403295:	sbb    DWORD PTR [edx],edi
  403297:	rcr    dh,0x95
  40329a:	call   0x8567:0x90259726
  4032a1:	push   esi
  4032a2:	test   ecx,edi
  4032a4:	xor    BYTE PTR [ecx+eiz*2+0x2],cl
  4032a8:	out    0xbd,al
  4032aa:	sbb    al,BYTE PTR [ebx]
  4032ac:	jmp    0xa55d:0xf7420006
  4032b3:	push   cs
  4032b4:	aaa    
  4032b5:	cs mov esp,0x9cbd3673
  4032bb:	je     0x4032b8
  4032bd:	sbb    al,0xda
  4032bf:	inc    edi
  4032c0:	and    BYTE PTR [ebx-0x52f8f8b6],al
  4032c6:	test   DWORD PTR [ecx+0x30509551],0x695eefbe
  4032d0:	jae    0x40333f
  4032d2:	inc    esp
  4032d3:	xchg   esi,eax
  4032d4:	inc    edx
  4032d5:	jl     0x4032bf
  4032d7:	xchg   ebx,eax
  4032d8:	ins    DWORD PTR es:[edi],dx
  4032d9:	jp     0x4032bc
  4032db:	inc    ebp
  4032dc:	push   cs
  4032dd:	fs (bad) 
  4032e0:	cmp    ah,BYTE PTR [edx-0x45]
  4032e3:	inc    ebp
  4032e4:	test   al,0x2b
  4032e6:	cli    
  4032e7:	mov    DWORD PTR [edi],ebp
  4032e9:	mov    al,0x1b
  4032eb:	xchg   DWORD PTR ds:0x15c4961a,esp
  4032f1:	lods   eax,DWORD PTR ds:[esi]
  4032f2:	ds (bad) 
  4032f4:	int3   
  4032f5:	xor    esi,DWORD PTR [edi]
  4032f7:	jns    0x40335f
  4032f9:	inc    BYTE PTR [ebp+0x7bf05681]
  4032ff:	xchg   DWORD PTR [ebx+ebp*8+0x1dc686da],esp
  403306:	fadd   st,st(5)
  403308:	iret   
  403309:	sbb    al,0x69
  40330b:	into   
  40330c:	repnz imul edi,DWORD PTR [edi-0x3b],0xffffff82
  403311:	cmc    
  403312:	mov    al,0xef
  403314:	(bad)  
  403315:	adc    al,0x6e
  403317:	mov    ebp,0x35cc0f59
  40331c:	mov    al,ds:0xb7b8387e
  403321:	pop    ebx
  403322:	adc    BYTE PTR [esi+0x5c],0x5e
  403326:	retf   0x3886
  403329:	cmp    dl,bh
  40332b:	mov    esi,0x83ada270
  403330:	pusha  
  403331:	push   edi
  403332:	jae    0x403375
  403334:	add    eax,0xd3eda8f7
  403339:	mov    dh,0x7c
  40333b:	inc    ebp
  40333c:	dec    DWORD PTR [esp+ebx*2]
  40333f:	js     0x403319
  403341:	retf   
  403342:	mov    eax,ds:0xea837570
  403347:	pusha  
  403348:	enter  0x1d06,0x33
  40334c:	sahf   
  40334d:	pop    ebx
  40334e:	sar    DWORD PTR [esi+0x30],0x20
  403352:	pop    ebx
  403353:	push   ebp
  403354:	outs   dx,DWORD PTR ds:[esi]
  403355:	bnd call 0x18fc3d17
  40335b:	pop    esi
  40335c:	xchg   esp,eax
  40335d:	ret    0xd817
  403360:	popf   
  403361:	add    BYTE PTR [edi+0x46],0x3e
  403365:	aas    
  403366:	jns    0x40335d
  403368:	sbb    DWORD PTR [esi],esi
  40336a:	xchg   esi,eax
  40336b:	idiv   BYTE PTR [ebx-0x4b]
  40336e:	data16 sub al,0x99
  403371:	scas   eax,DWORD PTR es:[edi]
  403372:	clc    
  403373:	mov    ds:0x6e1f30d5,al
  403378:	cmp    edi,DWORD PTR [ecx-0x4f]
  40337b:	inc    esp
  40337c:	(bad)  
  40337d:	cmp    eax,0xe40b9822
  403382:	test   DWORD PTR [ebp-0x36],ebx
  403385:	jno    0x403309
  403387:	fwait
  403388:	jbe    0x40334c
  40338a:	stos   BYTE PTR es:[edi],al
  40338b:	pop    edi
  40338c:	sbb    eax,0x2066100d
  403391:	sub    DWORD PTR [edi],0xffffff91
  403394:	and    al,0xe6
  403396:	je     0x403392
  403398:	dec    esp
  403399:	push   edi
  40339a:	xchg   bh,bl
  40339c:	jg     0x40339a
  40339e:	sbb    eax,ebx
  4033a0:	jbe    0x4033da
  4033a2:	inc    edi
  4033a3:	dec    ebp
  4033a4:	push   edi
  4033a5:	aam    0xff
  4033a7:	mov    bl,0x93
  4033a9:	fnsave [edi]
  4033ab:	or     eax,0xe2b5e135
  4033b0:	fdivr  QWORD PTR [edx]
  4033b2:	mov    eax,0x9b90eb11
  4033b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033b8:	into   
  4033b9:	or     al,0x32
  4033bb:	je     0x40333d
  4033bd:	xchg   esi,eax
  4033be:	ret    0xbc4c
  4033c1:	retf   
  4033c2:	fcmovnb st,st(5)
  4033c4:	and    eax,0xbc0e66f4
  4033c9:	xor    esi,eax
  4033cb:	arpl   WORD PTR [edi],ax
  4033cd:	stc    
  4033ce:	jns    0x4033ab
  4033d0:	jns    0x403401
  4033d2:	or     eax,0x4ed33c0b
  4033d7:	mov    esp,0xca4b2fe5
  4033dc:	xor    bh,BYTE PTR [eax]
  4033de:	shl    BYTE PTR [eax+eax*8],1
  4033e1:	pop    edx
  4033e2:	repz cmp al,0x4a
  4033e5:	cmp    eax,0x487a92bd
  4033ea:	push   ds
  4033eb:	jmp    0x64ab:0x39f78d55
  4033f2:	leave  
  4033f3:	or     al,bh
  4033f5:	es (bad) 
  4033f7:	xchg   ebx,eax
  4033f8:	sub    cl,ch
  4033fa:	mov    bl,0xc5
  4033fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033fd:	lods   eax,DWORD PTR ds:[esi]
  4033fe:	inc    esi
  4033ff:	xchg   ebx,eax
  403400:	or     edi,DWORD PTR [ecx+ebp*1-0x46]
  403404:	adc    DWORD PTR [ecx+0x46],ebp
  403407:	add    al,0x76
  403409:	or     BYTE PTR [esi-0x4e],bl
  40340c:	cmp    eax,0x14aac9fc
  403411:	sbb    ah,BYTE PTR [eax+0x5a]
  403414:	aaa    
  403415:	pop    ecx
  403416:	leave  
  403417:	adc    al,0x6f
  403419:	jge    0x403403
  40341b:	xor    cl,al
  40341d:	jo     0x40346d
  40341f:	xchg   edx,eax
  403420:	neg    DWORD PTR [esi]
  403422:	fld    QWORD PTR [eax+0x14]
  403425:	rcr    ebp,0xde
  403428:	mul    BYTE PTR [eax-0x4d1018f]
  40342e:	xchg   edi,eax
  40342f:	xor    al,bl
  403431:	dec    edi
  403432:	rol    ebp,0x8a
  403435:	test   DWORD PTR [ebp+0xa],0x80b6853d
  40343c:	stos   DWORD PTR es:[edi],eax
  40343d:	(bad)  
  40343e:	push   0xb7abb21c
  403443:	test   BYTE PTR [ebx+0x148d144],al
  403449:	test   eax,0xd0375deb
  40344e:	loope  0x40346d
  403450:	xor    dl,0xc5
  403453:	jno    0xd8d7970f
  403459:	outs   dx,DWORD PTR ds:[esi]
  40345a:	out    0x96,al
  40345c:	cld    
  40345d:	enter  0xfe5f,0xc3
  403461:	mov    DWORD PTR [esi+0x1aa70ac1],edi
  403467:	add    BYTE PTR [edi-0x678fede6],0x62
  40346e:	jp     0x4034ae
  403470:	sar    edx,0x30
  403473:	cmc    
  403474:	nop
  403475:	or     al,0x6e
  403477:	adc    al,0x56
  403479:	xchg   esp,eax
  40347a:	mov    bh,0xfb
  40347c:	js     0x40349b
  40347e:	sti    
  40347f:	sbb    eax,DWORD PTR [edx-0x396fa304]
  403485:	popf   
  403486:	cmp    edi,eax
  403488:	sbb    ebp,edx
  40348a:	fs pop es
  40348c:	xor    DWORD PTR [edx+0x7f906f42],edi
  403492:	mov    cl,0x46
  403494:	test   al,0x20
  403496:	lahf   
  403497:	inc    edi
  403498:	ins    DWORD PTR es:[edi],dx
  403499:	loopne 0x40342d
  40349b:	into   
  40349c:	imul   BYTE PTR [edi*1-0x3da130fc]
  4034a3:	int3   
  4034a4:	and    DWORD PTR [eax-0x17588f],0x805bea55
  4034ae:	add    ebp,DWORD PTR [ecx+0x170cb0a1]
  4034b4:	(bad)  
  4034b5:	jae    0x403480
  4034b7:	push   esp
  4034b8:	and    eax,0x1791bd19
  4034bd:	pushf  
  4034be:	pop    ecx
  4034bf:	aaa    
  4034c0:	pop    edx
  4034c1:	sbb    eax,0x2a7e6d26
  4034c6:	add    edi,edi
  4034c8:	push   es
  4034c9:	jg     0x403504
  4034cb:	les    ebp,FWORD PTR [edi-0x325de767]
  4034d1:	and    al,0x4f
  4034d3:	xor    eax,0x94bc6c7a
  4034d8:	cmp    BYTE PTR [edx+0x28274168],al
  4034de:	mov    ds:0xfb2ebc3c,al
  4034e3:	or     eax,DWORD PTR [edx]
  4034e5:	shl    BYTE PTR [ebx-0x529c067c],cl
  4034eb:	jnp    0x4034a6
  4034ed:	or     ch,ah
  4034ef:	retf   
  4034f0:	mov    ebp,0x95a0318
  4034f5:	mov    ds:0x27ae5a20,eax
  4034fa:	repz repnz fnstenv [esp+ebx*4+0xd860e62]
  403503:	mov    BYTE PTR [edi+0x57],ch
  403506:	cdq    
  403507:	pushf  
  403508:	or     al,0xb
  40350a:	jno    0x40350e
  40350c:	nop
  40350d:	push   esi
  40350e:	ficomp DWORD PTR [eax]
  403510:	int    0x8a
  403512:	scas   al,BYTE PTR es:[edi]
  403513:	and    esp,esi
  403515:	pop    ds
  403516:	ins    DWORD PTR es:[edi],dx
  403517:	(bad)  
  403519:	sar    al,0x3f
  40351c:	xchg   edi,eax
  40351d:	or     eax,0xe2cc1875
  403522:	iret   
  403523:	pop    esp
  403524:	inc    edi
  403525:	adc    al,0xdb
  403527:	xor    ch,BYTE PTR [ebx+0x20]
  40352a:	fs mov ah,0x5c
  40352d:	test   eax,0xd8cefc86
  403532:	xor    BYTE PTR ds:0xd73c7bc2,0x61
  403539:	sbb    eax,0xe8845259
  40353e:	sti    
  40353f:	pop    esp
  403541:	mov    ecx,0x79b1379b
  403546:	stc    
  403547:	enter  0xcfac,0xe1
  40354b:	inc    esp
  40354c:	out    dx,eax
  40354d:	sub    esi,DWORD PTR ds:0x9327fbe
  403553:	cmp    al,0xf4
  403555:	mov    dl,0xc1
  403557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403558:	ds mov edx,0x3b368b5e
  40355e:	mov    edi,0x27629ee2
  403563:	cmp    eax,0x74d219ad
  403568:	inc    eax
  403569:	mov    ah,0xc7
  40356b:	push   ss
  40356c:	retf   
  40356d:	inc    ebx
  40356e:	inc    eax
  40356f:	mov    ds:0x46dfe6fe,eax
  403574:	mov    al,ds:0x1b24825
  403579:	pop    ebp
  40357a:	xchg   edx,eax
  40357b:	or     DWORD PTR [ebx+0x40],0x5b
  40357f:	dec    ebp
  403580:	scas   eax,DWORD PTR es:[edi]
  403581:	xlat   BYTE PTR ds:[ebx]
  403582:	jne    0x40359c
  403584:	jmp    0x783c602b
  403589:	xor    eax,0xd848d384
  40358e:	push   ebp
  40358f:	arpl   WORD PTR [edi+0x413df37],ax
  403595:	push   edi
  403596:	mov    edi,0x2009797a
  40359b:	in     al,0xc9
  40359d:	jb     0x4035b8
  40359f:	mov    esi,0x732760de
  4035a4:	test   dh,0x82
  4035a7:	ret    0x1742
  4035aa:	pop    ebp
  4035ab:	and    ecx,ecx
  4035ad:	xor    eax,0x744d0bdb
  4035b2:	jmp    0x6cc0:0x83693d4c
  4035b9:	in     al,0xf3
  4035bb:	lods   al,BYTE PTR ds:[esi]
  4035bc:	in     al,0x31
  4035be:	arpl   WORD PTR [edi+0x4b],cx
  4035c1:	pusha  
  4035c2:	aas    
  4035c3:	std    
  4035c4:	mov    dl,0x51
  4035c6:	and    al,0xd7
  4035c8:	jecxz  0x403623
  4035ca:	sbb    BYTE PTR [eax+0x6dabacb3],cl
  4035d0:	sub    DWORD PTR [edx+ecx*8-0x77eb2873],ebx
  4035d7:	arpl   sp,dx
  4035d9:	sar    ah,0x1a
  4035dc:	xchg   ebx,eax
  4035dd:	sbb    ecx,DWORD PTR [ebx]
  4035df:	mov    ds:0xf81ba997,al
  4035e4:	cs jo  0x403644
  4035e7:	mov    ebp,0x1a03fe6b
  4035ec:	sbb    al,0xfa
  4035ee:	test   DWORD PTR [esi-0x1a],edi
  4035f1:	add    DWORD PTR [edx-0x1773654],0xffffff90
  4035f8:	out    dx,eax
  4035f9:	push   0xfc5b9aa1
  4035fe:	lods   al,BYTE PTR ds:[esi]
  4035ff:	mov    dl,0x5b
  403601:	jl     0x403636
  403603:	sub    al,0x3e
  403605:	jmp    0x13b2:0x39c97f8d
  40360c:	(bad)  
  40360d:	sub    eax,0xe0feefee
  403612:	fcmovu st,st(7)
  403614:	add    BYTE PTR [ebx-0x38783ab0],bh
  40361a:	push   esp
  40361b:	add    bh,BYTE PTR [ecx-0x56091470]
  403621:	mov    ds:0xcb4b9da1,eax
  403626:	jg     0x403601
  403628:	repz cli 
  40362a:	fisubr WORD PTR [ecx-0x7f]
  40362d:	fsubr  DWORD PTR [ebx+0x2c3ad86c]
  403633:	shl    DWORD PTR [edi],cl
  403635:	push   0x1
  403637:	fistp  WORD PTR [esi]
  403639:	jmp    0x4035ff
  40363b:	mov    WORD PTR [esi],?
  40363d:	pop    edx
  40363e:	(bad)  
  40363f:	or     al,dl
  403641:	fadd   st,st(7)
  403643:	adc    al,BYTE PTR [ebx-0x78c82de7]
  403649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40364a:	xor    ebp,DWORD PTR [esi+ebx*1]
  40364d:	add    bh,ch
  40364f:	dec    edx
  403650:	fsubr  DWORD PTR [edx+ebp*8+0x13]
  403654:	and    ebx,DWORD PTR ds:0x70412145
  40365a:	mov    ebp,0xff957b45
  40365f:	repz xor al,0x57
  403662:	repnz and edx,esp
  403665:	sub    al,0x66
  403667:	ret    0x2db0
  40366a:	inc    esp
  40366b:	(bad)  
  40366c:	aam    0xf3
  40366e:	xor    dh,ah
  403670:	pop    esi
  403671:	pop    eax
  403672:	or     al,0xea
  403674:	xor    al,0x7a
  403676:	push   0xffffff88
  403678:	iret   
  403679:	mov    ds:0x8e85e855,eax
  40367e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40367f:	loopne 0x4036fe
  403681:	cmp    DWORD PTR [ebx+0x27180889],edi
  403687:	sub    DWORD PTR [ecx+0x40],ebx
  40368a:	sti    
  40368b:	push   ss
  40368c:	xchg   esi,eax
  40368d:	or     eax,0x2f9aca3f
  403692:	mov    edi,0x1f825460
  403697:	sbb    DWORD PTR [edx],edx
  403699:	sbb    BYTE PTR [ecx-0x3c4f270e],dl
  40369f:	(bad)  
  4036a0:	addr16 jge 0x4036af
  4036a3:	rcr    dh,1
  4036a5:	push   ds
  4036a6:	and    ecx,DWORD PTR [eax+ebp*4+0x66]
  4036aa:	push   ecx
  4036ab:	shl    BYTE PTR [edx+0x1ceed583],0xaf
  4036b2:	js     0x4036ec
  4036b4:	adc    BYTE PTR [ebp+0x62],0xe0
  4036b8:	mov    bh,0x73
  4036ba:	xchg   esp,eax
  4036bb:	ds scas al,BYTE PTR es:[edi]
  4036bd:	inc    ebx
  4036be:	inc    esi
  4036bf:	push   cs
  4036c0:	add    DWORD PTR [edx+0x24],0xffffff87
  4036c4:	pushf  
  4036c5:	inc    edi
  4036c6:	dec    esp
  4036c7:	int3   
  4036c8:	jp     0x4036fc
  4036ca:	mov    ebp,0x32247c2d
  4036cf:	xor    DWORD PTR [eax],esp
  4036d1:	mov    dh,0x57
  4036d3:	cmc    
  4036d4:	dec    eax
  4036d5:	daa    
  4036d6:	lock sub bl,BYTE PTR [ebp-0x12]
  4036da:	sub    al,0xda
  4036dc:	mov    dh,0xb9
  4036de:	add    bl,BYTE PTR [eax+0x1c]
  4036e1:	and    eax,0x317cb584
  4036e6:	out    dx,eax
  4036e7:	xchg   BYTE PTR [ebp+0x29fb437f],al
  4036ed:	pushf  
  4036ee:	jecxz  0x403759
  4036f0:	sbb    eax,0xc8eeb7f4
  4036f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f6:	pop    esp
  4036f7:	xchg   ebp,eax
  4036f8:	(bad)  
  4036f9:	and    DWORD PTR [esi-0x7a],0x490b836d
  403700:	inc    ecx
  403701:	ret    0xbdd0
  403704:	push   eax
  403705:	mov    ebp,0xd42f7221
  40370a:	lock push ds
  40370c:	ss inc esp
  40370e:	mov    ds:0xaa73c9f,al
  403713:	imul   eax,DWORD PTR [esi],0x21614e11
  403719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40371a:	add    eax,0x4bd87fac
  40371f:	dec    ebp
  403720:	pop    ebp
  403721:	imul   eax,edx,0x740115e3
  403727:	jg     0x4036ab
  403729:	inc    esi
  40372a:	fstp   DWORD PTR [ecx-0x58]
  40372d:	rol    BYTE PTR ds:0x7a37f9b6,1
  403733:	cmp    DWORD PTR [ebp-0x7c573898],eax
  403739:	loopne 0x40379b
  40373b:	lahf   
  40373c:	mov    ch,0xec
  40373e:	call   0xfcf3b57d
  403743:	add    BYTE PTR [ecx-0x3eeb6799],bh
  403749:	out    0xbd,eax
  40374b:	stos   BYTE PTR es:[edi],al
  40374c:	jmp    0x403714
  40374e:	push   ebp
  40374f:	(bad)
  403753:	retf   0x904f
  403756:	sub    DWORD PTR [ebx],esp
  403758:	cmp    esi,DWORD PTR [ebx-0x29]
  40375b:	pushf  
  40375c:	int    0xef
  40375e:	lahf   
  40375f:	dec    edx
  403760:	data16 jo 0x403780
  403763:	mov    esp,edi
  403765:	inc    ecx
  403766:	push   0xf3ed10a6
  40376b:	sbb    esi,DWORD PTR [edx+0x369b37b2]
  403771:	pop    esp
  403772:	xchg   ebx,eax
  403773:	mov    eax,ds:0xccd7b00
  403778:	xchg   ecx,eax
  403779:	rcr    DWORD PTR [ebp-0x68552a81],cl
  40377f:	repz lahf 
  403781:	or     bh,BYTE PTR [edi-0x4d]
  403784:	xchg   esi,eax
  403785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403786:	cmp    al,BYTE PTR [ecx-0x2ad89347]
  40378c:	leave  
  40378d:	jl     0x4037a0
  40378f:	iret   
  403790:	dec    al
  403792:	push   esp
  403793:	jb     0x403754
  403795:	jmp    0x77aa43ad
  40379a:	cmp    BYTE PTR [eax-0x73972765],ch
  4037a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037a1:	repz cdq 
  4037a3:	mov    ds:0xe882d0d8,eax
  4037a8:	sub    bh,BYTE PTR [ebx-0x1c]
  4037ab:	ins    DWORD PTR es:[edi],dx
  4037ac:	bound  ebx,QWORD PTR [edi]
  4037ae:	pop    esi
  4037af:	into   
  4037b0:	cmp    cl,dl
  4037b2:	(bad)  
  4037b3:	mov    cl,ch
  4037b5:	mov    bl,0x88
  4037b7:	mov    dh,0x79
  4037b9:	inc    ebx
  4037ba:	sbb    BYTE PTR [edx+0x6298fdf5],dh
  4037c0:	imul   ecx,DWORD PTR [ebp+0xe4359b],0xfc202373
  4037ca:	imul   esi,DWORD PTR [ebx+ebp*8-0x49],0xffffffd5
  4037cf:	cs test eax,0x68adf905
  4037d5:	scas   eax,DWORD PTR es:[edi]
  4037d6:	call   0x161513e5
  4037db:	mov    dl,BYTE PTR [edi-0x42]
  4037de:	adc    ecx,eax
  4037e0:	ins    DWORD PTR es:[edi],dx
  4037e1:	int3   
  4037e2:	adc    edx,0x743521d
  4037e8:	push   0x22
  4037ea:	(bad)  
  4037eb:	call   0xaa33b22e
  4037f0:	mov    esp,0xbf6eb49a
  4037f5:	adc    ebp,esi
  4037f7:	or     al,0xc4
  4037f9:	adc    DWORD PTR [ebp-0x2e579a3d],ebp
  4037ff:	ja     0x4037eb
  403801:	dec    ecx
  403802:	adc    DWORD PTR [esi-0x6b],esp
  403805:	adc    BYTE PTR [edx-0x6a8c0aad],dl
  40380b:	ins    DWORD PTR es:[edi],dx
  40380c:	bound  eax,QWORD PTR [ebx]
  40380e:	ret    
  40380f:	test   eax,0xf06d1566
  403814:	mov    ebp,0xcdf8fccf
  403819:	fst    DWORD PTR [ecx+edi*2-0x10f3ca78]
  403820:	in     eax,dx
  403821:	clc    
  403822:	int    0x29
  403824:	xlat   BYTE PTR ds:[ebx]
  403825:	ficomp DWORD PTR [esi-0x174b20f3]
  40382b:	in     eax,0x6e
  40382d:	daa    
  40382e:	jl     0x403846
  403830:	push   esp
  403831:	cmp    DWORD PTR [ecx],ebp
  403833:	jmp    0x844cb196
  403838:	lahf   
  403839:	pop    esi
  40383a:	pushf  
  40383b:	(bad)  
  40383c:	xchg   ebp,eax
  40383d:	mul    DWORD PTR [edx]
  40383f:	out    0x9e,eax
  403841:	push   ss
  403842:	retf   
  403843:	sub    dh,ah
  403845:	(bad)  
  403846:	sub    DWORD PTR [eax-0x35],eax
  403849:	dec    ecx
  40384a:	rcl    BYTE PTR [edx+0x6a],0x96
  40384e:	mov    ecx,0xcde24627
  403853:	or     esi,ebx
  403855:	pop    ds
  403856:	mov    bl,0x91
  403858:	pusha  
  403859:	cdq    
  40385a:	scas   al,BYTE PTR es:[edi]
  40385b:	jns    0x4037f9
  40385d:	xchg   edx,eax
  40385e:	xor    ecx,0x75d74d30
  403864:	xchg   ebx,eax
  403865:	std    
  403866:	inc    esi
  403867:	mov    eax,0x78fe3056
  40386c:	out    dx,eax
  40386d:	xchg   ebx,eax
  40386e:	and    ebp,esi
  403870:	stos   BYTE PTR es:[edi],al
  403871:	call   0xf052f0bc
  403876:	sub    eax,0x7caa4d97
  40387b:	ficomp WORD PTR [esi-0x584da58f]
  403881:	ds call 0x5879:0x933deb90
  403889:	leave  
  40388a:	pop    ebx
  40388b:	test   eax,0x13ec1315
  403890:	cmp    al,BYTE PTR [eax-0x40ffc1bb]
  403896:	stos   BYTE PTR es:[edi],al
  403897:	cld    
  403898:	imul   esi,DWORD PTR [esi],0x20
  40389b:	(bad)  
  40389c:	repnz shr BYTE PTR [eax],0xa6
  4038a0:	fisttp WORD PTR [edx+eax*1+0x4d67bbe8]
  4038a7:	ds lahf 
  4038a9:	jae    0x4038da
  4038ab:	ins    BYTE PTR es:[edi],dx
  4038ac:	bound  esp,QWORD PTR [ecx]
  4038ae:	aam    0x59
  4038b0:	clc    
  4038b1:	inc    ecx
  4038b2:	jg     0x4038bd
  4038b4:	xchg   edi,eax
  4038b5:	xor    edx,ebx
  4038b7:	ss cmp dh,bh
  4038ba:	sub    DWORD PTR [esi+0xd90dd19],0xffffffc2
  4038c1:	mov    gs:0xdb11210b,al
  4038c7:	cld    
  4038c8:	mov    esi,0x2a93fa4f
  4038cd:	mov    WORD PTR [esi+0x62d53d13],ss
  4038d3:	mov    ebx,0x57906e7b
  4038d8:	arpl   WORD PTR [edi-0x5b],di
  4038db:	outs   dx,DWORD PTR ds:[esi]
  4038dc:	mov    WORD PTR [ecx],fs
  4038de:	dec    eax
  4038df:	mov    edx,DWORD PTR [eax+esi*2-0x370e58de]
  4038e6:	mov    bl,0x1e
  4038e8:	sbb    dh,BYTE PTR [esi+eiz*4]
  4038eb:	sar    BYTE PTR [edx+0x2d],0xeb
  4038ef:	lahf   
  4038f0:	fnstsw WORD PTR gs:[eax-0x6185b9e8]
  4038f7:	push   ss
  4038f8:	and    eax,0x14dfedfd
  4038fd:	dec    ecx
  4038fe:	and    BYTE PTR [ebx+0x30],0xef
  403902:	cmovbe eax,ecx
  403905:	pushf  
  403906:	add    ebx,DWORD PTR [esi+0x5e]
  403909:	mov    cl,0xdd
  40390b:	mov    edx,0x393471a
  403910:	mov    esp,0x3370ea85
  403915:	lahf   
  403916:	sbb    ebx,DWORD PTR [ecx-0x58]
  403919:	xchg   ebp,eax
  40391a:	aad    0x70
  40391c:	inc    edx
  40391d:	dec    eax
  40391e:	mov    eax,ds:0x6cbcc269
  403923:	sbb    DWORD PTR [esi],ebx
  403925:	fld    DWORD PTR [esi+0x454a0cac]
  40392b:	outs   dx,DWORD PTR ds:[esi]
  40392c:	ficomp WORD PTR [edx]
  40392e:	icebp  
  40392f:	in     al,dx
  403930:	retf   
  403931:	xor    eax,ecx
  403933:	enter  0xb109,0x4e
  403937:	xor    ebp,DWORD PTR [edx-0x285b8712]
  40393d:	mov    al,BYTE PTR [edi+0x67]
  403940:	test   DWORD PTR [eax],ecx
  403942:	xchg   esi,eax
  403943:	cmc    
  403944:	es sbb cl,ah
  403947:	ds jg  0x403908
  40394a:	mov    WORD PTR [esi-0x374c08ff],fs
  403950:	xor    BYTE PTR [esi+0x7fafd3d3],bh
  403956:	mov    WORD PTR [ebx+0x17305a5e],cs
  40395c:	aaa    
  40395d:	adc    eax,0x70746d3c
  403962:	stc    
  403963:	rcr    BYTE PTR [ecx-0x6f],1
  403966:	push   0xcb26138b
  40396b:	cld    
  40396c:	jp     0x403979
  40396e:	fdiv   DWORD PTR [edi+ebp*1-0x3e]
  403972:	or     al,0xa
  403974:	lahf   
  403975:	js     0x4039c8
  403977:	je     0x4039e0
  403979:	sub    eax,0x58d4d464
  40397e:	add    ah,al
  403980:	add    esi,DWORD PTR [eax+0x2e]
  403983:	add    esi,DWORD PTR [ebp-0x6e4385a1]
  403989:	adc    edi,DWORD PTR [eax+0x4f8f6b8f]
  40398f:	stos   DWORD PTR es:[edi],eax
  403990:	and    eax,DWORD PTR [esi-0x1895436a]
  403996:	pop    ecx
  403997:	adc    DWORD PTR [edi+0x36],edi
  40399a:	pop    esi
  40399b:	in     al,dx
  40399c:	jl     0x403920
  40399e:	pushf  
  40399f:	jo     0x403993
  4039a1:	or     edx,DWORD PTR [edi+0x2a]
  4039a4:	fistp  DWORD PTR [edi-0x5c]
  4039a7:	mov    ecx,eax
  4039a9:	push   edx
  4039aa:	ja     0x4039ff
  4039ac:	mov    al,0x86
  4039ae:	mov    WORD PTR [edi],gs
  4039b0:	cmp    ebx,esp
  4039b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039b3:	rol    DWORD PTR [edx-0x5a],1
  4039b6:	pusha  
  4039b7:	mov    DWORD PTR [ebp+0x4e22c5b4],edi
  4039bd:	cs stos DWORD PTR es:[edi],eax
  4039bf:	fmul   DWORD PTR [ebx]
  4039c1:	xor    BYTE PTR [esi-0x4],bl
  4039c4:	or     al,0xec
  4039c6:	cli    
  4039c7:	hlt    
  4039c8:	outs   dx,BYTE PTR ds:[esi]
  4039c9:	das    
  4039ca:	sub    DWORD PTR [ebx],ebx
  4039cc:	pop    ds
  4039cd:	popf   
  4039ce:	add    dh,BYTE PTR [ebp+0x4adde381]
  4039d4:	sub    ecx,ecx
  4039d6:	dec    ebp
  4039d7:	in     al,dx
  4039d8:	out    dx,eax
  4039d9:	sub    ebp,DWORD PTR [di]
  4039dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039dd:	je     0x4039ac
  4039df:	push   ebx
  4039e0:	mov    edx,0x5c4778be
  4039e5:	(bad)  [ecx]
  4039e7:	xchg   BYTE PTR [ecx],bl
  4039e9:	cmp    al,0xae
  4039eb:	(bad)  
  4039ec:	out    dx,eax
  4039ed:	hlt    
  4039ee:	cmp    ebp,0xffffffe8
  4039f1:	mov    dh,ch
  4039f3:	std    
  4039f4:	xchg   edx,eax
  4039f5:	push   esi
  4039f6:	fmul   QWORD PTR [ebx]
  4039f8:	cmp    DWORD PTR [edx+esi*1-0x77317255],eax
  4039ff:	stos   BYTE PTR es:[edi],al
  403a00:	psraw  mm6,mm3
  403a03:	ret    
  403a04:	and    DWORD PTR [ebx],esi
  403a06:	mov    bh,0x32
  403a08:	scas   eax,DWORD PTR es:[edi]
  403a09:	lods   al,BYTE PTR ds:[esi]
  403a0a:	xchg   edi,eax
  403a0b:	inc    ebx
  403a0c:	outs   dx,BYTE PTR ds:[esi]
  403a0d:	push   ecx
  403a0e:	in     al,dx
  403a0f:	push   ebx
  403a10:	out    dx,eax
  403a11:	xchg   DWORD PTR [edi+0x14814346],esp
  403a17:	jmp    0x78d487a7
  403a1c:	sub    ah,BYTE PTR [edi+ebx*2+0x60]
  403a20:	xchg   ebp,eax
  403a21:	fild   QWORD PTR [esi-0x451cab42]
  403a27:	ja     0x4039d8
  403a29:	addr16 dec ebx
  403a2b:	call   0x47ec:0x89fb8124
  403a32:	jne    0x403a7d
  403a34:	lods   al,BYTE PTR ds:[esi]
  403a35:	xor    eax,0x61058da9
  403a3a:	push   ds
  403a3b:	in     eax,0xbc
  403a3d:	sub    eax,0xa1792840
  403a42:	call   0xa756f3a4
  403a47:	jl     0x403a64
  403a49:	push   ecx
  403a4a:	or     ebp,ecx
  403a4c:	and    ebx,DWORD PTR [esi-0x13226a52]
  403a52:	mov    ds:0xa8bfbe41,eax
  403a57:	(bad)
  403a5b:	pop    ebx
  403a5c:	xor    esp,ecx
  403a5e:	adc    edx,ebp
  403a60:	inc    ebp
  403a61:	pushf  
  403a62:	in     al,dx
  403a63:	clc    
  403a64:	xchg   esi,eax
  403a65:	pop    eax
  403a66:	jnp    0x403a56
  403a68:	pushf  
  403a69:	jne    0x403a50
  403a6b:	rcl    eax,0x3d
  403a6e:	jno    0x403a6a
  403a70:	push   ecx
  403a71:	cmp    eax,0xde4ab34e
  403a76:	lods   al,BYTE PTR ds:[esi]
  403a77:	dec    ebx
  403a78:	mov    ax,0x6309
  403a7c:	fdiv   QWORD PTR [edi+eiz*4-0x5c]
  403a80:	sub    bh,dh
  403a82:	xchg   BYTE PTR [ecx-0x9],cl
  403a85:	pop    es
  403a86:	icebp  
  403a87:	pop    esp
  403a88:	sbb    ebp,DWORD PTR [ebp-0x3dc14f3e]
  403a8e:	adc    BYTE PTR [ecx],al
  403a90:	and    eax,0x9e8fb372
  403a95:	mov    eax,ds:0x98b9e6c5
  403a9a:	(bad)  
  403a9c:	pop    edx
  403a9d:	xlat   BYTE PTR ds:[ebx]
  403a9e:	mov    edi,0x63e68a86
  403aa3:	cmp    dh,bh
  403aa5:	inc    ebx
  403aa6:	ror    BYTE PTR [edx],1
  403aa8:	cli    
  403aa9:	retf   0xc048
  403aac:	mov    ch,0x30
  403aae:	ror    DWORD PTR [esi+0x70],0xed
  403ab2:	jge    0x403af1
  403ab4:	push   0x59b9b7d2
  403ab9:	arpl   WORD PTR [edx-0x22d3600f],ax
  403abf:	add    cl,dh
  403ac1:	sbb    ah,ch
  403ac3:	cwde   
  403ac4:	ficomp DWORD PTR es:[eax+edx*8]
  403ac8:	es aad 0xf5
  403acb:	shr    BYTE PTR [eax],cl
  403acd:	dec    eax
  403ace:	adc    DWORD PTR [ecx],esi
  403ad0:	imul   eax,DWORD PTR [ecx],0x484a3cd5
  403ad6:	fcomi  st,st(5)
  403ad8:	sub    BYTE PTR [esp+ebp*4],bh
  403adb:	pop    ecx
  403adc:	add    eax,0x5d81b297
  403ae1:	int3   
  403ae2:	jae    0x403ae1
  403ae4:	jmp    0x781f:0x9ccaafdd
  403aeb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aed:	leave  
  403aee:	fnsave [edx]
  403af0:	or     BYTE PTR [esi+edx*2-0xae91470],0x53
  403af8:	mov    bl,0xdd
  403afa:	(bad)  
  403afb:	repnz pop ecx
  403afd:	ret    0xc34d
  403b00:	lods   eax,DWORD PTR ds:[esi]
  403b01:	ficom  DWORD PTR [ecx-0x50]
  403b04:	mov    ah,dl
  403b06:	xor    eax,0x24546050
  403b0b:	mov    ds:0x5bfed68e,eax
  403b10:	inc    esp
  403b11:	out    dx,al
  403b12:	inc    esp
  403b13:	and    BYTE PTR [esi+0x3e],dl
  403b16:	lock mov cl,0x86
  403b19:	std    
  403b1a:	je     0x403b0c
  403b1c:	(bad)  
  403b1d:	stc    
  403b1e:	jb     0x403aad
  403b20:	in     eax,dx
  403b21:	cwde   
  403b22:	jns    0x403afc
  403b24:	and    BYTE PTR [ebx+0x6c],0x95
  403b28:	mov    al,ds:0xc72b68d3
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429bbf
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	(bad)  [ebx+ebp*2+0x5cef00bb]
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xffffffb3
  403ca6:	hlt    
  403ca7:	cdq    
  403ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ca9:	mov    edi,0x97773d8b
  403cae:	ja     0x403c9d
  403cb0:	push   edi
  403cb1:	sub    ebx,0x329978bd
  403cb7:	xchg   ebx,eax
  403cb8:	daa    
  403cb9:	outs   dx,DWORD PTR ds:[esi]
  403cba:	push   cs
  403cbb:	xchg   esp,eax
  403cbc:	or     esp,DWORD PTR [ebp-0x4958fa97]
  403cc2:	xor    eax,0x2f73f902
  403cc7:	shr    DWORD PTR [edx+0x7d604e0c],1
  403ccd:	mov    cl,0xea
  403ccf:	pop    ss
  403cd0:	or     al,0xfb
  403cd2:	pop    es
  403cd3:	rcl    BYTE PTR [ebx+0x243b5345],cl
  403cd9:	jmp    0x403c69
  403cdb:	add    eax,0x5c86069d
  403ce0:	aam    0x50
  403ce2:	push   ds
  403ce3:	hlt    
  403ce4:	dec    edx
  403ce5:	push   edx
  403ce6:	dec    esi
  403ce7:	popa   
  403ce8:	enter  0x62b1,0xd
  403cec:	push   ss
  403ced:	fcmovu st,st(1)
  403cef:	or     esp,0xffffffc8
  403cf2:	dec    eax
  403cf3:	ja     0x403d3f
  403cf5:	pop    ebx
  403cf6:	push   ebp
  403cf7:	and    eax,0xe080b41d
  403cfc:	fwait
  403cfd:	rep stos BYTE PTR es:[edi],al
  403cff:	iret   
  403d00:	(bad)
  403d03:	cdq    
  403d04:	sbb    eax,0x326e6e6b
  403d09:	cmp    bl,BYTE PTR [esi+0x692f8f89]
  403d0f:	cmpps  xmm4,XMMWORD PTR [esi+0x77869099],0x20
  403d17:	rol    esi,cl
  403d19:	inc    edi
  403d1a:	sti    
  403d1b:	popa   
  403d1c:	popf   
  403d1d:	test   BYTE PTR [eax+0x437ff857],0x71
  403d24:	test   BYTE PTR [ecx],al
  403d26:	dec    esi
  403d27:	sub    eax,0x7b866a83
  403d2c:	arpl   dx,dx
  403d2e:	sbb    bh,ah
  403d30:	xchg   BYTE PTR [ebp+0x35b3f480],dh
  403d36:	xor    dh,bl
  403d38:	jo     0x403cc6
  403d3a:	or     DWORD PTR [ebx],ebx
  403d3c:	sti    
  403d3d:	adc    al,0x7c
  403d3f:	(bad)  
  403d40:	fldenv [edi-0x27]
  403d43:	or     dl,BYTE PTR [eax]
  403d45:	mov    ch,0xfc
  403d47:	hlt    
  403d48:	mov    bl,0x95
  403d4a:	ins    BYTE PTR es:[edi],dx
  403d4b:	cmp    DWORD PTR fs:[edx-0x2ea8b560],eax
  403d52:	and    eax,DWORD PTR [ecx+0x822bc9d]
  403d58:	hlt    
  403d59:	adc    eax,0x2ed3a823
  403d5e:	xor    edi,DWORD PTR [ebx]
  403d60:	and    bl,dl
  403d62:	xor    bh,0xb5
  403d65:	sbb    al,0xa1
  403d67:	push   cs
  403d68:	cli    
  403d69:	cli    
  403d6a:	ret    
  403d6b:	sbb    ah,BYTE PTR [edx]
  403d6d:	imul   esi,DWORD PTR [esi-0x36],0x39
  403d71:	and    eax,0x6c98883c
  403d76:	adc    eax,0xbe1f7f02
  403d7b:	stos   DWORD PTR es:[edi],eax
  403d7c:	xlat   BYTE PTR ds:[ebx]
  403d7d:	sub    al,0x7e
  403d7f:	inc    esi
  403d80:	shl    BYTE PTR [eax+0x7f],0x3d
  403d84:	and    bl,bl
  403d86:	dec    esp
  403d87:	xchg   esi,eax
  403d88:	mov    ebp,DWORD PTR [edx+0x33]
  403d8b:	lea    ecx,[ecx]
  403d8d:	aad    0x1f
  403d8f:	adc    eax,0xde5beaa0
  403d94:	lahf   
  403d95:	ja     0x403d1d
  403d97:	mov    bl,0x6e
  403d99:	js     0x403e02
  403d9b:	(bad)  
  403d9c:	cld    
  403d9d:	hlt    
  403d9e:	into   
  403d9f:	scas   al,BYTE PTR es:[edi]
  403da0:	aam    0xdd
  403da2:	or     dh,ah
  403da4:	cwde   
  403da5:	xor    eax,0x74f84bd7
  403daa:	aas    
  403dab:	in     eax,dx
  403dac:	scas   al,BYTE PTR es:[edi]
  403dad:	in     eax,0x50
  403daf:	cmp    DWORD PTR [edi],eax
  403db1:	sub    al,0xa8
  403db3:	sahf   
  403db4:	pop    edi
  403db5:	les    ecx,FWORD PTR [edi]
  403db7:	add    al,0x1c
  403db9:	add    DWORD PTR [eax],eax
  403dbb:	stos   BYTE PTR es:[edi],al
  403dbc:	inc    edi
  403dbd:	stos   BYTE PTR es:[edi],al
  403dbe:	gs pop ecx
  403dc0:	std    
  403dc1:	cmp    BYTE PTR [edi+0x1],bh
  403dc4:	mov    bh,0x3e
  403dc6:	repnz nop
  403dc8:	rcr    BYTE PTR [esi+0x26],1
  403dcb:	pop    esp
  403dcc:	pop    ss
  403dcd:	inc    edx
  403dce:	xchg   edi,eax
  403dcf:	mov    ah,0xf9
  403dd1:	pop    ecx
  403dd2:	in     al,dx
  403dd3:	xor    edx,DWORD PTR [ebx-0x6c]
  403dd6:	sub    DWORD PTR [edx],esp
  403dd8:	mov    ebx,DWORD PTR [esi+eax*1-0x4c]
  403ddc:	fild   WORD PTR [eax]
  403dde:	inc    esi
  403ddf:	mov    al,ds:0xbe461c7f
  403de4:	mov    edx,0x4e26a590
  403de9:	icebp  
  403dea:	pop    es
  403deb:	aaa    
  403dec:	jg     0x403dfe
  403dee:	pusha  
  403def:	push   ebp
  403df0:	sub    al,0x4a
  403df2:	and    al,0x3c
  403df4:	inc    ebx
  403df5:	pop    edi
  403df6:	inc    esp
  403df7:	pop    es
  403df8:	jl     0x403d90
  403dfa:	xchg   ebp,eax
  403dfb:	adc    ah,BYTE PTR [ebp+0x2aceb354]
  403e01:	adc    BYTE PTR [ebp+edi*2+0x23],bh
  403e05:	adc    eax,0x9eebb864
  403e0a:	lock sbb BYTE PTR [ecx],al
  403e0d:	arpl   WORD PTR ss:[esi+0x3382f657],si
  403e14:	push   edx
  403e15:	pushf  
  403e16:	lea    esi,[ebx+ecx*4]
  403e19:	cs pop es
  403e1b:	inc    ebx
  403e1c:	fs js  0x403e9b
  403e1f:	or     dh,ch
  403e21:	cmp    eax,0x9bb73835
  403e26:	jecxz  0x403df4
  403e28:	jae    0x403de7
  403e2a:	jmp    0xd4fc6ce0
  403e2f:	ins    DWORD PTR es:[edi],dx
  403e30:	or     BYTE PTR [edi+0x3f],bl
  403e33:	loopne 0x403e2d
  403e35:	shr    BYTE PTR ds:0xae335153,1
  403e3b:	pop    es
  403e3c:	loope  0x403dd2
  403e3e:	or     esp,0x9f647c49
  403e44:	push   0x15
  403e46:	scas   eax,DWORD PTR es:[edi]
  403e47:	out    dx,eax
  403e48:	mov    ecx,0x1c44a5c4
  403e4d:	shl    ah,cl
  403e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e50:	dec    ebp
  403e51:	aad    0x31
  403e53:	xchg   esi,eax
  403e54:	mov    eax,0x5616d4d7
  403e59:	inc    edx
  403e5a:	pop    ds
  403e5b:	sbb    esp,edi
  403e5d:	cmc    
  403e5e:	or     al,0xb7
  403e60:	sbb    al,BYTE PTR [esi+edx*1]
  403e63:	jbe    0x403e8c
  403e65:	cmp    DWORD PTR [edx-0x53],0x1b
  403e69:	call   eax
  403e6b:	(bad)  
  403e6c:	lods   eax,DWORD PTR ds:[esi]
  403e6d:	pushf  
  403e6e:	jg     0x403ebb
  403e70:	bnd jge 0x403e7e
  403e73:	sti    
  403e74:	sub    BYTE PTR [esi],bl
  403e76:	mov    ebx,0xa98122f8
  403e7b:	dec    esi
  403e7c:	pushf  
  403e7d:	pop    es
  403e7e:	fbld   TBYTE PTR [ecx+ecx*1-0x1fd280f5]
  403e85:	stos   DWORD PTR es:[edi],eax
  403e86:	popa   
  403e87:	daa    
  403e88:	int3   
  403e89:	push   ss
  403e8a:	outs   dx,BYTE PTR ds:[esi]
  403e8b:	stos   DWORD PTR es:[edi],eax
  403e8c:	inc    esi
  403e8d:	repz add bh,BYTE PTR [si+0x74e5]
  403e93:	jmp    0x46d5:0x44bbe5d
  403e9a:	jne    0x403ea5
  403e9c:	mov    ah,0x58
  403e9e:	and    BYTE PTR [esi],0x1
  403ea1:	mov    WORD PTR [esi+eiz*2-0x3c79967c],fs
  403ea8:	or     al,0xa9
  403eaa:	sbb    eax,0x541929fa
  403eaf:	popf   
  403eb0:	jns    0x403e92
  403eb2:	dec    edx
  403eb3:	(bad)
  403eb6:	stos   DWORD PTR es:[edi],eax
  403eb7:	pop    ebp
  403eb8:	int    0xe8
  403eba:	into   
  403ebb:	mov    esp,0x258ec3b4
  403ec0:	pop    ecx
  403ec1:	pusha  
  403ec2:	add    al,bh
  403ec4:	add    BYTE PTR [esi+0x4764ad72],al
  403eca:	fs loope 0x403e74
  403ecd:	rcr    DWORD PTR [ebx-0x67],1
  403ed0:	cmp    esi,DWORD PTR [eax]
  403ed2:	sub    dh,ah
  403ed4:	cmc    
  403ed5:	push   edx
  403ed6:	inc    edi
  403ed7:	cli    
  403ed8:	cmp    BYTE PTR [ebp+0x57],ch
  403edb:	sahf   
  403edc:	inc    ebx
  403edd:	sub    ecx,DWORD PTR [ebp-0x6]
  403ee0:	aas    
  403ee1:	call   DWORD PTR [eax]
  403ee3:	jbe    0x403f28
  403ee5:	pop    ebx
  403ee6:	imul   edi,DWORD PTR [eax+0x5c],0xa0e75b50
  403eed:	arpl   bx,di
  403eef:	std    
  403ef0:	(bad)  
  403ef1:	and    eax,0xc41713c4
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	ja     0x403eb0
  403ef9:	mov    edx,0xfe50ca38
  403efe:	shl    eax,0x8d
  403f01:	cmp    DWORD PTR [esi-0x4b5b0915],edx
  403f07:	in     eax,0x95
  403f09:	outs   dx,DWORD PTR ds:[esi]
  403f0a:	dec    DWORD PTR [eax]
  403f0c:	push   0x2f79a0ac
  403f11:	sti    
  403f12:	aam    0x6a
  403f14:	jp     0x403f45
  403f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f17:	xor    DWORD PTR ds:0xd9bf3d91,0x6ad4da6e
  403f21:	or     DWORD PTR [ecx+0x5d69c635],ecx
  403f27:	repz mov edi,0xed479946
  403f2d:	inc    ecx
  403f2e:	cli    
  403f2f:	jmp    0xa17f:0xf8c035b5
  403f36:	aad    0x2d
  403f38:	xor    al,0xef
  403f3a:	mov    ecx,0x471aef54
  403f3f:	iret   
  403f40:	repnz add eax,0xb09c1fa9
  403f46:	sbb    ebx,DWORD PTR [ebx-0x19fd4bae]
  403f4c:	or     DWORD PTR [ebx],eax
  403f4e:	lods   eax,DWORD PTR ds:[esi]
  403f4f:	xchg   esi,eax
  403f50:	add    DWORD PTR [edi],esi
  403f52:	rcl    DWORD PTR [esi-0x76fd40fa],1
  403f58:	mov    cl,0x5a
  403f5a:	sub    ebp,eax
  403f5c:	push   edi
  403f5d:	sub    DWORD PTR [edi-0x523d89a1],0xa82e524
  403f67:	ins    BYTE PTR es:[edi],dx
  403f68:	cld    
  403f69:	dec    ebx
  403f6a:	repnz retf 0x9c3b
  403f6e:	ja     0x403f12
  403f70:	dec    edx
  403f71:	fbstp  TBYTE PTR [edx]
  403f73:	sbb    al,0x5b
  403f75:	xchg   ebp,eax
  403f76:	dec    edi
  403f77:	cli    
  403f78:	cmp    eax,0x82d5f293
  403f7d:	mov    bh,0xf9
  403f7f:	mov    fs,WORD PTR [ecx+0x60ef3e41]
  403f85:	lds    edx,FWORD PTR [ebp+0x40]
  403f88:	repz xchg esi,eax
  403f8a:	add    BYTE PTR [ecx-0x2ce86dfa],al
  403f90:	or     al,0xca
  403f92:	mov    cl,0xe4
  403f94:	sahf   
  403f95:	es or  cl,bh
  403f98:	xor    bh,BYTE PTR [eax]
  403f9a:	sub    BYTE PTR [edi-0x8465c4f],ah
  403fa0:	push   0x958e127a
  403fa5:	dec    ebx
  403fa6:	mov    eax,0xc71a6ef2
  403fab:	bound  esp,QWORD PTR [ebx+0x4f]
  403fae:	cmp    BYTE PTR [eax+eax*2+0x35],dl
  403fb2:	mov    ebp,0xa9c150c8
  403fb7:	jnp    0x403f9f
  403fb9:	push   ebx
  403fba:	cwde   
  403fbb:	adc    bl,bh
  403fbd:	retf   
  403fbe:	and    BYTE PTR [ecx],dh
  403fc0:	dec    edi
  403fc1:	jb     0x403f45
  403fc3:	sti    
  403fc4:	adc    DWORD PTR [ebp-0x717710ce],edx
  403fca:	push   ebx
  403fcb:	fstp   QWORD PTR [ebp-0x3dc0b960]
  403fd1:	les    esi,FWORD PTR [edi]
  403fd3:	enter  0xd336,0x43
  403fd7:	test   al,0xe2
  403fd9:	pop    ss
  403fda:	push   cs
  403fdb:	mov    al,ds:0xbe77a6f7
  403fe0:	fmul   QWORD PTR [eax+0x12]
  403fe3:	push   ebp
  403fe4:	jge    0x404025
  403fe6:	inc    ecx
  403fe7:	shl    BYTE PTR [eax],1
  403fe9:	(bad)  
  403fea:	add    BYTE PTR [edi-0x4d0e8928],ah
  403ff0:	add    esi,eax
  403ff2:	dec    ecx
  403ff3:	jb     0x403f85
  403ff5:	pop    eax
  403ff6:	push   ebp
  403ff7:	dec    ebx
  403ff8:	adc    bl,BYTE PTR ds:0x3334bc93
  403ffe:	sub    eax,0x64b6f99c
  404003:	mov    edi,0x6867125b
  404008:	mov    eax,0x62014608
  40400d:	shl    BYTE PTR [edx-0xb],0xa6
  404011:	ret    0x6830
  404014:	mov    bl,0x84
  404016:	mov    BYTE PTR [esi],bh
  404018:	pop    ds
  404019:	mov    ecx,0x51b9051e
  40401e:	dec    esi
  40401f:	imul   esi,DWORD PTR [ebx+0x21d4a527],0xffffffb1
  404026:	in     eax,0x11
  404028:	mov    esp,0xcb1bc3bd
  40402d:	stc    
  40402e:	push   ds
  40402f:	sbb    DWORD PTR [ecx],eax
  404031:	dec    edx
  404032:	aas    
  404033:	cmp    ebp,esp
  404035:	ss scas al,BYTE PTR es:[edi]
  404037:	xchg   edi,eax
  404038:	inc    edx
  404039:	and    eax,0x4de8ac41
  40403e:	or     ch,BYTE PTR [esi+0x27]
  404041:	add    al,0xfd
  404043:	dec    ecx
  404044:	loope  0x403ff1
  404046:	je     0x40405e
  404048:	pop    ebp
  404049:	pop    ebp
  40404a:	(bad)  
  40404b:	sar    BYTE PTR [ebx+0x43],1
  40404e:	fisubr WORD PTR [eax]
  404050:	xor    BYTE PTR [ebp+0x53],dh
  404053:	jmp    FWORD PTR [esi+0x50]
  404056:	iret   
  404057:	test   al,0x1e
  404059:	push   cs
  40405a:	jg     0x404095
  40405c:	adc    edx,edx
  40405e:	mov    al,0x85
  404060:	fnsave [edx-0xb]
  404063:	ss dec ebx
  404065:	jmp    0x4bf7:0x78027e7
  40406c:	dec    ebp
  40406d:	add    BYTE PTR [ecx-0x6a0ad13c],0x1b
  404074:	push   ds
  404075:	push   ebp
  404076:	xor    BYTE PTR [ebx],al
  404078:	xchg   DWORD PTR ss:[eax+0x4bc43960],edi
  40407f:	(bad)  
  404080:	leave  
  404081:	lahf   
  404082:	dec    eax
  404083:	pusha  
  404084:	imul   esi,DWORD PTR [edi+0x4d319aaf],0x64
  40408b:	and    DWORD PTR [edx],edi
  40408d:	jb     0x4040b7
  40408f:	mov    dl,0x60
  404091:	stc    
  404092:	retf   0x76c6
  404095:	inc    edx
  404096:	add    dl,bh
  404098:	enter  0x9607,0xf7
  40409c:	shl    BYTE PTR [esi-0x3161c557],0xf4
  4040a3:	mov    edi,0xb1d2e630
  4040a8:	ret    
  4040a9:	inc    esp
  4040aa:	jg     0x404075
  4040ac:	test   DWORD PTR [edx+0x28],esp
  4040af:	test   al,bh
  4040b1:	lahf   
  4040b2:	xchg   DWORD PTR [ebx+0x4a39b0ce],ebp
  4040b8:	gs test al,0xf5
  4040bb:	dec    esi
  4040bc:	ins    DWORD PTR es:[edi],dx
  4040bd:	xchg   edi,eax
  4040be:	mov    al,ds:0x9637c99
  4040c3:	dec    edi
  4040c4:	into   
  4040c5:	gs or  eax,0xb3f490c1
  4040cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040cc:	inc    ebp
  4040cd:	mov    esi,DWORD PTR [edx-0x458c9950]
  4040d3:	mov    eax,0x90d7f552
  4040d8:	add    eax,0x42cea18
  4040dd:	(bad)  
  4040df:	repnz dec esi
  4040e1:	fisttp WORD PTR [esi]
  4040e3:	xchg   dl,bl
  4040e5:	lods   al,BYTE PTR ds:[esi]
  4040e6:	mov    WORD PTR [ecx-0x39],es
  4040e9:	and    eax,0x1a9f82c9
  4040ee:	jae    0x4040e0
  4040f0:	and    al,0xda
  4040f2:	mov    esp,0x3555a61b
  4040f7:	fiadd  DWORD PTR [ebx+0x1532f204]
  4040fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040fe:	dec    esi
  4040ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404100:	std    
  404101:	mov    bh,0xd8
  404103:	das    
  404104:	xor    ecx,DWORD PTR [eax]
  404106:	mov    DWORD PTR [edx],esp
  404108:	sbb    eax,0x84dc13c1
  40410d:	dec    ebx
  40410e:	xlat   BYTE PTR ds:[ebx]
  40410f:	stos   BYTE PTR es:[edi],al
  404110:	jmp    0xdf7555ae
  404115:	and    ecx,DWORD PTR [ebx-0x52639f5a]
  40411b:	pop    esp
  40411c:	cmc    
  40411d:	pop    ebp
  40411e:	or     eax,0xb37c5074
  404123:	xor    bl,BYTE PTR [ebx-0x2c0debcf]
  404129:	arpl   WORD PTR ds:0x522f9eab,cx
  40412f:	in     eax,dx
  404130:	push   ecx
  404131:	add    DWORD PTR [ecx-0x345b1632],esi
  404137:	xor    al,0x73
  404139:	pop    esi
  40413a:	cmp    BYTE PTR [edi+0x4c],ah
  40413d:	int    0xb
  40413f:	pop    es
  404140:	mov    DWORD PTR [edx-0x60],edx
  404143:	je     0x4041b5
  404145:	dec    edx
  404146:	dec    esi
  404147:	sbb    bh,bh
  404149:	call   0x6c5c2def
  40414e:	adc    al,0x4d
  404150:	inc    ebx
  404151:	xor    eax,0x29244f78
  404156:	jp     0x40417c
  404158:	xchg   DWORD PTR [ebx+0x41],edi
  40415b:	ret    0x1a69
  40415e:	mov    eax,0x564cb290
  404163:	cmp    ecx,ecx
  404165:	sbb    BYTE PTR [ebp-0x8cf992b],al
  40416b:	les    ebx,FWORD PTR [ebx+0x70]
  40416e:	xor    eax,0x593678d0
  404173:	cli    
  404174:	fiadd  WORD PTR [edi+0x67766563]
  40417a:	mov    bh,0x3e
  40417c:	ficom  WORD PTR [edi-0x2c]
  40417f:	mov    ebp,0xa22d46a8
  404184:	div    BYTE PTR [esi+0x2c10a859]
  40418a:	push   cs
  40418b:	add    DWORD PTR [edx+0x26a384bb],ebp
  404191:	inc    eax
  404192:	pop    es
  404193:	adc    ebx,DWORD PTR [esi-0x57]
  404196:	sbb    BYTE PTR [edi-0xf65dfab],al
  40419c:	push   es
  40419d:	shr    BYTE PTR [esi],0xf7
  4041a0:	in     eax,dx
  4041a1:	push   0xfffffff8
  4041a3:	jb     0x404224
  4041a5:	jl     0x4041fe
  4041a7:	pop    ebp
  4041a8:	xchg   esp,eax
  4041a9:	pop    eax
  4041aa:	test   al,0x47
  4041ac:	mov    dl,0x8e
  4041ae:	lods   al,BYTE PTR gs:[esi]
  4041b0:	pop    eax
  4041b1:	or     cl,bl
  4041b3:	ret    
  4041b4:	divps  xmm1,XMMWORD PTR [ecx]
  4041b7:	pop    ebx
  4041b8:	push   eax
  4041b9:	fwait
  4041ba:	int3   
  4041bb:	pop    edi
  4041bc:	mov    eax,ds:0x9cfc1b18
  4041c1:	loop   0x404198
  4041c3:	inc    esp
  4041c4:	xchg   edi,eax
  4041c5:	pop    eax
  4041c6:	pop    esi
  4041c7:	push   edi
  4041c8:	pop    ebx
  4041c9:	stc    
  4041ca:	call   0xbbcb:0x1edf84e
  4041d1:	jne    0x404158
  4041d3:	mov    al,ds:0xedbc87b1
  4041d8:	loope  0x4041cb
  4041da:	popf   
  4041db:	shr    DWORD PTR [eax+0x4f8adbd6],0x2f
  4041e2:	es stos DWORD PTR es:[edi],eax
  4041e4:	jb     0x4041a3
  4041e6:	or     esi,DWORD PTR [ebx+eiz*1]
  4041e9:	cmp    eax,0xfd6608e0
  4041ee:	inc    esp
  4041ef:	jl     0x4041b5
  4041f1:	daa    
  4041f2:	xor    BYTE PTR [ebx],0x15
  4041f5:	mov    ebp,0x3cd8258e
  4041fa:	addr16 push esp
  4041fc:	jmp    0x27b9:0xf45043b0
  404203:	push   cs
  404204:	mov    edi,0xf9b9461f
  404209:	xchg   ebx,eax
  40420a:	push   edx
  40420b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40420c:	xchg   esp,eax
  40420d:	not    DWORD PTR [ebp-0x506d63e5]
  404213:	inc    eax
  404214:	je     0x4041e5
  404216:	pop    ds
  404217:	test   BYTE PTR [esi+eax*8+0x4829859f],al
  40421e:	rcr    DWORD PTR [ebx],1
  404220:	(bad)  
  404221:	or     eax,0x91e8317b
  404226:	lods   al,BYTE PTR ds:[esi]
  404227:	mov    esp,0x6b24f168
  40422c:	pop    ecx
  40422d:	mov    edx,DWORD PTR [edi+0x6a]
  404230:	xchg   DWORD PTR [eax-0x49],esp
  404233:	cmp    ecx,DWORD PTR [edi+0x6e]
  404236:	inc    ebp
  404237:	cdq    
  404238:	(bad)  
  404239:	pop    ebp
  40423a:	xchg   BYTE PTR [ebp-0x37],al
  40423d:	addr16 inc ebp
  40423f:	imul   eax,DWORD PTR [esi-0x76350ea2],0xd6bcce76
  404249:	mov    bl,0x9d
  40424b:	stos   BYTE PTR es:[edi],al
  40424c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40424d:	popf   
  40424e:	push   0x3405d58d
  404253:	nop
  404254:	mov    esi,0xb4207a38
  404259:	jno    0x40423f
  40425b:	add    BYTE PTR [esi+0x27],cl
  40425e:	hlt    
  40425f:	xchg   ecx,eax
  404260:	lods   eax,DWORD PTR ds:[esi]
  404261:	push   eax
  404262:	rcr    DWORD PTR [edx+0x50],cl
  404265:	push   edi
  404266:	pop    esi
  404267:	xor    eax,0x5d8b93d9
  40426c:	xchg   esp,eax
  40426d:	xchg   ebp,eax
  40426e:	inc    ecx
  40426f:	push   0x6bd48e7a
  404274:	int3   
  404275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404276:	fnstenv [esi-0x5]
  404279:	pop    ebp
  40427a:	dec    esp
  40427b:	pop    ebx
  40427c:	pop    ecx
  40427d:	xor    BYTE PTR [eax+0x3904d1fa],dl
  404283:	mov    WORD PTR [eax+0x3e],es
  404286:	bnd jbe 0x40429d
  404289:	pop    esp
  40428a:	cmp    DWORD PTR [eax],eax
  40428c:	mov    ebp,0x9f10b3a7
  404291:	pop    es
  404292:	inc    esp
  404293:	mov    eax,edx
  404295:	hlt    
  404296:	scas   eax,DWORD PTR es:[edi]
  404297:	mov    ebx,0x8c5dcb4a
  40429c:	stos   BYTE PTR es:[edi],al
  40429d:	cmp    ebx,DWORD PTR [ecx+0x12]
  4042a0:	shr    BYTE PTR [esi],1
  4042a2:	in     eax,0xd2
  4042a4:	push   edi
  4042a5:	outs   dx,BYTE PTR ds:[esi]
  4042a6:	inc    esp
  4042a7:	adc    BYTE PTR [ebx+eiz*8-0x40],bh
  4042ab:	cdq    
  4042ac:	in     eax,0x1b
  4042ae:	fimul  DWORD PTR [eax-0x4]
  4042b1:	push   eax
  4042b2:	add    BYTE PTR [eax+0x44],ch
  4042b5:	push   ebp
  4042b6:	and    eax,0xe6238cf9
  4042bb:	add    dl,BYTE PTR [ecx+0x72]
  4042be:	(bad)  
  4042c0:	xchg   edx,eax
  4042c1:	inc    esp
  4042c2:	dec    esi
  4042c3:	jmp    0x40429c
  4042c5:	inc    eax
  4042c6:	cmp    al,0xab
  4042c8:	daa    
  4042c9:	in     eax,dx
  4042ca:	xchg   edx,eax
  4042cb:	cmp    DWORD PTR ss:[eax],ebp
  4042ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042cf:	leave  
  4042d0:	stc    
  4042d1:	sbb    BYTE PTR [esi-0x5bf3d0c9],ah
  4042d7:	pushf  
  4042d8:	jl     0x4042a5
  4042da:	data16 mov bh,0x2c
  4042dd:	ss aam 0x13
  4042e0:	jecxz  0x4042da
  4042e2:	call   0xbbf5:0x201f3b46
  4042e9:	dec    ebx
  4042ea:	imul   ebp,DWORD PTR [eiz*1-0x5b6eda03],0x29d7ecf9
  4042f5:	sbb    esi,DWORD PTR [edx-0x3c]
  4042f8:	mov    ch,0x39
  4042fa:	xor    eax,0x40fe87c9
  4042ff:	xor    ch,BYTE PTR [edi+0x58ead313]
  404305:	rol    DWORD PTR [ebp+0x4a739cbd],0x46
  40430c:	lahf   
  40430d:	mov    ah,BYTE PTR [eax-0xa]
  404310:	mov    DWORD PTR [ebx],esp
  404312:	(bad)  
  404313:	cs out dx,eax
  404315:	add    DWORD PTR [ebp+ebp*4-0x2],edx
  404319:	push   edx
  40431a:	loop   0x404375
  40431c:	les    eax,FWORD PTR [ebx+0x59243f8f]
  404322:	pop    ss
  404323:	pop    edi
  404324:	call   0x7b2b1cb5
  404329:	mov    BYTE PTR [ecx+esi*2-0x52],al
  40432d:	bound  eax,QWORD PTR [ebp+edx*8+0x7a0a54ef]
  404334:	xchg   esi,eax
  404335:	xchg   edx,eax
  404336:	push   esi
  404337:	xor    BYTE PTR [ebx+edx*2-0xa],ch
  40433b:	outs   dx,DWORD PTR ds:[esi]
  40433c:	mov    al,ds:0x8dafbea3
  404341:	outs   dx,BYTE PTR ds:[esi]
  404342:	xchg   ecx,eax
  404343:	xchg   ebx,eax
  404344:	inc    esi
  404345:	sahf   
  404346:	mov    bh,0x93
  404348:	imul   edi,DWORD PTR [ebx-0x68],0xe6f61ad8
  40434f:	loope  0x404386
  404351:	or     edi,esp
  404353:	push   eax
  404354:	test   DWORD PTR [esi],0xda90e072
  40435a:	ror    DWORD PTR [esi],0x64
  40435d:	fmul   st,st(2)
  40435f:	xor    al,0x27
  404361:	call   0x350b:0x8bf95eef
  404368:	ret    
  404369:	sub    BYTE PTR [esi+ebx*1-0x72],0x39
  40436e:	xor    eax,0x628c318d
  404373:	push   ss
  404374:	add    cl,BYTE PTR [esi+eiz*2+0x7a]
  404378:	push   ecx
  404379:	rcr    BYTE PTR [ebx-0x1d],1
  40437c:	imul   esi,DWORD PTR [edi+0x34],0xfffffff1
  404380:	mov    eax,0x4b558510
  404385:	dec    esp
  404386:	fisub  WORD PTR [esi-0x3dcccf92]
  40438c:	pop    ebx
  40438d:	iret   
  40438e:	mov    bh,0x94
  404390:	out    0xb3,al
  404392:	xor    bl,BYTE PTR [ebx-0x389a5b01]
  404398:	mov    WORD PTR [ebp+0x69f97c1f],es
  40439e:	test   al,0x84
  4043a0:	aas    
  4043a1:	sbb    BYTE PTR [ebp+eiz*1-0x5a15ca],0x61
  4043a9:	rcl    DWORD PTR [edx-0x24],1
  4043ac:	jne    0x4043b5
  4043ae:	mov    ch,0x73
  4043b0:	gs or  eax,0x88a0a64f
  4043b6:	(bad)  
  4043b8:	scas   al,BYTE PTR es:[edi]
  4043b9:	xchg   esi,eax
  4043ba:	jae    0x4043ca
  4043bc:	sub    al,0x7d
  4043be:	in     al,0x4b
  4043c0:	(bad)
  4043c3:	and    al,ah
  4043c5:	bswap  edi
  4043c7:	cld    
  4043c8:	adc    eax,DWORD PTR cs:[eax+0x1686e1d7]
  4043cf:	mov    bl,0x80
  4043d1:	add    eax,0xf89acfef
  4043d6:	cmp    dh,BYTE PTR [ebx-0x39]
  4043d9:	mov    ch,0x1f
  4043db:	fsub   QWORD PTR [edx+0x63]
  4043de:	lock inc edi
  4043e0:	mov    WORD PTR [ebp-0x6d],es
  4043e3:	cmp    BYTE PTR [eax+0xc],dl
  4043e6:	xor    dl,bh
  4043e8:	(bad)  
  4043e9:	jp     0x4043e6
  4043eb:	mov    ds:0x69029987,eax
  4043f0:	(bad)  
  4043f1:	in     al,dx
  4043f2:	sub    BYTE PTR [ecx+esi*4],0xa4
  4043f6:	mov    esp,0x659869d2
  4043fb:	push   ebp
  4043fc:	mov    al,0x5b
  4043fe:	retf   0x5993
  404401:	xor    ch,bh
  404403:	adc    dh,BYTE PTR cs:[eax-0x21]
  404407:	dec    esi
  404408:	dec    esi
  404409:	aam    0xef
  40440b:	cmp    DWORD PTR [esi],ecx
  40440d:	pusha  
  40440e:	jle    0x4043b6
  404410:	push   ebp
  404411:	test   edx,esi
  404413:	sub    edi,edi
  404415:	mov    eax,0x514a22fa
  40441a:	mov    al,ds:0x58748e93
  40441f:	mov    ecx,0x467b8a59
  404424:	mov    ebx,0x5c702285
  404429:	pusha  
  40442a:	inc    edx
  40442b:	fldcw  WORD PTR [eax+0x2a3a6cfa]
  404431:	imul   ebp,DWORD PTR [ebp-0x73],0x22
  404435:	mov    cl,0x53
  404437:	ja     0x4043f5
  404439:	push   esp
  40443a:	aas    
  40443b:	loop   0x404400
  40443d:	je     0x4043d9
  40443f:	cmp    DWORD PTR [edi+0x2f2d94fc],0x9
  404446:	mov    WORD PTR [ecx-0x7],cs
  404449:	xor    esi,DWORD PTR [esi]
  40444b:	or     eax,0xa63d7ed7
  404450:	or     DWORD PTR [ebp-0x65d33ed3],0xd
  404457:	loopne 0x4043fb
  404459:	cld    
  40445a:	lods   eax,DWORD PTR ds:[esi]
  40445b:	inc    DWORD PTR [edi-0x2a]
  40445e:	into   
  40445f:	cmp    ah,BYTE PTR [eax+ebx*4]
  404462:	mov    esi,0x9d47aea4
  404467:	push   edx
  404468:	mov    dl,0x3a
  40446a:	xchg   ecx,eax
  40446b:	mov    dl,0x19
  40446d:	repz clc 
  40446f:	stos   BYTE PTR es:[edi],al
  404470:	mov    eax,0x790ae460
  404475:	and    BYTE PTR [ebx-0x30c83ee],al
  40447b:	in     eax,0xa6
  40447d:	cmp    bl,BYTE PTR [eax]
  40447f:	cmp    dl,BYTE PTR [edx-0x66320870]
  404485:	mov    bl,0x95
  404487:	ins    BYTE PTR es:[edi],dx
  404488:	mov    bl,0x21
  40448a:	push   es
  40448b:	adc    eax,0xab044807
  404490:	gs sbb eax,0xfc39575c
  404496:	cmp    DWORD PTR [edi],esp
  404498:	add    eax,0xdb0b90e4
  40449d:	sbb    BYTE PTR [eax-0x5b],cl
  4044a0:	xchg   edx,eax
  4044a1:	push   ebp
  4044a2:	fsubr  st(4),st
  4044a4:	jnp    0x4044e4
  4044a6:	fsubr  QWORD PTR [edx+eiz*4]
  4044a9:	dec    esi
  4044aa:	fst    QWORD PTR [eax+0x48c8c653]
  4044b0:	sub    al,0xe5
  4044b2:	sub    al,0x9b
  4044b4:	fwait
  4044b5:	push   ds
  4044b6:	imul   edx,DWORD PTR [ecx+0x75],0xf681c6a6
  4044bd:	in     eax,dx
  4044be:	rcl    BYTE PTR [ecx+0x2e],cl
  4044c1:	cmp    DWORD PTR [esi-0x4a],eax
  4044c4:	xchg   BYTE PTR [esi+edi*2+0x1487affe],al
  4044cb:	test   BYTE PTR [ecx],bh
  4044cd:	xor    bh,BYTE PTR [esi-0x2fe216e3]
  4044d3:	adc    eax,0x5d16c459
  4044d8:	retf   
  4044d9:	inc    edx
  4044da:	jbe    0x404538
  4044dc:	bound  esi,QWORD PTR [esi-0x18]
  4044df:	jo     0x4044f8
  4044e1:	outs   dx,DWORD PTR ds:[esi]
  4044e2:	xchg   DWORD PTR [esi-0x5315fddb],esi
  4044e8:	sbb    eax,0xf8eefcd9
  4044ed:	jo     0x404552
  4044ef:	outs   dx,DWORD PTR ds:[esi]
  4044f0:	mov    ds:0x9c07b7a4,al
  4044f5:	add    eax,0x2e147a6e
  4044fa:	sub    al,0x6
  4044fc:	fnstsw WORD PTR [edx+eiz*1]
  4044ff:	dec    esi
  404500:	mov    DWORD PTR [edx-0x2683919a],eax
  404506:	mov    eax,ds:0x54576b18
  40450b:	lods   eax,DWORD PTR ds:[esi]
  40450c:	ror    esp,1
  40450e:	dec    eax
  40450f:	push   0x44b9ebab
  404514:	jp     0x4044db
  404516:	mov    ecx,0xce151cd6
  40451b:	call   0x4f726eba
  404520:	ret    
  404521:	(bad)  
  404522:	in     al,dx
  404523:	pop    DWORD PTR [ebx]
  404525:	mov    ch,0x38
  404527:	lods   al,BYTE PTR ds:[esi]
  404528:	jae    0x4044d6
  40452a:	aam    0x31
  40452c:	push   edx
  40452d:	dec    eax
  40452e:	adc    dl,BYTE PTR [ebx+0x33]
  404531:	mov    al,0xf4
  404533:	imul   edi,DWORD PTR [edi+0x5b553beb],0x4e43977
  40453d:	sbb    dh,BYTE PTR [edx+edx*4]
  404540:	shr    BYTE PTR [edi-0x45],1
  404543:	jl     0x40454e
  404545:	(bad)  
  404546:	and    eax,0x6eb9d14a
  40454b:	push   esp
  40454c:	cmp    BYTE PTR [esp+edi*8-0x79],cl
  404550:	sbb    esi,ebp
  404552:	cmp    esi,DWORD PTR [esi+0xfd01a09]
  404558:	popf   
  404559:	xchg   esi,eax
  40455a:	xchg   ecx,eax
  40455b:	push   ds
  40455c:	aad    0xa8
  40455e:	push   edi
  40455f:	xabort 0x4d
  404562:	ret    
  404563:	xchg   ebp,eax
  404564:	mov    esi,0xe9eca8f4
  404569:	call   0x95a6:0x5b86c597
  404570:	sbb    esp,DWORD PTR [ebx]
  404572:	call   0xea1a06bd
  404577:	add    BYTE PTR [eax+0x5f],bh
  40457a:	scas   al,BYTE PTR es:[edi]
  40457b:	mov    bl,0x3e
  40457d:	jo     0x404587
  40457f:	and    al,0x93
  404581:	(bad)  
  404582:	dec    edx
  404583:	idiv   BYTE PTR [edi-0x6e]
  404586:	fbstp  TBYTE PTR [esi]
  404588:	jge    0x404572
  40458a:	jl     0x4045c4
  40458c:	add    esp,DWORD PTR [esi+0x58f41e40]
  404592:	jbe    0x4045a7
  404594:	inc    ecx
  404595:	repz jno 0x404598
  404598:	cmp    esp,esp
  40459a:	xchg   edx,eax
  40459b:	cmp    al,0xae
  40459d:	push   ds
  40459e:	and    ebp,DWORD PTR [ecx+0x0]
  4045a1:	xchg   ebx,eax
  4045a2:	cmp    ebx,DWORD PTR [edi]
  4045a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a5:	cmp    al,0x1b
  4045a7:	mov    ch,0x63
  4045a9:	dec    esi
  4045aa:	inc    BYTE PTR [ecx+0x7a]
  4045ad:	or     BYTE PTR [edx-0x5af17c58],cl
  4045b3:	mov    ecx,0xa3da1751
  4045b8:	shl    BYTE PTR [ebx],cl
  4045ba:	inc    eax
  4045bb:	(bad)  [ebx+0x7e]
  4045be:	adc    eax,0xb0ebb092
  4045c3:	aas    
  4045c4:	jo     0x4045b1
  4045c6:	out    0x4e,eax
  4045c8:	add    BYTE PTR [edx+0x35ebd389],dh
  4045ce:	retf   
  4045cf:	stos   DWORD PTR es:[edi],eax
  4045d0:	push   edx
  4045d1:	jmp    0x690e:0x5710eef3
  4045d8:	aam    0xdc
  4045da:	pop    ds
  4045db:	in     al,0x78
  4045dd:	mov    eax,ds:0x9ecebeed
  4045e2:	lea    eax,[ebx-0x4ffdf37]
  4045e8:	push   ds
  4045e9:	arpl   WORD PTR [ebx-0x7d3d8063],si
  4045ef:	ja     0x4045d0
  4045f1:	jmp    0x3f1b:0x5b1351f2
  4045f8:	loop   0x4045fb
  4045fa:	mov    al,0x44
  4045fc:	daa    
  4045fd:	scas   eax,DWORD PTR es:[edi]
  4045fe:	add    DWORD PTR [edi-0x2f8e041b],esi
  404604:	push   ds
  404605:	pop    ebx
  404606:	xchg   ebx,eax
  404607:	sbb    eax,0xb4b32aa
  40460c:	xor    eax,0x5b60ee78
  404611:	dec    edi
  404612:	in     eax,0x4d
  404614:	xchg   edi,eax
  404615:	add    eax,0x79e69af9
  40461a:	sbb    eax,0xdbf9171
  40461f:	mov    ds:0xb3f5b36,al
  404624:	int    0xa6
  404626:	xor    BYTE PTR [eax-0x49049ef],0x6d
  40462d:	adc    eax,0x5ac9705f
  404632:	pop    eax
  404633:	jae    0x404623
  404635:	daa    
  404636:	pop    edi
  404637:	test   DWORD PTR [eax],esi
  404639:	rep lods al,BYTE PTR ds:[esi]
  40463b:	sbb    bh,BYTE PTR [eax+0x6d492051]
  404641:	add    eax,0xdd863da6
  404646:	daa    
  404647:	out    dx,al
  404648:	scas   ax,WORD PTR es:[edi]
  40464a:	add    ecx,DWORD PTR [ebp+edx*4+0x4bf4db11]
  404651:	ret    0xb8e8
  404654:	test   eax,0x9dc4b729
  404659:	xchg   esi,eax
  40465a:	add    eax,0x6f755cd2
  40465f:	xchg   BYTE PTR [ebx-0x5ee4bec7],bl
  404665:	sar    BYTE PTR [ebx],1
  404667:	sti    
  404668:	popf   
  404669:	pop    ebx
  40466a:	jne    0x404601
  40466c:	cdq    
  40466d:	jl     0x40464a
  40466f:	push   esp
  404670:	inc    esp
  404671:	or     al,0xa8
  404673:	dec    edx
  404674:	mov    BYTE PTR [edx],ch
  404676:	sub    esi,DWORD PTR [edx]
  404678:	mov    edx,DWORD PTR [edx]
  40467a:	adc    al,0x8d
  40467c:	sub    bl,BYTE PTR [ebp-0x28]
  40467f:	sbb    al,0x97
  404681:	adc    cl,BYTE PTR [esi]
  404683:	and    DWORD PTR [ecx],0x50
  404686:	xor    BYTE PTR [eax-0x3a],bl
  404689:	(bad)  
  40468a:	xor    BYTE PTR [ecx+0x1042659d],bh
  404690:	push   ecx
  404691:	div    edi
  404693:	pop    DWORD PTR [ebx+0x224a6d4b]
  404699:	jb     0x4046f6
  40469b:	aad    0xdb
  40469d:	jnp    0x4046d8
  40469f:	cmp    bl,BYTE PTR [edx+eax*4+0x2c]
  4046a3:	pop    ss
  4046a4:	call   0x697e11a3
  4046a9:	and    eax,0xf3da877c
  4046ae:	fistp  QWORD PTR ds:0x94219104
  4046b4:	pop    ebx
  4046b5:	call   0x683aa869
  4046ba:	push   ebp
  4046bb:	mov    eax,ds:0x3e9a006f
  4046c0:	ret    
  4046c1:	jmp    0x40471c
  4046c3:	lock fiadd DWORD PTR [esi+0x2c]
  4046c7:	cmp    al,BYTE PTR [esi+0x77a6e30b]
  4046cd:	jl     0x404729
  4046cf:	mov    dh,0xc5
  4046d1:	fs push ebp
  4046d3:	stos   BYTE PTR es:[edi],al
  4046d4:	xlat   BYTE PTR ds:[ebx]
  4046d5:	outs   dx,BYTE PTR ds:[esi]
  4046d6:	into   
  4046d7:	outs   dx,BYTE PTR ds:[esi]
  4046d8:	mov    al,ds:0xf5d6b2c6
  4046dd:	mov    esi,0x57d8d08f
  4046e2:	cdq    
  4046e3:	push   esp
  4046e4:	mov    ds:0x4b3eafb2,al
  4046e9:	into   
  4046ea:	cmp    DWORD PTR ds:0xa0bade9b,edi
  4046f0:	jb     0x4046b9
  4046f2:	stos   BYTE PTR es:[edi],al
  4046f3:	push   0x53a74def
  4046f8:	hlt    
  4046f9:	test   al,0xad
  4046fb:	out    0xd6,eax
  4046fd:	int3   
  4046fe:	retf   
  4046ff:	push   esp
  404700:	xor    BYTE PTR [esi-0x5],al
  404703:	mov    bl,0xf9
  404705:	pop    esi
  404706:	cmp    al,0xf6
  404708:	pushf  
  404709:	jmp    0x4046f9
  40470b:	inc    edx
  40470c:	add    BYTE PTR [esp+eax*4+0x48],al
  404710:	pop    ds
  404711:	repz mov esi,edx
  404714:	xor    ah,BYTE PTR [edx+0x65]
  404717:	sbb    DWORD PTR [ebp+0xb],ecx
  40471a:	inc    edx
  40471b:	cmc    
  40471c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40471d:	out    0xef,eax
  40471f:	setb   BYTE PTR [edi-0x4e]
  404723:	call   0x207d:0x6da53966
  40472a:	ret    0xff17
  40472d:	jns    0x4046c3
  40472f:	push   ss
  404730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404731:	xchg   BYTE PTR [ebx+0x14],bh
  404734:	mov    esp,0x68fcfb77
  404739:	ror    DWORD PTR [ebp-0x76],cl
  40473c:	xor    DWORD PTR ds:0x88a72307,ecx
  404742:	pop    ss
  404743:	jo     0x404768
  404745:	add    DWORD PTR [esi+0x28],ebp
  404748:	jo     0x4046de
  40474a:	(bad)  
  40474b:	jno    0x40479b
  40474d:	ret    0x77cb
  404750:	js     0x4047a0
  404752:	pop    ecx
  404753:	inc    ebp
  404754:	mov    al,ds:0x85758efe
  404759:	out    0x5,al
  40475b:	xor    edi,DWORD PTR [ebx+ebx*4+0x586d3f86]
  404762:	aas    
  404763:	xchg   ecx,eax
  404764:	enter  0x8cc0,0x38
  404768:	add    DWORD PTR [ecx+0x59],ebp
  40476b:	cmp    al,0xed
  40476d:	test   al,0x21
  40476f:	std    
  404770:	call   0xaec4:0xf561935
  404777:	je     0x4047f7
  404779:	mul    DWORD PTR [eax+0x24]
  40477c:	push   0x6
  40477e:	push   edi
  40477f:	cmp    al,0x65
  404781:	test   BYTE PTR [eax],dl
  404783:	push   ds
  404784:	loop   0x40472e
  404786:	adc    ebp,edx
  404788:	add    esp,DWORD PTR [edx+0x43]
  40478b:	jmp    0x61e9f4e6
  404790:	shl    eax,1
  404792:	icebp  
  404793:	cmp    ch,BYTE PTR [esi+0x21]
  404796:	ds dec edx
  404798:	and    al,0x54
  40479a:	dec    esp
  40479b:	fisubr WORD PTR [ebp+0x3c]
  40479e:	xchg   DWORD PTR [edx-0x4b],ebp
  4047a1:	js     0x404809
  4047a3:	add    al,0x71
  4047a5:	adc    ah,BYTE PTR [ebp+0x4]
  4047a8:	lea    ebx,[eax+0x5e]
  4047ab:	mov    DWORD PTR [esp+ebp*8-0x5f],ebp
  4047af:	jnp    0x4047e8
  4047b1:	cmp    al,0x52
  4047b3:	sub    al,0xec
  4047b5:	lock aas 
  4047b7:	cmp    DWORD PTR [edi+edi*1+0x6e],eax
  4047bb:	in     al,0x6e
  4047bd:	push   ebp
  4047be:	fmul   st(5),st
  4047c0:	push   ebx
  4047c1:	add    eax,0xb28901d6
  4047c6:	int3   
  4047c7:	retf   
  4047c8:	(bad)
  4047cd:	sti    
  4047ce:	push   ebx
  4047cf:	in     al,0xe1
  4047d1:	lds    ebp,FWORD PTR ds:0xdb5ae9c2
  4047d7:	pop    ds
  4047d8:	ins    DWORD PTR es:[edi],dx
  4047d9:	cmp    dl,BYTE PTR [eax]
  4047db:	outs   dx,DWORD PTR ss:[esi]
  4047dd:	push   ss
  4047de:	retf   
  4047df:	dec    DWORD PTR [ecx]
  4047e1:	push   edi
  4047e2:	and    cl,BYTE PTR [ebx+ecx*8+0x7]
  4047e6:	cmp    eax,0x5bab18f8
  4047eb:	stos   BYTE PTR es:[edi],al
  4047ec:	cs aaa 
  4047ee:	jmp    0xf345c569
  4047f3:	addr16 aam 0x30
  4047f6:	mov    edx,0x6560c23f
  4047fb:	(bad)  
  4047fc:	ficom  DWORD PTR [edx+edi*2]
  4047ff:	push   0x904b63fe
  404804:	lods   eax,DWORD PTR ds:[esi]
  404805:	jbe    0x40485c
  404807:	xchg   esp,eax
  404808:	loop   0x404864
  40480a:	push   ds
  40480b:	inc    esp
  40480c:	gs push edi
  40480e:	mov    ecx,0x50c28982
  404813:	and    DWORD PTR [ecx],esp
  404815:	inc    edx
  404816:	rcr    ecx,1
  404818:	inc    ebx
  404819:	cmp    cl,al
  40481b:	adc    BYTE PTR [edi+0x52321dbb],0xe1
  404822:	mov    ebp,0x46e60fbf
  404827:	adc    eax,0x33572383
  40482c:	adc    edx,DWORD PTR [ebx+0x6a]
  40482f:	shr    DWORD PTR [edx],0xd0
  404832:	leave  
  404833:	test   BYTE PTR [eax+0x7a],0x8f
  404837:	sub    al,0x1a
  404839:	(bad)  
  40483a:	stos   BYTE PTR es:[edi],al
  40483b:	sbb    ebp,esp
  40483d:	push   eax
  40483e:	sbb    DWORD PTR [ecx+0x612cc571],esp
  404844:	repz mov edi,0xa7585f65
  40484a:	mov    al,BYTE PTR [eax-0x7a]
  40484d:	jmp    0x6a859b81
  404852:	fisub  DWORD PTR [ebp+eiz*8-0x5f]
  404856:	in     eax,0xc9
  404858:	pop    ecx
  404859:	outs   dx,DWORD PTR ds:[esi]
  40485a:	mov    ebp,0xdc122f14
  40485f:	fs xor eax,0x379c42a7
  404865:	psrad  mm1,QWORD PTR [edi+0x58e72134]
  40486c:	pusha  
  40486d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40486e:	mov    ah,0xc4
  404870:	daa    
  404871:	iret   
  404872:	pop    esi
  404873:	inc    esp
  404874:	scas   al,BYTE PTR es:[edi]
  404875:	mov    ah,0xab
  404877:	sbb    al,0xba
  404879:	pushf  
  40487a:	sar    ch,1
  40487c:	mov    eax,0xcdb286b1
  404881:	xor    eax,ecx
  404883:	aam    0x7c
  404885:	jecxz  0x40484b
  404887:	(bad)  
  404888:	xchg   BYTE PTR [ebx+0x13],bl
  40488b:	pop    ebp
  40488c:	mov    bh,BYTE PTR [esi]
  40488e:	fsubr  QWORD PTR [ecx+0x4c7cd7ce]
  404894:	xchg   esp,eax
  404895:	out    dx,eax
  404896:	mov    eax,0x718981ca
  40489b:	push   DWORD PTR [eax]
  40489d:	adc    BYTE PTR [eax-0x73],cl
  4048a0:	ss ins BYTE PTR es:[edi],dx
  4048a2:	adc    DWORD PTR [eax-0x2c],eax
  4048a5:	dec    edx
  4048a6:	sub    BYTE PTR [edx],dh
  4048a8:	or     DWORD PTR [ebx],0x82cd4f58
  4048ae:	cmp    al,bh
  4048b0:	xor    al,0x33
  4048b2:	cs (bad) 
  4048b4:	les    esi,FWORD PTR [edi]
  4048b6:	cmp    eax,0x3e111d1e
  4048bb:	sbb    BYTE PTR [esi-0x17],cl
  4048be:	dec    esp
  4048bf:	dec    ecx
  4048c0:	leave  
  4048c1:	xchg   ebp,eax
  4048c2:	out    0x71,eax
  4048c4:	popf   
  4048c5:	cwde   
  4048c6:	lahf   
  4048c7:	mov    ebx,0x6c8167a1
  4048cc:	lods   eax,DWORD PTR ds:[esi]
  4048cd:	add    bh,BYTE PTR [ebx-0x1f]
  4048d0:	xchg   edx,eax
  4048d1:	lahf   
  4048d2:	sub    ah,BYTE PTR [edx]
  4048d4:	add    al,0xe6
  4048d6:	mov    esi,0x90dd3814
  4048db:	mov    ebx,0xa32cb7aa
  4048e0:	mov    cl,0x33
  4048e2:	cmp    esp,edi
  4048e4:	nop
  4048e5:	pusha  
  4048e6:	shl    DWORD PTR [ecx+0x636fc3f1],1
  4048ec:	test   eax,0x7720ebdc
  4048f1:	xchg   DWORD PTR [edi],esi
  4048f3:	sbb    BYTE PTR ds:0x43d356ef,0xb7
  4048fa:	dec    edi
  4048fb:	sub    eax,0xe81d55e3
  404900:	fld    QWORD PTR [esi+0x46]
  404903:	pop    ss
  404904:	adc    DWORD PTR [ecx-0x41],ecx
  404907:	mul    DWORD PTR [eax+edx*8+0x57bbf177]
  40490e:	test   DWORD PTR [edi+0x23],ebx
  404911:	adc    ebp,DWORD PTR [edx+0x342ef1fe]
  404917:	and    eax,0x5d4f4ae2
  40491c:	mov    bl,0xea
  40491e:	(bad)  
  40491f:	mov    esi,DWORD PTR [eax]
  404921:	(bad)  
  404922:	not    ebx
  404924:	jmp    0x8e1d:0x90fde20f
  40492b:	lea    esi,[eax-0x77]
  40492e:	les    ebx,FWORD PTR [edi]
  404930:	(bad)  
  404931:	mov    esp,0x581d159b
  404936:	arpl   WORD PTR [ebx],cx
  404938:	jmp    0x35c1:0xb9d61d0d
  40493f:	fcmovne st,st(6)
  404941:	je     0x40491a
  404943:	mov    eax,0xa711f469
  404948:	ins    BYTE PTR es:[edi],dx
  404949:	xchg   edi,eax
  40494a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40494b:	xchg   ebx,eax
  40494c:	jle    0x4049c8
  40494e:	pop    esi
  40494f:	dec    edx
  404950:	aaa    
  404951:	or     DWORD PTR [ebp-0x64],esi
  404954:	sub    BYTE PTR [ecx+0xb5b0e61],cl
  40495a:	lods   eax,DWORD PTR ds:[esi]
  40495b:	sub    BYTE PTR [ebp+0x6f4f01a4],0xd2
  404962:	retf   
  404963:	mov    DWORD PTR [ebp+0x1b041eaf],ecx
  404969:	bound  esp,QWORD PTR ds:0xef5a170c
  40496f:	popf   
  404970:	in     eax,0x8
  404972:	push   ebp
  404973:	pop    ebp
  404974:	mov    es:0x13142f8d,al
  40497a:	nop
  40497b:	push   edx
  40497c:	dec    al
  40497e:	mov    bl,0x24
  404980:	jle    0x40497c
  404982:	test   DWORD PTR [esi-0x11],ebp
  404985:	pop    ecx
  404986:	sbb    eax,0xc974f73b
  40498b:	lock aam 0x52
  40498e:	mov    ecx,0xd84baf9e
  404993:	lock cmp esi,DWORD PTR [esi]
  404996:	pop    ebp
  404997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404998:	and    ch,ah
  40499a:	xor    ecx,ecx
  40499c:	cli    
  40499d:	or     edi,eax
  40499f:	test   BYTE PTR [esp+eax*2],cl
  4049a2:	push   edi
  4049a3:	and    al,0x3f
  4049a5:	add    al,0x3e
  4049a7:	cmp    ebx,DWORD PTR [esi+0x1c2f0c8]
  4049ad:	int    0x47
  4049af:	xchg   ebx,eax
  4049b0:	adc    ch,dl
  4049b2:	xchg   ebx,eax
  4049b3:	ss xchg ecx,eax
  4049b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b6:	sub    eax,DWORD PTR [bx+si]
  4049b9:	jp     0x404a2d
  4049bb:	test   eax,edx
  4049bd:	push   0x5f7ae2c0
  4049c2:	hlt    
  4049c3:	mov    ah,0x27
  4049c5:	mov    DWORD PTR [esi+0x710165d0],0x97ce3965
  4049cf:	cmp    ah,ah
  4049d1:	scas   eax,DWORD PTR es:[edi]
  4049d2:	xlat   BYTE PTR ds:[ebx]
  4049d3:	aas    
  4049d4:	in     al,dx
  4049d5:	aaa    
  4049d6:	mov    bl,0xcc
  4049d8:	aas    
  4049d9:	aaa    
  4049da:	xor    DWORD PTR [esi-0x1cd3095d],eax
  4049e0:	jp     0x4049b1
  4049e2:	sub    eax,0x2089223c
  4049e7:	lods   al,BYTE PTR ds:[esi]
  4049e8:	(bad)  
  4049e9:	jmp    0x404a19
  4049eb:	shr    BYTE PTR [ecx+eiz*1-0x2a],cl
  4049ef:	stc    
  4049f0:	add    BYTE PTR [eax+edi*2-0x397b89d9],bh
  4049f7:	cmp    al,0x1c
  4049f9:	and    al,0xe8
  4049fb:	ficom  DWORD PTR [esp+edx*8]
  4049fe:	jmp    0x48c:0xbbbac73f
  404a05:	cmc    
  404a06:	sbb    DWORD PTR [edx],0xdd426698
  404a0c:	jp     0x4049f6
  404a0e:	loop   0x404a63
  404a10:	or     bh,BYTE PTR ds:[edx]
  404a13:	pushf  
  404a14:	pop    ds
  404a15:	adc    ebp,DWORD PTR [ebp+0x34ef57cf]
  404a1b:	dec    edi
  404a1c:	xchg   edx,eax
  404a1d:	and    ebx,ecx
  404a1f:	inc    ebx
  404a20:	call   0x1f18:0xc631fb1
  404a27:	ds xchg edi,eax
  404a29:	and    BYTE PTR [edi-0xd467569],al
  404a2f:	loope  0x4049ef
  404a31:	push   es
  404a32:	jb     0x404a08
  404a34:	pusha  
  404a35:	jecxz  0x404a69
  404a37:	xor    BYTE PTR [edx+0x13f8c2af],dh
  404a3d:	in     eax,dx
  404a3e:	aas    
  404a3f:	stos   DWORD PTR es:[edi],eax
  404a40:	sub    al,0xfd
  404a42:	or     BYTE PTR [ebx+esi*2],bh
  404a45:	jmp    0xad78c011
  404a4a:	pop    ebx
  404a4b:	mov    edi,0x4b99e26e
  404a50:	cli    
  404a51:	xchg   ebx,eax
  404a52:	les    ecx,FWORD PTR [eax+0x68]
  404a55:	xchg   ebx,eax
  404a56:	fstp   DWORD PTR [edi+edx*1-0x6b2899d3]
  404a5d:	cmp    al,0x2a
  404a5f:	inc    edi
  404a60:	int3   
  404a61:	dec    ebx
  404a62:	cmp    edx,DWORD PTR [edx-0x5ef7f58b]
  404a68:	dec    edx
  404a69:	sub    eax,0x3f4f9e13
  404a6e:	pop    ebp
  404a6f:	sbb    eax,0x9a7faa34
  404a74:	sub    al,0x68
  404a76:	(bad)  
  404a77:	hlt    
  404a78:	mov    eax,0xa0fb1656
  404a7d:	pop    esi
  404a7e:	loope  0x404ae4
  404a80:	outs   dx,BYTE PTR ds:[esi]
  404a81:	inc    ecx
  404a82:	jnp    0x404ab1
  404a84:	xor    edi,DWORD PTR [esi+0x1544f296]
  404a8a:	fimul  WORD PTR [ebx]
  404a8c:	xchg   ebx,eax
  404a8d:	pop    esi
  404a8e:	out    dx,al
  404a8f:	sbb    eax,0xb326ae8
  404a94:	mov    dl,0x2d
  404a96:	mov    eax,0xabec066d
  404a9b:	out    dx,al
  404a9c:	mov    ds:0x98c77567,eax
  404aa1:	enter  0xee7e,0x41
  404aa5:	jmp    0x8d53:0x8aff7c45
  404aac:	test   eax,ebp
  404aae:	sub    edx,DWORD PTR [ebp+0x3f]
  404ab1:	(bad)  
  404ab2:	daa    
  404ab3:	adc    DWORD PTR [edx],ebp
  404ab5:	lods   eax,DWORD PTR ds:[esi]
  404ab6:	mov    gs,WORD PTR [ecx]
  404ab8:	gs xchg edx,eax
  404aba:	fstp   QWORD PTR [ecx+ecx*2-0x599b2b7b]
  404ac1:	and    DWORD PTR [esi+0x5d],0x26
  404ac5:	clc    
  404ac6:	cmc    
  404ac7:	push   ebx
  404ac8:	stos   DWORD PTR es:[edi],eax
  404ac9:	loopne 0x404b2d
  404acb:	(bad)
  404ace:	xor    eax,0xcaf93743
  404ad3:	pop    esp
  404ad4:	rol    BYTE PTR [eax-0x11c258e5],0x5c
  404adb:	pusha  
  404adc:	pop    es
  404add:	cmp    edi,DWORD PTR [eax+ecx*2+0x33708d00]
  404ae4:	test   DWORD PTR [edx+0x57],ebp
  404ae7:	inc    ebp
  404ae8:	cmp    DWORD PTR [edi+0x56e4c917],esi
  404aee:	ret    
  404aef:	out    dx,eax
  404af0:	mov    ch,bl
  404af2:	cdq    
  404af3:	jne    0x404b6f
  404af5:	xor    bh,BYTE PTR [esi]
  404af7:	stos   BYTE PTR es:[edi],al
  404af8:	xchg   edx,eax
  404af9:	std    
  404afa:	inc    esi
  404afb:	int    0x31
  404afd:	fild   WORD PTR [eax]
  404aff:	fimul  WORD PTR [eax-0x1985d8f7]
  404b05:	xchg   BYTE PTR [edx-0x52],dl
  404b08:	sub    BYTE PTR [eax-0x636a75b8],bl
  404b0e:	lds    edx,FWORD PTR [ecx-0x69]
  404b11:	rep ins DWORD PTR es:[edi],dx
  404b13:	xchg   esi,eax
  404b14:	xchg   ebx,eax
  404b15:	test   DWORD PTR [edi+0x1b8abc55],esp
  404b1b:	mov    ah,0x3e
  404b1d:	mov    cs,WORD PTR [ebx]
  404b1f:	imul   edi,DWORD PTR es:[ebp-0x60],0x1f
  404b24:	mov    ds:0x21571c5a,eax
  404b29:	lods   eax,DWORD PTR ds:[esi]
  404b2a:	fwait
  404b2b:	push   ebx
  404b2c:	xchg   BYTE PTR [edi+0x7796137],ah
  404b32:	push   0xdf821c4
  404b37:	ret    0x968e
  404b3a:	aam    0x50
  404b3c:	pusha  
  404b3d:	mov    al,0x81
  404b3f:	fsubr  st,st(3)
  404b41:	jmp    0x404ade
  404b43:	es push ss
  404b45:	loopne 0x404b15
  404b47:	ja     0x404b22
  404b49:	push   edx
  404b4a:	mov    esp,0x101ec10e
  404b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b50:	leave  
  404b51:	xchg   ebx,eax
  404b52:	movzx  esp,WORD PTR [edx]
  404b55:	aaa    
  404b56:	sub    edi,DWORD PTR [ebx*4+0x35704312]
  404b5d:	retf   
  404b5e:	or     ah,dh
  404b60:	pusha  
  404b61:	xor    al,dl
  404b63:	es jl  0x404b68
  404b66:	loope  0x404b0d
  404b68:	mov    bl,0x32
  404b6a:	sub    cl,ah
  404b6c:	jns    0x404bb0
  404b6e:	push   es
  404b6f:	dec    edx
  404b70:	dec    esi
  404b71:	(bad)  
  404b72:	int3   
  404b73:	sbb    dl,BYTE PTR [edi-0x15c8b547]
  404b79:	in     al,dx
  404b7a:	and    al,BYTE PTR [edx-0xf]
  404b7d:	add    al,0xfd
  404b7f:	push   0xd00ee418
  404b84:	sbb    BYTE PTR [ecx+eax*4-0x3b671ce8],dh
  404b8b:	out    dx,al
  404b8c:	enter  0xd6ef,0x3d
  404b90:	ror    BYTE PTR [edx],0xa7
  404b93:	jno    0x404bc3
  404b95:	les    ebx,FWORD PTR [edx+0x588c9e2]
  404b9b:	call   0xdc63e7a2
  404ba0:	dec    ebp
  404ba1:	jmp    0x404be1
  404ba3:	repz mov ebx,0x996c50f5
  404ba9:	sahf   
  404baa:	sbb    ah,BYTE PTR [eax]
  404bac:	mov    ds:0xc74d5f53,al
  404bb1:	xchg   ebx,eax
  404bb2:	sub    eax,0x47ba4072
  404bb7:	loopne 0x404c23
  404bb9:	dec    ebx
  404bba:	call   0x938192be
  404bbf:	cmp    ebp,DWORD PTR [edi-0x3ea9f14c]
  404bc5:	(bad)  
  404bc6:	fidiv  WORD PTR [eax-0x6039e93c]
  404bcc:	push   cs
  404bcd:	jmp    0x6790:0x16717dde
  404bd4:	xchg   BYTE PTR [ecx+0x59],bl
  404bd7:	dec    ebx
  404bd8:	inc    ebx
  404bd9:	aam    0x13
  404bdb:	xor    al,BYTE PTR [eax+0x48bb7dbb]
  404be1:	jne    0x404c3e
  404be3:	outs   dx,DWORD PTR ds:[esi]
  404be4:	out    0x9c,eax
  404be6:	ins    BYTE PTR es:[edi],dx
  404be7:	test   al,0x46
  404be9:	add    DWORD PTR [ecx+0x66642fd2],ecx
  404bef:	xchg   BYTE PTR [ecx],ah
  404bf1:	lock in eax,0x1
  404bf4:	inc    esi
  404bf5:	stc    
  404bf6:	inc    ebx
  404bf7:	lahf   
  404bf8:	cdq    
  404bf9:	repz repnz loop 0x404c73
  404bfd:	arpl   ax,bp
  404bff:	cwde   
  404c00:	mov    ds:0x4550a9bb,eax
  404c05:	inc    edi
  404c06:	mov    ch,0x88
  404c08:	xchg   esi,eax
  404c09:	bound  esp,QWORD PTR [eax]
  404c0b:	call   eax
  404c0d:	repnz xchg ebp,eax
  404c0f:	pop    edx
  404c10:	push   es
  404c11:	div    DWORD PTR [ecx-0x65]
  404c14:	xor    eax,0x9e2ef204
  404c19:	inc    edi
  404c1a:	sbb    DWORD PTR [eax+0x84e842d],esi
  404c20:	jle    0x404c37
  404c22:	mov    ds:0xca178a9c,al
  404c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c28:	add    eax,0xdf4536a6
  404c2d:	dec    ebx
  404c2e:	ficom  WORD PTR [eax]
  404c30:	(bad)  [edx]
  404c32:	test   BYTE PTR [ebp+0x58],dh
  404c35:	fiadd  WORD PTR [eax]
  404c37:	sar    DWORD PTR [edi],cl
  404c39:	xchg   ebx,eax
  404c3a:	ret    
  404c3b:	in     al,dx
  404c3c:	arpl   WORD PTR [eax-0x14b33b0f],bp
  404c42:	loopne 0x404c8b
  404c44:	test   DWORD PTR [ecx+0x3e5153a0],edx
  404c4a:	jnp    0x404c88
  404c4c:	inc    eax
  404c4d:	sub    dl,bh
  404c4f:	pop    ebx
  404c50:	loope  0x404c2f
  404c52:	or     eax,0xa424a2de
  404c57:	ret    0x114c
  404c5a:	nop
  404c5b:	mov    WORD PTR [edi-0x572dcc1b],ds
  404c61:	or     bl,BYTE PTR [edi+eiz*8]
  404c64:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404c66:	and    eax,0xbdfb75ce
  404c6b:	imul   ebx,DWORD PTR [eax-0x472c6703],0xffffff91
  404c72:	cmp    BYTE PTR [ecx-0x25],ah
  404c75:	pop    es
  404c76:	mov    DWORD PTR [eax+0x48],ecx
  404c79:	retf   0xf1f0
  404c7c:	inc    ebp
  404c7d:	out    0x51,eax
  404c7f:	ss ds es jmp 0x404c67
  404c84:	stc    
  404c85:	xchg   BYTE PTR [ebx-0x5c],bl
  404c88:	jmp    0xa6ec:0xa472575c
  404c8f:	sub    BYTE PTR [edi-0x63c7c055],ch
  404c95:	es aas 
  404c97:	ss mov al,es:0x1e9c64a0
  404c9e:	or     eax,0x186a9dd0
  404ca3:	mov    dl,0xe3
  404ca5:	gs ins DWORD PTR es:[edi],dx
  404ca7:	repnz and BYTE PTR [edi-0x3f],ch
  404cab:	pop    edx
  404cac:	inc    esi
  404cad:	push   ss
  404cae:	adc    al,0x2
  404cb0:	cmp    ch,BYTE PTR [ebx-0x2c855d05]
  404cb6:	and    edx,esi
  404cb8:	add    BYTE PTR [ecx-0x1879b7fb],ah
  404cbe:	pop    eax
  404cbf:	pop    esp
  404cc0:	sbb    ecx,DWORD PTR [ebx+ebx*4-0x5a585bd7]
  404cc7:	pusha  
  404cc8:	jmp    0x43b1:0xb6eae5cb
  404ccf:	push   edx
  404cd0:	xor    DWORD PTR [ecx-0x74],edi
  404cd3:	int3   
  404cd4:	icebp  
  404cd5:	fild   QWORD PTR [esi-0x5b]
  404cd8:	test   eax,0xf68b2218
  404cdd:	call   0x93c9c1b4
  404ce2:	test   eax,0x67a67dfd
  404ce7:	sbb    dl,BYTE PTR [edi-0x7d]
  404cea:	scas   eax,DWORD PTR es:[edi]
  404ceb:	sbb    eax,eax
  404ced:	sub    eax,0x69624cd4
  404cf2:	(bad)  
  404cf3:	bound  ebp,QWORD PTR ds:0x6dbb79fc
  404cf9:	enter  0x9227,0xf1
  404cfd:	or     ebx,ecx
  404cff:	lock stc 
  404d01:	sub    eax,0x471bb250
  404d06:	jb     0x404d1b
  404d08:	ffreep st(2)
  404d0a:	(bad)  
  404d0c:	popf   
  404d0d:	(bad)  [edx]
  404d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d10:	xchg   esp,eax
  404d11:	xchg   esi,eax
  404d12:	test   BYTE PTR [ebx],bl
  404d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d15:	xchg   ebx,eax
  404d16:	xchg   esp,eax
  404d17:	or     al,0xdd
  404d19:	dec    esi
  404d1a:	xor    cl,BYTE PTR [edx-0x65723fe7]
  404d20:	in     al,dx
  404d21:	mov    ebp,0x3ab33be6
  404d26:	jp     0x404d15
  404d28:	fldcw  WORD PTR [edi]
  404d2a:	push   edi
  404d2b:	cwde   
  404d2c:	shr    eax,1
  404d2e:	adc    eax,0x48874b87
  404d33:	jno    0x404d86
  404d35:	test   BYTE PTR [eax-0x73d23985],dl
  404d3b:	ror    edx,1
  404d3d:	nop
  404d3e:	rol    DWORD PTR [eax-0x6d0ee8d0],cl
  404d44:	adc    bh,bl
  404d46:	push   0x9ea51f8
  404d4b:	(bad)  
  404d4c:	pop    esi
  404d4d:	sbb    DWORD PTR [ebx+0x62],edx
  404d50:	les    esi,FWORD PTR [edx+ebx*2-0x1d]
  404d54:	arpl   sp,dx
  404d56:	cmp    al,0xee
  404d58:	nop
  404d59:	and    al,0x45
  404d5b:	adc    eax,0xb412e847
  404d60:	sub    ecx,eax
  404d62:	nop
  404d63:	sub    al,0xce
  404d65:	dec    eax
  404d66:	jp     0x404d29
  404d68:	fdiv   DWORD PTR [edx-0x441f3ebd]
  404d6e:	push   ebx
  404d6f:	jo     0x404de9
  404d71:	mov    dl,0x7d
  404d73:	jmp    0x404d66
  404d75:	pop    eax
  404d76:	mov    bl,0xb8
  404d78:	push   cs
  404d79:	je     0x404daa
  404d7b:	ja     0x404db3
  404d7d:	jo     0x404d49
  404d7f:	stos   DWORD PTR es:[edi],eax
  404d80:	and    al,BYTE PTR [eax]
  404d82:	xchg   ebp,eax
  404d83:	add    dl,BYTE PTR [ecx+0x3c7742ec]
  404d89:	mov    eax,ds:0x64f0eab5
  404d8e:	ror    BYTE PTR cs:[eax],cl
  404d91:	jne    0x404d21
  404d93:	outs   dx,BYTE PTR ds:[esi]
  404d94:	and    eax,0xb8deccdd
  404d99:	or     DWORD PTR [ebp+0x6141110b],ecx
  404d9f:	ret    
  404da0:	push   ebx
  404da1:	or     eax,DWORD PTR [esi-0x46]
  404da4:	aad    0xb4
  404da6:	mov    eax,ds:0x816c619f
  404dab:	and    bh,dl
  404dad:	xor    al,0x76
  404daf:	push   cs
  404db0:	sub    eax,0xc3c428db
  404db5:	pop    ebx
  404db6:	adc    ebp,0xffffffd9
  404db9:	and    DWORD PTR [ebx-0x6abd0427],0x8b56a7d7
  404dc3:	push   0x3e
  404dc5:	jns    0x404e42
  404dc7:	push   edi
  404dc8:	fstp   QWORD PTR [ebp+0x6c]
  404dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dcc:	jl     0x404e05
  404dce:	(bad)  
  404dcf:	cmp    BYTE PTR [edx-0x10],al
  404dd2:	aad    0x63
  404dd4:	mov    ch,0x8
  404dd6:	popf   
  404dd7:	cmp    eax,DWORD PTR [ebx-0x49]
  404dda:	mov    cs,WORD PTR [esi]
  404ddc:	fcom   QWORD PTR ds:0x35a59458
  404de2:	xlat   BYTE PTR ds:[ebx]
  404de3:	in     eax,0x1f
  404de5:	pop    es
  404de6:	shl    DWORD PTR [edi],1
  404de8:	lea    esp,[ecx+0x20a46e8f]
  404dee:	sahf   
  404def:	sub    eax,0x828f655a
  404df4:	fdiv   QWORD PTR [eax]
  404df6:	and    BYTE PTR [esp+edi*1],bl
  404df9:	lea    ebp,[edi]
  404dfb:	lods   eax,DWORD PTR ds:[esi]
  404dfc:	(bad)  
  404dfd:	dec    edx
  404dfe:	mov    edi,0xad4de71b
  404e03:	nop
  404e04:	dec    ebx
  404e05:	adc    DWORD PTR [esi+eax*2+0x20b10312],esp
  404e0c:	mov    al,ds:0x5f68e628
  404e11:	jle    0x404db2
  404e13:	push   ecx
  404e14:	pop    eax
  404e15:	es jo  0x404df7
  404e18:	sub    al,bl
  404e1a:	fcmove st,st(1)
  404e1c:	aad    0x1
  404e1e:	xchg   ebp,eax
  404e1f:	int3   
  404e20:	pushf  
  404e21:	aaa    
  404e22:	cli    
  404e23:	sar    dl,1
  404e25:	gs or  al,0xe0
  404e28:	fisttp WORD PTR [edi+0x2b]
  404e2b:	and    esp,DWORD PTR [esi+0x49]
  404e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e2f:	call   0x72d:0x78adc746
  404e36:	pop    es
  404e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e38:	shl    BYTE PTR [eax],cl
  404e3a:	xor    ch,dh
  404e3c:	out    0x77,eax
  404e3e:	push   0xe
  404e40:	lods   al,BYTE PTR ds:[esi]
  404e41:	ins    BYTE PTR es:[edi],dx
  404e42:	in     al,dx
  404e43:	outs   dx,BYTE PTR ds:[esi]
  404e44:	sbb    edx,DWORD PTR [ebx]
  404e46:	cmp    BYTE PTR [ecx+0x6673fc16],ah
  404e4c:	xlat   BYTE PTR ds:[ebx]
  404e4d:	scas   eax,DWORD PTR es:[edi]
  404e4e:	in     al,0x9d
  404e50:	xchg   esp,eax
  404e51:	fsub   QWORD PTR [ecx-0x68]
  404e54:	add    dh,BYTE PTR [ecx+edi*2-0x690a2116]
  404e5b:	(bad)  
  404e5c:	fwait
  404e5d:	das    
  404e5e:	ds jg  0x404e73
  404e61:	jne    0x404eac
  404e63:	mov    cs,WORD PTR [ecx-0x169ca81c]
  404e69:	or     al,0xb7
  404e6b:	inc    eax
  404e6c:	popf   
  404e6d:	loope  0x404e5c
  404e6f:	mov    esp,0x68007512
  404e74:	and    al,0x7
  404e76:	mov    edx,0x3152a49d
  404e7b:	retf   0x2e3d
  404e7e:	cwde   
  404e7f:	out    dx,eax
  404e80:	add    al,0xbe
  404e82:	mov    ch,0x9d
  404e84:	loopne 0x404eb7
  404e86:	push   ss
  404e87:	pop    ds
  404e88:	dec    ecx
  404e89:	sbb    eax,0xd2ef348a
  404e8e:	jmp    0x404e1e
  404e90:	lods   al,BYTE PTR es:[esi]
  404e92:	push   es
  404e93:	das    
  404e94:	test   ecx,0xed7bfb5d
  404e9a:	dec    ecx
  404e9b:	mov    ecx,0x3ca67c96
  404ea0:	retf   0xe4c8
  404ea3:	pop    ebx
  404ea4:	aaa    
  404ea5:	fisub  WORD PTR [eax-0x55825626]
  404eab:	ins    BYTE PTR es:[edi],dx
  404eac:	jae    0x404e4c
  404eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eaf:	inc    ecx
  404eb0:	rol    DWORD PTR [ecx-0x60b572b2],0x5
  404eb7:	or     al,0x7e
  404eb9:	pop    DWORD PTR [ecx+0x77]
  404ebc:	retf   
  404ebd:	mov    eax,0x106b3fbe
  404ec2:	pop    es
  404ec3:	ret    
  404ec4:	pushf  
  404ec5:	xchg   edi,eax
  404ec6:	pop    ds
  404ec7:	mov    bl,dl
  404ec9:	fsubr  DWORD PTR [ecx-0x29]
  404ecc:	arpl   bx,di
  404ece:	cmp    DWORD PTR [ecx-0x1b],eax
  404ed1:	fs jecxz 0x404edc
  404ed4:	xchg   edi,eax
  404ed5:	inc    eax
  404ed6:	int3   
  404ed7:	xor    edi,0x18
  404eda:	inc    edi
  404edb:	or     bl,BYTE PTR [ebp-0x13daaeb4]
  404ee1:	ret    0x923f
  404ee4:	pushf  
  404ee5:	cli    
  404ee6:	dec    edx
  404ee7:	mov    edi,0x808c3d09
  404eec:	ins    DWORD PTR es:[edi],dx
  404eed:	les    esi,FWORD PTR [ebx]
  404eef:	add    DWORD PTR ds:0x3b6f0456,ebx
  404ef5:	repnz pop ss
  404ef7:	mov    eax,0x84a0a1b
  404efc:	inc    esi
  404efd:	push   ss
  404efe:	les    eax,FWORD PTR [esi-0x34]
  404f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f02:	popa   
  404f03:	jl     0x404f19
  404f05:	mov    edx,0x58158f2f
  404f0a:	xor    eax,0x6ceafdd3
  404f0f:	sub    DWORD PTR [edi],0x94e4690f
  404f15:	pushf  
  404f16:	mov    esi,0x36775f50
  404f1b:	pextrw ebx,(bad),0xc5
  404f1d:	call   0x56db:0xa17d05ec
  404f24:	mov    eax,0xb528313e
  404f29:	je     0x404f13
  404f2b:	repnz (bad) 
  404f2d:	and    edi,edx
  404f2f:	cs aaa 
  404f31:	pusha  
  404f32:	sbb    bh,BYTE PTR [edx+eax*1+0x5e]
  404f36:	repnz in eax,0xeb
  404f39:	dec    eax
  404f3a:	mov    dl,0x69
  404f3c:	loop   0x404ee8
  404f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f3f:	into   
  404f40:	sbb    BYTE PTR [ebx],dh
  404f42:	and    ebx,DWORD PTR [ebp-0x62586692]
  404f48:	adc    DWORD PTR [edi-0x71cd582a],ebx
  404f4e:	xor    esi,DWORD PTR [ecx-0x666518f6]
  404f54:	cmp    al,BYTE PTR [edx+ecx*1-0x831b437]
  404f5b:	(bad)  
  404f5c:	jp     0x404f78
  404f5e:	adc    eax,DWORD PTR [ebx]
  404f60:	jmp    FWORD PTR fs:[edi]
  404f63:	mov    eax,ds:0x1f54782
  404f68:	push   ss
  404f69:	mov    edx,0xceeb81ed
  404f6e:	lahf   
  404f6f:	rcr    BYTE PTR [ebp+0x65],0xfb
  404f73:	cmove  ebx,esp
  404f76:	lods   eax,DWORD PTR ds:[esi]
  404f77:	mov    edi,0xb9278d99
  404f7c:	push   ecx
  404f7d:	sbb    cl,BYTE PTR [ebp+0x6da49938]
  404f83:	pop    edx
  404f84:	pop    ebp
  404f85:	test   bh,ah
  404f87:	push   ebx
  404f88:	pop    es
  404f89:	outs   dx,BYTE PTR ds:[esi]
  404f8a:	and    BYTE PTR [edx+0x7],ch
  404f8d:	out    dx,al
  404f8e:	retf   
  404f8f:	ret    0x4ece
  404f92:	dec    ecx
  404f93:	dec    edx
  404f94:	or     al,0xd0
  404f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f97:	js     0x404f7a
  404f99:	out    dx,al
  404f9a:	shl    DWORD PTR [ecx-0x9],1
  404f9d:	cmp    edx,DWORD PTR [eax]
  404f9f:	sar    ecx,0x63
  404fa2:	call   0xdf20c391
  404fa7:	pop    edi
  404fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fa9:	pop    edi
  404faa:	cmp    ah,BYTE PTR [eax]
  404fac:	mov    esp,0xd7ee2e90
  404fb1:	sti    
  404fb2:	mov    al,ds:0x258b68ee
  404fb7:	sbb    eax,0xbf4f21e7
  404fbc:	aas    
  404fbd:	js     0x405012
  404fbf:	ret    0x8053
  404fc2:	xchg   ebp,eax
  404fc3:	fdiv   DWORD PTR [edx]
  404fc5:	(bad)  
  404fc6:	mov    ebx,0xeb133530
  404fcb:	out    dx,eax
  404fcc:	mov    esi,0xaac0edfd
  404fd1:	sub    esi,DWORD PTR [esi]
  404fd3:	call   0xe894ae49
  404fd8:	out    dx,al
  404fd9:	rcl    DWORD PTR [ebx+0x2f],1
  404fdc:	adc    al,0xad
  404fde:	das    
  404fdf:	mov    dl,0xb5
  404fe1:	dec    edi
  404fe2:	sub    dl,BYTE PTR [ebx]
  404fe4:	xchg   esp,eax
  404fe5:	stos   DWORD PTR es:[di],eax
  404fe7:	aaa    
  404fe8:	adc    ch,BYTE PTR [ebp+0x6f]
  404feb:	addr16 out dx,eax
  404fed:	test   DWORD PTR [ecx+0x5d366960],eax
  404ff3:	jo     0x405036
  404ff5:	loopne 0x404ffe
  404ff7:	adc    esp,esi
  404ff9:	cld    
  404ffa:	mov    BYTE PTR [esi+ebp*8],dl
  404ffd:	or     dl,BYTE PTR [ebx+0x490e3ed9]
  405003:	jnp    0x405071
  405005:	xor    eax,0x6e3e2d91
  40500a:	pop    eax
  40500b:	(bad)  
  40500c:	xchg   ecx,eax
  40500d:	jg     0x40507f
  40500f:	scas   eax,DWORD PTR es:[edi]
  405010:	xor    eax,0x230026d0
  405015:	xchg   edx,eax
  405016:	loop   0x404fe3
  405018:	jne    0x405008
  40501a:	push   edi
  40501b:	ret    
  40501c:	inc    ebx
  40501d:	into   
  40501e:	jp     0x405034
  405020:	fild   DWORD PTR [esi-0x5b]
  405023:	mov    edx,0x8fdc9cd3
  405028:	push   cs
  405029:	jl     0x404fec
  40502b:	(bad)
  40502e:	and    BYTE PTR [eax-0x1dfab108],cl
  405034:	mov    ds:0xdc02442e,eax
  405039:	repz retf 
  40503b:	lock pop esp
  40503d:	in     eax,0x58
  40503f:	test   BYTE PTR ds:0x47031bb1,dl
  405045:	adc    BYTE PTR [esi],dl
  405047:	outs   dx,BYTE PTR ds:[esi]
  405048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405049:	sbb    esp,esi
  40504b:	test   eax,0x1e9ddc47
  405050:	int3   
  405051:	(bad)  
  405052:	sbb    edi,DWORD PTR [eax]
  405054:	cld    
  405055:	sar    BYTE PTR [edx-0x42],0xf
  405059:	repnz lds ebp,FWORD PTR gs:[ebx-0x40]
  40505e:	or     DWORD PTR [ecx*2+0x1533999d],esi
  405065:	mov    ebp,0x7739bc91
  40506a:	loopne 0x4050c3
  40506c:	inc    ebx
  40506e:	cmp    eax,0x64a52385
  405073:	push   esi
  405074:	push   es
  405075:	dec    edx
  405076:	jl     0x4050db
  405078:	dec    ebp
  405079:	sbb    al,0xb5
  40507b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40507d:	ret    0x83a4
  405080:	cdq    
  405081:	call   0xc5f2:0xc2f8cbe3
  405088:	shl    BYTE PTR ds:0x850f83cb,1
  40508e:	int    0x33
  405090:	inc    edx
  405091:	push   edi
  405092:	cwde   
  405093:	xor    al,0x31
  405095:	add    cl,0x71
  405098:	mov    ss,WORD PTR [eax+ebp*1-0x639e03ef]
  40509f:	inc    edi
  4050a0:	retf   
  4050a1:	fcom   QWORD PTR [edx-0x72]
  4050a4:	jmp    0x4050ed
  4050a6:	retf   
  4050a7:	inc    edi
  4050a8:	and    al,0xb2
  4050aa:	mov    ecx,0xe21a280
  4050af:	sub    eax,0x83c11acf
  4050b4:	shl    BYTE PTR [esi-0x5f],cl
  4050b7:	nop
  4050b8:	mov    ch,0x8c
  4050ba:	sbb    eax,0x80e583b4
  4050bf:	fsub   QWORD PTR [esi]
  4050c1:	sub    al,0x32
  4050c3:	data16 cmp BYTE PTR [edx-0x2205e8cb],cl
  4050ca:	dec    edx
  4050cb:	jge    0x4050fb
  4050cd:	push   ds
  4050ce:	adc    al,0x7
  4050d0:	add    bh,BYTE PTR [ebp+0xc56cfdc]
  4050d6:	or     edi,edx
  4050d8:	fs jns 0x405109
  4050db:	jns    0x4050d5
  4050dd:	xchg   edx,eax
  4050de:	sbb    DWORD PTR [ecx],0x953d4ddf
  4050e4:	retf   
  4050e5:	inc    ebp
  4050e6:	mov    WORD PTR [edx-0x1e7cf650],?
  4050ec:	mov    eax,0x2b90a491
  4050f1:	xchg   ebp,eax
  4050f2:	aam    0x86
  4050f4:	fcom   QWORD PTR [esi+edi*2]
  4050f7:	outs   dx,BYTE PTR gs:[esi]
  4050f9:	adc    BYTE PTR [ebx-0x7c],dl
  4050fc:	inc    BYTE PTR [edx+0x10102bbf]
  405102:	pop    ecx
  405103:	fisubr WORD PTR [ebp+0xc7697ac]
  405109:	rol    BYTE PTR cs:[edx],0xe5
  40510d:	pusha  
  40510e:	outs   dx,DWORD PTR ds:[esi]
  40510f:	sub    cl,BYTE PTR [edi+0x3d]
  405112:	jmp    0x405148
  405114:	into   
  405115:	nop
  405116:	loope  0x40509d
  405118:	jbe    0x405169
  40511a:	mov    esi,0x18644ba4
  40511f:	cmp    al,0x99
  405121:	mov    ebx,DWORD PTR [edi]
  405123:	loop   0x4050f1
  405125:	test   cl,ch
  405127:	push   cs
  405128:	xor    al,0x6
  40512a:	scas   eax,DWORD PTR es:[edi]
  40512b:	ja     0x4050d7
  40512d:	dec    esi
  40512e:	call   0x491ac2ec
  405133:	out    0x5,eax
  405135:	ret    
  405136:	iret   
  405137:	cdq    
  405138:	ss fwait
  40513a:	jbe    0x4050f4
  40513c:	cs dec ebp
  40513e:	ins    DWORD PTR es:[edi],dx
  40513f:	push   ecx
  405140:	daa    
  405141:	nop
  405142:	clc    
  405143:	hlt    
  405144:	push   ebp
  405145:	jae    0x405180
  405147:	jl     0x405115
  405149:	mov    DWORD PTR [edi+0x48],eax
  40514c:	pop    edx
  40514d:	inc    esi
  40514e:	jmp    DWORD PTR [esi-0xd]
  405151:	mov    al,0xce
  405153:	ret    
  405154:	ret    
  405155:	ret    0x8d69
  405158:	jg     0x4051cc
  40515a:	dec    edi
  40515b:	div    BYTE PTR [edx-0x5f]
  40515e:	sbb    ecx,DWORD PTR [ebx+0xfd87878]
  405164:	gs and ebx,edx
  405167:	inc    esi
  405168:	pusha  
  405169:	neg    BYTE PTR [ebx+0x498951e3]
  40516f:	data16 sub bh,al
  405172:	je     0x405185
  405174:	push   cs
  405175:	xlat   BYTE PTR ds:[ebx]
  405176:	sub    DWORD PTR ds:0x824d0f9c,ecx
  40517c:	mov    edx,0xcf82945e
  405181:	cmp    al,bl
  405183:	sub    BYTE PTR [eax+edi*2],dh
  405186:	and    cl,ch
  405188:	(bad)  
  405189:	sbb    cl,BYTE PTR [ebp-0x18f0c07e]
  40518f:	mov    edi,DWORD PTR fs:[esi]
  405192:	push   esp
  405193:	pop    esp
  405194:	push   ss
  405195:	rcl    DWORD PTR [edx+0x4703a94f],1
  40519b:	sbb    ch,BYTE PTR [ecx+edx*1+0xa]
  40519f:	aad    0x8e
  4051a1:	call   0xa8ba:0x43e80cab
  4051a8:	daa    
  4051a9:	sbb    edi,DWORD PTR [edi+0x27]
  4051ac:	jbe    0x40516d
  4051ae:	js     0x405170
  4051b0:	fdivr  DWORD PTR [ebp+0x5b]
  4051b3:	scas   al,BYTE PTR es:[edi]
  4051b4:	mov    edx,0x8740a8b2
  4051b9:	inc    edx
  4051ba:	arpl   WORD PTR [ecx+0x3c5ab394],si
  4051c0:	adc    eax,0x662a694e
  4051c5:	outs   dx,BYTE PTR ds:[esi]
  4051c6:	test   edx,esi
  4051c8:	pusha  
  4051c9:	fstp   TBYTE PTR [esi+0x40a99aa7]
  4051cf:	cmp    BYTE PTR [ebx+0x4d2543de],cl
  4051d5:	popa   
  4051d6:	push   esp
  4051d7:	push   edi
  4051d8:	add    esp,ebp
  4051da:	mov    esi,0x14b6733d
  4051df:	mov    dl,0xf9
  4051e1:	inc    edx
  4051e2:	loop   0x405227
  4051e4:	int    0xfc
  4051e6:	mov    eax,0x9a0f2931
  4051eb:	adc    BYTE PTR [edi+eiz*4+0x54],dh
  4051ef:	aam    0x2a
  4051f1:	ins    DWORD PTR es:[edi],dx
  4051f2:	jae    0x405222
  4051f4:	xor    edx,DWORD PTR [esi]
  4051f6:	out    0x22,al
  4051f8:	repnz stos BYTE PTR es:[edi],al
  4051fa:	add    bl,dh
  4051fc:	jecxz  0x40525a
  4051fe:	imul   ecx,ebx,0x424cb865
  405204:	add    al,0x70
  405206:	fadd   DWORD PTR [ecx-0x7c]
  405209:	xchg   edi,eax
  40520a:	sub    eax,0x33238073
  40520f:	jmp    esi
  405211:	sub    ebx,DWORD PTR [edi-0x6cca867e]
  405217:	in     al,dx
  405218:	pushf  
  405219:	xchg   dx,ax
  40521b:	and    eax,0x8d1f526e
  405220:	mov    cl,0xfb
  405222:	mov    ds:0x525be71,eax
  405227:	stos   BYTE PTR es:[edi],al
  405228:	mov    ch,0xbc
  40522a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40522b:	mov    ds:0x2ae9482f,al
  405230:	test   DWORD PTR [esi+0x4f3d408b],ebp
  405236:	test   al,0x5c
  405238:	std    
  405239:	xor    BYTE PTR [ecx],bh
  40523b:	or     BYTE PTR ds:0x7c9e5913,cl
  405241:	and    eax,0x133a9c26
  405246:	mov    esi,0xb0644581
  40524b:	in     eax,0x5b
  40524d:	pop    ecx
  40524e:	je     0x405258
  405250:	sub    eax,0xe620e83c
  405255:	and    esi,DWORD PTR [ecx+0x7e]
  405258:	int    0x8c
  40525a:	sbb    DWORD PTR [eax*2-0x5c80b87b],0xffffff9f
  405262:	jle    0x4051f5
  405264:	adc    cl,BYTE PTR [edi-0x67]
  405267:	pop    edx
  405268:	inc    ecx
  405269:	loope  0x4052d4
  40526b:	pop    ss
  40526c:	ror    ah,1
  40526e:	and    dh,bh
  405270:	into   
  405271:	mov    cl,0x63
  405273:	pop    esi
  405274:	lods   al,BYTE PTR ds:[esi]
  405275:	push   edx
  405276:	icebp  
  405277:	stc    
  405278:	mov    ss,WORD PTR [ebx-0x80]
  40527b:	int3   
  40527c:	repz call 0x67380402
  405282:	and    ah,cl
  405284:	mov    ch,0x50
  405286:	add    eax,esi
  405288:	xchg   DWORD PTR [eax-0x66b95672],ecx
  40528e:	repz xchg esp,eax
  405290:	inc    edi
  405291:	inc    esi
  405292:	aas    
  405293:	cmp    WORD PTR [ebx-0x56b6569e],dx
  40529a:	sub    BYTE PTR [edx],al
  40529c:	leave  
  40529d:	add    al,0xf2
  40529f:	dec    ebp
  4052a0:	or     ecx,edi
  4052a2:	ds or  eax,0xb66cc88
  4052a8:	ss and bl,bh
  4052ab:	mov    BYTE PTR [eax-0x14],ch
  4052ae:	cmp    eax,0xf867af9a
  4052b3:	xchg   edi,eax
  4052b4:	inc    esp
  4052b5:	ret    0x5fc2
  4052b8:	mov    dl,0x95
  4052ba:	mov    ds:0x93a2b8e8,al
  4052bf:	cmp    edi,DWORD PTR [eax]
  4052c1:	jle    0x4052a6
  4052c3:	jno    0x4052e7
  4052c5:	fs aam 0x22
  4052c8:	ss mov edx,0x43de8c73
  4052ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052cf:	inc    ebp
  4052d0:	inc    ebp
  4052d1:	jmp    0x4052ed
  4052d3:	call   0xe70f:0xe83ade4
  4052da:	add    bl,ah
  4052dc:	pop    ecx
  4052dd:	xor    BYTE PTR [ebp+0x46],bl
  4052e0:	jle    0x40529d
  4052e2:	lods   eax,DWORD PTR ds:[esi]
  4052e3:	sbb    esi,DWORD PTR [ecx+0x392d2e2c]
  4052e9:	in     al,dx
  4052ea:	push   ds
  4052eb:	cwde   
  4052ec:	cmp    BYTE PTR [eax+edi*1-0x1efd7b14],0x49
  4052f4:	stc    
  4052f5:	pop    ss
  4052f6:	loope  0x405341
  4052f8:	aaa    
  4052f9:	jne    0x40531e
  4052fb:	hlt    
  4052fc:	sar    DWORD PTR [ebx],1
  4052fe:	imul   eax,DWORD PTR [edx-0x3bf11ec3]
  405305:	jmp    0x405335
  405307:	pop    ss
  405308:	adc    al,0xce
  40530a:	jmp    DWORD PTR [esi+0x3f]
  40530d:	xlat   BYTE PTR ds:[ebx]
  40530e:	aad    0xe4
  405310:	inc    edi
  405311:	icebp  
  405312:	pop    eax
  405313:	jecxz  0x4052d7
  405315:	ins    DWORD PTR es:[edi],dx
  405316:	dec    edx
  405317:	dec    eax
  405318:	ret    
  405319:	ja     0x4052e4
  40531b:	(bad)  
  40531d:	(bad)  [eax-0x44]
  405320:	arpl   WORD PTR [ebp+0x2717c47d],di
  405326:	clc    
  405327:	lock jecxz 0x405355
  40532a:	mov    eax,0xc790013d
  40532f:	aam    0xce
  405331:	sbb    ch,BYTE PTR [ecx]
  405333:	arpl   WORD PTR [edi*2-0x68fb6160],cx
  40533a:	jno    0x4052e8
  40533c:	or     al,BYTE PTR [edi+0x33]
  40533f:	pop    esp
  405340:	inc    DWORD PTR [ecx-0x6b408225]
  405346:	ficom  DWORD PTR [ecx+0x7d8ccef2]
  40534c:	adc    al,0x57
  40534e:	arpl   sp,di
  405350:	mov    eax,0xc82e5b31
  405355:	fmul   QWORD PTR [esi]
  405357:	outs   dx,DWORD PTR ds:[esi]
  405358:	dec    esp
  405359:	xlat   BYTE PTR ds:[ebx]
  40535a:	stos   DWORD PTR es:[edi],eax
  40535b:	out    0xa,eax
  40535d:	jbe    0x405385
  40535f:	repz jae 0x4053a6
  405362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405363:	sbb    ecx,0x30f4a46a
  405369:	daa    
  40536a:	dec    edx
  40536b:	add    esp,DWORD PTR [esi+0x68]
  40536e:	sti    
  40536f:	mov    ebp,0xed898b0b
  405374:	mov    al,ds:0xdd721e89
  405379:	out    0xe9,al
  40537b:	xchg   edx,eax
  40537c:	push   0x7719bf74
  405381:	mov    bl,0x75
  405383:	ja     0x40532c
  405385:	adc    al,BYTE PTR [ebp-0x7b57d8f6]
  40538b:	call   0xd6c29ad7
  405390:	or     BYTE PTR [ebx],bl
  405392:	into   
  405393:	leave  
  405394:	mov    al,ds:0x711f51d8
  405399:	outs   dx,DWORD PTR ds:[esi]
  40539a:	iret   
  40539b:	ret    
  40539c:	dec    esi
  40539d:	test   al,0x13
  40539f:	repnz sti 
  4053a1:	ins    DWORD PTR es:[edi],dx
  4053a2:	mov    ebx,0xd8650a29
  4053a7:	lods   eax,DWORD PTR ds:[esi]
  4053a8:	(bad)  
  4053a9:	mov    esi,0xf1d1cb93
  4053ae:	pop    esi
  4053af:	adc    edx,0x640c0e9b
  4053b5:	mov    al,0x7f
  4053b7:	pop    edx
  4053b8:	stos   BYTE PTR es:[edi],al
  4053b9:	pop    edi
  4053ba:	test   eax,0xbb367a39
  4053bf:	adc    BYTE PTR ds:0x379b4bd6,al
  4053c5:	repnz lds ebx,FWORD PTR [ebx-0x6e]
  4053c9:	inc    esp
  4053ca:	popf   
  4053cb:	(bad)  
  4053cc:	xchg   edx,eax
  4053cd:	dec    ecx
  4053ce:	js     0x405433
  4053d0:	xchg   edi,eax
  4053d1:	jl     0x40536c
  4053d3:	xor    DWORD PTR [esi+0x4e],ebp
  4053d6:	xor    ch,dh
  4053d8:	mov    edx,0x871c1239
  4053dd:	cmp    BYTE PTR [edi+ebp*4-0x5d165bc4],dh
  4053e4:	jp     0x40539e
  4053e6:	test   al,0x10
  4053e8:	adc    DWORD PTR [edx+esi*4+0x7],0x8
  4053ed:	int    0x4c
  4053ef:	mov    BYTE PTR [ebx-0x3a],al
  4053f2:	mov    bl,0xbf
  4053f4:	js     0x4053cb
  4053f6:	sbb    DWORD PTR [eax-0x4f5758ce],edx
  4053fc:	xchg   esi,eax
  4053fd:	dec    edx
  4053fe:	add    DWORD PTR [esi],eax
  405400:	jle    0x40541f
  405402:	aam    0xc0
  405404:	fdiv   QWORD PTR [edx+eiz*8+0x3b]
  405408:	or     BYTE PTR [eax+0xf],bl
  40540b:	or     eax,0x47d40d33
  405410:	and    al,0xd
  405412:	pop    esi
  405413:	cmp    eax,0x26deb375
  405418:	retf   
  405419:	fimul  WORD PTR [ecx+0x2f10e1b9]
  40541f:	push   ebp
  405420:	jbe    0x4053c1
  405422:	mov    WORD PTR [edi],es
  405424:	retf   0x84da
  405427:	adc    eax,0xbf8c048a
  40542c:	jo     0x405469
  40542e:	pop    esi
  40542f:	mov    ah,0x44
  405431:	outs   dx,DWORD PTR ds:[esi]
  405432:	push   ds
  405433:	mov    ebp,0xe7061c9c
  405438:	(bad)  
  405439:	xchg   ebx,eax
  40543a:	ret    0xc560
  40543d:	jae    0x405438
  40543f:	lds    esi,FWORD PTR [edi-0x5573af72]
  405445:	dec    edi
  405446:	sub    BYTE PTR [esp+eiz*8+0x7b],cl
  40544a:	fmul   QWORD PTR [ecx]
  40544c:	and    BYTE PTR [edi+0x43],bh
  40544f:	adc    ebp,edx
  405451:	cmp    eax,0x7d7ed6f5
  405456:	dec    esi
  405457:	push   edi
  405458:	fsubp  st(5),st
  40545a:	mov    bh,0x78
  40545c:	pop    esp
  40545d:	pop    es
  40545e:	das    
  40545f:	(bad)  
  405460:	retf   
  405461:	mov    dh,dl
  405463:	pop    edx
  405464:	pop    edx
  405465:	sbb    ah,dh
  405467:	cld    
  405468:	popf   
  405469:	dec    ebp
  40546a:	adc    BYTE PTR [ecx+0x17],0x20
  40546e:	popa   
  40546f:	lock sbb al,0x81
  405472:	je     0x4054ba
  405474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405475:	aam    0x38
  405477:	push   esp
  405478:	mov    DWORD PTR ds:0x657a4016,0xa2adf0d4
  405482:	pop    esi
  405483:	mov    eax,ds:0x7438a6e6
  405488:	sbb    DWORD PTR [ecx+0x2e9bcec8],esp
  40548e:	cmp    ecx,edx
  405490:	daa    
  405491:	push   edi
  405492:	jg     0x40543c
  405494:	int3   
  405495:	fistp  DWORD PTR [esi-0x7d]
  405498:	jb     0x4054fe
  40549a:	or     esp,DWORD PTR [edx]
  40549c:	ds mov bh,0xa
  40549f:	jl     0x40549f
  4054a1:	cmp    ecx,DWORD PTR [ebx+0x210c4dd9]
  4054a7:	adc    BYTE PTR [esp],0x99
  4054ab:	in     al,dx
  4054ac:	sub    BYTE PTR ds:0x2b510585,dh
  4054b2:	pop    edx
  4054b3:	ficomp WORD PTR [edx+0x4c5e293a]
  4054b9:	dec    esp
  4054ba:	mov    edx,0x1b8d21a7
  4054bf:	(bad)  
  4054c0:	sbb    esi,DWORD PTR ds:0xd10b0de8
  4054c6:	jno    0x405468
  4054c8:	out    dx,al
  4054c9:	jmp    0x8868:0x271c100f
  4054d0:	dec    ebp
  4054d1:	push   esp
  4054d2:	loopne 0x4054ad
  4054d4:	aaa    
  4054d5:	gs inc ecx
  4054d7:	inc    esi
  4054d8:	rcl    DWORD PTR [esi],cl
  4054da:	enter  0x845,0x51
  4054de:	dec    eax
  4054df:	mov    cl,0xf7
  4054e1:	clc    
  4054e2:	in     eax,dx
  4054e3:	(bad)  
  4054e4:	cdq    
  4054e5:	pop    edi
  4054e6:	or     eax,0xcf38e03d
  4054eb:	mov    eax,0xbbae05e0
  4054f0:	retf   0x8a96
  4054f3:	jno    0x405501
  4054f5:	and    BYTE PTR [ecx+0x7adbe110],dh
  4054fb:	inc    ebp
  4054fc:	je     0x40553b
  4054fe:	and    eax,0xc5dd8afa
  405503:	mov    dl,0xdb
  405505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405506:	mov    ebx,0xa93f2fc1
  40550b:	mov    al,ds:0xadbcd9ec
  405510:	ins    DWORD PTR es:[edi],dx
  405511:	push   0x26
  405513:	mov    esi,0x3846fe
  405518:	adc    DWORD PTR [ebp-0x5fcd7aae],esp
  40551e:	aad    0xf2
  405520:	pop    ecx
  405521:	push   ss
  405522:	xor    BYTE PTR ds:0x143c5e0a,0x54
  405529:	cmp    ch,BYTE PTR [ecx-0x61]
  40552c:	popa   
  40552d:	scas   al,BYTE PTR es:[edi]
  40552e:	ret    0x6dce
  405531:	jl     0x4055a9
  405533:	sbb    al,BYTE PTR [esp+ebp*2+0xc54a7cf]
  40553a:	stos   DWORD PTR es:[edi],eax
  40553b:	in     eax,dx
  40553c:	xor    ecx,DWORD PTR [ebx+0x27a3d81d]
  405542:	mov    eax,ds:0xe1cb4c0a
  405547:	mov    ah,0xfe
  405549:	mov    ebx,edx
  40554b:	pop    esp
  40554c:	jnp    0x4055a0
  40554e:	sar    DWORD PTR [ebx-0x11],1
  405551:	(bad)  
  405552:	pop    DWORD PTR [ebp+0x14]
  405555:	pop    ss
  405556:	xlat   BYTE PTR ds:[ebx]
  405557:	je     0x4054fb
  405559:	neg    BYTE PTR [ebp*1-0x5d97fc20]
  405560:	inc    eax
  405561:	test   DWORD PTR ds:0x136b5ff7,edx
  405567:	stos   DWORD PTR es:[edi],eax
  405568:	imul   ebx,DWORD PTR [edi+0x638292bf],0x682840b9
  405572:	add    DWORD PTR [esi+0x36],edx
  405575:	xchg   ecx,eax
  405576:	jmp    0xfa37d919
  40557b:	pop    eax
  40557c:	dec    edx
  40557d:	in     al,0xc5
  40557f:	mov    cs,WORD PTR [ecx]
  405581:	pop    edx
  405582:	(bad)  
  405583:	jmp    0x40552b
  405585:	imul   ecx,DWORD PTR [esi+0x58a0aae2],0x1e79412b
  40558f:	gs iret 
  405591:	mov    bl,0x11
  405593:	imul   edi,DWORD PTR [ecx+0x65299501],0x5e9255c9
  40559d:	or     DWORD PTR [edi+ecx*8-0x1c048a56],0x73
  4055a5:	das    
  4055a6:	stos   BYTE PTR es:[edi],al
  4055a7:	out    0x55,eax
  4055a9:	add    eax,0xfd480039
  4055ae:	push   eax
  4055af:	fild   DWORD PTR [ebp+0x6e5ddc8d]
  4055b5:	dec    ebx
  4055b6:	sub    al,BYTE PTR [edi+esi*1]
  4055b9:	jnp    0x405631
  4055bb:	jo     0x4055d6
  4055bd:	popa   
  4055be:	add    ebp,ecx
  4055c0:	fldcw  WORD PTR [ebp-0x24]
  4055c3:	dec    edx
  4055c4:	and    DWORD PTR [ecx],0xffffffb2
  4055c7:	hlt    
  4055c8:	in     al,dx
  4055c9:	(bad)  
  4055cb:	out    0x83,al
  4055cd:	sti    
  4055ce:	adc    BYTE PTR [esi],0xee
  4055d1:	mov    ecx,0xa8fb6299
  4055d6:	fimul  DWORD PTR [edi+0x2d]
  4055d9:	inc    eax
  4055da:	fadd   DWORD PTR [ebp+0x3b]
  4055dd:	rcl    DWORD PTR [eax],1
  4055df:	pushf  
  4055e0:	jbe    0x405656
  4055e2:	pop    DWORD PTR [eax+0xf043c61]
  4055e8:	es loopne 0x4055e9
  4055eb:	or     BYTE PTR [eax+0x4a081c83],cl
  4055f1:	add    eax,0xe32d6157
  4055f6:	mov    eax,0x7226a610
  4055fb:	cmp    eax,0x12c6cf0
  405600:	cs std 
  405602:	(bad)  
  405603:	bound  ecx,QWORD PTR [edi+0x1499024d]
  405609:	cwde   
  40560a:	cmc    
  40560b:	cmp    ah,dh
  40560d:	inc    ecx
  40560e:	fwait
  40560f:	inc    ebx
  405610:	aaa    
  405611:	mov    bh,BYTE PTR [ecx-0x33]
  405614:	daa    
  405615:	nop
  405616:	pop    esi
  405617:	test   DWORD PTR [ecx-0x41e7941f],0x23f151c8
  405621:	jne    0x405696
  405623:	ins    BYTE PTR es:[edi],dx
  405624:	jae    0x405612
  405626:	outs   dx,DWORD PTR ds:[esi]
  405627:	adc    BYTE PTR [ecx],ah
  405629:	push   0x51579594
  40562e:	dec    ecx
  40562f:	in     al,dx
  405630:	mov    cl,0x4b
  405632:	mov    esi,ds
  405634:	mov    WORD PTR [edx],?
  405636:	ins    DWORD PTR es:[edi],dx
  405637:	or     eax,0xbe55a32e
  40563c:	mov    BYTE PTR [eax-0x21d8b127],ah
  405642:	mov    bl,0x5b
  405644:	xchg   esi,eax
  405645:	sub    BYTE PTR [ebx-0x20d9eaa1],al
  40564b:	and    BYTE PTR [esi],dl
  40564d:	sub    esi,0x37
  405650:	adc    BYTE PTR [edi-0x4c],ah
  405653:	sub    bh,BYTE PTR [ebx+0x1]
  405656:	inc    eax
  405657:	adc    eax,0x34ac0b96
  40565c:	stos   DWORD PTR es:[edi],eax
  40565d:	loopne 0x4055f4
  40565f:	or     BYTE PTR ds:0xbdcc4d8a,dh
  405665:	mov    ecx,0xc180eebf
  40566a:	add    edx,esp
  40566c:	repnz push esi
  40566e:	imul   ebp,DWORD PTR [ebx],0xffffffa9
  405671:	add    edi,esp
  405673:	mov    BYTE PTR [edi+0x6805dc8a],cl
  405679:	sbb    esp,DWORD PTR [ecx-0x6]
  40567c:	jecxz  0x40567a
  40567e:	add    al,0x44
  405680:	pop    ds
  405681:	jle    0x4056d2
  405683:	add    BYTE PTR [ebx+eax*1],0x5d
  405687:	sbb    eax,0x51ebc694
  40568c:	xor    edx,DWORD PTR [eax]
  40568e:	jl     0x405663
  405690:	mov    ch,0x58
  405692:	cmpxchg BYTE PTR [ebx+0x42],ch
  405696:	enter  0x5f4b,0x84
  40569a:	call   0x314083b9
  40569f:	sar    ch,0xf4
  4056a2:	push   edx
  4056a3:	icebp  
  4056a4:	push   0x7d
  4056a6:	test   ecx,esp
  4056a8:	jnp    0x4056b7
  4056aa:	xchg   edx,eax
  4056ab:	dec    edx
  4056ac:	shr    BYTE PTR [edi-0x2f03d565],cl
  4056b2:	stos   DWORD PTR es:[edi],eax
  4056b3:	mov    eax,0xbf76aadd
  4056b8:	(bad)  
  4056b9:	push   ds
  4056ba:	(bad)  
  4056bb:	stc    
  4056bc:	hlt    
  4056bd:	sub    esi,0xffffffc2
  4056c0:	into   
  4056c1:	cdq    
  4056c2:	iret   
  4056c3:	inc    edx
  4056c4:	fstp   QWORD PTR [eax-0x2e089b8a]
  4056ca:	pop    edi
  4056cb:	js     0x405741
  4056cd:	imul   ebx,ebx,0xffffff84
  4056d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d1:	pusha  
  4056d2:	fadd   DWORD PTR [edi]
  4056d4:	ja     0x405728
  4056d6:	push   ds
  4056d7:	jbe    0x4056ec
  4056d9:	jno    0x4056ec
  4056db:	push   0x5f
  4056dd:	sub    DWORD PTR [esi],ebp
  4056df:	lds    edi,FWORD PTR [edi-0x504b26ec]
  4056e5:	add    eax,0xf80ae7f7
  4056ea:	sbb    al,0x4e
  4056ec:	das    
  4056ed:	push   edx
  4056ee:	nop
  4056ef:	mov    cl,0xe1
  4056f1:	out    0x68,al
  4056f3:	test   al,0x17
  4056f5:	cmp    ch,BYTE PTR [ebp-0x4319aca6]
  4056fb:	inc    edi
  4056fc:	inc    ebx
  4056fd:	std    
  4056fe:	nop
  4056ff:	(bad)  
  405700:	xchg   ebx,eax
  405701:	int    0xe5
  405703:	arpl   WORD PTR [ecx+0x19],ax
  405706:	mov    ebp,0x39ba060f
  40570b:	cli    
  40570c:	shl    BYTE PTR [edi+0x63299b4a],0x78
  405713:	jecxz  0x405704
  405715:	into   
  405716:	imul   ecx,edi,0xffffff9a
  405719:	mov    edx,0xa39e6bd7
  40571e:	and    al,0xa4
  405720:	arpl   WORD PTR [edi-0x42],ax
  405723:	aas    
  405724:	mov    dl,0xdc
  405726:	mov    esi,DWORD PTR [edi+0x3ab4e109]
  40572c:	repnz rcl BYTE PTR [ecx+0x44],0x28
  405731:	sub    al,0x2a
  405733:	inc    edx
  405734:	stos   BYTE PTR es:[edi],al
  405735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405736:	les    edx,FWORD PTR [ebp+ecx*1-0x67]
  40573a:	call   0x12fd:0xeab17c8b
  405741:	mov    ss:0xb9eed3b0,eax
  405747:	xchg   DWORD PTR [ecx],eax
  405749:	hlt    
  40574a:	sbb    DWORD PTR [ebx-0x1269b6a6],0x1d
  405751:	cwde   
  405752:	sbb    edi,DWORD PTR [edi+0x55115eea]
  405758:	ss jns 0x4057b9
  40575b:	or     DWORD PTR [edi*8+0x670e04ac],ebp
  405762:	stc    
  405763:	sbb    al,0xa
  405765:	repz inc edx
  405767:	test   BYTE PTR [eax+0x7e],0x3b
  40576b:	outs   dx,BYTE PTR ds:[esi]
  40576c:	ror    dh,1
  40576e:	in     al,0x44
  405770:	push   es
  405771:	jae    0x405717
  405773:	jae    0x405760
  405775:	sub    DWORD PTR [ebp+0x3d7b8e13],esi
  40577b:	gs aaa 
  40577d:	mov    edx,0x53961a02
  405782:	outs   dx,DWORD PTR ds:[esi]
  405783:	jmp    0x405773
  405785:	pop    ebp
  405786:	mov    ah,0x76
  405788:	nop
  405789:	mov    edi,0x5f3ce602
  40578e:	push   ecx
  40578f:	imul   edi,DWORD PTR [ebx],0x59
  405792:	inc    eax
  405793:	sbb    dl,ch
  405795:	cwde   
  405796:	mov    cl,0x30
  405798:	push   esp
  405799:	jmp    0x4dc98a59
  40579e:	imul   esp,DWORD PTR ds:0x39a22b39,0xffffff94
  4057a5:	pop    ss
  4057a6:	out    dx,eax
  4057a7:	mov    esi,0x9f8a996d
  4057ac:	loope  0x405810
  4057ae:	pop    eax
  4057af:	ret    0x5028
  4057b2:	bound  eax,QWORD PTR [edi+0x7a88fcc4]
  4057b8:	adc    dh,BYTE PTR gs:[ecx+0x56deaf0e]
  4057bf:	test   eax,0x2daf563e
  4057c4:	mov    edi,0x6929137b
  4057c9:	xor    bh,BYTE PTR [edi+0x383a225]
  4057cf:	pop    eax
  4057d0:	pop    ss
  4057d1:	jp     0x40580f
  4057d3:	pop    ss
  4057d4:	push   0xfffffffb
  4057d6:	xchg   DWORD PTR [edi+eax*8+0x757bc8db],esi
  4057dd:	jmp    0x34fd:0xf4f80871
  4057e4:	in     eax,0x8
  4057e6:	jp     0x40578c
  4057e8:	rcr    DWORD PTR [edi+0x5b],cl
  4057eb:	popa   
  4057ec:	leave  
  4057ed:	arpl   WORD PTR [eax-0x13fef9f7],bx
  4057f3:	pusha  
  4057f4:	jg     0x405841
  4057f6:	adc    eax,0x945f6234
  4057fb:	in     al,dx
  4057fc:	inc    esi
  4057fd:	inc    eax
  4057fe:	jmp    0x405788
  405800:	ror    DWORD PTR gs:[edx+esi*4-0x4b],1
  405805:	jnp    0x4057ad
  405807:	mov    al,0x52
  405809:	dec    eax
  40580b:	popf   
  40580c:	repnz fadd QWORD PTR [edx+edi*8-0x4e98c07a]
  405814:	std    
  405815:	add    DWORD PTR cs:[ecx-0x310006e4],ecx
  40581c:	push   ss
  40581d:	push   es
  40581e:	mov    esp,0xbba93fa9
  405823:	enter  0x550,0x1d
  405827:	xchg   dl,dh
  405829:	lods   eax,DWORD PTR ds:[esi]
  40582a:	icebp  
  40582b:	push   edi
  40582c:	push   cs
  40582d:	jecxz  0x40586e
  40582f:	cmp    ebx,edi
  405831:	bnd call 0x26404571
  405837:	jno    0x4057fc
  405839:	mov    cl,BYTE PTR [eax+0x5e28bd6f]
  40583f:	out    0x6b,eax
  405841:	mov    esi,0xfeffdcac
  405846:	scas   al,BYTE PTR es:[edi]
  405847:	mov    ebp,0x89ea2893
  40584c:	dec    ebx
  40584d:	cmp    DWORD PTR [esp+eax*4+0x5b48f0ab],ebp
  405854:	mov    edx,0x814f3267
  405859:	scas   eax,DWORD PTR es:[edi]
  40585a:	pop    edx
  40585b:	dec    eax
  40585c:	mov    ah,0xe2
  40585e:	leave  
  40585f:	sub    al,al
  405861:	xlat   BYTE PTR ds:[ebx]
  405862:	xor    bh,BYTE PTR [ebx]
  405864:	call   0xa777:0x72f0ef95
  40586b:	and    DWORD PTR [ebx],esi
  40586d:	push   esp
  40586e:	mov    edi,0xc99f4c23
  405873:	mov    ds:0x926a0c48,eax
  405878:	or     DWORD PTR [ebp+0x64],esp
  40587b:	pop    ecx
  40587c:	mov    ds:0x2948ba2,eax
  405881:	sbb    ch,BYTE PTR [ecx]
  405883:	aaa    
  405884:	lods   eax,DWORD PTR ds:[esi]
  405885:	or     al,0x93
  405887:	pop    ebx
  405888:	test   cl,bh
  40588a:	push   ebp
  40588b:	test   eax,0x96a2067b
  405890:	mov    eax,ds:0x3ac925fe
  405895:	mov    eax,0xc3c18d1b
  40589a:	aam    0x34
  40589c:	fdiv   st,st(4)
  40589e:	loope  0x40590c
  4058a0:	jle    0x40590b
  4058a2:	xor    edx,ebp
  4058a4:	sub    al,0x2a
  4058a6:	push   edx
  4058a7:	fisub  DWORD PTR [ecx]
  4058a9:	pop    ss
  4058aa:	aaa    
  4058ab:	dec    esi
  4058ac:	not    DWORD PTR ss:[esi]
  4058af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b0:	jmp    DWORD PTR [eax]
  4058b2:	jmp    0x8086299e
  4058b7:	pop    edi
  4058b8:	inc    edx
  4058b9:	pop    edx
  4058ba:	jecxz  0x405872
  4058bc:	jecxz  0x4058a8
  4058be:	jo     0x4058fd
  4058c0:	ret    0xb2ee
  4058c3:	sbb    DWORD PTR [ebp-0xa],edi
  4058c6:	add    al,0xb0
  4058c8:	test   BYTE PTR [esi],0x42
  4058cb:	or     al,0x7d
  4058cd:	ja     0x40590b
  4058cf:	xchg   ebp,eax
  4058d0:	dec    eax
  4058d1:	add    esp,esi
  4058d3:	out    dx,eax
  4058d4:	pop    ds
  4058d5:	cwde   
  4058d6:	into   
  4058d7:	pop    edx
  4058d8:	aad    0x74
  4058da:	mov    esp,0x99d8c7e0
  4058df:	mov    WORD PTR [edx+edx*4-0x44ae13d5],?
  4058e6:	stos   BYTE PTR es:[edi],al
  4058e7:	dec    ebx
  4058e8:	inc    edi
  4058e9:	out    dx,al
  4058ea:	jb     0x405953
  4058ec:	xor    dl,BYTE PTR [ebx+0x1b]
  4058ef:	add    BYTE PTR [ebp-0x4959ede5],ah
  4058f5:	or     esp,DWORD PTR [edx]
  4058f7:	stos   DWORD PTR es:[edi],eax
  4058f8:	xchg   BYTE PTR [ecx],cl
  4058fa:	ins    BYTE PTR es:[edi],dx
  4058fb:	mov    dh,0x40
  4058fd:	adc    al,0x2c
  4058ff:	cmp    BYTE PTR [esi+0x4739b5a9],0xfe
  405906:	ds add al,0xbb
  405909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40590a:	dec    ebx
  40590b:	jle    0x405962
  40590d:	dec    esi
  40590e:	addr16 dec ebx
  405910:	(bad)  
  405911:	loope  0x4058f6
  405913:	int    0x29
  405915:	jb     0x405930
  405917:	iret   
  405918:	test   bl,0x8c
  40591b:	jle    0x40596e
  40591d:	clc    
  40591e:	mov    ds:0x4534eead,eax
  405923:	mov    WORD PTR [ebp+esi*1+0x4b4c5a58],es
  40592a:	dec    ebx
  40592b:	std    
  40592c:	xchg   edi,eax
  40592d:	add    DWORD PTR ds:0xa86a6379,ebx
  405933:	into   
  405934:	add    al,0xb2
  405936:	(bad)  
  405937:	fs push es
  405939:	sub    DWORD PTR [ecx],ebp
  40593b:	or     BYTE PTR [eax-0x6382df9e],bh
  405941:	cmp    dh,dl
  405943:	fadd   DWORD PTR [edx-0x3d110993]
  405949:	sbb    eax,0x2e9ad5d7
  40594e:	and    eax,0x83f9dcb2
  405953:	repz adc bh,dh
  405956:	adc    eax,0x33f5b715
  40595b:	dec    edi
  40595c:	into   
  40595d:	xchg   edx,eax
  40595e:	in     eax,0x9a
  405960:	and    al,0xb3
  405962:	jecxz  0x4059af
  405964:	fiadd  WORD PTR [edx-0x262b0d63]
  40596a:	mov    WORD PTR [ebx-0x48],ss
  40596d:	or     BYTE PTR [ecx+0x286d1435],dh
  405973:	fsubr  st,st(5)
  405975:	shl    BYTE PTR [edi+edx*2+0x79],cl
  405979:	and    al,0xae
  40597b:	(bad)  
  40597c:	adc    DWORD PTR ds:0x7295715a,esp
  405982:	dec    ecx
  405983:	popf   
  405984:	dec    eax
  405985:	scas   al,BYTE PTR es:[edi]
  405986:	test   al,0xc7
  405988:	cmp    cl,al
  40598a:	xchg   DWORD PTR [edx+0x22],edx
  40598d:	idiv   dh
  40598f:	mov    edx,0x37bc3436
  405994:	jae    0x40591d
  405996:	dec    ebp
  405997:	outs   dx,DWORD PTR ds:[esi]
  405998:	into   
  405999:	and    dl,BYTE PTR [eax+0x793e8cd9]
  40599f:	mov    dl,bh
  4059a1:	loopne 0x40598d
  4059a3:	retf   
  4059a4:	std    
  4059a5:	mov    ecx,0x7bb5575
  4059aa:	adc    DWORD PTR [ecx+0x6],ecx
  4059ad:	xchg   DWORD PTR [ecx],ebp
  4059af:	in     eax,0x16
  4059b1:	test   eax,0xc1c8448d
  4059b6:	(bad)  
  4059b7:	mov    esi,0x5e8ded2b
  4059bc:	int3   
  4059bd:	nop
  4059be:	scas   eax,DWORD PTR es:[edi]
  4059bf:	jae    0x4059c9
  4059c1:	enter  0x605f,0x62
  4059c5:	in     eax,dx
  4059c6:	mov    cl,BYTE PTR [bp+si-0x1b]
  4059ca:	hlt    
  4059cb:	jb     0x405a35
  4059cd:	xchg   edi,eax
  4059ce:	test   DWORD PTR [ecx],eax
  4059d0:	ror    BYTE PTR [eiz*1+0x37f5b1b8],0x63
  4059d8:	retf   
  4059d9:	push   ebp
  4059da:	jb     0x405a49
  4059dc:	es pusha 
  4059de:	mov    DWORD PTR [esi-0x119b800e],edx
  4059e4:	inc    ebp
  4059e5:	int3   
  4059e6:	ss clc 
  4059e8:	out    0x84,ax
  4059eb:	sahf   
  4059ec:	mov    ebp,0x89dd5bd2
  4059f1:	mov    WORD PTR [ebp-0x3b176287],?
  4059f7:	(bad)  
  4059f8:	jmp    0x405a67
  4059fa:	lds    ebx,FWORD PTR [edx]
  4059fc:	lds    ecx,FWORD PTR [ecx+0x1a]
  4059ff:	inc    esi
  405a00:	call   0x8470:0x70c23b8a
  405a07:	sbb    eax,esi
  405a09:	loope  0x405a78
  405a0b:	xor    dl,BYTE PTR [ebp+0x4415e5ca]
  405a11:	adc    esi,eax
  405a13:	scas   eax,DWORD PTR es:[edi]
  405a14:	cwde   
  405a15:	pop    edi
  405a16:	aas    
  405a17:	loope  0x40599f
  405a19:	arpl   WORD PTR [esp+ebx*2+0x5edfdcd8],cx
  405a20:	mov    al,0x13
  405a22:	dec    eax
  405a23:	adc    eax,0xb615b570
  405a28:	les    eax,FWORD PTR [edi]
  405a2a:	mov    ds,WORD PTR [edx]
  405a2c:	jb     0x405a1a
  405a2e:	sbb    eax,0x24aa065a
  405a33:	rcl    BYTE PTR [esp+edi*2-0x412c9ae1],0xed
  405a3b:	repz xor eax,0x1fdb5de3
  405a41:	idiv   BYTE PTR [edi-0x2a]
  405a44:	sti    
  405a45:	or     al,0xa6
  405a47:	sar    esp,cl
  405a49:	cmp    BYTE PTR [edi],bl
  405a4b:	dec    ebx
  405a4c:	sar    BYTE PTR ds:0x76ef5c8c,0x14
  405a53:	push   ebx
  405a54:	mov    dl,0x28
  405a56:	pop    es
  405a57:	mov    WORD PTR [edi+edx*4+0x6d],fs
  405a5b:	dec    edx
  405a5c:	adc    eax,0xe96c2297
  405a61:	sbb    DWORD PTR [ecx+0x6494e87d],eax
  405a67:	jmp    0xdb0658f8
  405a6c:	xchg   ecx,eax
  405a6d:	hlt    
  405a6e:	ins    DWORD PTR es:[edi],dx
  405a6f:	cmp    BYTE PTR [ebx-0x2c],0x10
  405a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a74:	cmc    
  405a75:	mov    ds:0xe45b1d36,al
  405a7a:	sbb    ch,BYTE PTR [ebx]
  405a7c:	cmp    BYTE PTR [ebp-0x61],al
  405a7f:	ja     0x405aeb
  405a81:	cmp    ecx,edi
  405a83:	(bad)
  405a86:	test   al,0x86
  405a88:	cmp    al,bh
  405a8a:	or     DWORD PTR [ecx],eax
  405a8c:	xchg   ebp,eax
  405a8d:	mov    al,0x42
  405a8f:	inc    edi
  405a90:	aad    0xfa
  405a92:	fistp  WORD PTR [esp+edi*2+0x240e25e4]
  405a99:	out    dx,al
  405a9a:	test   al,0x8
  405a9c:	ret    0x2191
  405a9f:	cld    
  405aa0:	dec    edx
  405aa1:	(bad)
  405aa5:	imul   edi,DWORD PTR [edx],0xffffff8e
  405aa8:	adc    BYTE PTR [esi-0x4433ac17],bh
  405aae:	pop    esp
  405aaf:	mov    esp,0x56a9a720
  405ab4:	or     al,0x78
  405ab6:	(bad)  
  405ab7:	xchg   edi,eax
  405ab8:	pop    ss
  405ab9:	aas    
  405aba:	imul   ecx,DWORD PTR [ebp-0x161897c],0xf941c1c0
  405ac4:	sbb    eax,0x38a258da
  405ac9:	loop   0x405b09
  405acb:	in     al,dx
  405acc:	inc    esp
  405acd:	jge    0x405adb
  405acf:	inc    edx
  405ad0:	call   0x62acb275
  405ad5:	pushf  
  405ad6:	or     ebp,DWORD PTR [edx-0x2c8b7e5f]
  405adc:	out    dx,eax
  405add:	retf   0xcce3
  405ae0:	sub    ecx,edx
  405ae2:	fdivr  QWORD PTR [ebp-0x3c]
  405ae5:	enter  0xbd,0x80
  405ae9:	dec    ecx
  405aea:	adc    esi,esp
  405aec:	dec    ebp
  405aed:	sahf   
  405aee:	fldenv [ebx]
  405af0:	or     ebx,DWORD PTR [esi]
  405af2:	add    DWORD PTR [edi-0xdb83b18],ecx
  405af8:	jmp    0x8a7f:0x15f407e6
  405aff:	bnd jno 0x405b6a
  405b02:	xchg   DWORD PTR [edx+0x36265971],ecx
  405b08:	jo     0x405afb
  405b0a:	dec    edx
  405b0b:	pop    ebx
  405b0c:	inc    ebx
  405b0d:	mov    dl,0xf3
  405b0f:	inc    ebx
  405b10:	call   0x9d48:0x6883314f
  405b17:	sbb    WORD PTR [ecx],si
  405b1a:	fadd   DWORD PTR [eax-0x3]
  405b1d:	jp     0x405b9c
  405b1f:	imul   esp,DWORD PTR [eax+0x6eba8eb5],0x3
  405b26:	add    esi,DWORD PTR [ebx+0x37c3eb31]
  405b2c:	mov    WORD PTR [eax+eiz*2-0x1a],?
  405b30:	dec    esi
  405b31:	sub    eax,DWORD PTR [ebp-0x492cc312]
  405b37:	jmp    0x405b0f
  405b39:	(bad)  
  405b3b:	(bad)
  405b3f:	xchg   esp,eax
  405b40:	jo     0x405b9a
  405b42:	push   esp
  405b43:	out    0xed,al
  405b45:	pop    ecx
  405b46:	bound  ebx,QWORD PTR [ebx+0x6f]
  405b49:	inc    edx
  405b4a:	mov    eax,0xd4c6b415
  405b4f:	and    ah,0x89
  405b52:	rcr    BYTE PTR [eax-0x4f0c3a88],1
  405b58:	push   es
  405b59:	lock out 0x97,eax
  405b5c:	xor    eax,0xdda326e8
  405b61:	pusha  
  405b62:	call   0xd8bf:0xb68fa76a
  405b69:	mov    dh,0x87
  405b6b:	(bad)  
  405b6c:	ds cwde 
  405b6e:	add    al,0x4f
  405b70:	mov    WORD PTR [edx+edx*4-0x7a6ff149],gs
  405b77:	loope  0x405b71
  405b79:	in     al,dx
  405b7a:	jo     0x405b6a
  405b7c:	sbb    DWORD PTR [ebp-0x17],ebp
  405b7f:	jge    0x405bf6
  405b81:	int3   
  405b82:	pushf  
  405b83:	push   ss
  405b84:	mov    ds:0x1d48fc01,eax
  405b89:	sub    esi,DWORD PTR [ebx+0x6c]
  405b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b8d:	cmp    dh,BYTE PTR gs:[ebx+eax*4+0x1f6b45d8]
  405b95:	cmp    DWORD PTR ds:0xf52df77f,ebx
  405b9b:	retf   0x8b43
  405b9e:	fdiv   QWORD PTR [eax-0x48e5b57c]
  405ba4:	sbb    al,0x67
  405ba6:	ins    BYTE PTR es:[edi],dx
  405ba7:	test   DWORD PTR [esi-0x56],edi
  405baa:	mov    ecx,0xdce280c4
  405baf:	inc    ebp
  405bb0:	sub    ah,BYTE PTR [eax-0x36b0969c]
  405bb6:	scas   al,BYTE PTR es:[edi]
  405bb7:	xchg   edx,eax
  405bb8:	fwait
  405bb9:	mov    ds:0xb4d09773,eax
  405bbe:	dec    edi
  405bbf:	mov    dh,0xbc
  405bc1:	jecxz  0x405bd8
  405bc3:	jl     0x405b8b
  405bc5:	and    DWORD PTR [esi+0x72],0x479472
  405bcc:	mov    dl,0x98
  405bce:	int    0xa2
  405bd0:	ret    
  405bd1:	std    
  405bd2:	xchg   ecx,eax
  405bd3:	outs   dx,DWORD PTR ds:[esi]
  405bd4:	mov    ebx,0xef27e1e7
  405bd9:	(bad)  
  405bda:	repnz adc eax,esp
  405bdd:	gs cmp eax,0x5321428e
  405be3:	sub    cl,BYTE PTR [bp+di]
  405be6:	push   edx
  405be7:	jb     0x405b9d
  405be9:	push   esp
  405bea:	jne    0x405c57
  405bec:	dec    edx
  405bed:	or     al,0x9a
  405bef:	or     esi,DWORD PTR [ebp+0x201c26a1]
  405bf5:	push   eax
  405bf6:	pop    ds
  405bf7:	enter  0xa929,0xe8
  405bfb:	es (bad) 
  405bfd:	jns    0x405c38
  405bff:	sub    eax,0x6e9a08f8
  405c04:	idiv   DWORD PTR [edx]
  405c06:	cmc    
  405c07:	fnsave [edx+esi*2-0x58aabdef]
  405c0e:	outs   dx,DWORD PTR ds:[esi]
  405c0f:	cmp    BYTE PTR [eax-0x38],cl
  405c12:	aad    0xde
  405c14:	or     eax,0x8b630026
  405c19:	and    esp,DWORD PTR [ebx+0x7d]
  405c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c1d:	mov    DWORD PTR [edx-0x2d],0x6ad67977
  405c24:	xor    ebx,esp
  405c26:	loopne 0x405bca
  405c28:	out    dx,eax
  405c29:	not    BYTE PTR [edi]
  405c2b:	cmp    al,0xbb
  405c2d:	mov    dl,0x8e
  405c2f:	pop    ebx
  405c30:	test   al,0x59
  405c32:	mov    eax,ds:0x7314ed46
  405c37:	xchg   ecx,eax
  405c38:	mov    ds:0xab5efd2b,al
  405c3d:	lods   eax,DWORD PTR ss:[esi]
  405c3f:	cwde   
  405c40:	jmp    0x34a6:0xfb81b435
  405c47:	jnp    0x405c12
  405c49:	(bad)  
  405c4a:	jl     0x405c4c
  405c4c:	xor    ecx,DWORD PTR [edx]
  405c4e:	add    al,0x5d
  405c50:	mov    edx,DWORD PTR [edi+0x2]
  405c53:	sbb    edi,DWORD PTR [edx]
  405c55:	dec    ebx
  405c56:	jmp    0x405c47
  405c58:	jo     0x405ca0
  405c5a:	inc    esi
  405c5b:	imul   edx,edx,0x5a
  405c5e:	cmp    eax,DWORD PTR [edx-0x3aa610d3]
  405c64:	(bad)  
  405c66:	gs push eax
  405c68:	jne    0x405bea
  405c6a:	dec    edx
  405c6b:	(bad)  
  405c6c:	sbb    cl,BYTE PTR [eax+0x7712fb21]
  405c72:	ret    
  405c73:	lds    edx,FWORD PTR [ebx+0x7]
  405c76:	and    al,0x8a
  405c78:	jnp    0x405ce2
  405c7a:	pop    ss
  405c7b:	sbb    dh,ah
  405c7d:	push   es
  405c7e:	mov    ecx,0x1a7b76df
  405c83:	pop    ds
  405c84:	hlt    
  405c85:	(bad)  
  405c86:	dec    esi
  405c87:	or     bl,BYTE PTR [si]
  405c8a:	std    
  405c8b:	and    ecx,esi
  405c8d:	lock push edi
  405c8f:	xchg   ebp,eax
  405c90:	aam    0xa5
  405c92:	push   0xffffff9e
  405c94:	adc    ah,dl
  405c96:	les    esi,FWORD PTR [eax]
  405c98:	pop    esi
  405c99:	hlt    
  405c9a:	and    ebp,ecx
  405c9c:	enter  0x19f4,0x2d
  405ca0:	sbb    BYTE PTR [ecx+eiz*4+0x2cc54742],ah
  405ca7:	aaa    
  405ca8:	or     BYTE PTR [esi],0x48
  405cab:	xchg   esp,eax
  405cac:	mov    ah,0xe0
  405cae:	jbe    0x405c4d
  405cb0:	les    edi,FWORD PTR [edi-0x1b]
  405cb3:	(bad)  
  405cb4:	aad    0xb9
  405cb6:	cs jg  0x405c78
  405cb9:	sbb    BYTE PTR [eax+0x30e0eac5],al
  405cbf:	mov    eax,0xa5351295
  405cc4:	jmp    0xb87f:0xc6f76ea3
  405ccb:	outs   dx,BYTE PTR ds:[esi]
  405ccc:	mov    ds:0xed7c4f57,al
  405cd1:	(bad)  
  405cd2:	push   ds
  405cd3:	ins    DWORD PTR es:[edi],dx
  405cd4:	sub    esp,DWORD PTR [ebx-0x3961f44a]
  405cda:	mov    al,ds:0x97369d6d
  405cdf:	mov    ch,0x85
  405ce1:	and    al,0xd2
  405ce3:	sub    BYTE PTR [ebp-0x3f],ah
  405ce6:	mov    BYTE PTR ds:0xae887de0,bl
  405cec:	js     0x405c73
  405cee:	dec    esp
  405cef:	div    BYTE PTR [eax+eiz*8]
  405cf2:	repnz dec edx
  405cf4:	jne    0x405d5a
  405cf6:	add    BYTE PTR [eax],ch
  405cf8:	push   eax
  405cf9:	icebp  
  405cfa:	out    dx,eax
  405cfb:	lods   eax,DWORD PTR ds:[esi]
  405cfc:	test   WORD PTR [ebx],sp
  405cff:	lea    ebx,[esi]
  405d01:	loopne 0x405cce
  405d03:	mov    ecx,0x9a5c3c11
  405d08:	inc    ebp
  405d09:	test   eax,0x485f5cb4
  405d0e:	jp     0x405d0f
  405d10:	fld    TBYTE PTR cs:[ecx]
  405d13:	enter  0x245a,0xe6
  405d17:	mov    bh,0x76
  405d19:	mov    al,BYTE PTR [edx+0x5b]
  405d1c:	shl    BYTE PTR [esi-0x4f],0x86
  405d20:	or     ebx,DWORD PTR [ebp+0x44]
  405d23:	pop    eax
  405d24:	pop    ebp
  405d25:	sub    BYTE PTR [ecx],0xa9
  405d28:	rcl    ecx,1
  405d2a:	xchg   ebp,eax
  405d2b:	cs (bad) 
  405d2d:	in     eax,dx
  405d2e:	push   es
  405d2f:	lods   al,BYTE PTR ds:[esi]
  405d30:	xor    esp,ebx
  405d32:	loopne 0x405cb7
  405d34:	shl    BYTE PTR [ecx],0xf4
  405d37:	loopne 0x405da9
  405d39:	test   DWORD PTR [esi-0x1c882f76],edx
  405d3f:	(bad)  
  405d40:	add    DWORD PTR [ebp+0x59f26f6f],esp
  405d46:	dec    ebx
  405d47:	mov    dl,0x14
  405d49:	dec    ebx
  405d4a:	sub    eax,0xc820fd66
  405d4f:	(bad)  
  405d50:	push   ss
  405d51:	inc    esp
  405d52:	out    dx,al
  405d53:	hlt    
  405d54:	jle    0x405d64
  405d56:	aaa    
  405d57:	shr    DWORD PTR [esi-0x252ea181],cl
  405d5d:	les    ebx,FWORD PTR [esi+0x61e0a276]
  405d63:	ret    0xe754
  405d66:	pop    edx
  405d67:	pop    eax
  405d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d69:	loopne 0x405dda
  405d6b:	retf   
  405d6c:	popa   
  405d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d6e:	cmp    BYTE PTR [ecx+0x3b],ch
  405d71:	mov    esi,esp
  405d73:	les    esp,FWORD PTR [eax-0x45]
  405d76:	imul   bx,di,0x7ef7
  405d7b:	xor    DWORD PTR [esp+ebx*8+0x49],ebx
  405d7f:	stos   BYTE PTR es:[edi],al
  405d80:	aas    
  405d81:	adc    eax,0x6a8b660e
  405d86:	ds sub eax,0xb614ff0f
  405d8c:	rol    BYTE PTR [ebx-0x32af35c5],cl
  405d92:	popf   
  405d93:	lahf   
  405d94:	js     0x405de5
  405d96:	and    edi,DWORD PTR ds:0x7a77d24
  405d9c:	jp     0x405d54
  405d9e:	or     al,0xe9
  405da0:	(bad)  
  405da1:	fimul  WORD PTR [eax-0x55]
  405da4:	mov    ds:0xe1286f18,al
  405da9:	mov    WORD PTR [edx+0x2fdf2e95],ss
  405daf:	stos   DWORD PTR es:[edi],eax
  405db0:	mov    ch,0x95
  405db2:	mov    BYTE PTR [eax-0x672e8788],0xb8
  405db9:	dec    edi
  405dba:	in     eax,0xb4
  405dbc:	sub    ebx,DWORD PTR [ebx-0x48]
  405dbf:	imul   ebx,DWORD PTR [edi+0x156a43d9],0x42
  405dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dc7:	xor    esp,ecx
  405dc9:	sub    BYTE PTR [edx+0x3c2b5256],0x2b
  405dd0:	stos   BYTE PTR es:[edi],al
  405dd1:	push   ebx
  405dd2:	xchg   edi,eax
  405dd3:	mov    eax,ds:0x75049f02
  405dd8:	test   al,0xa3
  405dda:	hlt    
  405ddb:	stc    
  405ddc:	sub    DWORD PTR [eax-0x6d01fab0],ebx
  405de2:	and    edx,DWORD PTR [esi]
  405de4:	lock cmp BYTE PTR [edi-0x43],ah
  405de8:	inc    esp
  405de9:	jbe    0x405dec
  405deb:	add    al,0x62
  405ded:	inc    esi
  405dee:	jl     0x405e51
  405df0:	fucomp st(4)
  405df2:	or     al,0x10
  405df4:	stos   DWORD PTR es:[edi],eax
  405df5:	bound  ebx,QWORD PTR [eax+0x62c38b7a]
  405dfb:	rcl    BYTE PTR [edi-0xd0985b8],cl
  405e01:	stos   DWORD PTR es:[edi],eax
  405e02:	(bad)  
  405e03:	imul   ebp
  405e05:	popa   
  405e06:	mov    ds:0x988003cd,al
  405e0b:	in     al,0x15
  405e0d:	in     al,0x46
  405e0f:	les    edx,FWORD PTR [ecx+esi*2]
  405e12:	data16 lahf 
  405e14:	(bad)  
  405e16:	xor    cl,BYTE PTR [edi+eiz*8-0x4d]
  405e1a:	repz push ss
  405e1c:	xor    DWORD PTR [edi],edx
  405e1e:	cmp    BYTE PTR [eax-0x161b41b3],cl
  405e24:	dec    esp
  405e25:	sub    BYTE PTR [ebp-0x63],dl
  405e28:	mov    dh,bh
  405e2a:	fsincos 
  405e2c:	push   esp
  405e2d:	jb     0x405e65
  405e2f:	ds sub eax,0xe557d500
  405e35:	xchg   esp,eax
  405e36:	cmp    cl,BYTE PTR [ebx-0x78]
  405e39:	cwde   
  405e3a:	dec    BYTE PTR [ebx-0x14e00271]
  405e40:	xchg   ebp,eax
  405e41:	stos   DWORD PTR es:[edi],eax
  405e42:	push   0xffffffa1
  405e44:	ss adc al,0xf
  405e47:	into   
  405e48:	iret   
  405e49:	inc    ecx
  405e4a:	icebp  
  405e4b:	fsubr  DWORD PTR [eax]
  405e4d:	or     al,0x72
  405e4f:	dec    esi
  405e50:	fcom   QWORD PTR [ebx-0x52]
  405e53:	dec    ebx
  405e54:	fisttp WORD PTR [edx]
  405e56:	repz out 0xbe,al
  405e59:	ins    BYTE PTR es:[edi],dx
  405e5a:	aas    
  405e5b:	add    edi,edi
  405e5d:	nop
  405e5e:	dec    ebx
  405e5f:	mov    ch,0x26
  405e61:	jp     0x405ea7
  405e63:	in     eax,dx
  405e64:	mov    ebx,DWORD PTR [ecx+0x4cda2a33]
  405e6a:	ret    
  405e6b:	arpl   WORD PTR [ebx],bx
  405e6d:	aaa    
  405e6e:	add    al,0x54
  405e70:	jp     0x405eef
  405e72:	ja     0x405eb1
  405e74:	in     eax,dx
  405e75:	adc    eax,0x33c051ab
  405e7a:	pop    ss
  405e7b:	mov    esi,DWORD PTR [esi+0x52]
  405e7e:	lds    eax,FWORD PTR [ecx+0x1b]
  405e81:	jl     0x405e40
  405e83:	(bad)  
  405e84:	dec    ebp
  405e85:	cmp    ch,ah
  405e87:	pop    ds
  405e88:	loope  0x405e1f
  405e8a:	fstp   DWORD PTR [ebx+0x5f3c60c8]
  405e90:	jae    0x405efb
  405e92:	xchg   edi,eax
  405e93:	retf   
  405e94:	push   ds
  405e95:	pop    ss
  405e96:	jb     0x405edb
  405e98:	in     eax,0x22
  405e9a:	out    dx,al
  405e9b:	fstp   QWORD PTR [edi-0x7]
  405e9e:	icebp  
  405e9f:	jle    0x405ea9
  405ea1:	shl    DWORD PTR [esi-0x1145fb2c],cl
  405ea7:	inc    edi
  405ea8:	xchg   edi,eax
  405ea9:	sub    ch,cl
  405eab:	or     esi,DWORD PTR [edx-0x7e]
  405eae:	fucomp st(7)
  405eb0:	jne    0x405e9e
  405eb2:	add    DWORD PTR [edi+0x52edc95a],edi
  405eb8:	inc    esp
  405eb9:	cmp    al,0x38
  405ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ebc:	xor    al,0x60
  405ebe:	and    ebp,ebp
  405ec0:	into   
  405ec1:	imul   edx,DWORD PTR [ebp+0x51b67462],0xffffff93
  405ec8:	mov    cl,BYTE PTR [edx]
  405eca:	dec    ebp
  405ecc:	cwde   
  405ecd:	jne    0x405e9d
  405ecf:	sub    al,0x3b
  405ed1:	fmul   st,st(2)
  405ed3:	inc    ecx
  405ed4:	and    eax,0x453649e7
  405ed9:	inc    eax
  405eda:	and    eax,0xd715a5af
  405edf:	fistp  DWORD PTR ds:0xce2be6d9
  405ee5:	test   ebp,ecx
  405ee7:	xchg   edi,eax
  405ee8:	idiv   DWORD PTR [edi+0x3c]
  405eeb:	jbe    0x405f22
  405eed:	lods   al,BYTE PTR ds:[esi]
  405eee:	or     dh,BYTE PTR [esp+esi*4-0x2a]
  405ef2:	pop    esp
  405ef3:	dec    esi
  405ef4:	daa    
  405ef5:	int3   
  405ef6:	push   ecx
  405ef7:	mov    esi,0xa3869695
  405efc:	fcomp  QWORD PTR [ebp+0x35]
  405eff:	dec    eax
  405f00:	inc    esp
  405f01:	iret   
  405f02:	xchg   edx,eax
  405f03:	adc    al,0x51
  405f05:	jg     0x405f70
  405f07:	ds jno 0x405ea9
  405f0a:	xchg   ecx,eax
  405f0b:	push   0x22
  405f0d:	sbb    esp,ecx
  405f0f:	push   ss
  405f10:	bound  esi,QWORD PTR [eax+0x6a]
  405f13:	lds    ecx,FWORD PTR [eax+0x7e]
  405f16:	in     al,0x37
  405f18:	push   ds
  405f19:	jno    0x405ea8
  405f1b:	stc    
  405f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f1d:	int3   
  405f1e:	fisub  WORD PTR [edi-0x13]
  405f21:	(bad)  
  405f22:	sub    ebp,edx
  405f24:	fisub  DWORD PTR [edi-0x5]
  405f27:	sar    ebp,0xfa
  405f2a:	sbb    BYTE PTR [edx-0x6b7a136c],dh
  405f30:	pop    ss
  405f31:	mov    al,0x2b
  405f33:	scas   al,BYTE PTR es:[edi]
  405f34:	sbb    al,0x7
  405f36:	popa   
  405f37:	je     0x405ed5
  405f39:	and    DWORD PTR [ebx+0x41],esi
  405f3c:	add    ch,BYTE PTR [esi]
  405f3e:	jo     0x405f5b
  405f40:	adc    ah,BYTE PTR [edi-0x3ae1eaf1]
  405f46:	pop    edx
  405f47:	xor    al,0xf4
  405f49:	push   ds
  405f4a:	ins    BYTE PTR es:[edi],dx
  405f4b:	push   cs
  405f4c:	push   edx
  405f4d:	jno    0x405f8a
  405f4f:	inc    esp
  405f50:	test   DWORD PTR ds:0xd3b6d4c8,esi
  405f56:	mov    eax,ds:0x8225e9d
  405f5b:	xor    DWORD PTR es:[ecx+0x16],eax
  405f5f:	rcr    BYTE PTR [eax+0x65cae338],1
  405f65:	jecxz  0x405eec
  405f67:	push   ebx
  405f68:	lahf   
  405f69:	and    ah,bl
  405f6b:	jns    0x405fc3
  405f6d:	jp     0x405fb6
  405f6f:	scas   eax,DWORD PTR es:[edi]
  405f70:	cmp    eax,DWORD PTR [eax+0x273a9778]
  405f76:	push   0x403f951b
  405f7b:	or     eax,0xb91968e4
  405f80:	loopne 0x405f7a
  405f82:	inc    eax
  405f83:	sbb    eax,0x3d4ac3d9
  405f88:	xor    esp,DWORD PTR [ebx-0x5f81a1b]
  405f8e:	jmp    0x87cb:0x760b942f
  405f95:	dec    esp
  405f96:	pusha  
  405f97:	lods   eax,DWORD PTR ds:[esi]
  405f98:	sbb    BYTE PTR [ebx-0x5392b7af],al
  405f9e:	mov    eax,ds:0x886290ab
  405fa3:	mov    bl,0xf7
  405fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa6:	sbb    dl,BYTE PTR [edx+0x6921c969]
  405fac:	iret   
  405fad:	and    DWORD PTR [ebx+0x2b626b09],edx
  405fb3:	std    
  405fb4:	xor    al,0x80
  405fb6:	loope  0x405fc0
  405fb8:	in     al,dx
  405fb9:	pop    ds
  405fba:	adc    bl,BYTE PTR fs:[eax+0x1b5ed113]
  405fc1:	mov    ds:0xb800f628,eax
  405fc6:	fld    DWORD PTR [edx+0x6f26a192]
  405fcc:	ins    DWORD PTR es:[edi],dx
  405fcd:	daa    
  405fce:	dec    edx
  405fcf:	mov    bl,0x78
  405fd1:	jae    0x405f62
  405fd3:	imul   esi,DWORD PTR [edi],0x7477d3fc
  405fd9:	int3   
  405fda:	mov    ebp,0x1a024220
  405fdf:	fbstp  TBYTE PTR [eax-0x1c0e67e2]
  405fe5:	add    esp,esi
  405fe7:	mov    dl,0x33
  405fe9:	rcr    BYTE PTR [ebx],1
  405feb:	jmp    0xfa858c17
  405ff0:	(bad)  
  405ff2:	jnp    0x405f7a
  405ff4:	dec    eax
  405ff5:	inc    eax
  405ff6:	sub    BYTE PTR ds:0xb73700d1,bl
  405ffc:	push   ebp
  405ffd:	in     eax,dx
  405ffe:	mov    DWORD PTR [esi-0x25],ebx
  406001:	xchg   esp,eax
  406002:	pop    ecx
  406003:	mov    ds:0x49a86178,al
  406008:	stc    
  406009:	ror    BYTE PTR [esi+0x23],1
  40600c:	pushf  
  40600d:	add    BYTE PTR ds:0xf8ad02ff,dh
  406013:	add    cl,BYTE PTR [edi+0x62]
  406016:	jnp    0x406093
  406018:	cmp    ebx,ebp
  40601a:	fisttp WORD PTR [ecx]
  40601c:	and    cl,BYTE PTR [edi+eax*1]
  40601f:	dec    ecx
  406020:	push   edi
  406021:	ins    BYTE PTR es:[edi],dx
  406022:	test   al,0x3e
  406024:	mov    bl,0xe2
  406026:	scas   al,BYTE PTR es:[edi]
  406027:	inc    edi
  406028:	add    ah,0x3e
  40602b:	nop
  40602c:	jne    0x40603a
  40602e:	mov    bh,cl
  406030:	jmp    0xb0ec:0xc54d0b41
  406037:	pop    edi
  406038:	xchg   ebx,eax
  406039:	xor    eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	mov    esp,eax
  40615e:	lahf   
  40615f:	scas   eax,DWORD PTR es:[edi]
  406160:	pop    ebx
  406161:	cmp    BYTE PTR [ebx-0x7ca3107d],al
  406167:	sub    DWORD PTR [esi],0xffffffab
  40616a:	lea    eax,[esi+edx*4-0x18217e15]
  406171:	inc    esi
  406172:	pop    es
  406173:	jle    0x406174
  406175:	test   al,0xcc
  406177:	jp     0x406143
  406179:	bound  esi,QWORD PTR [ecx-0x799c87da]
  40617f:	aad    0xfc
  406181:	push   es
  406182:	ins    BYTE PTR es:[edi],dx
  406183:	push   ebx
  406184:	sbb    ebp,0x62
  406187:	adc    bh,BYTE PTR [esi]
  406189:	adc    bh,BYTE PTR [esi+0x54f2d1c5]
  40618f:	pop    eax
  406190:	adc    dh,BYTE PTR [eax-0x7419a4e]
  406196:	lds    esp,FWORD PTR [esi+0x1e3110ce]
  40619c:	push   0x8682d574
  4061a1:	outs   dx,BYTE PTR gs:[esi]
  4061a3:	and    BYTE PTR [esi-0x2c1af318],cl
  4061a9:	jno    0x4061dd
  4061ab:	jne    0x406173
  4061ad:	mov    al,BYTE PTR [ecx-0x3c]
  4061b0:	les    edx,FWORD PTR [ebp-0x13483df1]
  4061b6:	clc    
  4061b7:	retf   
  4061b8:	lea    edx,[ebx+edi*1]
  4061bb:	(bad)  
  4061bc:	scas   al,BYTE PTR es:[edi]
  4061bd:	ins    DWORD PTR es:[edi],dx
  4061be:	loop   0x406177
  4061c0:	and    dh,BYTE PTR ds:0xbd45762
  4061c6:	mov    dh,0x14
  4061c8:	je     0x40622f
  4061ca:	pop    esp
  4061cb:	pop    esi
  4061cc:	stos   DWORD PTR es:[edi],eax
  4061cd:	push   ecx
  4061ce:	inc    BYTE PTR [ecx+0x3e]
  4061d1:	or     edi,edx
  4061d3:	cmp    edx,DWORD PTR [esi+ebx*1]
  4061d6:	mov    esi,0x2114986d
  4061db:	push   0xcf5417f4
  4061e0:	adc    edx,DWORD PTR [edx+ebp*8+0x6f]
  4061e4:	cmp    BYTE PTR [esi+0x5d],bh
  4061e7:	inc    ebx
  4061e8:	cmp    ch,BYTE PTR [ecx-0x331332f]
  4061ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ef:	int3   
  4061f0:	mov    edi,0xed870d58
  4061f5:	sbb    eax,0x68f6a44
  4061fa:	cld    
  4061fb:	adc    BYTE PTR [esi-0x10],cl
  4061fe:	lds    edi,FWORD PTR [esi+esi*8]
  406201:	popf   
  406202:	aam    0x61
  406204:	push   esi
  406205:	cld    
  406206:	push   ss
  406207:	cmp    DWORD PTR [esi-0x6f],eax
  40620a:	jae    0x406220
  40620c:	inc    esp
  40620d:	pushf  
  40620e:	call   0xd223:0xcb4cccf8
  406215:	and    BYTE PTR [ecx],al
  406217:	ss sahf 
  406219:	scas   eax,DWORD PTR es:[edi]
  40621a:	leave  
  40621b:	xor    esp,eax
  40621d:	xchg   edx,eax
  40621e:	outs   dx,BYTE PTR ds:[esi]
  40621f:	mov    dh,0x6f
  406221:	mov    eax,DWORD PTR [edi-0x60]
  406224:	call   0x20d5:0x287f1629
  40622b:	ret    
  40622c:	pop    ebx
  40622d:	dec    ebp
  40622e:	pop    esi
  40622f:	mov    eax,ds:0xbe595cce
  406234:	cwde   
  406235:	retf   
  406236:	jmp    0x947c1ffa
  40623b:	or     al,0xa8
  40623d:	js     0x4061cc
  40623f:	mov    esi,DWORD PTR [edx-0x62bce82b]
  406245:	adc    BYTE PTR [ebp-0x10],bl
  406248:	enter  0xa32c,0x35
  40624c:	imul   esp,DWORD PTR [ebp+0x50],0x9
  406250:	rcl    DWORD PTR [edi+edx*1+0x35],cl
  406254:	outs   dx,DWORD PTR ds:[esi]
  406255:	nop
  406256:	mov    esi,0x499080fb
  40625b:	mov    ecx,0xf9504745
  406260:	or     DWORD PTR [edi],esi
  406262:	jne    0x406227
  406264:	es xchg esp,eax
  406266:	add    DWORD PTR [ecx],edx
  406268:	cmc    
  406269:	int    0x8e
  40626b:	push   cs
  40626c:	sub    eax,0x3e7bdbdd
  406271:	mov    ah,0xe8
  406273:	mov    WORD PTR [edi+0x37],ds
  406276:	xchg   edi,eax
  406277:	adc    al,0x29
  406279:	mov    ebp,0x9cf2759d
  40627e:	add    al,0xd8
  406280:	iret   
  406281:	iret   
  406282:	test   BYTE PTR [edx],0xbf
  406285:	aaa    
  406286:	(bad)  
  406287:	imul   eax,DWORD PTR [edx-0x1ed69cbc],0xffffff9f
  40628e:	and    BYTE PTR [ebx-0x2],bl
  406291:	dec    esp
  406292:	jno    0x4062d7
  406294:	pushf  
  406295:	add    DWORD PTR [ebx],esi
  406297:	dec    esi
  406298:	cdq    
  406299:	push   edx
  40629a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40629b:	or     BYTE PTR [eax],0x2c
  40629e:	add    ecx,edi
  4062a0:	adc    bl,BYTE PTR [ebx-0x8]
  4062a3:	add    BYTE PTR [edx],bh
  4062a5:	mov    dh,0x4d
  4062a7:	js     0x40622a
  4062a9:	dec    edi
  4062aa:	enter  0xafcd,0xdd
  4062ae:	push   0xffffffeb
  4062b0:	loop   0x4062d0
  4062b2:	cmp    eax,0x258464db
  4062b7:	shr    dh,cl
  4062b9:	adc    eax,0xbb3fd89f
  4062be:	xchg   edx,eax
  4062bf:	mov    BYTE PTR [esi-0x3],0xa9
  4062c3:	cmp    DWORD PTR [edi-0x7d],edi
  4062c6:	rep stos BYTE PTR es:[edi],al
  4062c8:	out    dx,eax
  4062c9:	jg     0x4062eb
  4062cb:	mov    al,0x1b
  4062cd:	dec    ebx
  4062ce:	or     dh,BYTE PTR [ecx+0xcaa1a3d]
  4062d4:	and    DWORD PTR ds:0x7f2899f6,ecx
  4062da:	xchg   esi,eax
  4062db:	in     eax,0xde
  4062dd:	std    
  4062de:	cwde   
  4062df:	mov    bh,0xfd
  4062e1:	jle    0x406263
  4062e3:	js     0x4062ab
  4062e5:	fstp   QWORD PTR [ebx]
  4062e7:	repz clc 
  4062e9:	mov    bl,0xdd
  4062eb:	imul   esi,DWORD PTR [ecx+0xcd567bb],0xffffffaf
  4062f2:	loope  0x406289
  4062f4:	gs iret 
  4062f6:	sbb    ecx,DWORD PTR [esi]
  4062f8:	sub    eax,0x460b2a06
  4062fd:	std    
  4062fe:	fcmovnb st,st(0)
  406300:	pop    ebx
  406301:	je     0x4062dc
  406303:	xchg   ebx,eax
  406304:	jge    0x40630e
  406306:	jge    0x406349
  406308:	inc    edx
  406309:	and    eax,0x99b6d23a
  40630e:	push   edx
  40630f:	inc    edx
  406310:	sub    al,0x69
  406312:	lods   eax,DWORD PTR ds:[esi]
  406313:	outs   dx,BYTE PTR ds:[esi]
  406314:	mov    eax,0xc12db7a7
  406319:	(bad)  
  40631a:	mov    bl,0x98
  40631c:	daa    
  40631d:	nop
  40631e:	xchg   ebp,eax
  40631f:	test   al,0x25
  406321:	cld    
  406322:	mov    cl,0x6a
  406324:	bound  ecx,QWORD PTR [eax+0x192a8ce6]
  40632a:	or     cl,BYTE PTR [ebx]
  40632c:	nop
  40632d:	sub    bh,dl
  40632f:	add    eax,0xec67a1a3
  406334:	jl     0x406362
  406336:	cmp    BYTE PTR [edx+0x2a],cl
  406339:	scas   al,BYTE PTR es:[edi]
  40633a:	add    eax,0x7b444d5d
  40633f:	push   ebp
  406340:	adc    al,0xdf
  406342:	mov    ecx,0x86a3ad41
  406347:	idiv   BYTE PTR [ebx]
  406349:	mov    esp,0x4832cf08
  40634e:	inc    esi
  40634f:	test   al,0x9
  406351:	jl     0x406328
  406353:	add    BYTE PTR [ebp+0x50],dh
  406356:	xchg   edx,eax
  406357:	aas    
  406358:	xchg   ecx,edx
  40635a:	jno    0x4063c5
  40635c:	outs   dx,DWORD PTR ds:[esi]
  40635d:	push   cs
  40635e:	retf   0x95db
  406361:	inc    ecx
  406362:	lea    esp,[eax]
  406364:	xor    BYTE PTR [esp+ebp*1],0xa8
  406368:	mov    ecx,0xc2cadb4e
  40636d:	in     al,0x31
  40636f:	ins    DWORD PTR es:[edi],dx
  406370:	adc    DWORD PTR [eax-0x8],ebx
  406373:	add    eax,0x38dbae03
  406378:	mov    ch,0xda
  40637a:	push   esp
  40637b:	fisub  DWORD PTR [eax]
  40637d:	retf   0x18
  406380:	push   ecx
  406381:	xor    al,0xdc
  406383:	into   
  406384:	jbe    0x4063c9
  406386:	add    DWORD PTR [ecx],edx
  406388:	sar    BYTE PTR [ecx-0x2],1
  40638b:	dec    eax
  40638c:	fs test al,0x5f
  40638f:	mov    bh,0x38
  406391:	cmp    ch,cl
  406393:	leave  
  406394:	sub    bl,BYTE PTR [ecx]
  406396:	rcr    DWORD PTR [edx-0xb],cl
  406399:	inc    esp
  40639a:	imul   esi,DWORD PTR [eax-0x7edc5559],0x61
  4063a1:	sbb    eax,0xe9129a88
  4063a6:	fisub  WORD PTR [ebx-0x57]
  4063a9:	xor    eax,0x36ea2753
  4063ae:	pop    esp
  4063af:	cmp    DWORD PTR [eax],0xffffffd5
  4063b2:	pop    eax
  4063b3:	fwait
  4063b4:	bound  esi,QWORD PTR [esi+0x36437a3]
  4063ba:	rol    cl,cl
  4063bc:	lods   eax,DWORD PTR ds:[esi]
  4063bd:	frstor ss:[esi-0x2c4868dd]
  4063c4:	(bad)  
  4063c5:	pop    eax
  4063c6:	shr    edi,0x19
  4063c9:	dec    ebx
  4063ca:	stos   DWORD PTR es:[edi],eax
  4063cb:	(bad)  [ecx+0x5b]
  4063ce:	push   es
  4063cf:	sbb    al,al
  4063d1:	or     al,0x1d
  4063d3:	or     eax,0xaab7e34d
  4063d8:	popf   
  4063d9:	and    dl,bh
  4063db:	mov    DWORD PTR [ebx],esp
  4063dd:	je     0x406394
  4063df:	jnp    0x4063d0
  4063e1:	xor    DWORD PTR [ebx+0x21],0x897effdc
  4063e8:	sub    BYTE PTR [eax-0x656eb58],dl
  4063ee:	(bad)  
  4063f0:	into   
  4063f1:	pop    ebp
  4063f2:	js     0x406449
  4063f4:	lock mov dh,0x90
  4063f7:	dec    esp
  4063f8:	(bad)  
  4063f9:	sbb    eax,0xc78f5236
  4063fe:	ds push esi
  406400:	scas   al,BYTE PTR es:[edi]
  406401:	xchg   ch,ah
  406403:	dec    edi
  406404:	sti    
  406405:	jmp    0x40642b
  406407:	rcr    DWORD PTR [ebx+ecx*2-0x57950d62],cl
  40640e:	scas   eax,DWORD PTR es:[edi]
  40640f:	sbb    ebp,edi
  406411:	out    dx,al
  406412:	clc    
  406413:	imul   edx,DWORD PTR [eax-0x52a0c255],0xffffffc2
  40641a:	pop    esp
  40641b:	adc    ch,BYTE PTR [edx]
  40641d:	pop    ebp
  40641e:	out    0x1d,al
  406420:	mov    dh,0xba
  406422:	xchg   edi,eax
  406423:	scas   al,BYTE PTR es:[edi]
  406424:	es mov edx,0x46328475
  40642a:	push   esp
  40642b:	aam    0xa9
  40642d:	iret   
  40642e:	sar    BYTE PTR [edx],cl
  406430:	popa   
  406431:	retf   0xaf6d
  406434:	enter  0xe920,0x2
  406438:	mov    DWORD PTR [ecx-0x6c],edi
  40643b:	imul   dl
  40643d:	mov    WORD PTR [ecx],?
  40643f:	mov    ch,0x6f
  406441:	in     eax,dx
  406442:	cld    
  406443:	clc    
  406444:	retf   0x2ca9
  406447:	outs   dx,DWORD PTR ds:[esi]
  406448:	xchg   edi,eax
  406449:	push   ebp
  40644a:	mov    ah,0x2f
  40644c:	xor    al,0x48
  40644e:	mov    ah,0x5d
  406450:	(bad)  
  406451:	or     eax,0x31ccb227
  406456:	pop    esp
  406457:	or     dh,BYTE PTR [esi+edi*2-0x74]
  40645b:	sbb    eax,0x5d913f6f
  406460:	jmp    DWORD PTR [ebx-0x1b56d6d1]
  406466:	dec    ebp
  406467:	cli    
  406468:	push   ebp
  406469:	retf   
  40646a:	std    
  40646b:	fisub  DWORD PTR [esi]
  40646d:	xchg   edi,eax
  40646e:	sbb    dh,BYTE PTR [ecx]
  406470:	and    eax,0xbd355f86
  406475:	inc    esi
  406476:	jno    0x406463
  406478:	test   eax,0x2914ad92
  40647d:	mov    edi,0xebba353e
  406482:	in     eax,dx
  406483:	call   esi
  406485:	push   ebp
  406486:	int    0x5d
  406488:	xchg   DWORD PTR [ecx],edi
  40648a:	adc    eax,0x8bb2ca25
  40648f:	xchg   esp,eax
  406490:	fiadd  WORD PTR [ebx-0x758612cd]
  406496:	div    BYTE PTR [esi+0x1cb03b90]
  40649c:	push   esi
  40649d:	imul   esi,DWORD PTR ds:0xea25339b,0x3d130167
  4064a7:	popf   
  4064a8:	aaa    
  4064a9:	fcompp 
  4064ab:	fdivp  st(7),st
  4064ad:	inc    ebp
  4064ae:	(bad)  
  4064af:	repnz hlt 
  4064b1:	div    DWORD PTR [edi+0x319f604f]
  4064b7:	lods   al,BYTE PTR ds:[esi]
  4064b8:	xchg   esi,eax
  4064b9:	test   eax,0xd3bb5e2e
  4064be:	and    edi,DWORD PTR [esi+0x7c243c76]
  4064c4:	pop    ecx
  4064c5:	arpl   WORD PTR [ecx+0x72],si
  4064c8:	cwde   
  4064c9:	mov    cl,BYTE PTR [ebp+ecx*1-0x34]
  4064cd:	nop
  4064ce:	adc    BYTE PTR [ebx-0x3b],dh
  4064d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064d2:	or     bh,BYTE PTR [ebx+edx*2]
  4064d5:	jbe    0x406470
  4064d7:	imul   esi,DWORD PTR ss:[eax-0x55],0x237a410b
  4064df:	mov    ds:0xecf3efc4,al
  4064e4:	ja     0x406499
  4064e6:	cld    
  4064e7:	sbb    al,0xb1
  4064e9:	(bad)  
  4064ea:	cmp    BYTE PTR [ebx+0x2d],dl
  4064ed:	sub    edx,DWORD PTR [edi+esi*1-0xa8689c1]
  4064f4:	push   ebx
  4064f5:	sub    bl,al
  4064f7:	jle    0x406550
  4064f9:	sti    
  4064fa:	cmp    BYTE PTR [ecx-0x3c],bl
  4064fd:	les    edx,FWORD PTR [edi]
  4064ff:	or     BYTE PTR [eax-0x72be881c],ah
  406505:	mov    bl,0xaa
  406507:	xchg   ebp,eax
  406508:	or     eax,0x728e080a
  40650d:	mov    ds:0x9bc37802,al
  406512:	xlat   BYTE PTR ds:[ebx]
  406513:	push   ds
  406514:	jo     0x4064f5
  406516:	lods   eax,DWORD PTR ds:[esi]
  406517:	add    BYTE PTR fs:0xe73b5034,0xb0
  40651f:	lea    ebx,[edi-0x644ceb5f]
  406525:	jbe    0x40653f
  406527:	xchg   DWORD PTR [ebx-0x1f],ecx
  40652a:	rcr    BYTE PTR [edi-0x2f],0xa6
  40652e:	jbe    0x40657a
  406530:	bound  ebx,QWORD PTR [ebp-0x13]
  406533:	arpl   WORD PTR [eax+0x7d],di
  406536:	add    DWORD PTR [eax-0x718dd3c3],esi
  40653c:	out    dx,eax
  40653d:	hlt    
  40653e:	pushf  
  40653f:	and    BYTE PTR [esi+0x54880573],cl
  406545:	mov    al,0xdc
  406547:	dec    edi
  406548:	sbb    BYTE PTR [edi+0x763b660],cl
  40654e:	in     al,0xb
  406550:	cmp    al,0x42
  406552:	adc    al,0x71
  406554:	mov    esi,0xd64b0486
  406559:	mov    edi,0x9b54ce73
  40655e:	fwait
  40655f:	ins    DWORD PTR es:[edi],dx
  406560:	call   0xc073:0x5a36a90a
  406567:	jbe    0x4065d7
  406569:	push   ecx
  40656a:	adc    al,0x47
  40656c:	adc    ebx,esi
  40656e:	lea    eax,[ebx-0x3be4cf6f]
  406574:	mov    DWORD PTR [ecx+esi*2+0x162a9d0],esi
  40657b:	ret    0x696e
  40657e:	(bad)  
  40657f:	push   0xffffffa8
  406581:	call   0xf9d4d65a
  406586:	dec    edi
  406587:	outs   dx,BYTE PTR ds:[esi]
  406588:	jle    0x4065d6
  40658a:	stos   DWORD PTR es:[edi],eax
  40658b:	inc    eax
  40658c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658d:	aam    0xdb
  40658f:	mov    ds:0x6e84a954,eax
  406594:	addr16 fcom st(3)
  406597:	loop   0x4065db
  406599:	cmp    DWORD PTR [ebx],ebp
  40659b:	mov    ch,0x70
  40659d:	pop    ecx
  40659e:	outs   dx,DWORD PTR ds:[esi]
  40659f:	pushf  
  4065a0:	dec    edi
  4065a1:	xchg   ebp,eax
  4065a2:	fsub   DWORD PTR [ecx]
  4065a4:	xor    cl,BYTE PTR [ebp+eax*2-0x4b7700c3]
  4065ab:	icebp  
  4065ac:	int    0xfa
  4065ae:	outs   dx,DWORD PTR ds:[esi]
  4065af:	dec    ecx
  4065b0:	and    BYTE PTR [esi-0x28],dh
  4065b3:	add    dl,BYTE PTR [eax+0x24]
  4065b6:	mov    ecx,0xf6eed2be
  4065bb:	push   es
  4065bc:	repz jb 0x40660c
  4065bf:	pop    edx
  4065c0:	sbb    al,0xed
  4065c2:	push   edx
  4065c3:	sbb    ecx,DWORD PTR [esi]
  4065c5:	test   DWORD PTR [ecx-0x5c],esi
  4065c8:	cmp    al,0x36
  4065ca:	and    BYTE PTR [edi-0x1be83d91],dh
  4065d0:	stos   BYTE PTR es:[edi],al
  4065d1:	test   al,0x53
  4065d3:	cmc    
  4065d4:	mov    al,ds:0x82922fcf
  4065d9:	pop    ebp
  4065da:	xor    eax,0xe85a1884
  4065df:	pop    edx
  4065e0:	lds    ebp,FWORD PTR [ebp+0x6f]
  4065e3:	add    bl,bl
  4065e5:	dec    edi
  4065e6:	ret    0xb4aa
  4065e9:	add    ebx,DWORD PTR [ebx+esi*1+0x6d900051]
  4065f0:	jmp    0xb95c5c05
  4065f5:	lahf   
  4065f6:	xchg   BYTE PTR [edi-0x6d],ah
  4065f9:	outs   dx,BYTE PTR ds:[esi]
  4065fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065fb:	push   ebp
  4065fc:	push   esp
  4065fd:	push   DWORD PTR [edx+0x76]
  406600:	sti    
  406601:	jb     0x4065a1
  406603:	xchg   esi,eax
  406604:	or     al,0x7c
  406606:	cmp    BYTE PTR [ebx],ch
  406608:	dec    ebx
  406609:	pop    edi
  40660a:	mov    gs,edx
  40660c:	sti    
  40660d:	pop    ebp
  40660e:	sub    esi,edi
  406610:	arpl   di,bp
  406612:	xchg   ebx,eax
  406613:	leave  
  406614:	xchg   edx,eax
  406615:	inc    edx
  406616:	sub    al,0xf7
  406618:	mov    esi,0x537cc29f
  40661d:	stos   BYTE PTR es:[edi],al
  40661e:	push   ecx
  40661f:	rcl    ah,cl
  406621:	pop    ecx
  406623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406624:	mov    al,0xf5
  406626:	pop    edi
  406627:	data16 jno 0x4065df
  40662a:	sbb    bl,BYTE PTR [edx]
  40662c:	mov    bh,0x98
  40662e:	adc    ch,BYTE PTR [ecx]
  406630:	cwde   
  406631:	gs daa 
  406633:	or     ah,BYTE PTR [esi+0x70a1bac9]
  406639:	mov    ch,0x16
  40663b:	xchg   ecx,eax
  40663c:	fld    QWORD PTR [edi]
  40663e:	mov    ds:0x61d37c66,eax
  406643:	xchg   edx,eax
  406644:	scas   al,BYTE PTR es:[edi]
  406645:	push   ss
  406646:	inc    ebp
  406647:	inc    edi
  406648:	jb     0x4066ab
  40664a:	jae    0x406668
  40664c:	and    eax,0x26f8784
  406651:	wbinvd 
  406653:	aaa    
  406654:	push   0xd
  406656:	ins    DWORD PTR es:[edi],dx
  406657:	mov    ch,0x2e
  406659:	jno    0x406665
  40665b:	sub    BYTE PTR [eax+0x5c],cl
  40665e:	aam    0x5c
  406660:	bound  ebx,QWORD PTR [edi-0x354862f4]
  406666:	mov    dh,0x8b
  406668:	stos   DWORD PTR es:[edi],eax
  406669:	dec    BYTE PTR [ebp+0x2d254a8b]
  40666f:	in     al,dx
  406670:	js     0x4066a4
  406672:	ret    0xfee6
  406675:	dec    esi
  406676:	ins    BYTE PTR es:[edi],dx
  406677:	les    esi,FWORD PTR [eax+0x2f]
  40667a:	pop    ecx
  40667b:	sahf   
  40667c:	sub    BYTE PTR [eax-0x35],ah
  40667f:	sti    
  406680:	sub    al,0x7f
  406682:	popa   
  406683:	rcl    DWORD PTR [edi],1
  406685:	cmp    BYTE PTR [esi-0x14],al
  406688:	mov    esp,0xa17dd926
  40668d:	jo     0x406680
  40668f:	pop    ecx
  406690:	or     DWORD PTR [edi-0xe5bc00f],0x6f
  406697:	lock loop 0x4066a7
  40669a:	ja     0x406687
  40669c:	sbb    al,bh
  40669e:	adc    esi,esi
  4066a0:	mov    edi,0xdde9f5ab
  4066a5:	repz sub BYTE PTR [ebx],al
  4066a8:	mov    dh,0x4e
  4066aa:	cwde   
  4066ab:	mov    ?,WORD PTR [esi-0x7b]
  4066ae:	mov    edx,0x523fb01
  4066b3:	add    eax,edx
  4066b5:	aam    0x44
  4066b7:	mov    edi,0xaf67f82a
  4066bc:	(bad)  
  4066bd:	dec    ecx
  4066be:	push   0x9160e22a
  4066c3:	xchg   edi,eax
  4066c4:	mov    ebx,0x44f5779b
  4066c9:	jo     0x4066b2
  4066cb:	and    bl,BYTE PTR [ebp-0x944eb41]
  4066d1:	cmp    BYTE PTR [edx],dh
  4066d3:	(bad)  
  4066d4:	repz push 0x55
  4066d7:	mov    eax,0xbe07ca1e
  4066dc:	loopne 0x40669e
  4066de:	stos   BYTE PTR es:[edi],al
  4066df:	pop    esi
  4066e0:	es jb  0x40671d
  4066e3:	or     eax,0xc2cd7999
  4066e8:	in     al,dx
  4066e9:	aam    0x8b
  4066eb:	bound  esi,QWORD PTR [edi*2+0x39fa8450]
  4066f2:	les    ebx,FWORD PTR [ebx]
  4066f4:	mov    ecx,DWORD PTR [ebx+0x4b]
  4066f7:	cld    
  4066f8:	xor    ah,0xc6
  4066fb:	mov    bl,0x4c
  4066fd:	inc    ebp
  4066fe:	mov    ah,0x48
  406700:	stos   DWORD PTR es:[edi],eax
  406701:	push   eax
  406702:	sti    
  406703:	and    edx,esp
  406705:	cmp    al,ch
  406707:	jg     0x4066e5
  406709:	inc    ebx
  40670a:	inc    ebx
  40670b:	dec    edi
  40670c:	cmp    al,0x9b
  40670e:	shr    DWORD PTR [edi+0x68],0x69
  406712:	mov    edi,0xf02b3b41
  406717:	add    ch,BYTE PTR cs:[esi+ebp*1-0x6ebf81fb]
  40671f:	xchg   ecx,eax
  406720:	stos   BYTE PTR es:[edi],al
  406721:	jbe    0x406728
  406723:	stos   DWORD PTR es:[edi],eax
  406724:	sbb    eax,0x9aac0c9b
  406729:	ins    DWORD PTR es:[edi],dx
  40672a:	fst    QWORD PTR [ebx+0x297dd30a]
  406730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406731:	pop    ebp
  406732:	cdq    
  406733:	push   esp
  406734:	ins    DWORD PTR es:[edi],dx
  406735:	cs mov ebp,0x6b351ac7
  40673b:	push   edi
  40673c:	jge    0x406764
  40673e:	sub    eax,0x9dd07f8d
  406743:	das    
  406744:	mov    edx,0x451a7436
  406749:	nop
  40674a:	test   eax,0x67e479ce
  40674f:	adc    edx,edx
  406751:	jno    0x406702
  406753:	pusha  
  406754:	not    al
  406756:	sbb    eax,0xd503d858
  40675b:	jnp    0x4066ed
  40675d:	call   0x363498aa
  406762:	mov    al,BYTE PTR [ebp+0x6e1cde9f]
  406768:	xchg   esi,eax
  406769:	jp     0x406737
  40676b:	inc    ebx
  40676c:	jle    0x40671f
  40676e:	push   0x217ed84d
  406773:	adc    BYTE PTR [ecx],bl
  406775:	aas    
  406776:	xor    eax,DWORD PTR [ebx]
  406778:	jmp    0x98ed7077
  40677d:	push   0xd4b8351
  406782:	mov    esp,0x3f1ac0ac
  406787:	xor    bl,cl
  406789:	out    dx,eax
  40678a:	cdq    
  40678b:	mov    eax,0x2f9196e6
  406790:	dec    ebp
  406791:	inc    esi
  406792:	dec    ebp
  406793:	pop    ss
  406794:	outs   dx,DWORD PTR ds:[esi]
  406795:	adc    al,0xab
  406797:	data16 aad 0x58
  40679a:	sti    
  40679b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40679c:	and    bh,bh
  40679e:	imul   eax,DWORD PTR [edi+0x1848e7ce],0xf1d47de7
  4067a8:	(bad)  
  4067a9:	fsubr  DWORD PTR [ecx+0x1937654c]
  4067af:	enter  0x10bf,0x2c
  4067b3:	inc    esp
  4067b4:	dec    edi
  4067b5:	jl     0x406799
  4067b7:	lods   eax,DWORD PTR ds:[esi]
  4067b8:	out    0x4f,al
  4067ba:	cwde   
  4067bb:	(bad)  
  4067bc:	and    ah,BYTE PTR [ebp-0x3898a094]
  4067c2:	inc    ebp
  4067c3:	push   0xba1cee46
  4067c8:	add    al,0xed
  4067ca:	inc    eax
  4067cb:	repnz out dx,eax
  4067cd:	pop    ds
  4067ce:	cld    
  4067cf:	scas   eax,DWORD PTR es:[edi]
  4067d0:	push   ss
  4067d1:	lods   al,BYTE PTR ds:[esi]
  4067d2:	cmc    
  4067d3:	sbb    BYTE PTR ds:[ebx-0x5],cl
  4067d7:	jmp    0x3988:0x4a5786ff
  4067de:	lea    ecx,[ebx]
  4067e0:	dec    ebp
  4067e1:	data16 std 
  4067e3:	(bad)
  4067e6:	lods   al,BYTE PTR ds:[esi]
  4067e7:	xchg   ebp,eax
  4067e8:	mov    ecx,0xbf286e17
  4067ed:	add    al,0x47
  4067ef:	ret    
  4067f0:	ret    0xa267
  4067f3:	mov    eax,ds:0x98f49a8
  4067f8:	daa    
  4067f9:	inc    eax
  4067fa:	jmp    0xf673fa5d
  4067ff:	mov    dh,0xcb
  406801:	xor    al,0xcd
  406803:	cmp    esi,DWORD PTR [esi]
  406805:	jle    0x406858
  406807:	sub    al,0xce
  406809:	scas   al,BYTE PTR es:[edi]
  40680a:	push   esi
  40680b:	xor    DWORD PTR [ecx-0x526aaed2],edx
  406811:	add    al,0xc5
  406813:	push   es
  406814:	loope  0x406870
  406816:	arpl   si,cx
  406818:	push   eax
  406819:	mov    esp,0xa551b704
  40681e:	sub    ah,dl
  406820:	das    
  406821:	mov    ecx,0x2a677f7f
  406826:	fsubrp st(2),st
  406828:	shl    BYTE PTR [eax+0x37],0xdb
  40682c:	push   0xee9f48f9
  406831:	and    eax,0xbfadc6ad
  406836:	fidivr WORD PTR [esi+0x69]
  406839:	lahf   
  40683a:	dec    esi
  40683b:	arpl   WORD PTR [ecx+0xfb4a13d],si
  406841:	and    BYTE PTR [edi-0x11],dl
  406844:	mov    dl,0xe
  406846:	jg     0x406873
  406848:	dec    esp
  406849:	push   eax
  40684a:	push   eax
  40684b:	jle    0x406853
  40684d:	inc    eax
  40684e:	imul   edx,DWORD PTR [eax+0x1a],0x7df67d2a
  406855:	xor    BYTE PTR [ebp+0x1a014a21],al
  40685b:	cmp    dl,BYTE PTR [esi+edi*1]
  40685e:	jne    0x406846
  406860:	sub    esp,DWORD PTR [edi+0x59]
  406863:	sti    
  406864:	out    dx,eax
  406865:	cld    
  406866:	mov    esp,0x370d864f
  40686b:	aam    0x91
  40686d:	cdq    
  40686e:	sbb    eax,0x20cecf0d
  406873:	cmp    BYTE PTR [eax+0x7cdb7944],dh
  406879:	inc    esi
  40687a:	pop    esp
  40687b:	fnsave [esi-0x638e90fb]
  406881:	stc    
  406882:	push   ecx
  406883:	xchg   BYTE PTR [ecx-0x77],dh
  406886:	ret    
  406887:	test   DWORD PTR [edi+0x61],ebx
  40688a:	std    
  40688b:	mov    ah,0x6e
  40688d:	int3   
  40688e:	push   0xffffffd2
  406890:	jecxz  0x4068d4
  406892:	mov    es,WORD PTR [edx+0x50929bdc]
  406898:	mov    al,ds:0x1c84e30b
  40689d:	dec    eax
  40689e:	or     eax,0xc2a903d
  4068a3:	in     eax,0xd1
  4068a5:	and    DWORD PTR [edi-0x51],eax
  4068a8:	sbb    DWORD PTR [edx],edi
  4068aa:	imul   edi,DWORD PTR [edi+0x496d0731],0x37
  4068b1:	int3   
  4068b2:	retf   0xe399
  4068b5:	outs   dx,BYTE PTR ds:[esi]
  4068b6:	jle    0x40687b
  4068b8:	(bad)  
  4068b9:	(bad)  
  4068ba:	xchg   edx,eax
  4068bb:	stc    
  4068bc:	aas    
  4068bd:	adc    al,0x57
  4068bf:	mul    bl
  4068c1:	(bad)  
  4068c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c3:	fist   DWORD PTR [ebx-0x3f]
  4068c6:	fdiv   DWORD PTR [esi-0x1ac56ba2]
  4068cc:	pop    edx
  4068cd:	adc    cl,BYTE PTR [edx+eiz*2-0x79]
  4068d1:	xchg   ecx,eax
  4068d2:	sub    esi,esp
  4068d4:	popf   
  4068d5:	sbb    DWORD PTR [ebx-0x1ba3216b],0x67f1242e
  4068df:	sub    eax,0x380ec27c
  4068e4:	dec    ebx
  4068e5:	jmp    0x406928
  4068e7:	mov    dl,0x39
  4068e9:	jmp    0x4068d7
  4068eb:	fcom   DWORD PTR [ebx-0x115e178c]
  4068f1:	test   eax,0x40b1440f
  4068f6:	xor    ebp,edi
  4068f8:	in     al,dx
  4068f9:	clc    
  4068fa:	test   dh,ch
  4068fc:	inc    edx
  4068fd:	dec    ecx
  4068fe:	aam    0x38
  406900:	mov    ds,WORD PTR [ecx-0x54]
  406903:	out    dx,al
  406904:	mov    esi,DWORD PTR [edi-0x715461cf]
  40690a:	aam    0xe7
  40690c:	arpl   WORD PTR [edx-0x12],di
  40690f:	in     eax,0x58
  406911:	push   0x8bd7c81d
  406916:	lods   eax,DWORD PTR ds:[esi]
  406917:	xor    al,0x3e
  406919:	dec    ebx
  40691a:	dec    bx
  40691c:	xchg   esp,eax
  40691d:	out    0x3c,eax
  40691f:	aaa    
  406920:	jnp    0x4068b4
  406922:	inc    ebx
  406923:	pop    esp
  406924:	cdq    
  406925:	outs   dx,DWORD PTR ds:[esi]
  406926:	push   ebp
  406927:	xchg   edx,eax
  406928:	sub    esp,DWORD PTR [ebp-0x67d9adb9]
  40692e:	sbb    BYTE PTR [edi+0x4c],cl
  406931:	add    BYTE PTR [edx],dh
  406933:	pop    eax
  406934:	(bad)  
  406935:	cmc    
  406936:	adc    al,0xf7
  406938:	inc    ebx
  406939:	mov    esi,edi
  40693b:	das    
  40693c:	enter  0x4005,0xe3
  406940:	jmp    0x1046:0x73232b3e
  406947:	loopne 0x406903
  406949:	pop    esi
  40694a:	and    DWORD PTR [esi],esp
  40694c:	cmp    eax,0xe4dd626e
  406951:	fistp  WORD PTR [ecx+edi*1]
  406954:	sub    ebp,esp
  406956:	pavgb  mm5,QWORD PTR [ecx]
  406959:	into   
  40695a:	inc    ebx
  40695c:	in     eax,dx
  40695d:	mov    esp,0x3b517715
  406962:	and    edi,edi
  406964:	sub    al,0x29
  406966:	xlat   BYTE PTR ds:[ebx]
  406967:	xlat   BYTE PTR ds:[ebx]
  406968:	fwait
  406969:	pusha  
  40696a:	dec    esp
  40696b:	popf   
  40696c:	loopne 0x4068fc
  40696e:	dec    ecx
  40696f:	push   0xffffffb3
  406971:	xor    BYTE PTR [eax+0x32],bl
  406974:	std    
  406975:	dec    esp
  406976:	cld    
  406977:	push   ebx
  406978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406979:	mov    gs,WORD PTR [ecx+ebp*8]
  40697c:	int    0xae
  40697e:	scas   eax,DWORD PTR es:[edi]
  40697f:	pop    ecx
  406980:	dec    esi
  406981:	dec    ebp
  406982:	or     al,0x3e
  406984:	mov    ebp,0xa8e9696
  406989:	xchg   bh,bh
  40698b:	test   eax,0xb4ab0189
  406990:	dec    esp
  406991:	dec    ebp
  406992:	add    esi,DWORD PTR [edx+0x94536c2]
  406998:	repnz mov bl,0x6f
  40699b:	cmp    eax,0xfa975530
  4069a0:	mov    ds:0x79c3d61b,al
  4069a5:	and    edx,DWORD PTR [edx-0x1eb11e86]
  4069ab:	mov    ah,0x6a
  4069ad:	sar    BYTE PTR [ebp-0x6e],cl
  4069b0:	inc    esp
  4069b1:	out    0xd8,al
  4069b3:	call   DWORD PTR [ebx-0x30688c66]
  4069b9:	(bad)  
  4069ba:	fstp   st(5)
  4069bc:	fisttp QWORD PTR [ebp+esi*1+0x6939e98a]
  4069c3:	int3   
  4069c4:	std    
  4069c5:	inc    edi
  4069c6:	mov    edi,0x434a3e51
  4069cb:	aad    0x21
  4069cd:	push   edi
  4069ce:	jl     0x40699d
  4069d0:	push   esp
  4069d1:	push   ss
  4069d2:	add    eax,0x35e3d0c9
  4069d7:	cld    
  4069d8:	(bad)  
  4069d9:	pop    edi
  4069da:	jns    0x4069d7
  4069dc:	addr16 das 
  4069de:	cmp    eax,0xfa858dc4
  4069e3:	adc    al,bl
  4069e5:	inc    ebx
  4069e6:	shl    DWORD PTR ds:0x2000431c,0x3e
  4069ed:	xlat   BYTE PTR ds:[ebx]
  4069ee:	jp     0x406a64
  4069f0:	(bad)  
  4069f1:	outs   dx,DWORD PTR ds:[esi]
  4069f2:	popf   
  4069f3:	cmp    al,0xb8
  4069f5:	xchg   dl,cl
  4069f7:	sar    DWORD PTR [eax+0x67],0xf2
  4069fb:	clc    
  4069fc:	mov    edi,DWORD PTR [ebp+ecx*2-0x68]
  406a00:	pop    edx
  406a01:	test   BYTE PTR [eax-0x242148e6],bh
  406a07:	fiadd  WORD PTR [eax+0x10]
  406a0a:	mov    eax,ds:0x3b12da52
  406a0f:	and    al,0xfb
  406a11:	or     ch,BYTE PTR [edi+ebx*1]
  406a14:	add    BYTE PTR [eax],dl
  406a16:	or     bl,BYTE PTR [ebp+0x5f]
  406a19:	inc    ebx
  406a1a:	test   DWORD PTR ds:0x4349a2a9,edi
  406a20:	add    BYTE PTR [ebx+0x17],cl
  406a23:	sbb    eax,0xe0db8277
  406a28:	hlt    
  406a29:	cmc    
  406a2a:	mov    ah,0xc0
  406a2c:	cmc    
  406a2d:	neg    cl
  406a2f:	mov    ch,0x54
  406a31:	lds    edi,FWORD PTR [ebx-0x31e4a791]
  406a37:	mov    dl,0x2c
  406a39:	sub    ch,ch
  406a3b:	sar    eax,cl
  406a3d:	iret   
  406a3e:	test   ch,ch
  406a40:	cs push es
  406a42:	cmp    BYTE PTR [ecx],0xa3
  406a45:	addr16 jmp 0xcb30:0xba978aa7
  406a4d:	popf   
  406a4e:	int3   
  406a4f:	arpl   WORD PTR [ecx],dx
  406a51:	dec    eax
  406a52:	pusha  
  406a53:	fiadd  WORD PTR [eax-0x6d]
  406a56:	push   es
  406a57:	mov    al,ds:0xcd3ced33
  406a5c:	pop    ebp
  406a5d:	jge    0x406a5f
  406a5f:	ss mov ecx,0xcc24fabe
  406a65:	xchg   esp,eax
  406a66:	popf   
  406a67:	rcl    dl,0x64
  406a6a:	sub    DWORD PTR [eax-0x4c07e843],ebp
  406a70:	inc    edi
  406a71:	and    DWORD PTR [edi-0x1c7bdca6],esi
  406a77:	test   al,0x8d
  406a79:	dec    ecx
  406a7a:	js     0x406a7f
  406a7c:	and    al,0xb3
  406a7e:	pop    ecx
  406a7f:	and    dh,cl
  406a81:	pop    ds
  406a82:	loope  0x406a46
  406a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a85:	mov    DWORD PTR [ebp-0x6c11dc7d],edi
  406a8b:	daa    
  406a8c:	popf   
  406a8d:	pop    ss
  406a8e:	xchg   DWORD PTR [esi+0x13261ca2],esp
  406a94:	scas   eax,DWORD PTR es:[edi]
  406a95:	ret    0xe195
  406a98:	test   BYTE PTR [ebp+0x19f5fc45],0x96
  406a9f:	aad    0x99
  406aa1:	loope  0x406ae7
  406aa3:	mov    ch,bl
  406aa5:	lods   al,BYTE PTR ds:[esi]
  406aa6:	in     eax,dx
  406aa7:	cdq    
  406aa8:	js     0x406b27
  406aaa:	sar    BYTE PTR [ecx],cl
  406aac:	and    esp,edx
  406aae:	std    
  406aaf:	bound  ebx,QWORD PTR [ecx-0x438dd1a2]
  406ab5:	push   ebp
  406ab6:	jb     0x406ac0
  406ab8:	add    ah,0xcb
  406abb:	jae    0x406a96
  406abd:	xchg   ecx,eax
  406abe:	mov    esp,DWORD PTR [ebp-0x13]
  406ac1:	adc    al,0xba
  406ac3:	jnp    0x406a5f
  406ac5:	retf   0xf6e3
  406ac8:	test   DWORD PTR [eiz*4+0x4645893b],ecx
  406acf:	out    0x65,eax
  406ad1:	jp     0x406b05
  406ad3:	xchg   edi,eax
  406ad4:	fadd   st,st(3)
  406ad6:	or     DWORD PTR [ebx-0xc],esi
  406ad9:	pop    es
  406ada:	push   ebx
  406adb:	add    eax,0xa525d3e8
  406ae0:	ss xchg edi,eax
  406ae2:	adc    al,ah
  406ae4:	loop   0x406b62
  406ae6:	outs   dx,DWORD PTR ds:[esi]
  406ae7:	jno    0x406a83
  406ae9:	out    dx,al
  406aea:	in     al,dx
  406aeb:	mov    ch,0xfb
  406aed:	mov    bh,0x2d
  406aef:	stc    
  406af0:	iret   
  406af1:	cdq    
  406af2:	aad    0x9
  406af4:	mov    dl,0xb2
  406af6:	add    DWORD PTR [esi],esp
  406af8:	ret    
  406af9:	and    ecx,DWORD PTR ds:0xb76549dc
  406aff:	ins    DWORD PTR es:[edi],dx
  406b00:	(bad)  [eax]
  406b02:	test   eax,0xb348c2f8
  406b07:	adc    al,0x39
  406b09:	int    0x11
  406b0b:	fsubr  QWORD PTR [edx-0x54]
  406b0e:	test   DWORD PTR cs:[ebx+0x59cebe0f],ecx
  406b15:	push   cs
  406b16:	vminsd xmm2,xmm6,QWORD PTR ds:0x354fab1
  406b1e:	or     ebp,DWORD PTR [ebx+0x4e]
  406b21:	imul   edx,DWORD PTR [esi+0x54],0xffffffa1
  406b25:	push   eax
  406b26:	xor    esi,DWORD PTR [esi]
  406b28:	add    eax,0xbb8cfd9a
  406b2d:	xor    BYTE PTR [edi],0x6d
  406b30:	loopne 0x406b80
  406b32:	cmp    al,BYTE PTR [ecx-0x30]
  406b35:	jnp    0x406afc
  406b37:	inc    ebx
  406b38:	sahf   
  406b39:	sub    BYTE PTR [eax],ah
  406b3b:	fwait
  406b3c:	adc    dh,BYTE PTR [esi+0x33]
  406b3f:	hlt    
  406b40:	mov    BYTE PTR [eax+ebx*1],dl
  406b43:	(bad)  
  406b45:	fmul   DWORD PTR [edx-0x37e3d85a]
  406b4b:	mov    ds:0x73026e72,al
  406b50:	push   edx
  406b51:	in     eax,0xee
  406b53:	js     0x406b46
  406b55:	fnsave [eax+ecx*8-0x4f]
  406b59:	pop    ds
  406b5a:	push   ebp
  406b5b:	cmc    
  406b5c:	pop    esi
  406b5d:	call   0x2fc6:0x5baf0354
  406b64:	inc    edi
  406b65:	sti    
  406b66:	push   cs
  406b67:	mov    cl,0x92
  406b69:	and    DWORD PTR [esp+ebp*2],eax
  406b6c:	cs popa 
  406b6e:	test   DWORD PTR [ecx-0x9bfff7f],edx
  406b74:	inc    edi
  406b75:	jg     0x406b46
  406b77:	cmp    al,BYTE PTR [esi+0x2]
  406b7a:	ret    0x628c
  406b7d:	pusha  
  406b7e:	mov    BYTE PTR [edx],bl
  406b80:	aas    
  406b81:	push   esi
  406b82:	add    eax,0x37ccba83
  406b87:	(bad)  
  406b88:	daa    
  406b89:	and    ecx,DWORD PTR [ecx+ecx*2-0xb2a8bc0]
  406b90:	dec    eax
  406b91:	inc    edi
  406b92:	sar    eax,cl
  406b94:	outs   dx,DWORD PTR ds:[esi]
  406b95:	repnz mov ds:0x8455ff30,al
  406b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b9c:	inc    esi
  406b9d:	xchg   ecx,eax
  406b9e:	add    DWORD PTR [ebp+0x4f7d6c82],esp
  406ba4:	xor    eax,0xb84d578a
  406ba9:	dec    ecx
  406baa:	inc    ebp
  406bab:	and    al,BYTE PTR ds:0xd68e3303
  406bb1:	adc    BYTE PTR [ebx],ch
  406bb3:	shl    BYTE PTR [esi],0x4a
  406bb6:	cwde   
  406bb7:	mov    ds:0x2b8de359,al
  406bbc:	icebp  
  406bbd:	xchg   edx,eax
  406bbe:	fst    QWORD PTR [esp+eiz*2+0x6]
  406bc2:	xchg   ebp,eax
  406bc3:	retf   0xe3b3
  406bc6:	sahf   
  406bc7:	and    al,0xb
  406bc9:	xor    eax,0x61aaf8f7
  406bce:	inc    BYTE PTR [edi]
  406bd0:	retf   
  406bd1:	xchg   BYTE PTR [ebx+0x36a4541e],ah
  406bd7:	jmp    0x406bae
  406bd9:	inc    edi
  406bda:	mov    ch,0xc7
  406bdc:	cmp    BYTE PTR [eax+0xa],dh
  406bdf:	popf   
  406be0:	pop    eax
  406be1:	ins    BYTE PTR es:[edi],dx
  406be2:	pop    edx
  406be3:	rol    dh,1
  406be5:	xlat   BYTE PTR ds:[ebx]
  406be6:	mov    ch,0xa4
  406be8:	sbb    al,0x4b
  406bea:	inc    ebp
  406beb:	jo     0x406c3f
  406bed:	loopne 0x406b99
  406bef:	ins    BYTE PTR es:[edi],dx
  406bf0:	adc    BYTE PTR [ebx-0x340f4b60],bh
  406bf6:	div    DWORD PTR [edx-0xb8b22cd]
  406bfc:	and    al,0xd0
  406bfe:	xchg   esp,eax
  406bff:	push   edi
  406c00:	icebp  
  406c01:	sti    
  406c02:	sub    DWORD PTR [ebx+eax*1-0x5a672e59],ebp
  406c09:	hlt    
  406c0a:	adc    dl,dl
  406c0c:	(bad)  
  406c0d:	push   ebx
  406c0e:	xchg   ebp,eax
  406c0f:	xchg   ecx,eax
  406c10:	cwde   
  406c11:	cmc    
  406c12:	sub    edx,edx
  406c14:	mov    BYTE PTR ds:0xa36ca3aa,bh
  406c1a:	add    al,0x14
  406c1c:	add    al,0xce
  406c1e:	aam    0x75
  406c20:	jne    0x406c54
  406c22:	inc    esi
  406c23:	sub    DWORD PTR [ecx-0x76],eax
  406c26:	fidiv  DWORD PTR [ebp-0xaa8f663]
  406c2c:	retf   
  406c2d:	clc    
  406c2e:	leave  
  406c2f:	aad    0x3d
  406c31:	popa   
  406c32:	cdq    
  406c33:	cs repz js 0x406c7d
  406c37:	jmp    0x17885d8a
  406c3c:	mov    bh,0x84
  406c3e:	aam    0x46
  406c40:	adc    BYTE PTR [ebx+0x2c485bc],al
  406c46:	ins    BYTE PTR es:[edi],dx
  406c47:	jno    0x406c56
  406c49:	push   cs
  406c4a:	or     esi,0xba5fe071
  406c50:	or     eax,DWORD PTR [edx-0x332b4ede]
  406c56:	(bad)
  406c59:	push   edi
  406c5a:	and    edi,DWORD PTR [ecx+ebx*2]
  406c5d:	into   
  406c5e:	sbb    al,0x91
  406c60:	jg     0x406cd4
  406c62:	adc    DWORD PTR [edi],ebp
  406c64:	and    al,0xd9
  406c66:	fcomp  DWORD PTR [esi+edx*8+0x1c78f648]
  406c6d:	xchg   ecx,eax
  406c6e:	fbstp  TBYTE PTR [eax]
  406c70:	inc    esp
  406c71:	mov    ah,0x78
  406c73:	mov    bh,0x82
  406c75:	fidiv  WORD PTR [eax+esi*8]
  406c78:	cdq    
  406c79:	inc    eax
  406c7a:	pop    ebx
  406c7b:	mov    ss,WORD PTR [esi+edi*4]
  406c7e:	loop   0x406c38
  406c80:	pop    edx
  406c81:	imul   esp,DWORD PTR [ecx+0x3662aedd],0x819d7ae2
  406c8b:	nop/reserved BYTE PTR [ecx-0xa492e]
  406c92:	call   0x45e48cda
  406c97:	dec    edi
  406c98:	mov    esi,0xa0511554
  406c9d:	pop    eax
  406c9e:	dec    edx
  406c9f:	popf   
  406ca0:	scas   al,BYTE PTR es:[edi]
  406ca1:	sub    bl,BYTE PTR [ebp+0x6989a1c7]
  406ca7:	pop    esi
  406ca8:	jge    0x406cdc
  406caa:	idiv   BYTE PTR [eax+ebx*8+0x1492ab7]
  406cb1:	mov    dl,0x54
  406cb3:	mov    ebx,0xb1aba677
  406cb8:	dec    ebx
  406cb9:	mov    eax,ds:0xa5cc1f81
  406cbe:	sub    bl,BYTE PTR [eax+0x49]
  406cc1:	or     BYTE PTR [ebx],cl
  406cc3:	sti    
  406cc4:	jo     0x406cb3
  406cc6:	ficomp DWORD PTR [edi-0xcb6601c]
  406ccc:	inc    ebx
  406ccd:	or     eax,0x42c7a705
  406cd2:	test   al,0x41
  406cd4:	test   BYTE PTR [ecx+0x19966f37],bh
  406cda:	test   eax,0xff4c7f88
  406cdf:	sub    dh,0x5e
  406ce2:	sub    esi,edx
  406ce4:	mov    eax,ds:0x9c11f39
  406ce9:	add    al,0x2b
  406ceb:	rcl    esp,1
  406ced:	cdq    
  406cee:	in     eax,dx
  406cef:	push   cs
  406cf0:	lods   al,BYTE PTR ds:[esi]
  406cf1:	mov    ecx,DWORD PTR [ebx-0x7a]
  406cf4:	out    dx,eax
  406cf5:	ins    BYTE PTR es:[edi],dx
  406cf6:	xor    BYTE PTR [edi],0x26
  406cf9:	mov    edi,0xd62226
  406cfe:	mov    esp,0x57013aa2
  406d03:	inc    edi
  406d04:	push   0x2a
  406d06:	jns    0x406d61
  406d08:	cld    
  406d09:	jns    0x406c9c
  406d0b:	ins    DWORD PTR es:[edi],dx
  406d0c:	lods   al,BYTE PTR ds:[esi]
  406d0d:	adc    ebx,DWORD PTR [edx-0x13]
  406d10:	fstp   QWORD PTR [eax-0x579e2afb]
  406d16:	ins    BYTE PTR es:[edi],dx
  406d17:	or     edi,eax
  406d19:	dec    ecx
  406d1a:	pushf  
  406d1b:	jno    0x406d1a
  406d1d:	pop    edi
  406d1e:	call   0x93ed9122
  406d23:	xlat   BYTE PTR ds:[ebx]
  406d24:	sbb    dh,BYTE PTR [edx+0x2d]
  406d27:	mov    dl,0x49
  406d29:	ficomp DWORD PTR [edi-0x5fbacd6e]
  406d2f:	gs imul ebp,edi,0x3a798de
  406d36:	out    dx,al
  406d37:	jp     0x406d4a
  406d39:	adc    eax,0xbd3f16e5
  406d3e:	(bad)  
  406d3f:	fisttp QWORD PTR [esi+0x41]
  406d42:	mov    esp,0xf5617052
  406d47:	xchg   DWORD PTR [eax-0x3f96df0e],ebx
  406d4d:	dec    ebx
  406d4e:	jno    0x406d6a
  406d50:	mov    al,ds:0xbdb759fd
  406d55:	adc    BYTE PTR [edx-0x79301709],ah
  406d5b:	jae    0x406db3
  406d5d:	mov    edi,0x4cac95df
  406d62:	inc    eax
  406d63:	mov    DWORD PTR [esi],ecx
  406d65:	mov    edx,edi
  406d67:	inc    ebp
  406d68:	cwde   
  406d69:	xchg   DWORD PTR [edx],ebx
  406d6b:	fcom   QWORD PTR [ebp-0x1d3e8b3c]
  406d71:	icebp  
  406d72:	mov    esp,0x46f54235
  406d77:	cld    
  406d78:	push   es
  406d79:	popf   
  406d7a:	mov    dh,dh
  406d7c:	hlt    
  406d7d:	jb     0x406d10
  406d7f:	jbe    0x406dc5
  406d81:	aam    0xd2
  406d83:	jns    0x406d8d
  406d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d86:	sub    BYTE PTR [eax+0x18f817d8],dh
  406d8c:	adc    DWORD PTR [edi+0x6a60bb4b],edx
  406d92:	add    ch,BYTE PTR [ebp+0x72]
  406d95:	adc    DWORD PTR [ebx+edi*2],ebx
  406d98:	cmp    BYTE PTR [edi],dl
  406d9a:	dec    ebp
  406d9b:	mov    gs,WORD PTR [esi+0x1146fd28]
  406da1:	mov    edi,0x3d8b2b12
  406da6:	int3   
  406da7:	mul    dl
  406da9:	sahf   
  406daa:	mov    bh,0xfa
  406dac:	inc    ebp
  406dad:	pop    esp
  406dae:	leave  
  406daf:	out    0xcd,al
  406db1:	jne    0x406e15
  406db3:	int3   
  406db4:	pop    esi
  406db5:	(bad)  
  406db6:	(bad)  
  406db7:	(bad)  
  406db9:	mov    ebp,0x8d4110ca
  406dbe:	jp     0x406ded
  406dc0:	cmp    BYTE PTR [eax+0x158e2cd],dh
  406dc6:	or     eax,0x5c310891
  406dcb:	sar    BYTE PTR [ebx-0x59],cl
  406dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dcf:	jmp    0x406d81
  406dd1:	or     BYTE PTR [ebx+0x5aad6288],al
  406dd7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406dd9:	xchg   ebx,eax
  406dda:	ds popf 
  406ddc:	mov    ebp,0x1cbee84
  406de1:	add    al,0xcb
  406de3:	push   ss
  406de4:	add    eax,0x75736afd
  406de9:	lds    esi,FWORD PTR [esi+0x60332147]
  406def:	ds inc ebp
  406df2:	and    eax,0xa968ead5
  406df7:	xchg   esp,eax
  406df8:	fadd   st(4),st
  406dfa:	fwait
  406dfb:	bound  esp,QWORD PTR [edx-0x1e]
  406dfe:	dec    eax
  406dff:	inc    esp
  406e00:	mov    dh,0x72
  406e02:	repz aaa 
  406e04:	mov    gs,WORD PTR [ebx-0x4e924b97]
  406e0a:	jecxz  0x406db9
  406e0c:	dec    edi
  406e0d:	nop
  406e0e:	and    ch,ah
  406e10:	hlt    
  406e11:	loop   0x406e20
  406e13:	mov    ah,0x39
  406e15:	daa    
  406e16:	add    eax,0x15889532
  406e1b:	sbb    edi,DWORD PTR [eax+0x48]
  406e1e:	add    DWORD PTR es:[eax+0x701e91ba],eax
  406e25:	jbe    0x406e8f
  406e27:	pop    esi
  406e28:	mov    edx,0xd1667cfe
  406e2d:	sti    
  406e2e:	mov    ah,0x4f
  406e30:	data16 and al,0xa3
  406e33:	ins    DWORD PTR es:[edi],dx
  406e34:	stc    
  406e35:	mov    esp,0x99303041
  406e3a:	xor    BYTE PTR [eax+0x51],ch
  406e3d:	popa   
  406e3e:	fcomp  DWORD PTR [esi+0x40]
  406e41:	lock and eax,0xc838b90c
  406e47:	fsubr  DWORD PTR [edi+0x63]
  406e4a:	mov    eax,ds:0xef0c3897
  406e4f:	sub    DWORD PTR [ebp+0x6],edx
  406e52:	out    dx,eax
  406e53:	ficomp DWORD PTR [edx]
  406e55:	scas   eax,DWORD PTR es:[edi]
  406e56:	clc    
  406e57:	pop    edi
  406e58:	arpl   WORD PTR [eax+0x34],dx
  406e5b:	inc    esp
  406e5c:	or     esp,DWORD PTR [esp+esi*4]
  406e5f:	adc    edx,DWORD PTR [esi-0x25]
  406e62:	ret    0x3afe
  406e65:	jb     0x406e3d
  406e67:	jmp    0x74109782
  406e6c:	xor    al,BYTE PTR [esi-0x21]
  406e6f:	sbb    dl,BYTE PTR [edi]
  406e71:	mov    ch,0x42
  406e73:	pusha  
  406e74:	fbld   TBYTE PTR [ebx-0x57]
  406e77:	or     al,0xe5
  406e79:	push   esp
  406e7a:	daa    
  406e7b:	push   ds
  406e7c:	fs and eax,0x2758e291
  406e82:	push   ss
  406e83:	and    dh,BYTE PTR fs:[edi+0x642d4a61]
  406e8a:	mov    bl,0xec
  406e8c:	stos   DWORD PTR es:[edi],eax
  406e8d:	jo     0x406ee2
  406e8f:	outs   dx,BYTE PTR ds:[esi]
  406e90:	test   al,0x41
  406e92:	test   eax,0x423e1fad
  406e97:	mov    ecx,0x393581e5
  406e9c:	or     dh,BYTE PTR [edi]
  406e9e:	rep stos DWORD PTR es:[edi],eax
  406ea0:	or     BYTE PTR [eax],dh
  406ea2:	les    ecx,FWORD PTR [eax+0x34]
  406ea5:	adc    dl,BYTE PTR [eax-0x7063e7a1]
  406eab:	test   edi,ebx
  406ead:	in     al,dx
  406eae:	xor    dl,dl
  406eb0:	clc    
  406eb1:	int3   
  406eb2:	inc    ecx
  406eb3:	jo     0x406e91
  406eb5:	cmp    al,0xf0
  406eb7:	popa   
  406eb8:	int    0xf1
  406eba:	lods   eax,DWORD PTR ds:[esi]
  406ebb:	jmp    DWORD PTR [edi+ebp*1-0x20f9b866]
  406ec2:	inc    esp
  406ec3:	push   ebp
  406ec4:	add    eax,0xb30b8f3e
  406ec9:	jbe    0x406ee9
  406ecb:	push   ebp
  406ecc:	sub    eax,0x30bb59a9
  406ed1:	or     dl,BYTE PTR [ebp-0x156165c2]
  406ed7:	push   eax
  406ed8:	(bad)  
  406ed9:	in     al,0x6a
  406edb:	jecxz  0x406f5a
  406edd:	push   ebp
  406ede:	adc    eax,0x412a9ca4
  406ee3:	add    eax,0x39c454b0
  406ee8:	add    al,0xf7
  406eea:	and    BYTE PTR [ebx+0x511601c8],bl
  406ef0:	jecxz  0x406ebc
  406ef2:	add    eax,0x43a3d4a5
  406ef7:	pusha  
  406ef8:	mov    esi,0xbfe235f
  406efd:	arpl   WORD PTR [esi-0x64],dx
  406f00:	dec    esp
  406f01:	push   0xb6b17684
  406f06:	scas   eax,DWORD PTR es:[edi]
  406f07:	popf   
  406f08:	mov    al,ds:0xf0da9537
  406f0d:	mov    ecx,0x502b158a
  406f12:	inc    esi
  406f13:	jno    0x406f91
  406f15:	jle    0x406eaf
  406f17:	or     DWORD PTR [esi-0x26],edx
  406f1a:	das    
  406f1b:	cmp    ebp,ebx
  406f1d:	(bad)  
  406f1e:	jl     0x406f78
  406f20:	fisttp DWORD PTR [ecx-0x47]
  406f23:	mov    esi,0xe61f8e21
  406f28:	inc    DWORD PTR [edi-0x74a1c0af]
  406f2e:	and    al,0xa0
  406f30:	in     eax,dx
  406f31:	xchg   DWORD PTR [ebp-0x18],ebp
  406f34:	test   BYTE PTR [eax],ah
  406f36:	lock inc esp
  406f38:	(bad)  [ebx]
  406f3a:	(bad)  
  406f3b:	sbb    ah,BYTE PTR [edx-0x97e1fca]
  406f41:	sub    esi,edi
  406f43:	adc    eax,0xe9574cec
  406f48:	xlat   BYTE PTR ds:[ebx]
  406f49:	lock dec ebp
  406f4b:	cwde   
  406f4c:	aas    
  406f4d:	cmp    eax,0x833153a8
  406f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f53:	or     BYTE PTR [ecx-0x3191cfd3],ch
  406f59:	inc    ebx
  406f5a:	adc    BYTE PTR [ecx+ebp*8-0x27752517],0xf1
  406f62:	push   ecx
  406f63:	adc    ch,dh
  406f65:	test   eax,0x660418fb
  406f6a:	inc    ebp
  406f6b:	stc    
  406f6c:	fwait
  406f6d:	daa    
  406f6e:	push   ecx
  406f6f:	jmp    0x3384a83
  406f74:	out    dx,eax
  406f75:	retf   
  406f76:	add    esi,DWORD PTR [ebx-0xa]
  406f79:	test   DWORD PTR [ecx],ecx
  406f7b:	cwde   
  406f7c:	shl    BYTE PTR [ecx+0x61301312],0x89
  406f83:	jnp    0x406f9a
  406f85:	sbb    al,BYTE PTR [eax-0x1b58b5e1]
  406f8b:	jl     0x406f6f
  406f8d:	mov    esi,0x7b5da08c
  406f92:	sub    DWORD PTR [edi],ebp
  406f94:	mov    dh,0x2b
  406f96:	push   es
  406f97:	lods   eax,DWORD PTR ds:[esi]
  406f98:	push   0x8e7a5555
  406f9d:	xchg   ebp,eax
  406f9e:	ja     0x406f9c
  406fa0:	xchg   ebp,eax
  406fa1:	cmp    al,0x2f
  406fa3:	sbb    eax,0xe5becb70
  406fa8:	push   esi
  406fa9:	std    
  406faa:	xchg   edx,eax
  406fab:	xchg   edx,eax
  406fac:	cli    
  406fad:	stos   DWORD PTR es:[edi],eax
  406fae:	push   cs
  406faf:	(bad)  
  406fb1:	ror    DWORD PTR [edx-0x55],1
  406fb4:	std    
  406fb5:	leave  
  406fb6:	sar    BYTE PTR [eax],1
  406fb8:	dec    esp
  406fb9:	or     BYTE PTR [ebp-0x5b],al
  406fbc:	pop    eax
  406fbd:	mov    ebx,0x1da2131c
  406fc2:	mov    DWORD PTR [ebp-0x6f],ecx
  406fc5:	mov    esi,0x1d490fa6
  406fca:	jmp    0x6b11f2ce
  406fcf:	(bad)  
  406fd0:	call   0x143c:0xdbed8169
  406fd7:	pop    ds
  406fd8:	scas   eax,DWORD PTR es:[edi]
  406fd9:	inc    ebp
  406fda:	in     eax,0x59
  406fdc:	dec    edi
  406fdd:	loop   0x406f72
  406fdf:	adc    ebx,esi
  406fe1:	ret    
  406fe2:	push   esp
  406fe3:	clc    
  406fe4:	enter  0x8a6b,0x8d
  406fe8:	outs   dx,DWORD PTR ds:[esi]
  406fe9:	xchg   BYTE PTR [edx+0x51770a4],ch
  406fef:	xlat   BYTE PTR ds:[ebx]
  406ff0:	push   0xfffffffc
  406ff2:	sub    al,0x5f
  406ff4:	xor    cl,ah
  406ff6:	inc    ecx
  406ff7:	pushf  
  406ff8:	cmp    al,0xbb
  406ffa:	cmp    bl,BYTE PTR [edx+eiz*8+0x2f1f4a78]
  407001:	imul   esp,ecx,0xffffffe4
  407004:	fadd   QWORD PTR [edx-0x7b]
  407007:	imul   edx,DWORD PTR [edi],0xffffffb7
  40700a:	loope  0x407037
  40700c:	xchg   esp,eax
  40700d:	cmp    esp,DWORD PTR [edi]
  40700f:	jmp    0x406ffd
  407011:	sub    eax,0x875ab116
  407016:	push   cs
  407017:	sbb    ch,bh
  407019:	aaa    
  40701a:	push   ebp
  40701b:	stos   BYTE PTR es:[edi],al
  40701c:	dec    ebx
  40701d:	ja     0x407039
  40701f:	adc    bh,BYTE PTR [ebx+ebx*4-0x53616c07]
  407026:	outs   dx,DWORD PTR ds:[esi]
  407027:	mov    ebx,0x4bfc521
  40702c:	mov    edx,DWORD PTR [edx]
  40702e:	mov    ah,0xf7
  407030:	repnz mov BYTE PTR [ebx-0x156feec],cl
  407037:	(bad)  
  407038:	test   esi,0xb7f482bc
  40703e:	push   ebx
  40703f:	ja     0x406fe4
  407041:	sbb    bl,ah
  407043:	sub    BYTE PTR ds:0x2f41f347,bh
  407049:	cs push edi
  40704b:	pop    edi
  40704c:	jb     0x407057
  40704e:	into   
  40704f:	icebp  
  407050:	xor    esp,DWORD PTR [ebx]
  407052:	pop    ecx
  407053:	sub    ecx,0xffffffc8
  407056:	push   esp
  407057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407058:	mov    al,0x7c
  40705a:	jno    0x4070c8
  40705c:	clc    
  40705d:	inc    ebx
  40705e:	test   DWORD PTR [esi+0x5c],esp
  407061:	sar    DWORD PTR [edi],1
  407063:	jmp    0x50260b4c
  407068:	outs   dx,DWORD PTR ds:[esi]
  407069:	(bad)  
  40706a:	mov    eax,0x1e511abf
  40706f:	mov    WORD PTR ds:0xbe458143,?
  407075:	stc    
  407076:	inc    ebx
  407077:	pop    ds
  407078:	xor    ch,cl
  40707a:	jg     0x4070c5
  40707c:	sub    ebx,DWORD PTR [esi+0x6838bbd]
  407082:	outs   dx,BYTE PTR ds:[esi]
  407083:	iret   
  407084:	(bad)  
  407085:	es in  al,dx
  407087:	mov    bh,0xbf
  407089:	imul   dl
  40708b:	daa    
  40708c:	popf   
  40708d:	pop    edi
  40708e:	(bad)  [edi-0x2590387c]
  407094:	sbb    eax,0x50c4ab68
  407099:	jne    0x407033
  40709b:	jnp    0x407025
  40709d:	loope  0x4070b2
  40709f:	(bad)  
  4070a0:	cmp    BYTE PTR [ecx-0x3b],al
  4070a3:	push   edx
  4070a4:	fld    DWORD PTR [esi-0x18e6c6c9]
  4070aa:	push   ss
  4070ab:	xchg   DWORD PTR [ebx],ecx
  4070ad:	xor    cl,cl
  4070af:	dec    ebx
  4070b0:	stos   BYTE PTR es:[edi],al
  4070b1:	push   ss
  4070b2:	mov    ebp,0x1ffef330
  4070b7:	mov    esi,0xd5119832
  4070bc:	lods   eax,DWORD PTR ds:[si]
  4070be:	sahf   
  4070bf:	je     0x407118
  4070c1:	push   ebp
  4070c2:	or     bh,BYTE PTR [edi]
  4070c4:	pop    esi
  4070c5:	push   cs
  4070c6:	or     al,0x71
  4070c8:	mov    BYTE PTR [ecx],ch
  4070ca:	outs   dx,BYTE PTR ds:[esi]
  4070cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cc:	and    eax,0xfc7cb5ae
  4070d1:	add    al,0x20
  4070d3:	or     bl,BYTE PTR [eax+0x5b07581d]
  4070d9:	mov    al,ds:0xe5f3dd2d
  4070de:	push   ss
  4070df:	mov    bh,0x9b
  4070e1:	xchg   ebx,eax
  4070e2:	jp     0x407128
  4070e4:	jmp    0x407129
  4070e6:	mov    ebp,0xffedfbb1
  4070eb:	retf   0x1830
  4070ee:	dec    esi
  4070ef:	dec    esi
  4070f0:	and    BYTE PTR [ebx+0x3f],cl
  4070f3:	into   
  4070f4:	gs mov cl,dl
  4070f7:	jg     0x40708e
  4070f9:	es in  eax,0xce
  4070fc:	push   edx
  4070fd:	push   es
  4070fe:	fwait
  4070ff:	rcr    DWORD PTR [eax+edi*2+0x1b45317],0x8d
  407107:	(bad)  
  407108:	daa    
  407109:	test   BYTE PTR [edx+0x31c826e2],cl
  40710f:	pusha  
  407110:	adc    dl,dl
  407112:	mov    al,ch
  407114:	xor    DWORD PTR [ecx+eax*2+0x3c],eax
  407118:	xchg   esp,eax
  407119:	es leave 
  40711b:	lea    ebx,[edi+0x5e2e41]
  407121:	mov    ds:0x401c49cc,eax
  407126:	add    BYTE PTR [eax],dh
  407128:	and    bl,BYTE PTR [ebx+0x7a4c158b]
  40712e:	jl     0x4070c3
  407130:	sub    eax,0x5729db59
  407135:	retf   
  407136:	inc    ebp
  407137:	add    DWORD PTR [eax],esi
  407139:	bound  edi,QWORD PTR [ebx]
  40713b:	push   edi
  40713c:	push   eax
  40713d:	imul   edi,DWORD PTR [ecx],0xd694f898
  407143:	shl    BYTE PTR [edi+0x24],1
  407146:	out    0x30,eax
  407148:	mov    ah,0x84
  40714a:	sub    al,0x2
  40714c:	(bad)  
  40714e:	pop    es
  40714f:	aam    0xdc
  407151:	mov    edx,0x157bcc50
  407156:	cmp    al,al
  407158:	adc    DWORD PTR [esi],esp
  40715a:	test   al,0xd7
  40715c:	sub    al,0x28
  40715e:	add    cl,BYTE PTR [edi+0x5a2674da]
  407164:	adc    DWORD PTR [ebx-0x44],ebx
  407167:	dec    edx
  407168:	popf   
  407169:	fwait
  40716a:	cld    
  40716b:	sbb    eax,0x6716891f
  407170:	ret    
  407171:	dec    ebx
  407172:	out    0xe3,eax
  407174:	dec    esi
  407175:	mov    dl,0xd2
  407177:	pop    es
  407178:	fwait
  407179:	outs   dx,BYTE PTR ds:[esi]
  40717a:	sahf   
  40717b:	mov    ebx,0x42168c94
  407180:	xor    ah,BYTE PTR [edi-0x13]
  407183:	popf   
  407184:	in     al,dx
  407185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407186:	adc    eax,0xcb9a2c5
  40718b:	jno    0x40713c
  40718d:	stc    
  40718e:	ja     0x407150
  407190:	dec    edi
  407191:	imul   esp,DWORD PTR [edi+0xc],0xc44e44eb
  407198:	xchg   ebx,eax
  407199:	xlat   BYTE PTR ds:[ebx]
  40719a:	push   cs
  40719b:	xchg   ebx,eax
  40719c:	pop    ebx
  40719d:	adc    ch,BYTE PTR [ebp+0x31]
  4071a0:	out    0x3f,al
  4071a2:	fidivr WORD PTR ds:0xc305b69b
  4071a8:	(bad)  
  4071a9:	leave  
  4071aa:	and    dh,cl
  4071ac:	push   eax
  4071ad:	sahf   
  4071ae:	aad    0x40
  4071b0:	sbb    ch,al
  4071b2:	test   BYTE PTR [eax+0x72],dl
  4071b5:	xchg   edi,eax
  4071b6:	iret   
  4071b7:	adc    dl,dl
  4071b9:	std    
  4071ba:	xor    eax,ebp
  4071bc:	clc    
  4071bd:	into   
  4071be:	sbb    cl,BYTE PTR [eax]
  4071c0:	mov    dh,0xa4
  4071c2:	or     DWORD PTR [esi],edx
  4071c4:	test   bh,dh
  4071c6:	ds mov cl,0x44
  4071c9:	mov    eax,ds:0xecb9db84
  4071ce:	fadd   DWORD PTR [edx+0xecfcbd3]
  4071d4:	aad    0x55
  4071d6:	sbb    al,0xea
  4071d8:	not    DWORD PTR [edx-0x5eb3e304]
  4071de:	xor    eax,0xf4005d5b
  4071e3:	mov    ecx,0xe71e9693
  4071e8:	push   edi
  4071e9:	mov    dl,0xb3
  4071eb:	inc    ebp
  4071ec:	push   edi
  4071ed:	inc    eax
  4071ee:	repz fmul DWORD PTR [ebp+0x8889e13]
  4071f5:	not    DWORD PTR [eax]
  4071f7:	aas    
  4071f8:	mov    ebx,0xaf611c45
  4071fd:	inc    edx
  4071fe:	popf   
  4071ff:	hlt    
  407200:	xlat   BYTE PTR ds:[ebx]
  407201:	(bad)  
  407202:	mov    DWORD PTR [edx],edi
  407204:	xchg   DWORD PTR [ecx+0x3d],esp
  407207:	sub    DWORD PTR [edx],ebp
  407209:	lea    esi,[esp+edx*4+0x63]
  40720d:	fidivr WORD PTR [edi-0x161287cb]
  407213:	sar    esp,1
  407215:	mov    eax,0x53d57d3a
  40721a:	mov    edx,0x4222242b
  40721f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407220:	mov    eax,ds:0x3cfb4356
  407225:	pop    es
  407226:	mov    esi,0x7d87fe2c
  40722b:	dec    edi
  40722c:	jns    0x407263
  40722e:	lock mov ebx,0xbd2cda2e
  407234:	xchg   edx,eax
  407235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407236:	outs   dx,BYTE PTR ds:[esi]
  407237:	lds    ecx,FWORD PTR [eax+0x35]
  40723a:	inc    ecx
  40723b:	cmp    al,0x7d
  40723d:	inc    edi
  40723e:	xchg   edi,eax
  40723f:	int3   
  407240:	push   esp
  407241:	cld    
  407242:	test   bl,dh
  407244:	inc    esp
  407245:	enter  0x5042,0x13
  407249:	enter  0x134d,0x81
  40724d:	xchg   esi,eax
  40724e:	push   ebp
  40724f:	ret    
  407250:	(bad)  
  407251:	not    DWORD PTR [edx]
  407253:	and    edx,DWORD PTR [ebx+0x51458363]
  407259:	fwait
  40725a:	int    0x68
  40725c:	int    0xaf
  40725e:	sbb    al,0x44
  407260:	mov    dh,bl
  407262:	stc    
  407263:	mov    ch,0xbf
  407265:	jmp    0x38fa6f63
  40726a:	loopne 0x4072d1
  40726c:	sub    edx,DWORD PTR [esi]
  40726e:	ret    
  40726f:	repz cli 
  407271:	xor    DWORD PTR [ebp-0x2c],ebx
  407274:	imul   esi,DWORD PTR [eax+0x5c],0x548f80f1
  40727b:	xchg   bl,al
  40727d:	sbb    bh,BYTE PTR [edi+edi*4+0x7a]
  407281:	mov    ds,WORD PTR [eax-0x67]
  407284:	mov    ah,0xe8
  407286:	fnstsw WORD PTR [eax-0x6ea362d0]
  40728c:	retf   0x2098
  40728f:	xor    BYTE PTR [eax],dl
  407291:	lods   al,BYTE PTR ds:[esi]
  407292:	xor    BYTE PTR ds:0xe2bfa003,dl
  407298:	dec    eax
  407299:	mov    ch,0x75
  40729b:	das    
  40729c:	rcl    DWORD PTR [ecx+0x11],0x77
  4072a0:	iret   
  4072a1:	test   BYTE PTR [ecx],0xcf
  4072a4:	xchg   esi,eax
  4072a5:	es pop edi
  4072a7:	xchg   ebp,eax
  4072a8:	push   ss
  4072a9:	jmp    FWORD PTR [edx+0x47]
  4072ac:	scas   al,BYTE PTR es:[edi]
  4072ad:	mov    ecx,0xe316fe56
  4072b2:	imul   DWORD PTR [edx+0x2e]
  4072b5:	cli    
  4072b6:	shl    DWORD PTR [esp+eax*1-0x56],cl
  4072ba:	xchg   esp,eax
  4072bb:	and    al,0x23
  4072bd:	xchg   ebx,eax
  4072be:	dec    edx
  4072bf:	and    al,0xa7
  4072c1:	scas   al,BYTE PTR es:[edi]
  4072c2:	sbb    dl,BYTE PTR [edx+0x219f67b7]
  4072c8:	in     al,dx
  4072c9:	mov    edx,0x5e40623
  4072ce:	out    0x3e,eax
  4072d0:	in     eax,0x42
  4072d2:	repz push cs
  4072d4:	pusha  
  4072d5:	neg    BYTE PTR [ebp+0x55]
  4072d8:	add    eax,0xc5db803c
  4072dd:	out    dx,eax
  4072de:	sub    edx,DWORD PTR [edi+0x6fd2dfa9]
  4072e4:	sbb    al,0xf7
  4072e6:	dec    ecx
  4072e7:	test   al,0x9
  4072e9:	in     al,0xc2
  4072eb:	add    bh,0xea
  4072ee:	cmp    eax,0x8a4cb030
  4072f3:	and    ch,ah
  4072f5:	fwait
  4072f6:	jne    0x4072cb
  4072f8:	cld    
  4072f9:	jnp    0x40733d
  4072fb:	push   ebx
  4072fc:	repz ss xor bh,0x97
  407301:	ins    DWORD PTR es:[edi],dx
  407302:	lahf   
  407303:	jo     0x4072ac
  407305:	arpl   cx,ax
  407307:	ins    BYTE PTR es:[edi],dx
  407308:	rcl    DWORD PTR [ebp+0x54],1
  40730b:	cmp    bl,bh
  40730d:	enter  0xed88,0xf4
  407311:	enter  0xcd8e,0x5d
  407315:	mov    edx,0x241ca3fe
  40731a:	pop    ebp
  40731b:	jnp    0x407365
  40731d:	stc    
  40731e:	mov    WORD PTR [ecx-0x33],gs
  407321:	popf   
  407322:	fcomp  QWORD PTR [ecx]
  407324:	sub    DWORD PTR [edi],esp
  407326:	push   0xffffffc2
  407328:	fld    TBYTE PTR [ecx+0x2350f599]
  40732e:	loop   0x407317
  407330:	fs pop eax
  407332:	mov    edx,0xfed8320d
  407337:	outs   dx,DWORD PTR ds:[esi]
  407338:	sbb    ch,BYTE PTR [esi+edx*2]
  40733b:	jl     0x407381
  40733d:	push   ebx
  40733e:	pop    edx
  40733f:	stos   DWORD PTR es:[edi],eax
  407340:	ror    bh,cl
  407342:	sbb    DWORD PTR [edx-0x3c],esi
  407345:	enter  0x7e5d,0xad
  407349:	xchg   ecx,eax
  40734a:	xor    eax,0x14935439
  40734f:	jo     0x4072f4
  407351:	stos   BYTE PTR es:[edi],al
  407352:	ja     0x4073b9
  407354:	sbb    ecx,DWORD PTR [ebp+0x79b3a35e]
  40735a:	adc    DWORD PTR [edx-0x13],esi
  40735d:	(bad)  
  40735f:	mov    ebp,0xf0649e7
  407364:	scas   al,BYTE PTR es:[edi]
  407365:	pushf  
  407366:	and    bh,BYTE PTR [edx]
  407368:	jle    0x407354
  40736a:	push   ss
  40736b:	cmp    BYTE PTR [eax+0x25f3e122],dl
  407371:	test   bl,ch
  407373:	clc    
  407374:	mov    dh,0xc4
  407376:	idiv   DWORD PTR [esi+eiz*1]
  407379:	mov    al,ds:0xec73ae1f
  40737e:	in     eax,0x86
  407380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407381:	dec    edi
  407382:	jo     0x407378
  407384:	cmp    BYTE PTR [eax+0x4d3f0ec],dh
  40738a:	jmp    0x4073cc
  40738c:	mov    ah,BYTE PTR [edi+ebp*4-0x1e]
  407390:	cdq    
  407391:	cmp    bh,BYTE PTR [edi+0x6f]
  407394:	xchg   ecx,eax
  407395:	and    BYTE PTR [esi+0x7f5d8a0f],bl
  40739b:	(bad)  
  40739c:	dec    ebx
  40739d:	xor    al,dl
  40739f:	cmp    DWORD PTR [ecx],eax
  4073a1:	cwde   
  4073a2:	jp     0x407367
  4073a4:	push   ebx
  4073a5:	or     ebp,DWORD PTR [ebx-0x73657f01]
  4073ab:	push   ebp
  4073ac:	pop    edx
  4073ad:	jmp    0x407384
  4073af:	cmp    DWORD PTR [esi+0x3b],esp
  4073b2:	pop    ebp
  4073b3:	cwde   
  4073b4:	bound  edx,QWORD PTR [edx]
  4073b6:	pop    edx
  4073b7:	cmc    
  4073b8:	lods   eax,DWORD PTR ds:[esi]
  4073b9:	jmp    0x4bb:0x732e9680
  4073c0:	std    
  4073c1:	cmp    al,0xff
  4073c3:	jne    0x407382
  4073c5:	je     0x407359
  4073c7:	push   edx
  4073c8:	sub    al,BYTE PTR [edi]
  4073ca:	xchg   ebx,eax
  4073cb:	xchg   DWORD PTR [ebx+0x4a],esi
  4073ce:	mov    es,WORD PTR [edx+0x73e8e18b]
  4073d4:	and    BYTE PTR [ebx],cl
  4073d6:	sar    DWORD PTR [esi+0x48],1
  4073d9:	xor    al,0x8e
  4073db:	jnp    0x4073ca
  4073dd:	test   DWORD PTR [esi-0x26c55e5f],ebp
  4073e3:	xchg   BYTE PTR [esi+0x1b2afb3f],al
  4073e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ea:	stos   BYTE PTR es:[edi],al
  4073eb:	shl    BYTE PTR [ebp+0x3bdbb385],1
  4073f1:	out    dx,eax
  4073f2:	clc    
  4073f3:	sub    al,0xd0
  4073f5:	mov    esi,0xe9fbf45f
  4073fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073fb:	mov    BYTE PTR [eax-0x15],dh
  4073fe:	cdq    
  4073ff:	inc    ebx
  407400:	xor    bl,BYTE PTR [esi+0x19]
  407403:	jmp    0x407480
  407405:	jbe    0x407446
  407407:	jle    0x40745f
  407409:	mov    al,ds:0xd8db66d5
  40740e:	fimul  DWORD PTR [esi]
  407410:	push   esp
  407411:	mov    ch,0x19
  407413:	pop    ecx
  407414:	push   ds
  407415:	xor    ebx,edi
  407417:	mov    eax,ds:0x6d885f21
  40741c:	dec    BYTE PTR [edi]
  40741e:	sub    al,0x17
  407420:	cmp    eax,0x6656f4dc
  407425:	or     eax,0x3f3b252d
  40742a:	sub    cl,BYTE PTR [ecx]
  40742c:	dec    esp
  40742d:	in     eax,0xed
  40742f:	in     eax,dx
  407430:	cs dec ecx
  407432:	addr16 je 0x4073b6
  407435:	push   ebx
  407436:	dec    esp
  407437:	fs adc edx,ebp
  40743a:	pop    esi
  40743b:	or     DWORD PTR [ecx+0x4c],edx
  40743e:	jle    0x5d141ddd
  407444:	neg    DWORD PTR [edx]
  407446:	dec    edi
  407447:	pop    ebp
  407448:	or     BYTE PTR [ecx+0x5204d460],dl
  40744e:	loopne 0x4074a6
  407450:	fadd   DWORD PTR [eax+0x5744cb8a]
  407456:	pop    eax
  407457:	pop    ebx
  407458:	mov    al,ds:0x57f4a76f
  40745d:	xor    eax,edx
  40745f:	(bad)  
  407460:	aam    0x71
  407462:	in     eax,0x9
  407464:	icebp  
  407465:	adc    ebp,esi
  407467:	mov    DWORD PTR [esi-0x4cf77790],0x678f07da
  407471:	iret   
  407472:	ret    
  407473:	push   edx
  407474:	fnstcw WORD PTR [ebx-0x3b]
  407477:	pcmpeqw mm2,QWORD PTR [ebp+0x53]
  40747b:	stos   BYTE PTR es:[edi],al
  40747c:	inc    eax
  40747d:	xchg   ebx,eax
  40747e:	fistp  DWORD PTR [ebp+0x66]
  407481:	cli    
  407482:	and    eax,DWORD PTR [eax+0x24]
  407485:	and    DWORD PTR [edi-0x77],esi
  407488:	pushf  
  407489:	repnz retf 0x60c5
  40748d:	imul   esp,DWORD PTR [ebx],0xffffff9a
  407490:	jecxz  0x40749d
  407492:	(bad)  
  407493:	jp     0x4074b7
  407495:	retf   
  407496:	fcom   DWORD PTR [edx]
  407498:	sub    eax,0x739418f7
  40749d:	xor    ah,ch
  40749f:	cmp    BYTE PTR [esi+edx*2],ah
  4074a2:	dec    ebp
  4074a3:	mov    BYTE PTR [esi+0x49f472a1],0x30
  4074aa:	mov    esi,DWORD PTR [ecx+0x72acce7]
  4074b0:	mov    edx,0x19dd8551
  4074b5:	inc    edi
  4074b6:	mov    dl,0xe5
  4074b8:	ret    
  4074b9:	or     ebx,DWORD PTR [eax]
  4074bb:	push   ds
  4074bc:	ss jns 0x4074f0
  4074bf:	push   0xf1040b2b
  4074c4:	xor    BYTE PTR es:[ecx+ebx*4],ch
  4074c8:	inc    edx
  4074c9:	inc    ecx
  4074ca:	pop    esp
  4074cb:	imul   ebp,DWORD PTR [edx+0x5a637173],0xd9733185
  4074d5:	aam    0x96
  4074d7:	sbb    esp,DWORD PTR [eax+edx*1+0x68]
  4074db:	add    DWORD PTR [ebp+0x67d0c960],esp
  4074e1:	inc    eax
  4074e2:	adc    eax,esi
  4074e4:	add    BYTE PTR [esi+0x25],0xa6
  4074e8:	push   0x6c
  4074ea:	jle    0x40747f
  4074ec:	cmp    al,BYTE PTR [edi+0x1a]
  4074ef:	xchg   esp,eax
  4074f0:	inc    ebp
  4074f1:	aaa    
  4074f2:	rcr    BYTE PTR [ebp-0x5b248ec3],1
  4074f8:	popf   
  4074f9:	or     BYTE PTR [edi-0xa],0x92
  4074fd:	retf   
  4074fe:	call   0xe6a8:0x9b8d1d9d
  407505:	adc    BYTE PTR [edi-0x2a71d10b],ah
  40750b:	mov    bl,0x4e
  40750d:	push   ebp
  40750e:	add    DWORD PTR [ebx-0x52fcb9b5],ebp
  407514:	sub    BYTE PTR [ebx+0x2c],ah
  407517:	mov    cl,0x79
  407519:	mov    al,ds:0xb6ca1a4b
  40751e:	in     al,dx
  40751f:	mov    bl,0x10
  407521:	sub    bl,BYTE PTR [esi+0x6a]
  407524:	mov    edi,DWORD PTR [esi-0x1a88961e]
  40752a:	xchg   ebp,eax
  40752b:	mov    dh,0x44
  40752d:	div    DWORD PTR [eax]
  40752f:	add    bh,ah
  407531:	adc    eax,0x7d9dfa48
  407536:	sbb    ebp,DWORD PTR [ebx-0x52]
  407539:	stos   DWORD PTR es:[edi],eax
  40753a:	xor    bh,BYTE PTR [ebx-0x21312aa]
  407540:	sbb    DWORD PTR [ebp+edx*2+0x3],ecx
  407544:	push   es
  407545:	and    ebx,DWORD PTR [ebx+eax*4-0x2aa7fb54]
  40754c:	vmulsd xmm7,xmm0,QWORD PTR [edi+eiz*8-0x43ae8272]
  407555:	adc    al,0x91
  407557:	sahf   
  407558:	sub    DWORD PTR [edx-0x712866c2],edx
  40755e:	pop    esi
  40755f:	and    eax,0x164ae357
  407564:	jo     0x40752c
  407566:	dec    edi
  407567:	fiadd  DWORD PTR [ecx+0x33]
  40756a:	stc    
  40756b:	lock mov edi,0x1afe87ba
  407571:	or     BYTE PTR ds:0xe62e9ffd,dl
  407577:	cmp    eax,DWORD PTR [bx+si+0x1]
  40757b:	mov    ah,0xde
  40757d:	ret    0x66f3
  407580:	add    ebp,esi
  407582:	imul   edx,esp,0x56b838d1
  407588:	into   
  407589:	(bad)  
  40758b:	pop    esi
  40758c:	pushf  
  40758d:	shr    ebx,cl
  40758f:	mov    al,ds:0x404eec59
  407594:	dec    esp
  407595:	mov    dh,0x2d
  407597:	add    eax,0x2a3fe006
  40759c:	mov    ds:0x6e1f18c,eax
  4075a1:	loop   0x407527
  4075a3:	push   0x1c
  4075a5:	pop    ss
  4075a6:	mov    bl,0x29
  4075a8:	add    al,BYTE PTR [ebx+0x71]
  4075ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ac:	mov    ds,ebx
  4075ae:	stos   DWORD PTR es:[edi],eax
  4075af:	(bad)  
  4075b0:	retf   
  4075b1:	pop    eax
  4075b2:	(bad)  
  4075b3:	iret   
  4075b4:	fnstsw WORD PTR [edi+esi*1]
  4075b7:	ss test eax,0xa7045e81
  4075bd:	std    
  4075be:	sub    DWORD PTR cs:[ebx-0x61],esp
  4075c2:	dec    edi
  4075c3:	and    DWORD PTR [ebx-0x18],0xc0c1d84e
  4075ca:	xor    ch,BYTE PTR [esi]
  4075cc:	xchg   BYTE PTR [ebx-0x70],dh
  4075cf:	in     eax,dx
  4075d0:	mov    dl,0xe8
  4075d2:	rol    BYTE PTR [ecx-0x1e],cl
  4075d5:	popf   
  4075d6:	gs inc ecx
  4075d8:	ror    dh,cl
  4075da:	mov    ebx,0x5808e2d0
  4075df:	mul    BYTE PTR [edx]
  4075e1:	push   edx
  4075e2:	es int3 
  4075e4:	pop    ecx
  4075e5:	jl     0x4075bc
  4075e7:	scas   al,BYTE PTR es:[edi]
  4075e8:	mov    esi,0xec01453f
  4075ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ee:	mov    BYTE PTR [edx+0x10],0x39
  4075f2:	repz aam 0xa4
  4075f5:	pop    esi
  4075f6:	sbb    eax,0x77d4663
  4075fb:	scas   al,BYTE PTR es:[edi]
  4075fc:	push   cs
  4075fd:	js     0x40767e
  4075ff:	stos   BYTE PTR es:[edi],al
  407600:	lds    ebx,FWORD PTR [edi-0x7be7defe]
  407606:	push   ecx
  407607:	les    ecx,FWORD PTR [esi-0x7e]
  40760a:	fwait
  40760b:	push   esi
  40760c:	lock retf 
  40760e:	adc    BYTE PTR [ecx-0x30],0xe1
  407612:	in     al,0x8c
  407614:	xchg   edi,eax
  407615:	pushf  
  407616:	mov    edx,DWORD PTR [eax-0x71d33a49]
  40761c:	push   es
  40761d:	add    bl,bh
  40761f:	pop    ds
  407620:	js     0x40766e
  407622:	aad    0x1a
  407624:	pop    esp
  407625:	int3   
  407626:	jno    0x4075d0
  407628:	xor    al,0x6d
  40762a:	(bad)  
  40762c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40762d:	rcr    BYTE PTR [eax+0x28274a4],cl
  407633:	int3   
  407634:	push   eax
  407635:	sbb    dl,al
  407637:	out    0xa4,al
  407639:	and    eax,edi
  40763b:	rcr    DWORD PTR [ebx-0x33566450],cl
  407641:	jmp    0x291aac08
  407646:	mov    bh,0x17
  407648:	paddusw mm4,mm5
  40764b:	mov    cl,0x9f
  40764d:	(bad)  
  40764e:	popa   
  40764f:	mov    eax,0x329bc09e
  407654:	mov    eax,0x41ef7810
  407659:	pushf  
  40765a:	push   cs
  40765b:	inc    ebp
  40765c:	(bad)  
  40765d:	test   DWORD PTR [ebp-0x3c],ebp
  407660:	outs   dx,BYTE PTR ds:[esi]
  407661:	mov    ecx,DWORD PTR [ebx]
  407663:	mov    bl,0x56
  407665:	sub    BYTE PTR [edi],bh
  407667:	push   esp
  407668:	mov    bh,bh
  40766a:	jne    0x4076a4
  40766c:	cwde   
  40766d:	gs pop esp
  40766f:	jo     0x407658
  407671:	jecxz  0x4076c4
  407673:	sub    DWORD PTR [ebp+eiz*8+0x26b102d1],ebp
  40767a:	dec    edx
  40767b:	leave  
  40767c:	cmp    ch,al
  40767e:	hlt    
  40767f:	mov    ecx,0xf5332d73
  407684:	pop    esp
  407685:	ficom  DWORD PTR [esp+ecx*1+0x56]
  407689:	push   cs
  40768a:	push   es
  40768b:	dec    ebp
  40768c:	mov    bh,0x65
  40768e:	push   cs
  40768f:	or     bh,BYTE PTR [ecx-0x5bc58d5c]
  407695:	into   
  407696:	pop    esi
  407697:	mov    esi,0x22ef3f79
  40769c:	lods   al,BYTE PTR ds:[esi]
  40769d:	or     BYTE PTR [ecx],dl
  40769f:	pop    ebp
  4076a0:	adc    DWORD PTR [eax-0x1e],ecx
  4076a3:	xor    esi,ebp
  4076a5:	ins    DWORD PTR es:[edi],dx
  4076a6:	and    edx,esp
  4076a8:	jecxz  0x40763e
  4076aa:	mov    dl,0x4
  4076ac:	frstor [edx]
  4076ae:	sahf   
  4076af:	shl    dh,1
  4076b1:	sti    
  4076b2:	pop    ebp
  4076b3:	test   BYTE PTR ds:0xf1834a64,dl
  4076b9:	jl     0x40772f
  4076bb:	mov    ah,0xdf
  4076bd:	adc    DWORD PTR [esi-0x54],ecx
  4076c0:	jecxz  0x407662
  4076c2:	sub    edi,DWORD PTR [ebp+0x27]
  4076c5:	mov    edx,0xcee447cb
  4076ca:	dec    eax
  4076cb:	aas    
  4076cc:	les    esi,FWORD PTR [ebx+ecx*2-0x4b]
  4076d0:	mov    al,0x4f
  4076d2:	or     edx,esi
  4076d4:	add    eax,0x6d1c8204
  4076d9:	lock sub ebp,DWORD PTR [ebp-0x2f762153]
  4076e0:	shl    DWORD PTR [ebx+0x4e],cl
  4076e3:	imul   eax,DWORD PTR ds:0xc59e92da,0x24
  4076ea:	pop    eax
  4076eb:	cmp    ch,al
  4076ed:	mov    ds:0x31c40622,eax
  4076f2:	repnz in al,0x84
  4076f5:	push   DWORD PTR [ebx-0x4d1e2cf9]
  4076fb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4076fd:	adc    al,0xb5
  4076ff:	cmc    
  407700:	pop    edx
  407701:	sub    esi,DWORD PTR [eax]
  407703:	sar    BYTE PTR [ebx],cl
  407705:	js     0x40770c
  407707:	in     al,0x16
  407709:	sub    eax,DWORD PTR [edx+0x1750a628]
  40770f:	fucomip st,st(1)
  407712:	stos   BYTE PTR es:[edi],al
  407713:	pop    ecx
  407714:	xchg   sp,ax
  407716:	push   eax
  407717:	rcl    DWORD PTR [eax],cl
  407719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40771a:	push   0xc0b58c3e
  40771f:	sub    eax,DWORD PTR [ebx+0x5dde09f0]
  407725:	sub    dl,BYTE PTR gs:[ecx-0x57]
  407729:	dec    esp
  40772a:	loope  0x4076b0
  40772c:	dec    ebx
  40772d:	shr    DWORD PTR [ebx+0x6292d93f],1
  407733:	xor    eax,0xe1c6bb5e
  407738:	imul   edi,DWORD PTR [esi+ebp*8+0x5c],0xc806d52c
  407740:	pop    ebx
  407741:	sub    ecx,DWORD PTR [ebp-0x46642446]
  407747:	or     ecx,esp
  407749:	rcr    BYTE PTR [ebx+0x5636ed27],0x70
  407750:	or     al,dh
  407752:	jnp    0x40773c
  407754:	cdq    
  407755:	xor    DWORD PTR [edx],esi
  407757:	cdq    
  407758:	scas   eax,DWORD PTR es:[edi]
  407759:	mov    ebp,0xc94550d7
  40775e:	and    DWORD PTR [edx+0x685f858],ecx
  407764:	adc    BYTE PTR [ebx],dl
  407766:	inc    ebp
  407767:	jnp    0x407772
  407769:	mov    ds:0xf37a3e80,al
  40776e:	iret   
  40776f:	shl    BYTE PTR [ebx+0x32],0x2c
  407773:	fcomp  st(0)
  407775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407776:	adc    al,0xaa
  407778:	idiv   BYTE PTR [esi]
  40777a:	fstp   TBYTE PTR [eax-0x49421776]
  407780:	cmp    esi,DWORD PTR [edx-0x39]
  407783:	lahf   
  407784:	rcl    DWORD PTR [edx+0x2563ca50],0xb
  40778b:	add    BYTE PTR [edi],ah
  40778d:	ja     0x4077a2
  40778f:	pop    ebp
  407790:	shl    BYTE PTR [ecx],cl
  407792:	cmp    BYTE PTR [ebx-0x62],0xd6
  407796:	bound  ebp,QWORD PTR [eax]
  407798:	sub    BYTE PTR [ecx-0x656ede4c],bh
  40779e:	sbb    BYTE PTR [eax+edx*8],dl
  4077a1:	pop    esp
  4077a2:	mov    ch,al
  4077a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077a5:	inc    ebx
  4077a6:	push   ebx
  4077a7:	push   edx
  4077a8:	inc    edi
  4077a9:	(bad)  
  4077aa:	lock nop
  4077ac:	in     al,dx
  4077ad:	repnz inc ebx
  4077af:	ret    0xe39f
  4077b2:	xchg   ecx,eax
  4077b3:	sti    
  4077b4:	inc    edx
  4077b5:	ret    0x6daf
  4077b8:	sub    DWORD PTR [eax-0x1a],0x6011077e
  4077bf:	sti    
  4077c0:	sbb    ebx,DWORD PTR [esi+0x310e0a12]
  4077c6:	es and eax,0x82767429
  4077cc:	les    edx,FWORD PTR [edx]
  4077ce:	pop    edx
  4077cf:	retf   0xbc6
  4077d2:	ins    DWORD PTR es:[edi],dx
  4077d3:	jo     0x4077e2
  4077d5:	add    DWORD PTR [edi-0x4ebfd97c],ebx
  4077db:	mov    ecx,0x4d743ed0
  4077e0:	(bad)  
  4077e1:	pop    edx
  4077e2:	fisttp QWORD PTR [eax]
  4077e4:	jae    0x40785e
  4077e6:	xor    ecx,ebp
  4077e8:	mov    ecx,0xe2730c2b
  4077ed:	or     DWORD PTR [ecx+0x20874dd2],ebx
  4077f3:	loopne 0x40777d
  4077f5:	stos   BYTE PTR es:[edi],al
  4077f6:	mov    dl,0x38
  4077f8:	ficomp WORD PTR [edi]
  4077fa:	nop
  4077fb:	test   eax,0x2b133eb5
  407800:	sub    eax,0xf8b23207
  407805:	fldcw  WORD PTR [eax+0x44172212]
  40780b:	mov    esp,0xf112ab49
  407810:	cli    
  407811:	stos   DWORD PTR es:[edi],eax
  407812:	or     edx,DWORD PTR [ebx-0x5d]
  407815:	xor    bl,dh
  407817:	shl    BYTE PTR [edi+0x77fff44f],0x18
  40781e:	push   cs
  40781f:	push   0x23
  407821:	jmp    0x93c45107
  407826:	gs fmulp st(3),st
  407829:	in     al,0x62
  40782b:	out    dx,al
  40782c:	adc    ebp,DWORD PTR [ebx+esi*8-0x7235e366]
  407833:	repnz test DWORD PTR [eax-0x56e785d5],eax
  40783a:	add    edi,0x7f
  40783d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40783e:	out    0xdb,al
  407840:	jns    0x407844
  407842:	or     eax,ecx
  407844:	xor    ecx,DWORD PTR [eax-0x5c9479cb]
  40784a:	iret   
  40784b:	test   al,0x60
  40784d:	xchg   ebx,eax
  40784e:	fld    QWORD PTR [eax]
  407850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407851:	adc    al,0xc8
  407853:	xchg   edi,eax
  407854:	xor    DWORD PTR [ecx-0x339b4e92],ebp
  40785a:	xor    eax,0xb4e88af0
  40785f:	cdq    
  407860:	add    DWORD PTR [ebx-0x69],esp
  407863:	jp     0x40789a
  407865:	xor    eax,0x232fb272
  40786a:	call   0x345e66e7
  40786f:	or     DWORD PTR [ecx+0x20],esi
  407872:	repz fcomp DWORD PTR [eax]
  407875:	call   0x8f7211cc
  40787a:	icebp  
  40787b:	lods   eax,DWORD PTR ds:[esi]
  40787c:	fnsave [ecx-0x2d824ebe]
  407882:	mov    ah,cl
  407884:	nop
  407885:	mov    esp,0xbb44885f
  40788a:	cmp    DWORD PTR [ecx],ebx
  40788c:	mov    edi,eax
  40788e:	xchg   ebx,eax
  40788f:	xchg   esi,eax
  407890:	add    eax,0x276c7881
  407895:	push   edx
  407896:	out    0x2b,eax
  407898:	std    
  407899:	sar    edx,1
  40789b:	sbb    ch,0x7a
  40789e:	xchg   ebp,eax
  40789f:	mov    cl,0x7e
  4078a1:	inc    esi
  4078a2:	(bad)  
  4078a3:	push   es
  4078a4:	out    dx,al
  4078a5:	ret    0xf107
  4078a8:	mov    ds:0x9a85e368,eax
  4078ad:	and    eax,0xf12d0fc8
  4078b2:	hlt    
  4078b3:	jge    0x407920
  4078b5:	(bad)  
  4078b6:	fisub  DWORD PTR [esi-0x67432923]
  4078bc:	lahf   
  4078bd:	push   0xffffff97
  4078bf:	cwde   
  4078c0:	push   edx
  4078c1:	fwait
  4078c2:	xchg   esp,eax
  4078c3:	in     al,dx
  4078c4:	or     dh,BYTE PTR [edi+eiz*2]
  4078c7:	dec    eax
  4078c8:	and    DWORD PTR [edi-0x47],ebx
  4078cb:	scas   al,BYTE PTR es:[edi]
  4078cc:	imul   ebx,DWORD PTR [ebp+0x6c],0x680c5283
  4078d3:	sub    al,0xff
  4078d5:	jns    0x407857
  4078d7:	icebp  
  4078d8:	(bad)  
  4078d9:	fild   QWORD PTR [edi+0x78]
  4078dc:	cdq    
  4078dd:	les    edx,FWORD PTR [ebx-0xca268f6]
  4078e3:	pop    esi
  4078e4:	lods   eax,DWORD PTR ds:[esi]
  4078e5:	icebp  
  4078e6:	imul   DWORD PTR [edx]
  4078e8:	push   eax
  4078e9:	ss repz jge 0x407909
  4078ed:	(bad)  [ebp+ecx*1+0x13]
  4078f1:	ret    0x2dab
  4078f4:	cld    
  4078f5:	sbb    dl,BYTE PTR [edi+0x6c7d6a3c]
  4078fb:	jmp    0xe65f8dfd
  407900:	sub    dh,BYTE PTR [ecx]
  407902:	mov    eax,0x11c2d1a
  407907:	bound  edx,QWORD PTR [edx+0x3]
  40790a:	sbb    edx,DWORD PTR [esi+0x59]
  40790d:	add    dl,BYTE PTR [eax+edx*4+0x4f]
  407911:	xor    BYTE PTR [ecx+0x76],cl
  407914:	adc    BYTE PTR [eax+0x63],ch
  407917:	adc    al,0x77
  407919:	xor    ebx,DWORD PTR [edi+ebx*8-0x7f]
  40791d:	das    
  40791e:	push   0x86962459
  407923:	clc    
  407924:	fcom   DWORD PTR [ecx+0x773ddeac]
  40792a:	cld    
  40792b:	fiadd  DWORD PTR [eax+0x3ce32029]
  407931:	adc    al,0x41
  407933:	push   esp
  407934:	and    dl,bl
  407936:	mov    dh,0xa1
  407938:	loope  0x407938
  40793a:	push   edx
  40793b:	sub    ecx,DWORD PTR [edx+0x6c]
  40793e:	imul   esp,DWORD PTR [esi-0xe],0xc592e45d
  407945:	mov    dh,0x78
  407947:	in     eax,dx
  407948:	push   ecx
  407949:	sbb    bl,BYTE PTR [edx-0x67]
  40794c:	rcr    bl,cl
  40794e:	into   
  40794f:	pop    edi
  407950:	pop    ebx
  407951:	ds hlt 
  407953:	jo     0x40796b
  407955:	xor    edx,DWORD PTR ds:0xd2d0d595
  40795b:	lods   eax,DWORD PTR ds:[esi]
  40795c:	or     esp,DWORD PTR [ebx+edx*2]
  40795f:	cld    
  407960:	mov    ds:0xfdffd1f6,eax
  407965:	adc    eax,0x310b7f44
  40796a:	(bad)  
  40796b:	jnp    0x407950
  40796d:	mov    dl,BYTE PTR [edi+edi*4]
  407970:	outs   dx,BYTE PTR ds:[esi]
  407971:	int3   
  407972:	inc    esi
  407973:	test   eax,0x3cb97823
  407978:	xlat   BYTE PTR ds:[ebx]
  407979:	jecxz  0x407935
  40797b:	pop    edi
  40797c:	push   esi
  40797d:	repnz xor edx,DWORD PTR [esi+0x201c485c]
  407984:	push   eax
  407985:	in     eax,0x75
  407987:	(bad)  
  407988:	xor    eax,DWORD PTR [ebp+0x6bdc153]
  40798e:	sub    edx,DWORD PTR [edi+0x44]
  407991:	std    
  407992:	aaa    
  407993:	adc    al,dl
  407995:	out    dx,eax
  407996:	call   0x6609:0x6b8c6be7
  40799d:	test   al,0x5c
  40799f:	popa   
  4079a0:	adc    ebx,esp
  4079a2:	xor    eax,0x3e3c7309
  4079a7:	add    ebx,edx
  4079a9:	iret   
  4079aa:	xchg   edx,eax
  4079ab:	test   DWORD PTR ds:0xc6c7,edx
  4079b0:	sbb    ah,BYTE PTR [ecx]
  4079b2:	mov    esp,0x6e6edb5d
  4079b7:	dec    edx
  4079b8:	cmp    BYTE PTR [eax+ebx*4+0x58],dh
  4079bc:	lds    ecx,FWORD PTR [esi+0x155507c5]
  4079c2:	sti    
  4079c3:	adc    cl,ah
  4079c5:	jl     0x40795a
  4079c7:	inc    ebx
  4079c8:	push   edi
  4079c9:	jecxz  0x40799e
  4079cb:	jne    0x407a08
  4079cd:	pop    ss
  4079ce:	add    ecx,ebp
  4079d0:	pop    eax
  4079d1:	(bad)  
  4079d2:	fs gs inc ebp
  4079d5:	xchg   edx,eax
  4079d6:	fdiv   DWORD PTR [eax+0x615b2ac3]
  4079dc:	adc    esi,ebx
  4079de:	mov    ebx,0xe2c8530c
  4079e3:	xor    BYTE PTR [bx],0x3b
  4079e7:	jns    0x40799d
  4079e9:	outs   dx,BYTE PTR ds:[esi]
  4079ea:	jne    0x407984
  4079ec:	(bad)  
  4079ed:	das    
  4079ee:	outs   dx,DWORD PTR ds:[esi]
  4079ef:	nop
  4079f0:	pop    ds
  4079f1:	pop    esp
  4079f2:	mov    edx,0x34211e9f
  4079f7:	cwde   
  4079f8:	or     al,0x46
  4079fa:	setge  BYTE PTR [ebx]
  4079fd:	es add al,0x93
  407a00:	sbb    eax,0xbddcb9ba
  407a05:	les    esi,FWORD PTR es:[ebp+0x3d3ec595]
  407a0c:	pop    ebp
  407a0d:	loop   0x407a7c
  407a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a10:	mov    esi,0xa643d98b
  407a15:	dec    esp
  407a16:	call   0x847e:0x2aa3e2cd
  407a1d:	and    DWORD PTR [ebx-0x3],0xffffff9c
  407a21:	dec    ecx
  407a22:	pop    ds
  407a23:	mov    ah,0x4
  407a25:	les    eax,FWORD PTR [eax-0x43f9c3b5]
  407a2b:	or     DWORD PTR [ecx],ebp
  407a2d:	xchg   BYTE PTR [eax-0x1d],bl
  407a30:	shl    DWORD PTR [edx],1
  407a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a33:	fdiv   QWORD PTR [edi]
  407a35:	call   0xdab6:0xfbcabf3d
  407a3c:	jp     0x4079c6
  407a3e:	es int3 
  407a40:	inc    ecx
  407a41:	fiadd  DWORD PTR [ecx+eiz*2+0x2e8033e9]
  407a48:	mov    ds:0xe12cc196,al
  407a4d:	push   0x73
  407a4f:	sbb    bh,BYTE PTR [ecx]
  407a51:	in     eax,dx
  407a52:	or     DWORD PTR [esp+ebx*1-0x5574b3],ebp
  407a59:	mov    ebx,DWORD PTR [edx]
  407a5b:	retf   0xfba2
  407a5e:	sahf   
  407a5f:	jecxz  0x407ac4
  407a61:	or     ebx,edi
  407a63:	dec    eax
  407a64:	ins    DWORD PTR es:[edi],dx
  407a65:	scas   al,BYTE PTR es:[edi]
  407a66:	xchg   edx,eax
  407a67:	pop    esi
  407a68:	cs daa 
  407a6a:	bound  eax,QWORD PTR [esi-0x5b]
  407a6d:	fstp   st(2)
  407a6f:	fmulp  st(7),st
  407a71:	jno    0x407a00
  407a73:	mov    edi,0x74f85fca
  407a78:	pop    ss
  407a79:	and    eax,0x99cfeed3
  407a7e:	jnp    0x407aa0
  407a80:	cmp    BYTE PTR [edx-0x30],0x91
  407a84:	cmp    esp,DWORD PTR [ecx]
  407a86:	bound  edx,QWORD PTR cs:[ebx-0x29]
  407a8a:	in     al,0x20
  407a8c:	jo     0x407b07
  407a8e:	sar    DWORD PTR [ebp+0x79],0x86
  407a92:	loopne 0x407b04
  407a94:	cmp    al,0x1c
  407a96:	dec    ebx
  407a97:	scas   eax,DWORD PTR es:[edi]
  407a98:	xchg   edx,eax
  407a99:	mov    edx,0x5b3b861e
  407a9e:	add    ecx,DWORD PTR [ebx+0x48a60efd]
  407aa4:	cli    
  407aa5:	pop    ebp
  407aa6:	test   DWORD PTR [ebp+0xd],0xd8fd5c5e
  407aad:	pop    ss
  407aae:	sbb    bh,BYTE PTR [eax]
  407ab0:	inc    esp
  407ab1:	mov    eax,0x22faf68a
  407ab6:	(bad)  
  407ab7:	sub    al,0x8e
  407ab9:	and    eax,0xdff128b4
  407abe:	push   ss
  407abf:	mov    WORD PTR [eax-0x40],?
  407ac2:	imul   eax,DWORD PTR [edx+0x91a8de1],0x17d78bf1
  407acc:	push   es
  407acd:	add    eax,0xd763fc73
  407ad2:	shl    BYTE PTR [edi+eax*2+0x4e],cl
  407ad6:	cmp    edi,DWORD PTR es:[esi-0x2685e716]
  407add:	pop    esi
  407ade:	adc    al,0xf3
  407ae0:	outs   dx,DWORD PTR ds:[esi]
  407ae1:	or     BYTE PTR [ecx-0x592e46eb],dh
  407ae7:	stos   DWORD PTR es:[edi],eax
  407ae8:	fld    DWORD PTR [eax-0x30]
  407aeb:	pop    edx
  407aec:	in     al,dx
  407aed:	retf   
  407aee:	pushf  
  407aef:	add    bh,ch
  407af1:	pop    esp
  407af2:	inc    ecx
  407af3:	psrld  mm2,QWORD PTR [esi]
  407af6:	shl    DWORD PTR [esi+0x18],cl
  407af9:	rcr    DWORD PTR [ebp-0x18f94135],0xcb
  407b00:	mov    dl,0x1c
  407b02:	rcl    DWORD PTR [ecx],1
  407b04:	aam    0xd8
  407b06:	test   BYTE PTR [ebp+0x1],0x3
  407b0a:	stc    
  407b0b:	rcr    BYTE PTR [ecx-0x306efe0b],cl
  407b11:	cld    
  407b12:	aam    0x31
  407b14:	sub    DWORD PTR [ebp+0x4d],eax
  407b17:	or     dl,BYTE PTR [ebx+0x3f6aab14]
  407b1d:	call   0x374c:0xb29de1d1
  407b24:	mov    BYTE PTR [edx+0x2512cded],bh
  407b2a:	xor    al,0xf1
  407b2c:	mov    edi,0xc64d3b73
  407b31:	cmp    ecx,DWORD PTR [edi-0x72]
  407b34:	jae    0x407b19
  407b36:	or     ecx,ebp
  407b38:	xor    bl,BYTE PTR ds:0x521cd8e0
  407b3e:	adc    edi,DWORD PTR ds:0x1cd9dd31
  407b44:	xchg   esp,eax
  407b45:	jbe    0x407b02
  407b47:	faddp  st(7),st
  407b49:	outs   dx,BYTE PTR ds:[esi]
  407b4a:	push   0xe6903cba
  407b4f:	inc    esi
  407b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b51:	out    0x4c,eax
  407b53:	sub    eax,DWORD PTR [esi+0x6]
  407b56:	fwait
  407b57:	outs   dx,BYTE PTR ds:[esi]
  407b58:	mov    eax,ds:0xe1b5e515
  407b5d:	xchg   esi,eax
  407b5e:	bnd jmp 0x3dc8f3c3
  407b64:	lods   eax,DWORD PTR ds:[esi]
  407b65:	mov    dh,0xbc
  407b67:	repz pusha 
  407b69:	fst    DWORD PTR [ebp-0x2d2c04f2]
  407b6f:	lock mov al,ds:0xe5c04738
  407b75:	aaa    
  407b76:	outs   dx,DWORD PTR ds:[esi]
  407b77:	mov    WORD PTR [ecx-0x6e],ss
  407b7a:	xor    dl,dh
  407b7c:	vmptrld QWORD PTR [esi+0x3d]
  407b80:	sbb    ebx,DWORD PTR [ebx+esi*1]
  407b83:	push   eax
  407b84:	das    
  407b85:	inc    edi
  407b86:	fcom   QWORD PTR [ebp-0x3af7b15f]
  407b8c:	cmp    DWORD PTR [ecx],esi
  407b8e:	ret    0x97d5
  407b91:	aas    
  407b92:	push   edi
  407b93:	bound  edx,QWORD PTR [edx]
  407b95:	mov    cl,0x5d
  407b97:	ds pop es
  407b99:	push   ebx
  407b9a:	xlat   BYTE PTR ds:[ebx]
  407b9b:	push   esp
  407b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b9d:	mov    ebx,0xe49e7119
  407ba2:	or     ebp,DWORD PTR [ecx]
  407ba4:	cmp    BYTE PTR [ecx-0x4b7d895e],bh
  407baa:	imul   esp,esi,0x47dc00e9
  407bb0:	lods   eax,DWORD PTR ds:[esi]
  407bb1:	jge    0x407b77
  407bb3:	inc    ebx
  407bb4:	push   cs
  407bb5:	xchg   esp,eax
  407bb6:	outs   dx,DWORD PTR ds:[si]
  407bb8:	push   cs
  407bb9:	or     eax,0xd948a749
  407bbe:	cs push ebx
  407bc0:	push   ss
  407bc1:	xchg   esp,eax
  407bc2:	xor    dl,BYTE PTR [esi+0x652f1783]
  407bc8:	sahf   
  407bc9:	je     0x407bcd
  407bcb:	mov    eax,0x330b66ed
  407bd0:	out    dx,eax
  407bd1:	add    bl,BYTE PTR [ebx+0x697c2499]
  407bd7:	push   esp
  407bd8:	mov    DWORD PTR es:[ecx+0x5620dade],esi
  407bdf:	stc    
  407be0:	mov    ah,0xc4
  407be2:	les    esp,FWORD PTR [ebp+0x2ff01c75]
  407be8:	in     eax,dx
  407be9:	mov    al,0x5e
  407beb:	leave  
  407bec:	add    BYTE PTR [esi+0x27],al
  407bef:	dec    esp
  407bf0:	adc    esi,DWORD PTR [esi]
  407bf2:	ret    0x9fb9
  407bf5:	in     al,dx
  407bf6:	out    0x4b,al
  407bf8:	imul   DWORD PTR [esi+0x1]
  407bfb:	clc    
  407bfc:	dec    eax
  407bfd:	cmp    DWORD PTR [ecx-0x35e1f276],ebx
  407c03:	int    0x17
  407c05:	push   esi
  407c06:	xchg   ebx,eax
  407c07:	(bad)  
  407c08:	stos   BYTE PTR es:[edi],al
  407c09:	push   ebp
  407c0a:	mov    edi,eax
  407c0c:	push   cs
  407c0d:	push   cs
  407c0e:	test   eax,0x911add40
  407c13:	jmp    0x407c1a
  407c15:	mov    ds:0x95581fe5,eax
  407c1a:	xchg   ebx,eax
  407c1b:	(bad)  
  407c1c:	ror    DWORD PTR ds:0x5d055d32,1
  407c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c23:	outs   dx,DWORD PTR ds:[esi]
  407c24:	inc    eax
  407c25:	jecxz  0x407c39
  407c27:	jp     0x407bc2
  407c29:	out    dx,eax
  407c2a:	div    BYTE PTR [esi]
  407c2c:	mov    ah,0x21
  407c2e:	inc    esp
  407c2f:	gs push ebx
  407c31:	mov    bl,0xa9
  407c33:	and    BYTE PTR [ecx+0x792576af],al
  407c39:	adc    ebx,DWORD PTR [edx+ecx*1]
  407c3c:	mov    al,0xde
  407c3e:	cmp    ecx,edx
  407c40:	xlat   BYTE PTR ds:[ebx]
  407c41:	gs dec esp
  407c43:	rol    BYTE PTR [ebp+eiz*8-0x14],0xf5
  407c48:	hlt    
  407c49:	mov    dh,0xeb
  407c4b:	xor    eax,0xcc85b6bc
  407c50:	xchg   ecx,eax
  407c51:	es int 0x48
  407c54:	into   
  407c55:	out    dx,eax
  407c56:	jge    0x407c34
  407c58:	cmp    al,0x22
  407c5a:	or     al,0x7c
  407c5c:	xor    eax,0x927447e8
  407c61:	cmp    ebx,DWORD PTR [eax]
  407c63:	lods   eax,DWORD PTR ds:[esi]
  407c64:	jle    0x407c3e
  407c66:	(bad)  [eax-0x36]
  407c69:	mov    BYTE PTR [ecx+0x3b],ah
  407c6c:	imul   edx,edx,0xaa3a402b
  407c72:	sub    edi,DWORD PTR [eax-0x28212b93]
  407c78:	jl     0x407cdc
  407c7a:	stc    
  407c7b:	sbb    al,0x88
  407c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c7e:	mov    ds:0x95ac11f4,al
  407c83:	mov    edi,0x4378f7ea
  407c88:	fmul   QWORD PTR [edi]
  407c8a:	call   0x4e9901e4
  407c8f:	cmp    DWORD PTR [esp+eax*4],0xffffffcb
  407c93:	fdivrp st(4),st
  407c95:	mov    ah,0xb7
  407c97:	pop    esi
  407c98:	fninit 
  407c9a:	retf   0x9d72
  407c9d:	sub    eax,0xccf660e3
  407ca2:	add    ch,cl
  407ca4:	inc    ebp
  407ca5:	test   eax,0x7b1ef45f
  407caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cab:	icebp  
  407cac:	add    esi,DWORD PTR ds:0xcfe9d287
  407cb2:	push   edx
  407cb3:	sbb    al,0xbf
  407cb5:	rcr    BYTE PTR [edx-0x66fdf00],cl
  407cbb:	adc    al,0x79
  407cbd:	pop    ebx
  407cbe:	push   es
  407cbf:	add    BYTE PTR [edx+0x4a],ch
  407cc2:	jmp    FWORD PTR [ecx-0x28e08dd8]
  407cc8:	xor    DWORD PTR [ecx-0x53],edi
  407ccb:	(bad)  
  407ccc:	and    eax,0xace87da0
  407cd1:	and    ebx,ebx
  407cd3:	out    dx,al
  407cd4:	pop    esp
  407cd5:	jmp    0xe9f081c2
  407cda:	add    esi,DWORD PTR [ebx+0x61a842a]
  407ce0:	imul   edi,edi,0xffffffd3
  407ce3:	xor    DWORD PTR [esi],0x9d353d56
  407ce9:	mov    ebx,0x983ae276
  407cee:	push   edx
  407cef:	or     bl,BYTE PTR [ecx-0x26]
  407cf2:	add    ecx,DWORD PTR [ecx]
  407cf4:	inc    ecx
  407cf5:	jb     0x407d43
  407cf7:	mov    ecx,0x9076ce2c
  407cfc:	fadd   st(6),st
  407cfe:	adc    cl,BYTE PTR [ecx-0x6a8ba537]
  407d04:	outs   dx,BYTE PTR ds:[esi]
  407d05:	neg    dl
  407d07:	or     DWORD PTR [esi],0x53
  407d0a:	jo     0x407c90
  407d0c:	jno    0x407cf2
  407d0e:	xor    dh,ch
  407d10:	sbb    DWORD PTR [edx-0x53],edx
  407d13:	or     BYTE PTR [edx-0x25],bh
  407d16:	lods   al,BYTE PTR ds:[esi]
  407d17:	xor    edx,DWORD PTR ds:0x4386ef4f
  407d1d:	xor    eax,DWORD PTR [edi+esi*2+0x46]
  407d21:	mov    dh,0xe8
  407d23:	push   ss
  407d24:	xchg   ch,cl
  407d26:	push   esi
  407d27:	xor    BYTE PTR ss:[ebp-0x206a28a5],bh
  407d2e:	jle    0x407d9b
  407d30:	jne    0x407cc8
  407d32:	sub    al,0xf
  407d34:	into   
  407d35:	(bad)  
  407d36:	ins    DWORD PTR es:[edi],dx
  407d37:	xchg   edi,eax
  407d38:	stos   DWORD PTR es:[edi],eax
  407d39:	xlat   BYTE PTR ds:[ebx]
  407d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d3b:	sub    esi,DWORD PTR [esi+edx*2+0x13]
  407d3f:	fdiv   QWORD PTR ds:0x72c8e091
  407d45:	and    BYTE PTR [ebx-0x5dccdfe8],ch
  407d4b:	adc    bl,BYTE PTR [esi+0x86c3513]
  407d51:	paddw  mm0,QWORD PTR [eax+0x7c0d3693]
  407d58:	xor    al,0x75
  407d5a:	imul   eax,DWORD PTR [ebx-0x4e],0xc
  407d5e:	pop    ebx
  407d5f:	ffree  st(3)
  407d61:	inc    eax
  407d62:	repz push eax
  407d64:	test   al,0x12
  407d66:	mul    BYTE PTR [esi-0x1f1d3ab6]
  407d6c:	lds    ebp,FWORD PTR [eax-0x42060cba]
  407d72:	inc    DWORD PTR [edi-0x749cc20f]
  407d78:	push   ecx
  407d79:	addr16 daa 
  407d7b:	adc    eax,0x5bb22af4
  407d80:	jmp    0x62aaa1f1
  407d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d86:	pop    ebp
  407d87:	cmp    DWORD PTR [eax-0x4f3d8925],0xffffff91
  407d8e:	xchg   ebp,eax
  407d8f:	push   cs
  407d90:	push   esi
  407d91:	jbe    0x407db7
  407d93:	fbstp  TBYTE PTR [edi+0x32]
  407d96:	sahf   
  407d97:	lds    ecx,FWORD PTR [ebp+edx*2+0x61]
  407d9b:	push   ds
  407d9c:	jge    0x407dca
  407d9e:	enter  0xa385,0xd9
  407da2:	pusha  
  407da3:	jne    0x407e01
  407da5:	or     BYTE PTR [esi],dl
  407da7:	dec    ebx
  407da8:	mov    ebp,0x184fe36a
  407dad:	call   0x9f08dd7e
  407db2:	js     0x407d8e
  407db4:	outs   dx,BYTE PTR ds:[esi]
  407db5:	adc    eax,0xd583427
  407dba:	jle    0x407db9
  407dbc:	mov    ebx,DWORD PTR [edi]
  407dbe:	jecxz  0x407db8
  407dc0:	xchg   ebp,eax
  407dc1:	jnp    0x407e16
  407dc3:	jnp    0x407e1d
  407dc5:	pop    esi
  407dc6:	retf   
  407dc7:	and    ecx,ecx
  407dc9:	in     eax,dx
  407dca:	lds    ebp,FWORD PTR [edi]
  407dcc:	add    al,0x8a
  407dce:	pop    edi
  407dcf:	xchg   edi,eax
  407dd0:	xchg   ecx,eax
  407dd1:	adc    edx,DWORD PTR [ebx+0x147d45b1]
  407dd7:	mov    bh,0x86
  407dd9:	in     eax,0x44
  407ddb:	lods   eax,DWORD PTR ds:[esi]
  407ddc:	adc    al,0xeb
  407dde:	out    dx,al
  407ddf:	in     eax,0x11
  407de1:	popa   
  407de2:	xchg   esp,eax
  407de3:	inc    esp
  407de4:	xchg   bh,dh
  407de6:	int    0x5d
  407de8:	cmp    ebp,DWORD PTR [edx]
  407dea:	cwde   
  407deb:	je     0x407d6d
  407ded:	adc    al,0x94
  407def:	inc    edi
  407df0:	test   bh,dl
  407df2:	popa   
  407df3:	(bad)  
  407df4:	jp     0x407e60
  407df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df7:	nop
  407df8:	and    ch,al
  407dfa:	stc    
  407dfb:	rol    BYTE PTR [edx],cl
  407dfd:	cwde   
  407dfe:	popa   
  407dff:	push   0xc92d5e58
  407e04:	xchg   esi,eax
  407e05:	sub    al,0x59
  407e07:	or     ch,dh
  407e09:	(bad)  
  407e0b:	xchg   ebx,eax
  407e0c:	and    ebx,ebx
  407e0e:	xchg   BYTE PTR ds:0x6e956dab,ah
  407e14:	pop    ecx
  407e15:	xchg   DWORD PTR [bp+si-0x7b9],esi
  407e1a:	(bad)  
  407e1b:	sbb    DWORD PTR [edx+edi*2+0x5094beea],esp
  407e22:	std    
  407e23:	test   eax,0x4a1c5b12
  407e28:	les    ebp,FWORD PTR [ebp-0x60]
  407e2b:	jge    0x407e3c
  407e2d:	arpl   cx,si
  407e2f:	sub    al,BYTE PTR [ebx-0x70]
  407e32:	sub    dh,ah
  407e34:	push   ebx
  407e35:	fwait
  407e36:	xchg   edi,eax
  407e37:	int    0x62
  407e39:	ret    
  407e3a:	xchg   DWORD PTR [esi+0x52d88c60],ebx
  407e40:	repz pusha 
  407e42:	nop
  407e43:	stc    
  407e44:	sar    edi,cl
  407e46:	jbe    0x407e90
  407e48:	or     dl,BYTE PTR [ecx-0x61]
  407e4b:	fs (bad) 
  407e4e:	push   cs
  407e4f:	add    eax,0x7216229a
  407e54:	inc    ebp
  407e55:	icebp  
  407e56:	test   DWORD PTR [ebx+0x2429ea0b],esp
  407e5c:	lds    esp,FWORD PTR [edi-0x3bb3535e]
  407e62:	or     dh,BYTE PTR [ebp-0x7eb42e3d]
  407e68:	jg     0x407e8a
  407e6a:	loop   0x407e31
  407e6c:	lea    edx,[esi+0x7e1e5123]
  407e72:	and    dh,BYTE PTR [ebp-0x43]
  407e75:	pop    edi
  407e76:	dec    ebx
  407e77:	inc    edi
  407e78:	mov    eax,ds:0x8fcc215d
  407e7d:	ret    
  407e7e:	je     0x407eb2
  407e80:	test   DWORD PTR [edi+0xe],ebp
  407e83:	cmp    dl,BYTE PTR [edx]
  407e85:	or     BYTE PTR [esi+0x597c9f74],cl
  407e8b:	mov    ecx,0xe9de3415
  407e90:	xor    eax,DWORD PTR [eax]
  407e92:	push   esi
  407e93:	icebp  
  407e94:	sbb    eax,0x1d72c407
  407e99:	sbb    BYTE PTR [esi-0x77],ah
  407e9c:	(bad)  
  407e9d:	imul   ebp,DWORD PTR ds:0x58daf9c5,0xbb53081a
  407ea7:	jmp    0x407e55
  407ea9:	adc    ebp,0x19
  407eac:	(bad)  
  407ead:	xor    BYTE PTR [esi+edi*1-0x3075b66],cl
  407eb4:	sbb    eax,0xbc99a156
  407eb9:	xor    DWORD PTR [edx-0x2e],esi
  407ebc:	addr16 out 0xb7,eax
  407ebf:	pop    ds
  407ec0:	in     al,dx
  407ec1:	add    edx,DWORD PTR [ecx]
  407ec3:	inc    edi
  407ec4:	in     al,dx
  407ec5:	mov    esp,0xb485111
  407eca:	das    
  407ecb:	sbb    DWORD PTR [esi+0x5b],edi
  407ece:	mov    al,ds:0xfedcda85
  407ed3:	cmp    bh,BYTE PTR ds:0xc612300a
  407ed9:	or     BYTE PTR [edi+0x8116f9b],cl
  407edf:	shr    BYTE PTR [ebx+0x73],cl
  407ee2:	jns    0x407f42
  407ee4:	fst    st(3)
  407ee6:	fucom  st(3)
  407ee8:	push   0xffffffca
  407eea:	mov    BYTE PTR [ebp-0x7ebc3ccc],dh
  407ef0:	push   edi
  407ef1:	cmp    BYTE PTR [ebx+0x69f46338],0xc6
  407ef8:	push   ecx
  407ef9:	mov    ds:0x60ef2daf,eax
  407efe:	pop    edx
  407eff:	lds    esi,FWORD PTR [esi-0x3c]
  407f02:	mov    ebx,0x892756d8
  407f07:	pop    eax
  407f08:	mov    cl,BYTE PTR [ebx-0x6a]
  407f0b:	test   eax,0xdc871137
  407f10:	sbb    al,0xd6
  407f12:	push   esi
  407f13:	in     al,0x70
  407f15:	inc    edi
  407f16:	rdpmc  
  407f18:	adc    ebp,ebp
  407f1a:	lock leave 
  407f1c:	mov    eax,DWORD PTR [edi-0x1b]
  407f1f:	cld    
  407f20:	dec    ebp
  407f21:	test   DWORD PTR [esi-0x3c],esi
  407f24:	mov    fs,WORD PTR [edi-0x16]
  407f27:	inc    edi
  407f28:	mov    DWORD PTR [edx],esi
  407f2a:	test   eax,0x8ead06
  407f2f:	ja     0x407ef6
  407f31:	xlat   BYTE PTR ds:[ebx]
  407f32:	or     DWORD PTR [esi-0x37110c69],ebx
  407f38:	mov    DWORD PTR [ebx+0x30],ebx
  407f3b:	mov    BYTE PTR [eax+0x7cfce70],al
  407f41:	jns    0x407edb
  407f43:	mov    ecx,0xa6352737
  407f48:	add    DWORD PTR [edi+0x41],esp
  407f4b:	je     0x407f1b
  407f4d:	add    al,0x77
  407f4f:	addr16 xchg edx,eax
  407f51:	jnp    0x407f1b
  407f53:	mov    al,0x28
  407f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f56:	pop    eax
  407f57:	sbb    DWORD PTR [eax],ebp
  407f59:	stc    
  407f5a:	rcr    DWORD PTR [ebx],0xa6
  407f5d:	inc    esp
  407f5e:	in     al,dx
  407f5f:	daa    
  407f60:	and    cl,bh
  407f62:	aam    0xd3
  407f64:	neg    BYTE PTR [edx]
  407f66:	xchg   edi,eax
  407f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f68:	les    ebx,FWORD PTR [ecx]
  407f6a:	add    edx,edx
  407f6c:	push   esp
  407f6d:	pop    esi
  407f6e:	cdq    
  407f6f:	mov    bh,0x8c
  407f71:	cli    
  407f72:	popf   
  407f73:	lock shl DWORD PTR [edi+0x68523c86],1
  407f7a:	xlat   BYTE PTR ds:[ebx]
  407f7b:	mov    ch,0x7a
  407f7d:	addr16 pop edx
  407f7f:	jb     0x407f69
  407f81:	ds mov dh,0x1c
  407f84:	sahf   
  407f85:	in     al,dx
  407f86:	out    0xb2,al
  407f88:	clc    
  407f89:	pop    edi
  407f8a:	stos   BYTE PTR es:[edi],al
  407f8b:	dec    edx
  407f8c:	lahf   
  407f8d:	out    0x5c,al
  407f8f:	out    dx,eax
  407f90:	repz pop es
  407f92:	xor    DWORD PTR [ecx],edi
  407f94:	jbe    0x407f56
  407f96:	inc    ebx
  407f97:	xchg   ebx,eax
  407f98:	sub    DWORD PTR [bp+di+0x7108],eax
  407f9d:	mov    ebx,0xf3783b41
  407fa2:	aas    
  407fa3:	sbb    eax,0xcf8d26a6
  407fa8:	shr    BYTE PTR [edi],1
  407faa:	ja     0x407fe2
  407fac:	push   0xef205d2
  407fb1:	cmp    bl,bh
  407fb3:	aad    0xc1
  407fb5:	add    eax,0x3b030210
  407fba:	push   ecx
  407fbb:	aad    0x88
  407fbd:	cld    
  407fbe:	outs   dx,DWORD PTR ds:[esi]
  407fbf:	mov    al,ds:0xb18c68f
  407fc4:	std    
  407fc5:	cld    
  407fc6:	xchg   edi,eax
  407fc7:	mov    cl,BYTE PTR [ebx+ebp*8-0x34]
  407fcb:	stc    
  407fcc:	sbb    DWORD PTR [edi+0x11b461c9],0x73
  407fd3:	jmp    DWORD PTR [esi]
  407fd5:	xor    eax,DWORD PTR [edx+0x5d]
  407fd8:	jno    0x407fed
  407fda:	aas    
  407fdb:	dec    ebx
  407fdc:	push   esp
  407fdd:	add    eax,0xfecba530
  407fe2:	cmc    
  407fe3:	loopne 0x407fe8
  407fe5:	je     0x408056
  407fe7:	in     al,dx
  407fe8:	mov    ch,0xf3
  407fea:	mov    edi,0x84e062b4
  407fef:	lock inc ebx
  407ff1:	fiadd  DWORD PTR [eax-0x2cbfb322]
  407ff7:	dec    ebx
  407ff8:	pavgb  mm6,QWORD PTR [eax-0x90588e]
  407fff:	push   edx
  408000:	fwait
  408001:	ss addr16 cmc 
  408004:	repz jge 0x407f9d
  408007:	aad    0x5b
  408009:	sbb    edx,edi
  40800b:	fs imul edx,esi,0xffffffe2
  40800f:	jnp    0x407fc9
  408011:	xchg   ebp,eax
  408012:	xchg   esp,eax
  408013:	inc    ebp
  408014:	gs jb  0x40807f
  408017:	dec    eax
  408018:	pushf  
  408019:	sub    edx,DWORD PTR [ecx+0xe4d0fd9]
  40801f:	dec    edx
  408020:	daa    
  408021:	push   esp
  408022:	jle    0x408073
  408024:	hlt    
  408025:	in     al,dx
  408026:	mov    DWORD PTR [ecx],edi
  408028:	test   BYTE PTR [ecx-0x41],0x62
  40802c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40802d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40802e:	fcom   DWORD PTR ds:0x7ed728fd
  408034:	and    bh,BYTE PTR [eax+edi*8+0x2284908b]
  40803b:	mov    ch,dl
  40803d:	popa   
  40803e:	push   ds
  40803f:	adc    dl,BYTE PTR [ebx]
  408041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408042:	daa    
  408043:	aam    0xd7
  408045:	jg     0x408073
  408047:	sub    dh,cl
  408049:	mov    cl,0x4a
  40804b:	inc    ecx
  40804c:	scas   al,BYTE PTR es:[edi]
  40804d:	(bad)  
  40804e:	adc    ebp,DWORD PTR [ecx-0x4e]
  408051:	inc    ecx
  408052:	inc    esp
  408053:	mov    cl,0x1e
  408055:	clc    
  408056:	ss (bad) 
  408058:	les    esi,FWORD PTR [edx-0x42]
  40805b:	add    BYTE PTR [esi-0x3f881009],al
  408061:	xchg   edi,eax
  408062:	xchg   esi,eax
  408063:	mov    dl,0xe9
  408065:	jns    0x408074
  408067:	inc    esp
  408068:	mov    WORD PTR [edi-0x3e],fs
  40806b:	or     eax,0xe2a1839e
  408070:	fwait
  408071:	and    BYTE PTR [ecx],ch
  408073:	pavgw  mm2,QWORD PTR [ebx-0x6e]
  408077:	pop    ebp
  408078:	jb     0x408081
  40807a:	and    al,0xc2
  40807c:	lods   eax,DWORD PTR ds:[esi]
  40807d:	mov    edi,0x3a6682b4
  408082:	pop    ecx
  408083:	sub    ebx,DWORD PTR [ebx-0x7a3eb712]
  408089:	push   DWORD PTR [edx+0x7a27edc4]
  40808f:	sbb    al,0x80
  408091:	outs   dx,BYTE PTR ds:[esi]
  408092:	ss push cs
  408094:	or     bh,BYTE PTR [esi-0x57ab3ee5]
  40809a:	push   esp
  40809b:	call   0xafff69c1
  4080a0:	mov    bl,0xaa
  4080a2:	in     eax,dx
  4080a3:	xlat   BYTE PTR ds:[ebx]
  4080a4:	jnp    0x4080f3
  4080a6:	in     al,dx
  4080a7:	push   cs
  4080a8:	fdivr  QWORD PTR [edi+ecx*8+0x4bb1f84a]
  4080af:	or     DWORD PTR [esi-0x20],ebx
  4080b2:	rcr    DWORD PTR [ebp+0x69ee236f],1
  4080b8:	mov    BYTE PTR [edi+0x7b],0xaf
  4080bc:	dec    esp
  4080bd:	aas    
  4080be:	das    
  4080bf:	push   edi
  4080c0:	aaa    
  4080c1:	gs pop es
  4080c3:	(bad)  
  4080c4:	adc    BYTE PTR [ebx-0x580f7403],al
  4080ca:	add    al,0xab
  4080cc:	sbb    al,0xba
  4080ce:	or     dl,BYTE PTR [eax+edi*2]
  4080d1:	hlt    
  4080d2:	cmp    eax,0x28693f16
  4080d7:	js     0x4080f9
  4080d9:	cmp    al,0x47
  4080db:	add    ah,BYTE PTR [ebx]
  4080dd:	cmp    eax,0x8b5ba7fb
  4080e2:	int3   
  4080e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e4:	push   esi
  4080e5:	imul   esi,DWORD PTR [ebx+0x76],0xffffffa0
  4080e9:	aas    
  4080ea:	xchg   edi,eax
  4080eb:	bound  ebp,QWORD PTR [ebx+0x34]
  4080ee:	dec    esi
  4080ef:	sub    BYTE PTR [esi-0x2e],cl
  4080f2:	call   ecx
  4080f4:	test   ebx,esp
  4080f6:	cld    
  4080f7:	xchg   edx,eax
  4080f8:	dec    ecx
  4080f9:	sub    ch,BYTE PTR [eax-0x2a]
  4080fc:	addr16 ds mov ebp,0xc9fc3443
  408103:	pushf  
  408104:	push   edx
  408105:	cdq    
  408106:	jae    0x4080ca
  408108:	inc    ecx
  408109:	pop    ebx
  40810a:	add    DWORD PTR [edi+0x126e1539],ebx
  408110:	xor    BYTE PTR [esi-0x49],ch
  408113:	test   DWORD PTR [edi-0x29],edx
  408116:	aas    
  408117:	test   eax,0xf252fa6e
  40811c:	fimul  DWORD PTR [edi+0x7a]
  40811f:	add    DWORD PTR [ebp-0x59],0x57d82225
  408126:	clc    
  408127:	daa    
  408128:	call   DWORD PTR [edi-0x6f]
  40812b:	push   ds
  40812c:	dec    esi
  40812d:	inc    ebp
  40812e:	mov    WORD PTR [ebx-0x4e63a5cf],?
  408134:	outs   dx,DWORD PTR ds:[esi]
  408135:	sub    DWORD PTR [ecx+0x1db55ce6],esp
  40813b:	out    dx,eax
  40813c:	add    bl,BYTE PTR [ebx-0x3ceffc2c]
  408142:	retf   0x552
  408145:	in     al,dx
  408146:	imul   BYTE PTR [eax-0xf]
  408149:	ss cmp al,0xc7
  40814c:	rcr    DWORD PTR [ebx],1
  40814e:	std    
  40814f:	sbb    DWORD PTR [edi-0x5ecd64bb],ebx
  408155:	push   ebp
  408156:	sbb    esp,DWORD PTR [ecx]
  408158:	shl    DWORD PTR [esi-0x463f2145],cl
  40815e:	sbb    edx,DWORD PTR [esp+eiz*4-0x1f720f0d]
  408165:	(bad)  
  408167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408168:	ins    DWORD PTR es:[edi],dx
  408169:	adc    edx,DWORD PTR [esi]
  40816b:	retf   
  40816c:	inc    ebp
  40816d:	mov    cl,0x9e
  40816f:	adc    esp,esp
  408171:	inc    ecx
  408172:	outs   dx,DWORD PTR ds:[esi]
  408173:	fdivr  DWORD PTR [ebx-0x7e]
  408176:	or     DWORD PTR [edx],ecx
  408178:	pusha  
  408179:	jae    0x40817a
  40817b:	inc    eax
  40817c:	mov    ecx,0xdb0a63c9
  408181:	lods   eax,DWORD PTR ds:[esi]
  408182:	mul    DWORD PTR [ecx]
  408184:	pop    ecx
  408185:	les    ecx,FWORD PTR [ebp+0x48]
  408188:	in     al,dx
  408189:	xchg   edx,eax
  40818a:	push   esi
  40818b:	std    
  40818c:	jb     0x40813a
  40818e:	xchg   ecx,eax
  40818f:	icebp  
  408190:	scas   al,BYTE PTR es:[edi]
  408191:	or     BYTE PTR [ebp+0x68],al
  408194:	fldenv [ebp+0x149e75e8]
  40819a:	sbb    ebp,esp
  40819c:	fwait
  40819d:	mov    BYTE PTR [ebp+0x335e5d45],bl
  4081a3:	mov    bh,0x2
  4081a5:	les    esp,FWORD PTR [ebx-0x37cb38e3]
  4081ab:	push   0x5f
  4081ad:	fstp   TBYTE PTR [ebx+0x6be6a1af]
  4081b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b4:	xor    cl,BYTE PTR ds:0xc729eb23
  4081ba:	iret   
  4081bb:	or     al,0xb9
  4081bd:	jl     0x408193
  4081bf:	aas    
  4081c0:	scas   eax,DWORD PTR es:[edi]
  4081c1:	ins    BYTE PTR es:[edi],dx
  4081c2:	or     al,BYTE PTR [esi]
  4081c4:	cwde   
  4081c5:	int    0xaa
  4081c7:	inc    edx
  4081c8:	adc    al,0x93
  4081ca:	inc    edi
  4081cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081cc:	cdq    
  4081cd:	inc    ebp
  4081ce:	call   0x68330763
  4081d3:	add    ebp,DWORD PTR [ebx-0x791fd554]
  4081d9:	loop   0x408186
  4081db:	xchg   esi,eax
  4081dc:	test   DWORD PTR [ebp-0x3],ebx
  4081df:	mov    bh,0x77
  4081e1:	mov    ecx,0xc8325dd2
  4081e6:	push   ecx
  4081e7:	pop    edx
  4081e8:	sbb    DWORD PTR [ebx],esp
  4081ea:	add    cl,BYTE PTR [esi+0x4f]
  4081ed:	add    al,0xa6
  4081ef:	sub    al,0xdf
  4081f1:	(bad)  
  4081f3:	retf   0xffc8
  4081f6:	inc    ebp
  4081f7:	inc    esi
  4081f8:	jno    0x4081bf
  4081fa:	shr    BYTE PTR [esi],cl
  4081fc:	mul    BYTE PTR [esi]
  4081fe:	adc    eax,0x4dfd1185
  408203:	push   esi
  408204:	(bad)  
  408205:	arpl   WORD PTR ds:0x67d2bc47,bx
  40820b:	daa    
  40820c:	imul   ebp,DWORD PTR [ebx+0x55],0xb357fa85
  408213:	adc    DWORD PTR [ebx+0x47f33a54],eax
  408219:	sub    BYTE PTR [edi],dh
  40821b:	mov    ebx,0x268e3ed5
  408220:	sub    ebx,DWORD PTR [ebp+0x4e]
  408223:	dec    ebx
  408224:	(bad)  
  408225:	cmp    ebx,DWORD PTR [edi]
  408227:	jg     0x408230
  408229:	aam    0xc
  40822b:	adc    al,0xec
  40822d:	ss mov al,0x1f
  408230:	push   ebx
  408231:	xchg   ebx,eax
  408232:	outs   dx,DWORD PTR ds:[esi]
  408233:	mov    bh,0xcc
  408235:	fdivp  st(2),st
  408237:	push   0xffffff88
  408239:	clc    
  40823a:	dec    esp
  40823b:	aas    
  40823c:	push   0xffffffe6
  40823e:	jmp    0x7d2ac27c
  408243:	adc    al,0x4c
  408245:	repnz push esi
  408247:	shl    DWORD PTR [edx-0xcadaf7a],0xba
  40824e:	call   FWORD PTR [ebp+0x1e683f8a]
  408254:	sbb    al,0x1
  408256:	or     BYTE PTR [ebx+0x8831e89],0x76
  40825d:	mov    esi,0xdf1537f7
  408262:	xor    al,dh
  408264:	(bad)  
  408265:	(bad)  
  408266:	sub    al,0xfc
  408268:	pop    edx
  408269:	mov    cl,0x89
  40826b:	adc    BYTE PTR [ebx-0x8c91113],dh
  408271:	in     eax,dx
  408272:	sub    eax,DWORD PTR [ecx+0x1d9a606a]
  408278:	mov    DWORD PTR [ebx],ebx
  40827a:	mov    dh,0xa6
  40827c:	adc    cl,dl
  40827e:	and    BYTE PTR [ecx+0x31688ae3],0x52
  408285:	or     al,0xb5
  408287:	xchg   edi,eax
  408288:	add    edx,eax
  40828a:	sbb    al,0x73
  40828c:	ror    DWORD PTR [ecx+0x75],0xbe
  408290:	pop    edx
  408291:	push   edi
  408292:	enter  0xa237,0x4b
  408296:	cmp    DWORD PTR [ebx],ebp
  408298:	add    edi,DWORD PTR [ecx]
  40829a:	and    edx,DWORD PTR [ebx+ebx*1-0x3ba91f1f]
  4082a1:	add    BYTE PTR [ebx],0xe5
  4082a4:	sub    bh,BYTE PTR [esi-0x23]
  4082a7:	stos   DWORD PTR es:[edi],eax
  4082a8:	or     eax,0x3a63977c
  4082ad:	adc    DWORD PTR [eax],edx
  4082af:	sub    dl,BYTE PTR [edi-0x2b]
  4082b2:	mov    dl,0x7e
  4082b4:	leave  
  4082b5:	jmp    0x408318
  4082b7:	adc    edx,DWORD PTR [ebx]
  4082b9:	cdq    
  4082ba:	dec    ebp
  4082bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082bc:	idiv   BYTE PTR [edi-0x6ab98e65]
  4082c2:	imul   ebx,DWORD PTR [esi+0x7c],0x7b
  4082c6:	cwde   
  4082c7:	push   ecx
  4082c8:	pop    esi
  4082c9:	shl    BYTE PTR [esi+0x7001bcd6],cl
  4082cf:	jecxz  0x4082b6
  4082d1:	int3   
  4082d2:	or     eax,0x481f9213
  4082d7:	jl     0x4082b4
  4082d9:	js     0x40830e
  4082db:	push   esi
  4082dc:	cwde   
  4082dd:	repnz jmp 0x9f57:0xcb6df550
  4082e5:	xor    eax,0xc4d35e82
  4082ea:	push   ecx
  4082eb:	xchg   dh,dl
  4082ed:	ins    DWORD PTR es:[edi],dx
  4082ee:	rcl    esp,0xf0
  4082f1:	stc    
  4082f2:	mov    esi,eax
  4082f4:	retf   
  4082f5:	xor    al,0xf8
  4082f7:	loope  0x4082b5
  4082f9:	xor    al,0xd0
  4082fb:	sub    BYTE PTR [esi+eiz*4-0x5d],bl
  4082ff:	daa    
  408300:	in     eax,dx
  408301:	dec    esp
  408302:	out    0x78,eax
  408304:	xchg   DWORD PTR [edi-0x57162c58],esp
  40830a:	ds pop eax
  40830c:	adc    al,0x8c
  40830e:	in     al,0xf
  408310:	cmp    ah,BYTE PTR [eax]
  408312:	jmp    0xa8d7cd75
  408317:	hlt    
  408318:	shr    BYTE PTR [ecx],1
  40831a:	push   ebx
  40831b:	inc    eax
  40831c:	int    0x52
  40831e:	scas   eax,DWORD PTR es:[edi]
  40831f:	inc    eax
  408320:	(bad)  
  408321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408322:	inc    edx
  408323:	and    eax,0x767f83c4
  408328:	lods   al,BYTE PTR ds:[esi]
  408329:	in     al,dx
  40832a:	call   0x192:0xf5ef902b
  408331:	icebp  
  408332:	sub    bl,bh
  408334:	push   ebp
  408335:	push   edx
  408336:	in     al,dx
  408337:	adc    DWORD PTR [ebx+0x26ed7390],0x55
  40833e:	rcr    BYTE PTR [esi+0x3a10720b],cl
  408344:	push   eax
  408345:	dec    ebx
  408346:	gs sub eax,0x350dba32
  40834c:	aam    0xb5
  40834e:	xchg   ecx,eax
  40834f:	jns    0x408360
  408351:	mov    WORD PTR [edi],ss
  408353:	call   esi
  408355:	add    dh,0x6d
  408358:	adc    BYTE PTR es:[edi+0x60],dl
  40835c:	dec    ecx
  40835d:	mov    eax,0x355397be
  408362:	mov    dl,0x32
  408364:	lahf   
  408365:	push   esp
  408366:	lock sbb al,0x47
  408369:	adc    DWORD PTR [ecx],edi
  40836b:	das    
  40836c:	pop    es
  40836d:	adc    eax,0xd46f6010
  408372:	push   0xbd06d113
  408377:	pusha  
  408378:	cmp    al,0x47
  40837a:	cmp    DWORD PTR [edx+0x44],eax
  40837d:	xchg   DWORD PTR [edx],ebx
  40837f:	mov    bh,0x4f
  408381:	jne    0x40839e
  408383:	jge    0x4083aa
  408385:	leave  
  408386:	inc    esp
  408387:	dec    ebx
  408388:	mov    bl,0x98
  40838a:	sub    al,0x77
  40838c:	loop   0x408330
  40838e:	add    esi,DWORD PTR ds:0x2a4122cd
  408394:	inc    eax
  408395:	fincstp 
  408397:	popa   
  408398:	and    BYTE PTR [ecx],ah
  40839a:	mov    edx,DWORD PTR [edi-0x59]
  40839d:	push   edi
  40839e:	mov    edi,0x8a9e3057
  4083a3:	js     0x4083b0
  4083a5:	shl    dh,0x28
  4083a8:	xlat   BYTE PTR ds:[ebx]
  4083a9:	inc    ebp
  4083aa:	mov    dl,0xcc
  4083ac:	pop    esi
  4083ad:	jns    0x40836b
  4083af:	bound  ebx,QWORD PTR [ebx-0x328a68bc]
  4083b5:	xor    al,0x5a
  4083b7:	(bad)  
  4083b8:	sbb    bh,BYTE PTR [edi-0x3]
  4083bb:	stos   DWORD PTR es:[edi],eax
  4083bc:	(bad)  
  4083bd:	fcmovb st,st(0)
  4083bf:	out    0x84,eax
  4083c1:	rol    BYTE PTR [ebp+0x6a2c0cf4],0x4c
  4083c8:	push   cs
  4083c9:	scas   eax,DWORD PTR es:[edi]
  4083ca:	inc    esi
  4083cb:	je     0x4083c3
  4083cd:	and    DWORD PTR [ebp+0x68],ebp
  4083d0:	xchg   DWORD PTR [esi],edx
  4083d2:	fistp  QWORD PTR [ecx]
  4083d4:	lahf   
  4083d5:	push   esp
  4083d6:	inc    ebp
  4083d7:	jl     0x4083ae
  4083d9:	fisub  DWORD PTR [ecx+0x22f60b3]
  4083df:	std    
  4083e0:	jle    0x4083bb
  4083e2:	idiv   BYTE PTR [ebp+0x4e4d6193]
  4083e8:	add    edx,DWORD PTR [ebx-0x6]
  4083eb:	clc    
  4083ec:	(bad)  [esp+ebp*2-0x4a]
  4083f0:	add    BYTE PTR [ecx+0x23],0x9b
  4083f4:	(bad)
  4083f8:	test   BYTE PTR [eax],dl
  4083fa:	ret    0xa46d
  4083fd:	xor    ah,BYTE PTR [esi]
  4083ff:	push   eax
  408400:	push   edi
  408401:	in     eax,dx
  408402:	daa    
  408403:	mov    ecx,0x7b56f38f
  408408:	test   DWORD PTR ds:0x8c30d504,ebp
  40840e:	lds    edi,FWORD PTR [eax-0x617ff6b9]
  408414:	adc    eax,0xf1cd9669
  408419:	fucomi st,st(0)
  40841b:	out    0x1e,al
  40841d:	xchg   edx,eax
  40841e:	fidivr WORD PTR ds:0x6fa38adb
  408424:	aas    
  408425:	in     eax,dx
  408426:	mov    edi,0x9bb4ec86
  40842b:	fwait
  40842c:	or     DWORD PTR [eax+0x23],ebp
  40842f:	jg     0x408421
  408431:	aad    0x70
  408433:	jle    0x40843e
  408435:	jmp    0x4084ae
  408437:	cmp    eax,0x670c846a
  40843c:	gs rol ah,0x15
  408440:	into   
  408441:	dec    edx
  408442:	mov    edx,0xb6eda311
  408447:	push   ebp
  408448:	add    BYTE PTR [ecx],0xaf
  40844b:	frstor [ecx]
  40844d:	jo     0x408434
  40844f:	loop   0x408457
  408451:	aam    0xb7
  408453:	ret    
  408454:	ds inc ecx
  408456:	pop    ds
  408457:	retf   
  408458:	push   cs
  408459:	call   eax
  40845b:	popa   
  40845c:	xchg   DWORD PTR [ebx-0x7ee89fc4],eax
  408462:	adc    edi,eax
  408464:	test   BYTE PTR [eax+0x16],ch
  408467:	push   ecx
  408468:	mov    ds:0x54548697,al
  40846d:	daa    
  40846e:	sbb    ecx,DWORD PTR [esi+edi*4-0x23]
  408472:	mov    edx,0x21c9e67e
  408477:	cmp    DWORD PTR [edi],edi
  408479:	sub    al,BYTE PTR [eax+0x7eb0c747]
  40847f:	mov    eax,ds:0xd11e6bd0
  408484:	mov    WORD PTR [ebp+0x3649d506],gs
  40848a:	dec    eax
  40848b:	sbb    al,0x98
  40848d:	xor    al,BYTE PTR [eax+0x5e]
  408490:	test   eax,0xe194f78f
  408495:	push   ebp
  408496:	cmp    al,0x24
  408498:	xchg   edx,eax
  408499:	push   ebp
  40849a:	cld    
  40849b:	cwde   
  40849c:	pop    esi
  40849d:	sub    eax,0xa16af055
  4084a2:	mov    ebp,0x70ef4985
  4084a7:	and    dl,BYTE PTR [esi]
  4084a9:	jecxz  0x4084ae
  4084ab:	inc    eax
  4084ac:	cmp    edi,DWORD PTR [ebp+0x25]
  4084af:	data16 arpl WORD PTR ds:0xe925a595,di
  4084b6:	shl    esi,0xab
  4084b9:	or     al,0x89
  4084bb:	iret   
  4084bc:	add    ah,BYTE PTR [edx+0x7]
  4084bf:	and    BYTE PTR [ebx-0x4aa57568],bh
  4084c5:	push   esi
  4084c6:	cmp    DWORD PTR [esi+0x5b],ebp
  4084c9:	and    al,BYTE PTR [ebp+edx*1+0x4dde6217]
  4084d0:	fist   WORD PTR [ecx-0x525d6729]
  4084d6:	adc    eax,0x2f4e398e
  4084db:	sbb    ebp,DWORD PTR [ebx+0x22]
  4084de:	push   edi
  4084df:	jbe    0x408492
  4084e1:	(bad)  
  4084e2:	sub    DWORD PTR [esi-0x75],ebp
  4084e5:	(bad)  
  4084e6:	ja     0x4084d3
  4084e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e9:	pushf  
  4084ea:	in     eax,dx
  4084eb:	ss int 0xa4
  4084ee:	dec    ecx
  4084ef:	fwait
  4084f0:	ror    ch,cl
  4084f2:	mov    ebx,0xd19602eb
  4084f7:	sub    ah,BYTE PTR fs:[edi-0x1f]
  4084fb:	add    cl,BYTE PTR [eax+0x458b1a04]
  408501:	ror    BYTE PTR [ebx-0x39cc27ab],0x33
  408508:	(bad)  
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a64b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a64f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a653
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a65b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a623
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   cl,bh
  4089f8:	test   BYTE PTR [eax+0x69],dl
  4089fb:	(bad)  
  4089fc:	adc    eax,0x5ce88383
  408a01:	add    DWORD PTR [ebx+0x4e7b28],0x29
  408a08:	inc    ecx
  408a09:	scas   eax,DWORD PTR es:[edi]
  408a0a:	test   DWORD PTR [ebp+0x1440b3a6],0x6c93cd38
  408a14:	and    eax,0x21eb8a69
  408a19:	ret    
  408a1a:	sbb    ebp,DWORD PTR [eax-0x54135fd2]
  408a20:	mov    ds:0x516145bf,eax
  408a25:	test   eax,0xae8e6e88
  408a2a:	xor    BYTE PTR [edx-0x171b7964],cl
  408a30:	repnz xchg ebp,eax
  408a32:	cmp    ecx,DWORD PTR [eax-0x3b]
  408a35:	inc    edi
  408a36:	and    eax,0xc934200
  408a3b:	sbb    ebx,DWORD PTR [edx-0x37]
  408a3e:	inc    ecx
  408a3f:	sub    BYTE PTR [esi],cl
  408a41:	dec    DWORD PTR [esi+0x2617288f]
  408a47:	les    ebp,FWORD PTR [ecx+eiz*4]
  408a4a:	mov    ebx,0xc693bd1a
  408a4f:	pmaxub mm2,mm4
  408a52:	nop
  408a53:	add    al,0x93
  408a55:	pop    edi
  408a56:	xor    BYTE PTR [esi+ebx*1-0x1ab9997e],cl
  408a5d:	lea    esi,ds:0xc9178abd
  408a63:	adc    eax,0xead715f9
  408a68:	pop    esp
  408a69:	fmul   DWORD PTR [edi+0x5e]
  408a6c:	aaa    
  408a6d:	(bad)
  408a70:	pop    ss
  408a71:	adc    eax,0x97eaf34c
  408a76:	out    0xde,al
  408a78:	xor    BYTE PTR ds:0x9ca3e9c0,bl
  408a7e:	adc    al,0x24
  408a80:	rcl    bh,1
  408a82:	icebp  
  408a83:	cmp    bh,bh
  408a85:	mov    cl,0xe6
  408a87:	jl     0x408acf
  408a89:	push   eax
  408a8a:	les    ebx,FWORD PTR [ecx+0x2d]
  408a8d:	mov    dl,0xad
  408a8f:	xchg   edx,eax
  408a90:	cmp    DWORD PTR [esi-0x110f0e55],0xffffffa3
  408a97:	inc    ecx
  408a98:	dec    edi
  408a99:	jno    0x408aad
  408a9b:	rol    DWORD PTR [edx+0x3fb3e29],0x2a
  408aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa3:	popa   
  408aa4:	fidivr WORD PTR [eax]
  408aa6:	xor    bh,BYTE PTR [eax-0x39]
  408aa9:	fdivr  st,st(1)
  408aab:	daa    
  408aac:	je     0x408a8e
  408aae:	pop    edx
  408aaf:	pop    ss
  408ab0:	mov    al,0xee
  408ab2:	and    eax,0x3d0a21e5
  408ab7:	in     al,dx
  408ab8:	mov    ds:0x3a216e3e,al
  408abd:	out    dx,al
  408abe:	adc    eax,0x18aeec37
  408ac3:	dec    ebp
  408ac4:	mov    ebp,0x47554cdd
  408ac9:	xchg   ecx,eax
  408aca:	dec    edx
  408acb:	gs xchg edi,eax
  408acd:	pop    ebx
  408ace:	mov    esp,0x40b0a8d2
  408ad3:	sub    DWORD PTR [edx],esi
  408ad5:	sub    ch,BYTE PTR [ebp-0xd]
  408ad8:	pop    edi
  408ad9:	out    0x4e,eax
  408adb:	bound  ebp,QWORD PTR [ecx-0x1f7a290f]
  408ae1:	sub    al,0x55
  408ae3:	add    eax,0xb7244dc9
  408ae8:	pop    ss
  408ae9:	pop    ds
  408aea:	sub    edi,DWORD PTR [ebp+esi*4-0x15b5dc1a]
  408af1:	push   esp
  408af2:	add    BYTE PTR [ebx-0x8d4b33e],ah
  408af8:	inc    esp
  408af9:	ret    
  408afa:	jnp    0x408b7a
  408afc:	sub    al,0x7f
  408afe:	nop
  408aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b00:	out    dx,al
  408b01:	arpl   WORD PTR [ebx+0x41],sp
  408b04:	and    al,0xa3
  408b06:	pop    esi
  408b07:	fs aam 0x70
  408b0a:	ret    0x6c6f
  408b0d:	xchg   esi,eax
  408b0e:	lahf   
  408b0f:	or     DWORD PTR [edi],esp
  408b11:	enter  0xb619,0xdf
  408b15:	jg     0x408b4f
  408b17:	push   0x8068cad8
  408b1c:	mov    cl,0xdc
  408b1e:	aad    0xcf
  408b20:	aaa    
  408b21:	fidiv  WORD PTR ds:0x74af803d
  408b27:	fiadd  WORD PTR [ebx]
  408b29:	add    eax,0x4888e759
  408b2e:	jp     0x408b2c
  408b30:	in     eax,dx
  408b31:	pushf  
  408b32:	lock daa 
  408b34:	or     eax,DWORD PTR [ebp-0x36d9cf96]
  408b3a:	or     ebx,DWORD PTR [eax+edx*4]
  408b3d:	sbb    BYTE PTR [esi-0x1a39768e],bl
  408b43:	mov    eax,ds:0x9673e306
  408b48:	scas   al,BYTE PTR es:[edi]
  408b49:	shl    DWORD PTR [ecx],cl
  408b4b:	(bad)  
  408b4c:	pop    ebp
  408b4d:	sub    DWORD PTR [edi+0x1b03df26],eax
  408b53:	sbb    ah,BYTE PTR ds:0xcce0dbc7
  408b59:	xchg   esi,eax
  408b5a:	in     eax,dx
  408b5b:	das    
  408b5c:	into   
  408b5d:	inc    edi
  408b5e:	test   BYTE PTR [edx],dh
  408b60:	jmp    0xb7e9fdd9
  408b65:	outs   dx,BYTE PTR ds:[esi]
  408b66:	or     edx,esi
  408b68:	adc    BYTE PTR [edi+0x189337b4],bl
  408b6e:	and    eax,0x8cbb3ea0
  408b73:	or     al,0xa5
  408b75:	mov    WORD PTR [edx],es
  408b77:	mov    ch,BYTE PTR [ecx-0x5d875ef2]
  408b7d:	dec    ebx
  408b7e:	inc    edi
  408b7f:	cmp    eax,0xaa87c221
  408b84:	pop    ecx
  408b85:	int3   
  408b86:	push   ebp
  408b87:	stc    
  408b88:	xchg   ebp,eax
  408b89:	push   edi
  408b8a:	scas   al,BYTE PTR es:[edi]
  408b8b:	stos   DWORD PTR es:[edi],eax
  408b8c:	lds    esi,FWORD PTR [edi]
  408b8e:	mov    al,0xc9
  408b90:	mov    al,0x87
  408b92:	or     eax,0x5b78fb04
  408b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b98:	inc    edi
  408b99:	sub    dl,BYTE PTR [eax-0x6e35e743]
  408b9f:	inc    ebx
  408ba0:	mov    edi,0x4301effc
  408ba5:	or     BYTE PTR [edi],0x48
  408ba8:	ss mov ebp,0x2fa7f187
  408bae:	or     al,0x9e
  408bb0:	push   edx
  408bb1:	test   DWORD PTR [ecx-0x35e4afd4],edx
  408bb7:	push   ebx
  408bb8:	popf   
  408bb9:	repnz push eax
  408bbb:	mov    bl,0x84
  408bbd:	retf   0xa4bb
  408bc0:	test   DWORD PTR [ecx+0x66],ebp
  408bc3:	xor    WORD PTR [ecx-0x514e780a],bp
  408bca:	sub    ebp,ecx
  408bcc:	sbb    esp,edx
  408bce:	inc    eax
  408bcf:	call   0xd63b:0x42a60ab4
  408bd6:	enter  0xbf97,0xb6
  408bda:	(bad)  
  408bdb:	addr16 int3 
  408bdd:	push   0x9a092e5e
  408be2:	fstp   QWORD PTR [ebp+0x3d]
  408be5:	addr16 (bad) 
  408be8:	out    dx,eax
  408be9:	mov    bl,0xec
  408beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bec:	clc    
  408bed:	fs repnz stos BYTE PTR es:[edi],al
  408bf0:	fdivr  QWORD PTR ds:0x9f8fcd4d
  408bf6:	or     DWORD PTR [edi-0x3df379dc],eax
  408bfc:	test   eax,0x5ccb9492
  408c01:	out    0x2b,eax
  408c03:	jmp    0x408c00
  408c05:	cli    
  408c06:	and    BYTE PTR [edi],al
  408c08:	adc    DWORD PTR [eax+0x25],ecx
  408c0b:	mov    DWORD PTR [esi],ebx
  408c0d:	pushf  
  408c0e:	loop   0x408c6c
  408c10:	inc    ebp
  408c11:	mov    ds:0xb73593c,al
  408c16:	movups XMMWORD PTR [edi],xmm2
  408c19:	jge    0x408c44
  408c1b:	(bad)
  408c1e:	(bad)  
  408c1f:	mov    cl,0xf1
  408c21:	pop    ecx
  408c22:	push   ebp
  408c23:	js     0x408c04
  408c25:	xor    DWORD PTR [esi+0x16],ebp
  408c28:	cli    
  408c29:	push   ebx
  408c2a:	xor    DWORD PTR [edx-0x3e],ebx
  408c2d:	cmp    dh,BYTE PTR [ecx-0x74]
  408c30:	(bad)  
  408c31:	mov    eax,ds:0x3e1d6c70
  408c36:	adc    edx,edx
  408c38:	jle    0x408c32
  408c3a:	or     eax,0xe7bd2008
  408c3f:	mov    ecx,DWORD PTR [edi]
  408c41:	sbb    DWORD PTR [eax+0x8],esp
  408c44:	sbb    al,0x66
  408c46:	into   
  408c47:	arpl   WORD PTR [ebx+0x3e64daa5],ax
  408c4d:	jae    0x408c40
  408c4f:	sub    ecx,edx
  408c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c52:	sub    BYTE PTR [ebp+0x19],dh
  408c55:	push   esp
  408c56:	loopne 0x408ca0
  408c58:	hlt    
  408c59:	mov    al,ds:0x4260cc5b
  408c5e:	stos   BYTE PTR es:[edi],al
  408c5f:	mov    DWORD PTR [ecx],esp
  408c61:	fwait
  408c62:	mov    DWORD PTR [eax*2+0x53047350],ecx
  408c69:	and    BYTE PTR [ebx],0xf7
  408c6c:	xor    edx,DWORD PTR ds:0x5f212065
  408c72:	sahf   
  408c73:	ret    0x4a7c
  408c76:	in     al,0x2c
  408c78:	test   DWORD PTR [eax],ecx
  408c7a:	pop    esi
  408c7b:	mov    dl,0x38
  408c7d:	retf   0xe7d4
  408c80:	sbb    eax,0xb5c47487
  408c85:	setge  BYTE PTR [ebx+0x2]
  408c89:	imul   ecx,DWORD PTR [eax],0x80d78978
  408c8f:	in     eax,dx
  408c90:	cmp    BYTE PTR [ecx],bl
  408c92:	jl     0x408c81
  408c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c95:	or     al,0x7a
  408c97:	popf   
  408c98:	dec    eax
  408c99:	and    ch,ah
  408c9b:	jmp    0x9fed:0xeecab04e
  408ca2:	mov    al,0xba
  408ca4:	xor    ch,BYTE PTR [ecx-0x1e]
  408ca7:	jmp    0x408c5f
  408ca9:	mov    ebp,0xd0965949
  408cae:	(bad)  
  408cb0:	inc    ebx
  408cb1:	mov    cl,0x23
  408cb3:	xchg   esp,eax
  408cb4:	dec    ebx
  408cb5:	nop
  408cb6:	adc    BYTE PTR cs:[ebx+0x56],cl
  408cba:	cld    
  408cbb:	outs   dx,BYTE PTR ds:[esi]
  408cbc:	mov    BYTE PTR ds:0x7329db5e,ch
  408cc2:	inc    esp
  408cc3:	sbb    eax,0x40fb6449
  408cc8:	not    BYTE PTR [ebx+0x46]
  408ccb:	repnz pop esi
  408ccd:	mov    dl,0x88
  408ccf:	dec    ecx
  408cd0:	or     bh,dh
  408cd2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd4:	pop    ds
  408cd5:	jecxz  0x408cac
  408cd7:	(bad)  
  408cd8:	sbb    eax,0x9355dfe1
  408cdd:	mov    WORD PTR [esi+0x3f],es
  408ce0:	mov    al,ds:0xf417f868
  408ce5:	and    al,0x47
  408ce7:	cmp    al,0x17
  408ce9:	fisubr DWORD PTR [eax+0xf]
  408cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ced:	pop    ebx
  408cee:	xor    cl,bh
  408cf0:	and    BYTE PTR [eax-0x7a],0x14
  408cf4:	test   BYTE PTR [edi-0x72],0x87
  408cf8:	(bad)  
  408cf9:	mov    ds:0xe57d0942,al
  408cfe:	mov    ebx,0xd57098f2
  408d03:	inc    esp
  408d04:	popa   
  408d05:	lds    edi,FWORD PTR [ecx-0x49dd95fc]
  408d0b:	pop    ds
  408d0c:	ret    
  408d0d:	or     al,BYTE PTR [esi]
  408d0f:	sub    DWORD PTR [ebx],ebp
  408d11:	aaa    
  408d12:	sub    eax,0xe8b9fcdd
  408d17:	push   es
  408d18:	cmp    BYTE PTR [eax-0x4725bd7d],al
  408d1e:	sbb    eax,0x7ccb55f0
  408d23:	aaa    
  408d24:	or     eax,0x59c24467
  408d29:	inc    ebx
  408d2a:	nop
  408d2b:	js     0x408d8c
  408d2d:	enter  0x1870,0xbf
  408d31:	push   ebp
  408d32:	mov    dl,0xdf
  408d34:	sub    eax,0x80c018e6
  408d39:	xchg   esp,eax
  408d3a:	adc    BYTE PTR [ecx+0xaa6310],ch
  408d40:	fsubr  DWORD PTR [esi]
  408d42:	(bad)  
  408d43:	dec    ebx
  408d44:	sub    eax,0x296206da
  408d49:	mov    ebx,0x8a8fcb93
  408d4e:	clc    
  408d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d50:	je     0x408cf9
  408d52:	outs   dx,BYTE PTR ds:[esi]
  408d53:	push   ebp
  408d54:	(bad)  
  408d55:	cmp    al,0xfd
  408d57:	and    eax,0x29f589af
  408d5c:	jg     0x408d2c
  408d5e:	jecxz  0x408d7d
  408d60:	mov    bl,0x77
  408d62:	idiv   BYTE PTR [esi+0x3298ad6]
  408d68:	xchg   BYTE PTR [esi-0x6c7643d3],bl
  408d6e:	ffreep st(6)
  408d70:	xchg   esp,eax
  408d71:	and    BYTE PTR [eax-0x95350e3],0x4
  408d78:	or     DWORD PTR [ecx+edx*2+0x6],ecx
  408d7c:	inc    dx
  408d7e:	sbb    eax,DWORD PTR [edx-0x63]
  408d81:	jl     0x408dd1
  408d83:	jnp    0x408d40
  408d85:	cli    
  408d86:	scas   al,BYTE PTR es:[edi]
  408d87:	addr16 mov ebp,0x4ae8e797
  408d8d:	les    esp,FWORD PTR [ebp-0x5c]
  408d90:	mov    DWORD PTR [bp+si-0x47],ebp
  408d94:	push   ebx
  408d95:	add    BYTE PTR [ebx+0x51],bl
  408d98:	cs cli 
  408d9a:	pop    esp
  408d9b:	js     0x408d53
  408d9d:	test   DWORD PTR [ecx-0x53],ecx
  408da0:	xor    esi,eax
  408da2:	jne    0x408dda
  408da4:	daa    
  408da5:	jmp    0x408d88
  408da7:	dec    esp
  408da8:	leave  
  408da9:	pop    ss
  408daa:	mov    ds:0x1bd86b5c,al
  408daf:	pushf  
  408db0:	mov    dl,BYTE PTR [ecx-0x6b]
  408db3:	jne    0x408dac
  408db5:	mov    ah,0x9a
  408db7:	mov    cl,0x7e
  408db9:	sqrtps xmm0,XMMWORD PTR ds:0x42bc4994
  408dc0:	(bad)  
  408dc1:	retf   
  408dc2:	(bad)  
  408dc3:	xor    ebp,DWORD PTR [esi]
  408dc5:	popa   
  408dc6:	in     al,dx
  408dc7:	repnz or BYTE PTR [edi-0x36],0x74
  408dcc:	dec    ebx
  408dcd:	xor    DWORD PTR [eax+0xe],ebx
  408dd0:	xor    DWORD PTR [ecx-0x618ee58a],0x7532eb7d
  408dda:	push   edi
  408ddb:	xchg   edi,eax
  408ddc:	cli    
  408ddd:	dec    edx
  408dde:	std    
  408ddf:	into   
  408de0:	xor    ecx,ebx
  408de2:	dec    ebx
  408de3:	aam    0xa4
  408de5:	sub    bl,bl
  408de7:	mov    ebp,0x5f7209c2
  408dec:	cmp    DWORD PTR ds:[eax-0x5111873f],esi
  408df3:	and    DWORD PTR [edi+0x25],esi
  408df6:	icebp  
  408df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408df8:	stc    
  408df9:	xchg   esi,eax
  408dfa:	sbb    ebp,edx
  408dfc:	iret   
  408dfd:	(bad)  [eax]
  408dff:	popf   
  408e00:	mov    dl,0xbe
  408e02:	adc    BYTE PTR [ebx],0x83
  408e05:	xor    BYTE PTR [ebx],dl
  408e07:	or     ebp,DWORD PTR [esi]
  408e09:	xor    eax,0xa71ba1d3
  408e0e:	das    
  408e0f:	fidiv  DWORD PTR [esi-0x7e]
  408e12:	sub    eax,0xd94611d1
  408e17:	into   
  408e18:	dec    ebx
  408e19:	retf   
  408e1a:	push   0xffffff99
  408e1c:	in     al,0xae
  408e1e:	xor    BYTE PTR [ecx+0x17],0x81
  408e22:	cmp    edi,DWORD PTR [eax]
  408e24:	push   cs
  408e25:	sahf   
  408e26:	fidivr WORD PTR [eax]
  408e28:	xor    ah,BYTE PTR [ecx+0x6f]
  408e2b:	lock xor DWORD PTR [eax+0x7e],0xffffff9c
  408e30:	mov    esi,0xc5c8b508
  408e35:	data16 rcl al,1
  408e38:	lock scas eax,DWORD PTR es:[edi]
  408e3a:	pop    ecx
  408e3b:	jns    0x408e11
  408e3d:	or     al,0x4c
  408e3f:	fbld   TBYTE PTR [edx+0x4a2c79e5]
  408e45:	adc    eax,ebp
  408e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e48:	lea    eax,[edx]
  408e4a:	sbb    eax,0x8ef1d286
  408e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e50:	icebp  
  408e51:	div    DWORD PTR [edx]
  408e53:	or     BYTE PTR [edx+0x185645d8],dl
  408e59:	push   ebx
  408e5a:	shl    BYTE PTR [eax],cl
  408e5c:	shr    DWORD PTR [eax],cl
  408e5e:	(bad)  
  408e5f:	dec    esp
  408e60:	and    eax,0xa222012a
  408e65:	fadd   DWORD PTR [ebp-0x5e989a2d]
  408e6b:	xlat   BYTE PTR ds:[ebx]
  408e6c:	sub    DWORD PTR [edx],eax
  408e6e:	mov    esi,ds
  408e70:	rcr    BYTE PTR fs:[esi+eiz*8+0x18],cl
  408e75:	mov    edx,0x797d0a42
  408e7a:	lods   al,BYTE PTR ds:[esi]
  408e7b:	mov    WORD PTR [eax-0x6d],?
  408e7e:	loopne 0x408efb
  408e80:	gs es jnp 0x408e6b
  408e84:	or     al,0xb5
  408e86:	xchg   ebp,eax
  408e87:	add    BYTE PTR [edi+ecx*8+0x46ed15c2],ch
  408e8e:	ins    BYTE PTR es:[edi],dx
  408e8f:	mov    bh,0x43
  408e91:	mov    edi,0x249cfdc9
  408e96:	sbb    BYTE PTR [ebp-0xb],bh
  408e99:	(bad)  
  408e9b:	retf   
  408e9c:	not    BYTE PTR [eax-0x2088ed27]
  408ea2:	inc    ecx
  408ea3:	adc    DWORD PTR [edx-0xd0dda61],ebp
  408ea9:	dec    edx
  408eaa:	sbb    BYTE PTR [edi-0x27ac1ae2],bh
  408eb0:	fcmovnbe st,st(4)
  408eb2:	mov    WORD PTR [ebx+0xe],?
  408eb5:	dec    ebx
  408eb6:	dec    ebp
  408eb7:	inc    ecx
  408eb8:	jl     0x408e68
  408eba:	sbb    eax,0x9f54b5e2
  408ebf:	in     eax,dx
  408ec0:	js     0x408e58
  408ec2:	sbb    DWORD PTR [esi-0x3e1bd092],esp
  408ec8:	push   ss
  408ec9:	sub    eax,0x3088847c
  408ece:	pop    edi
  408ecf:	jno    0x408f44
  408ed1:	test   BYTE PTR [esi-0x15e97465],ch
  408ed7:	(bad)
  408edb:	in     eax,0x87
  408edd:	sbb    edx,DWORD PTR [esi-0x644ab4f8]
  408ee3:	mov    ch,0x3e
  408ee5:	push   0xffffffc6
  408ee7:	sbb    dh,BYTE PTR [edx]
  408ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eea:	ds ds in al,dx
  408eed:	pushf  
  408eee:	pop    edi
  408eef:	outs   dx,BYTE PTR ds:[esi]
  408ef0:	xchg   ebp,eax
  408ef1:	in     al,dx
  408ef2:	popa   
  408ef3:	bndstx [edx-0x13],(bad)
  408ef7:	sbb    BYTE PTR [edx-0x2a2dda0a],0xab
  408efe:	pop    es
  408eff:	mov    cl,0xac
  408f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f03:	xor    ch,0xab
  408f06:	test   BYTE PTR [ebx-0x7d],bh
  408f09:	cmp    BYTE PTR [esp+eax*2],bl
  408f0c:	jl     0x408ea4
  408f0e:	mov    ch,0x20
  408f10:	add    BYTE PTR [ebx],cl
  408f12:	and    DWORD PTR ds:0x590897db,ecx
  408f18:	int3   
  408f19:	adc    DWORD PTR [ecx-0xd],esp
  408f1c:	dec    ebp
  408f1d:	call   0xefbcb8cb
  408f22:	shl    BYTE PTR [ebp-0x7d],0x95
  408f26:	arpl   WORD PTR [edi-0x51],dx
  408f29:	jmp    0x408ecf
  408f2b:	xchg   esp,esp
  408f2d:	sbb    DWORD PTR [eax],0x2c
  408f30:	int    0xd7
  408f32:	dec    esi
  408f33:	ins    BYTE PTR es:[edi],dx
  408f34:	mov    ch,0x5e
  408f36:	or     al,al
  408f38:	and    BYTE PTR [edi+0x65],ch
  408f3b:	fst    DWORD PTR [edx-0x56]
  408f3e:	aas    
  408f3f:	inc    eax
  408f40:	fs adc al,0x54
  408f43:	mov    ?,WORD PTR [edi+0x4f]
  408f46:	fwait
  408f47:	xlat   BYTE PTR ds:[ebx]
  408f48:	lods   al,BYTE PTR ds:[esi]
  408f49:	xchg   edx,esi
  408f4b:	mov    ch,0x2f
  408f4d:	inc    eax
  408f4e:	fs mov bh,0x15
  408f51:	lea    eax,[eax+ebx*2]
  408f54:	xchg   edx,eax
  408f55:	pusha  
  408f56:	cwde   
  408f57:	or     bh,BYTE PTR [ecx+0x6]
  408f5a:	adc    ch,BYTE PTR [eax-0x45b26b78]
  408f60:	icebp  
  408f61:	jle    0x408f27
  408f63:	icebp  
  408f64:	mov    ah,0x27
  408f66:	jbe    0x408ef8
  408f68:	mov    bl,0x5a
  408f6a:	retf   0xb3f4
  408f6d:	outs   dx,BYTE PTR ds:[esi]
  408f6e:	and    DWORD PTR [edi-0x29],esp
  408f71:	mov    eax,0x1ade0e81
  408f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f77:	ror    esp,cl
  408f79:	pop    eax
  408f7a:	xor    BYTE PTR [ebx],dl
  408f7c:	inc    eax
  408f7d:	je     0x408f82
  408f7f:	cmp    dh,BYTE PTR ds:0x8bff223c
  408f85:	sub    esi,esi
  408f87:	int3   
  408f88:	lock xchg esp,eax
  408f8a:	dec    ebx
  408f8b:	adc    dl,ah
  408f8d:	xchg   edi,eax
  408f8e:	out    dx,eax
  408f8f:	rol    esp,1
  408f91:	out    dx,eax
  408f92:	dec    edx
  408f93:	or     eax,0xff53f3ec
  408f98:	push   esp
  408f99:	inc    esp
  408f9a:	sub    al,0x3e
  408f9c:	xchg   edi,eax
  408f9d:	lods   al,BYTE PTR ds:[esi]
  408f9e:	adc    DWORD PTR [esi-0xd],ecx
  408fa1:	fmul   DWORD PTR [edi-0xd9b6381]
  408fa7:	mov    esp,0x8f84cc0c
  408fac:	shl    edx,0x6d
  408faf:	mov    bh,0x66
  408fb1:	das    
  408fb2:	data16 shl ch,1
  408fb5:	outs   dx,DWORD PTR ds:[esi]
  408fb6:	and    DWORD PTR [edi+0x5b749af4],eax
  408fbc:	add    al,0x61
  408fbe:	dec    eax
  408fbf:	adc    BYTE PTR [ebx],dl
  408fc1:	pop    ebp
  408fc2:	cmp    ch,BYTE PTR ss:[eax+0x17bc1b63]
  408fc9:	test   al,0xf
  408fcb:	in     eax,0x61
  408fcd:	xor    esp,esp
  408fcf:	in     eax,dx
  408fd0:	lds    eax,FWORD PTR [edi]
  408fd2:	push   cs
  408fd3:	inc    ebp
  408fd4:	jbe    0x408fa2
  408fd6:	mov    bl,0xad
  408fd8:	ret    
  408fd9:	mov    ch,0x4d
  408fdb:	mov    esi,0x522bf3eb
  408fe0:	scas   eax,DWORD PTR es:[edi]
  408fe1:	sbb    al,0x5d
  408fe3:	retf   0xb09d
  408fe6:	retf   
  408fe7:	fmul   QWORD PTR [ebp+0x75]
  408fea:	adc    ecx,DWORD PTR [ebx+ebp*1-0x34f848ad]
  408ff1:	adc    al,0x6b
  408ff3:	daa    
  408ff4:	shl    BYTE PTR [edx+0x51b657f9],1
  408ffa:	push   ebp
  408ffb:	ret    0x1b87
  408ffe:	xor    BYTE PTR [edi+0xddc3e06],dh
  409004:	nop
  409005:	mov    eax,0x20397ed9
  40900a:	mov    al,ds:0x4cff2a75
  40900f:	push   ecx
  409010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409011:	scas   al,BYTE PTR es:[edi]
  409012:	sbb    BYTE PTR [ebx],al
  409014:	ins    DWORD PTR es:[edi],dx
  409015:	lds    edx,FWORD PTR [ecx+0x1b]
  409018:	mov    ?,ebp
  40901a:	mov    al,ds:0x40a2f478
  40901f:	das    
  409020:	mov    edx,0x5e39c4f5
  409025:	mov    ds:0xa16af3c0,al
  40902a:	push   esp
  40902b:	ins    BYTE PTR es:[edi],dx
  40902c:	push   ecx
  40902d:	and    BYTE PTR [bx+si],dl
  409030:	arpl   di,cx
  409032:	sbb    BYTE PTR [ebx],0x4e
  409035:	dec    esp
  409036:	and    BYTE PTR [ebp-0x4a],0x95
  40903a:	pop    edx
  40903b:	leave  
  40903c:	or     esi,DWORD PTR [ebx-0x23a28672]
  409042:	repz mov edi,0x5a884473
  409048:	push   edx
  409049:	daa    
  40904a:	inc    edx
  40904b:	repnz leave 
  40904d:	sub    DWORD PTR [ecx],ebp
  40904f:	aaa    
  409050:	popf   
  409051:	add    eax,0xcf6b9e88
  409056:	fld    TBYTE PTR [ecx+eiz*2-0x2]
  40905a:	and    eax,0x5f452e24
  40905f:	addr16 xchg ebx,eax
  409061:	or     edi,eax
  409063:	enter  0xb19d,0xc3
  409067:	sti    
  409068:	call   0xc2a1:0x3e19d49
  40906f:	retf   
  409070:	es adc eax,0x16
  409074:	rcl    DWORD PTR [edx-0x30dbf0d1],0x21
  40907b:	sbb    BYTE PTR [edx],dh
  40907d:	jl     0x409064
  40907f:	pop    es
  409080:	push   es
  409081:	sub    al,0x28
  409083:	jae    0x409064
  409085:	mov    al,ds:0xd7890458
  40908a:	(bad)  
  40908b:	sti    
  40908c:	inc    esi
  40908d:	les    ebp,FWORD PTR [ecx-0x4d7f1762]
  409093:	xchg   cl,cl
  409095:	jecxz  0x4090fd
  409097:	sbb    ch,al
  409099:	push   ebp
  40909a:	(bad)  
  40909b:	fucomi st,st(1)
  40909d:	ins    DWORD PTR es:[edi],dx
  40909e:	add    ch,al
  4090a0:	mov    esi,0x8a85f209
  4090a5:	shr    DWORD PTR [edi+0x19],0x11
  4090a9:	arpl   cx,bx
  4090ab:	push   edx
  4090ac:	and    eax,0xc6cacf55
  4090b1:	test   eax,0x626b4d14
  4090b6:	into   
  4090b7:	jl     0x409105
  4090b9:	inc    esi
  4090ba:	cmp    al,dh
  4090bc:	add    cl,bl
  4090be:	retf   
  4090bf:	pop    edi
  4090c0:	pop    eax
  4090c1:	mov    esi,0x249f42cc
  4090c6:	adc    eax,0xcf11de15
  4090cb:	fcmovne st,st(0)
  4090cd:	push   esi
  4090ce:	inc    ecx
  4090cf:	cmp    eax,DWORD PTR [ecx+0x4459bf31]
  4090d5:	outs   dx,DWORD PTR ds:[esi]
  4090d6:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4090d8:	adc    DWORD PTR [ecx-0x12],eax
  4090db:	pusha  
  4090dc:	xchg   edx,eax
  4090dd:	in     al,dx
  4090de:	or     DWORD PTR [edx+0x53c4ae6d],eax
  4090e4:	leave  
  4090e5:	je     0x409146
  4090e7:	outs   dx,BYTE PTR ds:[esi]
  4090e8:	scas   eax,DWORD PTR es:[edi]
  4090e9:	leave  
  4090ea:	fisub  DWORD PTR [esi+ebx*4]
  4090ed:	push   cs
  4090ee:	(bad)  
  4090ef:	xchg   edx,eax
  4090f0:	mov    ds:0xff3d4fd9,eax
  4090f5:	data16 and al,BYTE PTR [edi-0x5107cd3f]
  4090fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090fd:	jmp    0x6ebe:0x60832cb9
  409104:	cmp    DWORD PTR [ebx],ecx
  409106:	clc    
  409107:	push   ebx
  409108:	dec    edx
  409109:	pop    esi
  40910a:	pushf  
  40910b:	or     al,BYTE PTR [eax+0x4974975a]
  409111:	retf   0x3d6d
  409114:	add    BYTE PTR [edx],ch
  409116:	ss (bad) 
  409118:	in     eax,dx
  409119:	les    esi,FWORD PTR [eax-0x15]
  40911c:	mov    ecx,0x2e46552d
  409121:	dec    esp
  409122:	push   0xdffa970c
  409127:	lods   eax,DWORD PTR ds:[esi]
  409128:	repnz mov ds:0x1ec50e42,eax
  40912e:	adc    BYTE PTR [ebp-0x753c7274],cl
  409134:	inc    edx
  409135:	fisttp WORD PTR [ebx]
  409137:	pop    ebp
  409138:	xchg   DWORD PTR [esi-0x14464a14],edi
  40913e:	inc    edi
  40913f:	es test al,0xc4
  409142:	jl     0x4090c6
  409144:	sub    eax,0x26c3bf77
  409149:	imul   DWORD PTR [edi+0x3e]
  40914c:	xor    ch,BYTE PTR [ecx]
  40914e:	cmp    dl,ah
  409150:	(bad)  
  409152:	int3   
  409153:	xor    BYTE PTR [eax-0x65161861],ah
  409159:	lock adc al,0xbb
  40915c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40915e:	popa   
  40915f:	ret    0xc11f
  409162:	adc    al,0x7a
  409164:	xchg   esi,eax
  409165:	push   ecx
  409166:	xlat   BYTE PTR ds:[ebx]
  409167:	outs   dx,DWORD PTR ds:[esi]
  409168:	or     eax,0x6ce4dc2e
  40916d:	mov    ds:0xf03741d6,al
  409172:	std    
  409173:	adc    eax,0x12c877d2
  409178:	fadd   DWORD PTR [ebx]
  40917a:	add    DWORD PTR [ebp-0x3e],edi
  40917d:	in     eax,0x16
  40917f:	bound  eax,QWORD PTR [ebx+0x7741b003]
  409185:	jle    0x409173
  409187:	sti    
  409188:	mov    al,0x7e
  40918a:	and    esi,DWORD PTR [edx]
  40918c:	hlt    
  40918d:	les    ebp,FWORD PTR [ebx-0x47727faf]
  409193:	jns    0x4091ff
  409195:	xchg   ecx,eax
  409196:	rcr    edx,1
  409198:	gs pop esp
  40919a:	daa    
  40919b:	jae    0x4091ec
  40919d:	sbb    DWORD PTR [edx+0x621de50d],esp
  4091a3:	inc    esp
  4091a4:	out    0xb,al
  4091a6:	lods   eax,DWORD PTR ds:[esi]
  4091a7:	aas    
  4091a8:	adc    al,0xf0
  4091aa:	and    ebx,DWORD PTR [esi+eiz*1+0x34]
  4091ae:	mov    eax,0x3a7c2e9e
  4091b3:	gs dec edi
  4091b5:	fstp   QWORD PTR [ebx]
  4091b7:	lds    ebp,FWORD PTR [ebp+esi*2+0x10]
  4091bb:	sti    
  4091bc:	mov    ebx,0x6ffee1b8
  4091c1:	(bad)  
  4091c3:	es inc ebp
  4091c5:	add    bh,BYTE PTR [ecx-0x4a]
  4091c8:	inc    edx
  4091c9:	ds sub eax,0xc559933c
  4091cf:	bound  ebx,QWORD PTR [edi]
  4091d1:	cli    
  4091d2:	adc    DWORD PTR [edx],esi
  4091d4:	cmp    BYTE PTR [ebp+0x67c393a3],dl
  4091da:	inc    ebp
  4091db:	inc    esp
  4091dc:	dec    eax
  4091dd:	pop    ebp
  4091de:	jno    0x409250
  4091e0:	mov    edi,0x9c8827fb
  4091e5:	mov    DWORD PTR [ebx-0x5f4ab960],ebx
  4091eb:	adc    eax,0x571821c6
  4091f0:	pop    ds
  4091f1:	scas   eax,DWORD PTR es:[edi]
  4091f2:	scas   eax,DWORD PTR es:[edi]
  4091f3:	loopne 0x4091fa
  4091f5:	sbb    ah,dl
  4091f7:	mov    ch,0xb0
  4091f9:	push   edx
  4091fa:	mov    ch,0xfa
  4091fc:	jge    0x40921e
  4091fe:	jae    0x4091a3
  409200:	and    al,al
  409202:	enter  0xb4f1,0x5f
  409206:	sahf   
  409207:	push   ecx
  409208:	clc    
  409209:	sar    BYTE PTR [ecx+edx*8],0xf
  40920d:	and    edi,ebx
  40920f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409210:	sbb    eax,0x35f1d8a8
  409215:	and    bl,ah
  409217:	mov    edi,0x1069d8c9
  40921c:	inc    ecx
  40921d:	pop    ebp
  40921e:	mov    al,ds:0xfe4aeba5
  409223:	jle    0x40925b
  409225:	das    
  409226:	cmp    eax,0x9887cd9c
  40922b:	adc    eax,0xea1480ee
  409230:	dec    ebx
  409231:	call   0x9dba:0x3cc89e38
  409238:	ins    BYTE PTR es:[edi],dx
  409239:	mov    edi,0xc290493f
  40923e:	sbb    ebx,esp
  409240:	mov    ecx,0xe72a5340
  409245:	test   BYTE PTR [ebp-0x4e],bh
  409248:	jp     0x4092ad
  40924a:	adc    ch,BYTE PTR [eax-0x2f36dd0f]
  409250:	cmp    ebp,DWORD PTR [ebp+0x8a430b1]
  409256:	pop    ss
  409257:	mov    dl,BYTE PTR [ebx-0x4e2fdfdc]
  40925d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925e:	fidivr DWORD PTR [ebx]
  409260:	les    esi,FWORD PTR [edx-0x30]
  409263:	mov    bh,BYTE PTR [ecx+0x41798f02]
  409269:	sar    edi,0xbc
  40926c:	ja     0x4092ac
  40926e:	inc    esp
  40926f:	test   BYTE PTR [ecx+esi*1-0x5180e090],cl
  409276:	push   cs
  409277:	mov    edi,0xd6601506
  40927c:	cs aad 0x8e
  40927f:	or     al,0x9
  409281:	int3   
  409282:	dec    ecx
  409283:	xor    al,0x75
  409285:	inc    esi
  409286:	and    dl,cl
  409288:	sar    DWORD PTR [edi+0x21],cl
  40928b:	jecxz  0x40929d
  40928d:	sahf   
  40928e:	adc    eax,0x4b9c21ea
  409293:	dec    esi
  409294:	imul   edi,DWORD PTR [esi+0x53ab0c5],0x9f0391d
  40929e:	adc    BYTE PTR [edi-0x58dc254c],ch
  4092a4:	jecxz  0x409259
  4092a6:	stc    
  4092a7:	sti    
  4092a8:	scas   al,BYTE PTR es:[edi]
  4092a9:	push   cs
  4092aa:	ret    0x837b
  4092ad:	aaa    
  4092ae:	xor    al,0xba
  4092b0:	xor    al,0xdf
  4092b2:	leave  
  4092b3:	hlt    
  4092b4:	push   0xffffff93
  4092b6:	xlat   BYTE PTR ds:[ebx]
  4092b7:	fisubr DWORD PTR [eax+ebx*2-0x24]
  4092bb:	and    BYTE PTR [ebp+0x4c5f85ba],bl
  4092c1:	mov    ebp,0xfc20e7f4
  4092c6:	pop    edi
  4092c7:	adc    eax,esi
  4092c9:	fs mov bl,0xf5
  4092cc:	stos   BYTE PTR es:[edi],al
  4092cd:	pop    edi
  4092ce:	aad    0x49
  4092d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092d1:	sbb    bl,BYTE PTR [edi+0x13b6485a]
  4092d7:	dec    ecx
  4092d8:	jno    0x4092a0
  4092da:	popa   
  4092db:	xchg   ecx,eax
  4092dc:	int3   
  4092dd:	lea    ebp,[eax-0x4eeed5ad]
  4092e3:	mov    BYTE PTR [ebx-0x7719ede4],dl
  4092e9:	cmp    eax,0xc4627679
  4092ee:	pop    ds
  4092ef:	int    0xb5
  4092f1:	test   eax,0x4a9eb5f3
  4092f6:	or     BYTE PTR [eax],0x28
  4092f9:	push   eax
  4092fa:	dec    eax
  4092fb:	fild   DWORD PTR [edx+0x2c]
  4092fe:	pusha  
  4092ff:	icebp  
  409300:	push   edi
  409301:	push   eax
  409302:	or     al,0xfc
  409304:	mov    al,0xc6
  409306:	loop   0x40931f
  409308:	lods   al,BYTE PTR ds:[esi]
  409309:	and    DWORD PTR [edx+0x63],edi
  40930c:	jecxz  0x40935b
  40930e:	push   edx
  40930f:	arpl   bx,bx
  409311:	cmp    al,0xf8
  409313:	and    BYTE PTR [ecx+0x19c4c9ec],ch
  409319:	mov    bh,0x81
  40931b:	inc    edi
  40931c:	adc    esi,DWORD PTR ds:0x696cf265
  409322:	clc    
  409323:	icebp  
  409324:	stos   BYTE PTR es:[edi],al
  409325:	and    BYTE PTR [eax+0x2acf5329],dl
  40932b:	add    BYTE PTR [eax-0x30581171],bl
  409331:	cmp    al,0xe9
  409333:	scas   al,BYTE PTR es:[edi]
  409334:	push   0xffffffb8
  409336:	adc    al,0xf
  409338:	adc    eax,DWORD PTR [esi-0x44]
  40933b:	mov    ebx,0x90891049
  409340:	add    ah,BYTE PTR [esi-0x7b]
  409343:	xchg   ebp,eax
  409344:	cmp    bh,BYTE PTR [edx-0xf]
  409347:	cmc    
  409348:	mov    cl,0x3b
  40934a:	push   esp
  40934b:	pop    ss
  40934c:	add    ecx,DWORD PTR [eax+esi*2-0x43]
  409350:	lods   eax,DWORD PTR ds:[esi]
  409351:	clc    
  409352:	jecxz  0x4092e1
  409354:	push   esp
  409355:	popf   
  409356:	les    edi,FWORD PTR ds:0x9397d662
  40935c:	or     eax,0x5c569fa
  409361:	inc    ebp
  409362:	jp     0x4092e9
  409364:	(bad)  
  409365:	scas   al,BYTE PTR es:[edi]
  409366:	inc    edi
  409367:	loopne 0x409371
  409369:	stos   BYTE PTR es:[edi],al
  40936a:	repnz fnclex 
  40936d:	mov    ebx,0xa32a3e3a
  409372:	nop
  409373:	pop    ecx
  409374:	es adc al,0xda
  409377:	push   ss
  409378:	imul   ebp,edx,0x411edd92
  40937e:	adc    bl,BYTE PTR [esi-0x22]
  409381:	push   ecx
  409382:	in     al,dx
  409383:	ficom  DWORD PTR [edi-0x3d514a8a]
  409389:	sbb    al,0x42
  40938b:	inc    eax
  40938c:	and    eax,0x141de05a
  409391:	in     eax,dx
  409392:	push   es
  409393:	rcr    BYTE PTR [edx],0x49
  409396:	add    DWORD PTR [ecx-0x3c],ebp
  409399:	mov    BYTE PTR [edx-0x4c91c6cd],dh
  40939f:	das    
  4093a0:	retf   
  4093a1:	xor    ecx,DWORD PTR [eax+0x5b]
  4093a4:	or     al,BYTE PTR [edi+edx*8-0x10206988]
  4093ab:	dec    ebp
  4093ac:	sar    BYTE PTR [esi+0x6c78da1c],0x54
  4093b3:	arpl   WORD PTR [esi+0x3bd458a6],cx
  4093b9:	in     al,dx
  4093ba:	mov    edi,0x3320f6f4
  4093bf:	and    bh,BYTE PTR [edi-0x6e]
  4093c2:	xchg   edi,eax
  4093c3:	sar    DWORD PTR [esi-0x38],1
  4093c6:	push   esi
  4093c7:	enter  0xaf03,0xa3
  4093cb:	mul    DWORD PTR [ebp-0x3e6e57b1]
  4093d1:	cmp    bh,BYTE PTR [ecx]
  4093d3:	mov    eax,cs
  4093d5:	cdq    
  4093d6:	sub    DWORD PTR ds:0x9bf730a3,edx
  4093dc:	mov    ds:0x21667600,al
  4093e1:	in     al,dx
  4093e2:	imul   DWORD PTR [ecx]
  4093e4:	in     eax,0x1e
  4093e6:	or     BYTE PTR [eax-0x3f],0x6f
  4093ea:	std    
  4093eb:	fistp  WORD PTR [edx+0x55]
  4093ee:	pop    edi
  4093ef:	jmp    0xe6d3:0x89403a93
  4093f6:	jo     0x4093ac
  4093f8:	xchg   ecx,eax
  4093f9:	mov    cl,0x37
  4093fb:	sub    edx,esp
  4093fd:	stc    
  4093fe:	add    BYTE PTR [edi],bh
  409400:	pop    eax
  409401:	mov    esi,0x69258a9
  409406:	sub    cl,bh
  409408:	adc    bh,dl
  40940a:	cmc    
  40940b:	pushf  
  40940c:	xor    esi,DWORD PTR [esp+ebp*4+0x4ee7754f]
  409413:	out    0x55,al
  409415:	call   0xe6241de9
  40941a:	jp     0x4093b4
  40941c:	ret    0xd5c4
  40941f:	jmp    0xcec4:0xf648a21f
  409426:	repz and dh,dl
  409429:	sbb    DWORD PTR [ecx],ebx
  40942b:	sub    edi,esi
  40942d:	mov    dh,ch
  40942f:	pop    ds
  409430:	dec    eax
  409431:	aad    0x78
  409433:	addr16 js 0x4093d8
  409436:	in     al,dx
  409437:	mov    WORD PTR ds:0xd2b72f12,?
  40943d:	lock adc eax,0xf4e5ec0c
  409443:	pusha  
  409444:	mov    ds:0x9cd26892,al
  409449:	sub    DWORD PTR [edi+eiz*4+0x5870d9bc],edi
  409450:	jo     0x40943c
  409452:	sti    
  409453:	cld    
  409454:	cdq    
  409455:	or     al,0x70
  409457:	aas    
  409458:	scas   al,BYTE PTR es:[edi]
  409459:	int3   
  40945a:	and    al,0xfd
  40945c:	shr    BYTE PTR [edx-0x446757dd],1
  409462:	inc    eax
  409463:	aam    0x6f
  409465:	es ins WORD PTR es:[edi],dx
  409468:	sub    ecx,eax
  40946a:	inc    ecx
  40946b:	(bad)  [edx+eiz*1-0x2822596a]
  409472:	cmp    BYTE PTR [ebx+0x61],ch
  409475:	mov    dl,0x36
  409477:	bound  esp,QWORD PTR [ecx+0x62fadb30]
  40947d:	idiv   DWORD PTR [eax+0x1b]
  409480:	mov    edi,edx
  409482:	push   0x729fbfcd
  409487:	push   ebp
  409488:	add    ah,BYTE PTR [edi+0x58]
  40948b:	fs mov eax,0xc102d05f
  409491:	in     al,0x47
  409493:	inc    esi
  409494:	sub    DWORD PTR [esi-0x66],edx
  409497:	je     0x4094a0
  409499:	mul    ebp
  40949b:	inc    eax
  40949c:	xchg   BYTE PTR [edx+0x4fba6575],bh
  4094a2:	ret    
  4094a3:	mov    BYTE PTR [esi+0x2bf1b1a1],cl
  4094a9:	add    al,BYTE PTR [esi+0x2e9eb6aa]
  4094af:	or     BYTE PTR [ecx],cl
  4094b1:	or     edi,eax
  4094b3:	xchg   esp,eax
  4094b4:	sar    DWORD PTR [ecx-0x4a],1
  4094b7:	test   eax,0x9938edc7
  4094bc:	lods   al,BYTE PTR ds:[esi]
  4094bd:	inc    ebx
  4094be:	push   esi
  4094bf:	or     ah,BYTE PTR [ecx]
  4094c1:	js     0x4094e2
  4094c3:	int    0x80
  4094c5:	fisubr DWORD PTR [esi+0x73074f8c]
  4094cb:	add    eax,0x3fc22891
  4094d0:	mov    BYTE PTR [edx],al
  4094d2:	outs   dx,BYTE PTR ds:[esi]
  4094d3:	scas   eax,DWORD PTR es:[edi]
  4094d4:	xchg   ebx,eax
  4094d5:	dec    esi
  4094d6:	mov    esi,gs
  4094d8:	jp     0x40952a
  4094da:	data16 cli 
  4094dc:	inc    esp
  4094dd:	fisubr DWORD PTR [ebx-0x50d6456c]
  4094e3:	inc    eax
  4094e4:	jg     0x409474
  4094e6:	or     DWORD PTR [edi-0x8d0ec83],0xf560fb8a
  4094f0:	in     eax,0x59
  4094f2:	jmp    0xcf74427a
  4094f7:	mov    ebp,0x13d8be09
  4094fc:	push   ebx
  4094fd:	mov    esp,0x628b4047
  409502:	lock mov bh,0x8
  409505:	xchg   ecx,eax
  409506:	fwait
  409507:	inc    edx
  409508:	mov    cl,0xcf
  40950a:	stos   BYTE PTR es:[edi],al
  40950b:	or     BYTE PTR [esi-0x4b58e534],bh
  409511:	cwde   
  409512:	ins    DWORD PTR es:[edi],dx
  409513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409514:	rol    DWORD PTR [esi-0x50],cl
  409517:	dec    ecx
  409518:	int3   
  409519:	(bad)  
  40951a:	pop    esi
  40951b:	inc    ecx
  40951c:	ins    BYTE PTR es:[edi],dx
  40951d:	cli    
  40951e:	lods   al,BYTE PTR ds:[esi]
  40951f:	data16 cmp al,0x3a
  409522:	mov    eax,ds:0x29c01ab6
  409527:	xchg   ebx,eax
  409528:	rcl    DWORD PTR [eax],1
  40952a:	push   es
  40952b:	cdq    
  40952c:	ins    DWORD PTR es:[edi],dx
  40952d:	xlat   BYTE PTR ds:[ebx]
  40952e:	jge    0x409575
  409530:	fidiv  WORD PTR [edi+0x42d79f46]
  409536:	or     eax,0x76d5f4fe
  40953b:	das    
  40953c:	out    0x1e,al
  40953e:	pop    ss
  40953f:	imul   ecx,DWORD PTR [edx-0x1e8e43],0xfcf98d4
  409549:	adc    bl,bh
  40954b:	xor    BYTE PTR [esp+ebx*2-0x637aa6de],dl
  409552:	mov    ds:0x353bace5,eax
  409557:	clc    
  409558:	fisubr WORD PTR [ebp-0x72ee44de]
  40955e:	jo     0x409578
  409560:	push   ds
  409561:	adc    edx,edi
  409563:	loop   0x409519
  409565:	sbb    al,0x8a
  409567:	fild   WORD PTR [edi-0x1f]
  40956a:	dec    edx
  40956b:	aaa    
  40956c:	repz xchg ebp,eax
  40956e:	adc    eax,0x7a286cb4
  409573:	cld    
  409574:	sbb    BYTE PTR [edi-0x80],cl
  409577:	sar    ebx,1
  409579:	lds    esp,FWORD PTR ds:0x46200114
  40957f:	outs   dx,BYTE PTR ds:[esi]
  409580:	mov    ecx,ds
  409582:	jo     0x4095fd
  409584:	inc    eax
  409585:	stc    
  409586:	adc    eax,0xa7d30df9
  40958b:	aaa    
  40958c:	cwde   
  40958d:	xchg   ebp,eax
  40958e:	lods   eax,DWORD PTR ds:[esi]
  40958f:	mov    bh,BYTE PTR [ebp-0x6ab6294]
  409595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409596:	dec    edx
  409597:	mov    ecx,0x80217742
  40959c:	xor    DWORD PTR [edi+esi*1-0x9814a9],ebx
  4095a3:	cld    
  4095a4:	pop    ss
  4095a5:	jno    0x4095f0
  4095a7:	aad    0x70
  4095a9:	mul    DWORD PTR [ebp+0x25]
  4095ac:	add    ebp,DWORD PTR [eax]
  4095ae:	fwait
  4095af:	test   DWORD PTR [eax-0x5],eax
  4095b2:	rcr    ch,0xb0
  4095b5:	rcl    DWORD PTR [ecx-0x1a39bd07],cl
  4095bb:	dec    eax
  4095bc:	and    ebx,DWORD PTR [esi+0x18]
  4095bf:	jge    0x4095e5
  4095c1:	xchg   ecx,eax
  4095c2:	call   0x9827:0xe8f77700
  4095c9:	mov    bh,0xf1
  4095cb:	sbb    dl,BYTE PTR [esi-0x26b22d5d]
  4095d1:	mov    dl,0x5c
  4095d3:	or     cl,BYTE PTR [eax+0x207a4a85]
  4095d9:	mov    ecx,DWORD PTR [edx+0x2fe0a585]
  4095df:	add    edx,DWORD PTR ds:0x10b6ac94
  4095e5:	inc    ecx
  4095e7:	enter  0x40c9,0x5e
  4095eb:	in     al,dx
  4095ec:	aad    0x5
  4095ee:	lds    edx,FWORD PTR [edi+0x5bb842ee]
  4095f4:	or     al,0x5b
  4095f6:	cmp    BYTE PTR [esi-0x65],al
  4095f9:	sub    al,0x4
  4095fb:	repz mov ebp,0x769ab7df
  409601:	or     ecx,DWORD PTR [ebp+0x157e6ebe]
  409607:	sub    ebx,ebp
  409609:	cmp    al,0xfc
  40960b:	fst    QWORD PTR [ebx+eax*1+0xc]
  40960f:	loop   0x4095ce
  409611:	pop    ebp
  409612:	popa   
  409613:	or     BYTE PTR [esi-0x7cac8947],al
  409619:	lock mov BYTE PTR [eax-0x78],cl
  40961d:	fld    TBYTE PTR [ecx]
  40961f:	ret    0xd28
  409622:	xor    dh,BYTE PTR [ecx+0x60]
  409625:	dec    ebp
  409626:	or     edi,eax
  409628:	call   0x52708fb7
  40962d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40962e:	pop    ebp
  40962f:	mov    esp,0xea0c0e1c
  409634:	ficomp DWORD PTR [esi-0x3]
  409637:	add    BYTE PTR [eax],bh
  409639:	or     DWORD PTR [ecx-0x54],0x736bc5f4
  409640:	xchg   ebp,eax
  409641:	fmul   st(1),st
  409643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409644:	jae    0x4095f0
  409646:	cwde   
  409647:	ss jns 0x40966d
  40964a:	jbe    0x4095fc
  40964c:	xor    eax,0xbe0c4c5b
  409651:	mov    ebx,ss
  409653:	pop    eax
  409654:	sbb    al,0xd1
  409656:	js     0x40968d
  409658:	mov    ds:0x3559cf79,al
  40965d:	imul   esi,DWORD PTR [ecx],0x62
  409660:	test   eax,0x87898860
  409665:	outs   dx,DWORD PTR ds:[esi]
  409666:	jnp    0x4096a1
  409668:	lock push edx
  40966a:	push   ds
  40966b:	add    cl,bl
  40966d:	cmc    
  40966e:	xor    al,0x74
  409670:	(bad)  
  409671:	adc    eax,0x7e37aa8f
  409676:	mov    ds:0x7cdfb973,eax
  40967b:	fist   WORD PTR [eax-0x50]
  40967e:	(bad)  
  40967f:	sub    cl,bh
  409681:	add    DWORD PTR [ecx-0x15],ebp
  409684:	mov    al,ds:0xc02d0348
  409689:	inc    eax
  40968a:	aam    0x57
  40968c:	cwde   
  40968d:	sub    eax,0xc1ba084b
  409692:	inc    edi
  409693:	cmp    eax,0x80821043
  409698:	add    DWORD PTR [edx],ebp
  40969a:	xor    DWORD PTR [ebx],ebx
  40969c:	fst    QWORD PTR [edx]
  40969e:	lahf   
  40969f:	add    dh,ch
  4096a1:	fwait
  4096a2:	out    dx,eax
  4096a3:	adc    ah,BYTE PTR [ebx+0x29ca9b27]
  4096a9:	stos   BYTE PTR es:[edi],al
  4096aa:	mov    ecx,DWORD PTR [esi+0x52]
  4096ad:	fbld   TBYTE PTR [ebx+0x1e]
  4096b0:	jns    0x409708
  4096b2:	jbe    0x409643
  4096b4:	or     DWORD PTR [eax+esi*4],edi
  4096b7:	push   ecx
  4096b8:	xchg   edi,eax
  4096b9:	jo     0x409707
  4096bb:	imul   ecx,DWORD PTR [esi],0xd
  4096be:	sub    BYTE PTR [edi-0x553f42f9],al
  4096c4:	push   ecx
  4096c5:	dec    esp
  4096c6:	adc    al,0x9b
  4096c8:	retf   
  4096c9:	cs cmc 
  4096cb:	jnp    0x40971b
  4096cd:	xchg   ebp,eax
  4096ce:	and    dl,BYTE PTR [edx-0x171b4364]
  4096d4:	push   ebp
  4096d5:	dec    eax
  4096d6:	sahf   
  4096d7:	and    DWORD PTR [ebx-0x2d],esi
  4096da:	mov    eax,ds:0xdd8b1672
  4096df:	adc    BYTE PTR [ecx-0x46cb3557],dl
  4096e5:	lods   eax,DWORD PTR ds:[esi]
  4096e6:	enter  0xb9d6,0x10
  4096ea:	add    ah,BYTE PTR [esi]
  4096ec:	add    dh,BYTE PTR [ebx-0x5977fb20]
  4096f2:	adc    DWORD PTR [edi],ebp
  4096f4:	xor    BYTE PTR [ebp+0x1cc07a00],bh
  4096fa:	dec    edx
  4096fb:	rcl    ebx,cl
  4096fd:	xor    al,0xfc
  4096ff:	jg     0x409721
  409701:	pop    ds
  409702:	pop    edi
  409703:	data16 sub al,0x42
  409706:	ret    
  409707:	and    esp,esi
  409709:	adc    DWORD PTR [eax+eax*4-0x7e5d9573],0xffffffd6
  409711:	std    
  409712:	xlat   BYTE PTR ds:[ebx]
  409713:	mov    ebp,0x92e41b6b
  409718:	xor    DWORD PTR [ebx-0x1e5c3528],esi
  40971e:	mov    ecx,0xe2d3a72e
  409723:	mov    eax,0x34cd8397
  409728:	jle    0x40970c
  40972a:	pop    ss
  40972b:	sbb    al,0xf8
  40972d:	mov    ah,BYTE PTR [edi+eax*8+0x663af145]
  409734:	and    bl,BYTE PTR [esi-0x33]
  409737:	push   esp
  409738:	inc    ecx
  409739:	stc    
  40973a:	or     cl,BYTE PTR [esi-0x72]
  40973d:	mov    bh,0x66
  40973f:	mov    ah,0x2f
  409741:	xchg   ebp,eax
  409742:	shl    DWORD PTR [ebp-0x2cde4851],1
  409748:	inc    edi
  409749:	inc    ecx
  40974a:	pop    ss
  40974b:	inc    edi
  40974c:	ffreep st(6)
  40974e:	inc    esi
  40974f:	call   0x75249f56
  409754:	add    al,0xf1
  409756:	sbb    dl,BYTE PTR ds:0x4e5f508
  40975c:	pop    eax
  40975d:	jnp    0x409766
  40975f:	fisttp WORD PTR [edi+0x3b]
  409762:	xor    DWORD PTR [ebp+0xd],esi
  409765:	push   0xa46b8910
  40976a:	push   ebx
  40976b:	cli    
  40976c:	cmp    al,0xa8
  40976e:	sub    BYTE PTR [ebx+0x15],bh
  409771:	xchg   DWORD PTR [esi-0x2],ecx
  409774:	push   ecx
  409775:	shr    ebx,1
  409777:	add    BYTE PTR [edx],0x20
  40977a:	push   esi
  40977b:	jnp    0x409723
  40977d:	pop    esp
  40977e:	mov    eax,0x23bf633f
  409783:	outs   dx,DWORD PTR ds:[esi]
  409784:	inc    ebp
  409785:	push   es
  409786:	mov    WORD PTR [edx-0x29],?
  409789:	add    DWORD PTR [edx-0x5e],edi
  40978c:	sbb    BYTE PTR [ecx],bl
  40978e:	jmp    0x409723
  409790:	cmp    al,0x7e
  409792:	jl     0x409773
  409794:	ror    DWORD PTR [esp+edx*1-0x5519e04e],1
  40979b:	cld    
  40979c:	pop    edi
  40979d:	data16 xlat BYTE PTR ds:[ebx]
  40979f:	push   esi
  4097a0:	adc    edx,esi
  4097a2:	inc    esi
  4097a3:	xchg   esi,eax
  4097a4:	stc    
  4097a5:	in     eax,dx
  4097a6:	mov    bh,0xb6
  4097a8:	or     edi,ebp
  4097aa:	dec    ecx
  4097ab:	push   esi
  4097ac:	cmp    eax,0x5ec9c71d
  4097b1:	push   esi
  4097b2:	aam    0xfe
  4097b4:	jne    0x409820
  4097b6:	and    BYTE PTR [ecx+0x67],ch
  4097b9:	rcr    BYTE PTR [esi],cl
  4097bb:	je     0x40973e
  4097bd:	jecxz  0x4097bb
  4097bf:	cmp    esi,DWORD PTR [edx]
  4097c1:	dec    ebp
  4097c2:	cmp    DWORD PTR [ecx-0x701b844],esp
  4097c8:	call   0x9c0b:0xb8d80f89
  4097cf:	mov    edx,0xe4a2131f
  4097d4:	gs sbb al,0x25
  4097d7:	clc    
  4097d8:	int3   
  4097d9:	frstor [edx]
  4097db:	push   0x8fd6a083
  4097e0:	test   al,0xbf
  4097e2:	sub    BYTE PTR [eax],0xd3
  4097e5:	or     edx,DWORD PTR [edx+0x26]
  4097e8:	(bad)  
  4097e9:	pop    ds
  4097ea:	or     BYTE PTR [esi],ch
  4097ec:	iret   
  4097ed:	push   0x9a4b5136
  4097f2:	push   ebp
  4097f3:	fsub   DWORD PTR [esi+0x6a]
  4097f6:	cmp    BYTE PTR [ebx+0x15],al
  4097f9:	lahf   
  4097fa:	jno    0x4097cb
  4097fc:	lds    edi,FWORD PTR [edx+0x58316c34]
  409802:	dec    ebp
  409803:	cdq    
  409804:	add    ecx,DWORD PTR [ebp-0x10]
  409807:	icebp  
  409808:	in     eax,dx
  409809:	pop    eax
  40980a:	xchg   esp,eax
  40980b:	cmp    ecx,DWORD PTR [ebx+0x4a3830d4]
  409811:	jmp    0x146d1974
  409816:	sub    dl,dh
  409818:	inc    edx
  409819:	adc    bl,ch
  40981b:	repnz mov esp,0xbf4b15da
  409821:	popf   
  409822:	pop    edi
  409823:	sbb    cl,BYTE PTR [eax]
  409825:	add    eax,0x253242ea
  40982a:	hlt    
  40982b:	lods   eax,DWORD PTR ds:[esi]
  40982c:	push   edx
  40982d:	imul   esi,DWORD PTR [ebx],0xe9e9d9cd
  409833:	xor    al,0x33
  409835:	jl     0x409804
  409837:	sbb    DWORD PTR [ebx+0x4866a239],edx
  40983d:	sbb    al,0xf7
  40983f:	jmp    0xa97e:0xee557d7c
  409846:	pop    ecx
  409847:	fbstp  TBYTE PTR [ecx-0x5]
  40984a:	add    edx,esp
  40984c:	push   edi
  40984d:	xchg   edx,eax
  40984e:	cmp    DWORD PTR [eax-0x2dbd4a40],esp
  409854:	jae    0x4098cb
  409856:	aam    0x4d
  409858:	or     eax,0x65ab0c5b
  40985d:	popf   
  40985e:	jno    0x409879
  409860:	ins    BYTE PTR es:[edi],dx
  409861:	ror    edi,1
  409863:	xor    eax,0xd8f099bd
  409868:	jb     0x40983a
  40986a:	mov    al,ds:0xcfd2c0a6
  40986f:	inc    ebp
  409870:	mov    gs,WORD PTR [ebx+0x38]
  409873:	mov    BYTE PTR [edi+0x61],ch
  409876:	arpl   WORD PTR [eax],di
  409878:	jae    0x409879
  40987a:	sub    edx,edx
  40987c:	push   ebx
  40987d:	pop    ebx
  40987e:	sbb    edi,DWORD PTR [ebp-0x47bd60f3]
  409884:	lods   al,BYTE PTR ds:[esi]
  409885:	mov    BYTE PTR [edi],bl
  409887:	arpl   WORD PTR [esi],bx
  409889:	dec    edi
  40988a:	inc    ebp
  40988b:	test   ecx,edx
  40988d:	and    al,0x2f
  40988f:	dec    ecx
  409890:	imul   BYTE PTR [eax-0x56]
  409893:	mov    ah,0x4a
  409895:	ror    BYTE PTR [ebx+0x6f],cl
  409898:	push   ebx
  409899:	ficomp WORD PTR [edx+0x15095a2c]
  40989f:	dec    esi
  4098a0:	jle    0x409910
  4098a2:	loop   0x409881
  4098a4:	leave  
  4098a5:	pop    esp
  4098a6:	and    eax,0x31ad5a6f
  4098ab:	icebp  
  4098ac:	mov    eax,0xc2fbd840
  4098b1:	cli    
  4098b2:	lea    eax,[esi+0x45bc52c5]
  4098b8:	mov    al,ds:0xa5ffcc2c
  4098bd:	mov    ds:0x3eafdc0d,eax
  4098c2:	or     al,0x15
  4098c4:	ja     0x40989b
  4098c6:	dec    edi
  4098c7:	pop    ds
  4098c8:	cmp    bh,dl
  4098ca:	sub    esi,DWORD PTR [ecx]
  4098cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098cd:	cld    
  4098ce:	cdq    
  4098cf:	push   esp
  4098d0:	stos   DWORD PTR es:[edi],eax
  4098d1:	sbb    esi,DWORD PTR [eax+0x26]
  4098d4:	xor    al,0xc6
  4098d6:	push   ds
  4098d7:	adc    eax,0x9d59b0ef
  4098dc:	test   DWORD PTR [eax],ecx
  4098de:	inc    edx
  4098df:	in     eax,dx
  4098e0:	repz aad 0xbc
  4098e3:	fld    DWORD PTR [esi-0x3b1d311a]
  4098e9:	pop    edi
  4098ea:	adc    al,0x83
  4098ec:	jbe    0x4098ae
  4098ee:	push   es
  4098ef:	aad    0x76
  4098f1:	test   DWORD PTR [eax-0x687b17b],esi
  4098f7:	sub    al,0x44
  4098f9:	sub    eax,0xb1f8e2c2
  4098fe:	pop    eax
  4098ff:	xchg   esi,eax
  409900:	fidivr WORD PTR [eax+0x50]
  409903:	clc    
  409904:	popa   
  409905:	mov    WORD PTR [ecx-0x3b865a2b],ds
  40990b:	push   es
  40990c:	inc    edx
  40990d:	dec    edx
  40990e:	shl    DWORD PTR [esi+0x71],1
  409911:	xor    al,bh
  409913:	out    0xaf,eax
  409915:	call   0xf2e9143d
  40991a:	outs   dx,BYTE PTR ds:[esi]
  40991b:	mov    ebx,0xa77d9530
  409920:	xchg   esi,eax
  409921:	pop    eax
  409922:	jg     0x40992b
  409924:	xchg   ebx,eax
  409925:	and    al,0xf9
  409927:	in     al,0x20
  409929:	mov    ah,0x45
  40992b:	xchg   bl,bl
  40992d:	popf   
  40992e:	out    dx,al
  40992f:	jnp    0x40993e
  409931:	mov    bl,0xe0
  409933:	aad    0x21
  409935:	inc    ebx
  409936:	xchg   esi,eax
  409937:	fimul  DWORD PTR [ecx]
  409939:	shr    DWORD PTR [ecx-0x13922027],1
  40993f:	data16 std 
  409941:	mov    eax,0xb320ed26
  409946:	push   0xffffff89
  409948:	cmp    al,bh
  40994a:	add    ah,al
  40994c:	mov    edx,DWORD PTR [esp+ecx*1]
  40994f:	imul   DWORD PTR [esi-0x414d6df2]
  409955:	pop    esp
  409956:	add    eax,0x1a840d42
  40995b:	jnp    0x409939
  40995d:	xor    eax,0x1d5d7614
  409962:	fstp   QWORD PTR [ebx-0x3b]
  409965:	hlt    
  409966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409967:	adc    DWORD PTR [eax],esp
  409969:	mov    esp,0xd3c9845d
  40996e:	ja     0x4099d3
  409970:	js     0x409916
  409972:	psrad  mm1,0x51
  409976:	xchg   ebx,eax
  409977:	stc    
  409978:	xchg   esi,eax
  409979:	jns    0x40996b
  40997b:	xor    al,0xa4
  40997d:	rcr    al,cl
  40997f:	xchg   esi,eax
  409980:	jmp    0x409968
  409982:	lahf   
  409983:	paddb  mm3,QWORD PTR [edi]
  409986:	jo     0x40990c
  409988:	cwde   
  409989:	scas   eax,DWORD PTR es:[edi]
  40998a:	inc    esi
  40998b:	mov    edi,0xcc1cc0c
  409990:	fidiv  DWORD PTR [esi-0x65747803]
  409996:	mov    eax,DWORD PTR [ebx*2-0x487b0f38]
  40999d:	push   ax
  40999f:	mov    dh,0xf4
  4099a1:	nop
  4099a2:	sbb    eax,0x3512dc4d
  4099a7:	lock fucomi st,st(7)
  4099aa:	add    BYTE PTR [ebp+0x22],0x8d
  4099ae:	cmp    al,0xf4
  4099b0:	jle    0x409a31
  4099b2:	or     eax,0xa49801c
  4099b7:	fs push ds
  4099b9:	cli    
  4099ba:	sti    
  4099bb:	push   ebx
  4099bc:	sub    BYTE PTR [ecx],0x71
  4099bf:	arpl   WORD PTR [edi],cx
  4099c1:	adc    DWORD PTR [edi],0x60b47599
  4099c7:	and    cl,BYTE PTR [eax-0x1a]
  4099ca:	or     ecx,DWORD PTR [ebp+0xa]
  4099cd:	xor    al,0x4e
  4099cf:	xchg   edi,eax
  4099d0:	pop    ebx
  4099d1:	ja     0x409959
  4099d3:	js     0x4099bb
  4099d5:	loop   0x409960
  4099d7:	fs (bad) 
  4099d9:	ror    ecx,cl
  4099db:	dec    esi
  4099dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099dd:	test   eax,0x81358bb0
  4099e2:	mov    edx,0xe16ccf0a
  4099e7:	xchg   ebx,eax
  4099e8:	xchg   edi,eax
  4099e9:	push   es
  4099ea:	and    eax,0x8a76a956
  4099ef:	or     al,0x36
  4099f1:	pop    ebx
  4099f2:	lea    esi,[esi+eiz*8]
  4099f5:	and    cl,bl
  4099f7:	mov    DWORD PTR [esi-0x5761117b],ebp
  4099fd:	mov    edx,0x1c330480
  409a02:	call   0x12f4:0x57b32be8
  409a09:	loope  0x409a26
  409a0b:	retf   
  409a0c:	(bad)  
  409a0d:	push   cs
  409a0e:	mov    ah,0x63
  409a10:	(bad)  
  409a11:	cmc    
  409a12:	sub    BYTE PTR [edi+edi*1],bl
  409a15:	xchg   BYTE PTR [eax+esi*4],dh
  409a18:	push   esp
  409a19:	ror    BYTE PTR [eax],0x8f
  409a1c:	push   edx
  409a1d:	and    al,0x26
  409a1f:	xchg   dl,dl
  409a21:	js     0x4099f7
  409a23:	mov    dh,0x36
  409a25:	stc    
  409a26:	in     al,0x7b
  409a28:	mov    DWORD PTR [edi+esi*2+0x763827bf],esp
  409a2f:	(bad)
  409a32:	or     al,0xe1
  409a34:	call   0xba16:0xd0d2922
  409a3b:	pop    esi
  409a3c:	rcr    bh,0x66
  409a3f:	outs   dx,BYTE PTR ds:[esi]
  409a40:	mov    DWORD PTR [eax],ecx
  409a42:	or     al,0x4a
  409a44:	xchg   BYTE PTR [eax-0x440748b2],cl
  409a4a:	gs cmc 
  409a4c:	cmp    cl,BYTE PTR [ebx+0x1f0e1dc2]
  409a52:	mov    ebx,ss
  409a54:	add    esp,DWORD PTR [esi+0x179c600b]
  409a5a:	inc    eax
  409a5b:	xchg   DWORD PTR [edi-0x352d2b49],ebp
  409a61:	pop    ds
  409a62:	call   0xc37780dd
  409a67:	cdq    
  409a68:	or     BYTE PTR [edi],0x7d
  409a6b:	pushf  
  409a6c:	mov    ecx,0x2fcfb4f1
  409a71:	jno    0x409aa0
  409a73:	pusha  
  409a74:	or     ecx,DWORD PTR [ebx+0x48a5e246]
  409a7a:	adc    ch,BYTE PTR [ebx+0x5b]
  409a7d:	sub    esp,DWORD PTR [esi]
  409a7f:	mov    cl,0x85
  409a81:	dec    ecx
  409a82:	mov    edx,0xfa25bf8
  409a87:	addr16 nop
  409a89:	adc    al,0x87
  409a8b:	xchg   esi,eax
  409a8c:	das    
  409a8d:	inc    eax
  409a8e:	mov    WORD PTR [eax-0x5014a9ae],cs
  409a94:	push   0x9
  409a96:	mov    WORD PTR [ebx+0x75286a0d],es
  409a9c:	mov    esi,0x5ad1eb48
  409aa1:	das    
  409aa2:	sub    DWORD PTR [esi],ebp
  409aa4:	adc    BYTE PTR [eax+0x46],bl
  409aa7:	inc    esi
  409aa8:	sub    DWORD PTR [eax],ebp
  409aaa:	rol    DWORD PTR [ecx],0x66
  409aad:	(bad)  
  409aaf:	je     0x409a38
  409ab1:	inc    eax
  409ab2:	les    eax,FWORD PTR [eax+0x4e]
  409ab5:	js     0x409aac
  409ab7:	inc    ebx
  409ab8:	rcr    BYTE PTR [edx-0x58e25bc],cl
  409abe:	cmp    ah,BYTE PTR [esi-0x36a2c9d1]
  409ac4:	pop    ss
  409ac5:	xor    DWORD PTR [ebp-0x7a],edx
  409ac8:	jne    0x409b26
  409aca:	cmp    edx,ebx
  409acc:	rcr    BYTE PTR [edi],0x62
  409acf:	mov    esi,0x3bcc558
  409ad4:	(bad)  
  409ad5:	scas   al,BYTE PTR es:[edi]
  409ad6:	sar    BYTE PTR [ecx],1
  409ad8:	xor    BYTE PTR [edx],bh
  409ada:	inc    esi
  409adb:	mov    bl,0x43
  409add:	adc    DWORD PTR [edi+edi*8],edi
  409ae0:	mov    edi,0x7d04d18b
  409ae5:	mov    bl,0x17
  409ae7:	or     eax,0x5f3bcef0
  409aec:	inc    esp
  409aed:	adc    al,0xbe
  409aef:	aaa    
  409af0:	sbb    cl,BYTE PTR [ecx+ebx*4+0x58fd5a97]
  409af7:	loop   0x409aed
  409af9:	fnstsw WORD PTR [esi-0x370ae5bd]
  409aff:	test   eax,0xe4195b09
  409b04:	shl    DWORD PTR [ebx-0x77],cl
  409b07:	push   ecx
  409b08:	pusha  
  409b09:	icebp  
  409b0a:	pop    edi
  409b0b:	out    0x1a,al
  409b0d:	scas   eax,DWORD PTR es:[edi]
  409b0e:	addr16 mov ebx,0xc3871c70
  409b14:	jno    0x409b1f
  409b16:	jb     0x409b82
  409b18:	push   cs
  409b19:	mov    edx,0xb1504611
  409b1e:	iret   
  409b1f:	inc    ebx
  409b20:	test   eax,0xfb1ebdc4
  409b25:	xor    DWORD PTR [esi+0x51],ebx
  409b28:	or     eax,esp
  409b2a:	pop    eax
  409b2b:	pop    edx
  409b2c:	push   ss
  409b2d:	daa    
  409b2e:	rcl    eax,1
  409b30:	repz push 0x59112847
  409b36:	xlat   BYTE PTR ds:[ebx]
  409b37:	out    0x3c,al
  409b39:	push   esp
  409b3a:	lock cwde 
  409b3c:	(bad)  
  409b3d:	out    dx,al
  409b3e:	push   edx
  409b3f:	lods   al,BYTE PTR ds:[esi]
  409b40:	data16 fsub QWORD PTR [edi-0x63102b0c]
  409b47:	lahf   
  409b48:	adc    dh,BYTE PTR [ebp-0x55]
  409b4b:	imul   esi,eax,0xfffffff3
  409b4e:	ins    BYTE PTR es:[edi],dx
  409b4f:	xlat   BYTE PTR ds:[ebx]
  409b50:	adc    ch,BYTE PTR [ebx-0x77]
  409b53:	inc    edx
  409b54:	push   esp
  409b55:	pop    ss
  409b56:	call   FWORD PTR [ebx+ecx*1-0x70]
  409b5a:	wrmsr  
  409b5c:	cwde   
  409b5d:	jmp    0x88f5336a
  409b62:	xchg   ebx,eax
  409b63:	push   ebp
  409b64:	sub    eax,0xd9c37c5b
  409b69:	es ret 
  409b6b:	scas   eax,DWORD PTR es:[edi]
  409b6c:	call   0x19a2:0xd3b8a411
  409b73:	or     edx,ecx
  409b75:	inc    eax
  409b76:	inc    edi
  409b77:	int3   
  409b78:	es (bad) 
  409b7a:	adc    ebp,ebx
  409b7c:	sbb    edi,ebx
  409b7e:	ins    BYTE PTR es:[edi],dx
  409b7f:	sbb    dh,BYTE PTR gs:[ebx+0x68]
  409b83:	inc    esp
  409b84:	test   BYTE PTR [edx+0x3c],bl
  409b87:	test   BYTE PTR [eax-0x66],bh
  409b8a:	jns    0x409b6a
  409b8c:	retf   0x5576
  409b8f:	mov    edi,0x998916b4
  409b94:	fstp   QWORD PTR [eax-0x4e]
  409b97:	push   ebx
  409b98:	cmp    ecx,ebp
  409b9a:	into   
  409b9b:	fadd   DWORD PTR [ecx-0x185f0cb1]
  409ba1:	int    0xcc
  409ba3:	sbb    ebp,DWORD PTR [edi+0x57]
  409ba6:	je     0x409bc4
  409ba8:	out    dx,eax
  409ba9:	add    ebx,DWORD PTR [ebp+0x1e]
  409bac:	imul   edx,ecx,0xaefd7c7b
  409bb2:	cmp    dl,bh
  409bb4:	dec    ebx
  409bb5:	sbb    bl,ah
  409bb7:	pop    eax
  409bb8:	mov    ds:0x2c557867,al
  409bbd:	fdivr  DWORD PTR [esi-0x47]
  409bc0:	cdq    
  409bc1:	inc    ebx
  409bc2:	jb     0x409c1e
  409bc4:	add    edx,edx
  409bc6:	xchg   DWORD PTR [ebp-0xc],edx
  409bc9:	dec    ecx
  409bca:	add    edx,DWORD PTR [eax+0x550213fd]
  409bd0:	(bad)  
  409bd1:	xor    al,0x78
  409bd3:	(bad)  
  409bd4:	pushf  
  409bd5:	push   ss
  409bd6:	cmp    al,0x3e
  409bd8:	sub    eax,0x964e3655
  409bdd:	dec    eax
  409bde:	xor    al,0xc1
  409be0:	push   es
  409be1:	and    al,0xb2
  409be3:	push   eax
  409be4:	push   eax
  409be5:	test   DWORD PTR [eax+0x3d],eax
  409be8:	in     al,0x6f
  409bea:	sahf   
  409beb:	sahf   
  409bec:	mov    eax,ds:0xde988afe
  409bf1:	rcr    BYTE PTR [esp+eax*1+0x78672308],0x97
  409bf9:	pop    eax
  409bfa:	ror    DWORD PTR [ebx-0x2e947e90],1
  409c00:	mov    ds:0x2fd92fe5,eax
  409c05:	jns    0x409c80
  409c07:	out    0xb9,al
  409c09:	into   
  409c0a:	bound  ecx,QWORD PTR [edi]
  409c0c:	imul   edi,DWORD PTR [edi],0x3d
  409c0f:	inc    esi
  409c10:	jmp    0x5f5a:0x268afa39
  409c17:	jbe    0x409be1
  409c19:	popf   
  409c1a:	mov    ah,0xae
  409c1c:	push   esp
  409c1d:	lahf   
  409c1e:	ss xor eax,0xd90cc283
  409c24:	ret    0xdfc1
  409c27:	enter  0x5e26,0x20
  409c2b:	or     ecx,DWORD PTR [ecx+0x4e]
  409c2e:	xor    ebp,DWORD PTR [ecx]
  409c30:	shr    ah,1
  409c32:	es dec ebp
  409c34:	cmc    
  409c35:	hlt    
  409c36:	or     BYTE PTR [ebx],dh
  409c38:	push   edx
  409c39:	sub    al,BYTE PTR [edi-0x30]
  409c3c:	in     eax,0x69
  409c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c3f:	cli    
  409c40:	mov    bl,0xdd
  409c42:	fisub  DWORD PTR [esi-0x7a]
  409c45:	jle    0x409c3b
  409c47:	pop    ebx
  409c48:	mov    esp,0x5301fdfb
  409c4d:	mov    WORD PTR [ebx],?
  409c4f:	cmp    eax,0x37d8d122
  409c54:	fisttp DWORD PTR [ebx+esi*2+0x2f]
  409c58:	push   ebp
  409c59:	pop    edi
  409c5a:	xchg   esp,eax
  409c5b:	pop    edx
  409c5c:	fsubr  QWORD PTR ds:0xe17c7f3
  409c62:	jle    0x409c90
  409c64:	add    eax,0x2c35da37
  409c69:	fbstp  TBYTE PTR [edx-0x52]
  409c6c:	clc    
  409c6d:	ins    DWORD PTR es:[edi],dx
  409c6e:	js     0x409c44
  409c70:	sbb    ah,BYTE PTR [edx]
  409c72:	das    
  409c73:	xchg   ecx,eax
  409c74:	inc    edi
  409c75:	xor    edx,DWORD PTR [edx+0x56]
  409c78:	dec    eax
  409c79:	ins    DWORD PTR es:[edi],dx
  409c7a:	pusha  
  409c7b:	je     0x409c61
  409c7d:	xchg   ebp,eax
  409c7e:	dec    ebx
  409c7f:	mov    WORD PTR [edx],ss
  409c81:	adc    ebx,0x17
  409c84:	ins    DWORD PTR es:[edi],dx
  409c85:	imul   esi,DWORD PTR [ebp+0x14aeb75c],0xffffffe3
  409c8c:	adc    bl,bh
  409c8e:	mov    bl,0x58
  409c90:	arpl   WORD PTR ds:0xbe83f6e3,sp
  409c96:	xchg   BYTE PTR [ebx-0x74],dl
  409c99:	pusha  
  409c9a:	ins    BYTE PTR es:[edi],dx
  409c9b:	out    0x64,eax
  409c9d:	dec    edi
  409c9e:	stc    
  409c9f:	xor    bl,bl
  409ca1:	xchg   edi,eax
  409ca2:	not    BYTE PTR cs:[eax]
  409ca5:	xor    al,0xdd
  409ca7:	mov    ah,BYTE PTR [ecx+0x54]
  409caa:	dec    DWORD PTR [eax-0x8d481d2]
  409cb0:	dec    edi
  409cb1:	out    0x7a,al
  409cb3:	out    dx,eax
  409cb4:	add    eax,DWORD PTR [edi]
  409cb6:	and    bl,al
  409cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cb9:	inc    edi
  409cba:	int    0x80
  409cbc:	or     eax,DWORD PTR [ebx]
  409cbe:	jmp    0x4e0c:0x203e5063
  409cc5:	mov    ch,0x43
  409cc7:	and    esi,ebp
  409cc9:	push   ss
  409cca:	jo     0x409d3e
  409ccc:	mov    ebp,0xdc49cbb8
  409cd1:	push   eax
  409cd2:	sbb    ah,0xb6
  409cd5:	add    ecx,DWORD PTR [ebp+0x41767281]
  409cdb:	sti    
  409cdc:	fcom   QWORD PTR [ecx-0x36]
  409cdf:	in     eax,dx
  409ce0:	mov    cl,0x41
  409ce2:	icebp  
  409ce3:	push   edi
  409ce4:	int    0x1b
  409ce6:	into   
  409ce7:	outs   dx,BYTE PTR ds:[esi]
  409ce8:	mov    DWORD PTR [ecx+0x48],edi
  409ceb:	outs   dx,BYTE PTR ds:[esi]
  409cec:	adc    esp,edi
  409cee:	mov    ds:0x5dd3cd11,al
  409cf3:	mov    al,ds:0x6ee94d60
  409cf8:	mov    edi,0xc69f484c
  409cfd:	add    eax,0x9f57a0c2
  409d02:	xor    ebx,DWORD PTR [esi+0x57f2763f]
  409d08:	cdq    
  409d09:	(bad)  
  409d0b:	rcr    DWORD PTR [esi+0x29],0xac
  409d0f:	(bad)  
  409d10:	jo     0x409cff
  409d12:	cmp    al,0x2f
  409d14:	imul   edx,DWORD PTR [ebx+0x1c],0x3da3763e
  409d1b:	cmp    eax,0xe0726914
  409d20:	jo     0x409cd2
  409d22:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d24:	sub    edi,esp
  409d26:	mov    ecx,0xc3543c74
  409d2b:	mov    al,ds:0x4dfacf0e
  409d30:	xor    BYTE PTR [ebp+0x18814a95],bh
  409d36:	jp     0x409ce5
  409d38:	inc    ebx
  409d39:	repnz test al,0x7e
  409d3c:	scas   al,BYTE PTR es:[edi]
  409d3d:	inc    edi
  409d3e:	cmp    BYTE PTR [eax],ah
  409d40:	and    eax,0x7b7526de
  409d45:	aad    0xc8
  409d47:	stos   DWORD PTR es:[edi],eax
  409d48:	xlat   BYTE PTR ds:[ebx]
  409d49:	add    al,0x17
  409d4b:	mov    bh,0x6d
  409d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d4e:	inc    ecx
  409d4f:	add    dl,0x68
  409d52:	neg    DWORD PTR [ebx+0x352f6862]
  409d58:	das    
  409d59:	inc    ebx
  409d5a:	cmp    eax,0x4ac4726b
  409d5f:	cdq    
  409d60:	jo     0x409d74
  409d62:	hlt    
  409d63:	xor    DWORD PTR ds:0x3e81a379,eax
  409d69:	jae    0x409cf4
  409d6b:	es retf 0x8d19
  409d6f:	(bad)  
  409d70:	es cwde 
  409d72:	aaa    
  409d73:	mov    bx,0x7f29
  409d77:	pop    ebx
  409d78:	xor    al,0x83
  409d7a:	test   DWORD PTR [edx],edi
  409d7c:	push   ss
  409d7d:	retf   0x3679
  409d80:	fldcw  WORD PTR [ebx]
  409d82:	xchg   ecx,eax
  409d83:	mov    eax,ds:0x9d7ee37f
  409d88:	dec    ebx
  409d89:	stos   BYTE PTR es:[edi],al
  409d8a:	js     0x409d15
  409d8c:	js     0x409d35
  409d8e:	fsub   QWORD PTR [ebp-0x12]
  409d91:	add    al,0x3
  409d93:	out    dx,eax
  409d94:	ror    BYTE PTR [ebx-0x12a303d9],cl
  409d9a:	addr16 pop edi
  409d9c:	lods   al,BYTE PTR ds:[esi]
  409d9d:	push   edx
  409d9e:	popf   
  409d9f:	jnp    0x409d65
  409da1:	pop    ebp
  409da2:	in     eax,0x64
  409da4:	push   0x61
  409da6:	xchg   DWORD PTR [esi],eax
  409da8:	bound  edi,QWORD PTR [edx-0x29701b5b]
  409dae:	mov    ch,0x32
  409db0:	or     esi,DWORD PTR [esi+0x6428bc61]
  409db6:	mov    ebx,0x693e2a4a
  409dbb:	cli    
  409dbc:	xor    al,0xa9
  409dbe:	lods   eax,DWORD PTR ds:[esi]
  409dbf:	mov    al,0x6f
  409dc1:	jg     0x409d47
  409dc3:	or     DWORD PTR [edx+0x6f],ebp
  409dc6:	xor    al,0xc4
  409dc8:	(bad)  
  409dc9:	fld    TBYTE PTR [edx+0x11]
  409dcc:	push   eax
  409dcd:	mov    cl,0xe8
  409dcf:	jno    0x409de1
  409dd1:	cs inc eax
  409dd3:	add    esi,DWORD PTR [ecx-0x57724e4f]
  409dd9:	inc    ebp
  409dda:	fstp   DWORD PTR [edx-0x3d]
  409ddd:	cmp    edx,edx
  409ddf:	out    0x1b,eax
  409de1:	stc    
  409de2:	pop    ds
  409de3:	call   0x76f7:0xcd55f656
  409dea:	or     al,0x14
  409dec:	fmul   st(7),st
  409dee:	pop    edi
  409def:	int3   
  409df0:	add    al,0x32
  409df2:	sti    
  409df3:	dec    edi
  409df4:	cmp    dl,BYTE PTR [edi]
  409df6:	adc    DWORD PTR [edx+0x78],ebx
  409df9:	sbb    eax,0x7db9d7c3
  409dfe:	push   edx
  409dff:	(bad)  
  409e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e01:	js     0x409dfe
  409e03:	aaa    
  409e04:	cdq    
  409e05:	in     al,dx
  409e06:	or     al,0xa8
  409e08:	call   0x9c39:0x6961
  409e0e:	pop    es
  409e0f:	mov    bl,0xc3
  409e11:	cwde   
  409e12:	sub    eax,0xda4eb7f
  409e17:	imul   ecx,esi,0xaa3438d8
  409e1d:	cmp    BYTE PTR [ecx-0x3e27a14a],dl
  409e23:	xor    BYTE PTR [esi+ebx*4-0x33],0x38
  409e28:	(bad)  
  409e29:	scas   al,BYTE PTR es:[edi]
  409e2a:	enter  0x8a7c,0xd
  409e2e:	ret    
  409e2f:	dec    eax
  409e30:	pop    ecx
  409e31:	rcr    DWORD PTR ds:0xcb4e10df,cl
  409e37:	mov    esp,0x4acd5e6
  409e3c:	push   es
  409e3d:	jmp    0x409e65
  409e3f:	lahf   
  409e40:	adc    al,0xde
  409e42:	out    dx,al
  409e43:	pop    ds
  409e44:	jo     0x409e26
  409e46:	aaa    
  409e47:	iret   
  409e48:	adc    BYTE PTR [esi+0x20415c55],ch
  409e4e:	arpl   WORD PTR [ebx+0x3c42e62d],sp
  409e54:	outs   dx,DWORD PTR ds:[esi]
  409e55:	xchg   esi,eax
  409e56:	adc    ecx,edi
  409e58:	cwde   
  409e59:	pop    ebp
  409e5a:	repz icebp 
  409e5c:	jo     0x409ece
  409e5e:	jp     0x409ec7
  409e60:	fs ds jnp 0x409ec2
  409e64:	test   al,0x22
  409e66:	(bad)  
  409e67:	ror    BYTE PTR [ebx+eax*1-0x23],1
  409e6b:	adc    DWORD PTR [esi],esi
  409e6d:	rol    ecx,1
  409e6f:	fistp  DWORD PTR [ebx]
  409e71:	out    dx,eax
  409e72:	mov    esi,0xdfd7d3d7
  409e77:	(bad)  
  409e78:	or     DWORD PTR [ecx],edx
  409e7a:	push   cs
  409e7b:	dec    DWORD PTR gs:[ebp+edi*1-0x48]
  409e80:	mov    ebp,0x4048c036
  409e85:	jns    0x409ee0
  409e87:	daa    
  409e88:	scas   eax,DWORD PTR es:[edi]
  409e89:	xchg   ebx,eax
  409e8a:	test   BYTE PTR [edi+0x5b],al
  409e8d:	les    esi,FWORD PTR [esi]
  409e8f:	cdq    
  409e90:	xchg   esp,eax
  409e91:	test   BYTE PTR [edx],ah
  409e93:	call   0xad8699f3
  409e98:	out    dx,al
  409e99:	ret    0x89eb
  409e9c:	push   eax
  409e9d:	xchg   ebx,eax
  409e9e:	jns    0x409e47
  409ea0:	imul   edi,DWORD PTR [esp+ebx*8+0x163ec80f],0x35
  409ea8:	xchg   esi,eax
  409ea9:	mov    BYTE PTR [ebx-0x30bc869a],ch
  409eaf:	sbb    BYTE PTR [ebx+0xfae8c34],ch
  409eb5:	xchg   ebp,eax
  409eb6:	sahf   
  409eb7:	push   ebp
  409eb8:	shl    dl,0xfe
  409ebb:	xor    eax,0x3f7739d8
  409ec0:	or     DWORD PTR [edi+0x7a554531],ebp
  409ec6:	pop    ebp
  409ec7:	cmc    
  409ec8:	sub    eax,0xec290ae7
  409ecd:	lods   al,BYTE PTR ds:[esi]
  409ece:	cmp    eax,DWORD PTR [edi+eiz*8+0x50241848]
  409ed5:	mov    ecx,0x1a58a476
  409eda:	sub    DWORD PTR ds:0xfe34c37c,esi
  409ee0:	in     eax,0x2d
  409ee2:	add    al,ah
  409ee4:	sub    BYTE PTR [ecx+edx*1+0x3f15142d],bl
  409eeb:	stos   BYTE PTR es:[edi],al
  409eec:	out    dx,al
  409eed:	mov    cl,0xae
  409eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef0:	xor    al,0x2a
  409ef2:	pop    esi
  409ef3:	push   ds
  409ef4:	popf   
  409ef5:	adc    dl,BYTE PTR [ecx]
  409ef7:	mov    DWORD PTR [edi],0x7c780e17
  409efd:	sar    DWORD PTR [edi-0x3e],0x5c
  409f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f02:	mov    ds:0xb6c23ebe,eax
  409f07:	or     eax,0x2098d781
  409f0c:	sbb    bh,BYTE PTR [eax-0x2c]
  409f0f:	push   cs
  409f10:	cs js  0x409f68
  409f13:	mov    ds:0x6324aff9,eax
  409f18:	sub    esp,0x32
  409f1b:	cmp    cl,BYTE PTR [ebp+0x6]
  409f1e:	jg     0x409ecf
  409f20:	inc    ebx
  409f21:	fst    DWORD PTR [ecx-0x27]
  409f24:	pop    ebp
  409f25:	cli    
  409f26:	ins    BYTE PTR es:[edi],dx
  409f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f28:	xor    dh,BYTE PTR [ebp+0x1f]
  409f2b:	dec    eax
  409f2c:	sbb    DWORD PTR [edx],edx
  409f2e:	sar    dl,cl
  409f30:	mov    cl,0x21
  409f32:	sbb    eax,0x53869d0d
  409f37:	ins    BYTE PTR es:[edi],dx
  409f38:	sbb    eax,0x8db81b98
  409f3d:	dec    ebx
  409f3e:	repnz or eax,DWORD PTR ds:0xf9192b06
  409f45:	ret    0x949c
  409f48:	pop    es
  409f49:	in     al,0xc
  409f4b:	out    0x46,al
  409f4d:	fistp  DWORD PTR [edx]
  409f4f:	(bad)  
  409f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f51:	inc    edx
  409f52:	ins    BYTE PTR es:[edi],dx
  409f53:	xchg   esi,eax
  409f54:	sub    al,0xf5
  409f56:	out    dx,al
  409f57:	jno    0x409ef9
  409f59:	jne    0x409f58
  409f5b:	out    dx,eax
  409f5c:	ret    
  409f5d:	or     BYTE PTR [eax+0x3c],dl
  409f60:	nop
  409f61:	ja     0x409f2f
  409f63:	pop    edx
  409f64:	jl     0x409f9b
  409f66:	cmp    eax,0x8bfc00e9
  409f6b:	sbb    BYTE PTR [esi+0x7e],al
  409f6e:	rcl    DWORD PTR [esi+0x26b8474d],1
  409f74:	cmp    BYTE PTR [ebp+0x46],ah
  409f77:	mov    fs,WORD PTR [ebx-0x65348af4]
  409f7d:	repnz mov al,BYTE PTR [edx]
  409f80:	shl    BYTE PTR [edi+0x54a720d7],cl
  409f86:	pop    es
  409f87:	pop    esi
  409f89:	jbe    0x409f6f
  409f8b:	jnp    0x409f52
  409f8d:	inc    esp
  409f8e:	popa   
  409f8f:	out    0x44,al
  409f91:	push   esp
  409f92:	mov    al,ds:0x9844d01
  409f97:	jg     0x409f1c
  409f99:	in     al,0xed
  409f9b:	sti    
  409f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9d:	sub    eax,0x7f3ddca2
  409fa2:	mov    ebx,0x4496a00
  409fa7:	inc    esp
  409fa8:	or     eax,0xd80e8397
  409fad:	push   0x44fb27aa
  409fb2:	and    esi,DWORD PTR [esi-0x56ba560c]
  409fb8:	stc    
  409fb9:	outs   dx,DWORD PTR ds:[esi]
  409fba:	adc    BYTE PTR [edx],cl
  409fbc:	xchg   ebp,eax
  409fbd:	cli    
  409fbe:	je     0x409fde
  409fc0:	xor    BYTE PTR [edi-0x6fb5773e],al
  409fc6:	inc    edi
  409fc7:	out    0x24,eax
  409fc9:	fmul   st,st(5)
  409fcb:	mov    dh,0xca
  409fcd:	mov    ecx,0xa7b86f74
  409fd2:	xor    ah,BYTE PTR [edi]
  409fd4:	push   ecx
  409fd5:	not    al
  409fd7:	lds    ebp,FWORD PTR [ebp-0x5b]
  409fda:	and    al,0x4f
  409fdc:	arpl   cx,sp
  409fde:	pop    edi
  409fdf:	jg     0x409f7a
  409fe1:	pop    es
  409fe2:	es (bad) 
  409fe4:	ins    BYTE PTR es:[edi],dx
  409fe5:	sti    
  409fe6:	lea    edx,[esp+eiz*8-0x19f1f37a]
  409fed:	fimul  DWORD PTR [ebx+0x78]
  409ff0:	pop    esi
  409ff1:	mov    ecx,0x3c503a81
  409ff6:	cmp    edx,ebx
  409ff8:	sahf   
  409ff9:	push   0x67
  409ffb:	iret   
  409ffc:	daa    
  409ffd:	jne    0x409fe0
  409fff:	pop    ds
  40a000:	and    eax,0xd5b193f
  40a005:	icebp  
  40a006:	xor    eax,0x595d539e
  40a00b:	mov    al,0xde
  40a00d:	push   es
  40a00e:	or     cl,BYTE PTR [ecx-0x6a]
  40a011:	mov    ch,0x52
  40a013:	imul   esp,DWORD PTR ds:[ecx],0x16
  40a017:	cmp    cl,ch
  40a019:	test   eax,0x8b92f72c
  40a01e:	push   ecx
  40a01f:	shl    BYTE PTR [edx],1
  40a021:	push   ebp
  40a022:	sar    eax,0x50
  40a025:	mov    al,BYTE PTR [ecx+ebp*8]
  40a028:	enter  0xceb9,0x7f
  40a02c:	sbb    DWORD PTR [ebp+edi*1-0x73ec88f3],eax
  40a033:	stos   BYTE PTR es:[edi],al
  40a034:	int    0x8
  40a036:	test   al,0x4e
  40a038:	call   0x455d:0x67ebea0d
  40a03f:	test   eax,0x8fd2638d
  40a044:	sbb    eax,0x6bceebb9
  40a049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a04a:	mul    al
  40a04c:	lock jecxz 0x40a079
  40a04f:	jnp    0x40a032
  40a051:	sub    BYTE PTR [edx+0x5ed5fe7],bh
  40a057:	add    eax,0x375a245c
  40a05c:	jmp    0x40a042
  40a05e:	mov    edx,0x256387da
  40a063:	cmp    al,0x2b
  40a065:	add    BYTE PTR [ebx],0x82
  40a068:	sub    bh,dh
  40a06a:	int    0x3e
  40a06c:	fiadd  WORD PTR [eax+0x4c]
  40a06f:	xchg   ebx,eax
  40a070:	pop    edi
  40a071:	in     al,dx
  40a072:	movq   mm2,QWORD PTR [esi+edi*2]
  40a076:	inc    esi
  40a077:	cmp    DWORD PTR [edi-0x7347bdba],esi
  40a07d:	pop    esp
  40a07e:	out    dx,al
  40a07f:	(bad)  
  40a080:	dec    esp
  40a081:	data16 es mov ch,0xf1
  40a085:	arpl   sp,bp
  40a087:	or     BYTE PTR [ebx],bh
  40a089:	cdq    
  40a08a:	mov    eax,0x290fad86
  40a08f:	fiadd  WORD PTR [edi+0x7bc28b28]
  40a095:	or     DWORD PTR [ecx-0x759218eb],ebp
  40a09b:	add    BYTE PTR [eax+edi*2-0x78],dh
  40a09f:	xchg   ecx,eax
  40a0a0:	jge    0x40a089
  40a0a2:	ficomp DWORD PTR [esi+0x6e]
  40a0a5:	lea    edx,[eax+0x2698cf05]
  40a0ab:	cmp    bl,BYTE PTR [edi+0x692c0909]
  40a0b1:	sub    eax,DWORD PTR [esi]
  40a0b3:	popa   
  40a0b4:	ficom  DWORD PTR [ebp-0x4ad5da15]
  40a0ba:	arpl   WORD PTR [edi],cx
  40a0bc:	mov    BYTE PTR [ecx+eiz*4+0x28d6b3e0],bh
  40a0c3:	jg     0x40a0c1
  40a0c5:	inc    ebx
  40a0c6:	js     0x40a0f5
  40a0c8:	or     ch,0x6c
  40a0cb:	xchg   DWORD PTR [ecx*4+0x2c5c90e8],ecx
  40a0d2:	push   ebp
  40a0d3:	out    0xc1,al
  40a0d5:	cmp    al,0x5
  40a0d7:	dec    edx
  40a0d8:	xor    eax,0x43d155b4
  40a0dd:	faddp  st(1),st
  40a0df:	adc    edi,ebx
  40a0e1:	lock push ebp
  40a0e3:	xor    eax,0xc2f5a53e
  40a0e8:	jnp    0x40a10b
  40a0ea:	push   ebx
  40a0eb:	imul   esp,DWORD PTR [ecx],0x9fcd214f
  40a0f1:	aam    0xb2
  40a0f3:	out    dx,al
  40a0f4:	sub    al,0x3f
  40a0f6:	arpl   ax,cx
  40a0f8:	mov    eax,0x55bdfb5e
  40a0fd:	sub    bl,bl
  40a0ff:	pop    ds
  40a100:	(bad)  
  40a101:	iret   
  40a102:	jo     0x40a11b
  40a104:	test   ch,al
  40a106:	jnp    0x40a158
  40a108:	aaa    
  40a109:	or     eax,0x667f330f
  40a10e:	fucom  st(6)
  40a110:	dec    edi
  40a111:	jbe    0x40a167
  40a113:	retf   
  40a114:	fldenv [eax+0x3c]
  40a117:	push   0x4080908a
  40a11c:	scas   al,BYTE PTR es:[edi]
  40a11d:	sub    al,0xb5
  40a11f:	(bad)  
  40a120:	mov    dl,0x75
  40a122:	mov    ebp,0x16bbb143
  40a127:	pop    esi
  40a128:	dec    edx
  40a129:	push   0xe0b9769f
  40a12e:	inc    esi
  40a12f:	lods   eax,DWORD PTR ds:[esi]
  40a130:	dec    ebp
  40a131:	lds    edi,FWORD PTR [eax-0x25]
  40a134:	pop    es
  40a135:	fisub  DWORD PTR [esi]
  40a137:	cmp    ebx,0x47
  40a13a:	dec    eax
  40a13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a13c:	gs push ebp
  40a13e:	pop    ebx
  40a13f:	aad    0x58
  40a141:	fs stc 
  40a143:	nop
  40a144:	adc    eax,DWORD PTR [ecx]
  40a146:	fisubr WORD PTR [ebx]
  40a148:	in     eax,dx
  40a149:	fld    DWORD PTR [eax-0x71dbe364]
  40a14f:	scas   eax,DWORD PTR es:[edi]
  40a150:	daa    
  40a151:	jge    0x40a153
  40a153:	(bad)  
  40a154:	mov    eax,ds:0x328b0c6c
  40a159:	je     0x40a1c7
  40a15b:	lods   al,BYTE PTR ds:[esi]
  40a15c:	jg     0x40a1a7
  40a15e:	fwait
  40a15f:	ins    DWORD PTR es:[edi],dx
  40a160:	fmul   QWORD PTR [edi]
  40a162:	in     al,dx
  40a163:	(bad)  
  40a164:	adc    BYTE PTR ds:0xa81bd8dd,cl
  40a16a:	add    al,0xf0
  40a16c:	xor    BYTE PTR [edx],0x88
  40a16f:	cmp    al,0x2d
  40a172:	enter  0xd907,0x6d
  40a176:	div    ch
  40a178:	outs   dx,BYTE PTR ds:[esi]
  40a179:	rcl    edi,1
  40a17b:	aas    
  40a17c:	test   al,0x30
  40a17e:	mov    WORD PTR [edi],gs
  40a180:	repnz mov ch,0x1
  40a183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a184:	pop    ecx
  40a185:	xchg   edx,eax
  40a186:	jle    0x40a165
  40a188:	adc    dl,BYTE PTR [edx]
  40a18a:	leave  
  40a18b:	mov    dh,0x66
  40a18d:	sub    BYTE PTR [eax-0x7d3ae1fe],bl
  40a193:	scas   eax,DWORD PTR es:[edi]
  40a194:	and    al,ch
  40a196:	inc    ecx
  40a197:	test   ah,0x34
  40a19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a19b:	jns    0x40a1c2
  40a19d:	sub    DWORD PTR [eax+0x619a9ce3],0xffffffe8
  40a1a4:	imul   eax,DWORD PTR [edx],0xffffffab
  40a1a7:	mov    ebx,0xa7b3366e
  40a1ac:	sbb    bl,dl
  40a1ae:	mov    cl,0x6e
  40a1b0:	fcom   DWORD PTR [edx+edi*4+0xc34b8b6]
  40a1b7:	jne    0x40a1ed
  40a1b9:	inc    BYTE PTR [ecx+0x6c1408c6]
  40a1bf:	add    BYTE PTR [ecx+0x551c1063],ah
  40a1c5:	hlt    
  40a1c6:	xchg   BYTE PTR [ebx],al
  40a1c8:	out    dx,al
  40a1c9:	cwde   
  40a1ca:	mov    BYTE PTR cs:[ecx-0x2e94c6e7],cl
  40a1d1:	sbb    ebp,DWORD PTR [eax-0x125894d8]
  40a1d7:	fistp  DWORD PTR [ebx]
  40a1d9:	mov    ebx,0x28f15585
  40a1de:	test   bh,cl
  40a1e0:	lea    esp,[eax-0x10]
  40a1e3:	jge    0x40a225
  40a1e5:	pushf  
  40a1e6:	xchg   esi,eax
  40a1e7:	sbb    BYTE PTR [esi+eax*2+0x6ba98540],ch
  40a1ee:	adc    DWORD PTR [ebx],eax
  40a1f0:	mov    ecx,0x8f3d1e2a
  40a1f5:	scas   eax,DWORD PTR es:[edi]
  40a1f6:	jecxz  0x40a1f5
  40a1f8:	shl    DWORD PTR [ebp+0x45ccd49f],1
  40a1fe:	mov    al,0x58
  40a200:	cmp    al,0xad
  40a202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a203:	inc    ebp
  40a204:	sti    
  40a205:	fdivr  DWORD PTR [edi-0x2a]
  40a208:	stc    
  40a209:	dec    ecx
  40a20a:	xor    dl,bh
  40a20c:	adc    DWORD PTR [edx+0x7f1d746a],edx
  40a212:	jmp    0x59f7:0xd683c0e0
  40a219:	mov    dh,0x23
  40a21b:	add    DWORD PTR [esi],ecx
  40a21d:	int    0x7
  40a21f:	mov    dl,dl
  40a221:	xor    eax,0xe6271eb
  40a226:	cli    
  40a227:	mov    eax,ds:0xeb03c00b
  40a22c:	push   esp
  40a22d:	inc    ebp
  40a22e:	jnp    0x40a20a
  40a230:	scas   eax,DWORD PTR es:[edi]
  40a231:	xchg   BYTE PTR [esp+eiz*2],bl
  40a234:	call   0xbff7:0x5593c596
  40a23b:	or     al,0xca
  40a23d:	push   es
  40a23e:	mov    eax,0x24148daa
  40a243:	leave  
  40a244:	sub    al,0x93
  40a246:	call   0x4e920420
  40a24b:	pushf  
  40a24c:	sub    DWORD PTR [eax+0x53],ecx
  40a24f:	cmp    al,0xe9
  40a251:	out    dx,eax
  40a252:	das    
  40a253:	pushf  
  40a254:	in     eax,0x72
  40a256:	jo     0x40a2af
  40a258:	mov    ds:0xb5feb9b8,eax
  40a25d:	push   edi
  40a25e:	inc    ebp
  40a25f:	lea    eax,[esi]
  40a261:	mov    BYTE PTR [edx-0x7d],dl
  40a264:	or     bh,bh
  40a266:	push   esp
  40a267:	popa   
  40a268:	push   ds
  40a269:	ret    0x2ca0
  40a26c:	jno    0x40a283
  40a26e:	(bad)  
  40a26f:	jmp    0xe9ca6bc5
  40a274:	loope  0x40a2bf
  40a276:	mov    ds:0xf962fd07,eax
  40a27b:	sbb    eax,0xc5bbd02c
  40a280:	lods   al,BYTE PTR ds:[esi]
  40a281:	inc    edx
  40a282:	add    BYTE PTR [ebp+0x6ddcefd7],ch
  40a288:	push   es
  40a289:	aad    0x9c
  40a28b:	push   cs
  40a28c:	push   0xffffff83
  40a28e:	inc    esp
  40a290:	mov    eax,0xe4f69ca2
  40a295:	aaa    
  40a296:	hlt    
  40a297:	jo     0x40a283
  40a299:	lahf   
  40a29a:	test   eax,0x77fa3bb5
  40a29f:	out    0x89,al
  40a2a1:	je     0x40a2ec
  40a2a3:	inc    edi
  40a2a4:	test   BYTE PTR [edi-0x22],bl
  40a2a7:	js     0x40a27a
  40a2a9:	clc    
  40a2aa:	mov    dh,0x5
  40a2ac:	or     BYTE PTR [ebp+edx*1+0x52],bh
  40a2b0:	inc    ecx
  40a2b1:	dec    edx
  40a2b2:	cmp    ch,BYTE PTR [edx]
  40a2b4:	clc    
  40a2b5:	sub    ebp,0x5495a0f
  40a2bb:	out    dx,al
  40a2bc:	mov    esi,0xbe3dde1a
  40a2c1:	inc    ebx
  40a2c2:	fst    QWORD PTR [ebx-0x39]
  40a2c5:	inc    esi
  40a2c6:	fimul  WORD PTR [ebp-0x79]
  40a2c9:	mul    BYTE PTR [ebp+0x66]
  40a2cc:	sbb    al,0x88
  40a2ce:	sti    
  40a2cf:	inc    esp
  40a2d0:	jbe    0x40a260
  40a2d2:	pop    ebp
  40a2d3:	repz scas eax,DWORD PTR es:[edi]
  40a2d5:	xchg   edi,eax
  40a2d6:	and    DWORD PTR [eax+0x5f],edx
  40a2d9:	(bad)  
  40a2da:	out    0xda,eax
  40a2dc:	outs   dx,DWORD PTR ds:[esi]
  40a2dd:	push   0xffffff82
  40a2df:	push   0xf
  40a2e1:	out    0x2b,eax
  40a2e3:	xor    DWORD PTR [edx+0x0],0xccbffaf2
  40a2ea:	xchg   esi,eax
  40a2eb:	retf   0x5acb
  40a2ee:	mov    ecx,?
  40a2f0:	out    0x7d,al
  40a2f2:	add    esp,DWORD PTR [edi-0x4a3e557c]
  40a2f8:	sahf   
  40a2f9:	ins    DWORD PTR es:[edi],dx
  40a2fa:	jnp    0x40a29e
  40a2fc:	sahf   
  40a2fd:	cmp    eax,0x792fcc1d
  40a302:	stos   DWORD PTR es:[edi],eax
  40a303:	push   ss
  40a304:	imul   ebp,DWORD PTR es:[esi+0x22],0xffffff8a
  40a309:	mov    ds:0xd092e5b9,al
  40a30e:	sbb    al,0xc9
  40a310:	rol    BYTE PTR [edi-0x6d],0x8e
  40a314:	sbb    al,0x8f
  40a316:	jns    0x40a362
  40a318:	retf   0x9ba2
  40a31b:	in     eax,dx
  40a31c:	and    BYTE PTR [eax-0x5a],ch
  40a31f:	mov    ecx,0x18b715b0
  40a324:	mov    ch,0xf6
  40a326:	adc    eax,0x4b627407
  40a32b:	retf   
  40a32c:	xchg   esi,eax
  40a32d:	inc    ebp
  40a32e:	aaa    
  40a32f:	(bad)  
  40a330:	jae    0x40a393
  40a332:	jnp    0x40a33e
  40a334:	ins    DWORD PTR es:[edi],dx
  40a335:	mov    bh,BYTE PTR [edi+0x4e]
  40a338:	mov    al,0x4b
  40a33a:	dec    esi
  40a33b:	shl    dh,cl
  40a33d:	inc    ecx
  40a33e:	jmp    0x14a3:0x2a40f5f
  40a345:	cwde   
  40a346:	sbb    dh,BYTE PTR [ecx]
  40a348:	stos   BYTE PTR es:[edi],al
  40a349:	gs xchg esi,esi
  40a34c:	adc    BYTE PTR [eax+ecx*2-0x568bb725],ch
  40a353:	adc    BYTE PTR [esi-0x4a],dl
  40a356:	push   0xc454f0da
  40a35b:	pop    ds
  40a35c:	inc    DWORD PTR [ebp-0x292abb0c]
  40a362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a363:	sub    esi,DWORD PTR [eax-0x1f]
  40a366:	leave  
  40a367:	push   eax
  40a368:	cmp    esi,DWORD PTR [ecx-0x4da5e0a]
  40a36e:	sub    eax,0x44a993fe
  40a373:	es iret 
  40a375:	mov    ch,0xf6
  40a377:	or     BYTE PTR [ebx],cl
  40a379:	arpl   WORD PTR ds:0x159c814a,si
  40a37f:	aas    
  40a380:	sar    DWORD PTR [ecx-0x5b48d870],cl
  40a386:	mov    esi,ebp
  40a388:	in     al,0x71
  40a38a:	xor    BYTE PTR [ecx],dl
  40a38c:	dec    eax
  40a38d:	cwde   
  40a38e:	and    eax,0xae2144f5
  40a393:	add    eax,DWORD PTR [edi]
  40a395:	inc    eax
  40a396:	mov    al,ds:0x6b8d023b
  40a39b:	jne    0x40a40c
  40a39d:	fmul   st,st(0)
  40a39f:	sbb    edx,DWORD PTR [eax]
  40a3a1:	outs   dx,BYTE PTR ds:[esi]
  40a3a2:	mov    ds:0xd65a61da,al
  40a3a7:	push   ds
  40a3a8:	adc    dl,BYTE PTR [ebx+0x5de90d3b]
  40a3ae:	xchg   DWORD PTR [ebp-0xc],ecx
  40a3b1:	inc    ebx
  40a3b2:	mov    esi,ecx
  40a3b4:	cli    
  40a3b5:	in     eax,dx
  40a3b6:	cld    
  40a3b7:	call   0xcfad49
  40a3bc:	scas   al,BYTE PTR es:[edi]
  40a3bd:	dec    edi
  40a3bf:	scas   al,BYTE PTR es:[edi]
  40a3c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c1:	ret    0xdb6c
  40a3c4:	mov    eax,0xacc65954
  40a3c9:	loop   0x40a392
  40a3cb:	dec    ebx
  40a3cc:	mov    edx,0xe5811728
  40a3d1:	and    ebp,ebp
  40a3d3:	xor    esi,DWORD PTR [ebp-0x2c]
  40a3d6:	pop    ss
  40a3d7:	fld    QWORD PTR [esi+eax*2+0x6]
  40a3db:	sub    eax,0x2a02bd5
  40a3e0:	push   eax
  40a3e1:	js     0x40a400
  40a3e3:	test   DWORD PTR [eax],edi
  40a3e5:	mov    DWORD PTR [esi-0x47],0x28fdb30
  40a3ec:	dec    ebp
  40a3ed:	repnz inc edx
  40a3ef:	sub    ebp,DWORD PTR [ebx]
  40a3f1:	pop    edx
  40a3f2:	jge    0x40a449
  40a3f4:	push   edx
  40a3f5:	(bad)  
  40a3f6:	test   al,0x84
  40a3f8:	fcmovnb st,st(6)
  40a3fa:	push   0xda95303b
  40a3ff:	loope  0x40a47f
  40a401:	inc    edx
  40a402:	cmp    eax,0x1a7f8fca
  40a407:	imul   edi
  40a409:	mov    esp,0xcd511eaf
  40a40e:	mov    edi,0x285b7738
  40a413:	jns    0x40a3a0
  40a415:	enter  0x3b76,0xc5
  40a419:	mov    bl,0x31
  40a41b:	out    dx,eax
  40a41c:	jne    0x40a472
  40a41e:	pop    edi
  40a41f:	aam    0x8f
  40a421:	mov    esi,0x244f129f
  40a426:	dec    edx
  40a427:	mov    ecx,0x6bf04ec5
  40a42c:	push   0xfffffffc
  40a42e:	nop
  40a42f:	(bad)  
  40a430:	mov    al,ds:0x19d86e45
  40a435:	jecxz  0x40a40d
  40a437:	or     al,0x5a
  40a439:	shl    BYTE PTR [ebx-0x28],0x63
  40a43d:	cmp    esp,0x813a684a
  40a443:	and    DWORD PTR [ecx+edx*2-0x220481e3],ecx
  40a44a:	mov    DWORD PTR [esi],esi
  40a44c:	jb     0x40a41a
  40a44e:	jb     0x40a497
  40a450:	rcl    DWORD PTR [edi],1
  40a452:	xchg   ebx,eax
  40a453:	mov    gs:0x6b261116,eax
  40a459:	mov    ds:0x423a39e,al
  40a45e:	bound  edi,QWORD PTR [edi]
  40a460:	out    dx,eax
  40a461:	mov    al,ds:0x2a4d47b0
  40a466:	mov    bh,BYTE PTR [eax]
  40a468:	out    dx,eax
  40a469:	push   ds
  40a46a:	mov    ds:0x39402593,eax
  40a46f:	mov    ebp,esi
  40a471:	jae    0x40a48f
  40a473:	in     al,0x7
  40a475:	fwait
  40a476:	(bad)  
  40a477:	fdivp  st(6),st
  40a479:	out    dx,eax
  40a47a:	popa   
  40a47b:	push   cs
  40a47c:	mov    dh,0xed
  40a47e:	add    eax,0x6407caa
  40a483:	es dec ebp
  40a485:	cmc    
  40a486:	dec    ebp
  40a487:	jmp    0xf1882d31
  40a48c:	aaa    
  40a48d:	imul   ebp,DWORD PTR [esi-0x3a],0xb6e0402d
  40a494:	dec    edi
  40a495:	cmp    BYTE PTR [ebx-0x7b262b22],ch
  40a49b:	mov    al,0xe3
  40a49d:	pop    ss
  40a49e:	xchg   edx,eax
  40a49f:	add    al,BYTE PTR [ebx-0x3b]
  40a4a2:	dec    ebp
  40a4a3:	stos   BYTE PTR es:[edi],al
  40a4a4:	in     eax,0xbe
  40a4a6:	xor    DWORD PTR [ebx-0x5a],edx
  40a4a9:	pop    ebp
  40a4aa:	popf   
  40a4ab:	dec    ebx
  40a4ac:	mov    ds:0xe8246ca1,eax
  40a4b1:	rcr    dh,cl
  40a4b3:	mov    edx,0x31ef2ae8
  40a4b8:	xchg   esi,eax
  40a4b9:	mov    bh,0xa2
  40a4bb:	int    0xad
  40a4bd:	aam    0x4a
  40a4bf:	push   esp
  40a4c0:	jle    0x40a4cd
  40a4c2:	dec    esi
  40a4c3:	dec    edx
  40a4c4:	call   0x9dfe:0xf3866a2c
  40a4cb:	call   0xc1df:0xaea07a02
  40a4d2:	repz add al,0x60
  40a4d5:	xchg   edx,eax
  40a4d6:	jo     0x40a4f1
  40a4d8:	or     bl,BYTE PTR [edi+0x3e2269e7]
  40a4de:	sbb    DWORD PTR [edx-0xf],ecx
  40a4e1:	es clc 
  40a4e3:	test   BYTE PTR [eax],bh
  40a4e5:	aad    0x77
  40a4e7:	cdq    
  40a4e8:	(bad)  
  40a4ea:	jle    0x40a47e
  40a4ec:	fnstcw WORD PTR cs:[edi]
  40a4ef:	xchg   edx,eax
  40a4f0:	push   ss
  40a4f1:	test   DWORD PTR [ecx],eax
  40a4f3:	xchg   ebp,eax
  40a4f4:	pop    es
  40a4f5:	sbb    al,0x97
  40a4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4f8:	dec    dx
  40a4fa:	loope  0x40a50d
  40a4fc:	pop    esp
  40a4fd:	mov    al,0x63
  40a4ff:	add    ah,BYTE PTR [edx]
  40a501:	popf   
  40a502:	and    ah,cl
  40a504:	jl     0x40a50f
  40a506:	addr16 or al,0x2a
  40a509:	inc    ebx
  40a50a:	add    eax,0xa51f20a5
  40a50f:	mov    al,ds:0x1da62f6c
  40a514:	jmp    0x28268d66
  40a519:	pop    ds
  40a51a:	sub    ecx,DWORD PTR [esi+0x684eb45a]
  40a520:	mov    bl,0xa4
  40a522:	xor    dh,BYTE PTR [ebx-0x49]
  40a525:	mov    eax,ds:0x9dcc7c5
  40a52a:	lea    eax,[edi]
  40a52c:	adc    DWORD PTR ds:0x88f33993,esp
  40a532:	dec    edx
  40a533:	pop    ss
  40a534:	push   ebx
  40a535:	std    
  40a536:	xchg   DWORD PTR [eax+edx*2-0x41],ebx
  40a53a:	cmp    BYTE PTR [edx+ebp*1-0x2ddd7679],bh
  40a541:	dec    ebp
  40a542:	xchg   edx,eax
  40a543:	cmp    eax,0xb7987f9
  40a548:	popa   
  40a549:	or     ch,ch
  40a54b:	popa   
  40a54c:	data16 fcom QWORD PTR [ecx+0x28]
  40a550:	call   0x88c3:0x906f28dc
  40a557:	gs (bad) 
  40a559:	mov    ch,0xcc
  40a55b:	pushf  
  40a55c:	fwait
  40a55d:	push   0xffffffa4
  40a55f:	sub    DWORD PTR [edx],edx
  40a561:	in     al,0xa4
  40a563:	jl     0x40a4f0
  40a565:	sbb    bh,ch
  40a567:	dec    eax
  40a568:	add    dh,BYTE PTR [ebx-0x51a2acda]
  40a56e:	mov    ebp,0x6e63f717
  40a573:	jmp    0xebea:0xebb38e90
  40a57a:	sbb    al,0x7
  40a57c:	ret    
  40a57d:	dec    BYTE PTR [ecx]
  40a57f:	loopne 0x40a52d
  40a581:	aam    0x41
  40a583:	mov    eax,ds:0x22c88885
  40a588:	rcl    DWORD PTR [esp+edi*1],0x75
  40a58c:	aad    0x2d
  40a58e:	call   DWORD PTR [esi-0x3a854bd3]
  40a594:	push   esp
  40a595:	retf   0x79a0
  40a598:	iret   
  40a599:	sbb    al,0x54
  40a59b:	stos   BYTE PTR es:[edi],al
  40a59c:	into   
  40a59d:	repz bound ebx,QWORD PTR [ecx-0x626f265c]
  40a5a4:	adc    DWORD PTR [eax],esp
  40a5a6:	jmp    0x40a624
  40a5a8:	not    BYTE PTR [edi+eax*2+0x51]
  40a5ac:	and    ah,BYTE PTR [ecx+0x3a]
  40a5af:	int    0x60
  40a5b1:	fistp  DWORD PTR [esi-0x44feac19]
  40a5b7:	dec    esp
  40a5b8:	push   edi
  40a5b9:	dec    ebp
  40a5ba:	jmp    0x40a628
  40a5bc:	push   0x58401fd1
  40a5c1:	ins    BYTE PTR es:[edi],dx
  40a5c2:	mov    ebp,0x126ae3c0
  40a5c7:	xchg   esi,eax
  40a5c8:	test   al,0x11
  40a5ca:	repz cmp al,0x5a
  40a5cd:	xchg   ebx,eax
  40a5ce:	or     edi,DWORD PTR [edx-0x640c6b62]
  40a5d4:	rcr    DWORD PTR [ecx],cl
  40a5d6:	sub    esi,DWORD PTR [eax+0x54d081c8]
  40a5dc:	add    BYTE PTR [esi-0x6d7bcec2],bh
  40a5e2:	fistp  QWORD PTR [edi+ebx*4]
  40a5e5:	sbb    ecx,DWORD PTR [esi]
  40a5e7:	leave  
  40a5e8:	or     BYTE PTR [esi+0x797bd111],dl
  40a5ee:	mul    DWORD PTR [ebp-0x96c8df8]
  40a5f4:	push   ebp
  40a5f5:	dec    eax
  40a5f6:	or     eax,esp
  40a5f8:	mov    esi,0x17667082
  40a5fd:	jmp    0x20b35263
  40a602:	mov    ebp,0xd1b56bff
  40a607:	mov    ah,0x44
  40a609:	test   BYTE PTR [eax],0xd1
  40a60c:	retf   0xd1f9
  40a60f:	xchg   ecx,eax
  40a610:	popw   ss
  40a612:	cli    
  40a613:	loop   0x40a606
  40a615:	push   ds
  40a616:	test   BYTE PTR [esi-0x16],bh
  40a619:	out    0x79,eax
  40a61b:	cmp    eax,0x2817d84e
  40a620:	cld    
  40a621:	(bad)  
  40a622:	xor    ebx,DWORD PTR [edi-0x18499ad1]
  40a628:	sub    BYTE PTR [eax+0x7d6635f8],0xb8
  40a62f:	ds pop esi
  40a631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a632:	mov    ebx,0xae777676
  40a637:	mov    BYTE PTR [esi],ah
  40a639:	test   ebp,edx
  40a63b:	shr    DWORD PTR [ebp-0x1c019025],0x57
  40a642:	xchg   edx,eax
  40a643:	aam    0xd6
  40a645:	ss cmp DWORD PTR fs:[ebp+0x2c],edx
  40a64a:	push   ss
  40a64b:	jmp    0xbf289d14
  40a650:	xchg   edi,eax
  40a651:	out    0x1d,al
  40a653:	les    ecx,FWORD PTR [edi-0x4aaffb8]
  40a659:	inc    esp
  40a65a:	cmp    esp,DWORD PTR ds:0x9b82024c
  40a660:	sbb    al,0xcb
  40a662:	mov    dl,BYTE PTR [esi-0x7f87db38]
  40a668:	in     eax,dx
  40a669:	gs push edi
  40a66b:	inc    edx
  40a66c:	lock repnz adc eax,0x2b037929
  40a673:	inc    ebp
  40a674:	xchg   edi,eax
  40a675:	push   edi
  40a676:	mov    edx,0x1e62c260
  40a67b:	mov    ecx,0x975af191
  40a680:	sub    DWORD PTR [eax+ecx*4],0x60
  40a684:	jb     0x40a66d
  40a686:	jg     0x40a6d9
  40a688:	nop
  40a689:	sbb    bl,BYTE PTR [ebx-0x6d56d43b]
  40a68f:	ds push 0x2d264d7d
  40a695:	aad    0x1f
  40a697:	jns    0x40a62f
  40a699:	cmp    bh,dl
  40a69b:	div    BYTE PTR [edx]
  40a69d:	add    edi,eax
  40a69f:	sub    ah,0x82
  40a6a2:	dec    ecx
  40a6a3:	adc    ebp,DWORD PTR [ebx]
  40a6a5:	or     cl,ah
  40a6a7:	adc    eax,0x8df49e52
  40a6ac:	ret    
  40a6ad:	sub    eax,0xdaaacdd4
  40a6b2:	adc    ebx,esp
  40a6b4:	stos   DWORD PTR es:[edi],eax
  40a6b5:	loopne 0x40a64f
  40a6b7:	or     dh,ch
  40a6b9:	add    eax,0x1d174bf2
  40a6be:	scas   al,BYTE PTR es:[edi]
  40a6bf:	cli    
  40a6c0:	neg    bl
  40a6c2:	and    al,0xa8
  40a6c4:	loope  0x40a735
  40a6c6:	mov    dh,0xd5
  40a6c8:	or     esi,edx
  40a6ca:	lea    esp,[eax-0x4c7529b]
  40a6d0:	pop    ss
  40a6d1:	dec    ebx
  40a6d2:	xchg   edx,eax
  40a6d3:	mov    eax,DWORD PTR [edx]
  40a6d5:	cmp    edx,ecx
  40a6d7:	jae    0x40a6b8
  40a6d9:	and    edx,DWORD PTR [esi-0x62]
  40a6dc:	push   esp
  40a6dd:	fs push ebp
  40a6df:	xchg   BYTE PTR [ebx-0x73],ch
  40a6e2:	jns    0x40a67b
  40a6e4:	jo     0x40a667
  40a6e6:	je     0x40a759
  40a6e8:	mov    ds:0x697d6ecc,al
  40a6ed:	fwait
  40a6ee:	xor    eax,0x87aba38b
  40a6f3:	pop    edx
  40a6f4:	pop    esi
  40a6f5:	retf   0x307
  40a6f8:	and    al,0x75
  40a6fa:	ret    0x9a34
  40a6fd:	or     edx,DWORD PTR [ebp-0x66]
  40a700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a701:	test   al,0x47
  40a703:	sub    ch,BYTE PTR [esi-0x724d533f]
  40a709:	dec    esp
  40a70a:	cmp    edi,edi
  40a70c:	int    0x18
  40a70e:	leave  
  40a70f:	or     BYTE PTR [ebx],0x53
  40a712:	mov    al,BYTE PTR [esp+edi*4-0x5886df3e]
  40a719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a71a:	xchg   ebx,eax
  40a71b:	dec    ebp
  40a71c:	mov    bh,BYTE PTR [eax]
  40a71e:	dec    ebx
  40a71f:	or     eax,0x3f770236
  40a724:	dec    ebp
  40a725:	lds    edx,FWORD PTR [eax+0x1a]
  40a728:	jb     0x40a766
  40a72a:	loop   0x40a70f
  40a72c:	or     esp,DWORD PTR ds:[eax+0x75]
  40a730:	mov    cs:0xef5f164,al
  40a736:	fstp   DWORD PTR [eax]
  40a738:	scas   al,BYTE PTR es:[edi]
  40a739:	clc    
  40a73a:	retf   0xe203
  40a73d:	imul   ebx,DWORD PTR [ecx-0x3097dad6],0xffffffcb
  40a744:	push   ds
  40a745:	cmp    al,0x97
  40a747:	neg    DWORD PTR [ecx+0x40f0540e]
  40a74d:	pop    eax
  40a74e:	popa   
  40a74f:	pop    ebp
  40a750:	sbb    ecx,DWORD PTR [edi+0x34ae499a]
  40a756:	les    edi,FWORD PTR [ecx]
  40a758:	xchg   ebp,eax
  40a759:	lods   eax,DWORD PTR ds:[esi]
  40a75a:	pop    ecx
  40a75b:	add    eax,0xd353c155
  40a760:	test   DWORD PTR [ebp-0x33],0x17e98f91
  40a767:	mov    bl,ah
  40a769:	and    esi,DWORD PTR [ebx-0x51ce533a]
  40a76f:	mov    cl,0xce
  40a771:	ror    DWORD PTR [ebp+0x25],1
  40a774:	pop    esi
  40a775:	popa   
  40a776:	xchg   DWORD PTR [eax+eiz*2+0x71e73997],edi
  40a77d:	xchg   ecx,eax
  40a77e:	inc    edx
  40a77f:	sbb    esp,0x38b2683e
  40a785:	sti    
  40a786:	dec    edi
  40a787:	test   DWORD PTR [esi-0x1f62b03],0xd05526dd
  40a791:	(bad)  
  40a792:	std    
  40a793:	mov    ds:0x5619062e,al
  40a798:	mov    dh,0x37
  40a79a:	dec    edi
  40a79b:	in     eax,0xe
  40a79d:	push   es
  40a79e:	and    al,0xd6
  40a7a0:	cs stos BYTE PTR es:[edi],al
  40a7a2:	scas   al,BYTE PTR es:[edi]
  40a7a3:	inc    edx
  40a7a4:	ret    
  40a7a5:	dec    esi
  40a7a6:	push   es
  40a7a7:	out    0x9d,eax
  40a7a9:	jle    0x40a730
  40a7ab:	jnp    0x40a73d
  40a7ad:	dec    edx
  40a7ae:	or     ebp,DWORD PTR [edx-0x3]
  40a7b1:	sub    cl,ch
  40a7b3:	pop    eax
  40a7b4:	or     BYTE PTR ss:[ebx-0x32],dl
  40a7b8:	das    
  40a7b9:	dec    ebx
  40a7ba:	mov    ecx,0x6c3d5882
  40a7bf:	les    eax,FWORD PTR es:[esi-0x5fa37f37]
  40a7c6:	mov    bp,0x91df
  40a7ca:	(bad)  
  40a7cb:	nop
  40a7cc:	or     DWORD PTR [ebp+0x40ba9bc5],0xfda5aaa1
  40a7d6:	push   esp
  40a7d7:	mov    esp,0xbe9e532e
  40a7dc:	mov    esp,0x2aa7c0eb
  40a7e1:	retf   
  40a7e2:	popf   
  40a7e3:	ror    al,0xa8
  40a7e6:	test   DWORD PTR ds:0x4397bf22,0xa6beea54
  40a7f0:	ins    DWORD PTR es:[edi],dx
  40a7f1:	mov    eax,ds:0xb022cb3c
  40a7f6:	cmp    eax,0x86797e8e
  40a7fb:	inc    ecx
  40a7fc:	mov    edx,0x750fbf4d
  40a801:	retf   0xd7c6
  40a804:	gs iret 
  40a806:	pop    eax
  40a807:	les    esi,FWORD PTR [esi-0x5f]
  40a80a:	adc    dh,bl
  40a80c:	fnstcw WORD PTR [eax-0x22]
  40a80f:	xor    BYTE PTR [edx+0x446aed7e],dl
  40a815:	(bad)  
  40a817:	clc    
  40a818:	cs (bad) 
  40a81a:	rol    ah,0xd5
  40a81d:	(bad)  
  40a81f:	jle    0x40a894
  40a821:	mov    ds:0x20b881d9,al
  40a826:	(bad)  
  40a827:	repz push esi
  40a829:	dec    eax
  40a82a:	popa   
  40a82b:	shl    BYTE PTR [edi+0x69],0x12
  40a82f:	xchg   esp,eax
  40a830:	mov    ch,0xee
  40a832:	jns    0x40a7d9
  40a834:	and    eax,0x60824784
  40a839:	mov    esp,0xb8e0f821
  40a83e:	mov    gs,edx
  40a840:	ja     0x40a7dc
  40a842:	sub    bl,bh
  40a844:	push   ebp
  40a845:	xchg   edx,eax
  40a846:	add    DWORD PTR [edx-0x33],0x2d85a0e1
  40a84d:	popf   
  40a84e:	out    0x22,eax
  40a850:	sbb    al,0x3d
  40a852:	gs fsub st(6),st
  40a855:	xchg   ebp,eax
  40a856:	push   ss
  40a857:	xchg   ebp,eax
  40a858:	mov    edx,0x90c78b53
  40a85d:	pop    edi
  40a85e:	or     al,0x2c
  40a860:	inc    esi
  40a861:	fidivr WORD PTR [eax]
  40a863:	cwde   
  40a864:	mov    ebx,0x7a41c363
  40a869:	mov    edx,0x3cb1911
  40a86e:	enter  0xeb0e,0x2a
  40a872:	pop    edi
  40a873:	lahf   
  40a874:	(bad)  
  40a875:	dec    BYTE PTR [edi]
  40a877:	xchg   ecx,eax
  40a878:	iret   
  40a879:	rcr    esi,1
  40a87b:	cmp    BYTE PTR [esi],0x50
  40a87e:	iret   
  40a87f:	js     0x40a845
  40a881:	dec    edi
  40a882:	inc    edi
  40a883:	out    dx,eax
  40a884:	cwde   
  40a885:	(bad)
  40a888:	jo     0x40a81a
  40a88a:	xor    BYTE PTR [ebx],ch
  40a88c:	jl     0x40a83c
  40a88e:	xor    al,al
  40a890:	(bad)  
  40a891:	test   DWORD PTR [ebp+0x3f],eax
  40a894:	retf   
  40a895:	add    DWORD PTR [ecx+0x517262b0],ebp
  40a89b:	inc    esp
  40a89c:	or     BYTE PTR [edx+0x1f],al
  40a89f:	sar    esi,cl
  40a8a1:	xrelease mov BYTE PTR gs:[eax-0x6b],0xc1
  40a8a7:	xchg   ebx,eax
  40a8a8:	outs   dx,DWORD PTR ds:[esi]
  40a8a9:	cmp    al,0x86
  40a8ab:	js     0x40a8b6
  40a8ad:	pusha  
  40a8ae:	fdiv   QWORD PTR [ebp-0x36]
  40a8b1:	mov    ch,0x51
  40a8b3:	test   eax,0xbff6c2c6
  40a8b8:	cmp    al,0x94
  40a8ba:	ins    DWORD PTR es:[edi],dx
  40a8bb:	or     bl,BYTE PTR [ebx+0x1092910]
  40a8c1:	not    BYTE PTR [ecx-0x7887e717]
  40a8c7:	or     edi,DWORD PTR [ebx+0x695daabe]
  40a8cd:	push   edx
  40a8ce:	cli    
  40a8cf:	or     BYTE PTR ds:0x90487b15,cl
  40a8d5:	push   ds
  40a8d6:	jp     0x40a8be
  40a8d8:	sbb    BYTE PTR [ebx],bl
  40a8da:	lock cmp dh,ah
  40a8dd:	xchg   esi,eax
  40a8de:	jp     0x40a86a
  40a8e0:	xchg   esp,eax
  40a8e1:	sbb    DWORD PTR [ebx+0x3c],0x7
  40a8e5:	xchg   DWORD PTR [ecx*4+0x144285ed],ebp
  40a8ec:	jns    0x40a968
  40a8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ef:	shr    dl,0x7b
  40a8f2:	sub    al,0x8a
  40a8f4:	fdiv   QWORD PTR [edx]
  40a8f6:	out    dx,al
  40a8f7:	cmp    al,0x61
  40a8f9:	jno    0x40a8b1
  40a8fb:	test   al,0xea
  40a8fd:	shl    BYTE PTR [ebp+0xf],1
  40a900:	es daa 
  40a902:	cmp    eax,0xe2bf1fa2
  40a907:	lods   al,BYTE PTR ds:[esi]
  40a908:	shr    bl,1
  40a90a:	xor    eax,0xc90bbb48
  40a90f:	or     cl,BYTE PTR ds:[ecx]
  40a912:	or     eax,0x26bc6d4a
  40a917:	xor    edi,0xc303fa72
  40a91d:	adc    DWORD PTR [eax],edx
  40a91f:	dec    ecx
  40a920:	scas   eax,DWORD PTR es:[edi]
  40a921:	fsubr  QWORD PTR [edx-0x6b]
  40a924:	adc    BYTE PTR [ebp+0x32],dh
  40a927:	lds    ebp,FWORD PTR [ebp+eax*8+0xc0d8f09]
  40a92e:	mov    ebp,0x740a9a31
  40a933:	and    dh,bh
  40a935:	dec    edx
  40a936:	xor    cl,BYTE PTR [edi]
  40a938:	lods   al,BYTE PTR ds:[esi]
  40a939:	aam    0xab
  40a93b:	ins    BYTE PTR es:[edi],dx
  40a93c:	ror    BYTE PTR [ebx+0x64],0xe
  40a940:	iret   
  40a941:	xor    al,bl
  40a943:	fild   QWORD PTR [ebx+0x7fc29147]
  40a949:	nop
  40a94a:	xchg   ecx,eax
  40a94b:	add    ah,al
  40a94d:	dec    edx
  40a94e:	or     DWORD PTR gs:[edi-0x105d693b],esi
  40a955:	jae    0x40a94a
  40a957:	mov    esp,0xf6ad4764
  40a95c:	cmp    bl,ah
  40a95e:	pop    es
  40a95f:	and    edx,esi
  40a961:	fnstsw WORD PTR [esi+0xc3b8052]
  40a967:	xor    BYTE PTR [edx+0x73],dh
  40a96a:	pusha  
  40a96b:	mov    bl,ah
  40a96d:	pop    DWORD PTR [ebx-0x17edb51]
  40a973:	fs mov ebp,0x49872b2c
  40a979:	mov    dl,0x24
  40a97b:	nop
  40a97c:	inc    edi
  40a97d:	mov    ebp,0xa14326b2
  40a982:	pop    esi
  40a983:	or     bh,BYTE PTR [esi+ebx*1]
  40a986:	inc    esi
  40a987:	mov    ds:0xafc9b22b,al
  40a98c:	(bad)  
  40a98d:	test   eax,0x37208f07
  40a992:	shl    dl,cl
  40a994:	mov    dl,0x92
  40a996:	jo     0x40a935
  40a998:	cmp    cl,BYTE PTR [ebx-0x47]
  40a99b:	scas   eax,DWORD PTR es:[edi]
  40a99c:	xchg   ebx,eax
  40a99d:	in     al,dx
  40a99e:	pushf  
  40a99f:	mov    ebp,0x7b3c0c
  40a9a4:	xchg   edx,eax
  40a9a5:	ret    
  40a9a6:	inc    ebp
  40a9a7:	mov    dh,0xf7
  40a9a9:	xchg   ebx,eax
  40a9aa:	sub    DWORD PTR [ecx+0x1f],eax
  40a9ad:	xlat   BYTE PTR ds:[ebx]
  40a9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9af:	jge    0x40aa21
  40a9b1:	add    ebp,DWORD PTR [edi+0x4fe525b8]
  40a9b7:	adc    al,BYTE PTR [esi+ebp*8]
  40a9ba:	or     DWORD PTR [esi-0x709a087f],0x8f837b06
  40a9c4:	mov    bl,0x84
  40a9c6:	mov    ebp,0x9b9bfa60
  40a9cb:	mov    esi,DWORD PTR [esi+0x1f5583bf]
  40a9d1:	packssdw mm3,mm4
  40a9d4:	das    
  40a9d5:	clc    
  40a9d6:	xchg   ebx,eax
  40a9d7:	push   esi
  40a9d8:	sbb    DWORD PTR [eax+0x1c],edx
  40a9db:	pop    esp
  40a9dc:	pop    ebp
  40a9dd:	mov    edx,DWORD PTR [eax+ebp*4-0x5e06c29d]
  40a9e4:	dec    esp
  40a9e5:	jmp    0x40a9d3
  40a9e7:	(bad)  
  40a9e8:	ins    DWORD PTR es:[edi],dx
  40a9e9:	lods   eax,DWORD PTR ds:[esi]
  40a9ea:	dec    edx
  40a9eb:	lods   al,BYTE PTR ds:[esi]
  40a9ec:	xor    al,0x86
  40a9ee:	jae    0x40a97b
  40a9f0:	adc    cl,BYTE PTR [edx+0x38991a10]
  40a9f6:	mov    bh,0x9b
  40a9f8:	and    edx,DWORD PTR [eax+esi*1+0x10]
  40a9fc:	mov    ss,ecx
  40a9fe:	cld    
  40a9ff:	jo     0x40aa6d
  40aa01:	aas    
  40aa02:	cmp    al,0x25
  40aa04:	cmp    eax,0x7070e21a
  40aa09:	and    bl,cl
  40aa0b:	aas    
  40aa0c:	pop    ebp
  40aa0d:	mov    es,WORD PTR [eax+0x3272e844]
  40aa13:	sub    eax,0x9c4ba73a
  40aa18:	int3   
  40aa19:	pop    ebx
  40aa1a:	mov    edi,0x574963e
  40aa1f:	sub    ah,bl
  40aa21:	adc    al,BYTE PTR [ecx-0x3efedd60]
  40aa27:	out    0xd8,eax
  40aa29:	mov    edx,0xf26d74b9
  40aa2e:	in     eax,0x83
  40aa30:	pop    edx
  40aa31:	push   ebp
  40aa32:	mov    ss,WORD PTR [ebx]
  40aa34:	inc    esp
  40aa35:	ins    DWORD PTR es:[edi],dx
  40aa36:	mov    esi,0xc96bab4f
  40aa3b:	push   esp
  40aa3c:	push   ss
  40aa3d:	jmp    0x40aaa8
  40aa3f:	or     al,cl
  40aa41:	jle    0x40aa79
  40aa43:	add    BYTE PTR [edx],bh
  40aa45:	ins    DWORD PTR es:[edi],dx
  40aa46:	out    0x6f,eax
  40aa48:	pop    ds
  40aa49:	ins    BYTE PTR es:[edi],dx
  40aa4a:	aam    0x0
  40aa4c:	mov    esi,DWORD PTR ds:0xde710f71
  40aa52:	mov    edi,0xdf0c4ed1
  40aa57:	xor    al,0xeb
  40aa59:	jle    0x40a9e2
  40aa5b:	dec    eax
  40aa5c:	xchg   edx,eax
  40aa5d:	and    eax,0x4d1f7b5c
  40aa62:	cs inc esp
  40aa64:	in     al,0x81
  40aa66:	sbb    BYTE PTR [edx],dl
  40aa68:	gs add ecx,edi
  40aa6b:	mov    cl,0xa5
  40aa6d:	fwait
  40aa6e:	retf   0xe9a5
  40aa71:	push   ecx
  40aa72:	out    0x6c,eax
  40aa74:	call   0xbc9f4e37
  40aa79:	addr16 jo 0x40aac8
  40aa7c:	inc    ebx
  40aa7d:	lock (bad) 
  40aa7f:	addr16 jmp 0x3d1fe78a
  40aa85:	jo     0x40aaa1
  40aa87:	sub    ecx,DWORD PTR [ebx-0x75]
  40aa8a:	out    0x33,eax
  40aa8c:	fist   WORD PTR [eax+0x52cc0fd2]
  40aa92:	fstp   TBYTE PTR [edx-0x1e]
  40aa95:	arpl   bp,ax
  40aa97:	cmp    ebx,DWORD PTR ds:0x40610576
  40aa9d:	xor    ebx,DWORD PTR [ebx-0x5f]
  40aaa0:	dec    esp
  40aaa1:	sub    eax,DWORD PTR [ecx+ebp*4-0x3dec3f4e]
  40aaa8:	shr    BYTE PTR [ebx-0x49],0xe9
  40aaac:	inc    ebx
  40aaad:	mov    dh,0x63
  40aaaf:	jle    0x40ab01
  40aab1:	std    
  40aab2:	and    BYTE PTR ds:0xfc228a45,0xd
  40aab9:	icebp  
  40aaba:	rcl    BYTE PTR [edx+0x25],cl
  40aabd:	and    al,0xc3
  40aabf:	loop   0x40aa89
  40aac1:	fst    QWORD PTR [edx+ecx*8+0x6460b06c]
  40aac8:	mov    dl,0x4e
  40aaca:	push   ss
  40aacb:	ret    
  40aacc:	ror    DWORD PTR [edi-0x77],0x17
  40aad0:	or     eax,0xa96b0c71
  40aad5:	sub    esp,DWORD PTR [edi+esi*4+0x7e]
  40aad9:	jbe    0x40aac2
  40aadb:	jno    0x40aaa3
  40aadd:	(bad)  
  40aade:	mov    ah,0xdc
  40aae0:	pushf  
  40aae1:	aam    0xfa
  40aae3:	leave  
  40aae4:	dec    esp
  40aae5:	dec    ecx
  40aae6:	jns    0x40ab08
  40aae8:	pop    es
  40aae9:	dec    ecx
  40aaea:	and    eax,0x8fd71159
  40aaef:	popf   
  40aaf0:	sub    eax,DWORD PTR [ebp+0x2d04fbdb]
  40aaf6:	add    eax,0x586e1486
  40aafb:	test   eax,0x2b0878a7
  40ab00:	repz js 0x40aaba
  40ab03:	jg     0x40ab63
  40ab05:	xor    DWORD PTR [ebp+0x1f311546],0xb42e7482
  40ab0f:	and    cl,BYTE PTR [esi+ebx*1+0x58]
  40ab13:	fcmovnbe st,st(7)
  40ab15:	repz iretw 
  40ab18:	mov    eax,0x204cdebe
  40ab1d:	rcr    BYTE PTR [eax-0xf636163],0x6a
  40ab24:	std    
  40ab25:	gs adc al,0x0
  40ab28:	push   0xffffffc0
  40ab2a:	and    eax,0x45781932
  40ab2f:	ret    0x564d
  40ab32:	call   FWORD PTR [edi+0x77]
  40ab35:	jl     0x40aba0
  40ab37:	cmp    esi,edi
  40ab39:	loop   0x40ab52
  40ab3b:	(bad)  [edx+0x7d]
  40ab3e:	pop    edi
  40ab3f:	add    BYTE PTR [ecx+esi*4],al
  40ab42:	pop    ebx
  40ab43:	stc    
  40ab44:	dec    esi
  40ab45:	imul   esi,ebx,0xfffffff4
  40ab48:	rcr    edx,cl
  40ab4a:	popf   
  40ab4b:	fs (bad) 
  40ab4d:	jns    0x40ab49
  40ab4f:	test   BYTE PTR [ecx],dl
  40ab51:	fs jb  0x40ab71
  40ab54:	cmp    BYTE PTR [edi-0x79],dl
  40ab57:	mov    dh,0x63
  40ab59:	sti    
  40ab5a:	mov    edi,0x25c2f94a
  40ab5f:	ror    BYTE PTR [edi-0x61],0x33
  40ab63:	jne    0x40ab31
  40ab65:	dec    edi
  40ab66:	xor    DWORD PTR [esi-0x22535128],ebp
  40ab6c:	lahf   
  40ab6d:	enter  0x2df4,0xe5
  40ab71:	pop    edx
  40ab72:	neg    esi
  40ab74:	mov    ebp,0x94f719ff
  40ab79:	sbb    DWORD PTR [edx-0x23],edi
  40ab7c:	out    0xd4,al
  40ab7e:	les    edx,FWORD PTR [edi-0x1d91349a]
  40ab84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab85:	mov    ebp,0xc82fb93e
  40ab8a:	push   0x3edd8081
  40ab8f:	and    edx,0xffffff99
  40ab92:	ret    
  40ab93:	outs   dx,DWORD PTR ds:[esi]
  40ab94:	gs add eax,0x1c6b5237
  40ab9a:	pusha  
  40ab9b:	inc    edx
  40ab9c:	(bad)  
  40ab9d:	fisttp DWORD PTR [edx-0x75]
  40aba0:	in     al,0xe9
  40aba2:	iret   
  40aba3:	cmp    eax,0x6b9f5637
  40aba8:	dec    esp
  40aba9:	and    eax,DWORD PTR [edx]
  40abab:	xlat   BYTE PTR ds:[ebx]
  40abac:	les    ebx,FWORD PTR [ebx]
  40abae:	aam    0x3a
  40abb0:	loope  0x40ac14
  40abb2:	dec    ebp
  40abb3:	int    0xc6
  40abb5:	neg    BYTE PTR [esi]
  40abb7:	and    al,0x5b
  40abb9:	dec    edx
  40abba:	adc    al,0x30
  40abbc:	imul   eax,eax,0xf1034d00
  40abc2:	test   BYTE PTR [edi-0x7],0xca
  40abc6:	dec    esi
  40abc7:	mov    eax,0x6194f6a5
  40abcc:	imul   ecx,ebx,0x38
  40abcf:	sbb    DWORD PTR [edi],edx
  40abd1:	pusha  
  40abd2:	cmp    eax,DWORD PTR [esi+0x51b28d22]
  40abd8:	xchg   edi,eax
  40abd9:	outs   dx,DWORD PTR ds:[esi]
  40abda:	lahf   
  40abdb:	retf   
  40abdc:	shl    BYTE PTR [ebp-0x2a1314de],1
  40abe2:	call   0x7b7a:0xe6713f7b
  40abe9:	pop    edi
  40abea:	pop    edi
  40abeb:	and    BYTE PTR [ebx+ecx*1+0x47d74c37],dh
  40abf2:	sti    
  40abf3:	(bad)  
  40abf4:	push   edi
  40abf5:	sbb    esp,ebp
  40abf7:	lahf   
  40abf8:	out    0x60,eax
  40abfa:	add    al,0x2a
  40abfc:	out    dx,eax
  40abfd:	cmp    bl,bh
  40abff:	xchg   ch,dl
  40ac01:	push   ds
  40ac02:	and    BYTE PTR [ecx],bl
  40ac04:	adc    eax,0x3440290e
  40ac09:	test   al,0xdd
  40ac0b:	fimul  DWORD PTR [ebp+edx*1-0x2df1341b]
  40ac12:	into   
  40ac13:	neg    BYTE PTR [edi+edx*2+0x48]
  40ac17:	ds (bad) 
  40ac19:	call   0xa842029f
  40ac1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac1f:	cwde   
  40ac20:	out    dx,al
  40ac21:	fs into 
  40ac23:	aas    
  40ac24:	data16 ins BYTE PTR es:[edi],dx
  40ac26:	or     BYTE PTR [ebp-0x46909ea5],0xeb
  40ac2d:	stos   BYTE PTR es:[edi],al
  40ac2e:	popa   
  40ac2f:	mov    ecx,0x6cf2690f
  40ac34:	xchg   ebp,eax
  40ac35:	cmp    cl,BYTE PTR [esi]
  40ac37:	push   eax
  40ac38:	jl     0x40abc3
  40ac3a:	mov    edx,0x4d64f698
  40ac3f:	jge    0x40ac76
  40ac41:	push   0x3
  40ac43:	mov    ebx,0xe70668f5
  40ac48:	dec    esi
  40ac49:	cmp    al,0x3
  40ac4b:	mov    bh,0x4c
  40ac4d:	popf   
  40ac4e:	pop    es
  40ac4f:	inc    esi
  40ac50:	pop    esp
  40ac51:	ja     0x40ac67
  40ac53:	push   eax
  40ac54:	inc    ecx
  40ac55:	mov    cl,0x7
  40ac57:	lahf   
  40ac58:	cdq    
  40ac59:	not    BYTE PTR [ebp-0x6a41bbe8]
  40ac5f:	push   esp
  40ac60:	or     al,0x5b
  40ac62:	and    DWORD PTR ds:0xd7b970f3,0xffffff94
  40ac69:	fnsave [edx+esi*2+0x4df305ff]
  40ac70:	jl     0x40ac34
  40ac72:	addr16 dec ecx
  40ac74:	popf   
  40ac75:	les    eax,FWORD PTR fs:0x58472582
  40ac7c:	ffree  st(4)
  40ac7e:	stos   DWORD PTR es:[di],eax
  40ac80:	fisubr WORD PTR [ecx+0x2798f34a]
  40ac86:	push   es
  40ac87:	or     eax,0x54d25bba
  40ac8c:	push   ds
  40ac8d:	jecxz  0x40ac12
  40ac8f:	pop    ebx
  40ac90:	js     0x40ac68
  40ac92:	mov    bh,0xfe
  40ac94:	add    ebp,esi
  40ac96:	pop    ebx
  40ac97:	int3   
  40ac98:	test   eax,0x3caf291a
  40ac9d:	loopne 0x40acd5
  40ac9f:	push   ss
  40aca0:	retf   
  40aca1:	cmp    DWORD PTR [edx+0x0],edi
  40aca4:	gs out dx,eax
  40aca6:	xchg   ebp,eax
  40aca7:	mov    bh,0xb1
  40aca9:	xor    eax,0xfafc7ba1
  40acae:	dec    esi
  40acaf:	nop
  40acb0:	in     al,dx
  40acb1:	popa   
  40acb2:	popa   
  40acb3:	or     dl,dh
  40acb5:	test   eax,0xb2574ca1
  40acba:	xor    al,0x86
  40acbc:	ror    BYTE PTR [eax+eiz*4+0x47],0x4e
  40acc1:	jl     0x40ac67
  40acc3:	mov    ds:0x5a9c68c4,eax
  40acc8:	popa   
  40acc9:	gs cli 
  40accb:	(bad)  
  40accc:	inc    BYTE PTR [ecx+esi*4-0x125aa9eb]
  40acd3:	frstor [ecx+0x20]
  40acd6:	(bad)  
  40acd7:	mov    al,0x45
  40acd9:	xor    al,0x4a
  40acdb:	mov    eax,ds:0xca476642
  40ace0:	cli    
  40ace1:	push   ss
  40ace2:	or     BYTE PTR [ebx+0x1],dh
  40ace5:	xchg   edi,eax
  40ace6:	mov    cl,0x9a
  40ace8:	mov    WORD PTR [esi-0xb],gs
  40aceb:	pop    esp
  40acec:	fldcw  WORD PTR [eax-0x17cd2a2c]
  40acf2:	and    BYTE PTR [edi-0x1b],0xba
  40acf6:	test   edi,ebx
  40acf8:	xchg   DWORD PTR [edi],edx
  40acfa:	mov    esi,0x5f0be31b
  40acff:	dec    esi
  40ad00:	scas   eax,DWORD PTR es:[edi]
  40ad01:	sub    eax,0x45633ecf
  40ad06:	pop    ebx
  40ad07:	add    al,0xa4
  40ad09:	xlat   BYTE PTR ds:[ebx]
  40ad0a:	sub    BYTE PTR [ecx+0x533f02f6],bl
  40ad10:	adc    eax,0x6f04c606
  40ad15:	pusha  
  40ad16:	lods   al,BYTE PTR ds:[esi]
  40ad17:	pop    edi
  40ad18:	pop    edi
  40ad19:	paddw  mm0,QWORD PTR [ebx+0x32]
  40ad1d:	arpl   di,bx
  40ad1f:	cs hlt 
  40ad21:	or     eax,0xf72ef6fb
  40ad26:	dec    ebp
  40ad27:	push   edi
  40ad28:	xchg   DWORD PTR [ebp+0xf],eax
  40ad2b:	inc    edx
  40ad2c:	jl     0x40ad79
  40ad2e:	lahf   
  40ad2f:	xor    DWORD PTR [esi+0x3b],eax
  40ad32:	int    0x8c
  40ad34:	mov    edx,ebp
  40ad36:	std    
  40ad37:	and    eax,0x3a127c74
  40ad3c:	dec    ecx
  40ad3d:	mov    esp,0xa61d109e
  40ad42:	mov    esp,0x724cb21a
  40ad47:	call   0x7ae8:0x1db82d3d
  40ad4e:	repz in eax,dx
  40ad50:	xor    edx,eax
  40ad52:	lahf   
  40ad53:	inc    edi
  40ad54:	inc    esp
  40ad55:	imul   esp,edx,0x44
  40ad58:	adc    al,0x67
  40ad5a:	pop    ecx
  40ad5b:	and    al,0xc5
  40ad5d:	sbb    DWORD PTR [edx+0x56],esi
  40ad60:	les    edx,FWORD PTR [ecx]
  40ad62:	das    
  40ad63:	sbb    al,0x21
  40ad65:	and    al,0xcb
  40ad67:	arpl   WORD PTR [esi],sp
  40ad69:	fstp   DWORD PTR [ecx]
  40ad6b:	inc    esi
  40ad6c:	xchg   ecx,eax
  40ad6d:	(bad)  
  40ad6e:	scas   eax,DWORD PTR es:[edi]
  40ad6f:	pop    edi
  40ad70:	mov    esp,0x6e209082
  40ad75:	pop    edx
  40ad76:	pop    ds
  40ad77:	cdq    
  40ad78:	inc    esi
  40ad79:	mov    eax,ds:0x6384a3b4
  40ad7e:	ss inc ebp
  40ad80:	mov    al,ds:0xb15747a7
  40ad85:	(bad)  
  40ad86:	rol    BYTE PTR ds:0xfacf1dad,0xbd
  40ad8d:	outs   dx,DWORD PTR ds:[esi]
  40ad8e:	or     ebx,DWORD PTR [ebx+edi*1-0x2b2316da]
  40ad95:	pop    ss
  40ad96:	ins    BYTE PTR es:[edi],dx
  40ad97:	inc    ebx
  40ad98:	arpl   cx,si
  40ad9a:	mov    eax,DWORD PTR [ebp-0x14]
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a62b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a62f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi+0x7231022a]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0xffffff82
  40aed6:	inc    esp
  40aed7:	je     0x40aeec
  40aed9:	les    ebx,FWORD PTR [ebx]
  40aedb:	sahf   
  40aedc:	sbb    ah,BYTE PTR [ecx-0x18a8845b]
  40aee2:	cmc    
  40aee3:	arpl   ax,cx
  40aee5:	inc    ebx
  40aee6:	pop    edi
  40aee7:	imul   dl
  40aee9:	xchg   ebp,eax
  40aeea:	mov    ecx,DWORD PTR [eax+ecx*1-0x18]
  40aeee:	inc    ecx
  40aeef:	mov    esp,DWORD PTR [edx+0x67]
  40aef2:	ins    DWORD PTR es:[edi],dx
  40aef3:	xchg   DWORD PTR [edi],edi
  40aef5:	or     eax,esp
  40aef7:	mov    dh,0x39
  40aef9:	push   ebp
  40aefa:	imul   esi,DWORD PTR [edi+0xe],0x752898e7
  40af01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af02:	aas    
  40af03:	jb     0x40af03
  40af05:	fld    DWORD PTR [ebx-0x6d99a845]
  40af0b:	add    al,ah
  40af0d:	lock sub bl,dh
  40af10:	inc    edx
  40af11:	sub    DWORD PTR [edx+0x4b],ebp
  40af14:	in     eax,0x7b
  40af16:	div    BYTE PTR [edi-0x4f03b283]
  40af1c:	add    ecx,DWORD PTR [esi]
  40af1e:	cwde   
  40af1f:	lock ds pushf 
  40af22:	jns    0x40af5e
  40af24:	in     eax,0x13
  40af26:	push   0xd
  40af28:	or     DWORD PTR [eax],ebp
  40af2a:	sub    eax,0xb01f010c
  40af2f:	in     eax,0x60
  40af31:	mov    eax,0x19cdd2da
  40af36:	xchg   ebx,eax
  40af37:	or     BYTE PTR [esi+0x1e],bh
  40af3a:	(bad)  
  40af3b:	push   ss
  40af3c:	or     eax,0xf8d9f33a
  40af41:	sub    al,0xfa
  40af43:	bound  esp,QWORD PTR [esi-0x4f]
  40af46:	add    al,0xee
  40af48:	dec    ecx
  40af49:	mov    eax,ds:0x7b81057a
  40af4e:	outs   dx,BYTE PTR ds:[esi]
  40af4f:	popf   
  40af50:	jg     0x40afce
  40af52:	into   
  40af53:	inc    edi
  40af54:	cmp    eax,DWORD PTR [ebp-0x485bce62]
  40af5a:	and    al,0x47
  40af5c:	int    0x52
  40af5e:	inc    esi
  40af5f:	xchg   esp,eax
  40af60:	sub    cl,BYTE PTR [edx-0x3181e47c]
  40af66:	shr    DWORD PTR [eax+0x27],cl
  40af69:	push   0x3a31952
  40af6e:	imul   ecx,DWORD PTR [ebp+0x222c57cd],0xffffffe3
  40af75:	adc    eax,0x99bced53
  40af7a:	sbb    DWORD PTR [ecx+0x577c4e50],ebp
  40af80:	sub    edx,DWORD PTR [edi+0x30]
  40af83:	xor    dl,BYTE PTR [ebp+0x3c]
  40af86:	stos   DWORD PTR es:[edi],eax
  40af87:	push   edi
  40af88:	pop    DWORD PTR [ecx+0x1415706e]
  40af8e:	adc    eax,DWORD PTR [ecx+0x7b8d1cdc]
  40af94:	call   0xc4dc1796
  40af99:	inc    edi
  40af9a:	test   DWORD PTR [eax+ecx*2-0x435ee719],ebp
  40afa1:	shl    BYTE PTR [eax+eiz*1-0x6ac15b4e],cl
  40afa8:	lahf   
  40afa9:	push   0xffffffe4
  40afab:	out    dx,eax
  40afac:	pop    ebp
  40afad:	cwde   
  40afae:	push   ebx
  40afaf:	mov    WORD PTR [edi+0x34],cs
  40afb2:	and    DWORD PTR [ecx-0x25],edx
  40afb5:	mov    al,ds:0x5f509f81
  40afba:	(bad)  
  40afbb:	pushf  
  40afbc:	test   dh,0x4c
  40afbf:	and    eax,0x5d0ee36d
  40afc4:	mov    ds:0x31078c54,al
  40afc9:	out    dx,eax
  40afca:	test   DWORD PTR [esi+ebp*8-0x7e861dd1],edi
  40afd1:	lods   eax,DWORD PTR ds:[esi]
  40afd2:	sbb    DWORD PTR gs:[esi-0x4e79b9b8],ebp
  40afd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afda:	sbb    BYTE PTR [eax-0x4e660fec],bl
  40afe0:	or     dl,al
  40afe2:	es dec edi
  40afe4:	lods   eax,DWORD PTR ds:[esi]
  40afe5:	iret   
  40afe6:	dec    edi
  40afe7:	xchg   edi,eax
  40afe8:	div    DWORD PTR [ecx]
  40afea:	inc    edi
  40afeb:	xor    cl,BYTE PTR [eax+0x2e]
  40afee:	jp     0x40afa7
  40aff0:	dec    edi
  40aff1:	add    ah,BYTE PTR ds:0xccb87ac4
  40aff7:	adc    eax,0xc3769ee2
  40affc:	mov    bh,al
  40affe:	sahf   
  40afff:	inc    edx
  40b000:	inc    edi
  40b001:	jp     0x40afd2
  40b003:	push   esp
  40b004:	sahf   
  40b005:	pop    ebx
  40b006:	push   eax
  40b007:	push   0xe39f434a
  40b00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b00d:	adc    al,0x82
  40b00f:	xor    DWORD PTR [edx+0x334d1e0d],ebp
  40b015:	xchg   ecx,eax
  40b016:	dec    esi
  40b017:	call   0x3055:0x56cb6601
  40b01e:	call   0x9098:0x57033c2
  40b025:	jb     0x40b07a
  40b027:	dec    esi
  40b028:	inc    ecx
  40b029:	popfw  
  40b02b:	scas   eax,DWORD PTR es:[edi]
  40b02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b02d:	mov    esp,0xa54374d7
  40b032:	lahf   
  40b033:	je     0x40b01e
  40b035:	ret    0xb542
  40b038:	cld    
  40b039:	mov    ah,0xad
  40b03b:	shr    DWORD PTR [ebp-0x1b3285aa],1
  40b041:	leave  
  40b042:	add    al,0x9d
  40b044:	sub    DWORD PTR ds:0xbc1109a,edx
  40b04a:	xor    dh,BYTE PTR [esi-0x784233b6]
  40b050:	add    al,0xa
  40b052:	push   esp
  40b053:	fidivr DWORD PTR [ecx+edi*4-0x54]
  40b057:	retf   
  40b058:	jl     0x40b01b
  40b05a:	or     eax,0x5c2ee732
  40b05f:	and    al,0xe8
  40b061:	mov    ds:0x59100633,eax
  40b066:	scas   al,BYTE PTR es:[edi]
  40b067:	sub    al,0xf8
  40b069:	std    
  40b06a:	inc    ebp
  40b06b:	sub    BYTE PTR [esi],cl
  40b06d:	(bad)  [esi]
  40b070:	mov    BYTE PTR [edi-0x5],bh
  40b073:	mov    al,ds:0xced1a2d3
  40b078:	xor    BYTE PTR [eax-0x5b688f46],ch
  40b07e:	aaa    
  40b07f:	popa   
  40b080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b081:	ja     0x40b01f
  40b083:	dec    esp
  40b084:	cld    
  40b085:	pop    esi
  40b086:	adc    bh,0x54
  40b089:	pop    edi
  40b08a:	xchg   DWORD PTR [ebx+0x45b6390c],edx
  40b090:	cld    
  40b091:	ds add al,0x82
  40b094:	mov    eax,0x29b87e1b
  40b099:	add    eax,0x4b3c9ad6
  40b09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b09f:	cmp    al,0x26
  40b0a1:	xlat   BYTE PTR ds:[ebx]
  40b0a2:	xchg   edi,eax
  40b0a3:	popa   
  40b0a4:	jg     0x40b07d
  40b0a6:	sbb    bl,dl
  40b0a8:	adc    cl,ah
  40b0aa:	fdivr  DWORD PTR [ecx+0x35]
  40b0ad:	mov    eax,0xfb2ff2c7
  40b0b2:	and    bl,cl
  40b0b4:	cs (bad) 
  40b0b6:	sbb    ah,BYTE PTR [edx]
  40b0b8:	inc    ecx
  40b0b9:	enter  0x369,0xef
  40b0bd:	cld    
  40b0be:	pop    edx
  40b0bf:	out    0xe8,eax
  40b0c1:	xchg   ebx,eax
  40b0c2:	cmp    DWORD PTR [ecx-0x1c],ebx
  40b0c5:	and    al,BYTE PTR [ebx+0x12c35f19]
  40b0cb:	in     eax,dx
  40b0cc:	es pop ebx
  40b0ce:	or     DWORD PTR [ebp-0x6e],0x7e08af24
  40b0d5:	lds    edi,FWORD PTR [eax-0x11571a65]
  40b0db:	popa   
  40b0dc:	push   ecx
  40b0dd:	jl     0x40b142
  40b0df:	stc    
  40b0e0:	jle    0x40b14c
  40b0e2:	call   0xa870:0xfedba9e7
  40b0e9:	test   eax,0xe345b5c
  40b0ee:	add    al,0x84
  40b0f0:	fisttp DWORD PTR [ebp-0x53]
  40b0f3:	or     DWORD PTR [edi-0x76],edx
  40b0f6:	pop    esi
  40b0f7:	pop    ds
  40b0f8:	lods   eax,DWORD PTR ds:[esi]
  40b0f9:	aas    
  40b0fa:	inc    edx
  40b0fb:	stos   BYTE PTR es:[edi],al
  40b0fc:	pop    eax
  40b0fd:	ror    ecx,1
  40b0ff:	loop   0x40b0b5
  40b101:	fisub  DWORD PTR [ecx]
  40b103:	cmp    bh,BYTE PTR [edi-0x7b]
  40b106:	dec    ebx
  40b107:	fsub   DWORD PTR [ecx+0x4e]
  40b10a:	mov    ds:0x81e6617f,al
  40b10f:	and    BYTE PTR [ebx+eiz*2+0x7a],ah
  40b113:	popa   
  40b114:	add    bh,BYTE PTR [ebx]
  40b116:	cmp    BYTE PTR [esi],al
  40b118:	dec    BYTE PTR [edx]
  40b11a:	(bad)  
  40b11c:	push   edx
  40b11d:	jno    0x40b0a9
  40b11f:	pop    esi
  40b120:	pop    ecx
  40b121:	fisttp WORD PTR [ecx+ecx*2-0x1f]
  40b125:	xor    BYTE PTR [ecx-0x4324f262],bh
  40b12b:	add    BYTE PTR [edx+0x769223c8],bl
  40b131:	(bad)  
  40b132:	ds mov dl,0xb3
  40b135:	sub    eax,0x7906a89f
  40b13a:	mov    bl,0x8e
  40b13c:	sbb    al,0xb3
  40b13e:	sahf   
  40b13f:	mov    ds:0x6c54332c,eax
  40b144:	aaa    
  40b145:	shl    DWORD PTR [ebx-0x47015046],1
  40b14b:	jp     0x40b150
  40b14d:	je     0x40b123
  40b14f:	in     eax,0x9d
  40b151:	cmp    eax,0x59ad71f6
  40b156:	push   ebp
  40b157:	push   cs
  40b158:	mov    eax,0x2d8757b7
  40b15d:	cld    
  40b15e:	pop    eax
  40b15f:	(bad)  
  40b160:	jmp    0x40b189
  40b162:	jne    0x40b10c
  40b164:	pop    es
  40b165:	mov    edi,0x3b391671
  40b16a:	sub    esp,esp
  40b16c:	pop    es
  40b16d:	mov    ds,WORD PTR [ebx+0x20fe00f1]
  40b173:	sti    
  40b174:	in     al,dx
  40b175:	fwait
  40b176:	pop    es
  40b177:	or     eax,0x671c80f3
  40b17c:	sbb    ah,BYTE PTR [eax+0x54]
  40b17f:	push   es
  40b180:	loop   0x40b190
  40b182:	stc    
  40b183:	push   edx
  40b184:	clc    
  40b185:	out    0xf8,eax
  40b187:	cwde   
  40b188:	mov    cl,0x87
  40b18a:	sbb    al,0x6f
  40b18c:	ins    BYTE PTR es:[edi],dx
  40b18d:	stc    
  40b18e:	sub    bh,bl
  40b190:	out    0x93,eax
  40b192:	pop    eax
  40b193:	icebp  
  40b194:	ret    0xb9f3
  40b197:	sahf   
  40b198:	sti    
  40b199:	pop    esi
  40b19a:	nop
  40b19b:	xlat   BYTE PTR ds:[ebx]
  40b19c:	bound  esp,QWORD PTR [ebx]
  40b19e:	rcr    BYTE PTR [eax-0x5629b8ea],0xe7
  40b1a5:	mov    cl,BYTE PTR [ecx]
  40b1a7:	or     ah,dh
  40b1a9:	push   ebp
  40b1ab:	xchg   edx,eax
  40b1ac:	shl    ebp,1
  40b1ae:	out    0xad,eax
  40b1b0:	mov    dl,BYTE PTR [edx]
  40b1b2:	inc    ebx
  40b1b3:	mov    edi,0xd22df1a7
  40b1b8:	mov    ecx,0x35c7a7cf
  40b1bd:	xchg   ebp,eax
  40b1be:	sbb    bh,BYTE PTR [edi+0x7b]
  40b1c1:	cmp    bh,BYTE PTR [edx-0x759ab567]
  40b1c7:	ins    BYTE PTR es:[edi],dx
  40b1c8:	cmp    edi,DWORD PTR [edi+0x28b6fd0a]
  40b1ce:	pop    esp
  40b1cf:	nop
  40b1d0:	fbstp  TBYTE PTR [esi+0x3e]
  40b1d3:	inc    esi
  40b1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d5:	scas   eax,DWORD PTR es:[edi]
  40b1d6:	(bad)  
  40b1d9:	cmp    BYTE PTR [esp+esi*4-0x43cf8c04],bl
  40b1e0:	bound  eax,QWORD PTR [esi-0x49]
  40b1e3:	mov    al,BYTE PTR [edx-0x80]
  40b1e6:	imul   ebx,esp,0x46c85176
  40b1ec:	fstp   TBYTE PTR [esi-0x5f]
  40b1ef:	call   0xb47c5f64
  40b1f4:	or     bh,BYTE PTR [ebp-0x119b7ba7]
  40b1fa:	add    cl,BYTE PTR [edi+0x64]
  40b1fd:	in     al,0xf3
  40b1ff:	xor    BYTE PTR ds:0x23e5126a,dh
  40b205:	cld    
  40b206:	out    0xca,eax
  40b208:	retf   
  40b209:	mov    esp,0xb0550f3f
  40b20e:	fs addr16 inc esp
  40b211:	lea    edi,[edi+0x41]
  40b214:	pop    edi
  40b215:	div    DWORD PTR [esi+0x2200c1bb]
  40b21b:	sbb    eax,0x1d7cb9f2
  40b220:	mov    ebx,0x806f0f1d
  40b225:	xor    BYTE PTR [edi+0x374a8a2d],0x94
  40b22c:	lds    ebx,FWORD PTR [ecx]
  40b22e:	dec    edx
  40b22f:	call   0xc16cbe09
  40b234:	rcr    ecx,1
  40b236:	add    al,0xc0
  40b238:	int3   
  40b239:	mov    esi,0x927a5d7
  40b23e:	repz mov dl,0x2b
  40b241:	xor    edi,DWORD PTR [edx+0x7adf4a6c]
  40b247:	adc    edi,DWORD PTR [edx+0x34]
  40b24a:	inc    eax
  40b24b:	(bad)
  40b24e:	and    DWORD PTR [esi+0x5f],ecx
  40b251:	mov    bl,0x6f
  40b253:	cmp    eax,0x127022b
  40b258:	cmp    al,0x8c
  40b25a:	xchg   ebp,eax
  40b25b:	xchg   DWORD PTR [edx-0x68ff9a73],ebp
  40b261:	rcl    DWORD PTR [esi],1
  40b263:	jle    0x40b23f
  40b265:	outs   dx,DWORD PTR ds:[esi]
  40b266:	pop    ss
  40b267:	mov    esp,DWORD PTR [esi-0x7d]
  40b26a:	or     dh,BYTE PTR [ecx+edx*8-0x45acb5ab]
  40b271:	push   0xbe73f2cb
  40b276:	shl    DWORD PTR [ebx-0x526b0dd9],cl
  40b27c:	sbb    eax,0x5be88e8b
  40b281:	aad    0x54
  40b283:	stos   DWORD PTR es:[edi],eax
  40b284:	dec    edx
  40b285:	or     edi,DWORD PTR [edx]
  40b287:	aad    0xa2
  40b289:	cmp    al,0xc7
  40b28b:	(bad)  
  40b28c:	mov    DWORD PTR [ecx-0x67b268fd],0x23cc826e
  40b296:	ds retf 0x7f47
  40b29a:	imul   eax,DWORD PTR [esi+0x28851040],0x37202516
  40b2a4:	ret    0x920d
  40b2a7:	xchg   ebp,eax
  40b2a8:	das    
  40b2a9:	mov    edx,DWORD PTR [edi]
  40b2ab:	adc    ebp,DWORD PTR [esi+0x12]
  40b2ae:	jle    0x40b323
  40b2b0:	jnp    0x40b2ac
  40b2b2:	inc    ebx
  40b2b3:	lea    edx,[ebx]
  40b2b5:	test   DWORD PTR [edi],0x1d074c06
  40b2bb:	cmc    
  40b2bc:	mov    bh,0x7d
  40b2be:	xor    bl,al
  40b2c0:	push   ebp
  40b2c1:	sbb    al,0xdf
  40b2c3:	dec    ebx
  40b2c4:	call   0x3b04:0xcdaea292
  40b2cb:	lds    esi,FWORD PTR [edx+0x73]
  40b2ce:	inc    edx
  40b2cf:	sbb    al,0xdd
  40b2d1:	cmp    al,0x7d
  40b2d3:	xchg   edi,eax
  40b2d4:	inc    edx
  40b2d5:	sub    DWORD PTR [edx-0x7c65536b],ebp
  40b2db:	sbb    al,0x21
  40b2dd:	pop    ebp
  40b2de:	and    DWORD PTR [esi],0x52
  40b2e1:	lods   al,BYTE PTR ds:[esi]
  40b2e2:	xor    BYTE PTR [edx-0x5554b3c3],dh
  40b2e8:	fcmovnb st,st(2)
  40b2ea:	push   es
  40b2eb:	mov    edi,0x4b4f867e
  40b2f0:	scas   al,BYTE PTR es:[edi]
  40b2f1:	ror    BYTE PTR [esi+0x6a107548],1
  40b2f7:	add    BYTE PTR ds:0x46a03eb5,dl
  40b2fd:	jg     0x40b37d
  40b2ff:	push   ebx
  40b300:	sub    bl,dl
  40b302:	mov    ah,dl
  40b304:	inc    edx
  40b305:	fs mov ebp,0x7828d51
  40b30b:	fadd   QWORD PTR [esi+eax*8]
  40b30e:	pop    edx
  40b30f:	mov    bh,0x32
  40b311:	test   eax,0xc1e7efe9
  40b316:	scas   al,BYTE PTR es:[edi]
  40b317:	mov    bl,0xd1
  40b319:	imul   edx,DWORD PTR [eax+0x1e400f8d],0xf6ef80a8
  40b323:	pop    edx
  40b324:	hlt    
  40b325:	xchg   ecx,eax
  40b326:	aas    
  40b327:	retf   
  40b328:	mov    DWORD PTR [esp+esi*8-0xeb73510],esi
  40b32f:	retf   
  40b330:	jmp    0xb067:0xc86f5882
  40b337:	add    cl,cl
  40b339:	retf   
  40b33a:	cmp    DWORD PTR [edx],ebp
  40b33c:	mov    es,WORD PTR [ecx+0x77b4f0f9]
  40b342:	jb     0x40b323
  40b344:	pop    ds
  40b345:	mov    ah,BYTE PTR [ebx+0xc]
  40b348:	loopne 0x40b366
  40b34a:	inc    ebx
  40b34b:	cmp    ecx,DWORD PTR [edx+0x3]
  40b34e:	xor    ah,bh
  40b350:	lods   eax,DWORD PTR ds:[esi]
  40b351:	imul   edx,DWORD PTR [ebp+0x2c6c1144],0xfffffff8
  40b358:	jle    0x40b33e
  40b35a:	les    ecx,FWORD PTR [edx+0x72]
  40b35d:	stc    
  40b35e:	push   ds
  40b35f:	inc    ecx
  40b360:	shr    DWORD PTR ds:0x95d10890,1
  40b366:	push   es
  40b367:	jne    0x40b3e8
  40b369:	pop    esi
  40b36a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b36b:	add    eax,0xdbd5c795
  40b370:	ja     0x40b3d2
  40b372:	scas   al,BYTE PTR es:[edi]
  40b373:	jmp    0x81c7:0x5b92cc03
  40b37a:	call   0x2a83:0x5e90a7b0
  40b381:	bound  ebx,QWORD PTR [ecx]
  40b383:	scas   al,BYTE PTR es:[edi]
  40b384:	dec    esi
  40b385:	into   
  40b386:	outs   dx,BYTE PTR ds:[esi]
  40b387:	rep lods eax,DWORD PTR ds:[esi]
  40b389:	add    DWORD PTR [edi],esi
  40b38b:	ss jo  0x40b3ed
  40b38e:	jo     0x40b3dc
  40b390:	pushf  
  40b391:	es xchg ebp,eax
  40b393:	shl    BYTE PTR [esi+0x26],0x7d
  40b397:	jbe    0x40b3fa
  40b399:	xor    al,0xec
  40b39b:	or     al,BYTE PTR [edx+0x4b1db638]
  40b3a1:	icebp  
  40b3a2:	gs popa 
  40b3a4:	sub    DWORD PTR [edi*1-0x6bd58fb3],esi
  40b3ab:	mov    dh,0x18
  40b3ad:	popf   
  40b3ae:	or     ecx,ebp
  40b3b0:	cmp    ecx,ecx
  40b3b2:	pop    ebx
  40b3b3:	pop    edx
  40b3b4:	js     0x40b35a
  40b3b6:	push   ecx
  40b3b7:	es sti 
  40b3b9:	xchg   esi,eax
  40b3ba:	sti    
  40b3bb:	pop    ds
  40b3bc:	jp     0x40b3e0
  40b3be:	cdq    
  40b3bf:	cvtps2pd xmm5,QWORD PTR ds:0x1227415
  40b3c6:	cmp    BYTE PTR [edx+0x39db26ce],dh
  40b3cc:	repnz (bad) 
  40b3cf:	cs inc edx
  40b3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3d2:	dec    esi
  40b3d3:	aad    0xa5
  40b3d5:	sub    DWORD PTR [esi+0x22],0x5d
  40b3d9:	push   edi
  40b3da:	add    dh,BYTE PTR [ebp+0x34e69844]
  40b3e0:	out    dx,eax
  40b3e1:	mov    edx,0x75283df4
  40b3e6:	push   ds
  40b3e7:	shr    BYTE PTR [esi+0x7ca61e3d],0xaf
  40b3ee:	pop    esi
  40b3ef:	jnp    0x40b3cb
  40b3f1:	mov    esi,0x75d9b9f7
  40b3f6:	ds sti 
  40b3f8:	dec    edx
  40b3f9:	fdiv   DWORD PTR [edx+0x1a]
  40b3fc:	mov    edx,0xac96f033
  40b401:	xchg   edx,eax
  40b402:	fild   WORD PTR [ebx-0x40]
  40b405:	adc    bl,BYTE PTR [ebx+0x43]
  40b408:	inc    esi
  40b409:	sub    DWORD PTR [edi],0xf2a374ac
  40b40f:	mov    al,0xd2
  40b411:	stos   BYTE PTR es:[edi],al
  40b412:	jl     0x40b426
  40b414:	dec    esi
  40b415:	push   ss
  40b416:	lods   al,BYTE PTR cs:[esi]
  40b418:	mov    WORD PTR [edx-0x54],gs
  40b41b:	imul   eax,DWORD PTR [esi],0xfffffffe
  40b41e:	jnp    0x40b46f
  40b420:	mov    esp,0x2b8a159a
  40b425:	add    ah,BYTE PTR [edi+0x2825cf56]
  40b42b:	xchg   BYTE PTR [edx*1-0x6ad4bd79],al
  40b432:	pusha  
  40b433:	stos   BYTE PTR es:[edi],al
  40b434:	adc    eax,DWORD PTR [edx]
  40b436:	pop    ebp
  40b437:	xor    BYTE PTR [esi+0x1f8c58ec],al
  40b43d:	clc    
  40b43e:	shl    BYTE PTR [edi-0x25cfdd5a],0xe4
  40b445:	adc    ah,bh
  40b447:	add    BYTE PTR [ebx+eax*2+0x3ebb2e1c],al
  40b44e:	xchg   BYTE PTR [ebp-0x1c],dh
  40b451:	rol    BYTE PTR [edi-0x3ed07851],0x9e
  40b458:	in     eax,0x66
  40b45a:	lods   eax,DWORD PTR ds:[esi]
  40b45b:	clc    
  40b45c:	push   ecx
  40b45d:	std    
  40b45e:	push   ebp
  40b45f:	and    edx,DWORD PTR [ebp+0x4630312f]
  40b465:	mov    bh,0xe3
  40b467:	cmc    
  40b468:	xchg   edx,eax
  40b469:	scas   al,BYTE PTR es:[edi]
  40b46a:	add    al,BYTE PTR [ecx]
  40b46c:	loopne 0x40b411
  40b46e:	sti    
  40b46f:	dec    edx
  40b470:	loopne 0x40b4ed
  40b472:	rcl    DWORD PTR [esi+0x67],1
  40b475:	push   edi
  40b476:	daa    
  40b477:	imul   ebx,DWORD PTR [eax+0x25],0x76962c10
  40b47e:	push   ebp
  40b47f:	and    ch,dl
  40b481:	or     esp,ebp
  40b483:	push   esi
  40b484:	aam    0xcb
  40b486:	ret    
  40b487:	shl    ecx,0x4d
  40b48a:	push   ds
  40b48b:	shl    DWORD PTR [eax],cl
  40b48d:	mov    es,ecx
  40b48f:	iret   
  40b490:	lock pop edi
  40b492:	pop    ds
  40b493:	xchg   ebp,eax
  40b494:	jno    0x40b4a9
  40b496:	xchg   esi,eax
  40b497:	adc    ah,ch
  40b499:	mov    BYTE PTR [edx+0xe5d076],0x20
  40b4a0:	(bad)  
  40b4a1:	fisttp QWORD PTR [edx-0x39831ed4]
  40b4a7:	inc    edi
  40b4a8:	js     0x40b4c6
  40b4aa:	pop    ss
  40b4ab:	call   0x28d7:0xebf2d3f2
  40b4b2:	mov    fs,WORD PTR [eax]
  40b4b4:	out    dx,eax
  40b4b5:	repz add ebx,ecx
  40b4b8:	xchg   DWORD PTR [eax+eiz*4],ebp
  40b4bb:	fimul  WORD PTR [esi-0x15]
  40b4be:	mov    ah,0x7e
  40b4c0:	push   esp
  40b4c1:	adc    dh,dl
  40b4c3:	and    al,0xe9
  40b4c5:	rcl    DWORD PTR [edx+0x3e],0xfc
  40b4c9:	mov    edx,0x8b439cb7
  40b4ce:	jnp    0x40b462
  40b4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d1:	add    al,0x2a
  40b4d3:	mov    ebx,0xd9a4cae7
  40b4d8:	or     eax,0x19c8015b
  40b4dd:	xchg   DWORD PTR [edx+0x7b],esp
  40b4e0:	mov    eax,0x1be984ba
  40b4e5:	add    BYTE PTR [edi-0x63],ch
  40b4e8:	rcl    ebp,1
  40b4ea:	mov    BYTE PTR [ecx-0x46819949],al
  40b4f0:	pop    eax
  40b4f1:	xchg   BYTE PTR [esi],dl
  40b4f3:	call   0x9e3677db
  40b4f8:	mov    bl,0x2e
  40b4fa:	cmp    ebp,eax
  40b4fc:	add    eax,0x3aafd3ff
  40b501:	jl     0x40b48d
  40b503:	test   DWORD PTR [esi-0x25c0685a],edx
  40b509:	xchg   edx,eax
  40b50a:	imul   ebx,esp,0xc1e6131b
  40b510:	jb     0x40b58d
  40b512:	dec    esi
  40b513:	mov    ebp,0x3bf37335
  40b518:	and    eax,0x4b399000
  40b51d:	mov    eax,DWORD PTR [ecx]
  40b51f:	cmp    eax,0x950a9369
  40b524:	js     0x40b4e0
  40b526:	inc    esi
  40b527:	rol    BYTE PTR [edi],0x6c
  40b52a:	or     DWORD PTR [edi+0x9308af8],esi
  40b530:	xchg   BYTE PTR [edx-0x7a],ch
  40b533:	ret    
  40b534:	(bad)  
  40b536:	stc    
  40b537:	push   ebx
  40b538:	dec    ebx
  40b539:	mov    ecx,0xd143ca5f
  40b53e:	sub    ebx,ebx
  40b540:	cdq    
  40b541:	cs pop es
  40b543:	das    
  40b544:	pop    esp
  40b545:	mov    ch,0xce
  40b547:	out    0xa2,eax
  40b549:	lea    ecx,[ecx]
  40b54b:	outs   dx,BYTE PTR ds:[esi]
  40b54c:	mov    bh,0xc5
  40b54e:	adc    edi,DWORD PTR [edi+eiz*1+0x40420d00]
  40b555:	(bad)  
  40b556:	into   
  40b557:	mov    esi,0xa6d0c888
  40b55c:	push   es
  40b55d:	dec    edx
  40b55e:	inc    eax
  40b55f:	adc    al,0x3b
  40b561:	cld    
  40b562:	or     eax,0xb75f657
  40b567:	pop    ebp
  40b568:	dec    ebp
  40b569:	mov    dl,0x84
  40b56b:	mov    ecx,0xc85b099a
  40b570:	stos   DWORD PTR es:[edi],eax
  40b571:	lds    edi,FWORD PTR [eax+0x1436266c]
  40b577:	inc    ecx
  40b578:	(bad)  
  40b579:	or     al,0xb2
  40b57b:	push   ebp
  40b57c:	push   esp
  40b57d:	cwde   
  40b57e:	push   esp
  40b57f:	loopne 0x40b54b
  40b581:	jg     0x40b50c
  40b583:	push   ebx
  40b584:	out    0xab,eax
  40b586:	(bad)  
  40b587:	mov    dh,0x68
  40b589:	(bad)  
  40b58a:	push   edx
  40b58b:	mov    dh,0xa8
  40b58d:	dec    eax
  40b58e:	or     eax,0xc93b8da8
  40b593:	mov    esi,0xaa91ca66
  40b598:	pop    ss
  40b599:	adc    bh,BYTE PTR [ecx]
  40b59b:	inc    ebp
  40b59c:	fstp   QWORD PTR [ebp-0x10774442]
  40b5a2:	es pop ecx
  40b5a4:	cmc    
  40b5a5:	aam    0xe4
  40b5a7:	jbe    0x40b53f
  40b5a9:	push   esi
  40b5aa:	xchg   ecx,eax
  40b5ab:	add    esp,ebx
  40b5ad:	sbb    DWORD PTR [ecx-0x78],esi
  40b5b0:	push   ecx
  40b5b1:	test   BYTE PTR [edi],al
  40b5b3:	adc    esp,DWORD PTR [ebp+edi*1-0x10]
  40b5b7:	and    eax,0x559c14fb
  40b5bc:	outs   dx,DWORD PTR ds:[esi]
  40b5bd:	arpl   ax,di
  40b5bf:	push   ebp
  40b5c0:	enter  0xfd94,0xcf
  40b5c4:	fild   WORD PTR ds:0xb23fe4d8
  40b5ca:	pop    esp
  40b5cb:	leave  
  40b5cc:	mov    ecx,0x92cd100b
  40b5d1:	xor    al,0xf0
  40b5d3:	je     0x40b5b8
  40b5d5:	push   ss
  40b5d6:	shl    DWORD PTR [edi],0x9d
  40b5d9:	rcl    BYTE PTR [ecx+edx*1],0x1d
  40b5dd:	cwde   
  40b5de:	or     BYTE PTR [edi-0x6f81e75a],dh
  40b5e4:	dec    edx
  40b5e5:	neg    DWORD PTR [esi+0x5a]
  40b5e8:	(bad)  [edi-0x70]
  40b5eb:	jae    0x40b5c8
  40b5ed:	retf   
  40b5ee:	outs   dx,DWORD PTR ds:[esi]
  40b5ef:	cs repz call 0x5e26775a
  40b5f6:	mov    esi,DWORD PTR [ebx-0x4222c1ce]
  40b5fc:	adc    DWORD PTR [esi],ecx
  40b5fe:	mov    WORD PTR [edi-0x7],gs
  40b601:	inc    ebx
  40b602:	and    edx,DWORD PTR [esi+0x5f]
  40b605:	imul   esi,DWORD PTR [esi],0xffffffd3
  40b608:	sar    BYTE PTR [esi-0x21],cl
  40b60b:	mov    es,WORD PTR [ebx]
  40b60d:	dec    ecx
  40b60e:	pop    esi
  40b60f:	ficomp DWORD PTR [edi-0x2b28bf4d]
  40b615:	mov    ebp,0xc644de2b
  40b61a:	and    esp,DWORD PTR ds:0x782163b0
  40b620:	push   ecx
  40b621:	test   esi,ebp
  40b623:	xor    al,0xaf
  40b625:	sub    DWORD PTR [eax-0x5f],esi
  40b628:	mov    ecx,DWORD PTR [eax+0x26]
  40b62b:	ins    DWORD PTR es:[edi],dx
  40b62c:	xor    BYTE PTR [esi+esi*8],ch
  40b62f:	je     0x40b64a
  40b631:	std    
  40b632:	dec    ebp
  40b633:	cwde   
  40b634:	das    
  40b635:	and    DWORD PTR [ecx+0x5e69e844],0xb5ee93fd
  40b63f:	outs   dx,DWORD PTR ds:[esi]
  40b640:	lock add BYTE PTR [edx-0x20],dl
  40b644:	leavew 
  40b646:	ret    0x572e
  40b649:	pusha  
  40b64a:	shr    bl,1
  40b64c:	adc    edx,esp
  40b64e:	cmp    dl,dl
  40b650:	call   0x9a7f50e2
  40b655:	cmp    BYTE PTR [edi+0x45f14983],0x37
  40b65c:	retf   0xb59
  40b65f:	test   DWORD PTR [ebx-0x47],eax
  40b662:	mov    al,0xc
  40b664:	inc    ebx
  40b665:	mov    esi,0xb31802e5
  40b66a:	out    dx,al
  40b66b:	xor    eax,0xc9596f74
  40b670:	rcr    DWORD PTR [edi],0xb0
  40b673:	clc    
  40b674:	lods   al,BYTE PTR ds:[esi]
  40b675:	mov    BYTE PTR [ebx+edi*1+0x7e],bl
  40b679:	loop   0x40b685
  40b67b:	repnz mov eax,ds:0xe97801bf
  40b681:	loope  0x40b693
  40b683:	jmp    0xac87:0x176d3fa1
  40b68a:	dec    ecx
  40b68b:	rol    DWORD PTR ds:0x66faac36,cl
  40b691:	(bad)  [ebx-0xb80e701]
  40b697:	aas    
  40b698:	add    al,0x65
  40b69a:	cmp    al,0xd
  40b69c:	imul   esp,ebx,0xb49aff1b
  40b6a2:	call   0x3b0d3be6
  40b6a7:	retf   0xa691
  40b6aa:	test   BYTE PTR [ecx-0x5fb7b4dc],ch
  40b6b0:	and    al,0xa6
  40b6b2:	test   DWORD PTR [ebx],ebx
  40b6b4:	push   ds
  40b6b5:	push   esi
  40b6b6:	ja     0x40b676
  40b6b8:	dec    eax
  40b6b9:	mov    cl,0xa2
  40b6bb:	mov    dl,0x61
  40b6bd:	pop    es
  40b6be:	lds    esi,FWORD PTR [edi-0x47291ae7]
  40b6c4:	nop
  40b6c5:	cdq    
  40b6c6:	mov    eax,ds:0x70ddb05
  40b6cb:	rcl    DWORD PTR [edx],1
  40b6cd:	and    DWORD PTR [ecx-0x1e],ebp
  40b6d0:	push   ebx
  40b6d2:	add    BYTE PTR [edx],bh
  40b6d4:	aad    0x5e
  40b6d6:	pop    esp
  40b6d7:	pushf  
  40b6d8:	mov    ecx,0x5e495fba
  40b6dd:	sti    
  40b6de:	mov    DWORD PTR [esp+eiz*4-0x37348b6a],0x863fc00c
  40b6e9:	and    dl,BYTE PTR [ecx-0x64be82d4]
  40b6ef:	hlt    
  40b6f0:	pop    ebx
  40b6f1:	lahf   
  40b6f2:	icebp  
  40b6f3:	xchg   ebx,eax
  40b6f4:	into   
  40b6f5:	out    dx,al
  40b6f6:	push   esp
  40b6f7:	es in  al,0x3f
  40b6fa:	hlt    
  40b6fb:	adc    esi,edx
  40b6fd:	cmp    al,0xec
  40b6ff:	es cmp dh,BYTE PTR gs:[ecx+0x3d]
  40b704:	dec    ebx
  40b705:	cwde   
  40b706:	jge    0x40b6f6
  40b708:	stos   BYTE PTR es:[edi],al
  40b709:	cdq    
  40b70a:	pushf  
  40b70b:	push   es
  40b70c:	mov    al,ds:0x9c5194b9
  40b711:	loope  0x40b6cf
  40b713:	btr    DWORD PTR [edx-0x70e74f93],ebp
  40b71a:	stos   DWORD PTR es:[edi],eax
  40b71b:	fcmove st,st(1)
  40b71d:	out    dx,eax
  40b71e:	clc    
  40b71f:	jo     0x40b6c1
  40b721:	dec    edx
  40b722:	cmp    BYTE PTR [edi+0x21],dh
  40b725:	xchg   BYTE PTR [ebx+0x6e],al
  40b728:	(bad)
  40b72b:	fld    st(4)
  40b72d:	mov    esi,0x71fb8e17
  40b732:	lods   al,BYTE PTR ds:[esi]
  40b733:	jb     0x40b73e
  40b735:	sahf   
  40b736:	iret   
  40b737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b738:	adc    ch,dh
  40b73a:	int3   
  40b73b:	add    eax,0x4b9006a6
  40b740:	adc    eax,0x97829d0a
  40b745:	fnstcw WORD PTR [esi-0x3d579072]
  40b74b:	sbb    BYTE PTR [ebp+0x2ef5df10],dl
  40b751:	xchg   edx,eax
  40b752:	xchg   dl,cl
  40b754:	xlat   BYTE PTR ds:[ebx]
  40b755:	cmp    dh,BYTE PTR [edx]
  40b757:	addr16 repz test ebp,ecx
  40b75b:	cs aam 0x3d
  40b75e:	ret    0x37ce
  40b761:	push   0x5
  40b763:	mov    eax,ds:0xf6cc9b48
  40b768:	sub    al,0x3c
  40b76a:	inc    eax
  40b76b:	dec    esp
  40b76c:	repz push DWORD PTR [edx+eax*8-0x75ad04ef]
  40b774:	fisub  DWORD PTR [edi+0x63ae2ab3]
  40b77a:	or     dh,BYTE PTR [ebp-0x66]
  40b77d:	adc    ebx,DWORD PTR [ebx-0x6618a129]
  40b783:	jmp    0x40b70c
  40b785:	and    ch,BYTE PTR [ecx]
  40b787:	das    
  40b788:	jbe    0x40b7a6
  40b78a:	add    bl,BYTE PTR [ebp+0x8]
  40b78d:	and    edx,edi
  40b78f:	aaa    
  40b790:	mov    al,ds:0x61e77a4d
  40b795:	mov    eax,0x9f906a53
  40b79a:	out    dx,al
  40b79b:	(bad)  
  40b79c:	xchg   esi,eax
  40b79d:	mov    eax,0x49d2a1ad
  40b7a2:	imul   esp,DWORD PTR [esi+0x51c5801c],0xf8e748e0
  40b7ac:	loope  0x40b7c4
  40b7ae:	xchg   BYTE PTR [eax+0x5d],ah
  40b7b1:	ins    BYTE PTR es:[edi],dx
  40b7b2:	pause  
  40b7b4:	cmp    DWORD PTR [eax-0x31],ebp
  40b7b7:	or     eax,DWORD PTR [ebx+0x76]
  40b7ba:	in     eax,dx
  40b7bb:	add    dl,BYTE PTR [ecx+0x16209a84]
  40b7c1:	adc    dh,BYTE PTR [ebx]
  40b7c3:	scas   al,BYTE PTR es:[edi]
  40b7c4:	sub    DWORD PTR [ebp+0x1783fb75],ebx
  40b7ca:	lock mov edi,0x6c651cb9
  40b7d0:	dec    eax
  40b7d1:	ror    DWORD PTR [esi],0xbb
  40b7d4:	cmp    BYTE PTR [esp+eiz*4+0x2cfe8146],bh
  40b7db:	imul   ecx,DWORD PTR [ebp+0x3c],0x5181f34d
  40b7e2:	shl    ah,cl
  40b7e4:	push   0x70
  40b7e6:	inc    ecx
  40b7e7:	cwde   
  40b7e8:	test   eax,0x2cca4e78
  40b7ed:	ins    BYTE PTR es:[edi],dx
  40b7ee:	stos   BYTE PTR es:[edi],al
  40b7ef:	jp     0x40b78a
  40b7f1:	(bad)  
  40b7f2:	mov    edi,0xfa6aa8f2
  40b7f7:	fs mov cl,0x6f
  40b7fa:	dec    ecx
  40b7fb:	xchg   edi,eax
  40b7fc:	je     0x40b7c4
  40b7fe:	scas   al,BYTE PTR es:[edi]
  40b7ff:	(bad)  
  40b800:	pop    es
  40b801:	push   eax
  40b802:	ror    DWORD PTR fs:[esi-0x6b7100f9],0x47
  40b80a:	aad    0x15
  40b80c:	ror    BYTE PTR [ebp-0x3a],cl
  40b80f:	frstor [ebx+0x2bd1673]
  40b815:	cmp    eax,0x504b29fa
  40b81a:	inc    ebp
  40b81b:	and    BYTE PTR [ecx+0x7f],al
  40b81e:	mov    cl,0xb9
  40b820:	(bad)  
  40b821:	idiv   DWORD PTR [ebp+0x45fd8f40]
  40b827:	add    DWORD PTR [ecx+0xb],edx
  40b82a:	xchg   edx,eax
  40b82b:	pop    ebx
  40b82c:	dec    esi
  40b82d:	jnp    0x40b825
  40b82f:	mov    BYTE PTR [edi],al
  40b831:	not    DWORD PTR [edi-0x7c]
  40b834:	test   al,bl
  40b836:	aad    0x8c
  40b838:	xor    BYTE PTR [edi-0xc635a05],bl
  40b83e:	mov    eax,ds:0x3727ece
  40b843:	or     DWORD PTR [ebx+ebx*8+0x32b3457a],0x35bde1bd
  40b84e:	xor    cl,BYTE PTR [esi-0x24]
  40b851:	xor    DWORD PTR [edx-0x62635519],edx
  40b857:	fdiv   st,st(4)
  40b859:	(bad)  
  40b85a:	lods   al,BYTE PTR ds:[esi]
  40b85b:	(bad)  
  40b85d:	dec    eax
  40b85e:	jl     0x40b894
  40b860:	mov    esi,0x1cf2f31f
  40b865:	lods   eax,DWORD PTR ds:[esi]
  40b866:	adc    BYTE PTR [esi+eiz*1+0x0],cl
  40b86a:	sub    eax,0x86e377dc
  40b86f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b870:	xchg   edx,eax
  40b871:	adc    BYTE PTR [edi],dh
  40b873:	out    0xc0,eax
  40b875:	cmp    dh,BYTE PTR [edi+0x29]
  40b878:	xchg   ebx,eax
  40b879:	lea    esi,gs:[ebp-0x234bb335]
  40b880:	xchg   edi,eax
  40b881:	mov    bl,0xb5
  40b883:	ret    0x58b8
  40b886:	dec    eax
  40b887:	pop    DWORD PTR [ebp-0x240559a7]
  40b88d:	ds push es
  40b88f:	bound  eax,QWORD PTR [edi+ebx*1+0x6b]
  40b893:	cld    
  40b894:	dec    edx
  40b895:	iret   
  40b896:	repnz and BYTE PTR [eax-0xe],0xa7
  40b89b:	xchg   ecx,eax
  40b89c:	or     DWORD PTR [edx+0x613735e6],esi
  40b8a2:	push   cs
  40b8a3:	ror    DWORD PTR [edi+ebx*2],0x74
  40b8a7:	out    0xab,al
  40b8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8aa:	sub    dl,BYTE PTR [ecx+0x3b]
  40b8ad:	sar    BYTE PTR [ebx],1
  40b8af:	xchg   esp,eax
  40b8b0:	aam    0x33
  40b8b2:	xchg   ebx,eax
  40b8b3:	fisttp WORD PTR [ebx+edi*1]
  40b8b6:	or     eax,edi
  40b8b8:	xor    dl,al
  40b8ba:	xchg   DWORD PTR [ecx-0x9b5704b],eax
  40b8c0:	dec    esp
  40b8c1:	idiv   esi
  40b8c3:	aam    0xc9
  40b8c5:	pop    esi
  40b8c6:	mov    ds:0xcb3f6aaa,eax
  40b8cb:	leave  
  40b8cc:	fst    DWORD PTR [eax+0x70]
  40b8cf:	sbb    al,0x8
  40b8d1:	add    DWORD PTR [ecx+0x51],ebx
  40b8d4:	scas   eax,DWORD PTR es:[edi]
  40b8d5:	push   ebp
  40b8d6:	out    dx,eax
  40b8d7:	push   edx
  40b8d8:	rcl    BYTE PTR [edi-0x1440c26d],cl
  40b8de:	and    esi,DWORD PTR ds:0xd60d0c3
  40b8e4:	dec    ecx
  40b8e5:	mov    ecx,0x3033c120
  40b8ea:	loope  0x40b938
  40b8ec:	inc    esp
  40b8ed:	add    eax,0xba300ffe
  40b8f2:	ret    
  40b8f3:	pop    ss
  40b8f4:	inc    edx
  40b8f5:	daa    
  40b8f6:	nop
  40b8f7:	shr    DWORD PTR [eax],cl
  40b8f9:	or     DWORD PTR [edx-0x6b],ebx
  40b8fc:	or     esi,ebx
  40b8fe:	push   ss
  40b8ff:	ins    BYTE PTR es:[edi],dx
  40b900:	pop    ebx
  40b901:	out    dx,al
  40b902:	pop    esi
  40b903:	jp     0x40b8f9
  40b905:	pop    DWORD PTR [ebx+0x17c7a8e0]
  40b90b:	mov    al,ds:0xd95a6aef
  40b910:	push   esi
  40b911:	and    DWORD PTR [ecx-0x61],edx
  40b914:	paddusb mm7,QWORD PTR [eax+0x2be668c5]
  40b91b:	pop    esp
  40b91c:	xchg   ebx,eax
  40b91d:	stc    
  40b91e:	fist   WORD PTR [ebx+0x58d28697]
  40b924:	mov    DWORD PTR [edx-0x7b36cbba],ebp
  40b92a:	lahf   
  40b92b:	or     al,0xaa
  40b92d:	adc    BYTE PTR es:0x7208c676,cl
  40b934:	mov    bl,0xc3
  40b936:	fdivr  QWORD PTR [edx-0x69]
  40b939:	add    BYTE PTR [ebx-0x4f879cb],cl
  40b93f:	leave  
  40b940:	in     al,0xf5
  40b942:	loop   0x40b980
  40b944:	(bad)  
  40b945:	xor    ebx,edi
  40b947:	xor    al,BYTE PTR [edx-0x7e81e849]
  40b94d:	add    DWORD PTR [eax],eax
  40b94f:	(bad)  
  40b950:	(bad)  
  40b951:	je     0x40b91e
  40b953:	jecxz  0x40b90e
  40b955:	jle    0x40b9b3
  40b957:	clc    
  40b958:	js     0x40b8ea
  40b95a:	mov    cl,0xf9
  40b95c:	ror    BYTE PTR [esi+0xc5f8b6e],1
  40b962:	aaa    
  40b963:	push   ds
  40b964:	pmulhuw mm7,QWORD PTR [eax-0x4c]
  40b968:	jo     0x40b9bd
  40b96a:	gs push cs
  40b96c:	fbld   TBYTE PTR [edx+0x5ba0ae54]
  40b972:	mov    ch,0xb5
  40b974:	sar    BYTE PTR [ebx],1
  40b976:	scas   eax,DWORD PTR es:[edi]
  40b977:	neg    ecx
  40b979:	xor    ch,BYTE PTR [edi+eax*4+0x2f]
  40b97d:	call   0xa175c1cc
  40b982:	fdiv   DWORD PTR [ecx-0x6a78eb49]
  40b988:	mov    ebx,0xe73a13ae
  40b98d:	leave  
  40b98e:	xor    esi,DWORD PTR [edx+0x65]
  40b991:	in     eax,0xe7
  40b993:	dec    edx
  40b994:	pop    esi
  40b995:	xchg   ebp,eax
  40b996:	les    ebx,FWORD PTR es:[eax]
  40b999:	pop    edx
  40b99a:	adc    DWORD PTR [ebp+0x736c1ba0],esp
  40b9a0:	pop    esi
  40b9a1:	adc    esp,eax
  40b9a3:	sbb    DWORD PTR [ebx],esi
  40b9a5:	jmp    0x8961:0x104aa1ab
  40b9ac:	mov    ebp,0xab0330b4
  40b9b1:	fnstenv [ecx+0x2fa983b1]
  40b9b7:	and    eax,0x49f4dfc1
  40b9bc:	hlt    
  40b9bd:	out    0x1c,eax
  40b9bf:	pop    ecx
  40b9c0:	jg     0x40ba33
  40b9c2:	mov    bh,0xfd
  40b9c4:	push   es
  40b9c5:	or     eax,0xab3b285d
  40b9ca:	pop    esp
  40b9cb:	mov    dh,0xbe
  40b9cd:	adc    dh,cl
  40b9cf:	sbb    edx,esi
  40b9d1:	repnz mov ecx,0x4ed06138
  40b9d7:	lds    edi,FWORD PTR [edx+0x8]
  40b9da:	fadd   QWORD PTR [esi-0x51c57cb4]
  40b9e0:	mov    ecx,0x45a4e95a
  40b9e5:	stos   BYTE PTR es:[edi],al
  40b9e6:	push   cs
  40b9e7:	scas   al,BYTE PTR es:[edi]
  40b9e8:	dec    ebx
  40b9e9:	jecxz  0x40ba01
  40b9eb:	push   ss
  40b9ec:	ins    BYTE PTR es:[edi],dx
  40b9ed:	adc    dh,BYTE PTR [ebx+0x76]
  40b9f0:	add    cl,BYTE PTR [edx]
  40b9f2:	dec    ecx
  40b9f3:	add    BYTE PTR [ebp-0x1d2df5e1],al
  40b9f9:	loope  0x40ba5c
  40b9fb:	add    al,0xe6
  40b9fd:	dec    esi
  40b9fe:	pushf  
  40b9ff:	xchg   edi,eax
  40ba00:	in     al,dx
  40ba01:	jae    0x40b989
  40ba03:	loop   0x40b9f8
  40ba05:	pop    ebx
  40ba06:	and    eax,0x56f1dc01
  40ba0b:	loope  0x40ba7c
  40ba0d:	(bad)  
  40ba0e:	push   esp
  40ba0f:	add    cl,BYTE PTR ds:0x6781f9e7
  40ba15:	test   DWORD PTR [ebx-0x73],esp
  40ba18:	jmp    0x40ba1a
  40ba1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba1b:	sbb    DWORD PTR ds:0xa9679063,ecx
  40ba21:	jl     0x40ba85
  40ba23:	lock inc ebp
  40ba25:	ret    0x6a5b
  40ba28:	mov    ds:0x6c9cc961,al
  40ba2d:	int3   
  40ba2e:	loopne 0x40ba52
  40ba30:	shl    ebp,cl
  40ba32:	test   BYTE PTR [ebp-0x3ae5385a],dl
  40ba38:	pop    esp
  40ba39:	ret    
  40ba3a:	dec    ebp
  40ba3b:	mov    ecx,0x8a73a68
  40ba40:	xchg   ebx,eax
  40ba41:	mov    bl,BYTE PTR [edi-0x739756b6]
  40ba47:	push   ds
  40ba48:	outs   dx,DWORD PTR ds:[esi]
  40ba49:	adc    eax,0xa67ef6ed
  40ba4e:	sbb    BYTE PTR [ecx],dh
  40ba50:	push   0xbc9aad00
  40ba55:	outs   dx,BYTE PTR ds:[esi]
  40ba56:	hlt    
  40ba57:	lods   eax,DWORD PTR ds:[esi]
  40ba58:	int3   
  40ba59:	cdq    
  40ba5a:	push   ebp
  40ba5b:	je     0x40baa3
  40ba5d:	iret   
  40ba5e:	sub    eax,0xc2f9d6a4
  40ba63:	and    al,0xca
  40ba65:	imul   edi,DWORD PTR [esi+0x2d],0x415ba15c
  40ba6c:	sti    
  40ba6d:	dec    edi
  40ba6e:	jmp    0xbfaedcb7
  40ba73:	enter  0x308a,0x13
  40ba77:	mov    esi,DWORD PTR [eax-0x35ee9187]
  40ba7d:	daa    
  40ba7e:	(bad)  
  40ba7f:	bound  eax,QWORD PTR fs:[edx]
  40ba82:	sub    ebp,esi
  40ba84:	mov    esp,0x6306f45c
  40ba89:	mov    ch,0xb5
  40ba8b:	out    dx,al
  40ba8c:	pop    edi
  40ba8d:	inc    edi
  40ba8e:	pusha  
  40ba8f:	imul   BYTE PTR [eax-0x69502aa3]
  40ba95:	jae    0x40ba44
  40ba97:	xchg   edx,esp
  40ba99:	arpl   WORD PTR [ebp-0x1dbfa2b2],dx
  40ba9f:	ret    
  40baa0:	(bad)  [ecx]
  40baa2:	jecxz  0x40bb13
  40baa4:	outs   dx,BYTE PTR ds:[esi]
  40baa5:	sbb    al,0x7d
  40baa7:	or     DWORD PTR [edx+0x3b],ecx
  40baaa:	int3   
  40baab:	cmp    al,BYTE PTR [eax+0x4c3a1f7c]
  40bab1:	mov    edx,0xbf82c40
  40bab6:	ds (bad) 
  40bab8:	push   eax
  40bab9:	rdtsc  
  40babb:	stos   BYTE PTR es:[edi],al
  40babc:	and    al,0x77
  40babe:	pushf  
  40babf:	mov    ds:0xc8dc146d,eax
  40bac4:	loopne 0x40ba5b
  40bac6:	mov    eax,0x9ef40aa0
  40bacb:	mov    ss,WORD PTR [edi]
  40bacd:	or     BYTE PTR [esi+0x45],ch
  40bad0:	pop    edi
  40bad1:	cmp    BYTE PTR [ebx],ch
  40bad3:	sahf   
  40bad4:	out    0xec,al
  40bad6:	test   edx,eax
  40bad8:	cmp    al,0xd8
  40bada:	loope  0x40baba
  40badc:	mov    ebx,0x941a9746
  40bae1:	inc    ebx
  40bae2:	or     eax,DWORD PTR [ebp+0x4d873085]
  40bae8:	inc    ebx
  40bae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baea:	in     eax,dx
  40baeb:	hlt    
  40baec:	je     0x40bae7
  40baee:	cmp    DWORD PTR [esi],edi
  40baf0:	inc    eax
  40baf1:	outs   dx,BYTE PTR ds:[esi]
  40baf2:	mov    edx,0x748f6546
  40baf7:	ret    
  40baf8:	(bad)
  40bafc:	repnz cmp BYTE PTR [ecx+0x17],ah
  40bb00:	cmp    BYTE PTR [edx],bh
  40bb02:	xor    dh,al
  40bb04:	jp     0x40baac
  40bb06:	adc    al,0x86
  40bb08:	ret    
  40bb09:	enter  0x6134,0xc9
  40bb0d:	(bad)  
  40bb0e:	or     esp,DWORD PTR [esi-0x5e4219ec]
  40bb14:	and    dh,cl
  40bb16:	push   eax
  40bb17:	or     eax,0x6519e2aa
  40bb1c:	cmc    
  40bb1d:	push   0x5a
  40bb1f:	mov    esp,0x1166bd60
  40bb24:	scas   eax,DWORD PTR es:[edi]
  40bb25:	ror    DWORD PTR [ebp+ebx*4+0x13],0xc2
  40bb2a:	jns    0x40bb40
  40bb2c:	inc    edi
  40bb2d:	fs mov esi,0x4c4ed0d4
  40bb33:	aad    0x63
  40bb35:	adc    dl,dh
  40bb37:	sbb    bh,bh
  40bb39:	ins    BYTE PTR es:[edi],dx
  40bb3a:	aaa    
  40bb3b:	mov    ebp,0x76c46053
  40bb40:	aad    0xa0
  40bb42:	hlt    
  40bb43:	dec    ecx
  40bb44:	stos   BYTE PTR es:[edi],al
  40bb45:	outs   dx,DWORD PTR ds:[esi]
  40bb46:	mov    WORD PTR [edx+0x724e32bc],fs
  40bb4c:	adc    eax,0x83e26108
  40bb51:	jne    0x40bb9c
  40bb53:	clc    
  40bb54:	rol    esi,0x53
  40bb57:	cli    
  40bb58:	repz imul esp,DWORD PTR [ebp+0x1219ac5a],0x23b8e6bc
  40bb63:	aad    0x59
  40bb65:	adc    BYTE PTR [ebp+0x9],0xb8
  40bb69:	inc    ebx
  40bb6a:	jmp    0x40bba4
  40bb6c:	shr    BYTE PTR [ebx],0xe
  40bb6f:	(bad)
  40bb73:	iret   
  40bb74:	repnz adc al,0x51
  40bb77:	retf   
  40bb78:	aam    0xf1
  40bb7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb7b:	xchg   ebx,eax
  40bb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb7d:	call   0x4ad51399
  40bb82:	dec    edi
  40bb83:	pop    ss
  40bb84:	sar    BYTE PTR [edx],cl
  40bb86:	cmp    ebx,edi
  40bb88:	jns    0x40bbb2
  40bb8a:	out    0x82,eax
  40bb8c:	cmp    eax,0x1985e543
  40bb91:	rcr    DWORD PTR [ecx+0x14],0xf1
  40bb95:	pusha  
  40bb96:	mov    DWORD PTR [eax-0xf],edi
  40bb99:	dec    eax
  40bb9a:	sub    ax,0xf32d
  40bb9e:	jmp    0x40bc16
  40bba0:	push   esp
  40bba1:	pop    edi
  40bba2:	test   DWORD PTR [esi-0x61],0x8d66f50c
  40bba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbaa:	ds jl  0x40bc0f
  40bbad:	or     DWORD PTR [ebx+eax*2],ebp
  40bbb0:	loopne 0x40bb34
  40bbb2:	imul   ebp,edi,0x5ff8de79
  40bbb8:	cmc    
  40bbb9:	jl     0x40bc29
  40bbbb:	fwait
  40bbbc:	out    dx,al
  40bbbd:	push   ebx
  40bbbe:	or     cl,al
  40bbc0:	or     BYTE PTR [esi+eiz*8-0x694d1dec],0x9b
  40bbc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbc9:	pop    edx
  40bbca:	stc    
  40bbcb:	or     bl,BYTE PTR [ebx-0xf]
  40bbce:	dec    esp
  40bbcf:	add    al,0x6
  40bbd1:	push   ebx
  40bbd2:	pop    ecx
  40bbd3:	fs or  eax,ecx
  40bbd6:	xchg   ecx,eax
  40bbd7:	pop    ebp
  40bbd8:	scas   eax,DWORD PTR es:[edi]
  40bbd9:	pop    esi
  40bbda:	dec    ecx
  40bbdb:	out    dx,eax
  40bbdc:	bound  ebx,QWORD PTR [esi]
  40bbde:	popf   
  40bbdf:	fld    TBYTE PTR [edi+0x1817cb71]
  40bbe5:	cmp    ebx,DWORD PTR [edx+eiz*2+0x717ee8d8]
  40bbec:	gs div esi
  40bbef:	fbstp  TBYTE PTR [edx+0xc]
  40bbf2:	pop    ecx
  40bbf3:	xor    esp,edx
  40bbf5:	neg    DWORD PTR [eax+0x20]
  40bbf8:	call   0x32f2:0x1da261af
  40bbff:	mov    al,0xa
  40bc01:	rol    DWORD PTR [eax-0x29],cl
  40bc04:	push   esi
  40bc05:	jmp    0x26a4c76b
  40bc0a:	jo     0x40bc7c
  40bc0c:	dec    esp
  40bc0d:	mov    dl,0x7d
  40bc0f:	add    bh,BYTE PTR [ebx+0x7b]
  40bc12:	(bad)  
  40bc13:	hlt    
  40bc14:	sahf   
  40bc15:	idiv   DWORD PTR [ecx]
  40bc17:	loope  0x40bc97
  40bc19:	sub    BYTE PTR [edx+0x5e889a55],0xc6
  40bc20:	xchg   ecx,eax
  40bc21:	pop    ebx
  40bc22:	stc    
  40bc23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc24:	mov    edx,ecx
  40bc26:	adc    al,0x9f
  40bc28:	lods   al,BYTE PTR ds:[esi]
  40bc29:	sbb    al,0xe
  40bc2b:	xchg   BYTE PTR [edx],bh
  40bc2d:	cmp    DWORD PTR [esi-0x5586dfdb],0x2874d4ad
  40bc37:	or     bh,0xc7
  40bc3a:	fst    QWORD PTR [esi+eax*4-0x5deb940f]
  40bc41:	adc    BYTE PTR [eax-0x6f],ch
  40bc44:	cmp    al,0xd0
  40bc46:	sbb    edi,DWORD PTR [edx-0x5b]
  40bc49:	cmp    al,0xdb
  40bc4b:	add    DWORD PTR [ebp-0x5c275890],esi
  40bc51:	push   edx
  40bc52:	hlt    
  40bc53:	retf   0xf73b
  40bc56:	sbb    dl,BYTE PTR [ecx+0x34]
  40bc59:	push   ss
  40bc5a:	ficom  DWORD PTR [eax]
  40bc5c:	fs pop ebp
  40bc5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc5f:	in     al,dx
  40bc60:	mov    ch,0x20
  40bc62:	lahf   
  40bc63:	push   ebp
  40bc64:	lahf   
  40bc65:	ss sub al,0x3f
  40bc68:	leave  
  40bc69:	adc    esp,DWORD PTR [ebx+edx*1]
  40bc6c:	xchg   dl,bl
  40bc6e:	mov    ah,BYTE PTR [eax-0x623e17fc]
  40bc74:	in     eax,dx
  40bc75:	in     eax,0x1c
  40bc77:	add    DWORD PTR [eax+0x16ba0747],edi
  40bc7d:	jns    0x40bcd8
  40bc7f:	in     eax,0x22
  40bc81:	mov    BYTE PTR [esi+0x6781ed42],ah
  40bc87:	mov    ebx,0x9465fc80
  40bc8c:	retf   
  40bc8d:	shl    BYTE PTR [esi+0x50ff57c3],cl
  40bc93:	dec    esp
  40bc94:	scas   al,BYTE PTR es:[edi]
  40bc95:	xchg   ecx,eax
  40bc96:	xchg   DWORD PTR [ebp+0x7b],ebp
  40bc99:	(bad)  
  40bc9a:	xchg   ebp,eax
  40bc9b:	and    al,0xd
  40bc9d:	in     eax,dx
  40bc9e:	and    BYTE PTR [ebp+0x1d],cl
  40bca1:	clc    
  40bca2:	xlat   BYTE PTR ds:[ebx]
  40bca3:	jo     0x40bcb0
  40bca5:	push   ebx
  40bca6:	stos   DWORD PTR es:[edi],eax
  40bca7:	inc    ecx
  40bca8:	pop    ecx
  40bca9:	loope  0x40bcb5
  40bcab:	in     eax,0x32
  40bcad:	rcl    cl,1
  40bcaf:	test   al,0x6f
  40bcb1:	xor    BYTE PTR [esi+0x1460fe0a],dh
  40bcb7:	fcom   QWORD PTR [eax-0x604f6968]
  40bcbd:	popf   
  40bcbe:	pop    edx
  40bcbf:	pop    edx
  40bcc0:	pop    eax
  40bcc1:	xchg   ebx,eax
  40bcc2:	push   ecx
  40bcc3:	(bad)  
  40bcc5:	shr    DWORD PTR [edx],cl
  40bcc7:	cli    
  40bcc8:	xor    eax,0x82ba20c3
  40bccd:	cmp    bh,dl
  40bccf:	outs   dx,BYTE PTR ds:[esi]
  40bcd0:	jbe    0x40bd39
  40bcd2:	push   esi
  40bcd3:	inc    edx
  40bcd4:	cmp    edx,DWORD PTR [ecx+0x8]
  40bcd7:	pop    eax
  40bcd8:	push   ds
  40bcd9:	xchg   ecx,eax
  40bcda:	cmp    al,0xcc
  40bcdc:	mov    cl,0x6
  40bcde:	push   edx
  40bcdf:	xor    ebp,DWORD PTR [esi]
  40bce1:	mov    al,0xe0
  40bce3:	and    esp,DWORD PTR [edi-0x1a3532e6]
  40bce9:	daa    
  40bcea:	std    
  40bceb:	pop    ds
  40bcec:	fistp  WORD PTR [edx+ecx*1-0x561eccd2]
  40bcf3:	cmp    bh,bl
  40bcf5:	xchg   esp,eax
  40bcf6:	xor    eax,0x466e63b3
  40bcfb:	fistp  WORD PTR [esi+0x51]
  40bcfe:	or     DWORD PTR [edi],0x102a2cce
  40bd04:	les    esp,FWORD PTR [ebx]
  40bd06:	pushf  
  40bd07:	cmp    ebx,ebx
  40bd09:	inc    eax
  40bd0a:	xor    BYTE PTR [ecx],dh
  40bd0c:	in     al,dx
  40bd0d:	mov    al,0x8c
  40bd0f:	sbb    ch,BYTE PTR [eax-0x6d3a7d8a]
  40bd15:	cmp    BYTE PTR [edx-0x30ca90bf],cl
  40bd1b:	inc    esp
  40bd1c:	ins    BYTE PTR es:[edi],dx
  40bd1d:	jle    0x40bcab
  40bd1f:	ror    DWORD PTR [ebx+edx*1],cl
  40bd22:	add    BYTE PTR [eax],0x5f
  40bd25:	sti    
  40bd26:	imul   edx,DWORD PTR [ecx*8+0x2290a06a],0xfffffffd
  40bd2e:	adc    al,0xf4
  40bd30:	fild   WORD PTR [edx+0x14c7ca05]
  40bd36:	cmc    
  40bd37:	sbb    eax,0x54b9a539
  40bd3c:	icebp  
  40bd3d:	mov    WORD PTR [edx-0x66],?
  40bd40:	hlt    
  40bd41:	sbb    DWORD PTR [ecx+0xb933833],edi
  40bd47:	add    cl,BYTE PTR [edx-0x73]
  40bd4a:	push   esp
  40bd4b:	lods   al,BYTE PTR ds:[esi]
  40bd4c:	jg     0x40bdb9
  40bd4e:	loopne 0x40bcfb
  40bd50:	sub    edi,DWORD PTR [edi+0x13]
  40bd53:	dec    edi
  40bd54:	sbb    ah,BYTE PTR [ecx-0x6]
  40bd57:	xchg   ecx,eax
  40bd58:	mov    eax,ds
  40bd5a:	inc    ebp
  40bd5b:	pop    edx
  40bd5c:	xchg   ebx,eax
  40bd5d:	lods   eax,DWORD PTR ds:[esi]
  40bd5e:	ret    0x1acb
  40bd61:	jns    0x40bd89
  40bd63:	lods   eax,DWORD PTR ds:[esi]
  40bd64:	int3   
  40bd65:	int    0x6a
  40bd67:	dec    ebx
  40bd68:	pushf  
  40bd69:	sti    
  40bd6a:	cli    
  40bd6b:	ror    esi,0x6d
  40bd6e:	in     eax,dx
  40bd6f:	fldcw  WORD PTR ds:0xeee094a1
  40bd75:	mov    esi,DWORD PTR [edx]
  40bd77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd78:	shl    BYTE PTR [edx],0xc9
  40bd7b:	std    
  40bd7c:	xchg   ecx,eax
  40bd7d:	sub    eax,0x5c4ef5b3
  40bd82:	sbb    ebp,DWORD PTR [esp+ecx*1-0x87d9075]
  40bd89:	aam    0xa3
  40bd8b:	mov    DWORD PTR [ebx-0x45573207],eax
  40bd91:	dec    edx
  40bd92:	sbb    bl,BYTE PTR [ebx]
  40bd94:	fwait
  40bd95:	out    0x19,al
  40bd97:	xor    eax,0x318c4622
  40bd9c:	ja     0x40bd2e
  40bd9e:	jmp    0xa04:0x3b337fb7
  40bda5:	mov    ecx,0x52d6b20b
  40bdaa:	dec    eax
  40bdab:	stos   BYTE PTR es:[edi],al
  40bdac:	jnp    0x40be25
  40bdae:	push   ss
  40bdaf:	scas   eax,DWORD PTR es:[edi]
  40bdb0:	ins    DWORD PTR es:[edi],dx
  40bdb1:	in     al,0x94
  40bdb3:	push   edx
  40bdb4:	xor    DWORD PTR [eax+0x38],esi
  40bdb7:	test   al,0xf
  40bdb9:	mov    ecx,DWORD PTR [eax]
  40bdbb:	pop    es
  40bdbc:	and    DWORD PTR [edi-0x77],esi
  40bdbf:	jns    0x40be16
  40bdc1:	call   0x9a1a:0xfa6fe806
  40bdc8:	mov    dl,0x86
  40bdca:	sub    DWORD PTR [edi+0x52],esp
  40bdcd:	mov    cl,ah
  40bdcf:	lods   al,BYTE PTR ds:[esi]
  40bdd0:	jae    0x40be10
  40bdd2:	loopne 0x40bd93
  40bdd4:	out    dx,al
  40bdd5:	mov    bh,0x1e
  40bdd7:	call   0x37514ce2
  40bddc:	jl     0x40be3e
  40bdde:	cli    
  40bddf:	xor    DWORD PTR [eax],edx
  40bde1:	out    0x10,al
  40bde3:	outs   dx,BYTE PTR es:[esi]
  40bde5:	cwde   
  40bde6:	je     0x40be40
  40bde8:	stos   DWORD PTR es:[edi],eax
  40bde9:	aad    0xe7
  40bdeb:	and    DWORD PTR [edi+0x1c],ebp
  40bdee:	nop
  40bdef:	fdivr  QWORD PTR [edx+ecx*4+0x271648c0]
  40bdf6:	gs xor bl,bh
  40bdf9:	xor    cl,ah
  40bdfb:	add    DWORD PTR [eax],0xffffffb8
  40bdfe:	jg     0x40be22
  40be00:	cmc    
  40be01:	pop    edx
  40be02:	cmp    al,0x21
  40be04:	fs jno 0x40be76
  40be07:	loopne 0x40bdc4
  40be09:	fiadd  DWORD PTR [edx-0xb79391]
  40be0f:	fidivr WORD PTR [ebx-0x3f]
  40be12:	xchg   DWORD PTR [eax],edx
  40be14:	jg     0x40be93
  40be16:	jl     0x40be42
  40be18:	stos   DWORD PTR es:[edi],eax
  40be19:	dec    edx
  40be1a:	jmp    edx
  40be1c:	in     al,0xda
  40be1e:	lahf   
  40be1f:	mov    ebp,0x9baeb166
  40be24:	cli    
  40be25:	std    
  40be26:	js     0x40bde4
  40be28:	imul   ebx,DWORD PTR [ecx+0xf3f6bc1],0xffffff80
  40be2f:	jb     0x40be65
  40be31:	mov    ds:0x12b2d50f,eax
  40be36:	mov    cl,0xb5
  40be38:	call   0xd465:0x810e698d
  40be3f:	clc    
  40be40:	adc    DWORD PTR [ecx-0x509ede2f],0xe3fd8125
  40be4a:	xchg   BYTE PTR [ebx],al
  40be4c:	repz xchg esp,eax
  40be4e:	mov    ebx,0xfe761282
  40be53:	out    dx,eax
  40be54:	(bad)  
  40be55:	xchg   edi,eax
  40be56:	xor    BYTE PTR [ebp+0x50eca4f3],0x71
  40be5d:	fucomip st,st(0)
  40be5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be60:	ror    DWORD PTR [edx],0xad
  40be63:	out    dx,eax
  40be64:	pop    es
  40be65:	not    BYTE PTR [edx-0x12]
  40be68:	mov    ah,0xfb
  40be6a:	or     bl,0x8
  40be6d:	(bad)  
  40be6e:	cmp    DWORD PTR [ecx],edi
  40be70:	mov    ebx,0xdb498ba4
  40be75:	fnsave [ebp+0x35]
  40be78:	cld    
  40be79:	clc    
  40be7a:	push   esp
  40be7b:	jle    0x40bec4
  40be7d:	loop   0x40bea4
  40be7f:	punpcklbw mm7,DWORD PTR [eax]
  40be82:	shr    BYTE PTR [esi],0x6d
  40be85:	test   al,0xce
  40be87:	bt     edi,esp
  40be8a:	add    eax,0x597452d8
  40be8f:	outs   dx,DWORD PTR ds:[esi]
  40be90:	daa    
  40be91:	and    DWORD PTR [ebx+ebx*8-0x12c2695d],esp
  40be98:	and    bh,BYTE PTR [eax+0x4]
  40be9b:	dec    edi
  40be9c:	ss ret 0x450a
  40bea0:	mov    ds:0xdebd9e5d,al
  40bea5:	scas   eax,DWORD PTR es:[edi]
  40bea6:	push   cs
  40bea7:	xor    BYTE PTR [esi+edx*4+0x43],0x1
  40beac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bead:	add    ebp,DWORD PTR [eax-0x1948ed6]
  40beb3:	out    dx,al
  40beb4:	pop    ecx
  40beb5:	inc    esi
  40beb6:	mov    edx,0xb6e46762
  40bebb:	mov    bh,0x86
  40bebd:	int    0x69
  40bebf:	mov    ds:0xf398739d,eax
  40bec4:	adc    esi,DWORD PTR [ecx-0x79]
  40bec7:	mov    dh,0x14
  40bec9:	out    0x3f,eax
  40becb:	and    ebx,esi
  40becd:	lahf   
  40bece:	fistp  DWORD PTR [edi+0x69796005]
  40bed4:	xchg   edi,eax
  40bed5:	mov    ds:0xf078a9b3,eax
  40beda:	mov    BYTE PTR ds:0x86af2335,ch
  40bee0:	cmc    
  40bee1:	rol    DWORD PTR [edx],0xcd
  40bee4:	lahf   
  40bee5:	lds    esi,FWORD PTR [ecx]
  40bee7:	mov    ds:0x8b5a9aa4,al
  40beec:	jbe    0x40bf4b
  40beee:	stc    
  40beef:	sti    
  40bef0:	aaa    
  40bef1:	sub    BYTE PTR [esi+0x32bcc5c4],dl
  40bef7:	add    eax,0x740120f5
  40befc:	mov    BYTE PTR [ebx+eiz*8+0x7f],bl
  40bf00:	push   eax
  40bf01:	xlat   BYTE PTR ds:[ebx]
  40bf02:	dec    ebx
  40bf03:	sub    ch,BYTE PTR [edi]
  40bf05:	push   ecx
  40bf06:	retf   
  40bf07:	vmread DWORD PTR [ebx+0x45c2e767],edi
  40bf0e:	jge    0x40befa
  40bf10:	push   edi
  40bf11:	inc    esp
  40bf12:	dec    edx
  40bf13:	repz and esp,DWORD PTR [esi-0x6a7f7c18]
  40bf1a:	paddusw mm3,QWORD PTR [ecx+esi*2+0x28]
  40bf1f:	jbe    0x40bead
  40bf21:	jl     0x40bf1c
  40bf23:	sti    
  40bf24:	call   0xf596:0x56cfce23
  40bf2b:	leave  
  40bf2c:	push   ebp
  40bf2d:	and    al,ah
  40bf2f:	lods   eax,DWORD PTR ds:[esi]
  40bf30:	dec    esi
  40bf31:	loope  0x40bf55
  40bf33:	add    al,0xab
  40bf35:	fisubr WORD PTR [ecx+0x23]
  40bf38:	inc    eax
  40bf39:	xor    esp,DWORD PTR [eax]
  40bf3b:	sbb    al,0x96
  40bf3d:	pop    ebp
  40bf3e:	dec    esi
  40bf3f:	out    dx,al
  40bf40:	pop    esp
  40bf41:	sahf   
  40bf42:	call   0xf1b8:0x37187e19
  40bf49:	inc    esi
  40bf4a:	push   ss
  40bf4b:	inc    ebx
  40bf4c:	in     eax,0xaa
  40bf4e:	call   0x5fad:0x6a3d7d05
  40bf55:	pop    esp
  40bf56:	test   eax,0x8fd75569
  40bf5b:	and    edi,ecx
  40bf5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf5e:	cmp    esi,esi
  40bf60:	inc    ecx
  40bf61:	cwde   
  40bf62:	jmp    0x55c0ff64
  40bf67:	cmp    DWORD PTR [edx-0x3a93cdc8],edx
  40bf6d:	es gs mov edx,0xe6e13cdc
  40bf74:	or     eax,0x71372a41
  40bf79:	dec    esp
  40bf7a:	call   0xa056f6a0
  40bf7f:	add    edi,DWORD PTR [ebx-0x5c]
  40bf82:	std    
  40bf83:	push   ebx
  40bf84:	xchg   ebx,eax
  40bf85:	fild   QWORD PTR [edi+0x10]
  40bf88:	cs pop edx
  40bf8a:	fmul   QWORD PTR [eax]
  40bf8c:	mov    eax,ds:0x4d0d3fe5
  40bf91:	and    eax,DWORD PTR ds:0x2581916c
  40bf97:	adc    ebx,ecx
  40bf99:	out    0x95,eax
  40bf9b:	inc    eax
  40bf9c:	sub    al,0x8c
  40bf9e:	mov    ch,0xb3
  40bfa0:	mov    bh,0x97
  40bfa2:	jp     0x40bf83
  40bfa4:	sub    DWORD PTR [edi+edi*8+0x1f132b41],0xa6887791
  40bfaf:	push   0x2a
  40bfb1:	jp     0x40bfd1
  40bfb3:	shl    DWORD PTR [esp+ebx*1-0x1d],cl
  40bfb7:	ret    0x4439
  40bfba:	xchg   ebx,eax
  40bfbb:	push   es
  40bfbc:	add    eax,0x742094a4
  40bfc1:	pop    edi
  40bfc2:	or     ebx,DWORD PTR [esi+0x31f7cfd6]
  40bfc8:	push   ss
  40bfc9:	out    dx,eax
  40bfca:	inc    ebp
  40bfcb:	arpl   WORD PTR [ecx+0x298dc81c],sp
  40bfd1:	xchg   DWORD PTR [esi],edi
  40bfd3:	out    dx,al
  40bfd4:	ja     0x40c00e
  40bfd6:	and    BYTE PTR [esi+0x29],ch
  40bfd9:	pop    ebx
  40bfda:	mov    ebx,0x7f8087bf
  40bfdf:	xor    BYTE PTR [edi-0x701cc5d7],al
  40bfe5:	sti    
  40bfe6:	add    bl,ch
  40bfe8:	test   edx,esp
  40bfea:	dec    ebp
  40bfeb:	std    
  40bfec:	pop    es
  40bfed:	shr    ch,0xdd
  40bff0:	out    0xc9,al
  40bff2:	push   ss
  40bff3:	(bad)  
  40bff4:	xchg   edi,eax
  40bff5:	adc    eax,0x3a245433
  40bffa:	addr16 sub eax,0x1534f4a4
  40c000:	inc    ecx
  40c001:	inc    eax
  40c002:	and    al,0x83
  40c004:	dec    eax
  40c005:	mov    ebx,esp
  40c007:	mov    ebx,0x4c5c4ed3
  40c00c:	mov    ds:0xecbad295,eax
  40c011:	mov    dl,0x4b
  40c013:	sub    al,0x5c
  40c015:	mov    eax,0x351b8bcc
  40c01a:	das    
  40c01b:	fimul  DWORD PTR [eax-0x7bfd0288]
  40c021:	in     al,0xc2
  40c023:	xchg   ebp,eax
  40c024:	rcl    BYTE PTR [edx-0x73c4a9dd],0x6d
  40c02b:	xor    BYTE PTR [edi+edi*1],bh
  40c02e:	lahf   
  40c02f:	fs aam 0x99
  40c032:	fwait
  40c033:	loope  0x40bfde
  40c035:	stos   BYTE PTR es:[edi],al
  40c036:	pop    es
  40c037:	(bad)
  40c03a:	sub    BYTE PTR [edi+eiz*8-0x14],0x38
  40c03f:	adc    edi,esp
  40c041:	fisttp DWORD PTR [ebx-0x5750228c]
  40c047:	aas    
  40c048:	and    eax,0x736fb0a7
  40c04d:	(bad)  
  40c04e:	jbe    0x40c0a6
  40c050:	rol    DWORD PTR ds:0xb56cba58,cl
  40c056:	adc    edx,DWORD PTR [ebp+0x6d]
  40c059:	xor    bh,BYTE PTR [edi]
  40c05b:	icebp  
  40c05c:	ja     0x40c002
  40c05e:	iret   
  40c05f:	jge    0x40c09f
  40c061:	stos   BYTE PTR es:[edi],al
  40c062:	arpl   WORD PTR [eax+0x5e],si
  40c065:	adc    BYTE PTR [edx],dh
  40c067:	inc    esi
  40c068:	pop    ecx
  40c069:	out    dx,eax
  40c06a:	sub    eax,0xb4f0b61
  40c06f:	les    esp,FWORD PTR [eax]
  40c071:	int    0x4a
  40c073:	in     eax,dx
  40c074:	dec    ebp
  40c075:	daa    
  40c076:	pushw  ss
  40c078:	int3   
  40c079:	adc    DWORD PTR [esi-0xf],ebp
  40c07c:	push   edx
  40c07d:	adc    edi,eax
  40c07f:	pop    ecx
  40c080:	push   ds
  40c081:	sub    BYTE PTR [ecx],ah
  40c083:	sahf   
  40c084:	fnstsw WORD PTR [edi-0x60f3dacd]
  40c08a:	(bad)  
  40c08b:	pop    ds
  40c08c:	and    dl,BYTE PTR [eax-0x13402ffb]
  40c092:	push   eax
  40c093:	je     0x40c02f
  40c095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c096:	(bad)  
  40c097:	hlt    
  40c098:	sbb    DWORD PTR [eax-0x39],0x1e
  40c09c:	pop    esi
  40c09d:	mov    dh,0xc0
  40c09f:	leave  
  40c0a0:	repnz (bad) 
  40c0a2:	call   DWORD PTR [ecx+ebp*2+0x4f]
  40c0a6:	ficom  WORD PTR [ebx]
  40c0a8:	arpl   sp,bx
  40c0aa:	test   DWORD PTR [ebx],edx
  40c0ac:	das    
  40c0ad:	and    al,0x6f
  40c0af:	sub    eax,ebx
  40c0b1:	out    dx,eax
  40c0b2:	xchg   ebx,eax
  40c0b3:	sub    ecx,DWORD PTR [ecx-0x2e]
  40c0b6:	xor    BYTE PTR [edx],dh
  40c0b8:	(bad)  
  40c0b9:	mov    al,0x4f
  40c0bb:	add    DWORD PTR [ebp+0x63],ebp
  40c0be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0bf:	mov    edx,0x44b61f02
  40c0c4:	stos   BYTE PTR es:[edi],al
  40c0c5:	mov    ebx,0x278a3e35
  40c0ca:	outs   dx,DWORD PTR ds:[esi]
  40c0cb:	inc    ebx
  40c0cc:	push   esi
  40c0ce:	outs   dx,DWORD PTR ds:[esi]
  40c0cf:	js     0x40c075
  40c0d1:	jnp    0x40c069
  40c0d3:	push   cs
  40c0d4:	cmc    
  40c0d5:	mov    eax,0xbaaca960
  40c0da:	pop    ds
  40c0db:	ins    BYTE PTR es:[edi],dx
  40c0dc:	inc    edi
  40c0dd:	lods   eax,DWORD PTR ds:[esi]
  40c0de:	sahf   
  40c0df:	dec    ebp
  40c0e0:	jmp    0xe256:0xbec13f19
  40c0e7:	shl    ch,cl
  40c0e9:	or     al,0x7d
  40c0eb:	jge    0x40c156
  40c0ed:	pop    DWORD PTR [edx-0x73]
  40c0f0:	add    al,ah
  40c0f2:	mov    ah,BYTE PTR [edi]
  40c0f4:	jo     0x40c128
  40c0f6:	gs test al,0xc8
  40c0f9:	imul   ebx,DWORD PTR [ebx-0x64],0x6ca4670f
  40c100:	mov    eax,0x3dbf3fb6
  40c105:	add    BYTE PTR [edi],cl
  40c107:	stc    
  40c108:	jecxz  0x40c169
  40c10a:	add    esp,0x53
  40c10d:	mov    ebx,0x17df287b
  40c112:	add    DWORD PTR [ebx-0x48],esp
  40c115:	scas   al,BYTE PTR es:[edi]
  40c116:	ja     0x40c193
  40c118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c119:	(bad)  
  40c11a:	fistp  DWORD PTR [edx+0x332bd3f9]
  40c120:	ins    DWORD PTR es:[edi],dx
  40c121:	xchg   edx,eax
  40c122:	jp     0x40c120
  40c124:	mov    esp,0xd6d0ded4
  40c129:	in     al,0x2a
  40c12b:	lea    ecx,[edx+0x71]
  40c12e:	call   0x79ffc90f
  40c133:	push   ds
  40c134:	lock das 
  40c136:	mov    edx,ebp
  40c138:	push   es
  40c139:	sub    ecx,DWORD PTR [esi+0x2b4542d6]
  40c13f:	sub    dl,ah
  40c141:	xchg   ecx,eax
  40c142:	rol    esi,cl
  40c144:	adc    al,0xdd
  40c146:	loopne 0x40c1a7
  40c148:	adc    edx,esi
  40c14a:	push   0x20111d3f
  40c14f:	mov    bh,0xfb
  40c151:	adc    edx,DWORD PTR [esi]
  40c153:	adc    al,0xcf
  40c155:	mov    ecx,0x8a058e51
  40c15a:	pop    edi
  40c15b:	pop    esi
  40c15c:	jns    0x40c117
  40c15e:	aam    0x44
  40c160:	push   ecx
  40c161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c162:	push   edx
  40c163:	into   
  40c164:	inc    edi
  40c165:	test   DWORD PTR [edx+0x41f081a6],ecx
  40c16b:	aaa    
  40c16c:	jnp    0x40c10b
  40c16e:	or     DWORD PTR [eax],ebp
  40c170:	sbb    dl,BYTE PTR [edi]
  40c172:	mov    ebp,0x23c0f813
  40c177:	inc    ebp
  40c178:	aas    
  40c179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c17a:	adc    al,0xb5
  40c17c:	icebp  
  40c17d:	sub    eax,0x4f01385d
  40c182:	mov    al,ds:0x1fb9e896
  40c187:	imul   edx,DWORD PTR [ebx+esi*8+0x58],0xfbe8d979
  40c18f:	clc    
  40c190:	imul   ebp,DWORD PTR [eax+0x61],0x34
  40c194:	aam    0xd2
  40c196:	nop
  40c197:	lea    esp,[ebx]
  40c199:	ss push 0x4f
  40c19c:	aaa    
  40c19d:	shl    DWORD PTR [ecx-0x65],cl
  40c1a0:	enter  0x967a,0xf8
  40c1a4:	and    DWORD PTR [edi+0x496f8886],esp
  40c1aa:	ins    DWORD PTR es:[edi],dx
  40c1ab:	dec    eax
  40c1ac:	push   ecx
  40c1ad:	inc    edx
  40c1ae:	pop    esi
  40c1af:	fld    QWORD PTR [ecx+edx*8+0x7]
  40c1b3:	fwait
  40c1b4:	out    0xb9,al
  40c1b6:	std    
  40c1b7:	fsubr  DWORD PTR [eax]
  40c1b9:	(bad)  
  40c1ba:	mov    eax,0x40d93051
  40c1bf:	pop    esp
  40c1c0:	shl    esp,cl
  40c1c2:	sbb    ebp,DWORD PTR [esi-0x7abaefa0]
  40c1c8:	scas   eax,DWORD PTR es:[edi]
  40c1c9:	loop   0x40c18c
  40c1cb:	and    ch,bl
  40c1cd:	retf   0xcf28
  40c1d0:	add    al,0xa2
  40c1d2:	in     al,dx
  40c1d3:	ins    DWORD PTR es:[edi],dx
  40c1d4:	inc    esp
  40c1d5:	inc    ebx
  40c1d6:	inc    esp
  40c1d7:	push   esi
  40c1d8:	dec    ebp
  40c1d9:	nop
  40c1da:	ja     0x40c15d
  40c1dc:	jmp    0xfd6d:0xbf5ad2f3
  40c1e3:	and    bl,BYTE PTR [eax-0x393bdffe]
  40c1e9:	add    al,0x57
  40c1eb:	test   eax,0xf81d264d
  40c1f0:	dec    ebx
  40c1f1:	mov    DWORD PTR [ebx+eax*8-0x17edd277],0x90439188
  40c1fc:	xor    DWORD PTR [ebp+ecx*2-0x73],0xb74701fb
  40c204:	sbb    BYTE PTR [edx-0x14],al
  40c207:	sub    BYTE PTR [ecx],0xc9
  40c20a:	stos   BYTE PTR es:[edi],al
  40c20b:	std    
  40c20c:	shl    DWORD PTR [edx-0x44],cl
  40c20f:	shr    BYTE PTR [ebx+eiz*2+0x1],cl
  40c213:	add    eax,0xe5b356bc
  40c218:	cmp    BYTE PTR [edi+0x68ce94e1],ch
  40c21e:	sbb    eax,ecx
  40c220:	and    esp,eax
  40c222:	lahf   
  40c223:	xchg   edx,eax
  40c224:	mov    esi,0x5b92873d
  40c229:	dec    esi
  40c22a:	adc    al,0xbe
  40c22c:	stos   DWORD PTR es:[edi],eax
  40c22d:	rcr    BYTE PTR [ebx],cl
  40c22f:	cmp    DWORD PTR [edx-0x629661b3],eax
  40c235:	fs leave 
  40c237:	shr    dl,0xae
  40c23a:	lds    eax,FWORD PTR ds:0xe2ea2ad1
  40c240:	dec    edi
  40c241:	inc    edi
  40c242:	push   esp
  40c243:	and    BYTE PTR [ebx+0x17],bl
  40c246:	inc    ebp
  40c247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c248:	fs pop ds
  40c24a:	pop    ecx
  40c24b:	cmp    eax,0xec432848
  40c250:	aas    
  40c251:	scas   al,BYTE PTR es:[edi]
  40c252:	jmp    0xa96d:0x49b50e7f
  40c259:	sahf   
  40c25a:	aaa    
  40c25b:	or     eax,0xabc003af
  40c260:	sub    esp,DWORD PTR [ebp+0x14]
  40c263:	out    dx,al
  40c264:	mov    ?,ecx
  40c266:	cwde   
  40c267:	ret    0x39ee
  40c26a:	push   esi
  40c26b:	aas    
  40c26c:	push   edi
  40c26d:	push   edi
  40c26e:	xchg   dh,cl
  40c270:	push   ss
  40c271:	inc    ecx
  40c272:	ror    BYTE PTR [ebx],0x7b
  40c275:	fbstp  TBYTE PTR [ebp-0x2]
  40c278:	jl     0x40c2df
  40c27a:	push   edi
  40c27b:	xor    eax,0x37332a42
  40c280:	fwait
  40c281:	add    cl,BYTE PTR [ecx]
  40c283:	xchg   edi,eax
  40c284:	add    eax,0x216bbd84
  40c289:	jl     0x40c306
  40c28b:	or     al,dl
  40c28d:	fist   DWORD PTR [edi+0x49]
  40c290:	lods   eax,DWORD PTR ds:[esi]
  40c291:	mov    DWORD PTR [edi+0x2b762c1],edx
  40c297:	cmp    al,0xa1
  40c299:	popa   
  40c29a:	push   ds
  40c29b:	xchg   DWORD PTR [ebp-0xf],eax
  40c29e:	cs cs push ebp
  40c2a1:	loope  0x40c24f
  40c2a3:	cmc    
  40c2a4:	dec    ebp
  40c2a5:	lods   eax,DWORD PTR ds:[esi]
  40c2a6:	inc    esi
  40c2a7:	sbb    eax,0x6a4b2179
  40c2ac:	pop    esp
  40c2ad:	pusha  
  40c2ae:	in     al,dx
  40c2af:	mov    al,ds:0x960f3e35
  40c2b4:	adc    bh,al
  40c2b6:	(bad)  
  40c2b7:	mov    eax,0xe47d8fe5
  40c2bc:	int3   
  40c2bd:	aas    
  40c2be:	loop   0x40c288
  40c2c0:	jle    0x40c2f7
  40c2c2:	jbe    0x40c33b
  40c2c4:	ja     0x40c274
  40c2c6:	dec    ebp
  40c2c7:	or     ecx,eax
  40c2c9:	adc    al,0x98
  40c2cb:	fcom   DWORD PTR [ecx+0xf]
  40c2ce:	cmp    eax,0xd8db5772
  40c2d3:	pop    es
  40c2d4:	out    0xff,al
  40c2d6:	dec    esp
  40c2d7:	inc    eax
  40c2d8:	mov    dh,0xc
  40c2da:	jmp    0x40c31c
  40c2dc:	mov    ds:0x15af19ad,eax
  40c2e1:	xchg   edi,eax
  40c2e2:	jae    0x40c340
  40c2e4:	inc    ebx
  40c2e5:	repz jo 0x40c339
  40c2e8:	popa   
  40c2e9:	and    dh,BYTE PTR [esi+0x17]
  40c2ec:	jbe    0x40c33c
  40c2ee:	fnstcw WORD PTR [esp+edx*8+0x5bc80cb]
  40c2f5:	out    dx,eax
  40c2f6:	mov    ds:0x7833d702,al
  40c2fb:	push   eax
  40c2fc:	or     al,0x65
  40c2fe:	jle    0x40c2eb
  40c300:	sub    DWORD PTR [ebp+ebp*8-0x5a],edx
  40c304:	mov    esp,0x3bc87360
  40c309:	push   esp
  40c30a:	mov    ebp,0xec1cbfd3
  40c30f:	scas   eax,DWORD PTR es:[edi]
  40c310:	inc    ecx
  40c311:	mov    cl,0x2b
  40c313:	mov    DWORD PTR [edi+ebp*1+0x16],esi
  40c317:	and    ah,BYTE PTR ds:0xb334b6d
  40c31d:	out    0xec,eax
  40c31f:	ret    0x2243
  40c322:	xchg   esi,eax
  40c323:	or     al,0x52
  40c325:	and    DWORD PTR [edx+0x2601f09c],eax
  40c32b:	xadd   DWORD PTR [ecx-0x6abd77d5],eax
  40c332:	or     esp,DWORD PTR [ebp+eiz*4-0x6f4831c7]
  40c339:	shl    cl,1
  40c33b:	xchg   esi,eax
  40c33c:	movq   mm1,mm4
  40c33f:	fld    QWORD PTR [esi+ecx*4+0x4]
  40c343:	sbb    dl,ah
  40c345:	repz (bad) 
  40c347:	jle    0x40c378
  40c349:	push   ebp
  40c34a:	sahf   
  40c34b:	aam    0x61
  40c34d:	pop    ds
  40c34e:	scas   al,BYTE PTR es:[edi]
  40c34f:	jge    0x40c365
  40c351:	add    DWORD PTR [edx],0xd6610e0c
  40c357:	sar    DWORD PTR [ecx+0x8],cl
  40c35a:	cmp    al,0xba
  40c35c:	adc    esp,DWORD PTR [ecx]
  40c35e:	sub    cl,dh
  40c360:	cmp    DWORD PTR [ecx+eiz*1-0x6c],esi
  40c364:	xchg   ebx,eax
  40c365:	adc    bl,dl
  40c367:	xlat   BYTE PTR ds:[ebx]
  40c368:	add    edi,DWORD PTR [ebx+0x34101ba5]
  40c36e:	in     eax,0x5e
  40c370:	nop
  40c371:	or     cl,BYTE PTR [esi+edi*4]
  40c374:	es dec ecx
  40c376:	xor    al,0x1c
  40c378:	sbb    BYTE PTR [ecx-0x181c88b3],ch
  40c37e:	clc    
  40c37f:	mov    edx,0x134d91f8
  40c384:	jmp    0x40c366
  40c386:	ret    0x81d4
  40c389:	cmp    bh,ah
  40c38b:	xchg   ecx,eax
  40c38c:	jp     0x40c3ea
  40c38e:	mov    eax,0x83f54f7c
  40c393:	bound  edx,QWORD PTR [ebx]
  40c395:	sub    edi,DWORD PTR [ebx+0x4c]
  40c398:	retf   
  40c399:	xchg   esi,eax
  40c39a:	dec    ecx
  40c39b:	fst    QWORD PTR [eax]
  40c39d:	shl    DWORD PTR [edx],1
  40c39f:	cs mov dl,0x55
  40c3a2:	shr    BYTE PTR [esi+0x6a7bfff6],cl
  40c3a8:	aas    
  40c3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3aa:	rcr    DWORD PTR [eax+0x4af56a99],1
  40c3b0:	mov    ah,0x22
  40c3b2:	outs   dx,BYTE PTR ds:[esi]
  40c3b3:	adc    al,0x4b
  40c3b5:	pop    edi
  40c3b6:	sbb    esi,DWORD PTR [ebx-0x18b8a8ee]
  40c3bc:	nop
  40c3bd:	cmp    edi,ebx
  40c3bf:	loopne 0x40c3bb
  40c3c1:	and    eax,0x34582f5
  40c3c6:	daa    
  40c3c7:	xchg   ebx,eax
  40c3c8:	jecxz  0x40c34f
  40c3ca:	pop    ebx
  40c3cb:	or     DWORD PTR [ebx-0x5d],0xffffffc3
  40c3cf:	sbb    dh,BYTE PTR [esi-0x14e42989]
  40c3d5:	xchg   ecx,eax
  40c3d6:	gs mov esi,0xc1cef7a5
  40c3dc:	sub    al,0xe7
  40c3de:	cmp    cl,BYTE PTR [esi-0x6a]
  40c3e1:	mov    WORD PTR [edx-0x7a],?
  40c3e4:	sub    cl,ah
  40c3e6:	and    ecx,ebx
  40c3e8:	inc    ecx
  40c3e9:	xor    dh,al
  40c3eb:	fwait
  40c3ec:	sub    dl,ah
  40c3ee:	arpl   di,di
  40c3f0:	bound  edx,QWORD PTR [ecx]
  40c3f2:	mov    edx,0x3d6a7fc5
  40c3f7:	in     eax,dx
  40c3f8:	sub    dh,bh
  40c3fa:	push   esi
  40c3fb:	(bad)  
  40c3fc:	or     eax,0x322d0c16
  40c401:	sahf   
  40c402:	scas   al,BYTE PTR es:[edi]
  40c403:	or     eax,0x31916e9a
  40c408:	jle    0x40c407
  40c40a:	jae    0x40c47c
  40c40c:	(bad)
  40c40f:	nop
  40c410:	push   es
  40c411:	sub    edx,ebp
  40c413:	adc    dl,BYTE PTR [edx]
  40c415:	sub    al,0xe1
  40c417:	push   0xffffffe6
  40c419:	loopne 0x40c434
  40c41b:	rcr    eax,1
  40c41d:	dec    edi
  40c41e:	xchg   esp,eax
  40c41f:	push   edi
  40c420:	jbe    0x40c41b
  40c422:	mov    es,WORD PTR [esi-0x6a8f129e]
  40c428:	push   0xffffffbe
  40c42a:	mov    al,ds:0x963878b0
  40c42f:	fbld   TBYTE PTR [ebx+0x74ffa463]
  40c435:	lahf   
  40c436:	shl    cl,1
  40c438:	addr16 ds jo 0x40c47a
  40c43c:	mov    BYTE PTR [esi-0x1c],ah
  40c43f:	fmul   DWORD PTR [eax+ecx*4-0x15]
  40c443:	jmp    0x3f6aee38
  40c448:	ja     0x40c4a9
  40c44a:	int3   
  40c44b:	cmp    al,0xa0
  40c44d:	cli    
  40c44e:	push   0xffffff9f
  40c450:	data16 scas al,BYTE PTR es:[edi]
  40c452:	push   edx
  40c453:	fsub   QWORD PTR [ebx-0x1577e8cd]
  40c459:	jb     0x40c413
  40c45b:	fcomp  st(4)
  40c45d:	fld    QWORD PTR [esi]
  40c45f:	stos   DWORD PTR es:[edi],eax
  40c460:	add    al,0x48
  40c462:	test   eax,0xc72c317c
  40c467:	sbb    cl,ah
  40c469:	in     al,dx
  40c46a:	hlt    
  40c46b:	ror    DWORD PTR [edi-0x3a],cl
  40c46e:	aam    0x18
  40c470:	lods   al,BYTE PTR ds:[esi]
  40c471:	adc    eax,0x9eb35141
  40c476:	sub    DWORD PTR [edx+0x34],0x971d8671
  40c47d:	fsub   QWORD PTR [edi+0x1f57e314]
  40c483:	gs pop ebx
  40c485:	cmp    BYTE PTR [eax-0x71],bl
  40c488:	inc    esi
  40c489:	inc    ebx
  40c48a:	lea    eax,[esp+ebp*4]
  40c48d:	jb     0x40c4c7
  40c48f:	lock adc al,0x14
  40c492:	lock inc ebp
  40c494:	mov    ch,0xc8
  40c496:	cli    
  40c497:	pop    ss
  40c498:	(bad)  
  40c499:	push   cs
  40c49a:	and    cl,0xd
  40c49d:	cld    
  40c49e:	cmp    ebx,eax
  40c4a0:	(bad)  
  40c4a1:	ds retf 0x7892
  40c4a5:	lock push esp
  40c4a7:	es push 0x57f90066
  40c4ad:	or     esi,0x6c5b68af
  40c4b3:	inc    esi
  40c4b4:	xor    edx,DWORD PTR [edx+0x5f]
  40c4b7:	pop    eax
  40c4b8:	and    al,0xd
  40c4ba:	daa    
  40c4bb:	cmp    ah,BYTE PTR [edx+0x6f1688fd]
  40c4c1:	arpl   WORD PTR [edx],di
  40c4c3:	imul   ebx,edx,0xcacc23d2
  40c4c9:	out    0x75,al
  40c4cb:	rol    DWORD PTR [esi],1
  40c4cd:	push   ebx
  40c4ce:	pop    ds
  40c4cf:	out    dx,al
  40c4d0:	imul   ecx,DWORD PTR [edi],0x3f
  40c4d3:	retf   
  40c4d4:	lahf   
  40c4d5:	(bad)  
  40c4d7:	add    ch,BYTE PTR [esi-0x229f6185]
  40c4dd:	imul   edx,DWORD PTR [ebx],0x4c
  40c4e0:	or     esp,DWORD PTR [edx+0x10317e06]
  40c4e6:	(bad)  
  40c4e7:	cld    
  40c4e8:	bound  ebp,QWORD PTR [edi-0x74]
  40c4eb:	or     eax,0x89a2e2e0
  40c4f0:	push   esp
  40c4f1:	sub    DWORD PTR [edi+0x49],ebp
  40c4f4:	jp     0x40c56e
  40c4f6:	nop
  40c4f7:	and    al,0x82
  40c4f9:	sahf   
  40c4fa:	push   esi
  40c4fb:	ja     0x40c4f6
  40c4fd:	rol    bh,0xe9
  40c500:	mov    esi,0xe0c38730
  40c505:	je     0x40c537
  40c507:	push   ebp
  40c508:	mov    esi,0xb51cce09
  40c50d:	ins    DWORD PTR es:[edi],dx
  40c50e:	lods   al,BYTE PTR ds:[esi]
  40c50f:	in     al,dx
  40c510:	dec    BYTE PTR [edx+0x19]
  40c513:	inc    ebp
  40c514:	(bad)  
  40c516:	arpl   ax,dx
  40c518:	mov    dl,0xf7
  40c51a:	jae    0x40c4a4
  40c51c:	or     al,0x41
  40c51e:	jmp    0x7ed3de2b
  40c523:	jbe    0x40c50e
  40c525:	popa   
  40c526:	fwait
  40c527:	cmp    al,0xc5
  40c529:	in     al,dx
  40c52a:	sub    eax,0xa3abdb6a
  40c52f:	sti    
  40c530:	and    esp,edx
  40c532:	push   edx
  40c533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c534:	mov    esi,0x8c6d1409
  40c539:	outs   dx,BYTE PTR ds:[esi]
  40c53a:	and    al,0x35
  40c53c:	jo     0x40c4fb
  40c53e:	adc    al,0x8d
  40c540:	test   eax,0x13f4355
  40c545:	aaa    
  40c546:	adc    bh,bl
  40c548:	cs jne 0x40c555
  40c54b:	xlat   BYTE PTR ds:[ebx]
  40c54c:	sbb    BYTE PTR [ebx],dh
  40c54e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c54f:	add    ecx,edi
  40c551:	mov    dl,0x7f
  40c553:	std    
  40c554:	test   eax,0xbda15989
  40c559:	xor    DWORD PTR [ebx],ebx
  40c55b:	in     al,0xca
  40c55d:	call   0xa44e:0x9c1803fe
  40c564:	test   DWORD PTR [ebx],0xdcdcf520
  40c56a:	jno    0x40c531
  40c56c:	out    dx,al
  40c56d:	call   0xa0d9:0xad1fa68d
  40c574:	xchg   esp,eax
  40c575:	arpl   WORD PTR [eax],bp
  40c577:	xchg   ebx,eax
  40c578:	pop    ebp
  40c579:	loopne 0x40c59b
  40c57b:	(bad)  
  40c57c:	(bad)  
  40c57d:	xchg   ebx,eax
  40c57e:	push   es
  40c57f:	inc    edi
  40c580:	inc    ebx
  40c581:	dec    ebp
  40c582:	es fwait
  40c584:	nop
  40c585:	fst    QWORD PTR [edi-0x19533335]
  40c58b:	imul   BYTE PTR [edx+0x6a69345f]
  40c591:	or     al,0xb0
  40c593:	pop    esi
  40c594:	aas    
  40c595:	push   ebp
  40c596:	xor    eax,0x53474fa5
  40c59b:	xor    DWORD PTR [eax],eax
  40c59d:	fwait
  40c59e:	lods   eax,DWORD PTR ds:[esi]
  40c59f:	mov    al,ds:0xf6b7945f
  40c5a4:	push   0xffffff9e
  40c5a6:	in     eax,dx
  40c5a7:	fidivr DWORD PTR [eax-0x29]
  40c5aa:	mov    al,ds:0x8c5f465b
  40c5af:	int3   
  40c5b0:	cmp    eax,0x4698bcbe
  40c5b5:	pop    esi
  40c5b6:	rcl    DWORD PTR [ebp+0xc0af5b5],cl
  40c5bc:	jns    0x40c5e0
  40c5be:	add    al,0x34
  40c5c0:	jb     0x40c60e
  40c5c2:	loop   0x40c614
  40c5c4:	push   ds
  40c5c5:	sub    BYTE PTR [edi-0x7c],ah
  40c5c8:	std    
  40c5c9:	out    dx,eax
  40c5ca:	sbb    al,0x2b
  40c5cc:	push   edi
  40c5cd:	jb     0x40c622
  40c5cf:	and    DWORD PTR [edi+ebx*4-0x17],edx
  40c5d3:	pop    ds
  40c5d4:	xchg   ecx,eax
  40c5d5:	pusha  
  40c5d6:	inc    ebx
  40c5d7:	xor    al,BYTE PTR [ecx]
  40c5d9:	mov    BYTE PTR [ecx],ch
  40c5db:	sbb    ch,cl
  40c5dd:	lea    edx,[ecx]
  40c5df:	stos   DWORD PTR es:[edi],eax
  40c5e0:	repnz shrd eax,edx,cl
  40c5e4:	and    ebx,DWORD PTR [edx]
  40c5e6:	add    eax,0x7f51cb6a
  40c5eb:	lds    edi,FWORD PTR [esp+esi*8-0x1ac2e4c0]
  40c5f2:	mov    edi,0x4ae685c3
  40c5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5f8:	jg     0x40c588
  40c5fa:	in     eax,dx
  40c5fb:	cs push cs
  40c5fd:	or     ebx,DWORD PTR [ebp-0x2732bb9d]
  40c603:	(bad)  
  40c604:	jo     0x40c58e
  40c606:	out    0x77,al
  40c608:	and    DWORD PTR [esi-0x4b],edi
  40c60b:	hlt    
  40c60c:	pop    esp
  40c60d:	fild   WORD PTR [edx]
  40c60f:	cli    
  40c610:	stc    
  40c611:	push   esp
  40c612:	in     eax,dx
  40c613:	and    dl,BYTE PTR [eax]
  40c615:	add    eax,DWORD PTR [edi]
  40c617:	jns    0x40c66c
  40c619:	imul   esi,DWORD PTR [edx+ebp*2+0x2822c811],0x5b
  40c621:	dec    ebp
  40c622:	dec    esi
  40c623:	and    DWORD PTR [edx],edx
  40c625:	(bad)  
  40c626:	jnp    0x40c5f1
  40c628:	mov    esi,0xd713b7e7
  40c62d:	retf   0x3723
  40c630:	ja     0x40c669
  40c632:	pop    esp
  40c633:	out    0xc2,eax
  40c635:	adc    ecx,DWORD PTR [ebp+0x68]
  40c638:	push   ss
  40c639:	sbb    bh,dl
  40c63b:	pop    esp
  40c63c:	mov    dl,0x8f
  40c63e:	jp     0x40c640
  40c640:	fmul   QWORD PTR [edx+0x44b7906d]
  40c646:	aaa    
  40c647:	xor    al,0x77
  40c649:	inc    esi
  40c64a:	push   ds
  40c64b:	cmc    
  40c64c:	jge    0x40c61d
  40c64e:	push   eax
  40c64f:	jno    0x40c65c
  40c651:	mov    ecx,0x71637f7f
  40c656:	aas    
  40c657:	cmc    
  40c658:	call   0x8221:0x6ecf2b89
  40c65f:	and    edx,DWORD PTR [ecx]
  40c661:	mov    bh,0x5c
  40c663:	(bad)  
  40c665:	data16 fstp TBYTE PTR [eax]
  40c668:	xor    DWORD PTR [ecx+0x38a15f9a],esp
  40c66e:	xchg   esi,eax
  40c66f:	pop    edx
  40c670:	dec    ecx
  40c671:	out    0x43,eax
  40c673:	adc    al,0x6a
  40c675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c676:	int3   
  40c677:	sub    eax,0xe3d82bb6
  40c67c:	xor    dl,dl
  40c67e:	lahf   
  40c67f:	mov    dh,0xeb
  40c681:	enter  0x84fa,0xf4
  40c685:	push   ebp
  40c686:	ud2    
  40c688:	out    0xae,eax
  40c68a:	and    eax,0x28a62f3c
  40c68f:	popf   
  40c690:	or     esi,DWORD PTR [bx+si-0x5b]
  40c694:	push   es
  40c695:	clc    
  40c696:	sti    
  40c697:	jmp    0x8b9dc79c
  40c69c:	and    dl,BYTE PTR [edx]
  40c69e:	std    
  40c69f:	sahf   
  40c6a0:	sbb    ecx,0x28cadbe0
  40c6a6:	bound  ecx,QWORD PTR [ebx+0x2b8a07c4]
  40c6ac:	pop    ds
  40c6ad:	and    eax,0xa0b1067f
  40c6b2:	xor    ebx,DWORD PTR [esi]
  40c6b4:	jae    0x40c6bd
  40c6b6:	in     al,dx
  40c6b7:	or     eax,0x95c97bb0
  40c6bc:	mov    bl,0x3e
  40c6be:	repz cwde 
  40c6c0:	sbb    ebx,DWORD PTR [eax+0x7fa67ff2]
  40c6c6:	jl     0x40c6aa
  40c6c8:	ret    0x3a05
  40c6cb:	jb     0x40c6f8
  40c6cd:	(bad)  
  40c6ce:	es out dx,al
  40c6d0:	daa    
  40c6d1:	mov    edi,DWORD PTR [eax]
  40c6d3:	xchg   DWORD PTR [eax+ebx*2-0x4b12aeed],ebp
  40c6da:	or     al,0x8a
  40c6dc:	or     eax,0xac5155b8
  40c6e1:	int3   
  40c6e2:	and    ebp,DWORD PTR [ebp+0x5e3778fd]
  40c6e8:	(bad)  
  40c6e9:	imul   ecx,DWORD PTR [esi+0x29],0x1b
  40c6ed:	outs   dx,DWORD PTR ds:[esi]
  40c6ee:	jmp    DWORD PTR [eax+0x1f]
  40c6f1:	dec    edi
  40c6f2:	mov    dl,0x7b
  40c6f4:	arpl   WORD PTR fs:[ecx-0x24e9045f],di
  40c6fb:	in     eax,dx
  40c6fc:	test   BYTE PTR [edx],dl
  40c6fe:	test   DWORD PTR ds:0x3829a65,esp
  40c704:	jmp    0xd5dd:0xcfb27182
  40c70b:	xlat   BYTE PTR ds:[ebx]
  40c70c:	repz sub BYTE PTR [edi+edx*4-0x7e0d5fdc],dl
  40c714:	popa   
  40c715:	push   0xaebe287c
  40c71a:	mov    bl,0x2e
  40c71c:	aas    
  40c71d:	scas   eax,DWORD PTR es:[edi]
  40c71e:	mov    gs,edx
  40c720:	push   edx
  40c721:	add    dl,BYTE PTR [edx+0x7f]
  40c724:	jge    0x40c72d
  40c726:	adc    ebx,DWORD PTR [ebp-0x6acb55b1]
  40c72c:	retf   0xc8b
  40c72f:	js     0x40c7ab
  40c731:	mov    ebp,0x8b8a0f8d
  40c736:	sub    cl,BYTE PTR [edx-0x37]
  40c739:	leave  
  40c73a:	dec    ecx
  40c73b:	and    cl,bl
  40c73d:	ds mov ebx,ecx
  40c740:	cmp    DWORD PTR [edi+esi*2-0x2cc7983b],esp
  40c747:	inc    ebx
  40c748:	mov    esp,DWORD PTR [edx]
  40c74a:	push   0x26
  40c74c:	or     DWORD PTR [ebx-0x47aadbf5],ecx
  40c752:	fmul   DWORD PTR [edi-0x5713c2a1]
  40c758:	sbb    al,ch
  40c75a:	or     al,0xaa
  40c75c:	push   es
  40c75d:	cld    
  40c75e:	xchg   ecx,eax
  40c75f:	bound  eax,QWORD PTR [edx+0xc]
  40c762:	ins    BYTE PTR es:[edi],dx
  40c763:	xchg   edi,eax
  40c764:	mov    dh,0x47
  40c766:	add    al,0x16
  40c768:	fcomp  st(6)
  40c76a:	cmp    DWORD PTR [eax],ebx
  40c76c:	push   ecx
  40c76d:	jmp    0xe50f:0xfa26ce89
  40c774:	(bad)  
  40c775:	adc    al,cl
  40c777:	int3   
  40c778:	lock mov bh,0xa2
  40c77b:	fild   QWORD PTR [ecx-0xc98a131]
  40c781:	ret    
  40c782:	inc    ecx
  40c783:	bound  esi,QWORD PTR [edi]
  40c785:	jecxz  0x40c7bb
  40c787:	mov    WORD PTR [ecx],ds
  40c789:	iret   
  40c78a:	outs   dx,BYTE PTR ds:[esi]
  40c78b:	xchg   esp,eax
  40c78c:	icebp  
  40c78d:	jae    0x40c754
  40c78f:	and    dl,BYTE PTR [eax+0x6ea1b063]
  40c795:	sti    
  40c796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c797:	inc    edi
  40c798:	cmp    eax,0x933d988
  40c79d:	xchg   DWORD PTR [ecx+ecx*1+0x23],esp
  40c7a1:	sqrtps xmm7,XMMWORD PTR [ebx-0x679ff800]
  40c7a8:	fbstp  TBYTE PTR [ebx-0x2e]
  40c7ab:	xor    BYTE PTR [ebx+0x35],0x6c
  40c7af:	inc    eax
  40c7b0:	std    
  40c7b1:	pop    es
  40c7b2:	or     BYTE PTR [edi],bh
  40c7b4:	pusha  
  40c7b5:	fisub  DWORD PTR [edi-0x24ed1690]
  40c7bb:	ds mov esi,0x3161c78f
  40c7c1:	mov    dh,0xc
  40c7c3:	adc    eax,0xe55e8a8a
  40c7c8:	imul   ebp,DWORD PTR [ebx-0xf],0x4b
  40c7cc:	push   ebx
  40c7cd:	push   edx
  40c7ce:	mov    edi,0xae5c20ca
  40c7d3:	sbb    DWORD PTR [edx],ebp
  40c7d5:	std    
  40c7d6:	stc    
  40c7d7:	xchg   cl,al
  40c7d9:	mov    eax,ds:0x6100ffc7
  40c7de:	popa   
  40c7df:	xchg   ebx,eax
  40c7e0:	stos   BYTE PTR es:[edi],al
  40c7e1:	mov    eax,0x6b15960a
  40c7e6:	arpl   WORD PTR [esi],di
  40c7e8:	jmp    0xcd04d851
  40c7ed:	cli    
  40c7ee:	sub    edi,DWORD PTR [edi+0x71]
  40c7f1:	lea    ebx,[esi-0x23]
  40c7f4:	test   BYTE PTR [ebx+0x43e3ae14],cl
  40c7fa:	mov    es,WORD PTR [esi-0x50125f47]
  40c800:	mov    ah,0xe9
  40c802:	scas   al,BYTE PTR es:[edi]
  40c803:	out    0x88,eax
  40c805:	xchg   esi,eax
  40c806:	aad    0xb0
  40c808:	call   0xeef163e
  40c80d:	jge    0x40c7da
  40c80f:	xor    eax,0x6a2c727b
  40c814:	out    dx,eax
  40c815:	mov    WORD PTR [ebx+0x774d1932],es
  40c81b:	test   dl,0xd9
  40c81e:	lahf   
  40c81f:	jnp    0x40c7d9
  40c821:	pop    es
  40c822:	in     al,0x7b
  40c824:	jae    0x40c835
  40c826:	lahf   
  40c827:	pop    eax
  40c828:	sbb    ecx,DWORD PTR [edx-0xbd8a805]
  40c82e:	or     ebp,DWORD PTR [ecx-0x76]
  40c831:	pop    ebx
  40c832:	and    bl,0xfb
  40c835:	dec    edx
  40c836:	inc    ebx
  40c837:	int3   
  40c838:	jp     0x40c83c
  40c83a:	dec    esp
  40c83b:	outs   dx,DWORD PTR ds:[esi]
  40c83c:	std    
  40c83d:	jmp    0x40c7f5
  40c83f:	push   edi
  40c840:	inc    edx
  40c841:	inc    edi
  40c842:	mov    ds:0x2808419c,al
  40c847:	xor    BYTE PTR ds:0x6577a7d7,al
  40c84d:	push   0x3d
  40c84f:	inc    edx
  40c850:	sub    eax,0xc9203da0
  40c855:	into   
  40c856:	repnz mov al,ds:0x80c41d58
  40c85c:	or     BYTE PTR [ecx+0x6f],ah
  40c85f:	lods   al,BYTE PTR ds:[esi]
  40c860:	mov    DWORD PTR [edi-0x7d],ebp
  40c863:	ficomp DWORD PTR [ebp+0x1e]
  40c866:	and    al,0xfe
  40c868:	test   BYTE PTR [ecx+ebp*4],bh
  40c86b:	int3   
  40c86c:	call   0x856a:0xf2ada505
  40c873:	xchg   DWORD PTR [ecx-0x30d33c68],edx
  40c879:	mov    ebx,0xf519c17a
  40c87e:	ds dec edi
  40c880:	mov    al,0x8c
  40c882:	mov    ebx,0x4a7c3f5d
  40c887:	mov    ds:0x53b407f4,al
  40c88c:	fidivr WORD PTR ds:0x7528869f
  40c892:	or     DWORD PTR [edx-0x14e45a38],ecx
  40c898:	mov    ebx,0x20ef5226
  40c89d:	(bad)  
  40c89e:	sti    
  40c89f:	mov    edi,0xb3693937
  40c8a4:	js     0x40c89f
  40c8a6:	int3   
  40c8a7:	call   DWORD PTR [ecx-0x8]
  40c8aa:	xchg   esi,eax
  40c8ab:	fisub  DWORD PTR [ebx+edx*1]
  40c8ae:	dec    eax
  40c8af:	sar    DWORD PTR [ebx+0x7e9f51cf],1
  40c8b5:	inc    ebp
  40c8b6:	cmp    BYTE PTR [ecx],0x67
  40c8b9:	add    ah,BYTE PTR [ebx+0x57e490]
  40c8bf:	mov    gs,WORD PTR [ebp+0x5d]
  40c8c2:	(bad)  
  40c8c3:	mov    dh,0x3d
  40c8c5:	mov    eax,ds:0x93599bee
  40c8ca:	popa   
  40c8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8cc:	aaa    
  40c8cd:	cmp    dl,dl
  40c8cf:	(bad)  
  40c8d0:	jne    0x40c855
  40c8d2:	add    DWORD PTR [edi-0x1e98fcbf],ebp
  40c8d8:	cs ret 0x999a
  40c8dc:	es (bad) 
  40c8de:	push   ebp
  40c8df:	cmp    ebx,DWORD PTR [esi+0x7c]
  40c8e2:	retf   0x75b3
  40c8e5:	jae    0x40c8dc
  40c8e7:	retf   
  40c8e8:	cmp    ebx,DWORD PTR [ebx+ecx*2+0x1d60507a]
  40c8ef:	fwait
  40c8f0:	mov    ch,0x1a
  40c8f2:	xlat   BYTE PTR ds:[ebx]
  40c8f3:	sbb    ebx,DWORD PTR [ebp+0xe]
  40c8f6:	adc    edi,DWORD PTR [ebp+0x3f]
  40c8f9:	(bad)  
  40c8fc:	push   0xffffffea
  40c8fe:	lahf   
  40c8ff:	jmp    0x40c8b3
  40c901:	pop    eax
  40c902:	lods   eax,DWORD PTR ds:[esi]
  40c903:	ss sbb esi,edx
  40c906:	je     0x40c8de
  40c908:	mov    bl,0x91
  40c90a:	sti    
  40c90b:	cmp    eax,0x104cf211
  40c910:	jo     0x40c8c6
  40c912:	mov    esp,0x1a13bbce
  40c917:	xchg   edi,eax
  40c918:	adc    eax,0x7061c2f3
  40c91d:	cdq    
  40c91e:	and    eax,0xf25fffe2
  40c923:	sub    eax,0x5fca859
  40c928:	fimul  DWORD PTR [edx+0x294ec6aa]
  40c92e:	lock jle 0x40c95d
  40c931:	mov    eax,ds:0xc4c7b1ed
  40c936:	je     0x40c936
  40c938:	repnz mov al,0xbe
  40c93b:	xchg   ebp,eax
  40c93c:	daa    
  40c93d:	jmp    0x40c8e7
  40c93f:	shl    ebp,0x1f
  40c942:	outs   dx,BYTE PTR ds:[esi]
  40c943:	mov    eax,ds:0x379ea0c4
  40c948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c949:	in     eax,dx
  40c94a:	mov    ch,0x2e
  40c94c:	adc    al,0x75
  40c94e:	pop    edx
  40c94f:	fisub  DWORD PTR fs:[ecx+0x48a2ea5d]
  40c956:	test   eax,0x99ff3e63
  40c95b:	sbb    BYTE PTR [edi+0x2ddaee79],dh
  40c961:	ret    0x594e
  40c964:	and    ecx,DWORD PTR [ecx]
  40c966:	inc    ecx
  40c967:	push   edx
  40c968:	lods   al,BYTE PTR ds:[esi]
  40c969:	mov    cs,ebx
  40c96b:	cwde   
  40c96c:	sti    
  40c96d:	pop    esp
  40c96e:	cli    
  40c96f:	sbb    dh,BYTE PTR [ecx]
  40c971:	push   eax
  40c972:	jae    0x40c97e
  40c974:	xor    esi,DWORD PTR [ebp+0x42a21b5d]
  40c97a:	outs   dx,BYTE PTR ds:[esi]
  40c97b:	dec    ebx
  40c97c:	and    DWORD PTR [esi-0x17],ebp
  40c97f:	(bad)  
  40c980:	iret   
  40c981:	lock adc al,0x60
  40c984:	mov    cl,0x10
  40c986:	xchg   DWORD PTR [edi+0x5f8ef5c4],edx
  40c98c:	stc    
  40c98d:	mov    al,ds:0x81c3c45d
  40c992:	bound  esp,QWORD PTR [ecx]
  40c994:	(bad)  
  40c995:	rol    BYTE PTR [esi],1
  40c997:	jp     0x40c98f
  40c999:	push   0xffffff8e
  40c99b:	sahf   
  40c99c:	xchg   ebx,eax
  40c99d:	lds    ecx,FWORD PTR [eax+0x53941bed]
  40c9a3:	(bad)  
  40c9a4:	push   ss
  40c9a5:	in     eax,dx
  40c9a6:	lods   al,BYTE PTR ds:[esi]
  40c9a7:	cwde   
  40c9a8:	mov    bl,0xf5
  40c9aa:	jns    0x40c98f
  40c9ac:	xor    edi,esp
  40c9ae:	jmp    0x41bc:0x607dcbc9
  40c9b5:	push   edx
  40c9b6:	add    al,0xd
  40c9b8:	cmp    eax,0xfcf102a5
  40c9bd:	and    eax,DWORD PTR [esi+0x7b]
  40c9c0:	retf   0xaeef
  40c9c3:	xor    dh,BYTE PTR [edi]
  40c9c5:	cmp    eax,0x45b52c99
  40c9ca:	fdiv   QWORD PTR [ecx]
  40c9cc:	out    0x21,al
  40c9ce:	jg     0x40c962
  40c9d0:	jns    0x40ca34
  40c9d2:	enter  0xcee,0x67
  40c9d6:	dec    ecx
  40c9d7:	cli    
  40c9d8:	sbb    eax,0x682ee9b6
  40c9dd:	movntps XMMWORD PTR [ebx+0x48ba6817],xmm2
  40c9e4:	pop    esp
  40c9e5:	xor    al,0xdd
  40c9e7:	enter  0xd38b,0x82
  40c9eb:	xor    eax,0xb6869841
  40c9f0:	(bad)  
  40c9f1:	adc    al,0xa8
  40c9f3:	and    al,0xbb
  40c9f5:	shr    BYTE PTR [ecx+esi*1],cl
  40c9f8:	dec    edx
  40c9f9:	add    eax,0x37307146
  40c9fe:	sub    al,0x30
  40ca00:	sub    al,BYTE PTR [ebx-0x14]
  40ca03:	gs cs daa 
  40ca06:	enter  0xb24b,0x6
  40ca0a:	mov    ss,WORD PTR [edx]
  40ca0c:	inc    esp
  40ca0d:	test   al,0xd4
  40ca0f:	data16 ss or al,0xb1
  40ca13:	pop    esi
  40ca14:	sbb    BYTE PTR [edi-0x6f2d932d],0x54
  40ca1b:	iret   
  40ca1c:	and    al,0x27
  40ca1e:	popf   
  40ca1f:	pop    ds
  40ca20:	sub    BYTE PTR [ecx+0x7b],al
  40ca23:	lahf   
  40ca24:	test   BYTE PTR ds:0xebf3536e,ch
  40ca2a:	popf   
  40ca2b:	pop    ebx
  40ca2c:	pop    ebx
  40ca2d:	mov    ds:0xb1761db9,eax
  40ca32:	clc    
  40ca33:	sbb    al,0x76
  40ca35:	xor    ebp,DWORD PTR [edx]
  40ca37:	mov    WORD PTR [esi-0xbfdd890],?
  40ca3d:	ds inc edi
  40ca3f:	add    eax,esi
  40ca41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca42:	aam    0x76
  40ca44:	fucomp st(6)
  40ca46:	push   esi
  40ca47:	sub    ebp,ebp
  40ca49:	test   al,0x95
  40ca4b:	cmp    dh,BYTE PTR [edi]
  40ca4d:	test   dl,0x85
  40ca50:	inc    ebp
  40ca51:	jbe    0x40ca80
  40ca53:	sbb    BYTE PTR [ecx-0x21],bh
  40ca56:	jl     0x40cac4
  40ca58:	mov    ebp,0x9413154e
  40ca5d:	jns    0x40c9df
  40ca5f:	mov    cl,bh
  40ca61:	jb     0x40ca01
  40ca63:	adc    ebx,edx
  40ca65:	popf   
  40ca66:	dec    edi
  40ca67:	(bad)  
  40ca69:	in     al,dx
  40ca6a:	add    eax,0x55e7646b
  40ca6f:	mov    edx,0x4e7ab344
  40ca74:	or     DWORD PTR ds:0x1a6b4d88,edx
  40ca7a:	ds jnp 0x40cad3
  40ca7d:	retf   
  40ca7e:	jmp    FWORD PTR [ebp-0x27cb990d]
  40ca84:	in     eax,dx
  40ca85:	cwde   
  40ca86:	jg     0x40caba
  40ca88:	pop    edx
  40ca89:	lock into 
  40ca8b:	into   
  40ca8c:	(bad)  
  40ca8e:	ror    al,0x80
  40ca91:	cmp    eax,0x9aa39c8
  40ca96:	lock sbb ch,BYTE PTR [eax]
  40ca99:	inc    edi
  40ca9a:	adc    eax,0xf7445248
  40ca9f:	gs mov eax,0x2b94c025
  40caa5:	les    ecx,FWORD PTR [edx+0x1b]
  40caa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caa9:	jo     0x40cb27
  40caab:	popa   
  40caac:	push   ecx
  40caad:	fs inc edx
  40caaf:	sti    
  40cab0:	data16 jg 0x40cb28
  40cab3:	pusha  
  40cab4:	dec    esi
  40cab5:	fwait
  40cab6:	inc    ebx
  40cab7:	arpl   di,di
  40cab9:	aad    0x1
  40cabb:	push   es
  40cabc:	shl    BYTE PTR [eax],1
  40cabe:	sbb    BYTE PTR [edi],ah
  40cac0:	push   edx
  40cac1:	(bad)  
  40cac3:	mov    eax,0x820d99c0
  40cac8:	mov    cl,ch
  40caca:	icebp  
  40cacb:	ss mov BYTE PTR fs:[edx],0x5e
  40cad0:	jge    0x40cb39
  40cad2:	jbe    0x40cacd
  40cad4:	mov    esp,0xddf08061
  40cad9:	pop    ds
  40cada:	out    0xeb,eax
  40cadc:	push   ss
  40cadd:	nop
  40cade:	fild   DWORD PTR [ecx+0x35]
  40cae1:	ins    DWORD PTR es:[edi],dx
  40cae2:	pop    ebx
  40cae3:	xchg   ebx,eax
  40cae4:	sub    edx,edx
  40cae6:	mov    eax,0xc9b1ae03
  40caeb:	loop   0x40cadc
  40caed:	imul   BYTE PTR [edx-0x36d809b8]
  40caf3:	pop    esi
  40caf4:	dec    BYTE PTR [esi]
  40caf6:	jmp    0x40cb41
  40caf8:	push   0x2a03e0b2
  40cafd:	dec    esi
  40cafe:	stc    
  40caff:	push   ebp
  40cb00:	mov    DWORD PTR [esp+edi*4-0x3c892136],esi
  40cb07:	xchg   edi,eax
  40cb08:	sub    eax,0xa04af4b0
  40cb0d:	in     al,0x81
  40cb0f:	and    al,0x3a
  40cb11:	sub    dl,BYTE PTR [edi+ebx*2]
  40cb14:	scas   eax,DWORD PTR es:[edi]
  40cb15:	sbb    edx,DWORD PTR [esi-0x27]
  40cb18:	jo     0x40cb22
  40cb1a:	inc    esi
  40cb1b:	xchg   esi,eax
  40cb1c:	mov    cl,BYTE PTR [ebx+0x735fd254]
  40cb22:	mul    dh
  40cb24:	nop
  40cb25:	xor    ebx,ebp
  40cb27:	dec    ecx
  40cb28:	dec    eax
  40cb29:	shr    DWORD PTR [ebx+eax*4-0x33d209c1],cl
  40cb30:	je     0x40cb8e
  40cb32:	cmp    eax,0xdb09e1a3
  40cb37:	pop    esi
  40cb38:	push   edx
  40cb39:	push   edx
  40cb3a:	lahf   
  40cb3b:	mov    bh,0xd1
  40cb3d:	and    al,0xe6
  40cb3f:	stos   BYTE PTR es:[edi],al
  40cb40:	test   DWORD PTR [ebx],0x1582e916
  40cb46:	ror    BYTE PTR [edi],1
  40cb48:	jp     0x40cb69
  40cb4a:	imul   BYTE PTR [edx+eax*2+0x13513757]
  40cb51:	add    BYTE PTR [ebx+0x5a09d292],cl
  40cb57:	cdq    
  40cb58:	push   0x926cc9a1
  40cb5d:	in     eax,dx
  40cb5e:	int3   
  40cb5f:	xchg   esi,eax
  40cb60:	dec    eax
  40cb61:	and    eax,eax
  40cb63:	jl     0x40cb42
  40cb65:	jbe    0x40cafb
  40cb67:	cmp    bh,BYTE PTR [edx-0x5c]
  40cb6a:	fwait
  40cb6b:	test   DWORD PTR [edi+eiz*1-0x47f477cd],ebx
  40cb72:	adc    al,ah
  40cb74:	mov    cl,0x5d
  40cb76:	push   ebx
  40cb77:	sbb    DWORD PTR [ecx-0x67],0x6a9d4331
  40cb7e:	push   0x3f
  40cb80:	sahf   
  40cb81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb82:	rcr    DWORD PTR [eax],1
  40cb84:	and    bh,BYTE PTR [ebp-0x387c097d]
  40cb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb8b:	ins    DWORD PTR es:[edi],dx
  40cb8c:	mov    cl,0x1f
  40cb8e:	sti    
  40cb8f:	sbb    dl,BYTE PTR [ebx-0x7e]
  40cb92:	push   edi
  40cb93:	sub    bh,BYTE PTR [ecx+ebx*2]
  40cb96:	mov    ecx,0x28cf6730
  40cb9b:	lock sub bh,BYTE PTR [eax-0x15]
  40cb9f:	mov    edi,0x82cc1911
  40cba4:	jmp    0x40cb87
  40cba6:	stos   BYTE PTR es:[edi],al
  40cba7:	test   eax,0x8251bfb9
  40cbac:	loope  0x40cb4c
  40cbae:	push   esi
  40cbaf:	and    edx,DWORD PTR [eax+eax*2+0x55da711f]
  40cbb6:	and    eax,0xe57fe925
  40cbbb:	ins    BYTE PTR es:[edi],dx
  40cbbc:	cdq    
  40cbbd:	rcr    BYTE PTR [ecx+ebx*4+0x4f5fa919],cl
  40cbc4:	int3   
  40cbc5:	jg     0x40cc39
  40cbc7:	fwait
  40cbc8:	cwde   
  40cbc9:	rol    DWORD PTR [esi+edx*4],cl
  40cbcc:	add    ecx,DWORD PTR [edi+ecx*1]
  40cbcf:	daa    
  40cbd0:	fstp   st(1)
  40cbd2:	cmp    DWORD PTR [eax],eax
  40cbd4:	(bad)  
  40cbd5:	xchg   esi,eax
  40cbd6:	mov    ecx,0xeb0a6063
  40cbdb:	or     al,0x1e
  40cbdd:	sar    al,cl
  40cbdf:	mov    DWORD PTR [esi-0x66d7e9d3],ebp
  40cbe5:	inc    eax
  40cbe6:	outs   dx,BYTE PTR ds:[esi]
  40cbe7:	pop    esp
  40cbe8:	ret    
  40cbe9:	out    0xd1,eax
  40cbeb:	fld    st(3)
  40cbed:	(bad)  
  40cbee:	mov    BYTE PTR [eax-0x2a5d6bb7],dh
  40cbf4:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40cbf6:	lods   eax,DWORD PTR ds:[esi]
  40cbf7:	dec    esi
  40cbf8:	cmp    DWORD PTR [ecx+edi*4+0x2d],ecx
  40cbfc:	inc    edi
  40cbfd:	jae    0x40cbb5
  40cbff:	fild   QWORD PTR [ebp-0x2d]
  40cc02:	daa    
  40cc03:	cmp    eax,0xf2da2808
  40cc08:	shr    BYTE PTR [esi],0xbc
  40cc0b:	or     BYTE PTR [ebp+ebx*2+0x2a],dh
  40cc0f:	cmc    
  40cc10:	call   0x163e:0xbfb75778
  40cc17:	jecxz  0x40cc56
  40cc19:	jbe    0x40cc2b
  40cc1b:	ins    BYTE PTR es:[edi],dx
  40cc1c:	stos   DWORD PTR es:[edi],eax
  40cc1d:	ds mov edi,DWORD PTR fs:[ebp+edx*1+0x72a3e9f9]
  40cc26:	add    bl,ah
  40cc28:	jmp    0x34a1:0x2706072e
  40cc2f:	sbb    cl,dl
  40cc31:	push   cs
  40cc32:	imul   edi,DWORD PTR [edi+0x11],0x5d7379ee
  40cc39:	rcl    ch,0xa2
  40cc3c:	clc    
  40cc3d:	cmp    bl,BYTE PTR [ebx-0x22]
  40cc40:	out    dx,al
  40cc41:	mov    ah,0xd
  40cc43:	or     esi,edx
  40cc45:	imul   BYTE PTR [ebx]
  40cc47:	or     eax,0xe6d40a9
  40cc4c:	pop    edx
  40cc4d:	cs data16 xor al,0x5d
  40cc51:	(bad)  
  40cc52:	scas   al,BYTE PTR es:[edi]
  40cc53:	aad    0x2e
  40cc55:	ss dec ebx
  40cc57:	mov    ebp,0x10f1d1ad
  40cc5c:	jb     0x40cc9c
  40cc5e:	div    DWORD PTR [esi-0x124048c6]
  40cc64:	push   ss
  40cc65:	cmp    al,0x9e
  40cc67:	push   ds
  40cc68:	push   es
  40cc69:	inc    ecx
  40cc6a:	push   ds
  40cc6b:	jo     0x40cc71
  40cc6d:	(bad)  
  40cc6e:	fistp  QWORD PTR [edx+0x41]
  40cc71:	ror    BYTE PTR [edi],0xf9
  40cc74:	sbb    eax,0xd3b6b2fe
  40cc79:	out    0x89,eax
  40cc7b:	push   ecx
  40cc7c:	sub    DWORD PTR [esp+ebx*2+0x55b734f2],0x28
  40cc84:	mov    ch,0x5b
  40cc86:	(bad)  
  40cc87:	out    dx,al
  40cc88:	jb     0x40cc6b
  40cc8a:	or     BYTE PTR [ecx+0x7447ee36],ah
  40cc90:	pop    eax
  40cc91:	add    DWORD PTR [edi+0x7b],esp
  40cc94:	mov    al,0x40
  40cc96:	cdq    
  40cc97:	xor    al,0x20
  40cc99:	rcl    edi,cl
  40cc9b:	sub    bh,ah
  40cc9d:	pushf  
  40cc9e:	ficom  WORD PTR [ebx-0x7864036e]
  40cca4:	add    eax,0x30f116d1
  40cca9:	in     al,0x4f
  40ccab:	mov    ecx,DWORD PTR [edx+0x77]
  40ccae:	int3   
  40ccaf:	cmc    
  40ccb0:	inc    ebx
  40ccb1:	icebp  
  40ccb2:	inc    edi
  40ccb3:	lds    eax,FWORD PTR [ebx+ebx*1+0x43e2093f]
  40ccba:	or     eax,0xd2a549e1
  40ccbf:	fwait
  40ccc0:	in     eax,0xef
  40ccc2:	lods   eax,DWORD PTR ds:[esi]
  40ccc3:	jb     0x40cc8b
  40ccc5:	xor    edi,DWORD PTR [edi-0x56]
  40ccc8:	in     al,dx
  40ccc9:	xor    DWORD PTR [edi+0x7c],esp
  40cccc:	iret   
  40cccd:	and    al,0x50
  40cccf:	jmp    0x70ec:0x35b4d0b9
  40ccd6:	and    edi,edi
  40ccd8:	push   esi
  40ccd9:	mov    cs,WORD PTR [esi+eax*1-0x46]
  40ccdd:	sub    cl,BYTE PTR ds:0xca5333c8
  40cce3:	loop   0x40cc76
  40cce5:	call   0x7326:0xd08f5ae4
  40ccec:	pop    eax
  40cced:	aam    0x56
  40ccef:	into   
  40ccf0:	jmp    0x9d6a:0x9f2423b1
  40ccf7:	arpl   WORD PTR [edi-0x4f],ax
  40ccfa:	int    0xde
  40ccfc:	add    DWORD PTR [esi+0x42544e79],edx
  40cd02:	outs   dx,BYTE PTR ds:[esi]
  40cd03:	std    
  40cd04:	cmp    eax,0x88379eb8
  40cd09:	arpl   WORD PTR [edi-0x10a119f4],bx
  40cd0f:	shr    bl,0xd2
  40cd12:	mov    edx,0x75e1bfb4
  40cd17:	mov    ds:0x31563bf3,eax
  40cd1c:	add    ah,BYTE PTR ds:0x77793120
  40cd22:	clc    
  40cd23:	rcl    BYTE PTR [edi-0x70],1
  40cd26:	mov    ebx,DWORD PTR [ecx-0x47]
  40cd29:	iret   
  40cd2a:	ss addr16 dec ecx
  40cd2d:	jbe    0x40cd62
  40cd2f:	loopne 0x40cd00
  40cd31:	inc    edx
  40cd32:	fmul   DWORD PTR [ecx-0x1fa86c0e]
  40cd38:	mov    cl,0x3a
  40cd3a:	mov    bl,BYTE PTR [ebx-0x52]
  40cd3d:	add    DWORD PTR ds:0x99c50c40,edi
  40cd43:	out    dx,eax
  40cd44:	fdiv   DWORD PTR [ebp+0x79f3d632]
  40cd4a:	fnsave [esi+0x639dc349]
  40cd50:	and    ebx,DWORD PTR [edx]
  40cd52:	add    al,0xcc
  40cd54:	retf   
  40cd55:	pop    ds
  40cd56:	in     al,0x9d
  40cd58:	lgs    ebx,FWORD PTR [esi+ecx*1-0x50]
  40cd5d:	aaa    
  40cd5e:	ret    0x4ddb
  40cd61:	xchg   edx,eax
  40cd62:	pop    edx
  40cd63:	xchg   edx,eax
  40cd64:	jo     0x40cdb8
  40cd66:	test   eax,0xdb4e74a8
  40cd6b:	rol    DWORD PTR [edi-0x5e],cl
  40cd6e:	sti    
  40cd6f:	adc    BYTE PTR [ebp-0x1b],0x46
  40cd73:	pop    edi
  40cd74:	and    DWORD PTR [ecx-0x59],esp
  40cd77:	and    bl,BYTE PTR [esi-0x253a00c0]
  40cd7d:	mov    ebp,0xfb9bb72c
  40cd82:	cmc    
  40cd83:	ficom  WORD PTR [ebx+edi*8-0x5904c11e]
  40cd8a:	or     eax,0x4e4edea
  40cd8f:	fwait
  40cd90:	jne    0x40cdf6
  40cd92:	mov    ds:0xf6a3e13e,eax
  40cd97:	xchg   DWORD PTR [ebx+esi*4+0x6],edx
  40cd9b:	xor    BYTE PTR [ebp-0x2e77f941],dh
  40cda1:	and    ecx,DWORD PTR ds:0x5165f8b1
  40cda7:	imul   esi,ebp,0x7
  40cdaa:	sbb    bl,ch
  40cdac:	mov    al,ds:0x783ed334
  40cdb1:	pop    ecx
  40cdb2:	mov    DWORD PTR [ebp-0x3dae40bf],ecx
  40cdb8:	fnsave [ebx-0x59]
  40cdbb:	outs   dx,DWORD PTR ds:[esi]
  40cdbc:	add    eax,0xc917976
  40cdc1:	popa   
  40cdc2:	push   edx
  40cdc3:	call   0xf72a:0x207cfec9
  40cdca:	or     eax,0x980c7e12
  40cdcf:	and    al,0x4b
  40cdd1:	add    edi,0xffffffc0
  40cdd4:	shl    DWORD PTR [eax+0x12e4e4ee],1
  40cdda:	shl    BYTE PTR [edi+0x3297bb5c],1
  40cde0:	and    DWORD PTR [edx-0x62cc3189],edx
  40cde6:	pop    esi
  40cde7:	sti    
  40cde8:	je     0x40ce66
  40cdea:	mov    al,ds:0xce1dc941
  40cdef:	push   0x24
  40cdf1:	mov    bl,0xa1
  40cdf3:	fiadd  DWORD PTR [edi]
  40cdf5:	gs jge 0x40cdf1
  40cdf8:	cs int 0x92
  40cdfb:	ss inc edi
  40cdfd:	inc    ebx
  40cdfe:	jae    0x40cdcc
  40ce00:	fdivr  DWORD PTR [edi]
  40ce02:	int    0x6
  40ce04:	inc    esp
  40ce05:	cmp    dl,bl
  40ce07:	add    cl,al
  40ce09:	cmp    al,0xda
  40ce0b:	lds    esp,FWORD PTR [eax+0x4459af47]
  40ce11:	stc    
  40ce12:	mov    ah,0x5b
  40ce14:	aad    0x81
  40ce16:	jle    0x40cdad
  40ce18:	mov    WORD PTR [ecx],?
  40ce1a:	call   0x2096:0x6e34c8a9
  40ce21:	add    DWORD PTR [ebp+0x79e7567b],edi
  40ce27:	fadd   DWORD PTR [edx]
  40ce29:	sub    al,BYTE PTR [eax+0x1]
  40ce2c:	shl    DWORD PTR [edx-0x471a6b2e],0x67
  40ce33:	scas   eax,DWORD PTR es:[edi]
  40ce34:	cld    
  40ce35:	add    eax,0x2a8c1208
  40ce3a:	lock mov esp,0x8ac39cfb
  40ce40:	std    
  40ce41:	or     al,0xd0
  40ce43:	les    edi,FWORD PTR [edi]
  40ce45:	aas    
  40ce46:	fadd   DWORD PTR [ebx]
  40ce48:	add    al,BYTE PTR [ecx]
  40ce4a:	mov    ecx,0x352da224
  40ce4f:	mov    ebp,0x930064af
  40ce55:	or     BYTE PTR [esi+0x259a0be6],dl
  40ce5b:	bound  esi,QWORD PTR [ebx+ebp*8+0x30fe2fa7]
  40ce62:	icebp  
  40ce63:	out    dx,eax
  40ce64:	mov    al,ds:0x3e339041
  40ce69:	sub    DWORD PTR [ecx+0x39],ecx
  40ce6c:	sar    BYTE PTR [esi-0xbe8147f],1
  40ce72:	mov    cl,BYTE PTR [edi+0x68]
  40ce75:	adc    al,0xc1
  40ce77:	js     0x40ceb7
  40ce79:	fcom   st(3)
  40ce7b:	inc    ebp
  40ce7c:	sbb    edi,esi
  40ce7e:	mov    ebx,0xd7ee6f4e
  40ce83:	shl    DWORD PTR [esi],cl
  40ce85:	xor    ebp,DWORD PTR [ecx-0x6a9afe32]
  40ce8b:	rcr    BYTE PTR [edi-0x52edff98],0xf7
  40ce92:	add    eax,0x49a6edce
  40ce97:	pusha  
  40ce98:	mov    al,ds:0xb9754e1b
  40ce9d:	stc    
  40ce9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce9f:	sar    DWORD PTR [ebp-0x7],cl
  40cea2:	sub    bh,BYTE PTR ds:[esi-0x57a4ceb2]
  40cea9:	jecxz  0x40cedf
  40ceab:	or     esp,DWORD PTR [esi+0x2ac4c3a9]
  40ceb1:	push   ebx
  40ceb2:	cmc    
  40ceb3:	ja     0x40ce40
  40ceb5:	stos   BYTE PTR es:[edi],al
  40ceb6:	dec    ebp
  40ceb7:	or     eax,DWORD PTR [edi]
  40ceb9:	sbb    eax,0xeeb9b85c
  40cebe:	dec    edx
  40cec0:	mov    ebx,0x817f9d6e
  40cec5:	xor    edx,ebx
  40cec7:	cli    
  40cec8:	clc    
  40cec9:	cwde   
  40ceca:	sbb    eax,DWORD PTR [esi+0x3a]
  40cecd:	jge    0x40ce8b
  40cecf:	ins    DWORD PTR es:[edi],dx
  40ced0:	xlat   BYTE PTR ds:[ebx]
  40ced1:	js     0x40cedc
  40ced3:	test   BYTE PTR [ebp+0x33871ab4],0x1b
  40ceda:	ja     0x40ce68
  40cedc:	popa   
  40cedd:	push   ecx
  40cede:	fiadd  WORD PTR [edx-0x40]
  40cee1:	jne    0x40cf5f
  40cee3:	jae    0x40cf27
  40cee5:	inc    edx
  40cee6:	popf   
  40cee7:	adc    DWORD PTR [esi],ebx
  40cee9:	xchg   ebp,eax
  40ceea:	call   0xb949:0x83ed2d41
  40cef1:	call   0x69da4fad
  40cef6:	aad    0xdf
  40cef8:	aad    0x7e
  40cefa:	sub    BYTE PTR [esi+eiz*4-0x74],bh
  40cefe:	int    0xe3
  40cf00:	pop    ss
  40cf01:	push   edi
  40cf02:	cld    
  40cf03:	adc    BYTE PTR [esi],cl
  40cf05:	push   esp
  40cf06:	sub    cl,ch
  40cf08:	cli    
  40cf09:	into   
  40cf0a:	cmp    ebx,DWORD PTR [edx-0x24]
  40cf0d:	inc    esi
  40cf0e:	cld    
  40cf0f:	dec    eax
  40cf10:	mov    cl,0xae
  40cf12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf13:	push   ebx
  40cf14:	jl     0x40cefb
  40cf16:	and    BYTE PTR [edx+0x77],cl
  40cf19:	mov    ebp,0x93428555
  40cf1e:	test   eax,0x6d458c08
  40cf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf24:	pusha  
  40cf25:	fst    QWORD PTR [ebx-0x42]
  40cf28:	inc    esi
  40cf29:	inc    esp
  40cf2a:	call   0xb91e:0x5a8a8b89
  40cf31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf32:	push   0xe042b6f5
  40cf37:	add    eax,0xf86369b2
  40cf3c:	push   cs
  40cf3d:	push   ebp
  40cf3e:	iret   
  40cf3f:	addr16 mov ss:0xf089,al
  40cf44:	dec    esi
  40cf45:	out    0xcc,al
  40cf47:	and    al,BYTE PTR [eax+ecx*8]
  40cf4a:	xchg   edi,eax
  40cf4b:	(bad)  
  40cf4c:	dec    ecx
  40cf4d:	ins    DWORD PTR es:[edi],dx
  40cf4e:	dec    eax
  40cf4f:	lahf   
  40cf50:	pop    eax
  40cf51:	ins    BYTE PTR es:[edi],dx
  40cf52:	sbb    BYTE PTR [eax],ah
  40cf54:	mov    BYTE PTR [eax],ah
  40cf56:	lock cld 
  40cf58:	rcr    BYTE PTR [edx+0xcaf91eb],0x1f
  40cf5f:	push   ecx
  40cf60:	inc    ebp
  40cf61:	add    al,BYTE PTR ss:[edx]
  40cf64:	mov    dh,0x26
  40cf66:	inc    edx
  40cf67:	jbe    0x40cf04
  40cf69:	lods   al,BYTE PTR ss:[esi]
  40cf6b:	gs (bad) 
  40cf6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf6e:	or     BYTE PTR [esi+0x7d134240],cl
  40cf74:	pop    edi
  40cf75:	xchg   BYTE PTR [ebx],ah
  40cf77:	xor    al,0xf
  40cf79:	jmp    0x40cfa6
  40cf7b:	xchg   ecx,eax
  40cf7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf7d:	cld    
  40cf7e:	enter  0x6962,0xb1
  40cf82:	or     ebx,ebp
  40cf84:	in     eax,0xc6
  40cf86:	fcomp  st(7)
  40cf88:	push   edx
  40cf89:	loop   0x40cf36
  40cf8b:	xor    ecx,edi
  40cf8d:	pop    DWORD PTR [ecx-0x13]
  40cf90:	(bad)
  40cf93:	popf   
  40cf94:	aaa    
  40cf95:	xor    cl,BYTE PTR [edi+0x71f44bce]
  40cf9b:	imul   ebx,esp,0xffffffd8
  40cf9e:	pop    ss
  40cf9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfa0:	aas    
  40cfa1:	sub    ebx,ebx
  40cfa3:	gs popf 
  40cfa5:	adc    DWORD PTR [ebp-0xdf7a503],ecx
  40cfab:	fwait
  40cfac:	xchg   edx,eax
  40cfad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfae:	jnp    0x40cf94
  40cfb0:	test   BYTE PTR [esi+0x7b82edcd],bl
  40cfb6:	add    dh,BYTE PTR [eax+0x49]
  40cfb9:	sbb    eax,edx
  40cfbb:	out    dx,eax
  40cfbc:	pop    ebp
  40cfbd:	es fwait
  40cfbf:	dec    ebp
  40cfc0:	adc    dl,0xbf
  40cfc3:	stos   DWORD PTR es:[edi],eax
  40cfc4:	sti    
  40cfc5:	xchg   edi,eax
  40cfc6:	pop    ds
  40cfc7:	jmp    0x7bef3910
  40cfcc:	test   BYTE PTR [edx+0x4b],cl
  40cfcf:	push   edx
  40cfd0:	dec    eax
  40cfd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfd2:	ret    0xbcd1
  40cfd5:	cmp    dh,BYTE PTR [edi+0x28040427]
  40cfdb:	mov    ebx,0xc61cf394
  40cfe0:	cmp    bh,0xad
  40cfe3:	lds    ebx,FWORD PTR ds:0x327961a0
  40cfe9:	jnp    0x40d03f
  40cfeb:	push   es
  40cfec:	scas   eax,DWORD PTR es:[di]
  40cfee:	aad    0x17
  40cff0:	mov    ebp,0x60a0cf79
  40cff5:	xor    DWORD PTR [ecx-0x7f9770c6],0xffffffaf
  40cffc:	or     bh,BYTE PTR [ecx+0x79191e62]
  40d002:	popf   
  40d003:	pop    es
  40d004:	jae    0x40d057
  40d006:	outs   dx,DWORD PTR ds:[esi]
  40d007:	frstor [ebp+0x2ecbad5d]
  40d00d:	add    DWORD PTR [edi-0x32],0x38dbe601
  40d014:	cmp    bh,al
  40d016:	jle    0x40cfe1
  40d018:	jl     0x40d061
  40d01a:	ss retf 0x1e35
  40d01e:	and    al,0x67
  40d020:	adc    ah,BYTE PTR [esi]
  40d022:	imul   ecx,edi,0x66776493
  40d028:	repz or DWORD PTR [edi-0x63a3663b],ecx
  40d02f:	pmulhuw mm1,QWORD PTR [esp+ecx*8+0x3d]
  40d034:	nop
  40d035:	test   DWORD PTR [edi+0x62d6d081],esp
  40d03b:	jno    0x40cfd5
  40d03d:	sbb    DWORD PTR [edi],edx
  40d03f:	dec    ecx
  40d040:	jmp    0x40d098
  40d042:	xchg   ecx,eax
  40d043:	mov    ecx,0x8a1d04c0
  40d048:	je     0x40cfd8
  40d04a:	loop   0x40cfe2
  40d04c:	sbb    BYTE PTR ss:[eax+edx*4],bh
  40d050:	lods   al,BYTE PTR ds:[esi]
  40d051:	jb     0x40d092
  40d053:	cmp    al,0x83
  40d055:	sub    al,0x5e
  40d057:	sbb    BYTE PTR [edi+0x5e],al
  40d05a:	aas    
  40d05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d05c:	or     dh,dl
  40d05e:	lods   al,BYTE PTR ds:[esi]
  40d05f:	xor    BYTE PTR [ebx-0x70e0151c],ah
  40d065:	iret   
  40d066:	pop    ss
  40d067:	pop    ebp
  40d068:	dec    edi
  40d069:	mov    WORD PTR [ebx+eiz*8+0x5d],cs
  40d06d:	fnstsw WORD PTR [ebp+0x49b8c072]
  40d073:	jbe    0x40d013
  40d075:	scas   eax,DWORD PTR es:[edi]
  40d076:	mov    bh,0x80
  40d078:	rcr    dh,1
  40d07a:	xchg   esi,eax
  40d07b:	xlat   BYTE PTR ds:[ebx]
  40d07c:	enter  0x6d15,0xf4
  40d080:	loop   0x40d0e4
  40d082:	jp     0x40d0f6
  40d084:	sub    edx,DWORD PTR [edi+esi*2]
  40d087:	add    eax,0xf3a1a21c
  40d08c:	mov    BYTE PTR [ebx],dh
  40d08e:	jne    0x40d0df
  40d090:	mov    cl,al
  40d092:	rcr    ecx,1
  40d094:	retfw  
  40d096:	sbb    ah,BYTE PTR [esp+edx*1-0x3af121d0]
  40d09d:	push   esi
  40d09e:	test   eax,0xd6a7fe10
  40d0a3:	mov    cl,BYTE PTR [edi]
  40d0a5:	test   BYTE PTR [esi],0x4b
  40d0a8:	pop    edi
  40d0a9:	scas   al,BYTE PTR es:[edi]
  40d0aa:	icebp  
  40d0ab:	loop   0x40d0ae
  40d0ad:	mov    esp,0x7962595c
  40d0b2:	xchg   ebp,eax
  40d0b3:	mov    ebx,0x1d1df865
  40d0b8:	jge    0x40d0dc
  40d0ba:	sbb    eax,0x7392def
  40d0bf:	add    edi,edi
  40d0c1:	rol    cl,0xa0
  40d0c4:	ss mov ebp,0x8edf124
  40d0ca:	and    al,0xe3
  40d0cc:	jg     0x40d0c6
  40d0ce:	push   0x49
  40d0d0:	(bad)  
  40d0d2:	in     al,0xdf
  40d0d4:	cmp    eax,DWORD PTR [esi+0x7b51d55e]
  40d0da:	(bad)  
  40d0db:	(bad)  
  40d0dc:	(bad)  
  40d0dd:	rol    BYTE PTR [eax+0x56103c1],1
  40d0e3:	mov    ds,ebx
  40d0e5:	push   ebx
  40d0e6:	xchg   BYTE PTR [ebx],cl
  40d0e8:	push   ebp
  40d0e9:	(bad)  
  40d0ea:	into   
  40d0eb:	call   0xf4e7:0xd6e6c506
  40d0f2:	dec    esi
  40d0f3:	arpl   bx,si
  40d0f5:	fidiv  WORD PTR [eax-0x71957899]
  40d0fb:	xchg   ecx,eax
  40d0fc:	jg     0x40d10d
  40d0fe:	xchg   esp,eax
  40d0ff:	pop    ebp
  40d100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d101:	(bad)  
  40d102:	fwait
  40d103:	cwde   
  40d104:	sbb    ah,ch
  40d106:	pushf  
  40d107:	jge    0x40d172
  40d109:	in     eax,dx
  40d10a:	imul   esp,DWORD PTR [edi],0x48
  40d10d:	fldenv [esp+esi*1-0x55]
  40d111:	pushf  
  40d112:	add    edx,edx
  40d114:	jo     0x40d13f
  40d116:	sbb    eax,0x1a000b53
  40d11b:	out    0x78,eax
  40d11d:	ss in  eax,0x7d
  40d120:	push   esi
  40d121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d122:	jns    0x40d139
  40d124:	push   ecx
  40d125:	jp     0x40d0c7
  40d127:	into   
  40d128:	mov    cl,0xc8
  40d12a:	mov    eax,ds:0x4d063374
  40d12f:	adc    edx,DWORD PTR [esp+edx*8-0x7fc4f593]
  40d136:	fld    QWORD PTR [ebp-0xa]
  40d139:	inc    edi
  40d13a:	sbb    eax,0x6bd882ca
  40d13f:	inc    edi
  40d140:	mov    al,ds:0xf786c980
  40d145:	pop    esp
  40d146:	fdiv   st(2),st
  40d148:	pop    es
  40d149:	sub    DWORD PTR [ebx-0x2],edx
  40d14c:	aam    0x42
  40d14e:	and    ah,BYTE PTR [ebp-0x4747cf70]
  40d154:	and    al,0xde
  40d156:	addr16 cwde 
  40d158:	push   es
  40d159:	out    0xb7,al
  40d15b:	jg     0x40d11c
  40d15d:	cli    
  40d15e:	sub    al,0xe5
  40d160:	mov    cl,BYTE PTR [ecx]
  40d162:	jo     0x40d1ad
  40d164:	and    ebp,DWORD PTR [eax+0x58d94445]
  40d16a:	in     eax,dx
  40d16b:	or     DWORD PTR [ecx],ecx
  40d16d:	pop    ecx
  40d16e:	xchg   ecx,eax
  40d16f:	cli    
  40d170:	loope  0x40d1aa
  40d172:	std    
  40d173:	sbb    al,0x52
  40d175:	jbe    0x40d108
  40d177:	in     al,dx
  40d178:	inc    ecx
  40d179:	imul   edi,DWORD PTR [esi+0x63],0x1a83b9fb
  40d180:	ins    DWORD PTR es:[edi],dx
  40d181:	(bad)  
  40d182:	std    
  40d183:	mov    ebp,0xb63f80bf
  40d188:	mov    bh,0x2
  40d18a:	mov    bl,0x46
  40d18c:	repz adc eax,0x63d644ef
  40d192:	xchg   esp,ebx
  40d194:	add    ecx,esi
  40d196:	mov    ds:0x459b1587,al
  40d19b:	sbb    eax,0x891b960e
  40d1a0:	mov    esi,0x8a21e31d
  40d1a5:	daa    
  40d1a6:	add    esi,DWORD PTR [eax-0x396b203f]
  40d1ac:	mov    eax,0x841799de
  40d1b1:	dec    eax
  40d1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b3:	test   BYTE PTR [edi],dh
  40d1b5:	popf   
  40d1b6:	sub    dl,bh
  40d1b8:	fwait
  40d1b9:	aaa    
  40d1ba:	mov    WORD PTR [edi+0xc23c168],es
  40d1c0:	out    0xef,eax
  40d1c2:	aas    
  40d1c3:	xor    DWORD PTR ds:0xda4f56a3,eax
  40d1c9:	frstor [ebx+0x12afdbbc]
  40d1cf:	scas   al,BYTE PTR es:[edi]
  40d1d0:	int3   
  40d1d1:	or     ah,dh
  40d1d3:	test   al,0xeb
  40d1d5:	push   ds
  40d1d6:	jle    0x40d1c2
  40d1d8:	sbb    DWORD PTR [esi],esp
  40d1da:	add    ebx,DWORD PTR [edx+0x5c]
  40d1dd:	mov    dh,0x7f
  40d1df:	add    edi,DWORD PTR [ecx]
  40d1e1:	dec    ebx
  40d1e2:	push   0x8
  40d1e4:	repz adc esp,DWORD PTR [ebx-0x784c5cc4]
  40d1eb:	push   edi
  40d1ec:	and    BYTE PTR [ebx+0x22],bl
  40d1ef:	mov    ecx,0x2566b66
  40d1f4:	cld    
  40d1f5:	xor    DWORD PTR [eax-0x6a2df5f7],ecx
  40d1fb:	inc    ebx
  40d1fc:	and    al,0xe8
  40d1fe:	xchg   ebp,eax
  40d1ff:	std    
  40d200:	ins    DWORD PTR es:[edi],dx
  40d201:	or     BYTE PTR [ebx],dh
  40d203:	push   0x5b
  40d205:	(bad)  
  40d206:	aad    0xec
  40d208:	adc    edx,DWORD PTR [edx]
  40d20a:	je     0x40d234
  40d20c:	mov    bl,0xe1
  40d20e:	mov    WORD PTR [ecx],gs
  40d210:	and    eax,0xc50e6707
  40d215:	pop    ebx
  40d216:	dec    esp
  40d217:	mov    ch,0xf8
  40d219:	fiadd  DWORD PTR [ecx+0x70]
  40d21c:	fwait
  40d21d:	loopne 0x40d1e9
  40d21f:	(bad)  
  40d220:	fimul  WORD PTR [edi-0x24]
  40d223:	fist   DWORD PTR [edi+0x33e13c0f]
  40d229:	jmp    0x40d2a0
  40d22b:	gs xor eax,0xd98fe1d
  40d231:	mov    esp,0xbe3904c3
  40d236:	inc    edx
  40d237:	call   0x958f7bd
  40d23c:	arpl   WORD PTR [edi-0x36],sp
  40d23f:	push   es
  40d240:	(bad)  [edi-0x47f630bc]
  40d246:	cld    
  40d247:	add    al,0x4f
  40d249:	mov    edi,0xd7ff5444
  40d24e:	daa    
  40d24f:	xchg   esi,eax
  40d250:	out    dx,eax
  40d251:	push   cs
  40d252:	ficom  DWORD PTR [eax-0x3cb54dad]
  40d258:	neg    BYTE PTR [esi+0x27]
  40d25b:	xor    BYTE PTR [ebp-0xe818e45],al
  40d261:	jl     0x40d2b6
  40d263:	fnstcw WORD PTR [ecx-0x3b]
  40d266:	int3   
  40d267:	or     DWORD PTR [esi+0x35eecc1],0xfc83bc7
  40d271:	test   BYTE PTR [eax],bh
  40d273:	add    BYTE PTR [eax],al
  40d275:	add    cl,ch
  40d277:	and    al,0x0
  40d279:	add    BYTE PTR [eax],al
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	xor    al,BYTE PTR [eax-0x2d6ae780]
  40d302:	add    DWORD PTR [ebx-0x7c7ca318],0xffffff97
  40d309:	xchg   esi,eax
  40d30a:	out    0x9f,eax
  40d30c:	mov    edi,0xad1d8ee4
  40d311:	mov    ah,0xea
  40d313:	push   ds
  40d314:	mov    eax,0x72eb7bd1
  40d319:	adc    BYTE PTR [ebx+0x24],al
  40d31c:	push   cs
  40d31d:	mov    al,ds:0x837dc56b
  40d322:	xor    bl,bl
  40d324:	cs in  al,dx
  40d326:	test   eax,0xa2c9d25b
  40d32b:	lock pop esi
  40d32d:	out    0xf8,eax
  40d32f:	adc    ah,dl
  40d331:	xlat   BYTE PTR ds:[ebx]
  40d332:	popf   
  40d333:	stos   BYTE PTR es:[edi],al
  40d334:	int3   
  40d335:	test   eax,0x2b012158
  40d33a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d33b:	pop    eax
  40d33c:	sbb    DWORD PTR [edx+eiz*8-0x72],0xffffffd0
  40d341:	inc    edi
  40d342:	jnp    0x40d367
  40d344:	sub    DWORD PTR [ebx+0x5148b104],edx
  40d34a:	sbb    al,0x95
  40d34c:	adc    al,0x35
  40d34e:	loopne 0x40d30e
  40d350:	push   ds
  40d351:	or     cl,BYTE PTR [ecx-0x4a1f8df1]
  40d357:	aaa    
  40d358:	or     DWORD PTR [ebx],esi
  40d35a:	outs   dx,BYTE PTR ds:[esi]
  40d35b:	inc    esi
  40d35c:	imul   esp,DWORD PTR [edx+eiz*4-0x3e],0x798ecc79
  40d364:	dec    edi
  40d365:	and    BYTE PTR [edx-0x3f93972e],0xc6
  40d36c:	arpl   bx,ax
  40d36e:	xlat   BYTE PTR ds:[ebx]
  40d36f:	adc    eax,0x16311568
  40d374:	push   ds
  40d375:	pop    ebx
  40d376:	jmp    0xeedf:0xf1fd4e26
  40d37d:	xor    eax,0x1189fb4a
  40d382:	dec    edx
  40d383:	pushf  
  40d384:	pop    edx
  40d385:	scas   al,BYTE PTR es:[edi]
  40d386:	mov    dl,0x43
  40d388:	jmp    0x40d374
  40d38a:	jmp    0xa59cbd3a
  40d38f:	les    esp,FWORD PTR [esi]
  40d391:	call   DWORD PTR [eax+0x3f7c54be]
  40d397:	inc    edx
  40d398:	js     0x40d347
  40d39a:	push   ebp
  40d39b:	shr    esp,0xa5
  40d39e:	mov    ch,0xff
  40d3a0:	or     ebp,0x1a
  40d3a3:	movntq QWORD PTR [ebx+0x25],mm1
  40d3a7:	hlt    
  40d3a8:	scas   al,BYTE PTR es:[edi]
  40d3a9:	or     eax,0x8e5f3c84
  40d3ae:	std    
  40d3af:	dec    edi
  40d3b0:	mov    eax,edi
  40d3b2:	mov    dh,0x21
  40d3b4:	int    0x35
  40d3b6:	or     al,0xe8
  40d3b8:	(bad)  
  40d3b9:	jmp    0x9b72:0x5d8ae43b
  40d3c0:	pop    edx
  40d3c1:	pop    es
  40d3c2:	mov    al,0x92
  40d3c4:	fs and dh,ah
  40d3c7:	out    dx,al
  40d3c8:	aaa    
  40d3c9:	xchg   edi,eax
  40d3ca:	and    eax,0xdddb76fd
  40d3cf:	push   es
  40d3d0:	daa    
  40d3d1:	outs   dx,BYTE PTR ds:[esi]
  40d3d2:	xchg   BYTE PTR [edi-0x9],ch
  40d3d5:	ins    BYTE PTR es:[edi],dx
  40d3d6:	pusha  
  40d3d7:	cmp    eax,0x20e5853f
  40d3dc:	(bad)  
  40d3dd:	loope  0x40d371
  40d3df:	fsqrt  
  40d3e1:	jae    0x40d36e
  40d3e3:	cmc    
  40d3e4:	push   edi
  40d3e5:	mov    ch,0xca
  40d3e7:	(bad)  
  40d3e8:	das    
  40d3e9:	cmc    
  40d3ea:	imul   esp,DWORD PTR [ebx-0x36],0xffffffc4
  40d3ee:	or     eax,0x522bbd0d
  40d3f3:	int3   
  40d3f4:	pop    esp
  40d3f5:	mov    esp,0x16590c53
  40d3fa:	bound  edi,QWORD PTR [edx-0x26]
  40d3fd:	mov    esi,0x872383a7
  40d402:	iret   
  40d403:	sub    esi,edx
  40d405:	into   
  40d406:	repz dec edx
  40d408:	data16 arpl ax,di
  40d40b:	pushf  
  40d40c:	sahf   
  40d40d:	push   ebp
  40d40e:	lods   eax,DWORD PTR ds:[esi]
  40d40f:	push   edi
  40d410:	adc    al,0x7f
  40d412:	(bad)  [ecx+0x6]
  40d415:	cmp    edi,DWORD PTR [eax]
  40d417:	jg     0x40d46f
  40d419:	in     al,dx
  40d41a:	jnp    0x40d422
  40d41c:	cmp    al,0x63
  40d41e:	sub    al,0x4b
  40d420:	jg     0x40d3dc
  40d422:	ret    
  40d423:	sti    
  40d424:	sub    ch,BYTE PTR [ebx+0x4f]
  40d427:	test   DWORD PTR [ebx],ecx
  40d429:	into   
  40d42a:	adc    dh,BYTE PTR [ecx+0x66]
  40d42d:	pop    eax
  40d42e:	arpl   WORD PTR [esi],dx
  40d430:	inc    ebp
  40d431:	test   al,0x8c
  40d433:	mov    ds:0x852ec910,eax
  40d438:	jle    0x40d4b1
  40d43a:	xchg   ebp,eax
  40d43b:	imul   edx,DWORD PTR ss:[edx+0x5],0x45
  40d440:	les    esp,FWORD PTR [edx]
  40d442:	add    dh,bl
  40d444:	sbb    edx,DWORD PTR [esi+0x7d0472e7]
  40d44a:	aad    0xdc
  40d44c:	adc    DWORD PTR [edx+0x73d00ad0],ebp
  40d452:	xchg   edi,eax
  40d453:	and    edi,0xf3243ed6
  40d459:	popf   
  40d45a:	add    DWORD PTR [ebp+0x2efe9b09],0xffffffb6
  40d461:	in     eax,0x92
  40d463:	lahf   
  40d464:	fldcw  WORD PTR [esi+0x2]
  40d467:	mov    eax,0xc206667a
  40d46c:	or     BYTE PTR [ebx+0x4eff8039],dl
  40d472:	cmp    esp,DWORD PTR [eax+0x5]
  40d475:	pop    ecx
  40d476:	sbb    al,0x4a
  40d478:	mov    al,ds:0x1ad009b9
  40d47d:	jmp    0xf3c5:0x397d7424
  40d484:	imul   DWORD PTR [edi+0x547f8d71]
  40d48a:	dec    BYTE PTR [esi+0x1c]
  40d48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d48e:	ret    0xc83e
  40d491:	rcl    DWORD PTR [ecx-0x5bcab7ee],cl
  40d497:	lods   eax,DWORD PTR ds:[esi]
  40d498:	mov    al,ds:0x4b831cc3
  40d49d:	mov    bh,0x1c
  40d49f:	lods   al,BYTE PTR ds:[esi]
  40d4a0:	and    DWORD PTR [ebx+edx*8],eax
  40d4a3:	daa    
  40d4a4:	xchg   esi,eax
  40d4a5:	jb     0x40d4bc
  40d4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4a8:	and    al,0x8b
  40d4aa:	dec    edx
  40d4ab:	ins    DWORD PTR es:[edi],dx
  40d4ac:	ds push ds
  40d4ae:	lds    edx,FWORD PTR [edi]
  40d4b0:	icebp  
  40d4b1:	adc    eax,0xd6c58fc6
  40d4b6:	les    eax,FWORD PTR [edx+ebx*2]
  40d4b9:	mov    esp,0xd8449419
  40d4be:	dec    edi
  40d4bf:	and    ah,BYTE PTR ds:[ecx+0x74ae4032]
  40d4c6:	mov    ds:0xb657203f,al
  40d4cb:	test   eax,0x6c8338b2
  40d4d0:	and    dh,cl
  40d4d2:	dec    esi
  40d4d3:	xor    bh,ch
  40d4d5:	je     0x40d545
  40d4d7:	sub    al,0xc4
  40d4d9:	pop    ds
  40d4da:	(bad)  
  40d4db:	mov    al,0x9d
  40d4dd:	add    BYTE PTR [eax+edx*4],0x34
  40d4e1:	xchg   edx,eax
  40d4e2:	mov    dl,0x3c
  40d4e4:	ret    
  40d4e5:	mov    ecx,0x1d34e5f9
  40d4ea:	pop    edx
  40d4eb:	repz scas al,BYTE PTR es:[edi]
  40d4ed:	mov    ah,0x8c
  40d4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4f0:	out    0xcf,eax
  40d4f2:	xchg   ecx,eax
  40d4f3:	imul   ebx,DWORD PTR [ecx+edi*8],0x79
  40d4f7:	cmp    bh,BYTE PTR [edx-0x5f]
  40d4fa:	inc    eax
  40d4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4fc:	pandn  mm1,mm3
  40d4ff:	cs jmp 0xddac0778
  40d505:	cmp    al,0xb3
  40d507:	out    0x6f,eax
  40d509:	jg     0x40d4ca
  40d50b:	(bad)  
  40d50c:	rcl    al,cl
  40d50e:	adc    ebx,DWORD PTR [edi+0x6f16cf56]
  40d514:	and    BYTE PTR [edx-0x26c2d854],cl
  40d51a:	jge    0x40d4d1
  40d51c:	xor    ebp,ebx
  40d51e:	pop    ebp
  40d51f:	mov    ds:0xf9f4b64d,al
  40d524:	retf   
  40d525:	xor    BYTE PTR ds:0x285c1a51,ch
  40d52b:	dec    edx
  40d52c:	xchg   ebx,ebp
  40d52e:	repnz das 
  40d530:	pop    eax
  40d531:	lods   eax,DWORD PTR ds:[esi]
  40d532:	stc    
  40d533:	push   edx
  40d534:	dec    edi
  40d535:	es pushf 
  40d537:	in     eax,0x40
  40d539:	popa   
  40d53a:	mov    bl,BYTE PTR [ecx-0x4b423807]
  40d540:	ins    DWORD PTR es:[edi],dx
  40d541:	(bad)  
  40d542:	rol    DWORD PTR [edi+0xbe287c],cl
  40d548:	push   esi
  40d549:	xor    ah,BYTE PTR [ebx+eiz*8-0x73]
  40d54d:	mov    ds:0xb0378b7e,eax
  40d552:	(bad)  
  40d553:	out    0xc5,eax
  40d555:	int    0x27
  40d557:	ror    DWORD PTR [esi],cl
  40d559:	std    
  40d55a:	lods   al,BYTE PTR ds:[esi]
  40d55b:	test   al,0x9c
  40d55d:	adc    al,0x7e
  40d55f:	pop    edi
  40d560:	sbb    DWORD PTR [esi-0x6e],esi
  40d563:	fisttp DWORD PTR [ecx-0xf53387c]
  40d569:	dec    esi
  40d56a:	pop    esp
  40d56b:	mov    ch,0x63
  40d56d:	mov    edi,0x49ff7817
  40d572:	mov    DWORD PTR [eax],ebx
  40d574:	jbe    0x40d52c
  40d576:	rol    DWORD PTR ds:0x562ef3c4,0x63
  40d57d:	out    dx,eax
  40d57e:	lods   al,BYTE PTR ds:[esi]
  40d57f:	xlat   BYTE PTR ds:[ebx]
  40d580:	and    eax,0xcec2f9a9
  40d585:	iret   
  40d586:	jle    0x40d598
  40d588:	mov    al,ds:0x22560134
  40d58d:	repz leave 
  40d58f:	inc    eax
  40d590:	shl    BYTE PTR [edi+0x2d],1
  40d593:	jo     0x40d5bd
  40d595:	cmp    BYTE PTR [edx-0x2f],ah
  40d598:	in     eax,0xdf
  40d59a:	aad    0x4e
  40d59c:	mov    ebx,0xf3106d30
  40d5a1:	pop    esi
  40d5a2:	or     al,0xcc
  40d5a4:	add    esp,DWORD PTR [ecx+0x657373b8]
  40d5aa:	sar    BYTE PTR [esi+0x5a],cl
  40d5ad:	jmp    DWORD PTR [esi+0x5b3ef47e]
  40d5b3:	das    
  40d5b4:	dec    ecx
  40d5b5:	xchg   DWORD PTR [esi+0x5b],esi
  40d5b8:	cld    
  40d5b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5bb:	ins    DWORD PTR es:[edi],dx
  40d5bc:	int    0x6f
  40d5be:	gs mov dh,0x27
  40d5c1:	(bad)  
  40d5c2:	add    DWORD PTR [edi+0x10213e76],ebx
  40d5c8:	jp     0x40d5e0
  40d5ca:	in     al,dx
  40d5cb:	cmp    dh,BYTE PTR [esi+eiz*4+0x9ab5313]
  40d5d2:	cmp    DWORD PTR [ebp-0x7d],edx
  40d5d5:	addr16 mov edi,0x98bc8e85
  40d5db:	ret    0x180b
  40d5de:	inc    edi
  40d5df:	jmp    0x26fb68dd
  40d5e4:	fistp  QWORD PTR [esi]
  40d5e6:	xor    esi,DWORD PTR [edx+ecx*1-0x172a232c]
  40d5ed:	jne    0x40d65f
  40d5ef:	int3   
  40d5f0:	jo     0x40d669
  40d5f2:	lea    edx,[eax]
  40d5f4:	loop   0x40d66b
  40d5f6:	jae    0x40d60c
  40d5f8:	inc    edx
  40d5f9:	lea    edi,[ebp+0x55]
  40d5fc:	push   eax
  40d5fd:	sub    al,0x88
  40d5ff:	les    ebp,FWORD PTR ds:0xc86776fa
  40d605:	sub    al,0x18
  40d607:	mov    eax,ds:0x60b0bb74
  40d60c:	inc    eax
  40d60d:	rcr    BYTE PTR [edx],0xb1
  40d610:	mov    dh,0xf1
  40d612:	into   
  40d613:	ror    BYTE PTR [ecx],1
  40d615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d616:	xchg   edi,eax
  40d617:	add    eax,0x2b7e2a88
  40d61c:	adc    eax,0xf6feca5d
  40d621:	jle    0x40d620
  40d623:	mov    ch,0x74
  40d625:	ss mov ebx,0xff623139
  40d62b:	jg     0x40d699
  40d62d:	jns    0x40d64e
  40d62f:	ds ret 0xa7e9
  40d633:	fidiv  DWORD PTR [ecx]
  40d635:	push   ds
  40d636:	clc    
  40d637:	fdivr  st,st(0)
  40d639:	or     BYTE PTR [eax],bh
  40d63b:	inc    ebp
  40d63c:	cmc    
  40d63d:	pop    ecx
  40d63e:	mov    bh,0x38
  40d640:	test   eax,0x51c285a
  40d645:	xchg   ecx,eax
  40d646:	push   edx
  40d647:	ret    0x6793
  40d64a:	jnp    0x40d696
  40d64c:	jl     0x40d67d
  40d64e:	repz imul esi,DWORD PTR [edi+ebp*8],0x55d1b485
  40d656:	or     al,0x67
  40d658:	popa   
  40d659:	push   ds
  40d65a:	stos   DWORD PTR es:[edi],eax
  40d65b:	into   
  40d65c:	jbe    0x40d661
  40d65e:	scas   eax,DWORD PTR es:[edi]
  40d65f:	dec    edx
  40d660:	pop    esp
  40d661:	mov    ebp,0x6fe226d4
  40d666:	xchg   DWORD PTR [ebx],eax
  40d668:	int3   
  40d669:	arpl   bx,dx
  40d66b:	mov    ds:0x7417901c,eax
  40d670:	shl    ebx,1
  40d672:	xchg   esi,eax
  40d673:	cwde   
  40d674:	mov    bl,0xca
  40d676:	adc    eax,DWORD PTR ds:0x3831e64c
  40d67c:	sub    al,0xb2
  40d67e:	mov    al,BYTE PTR [ebx]
  40d680:	daa    
  40d681:	push   eax
  40d682:	mov    eax,ds:0x258ca323
  40d687:	jmp    0x86e7:0x43473583
  40d68e:	jle    0x40d631
  40d690:	add    DWORD PTR ds:0x98fb176c,ebp
  40d696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d697:	xchg   DWORD PTR [edx-0x56e28351],eax
  40d69d:	div    BYTE PTR [edx+ebx*4-0x73]
  40d6a1:	jle    0x40d67b
  40d6a3:	fldenv [ecx]
  40d6a5:	cmp    ecx,DWORD PTR [ecx+ecx*4]
  40d6a8:	loope  0x40d6e0
  40d6aa:	mov    al,ds:0x1dc1da2b
  40d6af:	sbb    eax,0x1b7eaf30
  40d6b4:	hlt    
  40d6b5:	lock pop ds
  40d6b7:	cli    
  40d6b8:	ret    
  40d6b9:	jge    0x40d6b5
  40d6bb:	scas   eax,DWORD PTR es:[edi]
  40d6bc:	sub    esp,DWORD PTR [edi+0x40]
  40d6bf:	pop    ebp
  40d6c0:	stos   DWORD PTR es:[edi],eax
  40d6c1:	jl     0x40d65e
  40d6c3:	sbb    DWORD PTR [edi-0x196bf488],0x18
  40d6ca:	mov    esp,es
  40d6cc:	pop    es
  40d6cd:	sub    BYTE PTR [edx-0x53],al
  40d6d0:	test   eax,0xd89e9875
  40d6d5:	add    BYTE PTR [eax],ah
  40d6d7:	(bad)  
  40d6d8:	std    
  40d6d9:	jmp    0xf4799b1
  40d6de:	int    0x12
  40d6e0:	jmp    0x5196bd03
  40d6e5:	cmp    al,BYTE PTR [edx-0x79]
  40d6e8:	pop    esp
  40d6e9:	cmp    DWORD PTR [eax+0x77ee53ed],ebp
  40d6ef:	mov    al,ds:0xf117e76b
  40d6f4:	sbb    eax,0x629e773f
  40d6f9:	add    BYTE PTR [edx-0x24dc83c9],al
  40d6ff:	repz push esi
  40d701:	pop    esp
  40d702:	hlt    
  40d703:	mov    dh,0x4a
  40d705:	mov    al,0x94
  40d707:	and    DWORD PTR [esi+0x1cd37aae],ecx
  40d70d:	sbb    al,0x8a
  40d70f:	btc    DWORD PTR [ebx+0x2ce7ccb8],ebx
  40d716:	cmp    bl,BYTE PTR [eax+ecx*2+0x19500fc4]
  40d71d:	into   
  40d71e:	inc    eax
  40d71f:	(bad)  
  40d721:	dec    edx
  40d722:	mov    esi,esi
  40d724:	out    dx,al
  40d725:	lahf   
  40d726:	popf   
  40d727:	adc    dl,bh
  40d729:	das    
  40d72a:	pop    esi
  40d72b:	test   eax,0xb2db84b4
  40d730:	aas    
  40d731:	repnz loop 0x40d7a5
  40d734:	adc    ecx,DWORD PTR [ebx-0x406a9e94]
  40d73a:	pop    ebx
  40d73b:	dec    edi
  40d73c:	test   al,0x10
  40d73e:	cmp    ebx,DWORD PTR [ebx]
  40d740:	dec    esp
  40d741:	call   0x319db8be
  40d746:	add    BYTE PTR [ebx+0x7f],al
  40d749:	add    eax,0xe7cb2a51
  40d74e:	in     al,dx
  40d74f:	shr    DWORD PTR [ebp-0xe31d0eb],1
  40d755:	mov    ebp,cs
  40d757:	les    esp,FWORD PTR [ebp+ecx*8+0x17]
  40d75b:	fdivrp st(0),st
  40d75d:	mov    ebp,0xc6576c6
  40d762:	inc    esp
  40d763:	inc    BYTE PTR [ecx-0x72]
  40d766:	(bad)  
  40d767:	jns    0x40d7cc
  40d769:	scas   eax,DWORD PTR es:[edi]
  40d76a:	dec    ecx
  40d76b:	xchg   ecx,eax
  40d76c:	aaa    
  40d76d:	pop    eax
  40d76e:	mov    WORD PTR [edi],?
  40d770:	dec    ebx
  40d771:	clc    
  40d772:	test   BYTE PTR [ecx+edi*8-0x7de02567],ch
  40d779:	stos   BYTE PTR es:[edi],al
  40d77a:	xchg   ebx,eax
  40d77b:	imul   ebx,edi,0x6e51567c
  40d781:	mov    cl,0x40
  40d783:	popa   
  40d784:	adc    al,0xf6
  40d786:	push   ebx
  40d787:	test   eax,0x726a0a13
  40d78c:	(bad)  
  40d78d:	fidivr DWORD PTR [ecx+0x6]
  40d790:	je     0x40d788
  40d792:	ins    DWORD PTR es:[edi],dx
  40d793:	stos   BYTE PTR es:[edi],al
  40d794:	xchg   BYTE PTR [ecx+0x5b],ah
  40d797:	push   0x69
  40d799:	and    BYTE PTR [edx+0x76],ah
  40d79c:	test   eax,0xdbf9df72
  40d7a1:	sbb    DWORD PTR [esi-0x15f7a8d6],edx
  40d7a7:	pop    ds
  40d7a8:	jno    0x40d7e3
  40d7aa:	sub    al,0x1b
  40d7ad:	xchg   BYTE PTR [ebx+0x47908165],bh
  40d7b3:	fld    DWORD PTR [ebx+esi*4]
  40d7b6:	pop    esi
  40d7b7:	pop    ds
  40d7b8:	pop    esi
  40d7b9:	repnz dec dl
  40d7bc:	push   ss
  40d7bd:	jmp    0xd703d8a0
  40d7c2:	in     al,0xd6
  40d7c4:	sbb    dh,BYTE PTR [edx]
  40d7c6:	mov    eax,0x96216a31
  40d7cb:	sub    BYTE PTR [esi-0x7f],dl
  40d7ce:	je     0x40d7ef
  40d7d0:	ja     0x40d851
  40d7d2:	jns    0x40d784
  40d7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d5:	jle    0x40d7a7
  40d7d7:	xor    eax,0x9eb0c35
  40d7dc:	ror    ah,cl
  40d7de:	sub    eax,0x66901840
  40d7e3:	and    bl,BYTE PTR [ebx-0x57]
  40d7e6:	adc    ebp,ecx
  40d7e8:	fidivr DWORD PTR [ecx-0x6a]
  40d7eb:	xchg   esi,eax
  40d7ec:	cs js  0x40d7e1
  40d7ef:	mov    bh,BYTE PTR ds:0x946f52d5
  40d7f5:	not    DWORD PTR [edx+esi*8-0x13fe077f]
  40d7fc:	push   edx
  40d7fd:	cld    
  40d7fe:	arpl   WORD PTR [esi+edi*2-0x139d3816],dx
  40d805:	daa    
  40d806:	jnp    0x40d7c6
  40d808:	jae    0x40d7c5
  40d80a:	rcl    BYTE PTR [bx+di-0x5ebd],cl
  40d80f:	adc    DWORD PTR [edi],0x20
  40d812:	push   eax
  40d813:	add    ecx,0xffffffab
  40d816:	jg     0x40d81b
  40d818:	call   0x2e96:0x30a96d60
  40d81f:	push   ss
  40d820:	sub    al,0x63
  40d822:	sar    eax,0xc9
  40d825:	inc    edi
  40d826:	call   0xfb6d:0x3aba37aa
  40d82d:	adc    cl,BYTE PTR [ebx]
  40d82f:	push   ebx
  40d830:	inc    ecx
  40d831:	xchg   ebx,eax
  40d832:	cs enter 0x902e,0x49
  40d837:	(bad)  
  40d838:	sahf   
  40d839:	lods   eax,DWORD PTR ds:[esi]
  40d83a:	jb     0x40d7d3
  40d83c:	jae    0x40d8bd
  40d83e:	inc    ebp
  40d83f:	sub    dh,0xef
  40d842:	aaa    
  40d843:	inc    esp
  40d844:	enter  0x41bd,0xbb
  40d848:	fninit 
  40d84a:	mov    BYTE PTR [ebp+0x263de950],dl
  40d850:	xlat   BYTE PTR ds:[ebx]
  40d851:	retf   
  40d852:	dec    ebx
  40d853:	fcmovnbe st,st(0)
  40d855:	xor    BYTE PTR [ecx-0x2a410d50],dh
  40d85b:	cmp    cl,dh
  40d85d:	push   ecx
  40d85e:	jge    0x40d8d5
  40d860:	loop   0x40d806
  40d862:	retf   
  40d863:	imul   edi,DWORD PTR [edi-0x64c40794],0xffffff83
  40d86a:	inc    esi
  40d86b:	ja     0x40d8a7
  40d86d:	xor    eax,0xad2f2154
  40d872:	adc    eax,0xfb4bd601
  40d877:	test   al,0x58
  40d879:	jbe    0x40d837
  40d87b:	popa   
  40d87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d87d:	cmp    al,0x13
  40d880:	cwde   
  40d881:	jne    0x40d85f
  40d883:	lock (bad) 
  40d885:	loop   0x40d8ee
  40d887:	dec    ebx
  40d888:	jne    0x40d8a3
  40d88a:	pop    ebp
  40d88b:	sar    DWORD PTR [ebp-0x7a26610c],1
  40d891:	(bad)  
  40d893:	jne    0x40d8fb
  40d895:	push   ebp
  40d896:	es ret 0xceb6
  40d89a:	fisttp WORD PTR [ecx+eax*2+0x3ea1b717]
  40d8a1:	push   ebx
  40d8a2:	pop    es
  40d8a3:	push   edi
  40d8a4:	fild   WORD PTR [ecx-0x14ae9104]
  40d8aa:	test   al,0xff
  40d8ac:	jno    0x40d832
  40d8ae:	adc    ebx,esi
  40d8b0:	fidiv  WORD PTR [ecx-0x77e0ca07]
  40d8b6:	outs   dx,BYTE PTR ds:[esi]
  40d8b7:	pusha  
  40d8b8:	repz cmp DWORD PTR [edx+eiz*4+0x5a2f0da6],0x48
  40d8c1:	das    
  40d8c2:	cs xchg BYTE PTR ds:[ebp-0xf45f9b6],ch
  40d8ca:	pop    ebp
  40d8cb:	leave  
  40d8cc:	fwait
  40d8cd:	ds jmp 0x77df8b8c
  40d8d3:	stos   BYTE PTR es:[edi],al
  40d8d4:	add    DWORD PTR [esi+0x3],0xffffffd1
  40d8d8:	adc    al,0xe4
  40d8da:	(bad)  
  40d8db:	pop    ecx
  40d8dc:	jmp    0x4395aa83
  40d8e1:	inc    ebp
  40d8e2:	jmp    0x4d0102a1
  40d8e7:	mov    eax,ds:0x4996223
  40d8ec:	stos   BYTE PTR es:[edi],al
  40d8ed:	push   edx
  40d8ee:	addr16 push ds
  40d8f0:	pop    esp
  40d8f1:	fnstcw WORD PTR [edx-0x36]
  40d8f4:	aas    
  40d8f5:	mov    edx,0x69a790f4
  40d8fa:	imul   BYTE PTR [ecx]
  40d8fc:	shl    edx,cl
  40d8fe:	mov    ah,0xaf
  40d900:	pushf  
  40d901:	jae    0x40d894
  40d903:	push   0x36
  40d905:	aad    0x43
  40d907:	mov    ch,BYTE PTR [eax]
  40d909:	rcl    DWORD PTR [ebx+0x7dfd5e5e],0x50
  40d910:	push   ecx
  40d911:	daa    
  40d912:	cmp    eax,ebx
  40d914:	ins    DWORD PTR es:[edi],dx
  40d915:	push   0x9415bb74
  40d91a:	ret    
  40d91b:	jne    0x40d938
  40d91d:	push   ss
  40d91e:	and    edx,ebx
  40d920:	aas    
  40d921:	aad    0x30
  40d923:	shr    dl,1
  40d925:	int3   
  40d926:	pop    esi
  40d927:	hlt    
  40d928:	retf   0x7d74
  40d92b:	cmp    al,0x7c
  40d92d:	std    
  40d92e:	mov    ecx,0xdd23ffff
  40d933:	xchg   edi,eax
  40d934:	adc    al,0x19
  40d936:	cmp    al,0x95
  40d938:	xchg   esi,eax
  40d939:	call   0x6201:0xc9ab2c78
  40d940:	sbb    eax,esp
  40d942:	sub    BYTE PTR [ecx],dl
  40d944:	repnz pop eax
  40d946:	(bad)  
  40d947:	jne    0x40d8d2
  40d949:	push   edi
  40d94a:	mov    al,0xde
  40d94c:	jo     0x40d946
  40d94e:	mov    ebp,0x6a0b5ba1
  40d953:	fst    QWORD PTR es:[eax+0x6833b8d3]
  40d95a:	jo     0x40d93b
  40d95c:	jno    0x40d91e
  40d95e:	jp     0x40d99e
  40d960:	mov    ah,al
  40d962:	mov    ch,0xe1
  40d964:	dec    esi
  40d965:	xor    eax,0x41fa6e6e
  40d96a:	sub    eax,esp
  40d96c:	mov    bl,0xcc
  40d96e:	inc    ebp
  40d96f:	int3   
  40d970:	loope  0x40d9bf
  40d972:	into   
  40d973:	cmp    DWORD PTR [ecx-0x6c4774e7],ebp
  40d979:	xor    ch,BYTE PTR [esi]
  40d97b:	rcl    BYTE PTR [ecx-0x1e],0xdb
  40d97f:	mov    esi,0xf3a380bf
  40d984:	iret   
  40d985:	data16 lods al,BYTE PTR ds:[esi]
  40d987:	cmp    BYTE PTR fs:[eax],dl
  40d98a:	pop    ebx
  40d98b:	sub    ah,BYTE PTR [edx+ebx*2]
  40d98e:	and    dl,BYTE PTR [ecx]
  40d990:	or     bl,BYTE PTR [edi]
  40d992:	leave  
  40d993:	push   ecx
  40d994:	xchg   ecx,eax
  40d995:	and    al,0xc8
  40d997:	mov    cl,0x47
  40d999:	shl    BYTE PTR ds:0xc5859755,0x65
  40d9a0:	sub    bl,BYTE PTR [ecx+0x790476e9]
  40d9a6:	lds    edi,FWORD PTR [ebx-0x6d]
  40d9a9:	iret   
  40d9aa:	shl    DWORD PTR [edx-0x31ac7d31],0x5f
  40d9b1:	hlt    
  40d9b2:	sub    BYTE PTR gs:[edi+0x38],ch
  40d9b6:	loope  0x40d998
  40d9b8:	inc    ebp
  40d9b9:	aam    0x9c
  40d9bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9bc:	mov    al,ds:0xde2a5b8b
  40d9c1:	and    BYTE PTR [edx+0x71e1ddf],al
  40d9c7:	push   ebx
  40d9c8:	into   
  40d9c9:	mov    eax,0xc3b39b11
  40d9ce:	les    ebp,FWORD PTR [esi+esi*2+0x6649084d]
  40d9d5:	add    al,0x79
  40d9d7:	fwait
  40d9d8:	jmp    0x5090:0xde4a688d
  40d9df:	shl    BYTE PTR [ebp-0x6d7e2e26],cl
  40d9e5:	cmp    ah,ch
  40d9e7:	out    0x85,eax
  40d9e9:	or     eax,0xad1541af
  40d9ee:	cwde   
  40d9ef:	inc    esp
  40d9f0:	popa   
  40d9f1:	loop   0x40d9e2
  40d9f3:	stos   DWORD PTR es:[edi],eax
  40d9f4:	adc    BYTE PTR [ecx],ch
  40d9f6:	fucomp st(3)
  40d9f8:	adc    BYTE PTR [ebx+0x42],ah
  40d9fb:	mov    DWORD PTR [edx+0x78efcdb1],edx
  40da01:	scas   eax,DWORD PTR es:[edi]
  40da02:	mov    edi,0xfacc918
  40da07:	enter  0x2ba3,0x5f
  40da0b:	enter  0x696d,0xca
  40da0f:	pop    es
  40da10:	mov    sp,0x69f
  40da14:	sbb    bl,BYTE PTR [edx+0x5cc00c2d]
  40da1a:	out    dx,al
  40da1b:	pop    esp
  40da1c:	mov    esi,0xfbba8270
  40da21:	jecxz  0x40da32
  40da23:	cmp    eax,0xb8dfa066
  40da28:	ret    
  40da29:	jle    0x40da87
  40da2b:	xchg   esi,eax
  40da2c:	out    0xc,al
  40da2e:	mov    ebp,ebp
  40da30:	sub    BYTE PTR [eax],dl
  40da32:	sahf   
  40da33:	out    dx,eax
  40da34:	sbb    al,0xaf
  40da36:	rol    BYTE PTR [edx],0xfc
  40da39:	mul    BYTE PTR [esp+0x7d3d9fee]
  40da40:	nop
  40da41:	shl    DWORD PTR [ecx-0x5cd4bec0],cl
  40da47:	jle    0x40da54
  40da49:	addr16 int3 
  40da4b:	jnp    0x40daa1
  40da4d:	(bad)  
  40da4e:	ds loop 0x40da45
  40da51:	and    dl,BYTE PTR [ecx+0x36]
  40da54:	add    eax,0x8ea90f5c
  40da59:	jo     0x40da2f
  40da5b:	adc    al,0x67
  40da5d:	cmp    ah,BYTE PTR ds:[eax]
  40da60:	xchg   edi,eax
  40da61:	pop    es
  40da62:	loopne 0x40da94
  40da64:	pop    ebp
  40da65:	int    0x8f
  40da67:	call   0xbd23f3dc
  40da6c:	xor    DWORD PTR [ebx],0x918337f7
  40da72:	push   ss
  40da73:	jle    0x40da6a
  40da75:	sub    al,0x9f
  40da77:	or     BYTE PTR [edi+0x54],0xb0
  40da7b:	aam    0xb3
  40da7d:	bound  eax,QWORD PTR [ecx]
  40da7f:	retf   
  40da80:	mov    al,ds:0xccbffab6
  40da85:	sbb    ebp,DWORD PTR [edx+0x3b1b21c0]
  40da8b:	out    0xb0,al
  40da8d:	pop    ecx
  40da8e:	(bad)  
  40da8f:	rol    BYTE PTR [eax],0x9d
  40da92:	out    0xae,al
  40da94:	push   DWORD PTR [ebx+0x276acd9f]
  40da9a:	mov    edi,0x136be141
  40da9f:	xor    al,0xfc
  40daa1:	fisubr WORD PTR [eax]
  40daa3:	ins    DWORD PTR es:[edi],dx
  40daa4:	inc    eax
  40daa5:	push   esi
  40daa6:	cwde   
  40daa7:	pop    esi
  40daa8:	inc    edx
  40daa9:	push   ebx
  40daaa:	jno    0x40da4b
  40daac:	sub    DWORD PTR [ebp+0x60],esp
  40daaf:	or     ebx,DWORD PTR [esi+0x1c42310e]
  40dab5:	push   es
  40dab6:	mov    esp,0x6593671b
  40dabb:	xor    DWORD PTR [edx-0x48163b20],esp
  40dac1:	lods   al,BYTE PTR ds:[esi]
  40dac2:	jnp    0x40db1e
  40dac4:	ror    BYTE PTR [ebx+0x46],cl
  40dac7:	mov    ds:0x6ea3a2b3,eax
  40dacc:	das    
  40dacd:	cmp    eax,0x2f9c21aa
  40dad2:	dec    eax
  40dad3:	js     0x40da64
  40dad5:	rcr    BYTE PTR [ecx+0x75a35db6],0x3b
  40dadc:	and    edi,ebp
  40dade:	std    
  40dadf:	test   dh,bl
  40dae1:	shr    eax,cl
  40dae3:	cmp    ebp,DWORD PTR [esi+0x9291303]
  40dae9:	sbb    al,0x44
  40daeb:	rcr    DWORD PTR [esp+ebp*2+0x3174d64],cl
  40daf2:	cmp    ebp,DWORD PTR [edx-0x4a6dd05e]
  40daf8:	inc    eax
  40daf9:	sbb    DWORD PTR [ebx-0x2d],edx
  40dafc:	adc    al,0xb6
  40dafe:	mov    eax,ds:0xc3bcfb73
  40db03:	sub    esp,DWORD PTR [edi]
  40db05:	arpl   WORD PTR [ebx+esi*8],si
  40db08:	xchg   DWORD PTR [esi+0x6255fee7],ebx
  40db0e:	pop    edx
  40db0f:	xor    al,BYTE PTR [bx]
  40db12:	in     al,dx
  40db13:	shl    cl,0x38
  40db16:	mov    ebp,0x5b89282a
  40db1b:	xor    dh,BYTE PTR [ecx]
  40db1d:	sbb    DWORD PTR [eax+edi*8],ebx
  40db20:	inc    edi
  40db21:	add    BYTE PTR [esi],ch
  40db23:	ret    
  40db24:	push   0xffffffd5
  40db26:	dec    ebp
  40db27:	or     BYTE PTR [ebx-0x28],ch
  40db2a:	loopne 0x40db35
  40db2c:	jbe    0x40db10
  40db2e:	push   ds
  40db2f:	inc    ecx
  40db30:	jne    0x40db53
  40db32:	xor    ebx,edx
  40db34:	mov    dl,0xf2
  40db36:	aam    0xd7
  40db38:	and    cl,BYTE PTR [eax]
  40db3a:	popf   
  40db3b:	jo     0x3662cc3c
  40db41:	mov    edi,0xb811c07a
  40db46:	lock push ds
  40db48:	mov    ch,0xa2
  40db4a:	mov    ebx,0x2b4195f3
  40db4f:	inc    ebp
  40db50:	ins    DWORD PTR es:[edi],dx
  40db51:	mov    ebx,0x91cc66ed
  40db56:	(bad)  
  40db57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db58:	add    BYTE PTR [esi-0x1f],ah
  40db5b:	jne    0x40db48
  40db5d:	inc    ebx
  40db5e:	jmp    DWORD PTR [esi+0x3]
  40db61:	shr    BYTE PTR [ebp+0xf],0x85
  40db65:	and    esp,DWORD PTR [esi+ecx*2-0x54]
  40db69:	or     BYTE PTR [eax],al
  40db6b:	xchg   BYTE PTR [esp+edx*8-0x70],bl
  40db6f:	pusha  
  40db70:	inc    ecx
  40db71:	mov    dl,0x2b
  40db73:	push   es
  40db74:	mov    bl,0x8e
  40db76:	mov    esp,0xa037a1a1
  40db7b:	cmp    al,0x83
  40db7d:	push   eax
  40db7e:	ja     0x40db35
  40db80:	mov    ebp,0xf967cb92
  40db85:	jmp    0xfad7ab10
  40db8a:	arpl   WORD PTR [edx],cx
  40db8c:	lds    eax,FWORD PTR [esp+edx*4+0x59ac9029]
  40db93:	call   0x6991:0x98dc7186
  40db9a:	test   DWORD PTR [esi],ebp
  40db9c:	and    ch,BYTE PTR [eax+0x15]
  40db9f:	mov    ecx,0xb7e07eb7
  40dba4:	icebp  
  40dba5:	inc    ebx
  40dba6:	fst    QWORD PTR [esi+0xd1413e]
  40dbac:	cmp    BYTE PTR [ebp+edx*4-0x677a48dc],dh
  40dbb3:	aas    
  40dbb4:	scas   eax,DWORD PTR es:[edi]
  40dbb5:	ins    DWORD PTR es:[edi],dx
  40dbb6:	ret    0x380c
  40dbb9:	push   ds
  40dbba:	fisubr WORD PTR [esi+0x7b]
  40dbbd:	ja     0x40db91
  40dbbf:	mov    ds:0xa15e2291,eax
  40dbc4:	dec    ebx
  40dbc5:	mov    eax,0xc6a4b707
  40dbca:	das    
  40dbcb:	dec    ecx
  40dbcc:	test   DWORD PTR [edx+ebp*1],eax
  40dbcf:	fs aas 
  40dbd1:	adc    al,0x19
  40dbd3:	inc    ebp
  40dbd4:	ret    
  40dbd5:	and    ebx,esi
  40dbd7:	mov    eax,ds:0xb7d84811
  40dbdc:	lods   al,BYTE PTR ds:[esi]
  40dbdd:	imul   edi,DWORD PTR [ebp-0xdaddfb0],0xdb690bbc
  40dbe7:	shl    BYTE PTR [ebp-0x551bd00e],0xa1
  40dbee:	inc    edi
  40dbef:	pop    ebx
  40dbf0:	pushf  
  40dbf1:	mov    ss:0x45a66dc7,eax
  40dbf7:	sub    ebx,DWORD PTR [edx]
  40dbf9:	pushf  
  40dbfa:	xchg   ebp,eax
  40dbfb:	stos   BYTE PTR es:[edi],al
  40dbfc:	xchg   esi,eax
  40dbfd:	sbb    al,0x84
  40dbff:	loopne 0x40dbf8
  40dc01:	int    0x3f
  40dc03:	sub    al,0x5b
  40dc05:	jo     0x40dbc6
  40dc07:	or     eax,0xcb7586a8
  40dc0c:	int3   
  40dc0d:	mov    ebp,0xdf67dabd
  40dc12:	sub    ecx,DWORD PTR [ebx+0x50c55082]
  40dc18:	cmp    bl,al
  40dc1a:	lods   al,BYTE PTR ds:[esi]
  40dc1b:	out    dx,al
  40dc1c:	lds    esi,FWORD PTR [edx+0x6528eb7]
  40dc22:	xchg   ebp,eax
  40dc23:	mov    esp,DWORD PTR [edi]
  40dc25:	fadd   QWORD PTR [ecx]
  40dc27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc28:	sub    DWORD PTR [ecx+ecx*8-0x6d24d13],ecx
  40dc2f:	push   ebx
  40dc30:	popa   
  40dc31:	xchg   ecx,eax
  40dc32:	mov    dh,0xb6
  40dc34:	jb     0x40dc85
  40dc36:	(bad)  
  40dc37:	jmp    0xd015:0x529d412
  40dc3e:	mov    al,ds:0x74099115
  40dc43:	and    al,0xa2
  40dc45:	test   eax,0x20b6d996
  40dc4a:	inc    eax
  40dc4b:	or     al,0x71
  40dc4d:	call   0xccaf1f4b
  40dc52:	cs sbb bl,0xe4
  40dc56:	jge    0x40dc0c
  40dc58:	jmp    0x231e:0xb28710da
  40dc5f:	cdq    
  40dc60:	fstp   QWORD PTR [ebx-0x590d18d0]
  40dc66:	cmp    BYTE PTR [edx+0x62],dh
  40dc69:	lods   eax,DWORD PTR ds:[esi]
  40dc6a:	add    BYTE PTR [ebp-0x36a21dd],ch
  40dc70:	adc    ecx,DWORD PTR [eax-0x5dfe9017]
  40dc76:	jle    0x40dcb8
  40dc78:	fs push edx
  40dc7a:	jo     0x40dc44
  40dc7c:	fsubp  st(6),st
  40dc7e:	cdq    
  40dc7f:	dec    edi
  40dc80:	adc    al,0xc4
  40dc82:	neg    DWORD PTR [esi]
  40dc84:	cwde   
  40dc85:	mov    esi,0xb4049236
  40dc8a:	repz push eax
  40dc8c:	enter  0x66e6,0x25
  40dc90:	jo     0x40dc9e
  40dc92:	and    BYTE PTR [ebx-0xf3d10a8],0x61
  40dc99:	jg     0x40dc93
  40dc9b:	(bad)  
  40dc9c:	mov    al,ds:0xae8599ed
  40dca1:	loop   0x40dcf7
  40dca3:	fcom   QWORD PTR ds:0xc6fceeae
  40dca9:	cmp    bl,bl
  40dcab:	cmp    BYTE PTR [ecx-0xb],al
  40dcae:	mov    al,ds:0x3bfbbfa0
  40dcb3:	adc    DWORD PTR [esp+esi*4],ebx
  40dcb6:	mov    ch,0xfb
  40dcb8:	pop    eax
  40dcb9:	cmp    eax,0xc2e3f995
  40dcbe:	test   BYTE PTR [esi],0x8a
  40dcc1:	into   
  40dcc2:	mov    ebp,ecx
  40dcc4:	push   ebx
  40dcc5:	cmp    eax,0x1ca0645b
  40dcca:	push   es
  40dccb:	sar    DWORD PTR [esi-0x6505de33],cl
  40dcd1:	mov    al,0x6
  40dcd3:	popa   
  40dcd4:	sahf   
  40dcd5:	mov    ds,WORD PTR [edi-0x7e]
  40dcd8:	out    0xa1,eax
  40dcda:	jmp    0xd397:0xce61d74c
  40dce1:	(bad)  [eax-0x6b]
  40dce4:	mov    ds:0x23d4a759,eax
  40dce9:	ins    DWORD PTR es:[edi],dx
  40dcea:	(bad)  
  40dceb:	pop    edx
  40dcec:	add    DWORD PTR [ebp+ecx*2+0x53],ebx
  40dcf0:	int    0x3a
  40dcf2:	repnz mov cl,0xb8
  40dcf5:	and    eax,0x477dd78f
  40dcfa:	push   0xfffffff1
  40dcfc:	or     ebx,eax
  40dcfe:	cmp    ch,ch
  40dd00:	in     al,dx
  40dd01:	cdq    
  40dd02:	test   DWORD PTR [edx],0x75a7fbb4
  40dd08:	sbb    eax,0x427175cf
  40dd0d:	dec    edx
  40dd0e:	bound  edi,QWORD PTR [edx]
  40dd10:	push   ecx
  40dd11:	pushf  
  40dd12:	mov    ds:0xa6a18da9,al
  40dd17:	cs call 0xf9a8:0xcbadf7e8
  40dd1f:	enter  0x1382,0x4b
  40dd23:	mov    ecx,0x3a0d368
  40dd28:	leave  
  40dd29:	add    BYTE PTR [eax+0x41],dh
  40dd2c:	aad    0x62
  40dd2e:	pop    esi
  40dd2f:	xor    DWORD PTR [edx+edx*8-0x6],0x34
  40dd34:	xchg   ecx,eax
  40dd35:	lods   eax,DWORD PTR ds:[esi]
  40dd36:	ret    
  40dd37:	and    DWORD PTR [esi+edi*1-0x3e5c055a],eax
  40dd3e:	pop    ds
  40dd3f:	and    BYTE PTR [ebx+ecx*2-0xaf1e1a9],cl
  40dd46:	loop   0x40dd49
  40dd48:	adc    ah,cl
  40dd4a:	push   ecx
  40dd4b:	pop    ds
  40dd4c:	nop
  40dd4d:	jl     0x40dd63
  40dd4f:	jb     0x40dce0
  40dd51:	imul   eax,DWORD PTR [esi+ebx*1],0xb39f9e89
  40dd58:	out    dx,eax
  40dd59:	xchg   esp,eax
  40dd5a:	xor    esp,DWORD PTR [ebx+ebx*1-0x3ab7967c]
  40dd61:	xor    dh,BYTE PTR [ecx+0x51]
  40dd64:	push   0xab71d196
  40dd69:	and    DWORD PTR [esi],0x56f64574
  40dd6f:	mov    ds:0xaee39d03,eax
  40dd74:	dec    esi
  40dd75:	mov    edi,0xd1a550ab
  40dd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7b:	cli    
  40dd7c:	xchg   ah,dl
  40dd7e:	sbb    eax,0xe0f486c5
  40dd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd84:	push   edx
  40dd85:	sbb    BYTE PTR [eax+0x31],dh
  40dd88:	aad    0x64
  40dd8a:	test   BYTE PTR ss:[ebx],bl
  40dd8d:	dec    edx
  40dd8e:	or     dh,BYTE PTR [esi-0x79]
  40dd91:	cmc    
  40dd92:	push   ecx
  40dd93:	inc    eax
  40dd94:	mov    ds:0x17e1b1c,al
  40dd99:	shr    ebp,cl
  40dd9b:	sahf   
  40dd9c:	jp     0x40dd27
  40dd9e:	jp     0x40ddca
  40dda0:	ins    BYTE PTR es:[edi],dx
  40dda1:	cdq    
  40dda2:	push   edx
  40dda3:	push   eax
  40dda4:	outs   dx,BYTE PTR ds:[esi]
  40dda5:	mov    ds:0x878d6c6c,al
  40ddaa:	pop    ds
  40ddab:	dec    edx
  40ddac:	shl    DWORD PTR [ecx-0x59],cl
  40ddaf:	nop
  40ddb0:	aad    0x9e
  40ddb2:	pusha  
  40ddb3:	stos   BYTE PTR es:[edi],al
  40ddb4:	pop    ds
  40ddb5:	(bad)  
  40ddb6:	frstor [edx+0xb3fcb0a]
  40ddbc:	pop    esp
  40ddbd:	aas    
  40ddbe:	add    eax,0x7fee62d4
  40ddc3:	sbb    ebx,eax
  40ddc5:	xchg   ecx,eax
  40ddc6:	inc    edi
  40ddc7:	into   
  40ddc8:	push   esp
  40ddc9:	cmp    bl,BYTE PTR ds:0x9d309583
  40ddcf:	mov    ebx,ebx
  40ddd1:	das    
  40ddd2:	cli    
  40ddd3:	mov    ebp,0x192fe8ca
  40ddd8:	cdq    
  40ddd9:	in     al,0xe
  40dddb:	push   esp
  40dddc:	loope  0x40ddf5
  40ddde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dddf:	cdq    
  40dde0:	sub    al,al
  40dde2:	sti    
  40dde3:	dec    DWORD PTR [edi]
  40dde5:	ja     0x40de3f
  40dde7:	shr    DWORD PTR [esi],0x9c
  40ddea:	cmc    
  40ddeb:	daa    
  40ddec:	cli    
  40dded:	xor    eax,0xbbcf3961
  40ddf2:	mov    esi,0x347f8aa0
  40ddf7:	mov    dh,0x99
  40ddf9:	xchg   edi,eax
  40ddfa:	or     eax,0x6d8dc777
  40ddff:	push   es
  40de00:	aam    0xc0
  40de02:	sub    ch,BYTE PTR [ebp-0x3e2bc259]
  40de08:	dec    ebp
  40de09:	ins    DWORD PTR es:[edi],dx
  40de0a:	cmp    BYTE PTR [esi+0x6d7a219b],0xfc
  40de11:	xor    DWORD PTR [ebx],edx
  40de13:	xchg   ecx,eax
  40de14:	and    ebp,esp
  40de16:	popf   
  40de17:	lea    edi,[edx*2-0x87e04fc]
  40de1e:	jb     0x40ddfa
  40de20:	and    ecx,edi
  40de22:	clc    
  40de23:	or     bl,BYTE PTR [ecx+0x4af200ed]
  40de29:	or     al,0xd9
  40de2b:	dec    esi
  40de2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de2d:	push   es
  40de2e:	into   
  40de2f:	shl    BYTE PTR [edi],0xf
  40de32:	test   eax,0x6df48de
  40de37:	inc    ecx
  40de38:	push   ebp
  40de39:	(bad)  
  40de3b:	lods   eax,DWORD PTR ds:[esi]
  40de3c:	jnp    0x40de42
  40de3e:	lahf   
  40de3f:	mul    BYTE PTR [esi+0x48e134a6]
  40de45:	mov    esi,gs
  40de47:	dec    eax
  40de48:	mov    esp,ebx
  40de4a:	push   0xb93cb1ea
  40de4f:	pop    edx
  40de50:	adc    eax,0x7ca737
  40de55:	jge    0x40de45
  40de57:	jne    0x40de99
  40de59:	lock mov WORD PTR [ecx+0x2a],?
  40de5d:	sub    BYTE PTR [edx+eax*2-0x571cfb87],ah
  40de64:	and    dh,dh
  40de66:	push   es
  40de67:	push   ebp
  40de68:	xchg   edx,eax
  40de69:	push   ds
  40de6a:	arpl   WORD PTR ds:0x38a848a4,bp
  40de70:	and    al,0x2d
  40de72:	outs   dx,BYTE PTR ds:[esi]
  40de73:	retf   
  40de74:	pop    esp
  40de75:	inc    eax
  40de76:	inc    esi
  40de77:	jb     0x40de16
  40de79:	ror    BYTE PTR [edi-0x5f],cl
  40de7c:	xchg   edi,eax
  40de7d:	sbb    ecx,DWORD PTR [esi+ecx*4-0x2c]
  40de81:	(bad)  
  40de82:	cmp    esp,DWORD PTR [ecx+0x24]
  40de85:	jb     0x40de2f
  40de87:	cmp    edx,esp
  40de89:	popf   
  40de8a:	scas   eax,DWORD PTR es:[edi]
  40de8b:	jle    0x40de40
  40de8d:	push   0x29baacb9
  40de92:	data16 (bad) 
  40de95:	and    ax,0xbbf9
  40de99:	inc    esp
  40de9a:	pop    es
  40de9b:	cdq    
  40de9c:	lods   al,BYTE PTR ds:[esi]
  40de9d:	(bad)  [eax]
  40de9f:	outs   dx,BYTE PTR ds:[esi]
  40dea0:	add    DWORD PTR [esi+0x63],0xaec703a0
  40dea7:	mov    DWORD PTR [ecx+ebp*4],ebp
  40deaa:	leave  
  40deab:	nop
  40deac:	mov    al,0xbc
  40deae:	daa    
  40deaf:	in     al,dx
  40deb0:	jb     0x40def4
  40deb2:	dec    esp
  40deb3:	retf   0xce8c
  40deb6:	inc    ebx
  40deb7:	add    dl,BYTE PTR [eax+eiz*2-0x51]
  40debb:	xchg   edi,eax
  40debc:	or     dh,BYTE PTR [edi+0x66]
  40debf:	jns    0x40de43
  40dec1:	jecxz  0x40de81
  40dec3:	push   ebx
  40dec4:	mov    edi,DWORD PTR [ecx+0x29e3c673]
  40deca:	fimul  DWORD PTR [eax+0x5d840e98]
  40ded0:	cwde   
  40ded1:	and    DWORD PTR [edi+eiz*2],esp
  40ded4:	js     0x40defa
  40ded6:	adc    edx,eax
  40ded8:	sbb    BYTE PTR [ebp+0x4a],0x3b
  40dedc:	mov    edx,0xa1a7e424
  40dee1:	mov    esi,DWORD PTR [edi-0x25]
  40dee4:	xor    DWORD PTR [esi-0x5a],edx
  40dee7:	test   DWORD PTR [eax],edx
  40dee9:	xchg   edi,eax
  40deea:	xor    eax,0xaf8209b3
  40deef:	adc    eax,DWORD PTR [edi-0x61936605]
  40def5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40def6:	and    BYTE PTR [esi-0x5aeb00f3],0xac
  40defd:	jae    0x40de86
  40deff:	sub    cl,ch
  40df01:	push   es
  40df02:	xor    ah,BYTE PTR [esp+esi*1+0xf]
  40df06:	mov    esi,DWORD PTR fs:[ebp-0x14]
  40df0a:	mov    ebx,0xd0221e89
  40df0f:	clc    
  40df10:	mov    bh,0x20
  40df12:	fstp   QWORD PTR [esp+ebp*4+0x4ec67761]
  40df19:	mov    fs,edi
  40df1b:	jg     0x40df34
  40df1d:	in     al,0x5a
  40df1f:	outs   dx,DWORD PTR ds:[esi]
  40df20:	data16 ficom WORD PTR [edi+0x10]
  40df24:	repz cmp BYTE PTR [eax+0x1],bl
  40df28:	mov    BYTE PTR [edi+0x11],bl
  40df2b:	add    bh,cl
  40df2d:	das    
  40df2e:	int3   
  40df2f:	or     dh,BYTE PTR [ebx]
  40df31:	aas    
  40df32:	setp   BYTE PTR [ebx+0x14]
  40df36:	push   0x1f
  40df38:	out    dx,eax
  40df39:	sub    eax,0xa3769761
  40df3e:	cdq    
  40df3f:	push   eax
  40df40:	and    eax,0x563a92fe
  40df45:	into   
  40df46:	jp     0x40df9b
  40df48:	add    al,0x1c
  40df4a:	pushf  
  40df4b:	js     0x40df51
  40df4d:	mov    dl,0xfe
  40df4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df50:	(bad)  
  40df51:	ficom  DWORD PTR [edx+ecx*2+0x53]
  40df55:	mov    eax,0xf5c1f389
  40df5a:	pop    es
  40df5b:	les    edi,FWORD PTR [ebx-0x5a3f524e]
  40df61:	js     0x40dfba
  40df63:	adc    DWORD PTR [eax-0x67],ebp
  40df66:	lds    esp,FWORD PTR [edi+edi*4]
  40df69:	sub    bh,al
  40df6b:	js     0x40df2b
  40df6d:	lds    edi,FWORD PTR ds:0xb78f0675
  40df73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df74:	and    esi,ebx
  40df76:	cdq    
  40df77:	lods   al,BYTE PTR ds:[esi]
  40df78:	retf   0xa18b
  40df7b:	xor    bl,dl
  40df7d:	iret   
  40df7e:	out    0xd9,eax
  40df80:	rcl    BYTE PTR [ebx+edx*2-0x5c],1
  40df84:	xchg   ebx,eax
  40df85:	leave  
  40df86:	cld    
  40df87:	dec    ebx
  40df88:	mov    BYTE PTR [edx],ch
  40df8a:	push   ebp
  40df8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df8c:	pop    esp
  40df8d:	aad    0xd8
  40df8f:	mov    WORD PTR [edi],ds
  40df91:	inc    ebp
  40df92:	mov    dl,0xee
  40df94:	sar    DWORD PTR [ebp+0xab6d439],cl
  40df9a:	xchg   ebx,eax
  40df9b:	adc    eax,0x95507bd1
  40dfa0:	xchg   edi,eax
  40dfa1:	xchg   ecx,eax
  40dfa2:	div    DWORD PTR [eax+0x1e]
  40dfa5:	out    0xb1,eax
  40dfa7:	sub    DWORD PTR [edx-0x7e],ebp
  40dfaa:	push   ebp
  40dfab:	cmc    
  40dfac:	pop    edi
  40dfad:	sbb    ch,BYTE PTR [ebx+0x28a49616]
  40dfb3:	repz cmovs ecx,DWORD PTR [edx]
  40dfb7:	xrelease xchg BYTE PTR ds:0x53723a59,dl
  40dfbe:	je     0x40e003
  40dfc0:	ins    DWORD PTR es:[edi],dx
  40dfc1:	(bad)  
  40dfc2:	loop   0x40e014
  40dfc4:	add    eax,0x7936fd58
  40dfc9:	jmp    0xd09d8b91
  40dfce:	pop    esi
  40dfcf:	xor    BYTE PTR [edi-0x43be250d],0x3c
  40dfd6:	xlat   BYTE PTR ds:[ebx]
  40dfd7:	jo     0x40df6b
  40dfd9:	aad    0xfd
  40dfdb:	mov    gs,esp
  40dfdd:	pop    ds
  40dfde:	adc    al,0x8f
  40dfe1:	shl    DWORD PTR es:[bp+si],cl
  40dfe5:	xchg   edx,eax
  40dfe6:	frstor [edx+esi*2-0x1263d55]
  40dfed:	push   eax
  40dfee:	arpl   WORD PTR [ecx-0x17],dx
  40dff1:	push   esp
  40dff2:	mov    ah,0x11
  40dff4:	scas   al,BYTE PTR es:[edi]
  40dff5:	sahf   
  40dff6:	sti    
  40dff7:	pop    es
  40dff8:	add    al,0xa7
  40dffa:	xchg   edi,eax
  40dffb:	pusha  
  40dffc:	call   0x24d655e5
  40e001:	ds dec ebp
  40e003:	cld    
  40e004:	(bad)  
  40e005:	pushf  
  40e006:	cmp    bh,BYTE PTR [edx-0x4468c81b]
  40e00c:	sbb    al,0xce
  40e00e:	xchg   edx,eax
  40e00f:	cmc    
  40e010:	imul   esp,DWORD PTR [ebx+ecx*4],0x40
  40e014:	or     BYTE PTR [edi+0x75773d96],0x30
  40e01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01c:	jp     0x40dfd0
  40e01e:	les    ebx,FWORD PTR [eax+0x43]
  40e021:	(bad)  
  40e022:	daa    
  40e023:	xlat   BYTE PTR ds:[ebx]
  40e024:	xor    eax,0x82a38ed9
  40e029:	(bad)  
  40e02a:	aad    0x95
  40e02c:	mov    al,0x1b
  40e02e:	fwait
  40e02f:	cmp    BYTE PTR [eax-0x6a],ch
  40e032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e033:	add    al,0x9a
  40e035:	test   eax,0x2de0da15
  40e03a:	mov    edi,0x2c324dde
  40e03f:	mov    ecx,0xf5eb75e1
  40e044:	xchg   ecx,eax
  40e045:	pop    esp
  40e046:	(bad)  
  40e047:	ja     0x40e017
  40e049:	jle    0x40e006
  40e04b:	out    dx,eax
  40e04c:	mov    dl,0x6
  40e04e:	push   cs
  40e04f:	xor    dh,BYTE PTR [ebx-0x29]
  40e052:	test   eax,0xbff4e277
  40e058:	pusha  
  40e059:	imul   ebx,DWORD PTR [ebp-0x48],0xffffff97
  40e05d:	add    ecx,esp
  40e05f:	jecxz  0x40e054
  40e061:	push   esi
  40e062:	mov    cl,BYTE PTR [ebp+0x76]
  40e065:	cmc    
  40e066:	xlat   BYTE PTR ds:[ebx]
  40e067:	jp     0x40e021
  40e069:	fdiv   QWORD PTR [ecx+eiz*2]
  40e06c:	cs pop esp
  40e06e:	push   edx
  40e06f:	xor    dl,BYTE PTR [esi]
  40e071:	data16 test BYTE PTR ds:[esi-0x9b1ac13],ah
  40e079:	pop    ebx
  40e07a:	sbb    eax,0x47197db8
  40e07f:	add    BYTE PTR [ebp+0x58],dh
  40e082:	cmp    DWORD PTR [edx],eax
  40e084:	mov    al,0x92
  40e086:	xor    DWORD PTR [edx+0x1e034e77],edi
  40e08c:	inc    eax
  40e08d:	fstp   TBYTE PTR [edi+eiz*8+0x27]
  40e091:	test   DWORD PTR [edx],edi
  40e093:	or     BYTE PTR [ebx],dh
  40e095:	jns    0x40e0c7
  40e097:	mov    bh,0xda
  40e099:	mov    bl,0x1d
  40e09b:	cmc    
  40e09c:	lods   al,BYTE PTR ds:[esi]
  40e09d:	stc    
  40e09e:	adc    BYTE PTR [ebx-0x1c],ch
  40e0a1:	pop    ds
  40e0a2:	pop    ecx
  40e0a3:	test   eax,0xcc648ca2
  40e0a8:	push   ds
  40e0a9:	xchg   dl,ch
  40e0ab:	or     al,0x72
  40e0ad:	xchg   esi,eax
  40e0ae:	add    edi,DWORD PTR [esi+0x23]
  40e0b1:	ds es dec edi
  40e0b4:	int    0xa9
  40e0b6:	and    esi,ebx
  40e0b8:	fstp   TBYTE PTR [edx-0x7e908b7e]
  40e0be:	mov    eax,ds:0xcf3e6a84
  40e0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0c4:	popa   
  40e0c5:	mov    ds:0xb5b60183,eax
  40e0ca:	and    ecx,DWORD PTR [edx+0xd21cb3a]
  40e0d0:	je     0x40e0ed
  40e0d2:	xchg   edi,eax
  40e0d3:	mov    esi,0xd3c98ced
  40e0d8:	ret    0xec4a
  40e0db:	stc    
  40e0dc:	pop    esi
  40e0dd:	jo     0x40e12e
  40e0df:	clc    
  40e0e0:	adc    eax,0x6b5f0f87
  40e0e5:	inc    esp
  40e0e6:	xchg   ecx,eax
  40e0e7:	cwde   
  40e0e8:	stos   DWORD PTR es:[edi],eax
  40e0e9:	out    dx,al
  40e0ea:	xor    eax,ebp
  40e0ec:	aam    0x7a
  40e0ee:	lods   eax,DWORD PTR ds:[esi]
  40e0ef:	scas   al,BYTE PTR es:[edi]
  40e0f0:	call   0xb6aa:0x79b44c96
  40e0f7:	pop    ss
  40e0f8:	stos   DWORD PTR es:[edi],eax
  40e0f9:	mov    ecx,esi
  40e0fb:	cmp    cl,dl
  40e0fd:	mov    esi,0x69d8c661
  40e102:	mov    ds:0x6ae290f4,al
  40e107:	in     eax,dx
  40e108:	adc    BYTE PTR [edx+edx*2-0x2],bh
  40e10c:	and    al,0x40
  40e10e:	push   ebx
  40e10f:	adc    eax,0x77a1988f
  40e114:	fcomp  DWORD PTR [edi-0x48]
  40e117:	push   ds
  40e118:	fild   WORD PTR [ecx+0x27]
  40e11b:	pop    edx
  40e11c:	(bad)  
  40e11d:	cli    
  40e11e:	dec    ebp
  40e11f:	inc    ebx
  40e120:	jbe    0x40e14d
  40e122:	xchg   ecx,eax
  40e123:	jbe    0x40e184
  40e125:	and    DWORD PTR [ebx],esp
  40e127:	or     al,BYTE PTR [esi+eiz*1]
  40e12a:	sbb    al,0xef
  40e12c:	xor    eax,0x3a417b2
  40e131:	xchg   ebx,eax
  40e132:	adc    ecx,DWORD PTR [edi+0x37]
  40e135:	stc    
  40e136:	sub    DWORD PTR [edi],0x753f7f85
  40e13c:	cli    
  40e13d:	loope  0x40e197
  40e13f:	mov    bh,0x2c
  40e141:	cwde   
  40e142:	adc    DWORD PTR [edx-0x1753da08],ebp
  40e148:	bnd jmp 0x40e1c6
  40e14b:	stos   BYTE PTR es:[edi],al
  40e14c:	adc    BYTE PTR [ebp-0x74c514b1],al
  40e152:	sub    ebp,DWORD PTR [edx]
  40e154:	(bad)  
  40e155:	in     al,0x27
  40e157:	push   cs
  40e158:	fst    DWORD PTR [esi+ecx*2-0x38607733]
  40e15f:	nop
  40e160:	rcr    DWORD PTR [ecx-0xb054c25],cl
  40e166:	push   esp
  40e167:	inc    ecx
  40e168:	or     bh,al
  40e16a:	cli    
  40e16b:	add    eax,0x55f142d1
  40e170:	arpl   WORD PTR [edi],bp
  40e172:	ins    DWORD PTR es:[edi],dx
  40e173:	sub    eax,0x2036bce4
  40e178:	mov    WORD PTR [edx],?
  40e17a:	ds je  0x40e1f1
  40e17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e17e:	or     ch,dl
  40e180:	sbb    DWORD PTR [esp+esi*2],0x648f12ea
  40e187:	imul   ebp,DWORD PTR [ebp-0x331c4fb0],0x23
  40e18e:	popf   
  40e18f:	inc    edx
  40e190:	push   esi
  40e191:	aad    0x9c
  40e193:	jmp    0x37a2:0x922bd970
  40e19a:	sahf   
  40e19b:	out    0x33,al
  40e19d:	mov    ah,0xc2
  40e19f:	lahf   
  40e1a0:	idiv   DWORD PTR [eax+0x6ccd55e4]
  40e1a6:	push   es
  40e1a7:	in     eax,dx
  40e1a8:	cdq    
  40e1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1aa:	jb     0x40e1ee
  40e1ac:	out    dx,al
  40e1ad:	jg     0x40e182
  40e1af:	jbe    0x40e1b5
  40e1b1:	clc    
  40e1b2:	xchg   esp,esi
  40e1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b5:	dec    esi
  40e1b6:	mov    dl,0x5f
  40e1b8:	xor    ch,ah
  40e1ba:	add    eax,0xd7e78002
  40e1bf:	out    0x88,al
  40e1c1:	add    DWORD PTR [ebx-0x414982d2],0x8ad34ed6
  40e1cb:	push   ebx
  40e1cc:	(bad)  
  40e1cd:	inc    edx
  40e1ce:	retf   
  40e1cf:	add    dh,BYTE PTR [ebx-0x6b21405d]
  40e1d5:	inc    esi
  40e1d6:	test   eax,0xbb0b9b19
  40e1db:	(bad)
  40e1de:	stos   BYTE PTR es:[edi],al
  40e1df:	cmp    dl,bh
  40e1e1:	rcl    ebp,cl
  40e1e3:	mov    ds:0xe537e227,eax
  40e1e8:	mov    BYTE PTR [ebx],ah
  40e1ea:	push   ebp
  40e1eb:	jbe    0x40e1db
  40e1ed:	and    esi,DWORD PTR [ebp-0x137e059d]
  40e1f3:	xchg   edx,eax
  40e1f4:	mov    ecx,?
  40e1f6:	sbb    DWORD PTR [edx+0x60],ecx
  40e1f9:	jb     0x40e253
  40e1fb:	mov    ecx,0x9fbb47f3
  40e200:	xchg   ecx,eax
  40e201:	push   ds
  40e202:	adc    dh,cl
  40e204:	int    0xb0
  40e206:	inc    edi
  40e207:	pop    esp
  40e208:	dec    ecx
  40e209:	sbb    eax,0x18e66f44
  40e20e:	jnp    0x40e231
  40e210:	lods   al,BYTE PTR ds:[esi]
  40e211:	jle    0x40e27c
  40e213:	(bad)  
  40e214:	loopne 0x40e234
  40e216:	mov    al,0xff
  40e218:	xchg   esp,eax
  40e219:	pop    esp
  40e21a:	mov    esp,0xc1858b73
  40e21f:	out    0xa5,eax
  40e221:	and    al,0x79
  40e223:	or     DWORD PTR [ebx],0x1
  40e226:	js     0x40e1c8
  40e228:	push   cx
  40e22a:	push   ds
  40e22b:	mov    dh,0xef
  40e22d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e22e:	mov    BYTE PTR [ebp+0x7b0c9ec],bh
  40e234:	call   0x4c9b:0xf76efd4d
  40e23b:	mov    al,0x91
  40e23d:	pushf  
  40e23e:	or     edi,DWORD PTR [eax+ebx*8+0x7d]
  40e242:	cmc    
  40e243:	jnp    0x40e25d
  40e245:	sub    al,BYTE PTR [edx+0x6a]
  40e248:	dec    ecx
  40e249:	mov    ch,0x66
  40e24b:	mov    ebx,DWORD PTR [edx-0x2e]
  40e24e:	xchg   DWORD PTR [ecx-0x70],ebp
  40e251:	sub    eax,0xb12f10c5
  40e256:	push   0x7f0b7138
  40e25b:	pop    ecx
  40e25c:	sbb    cl,dl
  40e25e:	rcr    BYTE PTR [ecx],1
  40e260:	mov    bl,0x99
  40e262:	mov    al,ds:0xb3d336e0
  40e267:	shr    esp,cl
  40e269:	loope  0x40e295
  40e26b:	mov    bh,0xdf
  40e26d:	(bad)  
  40e26e:	clc    
  40e26f:	and    BYTE PTR [ecx],bh
  40e271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e272:	jmp    0xebd0:0x57cba7bd
  40e279:	shl    BYTE PTR [edi],cl
  40e27b:	push   es
  40e27c:	dec    edi
  40e27d:	mov    fs,edi
  40e27f:	in     eax,0xe2
  40e281:	or     bl,BYTE PTR [ebx]
  40e283:	pop    esi
  40e284:	repz (bad)
  40e287:	jnp    0x40e2d1
  40e289:	jo     0x40e2f1
  40e28b:	data16 fisttp WORD PTR ds:0xa78deaae
  40e293:	jp     0x40e297
  40e295:	xchg   esi,eax
  40e296:	cmp    BYTE PTR [esi],bh
  40e298:	mov    DWORD PTR [esp+edx*1],esi
  40e29b:	pop    edx
  40e29c:	adc    BYTE PTR [eax+esi*4+0x4d81b700],ah
  40e2a3:	cdq    
  40e2a4:	cmp    al,0x55
  40e2a6:	in     al,0x88
  40e2a8:	cmp    eax,0xdbfefcd8
  40e2ad:	sbb    ecx,DWORD PTR [ecx+0x327037]
  40e2b3:	add    al,0xea
  40e2b5:	jge    0x40e295
  40e2b7:	push   edx
  40e2b8:	fisttp WORD PTR [edi-0xc0b6aa3]
  40e2be:	loop   0x40e334
  40e2c0:	mov    bl,0xc1
  40e2c2:	sbb    eax,DWORD PTR [edx+ebx*1-0x22]
  40e2c6:	shl    BYTE PTR [ebx],0x3a
  40e2c9:	cdq    
  40e2ca:	aas    
  40e2cb:	jp     0x40e320
  40e2cd:	push   es
  40e2ce:	fcom   QWORD PTR [ecx]
  40e2d0:	addr16 dec eax
  40e2d2:	ret    0xfa89
  40e2d5:	fsubr  st(2),st
  40e2d7:	push   0xbfe5a483
  40e2dc:	in     eax,0xbb
  40e2de:	pop    ebp
  40e2df:	les    ebp,FWORD PTR [ebp+eiz*4-0x78]
  40e2e3:	sub    ch,al
  40e2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e6:	scas   al,BYTE PTR es:[edi]
  40e2e7:	(bad)  
  40e2e8:	ret    
  40e2e9:	jp     0x40e315
  40e2eb:	cmp    al,0x73
  40e2ed:	adc    BYTE PTR [ebp+0x75749ac1],bl
  40e2f3:	jl     0x40e290
  40e2f5:	push   cs
  40e2f6:	mov    ecx,0xc074f81f
  40e2fb:	mov    dh,0xba
  40e2fd:	inc    ebx
  40e2fe:	mov    esi,esi
  40e300:	ss call 0x9b8fa07b
  40e306:	inc    eax
  40e307:	cmp    ebp,eax
  40e309:	add    al,0xde
  40e30b:	jg     0x40e2ac
  40e30d:	int3   
  40e30e:	push   edx
  40e30f:	push   es
  40e310:	mul    DWORD PTR [edx]
  40e312:	push   edi
  40e313:	ins    BYTE PTR es:[edi],dx
  40e314:	retf   0x10cd
  40e317:	lock cmp eax,0xfc2faffe
  40e31d:	xlat   BYTE PTR ds:[ebx]
  40e31e:	into   
  40e31f:	sub    al,0x40
  40e321:	test   DWORD PTR [edi],0x9dd0daf9
  40e327:	push   ebp
  40e328:	inc    ebx
  40e329:	fsubr  QWORD PTR [esi+0x2496c10a]
  40e32f:	test   eax,0x95a59386
  40e334:	aad    0x79
  40e336:	push   0x50
  40e338:	out    dx,al
  40e339:	and    BYTE PTR [edi-0x77],dl
  40e33c:	sub    al,bl
  40e33e:	inc    esp
  40e33f:	cmovbe ebp,DWORD PTR [ebx+0x5932fe28]
  40e346:	jnp    0x40e324
  40e348:	nop
  40e349:	jl     0x40e336
  40e34b:	test   BYTE PTR [edi+0x48d9a196],al
  40e351:	shl    eax,cl
  40e353:	mov    bh,0xe8
  40e355:	dec    edi
  40e356:	adc    DWORD PTR [edx+0x6026bc38],ecx
  40e35c:	call   0x4871c1c9
  40e361:	xlat   BYTE PTR ds:[ebx]
  40e362:	loope  0x40e382
  40e364:	test   BYTE PTR [edi],dl
  40e366:	lea    edi,[ebx+0x35]
  40e369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e36a:	(bad)  
  40e36b:	les    esi,FWORD PTR [edx+0x7a398643]
  40e371:	fxch   st(0)
  40e373:	push   eax
  40e374:	je     0x40e36c
  40e376:	sbb    ecx,DWORD PTR [esi-0x2e]
  40e379:	or     bh,BYTE PTR [esi+0x7ed187e8]
  40e37f:	mov    ds:0xe5a2c4a2,al
  40e384:	inc    esi
  40e385:	add    BYTE PTR [ecx-0x24],bl
  40e388:	div    BYTE PTR [edx+ebp*2+0x45]
  40e38c:	out    dx,eax
  40e38d:	pop    ecx
  40e38e:	xlat   BYTE PTR ds:[ebx]
  40e38f:	ret    0x8d7e
  40e392:	mov    al,0x8b
  40e395:	xchg   ebp,eax
  40e396:	adc    BYTE PTR [ebx+0x4e],bl
  40e399:	aam    0x4d
  40e39b:	cmp    al,0x1b
  40e39d:	fwait
  40e39e:	test   eax,0x82a4c253
  40e3a3:	push   esi
  40e3a4:	lahf   
  40e3a5:	mov    ds:0x5714a1b1,eax
  40e3aa:	fisub  WORD PTR [eax-0x5a]
  40e3ad:	ret    
  40e3ae:	push   ebp
  40e3af:	hlt    
  40e3b0:	(bad)  
  40e3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3b2:	mov    ebx,0xbe639b36
  40e3b7:	in     eax,0xef
  40e3b9:	js     0x40e3b7
  40e3bb:	(bad)  
  40e3bc:	adc    al,0xeb
  40e3be:	push   edi
  40e3bf:	int3   
  40e3c0:	dec    edi
  40e3c1:	ins    BYTE PTR es:[edi],dx
  40e3c2:	cdq    
  40e3c3:	sub    BYTE PTR [ebx-0x76],al
  40e3c6:	pop    edx
  40e3c7:	push   cs
  40e3c8:	fdivr  st,st(0)
  40e3ca:	xor    ch,ch
  40e3cc:	jae    0x40e352
  40e3ce:	inc    eax
  40e3cf:	pop    ss
  40e3d0:	sub    ah,bl
  40e3d2:	or     eax,0x74668bd5
  40e3d7:	xchg   ebp,eax
  40e3d8:	jnp    0x40e3e2
  40e3da:	adc    DWORD PTR [ebx],eax
  40e3dc:	adc    dl,BYTE PTR [edi-0x17390dfc]
  40e3e2:	and    esp,esi
  40e3e4:	adc    ecx,DWORD PTR [edx]
  40e3e6:	xchg   DWORD PTR [ebx-0x5d],esp
  40e3e9:	aam    0x4b
  40e3eb:	addr16 dec edx
  40e3ed:	es repz push esp
  40e3f0:	lock dec ebx
  40e3f2:	xor    edi,DWORD PTR [eax+0xfa7c272]
  40e3f8:	loope  0x40e3f9
  40e3fa:	push   0xffffff99
  40e3fc:	mov    ebx,0x6d89255e
  40e401:	mov    edi,0xc89da54b
  40e406:	mov    ecx,esi
  40e408:	push   esi
  40e409:	gs push edi
  40e40b:	fcomp  DWORD PTR [eax]
  40e40d:	ins    BYTE PTR es:[edi],dx
  40e40e:	jecxz  0x40e45c
  40e410:	mov    esi,0x1ed0a8a2
  40e415:	test   DWORD PTR [eax-0x4],0xee3a28a0
  40e41c:	call   0x2410192
  40e421:	adc    esp,edi
  40e423:	or     eax,0x3099350b
  40e428:	xor    ebx,DWORD PTR [edi+edi*4]
  40e42b:	jp     0x40e3e8
  40e42d:	pop    esp
  40e42e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e42f:	lods   eax,DWORD PTR ds:[esi]
  40e430:	add    al,0x7d
  40e432:	repnz dec edi
  40e434:	or     eax,0x338b3b4
  40e43a:	jne    0x40e470
  40e43c:	inc    ebx
  40e43d:	jo     0x40e4b7
  40e43f:	pop    edi
  40e441:	xor    eax,DWORD PTR [ebx-0x793b5076]
  40e447:	push   ds
  40e448:	aad    0xae
  40e44a:	lea    esp,[esi]
  40e44c:	mov    al,ds:0x6558115d
  40e451:	imul   edx,esi,0x5926c983
  40e457:	pop    ss
  40e458:	push   ebp
  40e459:	imul   BYTE PTR [esi+0x4a0817bb]
  40e45f:	jp     0x40e47f
  40e461:	test   BYTE PTR [ebx],bh
  40e463:	xchg   esi,eax
  40e464:	dec    esi
  40e465:	test   ebp,ebp
  40e467:	mov    ds:0x570e0d46,eax
  40e46c:	cmp    eax,0x61c0c749
  40e471:	sbb    dh,bh
  40e473:	cwde   
  40e474:	(bad)  
  40e475:	(bad)  
  40e476:	sub    edi,DWORD PTR [ecx]
  40e478:	in     eax,0x5f
  40e47a:	retf   
  40e47b:	pop    ebp
  40e47c:	push   ecx
  40e47d:	sbb    DWORD PTR [eax],ebx
  40e47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e480:	jle    0x40e428
  40e482:	les    ecx,FWORD PTR [edx]
  40e484:	test   al,0x66
  40e486:	ret    
  40e487:	outs   dx,BYTE PTR ds:[esi]
  40e488:	mov    BYTE PTR [eax+eiz*8+0x48f1fbbd],dh
  40e48f:	mov    eax,ds:0x7649001
  40e494:	mov    dl,0x7b
  40e496:	adc    eax,0xd5188599
  40e49b:	fcom   QWORD PTR [esi-0x23a05b59]
  40e4a1:	call   0x4e97:0x801ded76
  40e4a8:	xlat   BYTE PTR ds:[ebx]
  40e4a9:	aas    
  40e4aa:	mov    BYTE PTR [ebp-0x312da93d],bl
  40e4b0:	sar    BYTE PTR [ebx+0x6108a87e],cl
  40e4b6:	pop    DWORD PTR [esi]
  40e4b8:	mov    WORD PTR [ebp+0x76],ss
  40e4bb:	call   0xc3d81f98
  40e4c0:	sbb    BYTE PTR [edi+0x1],al
  40e4c3:	push   edi
  40e4c4:	les    ecx,FWORD PTR [ebp+0x1ce03430]
  40e4ca:	xlat   BYTE PTR ds:[ebx]
  40e4cb:	clc    
  40e4cc:	scas   al,BYTE PTR es:[edi]
  40e4cd:	aam    0xa5
  40e4cf:	cmp    edi,DWORD PTR [ecx-0x7]
  40e4d2:	push   esp
  40e4d3:	in     al,dx
  40e4d4:	mov    esi,0x9b6b0864
  40e4d9:	mov    ch,0x81
  40e4db:	test   ecx,eax
  40e4dd:	or     bh,BYTE PTR [ebp+edi*4+0x18]
  40e4e1:	add    dl,ah
  40e4e3:	pop    edx
  40e4e4:	mov    ecx,0xaa133731
  40e4e9:	jmp    0x4e1b1845
  40e4ee:	xchg   bh,al
  40e4f0:	call   0xc57d9db9
  40e4f5:	imul   edx,esi,0xffffffd1
  40e4f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4f9:	or     eax,0x5de2b397
  40e4fe:	or     ch,bh
  40e500:	bound  edx,QWORD PTR [edx+eiz*4-0x4f]
  40e504:	dec    edx
  40e505:	inc    esi
  40e506:	and    al,0x33
  40e508:	jg     0x40e54d
  40e50a:	xchg   BYTE PTR ds:0xab743729,al
  40e510:	outs   dx,BYTE PTR ds:[esi]
  40e511:	leave  
  40e512:	mov    al,ds:0x159939b9
  40e517:	mov    ds:0x5cbbb6e7,eax
  40e51c:	push   ecx
  40e51d:	test   BYTE PTR [edi-0x40444d8],cl
  40e523:	scas   eax,DWORD PTR es:[edi]
  40e524:	mov    ecx,0x880ab2ff
  40e529:	dec    ebx
  40e52a:	repnz xchg ebp,eax
  40e52c:	jae    0x40e5a5
  40e52e:	push   ebx
  40e52f:	mov    cl,0xa4
  40e531:	xchg   esp,eax
  40e532:	mov    al,0x9a
  40e534:	dec    edi
  40e535:	xchg   edi,eax
  40e536:	(bad)
  40e539:	push   0xe1b2bd1b
  40e53e:	pop    ecx
  40e53f:	pmulhuw mm4,QWORD PTR [edx+eiz*1]
  40e543:	mov    edx,0x98a6e41d
  40e549:	and    al,0x34
  40e54b:	push   0x65
  40e54d:	ret    
  40e54e:	push   ds
  40e54f:	pop    es
  40e550:	ja     0x40e4fd
  40e552:	pop    ds
  40e553:	mov    bh,al
  40e555:	aas    
  40e556:	aas    
  40e557:	pusha  
  40e558:	dec    ebp
  40e559:	adc    BYTE PTR [esi-0x9],dh
  40e55c:	frstor [esi+eax*2]
  40e55f:	mov    bl,0xa4
  40e561:	enter  0x43e5,0x3d
  40e565:	mov    ds:0x112b9a56,eax
  40e56a:	cs enter 0x821b,0xcd
  40e56f:	mov    DWORD PTR [esi],edx
  40e571:	pop    eax
  40e572:	sbb    DWORD PTR [edi],eax
  40e574:	data16 imul bl
  40e577:	rcr    DWORD PTR [edx+0x4c9341e1],cl
  40e57d:	adc    edi,DWORD PTR [edx+0x5b]
  40e580:	ror    DWORD PTR [edi+0x32180b82],cl
  40e586:	dec    ebp
  40e587:	add    al,0x7f
  40e589:	sub    ebx,DWORD PTR [eax-0x4d]
  40e58c:	ror    BYTE PTR ss:[esi],0x3f
  40e590:	stos   BYTE PTR es:[edi],al
  40e591:	or     ecx,edi
  40e593:	leave  
  40e594:	rol    edx,0xcc
  40e597:	add    al,0xd4
  40e599:	or     esi,eax
  40e59b:	sub    al,0xe9
  40e59d:	int3   
  40e59e:	in     eax,0xfe
  40e5a0:	mov    al,ds:0x9ebb2b4c
  40e5a5:	out    0x13,al
  40e5a7:	popa   
  40e5a8:	mov    edx,0x13d959c4
  40e5ad:	pop    eax
  40e5ae:	mov    ebp,0x25a50392
  40e5b3:	sbb    al,0xc8
  40e5b5:	xor    eax,0x5e04851d
  40e5ba:	pop    ecx
  40e5bb:	mov    esi,0x1210a7b1
  40e5c0:	iret   
  40e5c1:	psubsb mm0,QWORD PTR [esp+edi*1-0x654f919]
  40e5c9:	pop    esp
  40e5ca:	xor    BYTE PTR [esi+0x44],bh
  40e5cd:	(bad)
  40e5d1:	std    
  40e5d2:	cmp    al,0x40
  40e5d4:	mov    dh,0xd0
  40e5d6:	dec    esi
  40e5d7:	mov    DWORD PTR ss:[ecx],esi
  40e5da:	lock fmul DWORD PTR [ebp-0x40]
  40e5de:	sub    eax,DWORD PTR [ebx-0x490ed9]
  40e5e4:	in     eax,0x54
  40e5e6:	mov    ch,0x9b
  40e5e8:	sbb    al,0xea
  40e5ea:	inc    ebp
  40e5eb:	xchg   cl,ch
  40e5ed:	adc    BYTE PTR [edi],0x3c
  40e5f0:	test   dl,ch
  40e5f2:	aas    
  40e5f3:	dec    eax
  40e5f4:	sub    al,0x5c
  40e5f6:	dec    eax
  40e5f7:	ror    DWORD PTR [ebx+0x9afa2f4],0x4e
  40e5fe:	push   es
  40e5ff:	inc    ecx
  40e600:	rcl    BYTE PTR [ecx-0x35a179fd],1
  40e606:	mov    esp,0x25d63e1b
  40e60b:	pop    edi
  40e60c:	fcomp  st(1)
  40e60e:	loop   0x40e656
  40e610:	lahf   
  40e611:	xchg   ebp,eax
  40e612:	adc    bh,dl
  40e614:	add    ah,bh
  40e616:	es (bad) 
  40e618:	test   eax,0x16761516
  40e61d:	push   0x4b34fe2f
  40e622:	rcr    DWORD PTR [edi+0x26],0xc4
  40e626:	out    0xc5,eax
  40e628:	(bad)  
  40e629:	jmp    0xe2d3:0x3c7df124
  40e630:	mov    ds:0xfc644f3e,eax
  40e635:	ret    
  40e636:	(bad)  
  40e637:	aam    0x85
  40e639:	or     ecx,ebx
  40e63b:	mov    edx,0xfc12a971
  40e640:	scas   eax,DWORD PTR es:[edi]
  40e641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e642:	test   DWORD PTR [esi],esi
  40e644:	fsub   QWORD PTR [esi+0x5f33101e]
  40e64a:	outs   dx,BYTE PTR ds:[esi]
  40e64b:	dec    ebp
  40e64c:	xchg   ebp,eax
  40e64d:	test   dh,al
  40e64f:	xchg   edi,eax
  40e650:	int    0xfb
  40e652:	and    bl,BYTE PTR [eax+0x28aedf15]
  40e658:	icebp  
  40e659:	inc    ebx
  40e65a:	outs   dx,BYTE PTR ds:[esi]
  40e65b:	xchg   BYTE PTR [edx+0xa258c03],bl
  40e661:	pop    ebp
  40e663:	les    edi,FWORD PTR [ecx-0x6ce51c00]
  40e669:	dec    esi
  40e66a:	(bad)  
  40e66b:	or     al,0x2e
  40e66d:	je     0x40e67b
  40e66f:	mov    dh,dl
  40e671:	retf   
  40e672:	ret    
  40e673:	and    DWORD PTR [eax-0x606a5558],esp
  40e679:	mov    bl,0x7c
  40e67b:	push   0xc33a93d6
  40e680:	(bad)  
  40e681:	imul   bl
  40e683:	mov    esi,0x3ac425cb
  40e688:	out    dx,al
  40e689:	rcr    DWORD PTR [ecx+eiz*2-0x3726d5af],0xb7
  40e691:	in     al,dx
  40e692:	jp     0x40e65d
  40e694:	loope  0x40e6d8
  40e696:	add    al,0x63
  40e698:	push   ds
  40e699:	mov    dl,0xcb
  40e69b:	call   DWORD PTR [eax-0x32]
  40e69e:	sti    
  40e69f:	scas   eax,DWORD PTR es:[edi]
  40e6a0:	pop    ss
  40e6a1:	adc    DWORD PTR [esi],esp
  40e6a3:	es in  eax,0xf1
  40e6a6:	push   ss
  40e6a7:	mov    al,0x28
  40e6a9:	cs scas eax,DWORD PTR es:[edi]
  40e6ab:	stos   DWORD PTR es:[edi],eax
  40e6ac:	scas   al,BYTE PTR es:[edi]
  40e6ad:	jb     0x40e6bc
  40e6af:	inc    esi
  40e6b0:	push   edx
  40e6b1:	push   ebx
  40e6b2:	cmp    cl,BYTE PTR [ebp+edi*4+0x7883da90]
  40e6b9:	fcom   DWORD PTR [edx-0x1b]
  40e6bc:	or     dl,dl
  40e6be:	inc    ecx
  40e6bf:	xor    al,0x3b
  40e6c1:	dec    ecx
  40e6c2:	push   cs
  40e6c3:	fmul   DWORD PTR [ebx]
  40e6c5:	fnstenv [ecx+0x6]
  40e6c8:	inc    ecx
  40e6c9:	icebp  
  40e6ca:	xor    BYTE PTR fs:[edx],0xb9
  40e6ce:	cmc    
  40e6cf:	mov    cl,0xd7
  40e6d1:	mov    WORD PTR [edi],gs
  40e6d3:	jns    0x40e663
  40e6d5:	loope  0x40e681
  40e6d7:	jl     0x40e711
  40e6d9:	sbb    eax,DWORD PTR [edx+edi*1+0x2c]
  40e6dd:	ins    DWORD PTR es:[edi],dx
  40e6de:	(bad)  
  40e6df:	in     eax,0xcb
  40e6e1:	fistp  WORD PTR [edx-0x442b60bb]
  40e6e7:	cmp    DWORD PTR [edi-0x6ffceac3],ecx
  40e6ed:	xor    al,0xf6
  40e6ef:	xchg   ebx,eax
  40e6f0:	xor    al,0x6a
  40e6f2:	adc    ah,BYTE PTR [esi+esi*1-0x5]
  40e6f6:	sbb    al,0x28
  40e6f8:	imul   ebx,DWORD PTR [edi],0x94294bc7
  40e6fe:	sahf   
  40e6ff:	aas    
  40e700:	fistp  WORD PTR [ecx]
  40e702:	popa   
  40e703:	fidiv  WORD PTR [ecx+eiz*4-0x4764f21d]
  40e70a:	nop
  40e70b:	std    
  40e70c:	ins    BYTE PTR es:[edi],dx
  40e70d:	sbb    ebx,ecx
  40e70f:	adc    DWORD PTR [ebx+eax*2+0x6f],0xa18f1de2
  40e717:	je     0x40e77f
  40e719:	in     al,0xfa
  40e71b:	iret   
  40e71c:	jns    0x40e75b
  40e71e:	dec    edi
  40e71f:	imul   ebx,DWORD PTR [ebx],0xf47da00
  40e725:	stos   BYTE PTR es:[edi],al
  40e726:	pop    ss
  40e727:	cli    
  40e728:	or     eax,0x71756bfc
  40e72d:	in     eax,dx
  40e72e:	jge    0x40e6cc
  40e730:	(bad)  
  40e731:	out    dx,al
  40e732:	dec    ebx
  40e733:	stos   DWORD PTR es:[edi],eax
  40e734:	pop    esi
  40e735:	inc    edx
  40e736:	and    esi,eax
  40e738:	pop    ebx
  40e739:	add    cl,0x34
  40e73c:	adc    BYTE PTR [edx],dl
  40e73e:	inc    ebp
  40e73f:	xor    DWORD PTR [edi-0x79fa9397],ebx
  40e745:	addr16 inc esp
  40e747:	mov    eax,esp
  40e749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e74a:	fdivr  QWORD PTR [esi+eax*2+0x6130f2a7]
  40e751:	pop    ebx
  40e752:	outs   dx,DWORD PTR ds:[esi]
  40e753:	push   ss
  40e754:	not    DWORD PTR [edi-0x15]
  40e757:	jns    0x40e791
  40e759:	jg     0x40e7c6
  40e75b:	xchg   ebp,eax
  40e75c:	sti    
  40e75d:	sbb    DWORD PTR [edi-0xc],0xffffffdd
  40e761:	cmp    esi,ebp
  40e763:	adc    BYTE PTR [ecx+0x48],al
  40e766:	pop    es
  40e767:	jae    0x40e7bb
  40e769:	sahf   
  40e76a:	(bad)  [esp+edx*1-0x31]
  40e76e:	jecxz  0x40e72b
  40e770:	or     DWORD PTR [ecx],esi
  40e772:	xchg   ecx,eax
  40e773:	mul    DWORD PTR [esi+0x7c]
  40e776:	loop   0x40e714
  40e778:	mov    bh,0xdc
  40e77a:	retf   0xdbf
  40e77d:	xchg   BYTE PTR [ecx],ah
  40e77f:	ret    0x13d
  40e782:	aaa    
  40e783:	test   al,0x36
  40e785:	and    eax,0xaf99ca5e
  40e78a:	or     ebx,DWORD PTR [ecx-0x1fd668c6]
  40e790:	and    ah,dl
  40e792:	ss (bad) 
  40e794:	push   ebp
  40e795:	xchg   esi,eax
  40e796:	adc    BYTE PTR [edi],ah
  40e798:	inc    esp
  40e799:	mov    al,0x36
  40e79b:	dec    edx
  40e79c:	arpl   WORD PTR [ebx+0x2c],sp
  40e79f:	iret   
  40e7a0:	js     0x40e75a
  40e7a2:	out    0x29,eax
  40e7a4:	mov    edx,0xb9863c76
  40e7a9:	fstp   QWORD PTR [edx+0x19]
  40e7ac:	mov    ecx,0xae0ea5d1
  40e7b1:	int    0x26
  40e7b3:	add    DWORD PTR [edx+0x31],ecx
  40e7b6:	jns    0x40e7a6
  40e7b8:	or     dl,BYTE PTR [edx-0x9]
  40e7bb:	shr    BYTE PTR [ecx+0x2],cl
  40e7be:	rcr    dl,1
  40e7c0:	test   al,0xed
  40e7c2:	push   esi
  40e7c3:	pop    edx
  40e7c4:	sub    al,BYTE PTR [eax]
  40e7c6:	fs mov ch,0xa9
  40e7c9:	push   eax
  40e7ca:	lea    esp,[eax+0x2e694449]
  40e7d0:	rcr    DWORD PTR [edi-0x79],0xec
  40e7d4:	mov    al,0x21
  40e7d6:	in     al,0xef
  40e7d8:	cmp    BYTE PTR [edx-0x1e5ad211],bl
  40e7de:	aad    0x39
  40e7e0:	stc    
  40e7e1:	jmp    0x6596d1cd
  40e7e6:	pop    ebx
  40e7e7:	inc    edi
  40e7e8:	adc    DWORD PTR [edi],esp
  40e7ea:	fadd   QWORD PTR [edi]
  40e7ec:	xchg   ecx,eax
  40e7ed:	jae    0x40e81a
  40e7ef:	pop    es
  40e7f0:	and    esi,DWORD PTR [ebp+eax*4+0xc]
  40e7f4:	pop    ss
  40e7f5:	bswap  ecx
  40e7f7:	mov    ah,0x30
  40e7f9:	je     0x40e7fd
  40e7fb:	dec    BYTE PTR [edi]
  40e7fd:	out    0x63,al
  40e7ff:	fsub   QWORD PTR [ecx-0x5f]
  40e802:	jmp    0x40e7bb
  40e804:	inc    eax
  40e805:	xor    BYTE PTR [edx],0x18
  40e808:	sub    eax,0x2d4eb059
  40e80d:	sahf   
  40e80e:	fstp   TBYTE PTR [ecx-0x2d5bf39]
  40e814:	jnp    0x40e7bb
  40e816:	imul   ecx,DWORD PTR [edx],0xffffffc5
  40e819:	mov    esp,0x170a199b
  40e81e:	mov    bl,0xc0
  40e820:	icebp  
  40e821:	adc    dl,al
  40e823:	js     0x40e7c2
  40e825:	cs add ebp,ebp
  40e828:	ja     0x40e82e
  40e82a:	mov    edx,0xd457c716
  40e82f:	dec    edx
  40e830:	jp     0x40e818
  40e832:	stc    
  40e833:	fild   WORD PTR [esi+0x4d]
  40e836:	lods   al,BYTE PTR ds:[esi]
  40e837:	or     al,0xe1
  40e839:	or     esi,ebx
  40e83b:	ret    
  40e83c:	imul   ebp,DWORD PTR [eax+0x1b],0xffffffd6
  40e840:	jnp    0x40e831
  40e842:	mov    DWORD PTR ds:0xc2aa94bc,ebp
  40e848:	std    
  40e849:	mov    edi,DWORD PTR [eax+ecx*8]
  40e84c:	push   ebp
  40e84d:	sub    eax,0xd44c11a6
  40e852:	jecxz  0x40e86e
  40e854:	enter  0xf78,0x3f
  40e858:	dec    ebp
  40e859:	jmp    0x40e8c7
  40e85b:	and    DWORD PTR [ecx+0x2c],ebp
  40e85e:	in     eax,dx
  40e85f:	test   DWORD PTR [eax],0xa64679ea
  40e865:	add    al,0xf7
  40e867:	sub    al,BYTE PTR [ecx]
  40e869:	mov    esi,0x7dc608d1
  40e86e:	cmp    eax,0xca46b834
  40e873:	push   esi
  40e874:	inc    ecx
  40e875:	xchg   edx,eax
  40e876:	leave  
  40e877:	lock adc ecx,ebp
  40e87a:	sbb    esp,DWORD PTR [esi]
  40e87c:	shl    eax,1
  40e87e:	xchg   BYTE PTR [ebx+0x27],ah
  40e881:	std    
  40e882:	push   ss
  40e883:	jp     0x40e8b4
  40e885:	out    dx,al
  40e886:	pop    esp
  40e887:	mov    bl,0x85
  40e889:	push   0xffffffd1
  40e88b:	xchg   ebp,eax
  40e88c:	inc    ebx
  40e88d:	aas    
  40e88e:	push   ebp
  40e88f:	sub    ebp,DWORD PTR [ebx-0x20]
  40e892:	xchg   edx,eax
  40e893:	cld    
  40e894:	call   0xcdca:0xc1fd341f
  40e89b:	into   
  40e89c:	ins    BYTE PTR es:[edi],dx
  40e89d:	sub    BYTE PTR [edx+0x4949d943],ch
  40e8a3:	enter  0x60,0xdd
  40e8a7:	xor    BYTE PTR [ecx+edi*4+0x146db03c],bh
  40e8ae:	out    dx,al
  40e8af:	ja     0x40e894
  40e8b1:	or     ecx,ecx
  40e8b3:	jmp    0x636661b0
  40e8b8:	mov    edi,?
  40e8ba:	dec    eax
  40e8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8bc:	push   cs
  40e8bd:	in     eax,dx
  40e8be:	sbb    eax,0xd6af0d06
  40e8c3:	pop    ecx
  40e8c4:	add    bh,BYTE PTR [edi+ecx*4+0x6560be33]
  40e8cb:	bound  ebx,QWORD PTR [edx+0x4446a3b9]
  40e8d1:	jge    0x40e92b
  40e8d3:	cmp    al,0xed
  40e8d5:	lods   al,BYTE PTR ds:[esi]
  40e8d6:	xchg   esp,eax
  40e8d7:	sbb    BYTE PTR [ebp+0x63e1da49],al
  40e8dd:	popf   
  40e8de:	mov    DWORD PTR [edi-0x6974691e],0xad67c24a
  40e8e8:	shl    BYTE PTR [esi],0x1f
  40e8eb:	xchg   edi,eax
  40e8ec:	in     eax,0x69
  40e8ee:	(bad)  
  40e8ef:	ss scas eax,DWORD PTR es:[edi]
  40e8f1:	xlat   BYTE PTR ds:[ebx]
  40e8f2:	cmp    eax,0x4daed6f6
  40e8f7:	popa   
  40e8f8:	mov    al,ds:0x9fa06d37
  40e8fd:	cmp    edx,DWORD PTR [edi-0x16ec05e2]
  40e903:	mov    edi,0x3221f57b
  40e908:	mov    dh,0x3a
  40e90a:	and    BYTE PTR [esi+0x1c],cl
  40e90d:	cdq    
  40e90e:	out    dx,al
  40e90f:	xlat   BYTE PTR ds:[ebx]
  40e910:	leave  
  40e911:	push   ds
  40e912:	(bad)  
  40e913:	hlt    
  40e914:	or     DWORD PTR [eax+0xbd29f2c],ecx
  40e91a:	push   0x2be8d324
  40e91f:	push   edx
  40e920:	call   0xd36e075a
  40e925:	push   esp
  40e926:	mov    ecx,0x714a8072
  40e92b:	or     al,0x9c
  40e92d:	jle    0x40e903
  40e92f:	push   esp
  40e930:	pop    es
  40e931:	cmp    edx,edx
  40e933:	jge    0x40e934
  40e935:	inc    eax
  40e936:	mov    dl,0xed
  40e938:	rcl    BYTE PTR ds:0x845b623c,0x5e
  40e93f:	test   al,0xf4
  40e941:	and    esi,DWORD PTR [esi-0x32]
  40e944:	dec    edi
  40e945:	sub    al,0xd0
  40e947:	mov    dl,0xbb
  40e949:	out    dx,al
  40e94a:	add    ecx,DWORD PTR ds:0xd25c90bc
  40e950:	push   edx
  40e951:	(bad)  
  40e952:	es leave 
  40e954:	and    al,0xf0
  40e956:	pop    ds
  40e957:	test   al,0x4f
  40e95a:	out    0x38,eax
  40e95c:	stc    
  40e95d:	loop   0x40e9db
  40e95f:	push   ebp
  40e960:	add    esp,DWORD PTR [ebx+0x58]
  40e963:	mov    eax,ds:0xb16f7989
  40e968:	into   
  40e969:	int    0x0
  40e96b:	jno    0x40e9c2
  40e96d:	dec    ebp
  40e96e:	ret    
  40e96f:	ret    0x633f
  40e972:	jp     0x40e90f
  40e974:	push   eax
  40e975:	pop    eax
  40e976:	adc    eax,0x1c378878
  40e97b:	sahf   
  40e97c:	out    0xf5,eax
  40e97e:	or     BYTE PTR [ecx+0x485ef54],bl
  40e984:	pop    es
  40e985:	pop    ds
  40e986:	cmp    BYTE PTR [eax-0xb8ebfb9],0xa5
  40e98d:	bound  ebp,QWORD PTR [ebx+0x7b]
  40e990:	nop
  40e991:	cmp    al,0x2f
  40e993:	mov    ds:0x31dcdd4a,al
  40e998:	cmp    BYTE PTR [eax],dl
  40e99a:	cmp    eax,0x15dfc1c2
  40e99f:	jp     0x40e9c5
  40e9a1:	bound  eax,QWORD PTR es:[ecx-0x7a]
  40e9a5:	bound  ecx,QWORD PTR [ebp+0x2f]
  40e9a8:	ja     0x40e95a
  40e9aa:	lahf   
  40e9ab:	inc    ebx
  40e9ac:	push   eax
  40e9ad:	stos   BYTE PTR es:[edi],al
  40e9ae:	aas    
  40e9af:	jno    0x40ea24
  40e9b1:	cwde   
  40e9b2:	mul    BYTE PTR [ebx-0x69a829da]
  40e9b8:	sti    
  40e9b9:	iret   
  40e9ba:	addr16 mov edx,0x4dfc8f39
  40e9c0:	xor    DWORD PTR [edx],ecx
  40e9c2:	test   al,0x15
  40e9c4:	fild   WORD PTR [edi-0x746e2157]
  40e9ca:	cmp    al,0x92
  40e9cc:	fisub  DWORD PTR [edi+0x78f016f9]
  40e9d2:	xchg   ecx,eax
  40e9d3:	rol    BYTE PTR [ebx-0x5e],1
  40e9d6:	push   cs
  40e9d7:	sahf   
  40e9d8:	mov    edx,0x3cce0689
  40e9dd:	rol    cl,0x27
  40e9e0:	add    ecx,DWORD PTR ds:0x256bde43
  40e9e6:	xor    bl,al
  40e9e8:	sub    BYTE PTR [edx+0x2766dec6],ah
  40e9ee:	mov    ds:0x88b040a0,eax
  40e9f3:	scas   al,BYTE PTR es:[edi]
  40e9f4:	iret   
  40e9f5:	inc    ebx
  40e9f6:	push   edx
  40e9f7:	cmp    ebx,DWORD PTR [esi+0x3]
  40e9fa:	sub    eax,0x34509f8c
  40e9ff:	xchg   esi,eax
  40ea00:	cld    
  40ea01:	mov    bh,0x65
  40ea03:	sub    DWORD PTR [ebx+0x69dce70e],ebp
  40ea09:	or     BYTE PTR [edi],dl
  40ea0b:	sahf   
  40ea0c:	fcomp  DWORD PTR [ecx]
  40ea0e:	push   ebp
  40ea0f:	pop    ds
  40ea10:	repnz addr16 cs adc al,0x4d
  40ea15:	mov    esi,0xd533608e
  40ea1a:	push   ecx
  40ea1b:	(bad)  
  40ea1c:	imul   eax,DWORD PTR [eax+0x4b00bb64],0xffffffd7
  40ea23:	dec    edx
  40ea24:	outs   dx,DWORD PTR ds:[esi]
  40ea25:	mov    dl,0xfd
  40ea27:	adc    eax,0xda1f465d
  40ea2c:	test   BYTE PTR [ebp+edi*2+0x4cc87efb],dh
  40ea33:	push   esp
  40ea34:	iret   
  40ea35:	sahf   
  40ea36:	push   ebx
  40ea37:	inc    ebp
  40ea38:	out    0xad,al
  40ea3a:	icebp  
  40ea3b:	adc    eax,0x25d813a0
  40ea40:	mov    edx,0x2185cac
  40ea45:	mov    eax,DWORD PTR [edx+edi*8+0x3c2a22d7]
  40ea4c:	pusha  
  40ea4d:	jne    0x40ea4c
  40ea4f:	ficom  WORD PTR [esi+0x5a6eea7c]
  40ea55:	enter  0x14be,0x99
  40ea59:	push   edi
  40ea5a:	test   al,0xf8
  40ea5c:	xchg   ebx,eax
  40ea5d:	mov    al,ds:0x54eabe64
  40ea62:	(bad)  
  40ea64:	or     eax,0x4fd9916a
  40ea69:	loopne 0x40eaae
  40ea6b:	clc    
  40ea6c:	test   eax,0x798834f
  40ea71:	loopne 0x40ea64
  40ea73:	stos   DWORD PTR es:[edi],eax
  40ea74:	out    dx,eax
  40ea75:	enter  0x4f82,0x14
  40ea79:	out    dx,al
  40ea7a:	xchg   ch,bh
  40ea7c:	(bad)  
  40ea7d:	in     al,0x72
  40ea7f:	inc    edx
  40ea80:	test   DWORD PTR [edx+edx*1+0x23ae92c0],esp
  40ea87:	mov    eax,0x7692ed53
  40ea8c:	sti    
  40ea8d:	dec    edi
  40ea8e:	mov    eax,0x13c04e4b
  40ea93:	mov    dh,BYTE PTR [edi+0xe2449fb]
  40ea99:	dec    esi
  40ea9a:	xor    edx,DWORD PTR [ecx-0x61]
  40ea9d:	jae    0x40ea94
  40ea9f:	or     DWORD PTR ds:0xbe3eb535,edi
  40eaa5:	sbb    al,0x93
  40eaa7:	xchg   edx,eax
  40eaa8:	out    dx,eax
  40eaa9:	jmp    0x5990:0x4922a413
  40eab0:	pop    ecx
  40eab1:	out    0x28,eax
  40eab3:	jo     0x40eaa4
  40eab5:	stc    
  40eab6:	rcr    DWORD PTR [edi-0x75],cl
  40eab9:	out    dx,al
  40eaba:	jecxz  0x40eafc
  40eabc:	xchg   ebx,eax
  40eabd:	loop   0x40eae4
  40eabf:	and    BYTE PTR [eax-0xbb23174],al
  40eac5:	cmp    BYTE PTR [eax],ch
  40eac7:	jo     0x40ea78
  40eac9:	lods   eax,DWORD PTR ds:[esi]
  40eaca:	repnz call 0x2acf:0xc38d94f8
  40ead2:	xchg   ecx,eax
  40ead3:	jl     0x40eabd
  40ead5:	neg    DWORD PTR [eax+0x7c9a9e92]
  40eadb:	and    eax,0x9389ba53
  40eae0:	shl    ebx,1
  40eae2:	mov    bh,0x84
  40eae4:	out    dx,eax
  40eae5:	fwait
  40eae6:	push   ebp
  40eae7:	or     dh,BYTE PTR [edx+0x664807b8]
  40eaed:	test   al,0x9c
  40eaf0:	test   BYTE PTR [edi+0x167861b3],bl
  40eaf6:	test   eax,0x463b5a18
  40eafb:	lea    esp,[ecx]
  40eafd:	daa    
  40eafe:	jg     0x40eaeb
  40eb00:	imul   edi,DWORD PTR [edi+0x1decfe82],0xffffff88
  40eb07:	aas    
  40eb08:	idiv   DWORD PTR [esi+ecx*1]
  40eb0b:	jmp    0xf995a47e
  40eb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb11:	add    al,0x10
  40eb13:	dec    ebx
  40eb14:	pop    ss
  40eb15:	imul   ecx,DWORD PTR [edx-0x73],0x125f8467
  40eb1c:	out    0x50,eax
  40eb1e:	push   0x3b63ef74
  40eb23:	(bad)  
  40eb24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb25:	std    
  40eb26:	rcr    DWORD PTR [ecx-0x26],0x8e
  40eb2a:	pop    es
  40eb2b:	dec    ebp
  40eb2c:	jp     0x40eb89
  40eb2e:	dec    edx
  40eb2f:	xlat   BYTE PTR ds:[ebx]
  40eb30:	cld    
  40eb31:	add    DWORD PTR [ecx],edi
  40eb33:	sahf   
  40eb34:	xchg   esi,eax
  40eb35:	sbb    BYTE PTR [edi+0x75],dh
  40eb38:	push   esp
  40eb39:	mov    al,0x30
  40eb3b:	mov    ds:0x4c1643f2,al
  40eb40:	pop    esi
  40eb41:	rep ins BYTE PTR es:[edi],dx
  40eb43:	bound  edx,QWORD PTR [edx+eiz*8]
  40eb46:	call   0x28905ab9
  40eb4b:	out    0x7e,al
  40eb4d:	ret    
  40eb4e:	lock or eax,DWORD PTR [ecx]
  40eb51:	mov    ebx,0xc0247875
  40eb56:	push   edi
  40eb57:	xchg   edi,eax
  40eb58:	es aam 0x2b
  40eb5b:	mov    eax,0x5f985f48
  40eb60:	push   es
  40eb61:	jecxz  0x40eb2c
  40eb63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb64:	into   
  40eb65:	lock sub cl,BYTE PTR [ebp-0x4c7ab0aa]
  40eb6c:	lock cmp eax,0x7bbb0a40
  40eb72:	push   ds
  40eb73:	jnp    0x40ebca
  40eb75:	loope  0x40eb8d
  40eb77:	inc    ebx
  40eb78:	mov    ebp,0x8286ee68
  40eb7d:	add    DWORD PTR [ecx],0xf2d048b5
  40eb83:	inc    DWORD PTR [ecx+0x36]
  40eb86:	loopne 0x40eb21
  40eb88:	int    0x10
  40eb8a:	or     esi,esp
  40eb8c:	pop    ebx
  40eb8d:	adc    al,0x4b
  40eb8f:	imul   esi,esp,0x73e13b2b
  40eb95:	mov    cl,0xcd
  40eb97:	stos   DWORD PTR es:[edi],eax
  40eb98:	aaa    
  40eb99:	aaa    
  40eb9a:	pusha  
  40eb9b:	lods   al,BYTE PTR ds:[esi]
  40eb9c:	sub    bl,BYTE PTR [ecx]
  40eb9e:	aas    
  40eb9f:	sbb    al,0x41
  40eba1:	add    al,0xc7
  40eba3:	jle    0x40ec0d
  40eba5:	sahf   
  40eba6:	push   ss
  40eba7:	out    0xe0,al
  40eba9:	cmp    al,0xb8
  40ebab:	(bad)  
  40ebac:	(bad)  
  40ebad:	pop    ebx
  40ebae:	inc    ebx
  40ebaf:	cmp    DWORD PTR [esi],eax
  40ebb1:	lods   al,BYTE PTR ds:[esi]
  40ebb2:	mov    ebp,0xe2bcaad5
  40ebb7:	leave  
  40ebb8:	les    esi,FWORD PTR [edi-0xce3894a]
  40ebbe:	lods   eax,DWORD PTR ds:[esi]
  40ebbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc0:	mov    ss,WORD PTR [edx]
  40ebc2:	and    ah,0x69
  40ebc5:	jp     0x40ebfe
  40ebc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc8:	push   0x265e4c24
  40ebcd:	cmp    al,BYTE PTR [ebx+eax*4+0x4a5af06a]
  40ebd4:	cmp    al,al
  40ebd6:	add    BYTE PTR [eax-0x1b505959],bh
  40ebdc:	dec    edx
  40ebdd:	mov    esi,0x5175292a
  40ebe2:	fadd   DWORD PTR [ebp-0x39]
  40ebe5:	xor    edi,DWORD PTR [ebx]
  40ebe7:	pushf  
  40ebe8:	mov    DWORD PTR [ecx+0x16],ebp
  40ebeb:	mov    cl,0x60
  40ebed:	sbb    BYTE PTR [edi],bh
  40ebef:	xchg   dl,ah
  40ebf1:	cmc    
  40ebf2:	inc    edx
  40ebf3:	hlt    
  40ebf4:	(bad)
  40ebf8:	mov    edx,0x5169552a
  40ebfd:	sub    BYTE PTR [eax],ch
  40ebff:	test   BYTE PTR [eax-0x32],dl
  40ec02:	inc    ebx
  40ec03:	call   0x3376:0xaf220dbe
  40ec0a:	ja     0x40ec38
  40ec0c:	cli    
  40ec0d:	(bad)
  40ec10:	xchg   al,cl
  40ec12:	add    edi,DWORD PTR [edi+ebx*8]
  40ec15:	loopne 0x40ebc1
  40ec17:	aaa    
  40ec18:	cmp    edx,ebx
  40ec1a:	push   eax
  40ec1b:	aad    0xc7
  40ec1d:	jnp    0x40ec21
  40ec1f:	int3   
  40ec20:	mov    ds:0x715586f2,al
  40ec25:	sub    BYTE PTR ds:0xf2bf0b8f,ah
  40ec2b:	xchg   esi,eax
  40ec2c:	(bad)  
  40ec2d:	mov    eax,DWORD PTR [ebx]
  40ec2f:	sbb    DWORD PTR [ecx-0x52],ebx
  40ec32:	pop    ds
  40ec33:	and    eax,0xd870cbfe
  40ec38:	inc    edi
  40ec39:	or     DWORD PTR [edi-0x4e2cd095],esp
  40ec3f:	stc    
  40ec40:	loopne 0x40ec9e
  40ec42:	dec    edi
  40ec43:	jmp    FWORD PTR [ebx+0x3]
  40ec46:	mov    bh,0xe
  40ec48:	cmc    
  40ec49:	xchg   edx,eax
  40ec4a:	xchg   edi,eax
  40ec4b:	scas   al,BYTE PTR es:[edi]
  40ec4c:	push   ebx
  40ec4d:	jo     0x40ec2d
  40ec4f:	jg     0x40ec44
  40ec51:	push   0x5b3e1f18
  40ec56:	mov    dl,0x4b
  40ec58:	mov    bl,0x2d
  40ec5a:	jns    0x40ecb2
  40ec5c:	mov    bh,0xd7
  40ec5e:	push   edi
  40ec5f:	sub    BYTE PTR [edi],dl
  40ec61:	pusha  
  40ec62:	lods   al,BYTE PTR ds:[esi]
  40ec63:	shl    BYTE PTR [edx+0x6a],cl
  40ec66:	xor    al,0x22
  40ec68:	int    0x30
  40ec6a:	repnz mov ds:0xd47455c6,al
  40ec70:	dec    eax
  40ec71:	ja     0x40ec85
  40ec73:	and    eax,0xeb998abd
  40ec78:	mov    esi,0x809f9842
  40ec7e:	outs   dx,BYTE PTR ds:[esi]
  40ec7f:	out    dx,al
  40ec80:	xchg   ecx,eax
  40ec81:	add    ah,ah
  40ec83:	js     0x40ec62
  40ec85:	pop    esi
  40ec86:	fcom   DWORD PTR [ebp+0xa]
  40ec89:	std    
  40ec8a:	imul   DWORD PTR [ecx-0x4efe3fe9]
  40ec90:	popa   
  40ec91:	icebp  
  40ec92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec93:	pushf  
  40ec94:	adc    DWORD PTR [ebx],eax
  40ec96:	and    eax,0xaee967c6
  40ec9b:	sub    eax,0x5cb3c5eb
  40eca0:	push   esi
  40eca1:	dec    ebx
  40eca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca3:	and    DWORD PTR [ecx],edi
  40eca5:	sub    DWORD PTR [edx+esi*8+0x4d7a6c1f],edi
  40ecac:	ret    0x9085
  40ecaf:	cmp    eax,0x63bdcbc7
  40ecb4:	xchg   BYTE PTR [ecx-0x7f],cl
  40ecb7:	and    al,0xb1
  40ecb9:	sub    esp,DWORD PTR [esi]
  40ecbb:	cmp    bh,BYTE PTR [esp+ecx*4-0x47]
  40ecbf:	arpl   WORD PTR [edx-0x70fb6e26],bp
  40ecc5:	push   cs
  40ecc6:	push   ebp
  40ecc7:	adc    DWORD PTR [edx+0x58],edi
  40ecca:	and    ah,BYTE PTR [edi+0x33]
  40eccd:	repz or eax,0x88525461
  40ecd3:	data16 xor al,0x1b
  40ecd6:	out    dx,eax
  40ecd7:	pop    eax
  40ecd8:	out    0x98,al
  40ecda:	add    al,0x7f
  40ecdd:	mov    ds:0x36919e42,al
  40ece2:	push   eax
  40ece3:	mov    ?,esi
  40ece5:	fidiv  WORD PTR [eax+0x2a]
  40ece8:	test   BYTE PTR [ecx+0xb],bl
  40eceb:	pop    edx
  40ecec:	leave  
  40eced:	div    DWORD PTR [eax+0x7d530f58]
  40ecf3:	jg     0x40eccb
  40ecf5:	dec    ecx
  40ecf6:	aam    0x8d
  40ecf8:	ror    DWORD PTR [ecx+0x6b1cd136],1
  40ecfe:	dec    edi
  40ecff:	ret    0x3ad5
  40ed02:	sub    edx,DWORD PTR [edi]
  40ed04:	in     eax,dx
  40ed05:	pop    eax
  40ed06:	jb     0x40ed84
  40ed08:	adc    eax,0x4c31c4ca
  40ed0d:	inc    ecx
  40ed0e:	push   es
  40ed0f:	data16 mov ch,dh
  40ed12:	and    al,0x1d
  40ed14:	push   ebp
  40ed15:	jl     0x40ecc9
  40ed17:	fiadd  DWORD PTR [eax]
  40ed19:	pop    ecx
  40ed1a:	push   ecx
  40ed1b:	xchg   ecx,eax
  40ed1c:	and    al,BYTE PTR [si-0x10]
  40ed20:	iret   
  40ed21:	idiv   DWORD PTR [edi+edx*1+0x5479b8c0]
  40ed28:	xchg   ebp,eax
  40ed29:	rol    esp,0x15
  40ed2c:	into   
  40ed2d:	mov    al,0xfb
  40ed2f:	cmp    al,0xe0
  40ed31:	and    ebp,edi
  40ed33:	mov    al,ds:0x4c5bf23a
  40ed38:	adc    bl,BYTE PTR [edx]
  40ed3a:	les    edi,FWORD PTR [ecx-0x7b]
  40ed3d:	jb     0x40ed0e
  40ed3f:	adc    ebx,eax
  40ed41:	in     eax,dx
  40ed42:	dec    eax
  40ed43:	inc    esp
  40ed44:	pop    edx
  40ed45:	inc    ebx
  40ed46:	mov    esp,0xaba9615b
  40ed4b:	pop    eax
  40ed4c:	xor    eax,0x6a36ba82
  40ed51:	lods   eax,DWORD PTR ds:[esi]
  40ed52:	mov    al,0xb1
  40ed54:	sbb    bl,BYTE PTR [edx]
  40ed56:	int    0x79
  40ed58:	mov    edx,0xdbcb26d3
  40ed5d:	out    0xad,al
  40ed5f:	fsubr  st,st(7)
  40ed61:	test   al,0x86
  40ed63:	mov    es,WORD PTR [edi-0x70]
  40ed66:	mov    eax,ds:0xef3f6b54
  40ed6b:	jmp    0xe74f:0xc2b95c7
  40ed72:	push   edx
  40ed73:	jae    0x40ed54
  40ed75:	lods   al,BYTE PTR ds:[esi]
  40ed76:	ins    BYTE PTR es:[edi],dx
  40ed77:	jae    0x40ed3c
  40ed79:	sbb    al,0x47
  40ed7b:	xrelease mov DWORD PTR [eax],esp
  40ed7e:	pop    edi
  40ed7f:	call   0xe680:0x3ec6b44e
  40ed86:	inc    edx
  40ed87:	ss test al,0xf5
  40ed8a:	xor    DWORD PTR [ecx],ebp
  40ed8c:	(bad)  
  40ed8e:	in     al,0x7a
  40ed90:	cmp    edi,DWORD PTR [eax-0x6e]
  40ed93:	push   esi
  40ed94:	add    ah,BYTE PTR [eax]
  40ed96:	das    
  40ed97:	jmp    0x396d7e7b
  40ed9c:	pop    ds
  40ed9d:	mov    dh,0x4
  40ed9f:	test   eax,0x48ed8b3b
  40eda4:	push   edi
  40eda5:	mul    DWORD PTR [bx+di+0xc26]
  40edaa:	popf   
  40edab:	cdq    
  40edac:	mov    dh,0xd4
  40edae:	inc    esp
  40edaf:	sbb    al,0xa0
  40edb1:	in     eax,dx
  40edb2:	frstor [ebp-0x2eccff05]
  40edb8:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40edba:	test   eax,0x9553ccf1
  40edbf:	std    
  40edc0:	clc    
  40edc1:	or     ah,BYTE PTR [eax-0x27]
  40edc4:	xchg   ecx,eax
  40edc5:	cmp    BYTE PTR [eax],cl
  40edc7:	je     0x40ee20
  40edc9:	mov    ds:0x34c4829a,eax
  40edce:	dec    ebx
  40edcf:	mov    BYTE PTR ds:[ecx],dh
  40edd2:	and    eax,0x4d183bc6
  40edd7:	int    0x5
  40edd9:	dec    ebp
  40edda:	lods   eax,DWORD PTR ss:[esi]
  40eddc:	adc    BYTE PTR [ecx-0x5c],ch
  40eddf:	or     edx,esp
  40ede1:	jbe    0x40ee32
  40ede3:	test   al,0x91
  40ede5:	cmp    eax,0xcb7ce63c
  40edea:	popa   
  40edeb:	loopne 0x40edd4
  40eded:	iret   
  40edee:	rol    bl,1
  40edf0:	in     al,0x52
  40edf2:	stc    
  40edf3:	ins    BYTE PTR es:[edi],dx
  40edf4:	jnp    0x40eded
  40edf6:	and    eax,0x7ad7a94f
  40edfb:	mov    cl,0x87
  40edfd:	mov    ds:0x27942e1f,al
  40ee02:	cdq    
  40ee03:	and    DWORD PTR [eax],esi
  40ee05:	xor    DWORD PTR ds:0xbad568aa,0xa07cb1f0
  40ee0f:	mov    ebp,0x15fc9200
  40ee14:	imul   esi,DWORD PTR [ebx-0x17dabf96],0xe83e9fb5
  40ee1e:	test   al,0xed
  40ee20:	pop    es
  40ee21:	push   ss
  40ee22:	push   ebp
  40ee23:	jb     0x40ee01
  40ee25:	and    DWORD PTR [edx-0x7b13ebcb],esp
  40ee2b:	test   BYTE PTR [eax-0x61b80db8],dl
  40ee31:	inc    eax
  40ee32:	pop    eax
  40ee33:	lock outs dx,BYTE PTR ds:[esi]
  40ee35:	shl    cl,1
  40ee37:	ret    
  40ee38:	sub    ebx,DWORD PTR [eax]
  40ee3a:	div    DWORD PTR [edx]
  40ee3c:	xchg   esp,eax
  40ee3d:	push   edx
  40ee3e:	cmp    eax,0x865f383f
  40ee43:	xchg   DWORD PTR [edi],ebx
  40ee45:	jmp    0x52acdbd2
  40ee4a:	pop    ss
  40ee4b:	lods   al,BYTE PTR ds:[esi]
  40ee4c:	test   al,0xac
  40ee4e:	fs das 
  40ee50:	fsubr  QWORD PTR [ebx+ecx*4+0x6d05d37c]
  40ee57:	xchg   BYTE PTR [edi+0x2],bh
  40ee5a:	sahf   
  40ee5b:	icebp  
  40ee5c:	xchg   ebp,eax
  40ee5d:	or     BYTE PTR [ebx+0x664087c0],dh
  40ee63:	fmul   st,st(1)
  40ee65:	in     al,0x39
  40ee67:	in     al,0x1
  40ee69:	xchg   edx,eax
  40ee6a:	push   ds
  40ee6b:	stos   BYTE PTR es:[edi],al
  40ee6c:	lea    edx,[ebx]
  40ee6e:	sub    edi,0x4f
  40ee71:	lahf   
  40ee72:	js     0x40eeb6
  40ee74:	cmp    BYTE PTR [ebx-0x201b2233],0xf9
  40ee7b:	sub    bh,BYTE PTR [ebx*4+0x5b5f227c]
  40ee82:	sbb    eax,0xea96458c
  40ee87:	xchg   ebp,eax
  40ee88:	mov    eax,ds:0xdc89694
  40ee8d:	call   0x7c73608f
  40ee92:	dec    ecx
  40ee93:	xchg   DWORD PTR [ebx],ecx
  40ee95:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee97:	adc    eax,0x990e7ae
  40ee9c:	repz shl DWORD PTR [esi+0x72b7ec8a],1
  40eea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea4:	mov    ch,0x18
  40eea6:	sub    DWORD PTR [edi],edi
  40eea8:	jmp    0x565d:0x43f2f1b6
  40eeaf:	fwait
  40eeb0:	fs dec ebx
  40eeb2:	push   ds
  40eeb3:	stos   DWORD PTR es:[edi],eax
  40eeb4:	aam    0xa3
  40eeb6:	outs   dx,DWORD PTR ds:[esi]
  40eeb7:	cdq    
  40eeb8:	xor    cl,BYTE PTR [ecx+0x622af16e]
  40eebe:	lahf   
  40eebf:	xchg   edx,ecx
  40eec1:	xor    eax,0x296282fb
  40eec6:	or     DWORD PTR [ebx],eax
  40eec8:	sub    al,BYTE PTR [ebx-0x676c5820]
  40eece:	sub    esi,esp
  40eed0:	les    ecx,FWORD PTR [eax-0x61]
  40eed3:	(bad)  
  40eed4:	xlat   BYTE PTR ds:[ebx]
  40eed5:	xor    BYTE PTR [ebp+0x37],bh
  40eed8:	call   0x66f20df1
  40eedd:	cmovne esi,DWORD PTR [eax]
  40eee0:	punpckhwd mm7,QWORD PTR [ebx]
  40eee3:	add    DWORD PTR [esi-0x2d4ee414],esp
  40eee9:	out    dx,al
  40eeea:	repz (bad) 
  40eeec:	mov    ch,0x21
  40eeee:	jmp    0x40ef0a
  40eef0:	js     0x40ef58
  40eef2:	call   0x47ee5821
  40eef7:	ret    0x2874
  40eefa:	ins    DWORD PTR es:[edi],dx
  40eefb:	repz lock pop edi
  40eefe:	imul   ebx,esp,0x570514eb
  40ef04:	push   ecx
  40ef05:	mov    BYTE PTR [esi-0x68],bh
  40ef08:	add    al,0x8f
  40ef0a:	jnp    0x40ef52
  40ef0c:	cmp    ch,ch
  40ef0e:	adc    BYTE PTR [eax],bh
  40ef10:	scas   al,BYTE PTR es:[edi]
  40ef11:	into   
  40ef12:	icebp  
  40ef13:	bound  esp,QWORD PTR [eax-0x10]
  40ef16:	leave  
  40ef17:	sbb    al,0x2e
  40ef19:	mov    ds:0x5062fc7c,al
  40ef1e:	outs   dx,DWORD PTR ds:[esi]
  40ef1f:	fisubr WORD PTR [edi-0x3f]
  40ef22:	nop
  40ef23:	mov    esp,0x151e944c
  40ef28:	or     DWORD PTR [esi+0x459549f4],0x5
  40ef2f:	nop
  40ef30:	jg     0x40ef4f
  40ef32:	jp     0x40ef42
  40ef34:	mov    dl,0xb5
  40ef36:	ror    DWORD PTR [edx],cl
  40ef38:	or     al,0x2e
  40ef3a:	movhps xmm6,QWORD PTR [esi+esi*8-0x17]
  40ef3f:	dec    edx
  40ef40:	mov    ss,WORD PTR [eax]
  40ef42:	mov    ds:0xca0e42b6,al
  40ef47:	mov    al,0x36
  40ef49:	lds    ebx,FWORD PTR [ebp+0x2e4462ad]
  40ef4f:	push   ebp
  40ef50:	push   ss
  40ef51:	imul   edi,DWORD PTR [ecx-0x664443d7],0x4f9dd2f4
  40ef5b:	inc    edx
  40ef5c:	mov    edi,0x64189608
  40ef61:	xchg   BYTE PTR [esi+0x46],bl
  40ef64:	call   0xfbfe75e8
  40ef69:	mov    ebp,0xe1b818c4
  40ef6e:	sbb    al,BYTE PTR [ebp+edi*4-0x56]
  40ef72:	dec    esp
  40ef73:	fsub   DWORD PTR [esi+0x56739ed2]
  40ef79:	shl    BYTE PTR [edi-0x29df6a68],1
  40ef7f:	cld    
  40ef80:	xor    ch,BYTE PTR [edi-0x53cb1000]
  40ef86:	repz add ah,BYTE PTR [edx]
  40ef89:	cmc    
  40ef8a:	cdq    
  40ef8b:	jmp    FWORD PTR [ecx+0x5c9f8a93]
  40ef91:	out    dx,al
  40ef92:	sub    ch,BYTE PTR [edx-0x5]
  40ef95:	pushw  0x4f
  40ef98:	cmc    
  40ef99:	(bad)  
  40ef9a:	int    0xe8
  40ef9c:	gs fcmovnu st,st(1)
  40ef9f:	fs (bad) 
  40efa1:	pop    ds
  40efa2:	into   
  40efa3:	jno    0x40ef96
  40efa5:	popa   
  40efa6:	imul   DWORD PTR [ebx-0x6c9565dd]
  40efac:	adc    al,0x85
  40efae:	sbb    ch,BYTE PTR [edx+0x78ea6231]
  40efb4:	inc    ebp
  40efb5:	dec    ebp
  40efb6:	push   esi
  40efb7:	pushf  
  40efb8:	enter  0x548b,0xc4
  40efbc:	mov    ds:0xf4873ee6,al
  40efc1:	bnd jo 0x40ef4f
  40efc4:	xchg   edx,eax
  40efc5:	fisubr DWORD PTR [ecx+0x21076d7]
  40efcb:	pop    edx
  40efcc:	or     al,0xc8
  40efce:	call   0x37ae:0x16d11e0e
  40efd5:	push   esi
  40efd6:	jnp    0x40efd6
  40efd8:	ds (bad) 
  40efda:	pop    ecx
  40efdb:	or     BYTE PTR [edi],ch
  40efdd:	or     edi,DWORD PTR [esi-0x701da77d]
  40efe3:	rol    BYTE PTR [ebp-0x598f3b97],cl
  40efe9:	or     dl,BYTE PTR [ecx+0x1fddb0f2]
  40efef:	pop    esi
  40eff0:	lds    edi,FWORD PTR [edx+0x3f]
  40eff3:	(bad)  
  40eff4:	shl    DWORD PTR [eax+eiz*4+0x1b],cl
  40eff8:	pop    edx
  40eff9:	xchg   edx,eax
  40effa:	push   ecx
  40effb:	push   ss
  40effc:	sub    eax,0xf62d5aab
  40f001:	retf   0x7a1b
  40f004:	aaa    
  40f005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f006:	push   0xffffffe6
  40f008:	rol    BYTE PTR [ecx],0x67
  40f00b:	mov    edi,0xb5df89aa
  40f010:	gs mov edx,0x6a2b688b
  40f016:	popf   
  40f017:	scas   eax,DWORD PTR es:[edi]
  40f018:	pop    edi
  40f019:	ficomp DWORD PTR [edi+0x3c]
  40f01c:	ins    BYTE PTR es:[edi],dx
  40f01d:	shr    dh,0xb8
  40f020:	movups xmm6,XMMWORD PTR [edx+edi*4]
  40f024:	push   ecx
  40f025:	dec    edx
  40f026:	and    edi,esp
  40f028:	and    eax,0xed062abf
  40f02d:	inc    ecx
  40f02e:	imul   esi,DWORD PTR [edi],0x5c89124
  40f034:	jmp    0xa1f21a8f
  40f039:	jne    0x40efc7
  40f03b:	xor    BYTE PTR [ecx-0x78],dl
  40f03e:	test   al,0x6
  40f040:	mov    eax,0x513e8780
  40f045:	lock out 0xc9,eax
  40f048:	outs   dx,BYTE PTR ds:[esi]
  40f049:	jns    0x40f0c2
  40f04b:	fwait
  40f04c:	mov    ah,0xfd
  40f04e:	mov    WORD PTR [edx+0x5c],ds
  40f051:	mov    al,0x10
  40f054:	mov    eax,DWORD PTR [ebp+0xe]
  40f057:	and    al,0x24
  40f059:	in     al,dx
  40f05a:	cli    
  40f05b:	int3   
  40f05c:	xor    bh,BYTE PTR [ebp+0x69]
  40f05f:	xor    esi,esp
  40f061:	mov    dh,0xe3
  40f063:	aam    0x9d
  40f065:	out    dx,al
  40f066:	call   0x5b689507
  40f06b:	sbb    al,0xb4
  40f06d:	fdiv   st(7),st
  40f06f:	pop    edx
  40f070:	dec    ecx
  40f071:	shl    DWORD PTR [ebx+edx*8-0x1c],cl
  40f075:	in     eax,dx
  40f076:	mov    dl,0xfc
  40f078:	(bad)  
  40f079:	retf   0x8435
  40f07c:	mov    DWORD PTR ds:0x48f9ba16,ebp
  40f082:	rol    BYTE PTR [eax],1
  40f084:	mov    ch,0xde
  40f086:	sub    eax,0xd66bec10
  40f08b:	cdq    
  40f08c:	dec    edi
  40f08d:	rol    DWORD PTR [ebx-0x10dd91dc],cl
  40f093:	add    al,0x26
  40f095:	mul    DWORD PTR [eax-0x66]
  40f098:	push   esi
  40f099:	or     DWORD PTR [ebp-0x16],esi
  40f09c:	(bad)  ds:0xc4add1c7
  40f0a2:	and    DWORD PTR [ebp-0x16],eax
  40f0a5:	scas   eax,DWORD PTR es:[edi]
  40f0a6:	pop    esp
  40f0a7:	add    dh,dh
  40f0a9:	jo     0x40f049
  40f0ab:	xlat   BYTE PTR ds:[ebx]
  40f0ac:	neg    BYTE PTR [ecx+0x31d1b260]
  40f0b2:	mov    bl,0x2e
  40f0b4:	retf   0xc7df
  40f0b7:	enter  0x339c,0x96
  40f0bb:	test   eax,0x806871c9
  40f0c0:	loopne 0x40f0e8
  40f0c2:	(bad)  
  40f0c3:	cmp    eax,0xbdf69f66
  40f0c8:	adc    al,0xa2
  40f0ca:	test   DWORD PTR [ecx],ebx
  40f0cc:	pop    ebx
  40f0cd:	push   ss
  40f0ce:	cdq    
  40f0cf:	adc    eax,0x4283baef
  40f0d4:	int3   
  40f0d5:	inc    ebx
  40f0d6:	into   
  40f0d7:	call   DWORD PTR [eax]
  40f0d9:	enter  0xcca,0x65
  40f0dd:	mov    esp,0x3bf4869e
  40f0e2:	push   0xffffffb4
  40f0e4:	mov    esi,0x7425ebf5
  40f0e9:	jecxz  0x40f09b
  40f0eb:	or     eax,eax
  40f0ed:	scas   eax,DWORD PTR es:[edi]
  40f0ee:	lock adc eax,0x9d954502
  40f0f4:	out    0xa0,eax
  40f0f6:	lea    edi,[ecx-0x21d18d67]
  40f0fc:	pusha  
  40f0fd:	jbe    0x40f114
  40f0ff:	out    dx,eax
  40f100:	call   0x5d91:0x5095c1b3
  40f107:	ins    BYTE PTR es:[edi],dx
  40f108:	xchg   BYTE PTR [ecx+ecx*2-0x3b],dh
  40f10c:	ss sbb ebx,0x217be9a8
  40f113:	push   eax
  40f114:	jns    0x40f193
  40f116:	sbb    ch,BYTE PTR [ecx+esi*4]
  40f119:	fs mov esi,0x60dbf964
  40f11f:	or     al,0xd4
  40f121:	stos   BYTE PTR es:[edi],al
  40f122:	jno    0x40f196
  40f124:	inc    ecx
  40f125:	das    
  40f126:	std    
  40f127:	nop
  40f128:	enter  0x2547,0xa5
  40f12c:	cmp    al,al
  40f12e:	dec    esi
  40f12f:	pop    edx
  40f130:	cmp    eax,0x66983e17
  40f135:	add    DWORD PTR [ebp-0x2d],esp
  40f138:	nop
  40f139:	xchg   edx,eax
  40f13a:	pop    ebx
  40f13b:	popa   
  40f13c:	xor    BYTE PTR [ebx],bh
  40f13e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f13f:	cmp    dl,BYTE PTR [edi-0x71]
  40f142:	sub    DWORD PTR [ebp+0xd1d49a],ebp
  40f148:	sbb    eax,0xc332d04b
  40f14d:	addr16 push ds
  40f14f:	arpl   WORD PTR [edx-0x28b6ac86],dx
  40f155:	adc    ebp,DWORD PTR [ebx+edx*2-0x22]
  40f159:	out    0xca,eax
  40f15b:	sub    ebp,DWORD PTR [ebp+0x7dd7fbcc]
  40f161:	outs   dx,DWORD PTR ds:[esi]
  40f162:	popf   
  40f163:	inc    esi
  40f164:	inc    edi
  40f165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f166:	mov    ebx,0x34d81fd9
  40f16b:	jp     0x40f1be
  40f16d:	hlt    
  40f16e:	push   ds
  40f16f:	out    0x70,eax
  40f171:	and    al,0x6
  40f173:	shl    BYTE PTR [ebp-0x24],0x7e
  40f177:	gs push edx
  40f179:	dec    eax
  40f17a:	cs and eax,0xf8c8a8ed
  40f180:	pushf  
  40f181:	push   cs
  40f182:	jl     0x40f129
  40f184:	mov    ebx,0xbb9de74b
  40f189:	xor    ah,dl
  40f18b:	mov    ebx,0x828168a2
  40f190:	xchg   edi,eax
  40f191:	ins    DWORD PTR es:[edi],dx
  40f192:	jae    0x40f1ec
  40f194:	add    ebx,DWORD PTR [edx]
  40f196:	aad    0x6e
  40f198:	sbb    esi,DWORD PTR [esi-0xd]
  40f19b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f19c:	imul   DWORD PTR [ebx]
  40f19e:	fst    QWORD PTR [eax+0x21]
  40f1a1:	cdq    
  40f1a2:	cmp    eax,0x20cd3939
  40f1a7:	sub    eax,0x304d4477
  40f1ac:	sbb    BYTE PTR [ebp+0x54],bh
  40f1af:	jmp    0x40f214
  40f1b1:	xchg   ebx,eax
  40f1b2:	dec    eax
  40f1b3:	sub    BYTE PTR [esi-0x3027efb6],al
  40f1b9:	std    
  40f1ba:	sbb    al,0x62
  40f1bc:	sub    al,0xf3
  40f1be:	aaa    
  40f1bf:	popf   
  40f1c0:	mov    al,ds:0x341f81b4
  40f1c5:	jle    0x40f23f
  40f1c7:	pop    edx
  40f1c8:	dec    esp
  40f1c9:	xchg   esi,eax
  40f1ca:	mov    edi,ebp
  40f1cc:	in     eax,0x2
  40f1ce:	dec    ecx
  40f1cf:	adc    al,0x66
  40f1d1:	fs jae 0x40f183
  40f1d4:	or     esi,DWORD PTR [edi+0x46d3288a]
  40f1da:	cmp    edx,DWORD PTR ds:0xb49590e
  40f1e0:	fwait
  40f1e1:	mov    ecx,0xa6dd4e86
  40f1e6:	push   ecx
  40f1e7:	call   0xaa0b:0x286d3958
  40f1ee:	mov    ebp,esp
  40f1f0:	sbb    cl,cl
  40f1f2:	mov    dl,0x77
  40f1f4:	pop    es
  40f1f5:	fmul   st,st(6)
  40f1f7:	dec    eax
  40f1f8:	sbb    dh,BYTE PTR [ecx]
  40f1fa:	shl    BYTE PTR [eax+0x79],cl
  40f1fd:	xor    BYTE PTR [ecx-0x70586491],0x82
  40f204:	or     al,0x9b
  40f206:	mov    ecx,DWORD PTR [edi-0xa74e2b2]
  40f20c:	cmp    al,ah
  40f20e:	aad    0x66
  40f210:	inc    ebx
  40f211:	shl    bh,0xa2
  40f214:	inc    edi
  40f215:	fldcw  WORD PTR [ecx]
  40f217:	push   es
  40f218:	retf   
  40f219:	or     eax,0xeb7a6697
  40f21e:	test   DWORD PTR [ebx+eax*1],0x7a79c9e7
  40f225:	mul    DWORD PTR [ebp+0xe]
  40f228:	cmp    ah,dh
  40f22a:	jecxz  0x40f265
  40f22c:	fisttp WORD PTR [ebp+eax*8-0x5d]
  40f230:	dec    eax
  40f231:	fisubr WORD PTR [ecx+0x43]
  40f234:	ds push cs
  40f236:	inc    ecx
  40f237:	mov    WORD PTR [edx-0x1e2061ab],fs
  40f23d:	ja     0x40f233
  40f23f:	int    0x6b
  40f241:	stc    
  40f242:	inc    DWORD PTR [edx+0x120260fa]
  40f248:	dec    ebx
  40f249:	mov    ch,0x4f
  40f24b:	shl    ebx,0x1c
  40f24e:	push   esp
  40f24f:	xor    esp,DWORD PTR [ebx]
  40f251:	sbb    ebx,DWORD PTR [esi+0xb]
  40f254:	sbb    ebp,DWORD PTR [eax+0x19]
  40f257:	rol    BYTE PTR [esi-0x4a],cl
  40f25a:	in     eax,dx
  40f25b:	aam    0x4b
  40f25d:	call   0x51ff38a6
  40f262:	fdivr  st,st(6)
  40f264:	fwait
  40f265:	cmp    DWORD PTR [edi+0x70159b61],esi
  40f26b:	jl     0x40f2d9
  40f26d:	inc    ebx
  40f26e:	jp     0x40f2b4
  40f270:	imul   esp,DWORD PTR [ebx-0x4b],0xb2f870
  40f277:	xor    ch,BYTE PTR [edx+0x4b]
  40f27a:	mov    ah,0xc9
  40f27c:	(bad)  
  40f27e:	mov    eax,ebx
  40f280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f281:	sbb    ebx,DWORD PTR [ecx-0x352b578c]
  40f287:	jmp    0xe732:0x2f4207d
  40f28e:	push   es
  40f28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f290:	xlat   BYTE PTR ds:[ebx]
  40f291:	les    esp,FWORD PTR [ebx-0x26]
  40f294:	pop    esp
  40f295:	sbb    ah,BYTE PTR [edi-0x3d76f746]
  40f29b:	je     0x40f2df
  40f29d:	xchg   BYTE PTR [di-0x1e],ah
  40f2a1:	cld    
  40f2a2:	sub    DWORD PTR [edx],0x9
  40f2a5:	ret    0x6606
  40f2a8:	repnz and al,0x8d
  40f2ab:	add    DWORD PTR [esi],edi
  40f2ad:	aas    
  40f2ae:	and    eax,0x3bacb64b
  40f2b3:	test   eax,0x2e338a4e
  40f2b8:	xchg   edi,eax
  40f2b9:	inc    esi
  40f2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2bb:	pop    ecx
  40f2bc:	rcl    DWORD PTR [eax-0x60],1
  40f2bf:	sar    DWORD PTR [ebp-0x42224af4],cl
  40f2c5:	adc    dh,al
  40f2c7:	mov    ebp,0xd0004686
  40f2cc:	or     al,0xff
  40f2ce:	nop
  40f2cf:	retf   0x5469
  40f2d2:	xchg   ah,al
  40f2d4:	addr16 xor BYTE PTR [bp+si+0x9],ch
  40f2d9:	add    bh,dh
  40f2db:	fild   QWORD PTR fs:[bp+si-0x57ba]
  40f2e1:	xor    edx,edx
  40f2e3:	call   0xd486:0xc659a688
  40f2ea:	loope  0x40f287
  40f2ec:	(bad)  
  40f2ed:	push   esp
  40f2ee:	stos   DWORD PTR es:[edi],eax
  40f2ef:	movups xmm4,xmm4
  40f2f2:	in     eax,dx
  40f2f3:	cmp    DWORD PTR [esi-0x6f],ebp
  40f2f6:	daa    
  40f2f7:	jmp    0x5549:0x66a80e55
  40f2fe:	add    BYTE PTR [edi],dh
  40f300:	sbb    al,dh
  40f302:	push   esi
  40f303:	inc    eax
  40f304:	inc    edx
  40f305:	adc    eax,0x1ebaae6a
  40f30a:	cmp    eax,DWORD PTR [ecx-0x1e]
  40f30d:	xor    BYTE PTR [ebx],dl
  40f30f:	and    cl,BYTE PTR [eax+0x427cd18c]
  40f315:	push   ecx
  40f316:	test   DWORD PTR [edx-0x4c32db63],edx
  40f31c:	mov    eax,0x6d5e2de7
  40f321:	push   ss
  40f322:	jg     0x40f378
  40f324:	std    
  40f325:	pop    esi
  40f326:	mov    WORD PTR [edx+eiz*1-0x4a],fs
  40f32a:	pop    ebp
  40f32b:	xor    ch,BYTE PTR [esi]
  40f32d:	cvtps2pd xmm4,QWORD PTR [edi+0x23]
  40f331:	xor    al,0xd3
  40f333:	mov    cl,BYTE PTR [ecx+0x48]
  40f336:	ins    BYTE PTR es:[edi],dx
  40f337:	or     DWORD PTR [edx-0x672860b1],edi
  40f33d:	ret    0x8340
  40f340:	jge    0x40f2d3
  40f342:	call   0xda1e:0xd32420d8
  40f349:	sub    ebx,DWORD PTR [edx+edx*4-0x240120f8]
  40f350:	ficomp DWORD PTR [ebx+0x7475b044]
  40f356:	mov    ah,0xbd
  40f358:	rcl    BYTE PTR [edi+ebp*4-0x6d309810],cl
  40f35f:	adc    bl,BYTE PTR [ecx-0x1ec5e7fb]
  40f365:	cmp    dh,bh
  40f367:	adc    WORD PTR [ebx-0x3d53f842],ax
  40f36e:	lods   al,BYTE PTR ds:[esi]
  40f36f:	jnp    0x40f3e5
  40f371:	inc    edi
  40f372:	dec    ebp
  40f373:	xor    al,0x60
  40f375:	inc    ebx
  40f376:	rcl    esi,cl
  40f378:	dec    ecx
  40f379:	imul   esi,DWORD PTR [edi+0x341d8d88],0x4f
  40f380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f381:	(bad)  
  40f383:	push   0xffffff89
  40f385:	xor    DWORD PTR [edi],edi
  40f387:	ja     0x40f3a0
  40f389:	sub    ecx,DWORD PTR [ebx-0x1a]
  40f38c:	add    al,0xc2
  40f38e:	mov    dh,0x47
  40f390:	push   ecx
  40f391:	dec    ebx
  40f392:	xchg   edi,eax
  40f393:	xor    BYTE PTR [ecx],0xa1
  40f396:	mov    ds:0x20a1c087,eax
  40f39b:	adc    al,cl
  40f39d:	clc    
  40f39e:	cld    
  40f39f:	add    al,BYTE PTR [esi-0x8]
  40f3a2:	fld    DWORD PTR [ebx]
  40f3a4:	addr16 stc 
  40f3a6:	add    esi,DWORD PTR [edi]
  40f3a8:	sbb    BYTE PTR [edi-0x7ca95338],ch
  40f3ae:	pop    edi
  40f3af:	data16 sub dl,BYTE PTR [edi+0x35c3c133]
  40f3b6:	(bad)  
  40f3b7:	in     eax,0x72
  40f3b9:	lea    esi,[ebp+0x5b5d34be]
  40f3bf:	(bad)  
  40f3c0:	js     0x40f35c
  40f3c2:	retf   
  40f3c3:	mov    esi,0xc37202b4
  40f3c8:	mov    eax,ds:0x1c0fbe66
  40f3cd:	popf   
  40f3ce:	xchg   BYTE PTR [ebx],al
  40f3d0:	mov    bh,0x8b
  40f3d2:	jmp    0x531f78ca
  40f3d7:	dec    ecx
  40f3d8:	jb     0x40f40c
  40f3da:	popf   
  40f3db:	aam    0xc7
  40f3dd:	mov    eax,0x2c002a6d
  40f3e2:	pop    ds
  40f3e3:	jnp    0x40f390
  40f3e5:	rep ins BYTE PTR es:[edi],dx
  40f3e7:	(bad)  
  40f3e8:	mov    bl,BYTE PTR [edi+0x6d]
  40f3eb:	ret    0x2a57
  40f3ee:	jmp    0x9dd3:0xb524e0d
  40f3f5:	lds    ecx,FWORD PTR [ebp+0x264f1cd8]
  40f3fb:	or     ah,cl
  40f3fd:	xchg   ecx,eax
  40f3fe:	jnp    0x40f45e
  40f400:	sbb    al,0x97
  40f402:	adc    edi,DWORD PTR [esi]
  40f404:	fild   QWORD PTR [esi]
  40f406:	xlat   BYTE PTR ds:[ebx]
  40f407:	daa    
  40f408:	mov    al,0x23
  40f40a:	mov    dh,0x2b
  40f40c:	lds    edi,FWORD PTR [edx]
  40f40e:	cdq    
  40f40f:	adc    ecx,eax
  40f411:	jnp    0x40f3df
  40f413:	test   DWORD PTR cs:[ebp+0x1ad0ffd],ebp
  40f41a:	ins    BYTE PTR es:[edi],dx
  40f41b:	les    ebx,FWORD PTR [edx+ebx*4]
  40f41e:	mov    ch,0x6e
  40f420:	mov    esp,0xd5bc9ec3
  40f425:	and    BYTE PTR [edx+eiz*4],bh
  40f428:	jl     0x40f467
  40f42a:	inc    edx
  40f42b:	jp     0x40f3fb
  40f42d:	iret   
  40f42e:	xor    al,0xa4
  40f430:	inc    edi
  40f431:	pop    ss
  40f432:	pop    eax
  40f433:	ss jmp 0xaf87b36a
  40f439:	outs   dx,DWORD PTR ds:[esi]
  40f43a:	enter  0xfd04,0xcd
  40f43e:	xchg   esi,eax
  40f43f:	jmp    0xe321:0x17fd4714
  40f446:	xchg   edi,eax
  40f447:	ja     0x40f3e5
  40f449:	inc    esp
  40f44a:	jecxz  0x40f46f
  40f44c:	add    DWORD PTR [ecx-0x14],edi
  40f44f:	push   edx
  40f450:	push   0xed717897
  40f455:	mov    DWORD PTR [edx+0x4a],eax
  40f458:	addr16 mov dh,0x1d
  40f45b:	sbb    al,0x2a
  40f45d:	pop    eax
  40f45e:	push   ecx
  40f45f:	jne    0x40f421
  40f461:	pop    es
  40f462:	es das 
  40f464:	call   0xee47:0x52a94b4e
  40f46b:	outs   dx,BYTE PTR ds:[esi]
  40f46c:	cs clc 
  40f46e:	pop    edi
  40f46f:	jo     0x40f477
  40f471:	add    DWORD PTR [ebp+esi*8-0x43964dbb],eax
  40f478:	mul    ecx
  40f47a:	push   ss
  40f47b:	and    al,0xa7
  40f47d:	outs   dx,DWORD PTR ds:[esi]
  40f47e:	pop    ebx
  40f47f:	bound  ecx,QWORD PTR ds:0x9c86896
  40f485:	aaa    
  40f486:	pop    eax
  40f487:	fidivr DWORD PTR [ecx+eiz*4+0x732b3433]
  40f48e:	pushf  
  40f48f:	add    eax,0x7b48b1bd
  40f494:	cs mov eax,0x9b70e968
  40f49a:	pusha  
  40f49b:	fwait
  40f49c:	sbb    cl,BYTE PTR [esi+ecx*1-0xbe8b7ca]
  40f4a3:	call   0xee54:0x4ab5016f
  40f4aa:	push   eax
  40f4ab:	and    DWORD PTR [esi+ecx*1-0x58],esp
  40f4af:	fistp  WORD PTR [ecx+0x44]
  40f4b2:	and    edx,edx
  40f4b4:	push   es
  40f4b5:	cmp    edx,edx
  40f4b7:	or     cl,BYTE PTR [edx+ebp*1+0x16]
  40f4bb:	sbb    al,0xdf
  40f4bd:	mov    bl,0x92
  40f4bf:	or     al,0xd2
  40f4c1:	jl     0x40f492
  40f4c3:	xchg   ebx,eax
  40f4c4:	in     al,0x68
  40f4c6:	ins    DWORD PTR es:[edi],dx
  40f4c7:	jmp    0xfbc9:0x3a1cb92a
  40f4ce:	xor    DWORD PTR [edi+0x375a76a1],esi
  40f4d4:	mov    edi,0x95582a1d
  40f4d9:	xchg   edi,eax
  40f4da:	dec    esi
  40f4db:	test   al,0x42
  40f4dd:	mul    BYTE PTR ds:[ebx+0x77]
  40f4e1:	add    BYTE PTR [eax-0x5e],0x3b
  40f4e5:	and    eax,DWORD PTR [edx]
  40f4e7:	xor    ebp,DWORD PTR [ebx-0x7eef3b37]
  40f4ed:	js     0x40f4a2
  40f4ef:	mov    bh,0xaa
  40f4f1:	inc    ecx
  40f4f2:	mov    BYTE PTR [esi],ch
  40f4f4:	mov    BYTE PTR [eax+0x1764243e],ah
  40f4fa:	mov    esp,0x41fa95cd
  40f4ff:	mov    ebp,0x3faaaa38
  40f504:	shl    DWORD PTR [edi+ecx*4],1
  40f507:	retf   0xb9bc
  40f50a:	repz retf 0x26cf
  40f50e:	outs   dx,DWORD PTR ds:[esi]
  40f50f:	xchg   sp,ax
  40f511:	mov    edi,0x7476a838
  40f516:	lahf   
  40f517:	and    BYTE PTR [esi+0x1b],dh
  40f51a:	js     0x40f4f8
  40f51c:	in     al,dx
  40f51d:	fbstp  TBYTE PTR [ecx+eax*1]
  40f520:	fdivr  st(1),st
  40f522:	imul   eax,DWORD PTR [ebx+0x4d],0xae23b750
  40f529:	ror    DWORD PTR [eax-0x42],cl
  40f52c:	xlat   BYTE PTR ds:[ebx]
  40f52d:	pop    es
  40f52e:	dec    ecx
  40f52f:	xchg   ebp,eax
  40f530:	ins    DWORD PTR es:[edi],dx
  40f531:	push   esi
  40f532:	push   esp
  40f533:	cwde   
  40f534:	add    ebx,esi
  40f536:	call   0xc40d:0xcd3d50be
  40f53d:	or     al,0xf4
  40f53f:	repz mov dl,0x25
  40f542:	std    
  40f543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f544:	pop    eax
  40f545:	jo     0x40f4d5
  40f547:	or     BYTE PTR [edx+0x31],al
  40f54a:	add    DWORD PTR [ebx+0x10],edx
  40f54d:	nop
  40f54e:	cs icebp 
  40f550:	xchg   DWORD PTR [esi-0x72],esp
  40f553:	pop    ds
  40f554:	adc    eax,0x3aa5b52a
  40f559:	in     al,0x26
  40f55b:	push   cs
  40f55c:	mov    ds:0xb2f3d43c,eax
  40f561:	aas    
  40f562:	(bad)  
  40f563:	nop
  40f564:	push   ebx
  40f565:	gs call 0xc9db:0xcff2a024
  40f56d:	pushf  
  40f56e:	shl    ch,1
  40f570:	(bad)  
  40f572:	ret    0x31ca
  40f575:	and    edx,edi
  40f577:	and    ah,BYTE PTR [esi+0x2952064b]
  40f57d:	mov    ch,0xab
  40f57f:	mov    DWORD PTR [esi+0x56a703a],ebx
  40f585:	xchg   esp,eax
  40f586:	xchg   ebp,eax
  40f587:	pop    ss
  40f588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f589:	gs sub bl,dl
  40f58c:	enter  0xaf1a,0xdf
  40f590:	cmp    DWORD PTR [ebp+0x393950d1],edi
  40f596:	cmc    
  40f597:	cmp    al,0xc1
  40f599:	mov    eax,0x6d12e43a
  40f59e:	pop    ss
  40f59f:	xor    esp,DWORD PTR es:0x29f5ceb2
  40f5a6:	bound  esi,QWORD PTR [edi-0x10fe540d]
  40f5ac:	jno    0x40f5ec
  40f5ae:	bswap  ecx
  40f5b0:	mov    esi,0xf6551ec0
  40f5b5:	or     al,BYTE PTR [edx]
  40f5b7:	mov    ah,0x42
  40f5b9:	lahf   
  40f5ba:	pop    esp
  40f5bb:	push   0xeb7418ac
  40f5c0:	idiv   dh
  40f5c2:	gs clc 
  40f5c4:	mov    ds:0x3d43fd53,al
  40f5c9:	mov    al,ds:0x26877ddf
  40f5ce:	retf   0x85d
  40f5d1:	sbb    eax,DWORD PTR [eax-0x2f]
  40f5d4:	js     0x40f60e
  40f5d6:	adc    ebx,0x3e
  40f5d9:	sbb    edx,DWORD PTR [eax+ebx*4-0x45731b66]
  40f5e0:	lods   eax,DWORD PTR ds:[esi]
  40f5e1:	pushf  
  40f5e2:	loop   0x40f625
  40f5e4:	cmp    al,0x8e
  40f5e6:	out    0x2f,al
  40f5e8:	bound  esp,QWORD PTR [edx+0x72cde7dd]
  40f5ee:	pop    edi
  40f5ef:	sbb    edx,ebx
  40f5f1:	test   al,dh
  40f5f3:	ds and bh,0xd6
  40f5f7:	dec    esi
  40f5f8:	xor    eax,0xea167099
  40f5fd:	hlt    
  40f5fe:	daa    
  40f5ff:	rcr    DWORD PTR [ebx+ebx*4],1
  40f602:	xor    ebp,edx
  40f604:	add    BYTE PTR [ebx],ch
  40f606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f607:	mov    al,ds:0xbff729e8
  40f60c:	dec    edi
  40f60d:	jns    0x40f630
  40f60f:	out    0x9e,ax
  40f612:	ins    BYTE PTR es:[edi],dx
  40f613:	dec    edi
  40f614:	mov    edi,?
  40f616:	sahf   
  40f617:	out    dx,al
  40f618:	shr    BYTE PTR ds:[ecx+0x7b],1
  40f61c:	pop    edx
  40f61d:	add    eax,DWORD PTR [ebx]
  40f61f:	or     ah,BYTE PTR [edx+0x6f]
  40f622:	sbb    esp,edx
  40f624:	(bad)  
  40f625:	adc    DWORD PTR [ecx+ebp*1],0xce0ac2a2
  40f62c:	inc    esp
  40f62d:	ror    BYTE PTR [ebx],0xab
  40f630:	push   0x61
  40f632:	pop    ebp
  40f633:	(bad)  
  40f634:	(bad)  
  40f635:	lahf   
  40f636:	mov    ds:0x2fb8159,eax
  40f63b:	mov    ds:0xe26f5123,al
  40f640:	xchg   esi,eax
  40f641:	and    al,0xc
  40f643:	(bad)  
  40f644:	cmp    eax,0xa062ea2e
  40f649:	test   cl,0x8f
  40f64c:	xchg   esi,eax
  40f64d:	scas   eax,DWORD PTR es:[edi]
  40f64e:	int3   
  40f64f:	or     esi,DWORD PTR [ebx-0x30560fa9]
  40f655:	xchg   ebp,eax
  40f656:	je     0x40f6a4
  40f658:	ret    0xc287
  40f65b:	sbb    DWORD PTR [esi+0x4d],edi
  40f65e:	(bad)  
  40f65f:	fst    DWORD PTR [ecx-0x10]
  40f662:	mov    ebp,0x6e1667aa
  40f667:	fild   QWORD PTR [ecx+0x646ba8b]
  40f66d:	xchg   esp,eax
  40f66e:	sub    al,ah
  40f670:	and    eax,0xff1abe62
  40f675:	add    esi,DWORD PTR [ebp-0x142b10c5]
  40f67b:	dec    ebx
  40f67c:	add    eax,0x7bbf1139
  40f681:	cmp    eax,0x50c40410
  40f686:	jge    0x40f664
  40f688:	sbb    eax,0xc934ad60
  40f68d:	fisttp DWORD PTR [eax-0x60b4d6ef]
  40f693:	stc    
  40f694:	les    ebp,FWORD PTR [edi-0x75]
  40f697:	jns    0x40f62a
  40f699:	sti    
  40f69a:	sub    al,0x6f
  40f69c:	call   0xd3e9:0xc703d29c
  40f6a3:	and    al,0x0
  40f6a5:	add    BYTE PTR [ebx+0x4503c845],cl
  40f6ab:	or     BYTE PTR [ecx+0x458be845],cl
  40f6b1:	in     al,0x85
  40f6b3:	ror    BYTE PTR [edi],0x84
  40f6b6:	dec    eax
  40f6b7:	and    al,0x0
  40f6b9:	add    bh,al
  40f6bb:	inc    ebp
  40f6bc:	loopne 0x40f6be
  40f6be:	add    BYTE PTR [eax],al
  40f6c0:	add    BYTE PTR [edx+0x3],ch
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0xceda4df0
  40f71a:	sub    eax,DWORD PTR [edx]
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffe3
  40f724:	cwde   
  40f725:	mov    cs,esi
  40f727:	xor    eax,DWORD PTR [ecx]
  40f729:	sti    
  40f72a:	dec    bp
  40f72c:	sub    eax,0xcaf1b052
  40f731:	and    DWORD PTR [eax+0x4aedcb8e],edx
  40f737:	std    
  40f738:	xor    ebp,ecx
  40f73a:	xchg   ecx,eax
  40f73b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f73c:	xchg   bl,dl
  40f73e:	outs   dx,DWORD PTR ds:[esi]
  40f73f:	popa   
  40f740:	(bad)  
  40f741:	xchg   edi,eax
  40f742:	jb     0x40f793
  40f744:	icebp  
  40f745:	out    0xd6,eax
  40f747:	fprem1 
  40f749:	push   cs
  40f74a:	adc    ch,BYTE PTR [ebp+0x59459fa0]
  40f750:	icebp  
  40f751:	add    esp,esp
  40f753:	stos   DWORD PTR es:[edi],eax
  40f754:	cmc    
  40f755:	jno    0x40f747
  40f757:	int3   
  40f758:	xchg   ebx,eax
  40f759:	xor    al,BYTE PTR [edx-0x1b]
  40f75c:	inc    edi
  40f75d:	das    
  40f75e:	js     0x40f6f5
  40f760:	imul   esp,edx,0xc812e440
  40f766:	dec    esp
  40f767:	sbb    BYTE PTR [edi],al
  40f769:	jg     0x40f70a
  40f76b:	mov    dl,0xff
  40f76d:	rcr    dh,cl
  40f76f:	adc    esi,ebp
  40f771:	xor    al,0x2f
  40f773:	pop    es
  40f774:	loopne 0x40f745
  40f776:	scas   eax,DWORD PTR es:[edi]
  40f777:	gs js  0x40f718
  40f77a:	shl    DWORD PTR [edx-0x31],cl
  40f77d:	push   esp
  40f77e:	rol    BYTE PTR [ebx],1
  40f780:	cmp    bh,BYTE PTR ds:0xe0dceb8
  40f786:	pusha  
  40f787:	pmulhw mm0,mm4
  40f78a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f78b:	adc    al,0x24
  40f78d:	mov    cr0,ebp
  40f790:	sub    BYTE PTR [eax-0x7c0db719],al
  40f796:	jns    0x40f719
  40f798:	call   FWORD PTR [ecx]
  40f79a:	in     al,dx
  40f79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f79c:	jecxz  0x40f7a1
  40f79e:	sub    ch,BYTE PTR [eax-0xecb3bac]
  40f7a4:	xchg   esp,eax
  40f7a5:	lahf   
  40f7a6:	adc    bl,dl
  40f7a8:	xlat   BYTE PTR ds:[ebx]
  40f7a9:	inc    ebp
  40f7aa:	inc    ebx
  40f7ab:	mov    ah,0xe1
  40f7ad:	stc    
  40f7ae:	pop    ebp
  40f7af:	and    BYTE PTR [edx-0x6d],ah
  40f7b2:	out    0x61,eax
  40f7b4:	fsubr  DWORD PTR [eiz*1+0x6219bf6e]
  40f7bb:	fiadd  WORD PTR [edi+0x4c01628c]
  40f7c1:	mov    esp,DWORD PTR [esi-0x24]
  40f7c4:	call   0x7872:0x68194b40
  40f7cb:	lock dec edx
  40f7cd:	(bad)  
  40f7cf:	xchg   esi,eax
  40f7d0:	dec    ebx
  40f7d1:	data16 fadd DWORD PTR [ebp-0x4f171b3d]
  40f7d8:	xor    cl,al
  40f7da:	lods   al,BYTE PTR ds:[esi]
  40f7db:	pop    es
  40f7dc:	mov    bl,0x5a
  40f7de:	pop    ecx
  40f7df:	and    eax,0x14dc48de
  40f7e4:	aaa    
  40f7e5:	popa   
  40f7e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e7:	sti    
  40f7e8:	test   al,0x3d
  40f7ea:	lea    esp,ds:0x9fcbb97e
  40f7f0:	add    eax,0x9fc304fd
  40f7f5:	or     BYTE PTR [esi-0x62],al
  40f7f8:	push   esi
  40f7f9:	jl     0x40f79d
  40f7fb:	out    dx,eax
  40f7fc:	loope  0x40f7e1
  40f7fe:	and    DWORD PTR [edx+edx*1],0xffffffde
  40f802:	dec    esi
  40f803:	or     DWORD PTR [eax],ecx
  40f805:	pop    ebx
  40f806:	sub    DWORD PTR [eax+0x6f272647],edi
  40f80c:	jge    0x40f7e5
  40f80e:	add    bl,ah
  40f810:	inc    esp
  40f811:	out    0x5,al
  40f813:	in     al,dx
  40f814:	pop    ds
  40f815:	rcr    DWORD PTR [ecx+0x43],1
  40f818:	call   0xd714c366
  40f81d:	mov    edi,0x4b2d97e5
  40f822:	xchg   ebp,eax
  40f823:	sbb    BYTE PTR [ebx],bl
  40f825:	or     al,0xee
  40f827:	cld    
  40f828:	(bad)  
  40f829:	(bad)  
  40f82a:	jnp    0x40f87b
  40f82c:	mov    ch,0x45
  40f82e:	out    0xa7,eax
  40f830:	icebp  
  40f831:	mov    eax,0x6cad0817
  40f836:	xor    ecx,DWORD PTR [ecx+0x2768392d]
  40f83c:	push   0x2d
  40f83e:	popa   
  40f83f:	pushf  
  40f840:	push   edi
  40f841:	xor    cl,al
  40f843:	(bad)  
  40f844:	icebp  
  40f845:	scas   al,BYTE PTR es:[edi]
  40f846:	or     dl,BYTE PTR [edx-0x2a]
  40f849:	mov    ecx,fs
  40f84b:	mov    eax,0x27bb06f5
  40f850:	neg    BYTE PTR [ebp+0xf78ff0c]
  40f856:	inc    ecx
  40f857:	jno    0x40f7f7
  40f859:	cmp    dh,BYTE PTR [edx+0x9d248f5]
  40f85f:	sub    ebx,edx
  40f861:	jle    0x40f848
  40f863:	and    DWORD PTR [ebp+0x41a26f79],edx
  40f869:	mov    esp,cs
  40f86b:	push   esi
  40f86c:	test   al,0xe9
  40f86e:	out    0xb7,al
  40f870:	gs lock popa 
  40f873:	fstp   DWORD PTR [ebx+0x19]
  40f876:	jge    0x40f82f
  40f878:	mov    ebp,DWORD PTR [ebp-0x4d5c4641]
  40f87e:	xchg   edx,eax
  40f87f:	sbb    DWORD PTR [esi-0x40],edx
  40f882:	popf   
  40f883:	push   ss
  40f884:	ja     0x40f840
  40f886:	push   0x33a0d743
  40f88b:	outs   dx,DWORD PTR ds:[esi]
  40f88c:	and    al,0xda
  40f88e:	ins    DWORD PTR es:[edi],dx
  40f88f:	jle    0x40f827
  40f891:	call   DWORD PTR [ebx+eiz*8+0x10]
  40f895:	push   es
  40f896:	jmp    0x40f8a3
  40f898:	cmp    DWORD PTR [ebx],eax
  40f89a:	das    
  40f89b:	test   DWORD PTR [edi+edx*1-0x7],esi
  40f89f:	rep ins DWORD PTR es:[edi],dx
  40f8a1:	push   ebx
  40f8a2:	and    BYTE PTR [edx+0x37610881],ah
  40f8a8:	int3   
  40f8a9:	sbb    al,0x3f
  40f8ab:	sahf   
  40f8ac:	mov    ds:0xc5d2361c,eax
  40f8b1:	xchg   ebp,eax
  40f8b2:	in     al,0x73
  40f8b4:	jmp    0xe76b3a7f
  40f8b9:	(bad)  
  40f8ba:	stc    
  40f8bb:	leave  
  40f8bc:	fistp  QWORD PTR [edi]
  40f8be:	in     eax,dx
  40f8bf:	sbb    bl,BYTE PTR [edx]
  40f8c1:	inc    ebx
  40f8c2:	jbe    0x40f90d
  40f8c4:	or     BYTE PTR [edx-0x76],0xca
  40f8c8:	xchg   ecx,eax
  40f8c9:	mov    dh,0x9a
  40f8cb:	add    ebp,ecx
  40f8cd:	aad    0xab
  40f8cf:	xor    bl,bh
  40f8d1:	sahf   
  40f8d2:	mov    ebx,0xe2da0024
  40f8d7:	clc    
  40f8d8:	gs jb  0x40f91d
  40f8db:	or     DWORD PTR [ecx+esi*4+0x26],0x40
  40f8e0:	aas    
  40f8e1:	push   esi
  40f8e2:	push   ds
  40f8e3:	jge    0x40f956
  40f8e5:	faddp  st(7),st
  40f8e7:	cld    
  40f8e8:	jne    0x40f8cd
  40f8ea:	dec    ecx
  40f8eb:	push   ss
  40f8ec:	mov    al,ds:0x8e00cdcd
  40f8f1:	in     al,dx
  40f8f2:	dec    ecx
  40f8f3:	pop    es
  40f8f4:	leave  
  40f8f5:	mov    esi,0x6be21c42
  40f8fa:	loopne 0x40f8fd
  40f8fc:	icebp  
  40f8fd:	in     eax,0x1b
  40f8ff:	or     bh,BYTE PTR [esi+0x1e]
  40f902:	pop    ss
  40f903:	scas   al,BYTE PTR es:[edi]
  40f904:	and    ebp,DWORD PTR [esi+0x30]
  40f907:	mov    esp,0xd744d19e
  40f90c:	inc    ecx
  40f90d:	xor    BYTE PTR [esi+ecx*8-0x68b53217],cl
  40f914:	inc    edx
  40f915:	push   edx
  40f916:	mov    bh,0x6a
  40f918:	sub    cl,cl
  40f91a:	je     0x40f929
  40f91c:	add    DWORD PTR [eax+0x2b],0x80765fc6
  40f923:	clc    
  40f924:	inc    ebp
  40f925:	cmp    bl,BYTE PTR [ecx-0x35]
  40f928:	add    eax,ebp
  40f92a:	sub    eax,0xd0b1dd86
  40f92f:	push   esi
  40f930:	pop    esi
  40f931:	jmp    0x40f91a
  40f933:	push   es
  40f934:	mov    esp,0xb6ac055c
  40f93a:	js     0x40f8ca
  40f93c:	je     0x40f952
  40f93e:	shr    BYTE PTR [esi],1
  40f940:	das    
  40f941:	add    BYTE PTR [edi+0x16810c64],al
  40f947:	push   edi
  40f948:	adc    edx,DWORD PTR [edx]
  40f94a:	imul   ebp,DWORD PTR [ebx],0xf31a094a
  40f950:	and    eax,0xf0a713dd
  40f955:	out    0xc2,al
  40f957:	inc    edx
  40f958:	push   esp
  40f959:	iret   
  40f95a:	dec    esi
  40f95b:	mul    BYTE PTR [edx-0x3d]
  40f95e:	mov    dh,0xb7
  40f960:	in     al,0xae
  40f962:	mov    DWORD PTR [edx],ebx
  40f964:	xchg   ebx,eax
  40f965:	jb     0x40f92b
  40f967:	cli    
  40f968:	or     cx,WORD PTR [ecx+0xc]
  40f96c:	fdiv   QWORD PTR [esi+esi*2]
  40f96f:	arpl   WORD PTR [ecx+esi*8-0xd],cx
  40f973:	mov    ebx,0x42396f1b
  40f978:	mov    dh,0x93
  40f97a:	sti    
  40f97b:	fs fs inc ebp
  40f97e:	sub    edx,DWORD PTR [esi+0x2b3b85e2]
  40f984:	mov    dh,0x7e
  40f986:	das    
  40f987:	jecxz  0x40f9c9
  40f989:	jne    0x40f9bb
  40f98b:	std    
  40f98c:	cwde   
  40f98d:	jmp    0x2a48:0xe4a7725d
  40f994:	fdivr  DWORD PTR [ebx]
  40f996:	bound  ebx,QWORD PTR [edx+eax*4+0x747c9b27]
  40f99d:	push   0x485a86af
  40f9a2:	leave  
  40f9a3:	push   ds
  40f9a4:	outs   dx,DWORD PTR ds:[esi]
  40f9a5:	pop    es
  40f9a6:	mov    esi,0x8f600c28
  40f9ab:	ret    0xc61f
  40f9ae:	dec    ecx
  40f9af:	sar    bh,0xdd
  40f9b2:	fmul   DWORD PTR [ebp-0x606a67d6]
  40f9b8:	pop    eax
  40f9b9:	lds    esp,FWORD PTR [ebp+0x12]
  40f9bc:	ins    BYTE PTR es:[edi],dx
  40f9bd:	aam    0xc0
  40f9bf:	mov    eax,ds:0x3f5571f6
  40f9c4:	mov    ah,0xbd
  40f9c6:	gs mov ch,0x60
  40f9c9:	xchg   esi,eax
  40f9ca:	push   ds
  40f9cb:	dec    edi
  40f9cc:	in     al,dx
  40f9cd:	mov    edx,0x50eb317a
  40f9d2:	inc    edx
  40f9d3:	out    0xf,eax
  40f9d5:	stc    
  40f9d6:	sbb    al,0x91
  40f9d8:	(bad)  ds:0x8909c644
  40f9de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9df:	jg     0x40f984
  40f9e1:	shl    BYTE PTR [ebp+edi*2-0xf74dc4f],cl
  40f9e8:	mov    ah,0x9
  40f9ea:	or     BYTE PTR [eax+0x26],bl
  40f9ed:	hlt    
  40f9ee:	jp     0x40f9e7
  40f9f0:	sahf   
  40f9f1:	cwde   
  40f9f2:	cmp    al,0x11
  40f9f4:	sbb    al,BYTE PTR [edi]
  40f9f6:	cmc    
  40f9f7:	mov    ds:0x8a3f88cb,eax
  40f9fc:	xchg   edi,eax
  40f9fd:	push   ss
  40f9fe:	nop
  40f9ff:	push   ds
  40fa00:	cmp    al,0x92
  40fa02:	mov    cl,0x6
  40fa04:	stos   BYTE PTR es:[edi],al
  40fa05:	dec    edi
  40fa06:	xor    DWORD PTR ds:0xc987ea68,eax
  40fa0c:	jbe    0x40f9ef
  40fa0e:	mov    edx,0xb1cb9b94
  40fa13:	(bad)  
  40fa15:	sti    
  40fa16:	and    ebx,DWORD PTR [ebx]
  40fa18:	push   esp
  40fa19:	inc    eax
  40fa1a:	lods   al,BYTE PTR fs:[esi]
  40fa1c:	dec    edx
  40fa1d:	stos   BYTE PTR es:[edi],al
  40fa1e:	int    0x5d
  40fa20:	sbb    BYTE PTR [ebp-0x3f98f7db],ah
  40fa26:	dec    eax
  40fa27:	jg     0x40fa0a
  40fa29:	fst    QWORD PTR [esi+0x2ee3e9d2]
  40fa2f:	pop    esi
  40fa30:	gs pop ecx
  40fa32:	xor    BYTE PTR [edx+esi*1-0x3593c0d0],al
  40fa39:	mov    esp,ebx
  40fa3b:	push   esi
  40fa3c:	jae    0x40fa9c
  40fa3e:	dec    esp
  40fa3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa40:	imul   ecx,DWORD PTR [edi+0x6641f29e],0xacff993a
  40fa4a:	jno    0x40fa28
  40fa4c:	sbb    dl,BYTE PTR ds:0xffa3755
  40fa52:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40fa54:	pop    edi
  40fa55:	jb     0x40f9ff
  40fa57:	xor    al,0x5b
  40fa59:	mov    cl,BYTE PTR [eax]
  40fa5b:	jb     0x40fa91
  40fa5d:	and    BYTE PTR [edx+ebp*8-0x69f423ab],bl
  40fa64:	fucomip st,st(4)
  40fa66:	sbb    eax,esi
  40fa68:	cmp    eax,0x7cd5d863
  40fa6d:	xchg   al,cl
  40fa6f:	dec    edx
  40fa70:	or     bl,BYTE PTR [bp+si+0x7497]
  40fa75:	inc    esp
  40fa76:	aam    0x33
  40fa78:	push   0x62
  40fa7a:	cmp    DWORD PTR [ecx],ebx
  40fa7c:	pcmpeqb mm6,QWORD PTR [esi+0x19]
  40fa80:	icebp  
  40fa81:	adc    al,BYTE PTR [ebx+ebx*4-0x69]
  40fa85:	pop    esi
  40fa86:	add    edx,ebp
  40fa88:	shr    BYTE PTR [eax+0xc],0x2a
  40fa8c:	mov    ebp,cs
  40fa8e:	ins    BYTE PTR es:[edi],dx
  40fa8f:	or     al,0x6d
  40fa91:	arpl   WORD PTR [eax+edi*2-0x72],dx
  40fa95:	lds    edi,FWORD PTR [edi-0x3ca1278d]
  40fa9b:	jge    0x40fadc
  40fa9d:	in     eax,0xe5
  40fa9f:	gs shl BYTE PTR gs:[ebx+0x71],cl
  40faa4:	xor    al,0xf
  40faa6:	inc    ebx
  40faa7:	ins    DWORD PTR es:[edi],dx
  40faa8:	pop    ebx
  40faa9:	test   BYTE PTR [esi-0x5f29a6f],0xa5
  40fab0:	ins    BYTE PTR es:[edi],dx
  40fab1:	inc    esi
  40fab2:	hlt    
  40fab3:	in     eax,0xb7
  40fab5:	sub    DWORD PTR [ecx-0x1c],ebp
  40fab8:	jbe    0x40fb2b
  40faba:	jno    0x40faa9
  40fabc:	inc    BYTE PTR [edi-0x304786b0]
  40fac2:	or     eax,0xd96f12b0
  40fac7:	xor    BYTE PTR [eax],dl
  40fac9:	(bad)  [ebx-0x67]
  40facc:	sbb    DWORD PTR [ebx+0x64],edi
  40facf:	sbb    cl,BYTE PTR [ebp+0x50]
  40fad2:	idiv   BYTE PTR [edi]
  40fad4:	fld    DWORD PTR [eax+edi*8]
  40fad7:	push   ebp
  40fad8:	or     ah,BYTE PTR [edi]
  40fada:	out    dx,eax
  40fadb:	dec    edx
  40fadc:	jmp    0x40fb0b
  40fade:	adc    ebp,esp
  40fae0:	adc    eax,0xdf6e09ea
  40fae5:	(bad)  
  40fae6:	mov    dh,cl
  40fae8:	pop    edx
  40fae9:	mov    esi,0x6b7228aa
  40faee:	and    ecx,DWORD PTR [ebp+0x46f39e41]
  40faf4:	(bad)  
  40faf6:	into   
  40faf7:	repnz inc BYTE PTR [esi+0x6e]
  40fafb:	add    BYTE PTR cs:[edi+ebx*4+0x5c],0x3c
  40fb01:	jbe    0x40fb27
  40fb03:	inc    esi
  40fb04:	stos   BYTE PTR es:[edi],al
  40fb05:	je     0x40fb84
  40fb07:	push   0x226ec809
  40fb0c:	es jbe 0x40fb0f
  40fb0f:	sub    BYTE PTR [eax+0x29],ch
  40fb12:	mov    bp,0xc4b5
  40fb16:	(bad)  
  40fb17:	cwde   
  40fb18:	cmp    ebx,esp
  40fb1a:	inc    eax
  40fb1b:	retf   0x1bd2
  40fb1e:	sub    al,al
  40fb20:	jb     0x40faf1
  40fb22:	mov    esi,0x14ee49e8
  40fb27:	stc    
  40fb28:	fcomp  QWORD PTR ds:0xea919f03
  40fb2e:	mov    dh,0x93
  40fb30:	dec    edx
  40fb31:	js     0x40fb42
  40fb33:	lods   eax,DWORD PTR ds:[esi]
  40fb34:	jnp    0x40fb11
  40fb36:	std    
  40fb37:	sub    DWORD PTR [ebx],edi
  40fb39:	mov    cl,ah
  40fb3b:	inc    eax
  40fb3c:	ds mov ebx,0x10fd39f3
  40fb42:	xlat   BYTE PTR ds:[ebx]
  40fb43:	test   BYTE PTR [ecx-0x1f8360dc],bh
  40fb49:	pop    esp
  40fb4a:	out    0xeb,al
  40fb4c:	jno    0x40fb4f
  40fb4e:	adc    eax,0x29e2a5e1
  40fb53:	pop    esp
  40fb54:	or     ch,BYTE PTR [esi-0x64]
  40fb57:	mov    ds:0x57c66baf,al
  40fb5c:	mov    ebp,0x4a6d09
  40fb61:	pop    es
  40fb62:	jae    0x40fb41
  40fb64:	mov    ah,0xe3
  40fb66:	pop    es
  40fb67:	cmp    DWORD PTR [ecx],eax
  40fb69:	fcom   st(7)
  40fb6b:	sbb    al,0xab
  40fb6d:	int    0xde
  40fb6f:	jmp    0x64b67dae
  40fb74:	dec    BYTE PTR [edi-0x33]
  40fb77:	out    dx,al
  40fb78:	xchg   esp,eax
  40fb79:	sbb    BYTE PTR [esi],dl
  40fb7b:	je     0x40fba6
  40fb7d:	cld    
  40fb7e:	aam    0x9a
  40fb80:	sbb    DWORD PTR ds:0x535574b8,ebx
  40fb86:	inc    ebp
  40fb87:	aad    0x70
  40fb89:	sub    edx,DWORD PTR [ebp+0x1f]
  40fb8c:	je     0x40fb62
  40fb8e:	lods   al,BYTE PTR ds:[esi]
  40fb8f:	push   es
  40fb90:	dec    esp
  40fb91:	dec    esi
  40fb92:	xchg   edi,eax
  40fb93:	and    eax,0x6c9d60ab
  40fb98:	mov    ds:0x9b9b5dc0,eax
  40fb9d:	mov    al,ds:0x4381d34a
  40fba2:	inc    edx
  40fba3:	ja     0x40fb45
  40fba5:	shr    DWORD PTR [edx-0x692e0664],0x83
  40fbac:	inc    ecx
  40fbad:	imul   esi,DWORD PTR [ecx+0x2f],0x17
  40fbb1:	rol    BYTE PTR [edi-0x24],1
  40fbb4:	or     eax,0xb3b92968
  40fbb9:	lock adc cl,BYTE PTR [ebp+eiz*4-0x543cf784]
  40fbc1:	push   0xffffff9d
  40fbc3:	aam    0x62
  40fbc5:	shl    DWORD PTR [edx-0x1ecc18b5],cl
  40fbcb:	and    al,0x77
  40fbcd:	inc    ebx
  40fbce:	jnp    0x40fbd8
  40fbd0:	or     eax,0x24d9e1b6
  40fbd5:	leave  
  40fbd6:	push   ecx
  40fbd7:	push   es
  40fbd8:	ror    BYTE PTR [ecx],cl
  40fbda:	add    BYTE PTR [eax-0x5b1c8ca1],ah
  40fbe0:	icebp  
  40fbe1:	push   ebx
  40fbe2:	fwait
  40fbe3:	jb     0x40fc3c
  40fbe5:	sti    
  40fbe6:	dec    edx
  40fbe7:	loope  0x40fb71
  40fbe9:	mov    eax,ds:0x57ea8ae9
  40fbee:	sbb    cl,bl
  40fbf0:	jge    0x40fb81
  40fbf2:	(bad)  
  40fbf3:	pop    ebp
  40fbf4:	xchg   edi,eax
  40fbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf6:	cli    
  40fbf7:	sar    BYTE PTR [ebp-0x16],0xb7
  40fbfb:	imul   ecx,DWORD PTR [edx+ecx*2],0x7ed6206d
  40fc02:	xchg   edx,eax
  40fc03:	jl     0x40fc6a
  40fc05:	out    0x57,eax
  40fc07:	mov    dl,0x4
  40fc09:	ss jns 0x40fc42
  40fc0c:	jmp    0x3e8be355
  40fc11:	cli    
  40fc12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc13:	lods   al,BYTE PTR ds:[esi]
  40fc14:	push   ebx
  40fc15:	jbe    0x40fc0f
  40fc17:	mov    eax,0xc18c3ffc
  40fc1c:	or     eax,DWORD PTR [esi-0x55]
  40fc1f:	sbb    dh,BYTE PTR [ecx]
  40fc21:	inc    edx
  40fc22:	push   ss
  40fc23:	mov    cl,0x1b
  40fc25:	and    eax,0x5d926170
  40fc2a:	invd   
  40fc2c:	jg     0x40fc17
  40fc2e:	mov    ebx,0x5c2ffc20
  40fc33:	push   esi
  40fc34:	fsubr  DWORD PTR [ebp+0x67]
  40fc37:	xor    dh,dl
  40fc39:	cmp    edi,ecx
  40fc3b:	inc    edx
  40fc3c:	div    BYTE PTR [eax]
  40fc3e:	and    bl,BYTE PTR [edx+esi*2]
  40fc41:	sub    edi,DWORD PTR [edx-0x20b7022c]
  40fc47:	dec    ecx
  40fc48:	sub    eax,0x8ef37669
  40fc4d:	mov    ebx,0x1ce677ff
  40fc52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc53:	dec    esp
  40fc54:	nop
  40fc55:	push   esp
  40fc56:	mov    dh,0x8c
  40fc58:	sbb    BYTE PTR [ebx-0x53],ah
  40fc5b:	inc    edx
  40fc5c:	mov    WORD PTR [esp+ebp*2+0x5d],cs
  40fc60:	push   ebp
  40fc61:	pushf  
  40fc62:	fldl2t 
  40fc64:	push   0xffffffec
  40fc66:	nop
  40fc67:	jo     0x40fc99
  40fc69:	jns    0x40fc75
  40fc6b:	dec    edi
  40fc6c:	add    BYTE PTR [ecx],al
  40fc6e:	mov    ecx,0x540eb7d6
  40fc73:	out    0xe8,al
  40fc75:	mov    edx,0x385fe6d6
  40fc7a:	add    ecx,eax
  40fc7c:	out    dx,eax
  40fc7d:	xchg   edi,eax
  40fc7e:	push   ebx
  40fc7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc80:	sbb    esi,DWORD PTR [ecx]
  40fc82:	ins    DWORD PTR es:[edi],dx
  40fc83:	stc    
  40fc84:	or     ebp,DWORD PTR [edx+0x498c5313]
  40fc8a:	fs push edi
  40fc8c:	push   0x16
  40fc8e:	mov    ds:0x8984e07a,eax
  40fc93:	std    
  40fc94:	stc    
  40fc95:	cdq    
  40fc96:	xchg   ebx,eax
  40fc97:	cmp    eax,0x9d2d8bef
  40fc9c:	push   ecx
  40fc9d:	sbb    BYTE PTR [edi-0x15ac3184],al
  40fca3:	or     DWORD PTR [eax-0x4a8b70cf],edx
  40fca9:	inc    esp
  40fcaa:	mov    ecx,0xa9d27ea9
  40fcaf:	xchg   ebp,eax
  40fcb0:	or     al,0x5e
  40fcb2:	fs add ebx,eax
  40fcb5:	test   BYTE PTR [eax],0xdb
  40fcb8:	dec    ecx
  40fcb9:	jmp    0x40fcc8
  40fcbb:	add    BYTE PTR [esi+0x474095be],ch
  40fcc1:	inc    esi
  40fcc2:	enter  0x7f3,0xd8
  40fcc6:	pop    es
  40fcc7:	cli    
  40fcc8:	retf   0x8df
  40fccb:	mul    DWORD PTR [ecx-0x6a812675]
  40fcd1:	pop    edi
  40fcd2:	xor    esp,DWORD PTR [eax-0x5627161c]
  40fcd8:	mov    ds:0x765d224a,eax
  40fcdd:	or     al,0x24
  40fcdf:	data16 cmp al,0x9c
  40fce2:	or     eax,DWORD PTR [ebp+0x34]
  40fce5:	xchg   edi,eax
  40fce6:	jmp    0xc5d5f5e3
  40fceb:	push   0x9c915c4e
  40fcf0:	add    eax,0x1b29410d
  40fcf5:	mov    bl,0x4f
  40fcf7:	aas    
  40fcf8:	and    DWORD PTR [edi-0x2f],esi
  40fcfb:	push   ebp
  40fcfc:	push   ss
  40fcfd:	and    edi,DWORD PTR [ecx+0x4ce6e8f5]
  40fd03:	cmp    al,0xfd
  40fd05:	jns    0x40fccd
  40fd07:	mov    cl,0xfd
  40fd09:	jcxz   0x40fd32
  40fd0c:	and    bh,cl
  40fd0e:	in     eax,0xc9
  40fd10:	xchg   al,bl
  40fd12:	rcr    BYTE PTR [eax+0x710756eb],cl
  40fd18:	and    al,0x90
  40fd1a:	mov    ecx,0x1cf254c8
  40fd1f:	scas   al,BYTE PTR es:[edi]
  40fd20:	cmp    cl,BYTE PTR [edx+0xb]
  40fd23:	xor    al,0xb4
  40fd25:	fidiv  WORD PTR [esi-0x3973b0da]
  40fd2b:	out    0x6a,al
  40fd2d:	retf   0xda52
  40fd30:	mov    al,ds:0x2258f0d9
  40fd35:	icebp  
  40fd36:	inc    ebx
  40fd37:	and    BYTE PTR [edi+0x6],ah
  40fd3a:	cdq    
  40fd3b:	or     eax,0xa2b9aa5c
  40fd40:	dec    ebp
  40fd41:	mov    ebx,0x9ee3da8f
  40fd46:	push   ebp
  40fd47:	push   eax
  40fd48:	cdq    
  40fd49:	arpl   WORD PTR [eax-0x11f4bfc8],bx
  40fd4f:	inc    ecx
  40fd50:	dec    eax
  40fd51:	jg     0x40fcec
  40fd53:	adc    BYTE PTR [esi-0x2fe8ab1b],0x62
  40fd5a:	retf   
  40fd5b:	outs   dx,DWORD PTR ds:[esi]
  40fd5c:	ret    0x5dc8
  40fd5f:	jo     0x40fce9
  40fd61:	int    0xd9
  40fd63:	out    0xe3,al
  40fd65:	neg    ch
  40fd67:	sub    BYTE PTR [ebx+0x18606fb9],cl
  40fd6d:	and    ch,BYTE PTR [ebp+0x30]
  40fd70:	test   DWORD PTR [ebp-0x7c],ecx
  40fd73:	test   ah,dl
  40fd75:	int    0x80
  40fd77:	jns    0x40fd9e
  40fd79:	test   eax,0x817ea5ee
  40fd7e:	pop    ebx
  40fd7f:	in     al,dx
  40fd80:	mov    al,0x2f
  40fd82:	and    ch,al
  40fd84:	out    dx,al
  40fd85:	pop    ss
  40fd86:	adc    eax,0x16184267
  40fd8b:	ret    
  40fd8c:	push   esi
  40fd8d:	imul   ebp,ebp,0xa9df45af
  40fd93:	inc    esi
  40fd94:	xchg   BYTE PTR [ecx],ch
  40fd96:	ror    DWORD PTR [ecx+0x5c58e653],cl
  40fd9c:	ss out dx,al
  40fd9e:	sub    esi,ebp
  40fda0:	xchg   ebx,eax
  40fda1:	daa    
  40fda2:	icebp  
  40fda3:	xchg   DWORD PTR [esi],edx
  40fda5:	adc    eax,0x2d8d78d9
  40fdaa:	add    ah,BYTE PTR [edx+0x1c]
  40fdad:	or     edx,edx
  40fdaf:	lds    ebp,FWORD PTR [eax+ebx*8-0x1c]
  40fdb3:	pop    ebx
  40fdb4:	lock jge 0x40fdb6
  40fdb7:	lea    esp,[esi]
  40fdb9:	sub    al,0x7
  40fdbb:	or     al,0x48
  40fdbd:	add    DWORD PTR ds:0x21086a38,esi
  40fdc3:	fist   WORD PTR [esi]
  40fdc5:	in     al,0x1a
  40fdc7:	push   0xffffffc6
  40fdc9:	or     dl,bh
  40fdcb:	sub    dh,BYTE PTR [edi+0x2f]
  40fdce:	xchg   ebp,eax
  40fdcf:	jg     0x40fd8a
  40fdd1:	mov    ebp,0xc1306ffc
  40fdd6:	mov    edx,0xe0aa54d1
  40fddb:	push   ds
  40fddc:	cwde   
  40fddd:	dec    edx
  40fdde:	xor    DWORD PTR [ecx],ecx
  40fde0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fde1:	mov    ah,0x6d
  40fde3:	mov    ds:0xfd0b86a0,al
  40fde8:	loope  0x40fe5e
  40fdea:	ret    0xddea
  40fded:	ror    ecx,cl
  40fdef:	sahf   
  40fdf0:	outs   dx,BYTE PTR ds:[esi]
  40fdf1:	add    DWORD PTR [edi],ecx
  40fdf3:	inc    ebx
  40fdf4:	cmp    bl,BYTE PTR [edx]
  40fdf6:	cdq    
  40fdf7:	loope  0x40fe2f
  40fdf9:	call   0xc9e8c7df
  40fdfe:	loop   0x40fddd
  40fe00:	add    ebp,ebx
  40fe02:	sub    eax,0x29dc145f
  40fe07:	push   edi
  40fe08:	sbb    BYTE PTR [esi+0x6dd70307],0x44
  40fe0f:	jmp    0x40fe60
  40fe11:	out    0x88,eax
  40fe13:	adc    BYTE PTR [edx],bl
  40fe15:	sub    eax,0x731566d5
  40fe1a:	jae    0x40fe4c
  40fe1c:	das    
  40fe1d:	iret   
  40fe1e:	pop    esi
  40fe1f:	sub    BYTE PTR [edi+0x1d2215e2],0xb7
  40fe26:	pop    ebx
  40fe27:	dec    eax
  40fe28:	mov    ah,0x92
  40fe2a:	xor    eax,0x7ff58a52
  40fe2f:	or     eax,0x4cde557d
  40fe34:	pop    es
  40fe35:	out    dx,eax
  40fe36:	push   ss
  40fe37:	loop   0x40fe97
  40fe39:	mov    edi,DWORD PTR [ebx+0x64]
  40fe3c:	dec    ebp
  40fe3d:	sub    eax,0xf9c4b4b0
  40fe42:	(bad)  [ebx]
  40fe44:	sbb    al,0x40
  40fe46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe47:	jne    0x40fddd
  40fe49:	or     eax,ebx
  40fe4b:	or     eax,0xedc26aa0
  40fe50:	test   eax,0xb1041b5b
  40fe55:	aaa    
  40fe56:	jmp    0x40fe94
  40fe58:	jb     0x40fe7a
  40fe5a:	sti    
  40fe5b:	push   0x32
  40fe5d:	pop    edi
  40fe5e:	fbld   TBYTE PTR [edx-0x2e474e93]
  40fe64:	or     bh,al
  40fe66:	jbe    0x40fe92
  40fe68:	mov    al,ds:0x52093aa0
  40fe6d:	add    DWORD PTR [ecx+0x33],eax
  40fe70:	mov    ds:0xf8b2b9c7,eax
  40fe75:	cmp    BYTE PTR [ecx],bl
  40fe77:	pavgw  mm7,QWORD PTR ds:0xa2aed54
  40fe7e:	(bad)
  40fe83:	inc    ebp
  40fe84:	sti    
  40fe85:	pop    ebx
  40fe86:	cmp    DWORD PTR [ebp+ebp*2+0x20],esp
  40fe8a:	add    eax,0x15f8adbd
  40fe8f:	adc    bl,BYTE PTR [ebp-0x414ffb2a]
  40fe95:	xor    eax,0x7f9f960d
  40fe9a:	mov    WORD PTR [edx-0x78],?
  40fe9d:	lahf   
  40fe9e:	call   0x867497e2
  40fea3:	aad    0x34
  40fea5:	jo     0x40feb3
  40fea7:	inc    esi
  40fea8:	xchg   ebp,eax
  40fea9:	jnp    0x40fe81
  40feab:	loope  0x40febe
  40fead:	cmp    edx,ebx
  40feaf:	nop    DWORD PTR [edx+0x73]
  40feb3:	mov    ?,WORD PTR [edi-0x1b183084]
  40feb9:	pop    ebp
  40feba:	push   ds
  40febb:	test   DWORD PTR [edx+eax*2+0x72346e20],ecx
  40fec2:	int    0x3d
  40fec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec5:	xchg   DWORD PTR [edx-0x3643403c],eax
  40fecb:	xor    DWORD PTR cs:[ebx-0x28],edx
  40fecf:	pop    eax
  40fed0:	test   al,ah
  40fed2:	mov    WORD PTR ds:0x731eade9,gs
  40fed8:	jmp    0x88e3:0xaf2fa835
  40fedf:	std    
  40fee0:	sar    BYTE PTR [ebx],1
  40fee2:	mov    edx,0x4c46ba3
  40fee7:	sbb    edi,DWORD PTR [eax]
  40fee9:	push   edx
  40feea:	cmp    BYTE PTR [ecx+esi*8+0x32f09a41],dl
  40fef1:	hlt    
  40fef2:	mov    edx,0x1a5b8470
  40fef7:	and    bh,BYTE PTR [ebx-0x50d2f803]
  40fefd:	cmp    ecx,ebp
  40feff:	mov    edx,0x1d163b60
  40ff04:	cmp    al,0xde
  40ff06:	addr16 out dx,al
  40ff08:	aam    0x44
  40ff0a:	test   BYTE PTR [edi-0x56ec0b0b],cl
  40ff10:	mov    gs,WORD PTR [ebx-0x26]
  40ff13:	sahf   
  40ff14:	(bad)  
  40ff15:	icebp  
  40ff16:	int3   
  40ff17:	jbe    0x40fec1
  40ff19:	outs   dx,DWORD PTR ds:[esi]
  40ff1a:	pop    esp
  40ff1b:	jl     0x40ff95
  40ff1d:	xor    eax,0xa9f55422
  40ff22:	mov    al,ds:0x131ddabf
  40ff27:	xchg   ebx,eax
  40ff28:	pop    ss
  40ff29:	mov    dl,0x17
  40ff2b:	dec    ebp
  40ff2c:	retf   
  40ff2d:	cmp    eax,0xed55e393
  40ff32:	outs   dx,DWORD PTR ds:[esi]
  40ff33:	push   cs
  40ff34:	mov    bh,0x2c
  40ff36:	imul   esi,DWORD PTR [ebx+0x700d0ebc],0x80557eea
  40ff40:	ret    0x3b56
  40ff43:	sahf   
  40ff44:	jno    0x40fed0
  40ff46:	cmc    
  40ff47:	in     eax,0x95
  40ff49:	mov    ch,0xff
  40ff4b:	cmp    al,ah
  40ff4d:	sbb    eax,0xf9f5526e
  40ff52:	pop    edx
  40ff53:	jo     0x40ffd4
  40ff55:	or     eax,DWORD PTR [esi-0x5e85597a]
  40ff5b:	mov    BYTE PTR [edx],0x9a
  40ff5e:	pop    ds
  40ff5f:	push   edi
  40ff60:	cdq    
  40ff61:	xor    DWORD PTR [esi-0x29],edx
  40ff64:	jnp    0x40feed
  40ff66:	fnstenv [eax+0x4c]
  40ff69:	aaa    
  40ff6a:	adc    DWORD PTR [ecx],esi
  40ff6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff6d:	shl    ebp,cl
  40ff6f:	in     eax,dx
  40ff70:	mov    al,0xc6
  40ff72:	xchg   edx,eax
  40ff73:	push   0xfd68d17b
  40ff78:	adc    al,0xef
  40ff7a:	daa    
  40ff7b:	lds    ebp,FWORD PTR [ecx]
  40ff7d:	xchg   ebx,eax
  40ff7e:	mov    eax,0x56ca416c
  40ff83:	push   ebx
  40ff84:	scas   eax,DWORD PTR es:[edi]
  40ff85:	push   ebx
  40ff86:	mov    esi,0xc9b3988e
  40ff8b:	mov    bh,al
  40ff8d:	in     al,dx
  40ff8e:	xchg   ecx,eax
  40ff8f:	sub    al,0xca
  40ff91:	out    dx,eax
  40ff92:	daa    
  40ff93:	loope  0x40ff60
  40ff95:	mov    ebp,0xe20b8c75
  40ff9a:	(bad)  
  40ff9b:	ins    DWORD PTR es:[edi],dx
  40ff9c:	idiv   bh
  40ff9e:	shr    DWORD PTR [edx],cl
  40ffa0:	and    eax,0xcf8cd9ca
  40ffa5:	dec    ebx
  40ffa6:	mov    ah,0x32
  40ffa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffa9:	jns    0x40ff45
  40ffab:	pop    esp
  40ffac:	(bad)  
  40ffad:	mov    WORD PTR [ecx+edx*4+0x33daab72],fs
  40ffb4:	mov    esp,0x5403c5f0
  40ffb9:	mov    bh,0x31
  40ffbb:	jg     0x40ff67
  40ffbd:	pop    esi
  40ffbe:	sbb    BYTE PTR [esi],dh
  40ffc0:	ins    DWORD PTR es:[edi],dx
  40ffc1:	xchg   ebx,eax
  40ffc2:	test   eax,0xb0c8648f
  40ffc7:	(bad)  
  40ffc8:	jmp    0xf66c7776
  40ffcd:	stos   DWORD PTR es:[edi],eax
  40ffce:	jns    0x40ffa1
  40ffd0:	xor    dl,BYTE PTR [eax+0x2dbd0212]
  40ffd6:	push   ebx
  40ffd7:	shr    BYTE PTR [edx+0x2a],1
  40ffda:	cmc    
  40ffdb:	popa   
  40ffdc:	mov    esp,0xead91921
  40ffe1:	addr16 xchg ecx,eax
  40ffe3:	das    
  40ffe4:	xchg   ebp,eax
  40ffe5:	dec    ebx
  40ffe6:	adc    al,0xd3
  40ffe8:	inc    edx
  40ffe9:	dec    edi
  40ffea:	push   esp
  40ffeb:	inc    esi
  40ffec:	fidivr DWORD PTR [esi-0x21]
  40ffef:	jmp    0xbff162d3
  40fff4:	sub    eax,0x242865fc
  40fff9:	pop    edx
  40fffa:	lahf   
  40fffb:	ins    BYTE PTR es:[edi],dx
  40fffc:	add    DWORD PTR [eax+0x4c],eax
  40ffff:	push   0x4b2ae9b9
  410004:	ja     0x41007c
  410006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410007:	lods   al,BYTE PTR ds:[esi]
  410008:	call   0xb314617e
  41000d:	cmp    BYTE PTR [eax-0x10964323],cl
  410013:	out    0x4d,al
  410015:	pop    ds
  410016:	and    al,0x11
  410018:	in     al,0xe6
  41001a:	and    DWORD PTR [ebx+0x4bdcb347],ebx
  410020:	es adc dl,bh
  410023:	or     al,0xdd
  410025:	inc    eax
  410026:	xlat   BYTE PTR ds:[ebx]
  410027:	mov    edx,0x19e0b392
  41002c:	fild   DWORD PTR [ecx]
  41002e:	sahf   
  41002f:	add    al,0x44
  410031:	xor    bl,BYTE PTR [ecx]
  410033:	test   al,0xdd
  410035:	xchg   ebp,eax
  410036:	pusha  
  410037:	cld    
  410038:	sbb    ebp,DWORD PTR [edi-0x52]
  41003b:	call   0x1354c53c
  410040:	out    dx,eax
  410041:	and    edx,DWORD PTR [esi-0x283141bc]
  410047:	loopne 0x4100a6
  410049:	push   edi
  41004a:	(bad)  
  41004b:	sbb    cl,BYTE PTR [esi+0x25]
  41004e:	pop    es
  41004f:	ror    ah,cl
  410051:	fs daa 
  410053:	into   
  410054:	cmp    dl,BYTE PTR [esi-0x4dc50018]
  41005a:	mov    dh,BYTE PTR [esi]
  41005c:	stos   DWORD PTR es:[edi],eax
  41005d:	xor    eax,esp
  41005f:	and    BYTE PTR [ebx],ah
  410061:	dec    esp
  410062:	dec    eax
  410063:	fstp   TBYTE PTR [ecx+0x7a]
  410066:	mov    eax,ds:0xbc8ba194
  41006b:	xor    edx,edi
  41006d:	adc    eax,0xf9f1e7d2
  410072:	add    DWORD PTR [esp+ebx*2],0x89414cc5
  410079:	scas   al,BYTE PTR es:[edi]
  41007a:	mov    cl,0x20
  41007c:	sub    BYTE PTR [eax+esi*4],ah
  41007f:	xchg   edx,eax
  410080:	bound  esi,QWORD PTR [edi]
  410082:	push   edx
  410083:	arpl   dx,bx
  410085:	adc    esp,ecx
  410087:	mov    cl,BYTE PTR [ebp-0x57]
  41008a:	imul   esi,DWORD PTR ds:0x8dcf39b0,0xffffffa1
  410091:	fcomip st,st(6)
  410093:	cmp    BYTE PTR ds:0x94bca349,ch
  410099:	jp     0x41004f
  41009b:	loop   0x410114
  41009d:	mul    dl
  41009f:	xchg   edi,eax
  4100a0:	add    al,0x52
  4100a2:	jnp    0x4100af
  4100a4:	push   ecx
  4100a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100a6:	jp     0x4100bd
  4100a8:	or     al,0x67
  4100aa:	push   ds
  4100ab:	mov    bl,BYTE PTR [esi+0x30d236b2]
  4100b1:	js     0x4100ae
  4100b3:	push   ds
  4100b4:	std    
  4100b5:	aaa    
  4100b6:	push   ecx
  4100b7:	dec    ebp
  4100b8:	pop    esi
  4100b9:	dec    edx
  4100ba:	dec    edx
  4100bb:	mov    dh,0x9a
  4100bd:	nop
  4100be:	retf   0x54d8
  4100c1:	fsubr  st,st(2)
  4100c3:	scas   al,BYTE PTR es:[edi]
  4100c4:	stc    
  4100c5:	(bad)
  4100c9:	ror    BYTE PTR [ebp+0x4b],cl
  4100cc:	dec    edx
  4100cd:	retf   0xa9a2
  4100d0:	push   ds
  4100d1:	and    edx,DWORD PTR [ecx+0x5188062]
  4100d7:	(bad)  
  4100d8:	ficomp WORD PTR [edx-0x45]
  4100db:	cld    
  4100dc:	mov    ah,0x71
  4100de:	sub    al,0x86
  4100e0:	imul   edi,DWORD PTR [ebx-0x7dd3cd65],0x12
  4100e7:	addr16 ret 0x9246
  4100eb:	fcomp  QWORD PTR [esi-0x26e8f2c5]
  4100f1:	not    DWORD PTR [edx-0x5b]
  4100f4:	xchg   edi,eax
  4100f5:	into   
  4100f6:	aad    0xf7
  4100f8:	data16 jg 0x41011e
  4100fb:	sub    eax,0x882ae884
  410100:	scas   al,BYTE PTR es:[edi]
  410101:	mov    ecx,0x2c98d383
  410106:	fcmovu st,st(3)
  410108:	test   BYTE PTR [edx],0x2e
  41010b:	add    eax,0xf199f2f4
  410110:	pop    edx
  410111:	scas   eax,DWORD PTR es:[edi]
  410112:	jmp    0x41009e
  410114:	test   BYTE PTR [esp+edx*1],bl
  410117:	test   eax,0xda3a44d5
  41011d:	out    dx,eax
  41011e:	hlt    
  41011f:	pop    eax
  410120:	fild   DWORD PTR [ecx]
  410122:	mov    al,0xad
  410124:	(bad)  
  410125:	test   bl,0xee
  410128:	imul   ebx,ebp,0xffffffff
  41012b:	and    eax,0xa5ea41d0
  410130:	imul   esi,DWORD PTR [ecx],0x6e754442
  410136:	dec    ebx
  410137:	mov    ebx,edi
  410139:	push   0xffffff81
  41013b:	out    0xd0,al
  41013d:	mov    al,0xcb
  41013f:	add    eax,0xcf84f65
  410144:	pop    edx
  410145:	sub    DWORD PTR [edi-0x2d],edx
  410148:	enter  0x8d03,0x87
  41014c:	or     ch,BYTE PTR [ebp+0x52]
  41014f:	cmp    al,0x12
  410151:	lock push edi
  410153:	sub    al,0x9f
  410155:	aam    0x88
  410157:	jns    0x41014e
  410159:	cmp    edi,DWORD PTR [eax-0x72]
  41015c:	inc    ebx
  41015d:	sti    
  41015e:	iret   
  41015f:	push   edx
  410160:	cli    
  410161:	and    bl,BYTE PTR [ecx-0x79]
  410164:	dec    esi
  410165:	adc    BYTE PTR [ebx-0x3a8f7e29],dh
  41016b:	popf   
  41016c:	mov    ebp,0x3d2b4f36
  410171:	js     0x4100f7
  410173:	dec    ebx
  410174:	pop    esp
  410175:	mov    ebx,0xd1adad75
  41017a:	inc    esi
  41017b:	ret    
  41017c:	test   DWORD PTR [esi-0x7b],0x1c2fe383
  410183:	in     eax,dx
  410184:	sub    BYTE PTR [edi-0x74e34b92],bh
  41018a:	std    
  41018b:	mov    al,ds:0x688b5297
  410190:	repnz in eax,0xe1
  410193:	inc    ebp
  410194:	fdivrp st(6),st
  410196:	and    eax,DWORD PTR [ecx-0x3c205b54]
  41019c:	add    ebx,DWORD PTR ds:0x21fb9d47
  4101a2:	xor    ecx,DWORD PTR [ecx-0x6f7990a3]
  4101a8:	jbe    0x41020e
  4101aa:	ror    BYTE PTR [esi-0x371cff72],0xc2
  4101b1:	add    edi,DWORD PTR [ebx+0x19]
  4101b4:	mov    ecx,0xc85d16aa
  4101b9:	push   ebp
  4101ba:	test   eax,0x67be448
  4101bf:	and    BYTE PTR [edx],0xf9
  4101c2:	fdivr  DWORD PTR [esi-0x27]
  4101c5:	ds aam 0xd8
  4101c8:	lods   al,BYTE PTR ds:[esi]
  4101c9:	pop    ebx
  4101ca:	popa   
  4101cb:	and    BYTE PTR [ecx+0x15],bl
  4101ce:	leave  
  4101cf:	jl     0x41022c
  4101d1:	stos   DWORD PTR es:[edi],eax
  4101d2:	pop    ebp
  4101d3:	lods   al,BYTE PTR ds:[esi]
  4101d4:	push   eax
  4101d5:	push   ecx
  4101d6:	dec    ecx
  4101d7:	ins    BYTE PTR es:[edi],dx
  4101d8:	jnp    0x410258
  4101da:	aas    
  4101db:	mov    dh,0x36
  4101dd:	adc    al,0xbd
  4101df:	pop    ds
  4101e0:	push   DWORD PTR [esi+0x28b1d5a5]
  4101e6:	ret    
  4101e7:	in     al,0x65
  4101e9:	jg     0x4101a3
  4101eb:	xlat   BYTE PTR ds:[ebx]
  4101ec:	mov    BYTE PTR [eax-0x43],bh
  4101ef:	sahf   
  4101f0:	bnd jns 0x4101cb
  4101f3:	cmp    ebx,DWORD PTR [edi]
  4101f5:	sub    eax,edx
  4101f7:	cmp    al,0x73
  4101f9:	xchg   edi,eax
  4101fa:	mov    ebx,0xb1c06e8f
  4101ff:	mov    esp,esi
  410201:	or     edi,esi
  410203:	fstp   DWORD PTR [edi+eiz*2+0x37fdcdc6]
  41020a:	sbb    al,0x15
  41020c:	test   DWORD PTR ds:0x4409e9fa,ebx
  410212:	aad    0xeb
  410214:	adc    ebx,DWORD PTR [esi+0x6b]
  410217:	mov    eax,ds:0x60c6327
  41021c:	add    BYTE PTR [ebp-0x1e],0x96
  410220:	mov    esi,0x5135ed39
  410225:	mov    cl,0xc0
  410227:	mov    esp,0x15419053
  41022c:	addr16 daa 
  41022e:	scas   al,BYTE PTR es:[edi]
  41022f:	bound  esp,QWORD PTR [ebp-0x3a]
  410232:	inc    edx
  410233:	pushf  
  410234:	sbb    al,0xbb
  410236:	pop    ecx
  410237:	jmp    0xbf9f5395
  41023c:	and    BYTE PTR [edi+0x79],0x6
  410240:	pop    esp
  410241:	xor    al,BYTE PTR [esi+0x46]
  410244:	xor    DWORD PTR [edi+0x38],0x39
  410248:	int    0x6e
  41024a:	mov    dh,0x69
  41024c:	daa    
  41024d:	fist   DWORD PTR [ebp-0x44]
  410250:	les    edi,FWORD PTR [ebx-0xbfbe73f]
  410256:	leave  
  410257:	(bad)  
  410259:	and    edi,DWORD PTR [ebx]
  41025b:	pop    ecx
  41025c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41025d:	sahf   
  41025e:	xchg   DWORD PTR [ebp+ecx*2-0x58],eax
  410262:	adc    edx,edi
  410264:	in     eax,0xf7
  410266:	add    cl,ah
  410268:	aaa    
  410269:	loop   0x41028d
  41026b:	or     eax,0xfdc21532
  410270:	ss push ds
  410272:	sub    edi,esi
  410274:	inc    esp
  410275:	fsubrp st(6),st
  410277:	stos   BYTE PTR es:[edi],al
  410278:	lahf   
  410279:	cmp    DWORD PTR [ecx-0x75],ecx
  41027c:	pusha  
  41027d:	dec    edi
  41027e:	lds    ecx,FWORD PTR [ecx-0x7e75c89]
  410284:	inc    esi
  410285:	fadd   st(6),st
  410287:	cli    
  410288:	pop    es
  410289:	mov    ebx,0xf56f9317
  41028e:	sub    ah,BYTE PTR [edi+0x7f]
  410291:	addr16 push ss
  410293:	adc    bl,BYTE PTR [edi-0x25]
  410296:	sbb    BYTE PTR [ecx-0x577e9a4f],al
  41029c:	cmp    esp,DWORD PTR ds:0xa39d1fe3
  4102a2:	dec    edx
  4102a3:	in     al,dx
  4102a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102a5:	fldcw  WORD PTR [edi+0x113e949e]
  4102ab:	mov    ebp,esp
  4102ad:	sub    BYTE PTR [ecx+0x15],dh
  4102b0:	push   ebp
  4102b2:	daa    
  4102b3:	loop   0x41029e
  4102b5:	cmovle esp,ebx
  4102b8:	sbb    eax,0x3c38a8e1
  4102bd:	lds    ebx,FWORD PTR [eax+0x5083e89b]
  4102c3:	cmc    
  4102c4:	sbb    BYTE PTR [edi+0x44],ch
  4102c7:	cmp    esi,DWORD PTR ds:0x504269e7
  4102cd:	adc    al,0x1d
  4102cf:	inc    esp
  4102d0:	lock add edi,DWORD PTR [ebx+0x7b]
  4102d4:	dec    ecx
  4102d5:	daa    
  4102d6:	jmp    0xa8ba:0x77d1a7e
  4102dd:	sub    al,0x6a
  4102df:	cmc    
  4102e0:	add    eax,0x39a87d63
  4102e5:	jb     0x41027e
  4102e7:	fisub  DWORD PTR [ebx]
  4102e9:	aam    0x6d
  4102eb:	mov    fs,WORD PTR [ebx]
  4102ed:	pop    ebp
  4102ee:	test   eax,0xbf25fa31
  4102f3:	enter  0xaf50,0x5c
  4102f7:	std    
  4102f8:	scas   al,BYTE PTR es:[edi]
  4102f9:	pop    ebp
  4102fa:	scas   eax,DWORD PTR es:[edi]
  4102fb:	fbstp  TBYTE PTR [esi-0x4c06729d]
  410301:	fwait
  410302:	out    dx,al
  410303:	xchg   esi,eax
  410304:	mov    BYTE PTR [bp+di-0x1490],ch
  410309:	push   edx
  41030a:	clc    
  41030b:	outs   dx,DWORD PTR ds:[esi]
  41030c:	cmp    esi,DWORD PTR ds:0x1dcf89a1
  410312:	add    BYTE PTR [esi],ch
  410314:	cmp    BYTE PTR ss:[esi*8-0x27e65b04],dl
  41031c:	fisttp DWORD PTR [ecx-0x6e]
  41031f:	pop    ebx
  410320:	in     al,dx
  410321:	call   0xc66f:0xa0744322
  410328:	fs inc esp
  41032a:	mov    edx,0x5e9cf01f
  41032f:	sub    esi,DWORD PTR [edi]
  410331:	rcr    BYTE PTR [esi-0x5799c96b],cl
  410337:	std    
  410338:	add    al,BYTE PTR [edx+esi*1]
  41033b:	fisttp WORD PTR [edx+0x4]
  41033e:	mov    ds,WORD PTR [esi]
  410340:	mov    eax,ds:0x9a7371d6
  410345:	pop    esp
  410346:	xchg   ecx,edx
  410348:	(bad)  
  41034a:	dec    esi
  41034b:	inc    edx
  41034c:	je     0x41030e
  41034e:	sbb    BYTE PTR [edi-0x1b80220c],cl
  410354:	push   ss
  410355:	and    BYTE PTR [esi-0x80],dh
  410358:	fidivr WORD PTR [ecx]
  41035a:	inc    edi
  41035b:	cmp    DWORD PTR ds:0x609556c8,edx
  410361:	mov    bh,0x99
  410363:	or     DWORD PTR [edx+0x77],ecx
  410366:	ret    0x643f
  410369:	loop   0x410315
  41036b:	push   ebp
  41036c:	xchg   ebx,eax
  41036d:	loope  0x41037c
  41036f:	pop    edx
  410370:	adc    al,0x58
  410372:	cmp    al,0x3
  410374:	outs   dx,BYTE PTR ds:[esi]
  410375:	test   BYTE PTR [ebx+0x2387f2bc],cl
  41037b:	sub    ebp,DWORD PTR [edi+0x19f29fc5]
  410381:	int3   
  410382:	push   0xcd42707f
  410387:	popf   
  410388:	(bad)  
  410389:	nop
  41038a:	sbb    dh,ah
  41038c:	or     bl,BYTE PTR [ecx-0x69d75d7f]
  410392:	(bad)  
  410393:	adc    BYTE PTR [esi+eiz*8-0x4c],bh
  410397:	rol    BYTE PTR [ebx],0x9f
  41039a:	inc    BYTE PTR es:[ebx-0x35]
  41039e:	add    DWORD PTR [ebx-0x6],esp
  4103a1:	arpl   WORD PTR [ecx+0x65d2ae9e],bp
  4103a7:	sub    dl,BYTE PTR [edi]
  4103a9:	stos   BYTE PTR es:[edi],al
  4103aa:	push   ss
  4103ab:	adc    dl,BYTE PTR [esi+0x739e3d52]
  4103b1:	inc    ebx
  4103b2:	cmp    cl,BYTE PTR [ebp+ecx*1+0x2e]
  4103b6:	or     al,0x52
  4103b8:	mov    bh,0xcb
  4103ba:	(bad)  
  4103bb:	sub    dh,BYTE PTR [esi+0x47f9f9d7]
  4103c1:	sbb    ecx,DWORD PTR [ecx+0x61d0a018]
  4103c7:	js     0x410410
  4103c9:	iret   
  4103ca:	add    DWORD PTR ds:0x2f4b31bb,edi
  4103d0:	jbe    0x41040c
  4103d2:	mov    DWORD PTR [ebx],0x92a9577a
  4103d8:	lods   al,BYTE PTR ds:[esi]
  4103d9:	cmp    edi,DWORD PTR [ecx-0x63]
  4103dc:	test   DWORD PTR [edx-0x53],0xfb81991d
  4103e3:	xor    DWORD PTR [eax+0x1c],edi
  4103e6:	inc    ebx
  4103e7:	lea    edx,[edx-0x6a880795]
  4103ed:	clc    
  4103ee:	(bad)  
  4103ef:	push   eax
  4103f0:	sub    edx,DWORD PTR [ebx-0x52]
  4103f3:	repnz mov al,ds:0x9def6edc
  4103f9:	sbb    bh,BYTE PTR [ebx-0xb]
  4103fc:	sub    al,0x8f
  4103fe:	ins    DWORD PTR es:[edi],dx
  4103ff:	ret    
  410400:	mov    BYTE PTR [eax-0x2b0485ad],al
  410406:	fwait
  410407:	aaa    
  410408:	mov    ds:0xe53205eb,eax
  41040d:	push   0xffffffe6
  41040f:	jecxz  0x41040f
  410411:	push   edi
  410412:	in     eax,0x3d
  410414:	inc    edi
  410415:	bound  eax,QWORD PTR [edi+0x6b]
  410418:	mov    ebp,?
  41041a:	or     bl,al
  41041c:	mov    DWORD PTR [esp+esi*2-0x60dbbe3],esi
  410423:	es enter 0x9959,0x5c
  410428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410429:	addr16 jge 0x4103b8
  41042c:	push   ecx
  41042d:	cld    
  41042e:	or     eax,0x596ec1d0
  410433:	xchg   edi,eax
  410434:	hlt    
  410435:	inc    esi
  410436:	or     esp,DWORD PTR [eax+edi*4+0x60]
  41043a:	gs das 
  41043c:	mov    al,ds:0x451aac26
  410441:	not    dl
  410443:	and    al,0xf3
  410445:	jge    0x410447
  410447:	scas   al,BYTE PTR es:[edi]
  410448:	shl    BYTE PTR [esi-0x36135e49],1
  41044e:	cmp    BYTE PTR [esi-0x4781252c],bl
  410454:	(bad)  
  410455:	fist   DWORD PTR [edi*1-0x3bbca730]
  41045c:	add    al,0x14
  41045e:	jno    0x4103f7
  410460:	popf   
  410461:	cmp    ah,BYTE PTR [ebp-0x5c]
  410464:	and    edx,DWORD PTR [ecx-0xc090640]
  41046a:	mov    edi,ebp
  41046c:	inc    ecx
  41046d:	call   0x8057:0x322a43e4
  410474:	pop    eax
  410475:	imul   eax,DWORD PTR [ecx],0xfca4d6ef
  41047b:	imul   esp,DWORD PTR [edi],0xffffffe6
  41047e:	fimul  DWORD PTR [edx+0x1c4592e]
  410484:	mov    BYTE PTR [ecx+0x7856176f],bh
  41048a:	push   cs
  41048b:	(bad)  
  41048c:	jmp    0xa756:0x1df35944
  410493:	dec    eax
  410494:	fbld   TBYTE PTR ds:0x452f0e7c
  41049a:	xor    esp,DWORD PTR [edx]
  41049c:	clc    
  41049d:	(bad)  
  41049e:	cli    
  41049f:	xor    esp,ebx
  4104a1:	xchg   ebx,eax
  4104a2:	test   al,0xe1
  4104a4:	ja     0x4104f3
  4104a6:	fld    QWORD PTR [eax]
  4104a8:	sbb    BYTE PTR [edx+0x3a],dl
  4104ab:	xchg   BYTE PTR [eax],ah
  4104ad:	arpl   dx,cx
  4104af:	les    esp,FWORD PTR [edx]
  4104b1:	fstp   TBYTE PTR [esi+0x76b3468f]
  4104b7:	pop    ds
  4104b8:	xor    BYTE PTR [eax-0x59],dl
  4104bb:	mov    ds,edi
  4104bd:	cwde   
  4104be:	ds xchg esp,eax
  4104c0:	hlt    
  4104c1:	dec    esi
  4104c2:	retf   0x7dbe
  4104c5:	jno    0x410470
  4104c7:	scas   al,BYTE PTR es:[edi]
  4104c8:	and    eax,0x74362073
  4104cd:	pop    esp
  4104ce:	addr16 push 0x4dd39454
  4104d4:	mov    bl,0x98
  4104d6:	pusha  
  4104d7:	sbb    BYTE PTR [esi+0x17],dh
  4104da:	mov    ch,ch
  4104dc:	fisttp WORD PTR [ecx-0x35cb547]
  4104e2:	into   
  4104e3:	test   bh,dl
  4104e5:	add    eax,0xf5097663
  4104ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104eb:	push   0xac771e2f
  4104f0:	test   BYTE PTR [ecx+edi*2+0x74],ch
  4104f4:	leave  
  4104f5:	rcr    BYTE PTR [edi+0x742f993c],0xcb
  4104fc:	test   eax,0x73bc9f25
  410501:	xchg   edx,eax
  410502:	push   esp
  410503:	call   0xfbc3e2a7
  410508:	sbb    al,0x3c
  41050a:	push   ss
  41050b:	inc    edi
  41050c:	adc    eax,0x9737f1ae
  410511:	mov    ecx,?
  410513:	in     al,0x4
  410515:	mov    DWORD PTR [ecx+edx*1+0x1e],edi
  410519:	or     al,0x7a
  41051b:	add    esp,edi
  41051d:	jbe    0x410545
  41051f:	imul   BYTE PTR [edx+0x72]
  410522:	lds    ebx,FWORD PTR [ebx]
  410524:	pop    ecx
  410525:	inc    esi
  410526:	pop    ecx
  410527:	pushf  
  410528:	mov    edi,0x86a4a638
  41052d:	cs dec edi
  41052f:	push   ss
  410530:	add    eax,0xa87a7f28
  410535:	jmp    DWORD PTR [edx-0x4aa25d9a]
  41053b:	or     DWORD PTR [edi+0x4d8d77c3],0xffffffb4
  410542:	rol    ebx,0x5c
  410545:	ins    DWORD PTR es:[edi],dx
  410546:	aas    
  410547:	cdq    
  410548:	jge    0x4104f1
  41054a:	sub    ah,dh
  41054c:	rcr    BYTE PTR [esi],1
  41054e:	js     0x4104f2
  410550:	imul   edi,DWORD PTR ds:0x1ef7cc53,0x5a54199
  41055a:	pop    edi
  41055b:	sbb    BYTE PTR [ebx-0x21e33ce1],bl
  410561:	pop    ds
  410562:	jmp    0x27117099
  410567:	xor    DWORD PTR [ebx-0xa],eax
  41056a:	es inc ecx
  41056c:	or     eax,0x670093a1
  410571:	xchg   ebx,eax
  410572:	mov    esp,0x8038f6db
  410577:	pushf  
  410578:	xor    BYTE PTR [eax-0x6f],cl
  41057b:	icebp  
  41057c:	cmp    eax,0xd0bca173
  410581:	xchg   ebx,eax
  410582:	and    DWORD PTR [edx],ecx
  410584:	std    
  410585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410586:	dec    ecx
  410587:	out    dx,al
  410588:	push   ecx
  410589:	push   ebp
  41058a:	fs dec ebx
  41058c:	xor    esi,DWORD PTR [eax]
  41058e:	pop    esp
  41058f:	dec    ebx
  410590:	into   
  410591:	and    eax,0x69eb036
  410596:	adc    DWORD PTR [esi],edi
  410598:	cmp    DWORD PTR [eax+ebx*1+0x5f],0x1f0cb0b3
  4105a0:	sub    DWORD PTR [ebp-0x4160c8ab],ecx
  4105a6:	mov    ebx,ecx
  4105a8:	scas   al,BYTE PTR es:[edi]
  4105a9:	xchg   ebx,eax
  4105aa:	fisubr WORD PTR [ebx+0x55]
  4105ad:	jg     0x4105b9
  4105af:	cmp    ah,BYTE PTR [ebp-0x5c]
  4105b2:	stos   BYTE PTR es:[edi],al
  4105b3:	(bad)  
  4105b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105b5:	mov    ds:0x584e4881,eax
  4105ba:	mov    ebp,0xe8a45d1
  4105bf:	add    dl,0x78
  4105c2:	sbb    edx,0x94935c3
  4105c8:	fwait
  4105c9:	pop    DWORD PTR [esi-0x7c9a723d]
  4105cf:	mov    eax,ds:0x21a17d1
  4105d4:	gs out dx,eax
  4105d6:	imul   ebp,DWORD PTR [edi],0x8884a803
  4105dc:	jg     0x410601
  4105de:	fistp  WORD PTR [edx+0x6b]
  4105e1:	repz enter 0x9c3c,0xfd
  4105e6:	or     bh,BYTE PTR [ebp+0x28ef7c37]
  4105ec:	mov    al,ds:0xc62e211a
  4105f1:	fbstp  TBYTE PTR [ecx-0x2957bb0]
  4105f7:	and    dl,0x7b
  4105fa:	cwde   
  4105fb:	in     eax,dx
  4105fc:	xchg   BYTE PTR [ecx],cl
  4105fe:	mov    dl,ch
  410600:	sbb    BYTE PTR ds:0xe77975ab,bl
  410606:	scas   al,BYTE PTR es:[edi]
  410607:	xchg   ecx,eax
  410608:	mov    DWORD PTR [edx+0x55db80db],esi
  41060e:	pop    ebx
  41060f:	mov    ch,0xc7
  410611:	xchg   edx,eax
  410612:	ins    BYTE PTR es:[edi],dx
  410613:	(bad)  [eax]
  410615:	mov    bl,0xa4
  410617:	call   0xc527:0xbff0cb4d
  41061e:	(bad)  
  41061f:	fcomp  QWORD PTR [edx-0x3d]
  410622:	enter  0x4c8c,0x8b
  410626:	lock push ebp
  410628:	and    al,0x1f
  41062a:	or     bl,bl
  41062c:	mov    edi,0xcf2b6dc8
  410632:	cmp    esp,ecx
  410634:	cmp    eax,0x6ab8b042
  410639:	js     0x4105ea
  41063b:	jmp    0x1da0:0x3f577808
  410642:	sub    BYTE PTR [ebx-0x6d],bh
  410645:	aaa    
  410646:	cmp    eax,0x80bd4a7c
  41064b:	hlt    
  41064c:	push   0xa282ddde
  410651:	xchg   ebp,eax
  410652:	inc    edx
  410653:	mov    ch,0xa7
  410655:	dec    edx
  410656:	pop    edi
  410657:	lods   al,BYTE PTR ds:[esi]
  410658:	jl     0x410671
  41065a:	mov    al,0x9
  41065c:	mov    al,0xe5
  41065e:	clc    
  41065f:	bound  ebx,QWORD PTR [ecx+0x113b7b9e]
  410665:	(bad)  
  410667:	push   edi
  410668:	into   
  410669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41066a:	push   esi
  41066b:	dec    eax
  41066c:	mov    ch,0x60
  41066e:	and    ebp,edx
  410670:	cs jbe 0x41067b
  410673:	xor    ebx,DWORD PTR [ebx+0x25cc759e]
  410679:	cwde   
  41067a:	jp     0x4106d1
  41067c:	ds jo  0x410698
  41067f:	rcl    DWORD PTR [ebx+0xa8cbf97],0x3f
  410686:	ror    al,cl
  410688:	push   eax
  410689:	mov    bl,0xf2
  41068b:	add    eax,DWORD PTR [ebx]
  41068d:	add    edx,DWORD PTR [edi]
  41068f:	lods   al,BYTE PTR ds:[esi]
  410690:	pop    eax
  410691:	pop    edx
  410692:	mov    ebx,DWORD PTR [edi-0x74]
  410695:	xchg   edi,eax
  410696:	shl    DWORD PTR [ebx],1
  410698:	clc    
  410699:	enter  0x402e,0xf7
  41069d:	or     bl,BYTE PTR [esp+eiz*2]
  4106a0:	mov    eax,ds:0x93ef4c44
  4106a5:	mov    edx,ebx
  4106a7:	xlat   BYTE PTR ds:[ebx]
  4106a8:	test   eax,0xc9c11500
  4106ad:	test   eax,0x5fe675b4
  4106b2:	sbb    BYTE PTR [ecx+0x24],dl
  4106b5:	inc    ebp
  4106b6:	std    
  4106b7:	ds retf 
  4106b9:	jae    0x4106a6
  4106bb:	hlt    
  4106bc:	out    dx,al
  4106bd:	loopne 0x4106ff
  4106bf:	mov    WORD PTR [eax],cs
  4106c1:	and    DWORD PTR [eax+0x7],0xfffffff8
  4106c5:	outs   dx,BYTE PTR ds:[esi]
  4106c6:	pop    edx
  4106c7:	stos   DWORD PTR es:[edi],eax
  4106c8:	xor    dh,BYTE PTR [eax+eiz*1-0x14]
  4106cc:	mov    esi,0x7cd9c6ee
  4106d1:	inc    ebx
  4106d2:	xchg   ebp,eax
  4106d3:	jnp    0x41072f
  4106d5:	popf   
  4106d6:	ins    DWORD PTR es:[edi],dx
  4106d7:	mov    edi,0x7e37d9ee
  4106dc:	push   ebp
  4106dd:	(bad)  
  4106de:	jbe    0x4106d0
  4106e0:	mov    al,0xca
  4106e2:	jecxz  0x4106cf
  4106e4:	addr16 push esi
  4106e6:	gs popa 
  4106e8:	mov    al,ds:0xa5239679
  4106ed:	loop   0x410766
  4106ef:	or     DWORD PTR [ecx+0x298362cc],ebp
  4106f5:	jp     0x410723
  4106f7:	pop    ecx
  4106f8:	and    eax,0x86922138
  4106fd:	scas   al,BYTE PTR es:[edi]
  4106fe:	sub    DWORD PTR ds:0x58bd015c,eax
  410704:	xlat   BYTE PTR ds:[ebx]
  410705:	xor    esp,ecx
  410707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410708:	mov    ah,0x58
  41070a:	gs mov ebx,0x74a49768
  410710:	push   ebx
  410711:	rcr    BYTE PTR [ebp+esi*4-0x41c81e87],1
  410718:	mov    ecx,0xbd1cdc99
  41071d:	sbb    DWORD PTR [edx],edx
  41071f:	outs   dx,DWORD PTR ds:[esi]
  410720:	jno    0x4106d8
  410722:	or     eax,0xca8e24e7
  410727:	lods   al,BYTE PTR ds:[esi]
  410728:	mov    eax,ds:0x57d4fc07
  41072d:	fisub  DWORD PTR es:[edx+0x47]
  410731:	mov    al,0xde
  410733:	dec    ebp
  410734:	js     0x41077c
  410736:	push   cs
  410737:	jae    0x4106c5
  410739:	add    esp,DWORD PTR [eax+edx*8]
  41073c:	jmp    0x77a9:0xb7e37cc2
  410743:	mov    ds:0x8fbe3a7b,al
  410748:	lods   al,BYTE PTR ds:[esi]
  410749:	outs   dx,DWORD PTR ds:[esi]
  41074a:	cs hlt 
  41074c:	in     eax,dx
  41074d:	push   esp
  41074e:	shr    bl,1
  410750:	push   edi
  410751:	stos   DWORD PTR es:[edi],eax
  410752:	lds    ebx,FWORD PTR [ebp-0x79dc02f9]
  410758:	gs addr16 add eax,0xafae9e94
  41075f:	add    al,0x52
  410761:	xchg   edx,eax
  410762:	push   esi
  410763:	and    al,0x17
  410765:	sub    ah,BYTE PTR [edi]
  410767:	scas   eax,DWORD PTR es:[edi]
  410768:	jae    0x410703
  41076a:	and    ah,BYTE PTR gs:[ecx+0x58]
  41076e:	dec    ebp
  41076f:	or     bh,BYTE PTR [ecx+ebx*1]
  410772:	add    esp,DWORD PTR [eax-0x5b]
  410775:	shl    DWORD PTR [eax],1
  410777:	pop    es
  410778:	call   0xf37d:0x8dbd
  41077e:	pop    edx
  41077f:	enter  0x3d0e,0xf7
  410783:	and    edi,DWORD PTR [esi-0x2c]
  410786:	mov    eax,DWORD PTR [esi+0x71]
  410789:	xchg   ebp,eax
  41078a:	(bad)  
  41078b:	jle    0x41071e
  41078d:	and    DWORD PTR [eax+0x4b79cc86],edx
  410793:	pop    esi
  410794:	xchg   ecx,eax
  410795:	dec    ebp
  410796:	sbb    BYTE PTR [eax],ah
  410798:	adc    BYTE PTR [esi],dl
  41079a:	and    DWORD PTR [esi-0x5a397a88],0xffffff9a
  4107a1:	mov    al,ds:0x795c8f6d
  4107a6:	pop    ebx
  4107a7:	pop    edx
  4107a8:	pop    ds
  4107a9:	jno    0x41072d
  4107ab:	in     eax,0x31
  4107ad:	icebp  
  4107ae:	push   ebx
  4107af:	xor    eax,DWORD PTR [ebx-0x72]
  4107b2:	or     DWORD PTR [edx-0x5b],ebx
  4107b5:	mov    al,0xc7
  4107b7:	xchg   edx,eax
  4107b8:	mov    dh,0x9b
  4107ba:	sbb    esp,esi
  4107bc:	sub    eax,0x49c2bd94
  4107c1:	fdiv   st(3),st
  4107c3:	or     ebx,DWORD PTR [ebx]
  4107c5:	inc    eax
  4107c6:	add    bl,BYTE PTR [ebp+0x3ad288bd]
  4107cc:	aaa    
  4107cd:	pop    ecx
  4107ce:	mov    eax,0xc3c04d27
  4107d3:	(bad)  
  4107d5:	(bad)  
  4107d6:	repz mov ch,0x27
  4107d9:	mov    ecx,0xb6c189d9
  4107de:	fiadd  WORD PTR [ebx-0x1c45c0e0]
  4107e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e5:	inc    eax
  4107e6:	xchg   ebp,eax
  4107e7:	jmp    0x410810
  4107e9:	cld    
  4107ea:	adc    ecx,DWORD PTR [ebx-0x65]
  4107ed:	dec    edx
  4107ee:	pop    ebx
  4107ef:	inc    esp
  4107f0:	adc    eax,ebx
  4107f2:	fsubr  DWORD PTR [ebx-0x1a601338]
  4107f8:	mov    ebp,0xfdb34c99
  4107fd:	xchg   ebx,eax
  4107fe:	jns    0x4107bf
  410800:	jo     0x410843
  410802:	retf   
  410803:	ins    BYTE PTR es:[edi],dx
  410804:	ret    0x5f00
  410807:	jl     0x41083d
  410809:	repnz sub BYTE PTR [esi+0x7333fd67],dl
  410810:	mov    ds:0x70c9e298,eax
  410815:	jg     0x410839
  410817:	push   esp
  410818:	and    eax,0x1a72e8a6
  41081d:	mov    al,0x1e
  41081f:	addr16 daa 
  410821:	je     0x4107f3
  410823:	into   
  410824:	std    
  410825:	sub    eax,0x76a26984
  41082a:	test   DWORD PTR [ebp-0xae84a23],ecx
  410830:	pushf  
  410831:	mov    eax,0xae9632e3
  410836:	inc    ebx
  410837:	div    BYTE PTR [ebp+0xee5fbd]
  41083d:	dec    esi
  41083e:	sub    ecx,esi
  410840:	push   cs
  410841:	adc    al,0xcd
  410843:	xor    BYTE PTR [edx+0x5ea1f5dd],0x4e
  41084a:	pop    ecx
  41084b:	pop    ebp
  41084c:	jmp    0x6f63:0xbf043c5d
  410853:	fnstsw WORD PTR [eax]
  410855:	cmp    al,0x41
  410857:	mov    BYTE PTR [eax-0x140858e],cl
  41085d:	add    eax,0xbf2cd075
  410862:	and    DWORD PTR [ecx+0x10bf1481],ebx
  410868:	and    al,0xa9
  41086a:	test   al,0x80
  41086d:	xchg   edx,eax
  41086e:	inc    eax
  41086f:	jbe    0x410807
  410871:	jg     0x410877
  410873:	dec    edi
  410874:	mov    ah,0x78
  410876:	fs in  eax,dx
  410878:	sub    dl,BYTE PTR [ebp+0x54]
  41087b:	jp     0x4108b3
  41087d:	popa   
  41087e:	and    DWORD PTR [esi+0x9],edx
  410881:	shl    DWORD PTR [esi+0x555f5977],cl
  410887:	mov    bl,0x51
  410889:	jmp    0xc9a17f9f
  41088e:	aas    
  41088f:	into   
  410890:	iret   
  410891:	(bad)
  410894:	faddp  st(1),st
  410896:	sub    al,0x13
  410898:	(bad)  
  410899:	scas   eax,DWORD PTR es:[edi]
  41089a:	nop    DWORD PTR [ebx-0x36f336a4]
  4108a1:	in     al,dx
  4108a2:	cmp    al,BYTE PTR [edi-0x5f6ed4e6]
  4108a8:	scas   al,BYTE PTR es:[edi]
  4108a9:	es add esp,esp
  4108ac:	or     DWORD PTR [eax],ebp
  4108ae:	cmp    DWORD PTR [esi+0xc5c60cf],eax
  4108b4:	(bad)
  4108b8:	pop    es
  4108b9:	fisub  DWORD PTR [ecx-0x3f]
  4108bc:	jl     0x7198217d
  4108c2:	neg    DWORD PTR [edx-0x4601d668]
  4108c8:	ret    
  4108c9:	fwait
  4108ca:	cld    
  4108cb:	push   esp
  4108cc:	fcom   QWORD PTR [ecx-0x5c077501]
  4108d2:	jl     0x4108a5
  4108d4:	mov    ss,WORD PTR [edi]
  4108d6:	sbb    esp,DWORD PTR [esi-0x5d2a2233]
  4108dc:	repnz test eax,0x95054821
  4108e2:	lahf   
  4108e3:	xor    al,0x25
  4108e5:	loopne 0x4108eb
  4108e7:	pop    ecx
  4108e8:	push   ss
  4108e9:	mov    ecx,esp
  4108eb:	mov    eax,ds:0x582faa4
  4108f0:	pop    edi
  4108f1:	loope  0x4108f3
  4108f3:	push   es
  4108f4:	jno    0x410906
  4108f6:	sub    al,0xf6
  4108f8:	loope  0x410892
  4108fa:	ret    
  4108fb:	xor    eax,0x95698cb1
  410900:	sub    eax,0xc0b505d9
  410905:	popa   
  410906:	out    dx,eax
  410907:	retf   
  410908:	inc    eax
  410909:	sbb    eax,0x77f86bac
  41090f:	mov    ah,0x1f
  410911:	push   ecx
  410912:	into   
  410913:	jb     0x410994
  410915:	jge    0x41095c
  410917:	rol    dl,0x54
  41091a:	sti    
  41091b:	test   BYTE PTR [eax-0x23],ch
  41091e:	sar    dl,cl
  410920:	repnz clc 
  410922:	(bad)  
  410923:	loopne 0x410945
  410925:	(bad)  
  410926:	push   ebp
  410927:	pushf  
  410928:	sub    BYTE PTR [esi+0xe],bh
  41092b:	add    eax,0xf3b99189
  410930:	das    
  410931:	jns    0x41094f
  410933:	xchg   ecx,eax
  410934:	pop    esp
  410935:	shl    edi,1
  410937:	push   esi
  410938:	jno    0x41099f
  41093a:	jne    0x4108bd
  41093c:	rol    BYTE PTR [esi],1
  41093e:	cli    
  41093f:	cmc    
  410940:	fwait
  410941:	out    0xb3,al
  410943:	enter  0x7c87,0x1a
  410947:	mov    ebp,0x233aa8bb
  41094c:	sbb    ch,BYTE PTR [eax+0xa8e0cf4]
  410952:	dec    ebp
  410953:	mov    ecx,0x4fd82649
  410958:	xchg   si,ax
  41095a:	ret    0xe1ce
  41095d:	repnz or BYTE PTR ds:0x8d10d61d,dl
  410964:	push   esi
  410965:	jnp    0x4109a7
  410967:	mov    ds:0x84a79e8d,al
  41096c:	inc    edi
  41096d:	inc    edi
  41096e:	jns    0x4109e9
  410970:	mov    esp,0xc3b33ac4
  410975:	sbb    eax,0xa17b4feb
  41097a:	push   edx
  41097b:	add    eax,0xf12c76ba
  410980:	and    BYTE PTR [esi],dh
  410982:	in     eax,dx
  410983:	pop    edi
  410984:	mov    eax,ds:0x6022dd42
  410989:	into   
  41098a:	int3   
  41098b:	inc    eax
  41098c:	mov    edi,0x341253b
  410991:	mov    edx,0x50be5c91
  410996:	enter  0xfc13,0x62
  41099a:	rcr    DWORD PTR [ecx+0x789ceec],1
  4109a0:	mov    esp,0xe7808ae
  4109a5:	ds das 
  4109a7:	shl    DWORD PTR [ecx],cl
  4109a9:	adc    ebp,DWORD PTR [ebp+eax*1+0x41]
  4109ad:	add    eax,0xc1b25a7
  4109b2:	jecxz  0x4109ec
  4109b4:	jl     0x410a20
  4109b6:	mov    ds:0xb63779a9,al
  4109bb:	rcr    BYTE PTR [ecx-0x360485cd],1
  4109c1:	sbb    bh,dh
  4109c3:	pop    ecx
  4109c4:	shrd   DWORD PTR [edx+eiz*2-0x3905169e],edx,cl
  4109cc:	retf   0x3e4c
  4109cf:	jmp    0x530e:0x834b0c4c
  4109d6:	mov    gs,WORD PTR [edx]
  4109d8:	push   ecx
  4109d9:	jb     0x41096f
  4109db:	jl     0x4109f0
  4109dd:	pop    esp
  4109de:	jp     0x4109d1
  4109e0:	and    BYTE PTR [esi+edx*4+0x10],al
  4109e4:	js     0x4109a8
  4109e6:	adc    eax,0xf971656e
  4109eb:	dec    esp
  4109ec:	cdq    
  4109ed:	shl    esp,0xe2
  4109f0:	in     al,dx
  4109f1:	jg     0x4109c4
  4109f3:	inc    ebp
  4109f4:	xchg   ebp,eax
  4109f5:	pop    esi
  4109f6:	dec    ebx
  4109f7:	mov    ecx,0xe9df40e7
  4109fc:	xchg   ebx,eax
  4109fd:	xchg   edx,eax
  4109fe:	dec    ebx
  4109ff:	or     ebp,ebx
  410a01:	jmp    0xfc30:0x41a1fc0f
  410a08:	fwait
  410a09:	in     eax,dx
  410a0a:	pop    es
  410a0b:	out    0xf4,al
  410a0d:	out    0xe7,al
  410a0f:	cmp    DWORD PTR [ecx],0xffffffd8
  410a12:	or     esi,DWORD PTR [ebx-0x66]
  410a15:	mov    esi,0xe0d914a8
  410a1a:	ret    
  410a1b:	popa   
  410a1c:	xchg   ebp,eax
  410a1d:	mov    ecx,DWORD PTR [ebx-0x2d]
  410a20:	ins    DWORD PTR es:[edi],dx
  410a21:	out    0xf6,al
  410a23:	das    
  410a24:	es fwait
  410a26:	stos   DWORD PTR es:[edi],eax
  410a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a28:	mov    al,bh
  410a2a:	(bad)  
  410a2b:	xlat   BYTE PTR ds:[ebx]
  410a2c:	mov    ebp,0x31603cf7
  410a31:	ss aad 0xe3
  410a34:	mov    ebp,0xc2381921
  410a39:	out    0x2,al
  410a3b:	mov    esi,0x4da45bb4
  410a40:	inc    ecx
  410a41:	std    
  410a42:	mov    ebp,DWORD PTR [edi-0x27ebe421]
  410a48:	cmp    esi,DWORD PTR [ebx]
  410a4a:	mov    ds:0x478e65d1,eax
  410a4f:	xchg   DWORD PTR [ecx+0x46be5c38],esp
  410a55:	sar    BYTE PTR [ecx-0x430b9ddf],0x69
  410a5c:	cmc    
  410a5d:	jmp    0x410aa6
  410a5f:	mov    edi,0xc140856
  410a64:	icebp  
  410a65:	fild   QWORD PTR [edi]
  410a67:	push   edx
  410a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a69:	arpl   WORD PTR [edi+0x25c9f552],ax
  410a6f:	lock push edx
  410a71:	jns    0x410ac4
  410a73:	rol    DWORD PTR [ecx+0x78c2de25],cl
  410a79:	test   DWORD PTR [ecx],ebp
  410a7b:	push   ebp
  410a7c:	pop    edi
  410a7d:	bound  eax,QWORD PTR [edx+0x2c1e8f3c]
  410a83:	ds idiv esp
  410a86:	mov    al,0xe6
  410a88:	and    cl,ah
  410a8a:	adc    ecx,DWORD PTR [eax-0x2e2913e1]
  410a90:	dec    ebx
  410a91:	add    BYTE PTR [edx+0x7a],0x72
  410a95:	mov    cl,0xc8
  410a97:	push   0xc4f7b86f
  410a9c:	sti    
  410a9d:	xlat   BYTE PTR ds:[ebx]
  410a9e:	stc    
  410a9f:	test   edx,ecx
  410aa1:	mov    ebp,0x2d9e1c88
  410aa6:	les    edi,FWORD PTR [edi+edx*1]
  410aa9:	mov    esi,0xe78150da
  410aae:	pop    eax
  410aaf:	aas    
  410ab0:	sti    
  410ab1:	in     eax,0x62
  410ab3:	pop    ss
  410ab4:	mov    cl,0x2f
  410ab6:	iret   
  410ab7:	adc    eax,0x638f7402
  410abc:	or     BYTE PTR [ebx+0x26],dh
  410abf:	lahf   
  410ac0:	rol    DWORD PTR [edx+0x5b],0xf1
  410ac4:	and    DWORD PTR ds:0xb9512f56,0x24
  410acb:	cmc    
  410acc:	jl     0x410a77
  410ace:	jp     0x410b4c
  410ad0:	jg     0x410ae4
  410ad2:	inc    ecx
  410ad3:	(bad)
  410ad6:	inc    edx
  410ad7:	and    DWORD PTR [ebx-0x2655c1ef],0x20
  410ade:	push   esi
  410adf:	sbb    ebp,DWORD PTR [ebp+0x1]
  410ae2:	sbb    ch,BYTE PTR [eax]
  410ae4:	addr16 mov eax,ds:0xc44b
  410ae8:	and    edx,DWORD PTR [ebp-0x3b]
  410aeb:	jnp    0x410b3e
  410aed:	data16 and al,0xcb
  410af0:	pop    ds
  410af1:	sub    eax,0x14dcf05e
  410af6:	in     eax,0xec
  410af8:	je     0x410ad8
  410afa:	push   ebp
  410afb:	push   ds
  410afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410afd:	enter  0xdf82,0xdf
  410b01:	fidiv  WORD PTR [ebp-0x59]
  410b04:	xor    edx,edx
  410b06:	ret    0xd6c8
  410b09:	or     edi,esi
  410b0b:	ficom  WORD PTR [edi]
  410b0d:	mov    ebx,0x2d3e2e1b
  410b12:	mov    bl,0x7e
  410b14:	fistp  DWORD PTR [eax-0x7e330ed6]
  410b1a:	or     eax,0x1e0219ac
  410b1f:	jb     0x410ac5
  410b21:	xor    BYTE PTR [edi-0x2e4dea4b],bl
  410b27:	adc    DWORD PTR [edx+0x43],0x7d
  410b2b:	inc    edi
  410b2c:	ffree  st(1)
  410b2e:	or     al,0xc1
  410b30:	fldenv [ecx-0x60]
  410b33:	scas   al,BYTE PTR es:[edi]
  410b34:	pop    ecx
  410b35:	je     0x410ba1
  410b37:	jp     0x410b87
  410b39:	lock jno 0x410b12
  410b3c:	cmp    al,0xf7
  410b3e:	mov    ah,0x3e
  410b40:	je     0x410b97
  410b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b43:	jecxz  0x410b5e
  410b45:	xchg   esp,eax
  410b46:	xchg   esi,eax
  410b47:	adc    ebp,DWORD PTR [esi-0x2d143c70]
  410b4d:	sub    dl,dh
  410b4f:	fstp   TBYTE PTR [eax]
  410b51:	lods   eax,DWORD PTR ds:[esi]
  410b52:	add    bh,cl
  410b54:	pop    ebp
  410b55:	stc    
  410b56:	loop   0x410b22
  410b58:	jmp    0x9fc2:0x524785ae
  410b5f:	cmp    eax,DWORD PTR [edi]
  410b61:	fild   DWORD PTR [ebp-0x1ec2c192]
  410b67:	cmc    
  410b68:	jecxz  0x410b7d
  410b6a:	jle    0x410b98
  410b6c:	jb     0x410b84
  410b6e:	sub    eax,0x5841dba9
  410b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b74:	clc    
  410b75:	add    eax,0x35b6ae56
  410b7a:	inc    ecx
  410b7b:	mov    al,ds:0x5a646ef9
  410b80:	mov    ecx,0x63704fc7
  410b85:	scas   eax,DWORD PTR es:[edi]
  410b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b87:	or     al,0x82
  410b89:	iret   
  410b8a:	adc    ch,BYTE PTR [esp+edx*1+0x65]
  410b8e:	sbb    bl,ah
  410b90:	pushf  
  410b91:	xchg   ebx,eax
  410b92:	jmp    FWORD PTR [edi+esi*2]
  410b95:	shr    BYTE PTR [edx-0x4e877567],cl
  410b9b:	sbb    ah,BYTE PTR [esi+ecx*8-0x4968c92a]
  410ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba3:	pop    ss
  410ba4:	mov    eax,0x663b77ef
  410ba9:	mov    ss,WORD PTR [eax-0x4c]
  410bac:	fwait
  410bad:	sbb    ah,dl
  410baf:	stc    
  410bb0:	(bad)  
  410bb1:	aad    0x3a
  410bb3:	out    0xbb,al
  410bb5:	sbb    al,0x5b
  410bb7:	dec    ecx
  410bb8:	bound  ebp,QWORD PTR [edi]
  410bba:	es pop eax
  410bbc:	(bad)  
  410bbd:	mov    bl,0xc4
  410bbf:	inc    eax
  410bc0:	scas   eax,DWORD PTR es:[edi]
  410bc1:	push   0xf27f1277
  410bc6:	lock xor BYTE PTR [edx-0x7c339e6d],0x41
  410bce:	lods   eax,DWORD PTR ds:[esi]
  410bcf:	sbb    BYTE PTR [esi+esi*8+0x3df6d532],0x25
  410bd7:	sub    BYTE PTR ds:0xf95dd62b,ch
  410bdd:	sti    
  410bde:	popf   
  410bdf:	and    al,BYTE PTR [edx-0x7eefdfd7]
  410be5:	mov    ecx,0x4a6d6420
  410bea:	lock inc edx
  410bec:	push   esi
  410bed:	mov    ah,0x85
  410bef:	loop   0x410c1d
  410bf1:	inc    esp
  410bf2:	ret    0xb1a7
  410bf5:	mov    edx,DWORD PTR [ebp+0x78de708f]
  410bfb:	bound  edi,QWORD PTR [edi-0x5e]
  410bfe:	iret   
  410bff:	sbb    dh,BYTE PTR [ebx]
  410c01:	(bad)  
  410c02:	js     0x410c04
  410c04:	adc    al,0xbd
  410c06:	verw   WORD PTR gs:[ebx+0x6a5df41e]
  410c0e:	repnz das 
  410c10:	in     eax,0x75
  410c12:	cmc    
  410c13:	cmp    bh,BYTE PTR [ebx+0x65]
  410c16:	inc    esp
  410c17:	imul   ebx,DWORD PTR [ecx],0x25d31a65
  410c1d:	push   ecx
  410c1e:	retf   
  410c1f:	cmc    
  410c20:	inc    esi
  410c21:	(bad)  
  410c22:	les    ecx,FWORD PTR [esp+esi*2-0x486a3923]
  410c29:	ins    BYTE PTR es:[edi],dx
  410c2a:	sbb    dh,BYTE PTR cs:[ecx-0x611e6658]
  410c31:	dec    edx
  410c32:	jp     0x410c3a
  410c34:	jns    0x410c56
  410c36:	arpl   WORD PTR [esi-0x1edfafd0],bx
  410c3c:	xor    al,0xb2
  410c3e:	dec    eax
  410c3f:	bnd jnp 0x410bcb
  410c42:	loopne 0x410c45
  410c44:	(bad)  
  410c45:	clc    
  410c46:	cmc    
  410c47:	cmp    BYTE PTR [eax+0x9],ah
  410c4a:	dec    edi
  410c4b:	sbb    al,0x54
  410c4d:	ret    
  410c4e:	mov    ch,0x97
  410c50:	(bad)  
  410c51:	fild   QWORD PTR [edx]
  410c53:	add    al,0xec
  410c55:	call   0x8b8f:0xb56dc0b2
  410c5c:	test   ah,dl
  410c5e:	mov    edi,0x34f0608e
  410c63:	retf   0x10d0
  410c66:	cli    
  410c67:	sub    eax,0xe88a6a49
  410c6c:	add    cl,BYTE PTR [ebp+ebx*1-0x7d08d914]
  410c73:	push   edx
  410c74:	rcr    BYTE PTR [edi],0xe9
  410c77:	mov    dl,0xc5
  410c79:	and    al,0x85
  410c7b:	jae    0x410c80
  410c7d:	mov    eax,ds:0xfb57cbfe
  410c82:	adc    DWORD PTR [eax+ecx*1],esp
  410c85:	sbb    BYTE PTR [edi+0x1787ab4e],ch
  410c8b:	jne    0x410d0a
  410c8d:	xchg   esp,eax
  410c8e:	xchg   edi,eax
  410c8f:	jno    0x410cba
  410c91:	aad    0xbc
  410c93:	cmp    eax,0xb821038b
  410c98:	xchg   ebx,eax
  410c99:	jns    0x410cb1
  410c9b:	cmp    edx,edx
  410c9d:	xchg   ebx,eax
  410c9e:	inc    esp
  410c9f:	fcomp  QWORD PTR [esi-0x4f3042d4]
  410ca5:	jnp    0x410cba
  410ca7:	or     eax,0x8d47f607
  410cac:	push   ss
  410cad:	test   edx,ecx
  410caf:	push   eax
  410cb0:	sahf   
  410cb1:	jb     0x410d15
  410cb3:	(bad)  
  410cb4:	into   
  410cb5:	ins    DWORD PTR es:[edi],dx
  410cb6:	cmp    eax,esi
  410cb8:	add    eax,DWORD PTR [esp]
  410cbb:	cmp    ch,BYTE PTR [ebp-0x7417707f]
  410cc1:	dec    ebx
  410cc2:	fdivr  QWORD PTR [ecx]
  410cc4:	or     eax,0x633e150b
  410cc9:	mov    al,ds:0xa89f327a
  410cce:	enter  0xc7a,0xb0
  410cd2:	push   cs
  410cd3:	popa   
  410cd4:	inc    esi
  410cd5:	push   esp
  410cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd7:	gs adc ebp,esi
  410cda:	mov    ecx,0x3d2ad59e
  410cdf:	arpl   WORD PTR [esi+0x2d],bx
  410ce2:	inc    edx
  410ce3:	ja     0x410cc4
  410ce5:	lahf   
  410ce6:	add    ebp,DWORD PTR [eax-0x25]
  410ce9:	add    esi,DWORD PTR [ecx]
  410ceb:	mov    esp,0xc0629261
  410cf0:	stos   BYTE PTR es:[edi],al
  410cf1:	mov    ah,0x9b
  410cf3:	cli    
  410cf4:	test   eax,0xfbc29acd
  410cf9:	in     eax,0x2e
  410cfb:	imul   eax,DWORD PTR [edx-0x2e856867],0xda5b5c98
  410d05:	(bad)  
  410d06:	pop    eax
  410d07:	cmp    DWORD PTR [ebp+esi*4+0x253c6270],0x9056f4aa
  410d12:	pop    es
  410d13:	add    edi,DWORD PTR [edx-0x61838de3]
  410d19:	xchg   esp,eax
  410d1a:	xor    bl,0x53
  410d1d:	push   esi
  410d1e:	xor    cl,BYTE PTR [ebp+0x1f407c23]
  410d24:	inc    edx
  410d25:	std    
  410d26:	cmp    DWORD PTR [ecx],ebp
  410d28:	mov    dh,0xf6
  410d2a:	push   esi
  410d2b:	xchg   esi,eax
  410d2c:	mov    al,0x84
  410d2e:	retf   
  410d2f:	add    eax,0xfe86cb89
  410d34:	pop    esi
  410d35:	mov    DWORD PTR [ebp+edi*4-0x4f],0xfc5cd30b
  410d3d:	ds mov ah,0x57
  410d40:	add    al,BYTE PTR [ebp-0x6]
  410d43:	cmp    edi,DWORD PTR [edx]
  410d45:	jp     0x410d91
  410d47:	and    eax,0x5fb36e8b
  410d4c:	mov    BYTE PTR [esi+esi*4+0x44],cl
  410d50:	out    0xcb,eax
  410d52:	add    DWORD PTR [ecx+eiz*8+0x2a],0xffffffd9
  410d57:	adc    di,WORD PTR [ebp+0x6efda4f1]
  410d5e:	lds    edx,FWORD PTR [ebp+0x77512158]
  410d64:	sahf   
  410d65:	aam    0xc9
  410d67:	mov    bh,0xf0
  410d69:	cmp    ecx,DWORD PTR [edx+0x3a67fc00]
  410d6f:	push   ss
  410d70:	and    al,0xdd
  410d72:	mov    esp,0xb66cfc9
  410d77:	test   BYTE PTR [edx+ecx*2],cl
  410d7a:	jbe    0x410d81
  410d7c:	mov    dl,0xbe
  410d7e:	cmp    al,0xc7
  410d80:	pop    eax
  410d81:	(bad)  
  410d82:	xor    eax,0x192e0cc8
  410d87:	mov    ebx,0xa7219fa0
  410d8c:	fsub   DWORD PTR [ebx+0x6f6c6351]
  410d92:	mov    bl,0xcb
  410d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d95:	inc    ecx
  410d96:	push   0x12
  410d98:	mov    ebx,DWORD PTR [edx-0x7f621ca2]
  410d9e:	mov    ecx,0x169ab8c2
  410da3:	xor    al,0xd
  410da5:	icebp  
  410da6:	push   ds
  410da7:	push   cs
  410da8:	shl    BYTE PTR [ebp+0x21ceaac3],1
  410dae:	xchg   esp,eax
  410daf:	mov    ch,0x54
  410db1:	mov    cl,0x6c
  410db3:	loop   0x410df2
  410db5:	xor    bh,0xd
  410db8:	push   eax
  410db9:	dec    edx
  410dba:	test   esp,ecx
  410dbc:	cmp    edx,DWORD PTR [edx-0x2f8fb87]
  410dc2:	cdq    
  410dc3:	(bad)  
  410dc4:	pushf  
  410dc5:	cld    
  410dc6:	ins    BYTE PTR es:[edi],dx
  410dc7:	hlt    
  410dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dc9:	sbb    BYTE PTR [ecx-0x5bbb43ab],bl
  410dcf:	int    0x85
  410dd1:	mov    al,0x8d
  410dd3:	scas   eax,DWORD PTR es:[edi]
  410dd4:	mov    eax,ds:0x478b53b6
  410dd9:	aad    0xca
  410ddb:	push   es
  410ddc:	lea    edi,[edx+0x69]
  410ddf:	fsubrp st(2),st
  410de1:	and    eax,0x73a2c6c7
  410de6:	xchg   BYTE PTR [esi+0x5a4e83bb],al
  410dec:	retf   
  410ded:	cli    
  410dee:	push   ds
  410def:	pop    edi
  410df0:	rcl    BYTE PTR [ecx],cl
  410df2:	sub    ebp,DWORD PTR [ecx+0x31f00741]
  410df8:	push   ds
  410df9:	jae    0x410dde
  410dfb:	nop
  410dfc:	enter  0x348f,0x63
  410e00:	fcmovbe st,st(2)
  410e03:	sbb    al,0xa2
  410e05:	jle    0x410dcd
  410e07:	sbb    al,0x91
  410e09:	retf   
  410e0a:	xchg   ebp,eax
  410e0b:	rcr    DWORD PTR [ecx],cl
  410e0d:	mov    eax,0x29e5573a
  410e12:	idiv   DWORD PTR [eax+0xa]
  410e15:	out    0x68,eax
  410e17:	addr16 pop ds
  410e19:	outs   dx,DWORD PTR ds:[esi]
  410e1a:	xchg   edi,eax
  410e1b:	xor    al,0x98
  410e1d:	cmp    al,0xad
  410e1f:	adc    DWORD PTR [ebx-0x6c71016b],esp
  410e25:	xor    DWORD PTR [esi+0x0],ebx
  410e28:	nop
  410e29:	cs in  eax,dx
  410e2b:	idiv   DWORD PTR [ebp-0x7c6211f3]
  410e31:	adc    al,0xc8
  410e33:	out    0x2c,eax
  410e35:	pusha  
  410e36:	xchg   BYTE PTR [edi+0xd946889],dh
  410e3c:	xor    BYTE PTR [eax+0x36dbaf5b],bl
  410e42:	addr16 mov ecx,0xa7245945
  410e48:	daa    
  410e49:	inc    edx
  410e4a:	loopne 0x410e40
  410e4c:	add    cl,bh
  410e4e:	cmc    
  410e4f:	pop    ecx
  410e50:	nop
  410e51:	es cmp DWORD PTR cs:[ebx+0x6af0ac0e],0x541f95f
  410e5d:	inc    ecx
  410e5e:	lods   al,BYTE PTR ds:[esi]
  410e5f:	cdq    
  410e60:	push   es
  410e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e62:	mov    ecx,0xb612a3f
  410e67:	or     eax,0x9694a933
  410e6c:	jmp    0x410e57
  410e6e:	cld    
  410e6f:	mov    eax,0xcc484eab
  410e74:	jnp    0x410e09
  410e76:	sub    eax,0x27eda18e
  410e7b:	into   
  410e7c:	(bad)  
  410e7d:	mov    al,ds:0xd3b1f6e3
  410e82:	out    dx,eax
  410e83:	or     DWORD PTR [eax],edi
  410e85:	ret    0x9138
  410e88:	shl    DWORD PTR [ecx-0x57],1
  410e8b:	hlt    
  410e8c:	outs   dx,BYTE PTR ds:[esi]
  410e8d:	sti    
  410e8e:	sub    ebx,edx
  410e90:	mov    ax,ds:0x579d83fe
  410e96:	lahf   
  410e97:	loope  0x410ea4
  410e99:	cli    
  410e9a:	push   ebp
  410e9b:	push   ebp
  410e9c:	mov    gs,esp
  410e9e:	sbb    BYTE PTR [edi-0x6c],al
  410ea1:	sti    
  410ea2:	dec    eax
  410ea3:	mov    ds,ebp
  410ea5:	cs inc edx
  410ea7:	nop
  410ea8:	pop    ebp
  410ea9:	add    ebx,DWORD PTR [edx-0xc80bef1]
  410eaf:	cmp    eax,0x5f4bd67b
  410eb4:	and    DWORD PTR [esi-0x5175ea3f],0x4bdd6a1c
  410ebe:	aaa    
  410ebf:	xor    BYTE PTR [ecx+0x66],al
  410ec2:	fdiv   st,st(7)
  410ec4:	call   0xb68:0x695f6aae
  410ecb:	arpl   WORD PTR [edx+0x2d],cx
  410ece:	int    0x10
  410ed0:	les    eax,FWORD PTR [esi]
  410ed2:	test   edx,edi
  410ed4:	sub    DWORD PTR [edi+ecx*2-0x2b57b2c2],esi
  410edb:	icebp  
  410edc:	test   al,0x9b
  410ede:	and    ch,cl
  410ee0:	in     al,dx
  410ee1:	inc    edx
  410ee2:	arpl   WORD PTR es:[eax-0x50ba4a4f],ax
  410ee9:	sbb    DWORD PTR [ebp-0x6c],edi
  410eec:	dec    edx
  410eed:	or     ch,BYTE PTR [eax]
  410eef:	push   ebx
  410ef0:	adc    edi,DWORD PTR [eax-0x34]
  410ef3:	sbb    eax,0x654256b5
  410ef8:	loopne 0x410f3c
  410efa:	xabort 0x58
  410efd:	cwde   
  410efe:	xchg   al,cl
  410f00:	mov    WORD PTR [eax],ss
  410f02:	int    0xbb
  410f04:	or     dl,ah
  410f06:	pop    esi
  410f07:	enter  0x6864,0x26
  410f0b:	fcmove st,st(6)
  410f0d:	xchg   esi,eax
  410f0e:	rcl    bl,1
  410f10:	loop   0x410f48
  410f12:	int3   
  410f13:	mov    dl,0x2e
  410f15:	stos   BYTE PTR es:[edi],al
  410f16:	and    al,0xa9
  410f18:	jg     0x410f3b
  410f1a:	repnz int3 
  410f1c:	and    dl,cl
  410f1e:	data16 xor BYTE PTR [edi-0x7d],dh
  410f22:	pop    ss
  410f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f24:	cdq    
  410f25:	adc    BYTE PTR [ecx],ch
  410f27:	sti    
  410f28:	xor    al,BYTE PTR [edi]
  410f2a:	add    eax,DWORD PTR [edx-0x2]
  410f2d:	or     al,0xe1
  410f2f:	pop    esi
  410f30:	mov    WORD PTR [edx-0x59],?
  410f33:	mov    edx,0xa79cd15d
  410f38:	imul   edx,DWORD PTR [esi+0x5ce2d4d1],0xffffffcc
  410f3f:	test   BYTE PTR [ecx+0xf],ch
  410f42:	test   eax,0x657407e8
  410f47:	mov    ebx,0x7565c30e
  410f4c:	dec    edi
  410f4d:	xchg   DWORD PTR [edi+0x3a186ebe],eax
  410f53:	enter  0x9675,0xfa
  410f57:	push   esi
  410f58:	xchg   ebp,eax
  410f59:	and    DWORD PTR [eax+eax*4+0x2f56b62c],ecx
  410f60:	cli    
  410f61:	mov    bl,0x30
  410f63:	shl    ah,cl
  410f65:	mov    WORD PTR [ebp-0x5d],es
  410f68:	ret    0x8970
  410f6b:	nop
  410f6c:	mov    eax,DWORD PTR [edx-0xb]
  410f6f:	adc    DWORD PTR [edx+0x4f],0xe316e29b
  410f76:	clc    
  410f77:	lods   eax,DWORD PTR ds:[esi]
  410f78:	or     DWORD PTR es:[ecx],edi
  410f7b:	mov    cl,0xc9
  410f7d:	ficomp DWORD PTR ds:0xbc9acd2a
  410f83:	ror    BYTE PTR [esi-0x422f8356],1
  410f89:	ja     0x410fe5
  410f8b:	inc    ebx
  410f8c:	xor    dh,cl
  410f8e:	xchg   ecx,eax
  410f8f:	mov    al,ds:0x1a5322d5
  410f94:	xlat   BYTE PTR ds:[ebx]
  410f95:	enter  0x69d5,0xdc
  410f99:	je     0x410fff
  410f9b:	lock test BYTE PTR [ecx+0x55],bh
  410f9f:	popf   
  410fa0:	jge    0x410fd4
  410fa2:	(bad)  
  410fa3:	and    DWORD PTR [edx+0x72],esi
  410fa6:	out    dx,eax
  410fa7:	(bad)  
  410fa9:	rcl    DWORD PTR [edx-0x30ce7101],0x5f
  410fb0:	jl     0x410fa4
  410fb2:	in     al,dx
  410fb3:	and    BYTE PTR [ebx],ch
  410fb5:	pop    ebx
  410fb6:	rcr    DWORD PTR [edx+0x2860c64],cl
  410fbc:	scas   al,BYTE PTR es:[edi]
  410fbd:	adc    ebx,DWORD PTR [ebx+ecx*1-0x4868fe69]
  410fc4:	fcom   QWORD PTR [eax+0x2d150dd]
  410fca:	outs   dx,BYTE PTR ds:[esi]
  410fcb:	or     DWORD PTR [eax-0x458008d0],ebx
  410fd1:	loop   0x410fdf
  410fd3:	int    0x3f
  410fd5:	inc    esp
  410fd6:	jmp    0x410fb3
  410fd8:	inc    ebx
  410fd9:	pusha  
  410fda:	and    eax,0xa9648215
  410fdf:	dec    ecx
  410fe0:	arpl   WORD PTR [eax+0x5033cf8c],bx
  410fe6:	mov    ebp,edx
  410fe8:	out    0x57,eax
  410fea:	push   esi
  410feb:	std    
  410fec:	adc    DWORD PTR [eax+0x71f3d6c8],esp
  410ff2:	fsubrp st(6),st
  410ff4:	aam    0x54
  410ff6:	jns    0x410ff3
  410ff8:	out    dx,al
  410ff9:	repnz cld 
  410ffb:	push   eax
  410ffc:	retf   
  410ffd:	stos   BYTE PTR es:[edi],al
  410ffe:	sub    DWORD PTR ds:0x87114342,ebp
  411004:	outs   dx,BYTE PTR ds:[esi]
  411005:	pop    ds
  411006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411007:	jmp    0xbe8e:0xc0ab546
  41100e:	aam    0xc9
  411010:	jne    0x411051
  411012:	test   DWORD PTR [ebp-0x15],ecx
  411015:	test   al,0x5d
  411017:	adc    BYTE PTR [eax-0x25],ah
  41101a:	xchg   edx,eax
  41101b:	stc    
  41101c:	xchg   ebx,eax
  41101d:	scas   al,BYTE PTR es:[edi]
  41101e:	mov    ebp,0x9e4fc2d6
  411023:	ficomp DWORD PTR [edi+esi*2+0x69]
  411027:	mov    ebx,0x1ecb40e0
  41102c:	in     al,dx
  41102d:	fild   DWORD PTR [eax+0x3b]
  411030:	aas    
  411031:	pop    es
  411032:	push   ebx
  411033:	test   al,0xb
  411035:	adc    BYTE PTR [edx+0x1dee08aa],dh
  41103b:	and    al,0xe8
  41103d:	test   eax,0xdeea2456
  411042:	in     al,0x66
  411044:	mov    al,ds:0x86e6645c
  411049:	cli    
  41104a:	dec    eax
  41104b:	out    0x12,eax
  41104d:	xchg   DWORD PTR [edi-0x6e],ebx
  411050:	or     cl,dl
  411052:	leave  
  411053:	push   es
  411054:	imul   ebp,esi,0x635be1bf
  41105a:	sbb    ebp,eax
  41105c:	clc    
  41105d:	lods   eax,DWORD PTR ds:[esi]
  41105e:	cs mov esp,0xba8a9961
  411064:	mov    ah,0xb5
  411066:	cld    
  411067:	jb     0x4110b7
  411069:	inc    esi
  41106a:	addr16 cli 
  41106c:	and    eax,0xbb646d1c
  411071:	pop    eax
  411072:	and    BYTE PTR [ebp+0xd],ah
  411075:	aaa    
  411076:	fst    DWORD PTR ds:[eax+eax*4-0x799e0ab]
  41107e:	ins    BYTE PTR es:[edi],dx
  41107f:	inc    esi
  411080:	push   eax
  411081:	addps  xmm2,xmm7
  411084:	jbe    0x4110af
  411086:	xor    ah,BYTE PTR [esi+0x52052755]
  41108c:	lahf   
  41108d:	lock into 
  41108f:	mov    dh,0xc0
  411091:	sar    DWORD PTR [eax-0x1b],cl
  411094:	jmp    0x41104a
  411096:	xlat   BYTE PTR ds:[ebx]
  411097:	xchg   esi,eax
  411098:	xchg   ebp,eax
  411099:	fistp  DWORD PTR [ebx+0x212e7bf0]
  41109f:	rcl    BYTE PTR [esi],1
  4110a1:	lods   eax,DWORD PTR ds:[esi]
  4110a2:	mov    cl,0xf5
  4110a4:	mov    ecx,0x28f592f2
  4110a9:	inc    ecx
  4110aa:	cmc    
  4110ab:	ret    
  4110ac:	pop    ebp
  4110ad:	in     eax,0xdc
  4110af:	jns    0x41109f
  4110b1:	dec    edx
  4110b2:	xchg   ebx,eax
  4110b3:	loop   0x4110b2
  4110b5:	push   ecx
  4110b6:	fwait
  4110b7:	cmp    bl,dl
  4110b9:	(bad)  
  4110ba:	es sbb eax,0xfabbd665
  4110c0:	icebp  
  4110c1:	push   0x6a
  4110c3:	lods   al,BYTE PTR ds:[esi]
  4110c4:	mov    edi,0x89a63165
  4110c9:	inc    edx
  4110ca:	add    eax,0x40c6a3f4
  4110cf:	repnz sub al,0x7d
  4110d2:	fdivp  st(2),st
  4110d4:	out    dx,eax
  4110d5:	out    dx,eax
  4110d6:	mov    ah,0xb6
  4110d8:	clc    
  4110d9:	sbb    esi,DWORD PTR [edx]
  4110db:	or     DWORD PTR es:[edx+0x3dad5309],eax
  4110e2:	mov    ds:0xdc2c6916,eax
  4110e7:	iret   
  4110e8:	cmp    DWORD PTR [eax+0x5d3ad7cf],esi
  4110ee:	ins    DWORD PTR es:[edi],dx
  4110ef:	dec    ecx
  4110f0:	mov    DWORD PTR [ebx],ebx
  4110f2:	ficom  WORD PTR [ebx+0x3d80afbe]
  4110f8:	jo     0x4110da
  4110fa:	mov    esi,0x116bde46
  4110ff:	in     eax,dx
  411100:	push   0x486ad0db
  411105:	aas    
  411106:	(bad)  
  411107:	xor    eax,0x4aceb4da
  41110c:	ret    
  41110d:	jmp    0x41110f
  41110f:	icebp  
  411110:	mov    WORD PTR [edx+0x7b],cs
  411113:	xchg   esp,eax
  411114:	mov    eax,esi
  411116:	jl     0x411183
  411118:	call   0x86111d83
  41111d:	jno    0x54ae1114
  411123:	push   esp
  411124:	sub    BYTE PTR [esi],dh
  411126:	fld    DWORD PTR [edi]
  411128:	sub    ebp,DWORD PTR [ecx-0x17]
  41112b:	jns    0x411164
  41112d:	and    ah,dh
  41112f:	leave  
  411130:	mov    esi,0x2d85c738
  411135:	jo     0x41117a
  411137:	pop    esi
  411138:	imul   esi
  41113a:	sub    al,0xae
  41113c:	(bad)  
  41113d:	jmp    0xc22114ce
  411142:	ins    BYTE PTR es:[edi],dx
  411143:	push   ss
  411144:	nop
  411145:	mov    dh,0x73
  411147:	and    al,0xfe
  411149:	xor    BYTE PTR [ebp+0x7e9d92c3],dh
  41114f:	push   ebx
  411150:	in     eax,dx
  411151:	push   esi
  411152:	mov    bh,0x99
  411154:	scas   eax,DWORD PTR es:[edi]
  411155:	pop    ebp
  411156:	aad    0x39
  411158:	aaa    
  411159:	mov    ebp,0x2c8c81db
  41115e:	clc    
  41115f:	jl     0x411175
  411161:	int    0x19
  411163:	push   0x153ca5b0
  411168:	add    eax,0xa3c82375
  41116d:	mov    cl,0xcf
  41116f:	int    0xe9
  411171:	ret    0xc66
  411174:	push   eax
  411175:	data16 adc BYTE PTR [edx+0xaf4a286],ah
  41117c:	jge    0x411109
  41117e:	mov    cl,0x8b
  411180:	sbb    ah,BYTE PTR [esi]
  411182:	shl    DWORD PTR [ebx+ebx*4-0x798fc7cc],0x24
  41118a:	mov    bh,0x5d
  41118c:	call   0xd61a9905
  411191:	jl     0x4111f8
  411193:	push   cs
  411194:	call   0x308084a7
  411199:	inc    edx
  41119a:	xor    DWORD PTR [ecx+0x6cde0aab],eax
  4111a0:	mov    edi,0x7683f329
  4111a5:	pop    ecx
  4111a6:	mov    al,BYTE PTR [edi-0x58]
  4111a9:	and    al,0x56
  4111ab:	ret    
  4111ac:	sbb    ch,ah
  4111ae:	cwde   
  4111af:	sti    
  4111b0:	fmul   DWORD PTR [esi-0x3c]
  4111b3:	push   esi
  4111b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111b5:	lock in al,0xfe
  4111b8:	xchg   BYTE PTR [ebx+0x69],cl
  4111bb:	fmul   QWORD PTR [esi+0x4]
  4111be:	sub    BYTE PTR [ebx],dl
  4111c0:	jmp    0xe2c2:0x72c2c6da
  4111c7:	cmp    BYTE PTR [ebp+0x6ce5a98a],al
  4111cd:	mov    esi,DWORD PTR [edx]
  4111cf:	call   0x53b0:0x8452180a
  4111d6:	shl    BYTE PTR [eax],1
  4111d8:	cwde   
  4111d9:	repnz dec ebp
  4111db:	jo     0x411254
  4111dd:	sbb    al,0x2d
  4111df:	ror    BYTE PTR [esi-0xc],cl
  4111e2:	or     DWORD PTR [eax-0x32fd76b9],esi
  4111e8:	xlat   BYTE PTR ds:[ebx]
  4111e9:	and    bh,BYTE PTR [ebp+0x2a6cac64]
  4111ef:	mov    eax,0x80ff7d0e
  4111f4:	(bad)  
  4111f5:	aam    0x91
  4111f7:	xchg   ebp,eax
  4111f8:	sahf   
  4111f9:	xchg   edi,eax
  4111fa:	ins    DWORD PTR es:[edi],dx
  4111fb:	xor    cl,dl
  4111fd:	icebp  
  4111fe:	or     al,0xed
  411200:	sbb    DWORD PTR ds:0x8a0f8342,0x68
  411207:	shr    DWORD PTR [ecx],1
  411209:	jne    0x4111a7
  41120b:	popa   
  41120c:	mov    edx,0xfd4b351b
  411211:	jl     0x41122e
  411213:	push   esi
  411214:	inc    edi
  411215:	mov    edx,0x38f194ca
  41121a:	mov    eax,ds:0x7170eed8
  41121f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411220:	jo     0x41122d
  411222:	fdiv   st(4),st
  411224:	test   BYTE PTR [ecx-0x4d6e1e07],bl
  41122a:	in     al,0xe
  41122c:	xor    al,0xb
  41122e:	dec    ecx
  41122f:	adc    al,BYTE PTR [eax+0x3e28b471]
  411235:	gs dec ecx
  411237:	jp     0x4111e1
  411239:	shl    BYTE PTR [edx+0x2cb04137],0xbb
  411240:	jne    0x41124a
  411242:	inc    ebp
  411243:	inc    ecx
  411244:	and    ecx,DWORD PTR [ebp+0x50256422]
  41124a:	pop    edx
  41124b:	in     al,0xe4
  41124d:	mov    dh,0xe5
  41124f:	pop    ss
  411250:	fistp  DWORD PTR [eax-0x35]
  411253:	loope  0x4112c6
  411255:	xchg   ebx,eax
  411256:	jno    0x41120d
  411258:	mov    al,ds:0x887466e4
  41125d:	retf   0xce8a
  411260:	mov    dl,0x90
  411262:	mov    ah,BYTE PTR [ebp+0x3c210bd2]
  411268:	jae    0x4112b7
  41126a:	iret   
  41126b:	jno    0x4112e9
  41126d:	mov    esi,0xc5a63114
  411272:	xchg   ebp,eax
  411273:	xchg   ecx,eax
  411274:	test   eax,0x5f198015
  411279:	dec    esp
  41127a:	cmp    BYTE PTR [esi],ch
  41127c:	loope  0x41128c
  41127e:	xchg   edx,eax
  41127f:	jnp    0x4112c0
  411281:	std    
  411282:	mov    DWORD PTR [eax+0x67],edi
  411285:	pop    edx
  411286:	loop   0x4112a2
  411288:	clc    
  411289:	ret    
  41128a:	inc    eax
  41128b:	mov    bl,0x34
  41128d:	mov    al,0x42
  41128f:	jnp    0x41121c
  411291:	repz icebp 
  411293:	cdq    
  411294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411295:	lock lods eax,DWORD PTR ds:[esi]
  411297:	jp     0x4112c5
  411299:	sub    ebp,DWORD PTR [ecx]
  41129b:	push   eax
  41129c:	inc    eax
  41129d:	aad    0x5b
  41129f:	sub    eax,0xb6831106
  4112a4:	sbb    bl,bl
  4112a6:	in     eax,dx
  4112a7:	jne    0x4112fa
  4112a9:	mov    ch,BYTE PTR [esi+eax*8]
  4112ac:	inc    edi
  4112ad:	pop    ecx
  4112ae:	retf   0xccfd
  4112b1:	mov    ecx,gs
  4112b3:	daa    
  4112b4:	cmp    al,0x9f
  4112b6:	loop   0x4112b7
  4112b8:	jp     0x411282
  4112ba:	jmp    0x1de7c74e
  4112bf:	dec    eax
  4112c0:	sbb    eax,0x72cfe27d
  4112c5:	and    ch,BYTE PTR [esi+ebp*4+0x13]
  4112c9:	test   al,0xa8
  4112cb:	sub    BYTE PTR [edx-0x46],0x51
  4112cf:	je     0x41128d
  4112d1:	pop    ds
  4112d2:	inc    esp
  4112d3:	sbb    eax,0x9df77690
  4112d8:	popa   
  4112d9:	cmp    DWORD PTR [esi-0x5e],esp
  4112dc:	ja     0x41134b
  4112de:	dec    esp
  4112df:	loope  0x4112de
  4112e1:	lods   eax,DWORD PTR ds:[esi]
  4112e2:	or     al,0x23
  4112e4:	cwde   
  4112e5:	mov    esi,0x6d169dec
  4112ea:	jg     0x411325
  4112ec:	jmp    0x411365
  4112ee:	jle    0x41133c
  4112f0:	sub    BYTE PTR [edx],dl
  4112f2:	jmp    0x1bcd:0x18de435a
  4112f9:	add    DWORD PTR [ebx],0x51429d58
  4112ff:	cmp    al,0xf9
  411301:	jge    0x411329
  411303:	std    
  411304:	inc    edx
  411305:	fstp   TBYTE PTR [eax+0x7fe0bb27]
  41130b:	xor    eax,0x2c77b1dc
  411310:	fidiv  WORD PTR [esp+eiz*4-0x31]
  411314:	inc    ebx
  411315:	out    0x78,al
  411317:	push   es
  411318:	add    al,BYTE PTR [esi-0x1237ed56]
  41131e:	sub    eax,0xcd9f9cda
  411323:	(bad)  
  411324:	xlat   BYTE PTR ds:[ebx]
  411325:	in     al,0x11
  411327:	mov    dl,0x8f
  411329:	pop    edi
  41132a:	aas    
  41132b:	ret    
  41132c:	add    ebp,DWORD PTR [esi]
  41132e:	pop    ss
  41132f:	popa   
  411330:	mov    gs,ebp
  411332:	add    al,0x9d
  411334:	rol    DWORD PTR [esi+edx*2-0x6bad92ee],cl
  41133b:	adc    ecx,edx
  41133d:	and    BYTE PTR [esi-0x27],dh
  411340:	(bad)  
  411341:	popf   
  411342:	in     al,0x6e
  411344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411345:	mov    ds:0xc7d14680,eax
  41134a:	ja     0x4112dc
  41134c:	dec    ebx
  41134d:	xor    BYTE PTR [ecx+0x7b],bh
  411350:	in     eax,0x8
  411352:	test   DWORD PTR [edi+0x1d8a5a52],esp
  411358:	lock lahf 
  41135a:	jmp    0xbe55:0x814ebfa1
  411361:	or     eax,DWORD PTR [ecx-0x32]
  411364:	inc    esp
  411365:	or     ah,BYTE PTR [ebx-0x4b]
  411368:	test   al,0x8b
  41136a:	fst    QWORD PTR [ecx+0x18c801dc]
  411370:	cmp    eax,0xa2441f12
  411375:	ss mov bl,0x5
  411378:	jecxz  0x41137a
  41137a:	aad    0x4
  41137c:	(bad)  
  41137d:	ss out dx,eax
  41137f:	and    al,0xd1
  411381:	addr16 mov edx,0x1be7a2e7
  411387:	pop    ebp
  411388:	dec    ecx
  411389:	jno    0x411390
  41138b:	xor    esp,ecx
  41138d:	popa   
  41138e:	or     al,0xeb
  411390:	mov    ds:0xe6b1f109,eax
  411395:	cld    
  411396:	shr    DWORD PTR [edi+eiz*8+0xd],0xdd
  41139b:	and    ecx,DWORD PTR [ebx-0xe7e55ea]
  4113a1:	rol    BYTE PTR [edi],1
  4113a3:	mov    eax,ds:0x762800d4
  4113a8:	pushf  
  4113a9:	xchg   esi,eax
  4113aa:	es lea esi,fs:[edx]
  4113ae:	mov    esi,0x28fd753b
  4113b3:	in     eax,0xc8
  4113b5:	and    cl,BYTE PTR [ecx]
  4113b7:	mov    ds:0x8a1e43bf,al
  4113bc:	stos   BYTE PTR es:[edi],al
  4113bd:	call   0x6279:0xdd29656c
  4113c4:	fsub   DWORD PTR [eax+edi*4-0xd64f057]
  4113cb:	sbb    al,0xa2
  4113cd:	inc    ebx
  4113ce:	fwait
  4113cf:	jmp    0xe5e118dc
  4113d4:	icebp  
  4113d5:	mov    cl,0x39
  4113d7:	in     al,dx
  4113d8:	mov    dl,BYTE PTR [ebp+0x15c03c3e]
  4113de:	ret    
  4113df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e0:	or     ah,BYTE PTR [eax+0x633cbfbd]
  4113e6:	and    ebp,DWORD PTR ds:0x144d0744
  4113ec:	or     dl,bh
  4113ee:	(bad)  
  4113ef:	out    0x73,eax
  4113f1:	sar    edx,cl
  4113f3:	xchg   esp,eax
  4113f4:	repnz sbb eax,0xc89f42ef
  4113fa:	xor    BYTE PTR [ecx],bh
  4113fc:	jns    0x411419
  4113fe:	xchg   edi,eax
  4113ff:	je     0x411480
  411401:	adc    DWORD PTR [esi+0x32],edi
  411404:	mov    dh,0x7d
  411406:	out    0xff,al
  411408:	icebp  
  411409:	into   
  41140a:	xchg   edx,eax
  41140b:	in     al,0x84
  41140d:	add    bl,BYTE PTR [eax]
  41140f:	daa    
  411410:	dec    eax
  411411:	ret    0x355a
  411414:	outs   dx,DWORD PTR ds:[esi]
  411415:	and    BYTE PTR [esi-0x68624a55],cl
  41141b:	or     BYTE PTR [eax-0x7bd6e803],bl
  411421:	mov    al,ds:0x518060e5
  411426:	push   edi
  411427:	jo     0x4113aa
  411429:	clc    
  41142a:	xor    BYTE PTR [ecx+0x5b],bl
  41142d:	(bad)  [edi]
  41142f:	xor    eax,0x460e1be0
  411434:	fs int 0xd5
  411437:	xor    edi,DWORD PTR [esi-0x59]
  41143a:	pop    es
  41143b:	inc    ecx
  41143c:	pop    es
  41143d:	sbb    ah,ah
  41143f:	mov    ds:0xdba9a1eb,eax
  411444:	ficomp WORD PTR [edi-0x1d]
  411447:	iret   
  411448:	xor    al,0x7c
  41144a:	dec    ebx
  41144b:	mov    ecx,0x68c45bb3
  411450:	mov    edx,0x3e47e34a
  411455:	fistp  QWORD PTR [ebx+0x43502b59]
  41145b:	adc    BYTE PTR [edi-0x50],bl
  41145e:	shl    BYTE PTR gs:[edx+ebp*1+0x5],0x30
  411464:	jg     0x41144c
  411466:	adc    edi,edx
  411468:	sbb    eax,0x23d57e78
  41146d:	in     eax,0x44
  41146f:	xchg   ecx,eax
  411470:	inc    ebp
  411471:	call   0xc718:0xdce95eef
  411478:	out    dx,al
  411479:	sub    al,0x2
  41147b:	and    dl,dh
  41147d:	cli    
  41147e:	scas   al,BYTE PTR es:[edi]
  41147f:	sahf   
  411480:	mov    dl,BYTE PTR [edx+edi*1+0x69]
  411484:	add    bl,BYTE PTR [ebx+0x469d3ce2]
  41148a:	push   edx
  41148b:	sub    DWORD PTR [esi+ebx*1+0xe509c82],esp
  411492:	sar    ch,1
  411494:	nop
  411495:	sub    DWORD PTR [esi],ebx
  411497:	test   DWORD PTR [edi-0xd],ebp
  41149a:	out    0x15,al
  41149c:	test   DWORD PTR [eax+0x3c],0xbfbbb79f
  4114a3:	push   esp
  4114a4:	pusha  
  4114a5:	pushf  
  4114a6:	lock ds and al,0x99
  4114aa:	inc    esp
  4114ab:	(bad)  
  4114ac:	adc    al,0xa5
  4114ae:	xchg   ecx,eax
  4114af:	outs   dx,DWORD PTR ds:[esi]
  4114b0:	mov    DWORD PTR [edx-0x17],esi
  4114b3:	inc    esp
  4114b4:	jg     0x4114a9
  4114b6:	add    eax,0x63cc4359
  4114bb:	dec    esi
  4114bc:	mov    eax,0x3e37891b
  4114c1:	loope  0x4114e6
  4114c3:	xor    BYTE PTR [ebp+0x3cee01a2],0xd2
  4114ca:	sbb    BYTE PTR [ecx],0xe0
  4114cd:	in     al,dx
  4114ce:	xchg   edx,eax
  4114cf:	jb     0x411486
  4114d1:	sbb    bl,BYTE PTR [esi]
  4114d3:	dec    edx
  4114d4:	xor    eax,0x504474e7
  4114d9:	cmp    edx,eax
  4114db:	rcr    BYTE PTR [ebx+0x48388e34],1
  4114e1:	mov    edi,edx
  4114e3:	dec    esi
  4114e4:	(bad)  
  4114e5:	test   eax,0x7566a86c
  4114ea:	test   BYTE PTR [eax+0x64602bf3],ah
  4114f0:	ds cmp edx,0xffffffa2
  4114f4:	stos   BYTE PTR es:[edi],al
  4114f5:	dec    esp
  4114f6:	xor    ch,BYTE PTR [ecx-0x40]
  4114f9:	mov    bl,0xe7
  4114fb:	mov    ah,0x0
  4114fd:	mov    ch,BYTE PTR [ecx-0x3d]
  411500:	pop    eax
  411501:	(bad)  
  411502:	fsubr  QWORD PTR [esi]
  411504:	shl    edi,0xcc
  411507:	dec    edx
  411508:	sbb    ebx,ebx
  41150a:	in     eax,dx
  41150b:	test   eax,0xff5b32ff
  411510:	push   ebp
  411511:	xor    ch,al
  411513:	fldcw  WORD PTR [edx-0x3160c486]
  411519:	mov    ah,0x32
  41151b:	sbb    BYTE PTR [ebx-0xe],al
  41151e:	in     eax,0x21
  411520:	push   cs
  411521:	repz test DWORD PTR [ebx-0x3c],edi
  411525:	daa    
  411526:	pop    edx
  411527:	fldenv [edx-0x395c36e1]
  41152d:	ret    
  41152e:	jl     0x411556
  411530:	loopne 0x41152f
  411532:	pop    ss
  411533:	pop    ebx
  411534:	(bad)  
  411535:	gs pop esi
  411537:	fcom   DWORD PTR [eax-0x3a18c81e]
  41153d:	gs scas al,BYTE PTR es:[edi]
  41153f:	add    BYTE PTR [edi+0x7dc9c807],cl
  411545:	sbb    dl,dh
  411547:	mov    edi,0xb5a5076
  41154c:	pop    ebp
  41154d:	cld    
  41154e:	jnp    0x4115aa
  411550:	jae    0x41157a
  411552:	cmp    DWORD PTR [ebx],edx
  411554:	add    DWORD PTR [ebx+0x7c],edi
  411557:	or     esi,DWORD PTR [edi+0x1f427d76]
  41155d:	sbb    al,0x71
  41155f:	in     eax,dx
  411560:	pushf  
  411561:	das    
  411562:	sahf   
  411563:	or     ebx,DWORD PTR [esp+ebx*1-0x7845bf3f]
  41156a:	pop    ss
  41156b:	and    BYTE PTR [edx+0x2f],dh
  41156e:	mov    al,0xb2
  411570:	add    DWORD PTR [eax],esi
  411572:	push   esp
  411573:	imul   esi,DWORD PTR [ebp-0xb],0xffffff81
  411577:	jmp    0x4557:0xd4d3f01a
  41157e:	lods   eax,DWORD PTR ds:[esi]
  41157f:	mov    eax,0x3defa7c
  411584:	mov    al,ds:0xa7319537
  411589:	fmul   QWORD PTR [ecx-0x268a3ea3]
  41158f:	scas   eax,DWORD PTR es:[edi]
  411590:	shl    DWORD PTR [esi+ecx*2],1
  411593:	dec    ebx
  411594:	pop    ecx
  411595:	jmp    0xef173119
  41159a:	add    dl,bh
  41159c:	ins    BYTE PTR es:[edi],dx
  41159d:	xchg   DWORD PTR [edi+ebx*8],esi
  4115a0:	inc    eax
  4115a1:	mov    ecx,0x153a846f
  4115a6:	call   0x3443:0x9f4d332a
  4115ad:	push   ebp
  4115ae:	jg     0x411533
  4115b0:	dec    edx
  4115b1:	(bad)
  4115b4:	test   eax,0x19c038a6
  4115b9:	mov    esp,0x4d96a435
  4115be:	inc    ecx
  4115bf:	push   ds
  4115c0:	aam    0x8e
  4115c2:	sbb    al,0xcc
  4115c4:	mov    edx,0xed1939f8
  4115c9:	clc    
  4115ca:	inc    esp
  4115cb:	sbb    edi,DWORD PTR es:[edx-0x5df57479]
  4115d2:	xchg   ebp,eax
  4115d3:	fs push ds
  4115d5:	pop    eax
  4115d6:	stos   DWORD PTR es:[edi],eax
  4115d7:	or     al,0x4f
  4115d9:	cwde   
  4115da:	cmc    
  4115db:	push   ebx
  4115dc:	mov    ebx,0x142e347f
  4115e1:	xchg   esp,eax
  4115e2:	mov    bh,0x6d
  4115e4:	icebp  
  4115e5:	arpl   WORD PTR [edx],si
  4115e7:	push   eax
  4115e8:	call   0x65f8b7be
  4115ed:	or     al,0x33
  4115ef:	fidivr WORD PTR [ecx-0x38fd3891]
  4115f5:	mov    dl,BYTE PTR [esi]
  4115f7:	fild   QWORD PTR [esp+esi*4-0x37]
  4115fb:	mov    ch,0xd4
  4115fd:	and    al,dl
  4115ff:	jg     0x4115f9
  411601:	bsf    esp,DWORD PTR [edi+0x1cc7f3a2]
  411608:	cmp    DWORD PTR [ebp-0x5bcc39da],ebp
  41160e:	pop    ss
  41160f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411610:	adc    bh,ah
  411612:	xchg   edi,eax
  411613:	mov    BYTE PTR [edx+edx*1],bl
  411616:	imul   ecx,DWORD PTR [edi+0x64],0xfffffff5
  41161a:	ret    
  41161b:	and    dl,ah
  41161d:	mov    ch,0x98
  41161f:	cmp    BYTE PTR [edx],0x3a
  411622:	loope  0x41161d
  411624:	je     0x4115d5
  411626:	sahf   
  411627:	push   edx
  411628:	jecxz  0x411623
  41162a:	or     eax,0xb36ef9c7
  41162f:	test   BYTE PTR [ebp+ebp*1-0x3cc5d1e2],ch
  411636:	mov    DWORD PTR [esi],esi
  411638:	or     ah,BYTE PTR [esi+ebx*1]
  41163b:	pop    edx
  41163c:	shl    DWORD PTR [ecx],0xc4
  41163f:	jo     0x41161c
  411641:	sub    BYTE PTR [edx],0x8f
  411644:	jb     0x41167d
  411646:	add    ecx,ebp
  411648:	pop    ebx
  411649:	pop    edx
  41164a:	loope  0x41168a
  41164c:	sbb    al,0x8c
  41164e:	inc    eax
  41164f:	xchg   esi,eax
  411650:	pop    eax
  411651:	push   ss
  411652:	gs fwait
  411654:	inc    ebp
  411655:	leave  
  411656:	loop   0x4116b6
  411658:	sub    DWORD PTR [ebx-0x6c],edx
  41165b:	(bad)  
  41165c:	clc    
  41165d:	push   edx
  41165e:	jle    0x411684
  411660:	mov    ds:0xb4b58b62,al
  411665:	ret    
  411666:	out    dx,al
  411667:	into   
  411668:	sub    DWORD PTR [ebx+0x3c],0xd516959c
  41166f:	jp     0x411617
  411671:	aam    0xfd
  411673:	js     0x411644
  411675:	sbb    eax,0xe290714f
  41167a:	mov    DWORD PTR [esi+0x658d7b2e],edx
  411680:	jb     0x411689
  411682:	adc    al,0xb
  411684:	fs pop ecx
  411686:	repz fld DWORD PTR [edx-0x4f3857d2]
  41168d:	mov    ah,0xa8
  41168f:	dec    ecx
  411690:	add    al,0x42
  411692:	jmp    0xce560798
  411697:	dec    esi
  411698:	add    bh,bl
  41169a:	mov    ds:0x61279178,al
  41169f:	fnstcw WORD PTR [ebx+edx*2+0x156b3456]
  4116a6:	cdq    
  4116a7:	ror    DWORD PTR [ebx+edi*4-0xd],cl
  4116ab:	fst    DWORD PTR [eax+edx*2]
  4116ae:	pusha  
  4116af:	ja     0x4116d0
  4116b1:	in     al,dx
  4116b2:	in     eax,0x4
  4116b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b5:	jecxz  0x411702
  4116b7:	and    eax,0x16009fdb
  4116bc:	in     al,0x4a
  4116be:	es ja  0x411663
  4116c1:	adc    edi,edx
  4116c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c4:	cs add al,0x3f
  4116c7:	xor    al,0x1c
  4116c9:	aam    0x5b
  4116cb:	sub    dl,BYTE PTR [edx+0x79aea5ff]
  4116d1:	lahf   
  4116d2:	mov    eax,0x61c85a9b
  4116d7:	out    dx,eax
  4116d8:	popf   
  4116d9:	(bad)  
  4116da:	sbb    ch,dl
  4116dc:	ret    0x62db
  4116df:	loope  0x41166f
  4116e1:	ret    
  4116e2:	mov    ebp,0x7e0a89a9
  4116e7:	mov    esi,DWORD PTR [edx]
  4116e9:	add    BYTE PTR [esi+0x55889ade],ah
  4116ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f0:	hlt    
  4116f1:	mov    dh,0xa3
  4116f3:	jo     0x4116d8
  4116f5:	fwait
  4116f6:	push   esp
  4116f7:	inc    edx
  4116f8:	mov    ds:0x196b4650,al
  4116fd:	popa   
  4116fe:	xor    bl,0xd
  411701:	fistp  QWORD PTR [esp+ebp*8+0x1df30fe2]
  411708:	pop    esi
  411709:	push   ds
  41170a:	mov    esi,0x669952aa
  41170f:	cmp    DWORD PTR [eax+eax*1],esi
  411712:	xlat   BYTE PTR ds:[ebx]
  411713:	jne    0x4116ab
  411715:	stos   DWORD PTR es:[edi],eax
  411716:	test   al,0xe5
  411718:	shl    edx,0x6
  41171b:	inc    edi
  41171c:	and    ecx,DWORD PTR [ecx-0x29]
  41171f:	ja     0x4116e5
  411721:	lea    ecx,[esi-0x1]
  411724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411725:	ret    0xb3f8
  411728:	arpl   WORD PTR [eax],cx
  41172a:	or     eax,0xbd8756ee
  41172f:	inc    eax
  411730:	inc    ebx
  411731:	and    DWORD PTR [eax+0x10b97897],ecx
  411737:	mov    al,ds:0x4aaeac9f
  41173c:	or     DWORD PTR [esi],0xffffff88
  41173f:	test   BYTE PTR [eax+eax*4+0x47a29c65],ah
  411746:	aam    0xa6
  411748:	inc    ebx
  411749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41174a:	imul   ax,WORD PTR [ebp+0x54],0xffbd
  41174f:	neg    BYTE PTR [ecx-0x19650cfb]
  411755:	fidivr WORD PTR [edi-0x4d]
  411758:	jae    0x411721
  41175a:	shr    BYTE PTR [ebx],1
  41175c:	sbb    DWORD PTR [eax+0x16],ebp
  41175f:	clc    
  411760:	test   al,0x8
  411762:	jecxz  0x411735
  411764:	inc    edi
  411765:	popa   
  411766:	outs   dx,DWORD PTR ds:[esi]
  411767:	cs inc ebp
  411769:	call   0x500d:0x2d43cda8
  411770:	adc    BYTE PTR [ecx-0x770a1754],0x6f
  411777:	je     0x411797
  411779:	clc    
  41177a:	call   0x81d4:0xdeda2d8b
  411781:	mov    ebx,0xadd87ae6
  411786:	and    al,0x7f
  411788:	repnz pop eax
  41178a:	ins    DWORD PTR es:[edi],dx
  41178b:	loop   0x411729
  41178d:	jl     0x411769
  41178f:	fadd   QWORD PTR [esi+0x1c]
  411792:	mov    al,0x13
  411794:	mov    esi,0x769bc3fb
  411799:	jl     0x4117c9
  41179b:	fnstenv [ebp+0x22]
  41179e:	fld    QWORD PTR [edx-0x557c287d]
  4117a4:	adc    edi,DWORD PTR [ecx]
  4117a6:	sahf   
  4117a7:	push   ebp
  4117a8:	addr16 jle 0x411820
  4117ab:	cmp    al,0xd8
  4117ad:	sub    dl,BYTE PTR [ebx+ebp*2-0x13]
  4117b1:	add    DWORD PTR [edi+0x41327f38],0xffffffb8
  4117b8:	fimul  DWORD PTR [ebx+0x73]
  4117bb:	pop    ebx
  4117bc:	jmp    0x4c1:0x7c161250
  4117c3:	dec    edx
  4117c4:	pushf  
  4117c5:	dec    esp
  4117c6:	mov    dl,0x3f
  4117c8:	sbb    cl,BYTE PTR [ebp+0x19]
  4117cb:	lods   eax,DWORD PTR ds:[esi]
  4117cc:	ja     0x41178e
  4117ce:	rcr    esi,0x77
  4117d1:	cs mov cl,0x6
  4117d4:	jmp    0x411776
  4117d6:	cmp    ebx,ebp
  4117d8:	iret   
  4117d9:	push   ebp
  4117da:	xchg   edx,eax
  4117db:	data16 test BYTE PTR [eax*2-0x43f954e2],ah
  4117e3:	push   es
  4117e4:	data16 cld 
  4117e6:	push   ecx
  4117e7:	test   al,0x6
  4117e9:	mov    ds:0xa213c3a2,al
  4117ee:	sahf   
  4117ef:	mov    eax,ds:0x5156ac40
  4117f4:	cli    
  4117f5:	push   cs
  4117f6:	inc    ebx
  4117f7:	push   0x19
  4117f9:	test   eax,0xeee60cc9
  4117fe:	out    dx,al
  4117ff:	jmp    0xc812e2a2
  411804:	shr    BYTE PTR [esi+0x5d63af1b],0xe4
  41180b:	sub    al,BYTE PTR ds:0xca01dbeb
  411811:	sbb    eax,0xdd3f51aa
  411816:	leave  
  411817:	add    cl,BYTE PTR [ebp+0x15788dde]
  41181d:	xor    DWORD PTR [ecx],0x23
  411820:	xchg   ecx,eax
  411821:	aad    0xa9
  411823:	add    esi,DWORD PTR [esi+0x1f]
  411826:	mov    ebp,0x572e88e6
  41182b:	in     eax,0xf5
  41182d:	pusha  
  41182e:	push   esp
  41182f:	neg    BYTE PTR [esi]
  411831:	jae    0x411844
  411833:	or     DWORD PTR [edx-0x53],0x6f
  411837:	cmp    bl,dh
  411839:	inc    esp
  41183a:	nop
  41183b:	push   ds
  41183c:	repz fimul DWORD PTR [ebx+eiz*2+0x7c9ed263]
  411844:	mov    eax,0x8dd2b20e
  411849:	retf   
  41184a:	dec    edx
  41184b:	lahf   
  41184c:	xor    al,0xf2
  41184e:	(bad)  
  41184f:	std    
  411850:	out    0xe2,eax
  411852:	jnp    0x4117ef
  411854:	inc    ebx
  411855:	jecxz  0x411831
  411857:	inc    esi
  411858:	xor    al,0xe2
  41185a:	ret    0x75ad
  41185d:	or     esi,DWORD PTR [eax]
  41185f:	push   ss
  411860:	loope  0x411894
  411862:	dec    ebp
  411863:	add    BYTE PTR ds:0xd67696c7,bl
  411869:	push   ss
  41186a:	arpl   WORD PTR [edx+0x55],ax
  41186d:	mul    DWORD PTR [esi+0x51d28ec0]
  411873:	in     al,0x97
  411875:	les    ebx,FWORD PTR [edx]
  411877:	pop    edx
  411878:	jne    0xa4bc7c41
  41187e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41187f:	retf   0x7bcb
  411882:	popf   
  411883:	mov    ah,0x22
  411885:	cli    
  411886:	xchg   ecx,eax
  411887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411888:	jno    0x4118bf
  41188a:	imul   DWORD PTR [edi+ebx*1+0x64b6c516]
  411891:	mov    al,ds:0xcf788119
  411896:	outs   dx,DWORD PTR ds:[esi]
  411897:	cmc    
  411898:	daa    
  411899:	ror    DWORD PTR [esi+0x3ce633cb],1
  41189f:	push   ss
  4118a0:	(bad)  
  4118a1:	xchg   esp,eax
  4118a2:	or     dl,ah
  4118a4:	pop    ebp
  4118a5:	retf   
  4118a6:	pop    edx
  4118a7:	mov    ebp,0x2072c9ec
  4118ac:	mov    ds:0x149d875b,eax
  4118b1:	cs fwait
  4118b3:	imul   ebp,ebp,0xd0ed89a9
  4118b9:	jmp    0x4118b9
  4118bb:	inc    eax
  4118bc:	fimul  WORD PTR [eax]
  4118be:	aaa    
  4118bf:	add    BYTE PTR [esi],0x9a
  4118c2:	sub    DWORD PTR [edi-0xa],ebx
  4118c5:	mov    edi,0x59960ef8
  4118ca:	sbb    cl,BYTE PTR [eax+0x11b1cbe9]
  4118d0:	ror    DWORD PTR [esp+ecx*1+0x12],cl
  4118d4:	cdq    
  4118d5:	jno    0x4118f2
  4118d7:	ins    DWORD PTR es:[edi],dx
  4118d8:	in     al,0x57
  4118da:	outs   dx,DWORD PTR ds:[esi]
  4118db:	mov    dh,0x2
  4118dd:	cmp    eax,0x41be9577
  4118e2:	inc    ebx
  4118e3:	dec    esp
  4118e4:	mov    ds:0xa4672d21,al
  4118e9:	xor    eax,0x803926d2
  4118ee:	out    dx,al
  4118ef:	mov    edx,0xe07bbec1
  4118f4:	cmp    DWORD PTR [ebx+0x32],eax
  4118f7:	dec    ebp
  4118f8:	jge    0x4118e7
  4118fa:	test   al,0xd4
  4118fc:	inc    ebp
  4118fd:	pop    ss
  4118fe:	rcl    BYTE PTR [ebx-0x16],1
  411901:	jecxz  0x411884
  411903:	inc    eax
  411904:	test   al,0x5c
  411906:	(bad)  
  411907:	ficomp DWORD PTR [ebp-0x2be039f8]
  41190d:	stos   BYTE PTR es:[edi],al
  41190e:	stc    
  41190f:	jmp    0xcb2a:0x74d0
  411915:	jmp    0x4118e7
  411917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411918:	xor    edi,DWORD PTR [edi]
  41191a:	cmp    DWORD PTR [esi+0x489ff47],0xce1df752
  411924:	(bad)  
  411925:	mov    edx,0x28217af6
  41192a:	bound  edx,QWORD PTR [eax]
  41192c:	cmp    ah,BYTE PTR [esi+0x448f2f8b]
  411932:	ja     0x4118dd
  411934:	push   esp
  411935:	mov    dh,0x93
  411937:	outs   dx,DWORD PTR ds:[esi]
  411938:	mov    esp,0xb8c4b72b
  41193d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41193e:	lods   al,BYTE PTR ds:[esi]
  41193f:	inc    BYTE PTR ss:[esi]
  411942:	mov    ebp,?
  411944:	hlt    
  411945:	pop    ebx
  411946:	pop    ecx
  411947:	je     0x4119c2
  411949:	pop    ecx
  41194a:	xor    esi,DWORD PTR [esi]
  41194c:	dec    edx
  41194d:	mov    bl,al
  41194f:	popf   
  411950:	xlat   BYTE PTR ds:[ebx]
  411951:	div    DWORD PTR [ebp+0x2080103]
  411957:	dec    eax
  411958:	xor    DWORD PTR [edi+ecx*2],esp
  41195b:	idiv   ecx
  41195d:	mov    bh,0x7e
  41195f:	xchg   ebx,eax
  411960:	ins    BYTE PTR es:[edi],dx
  411961:	and    al,0xf
  411963:	ja     0x4119ae
  411965:	jbe    0x4118ef
  411967:	fisub  DWORD PTR [esi]
  411969:	mov    al,ds:0x3f41fd73
  41196e:	pop    eax
  41196f:	inc    ecx
  411970:	push   0x58
  411972:	test   eax,0x399196bd
  411977:	loopne 0x41195d
  411979:	mov    BYTE PTR [ebp*4-0x55193768],cl
  411980:	mov    ah,0x95
  411982:	dec    eax
  411983:	or     edi,edx
  411985:	repnz xlat BYTE PTR ds:[ebx]
  411987:	scas   al,BYTE PTR es:[edi]
  411988:	cmp    dh,BYTE PTR [ebp-0x49e73d1a]
  41198e:	pusha  
  41198f:	not    DWORD PTR [eax+0x4cc33653]
  411995:	adc    esp,DWORD PTR [eax]
  411997:	repz adc eax,0x8223497b
  41199d:	adc    DWORD PTR [ecx+0x24],edx
  4119a0:	test   BYTE PTR [ebp+0x1e],al
  4119a3:	and    BYTE PTR [eax],dl
  4119a5:	cmp    ah,BYTE PTR [edi-0x1175c229]
  4119ab:	dec    esi
  4119ac:	test   al,0xb9
  4119ae:	aaa    
  4119af:	je     0x411937
  4119b1:	std    
  4119b2:	lock push ds
  4119b4:	sub    eax,DWORD PTR [ebx+0x18]
  4119b7:	mov    al,ds:0xdda19946
  4119bc:	rcr    DWORD PTR [edx-0x934773c],1
  4119c2:	(bad)  
  4119c3:	pop    ds
  4119c4:	add    edi,DWORD PTR [ebp-0x21]
  4119c7:	dec    ebx
  4119c8:	std    
  4119c9:	ret    0x700
  4119cc:	popa   
  4119cd:	jecxz  0x411a3c
  4119cf:	aad    0x81
  4119d1:	push   cs
  4119d2:	dec    edx
  4119d3:	inc    edx
  4119d4:	cmp    al,BYTE PTR [ebp-0x701e44c9]
  4119da:	scas   al,BYTE PTR es:[edi]
  4119db:	ret    0x2dc6
  4119de:	jmp    0x4119a0
  4119e0:	or     dh,bh
  4119e2:	pop    ebx
  4119e3:	outs   dx,BYTE PTR ds:[esi]
  4119e4:	push   eax
  4119e5:	jle    0x411a07
  4119e7:	and    al,0x73
  4119e9:	or     al,0xa8
  4119eb:	mov    cl,BYTE PTR [esi-0x44]
  4119ee:	outs   dx,BYTE PTR ds:[esi]
  4119ef:	fnstsw WORD PTR [edx+0x32]
  4119f2:	in     eax,0x35
  4119f4:	add    al,0x7e
  4119f6:	xor    DWORD PTR [edx+0x63],esi
  4119f9:	xor    al,0xe8
  4119fb:	mov    esi,0xcba78227
  411a00:	or     edi,eax
  411a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a03:	cwde   
  411a04:	fwait
  411a05:	in     eax,0xda
  411a07:	call   0xcf5:0x6762af91
  411a0e:	std    
  411a0f:	mov    ds,edx
  411a11:	cmc    
  411a12:	pop    ecx
  411a13:	xchg   DWORD PTR [esi+ecx*2+0x74],esi
  411a17:	or     al,0x70
  411a19:	nop
  411a1a:	cld    
  411a1b:	iret   
  411a1c:	dec    ebp
  411a1d:	xor    edi,ecx
  411a1f:	rol    ecx,0xba
  411a22:	dec    eax
  411a23:	adc    eax,0xd1f6c1e3
  411a28:	sub    al,0xfe
  411a2a:	lods   al,BYTE PTR ds:[esi]
  411a2b:	dec    edx
  411a2c:	sti    
  411a2d:	dec    edx
  411a2e:	pop    ss
  411a2f:	push   0xffffffbc
  411a31:	jns    0x411a8e
  411a33:	in     al,dx
  411a34:	addr16 ds jge 0x4119f0
  411a38:	inc    eax
  411a39:	stos   BYTE PTR es:[edi],al
  411a3a:	pop    esp
  411a3b:	jmp    0xebc0:0x6cfe8126
  411a42:	mov    esp,0x8bf9ad93
  411a47:	je     0x411a70
  411a49:	or     cl,BYTE PTR [ebp+edx*4+0x4c]
  411a4d:	shr    BYTE PTR [esi+0x34],0x30
  411a51:	push   ecx
  411a52:	enter  0x54c9,0xf8
  411a56:	daa    
  411a57:	popa   
  411a58:	aad    0xee
  411a5a:	test   DWORD PTR [esi+0x7962ae51],0x1de42299
  411a64:	mov    ch,0x3d
  411a66:	imul   edx,DWORD PTR [ecx],0xffffff8b
  411a69:	lea    eax,[edx+0x14]
  411a6c:	popf   
  411a6d:	outs   dx,BYTE PTR ds:[esi]
  411a6e:	repnz inc esi
  411a70:	bound  edx,QWORD PTR [edi+0x0]
  411a73:	mov    DWORD PTR [edx-0x1e],ebp
  411a76:	mov    ch,0x29
  411a78:	lods   al,BYTE PTR ds:[esi]
  411a79:	sahf   
  411a7a:	inc    eax
  411a7b:	test   al,0xd7
  411a7d:	pop    ecx
  411a7e:	mov    al,ds:0x46a43d8c
  411a83:	cdq    
  411a84:	mov    cl,0x4b
  411a86:	add    DWORD PTR [esi-0x4],ecx
  411a89:	fild   WORD PTR [ecx-0x39]
  411a8c:	cld    
  411a8d:	retf   
  411a8e:	inc    edx
  411a8f:	test   eax,0xd7eea0c4
  411a94:	sub    ebx,0x5ff2643e
  411a9a:	icebp  
  411a9b:	mov    ch,0x25
  411a9d:	dec    ebx
  411a9e:	push   ecx
  411a9f:	sub    ebx,edx
  411aa1:	out    0x19,eax
  411aa3:	(bad)  
  411aa4:	dec    esp
  411aa5:	dec    edx
  411aa6:	aad    0x31
  411aa8:	and    al,0x57
  411aaa:	jecxz  0x411a83
  411aac:	dec    ebp
  411aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aae:	add    bh,BYTE PTR [eax-0x460f2821]
  411ab4:	aaa    
  411ab5:	adc    eax,0x1d19cb8a
  411aba:	xor    ecx,esi
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a633
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a637
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a63f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a643
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a647
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a64b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a64f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a653
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a65b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a623
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a62b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a62f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a633
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a637
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [esi],cl
  412636:	pop    es
  412637:	iret   
  412638:	xchg   ecx,eax
  412639:	imul   ecx,DWORD PTR [edx+0x5c178383],0xffffff83
  412640:	or     edx,0x1f
  412643:	and    BYTE PTR ds:0x4ed0e8f,dl
  412649:	jno    0x4125d6
  41264b:	in     al,dx
  41264c:	jo     0x412625
  41264e:	push   edx
  41264f:	push   esi
  412650:	outs   dx,DWORD PTR ds:[esi]
  412651:	push   edi
  412652:	adc    BYTE PTR [ebx-0x5602a82d],0xa
  412659:	out    dx,al
  41265a:	inc    esp
  41265b:	jmp    FWORD PTR [edi+0x23277ee9]
  412661:	push   0x2d
  412663:	mov    ds:0x9b305f5a,eax
  412668:	pop    ebp
  412669:	dec    esi
  41266a:	dec    esi
  41266b:	and    al,0x8b
  41266d:	cmp    edx,ebx
  41266f:	pop    esi
  412670:	push   ss
  412671:	xor    bh,dh
  412673:	js     0x412619
  412675:	in     al,dx
  412676:	push   ds
  412677:	add    ah,al
  412679:	jb     0x412631
  41267b:	fs ret 
  41267d:	jmp    0x41266f
  41267f:	jnp    0x7db26901
  412685:	add    esp,DWORD PTR [ebx+edx*4-0x21]
  412689:	add    esi,DWORD PTR [ebp+0x267603e2]
  41268f:	sub    al,0x54
  412691:	fimul  WORD PTR [esi]
  412693:	fisubr WORD PTR [eax+0x2c]
  412696:	fiadd  DWORD PTR [edi+edi*4+0x302a847d]
  41269d:	pop    es
  41269e:	pop    es
  41269f:	pop    edi
  4126a0:	xchg   bl,ch
  4126a2:	dec    ebx
  4126a3:	jecxz  0x412697
  4126a5:	xchg   DWORD PTR [eax-0x2100d333],ebp
  4126ab:	sbb    dh,ch
  4126ad:	daa    
  4126ae:	(bad)  
  4126af:	imul   ebp,DWORD PTR ds:0xa6c87b96,0xf478e58f
  4126b9:	cmp    BYTE PTR [edx-0x1],al
  4126bc:	je     0x412730
  4126be:	mov    ch,0xc
  4126c0:	mov    ebx,0xc9efd466
  4126c5:	scas   eax,DWORD PTR es:[edi]
  4126c6:	pushf  
  4126c7:	xchg   esp,eax
  4126c8:	jp     0x412718
  4126ca:	inc    ebx
  4126cb:	adc    eax,0x13c0db41
  4126d0:	(bad)  
  4126d1:	dec    ebp
  4126d2:	rcl    DWORD PTR ds:0xda924124,cl
  4126d8:	jns    0x4126c1
  4126da:	and    al,0x23
  4126dc:	repz lock ror BYTE PTR [esi-0x5cbca4ab],1
  4126e4:	xor    BYTE PTR [edx],bl
  4126e6:	out    0x92,al
  4126e8:	jmp    0x6e345d8f
  4126ed:	pusha  
  4126ee:	xchg   bh,bl
  4126f0:	or     eax,0xac48ed47
  4126f5:	push   ebx
  4126f6:	mov    edx,0xd1ca5e81
  4126fb:	clc    
  4126fc:	fild   WORD PTR [esp+ebp*2-0x73]
  412700:	shl    BYTE PTR cs:[edi],1
  412703:	adc    BYTE PTR [ebx+0x1c],ch
  412706:	dec    dx
  412708:	aam    0xf
  41270a:	mov    ebx,0xe5e0468e
  41270f:	fisubr DWORD PTR [ebp+0x2a61ad7a]
  412715:	inc    esi
  412716:	in     al,0x52
  412718:	lahf   
  412719:	cmp    al,0x44
  41271b:	mov    esp,0xe9b119cb
  412720:	xchg   esp,eax
  412721:	sbb    al,0x32
  412723:	shl    BYTE PTR [eax+0x40],1
  412726:	jl     0x41279d
  412728:	cmp    BYTE PTR [edi],ch
  41272a:	jmp    0x41276d
  41272c:	call   0x234e:0xbd9ea71c
  412733:	adc    bl,BYTE PTR [ebx+eiz*4+0x63]
  412737:	and    BYTE PTR [edi+0xceb099f],bl
  41273d:	je     0x4126ef
  41273f:	sbb    BYTE PTR [ecx],ch
  412741:	jmp    0x973de24f
  412746:	or     al,0x91
  412748:	fwait
  412749:	mov    BYTE PTR [eax],bl
  41274b:	sar    DWORD PTR [esp+ebx*2],cl
  41274e:	out    dx,al
  41274f:	mov    al,ds:0x90a64ba3
  412754:	ror    BYTE PTR [esp+edi*2-0x26d646e0],cl
  41275b:	fbstp  TBYTE PTR [ecx-0x13]
  41275e:	and    bh,0xdd
  412761:	imul   esi,DWORD PTR [ebx-0x5c],0xd5fcf864
  412768:	loop   0x4127b5
  41276a:	push   0x4707f5f
  41276f:	xchg   ecx,eax
  412770:	loop   0x4127b9
  412772:	je     0x412783
  412774:	(bad)  
  412776:	test   BYTE PTR [eax-0x1b2ecf37],bl
  41277c:	rcl    DWORD PTR [edi+0x1db75d08],1
  412782:	sub    al,0x49
  412784:	stc    
  412785:	mov    ds:0xc23bfffd,eax
  41278a:	je     0x4127fe
  41278c:	or     eax,0x40885f9d
  412791:	mov    esi,0x188ef949
  412796:	mov    bl,BYTE PTR [esi-0x2b]
  412799:	retf   
  41279a:	dec    esp
  41279b:	ins    DWORD PTR es:[edi],dx
  41279c:	ja     0x41277f
  41279e:	mov    eax,0x18cadbee
  4127a3:	ins    DWORD PTR es:[edi],dx
  4127a4:	adc    BYTE PTR [edx+0x7f828a05],dh
  4127aa:	dec    esi
  4127ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127ac:	pop    ebx
  4127ad:	adc    edx,DWORD PTR [ebx]
  4127af:	stos   DWORD PTR es:[edi],eax
  4127b0:	fstp   TBYTE PTR [eax+0x360a4080]
  4127b6:	stos   BYTE PTR es:[edi],al
  4127b7:	push   ss
  4127b8:	xor    ah,BYTE PTR [ebp+ebp*8+0x2c]
  4127bc:	cmp    eax,esp
  4127be:	inc    esp
  4127bf:	aam    0xc1
  4127c1:	sbb    al,0xfc
  4127c3:	sub    esp,edi
  4127c5:	push   ebx
  4127c6:	ds push ss
  4127c8:	or     bh,BYTE PTR ds:0x907b2568
  4127ce:	sahf   
  4127cf:	dec    edx
  4127d0:	fistp  QWORD PTR [edx-0x705b07b3]
  4127d6:	(bad)
  4127da:	xchg   esi,eax
  4127db:	sbb    dh,BYTE PTR [ecx+0x78]
  4127de:	fidiv  DWORD PTR [ecx+0x5edd8a65]
  4127e4:	add    ebp,DWORD PTR [ebx+ebx*1]
  4127e7:	push   ss
  4127e8:	jecxz  0x41281d
  4127ea:	loope  0x4127a1
  4127ec:	mov    dh,0x5
  4127ee:	ret    0x89e3
  4127f1:	int3   
  4127f2:	mov    bh,0xfd
  4127f4:	test   DWORD PTR [esi-0x5a85d655],ecx
  4127fa:	push   ds
  4127fb:	mov    bh,0x65
  4127fd:	fwait
  4127fe:	lahf   
  4127ff:	in     eax,0xba
  412801:	rol    BYTE PTR [edi+ecx*4+0x58ded9c0],0xbd
  412809:	or     ecx,DWORD PTR [eax-0x79b77ab8]
  41280f:	inc    esi
  412810:	cmp    bh,cl
  412812:	rcr    DWORD PTR [edi+0x3b],0x14
  412816:	sub    al,0x47
  412818:	aaa    
  412819:	or     al,0x9e
  41281b:	cmp    eax,0xe040223f
  412820:	push   eax
  412821:	push   esp
  412822:	mov    eax,DWORD PTR [edi-0x28]
  412825:	add    DWORD PTR [ecx],eax
  412827:	dec    edx
  412828:	jae    0x412890
  41282a:	xor    edx,esi
  41282c:	js     0x412861
  41282e:	ss jle 0x41286d
  412831:	sahf   
  412832:	cli    
  412833:	pop    ss
  412834:	ficomp DWORD PTR [ebx+esi*2+0x42]
  412838:	scas   eax,DWORD PTR es:[edi]
  412839:	xor    DWORD PTR [ebp-0x76],0x36a8d1ba
  412840:	add    DWORD PTR [ebx+0x7a8588a7],edx
  412846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412847:	xor    BYTE PTR [ebp-0x78ce4545],cl
  41284d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41284e:	stc    
  41284f:	in     al,dx
  412850:	movaps xmm7,XMMWORD PTR [ebp+ebp*8+0x140f8f55]
  412858:	push   0xffffffbc
  41285a:	jge    0x4128b3
  41285c:	ins    BYTE PTR es:[edi],dx
  41285d:	inc    ebx
  41285e:	jmp    0x45b0:0x510c71ad
  412865:	push   esi
  412866:	in     al,0x45
  412868:	rol    DWORD PTR ds:0xd379dc10,0x18
  41286f:	shr    BYTE PTR [ecx-0x66],0xfe
  412873:	sub    ebx,ecx
  412875:	pop    ss
  412876:	mov    edi,0xc701edd7
  41287b:	mov    al,ds:0x17e7f471
  412880:	mov    ebx,0x7875cd5c
  412885:	jno    0x412807
  412887:	sbb    esp,DWORD PTR [ebx]
  412889:	aad    0x4f
  41288b:	icebp  
  41288c:	jb     0x412844
  41288e:	in     al,0x19
  412890:	cld    
  412891:	test   al,0xfc
  412893:	mov    esi,0xbbbeed41
  412898:	jge    0x4128ff
  41289a:	jmp    0xf5720152
  41289f:	data16 test BYTE PTR [eax],0x73
  4128a3:	jg     0x41282d
  4128a5:	xor    BYTE PTR [ecx+ebx*8+0x0],dh
  4128a9:	pop    esp
  4128aa:	jg     0x412913
  4128ac:	out    0xbc,al
  4128ae:	xor    BYTE PTR [edi+0x4e480ea9],ch
  4128b4:	add    cl,BYTE PTR [ebp+0x49d45558]
  4128ba:	mov    ecx,0x1699210d
  4128bf:	mov    cl,0xd8
  4128c1:	lea    ebp,[ebx-0x2185a4ed]
  4128c7:	daa    
  4128c8:	push   edx
  4128c9:	stos   DWORD PTR es:[edi],eax
  4128ca:	outs   dx,DWORD PTR ds:[esi]
  4128cb:	(bad)  
  4128cc:	adc    eax,0x68b98663
  4128d1:	mov    bh,0xa
  4128d3:	ficom  WORD PTR [esi-0x571ccd99]
  4128d9:	scas   eax,DWORD PTR es:[edi]
  4128da:	dec    edx
  4128db:	scas   al,BYTE PTR es:[edi]
  4128dc:	cmp    cl,BYTE PTR [ebx]
  4128de:	fwait
  4128df:	add    eax,0xf0285f2f
  4128e4:	fild   DWORD PTR [edx+0x31]
  4128e7:	aam    0x17
  4128e9:	out    dx,eax
  4128ea:	push   0xdc86334c
  4128ef:	and    BYTE PTR [ecx-0x6e59c3e8],ah
  4128f5:	mov    ds:0xeafb77e3,al
  4128fa:	add    eax,0xc6287ce9
  4128ff:	imul   BYTE PTR [ecx+ecx*8]
  412902:	cmp    DWORD PTR fs:[edx-0x7ce45516],ebp
  412909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41290a:	shr    BYTE PTR ds:0x9961d986,cl
  412910:	push   edx
  412911:	and    BYTE PTR [esi-0x600a9b69],0xa0
  412918:	lods   al,BYTE PTR ds:[esi]
  412919:	pop    edx
  41291a:	mov    esp,0x16e41527
  41291f:	shr    DWORD PTR [eax-0x77fe62fe],0xc6
  412926:	(bad)  
  412928:	or     esp,ebx
  41292a:	test   BYTE PTR [eax+0x7caa81aa],bh
  412930:	add    DWORD PTR ds:0x19c8da6b,ebp
  412936:	adc    DWORD PTR [edx+ecx*1-0x52],eax
  41293a:	cld    
  41293b:	pop    eax
  41293c:	int3   
  41293d:	ds sar edx,cl
  412940:	iret   
  412941:	nop
  412942:	dec    edx
  412943:	mov    DWORD PTR [ecx+0x2de54754],edx
  412949:	(bad)  
  41294a:	in     eax,dx
  41294b:	aad    0x61
  41294d:	mov    ah,0x1d
  41294f:	inc    ecx
  412950:	mov    edx,0x3bf41c93
  412955:	enter  0xd6f9,0xfd
  412959:	push   esi
  41295a:	cmp    al,0xf0
  41295c:	jo     0x412936
  41295e:	add    dl,dh
  412960:	hlt    
  412961:	ds hlt 
  412963:	stos   DWORD PTR es:[edi],eax
  412964:	jne    0x412906
  412966:	iret   
  412967:	add    BYTE PTR [esi],0xa6
  41296a:	push   ebx
  41296b:	cmp    BYTE PTR [ebp-0x4044ed00],dh
  412971:	repz shr DWORD PTR [edx+esi*8],0x36
  412976:	cmp    BYTE PTR [ecx-0x5b3d3858],cl
  41297c:	mov    esp,0xca265a87
  412981:	push   esi
  412982:	ret    0x8202
  412985:	test   DWORD PTR [edi-0x12091017],edx
  41298b:	lods   eax,DWORD PTR ds:[esi]
  41298c:	rcl    ch,0xc2
  41298f:	push   0x2a968a9c
  412994:	mov    esp,0x9a97cdae
  412999:	aaa    
  41299a:	pop    ss
  41299b:	call   DWORD PTR [edx+0x4a7ac0fc]
  4129a1:	call   DWORD PTR [edx-0x3b270a55]
  4129a7:	pop    edx
  4129a8:	imul   DWORD PTR [ecx+0x6e]
  4129ab:	mov    esi,0x942eb27c
  4129b0:	(bad)  
  4129b1:	pop    ss
  4129b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b3:	inc    ecx
  4129b4:	mov    edi,0xcf8772df
  4129b9:	inc    edx
  4129ba:	xor    edx,DWORD PTR [edi+0x67967d3b]
  4129c0:	cmp    eax,0x8f9d2aee
  4129c5:	in     al,dx
  4129c6:	jl     0x412a16
  4129c8:	mov    dl,0x46
  4129ca:	and    esi,DWORD PTR [edx]
  4129cc:	js     0x41294f
  4129ce:	cli    
  4129cf:	cmc    
  4129d0:	in     al,dx
  4129d1:	sbb    esi,ebp
  4129d3:	cdq    
  4129d4:	mov    ebx,0xf99fdcb
  4129d9:	push   ebp
  4129da:	loope  0x41298d
  4129dc:	out    dx,al
  4129dd:	cmp    BYTE PTR [eax-0x1d],ch
  4129e0:	enter  0xcad0,0x66
  4129e4:	mov    cl,0x8c
  4129e6:	lock sar DWORD PTR [ebx],0xbe
  4129ea:	xchg   ebp,eax
  4129eb:	repz sbb BYTE PTR [eax+0x7],ah
  4129ef:	jbe    0x412982
  4129f1:	mov    cl,0x73
  4129f3:	mov    edi,0xcc1c545e
  4129f8:	not    DWORD PTR [edx+0x49]
  4129fb:	dec    esi
  4129fc:	cld    
  4129fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129fe:	jb     0x4129f9
  412a00:	xor    DWORD PTR [eax],esi
  412a02:	cmp    ecx,0x75
  412a05:	push   edi
  412a06:	fcmovb st,st(7)
  412a08:	jmp    0xa300:0x2b3c8d9a
  412a0f:	repnz pop ebp
  412a11:	jns    0x412a7d
  412a13:	lock retf 0x4e3a
  412a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a18:	(bad)  
  412a1a:	loope  0x412a23
  412a1c:	xchg   ebx,eax
  412a1d:	adc    BYTE PTR [esi+edi*4+0x5e],bh
  412a21:	mov    ds:0x31e2a29f,al
  412a26:	mov    ebx,0x976e9bed
  412a2b:	pop    ebx
  412a2c:	les    ebp,FWORD PTR [edx+eiz*8+0x7f]
  412a30:	sbb    eax,0x7a209ddb
  412a35:	pusha  
  412a36:	iret   
  412a37:	xchg   edi,eax
  412a38:	sbb    ch,BYTE PTR [edi+0x5a5b7df2]
  412a3e:	mov    eax,0xe2fc9425
  412a43:	popf   
  412a44:	ret    0x1af5
  412a47:	add    al,0x24
  412a49:	lahf   
  412a4a:	push   esi
  412a4b:	iret   
  412a4c:	inc    edx
  412a4d:	in     al,dx
  412a4e:	jg     0x412ac6
  412a50:	test   DWORD PTR [ecx+0x29],ecx
  412a53:	out    0xd2,eax
  412a55:	das    
  412a56:	jge    0x4129ff
  412a58:	jae    0x412a4b
  412a5a:	iret   
  412a5b:	push   ebp
  412a5c:	call   DWORD PTR [esi+0x4695d1ce]
  412a62:	lock es jl 0x412ad9
  412a66:	call   0xda8e:0xdb04daa5
  412a6d:	adc    al,0x1d
  412a6f:	into   
  412a70:	jae    0x412a27
  412a72:	pop    esi
  412a73:	jbe    0x412a6d
  412a75:	ret    
  412a76:	leave  
  412a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a78:	add    eax,0x3e57d7a9
  412a7d:	bound  dx,DWORD PTR [edx-0x4a00ead3]
  412a84:	jns    0x412ae8
  412a86:	add    bh,BYTE PTR [ebp-0x6c]
  412a89:	cdq    
  412a8a:	inc    edi
  412a8b:	or     al,0x87
  412a8d:	xchg   edi,eax
  412a8e:	imul   DWORD PTR [edx+edx*2-0x5]
  412a92:	les    esp,FWORD PTR [edx]
  412a94:	push   ecx
  412a95:	int    0x42
  412a97:	mov    eax,0x522a4ef7
  412a9c:	push   0x70
  412a9e:	sub    al,0x38
  412aa1:	mov    ah,0x23
  412aa3:	popa   
  412aa4:	out    0x1e,eax
  412aa6:	adc    eax,0xd84b4eb4
  412aab:	inc    ebp
  412aac:	sbb    DWORD PTR [edi],edx
  412aae:	adc    DWORD PTR ds:0x2a988c24,edx
  412ab4:	fldcw  WORD PTR [esi-0x5938f57d]
  412aba:	aad    0x7c
  412abc:	dec    esi
  412abd:	dec    ebp
  412abe:	addr16 hlt 
  412ac0:	sbb    esi,DWORD PTR [ebx]
  412ac2:	cmp    al,0x9b
  412ac4:	cmp    dl,bh
  412ac6:	jge    0x412ad8
  412ac8:	aad    0x8c
  412aca:	add    BYTE PTR [ebx],al
  412acc:	push   ebx
  412acd:	fstp   QWORD PTR [eax]
  412acf:	lds    esp,FWORD PTR [ecx]
  412ad1:	imul   ebp,DWORD PTR [edi-0x4b3e0839],0x8ad935fe
  412adb:	call   0xd5f3ae76
  412ae0:	stos   BYTE PTR es:[edi],al
  412ae1:	push   ebp
  412ae2:	xor    eax,0x9642ee18
  412ae7:	lods   eax,DWORD PTR ds:[esi]
  412ae8:	xchg   esi,eax
  412ae9:	ss cdq 
  412aeb:	fst    QWORD PTR [ebx-0x4edec35f]
  412af1:	loope  0x412ae7
  412af3:	mov    ecx,0x43b59897
  412af8:	push   eax
  412af9:	retf   
  412afa:	inc    ebx
  412afb:	mov    ch,0xc2
  412afd:	sub    BYTE PTR [eax+0x62],bl
  412b00:	pop    ecx
  412b01:	ficomp WORD PTR [edi-0x56372d7d]
  412b07:	adc    bl,bl
  412b09:	and    eax,0x3859f87e
  412b0e:	stos   BYTE PTR es:[edi],al
  412b0f:	jb     0x412b47
  412b11:	add    DWORD PTR [eax+0x5b8961bc],0xffffff8b
  412b18:	cwde   
  412b19:	fcom   DWORD PTR [eax]
  412b1b:	add    eax,0x1725a6da
  412b20:	inc    eax
  412b21:	jns    0x412b1c
  412b23:	test   eax,0x986a4c09
  412b28:	dec    esp
  412b29:	sti    
  412b2a:	sbb    esp,ecx
  412b2c:	pop    ds
  412b2d:	data16 out 0x50,al
  412b30:	popa   
  412b31:	xchg   ebx,eax
  412b32:	sbb    eax,0x3df7be4f
  412b37:	in     al,dx
  412b38:	mov    ecx,0x273162d3
  412b3d:	dec    esi
  412b3e:	aam    0x7a
  412b40:	sti    
  412b41:	push   ss
  412b42:	mov    al,0xcb
  412b44:	jmp    0x412b28
  412b46:	cmp    ecx,DWORD PTR [edi+0x36f7ca70]
  412b4c:	je     0x412b26
  412b4e:	inc    esp
  412b4f:	adc    eax,0xe6760225
  412b54:	pop    ebx
  412b55:	push   ecx
  412b56:	(bad)  
  412b58:	mov    eax,0xc4b779a7
  412b5d:	pusha  
  412b5e:	add    esp,esp
  412b60:	and    eax,0xf4b26a79
  412b65:	les    edi,FWORD PTR [esi+0x3556c702]
  412b6b:	inc    esp
  412b6c:	pop    ss
  412b6d:	lahf   
  412b6e:	add    eax,DWORD PTR [edx-0x361a0725]
  412b74:	inc    edx
  412b75:	xchg   ebx,eax
  412b76:	mov    ebp,0x4984de50
  412b7b:	dec    edx
  412b7c:	fisubr WORD PTR [esi-0x27]
  412b7f:	or     BYTE PTR [edi+0x2a],bl
  412b82:	es call 0x6799507e
  412b88:	call   0x1a7ec6c1
  412b8d:	lea    esi,[ebx+0x57]
  412b90:	xchg   esp,eax
  412b91:	fidiv  WORD PTR [ebp+0x4c2437c3]
  412b97:	adc    al,0x73
  412b99:	ss pop edi
  412b9b:	xchg   esi,eax
  412b9c:	sbb    BYTE PTR [eax],dl
  412b9e:	ins    DWORD PTR es:[edi],dx
  412b9f:	fcomp  QWORD PTR [ecx+0x37036575]
  412ba5:	test   BYTE PTR [esi],ch
  412ba7:	xchg   edi,eax
  412ba8:	(bad)  
  412ba9:	imul   ecx,DWORD PTR [ebx-0x32],0xffffff90
  412bad:	push   ecx
  412bae:	mov    edx,0xa2192b03
  412bb3:	push   esp
  412bb4:	lahf   
  412bb5:	mov    eax,edi
  412bb7:	adc    eax,0x63f51352
  412bbc:	xor    al,0xb4
  412bbe:	dec    esi
  412bbf:	or     ebx,DWORD PTR [ebx+0x58]
  412bc2:	ret    
  412bc3:	sbb    DWORD PTR [esi-0x3d],0x5f3acb00
  412bca:	jbe    0x412b71
  412bcc:	sahf   
  412bcd:	dec    edx
  412bce:	cli    
  412bcf:	cld    
  412bd0:	dec    ecx
  412bd1:	jno    0x412bc5
  412bd3:	mov    al,0x31
  412bd5:	out    0x9c,al
  412bd7:	cld    
  412bd8:	sub    al,BYTE PTR [ebp+0x5e]
  412bdb:	imul   edi,DWORD PTR [edx-0x48bbce81],0x65
  412be2:	lea    esi,ds:0xd5fea5b4
  412be8:	mov    esi,0x4a451ddc
  412bed:	and    eax,0x773ff4b0
  412bf2:	pop    es
  412bf3:	ja     0x412c0b
  412bf5:	fxtract 
  412bf7:	sbb    cl,BYTE PTR [edx-0x26c3dfc2]
  412bfd:	lock cli 
  412bff:	mov    dl,0xa9
  412c01:	repnz sub al,0x95
  412c04:	leave  
  412c05:	cld    
  412c06:	in     al,dx
  412c07:	push   0xffffffb7
  412c09:	or     BYTE PTR [edx+eax*2],ah
  412c0c:	sbb    ebp,ecx
  412c0e:	fidivr DWORD PTR [edi]
  412c10:	into   
  412c11:	stos   BYTE PTR es:[edi],al
  412c12:	push   ecx
  412c13:	std    
  412c14:	sahf   
  412c15:	adc    esp,ecx
  412c17:	push   edi
  412c18:	scas   al,BYTE PTR es:[edi]
  412c19:	or     DWORD PTR [edi+0x35],edi
  412c1c:	mov    ds:0xb27641a7,eax
  412c21:	xchg   ebx,eax
  412c22:	in     al,dx
  412c23:	daa    
  412c24:	pop    ss
  412c25:	inc    edi
  412c26:	jo     0x412c79
  412c28:	jne    0x412bec
  412c2a:	jg     0x412c4b
  412c2c:	sbb    al,0xfa
  412c2e:	dec    ecx
  412c2f:	setl   BYTE PTR [esi+0x7a]
  412c33:	int3   
  412c34:	or     eax,0x9ee3a571
  412c39:	sti    
  412c3a:	mov    eax,0x204d0f9
  412c3f:	jecxz  0x412c8c
  412c41:	xchg   edx,eax
  412c42:	stc    
  412c43:	push   esp
  412c44:	and    al,0x3c
  412c46:	jmp    0xd69e560f
  412c4b:	and    eax,0xc080d4e2
  412c50:	stos   BYTE PTR es:[edi],al
  412c51:	adc    BYTE PTR [edx+0x72],ah
  412c54:	cli    
  412c55:	mov    esp,0x51414572
  412c5a:	ds stc 
  412c5c:	dec    edx
  412c5d:	fimul  DWORD PTR [esi-0x32]
  412c60:	xchg   ebx,eax
  412c61:	xchg   ebp,eax
  412c62:	sub    esp,edx
  412c64:	adc    BYTE PTR [edx-0x2a],0x2b
  412c68:	mov    DWORD PTR [eax],ebx
  412c6a:	rol    DWORD PTR [ebx+esi*2],1
  412c6d:	and    DWORD PTR [esi],edx
  412c6f:	adc    cl,BYTE PTR [eax]
  412c71:	inc    edi
  412c72:	push   edx
  412c73:	stos   DWORD PTR es:[edi],eax
  412c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c75:	clc    
  412c76:	xor    BYTE PTR [ebp-0x32a3c26e],bl
  412c7c:	stos   DWORD PTR es:[edi],eax
  412c7d:	mov    esi,0x8ad06854
  412c82:	loop   0x412c62
  412c84:	mov    esi,0x7d2d4c1d
  412c89:	xchg   edi,eax
  412c8a:	inc    ebp
  412c8b:	mov    al,ds:0x704e3a69
  412c90:	mov    DWORD PTR [esi+0x589dcbc],ecx
  412c96:	cmp    DWORD PTR [edx],eax
  412c98:	test   ecx,esp
  412c9a:	mov    BYTE PTR [ecx+0x66],bh
  412c9d:	and    BYTE PTR [esi-0x60],0xa3
  412ca1:	std    
  412ca2:	xchg   ebx,edi
  412ca4:	outs   dx,DWORD PTR ds:[esi]
  412ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ca6:	mov    edi,0x549a2cbe
  412cab:	cs sub edx,esi
  412cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412caf:	xchg   edi,eax
  412cb0:	or     DWORD PTR [ecx+edx*4],esp
  412cb3:	add    BYTE PTR [ecx-0x44557652],0xe3
  412cba:	sbb    DWORD PTR [esp+ebx*4],ebp
  412cbd:	mov    edx,0x4d925aba
  412cc2:	cmp    edi,0x29
  412cc5:	xlat   BYTE PTR ds:[ebx]
  412cc6:	ins    DWORD PTR es:[edi],dx
  412cc7:	push   esi
  412cc8:	push   ss
  412cc9:	ss in  eax,0x10
  412ccc:	rcl    DWORD PTR ds:0x52a348c7,1
  412cd2:	pop    esp
  412cd3:	call   0x760274db
  412cd8:	shr    DWORD PTR [ebp-0x63],0x61
  412cdc:	test   al,0xa8
  412cde:	cwde   
  412cdf:	push   es
  412ce0:	dec    esp
  412ce1:	xor    bl,cl
  412ce3:	jnp    0x412c77
  412ce5:	(bad)  
  412ce6:	ficom  WORD PTR [eax-0x53]
  412ce9:	iret   
  412cea:	xor    eax,edi
  412cec:	daa    
  412ced:	xchg   ebx,eax
  412cee:	xchg   ebx,eax
  412cef:	xchg   ebx,esi
  412cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf2:	mov    edx,0x75c9dbb7
  412cf7:	pop    eax
  412cf8:	xlat   BYTE PTR ds:[ebx]
  412cf9:	and    edx,edx
  412cfb:	popa   
  412cfc:	mov    dh,0xb6
  412cfe:	in     eax,dx
  412cff:	xlat   BYTE PTR ds:[ebx]
  412d00:	sbb    edi,DWORD PTR gs:[edi+ecx*2]
  412d04:	sbb    dl,BYTE PTR [esi-0x3b]
  412d07:	pop    es
  412d08:	jae    0x412d65
  412d0a:	and    esi,DWORD PTR [ebx]
  412d0c:	or     DWORD PTR [esi],esp
  412d0e:	pop    esi
  412d0f:	inc    eax
  412d10:	aad    0x9a
  412d12:	dec    edi
  412d13:	mov    al,ds:0xdde9c7f5
  412d18:	or     dh,0x31
  412d1b:	fmul   QWORD PTR [eax-0x3e]
  412d1e:	dec    ecx
  412d1f:	push   0x73
  412d21:	add    DWORD PTR [eax-0x6fdd6646],esi
  412d27:	call   0x3fd0:0xe6a4ea70
  412d2e:	and    al,0x69
  412d30:	xor    ebp,DWORD PTR [ebx+0x22a647fb]
  412d36:	push   eax
  412d37:	sti    
  412d38:	xor    DWORD PTR [di],ebx
  412d3b:	xor    al,0x11
  412d3d:	in     eax,0x23
  412d3f:	or     dl,BYTE PTR [edi+0x13]
  412d42:	sub    al,0xbf
  412d44:	rcr    BYTE PTR [ecx-0x413f4a49],1
  412d4a:	fld    DWORD PTR [eax+0x455b3a31]
  412d50:	call   0xefdb4be9
  412d55:	xchg   ebp,eax
  412d56:	scas   eax,DWORD PTR es:[edi]
  412d57:	fcomp  st(5)
  412d59:	adc    BYTE PTR [eax*4-0x25f71f4c],0xa9
  412d61:	or     cl,BYTE PTR [edx-0x64eadc84]
  412d67:	hlt    
  412d68:	mov    edx,0xe1ea483c
  412d6d:	or     ah,cl
  412d6f:	inc    edx
  412d70:	dec    ebp
  412d71:	pop    edi
  412d72:	xchg   ebx,ebx
  412d74:	sbb    BYTE PTR [edx+0x3ee45c39],dh
  412d7a:	lods   al,BYTE PTR ds:[esi]
  412d7b:	push   ecx
  412d7c:	mov    cl,0x76
  412d7e:	and    dh,bh
  412d80:	jge    0x412db1
  412d82:	or     esp,DWORD PTR [ebx-0x72995bfe]
  412d88:	add    dl,BYTE PTR [edx]
  412d8a:	daa    
  412d8b:	jg     0x412d7f
  412d8d:	lea    edx,ds:0x95931c56
  412d93:	dec    esp
  412d94:	jb     0x412d4f
  412d96:	mov    edx,0xa5478e3e
  412d9b:	lods   eax,DWORD PTR ds:[esi]
  412d9c:	test   al,0xb9
  412d9e:	mov    ds:0x16a59834,eax
  412da3:	stos   BYTE PTR es:[edi],al
  412da4:	outs   dx,DWORD PTR ds:[esi]
  412da5:	shl    DWORD PTR [ecx],cl
  412da7:	cmp    al,0x94
  412da9:	loop   0x412dbb
  412dab:	pop    ebx
  412dac:	retf   0x44c8
  412daf:	pop    ecx
  412db0:	inc    esp
  412db1:	imul   edx,DWORD PTR [ebx-0x6ea0c31],0xc4fd9279
  412dbb:	(bad)  
  412dbc:	push   ds
  412dbd:	nop
  412dbe:	sbb    ch,BYTE PTR [edx+0x6e3e907d]
  412dc4:	call   0x210ee068
  412dc9:	inc    edi
  412dca:	ss (bad) 
  412dcc:	(bad)  
  412dcd:	xchg   ecx,eax
  412dce:	pop    edx
  412dcf:	push   ebx
  412dd0:	mov    bh,0x21
  412dd2:	sbb    eax,0xc277b48c
  412dd7:	clc    
  412dd8:	mov    ecx,0xbe0bad30
  412ddd:	lock push eax
  412ddf:	xor    dl,cl
  412de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de2:	call   0xdc7d35cf
  412de7:	addr16 sysexit 
  412dea:	mov    ch,0x4f
  412dec:	fs inc edx
  412dee:	cmp    al,0xfa
  412df0:	pop    edi
  412df1:	mov    edi,0xb7937ff6
  412df6:	call   FWORD PTR [eax+0x319c1e98]
  412dfc:	fs push cs
  412dfe:	int    0x1e
  412e00:	loop   0x412e0e
  412e02:	test   cl,dh
  412e04:	and    DWORD PTR [edi-0x6cefc33],eax
  412e0a:	push   edi
  412e0b:	fldcw  WORD PTR [ebp-0x17]
  412e0e:	mov    ebx,0x9094e15e
  412e13:	mov    bl,0xf6
  412e15:	jle    0x412e82
  412e17:	push   es
  412e18:	jbe    0x412e67
  412e1a:	fisubr DWORD PTR [edx]
  412e1c:	pushf  
  412e1d:	scas   eax,DWORD PTR es:[edi]
  412e1e:	dec    esp
  412e1f:	addr16 gs push 0xaf98c9c8
  412e26:	dec    ebx
  412e27:	pop    edx
  412e28:	sbb    dh,BYTE PTR [esi-0x6001e2cf]
  412e2e:	mov    ebx,0x968d6668
  412e33:	inc    esi
  412e34:	fistp  DWORD PTR [esi+0x70]
  412e37:	sub    BYTE PTR [edi+esi*1-0x4d7370ba],al
  412e3e:	sbb    BYTE PTR [edi+0x1566ae72],al
  412e44:	hlt    
  412e45:	daa    
  412e46:	push   0x5a2ff629
  412e4b:	xor    al,BYTE PTR [ebp+0xd]
  412e4e:	pop    ecx
  412e4f:	inc    esi
  412e50:	and    DWORD PTR [edx-0xaabd69a],0xfffffffe
  412e57:	loope  0x412ec7
  412e59:	popa   
  412e5a:	jno    0x412e9c
  412e5c:	inc    esi
  412e5d:	push   edi
  412e5e:	fcom   DWORD PTR [ecx+0x69]
  412e61:	imul   ecx,DWORD PTR [eax+0x469ecef4],0x5afa965a
  412e6b:	mov    WORD PTR [ebx+eiz*2+0x4ea9d2e4],?
  412e72:	pop    edx
  412e73:	out    0x4b,al
  412e75:	jmp    0x94959523
  412e7a:	imul   esi,DWORD PTR [ebp-0x59],0x30502201
  412e81:	icebp  
  412e82:	retf   
  412e83:	fistp  DWORD PTR [ecx+0x684d6431]
  412e89:	bound  ebp,QWORD PTR [ecx-0x1a345e99]
  412e8f:	fild   QWORD PTR [ecx+0x114e2fde]
  412e95:	(bad)  
  412e96:	mov    ebp,0x7c8722d2
  412e9b:	popf   
  412e9c:	xchg   DWORD PTR [esi-0x50ace3b8],esi
  412ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea3:	jge    0x412e4d
  412ea5:	popf   
  412ea6:	(bad)  
  412ea8:	stc    
  412ea9:	hlt    
  412eaa:	pop    edx
  412eab:	adc    DWORD PTR [eax],ecx
  412ead:	test   eax,0xfa2dbbe1
  412eb2:	mov    ds:0x28ee245b,al
  412eb7:	out    dx,al
  412eb8:	lods   eax,DWORD PTR ds:[esi]
  412eb9:	pop    ecx
  412eba:	cmp    eax,DWORD PTR [ebp-0x17]
  412ebd:	sbb    DWORD PTR [eax],esp
  412ebf:	xor    al,0xc1
  412ec1:	outs   dx,BYTE PTR ds:[esi]
  412ec2:	(bad)  
  412ec3:	push   ds
  412ec4:	mov    eax,ds:0xf60c69ea
  412ec9:	loopne 0x412e6d
  412ecb:	and    edx,DWORD PTR [ecx]
  412ecd:	mov    edi,0xd5b7098a
  412ed2:	psrld  mm5,QWORD PTR [ecx+0x1e12e415]
  412ed9:	scas   eax,DWORD PTR es:[edi]
  412eda:	shl    BYTE PTR [edi+0x1c335a9a],1
  412ee0:	adc    BYTE PTR [eax],al
  412ee2:	sub    ah,BYTE PTR [edi-0x7258fde6]
  412ee8:	sbb    BYTE PTR [ebp-0x2533f32c],dh
  412eee:	sub    eax,0xe6a37de6
  412ef3:	mov    dh,0xec
  412ef5:	imul   edx,DWORD PTR [ecx+0x6fa6944e],0xffffffac
  412efc:	adc    bh,ah
  412efe:	das    
  412eff:	jae    0x412f09
  412f01:	nop
  412f02:	sbb    DWORD PTR [edi-0x4988ddd9],edi
  412f08:	stc    
  412f09:	add    eax,0x938663eb
  412f0e:	out    0x9a,al
  412f10:	mov    WORD PTR [ebp+0x69],cs
  412f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f14:	enter  0x8741,0xa9
  412f18:	xchg   edx,eax
  412f19:	xchg   esp,eax
  412f1a:	dec    ecx
  412f1b:	xor    bl,dl
  412f1d:	inc    edi
  412f1e:	pop    ecx
  412f1f:	ret    
  412f20:	mov    DWORD PTR [esp+edi*8-0x47],0x579455a
  412f28:	test   ecx,esp
  412f2a:	inc    eax
  412f2b:	or     BYTE PTR [edx],ah
  412f2d:	fdiv   DWORD PTR [edi-0x30]
  412f30:	js     0x412ee2
  412f32:	sbb    al,0x4c
  412f34:	push   ebx
  412f35:	retf   
  412f36:	add    al,0xf1
  412f38:	fadd   QWORD PTR ds:[eax]
  412f3b:	pop    es
  412f3c:	pop    eax
  412f3d:	(bad)  
  412f3e:	cmc    
  412f3f:	retf   0xabe
  412f42:	rol    DWORD PTR [esi],0x5b
  412f45:	mul    DWORD PTR ds:0x5c2ffa71
  412f4b:	jl     0x412f18
  412f4d:	lahf   
  412f4e:	inc    esp
  412f4f:	jmp    0x927f:0xf51b0c52
  412f56:	cdq    
  412f57:	mov    ds:0x863d8a9d,al
  412f5c:	xor    esi,DWORD PTR [edi]
  412f5e:	iret   
  412f5f:	mov    edi,0xf9061c70
  412f64:	fs cmp eax,ecx
  412f67:	ret    0x7270
  412f6a:	sbb    eax,0x441f93a
  412f6f:	or     al,0x66
  412f71:	mov    DWORD PTR [edx+eiz*2-0x5b],edi
  412f75:	ins    DWORD PTR es:[edi],dx
  412f76:	push   eax
  412f77:	iret   
  412f78:	out    0x70,al
  412f7a:	or     dh,cl
  412f7c:	mov    cl,0xdd
  412f7e:	or     edi,DWORD PTR [ebx+0x56]
  412f81:	pop    esp
  412f82:	xchg   esi,eax
  412f83:	and    bl,dh
  412f85:	jg     0x412f70
  412f87:	and    BYTE PTR [esi-0x17],bl
  412f8a:	out    0x8a,al
  412f8c:	xchg   DWORD PTR [ebp+0x22a8c69d],esp
  412f92:	test   eax,0x177e5d8c
  412f97:	jg     0x412fed
  412f99:	in     eax,0xdd
  412f9b:	imul   esi,DWORD PTR [ebx-0x69adbe22],0x8aa36f11
  412fa5:	xchg   esi,eax
  412fa6:	dec    BYTE PTR [edi-0xe]
  412fa9:	call   0x9abc:0x2f13fa4c
  412fb0:	outs   dx,DWORD PTR ds:[esi]
  412fb1:	sub    al,0xf6
  412fb3:	mov    eax,ds:0xfa959386
  412fb8:	into   
  412fb9:	sub    al,0x4e
  412fbb:	pusha  
  412fbc:	icebp  
  412fbd:	sub    eax,0x7d52decc
  412fc2:	jmp    0x450d13c7
  412fc7:	int    0x3a
  412fc9:	push   ds
  412fca:	lds    ebp,FWORD PTR [esi-0x2e70a4b1]
  412fd0:	mov    dh,BYTE PTR [eax+0x5bd77dc0]
  412fd6:	jns    0x413048
  412fd8:	test   al,0x17
  412fda:	repnz cmp ebp,eax
  412fdd:	push   ebx
  412fde:	ret    
  412fdf:	aad    0x5d
  412fe1:	loopne 0x41302d
  412fe3:	xlat   BYTE PTR ds:[ebx]
  412fe4:	aas    
  412fe5:	and    DWORD PTR [eax-0x40],esp
  412fe8:	push   eax
  412fe9:	call   0xa5e13644
  412fee:	cld    
  412fef:	xchg   esi,eax
  412ff0:	scas   eax,DWORD PTR es:[edi]
  412ff1:	ins    DWORD PTR es:[edi],dx
  412ff2:	into   
  412ff3:	scas   al,BYTE PTR es:[edi]
  412ff4:	js     0x412fd3
  412ff6:	loope  0x412fef
  412ff8:	sub    al,0x48
  412ffa:	shl    DWORD PTR [esi],cl
  412ffc:	inc    ebp
  412ffd:	xchg   ebx,eax
  412ffe:	icebp  
  412fff:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413001:	rcr    DWORD PTR [eax-0x6],0x94
  413005:	popa   
  413006:	add    al,0x76
  413008:	inc    edi
  413009:	fs in  eax,dx
  41300b:	sbb    edi,0x1e6b2fb8
  413011:	imul   ecx,eax,0xffffffee
  413014:	data16 mov ch,BYTE PTR [esi]
  413017:	jmp    0x412fd7
  413019:	adc    cl,dl
  41301b:	std    
  41301c:	pop    edi
  41301d:	sbb    eax,0x1c267b03
  413022:	jmp    0xfd2:0xd6f5561f
  413029:	aas    
  41302a:	and    al,0x1e
  41302c:	rol    al,cl
  41302e:	sub    al,0x95
  413030:	outs   dx,BYTE PTR ds:[esi]
  413031:	sub    ebx,edx
  413033:	test   BYTE PTR [ebp+edx*1+0x32b5142b],bl
  41303a:	scas   al,BYTE PTR es:[edi]
  41303b:	fld    st(2)
  41303d:	pop    ss
  41303e:	jl     0x41300b
  413040:	add    dh,al
  413042:	retf   0x827f
  413045:	lock jbe 0x412ffa
  413048:	nop
  413049:	fwait
  41304a:	out    0xcc,eax
  41304c:	cmp    al,0x24
  41304f:	cmp    edi,DWORD PTR [esi]
  413051:	adc    ebp,DWORD PTR [eax+0x7dcf2ddd]
  413057:	loope  0x412fe3
  413059:	ss pop ecx
  41305b:	imul   edi,DWORD PTR [eax],0x6d7d19e7
  413061:	mov    dh,0xfa
  413063:	ins    DWORD PTR es:[edi],dx
  413064:	ret    
  413065:	mov    al,ds:0x46c48169
  41306a:	aaa    
  41306b:	xor    al,0x3c
  41306d:	not    ebp
  41306f:	or     cl,dl
  413071:	call   0xa2856019
  413076:	int3   
  413077:	aam    0x77
  413079:	cmp    BYTE PTR [ebx-0x408ac96b],0xe1
  413080:	dec    edx
  413081:	xchg   ecx,eax
  413082:	dec    esi
  413083:	jns    0x413038
  413085:	clc    
  413086:	pop    eax
  413087:	adc    ch,BYTE PTR [eax]
  413089:	add    al,0xa2
  41308b:	sub    DWORD PTR [eax],edi
  41308d:	xchg   edx,eax
  41308e:	cs adc eax,0x25216ef6
  413094:	enter  0xa18d,0x6c
  413098:	loope  0x4130f5
  41309a:	or     al,0x59
  41309c:	jns    0x4130fc
  41309e:	pop    ebp
  41309f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130a0:	xor    DWORD PTR [edi],edi
  4130a2:	in     al,0xeb
  4130a4:	push   ebx
  4130a5:	sub    eax,0x3beb2347
  4130aa:	imul   esp,edx,0x14
  4130ad:	out    dx,eax
  4130ae:	push   es
  4130af:	ins    BYTE PTR es:[edi],dx
  4130b0:	fwait
  4130b1:	and    eax,0xd080e498
  4130b6:	rcr    BYTE PTR [edx],0x59
  4130b9:	add    DWORD PTR [edx-0x2],esp
  4130bc:	push   esp
  4130bd:	je     0x4130a9
  4130bf:	jecxz  0x4130da
  4130c1:	add    eax,0xca901206
  4130c6:	mov    eax,ds:0x5e7402f5
  4130cb:	cmp    esi,DWORD PTR [esp+ebx*4]
  4130ce:	jge    0x4130c5
  4130d0:	(bad)  
  4130d2:	lahf   
  4130d3:	(bad)  
  4130d4:	int    0x3b
  4130d6:	and    edi,DWORD PTR [edx]
  4130d8:	xchg   edi,eax
  4130d9:	mul    ebx
  4130db:	outs   dx,DWORD PTR ds:[esi]
  4130dc:	push   ecx
  4130dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130de:	call   0x4ea7a4a1
  4130e3:	xchg   edx,eax
  4130e4:	jae    0x4130c9
  4130e6:	mov    bh,BYTE PTR [edx+0x599b81af]
  4130ec:	add    al,0xd6
  4130ee:	out    dx,eax
  4130ef:	or     BYTE PTR [esi-0x2b],dl
  4130f2:	aad    0x3a
  4130f4:	retf   
  4130f5:	xchg   ebp,eax
  4130f6:	pusha  
  4130f7:	jmp    0x71e3ad10
  4130fc:	jne    0x4130f7
  4130fe:	and    al,0x76
  413100:	popa   
  413101:	enter  0x6c40,0x26
  413105:	or     BYTE PTR [esi+0x3fbf8600],al
  41310b:	mov    ah,0xcc
  41310d:	xor    eax,0x1e945ac7
  413112:	cdq    
  413113:	lds    eax,FWORD PTR [ebx+esi*2]
  413116:	push   esp
  413117:	data16 sub al,0xf8
  41311a:	xchg   ecx,eax
  41311b:	fcmovne st,st(7)
  41311d:	popf   
  41311e:	fcmovnb st,st(7)
  413120:	xor    DWORD PTR [edx],esp
  413122:	test   eax,0x32583356
  413127:	pop    ebp
  413128:	inc    ecx
  413129:	pop    eax
  41312a:	inc    edx
  41312b:	pop    ecx
  41312c:	sub    al,0x18
  41312e:	shl    DWORD PTR gs:[edi+0x794706b1],0x13
  413136:	out    dx,al
  413137:	sbb    eax,0x924cef2d
  41313c:	into   
  41313d:	arpl   WORD PTR [edx+0x5e5a851b],si
  413143:	dec    esp
  413144:	xchg   ebx,eax
  413145:	jmp    0x413152
  413147:	and    eax,0xd9afd2e1
  41314c:	adc    eax,0xdd80ec8b
  413151:	in     al,0xfd
  413153:	pop    ebx
  413154:	loop   0x413181
  413156:	and    BYTE PTR [eax+0x39d62996],al
  41315c:	dec    esi
  41315d:	stc    
  41315e:	mov    eax,DWORD PTR [ecx+0x39]
  413161:	xchg   edx,eax
  413162:	sub    ecx,DWORD PTR [edi]
  413164:	and    BYTE PTR [edi+0x3ef95938],ah
  41316a:	scas   al,BYTE PTR es:[edi]
  41316b:	lods   al,BYTE PTR ds:[esi]
  41316c:	adc    ah,BYTE PTR [edi+0x2c]
  41316f:	cmp    DWORD PTR [edx],edi
  413171:	or     al,0xd3
  413173:	jb     0x413155
  413175:	popa   
  413176:	pop    esi
  413177:	lahf   
  413178:	push   edi
  413179:	and    eax,DWORD PTR [ebp-0xd]
  41317c:	mov    eax,ds:0xb06d00a2
  413181:	or     eax,0x439b55c9
  413186:	ja     0x413146
  413188:	add    al,0xd9
  41318a:	cmp    bl,BYTE PTR [ecx]
  41318c:	adc    DWORD PTR [esi-0x7f],0xffffffee
  413190:	cmp    ah,ah
  413192:	(bad)  
  413193:	push   ss
  413194:	jecxz  0x413200
  413196:	jmp    0x41311a
  413198:	pop    esp
  413199:	sub    eax,0xc98c12b9
  41319e:	jge    0x413196
  4131a0:	sbb    eax,DWORD PTR [ecx]
  4131a2:	cmp    DWORD PTR [edi+0x31d0e81c],edi
  4131a8:	rcr    bh,0xf5
  4131ab:	push   ebp
  4131ac:	int    0xc8
  4131ae:	ret    
  4131af:	jb     0x413202
  4131b1:	ss stc 
  4131b3:	mov    cl,0xaf
  4131b5:	sbb    al,0xf
  4131b7:	xchg   edx,eax
  4131b8:	jmp    0x413168
  4131ba:	(bad)  
  4131bb:	push   esi
  4131bc:	mov    ah,0xc7
  4131be:	outs   dx,DWORD PTR ds:[esi]
  4131bf:	out    dx,al
  4131c0:	fild   QWORD PTR [edx]
  4131c2:	xor    dh,BYTE PTR [ebx+ecx*1+0x15]
  4131c6:	inc    edx
  4131c7:	inc    esi
  4131c8:	sbb    eax,0xae7782df
  4131cd:	int    0x20
  4131cf:	ret    0xa00
  4131d2:	int3   
  4131d3:	fs cmp ch,BYTE PTR fs:[edx+0x34]
  4131d8:	pop    eax
  4131d9:	xchg   bh,bh
  4131db:	mov    ecx,0x12ca1c46
  4131e0:	popa   
  4131e1:	std    
  4131e2:	xchg   edx,eax
  4131e3:	test   esi,ecx
  4131e5:	and    al,0x3d
  4131e7:	les    ecx,FWORD PTR [esi+0x25]
  4131ea:	xor    BYTE PTR ds:0x26a17123,0x10
  4131f1:	in     al,0x97
  4131f3:	xchg   esi,eax
  4131f4:	add    ch,bh
  4131f6:	and    ah,cl
  4131f8:	dec    ecx
  4131f9:	out    0x4a,eax
  4131fb:	cmp    DWORD PTR [esi],0xe742cc62
  413201:	push   esi
  413202:	xchg   esi,eax
  413203:	cs out dx,eax
  413205:	or     DWORD PTR es:[edi],0xdbadf42f
  41320c:	xchg   edx,eax
  41320d:	cmp    ch,BYTE PTR [esi]
  41320f:	adc    dh,dl
  413211:	xchg   esp,eax
  413212:	dec    edi
  413213:	mov    bl,0x49
  413215:	pop    es
  413216:	aas    
  413217:	dec    edi
  413218:	inc    edi
  413219:	mov    ebx,0xfb90d0a
  41321e:	pop    ss
  41321f:	or     ch,BYTE PTR [ebp-0x5af68006]
  413225:	dec    esi
  413226:	out    dx,al
  413227:	push   esp
  413228:	aam    0x5f
  41322a:	xchg   DWORD PTR [ebp+0x73],ebx
  41322d:	pop    es
  41322e:	xor    al,BYTE PTR [edx]
  413230:	js     0x413294
  413232:	mov    esi,0x3a5b62c0
  413237:	push   ebp
  413238:	out    dx,eax
  413239:	push   ebx
  41323a:	pop    esi
  41323b:	pop    DWORD PTR es:[edx]
  41323e:	das    
  41323f:	mov    DWORD PTR [ebx-0x6bf75c40],edi
  413245:	int    0xba
  413247:	mov    dh,0x7e
  413249:	xlat   BYTE PTR ds:[ebx]
  41324a:	out    0x0,al
  41324c:	aad    0xc1
  41324e:	add    edx,ecx
  413250:	jbe    0x413276
  413252:	or     bh,BYTE PTR es:[esi]
  413255:	adc    dl,ah
  413257:	mov    edi,0xe0afcf4e
  41325c:	inc    esp
  41325d:	pop    ebx
  41325e:	jge    0x413267
  413260:	pop    esp
  413261:	jae    0x413296
  413263:	bound  edi,QWORD PTR [esi]
  413265:	push   cs
  413266:	sub    DWORD PTR [ecx],esi
  413268:	xchg   ebp,eax
  413269:	xchg   BYTE PTR [ebx+0x5b],al
  41326c:	mov    dh,0x96
  41326e:	add    eax,0xc3aeed5f
  413273:	popa   
  413274:	(bad)  
  413275:	ins    BYTE PTR es:[edi],dx
  413276:	dec    ebx
  413277:	dec    ebx
  413278:	xchg   ebp,eax
  413279:	ror    BYTE PTR [eax-0x6e],cl
  41327c:	out    0x3d,al
  41327e:	in     al,0x39
  413280:	ja     0x41325b
  413282:	jns    0x4132c3
  413284:	xchg   BYTE PTR [ebx-0x10],dh
  413287:	mul    DWORD PTR [ebp-0x54]
  41328a:	mov    ebp,0x30d07635
  41328f:	out    dx,al
  413290:	mov    edx,0x27e1b148
  413295:	(bad)  
  413296:	cli    
  413297:	sbb    al,0x44
  413299:	mov    ebx,0xed9d63a1
  41329e:	mov    eax,ds:0x68619960
  4132a3:	stc    
  4132a4:	inc    eax
  4132a5:	(bad)  
  4132a6:	lds    ebp,FWORD PTR [eax]
  4132a8:	sub    cl,0xd6
  4132ab:	les    esi,FWORD PTR [esi+0x63]
  4132ae:	mov    ebp,0xd9bcc4d3
  4132b3:	je     0x413326
  4132b5:	enter  0x2485,0x34
  4132b9:	pop    esp
  4132ba:	xchg   edx,eax
  4132bb:	adc    al,0x16
  4132bd:	push   ds
  4132be:	or     al,0xa5
  4132c0:	sub    al,0x33
  4132c2:	cmp    BYTE PTR [ecx+ebx*1],0xad
  4132c6:	cwde   
  4132c7:	mov    bl,0x1a
  4132c9:	std    
  4132ca:	xor    DWORD PTR [edi],edi
  4132cc:	and    ebp,DWORD PTR [edi-0x2f]
  4132cf:	pop    esi
  4132d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132d1:	dec    esp
  4132d2:	loop   0x4132dd
  4132d4:	cwde   
  4132d5:	stos   BYTE PTR es:[edi],al
  4132d6:	and    al,0x64
  4132d8:	out    dx,al
  4132d9:	cmp    ebx,DWORD PTR [eax]
  4132db:	sub    bh,BYTE PTR [ebx]
  4132dd:	pop    esi
  4132de:	sbb    esp,ebp
  4132e0:	pop    ss
  4132e1:	or     edi,0x41
  4132e4:	repz jmp 0x413322
  4132e7:	jge    0x4132eb
  4132e9:	sub    ebx,eax
  4132eb:	jmp    0x5a90357c
  4132f0:	ror    DWORD PTR ds:0xdd7f040,0xe9
  4132f7:	loopne 0x41335c
  4132f9:	push   ebp
  4132fa:	xor    al,0x6b
  4132fc:	push   esi
  4132fd:	jns    0x41330e
  4132ff:	hlt    
  413300:	mov    bh,0xeb
  413302:	pushf  
  413303:	sbb    DWORD PTR [ebx+0x55c91ed4],esi
  413309:	dec    edx
  41330a:	fcmovnb st,st(0)
  41330c:	cli    
  41330d:	xchg   esp,eax
  41330e:	dec    esp
  41330f:	or     DWORD PTR ds:0x65a561f3,edx
  413315:	xor    eax,DWORD PTR [edx]
  413317:	in     eax,0x6f
  413319:	mov    WORD PTR [edi-0x78],?
  41331c:	je     0x41331f
  41331e:	adc    ebp,ecx
  413320:	pop    edi
  413321:	mov    edx,0x16400ea0
  413326:	out    dx,eax
  413327:	out    dx,eax
  413328:	lods   al,BYTE PTR ds:[esi]
  413329:	sub    al,0xa2
  41332b:	test   dl,bl
  41332d:	jbe    0x4132b5
  41332f:	sti    
  413330:	xchg   ecx,eax
  413331:	sbb    eax,0x5a1fb7c5
  413336:	adc    edi,ecx
  413338:	cdq    
  413339:	xor    eax,0x4de068a9
  41333e:	sbb    dh,ch
  413340:	fwait
  413341:	call   0xac4b:0xf99d6ea7
  413348:	out    0xd3,al
  41334a:	cmp    ebx,DWORD PTR [ebx-0x48d0c4b1]
  413350:	loop   0x41335b
  413352:	inc    esp
  413353:	mov    dl,0x2a
  413355:	jne    0x4132f6
  413357:	scas   al,BYTE PTR es:[edi]
  413358:	ficom  DWORD PTR [ecx-0x4e0b18e5]
  41335e:	sub    ah,BYTE PTR [ebx+0x538856a4]
  413364:	stos   BYTE PTR es:[edi],al
  413365:	xchg   ebx,eax
  413366:	xchg   ecx,eax
  413367:	push   esi
  413368:	fmul   DWORD PTR [eax]
  41336a:	ins    BYTE PTR es:[edi],dx
  41336b:	push   edi
  41336c:	dec    edi
  41336d:	jae    0x413359
  41336f:	jmp    0x24c9d9ed
  413374:	jge    0x4133d4
  413376:	ds xor al,0xba
  413379:	stos   DWORD PTR es:[edi],eax
  41337a:	call   0x9083e2a3
  41337f:	sbb    esp,esi
  413381:	jae    0x4133f0
  413383:	jl     0x4133f8
  413385:	jp     0x4133d3
  413387:	out    dx,eax
  413388:	cld    
  413389:	and    DWORD PTR [edi],esi
  41338b:	pop    ecx
  41338c:	sub    edx,esp
  41338e:	sbb    eax,DWORD PTR [eax-0xa785741]
  413394:	or     DWORD PTR [edx],esi
  413396:	mov    ebp,0x841071e1
  41339b:	push   ebp
  41339c:	xchg   esi,eax
  41339d:	pushf  
  41339e:	es ja  0x413360
  4133a1:	push   eax
  4133a2:	or     ebp,DWORD PTR [edx]
  4133a4:	or     BYTE PTR [eax+0x530f0265],bl
  4133aa:	aaa    
  4133ab:	std    
  4133ac:	adc    BYTE PTR [edi],ch
  4133ae:	adc    bl,al
  4133b0:	push   cs
  4133b1:	jmp    0xbe494fb8
  4133b6:	xchg   edi,eax
  4133b7:	sbb    dh,0x7f
  4133ba:	aad    0x61
  4133bc:	pop    ebp
  4133bd:	in     al,dx
  4133be:	or     eax,0xcf339fba
  4133c3:	and    DWORD PTR ds:0x1c737fc1,ebp
  4133c9:	inc    esi
  4133ca:	fld    st(0)
  4133cc:	inc    ecx
  4133cd:	xlat   BYTE PTR ds:[ebx]
  4133ce:	jo     0x4133f3
  4133d0:	jmp    0x413435
  4133d2:	jp     0x413371
  4133d4:	dec    edi
  4133d5:	mov    esi,0xebda6a05
  4133da:	dec    ecx
  4133db:	mov    ebp,0xf22112e1
  4133e0:	sub    al,0x20
  4133e2:	std    
  4133e3:	sub    ebp,DWORD PTR [edi-0x2d394b76]
  4133e9:	(bad)  
  4133ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133eb:	inc    eax
  4133ec:	sub    DWORD PTR [edi],edi
  4133ee:	mov    edx,0x456f8b85
  4133f3:	xor    edi,0x3c9de82c
  4133f9:	xor    DWORD PTR cs:[ecx-0x1f],0xffffffe4
  4133fe:	xor    edx,DWORD PTR [edi-0x3306456d]
  413404:	mov    al,es:0x2317799b
  41340a:	sub    al,0x76
  41340c:	mul    DWORD PTR [edx+edx*1+0x282a95cd]
  413413:	jo     0x413491
  413415:	sbb    ecx,ecx
  413417:	loop   0x413436
  413419:	xlat   BYTE PTR ds:[ebx]
  41341a:	call   0xf663:0xb950eada
  413421:	imul   ebp,eax,0x20ad907a
  413427:	mov    eax,0x3e9c9925
  41342c:	test   eax,0xf9fcdf6d
  413431:	and    al,0xef
  413433:	lods   al,BYTE PTR ds:[esi]
  413434:	and    bh,BYTE PTR [edx]
  413436:	div    DWORD PTR [eax+0x1b]
  413439:	fisttp WORD PTR [ebx]
  41343b:	mov    dl,0x9d
  41343d:	or     BYTE PTR [ecx],dl
  41343f:	aad    0x20
  413441:	xchg   ebx,eax
  413442:	cmp    eax,DWORD PTR [eax+ebp*2]
  413445:	iret   
  413446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413447:	inc    edi
  413448:	dec    ebp
  413449:	loopne 0x413442
  41344b:	adc    eax,0x2e622c15
  413450:	adc    BYTE PTR [esi],dh
  413452:	repnz inc ebx
  413454:	xor    ch,BYTE PTR [edi+edi*8]
  413457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413459:	inc    edi
  41345a:	add    edx,edi
  41345c:	dec    ecx
  41345d:	inc    ebp
  41345e:	adc    cl,BYTE PTR [edx+0x8]
  413461:	dec    edi
  413462:	cmc    
  413463:	xchg   ebx,eax
  413464:	stc    
  413465:	and    BYTE PTR [edx],ch
  413467:	shl    edi,0xa
  41346a:	loopne 0x413482
  41346c:	add    esi,DWORD PTR [ebp-0x6a5c259a]
  413472:	rol    BYTE PTR [edi],1
  413474:	stc    
  413475:	sub    ch,0x8a
  413478:	mov    ebx,0xa8c0bad1
  41347d:	in     al,dx
  41347e:	ret    0x4b81
  413481:	fwait
  413482:	bound  esi,QWORD PTR [edx-0xf]
  413485:	call   0x228635f1
  41348a:	retf   0x2865
  41348d:	enter  0x2592,0x84
  413491:	mov    ecx,0xce8fcd65
  413496:	xor    al,0x53
  413498:	adc    BYTE PTR [esi+esi*4-0x1144a0d0],dl
  41349f:	sar    esi,cl
  4134a1:	mov    al,ds:0xf6c6e440
  4134a6:	or     ebp,DWORD PTR [edi]
  4134a8:	push   esi
  4134a9:	push   esi
  4134aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ab:	jo     0x413522
  4134ad:	dec    ebx
  4134ae:	jae    0x4134ed
  4134b0:	scas   al,BYTE PTR es:[edi]
  4134b1:	call   0x7326e5ef
  4134b6:	(bad)  
  4134b7:	arpl   WORD PTR [esi+0x75],dx
  4134ba:	or     al,0xfa
  4134bc:	jp     0x4134f7
  4134be:	div    BYTE PTR [ecx+0x83805ae]
  4134c4:	push   ebp
  4134c5:	inc    esp
  4134c6:	fsubrp st(5),st
  4134c8:	mov    eax,DWORD PTR [eax+eiz*1-0x17]
  4134cc:	ss jnp 0x41349d
  4134cf:	inc    eax
  4134d0:	addr16 mov edx,0xf72c9dd9
  4134d6:	data16 jg 0x4134a3
  4134d9:	mov    ebp,0x82b58c72
  4134de:	fs inc eax
  4134e0:	and    al,0xf
  4134e2:	idiv   DWORD PTR [esi-0x2f]
  4134e5:	loop   0x413501
  4134e7:	outs   dx,BYTE PTR ds:[esi]
  4134e8:	out    0xa4,al
  4134ea:	cmp    al,0x4d
  4134ec:	stos   BYTE PTR es:[edi],al
  4134ed:	into   
  4134ee:	jle    0x413528
  4134f0:	lea    edx,[edx+0x7]
  4134f3:	shl    BYTE PTR [esi-0x54757d19],cl
  4134f9:	or     BYTE PTR [ecx],ah
  4134fb:	je     0x41356f
  4134fd:	or     bh,bh
  4134ff:	dec    eax
  413500:	jg     0x413501
  413502:	jo     0x413554
  413504:	ja     0x4134a2
  413506:	mov    WORD PTR [edx+esi*1+0x4e],?
  41350a:	jp     0x4134f9
  41350c:	fild   QWORD PTR [eax]
  41350e:	test   eax,0x18331896
  413513:	mov    cl,0xd5
  413515:	outs   dx,DWORD PTR ds:[esi]
  413516:	dec    esp
  413517:	fwait
  413518:	fwait
  413519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41351a:	sub    esp,DWORD PTR [ebx-0x28b76ec2]
  413520:	jg     0x413588
  413522:	push   ebx
  413523:	or     eax,0x72007edb
  413528:	rol    BYTE PTR ds:0x8c76425c,1
  41352e:	loop   0x41356d
  413530:	pop    edi
  413531:	mov    dh,0xaa
  413533:	xor    DWORD PTR [esp+esi*1+0x27b9c9e7],edi
  41353a:	jae    0x413597
  41353c:	push   esp
  41353d:	pop    es
  41353e:	pop    ecx
  41353f:	in     al,0xe8
  413541:	mov    ds:0xcc328410,eax
  413546:	fsubr  DWORD PTR [esi-0x3a]
  413549:	push   ds
  41354a:	lds    edx,FWORD PTR [eax+edx*2+0x5b]
  41354e:	inc    esi
  41354f:	rcr    dl,0x53
  413552:	fld    QWORD PTR [ecx+0x5e854778]
  413558:	jb     0x4135a9
  41355a:	pop    edx
  41355b:	push   ecx
  41355c:	lods   al,BYTE PTR ds:[esi]
  41355d:	gs jne 0x4135aa
  413560:	jmp    0xd3e3:0xb037b1ee
  413567:	push   ebp
  413568:	jnp    0x413537
  41356a:	mov    ebp,0xe1af4964
  41356f:	pop    esp
  413570:	push   esp
  413571:	xchg   ecx,eax
  413572:	cld    
  413573:	or     BYTE PTR [ebx+0x2f],0xd9
  413577:	add    dh,BYTE PTR [ebx]
  413579:	div    BYTE PTR [esi+0x62]
  41357c:	push   ebx
  41357d:	sub    eax,0x80152136
  413582:	div    BYTE PTR [edx]
  413584:	test   eax,0x599926b1
  413589:	mov    bl,0xa6
  41358b:	mov    dh,0xf9
  41358d:	mov    ah,0x35
  41358f:	sbb    BYTE PTR [ebp-0x25f4599],cl
  413595:	add    eax,0x3c63e7a0
  41359a:	cmp    DWORD PTR [esp+esi*1-0x19],ebp
  41359e:	icebp  
  41359f:	cmp    esi,DWORD PTR [eax]
  4135a1:	ret    
  4135a2:	cmp    DWORD PTR [esi],edx
  4135a4:	or     esi,esp
  4135a6:	xchg   edx,eax
  4135a7:	adc    DWORD PTR [esi+esi*1],ecx
  4135aa:	jmp    0x4135a6
  4135ac:	xchg   esp,eax
  4135ad:	popa   
  4135ae:	sbb    cl,BYTE PTR [ebx+0x58]
  4135b1:	cmovl  esp,DWORD PTR [ecx+0x5bac090a]
  4135b8:	xor    eax,0xf84687c1
  4135bd:	sahf   
  4135be:	jns    0x4135ae
  4135c0:	jmp    0x413632
  4135c2:	mov    ds:0xb197e5fc,eax
  4135c7:	adc    edx,ebx
  4135c9:	inc    eax
  4135ca:	pop    eax
  4135cb:	loope  0x413632
  4135cd:	adc    dh,BYTE PTR [ebx]
  4135cf:	test   al,0x5d
  4135d1:	pop    eax
  4135d2:	scas   al,BYTE PTR es:[edi]
  4135d3:	or     DWORD PTR [edx+0x1144cd00],edi
  4135d9:	and    BYTE PTR [eax],0x31
  4135dc:	sbb    ch,BYTE PTR [edx]
  4135de:	add    eax,0x4c23ee66
  4135e3:	sub    cl,cl
  4135e5:	sbb    edi,eax
  4135e7:	enter  0xa6f2,0x20
  4135eb:	mov    edx,0x3fd4460f
  4135f0:	lods   eax,DWORD PTR ds:[esi]
  4135f1:	out    0x38,al
  4135f3:	clc    
  4135f4:	mov    ebp,0xe5c0ae4b
  4135f9:	sahf   
  4135fa:	mov    eax,0xf9c77771
  4135ff:	sub    bl,0x28
  413602:	inc    eax
  413603:	push   ss
  413604:	repz xor al,ch
  413607:	jne    0x413673
  413609:	mov    ebx,0x229530bc
  41360e:	xor    DWORD PTR [eax-0x248be78b],esp
  413614:	pop    esi
  413615:	xor    al,0xa1
  413617:	sbb    ebp,DWORD PTR [ecx+0x532f2fc2]
  41361d:	sub    BYTE PTR [esi],dl
  41361f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413620:	adc    DWORD PTR [ecx-0x8],edi
  413623:	and    eax,0x252ab03c
  413628:	imul   esi,DWORD PTR [esp+esi*8],0x22
  41362c:	push   edx
  41362d:	mov    ecx,0x2c7d354e
  413632:	dec    ebp
  413633:	daa    
  413634:	sbb    eax,0xb72150e
  413639:	jno    0x4135d4
  41363b:	mov    dh,0x9e
  41363d:	xlat   BYTE PTR ds:[ebx]
  41363e:	xlat   BYTE PTR ds:[ebx]
  41363f:	xchg   DWORD PTR [edi-0x49],eax
  413642:	popf   
  413643:	push   eax
  413644:	les    edi,FWORD PTR [ebx+0x29274bf]
  41364a:	mov    ds:0x8bdaa0a5,eax
  41364f:	stos   BYTE PTR es:[edi],al
  413650:	cmp    al,0xcf
  413652:	sbb    al,0xeb
  413654:	std    
  413655:	push   ds
  413656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413657:	jae    0x4135e5
  413659:	or     al,dl
  41365b:	mov    dl,0x16
  41365d:	call   0xdffee506
  413662:	(bad)  
  413663:	mov    esi,0x250fc787
  413668:	jl     0x41361d
  41366a:	out    0x59,al
  41366c:	js     0x4135f3
  41366e:	ret    0x9c31
  413671:	imul   edx,edi,0x41d35ee5
  413677:	jle    0x413679
  413679:	mov    ch,BYTE PTR [edx-0x6bbc80d2]
  41367f:	or     al,0xc1
  413681:	jb     0x413659
  413683:	nop
  413684:	xlat   BYTE PTR ds:[ebx]
  413685:	rcr    bl,0xd9
  413688:	test   eax,0x9f44f377
  41368d:	ins    BYTE PTR es:[edi],dx
  41368e:	addr16 popa 
  413690:	(bad)  
  413692:	push   ss
  413693:	xor    BYTE PTR [ebx+edi*1+0x71997cb0],0x2f
  41369b:	add    bh,bl
  41369d:	mov    cl,0xd9
  41369f:	xchg   ebp,eax
  4136a0:	sbb    ebx,eax
  4136a2:	sbb    al,0x46
  4136a4:	mov    dl,0x76
  4136a6:	scas   al,BYTE PTR es:[edi]
  4136a7:	ficomp DWORD PTR [esp+0x6f608584]
  4136ae:	adc    cx,WORD PTR [edi-0x669de918]
  4136b5:	or     ebx,DWORD PTR [edi+0x1b]
  4136b8:	inc    edx
  4136b9:	pushf  
  4136ba:	les    eax,FWORD PTR [eax]
  4136bc:	mov    edi,0x31973113
  4136c1:	xlat   BYTE PTR ds:[ebx]
  4136c2:	inc    ebx
  4136c3:	jmp    0x413742
  4136c5:	jnp    0x41373b
  4136c7:	aaa    
  4136c8:	cmp    edx,DWORD PTR [eax+eax*4-0x22]
  4136cc:	sahf   
  4136cd:	jg     0x41372a
  4136cf:	adc    dh,BYTE PTR [eax-0x3200f737]
  4136d5:	xchg   ecx,eax
  4136d6:	mov    ebp,0x6a96e1c3
  4136db:	inc    esp
  4136dc:	aas    
  4136dd:	mov    esp,0x91f934cc
  4136e2:	repnz div BYTE PTR [ecx-0x3a]
  4136e6:	push   ebx
  4136e7:	scas   eax,DWORD PTR es:[edi]
  4136e8:	cmp    eax,0xc1745583
  4136ed:	xor    ch,bh
  4136ef:	xchg   ecx,eax
  4136f0:	lea    ebx,[edx-0x233c6290]
  4136f6:	sahf   
  4136f7:	or     al,0xae
  4136f9:	in     al,0x17
  4136fb:	and    BYTE PTR [edx],al
  4136fd:	dec    ebp
  4136fe:	ds mov BYTE PTR ds:[edi+ebp*2+0x7ffe8f9a],al
  413707:	push   ds
  413708:	or     al,0x48
  41370a:	stos   DWORD PTR es:[edi],eax
  41370b:	or     bh,BYTE PTR [esi]
  41370d:	(bad)  
  41370e:	xlat   BYTE PTR ds:[ebx]
  41370f:	daa    
  413710:	inc    edi
  413711:	ins    BYTE PTR es:[edi],dx
  413712:	fsubp  st(7),st
  413714:	out    0xf3,al
  413716:	aad    0xf
  413718:	mov    WORD PTR [ebp-0x5a],gs
  41371b:	cmp    ch,BYTE PTR [ebx+esi*4-0x5135d30e]
  413722:	fcom   st(7)
  413724:	out    0x4d,al
  413726:	test   DWORD PTR [edi+ebx*4+0x7db60e92],eax
  41372d:	clc    
  41372e:	inc    ebx
  41372f:	and    cl,BYTE PTR [ecx+0x4d]
  413732:	xchg   ebx,eax
  413733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413734:	inc    eax
  413735:	jns    0x4136ed
  413737:	in     al,0xb1
  413739:	cvttps2pi mm3,xmm0
  41373c:	pop    ebp
  41373d:	jmp    0x41374b
  41373f:	js     0x413770
  413741:	jnp    0x413732
  413743:	and    BYTE PTR [ecx+0x54],bl
  413746:	sbb    BYTE PTR [ecx],ah
  413748:	sub    BYTE PTR [eax+0x6e],bh
  41374b:	js     0x4136d7
  41374d:	cmc    
  41374e:	pop    esp
  41374f:	cdq    
  413750:	test   dh,bh
  413752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413753:	inc    ebp
  413754:	test   al,0x5e
  413756:	repnz xor BYTE PTR [esi],bh
  413759:	and    al,0xac
  41375b:	cmc    
  41375c:	lods   eax,DWORD PTR ds:[esi]
  41375d:	test   eax,0x7bc41e5d
  413762:	sbb    al,0x38
  413764:	cmp    esp,0xffffffa0
  413767:	shr    BYTE PTR [ecx],0x46
  41376a:	shld   DWORD PTR [ecx-0x7ae99499],ecx,0xe7
  413772:	xchg   ecx,eax
  413773:	xchg   edi,eax
  413774:	ficomp WORD PTR [esi+0x292089b]
  41377a:	or     ebp,ecx
  41377c:	std    
  41377d:	ja     0x4137c5
  41377f:	add    eax,0x8f624969
  413784:	aas    
  413785:	xchg   DWORD PTR [eax-0x39c22c54],ebp
  41378b:	(bad)  
  41378d:	dec    edx
  41378e:	lahf   
  41378f:	fdivr  DWORD PTR [edx+0x68]
  413792:	in     al,dx
  413793:	xchg   ebx,eax
  413794:	pop    edx
  413795:	inc    edi
  413796:	jp     0x413805
  413798:	or     DWORD PTR [eax+0x5c],edx
  41379b:	out    dx,al
  41379c:	jmp    0xf888:0x495ff590
  4137a3:	ins    DWORD PTR es:[edi],dx
  4137a4:	add    al,0xca
  4137a6:	mov    ebp,0x5cdb9308
  4137ab:	pop    ebx
  4137ac:	out    dx,eax
  4137ad:	rcl    ah,cl
  4137af:	jecxz  0x4137ec
  4137b1:	mov    dh,0xb0
  4137b3:	out    dx,al
  4137b4:	push   0xffffff99
  4137b6:	pop    eax
  4137b7:	(bad)  
  4137b8:	sar    BYTE PTR [esp+eax*4-0x74fd2cc8],cl
  4137bf:	lahf   
  4137c0:	shl    DWORD PTR [edi-0x4e],cl
  4137c3:	adc    ebp,esp
  4137c5:	(bad)  
  4137c6:	xchg   ebp,eax
  4137c7:	out    dx,eax
  4137c8:	aad    0x39
  4137ca:	sbb    ebp,DWORD PTR ds:0x7c4d8f8f
  4137d0:	call   0x4db5:0x81903e49
  4137d7:	jle    0x4137ea
  4137d9:	mov    dh,0xf
  4137db:	mov    ebx,0x379ea15f
  4137e0:	jp     0x4137ed
  4137e2:	rol    BYTE PTR [ebx],1
  4137e4:	shl    DWORD PTR [ecx+0x7f06f2c],0x87
  4137eb:	mov    cl,0xca
  4137ed:	xor    eax,0xd71a649e
  4137f2:	lods   al,BYTE PTR ds:[esi]
  4137f3:	jo     0x41385f
  4137f5:	mov    ch,0x3e
  4137f7:	and    DWORD PTR [ebp-0x4e],ebp
  4137fa:	icebp  
  4137fb:	xchg   edi,eax
  4137fc:	or     ah,BYTE PTR [ecx]
  4137fe:	fcmovnb st,st(0)
  413800:	xor    eax,0x94441ac1
  413805:	xchg   ax,ax
  413807:	ins    BYTE PTR es:[edi],dx
  413808:	dec    ebp
  413809:	jmp    0x413797
  41380b:	(bad)  
  41380c:	sub    bl,BYTE PTR [ebx-0xe665916]
  413812:	lea    esp,[ecx]
  413814:	push   es
  413815:	mov    BYTE PTR [edi],bl
  413817:	sub    ebx,DWORD PTR [edi]
  413819:	dec    edx
  41381a:	mov    DWORD PTR [edx+0x6c0f77fe],ecx
  413820:	pop    eax
  413821:	jae    0x41380d
  413823:	add    BYTE PTR [esi],ah
  413825:	test   eax,0x42d6f3f0
  41382a:	inc    ebx
  41382b:	mov    edi,ebx
  41382d:	cmc    
  41382e:	rcl    BYTE PTR ds:0x137b67b6,1
  413834:	into   
  413835:	fwait
  413836:	push   0x10e3394e
  41383b:	add    ebx,DWORD PTR [esi-0xf]
  41383e:	sbb    edx,DWORD PTR [ecx+eiz*8-0x4e]
  413842:	push   ecx
  413843:	cdq    
  413844:	cdq    
  413845:	mov    eax,0x66374bce
  41384a:	fwait
  41384b:	sbb    DWORD PTR [edi-0x74],edx
  41384e:	pop    ds
  41384f:	icebp  
  413850:	out    dx,al
  413851:	xchg   edx,eax
  413852:	loopne 0x4138ad
  413854:	mov    cl,0xf8
  413856:	push   0xfffffff6
  413858:	dec    esp
  413859:	adc    al,BYTE PTR ss:[ebp-0xa]
  41385d:	jae    0x4137e5
  41385f:	push   edx
  413860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413861:	retf   
  413862:	mov    bl,0x41
  413864:	mov    ecx,0x57593ce8
  413869:	sub    edi,DWORD PTR [eax]
  41386b:	jb     0x4138cd
  41386d:	int    0xa6
  41386f:	dec    esi
  413870:	dec    esi
  413871:	pop    esp
  413872:	loopne 0x4138a8
  413874:	shrd   DWORD PTR [edx],esp,0x10
  413878:	mov    ch,0x30
  41387a:	ins    BYTE PTR es:[edi],dx
  41387b:	push   es
  41387c:	js     0x413883
  41387e:	add    BYTE PTR [edi],bl
  413880:	sar    BYTE PTR [esi-0x63],1
  413883:	mov    dl,ah
  413885:	xor    DWORD PTR [edx],edi
  413887:	xchg   esp,eax
  413888:	pop    ebp
  413889:	lock pop ds
  41388b:	push   edi
  41388c:	aaa    
  41388d:	push   edi
  41388e:	(bad)  
  41388f:	pop    ebp
  413890:	test   eax,0x298936a2
  413895:	cmc    
  413896:	(bad)  
  413897:	fimul  WORD PTR [ebx+0x3c78fe11]
  41389d:	outs   dx,BYTE PTR ds:[esi]
  41389e:	add    DWORD PTR [ebp+edx*8+0x221258ef],edx
  4138a5:	stos   BYTE PTR es:[edi],al
  4138a6:	fnstenv [esi-0x352fc385]
  4138ac:	pop    esi
  4138ad:	nop
  4138ae:	fsub   QWORD PTR [ebp*1+0x62b0aa08]
  4138b5:	sub    ah,BYTE PTR [eax-0x5ac204c0]
  4138bb:	lods   eax,DWORD PTR ds:[esi]
  4138bc:	sub    edi,0x6a
  4138bf:	sub    eax,0x3881287c
  4138c4:	pop    edx
  4138c5:	imul   edi,DWORD PTR [edx-0x51],0xee06c7ab
  4138cc:	xlat   BYTE PTR ds:[ebx]
  4138cd:	lahf   
  4138ce:	mov    al,0x99
  4138d0:	jmp    0x6c3a:0xd15530a7
  4138d7:	jmp    0x9f05:0x4e85d4d6
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	imul   ebx
  4138e1:	jl     0x413960
  4138e3:	test   eax,0xd4c14b2a
  4138e8:	and    al,0x2d
  4138ea:	inc    ecx
  4138eb:	jnp    0x413889
  4138ed:	jno    0x413944
  4138ef:	test   eax,0xf3171771
  4138f4:	xchg   ebp,eax
  4138f5:	and    eax,0x5161010f
  4138fa:	mov    dl,0x2f
  4138fc:	mov    ds:0xfd51ab45,al
  413901:	dec    ebp
  413902:	dec    esi
  413903:	xchg   ebx,eax
  413904:	ret    
  413905:	mov    cs,WORD PTR [eax-0x7eda82b6]
  41390b:	dec    ebp
  41390c:	sub    esp,DWORD PTR [ebp+0x5f7705fe]
  413912:	jge    0x4138a3
  413914:	ret    
  413915:	(bad)  
  413916:	adc    edi,DWORD PTR [ebx]
  413918:	and    eax,0xe118a794
  41391d:	sbb    dh,BYTE PTR [edx]
  41391f:	inc    ebx
  413920:	jp     0x41393d
  413922:	dec    ebx
  413923:	out    0xf3,al
  413925:	and    al,0xf4
  413927:	cmp    esi,DWORD PTR [edi+esi*2-0x340b4f99]
  41392e:	xchg   esi,eax
  41392f:	xor    DWORD PTR cs:[edx-0x52b9b3b1],edx
  413936:	lahf   
  413937:	mov    ds:0x65a40973,eax
  41393c:	icebp  
  41393d:	iret   
  41393e:	or     dh,dl
  413940:	push   esp
  413941:	inc    ecx
  413942:	test   al,0xad
  413944:	xchg   edx,eax
  413945:	ja     0x413905
  413947:	inc    edx
  413948:	gs int3 
  41394a:	mov    BYTE PTR [edi-0x22e363f9],bl
  413950:	lds    ecx,FWORD PTR [ebx+0x3d]
  413953:	jae    0x413903
  413955:	xchg   ebx,eax
  413956:	mov    ds:0xf78be60d,al
  41395b:	xor    DWORD PTR [ecx],ecx
  41395d:	int    0xda
  41395f:	test   DWORD PTR [ebx-0x606cd084],edi
  413965:	mov    bl,0x78
  413967:	jmp    0x37c4c683
  41396c:	iret   
  41396d:	ret    0x5a0
  413970:	inc    ebx
  413971:	not    DWORD PTR [edx]
  413973:	mov    cl,0xa8
  413975:	out    0xe0,eax
  413977:	retf   0x39e6
  41397a:	adc    BYTE PTR [ebp+0x6a7fd21e],bh
  413980:	pop    ss
  413981:	rol    BYTE PTR [ebp+0x3f],0x16
  413985:	or     esp,DWORD PTR cs:[edi]
  413988:	pusha  
  413989:	ins    BYTE PTR es:[edi],dx
  41398a:	out    dx,al
  41398b:	dec    eax
  41398c:	sub    cl,al
  41398e:	out    dx,al
  41398f:	test   al,0xd7
  413991:	bound  ebp,QWORD PTR [ebx+0x7c3ddba3]
  413997:	sbb    ebx,ebp
  413999:	aaa    
  41399a:	js     0x413956
  41399c:	mov    BYTE PTR ds:0xc02ee34e,dh
  4139a2:	cld    
  4139a3:	ret    
  4139a4:	xor    bh,BYTE PTR [edx]
  4139a6:	js     0x413941
  4139a8:	cmp    DWORD PTR [esi],eax
  4139aa:	jo     0x413a06
  4139ac:	ins    BYTE PTR es:[edi],dx
  4139ad:	mov    eax,ds:0xa619bb3
  4139b2:	push   esp
  4139b3:	inc    edx
  4139b4:	xchg   esp,eax
  4139b5:	adc    al,0xaa
  4139b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b8:	sbb    ch,0xfa
  4139bb:	and    al,0x4b
  4139bd:	call   DWORD PTR es:[edi+0x1a482169]
  4139c4:	(bad)  
  4139c5:	or     edx,eax
  4139c7:	dec    ebx
  4139c8:	loop   0x4139c6
  4139ca:	(bad)  
  4139cb:	dec    esp
  4139cc:	je     0x413a36
  4139ce:	mov    dl,0x68
  4139d0:	mov    bh,BYTE PTR [ebx-0x57]
  4139d3:	into   
  4139d4:	cwde   
  4139d5:	xchg   ebp,eax
  4139d6:	int3   
  4139d7:	(bad)  [ecx]
  4139d9:	stc    
  4139da:	fstp   DWORD PTR ds:0xc689ff
  4139e0:	inc    ecx
  4139e1:	fdivr  st,st(1)
  4139e3:	inc    eax
  4139e4:	cdq    
  4139e5:	jecxz  0x413a1c
  4139e7:	mov    ecx,0x2b0aab89
  4139ec:	mov    esi,0xcf1c9635
  4139f1:	adc    al,0xaa
  4139f3:	clc    
  4139f4:	mul    al
  4139f6:	inc    ebx
  4139f7:	xor    al,0xd3
  4139f9:	or     BYTE PTR [ecx-0x4],bh
  4139fc:	loopne 0x413a75
  4139fe:	and    bh,cl
  413a00:	mov    dl,0xa4
  413a02:	or     al,0x43
  413a04:	jnp    0x41398c
  413a06:	mov    cl,0x4b
  413a08:	pusha  
  413a09:	mov    ecx,0x674e67d8
  413a0e:	jecxz  0x4139c6
  413a10:	inc    ebp
  413a11:	mov    edi,DWORD PTR [ebx-0x1ef1b850]
  413a17:	repz push esi
  413a19:	sub    DWORD PTR [ebx],edi
  413a1b:	or     al,0x6
  413a1d:	iret   
  413a1e:	push   edi
  413a1f:	pop    ecx
  413a20:	pop    esi
  413a21:	daa    
  413a22:	mov    ebp,0xd2a84caa
  413a27:	popa   
  413a28:	xor    esi,DWORD PTR [ecx+edi*2+0x7243c337]
  413a2f:	out    0x52,al
  413a31:	mov    esp,0x551f540e
  413a36:	add    ch,ch
  413a38:	xchg   ebp,eax
  413a39:	sbb    BYTE PTR [ebp-0x4f],0x7b
  413a3d:	push   esp
  413a3e:	in     eax,0x4
  413a40:	call   0xaa98834d
  413a45:	sbb    DWORD PTR [eax+0x3f],esi
  413a48:	mov    al,ds:0xcea550a9
  413a4d:	sbb    BYTE PTR [esi-0xb],0x9d
  413a51:	fsub   QWORD PTR [eax+0x18]
  413a54:	xchg   esp,eax
  413a55:	dec    eax
  413a56:	xchg   ebx,ebp
  413a58:	cmp    eax,0xde4ea9b1
  413a5d:	js     0x413a96
  413a5f:	mov    esi,0xcbe5dc05
  413a64:	and    eax,0x3cba332a
  413a69:	inc    esp
  413a6a:	hlt    
  413a6b:	mov    al,ds:0xc9409819
  413a70:	pause  
  413a72:	pusha  
  413a73:	scas   eax,DWORD PTR es:[edi]
  413a74:	xchg   ecx,eax
  413a75:	jp     0x413a5d
  413a77:	test   al,0x41
  413a79:	fsub   QWORD PTR [ecx+0x3180e4da]
  413a7f:	shr    DWORD PTR [ecx-0xc],1
  413a82:	xlat   BYTE PTR ds:[ebx]
  413a83:	mov    ah,BYTE PTR [esi-0x490c8e30]
  413a89:	popa   
  413a8a:	sbb    DWORD PTR [esi+0x37],ebp
  413a8d:	je     0x413a49
  413a8f:	dec    eax
  413a90:	pop    es
  413a91:	xchg   ebp,eax
  413a92:	into   
  413a93:	mov    eax,ds:0x49aa90dc
  413a98:	push   0xffffff85
  413a9a:	repnz cmp ch,BYTE PTR gs:[edx-0x59900232]
  413aa2:	popf   
  413aa3:	in     eax,0x3c
  413aa5:	pop    edi
  413aa6:	lods   al,BYTE PTR ds:[esi]
  413aa7:	leave  
  413aa8:	repz enter 0xe15d,0x31
  413aad:	sahf   
  413aae:	pop    ebx
  413aaf:	jge    0x413af7
  413ab1:	sub    al,0x7a
  413ab3:	mov    bh,bl
  413ab5:	sub    al,0x20
  413ab7:	jb     0x413ada
  413ab9:	mov    al,0x7e
  413abc:	bound  edx,QWORD PTR [ebx+ecx*4]
  413abf:	addr16 jmp 0x413b15
  413ac2:	cmp    BYTE PTR [edi+ebx*1+0x74],ch
  413ac6:	mov    eax,ds:0x93bab9ce
  413acb:	cdq    
  413acc:	sbb    dh,BYTE PTR [eax+0x6ee14b3e]
  413ad2:	cmp    al,0x9d
  413ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ad5:	out    dx,eax
  413ad6:	mov    cl,BYTE PTR [ebx]
  413ad8:	sub    dl,BYTE PTR [ebp-0x74da65ae]
  413ade:	push   ecx
  413adf:	leave  
  413ae0:	push   0xfffffff0
  413ae2:	in     al,dx
  413ae3:	retf   
  413ae4:	popf   
  413ae5:	add    ch,bl
  413ae7:	jge    0x413b2d
  413ae9:	cmp    eax,0x2cdd8541
  413aee:	mov    edi,0xa54bd148
  413af3:	push   ebx
  413af4:	cmp    eax,0x40e4fa54
  413af9:	adc    eax,edx
  413afb:	add    bh,BYTE PTR [edx]
  413afd:	gs hlt 
  413aff:	rcr    DWORD PTR [ebp-0xbdff7c6],cl
  413b05:	push   esp
  413b06:	mov    WORD PTR [ebx-0x5bb5623c],es
  413b0c:	repnz aam 0x4c
  413b0f:	jl     0x413b90
  413b11:	push   eax
  413b12:	adc    BYTE PTR [edi+0x79],bl
  413b15:	mov    al,0xb4
  413b17:	dec    ecx
  413b18:	sti    
  413b19:	cdq    
  413b1a:	lods   eax,DWORD PTR ds:[esi]
  413b1b:	mov    bl,0x94
  413b1d:	retf   
  413b1e:	or     bh,BYTE PTR ds:[ecx]
  413b21:	ficomp DWORD PTR [eax]
  413b23:	aas    
  413b24:	dec    esp
  413b25:	push   ss
  413b26:	adc    BYTE PTR [edx+0x15],0x5b
  413b2a:	mov    ecx,0xb456c99c
  413b2f:	push   DWORD PTR [ecx-0x846a776]
  413b35:	fwait
  413b36:	mov    esp,0xe594d03c
  413b3b:	outs   dx,BYTE PTR ds:[esi]
  413b3c:	out    dx,al
  413b3d:	dec    esp
  413b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b3f:	les    edx,FWORD PTR [ebp+0x12]
  413b42:	arpl   WORD PTR [esi-0x4c0a287f],di
  413b48:	test   eax,0x2d680cef
  413b4d:	adc    dl,0x40
  413b50:	cmp    ebp,DWORD PTR [esi-0x79039331]
  413b56:	daa    
  413b57:	js     0x413b8c
  413b59:	mov    edi,es
  413b5b:	adc    eax,0x698e3c1b
  413b60:	mov    ebx,DWORD PTR [ecx]
  413b62:	dec    ecx
  413b63:	ret    
  413b64:	push   edx
  413b65:	int3   
  413b66:	and    eax,0xb4580dba
  413b6b:	mov    ebx,0x1c7d2aa3
  413b70:	iret   
  413b71:	loopne 0x413b1a
  413b73:	mov    bl,0xe
  413b75:	push   ds
  413b76:	repz iret 
  413b78:	pushf  
  413b79:	retf   0x66f9
  413b7c:	sub    bh,BYTE PTR [edi]
  413b7e:	iret   
  413b7f:	sub    DWORD PTR [edi+0x75],esi
  413b82:	adc    BYTE PTR [ecx+ecx*2],ah
  413b85:	lock fmulp st(3),st
  413b88:	cmp    bh,BYTE PTR [edi-0x1a8f78f0]
  413b8e:	mov    ecx,0x8adf2360
  413b93:	call   0xceaf:0xee4b32f4
  413b9a:	mov    eax,0x4389e052
  413b9f:	retf   
  413ba0:	mov    esi,0xe4839bb0
  413ba5:	mov    esi,0x24539e60
  413baa:	shl    DWORD PTR fs:[eax-0x29],1
  413bae:	fist   WORD PTR ds:0x7b62e7a8
  413bb4:	or     al,0xe
  413bb6:	(bad)  
  413bb7:	jmp    0x98e7:0x466657b9
  413bbe:	jge    0x413c10
  413bc0:	rcr    BYTE PTR [ecx],cl
  413bc2:	int    0x6e
  413bc4:	jmp    0x7a5b:0x51195f9d
  413bcb:	mov    bh,0x14
  413bcd:	push   edi
  413bce:	stos   BYTE PTR es:[edi],al
  413bcf:	jae    0x413bab
  413bd1:	sar    al,cl
  413bd3:	cmp    eax,0x595d88b6
  413bd8:	enter  0x69b9,0x8e
  413bdc:	call   0x64f5:0x5e086ac3
  413be3:	add    ebp,DWORD PTR ds:0xe5f47d75
  413be9:	jmp    DWORD PTR [edi-0x44]
  413bec:	fstp   TBYTE PTR [edx+0x62f7c802]
  413bf2:	iret   
  413bf3:	jecxz  0x413b84
  413bf5:	jbe    0x413bf2
  413bf7:	mov    edi,0x2fab50b7
  413bfc:	arpl   WORD PTR [ebx+0x9bfe315],di
  413c02:	adc    BYTE PTR [edx-0x4afffa16],ch
  413c08:	jbe    0x413c3f
  413c0a:	out    dx,al
  413c0b:	int    0xf3
  413c0d:	aas    
  413c0e:	push   ds
  413c0f:	aam    0xe0
  413c11:	repnz shl ah,cl
  413c14:	sbb    al,0x46
  413c16:	(bad)  
  413c17:	jbe    0x413bd6
  413c19:	cmp    ebx,eax
  413c1b:	jns    0x413ba7
  413c1d:	jbe    0x413bf0
  413c1f:	rol    BYTE PTR [eax],cl
  413c21:	sbb    esp,ebp
  413c23:	dec    esi
  413c24:	int    0x4e
  413c26:	jg     0x413c8d
  413c28:	push   edx
  413c29:	push   esp
  413c2a:	sub    al,0xda
  413c2c:	dec    eax
  413c2d:	or     al,BYTE PTR [edx+edx*2+0x47d79c1f]
  413c34:	and    DWORD PTR [edi],0xdfb55685
  413c3a:	or     eax,0xc700a782
  413c3f:	test   DWORD PTR fs:[ecx-0x7e62b2eb],eax
  413c46:	js     0x413bff
  413c48:	or     edx,DWORD PTR [edx]
  413c4a:	inc    eax
  413c4b:	xor    eax,0xdae379eb
  413c50:	ficom  DWORD PTR [edi+0x5c0ad10f]
  413c56:	loope  0x413bf3
  413c58:	mov    eax,esi
  413c5a:	dec    esi
  413c5b:	scas   al,BYTE PTR es:[edi]
  413c5c:	pop    edx
  413c5d:	(bad)  
  413c5e:	dec    ebx
  413c5f:	out    dx,al
  413c60:	std    
  413c61:	sbb    ebx,DWORD PTR [ebx+0x731451c2]
  413c67:	pop    eax
  413c68:	sbb    eax,0xb55141d
  413c6d:	pop    ss
  413c6e:	pop    edx
  413c6f:	jge    0x413c78
  413c71:	aaa    
  413c72:	outs   dx,DWORD PTR ds:[esi]
  413c73:	xchg   BYTE PTR [edx+esi*8],al
  413c76:	enter  0x63d2,0x68
  413c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c7b:	dec    esi
  413c7c:	mov    ah,0x2
  413c7e:	sub    eax,0xbcd07e00
  413c83:	jmp    0x413cf6
  413c85:	push   ebx
  413c86:	cdq    
  413c87:	mov    WORD PTR [ebp-0x36442bd6],ss
  413c8d:	cdq    
  413c8e:	cmp    esi,ebx
  413c90:	shr    DWORD PTR [ebx-0x43],0x28
  413c94:	js     0x413ce3
  413c96:	pop    ebx
  413c97:	imul   eax,edx,0x4f5fb700
  413c9d:	jle    0x413c28
  413c9f:	jno    0x413c86
  413ca1:	punpcklwd mm6,mm4
  413ca4:	ins    DWORD PTR es:[edi],dx
  413ca5:	jo     0x413cf2
  413ca7:	mov    bh,0x48
  413ca9:	dec    esi
  413caa:	xchg   esi,eax
  413cab:	and    edi,DWORD PTR [edx]
  413cad:	mov    cl,0xd4
  413caf:	or     al,0xe
  413cb1:	mov    ebp,0xb00d2db
  413cb6:	clc    
  413cb7:	jmp    0x124fbde
  413cbc:	(bad)  
  413cbd:	add    al,BYTE PTR [ebx-0x3248d9fb]
  413cc3:	loope  0x413cd2
  413cc5:	sub    eax,0x4fe985a9
  413cca:	minps  xmm5,XMMWORD PTR [ebx]
  413ccd:	shl    DWORD PTR [esi+ecx*2],1
  413cd0:	loop   0x413d4e
  413cd2:	std    
  413cd3:	into   
  413cd4:	enter  0x34db,0xc9
  413cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cd9:	jno    0x413c8a
  413cdb:	inc    ebp
  413cdc:	out    dx,al
  413cdd:	sbb    al,0xe6
  413cdf:	cmp    DWORD PTR ss:[edi-0x5b],edi
  413ce3:	sub    eax,0xaeca1797
  413ce8:	jo     0x413cda
  413cea:	fs xchg esi,eax
  413cec:	mov    ds:0xf4a9123e,al
  413cf1:	and    al,0xa
  413cf3:	cwde   
  413cf4:	sbb    edx,esi
  413cf6:	vpunpcklbw ymm4,ymm6,YMMWORD PTR [ecx+0x4ef21aff]
  413cfe:	inc    esi
  413cff:	stc    
  413d00:	les    ebx,FWORD PTR [eax+0x75b1c8d1]
  413d06:	sub    ebx,DWORD PTR [eax+0x10fbc71f]
  413d0c:	dec    esi
  413d0d:	and    ebx,DWORD PTR [ebp-0x299147d9]
  413d13:	mov    DWORD PTR [esi-0x44ef44a3],ecx
  413d19:	jno    0x413cd6
  413d1b:	mov    al,0x81
  413d1d:	inc    esp
  413d1e:	div    DWORD PTR [eax+0x7760999c]
  413d24:	inc    edx
  413d25:	sbb    eax,0xe0ec9615
  413d2a:	test   eax,0xf01295cc
  413d2f:	(bad)  
  413d30:	in     eax,dx
  413d31:	and    ch,cl
  413d33:	xor    DWORD PTR [ecx],eax
  413d35:	sub    dh,BYTE PTR [ebx]
  413d37:	icebp  
  413d38:	retf   
  413d39:	ins    DWORD PTR es:[edi],dx
  413d3a:	test   ecx,edi
  413d3c:	popa   
  413d3d:	and    cl,BYTE PTR [esi]
  413d3f:	enter  0x7e26,0x6e
  413d43:	adc    dl,cl
  413d45:	pop    edi
  413d46:	adc    bl,BYTE PTR [eax+0x41eb23f]
  413d4c:	out    dx,al
  413d4d:	jo     0x413d4a
  413d4f:	fwait
  413d50:	cmp    DWORD PTR [eax],0x5526898d
  413d56:	pop    eax
  413d57:	push   cs
  413d58:	repz mov ds:0xd80fc256,eax
  413d5e:	sub    al,0x5e
  413d60:	sub    al,0x61
  413d62:	int    0xa6
  413d64:	inc    ebp
  413d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d66:	out    0xf3,eax
  413d68:	xlat   BYTE PTR fs:[ebx]
  413d6a:	mov    ecx,DWORD PTR [ebx]
  413d6c:	pop    edi
  413d6d:	into   
  413d6e:	fwait
  413d6f:	adc    eax,0x82abfd53
  413d74:	fdivp  st(0),st
  413d76:	xor    DWORD PTR [ebx],0xdd0a4bf0
  413d7c:	popf   
  413d7d:	std    
  413d7e:	mov    ebp,eax
  413d80:	inc    ecx
  413d81:	mov    ds:0x56d2036,al
  413d86:	mov    cl,0x66
  413d88:	xor    BYTE PTR ds:0x7f9b0c79,ah
  413d8e:	aas    
  413d8f:	repnz out 0x3,al
  413d92:	rcr    al,0xe9
  413d95:	(bad)  
  413d96:	jle    0x413e15
  413d98:	sub    al,0x52
  413d9a:	fldcw  WORD PTR [ebp+0x2c]
  413d9d:	add    al,0x60
  413d9f:	cmp    bl,ah
  413da1:	fmul   DWORD PTR ds:0x579311c1
  413da7:	xchg   esp,eax
  413da8:	mov    DWORD PTR [esi+0xa],0xa959ae28
  413daf:	psubsw mm3,mm4
  413db2:	je     0x413d84
  413db4:	fdiv   st,st(7)
  413db6:	push   0x3de57ef0
  413dbb:	ficom  WORD PTR [ebp-0x2eb4ff4e]
  413dc1:	mov    al,dh
  413dc3:	ficomp DWORD PTR [ebp-0x6]
  413dc6:	dec    ecx
  413dc7:	xchg   DWORD PTR [ebp-0x73],esi
  413dca:	xchg   ebx,eax
  413dcb:	dec    ebp
  413dcc:	pop    ss
  413dcd:	std    
  413dce:	dec    edi
  413dcf:	test   DWORD PTR [ebx+0x72],ecx
  413dd2:	inc    edx
  413dd3:	add    cl,BYTE PTR [ecx]
  413dd5:	mov    dh,0xd6
  413dd7:	mov    BYTE PTR [esi],al
  413dd9:	leave  
  413dda:	and    bl,BYTE PTR [edx+0x16]
  413ddd:	sbb    esi,esi
  413ddf:	jnp    0x413d7b
  413de1:	imul   edi,DWORD PTR [ebp+esi*4-0x118f963c],0x1b
  413de9:	or     eax,0x3696f345
  413dee:	jp     0x413d9b
  413df0:	xor    al,0x9c
  413df2:	jp     0x413dcd
  413df4:	xchg   DWORD PTR [esi],ecx
  413df6:	out    dx,al
  413df7:	cmp    BYTE PTR [eax+ebp*8+0x50],ch
  413dfb:	popa   
  413dfc:	cld    
  413dfd:	outs   dx,BYTE PTR ds:[esi]
  413dfe:	or     eax,0x8503605c
  413e03:	cld    
  413e04:	inc    eax
  413e05:	pop    ebp
  413e06:	adc    BYTE PTR [ebp+0x51],ch
  413e09:	fistp  QWORD PTR [ebp+0xb]
  413e0c:	dec    esp
  413e0d:	stos   BYTE PTR es:[edi],al
  413e0e:	daa    
  413e0f:	sti    
  413e10:	jno    0x413e1e
  413e12:	xor    dl,BYTE PTR [edi+0x67e96475]
  413e18:	aaa    
  413e19:	in     eax,0x74
  413e1b:	mov    al,ds:0xd2bed5c0
  413e20:	adc    al,0x69
  413e22:	ror    DWORD PTR [edi-0x7611e253],cl
  413e28:	mov    ecx,0xde6f3bb6
  413e2d:	js     0x413dec
  413e2f:	arpl   WORD PTR cs:[edi-0x495bae99],di
  413e36:	pushf  
  413e37:	test   ecx,ebx
  413e39:	dec    esp
  413e3a:	and    BYTE PTR [edx-0x4e],al
  413e3d:	mov    ebp,0x939a9a11
  413e42:	mov    eax,0x8cf2536f
  413e47:	ins    DWORD PTR es:[edi],dx
  413e48:	call   0x73a3:0xe576db3
  413e4f:	(bad)  
  413e51:	xchg   edi,eax
  413e52:	fbstp  TBYTE PTR [eax]
  413e54:	loope  0x413ec6
  413e56:	sub    DWORD PTR [edx+0x7edbc2d2],esi
  413e5c:	mov    ch,0x6b
  413e5e:	cmc    
  413e5f:	adc    ah,BYTE PTR [ebx-0x28]
  413e62:	jbe    0x413e3c
  413e64:	lock sub BYTE PTR [ebp+0x5b4aa524],0x7d
  413e6c:	jns    0x413e5b
  413e6e:	mov    DWORD PTR [ebp-0x67],ebx
  413e71:	popf   
  413e72:	jo     0x413ee6
  413e74:	xchg   ecx,eax
  413e75:	push   0x19
  413e77:	inc    ecx
  413e78:	push   edi
  413e79:	inc    bx
  413e7b:	test   BYTE PTR [esi],bl
  413e7d:	adc    al,0x7
  413e7f:	and    bl,0xca
  413e82:	(bad)  
  413e83:	aam    0x8b
  413e85:	(bad)  
  413e86:	jmp    0x702e83b7
  413e8b:	aad    0x10
  413e8d:	cwde   
  413e8e:	lods   al,BYTE PTR ds:[esi]
  413e8f:	adc    al,0x56
  413e91:	rcl    DWORD PTR [ecx+0x1caca436],1
  413e97:	sbb    BYTE PTR [esi+0x56a01f3],ah
  413e9d:	sub    eax,0x2457223d
  413ea2:	pop    edi
  413ea3:	sub    DWORD PTR [esi+0x1d17b997],eax
  413ea9:	mov    dh,0xb
  413eab:	aaa    
  413eac:	jg     0x413ef7
  413eae:	cmp    cl,BYTE PTR [ebx-0x6a]
  413eb1:	dec    ebp
  413eb2:	add    BYTE PTR [eax+0x76cd8313],dl
  413eb8:	je     0x413f07
  413eba:	pop    ebx
  413ebb:	loop   0x413e6b
  413ebd:	sbb    DWORD PTR ds:[ebx+ecx*2-0x1402a3f9],ebp
  413ec5:	inc    esi
  413ec6:	test   BYTE PTR [esi+0x32],dh
  413ec9:	jno    0x413e8d
  413ecb:	popa   
  413ecc:	mov    ch,0x9
  413ece:	(bad)  
  413ecf:	mov    cl,BYTE PTR [edi-0x5f896097]
  413ed5:	xor    BYTE PTR [ecx+edi*2-0x4a],bl
  413ed9:	ins    BYTE PTR es:[edi],dx
  413eda:	sub    bh,BYTE PTR [esi*2+0x5e730257]
  413ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee2:	pop    ss
  413ee3:	js     0x413e6c
  413ee5:	mov    ?,WORD PTR [ebp-0x42]
  413ee8:	pop    ebx
  413ee9:	cmp    ch,BYTE PTR [ecx-0x78]
  413eec:	sbb    al,0xbe
  413eee:	inc    edi
  413eef:	and    BYTE PTR [edi-0x43e556f],ah
  413ef5:	cdq    
  413ef6:	dec    ebp
  413ef7:	pop    ecx
  413ef8:	jge    0x413f0b
  413efa:	mov    ss,WORD PTR [edi+0x3e0db81a]
  413f00:	std    
  413f01:	out    dx,al
  413f02:	sti    
  413f03:	cmc    
  413f04:	add    al,0x90
  413f06:	test   ebp,0xe5364b19
  413f0c:	pop    eax
  413f0d:	or     DWORD PTR ds:0xce878073,0x46021570
  413f17:	cmp    eax,0x5a1ec32
  413f1c:	lock sbb DWORD PTR [edx+0x14],esi
  413f20:	jnp    0x413f54
  413f22:	lods   al,BYTE PTR ds:[esi]
  413f23:	jl     0x413f12
  413f25:	sti    
  413f26:	mov    ah,0x47
  413f28:	(bad)  
  413f29:	out    dx,eax
  413f2a:	push   es
  413f2b:	jo     0x413f05
  413f2d:	sahf   
  413f2e:	(bad)  
  413f2f:	mov    esi,0x295fbb6b
  413f34:	shl    BYTE PTR [eax-0x51],1
  413f37:	bound  ecx,QWORD PTR [eax+0x29bae8e]
  413f3d:	inc    esi
  413f3e:	dec    eax
  413f3f:	pushf  
  413f40:	pop    ebp
  413f41:	fadd   st,st(5)
  413f43:	add    edi,edi
  413f45:	and    ch,BYTE PTR [ecx+0x2769c3f6]
  413f4b:	or     ah,dl
  413f4d:	stos   BYTE PTR es:[edi],al
  413f4e:	xchg   ebx,eax
  413f4f:	xchg   DWORD PTR [ebx+0x65410b24],edi
  413f55:	pop    ss
  413f56:	push   edi
  413f57:	or     al,0x9e
  413f59:	mov    ah,0xb
  413f5b:	jbe    0x413f4b
  413f5d:	gs sub ebp,0xcad7693e
  413f64:	in     eax,0xe7
  413f66:	adc    eax,0x2e7d3b94
  413f6b:	jb     0x413f17
  413f6d:	push   ebx
  413f6e:	jnp    0x413f60
  413f70:	icebp  
  413f71:	icebp  
  413f72:	gs push esi
  413f74:	loop   0x413fec
  413f76:	cli    
  413f77:	gs jecxz 0x413f5e
  413f7a:	fnstcw WORD PTR [edi]
  413f7c:	push   cs
  413f7d:	scas   eax,DWORD PTR es:[edi]
  413f7e:	push   0xffffffe2
  413f80:	xchg   DWORD PTR [ebp+edi*1+0x469ad94c],edi
  413f87:	mov    ?,esp
  413f89:	sbb    al,0x99
  413f8b:	dec    edx
  413f8c:	and    ch,BYTE PTR [ebp+0x78]
  413f8f:	les    esp,FWORD PTR ds:0x62ee22d1
  413f95:	adc    ecx,edi
  413f97:	cld    
  413f98:	rcl    bh,0x8d
  413f9b:	sub    al,0xb9
  413f9d:	sti    
  413f9e:	fmul   DWORD PTR [edi]
  413fa0:	repz adc eax,DWORD PTR [ecx+0x409ce135]
  413fa7:	shr    BYTE PTR [ebx-0x21],cl
  413faa:	sub    eax,0x14e68b92
  413faf:	lahf   
  413fb0:	xchg   esp,eax
  413fb1:	mov    ch,0xd9
  413fb3:	or     ah,BYTE PTR [ebx]
  413fb5:	popf   
  413fb6:	sbb    al,0xb
  413fb8:	bound  ebp,QWORD PTR [ecx]
  413fba:	pop    esi
  413fbb:	mov    ebp,0x1370df99
  413fc0:	loope  0x413f46
  413fc2:	shl    BYTE PTR [ebx-0x32],cl
  413fc5:	xchg   ebp,eax
  413fc6:	jl     0x414004
  413fc8:	xchg   ebx,eax
  413fc9:	test   eax,0x50c0e920
  413fce:	pop    ebx
  413fcf:	pop    ebx
  413fd0:	mov    ds:0x65143a3f,eax
  413fd5:	lahf   
  413fd6:	mov    ebx,edi
  413fd8:	mov    fs,WORD PTR [eax-0x1a]
  413fdb:	inc    esp
  413fdc:	adc    DWORD PTR [eax+ebp*2-0x36],0x9bf9b2b6
  413fe4:	and    cl,ch
  413fe6:	push   ebx
  413fe7:	pop    ss
  413fe8:	sbb    eax,ebx
  413fea:	fisttp QWORD PTR [ecx]
  413fec:	cwde   
  413fed:	mul    BYTE PTR [edx-0x58141600]
  413ff3:	out    0x2f,eax
  413ff5:	(bad)  
  413ff6:	std    
  413ff7:	hlt    
  413ff8:	jo     0x413ff5
  413ffa:	jno    0x413fd9
  413ffc:	inc    ebx
  413ffd:	and    al,0x85
  413fff:	xlat   BYTE PTR ds:[ebx]
  414000:	sub    al,BYTE PTR [ebx-0x4b]
  414003:	inc    ebx
  414004:	mov    ah,0xaa
  414006:	pop    ebx
  414007:	nop
  414008:	cmc    
  414009:	push   es
  41400a:	loope  0x414078
  41400c:	cmp    ah,ch
  41400e:	sub    eax,0xf2674b65
  414013:	sbb    eax,0xc45c42d6
  414018:	cld    
  414019:	scas   eax,DWORD PTR es:[edi]
  41401a:	cmp    eax,0x31563ad5
  41401f:	push   esi
  414020:	loopne 0x414003
  414022:	push   es
  414023:	and    bh,BYTE PTR [edx+ebp*2+0x2]
  414027:	xor    cl,BYTE PTR [eax]
  414029:	fistp  QWORD PTR [edi+0x6b]
  41402c:	int    0xea
  41402e:	xor    esp,DWORD PTR [edx+0x77309e6c]
  414034:	inc    eax
  414035:	mov    esp,DWORD PTR [ebx-0x27]
  414038:	test   DWORD PTR [esi+0x675f44e],ecx
  41403e:	repz sbb DWORD PTR [edi+0x56],ebp
  414042:	mov    ebx,0x7ec162f4
  414047:	sub    DWORD PTR [eax-0x21e2c277],esi
  41404d:	(bad)  
  41404f:	test   eax,0xe3e8a285
  414054:	jb     0x413ff0
  414056:	ss lahf 
  414058:	call   0xffcebf72
  41405d:	pop    ebp
  41405e:	cmc    
  41405f:	das    
  414060:	int    0xd8
  414062:	add    al,0xe1
  414064:	adc    eax,esi
  414066:	scas   al,BYTE PTR es:[edi]
  414067:	xor    BYTE PTR [edi+eiz*2],bh
  41406a:	cmp    DWORD PTR [eax],esi
  41406c:	js     0x41400d
  41406e:	or     DWORD PTR [eax],ecx
  414070:	cmp    al,BYTE PTR [ebp-0x309399d0]
  414076:	push   0xf7ad43b9
  41407b:	pop    edi
  41407c:	dec    DWORD PTR [edx]
  41407e:	mov    esi,esi
  414080:	add    eax,DWORD PTR [ecx+ebx*1-0x7708e5ae]
  414087:	push   es
  414088:	mov    BYTE PTR [ebx-0x2a],0x5c
  41408c:	mov    DWORD PTR [ecx+0x37],ecx
  41408f:	jbe    0x4140b5
  414091:	xor    eax,0x2226b9e3
  414096:	sub    BYTE PTR [esi+0x777197e3],0x70
  41409d:	xlat   BYTE PTR ds:[ebx]
  41409e:	std    
  41409f:	pusha  
  4140a0:	je     0x414022
  4140a2:	call   0xd414:0x30987db2
  4140a9:	pop    ecx
  4140aa:	mov    bl,BYTE PTR [eax-0x7cda8c70]
  4140b0:	fsubrp st(7),st
  4140b2:	repz daa 
  4140b4:	inc    esi
  4140b5:	and    BYTE PTR [esi-0x6f9afe0f],bh
  4140bb:	lea    eax,[edx-0x3b]
  4140be:	mov    ch,BYTE PTR [ecx-0x3b412dc3]
  4140c4:	pop    ebx
  4140c5:	icebp  
  4140c6:	dec    edi
  4140c7:	jns    0x414135
  4140c9:	adc    eax,0xcd767a1a
  4140ce:	outs   dx,BYTE PTR ds:[esi]
  4140cf:	popf   
  4140d0:	mov    ch,0x7c
  4140d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d3:	jecxz  0x4140b9
  4140d5:	xor    esi,0x41
  4140d8:	test   eax,0xf2176d71
  4140dd:	push   cs
  4140de:	cmp    eax,0x32353207
  4140e3:	ja     0x414067
  4140e5:	cdq    
  4140e6:	jmp    0xea98:0xb7be0558
  4140ed:	(bad)  
  4140ee:	js     0x414093
  4140f0:	fild   WORD PTR [eax-0x5]
  4140f3:	inc    esp
  4140f4:	mov    eax,ds:0xb44ae692
  4140f9:	ret    
  4140fa:	xor    dh,BYTE PTR [edi+0x6b]
  4140fd:	adc    edx,edx
  4140ff:	and    esp,esi
  414101:	ret    0x5ab9
  414104:	xchg   esp,eax
  414105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414106:	(bad)  
  414108:	in     eax,0xfb
  41410a:	mov    eax,0xa7b1786f
  41410f:	jnp    0x4140e2
  414111:	(bad)  
  414112:	in     al,dx
  414113:	mov    BYTE PTR [esi],dh
  414115:	in     eax,dx
  414116:	sub    dh,BYTE PTR [edx+0x3252ecad]
  41411c:	lea    ecx,[ecx+0x7e502da4]
  414122:	jle    0x4140be
  414124:	adc    DWORD PTR [ebx+0x10ca89d0],edi
  41412a:	rcr    DWORD PTR [ebp-0x7a16e562],1
  414130:	dec    ecx
  414131:	push   edx
  414132:	(bad)  [eax+edx*8+0x1b3c1d35]
  414139:	inc    esp
  41413a:	imul   ebx,DWORD PTR ds:0xc38d1f9,0x34684e57
  414144:	mov    ebp,0xe4af9a9d
  414149:	(bad)  
  41414a:	lds    ecx,FWORD PTR [ebx]
  41414c:	lods   al,BYTE PTR ds:[esi]
  41414d:	mov    ds:0x181d3f02,al
  414152:	mov    eax,ebp
  414154:	cs adc al,0xe1
  414157:	arpl   di,cx
  414159:	out    dx,al
  41415a:	cmp    cl,0x3a
  41415d:	cmc    
  41415e:	push   0x64a32ab7
  414163:	adc    al,0x7a
  414165:	cwde   
  414166:	adc    al,0xfb
  414168:	xchg   edi,eax
  414169:	in     al,0x44
  41416b:	sbb    BYTE PTR [esi-0x29],0x43
  41416f:	add    edi,DWORD PTR [ecx-0x33]
  414172:	sub    eax,0xdafaaecb
  414177:	sbb    cl,BYTE PTR [ebx-0x797b6d64]
  41417d:	fcomip st,st(6)
  41417f:	inc    esi
  414180:	add    BYTE PTR [edx-0x7c],al
  414183:	pop    eax
  414184:	mov    bl,0x9d
  414186:	stc    
  414187:	in     al,0xb4
  414189:	cmp    ebx,DWORD PTR [esi]
  41418b:	(bad)  
  41418c:	(bad)  
  41418d:	jl     0x41420c
  41418f:	sub    al,bl
  414191:	mov    bh,0x1e
  414193:	adc    bh,BYTE PTR [esi-0x1fb41b67]
  414199:	dec    ecx
  41419a:	push   es
  41419b:	(bad)  
  41419c:	cdq    
  41419d:	je     0x4141ff
  41419f:	retf   
  4141a0:	popf   
  4141a1:	jb     0x41421e
  4141a3:	cli    
  4141a4:	test   DWORD PTR [ebx+0x75],edx
  4141a7:	pop    edi
  4141a8:	aam    0x15
  4141aa:	dec    edi
  4141ab:	adc    BYTE PTR [ebp-0x7d],bh
  4141ae:	push   edx
  4141af:	addr16 fdiv st,st(6)
  4141b2:	mov    DWORD PTR [edi],eax
  4141b4:	test   eax,0xe8c84fd5
  4141b9:	pop    edx
  4141ba:	clc    
  4141bb:	test   BYTE PTR [esp+esi*8-0x42],dh
  4141bf:	inc    esi
  4141c0:	cwde   
  4141c1:	iret   
  4141c2:	in     al,0x43
  4141c4:	(bad)  
  4141c5:	and    eax,0x180cc34d
  4141ca:	mov    BYTE PTR [ebp+0x5],bl
  4141cd:	sbb    cl,ch
  4141cf:	sub    BYTE PTR [edx-0x1df1f970],dl
  4141d5:	aam    0xe3
  4141d7:	mov    ds:0x8ff4b95a,al
  4141dc:	dec    esi
  4141dd:	mov    WORD PTR [edx],?
  4141df:	bound  ebx,QWORD PTR [ecx-0x3]
  4141e2:	sbb    DWORD PTR [esi-0x75],esi
  4141e5:	das    
  4141e6:	aad    0x20
  4141e8:	xor    eax,0xa25df85e
  4141ed:	push   es
  4141ee:	add    BYTE PTR [edx-0x4f1d0a46],bh
  4141f4:	mov    ah,0x33
  4141f6:	adc    eax,0xdb5e3587
  4141fb:	pop    ebx
  4141fc:	pop    edx
  4141fd:	inc    eax
  4141fe:	jnp    0x414230
  414200:	dec    edx
  414201:	sub    DWORD PTR [edx],ebx
  414203:	adc    eax,0xfa9fe940
  414208:	leave  
  414209:	sbb    esp,DWORD PTR [ebx+0x5e]
  41420c:	test   al,0x9a
  41420e:	cli    
  41420f:	stos   DWORD PTR es:[edi],eax
  414210:	and    bl,BYTE PTR [eax+0x6]
  414213:	into   
  414214:	inc    ecx
  414215:	je     0x41423d
  414217:	cmp    edi,DWORD PTR [ecx-0x6540b01b]
  41421d:	lds    ebp,FWORD PTR [ebx+0x6b]
  414220:	add    BYTE PTR [eax-0x5d1bd0e2],0x6f
  414227:	fwait
  414228:	scas   al,BYTE PTR es:[edi]
  414229:	in     eax,dx
  41422a:	adc    al,0x4e
  41422c:	(bad)  
  41422d:	(bad)  
  41422e:	hlt    
  41422f:	xlat   BYTE PTR ds:[ebx]
  414230:	and    DWORD PTR [esi-0x58],edi
  414233:	call   0x2f67:0x7b04b0d
  41423a:	loope  0x4142af
  41423c:	lahf   
  41423d:	out    dx,al
  41423e:	jnp    0x4141f3
  414240:	push   ebx
  414241:	xchg   esp,eax
  414242:	cmp    al,0x2e
  414244:	js     0x41425d
  414246:	jle    0x414299
  414248:	in     al,dx
  414249:	xor    ch,dl
  41424b:	(bad)  
  41424c:	push   ebx
  41424d:	inc    ebx
  41424e:	test   DWORD PTR [esi-0x198872d],ebp
  414254:	add    cl,BYTE PTR [esi+0x612e5010]
  41425a:	xchg   esp,eax
  41425b:	pop    ss
  41425c:	push   esp
  41425d:	popa   
  41425e:	cmp    dh,BYTE PTR [edi+0x6f]
  414261:	jecxz  0x414238
  414263:	xchg   ebx,eax
  414264:	adc    ecx,eax
  414266:	fstp   DWORD PTR [ebx-0x1c]
  414269:	rol    al,cl
  41426b:	ficom  WORD PTR [eax]
  41426d:	iret   
  41426e:	xchg   edi,eax
  41426f:	(bad)  
  414270:	addr16 aad 0x2f
  414273:	js     0x41426d
  414275:	inc    eax
  414276:	repnz out 0xf9,al
  414279:	inc    esi
  41427a:	mov    ch,0xc6
  41427c:	popa   
  41427d:	aad    0x7c
  41427f:	sub    DWORD PTR [edi+0x4fea9411],esp
  414285:	mov    bl,0x7e
  414287:	cmp    al,0x57
  414289:	sbb    cl,BYTE PTR [esp+esi*8+0x16677942]
  414290:	cld    
  414291:	xor    eax,0x540afd8d
  414296:	add    dl,BYTE PTR [esp+esi*1]
  414299:	jle    0x4142c5
  41429b:	xchg   ecx,eax
  41429c:	mov    ch,BYTE PTR [edx-0x7d]
  41429f:	mov    ah,BYTE PTR [edi+0x44]
  4142a2:	and    al,BYTE PTR [ecx+0x6b]
  4142a5:	out    0xb3,al
  4142a7:	sti    
  4142a8:	pop    ebp
  4142a9:	dec    bp
  4142ab:	cmp    DWORD PTR ds:0x93fdbe02,0x65
  4142b2:	mov    ch,0x1e
  4142b4:	adc    al,0xcf
  4142b6:	jbe    0x41428b
  4142b8:	cld    
  4142b9:	xor    BYTE PTR [esi],cl
  4142bb:	adc    DWORD PTR [esi+0x3228222e],esp
  4142c1:	outs   dx,DWORD PTR ds:[esi]
  4142c2:	push   edi
  4142c3:	mov    bl,0x3e
  4142c5:	repz or edi,ecx
  4142c8:	jo     0x41430d
  4142ca:	pushf  
  4142cb:	pop    es
  4142cc:	inc    ecx
  4142cd:	mov    al,ds:0x3c633422
  4142d2:	mov    eax,ds:0x3e12a691
  4142d7:	xor    cl,BYTE PTR [esp+ecx*2+0x6db82d49]
  4142de:	cmp    eax,0x20f769d9
  4142e3:	jmp    0x41430e
  4142e5:	(bad)  
  4142e6:	mov    BYTE PTR [esi+0x66b3eb71],al
  4142ec:	lds    edi,FWORD PTR [esi+0x29e46811]
  4142f2:	push   0xfffffffc
  4142f4:	adc    ah,BYTE PTR ds:0x3b0c35f3
  4142fa:	pop    ebp
  4142fb:	sbb    ah,BYTE PTR [edx-0x32]
  4142fe:	loopne 0x4142a1
  414300:	pop    ecx
  414301:	sbb    DWORD PTR [eax-0x4b],esp
  414304:	js     0x414373
  414306:	jb     0x4142f9
  414308:	mov    ebx,0xed11e42d
  41430d:	and    BYTE PTR ds:0xed661c7,ah
  414313:	cmp    dh,BYTE PTR [ebp+0x69]
  414316:	jbe    0x414328
  414318:	jne    0x4142e3
  41431a:	push   ebx
  41431b:	shl    BYTE PTR [edx],1
  41431d:	jge    0x4142f1
  41431f:	into   
  414320:	outs   dx,DWORD PTR ds:[esi]
  414321:	test   BYTE PTR [esp+ecx*8],0x70
  414325:	add    DWORD PTR [esi],eax
  414327:	xor    al,0x4
  414329:	mov    al,ds:0x927912a4
  41432e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41432f:	push   ecx
  414330:	in     eax,dx
  414331:	mov    ebp,0x3c8e365f
  414336:	xor    edi,ebp
  414338:	in     eax,dx
  414339:	xchg   ebx,ebp
  41433b:	cli    
  41433c:	fidiv  WORD PTR [ebp-0x1b]
  41433f:	(bad)  
  414340:	lock jmp 0x41439d
  414343:	(bad)  
  414344:	in     al,0x5a
  414346:	sbb    eax,ebp
  414348:	xlat   BYTE PTR ds:[ebx]
  414349:	pop    ebx
  41434a:	lds    esi,FWORD PTR [esi-0x57]
  41434d:	mov    edi,0x40f20a40
  414352:	or     eax,0x73057dce
  414357:	and    edi,DWORD PTR [eax+0x7bd682a0]
  41435d:	mov    cs,WORD PTR [ecx-0x2c]
  414360:	fsubr  QWORD PTR ds:0xb4d5b8f8
  414366:	leave  
  414367:	push   eax
  414368:	cmp    ch,BYTE PTR [esi+ebp*4+0x31f12a71]
  41436f:	mov    al,0x22
  414371:	cwde   
  414372:	mov    ah,0xa4
  414374:	add    BYTE PTR ss:[ebp-0x17],dl
  414378:	outs   dx,DWORD PTR ds:[esi]
  414379:	aam    0x80
  41437b:	cmp    BYTE PTR [eax-0x14dc1e5],0x64
  414382:	call   0xe3f7:0xb4c73e0f
  414389:	xor    DWORD PTR [esi-0x1383a0b8],esp
  41438f:	in     al,dx
  414390:	push   cs
  414391:	loop   0x414334
  414393:	pusha  
  414394:	jo     0x4143ec
  414396:	stos   DWORD PTR es:[edi],eax
  414397:	fnstcw WORD PTR [edi]
  414399:	and    ch,BYTE PTR [ecx]
  41439b:	mov    fs,WORD PTR ds:0xee874015
  4143a1:	add    ecx,DWORD PTR [eax]
  4143a3:	mov    eax,0xb6f34b96
  4143a8:	sbb    dl,ch
  4143aa:	nop
  4143ab:	add    DWORD PTR [edx-0x62],0x73
  4143af:	sub    DWORD PTR [ebx],0x6923998e
  4143b5:	cmp    bh,0xfd
  4143b8:	stc    
  4143b9:	fistp  QWORD PTR [edx+0x6c7558b]
  4143bf:	dec    DWORD PTR [edi]
  4143c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c2:	push   0xe665f9a7
  4143c7:	test   esi,edx
  4143c9:	cs push ebx
  4143cb:	lock mov ebx,ebp
  4143ce:	pop    ebp
  4143cf:	clc    
  4143d0:	ins    BYTE PTR es:[edi],dx
  4143d1:	pop    ds
  4143d2:	out    0x22,al
  4143d4:	xchg   BYTE PTR [edx],bh
  4143d6:	xchg   esp,eax
  4143d7:	xchg   ebp,eax
  4143d8:	repz neg DWORD PTR [eax+0x53]
  4143dc:	inc    eax
  4143dd:	adc    ah,bh
  4143df:	xor    al,bh
  4143e1:	adc    eax,0x1a6aab44
  4143e6:	sub    bh,dl
  4143e8:	std    
  4143e9:	dec    ebx
  4143ea:	pop    ds
  4143eb:	mov    ah,0xac
  4143ed:	and    BYTE PTR [esi-0x2c9e39c6],dl
  4143f3:	mov    ebp,0xb6f421e0
  4143f8:	jmp    0x4143ff
  4143fa:	ret    0x196d
  4143fd:	jmp    0xe0b1b044
  414402:	mov    ch,0xaa
  414404:	shl    dl,1
  414406:	inc    ecx
  414407:	sahf   
  414408:	cs xor al,0x54
  41440b:	sub    ch,BYTE PTR ss:[ebx-0x14]
  41440f:	(bad)  
  414410:	jne    0x414450
  414412:	add    edi,DWORD PTR [ebp+0x64]
  414415:	pop    eax
  414416:	dec    esi
  414417:	xor    DWORD PTR [esi+0x6f567865],edi
  41441d:	out    0x75,eax
  41441f:	pop    ss
  414420:	mov    eax,DWORD PTR [edx]
  414422:	lds    ecx,FWORD PTR [ebx+esi*1]
  414425:	jnp    0x41447c
  414427:	mov    eax,ds:0x103db086
  41442c:	pop    edx
  41442d:	or     eax,0xb8740694
  414432:	xchg   BYTE PTR [edx],dh
  414434:	pop    ss
  414435:	mov    al,0x27
  414437:	cli    
  414438:	inc    ebx
  414439:	push   ebp
  41443a:	rcr    DWORD PTR [ecx],cl
  41443c:	popf   
  41443d:	pop    DWORD PTR [ecx]
  41443f:	rcl    edx,1
  414441:	pop    ds
  414442:	mov    ebx,0x35f5d152
  414447:	or     eax,0xc374bd65
  41444c:	inc    ebp
  41444d:	and    bl,ah
  41444f:	mov    al,0xd1
  414451:	or     al,0x39
  414453:	mov    esp,DWORD PTR [edi]
  414455:	mov    esi,0x5248e6d6
  41445a:	pop    ss
  41445b:	(bad)  
  41445c:	mov    edx,0x4ab8a3a0
  414461:	iret   
  414462:	jno    0x414496
  414464:	xchg   esp,eax
  414465:	add    al,0x6b
  414467:	jno    0x4144a4
  414469:	cmp    DWORD PTR [edx-0x4d9d5a62],edx
  41446f:	cmp    edi,esi
  414471:	sahf   
  414472:	leave  
  414473:	cdq    
  414474:	sbb    DWORD PTR [eax+ebx*2-0xb7d3ad2],eax
  41447b:	shr    DWORD PTR [edx+edx*1],cl
  41447e:	enter  0x70b1,0x7b
  414482:	push   ds
  414483:	and    eax,0xae61fbf5
  414488:	jmp    0x61df:0x2ea1e9c
  41448f:	mov    DWORD PTR [ebx+0x53],ecx
  414492:	retf   0xf771
  414495:	inc    ecx
  414496:	jmp    0x86a19e4d
  41449b:	popf   
  41449c:	hlt    
  41449d:	mov    DWORD PTR [ecx+0x6b33c3bc],ecx
  4144a3:	faddp  st(1),st
  4144a5:	push   ecx
  4144a6:	and    bh,ah
  4144a8:	cmp    bl,BYTE PTR [bx+di+0x299d]
  4144ad:	rcl    ch,cl
  4144af:	pop    ebp
  4144b0:	dec    eax
  4144b1:	ds cli 
  4144b3:	dec    eax
  4144b4:	retf   
  4144b5:	push   esp
  4144b6:	lahf   
  4144b7:	(bad)  
  4144b8:	std    
  4144b9:	dec    edx
  4144ba:	jl     0x4144a4
  4144bc:	and    BYTE PTR [esi],bh
  4144be:	add    ebx,DWORD PTR [edx-0x3f]
  4144c1:	xchg   ebp,eax
  4144c2:	imul   DWORD PTR [ebx+0x7526c80d]
  4144c8:	jnp    0x41453d
  4144ca:	es inc edx
  4144cc:	leave  
  4144cd:	and    DWORD PTR [ebx-0x39],esi
  4144d0:	jno    0x4144e4
  4144d2:	mov    DWORD PTR [edx-0x593d1d1],edx
  4144d8:	mov    ebp,0x20db7626
  4144dd:	not    BYTE PTR [edi-0x47f87e62]
  4144e3:	iret   
  4144e4:	ds dec ebx
  4144e6:	pop    eax
  4144e7:	into   
  4144e8:	pop    es
  4144e9:	or     eax,edi
  4144eb:	xchg   esi,eax
  4144ec:	mov    BYTE PTR [esi+0x718fc755],bh
  4144f2:	pop    ecx
  4144f3:	jecxz  0x414531
  4144f5:	fcmovnbe st,st(4)
  4144f7:	rcr    DWORD PTR [ebx-0xbaa4288],cl
  4144fd:	in     al,0xb1
  4144ff:	inc    eax
  414500:	js     0x4144c3
  414502:	xchg   edx,eax
  414503:	jo     0x414521
  414505:	jmp    0x41450a
  414507:	mov    ah,0xb7
  414509:	jb     0x4144b9
  41450b:	(bad)  [eax+0x39f2cbe0]
  414511:	jecxz  0x4144eb
  414513:	dec    eax
  414515:	add    BYTE PTR [ebx+0x5b],ah
  414518:	cmp    bl,bl
  41451a:	jae    0x41452a
  41451c:	cmp    BYTE PTR [esi+0x7642fbf6],al
  414522:	fild   DWORD PTR [edi-0x1910ced6]
  414528:	xchg   esp,eax
  414529:	not    BYTE PTR [esi+eiz*4-0x49]
  41452d:	mov    eax,0xd643f940
  414532:	scas   eax,DWORD PTR es:[edi]
  414533:	inc    BYTE PTR [edx]
  414535:	je     0x4144c2
  414537:	jle    0x4144bc
  414539:	mov    esp,DWORD PTR [ecx-0x5ab40256]
  41453f:	jmp    0x184f:0xc5642385
  414546:	fldl2e 
  414548:	out    0x66,eax
  41454a:	stos   BYTE PTR es:[edi],al
  41454b:	test   BYTE PTR ds:0xb614b433,ah
  414551:	jno    0x414515
  414553:	mov    BYTE PTR [edi+0x6f632a5f],al
  414559:	mov    ebx,0x641035d6
  41455e:	inc    ebx
  41455f:	cli    
  414560:	ror    ebp,cl
  414562:	lods   eax,DWORD PTR ds:[esi]
  414563:	adc    bl,ah
  414565:	clc    
  414566:	cmp    al,0x66
  414568:	sbb    eax,0xbbc6cf00
  41456d:	rol    DWORD PTR [ecx-0x2e],0xe0
  414571:	addr16 xchg ebp,ebx
  414574:	adc    BYTE PTR [ecx+0x5e],ch
  414577:	inc    esi
  414578:	js     0x414597
  41457a:	sahf   
  41457b:	imul   edx,DWORD PTR [esi+0x72],0xffffff91
  41457f:	sub    eax,0x1ace9893
  414584:	imul   esp,DWORD PTR [ecx],0x7f232ac3
  41458a:	mov    al,BYTE PTR [eax-0x270e17c7]
  414590:	aaa    
  414591:	iret   
  414592:	mov    dl,0xb3
  414594:	push   DWORD PTR [esi]
  414596:	and    ecx,DWORD PTR [eax+eax*8]
  414599:	retf   
  41459a:	icebp  
  41459b:	push   ecx
  41459c:	in     al,dx
  41459d:	(bad)  
  41459f:	jg     0x414544
  4145a1:	scas   eax,DWORD PTR es:[edi]
  4145a2:	rcl    ah,cl
  4145a4:	xor    eax,0xe179fa13
  4145a9:	jecxz  0x414591
  4145ab:	fcmovnbe st,st(2)
  4145ad:	ret    0x61fd
  4145b0:	sbb    ch,BYTE PTR [ebx+0x12]
  4145b3:	stos   DWORD PTR es:[edi],eax
  4145b4:	jg     0x414635
  4145b6:	call   0x21f9444c
  4145bb:	jno    0x41454b
  4145bd:	data16 rol BYTE PTR [esi-0x4],0xd0
  4145c2:	data16 (bad) 
  4145c4:	popf   
  4145c5:	and    BYTE PTR [esi],al
  4145c7:	inc    ebp
  4145c8:	lea    edi,[ebx]
  4145ca:	cmc    
  4145cb:	imul   ecx,esi,0xffffffc0
  4145ce:	rol    eax,1
  4145d0:	or     BYTE PTR [ecx-0x1f29357],0x54
  4145d7:	jno    0x414576
  4145d9:	jno    0x4145f4
  4145db:	cmp    BYTE PTR [esi],bl
  4145dd:	retf   0x662a
  4145e0:	(bad)  [esi+0x60]
  4145e3:	test   DWORD PTR [edx],0xbae369eb
  4145e9:	jge    0x41461a
  4145eb:	xor    eax,0x573e599f
  4145f0:	and    DWORD PTR [ebx+0x5950f82e],eax
  4145f6:	push   cs
  4145f7:	retf   
  4145f8:	pusha  
  4145f9:	mov    bh,0xdc
  4145fb:	mov    ebx,0x9e333003
  414600:	jge    0x414645
  414602:	int3   
  414603:	outs   dx,DWORD PTR ds:[esi]
  414604:	jle    0x414635
  414606:	ret    0xbeba
  414609:	popf   
  41460a:	mov    WORD PTR [edx-0x1cb285ac],ds
  414610:	sub    dh,0x9e
  414613:	xlat   BYTE PTR ds:[ebx]
  414614:	int3   
  414615:	pop    ebp
  414616:	push   esi
  414617:	mov    ebx,0x797c9ff6
  41461c:	mov    bl,0x3d
  41461e:	(bad)  
  41461f:	lahf   
  414620:	enter  0xc2a,0x95
  414624:	add    ebx,DWORD PTR [ebx]
  414626:	xchg   ebx,eax
  414627:	pop    ebx
  414628:	or     ecx,DWORD PTR [esi]
  41462a:	xlat   BYTE PTR ds:[ebx]
  41462b:	in     al,dx
  41462c:	pop    esi
  41462d:	in     al,dx
  41462e:	out    dx,al
  41462f:	mov    esi,0x4ad50987
  414634:	ficom  DWORD PTR [edx+0x4e]
  414637:	inc    ecx
  414638:	mov    ah,0x90
  41463a:	push   edi
  41463b:	aad    0x5d
  41463d:	push   cs
  41463e:	pop    ecx
  41463f:	pop    esp
  414640:	shl    DWORD PTR [edi+ecx*2],1
  414643:	lods   al,BYTE PTR ds:[esi]
  414644:	lods   al,BYTE PTR ds:[esi]
  414645:	popa   
  414646:	inc    esp
  414647:	push   0xffffffb7
  414649:	push   esi
  41464a:	test   BYTE PTR [edx+0x5767fe8b],ah
  414650:	(bad)  
  414651:	(bad)  
  414652:	out    dx,al
  414653:	cmc    
  414654:	in     al,0x76
  414656:	xor    BYTE PTR [eax],bl
  414658:	or     bl,BYTE PTR [eax]
  41465a:	imul   esi,DWORD PTR [ecx-0x2dddec5c],0x68
  414661:	call   0x60f3:0x4bbd0e5f
  414668:	and    BYTE PTR [ebx+0xf],bh
  41466b:	mov    DWORD PTR [edi+0x19],esi
  41466e:	aad    0xd2
  414670:	les    ebx,FWORD PTR [edx+esi*1-0x37]
  414674:	adc    DWORD PTR [edx+edi*8-0x7e2461db],ecx
  41467b:	pop    eax
  41467c:	retf   
  41467d:	mov    ds:0x140541bd,eax
  414682:	mov    ds:0x766e43df,al
  414687:	and    al,0xa
  414689:	xor    BYTE PTR [esi],0x8e
  41468c:	cdq    
  41468d:	sub    BYTE PTR [edx-0x18],dl
  414690:	jmp    0x75ce70e0
  414695:	inc    esi
  414696:	pop    ebp
  414697:	sub    al,0x77
  414699:	push   0xad890e22
  41469e:	fnstenv [esi]
  4146a0:	add    dh,BYTE PTR [edi+0x26]
  4146a3:	push   ebp
  4146a4:	popa   
  4146a5:	mov    al,ds:0x87c213d8
  4146aa:	or     eax,0xd5d8e0e2
  4146af:	imul   edx,eax,0xffffff99
  4146b2:	or     cl,BYTE PTR ds:0xb91776e5
  4146b8:	push   ds
  4146b9:	outs   dx,DWORD PTR ds:[esi]
  4146ba:	lods   eax,DWORD PTR ds:[esi]
  4146bb:	mov    cs,WORD PTR [ebx+0x5d]
  4146be:	imul   edi,ebp,0xffffffa2
  4146c1:	cmp    ah,BYTE PTR [eax+0xcc52847]
  4146c7:	shl    DWORD PTR [edx],1
  4146c9:	add    BYTE PTR fs:[edi],cl
  4146cc:	loop   0x4146f6
  4146ce:	or     cl,ch
  4146d0:	pop    ss
  4146d1:	sub    DWORD PTR [eax+0x47595aba],edi
  4146d7:	outs   dx,BYTE PTR ds:[esi]
  4146d8:	and    dl,BYTE PTR [eax+eax*8-0x75]
  4146dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146dd:	sub    DWORD PTR [esi+0x1d11924e],ebx
  4146e3:	ins    BYTE PTR es:[edi],dx
  4146e4:	sub    ebx,DWORD PTR [eax+0x3cada9ba]
  4146ea:	in     eax,dx
  4146eb:	cwde   
  4146ec:	clc    
  4146ed:	cmp    eax,0x6e2a4983
  4146f2:	inc    ebx
  4146f3:	jmp    0x4d889223
  4146f8:	cmp    dl,cl
  4146fa:	stc    
  4146fb:	ficom  WORD PTR [ecx+0x3]
  4146fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146ff:	mov    edi,0x1d3ca31d
  414704:	mov    edi,0x8b7c5bf5
  414709:	aad    0x58
  41470b:	fldenv ds:0xd6855fb5
  414711:	mov    ecx,0x8a0dd6cd
  414716:	cmc    
  414717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414718:	inc    ebx
  414719:	push   esi
  41471a:	push   ebx
  41471b:	adc    DWORD PTR [esi+0x66],ebp
  41471e:	in     al,0xcc
  414720:	(bad)  
  414721:	hlt    
  414722:	xor    al,0x27
  414724:	cmp    eax,0xf7de0052
  414729:	mov    ds:0x36c4c55,eax
  41472e:	ret    
  41472f:	into   
  414730:	test   eax,eax
  414732:	sub    ah,dl
  414734:	fwait
  414735:	iret   
  414736:	(bad)  
  414737:	in     eax,dx
  414738:	gs and eax,0xe9a16d6d
  41473e:	stos   BYTE PTR es:[edi],al
  41473f:	sub    BYTE PTR [esi],al
  414741:	pop    edx
  414742:	cs or  dh,bl
  414745:	ret    
  414746:	sub    DWORD PTR [ecx],ebx
  414748:	iret   
  414749:	sbb    edi,edi
  41474b:	jnp    0x414723
  41474d:	ins    BYTE PTR es:[edi],dx
  41474e:	sub    BYTE PTR [edi],cl
  414750:	add    edi,DWORD PTR [eax-0x3c]
  414753:	mov    ah,0x3c
  414755:	push   0xd3c30a6e
  41475a:	mov    edx,0xe558830d
  41475f:	dec    esi
  414760:	cld    
  414761:	outs   dx,BYTE PTR ds:[esi]
  414762:	sbb    eax,0xeee16405
  414767:	sbb    BYTE PTR [esi],ch
  414769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41476a:	jl     0x414786
  41476c:	mov    WORD PTR [ebp+0x66],ds
  41476f:	sbb    BYTE PTR [edx],bh
  414771:	clc    
  414772:	pop    ebx
  414773:	adc    DWORD PTR [esi-0xd],esi
  414776:	add    al,0xe0
  414778:	das    
  414779:	cmp    esi,0x59
  41477c:	leave  
  41477d:	mov    ds:0x87b3f38f,eax
  414782:	stos   BYTE PTR es:[edi],al
  414783:	cs hlt 
  414785:	int    0xb7
  414787:	inc    esi
  414788:	fstp   TBYTE PTR [edi-0x12a2dfb1]
  41478e:	push   ecx
  41478f:	loop   0x4147be
  414791:	jl     0x414742
  414793:	cmp    BYTE PTR [eax+0x23],bl
  414796:	pop    eax
  414797:	ret    
  414798:	jmp    0x41472f
  41479a:	adc    BYTE PTR ds:0x2f103a12,bl
  4147a0:	xor    DWORD PTR [ebp+0x30],ebp
  4147a3:	into   
  4147a4:	adc    ch,BYTE PTR [ebx-0x585b465]
  4147aa:	ficomp WORD PTR [edx-0x56]
  4147ad:	(bad)  
  4147ae:	sbb    ah,bl
  4147b0:	cmp    al,0xf2
  4147b2:	ins    DWORD PTR es:[edi],dx
  4147b3:	dec    esi
  4147b4:	es push esi
  4147b6:	sub    dh,dh
  4147b8:	mov    ds:0x55f1d708,eax
  4147bd:	mov    eax,ds:0x96207917
  4147c2:	pusha  
  4147c3:	adc    cl,BYTE PTR [edx]
  4147c5:	xchg   ecx,eax
  4147c6:	lods   eax,DWORD PTR ds:[esi]
  4147c7:	sar    dl,1
  4147c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ca:	and    al,0xe7
  4147cc:	xchg   edi,eax
  4147cd:	xchg   esi,eax
  4147ce:	retf   
  4147cf:	xchg   edi,eax
  4147d0:	out    0x9e,eax
  4147d2:	sub    BYTE PTR [edx],0xe7
  4147d5:	out    0x4e,eax
  4147d7:	or     ecx,DWORD PTR [ecx]
  4147d9:	gs enter 0xbd79,0xeb
  4147de:	mov    ch,0x67
  4147e0:	arpl   ax,di
  4147e2:	dec    ebp
  4147e3:	std    
  4147e4:	fisubr WORD PTR [ecx-0xa89d40d]
  4147ea:	ret    
  4147eb:	shl    bl,cl
  4147ed:	add    ebp,DWORD PTR [eax+0x72]
  4147f0:	sahf   
  4147f1:	mov    bh,0xfb
  4147f3:	xor    BYTE PTR [esi+0x56],cl
  4147f6:	js     0x414804
  4147f8:	mov    ch,0xcd
  4147fa:	sbb    ah,BYTE PTR [edx+0x16]
  4147fd:	jae    0x4147b4
  4147ff:	fadd   st(2),st
  414801:	pushf  
  414802:	in     al,0xf8
  414804:	jmp    0x3860:0x17e19ef5
  41480b:	scas   al,BYTE PTR es:[edi]
  41480c:	inc    esi
  41480d:	fisub  DWORD PTR [edi+0x38ca4265]
  414813:	dec    edx
  414814:	mov    ecx,0x4398309e
  414819:	lea    eax,[edx+eiz*4+0x35]
  41481d:	mov    bl,0xaf
  41481f:	pop    edx
  414820:	test   al,0x39
  414822:	ret    0xff9f
  414825:	push   edi
  414826:	jns    0x414815
  414828:	jnp    0x4147e4
  41482a:	bound  esp,QWORD PTR [ecx+0x53]
  41482d:	aaa    
  41482e:	mov    ds:0x7ef16779,eax
  414833:	imul   ecx,DWORD PTR [eax],0x6bb8cdf2
  414839:	mov    ecx,DWORD PTR [ecx-0x3ff4acdc]
  41483f:	fcomip st,st(4)
  414841:	or     eax,0x91e68d9d
  414846:	ds push esp
  414848:	pop    eax
  414849:	test   eax,0x2fd7c978
  41484e:	xchg   edi,eax
  41484f:	push   ds
  414850:	mov    BYTE PTR [edx+0x43],bh
  414853:	sar    DWORD PTR [eax],0x77
  414856:	mov    esi,eax
  414858:	push   cs
  414859:	sub    BYTE PTR [ecx+0x5373859],0x20
  414860:	push   edi
  414861:	cmp    BYTE PTR ds:0x5c4c78f4,al
  414867:	xor    edi,DWORD PTR [ebx]
  414869:	xchg   edi,eax
  41486a:	xchg   edi,eax
  41486b:	xchg   ecx,eax
  41486c:	xchg   esi,eax
  41486e:	jb     0x4148d3
  414870:	jle    0x414874
  414872:	xor    BYTE PTR [esi+0x56],0xed
  414876:	in     eax,dx
  414877:	dec    esp
  414878:	mov    ch,0x56
  41487a:	jmp    0xbc726321
  41487f:	push   eax
  414880:	adc    ah,BYTE PTR [edx]
  414882:	daa    
  414883:	cmp    bl,dl
  414885:	sbb    BYTE PTR [esp+eax*8-0x6bdeaf8f],cl
  41488c:	lods   eax,DWORD PTR ds:[esi]
  41488d:	sbb    al,BYTE PTR [ebx-0x2f]
  414890:	outs   dx,DWORD PTR ds:[esi]
  414891:	dec    esi
  414892:	sub    BYTE PTR [ebp+0x61148791],dh
  414898:	sbb    BYTE PTR [ebx+ecx*8],ah
  41489b:	fild   DWORD PTR [eax+0x4efa16db]
  4148a1:	aas    
  4148a2:	bnd jp 0x4148a4
  4148a5:	stc    
  4148a6:	inc    esi
  4148a7:	mov    eax,ds:0xa9550589
  4148ac:	out    0x73,al
  4148ae:	pop    esi
  4148af:	pop    ebx
  4148b0:	mov    eax,ds:0x631175b9
  4148b5:	or     eax,0xa53ef0f9
  4148ba:	xor    BYTE PTR [ecx],0x5f
  4148bd:	add    DWORD PTR [eax+0x15],esi
  4148c0:	or     ch,bl
  4148c2:	mov    eax,0xaaf93fbd
  4148c7:	mov    eax,esp
  4148c9:	cwde   
  4148ca:	fnstcw WORD PTR [edx]
  4148cc:	mov    edx,0x6f1b88d
  4148d1:	(bad)  
  4148d3:	mov    edi,0xd4974793
  4148d8:	mov    BYTE PTR [ebx],dh
  4148da:	mov    ah,0xbf
  4148dc:	add    ecx,esp
  4148de:	jbe    0x41493e
  4148e0:	add    bl,BYTE PTR [esi+0x2a]
  4148e3:	call   0x2930355e
  4148e8:	dec    esp
  4148e9:	cmp    al,0xe8
  4148eb:	cli    
  4148ec:	rcr    DWORD PTR [ebp+0x4036ccf6],0xd5
  4148f3:	out    dx,eax
  4148f4:	(bad)  
  4148f5:	in     al,0xa2
  4148f7:	sbb    ecx,DWORD PTR [ecx]
  4148f9:	sub    al,0xa7
  4148fb:	cld    
  4148fc:	inc    esp
  4148fd:	ins    BYTE PTR es:[edi],dx
  4148fe:	inc    esp
  4148ff:	lds    edx,FWORD PTR [edi+0x37cf0368]
  414905:	jmp    0xb2af:0x7aae20f
  41490c:	loope  0x41492f
  41490e:	inc    ebx
  41490f:	or     ch,BYTE PTR [ebp+0x46]
  414912:	jb     0x4148cf
  414914:	jg     0x4148a8
  414916:	addr16 mov al,0xa8
  414919:	(bad)  
  41491a:	mov    eax,0xbca83bbd
  41491f:	js     0x4148c8
  414921:	enter  0x5de8,0xea
  414925:	inc    ecx
  414926:	adc    al,0x6b
  414928:	pop    ds
  414929:	clc    
  41492a:	push   esp
  41492b:	mov    ebp,0xc96da296
  414930:	rol    BYTE PTR [edx],cl
  414932:	add    DWORD PTR [eax-0x512ff86f],edi
  414938:	int3   
  414939:	adc    bl,BYTE PTR [edx-0x35]
  41493c:	into   
  41493d:	popa   
  41493e:	inc    ecx
  41493f:	retf   
  414940:	mov    edx,ebp
  414942:	dec    ecx
  414943:	stos   BYTE PTR es:[edi],al
  414944:	mov    dh,0xb6
  414946:	pop    edx
  414947:	bound  esi,QWORD PTR [ecx-0x6cd18ecf]
  41494d:	sub    esi,DWORD PTR [eax-0x3de30a06]
  414953:	retf   
  414954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414955:	push   0xf50267df
  41495a:	xchg   ebp,eax
  41495b:	mov    bh,0x8e
  41495d:	jl     0x414937
  41495f:	jecxz  0x4149cc
  414961:	xor    eax,0xcb40d188
  414966:	fwait
  414967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414968:	shr    dl,0x80
  41496b:	adc    al,BYTE PTR [esi+ebp*8]
  41496e:	jbe    0x41492b
  414970:	clc    
  414971:	cmp    BYTE PTR [edx],0xeb
  414974:	lock sar dh,1
  414977:	(bad)  
  414978:	or     dl,BYTE PTR cs:[eax-0x461cbe7]
  41497f:	xlat   BYTE PTR ds:[ebx]
  414980:	and    WORD PTR [edi-0x5d],bp
  414984:	or     ah,ch
  414986:	and    ch,bl
  414988:	cmp    al,0x94
  41498a:	test   eax,0x49aa756c
  41498f:	sbb    cl,dh
  414991:	add    al,0xb0
  414993:	add    dl,cl
  414995:	das    
  414996:	push   0xffffffec
  414998:	adc    al,0xfc
  41499a:	or     dl,BYTE PTR [ebp+0x4a]
  41499d:	inc    ebp
  41499e:	cli    
  41499f:	aam    0xd0
  4149a1:	pop    edx
  4149a2:	mov    bl,0xc6
  4149a4:	jns    0x414981
  4149a6:	arpl   WORD PTR [ebx],si
  4149a8:	mov    ebp,DWORD PTR [edx+0x6b]
  4149ab:	cld    
  4149ac:	inc    esi
  4149ad:	mov    DWORD PTR [ebp+0x8],edx
  4149b0:	jmp    0x414a25
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	(bad)  
  414b89:	je     0x414bca
  414b8b:	or     edi,edi
  414b8d:	add    BYTE PTR [bp+di+0x5c17],0x83
  414b93:	cmp    DWORD PTR [esi+0x24],0x34
  414b97:	cmp    BYTE PTR [edi+edx*4-0x4e],ch
  414b9b:	dec    edi
  414b9c:	mov    eax,ds:0x2470123c
  414ba1:	dec    ebp
  414ba2:	lahf   
  414ba3:	shl    BYTE PTR [esi-0x7f93bebd],1
  414ba9:	mov    bh,0xfe
  414bab:	xor    edx,DWORD PTR [edi-0x12d1e83c]
  414bb1:	sbb    DWORD PTR [edi-0x60],edx
  414bb4:	xor    dl,BYTE PTR [eax-0x4d7a2c8f]
  414bba:	clc    
  414bbb:	lea    ecx,ds:0x6eef37e7
  414bc1:	and    edi,DWORD PTR [esi-0x69]
  414bc4:	jmp    0x23dcf42e
  414bc9:	retf   0x8a13
  414bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bcd:	mov    ebp,0x45bf0f23
  414bd2:	les    esp,FWORD PTR [ecx+0x1b]
  414bd5:	mov    al,BYTE PTR [esi]
  414bd7:	repnz daa 
  414bd9:	sbb    eax,0x1ff768b9
  414bde:	test   al,0x87
  414be0:	fisttp WORD PTR [edi+ebx*1+0x292f58c5]
  414be7:	mov    al,ds:0xa2736a67
  414bec:	sub    al,0x5b
  414bee:	cli    
  414bef:	fld    QWORD PTR [eax-0x141bff23]
  414bf5:	lds    ebx,FWORD PTR [esi]
  414bf7:	dec    BYTE PTR [edx-0x138dd4b1]
  414bfd:	mov    ds:0x5785fe08,eax
  414c02:	les    edx,FWORD PTR ds:0xcdb39a52
  414c08:	retf   0xfeee
  414c0b:	push   ebx
  414c0c:	popa   
  414c0d:	jecxz  0x414bfa
  414c0f:	pop    ebp
  414c10:	(bad)  
  414c11:	cmp    BYTE PTR [eax+0x4c],ch
  414c14:	leave  
  414c15:	leave  
  414c16:	pop    eax
  414c17:	mov    eax,ebx
  414c19:	rcr    DWORD PTR [edx],0xe8
  414c1c:	test   al,0xed
  414c1e:	aam    0xc
  414c20:	out    0x59,eax
  414c22:	push   0x64dda14f
  414c27:	push   es
  414c28:	add    bh,bh
  414c2a:	dec    ebp
  414c2b:	sbb    eax,0xca28b23a
  414c30:	xchg   esp,eax
  414c31:	mov    esp,0x77bd749b
  414c36:	jmp    0xa4cf:0x7ba73a94
  414c3d:	jbe    0x414bec
  414c3f:	push   es
  414c40:	xchg   eax,edx
  414c42:	inc    ecx
  414c43:	xor    ebp,DWORD PTR [eax+0xb]
  414c46:	hlt    
  414c47:	mov    ebx,0xc0f7e72
  414c4c:	push   ebx
  414c4d:	sar    ecx,1
  414c4f:	cmp    ch,BYTE PTR [eax+0x62bf77fd]
  414c55:	in     eax,0x87
  414c57:	jl     0x414ccd
  414c59:	lods   eax,DWORD PTR ds:[esi]
  414c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c5b:	or     BYTE PTR [esi+0x13],ah
  414c5e:	iret   
  414c5f:	xchg   edx,eax
  414c60:	into   
  414c61:	dec    edx
  414c62:	clc    
  414c63:	mov    ebp,0x938057e6
  414c68:	pop    ecx
  414c69:	fiadd  WORD PTR [ebx]
  414c6b:	repnz inc eax
  414c6d:	daa    
  414c6e:	mov    edi,0x9d70b786
  414c73:	sub    bl,ah
  414c75:	mov    ah,0x85
  414c77:	out    0x7b,eax
  414c79:	loop   0x414c2d
  414c7b:	stos   BYTE PTR es:[edi],al
  414c7c:	hlt    
  414c7d:	out    dx,eax
  414c7e:	shr    DWORD PTR [ebp+0x4d9c6076],1
  414c84:	xor    BYTE PTR [edx-0x5b],cl
  414c87:	jb     0x414cf4
  414c89:	jmp    DWORD PTR [ecx]
  414c8b:	cli    
  414c8c:	dec    esp
  414c8d:	cmp    BYTE PTR [edx],al
  414c8f:	cdq    
  414c90:	popf   
  414c91:	dec    edi
  414c92:	push   ecx
  414c93:	int3   
  414c94:	mov    ds:0x45c07ad6,al
  414c99:	ds loope 0x414c4e
  414c9c:	out    0x5d,al
  414c9e:	mov    cl,0xdb
  414ca0:	cmp    BYTE PTR [edi+0x73],bl
  414ca3:	jns    0x414ca4
  414ca5:	imul   esi,DWORD PTR [edi-0x68],0x1f756285
  414cac:	or     BYTE PTR [edx+0x60efcbb3],ch
  414cb2:	retf   
  414cb3:	xor    al,0x4f
  414cb5:	pop    esp
  414cb6:	add    DWORD PTR [ecx],ecx
  414cb8:	ret    0xfaf5
  414cbb:	hlt    
  414cbc:	ret    
  414cbd:	and    ch,BYTE PTR [ebx+0x6761f139]
  414cc3:	idiv   al
  414cc5:	pop    ebx
  414cc6:	mov    esi,0x9699506b
  414ccb:	jno    0x414ce6
  414ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cce:	cmp    DWORD PTR [esi],ebx
  414cd0:	imul   ebp,DWORD PTR [esi],0x19cb5a6
  414cd6:	sbb    DWORD PTR [esi+0xc],ecx
  414cd9:	jp     0x414cfa
  414cdb:	pop    edi
  414cdc:	xchg   DWORD PTR [ebx+0xc92c15b],ecx
  414ce2:	imul   ebp,DWORD PTR gs:0x1d503f6c,0x76e8b3a2
  414ced:	data16 add cl,dh
  414cf0:	mov    DWORD PTR ds:0x4032fb85,ecx
  414cf6:	(bad)  
  414cf7:	pextrw ebx,(bad),0xc5
  414cf9:	pop    edi
  414cfa:	push   0xffffffbb
  414cfc:	stc    
  414cfd:	ret    
  414cfe:	pop    edi
  414cff:	sahf   
  414d00:	pop    ecx
  414d01:	mov    al,0x1e
  414d03:	inc    ecx
  414d04:	test   eax,0xbae80655
  414d09:	sahf   
  414d0a:	(bad)
  414d0f:	aas    
  414d10:	and    bh,BYTE PTR [ebp+ebp*8+0x4d]
  414d14:	inc    esi
  414d15:	rsm    
  414d17:	dec    edx
  414d18:	iret   
  414d19:	(bad)  
  414d1a:	jnp    0x414d40
  414d1c:	stos   BYTE PTR es:[edi],al
  414d1d:	mov    BYTE PTR [ebp-0x2e],al
  414d20:	test   al,bl
  414d22:	cs pop ebx
  414d24:	sahf   
  414d25:	xchg   edi,eax
  414d26:	int    0x4e
  414d28:	ss add al,0x73
  414d2b:	push   es
  414d2c:	ret    0xa8b4
  414d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d30:	xor    esi,DWORD PTR [ebx-0x7e8180cf]
  414d36:	ret    0xa99f
  414d39:	xlat   BYTE PTR ds:[ebx]
  414d3a:	das    
  414d3b:	jb     0x414ce6
  414d3d:	pop    eax
  414d3e:	lods   al,BYTE PTR ds:[esi]
  414d3f:	sbb    ecx,eax
  414d41:	xor    al,0x4d
  414d43:	ja     0x414ce2
  414d45:	inc    eax
  414d46:	ret    
  414d47:	imul   esp,DWORD PTR [esi+0x2cb75c14],0x23d438c
  414d51:	ret    0x697c
  414d54:	xchg   ecx,eax
  414d55:	(bad)  
  414d56:	lods   al,BYTE PTR ds:[esi]
  414d57:	xchg   BYTE PTR [ecx+0x24],ch
  414d5a:	mov    al,0xac
  414d5c:	std    
  414d5d:	loope  0x414d46
  414d5f:	dec    edi
  414d60:	mov    BYTE PTR [ecx-0xf],bh
  414d63:	lahf   
  414d64:	jae    0x414de4
  414d66:	lea    edi,[edi+eiz*2-0xd]
  414d6a:	inc    ebx
  414d6b:	lea    esp,[ebx-0x6ee84a12]
  414d71:	lods   al,BYTE PTR ds:[esi]
  414d72:	jp     0x414da9
  414d74:	daa    
  414d75:	(bad)  
  414d77:	mov    cl,0xf
  414d79:	fmul   DWORD PTR [eax+0x2f]
  414d7c:	arpl   WORD PTR [esi+ebx*4],sp
  414d7f:	inc    edi
  414d80:	jae    0x414d76
  414d82:	inc    ebx
  414d83:	push   esp
  414d84:	push   ss
  414d85:	mov    edi,0xad885204
  414d8a:	icebp  
  414d8b:	or     DWORD PTR [eax-0x3d],ebp
  414d8e:	mov    eax,ds:0x52c8bb46
  414d93:	mov    esi,0xf0f63f73
  414d98:	lods   eax,DWORD PTR ds:[esi]
  414d99:	ret    0x713c
  414d9c:	out    dx,eax
  414d9d:	clc    
  414d9e:	fimul  WORD PTR [ebp-0x56]
  414da1:	call   0xec91:0xe523c116
  414da8:	pop    edx
  414da9:	mov    WORD PTR [ebp+0x6c],es
  414dac:	add    DWORD PTR [edi-0x59f43cf2],eax
  414db2:	cmp    dl,ah
  414db4:	hlt    
  414db5:	ds mov dh,0x47
  414db8:	mov    WORD PTR [eax-0x6a],es
  414dbb:	push   es
  414dbc:	pop    esi
  414dbd:	add    edx,DWORD PTR [esi+0x25]
  414dc0:	mov    ecx,0xcdd00218
  414dc5:	iret   
  414dc6:	lock and eax,0xe3fb7aa0
  414dcc:	scas   al,BYTE PTR es:[edi]
  414dcd:	fidiv  WORD PTR [edi-0x52]
  414dd0:	in     al,dx
  414dd1:	push   ebx
  414dd2:	jmp    0xa1c3d103
  414dd7:	jae    0x414d8b
  414dd9:	xlat   BYTE PTR ds:[ebx]
  414dda:	iret   
  414ddb:	pop    eax
  414ddc:	or     dl,BYTE PTR [edi-0x4c]
  414ddf:	aas    
  414de0:	pop    ebp
  414de1:	xor    dl,BYTE PTR [esi-0x67]
  414de4:	fild   QWORD PTR [ebx-0x1c]
  414de7:	sbb    DWORD PTR [ebp+0x41],0x8e25a260
  414dee:	push   esp
  414def:	stc    
  414df0:	xor    dl,cl
  414df2:	mov    ebp,0xd9e8ef6c
  414df7:	test   eax,0x1ab28aa1
  414dfc:	adc    BYTE PTR [ebp-0x39212110],bl
  414e02:	mov    ds:0xf65a0e22,eax
  414e07:	sub    ah,BYTE PTR gs:[ecx+0x651a94c4]
  414e0e:	mov    eax,0xd37ad01c
  414e13:	jne    0x414d9d
  414e15:	jns    0x414e6f
  414e17:	imul   eax,edx,0x1
  414e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e1b:	sub    eax,0x747bec87
  414e20:	add    BYTE PTR [eax-0x54ebc70],ch
  414e26:	mov    bl,0x2c
  414e28:	addr16 jbe 0x414e9f
  414e2b:	push   0xffffffdc
  414e2d:	xor    ah,BYTE PTR [ecx]
  414e2f:	jmp    0x414e7d
  414e31:	mov    edx,0xc31612c4
  414e36:	push   ebp
  414e37:	mov    dl,0x87
  414e39:	dec    edi
  414e3a:	test   DWORD PTR [ebx-0x2a],esp
  414e3d:	pop    eax
  414e3e:	mov    esi,0x1d2e63f0
  414e43:	push   ebp
  414e44:	push   edi
  414e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e46:	xchg   edx,eax
  414e47:	adc    al,0x25
  414e49:	push   edi
  414e4a:	arpl   WORD PTR [ecx+ebp*1-0x67],bp
  414e4e:	stc    
  414e4f:	out    0xfa,eax
  414e51:	test   al,0x75
  414e53:	stos   BYTE PTR es:[edi],al
  414e54:	mov    ah,0x4f
  414e56:	outs   dx,BYTE PTR ds:[esi]
  414e57:	mov    esp,0x8e99723a
  414e5c:	scas   eax,DWORD PTR es:[edi]
  414e5d:	dec    ebp
  414e5e:	(bad)  
  414e5f:	int3   
  414e60:	push   ds
  414e61:	jl     0x414e29
  414e63:	and    eax,0x3bdc425e
  414e68:	das    
  414e69:	lahf   
  414e6a:	(bad)  
  414e6b:	inc    ebp
  414e6c:	sbb    ah,BYTE PTR ds:0x6156100e
  414e72:	clc    
  414e73:	sub    DWORD PTR [ebx+0x40332c91],ecx
  414e79:	icebp  
  414e7a:	dec    edi
  414e7b:	mov    bl,0xc7
  414e7d:	jle    0x414e42
  414e7f:	dec    edx
  414e80:	sbb    eax,0xb2303492
  414e85:	jbe    0x414e89
  414e87:	dec    ecx
  414e88:	out    0xd6,al
  414e8a:	jmp    FWORD PTR [edi+0x15887240]
  414e90:	pop    es
  414e91:	jno    0x414ecf
  414e93:	xor    al,0x3b
  414e95:	add    DWORD PTR [edi+eax*4+0x3210006a],esi
  414e9c:	(bad)  
  414e9e:	scas   eax,DWORD PTR es:[edi]
  414e9f:	mov    eax,ds:0x6a7e78ac
  414ea4:	cs sub ecx,esp
  414ea7:	mov    edx,0xd31de939
  414eac:	mov    bh,0xe6
  414eae:	pminsw mm7,QWORD PTR [eax]
  414eb1:	clc    
  414eb2:	retf   
  414eb3:	jmp    0xc41c8708
  414eb8:	daa    
  414eb9:	jle    0x414f24
  414ebb:	je     0x414e5c
  414ebd:	div    DWORD PTR [edi+0x74566874]
  414ec3:	je     0x414e5d
  414ec5:	dec    eax
  414ec6:	ds pop ebp
  414ec8:	rcl    DWORD PTR [ebx],cl
  414eca:	call   0x67017733
  414ecf:	es pop es
  414ed1:	dec    esi
  414ed2:	push   esp
  414ed3:	bound  ebx,QWORD PTR [ebx+0x19724597]
  414ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eda:	fmul   QWORD PTR [edi+0xb68637f]
  414ee0:	pop    esp
  414ee1:	iret   
  414ee2:	ja     0x414eb5
  414ee4:	(bad)  
  414ee5:	repz xchg ebp,eax
  414ee7:	mov    ah,0x78
  414ee9:	ja     0x414ef1
  414eeb:	sub    ebp,DWORD PTR [ebp+0x4b69aa36]
  414ef1:	lds    eax,FWORD PTR [edi]
  414ef3:	inc    eax
  414ef4:	xchg   ebp,eax
  414ef5:	add    esp,DWORD PTR [ebx-0x6f46557]
  414efb:	push   ebx
  414efc:	or     esi,DWORD PTR [ebp+0x68b53413]
  414f02:	imul   BYTE PTR [ecx]
  414f04:	cli    
  414f05:	idiv   DWORD PTR [edx]
  414f07:	and    eax,0x77042cc3
  414f0c:	sbb    BYTE PTR [ecx+0x77],ch
  414f0f:	push   es
  414f10:	cdq    
  414f11:	pusha  
  414f12:	cs int3 
  414f14:	add    al,0xfd
  414f16:	xchg   edi,eax
  414f17:	cld    
  414f18:	dec    esi
  414f19:	cmp    eax,0xdb5062bd
  414f1e:	bound  esi,QWORD PTR [edi+0x586769d9]
  414f24:	adc    esp,DWORD PTR [ebp-0x281393c8]
  414f2a:	in     al,0xc
  414f2c:	mov    ebp,eax
  414f2e:	jae    0x414ee0
  414f30:	scas   eax,DWORD PTR es:[edi]
  414f31:	hlt    
  414f32:	adc    ecx,DWORD PTR [bp-0x29]
  414f36:	int3   
  414f37:	push   esi
  414f38:	out    0xdf,eax
  414f3a:	mov    BYTE PTR gs:[edi-0x7963e361],cl
  414f41:	enter  0xc3c7,0xd8
  414f45:	(bad)  
  414f46:	in     al,0x1
  414f48:	cmp    BYTE PTR [edx*8-0x74a02c2d],bl
  414f4f:	mov    edi,0x4e1b046b
  414f54:	push   edx
  414f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f56:	fsubr  DWORD PTR [edx+0x39]
  414f59:	loope  0x414f21
  414f5b:	sub    DWORD PTR [esi-0x30878d41],eax
  414f61:	jno    0x414fb3
  414f63:	stc    
  414f64:	enter  0x1010,0xaa
  414f68:	and    al,0x9d
  414f6a:	push   esi
  414f6b:	jnp    0x414fc2
  414f6d:	test   al,0x44
  414f6f:	cmp    DWORD PTR [esi-0x7649e916],esp
  414f75:	add    eax,0xfb585222
  414f7a:	mov    ch,BYTE PTR [ecx-0x76]
  414f7d:	adc    cl,BYTE PTR [ecx+0x6ef93dca]
  414f83:	mov    esi,0x95d64c85
  414f88:	sbb    DWORD PTR [esi],esp
  414f8a:	adc    ecx,edi
  414f8c:	add    BYTE PTR [ebx],al
  414f8e:	xor    bl,bl
  414f90:	mov    ebx,DWORD PTR [edx]
  414f92:	mov    bl,0xcc
  414f94:	mov    ah,0xe4
  414f96:	(bad)  
  414f97:	std    
  414f98:	hlt    
  414f99:	push   ebx
  414f9a:	or     eax,0x52a9bc7a
  414f9f:	or     bl,BYTE PTR [ecx-0x2858c027]
  414fa5:	fdivrp st(2),st
  414fa7:	mov    ds:0xb69511de,al
  414fac:	in     eax,dx
  414fad:	jecxz  0x414ff2
  414faf:	jae    0x41501f
  414fb1:	mov    ecx,0x668120db
  414fb6:	fdivr  DWORD PTR ss:[bx+si-0x37]
  414fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fbc:	lods   eax,DWORD PTR ds:[esi]
  414fbd:	pop    esp
  414fbe:	or     ebp,ebp
  414fc0:	or     ah,cl
  414fc2:	scas   al,BYTE PTR es:[edi]
  414fc3:	imul   ebx,DWORD PTR [edi-0x6cc07fdc],0x4ab580e9
  414fcd:	bound  edi,QWORD PTR [ebx*8-0x31f33eb8]
  414fd4:	inc    DWORD PTR [esi+eax*1-0x6b]
  414fd8:	adc    BYTE PTR [esi+0x60],al
  414fdb:	mov    bl,ah
  414fdd:	inc    ecx
  414fde:	push   ecx
  414fdf:	inc    esi
  414fe0:	push   ds
  414fe1:	stos   DWORD PTR es:[edi],eax
  414fe2:	adc    BYTE PTR [edi-0x22],0xca
  414fe6:	dec    esp
  414fe7:	data16 jl 0x41500b
  414fea:	cmp    al,0x67
  414fec:	push   ebp
  414fed:	ja     0x414ff0
  414fef:	dec    edi
  414ff0:	lods   al,BYTE PTR ds:[esi]
  414ff1:	pop    ebx
  414ff2:	or     eax,0x40fc6fc3
  414ff7:	out    0xde,al
  414ff9:	jp     0x41506f
  414ffb:	mov    eax,ds:0x2523aba5
  415000:	or     eax,0x20253fe5
  415005:	adc    bh,BYTE PTR [esi+0x32ecfbeb]
  41500b:	lods   al,BYTE PTR ds:[esi]
  41500c:	out    0x8e,eax
  41500e:	(bad)  
  41500f:	fisubr WORD PTR [edi-0x5a]
  415012:	js     0x415040
  415014:	mov    esp,ebx
  415016:	xchg   esi,eax
  415017:	repnz cld 
  415019:	cwde   
  41501a:	stos   BYTE PTR es:[edi],al
  41501b:	ss rol bh,1
  41501e:	gs aaa 
  415020:	jl     0x415088
  415022:	mov    ebp,0xba4f6ab4
  415027:	popf   
  415028:	push   es
  415029:	sub    BYTE PTR [esp+edi*8+0x3c],0x2
  41502e:	inc    esi
  41502f:	xor    ch,ah
  415031:	xchg   ecx,eax
  415032:	cmp    al,0xb3
  415034:	mov    dh,0x27
  415036:	mov    edx,0xcdf63b8
  41503b:	test   al,0x60
  41503d:	mov    al,ds:0xd7b6a3fb
  415042:	call   0x90f324aa
  415047:	cli    
  415048:	gs mov ah,0x3a
  41504b:	sbb    BYTE PTR [edx-0x174aba3b],dh
  415051:	or     bl,BYTE PTR [ecx+ecx*4+0x33491032]
  415058:	bound  esp,QWORD PTR [ebp+0xdfd4893]
  41505e:	adc    ah,BYTE PTR [ebp-0x54]
  415061:	cld    
  415062:	out    dx,eax
  415063:	mov    ah,0x16
  415065:	sbb    edi,edx
  415067:	sbb    al,0x43
  415069:	loop   0x415056
  41506b:	sti    
  41506c:	push   edx
  41506d:	int    0x94
  41506f:	mov    ebp,0x4823c53c
  415074:	and    ch,BYTE PTR [eax]
  415076:	pop    eax
  415077:	mov    ah,0xe5
  415079:	cmp    al,0x24
  41507b:	cmp    al,0xbc
  41507d:	popf   
  41507e:	mov    bl,BYTE PTR [edx]
  415080:	push   cs
  415081:	ret    
  415082:	add    DWORD PTR [edi-0xd],0x356f1162
  415089:	jno    0x41509b
  41508b:	(bad)  
  41508c:	jmp    0x415075
  41508e:	jge    0x415060
  415090:	test   DWORD PTR [ebp-0x5e39f920],ebx
  415096:	ret    0x1c98
  415099:	sahf   
  41509a:	in     eax,0xc6
  41509c:	push   ecx
  41509d:	out    0x4b,eax
  41509f:	dec    esi
  4150a0:	add    edi,DWORD PTR [ecx-0x7f]
  4150a3:	add    DWORD PTR [eax-0x57],edi
  4150a6:	lahf   
  4150a7:	or     al,dl
  4150a9:	jno    0x415043
  4150ab:	jg     0x415046
  4150ad:	aad    0x86
  4150af:	fdiv   DWORD PTR [eax+0xd]
  4150b2:	pop    edx
  4150b3:	ror    BYTE PTR [ebp-0x1e],cl
  4150b6:	pop    esp
  4150b7:	nop
  4150b8:	xor    dl,bl
  4150ba:	dec    ecx
  4150bb:	ja     0x4150e8
  4150bd:	mov    cs,WORD PTR [ecx-0x359ac071]
  4150c3:	in     eax,0xc
  4150c5:	lea    ebp,[edi-0x144471ac]
  4150cb:	adc    eax,0x66eb637f
  4150d0:	call   0xf4b2:0x8f4e8e8
  4150d7:	mov    bh,BYTE PTR [ecx+0x67]
  4150da:	aam    0x41
  4150dc:	cmp    BYTE PTR [edx],dh
  4150de:	in     eax,0xdc
  4150e0:	ror    DWORD PTR [edx-0x6fbd49e1],0x43
  4150e7:	ret    0xdc77
  4150ea:	es or  esp,esi
  4150ed:	data16 adc BYTE PTR [ebp+0x6e],0xeb
  4150f2:	mov    cl,0xf8
  4150f4:	xchg   ebx,eax
  4150f5:	hlt    
  4150f6:	or     eax,0x315bdfd9
  4150fb:	popf   
  4150fc:	outs   dx,DWORD PTR ds:[esi]
  4150fd:	mov    WORD PTR [edi+0x7a],gs
  415100:	mov    dh,0x3f
  415102:	imul   ebx,eax,0x62
  415105:	mov    ds:0x2780a7bd,al
  41510a:	or     al,0x47
  41510c:	in     al,dx
  41510d:	sub    DWORD PTR [ecx-0x71],ecx
  415110:	(bad)  
  415111:	pop    ebp
  415112:	loopne 0x415159
  415114:	inc    edi
  415115:	and    BYTE PTR [edi-0x6d5587b8],bh
  41511b:	pop    DWORD PTR [edi-0x2226af18]
  415121:	pop    eax
  415122:	hlt    
  415123:	jbe    0x41511c
  415125:	call   0x1a21a913
  41512a:	jle    0x41515a
  41512c:	jno    0x415110
  41512e:	loopne 0x415176
  415130:	push   eax
  415131:	adc    DWORD PTR [esi-0x21b3ca63],esi
  415137:	inc    ebp
  415138:	fisub  WORD PTR [edx+0x1f62dbd0]
  41513e:	sub    dl,dh
  415140:	mov    ebp,0xfbb13fd9
  415145:	pop    ss
  415146:	jl     0x41518c
  415148:	ja     0x415199
  41514a:	pushf  
  41514b:	or     BYTE PTR [ecx],ah
  41514d:	cmp    esi,DWORD PTR [edx+0x90de095]
  415153:	mov    WORD PTR [eax+0x156359c4],?
  415159:	loop   0x4150e6
  41515b:	sub    BYTE PTR [ebx-0x4366ca79],cl
  415161:	imul   esi,DWORD PTR [edx+edx*8],0x4beaea56
  415168:	fidivr WORD PTR [eax-0x357cbcc6]
  41516e:	cmp    eax,0x4aeb6041
  415173:	mov    cl,0xe8
  415175:	jbe    0x4151d6
  415177:	retf   
  415178:	enter  0xafd4,0x5d
  41517c:	push   esi
  41517d:	retf   
  41517e:	retf   
  41517f:	frstor [ecx]
  415181:	adc    al,0x20
  415183:	ficomp DWORD PTR [ebx+ebx*8]
  415186:	xor    edi,DWORD PTR [edx+eax*4+0x4c]
  41518a:	js     0x41513a
  41518c:	xchg   BYTE PTR [ebx],ah
  41518e:	test   BYTE PTR [ebp+0x6],ah
  415191:	add    al,BYTE PTR [ebx-0x68]
  415194:	mov    ebx,0x955df450
  415199:	leave  
  41519a:	push   ebx
  41519b:	jnp    0x415132
  41519d:	shl    BYTE PTR [ecx+0x28972ab9],0xa7
  4151a4:	adc    eax,0xbef36032
  4151a9:	mov    eax,ds:0x396c6334
  4151ae:	jns    0x4151f7
  4151b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b1:	popf   
  4151b2:	(bad)  [esi+ebx*1-0x79939bc5]
  4151b9:	sub    dh,BYTE PTR [edi]
  4151bb:	adc    al,0x96
  4151bd:	jb     0x41517b
  4151bf:	xchg   ebp,eax
  4151c0:	inc    eax
  4151c1:	xor    eax,0xdde729c
  4151c6:	fs push es
  4151c8:	in     eax,dx
  4151c9:	or     eax,0x4afb1f5b
  4151ce:	inc    eax
  4151cf:	ds inc esp
  4151d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151d3:	pop    ss
  4151d4:	shr    BYTE PTR [ecx-0x4b8a6e32],1
  4151da:	jb     0x41518a
  4151dc:	ss (bad) 
  4151de:	push   edx
  4151df:	(bad)  
  4151e0:	cmc    
  4151e1:	daa    
  4151e2:	not    ebp
  4151e4:	sbb    ah,ah
  4151e6:	(bad)  
  4151e7:	fistp  QWORD PTR [eax]
  4151e9:	or     al,0xeb
  4151eb:	mov    esi,0x81397b91
  4151f0:	mov    esp,0x323fdcf8
  4151f5:	mov    edi,0x2f74fa71
  4151fa:	stos   BYTE PTR es:[edi],al
  4151fb:	adc    DWORD PTR [ebx-0x66],esp
  4151fe:	shl    BYTE PTR [ecx-0x6f1ae987],1
  415204:	sbb    al,0x29
  415206:	pusha  
  415207:	sub    BYTE PTR [edi-0x34],al
  41520a:	and    ah,ah
  41520c:	outs   dx,BYTE PTR ds:[esi]
  41520d:	mov    ebp,0xd0ecc050
  415212:	mov    ?,WORD PTR [edx]
  415214:	fistp  QWORD PTR [esi+0x71]
  415217:	ss jle 0x415243
  41521a:	push   edi
  41521b:	aaa    
  41521c:	jnp    0x415244
  41521e:	or     BYTE PTR [ecx+eiz*1],ah
  415221:	es ja  0x415258
  415224:	(bad)  
  415226:	xchg   esi,eax
  415227:	ins    BYTE PTR es:[edi],dx
  415228:	xchg   ecx,eax
  415229:	arpl   WORD PTR [edi-0x10b7843c],si
  41522f:	push   cs
  415230:	dec    esp
  415231:	mov    esp,DWORD PTR [edi-0x47]
  415234:	mov    bl,0x22
  415236:	test   al,0xd1
  415238:	iret   
  415239:	cmp    eax,0x5ea255fb
  41523e:	pop    ecx
  41523f:	jo     0x4151cd
  415241:	outs   dx,DWORD PTR ds:[esi]
  415242:	mov    esp,0xc68bc59b
  415247:	ds cmp al,0x68
  41524a:	add    eax,0x524a9d73
  41524f:	inc    ebp
  415250:	adc    ch,ch
  415252:	jp     0x415264
  415254:	call   0x4bee545
  415259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41525a:	repnz stc 
  41525c:	mov    ds:0xaefc0c6,al
  415261:	jp     0x4152a2
  415263:	in     al,0x9a
  415265:	sahf   
  415266:	idiv   BYTE PTR [esi-0x23befec9]
  41526c:	jne    0x415261
  41526e:	out    0xdf,eax
  415270:	addr16 jge 0x4151f7
  415273:	fisttp DWORD PTR [esi+0x3]
  415276:	mov    bh,0xab
  415278:	icebp  
  415279:	push   ebx
  41527a:	jge    0x41524c
  41527c:	call   0x84cb:0x95649c86
  415283:	xor    DWORD PTR [esi],edi
  415285:	stos   DWORD PTR es:[edi],eax
  415286:	cmp    DWORD PTR [eax],eax
  415288:	push   esi
  415289:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41528b:	sbb    DWORD PTR [edi-0x49738b7b],edx
  415291:	xor    eax,0xf862794f
  415296:	adc    eax,0xcd5b9dbf
  41529b:	leave  
  41529c:	mov    cl,0x93
  41529e:	lods   al,BYTE PTR ds:[esi]
  41529f:	adc    al,0x67
  4152a1:	pop    edx
  4152a2:	xchg   edi,eax
  4152a3:	cmp    DWORD PTR [esi+0x6b],edi
  4152a6:	stc    
  4152a7:	jl     0x4152b3
  4152a9:	jge    0x415312
  4152ab:	push   edx
  4152ac:	dec    eax
  4152ad:	cld    
  4152ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152af:	adc    DWORD PTR [ebx+0x38],0xae43626d
  4152b6:	nop
  4152b7:	push   ebx
  4152b8:	jecxz  0x415255
  4152ba:	add    BYTE PTR [edx+ebp*4],bl
  4152bd:	in     al,dx
  4152be:	adc    cl,0x8d
  4152c1:	nop
  4152c2:	jnp    0x415343
  4152c4:	add    edi,DWORD PTR [eax]
  4152c6:	fistp  DWORD PTR [esi]
  4152c8:	in     al,0xf9
  4152ca:	mov    esp,ebp
  4152cc:	push   cs
  4152cd:	outs   dx,BYTE PTR ds:[esi]
  4152ce:	push   0xffffff82
  4152d0:	xchg   esi,eax
  4152d1:	fld    QWORD PTR [ecx+0x106099e8]
  4152d7:	out    0x38,al
  4152d9:	jbe    0x415273
  4152db:	das    
  4152dc:	fnstcw WORD PTR [eax+0x35]
  4152df:	and    eax,0xd9902ee
  4152e4:	mov    esi,DWORD PTR [ebx+0x68]
  4152e7:	push   es
  4152e8:	dec    DWORD PTR [edx]
  4152ea:	test   BYTE PTR ds:0xa4a18263,0x3d
  4152f1:	jmp    FWORD PTR [ecx+edx*4-0x5196154f]
  4152f8:	div    BYTE PTR [eax]
  4152fa:	icebp  
  4152fb:	add    BYTE PTR [eax+0x5e],ch
  4152fe:	cli    
  4152ff:	iret   
  415300:	mov    eax,0xf9a3d95c
  415305:	push   esi
  415306:	das    
  415307:	dec    ebp
  415308:	jnp    0x415304
  41530a:	mov    bl,ah
  41530c:	push   0xeade653e
  415311:	retf   0x4b56
  415314:	imul   ebp,DWORD PTR [ebx],0xd146e294
  41531a:	add    ecx,DWORD PTR [ebp+0x11]
  41531d:	mov    edx,0x3ca6f444
  415322:	jb     0x415352
  415324:	repnz icebp 
  415326:	mov    edx,0xc935fd7d
  41532b:	sbb    bl,BYTE PTR [ecx-0x39e312ca]
  415331:	mov    cs,WORD PTR [ebp+0x69e4c65b]
  415337:	ja     0x415334
  415339:	or     ebx,DWORD PTR [ebx-0x23]
  41533c:	xchg   edi,eax
  41533d:	mov    bl,0x2a
  41533f:	lds    edx,FWORD PTR [ecx+0x5e]
  415342:	and    BYTE PTR [ebx],dh
  415344:	sbb    bl,ah
  415346:	mov    dh,0x4e
  415348:	lock shl edx,1
  41534b:	mov    ecx,0x85eb6158
  415350:	aas    
  415351:	xchg   DWORD PTR [edi],ebp
  415353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415354:	scas   eax,DWORD PTR es:[edi]
  415355:	jmp    0x4153b0
  415357:	test   al,0x9d
  415359:	clc    
  41535a:	dec    esp
  41535b:	cmp    eax,0x11e34742
  415360:	mov    esp,0x7759e94c
  415365:	das    
  415366:	rcr    BYTE PTR [edx],cl
  415368:	mov    dh,0xd3
  41536a:	out    dx,eax
  41536b:	lea    esp,[ecx+0x21]
  41536e:	xor    al,0x80
  415370:	bswap  ebp
  415372:	jmp    0x14b1:0x798dfedf
  415379:	stc    
  41537a:	in     al,0xd1
  41537c:	cmp    BYTE PTR [ebx+0x1f],bl
  41537f:	pushf  
  415380:	repnz retf 0xacf4
  415384:	and    DWORD PTR [eax],esp
  415386:	sti    
  415387:	(bad)  
  415388:	mov    al,ds:0x5694559
  41538d:	loope  0x41536f
  41538f:	(bad)  
  415390:	mov    cl,0x21
  415392:	push   ebp
  415393:	xchg   edi,eax
  415394:	test   eax,0xf79a6809
  415399:	(bad)  
  41539b:	(bad)  
  41539c:	loopne 0x41539a
  41539e:	sub    ecx,0x6514a9bc
  4153a4:	adc    eax,0x83b32cb2
  4153a9:	cmp    BYTE PTR [ebp-0x5f],al
  4153ac:	xor    BYTE PTR [ecx+0x4d4bf633],ch
  4153b2:	mov    ebx,0x26d286d7
  4153b7:	xchg   ebx,eax
  4153b8:	mov    eax,0x54910db4
  4153bd:	add    dh,ah
  4153bf:	call   DWORD PTR [edi]
  4153c1:	data16 aaa 
  4153c3:	fst    st(2)
  4153c5:	add    eax,0x587437cd
  4153ca:	mov    dl,BYTE PTR [ecx-0x549f6774]
  4153d0:	xor    eax,0x6a055c04
  4153d5:	and    eax,0x4d0a7e6c
  4153da:	xchg   esi,eax
  4153db:	xchg   ebx,eax
  4153dc:	and    DWORD PTR [ecx-0x3f],esi
  4153df:	and    ebp,ebx
  4153e1:	ds pop edi
  4153e3:	cmp    DWORD PTR [ebx+0x43d3009a],edx
  4153e9:	mov    ah,0xda
  4153eb:	js     0x415380
  4153ed:	js     0x415400
  4153ef:	cli    
  4153f0:	dec    esp
  4153f1:	cmp    ebx,ecx
  4153f3:	dec    esp
  4153f4:	xchg   edx,eax
  4153f5:	scas   al,BYTE PTR es:[edi]
  4153f6:	xchg   ebp,eax
  4153f7:	mov    dl,0x31
  4153f9:	push   eax
  4153fa:	shl    BYTE PTR [ebp-0x3f],1
  4153fd:	mov    ah,0x61
  4153ff:	les    ecx,FWORD PTR [esi-0x496a2d34]
  415405:	inc    ebp
  415406:	mov    esp,0x336123ce
  41540b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41540c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41540d:	dec    eax
  41540e:	jns    0x41541e
  415410:	(bad)  
  415412:	sub    dl,BYTE PTR [ebx+0x71]
  415415:	jl     0x4153aa
  415417:	ss leave 
  415419:	shl    edx,cl
  41541b:	inc    edi
  41541c:	inc    edi
  41541d:	push   esp
  41541e:	sub    eax,0x2035e873
  415423:	punpcklbw mm4,DWORD PTR [ecx+0x7bc7de1b]
  41542a:	aaa    
  41542b:	in     eax,dx
  41542c:	call   0x6fb97333
  415431:	jo     0x4153c4
  415433:	sahf   
  415434:	inc    edi
  415435:	cmp    esi,DWORD PTR [edx+ebp*4]
  415438:	enter  0xc035,0x5f
  41543c:	add    BYTE PTR [edx+ebx*2],dh
  41543f:	pop    esi
  415440:	test   al,0x17
  415442:	sti    
  415443:	dec    edi
  415444:	add    eax,0xcbfae382
  415449:	cmp    al,0x27
  41544b:	mov    bh,BYTE PTR [ecx-0x5d219c79]
  415451:	sub    eax,0xdd41e3d6
  415456:	jbe    0x415475
  415458:	pusha  
  415459:	jmp    0x415427
  41545b:	jns    0x41548c
  41545d:	inc    ebp
  41545e:	adc    dl,BYTE PTR [ebx+0x721ef54]
  415464:	push   ecx
  415465:	add    eax,0x3428d8dc
  41546a:	lds    ebp,FWORD PTR [ecx]
  41546c:	nop
  41546d:	xlat   BYTE PTR ds:[ebx]
  41546e:	dec    ebp
  41546f:	call   0x936f1fde
  415474:	sub    edx,DWORD PTR [eax-0x69ab3ff7]
  41547a:	(bad)  
  41547b:	data16 sti 
  41547d:	test   DWORD PTR [eax],0xfe4b27f5
  415483:	sbb    esp,DWORD PTR [esi-0x78]
  415486:	jmp    0x36a803fa
  41548b:	ret    
  41548c:	push   eax
  41548d:	popa   
  41548e:	sub    ch,ch
  415490:	ins    DWORD PTR es:[edi],dx
  415491:	repz (bad) 
  415494:	cmp    al,cl
  415496:	into   
  415497:	das    
  415498:	repz mov eax,ds:0x827217d6
  41549e:	mov    ch,BYTE PTR [esi+0x6c]
  4154a1:	jge    0x41543e
  4154a3:	js     0x415449
  4154a5:	ret    0x8c1d
  4154a8:	xchg   esi,eax
  4154a9:	repz leave 
  4154ab:	int3   
  4154ac:	cmp    al,ah
  4154ae:	outs   dx,DWORD PTR ds:[esi]
  4154af:	xor    esp,DWORD PTR [eax-0x3]
  4154b2:	fistp  WORD PTR [ecx+0x1e67ad4a]
  4154b8:	jmp    0x415513
  4154ba:	setp   ch
  4154bd:	fcom   DWORD PTR [eax-0x28ce6106]
  4154c3:	push   es
  4154c4:	ret    
  4154c5:	rcr    BYTE PTR [ebx],0x74
  4154c8:	sub    BYTE PTR [esi+0x78954ef0],dh
  4154ce:	adc    eax,0x148dedd7
  4154d3:	mov    ecx,0x3f50ffc9
  4154d8:	or     BYTE PTR [esi+0x74],bl
  4154db:	repz aas 
  4154dd:	pushf  
  4154de:	inc    ebx
  4154df:	inc    ebp
  4154e0:	dec    BYTE PTR [eax]
  4154e2:	jmp    0x10d8:0xee4dd29
  4154e9:	popf   
  4154ea:	sub    bl,al
  4154ec:	jl     0x4154a1
  4154ee:	lods   al,BYTE PTR ds:[esi]
  4154ef:	in     eax,0x38
  4154f1:	add    BYTE PTR [ebp-0x50],al
  4154f4:	imul   edx,DWORD PTR [ebp+0x1ce9db16],0xd9f13122
  4154fe:	inc    ebx
  4154ff:	dec    esi
  415500:	addr16 dec eax
  415502:	test   al,0x8a
  415504:	sbb    DWORD PTR [ecx+ebx*8-0x1b038048],edx
  41550b:	lods   al,BYTE PTR ds:[esi]
  41550c:	inc    esp
  41550d:	mov    esi,0x61c724fd
  415512:	pop    edx
  415513:	repnz cli 
  415515:	mov    ecx,0x20149ec2
  41551a:	in     eax,0x8e
  41551c:	inc    esp
  41551d:	popa   
  41551e:	inc    ebx
  41551f:	push   edx
  415520:	sbb    al,0xe2
  415522:	scas   al,BYTE PTR es:[edi]
  415523:	mov    al,BYTE PTR [esi+ecx*1+0x6]
  415527:	inc    ecx
  415528:	scas   eax,DWORD PTR es:[edi]
  415529:	out    dx,eax
  41552a:	push   di
  41552c:	add    eax,0x4c47dab2
  415531:	retf   
  415532:	xchg   esp,eax
  415533:	add    eax,0xd737849d
  415539:	mov    ch,0xa6
  41553b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41553c:	jnp    0x41554c
  41553e:	pop    edi
  41553f:	rcr    BYTE PTR [ecx+esi*4-0x4a90f2ba],1
  415546:	sub    BYTE PTR [ebx-0x267501b1],ch
  41554c:	retf   0x83aa
  41554f:	ins    BYTE PTR es:[edi],dx
  415550:	stc    
  415551:	loope  0x415501
  415553:	test   BYTE PTR [ebx-0x282109a4],al
  415559:	dec    edi
  41555a:	int    0x34
  41555c:	or     eax,0xe21c5e47
  415561:	sbb    dh,bh
  415563:	bound  ebx,QWORD PTR [esi]
  415565:	or     eax,0x4f0ab87c
  41556a:	xchg   edx,eax
  41556b:	xor    BYTE PTR [esi+0x3f1c8b93],bl
  415571:	mov    edx,0x62b5e374
  415576:	cmp    al,0x3d
  415578:	cmp    eax,ebp
  41557a:	leave  
  41557b:	(bad)  
  41557c:	gs es and eax,0xb6106fea
  415583:	sub    eax,0xd7c6b237
  415588:	dec    esi
  415589:	ins    DWORD PTR es:[edi],dx
  41558a:	retf   
  41558b:	mov    ds:0x4e04989e,al
  415590:	mov    dh,0x56
  415592:	and    ah,dl
  415594:	mov    dl,0x47
  415597:	mov    al,ds:0x15a7292a
  41559c:	call   0x3b96:0x7b126d08
  4155a3:	ror    DWORD PTR [ebp+0x1],1
  4155a6:	cmp    al,0x7c
  4155a8:	sub    ah,dl
  4155aa:	and    dh,cl
  4155ac:	retf   
  4155ad:	out    0x95,al
  4155af:	mov    dl,BYTE PTR [edi+0x1f8c575e]
  4155b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b6:	scas   al,BYTE PTR es:[edi]
  4155b7:	clc    
  4155b8:	adc    ebx,DWORD PTR [ecx]
  4155ba:	sub    DWORD PTR ds:0x4539651f,0xffffffa3
  4155c1:	fucomi st,st(3)
  4155c3:	dec    ecx
  4155c4:	in     eax,dx
  4155c5:	xchg   edi,eax
  4155c6:	rcl    DWORD PTR [edi],cl
  4155c8:	jns    0x4155c4
  4155ca:	mov    ds:0x99752e67,al
  4155cf:	xlat   BYTE PTR ds:[ebx]
  4155d0:	sbb    eax,0x9426a092
  4155d5:	test   cl,dl
  4155d7:	sbb    BYTE PTR [esi+0x4d],cl
  4155da:	repz fs jns 0x415565
  4155de:	dec    ebp
  4155df:	adc    eax,DWORD PTR [ecx+esi*4]
  4155e2:	mov    ch,0x50
  4155e4:	inc    ebp
  4155e5:	lahf   
  4155e6:	pop    edi
  4155e7:	retf   
  4155e8:	ins    DWORD PTR es:[edi],dx
  4155e9:	into   
  4155ea:	ror    eax,0x61
  4155ed:	jle    0x4155f6
  4155ef:	mov    ah,0xc1
  4155f1:	mov    ebp,0x1b74c21d
  4155f6:	add    DWORD PTR [esi],0x35eaf5c6
  4155fc:	cld    
  4155fd:	xchg   edx,eax
  4155fe:	in     eax,dx
  4155ff:	rol    al,1
  415601:	lahf   
  415602:	outs   dx,BYTE PTR ds:[esi]
  415603:	xchg   ebp,eax
  415604:	dec    ebp
  415605:	(bad)  
  415606:	inc    esi
  415607:	sahf   
  415608:	nop
  415609:	mov    edi,0xc4f8f3f8
  41560e:	jmp    0x413f841e
  415613:	leave  
  415614:	mov    dl,0xf3
  415616:	fst    DWORD PTR [ecx]
  415618:	add    BYTE PTR [edx+ebx*4],bl
  41561b:	not    DWORD PTR [ebp-0x4f]
  41561e:	xchg   cl,bh
  415620:	(bad)  
  415621:	cmp    esp,ebx
  415623:	jo     0x415690
  415625:	out    dx,al
  415626:	neg    DWORD PTR ds:0xcb6e700a
  41562c:	ficom  WORD PTR [ecx+0x2c]
  41562f:	fdivr  QWORD PTR [ecx-0x7be14f77]
  415635:	fdivr  QWORD PTR [ebp+0x62f1d27b]
  41563b:	mov    eax,0x94bc444c
  415640:	in     eax,0x94
  415642:	aas    
  415643:	loopne 0x4155e4
  415645:	lea    ebp,[edi-0x7949e453]
  41564b:	lods   eax,DWORD PTR ds:[esi]
  41564c:	mov    cl,0x71
  41564e:	ficomp DWORD PTR [ecx-0x626cc2c8]
  415654:	pop    edi
  415655:	push   cs
  415656:	out    dx,eax
  415657:	jmp    0x8ccdbecb
  41565c:	fcmove st,st(3)
  41565e:	ret    
  41565f:	lods   eax,DWORD PTR ds:[esi]
  415660:	push   ds
  415661:	fadd   DWORD PTR [esi]
  415663:	stos   DWORD PTR es:[edi],eax
  415664:	stc    
  415665:	stos   DWORD PTR es:[edi],eax
  415666:	cmp    al,0xa0
  415668:	stc    
  415669:	xor    ebx,edx
  41566b:	cs stos DWORD PTR es:[edi],eax
  41566d:	fistp  WORD PTR [ebp-0x7a]
  415670:	pop    esp
  415671:	dec    edi
  415672:	mov    esi,0xcc07827d
  415677:	push   ds
  415678:	add    al,0xc4
  41567a:	test   al,0x4b
  41567c:	cmp    al,0x51
  41567e:	or     al,0xf6
  415680:	cwde   
  415681:	or     BYTE PTR ds:0x571060df,ch
  415687:	xchg   edi,eax
  415688:	pop    es
  415689:	loope  0x4156b2
  41568b:	or     BYTE PTR [ebp-0x60ae58dc],dh
  415691:	or     BYTE PTR [eax],al
  415693:	into   
  415694:	aad    0x77
  415696:	imul   esp,DWORD PTR [eax+ebx*8+0x3f],0xe628815e
  41569e:	pushf  
  41569f:	stos   DWORD PTR es:[edi],eax
  4156a0:	scas   al,BYTE PTR es:[edi]
  4156a1:	mov    esp,0xee1c9ffd
  4156a6:	cmc    
  4156a7:	push   ecx
  4156a8:	pop    ecx
  4156a9:	test   DWORD PTR [ebx-0x2c],esi
  4156ac:	push   0xfffffff9
  4156ae:	aad    0xab
  4156b0:	adc    bh,bl
  4156b2:	adc    eax,esi
  4156b4:	jae    0x415687
  4156b6:	sub    cl,BYTE PTR ds:0x1912a1d8
  4156bc:	dec    ecx
  4156bd:	(bad)  
  4156be:	push   ecx
  4156bf:	mov    bl,0xff
  4156c1:	jmp    0x5c0ec72b
  4156c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c7:	xchg   BYTE PTR [edi-0xf],dl
  4156ca:	xchg   edx,eax
  4156cb:	xchg   ecx,eax
  4156cc:	std    
  4156cd:	shl    DWORD PTR [ebx+0x58],cl
  4156d0:	or     BYTE PTR [eax-0x35a6129],0xfd
  4156d7:	mov    ch,0xd8
  4156d9:	jp     0x41572e
  4156db:	sbb    al,0x4b
  4156dd:	push   ds
  4156de:	stos   BYTE PTR es:[edi],al
  4156df:	test   DWORD PTR [ebp+0x6a],esp
  4156e2:	cmp    bl,BYTE PTR [esi+0x9]
  4156e5:	out    0x9e,eax
  4156e7:	mov    bl,0x54
  4156e9:	adc    DWORD PTR ss:[edx],0xb59acc29
  4156f0:	inc    ebp
  4156f1:	xchg   edi,eax
  4156f2:	adc    al,0xbc
  4156f4:	ret    
  4156f5:	stos   DWORD PTR es:[edi],eax
  4156f6:	xlat   BYTE PTR ds:[ebx]
  4156f7:	or     eax,0x5d97c7d5
  4156fc:	jnp    0x41575a
  4156fe:	(bad)  
  4156ff:	in     eax,dx
  415700:	and    ecx,edx
  415702:	jmp    0x9b7a3997
  415707:	aad    0x43
  415709:	loop   0x415728
  41570b:	cmp    al,BYTE PTR [ebp-0x49]
  41570e:	xchg   ecx,eax
  41570f:	dec    ebx
  415710:	mov    edi,0x422b8f89
  415715:	or     al,0xd1
  415717:	lahf   
  415718:	or     al,0xbc
  41571a:	dec    ecx
  41571b:	mov    BYTE PTR [ecx-0x185fd2c6],ah
  415721:	lods   al,BYTE PTR ds:[esi]
  415722:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415724:	rcl    DWORD PTR [edx+esi*2-0x62a7876a],0x7b
  41572c:	dec    ecx
  41572d:	lods   eax,DWORD PTR ds:[esi]
  41572e:	lods   al,BYTE PTR ds:[esi]
  41572f:	cmp    eax,0xfcce0c09
  415734:	jg     0x4156f3
  415736:	test   al,0xe2
  415739:	stc    
  41573a:	dec    eax
  41573b:	popa   
  41573c:	fdivr  DWORD PTR [ebx+0xc6b8d11]
  415742:	push   ebp
  415743:	adc    ch,BYTE PTR [ebx+0x13]
  415746:	dec    ebx
  415747:	add    dh,BYTE PTR [ecx+0x73cfa87b]
  41574d:	xor    BYTE PTR [ebp-0x4f],dh
  415750:	call   0xb9bfa671
  415755:	imul   edx,esp,0x4ab82bc
  41575b:	es idiv dh
  41575e:	mov    ds:0xc2460187,eax
  415763:	pop    eax
  415764:	daa    
  415765:	mov    ds:0xcb66588a,al
  41576a:	outs   dx,DWORD PTR ds:[esi]
  41576b:	sbb    edx,DWORD PTR [ebx]
  41576d:	jo     0x415736
  41576f:	sub    BYTE PTR [ecx-0x6c],bl
  415772:	xchg   ch,dl
  415774:	push   esp
  415775:	fwait
  415776:	pop    ecx
  415777:	ins    BYTE PTR es:[edi],dx
  415778:	adc    dh,ah
  41577a:	(bad)  
  41577b:	call   0x3c9d:0x322aa86
  415782:	das    
  415783:	pop    es
  415784:	push   ss
  415785:	cli    
  415786:	and    eax,0xf38cefac
  41578b:	(bad)  
  41578c:	iret   
  41578d:	mov    ecx,0xc15958ea
  415792:	sub    esp,DWORD PTR [ebp+0x20]
  415795:	and    BYTE PTR [ebp+0x239b069],dh
  41579b:	mov    ds:0xf5811206,eax
  4157a0:	mov    al,ds:0x3086d52a
  4157a5:	sub    al,0x0
  4157a7:	add    bl,BYTE PTR [ebx-0x65]
  4157aa:	mov    ecx,0xd01b6675
  4157af:	(bad)  
  4157b0:	and    eax,eax
  4157b2:	inc    eax
  4157b3:	(bad)  
  4157b4:	inc    esi
  4157b5:	ds ret 
  4157b7:	xchg   edi,eax
  4157b8:	push   edi
  4157b9:	lock mov dl,0x7e
  4157bc:	mov    al,ds:0xd062a680
  4157c1:	or     BYTE PTR [esi],bh
  4157c3:	imul   edx,DWORD PTR [esi+0x7e],0x76154968
  4157ca:	jecxz  0x415771
  4157cc:	cs push ecx
  4157ce:	shl    BYTE PTR [esi-0x3050dde4],cl
  4157d4:	gs push cs
  4157d6:	loopne 0x415812
  4157d8:	jp     0x4157e2
  4157da:	fisubr DWORD PTR [esi-0x1b]
  4157dd:	ja     0x415802
  4157df:	pop    ebp
  4157e0:	in     eax,0x8a
  4157e2:	pop    es
  4157e3:	outs   dx,BYTE PTR ds:[esi]
  4157e4:	in     eax,0xba
  4157e6:	add    bh,BYTE PTR [ebx-0x7e54ebdd]
  4157ec:	inc    ebp
  4157ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ee:	mov    eax,ds:0x80c87d51
  4157f3:	and    DWORD PTR [esi],ebx
  4157f5:	mov    edi,0x39d62278
  4157fa:	out    dx,al
  4157fb:	dec    esi
  4157fc:	jg     0x41585f
  4157fe:	jns    0x415854
  415800:	mov    ebx,0x507d583d
  415805:	jns    0x415812
  415807:	outs   dx,BYTE PTR ds:[esi]
  415808:	sahf   
  415809:	dec    ebx
  41580a:	cdq    
  41580b:	jg     0x415863
  41580d:	loopne 0x415846
  41580f:	test   eax,0xcc6a40ed
  415814:	ins    DWORD PTR es:[edi],dx
  415815:	repnz sub ah,cl
  415818:	jb     0x415860
  41581a:	outs   dx,BYTE PTR ds:[esi]
  41581b:	outs   dx,BYTE PTR ds:[esi]
  41581c:	xchg   DWORD PTR [ebx],esi
  41581e:	sbb    esp,DWORD PTR [ebx+0x7d]
  415821:	pusha  
  415822:	fidivr WORD PTR [ecx]
  415824:	stos   DWORD PTR es:[edi],eax
  415825:	icebp  
  415826:	icebp  
  415827:	add    DWORD PTR [ebp+0x54],esp
  41582a:	push   ebx
  41582b:	cmp    eax,0x5748a8ce
  415830:	jmp    0xf446:0x5ce3e726
  415837:	sub    DWORD PTR [edx+0x3c058731],ebx
  41583d:	jp     0x415878
  41583f:	ins    DWORD PTR es:[edi],dx
  415840:	cld    
  415841:	dec    ebp
  415842:	fst    QWORD PTR [esi-0x5a4723b9]
  415848:	mov    al,ds:0x13589029
  41584d:	mov    fs,WORD PTR [eax+0x5d]
  415850:	xor    esp,ebp
  415852:	ficomp WORD PTR [ebx-0x19526354]
  415858:	hlt    
  415859:	sub    eax,0xeb8b47a6
  41585e:	xchg   esi,eax
  41585f:	pop    ds
  415860:	stc    
  415861:	aaa    
  415862:	jnp    0x41587f
  415864:	pop    ecx
  415865:	sbb    ebp,DWORD PTR [edx]
  415867:	inc    esp
  415868:	rol    BYTE PTR [edi],cl
  41586a:	sub    ah,dh
  41586c:	dec    ecx
  41586d:	ins    DWORD PTR es:[edi],dx
  41586e:	jbe    0x4158c4
  415870:	sub    al,0xb8
  415872:	pop    es
  415873:	sub    DWORD PTR [ebx+0x63],ecx
  415876:	inc    ebp
  415877:	cmp    dh,BYTE PTR [esi+0x6ecb14f4]
  41587d:	imul   ebp,DWORD PTR [edx],0x5005dfb9
  415883:	fisub  DWORD PTR [ecx-0x79750119]
  415889:	xchg   ebx,eax
  41588a:	ds jb  0x415841
  41588d:	mov    edi,0xb4c49c98
  415892:	push   edx
  415893:	jg     0x41581f
  415895:	shr    BYTE PTR [edx+0x2f],1
  415898:	xchg   ebx,eax
  415899:	ret    
  41589a:	dec    ebx
  41589b:	adc    eax,0x80921654
  4158a0:	push   es
  4158a1:	or     al,0x31
  4158a3:	mov    DWORD PTR [edx+0xc7a0b51],esi
  4158a9:	dec    ecx
  4158aa:	and    eax,0xe34d0c86
  4158af:	sub    dh,BYTE PTR [ebx]
  4158b1:	cmp    DWORD PTR [esi-0x2c],ebx
  4158b4:	or     al,0xf1
  4158b6:	mov    WORD PTR [ebp-0x35fd60b5],cs
  4158bc:	fnstcw WORD PTR [edi]
  4158be:	out    0x92,al
  4158c0:	sahf   
  4158c1:	xlat   BYTE PTR ds:[ebx]
  4158c2:	xor    BYTE PTR [eax],ah
  4158c4:	sbb    al,0xb5
  4158c6:	cwde   
  4158c7:	push   ebp
  4158c8:	in     al,0xd5
  4158ca:	jge    0x41588d
  4158cc:	pop    ebp
  4158cd:	push   es
  4158ce:	mov    DWORD PTR [esi+edx*1-0x73],ebp
  4158d2:	iret   
  4158d3:	or     al,BYTE PTR [eax+eiz*1]
  4158d6:	mov    esp,0xac2bb3db
  4158db:	jmp    0x912b:0xe9d37fec
  4158e2:	or     eax,0xefb02ba9
  4158e7:	mov    esp,0xe78ba8d7
  4158ec:	xor    esi,DWORD PTR [ebx-0x151d519a]
  4158f2:	adc    al,0xa6
  4158f4:	out    0x97,eax
  4158f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158f7:	add    DWORD PTR [ecx],esp
  4158f9:	inc    ebp
  4158fa:	clc    
  4158fb:	xlat   BYTE PTR ds:[ebx]
  4158fc:	stc    
  4158fd:	mov    bh,0xaf
  4158ff:	addr16 or al,0x23
  415902:	out    0xb5,al
  415904:	pushf  
  415905:	mov    eax,0x88a36228
  41590a:	and    DWORD PTR [ecx],ecx
  41590c:	mov    ebx,0xd47f96b5
  415911:	imul   ebx,DWORD PTR [esi],0xffffffcf
  415914:	sub    BYTE PTR [ebx-0x5a0d704e],ah
  41591a:	mov    al,0xb6
  41591c:	mov    ecx,0xe9674db7
  415921:	sub    DWORD PTR [eax],edi
  415923:	jl     0x4158db
  415925:	xor    DWORD PTR [esi+0x5a],edx
  415928:	pop    ss
  415929:	fsubr  DWORD PTR [edi+0x28]
  41592c:	mov    al,ds:0x44f947d3
  415931:	idiv   DWORD PTR [ecx]
  415933:	sbb    eax,0xef80fcc6
  415938:	rcl    DWORD PTR [ebx],1
  41593a:	push   edx
  41593b:	outs   dx,DWORD PTR ds:[esi]
  41593c:	push   eax
  41593d:	pop    es
  41593e:	jp     0x4158f9
  415940:	push   esp
  415941:	sub    DWORD PTR [esi+0x454319d],0xc333e85c
  41594b:	and    eax,0x4559b43f
  415950:	inc    edx
  415951:	pop    eax
  415952:	pushf  
  415953:	leave  
  415954:	or     BYTE PTR [edx+0xcb907e2],bl
  41595a:	dec    ebp
  41595b:	jns    0x415997
  41595d:	push   0x435b809a
  415962:	mov    eax,0x7b53dca5
  415967:	cli    
  415968:	outs   dx,BYTE PTR ds:[esi]
  415969:	jl     0x4159bc
  41596b:	fbstp  TBYTE PTR [ebx-0x4a44e1f3]
  415971:	into   
  415972:	mov    ds:0x5adcca54,al
  415977:	bound  eax,QWORD PTR [ecx+0x8]
  41597a:	adc    esp,DWORD PTR [eax]
  41597c:	xchg   ebx,eax
  41597d:	into   
  41597e:	sub    al,0xae
  415980:	bound  ebp,QWORD PTR [esi]
  415982:	cdq    
  415983:	jle    0x4159c7
  415985:	retf   
  415986:	imul   DWORD PTR [esp+ebx*8]
  415989:	aad    0x7
  41598b:	enter  0x85d3,0xda
  41598f:	cmp    DWORD PTR ds:0x325d563e,eax
  415995:	loop   0x41593c
  415997:	loope  0x415967
  415999:	add    ebp,DWORD PTR [eax+0x1c4fd0e]
  41599f:	je     0x4159b1
  4159a1:	mov    ah,BYTE PTR [ecx]
  4159a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159a4:	mov    WORD PTR [edi+0x4b],ds
  4159a7:	sahf   
  4159a8:	jecxz  0x415971
  4159aa:	fcom   DWORD PTR [edi+0x7c]
  4159ad:	bnd jno 0x415a02
  4159b0:	fidivr WORD PTR [ebp-0x43]
  4159b3:	add    al,0x6f
  4159b5:	leave  
  4159b6:	std    
  4159b7:	add    al,0xa7
  4159b9:	mov    eax,0x75290b09
  4159be:	mov    ecx,0xfe4897fa
  4159c3:	xchg   ebx,eax
  4159c4:	test   DWORD PTR [ebp+0x3c],0xba8f9f2d
  4159cb:	in     al,0x18
  4159cd:	fstp   DWORD PTR [edi]
  4159cf:	pop    ecx
  4159d0:	xchg   edx,eax
  4159d1:	ja     0x41596b
  4159d3:	stc    
  4159d4:	mov    BYTE PTR [ebx-0x66a6b976],cl
  4159da:	xor    BYTE PTR [ebx+0x470ef1cb],cl
  4159e0:	pop    ebx
  4159e1:	jne    0xcc6b52dc
  4159e7:	adc    bh,BYTE PTR [edi]
  4159e9:	xchg   edx,eax
  4159ea:	fadd   st(5),st
  4159ec:	hlt    
  4159ed:	mov    dl,0xd3
  4159ef:	dec    ecx
  4159f0:	pop    edi
  4159f1:	bound  edx,QWORD PTR [edx+0x6827ca33]
  4159f7:	fnstsw WORD PTR [ebx-0x3ce995fd]
  4159fd:	out    0x2a,eax
  4159ff:	sub    eax,0x653eaf8f
  415a04:	xchg   edi,eax
  415a05:	pushf  
  415a06:	adc    eax,0x4f0473b0
  415a0b:	rep lods al,BYTE PTR ds:[esi]
  415a0d:	inc    esi
  415a0e:	outs   dx,BYTE PTR ds:[esi]
  415a0f:	pop    es
  415a10:	lods   eax,DWORD PTR ds:[esi]
  415a11:	xchg   esi,eax
  415a12:	pop    ebp
  415a13:	pop    ebx
  415a14:	mov    ch,0x2f
  415a16:	fisubr DWORD PTR [ebx]
  415a18:	sbb    DWORD PTR [ebp-0x5141f7d],ebx
  415a1e:	jnp    0x415a43
  415a20:	jbe    0x4159f9
  415a22:	push   eax
  415a23:	jne    0x4159e8
  415a25:	in     al,dx
  415a26:	push   esp
  415a27:	adc    al,0x9a
  415a29:	pop    esi
  415a2a:	sub    ecx,DWORD PTR [edi+0x11]
  415a2d:	test   edx,esp
  415a2f:	jbe    0x415a06
  415a31:	hlt    
  415a32:	dec    esi
  415a33:	hlt    
  415a34:	retf   0x6528
  415a37:	cmp    esp,esp
  415a39:	mov    dl,0x45
  415a3b:	mov    esi,0xe31d27cb
  415a40:	and    esi,edi
  415a42:	sub    eax,0x4e56a932
  415a47:	xor    DWORD PTR [edi-0x7f],edx
  415a4a:	mov    al,ds:0xbc8fd17b
  415a4f:	ret    
  415a50:	cmp    ah,dh
  415a52:	push   ebx
  415a53:	cmp    ch,BYTE PTR [eax]
  415a55:	push   cs
  415a56:	jge    0x4159eb
  415a58:	cmp    edi,DWORD PTR [edx+0x664ffd32]
  415a5e:	nop
  415a5f:	cdq    
  415a60:	and    cl,BYTE PTR [ebp+0x5]
  415a63:	test   eax,0xe4375645
  415a68:	frstor [ebx]
  415a6a:	cdq    
  415a6b:	out    dx,eax
  415a6c:	(bad)  
  415a6d:	cwde   
  415a6e:	adc    edx,DWORD PTR [ecx]
  415a70:	test   DWORD PTR [edi-0x76],0x1ccfa5b7
  415a77:	pusha  
  415a78:	mov    bl,0xeb
  415a7a:	push   ebp
  415a7b:	adc    eax,0x90a5ab34
  415a80:	mov    ebx,0xa6dd3146
  415a85:	xor    ecx,DWORD PTR [esp+0xa36ae5]
  415a8c:	popa   
  415a8d:	das    
  415a8e:	and    eax,0x32ce6303
  415a93:	sbb    DWORD PTR [ecx+0x67],esi
  415a96:	push   ebp
  415a97:	(bad)  
  415a99:	sti    
  415a9a:	jnp    0x415a51
  415a9c:	pop    ebp
  415a9d:	jb     0x415ade
  415a9f:	call   0x673065bd
  415aa4:	mov    al,ds:0xe74e6b45
  415aa9:	adc    DWORD PTR [eax+0x2b],ecx
  415aac:	mov    dl,0x34
  415aae:	stos   DWORD PTR es:[edi],eax
  415aaf:	div    BYTE PTR [eax+0x13]
  415ab2:	fcmovne st,st(0)
  415ab4:	and    ebx,ebp
  415ab6:	mov    esp,0xc5d099d2
  415abb:	outs   dx,BYTE PTR ds:[esi]
  415abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415abd:	test   eax,0x721b53e0
  415ac2:	fidiv  DWORD PTR [ebx-0x545228b4]
  415ac8:	loopne 0x415b40
  415aca:	xchg   esp,eax
  415acb:	add    al,0xbe
  415acd:	push   es
  415ace:	mov    ah,0xc1
  415ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad1:	xchg   ebx,eax
  415ad2:	mov    ah,0x10
  415ad4:	mov    cl,0x52
  415ad6:	into   
  415ad7:	dec    ecx
  415ad8:	dec    eax
  415ad9:	mov    esp,0xb4e20211
  415ade:	push   edx
  415adf:	ret    0xaef3
  415ae2:	out    0xf,eax
  415ae4:	mov    ebp,0x8f97c0a3
  415ae9:	vunpckhps ymm3,ymm5,YMMWORD PTR ds:0x4b90890a
  415af1:	dec    DWORD PTR fs:[ebx+ebp*8-0x6e76d210]
  415af9:	(bad)  
  415afa:	mov    eax,ss:0xa1f46a02
  415b00:	inc    edi
  415b01:	cmp    ecx,DWORD PTR [edx]
  415b03:	mov    ds:0x25eddc40,eax
  415b08:	cmc    
  415b09:	jb     0x415b7c
  415b0b:	sahf   
  415b0c:	wbinvd 
  415b0e:	ins    DWORD PTR es:[edi],dx
  415b0f:	sub    al,0x57
  415b11:	sahf   
  415b12:	ja     0x415acf
  415b14:	pop    eax
  415b15:	xor    al,0xac
  415b17:	ret    
  415b18:	jae    0x415add
  415b1a:	xchg   DWORD PTR ds:[eax+0x3ad0c996],ebp
  415b21:	ja     0x415b15
  415b23:	sar    DWORD PTR [edx-0x30445c1b],0x88
  415b2a:	xchg   esi,eax
  415b2b:	cs push esi
  415b2d:	cwde   
  415b2e:	call   0xd720d661
  415b33:	js     0x415b3f
  415b35:	rcl    DWORD PTR [ecx+0x1e4e8bae],1
  415b3b:	jecxz  0x415b4a
  415b3d:	push   esp
  415b3e:	mov    ah,BYTE PTR [ebx+0x3e]
  415b41:	stos   DWORD PTR es:[edi],eax
  415b42:	mov    edx,0x48534a8d
  415b47:	push   esp
  415b48:	mov    ds:0xa1e45f59,al
  415b4d:	cmp    eax,0x7465ab46
  415b52:	mov    edx,0xd6a6ecbe
  415b57:	retf   
  415b58:	dec    DWORD PTR [edi]
  415b5a:	popa   
  415b5b:	cmc    
  415b5c:	dec    ebx
  415b5d:	aaa    
  415b5e:	fiadd  WORD PTR [eiz*2-0x6f893d0c]
  415b65:	push   ebp
  415b66:	mov    WORD PTR [edx-0x68],cs
  415b69:	push   ecx
  415b6a:	pop    esp
  415b6b:	inc    edi
  415b6c:	stos   DWORD PTR es:[edi],eax
  415b6d:	adc    BYTE PTR [ecx+0x42],bl
  415b70:	es add cl,ch
  415b73:	lahf   
  415b74:	xchg   edi,eax
  415b75:	and    eax,0xd349eb7a
  415b7a:	pop    edx
  415b7b:	push   ss
  415b7c:	dec    esp
  415b7d:	aad    0xe7
  415b7f:	cli    
  415b80:	mov    ebp,DWORD PTR [edi+0x15e5757b]
  415b86:	dec    ecx
  415b87:	or     eax,0x4afa95b6
  415b8c:	xchg   ecx,eax
  415b8d:	imul   edx,ecx,0x4ec3c095
  415b93:	in     eax,0x42
  415b95:	jmp    FWORD PTR [edi+ecx*1+0x5a]
  415b99:	ja     0x415c1a
  415b9b:	mov    ah,0x9a
  415b9d:	and    DWORD PTR [ecx+0x5dd1a53c],0x6d
  415ba4:	push   ds
  415ba5:	adc    edi,0x725852f2
  415bab:	cmp    DWORD PTR [esi+0x48],ebx
  415bae:	(bad)  
  415baf:	in     al,dx
  415bb0:	pop    es
  415bb1:	push   ds
  415bb2:	inc    DWORD PTR [ebp-0x6d452374]
  415bb8:	sub    eax,0x33a1f9a4
  415bbd:	mov    ecx,fs
  415bbf:	mov    dl,BYTE PTR ds:0xa4653e5e
  415bc5:	fisub  DWORD PTR [edi]
  415bc7:	jnp    0x415c3c
  415bc9:	(bad)  
  415bca:	fnstenv [eax-0x4fc79928]
  415bd0:	xchg   DWORD PTR [esi],esp
  415bd2:	jno    0x415c04
  415bd4:	cmp    DWORD PTR [ebx],edx
  415bd6:	in     eax,0xcc
  415bd8:	inc    ebx
  415bd9:	mov    al,ds:0xcdf2cec8
  415bde:	sub    al,0xdb
  415be0:	jg     0x415be9
  415be2:	xlat   BYTE PTR ds:[ebx]
  415be3:	aam    0xb4
  415be5:	sbb    ch,BYTE PTR [eax]
  415be7:	pusha  
  415be8:	mov    bh,0x3f
  415bea:	add    BYTE PTR ds:0xa425aabd,bl
  415bf0:	push   ss
  415bf1:	pop    ds
  415bf2:	add    DWORD PTR ds:0x8cffb235,eax
  415bf8:	push   cs
  415bf9:	cli    
  415bfa:	std    
  415bfb:	adc    eax,0x149c54f5
  415c00:	scas   al,BYTE PTR es:[edi]
  415c01:	(bad)  
  415c02:	enter  0xef8e,0x58
  415c06:	xor    eax,0x4e57b9bf
  415c0b:	fs ror dl,cl
  415c0e:	dec    eax
  415c0f:	test   DWORD PTR [eax+0x2e],eax
  415c12:	sub    dh,ch
  415c14:	fisttp WORD PTR [esi-0x6e]
  415c17:	xchg   BYTE PTR [eax],bl
  415c19:	test   eax,ebx
  415c1b:	xchg   BYTE PTR [edx+0x126e77e1],bl
  415c21:	add    DWORD PTR [ebp-0x77719586],ebp
  415c27:	xchg   edx,eax
  415c28:	fild   WORD PTR [ecx+0x1]
  415c2b:	gs inc ecx
  415c2d:	jne    0x415bc2
  415c2f:	mov    dl,0x6a
  415c31:	iret   
  415c32:	sbb    BYTE PTR [edx],ah
  415c34:	inc    edi
  415c35:	js     0x415c09
  415c37:	xchg   ecx,edi
  415c39:	dec    ebp
  415c3a:	sub    DWORD PTR [ebx-0x1],eax
  415c3d:	pop    edi
  415c3e:	ds stos BYTE PTR es:[edi],al
  415c40:	imul   ecx,DWORD PTR ds:0xe1d8495e,0x26
  415c47:	xchg   esp,eax
  415c48:	aas    
  415c49:	dec    ebp
  415c4a:	push   ebp
  415c4b:	adc    bh,BYTE PTR [esi]
  415c4d:	cwde   
  415c4e:	inc    cx
  415c50:	outs   dx,BYTE PTR ds:[esi]
  415c51:	sbb    bl,BYTE PTR [ebx-0x2a14eacb]
  415c57:	hlt    
  415c58:	mov    al,ds:0x12a7c850
  415c5d:	cmp    BYTE PTR [eax+ecx*8],al
  415c60:	push   ds
  415c61:	pop    ebp
  415c62:	mov    edi,0x97920811
  415c67:	push   esi
  415c68:	cs inc cx
  415c6b:	adc    BYTE PTR [ebp-0x47],0xf4
  415c6f:	inc    esi
  415c70:	cmp    DWORD PTR [ebx],edx
  415c72:	push   eax
  415c73:	push   0xffffff95
  415c75:	push   ss
  415c76:	nop
  415c77:	sbb    al,BYTE PTR [edi-0x5426d8d3]
  415c7d:	mov    ecx,0xa4fe1849
  415c82:	sbb    dh,BYTE PTR [ecx+0x39f6f6b1]
  415c88:	call   0x21ca:0x53a0d653
  415c8f:	dec    edi
  415c90:	test   BYTE PTR [edi+0x64],dh
  415c93:	daa    
  415c94:	dec    edx
  415c95:	ja     0x415c2f
  415c97:	sub    al,0xe2
  415c99:	mov    eax,0xf00732a6
  415c9e:	mul    bh
  415ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca1:	ins    DWORD PTR es:[edi],dx
  415ca2:	pop    esi
  415ca3:	test   al,0x5
  415ca5:	jo     0x415cfc
  415ca7:	sub    esp,DWORD PTR es:[eax]
  415caa:	jmp    0x8999:0xb493fbaf
  415cb1:	stc    
  415cb2:	mov    WORD PTR [eax+0x753bb1a1],?
  415cb8:	cmp    BYTE PTR [edi],cl
  415cba:	inc    edx
  415cbb:	pop    ecx
  415cbc:	cmp    DWORD PTR [esi+0x7f727c15],esp
  415cc2:	ror    ecx,1
  415cc4:	dec    ebx
  415cc5:	ret    
  415cc6:	retf   
  415cc7:	xor    BYTE PTR [edx-0x15ad7461],0x3
  415cce:	sbb    ah,BYTE PTR [ebx-0xa89d404]
  415cd4:	add    al,0x6f
  415cd6:	cmp    cl,BYTE PTR [esi-0x6a]
  415cd9:	rol    DWORD PTR [edi+0x6c8e8d93],1
  415cdf:	repz cdq 
  415ce1:	mov    bh,0xf0
  415ce3:	cmp    DWORD PTR [edi],esp
  415ce5:	jno    0x415ccd
  415ce7:	jmp    0x415cca
  415ce9:	and    BYTE PTR [ebx],ch
  415ceb:	aaa    
  415cec:	sahf   
  415ced:	(bad)  
  415cee:	imul   ebx,esi,0xfffffffd
  415cf1:	and    eax,0x8996b2b1
  415cf6:	jecxz  0x415d3f
  415cf8:	add    DWORD PTR [edi-0x52aedbaf],eax
  415cfe:	repnz add bh,BYTE PTR [esi+0x44d63192]
  415d05:	sub    edi,DWORD PTR [esp+esi*1-0x1f]
  415d09:	add    DWORD PTR [ebp+0xa8a82e6],esp
  415d0f:	aaa    
  415d10:	fs sti 
  415d12:	xor    edx,DWORD PTR [ecx+0x4d]
  415d15:	mov    eax,edi
  415d17:	std    
  415d18:	sub    al,0x1f
  415d1a:	xchg   esi,eax
  415d1b:	xchg   edi,eax
  415d1c:	call   0x9bb2:0xd8aaf83d
  415d23:	in     al,0x77
  415d25:	jmp    0x3e76c816
  415d2a:	pop    ebp
  415d2b:	loope  0x415d41
  415d2d:	loope  0x415d4a
  415d2f:	xor    edi,DWORD PTR [esi+0x47]
  415d32:	cld    
  415d33:	ins    BYTE PTR es:[edi],dx
  415d34:	inc    ecx
  415d35:	sahf   
  415d36:	mov    dl,0x9c
  415d38:	cmp    eax,0x2f54f806
  415d3d:	jnp    0x415ccf
  415d3f:	adc    DWORD PTR [ebx],0x35
  415d42:	mov    ah,0x5a
  415d44:	xor    ch,BYTE PTR [ecx+0x27]
  415d47:	xchg   ecx,eax
  415d49:	aam    0xc0
  415d4b:	fidivr DWORD PTR [eax+edx*1-0x2212e4e8]
  415d52:	and    dh,BYTE PTR [edi+0x7caf9e70]
  415d58:	inc    edx
  415d59:	scas   al,BYTE PTR es:[edi]
  415d5a:	adc    bl,BYTE PTR [eax+0x1]
  415d5d:	add    BYTE PTR [eax+0xd],bl
  415d60:	out    dx,al
  415d61:	cmc    
  415d62:	icebp  
  415d63:	imul   ecx,DWORD PTR [esi],0xffffff93
  415d66:	das    
  415d67:	pop    ecx
  415d68:	cmp    bl,BYTE PTR [esi]
  415d6a:	dec    ecx
  415d6b:	pop    edx
  415d6c:	inc    ebx
  415d6d:	mov    bh,0x3c
  415d6f:	pushf  
  415d70:	push   eax
  415d71:	movd   DWORD PTR ds:0x823275d7,mm5
  415d78:	or     cl,BYTE PTR [edi]
  415d7a:	adc    DWORD PTR [esi-0x26117255],0xe59135dc
  415d84:	xchg   edi,eax
  415d85:	jg     0x415d1e
  415d87:	ret    
  415d88:	loope  0x415dd5
  415d8a:	adc    BYTE PTR [ebp+0x2477d476],0x87
  415d91:	jle    0x415d8a
  415d93:	inc    ecx
  415d94:	stc    
  415d95:	out    0xb7,eax
  415d97:	call   0x3061:0x9ea1fc96
  415d9e:	fcomp  DWORD PTR [ebx]
  415da0:	adc    eax,0xa3f9fceb
  415da5:	push   0xc58ca44
  415daa:	fild   QWORD PTR [ebp+0xb69ad14]
  415db0:	ins    BYTE PTR es:[edi],dx
  415db1:	das    
  415db2:	in     eax,0x2
  415db4:	fs addr16 (bad) 
  415db8:	arpl   WORD PTR [edi],bp
  415dba:	xor    ah,bl
  415dbc:	into   
  415dbd:	lds    esp,FWORD PTR [bx-0x6f7b]
  415dc2:	xchg   BYTE PTR [ecx],ah
  415dc4:	dec    eax
  415dc5:	test   al,0xf8
  415dc7:	jmp    0x415d78
  415dc9:	(bad)  
  415dca:	xor    eax,0x9f6e2fc2
  415dcf:	fcomip st,st(4)
  415dd1:	pop    ds
  415dd2:	pop    ss
  415dd3:	loop   0x415d5d
  415dd5:	dec    eax
  415dd6:	inc    ebp
  415dd7:	sahf   
  415dd8:	add    eax,0xedf9b063
  415ddd:	mov    dh,BYTE PTR [ebx]
  415ddf:	out    dx,al
  415de0:	daa    
  415de1:	nop
  415de2:	xor    al,0xb3
  415de4:	pop    ecx
  415de5:	mov    cs,ebx
  415de7:	inc    esi
  415de8:	or     esi,eax
  415dea:	nop
  415deb:	popf   
  415dec:	nop
  415ded:	add    al,0xd4
  415def:	pop    edx
  415df0:	jmp    0xcccf85ca
  415df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df6:	inc    esp
  415df7:	xor    eax,0xbd89246d
  415dfc:	mov    ax,WORD PTR [ebx]
  415dff:	retf   
  415e00:	ss pusha 
  415e02:	sbb    al,0xe8
  415e04:	or     DWORD PTR [eax-0x52d582c2],edx
  415e0a:	mov    ah,0xb1
  415e0c:	push   esp
  415e0d:	or     BYTE PTR [esi],bh
  415e0f:	clc    
  415e10:	(bad)  
  415e11:	fidiv  DWORD PTR [ebp-0xe20d504]
  415e17:	mov    DWORD PTR [ebx+0x60cfdefc],esp
  415e1d:	pop    edx
  415e1e:	lea    eax,[edx]
  415e20:	pop    ss
  415e21:	sbb    ebp,edx
  415e23:	js     0x415e9d
  415e25:	push   eax
  415e26:	lock xor dl,BYTE PTR [ebp+0x1c]
  415e2a:	mov    DWORD PTR [eiz*8+0x1fb6ccdb],ebp
  415e31:	outs   dx,DWORD PTR ds:[esi]
  415e32:	aad    0x1d
  415e34:	add    dh,BYTE PTR [edi+0x6a]
  415e37:	in     al,dx
  415e38:	mov    dh,0x6a
  415e3a:	mov    bh,0xb
  415e3c:	jne    0x415de5
  415e3e:	call   0xafba:0xe99a9b09
  415e45:	dec    edi
  415e46:	dec    esp
  415e47:	pop    esp
  415e48:	mov    ah,0x2b
  415e4a:	dec    esi
  415e4b:	bound  ebp,QWORD PTR [edi-0x541b097a]
  415e51:	mov    ebx,0x18229d10
  415e56:	fimul  WORD PTR [edx+0x16]
  415e59:	xor    al,0x32
  415e5b:	push   ebp
  415e5c:	jae    0x415e77
  415e5e:	ror    BYTE PTR [ecx],1
  415e60:	dec    edi
  415e61:	rcr    dl,cl
  415e63:	stos   DWORD PTR es:[edi],eax
  415e64:	jno    0x415e86
  415e66:	lds    edi,FWORD PTR [eax]
  415e68:	lahf   
  415e69:	lods   al,BYTE PTR ds:[esi]
  415e6a:	cmp    esi,esi
  415e6c:	mov    ds:0x9d092ffe,al
  415e71:	in     eax,0xf8
  415e73:	pusha  
  415e74:	xchg   BYTE PTR [edi+edi*4+0x7f96b306],cl
  415e7b:	sar    BYTE PTR [ebx+edi*8],0xfb
  415e7f:	mov    ebp,0x262669cb
  415e84:	or     dl,BYTE PTR [ebx-0xd]
  415e87:	mov    ds:0x3fdc3127,al
  415e8c:	mov    ds,WORD PTR [edx+ecx*8+0x3bd1a636]
  415e93:	(bad)  
  415e94:	fisub  DWORD PTR ds:0x56d1f380
  415e9a:	mov    bh,ah
  415e9c:	pop    ss
  415e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e9e:	dec    eax
  415e9f:	mov    DWORD PTR [edi],ebp
  415ea1:	inc    ecx
  415ea2:	mov    eax,0x95ad99e2
  415ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ea8:	out    dx,eax
  415ea9:	push   ebp
  415eaa:	cmp    BYTE PTR [eax],0xdb
  415ead:	adc    eax,0xdfeeadf1
  415eb2:	cdq    
  415eb3:	adc    al,0x20
  415eb5:	imul   edi,ecx,0x35
  415eb8:	imul   edi,DWORD PTR [edi+0x38],0xc0b42919
  415ebf:	adc    al,0xe
  415ec1:	inc    eax
  415ec2:	popf   
  415ec3:	popa   
  415ec4:	div    DWORD PTR [ecx]
  415ec6:	repnz mov edx,0x7e264438
  415ecc:	dec    esi
  415ecd:	mov    bl,0xf8
  415ecf:	(bad)  
  415ed0:	call   0xaecc:0x2ecaa481
  415ed7:	sti    
  415ed8:	pop    ds
  415ed9:	icebp  
  415eda:	cdq    
  415edb:	xor    dl,bl
  415edd:	pop    ecx
  415ede:	scas   eax,DWORD PTR es:[edi]
  415edf:	lahf   
  415ee0:	jp     0x415f5c
  415ee2:	jno    0x415ed7
  415ee4:	xor    eax,0x629d5aab
  415ee9:	lea    eax,[edi+0x73]
  415eec:	jecxz  0x415ebe
  415eee:	cmc    
  415eef:	fadd   QWORD PTR [edi+0x31]
  415ef2:	(bad)  
  415ef3:	outs   dx,DWORD PTR ds:[esi]
  415ef4:	dec    esi
  415ef5:	sub    DWORD PTR [eax],ebp
  415ef7:	xchg   ecx,eax
  415ef8:	jge    0x415ed9
  415efa:	mov    BYTE PTR [ecx+0x5f9c80fc],ah
  415f00:	sub    eax,0x49514805
  415f05:	pop    bx
  415f07:	sub    ebx,ebx
  415f09:	in     eax,0xba
  415f0b:	out    dx,eax
  415f0c:	retf   
  415f0d:	test   BYTE PTR [edx+0x6b],ah
  415f10:	mov    esp,0x72e63e8a
  415f15:	mov    ebx,DWORD PTR [eax+0x77b3956c]
  415f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f1c:	xor    edx,DWORD PTR [ebx-0x16]
  415f1f:	in     eax,0xda
  415f21:	xchg   edx,eax
  415f22:	or     cl,BYTE PTR [ecx-0x148b2792]
  415f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f29:	xchg   DWORD PTR ds:0x6c669d11,ecx
  415f2f:	dec    edi
  415f30:	lds    esi,FWORD PTR [ecx+edx*8-0x2f]
  415f34:	popa   
  415f35:	aaa    
  415f36:	cmp    DWORD PTR [ecx],ebp
  415f38:	fistp  DWORD PTR [ecx+0x25]
  415f3b:	aam    0xb2
  415f3d:	call   0x641e:0x571a729c
  415f44:	add    DWORD PTR [edi],eax
  415f46:	sar    BYTE PTR [ecx-0x4c77f091],1
  415f4c:	ss pushf 
  415f4e:	rcr    BYTE PTR [di],cl
  415f51:	push   0x54
  415f53:	mov    cl,0x40
  415f55:	sti    
  415f56:	jnp    0x415f4d
  415f58:	push   eax
  415f59:	cmp    al,BYTE PTR [ecx]
  415f5b:	and    al,0x57
  415f5d:	aad    0xd8
  415f5f:	fcmovnb st,st(5)
  415f61:	xchg   ebx,eax
  415f62:	sahf   
  415f63:	les    ebx,FWORD PTR [esp+edi*1+0x41]
  415f67:	jo     0x415f34
  415f69:	xor    al,0xe4
  415f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f6c:	push   ds
  415f6d:	pop    ds
  415f6e:	jbe    0x415fba
  415f70:	xor    bh,BYTE PTR [esi+ebp*1]
  415f73:	pop    esi
  415f74:	outs   dx,BYTE PTR ds:[esi]
  415f75:	pop    ecx
  415f76:	sbb    ch,bl
  415f78:	in     al,dx
  415f79:	stos   DWORD PTR es:[edi],eax
  415f7a:	and    al,0x4c
  415f7c:	and    ecx,DWORD PTR [ebp-0x79]
  415f7f:	add    al,BYTE PTR [esi+0x36891396]
  415f85:	test   al,0xc6
  415f87:	xchg   ebp,eax
  415f88:	xchg   edi,eax
  415f89:	in     eax,0x70
  415f8b:	sar    BYTE PTR [ebx-0x3a],1
  415f8e:	ficom  DWORD PTR [ebp*4-0x24d05f18]
  415f95:	sbb    al,0xe3
  415f97:	and    BYTE PTR [esi],dh
  415f99:	pop    esi
  415f9a:	mov    ecx,0xc64e58c3
  415f9f:	add    edx,ebx
  415fa1:	cmc    
  415fa2:	les    edi,FWORD PTR [edi]
  415fa4:	cmc    
  415fa5:	cmp    al,0xb9
  415fa7:	cmp    BYTE PTR [edx+0x31018ea5],dl
  415fad:	pop    eax
  415fae:	imul   ebx,ecx,0xd
  415fb1:	xchg   ecx,eax
  415fb2:	pop    ebx
  415fb3:	xor    eax,0xf5961d7a
  415fb8:	xor    bl,BYTE PTR [esi+edi*4]
  415fbb:	mov    ds:0x5f4f50e5,al
  415fc0:	nop
  415fc1:	mov    eax,ebx
  415fc3:	adc    bl,bl
  415fc5:	lock push eax
  415fc7:	pop    edi
  415fc8:	pop    ds
  415fc9:	push   ebp
  415fca:	test   al,0xb4
  415fcc:	or     DWORD PTR [eax+0x7f5a6112],edx
  415fd2:	or     al,0xa
  415fd4:	sub    cl,BYTE PTR [edi+0x58]
  415fd7:	popf   
  415fd8:	xor    ah,BYTE PTR [ecx-0x7b1ee38c]
  415fde:	fstp   st(7)
  415fe0:	mov    dl,0xad
  415fe2:	pop    es
  415fe3:	fwait
  415fe4:	call   0xf2d3:0x34b5549b
  415feb:	dec    edx
  415fec:	jl     0x416006
  415fee:	repz in eax,0x46
  415ff1:	stos   BYTE PTR es:[edi],al
  415ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff3:	xlat   BYTE PTR ds:[ebx]
  415ff4:	mov    db1,ecx
  415ff7:	inc    esi
  415ff8:	sahf   
  415ff9:	sar    BYTE PTR [edx],0x7
  415ffc:	pop    es
  415ffd:	lahf   
  415ffe:	test   esi,edi
  416000:	xchg   ecx,eax
  416001:	lods   eax,DWORD PTR ds:[esi]
  416002:	aam    0xd2
  416004:	mov    eax,0x1a910088
  416009:	adc    BYTE PTR [esp+ebp*4+0x78],0x45
  41600e:	add    al,0x97
  416010:	xchg   ebx,eax
  416011:	push   0xffffffc8
  416013:	int3   
  416014:	in     al,dx
  416015:	pop    esi
  416016:	cmp    dl,bl
  416018:	ret    0xa61
  41601b:	call   0x97d6:0xeffd99e9
  416022:	popa   
  416023:	ins    BYTE PTR es:[edi],dx
  416024:	rol    BYTE PTR [esi+0x26],0xfa
  416028:	std    
  416029:	rol    BYTE PTR [edx-0x144ea245],1
  41602f:	adc    DWORD PTR [esi+0x47c3e7c9],0x4a038920
  416039:	mov    al,gs:0x6e9baf6f
  41603f:	and    edx,eax
  416041:	stc    
  416042:	dec    ebp
  416043:	into   
  416044:	and    al,0xd6
  416046:	icebp  
  416047:	adc    al,0x36
  416049:	mov    cl,0x1d
  41604b:	js     0x415fed
  41604d:	repz les eax,FWORD PTR [ebx-0x20]
  416051:	les    ecx,FWORD PTR [eax-0x511457b8]
  416057:	pop    eax
  416058:	arpl   WORD PTR [esp+ecx*1+0x2ddaee3d],dx
  41605f:	pop    ds
  416060:	mov    esi,0xb0b549ea
  416065:	dec    esp
  416066:	sbb    ah,BYTE PTR [ebx-0x3734354d]
  41606c:	mov    eax,ds
  41606e:	gs dec ecx
  416070:	mov    ebp,0xe5e6057a
  416075:	cdq    
  416076:	mov    ebp,0x786036e0
  41607b:	les    esi,FWORD PTR [eax]
  41607d:	in     al,dx
  41607e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41607f:	stos   DWORD PTR es:[edi],eax
  416080:	dec    eax
  416081:	loope  0x41607a
  416083:	jle    0x416066
  416085:	pop    es
  416086:	push   esp
  416087:	ds jmp 0xb48c6cd5
  41608d:	dec    esp
  41608e:	inc    ebx
  41608f:	daa    
  416090:	inc    esi
  416091:	inc    esp
  416092:	pusha  
  416093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416094:	lds    esp,FWORD PTR [ecx]
  416096:	mov    ebp,0x94fb7c99
  41609b:	ret    
  41609c:	adc    eax,0x82518ba7
  4160a1:	stos   DWORD PTR es:[edi],eax
  4160a2:	fisttp WORD PTR [ecx+0x7a91d9fc]
  4160a8:	(bad)  
  4160a9:	in     eax,dx
  4160aa:	mov    edi,0x69850f1d
  4160af:	call   0xdce7:0x1f26e36e
  4160b6:	mov    cl,0xcd
  4160b8:	inc    ecx
  4160b9:	jmp    DWORD PTR [esi-0xcc2ca53]
  4160bf:	rep ins BYTE PTR es:[edi],dx
  4160c1:	xchg   edx,eax
  4160c2:	pop    eax
  4160c3:	mov    al,ds:0xe7c8db5a
  4160c8:	test   eax,0x6a432f5e
  4160cd:	aas    
  4160ce:	inc    ebx
  4160cf:	adc    esp,0x70f25a1
  4160d5:	rol    DWORD PTR [eax],0x87
  4160d8:	push   esi
  4160d9:	jmp    0x659d2287
  4160de:	shl    BYTE PTR [ebx+0x24],cl
  4160e1:	je     0x41614f
  4160e3:	pop    edi
  4160e4:	and    al,0xe5
  4160e6:	sti    
  4160e7:	inc    eax
  4160e8:	dec    ebp
  4160e9:	shl    ebp,0x81
  4160ec:	xor    ch,BYTE PTR [edi]
  4160ee:	loope  0x4160cc
  4160f0:	iret   
  4160f1:	sub    al,0x9d
  4160f3:	sub    al,0xb7
  4160f5:	inc    ebp
  4160f6:	mov    ch,0xfd
  4160f8:	jbe    0x416081
  4160fa:	cld    
  4160fb:	loope  0x416164
  4160fd:	aas    
  4160fe:	ret    
  4160ff:	leave  
  416100:	test   eax,0x7f68c01b
  416105:	fldenv [edx+edx*2-0x13e5ff02]
  41610c:	shl    edx,cl
  41610e:	aaa    
  41610f:	sbb    al,0x16
  416111:	push   es
  416112:	dec    esi
  416113:	inc    edx
  416114:	xor    al,0x74
  416116:	rcr    DWORD PTR [eax],1
  416118:	aaa    
  416119:	jmp    0x8135:0xbb088b81
  416120:	xchg   esp,eax
  416121:	or     DWORD PTR [esi],0xb6643150
  416127:	std    
  416128:	packssdw mm1,mm7
  41612b:	retf   0x3d6f
  41612e:	and    bh,dh
  416130:	repnz cld 
  416132:	(bad)  
  416133:	mov    ah,0x7
  416135:	aad    0xd5
  416137:	jp     0x41614c
  416139:	addr16 call 0xc53ec8d6
  41613f:	fist   DWORD PTR [ecx]
  416141:	enter  0x874,0x85
  416145:	mov    al,0xf1
  416147:	cs scas eax,DWORD PTR es:[edi]
  416149:	in     eax,dx
  41614a:	les    edx,FWORD PTR [edx-0x33cd3779]
  416150:	jo     0x41615b
  416152:	fadd   QWORD PTR [ecx]
  416154:	push   0x36547280
  416159:	div    DWORD PTR [edi+0x32]
  41615c:	imul   edx,ebx,0xc4bcf148
  416162:	cmp    BYTE PTR [ecx-0x3b1fb27c],al
  416168:	adc    DWORD PTR [ebx+ebx*2],ecx
  41616b:	or     esi,eax
  41616d:	or     DWORD PTR [ecx+0x6b],ebx
  416170:	out    dx,al
  416171:	mov    dl,0x83
  416173:	daa    
  416174:	mov    BYTE PTR [esi-0x6125bb27],al
  41617a:	adc    ebx,DWORD PTR [eax]
  41617c:	pop    ecx
  41617d:	retf   0xf117
  416180:	jmp    0x7cc404e7
  416185:	daa    
  416186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416187:	ror    ah,1
  416189:	repnz setle BYTE PTR [edx+edx*2+0x7146d6f8]
  416192:	cmp    al,0x98
  416194:	push   0xffffffc9
  416196:	outs   dx,DWORD PTR ds:[esi]
  416197:	mov    dl,0x9c
  416199:	ficomp WORD PTR [edi]
  41619b:	sar    DWORD PTR ds:0xd03e742e,cl
  4161a1:	cli    
  4161a2:	mov    ebp,0x9dbb69d2
  4161a7:	xchg   ecx,eax
  4161a8:	test   DWORD PTR [ecx+esi*4-0x44],esi
  4161ac:	scas   eax,DWORD PTR es:[edi]
  4161ad:	lahf   
  4161ae:	out    0x82,al
  4161b0:	lock cmc 
  4161b2:	repz inc ebx
  4161b4:	loop   0x4161f1
  4161b6:	(bad)  
  4161b7:	ror    BYTE PTR [ebp-0x5e712c47],1
  4161bd:	dec    eax
  4161be:	mov    ch,0x19
  4161c0:	cdq    
  4161c1:	inc    edi
  4161c2:	push   ebp
  4161c3:	int3   
  4161c4:	mov    al,0xb9
  4161c6:	loopne 0x416149
  4161c8:	inc    ebx
  4161c9:	ds sbb dl,dh
  4161cc:	int3   
  4161cd:	push   esi
  4161ce:	les    ecx,FWORD PTR cs:0xe840b43f
  4161d5:	mov    ah,0xaf
  4161d7:	jmp    0x5ded4e87
  4161dc:	xchg   esp,eax
  4161dd:	dec    edx
  4161de:	sbb    al,0x73
  4161e0:	adc    edi,DWORD PTR ds:0xa3f172e0
  4161e6:	stos   DWORD PTR es:[edi],eax
  4161e7:	sti    
  4161e8:	add    DWORD PTR [edi],esi
  4161ea:	mov    dh,0x8c
  4161ec:	cmc    
  4161ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161ee:	mov    ds:0xbf2f69a7,al
  4161f3:	aaa    
  4161f4:	(bad)  
  4161f5:	and    ah,BYTE PTR cs:[ebp+eiz*1+0x23]
  4161fa:	cmp    eax,0x52e460b8
  4161ff:	jne    0x4161eb
  416201:	inc    esi
  416202:	loopne 0x416209
  416204:	mov    edi,0xd41cbab8
  416209:	dec    edx
  41620a:	mov    gs,WORD PTR [ebp-0x5378fa1c]
  416210:	mov    edi,0x8a4c9bcc
  416215:	mov    dh,0x19
  416217:	jb     0x4161b2
  416219:	in     eax,0xe2
  41621b:	xchg   esp,eax
  41621c:	inc    eax
  41621d:	mov    ds:0xb617b532,al
  416222:	scas   al,BYTE PTR es:[edi]
  416223:	pushf  
  416224:	je     0x416202
  416226:	hlt    
  416227:	lea    esp,[esi+0x7f]
  41622a:	push   0xfffffff7
  41622c:	sbb    al,0x55
  41622e:	push   0x9688ffe9
  416233:	cli    
  416234:	inc    esi
  416235:	xor    BYTE PTR [edi+ecx*2],dl
  416238:	jge    0x416263
  41623a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41623b:	mov    ebp,0x7ffb1dd8
  416240:	fs aaa 
  416242:	(bad)  
  416243:	lock rcr DWORD PTR [edi-0x2e373886],1
  41624a:	fcmovne st,st(6)
  41624c:	fwait
  41624d:	adc    ecx,DWORD PTR [ebp+0x37d9dad]
  416253:	cmp    ebx,DWORD PTR [esi]
  416255:	jecxz  0x4161fd
  416257:	pop    es
  416258:	mov    ch,0x43
  41625a:	nop
  41625b:	mov    ebp,eax
  41625d:	in     eax,0xe8
  41625f:	and    BYTE PTR [eax-0x42ec96e9],al
  416265:	pop    esi
  416266:	sbb    DWORD PTR [ecx],0x4e7b8f1
  41626c:	mov    ebx,0x19c5f37e
  416271:	add    eax,0x3094e924
  416276:	mov    ah,0xc
  416278:	or     eax,0x942a62fe
  41627d:	shr    DWORD PTR fs:[edi+eiz*1+0x20],0xb4
  416283:	sub    eax,0x47e4e03d
  416288:	std    
  416289:	pop    edx
  41628a:	mov    dh,0x75
  41628c:	xor    DWORD PTR [ecx+0x66],edi
  41628f:	ror    DWORD PTR [esi],1
  416291:	in     eax,dx
  416292:	add    cl,BYTE PTR [ebp-0x3a4f08f5]
  416298:	(bad)  
  41629a:	mov    ebx,0x56860d0b
  41629f:	js     0x41628f
  4162a1:	lahf   
  4162a2:	(bad)  
  4162a3:	clc    
  4162a4:	mov    ebx,esp
  4162a6:	pop    ds
  4162a7:	jno    0x41627d
  4162a9:	int3   
  4162aa:	or     al,0x6e
  4162ac:	fnstsw WORD PTR [eax+0x5deb26df]
  4162b2:	mov    dl,BYTE PTR [edi+eiz*4]
  4162b5:	mov    ds:0x290ea0d3,al
  4162ba:	push   0xffffffce
  4162bc:	xchg   edx,eax
  4162bd:	test   al,0x87
  4162bf:	mov    ds:0x9dcd4e85,eax
  4162c4:	mov    edx,0x846b0a69
  4162c9:	into   
  4162ca:	sub    al,0xbe
  4162cc:	lock fld QWORD PTR [edi]
  4162cf:	add    cl,BYTE PTR [ebp+0x65]
  4162d2:	push   ds
  4162d3:	bsr    edi,eax
  4162d6:	push   esp
  4162d7:	xlat   BYTE PTR ds:[ebx]
  4162d8:	leave  
  4162d9:	fdiv   DWORD PTR [edx]
  4162db:	inc    eax
  4162dc:	push   ss
  4162dd:	out    dx,al
  4162de:	push   0x8bb00861
  4162e3:	and    al,0x3c
  4162e5:	dec    esp
  4162e6:	mov    bh,0xfb
  4162e8:	add    BYTE PTR [eax],dh
  4162ea:	push   ebx
  4162eb:	inc    edi
  4162ec:	jl     0x416279
  4162ee:	jo     0x416308
  4162f0:	xlat   BYTE PTR ds:[ebx]
  4162f1:	in     eax,dx
  4162f2:	add    DWORD PTR [esi+0x1b],eax
  4162f5:	test   DWORD PTR [esi-0x20074100],ecx
  4162fb:	arpl   WORD PTR [ecx+0x15],ax
  4162fe:	push   ebp
  4162ff:	add    eax,0x772e62ee
  416304:	cmp    al,0xd3
  416306:	out    dx,al
  416307:	into   
  416308:	fwait
  416309:	addr16 aas 
  41630b:	fistp  QWORD PTR [edi+0x7558bcbc]
  416311:	shl    BYTE PTR [ebx],1
  416313:	mov    BYTE PTR [edx-0x3],cl
  416316:	cmp    eax,0x5d6fd67a
  41631b:	stc    
  41631c:	cmc    
  41631d:	out    dx,al
  41631e:	call   FWORD PTR [edi+0xa]
  416321:	jb     0x4162ae
  416323:	and    dl,BYTE PTR [edx+edi*2]
  416326:	and    DWORD PTR [esi],edi
  416328:	pop    ss
  416329:	xlat   BYTE PTR ds:[ebx]
  41632a:	sar    BYTE PTR [edi-0x6a],0xa8
  41632e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41632f:	pop    ss
  416330:	ret    
  416331:	popa   
  416332:	out    0x4b,eax
  416334:	pop    esp
  416335:	add    dl,BYTE PTR [edi+ecx*1]
  416338:	not    DWORD PTR [esi]
  41633a:	icebp  
  41633b:	popf   
  41633c:	les    ebx,FWORD PTR [ebp-0x22]
  41633f:	retf   0x718f
  416342:	pop    edi
  416343:	sahf   
  416344:	clc    
  416345:	cmp    DWORD PTR [ebx+0x72c280bd],eax
  41634b:	les    eax,FWORD PTR [esi-0x7cc3c3cf]
  416351:	inc    esp
  416352:	sti    
  416353:	stos   BYTE PTR es:[edi],al
  416354:	and    edx,DWORD PTR [esi+0x5c383db8]
  41635a:	pop    es
  41635b:	es fs push edi
  41635e:	push   eax
  41635f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416360:	sub    DWORD PTR [ebx+0x5ad6e410],esp
  416366:	loopne 0x416365
  416368:	add    ebp,ebp
  41636a:	ja     0x416301
  41636c:	addr16 in al,dx
  41636e:	rcr    DWORD PTR [ecx+ebp*8],0x5c
  416372:	sub    ebx,DWORD PTR [esi-0x23a876e4]
  416378:	in     eax,0x85
  41637a:	and    edx,DWORD PTR [eax]
  41637c:	sub    ebp,DWORD PTR [ebp+eiz*2+0x7b]
  416380:	mov    ?,WORD PTR [esi-0x16]
  416383:	add    ah,BYTE PTR [esp+edi*4]
  416386:	dec    ebp
  416387:	or     eax,0x936aa4eb
  41638c:	fild   DWORD PTR [ecx-0x5a]
  41638f:	lahf   
  416390:	jge    0x4163ef
  416392:	dec    ebp
  416393:	dec    edx
  416394:	push   ebp
  416395:	dec    eax
  416396:	je     0x416341
  416398:	das    
  416399:	mov    ah,BYTE PTR [ebp+0x7bb66881]
  41639f:	std    
  4163a0:	sub    al,0x53
  4163a2:	fcmovu st,st(1)
  4163a4:	inc    eax
  4163a5:	sub    dl,BYTE PTR [esi-0x285068d7]
  4163ab:	arpl   WORD PTR [ecx-0x2ad367f1],dx
  4163b1:	xchg   ebx,eax
  4163b2:	pop    esp
  4163b3:	jg     0x416360
  4163b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b6:	bound  ebp,QWORD PTR [edi]
  4163b8:	or     esi,ebx
  4163ba:	jmp    0x383d:0x81118379
  4163c1:	inc    esi
  4163c2:	pop    edi
  4163c3:	mov    ah,0x18
  4163c5:	push   cs
  4163c6:	add    eax,0x6e727f6d
  4163cb:	inc    esp
  4163cc:	sbb    dh,BYTE PTR [esi]
  4163ce:	push   ebp
  4163cf:	add    ah,BYTE PTR [edi-0x3a]
  4163d2:	mov    DWORD PTR [ecx-0x4f7723d7],eax
  4163d8:	repnz fcomp QWORD PTR [edi+0x40]
  4163dc:	test   eax,0x68a65220
  4163e1:	sub    eax,0xd9c4a1ee
  4163e6:	and    bh,bl
  4163e8:	or     eax,0x4b3a1cc7
  4163ed:	inc    eax
  4163ee:	sbb    al,0xd3
  4163f0:	jl     0x41645d
  4163f2:	adc    ecx,DWORD PTR fs:[ecx+0x21492a69]
  4163f9:	(bad)  
  4163fa:	lahf   
  4163fb:	pop    esp
  4163fc:	test   eax,0xf76df9d6
  416401:	push   es
  416402:	rol    BYTE PTR [edx+esi*4],0xc5
  416406:	icebp  
  416407:	pop    edi
  416408:	retf   0xfebe
  41640b:	adc    eax,0x56a7d42d
  416410:	mov    edx,0x3564f0f4
  416415:	mov    WORD PTR [edi+0x9c91132],?
  41641b:	xchg   ebp,eax
  41641c:	inc    ecx
  41641d:	mov    cl,0xf9
  41641f:	pop    esp
  416420:	sti    
  416421:	std    
  416422:	or     BYTE PTR [ebx-0x4b],dh
  416425:	and    al,0x57
  416427:	xlat   BYTE PTR ds:[ebx]
  416428:	repnz imul esi,DWORD PTR [ebx-0x3b],0xffffffa6
  41642d:	push   ecx
  41642e:	test   esi,edi
  416430:	xor    esp,esp
  416432:	(bad)  
  416433:	jns    0x416435
  416435:	push   edx
  416436:	dec    ebx
  416437:	dec    esp
  416438:	inc    eax
  416439:	cli    
  41643a:	pop    edx
  41643b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41643c:	push   es
  41643d:	addr16 popf 
  41643f:	test   DWORD PTR [edi+ebp*1+0x6f],eax
  416443:	mov    ch,0x63
  416445:	cmp    bh,BYTE PTR [esi]
  416447:	adc    eax,0x67347e73
  41644c:	outs   dx,BYTE PTR ds:[esi]
  41644d:	loop   0x416429
  41644f:	sub    ecx,DWORD PTR [esi-0x18]
  416452:	daa    
  416453:	dec    edi
  416454:	cmp    ebx,DWORD PTR [ecx]
  416456:	push   ecx
  416457:	cmp    DWORD PTR [esi],edx
  416459:	pop    ss
  41645a:	dec    edx
  41645b:	sub    ebp,DWORD PTR [ebx+0x27]
  41645e:	adc    BYTE PTR [eax+eax*8+0x7c],cl
  416462:	or     al,0x31
  416464:	dec    eax
  416465:	mov    dh,0xf
  416467:	mov    dl,0xc7
  416469:	cwde   
  41646a:	push   esi
  41646b:	inc    ecx
  41646c:	cmp    bh,BYTE PTR [esp+ebx*2]
  41646f:	pop    ss
  416470:	and    ebx,DWORD PTR [ebx]
  416472:	xchg   ebx,eax
  416473:	mov    WORD PTR [edi],es
  416475:	dec    esp
  416476:	fadd   QWORD PTR [edi+0x7b]
  416479:	xor    al,0x42
  41647b:	fsubr  st,st(3)
  41647d:	sub    dl,BYTE PTR [eax+0x68f64686]
  416483:	sub    ah,BYTE PTR [ecx]
  416485:	(bad)  
  416486:	mov    ds:0xf0766730,eax
  41648b:	dec    ecx
  41648c:	mov    esp,0xfcfe79b6
  416491:	dec    ecx
  416492:	outs   dx,BYTE PTR ds:[esi]
  416493:	test   DWORD PTR [ecx],edi
  416495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416496:	push   es
  416497:	sub    DWORD PTR [ebp+edx*2+0x5eafa8d],0xa7a0d5e0
  4164a2:	das    
  4164a3:	or     BYTE PTR [edi+ebp*8+0x2c],bl
  4164a7:	fisttp DWORD PTR [edx+0x64]
  4164aa:	mov    ds:0xf9df2cd6,eax
  4164af:	aam    0xb3
  4164b1:	xchg   ebx,eax
  4164b2:	mov    edx,DWORD PTR [eax+0x607a6f9b]
  4164b8:	mov    bl,0x4d
  4164ba:	in     eax,0x0
  4164bc:	jbe    0x4164f7
  4164be:	inc    ebp
  4164bf:	add    edx,DWORD PTR [ebp+0x21]
  4164c2:	orps   xmm4,XMMWORD PTR [edi+0x7f]
  4164c6:	xchg   esp,eax
  4164c7:	stos   DWORD PTR es:[edi],eax
  4164c8:	dec    ebp
  4164c9:	add    esp,DWORD PTR [esi-0x5b]
  4164cc:	mov    esi,0x1080ba6f
  4164d1:	iret   
  4164d2:	pop    edi
  4164d3:	out    0xe7,eax
  4164d5:	les    ebx,FWORD PTR [edx-0x580b28c8]
  4164db:	lds    esp,FWORD PTR [ecx+0x5b61ed4c]
  4164e1:	mov    esp,cs
  4164e3:	sub    al,BYTE PTR [esi+0x61]
  4164e6:	sub    al,0xf9
  4164e8:	mov    dl,0x76
  4164ea:	div    DWORD PTR [edx-0x26]
  4164ed:	pop    ds
  4164ee:	inc    esi
  4164ef:	pop    esp
  4164f0:	inc    eax
  4164f1:	data16 int3 
  4164f3:	and    al,0x21
  4164f5:	cld    
  4164f6:	cmovns esi,DWORD PTR [edi]
  4164f9:	lods   eax,DWORD PTR ss:[esi]
  4164fb:	push   ds
  4164fc:	jmp    0x1a3b8529
  416501:	jmp    0x4164ba
  416503:	cmc    
  416504:	lea    ecx,[edi-0x31]
  416507:	cdq    
  416508:	sub    ebp,DWORD PTR [esi]
  41650a:	pushf  
  41650b:	test   al,0x75
  41650d:	shl    BYTE PTR [ebx],0xa6
  416510:	xor    ebp,DWORD PTR [ebx]
  416512:	pushf  
  416513:	je     0x41652e
  416515:	ins    DWORD PTR es:[edi],dx
  416516:	mov    DWORD PTR [edi],edx
  416518:	(bad)  
  416519:	sbb    BYTE PTR [edx+0x70],bl
  41651c:	pusha  
  41651d:	ja     0x4164e5
  41651f:	xchg   ecx,eax
  416520:	icebp  
  416521:	pop    ebx
  416522:	jns    0x41659c
  416524:	and    ebp,ebx
  416526:	adc    al,bl
  416528:	ss (bad) 
  41652b:	adc    ch,ah
  41652d:	stc    
  41652e:	push   ecx
  41652f:	loopne 0x41657d
  416531:	in     eax,dx
  416532:	inc    edx
  416533:	mov    edi,DWORD PTR [edx]
  416535:	mov    al,BYTE PTR [ebx+eax*4-0xe6380b7]
  41653c:	(bad)  
  41653d:	(bad)  [edi-0x57706712]
  416543:	pop    es
  416544:	sbb    DWORD PTR [edi-0x7f04cb22],ebx
  41654a:	mov    eax,ds:0x9c69381e
  41654f:	adc    al,bh
  416551:	dec    ebp
  416552:	gs pop ecx
  416554:	cmp    edi,ebx
  416556:	jmp    0x85cee74d
  41655b:	push   esi
  41655c:	mov    ebp,0x2858c681
  416561:	cdq    
  416562:	enter  0x2a49,0xaf
  416566:	daa    
  416567:	(bad)  
  416568:	and    BYTE PTR [esi+0x6fedfc39],ch
  41656e:	xchg   esp,eax
  41656f:	std    
  416570:	jge    0x41654b
  416572:	test   eax,0xc610041f
  416577:	loopne 0x4165ec
  416579:	push   ds
  41657a:	pop    ebx
  41657b:	dec    eax
  41657c:	fist   DWORD PTR [edx]
  41657e:	sbb    dl,ch
  416580:	pop    esi
  416581:	xor    cl,cl
  416583:	fimul  WORD PTR [ecx-0x29fa6f2f]
  416589:	(bad)  
  41658a:	mov    edi,0xed66ffa5
  41658f:	mov    bl,0x52
  416591:	shl    DWORD PTR [ecx-0x378cce6a],cl
  416597:	test   BYTE PTR [ecx],dl
  416599:	or     al,0xa8
  41659b:	cmp    esp,edi
  41659d:	pshufw mm5,QWORD PTR [eax],0x8e
  4165a1:	mov    bl,0x72
  4165a3:	inc    ecx
  4165a4:	js     0x4165c5
  4165a6:	jb     0x416583
  4165a8:	push   ebx
  4165a9:	out    dx,eax
  4165aa:	xchg   ecx,eax
  4165ab:	mov    esi,ebx
  4165ad:	add    BYTE PTR [ebp-0x61567453],bl
  4165b3:	sub    edx,esi
  4165b5:	xchg   ebp,eax
  4165b6:	xchg   ebx,ecx
  4165b8:	ja     0x416557
  4165ba:	mov    dh,0xcf
  4165bc:	ds ja  0x41662c
  4165bf:	fs fwait
  4165c1:	fwait
  4165c2:	jg     0x41658f
  4165c4:	les    ecx,FWORD PTR [edi]
  4165c6:	and    edi,DWORD PTR [ebx+eax*4-0x8c9e2c2]
  4165cd:	pop    ss
  4165ce:	repz (bad) 
  4165d0:	das    
  4165d1:	jp     0x416584
  4165d3:	cmp    al,0xf2
  4165d5:	sbb    eax,0xa3510863
  4165da:	mov    ecx,0x9fbc8c84
  4165df:	pushf  
  4165e0:	or     BYTE PTR [eax+0x41],al
  4165e3:	popf   
  4165e4:	lods   al,BYTE PTR ds:[esi]
  4165e5:	pop    ss
  4165e6:	shr    BYTE PTR [ecx],1
  4165e8:	iret   
  4165e9:	pop    edx
  4165ea:	call   0xe2c4:0x7c4400b1
  4165f1:	sbb    al,0x4d
  4165f3:	stc    
  4165f4:	shl    DWORD PTR [eax],0xa8
  4165f7:	mov    al,BYTE PTR [edx-0x12f124d6]
  4165fd:	or     cl,BYTE PTR [edx-0x79]
  416600:	xlat   BYTE PTR ds:[ebx]
  416601:	popa   
  416602:	cmp    ebp,DWORD PTR [ebp-0x53]
  416605:	shr    BYTE PTR [ebp-0x4bc77bbe],cl
  41660b:	and    BYTE PTR [edi+0x19],0xf9
  41660f:	ja     0x416681
  416611:	and    eax,0x2324b16f
  416616:	mov    bl,BYTE PTR [edi+0x2c]
  416619:	sbb    BYTE PTR [ebp-0x4d50f298],0x9
  416620:	retf   0x5064
  416623:	es mov ecx,0x8ab55398
  416629:	repz lea edi,[esi]
  41662c:	ret    
  41662d:	ficom  DWORD PTR [esp+eax*4]
  416630:	inc    edi
  416631:	mov    WORD PTR [eax+edx*4-0x5],cs
  416635:	(bad)  
  416636:	lock ret 0x10e
  41663a:	dec    edx
  41663b:	iret   
  41663c:	dec    esi
  41663d:	jmp    0x260c:0x263545dc
  416644:	nop
  416645:	dec    edx
  416646:	pop    ds
  416647:	sub    eax,0x699c534d
  41664c:	(bad)  
  41664d:	loope  0x4166b3
  41664f:	xchg   esi,eax
  416650:	adc    BYTE PTR [ecx+edi*1+0x6b],dl
  416654:	dec    edi
  416655:	fsub   st,st(0)
  416657:	or     DWORD PTR [ebp+0x5ed1e5d7],eax
  41665d:	sbb    cl,bl
  41665f:	mov    al,ds:0x4f55179d
  416664:	repnz or ah,BYTE PTR [ecx]
  416667:	jmp    0x416618
  416669:	cs pop edx
  41666b:	pushf  
  41666c:	out    0x22,al
  41666e:	aas    
  41666f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416670:	inc    ecx
  416671:	push   ebx
  416672:	xchg   ebx,eax
  416673:	rcr    BYTE PTR [edx-0x4a],0x3a
  416677:	xchg   ebp,eax
  416678:	sub    eax,DWORD PTR [ecx+ebx*4-0x26]
  41667c:	cmp    BYTE PTR [ecx],dl
  41667e:	xor    al,0x9
  416680:	xor    cl,bh
  416682:	or     esi,DWORD PTR [esi-0x6a]
  416685:	adc    ecx,DWORD PTR [eax]
  416687:	mov    al,0x2a
  416689:	test   al,0x7
  41668b:	xor    DWORD PTR [edx+0x7e61f4d1],0x48a0673e
  416695:	adc    DWORD PTR [ebx-0x2],esi
  416698:	lock cli 
  41669a:	(bad)  
  41669b:	shl    BYTE PTR [ebx+0x4c],cl
  41669e:	test   al,0xe9
  4166a0:	mov    edx,0x13936de1
  4166a5:	push   edx
  4166a6:	jmp    ebx
  4166a8:	adc    bh,BYTE PTR [eax+eax*8-0x52]
  4166ac:	push   esp
  4166ad:	cmp    al,0xda
  4166af:	inc    eax
  4166b0:	jae    0x416706
  4166b2:	loop   0x416696
  4166b4:	dec    ebx
  4166b5:	ss jae 0x416652
  4166b8:	jae    0x4166ac
  4166ba:	and    al,0x5c
  4166bc:	xor    al,BYTE PTR [ebp+0x1c]
  4166bf:	retf   0xe248
  4166c2:	jle    0x41664b
  4166c4:	lea    eax,[eax+edx*2+0x56e48583]
  4166cb:	out    dx,al
  4166cc:	leave  
  4166cd:	adc    al,BYTE PTR [edi]
  4166cf:	xchg   BYTE PTR [edx],ch
  4166d1:	pop    ss
  4166d2:	push   esi
  4166d3:	loope  0x416700
  4166d5:	mov    ecx,0x32143fc7
  4166da:	ss dec esi
  4166dc:	fs ss mov ebx,0x84f36b43
  4166e3:	pop    esp
  4166e4:	and    esp,DWORD PTR [edx-0x36b6ae25]
  4166ea:	repz adc BYTE PTR [ebx+0x1b],dl
  4166ee:	inc    eax
  4166ef:	lods   eax,DWORD PTR ds:[esi]
  4166f0:	rcl    BYTE PTR [edi+eiz*1+0xe],cl
  4166f4:	mov    ?,WORD PTR cs:[edx]
  4166f7:	inc    edi
  4166f8:	arpl   WORD PTR [edi-0x65],bp
  4166fb:	dec    eax
  4166fc:	sbb    edx,DWORD PTR [ecx-0x3507718f]
  416702:	(bad)
  416705:	adc    DWORD PTR [esi-0x55],ebp
  416708:	xchg   esi,eax
  416709:	mov    esp,0x936e5a96
  41670e:	shr    edx,1
  416710:	aas    
  416711:	jle    0x41672f
  416713:	pop    edx
  416714:	push   edi
  416715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416716:	pop    esi
  416717:	sbb    BYTE PTR [ebx+esi*4+0xf],0xdd
  41671c:	push   esi
  41671d:	es mov esp,0xec0a74cd
  416723:	aas    
  416724:	cmc    
  416725:	mov    ebx,DWORD PTR [eax-0x3a0a9bdc]
  41672b:	pushf  
  41672c:	mov    eax,0x181bdbf2
  416731:	les    ebp,FWORD PTR [edi-0x44]
  416734:	ret    0xaf02
  416737:	and    edx,esi
  416739:	retf   0x8ff0
  41673c:	jle    0x4167b4
  41673e:	xor    ch,BYTE PTR ds:0x43d05571
  416744:	push   eax
  416745:	mov    DWORD PTR [eax+eax*8],esp
  416748:	jns    0x41670d
  41674a:	lock adc DWORD PTR [edi-0x4c],edi
  41674e:	test   ecx,edi
  416750:	pusha  
  416751:	bound  edx,QWORD PTR [edi]
  416753:	or     BYTE PTR [edx-0x76946a9b],bl
  416759:	xchg   BYTE PTR [edx-0x63],dl
  41675c:	pop    ebp
  41675d:	adc    edx,DWORD PTR [ebx+0x17]
  416760:	shl    BYTE PTR [ebx+esi*1-0x3d7c7024],cl
  416767:	cmp    al,0x5a
  416769:	sbb    eax,0x1723e8c
  41676e:	es xchg edi,eax
  416770:	cmp    dl,bl
  416772:	sub    esp,eax
  416774:	lods   eax,DWORD PTR ds:[esi]
  416775:	inc    edi
  416776:	rcr    DWORD PTR [eax-0x767727f8],1
  41677c:	mov    ah,0x87
  41677e:	jno    0x4167ef
  416780:	inc    edx
  416781:	retf   0xb4f2
  416784:	pusha  
  416785:	add    eax,esi
  416787:	test   al,0x73
  416789:	mov    esp,0xef59c636
  41678e:	enter  0x5b11,0x99
  416792:	pusha  
  416793:	mov    ebp,0x5bf5175a
  416798:	cmp    eax,0x1d24d177
  41679d:	ret    
  41679e:	lock mov esp,0x4b92bfe0
  4167a4:	xchg   edx,eax
  4167a5:	clc    
  4167a6:	loopne 0x416765
  4167a8:	jl     0x41672c
  4167aa:	push   esp
  4167ab:	(bad)  
  4167ad:	cli    
  4167ae:	div    BYTE PTR [ebx]
  4167b0:	cwde   
  4167b1:	test   eax,0x6d836292
  4167b6:	xchg   esp,eax
  4167b7:	sub    dh,BYTE PTR [esi+0x4d94b12b]
  4167bd:	and    eax,0x2ef229eb
  4167c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c3:	cdq    
  4167c4:	xchg   edi,eax
  4167c5:	cmp    al,0xec
  4167c7:	pop    ds
  4167c8:	test   DWORD PTR [ecx],edi
  4167ca:	pop    ebx
  4167cb:	xor    bl,BYTE PTR [eax-0x60]
  4167ce:	dec    edx
  4167cf:	or     ch,0xfa
  4167d2:	(bad)  
  4167d3:	sbb    BYTE PTR [ecx-0x3d],cl
  4167d6:	fcmovu st,st(6)
  4167d8:	in     al,0xf
  4167da:	xor    BYTE PTR [ebp-0x2],cl
  4167dd:	mov    bh,0x3e
  4167df:	into   
  4167e0:	je     0x4167b5
  4167e2:	mov    ah,0x15
  4167e4:	xchg   ebx,eax
  4167e5:	fisttp WORD PTR [edx-0x25c334d]
  4167eb:	mov    ecx,0x1e4ac777
  4167f0:	gs jp  0x41677e
  4167f3:	loop   0x41686f
  4167f5:	in     al,0xea
  4167f7:	daa    
  4167f8:	dec    esp
  4167f9:	cmp    DWORD PTR [ebx],edx
  4167fb:	add    ah,ah
  4167fd:	inc    eax
  4167fe:	ret    
  4167ff:	in     al,dx
  416800:	(bad)  
  416802:	inc    ecx
  416803:	jg     0x416864
  416805:	mov    eax,0xfc3eda24
  41680a:	mov    bh,0x2f
  41680c:	adc    eax,0x93aa39cc
  416811:	adc    eax,0x5f9b3928
  416816:	lea    ebp,[ebx+0x1f]
  416819:	add    DWORD PTR ss:[edx+0x2a],eax
  41681d:	push   esi
  41681e:	pop    ss
  41681f:	adc    edi,esi
  416821:	clc    
  416822:	imul   esi,DWORD PTR [esi],0x5edd38d2
  416828:	test   BYTE PTR [ecx+0x3793126],0x66
  41682f:	shr    DWORD PTR [esi-0x58],cl
  416832:	xchg   edi,eax
  416833:	fwait
  416834:	mov    eax,ss:0x114e8417
  41683a:	xchg   ecx,eax
  41683b:	arpl   WORD PTR ds:0x99e2d365,cx
  416841:	out    dx,eax
  416842:	pop    ss
  416843:	sbb    BYTE PTR [ecx-0x36],0xf4
  416847:	gs pop esp
  416849:	repnz adc eax,0xdba19097
  41684f:	inc    edx
  416850:	xor    bl,BYTE PTR [edi-0x50c334e5]
  416856:	pop    ss
  416857:	inc    ecx
  416858:	jl     0x4167ec
  41685a:	mov    ch,0x41
  41685c:	rcr    BYTE PTR [eax+0x34],0x67
  416860:	mov    esp,0x348f3da7
  416865:	mov    eax,ds:0x3540de00
  41686a:	pop    esp
  41686b:	inc    esp
  41686c:	pop    ebx
  41686d:	xchg   ah,ah
  41686f:	daa    
  416870:	jne    0x416830
  416872:	das    
  416873:	jge    0x416824
  416875:	jno    0x4168c8
  416877:	popa   
  416878:	jmp    0x9e89:0x63855397
  41687f:	mov    edx,0xd379a9a6
  416884:	dec    esi
  416885:	(bad)  
  416886:	cmp    esp,DWORD PTR [edi-0x2c0b51fe]
  41688c:	inc    ebp
  41688d:	mov    WORD PTR [edx+eax*8-0x7f8be144],?
  416894:	ins    BYTE PTR es:[edi],dx
  416895:	inc    ebp
  416896:	xchg   edx,eax
  416897:	cli    
  416898:	inc    ebp
  416899:	retf   0x3064
  41689c:	mov    ss,WORD PTR [esi+0x6c7b1b9c]
  4168a2:	mov    al,ds:0x544de15b
  4168a7:	lds    esp,FWORD PTR [eax+0x6f9da4d3]
  4168ad:	mov    al,ds:0xcc817ec5
  4168b2:	stos   DWORD PTR es:[edi],eax
  4168b3:	push   ecx
  4168b4:	imul   edx,DWORD PTR [ebp+0x1d],0xffffffda
  4168b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168b9:	(bad)  
  4168ba:	out    dx,eax
  4168bb:	cs ins BYTE PTR es:[edi],dx
  4168bd:	inc    esi
  4168be:	jmp    FWORD PTR [esi+0x63]
  4168c1:	xor    edx,DWORD PTR [ecx]
  4168c3:	or     al,0x5a
  4168c5:	lock bound ebx,QWORD PTR [esi]
  4168c8:	and    eax,0xa3c41697
  4168cd:	xor    BYTE PTR [edx+eax*8-0x4c],0x80
  4168d2:	cli    
  4168d3:	xchg   ebp,eax
  4168d4:	cli    
  4168d5:	loop   0x41688e
  4168d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168d8:	clc    
  4168d9:	dec    eax
  4168da:	mov    edi,0x61531f5d
  4168df:	dec    ecx
  4168e0:	inc    ecx
  4168e1:	mov    ah,cl
  4168e3:	mov    BYTE PTR [edi+0x23],bh
  4168e6:	add    ebp,DWORD PTR [edx-0xe]
  4168e9:	jl     0x4168ef
  4168eb:	fwait
  4168ec:	mov    ds,edx
  4168ee:	cwde   
  4168ef:	nop
  4168f0:	mov    cl,0x2b
  4168f2:	or     DWORD PTR ds:0x2959dde8,ecx
  4168f8:	pop    eax
  4168f9:	lock mov ds:0x441b96c3,al
  4168ff:	fld    TBYTE PTR [ebp-0x1f06d3b6]
  416905:	fisubr DWORD PTR ds:0xc371411d
  41690b:	push   ecx
  41690c:	dec    edx
  41690d:	inc    eax
  41690e:	(bad)  
  41690f:	mov    bh,0xdf
  416911:	pop    ebx
  416912:	ret    
  416913:	adc    dl,cl
  416915:	and    bl,BYTE PTR [edi-0x223425c5]
  41691b:	adc    DWORD PTR [eax],ecx
  41691d:	inc    edi
  41691e:	sbb    cl,BYTE PTR [ebp-0x4a9159e3]
  416924:	push   ss
  416925:	or     esp,DWORD PTR [edx+0x4]
  416928:	int3   
  416929:	cmp    DWORD PTR [ebp-0x6e],ecx
  41692c:	in     eax,dx
  41692d:	jnp    0x41692d
  41692f:	and    al,ch
  416931:	push   0xa6767e12
  416936:	sub    al,0x18
  416938:	fidiv  WORD PTR [esi-0x11]
  41693b:	pop    edx
  41693c:	and    edx,DWORD PTR [ebx]
  41693e:	jmp    0x8183:0xd0942bf0
  416945:	sbb    esp,eax
  416947:	cmp    esi,DWORD PTR [ebx+eax*4]
  41694a:	jo     0x416985
  41694c:	dec    ecx
  41694d:	cmp    ah,BYTE PTR [edx+0x38]
  416950:	xchg   ecx,eax
  416951:	cmp    BYTE PTR [esi],dl
  416953:	cs inc ebx
  416955:	jb     0x416900
  416957:	call   FWORD PTR [esp+ecx*1-0xd]
  41695b:	and    esp,esi
  41695d:	add    al,0x4e
  41695f:	popa   
  416960:	out    0xe,al
  416962:	dec    esi
  416963:	stos   DWORD PTR es:[edi],eax
  416964:	push   edi
  416965:	cmp    BYTE PTR [edi],ah
  416967:	cdq    
  416968:	adc    eax,0x9c8f49c
  41696d:	out    dx,al
  41696e:	inc    esi
  41696f:	jecxz  0x4169cd
  416971:	push   es
  416972:	pop    ebp
  416973:	ins    BYTE PTR es:[edi],dx
  416974:	sbb    ch,ch
  416976:	callw  0x9554
  41697a:	jmp    0x9add823b
  41697f:	mov    al,ds:0xc006fce3
  416984:	sbb    DWORD PTR [edi-0x327341b1],eax
  41698a:	loope  0x416916
  41698c:	fisub  DWORD PTR [eax-0x36ca78af]
  416992:	mov    esp,0x2bbff930
  416997:	cli    
  416998:	iret   
  416999:	xabort 0x1b
  41699c:	sub    DWORD PTR [eax+0x70],esp
  41699f:	sub    al,0x6a
  4169a1:	loop   0x41697e
  4169a3:	xchg   BYTE PTR [ebx-0x5bb5df1a],cl
  4169a9:	daa    
  4169aa:	call   0xe74f:0xc62c3ac2
  4169b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b2:	sbb    al,0xc5
  4169b4:	lock mov dh,0xda
  4169b7:	xor    edi,esi
  4169b9:	fs shl bl,cl
  4169bc:	pop    eax
  4169bd:	xchg   ecx,eax
  4169be:	jbe    0x416a09
  4169c0:	adc    BYTE PTR [esi],0x17
  4169c3:	jl     0x4169ed
  4169c5:	xchg   esp,eax
  4169c6:	push   ebx
  4169c7:	cwde   
  4169c8:	xor    esi,ebx
  4169ca:	inc    esi
  4169cb:	adc    DWORD PTR [eax-0x71],esi
  4169ce:	pop    ecx
  4169cf:	test   eax,0x50055cdf
  4169d4:	mov    bl,0x2
  4169d6:	push   ecx
  4169d7:	add    cl,BYTE PTR [edx-0x2c]
  4169da:	shr    bh,cl
  4169dc:	jmp    0xc8a172b0
  4169e1:	pop    esi
  4169e2:	ror    eax,1
  4169e4:	les    esi,FWORD PTR [eax+0x68]
  4169e7:	sbb    eax,0xef205520
  4169ec:	test   al,0x45
  4169ee:	iret   
  4169ef:	lahf   
  4169f0:	mov    esi,gs
  4169f2:	mov    edi,0x2f5e33a3
  4169f7:	push   ss
  4169f8:	cmp    bl,bh
  4169fa:	mov    ah,0xb7
  4169fc:	jp     0x416a28
  4169fe:	aaa    
  4169ff:	pextrw ebx,mm7,0x66
  416a03:	ja     0x416a44
  416a05:	mov    esi,0xed85201
  416a0a:	pop    ebp
  416a0b:	xlat   BYTE PTR ds:[ebx]
  416a0c:	aad    0x29
  416a0e:	jo     0x416a87
  416a10:	mov    edi,0xd5f179a
  416a15:	popa   
  416a16:	add    eax,0x3e67014a
  416a1b:	sbb    bh,BYTE PTR [edx]
  416a1d:	fimul  DWORD PTR [ecx+ecx*1-0x6e331d32]
  416a24:	push   ecx
  416a25:	cmp    eax,0xf51ba677
  416a2a:	jnp    0x416a4f
  416a2c:	inc    ebp
  416a2d:	shl    DWORD PTR [eax+0x79],0x5b
  416a31:	lar    ebp,bp
  416a34:	(bad)  
  416a35:	dec    eax
  416a36:	fisub  DWORD PTR [esp+edi*2-0x49]
  416a3a:	shl    DWORD PTR [esi+0x6dbde358],1
  416a40:	pop    es
  416a41:	out    dx,eax
  416a42:	shl    DWORD PTR [ebx+eax*2],0x41
  416a46:	retf   0xbf0d
  416a49:	sbb    dh,BYTE PTR [edi+0x1f9b8b9c]
  416a4f:	lods   eax,DWORD PTR ds:[esi]
  416a50:	mov    ecx,0xd8d9e961
  416a55:	sbb    eax,0xa3a0c19
  416a5a:	test   bh,0x7e
  416a5d:	mov    ebp,edx
  416a5f:	js     0x416a91
  416a61:	xlat   BYTE PTR ds:[ebx]
  416a62:	xor    DWORD PTR [ebx-0x5c],esi
  416a65:	stos   DWORD PTR es:[edi],eax
  416a66:	pop    ss
  416a67:	(bad)  
  416a68:	rol    DWORD PTR [eax+0x671d8951],0x7c
  416a6f:	or     DWORD PTR [edx+ebp*1-0x6da694f8],ebp
  416a76:	push   esp
  416a77:	xchg   ebp,eax
  416a78:	xor    eax,0xb6f976ad
  416a7d:	xchg   edx,eax
  416a7e:	icebp  
  416a7f:	pop    esi
  416a80:	rcl    DWORD PTR [ebx-0x6d],0x54
  416a84:	pop    eax
  416a85:	mov    al,dh
  416a87:	cmp    eax,0x9ad2d8b2
  416a8c:	and    edi,DWORD PTR [ebx+0x32]
  416a8f:	imul   edx,ebx,0xcc0824ec
  416a95:	pop    ecx
  416a96:	aad    0x43
  416a98:	xchg   esi,eax
  416a99:	test   al,0x9e
  416a9b:	adc    dh,bh
  416a9d:	jbe    0x416acb
  416a9f:	mov    esp,0x230d5c56
  416aa4:	mov    ebx,0x7a7b7c62
  416aa9:	fisubr WORD PTR ds:0xc4ecd76c
  416aaf:	jnp    0x416af9
  416ab1:	mov    cl,0x2
  416ab3:	xchg   DWORD PTR [ebx+ecx*8-0x60],ebx
  416ab7:	mov    bh,0xcf
  416ab9:	mov    dl,0x28
  416abb:	adc    esp,DWORD PTR [esi+0x56e1701e]
  416ac1:	mov    dl,al
  416ac3:	dec    ebx
  416ac4:	or     DWORD PTR [edi],ecx
  416ac6:	das    
  416ac7:	cmp    BYTE PTR [ebx-0x532f32ea],bh
  416acd:	mov    eax,0xc0f951a3
  416ad2:	or     al,0xf5
  416ad4:	in     eax,dx
  416ad5:	imul   ebx,DWORD PTR [esi],0xffffffc9
  416ad8:	sti    
  416ad9:	outs   dx,BYTE PTR ds:[esi]
  416ada:	fwait
  416adb:	bound  ecx,QWORD PTR ds:0x1d57ca6e
  416ae1:	adc    ebp,DWORD PTR [edx+0x5d]
  416ae4:	jo     0x416abd
  416ae6:	mov    edx,0x5f0fc381
  416aeb:	cmp    DWORD PTR [ecx+0x2d177cca],0x431daffe
  416af5:	aam    0x6d
  416af7:	mov    BYTE PTR [eax+ebx*4-0x34],dl
  416afb:	jecxz  0x416ab8
  416afd:	data16 scas al,BYTE PTR es:[edi]
  416aff:	xchg   BYTE PTR [eax],cl
  416b01:	xchg   BYTE PTR [ebx+ebx*2],cl
  416b04:	sbb    cl,BYTE PTR [esi+0x25]
  416b07:	jns    0x416b47
  416b09:	mov    DWORD PTR [edi-0x72c18969],eax
  416b0f:	pop    ebx
  416b10:	(bad)
  416b13:	adc    eax,0x9e3c11e0
  416b18:	jb     0x416afc
  416b1a:	mov    esp,0x50f44be6
  416b1f:	inc    ebp
  416b20:	jo     0x416ae8
  416b22:	mov    edi,0xc77eb10f
  416b27:	pop    ds
  416b28:	sub    ecx,DWORD PTR [ecx+ebx*2-0x709fe0bd]
  416b2f:	in     eax,dx
  416b30:	jecxz  0x416ae3
  416b32:	push   es
  416b33:	out    0x46,eax
  416b35:	add    DWORD PTR [edi+0x2c],ebx
  416b38:	enter  0x7cd1,0x35
  416b3c:	das    
  416b3d:	mov    al,BYTE PTR [ebp+0x42]
  416b40:	xchg   BYTE PTR [esi],ah
  416b42:	nop
  416b43:	lahf   
  416b44:	mov    esp,0x3415b9d
  416b49:	mov    eax,0xf165943
  416b4e:	mov    ebp,0xe8356d54
  416b53:	clc    
  416b54:	fwait
  416b55:	ror    DWORD PTR [edx],0x5e
  416b58:	mov    edi,0xb57fa7dc
  416b5d:	outs   dx,DWORD PTR ds:[esi]
  416b5e:	mov    eax,ds:0xde9582c3
  416b63:	push   edi
  416b64:	pop    ebp
  416b65:	lahf   
  416b66:	push   edi
  416b67:	dec    ebp
  416b68:	sbb    dh,BYTE PTR [ecx+ebx*1]
  416b6b:	sbb    esp,esi
  416b6d:	push   es
  416b6e:	sbb    al,BYTE PTR [esi]
  416b70:	sahf   
  416b71:	enter  0xd591,0x74
  416b75:	cwde   
  416b76:	inc    ecx
  416b77:	or     BYTE PTR [esi+0x67135ae7],dl
  416b7d:	sub    DWORD PTR [edi+0x487f98a9],ebx
  416b83:	dec    ebp
  416b84:	inc    esi
  416b85:	(bad)  [eax+0x38]
  416b88:	xor    ecx,ecx
  416b8a:	pop    eax
  416b8b:	dec    esi
  416b8c:	ret    
  416b8d:	adc    bl,BYTE PTR [edx+0x3e47e158]
  416b93:	dec    esp
  416b94:	pop    eax
  416b95:	sbb    eax,0x7cce5b31
  416b9a:	stos   DWORD PTR es:[edi],eax
  416b9b:	loop   0x416b8e
  416b9d:	mov    dl,0xa
  416b9f:	cmp    al,0xfe
  416ba1:	inc    eax
  416ba2:	clc    
  416ba3:	jns    0x416c0d
  416ba5:	mov    eax,0xeb1c7535
  416baa:	int    0xa5
  416bac:	in     eax,0xf8
  416bae:	mov    ebp,0x46fe505a
  416bb3:	in     al,dx
  416bb4:	and    ah,BYTE PTR [edi-0x18]
  416bb7:	fistp  DWORD PTR [edi+0x28b81e0f]
  416bbd:	or     edx,DWORD PTR [ebp-0x6b0346b6]
  416bc3:	or     BYTE PTR [edi],al
  416bc5:	mov    eax,ds:0x5b88b412
  416bca:	nop
  416bcb:	adc    eax,0xeb38962
  416bd0:	in     eax,dx
  416bd1:	fist   WORD PTR [ecx-0x6f]
  416bd4:	xor    eax,0x280e4f0d
  416bd9:	std    
  416bda:	sysret 
  416bdc:	pop    ebx
  416bdd:	fwait
  416bde:	les    ebx,FWORD PTR [ebp-0x7b]
  416be1:	pop    ss
  416be2:	cli    
  416be3:	cs pop ebp
  416be5:	mov    edi,0xeb2cd5f3
  416bea:	(bad)  
  416beb:	std    
  416bec:	stos   BYTE PTR es:[edi],al
  416bed:	xlat   BYTE PTR ds:[ebx]
  416bee:	and    eax,0x75bdbc45
  416bf3:	fidiv  DWORD PTR [esp+edx*2-0x63]
  416bf7:	add    BYTE PTR [ecx+0x46],ch
  416bfa:	xchg   ebp,eax
  416bfb:	jo     0x416bbf
  416bfd:	scas   eax,DWORD PTR es:[edi]
  416bfe:	inc    edx
  416bff:	lods   eax,DWORD PTR ds:[esi]
  416c00:	stc    
  416c01:	popf   
  416c02:	jae    0x416c11
  416c04:	jecxz  0x416c2c
  416c06:	jmp    0x4bb1:0x467ab620
  416c0d:	add    al,0x84
  416c0f:	adc    BYTE PTR [edi+0x810da1e],dh
  416c15:	stos   DWORD PTR es:[edi],eax
  416c16:	cmp    ebp,eax
  416c18:	jmp    0x416bca
  416c1a:	mov    dl,0xd1
  416c1c:	repz aam 0xde
  416c1f:	adc    bl,BYTE PTR [esi+0x7a]
  416c22:	lea    eax,[ecx+0x719a57fe]
  416c28:	mov    DWORD PTR [ebp-0x49],ecx
  416c2b:	cli    
  416c2c:	mov    eax,0xb06f5568
  416c31:	jmp    0x416c88
  416c33:	mov    ebx,gs
  416c35:	jnp    0x416c34
  416c37:	lock pop ebp
  416c39:	push   ecx
  416c3a:	lahf   
  416c3b:	xchg   edi,eax
  416c3c:	(bad)  
  416c3d:	daa    
  416c3e:	test   ebx,edi
  416c40:	ss ins DWORD PTR es:[edi],dx
  416c42:	outs   dx,DWORD PTR ds:[esi]
  416c43:	stos   BYTE PTR es:[edi],al
  416c44:	pusha  
  416c45:	scas   eax,DWORD PTR es:[edi]
  416c46:	or     esi,DWORD PTR [ebx+ecx*1]
  416c49:	mov    edx,edi
  416c4b:	mov    esp,DWORD PTR [ebp+0x76]
  416c4e:	sub    edx,ecx
  416c50:	(bad)  
  416c52:	mov    bh,0x70
  416c54:	jg     0x416be3
  416c56:	mov    ds:0x127d79bd,al
  416c5b:	das    
  416c5c:	inc    esi
  416c5d:	test   eax,0xc261b16e
  416c62:	xchg   ebp,eax
  416c63:	jg     0x416bf8
  416c65:	and    ecx,DWORD PTR [esp+ecx*8]
  416c68:	lods   al,BYTE PTR ds:[esi]
  416c69:	add    bh,BYTE PTR ds:0x7a22deb3
  416c6f:	sar    BYTE PTR [edi-0x5d61a7d7],1
  416c75:	add    bl,dh
  416c77:	push   ss
  416c78:	nop
  416c79:	retf   
  416c7a:	sub    eax,0x5d51fab1
  416c7f:	bnd ret 0x9dd8
  416c83:	push   es
  416c84:	data16 fwait
  416c86:	mov    ebx,0xb0a139a8
  416c8b:	sub    eax,0x290022f7
  416c90:	popf   
  416c91:	push   ebp
  416c92:	xchg   edx,eax
  416c93:	out    dx,eax
  416c94:	repz mov esp,0x23d3344b
  416c9a:	jle    0x416d18
  416c9c:	cmp    DWORD PTR [edx+0x2b],esi
  416c9f:	in     eax,0xfa
  416ca1:	sbb    ecx,DWORD PTR [ecx]
  416ca3:	mov    ds:0x4c0c09e,eax
  416ca8:	mov    DWORD PTR [esi+eax*4],ebx
  416cab:	adc    edi,DWORD PTR [esi+0xe]
  416cae:	inc    edx
  416caf:	jge    0x416cfe
  416cb1:	enter  0x44e9,0xad
  416cb5:	pop    es
  416cb6:	pop    edi
  416cb7:	sub    DWORD PTR ds:0xd213af78,0xffffffd4
  416cbe:	(bad)  
  416cbf:	bound  eax,QWORD PTR [ebp*8-0x1215a668]
  416cc6:	mov    ah,0x8c
  416cc8:	xor    BYTE PTR [edx],0xe
  416ccb:	(bad)  
  416ccc:	mov    bh,0xfe
  416cce:	dec    BYTE PTR [eax-0x71]
  416cd1:	jg     0x416d26
  416cd3:	fbld   TBYTE PTR [edi-0x7fb1bf6c]
  416cd9:	mov    ecx,edi
  416cdb:	ror    DWORD PTR [edi+0x79],1
  416cde:	and    bl,cl
  416ce0:	push   edi
  416ce1:	mov    eax,0x522d8f82
  416ce6:	lock stc 
  416ce8:	sub    BYTE PTR [ecx-0x70],0x3
  416cec:	mov    eax,ds:0xa8f23dbe
  416cf1:	inc    edi
  416cf2:	and    DWORD PTR [edi+ebp*8-0x21],eax
  416cf6:	arpl   WORD PTR [ecx+0x1e5b78af],ax
  416cfc:	cld    
  416cfd:	dec    edx
  416cfe:	in     eax,dx
  416cff:	push   0x8e4b1c72
  416d04:	test   BYTE PTR [ebp+0x4b],cl
  416d07:	or     ecx,eax
  416d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d0a:	jo     0x416d86
  416d0c:	pop    es
  416d0d:	addr16 pusha 
  416d0f:	or     DWORD PTR [edi-0x642cb3a1],0x5c31ec6d
  416d19:	lahf   
  416d1a:	cmp    ebx,0x5
  416d1d:	leave  
  416d1e:	dec    esp
  416d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d20:	sahf   
  416d21:	dec    edi
  416d22:	cmp    esp,DWORD PTR [ebp-0x4836fc18]
  416d28:	push   ecx
  416d29:	fisttp QWORD PTR [ebx+0x794c0372]
  416d2f:	out    0x5c,al
  416d31:	ds jae 0x416d2c
  416d34:	and    dl,BYTE PTR [ecx-0x5dbae0bb]
  416d3a:	cmp    al,0xd4
  416d3c:	xchg   BYTE PTR [edi-0x6f],dh
  416d3f:	pop    edx
  416d40:	xchg   ecx,eax
  416d41:	addr16 loope 0x416dbb
  416d44:	retf   0xdeab
  416d47:	add    eax,0x660efd02
  416d4c:	(bad)  
  416d4d:	jecxz  0x416d1a
  416d4f:	inc    BYTE PTR [edi+0x78]
  416d52:	out    0xd3,al
  416d54:	jg     0x416d0b
  416d56:	pop    edi
  416d57:	cmp    al,0xb8
  416d59:	or     DWORD PTR [ebx],ebx
  416d5b:	sbb    eax,0x95cd12c8
  416d60:	pop    eax
  416d61:	sbb    DWORD PTR [ecx],ecx
  416d63:	adc    esp,DWORD PTR [edi]
  416d65:	inc    edi
  416d66:	mov    bl,0x7c
  416d68:	ins    DWORD PTR es:[edi],dx
  416d69:	test   esp,edx
  416d6b:	mov    bh,BYTE PTR [esi+0x3c]
  416d6e:	cmp    eax,0xae65b38b
  416d73:	sub    esp,DWORD PTR [eax-0x2f301268]
  416d79:	inc    ebx
  416d7a:	adc    DWORD PTR [edx-0x184710a7],0x7277247f
  416d84:	sar    bh,1
  416d86:	mov    esp,0x8e669f3e
  416d8b:	ret    0x4105
  416d8e:	(bad)
  416d91:	leave  
  416d92:	sbb    eax,DWORD PTR [eax]
  416d94:	arpl   WORD PTR [ebx],bx
  416d96:	xor    eax,DWORD PTR ds:0x6d6a538a
  416d9c:	out    0x92,eax
  416d9e:	clc    
  416d9f:	jle    0x416e15
  416da1:	out    0x78,eax
  416da3:	mov    WORD PTR [edx+0x75aa78d1],ds
  416da9:	stc    
  416daa:	inc    ebx
  416dab:	sbb    al,0x97
  416dad:	mov    eax,0x3dd5ff1c
  416db2:	push   esi
  416db3:	in     eax,dx
  416db4:	loope  0x416e18
  416db6:	jge    0x416e09
  416db8:	or     BYTE PTR [ebp+0x42a16a33],cl
  416dbe:	jb     0x416d9b
  416dc0:	xor    eax,0x22a5fcf3
  416dc5:	xchg   esp,eax
  416dc6:	xchg   edx,eax
  416dc7:	(bad)  
  416dc8:	mov    dl,0xf7
  416dca:	mov    dh,0x46
  416dcc:	jbe    0x416dae
  416dce:	mov    edi,0xea1cc808
  416dd3:	push   ecx
  416dd4:	xchg   edi,eax
  416dd5:	(bad)  
  416dd6:	xor    dh,BYTE PTR [ebx+0x67d6697a]
  416ddc:	dec    edi
  416ddd:	inc    esi
  416dde:	pop    ss
  416ddf:	adc    eax,0x435c72e0
  416de4:	add    al,0x42
  416de6:	sub    edi,DWORD PTR [eax]
  416de8:	mov    dl,0x20
  416dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416deb:	xchg   DWORD PTR [edx+0x1abd947a],ecx
  416df1:	sub    al,0xfb
  416df3:	fld    QWORD PTR [eax+edx*1]
  416df6:	xlat   BYTE PTR ds:[ebx]
  416df7:	ins    DWORD PTR es:[edi],dx
  416df8:	in     al,0xfa
  416dfa:	mov    dl,0xa
  416dfc:	cld    
  416dfd:	psrlq  mm5,QWORD PTR [edi]
  416e00:	inc    edi
  416e01:	push   cs
  416e02:	ffreep st(7)
  416e04:	cli    
  416e05:	sub    dh,dl
  416e07:	(bad)  
  416e08:	lods   al,BYTE PTR ds:[esi]
  416e09:	or     dh,ah
  416e0b:	xor    dl,dh
  416e0d:	mov    esp,esi
  416e0f:	mov    dl,0x15
  416e11:	aam    0x12
  416e13:	imul   esp,DWORD PTR [edx+0x562695b5],0x6cef9713
  416e1d:	mov    cl,0x99
  416e1f:	popa   
  416e20:	dec    esp
  416e21:	jmp    0x416e05
  416e23:	jne    0x416dd7
  416e25:	pop    ecx
  416e26:	int3   
  416e27:	loope  0x416db6
  416e29:	pop    esi
  416e2a:	xchg   ecx,eax
  416e2b:	les    ecx,FWORD PTR [ecx+0x5]
  416e2e:	bnd ja 0x416e75
  416e31:	dec    ebx
  416e32:	fstp   TBYTE PTR [ebp+esi*1+0x39]
  416e36:	pop    edx
  416e37:	aam    0x11
  416e39:	fwait
  416e3a:	xchg   edi,eax
  416e3b:	xchg   ebp,eax
  416e3c:	mov    esi,0xc6a11b30
  416e41:	mov    dh,0x5a
  416e43:	or     BYTE PTR [edx+0x22f6fbb3],ah
  416e49:	pop    ds
  416e4a:	es (bad) 
  416e4c:	xor    al,0x35
  416e4e:	shl    DWORD PTR ds:0x559ac36a,cl
  416e54:	adc    ecx,DWORD PTR [ecx+0x3d]
  416e57:	and    DWORD PTR ds:0x325df405,ebp
  416e5d:	test   DWORD PTR [esp+esi*2-0x68],edx
  416e61:	loopne 0x416e62
  416e63:	mov    DWORD PTR [edi-0x29],ebx
  416e66:	mov    al,ds:0x78d4b3fd
  416e6b:	xchg   esi,eax
  416e6c:	imul   esp,DWORD PTR [edi+0x21],0xffffff92
  416e70:	pop    es
  416e71:	adc    edi,DWORD PTR [edi-0x19]
  416e74:	dec    edx
  416e75:	pop    esi
  416e76:	(bad)  
  416e78:	mov    DWORD PTR ds:0x1adfc1fc,esp
  416e7e:	fdiv   QWORD PTR [ecx-0x40]
  416e81:	pause  
  416e83:	(bad)  
  416e84:	sbb    ch,bl
  416e86:	ss es ds jle 0x416e63
  416e8b:	mov    ch,0x7d
  416e8d:	push   eax
  416e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e8f:	popa   
  416e90:	lahf   
  416e91:	ds mov ah,0x88
  416e94:	lods   eax,DWORD PTR ds:[esi]
  416e95:	pushf  
  416e96:	push   es
  416e97:	cmp    esp,DWORD PTR [eax+edx*2]
  416e9a:	out    0x50,eax
  416e9c:	stos   BYTE PTR es:[edi],al
  416e9d:	popa   
  416e9e:	mov    WORD PTR [ebp-0x2c9a5a48],gs
  416ea4:	out    dx,eax
  416ea5:	lock aad 0x11
  416ea8:	push   ds
  416ea9:	xchg   ebx,eax
  416eaa:	jg     0x416ebb
  416eac:	out    dx,al
  416ead:	clc    
  416eae:	arpl   WORD PTR [ebp+0x79],dx
  416eb1:	(bad)  
  416eb2:	aam    0x39
  416eb4:	in     eax,0x62
  416eb6:	mov    edx,0xc243a6dc
  416ebc:	cwde   
  416ebd:	sub    DWORD PTR [esi+0x393edf87],ecx
  416ec3:	pop    ecx
  416ec4:	mov    ch,0x97
  416ec6:	jo     0x416e53
  416ec8:	jecxz  0x416ec7
  416eca:	in     eax,0x94
  416ecc:	xlat   BYTE PTR ds:[ebx]
  416ecd:	leave  
  416ece:	sti    
  416ecf:	imul   eax,DWORD PTR [eax-0x30f14bf5],0xffffffce
  416ed6:	aas    
  416ed7:	adc    DWORD PTR [edx+0x32],ebp
  416eda:	in     al,dx
  416edb:	xchg   esi,eax
  416edc:	cmp    ebp,DWORD PTR [edx-0xf5f72ff]
  416ee2:	mov    ebx,0x3a6e980
  416ee7:	outs   dx,DWORD PTR ds:[esi]
  416ee8:	ins    BYTE PTR es:[edi],dx
  416ee9:	sub    esp,eax
  416eeb:	out    dx,al
  416eec:	test   BYTE PTR [ebp-0x63097c5b],ch
  416ef2:	xor    ebx,DWORD PTR [eax]
  416ef4:	fcmovne st,st(7)
  416ef6:	xor    eax,ebx
  416ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ef9:	xchg   esp,eax
  416efa:	jne    0x416e94
  416efc:	retf   
  416efd:	inc    esp
  416efe:	and    al,0xd2
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	cmp    dh,BYTE PTR [ebp+edx*4-0x6a]
  416f1b:	xchg   ebx,eax
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x2a
  416f24:	cld    
  416f25:	xchg   ebx,eax
  416f26:	retf   0x7982
  416f29:	dec    ebp
  416f2a:	fcom   QWORD PTR [edx+0x56]
  416f2d:	call   DWORD PTR [esi+eax*2+0x60]
  416f31:	mov    BYTE PTR [ebx-0x570b80d7],0xf3
  416f38:	push   ebp
  416f39:	cmp    ebp,esi
  416f3b:	aas    
  416f3c:	(bad)  
  416f3d:	nop
  416f3e:	clc    
  416f3f:	add    ch,ch
  416f41:	dec    ebx
  416f42:	icebp  
  416f43:	mov    bh,0xb
  416f45:	mov    dh,0x19
  416f47:	sar    DWORD PTR [eax*8+0x65079aeb],0x48
  416f4f:	fwait
  416f50:	add    cl,BYTE PTR [edi+0x7a]
  416f53:	push   ebx
  416f54:	mov    bh,BYTE PTR [ebx+0x59]
  416f57:	hlt    
  416f58:	xchg   edi,eax
  416f59:	enter  0xa90,0x80
  416f5d:	xchg   BYTE PTR [ecx-0x30ca6488],ch
  416f63:	into   
  416f64:	pop    ds
  416f65:	sbb    BYTE PTR [eax+0xaae00a],dl
  416f6b:	data16 in al,dx
  416f6d:	xchg   edx,eax
  416f6e:	mov    bl,BYTE PTR [ebx+edi*4]
  416f71:	pop    ecx
  416f72:	pop    ss
  416f73:	sub    dh,BYTE PTR [ecx-0x4a]
  416f76:	cmp    bh,bh
  416f78:	nop
  416f79:	loopne 0x416fbd
  416f7b:	inc    edx
  416f7c:	fmul   DWORD PTR [eax+0xb]
  416f7f:	loope  0x416f40
  416f81:	mov    ebx,0x68c538fa
  416f86:	pop    ebx
  416f87:	cmp    al,al
  416f89:	out    dx,eax
  416f8a:	mov    ah,0x86
  416f8c:	cmp    eax,0x3cc095b6
  416f91:	adc    bh,BYTE PTR [edi]
  416f93:	xchg   BYTE PTR [esi-0x76399dd3],bh
  416f99:	cmp    edi,edi
  416f9b:	pop    ss
  416f9c:	std    
  416f9d:	cmp    DWORD PTR [eax+0x7a],edx
  416fa0:	adc    al,0x3a
  416fa2:	lahf   
  416fa3:	lahf   
  416fa4:	sar    BYTE PTR [edx+0xb73415b],1
  416faa:	inc    eax
  416fab:	push   esp
  416fac:	push   eax
  416fad:	jb     0x416ffa
  416faf:	push   ebp
  416fb0:	test   DWORD PTR [esi+edx*2-0x43c67e8c],edi
  416fb7:	inc    edi
  416fb8:	scas   eax,DWORD PTR es:[edi]
  416fb9:	and    esi,ebx
  416fbb:	stc    
  416fbc:	int    0x8d
  416fbe:	push   esi
  416fbf:	sub    BYTE PTR [edx],ah
  416fc1:	lods   al,BYTE PTR ds:[esi]
  416fc2:	sub    bh,cl
  416fc4:	sbb    eax,0x3091a7eb
  416fc9:	adc    BYTE PTR [esi],0x3e
  416fcc:	in     al,0x8e
  416fce:	mov    edi,ebx
  416fd0:	fsubr  QWORD PTR [esi-0x4b636936]
  416fd6:	xchg   esp,eax
  416fd7:	call   0x9315:0xc73792ac
  416fde:	push   edi
  416fdf:	imul   edx,eax,0x880418e5
  416fe5:	xchg   DWORD PTR [ebx],edi
  416fe7:	cmp    BYTE PTR [ebx-0x448acefd],bh
  416fed:	dec    esp
  416fee:	in     al,0x5
  416ff0:	cmp    al,BYTE PTR [bx+si]
  416ff3:	jbe    0x416f8c
  416ff5:	arpl   WORD PTR [eax+0x231714ce],di
  416ffb:	cmp    eax,0x65bcbdda
  417000:	in     eax,dx
  417001:	cmp    ecx,edi
  417003:	push   eax
  417004:	sub    eax,0x9b01ab04
  417009:	jb     0x417079
  41700b:	enter  0x7013,0xd4
  41700f:	dec    edx
  417010:	in     al,0x6c
  417012:	xchg   ebx,eax
  417013:	into   
  417014:	pop    ss
  417015:	pop    ecx
  417016:	jecxz  0x416fe5
  417018:	(bad)  
  417019:	hlt    
  41701a:	mov    ds:0x5c3a5a69,al
  41701f:	pop    eax
  417020:	dec    edi
  417021:	jno    0x417052
  417023:	xchg   ecx,eax
  417024:	or     ch,BYTE PTR [ecx]
  417026:	jo     0x41701a
  417028:	mov    BYTE PTR [eax],bl
  41702a:	test   BYTE PTR [esi+0x565edc60],cl
  417030:	add    BYTE PTR [ebx+0xc],ch
  417033:	scas   al,BYTE PTR es:[edi]
  417034:	out    0x22,eax
  417036:	ja     0x41709b
  417038:	push   ebx
  417039:	cli    
  41703a:	or     BYTE PTR [ebx-0x11],cl
  41703d:	ret    0x9b48
  417040:	aam    0xaa
  417042:	pop    esi
  417043:	repnz xor eax,0xaa6968ad
  417049:	jecxz  0x417047
  41704b:	stos   DWORD PTR es:[edi],eax
  41704c:	cdq    
  41704d:	sbb    eax,0x399bf68f
  417052:	lock ins BYTE PTR es:[edi],dx
  417054:	xchg   edx,eax
  417055:	mov    edx,0xda52d30b
  41705a:	add    dh,BYTE PTR [edi]
  41705c:	fwait
  41705d:	lahf   
  41705e:	sub    dl,bh
  417060:	outs   dx,DWORD PTR ds:[esi]
  417061:	loope  0x417018
  417063:	cmc    
  417064:	mov    BYTE PTR [edi+esi*4],ch
  417067:	push   es
  417068:	icebp  
  417069:	mov    edi,0x62640545
  41706e:	lds    ebx,FWORD PTR [ebp-0x30c441b4]
  417074:	inc    ecx
  417075:	sti    
  417076:	outs   dx,DWORD PTR ds:[esi]
  417077:	bound  edx,QWORD PTR [esp+eax*2-0x10]
  41707b:	jno    0x41706a
  41707d:	mov    ch,0xf1
  41707f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417080:	dec    edx
  417081:	push   cs
  417082:	aad    0x99
  417084:	sar    DWORD PTR [edx+0x37],cl
  417087:	arpl   WORD PTR [ecx-0x31],bp
  41708a:	push   edi
  41708b:	stc    
  41708c:	and    DWORD PTR ds:0x15dad356,edi
  417092:	inc    esi
  417093:	mov    al,BYTE PTR [eax+0x6d1e0a1]
  417099:	push   esp
  41709a:	test   eax,0x2421c573
  41709f:	aaa    
  4170a0:	jae    0x417105
  4170a2:	icebp  
  4170a3:	xor    edi,DWORD PTR [esi]
  4170a5:	inc    esi
  4170a6:	add    BYTE PTR [eax+0x35],ah
  4170a9:	and    dl,BYTE PTR [edx+0x19be99aa]
  4170af:	push   esp
  4170b0:	add    DWORD PTR [esi],ebx
  4170b2:	sub    BYTE PTR [edx+edi*8+0x5e],dl
  4170b6:	ins    BYTE PTR es:[edi],dx
  4170b7:	fsub   DWORD PTR [edx+0x3a]
  4170ba:	dec    edi
  4170bb:	je     0x417126
  4170bd:	push   es
  4170be:	(bad)  
  4170bf:	jle    0x4170bb
  4170c1:	xchg   al,dl
  4170c3:	je     0x417144
  4170c5:	adc    eax,0x2cb9d0ee
  4170ca:	xchg   esp,eax
  4170cb:	xchg   edi,eax
  4170cc:	add    edx,edi
  4170ce:	mov    edi,0x84620b17
  4170d3:	xchg   DWORD PTR [ebp-0x33],eax
  4170d6:	or     BYTE PTR [edi+0xa],al
  4170d9:	aad    0x99
  4170db:	clc    
  4170dc:	inc    ecx
  4170dd:	xor    al,dh
  4170df:	fcmovnu st,st(2)
  4170e1:	rol    bh,1
  4170e3:	push   0x3d
  4170e5:	pusha  
  4170e6:	cmp    eax,0x55422fb6
  4170eb:	call   0xaefab352
  4170f0:	jns    0x417102
  4170f2:	xor    al,0xcb
  4170f4:	and    esi,DWORD PTR [edi-0x10ce4f5b]
  4170fa:	mov    ch,0x43
  4170fc:	push   ecx
  4170fd:	clc    
  4170fe:	inc    ebp
  4170ff:	pop    ebx
  417100:	mov    esi,0x39323a99
  417105:	mov    dh,0x67
  417107:	out    dx,al
  417108:	sub    eax,0xb04c090d
  41710d:	scas   al,BYTE PTR es:[edi]
  41710e:	ror    ecx,0xbb
  417111:	sbb    al,BYTE PTR [esi-0x5325a789]
  417117:	(bad)  
  417119:	pop    edi
  41711a:	pop    ss
  41711b:	mov    ecx,?
  41711d:	ins    DWORD PTR es:[edi],dx
  41711e:	add    ecx,DWORD PTR es:[eax*1+0xa39be7d]
  417126:	and    BYTE PTR [eax-0x5f41aa6b],ch
  41712c:	stos   BYTE PTR es:[edi],al
  41712d:	sbb    al,0x81
  41712f:	aam    0xdd
  417131:	mov    dl,0xf2
  417133:	sub    BYTE PTR [edx-0x2bdfdafc],0xd7
  41713a:	out    0xbf,eax
  41713c:	sahf   
  41713d:	xchg   esi,eax
  41713e:	sbb    BYTE PTR [edi-0x40],dh
  417141:	mov    cl,0x2d
  417143:	cmp    ah,bh
  417145:	inc    ecx
  417146:	stc    
  417147:	dec    edi
  417148:	push   edx
  417149:	or     ecx,DWORD PTR [ecx+0x2d]
  41714c:	je     0x4170f4
  41714e:	sub    al,0xa9
  417150:	push   0xd5c75bea
  417155:	mov    ebx,edi
  417157:	call   0xaa8e:0x6ba3feef
  41715e:	sti    
  41715f:	(bad)  
  417160:	rol    esi,1
  417162:	push   ebp
  417163:	push   ecx
  417164:	sbb    BYTE PTR [edi+0x1b407acd],dl
  41716a:	test   BYTE PTR [edx-0x570719f2],cl
  417170:	xchg   edi,eax
  417171:	stos   BYTE PTR es:[edi],al
  417172:	ss mov cl,0x2
  417175:	enter  0x2e81,0x5
  417179:	push   ebx
  41717a:	mov    edx,0xf0d77f65
  41717f:	lahf   
  417180:	mov    ah,ah
  417182:	or     esp,ebx
  417184:	cmp    DWORD PTR [ebx],esp
  417186:	cmp    bl,BYTE PTR [eax]
  417188:	adc    BYTE PTR [edx+0x37e24f91],dh
  41718e:	mov    esi,?
  417190:	adc    dl,al
  417192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417193:	int    0x76
  417195:	jecxz  0x417176
  417197:	popf   
  417198:	fdiv   QWORD PTR [eax]
  41719a:	inc    ebx
  41719b:	enter  0x7ed3,0x84
  41719f:	sub    al,0x53
  4171a1:	pop    ds
  4171a2:	out    0xc5,eax
  4171a4:	cld    
  4171a5:	pop    esi
  4171a6:	push   ecx
  4171a7:	ins    BYTE PTR es:[edi],dx
  4171a8:	mov    ch,0xc6
  4171aa:	sbb    BYTE PTR [eax-0x71],ah
  4171ad:	mov    ebp,DWORD PTR [edi]
  4171af:	pop    ecx
  4171b0:	popa   
  4171b1:	dec    eax
  4171b2:	add    cl,ah
  4171b4:	dec    edx
  4171b5:	repnz push 0x5
  4171b8:	jg     0x417157
  4171ba:	gs fwait
  4171bc:	xor    eax,0x81282471
  4171c1:	pop    ds
  4171c2:	cmp    bl,BYTE PTR [edi]
  4171c4:	shl    BYTE PTR [ecx],1
  4171c6:	sti    
  4171c7:	arpl   WORD PTR [eax+edx*1-0x16],si
  4171cb:	loop   0x417247
  4171cd:	fbld   TBYTE PTR [ecx+0x45]
  4171d0:	mov    edi,0x8c8f34aa
  4171d5:	dec    ecx
  4171d6:	scas   eax,DWORD PTR es:[edi]
  4171d7:	jge    0x4171f0
  4171d9:	dec    esp
  4171da:	and    BYTE PTR [esi],ch
  4171dc:	mov    bl,0x61
  4171de:	push   ds
  4171df:	sub    DWORD PTR es:[esi+0x48ab0d7c],eax
  4171e6:	and    eax,0xdf6cf709
  4171eb:	iret   
  4171ec:	sbb    ch,dh
  4171ee:	test   eax,0x1bc8e5c4
  4171f3:	in     al,0xfc
  4171f5:	cmp    ch,BYTE PTR [edi+0x60e7fb7c]
  4171fb:	push   0x60
  4171fd:	or     bh,BYTE PTR [eax+0x5d]
  417200:	sub    BYTE PTR [edi],bl
  417202:	(bad)  
  417203:	fisubr WORD PTR [ebx]
  417205:	mov    bl,0x2e
  417207:	fs sbb al,0xbf
  41720a:	ins    DWORD PTR es:[edi],dx
  41720b:	inc    esi
  41720c:	mov    ds:0xfba513c3,al
  417211:	lea    esp,[ecx+0x5a]
  417214:	mov    ebx,0x7e688927
  417219:	pop    esp
  41721a:	(bad)  
  41721b:	out    dx,eax
  41721c:	icebp  
  41721d:	jl     0x417221
  41721f:	dec    ebp
  417220:	std    
  417221:	rcr    BYTE PTR [edi+0x10b5e24],cl
  417227:	dec    eax
  417228:	mul    ch
  41722a:	cmp    ch,cl
  41722c:	add    DWORD PTR [edx+eax*4-0x559061cd],eax
  417233:	mov    ebp,0x1fb61135
  417238:	clc    
  417239:	or     al,0xd9
  41723b:	dec    esi
  41723c:	repnz aam 0x72
  41723f:	mov    ebx,0x8e581c56
  417244:	aas    
  417245:	in     al,0xd3
  417247:	ds aam 0xae
  41724a:	out    dx,eax
  41724b:	outs   dx,DWORD PTR ds:[esi]
  41724c:	pop    edx
  41724d:	mov    ebp,0x30fda6cc
  417252:	push   0xffffffcd
  417254:	push   ss
  417255:	sbb    DWORD PTR [esi+eiz*4],esp
  417258:	arpl   WORD PTR ds:0xdca26bfc,bp
  41725e:	scas   al,BYTE PTR es:[edi]
  41725f:	push   ebp
  417260:	fimul  DWORD PTR [esi-0x7d62b207]
  417266:	in     eax,dx
  417267:	ror    dh,cl
  417269:	and    ch,BYTE PTR [ecx+edi*4]
  41726c:	dec    ebp
  41726d:	in     al,0x10
  41726f:	sub    DWORD PTR [esi+0x1],esp
  417272:	fwait
  417273:	push   ebp
  417274:	adc    edx,DWORD PTR [eax+0x1f]
  417277:	(bad)  
  417278:	jb     0x41729b
  41727a:	cmovne esi,DWORD PTR [edx-0x35]
  41727e:	test   BYTE PTR [edi+0x2f6835e6],dh
  417284:	jge    0x41723d
  417286:	je     0x4172fc
  417288:	ins    BYTE PTR es:[edi],dx
  417289:	repnz loop 0x4172e2
  41728c:	jmp    esp
  41728e:	call   0xc323:0x189ff03a
  417295:	push   edi
  417296:	outs   dx,DWORD PTR ds:[esi]
  417297:	pop    ebx
  417298:	pmulhw mm1,QWORD PTR [ebx-0x32]
  41729c:	(bad)  
  41729d:	cmp    BYTE PTR [edi],dl
  41729f:	pusha  
  4172a0:	ss ret 
  4172a2:	pop    edx
  4172a3:	enter  0x4e8d,0xaa
  4172a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172a8:	jno    0x417268
  4172aa:	test   ah,bl
  4172ac:	cmp    DWORD PTR ss:[eax+ecx*4+0x4c89f417],esp
  4172b4:	test   al,0xa8
  4172b6:	outs   dx,DWORD PTR ds:[esi]
  4172b7:	push   ss
  4172b8:	mov    es,esi
  4172ba:	pop    es
  4172bb:	mov    al,0x83
  4172bd:	jbe    0x417325
  4172bf:	xor    DWORD PTR [ebp+eiz*2-0x458fec6a],eax
  4172c6:	test   al,0xab
  4172c8:	or     al,0x87
  4172ca:	into   
  4172cb:	fs jae 0x417297
  4172ce:	cmp    dh,al
  4172d0:	inc    ebp
  4172d1:	fnstsw WORD PTR [ecx-0x6]
  4172d4:	push   0xeeeaa1e8
  4172d9:	les    ecx,FWORD PTR [eax]
  4172db:	daa    
  4172dc:	ja     0x417315
  4172de:	loop   0x417265
  4172e0:	jo     0x4172bf
  4172e2:	push   eax
  4172e3:	loope  0x4172ce
  4172e5:	push   ss
  4172e6:	xchg   edx,eax
  4172e7:	icebp  
  4172e8:	outs   dx,BYTE PTR ds:[esi]
  4172e9:	int3   
  4172ea:	push   ecx
  4172eb:	jns    0x417335
  4172ed:	xchg   DWORD PTR [edi],eax
  4172ef:	jle    0x417339
  4172f1:	cmc    
  4172f2:	out    dx,eax
  4172f3:	push   esi
  4172f4:	pop    esi
  4172f5:	mov    ah,BYTE PTR [edx+0x6c38c307]
  4172fb:	(bad)
  4172fe:	out    dx,eax
  4172ff:	(bad)  
  417300:	mov    ds:0xae9294ce,eax
  417305:	mov    eax,ds:0xc6e5a2f2
  41730a:	retf   
  41730b:	and    eax,0xacc56ada
  417310:	mov    al,ds:0xd2ef4067
  417315:	or     edi,0x2c
  417318:	neg    BYTE PTR [ecx]
  41731a:	fdivrp st(0),st
  41731c:	into   
  41731d:	rcr    DWORD PTR [edi],0xd
  417320:	mov    dl,0xb
  417322:	(bad)  [ebx]
  417324:	rcr    DWORD PTR [ecx+0x24],cl
  417327:	call   0x5d25:0xa79602f7
  41732e:	push   ebp
  41732f:	push   0xffffffb2
  417331:	rol    DWORD PTR [ecx-0x165ee2e7],cl
  417337:	sbb    BYTE PTR [edi+0x63],cl
  41733a:	ins    DWORD PTR es:[edi],dx
  41733b:	mov    DWORD PTR [esp+edi*2+0x7d98d965],edi
  417342:	imul   edx,DWORD PTR [esi-0x6d0afe8d],0xe672dc22
  41734c:	(bad)  
  41734d:	and    bh,dh
  41734f:	bound  ebp,QWORD PTR [edi+ebp*1+0x55]
  417353:	shl    DWORD PTR [eax],1
  417355:	sahf   
  417356:	mov    edi,DWORD PTR [ecx]
  417358:	jge    0x417350
  41735a:	sbb    al,0x3f
  41735c:	ins    BYTE PTR es:[edi],dx
  41735d:	ins    BYTE PTR es:[edi],dx
  41735e:	xor    ebp,DWORD PTR [ebx+0xe]
  417361:	xchg   esi,eax
  417362:	rcl    BYTE PTR [edx-0x60c594b7],1
  417368:	add    bl,BYTE PTR [ebx]
  41736a:	and    ebx,ebp
  41736c:	adc    dh,BYTE PTR [edx]
  41736e:	nop
  41736f:	fldenv [edx]
  417371:	cwde   
  417372:	mov    es,WORD PTR [ecx-0x60]
  417375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417376:	cs sbb eax,0xde8f5309
  41737c:	neg    BYTE PTR [esi+eiz*4+0x3546e0fb]
  417383:	inc    edx
  417384:	out    dx,eax
  417385:	aad    0xde
  417387:	mov    cl,0xca
  417389:	xchg   ecx,eax
  41738a:	lahf   
  41738b:	mov    al,0x26
  41738d:	iret   
  41738e:	pop    ss
  41738f:	inc    ebx
  417390:	mov    ebp,0x8796e5fe
  417395:	fwait
  417396:	outs   dx,BYTE PTR ds:[esi]
  417397:	cs (bad) 
  417399:	out    0x3f,eax
  41739b:	xchg   ebp,eax
  41739c:	(bad)  
  41739d:	shl    DWORD PTR [esi],0x79
  4173a0:	push   ebp
  4173a1:	lods   eax,DWORD PTR ds:[esi]
  4173a2:	xor    cl,BYTE PTR [eax+0x7d]
  4173a5:	mov    ds:0xd514f37a,al
  4173aa:	xor    BYTE PTR [edx],bh
  4173ac:	lods   eax,DWORD PTR ds:[esi]
  4173ad:	pushf  
  4173ae:	movnti DWORD PTR [esi+0x7a4df4ad],eax
  4173b5:	pop    esp
  4173b6:	lods   al,BYTE PTR ds:[esi]
  4173b7:	jmp    0x41740e
  4173b9:	shr    BYTE PTR [ebx-0x790f594c],1
  4173bf:	mov    eax,ds:0xe83199b2
  4173c4:	mov    bl,dh
  4173c6:	adc    eax,0x93fb7ced
  4173cb:	ret    0x56f6
  4173ce:	daa    
  4173cf:	jne    0x417439
  4173d1:	sub    al,0x8f
  4173d3:	push   esp
  4173d4:	lods   al,BYTE PTR ds:[esi]
  4173d5:	into   
  4173d6:	clc    
  4173d7:	dec    ecx
  4173d9:	ins    DWORD PTR es:[edi],dx
  4173da:	adc    eax,0x80a14e9c
  4173df:	lods   al,BYTE PTR ds:[esi]
  4173e0:	fwait
  4173e1:	ror    ch,1
  4173e3:	mov    ebx,0xa1855f22
  4173e8:	call   0xc1c0046
  4173ed:	xchg   ebx,eax
  4173ee:	add    eax,0xe1c33ef2
  4173f3:	pop    edi
  4173f4:	mov    DWORD PTR [edi-0x15d76570],ecx
  4173fa:	enter  0x9741,0x2a
  4173fe:	inc    eax
  4173ff:	(bad)  
  417401:	lahf   
  417402:	inc    edx
  417403:	mov    esp,DWORD PTR ds:0xd4e6f3d4
  417409:	pop    ebp
  41740a:	push   es
  41740b:	pop    ds
  41740c:	adc    DWORD PTR [edx],edi
  41740e:	jge    0x4173cc
  417410:	rol    DWORD PTR [ebx-0x6523b708],cl
  417416:	push   ss
  417417:	jp     0x417423
  417419:	(bad)  
  41741a:	or     bl,BYTE PTR [edx]
  41741c:	clc    
  41741d:	aas    
  41741e:	ret    
  41741f:	fstp   DWORD PTR [eax-0x43]
  417422:	cwde   
  417423:	sahf   
  417424:	pop    ds
  417425:	ficomp DWORD PTR [edx-0x38]
  417428:	or     esp,esi
  41742a:	ret    
  41742b:	jne    0x4173e7
  41742d:	out    0x26,eax
  41742f:	xchg   edx,eax
  417430:	loop   0x417425
  417432:	test   eax,0xb5d0f4b0
  417437:	sub    al,0xfa
  417439:	ret    
  41743a:	scas   eax,DWORD PTR es:[edi]
  41743b:	repnz mov ebx,0x6778e79d
  417441:	xchg   DWORD PTR [edx],edi
  417443:	lea    edi,[edx]
  417445:	mov    ch,0x98
  417447:	xchg   edi,eax
  417448:	inc    eax
  417449:	shl    BYTE PTR [edx+0x7a],cl
  41744c:	fsubr  st,st(6)
  41744e:	in     eax,0xa6
  417450:	fidiv  WORD PTR [eax+0x7c]
  417453:	fwait
  417454:	sbb    BYTE PTR [esi-0x4e],dl
  417457:	fiadd  DWORD PTR [edi-0x3cb86029]
  41745d:	sub    cl,BYTE PTR [ecx]
  41745f:	dec    edi
  417460:	popf   
  417461:	sbb    dl,BYTE PTR [esi+edi*4+0x68]
  417465:	aam    0x62
  417467:	test   eax,0xcd5d4f4c
  41746c:	pop    ebx
  41746d:	test   al,0xd5
  41746f:	int    0xdd
  417471:	imul   ecx,DWORD PTR [eax+0x2d],0x7159309e
  417478:	and    bl,BYTE PTR ds:0x3be4ab47
  41747e:	arpl   dx,di
  417480:	rcl    DWORD PTR [ebp+ebp*4+0xa5d1f9d],1
  417487:	mov    ecx,ecx
  417489:	loop   0x4174b7
  41748b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41748c:	test   BYTE PTR [ebx-0x3a3906b],dl
  417492:	stos   DWORD PTR es:[edi],eax
  417493:	sahf   
  417494:	sbb    BYTE PTR [ecx+0x7d5c1035],dh
  41749a:	adc    DWORD PTR [esi],eax
  41749c:	call   0xf539:0xa5f625dd
  4174a3:	fdiv   DWORD PTR [esi+0x686642d3]
  4174a9:	call   FWORD PTR ds:0xf6a571ad
  4174af:	push   0x4bb05582
  4174b4:	je     0x41743e
  4174b6:	or     DWORD PTR [ebp+eiz*4-0x218c59b0],ecx
  4174bd:	add    esp,ebp
  4174bf:	push   edi
  4174c0:	iret   
  4174c1:	popa   
  4174c2:	(bad)  [edi]
  4174c4:	stos   BYTE PTR es:[edi],al
  4174c5:	mov    ebx,0x76b46aa8
  4174ca:	pop    es
  4174cb:	daa    
  4174cc:	pop    ss
  4174cd:	fld    DWORD PTR ds:0x9ea0bcb6
  4174d3:	lods   ax,WORD PTR ds:[esi]
  4174d5:	(bad)  
  4174d6:	push   ebp
  4174d7:	jbe    0x417540
  4174d9:	gs adc al,0x46
  4174dc:	sub    edi,0xa1c5eb5d
  4174e2:	pop    esi
  4174e3:	pop    ds
  4174e4:	sub    ch,BYTE PTR [eax+0x4c452c1b]
  4174ea:	dec    edi
  4174eb:	cmp    ch,BYTE PTR [eax]
  4174ed:	adc    DWORD PTR [ebp-0x32f08cde],eax
  4174f3:	inc    ebx
  4174f4:	ret    0x7abe
  4174f7:	les    edi,FWORD PTR [esi+0xd]
  4174fa:	fwait
  4174fb:	mov    bh,0x64
  4174fd:	dec    ebx
  4174fe:	fdiv   QWORD PTR [ebx+ebx*4+0x35]
  417502:	cli    
  417503:	aaa    
  417504:	add    esp,esi
  417506:	or     BYTE PTR [ecx+0x2c94b5a9],cl
  41750c:	out    dx,al
  41750d:	fidiv  DWORD PTR [edi]
  41750f:	(bad)  
  417511:	adc    DWORD PTR [esi-0x2],ecx
  417514:	jg     0x417571
  417516:	retf   
  417517:	sbb    DWORD PTR [ecx+0x10497b33],ebx
  41751d:	push   ebp
  41751e:	and    esp,esp
  417520:	ret    
  417521:	out    0x47,al
  417523:	shl    DWORD PTR [esi-0x71],1
  417526:	pf2id  mm4,mm6
  41752a:	rcl    DWORD PTR [ebp+0x15],cl
  41752d:	sub    ebp,DWORD PTR [ebx+edx*1-0x16]
  417531:	in     al,dx
  417532:	xchg   edx,eax
  417533:	daa    
  417534:	mov    BYTE PTR [ebx+0x11],ch
  417537:	and    ebp,DWORD PTR [edi+0x18]
  41753a:	add    DWORD PTR [ebx-0x70],edi
  41753d:	mov    eax,ds:0x82e23b56
  417542:	add    BYTE PTR [edi+0x18],ch
  417545:	enter  0xa234,0x69
  417549:	inc    ecx
  41754a:	test   eax,0xec490ee7
  41754f:	xor    al,0x77
  417551:	sar    bl,0x1e
  417554:	mov    al,ds:0x74cf05a4
  417559:	or     ebp,ebx
  41755b:	in     al,dx
  41755c:	pushf  
  41755d:	jno    0x417510
  41755f:	lods   eax,DWORD PTR ds:[esi]
  417560:	outs   dx,BYTE PTR ds:[esi]
  417561:	call   0xd6d9:0x3948a732
  417568:	dec    edx
  417569:	call   0xd00b5040
  41756e:	push   0xb86c9785
  417573:	out    dx,eax
  417574:	or     al,0x5d
  417576:	or     eax,0xb4870ee7
  41757b:	mov    ebp,0xab634844
  417580:	or     eax,0xad600802
  417585:	mov    cl,0x36
  417587:	fdivr  DWORD PTR [esi+0x7a]
  41758a:	adc    eax,0x3f192b0e
  41758f:	or     ecx,DWORD PTR [ecx-0x5]
  417592:	dec    edi
  417593:	(bad)  
  417594:	(bad)  
  417595:	out    dx,eax
  417596:	pop    esi
  417597:	sub    al,0xef
  417599:	or     esi,DWORD PTR [ebp+0x7fbb3adf]
  41759f:	scas   eax,DWORD PTR es:[edi]
  4175a0:	or     dh,BYTE PTR [ebp+0x4c00fb11]
  4175a6:	push   es
  4175a7:	push   esp
  4175a8:	retf   
  4175a9:	ins    DWORD PTR es:[edi],dx
  4175aa:	inc    esi
  4175ab:	push   edi
  4175ac:	sbb    DWORD PTR [ebp+0x72],0x558aac35
  4175b3:	test   dl,0x72
  4175b6:	xchg   ebx,eax
  4175b7:	lahf   
  4175b8:	mov    ebp,0x8b86e328
  4175bd:	sahf   
  4175be:	retf   0xdf0d
  4175c1:	or     DWORD PTR [eax+0x1f268bd2],eax
  4175c7:	lahf   
  4175c8:	ins    DWORD PTR es:[edi],dx
  4175c9:	clc    
  4175ca:	mov    eax,ds:0x9ede9a63
  4175cf:	xor    BYTE PTR [ebx],dl
  4175d1:	int    0x86
  4175d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175d4:	dec    ecx
  4175d5:	add    ebp,DWORD PTR [edx]
  4175d7:	xchg   ebx,eax
  4175d8:	out    0x8c,eax
  4175da:	push   0x9eeaeb34
  4175df:	sahf   
  4175e0:	out    0x8d,eax
  4175e2:	inc    ebx
  4175e3:	sub    BYTE PTR [ebx+0x58],bl
  4175e6:	dec    esi
  4175e7:	add    al,0x25
  4175e9:	rcr    BYTE PTR [edi+0x61],1
  4175ec:	cmp    al,0x33
  4175ee:	mov    WORD PTR [edi],ss
  4175f0:	and    eax,0xc855229a
  4175f5:	jno    0x4175d0
  4175f7:	dec    esp
  4175f8:	dec    esi
  4175f9:	push   es
  4175fa:	(bad)  [edx+0x20231164]
  417600:	test   DWORD PTR [ebx],ecx
  417602:	jle    0x417612
  417604:	mov    esp,0xd190f20a
  417609:	push   es
  41760a:	dec    ebp
  41760b:	rol    BYTE PTR [edx],cl
  41760d:	xchg   ebx,eax
  41760e:	(bad)  
  41760f:	(bad)
  417612:	push   ss
  417613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417614:	adc    BYTE PTR ss:[edx],cl
  417617:	jmp    0x96a2:0x3f9bcb65
  41761e:	in     eax,dx
  41761f:	mov    ch,0xe4
  417621:	scas   al,BYTE PTR es:[edi]
  417622:	(bad)  
  417623:	in     eax,0xd3
  417625:	adc    BYTE PTR [eax+0x63],dl
  417628:	mov    bl,0x69
  41762a:	inc    eax
  41762b:	sub    dl,BYTE PTR [ebp-0x2caac587]
  417631:	fistp  WORD PTR [edx-0x3b]
  417634:	pop    ebp
  417635:	iret   
  417636:	sbb    eax,0xcae7808a
  41763b:	ror    esi,0x53
  41763e:	push   es
  41763f:	(bad)  
  417640:	add    al,0xb2
  417642:	in     al,dx
  417643:	xchg   esp,eax
  417644:	push   0xefa69ca5
  417649:	inc    edi
  41764a:	adc    esp,ecx
  41764c:	lock adc al,0x38
  41764f:	in     eax,0x21
  417651:	pop    eax
  417652:	lea    ebp,[ecx-0x49]
  417655:	inc    esi
  417656:	popa   
  417657:	mov    dl,0xb4
  417659:	dec    edi
  41765a:	imul   dh
  41765c:	sbb    bh,BYTE PTR [ebx]
  41765e:	add    eax,0xc3c6a00b
  417663:	mov    eax,ds:0x6bdc99a1
  417668:	popf   
  417669:	mov    ebx,0xded639d9
  41766e:	loope  0x417644
  417670:	adc    DWORD PTR [ebx+0x431b1fa8],eax
  417676:	cmp    al,0xab
  417678:	push   cs
  417679:	cmp    ecx,DWORD PTR [ebx+0x62]
  41767c:	fwait
  41767d:	ret    
  41767e:	adc    al,0x87
  417680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417681:	fiadd  DWORD PTR [esi-0x6f]
  417684:	push   edx
  417685:	sub    al,0xcb
  417687:	ins    DWORD PTR es:[edi],dx
  417688:	sub    bh,BYTE PTR [ebx]
  41768a:	pusha  
  41768b:	jl     0x4176c8
  41768d:	(bad)  
  41768e:	in     al,0x9c
  417690:	rcr    eax,1
  417692:	retf   
  417693:	sbb    al,0x49
  417695:	mov    WORD PTR [ebx-0x10],?
  417698:	dec    edi
  417699:	mov    al,ds:0xb06fd769
  41769e:	xchg   esp,eax
  41769f:	jmp    0xfca2b6a1
  4176a4:	xchg   ch,al
  4176a6:	addr16 adc cl,cl
  4176a9:	fist   WORD PTR [ebx+eax*8]
  4176ac:	enter  0x285,0xff
  4176b0:	cld    
  4176b1:	mov    dh,BYTE PTR [edx]
  4176b3:	adc    edi,edx
  4176b5:	mov    eax,0x4011d094
  4176ba:	add    bl,BYTE PTR ds:0x718c8033
  4176c0:	sbb    al,0x57
  4176c2:	pop    esi
  4176c3:	aad    0x33
  4176c5:	cmc    
  4176c6:	(bad)  
  4176c7:	(bad)  
  4176c8:	lock and DWORD PTR [ebp-0x15],edi
  4176cc:	(bad)  
  4176cd:	loopne 0x4176e5
  4176cf:	mov    BYTE PTR [ebp-0x509e985e],ah
  4176d5:	js     0x4176c7
  4176d7:	jge    0x41765e
  4176d9:	mov    eax,ds:0xdf1da8a2
  4176de:	sbb    DWORD PTR [ebp-0x4d],ebx
  4176e1:	cmc    
  4176e2:	jb     0x4176d6
  4176e4:	ret    0x82a9
  4176e7:	outs   dx,BYTE PTR ds:[esi]
  4176e8:	jb     0x4176f0
  4176ea:	jae    0x4176b0
  4176ec:	cwde   
  4176ed:	ret    0x7c91
  4176f0:	sbb    edx,edi
  4176f2:	les    ebp,FWORD PTR [edi+0x305da109]
  4176f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f9:	and    BYTE PTR [esi+0x70],al
  4176fc:	aad    0x9e
  4176fe:	test   al,0xd9
  417700:	out    dx,al
  417701:	xor    BYTE PTR [ebp-0x7a5a1234],ch
  417707:	mov    ch,0x40
  417709:	aaa    
  41770a:	arpl   WORD PTR [edi],dx
  41770c:	imul   eax,DWORD PTR [ebp+0x5a],0xf9a795f
  417713:	mov    ch,0x4f
  417715:	and    ch,dh
  417717:	pop    eax
  417718:	ins    DWORD PTR es:[edi],dx
  417719:	not    edx
  41771b:	fsub   DWORD PTR [ebp-0x666c1e8d]
  417721:	call   DWORD PTR [esi*8-0x566c8145]
  417728:	pop    esp
  417729:	xchg   edi,eax
  41772a:	dec    edi
  41772b:	sbb    DWORD PTR [ebx-0x5a8ce310],ebx
  417731:	jp     0x417727
  417733:	mov    dl,0x77
  417735:	inc    edx
  417736:	mov    ebp,0x4e37a91d
  41773b:	push   edi
  41773c:	xor    edx,ecx
  41773e:	pop    ebx
  41773f:	mov    ds:0xc6da8d39,eax
  417744:	dec    esi
  417745:	adc    al,0x76
  417747:	sub    dh,BYTE PTR [eax]
  417749:	or     BYTE PTR [ecx+0x36],al
  41774c:	jo     0x41772a
  41774e:	mov    ah,0xf3
  417750:	and    eax,esi
  417752:	push   cs
  417753:	xchg   edx,eax
  417754:	jns    0x4177bf
  417756:	jge    0x4176e7
  417758:	cli    
  417759:	jg     0x417703
  41775b:	pop    ebp
  41775c:	cld    
  41775d:	adc    BYTE PTR [edx-0x711eba38],0x39
  417764:	std    
  417765:	jbe    0x417700
  417767:	pop    eax
  417768:	push   ebp
  417769:	inc    ebx
  41776a:	xchg   edi,eax
  41776b:	xchg   al,bl
  41776d:	in     al,dx
  41776e:	xchg   esi,eax
  41776f:	call   0x7b4e7e34
  417774:	cmp    dl,0x7d
  417777:	fadd   DWORD PTR [esi]
  417779:	stc    
  41777a:	dec    edx
  41777b:	pusha  
  41777c:	ja     0x4177aa
  41777e:	push   ecx
  41777f:	fisub  DWORD PTR [ebp-0x23a0cc19]
  417785:	outs   dx,DWORD PTR ds:[esi]
  417786:	push   esp
  417787:	imul   ebp,DWORD PTR [ebx-0xbd088c2],0xffffffa1
  41778e:	sbb    al,0x6b
  417790:	popa   
  417791:	repz je 0x4177f9
  417794:	xchg   ebp,eax
  417795:	pop    edx
  417796:	ss mov ds,ecx
  417799:	(bad)  
  41779a:	call   0x8fee:0xda9cf80b
  4177a1:	test   BYTE PTR [eax],ch
  4177a3:	mov    ds,edi
  4177a5:	sbb    edx,DWORD PTR [edx+0x30032b3f]
  4177ab:	std    
  4177ac:	or     esp,esp
  4177ae:	xor    DWORD PTR [esi+0x2b],esi
  4177b1:	fist   DWORD PTR [eax+0x203a241a]
  4177b7:	sahf   
  4177b8:	out    dx,eax
  4177b9:	pop    ds
  4177ba:	dec    edx
  4177bb:	push   cs
  4177bc:	mov    edx,0x872f3911
  4177c1:	inc    ebx
  4177c2:	add    cl,ch
  4177c4:	out    0xd8,eax
  4177c6:	sar    BYTE PTR [eax-0x375a6985],cl
  4177cc:	outs   dx,DWORD PTR ds:[esi]
  4177cd:	push   DWORD PTR [edx+0x7a]
  4177d0:	(bad)  
  4177d1:	call   0xbc6d803c
  4177d6:	repnz mov al,0x95
  4177d9:	pop    edi
  4177da:	pop    edi
  4177db:	cwde   
  4177dc:	push   edi
  4177dd:	jmp    0x4177cb
  4177df:	mov    WORD PTR [ebx+eiz*2-0x55],ss
  4177e3:	xlat   BYTE PTR ds:[ebx]
  4177e4:	sbb    eax,0xe4954710
  4177e9:	aaa    
  4177ea:	imul   edi,DWORD PTR [eax],0xffffffca
  4177ed:	(bad)  
  4177ee:	cmc    
  4177ef:	js     0x417860
  4177f1:	das    
  4177f2:	and    BYTE PTR [ebp-0x3ef71734],dh
  4177f8:	retf   0x244a
  4177fb:	mov    bl,0xd1
  4177fd:	call   0x2cc0253d
  417802:	mov    al,ds:0xdcd6e412
  417807:	add    eax,DWORD PTR [esi+0x53]
  41780a:	test   dh,ch
  41780c:	mov    bh,0x7b
  41780e:	cmp    al,0x2
  417810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417811:	std    
  417812:	mov    edi,0xb8d0e23a
  417817:	jge    0x417853
  417819:	lods   eax,DWORD PTR ds:[esi]
  41781a:	pop    esi
  41781b:	icebp  
  41781c:	addr16 pop ss
  41781e:	adc    DWORD PTR [edi],esi
  417820:	lock push 0x54
  417823:	sbb    DWORD PTR [edx-0x48],eax
  417826:	cmp    ebp,DWORD PTR [eax+0x34]
  417829:	pop    ds
  41782a:	push   ecx
  41782b:	jmp    0x417806
  41782d:	ret    0xd74f
  417830:	pop    ebx
  417831:	in     eax,0x2d
  417833:	dec    eax
  417834:	in     eax,dx
  417835:	add    BYTE PTR [ebx+0x52],0xa1
  417839:	push   ebp
  41783a:	cwde   
  41783b:	pop    es
  41783c:	jmp    0xd13d:0xe3a7f14d
  417843:	xchg   ecx,eax
  417844:	inc    edi
  417845:	xor    bh,dh
  417847:	das    
  417848:	mov    ch,0x98
  41784a:	sbb    eax,0xe291fb7c
  41784f:	sub    al,0x64
  417851:	or     al,0x8
  417853:	cld    
  417854:	mov    dl,0x5f
  417856:	in     al,0x46
  417858:	mov    ebx,0x3350c315
  41785d:	adc    eax,0xa14eee01
  417862:	mov    eax,ds:0x37183b52
  417867:	sbb    eax,0xc506b2b8
  41786c:	or     al,0x72
  41786e:	retf   0x948c
  417871:	jl     0x4178cf
  417873:	jnp    0x41780a
  417875:	adc    eax,0x9e1cf728
  41787a:	stc    
  41787b:	sub    ah,BYTE PTR [eax]
  41787d:	cli    
  41787e:	inc    ebx
  41787f:	pop    eax
  417880:	adc    cl,BYTE PTR [edx]
  417882:	(bad)  
  417885:	xchg   ecx,eax
  417886:	fisttp WORD PTR [ebp-0x25bc2c47]
  41788c:	mov    edx,esp
  41788e:	gs int 0x69
  417891:	cmp    BYTE PTR [bp+si-0x26],dh
  417895:	shl    bh,0x46
  417898:	add    eax,0xe074f68b
  41789d:	or     DWORD PTR ds:0xe63805ae,0xffffffb5
  4178a4:	lock push cs
  4178a6:	push   edx
  4178a7:	data16 jle 0x41791d
  4178aa:	sub    BYTE PTR [eax],al
  4178ac:	push   esp
  4178ad:	pop    esp
  4178ae:	shr    BYTE PTR ds:0x813c2db5,0x45
  4178b5:	leave  
  4178b6:	or     esi,esi
  4178b8:	jo     0x41787f
  4178ba:	dec    edx
  4178bb:	test   DWORD PTR [esp+ebp*8-0x3a],0xed5d9352
  4178c3:	leave  
  4178c4:	dec    ebp
  4178c5:	loope  0x417928
  4178c7:	jmp    0xa5163bc1
  4178cc:	inc    esi
  4178cd:	mov    eax,ds:0xfdb2241
  4178d2:	out    0xcd,eax
  4178d4:	jle    0x417934
  4178d6:	cmp    DWORD PTR [edi+esi*8+0x7aa44a48],esp
  4178dd:	dec    eax
  4178de:	cdq    
  4178df:	lds    ebp,FWORD PTR fs:[esi+0x5a363641]
  4178e6:	js     0x4178cf
  4178e8:	cs cmp esi,esp
  4178eb:	shl    BYTE PTR [ecx-0x10912c8e],1
  4178f1:	and    cl,BYTE PTR [eax+ecx*1-0x21]
  4178f5:	cmp    eax,0xd91452dd
  4178fa:	retf   0x856
  4178fd:	dec    ebx
  4178fe:	mov    ds:0xebe06f65,eax
  417903:	dec    ecx
  417904:	sbb    BYTE PTR [ebx-0x6b],ah
  417907:	(bad)  
  417908:	gs mov ah,0x2a
  41790b:	scas   eax,DWORD PTR es:[edi]
  41790c:	mov    ds:0x190277a8,eax
  417911:	cmp    eax,0x40cc5c02
  417916:	jnp    0x41789b
  417918:	cwde   
  417919:	push   cs
  41791a:	dec    esi
  41791b:	test   al,0x63
  41791d:	dec    ecx
  41791e:	dec    ebp
  41791f:	xlat   BYTE PTR ds:[ebx]
  417920:	sbb    bh,BYTE PTR [eax-0x49]
  417923:	or     al,0xb0
  417925:	xchg   BYTE PTR [ebx],cl
  417927:	enter  0x6e0b,0xb2
  41792b:	or     esi,DWORD PTR [ecx]
  41792d:	push   edi
  41792e:	pop    es
  41792f:	adc    ch,BYTE PTR [esi-0x6b]
  417932:	mov    esp,0xe0b693aa
  417937:	sar    DWORD PTR [edi+0x8],0x8e
  41793b:	cmp    BYTE PTR [esi-0x37],al
  41793e:	outs   dx,DWORD PTR ds:[esi]
  41793f:	imul   edi,DWORD PTR [ecx+0x3b4148d0],0x77
  417946:	xchg   edi,eax
  417947:	hlt    
  417948:	int3   
  417949:	sar    DWORD PTR [edi+0x4f],0x90
  41794d:	or     ecx,DWORD PTR [ecx-0x27]
  417950:	jecxz  0x417921
  417952:	add    al,BYTE PTR [ebp-0x79]
  417955:	nop
  417956:	hlt    
  417957:	dec    edi
  417958:	outs   dx,BYTE PTR ds:[esi]
  417959:	stc    
  41795a:	out    dx,eax
  41795b:	dec    edi
  41795c:	xlat   BYTE PTR ds:[ebx]
  41795d:	mov    esi,0x3f92425c
  417962:	cmp    ecx,DWORD PTR [eax]
  417964:	loope  0x4179af
  417966:	sub    BYTE PTR [edx],dh
  417968:	pop    ds
  417969:	pusha  
  41796a:	aad    0x86
  41796c:	imul   esp,DWORD PTR [eax-0x7a19e88d],0xffffffe7
  417973:	xlat   BYTE PTR ds:[ebx]
  417974:	adc    BYTE PTR [edx],ah
  417976:	fldenv [ebx-0x2f]
  417979:	pop    ebp
  41797a:	sbb    DWORD PTR [edi],esi
  41797c:	or     esi,0x7e0cac9e
  417982:	xchg   edx,eax
  417983:	or     DWORD PTR [esi],edx
  417985:	add    BYTE PTR [esi-0x3b],0x65
  417989:	push   0x4283674e
  41798e:	in     eax,dx
  41798f:	mov    DWORD PTR [ecx-0x75a877ac],0x6f82408
  417999:	lds    edi,FWORD PTR ds:0x496dcc89
  41799f:	pop    esp
  4179a0:	mov    dl,0x16
  4179a2:	pop    ebx
  4179a3:	pop    ebx
  4179a4:	icebp  
  4179a5:	or     eax,0x6582611d
  4179aa:	call   0xc17e:0x61f17242
  4179b1:	fiadd  DWORD PTR [edi-0xa09c3e]
  4179b7:	mov    ds:0x54ed733a,eax
  4179bc:	sub    bl,0xd9
  4179bf:	or     bh,BYTE PTR [edx-0x5c1dc7d9]
  4179c5:	sahf   
  4179c6:	xlat   BYTE PTR ds:[ebx]
  4179c7:	je     0x2c786894
  4179cd:	jl     0x4179ae
  4179cf:	dec    esi
  4179d0:	dec    ecx
  4179d1:	mov    eax,ds:0xde37015
  4179d6:	mov    edi,0x97c282c7
  4179db:	push   edi
  4179dc:	mov    bl,0x56
  4179de:	test   al,0x5b
  4179e0:	popa   
  4179e1:	ss inc esi
  4179e3:	es sub al,dl
  4179e6:	std    
  4179e7:	fcmove st,st(4)
  4179e9:	(bad)  [ebp-0x27]
  4179ec:	dec    edx
  4179ed:	sub    eax,0x650972b1
  4179f2:	add    eax,DWORD PTR [ebx-0x77]
  4179f5:	out    0xef,al
  4179f7:	cmp    esi,edx
  4179f9:	push   ebp
  4179fa:	les    ecx,FWORD PTR [edi-0xc]
  4179fd:	xor    DWORD PTR [eax+0x67b258a8],esp
  417a03:	into   
  417a04:	das    
  417a05:	push   esi
  417a06:	(bad)  
  417a07:	mov    al,bl
  417a09:	and    DWORD PTR [ecx+ecx*8+0x79],esp
  417a0d:	cmp    BYTE PTR [esp+ebx*8],0x8b
  417a11:	mov    edi,0x7611732a
  417a16:	repnz inc edi
  417a18:	clc    
  417a19:	jae    0x4179e3
  417a1b:	jecxz  0x4179d6
  417a1d:	xor    al,0x46
  417a1f:	cdq    
  417a20:	aaa    
  417a21:	push   cs
  417a22:	(bad)  
  417a23:	jmp    0x417a14
  417a25:	mov    DWORD PTR [ebp-0x4b883db9],0x8e4b1bf3
  417a2f:	out    0xb4,eax
  417a31:	pop    ss
  417a32:	xor    DWORD PTR [eax-0x3e8ef65f],ebx
  417a38:	rcr    DWORD PTR [ecx-0x7c2a5473],cl
  417a3e:	jle    0x417a88
  417a40:	mov    ah,BYTE PTR [esi+0x73]
  417a43:	xlat   BYTE PTR ds:[ebx]
  417a44:	jne    0x417a3c
  417a46:	xlat   BYTE PTR ds:[ebx]
  417a47:	mov    ds:0x5f12325a,eax
  417a4c:	jge    0x4179ee
  417a4e:	cdq    
  417a4f:	mov    ds:0x4715b842,al
  417a54:	lds    ebx,FWORD PTR [ebx+0x2d00ce5]
  417a5a:	xlat   BYTE PTR ds:[ebx]
  417a5b:	cs sahf 
  417a5d:	scas   al,BYTE PTR es:[edi]
  417a5e:	dec    ebp
  417a5f:	xor    DWORD PTR [edi-0x20],0x6e
  417a63:	leave  
  417a64:	call   0xcc3f:0x33ea1e79
  417a6b:	xlat   BYTE PTR ds:[ebx]
  417a6c:	add    bl,cl
  417a6e:	daa    
  417a6f:	ret    0xedbc
  417a72:	aaa    
  417a73:	mov    dh,0xb4
  417a75:	sbb    eax,0xc6ddc819
  417a7a:	rol    BYTE PTR [eax],1
  417a7c:	adc    BYTE PTR [ecx-0x70],bl
  417a7f:	fidiv  DWORD PTR [edi-0xe]
  417a82:	push   eax
  417a83:	inc    eax
  417a84:	and    al,0xef
  417a86:	xor    bh,BYTE PTR [esi-0x15]
  417a89:	repnz pop eax
  417a8b:	int3   
  417a8c:	rcl    BYTE PTR [ebx-0x577becd6],cl
  417a92:	mov    ah,0x89
  417a94:	in     eax,dx
  417a95:	mov    ch,0x90
  417a97:	addr16 adc dl,dl
  417a9a:	rcr    DWORD PTR [ebx-0x7f],1
  417a9d:	push   ebp
  417a9e:	sbb    ah,BYTE PTR [ebp+0x57]
  417aa1:	dec    esi
  417aa2:	mov    ch,BYTE PTR [edi+0x8]
  417aa5:	ins    DWORD PTR es:[edi],dx
  417aa6:	stc    
  417aa7:	push   esp
  417aa8:	int    0x35
  417aaa:	or     bl,BYTE PTR [bp+si-0x34]
  417aae:	ins    DWORD PTR es:[edi],dx
  417aaf:	mov    eax,ds:0x5007f01d
  417ab4:	dec    ecx
  417ab5:	xchg   edx,eax
  417ab6:	and    ebp,DWORD PTR [ebx+0x47]
  417ab9:	sahf   
  417aba:	add    BYTE PTR [edi],ch
  417abc:	fsub   DWORD PTR [ebx+0x7c]
  417abf:	xlat   BYTE PTR ds:[ebx]
  417ac0:	fwait
  417ac1:	sub    DWORD PTR [edx],ebx
  417ac3:	mov    eax,0xba9fc3e
  417ac8:	stc    
  417ac9:	push   esi
  417aca:	inc    eax
  417acb:	clc    
  417acc:	or     cl,ah
  417ace:	ja     0x417af2
  417ad0:	int    0x3f
  417ad2:	out    dx,eax
  417ad3:	sub    DWORD PTR [ebx],edi
  417ad5:	push   ds
  417ad6:	repnz mov bh,0x60
  417ad9:	std    
  417ada:	pop    ss
  417adb:	or     BYTE PTR [edx+0x1fc6df52],bh
  417ae1:	pop    esp
  417ae2:	scas   eax,DWORD PTR es:[edi]
  417ae3:	adc    al,0xa8
  417ae5:	and    eax,0x268181f1
  417aea:	outs   dx,DWORD PTR ds:[esi]
  417aeb:	lods   eax,DWORD PTR ds:[esi]
  417aec:	call   ebx
  417aee:	jmp    0x417ad4
  417af0:	pushf  
  417af1:	xchg   edx,eax
  417af2:	mov    ch,0x7f
  417af4:	jg     0x417acc
  417af6:	mov    al,0xdd
  417af8:	adc    BYTE PTR [eax+0x6b],0xc5
  417afc:	mov    bh,0xad
  417afe:	retf   
  417aff:	mov    esp,DWORD PTR [ebp+0x69]
  417b02:	add    ebx,DWORD PTR [edi+0x29]
  417b05:	xor    DWORD PTR [edx],0xe086148e
  417b0b:	cmp    ebx,DWORD PTR [eax+0x11619fb]
  417b11:	aad    0xff
  417b13:	adc    eax,0x6615ca30
  417b18:	inc    ecx
  417b19:	shr    DWORD PTR ds:0x783793d7,cl
  417b1f:	nop
  417b20:	push   esi
  417b21:	dec    edi
  417b22:	or     BYTE PTR [edx],cl
  417b24:	imul   edi,DWORD PTR [ebx+edi*4],0x8e23bcaa
  417b2b:	push   esp
  417b2c:	sbb    al,0xa2
  417b2e:	inc    eax
  417b2f:	int3   
  417b30:	inc    ebx
  417b31:	cdq    
  417b32:	inc    esp
  417b33:	jp     0x417ae9
  417b35:	and    BYTE PTR [edx+0x7ed1a84d],ch
  417b3b:	and    eax,0xf35807a7
  417b40:	rcl    DWORD PTR [edi],1
  417b42:	mov    eax,0xf1fdf8d
  417b47:	push   ebp
  417b48:	(bad)  
  417b49:	jecxz  0x417b69
  417b4b:	push   ebx
  417b4c:	ins    DWORD PTR es:[edi],dx
  417b4d:	test   DWORD PTR [ecx+0x2d1244d3],esp
  417b53:	push   edx
  417b54:	outs   dx,BYTE PTR ds:[esi]
  417b55:	rcl    BYTE PTR [ebx+0x14d739c3],cl
  417b5b:	mov    ch,0xcf
  417b5d:	aam    0x9d
  417b5f:	push   eax
  417b60:	mul    esp
  417b62:	jmp    0x12a98a60
  417b67:	test   eax,0xa3cf09d5
  417b6c:	sar    BYTE PTR [edx+0x7f541e8a],cl
  417b72:	sub    ebx,DWORD PTR [si]
  417b75:	aad    0xf8
  417b77:	mov    al,ds:0xdfa504d6
  417b7c:	imul   esp,DWORD PTR [edx-0x1f],0xffffffcb
  417b80:	mov    dh,0xa6
  417b82:	inc    ebx
  417b83:	retf   0x627d
  417b86:	into   
  417b87:	aas    
  417b88:	push   esi
  417b89:	popa   
  417b8a:	outs   dx,BYTE PTR ds:[esi]
  417b8b:	(bad)  
  417b8c:	(bad)  
  417b8d:	int3   
  417b8e:	nop
  417b8f:	xor    ecx,DWORD PTR [esi+0x6d105615]
  417b95:	pusha  
  417b96:	adc    DWORD PTR [ebx],ebx
  417b98:	hlt    
  417b99:	stos   DWORD PTR es:[edi],eax
  417b9a:	xlat   BYTE PTR ds:[ebx]
  417b9b:	mov    ah,0x6d
  417b9d:	out    dx,al
  417b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b9f:	dec    esp
  417ba0:	jg     0x417b9c
  417ba2:	mov    edx,0xbd61f0cf
  417ba7:	or     ah,BYTE PTR [ecx]
  417ba9:	(bad)  
  417baa:	lock ins BYTE PTR es:[edi],dx
  417bac:	fistp  DWORD PTR [esi+0x17]
  417baf:	out    dx,eax
  417bb0:	mov    ch,BYTE PTR [ecx-0x6c]
  417bb3:	inc    edx
  417bb4:	mov    ds:0x6265646c,al
  417bb9:	jge    0x417ba5
  417bbb:	mov    bl,ch
  417bbd:	push   es
  417bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bbf:	fwait
  417bc0:	loope  0x417b75
  417bc2:	mov    dh,0x61
  417bc4:	sub    eax,0x3c8ebfde
  417bc9:	pop    ss
  417bca:	(bad)  
  417bcb:	sub    BYTE PTR [ebp+0x30],bl
  417bce:	das    
  417bcf:	(bad)  
  417bd0:	out    0x2d,al
  417bd2:	imul   ebx,esi,0xfffffff5
  417bd5:	retf   0x864
  417bd8:	test   al,0x2a
  417bda:	cwde   
  417bdb:	imul   DWORD PTR [ecx-0x7e]
  417bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bdf:	inc    eax
  417be0:	push   ds
  417be1:	test   DWORD PTR [edx+0x2fd206f],ecx
  417be7:	scas   al,BYTE PTR es:[edi]
  417be8:	shl    DWORD PTR [edx+0x32],0x1
  417bec:	lock aam 0x92
  417bef:	leave  
  417bf0:	js     0x417bab
  417bf2:	das    
  417bf3:	out    0x10,al
  417bf5:	push   esp
  417bf6:	fstp   DWORD PTR [eax-0x10]
  417bf9:	adc    al,0x4d
  417bfb:	sub    ch,BYTE PTR [esi-0x6c]
  417bfe:	jle    0x417c68
  417c00:	mov    eax,ds:0x2bd8c99e
  417c05:	xor    eax,0x2c1f179d
  417c0a:	cli    
  417c0b:	or     al,0x74
  417c0d:	fst    QWORD PTR [ebp-0x44]
  417c10:	mov    ebp,0x8310f610
  417c15:	cld    
  417c16:	addr16 test eax,0x7c92bb31
  417c1c:	pop    ebx
  417c1d:	outs   dx,BYTE PTR ds:[esi]
  417c1e:	sub    esp,DWORD PTR [ecx+0x3770a5d3]
  417c24:	push   eax
  417c25:	sub    eax,0x25405041
  417c2a:	jmp    0x417c71
  417c2c:	sbb    ebp,esi
  417c2e:	cmp    DWORD PTR [eax+0x24],0xffffffa2
  417c32:	or     al,0x18
  417c34:	dec    edi
  417c35:	mov    esp,0xb21b41f8
  417c3a:	jmp    0xb83cf841
  417c3f:	add    al,0xba
  417c41:	xor    ecx,ecx
  417c43:	inc    esi
  417c44:	cli    
  417c45:	inc    eax
  417c46:	mov    fs,WORD PTR ds:0x2195f5ae
  417c4c:	mov    al,0xee
  417c4e:	jecxz  0x417c6d
  417c50:	rcl    BYTE PTR [eax],1
  417c52:	lahf   
  417c53:	add    eax,0xf5fc0886
  417c58:	imul   ebx,ebx,0xffffff8c
  417c5b:	mov    ds:0x33e9ec35,eax
  417c60:	pop    ebp
  417c61:	or     al,0x9b
  417c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c64:	leave  
  417c65:	js     0x417c0a
  417c67:	paddsb mm4,QWORD PTR [ebx+ebx*4-0x6d337e59]
  417c6f:	push   eax
  417c70:	jae    0x417c2e
  417c72:	cmp    eax,0x3e111275
  417c77:	or     DWORD PTR ds:0xf109d9f8,eax
  417c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c7e:	sbb    ebp,DWORD PTR [ecx+0x69cafa84]
  417c84:	clc    
  417c85:	sub    al,0x63
  417c87:	fbstp  TBYTE PTR [ebp-0x71]
  417c8a:	or     BYTE PTR [edx+0x56],al
  417c8d:	cmp    eax,0x81a933c7
  417c92:	fldenv [edx*2-0x5495ae38]
  417c99:	jo     0x417c60
  417c9b:	push   es
  417c9c:	cld    
  417c9d:	push   ss
  417c9e:	inc    ebx
  417c9f:	loopne 0x417cb7
  417ca1:	cmp    al,0x8
  417ca3:	mov    DWORD PTR es:[esi+0x53a4638e],ebp
  417caa:	pop    eax
  417cab:	push   ecx
  417cac:	adc    al,0xea
  417cae:	fisttp DWORD PTR [ecx+0x7bd09f69]
  417cb4:	retf   
  417cb5:	out    0x4c,eax
  417cb7:	test   DWORD PTR [esi-0x22],eax
  417cba:	add    DWORD PTR [ebx-0x12],esi
  417cbd:	int    0xc8
  417cbf:	and    bh,al
  417cc1:	call   0xcab7:0xeeeb5530
  417cc8:	pop    ds
  417cc9:	cli    
  417cca:	adc    DWORD PTR [eax+0x783f8390],ebp
  417cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd1:	adc    eax,0x3c69f6d3
  417cd6:	aad    0x4f
  417cd8:	jecxz  0x417cf1
  417cda:	inc    esp
  417cdb:	outs   dx,BYTE PTR ds:[esi]
  417cdc:	jae    0x417caa
  417cde:	dec    eax
  417cdf:	fdivr  DWORD PTR [esi-0x64]
  417ce2:	mov    al,BYTE PTR [ecx-0x2addcb38]
  417ce8:	sbb    al,0xee
  417cea:	dec    ebx
  417ceb:	jl     0x417d14
  417ced:	inc    ebp
  417cee:	xlat   BYTE PTR ds:[ebx]
  417cef:	ss cld 
  417cf1:	add    cl,BYTE PTR [ebp-0x6fd2e408]
  417cf7:	jmp    0xc56d:0x45d85f5e
  417cfe:	jp     0x417cc1
  417d00:	or     eax,0x2c42d6b9
  417d05:	shl    BYTE PTR [edx-0x9],cl
  417d08:	aad    0x40
  417d0a:	or     eax,0x20d77dee
  417d0f:	or     DWORD PTR ss:[eax+ebp*8-0x67],0x28736a17
  417d18:	push   esp
  417d19:	push   0xfffffff3
  417d1b:	cld    
  417d1c:	adc    BYTE PTR [ecx+0x33],ch
  417d1f:	pop    edi
  417d20:	xchg   BYTE PTR [esi-0x9],ah
  417d23:	cmp    DWORD PTR [ecx-0xefedb01],ebx
  417d29:	dec    esp
  417d2a:	push   ss
  417d2b:	enter  0x9678,0x9f
  417d2f:	pusha  
  417d30:	mov    ah,0x11
  417d32:	mov    es,WORD PTR [ecx-0x3402dc5a]
  417d38:	xchg   ebx,eax
  417d39:	sti    
  417d3a:	enter  0xd402,0x17
  417d3e:	sub    DWORD PTR [edi-0x38],0xffffffa6
  417d42:	push   ebp
  417d43:	mov    ecx,0xc4f47e0
  417d48:	cmp    esp,DWORD PTR gs:[edi+0x40]
  417d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d4d:	or     al,0xf9
  417d4f:	lods   eax,DWORD PTR ds:[esi]
  417d50:	cmp    esp,0xffffffe6
  417d53:	aas    
  417d54:	inc    esi
  417d55:	test   BYTE PTR [ebx],dl
  417d57:	push   edx
  417d58:	ret    
  417d59:	into   
  417d5a:	xchg   esi,eax
  417d5b:	xlat   BYTE PTR ds:[ebx]
  417d5c:	out    dx,eax
  417d5d:	ret    0x768e
  417d60:	mov    cl,0xf7
  417d62:	mov    eax,0x2602053a
  417d67:	stc    
  417d68:	in     al,dx
  417d69:	mov    ebx,0xe9cfec9c
  417d6e:	lahf   
  417d6f:	mov    bl,BYTE PTR [esi+0x1aa1b5d1]
  417d75:	lahf   
  417d76:	and    eax,0xcddc6e18
  417d7b:	xchg   BYTE PTR [ecx],bl
  417d7d:	ret    
  417d7e:	push   esp
  417d7f:	mov    ebx,0x7b4805aa
  417d84:	xor    al,0x90
  417d86:	mov    ss,WORD PTR [esp+eax*8+0x1d96bfc4]
  417d8d:	cdq    
  417d8e:	rcl    bl,1
  417d90:	jecxz  0x417d86
  417d92:	rcr    BYTE PTR [edx-0x3c40ca3e],1
  417d98:	je     0x417e07
  417d9a:	clc    
  417d9b:	jmp    0x417df6
  417d9d:	cs push ebp
  417d9f:	rcl    DWORD PTR [ecx+0x28ce04e9],1
  417da5:	dec    esp
  417da6:	cmp    BYTE PTR es:[edi-0x27],dl
  417daa:	jne    0x417d5f
  417dac:	iret   
  417dad:	mov    dl,0x84
  417daf:	mov    bh,BYTE PTR [ebp-0x1a0c7e2e]
  417db5:	inc    ebx
  417db6:	dec    ecx
  417db7:	mov    ecx,0x5adf1edc
  417dbc:	pushfw 
  417dbe:	(bad)  
  417dbf:	dec    edi
  417dc0:	scas   eax,DWORD PTR es:[edi]
  417dc1:	and    BYTE PTR [eax],0xc2
  417dc4:	push   ss
  417dc5:	in     eax,dx
  417dc6:	inc    ebp
  417dc7:	ret    0x6a2e
  417dca:	out    dx,eax
  417dcb:	pop    esp
  417dcc:	mov    WORD PTR [ebx+0x7f],es
  417dcf:	mov    ds:0xbc050dfc,eax
  417dd4:	cmp    eax,0x83cddd9c
  417dd9:	aam    0x3f
  417ddb:	cli    
  417ddc:	cs push edx
  417dde:	sbb    eax,0xf9060d17
  417de3:	dec    edx
  417de4:	pop    ecx
  417de5:	js     0x417e43
  417de7:	fwait
  417de8:	add    al,0x8c
  417dea:	dec    esi
  417deb:	sub    ch,BYTE PTR [ebx+0x3b]
  417dee:	inc    esi
  417def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df0:	test   al,dh
  417df2:	cli    
  417df3:	jb     0x417dc3
  417df5:	fs fdivrp st(6),st
  417df8:	punpckhbw mm3,QWORD PTR [edx]
  417dfb:	popa   
  417dfc:	xchg   esp,eax
  417dfd:	mov    al,ds:0xa1d4dce7
  417e02:	inc    ebx
  417e03:	add    esi,0x4d
  417e06:	dec    edi
  417e07:	outs   dx,DWORD PTR ds:[esi]
  417e08:	icebp  
  417e09:	enter  0xb921,0x75
  417e0d:	imul   BYTE PTR [esi+0x57]
  417e10:	push   esp
  417e11:	add    al,0xbd
  417e13:	mov    esp,0xe3f4baf9
  417e18:	(bad)  
  417e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e1b:	mov    eax,ds:0x295131fe
  417e20:	xchg   ecx,eax
  417e21:	sti    
  417e22:	pushf  
  417e23:	xor    DWORD PTR [eax+0x5c7b1e2a],esi
  417e29:	inc    esp
  417e2a:	es pop ecx
  417e2c:	jecxz  0x417e40
  417e2e:	stos   DWORD PTR es:[edi],eax
  417e2f:	(bad)  
  417e30:	jnp    0x417e4b
  417e32:	adc    DWORD PTR [edi+0x188253d2],eax
  417e38:	scas   al,BYTE PTR es:[edi]
  417e39:	inc    ebp
  417e3a:	stc    
  417e3b:	xchg   BYTE PTR [edi],bh
  417e3d:	push   ss
  417e3e:	mov    ebp,0xf7e186f4
  417e43:	fist   WORD PTR fs:[edx+0x379026f3]
  417e4a:	or     BYTE PTR [eax+0x1f40d83a],cl
  417e50:	mov    edx,0x8de690a3
  417e55:	test   bh,ch
  417e57:	push   edx
  417e58:	hlt    
  417e59:	into   
  417e5a:	xchg   ebp,eax
  417e5b:	dec    ebp
  417e5c:	mov    bh,0xaf
  417e5e:	dec    edx
  417e5f:	lahf   
  417e60:	stos   BYTE PTR es:[edi],al
  417e61:	xor    al,0xd4
  417e63:	add    bh,BYTE PTR [ecx-0x5d78911d]
  417e69:	jecxz  0x417e71
  417e6b:	mov    edx,0xe3dcd906
  417e70:	mov    ?,WORD PTR [ecx]
  417e72:	into   
  417e73:	pop    esi
  417e74:	xchg   ebx,eax
  417e75:	xchg   esp,eax
  417e76:	fmul   DWORD PTR [edi+0x2f037e27]
  417e7c:	xchg   ebx,eax
  417e7d:	int    0x2b
  417e7f:	sub    BYTE PTR [edx-0x5ffe68ee],0xf1
  417e86:	jno    0x417e21
  417e88:	xor    DWORD PTR [eax+esi*1+0x45],esp
  417e8c:	or     ecx,DWORD PTR [eax-0x3]
  417e8f:	adc    eax,DWORD PTR [esi+0x59]
  417e92:	xchg   ecx,eax
  417e93:	ret    0xcdeb
  417e96:	mov    al,ds:0xf5aec6bf
  417e9b:	sub    BYTE PTR [edi+ecx*2+0x57],bl
  417e9f:	addr16 out 0x58,eax
  417ea2:	xchg   ecx,eax
  417ea3:	xor    DWORD PTR [eax+edx*1+0x19dcdbc5],edx
  417eaa:	cwde   
  417eab:	adc    esi,DWORD PTR [eax+0x6a15211b]
  417eb1:	int    0xd9
  417eb3:	sahf   
  417eb4:	arpl   WORD PTR [ebp-0x54],si
  417eb7:	lods   al,BYTE PTR ds:[esi]
  417eb8:	test   eax,0xcd725bae
  417ebd:	ins    BYTE PTR es:[edi],dx
  417ebe:	adc    BYTE PTR [edx-0x1a1982d],bh
  417ec4:	fmulp  st(1),st
  417ec6:	int3   
  417ec7:	mov    ch,BYTE PTR [ecx]
  417ec9:	inc    eax
  417eca:	xchg   DWORD PTR [edx-0x543ab986],ebp
  417ed0:	mov    ah,0x0
  417ed2:	jae    0x417e8c
  417ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed5:	cdq    
  417ed6:	push   ebx
  417ed7:	mov    bl,0xd6
  417ed9:	gs push ds
  417edb:	sahf   
  417edc:	(bad)  
  417edd:	jb     0x417ef2
  417edf:	jl     0x417e6a
  417ee1:	sbb    bl,bh
  417ee3:	lds    edx,FWORD PTR [ecx]
  417ee5:	test   eax,0xe3fdad3c
  417eea:	inc    ebx
  417eeb:	aaa    
  417eec:	mov    DWORD PTR [ebx],edi
  417eee:	loope  0x417f3e
  417ef0:	adc    eax,0x58d5f01e
  417ef5:	ror    BYTE PTR [ebp+0x1749ff2],0xd
  417efc:	push   0x4ef91293
  417f01:	and    ch,ch
  417f03:	and    DWORD PTR [edx],0xffffffae
  417f06:	in     eax,dx
  417f07:	stos   BYTE PTR es:[edi],al
  417f08:	mov    bh,0x27
  417f0a:	ret    0xe7e4
  417f0d:	add    ch,BYTE PTR [edi]
  417f0f:	cmp    al,0x16
  417f11:	xchg   ebx,eax
  417f12:	dec    edi
  417f13:	push   cs
  417f14:	inc    esi
  417f15:	inc    ebp
  417f16:	push   cs
  417f17:	mov    ebp,0xb55a6faa
  417f1c:	pop    ss
  417f1d:	ror    DWORD PTR [edi-0x5f],cl
  417f20:	mov    dl,0x3b
  417f22:	inc    ecx
  417f23:	fdiv   DWORD PTR [eax+0x54]
  417f26:	and    eax,0x181148bc
  417f2b:	(bad)  
  417f2c:	stc    
  417f2d:	mov    ebp,?
  417f2f:	or     edx,eax
  417f31:	push   0x2880026c
  417f36:	or     BYTE PTR [ebx],bl
  417f38:	mov    ecx,0x9f243dfe
  417f3d:	sub    eax,0xaf74b822
  417f42:	not    BYTE PTR [ebp+0x14]
  417f45:	lds    edx,FWORD PTR [edx]
  417f47:	dec    esp
  417f48:	jns    0x417f3e
  417f4a:	mov    edx,0x72e5f86b
  417f4f:	push   edi
  417f50:	add    ch,ah
  417f52:	bound  esp,QWORD PTR [eax]
  417f54:	aad    0xf5
  417f56:	jmp    0x99cc4157
  417f5b:	add    BYTE PTR [edi],dl
  417f5d:	in     eax,dx
  417f5e:	jne    0x417ef8
  417f60:	dec    DWORD PTR [ecx-0x1d8194d4]
  417f66:	aad    0x81
  417f68:	lahf   
  417f69:	and    dl,BYTE PTR [edi-0x6977d042]
  417f6f:	sbb    ebp,ebx
  417f71:	js     0x417f22
  417f73:	cmp    DWORD PTR [ecx-0x550273bd],eax
  417f79:	mov    ds:0x230f1063,al
  417f7e:	mov    WORD PTR [ebp*2+0x22c3b61f],fs
  417f85:	jp     0x417f51
  417f87:	hlt    
  417f88:	jo     0x417f64
  417f8a:	xchg   esi,eax
  417f8b:	icebp  
  417f8c:	jp     0x417fb8
  417f8e:	ja     0x417f42
  417f90:	es dec ebx
  417f92:	into   
  417f93:	fcom   st(6)
  417f95:	sub    BYTE PTR [esi+0x3a],0xd0
  417f99:	xchg   edi,eax
  417f9a:	pop    eax
  417f9b:	sub    al,0xf6
  417f9d:	mov    ebp,es
  417f9f:	inc    ecx
  417fa0:	bound  esp,QWORD PTR [ebx+ebp*2]
  417fa3:	or     edi,DWORD PTR [ebx]
  417fa5:	test   DWORD PTR [esi-0x53c5a11c],edi
  417fab:	sub    DWORD PTR [edx-0x1c430c5c],eax
  417fb1:	add    eax,0xd45afbd1
  417fb6:	outs   dx,BYTE PTR ds:[esi]
  417fb7:	std    
  417fb8:	es and al,0x78
  417fbb:	push   esi
  417fbc:	mov    eax,ds:0x31f17e17
  417fc1:	ficom  WORD PTR [edi-0x253fb96b]
  417fc7:	sub    eax,0x24b107f8
  417fcc:	dec    esp
  417fcd:	xor    al,0x72
  417fcf:	in     eax,dx
  417fd0:	jge    0x417f80
  417fd2:	es pushf 
  417fd4:	fldenv [edx]
  417fd6:	bound  edi,QWORD PTR [ecx-0x327c898b]
  417fdc:	pop    ds
  417fdd:	test   DWORD PTR [ebp+eiz*8+0x4a],0x9b9356ee
  417fe5:	push   ss
  417fe6:	imul   esi,DWORD PTR [edi-0xd],0xb0a5aa0a
  417fed:	jbe    0x418001
  417fef:	jg     0x41806d
  417ff1:	imul   eax,DWORD PTR [ebx+edx*4+0x3a],0xffffffb5
  417ff6:	in     al,dx
  417ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff8:	pop    edi
  417ff9:	cmp    bl,BYTE PTR [edx-0x7f57dd20]
  417fff:	mov    al,0x9
  418001:	cmp    edi,DWORD PTR [edx+0x30]
  418004:	ins    DWORD PTR es:[edi],dx
  418005:	or     bl,ch
  418007:	sar    DWORD PTR [edx],cl
  418009:	inc    ecx
  41800a:	mov    esp,0xae8ddb7
  41800f:	ret    0xc51a
  418012:	cmp    al,0x5d
  418014:	inc    edi
  418015:	cmp    eax,0x90c580e0
  41801a:	cld    
  41801b:	mov    al,0xd7
  41801d:	lock push ebp
  41801f:	lods   eax,DWORD PTR ds:[esi]
  418020:	ja     0x418091
  418022:	(bad)  
  418023:	jp     0x418072
  418025:	xchg   ecx,eax
  418026:	jnp    0x41805e
  418028:	aaa    
  418029:	retf   0x6cc1
  41802c:	adc    DWORD PTR [ecx+ecx*8+0x110332cb],eax
  418033:	mov    al,ds:0xa6627a86
  418038:	dec    eax
  418039:	in     eax,dx
  41803a:	leave  
  41803b:	ja     0x418028
  41803d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41803e:	mov    edx,0xd8859ff8
  418043:	inc    ecx
  418044:	pop    edi
  418045:	xor    BYTE PTR [ebp+0x6e907dda],0xc0
  41804c:	mov    cl,0x88
  41804e:	(bad)  
  41804f:	xor    cl,BYTE PTR [ecx]
  418051:	jecxz  0x41806b
  418053:	outs   dx,DWORD PTR ds:[esi]
  418054:	(bad)  
  418056:	js     0x418000
  418058:	es out dx,eax
  41805a:	cmp    BYTE PTR [edi-0x5c],al
  41805d:	sub    dh,BYTE PTR [ecx+0x18]
  418060:	and    DWORD PTR ds:0xfc8da06f,0xf7241271
  41806a:	out    dx,eax
  41806b:	jle    0x4180df
  41806d:	pop    ds
  41806e:	sub    esi,DWORD PTR [edi-0x6491b353]
  418074:	xlat   BYTE PTR ds:[ebx]
  418075:	(bad)  
  418076:	in     al,0x62
  418078:	es inc ebx
  41807a:	or     dh,bh
  41807c:	sbb    BYTE PTR [ebp+0x1d],ch
  41807f:	jle    0x41806f
  418081:	xchg   edx,eax
  418082:	in     al,0x5
  418084:	adc    al,BYTE PTR [ebx+ebx*2-0x52]
  418088:	scas   eax,DWORD PTR es:[edi]
  418089:	push   ebx
  41808a:	or     edi,DWORD PTR [edi-0x7d096f53]
  418090:	jle    0x41807e
  418092:	fdiv   QWORD PTR [ebx+0x63]
  418095:	je     0x418069
  418097:	dec    esp
  418098:	lea    esp,[ebp+ebp*2+0x3b837452]
  41809f:	sbb    bh,0x83
  4180a2:	cmc    
  4180a3:	(bad)  
  4180a4:	in     eax,0xf9
  4180a6:	sub    DWORD PTR [edx-0x75516093],edi
  4180ac:	adc    BYTE PTR [edx-0x3711ba44],dh
  4180b2:	rcl    eax,1
  4180b4:	sub    edx,DWORD PTR [ebx]
  4180b6:	mov    DWORD PTR [esi+0x3473a003],ebx
  4180bc:	push   edx
  4180bd:	nop
  4180be:	cld    
  4180bf:	xchg   edx,eax
  4180c0:	or     al,0xb1
  4180c2:	popf   
  4180c3:	sub    eax,0xd6678b1b
  4180c8:	mov    DWORD PTR [ebx-0x21],ebx
  4180cb:	adc    al,0xc
  4180cd:	loop   0x4180d5
  4180cf:	dec    eax
  4180d0:	jg     0x4180a5
  4180d2:	mov    edx,0x39233d7c
  4180d7:	dec    ebx
  4180d8:	mov    esp,0x14685455
  4180dd:	dec    edx
  4180de:	scas   eax,DWORD PTR es:[edi]
  4180df:	es lahf 
  4180e1:	imul   esi,DWORD PTR [edx],0xffffff98
  4180e4:	stc    
  4180e5:	mov    ch,0xfa
  4180e7:	les    edi,FWORD PTR [edx+ebp*4]
  4180ea:	inc    ebx
  4180eb:	mov    edi,DWORD PTR [eax]
  4180ed:	stos   DWORD PTR es:[edi],eax
  4180ee:	call   0xde73:0xa345b45b
  4180f5:	mov    eax,ds:0x1d567044
  4180fa:	or     al,0x95
  4180fc:	aaa    
  4180fd:	jne    0x418143
  4180ff:	rcl    BYTE PTR [edx-0x6a],cl
  418102:	ficom  WORD PTR [eax-0x4835b00c]
  418108:	les    esi,FWORD PTR [edi+ecx*8+0x5fe31be4]
  41810f:	rol    DWORD PTR [edx],cl
  418111:	ret    
  418112:	adc    BYTE PTR [edi-0x5d],cl
  418115:	sahf   
  418116:	add    DWORD PTR [eax-0x6b],0x72efd1ce
  41811d:	adc    ah,dh
  41811f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418120:	or     al,BYTE PTR ds:0xfbc6a50d
  418126:	aad    0x9
  418128:	sbb    eax,0x1b56da66
  41812d:	fcom   QWORD PTR [ebx+0x53ba7b7c]
  418133:	fwait
  418134:	loopne 0x41813a
  418136:	inc    edi
  418137:	iret   
  418138:	or     ebp,esp
  41813a:	jb     0x41816c
  41813c:	das    
  41813d:	and    al,0xf1
  41813f:	pop    es
  418140:	pop    esi
  418141:	mov    ah,0xb1
  418143:	es in  al,dx
  418145:	es dec edi
  418147:	mov    WORD PTR [ecx-0x71],ds
  41814a:	out    0x18,al
  41814c:	xchg   edi,eax
  41814d:	cs mov ds:0xf627bb38,ax
  418155:	test   bl,bl
  418157:	jmp    0xf5d7031e
  41815c:	mov    bl,0x6f
  41815e:	stos   BYTE PTR es:[edi],al
  41815f:	push   es
  418160:	mov    BYTE PTR [esi],al
  418162:	mov    eax,0x8b9ea340
  418167:	add    al,0x64
  418169:	mov    al,es:0x91e47c56
  41816f:	in     al,dx
  418170:	out    0x66,al
  418172:	sub    BYTE PTR [ecx+0x7b26ecd5],ah
  418178:	sub    eax,0x86daf1ee
  41817d:	sub    ah,BYTE PTR [ebp+0xe]
  418180:	xchg   esp,eax
  418181:	mov    bh,0x5e
  418183:	fidivr DWORD PTR [ebx]
  418185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418186:	inc    esi
  418187:	or     al,0x14
  418189:	test   DWORD PTR [esi+0x72],esp
  41818c:	dec    ebp
  41818d:	cmc    
  41818e:	cld    
  41818f:	popf   
  418190:	out    0x57,al
  418192:	mov    cs,WORD PTR [edx-0x29d86c61]
  418198:	xchg   ebp,eax
  418199:	adc    esi,DWORD PTR [ebx]
  41819b:	push   0x7b772898
  4181a0:	js     0x41813b
  4181a2:	jp     0x41812f
  4181a4:	(bad)  
  4181a5:	xchg   esp,eax
  4181a6:	mov    ds:0x1d8974dc,eax
  4181ab:	adc    DWORD PTR [esi-0x2f],esi
  4181ae:	loop   0x4181c5
  4181b0:	mov    bh,0x2c
  4181b3:	mov    ebp,0xd4af6106
  4181b8:	outs   dx,BYTE PTR ds:[esi]
  4181b9:	and    al,0x72
  4181bb:	bound  esp,QWORD PTR [ecx+0x6f]
  4181be:	outs   dx,BYTE PTR ds:[esi]
  4181bf:	rcr    DWORD PTR [esi],1
  4181c1:	sub    BYTE PTR [eax+eiz*1+0x5],0x54
  4181c6:	mov    eax,ds:0x333ba9cf
  4181cb:	inc    edi
  4181cc:	sar    BYTE PTR ds:0x8db44f2a,cl
  4181d2:	icebp  
  4181d3:	push   0xffffffeb
  4181d5:	jl     0x418220
  4181d7:	cdq    
  4181d8:	push   ebx
  4181d9:	cwde   
  4181da:	into   
  4181db:	xor    eax,0xa7a9e8d
  4181e0:	dec    edx
  4181e1:	jb     0x418241
  4181e3:	int3   
  4181e4:	jl     0x4181cc
  4181e6:	cs cmc 
  4181e8:	fs jecxz 0x4181c9
  4181eb:	lea    esp,[edi+esi*2-0x6a]
  4181ef:	out    0xfd,eax
  4181f1:	jge    0x4181f9
  4181f3:	sub    bx,0xffbd
  4181f7:	and    BYTE PTR [eax-0x350911e9],cl
  4181fd:	rcl    ebp,cl
  4181ff:	sti    
  418200:	je     0x418256
  418202:	jno    0x418195
  418204:	pop    esi
  418205:	sbb    ebx,DWORD PTR [ecx+0x38]
  418208:	mov    BYTE PTR [ecx-0x6624bbda],dh
  41820e:	stos   DWORD PTR es:[edi],eax
  41820f:	mov    esp,0xb7aad0d
  418214:	outs   dx,DWORD PTR ds:[esi]
  418215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418216:	jecxz  0x418213
  418218:	xchg   ebx,eax
  418219:	test   ebx,eax
  41821b:	(bad)  
  41821c:	mov    esi,0xce2f6904
  418221:	dec    eax
  418222:	outs   dx,DWORD PTR ds:[esi]
  418223:	adc    DWORD PTR [esi],ecx
  418225:	inc    ecx
  418226:	test   eax,0xd7ec0c55
  41822b:	retf   
  41822c:	sbb    DWORD PTR [ecx+0x73],ebx
  41822f:	iret   
  418230:	mov    al,0x4
  418232:	fldenv [eax+0x78427f38]
  418238:	dec    BYTE PTR [edx]
  41823a:	test   DWORD PTR [ebx+0x1d],ecx
  41823d:	(bad)  
  41823e:	dec    ebx
  41823f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418240:	and    DWORD PTR [ebx-0x3d],esp
  418243:	lods   eax,DWORD PTR ds:[esi]
  418244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418245:	pop    edi
  418246:	out    0x61,al
  418248:	int    0xbb
  41824a:	jle    0x41825b
  41824c:	jmp    0xdee29776
  418251:	aam    0xfa
  418253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418254:	jmp    0xd51c:0xe38f67ab
  41825b:	adc    eax,0x4e13b7b5
  418260:	cmp    al,0x8f
  418262:	daa    
  418263:	int3   
  418264:	arpl   ax,ax
  418266:	lahf   
  418267:	xchg   edx,eax
  418268:	and    bh,ch
  41826a:	adc    esp,DWORD PTR [ebx+0x1d61f9a7]
  418270:	push   ds
  418271:	mov    DWORD PTR ss:[eax-0x239048b6],eax
  418278:	nop
  418279:	leave  
  41827a:	sahf   
  41827b:	pop    ebx
  41827c:	add    ecx,0x303c0344
  418282:	sbb    BYTE PTR [edi],0xab
  418285:	jnp    0x41826e
  418287:	push   esi
  418288:	clc    
  418289:	ins    BYTE PTR es:[edi],dx
  41828a:	add    al,BYTE PTR ds:0xa15f97a
  418290:	out    dx,al
  418291:	loope  0x41822d
  418293:	pop    ds
  418294:	dec    esi
  418295:	pop    esi
  418296:	hlt    
  418297:	jne    0x4182c7
  418299:	leave  
  41829a:	clc    
  41829b:	imul   esp,esp,0xffffffd9
  41829e:	je     0x41825c
  4182a0:	xchg   DWORD PTR [ecx+ecx*8],edx
  4182a3:	in     eax,0x25
  4182a5:	iret   
  4182a6:	hlt    
  4182a7:	add    DWORD PTR [esi],eax
  4182a9:	jb     0x41822f
  4182ab:	mov    ebp,0xe951c614
  4182b0:	shl    BYTE PTR [ebp+0x4da015c4],0x5a
  4182b7:	xor    eax,0x556af185
  4182bc:	mov    dh,BYTE PTR [eax+ebp*8]
  4182bf:	daa    
  4182c0:	out    0x20,eax
  4182c2:	adc    BYTE PTR [ebp+0x33c7c570],bh
  4182c8:	mov    ebp,0x73131ff5
  4182cd:	cmp    ebp,DWORD PTR [ebp-0x4949082c]
  4182d3:	mov    edx,0x6a2be8e8
  4182d8:	icebp  
  4182d9:	sbb    BYTE PTR [edi+0x5c],0x82
  4182dd:	les    edi,FWORD PTR [esi-0x284e0760]
  4182e3:	call   0x2890:0x23c8e71a
  4182ea:	sbb    DWORD PTR [ebx-0x63bada0f],edi
  4182f0:	pop    ebx
  4182f1:	or     edi,DWORD PTR [ecx+0x4d]
  4182f4:	jmp    0x6ec3117
  4182f9:	push   ss
  4182fa:	std    
  4182fb:	sub    DWORD PTR [edi],ecx
  4182fd:	cwde   
  4182fe:	mov    dl,0x30
  418300:	pop    edx
  418301:	rol    BYTE PTR [ebx-0x6c2851d1],0x94
  418308:	dec    esp
  418309:	xchg   esp,eax
  41830a:	jmp    0x3b718772
  41830f:	pop    es
  418310:	push   edi
  418311:	sub    al,BYTE PTR [ecx+0x3730579f]
  418317:	(bad)  
  418318:	sub    al,0x14
  41831a:	sub    eax,0x4ca69b2a
  41831f:	shl    BYTE PTR [ebp-0xd046f32],1
  418325:	lock call 0x5e29:0x4133e2d6
  41832d:	fimul  DWORD PTR [eax]
  41832f:	pop    ecx
  418330:	jmp    DWORD PTR [ebp+eiz*8-0x3db251d6]
  418337:	enter  0xd750,0x95
  41833b:	outs   dx,DWORD PTR ds:[esi]
  41833c:	adc    ebp,eax
  41833e:	imul   edi,eax,0x6d
  418341:	jns    0x4183b9
  418343:	mov    WORD PTR ds:0xe4acc5a6,ss
  418349:	test   al,0x4
  41834b:	sbb    eax,DWORD PTR [ecx+0x7760e451]
  418351:	shl    DWORD PTR [ebx+ebp*2+0x71],0x4
  418356:	fidiv  DWORD PTR [ecx-0x43eb11c6]
  41835c:	shl    DWORD PTR [esi+0x13],cl
  41835f:	pop    ebx
  418360:	add    DWORD PTR [eax+0x59],eax
  418363:	in     al,dx
  418364:	mov    esp,0x212b27ea
  418369:	pop    ss
  41836a:	jbe    0x418348
  41836c:	mov    bl,0x8
  41836e:	pusha  
  41836f:	imul   edi,DWORD PTR [edx+0x265eac15],0x80ae3862
  418379:	xchg   esi,eax
  41837a:	xchg   ebp,eax
  41837b:	call   0x682d9af9
  418380:	loop   0x41833c
  418382:	mov    fs,ecx
  418384:	xchg   edi,eax
  418385:	lods   al,BYTE PTR ds:[esi]
  418386:	jmp    0xa8b7d472
  41838b:	pop    ebx
  41838c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41838d:	sti    
  41838e:	shl    BYTE PTR [esi+0x34],cl
  418391:	add    eax,DWORD PTR ds:[eax+0x51]
  418395:	in     eax,0x2f
  418397:	mov    esi,0x7404084b
  41839c:	inc    edi
  41839d:	ror    BYTE PTR [ecx-0x48],0xf
  4183a1:	sti    
  4183a2:	xchg   edx,eax
  4183a3:	ds inc ebp
  4183a5:	int    0x52
  4183a7:	dec    edi
  4183a8:	add    eax,0xa00a5048
  4183ad:	push   eax
  4183ae:	mov    al,0xc3
  4183b0:	das    
  4183b1:	call   0xc0f7505e
  4183b6:	adc    esp,DWORD PTR [eax+0x5e692813]
  4183bc:	push   ss
  4183bd:	sar    DWORD PTR [ebp+0x56],1
  4183c0:	ret    
  4183c1:	adc    al,0x18
  4183c3:	in     al,dx
  4183c4:	jecxz  0x41840b
  4183c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183c7:	and    DWORD PTR [ebx-0x30389c91],0xc0b0d6f4
  4183d1:	jb     0x4183e7
  4183d3:	jo     0x418405
  4183d5:	mov    esp,0xd0dc37cc
  4183da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183db:	jbe    0x4183d0
  4183dd:	mov    esp,0x8d70af2e
  4183e2:	int3   
  4183e3:	pop    ds
  4183e4:	xchg   ebp,eax
  4183e5:	jmp    0xfca4:0x1caaf364
  4183ec:	sub    eax,esp
  4183ee:	add    DWORD PTR [eax+0x1f],0x195df80e
  4183f5:	cmp    BYTE PTR [eax],0xfd
  4183f8:	loop   0x418439
  4183fa:	xlat   BYTE PTR ds:[ebx]
  4183fb:	fmul   DWORD PTR [ecx+0x434e127b]
  418401:	call   0x3f1e6364
  418406:	cmp    bl,BYTE PTR [eax]
  418408:	icebp  
  418409:	dec    edx
  41840a:	(bad)  
  41840b:	test   eax,0x59eb8b57
  418410:	clc    
  418411:	ret    
  418412:	and    al,ch
  418414:	mov    dh,0x9b
  418416:	push   ds
  418417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418418:	mov    al,ds:0xd39e25a8
  41841d:	sub    DWORD PTR [ecx-0x5a95a231],0x379367ba
  418427:	cmp    eax,0x954aaa3a
  41842c:	adc    cl,0x7c
  41842f:	xor    BYTE PTR [edx],ah
  418431:	add    BYTE PTR fs:[edx],0xff
  418435:	hlt    
  418436:	jb     0x4183fb
  418438:	in     eax,dx
  418439:	jmp    0x4183eb
  41843b:	add    dh,BYTE PTR [edx+0x66b8846b]
  418441:	nop
  418442:	push   edx
  418444:	fdivr  st,st(0)
  418446:	scas   eax,DWORD PTR es:[edi]
  418447:	pop    ds
  418448:	xchg   esi,eax
  418449:	cmp    bl,BYTE PTR [esi]
  41844b:	out    0x67,al
  41844d:	adc    ecx,DWORD PTR [ebx-0x4a61c436]
  418453:	retf   
  418454:	pushw  ss
  418456:	out    dx,eax
  418457:	sbb    DWORD PTR [eax],esi
  418459:	jle    0x4184af
  41845b:	iret   
  41845c:	cli    
  41845d:	dec    ebp
  41845e:	icebp  
  41845f:	and    eax,0xd6718f55
  418464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418465:	xor    esi,DWORD PTR [edx+0x1903870a]
  41846b:	(bad)  
  41846c:	jnp    0x4184c1
  41846e:	and    BYTE PTR [esi+eax*2],0xe4
  418472:	sub    edx,DWORD PTR [edi-0x5e46198b]
  418478:	adc    al,dh
  41847a:	cld    
  41847b:	lahf   
  41847c:	fwait
  41847d:	jecxz  0x41842e
  41847f:	pop    esp
  418480:	sbb    al,0x8f
  418482:	mov    WORD PTR [esi-0x22e48a2],ds
  418488:	push   0x2c
  41848a:	xchg   ebp,eax
  41848b:	scas   al,BYTE PTR es:[edi]
  41848c:	xchg   ecx,eax
  41848d:	push   ebx
  41848e:	jmp    DWORD PTR [ecx-0x66]
  418491:	call   0x365a:0x19293ba7
  418498:	not    DWORD PTR [edi-0x6c35603a]
  41849e:	sub    dl,ch
  4184a0:	dec    esi
  4184a1:	jg     0x418434
  4184a3:	(bad)  
  4184a4:	mov    esp,0x5391a8b3
  4184a9:	ret    0x5e01
  4184ac:	ja     0x41844d
  4184ae:	jg     0x418459
  4184b0:	xchg   ebx,eax
  4184b1:	sub    DWORD PTR [ebx+edx*1],0x33
  4184b5:	mov    bh,0x1e
  4184b7:	leave  
  4184b8:	and    DWORD PTR [edx+eiz*2-0xc],edi
  4184bc:	iret   
  4184bd:	dec    esp
  4184be:	mov    al,BYTE PTR [esi-0x7e4a51c1]
  4184c4:	outs   dx,BYTE PTR ds:[esi]
  4184c5:	jns    0x4184da
  4184c7:	pop    edx
  4184c8:	pop    eax
  4184c9:	sub    eax,0x4a8ec02d
  4184ce:	jnp    0x418451
  4184d0:	jno    0x418488
  4184d2:	push   edi
  4184d3:	push   ss
  4184d4:	shr    DWORD PTR [ecx+0x3d7f7754],cl
  4184da:	add    eax,0xbf0bda83
  4184df:	sbb    al,BYTE PTR [esi-0x470808f2]
  4184e5:	jmp    0xa3d210c8
  4184ea:	push   esi
  4184eb:	add    dl,bl
  4184ed:	aas    
  4184ee:	add    ebx,DWORD PTR [ebx]
  4184f0:	push   eax
  4184f1:	mov    ch,0xbd
  4184f3:	xchg   edi,eax
  4184f4:	pop    edi
  4184f5:	jns    0x418494
  4184f7:	aad    0x34
  4184f9:	test   BYTE PTR [edx+0x767ee3df],0x45
  418500:	push   0x69
  418502:	int    0xc0
  418504:	jl     0x4184cb
  418506:	xchg   esp,eax
  418507:	mov    ch,0x72
  418509:	js     0x418578
  41850b:	sbb    al,BYTE PTR [eax*2-0x534bae29]
  418512:	jmp    0x41858c
  418514:	repnz sbb ebp,DWORD PTR [ebx+0x1fa77b4e]
  41851b:	fstp   DWORD PTR [ebx]
  41851d:	mov    esp,0x52a465be
  418522:	xchg   esp,eax
  418523:	mov    al,0xbd
  418525:	jbe    0x41859f
  418527:	loopne 0x418572
  418529:	les    esi,FWORD PTR [esp+edx*1+0x6d]
  41852d:	dec    esi
  41852e:	ds dec esi
  418530:	xchg   edx,eax
  418531:	iret   
  418532:	pop    es
  418533:	or     eax,0x27fe60e8
  418538:	dec    ebp
  418539:	test   eax,0xa56c81f5
  41853e:	iret   
  41853f:	xor    al,0xaa
  418541:	stos   BYTE PTR es:[edi],al
  418542:	out    dx,eax
  418543:	add    edx,DWORD PTR [esi+0x29]
  418546:	jecxz  0x41855c
  418548:	shr    BYTE PTR [ebp-0x6e],1
  41854b:	(bad)  
  41854c:	fdiv   DWORD PTR [edi+0x35839a0f]
  418552:	loope  0x4185a9
  418554:	pop    esp
  418555:	scas   eax,DWORD PTR es:[edi]
  418556:	add    al,0x72
  418558:	push   ebp
  418559:	es idiv esp
  41855c:	pop    ss
  41855d:	sbb    DWORD PTR [edx-0x4a],ebp
  418560:	mov    edi,ecx
  418562:	stc    
  418563:	loope  0x4185c0
  418565:	inc    edx
  418566:	out    0xf9,eax
  418568:	pop    es
  418569:	push   edx
  41856a:	sbb    dh,al
  41856c:	iret   
  41856d:	out    0x81,al
  41856f:	mov    BYTE PTR [eax],dl
  418571:	cld    
  418572:	or     al,0x25
  418574:	pushf  
  418575:	js     0x418544
  418577:	or     eax,0xf959e46f
  41857c:	sbb    ah,BYTE PTR [edi-0x19e69666]
  418582:	inc    eax
  418583:	pushf  
  418584:	pop    edx
  418586:	mov    edi,0x17d20f2d
  41858b:	or     esi,ecx
  41858d:	sbb    BYTE PTR [eax],bl
  41858f:	sti    
  418590:	jmp    0x66d7a8cc
  418595:	leave  
  418596:	je     0x418598
  418598:	mov    cl,0x4e
  41859a:	cmc    
  41859b:	stc    
  41859c:	jae    0x418599
  41859e:	xchg   edx,eax
  41859f:	(bad)  
  4185a0:	fmul   QWORD PTR [edi+0x4dae6e7f]
  4185a6:	ss enterw 0xda97,0x80
  4185ac:	sahf   
  4185ad:	in     eax,dx
  4185ae:	mov    WORD PTR [edx+0x3c504c5f],ss
  4185b4:	cmp    cl,BYTE PTR ds:[ecx+edx*8-0x7978f304]
  4185bc:	pushf  
  4185bd:	xor    eax,0x27eaf4cb
  4185c2:	mov    BYTE PTR [esi+0x9],0x17
  4185c6:	pop    esi
  4185c7:	push   ss
  4185c8:	je     0x4185e2
  4185ca:	adc    eax,0x76a486af
  4185cf:	test   DWORD PTR [esi+0x3c],ecx
  4185d2:	xlat   BYTE PTR ds:[ebx]
  4185d3:	sbb    ch,BYTE PTR [ebp+esi*1+0x2]
  4185d7:	(bad)  
  4185d8:	adc    bh,BYTE PTR [ebx]
  4185da:	cmp    eax,0x2e582e1e
  4185df:	push   ss
  4185e0:	icebp  
  4185e1:	ins    DWORD PTR es:[edi],dx
  4185e2:	fsub   st(1),st
  4185e4:	sub    ah,cl
  4185e6:	out    dx,eax
  4185e7:	mov    esp,0x1f475d56
  4185ec:	ficomp WORD PTR [ecx]
  4185ee:	sti    
  4185ef:	(bad)  
  4185f1:	xchg   ecx,eax
  4185f2:	sbb    al,0xd3
  4185f4:	and    al,0x0
  4185f6:	retf   
  4185f7:	hlt    
  4185f8:	inc    esp
  4185f9:	mov    eax,0xcd905a15
  4185fe:	mov    ch,0x53
  418600:	test   al,0x9a
  418602:	std    
  418603:	stos   DWORD PTR es:[edi],eax
  418604:	pop    edi
  418605:	retf   0x4389
  418608:	sbb    eax,eax
  41860a:	hlt    
  41860b:	push   es
  41860c:	in     al,0x75
  41860e:	push   cs
  41860f:	cwde   
  418610:	and    al,0x4d
  418612:	push   0xffffffcc
  418614:	mov    dl,0x46
  418616:	rol    DWORD PTR [ecx-0x3a2f4cc0],1
  41861c:	adc    esi,DWORD PTR [edx+0x248c622d]
  418622:	std    
  418623:	lock inc ebp
  418625:	adc    edx,eax
  418627:	inc    edi
  418628:	or     dl,BYTE PTR [edx-0x77582949]
  41862e:	rol    BYTE PTR [ebx],cl
  418630:	jmp    0x3329:0xd1c6f2ac
  418637:	icebp  
  418638:	daa    
  418639:	add    eax,DWORD PTR [ebp+0x68]
  41863c:	iret   
  41863d:	cmp    edx,edx
  41863f:	jmp    0xe9cf5dc0
  418644:	ja     0x41868b
  418646:	mov    ebx,0xe6f287a7
  41864b:	ret    0x491c
  41864e:	push   ss
  41864f:	mov    BYTE PTR ds:0xcf4b50b4,dh
  418655:	imul   edx,DWORD PTR [eax-0xa],0xffffffaf
  418659:	cmp    al,0x31
  41865b:	jb     0x418669
  41865d:	or     al,0xf1
  41865f:	dec    ebp
  418660:	leave  
  418661:	fs mov bl,0x41
  418664:	ret    
  418665:	sar    DWORD PTR [edx+ecx*8-0x785dcab5],0x77
  41866d:	jecxz  0x4186bd
  41866f:	stos   DWORD PTR es:[edi],eax
  418670:	jecxz  0x4186a4
  418672:	adc    BYTE PTR [ebp+0x7b6ea613],bl
  418678:	(bad)  
  418679:	addr16 mov bh,0x9f
  41867c:	int    0xa0
  41867e:	adc    BYTE PTR [ecx],dh
  418680:	enter  0x9187,0xfc
  418684:	push   es
  418685:	bound  eax,QWORD PTR [eax+0x75]
  418688:	xor    al,0x17
  41868a:	shr    BYTE PTR [esi+edx*8],0xc6
  41868e:	out    0x31,al
  418690:	jno    0x4186d6
  418692:	aam    0xb2
  418694:	gs jbe 0x418644
  418697:	ja     0x4186df
  418699:	dec    ebp
  41869a:	pop    ebx
  41869b:	lock dec ebx
  41869d:	push   es
  41869e:	aad    0x2f
  4186a0:	jl     0x4186c3
  4186a2:	mov    ebx,0x21468f6
  4186a7:	xchg   ecx,eax
  4186a8:	mov    al,0xc7
  4186aa:	pop    ecx
  4186ab:	add    dl,BYTE PTR [ebx-0x548786ef]
  4186b1:	lea    esi,[edx+0x4f8bd406]
  4186b7:	xchg   esp,eax
  4186b8:	loop   0x4186fd
  4186ba:	pushf  
  4186bb:	xchg   esi,eax
  4186bc:	mov    ds:0x9bfdb07d,al
  4186c1:	imul   eax,DWORD PTR [edx],0xffffffde
  4186c4:	or     DWORD PTR [ebp+0x143a5391],esp
  4186ca:	dec    ecx
  4186cb:	dec    eax
  4186cc:	fdivrp st(3),st
  4186ce:	xchg   BYTE PTR [edi+0xd],al
  4186d1:	ret    0xf008
  4186d4:	iret   
  4186d5:	push   edx
  4186d6:	adc    eax,0x1a8c1cc9
  4186db:	cdq    
  4186dc:	adc    edx,eax
  4186de:	push   esi
  4186df:	mov    ds:0x1dff2ad2,al
  4186e4:	mov    esp,0xb89d4e56
  4186e9:	dec    edi
  4186ea:	in     al,0x53
  4186ec:	les    esp,FWORD PTR [esi+0x59]
  4186ef:	jp     0x418715
  4186f1:	add    al,0x3b
  4186f3:	iret   
  4186f4:	outs   dx,BYTE PTR ds:[esi]
  4186f5:	(bad)  
  4186f6:	push   edx
  4186f7:	gs (bad) 
  4186f9:	into   
  4186fa:	call   0x1162:0x13fe0e94
  418701:	lods   eax,DWORD PTR ds:[esi]
  418702:	dec    edi
  418703:	call   0xff57:0x943373e8
  41870a:	cdq    
  41870b:	sbb    bl,cl
  41870d:	xchg   cl,dh
  41870f:	pop    esp
  418710:	ffreep st(6)
  418712:	int3   
  418713:	call   0xd6fecfba
  418718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418719:	xor    BYTE PTR [ebx],al
  41871b:	mov    al,0x3e
  41871d:	dec    esp
  41871e:	xchg   esp,eax
  41871f:	pop    eax
  418720:	mov    ebx,0x502eb32a
  418725:	pop    esp
  418726:	aaa    
  418727:	test   BYTE PTR [ebx],dl
  418729:	sbb    bl,BYTE PTR [ecx]
  41872b:	dec    ebx
  41872c:	and    eax,0xb8789d44
  418731:	scas   al,BYTE PTR es:[edi]
  418732:	cmp    ecx,DWORD PTR [edx+0x6a020d09]
  418738:	clc    
  418739:	mov    esp,0xb6cb030d
  41873e:	scas   al,BYTE PTR es:[edi]
  41873f:	add    dh,BYTE PTR [edi-0x21]
  418742:	js     0x41873e
  418744:	dec    eax
  418745:	shl    DWORD PTR [eax-0x65c0c99f],cl
  41874b:	aam    0x3
  41874d:	mov    dh,0x23
  41874f:	fidiv  DWORD PTR [edx]
  418751:	xor    edi,DWORD PTR [edi]
  418753:	aas    
  418754:	bound  esi,QWORD PTR [edi]
  418756:	push   esi
  418757:	xor    al,0x76
  418759:	imul   esp,DWORD PTR [edi+0x2cd28f91],0xffffffae
  418760:	sbb    eax,0xe91f825d
  418765:	cli    
  418766:	dec    edx
  418767:	test   al,0xba
  418769:	(bad)  
  41876a:	sbb    al,0xb3
  41876c:	or     DWORD PTR [edi-0x68ac1fc0],edi
  418772:	push   edx
  418773:	repnz dec ecx
  418775:	je     0x418785
  418777:	or     BYTE PTR [esi-0x41],al
  41877a:	std    
  41877b:	adc    ch,BYTE PTR [edi]
  41877d:	adc    DWORD PTR [esi-0x7c],edx
  418780:	push   esi
  418781:	into   
  418782:	(bad)  
  418783:	cs in  al,0x54
  418786:	cs sti 
  418788:	push   cs
  418789:	call   0x187cd60f
  41878e:	xchg   edi,eax
  41878f:	mov    cl,0xa0
  418791:	repnz dec ebp
  418793:	xchg   edx,eax
  418794:	inc    ebp
  418795:	or     dl,0xd
  418798:	or     DWORD PTR [eax+edi*4],ecx
  41879b:	imul   ecx,DWORD PTR [eax-0x1],0x3a
  41879f:	test   BYTE PTR [edx+0x255fccb4],dh
  4187a5:	mov    edx,0x72e31fb5
  4187aa:	or     al,0x45
  4187ac:	(bad)  
  4187ad:	mov    esi,fs
  4187af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b0:	pop    eax
  4187b1:	xchg   edi,eax
  4187b2:	fisttp QWORD PTR [ebx+esi*4]
  4187b5:	repz xchg ecx,eax
  4187b7:	and    al,0xbf
  4187b9:	jo     0x41875a
  4187bb:	inc    ecx
  4187bc:	mov    esp,0x14ba6055
  4187c1:	mov    dh,0x92
  4187c3:	inc    ebx
  4187c4:	aam    0x8e
  4187c6:	imul   ebp,DWORD PTR [ebx+0x5fc9d4be],0x40
  4187cd:	push   es
  4187ce:	sbb    DWORD PTR [eax+0x1513c49c],eax
  4187d4:	xchg   esp,eax
  4187d5:	xlat   BYTE PTR es:[ebx]
  4187d7:	and    ch,BYTE PTR [ebp+0x55]
  4187da:	test   al,0x9
  4187dc:	sahf   
  4187dd:	dec    ebp
  4187de:	add    al,BYTE PTR [ecx+0xc]
  4187e1:	cld    
  4187e2:	xor    dh,BYTE PTR [ebx-0x19]
  4187e5:	push   ebx
  4187e6:	xor    eax,0xe0f9c21c
  4187eb:	or     DWORD PTR [ebx],0xb8832fd
  4187f1:	test   eax,0x5369bcc4
  4187f6:	and    DWORD PTR [edx],ebx
  4187f8:	xor    al,0x5c
  4187fa:	inc    esi
  4187fb:	leave  
  4187fc:	xchg   ebx,eax
  4187fd:	xchg   ecx,eax
  4187fe:	outs   dx,DWORD PTR ds:[esi]
  4187ff:	mov    ds:0xf37d3dc5,eax
  418804:	repz mov ebx,0x724a244f
  41880a:	xchg   esp,eax
  41880b:	adc    al,0x93
  41880d:	add    BYTE PTR [esi],0xb0
  418810:	or     eax,ebx
  418812:	fwait
  418813:	push   0xfffffffc
  418815:	jns    0x41884d
  418817:	adc    al,0xcb
  418819:	outs   dx,DWORD PTR ds:[esi]
  41881a:	lds    eax,FWORD PTR [edi]
  41881c:	stos   DWORD PTR es:[edi],eax
  41881d:	test   DWORD PTR [ebp-0x7d964a56],ebp
  418823:	inc    ebx
  418824:	in     eax,0xab
  418826:	scas   al,BYTE PTR es:[edi]
  418827:	data16 jo 0x418897
  41882a:	fwait
  41882b:	cs inc esp
  41882d:	sbb    BYTE PTR [eax],0x2b
  418830:	push   esi
  418831:	sub    edx,0xdb24fde
  418837:	dec    eax
  418838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418839:	sahf   
  41883a:	fdiv   DWORD PTR [esi-0x47521b9f]
  418840:	jmp    0x29837c4f
  418845:	cmp    DWORD PTR [ebx+esi*8+0x1f],0x2582ef0b
  41884d:	pop    esi
  41884e:	ja     0x41887e
  418850:	in     eax,dx
  418851:	test   DWORD PTR [edi-0x58155a07],ebp
  418857:	push   ss
  418858:	in     al,0x23
  41885a:	ret    
  41885b:	jbe    0x418829
  41885d:	out    0xe6,al
  41885f:	das    
  418860:	in     eax,0xc4
  418862:	adc    ecx,ebp
  418864:	mov    edi,0xb9d8a344
  418869:	gs cs js 0x4188a0
  41886d:	dec    ebp
  41886e:	and    esi,DWORD PTR [ecx]
  418870:	mul    BYTE PTR [eax-0x3083a3ce]
  418876:	call   FWORD PTR [eax-0x4a7e9f11]
  41887c:	mov    ebx,0x54bab5c4
  418881:	sar    esi,0xd6
  418884:	ins    BYTE PTR es:[edi],dx
  418885:	pop    esi
  418886:	inc    esi
  418887:	pop    eax
  418888:	jo     0x418851
  41888a:	push   ebp
  41888b:	or     eax,0x817e6e72
  418890:	xor    al,0x38
  418892:	leave  
  418893:	jns    0x418821
  418895:	pop    edx
  418896:	xchg   esi,eax
  418897:	and    dl,BYTE PTR [ecx]
  418899:	inc    ebx
  41889a:	mov    ebx,0xf26b3c44
  41889f:	in     eax,0x3e
  4188a1:	test   eax,0x47aa3ee6
  4188a6:	adc    BYTE PTR [ebx-0x76751a2a],0x3b
  4188ad:	dec    ebx
  4188ae:	rcl    cl,1
  4188b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188b1:	adc    BYTE PTR [edi-0x22],bl
  4188b4:	pushw  ss
  4188b6:	cmp    BYTE PTR [edx+eiz*2+0x39],0x2
  4188bb:	jmp    0x161:0x90218b82
  4188c2:	fistp  QWORD PTR [eax+0x7c]
  4188c5:	xlat   BYTE PTR ds:[ebx]
  4188c6:	xchg   edi,eax
  4188c7:	int    0xbd
  4188c9:	mov    esi,0xa70fa815
  4188ce:	das    
  4188cf:	in     al,0x32
  4188d1:	stc    
  4188d2:	and    esp,edx
  4188d4:	mov    ebx,0x9e23d292
  4188d9:	nop
  4188da:	inc    ebp
  4188db:	mov    eax,0x3961b6d3
  4188e0:	std    
  4188e1:	std    
  4188e2:	das    
  4188e3:	inc    esi
  4188e4:	scas   al,BYTE PTR es:[edi]
  4188e5:	sub    ebp,DWORD PTR [edx-0x4f]
  4188e8:	jnp    0x4188d4
  4188ea:	dec    edx
  4188eb:	xor    BYTE PTR [ebx-0x4d],bh
  4188ee:	jge    0x4188b9
  4188f0:	inc    ebp
  4188f1:	add    al,0x41
  4188f3:	aad    0x4a
  4188f5:	neg    DWORD PTR [eax]
  4188f7:	cld    
  4188f8:	inc    esi
  4188f9:	imul   BYTE PTR [edi+0x8]
  4188fc:	(bad)  
  4188fd:	push   edx
  4188fe:	es jle 0x41896b
  418901:	dec    edx
  418902:	xchg   ecx,eax
  418903:	test   al,0xee
  418905:	in     eax,dx
  418906:	pop    ds
  418907:	jbe    0x41889d
  418909:	cmp    ah,al
  41890b:	xor    eax,0x74d99301
  418910:	addr16 bnd je 0x418928
  418914:	inc    eax
  418915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418916:	pop    edi
  418917:	pop    eax
  418918:	xlat   BYTE PTR ds:[ebx]
  418919:	mov    bh,0x71
  41891b:	jae    0x4188aa
  41891d:	inc    eax
  41891e:	lock imul ebx,DWORD PTR [ebp+0x56b7dc05],0xab62b25b
  418929:	out    0x6b,al
  41892b:	jle    0x418974
  41892d:	arpl   WORD PTR [eax-0x432dd28],sp
  418933:	out    dx,eax
  418934:	sub    DWORD PTR [esi-0x4d],ebp
  418937:	xor    BYTE PTR [edi+0x4590e944],dh
  41893d:	(bad)  
  41893f:	mov    BYTE PTR [eax+ebx*1+0x3d],dh
  418943:	cmp    BYTE PTR [edi],0xc3
  418946:	push   edi
  418947:	xchg   esi,eax
  418948:	and    al,BYTE PTR [esi-0x44]
  41894b:	pop    esi
  41894c:	sub    BYTE PTR [ecx+ebp*4+0xcd544d2],dh
  418953:	and    cl,BYTE PTR [ebp+eax*2-0x37cb1e9b]
  41895a:	cmp    dl,BYTE PTR [ebp-0x21037896]
  418960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418961:	push   ebx
  418962:	sbb    edi,eax
  418964:	cmp    eax,0xc3b3e12b
  418969:	sub    eax,0x4bc64574
  41896e:	xchg   edi,eax
  41896f:	loope  0x418901
  418971:	(bad)  
  418972:	jmp    0xf75:0x90e7a0b6
  418979:	mov    ebp,0x7fd70e10
  41897e:	in     eax,0x37
  418980:	popa   
  418981:	test   BYTE PTR [eax],dl
  418983:	scas   eax,DWORD PTR es:[edi]
  418984:	enter  0xa7dc,0x2e
  418988:	out    dx,al
  418989:	mov    bh,0x2b
  41898b:	or     DWORD PTR [ecx-0x50],esi
  41898e:	mov    esi,0x6dbd29d9
  418993:	(bad)  
  418994:	jns    0x418923
  418996:	clc    
  418997:	das    
  418998:	push   es
  418999:	ret    0xf3dc
  41899c:	aad    0xc6
  41899e:	add    ebp,eax
  4189a0:	xor    eax,0x629000fc
  4189a5:	sbb    bh,dh
  4189a7:	add    al,0x7c
  4189a9:	fstp   DWORD PTR [ebx+ebx*1+0x3e6fb93a]
  4189b0:	ins    DWORD PTR es:[edi],dx
  4189b1:	jmp    0x4189d6
  4189b3:	clc    
  4189b4:	mov    edx,0x51cd98a1
  4189b9:	xor    dl,dl
  4189bb:	push   edx
  4189bc:	pop    esi
  4189bd:	stos   DWORD PTR es:[edi],eax
  4189be:	iret   
  4189bf:	retf   
  4189c0:	inc    eax
  4189c1:	jns    0x418979
  4189c3:	ficom  DWORD PTR [ecx+0x237ca1a]
  4189c9:	pop    edi
  4189ca:	es mov bh,0x75
  4189cd:	shl    BYTE PTR [eax+0x76],cl
  4189d0:	std    
  4189d1:	inc    edi
  4189d2:	inc    edx
  4189d3:	test   eax,0xac018fd5
  4189d8:	fscale 
  4189da:	(bad)  
  4189db:	or     eax,0x956f6e51
  4189e0:	out    0x9c,al
  4189e2:	jecxz  0x418a38
  4189e4:	fwait
  4189e5:	inc    eax
  4189e6:	mov    WORD PTR [eax-0x58],cs
  4189e9:	les    ecx,FWORD PTR [ecx-0x10789c43]
  4189ef:	xchg   ecx,eax
  4189f0:	pop    ebp
  4189f1:	xchg   ecx,eax
  4189f2:	dec    esp
  4189f3:	ret    0xfff4
  4189f6:	or     BYTE PTR [edi-0x6b],ch
  4189f9:	mov    edi,0xf4c0a033
  4189fe:	aam    0x17
  418a00:	mov    cs,ebp
  418a02:	stc    
  418a03:	sbb    ch,BYTE PTR [esi]
  418a05:	adc    BYTE PTR [edx],bl
  418a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a08:	and    DWORD PTR fs:[edx-0x9a29c0d],0x66
  418a10:	pop    edx
  418a11:	push   ebp
  418a12:	sub    eax,0x9b41ed2a
  418a17:	mov    ch,0x94
  418a19:	ds xchg esi,eax
  418a1b:	and    BYTE PTR [ecx],dh
  418a1d:	cmp    eax,0x7f4f9b73
  418a22:	xor    edx,DWORD PTR [edi+0x25]
  418a25:	pop    edx
  418a26:	dec    edx
  418a27:	pop    eax
  418a28:	adc    edi,esp
  418a2a:	mov    bl,0x38
  418a2c:	jmp    0x8e5a:0xfe40c139
  418a33:	faddp  st(0),st
  418a35:	push   edx
  418a36:	imul   eax,ebx,0x7d
  418a39:	inc    eax
  418a3a:	addr16 inc ecx
  418a3c:	retf   
  418a3d:	icebp  
  418a3e:	inc    esp
  418a3f:	xlat   BYTE PTR ds:[ebx]
  418a40:	cmp    esi,ecx
  418a42:	out    dx,eax
  418a43:	jnp    0x418aaf
  418a45:	dec    edx
  418a46:	xchg   edi,eax
  418a47:	adc    al,al
  418a49:	in     eax,0x8d
  418a4b:	xchg   edi,eax
  418a4c:	in     al,dx
  418a4d:	pop    es
  418a4e:	stos   BYTE PTR es:[edi],al
  418a4f:	mov    ds:0x17e9c7fc,al
  418a54:	cmc    
  418a55:	les    edx,FWORD PTR [esi-0x38]
  418a58:	aam    0xb2
  418a5a:	push   ebx
  418a5b:	cmp    al,0x88
  418a5d:	jmp    0x5ca6:0xb4302acf
  418a64:	xor    ah,al
  418a66:	adc    edx,DWORD PTR [edi-0x18]
  418a69:	fs push ss
  418a6b:	sbb    cl,dl
  418a6d:	add    ebx,edx
  418a6f:	push   0x567784ca
  418a74:	es dec eax
  418a76:	sahf   
  418a77:	xchg   BYTE PTR [ebp+edi*8-0x38],ah
  418a7b:	or     ebp,DWORD PTR [ebp-0x69d3e4ae]
  418a81:	adc    bl,BYTE PTR [edi-0x45e93c78]
  418a87:	aad    0xc5
  418a89:	mov    bl,ch
  418a8b:	je     0x418a61
  418a8d:	aaa    
  418a8e:	lods   al,BYTE PTR ds:[esi]
  418a8f:	xor    ebx,DWORD PTR [ebx-0x6e]
  418a92:	mov    ds:0x2fc78fdd,eax
  418a97:	push   ss
  418a98:	fs mov edx,0xa9ce2711
  418a9e:	or     edx,edx
  418aa0:	adc    esi,eax
  418aa2:	dec    edi
  418aa3:	mov    ah,0xd9
  418aa5:	push   esi
  418aa6:	jmp    0xa61fde74
  418aab:	nop
  418aac:	je     0x418a5f
  418aae:	mov    al,ds:0x250844c7
  418ab3:	loope  0x418aff
  418ab5:	jb     0x418b34
  418ab7:	jmp    0x595b:0x65c64c77
  418abe:	adc    DWORD PTR [ebp-0x45a59c97],0xca4de986
  418ac8:	lea    ebp,[edi+0x60]
  418acb:	and    al,bh
  418acd:	rcl    DWORD PTR [ebp-0x47af7391],0x98
  418ad4:	push   edx
  418ad5:	(bad)  
  418ad6:	icebp  
  418ad7:	and    eax,0xe23c3329
  418adc:	iret   
  418add:	push   ebx
  418ade:	and    edi,ebp
  418ae0:	or     BYTE PTR [eax-0x5453bb56],bh
  418ae6:	xchg   ebx,eax
  418ae7:	add    dl,BYTE PTR [ebp+ecx*2+0x71]
  418aeb:	push   0x478d8db7
  418af0:	push   edi
  418af1:	and    al,0x46
  418af3:	(bad)  
  418af5:	scas   eax,DWORD PTR es:[edi]
  418af6:	mov    eax,ss
  418af8:	dec    ebx
  418af9:	std    
  418afa:	sbb    DWORD PTR es:[ebp+0x5315eb39],ebx
  418b01:	dec    eax
  418b02:	sbb    eax,0x1ff45d7
  418b07:	cmp    BYTE PTR cs:[edi-0x7b452049],ah
  418b0e:	adc    DWORD PTR [ebp+0x7a8e5c6c],0x7e8b4f43
  418b18:	adc    DWORD PTR [eax+0x65],esp
  418b1b:	pop    ebp
  418b1c:	sub    BYTE PTR [ebx+ebp*2+0x5],cl
  418b20:	mov    ds:0xe2560fc,al
  418b25:	xor    eax,0x4c6c3d61
  418b2a:	fmulp  st(3),st
  418b2c:	pop    ebx
  418b2d:	jle    0x418b38
  418b2f:	sub    ch,bh
  418b31:	add    eax,0x6dfe2f8e
  418b36:	shl    DWORD PTR [ecx],cl
  418b38:	shl    DWORD PTR [esi],1
  418b3a:	call   0x8cc275e0
  418b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b40:	xor    al,0x76
  418b42:	out    0x4,al
  418b44:	lds    ecx,FWORD PTR [eax-0x14]
  418b47:	popa   
  418b48:	or     DWORD PTR [esi-0x3f],edi
  418b4b:	push   ebp
  418b4c:	xchg   BYTE PTR [esp+ecx*2-0x74],al
  418b50:	retf   0x5210
  418b53:	stc    
  418b54:	inc    esi
  418b55:	sbb    eax,0x387824d9
  418b5a:	test   BYTE PTR [ebp-0x4455f5c5],dh
  418b60:	mov    bh,bl
  418b62:	add    esp,DWORD PTR [ecx-0x4]
  418b65:	dec    edx
  418b66:	outs   dx,BYTE PTR ds:[esi]
  418b67:	inc    edi
  418b68:	mov    bh,0xac
  418b6a:	mov    bl,0x93
  418b6c:	jmp    0x7336:0x6c39bf8c
  418b73:	fimul  DWORD PTR [edx]
  418b75:	adc    DWORD PTR [ebx*1-0x5a50d67],edi
  418b7c:	push   cs
  418b7d:	inc    esp
  418b7e:	out    dx,al
  418b7f:	pop    ecx
  418b80:	add    bh,BYTE PTR [edi]
  418b82:	cmp    ecx,esi
  418b84:	js     0x418bb0
  418b86:	(bad)
  418b89:	repnz xor eax,0x8fcf9294
  418b8f:	cmp    eax,0xe06a51a7
  418b94:	push   ds
  418b95:	jb     0x418b83
  418b97:	ins    BYTE PTR es:[edi],dx
  418b98:	ss mov al,0x16
  418b9b:	(bad)  
  418b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b9d:	mov    ecx,0x2e871ee7
  418ba3:	push   0xffffffc3
  418ba5:	stc    
  418ba6:	or     edx,DWORD PTR [edi+ebp*8-0x2a79d948]
  418bad:	xchg   BYTE PTR [ebp-0x23f307b9],dh
  418bb3:	add    al,0xd9
  418bb5:	je     0x418b51
  418bb7:	fcom   st(5)
  418bb9:	jl     0x418bc8
  418bbb:	jnp    0x418c38
  418bbd:	popf   
  418bbe:	inc    edi
  418bbf:	add    ebp,DWORD PTR [ebp+0x4c]
  418bc2:	popf   
  418bc3:	xchg   ecx,eax
  418bc4:	sbb    ch,ah
  418bc6:	cwde   
  418bc7:	sbb    edx,edi
  418bc9:	test   eax,0x87cdde69
  418bce:	sbb    DWORD PTR [edx+0x6054198],edi
  418bd4:	mov    DWORD PTR [ebx-0x63abe7ee],edi
  418bda:	and    eax,ecx
  418bdc:	(bad)  
  418bdd:	cmp    al,0xaf
  418bdf:	dec    ebx
  418be0:	push   eax
  418be1:	inc    edx
  418be2:	loope  0x418be0
  418be4:	les    esi,FWORD PTR [ecx+ebp*2+0x45]
  418be8:	(bad)  
  418be9:	test   bl,cl
  418beb:	and    al,0x63
  418bed:	call   0xc133:0x6c6d6271
  418bf4:	data16 mov cl,0x5e
  418bf7:	out    0x4a,eax
  418bf9:	and    eax,0xd2453d05
  418bfe:	and    edi,DWORD PTR ds:[edx-0x1b8629c5]
  418c05:	and    bh,BYTE PTR [eax-0x526a59c0]
  418c0b:	(bad)  
  418c0c:	retf   
  418c0d:	inc    esi
  418c0e:	fcomp  DWORD PTR [esi-0x61]
  418c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c12:	cwde   
  418c13:	pop    edx
  418c14:	mov    bl,0xfa
  418c16:	inc    edx
  418c17:	jmp    0x418c88
  418c19:	nop
  418c1a:	test   BYTE PTR [edi],bl
  418c1c:	imul   ebx,DWORD PTR [esi+0x76],0x3dea88e1
  418c23:	aad    0xc7
  418c25:	popa   
  418c26:	jo     0x418c40
  418c28:	sbb    ch,BYTE PTR [eax-0x77]
  418c2b:	mov    dh,0xda
  418c2d:	xor    eax,ecx
  418c2f:	into   
  418c30:	push   ecx
  418c31:	test   eax,0x9da6f87b
  418c36:	sbb    eax,0xa3e0f2e1
  418c3b:	in     al,dx
  418c3c:	add    DWORD PTR [edi],edx
  418c3e:	stos   BYTE PTR es:[edi],al
  418c3f:	outs   dx,DWORD PTR ds:[esi]
  418c40:	fldenv [ebp+edx*4+0x72]
  418c44:	pop    esp
  418c45:	sbb    al,0x64
  418c47:	loopne 0x418bef
  418c49:	rcl    BYTE PTR [esi-0x29],0x5d
  418c4d:	int    0xd3
  418c4f:	lock push ecx
  418c51:	sub    DWORD PTR [esi+0x69],edi
  418c54:	inc    eax
  418c55:	xor    DWORD PTR [esi],esi
  418c57:	cdq    
  418c58:	inc    esp
  418c59:	push   ebp
  418c5a:	(bad)  
  418c5b:	out    dx,eax
  418c5c:	inc    ebp
  418c5d:	sbb    eax,0x3224c38f
  418c62:	fld    QWORD PTR [edi]
  418c64:	dec    ecx
  418c65:	addr16 inc ecx
  418c67:	push   edx
  418c68:	sub    eax,0x5d42107
  418c6d:	mov    ebp,0x339601d1
  418c72:	pop    esi
  418c73:	dec    esp
  418c74:	mov    ch,0xa6
  418c76:	mov    edi,0xb3b67226
  418c7b:	mov    ah,0x8d
  418c7d:	fdivr  DWORD PTR [ebx]
  418c7f:	dec    edi
  418c80:	jb     0x418cf6
  418c82:	mov    al,ah
  418c84:	out    dx,eax
  418c85:	mov    dh,0x9a
  418c87:	mov    edx,0x1cead029
  418c8c:	pusha  
  418c8d:	lock lea edi,[eax]
  418c90:	mov    DWORD PTR [esi+0x27],ebp
  418c93:	adc    eax,DWORD PTR [ecx+0x1f6beb47]
  418c99:	and    DWORD PTR [ecx-0x50],esi
  418c9c:	push   ebp
  418c9d:	mov    eax,ds:0xb2c6b5f2
  418ca2:	inc    edx
  418ca3:	div    bl
  418ca5:	add    al,0xae
  418ca7:	addr16 or eax,0xd866b5ff
  418cad:	sub    eax,0x3f93e145
  418cb2:	int    0xc7
  418cb4:	int3   
  418cb5:	cvtdq2ps xmm3,xmm7
  418cb8:	pop    ss
  418cb9:	inc    ebp
  418cba:	and    ebx,edi
  418cbc:	add    al,BYTE PTR [ebp+0x70a55543]
  418cc2:	add    DWORD PTR [esi+0x32],ebp
  418cc5:	or     al,BYTE PTR [ecx+0x367cdf71]
  418ccb:	or     al,0xc8
  418ccd:	sub    al,0x49
  418ccf:	aad    0x38
  418cd1:	shl    DWORD PTR [esi-0x34222712],1
  418cd7:	(bad)  
  418cd8:	bswap  esi
  418cda:	pop    ds
  418cdb:	and    DWORD PTR [ecx-0x1c7a065a],ebp
  418ce1:	(bad)  
  418ce2:	loop   0x418c92
  418ce4:	pop    ecx
  418ce5:	sub    DWORD PTR [edi+eiz*2],edi
  418ce8:	xlat   BYTE PTR ds:[ebx]
  418ce9:	xchg   edx,eax
  418cea:	jmp    0xba0ec3a2
  418cef:	inc    ecx
  418cf0:	jmp    0x72e4:0x7e272567
  418cf7:	repnz pop ecx
  418cf9:	std    
  418cfa:	ins    DWORD PTR es:[edi],dx
  418cfb:	test   ah,0xa4
  418cfe:	mov    DWORD PTR [edx+ecx*4],eax
  418d01:	and    ch,dh
  418d03:	jge    0x418d81
  418d05:	jno    0x418d5a
  418d07:	arpl   WORD PTR [ebx+0x34],dx
  418d0a:	cli    
  418d0b:	push   esi
  418d0c:	sub    BYTE PTR [edi],cl
  418d0e:	(bad)  
  418d0f:	(bad)  
  418d10:	jp     0x418cbb
  418d12:	mov    al,0x61
  418d14:	test   BYTE PTR [ecx+edx*4],ah
  418d17:	rcl    DWORD PTR [esi],cl
  418d19:	retf   
  418d1a:	jne    0x418d18
  418d1c:	out    0x5a,eax
  418d1e:	inc    esp
  418d1f:	sbb    esp,DWORD PTR ss:[esi-0x5c]
  418d23:	mov    edx,0xb0645ec5
  418d28:	push   cs
  418d29:	cmp    BYTE PTR [esi+eiz*8-0x2a839277],bl
  418d30:	dec    esi
  418d31:	js     0x418cbe
  418d33:	mov    ecx,edx
  418d35:	int    0xd
  418d37:	push   esi
  418d38:	or     DWORD PTR [ecx-0xc4053a4],edi
  418d3e:	adc    al,0x10
  418d40:	and    ah,BYTE PTR [edi-0x61941b79]
  418d46:	in     al,dx
  418d47:	push   edi
  418d48:	pop    esp
  418d49:	ds test al,0xa4
  418d4c:	or     DWORD PTR [ebp+0x30],edi
  418d4f:	or     DWORD PTR [edi+ecx*1-0xf],esi
  418d53:	push   eax
  418d54:	and    eax,0x2b82aa2a
  418d59:	test   DWORD PTR [edx+edx*4-0x51],esi
  418d5d:	lods   al,BYTE PTR ds:[esi]
  418d5e:	sbb    eax,DWORD PTR [ecx]
  418d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d61:	push   ds
  418d62:	mov    ecx,0x5ca49699
  418d67:	stos   DWORD PTR es:[edi],eax
  418d68:	mov    dl,0x48
  418d6a:	sahf   
  418d6b:	and    eax,0xa47043e8
  418d70:	pop    esp
  418d71:	mov    ds:0xdfec2c63,eax
  418d76:	xchg   ebx,eax
  418d77:	mov    WORD PTR [ebp-0x3347e2b5],es
  418d7d:	and    eax,0x8b49159e
  418d82:	(bad)  
  418d84:	test   eax,0x32da9652
  418d89:	(bad)  
  418d8a:	data16 sbb bh,dh
  418d8d:	sub    ebp,DWORD PTR ds:0x7fa83843
  418d93:	and    edx,esi
  418d95:	(bad)  
  418d96:	aad    0x89
  418d98:	retf   0xe5c9
  418d9b:	dec    edi
  418d9c:	jmp    0x418d56
  418d9e:	test   bh,cl
  418da0:	lds    ebp,FWORD PTR [ecx+0x79fbc85a]
  418da6:	jl     0x418d7c
  418da8:	and    ebx,DWORD PTR [edx]
  418daa:	sbb    ebp,DWORD PTR [ecx-0x63]
  418dad:	fcmovnu st,st(6)
  418daf:	adc    al,0x35
  418db1:	add    BYTE PTR [esi],bh
  418db3:	xor    DWORD PTR [ecx],esi
  418db5:	daa    
  418db6:	mov    eax,ds:0xbe8caacb
  418dbb:	sbb    esi,DWORD PTR [ecx-0x2]
  418dbe:	inc    edi
  418dbf:	mov    al,ds:0x745312a8
  418dc4:	es repnz aas 
  418dc7:	xchg   edx,eax
  418dc8:	mov    eax,0xcf5a6e27
  418dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dce:	add    bl,BYTE PTR [ebp+eax*1+0x187ca4b8]
  418dd5:	xor    eax,0x91ca91c
  418dda:	cmp    bh,al
  418ddc:	sbb    BYTE PTR [edx-0x60116a2d],bl
  418de2:	aad    0x17
  418de4:	test   ebx,0x44e304c7
  418dea:	into   
  418deb:	push   eax
  418dec:	mov    ebp,0x48e373b7
  418df1:	inc    ecx
  418df2:	pop    ss
  418df3:	cmc    
  418df4:	enter  0xd37,0xe9
  418df8:	push   ss
  418df9:	outs   dx,DWORD PTR ds:[esi]
  418dfa:	lock pop esp
  418dfc:	cli    
  418dfd:	push   edx
  418dfe:	fild   WORD PTR [esi-0x5d]
  418e01:	mov    cl,0x8f
  418e03:	pop    eax
  418e04:	dec    ebx
  418e05:	cwde   
  418e06:	adc    eax,DWORD PTR [edi-0x1a516ac9]
  418e0c:	mov    al,0x3a
  418e0e:	inc    ecx
  418e0f:	sbb    bl,BYTE PTR [ebx+0x59]
  418e12:	xor    DWORD PTR [esi+0x15],0xffffffa3
  418e16:	test   ah,0xdb
  418e19:	sbb    BYTE PTR [edi-0x3ad3462b],dl
  418e1f:	fbstp  TBYTE PTR [ebx-0x3a0f9199]
  418e25:	aad    0xf9
  418e27:	inc    esi
  418e28:	cmp    al,0x9a
  418e2a:	(bad)  
  418e2b:	enter  0x6183,0x8a
  418e2f:	ret    
  418e30:	mov    esi,0x49424d8
  418e35:	imul   esp,DWORD PTR [ebx],0x83694162
  418e3b:	popa   
  418e3c:	and    edi,DWORD PTR [esp+ebx*1]
  418e3f:	add    eax,0x22f3650a
  418e44:	pop    edx
  418e45:	inc    ebx
  418e46:	sbb    DWORD PTR [edx],esi
  418e48:	(bad)  
  418e49:	sbb    al,0x8f
  418e4b:	repnz mov gs,edi
  418e4e:	cmp    eax,0x683a564
  418e53:	pop    es
  418e54:	xchg   DWORD PTR [edi],esi
  418e56:	jne    0x418e2f
  418e58:	ins    BYTE PTR es:[edi],dx
  418e59:	cmp    ebp,edx
  418e5b:	pop    ebx
  418e5c:	das    
  418e5d:	and    DWORD PTR [edi],0x27
  418e60:	popa   
  418e61:	xchg   ebx,eax
  418e62:	or     ch,bh
  418e64:	push   esi
  418e65:	sbb    DWORD PTR [esi-0x4546490e],ebp
  418e6b:	adc    BYTE PTR [edi+0x1f],bl
  418e6e:	jnp    0x418e1c
  418e70:	jl     0x418ec6
  418e72:	mov    ebx,0x7508d906
  418e77:	and    BYTE PTR [esi+0x52],al
  418e7a:	into   
  418e7b:	inc    edx
  418e7c:	adc    ebx,ebx
  418e7e:	sub    BYTE PTR [eax],ah
  418e80:	inc    ebp
  418e81:	sbb    edi,edi
  418e83:	pop    edi
  418e84:	sub    dh,0xf3
  418e87:	and    esi,DWORD PTR [edi]
  418e89:	retf   0xe293
  418e8c:	adc    DWORD PTR [esi-0x52],edx
  418e8f:	loopne 0x418ec8
  418e91:	or     dl,dl
  418e93:	in     eax,0x4a
  418e95:	nop
  418e96:	lods   eax,DWORD PTR ds:[esi]
  418e97:	mov    bh,0x45
  418e99:	popa   
  418e9a:	aad    0xa1
  418e9c:	mov    BYTE PTR [esi+0x6720c5d4],dh
  418ea2:	sbb    al,0xa4
  418ea4:	mov    es,WORD PTR [ecx+0x6bae44ee]
  418eaa:	jmp    0x418f0b
  418eac:	fsub   DWORD PTR [esi+0xde0061]
  418eb2:	ret    0x3b9a
  418eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eb6:	inc    esi
  418eb7:	dec    edi
  418eb8:	dec    esi
  418eb9:	fist   WORD PTR [ebp-0x6b]
  418ebc:	dec    eax
  418ebd:	and    edi,0xffffffa6
  418ec0:	(bad)  
  418ec1:	rol    BYTE PTR [ebx+ebp*1],cl
  418ec4:	adc    DWORD PTR [ebx+0x72],0x6a
  418ec8:	mov    esi,0xa5763851
  418ecd:	cmp    edi,DWORD PTR [edi+0x5e]
  418ed0:	sub    al,0x96
  418ed2:	mov    edx,0x8dd6771
  418ed7:	(bad)  [ebx-0x71b0d0eb]
  418edd:	into   
  418ede:	cld    
  418edf:	clc    
  418ee0:	lods   al,BYTE PTR ds:[esi]
  418ee1:	fs jmp 0x418f14
  418ee4:	rcr    DWORD PTR [esi-0x6668602f],1
  418eea:	fs xchg esp,eax
  418eec:	(bad)  
  418eed:	cmp    ch,bh
  418eef:	xor    cl,BYTE PTR [eax+0xfb4b87a]
  418ef5:	jnp    0x418f57
  418ef7:	dec    esp
  418ef8:	sub    BYTE PTR [ecx-0xbf294bb],bl
  418efe:	repz test BYTE PTR [edi],ah
  418f01:	call   0xdefc:0xb416e8d7
  418f08:	enter  0xa95a,0xdc
  418f0c:	aam    0x5
  418f0e:	pop    es
  418f0f:	daa    
  418f10:	dec    ebp
  418f11:	inc    edx
  418f12:	(bad)  
  418f13:	dec    ecx
  418f14:	xor    DWORD PTR [ecx+0x74573538],edx
  418f1a:	adc    eax,0xe72ca96d
  418f1f:	mov    al,0x15
  418f21:	pop    edi
  418f22:	add    dh,ch
  418f24:	adc    al,0xc2
  418f26:	xor    al,dl
  418f28:	dec    edx
  418f29:	cld    
  418f2a:	iret   
  418f2b:	daa    
  418f2c:	stos   DWORD PTR es:[edi],eax
  418f2d:	rcl    DWORD PTR [eax],0xd3
  418f30:	or     BYTE PTR [eax+0x20],bh
  418f33:	in     eax,dx
  418f34:	push   ebx
  418f35:	xor    eax,DWORD PTR [esi+0x173473f4]
  418f3b:	in     eax,0x74
  418f3d:	(bad)
  418f42:	cwde   
  418f43:	push   ebp
  418f44:	std    
  418f45:	(bad)  
  418f46:	lods   eax,DWORD PTR ds:[esi]
  418f47:	lds    ecx,FWORD PTR [esi-0x12]
  418f4a:	popf   
  418f4b:	sub    eax,0xcb64bc64
  418f50:	rcr    BYTE PTR ds:0xf0101bd1,cl
  418f56:	fld    DWORD PTR [edi]
  418f58:	call   0xe03c:0x10e21a96
  418f5f:	stc    
  418f60:	inc    edx
  418f61:	fstp   st(2)
  418f63:	(bad)  
  418f64:	(bad)  [eax+ebx*8]
  418f67:	fld    DWORD PTR [eax+0x48]
  418f6a:	mov    esi,0x32fc99ea
  418f6f:	jbe    0x418f88
  418f71:	int3   
  418f72:	sbb    al,0x8a
  418f74:	lahf   
  418f75:	add    al,0xfa
  418f77:	pop    edi
  418f78:	or     edi,DWORD PTR [ecx+eax*2]
  418f7b:	ss jns 0x418f11
  418f7e:	bnd jne 0x418f53
  418f81:	js     0x418fcf
  418f83:	fwait
  418f84:	add    al,0xe4
  418f86:	pop    eax
  418f87:	inc    edi
  418f88:	sbb    al,0xc6
  418f8a:	test   al,0xa7
  418f8c:	out    0x3e,al
  418f8e:	mov    esp,0x21029065
  418f93:	test   al,0x29
  418f95:	hlt    
  418f96:	and    ebp,esp
  418f98:	sub    BYTE PTR [ecx-0x621e56c0],al
  418f9e:	lea    esp,[ebx+0x2d]
  418fa1:	dec    edi
  418fa2:	pop    es
  418fa3:	or     al,0x3b
  418fa5:	push   ds
  418fa6:	or     DWORD PTR [edx],0x725a92be
  418fac:	loope  0x418f38
  418fae:	rol    ebx,cl
  418fb0:	aam    0x4d
  418fb2:	cmp    bl,dl
  418fb4:	leave  
  418fb5:	ret    
  418fb6:	xchg   BYTE PTR [edx],dl
  418fb8:	fisubr DWORD PTR [ebp-0x21b4cc39]
  418fbe:	inc    ecx
  418fbf:	gs pushf 
  418fc1:	push   0xf
  418fc3:	std    
  418fc4:	rcl    DWORD PTR [edx-0x3baf9d20],cl
  418fca:	stos   BYTE PTR es:[edi],al
  418fcb:	pop    ss
  418fcc:	mov    dl,0xdf
  418fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fcf:	xchg   esp,eax
  418fd0:	cmp    dl,BYTE PTR [eax-0x52]
  418fd3:	cmp    dh,BYTE PTR [ebx+0x5d]
  418fd6:	and    edi,DWORD PTR ds:0x3041cc65
  418fdc:	or     al,0x3a
  418fde:	inc    BYTE PTR [ecx-0x7c]
  418fe1:	sbb    al,0xc4
  418fe3:	jne    0x418fb6
  418fe5:	mov    esp,DWORD PTR [esi+0x11]
  418fe8:	adc    DWORD PTR cs:[edi+0x35],edx
  418fec:	fild   DWORD PTR [eax-0x673a2aa6]
  418ff2:	sbb    bh,dh
  418ff4:	imul   eax,DWORD PTR [ecx],0x4a
  418ff7:	jmp    0x419068
  418ff9:	mov    ds:0x6d35a4c3,al
  418ffe:	inc    ecx
  418fff:	sbb    BYTE PTR [ebp+0x3e],bl
  419002:	out    0xcc,al
  419004:	or     BYTE PTR [edi],cl
  419006:	jnp    0x418fdf
  419008:	je     0x419082
  41900a:	addr16 ja 0x419024
  41900d:	jle    0x418fd5
  41900f:	xchg   di,ax
  419011:	pop    eax
  419012:	sbb    eax,DWORD PTR [ebx+0xe]
  419015:	neg    esp
  419017:	mov    eax,0x15a2fe0d
  41901c:	loope  0x41901c
  41901e:	xchg   edx,eax
  41901f:	and    BYTE PTR [eax+0x5f],dl
  419022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419023:	neg    dl
  419025:	sahf   
  419026:	xor    eax,0xf5eae037
  41902b:	cs push edi
  41902d:	test   eax,0x8c115f1f
  419032:	int    0x74
  419034:	das    
  419035:	cld    
  419036:	inc    edx
  419037:	retf   0x7d02
  41903a:	fwait
  41903b:	xchg   ebx,eax
  41903c:	(bad)  
  41903d:	xchg   ecx,eax
  41903e:	fwait
  41903f:	xor    al,0xd0
  419041:	add    esp,DWORD PTR [ecx-0x29babb6d]
  419047:	shr    DWORD PTR [esi-0x59104677],1
  41904d:	std    
  41904e:	adc    esi,DWORD PTR [esi+edi*4-0x467bb4f4]
  419055:	std    
  419056:	hlt    
  419057:	out    dx,al
  419058:	ins    DWORD PTR es:[edi],dx
  419059:	out    0x99,al
  41905b:	mov    BYTE PTR [edx+eax*8],ah
  41905e:	adc    BYTE PTR [ecx-0x6645cf7],cl
  419064:	pop    eax
  419065:	dec    ebp
  419066:	mov    BYTE PTR [edi],ch
  419068:	adc    dh,BYTE PTR [edx+ecx*4]
  41906b:	sbb    al,0x1d
  41906d:	xchg   edx,eax
  41906e:	fstp   DWORD PTR [eax+0x2eefa09c]
  419074:	inc    eax
  419075:	push   esp
  419076:	push   ebx
  419077:	xchg   ecx,eax
  419078:	fs pop ebx
  41907a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41907b:	call   0x12f31e4b
  419080:	lods   al,BYTE PTR ds:[esi]
  419081:	in     eax,0xee
  419083:	cmc    
  419084:	and    al,0x83
  419086:	retf   
  419087:	repz lock (bad) 
  41908b:	(bad)  
  41908c:	push   esi
  41908d:	xor    eax,0xbfde931b
  419092:	jbe    0x4190d8
  419094:	mov    eax,ds:0xbda2a4fa
  419099:	cmp    eax,DWORD PTR [ecx-0x7c0ce1c2]
  41909f:	sahf   
  4190a0:	xchg   esi,eax
  4190a1:	dec    esp
  4190a2:	xor    bl,dl
  4190a4:	xchg   edi,eax
  4190a5:	push   esp
  4190a6:	mov    ebx,0x3fefe3d4
  4190ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ac:	xchg   DWORD PTR [edi+edi*2-0x5b490c7a],ebx
  4190b3:	sbb    edx,esp
  4190b5:	inc    esi
  4190b6:	jb     0x419131
  4190b8:	xchg   DWORD PTR [edi+edi*4-0x46],esp
  4190bc:	sbb    eax,0xd54b4cac
  4190c1:	or     eax,0x26140abd
  4190c6:	add    BYTE PTR [eax],bl
  4190c8:	inc    ebx
  4190c9:	add    ebx,ebx
  4190cb:	fsub   DWORD PTR [ebx-0x2518f62e]
  4190d1:	lock loope 0x419077
  4190d4:	jecxz  0x4190a0
  4190d6:	rcr    bl,0xeb
  4190d9:	inc    esi
  4190da:	test   al,0x3b
  4190dc:	aas    
  4190dd:	sbb    bh,dh
  4190df:	mov    eax,ds:0x3c4f6d8b
  4190e4:	bound  ebp,QWORD PTR [eax]
  4190e6:	ins    BYTE PTR es:[edi],dx
  4190e7:	fdiv   DWORD PTR [esi]
  4190e9:	out    0xe0,eax
  4190eb:	push   0x1c488b11
  4190f0:	ret    
  4190f1:	or     BYTE PTR [eax-0x2534a12d],dl
  4190f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190f8:	dec    ebp
  4190f9:	mov    esp,0x463c58ff
  4190fe:	xchg   DWORD PTR [edx-0x2c],ebx
  419101:	cwde   
  419102:	sbb    eax,0xc84a9dc5
  419107:	adc    eax,0x55848c54
  41910c:	sbb    DWORD PTR ds:0xd745f03a,esp
  419112:	cld    
  419113:	cmp    DWORD PTR [esp+eax*8+0x32],ebp
  419117:	cld    
  419118:	fisub  WORD PTR [ecx+0x7111e79f]
  41911e:	les    ecx,FWORD PTR [esi-0x354d3b62]
  419124:	call   0x85a0:0xe96fcfb8
  41912b:	mov    ecx,0x8d40ebc4
  419130:	fwait
  419131:	add    DWORD PTR [edx],ebx
  419133:	xchg   ebp,eax
  419134:	jno    0x4190ef
  419136:	rcr    DWORD PTR [esi-0x71],1
  419139:	cmp    BYTE PTR [edi+0x2ed586ae],dh
  41913f:	push   ebp
  419140:	clc    
  419141:	push   ecx
  419142:	ss jg  0x419117
  419145:	iret   
  419146:	pop    ss
  419147:	lahf   
  419148:	fstp   TBYTE PTR [esi]
  41914a:	mov    bh,0xb0
  41914c:	pcmpgtd mm2,QWORD PTR [edx-0x1e26de00]
  419153:	adc    esi,DWORD PTR [esi+0x74]
  419156:	xor    eax,0x297df887
  41915b:	inc    edx
  41915c:	lods   eax,DWORD PTR ds:[esi]
  41915d:	ficomp WORD PTR [edx+0x57d4aa8b]
  419163:	jb     0x41911e
  419165:	mov    ds:0x5779a9d8,eax
  41916a:	sahf   
  41916b:	dec    ecx
  41916c:	cmp    esi,ebx
  41916e:	sbb    dl,BYTE PTR [ebx+edi*4+0x21ffe17e]
  419175:	in     al,dx
  419176:	cwde   
  419177:	xor    ah,BYTE PTR [edx-0x29e78bc5]
  41917d:	push   ebp
  41917e:	adc    BYTE PTR [ebx-0x64],0x9e
  419182:	imul   ecx,DWORD PTR [ecx],0xe827d585
  419188:	pop    ds
  419189:	and    cl,BYTE PTR [eax+0x14]
  41918c:	out    0x41,eax
  41918e:	push   0xadae306a
  419193:	jbe    0x4191e3
  419195:	pop    ebp
  419196:	clc    
  419197:	jge    0x41915b
  419199:	test   edi,0x6a963b5
  41919f:	push   0xffffffe5
  4191a1:	loop   0x419124
  4191a3:	(bad)  [ebx+0x56595853]
  4191a9:	xchg   ecx,eax
  4191aa:	clc    
  4191ab:	inc    eax
  4191ac:	in     eax,0xe0
  4191ae:	retf   0x5db3
  4191b1:	add    al,0xed
  4191b3:	sar    DWORD PTR [ecx],0x16
  4191b6:	lea    eax,gs:[ecx+0x6c88d858]
  4191bd:	push   cs
  4191be:	lock rol edi,0xea
  4191c2:	loop   0x419172
  4191c4:	add    al,0x7f
  4191c6:	sub    BYTE PTR [edx],ah
  4191c8:	cwde   
  4191c9:	gs jecxz 0x419195
  4191cc:	shl    BYTE PTR [ebx],0x83
  4191cf:	push   edx
  4191d0:	nop
  4191d1:	hlt    
  4191d2:	xor    eax,DWORD PTR [ecx]
  4191d4:	dec    eax
  4191d5:	push   eax
  4191d6:	xor    DWORD PTR [ecx],esi
  4191d8:	fnstcw WORD PTR [edx+0x60c8885e]
  4191de:	fisttp WORD PTR [esi+0x4efb3a6]
  4191e4:	rcl    DWORD PTR [ecx-0x1e],cl
  4191e7:	sbb    ebx,ebx
  4191e9:	mov    WORD PTR [eax+0x6b],gs
  4191ec:	push   ebp
  4191ed:	aad    0x0
  4191ef:	mov    DWORD PTR [edx],0xb94a3d42
  4191f5:	test   eax,0x988d31df
  4191fa:	hlt    
  4191fb:	or     ah,ch
  4191fd:	nop
  4191fe:	stos   BYTE PTR es:[edi],al
  4191ff:	fild   QWORD PTR [edi-0x65]
  419202:	rcl    ecx,0x36
  419205:	pop    ebx
  419206:	imul   ecx,edi,0xffffffc9
  419209:	xor    DWORD PTR [eax+edi*1+0x57edb94a],esi
  419210:	pop    edx
  419211:	or     ch,BYTE PTR [edi-0x3cd6e0ac]
  419217:	push   ss
  419218:	pop    esp
  419219:	data16 loope 0x41927f
  41921c:	dec    esi
  41921d:	fsubr  st(5),st
  41921f:	scas   eax,DWORD PTR es:[edi]
  419220:	scas   eax,DWORD PTR es:[edi]
  419221:	inc    eax
  419222:	xchg   edi,eax
  419223:	mov    edx,0xc5816354
  419228:	dec    eax
  419229:	add    bh,al
  41922b:	mov    al,0xbe
  41922d:	ror    DWORD PTR ds:0x62391a20,1
  419233:	mov    eax,ecx
  419235:	xor    ebx,ecx
  419237:	js     0x41928b
  419239:	jmp    0x41922d
  41923b:	sub    ch,BYTE PTR [edi-0x2]
  41923e:	and    al,0x3d
  419240:	jbe    0x4191c9
  419242:	inc    edi
  419243:	gs loop 0x419275
  419246:	and    DWORD PTR [edx-0x66978b7e],esp
  41924c:	in     eax,0x8e
  41924e:	lock push eax
  419250:	dec    ebx
  419251:	data16 arpl WORD PTR [edi-0x56],bx
  419255:	lods   al,BYTE PTR ds:[esi]
  419256:	add    al,0x2c
  419258:	imul   edx,ebx,0xd8deed17
  41925e:	clc    
  41925f:	xchg   eax,eax
  419261:	inc    ebx
  419262:	clc    
  419263:	cli    
  419264:	shr    BYTE PTR [esi-0x20],0x2b
  419268:	add    eax,0x510d11e
  41926d:	pusha  
  41926e:	or     dl,BYTE PTR [ebx-0x337522b7]
  419274:	in     al,0xf2
  419276:	lock stos DWORD PTR es:[edi],eax
  419278:	(bad)  
  419279:	aas    
  41927a:	scas   eax,DWORD PTR es:[edi]
  41927b:	or     al,0x61
  41927d:	push   es
  41927e:	sbb    DWORD PTR [ecx+0xa0d5b88],ebx
  419284:	scas   al,BYTE PTR es:[edi]
  419285:	setne  BYTE PTR [edx+0x388d7904]
  41928c:	jae    0x419218
  41928e:	xchg   ebx,eax
  41928f:	xor    ecx,eax
  419291:	mov    DWORD PTR [ebp+0x8],ecx
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0x6d
  4192cc:	scas   al,BYTE PTR es:[edi]
  4192cd:	xchg   esi,eax
  4192ce:	mov    al,0x27
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx+0x5587ee1d],0xffffffe6
  4192dc:	or     ebp,ecx
  4192de:	lock retf 0x9ba1
  4192e2:	push   esi
  4192e3:	adc    BYTE PTR [esi+0x35a27535],cl
  4192e9:	fistp  WORD PTR [edi+0x19]
  4192ec:	cmp    bl,BYTE PTR [edi]
  4192ee:	or     al,BYTE PTR [edx+0x7]
  4192f1:	ror    BYTE PTR [edx-0x4024a6e1],cl
  4192f7:	dec    esi
  4192f8:	xchg   esi,eax
  4192f9:	scas   al,BYTE PTR es:[edi]
  4192fa:	mov    eax,0x8095a144
  4192ff:	ror    DWORD PTR [eax+0x35],cl
  419302:	test   al,0xd8
  419304:	stc    
  419305:	test   eax,0xc74a518a
  41930a:	cmp    esi,DWORD PTR [ebp+0x672f360c]
  419310:	pop    edi
  419311:	mov    al,ds:0x7e5a579c
  419316:	cwde   
  419317:	leave  
  419318:	push   esi
  419319:	inc    ebp
  41931a:	adc    al,0xa0
  41931c:	fmul   QWORD PTR [ebx]
  41931e:	cmc    
  41931f:	pop    esp
  419320:	adc    bl,cl
  419322:	jo     0x4192b4
  419324:	lock or DWORD PTR ds:0x4aeb1858,ebp
  41932b:	cli    
  41932c:	and    bh,al
  41932e:	or     BYTE PTR [ecx+0x74],al
  419331:	push   cs
  419332:	and    BYTE PTR [edx+0x1],ch
  419335:	pop    ecx
  419336:	dec    ebx
  419337:	sub    esi,DWORD PTR ds:0x49bc72d4
  41933d:	and    ebp,eax
  41933f:	push   ebp
  419340:	scas   al,BYTE PTR es:[edi]
  419341:	std    
  419342:	fld    DWORD PTR [eax-0xa]
  419345:	xor    BYTE PTR [edx+eax*8-0x4c],ah
  419349:	mov    ch,0x8e
  41934b:	jge    0x419345
  41934d:	mov    edi,0xec42385d
  419352:	inc    ecx
  419353:	sbb    eax,0x79594ee5
  419358:	mov    edx,es
  41935a:	movd   ebx,mm2
  41935d:	scas   eax,DWORD PTR es:[edi]
  41935e:	add    eax,0xac48019f
  419363:	repnz ds retf 0x24f6
  419368:	sub    DWORD PTR [esi-0x4f7f5680],0x2
  41936f:	retf   0x18d1
  419372:	add    BYTE PTR [ebx-0x39790ab4],0x74
  419379:	and    al,0x11
  41937b:	add    DWORD PTR [eax+0x14],ebx
  41937e:	jmp    0x840611ca
  419383:	out    dx,eax
  419384:	retf   
  419385:	pop    ebx
  419386:	pop    es
  419387:	dec    esi
  419388:	repz dec edx
  41938a:	xchg   DWORD PTR [edx+0x5def2f1f],ebp
  419390:	out    dx,al
  419391:	jne    0x419342
  419393:	add    eax,0x64eb5ad1
  419398:	loope  0x419335
  41939a:	(bad)  
  41939b:	push   ss
  41939c:	cs sub ebx,ebx
  41939f:	add    DWORD PTR [edx-0x66],esp
  4193a2:	and    BYTE PTR [ebp-0x537ea57e],0x8c
  4193a9:	push   esi
  4193aa:	lea    esp,[ebp+0x1eb5fd0e]
  4193b0:	cmp    dl,BYTE PTR [edx+0x70b21ab6]
  4193b6:	jno    0x419397
  4193b8:	mov    dl,bh
  4193ba:	sbb    bh,BYTE PTR fs:[edx+0x4d]
  4193be:	mov    eax,0x64d2addd
  4193c3:	jecxz  0x4193eb
  4193c5:	(bad)
  4193c8:	(bad)  
  4193c9:	mov    cl,0x96
  4193cb:	call   0x69bddd96
  4193d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d1:	stos   BYTE PTR es:[edi],al
  4193d2:	mov    al,es:0x7e5ea876
  4193d8:	push   es
  4193d9:	pop    edx
  4193da:	inc    ebp
  4193db:	addr16 jmp 0x419392
  4193de:	mov    ecx,0x6e60b737
  4193e3:	fisubr WORD PTR [edx]
  4193e5:	dec    eax
  4193e6:	fwait
  4193e7:	leave  
  4193e8:	mov    BYTE PTR [esi],ch
  4193ea:	and    al,0x21
  4193ec:	xor    al,0x48
  4193ee:	push   esi
  4193ef:	mov    ecx,DWORD PTR [eax]
  4193f1:	ja     0x419422
  4193f3:	mov    ch,0xb5
  4193f5:	fisub  DWORD PTR [eax+0x28]
  4193f8:	xchg   esi,eax
  4193f9:	cld    
  4193fa:	mov    edi,esp
  4193fc:	mov    ah,0xfe
  4193fe:	cmp    ebp,ecx
  419400:	jne    0x41945f
  419402:	jno    0x41945a
  419404:	lahf   
  419405:	iret   
  419406:	daa    
  419407:	cwde   
  419408:	sbb    BYTE PTR [ecx-0x71624294],ah
  41940e:	test   BYTE PTR [edx-0x45],ah
  419411:	pop    ebp
  419412:	jle    0x4193fb
  419414:	int    0xa7
  419416:	mov    dh,0x77
  419418:	pop    edi
  419419:	imul   BYTE PTR [ebx+0x66f2b173]
  41941f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419420:	loopne 0x4193ea
  419422:	sub    eax,0x2320da14
  419427:	pusha  
  419428:	in     al,0xe4
  41942a:	jmp    0x797f23c3
  41942f:	ins    BYTE PTR es:[edi],dx
  419430:	cwde   
  419431:	in     al,0x8b
  419433:	cs mov ebp,0xd61179da
  419439:	sbb    al,0x18
  41943b:	mov    cs,WORD PTR [ebx]
  41943d:	mov    dh,0x69
  41943f:	clc    
  419440:	(bad)  
  419441:	pop    ebx
  419442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419443:	popa   
  419444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419445:	(bad)  
  419446:	dec    esi
  419447:	sti    
  419448:	sbb    bh,BYTE PTR [edx-0x72]
  41944b:	mov    dl,0x3e
  41944d:	ret    0xb0cc
  419450:	aad    0xb3
  419452:	sbb    al,BYTE PTR [ebp-0x38]
  419455:	scas   eax,DWORD PTR es:[edi]
  419456:	ins    DWORD PTR es:[edi],dx
  419457:	stos   DWORD PTR es:[edi],eax
  419458:	pop    edx
  419459:	in     eax,dx
  41945a:	push   edi
  41945b:	rol    edx,0xca
  41945e:	xchg   esp,eax
  41945f:	cld    
  419460:	mov    ecx,0x9d8b038
  419465:	add    BYTE PTR [esi-0x6e],bh
  419468:	leave  
  419469:	ds jae 0x4194a6
  41946c:	jo     0x41945d
  41946e:	call   0x10dd:0xc6e9e26
  419475:	fst    QWORD PTR ds:0x5194e224
  41947b:	sub    ebx,DWORD PTR ds:0x26f2164a
  419481:	popa   
  419482:	xchg   ebp,eax
  419483:	xor    eax,0x251e8d76
  419488:	xor    al,0x8a
  41948a:	inc    ecx
  41948b:	aad    0xc1
  41948d:	inc    edx
  41948e:	daa    
  41948f:	xor    eax,0xfe57f014
  419494:	aaa    
  419495:	f2xm1  
  419497:	mov    ebp,0xd504e3ef
  41949c:	mov    al,0x6f
  41949e:	sub    al,0x1e
  4194a0:	push   0x3e
  4194a2:	mov    eax,0xe8403e7
  4194a7:	jno    0x419496
  4194a9:	out    dx,al
  4194aa:	ficom  WORD PTR [edi-0x3f28d7c9]
  4194b0:	scas   eax,DWORD PTR es:[edi]
  4194b1:	nop
  4194b2:	aas    
  4194b3:	sahf   
  4194b4:	sar    BYTE PTR [ebx-0x4e],0x12
  4194b8:	ror    bh,1
  4194ba:	mov    cl,0xf2
  4194bc:	jmp    0x4194dd
  4194be:	fidivr WORD PTR [edi+esi*8+0x70]
  4194c2:	push   eax
  4194c3:	gs ja  0x419448
  4194c6:	fwait
  4194c7:	les    ecx,FWORD PTR ds:0x36b9170d
  4194cd:	push   ss
  4194ce:	adc    esi,ebp
  4194d0:	pop    esp
  4194d1:	bound  eax,QWORD PTR [eax-0x6f]
  4194d4:	xor    esp,edx
  4194d6:	xor    DWORD PTR [esi],esi
  4194d8:	call   0x789b:0xda6fb951
  4194df:	sbb    BYTE PTR [edi+0x3e],bl
  4194e2:	mov    edx,0x284e17bb
  4194e7:	loop   0x4194eb
  4194e9:	jae    0x41947a
  4194eb:	sub    bh,bl
  4194ed:	pop    ebp
  4194ee:	out    0x7b,eax
  4194f0:	or     BYTE PTR ds:[edi-0x5426312f],ch
  4194f7:	or     BYTE PTR [ebp+0x7c3bf8f],cl
  4194fd:	inc    ecx
  4194fe:	add    ecx,DWORD PTR [ebp-0x6f63021e]
  419504:	jbe    0x419542
  419506:	mov    ch,0x93
  419508:	imul   ecx,DWORD PTR [edx],0x5e8de875
  41950e:	rol    edi,cl
  419510:	out    0x24,eax
  419512:	and    eax,0xd754ad23
  419517:	cmp    eax,0x7499556e
  41951c:	mov    eax,ds:0xd9d6d782
  419521:	add    ch,bl
  419523:	ret    
  419524:	popa   
  419525:	enter  0x693a,0x22
  419529:	fwait
  41952a:	jmp    0x41956e
  41952c:	or     esp,DWORD PTR [ebx-0x42c199a9]
  419532:	outs   dx,BYTE PTR ds:[esi]
  419533:	stos   BYTE PTR es:[edi],al
  419534:	cmc    
  419535:	jbe    0x419509
  419537:	data16 mov ds:0x25edd698,al
  41953d:	retf   0xbb19
  419540:	jge    0x419565
  419542:	adc    BYTE PTR [ebp+0x6],dh
  419545:	jp     0x419580
  419547:	dec    edx
  419548:	ror    eax,0x6e
  41954b:	test   eax,0xfbc2bea6
  419550:	cmc    
  419551:	xor    eax,0x7e9167f6
  419556:	sub    DWORD PTR [edx-0x6ded52b7],ebx
  41955c:	pop    ebp
  41955d:	ret    0xf5d6
  419560:	cmc    
  419561:	jle    0x419524
  419563:	test   DWORD PTR [esi],esp
  419565:	or     edi,ebp
  419567:	sti    
  419568:	pop    edi
  419569:	adc    ch,BYTE PTR [ebx+0x17df3d8a]
  41956f:	or     eax,ecx
  419571:	jecxz  0x419531
  419573:	(bad)  
  419574:	in     eax,0x31
  419576:	stos   BYTE PTR es:[edi],al
  419577:	nop
  419578:	add    esi,edx
  41957a:	add    eax,0x3f3636d5
  41957f:	gs call 0x2a2e5d5a
  419585:	or     eax,0x43d93739
  41958a:	lahf   
  41958b:	popa   
  41958c:	in     al,dx
  41958d:	push   edx
  41958e:	fmul   st,st(6)
  419590:	sbb    ebx,esp
  419592:	je     0x419551
  419594:	je     0x419574
  419596:	jle    0x419573
  419598:	hlt    
  419599:	jmp    0x8526:0xb6e18f83
  4195a0:	pop    esi
  4195a1:	stc    
  4195a2:	adc    eax,0x87575977
  4195a7:	xchg   esi,eax
  4195a8:	ret    0xeee2
  4195ab:	fiadd  DWORD PTR [edx]
  4195ad:	and    edx,0x9d396d5b
  4195b3:	ror    ebx,1
  4195b5:	fdiv   QWORD PTR [esi]
  4195b7:	mov    fs,WORD PTR [edx+0x36fab30d]
  4195bd:	xchg   esi,eax
  4195be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195bf:	jmp    0x134fc71e
  4195c4:	push   eax
  4195c5:	add    esi,DWORD PTR [ecx-0x46ad571]
  4195cb:	mov    bl,0x6e
  4195cd:	out    0x47,eax
  4195cf:	cmp    DWORD PTR [edi+0x36],esi
  4195d2:	pop    ds
  4195d3:	cmp    eax,0x80291b29
  4195d8:	add    DWORD PTR [edx],0x8f80f82f
  4195de:	out    0x3e,al
  4195e0:	and    eax,0x30bde579
  4195e5:	or     eax,DWORD PTR [edx-0x70]
  4195e8:	sub    al,0x8a
  4195ea:	ins    BYTE PTR es:[edi],dx
  4195eb:	pop    edx
  4195ec:	inc    eax
  4195ed:	(bad)  
  4195ee:	cs and ah,dh
  4195f1:	cmp    BYTE PTR [ecx+0x7d2ae95b],dh
  4195f7:	repz or DWORD PTR [ebx+0x6f],ecx
  4195fb:	cmp    DWORD PTR [ebx+0x2d],esi
  4195fe:	jmp    0x24ec:0x20fc88a9
  419605:	pop    esi
  419606:	sub    dh,BYTE PTR [ecx]
  419608:	int    0xb2
  41960a:	loopne 0x41965e
  41960c:	sub    DWORD PTR [edi],edx
  41960e:	cmp    al,0x3c
  419610:	call   0x81b939b
  419615:	mov    BYTE PTR [ebx-0x58421ae],bh
  41961b:	cmp    eax,0x83e0f41b
  419620:	inc    esi
  419621:	inc    esp
  419622:	jge    0x41969a
  419624:	arpl   WORD PTR [ebx+0x43],bp
  419627:	sbb    DWORD PTR [bx-0x13c5],0x914f81bf
  419630:	sbb    eax,0x3b0b0871
  419635:	or     al,BYTE PTR ds:0xe5182c63
  41963b:	repz jbe 0x41969b
  41963e:	hlt    
  41963f:	retf   
  419640:	call   ecx
  419642:	sahf   
  419643:	ins    DWORD PTR es:[edi],dx
  419644:	pop    esp
  419645:	imul   ebx,DWORD PTR [edx+0x59],0x3c576828
  41964c:	pop    es
  41964d:	iret   
  41964e:	outs   dx,BYTE PTR ds:[esi]
  41964f:	ja     0x41965a
  419651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419652:	sbb    eax,0xabf2faff
  419657:	jmp    0x41966d
  419659:	in     eax,dx
  41965a:	dec    edx
  41965b:	dec    eax
  41965c:	adc    dl,BYTE PTR [edi-0x5916ac28]
  419662:	(bad)  
  419663:	shl    ah,1
  419665:	xor    DWORD PTR [eax-0x3f],edi
  419668:	fistp  DWORD PTR [edx-0xe]
  41966b:	imul   BYTE PTR [ebp-0x662e75b]
  419671:	add    cl,ch
  419673:	push   ds
  419674:	test   bh,bl
  419676:	dec    eax
  419677:	stc    
  419678:	int3   
  419679:	pusha  
  41967a:	inc    ebx
  41967b:	test   al,0xcc
  41967d:	jae    0x419606
  41967f:	out    0xa3,eax
  419681:	inc    ebp
  419682:	aaa    
  419683:	add    DWORD PTR [eax-0x4c646a04],eax
  419689:	pop    edx
  41968a:	out    dx,al
  41968b:	hlt    
  41968c:	(bad)  
  41968e:	pop    esp
  41968f:	(bad)  
  419691:	xor    cl,BYTE PTR [eax]
  419693:	popf   
  419694:	sub    DWORD PTR [edx+0x45],eax
  419697:	xchg   edx,eax
  419698:	mov    ebp,DWORD PTR [ecx-0x6363aa22]
  41969e:	ds jecxz 0x4196db
  4196a1:	xor    al,0xe5
  4196a3:	cmp    ch,dh
  4196a5:	lods   al,BYTE PTR ds:[esi]
  4196a6:	and    al,BYTE PTR [edx+0x771c0e1a]
  4196ac:	in     al,0xf0
  4196ae:	out    dx,al
  4196af:	fwait
  4196b0:	jb     0x419673
  4196b2:	push   cs
  4196b3:	push   cs
  4196b4:	mov    esp,0xacd641d
  4196b9:	and    ebp,DWORD PTR [ecx+0x3e04bafe]
  4196bf:	sub    ebp,esi
  4196c1:	imul   DWORD PTR es:[edx]
  4196c4:	pop    esp
  4196c5:	imul   eax,esp,0x7014ee82
  4196cb:	daa    
  4196cc:	xor    ch,dl
  4196ce:	sbb    BYTE PTR [edx-0xe],al
  4196d1:	pusha  
  4196d2:	imul   edi,ecx,0xcee1004d
  4196d8:	into   
  4196d9:	dec    DWORD PTR [edx+0x4dd66e31]
  4196df:	push   esp
  4196e0:	(bad)  
  4196e1:	stos   DWORD PTR es:[edi],eax
  4196e2:	jle    0x419696
  4196e4:	sbb    BYTE PTR [eax+0x68599b13],ah
  4196ea:	dec    ecx
  4196eb:	mov    eax,DWORD PTR [eax-0x4d0eeea2]
  4196f1:	mov    ch,0x5
  4196f3:	xlat   BYTE PTR ds:[ebx]
  4196f4:	inc    ebx
  4196f5:	retf   
  4196f6:	in     al,dx
  4196f7:	mov    eax,ds:0x6efd21f6
  4196fc:	pop    edx
  4196fd:	inc    edi
  4196fe:	int    0x91
  419700:	jo     0x41976c
  419702:	push   cs
  419703:	shl    ebp,0xff
  419706:	mov    ah,0xc1
  419708:	pusha  
  419709:	inc    esi
  41970a:	and    ecx,DWORD PTR [edi]
  41970c:	mov    fs,ebx
  41970e:	add    al,0x49
  419710:	cmp    al,0x30
  419712:	mov    esp,0xc2b9825a
  419717:	fisub  WORD PTR [edx+0x4c]
  41971a:	loopne 0x41969f
  41971c:	imul   ecx,DWORD PTR [esi-0x7c],0x4d
  419720:	bound  eax,QWORD PTR [ebp+0x2f]
  419723:	int3   
  419724:	lods   eax,DWORD PTR ds:[esi]
  419725:	pop    esi
  419726:	fsubr  st,st(2)
  419728:	ds mov bh,0x3d
  41972b:	or     DWORD PTR [ebx],esp
  41972d:	aas    
  41972e:	mov    edi,0x74e001cb
  419733:	mov    BYTE PTR [edi+0x1416554a],ah
  419739:	push   esp
  41973a:	inc    edx
  41973b:	stos   BYTE PTR es:[edi],al
  41973c:	ror    BYTE PTR [eax+ecx*2],cl
  41973f:	dec    esp
  419740:	fs cmp al,0xd6
  419743:	jo     0x41971d
  419745:	jb     0x419774
  419747:	and    DWORD PTR [esi],eax
  419749:	sub    al,0xa8
  41974b:	lock xor DWORD PTR [edx],esp
  41974e:	or     bh,BYTE PTR [edi+0x52]
  419751:	test   DWORD PTR [edi],ebp
  419753:	fidivr DWORD PTR [ecx+0x8]
  419756:	std    
  419757:	add    DWORD PTR [eax+0x52],ebp
  41975a:	sub    BYTE PTR [esi],dl
  41975c:	mov    ah,0x5d
  41975e:	mov    eax,0xb4a5b02a
  419763:	add    BYTE PTR ss:[ebx],dh
  419766:	lods   eax,DWORD PTR ds:[esi]
  419767:	mov    BYTE PTR [esi+0x1d],bl
  41976a:	dec    edx
  41976b:	add    BYTE PTR es:[ebx+0x36],cl
  41976f:	cmp    BYTE PTR ss:[edi],bl
  419772:	jbe    0x4197a2
  419774:	sub    dl,bh
  419776:	dec    esp
  419777:	outs   dx,DWORD PTR ds:[esi]
  419778:	fldcw  WORD PTR [esi+0x27af873b]
  41977e:	fstp   QWORD PTR [eax]
  419780:	sub    dh,dh
  419782:	out    0xe0,al
  419784:	or     ecx,DWORD PTR [esi+0x390bbc73]
  41978a:	nop
  41978b:	xor    edi,esi
  41978d:	push   eax
  41978e:	mov    ebx,0x29ce7097
  419793:	dec    edi
  419794:	jnp    0x419725
  419796:	pusha  
  419797:	cli    
  419798:	push   0x22
  41979a:	iret   
  41979b:	(bad)  
  41979c:	dec    edx
  41979d:	mov    esi,0x3ae2fdb2
  4197a2:	jbe    0x419743
  4197a4:	shl    BYTE PTR [ebx-0x13],1
  4197a7:	(bad)  [ecx-0x224de930]
  4197ad:	fnstsw WORD PTR [ecx-0x316926c4]
  4197b3:	cwde   
  4197b4:	(bad)  
  4197b6:	sbb    eax,0x56b7b64a
  4197bb:	addr16 fld st(7)
  4197be:	jae    0x419778
  4197c0:	pop    ebp
  4197c1:	adc    al,0xc1
  4197c3:	repnz push 0x3d31bc45
  4197c9:	xor    eax,0x8bd860f4
  4197ce:	shl    BYTE PTR [edi-0x5f4f437b],cl
  4197d4:	inc    ebp
  4197d5:	adc    eax,0x1458632a
  4197da:	push   esp
  4197db:	in     eax,0x8a
  4197dd:	cmp    DWORD PTR [ecx+0x58],ebp
  4197e0:	mov    bl,0x15
  4197e2:	push   ebx
  4197e3:	xor    eax,0x5387d867
  4197e8:	xor    eax,0x48ea0b51
  4197ed:	les    eax,FWORD PTR [edx+0x56]
  4197f0:	push   0x7772f07c
  4197f5:	xchg   ebx,eax
  4197f6:	sbb    eax,0xebefcc40
  4197fb:	or     eax,0xbdf349f3
  419800:	adc    bh,0xde
  419803:	loope  0x419824
  419805:	jbe    0x419856
  419807:	mov    ebx,0xde56ad16
  41980c:	ret    0x3c7e
  41980f:	out    dx,al
  419810:	pop    edx
  419811:	or     ch,BYTE PTR [ebp+edi*8+0x6b]
  419815:	dec    ebx
  419816:	test   DWORD PTR [ebx-0x14],ecx
  419819:	sbb    ch,bh
  41981b:	mov    ch,0xba
  41981d:	adc    DWORD PTR [bp+di-0x682d],edx
  419822:	(bad)  
  419823:	mov    edx,0xd5de6dfe
  419828:	add    DWORD PTR [eax+0x1af68fc4],ecx
  41982e:	in     eax,dx
  41982f:	shr    BYTE PTR [ecx],1
  419831:	inc    esp
  419832:	or     bl,BYTE PTR [ebx]
  419834:	mov    cl,0x8c
  419836:	adc    BYTE PTR [bx],bh
  419839:	daa    
  41983a:	hlt    
  41983b:	fadd   QWORD PTR [esi+0x7a]
  41983e:	adc    DWORD PTR [edx],esp
  419840:	lds    esi,FWORD PTR [edi]
  419842:	and    al,0x5d
  419844:	sub    esp,DWORD PTR [eax-0x5aaca258]
  41984a:	shr    DWORD PTR [edi-0x2a],cl
  41984d:	inc    edx
  41984e:	int    0x94
  419850:	mov    dl,0x64
  419852:	cli    
  419853:	add    edi,DWORD PTR [ebp+eiz*2-0x54]
  419857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419858:	mov    dh,BYTE PTR [edi+0x5d9e4d63]
  41985e:	jnp    0x419843
  419860:	scas   eax,DWORD PTR es:[edi]
  419861:	xchg   ebx,eax
  419862:	and    eax,0x3022e5c0
  419867:	push   esp
  419868:	stos   BYTE PTR es:[edi],al
  419869:	ror    BYTE PTR [ecx],1
  41986b:	hlt    
  41986c:	mov    esp,0xe1509bad
  419871:	push   ecx
  419872:	xchg   dl,cl
  419874:	loope  0x419890
  419876:	jge    0x4198da
  419878:	push   esp
  419879:	aad    0xd5
  41987b:	or     al,0xa3
  41987d:	mov    ds:0x6ff4f609,al
  419882:	mov    dh,0x7f
  419884:	out    dx,al
  419885:	(bad)  
  419886:	enter  0xa091,0x60
  41988a:	or     al,0xa0
  41988c:	mov    dl,0xa
  41988e:	mov    esi,0x8469c552
  419893:	cwde   
  419894:	sbb    eax,0xdb3908e9
  419899:	sub    al,0xcf
  41989b:	xchg   esp,eax
  41989c:	push   edx
  41989d:	mov    esi,0xe54bd40b
  4198a2:	xor    eax,0xd4f3216f
  4198a7:	inc    eax
  4198a8:	punpcklwd mm0,mm2
  4198ab:	pop    edx
  4198ac:	push   esp
  4198ad:	mov    edx,0xab7f816
  4198b2:	push   esp
  4198b3:	sbb    al,BYTE PTR [edi]
  4198b5:	nop
  4198b6:	pop    es
  4198b7:	inc    esp
  4198b8:	mov    bl,0xea
  4198ba:	xor    DWORD PTR [eax+0x44b73085],edi
  4198c0:	mov    ?,WORD PTR [edx-0x3fef9674]
  4198c6:	cld    
  4198c7:	jno    0x4198ef
  4198c9:	xor    DWORD PTR [edi-0x73],eax
  4198cc:	bound  ecx,QWORD PTR [eax]
  4198ce:	rol    BYTE PTR [ebx+0x206a42e],0x35
  4198d5:	xor    eax,0x392448cb
  4198da:	leave  
  4198db:	inc    esi
  4198dc:	pop    edi
  4198dd:	sub    BYTE PTR [ecx],cl
  4198df:	xchg   ebp,eax
  4198e0:	stc    
  4198e1:	mov    WORD PTR [eax],cs
  4198e3:	push   esi
  4198e4:	pop    ebx
  4198e5:	mov    ax,0x1c99
  4198e9:	mov    dh,0x15
  4198eb:	jne    0x41988d
  4198ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ee:	dec    edx
  4198ef:	or     dl,BYTE PTR [esi+0x57abbf5]
  4198f5:	xchg   esp,eax
  4198f6:	push   esp
  4198f7:	je     0x419974
  4198f9:	push   cs
  4198fa:	xor    DWORD PTR [esi+0x44e75a69],esi
  419900:	nop
  419901:	adc    BYTE PTR [edi],dl
  419903:	sbb    DWORD PTR [ecx+0x71],ebp
  419906:	rcr    bl,0xf7
  419909:	in     eax,dx
  41990a:	jmp    0x8dd7a068
  41990f:	jl     0x41998b
  419911:	sti    
  419912:	loope  0x419971
  419914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419915:	gs nop
  419917:	stos   BYTE PTR es:[edi],al
  419918:	push   0xcac07538
  41991d:	dec    ebx
  41991e:	cmp    al,0xbf
  419920:	push   0xc705223
  419925:	xchg   BYTE PTR [edx-0x7ae710fa],bh
  41992b:	push   es
  41992c:	cmc    
  41992d:	dec    ebx
  41992e:	cld    
  41992f:	pop    edx
  419930:	push   0x19
  419932:	mov    bh,BYTE PTR [esi]
  419934:	or     al,0xd9
  419936:	xchg   edx,eax
  419937:	lahf   
  419938:	xchg   ebp,eax
  419939:	cmp    bl,BYTE PTR [edx]
  41993b:	and    esp,ebx
  41993d:	div    eax
  41993f:	and    al,0xf4
  419941:	lods   al,BYTE PTR ds:[esi]
  419942:	xor    eax,0xb886d0d9
  419947:	cs loope 0x41998c
  41994a:	push   esp
  41994b:	fiadd  WORD PTR [esi]
  41994d:	mov    eax,ds:0x6510b392
  419952:	sbb    DWORD PTR fs:0xd8216ef,ecx
  419959:	gs pusha 
  41995b:	cwde   
  41995c:	shl    esp,0xe6
  41995f:	adc    al,0x74
  419961:	xchg   edx,eax
  419962:	xchg   ebp,eax
  419963:	inc    ebx
  419964:	jmp    0xcb9e:0x2b570b99
  41996b:	ins    DWORD PTR es:[edi],dx
  41996c:	pop    edx
  41996d:	inc    ecx
  41996e:	fisubr WORD PTR [ecx-0x625d8186]
  419974:	pop    ds
  419975:	adc    BYTE PTR [edx+0x4a],ah
  419978:	std    
  419979:	mov    eax,ds:0x29298587
  41997e:	nop
  41997f:	fidiv  DWORD PTR [ebx]
  419981:	dec    esp
  419982:	jns    0x419968
  419984:	add    BYTE PTR [esi],bh
  419986:	pop    ds
  419987:	pop    edx
  419988:	(bad)  
  41998b:	xchg   edi,eax
  41998c:	imul   esi,DWORD PTR [eax],0x5f39c777
  419992:	mov    ecx,0x8bf653cc
  419997:	hlt    
  419998:	rcr    ch,1
  41999a:	cld    
  41999b:	cld    
  41999c:	cli    
  41999d:	pop    edx
  41999e:	aas    
  41999f:	lds    esi,FWORD PTR [ebp+0x4e]
  4199a2:	jnp    0x4199c5
  4199a4:	jne    0x419a23
  4199a6:	out    0x25,al
  4199a8:	pop    ds
  4199a9:	pop    ecx
  4199aa:	pop    esp
  4199ab:	add    eax,0x144c6858
  4199b0:	fwait
  4199b1:	mov    ecx,0x72bd55d8
  4199b6:	cmp    BYTE PTR [esi],ch
  4199b8:	or     ch,BYTE PTR [ebx-0x3c]
  4199bb:	test   edx,ecx
  4199bd:	les    esp,FWORD PTR [ecx-0x65]
  4199c0:	hlt    
  4199c1:	xchg   dl,bl
  4199c3:	and    ah,BYTE PTR [edx+ebp*8-0xd]
  4199c7:	mov    ah,0xcd
  4199c9:	and    eax,0x6a97dc1c
  4199ce:	jbe    0x4199bc
  4199d0:	push   ss
  4199d1:	add    BYTE PTR [eax],bh
  4199d3:	out    dx,al
  4199d4:	pusha  
  4199d5:	jb     0x4199df
  4199d7:	retf   
  4199d8:	pop    DWORD PTR [ebp+0x38cd29e4]
  4199de:	fst    QWORD PTR [ebx+0x34]
  4199e1:	les    esi,FWORD PTR [ecx-0x2]
  4199e4:	lock mov gs,WORD PTR [ebp+ebp*8-0x7a56794d]
  4199ec:	sbb    BYTE PTR [ebx+0x2df6b5d1],0x1f
  4199f3:	dec    ecx
  4199f4:	leave  
  4199f5:	xchg   ecx,eax
  4199f6:	shl    BYTE PTR [ebx+0xc],cl
  4199f9:	int3   
  4199fa:	push   esi
  4199fb:	and    BYTE PTR [edx],cl
  4199fd:	or     al,0x64
  4199ff:	mov    ?,WORD PTR [edi*1-0x2a564b0a]
  419a06:	and    bh,cl
  419a08:	sbb    DWORD PTR [edx-0x37cc9a18],ecx
  419a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a0f:	in     al,dx
  419a10:	les    ebp,FWORD PTR fs:[bx-0x16f2]
  419a16:	mov    ds:0xdd40c92d,al
  419a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a1d:	pop    ecx
  419a1e:	lea    edi,[ebp-0x78a286e8]
  419a24:	jno    0x419a32
  419a26:	jge    0x4199f9
  419a28:	cli    
  419a29:	daa    
  419a2a:	inc    edx
  419a2b:	jo     0x419a28
  419a2d:	cli    
  419a2e:	mov    al,ds:0x17bad958
  419a33:	inc    ecx
  419a34:	mov    ebx,0xec738898
  419a39:	xor    BYTE PTR [eax+0x24c72612],ah
  419a3f:	inc    ebx
  419a40:	ror    edi,1
  419a42:	loopne 0x4199cb
  419a44:	test   eax,0xd5cd56ce
  419a49:	into   
  419a4a:	lods   eax,DWORD PTR ds:[esi]
  419a4b:	mov    edi,0xc0c761d8
  419a50:	mov    ebp,0x27ca6917
  419a55:	fwait
  419a56:	dec    ebp
  419a57:	stc    
  419a58:	mov    edi,DWORD PTR ds:0xe8ba0944
  419a5e:	mov    ecx,0x5d09ee0f
  419a63:	arpl   WORD PTR [ecx],dx
  419a65:	xlat   BYTE PTR ds:[ebx]
  419a66:	mov    esp,0xedb8522d
  419a6b:	(bad)  
  419a6d:	js     0x419a38
  419a6f:	les    ebx,FWORD PTR [eax+0xb]
  419a72:	inc    ebp
  419a73:	ds mov cl,0x6d
  419a76:	dec    esp
  419a77:	scas   al,BYTE PTR es:[edi]
  419a78:	fisubr DWORD PTR [ecx+0x4a]
  419a7b:	sub    eax,0x505bce14
  419a80:	cwde   
  419a81:	or     al,0x2a
  419a83:	jmp    0xceeb:0x3ef83076
  419a8a:	jns    0x419a79
  419a8c:	fiadd  WORD PTR [ebx-0x6c]
  419a8f:	and    cl,BYTE PTR ds:[esi-0x20]
  419a93:	not    ebp
  419a95:	jnp    0x419a95
  419a97:	xor    ecx,DWORD PTR [ebp+0x9]
  419a9a:	js     0x419af4
  419a9c:	jns    0x419a98
  419a9e:	adc    BYTE PTR [esi],ah
  419aa0:	xor    DWORD PTR [ebx+eax*4+0x5d],esi
  419aa4:	and    al,0x93
  419aa6:	jl     0x419ae8
  419aa8:	lods   al,BYTE PTR ds:[esi]
  419aa9:	cwde   
  419aaa:	or     eax,DWORD PTR [esp+ebp*2+0x1149e807]
  419ab1:	out    dx,eax
  419ab2:	in     eax,dx
  419ab3:	inc    BYTE PTR [edx-0x2fb1eb2f]
  419ab9:	inc    esi
  419aba:	ss inc esp
  419abc:	loopne 0x419aea
  419abe:	push   edi
  419abf:	clc    
  419ac0:	std    
  419ac1:	push   esi
  419ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac3:	(bad)  
  419ac4:	repz fstp DWORD PTR [eax+0x7fe0ce08]
  419acb:	push   ss
  419acc:	pop    esp
  419acd:	sub    DWORD PTR [ebx],ecx
  419acf:	lea    edi,[ebp+ecx*8+0x6dc59346]
  419ad6:	xlat   BYTE PTR ds:[ebx]
  419ad7:	ins    BYTE PTR es:[edi],dx
  419ad8:	pop    ds
  419ad9:	jnp    0x419af6
  419adb:	sub    eax,0xcba5f5f
  419ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae1:	mov    al,0xbd
  419ae3:	adc    BYTE PTR ds:0x1a3c160b,bh
  419ae9:	enter  0xc5ba,0xab
  419aed:	sti    
  419aee:	pop    eax
  419aef:	mov    eax,ds:0x7ce2c28f
  419af4:	or     al,BYTE PTR [edx+ebx*8-0x2ab8e862]
  419afb:	ror    BYTE PTR [ecx-0x33],0x73
  419aff:	and    ebx,DWORD PTR [edi+0x23]
  419b02:	rcr    DWORD PTR [ecx],1
  419b04:	mov    esp,0xa4f67827
  419b09:	arpl   WORD PTR [ecx+0x24],dx
  419b0c:	rcr    DWORD PTR [edi-0x4a006204],1
  419b12:	dec    eax
  419b13:	mov    esi,0x6422a14e
  419b18:	push   0x3abfad52
  419b1d:	and    DWORD PTR [esi-0x1320d0d0],ecx
  419b23:	xchg   ebx,eax
  419b24:	js     0x419b71
  419b26:	mov    dl,0x36
  419b28:	imul   esi,DWORD PTR [esi+0x506b9dff],0xffffffbb
  419b2f:	lods   eax,DWORD PTR ds:[esi]
  419b30:	mov    esi,0xcb39ccde
  419b35:	(bad)  
  419b36:	push   DWORD PTR [esi-0x55]
  419b39:	(bad)  
  419b3a:	ficomp DWORD PTR [esp+ebp*1]
  419b3d:	jg     0x419ba5
  419b3f:	(bad)  
  419b40:	call   0x75c28ebc
  419b45:	jg     0x419ba3
  419b47:	jge    0x44b35cd7
  419b4d:	dec    ecx
  419b4e:	cmp    DWORD PTR [ebx+edi*8-0x56],esi
  419b52:	xchg   esi,eax
  419b53:	lods   eax,DWORD PTR ds:[esi]
  419b54:	retf   0xf693
  419b57:	mov    eax,edx
  419b59:	and    al,0xf9
  419b5b:	ins    BYTE PTR es:[edi],dx
  419b5c:	es clc 
  419b5e:	sub    DWORD PTR [edx+edi*1],edi
  419b61:	enter  0xfa60,0xf9
  419b65:	inc    esi
  419b66:	stos   DWORD PTR es:[edi],eax
  419b67:	fwait
  419b68:	push   ebp
  419b69:	out    0x20,al
  419b6b:	xchg   ecx,eax
  419b6c:	push   edx
  419b6d:	xchg   ebp,eax
  419b6e:	outs   dx,BYTE PTR ds:[esi]
  419b6f:	jb     0x419b5c
  419b71:	mov    ebx,0xd3204ad0
  419b76:	(bad)  
  419b77:	sbb    BYTE PTR [ebx-0x6d],al
  419b7a:	pop    ecx
  419b7b:	jns    0x419b33
  419b7d:	(bad)  
  419b7e:	or     DWORD PTR [esi],ebx
  419b80:	ret    0x788e
  419b83:	int3   
  419b84:	and    esi,DWORD PTR [edx]
  419b86:	daa    
  419b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b88:	add    ch,dh
  419b8a:	mov    ch,0x98
  419b8c:	jp     0x419b1c
  419b8e:	xor    DWORD PTR [ebp+edi*1+0x5213e4ce],esp
  419b95:	lds    edi,FWORD PTR [edi+0x77]
  419b98:	(bad)  
  419b99:	call   0xe7d1abbc
  419b9e:	jg     0x419bf3
  419ba0:	sub    al,0xee
  419ba2:	lods   al,BYTE PTR ds:[esi]
  419ba3:	shl    BYTE PTR [ecx+ebx*1],cl
  419ba6:	cs and bh,0xd1
  419baa:	and    al,0x16
  419bac:	fistp  WORD PTR [ebp-0x64c46f76]
  419bb2:	pop    esi
  419bb3:	pop    eax
  419bb4:	and    edi,DWORD PTR [edi]
  419bb6:	mov    bl,0x41
  419bb8:	std    
  419bb9:	inc    esi
  419bba:	sbb    al,BYTE PTR [ebx]
  419bbc:	jmp    0xa81d:0xd0f6ebc6
  419bc3:	push   es
  419bc4:	ins    BYTE PTR es:[edi],dx
  419bc5:	mov    dl,BYTE PTR [ecx+0x3a]
  419bc8:	xchg   esi,eax
  419bc9:	adc    DWORD PTR [esi],ebp
  419bcb:	jl     0x5bc824ef
  419bd1:	pop    esi
  419bd2:	dec    eax
  419bd3:	push   esp
  419bd4:	popa   
  419bd5:	dec    eax
  419bd6:	stos   DWORD PTR es:[edi],eax
  419bd7:	test   DWORD PTR [edx+0x52fb928c],0x3113d837
  419be1:	mov    bh,0xe4
  419be3:	outs   dx,DWORD PTR ds:[esi]
  419be4:	in     al,0x1
  419be6:	mov    ebx,0x4f1a1b48
  419beb:	neg    esi
  419bed:	jns    0x419b74
  419bef:	xchg   esi,eax
  419bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf1:	push   ebp
  419bf2:	sbb    edx,DWORD PTR [ebp-0x7]
  419bf5:	xor    eax,0xb3d2bc45
  419bfa:	inc    esp
  419bfb:	aam    0x74
  419bfd:	aas    
  419bfe:	cmp    eax,0xf856819
  419c03:	inc    eax
  419c04:	test   DWORD PTR [esp+ecx*2],0x445b908a
  419c0b:	test   DWORD PTR ds:0x6a22fba7,edi
  419c11:	xor    DWORD PTR [ebx+esi*4-0x67],edi
  419c15:	sahf   
  419c16:	pop    edx
  419c17:	adc    al,0x8b
  419c19:	sbb    DWORD PTR [esp+edx*1+0x6e],eax
  419c1d:	lods   eax,DWORD PTR ds:[esi]
  419c1e:	mov    ebp,gs
  419c20:	add    bh,BYTE PTR [ecx-0x2b768c87]
  419c26:	pop    edx
  419c27:	scas   al,BYTE PTR es:[edi]
  419c28:	sahf   
  419c29:	pop    ebx
  419c2a:	xor    ch,ah
  419c2c:	les    edi,FWORD PTR [esi-0x53]
  419c2f:	push   ds
  419c30:	mov    al,0xad
  419c32:	dec    esi
  419c33:	push   esp
  419c34:	leave  
  419c35:	inc    edx
  419c36:	int    0x39
  419c38:	pop    ecx
  419c39:	mov    edi,0x92602887
  419c3e:	imul   al
  419c40:	repz ss es mov ebp,0x8766b88f
  419c48:	xor    eax,0xc6b6ce8e
  419c4d:	push   ecx
  419c4e:	pop    edi
  419c4f:	sbb    DWORD PTR [ebx-0x46dab101],edi
  419c55:	xchg   ebp,eax
  419c56:	les    ebx,FWORD PTR [edi]
  419c58:	fcom   QWORD PTR [ebx-0x4a]
  419c5b:	cli    
  419c5c:	loopne 0x419c1b
  419c5e:	mov    bl,BYTE PTR [ecx-0xf6b8bcb]
  419c64:	je     0x419c2d
  419c66:	or     DWORD PTR [ebp-0x50],edx
  419c69:	add    ah,al
  419c6b:	mov    dh,0xf
  419c6d:	aad    0x5c
  419c6f:	std    
  419c70:	pop    es
  419c71:	stos   DWORD PTR es:[edi],eax
  419c72:	jne    0x419c4d
  419c74:	adc    DWORD PTR [esi],ebx
  419c76:	or     eax,0x6f343125
  419c7b:	pop    ds
  419c7c:	pop    edi
  419c7d:	cdq    
  419c7e:	pushf  
  419c7f:	and    DWORD PTR [edi],esi
  419c81:	loope  0x419c77
  419c83:	xor    BYTE PTR [edx+0x20],ah
  419c86:	adc    dl,ch
  419c88:	pop    ebx
  419c89:	sub    al,0x0
  419c8b:	nop
  419c8c:	pop    es
  419c8d:	fstp   QWORD PTR [ebx]
  419c8f:	xchg   esi,eax
  419c90:	lock lods al,BYTE PTR ds:[esi]
  419c92:	loope  0x419c7a
  419c94:	pop    eax
  419c95:	loop   0x419c9c
  419c97:	in     eax,0xb9
  419c99:	pop    ecx
  419c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c9b:	xor    al,0x1d
  419c9d:	and    eax,0xeeb8f2d0
  419ca2:	ja     0x419c58
  419ca4:	in     eax,0x31
  419ca6:	loope  0x419c84
  419ca8:	popa   
  419ca9:	jl     0x419ca8
  419cab:	and    DWORD PTR ds:0x9b465bee,ecx
  419cb1:	jecxz  0x419d19
  419cb3:	or     BYTE PTR [ebx-0x3d],bh
  419cb6:	fsub   QWORD PTR [edi+0x4add31ef]
  419cbc:	out    dx,al
  419cbd:	push   0x57fcbe13
  419cc2:	mov    esi,0xaf878a6f
  419cc7:	pop    ecx
  419cc8:	stc    
  419cc9:	jns    0x419ce1
  419ccb:	dec    esp
  419ccc:	pop    ebx
  419ccd:	test   BYTE PTR [eax+0x32f99475],bh
  419cd3:	gs dec esi
  419cd5:	cmc    
  419cd6:	mov    ds:0x6250584f,eax
  419cdb:	fnstenv [eax+0x5905f385]
  419ce1:	pop    eax
  419ce2:	add    al,0x8
  419ce4:	ror    DWORD PTR [eax+0x4d],0xb2
  419ce8:	xchg   esp,eax
  419ce9:	jns    0x419c7f
  419ceb:	and    cl,BYTE PTR [ebp-0x3a]
  419cee:	mov    dl,bh
  419cf0:	stc    
  419cf1:	jp     0x419c9b
  419cf3:	jmp    0xd230:0x7b1abf63
  419cfa:	adc    al,ah
  419cfc:	pop    edx
  419cfd:	xor    DWORD PTR [ebp+0x2a6618b8],esi
  419d03:	dec    ebx
  419d04:	in     eax,dx
  419d05:	ins    BYTE PTR es:[edi],dx
  419d06:	sbb    DWORD PTR [edx+0x4a4608de],edx
  419d0c:	mov    dh,0xf3
  419d0e:	mov    bh,0x45
  419d10:	addr16 cli 
  419d12:	and    DWORD PTR [esi+0x28e851cc],ebp
  419d18:	jbe    0x419cb0
  419d1a:	in     eax,dx
  419d1b:	std    
  419d1c:	adc    eax,0xe8a43398
  419d21:	jge    0x419cf6
  419d23:	push   cs
  419d24:	push   ecx
  419d25:	stc    
  419d26:	(bad)  
  419d27:	int    0x27
  419d29:	sub    dh,BYTE PTR [ebx]
  419d2b:	ret    
  419d2c:	mov    cl,0x16
  419d2e:	js     0x419ce6
  419d30:	aas    
  419d31:	shr    ah,cl
  419d33:	push   ebp
  419d34:	sbb    BYTE PTR [esi],cl
  419d36:	(bad)  
  419d37:	adc    eax,0x1779eae2
  419d3c:	jbe    0x419d3d
  419d3e:	ficomp WORD PTR [ebp+0x7bfc5431]
  419d44:	mov    ds:0xed4b5135,al
  419d49:	(bad)  
  419d4a:	mov    edx,0xf7acd6d2
  419d4f:	sub    esp,ebp
  419d51:	jno    0x419d10
  419d53:	xchg   ecx,eax
  419d54:	or     esp,DWORD PTR [eax+0x13]
  419d57:	mov    al,0xef
  419d59:	adc    eax,0x4378fc39
  419d5e:	dec    ebx
  419d5f:	mov    dl,0x73
  419d61:	push   ebx
  419d62:	ret    
  419d63:	pop    ebp
  419d64:	test   dh,cl
  419d66:	mov    al,ds:0xec60f880
  419d6b:	stos   BYTE PTR es:[edi],al
  419d6c:	in     al,0x22
  419d6e:	adc    esp,ebx
  419d70:	ins    BYTE PTR es:[edi],dx
  419d71:	xchg   DWORD PTR ds:[eax+0x39f1f60b],eax
  419d78:	push   ebp
  419d79:	imul   ebx,DWORD PTR [esi],0x5a0da696
  419d7f:	pushf  
  419d80:	ficomp WORD PTR [esi-0x19]
  419d84:	test   eax,0x6b4af85b
  419d89:	sub    bl,bh
  419d8b:	mov    esp,0xb51577e0
  419d90:	xchg   DWORD PTR [ebx-0x35a2b204],edi
  419d96:	xchg   ecx,eax
  419d97:	xor    DWORD PTR [ebx-0x80],esi
  419d9a:	sbb    BYTE PTR [eax+0xf],0x7e
  419d9e:	xchg   DWORD PTR [eax+eax*4+0x571b8a50],ebx
  419da5:	add    dl,BYTE PTR [ebx]
  419da7:	xor    DWORD PTR [eax+0x46],edx
  419daa:	arpl   ax,dx
  419dac:	(bad)
  419daf:	xchg   esi,eax
  419db0:	push   ebp
  419db1:	sub    al,0x90
  419db3:	repnz push esp
  419db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db6:	dec    ebx
  419db7:	mov    ?,esi
  419db9:	mov    ds:0x3f887f66,al
  419dbe:	or     DWORD PTR [ebx-0x30],0xfffffff6
  419dc2:	push   ebx
  419dc3:	push   edi
  419dc4:	retf   0xf7e2
  419dc7:	sahf   
  419dc8:	dec    ebx
  419dc9:	adc    al,0xb1
  419dcb:	cmp    BYTE PTR [ebp+eiz*2+0x1e],dl
  419dcf:	leave  
  419dd0:	jmp    0xbf66:0x55da364e
  419dd7:	sbb    DWORD PTR [ebp+0x23f57f31],eax
  419ddd:	lock sbb al,0xc5
  419de0:	sub    ebx,DWORD PTR [edx-0x41]
  419de3:	adc    al,0x61
  419de5:	(bad)  
  419de6:	jnp    0x419e1d
  419de8:	ja     0x419de6
  419dea:	sar    esp,cl
  419dec:	jno    0x419e3a
  419dee:	inc    ecx
  419def:	push   ds
  419df0:	pop    esp
  419df1:	daa    
  419df2:	dec    esp
  419df3:	cmp    esp,ebp
  419df5:	dec    esp
  419df6:	std    
  419df7:	fwait
  419df8:	cmc    
  419df9:	push   edx
  419dfa:	repnz (bad) 
  419dfc:	into   
  419dfd:	and    dl,al
  419dff:	pop    esi
  419e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e01:	outs   dx,DWORD PTR ds:[esi]
  419e02:	jno    0x419d94
  419e04:	popa   
  419e05:	jo     0x419dcf
  419e07:	inc    edx
  419e08:	push   esp
  419e09:	sahf   
  419e0a:	xchg   ecx,eax
  419e0b:	and    DWORD PTR [ecx+edi*2],ebp
  419e0e:	dec    ebx
  419e0f:	xchg   ecx,eax
  419e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e11:	mov    ah,0xdd
  419e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e14:	out    dx,al
  419e15:	push   es
  419e16:	call   0x7adb:0x19037e80
  419e1d:	gs dec esi
  419e1f:	jbe    0x419e2b
  419e21:	xchg   DWORD PTR [edi+0x77],ebp
  419e24:	fs inc ebp
  419e26:	pop    ds
  419e27:	fdivr  st,st(3)
  419e29:	and    ch,cl
  419e2b:	sbb    BYTE PTR [edi+0x9],cl
  419e2e:	dec    esi
  419e2f:	loope  0x419e87
  419e31:	imul   ebp,DWORD PTR [ebx+0x7cf0341e],0x16
  419e38:	sub    eax,0x7d44f1b
  419e3d:	xchg   ebp,eax
  419e3e:	lea    edx,[ecx]
  419e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e41:	add    DWORD PTR [ecx],0x8ff16a67
  419e47:	jecxz  0x419e75
  419e49:	and    DWORD PTR [ebp+0x57198ca3],ecx
  419e4f:	add    ecx,DWORD PTR [edi-0x71]
  419e52:	xchg   esp,eax
  419e53:	and    dh,BYTE PTR [eax-0x609100b5]
  419e59:	dec    ecx
  419e5a:	idiv   DWORD PTR [esi-0xdf5f581]
  419e60:	jl     0x419e7e
  419e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e63:	add    al,BYTE PTR [edx]
  419e65:	aas    
  419e66:	add    al,0x43
  419e68:	push   es
  419e69:	pop    es
  419e6a:	push   esi
  419e6b:	js     0x419e95
  419e6d:	mov    ebx,0xa7e094b8
  419e72:	xor    al,0xd3
  419e74:	jp     0x419e8a
  419e76:	(bad)  
  419e77:	pushf  
  419e78:	in     al,0x9a
  419e7a:	add    al,BYTE PTR [esi+0xc63e101]
  419e80:	xchg   esi,eax
  419e81:	loop   0x419e1f
  419e83:	loopne 0x419ed7
  419e85:	outs   dx,DWORD PTR fs:[esi]
  419e87:	test   BYTE PTR [eax+0x3a],0xc3
  419e8b:	cdq    
  419e8c:	pop    esi
  419e8d:	sub    al,0xd0
  419e8f:	data16 cmp BYTE PTR [edi],dl
  419e92:	jecxz  0x419eb4
  419e94:	les    edi,FWORD PTR [eax]
  419e96:	and    ecx,DWORD PTR [ebx+0x59]
  419e99:	mov    ebx,0xa1e199fd
  419e9e:	test   eax,0x68e2fcf3
  419ea3:	btc    DWORD PTR [edx-0x4a47e0f],ebp
  419eaa:	xor    al,0x13
  419eac:	inc    ebx
  419ead:	stos   BYTE PTR es:[edi],al
  419eae:	pop    ebp
  419eaf:	mov    BYTE PTR [esp+eax*1],al
  419eb2:	xor    eax,0xc5ea7ab4
  419eb7:	xor    edx,edx
  419eb9:	push   ecx
  419eba:	adc    ch,BYTE PTR [edi+0x203c8af8]
  419ec0:	das    
  419ec1:	sub    al,0xa1
  419ec3:	loop   0x419ee0
  419ec5:	xor    eax,0xc61d9150
  419eca:	xor    ebx,0x7596617c
  419ed0:	sbb    DWORD PTR [esi],esp
  419ed2:	ins    BYTE PTR es:[edi],dx
  419ed3:	mul    DWORD PTR [ecx]
  419ed5:	push   edx
  419ed6:	or     al,0xd0
  419ed8:	fbstp  TBYTE PTR [ebp+0x239cbe49]
  419ede:	dec    ebx
  419edf:	xor    DWORD PTR [ebx+0x4fdfdab4],edi
  419ee5:	fwait
  419ee6:	rcr    BYTE PTR [edx-0x221fd9f6],cl
  419eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eed:	xor    al,0xb2
  419eef:	pusha  
  419ef0:	mov    edi,0x6cc37774
  419ef5:	push   ecx
  419ef6:	add    bh,BYTE PTR [ebx]
  419ef8:	mov    ds:0x8a7ba1f4,eax
  419efd:	mov    cl,0xba
  419eff:	or     edi,DWORD PTR [ebp-0x68295c2e]
  419f05:	xchg   edi,eax
  419f06:	jge    0x419ecb
  419f08:	lahf   
  419f09:	ja     0x419ee4
  419f0b:	test   esi,ebx
  419f0d:	push   ecx
  419f0e:	popf   
  419f0f:	push   ebx
  419f10:	add    eax,0xc07be2f5
  419f15:	jle    0x419f66
  419f17:	fbld   TBYTE PTR [edx-0x625d619c]
  419f1d:	push   eax
  419f1e:	aad    0x5e
  419f20:	xor    DWORD PTR [esi+0x6fcd39fa],edx
  419f26:	bound  ebx,QWORD PTR [eax+0x4f92b32f]
  419f2c:	aam    0xe1
  419f2e:	cmp    eax,DWORD PTR [ecx+0x10]
  419f31:	push   ebx
  419f32:	sub    BYTE PTR [ebp-0x8],0x97
  419f36:	cmp    esi,ebx
  419f38:	pop    ebp
  419f39:	(bad)  
  419f3a:	lods   al,BYTE PTR ds:[esi]
  419f3b:	pop    ecx
  419f3c:	inc    esi
  419f3d:	pop    esp
  419f3e:	mov    ebp,0x25fb0b97
  419f43:	mov    al,ds:0xab53656
  419f48:	xchg   ecx,eax
  419f49:	mov    esp,0x4665615e
  419f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f4f:	mov    ch,bh
  419f51:	and    al,0x4b
  419f53:	je     0x419fbe
  419f55:	popf   
  419f56:	add    esp,DWORD PTR [ebx-0xce45fea]
  419f5c:	add    BYTE PTR [ecx+0x60194d39],0x53
  419f63:	in     eax,0x41
  419f65:	xchg   edx,eax
  419f66:	jae    0x419f57
  419f68:	add    BYTE PTR [ecx+ecx*8],dh
  419f6b:	mov    dh,0x66
  419f6d:	shl    edx,0x51
  419f70:	adc    eax,0xdbfbdca1
  419f75:	inc    ebp
  419f76:	fidiv  WORD PTR [esi]
  419f78:	mov    BYTE PTR [edi+0x43],al
  419f7b:	pop    edx
  419f7c:	pop    ebx
  419f7d:	out    0x29,eax
  419f7f:	cmp    ah,ch
  419f81:	or     DWORD PTR fs:[esi+0x7fc19fd3],ebx
  419f88:	mov    ?,WORD PTR [ebp+edi*8-0xa]
  419f8c:	add    ch,BYTE PTR [ebx+0x73ad3304]
  419f92:	imul   ebp,DWORD PTR [ebp+0x4],0x6c73c54f
  419f99:	mov    edx,0x4542766a
  419f9e:	push   ss
  419f9f:	push   0x71dc10dc
  419fa4:	push   edx
  419fa5:	pop    ebx
  419fa6:	shl    cl,0x52
  419fa9:	cmp    al,0x99
  419fab:	fdivr  st(3),st
  419fad:	arpl   si,sp
  419faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb0:	inc    ecx
  419fb1:	rcr    BYTE PTR ss:[edi+0x1152451d],1
  419fb8:	std    
  419fb9:	jne    0x419f8f
  419fbb:	mov    al,0x3d
  419fbd:	int    0xa8
  419fbf:	lahf   
  419fc0:	pop    ss
  419fc1:	adc    eax,0xb080a80d
  419fc6:	aam    0x56
  419fc8:	mov    ch,0xe1
  419fca:	cld    
  419fcb:	test   dl,ch
  419fcd:	sbb    ah,ah
  419fcf:	mov    bh,dl
  419fd1:	or     eax,0x230b8ecb
  419fd6:	fcom   DWORD PTR [edi+0x202cc4b1]
  419fdc:	jecxz  0x41a05c
  419fde:	jne    0x419fe0
  419fe0:	xor    BYTE PTR [edi],ah
  419fe2:	sub    al,0x53
  419fe4:	mov    edi,0xb81522b1
  419fe9:	add    bl,dh
  419feb:	pop    edi
  419fec:	push   cs
  419fed:	aam    0x64
  419fef:	dec    eax
  419ff0:	xchg   ecx,eax
  419ff1:	mov    ebx,0x7b4a0404
  419ff6:	push   ecx
  419ff7:	inc    ebp
  419ff8:	les    ebx,FWORD PTR [eax-0x117e7ae8]
  419ffe:	ins    BYTE PTR es:[edi],dx
  419fff:	popf   
  41a000:	retf   0x8734
  41a003:	pop    es
  41a004:	cmp    edx,edi
  41a006:	repz int 0x37
  41a009:	pop    esi
  41a00a:	test   BYTE PTR [esi+0x6],ah
  41a00d:	inc    esp
  41a00e:	cmp    ah,bl
  41a010:	sbb    al,0xb7
  41a012:	cmc    
  41a013:	mov    ch,0xd0
  41a015:	cwde   
  41a016:	xchg   ebp,eax
  41a017:	(bad)
  41a01b:	and    al,BYTE PTR [edx]
  41a01d:	mov    DWORD PTR [esi-0x73],0xfa83b465
  41a024:	push   cs
  41a025:	xchg   esi,eax
  41a026:	jecxz  0x41a026
  41a028:	fwait
  41a029:	mov    cl,0x2c
  41a02b:	xchg   edx,eax
  41a02c:	sbb    esi,DWORD PTR [ebx-0x49399447]
  41a032:	nop
  41a033:	aas    
  41a034:	xor    ebx,DWORD PTR [ebx+ecx*1]
  41a037:	imul   esp,ebp,0x2c
  41a03a:	(bad)  
  41a03b:	aad    0x8a
  41a03d:	into   
  41a03e:	jg     0x41a0b1
  41a040:	popf   
  41a041:	fisttp WORD PTR ds:0xb04b18d3
  41a047:	and    al,ah
  41a049:	push   DWORD PTR [ecx]
  41a04b:	sub    BYTE PTR [esi+0x0],ch
  41a04e:	fs dec ebx
  41a050:	inc    edx
  41a051:	and    al,0x14
  41a053:	rol    bl,1
  41a055:	jp     0x419fd8
  41a057:	mov    bh,0xcc
  41a059:	mov    bh,0xe2
  41a05b:	ss push ecx
  41a05d:	popf   
  41a05e:	mov    BYTE PTR [edx+ecx*2],ah
  41a061:	inc    eax
  41a062:	daa    
  41a063:	push   es
  41a064:	xchg   BYTE PTR [edx+0x3b],dh
  41a067:	pop    eax
  41a068:	adc    al,0xd5
  41a06a:	or     ah,bh
  41a06c:	js     0x41a019
  41a06e:	sub    al,0xb9
  41a070:	sub    DWORD PTR [ebx+0x60],esp
  41a073:	xor    DWORD PTR [ecx],ecx
  41a075:	dec    esi
  41a076:	xchg   DWORD PTR [ecx+0x2a],eax
  41a079:	inc    edx
  41a07a:	add    bl,BYTE PTR [eax]
  41a07c:	xor    bl,BYTE PTR [eax+0x11732f06]
  41a082:	inc    ebp
  41a083:	mov    WORD PTR [ecx-0x6743d264],ds
  41a089:	(bad)  
  41a08a:	fld    DWORD PTR [esi]
  41a08c:	mov    ecx,0xfd5f700d
  41a091:	pavgb  mm3,mm6
  41a094:	mov    ebp,0x9b45b355
  41a099:	sub    BYTE PTR [esi+0x6],dh
  41a09c:	pushfw 
  41a09e:	sub    DWORD PTR [eax],ebp
  41a0a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a1:	or     ch,BYTE PTR [eax+edx*4]
  41a0a4:	push   0x98c26f6d
  41a0a9:	loop   0x41a0d2
  41a0ab:	sub    al,0x58
  41a0ad:	push   esi
  41a0ae:	stos   DWORD PTR es:[edi],eax
  41a0af:	push   esp
  41a0b0:	(bad)  
  41a0b1:	jmp    0x1b8b2607
  41a0b6:	mov    DWORD PTR [edx+edi*8+0x76],eax
  41a0ba:	jnp    0x41a06c
  41a0bc:	stc    
  41a0bd:	add    al,0xef
  41a0bf:	add    eax,ecx
  41a0c1:	xchg   edi,eax
  41a0c2:	clc    
  41a0c3:	inc    eax
  41a0c4:	add    dh,BYTE PTR ds:0xeb08b5d
  41a0ca:	jo     0x41a050
  41a0cc:	adc    ebx,esi
  41a0ce:	iret   
  41a0cf:	loop   0x41a091
  41a0d1:	push   eax
  41a0d2:	mov    WORD PTR [esi],cs
  41a0d4:	xchg   BYTE PTR [esi+edi*8-0x7c546d65],ch
  41a0db:	add    edx,esi
  41a0dd:	rcl    DWORD PTR [ecx],1
  41a0df:	mov    bh,0x5f
  41a0e1:	push   edx
  41a0e2:	mov    esp,0x4ff6cbce
  41a0e7:	and    BYTE PTR [esi+0x56],ch
  41a0ea:	or     eax,0xeafcfff6
  41a0ef:	inc    edi
  41a0f0:	outs   dx,DWORD PTR ds:[esi]
  41a0f1:	retf   0x24c0
  41a0f4:	add    dl,BYTE PTR [edx]
  41a0f6:	or     al,0x7f
  41a0f8:	pop    ecx
  41a0f9:	push   es
  41a0fa:	rol    DWORD PTR [ebx+0x17],cl
  41a0fd:	or     BYTE PTR [ebx+0x10aa17c9],al
  41a103:	test   bh,cl
  41a105:	retf   
  41a106:	fdiv   QWORD PTR [edx]
  41a108:	inc    edx
  41a109:	inc    ecx
  41a10a:	mov    edi,?
  41a10c:	mov    DWORD PTR [eax-0x24],esi
  41a10f:	xchg   edx,eax
  41a110:	push   ecx
  41a111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a112:	mov    edi,0xcc585425
  41a117:	push   edx
  41a118:	jae    0x41a112
  41a11a:	(bad)  
  41a11b:	jp     0x41a109
  41a11d:	and    al,0x7e
  41a11f:	xlat   BYTE PTR fs:[ebx]
  41a121:	push   esi
  41a122:	inc    ebp
  41a123:	hlt    
  41a124:	jae    0x41a0fb
  41a126:	arpl   WORD PTR ds:[ebx-0x456d195c],ax
  41a12d:	fs pop eax
  41a12f:	ins    DWORD PTR es:[edi],dx
  41a130:	mov    ch,0xc3
  41a132:	mov    ch,al
  41a134:	cmp    DWORD PTR [ecx],0x76851e95
  41a13a:	cmp    bl,BYTE PTR [eax+edx*4]
  41a13d:	xor    eax,0x80edb138
  41a142:	int3   
  41a143:	in     al,0x89
  41a145:	cmp    al,0xd5
  41a147:	data16 cmp bh,bh
  41a14a:	pop    ss
  41a14b:	mov    ebx,0x2575821e
  41a150:	sub    BYTE PTR [edx-0x61dcfc8],dl
  41a156:	cmp    BYTE PTR [edi+ebp*2+0x71a7eb79],bl
  41a15d:	arpl   WORD PTR [edi+0x6b],cx
  41a160:	adc    al,0xc5
  41a162:	out    dx,al
  41a163:	sbb    BYTE PTR [ecx-0x47],bl
  41a166:	call   0xf9f74757
  41a16b:	fs cld 
  41a16d:	into   
  41a16e:	out    dx,al
  41a16f:	add    dh,BYTE PTR ds:0x1afaf7df
  41a175:	ds ss out 0xb,al
  41a179:	ss xchg edi,eax
  41a17b:	add    bl,dh
  41a17d:	mov    ebp,0x26a863ff
  41a182:	sbb    al,dh
  41a184:	enter  0x4ca5,0x43
  41a188:	call   0xf8d8:0x6a6951ce
  41a18f:	and    eax,0x91f57e34
  41a194:	(bad)  
  41a195:	mov    dh,cl
  41a197:	out    0xf2,eax
  41a199:	or     DWORD PTR [ebp-0x7201f42e],esi
  41a19f:	jecxz  0x41a1c5
  41a1a1:	cli    
  41a1a2:	jb     0x41a1a5
  41a1a4:	inc    esp
  41a1a5:	retf   
  41a1a6:	inc    ebx
  41a1a7:	lods   eax,DWORD PTR ds:[esi]
  41a1a8:	jmp    0x41a1d0
  41a1aa:	xchg   edx,eax
  41a1ab:	(bad)  
  41a1ac:	repz pop esi
  41a1ae:	mov    DWORD PTR [ebx+ebx*4+0x5620057f],ebp
  41a1b5:	outs   dx,BYTE PTR ds:[esi]
  41a1b6:	rcl    BYTE PTR [edx],0x32
  41a1b9:	sbb    ch,BYTE PTR [esi+0x75]
  41a1bc:	xchg   esi,eax
  41a1bd:	jp     0x41a1cf
  41a1bf:	mov    bl,0x94
  41a1c1:	jle    0x41a1c9
  41a1c3:	push   esp
  41a1c4:	fstp   DWORD PTR [ebx]
  41a1c6:	push   ebp
  41a1c7:	(bad)  ds:[ecx+esi*4]
  41a1cb:	je     0x41a19b
  41a1cd:	inc    edi
  41a1ce:	imul   BYTE PTR [eax]
  41a1d0:	lds    esp,FWORD PTR [ecx-0x4]
  41a1d3:	pop    esi
  41a1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1d5:	xchg   esp,eax
  41a1d6:	or     dl,BYTE PTR [esi-0x4afd1c9c]
  41a1dc:	mov    ecx,0xb1dbb2b2
  41a1e1:	dec    ebx
  41a1e2:	xchg   BYTE PTR [esi-0x64],al
  41a1e5:	jo     0x41a1c7
  41a1e7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a1e9:	rol    DWORD PTR ds:0xabaec9bd,1
  41a1ef:	scas   al,BYTE PTR es:[edi]
  41a1f0:	or     eax,0x72ad39a
  41a1f5:	scas   al,BYTE PTR es:[edi]
  41a1f6:	xor    eax,0x2ac949e8
  41a1fb:	(bad)  
  41a1fc:	jmp    0x41a197
  41a1fe:	aam    0xc1
  41a200:	mov    ebp,fs
  41a202:	hlt    
  41a203:	sbb    BYTE PTR [ecx-0x98bace0],al
  41a209:	lahf   
  41a20a:	xlat   BYTE PTR ds:[ebx]
  41a20b:	pop    esp
  41a20c:	and    eax,DWORD PTR [ebx+0x76]
  41a20f:	jmp    0xd3277b12
  41a214:	lock jmp 0xd057:0x4dc8cc5b
  41a21c:	mov    ds:0xc8fd384c,eax
  41a221:	mov    ds:0x544bf98c,eax
  41a226:	adc    eax,0xec84619
  41a22b:	xchg   ebx,eax
  41a22c:	cmp    dl,BYTE PTR [ebx-0xd73432b]
  41a232:	test   DWORD PTR [eax-0x1c5e25c2],0xd79f9f66
  41a23c:	push   edx
  41a23d:	adc    BYTE PTR [edx],al
  41a23f:	xor    BYTE PTR [ebp-0x5d],0xac
  41a243:	es cmp al,0xf8
  41a246:	ss pop ecx
  41a248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a249:	xchg   ebp,eax
  41a24a:	js     0x41a25d
  41a24c:	dec    ecx
  41a24d:	cmp    ecx,DWORD PTR [eax-0x2ee6139e]
  41a253:	(bad)  
  41a254:	mov    eax,ds:0xd6c2b8fd
  41a259:	pop    ebp
  41a25a:	push   ss
  41a25b:	adc    ah,dl
  41a25d:	leave  
  41a25e:	mov    esi,0xa422b105
  41a263:	or     dh,BYTE PTR [eax]
  41a265:	fild   DWORD PTR [esi+edx*4-0x3]
  41a269:	sar    BYTE PTR [edi],0x3
  41a26c:	hlt    
  41a26d:	cmc    
  41a26e:	cmp    eax,0xa83a907e
  41a273:	push   ss
  41a274:	mov    esi,ebp
  41a276:	push   eax
  41a277:	ss inc eax
  41a279:	and    BYTE PTR [edx+0x2ebd0101],bh
  41a27f:	addr16 ret 0x1eb2
  41a283:	mov    al,0xf7
  41a285:	or     eax,0xf4b5d081
  41a28a:	sub    eax,0x876bd144
  41a28f:	addr16 jge 0x41a242
  41a292:	out    dx,eax
  41a293:	push   ebp
  41a294:	xchg   ecx,eax
  41a295:	xchg   BYTE PTR [edi-0xc],dl
  41a298:	call   0xb313:0x5e7682be
  41a29f:	gs iret 
  41a2a1:	dec    esi
  41a2a2:	jecxz  0x41a310
  41a2a4:	(bad)  
  41a2a5:	bound  esp,QWORD PTR [ecx]
  41a2a7:	jae    0x41a277
  41a2a9:	mov    eax,ds:0x378150fd
  41a2ae:	fnstsw WORD PTR [ecx+ebx*1]
  41a2b1:	sahf   
  41a2b2:	shr    DWORD PTR [ecx+0x18],cl
  41a2b5:	(bad)
  41a2b8:	jg     0x41a2cb
  41a2ba:	es cmp eax,0x672dd8e4
  41a2c0:	pop    esi
  41a2c1:	stos   DWORD PTR es:[edi],eax
  41a2c2:	inc    ecx
  41a2c3:	sub    cl,BYTE PTR [edx+0x2c7f35e2]
  41a2c9:	sbb    ch,0x2a
  41a2cc:	mov    ds:0xdb2f6773,eax
  41a2d1:	inc    esp
  41a2d2:	cmp    al,0xae
  41a2d4:	les    edi,FWORD PTR [esi-0x2e]
  41a2d7:	mov    eax,0xea872771
  41a2dc:	call   0xcce6:0xe11e7575
  41a2e3:	jle    0x41a297
  41a2e5:	jmp    0xac252e64
  41a2ea:	into   
  41a2eb:	(bad)  
  41a2ec:	or     dl,BYTE PTR [ecx]
  41a2ee:	inc    eax
  41a2ef:	xlat   BYTE PTR ds:[ebx]
  41a2f0:	scas   al,BYTE PTR es:[edi]
  41a2f1:	xchg   ebx,eax
  41a2f2:	xchg   ebp,eax
  41a2f3:	and    ch,BYTE PTR [edi]
  41a2f5:	bound  eax,QWORD PTR [esi+ecx*4-0x33]
  41a2f9:	xchg   edx,eax
  41a2fa:	call   DWORD PTR [eax-0x720582d4]
  41a300:	jns    0x41a2ee
  41a302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a303:	cli    
  41a304:	jl     0x41a2fc
  41a306:	push   cs
  41a307:	ds push ds
  41a309:	jmp    0x1bfd1e37
  41a30e:	rcl    BYTE PTR [esi-0x64],cl
  41a311:	(bad)  
  41a312:	sar    DWORD PTR [edx+0x51],cl
  41a315:	pop    ss
  41a316:	inc    eax
  41a317:	fcmovb st,st(2)
  41a319:	xor    DWORD PTR [ebx+0x37],edi
  41a31c:	cmp    ch,BYTE PTR [edi]
  41a31e:	ret    0xe503
  41a321:	mov    DWORD PTR gs:[esp+edi*8-0x3bccb6bd],0xee4989cb
  41a32d:	xor    dl,BYTE PTR [edi]
  41a32f:	fiadd  DWORD PTR [edx-0x71]
  41a332:	xchg   edx,eax
  41a333:	or     DWORD PTR [edi-0x62],esp
  41a336:	into   
  41a337:	loope  0x41a3b1
  41a339:	sbb    BYTE PTR [edx+0x698fc9f8],0x46
  41a340:	push   0x3c
  41a342:	sub    eax,0x1c9e2b46
  41a347:	pop    ebp
  41a348:	(bad)  [ebp-0x7356bfb6]
  41a34e:	push   eax
  41a34f:	fcmovne st,st(7)
  41a351:	cli    
  41a352:	call   FWORD PTR [eax+0x11331e79]
  41a358:	cmp    al,0xfe
  41a35a:	call   0xe381:0x5678b58c
  41a361:	outs   dx,DWORD PTR ds:[esi]
  41a362:	xor    eax,0xe3bf8a53
  41a367:	imul   ebx,DWORD PTR [edi],0x24
  41a36a:	or     eax,0xffe92461
  41a36f:	push   edx
  41a370:	cmp    bl,al
  41a372:	imul   edx,ecx,0xffffffce
  41a375:	and    dh,al
  41a377:	shl    DWORD PTR [ebp+0x79],cl
  41a37a:	mov    ds:0xa31c3d19,al
  41a37f:	icebp  
  41a380:	(bad)  
  41a381:	scas   al,BYTE PTR es:[edi]
  41a382:	push   esi
  41a383:	mov    esp,0x6b4ccb55
  41a388:	xor    al,0x3f
  41a38a:	mov    al,BYTE PTR [eax]
  41a38c:	dec    edx
  41a38d:	mov    ah,bh
  41a38f:	sti    
  41a390:	xchg   esi,eax
  41a391:	xchg   edi,eax
  41a392:	or     eax,0x6e68702e
  41a397:	or     BYTE PTR [eax],ch
  41a399:	jb     0x41a391
  41a39b:	xchg   ebx,eax
  41a39c:	push   ss
  41a39d:	add    BYTE PTR [ebx+edi*4+0x11ee3a8a],cl
  41a3a4:	test   eax,0x7ec55d77
  41a3a9:	push   0xffffff90
  41a3ab:	dec    esp
  41a3ac:	sub    al,0x39
  41a3ae:	imul   ebx,DWORD PTR [eax],0x4e
  41a3b1:	popa   
  41a3b2:	pop    edi
  41a3b3:	out    dx,al
  41a3b4:	jp     0x41a3b9
  41a3b6:	div    DWORD PTR [ecx]
  41a3b8:	(bad)  
  41a3b9:	xchg   esi,eax
  41a3ba:	div    dl
  41a3bc:	mov    esi,0x9363fd57
  41a3c1:	add    edi,0xffffffb8
  41a3c4:	ret    0x7968
  41a3c7:	jae    0x41a3ef
  41a3c9:	sbb    DWORD PTR [ebp+0x2b96cb86],ecx
  41a3cf:	xor    dl,bh
  41a3d1:	jmp    0x41a3a5
  41a3d3:	leave  
  41a3d4:	call   0x725b7685
  41a3d9:	in     eax,0x51
  41a3db:	data16 jp 0x41a384
  41a3de:	add    al,0x2f
  41a3e0:	lahf   
  41a3e1:	rol    bh,cl
  41a3e3:	mov    dl,0xa7
  41a3e5:	and    al,0xba
  41a3e7:	mov    DWORD PTR [edi],eax
  41a3e9:	mov    eax,ds:0x7f6b124
  41a3ee:	jmp    0x41a3e9
  41a3f0:	icebp  
  41a3f1:	add    dl,dl
  41a3f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f4:	in     eax,0x98
  41a3f6:	jne    0x41a476
  41a3f8:	adc    bl,BYTE PTR [esi-0x72]
  41a3fb:	jle    0x41a395
  41a3fd:	jb     0x41a390
  41a3ff:	cld    
  41a400:	out    0xb2,eax
  41a402:	enter  0xfbb7,0x6c
  41a406:	or     ebp,ecx
  41a408:	rcl    BYTE PTR [esi],1
  41a40a:	movlps xmm6,QWORD PTR [edi+0x3a]
  41a40e:	cmp    BYTE PTR [esi-0x33f147e2],bh
  41a414:	fst    DWORD PTR [esi]
  41a416:	jle    0x41a482
  41a418:	push   ecx
  41a419:	scas   eax,DWORD PTR es:[edi]
  41a41a:	aam    0x74
  41a41c:	fs mov cl,0xcd
  41a41f:	cmp    DWORD PTR [eax+0x44],ebp
  41a422:	jl     0x41a3c8
  41a424:	call   0x7254:0xc11d5a2d
  41a42b:	sub    al,0x64
  41a42d:	fstp   TBYTE PTR [ebx+edx*2-0x48f3b1ce]
  41a434:	fstp   QWORD PTR [ebx-0x1ebb4b2b]
  41a43a:	stc    
  41a43b:	xor    al,0x81
  41a43d:	push   eax
  41a43e:	pop    esp
  41a43f:	dec    ebp
  41a440:	jnp    0x41a3fb
  41a442:	xor    eax,0x63df4b33
  41a447:	mov    eax,ds:0xef406386
  41a44c:	xchg   esi,ebp
  41a44e:	ds cmp eax,0x53301092
  41a454:	call   0xf75323df
  41a459:	dec    esp
  41a45a:	fsub   QWORD PTR [ebx+edx*1+0x46]
  41a45e:	stos   DWORD PTR es:[edi],eax
  41a45f:	inc    esi
  41a460:	mov    WORD PTR [edi+0x3bee0612],?
  41a466:	(bad)  
  41a467:	xchg   ecx,eax
  41a468:	sbb    bh,BYTE PTR [ebp-0x1f]
  41a46b:	push   ds
  41a46c:	sahf   
  41a46d:	sbb    al,0xf7
  41a46f:	mov    bl,0xa0
  41a471:	(bad)  
  41a472:	cdq    
  41a473:	mov    esp,0x6f2e5e19
  41a478:	jmp    0xdf14c954
  41a47d:	aad    0xbb
  41a47f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a480:	cmovbe esp,DWORD PTR [ebx-0x24]
  41a484:	jne    0x41a4d6
  41a486:	imul   edi,edx,0xb
  41a489:	je     0x41a4b5
  41a48b:	sub    BYTE PTR [esi+0x57],cl
  41a48e:	ins    DWORD PTR es:[edi],dx
  41a48f:	push   ebx
  41a490:	xchg   esp,eax
  41a491:	loope  0x41a4ea
  41a493:	dec    ebp
  41a494:	jne    0x41a43a
  41a496:	pop    esi
  41a497:	dec    eax
  41a498:	pop    ds
  41a499:	(bad)  
  41a49a:	xchg   ebp,eax
  41a49b:	jno    0x41a4bd
  41a49d:	pop    edx
  41a49e:	popa   
  41a49f:	(bad)  
  41a4a0:	xchg   esi,eax
  41a4a1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4a3:	xor    eax,0xf1902c6e
  41a4a8:	inc    edi
  41a4a9:	cmp    dl,BYTE PTR [eax]
  41a4ab:	xchg   esi,eax
  41a4ac:	sub    DWORD PTR [edx+0x52],ebp
  41a4af:	ret    0x421
  41a4b2:	xchg   edx,eax
  41a4b3:	and    eax,0xf7bf9f86
  41a4b8:	inc    edi
  41a4b9:	mov    WORD PTR ds:0x5d29a867,di
  41a4c0:	adc    eax,0x4f158eea
  41a4c5:	xchg   edi,eax
  41a4c6:	(bad)  
  41a4c8:	adc    eax,0xbc6c6235
  41a4cd:	push   edx
  41a4ce:	jge    0x41a504
  41a4d0:	sub    bl,BYTE PTR [esi]
  41a4d2:	xchg   esi,eax
  41a4d3:	add    al,0x9f
  41a4d5:	(bad)  
  41a4d6:	pop    ebx
  41a4d7:	test   al,0x9
  41a4d9:	xchg   BYTE PTR [ebx],ah
  41a4db:	fistp  QWORD PTR [eax-0x4ee4136a]
  41a4e1:	scas   al,BYTE PTR es:[edi]
  41a4e2:	repnz adc eax,0x5aa10ece
  41a4e8:	(bad)  
  41a4e9:	pop    ds
  41a4ea:	xchg   esp,eax
  41a4eb:	jge    0x41a4c0
  41a4ed:	std    
  41a4ee:	idiv   BYTE PTR [eax+0x7e]
  41a4f1:	test   BYTE PTR [esi-0x69b05c06],0xc8
  41a4f8:	ss in  eax,dx
  41a4fa:	icebp  
  41a4fb:	push   ds
  41a4fc:	les    ecx,FWORD PTR [ebx-0x2ee7d68b]
  41a502:	inc    esp
  41a503:	test   al,0xde
  41a505:	les    eax,FWORD PTR [edx-0x702e6fea]
  41a50b:	jp     0x41a538
  41a50d:	sub    ebp,DWORD PTR [edi+0x6]
  41a510:	cmp    al,0xbd
  41a512:	test   eax,0xca4a0438
  41a517:	sub    al,0xe9
  41a519:	fldenv [esi]
  41a51b:	inc    ebp
  41a51c:	jle    0x41a59a
  41a51e:	out    dx,al
  41a51f:	pop    esi
  41a520:	xor    DWORD PTR [esi-0x22],ebx
  41a523:	mov    ecx,0x89c3c25c
  41a528:	mov    edi,0x693da0be
  41a52d:	(bad)  
  41a52e:	xor    al,0x9
  41a530:	xlat   BYTE PTR ds:[ebx]
  41a531:	arpl   WORD PTR ds:0xa8dc83a5,cx
  41a537:	push   0x1e30bc5d
  41a53c:	sbb    eax,0x4ca80055
  41a541:	rcr    edi,1
  41a543:	jmp    FWORD PTR ds:0x5e8307d4
  41a54a:	dec    ebp
  41a54b:	xlat   BYTE PTR ds:[ebx]
  41a54c:	fdivp  st(2),st
  41a54e:	adc    eax,0x1191a938
  41a553:	ins    DWORD PTR es:[edi],dx
  41a554:	imul   edx,DWORD PTR [ecx+0x54e84bcf],0x66
  41a55b:	sbb    ecx,eax
  41a55d:	cmp    DWORD PTR [ebx],0x171ea970
  41a563:	mov    dh,0xdd
  41a565:	(bad)  
  41a566:	cmp    edx,DWORD PTR [ebx-0x22]
  41a569:	push   ss
  41a56a:	xchg   ebp,eax
  41a56b:	xor    BYTE PTR [eax+0x0],0xa4
  41a56f:	rcl    DWORD PTR [eax+0x282fae51],1
  41a575:	push   ecx
  41a576:	inc    eax
  41a577:	cmp    al,0x97
  41a579:	test   BYTE PTR [ebx+0x567dcc2c],ah
  41a57f:	(bad)  
  41a580:	jmp    0xcf2:0xb105aa43
  41a587:	push   cs
  41a588:	imul   eax,DWORD PTR [edx+0x45],0xfe44172
  41a58f:	sbb    al,0x38
  41a591:	cmp    eax,0x57d9c2f1
  41a596:	inc    edx
  41a597:	adc    eax,0xcbe106e6
  41a59c:	cmp    eax,0xd2bbda61
  41a5a1:	push   ds
  41a5a2:	and    ecx,ebx
  41a5a4:	hlt    
  41a5a5:	pop    ebx
  41a5a6:	xor    al,BYTE PTR [eax-0x62]
  41a5a9:	pop    esi
  41a5aa:	sbb    ebp,DWORD PTR [eax+0x5054c049]
  41a5b0:	mov    bh,0x4c
  41a5b2:	adc    al,0xb1
  41a5b4:	inc    edi
  41a5b5:	repnz sub BYTE PTR [ecx-0x49],ah
  41a5b9:	imul   eax,ecx,0x20ed536f
  41a5bf:	in     eax,0xca
  41a5c1:	or     ah,BYTE PTR [edx]
  41a5c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5c4:	cli    
  41a5c5:	daa    
  41a5c6:	xor    ah,BYTE PTR [eax-0x5c]
  41a5c9:	sbb    al,0xd1
  41a5cb:	sbb    DWORD PTR [ebx],ebx
  41a5cd:	call   0x775e:0x65e36ab3
  41a5d4:	xchg   ebp,eax
  41a5d5:	fwait
  41a5d6:	mov    al,ds:0xb2292a51
  41a5db:	jnp    0x41a577
  41a5dd:	cmp    eax,0xaacd2777
  41a5e2:	dec    ebp
  41a5e3:	aam    0x81
  41a5e5:	(bad)  
  41a5e6:	or     cl,BYTE PTR [ecx-0x4e]
  41a5e9:	aaa    
  41a5ea:	mov    ds:0xb866d470,eax
  41a5ef:	scas   al,BYTE PTR es:[edi]
  41a5f0:	bound  edi,QWORD PTR [edx+esi*4]
  41a5f3:	xchg   edx,eax
  41a5f4:	add    DWORD PTR [ecx+0x7c],0x4b
  41a5f8:	xlat   BYTE PTR ds:[ebx]
  41a5f9:	xor    edi,ebp
  41a5fb:	(bad)  
  41a5fc:	sbb    al,0xe1
  41a5fe:	out    0xfd,eax
  41a600:	inc    edi
  41a601:	dec    esp
  41a602:	jbe    0x41a609
  41a604:	adc    bh,BYTE PTR [ebx+0x4]
  41a607:	push   0x73db9c64
  41a60c:	xchg   ecx,eax
  41a60d:	cmp    edx,DWORD PTR [eax+eiz*4-0x43cd4951]
  41a614:	test   DWORD PTR [eax],ebp
  41a616:	or     al,0x5b
  41a618:	dec    edx
  41a619:	cmp    eax,esi
  41a61b:	dec    eax
  41a61c:	pop    esi
  41a61d:	cmc    
  41a61e:	aaa    
  41a61f:	dec    esi
  41a620:	pop    edx
  41a621:	loopne 0x41a68e
  41a623:	dec    edx
  41a624:	mov    bl,0xc
  41a626:	mov    ah,bh
  41a628:	jle    0x41a664
  41a62a:	shl    BYTE PTR [ecx-0x13f80e62],0x9
  41a631:	ja     0x41a672
  41a633:	call   0xff08d4c9
  41a638:	mov    ebp,0xec4f4fe5
  41a63d:	cli    
  41a63e:	(bad)  
  41a640:	adc    DWORD PTR [ebx],ebp
  41a642:	scas   al,BYTE PTR es:[edi]
  41a643:	push   edx
  41a644:	iret   
  41a645:	aam    0xa9
  41a647:	aas    
  41a648:	mov    al,ds:0x6344f8ce
  41a64d:	call   0x89618e60
  41a652:	jp     0x41a63c
  41a654:	int    0xa1
  41a656:	arpl   di,sp
  41a658:	add    edi,edi
  41a65a:	add    al,0x87
  41a65c:	mov    esi,0xb7616c10
  41a661:	inc    esp
  41a662:	mov    ebx,0x915e984b
  41a667:	add    ebx,eax
  41a669:	and    BYTE PTR [edi],ah
  41a66b:	shl    BYTE PTR [ecx],1
  41a66d:	dec    esi
  41a66e:	push   cs
  41a66f:	xchg   esi,eax
  41a670:	sbb    ebp,ecx
  41a672:	enter  0x2f9,0x85
  41a676:	sahf   
  41a677:	adc    BYTE PTR ds:0xf99ead08,al
  41a67d:	daa    
  41a67e:	sbb    eax,0x8a2bf373
  41a683:	mov    esp,DWORD PTR [ebx+0x26]
  41a686:	adc    eax,0xdc51f877
  41a68b:	cmp    BYTE PTR ds:0xefa63e93,bh
  41a691:	fbld   TBYTE PTR [eax]
  41a693:	xchg   ebp,eax
  41a694:	jmp    0x4c67:0xa5b0862
  41a69b:	not    DWORD PTR [esi-0xd]
  41a69e:	pop    edx
  41a69f:	add    eax,0x973b3940
  41a6a4:	lahf   
  41a6a5:	or     BYTE PTR [edx-0x68],0x68
  41a6a9:	adc    ecx,ebp
  41a6ab:	xchg   ebp,eax
  41a6ac:	fldenv [edi-0x35]
  41a6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b0:	dec    ecx
  41a6b1:	gs cli 
  41a6b3:	sub    DWORD PTR [edi-0x42],esi
  41a6b6:	push   ds
  41a6b7:	ror    BYTE PTR [ebx+0xf],1
  41a6ba:	cmc    
  41a6bb:	mov    ds:0x7495d760,eax
  41a6c0:	xchg   ebp,eax
  41a6c1:	xor    ah,BYTE PTR [eax+0x18]
  41a6c4:	pop    esp
  41a6c5:	xlat   BYTE PTR ds:[ebx]
  41a6c6:	cs add al,0x38
  41a6c9:	cmp    BYTE PTR [edx-0x6344c073],bl
  41a6cf:	xchg   edi,esp
  41a6d1:	nop
  41a6d2:	shl    BYTE PTR [edx+0x43fc1589],1
  41a6d8:	xlat   BYTE PTR ds:[ebx]
  41a6d9:	inc    ebp
  41a6da:	inc    ebp
  41a6db:	cmp    ecx,esi
  41a6dd:	adc    eax,0x7e6b8bae
  41a6e2:	sub    ah,BYTE PTR [esi-0x3f]
  41a6e5:	ins    BYTE PTR es:[edi],dx
  41a6e6:	ret    0x2e53
  41a6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6ea:	adc    eax,0x961d9fba
  41a6ef:	test   DWORD PTR [esi],edi
  41a6f1:	xchg   BYTE PTR [edi+0x7df9d2ec],dl
  41a6f7:	popa   
  41a6f8:	jne    0x41a776
  41a6fa:	inc    esp
  41a6fb:	ja     0x41a76f
  41a6fd:	dec    esp
  41a6fe:	mov    eax,0xe70f6748
  41a703:	stos   BYTE PTR es:[edi],al
  41a704:	dec    esi
  41a705:	dec    edi
  41a706:	mov    WORD PTR [edi],cs
  41a708:	pusha  
  41a709:	ss sub eax,0x655a0601
  41a70f:	mov    dh,0x35
  41a711:	mov    gs,ebp
  41a713:	xor    eax,0x95c7fd8f
  41a718:	pop    esi
  41a719:	pop    ebp
  41a71a:	loop   0x41a6e4
  41a71c:	sbb    bh,BYTE PTR [edi+eax*8-0x7d]
  41a720:	add    eax,0x41ce183b
  41a725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a726:	mov    edi,0x5f9f1bc0
  41a72b:	test   DWORD PTR [esi+0x71],0xa3b3944
  41a732:	xchg   ebx,eax
  41a733:	stos   DWORD PTR es:[edi],eax
  41a734:	push   es
  41a735:	push   cs
  41a736:	fist   DWORD PTR [ebx-0x4d]
  41a739:	xlat   BYTE PTR ds:[ebx]
  41a73a:	pop    esp
  41a73b:	inc    edx
  41a73c:	(bad)  
  41a73d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a73e:	mov    BYTE PTR es:[edx],bh
  41a741:	les    ecx,FWORD PTR [esi]
  41a743:	jbe    0x41a6eb
  41a745:	mov    dl,dl
  41a747:	in     eax,0x9b
  41a749:	fsubr  DWORD PTR [ecx-0x38]
  41a74c:	mov    ebp,0x6a57d98
  41a751:	es pop ebx
  41a753:	push   edi
  41a754:	push   ds
  41a755:	adc    al,0x7b
  41a757:	into   
  41a758:	add    eax,0xfbe2be2f
  41a75d:	push   ecx
  41a75e:	sub    eax,0xd3501c8e
  41a763:	clc    
  41a764:	mov    ch,0x74
  41a766:	xor    al,0xb4
  41a768:	jle    0x41a759
  41a76a:	retf   0xc65c
  41a76d:	std    
  41a76e:	push   esp
  41a76f:	dec    ecx
  41a770:	push   ds
  41a771:	xor    BYTE PTR [eax+0x24],bl
  41a774:	in     al,0x33
  41a776:	rcl    BYTE PTR [ebx+0x5eb655b8],cl
  41a77c:	(bad)  [edi-0x37]
  41a77f:	jg     0x41a7c7
  41a781:	lea    esi,[ebx-0x276148ad]
  41a787:	loopne 0x41a77a
  41a789:	lahf   
  41a78a:	pusha  
  41a78b:	sbb    DWORD PTR [ebp-0x2c],0x7a
  41a78f:	inc    edi
  41a790:	sbb    ebp,DWORD PTR [eax]
  41a792:	sbb    DWORD PTR [ecx+0x1b],edx
  41a795:	(bad)  
  41a796:	xchg   esp,eax
  41a797:	into   
  41a798:	fisubr DWORD PTR [ebp+0x549699ed]
  41a79e:	popf   
  41a79f:	in     eax,dx
  41a7a0:	das    
  41a7a1:	inc    ecx
  41a7a2:	xor    al,0x99
  41a7a4:	aad    0xfe
  41a7a6:	pushf  
  41a7a7:	add    ah,bl
  41a7a9:	and    al,0x90
  41a7ab:	jp     0x41a82c
  41a7ad:	mov    eax,ds:0x1cc8c6a1
  41a7b2:	stos   DWORD PTR es:[edi],eax
  41a7b3:	mov    eax,0xe4b88f
  41a7b8:	cmp    dl,dh
  41a7ba:	das    
  41a7bb:	mov    esi,DWORD PTR [eax-0x7000b5fa]
  41a7c1:	inc    edi
  41a7c2:	test   al,0x8d
  41a7c4:	xor    eax,0x12
  41a7c7:	mov    ecx,ebp
  41a7c9:	rcl    DWORD PTR [eax-0xcd2fd2e],0x7e
  41a7d0:	nop
  41a7d1:	adc    BYTE PTR [edx+0x6d6795cf],dh
  41a7d7:	jp     0x41a83f
  41a7d9:	pop    edx
  41a7da:	pop    es
  41a7db:	cmp    al,0x2a
  41a7dd:	sub    eax,0x407430fc
  41a7e2:	in     al,dx
  41a7e3:	nop
  41a7e4:	lds    ebx,FWORD PTR [edx-0x4aa02fb7]
  41a7ea:	imul   esi,ebp,0x70
  41a7ed:	(bad)  
  41a7ee:	(bad)  
  41a7ef:	jae    0x41a7eb
  41a7f1:	or     cl,al
  41a7f3:	xor    DWORD PTR [ebp-0x3a],ebx
  41a7f6:	xchg   ebx,eax
  41a7f7:	imul   edi,ecx,0x10
  41a7fa:	pop    ss
  41a7fb:	cli    
  41a7fc:	ret    0xfbd3
  41a7ff:	add    BYTE PTR [ecx+0x4c9be567],0xd2
  41a806:	inc    ecx
  41a807:	fsubr  DWORD PTR [eax-0x23]
  41a80a:	ins    BYTE PTR es:[edi],dx
  41a80b:	mov    ds:0x92560db9,al
  41a810:	scas   al,BYTE PTR es:[edi]
  41a811:	fdivr  DWORD PTR [edx+0x246e9e5c]
  41a817:	cmp    ch,BYTE PTR [edi-0x71]
  41a81a:	fs aas 
  41a81c:	std    
  41a81d:	call   0xb245add3
  41a822:	leave  
  41a823:	js     0x41a88a
  41a825:	inc    eax
  41a826:	pop    ds
  41a827:	mov    bl,0xcc
  41a829:	addr16 pop ss
  41a82b:	xchg   esp,eax
  41a82c:	lahf   
  41a82d:	push   eax
  41a82e:	aad    0x66
  41a830:	sar    ebx,1
  41a832:	mov    edi,0x1ca61489
  41a837:	nop
  41a838:	mov    ss,WORD PTR [esi-0x49e56c92]
  41a83e:	out    0x1c,al
  41a840:	inc    esp
  41a841:	outs   dx,DWORD PTR ds:[esi]
  41a842:	clc    
  41a843:	rcl    bh,0x5a
  41a846:	inc    eax
  41a847:	sub    eax,0xea50188b
  41a84c:	xor    eax,ebp
  41a84e:	push   esi
  41a84f:	ret    
  41a850:	push   edx
  41a851:	cmp    BYTE PTR [ecx-0x8],ch
  41a854:	ret    
  41a855:	jp     0x41a7da
  41a857:	(bad)  
  41a858:	test   al,0xa0
  41a85a:	push   ds
  41a85b:	fmul   st(4),st
  41a85d:	mov    bl,0x4b
  41a85f:	(bad)  
  41a861:	sbb    al,0xe5
  41a863:	mov    dl,0x15
  41a865:	lods   al,BYTE PTR ds:[esi]
  41a866:	mov    ah,0x19
  41a868:	jae    0x41a7ec
  41a86a:	test   DWORD PTR [ebx+0x77],ebx
  41a86d:	dec    esi
  41a86e:	pop    esi
  41a86f:	ror    ebp,cl
  41a871:	xchg   esp,eax
  41a872:	daa    
  41a873:	or     eax,0x1cfe89b2
  41a878:	ror    DWORD PTR [ebx+eiz*1],1
  41a87b:	data16 mov ds:0x1dca9af7,al
  41a881:	inc    edi
  41a882:	add    bl,dh
  41a884:	mov    ch,0x30
  41a886:	inc    edx
  41a887:	(bad)  
  41a888:	(bad)  
  41a889:	and    DWORD PTR [ecx-0x4d5e1f95],esp
  41a88f:	out    dx,eax
  41a890:	add    BYTE PTR [esi*1-0x43b0a253],bh
  41a897:	push   esi
  41a898:	add    ecx,DWORD PTR [ecx-0x46de3c08]
  41a89e:	add    dl,BYTE PTR [ecx]
  41a8a0:	cmp    edi,esp
  41a8a2:	stc    
  41a8a3:	adc    DWORD PTR [edi+0x67],ebp
  41a8a6:	in     eax,0xe9
  41a8a8:	scas   eax,DWORD PTR es:[edi]
  41a8a9:	xchg   ebx,eax
  41a8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ab:	pop    es
  41a8ac:	dec    ecx
  41a8ad:	push   es
  41a8ae:	push   edx
  41a8af:	cmp    al,0x3a
  41a8b1:	das    
  41a8b2:	repnz hlt 
  41a8b4:	mov    dl,0x35
  41a8b6:	(bad)  [esi]
  41a8b8:	(bad)  
  41a8b9:	mov    esi,0x2a2f4755
  41a8be:	test   DWORD PTR [ecx],0xbc9e06ce
  41a8c4:	fst    DWORD PTR [edx]
  41a8c6:	fst    QWORD PTR [eax-0x19ae146f]
  41a8cc:	mov    edi,0x76aa897c
  41a8d1:	cld    
  41a8d2:	adc    ecx,0x72
  41a8d5:	mov    cl,0x21
  41a8d7:	in     eax,0x10
  41a8d9:	or     BYTE PTR [eax],dl
  41a8db:	stc    
  41a8dc:	fs inc esp
  41a8de:	mov    DWORD PTR cs:[edi+0x15],esp
  41a8e2:	push   ss
  41a8e3:	fisubr DWORD PTR [edx+0x7c]
  41a8e6:	pop    esi
  41a8e7:	pop    es
  41a8e8:	xor    BYTE PTR [ebx+0x43],cl
  41a8eb:	mov    ecx,0x46a9b74a
  41a8f0:	dec    edx
  41a8f1:	addr16 aam 0xba
  41a8f4:	inc    edx
  41a8f5:	xchg   BYTE PTR [ecx],bl
  41a8f7:	ds push ebp
  41a8f9:	pusha  
  41a8fa:	and    esp,0x60
  41a8fd:	xor    ebp,DWORD PTR [edx]
  41a8ff:	cmp    dh,ah
  41a901:	neg    DWORD PTR [edi+0x7f]
  41a904:	mov    dh,0x43
  41a906:	dec    edx
  41a907:	test   eax,0x5e2bad24
  41a90c:	mov    WORD PTR [esi+0x2db0435d],es
  41a912:	aam    0xdc
  41a914:	jl     0x41a8e1
  41a916:	int3   
  41a917:	or     ebx,ecx
  41a919:	aaa    
  41a91a:	out    0x4c,eax
  41a91c:	xchg   ecx,eax
  41a91d:	or     dh,BYTE PTR [ecx+0x12]
  41a920:	dec    esi
  41a921:	scas   al,BYTE PTR es:[edi]
  41a922:	cmp    edx,ebp
  41a924:	pop    edx
  41a925:	gs call 0x4f3b2444
  41a92b:	popf   
  41a92c:	fninit 
  41a92e:	in     al,0x5b
  41a930:	das    
  41a931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a932:	ret    0x7422
  41a935:	sub    bh,BYTE PTR [ebx]
  41a937:	std    
  41a938:	icebp  
  41a939:	adc    al,0xcf
  41a93b:	add    dh,dh
  41a93d:	pusha  
  41a93e:	lock or BYTE PTR [esi],0x75
  41a942:	mov    ebp,0xba484209
  41a947:	cs mov ebp,0x2be365f
  41a94d:	inc    ebp
  41a94e:	imul   ecx,DWORD PTR [edx+0x6ec537a1],0x910a2572
  41a958:	sub    BYTE PTR [eax+eiz*4],0x79
  41a95c:	dec    esp
  41a95d:	or     BYTE PTR [ecx],0xce
  41a960:	cmp    BYTE PTR ds:0xe2c58ea,cl
  41a966:	or     eax,0x57ad1c97
  41a96b:	mov    WORD PTR [ecx+ebx*2+0x7a],cs
  41a96f:	xchg   ebx,eax
  41a970:	stos   DWORD PTR es:[edi],eax
  41a971:	scas   eax,DWORD PTR es:[edi]
  41a972:	mov    eax,ds:0xfe3ec91d
  41a977:	dec    ecx
  41a978:	pop    eax
  41a979:	add    eax,0x84c9b9e3
  41a97e:	ins    BYTE PTR es:[edi],dx
  41a97f:	pop    edi
  41a980:	sub    edx,DWORD PTR [esi+0x37]
  41a983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a984:	popf   
  41a985:	clc    
  41a986:	clc    
  41a987:	mov    dh,0x11
  41a989:	adc    ecx,DWORD PTR [edx-0x20c1d20]
  41a98f:	add    ebp,edx
  41a991:	loopne 0x41a941
  41a993:	test   eax,0xc03ddc89
  41a998:	das    
  41a999:	daa    
  41a99a:	mov    ds:0xbcad455f,al
  41a99f:	ficom  DWORD PTR [ebx+0x48]
  41a9a2:	xor    eax,0x8486ec67
  41a9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9a8:	icebp  
  41a9a9:	scas   eax,DWORD PTR es:[edi]
  41a9aa:	stos   BYTE PTR es:[edi],al
  41a9ab:	dec    edx
  41a9ac:	or     eax,DWORD PTR [ecx+edx*8+0x23bcd1b8]
  41a9b3:	(bad)
  41a9b6:	out    0x81,eax
  41a9b8:	pushf  
  41a9b9:	test   eax,0x5ad5cab9
  41a9be:	fcom   DWORD PTR [ecx-0x13]
  41a9c1:	pop    ebx
  41a9c2:	inc    ebp
  41a9c3:	gs xchg esi,eax
  41a9c5:	sbb    esp,DWORD PTR [eax-0x72]
  41a9c8:	(bad)  
  41a9c9:	dec    edi
  41a9ca:	mov    edi,0x2d6d4d41
  41a9cf:	aas    
  41a9d0:	jle    0x41aa20
  41a9d2:	repz lock or al,BYTE PTR [ecx]
  41a9d6:	xchg   edi,eax
  41a9d7:	mov    ebp,0xec44b069
  41a9dc:	jge    0x41a9a9
  41a9de:	pushf  
  41a9df:	mov    dh,0xef
  41a9e1:	mov    edi,0xa9fad5b8
  41a9e6:	lea    esp,[esi]
  41a9e8:	ror    DWORD PTR [edi+0x33e40ec],0x54
  41a9ef:	or     ebx,0xe40f47df
  41a9f5:	mov    ah,0x47
  41a9f7:	stc    
  41a9f8:	cdq    
  41a9f9:	pop    es
  41a9fa:	dec    ebp
  41a9fb:	mov    ?,WORD PTR [edx-0x4a]
  41a9fe:	(bad)  
  41a9ff:	out    0xe3,eax
  41aa01:	mov    ds,WORD PTR [esp+esi*8+0x7ad29ebf]
  41aa08:	adc    DWORD PTR [ecx+ecx*4+0x3b],esp
  41aa0c:	(bad)  
  41aa0d:	mov    eax,0x3a67c717
  41aa12:	in     eax,0xd5
  41aa14:	dec    eax
  41aa15:	add    eax,0xb7b7040b
  41aa1a:	sbb    BYTE PTR [ebp+0x6f53ba69],0x57
  41aa21:	xchg   ebx,eax
  41aa22:	dec    eax
  41aa23:	xchg   edi,eax
  41aa24:	xor    eax,0x6faad236
  41aa29:	push   esi
  41aa2a:	xchg   ebx,eax
  41aa2b:	add    DWORD PTR [ecx+edi*1-0x49c46054],ebx
  41aa32:	mov    ebp,0xd06dbf51
  41aa37:	mov    bl,0x9c
  41aa39:	adc    DWORD PTR [eax],ebp
  41aa3b:	call   0xdb510253
  41aa40:	jg     0x41aa3b
  41aa42:	cmp    al,0x97
  41aa44:	inc    ebp
  41aa45:	(bad)  
  41aa46:	cmp    al,0x82
  41aa48:	ficomp WORD PTR [ecx+0x4c]
  41aa4b:	mov    ebx,0xdd80ba86
  41aa50:	shr    DWORD PTR [ebx-0x50691267],1
  41aa56:	(bad)  
  41aa57:	nop
  41aa58:	test   eax,0x2efb4adc
  41aa5d:	in     al,0x6b
  41aa5f:	and    ebx,ecx
  41aa61:	cmp    eax,0x3add2494
  41aa66:	dec    edi
  41aa67:	jb     0x41aa68
  41aa69:	das    
  41aa6a:	lock jo 0x41aa61
  41aa6d:	mov    edi,0x813341ec
  41aa72:	adc    edx,DWORD PTR ds:0x994152ee
  41aa78:	cmp    DWORD PTR [ebp+0x241f6790],ecx
  41aa7e:	shl    BYTE PTR [esi+0x3caa1a30],0x9
  41aa85:	ins    DWORD PTR es:[edi],dx
  41aa86:	test   eax,0xc4f0fdc5
  41aa8b:	push   0x11d73575
  41aa90:	aad    0x59
  41aa92:	inc    eax
  41aa93:	push   ebx
  41aa94:	ss mov bh,0x1b
  41aa97:	es mov ebx,0x382dd791
  41aa9d:	pushf  
  41aa9e:	xchg   edx,eax
  41aa9f:	int3   
  41aaa0:	pop    edi
  41aaa1:	(bad)  [esi-0x48]
  41aaa4:	mov    dl,0xd0
  41aaa6:	pop    ss
  41aaa7:	out    dx,al
  41aaa8:	or     eax,0x3c04e83
  41aaad:	jmp    0x41aa9c
  41aaaf:	inc    ebp
  41aab0:	sbb    ebx,esi
  41aab2:	jp     0x41aa4b
  41aab4:	(bad)  
  41aab5:	ror    BYTE PTR [edi-0x5],1
  41aab8:	ss cmp bh,cl
  41aabb:	dec    esp
  41aabc:	jle    0x41aa66
  41aabe:	dec    ecx
  41aabf:	pop    esp
  41aac0:	mov    es,WORD PTR [edx+0x57]
  41aac3:	pop    edx
  41aac4:	in     al,0xfd
  41aac6:	retf   0x76f9
  41aac9:	add    BYTE PTR [ecx],bh
  41aacb:	jge    0x41ab07
  41aacd:	cmp    eax,0x532afc44
  41aad2:	pop    edi
  41aad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad4:	xor    eax,0xe51e0cf6
  41aad9:	jb     0x41aac1
  41aadb:	push   edi
  41aadc:	mov    ds:0x2df052e7,eax
  41aae1:	jmp    FWORD PTR [eax+0x67]
  41aae4:	sbb    al,dh
  41aae6:	rol    BYTE PTR [eax-0x487e76e2],cl
  41aaec:	jae    0x41aaaa
  41aaee:	cwde   
  41aaef:	inc    ebp
  41aaf0:	jmp    0x41aaa6
  41aaf2:	or     BYTE PTR [edi],dh
  41aaf4:	enter  0xae34,0xda
  41aaf8:	mov    WORD PTR [eax+0xad11818],?
  41aafe:	dec    esp
  41aaff:	sub    ah,dl
  41ab01:	or     al,0xa
  41ab03:	pop    ss
  41ab04:	in     eax,0xb3
  41ab06:	imul   esp,esi,0x793e89c
  41ab0c:	popf   
  41ab0d:	(bad)  
  41ab0e:	mov    dh,0x35
  41ab10:	fdivr  QWORD PTR [ebp-0x74591725]
  41ab16:	outs   dx,DWORD PTR ds:[esi]
  41ab17:	out    dx,al
  41ab18:	sbb    al,0x89
  41ab1a:	rol    BYTE PTR [edi+0x47],cl
  41ab1d:	push   0xffffffd7
  41ab1f:	stos   DWORD PTR es:[edi],eax
  41ab20:	lahf   
  41ab21:	aas    
  41ab22:	clc    
  41ab23:	das    
  41ab24:	sar    BYTE PTR ds:0xb3539e64,1
  41ab2a:	mov    dl,0x20
  41ab2c:	xchg   ecx,eax
  41ab2d:	les    ebx,FWORD PTR [edx+0x2a]
  41ab30:	test   al,0x92
  41ab32:	dec    ebp
  41ab33:	(bad)  
  41ab34:	rcl    BYTE PTR [edi-0x12e26168],0x56
  41ab3b:	or     bh,BYTE PTR [ebx]
  41ab3d:	fmul   QWORD PTR [ebx]
  41ab3f:	mov    ah,cl
  41ab41:	or     ebp,DWORD PTR [ebx-0x696b7989]
  41ab47:	out    0x77,eax
  41ab49:	adc    al,0x9a
  41ab4b:	pop    edx
  41ab4c:	cmovo  ecx,DWORD PTR [edi]
  41ab4f:	cmp    ch,BYTE PTR [eax+0x6b]
  41ab52:	cmp    bl,BYTE PTR [ecx-0x46]
  41ab55:	or     al,0x66
  41ab57:	ins    DWORD PTR es:[edi],dx
  41ab58:	or     eax,0xca060949
  41ab5d:	jl     0x41aba8
  41ab5f:	int    0x24
  41ab61:	jle    0x41abce
  41ab63:	jne    0x41ab9d
  41ab65:	jnp    0x41ab3b
  41ab67:	lds    edx,FWORD PTR [edx-0x1a655040]
  41ab6d:	adc    ebp,DWORD PTR ds:0xf7140556
  41ab73:	xchg   BYTE PTR [edx-0x56],bl
  41ab76:	push   0x416bd4a8
  41ab7b:	cmp    cl,BYTE PTR [ecx+esi*1]
  41ab7e:	add    ebx,DWORD PTR [eax]
  41ab80:	iret   
  41ab81:	retf   0xa2ed
  41ab84:	out    dx,eax
  41ab85:	leave  
  41ab86:	out    0x3,eax
  41ab88:	xchg   esp,eax
  41ab89:	mov    cl,0x8b
  41ab8b:	scas   al,BYTE PTR es:[edi]
  41ab8c:	iret   
  41ab8d:	xor    al,0x9b
  41ab8f:	or     bh,BYTE PTR [eax]
  41ab91:	add    al,0xbd
  41ab93:	adc    DWORD PTR [edi-0x3b545cef],edx
  41ab99:	mov    ds:0x83859235,al
  41ab9e:	out    dx,al
  41ab9f:	sub    ch,BYTE PTR [edx-0x3c248a57]
  41aba5:	es sub eax,0x1d99a893
  41abab:	xchg   BYTE PTR [edi+ebp*2-0x33],bh
  41abaf:	(bad)
  41abb2:	jl     0x41abba
  41abb4:	and    cl,BYTE PTR [ebp-0x6e260df8]
  41abba:	sahf   
  41abbb:	mov    dl,0x8
  41abbd:	das    
  41abbe:	xchg   bh,ch
  41abc0:	retf   
  41abc1:	in     eax,0xec
  41abc3:	and    ecx,DWORD PTR ss:[ebx+0x2d79a75f]
  41abca:	push   cs
  41abcb:	ins    DWORD PTR es:[edi],dx
  41abcc:	jle    0x41ac2c
  41abce:	sbb    bl,BYTE PTR [edx-0x1b]
  41abd1:	add    dl,bl
  41abd3:	mov    ds:0xdd973b27,al
  41abd8:	mov    ch,0x3f
  41abda:	mov    bh,0x99
  41abdc:	jb     0x41abda
  41abde:	jb     0x41ac06
  41abe0:	lods   eax,DWORD PTR ds:[esi]
  41abe1:	fimul  WORD PTR [esi+0x11f76930]
  41abe7:	adc    al,0x2a
  41abe9:	cld    
  41abea:	push   0x42
  41abec:	add    al,0x74
  41abee:	cld    
  41abef:	idiv   DWORD PTR [esi+0x14]
  41abf2:	fwait
  41abf3:	jae    0x41abaa
  41abf5:	fsubp  st(5),st
  41abf7:	gs stos BYTE PTR es:[di],al
  41abfa:	and    eax,DWORD PTR [edi+edx*1+0x34]
  41abfe:	shr    DWORD PTR [ebp+0x16],1
  41ac01:	pop    ebp
  41ac02:	sbb    BYTE PTR cs:[esi],dl
  41ac05:	add    ch,BYTE PTR [ecx+edx*1]
  41ac08:	mov    dh,0xe
  41ac0a:	dec    ecx
  41ac0b:	imul   edi,DWORD PTR ds:0xff35d279,0x9828b880
  41ac15:	xchg   esp,eax
  41ac16:	xor    eax,0xe925231f
  41ac1b:	in     eax,dx
  41ac1c:	retf   0x2c75
  41ac1f:	call   0x588caad9
  41ac24:	and    eax,0x786d0138
  41ac29:	jle    0x41ac37
  41ac2b:	into   
  41ac2c:	shl    al,1
  41ac2e:	mov    al,ds:0x47acaf75
  41ac33:	sbb    DWORD PTR [ebp+0x50],esi
  41ac36:	sti    
  41ac37:	mov    dl,0x5f
  41ac39:	cwde   
  41ac3a:	push   ds
  41ac3b:	sub    BYTE PTR [esi+0x41b0e594],dl
  41ac41:	test   al,0xb2
  41ac43:	inc    esp
  41ac44:	stos   DWORD PTR es:[edi],eax
  41ac45:	sbb    al,0x2f
  41ac47:	and    ebp,DWORD PTR [eiz*8+0x7c9dffb1]
  41ac4e:	jo     0x41ac03
  41ac50:	inc    ebp
  41ac51:	cmp    eax,0x10a90e17
  41ac56:	sbb    DWORD PTR [ebx-0x1547083e],edi
  41ac5c:	leave  
  41ac5d:	nop
  41ac5e:	das    
  41ac5f:	xor    eax,0x23216f56
  41ac64:	(bad)  
  41ac65:	sbb    eax,0x6d18a20c
  41ac6a:	fidivr WORD PTR [esi-0xf]
  41ac6d:	in     al,0x17
  41ac6f:	sub    eax,0x579bdaf3
  41ac74:	mov    bh,BYTE PTR [edx+edx*2+0xd242c13]
  41ac7b:	mov    eax,ds:0x1e58533d
  41ac80:	bnd jmp 0x4d2960be
  41ac86:	sub    DWORD PTR [ecx],ebp
  41ac88:	outs   dx,DWORD PTR ds:[esi]
  41ac89:	and    cl,BYTE PTR [ecx]
  41ac8b:	push   esp
  41ac8c:	push   ds
  41ac8d:	rol    DWORD PTR [ecx+0x382c54e3],0x42
  41ac94:	inc    edx
  41ac95:	add    dl,dh
  41ac97:	cdq    
  41ac98:	js     0x41acb3
  41ac9a:	inc    ecx
  41ac9b:	xchg   esi,eax
  41ac9c:	push   es
  41ac9d:	add    eax,DWORD PTR ds:0x4f76e44b
  41aca3:	dec    esp
  41aca4:	(bad)  
  41aca5:	fs jp  0x41ac3f
  41aca8:	leave  
  41aca9:	popf   
  41acaa:	mov    bl,0x58
  41acac:	jmp    0x3a23340d
  41acb1:	shr    DWORD PTR [edi+ecx*2-0x7b],1
  41acb5:	and    BYTE PTR [ebx+0x62],0x2a
  41acb9:	sahf   
  41acba:	mov    al,0x38
  41acbc:	pop    ebx
  41acbd:	ds add al,0x11
  41acc0:	inc    ebx
  41acc1:	fwait
  41acc2:	out    0xf2,eax
  41acc4:	and    al,0xb1
  41acc6:	int3   
  41acc7:	in     eax,0xbc
  41acc9:	dec    esi
  41acca:	sbb    ch,BYTE PTR [eax]
  41accc:	add    al,BYTE PTR [eax+0x74]
  41accf:	hlt    
  41acd0:	adc    dh,BYTE PTR [edi+0x5bfc7998]
  41acd6:	inc    edi
  41acd7:	test   eax,0x20593d3a
  41acdc:	fs mov al,0xe5
  41acdf:	and    DWORD PTR [ecx],esp
  41ace1:	inc    esp
  41ace2:	addr16 mov dl,0x4c
  41ace5:	pusha  
  41ace6:	or     eax,DWORD PTR [ecx-0x5f]
  41ace9:	test   bl,cl
  41aceb:	fs mov ch,0x10
  41acee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acef:	stc    
  41acf0:	cmp    edx,ecx
  41acf2:	out    0x54,eax
  41acf4:	pusha  
  41acf5:	pop    ss
  41acf6:	repz adc cl,BYTE PTR cs:[edi]
  41acfa:	fs jg  0x41ad54
  41acfd:	loope  0x41acff
  41acff:	and    edx,DWORD PTR [edx-0x3]
  41ad02:	pushf  
  41ad03:	xchg   ebp,eax
  41ad04:	lods   eax,DWORD PTR ds:[esi]
  41ad05:	pusha  
  41ad06:	inc    esp
  41ad07:	jb     0x41ad2f
  41ad09:	lods   eax,DWORD PTR gs:[esi]
  41ad0b:	cmc    
  41ad0c:	pusha  
  41ad0d:	sub    edx,edx
  41ad0f:	lock lock pusha 
  41ad12:	ins    DWORD PTR es:[edi],dx
  41ad13:	xchg   edi,eax
  41ad14:	in     eax,0x92
  41ad16:	les    edx,FWORD PTR [eax]
  41ad18:	pop    ss
  41ad19:	lods   al,BYTE PTR ds:[esi]
  41ad1a:	push   edi
  41ad1b:	adc    ch,BYTE PTR [eax-0x76]
  41ad1e:	sub    bh,BYTE PTR [eax]
  41ad20:	xchg   DWORD PTR ds:0xf9a9678a,esp
  41ad26:	mov    WORD PTR [esi+esi*1+0x15],es
  41ad2a:	cmc    
  41ad2b:	shl    BYTE PTR [esi-0x14cc35c6],cl
  41ad31:	retf   
  41ad32:	ret    
  41ad33:	packuswb mm6,QWORD PTR [eax+edx*2]
  41ad37:	jmp    0xa77f:0x90c18a0f
  41ad3e:	cmp    BYTE PTR [ecx+0x46],ch
  41ad41:	call   0x1cf5371d
  41ad46:	fsubr  QWORD PTR [edx-0xaa4819]
  41ad4c:	fcmovu st,st(2)
  41ad4e:	or     eax,0x41ab74e9
  41ad53:	stc    
  41ad54:	call   0xadfada4e
  41ad59:	or     edi,0x11
  41ad5c:	mov    DWORD PTR [eax+0x63],0xff39fa8f
  41ad63:	mov    eax,0x9d328b7d
  41ad68:	or     BYTE PTR [ebx+0x1338b260],dh
  41ad6e:	sahf   
  41ad6f:	cmp    eax,edx
  41ad71:	ret    
  41ad72:	clc    
  41ad73:	cwde   
  41ad74:	sbb    eax,edi
  41ad76:	outs   dx,BYTE PTR ds:[esi]
  41ad77:	jno    0x41add5
  41ad79:	push   ss
  41ad7a:	or     DWORD PTR [eax+ecx*8+0x567b49a8],0x9a82fbd4
  41ad85:	jg     0x41adce
  41ad87:	mov    al,0x56
  41ad89:	or     eax,0xafe1ac91
  41ad8e:	inc    edx
  41ad8f:	inc    edi
  41ad90:	es push esp
  41ad92:	pusha  
  41ad93:	mov    es,WORD PTR [ecx+0x3f]
  41ad96:	mov    ebx,0x6bfcea19
  41ad9b:	scas   eax,DWORD PTR es:[edi]
  41ad9c:	cmc    
  41ad9d:	in     eax,dx
  41ad9e:	mov    bl,0x3e
  41ada0:	imul   DWORD PTR [eax+eiz*2+0x29d6e00]
  41ada7:	ficomp DWORD PTR [edi-0x36]
  41adaa:	pop    ebx
  41adab:	mov    ecx,0xa515fbcc
  41adb0:	and    ebp,DWORD PTR [ecx-0x52bca9]
  41adb6:	mov    WORD PTR [ecx],ds
  41adb8:	pop    ds
  41adb9:	adc    eax,0x36b24177
  41adbe:	xchg   edi,eax
  41adbf:	out    dx,al
  41adc0:	iret   
  41adc1:	push   0x20
  41adc3:	in     al,dx
  41adc4:	xchg   esp,eax
  41adc5:	xor    esp,DWORD PTR ds:[edi-0x68]
  41adc9:	adc    edx,esp
  41adcb:	or     DWORD PTR [ebp+0x748139a0],esi
  41add1:	retf   0x44f2
  41add4:	xchg   ebp,eax
  41add5:	sub    al,0x8d
  41add7:	out    0x60,al
  41add9:	xor    esp,0xad3bdeec
  41addf:	sub    al,0xd3
  41ade1:	xor    al,0x44
  41ade3:	popa   
  41ade4:	adc    eax,0x2a5285ae
  41ade9:	xor    esp,DWORD PTR [ecx+0x31f46e94]
  41adef:	das    
  41adf0:	nop
  41adf1:	push   ecx
  41adf2:	add    dl,dl
  41adf4:	or     ecx,DWORD PTR [eax-0x66]
  41adf7:	hlt    
  41adf8:	(bad)  
  41adf9:	jmp    0xbbf7:0x853b6606
  41ae00:	(bad)  
  41ae01:	cdq    
  41ae02:	loope  0x41adde
  41ae04:	and    al,0x57
  41ae06:	mov    ds:0x7e218473,al
  41ae0b:	sar    BYTE PTR [ecx],0xe1
  41ae0e:	out    dx,eax
  41ae0f:	push   ebx
  41ae10:	or     bh,BYTE PTR [eax]
  41ae12:	dec    esi
  41ae13:	dec    esi
  41ae14:	into   
  41ae15:	mov    al,ds:0x853ad3a4
  41ae1a:	sbb    ebx,DWORD PTR [edx]
  41ae1c:	jmp    DWORD PTR [edx-0x2b]
  41ae1f:	out    dx,eax
  41ae20:	mov    dl,0x2e
  41ae22:	lock mov ebx,0x2f933c52
  41ae28:	std    
  41ae29:	ins    BYTE PTR es:[edi],dx
  41ae2a:	jae    0x41ae74
  41ae2c:	not    DWORD PTR [edx+0x62]
  41ae2f:	and    ebx,eax
  41ae31:	mov    bl,0xc7
  41ae33:	jne    0x41adc9
  41ae35:	ret    
  41ae36:	or     DWORD PTR [ecx-0x59],eax
  41ae39:	out    0x85,eax
  41ae3b:	das    
  41ae3c:	scas   eax,DWORD PTR es:[edi]
  41ae3d:	fiadd  DWORD PTR [esi+0x52]
  41ae40:	aam    0xab
  41ae42:	aas    
  41ae43:	pop    ebx
  41ae44:	mov    edx,0x8fa00286
  41ae49:	mov    esp,0xf379a00c
  41ae4e:	dec    ebp
  41ae4f:	loopne 0x41ae27
  41ae51:	sub    BYTE PTR [edi+0x3d],cl
  41ae54:	fcomp  DWORD PTR [ebp-0x7bfb16b2]
  41ae5a:	test   eax,edx
  41ae5c:	mov    DWORD PTR [esi],edx
  41ae5e:	mov    ch,0x41
  41ae60:	and    ebp,DWORD PTR [ebx+eax*1+0x3da6cc3]
  41ae67:	adc    BYTE PTR [ebp-0x7fb99162],bh
  41ae6d:	gs daa 
  41ae6f:	pop    ebp
  41ae70:	add    BYTE PTR [ebp+0x57],al
  41ae73:	jmp    0x41ae9e
  41ae75:	jb     0x41aef2
  41ae77:	(bad)  
  41ae79:	leave  
  41ae7a:	add    BYTE PTR [eax+0x5a],dh
  41ae7d:	hlt    
  41ae7e:	add    DWORD PTR [ecx+0x53],0xbf6b41c3
  41ae85:	in     al,0x6c
  41ae87:	pop    es
  41ae88:	mov    ah,0x6b
  41ae8a:	stc    
  41ae8b:	je     0x41aeab
  41ae8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae8e:	xchg   ebx,eax
  41ae8f:	xor    esp,DWORD PTR [eax-0x2f047434]
  41ae95:	and    al,0xa6
  41ae97:	mov    ds:0x91b37893,eax
  41ae9c:	mov    ds:0x6795b444,al
  41aea1:	sub    edx,DWORD PTR ds:[ecx]
  41aea4:	fwait
  41aea5:	add    al,0x68
  41aea7:	pop    edi
  41aea8:	mov    dl,BYTE PTR [eax-0x220a0339]
  41aeae:	mov    dh,0xb5
  41aeb0:	jbe    0x41af2d
  41aeb2:	or     eax,0x45f73851
  41aeb7:	fucomp st(4)
  41aeb9:	mov    dl,0x64
  41aebb:	xchg   ebx,eax
  41aebc:	pushf  
  41aebd:	out    dx,al
  41aebe:	leave  
  41aebf:	aas    
  41aec0:	mov    edi,DWORD PTR ds:[ecx]
  41aec3:	pop    ds
  41aec4:	int3   
  41aec5:	int    0x1a
  41aec7:	std    
  41aec8:	fmul   st(3),st
  41aeca:	cmp    eax,0x7a87f652
  41aecf:	add    DWORD PTR [edi+eiz*2+0xa],ecx
  41aed3:	pop    es
  41aed4:	inc    ecx
  41aed5:	and    ebx,0x7331f01e
  41aedb:	mov    ch,0xbc
  41aedd:	stos   BYTE PTR es:[edi],al
  41aede:	push   ebx
  41aedf:	ins    BYTE PTR es:[edi],dx
  41aee0:	mov    WORD PTR [edx+0x59],cs
  41aee3:	rcr    DWORD PTR [edx-0x2bf97063],cl
  41aee9:	sub    cl,BYTE PTR [ebx+0x2f]
  41aeec:	(bad)  [ebp-0x11]
  41aeef:	outs   dx,BYTE PTR ds:[esi]
  41aef0:	mov    eax,ds:0xfcb9902d
  41aef5:	aaa    
  41aef6:	out    dx,al
  41aef7:	(bad)  
  41aef9:	imul   edi,DWORD PTR ds:0xc30ecdd9,0xffffffa2
  41af00:	stos   BYTE PTR es:[edi],al
  41af01:	pop    ecx
  41af02:	dec    ebp
  41af03:	ret    
  41af04:	cs mov eax,0x4acf4c98
  41af0a:	mov    bh,BYTE PTR [esi+0x3c]
  41af0d:	scas   al,BYTE PTR es:[edi]
  41af0e:	ja     0x41af8e
  41af10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af11:	and    edx,eax
  41af13:	xor    eax,ebx
  41af15:	push   ss
  41af16:	cdq    
  41af17:	in     eax,dx
  41af18:	call   0xb144:0x80c594b3
  41af1f:	inc    ebx
  41af20:	(bad)  
  41af21:	aaa    
  41af22:	sbb    esi,esp
  41af24:	cmp    al,0x8d
  41af26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af27:	mov    bl,0x89
  41af29:	or     eax,0x8e3baf29
  41af2e:	popf   
  41af2f:	and    DWORD PTR [eax-0x4c783838],esp
  41af35:	int    0x2
  41af37:	(bad)  
  41af38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af39:	add    eax,DWORD PTR [edi-0x3e]
  41af3c:	stos   BYTE PTR es:[edi],al
  41af3d:	sbb    ebx,edi
  41af3f:	xor    BYTE PTR [ebx],0xa6
  41af42:	inc    esp
  41af43:	dec    ebp
  41af44:	aas    
  41af45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af46:	lahf   
  41af47:	mov    edi,0x3a17eba0
  41af4c:	push   eax
  41af4d:	and    eax,0x18b88a8f
  41af52:	push   edx
  41af53:	inc    ebp
  41af54:	cmp    esi,DWORD PTR [ecx+0x29]
  41af57:	jnp    0x41afbf
  41af59:	jb     0x41aedd
  41af5b:	mov    WORD PTR [ecx+0x25],?
  41af5e:	jo     0x41af91
  41af60:	push   ebx
  41af61:	imul   eax,DWORD PTR [ecx],0xf11cf1b9
  41af67:	mov    ds:0x3764e025,al
  41af6c:	sub    BYTE PTR [ecx+0x22],0xb1
  41af70:	test   DWORD PTR [ebp-0x3af4d034],0xe9355c91
  41af7a:	sbb    dl,BYTE PTR [esi-0x53]
  41af7d:	xor    al,0x95
  41af7f:	out    0xb1,eax
  41af81:	add    al,BYTE PTR ds:0xf2a2955
  41af87:	fldenv [edi]
  41af89:	dec    edx
  41af8a:	bound  edi,QWORD PTR ds:0xed9b8db1
  41af90:	pop    ecx
  41af91:	(bad)  
  41af92:	cmp    dl,dl
  41af94:	mov    ds:0xcb1c55e7,eax
  41af99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af9a:	fidivr WORD PTR [esi-0x1d1a7d0d]
  41afa0:	outs   dx,DWORD PTR ds:[esi]
  41afa1:	jecxz  0x41affb
  41afa3:	sub    esi,edi
  41afa5:	pop    edi
  41afa6:	std    
  41afa7:	cmp    eax,0x9af79635
  41afac:	and    eax,0xf417b61c
  41afb1:	mov    ds:0xca0345a5,eax
  41afb6:	pcmpeqb mm3,mm3
  41afb9:	add    ebx,eax
  41afbb:	gs jno 0x41afee
  41afbe:	or     DWORD PTR [edi],edi
  41afc0:	sti    
  41afc1:	popf   
  41afc2:	ss jge 0x41aff1
  41afc5:	pop    ebp
  41afc6:	add    al,0x41
  41afc8:	mov    dl,0x38
  41afca:	mov    ds:0x7b4fb11b,eax
  41afcf:	mov    ds:0x690363f1,eax
  41afd4:	je     0x6c158605
  41afda:	push   0xf0b2f467
  41afdf:	cwde   
  41afe0:	xchg   edx,eax
  41afe1:	jnp    0x41af65
  41afe3:	fnstenv [esi+0x1a8c4bf]
  41afe9:	push   ebx
  41afea:	add    al,0x56
  41afec:	mov    eax,ds:0xb6b9e327
  41aff1:	add    BYTE PTR [ecx],ah
  41aff3:	fwait
  41aff4:	add    eax,0x7903cce8
  41aff9:	cmp    eax,0x5a416de5
  41affe:	loope  0x41b00f
  41b000:	call   0x4ae33a03
  41b005:	cmp    edx,edi
  41b007:	mov    bl,0xbd
  41b009:	jno    0x41afa8
  41b00b:	push   ecx
  41b00c:	loopne 0x41b078
  41b00e:	dec    esp
  41b00f:	cdq    
  41b010:	aaa    
  41b011:	push   ebx
  41b012:	aam    0xa4
  41b014:	push   ecx
  41b015:	ss je  0x41aff4
  41b018:	xchg   edi,eax
  41b019:	xor    bh,BYTE PTR [ebx]
  41b01b:	aad    0xe9
  41b01d:	les    esp,FWORD PTR [ebx+0x85d646c]
  41b023:	xor    DWORD PTR [ecx-0x5cb6b7ee],0xffffff8a
  41b02a:	es push 0x30
  41b02d:	xlat   BYTE PTR ds:[ebx]
  41b02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02f:	les    edx,FWORD PTR ds:0x851e62f0
  41b035:	nop
  41b036:	lock (bad) [edx]
  41b039:	stos   BYTE PTR es:[edi],al
  41b03a:	mov    BYTE PTR [esi-0x6dc5446],cl
  41b040:	psrlq  mm0,QWORD PTR [ecx]
  41b043:	fimul  WORD PTR [edi+0xb]
  41b046:	ret    
  41b047:	(bad)  
  41b048:	inc    esi
  41b049:	fst    DWORD PTR [esi+0x2e814604]
  41b04f:	into   
  41b050:	fist   WORD PTR [eax+edi*2-0x9d76b45]
  41b057:	inc    ebx
  41b058:	mul    ebx
  41b05a:	retf   0x8f7
  41b05d:	stos   BYTE PTR es:[edi],al
  41b05e:	sub    BYTE PTR [ebp-0x44],0x8b
  41b062:	xor    bh,BYTE PTR [edx]
  41b064:	(bad)  
  41b065:	xor    bh,BYTE PTR [ebx]
  41b067:	out    dx,eax
  41b068:	inc    esp
  41b069:	and    eax,0xb92876e1
  41b06e:	pop    ebp
  41b06f:	outs   dx,BYTE PTR ds:[esi]
  41b070:	adc    eax,0x843435cd
  41b075:	pop    esp
  41b076:	xor    ah,cl
  41b078:	neg    ebp
  41b07a:	and    al,0xb4
  41b07c:	int3   
  41b07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b07e:	rol    cl,1
  41b080:	sbb    al,0x35
  41b082:	xchg   ecx,eax
  41b083:	retf   
  41b084:	adc    al,0x90
  41b086:	adc    dl,BYTE PTR [ebp+0x4c]
  41b089:	jae    0x41b03c
  41b08b:	fwait
  41b08c:	cmp    BYTE PTR [eax+esi*2-0x100a6807],bh
  41b093:	cmp    DWORD PTR [ecx+0x44],0xffffff8a
  41b097:	ins    DWORD PTR es:[edi],dx
  41b098:	fcomp  QWORD PTR [ecx-0x3d]
  41b09b:	out    0x3f,al
  41b09d:	fs loop 0x41b079
  41b0a0:	loope  0x41b08b
  41b0a2:	outs   dx,BYTE PTR ds:[esi]
  41b0a3:	pop    ds
  41b0a4:	nop
  41b0a5:	imul   ebx,DWORD PTR [eax],0x7e
  41b0a8:	out    dx,al
  41b0a9:	ja     0x41b0d4
  41b0ab:	fld    DWORD PTR [esi-0x5d]
  41b0ae:	in     al,0xb
  41b0b0:	lods   al,BYTE PTR ds:[esi]
  41b0b1:	imul   edi,DWORD PTR [edi+0x4a96dcf],0xffffff94
  41b0b8:	sbb    edx,ebp
  41b0ba:	sub    DWORD PTR [ebx-0x56],esp
  41b0bd:	add    esi,DWORD PTR [edi]
  41b0bf:	xlat   BYTE PTR ds:[ebx]
  41b0c0:	xor    eax,0x8c70e38d
  41b0c5:	mov    ecx,0x287c5a0c
  41b0ca:	in     eax,0x58
  41b0cc:	inc    BYTE PTR [edx]
  41b0ce:	xchg   DWORD PTR [esi+0x22],edx
  41b0d1:	pop    edx
  41b0d2:	(bad)  
  41b0d3:	fistp  WORD PTR [ebx-0x15]
  41b0d6:	(bad)  
  41b0d8:	shl    BYTE PTR [esi+0x6c],cl
  41b0db:	sub    ebp,DWORD PTR [eax+esi*1+0x2f]
  41b0df:	mov    ebx,0x5303346a
  41b0e4:	popa   
  41b0e5:	pop    esi
  41b0e6:	mov    esp,DWORD PTR [edi-0x3dfdcd5b]
  41b0ec:	pop    esi
  41b0ed:	je     0x41b077
  41b0ef:	jmp    0x1aa3:0x6dc42c59
  41b0f6:	mov    esi,ebx
  41b0f8:	push   ebp
  41b0f9:	push   0x1b1459b6
  41b0fe:	add    edx,DWORD PTR [eax-0x72]
  41b101:	sbb    DWORD PTR [edi-0x6d6cb867],ecx
  41b107:	cmp    al,ch
  41b109:	cld    
  41b10a:	pop    ebp
  41b10b:	xchg   ecx,eax
  41b10c:	cwde   
  41b10d:	lods   al,BYTE PTR ds:[esi]
  41b10e:	jns    0x41b093
  41b110:	repnz outs dx,BYTE PTR ds:[esi]
  41b112:	xor    al,0xb2
  41b114:	cmp    BYTE PTR [esi-0x29],dl
  41b117:	xchg   ebx,eax
  41b118:	std    
  41b119:	pop    edi
  41b11a:	mov    esp,0x2fff8514
  41b11f:	addr16 aas 
  41b121:	loope  0x41b138
  41b123:	fadd   QWORD PTR [ecx+ebp*4+0x56e216fb]
  41b12a:	sub    eax,0x3e52892c
  41b12f:	inc    edx
  41b130:	and    edi,esi
  41b132:	mov    eax,ds:0xe2fca458
  41b137:	gs push ss
  41b139:	adc    bl,BYTE PTR [ecx+0x0]
  41b13c:	jne    0x41b12e
  41b13e:	push   es
  41b13f:	in     eax,dx
  41b140:	icebp  
  41b141:	fnstcw WORD PTR [eax+0x72]
  41b144:	xor    DWORD PTR fs:[eax-0x4f],edi
  41b148:	gs aam 0xf5
  41b14b:	dec    esi
  41b14c:	lahf   
  41b14d:	add    ebx,esp
  41b14f:	sub    eax,0xa8d05059
  41b154:	in     al,dx
  41b155:	xchg   BYTE PTR [ebp+0x77],bh
  41b158:	aam    0x2e
  41b15a:	stc    
  41b15b:	dec    edx
  41b15c:	fisub  DWORD PTR [ebp-0x5d]
  41b15f:	mov    esi,0xd304629c
  41b164:	push   cs
  41b165:	jle    0x41b134
  41b167:	in     al,dx
  41b168:	mov    WORD PTR [edx+0x406db28b],cs
  41b16e:	inc    ecx
  41b16f:	pop    eax
  41b170:	cdq    
  41b171:	adc    BYTE PTR [edi+0x72],ah
  41b174:	in     al,dx
  41b175:	das    
  41b176:	leave  
  41b177:	pop    es
  41b178:	mov    al,0x7a
  41b17a:	push   ebp
  41b17b:	or     BYTE PTR [ecx+0x5bb99122],al
  41b181:	in     eax,dx
  41b182:	call   DWORD PTR [ecx-0x3245095d]
  41b188:	jns    0x41b122
  41b18a:	sbb    al,0xd2
  41b18c:	jno    0x41b1e6
  41b18e:	xor    DWORD PTR [eax-0x1a],esp
  41b191:	jbe    0x41b1c4
  41b193:	sti    
  41b194:	jge    0x41b161
  41b196:	lahf   
  41b197:	push   es
  41b198:	adc    ch,al
  41b19a:	and    ah,cl
  41b19c:	push   esp
  41b19d:	inc    esp
  41b19e:	xor    cl,BYTE PTR [edx+0x142cc09b]
  41b1a4:	pop    ecx
  41b1a5:	(bad)  
  41b1a6:	arpl   bp,cx
  41b1a8:	mov    dl,0x99
  41b1aa:	adc    eax,0xca7a28f0
  41b1af:	xor    al,0xfb
  41b1b1:	sub    eax,0x98d351e0
  41b1b6:	dec    eax
  41b1b7:	(bad)  
  41b1b8:	sub    edx,DWORD PTR [ecx+ecx*1-0x40]
  41b1bc:	test   eax,0x19707222
  41b1c1:	enter  0x627d,0x40
  41b1c5:	push   esp
  41b1c6:	jg     0x41b1dd
  41b1c8:	push   ebp
  41b1c9:	inc    eax
  41b1ca:	mov    ebx,0x2f6eb29e
  41b1cf:	xchg   BYTE PTR ds:0xfe628442,cl
  41b1d5:	ins    BYTE PTR es:[edi],dx
  41b1d6:	aad    0xd8
  41b1d8:	push   ebx
  41b1d9:	or     BYTE PTR [edi-0x5cf044f0],ch
  41b1df:	int3   
  41b1e0:	lock loop 0x41b1f8
  41b1e3:	mov    ecx,0x3e6b5797
  41b1e8:	or     bh,0x22
  41b1eb:	dec    ebp
  41b1ec:	es enter 0xa22f,0x43
  41b1f1:	pop    ecx
  41b1f2:	cmp    eax,DWORD PTR [edx+0xd]
  41b1f5:	ror    DWORD PTR [edi],0xa3
  41b1f8:	fcomp  QWORD PTR [edi]
  41b1fa:	call   0xa61f:0xba1b2d3f
  41b201:	lea    esp,[edx+0x1c]
  41b204:	cmp    eax,0x420150b5
  41b209:	into   
  41b20a:	popf   
  41b20b:	push   esi
  41b20c:	push   ds
  41b20d:	add    BYTE PTR [eax-0x5c],0x83
  41b211:	push   ds
  41b212:	and    ah,BYTE PTR [esi+esi*2+0x52421452]
  41b219:	imul   esp,DWORD PTR [eax],0xc0d89c1
  41b21f:	push   ebp
  41b220:	ja     0x41b29f
  41b222:	push   cs
  41b223:	pop    esi
  41b224:	pop    edx
  41b225:	dec    edx
  41b226:	dec    ebx
  41b227:	push   0xfd185c4d
  41b22c:	dec    ebx
  41b22d:	mov    ah,0x29
  41b22f:	clc    
  41b230:	sub    al,0xf
  41b232:	inc    ecx
  41b233:	mul    BYTE PTR [esp+ebp*8-0x6c2f8cd1]
  41b23a:	or     WORD PTR ss:[eax-0x53058740],0x4f
  41b243:	jmp    0x263ee60b
  41b248:	cmp    eax,DWORD PTR [ecx]
  41b24a:	cmc    
  41b24b:	mov    WORD PTR [edx+0x5ca3660b],es
  41b251:	adc    esi,ebp
  41b253:	mov    edi,0x844807cb
  41b258:	mov    al,ds:0xbf950102
  41b25d:	jp     0x41b278
  41b25f:	mov    ds:0x93ed4187,al
  41b264:	neg    DWORD PTR [edx-0x3ebc5f64]
  41b26a:	fidivr WORD PTR [esi]
  41b26c:	mov    dl,ch
  41b26e:	into   
  41b26f:	xchg   ecx,eax
  41b270:	jmp    0xefa6:0x8c55ce6c
  41b277:	call   0x79d3a527
  41b27c:	pop    edi
  41b27d:	xchg   ebx,eax
  41b27e:	inc    ebp
  41b27f:	shr    bl,1
  41b281:	rcl    ebx,cl
  41b283:	sub    edx,DWORD PTR [esi+0x3530322a]
  41b289:	jb     0x41b25f
  41b28b:	or     DWORD PTR [ebx-0x302ba386],ecx
  41b291:	loopne 0x41b2ee
  41b293:	aad    0x13
  41b295:	(bad)  
  41b296:	push   ds
  41b297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b298:	popa   
  41b299:	xor    BYTE PTR [edx],dh
  41b29b:	mov    WORD PTR fs:[edx+0x13],gs
  41b29f:	xor    eax,0x98f4b86a
  41b2a4:	mov    dl,0x31
  41b2a6:	ret    
  41b2a7:	and    ebp,ebx
  41b2a9:	enter  0xfce0,0x90
  41b2ad:	stos   DWORD PTR es:[edi],eax
  41b2ae:	pusha  
  41b2af:	repnz and eax,0x9aa74e8d
  41b2b5:	dec    eax
  41b2b6:	sti    
  41b2b7:	mov    ecx,0x7b862dd6
  41b2bc:	sub    dl,BYTE PTR [ebp-0x79]
  41b2bf:	and    eax,0x2276920
  41b2c4:	in     al,dx
  41b2c5:	mov    ds:0xb60d7d32,al
  41b2ca:	ret    0x169d
  41b2cd:	mov    al,0xc1
  41b2cf:	cld    
  41b2d0:	sub    al,0x5b
  41b2d2:	jle    0x41b2fc
  41b2d4:	dec    esi
  41b2d5:	push   ds
  41b2d6:	sub    ch,bh
  41b2d8:	call   0x425c:0x575176f0
  41b2df:	ja     0x41b2f1
  41b2e1:	inc    edi
  41b2e2:	fstp   QWORD PTR [ebx-0x26]
  41b2e5:	add    eax,0x9c09083a
  41b2ea:	adc    eax,0xe9869b68
  41b2ef:	test   cl,0x8b
  41b2f2:	xchg   edx,eax
  41b2f3:	push   ebp
  41b2f4:	lods   al,BYTE PTR ds:[esi]
  41b2f5:	(bad)  
  41b2f6:	adc    eax,DWORD PTR [esi]
  41b2f8:	lock pop eax
  41b2fa:	call   0x91713a8b
  41b2ff:	pop    esp
  41b300:	sbb    dl,BYTE PTR ds:0xa3e9ab1f
  41b306:	aad    0x5c
  41b308:	push   ebp
  41b309:	pop    ebx
  41b30a:	gs popa 
  41b30c:	push   esi
  41b30d:	pop    eax
  41b30e:	adc    dh,bh
  41b310:	xchg   ecx,eax
  41b311:	pop    ebx
  41b312:	cli    
  41b313:	push   ss
  41b314:	cld    
  41b315:	test   al,0xd2
  41b317:	adc    BYTE PTR [eax+0x6a],al
  41b31a:	je     0x41b376
  41b31c:	inc    edi
  41b31d:	xor    al,0x89
  41b31f:	mov    eax,ds:0x750c3cb9
  41b324:	sbb    ah,BYTE PTR [esi+0x1e]
  41b327:	mov    ds:0x18e0098c,al
  41b32c:	cdq    
  41b32d:	jmp    0x41b2f9
  41b32f:	test   DWORD PTR [esi+ebx*4+0x2f],0x68fb4ff8
  41b337:	(bad)  
  41b339:	repnz xor ch,cl
  41b33c:	push   ebp
  41b33d:	repz (bad) 
  41b340:	sbb    BYTE PTR [ecx],0xab
  41b343:	mov    ecx,0xfe7262bf
  41b348:	ficomp WORD PTR [ebx+0x50]
  41b34b:	ficom  WORD PTR [eax-0x4e]
  41b34e:	shr    BYTE PTR [edi],1
  41b350:	outs   dx,DWORD PTR ds:[esi]
  41b351:	push   ds
  41b352:	in     eax,dx
  41b353:	pusha  
  41b354:	mov    ss,WORD PTR [esi+0x53]
  41b357:	mov    edx,0x6f2406d3
  41b35c:	jnp    0x41b327
  41b35e:	xlat   BYTE PTR ds:[ebx]
  41b35f:	rcl    DWORD PTR [ebx-0x19],cl
  41b362:	gs dec ebp
  41b364:	jo     0x41b34b
  41b366:	xor    bh,0xdf
  41b369:	scas   eax,DWORD PTR es:[edi]
  41b36a:	mov    dl,0xd6
  41b36c:	mov    al,ds:0x2c9fced6
  41b371:	out    0x19,al
  41b373:	js     0x41b3de
  41b375:	retf   
  41b376:	fs call 0x6bf39a90
  41b37c:	not    DWORD PTR [eax-0x6dfc0ad2]
  41b382:	idiv   DWORD PTR [ebx+0x6b331af4]
  41b388:	cmp    esi,esp
  41b38a:	ret    0x8399
  41b38d:	xor    al,0xd6
  41b38f:	mov    edx,0xd05507c6
  41b394:	in     al,dx
  41b395:	les    ebp,FWORD PTR [edx*8-0x70ea2e80]
  41b39c:	pop    edx
  41b39d:	add    al,0x2
  41b39f:	(bad)  
  41b3a1:	dec    esp
  41b3a2:	fwait
  41b3a3:	and    bl,BYTE PTR [edi]
  41b3a5:	jno    0x41b383
  41b3a7:	inc    esi
  41b3a8:	mov    eax,0x42ab1b9a
  41b3ad:	mov    bh,dh
  41b3af:	sub    DWORD PTR [ecx],ecx
  41b3b1:	rcr    ebp,0xde
  41b3b4:	mov    ds:0x5d4ec712,eax
  41b3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ba:	je     0x41b390
  41b3bc:	push   ecx
  41b3bd:	adc    ah,BYTE PTR [eax+0x60c63fe7]
  41b3c3:	outs   dx,DWORD PTR ds:[esi]
  41b3c4:	xchg   DWORD PTR [eax-0x305e781d],edi
  41b3ca:	adc    dl,BYTE PTR [ebx+0x3d]
  41b3cd:	adc    eax,0xccc52071
  41b3d2:	xor    DWORD PTR [edi-0xe882d61],edi
  41b3d8:	hlt    
  41b3d9:	xchg   ebp,eax
  41b3da:	or     eax,0x1d129248
  41b3df:	jno    0x41b388
  41b3e1:	lock sbb al,0xaf
  41b3e4:	xor    BYTE PTR [edx+0x15],0xb5
  41b3e8:	rcl    DWORD PTR [esi-0x5cba4ab6],cl
  41b3ee:	mov    dh,0x9f
  41b3f0:	cdq    
  41b3f1:	mov    edx,edi
  41b3f3:	loop   0x41b474
  41b3f5:	jo     0x41b3dd
  41b3f7:	pop    ss
  41b3f8:	lods   al,BYTE PTR ds:[esi]
  41b3f9:	in     eax,dx
  41b3fa:	and    eax,0xd985c3d8
  41b3ff:	xlat   BYTE PTR ds:[ebx]
  41b400:	mov    ah,BYTE PTR [ecx-0x4c5ffef2]
  41b406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b407:	push   cs
  41b408:	push   es
  41b409:	push   esi
  41b40a:	xchg   esp,eax
  41b40b:	fisub  DWORD PTR [ecx-0x65a34af5]
  41b411:	rcl    BYTE PTR [edx],cl
  41b413:	pusha  
  41b414:	cmp    ebp,eax
  41b416:	push   esi
  41b417:	mov    ah,0xbd
  41b419:	imul   DWORD PTR [esi]
  41b41b:	out    0xf,al
  41b41d:	inc    edi
  41b41e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41b420:	fisub  DWORD PTR [eax]
  41b422:	fistp  WORD PTR [esi-0x13]
  41b426:	dec    esi
  41b427:	xchg   ebp,esp
  41b429:	pushf  
  41b42a:	je     0x41b40a
  41b42c:	cmc    
  41b42d:	jg     0x41b40b
  41b42f:	jmp    0x2a60:0x3e00c05f
  41b436:	gs imul ecx,esp,0x7a3aae10
  41b43d:	sbb    eax,0x45be4703
  41b442:	scas   al,BYTE PTR es:[edi]
  41b443:	dec    edi
  41b444:	jp     0x41b3f6
  41b446:	mov    ch,0x1
  41b448:	ss retf 0xfd3
  41b44c:	jecxz  0x41b492
  41b44e:	jne    0x41b41b
  41b450:	or     al,0x50
  41b452:	cmc    
  41b453:	and    eax,0x491547cb
  41b458:	inc    ebx
  41b459:	mov    ah,0x1f
  41b45b:	loope  0x41b477
  41b45d:	pop    ds
  41b45e:	rcr    DWORD PTR [esi],1
  41b460:	xor    BYTE PTR [esi+0x360756f9],cl
  41b466:	push   0x82080370
  41b46b:	push   ecx
  41b46c:	div    BYTE PTR [edi+edi*4-0x584d03e3]
  41b473:	sub    BYTE PTR [ebx],bh
  41b475:	pushf  
  41b476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b477:	out    dx,al
  41b478:	push   es
  41b479:	add    DWORD PTR [edx-0x27],ebx
  41b47c:	adc    ah,dl
  41b47e:	loopne 0x41b4cf
  41b480:	aad    0x31
  41b482:	out    dx,al
  41b483:	scas   al,BYTE PTR es:[edi]
  41b484:	and    al,0x44
  41b486:	stc    
  41b487:	adc    BYTE PTR [ebp-0x3cb73b24],bh
  41b48d:	loopne 0x41b4b4
  41b48f:	add    BYTE PTR [ecx],bl
  41b491:	jmp    0xaf8d1980
  41b496:	mov    ds,WORD PTR [ecx+0x5134f849]
  41b49c:	push   eax
  41b49d:	cmp    cl,BYTE PTR [esi+0x22]
  41b4a0:	pop    es
  41b4a1:	mov    bh,0x4
  41b4a3:	mov    esp,0x65acece6
  41b4a8:	push   ecx
  41b4a9:	mov    esp,0x851970e1
  41b4ae:	add    eax,0xf37a956c
  41b4b3:	stc    
  41b4b4:	(bad)  
  41b4b5:	xchg   ebp,eax
  41b4b6:	retf   0x8f58
  41b4b9:	push   ebx
  41b4ba:	ja     0x41b47a
  41b4bc:	repnz and ah,BYTE PTR [edi-0x50]
  41b4c0:	retf   0xa681
  41b4c3:	icebp  
  41b4c4:	mov    WORD PTR [edi],ds
  41b4c6:	sub    eax,0xd5acae50
  41b4cb:	dec    ebp
  41b4cc:	test   DWORD PTR [edx-0x40c31f95],edi
  41b4d2:	mov    ecx,0x92eede47
  41b4d7:	sub    ebp,esi
  41b4d9:	lea    edi,[eax+0x6b2aacc3]
  41b4df:	in     eax,0xfb
  41b4e1:	adc    DWORD PTR [edi+ecx*2],ebx
  41b4e4:	cmp    dh,BYTE PTR [edx]
  41b4e6:	mov    cl,0x42
  41b4e8:	xor    eax,0xef68350b
  41b4ed:	aas    
  41b4ee:	mov    ch,0xcc
  41b4f0:	push   edi
  41b4f1:	dec    eax
  41b4f2:	adc    BYTE PTR [ebx+esi*1-0x55],dh
  41b4f6:	or     ebx,DWORD PTR [edx]
  41b4f8:	or     bh,BYTE PTR [eax]
  41b4fa:	adc    BYTE PTR [esi+0x46],dh
  41b4fd:	jp     0x41b558
  41b4ff:	and    esi,DWORD PTR [ebp-0x33411618]
  41b505:	loop   0x41b539
  41b507:	jno    0x41b4c8
  41b509:	pop    es
  41b50a:	stos   BYTE PTR es:[edi],al
  41b50b:	add    BYTE PTR [edi],dl
  41b50d:	push   cs
  41b50e:	stos   BYTE PTR es:[edi],al
  41b50f:	inc    ecx
  41b510:	push   0x16
  41b512:	test   ecx,0xeb4cfc89
  41b518:	sub    ecx,DWORD PTR ds:0xb80e4ce4
  41b51e:	jno    0x41b4a2
  41b520:	sbb    al,0xd9
  41b522:	je     0x41b56f
  41b524:	pop    ebp
  41b525:	cs popf 
  41b527:	cmp    cl,dh
  41b529:	in     al,dx
  41b52a:	in     eax,0x15
  41b52c:	shl    BYTE PTR [ebp+esi*1+0x24bd8b45],cl
  41b533:	and    BYTE PTR [ebx-0x52],al
  41b536:	xor    al,BYTE PTR [eax]
  41b538:	stos   DWORD PTR es:[edi],eax
  41b539:	adc    BYTE PTR [ecx+0x5e],dh
  41b53c:	ror    DWORD PTR fs:[esi+edx*8-0x6d641f6b],cl
  41b544:	sub    al,BYTE PTR [ecx+0x1686b516]
  41b54a:	jle    0x41b4d2
  41b54c:	mov    ah,0x7b
  41b54e:	mov    bl,BYTE PTR [edi]
  41b550:	inc    ecx
  41b551:	test   al,0x6c
  41b553:	push   ds
  41b554:	adc    DWORD PTR [ecx],0xffffffbd
  41b557:	pop    ss
  41b558:	push   ss
  41b559:	cmp    bl,BYTE PTR [ebx]
  41b55b:	(bad)  
  41b55c:	cmc    
  41b55d:	call   0xc004d0e2
  41b562:	xor    DWORD PTR [eax],ecx
  41b564:	xchg   esp,eax
  41b565:	dec    esi
  41b566:	fcmovnbe st,st(4)
  41b568:	lds    edi,FWORD PTR [esi-0x39]
  41b56b:	aad    0x6c
  41b56d:	(bad)  
  41b56e:	ficomp DWORD PTR [eax-0x5]
  41b571:	hlt    
  41b572:	mov    BYTE PTR [edx+ebp*4-0x3f],bl
  41b576:	mov    edx,0xa7746592
  41b57b:	inc    eax
  41b57c:	jmp    0x417f9d1f
  41b581:	int    0xc5
  41b583:	test   al,0x29
  41b585:	stos   DWORD PTR es:[edi],eax
  41b586:	test   BYTE PTR [ecx-0x26cbb312],dl
  41b58c:	popf   
  41b58d:	jns    0x41b577
  41b58f:	xchg   edx,eax
  41b590:	cmp    al,0x71
  41b592:	xlat   BYTE PTR ds:[ebx]
  41b593:	cmp    eax,0x7cb97d4
  41b598:	mov    al,ds:0xd63c77c6
  41b59d:	push   eax
  41b59e:	pop    ecx
  41b59f:	or     al,0xc
  41b5a1:	add    ah,ch
  41b5a3:	(bad)  
  41b5a4:	enter  0x139c,0xbe
  41b5a8:	ret    0xbedd
  41b5ab:	inc    edx
  41b5ac:	stc    
  41b5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ae:	pop    edx
  41b5af:	mov    cl,0x39
  41b5b1:	loop   0x41b631
  41b5b3:	mov    eax,0xfc93ca37
  41b5b8:	cvttps2pi mm3,QWORD PTR [eax-0x56]
  41b5bc:	ss push ebx
  41b5be:	xchg   edx,eax
  41b5bf:	sbb    al,0xc7
  41b5c1:	dec    eax
  41b5c2:	outs   dx,BYTE PTR ds:[esi]
  41b5c3:	fwait
  41b5c4:	cmp    edi,esi
  41b5c6:	cs stos DWORD PTR es:[edi],eax
  41b5c8:	out    dx,eax
  41b5c9:	fiadd  WORD PTR [edx+esi*8-0x11f9a084]
  41b5d0:	jo     0x41b625
  41b5d2:	push   esp
  41b5d3:	ret    0x7267
  41b5d6:	jns    0x41b647
  41b5d8:	hlt    
  41b5d9:	lods   eax,DWORD PTR ds:[esi]
  41b5da:	icebp  
  41b5db:	inc    esp
  41b5dc:	or     esp,DWORD PTR [ebx+0xeba93ea]
  41b5e2:	scas   eax,DWORD PTR es:[edi]
  41b5e3:	lock popf 
  41b5e5:	jne    0x41b5ce
  41b5e7:	and    BYTE PTR [edx-0x50a2d4c9],0x74
  41b5ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ef:	std    
  41b5f0:	and    cl,BYTE PTR [edi]
  41b5f2:	into   
  41b5f3:	repnz (bad) 
  41b5f6:	addr16 dec ebx
  41b5f8:	pop    edi
  41b5f9:	cwde   
  41b5fa:	aam    0x35
  41b5fc:	aas    
  41b5fd:	pusha  
  41b5fe:	mov    esi,DWORD PTR [edx+0x692752e7]
  41b604:	les    esi,FWORD PTR [ebp+0x3d]
  41b607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b608:	bound  ebx,QWORD PTR [ebx-0x5724ff18]
  41b60e:	scas   eax,DWORD PTR es:[edi]
  41b60f:	aam    0x17
  41b611:	cmp    DWORD PTR [esi],esp
  41b613:	adc    bl,cl
  41b615:	stc    
  41b616:	into   
  41b617:	jmp    0x41b66a
  41b619:	push   0xfffffff1
  41b61b:	mov    ebx,0xeb5ea1ec
  41b620:	add    DWORD PTR ds:0xa02eda2f,esi
  41b626:	std    
  41b627:	cli    
  41b628:	inc    ebx
  41b629:	sub    bh,BYTE PTR [edx+0x7414ac82]
  41b62f:	fcomp  QWORD PTR [eax]
  41b631:	jo     0x41b5cc
  41b633:	inc    esp
  41b634:	xor    al,0xc0
  41b636:	and    BYTE PTR [ebx],0x7e
  41b639:	add    BYTE PTR [ecx],bl
  41b63b:	xchg   ecx,eax
  41b63c:	or     al,dl
  41b63e:	push   ss
  41b63f:	sbb    DWORD PTR [edi+0x3e],esi
  41b642:	bound  ecx,QWORD PTR [ebx-0x3e7e4fab]
  41b648:	int    0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a63f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a643
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a647
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a64b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a64f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a653
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42983b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a65b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a623
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429bbf
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a62b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a62f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a633
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a637
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	shl    DWORD PTR [edi+0x72],cl
  41bf77:	test   ch,ah
  41bf79:	mov    ebx,0xd98382f9
  41bf7e:	pop    esp
  41bf7f:	add    DWORD PTR [ebx+0x7504fe39],0x14
  41bf86:	mov    eax,0x54c61043
  41bf8b:	push   0xd3397f4b
  41bf90:	mov    cl,0x4c
  41bf92:	mov    dh,0xa3
  41bf94:	js     0x41bf9d
  41bf96:	push   edi
  41bf97:	hlt    
  41bf98:	mov    dl,ch
  41bf9a:	jno    0x41bf74
  41bf9c:	xchg   DWORD PTR [esi-0x7e],eax
  41bf9f:	mov    eax,ds:0xec4304b8
  41bfa4:	(bad)  
  41bfa5:	adc    edx,ecx
  41bfa7:	push   es
  41bfa8:	rcr    BYTE PTR [edi-0x67],1
  41bfab:	outs   dx,BYTE PTR ds:[esi]
  41bfac:	inc    eax
  41bfad:	(bad)  
  41bfae:	fst    DWORD PTR [edi]
  41bfb0:	inc    ebp
  41bfb1:	mov    DWORD PTR [edx+0x55],esp
  41bfb4:	xor    eax,0xac7faac4
  41bfb9:	push   0xd5bc108a
  41bfbe:	adc    bx,0xffc7
  41bfc2:	pop    ss
  41bfc3:	mov    eax,ds:0x75f72b66
  41bfc8:	scas   al,BYTE PTR es:[edi]
  41bfc9:	test   al,0xcb
  41bfcb:	dec    esp
  41bfcc:	arpl   WORD PTR ss:[edi+eiz*2],si
  41bfd0:	pop    eax
  41bfd1:	outs   dx,BYTE PTR ds:[esi]
  41bfd2:	in     eax,dx
  41bfd3:	xchg   ebx,eax
  41bfd4:	sar    ah,1
  41bfd6:	dec    edx
  41bfd7:	sbb    eax,0x79ec4b3a
  41bfdc:	dec    esi
  41bfdd:	mov    dl,BYTE PTR [ebx+0x11]
  41bfe0:	test   al,0xcb
  41bfe2:	sbb    al,dl
  41bfe4:	aad    0x4f
  41bfe6:	mov    dl,0x23
  41bfe8:	mov    ax,ds:0x5adbf771
  41bfee:	sub    al,0xec
  41bff0:	gs call 0x2ec3:0x83f76246
  41bff8:	jle    0x41bfbc
  41bffa:	sbb    eax,0x7a15bf5
  41bfff:	inc    ebx
  41c000:	cdq    
  41c001:	dec    ebp
  41c002:	pop    edx
  41c003:	das    
  41c004:	das    
  41c005:	sub    ebx,DWORD PTR [eax-0x58]
  41c008:	sub    ecx,edx
  41c00a:	test   al,0xaf
  41c00c:	fwait
  41c00d:	or     edi,edi
  41c00f:	xor    al,0x60
  41c011:	push   ss
  41c012:	mov    cl,0x22
  41c014:	adc    DWORD PTR [ecx+0x62238729],0xfffffffb
  41c01b:	lea    ebp,[esi-0x16]
  41c01e:	sahf   
  41c01f:	fstp   DWORD PTR ss:[ecx]
  41c022:	jecxz  0x41c094
  41c024:	inc    esi
  41c025:	cmp    BYTE PTR [ebx-0x6a],cl
  41c028:	outs   dx,DWORD PTR ds:[esi]
  41c029:	jne    0x41c029
  41c02b:	sbb    cl,dh
  41c02d:	std    
  41c02e:	fwait
  41c02f:	ds pop edi
  41c031:	xchg   edi,eax
  41c032:	lock fist WORD PTR [eax]
  41c035:	lds    eax,FWORD PTR [edi-0x22c29ede]
  41c03b:	jnp    0x41c03c
  41c03d:	jge    0x41bfc9
  41c03f:	inc    ebp
  41c040:	push   ecx
  41c041:	std    
  41c042:	lea    ebp,[ebp-0x2a7dedb2]
  41c048:	sti    
  41c049:	sub    cl,0xd1
  41c04c:	pop    ebx
  41c04d:	ins    DWORD PTR es:[edi],dx
  41c04e:	popa   
  41c04f:	mov    al,0xf
  41c051:	jne    0x41c059
  41c053:	ins    DWORD PTR es:[edi],dx
  41c054:	add    ebx,esp
  41c056:	(bad)  
  41c057:	iret   
  41c058:	or     esp,edi
  41c05a:	jle    0x41c063
  41c05c:	arpl   WORD PTR [ecx+ebx*8-0x3f],dx
  41c060:	xlat   BYTE PTR ds:[ebx]
  41c061:	repz in al,0x74
  41c064:	pop    ds
  41c065:	sub    DWORD PTR [esi+0x63cdf5a0],esp
  41c06b:	out    0x7b,eax
  41c06d:	mov    esi,0xdeddb8af
  41c072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c073:	push   cs
  41c074:	dec    edx
  41c075:	dec    ebx
  41c076:	mov    ds:0xdc9e6d20,eax
  41c07b:	sbb    eax,0xd6d1ad77
  41c080:	dec    esp
  41c081:	aam    0xc4
  41c083:	xchg   esp,eax
  41c084:	clc    
  41c085:	cld    
  41c086:	inc    esi
  41c087:	lds    edx,FWORD PTR [ebx]
  41c089:	rcl    DWORD PTR [ebx+ebx*4+0x68],0x3b
  41c08e:	mov    eax,0x795cc23a
  41c093:	(bad)  
  41c094:	mov    edx,DWORD PTR [ecx+0x3aab02b]
  41c09a:	jmp    0x41c10c
  41c09c:	and    edx,esp
  41c09e:	mov    ah,0x6d
  41c0a0:	mov    gs,WORD PTR [edi+0x24]
  41c0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0a4:	(bad)  
  41c0a5:	fcom   QWORD PTR [ecx]
  41c0a7:	fdivp  st(2),st
  41c0a9:	repnz scas al,BYTE PTR es:[edi]
  41c0ab:	xchg   edx,eax
  41c0ac:	jne    0x41c04f
  41c0ae:	(bad)  
  41c0af:	jb     0x41c085
  41c0b1:	pushf  
  41c0b2:	hlt    
  41c0b3:	dec    ecx
  41c0b4:	xchg   ecx,eax
  41c0b5:	xor    dl,BYTE PTR gs:[eax+0x46]
  41c0b9:	cli    
  41c0ba:	fldcw  WORD PTR [edi+0x5b00e362]
  41c0c0:	sar    edi,cl
  41c0c2:	rcl    BYTE PTR [ebp-0xe],0x5
  41c0c6:	pop    ebx
  41c0c7:	das    
  41c0c8:	inc    edx
  41c0c9:	mov    dl,0x1c
  41c0cb:	mov    esp,0xd289816f
  41c0d0:	(bad)  
  41c0d2:	pmulhuw mm3,QWORD PTR es:[edi-0x60]
  41c0d7:	xchg   ebx,eax
  41c0d8:	xor    BYTE PTR [esi+esi*8-0x10e78587],ch
  41c0df:	jecxz  0x41c089
  41c0e1:	push   ebp
  41c0e2:	jge    0x41c153
  41c0e4:	dec    eax
  41c0e5:	icebp  
  41c0e6:	sbb    DWORD PTR [eax+0x1e909d88],0x13295a9c
  41c0f0:	repz xadd DWORD PTR [ebx+ebp*1],edi
  41c0f5:	loopne 0x41c0fb
  41c0f7:	retf   0xea89
  41c0fa:	push   ecx
  41c0fb:	addr16 xchg edx,eax
  41c0fd:	fnstenv [edi-0x28ed432c]
  41c103:	mov    ds:0xc233f32b,eax
  41c108:	push   ebp
  41c109:	cs inc eax
  41c10b:	jno    0x41c0fb
  41c10d:	nop
  41c10e:	cld    
  41c10f:	clc    
  41c110:	xor    DWORD PTR [edi-0x2b],0xffffff9a
  41c114:	jge    0x41c10c
  41c116:	in     al,dx
  41c117:	bound  esi,QWORD PTR [esi+0x48]
  41c11a:	ins    BYTE PTR es:[edi],dx
  41c11b:	std    
  41c11c:	sub    ebp,esi
  41c11e:	jno    0x41c184
  41c120:	popa   
  41c121:	pop    edi
  41c122:	jge    0x41c121
  41c124:	inc    eax
  41c125:	add    bl,BYTE PTR [ecx]
  41c127:	cmp    BYTE PTR [esi-0x5],ah
  41c12a:	and    eax,0x231142da
  41c12f:	push   edi
  41c130:	arpl   WORD PTR [edx+0x78e4a784],ax
  41c136:	lock pop ss
  41c138:	cmc    
  41c139:	or     DWORD PTR [edi+0x59792bc9],ecx
  41c13f:	popf   
  41c140:	nop
  41c141:	lds    edx,FWORD PTR [ebp-0x64]
  41c144:	int    0x89
  41c146:	arpl   WORD PTR [eax],ax
  41c148:	inc    eax
  41c149:	in     al,dx
  41c14a:	and    al,0x7
  41c14c:	xchg   esp,eax
  41c14d:	mov    dl,BYTE PTR [ebx+0x7a]
  41c150:	add    eax,0x5c6a2efb
  41c155:	ins    DWORD PTR es:[edi],dx
  41c156:	leave  
  41c157:	mov    al,ds:0x198ed456
  41c15c:	or     DWORD PTR [esi+0x5ce97d50],eax
  41c162:	mov    ebx,0x7e2dee97
  41c167:	sub    BYTE PTR [esi+edx*1],ch
  41c16a:	lds    edx,FWORD PTR [edi+0x2a14d40b]
  41c170:	sbb    edi,DWORD PTR [eax]
  41c172:	and    al,0x81
  41c174:	es in  eax,dx
  41c176:	pop    esp
  41c177:	das    
  41c178:	pop    eax
  41c179:	rcr    BYTE PTR [edi-0x1c],1
  41c17c:	jp     0x41c1c5
  41c17e:	(bad)  
  41c17f:	xchg   ebx,eax
  41c180:	jbe    0x41c1a1
  41c182:	aad    0x8
  41c184:	mov    ebp,0xfdfe5152
  41c189:	std    
  41c18a:	xchg   ecx,eax
  41c18b:	arpl   bp,si
  41c18d:	dec    ebp
  41c18e:	xchg   DWORD PTR [edi+0x6d],ecx
  41c191:	pop    ebx
  41c192:	inc    edi
  41c193:	pop    ecx
  41c194:	dec    esp
  41c195:	mov    edx,0xae65aef1
  41c19a:	xchg   esp,eax
  41c19b:	adc    al,0x73
  41c19d:	int    0x12
  41c19f:	std    
  41c1a0:	shl    DWORD PTR [ebp+0xa],0xe2
  41c1a4:	push   esi
  41c1a5:	xchg   DWORD PTR [esi],esi
  41c1a7:	fnsave [ebx+edi*4-0x79]
  41c1ab:	ja     0x41c21f
  41c1ad:	mov    ds:0x5cbb5bdf,eax
  41c1b2:	imul   esi,ebx,0x6a
  41c1b5:	outs   dx,DWORD PTR ds:[esi]
  41c1b6:	or     al,0x85
  41c1b8:	(bad)  
  41c1ba:	or     ebx,DWORD PTR [ebx+0x3a]
  41c1bd:	xchg   DWORD PTR ds:[ecx+0x6],edx
  41c1c1:	mov    ecx,0xbc54df99
  41c1c6:	sub    BYTE PTR [ecx+0x79],cl
  41c1c9:	sbb    BYTE PTR [edx-0x2e],bl
  41c1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1cd:	test   BYTE PTR [edx-0x5ead28cd],al
  41c1d3:	mov    cl,0x11
  41c1d5:	jge    0x41c1d9
  41c1d7:	push   es
  41c1d8:	pop    edx
  41c1d9:	test   ch,0x96
  41c1dc:	jno    0x41c1fd
  41c1de:	test   BYTE PTR [ebx-0x27],al
  41c1e1:	mov    dh,0x10
  41c1e3:	mov    bl,0xc2
  41c1e5:	adc    ebp,DWORD PTR [ebx]
  41c1e7:	push   eax
  41c1e8:	mov    ebp,0xc1c4338b
  41c1ed:	call   DWORD PTR [edx]
  41c1ef:	cmp    eax,0xe2d90c49
  41c1f4:	push   eax
  41c1f5:	adc    ch,BYTE PTR [ebx]
  41c1f7:	xchg   edx,eax
  41c1f8:	sbb    al,BYTE PTR [ebx+0x2b]
  41c1fb:	idiv   DWORD PTR [esp+esi*2]
  41c1fe:	mov    eax,esi
  41c200:	rcl    BYTE PTR [edi-0x18],1
  41c203:	(bad)  
  41c204:	ficom  WORD PTR [edx+eiz*1]
  41c207:	ins    BYTE PTR es:[edi],dx
  41c208:	pop    es
  41c209:	or     eax,0xe583f41e
  41c20e:	in     al,dx
  41c20f:	fstp   DWORD PTR [edx+eax*2]
  41c212:	ins    BYTE PTR es:[edi],dx
  41c213:	std    
  41c214:	cmp    bl,BYTE PTR [esi]
  41c216:	sbb    dl,BYTE PTR [edi-0x605cabfb]
  41c21c:	div    DWORD PTR [edi-0x7a7d2c53]
  41c222:	sbb    eax,0xde885127
  41c227:	or     bh,BYTE PTR es:[eax+0x9]
  41c22b:	addr16 pusha 
  41c22d:	cmp    al,0x2
  41c22f:	rcl    BYTE PTR [esi-0x29],1
  41c232:	sbb    eax,0xc39900fd
  41c237:	xchg   edi,eax
  41c238:	(bad)  
  41c23a:	sub    BYTE PTR [edx],bh
  41c23c:	lahf   
  41c23d:	in     eax,dx
  41c23e:	mov    cl,0x4a
  41c240:	mov    eax,ds:0x55b4308d
  41c245:	mov    ecx,esp
  41c247:	inc    edx
  41c248:	jo     0x41c258
  41c24a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c24b:	sbb    DWORD PTR [eax],ecx
  41c24d:	jle    0x41c28d
  41c24f:	ins    DWORD PTR es:[edi],dx
  41c250:	mov    ds:0xb219c972,eax
  41c255:	fmul   QWORD PTR [ecx-0x5ccd6762]
  41c25b:	neg    DWORD PTR [esi+edi*1-0xf6c7bcc]
  41c262:	fadd   DWORD PTR [ebx+0x3e1f707e]
  41c268:	xchg   edi,eax
  41c269:	cmp    al,0xe5
  41c26b:	imul   DWORD PTR [edx]
  41c26d:	mov    cl,0x8b
  41c26f:	dec    ebx
  41c270:	sub    ebp,DWORD PTR [esi+0x46]
  41c273:	mov    edi,0xc2068cbc
  41c278:	pop    ebp
  41c279:	je     0x41c2f9
  41c27b:	retf   0x107c
  41c27e:	pusha  
  41c27f:	sbb    dh,BYTE PTR [eax+0x4e951b73]
  41c285:	ret    
  41c286:	out    0x2c,al
  41c288:	and    dh,cl
  41c28a:	test   DWORD PTR [edx+0x6c],eax
  41c28d:	xchg   ebx,eax
  41c28e:	sub    al,0x28
  41c290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c291:	call   DWORD PTR [ebx-0x491ad8a6]
  41c297:	push   0x37
  41c299:	leave  
  41c29a:	lods   eax,DWORD PTR ds:[esi]
  41c29b:	jl     0x41c2e5
  41c29d:	icebp  
  41c29e:	int3   
  41c29f:	jge    0x41c289
  41c2a1:	aam    0x23
  41c2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2a4:	data16 test BYTE PTR gs:[edi-0x71011cc6],0xda
  41c2ad:	jle    0x41c2b4
  41c2af:	push   esi
  41c2b0:	jg     0x41c291
  41c2b2:	mov    bh,0x5f
  41c2b4:	push   ebp
  41c2b5:	pushf  
  41c2b6:	leave  
  41c2b7:	pop    ebx
  41c2b8:	pop    ss
  41c2b9:	div    eax
  41c2bb:	pop    esi
  41c2bc:	adc    al,0x31
  41c2be:	xor    al,0x2e
  41c2c0:	enter  0xed33,0xc6
  41c2c4:	xchg   esi,eax
  41c2c5:	mov    fs:0x60753cb0,al
  41c2cb:	push   es
  41c2cc:	pushw  0xaa6b
  41c2d0:	call   0xaee8:0xf6e7dba8
  41c2d7:	or     ebx,DWORD PTR ds:[ecx-0x3b]
  41c2db:	in     eax,0x2
  41c2dd:	lods   eax,DWORD PTR ds:[esi]
  41c2de:	dec    esi
  41c2df:	arpl   sp,ax
  41c2e1:	je     0x41c358
  41c2e3:	and    DWORD PTR [ecx],0xf63c1dd1
  41c2e9:	add    ebp,esp
  41c2eb:	xchg   ebp,eax
  41c2ec:	jmp    0xa654:0xacf1baa
  41c2f3:	xchg   edi,eax
  41c2f4:	test   BYTE PTR [edx+0x25bbc5e6],cl
  41c2fa:	imul   edx,ebx,0x7a
  41c2fd:	mov    dl,0xe8
  41c2ff:	sub    eax,0x8db7e8e
  41c304:	mov    WORD PTR [ebp-0x11e7b5b5],cs
  41c30a:	dec    ebp
  41c30b:	mov    esp,0x375ea4e1
  41c310:	sbb    eax,0xd09a9c4d
  41c315:	mov    ds:0x4c7ca0b3,al
  41c31a:	cwde   
  41c31b:	xchg   esi,eax
  41c31d:	mov    dh,0xfd
  41c31f:	push   cs
  41c320:	inc    esi
  41c321:	fcomp  DWORD PTR [eax-0x7eaa8175]
  41c327:	cwde   
  41c328:	imul   edx,DWORD PTR [ebx-0x76ddfaa1],0xffffff8e
  41c32f:	adc    al,0x5f
  41c331:	mov    al,0x69
  41c333:	iret   
  41c334:	adc    eax,0xdf4264b5
  41c339:	sti    
  41c33a:	loop   0x41c399
  41c33c:	inc    esi
  41c33d:	rcl    DWORD PTR [eax],1
  41c33f:	sbb    ebp,DWORD PTR [eax+0x600c36e6]
  41c345:	jp     0x41c320
  41c347:	add    BYTE PTR [edi+0x57b1fd59],ch
  41c34d:	dec    ebx
  41c34e:	test   al,0x78
  41c350:	adc    DWORD PTR [eax],ebx
  41c352:	jo     0x41c3be
  41c354:	mov    ebp,0x2569302b
  41c359:	adc    DWORD PTR [esi],esp
  41c35b:	xchg   edi,eax
  41c35c:	fwait
  41c35d:	repnz push esi
  41c35f:	jne    0x41c34f
  41c361:	mov    ah,0x8f
  41c363:	js     0x41c2f5
  41c365:	inc    ecx
  41c366:	jmp    0xfb65:0xf5509d3
  41c36d:	das    
  41c36e:	fdiv   DWORD PTR [ebx]
  41c370:	and    ebx,DWORD PTR [ecx+0x4266930d]
  41c376:	into   
  41c377:	lods   al,BYTE PTR ds:[esi]
  41c378:	repnz mov al,0x69
  41c37b:	adc    ebp,DWORD PTR [ebp+edx*8-0x1e00f10e]
  41c382:	clc    
  41c383:	enter  0xd471,0x76
  41c387:	in     eax,0x75
  41c389:	xchg   BYTE PTR [edx-0x1b505a2],cl
  41c38f:	xor    ch,bl
  41c391:	cmp    BYTE PTR ss:[ebp+0x41bee5fb],bl
  41c398:	mov    ch,BYTE PTR [esi]
  41c39a:	pop    ecx
  41c39b:	or     al,0xe3
  41c39d:	jp     0x41c3d7
  41c39f:	mov    dl,0xb4
  41c3a1:	jg     0x41c3ef
  41c3a3:	leave  
  41c3a4:	mov    gs,WORD PTR [ebp+0x29]
  41c3a7:	xchg   ecx,eax
  41c3a8:	mov    edx,0xc40bb11a
  41c3ad:	sti    
  41c3ae:	push   cs
  41c3af:	cld    
  41c3b0:	pop    esp
  41c3b1:	mov    esp,?
  41c3b3:	mov    ecx,0x8643e9a4
  41c3b8:	lock add al,0xca
  41c3bb:	stc    
  41c3bc:	xor    eax,esi
  41c3be:	out    dx,al
  41c3bf:	loop   0x41c431
  41c3c1:	pop    eax
  41c3c2:	int3   
  41c3c3:	mov    ds,WORD PTR [edx-0x50]
  41c3c6:	popa   
  41c3c7:	cld    
  41c3c8:	loop   0x41c405
  41c3ca:	jp     0x41c37d
  41c3cc:	scas   eax,DWORD PTR es:[edi]
  41c3cd:	sub    eax,0x8592d3b5
  41c3d2:	xchg   ecx,eax
  41c3d3:	imul   ecx,DWORD PTR [ecx+eax*2+0x78664c67],0xffffffcd
  41c3db:	(bad)  
  41c3dd:	stos   DWORD PTR es:[edi],eax
  41c3de:	popf   
  41c3df:	bound  ebp,QWORD PTR [ebp-0x4731efa5]
  41c3e5:	pop    edi
  41c3e6:	dec    BYTE PTR [edx-0x6b763101]
  41c3ec:	mov    ebx,ebp
  41c3ee:	jae    0x41c407
  41c3f0:	fistp  QWORD PTR [ecx+0x2aee6ad7]
  41c3f6:	les    ebx,FWORD PTR [ecx]
  41c3f8:	ins    DWORD PTR es:[edi],dx
  41c3f9:	adc    eax,0xdf4de74c
  41c3fe:	xchg   dl,dh
  41c400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c401:	mov    eax,es:0xa0eaab1c
  41c407:	dec    esp
  41c408:	js     0x41c46c
  41c40a:	xchg   esi,eax
  41c40b:	jle    0x41c467
  41c40d:	or     BYTE PTR [ebx+0xd],dh
  41c410:	out    dx,eax
  41c411:	xchg   esi,eax
  41c412:	adc    dl,dh
  41c414:	sbb    edx,eax
  41c416:	loope  0x41c473
  41c418:	xor    ch,BYTE PTR [ecx]
  41c41a:	sbb    DWORD PTR [ebp+0x3a],esi
  41c41d:	(bad)
  41c420:	shl    DWORD PTR [edi],0x98
  41c423:	mov    al,ds:0x822d9858
  41c428:	ja     0x41c3e9
  41c42a:	loope  0x41c3de
  41c42c:	lea    esp,[esi+0x2]
  41c42f:	pop    es
  41c430:	jmp    0x41c45d
  41c432:	jno    0x41c440
  41c434:	(bad)  
  41c435:	std    
  41c436:	inc    esi
  41c437:	xchg   ebx,eax
  41c438:	sub    edx,DWORD PTR [ebp-0x75]
  41c43b:	test   eax,0x3c78ebfe
  41c440:	loop   0x41c42a
  41c442:	es pop es
  41c444:	mov    edi,0xb6703a4e
  41c449:	(bad)  
  41c44a:	data16 es addr16 rol bl,cl
  41c44f:	into   
  41c450:	xor    ah,BYTE PTR [ecx+0x56]
  41c453:	mov    bl,0x13
  41c455:	push   ebp
  41c456:	pop    es
  41c457:	xchg   ebp,eax
  41c458:	imul   BYTE PTR [edi]
  41c45a:	sti    
  41c45b:	cmp    ebp,DWORD PTR [ebx-0xbd16e39]
  41c461:	popf   
  41c462:	jne    0x41c42a
  41c464:	in     eax,dx
  41c465:	push   eax
  41c466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c467:	and    al,0x11
  41c469:	lods   al,BYTE PTR ds:[esi]
  41c46a:	jle    0x41c3f6
  41c46c:	sbb    al,0xa0
  41c46e:	and    ecx,ebp
  41c470:	inc    edi
  41c471:	pop    esi
  41c472:	fdiv   DWORD PTR [ecx]
  41c474:	xor    al,0x26
  41c476:	mov    ds:0x252185b0,eax
  41c47b:	clc    
  41c47c:	xchg   ebp,eax
  41c47d:	or     ecx,ecx
  41c47f:	sahf   
  41c480:	xchg   ecx,eax
  41c481:	fld    QWORD PTR [ecx+0x7ceb4ae8]
  41c487:	scas   eax,DWORD PTR es:[edi]
  41c488:	sbb    BYTE PTR [esi+0x61853afd],0xaa
  41c48f:	push   edi
  41c490:	in     al,dx
  41c491:	adc    eax,0x30ad97f3
  41c496:	jne    0x41c4d5
  41c498:	mov    eax,ds:0xd0065230
  41c49d:	ret    
  41c49e:	scas   al,BYTE PTR es:[edi]
  41c49f:	push   eax
  41c4a0:	push   esp
  41c4a1:	lods   al,BYTE PTR ds:[esi]
  41c4a2:	sbb    eax,0x413cd68
  41c4a7:	aaa    
  41c4a8:	out    dx,eax
  41c4a9:	pop    ds
  41c4aa:	jge    0x41c4da
  41c4ac:	sbb    bl,dh
  41c4ae:	cmp    BYTE PTR [esi+0x7d],ch
  41c4b1:	ror    BYTE PTR [esi+0x3d43fd28],0x5e
  41c4b8:	or     al,0x82
  41c4ba:	daa    
  41c4bb:	call   0x24be381b
  41c4c0:	imul   edx,DWORD PTR [eax],0x60
  41c4c3:	add    al,0x1a
  41c4c5:	xor    eax,0x1285b1d7
  41c4ca:	xchg   DWORD PTR [esi+ebp*4+0x1a],ebp
  41c4ce:	xchg   esp,ecx
  41c4d0:	push   edx
  41c4d1:	xchg   esp,eax
  41c4d2:	mov    cl,BYTE PTR [ebp+eax*4-0x27]
  41c4d6:	xlat   BYTE PTR ds:[ebx]
  41c4d7:	mov    ss:0x70a03d66,al
  41c4dd:	rcl    DWORD PTR [ebp+0x63],1
  41c4e0:	xchg   ebp,eax
  41c4e1:	pop    ss
  41c4e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4e3:	push   eax
  41c4e4:	jbe    0x41c510
  41c4e6:	mov    ebx,0x61afe180
  41c4eb:	mov    bl,ah
  41c4ed:	popf   
  41c4ee:	xchg   ecx,eax
  41c4ef:	xor    al,0x59
  41c4f1:	cmp    eax,0xbe87b4b3
  41c4f6:	jmp    0x5d0b284c
  41c4fb:	clc    
  41c4fc:	outs   dx,DWORD PTR ds:[esi]
  41c4fd:	push   esp
  41c4fe:	inc    ecx
  41c4ff:	(bad)  
  41c501:	arpl   WORD PTR [ebx+eax*8+0x7a],ax
  41c505:	cmp    ch,BYTE PTR [edx]
  41c507:	adc    esp,esp
  41c509:	fwait
  41c50a:	cmp    al,0xb8
  41c50d:	push   0x4c3d1824
  41c512:	call   0x2cbde166
  41c517:	push   eax
  41c518:	fimul  DWORD PTR fs:[edi-0x54]
  41c51c:	cmp    ah,BYTE PTR [eax+0x39cf7cd6]
  41c522:	and    al,0x9c
  41c524:	xor    dh,BYTE PTR [ebp+0x2d]
  41c527:	jo     0x41c556
  41c529:	mov    ds:0xa416a9d6,al
  41c52e:	pop    ds
  41c52f:	test   BYTE PTR [edx-0x6bde38d8],0x37
  41c536:	aad    0xa0
  41c538:	pop    ds
  41c539:	sbb    eax,DWORD PTR [esi-0x2a]
  41c53c:	jne    0x41c59e
  41c53e:	inc    esp
  41c53f:	xrelease xchg BYTE PTR [edx+ebp*8-0x23fa436e],dl
  41c547:	(bad)  
  41c549:	cld    
  41c54a:	sbb    ebx,DWORD PTR [edi+0x783f1e23]
  41c550:	mov    ?,WORD PTR [ebx-0x14]
  41c553:	js     0x41c524
  41c555:	cmp    BYTE PTR [ebx],dl
  41c557:	and    al,dl
  41c559:	cmp    eax,0x3031fcff
  41c55e:	sbb    eax,0x64718b86
  41c563:	xor    DWORD PTR [esi+0x5d19d16b],esp
  41c569:	popa   
  41c56a:	inc    edx
  41c56b:	jp     0x41c503
  41c56d:	sti    
  41c56e:	cmp    BYTE PTR [ebp+0xb],ah
  41c571:	retf   
  41c572:	pop    es
  41c573:	inc    edx
  41c574:	retf   0x29cd
  41c577:	repz out dx,eax
  41c579:	sbb    dh,BYTE PTR [ebx]
  41c57b:	mov    esi,0xff8dd397
  41c580:	push   ss
  41c581:	shl    BYTE PTR [esi],1
  41c583:	push   ebp
  41c584:	push   ebp
  41c585:	mov    dl,0x77
  41c587:	mov    edi,0xc17f1ae3
  41c58c:	mov    al,dl
  41c58e:	sub    eax,0x8e08b1d0
  41c593:	test   al,0xab
  41c595:	or     DWORD PTR [eax+0x33],esp
  41c598:	out    dx,al
  41c599:	sbb    DWORD PTR [ecx+0x722df2ec],edx
  41c59f:	out    0x2a,eax
  41c5a1:	dec    edx
  41c5a2:	sbb    al,0x44
  41c5a4:	push   ds
  41c5a5:	lea    edi,[ebp-0x4e]
  41c5a8:	jb     0x41c589
  41c5aa:	(bad)  
  41c5ab:	xlat   BYTE PTR ds:[ebx]
  41c5ad:	(bad)  
  41c5ae:	fcom   QWORD PTR [edx-0x37]
  41c5b1:	popa   
  41c5b2:	mov    al,0xdb
  41c5b4:	scas   eax,DWORD PTR es:[edi]
  41c5b5:	sub    BYTE PTR [edx],cl
  41c5b7:	push   edi
  41c5b8:	jne    0x41c5d5
  41c5ba:	ror    cl,1
  41c5bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5bd:	adc    al,0x3f
  41c5bf:	lahf   
  41c5c0:	fs test dl,dl
  41c5c3:	jae    0x41c577
  41c5c5:	jb     0x41c60a
  41c5c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5c8:	push   cs
  41c5c9:	xor    al,0x1d
  41c5cb:	fldcw  WORD PTR [eax]
  41c5cd:	pop    eax
  41c5ce:	nop
  41c5cf:	inc    ebx
  41c5d0:	sbb    esp,DWORD PTR [esi+0xa6c8d34]
  41c5d6:	cmp    eax,0x93b3f5e2
  41c5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5dc:	mov    dh,0x8b
  41c5de:	repz lock fs add al,0xfa
  41c5e3:	mov    edx,0xf9231620
  41c5e8:	inc    esp
  41c5e9:	sbb    DWORD PTR [edx-0x200ec27c],ecx
  41c5ef:	mov    al,ds:0x32aa1af7
  41c5f4:	push   ebp
  41c5f5:	push   0x8d097f13
  41c5fa:	jg     0x41c5a4
  41c5fc:	dec    esp
  41c5fd:	repz and dh,ch
  41c600:	not    DWORD PTR [ecx-0x247d2f18]
  41c606:	jne    0x41c612
  41c608:	cmp    BYTE PTR [esp+eax*8+0x6e4ba176],ch
  41c60f:	aam    0x28
  41c611:	xor    edx,esi
  41c613:	mov    ebp,gs
  41c615:	add    ecx,DWORD PTR [esi-0x69]
  41c618:	ficomp DWORD PTR [edx-0x5b]
  41c61b:	mov    cl,0xb4
  41c61d:	mov    ch,0xa8
  41c61f:	ins    DWORD PTR es:[edi],dx
  41c620:	lock rol BYTE PTR [esi],cl
  41c623:	pop    es
  41c624:	stc    
  41c625:	push   ss
  41c626:	xchg   ebx,eax
  41c627:	mov    ds:0x917ee439,al
  41c62c:	in     eax,0x8c
  41c62e:	add    ebp,DWORD PTR [ebp+edi*8-0x431021fe]
  41c635:	into   
  41c636:	pop    ss
  41c637:	inc    ebp
  41c638:	(bad)  
  41c639:	inc    esi
  41c63a:	and    esi,ebp
  41c63c:	xor    eax,0xe1660645
  41c641:	ficomp DWORD PTR [edx-0x8]
  41c644:	jge    0x41c6c4
  41c646:	ja     0x41c61d
  41c648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c649:	call   0x1a1cd047
  41c64e:	iret   
  41c64f:	pop    es
  41c650:	lock in al,0x46
  41c653:	(bad)  
  41c654:	not    BYTE PTR [ebx-0x5b]
  41c657:	add    BYTE PTR [esi],ch
  41c659:	mov    edx,0xef74c4f9
  41c65e:	mov    BYTE PTR [ebp+0x6d17044d],dh
  41c664:	jecxz  0x41c68f
  41c666:	int    0x81
  41c668:	in     al,0x9e
  41c66a:	jmp    0x997b:0xef2cd2cd
  41c671:	outs   dx,BYTE PTR ds:[esi]
  41c672:	outs   dx,BYTE PTR ds:[esi]
  41c673:	not    esi
  41c675:	pushf  
  41c676:	pop    ss
  41c677:	cmp    ch,BYTE PTR [esi]
  41c679:	(bad)  
  41c67a:	mov    ecx,DWORD PTR [edx+0x674b49cd]
  41c680:	pop    ebp
  41c681:	and    dh,bh
  41c683:	arpl   WORD PTR cs:[esi+0x418e8a8b],sp
  41c68a:	dec    ecx
  41c68b:	jnp    0x41c670
  41c68d:	gs dec ebx
  41c68f:	mov    ecx,0x5cec8e64
  41c694:	sbb    cl,BYTE PTR [ebx]
  41c696:	add    eax,0xc46edcb9
  41c69b:	shr    DWORD PTR [ebp-0x75],1
  41c69e:	pop    ds
  41c69f:	sahf   
  41c6a0:	pop    esp
  41c6a1:	inc    ecx
  41c6a2:	cmp    al,0xca
  41c6a4:	cmp    DWORD PTR [ebx+0x56b35972],ecx
  41c6aa:	idiv   DWORD PTR [esi+0x53]
  41c6ad:	push   cs
  41c6ae:	push   esi
  41c6af:	rcl    edx,cl
  41c6b1:	jmp    0xcb83:0xac35387e
  41c6b8:	(bad)  
  41c6b9:	mov    ebp,0xa0d8d30b
  41c6be:	pop    edx
  41c6bf:	add    eax,esi
  41c6c1:	push   edx
  41c6c2:	mov    eax,0x3d988f49
  41c6c7:	lock popf 
  41c6c9:	push   esp
  41c6ca:	shl    DWORD PTR [ebx],0xfb
  41c6cd:	cmc    
  41c6ce:	jb     0x41c721
  41c6d0:	mov    DWORD PTR [eiz*8-0xfe41350],esp
  41c6d7:	dec    edx
  41c6d8:	shr    BYTE PTR [esp+eax*8-0x4cbc69c4],0x43
  41c6e0:	push   eax
  41c6e1:	data16 int3 
  41c6e3:	cmp    ah,BYTE PTR [ebx+0x31664ecb]
  41c6e9:	sar    DWORD PTR [esi],0xe4
  41c6ec:	cdq    
  41c6ed:	outs   dx,BYTE PTR ds:[esi]
  41c6ee:	mov    edx,0xb8a7f776
  41c6f3:	add    eax,0xc3cf5518
  41c6f8:	xor    bl,BYTE PTR [eax+0x7]
  41c6fb:	add    ebp,edi
  41c6fd:	aam    0x65
  41c6ff:	adc    bl,al
  41c701:	aad    0xd4
  41c703:	jp     0x41c69c
  41c705:	jo     0x41c6f4
  41c707:	push   ebp
  41c708:	dec    esi
  41c709:	sbb    al,0xa
  41c70b:	or     eax,0x2f4fdb85
  41c710:	(bad)
  41c714:	shr    esp,cl
  41c716:	out    0x4,al
  41c718:	sar    DWORD PTR [eax],cl
  41c71a:	rol    DWORD PTR [ebx+0x71],1
  41c71d:	fsubr  st(7),st
  41c71f:	inc    esp
  41c720:	pop    ebp
  41c721:	cli    
  41c722:	test   ah,ah
  41c724:	and    DWORD PTR [edi+ecx*1-0x5ca7a66c],ecx
  41c72b:	and    ebx,edi
  41c72d:	scas   al,BYTE PTR es:[edi]
  41c72e:	or     eax,0xa412797a
  41c733:	inc    edi
  41c734:	and    ch,BYTE PTR ds:0xf9b17815
  41c73a:	sahf   
  41c73b:	pop    ecx
  41c73c:	mov    ds:0xe206c463,eax
  41c741:	gs dec ebx
  41c743:	push   edi
  41c744:	in     eax,dx
  41c745:	fsubr  DWORD PTR ds:0x4b5452fa
  41c74b:	rol    ebp,1
  41c74d:	jmp    0x41c78f
  41c74f:	dec    esi
  41c750:	rcr    DWORD PTR [ebx+eiz*2],0x5c
  41c754:	jbe    0x41c76a
  41c756:	sbb    ebp,0xe17f95fe
  41c75c:	cli    
  41c75d:	test   DWORD PTR [ecx],0xc55ef64
  41c763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c764:	mov    bh,0x63
  41c766:	or     al,0x74
  41c768:	aam    0x9d
  41c76a:	mov    ch,0x26
  41c76c:	(bad)  
  41c76d:	jnp    0x41c6f7
  41c76f:	adc    eax,0x675ce070
  41c774:	cdq    
  41c775:	xor    DWORD PTR [eax],esp
  41c777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c778:	retf   0x250
  41c77b:	dec    edx
  41c77c:	pop    ecx
  41c77d:	(bad)  
  41c77e:	pop    ebx
  41c77f:	sub    ch,dl
  41c781:	and    ah,al
  41c783:	add    bh,bl
  41c785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c786:	dec    esp
  41c787:	aam    0xb6
  41c789:	stos   DWORD PTR es:[edi],eax
  41c78a:	inc    ebx
  41c78c:	and    ecx,esi
  41c78e:	add    eax,eax
  41c790:	icebp  
  41c791:	sub    ch,BYTE PTR [esi+0x1f]
  41c794:	sub    bl,BYTE PTR ds:0x2b146b75
  41c79a:	data16 je 0x41c805
  41c79d:	push   ebp
  41c79e:	iret   
  41c79f:	and    DWORD PTR [edi-0x1d],edi
  41c7a2:	mov    cl,0xc3
  41c7a4:	pop    ebx
  41c7a5:	add    DWORD PTR [ecx+0xa],esi
  41c7a8:	gs dec ecx
  41c7aa:	mov    WORD PTR [eax],?
  41c7ac:	(bad)  
  41c7ad:	lods   eax,DWORD PTR ds:[esi]
  41c7ae:	leave  
  41c7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b0:	xor    BYTE PTR [edx+0x25],al
  41c7b3:	mov    cl,0xd
  41c7b5:	sbb    al,0x4e
  41c7b7:	pop    ebp
  41c7b8:	xor    BYTE PTR [esi+ebx*2+0x2b],ch
  41c7bc:	std    
  41c7bd:	xchg   ecx,edx
  41c7bf:	ficomp DWORD PTR [eax+0x40]
  41c7c2:	pop    es
  41c7c3:	adc    al,0x6c
  41c7c5:	add    ah,BYTE PTR [ecx]
  41c7c7:	jns    0x41c825
  41c7c9:	push   ebx
  41c7ca:	(bad)  
  41c7cb:	aas    
  41c7cc:	mul    ebp
  41c7ce:	retf   0x8b2
  41c7d1:	leave  
  41c7d2:	stos   BYTE PTR es:[edi],al
  41c7d3:	bound  esp,QWORD PTR ds:0xc81c9a72
  41c7d9:	clc    
  41c7da:	mov    ?,WORD PTR [eax+0x47]
  41c7dd:	mov    ds:0xfc39f551,al
  41c7e2:	jns    0x41c7a1
  41c7e4:	push   eax
  41c7e5:	mov    ds:0xdf39cb6c,al
  41c7ea:	sahf   
  41c7eb:	cmp    ebx,esp
  41c7ed:	clc    
  41c7ee:	xor    ebp,DWORD PTR [ecx]
  41c7f0:	(bad)  
  41c7f1:	mov    ch,0x71
  41c7f3:	adc    al,0x79
  41c7f5:	sub    eax,0x6424f1e6
  41c7fa:	jge    0x41c81b
  41c7fc:	inc    eax
  41c7fd:	xor    al,0x9d
  41c7ff:	mov    ecx,ecx
  41c801:	out    0xda,eax
  41c803:	repnz pop edx
  41c805:	mov    ecx,0x42eb0008
  41c80a:	dec    eax
  41c80b:	fdiv   QWORD PTR [eax+0x7e]
  41c80e:	retf   0xa2ed
  41c811:	out    dx,al
  41c812:	stos   DWORD PTR es:[edi],eax
  41c813:	shr    BYTE PTR ds:0xe1f08029,1
  41c819:	cli    
  41c81a:	pop    ebp
  41c81b:	loopne 0x41c894
  41c81d:	popa   
  41c81e:	xchg   ebp,eax
  41c81f:	pusha  
  41c820:	rcr    DWORD PTR [esi-0x68],cl
  41c823:	retf   
  41c824:	mov    esp,?
  41c826:	cli    
  41c827:	mov    al,ds:0xda46a861
  41c82c:	and    al,0xd1
  41c82e:	xor    DWORD PTR [edi],ebp
  41c830:	test   dl,dh
  41c832:	pop    edi
  41c833:	and    DWORD PTR [eax+0x23],ecx
  41c836:	xor    ch,BYTE PTR [edi+0x1b]
  41c839:	aaa    
  41c83a:	sub    BYTE PTR [esp+eax*1],ah
  41c83d:	mov    ebx,0x5ff81cfd
  41c842:	test   BYTE PTR [eax-0x33],ch
  41c845:	inc    ebp
  41c846:	cmp    DWORD PTR [ecx-0x5b],ecx
  41c849:	inc    ecx
  41c84a:	and    BYTE PTR [eax+0x5ff1190b],bl
  41c850:	mov    esi,DWORD PTR ds:0x7db1035f
  41c856:	or     bh,bl
  41c858:	xor    esi,0x1a
  41c85b:	inc    esi
  41c85c:	mov    ecx,0xe7ad45b9
  41c861:	mov    al,ds:0x51a625de
  41c866:	pop    esi
  41c867:	popa   
  41c868:	sub    eax,DWORD PTR [esi]
  41c86a:	push   0xffffffdb
  41c86c:	jmp    0x417a:0xa259f1f8
  41c873:	adc    eax,0x893e93c7
  41c878:	push   edx
  41c879:	shr    DWORD PTR [eax+0xdff0d4],0x2b
  41c880:	imul   edx,ebx,0xffffffcd
  41c883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c884:	sbb    al,0xe4
  41c886:	mov    bh,0x7f
  41c888:	(bad)  
  41c889:	aad    0xb2
  41c88b:	fidivr DWORD PTR [ebp+0x6992973]
  41c891:	or     al,BYTE PTR [esi-0x11389b97]
  41c897:	mov    edi,0xed90938
  41c89c:	adc    ebx,DWORD PTR [ecx+edx*1]
  41c89f:	out    dx,al
  41c8a0:	xchg   ecx,eax
  41c8a1:	pop    ss
  41c8a2:	push   0x7492ea37
  41c8a7:	xor    ah,BYTE PTR [edi]
  41c8a9:	repz jl 0x41c8f8
  41c8ac:	test   al,0xee
  41c8ae:	push   ds
  41c8af:	aad    0x7d
  41c8b1:	and    al,0x8c
  41c8b3:	add    al,0x4
  41c8b5:	dec    esp
  41c8b6:	pop    ss
  41c8b7:	fstp   QWORD PTR [eax+0x23094c09]
  41c8bd:	pushf  
  41c8be:	inc    ebx
  41c8bf:	ss mov bl,0xaa
  41c8c2:	add    eax,DWORD PTR [esi]
  41c8c4:	adc    edx,ebp
  41c8c6:	pop    ebx
  41c8c7:	mov    eax,ds:0xe4a41be8
  41c8cc:	stos   BYTE PTR es:[edi],al
  41c8cd:	je     0x41c868
  41c8cf:	fsub   QWORD PTR [esp+edx*8-0x17]
  41c8d3:	outs   dx,DWORD PTR ds:[esi]
  41c8d4:	fwait
  41c8d5:	xor    eax,0x9edde6b0
  41c8da:	(bad)  
  41c8db:	js     0x41c8e1
  41c8dd:	sbb    ebx,edi
  41c8df:	inc    ebx
  41c8e0:	mov    edx,0x7b44b189
  41c8e5:	gs push edi
  41c8e7:	repnz outs dx,BYTE PTR ds:[esi]
  41c8e9:	jo     0x41c8c5
  41c8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ec:	xlat   BYTE PTR ds:[ebx]
  41c8ed:	ins    DWORD PTR es:[edi],dx
  41c8ee:	jecxz  0x41c960
  41c8f0:	stc    
  41c8f1:	push   0xffffffc4
  41c8f3:	push   esi
  41c8f4:	jne    0x41c908
  41c8f6:	xchg   DWORD PTR [edi],edi
  41c8f8:	inc    esp
  41c8f9:	repnz lods al,BYTE PTR ds:[esi]
  41c8fb:	(bad)  
  41c8fc:	(bad)  
  41c8fd:	scas   al,BYTE PTR es:[edi]
  41c8fe:	inc    edi
  41c8ff:	cmp    eax,DWORD PTR [edi-0x6f]
  41c902:	xchg   edx,eax
  41c903:	inc    eax
  41c904:	adc    al,0xc2
  41c906:	pop    ds
  41c907:	popf   
  41c908:	jne    0x41c8ca
  41c90a:	div    BYTE PTR [edi+0x30]
  41c90d:	mov    eax,0x479c6015
  41c912:	retf   0xabe7
  41c915:	fwait
  41c916:	loope  0x41c8d8
  41c918:	leave  
  41c919:	jg     0x41c923
  41c91b:	out    dx,al
  41c91c:	xor    eax,0xa5bf40bd
  41c921:	loopne 0x41c8e2
  41c923:	pop    eax
  41c924:	add    eax,0x592346ba
  41c929:	adc    BYTE PTR [edx-0x80],dh
  41c92c:	lods   al,BYTE PTR ds:[esi]
  41c92d:	jecxz  0x41c8b7
  41c92f:	or     eax,0x5d6ee1ea
  41c934:	mov    al,0x11
  41c936:	mov    ebx,0xfd6231a2
  41c93b:	xor    ax,0x3be3
  41c93f:	jl     0x41c8ec
  41c941:	outs   dx,BYTE PTR ds:[esi]
  41c942:	mov    ecx,esi
  41c944:	fisttp DWORD PTR [ebx-0x1b]
  41c947:	mov    al,0x70
  41c949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c94a:	mov    edx,0x8b4690f4
  41c94f:	add    BYTE PTR ds:0x3a56c,bh
  41c955:	or     al,0xb0
  41c957:	mov    cl,0x54
  41c959:	mov    ah,0x99
  41c95b:	mov    ecx,0xde2076b3
  41c960:	mov    BYTE PTR [eax-0x5ebc6217],bh
  41c966:	inc    ebx
  41c967:	js     0x41c998
  41c969:	push   edi
  41c96a:	aad    0xbb
  41c96c:	out    dx,al
  41c96d:	cli    
  41c96e:	adc    al,0x29
  41c970:	repz test edi,ebx
  41c973:	fsub   st(2),st
  41c975:	out    0xae,eax
  41c977:	dec    edi
  41c978:	int3   
  41c979:	mov    bh,0xf5
  41c97b:	add    eax,0x63e2cce9
  41c980:	push   ss
  41c981:	pop    es
  41c982:	fdivr  st,st(2)
  41c984:	mov    ebp,0xa4a471f
  41c989:	fcomp  QWORD PTR [edi+0x25]
  41c98c:	mov    BYTE PTR [edx],dl
  41c98e:	rcl    ecx,cl
  41c990:	sbb    eax,0xbe484f5d
  41c995:	adc    BYTE PTR [eax-0x1fa4127e],ah
  41c99b:	pop    eax
  41c99c:	fisttp WORD PTR [edx+0x48ae1f14]
  41c9a2:	fcmovnb st,st(2)
  41c9a4:	sbb    ebx,DWORD PTR [esp+esi*4+0x3f8a5a23]
  41c9ab:	call   0x8c80646a
  41c9b0:	sub    eax,0xa1613a1b
  41c9b5:	xlat   BYTE PTR ds:[ebx]
  41c9b6:	or     DWORD PTR [ebp-0x79],ebx
  41c9b9:	lock and DWORD PTR [bx+di],ebp
  41c9bd:	sub    DWORD PTR [edx+0x69],eax
  41c9c0:	mov    al,0xa7
  41c9c2:	pop    ebp
  41c9c3:	cmp    eax,0xf0cf58d
  41c9c8:	pop    es
  41c9c9:	jb     0x41c96a
  41c9cb:	adc    edi,DWORD PTR [ebp+edx*8-0x48]
  41c9cf:	js     0x41ca12
  41c9d1:	or     eax,0x7c614d15
  41c9d6:	pop    ecx
  41c9d7:	or     eax,0x63d27193
  41c9dc:	jge    0x41c99e
  41c9de:	sahf   
  41c9df:	pusha  
  41c9e0:	iret   
  41c9e1:	out    dx,al
  41c9e2:	popf   
  41c9e3:	adc    DWORD PTR [ebp-0x5c],esp
  41c9e6:	je     0x41c971
  41c9e8:	sbb    ah,BYTE PTR [esp+eax*2]
  41c9eb:	mov    ebx,DWORD PTR [ebx]
  41c9ed:	outs   dx,BYTE PTR ds:[esi]
  41c9ee:	and    DWORD PTR [edx+0xe],0x179f1a0c
  41c9f5:	js     0x41c9ae
  41c9f7:	and    al,BYTE PTR [eax+eax*1-0x9]
  41c9fb:	jmp    DWORD PTR [eax+0x34]
  41c9fe:	and    bl,BYTE PTR [edi]
  41ca00:	mov    ebx,esp
  41ca02:	sbb    dl,BYTE PTR [ebp-0xdc2d85d]
  41ca08:	and    ah,BYTE PTR [ebp+0x3d]
  41ca0b:	and    DWORD PTR [ebx+eax*1-0x46cf082c],ebp
  41ca12:	or     eax,0x59b9c3ce
  41ca17:	test   al,0x59
  41ca19:	div    BYTE PTR [esi]
  41ca1b:	xlat   BYTE PTR ds:[ebx]
  41ca1c:	and    eax,0x666aca65
  41ca21:	jmp    DWORD PTR [ebp-0x50]
  41ca24:	push   esp
  41ca25:	pusha  
  41ca26:	xchg   edi,eax
  41ca27:	bts    esp,ecx
  41ca2a:	mov    dl,0xc4
  41ca2c:	adc    bl,ch
  41ca2e:	xor    DWORD PTR [ecx],ebp
  41ca30:	add    edi,DWORD PTR [ebx+eax*2-0x33]
  41ca34:	xchg   BYTE PTR [ebp-0xf],al
  41ca37:	stos   DWORD PTR es:[edi],eax
  41ca38:	dec    ecx
  41ca39:	sbb    edx,DWORD PTR [edx-0x4]
  41ca3c:	test   al,0xd1
  41ca3e:	mov    ebp,0xa119b400
  41ca43:	cwde   
  41ca44:	mov    DWORD PTR [edi-0x3435acc3],ebp
  41ca4a:	in     al,dx
  41ca4b:	call   0x5da300e
  41ca50:	cmp    BYTE PTR [ebx+eiz*8+0x590d1795],bh
  41ca57:	lahf   
  41ca58:	adc    al,0xfd
  41ca5a:	dec    edx
  41ca5b:	mov    esi,0x8d355f21
  41ca60:	push   esp
  41ca61:	inc    esp
  41ca62:	ret    0x7105
  41ca65:	into   
  41ca66:	retf   0xd4b7
  41ca69:	popf   
  41ca6a:	cld    
  41ca6b:	jae    0x41ca5a
  41ca6d:	or     BYTE PTR [ecx-0xd],0x1f
  41ca71:	inc    ecx
  41ca72:	lods   eax,DWORD PTR ds:[esi]
  41ca73:	cmp    BYTE PTR [ebx-0x3b29834b],dl
  41ca79:	jg     0x41caeb
  41ca7b:	inc    eax
  41ca7c:	push   ds
  41ca7d:	mov    eax,fs:0xd3f32185
  41ca83:	(bad)  
  41ca84:	and    al,0x43
  41ca86:	dec    esi
  41ca87:	js     0x41caa6
  41ca89:	stos   DWORD PTR es:[edi],eax
  41ca8a:	adc    BYTE PTR [ecx-0x3af03aa6],0xa3
  41ca91:	push   cs
  41ca92:	or     BYTE PTR [eax-0x115cc5cc],0x83
  41ca99:	fstp   DWORD PTR [edx-0x4278c11c]
  41ca9f:	aad    0x56
  41caa1:	mov    dl,0x38
  41caa3:	cli    
  41caa4:	fistp  DWORD PTR [ecx-0x6258495f]
  41caaa:	lea    ebp,[ebx-0x70]
  41caad:	arpl   WORD PTR [ebx+0x25],dx
  41cab0:	mov    bl,0x77
  41cab2:	das    
  41cab3:	add    DWORD PTR [ecx+ebx*8-0x56],ecx
  41cab7:	mov    ebp,0x4008b58d
  41cabc:	out    0x2d,eax
  41cabe:	sti    
  41cabf:	xor    dh,BYTE PTR [ebp-0x6fe021f4]
  41cac5:	mov    eax,ds:0x9a09d99
  41caca:	popa   
  41cacb:	xlat   BYTE PTR ds:[ebx]
  41cacc:	jle    0x41cac1
  41cace:	sub    eax,ecx
  41cad0:	xchg   edx,esp
  41cad2:	add    eax,0x7b904713
  41cad7:	(bad)  
  41cad8:	cld    
  41cad9:	mov    ch,0x64
  41cadb:	mov    BYTE PTR [edx+0x3cb3567b],dh
  41cae1:	sub    DWORD PTR [edx-0x418e773],ecx
  41cae7:	shl    DWORD PTR [esi+0x55],cl
  41caea:	in     al,0x5d
  41caec:	mov    ah,bh
  41caee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caef:	add    eax,0x592d3d79
  41caf4:	in     al,dx
  41caf5:	xor    ebx,edi
  41caf7:	or     eax,0x3b5ba85a
  41cafc:	std    
  41cafd:	shl    eax,0x96
  41cb00:	jl     0x41caa3
  41cb02:	jg     0x41ca85
  41cb04:	lods   eax,DWORD PTR ds:[esi]
  41cb05:	and    edx,DWORD PTR [ecx-0x36]
  41cb08:	sbb    BYTE PTR [esi],dl
  41cb0a:	daa    
  41cb0b:	inc    esi
  41cb0c:	sbb    ch,BYTE PTR [ecx+0x5b6cd7e2]
  41cb12:	push   ecx
  41cb13:	es jmp 0x6ae:0x711088e0
  41cb1b:	fs ret 0x4408
  41cb1f:	ins    DWORD PTR es:[edi],dx
  41cb20:	push   ebx
  41cb21:	or     eax,0x59c9b273
  41cb26:	add    eax,0x209cf7b
  41cb2b:	mov    bh,0xf8
  41cb2d:	adc    eax,edx
  41cb2f:	mov    ds,ecx
  41cb31:	stos   BYTE PTR es:[edi],al
  41cb32:	jmp    0x41cb2a
  41cb34:	test   eax,0x7fb09b51
  41cb39:	add    bh,BYTE PTR [edx-0x1]
  41cb3c:	lds    ebx,FWORD PTR [esi]
  41cb3e:	ds dec edx
  41cb40:	mov    bl,0xd4
  41cb42:	imul   esi,eax,0xfffffffc
  41cb45:	pop    es
  41cb46:	aaa    
  41cb47:	loop   0x41cb59
  41cb49:	add    al,0x71
  41cb4b:	xchg   DWORD PTR [edi-0x5f145150],edi
  41cb51:	pop    ebp
  41cb52:	add    eax,0xf863600f
  41cb57:	sub    esp,ebp
  41cb59:	xchg   esi,eax
  41cb5a:	test   bh,dh
  41cb5c:	(bad)  
  41cb5d:	cli    
  41cb5e:	xor    DWORD PTR [edx],0xa728a79c
  41cb64:	daa    
  41cb65:	mov    ch,0x9f
  41cb67:	or     ecx,DWORD PTR [esi]
  41cb69:	in     eax,dx
  41cb6a:	push   esp
  41cb6b:	repz dec ebx
  41cb6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb6e:	(bad)  
  41cb6f:	jae    0x41cbac
  41cb71:	daa    
  41cb72:	fmul   QWORD PTR [ecx+esi*4]
  41cb75:	jecxz  0x41cb27
  41cb77:	cmp    al,0x33
  41cb79:	cs pop ecx
  41cb7b:	mov    edi,0x58fe517
  41cb80:	loop   0x41cb33
  41cb82:	add    bl,BYTE PTR [edi-0x10167507]
  41cb88:	lahf   
  41cb89:	inc    eax
  41cb8a:	jns    0x41cb1e
  41cb8c:	sbb    eax,0xdc985c0f
  41cb91:	jbe    0x41cc03
  41cb93:	jp     0x41cc04
  41cb95:	mov    esi,0x54b28b1d
  41cb9a:	push   cs
  41cb9b:	push   ebp
  41cb9c:	push   esi
  41cb9d:	inc    eax
  41cb9e:	data16 sub ch,BYTE PTR [eax+0x4c]
  41cba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cba3:	retf   
  41cba4:	push   es
  41cba5:	hlt    
  41cba6:	push   0x29f2b5c8
  41cbab:	aaa    
  41cbac:	pusha  
  41cbad:	sub    BYTE PTR [ecx+esi*4+0x297804b],cl
  41cbb4:	pop    esi
  41cbb5:	repnz mov edx,0x986e54a2
  41cbbb:	inc    ecx
  41cbbc:	ds dec esp
  41cbbe:	xor    eax,0x4aceed0e
  41cbc3:	ss out dx,al
  41cbc5:	stos   BYTE PTR es:[edi],al
  41cbc6:	fadd   QWORD PTR [ebx+0xc]
  41cbc9:	add    BYTE PTR [edx+0x28],0xc2
  41cbcd:	hlt    
  41cbce:	lods   al,BYTE PTR ds:[esi]
  41cbcf:	dec    esi
  41cbd0:	add    esi,DWORD PTR [edx-0x231f2fab]
  41cbd6:	stc    
  41cbd7:	inc    edx
  41cbd8:	nop
  41cbd9:	pop    esp
  41cbda:	push   edx
  41cbdb:	mov    ebp,0x337536f3
  41cbe0:	fld    TBYTE PTR [esi-0x300d2c1d]
  41cbe6:	fcomp  QWORD PTR [edi-0x35]
  41cbe9:	sub    edx,eax
  41cbeb:	repnz sbb ecx,esp
  41cbee:	push   edx
  41cbef:	xor    dh,BYTE PTR es:[edi]
  41cbf2:	ror    bl,1
  41cbf4:	int3   
  41cbf5:	in     al,0xba
  41cbf7:	add    dl,dh
  41cbf9:	imul   ebx,DWORD PTR [esi+edi*8+0x39],0xe9e4fb80
  41cc01:	(bad)  
  41cc02:	mov    ds,ebx
  41cc04:	aad    0x7d
  41cc06:	add    edx,ecx
  41cc08:	test   BYTE PTR [ebp+0x33a7c00],ah
  41cc0e:	cmp    BYTE PTR [ebx-0x6d411e6e],0x71
  41cc15:	mov    esi,db1
  41cc18:	fs add dh,0x6a
  41cc1c:	xor    bl,BYTE PTR [esi+0x51]
  41cc1f:	jle    0x41cc1e
  41cc21:	xor    esp,esp
  41cc23:	fs es add al,0x4a
  41cc27:	test   eax,0xe649a786
  41cc2c:	pop    ecx
  41cc2d:	pop    edi
  41cc2e:	pop    ebp
  41cc2f:	adc    edx,DWORD PTR [eax-0x5facaaab]
  41cc35:	inc    eax
  41cc36:	inc    edx
  41cc37:	dec    ecx
  41cc38:	cmp    dl,BYTE PTR [ecx+0x668586eb]
  41cc3e:	add    al,0xb1
  41cc40:	rol    bl,cl
  41cc42:	push   ecx
  41cc43:	pop    ecx
  41cc44:	and    BYTE PTR [ecx+ecx*8],bl
  41cc47:	cmp    DWORD PTR [eax+0x45920529],ebx
  41cc4d:	push   0x6895707
  41cc52:	jbe    0x41cc4d
  41cc54:	adc    DWORD PTR [eax-0x27],ebx
  41cc57:	xlat   BYTE PTR ds:[ebx]
  41cc58:	cld    
  41cc59:	mov    al,0x44
  41cc5b:	mov    bl,0x6c
  41cc5d:	or     eax,edx
  41cc5f:	int    0x5d
  41cc61:	mov    eax,0x3f7a91ca
  41cc66:	jl     0x41cc92
  41cc68:	and    al,0x29
  41cc6a:	out    dx,al
  41cc6b:	fbld   TBYTE PTR [ebx-0x3c779fa]
  41cc71:	or     cl,ah
  41cc73:	ret    0x2d9a
  41cc76:	pop    ss
  41cc77:	mov    ds:0xf867b344,al
  41cc7c:	leave  
  41cc7d:	mov    ebx,0x7590c9fb
  41cc82:	xor    edx,DWORD PTR [ebp+0x5a1624b0]
  41cc88:	fxch   st(2)
  41cc8a:	jmp    0xbc2f:0xe0d723ae
  41cc91:	sahf   
  41cc92:	mov    dl,0x88
  41cc94:	cwde   
  41cc95:	les    edx,FWORD PTR [eax]
  41cc97:	sbb    dl,BYTE PTR [ecx+0x4c]
  41cc9a:	sti    
  41cc9b:	sbb    edi,edi
  41cc9d:	sub    eax,0x95a1cc2
  41cca2:	push   es
  41cca3:	sahf   
  41cca4:	fwait
  41cca5:	retf   
  41cca6:	mov    ah,0x1c
  41cca8:	pop    esi
  41cca9:	mov    al,0x93
  41ccab:	add    eax,0xc9fa377e
  41ccb0:	fcmovnu st,st(4)
  41ccb2:	adc    bl,ch
  41ccb4:	sub    DWORD PTR [edi+0x385f3b68],ebp
  41ccba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccbb:	inc    ebx
  41ccbc:	jmp    0x3d81:0x1ae565e4
  41ccc3:	test   al,0x53
  41ccc5:	sbb    dh,cl
  41ccc7:	popf   
  41ccc8:	cmc    
  41ccc9:	cmp    eax,0x780a790e
  41ccce:	dec    eax
  41cccf:	std    
  41ccd0:	mov    bl,0x3b
  41ccd2:	and    dh,BYTE PTR [edi+0x32dea993]
  41ccd8:	sub    al,0x4c
  41ccda:	ds mov bh,0x2c
  41ccdd:	push   edx
  41ccde:	bound  esi,QWORD PTR [edx-0x2b]
  41cce1:	(bad)  ds:0x75453ce7
  41cce7:	mov    ebp,0xc4a1629e
  41ccec:	inc    esp
  41cced:	lds    ecx,FWORD PTR [esi+0x206de242]
  41ccf3:	dec    ebx
  41ccf4:	sub    al,0x81
  41ccf6:	lahf   
  41ccf7:	shl    BYTE PTR [ebp-0x29],cl
  41ccfa:	inc    esi
  41ccfb:	fs (bad) 
  41ccfd:	aam    0x0
  41ccff:	aam    0xb1
  41cd01:	adc    DWORD PTR [ecx-0x64e101c9],0xe0bdddd8
  41cd0b:	stos   DWORD PTR es:[edi],eax
  41cd0c:	jns    0x41ccca
  41cd0e:	loopne 0x41cd84
  41cd10:	dec    ebx
  41cd11:	add    dh,BYTE PTR [ebx-0x18]
  41cd14:	mov    ebp,0x707f4172
  41cd19:	retf   
  41cd1a:	in     eax,0x2c
  41cd1c:	fild   DWORD PTR [edx-0x6e]
  41cd1f:	paddusb mm3,QWORD PTR [ebx-0x7f270264]
  41cd26:	ss pop ds
  41cd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd29:	jle    0x41cd3c
  41cd2b:	lods   eax,DWORD PTR ds:[esi]
  41cd2c:	jmp    0x1873:0x2741ad0
  41cd33:	pop    ebp
  41cd34:	mov    BYTE PTR [ebp+eax*8+0x5e87462],0x6e
  41cd3c:	dec    edi
  41cd3d:	sub    BYTE PTR [edx+0x5],bh
  41cd40:	(bad)  
  41cd41:	mov    es,esp
  41cd43:	lahf   
  41cd44:	idiv   DWORD PTR [ecx-0x32dcfa48]
  41cd4a:	fldcw  WORD PTR [ebp-0x75]
  41cd4d:	xor    al,0xab
  41cd4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd50:	sbb    eax,0xa156599e
  41cd55:	mov    bl,0x2d
  41cd57:	icebp  
  41cd58:	fcom   DWORD PTR [esi+0x46]
  41cd5b:	das    
  41cd5c:	mov    WORD PTR [eax],fs
  41cd5e:	jb     0x41cd8b
  41cd60:	or     al,0x7e
  41cd62:	into   
  41cd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd64:	ret    
  41cd65:	cld    
  41cd66:	and    ebx,DWORD PTR [esi+0x5c]
  41cd69:	jo     0x41cd6c
  41cd6b:	addr16 (bad) 
  41cd6e:	xor    BYTE PTR [esi+0x66],ch
  41cd71:	inc    edx
  41cd72:	jmp    0xd806:0x1ed4ef6d
  41cd79:	loope  0x41cd6c
  41cd7b:	gs pop ds
  41cd7d:	(bad)  [ebx+0x5913e887]
  41cd83:	add    al,0xfd
  41cd85:	sub    DWORD PTR [edi],edx
  41cd87:	xchg   esp,eax
  41cd88:	cwde   
  41cd89:	mov    eax,0x8a4fecbc
  41cd8e:	arpl   WORD PTR [eiz*4-0x7387687],cx
  41cd95:	test   BYTE PTR [eax-0x30756db7],dl
  41cd9b:	push   ss
  41cd9c:	pushf  
  41cd9d:	(bad)  
  41cd9e:	mov    es,WORD PTR [ecx-0x13b8766f]
  41cda4:	push   edi
  41cda5:	sahf   
  41cda6:	test   esp,esp
  41cda8:	xor    al,0x9a
  41cdaa:	addr16 jne 0x41cd7b
  41cdad:	or     esp,ebx
  41cdaf:	mov    ds:0x98082004,al
  41cdb4:	je     0x41cdbf
  41cdb6:	mov    esp,0xb8414441
  41cdbb:	push   esp
  41cdbc:	loope  0x41cde2
  41cdbe:	shl    dh,cl
  41cdc0:	sahf   
  41cdc1:	sti    
  41cdc2:	out    dx,al
  41cdc3:	enter  0x39bb,0xb3
  41cdc7:	xchg   BYTE PTR [eax+0x46],cl
  41cdca:	mov    dl,0x26
  41cdcc:	cmc    
  41cdcd:	(bad)  
  41cdce:	shr    DWORD PTR [ecx+0x49e11349],1
  41cdd4:	out    0xd5,al
  41cdd6:	adc    al,0x85
  41cdd8:	pusha  
  41cdd9:	aam    0x71
  41cddb:	push   0x834b4202
  41cde0:	test   BYTE PTR [eax],al
  41cde2:	(bad)  
  41cde4:	aaa    
  41cde5:	mov    eax,ds:0x78c94947
  41cdea:	cwde   
  41cdeb:	arpl   WORD PTR [ecx+0x2ab518fa],sp
  41cdf1:	sbb    bl,BYTE PTR [ebx]
  41cdf3:	pushf  
  41cdf4:	sub    cl,BYTE PTR [eax+0x1048ec59]
  41cdfa:	mov    esp,0x13994e87
  41cdff:	push   eax
  41ce00:	(bad)  
  41ce01:	stos   BYTE PTR es:[edi],al
  41ce02:	ins    BYTE PTR es:[edi],dx
  41ce03:	(bad)  
  41ce05:	and    eax,DWORD PTR [edx+0x31b3d3af]
  41ce0b:	in     al,dx
  41ce0c:	and    al,0x82
  41ce0e:	das    
  41ce0f:	mov    eax,0xbc79e81
  41ce14:	rcl    BYTE PTR [ebx-0x6d50a231],1
  41ce1a:	int    0x55
  41ce1c:	sub    BYTE PTR ds:0x38a3c9de,bh
  41ce22:	mov    edi,0x7de7b8c6
  41ce27:	aad    0x10
  41ce29:	cli    
  41ce2a:	sub    ebx,DWORD PTR [edx+0x79]
  41ce2d:	mov    bl,0xbd
  41ce2f:	jmp    0xf469:0x2bd5686b
  41ce36:	jae    0x41ce02
  41ce38:	jo     0x41cdf0
  41ce3a:	in     al,dx
  41ce3b:	imul   ebp,edi,0xf35d48c2
  41ce41:	ds pop es
  41ce43:	jb     0x41cde8
  41ce45:	dec    ebp
  41ce46:	retf   
  41ce47:	adc    al,0x4d
  41ce49:	inc    eax
  41ce4a:	pushf  
  41ce4b:	sbb    DWORD PTR [ecx-0x739122a9],esi
  41ce51:	or     edx,DWORD PTR [ebp-0x64]
  41ce54:	shr    DWORD PTR [edx],1
  41ce56:	sbb    al,0x2f
  41ce58:	mov    cl,0x80
  41ce5a:	shl    ah,0xe1
  41ce5d:	retf   0x46a9
  41ce60:	push   ecx
  41ce61:	scas   al,BYTE PTR es:[edi]
  41ce62:	mov    dl,0x70
  41ce64:	inc    esi
  41ce65:	das    
  41ce66:	or     ebp,DWORD PTR [edi+0x32]
  41ce69:	jnp    0x41ce9b
  41ce6b:	pop    ecx
  41ce6c:	and    al,0xb4
  41ce6e:	inc    edx
  41ce6f:	or     al,0xe4
  41ce71:	jns    0x41ce78
  41ce73:	push   esi
  41ce74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce75:	mov    bl,0x76
  41ce77:	fwait
  41ce78:	cmp    eax,0xa95c7618
  41ce7d:	icebp  
  41ce7e:	xchg   DWORD PTR [eax+eiz*4-0x4697cc64],ebp
  41ce85:	leave  
  41ce86:	adc    DWORD PTR [ebx*1-0x1db166fd],ebp
  41ce8d:	ret    0x33c0
  41ce90:	fcmovu st,st(3)
  41ce92:	fldenv [ecx-0x5bf77534]
  41ce98:	dec    ecx
  41ce99:	push   es
  41ce9a:	test   BYTE PTR [ebp+0x69e5b093],bl
  41cea0:	clc    
  41cea1:	add    cx,WORD PTR [ecx-0x9]
  41cea5:	ret    0x804f
  41cea8:	in     eax,dx
  41cea9:	or     al,0x7d
  41ceab:	push   cs
  41ceac:	inc    esp
  41cead:	std    
  41ceae:	dec    ebx
  41ceaf:	dec    edx
  41ceb0:	mov    BYTE PTR cs:[edx+0x3b],dl
  41ceb4:	jne    0x41ce5d
  41ceb6:	push   edx
  41ceb7:	stc    
  41ceb8:	pop    ss
  41ceb9:	adc    al,0x46
  41cebb:	retf   
  41cebc:	add    DWORD PTR [edi],ebp
  41cebe:	and    ebx,DWORD PTR [ebx+0x6c]
  41cec1:	les    eax,FWORD PTR [ebp+0x48d05f76]
  41cec7:	and    al,0x2a
  41cec9:	ret    
  41ceca:	je     0x41ce81
  41cecc:	ret    
  41cecd:	test   al,0xb6
  41cecf:	fild   DWORD PTR [esi]
  41ced1:	add    eax,0x10ed2c58
  41ced6:	pop    ebp
  41ced7:	pop    esi
  41ced8:	int    0x69
  41ceda:	mov    fs,WORD PTR [edx+0x7129927e]
  41cee0:	icebp  
  41cee1:	mov    dl,0xe6
  41cee3:	jmp    FWORD PTR [edi+0x6f]
  41cee6:	pop    edi
  41cee7:	and    eax,0xb645cef1
  41ceec:	jno    0x41cef3
  41ceee:	pop    ds
  41ceef:	imul   ebp,DWORD PTR es:[ecx+ebp*4+0x4f659d9b],0xffffffcb
  41cef8:	fcmovbe st,st(5)
  41cefa:	and    eax,0xfdf3e70c
  41ceff:	std    
  41cf00:	popa   
  41cf01:	adc    DWORD PTR [esi],0xcde506cd
  41cf07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf08:	add    cl,bl
  41cf0a:	sbb    eax,0x8554e51b
  41cf0f:	rcl    ch,0x9c
  41cf12:	imul   esi,DWORD PTR [eax],0x75
  41cf15:	xor    ecx,DWORD PTR [ebp+0x6d8892a1]
  41cf1b:	lods   eax,DWORD PTR ds:[esi]
  41cf1c:	push   ecx
  41cf1d:	mov    edi,0x51dbd980
  41cf22:	and    eax,0xcfcf2f61
  41cf27:	adc    al,0x4e
  41cf29:	push   ebp
  41cf2a:	sar    DWORD PTR [ebp+0x28194f01],1
  41cf30:	mov    al,ds:0xe3b9a03e
  41cf35:	inc    ebp
  41cf36:	push   ecx
  41cf37:	adc    eax,0x89a21955
  41cf3c:	retf   0xd178
  41cf3f:	retf   
  41cf40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf41:	dec    ebp
  41cf42:	pop    ebp
  41cf43:	xor    edx,eax
  41cf45:	xchg   ebp,eax
  41cf46:	xor    dl,bl
  41cf48:	xchg   ebp,eax
  41cf49:	add    ecx,esi
  41cf4b:	xlat   BYTE PTR ds:[ebx]
  41cf4c:	push   esp
  41cf4d:	xor    DWORD PTR [esi-0x4bced5e4],eax
  41cf53:	xor    cl,bh
  41cf55:	ins    BYTE PTR es:[edi],dx
  41cf56:	cmp    BYTE PTR [edi+eiz*1+0x5fb99858],ah
  41cf5d:	push   eax
  41cf5e:	push   ss
  41cf5f:	jne    0x41cfaf
  41cf61:	pop    esp
  41cf62:	or     edx,DWORD PTR [eax+esi*8+0x4c7d137]
  41cf69:	arpl   WORD PTR [ecx-0x27ba1539],sp
  41cf6f:	pop    es
  41cf70:	xchg   ecx,eax
  41cf71:	mov    edi,0x8b426eca
  41cf76:	(bad)
  41cf79:	test   al,0x3c
  41cf7b:	cmp    BYTE PTR [ebp-0x21],0x86
  41cf7f:	push   ds
  41cf80:	out    0xc0,eax
  41cf82:	mov    eax,0x25cd7595
  41cf87:	test   DWORD PTR [ebx],0xe4a745a8
  41cf8d:	add    edx,DWORD PTR [eax]
  41cf8f:	mov    BYTE PTR [ecx+0x637fdb98],bl
  41cf95:	pop    edx
  41cf96:	std    
  41cf97:	sbb    al,0x56
  41cf99:	arpl   WORD PTR cs:[edi+0x228adbf2],si
  41cfa0:	retf   0x310e
  41cfa3:	push   ds
  41cfa4:	or     eax,0x7b67c60d
  41cfa9:	xchg   ebp,eax
  41cfaa:	test   eax,0xb15fb9d9
  41cfaf:	cmp    BYTE PTR [ebx-0x60],bl
  41cfb2:	div    BYTE PTR [edi]
  41cfb4:	hlt    
  41cfb5:	mov    eax,0xdfe51230
  41cfba:	jb     0x41cf96
  41cfbc:	rcl    edx,cl
  41cfbe:	cmp    DWORD PTR [ebx],edx
  41cfc0:	add    al,BYTE PTR [ebp+ebp*1-0x7d912432]
  41cfc7:	call   0x62f9:0x1ce0464a
  41cfce:	jge    0x41d034
  41cfd0:	sub    esp,DWORD PTR [ecx]
  41cfd2:	fld    QWORD PTR [ecx]
  41cfd4:	pop    eax
  41cfd5:	jno    0x41d054
  41cfd7:	and    edi,esp
  41cfd9:	aaa    
  41cfda:	xor    eax,0x6884ba0b
  41cfdf:	jne    0x41cf89
  41cfe1:	jp     0x41d057
  41cfe3:	pop    esi
  41cfe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe5:	test   al,0x6e
  41cfe7:	rcr    eax,1
  41cfe9:	pop    es
  41cfea:	idiv   BYTE PTR [ecx+0x24a54ad]
  41cff0:	push   esp
  41cff1:	fstp   TBYTE PTR [eax+0x252a4d9b]
  41cff7:	cmp    cl,0xb5
  41cffa:	and    eax,esi
  41cffc:	je     0x41cff0
  41cffe:	js     0x41d035
  41d000:	or     ecx,ebx
  41d002:	sar    DWORD PTR [ebp+0x45],0x80
  41d006:	pusha  
  41d007:	push   0x1
  41d009:	nop
  41d00a:	aaa    
  41d00b:	xor    bh,dh
  41d00d:	(bad)
  41d010:	mov    esp,0x3edb7ca9
  41d015:	cmp    al,BYTE PTR [ecx+0x5a8ac7f9]
  41d01b:	into   
  41d01c:	xor    eax,0x945de967
  41d022:	cmp    esi,DWORD PTR [ebp-0x4ef9f44b]
  41d028:	jge    0x41d0a7
  41d02a:	xchg   esp,eax
  41d02b:	pop    esi
  41d02c:	mov    cl,0x66
  41d02e:	sub    bl,BYTE PTR [eax]
  41d030:	mov    ebx,fs
  41d032:	out    0x27,eax
  41d034:	data16 lahf 
  41d036:	and    edi,DWORD PTR [edi+0x54]
  41d039:	pushf  
  41d03a:	ins    DWORD PTR es:[edi],dx
  41d03b:	dec    esp
  41d03c:	popa   
  41d03d:	sbb    al,0xdc
  41d03f:	icebp  
  41d040:	mov    al,ds:0xec66c312
  41d045:	repnz pushf 
  41d047:	repnz and edx,DWORD PTR [ebp+0x51]
  41d04b:	jb     0x41d045
  41d04d:	aaa    
  41d04e:	inc    esp
  41d04f:	pop    ebx
  41d050:	mov    al,0xb1
  41d052:	loop   0x41cffe
  41d054:	mov    esi,0xbdf9539d
  41d059:	in     eax,0xac
  41d05b:	ins    BYTE PTR es:[edi],dx
  41d05c:	outs   dx,DWORD PTR ds:[esi]
  41d05d:	xor    edi,DWORD PTR [eax+0xc]
  41d060:	lahf   
  41d061:	arpl   WORD PTR [esi+0x79348871],di
  41d067:	jp     0x41d068
  41d069:	aam    0xb8
  41d06b:	ret    
  41d06c:	in     al,dx
  41d06d:	push   ss
  41d06e:	jle    0x41d026
  41d070:	xchg   esp,eax
  41d071:	mov    esp,0xd63363b8
  41d076:	shr    DWORD PTR [ebx+eiz*4-0x10],0x45
  41d07b:	and    dh,ch
  41d07d:	(bad)  
  41d07f:	mov    eax,ds:0x4aee884
  41d084:	fnstcw WORD PTR [ebp+0x739366be]
  41d08a:	stc    
  41d08b:	push   0x28673afa
  41d090:	mov    eax,ds:0xd046546
  41d095:	lahf   
  41d096:	in     al,dx
  41d097:	pop    ss
  41d098:	lock sub ebp,DWORD PTR [ebp-0x1378e707]
  41d09f:	sbb    bl,BYTE PTR [edx-0x1c]
  41d0a2:	in     eax,dx
  41d0a3:	cld    
  41d0a4:	pop    ds
  41d0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a6:	outs   dx,DWORD PTR ds:[esi]
  41d0a7:	adc    eax,0x1fdffe27
  41d0ac:	inc    ebx
  41d0ad:	jns    0x41d08e
  41d0af:	and    eax,0x3bd5c5f
  41d0b4:	lods   eax,DWORD PTR ds:[esi]
  41d0b5:	cwde   
  41d0b6:	sbb    eax,0xe5aca363
  41d0bb:	in     al,dx
  41d0bc:	add    eax,0xc54f71f3
  41d0c1:	not    BYTE PTR [ebx-0xbe72cb8]
  41d0c7:	sahf   
  41d0c8:	cmp    edx,DWORD PTR [ecx+0x61a52386]
  41d0ce:	sbb    DWORD PTR ds:0xf3b0675e,eax
  41d0d4:	ins    DWORD PTR es:[edi],dx
  41d0d5:	and    DWORD PTR [ecx],edx
  41d0d7:	fdivp  st(5),st
  41d0d9:	outs   dx,BYTE PTR ds:[esi]
  41d0da:	fnstsw WORD PTR [eax]
  41d0dc:	xchg   edx,eax
  41d0dd:	fstp   TBYTE PTR ds:0xed2efef9
  41d0e3:	jb     0x41d0b1
  41d0e5:	mov    ds:0xbb283a6e,al
  41d0ea:	adc    cl,bh
  41d0ec:	ins    BYTE PTR es:[edi],dx
  41d0ed:	mov    edx,0x9461e904
  41d0f2:	adc    BYTE PTR ds:0x92ecc2b4,dl
  41d0f8:	cmp    DWORD PTR [esi-0x2c2af91c],edi
  41d0fe:	dec    edx
  41d0ff:	(bad)  
  41d101:	pop    esp
  41d102:	nop
  41d103:	je     0x41d116
  41d105:	rcl    esi,cl
  41d107:	adc    eax,0x145fbf33
  41d10c:	adc    eax,0xd0a7ca77
  41d111:	in     al,0xcc
  41d113:	xor    BYTE PTR [eax],0x11
  41d116:	dec    edx
  41d117:	pop    esi
  41d118:	mov    dl,0xf7
  41d11a:	mov    edi,0xe94c7281
  41d11f:	not    DWORD PTR [ebx]
  41d121:	and    BYTE PTR [eax],al
  41d123:	das    
  41d124:	leave  
  41d125:	add    ah,dh
  41d127:	or     BYTE PTR [edx-0x7928e6cd],dl
  41d12d:	or     DWORD PTR [ebx+eax*8],ecx
  41d130:	push   ecx
  41d131:	xor    eax,0x6035332a
  41d136:	sbb    BYTE PTR fs:[ebx+0x72],0x8e
  41d13b:	xor    al,0x1
  41d13d:	jmp    0x6b81:0x718b379b
  41d144:	xor    bh,bl
  41d146:	cmp    BYTE PTR [esi+0x7d59edd7],cl
  41d14c:	mov    bl,0xc4
  41d14e:	sub    ecx,0x3ec7997
  41d154:	lock and eax,0xc62d527f
  41d15a:	aad    0xef
  41d15c:	push   eax
  41d15d:	cli    
  41d15e:	sub    eax,0x61d2b189
  41d163:	pop    ebx
  41d165:	or     DWORD PTR [ecx+eax*2],ebx
  41d168:	sub    al,0xcd
  41d16a:	sub    edi,DWORD PTR [ebx+0x10204db]
  41d170:	cld    
  41d171:	repz jo 0x41d15f
  41d174:	jge    0x41d11b
  41d176:	(bad)  
  41d177:	mov    ds:0x2f9582e8,eax
  41d17c:	shr    BYTE PTR [esi+eax*1-0x20],1
  41d180:	popa   
  41d181:	xchg   DWORD PTR [edi],eax
  41d183:	jmp    0xc2731ae
  41d188:	mov    dl,0xb7
  41d18a:	sbb    esi,esi
  41d18c:	dec    ebx
  41d18d:	dec    eax
  41d18e:	cmp    bl,al
  41d190:	and    eax,0xd6a24fbf
  41d195:	sahf   
  41d196:	push   0xffffffa0
  41d198:	mov    al,ds:0xf34e1bd6
  41d19d:	lods   eax,DWORD PTR ds:[esi]
  41d19e:	pop    ecx
  41d19f:	push   esi
  41d1a0:	popf   
  41d1a1:	jl     0x41d16a
  41d1a3:	lods   al,BYTE PTR ds:[esi]
  41d1a4:	sahf   
  41d1a5:	jg     0x41d1a7
  41d1a7:	push   ebx
  41d1a8:	inc    ebx
  41d1a9:	mov    al,ds:0x57271495
  41d1ae:	clc    
  41d1af:	neg    BYTE PTR [edi+edi*4-0x6c24335]
  41d1b6:	clc    
  41d1b7:	xchg   esp,eax
  41d1b8:	and    eax,0xe13781e9
  41d1bd:	in     al,0x4
  41d1bf:	call   0x2dac:0xb5eb4018
  41d1c6:	outs   dx,BYTE PTR fs:[esi]
  41d1c8:	add    BYTE PTR [edx-0x2b8adb4c],ah
  41d1ce:	stos   BYTE PTR es:[edi],al
  41d1cf:	popa   
  41d1d0:	aam    0xaa
  41d1d2:	sub    cl,BYTE PTR [eax-0x2f]
  41d1d5:	pop    edi
  41d1d6:	mul    DWORD PTR [ecx]
  41d1d8:	loop   0x41d232
  41d1da:	sahf   
  41d1db:	mov    WORD PTR [esi],es
  41d1dd:	mov    ds:0xc4424b10,al
  41d1e2:	leave  
  41d1e3:	fsubr  QWORD PTR [edi+0x3b]
  41d1e6:	xor    bh,al
  41d1e8:	adc    BYTE PTR [ecx+0x19],dh
  41d1eb:	xchg   edx,eax
  41d1ec:	xchg   bh,dl
  41d1ee:	dec    ebp
  41d1ef:	jecxz  0x41d204
  41d1f1:	or     eax,0xaa02cbce
  41d1f6:	add    ecx,ebp
  41d1f8:	cmp    DWORD PTR [ecx-0x3f83fb26],ebx
  41d1fe:	jmp    0x61e6:0xa13e551b
  41d205:	jmp    0x1e83a3df
  41d20a:	pop    edx
  41d20b:	dec    edi
  41d20c:	pop    ebx
  41d20d:	bound  eax,QWORD PTR [ebx]
  41d20f:	dec    eax
  41d210:	xchg   DWORD PTR [ecx],ebp
  41d212:	das    
  41d213:	jmp    0x2fa3:0x16dfaced
  41d21a:	in     eax,0x8
  41d21c:	add    al,BYTE PTR [ebx+eax*2-0x2fd44320]
  41d223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d224:	fwait
  41d225:	pop    eax
  41d226:	mov    ds:0x87aa2468,eax
  41d22b:	jp     0x41d28c
  41d22d:	js     0x41d1c9
  41d22f:	in     al,0x9f
  41d231:	cdq    
  41d232:	retf   
  41d233:	lods   al,BYTE PTR ds:[esi]
  41d234:	push   ss
  41d235:	neg    BYTE PTR [esi+eax*1-0x44615cf0]
  41d23c:	je     0x41d27d
  41d23e:	add    DWORD PTR [esi+0x53],0x53
  41d242:	push   es
  41d243:	jb     0x41d1ff
  41d245:	stos   BYTE PTR es:[edi],al
  41d246:	mov    WORD PTR [edi+0x1ba89c3d],fs
  41d24c:	mov    ds:0xa8e3598c,eax
  41d251:	call   0xb2c3:0x2107f36a
  41d258:	in     al,dx
  41d259:	inc    edx
  41d25a:	test   DWORD PTR [edx+0x18],ebx
  41d25d:	sbb    DWORD PTR [esi+0x70],esi
  41d260:	cmp    cl,cl
  41d262:	fiadd  DWORD PTR [edx-0x2c]
  41d265:	popa   
  41d266:	lock jp 0x41d2bc
  41d269:	imul   ebp,DWORD PTR ds:0xc7349600,0x3a218783
  41d273:	fidiv  DWORD PTR [esi+0x29c7df6a]
  41d279:	mov    al,0x23
  41d27b:	mov    BYTE PTR [eax+0x1a],ah
  41d27e:	arpl   WORD PTR [eax+0x42],sp
  41d281:	add    BYTE PTR [esp+ebp*8+0x27],ch
  41d285:	and    BYTE PTR [eax],al
  41d287:	xor    ebp,DWORD PTR [esi+ecx*2-0x77]
  41d28b:	dec    eax
  41d28c:	aam    0xed
  41d28e:	in     eax,0x5c
  41d290:	dec    esp
  41d291:	xchg   DWORD PTR [edx+0x6c9df867],eax
  41d297:	(bad)  
  41d298:	(bad)  
  41d299:	gs fyl2xp1 
  41d29c:	sti    
  41d29d:	call   DWORD PTR [eax]
  41d29f:	hlt    
  41d2a0:	sar    BYTE PTR [ebp-0x183bb7a2],cl
  41d2a6:	cmp    al,0x7a
  41d2a8:	out    0x8e,al
  41d2aa:	xor    edi,esp
  41d2ac:	mov    ah,0x1
  41d2ae:	pop    ebx
  41d2af:	dec    edx
  41d2b0:	xchg   ebp,eax
  41d2b1:	add    bl,BYTE PTR [eax]
  41d2b3:	push   0x39
  41d2b5:	pop    ds
  41d2b6:	dec    esi
  41d2b7:	inc    ecx
  41d2b8:	stc    
  41d2b9:	or     eax,0x11ddda4e
  41d2be:	mov    al,0xfd
  41d2c0:	mov    ds:0xa59b9b78,eax
  41d2c5:	bound  edi,QWORD PTR [ecx+0x3f]
  41d2c8:	ins    DWORD PTR es:[edi],dx
  41d2c9:	fs and bh,dl
  41d2cc:	retf   0x88d3
  41d2cf:	icebp  
  41d2d0:	inc    ecx
  41d2d1:	(bad)
  41d2d4:	add    al,0x4a
  41d2d6:	out    dx,al
  41d2d7:	push   cs
  41d2d8:	stos   BYTE PTR es:[edi],al
  41d2d9:	push   ds
  41d2da:	fld    TBYTE PTR [ebp-0x4effbd40]
  41d2e0:	ins    DWORD PTR es:[edi],dx
  41d2e1:	rcl    DWORD PTR [edi-0x54],0x6d
  41d2e5:	mov    ch,0xe3
  41d2e7:	add    ch,BYTE PTR [eax]
  41d2e9:	(bad)  
  41d2ea:	fld    QWORD PTR [ebx+0x37790b12]
  41d2f0:	cmp    cl,BYTE PTR [edi]
  41d2f2:	xchg   esp,eax
  41d2f3:	dec    edx
  41d2f4:	pop    ss
  41d2f5:	int    0x1
  41d2f7:	pop    eax
  41d2f8:	add    BYTE PTR [eax],dl
  41d2fa:	iret   
  41d2fb:	or     cl,ch
  41d2fd:	cmp    edx,DWORD PTR [esi]
  41d2ff:	or     dh,BYTE PTR [ebx]
  41d301:	push   ds
  41d302:	xor    esi,ebp
  41d304:	lods   al,BYTE PTR ds:[esi]
  41d305:	bound  edi,QWORD PTR [eax]
  41d307:	jle    0x41d2ea
  41d309:	pop    ds
  41d30a:	or     ecx,DWORD PTR [eax+0x12bcbc9c]
  41d310:	rcl    DWORD PTR [ebx],cl
  41d312:	clc    
  41d313:	out    0xfd,eax
  41d315:	jmp    0x41d2d7
  41d317:	inc    esi
  41d318:	(bad)
  41d31d:	test   al,0x9f
  41d31f:	in     eax,0xb4
  41d321:	mov    BYTE PTR [edi],bl
  41d323:	jmp    0xed2f41ab
  41d328:	mov    WORD PTR [esi-0x1d3ff915],?
  41d32e:	in     eax,0x8f
  41d330:	add    dl,ah
  41d332:	xchg   DWORD PTR [esp+ebx*4],eax
  41d335:	xor    eax,DWORD PTR [edi-0x35]
  41d338:	pop    edi
  41d339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d33a:	pmaxub mm2,QWORD PTR [ebp+0x4b]
  41d33e:	sub    DWORD PTR [ebx-0x40cecddc],esp
  41d344:	ficom  WORD PTR [ecx+esi*1]
  41d347:	loopne 0x41d2ef
  41d349:	fninit 
  41d34b:	daa    
  41d34c:	xchg   BYTE PTR [edi-0x2e58c97],dl
  41d352:	sti    
  41d353:	bound  ecx,QWORD PTR [ebx]
  41d355:	and    eax,0xc061eb87
  41d35a:	push   ss
  41d35b:	into   
  41d35c:	shl    BYTE PTR [eax-0x1be01829],0x1b
  41d363:	inc    ecx
  41d364:	pusha  
  41d365:	fistp  WORD PTR [esi+0x35]
  41d368:	sar    DWORD PTR [esp+esi*1+0x48a3be],cl
  41d36f:	cdq    
  41d370:	(bad)  
  41d371:	push   cs
  41d372:	pop    edi
  41d373:	addr16 jne 0x41d306
  41d376:	rcr    BYTE PTR [ebx],cl
  41d378:	and    al,0x52
  41d37a:	or     cl,BYTE PTR [ebx+0x6f]
  41d37d:	dec    esi
  41d37e:	mov    ch,0xa8
  41d380:	in     eax,dx
  41d381:	(bad)  
  41d382:	and    ch,BYTE PTR ds:0x54af1069
  41d388:	mov    esi,0xd3fdda2b
  41d38d:	fwait
  41d38e:	lods   al,BYTE PTR ds:[esi]
  41d38f:	cmp    DWORD PTR [ecx],ebx
  41d391:	xchg   esi,eax
  41d392:	imul   edi,DWORD PTR [ebx],0x17a36c28
  41d398:	jbe    0x41d32b
  41d39a:	(bad)  
  41d39b:	js     0x41d407
  41d39d:	mov    cl,BYTE PTR [edx-0xc]
  41d3a0:	jns    0x41d35d
  41d3a2:	mov    fs,WORD PTR [bp-0x25]
  41d3a6:	in     al,dx
  41d3a7:	fild   WORD PTR [eax-0x10]
  41d3aa:	psubw  mm3,mm4
  41d3ad:	outs   dx,DWORD PTR ds:[esi]
  41d3ae:	or     BYTE PTR [edi+0x1a],ah
  41d3b1:	nop
  41d3b2:	jp     0x41d40a
  41d3b4:	pminub mm6,QWORD PTR [ebp+0x57ae7f2e]
  41d3bb:	outs   dx,DWORD PTR ds:[esi]
  41d3bc:	mov    dh,0x80
  41d3be:	sar    BYTE PTR [ebx-0x7bb9bcd7],0xe4
  41d3c5:	mov    BYTE PTR ds:0x9c81c3c4,0x93
  41d3cc:	pop    ebx
  41d3cd:	(bad)  
  41d3ce:	in     eax,dx
  41d3cf:	scas   al,BYTE PTR es:[edi]
  41d3d0:	das    
  41d3d1:	adc    bh,BYTE PTR [ebx]
  41d3d3:	imul   edx,DWORD PTR [edi-0x1e75c632],0x88cadcdd
  41d3dd:	jno    0x41d417
  41d3df:	xor    eax,0x9fd2ebd
  41d3e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3e5:	out    dx,eax
  41d3e6:	js     0x41d3da
  41d3e8:	daa    
  41d3e9:	sbb    eax,0xda8328ca
  41d3ee:	sub    dh,bl
  41d3f0:	bound  ebp,QWORD PTR [edi+0x685c8638]
  41d3f6:	retf   
  41d3f7:	test   edx,0xed52df01
  41d3fd:	mov    ds:0x1cc0728,al
  41d402:	push   ebx
  41d403:	int    0x63
  41d405:	in     al,0x29
  41d407:	or     edx,DWORD PTR [eax]
  41d409:	adc    dh,BYTE PTR [edx]
  41d40b:	or     DWORD PTR [ecx],eax
  41d40d:	and    bh,ah
  41d40f:	scas   al,BYTE PTR es:[edi]
  41d410:	push   edx
  41d411:	gs pop esp
  41d413:	xchg   esi,eax
  41d414:	ret    0x9c50
  41d417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d418:	sbb    al,0x5d
  41d41a:	sbb    ah,BYTE PTR [edx]
  41d41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41d:	mov    esp,eax
  41d41f:	jle    0x41d44e
  41d421:	xchg   ecx,ebx
  41d423:	xor    BYTE PTR [edi+eax*2],ch
  41d426:	jbe    0x41d455
  41d428:	imul   eax,DWORD PTR [ecx-0x1f],0x6c
  41d42c:	aas    
  41d42d:	outs   dx,BYTE PTR ds:[esi]
  41d42e:	inc    ebx
  41d42f:	mov    dh,0xc7
  41d431:	sub    BYTE PTR [edx],dh
  41d433:	xlat   BYTE PTR ds:[ebx]
  41d434:	gs mov ah,0x70
  41d437:	das    
  41d438:	fs xchg esi,eax
  41d43a:	mov    edi,0x5ea3c9d5
  41d43f:	sub    esp,ecx
  41d441:	fsubr  DWORD PTR [esi-0x4fa49976]
  41d447:	xchg   edi,eax
  41d448:	add    al,0x2c
  41d44a:	cld    
  41d44b:	addr16 mov dl,0x73
  41d44e:	rcr    DWORD PTR [edi+0x1766ba88],1
  41d454:	sti    
  41d455:	xor    cl,bh
  41d457:	or     edx,eax
  41d459:	dec    edi
  41d45a:	mov    bh,bl
  41d45c:	xor    bh,ch
  41d45e:	imul   ebx,DWORD PTR [edi+0x41693c7f],0xb
  41d465:	add    al,0x36
  41d467:	jb     0x41d49a
  41d469:	mov    al,0xed
  41d46b:	sub    DWORD PTR [edi+0x172e8ff9],0x5507bc17
  41d475:	out    0xf9,eax
  41d477:	xchg   edi,eax
  41d478:	push   esp
  41d479:	or     cl,BYTE PTR [edx+eax*4]
  41d47c:	fdiv   QWORD PTR ds:[edi+0x382bc79b]
  41d483:	xor    edi,DWORD PTR [ecx]
  41d485:	int3   
  41d486:	mov    eax,0xdac6bea4
  41d48b:	lahf   
  41d48c:	lods   al,BYTE PTR ds:[esi]
  41d48d:	fsubr  st(7),st
  41d48f:	xchg   ecx,eax
  41d490:	dec    esi
  41d491:	mov    bl,0x65
  41d493:	mov    edi,0x809fa0b9
  41d498:	in     al,dx
  41d499:	ins    BYTE PTR es:[edi],dx
  41d49a:	xlat   BYTE PTR ds:[ebx]
  41d49b:	pop    esp
  41d49c:	jl     0x41d45b
  41d49e:	or     DWORD PTR [bx+di+0x50a],edi
  41d4a3:	inc    edx
  41d4a4:	aam    0xe7
  41d4a6:	pop    esi
  41d4a7:	cmp    DWORD PTR [esi],ebx
  41d4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4aa:	icebp  
  41d4ab:	xor    al,0xe5
  41d4ad:	mov    ecx,0xb7886741
  41d4b2:	and    BYTE PTR [ebx],ch
  41d4b4:	cmp    eax,0x60d1d42f
  41d4b9:	std    
  41d4ba:	test   DWORD PTR [eax+eiz*4],0x913f3052
  41d4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4c2:	jb     0x41d48e
  41d4c4:	out    0xfb,eax
  41d4c6:	adc    DWORD PTR [ebx],ecx
  41d4c8:	(bad)  
  41d4ca:	jecxz  0x41d533
  41d4cc:	jp     0x41d4ee
  41d4ce:	mov    al,0x3
  41d4d0:	xchg   edx,eax
  41d4d1:	sbb    DWORD PTR [ecx+edx*1],ecx
  41d4d4:	inc    esi
  41d4d5:	or     BYTE PTR ds:0xcdcd6475,al
  41d4db:	adc    al,0x7
  41d4dd:	rcr    DWORD PTR [esp+ebx*8+0x7ce0c3c5],cl
  41d4e4:	imul   eax,edx,0xa7ab550
  41d4ea:	push   ecx
  41d4eb:	sub    edi,DWORD PTR [esi-0x4e193c4b]
  41d4f1:	jecxz  0x41d551
  41d4f3:	xchg   edi,eax
  41d4f4:	jbe    0x41d48a
  41d4f6:	jbe    0x41d533
  41d4f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4f9:	sti    
  41d4fa:	cmp    bl,BYTE PTR [ecx+0x39]
  41d4fd:	mov    bl,0x1b
  41d4ff:	ret    0x1e48
  41d502:	mov    DWORD PTR [ecx-0x4],ebx
  41d505:	nop    DWORD PTR [esi+0x45]
  41d509:	pop    es
  41d50a:	sti    
  41d50b:	mov    cl,0xc0
  41d50d:	sub    al,bh
  41d50f:	(bad)  
  41d510:	and    BYTE PTR [esi+ebp*8-0x1a],dl
  41d514:	cmp    ah,BYTE PTR [ebx]
  41d516:	xchg   edx,eax
  41d517:	pushf  
  41d518:	daa    
  41d519:	ds xlat BYTE PTR ds:[ebx]
  41d51c:	or     al,ah
  41d51e:	mov    ecx,0x7502002e
  41d523:	adc    al,0x6d
  41d525:	mov    ds:0x5d094027,al
  41d52a:	cmp    ch,BYTE PTR [edx]
  41d52c:	mov    edx,0xdc5fac53
  41d531:	xchg   ecx,eax
  41d532:	push   ebp
  41d533:	xor    DWORD PTR ds:0x66ae7087,edx
  41d539:	(bad)  
  41d53a:	fbstp  TBYTE PTR [edx+0x2e]
  41d53d:	and    bh,BYTE PTR [edi]
  41d53f:	addr16 jb 0x41d540
  41d542:	add    al,0x6c
  41d544:	(bad)  
  41d545:	ds pop ebp
  41d547:	fidiv  WORD PTR [ecx-0x1e66e3c7]
  41d54d:	push   eax
  41d54e:	sbb    BYTE PTR [eax-0x6b],dh
  41d551:	lea    esp,[ebx+0x7176b82a]
  41d557:	jg     0x41d5bb
  41d559:	cmp    cl,BYTE PTR [esi+0x4a]
  41d55c:	shl    DWORD PTR [esi-0x79],0xb
  41d560:	inc    ebp
  41d561:	rcr    BYTE PTR [edi],cl
  41d563:	inc    edi
  41d564:	pop    edx
  41d565:	mov    edi,0xd7bf012e
  41d56a:	repnz ss and eax,0x663ee75e
  41d571:	loop   0x41d5c6
  41d573:	je     0x41d57a
  41d575:	sbb    al,BYTE PTR [ebp+eiz*1+0x78]
  41d579:	and    al,0x37
  41d57b:	out    0x15,al
  41d57d:	pusha  
  41d57e:	mov    edx,0x59b04b02
  41d583:	fwait
  41d584:	sbb    BYTE PTR [edi+eiz*4+0x33531c6],dl
  41d58b:	out    0xfc,al
  41d58d:	rcr    BYTE PTR [edx+0x7c],1
  41d590:	dec    ebx
  41d591:	and    bh,cl
  41d593:	out    0xc,eax
  41d595:	lds    edi,FWORD PTR [esi+esi*8-0x34]
  41d599:	ja     0x41d535
  41d59b:	sbb    BYTE PTR [edi],cl
  41d59d:	xchg   esp,eax
  41d59e:	mov    edi,0x1f2112cf
  41d5a3:	pop    edx
  41d5a4:	sbb    edi,DWORD PTR [edi]
  41d5a6:	pushf  
  41d5a7:	aad    0x87
  41d5a9:	popf   
  41d5aa:	sub    edi,DWORD PTR [eax-0x62]
  41d5ad:	xor    al,0x8c
  41d5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b0:	jnp    0x41d5c0
  41d5b2:	out    dx,al
  41d5b3:	jmp    0xe54ff6ac
  41d5b8:	jns    0x41d599
  41d5ba:	call   0xcc55:0x2942ff1d
  41d5c1:	jmp    0xa8f7:0xa29876cd
  41d5c8:	push   ss
  41d5c9:	or     BYTE PTR [ebp-0x54],al
  41d5cc:	mov    eax,0xb843150
  41d5d1:	xchg   BYTE PTR [ecx*2+0xecca10d],bl
  41d5d8:	xor    eax,0xdb71750f
  41d5dd:	(bad)  
  41d5de:	stc    
  41d5df:	loope  0x41d573
  41d5e1:	call   0x1608:0xf4afc7be
  41d5e8:	mov    BYTE PTR [ebx-0x7c0a6610],ch
  41d5ee:	in     eax,dx
  41d5ef:	std    
  41d5f0:	pop    ecx
  41d5f1:	pop    edi
  41d5f3:	iret   
  41d5f4:	jns    0x41d5b1
  41d5f6:	lods   eax,DWORD PTR ds:[esi]
  41d5f7:	inc    ebx
  41d5f8:	outs   dx,BYTE PTR ds:[esi]
  41d5f9:	and    BYTE PTR [ecx+0x7697609],0xdf
  41d600:	das    
  41d601:	(bad)  
  41d602:	fucomi st,st(5)
  41d604:	push   esi
  41d605:	pop    ecx
  41d606:	xchg   esi,ebx
  41d608:	adc    eax,0x3942d868
  41d60d:	mov    dl,0xca
  41d60f:	inc    ebx
  41d610:	inc    ebx
  41d611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d612:	sbb    dh,ah
  41d614:	or     ecx,ebp
  41d616:	xor    al,0x5d
  41d618:	das    
  41d619:	mov    ebp,0x189007d
  41d61e:	add    eax,0x38d95502
  41d623:	mov    al,ds:0x7af5b0b4
  41d628:	es call 0x2067654b
  41d62e:	js     0x41d5bf
  41d630:	push   esi
  41d631:	loop   0x41d646
  41d633:	imul   edi,esi,0xfffffff5
  41d636:	(bad)  
  41d637:	std    
  41d638:	sbb    cl,BYTE PTR fs:[edx]
  41d63b:	or     edi,DWORD PTR [eax-0x15e1362a]
  41d641:	add    DWORD PTR [ebp+eiz*2-0x24],esp
  41d645:	jmp    0x6c97:0x8f70a6c5
  41d64c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d64d:	push   es
  41d64e:	or     DWORD PTR [esi+eiz*1],edi
  41d651:	mov    ds:0xdc05b299,al
  41d656:	ror    eax,cl
  41d658:	inc    edi
  41d659:	push   ebp
  41d65a:	mov    ch,0x1a
  41d65c:	not    BYTE PTR [eax-0x6af99e53]
  41d662:	xchg   BYTE PTR [esi-0x45],dl
  41d665:	inc    ebx
  41d666:	cld    
  41d667:	and    dh,BYTE PTR [esi+ebp*8-0x3e9206a3]
  41d66e:	loope  0x41d60a
  41d670:	aaa    
  41d671:	sbb    eax,0x19643bde
  41d676:	pop    ebx
  41d677:	aad    0xdf
  41d679:	popf   
  41d67a:	ss pop edi
  41d67c:	lds    ebx,FWORD PTR [esi+0x4fb480dc]
  41d682:	jge    0x41d60f
  41d684:	mov    ds:0x4cc832af,eax
  41d689:	mov    WORD PTR [ecx+0x1a],?
  41d68c:	jmp    0x41d701
  41d68e:	arpl   dx,bp
  41d690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d691:	pop    ds
  41d692:	jmp    DWORD PTR [ebp-0x3b]
  41d695:	sbb    eax,0xc615b450
  41d69a:	dec    ebp
  41d69b:	test   eax,0x23394ab
  41d6a0:	dec    ebx
  41d6a1:	inc    esi
  41d6a2:	aad    0x8d
  41d6a4:	pop    ds
  41d6a5:	mov    edi,ebp
  41d6a7:	jo     0x41d681
  41d6a9:	(bad)  [ebp+0x5b]
  41d6ac:	cwde   
  41d6ad:	jne    0x41d6ed
  41d6af:	sub    al,0x46
  41d6b1:	push   ecx
  41d6b2:	jns    0x41d674
  41d6b4:	mov    DWORD PTR [ecx-0x3b],edi
  41d6b7:	and    al,BYTE PTR [ebx+0x4]
  41d6ba:	aas    
  41d6bb:	pop    ebp
  41d6bc:	imul   eax,DWORD PTR [ecx+edi*8+0x2d],0x63c7b3cd
  41d6c4:	aas    
  41d6c5:	and    eax,0x7e915c9f
  41d6ca:	fadd   DWORD PTR [edx]
  41d6cc:	fidiv  WORD PTR ds:0x4b350277
  41d6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d3:	retf   0xdabb
  41d6d6:	sub    al,0xf5
  41d6d8:	outs   dx,DWORD PTR ds:[esi]
  41d6d9:	and    BYTE PTR [ecx],al
  41d6db:	nop
  41d6dc:	push   cs
  41d6dd:	div    al
  41d6df:	push   ss
  41d6e0:	add    ch,cl
  41d6e2:	aas    
  41d6e3:	add    bl,0xce
  41d6e6:	mov    ebp,0xf8034e00
  41d6eb:	cs xchg ebp,eax
  41d6ed:	pop    es
  41d6ee:	add    eax,0x959479bc
  41d6f3:	nop
  41d6f4:	shl    DWORD PTR ds:0xffd3a808,0x9e
  41d6fb:	or     eax,0x83f0e8ec
  41d700:	fbstp  TBYTE PTR [ecx-0x3e10b739]
  41d706:	dec    edx
  41d707:	fs mov ah,0x8a
  41d70a:	sub    bl,BYTE PTR [edi+ecx*2+0x64]
  41d70e:	cmc    
  41d70f:	outs   dx,DWORD PTR ds:[esi]
  41d710:	pop    esp
  41d711:	xlat   BYTE PTR ds:[ebx]
  41d712:	mov    ds:0x400d602a,al
  41d717:	adc    al,0x3b
  41d719:	daa    
  41d71a:	inc    edi
  41d71b:	gs ror cl,1
  41d71e:	mov    al,ds:0xbce67793
  41d723:	cmp    eax,0x6ffdf0a9
  41d728:	fisttp QWORD PTR [edi-0x433954d9]
  41d72e:	sub    eax,0x7d73d44f
  41d733:	stos   BYTE PTR es:[edi],al
  41d734:	cmc    
  41d735:	stos   DWORD PTR es:[edi],eax
  41d736:	push   0x3482b952
  41d73b:	push   0xa5885f9d
  41d740:	jno    0x41d7a3
  41d742:	fwait
  41d743:	jg     0x41d783
  41d745:	jmp    0x6003bdb8
  41d74a:	jno    0x41d7c0
  41d74c:	mov    ah,0xb0
  41d74e:	aaa    
  41d74f:	movhps xmm7,QWORD PTR [ecx+0x6e]
  41d753:	(bad)  
  41d754:	xchg   ebp,eax
  41d755:	nop
  41d756:	sbb    bh,BYTE PTR [esi]
  41d758:	sub    eax,0x73eac786
  41d75d:	fstp   TBYTE PTR [esi-0x33bd321b]
  41d763:	ins    DWORD PTR es:[edi],dx
  41d764:	mov    al,0x78
  41d766:	fmul   DWORD PTR [ebp-0x71d85b9b]
  41d76c:	loope  0x41d776
  41d76e:	adc    esp,DWORD PTR [ecx-0x7f]
  41d771:	mov    eax,0x4b2a3c46
  41d776:	mov    gs,WORD PTR [ebx]
  41d778:	xchg   ebp,eax
  41d779:	repz jbe 0x41d737
  41d77c:	adc    al,0x60
  41d77e:	xor    eax,0x8beaea0a
  41d783:	out    dx,al
  41d784:	retf   
  41d785:	aad    0xab
  41d787:	(bad)  
  41d788:	ficomp WORD PTR [eax+edi*4-0x30]
  41d78c:	cmp    al,0xce
  41d78e:	in     eax,dx
  41d78f:	mov    WORD PTR [edx-0x2f],fs
  41d792:	loop   0x41d717
  41d794:	cmp    ecx,esi
  41d796:	pop    eax
  41d797:	inc    sp
  41d799:	xor    DWORD PTR [ebx],edx
  41d79b:	sub    al,0xb3
  41d79d:	add    eax,0x5ba66c39
  41d7a2:	stos   DWORD PTR es:[edi],eax
  41d7a3:	test   al,0x62
  41d7a5:	push   ss
  41d7a6:	inc    esp
  41d7a7:	mov    DWORD PTR [eax+eiz*2+0x3a90df91],0x19c6039
  41d7b2:	or     BYTE PTR [ebx+0x2fa5c4e8],al
  41d7b8:	shr    BYTE PTR [ebp+0x7547fd07],0x21
  41d7bf:	inc    esp
  41d7c0:	sub    al,0x9
  41d7c2:	pop    ss
  41d7c3:	outs   dx,BYTE PTR ds:[esi]
  41d7c4:	je     0x41d842
  41d7c6:	retf   0x7e35
  41d7c9:	sbb    al,0xc1
  41d7cb:	xor    ebp,0xffffff88
  41d7ce:	fisttp WORD PTR [eax-0x50]
  41d7d1:	jmp    0xb34f:0xa4faedcc
  41d7d8:	add    ebx,DWORD PTR [ecx]
  41d7da:	push   ebx
  41d7db:	cmp    DWORD PTR [edi-0x63],0x32
  41d7df:	cmp    eax,0xb5cffe98
  41d7e4:	stos   DWORD PTR es:[edi],eax
  41d7e5:	out    dx,eax
  41d7e6:	dec    eax
  41d7e7:	xchg   esi,eax
  41d7e8:	jne    0x41d840
  41d7ea:	sub    al,0x2a
  41d7ec:	inc    eax
  41d7ed:	mov    ch,bh
  41d7ef:	mov    ch,0x4
  41d7f1:	push   ecx
  41d7f2:	xchg   edi,eax
  41d7f3:	dec    ecx
  41d7f4:	lahf   
  41d7f5:	loopne 0x41d7c0
  41d7f7:	mov    bl,0x88
  41d7f9:	leave  
  41d7fa:	mov    DWORD PTR [edx],ebx
  41d7fc:	jp     0x41d7cb
  41d7fe:	xlat   BYTE PTR ds:[ebx]
  41d7ff:	add    eax,0x61ac95dc
  41d804:	mov    dl,0x38
  41d806:	dec    eax
  41d807:	xchg   ebp,eax
  41d808:	nop
  41d809:	push   esi
  41d80a:	sahf   
  41d80b:	adc    bh,BYTE PTR [edi-0x36]
  41d80e:	loope  0x41d88f
  41d810:	enter  0x197c,0xb3
  41d814:	mov    eax,ds:0x5cdec23b
  41d819:	push   ss
  41d81a:	es jl  0x41d7ce
  41d81d:	scas   al,BYTE PTR es:[edi]
  41d81e:	pusha  
  41d81f:	adc    ah,BYTE PTR [edi-0x2e]
  41d822:	push   ebp
  41d823:	mul    ebx
  41d825:	jmp    0xf802cab8
  41d82a:	pop    edi
  41d82b:	xchg   edi,eax
  41d82c:	or     al,0x3a
  41d82e:	pushf  
  41d82f:	adc    eax,0x7038e94d
  41d834:	neg    DWORD PTR [ebp-0x799d27cb]
  41d83a:	adc    BYTE PTR [eax-0x5b5ac460],0x79
  41d841:	adc    BYTE PTR [ebp+0x57eccdae],ah
  41d847:	dec    edi
  41d848:	and    eax,0x893471ae
  41d84d:	in     eax,dx
  41d84e:	push   ss
  41d84f:	push   es
  41d850:	xor    BYTE PTR [bp+di+0xd8b],dl
  41d855:	out    0x3c,eax
  41d857:	jge    0x41d7e4
  41d859:	xchg   esi,eax
  41d85a:	repz jno 0x41d895
  41d85d:	(bad)  
  41d85e:	mov    bh,0x4f
  41d860:	and    ah,cl
  41d862:	xchg   BYTE PTR [eax],bh
  41d864:	jle    0x41d8c1
  41d866:	or     esi,DWORD PTR [edi-0xd]
  41d869:	jae    0x41d8a3
  41d86b:	push   esi
  41d86c:	mov    al,0xaf
  41d86e:	gs in  al,0x37
  41d871:	cmp    eax,0x181a52a6
  41d876:	adc    BYTE PTR [eax-0x691bdba3],ah
  41d87c:	push   esp
  41d87d:	mov    DWORD PTR [esi-0x7c],ebx
  41d880:	arpl   WORD PTR [edx-0x18e323a8],cx
  41d886:	and    ch,BYTE PTR [edx]
  41d888:	in     eax,0x33
  41d88a:	(bad)  
  41d88b:	aaa    
  41d88c:	cmc    
  41d88d:	add    eax,0xdcc629a8
  41d892:	addr16 aad 0xd5
  41d895:	push   edx
  41d896:	dec    ebp
  41d897:	jp     0x41d898
  41d899:	pushf  
  41d89a:	popa   
  41d89b:	adc    al,0x34
  41d89d:	shr    bl,0x26
  41d8a0:	mov    BYTE PTR [ebx-0x53],dh
  41d8a3:	pop    ecx
  41d8a4:	adc    esi,ebp
  41d8a6:	and    edi,DWORD PTR [esi+ecx*2-0x5b]
  41d8aa:	movnti DWORD PTR [esi+edi*2-0x6b3b602d],ebp
  41d8b2:	repz add DWORD PTR [eax+0x28cf3791],ebx
  41d8b9:	(bad)  
  41d8ba:	cld    
  41d8bb:	jmp    0x5b58:0xcbb1e32d
  41d8c2:	cli    
  41d8c3:	jmp    0x45742137
  41d8c8:	test   eax,0x1b11b0dd
  41d8cd:	fwait
  41d8ce:	push   ebx
  41d8cf:	xchg   ebp,eax
  41d8d0:	aam    0x22
  41d8d2:	and    esi,DWORD PTR gs:[esi+0x12]
  41d8d6:	mov    bl,0x40
  41d8d8:	dec    edi
  41d8d9:	lahf   
  41d8da:	mov    esi,eax
  41d8dc:	sbb    dh,bh
  41d8de:	rol    BYTE PTR [ecx-0x7388bf05],1
  41d8e4:	sub    dh,BYTE PTR [edi-0x4e]
  41d8e7:	ins    BYTE PTR es:[edi],dx
  41d8e8:	pop    edx
  41d8e9:	dec    ecx
  41d8ea:	cmp    DWORD PTR [ebx],ecx
  41d8ec:	dec    eax
  41d8ed:	cmp    eax,0x762def1e
  41d8f2:	xor    eax,0x2ec9a6f9
  41d8f7:	mov    edx,0xb693607a
  41d8fc:	inc    edi
  41d8fd:	dec    eax
  41d8fe:	fiadd  WORD PTR [ecx-0x164dec12]
  41d904:	lods   al,BYTE PTR ds:[esi]
  41d905:	jmp    0x41d8cc
  41d907:	into   
  41d908:	inc    ebp
  41d909:	test   edi,ebp
  41d90b:	jmp    0x41d8be
  41d90d:	add    al,0xd7
  41d90f:	push   ss
  41d910:	mov    bh,0x20
  41d912:	push   ss
  41d913:	mov    eax,0xb241cb4b
  41d918:	imul   DWORD PTR [ebx+eax*4-0x39cf287c]
  41d91f:	mov    eax,ds:0xcf73db0
  41d924:	xchg   edx,eax
  41d925:	sti    
  41d926:	test   DWORD PTR [edx-0x727ea76b],edi
  41d92c:	add    BYTE PTR [edi+0xc],dl
  41d92f:	or     al,0x49
  41d931:	cmp    al,0x73
  41d933:	leave  
  41d934:	inc    ebx
  41d935:	imul   DWORD PTR [esi+0x5f]
  41d938:	popf   
  41d939:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41d93b:	iret   
  41d93c:	hlt    
  41d93d:	inc    BYTE PTR [edx+eiz*1-0x80]
  41d941:	mov    edi,es
  41d943:	je     0x41d902
  41d945:	xchg   esp,eax
  41d946:	push   ds
  41d947:	test   DWORD PTR [esi*4-0x65417517],esp
  41d94e:	arpl   WORD PTR [edi+0x44559169],dx
  41d954:	or     dl,BYTE PTR [ebx-0x3305a36f]
  41d95a:	lods   eax,DWORD PTR ds:[esi]
  41d95b:	dec    ebp
  41d95c:	inc    edi
  41d95d:	sahf   
  41d95e:	xchg   esp,eax
  41d95f:	mov    ds:0xf0794bf6,eax
  41d964:	mov    esp,0x2253dad7
  41d969:	push   ebx
  41d96a:	or     eax,0x41b36ab2
  41d96f:	in     eax,dx
  41d970:	pop    edi
  41d971:	pop    es
  41d972:	test   BYTE PTR ds:[esp+eax*1+0x6f],bh
  41d977:	fild   QWORD PTR [eax]
  41d979:	mov    al,ds:0xe1ea89f9
  41d97e:	les    ebp,FWORD PTR [ebx]
  41d980:	xor    BYTE PTR [ebx],ah
  41d982:	js     0x41d90f
  41d984:	test   ch,0xde
  41d987:	aaa    
  41d988:	mov    ecx,DWORD PTR [eax+0x63bc8df0]
  41d98e:	lods   al,BYTE PTR ds:[esi]
  41d98f:	jne    0x41d9d1
  41d991:	inc    eax
  41d992:	into   
  41d993:	and    eax,0x97d56df5
  41d998:	loop   0x41d9d4
  41d99a:	push   0x13
  41d99c:	jnp    0x41d99f
  41d99e:	xor    BYTE PTR [esp+ebp*4],dl
  41d9a1:	mov    dh,0xad
  41d9a3:	add    BYTE PTR [ecx],al
  41d9a5:	jl     0x41d9cf
  41d9a7:	in     eax,dx
  41d9a8:	mov    ds:0x69a1718,al
  41d9ad:	cmp    eax,0xaf67e39d
  41d9b2:	ins    DWORD PTR es:[edi],dx
  41d9b3:	mov    eax,0x6b9455b
  41d9b8:	and    BYTE PTR [ebx],al
  41d9ba:	pop    ds
  41d9bb:	jl     0x41d9fa
  41d9bd:	retf   0xb532
  41d9c0:	shl    ebp,0x8e
  41d9c3:	call   0x769:0xd1550a12
  41d9ca:	xchg   edi,eax
  41d9cb:	mov    al,ds:0x125e5e5
  41d9d0:	icebp  
  41d9d1:	push   0x5b39b619
  41d9d6:	dec    edx
  41d9d7:	fsub   DWORD PTR [ebx]
  41d9d9:	imul   ecx,esi,0xbdafe44a
  41d9df:	push   0xa35f57f2
  41d9e4:	gs (bad) 
  41d9e6:	leave  
  41d9e7:	sbb    dh,BYTE PTR [ecx]
  41d9e9:	repnz mov DWORD PTR [eax+0x32],ebp
  41d9ed:	call   0x6c6b:0xa50968db
  41d9f4:	jp     0x41da27
  41d9f6:	pushf  
  41d9f7:	in     eax,dx
  41d9f8:	mov    ds:0xb76e8999,al
  41d9fd:	enter  0x7613,0x67
  41da01:	or     al,0x33
  41da03:	sub    al,0xbe
  41da05:	sbb    dh,bl
  41da07:	xlat   BYTE PTR ds:[ebx]
  41da08:	mov    dh,0xd6
  41da0a:	or     DWORD PTR [ecx-0x2e1dc6b9],eax
  41da10:	pop    esp
  41da11:	aad    0x84
  41da13:	jmp    0x41da44
  41da15:	rcr    DWORD PTR [ebp-0x45],cl
  41da18:	addr16 jae 0x41d9e9
  41da1b:	sbb    eax,0x6315510f
  41da20:	xchg   ecx,eax
  41da21:	push   esi
  41da22:	mov    ch,0xad
  41da24:	mov    ebp,0x56f28750
  41da29:	xchg   esp,eax
  41da2a:	sti    
  41da2b:	shl    BYTE PTR ss:[edi+0x0],cl
  41da2f:	and    BYTE PTR [edx],0xbd
  41da32:	pusha  
  41da33:	cmp    ecx,DWORD PTR [edi-0x17]
  41da36:	jbe    0x41da46
  41da38:	aam    0xb0
  41da3a:	cmc    
  41da3b:	mov    al,0x3e
  41da3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da3e:	push   es
  41da3f:	pop    ecx
  41da40:	not    DWORD PTR [esi]
  41da42:	mov    ds:0x93f9d5c9,eax
  41da47:	cli    
  41da48:	xchg   DWORD PTR [ecx+edx*2-0x1a],eax
  41da4c:	adc    ebp,ebx
  41da4e:	test   BYTE PTR [edx+0x12eea3e1],bh
  41da54:	inc    edx
  41da55:	sub    ebp,DWORD PTR [edx+0x16]
  41da58:	xchg   edi,eax
  41da59:	sbb    eax,0xb05867b8
  41da5e:	mov    esp,0x32a33ef0
  41da63:	arpl   WORD PTR [ebx-0x19],si
  41da66:	bound  ebp,QWORD PTR [ecx-0xc]
  41da69:	jmp    0x5726:0x518e210a
  41da70:	dec    edx
  41da71:	add    BYTE PTR [ecx-0x12],0xb6
  41da75:	mov    al,0x8d
  41da77:	mov    bh,0x50
  41da79:	arpl   WORD PTR [edx-0x3b36214a],sp
  41da7f:	fdivrp st(0),st
  41da81:	pushf  
  41da82:	xor    bh,BYTE PTR [edi+0x1ae1f2a3]
  41da88:	push   0x6ff9f24e
  41da8d:	fidivr DWORD PTR [edi+0x3062f82d]
  41da93:	mov    eax,0xc52479
  41da98:	lods   al,BYTE PTR ds:[esi]
  41da99:	in     eax,0xc
  41da9b:	xchg   bh,al
  41da9d:	cmp    eax,0x7267472f
  41daa2:	sbb    eax,0x51418cbc
  41daa7:	cmc    
  41daa8:	cs mov esi,0xd51888b7
  41daae:	xlat   BYTE PTR ds:[ebx]
  41daaf:	popf   
  41dab0:	loop   0x41dab0
  41dab2:	cwde   
  41dab3:	pop    esi
  41dab4:	add    al,0xd4
  41dab6:	call   0xdd08:0x55c89ba2
  41dabd:	call   0x42905624
  41dac2:	sub    eax,0xef2418c2
  41dac7:	vunpckhps ymm3,ymm6,ymm3
  41dacb:	sub    al,0x70
  41dacd:	adc    BYTE PTR [eax],dl
  41dacf:	pop    ebx
  41dad0:	cmp    DWORD PTR [ebx],edi
  41dad2:	xchg   esi,eax
  41dad3:	adc    BYTE PTR [edi+0x38],cl
  41dad6:	ret    
  41dad7:	push   0x38
  41dad9:	(bad)  
  41dada:	jno    0x41daaf
  41dadc:	push   0xfffffff2
  41dade:	sub    cl,bh
  41dae0:	mov    ebx,0x98c6493c
  41dae5:	pop    ebx
  41dae6:	aas    
  41dae7:	sub    BYTE PTR [ebx+0x4e629668],bh
  41daed:	adc    eax,0x81c48218
  41daf2:	cmp    DWORD PTR [edx+ebx*2+0x7535649f],edi
  41daf9:	jmp    0xa98ed290
  41dafe:	js     0x41da9e
  41db00:	inc    edi
  41db01:	lea    ebp,[edx-0x69]
  41db04:	xchg   esp,eax
  41db05:	or     al,0x17
  41db07:	lds    edx,FWORD PTR [ecx-0x3f]
  41db0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db0b:	or     DWORD PTR [eax+0x5e237660],edx
  41db11:	int    0x8b
  41db13:	mov    ecx,0x33fa1b6f
  41db18:	push   eax
  41db19:	hlt    
  41db1a:	dec    DWORD PTR [ebx]
  41db1c:	stos   DWORD PTR es:[edi],eax
  41db1d:	sub    BYTE PTR [esi+0x400a87c2],bh
  41db23:	iret   
  41db24:	sub    DWORD PTR [ecx+0x79915fcd],0xffffffb3
  41db2b:	mov    ch,0x38
  41db2d:	sahf   
  41db2e:	jns    0x41db6e
  41db30:	sahf   
  41db31:	sbb    bh,BYTE PTR [ecx+0x9fecb2d]
  41db37:	lock stos DWORD PTR es:[edi],eax
  41db39:	out    dx,al
  41db3a:	dec    eax
  41db3b:	mov    edi,0xfd33832
  41db40:	in     al,0x86
  41db42:	or     eax,0x806c96ea
  41db47:	or     ebx,0xfffffffd
  41db4a:	pop    ebx
  41db4b:	jae    0x41dad6
  41db4d:	stos   DWORD PTR es:[edi],eax
  41db4e:	adc    BYTE PTR [ebx-0x39],al
  41db51:	in     eax,0x89
  41db53:	jnp    0x41dbc4
  41db55:	jmp    0xe76:0xeecf9122
  41db5c:	xchg   esi,eax
  41db5d:	or     BYTE PTR [edi-0x9519217],al
  41db63:	(bad)  
  41db64:	mov    eax,ds:0x79f95969
  41db69:	popa   
  41db6a:	int    0x1c
  41db6c:	and    BYTE PTR [eax-0x3a49fefa],al
  41db72:	rol    BYTE PTR [edi],0x2
  41db75:	add    eax,0xcc04d8f2
  41db7a:	retf   0x15b5
  41db7d:	mov    bl,0x22
  41db7f:	jl     0x41db98
  41db81:	inc    edx
  41db82:	or     eax,0xd0266c09
  41db87:	sbb    DWORD PTR [eax+ecx*4-0x7a],esp
  41db8b:	jnp    0x41db16
  41db8d:	es stc 
  41db8f:	pop    ebp
  41db90:	jns    0x41db66
  41db92:	push   0xffffffc2
  41db94:	and    eax,DWORD PTR [edx]
  41db96:	jl     0x41db58
  41db98:	inc    eax
  41db99:	sub    al,0x1a
  41db9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db9c:	retf   0xb565
  41db9f:	ja     0x41db98
  41dba1:	push   esp
  41dba2:	xchg   edx,eax
  41dba3:	mov    ah,0x4d
  41dba5:	call   0xd741e381
  41dbaa:	mov    cl,0x4d
  41dbac:	sub    ecx,edi
  41dbae:	call   0x2abdde6
  41dbb3:	push   cs
  41dbb4:	cmp    eax,DWORD PTR [esi-0x2757b489]
  41dbba:	add    al,0xc0
  41dbbc:	mov    al,ds:0x2a61bd6
  41dbc1:	fmul   st,st(3)
  41dbc4:	pusha  
  41dbc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbc6:	(bad)  
  41dbc7:	sti    
  41dbc8:	mov    esi,0x1e748635
  41dbcd:	stos   BYTE PTR es:[edi],al
  41dbce:	lods   eax,DWORD PTR ds:[esi]
  41dbcf:	sub    eax,0x4e4e41ad
  41dbd4:	popf   
  41dbd5:	inc    eax
  41dbd6:	and    bh,ch
  41dbd8:	sub    edx,ebp
  41dbda:	sbb    BYTE PTR [edx+0x2d16f0ea],bh
  41dbe0:	cmp    bh,BYTE PTR [ebx+0x1c1ce73b]
  41dbe6:	mov    dh,0x42
  41dbe8:	es jle 0x41dbd3
  41dbeb:	adc    BYTE PTR [esi],dl
  41dbed:	sbb    ecx,DWORD PTR [edx+ebp*1-0x3f0e0fa7]
  41dbf4:	push   DWORD PTR [eax]
  41dbf6:	imul   edx,edx,0xea11443a
  41dbfc:	lock (bad) [edx+0x5b]
  41dc00:	push   cs
  41dc01:	or     eax,0x652adb9b
  41dc06:	in     eax,0xf4
  41dc08:	cmp    BYTE PTR [edx],0xfb
  41dc0b:	or     al,0x18
  41dc0d:	imul   ecx,DWORD PTR [eax+0x77],0x8
  41dc11:	cmp    cl,BYTE PTR [esi-0x78]
  41dc14:	mov    dl,0x7b
  41dc16:	aaa    
  41dc17:	dec    ebx
  41dc18:	ffreep st(1)
  41dc1a:	jmp    0xd0b66865
  41dc1f:	hlt    
  41dc20:	add    al,0x6b
  41dc22:	and    DWORD PTR [ebp-0x49],edi
  41dc25:	or     al,0xe4
  41dc27:	add    dl,bl
  41dc29:	xchg   ebx,eax
  41dc2a:	dec    esi
  41dc2b:	int    0x26
  41dc2d:	adc    edi,DWORD PTR [ecx-0x10427c44]
  41dc33:	cs mov al,0xe4
  41dc36:	xchg   edi,eax
  41dc37:	fcos   
  41dc39:	jo     0x41dbbc
  41dc3b:	aas    
  41dc3c:	retf   
  41dc3d:	xchg   edi,eax
  41dc3e:	dec    esp
  41dc3f:	mov    edi,0x4522e7f7
  41dc44:	xor    eax,0xa99c3d31
  41dc49:	push   0xfffffff1
  41dc4b:	cs xchg ecx,eax
  41dc4d:	push   ebx
  41dc4e:	jecxz  0x41dc63
  41dc50:	pop    esp
  41dc51:	iret   
  41dc52:	out    0x9f,al
  41dc54:	or     BYTE PTR [ebx-0x5a],ch
  41dc57:	mov    BYTE PTR [edx-0x40],0xbf
  41dc5b:	(bad)  
  41dc5c:	or     ch,BYTE PTR [esi+0x51]
  41dc5f:	xchg   ebx,eax
  41dc60:	sti    
  41dc61:	fstp   DWORD PTR [edi+0x2]
  41dc64:	fcomp  QWORD PTR [eax+ecx*1+0x5c]
  41dc68:	pop    es
  41dc69:	out    0x4c,al
  41dc6b:	into   
  41dc6c:	or     DWORD PTR [ecx+edx*4],0xe
  41dc70:	xor    BYTE PTR [edi+0x7827feba],cl
  41dc76:	in     eax,0xe2
  41dc78:	push   ebx
  41dc79:	adc    edx,DWORD PTR [ebp+0x16]
  41dc7c:	jge    0x41dcf3
  41dc7e:	fsubr  DWORD PTR [edi]
  41dc80:	aas    
  41dc81:	cmp    eax,0xfb3fe582
  41dc86:	stos   BYTE PTR es:[edi],al
  41dc87:	fwait
  41dc88:	loop   0x41dc6e
  41dc8a:	adc    al,0x7f
  41dc8c:	cmp    al,0xb4
  41dc8e:	push   ss
  41dc8f:	mov    dl,0xe8
  41dc91:	cmp    bl,dh
  41dc93:	mov    eax,ds:0x856fb985
  41dc98:	sahf   
  41dc99:	imul   edx,edx,0xa202688f
  41dc9f:	ror    DWORD PTR [ebx],1
  41dca1:	jae    0x41dd03
  41dca3:	cs jmp 0x99572fe6
  41dca9:	or     BYTE PTR [edi-0x4a],dl
  41dcac:	adc    eax,0x9c1c262d
  41dcb1:	xchg   edx,eax
  41dcb2:	and    bl,BYTE PTR cs:[ebp-0x3ea602dd]
  41dcb9:	sbb    edi,DWORD PTR [ebx-0x6a]
  41dcbc:	mov    dh,0x7c
  41dcbe:	hlt    
  41dcbf:	call   0xd9cf80de
  41dcc4:	(bad)  
  41dcc6:	push   ebp
  41dcc7:	inc    eax
  41dcc8:	ins    DWORD PTR es:[edi],dx
  41dcc9:	mov    WORD PTR [esi-0x4cd87b7],fs
  41dccf:	and    al,0x9
  41dcd1:	loope  0x41dd45
  41dcd3:	inc    ebx
  41dcd4:	sbb    al,BYTE PTR [edx]
  41dcd6:	mov    eax,ds:0xb7450257
  41dcdb:	mov    ebp,0xa21cf143
  41dce0:	push   ebp
  41dce1:	push   es
  41dce2:	mov    edi,0x9da677e9
  41dce7:	xor    dh,BYTE PTR [ebp-0x678ab738]
  41dced:	push   esp
  41dcee:	adc    eax,0xa376f9a9
  41dcf3:	in     al,dx
  41dcf4:	pop    ebx
  41dcf5:	mov    ebp,0xada0b6b0
  41dcfa:	ins    BYTE PTR es:[edi],dx
  41dcfb:	ror    DWORD PTR [ebx-0x43],cl
  41dcfe:	xchg   edi,eax
  41dcff:	mov    dh,0xcd
  41dd01:	and    DWORD PTR [ecx],ecx
  41dd03:	dec    ecx
  41dd04:	cmp    al,0x9c
  41dd06:	(bad)  
  41dd07:	dec    ebx
  41dd08:	mov    esi,ss
  41dd0a:	dec    ecx
  41dd0b:	aas    
  41dd0c:	or     al,0xbc
  41dd0e:	adc    eax,DWORD PTR [esi]
  41dd10:	(bad)  
  41dd11:	jmp    0x41dcf8
  41dd13:	or     eax,DWORD PTR [bp-0x45dc]
  41dd18:	push   edi
  41dd19:	lods   eax,DWORD PTR ds:[esi]
  41dd1a:	dec    edi
  41dd1b:	jg     0x41dd6c
  41dd1d:	sbb    al,0xe9
  41dd1f:	loopne 0x41dd22
  41dd21:	push   eax
  41dd22:	and    BYTE PTR [eax+0x5],cl
  41dd25:	ins    BYTE PTR es:[edi],dx
  41dd26:	nop
  41dd27:	inc    esp
  41dd28:	pop    edi
  41dd29:	or     DWORD PTR [ebx+ecx*2+0x76],eax
  41dd2d:	add    edx,DWORD PTR [edx-0x7f]
  41dd30:	out    dx,eax
  41dd31:	test   ebp,edx
  41dd33:	sbb    dl,ch
  41dd35:	cmp    esp,edx
  41dd37:	push   ecx
  41dd38:	mov    ch,0x55
  41dd3a:	cmp    al,0x38
  41dd3c:	cmp    ebx,ecx
  41dd3e:	pop    ds
  41dd3f:	fild   QWORD PTR [ebx+0x47]
  41dd42:	or     eax,0x4a9abb45
  41dd47:	push   edi
  41dd48:	daa    
  41dd49:	jge    0x41dda7
  41dd4b:	(bad)  [ecx+0x3d0ae3b]
  41dd51:	ja     0x41dd8d
  41dd53:	or     BYTE PTR [edi+eax*4],dh
  41dd56:	add    eax,0x3901c5b4
  41dd5b:	xchg   esi,eax
  41dd5c:	lea    edi,[ebp+0x3b9364c3]
  41dd62:	or     ebp,DWORD PTR [ebx]
  41dd64:	rcr    DWORD PTR es:[edi],0x9a
  41dd68:	fimul  WORD PTR [edx+0x7e2ab635]
  41dd6e:	fbstp  TBYTE PTR [ebp-0x581b13c4]
  41dd74:	je     0x41ddc6
  41dd76:	dec    edx
  41dd77:	sub    esp,edx
  41dd79:	ss pop esp
  41dd7b:	rol    DWORD PTR [esi-0x60],1
  41dd7e:	call   FWORD PTR [ebx+0x240398b3]
  41dd84:	out    0x64,eax
  41dd86:	jl     0x41dde2
  41dd88:	xchg   esp,eax
  41dd89:	cmp    BYTE PTR [eax],ah
  41dd8b:	ret    
  41dd8c:	sub    al,bh
  41dd8e:	mov    al,ds:0xb0a1d4dd
  41dd93:	sbb    DWORD PTR [edx-0x6e2c11db],eax
  41dd99:	lods   eax,DWORD PTR ds:[esi]
  41dd9a:	xor    BYTE PTR [eax-0x4943fe98],bl
  41dda0:	or     dl,BYTE PTR [esi]
  41dda2:	adc    DWORD PTR [esi-0x6d9b10bf],0x69
  41dda9:	add    eax,0x98b7fc83
  41ddae:	mov    DWORD PTR [eax+eax*8-0xa],ebp
  41ddb2:	add    eax,0x3c5be48c
  41ddb7:	jp     0x41de17
  41ddb9:	ficomp WORD PTR [ecx]
  41ddbb:	mov    BYTE PTR [ebp+0x6e],dh
  41ddbe:	cmp    eax,0x31cf5dd
  41ddc3:	retf   0xe6d6
  41ddc6:	lods   al,BYTE PTR ds:[esi]
  41ddc7:	cmc    
  41ddc8:	std    
  41ddc9:	sub    eax,0x767755d9
  41ddce:	xlat   BYTE PTR ds:[ebx]
  41ddcf:	push   eax
  41ddd0:	aam    0x5d
  41ddd2:	jo     0x41dda6
  41ddd4:	xchg   al,cl
  41ddd6:	js     0x41de16
  41ddd8:	(bad)  
  41ddd9:	aas    
  41ddda:	fdivr  DWORD PTR [ecx-0x6aafadc7]
  41dde0:	add    ecx,DWORD PTR [ebp-0x566cfcb7]
  41dde6:	add    BYTE PTR [ebx-0x28],bl
  41dde9:	mov    edi,0x50007cad
  41ddee:	mov    al,ds:0x427ab215
  41ddf3:	adc    esp,0x2d
  41ddf6:	sub    ebx,edx
  41ddf8:	mov    eax,ds:0x4d922d01
  41ddfd:	lea    eax,[edx]
  41ddff:	arpl   sp,ax
  41de01:	ja     0x41ddc4
  41de03:	das    
  41de04:	inc    esp
  41de05:	pop    ebx
  41de06:	fisttp DWORD PTR [esi]
  41de08:	dec    ebp
  41de09:	push   edx
  41de0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de0b:	cs and bl,ch
  41de0e:	fwait
  41de0f:	arpl   WORD PTR [ebp+0x20],bx
  41de12:	test   al,0xf7
  41de14:	loopne 0x41ddbe
  41de16:	fucomip st,st(6)
  41de18:	(bad)  
  41de19:	pop    ebx
  41de1a:	rol    BYTE PTR [edx],1
  41de1c:	stc    
  41de1d:	xchg   edx,eax
  41de1e:	es sub esp,eax
  41de21:	cmp    al,BYTE PTR [ebp-0x7b]
  41de24:	inc    edi
  41de25:	sub    esp,DWORD PTR [edx+0x48]
  41de28:	and    ebx,0xffffffce
  41de2b:	sahf   
  41de2c:	xor    ah,BYTE PTR [eax+edi*1+0x42d9d6ed]
  41de33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de34:	mov    al,0xc0
  41de36:	aaa    
  41de37:	push   edx
  41de38:	adc    edx,DWORD PTR [ecx]
  41de3a:	mov    dl,0x12
  41de3c:	push   ebx
  41de3d:	add    eax,ebp
  41de3f:	xor    eax,0x115c647a
  41de44:	dec    edx
  41de45:	retfw  
  41de47:	xor    DWORD PTR [esi+0x2],edx
  41de4a:	mov    ch,0xfd
  41de4c:	push   cs
  41de4d:	dec    ecx
  41de4e:	add    esi,DWORD PTR [esi]
  41de50:	jnp    0x41de8a
  41de52:	add    DWORD PTR [eax+0x4cb48d4a],edi
  41de58:	loope  0x41de88
  41de5a:	and    DWORD PTR [eax],0x1d
  41de5d:	push   eax
  41de5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de5f:	clc    
  41de60:	ret    0x5b4a
  41de63:	and    DWORD PTR [ebx+0x63],esp
  41de66:	ss bnd jg 0x41de32
  41de6a:	sbb    eax,0xf9d668fb
  41de6f:	adc    BYTE PTR [eax-0x30],0xcb
  41de73:	test   DWORD PTR [esi-0x5f],ebp
  41de76:	or     ch,BYTE PTR ds:0xb933baa3
  41de7c:	fcmove st,st(1)
  41de7e:	add    DWORD PTR [edi*4+0x79c79c36],edx
  41de85:	in     eax,0x95
  41de87:	pop    ebx
  41de88:	loop   0x41de8c
  41de8a:	jae    0x41de54
  41de8c:	jecxz  0x41df09
  41de8e:	pop    esp
  41de8f:	push   edi
  41de90:	inc    edx
  41de91:	jecxz  0x41de5e
  41de93:	call   0x1f0ae6b1
  41de98:	out    dx,al
  41de99:	add    dl,BYTE PTR [ebx-0xd]
  41de9c:	sub    ebp,DWORD PTR [esi]
  41de9e:	out    dx,al
  41de9f:	pop    ebp
  41dea0:	xchg   esi,eax
  41dea1:	mov    edx,0x101528f9
  41dea6:	stc    
  41dea7:	or     eax,0x4e9c03f6
  41deac:	mov    bh,cl
  41deae:	ror    BYTE PTR [edx+ecx*2+0x662c6b12],cl
  41deb5:	push   0xffffffe1
  41deb7:	mov    gs,WORD PTR [esi+edx*1]
  41deba:	inc    ecx
  41debb:	out    0xa0,eax
  41debd:	jns    0x41df06
  41debf:	ror    ebx,cl
  41dec1:	mov    ah,0xb
  41dec3:	or     dh,cl
  41dec5:	jg     0x41de9d
  41dec7:	add    eax,0x897908c1
  41decc:	retf   
  41decd:	jecxz  0x41df21
  41decf:	cs in  eax,dx
  41ded1:	pushf  
  41ded2:	inc    ebx
  41ded3:	pusha  
  41ded4:	add    eax,0x5b3280a
  41ded9:	imul   ecx,DWORD PTR [ecx-0x5161f3ea],0x50
  41dee0:	mov    cl,bl
  41dee2:	scas   al,BYTE PTR es:[edi]
  41dee3:	pop    edi
  41dee4:	sbb    esp,DWORD PTR [ecx+0xe]
  41dee7:	sbb    BYTE PTR [esi-0x772e8825],dh
  41deed:	pop    ecx
  41deee:	mov    ah,0x5d
  41def0:	mov    bh,0x27
  41def2:	sbb    bl,BYTE PTR [ebx]
  41def4:	push   esp
  41def5:	mov    esi,0xccc3eb60
  41defa:	add    ebp,eax
  41defc:	lods   al,BYTE PTR ds:[esi]
  41defd:	mov    al,0x77
  41deff:	mov    bl,0x5a
  41df01:	outs   dx,BYTE PTR ds:[esi]
  41df02:	(bad)  
  41df04:	adc    bh,BYTE PTR [ebx]
  41df06:	push   0x9cdb8fb0
  41df0b:	dec    ebx
  41df0c:	jecxz  0x41df14
  41df0e:	mov    ah,0x78
  41df10:	into   
  41df11:	pop    ecx
  41df12:	das    
  41df13:	fadd   st(2),st
  41df15:	test   eax,0x428707b1
  41df1a:	shl    BYTE PTR [ebp-0x413ed31],0x7b
  41df21:	ins    BYTE PTR es:[edi],dx
  41df22:	and    bh,bh
  41df24:	push   ss
  41df25:	ror    BYTE PTR ds:0xcae869b1,cl
  41df2b:	loopne 0x41dedf
  41df2d:	lock pop es
  41df2f:	jb     0x41dedb
  41df31:	(bad)  
  41df32:	not    eax
  41df34:	stc    
  41df35:	and    ebp,DWORD PTR [ebp+0x3]
  41df38:	or     BYTE PTR [ecx-0x72],al
  41df3b:	mov    eax,0xc656b69b
  41df40:	ss scas eax,DWORD PTR es:[edi]
  41df42:	xchg   ebx,eax
  41df43:	and    bh,bh
  41df45:	pop    ebp
  41df46:	mov    cl,0x5d
  41df48:	cs aaa 
  41df4a:	cwde   
  41df4b:	mov    ch,cl
  41df4d:	pop    DWORD PTR [eax-0xc]
  41df50:	cmp    DWORD PTR [edx],edi
  41df52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df53:	mov    ds:0x779a9426,eax
  41df58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df59:	pop    esp
  41df5a:	out    dx,al
  41df5b:	call   0xc829:0x103632e2
  41df62:	loope  0x41df1b
  41df64:	data16 (bad) 
  41df66:	in     eax,dx
  41df67:	inc    eax
  41df68:	sbb    DWORD PTR [edi+edi*8+0x67],edi
  41df6c:	pop    eax
  41df6d:	fadd   QWORD PTR [ebx]
  41df6f:	call   0x1a74915a
  41df74:	push   ebp
  41df75:	cwde   
  41df76:	imul   DWORD PTR [edi]
  41df78:	(bad)  
  41df79:	(bad)  
  41df7a:	push   ebx
  41df7b:	iret   
  41df7c:	rcr    DWORD PTR es:[esi-0x76b01dbc],1
  41df83:	jmp    0xabc5a4ec
  41df88:	dec    ecx
  41df89:	repz pop ebp
  41df8b:	mov    edi,0x460d545f
  41df90:	push   es
  41df91:	or     ebx,eax
  41df93:	cmp    DWORD PTR [ebp+0x43],esi
  41df96:	dec    edi
  41df97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df98:	js     0x41df58
  41df9a:	sub    eax,0xe25d80c9
  41df9f:	xchg   esp,eax
  41dfa0:	clc    
  41dfa1:	mov    ebx,0x5ead90fc
  41dfa6:	jo     0x41dfdd
  41dfa8:	leave  
  41dfa9:	in     eax,0xfb
  41dfab:	js     0x41e017
  41dfad:	int3   
  41dfae:	ds int3 
  41dfb0:	cmp    dl,cl
  41dfb2:	xchg   esp,eax
  41dfb3:	test   cl,bh
  41dfb5:	add    ch,dh
  41dfb7:	pop    edx
  41dfb8:	rol    BYTE PTR [ebx-0x54],1
  41dfbb:	mov    ?,WORD PTR [esi-0x64]
  41dfbe:	stc    
  41dfbf:	shl    DWORD PTR [edx],0x68
  41dfc2:	ret    
  41dfc3:	xor    al,0x21
  41dfc5:	lds    esp,FWORD PTR [edx-0x4de7fc66]
  41dfcb:	mov    dh,0xb4
  41dfcd:	fwait
  41dfce:	(bad)  
  41dfcf:	fldcw  WORD PTR [edx-0x7e55e58b]
  41dfd5:	inc    ebx
  41dfd6:	cmp    edi,DWORD PTR [esi-0x15]
  41dfd9:	(bad)  
  41dfdb:	push   edx
  41dfdc:	jge    0x41dfde
  41dfde:	out    dx,eax
  41dfdf:	inc    ebp
  41dfe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe1:	outs   dx,BYTE PTR ds:[esi]
  41dfe2:	outs   dx,DWORD PTR ds:[esi]
  41dfe3:	inc    esp
  41dfe4:	mov    ecx,0x4644f1f3
  41dfe9:	fisttp DWORD PTR [eax-0x2b]
  41dfec:	int3   
  41dfed:	lods   al,BYTE PTR ds:[esi]
  41dfee:	jmp    0x3500:0xff6994f2
  41dff5:	out    0x57,al
  41dff7:	sbb    DWORD PTR [esi+0x1501ee85],esp
  41dffd:	xchg   edx,eax
  41dffe:	or     DWORD PTR [ebx+0x715191fa],ebx
  41e004:	clc    
  41e005:	mov    dl,0x17
  41e007:	mov    al,ds:0x6d34a408
  41e00c:	das    
  41e00d:	sub    al,0x36
  41e00f:	add    esi,DWORD PTR [eax+0x4fe113d6]
  41e015:	sbb    BYTE PTR [eax+0x3],ah
  41e018:	cli    
  41e019:	mov    eax,DWORD PTR [esi-0x44bd8928]
  41e01f:	pop    ebp
  41e020:	add    esi,esp
  41e022:	sbb    al,0x12
  41e024:	mov    dl,dl
  41e026:	in     al,dx
  41e027:	stos   DWORD PTR es:[edi],eax
  41e028:	(bad)  
  41e029:	imul   esp,ebx,0xffffffa4
  41e02c:	jmp    0xcba638e
  41e031:	jmp    0x82cd9339
  41e036:	jne    0x41dff7
  41e038:	sub    eax,0xda95ed0d
  41e03d:	push   edx
  41e03f:	inc    esp
  41e040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e041:	jae    0x41e086
  41e043:	jmp    0x41dfec
  41e045:	pop    edx
  41e046:	push   ecx
  41e047:	dec    esp
  41e048:	into   
  41e049:	bound  ebx,QWORD PTR [ecx+0xd]
  41e04c:	ins    BYTE PTR es:[edi],dx
  41e04d:	inc    eax
  41e04e:	adc    eax,0xdb662ed6
  41e053:	jae    0x41e066
  41e055:	adc    eax,0x96aeacaf
  41e05a:	inc    eax
  41e05b:	(bad)  
  41e05d:	add    eax,0xf41859c1
  41e062:	mov    eax,0x3dd96f2b
  41e067:	or     al,0x2c
  41e069:	jecxz  0x41e0e3
  41e06b:	aam    0x1e
  41e06d:	lea    esp,[esi-0x1f]
  41e070:	dec    edi
  41e071:	icebp  
  41e072:	out    0xc5,eax
  41e074:	mov    ds:0x7e2668b,eax
  41e079:	test   eax,0x76f81472
  41e07e:	out    dx,eax
  41e07f:	fidivr DWORD PTR [eax]
  41e081:	cmp    DWORD PTR [ecx-0x7909b3ab],ebp
  41e087:	mov    ebp,0x9843b3f8
  41e08c:	stos   DWORD PTR es:[edi],eax
  41e08d:	inc    edx
  41e08e:	scas   al,BYTE PTR es:[edi]
  41e08f:	jne    0x41e02c
  41e091:	mov    DWORD PTR [eax+0x53],edi
  41e094:	(bad)  
  41e095:	fld    DWORD PTR ds:0x7be1e5e2
  41e09b:	mov    ecx,0xaec98907
  41e0a0:	pop    es
  41e0a1:	rol    BYTE PTR [ebx],cl
  41e0a3:	jmp    0x38b70bb1
  41e0a8:	(bad)  [edi]
  41e0aa:	idiv   bl
  41e0ac:	mov    ch,0xf9
  41e0ae:	jg     0x41e122
  41e0b0:	pushf  
  41e0b1:	loop   0x41e0ba
  41e0b3:	mov    eax,0x5a1394ab
  41e0b8:	xor    BYTE PTR [eax-0x3c],ah
  41e0bb:	xor    BYTE PTR [esi+eiz*4],ah
  41e0be:	adc    DWORD PTR [edi-0x3d68bd9d],0xfffffff6
  41e0c5:	sub    DWORD PTR cs:[edi-0x36],0x548d600b
  41e0cd:	lds    ebx,FWORD PTR [esp+eax*4+0x55d5d794]
  41e0d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0d5:	fs gs inc ebp
  41e0d8:	aas    
  41e0d9:	sub    DWORD PTR [esi],edx
  41e0db:	gs aam 0x54
  41e0de:	sbb    dl,BYTE PTR [ecx-0x1fcccc05]
  41e0e4:	sbb    DWORD PTR [eax+0x5490c83c],ecx
  41e0ea:	fcom   st(4)
  41e0ec:	clc    
  41e0ed:	xchg   BYTE PTR [esp+ecx*8-0x24],bh
  41e0f1:	push   esp
  41e0f2:	inc    edi
  41e0f3:	sti    
  41e0f4:	hlt    
  41e0f5:	push   cs
  41e0f6:	jle    0x41e102
  41e0f8:	and    al,0x55
  41e0fa:	int3   
  41e0fb:	lods   al,BYTE PTR ds:[esi]
  41e0fc:	ror    DWORD PTR [edi+0x578cfdeb],0x59
  41e103:	or     cl,ah
  41e105:	sub    al,0x63
  41e107:	xor    eax,0x3c52b92d
  41e10c:	nop
  41e10d:	inc    edi
  41e10e:	xor    cl,dl
  41e110:	jmp    0x41e095
  41e112:	in     al,dx
  41e113:	inc    eax
  41e114:	lods   eax,DWORD PTR ds:[esi]
  41e115:	and    edx,DWORD PTR [ebp+0x6a]
  41e118:	test   BYTE PTR [ebp-0x30],bl
  41e11b:	cwde   
  41e11c:	jge    0x41e0c9
  41e11e:	call   0xd388:0x6b5b0bcb
  41e125:	add    al,BYTE PTR [edx]
  41e127:	pop    ss
  41e128:	cs xchg ebx,eax
  41e12a:	xchg   ecx,eax
  41e12b:	mov    ds,WORD PTR ss:[ecx-0x45]
  41e12f:	push   ebx
  41e130:	rcl    BYTE PTR [eax+0x1b],1
  41e133:	loop   0x41e0e5
  41e135:	or     ch,BYTE PTR [esp+ebp*1]
  41e138:	arpl   WORD PTR ds:0xc2fd58be,cx
  41e13e:	xlat   BYTE PTR ds:[ebx]
  41e13f:	loope  0x41e16b
  41e141:	ret    0x2f50
  41e144:	imul   esp,DWORD PTR [ecx+0x53],0x56
  41e148:	sub    eax,0xc5d9cfc
  41e14d:	enter  0x5a18,0xa5
  41e151:	cmp    BYTE PTR [esi-0x42],cl
  41e154:	rcr    BYTE PTR [esi-0x14],cl
  41e157:	xor    al,0x9a
  41e159:	push   ds
  41e15a:	cmc    
  41e15b:	and    eax,0xb1245936
  41e160:	push   ebp
  41e161:	dec    edi
  41e162:	imul   eax,DWORD PTR [ebp-0x69],0xd6a30c95
  41e169:	jno    0x41e1e5
  41e16b:	into   
  41e16c:	mov    eax,ds:0x262468e0
  41e171:	aam    0xfc
  41e173:	imul   edi,DWORD PTR [esi],0xc
  41e176:	ins    BYTE PTR es:[edi],dx
  41e177:	shr    DWORD PTR [edi+edx*2-0x33],cl
  41e17b:	test   al,0x9d
  41e17d:	test   DWORD PTR [ebx+ebx*4-0x7bec1306],esp
  41e184:	out    dx,ax
  41e186:	in     eax,0x9a
  41e188:	call   0xb77a:0xa5a83655
  41e18f:	push   edi
  41e190:	shl    esi,1
  41e192:	and    al,0x57
  41e194:	aam    0x7f
  41e196:	mov    al,0xad
  41e198:	es stos BYTE PTR es:[edi],al
  41e19a:	cmp    DWORD PTR [ecx-0x48],esp
  41e19d:	addr16 icebp 
  41e19f:	lods   al,BYTE PTR ds:[esi]
  41e1a0:	cdq    
  41e1a1:	fld    st(2)
  41e1a3:	push   ebx
  41e1a4:	dec    esp
  41e1a5:	jb     0x41e171
  41e1a7:	jne    0x41e13e
  41e1a9:	in     eax,dx
  41e1aa:	pop    esp
  41e1ab:	dec    edi
  41e1ac:	outs   dx,BYTE PTR ds:[esi]
  41e1ae:	mov    esp,0x625a3fc2
  41e1b3:	es aam 0x51
  41e1b6:	cdq    
  41e1b7:	sar    DWORD PTR [ebx+esi*4+0x26],1
  41e1bb:	ss xor al,0x59
  41e1be:	push   0xffffffcf
  41e1c0:	arpl   bp,si
  41e1c2:	xor    eax,0xb6578bc2
  41e1c7:	loop   0x41e17a
  41e1c9:	fld    QWORD PTR [edi-0x66]
  41e1cc:	lods   al,BYTE PTR ds:[esi]
  41e1cd:	(bad)  
  41e1ce:	jnp    0x41e16d
  41e1d0:	es mov bl,0x29
  41e1d3:	push   ebx
  41e1d4:	std    
  41e1d5:	adc    eax,0xc8a52322
  41e1da:	jb     0x41e24a
  41e1dc:	mov    ch,0x8e
  41e1de:	mov    esp,0x48c6f4e3
  41e1e3:	pushf  
  41e1e4:	bound  esi,QWORD PTR [esi+0x3ac33c1c]
  41e1ea:	pop    esp
  41e1eb:	imul   ebx,ecx,0xffffff9b
  41e1ee:	aad    0x8d
  41e1f0:	mov    bh,0xc0
  41e1f2:	cld    
  41e1f3:	xor    BYTE PTR [ebx+0x8df0517],bh
  41e1f9:	pop    edi
  41e1fa:	and    bh,0xd8
  41e1fd:	(bad)  
  41e1fe:	out    dx,al
  41e1ff:	jle    0x41e24a
  41e201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e202:	add    eax,0x2e3172e2
  41e207:	xor    dl,BYTE PTR [edi]
  41e209:	mov    ecx,0xab7d6ba1
  41e20e:	pop    edi
  41e20f:	js     0x41e240
  41e211:	mov    bl,0x16
  41e213:	aaa    
  41e214:	gs jmp 0x3ca2:0xd8fe94d6
  41e21c:	or     bl,ch
  41e21e:	add    ebp,DWORD PTR [edx-0x7b]
  41e221:	iret   
  41e222:	add    BYTE PTR [eax],cl
  41e224:	push   esi
  41e225:	pop    eax
  41e226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e227:	int3   
  41e228:	daa    
  41e229:	inc    eax
  41e22a:	push   cs
  41e22b:	test   bl,bl
  41e22d:	mov    ds:0x684046d3,eax
  41e232:	xchg   dh,bl
  41e234:	lods   al,BYTE PTR ds:[esi]
  41e235:	js     0x41e1e1
  41e237:	out    0x51,eax
  41e239:	mov    cl,0xe4
  41e23b:	push   cs
  41e23c:	sti    
  41e23d:	ins    BYTE PTR es:[edi],dx
  41e23e:	jns    0x41e291
  41e240:	shl    BYTE PTR [edi+ecx*2],1
  41e243:	mov    ch,0x2e
  41e245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e246:	(bad)  
  41e247:	sti    
  41e248:	clc    
  41e249:	jo     0x41e26e
  41e24b:	cmp    ecx,DWORD PTR [edi]
  41e24d:	ja     0x41e254
  41e24f:	into   
  41e250:	push   edi
  41e251:	inc    edi
  41e252:	leave  
  41e253:	sti    
  41e254:	cmp    bh,BYTE PTR [ebp+0x6]
  41e257:	ret    
  41e258:	sbb    DWORD PTR [eax+0x51],0xc
  41e25c:	and    bh,BYTE PTR ds:0x7a66cc7e
  41e262:	sbb    dl,BYTE PTR [ebx]
  41e264:	sub    eax,0x26f3ae29
  41e269:	jb     0x41e2aa
  41e26b:	mov    dh,0x7f
  41e26d:	xchg   ebp,eax
  41e26e:	inc    edi
  41e26f:	push   cs
  41e270:	in     eax,0x22
  41e272:	add    eax,0x8f1e4a2c
  41e277:	inc    esi
  41e278:	iret   
  41e279:	xchg   ebp,eax
  41e27a:	add    DWORD PTR [ebp+0x3400e337],esi
  41e280:	repz sar BYTE PTR [ecx-0x36],cl
  41e284:	(bad)  
  41e285:	cmc    
  41e286:	add    bl,BYTE PTR [edx+0x40]
  41e289:	sbb    ch,bh
  41e28b:	xchg   esp,eax
  41e28c:	xchg   esp,eax
  41e28d:	inc    edi
  41e28e:	enter  0x4044,0x10
  41e292:	adc    al,0xf9
  41e294:	in     al,0xa1
  41e296:	mov    al,ds:0xdf331e66
  41e29b:	xchg   edx,eax
  41e29c:	mov    ebp,DWORD PTR [edi-0x5b7a948]
  41e2a2:	hlt    
  41e2a3:	cmp    ebp,DWORD PTR [edi-0x21a79ca2]
  41e2a9:	jae    0x41e26f
  41e2ab:	xchg   DWORD PTR [ebx],edx
  41e2ad:	retf   0xd984
  41e2b0:	xor    BYTE PTR [ebx+0x64b02b4f],dl
  41e2b6:	fadd   DWORD PTR [ecx+0x60937a5e]
  41e2bc:	xchg   ecx,eax
  41e2bd:	shl    BYTE PTR [ebx],0x64
  41e2c0:	clc    
  41e2c1:	add    al,0x98
  41e2c3:	jp     0x41e304
  41e2c5:	scas   eax,DWORD PTR es:[edi]
  41e2c6:	push   0xfa04f2a2
  41e2cb:	add    al,0xe9
  41e2cd:	enterw 0xe381,0xff
  41e2d2:	in     ax,dx
  41e2d4:	add    BYTE PTR [esi-0x3b],ah
  41e2d7:	pop    DWORD PTR [edi+0x4d6bb99]
  41e2dd:	push   ecx
  41e2de:	jae    0x41e353
  41e2e0:	mov    BYTE PTR [ecx-0x2e],bh
  41e2e3:	ins    DWORD PTR es:[edi],dx
  41e2e4:	stc    
  41e2e5:	push   edx
  41e2e6:	jne    0x41e360
  41e2e8:	test   al,0x2
  41e2ea:	lea    ecx,[ebx+0x48178b61]
  41e2f0:	lods   eax,DWORD PTR ds:[esi]
  41e2f1:	js     0x41e31e
  41e2f3:	add    BYTE PTR [edi-0x37],bh
  41e2f6:	lahf   
  41e2f7:	mov    edx,ecx
  41e2f9:	jmp    0x41e2a8
  41e2fb:	imul   edx,DWORD PTR [ebx],0xffffffde
  41e2fe:	jno    0x41e366
  41e300:	enter  0x3480,0xbb
  41e304:	popf   
  41e305:	dec    ebx
  41e306:	pusha  
  41e307:	fisubr WORD PTR [edx+0x1a3338ea]
  41e30d:	jge    0x41e2dc
  41e30f:	les    esi,FWORD PTR [ebp-0x43e7b1af]
  41e315:	xchg   ebp,eax
  41e316:	mov    cl,0x2d
  41e318:	sahf   
  41e319:	inc    ecx
  41e31a:	and    eax,0xd593ce01
  41e31f:	pop    esp
  41e320:	pop    ds
  41e321:	jo     0x41e37e
  41e323:	sahf   
  41e324:	xor    esp,eax
  41e326:	dec    esi
  41e327:	xor    eax,edi
  41e329:	xor    edx,0x0
  41e32c:	cmp    eax,0x70941e0f
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x16
  41e3e0:	addr16 pop edi
  41e3e2:	dec    edx
  41e3e3:	adc    ebp,edx
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0x9f
  41e3ec:	adc    DWORD PTR [ebx+edx*2+0x37],ecx
  41e3f0:	imul   eax,DWORD PTR [edi+0x50b0dbd2],0x84e2b679
  41e3fa:	jmp    0xab7881fe
  41e3ff:	xor    ah,dh
  41e401:	cmp    BYTE PTR [esp+eax*4],dl
  41e404:	inc    esi
  41e405:	mov    al,0xb0
  41e407:	cld    
  41e408:	ja     0x41e3f9
  41e40a:	adc    bl,bl
  41e40c:	xlat   BYTE PTR ds:[ebx]
  41e40d:	cmp    eax,0x651b5a41
  41e412:	xor    edx,eax
  41e414:	jp     0x41e485
  41e416:	pop    ebp
  41e417:	enter  0x7a38,0x87
  41e41b:	mov    ds:0xcf383232,eax
  41e420:	out    0x2a,al
  41e422:	ja     0x41e499
  41e424:	sahf   
  41e425:	mov    ecx,0xcea5ce01
  41e42a:	test   ebx,0x43a66d3b
  41e430:	jmp    0x7983:0x30ba780f
  41e437:	data16 fcomp DWORD PTR [ebp-0x3e]
  41e43b:	cmp    ecx,ebp
  41e43d:	sub    ebp,DWORD PTR [edx-0x3e824e1f]
  41e443:	stc    
  41e444:	scas   al,BYTE PTR es:[edi]
  41e445:	aad    0xc5
  41e447:	cmp    cl,BYTE PTR [edi-0x71]
  41e44a:	pop    edx
  41e44b:	stmxcsr DWORD PTR [ebp+0x2e]
  41e44f:	je     0x41e451
  41e451:	fcmovnu st,st(6)
  41e453:	retf   0xc241
  41e456:	mov    bl,0x19
  41e458:	ja     0x41e44a
  41e45a:	add    esi,DWORD PTR [edi+ebx*8-0x75763f80]
  41e461:	neg    BYTE PTR [ecx+0x6b]
  41e464:	or     ebp,ebx
  41e466:	push   cs
  41e467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e468:	pop    edi
  41e469:	fist   WORD PTR [ecx]
  41e46b:	or     BYTE PTR [ecx],dl
  41e46d:	fdivr  DWORD PTR [edi]
  41e46f:	sub    al,BYTE PTR [ecx]
  41e471:	std    
  41e472:	paddb  mm4,QWORD PTR [ebx+0x62]
  41e476:	push   eax
  41e477:	mov    esp,0xb8833989
  41e47c:	cmp    BYTE PTR [ecx+0x1d6899fd],al
  41e482:	enter  0x2e44,0xc3
  41e486:	pushf  
  41e487:	xchg   edx,eax
  41e488:	push   ebx
  41e489:	repz js 0x41e496
  41e48c:	mov    ebx,ecx
  41e48e:	pushf  
  41e48f:	push   ecx
  41e490:	adc    eax,0x65d8a933
  41e495:	sub    ebp,edi
  41e497:	jg     0x41e47e
  41e499:	mov    ch,0x9a
  41e49b:	imul   ebp,DWORD PTR [edx+0x79efe30f],0x45
  41e4a2:	sub    eax,0xd378f6b1
  41e4a7:	xchg   bh,ah
  41e4a9:	or     esp,DWORD PTR [eax-0x2d]
  41e4ac:	and    ch,BYTE PTR [ecx-0x60]
  41e4af:	xor    edi,DWORD PTR [esi-0xe]
  41e4b2:	jns    0x41e4ac
  41e4b4:	shl    BYTE PTR gs:[edi-0x6f057727],cl
  41e4bb:	or     eax,0x910bed36
  41e4c0:	das    
  41e4c1:	int3   
  41e4c2:	push   esi
  41e4c3:	inc    ebp
  41e4c4:	addr16 cs xchg ebx,eax
  41e4c7:	std    
  41e4c8:	out    0xc5,al
  41e4ca:	fmul   DWORD PTR [esp+edx*8+0x20f0b316]
  41e4d1:	mov    al,0xf0
  41e4d3:	mov    edi,0xdcc5d9ec
  41e4d8:	jne    0x41e4e6
  41e4da:	cmp    DWORD PTR [edi-0x553c5bf5],esp
  41e4e0:	inc    esi
  41e4e1:	sub    ebp,DWORD PTR [eax+0x6d]
  41e4e4:	mov    ah,0xf2
  41e4e6:	and    DWORD PTR [edi-0x1],eax
  41e4e9:	inc    ebp
  41e4ea:	addr16 xchg edi,eax
  41e4ec:	das    
  41e4ed:	cmp    esp,DWORD PTR [esi]
  41e4ef:	aaa    
  41e4f0:	add    DWORD PTR [ebx-0x63],esp
  41e4f3:	mov    DWORD PTR [edx+0x79],ebx
  41e4f6:	add    cl,ah
  41e4f8:	xor    eax,0xc471e441
  41e4fd:	sahf   
  41e4fe:	repz sub DWORD PTR [edi],ebp
  41e501:	in     eax,dx
  41e502:	mov    cl,0xa2
  41e504:	clc    
  41e505:	xchg   edx,eax
  41e506:	cli    
  41e507:	sbb    DWORD PTR [ecx-0x6e869360],0x7ac35ec6
  41e511:	sbb    al,0xe2
  41e513:	add    eax,0x8fef8c5d
  41e518:	and    eax,0x7ee3df71
  41e51d:	popf   
  41e51e:	and    al,0x4c
  41e520:	pop    esp
  41e521:	mov    cl,0x6a
  41e523:	dec    ecx
  41e524:	xchg   ecx,eax
  41e525:	sbb    bl,cl
  41e527:	jbe    0x41e556
  41e529:	mov    esp,edi
  41e52b:	pop    edx
  41e52c:	das    
  41e52d:	mov    DWORD PTR [ebx],edi
  41e52f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e530:	pop    es
  41e531:	mov    ebx,0xf047cfd6
  41e536:	mov    dh,0xf4
  41e538:	push   es
  41e539:	sti    
  41e53a:	add    DWORD PTR [ebx-0x63],eax
  41e53d:	mov    es,ebp
  41e53f:	xor    eax,DWORD PTR [edi]
  41e541:	mov    cl,BYTE PTR [eax-0x22bf8ed7]
  41e547:	les    esi,FWORD PTR [ecx+0x4bc08b3d]
  41e54d:	fs mov ebp,0x9cea52d2
  41e553:	gs leave 
  41e555:	cmp    eax,0x597be18b
  41e55a:	xor    dh,0x90
  41e55d:	push   ss
  41e55e:	push   esp
  41e55f:	pop    edx
  41e560:	push   esi
  41e561:	inc    esi
  41e562:	es cwde 
  41e564:	jnp    0x41e5b4
  41e566:	rcl    esi,cl
  41e568:	jmp    0x8f44:0x1596fcda
  41e56f:	adc    eax,0x57152d1b
  41e574:	mov    esp,0x1572ef09
  41e579:	les    ebx,FWORD PTR [ebx+eiz*8+0x1d]
  41e57d:	stos   BYTE PTR es:[edi],al
  41e57e:	stc    
  41e57f:	scas   eax,DWORD PTR es:[edi]
  41e580:	in     eax,dx
  41e581:	pop    ds
  41e582:	int    0x91
  41e584:	movnti DWORD PTR [edx-0x63],esi
  41e588:	or     eax,esi
  41e58a:	jecxz  0x41e5c1
  41e58c:	lock ins BYTE PTR es:[edi],dx
  41e58e:	stos   DWORD PTR es:[edi],eax
  41e58f:	push   es
  41e590:	and    esp,DWORD PTR [eax+0x5c]
  41e593:	mov    WORD PTR [ebx-0x4e7090d4],es
  41e599:	sbb    BYTE PTR [edi+0x13],0x2d
  41e59d:	and    ebp,DWORD PTR [esp+ebx*4+0x528eb768]
  41e5a4:	and    al,0x22
  41e5a6:	outs   dx,BYTE PTR ds:[esi]
  41e5a7:	mov    edi,0x12292d31
  41e5ac:	fnstsw WORD PTR [eax+0x74]
  41e5af:	jl     0x41e5a2
  41e5b1:	sbb    BYTE PTR [eax],0x4c
  41e5b4:	mov    ds,edi
  41e5b6:	cmp    eax,0xe996f58e
  41e5bb:	lods   al,BYTE PTR ds:[esi]
  41e5bc:	pop    edi
  41e5bd:	and    al,bl
  41e5bf:	xchg   BYTE PTR [edi],ah
  41e5c1:	or     al,0xba
  41e5c3:	out    dx,eax
  41e5c4:	cmp    BYTE PTR [eax+0x72],0x7
  41e5c8:	jno    0x41e603
  41e5ca:	push   edx
  41e5cb:	or     eax,0x28c39bd8
  41e5d0:	pop    esp
  41e5d1:	and    al,0xb1
  41e5d3:	mov    BYTE PTR ds:0xc0f02ead,0x29
  41e5da:	and    BYTE PTR [ebp+0x1aa117c6],ch
  41e5e0:	lahf   
  41e5e1:	sub    ebx,DWORD PTR [esi+0x25]
  41e5e4:	popa   
  41e5e5:	xchg   esi,eax
  41e5e6:	call   0x6d851692
  41e5eb:	and    al,0x69
  41e5ed:	or     dh,BYTE PTR [esi]
  41e5ef:	jmp    0xe8d40188
  41e5f4:	jg     0x41e657
  41e5f6:	ret    
  41e5f7:	push   esp
  41e5f8:	pop    ds
  41e5f9:	or     eax,0x8c69625d
  41e5fe:	test   BYTE PTR [ecx-0x501e72b4],ah
  41e604:	repz out dx,eax
  41e606:	or     DWORD PTR [edi-0x564c78d],edi
  41e60c:	call   0x776a2507
  41e611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e612:	inc    edi
  41e613:	adc    eax,0xbdd27c37
  41e618:	sbb    DWORD PTR [esi],edi
  41e61a:	inc    ecx
  41e61b:	mov    cl,0x69
  41e61d:	jmp    0xc5e2859f
  41e622:	pop    edx
  41e623:	imul   ebp,eax,0xffffff95
  41e626:	lea    edx,[ecx]
  41e628:	ds sub eax,0xaeaed32c
  41e62e:	ins    DWORD PTR es:[di],dx
  41e630:	test   eax,0xf20290f4
  41e635:	(bad)  
  41e636:	xchg   ebx,eax
  41e637:	xchg   esi,eax
  41e638:	retf   0x5d3a
  41e63b:	jns    0x41e661
  41e63d:	imul   edx,DWORD PTR [esi-0x52],0xffffffcb
  41e641:	js     0x41e5f5
  41e643:	xchg   edi,eax
  41e644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e645:	scas   al,BYTE PTR es:[edi]
  41e646:	repnz rcr BYTE PTR [ebp+0x1f],1
  41e64a:	jl     0x41e6ae
  41e64c:	inc    esi
  41e64d:	ss jno 0x41e5fd
  41e650:	or     DWORD PTR [edx],edi
  41e652:	jecxz  0x41e61e
  41e654:	sbb    al,0xae
  41e656:	sar    BYTE PTR [esp+edx*2+0x69],cl
  41e65a:	mov    esi,0x6dd07b95
  41e65f:	xor    edi,DWORD PTR [ebx-0x68]
  41e662:	xor    ch,BYTE PTR [edx+0xc]
  41e665:	outs   dx,DWORD PTR ds:[esi]
  41e666:	mov    ecx,0x24f71985
  41e66b:	dec    esp
  41e66c:	push   ebx
  41e66d:	xchg   edi,eax
  41e66e:	jmp    0xdda4f4d5
  41e673:	shl    ecx,0xc4
  41e676:	stc    
  41e677:	cmp    BYTE PTR [ebx+0x36cb95f6],ah
  41e67d:	jb     0x41e60a
  41e67f:	aas    
  41e680:	and    DWORD PTR [edx+edx*2],eax
  41e683:	out    0x93,eax
  41e685:	rol    DWORD PTR [edi+0x39b59a12],0x55
  41e68c:	mov    esp,0x2cdc11a9
  41e691:	es mov dl,0xbd
  41e694:	jmp    0xad2:0x8770553
  41e69b:	or     eax,DWORD PTR [edx-0x42]
  41e69e:	pop    ebp
  41e69f:	clc    
  41e6a0:	xor    DWORD PTR ds:0xf3cc95d6,0xffffff87
  41e6a7:	push   ss
  41e6a8:	inc    edx
  41e6a9:	iret   
  41e6aa:	sar    BYTE PTR [eax],0x4e
  41e6ad:	inc    ebx
  41e6ae:	xor    al,0x44
  41e6b0:	mov    al,ds:0xa6ba5c1f
  41e6b5:	jp     0x41e6f1
  41e6b7:	sbb    DWORD PTR [ebx-0x6d],ebx
  41e6ba:	mov    esp,0xc207a050
  41e6bf:	mov    ds:0x937167c4,al
  41e6c4:	add    edi,DWORD PTR [edx-0x53]
  41e6c7:	and    cl,BYTE PTR [edx+eax*8]
  41e6ca:	fist   DWORD PTR [esi+0x60fe7586]
  41e6d0:	(bad)  
  41e6d1:	out    dx,eax
  41e6d2:	cli    
  41e6d3:	inc    esp
  41e6d4:	push   esp
  41e6d5:	sar    bh,cl
  41e6d7:	mov    edi,0xbf3b0e92
  41e6dc:	pushw  0x1e
  41e6df:	stc    
  41e6e0:	add    ebx,DWORD PTR [eax]
  41e6e2:	pop    ebx
  41e6e3:	dec    esp
  41e6e4:	push   ebx
  41e6e5:	scas   al,BYTE PTR es:[edi]
  41e6e6:	arpl   ax,sp
  41e6e8:	or     DWORD PTR [edx+edi*8],edi
  41e6eb:	stos   BYTE PTR es:[edi],al
  41e6ec:	sub    bl,cl
  41e6ee:	xor    dl,BYTE PTR [eax]
  41e6f0:	pusha  
  41e6f1:	sar    al,1
  41e6f3:	mov    ebp,DWORD PTR [esi-0x191f4a70]
  41e6f9:	mov    dh,al
  41e6fb:	xor    al,BYTE PTR [edx-0x47]
  41e6fe:	xchg   edx,eax
  41e6ff:	or     ebp,edi
  41e701:	stos   DWORD PTR es:[edi],eax
  41e702:	xchg   ecx,eax
  41e703:	mov    ds:0xa4b9ac9d,eax
  41e708:	push   cs
  41e709:	xor    DWORD PTR [edi+0x6d],esi
  41e70c:	xor    bl,BYTE PTR [esi]
  41e70e:	xchg   BYTE PTR [edx+0x301c20f7],cl
  41e714:	lods   eax,DWORD PTR ds:[esi]
  41e716:	test   ecx,ebp
  41e718:	loop   0x41e70e
  41e71a:	mov    edx,0x7ca5fcdd
  41e71f:	outs   dx,BYTE PTR ds:[esi]
  41e720:	nop    DWORD PTR [ebp-0x52fabc78]
  41e727:	mov    edx,DWORD PTR [edx+edi*2+0x33]
  41e72b:	add    al,BYTE PTR [eax]
  41e72d:	imul   esp,edi,0xf
  41e730:	push   edx
  41e731:	pop    ebp
  41e732:	xchg   ebx,eax
  41e733:	sub    dl,ah
  41e735:	xchg   edx,eax
  41e736:	sti    
  41e737:	push   0xaa6fe221
  41e73c:	jns    0x41e74c
  41e73e:	jmp    FWORD PTR [esi+0x7844bbd3]
  41e744:	adc    dh,BYTE PTR [ebx+0x24017dbb]
  41e74a:	sahf   
  41e74b:	xor    DWORD PTR [ebx+0x43],esp
  41e74e:	test   eax,0xaf696a55
  41e753:	jno    0x41e7be
  41e755:	mov    ebx,0x2b773a1b
  41e75a:	jno    0x41e6dc
  41e75c:	or     al,0xe5
  41e75e:	cmp    esi,DWORD PTR [edi]
  41e760:	ds add eax,0x9255d665
  41e766:	das    
  41e767:	sbb    dl,0xfa
  41e76a:	add    BYTE PTR [edi-0x2c9a53d8],dh
  41e770:	jl     0x41e7ed
  41e772:	jmp    0x78d43ec6
  41e777:	push   cs
  41e778:	dec    edx
  41e779:	ror    ebx,0x3c
  41e77c:	jge    0x41e7b3
  41e77e:	mov    bh,0x42
  41e780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e781:	mov    al,ds:0x6405251f
  41e786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e787:	pop    es
  41e788:	or     eax,0xe55ed891
  41e78d:	fisttp QWORD PTR [edi]
  41e78f:	cli    
  41e790:	push   ebp
  41e791:	lds    eax,FWORD PTR [esi]
  41e793:	or     BYTE PTR [eax+0x79],al
  41e796:	das    
  41e797:	push   ds
  41e798:	data16 mov bh,BYTE PTR [esi]
  41e79b:	outs   dx,DWORD PTR ds:[esi]
  41e79c:	xchg   ebp,eax
  41e79d:	xor    DWORD PTR [esp+eax*1],esp
  41e7a0:	arpl   WORD PTR [edx+0x59c106b1],dx
  41e7a6:	xchg   esp,eax
  41e7a7:	jne    0x41e801
  41e7a9:	add    DWORD PTR [ecx+ebx*4-0x1f913498],ecx
  41e7b0:	inc    ebp
  41e7b1:	imul   ebx,DWORD PTR ds:0xfcf7d8e7,0x7a
  41e7b8:	outs   dx,DWORD PTR ds:[esi]
  41e7b9:	xor    eax,0x2789fbdc
  41e7be:	sub    ch,BYTE PTR [eax-0xfd625da]
  41e7c4:	add    eax,ebx
  41e7c6:	(bad)  
  41e7c7:	fwait
  41e7c8:	stc    
  41e7c9:	and    BYTE PTR [esp+ebp*8-0x6d],dh
  41e7cd:	repz pop edx
  41e7cf:	xchg   esp,eax
  41e7d0:	mov    esi,0x8be6c3d
  41e7d5:	mov    dh,0xbb
  41e7d7:	sbb    eax,0xa0ad17ea
  41e7dc:	fcomp  DWORD PTR [edi+0x3e791828]
  41e7e2:	ret    
  41e7e3:	retf   0x9938
  41e7e6:	iret   
  41e7e7:	sub    BYTE PTR [bp+si-0x44a5],bh
  41e7ec:	setp   BYTE PTR [ebx-0x689f42d4]
  41e7f3:	mov    ds:0xa49fcee3,eax
  41e7f8:	cmp    DWORD PTR [esi+0x7caba4ea],ecx
  41e7fe:	out    dx,eax
  41e7ff:	jo     0x41e866
  41e801:	ins    BYTE PTR es:[edi],dx
  41e802:	nop
  41e803:	in     al,dx
  41e804:	sub    cl,BYTE PTR [ebp-0x66]
  41e807:	jbe    0x41e830
  41e809:	jp     0x41e812
  41e80b:	xor    edx,DWORD PTR [ebx-0x1b]
  41e80e:	sbb    eax,0x2304f051
  41e813:	xchg   ecx,eax
  41e814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e815:	(bad)  
  41e816:	sub    al,0x83
  41e818:	sbb    eax,0xe0b06071
  41e81d:	or     al,BYTE PTR [ebp+0x35]
  41e820:	add    ebx,DWORD PTR [ebx+eiz*4+0x4f3f82bb]
  41e827:	adc    bl,bh
  41e829:	push   es
  41e82a:	mov    ah,0xe2
  41e82c:	mov    cl,0xf9
  41e82e:	ficom  WORD PTR [ebp-0x41]
  41e831:	and    ch,0x55
  41e834:	sahf   
  41e835:	fiadd  WORD PTR [esi+0x3c]
  41e838:	in     eax,0x50
  41e83a:	mov    bh,0x87
  41e83c:	mov    ds:0xb108c024,eax
  41e841:	or     bh,BYTE PTR [ecx+0xb70006a]
  41e847:	mov    edx,0x9f14cd4a
  41e84c:	jb     0x41e827
  41e84e:	sub    ch,cl
  41e850:	ret    0x48c4
  41e853:	push   ecx
  41e854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e855:	fldcw  WORD PTR [ebx-0x42914375]
  41e85b:	sub    eax,DWORD PTR [ebx+0x56e40ec2]
  41e861:	sahf   
  41e862:	rcl    DWORD PTR [esi-0x7a],cl
  41e865:	mov    edi,DWORD PTR [edi+0x17]
  41e868:	in     eax,0x71
  41e86a:	push   0x10
  41e86c:	add    ebp,esp
  41e86e:	mov    al,0x56
  41e870:	sbb    eax,0x97097df1
  41e875:	das    
  41e876:	jp     0x41e811
  41e878:	push   edi
  41e879:	dec    esi
  41e87a:	in     eax,0xf7
  41e87c:	js     0x41e862
  41e87e:	fsub   st,st(3)
  41e880:	push   ss
  41e881:	lahf   
  41e882:	scas   eax,DWORD PTR es:[edi]
  41e883:	mov    ch,0x11
  41e885:	sahf   
  41e886:	inc    ebp
  41e887:	mov    dh,0x2d
  41e889:	xchg   ebp,eax
  41e88a:	ins    BYTE PTR es:[edi],dx
  41e88b:	mov    ds:0xcf05438,al
  41e890:	iret   
  41e891:	xor    ch,BYTE PTR [ecx+0x4f]
  41e894:	pop    edi
  41e895:	inc    ebp
  41e896:	das    
  41e897:	push   ebp
  41e898:	lea    edi,[ecx]
  41e89a:	popa   
  41e89b:	es jo  0x41e8d4
  41e89e:	cmp    al,0xa4
  41e8a0:	int    0xd0
  41e8a2:	ins    BYTE PTR es:[edi],dx
  41e8a3:	call   0xf50:0x8748231d
  41e8aa:	pop    ebp
  41e8ab:	xchg   edi,esp
  41e8ad:	sar    DWORD PTR [eax+eax*8-0x5077ed90],cl
  41e8b4:	fxch   st(1)
  41e8b6:	sbb    edx,DWORD PTR [eax+0x1275dd14]
  41e8bc:	shl    DWORD PTR [edx],1
  41e8be:	into   
  41e8bf:	in     al,dx
  41e8c0:	repz push ecx
  41e8c2:	pop    edx
  41e8c3:	out    0x55,al
  41e8c5:	cmp    bl,bh
  41e8c7:	push   esi
  41e8c8:	mov    ecx,0x6bb55d2
  41e8cd:	add    al,0xc7
  41e8cf:	push   esi
  41e8d0:	push   es
  41e8d1:	inc    eax
  41e8d2:	sub    dl,al
  41e8d4:	or     BYTE PTR [ebx+0x715c25f1],0xf2
  41e8db:	push   esp
  41e8dc:	test   eax,0xe486a2a4
  41e8e1:	bound  edx,QWORD PTR [eax]
  41e8e3:	in     eax,0xe8
  41e8e5:	aas    
  41e8e6:	push   cs
  41e8e7:	inc    edi
  41e8e8:	cmp    BYTE PTR [ebp+0x14],cl
  41e8eb:	push   edx
  41e8ec:	lds    edx,FWORD PTR [edi]
  41e8ee:	mov    eax,0xd825b697
  41e8f3:	(bad)  
  41e8f4:	loop   0x41e877
  41e8f6:	xor    DWORD PTR [eax+ebp*1+0x7832b767],ecx
  41e8fd:	inc    eax
  41e8fe:	and    eax,0x9695e8d0
  41e903:	push   esp
  41e904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e905:	(bad)  
  41e906:	arpl   cx,bx
  41e908:	inc    ebp
  41e909:	out    0xa5,eax
  41e90b:	test   DWORD PTR [ecx-0x12],edx
  41e90e:	sbb    esp,DWORD PTR [edx+0x8]
  41e911:	fucomi st,st(0)
  41e913:	sahf   
  41e914:	mov    edi,0xd182f597
  41e919:	cmp    al,0x46
  41e91b:	into   
  41e91c:	push   ebp
  41e91d:	xchg   edx,eax
  41e91e:	and    ebx,DWORD PTR [ebx]
  41e920:	fcomp  DWORD PTR [eax+ebp*1]
  41e923:	adc    edi,DWORD PTR [eax]
  41e925:	add    BYTE PTR [edi-0x7173c1e4],bh
  41e92b:	xor    BYTE PTR es:[ebp+edi*8-0x6c],dl
  41e930:	xchg   esp,eax
  41e931:	les    esp,FWORD PTR [ebx-0x7c]
  41e934:	jnp    0x41e992
  41e936:	xor    BYTE PTR [esi-0x6593472b],0xc4
  41e93d:	or     ecx,DWORD PTR [eax+edi*1-0xc]
  41e941:	lods   al,BYTE PTR ds:[esi]
  41e942:	pop    ds
  41e943:	pop    esp
  41e944:	call   0x9fe2421c
  41e949:	shr    BYTE PTR [edi],1
  41e94b:	xchg   esp,eax
  41e94c:	lea    edx,[esp+ebp*2]
  41e94f:	xor    al,0xb9
  41e951:	lods   al,BYTE PTR ds:[esi]
  41e952:	mov    bl,0xc
  41e954:	(bad)  
  41e955:	fstp   TBYTE PTR [esi]
  41e957:	xchg   edx,eax
  41e958:	daa    
  41e959:	push   ds
  41e95a:	xlat   BYTE PTR ds:[ebx]
  41e95b:	xchg   ebx,eax
  41e95c:	pop    di
  41e95e:	pop    esp
  41e95f:	sbb    eax,0x274ab413
  41e964:	cmp    DWORD PTR [ebx+0xe],0x45
  41e968:	outs   dx,BYTE PTR ds:[esi]
  41e969:	daa    
  41e96a:	in     al,dx
  41e96b:	fcom   QWORD PTR [ecx+0x69793b99]
  41e971:	fstp   TBYTE PTR [ebx-0x58]
  41e974:	retf   0x84a6
  41e977:	stc    
  41e978:	ins    DWORD PTR es:[edi],dx
  41e979:	and    esi,eax
  41e97b:	mov    ah,0xec
  41e97d:	ret    
  41e97e:	jl     0x41e9db
  41e980:	jbe    0x41e939
  41e982:	lds    esi,FWORD PTR [eax-0x3d]
  41e985:	pop    ds
  41e986:	mov    al,0x40
  41e988:	jo     0x41e948
  41e98a:	inc    ebx
  41e98b:	test   DWORD PTR [ebp+0x2a],edx
  41e98e:	test   al,0xd5
  41e990:	add    al,0x19
  41e992:	cmp    dl,bh
  41e994:	test   eax,0x56a7c6a1
  41e999:	pusha  
  41e99a:	aam    0x0
  41e99c:	inc    eax
  41e99d:	(bad)  
  41e99e:	(bad)
  41e9a1:	or     ch,dh
  41e9a3:	push   es
  41e9a4:	push   ebx
  41e9a5:	outs   dx,DWORD PTR ds:[esi]
  41e9a6:	retf   0x2ab1
  41e9a9:	aaa    
  41e9aa:	loopne 0x41ea04
  41e9ac:	fcmove st,st(1)
  41e9ae:	repz add ebp,edx
  41e9b1:	and    DWORD PTR [edx+0x56],ebp
  41e9b4:	mov    cl,0x2d
  41e9b6:	jecxz  0x41ea19
  41e9b8:	fnstenv [ecx+0x30]
  41e9bb:	int    0x2d
  41e9bd:	or     esp,0x88265d73
  41e9c3:	cmp    eax,0x45d9e503
  41e9c8:	or     edx,DWORD PTR [edi]
  41e9ca:	icebp  
  41e9cb:	(bad)  
  41e9cd:	jmp    0xc26c:0x1c5a1e62
  41e9d4:	jp     0x41e9fe
  41e9d6:	sub    BYTE PTR [edi],0x4
  41e9d9:	icebp  
  41e9da:	lds    edx,FWORD PTR [ebx]
  41e9dc:	ss jmp ecx
  41e9df:	pop    ebp
  41e9e0:	dec    edx
  41e9e1:	pop    edi
  41e9e2:	mov    ecx,0x6f820b23
  41e9e7:	retf   0x15de
  41e9ea:	mov    al,ds:0x8a1d8098
  41e9ef:	bound  ecx,QWORD PTR [ebx+0x53]
  41e9f2:	sbb    ch,ch
  41e9f4:	arpl   WORD PTR [edi-0x69577013],bx
  41e9fa:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41e9fc:	sub    dl,al
  41e9fe:	mov    al,bl
  41ea00:	mov    esp,0x5e7007e2
  41ea05:	sbb    esi,ebp
  41ea07:	unpckhps xmm5,XMMWORD PTR [edx+0x15885007]
  41ea0e:	inc    eax
  41ea0f:	mov    BYTE PTR [ebx],bh
  41ea11:	cmp    eax,DWORD PTR [eax-0x1bd9f5cc]
  41ea17:	push   ds
  41ea18:	lock repnz repz call 0xae7:0xa3de7b3d
  41ea22:	into   
  41ea23:	inc    esp
  41ea24:	cmc    
  41ea25:	jns    0x41e9c8
  41ea27:	xchg   edi,eax
  41ea28:	(bad)  
  41ea29:	pop    ecx
  41ea2a:	rcl    DWORD PTR [ecx+0x1012efda],1
  41ea30:	sbb    DWORD PTR [eax+0x2acb7dd7],0xffffffbc
  41ea37:	or     DWORD PTR [eax+0x5210082a],ebx
  41ea3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea3e:	inc    esp
  41ea3f:	les    edi,FWORD PTR [ebx+0x74]
  41ea42:	mov    ch,0x48
  41ea44:	dec    esi
  41ea45:	mov    DWORD PTR [edi+0x5518f652],ecx
  41ea4b:	je     0x41eaad
  41ea4d:	xor    al,0xab
  41ea4f:	stos   BYTE PTR es:[edi],al
  41ea50:	or     al,0x93
  41ea52:	call   0x9304:0x879ede8c
  41ea59:	hlt    
  41ea5a:	out    dx,eax
  41ea5b:	push   ds
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	mov    ds:0x14f994b6,eax
  41ea62:	call   0x4b23:0x6cbc8ce9
  41ea69:	push   ebp
  41ea6a:	lds    edi,FWORD PTR [ebx+0x4d403e9a]
  41ea70:	push   0xffffffca
  41ea72:	sbb    bl,dh
  41ea74:	xor    bl,BYTE PTR [ecx]
  41ea76:	dec    edi
  41ea77:	inc    ebp
  41ea78:	inc    eax
  41ea79:	jecxz  0x41eab2
  41ea7b:	adc    al,0x8f
  41ea7d:	ja     0x41ead1
  41ea7f:	cmp    al,0xf3
  41ea81:	sahf   
  41ea82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea83:	addr16 pop esi
  41ea85:	or     ebx,DWORD PTR [eax+0x575d24f6]
  41ea8b:	lock mov bh,0x3f
  41ea8e:	inc    edi
  41ea8f:	shl    BYTE PTR [ebp+0x48],0x74
  41ea93:	aam    0x7a
  41ea95:	add    al,0x5a
  41ea97:	inc    ebx
  41ea98:	adc    ebx,DWORD PTR [edx+0x62782f7]
  41ea9e:	push   eax
  41ea9f:	cld    
  41eaa0:	sbb    al,BYTE PTR [eax+0x75]
  41eaa3:	test   DWORD PTR [esi-0x2e86479f],0x5c5905d9
  41eaad:	push   0x14ec7fd3
  41eab2:	test   DWORD PTR [esi+0x49a2122],eax
  41eab8:	fistp  QWORD PTR [ebp+0x1a]
  41eabb:	in     eax,dx
  41eabc:	(bad)  
  41eabd:	lea    ebp,[ebx]
  41eabf:	push   ss
  41eac0:	test   DWORD PTR [edi-0x1cdc70e],ecx
  41eac6:	dec    ebp
  41eac7:	or     bh,ch
  41eac9:	dec    ecx
  41eaca:	and    BYTE PTR [edi+0x5289373b],cl
  41ead0:	push   eax
  41ead1:	mov    ebx,0xca604b30
  41ead6:	pop    eax
  41ead7:	jns    0x41ea9f
  41ead9:	sub    eax,0xcfb354e2
  41eade:	test   DWORD PTR [eax-0x4d0333a0],0xf7e371b8
  41eae8:	push   ss
  41eae9:	retf   0x7db7
  41eaec:	or     al,0xa8
  41eaee:	adc    eax,0xe8f73920
  41eaf3:	aas    
  41eaf4:	rcl    DWORD PTR [edx+edx*2-0x6b],cl
  41eaf8:	mov    al,ds:0xea327f4e
  41eafd:	in     eax,0x79
  41eaff:	scas   al,BYTE PTR es:[edi]
  41eb00:	fnsave [ebp-0x5c]
  41eb03:	bound  ebx,QWORD PTR [ebp-0x52dfccbd]
  41eb09:	cmp    BYTE PTR [ecx+0x2de15248],bl
  41eb0f:	dec    esp
  41eb10:	cmp    ah,0x9f
  41eb13:	pop    edi
  41eb14:	inc    ebx
  41eb15:	xchg   ecx,eax
  41eb16:	ss daa 
  41eb18:	gs aad 0xc4
  41eb1b:	imul   edx,DWORD PTR [esi+eiz*1],0x3d18cedc
  41eb22:	stos   DWORD PTR es:[edi],eax
  41eb23:	outs   dx,BYTE PTR ds:[esi]
  41eb24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb25:	lds    esp,FWORD PTR [esi-0x51572e1b]
  41eb2b:	out    0xf4,eax
  41eb2d:	lahf   
  41eb2e:	mov    bl,ah
  41eb30:	sub    DWORD PTR [eax],esi
  41eb32:	mov    gs,WORD PTR [esi+eax*2+0x75]
  41eb36:	adc    esp,ecx
  41eb38:	dec    esp
  41eb39:	pop    esi
  41eb3a:	jmp    0x41eb0c
  41eb3c:	xor    bh,BYTE PTR [edx+0x72692af2]
  41eb42:	add    cl,BYTE PTR [edx+0x48]
  41eb45:	out    0xe8,al
  41eb47:	mov    BYTE PTR [ebx+esi*4],ah
  41eb4a:	xor    eax,0x441efe92
  41eb4f:	mov    ecx,0x4de2489
  41eb54:	je     0x41eb50
  41eb56:	pop    ebp
  41eb57:	cmp    edi,DWORD PTR [edi+0x714488f4]
  41eb5d:	rcl    DWORD PTR ds:0xc05c4842,1
  41eb63:	fcom   DWORD PTR ds:0x37df152a
  41eb69:	jg     0x41eb66
  41eb6b:	pop    ds
  41eb6c:	int3   
  41eb6d:	daa    
  41eb6e:	(bad)  
  41eb6f:	nop
  41eb70:	rcr    DWORD PTR [edx+eiz*2],1
  41eb73:	adc    ch,al
  41eb75:	repz pop edi
  41eb77:	dec    esi
  41eb78:	stc    
  41eb79:	loope  0x41eb48
  41eb7b:	scas   al,BYTE PTR es:[edi]
  41eb7c:	sub    eax,DWORD PTR [esi+eiz*8+0x328b2271]
  41eb83:	test   BYTE PTR [edx-0x1023a16],al
  41eb89:	das    
  41eb8a:	push   0xe595cb56
  41eb8f:	stc    
  41eb90:	sub    DWORD PTR [esi+edi*8-0x34],edx
  41eb94:	hlt    
  41eb95:	and    eax,0xe07eaac6
  41eb9a:	fstp   DWORD PTR [edx+0x6e]
  41eb9d:	enter  0xaa78,0x1d
  41eba1:	jmp    0x41ebd4
  41eba3:	bnd ja 0x41ec14
  41eba6:	fistp  WORD PTR [esi-0x5107393]
  41ebac:	lods   al,BYTE PTR ds:[esi]
  41ebad:	add    ch,BYTE PTR [ebp+0xb]
  41ebb0:	nop
  41ebb1:	xor    eax,0xcb22881d
  41ebb6:	in     al,0xf3
  41ebb8:	mov    cl,ah
  41ebba:	ss out 0xb3,al
  41ebbd:	mov    ds:0x89052c92,eax
  41ebc2:	lods   al,BYTE PTR ds:[esi]
  41ebc3:	cmp    eax,esp
  41ebc5:	pop    ss
  41ebc6:	(bad)  
  41ebc7:	leave  
  41ebc8:	and    DWORD PTR [edx+edi*2+0x4bd6bc7b],ebp
  41ebcf:	cmp    eax,0x36cf38f8
  41ebd4:	adc    al,bh
  41ebd6:	aam    0x5e
  41ebd8:	jne    0x41eb8e
  41ebda:	rol    BYTE PTR [esp+edi*8],1
  41ebdd:	mov    dh,0x3c
  41ebdf:	add    al,0x59
  41ebe1:	test   ah,bh
  41ebe3:	and    edx,DWORD PTR [eax+0x1898f00c]
  41ebe9:	mov    ?,WORD PTR [eax+0x35]
  41ebec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebed:	xchg   edx,eax
  41ebee:	sub    DWORD PTR [eax-0x22],0xc3d1f9b2
  41ebf5:	sub    eax,0x96dd87e1
  41ebfa:	hlt    
  41ebfb:	jge    0x41ec44
  41ebfd:	daa    
  41ebfe:	sub    BYTE PTR [ebp+0x55df2f0c],bh
  41ec04:	adc    BYTE PTR [esi-0x4e5b9cba],bl
  41ec0a:	push   ebx
  41ec0b:	sub    ah,al
  41ec0d:	test   BYTE PTR [edi-0x1c],cl
  41ec10:	and    eax,0x615bc8e2
  41ec15:	je     0x41ec94
  41ec17:	mov    ds:0x2389d190,al
  41ec1c:	xchg   edi,eax
  41ec1d:	jmp    0xf4a1e78d
  41ec22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec23:	test   eax,0x960209e8
  41ec28:	mov    esi,0xc9bd4375
  41ec2d:	outs   dx,DWORD PTR ds:[esi]
  41ec2e:	dec    edi
  41ec2f:	or     BYTE PTR [edx],cl
  41ec31:	push   edi
  41ec32:	pop    ecx
  41ec33:	adc    eax,0x1e4bebc2
  41ec38:	mov    ebx,0x5c46b6a7
  41ec3d:	sahf   
  41ec3e:	mov    edi,fs
  41ec40:	sahf   
  41ec41:	ret    0x4bb4
  41ec44:	(bad)  
  41ec46:	icebp  
  41ec47:	mov    ecx,0x43a137f3
  41ec4c:	aaa    
  41ec4d:	(bad)  
  41ec4e:	dec    bh
  41ec50:	push   0x23
  41ec52:	jmp    0x41ecac
  41ec54:	das    
  41ec55:	mov    ch,0xed
  41ec57:	pop    eax
  41ec58:	jmp    0xffae:0x81216c2d
  41ec5f:	repz inc ecx
  41ec61:	aad    0xdf
  41ec63:	push   ecx
  41ec64:	push   ss
  41ec65:	push   ds
  41ec66:	jnp    0x41ec81
  41ec68:	cmc    
  41ec69:	mov    ebp,DWORD PTR [eax-0x3b71a6e7]
  41ec6f:	and    eax,0xd25fd1e1
  41ec74:	dec    esi
  41ec75:	inc    esi
  41ec76:	aad    0xf7
  41ec78:	test   DWORD PTR [ebp-0x4],esp
  41ec7b:	lock into 
  41ec7d:	aad    0x6
  41ec7f:	dec    ecx
  41ec80:	inc    ecx
  41ec81:	mov    al,0xcb
  41ec83:	pop    ds
  41ec84:	add    dl,BYTE PTR [ecx+0x48]
  41ec87:	mov    ebx,0xa868fe76
  41ec8c:	push   ecx
  41ec8d:	push   ebx
  41ec8e:	sub    BYTE PTR [edi-0x43],al
  41ec91:	adc    esp,ecx
  41ec93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec94:	or     DWORD PTR [edi],0x900da093
  41ec9a:	fild   DWORD PTR [ebp+0x2]
  41ec9d:	cmp    BYTE PTR [ebx+ebp*8-0xd],ah
  41eca1:	and    BYTE PTR [ebx+0x41d0bdb1],0x4
  41eca8:	stos   BYTE PTR es:[edi],al
  41eca9:	les    esi,FWORD PTR [ebp+0x19b44eae]
  41ecaf:	jecxz  0x41ed12
  41ecb1:	xchg   edi,eax
  41ecb2:	in     eax,0x58
  41ecb4:	lods   eax,DWORD PTR ds:[esi]
  41ecb5:	jmp    0xf35ce163
  41ecba:	push   ss
  41ecbb:	stc    
  41ecbc:	push   ebp
  41ecbd:	es out 0x79,eax
  41ecc0:	dec    edi
  41ecc1:	aaa    
  41ecc2:	adc    DWORD PTR [ecx+0x16b267e4],eax
  41ecc8:	dec    ebx
  41ecc9:	test   eax,0xf97b4ac4
  41ecce:	push   esi
  41eccf:	and    eax,esp
  41ecd1:	add    al,0xc3
  41ecd4:	cld    
  41ecd5:	xlat   BYTE PTR ds:[ebx]
  41ecd6:	cdq    
  41ecd7:	or     esi,esp
  41ecd9:	mov    eax,ds:0x3ff5146f
  41ecde:	mov    cs,WORD PTR [esi-0x504edabb]
  41ece4:	sbb    eax,0x9f7f62fb
  41ece9:	fwait
  41ecea:	push   0xffffffb2
  41ecec:	dec    ebx
  41eced:	pop    edi
  41ecee:	jg     0x41ed0b
  41ecf0:	xchg   ebx,eax
  41ecf1:	(bad)  
  41ecf2:	repnz pop edi
  41ecf4:	cld    
  41ecf5:	imul   eax,ecx,0x6d
  41ecf8:	push   ecx
  41ecf9:	mov    ds:0xcad9a5a5,al
  41ecfe:	ss dec eax
  41ed00:	pop    ds
  41ed01:	mov    ebx,0x704e30f5
  41ed06:	pop    esi
  41ed07:	sar    DWORD PTR [ebp-0x58],1
  41ed0a:	xchg   edi,eax
  41ed0b:	js     0x41ed1b
  41ed0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed0e:	xlat   BYTE PTR ds:[ebx]
  41ed0f:	mov    ecx,0xef9f0a51
  41ed14:	loop   0x41ed50
  41ed16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed17:	setg   BYTE PTR [eax]
  41ed1a:	sbb    esi,ebx
  41ed1c:	shl    DWORD PTR [esi+0x71],cl
  41ed1f:	dec    edi
  41ed20:	jns    0x41ecac
  41ed22:	mov    dh,0x18
  41ed24:	icebp  
  41ed25:	sahf   
  41ed26:	jmp    0x6a2adf21
  41ed2b:	jnp    0x41ecd8
  41ed2d:	mov    ebp,0xe62d47b6
  41ed32:	or     DWORD PTR [ebx+ecx*4+0x20],esi
  41ed36:	add    al,dh
  41ed38:	add    al,0xc7
  41ed3a:	jmp    0xe66c10a6
  41ed3f:	adc    BYTE PTR [ebx+0x72],bh
  41ed42:	pop    ds
  41ed43:	dec    ebp
  41ed44:	push   eax
  41ed45:	and    edi,DWORD PTR [edi]
  41ed47:	pop    edi
  41ed48:	jbe    0x41edc6
  41ed4a:	cdq    
  41ed4b:	jno    0x41ed45
  41ed4d:	(bad)  
  41ed4e:	jle    0x41edbb
  41ed50:	gs aas 
  41ed52:	shr    DWORD PTR [ecx-0x6],0xda
  41ed56:	into   
  41ed57:	loop   0x41edac
  41ed59:	mov    ecx,0x20bb7161
  41ed5e:	out    dx,eax
  41ed5f:	sbb    BYTE PTR [eax],ch
  41ed61:	fnsave [ebp-0x72]
  41ed64:	call   0x5335725b
  41ed69:	mov    esi,0xe8ee899d
  41ed6e:	or     bl,BYTE PTR [ecx-0x26]
  41ed71:	mov    dl,0x14
  41ed73:	sub    BYTE PTR [ebx-0x36],0x2c
  41ed77:	xor    DWORD PTR [ecx],eax
  41ed79:	rdtsc  
  41ed7b:	mov    BYTE PTR [edx-0x4040abfb],dh
  41ed81:	test   eax,0x232a38dd
  41ed86:	es xchg ebx,eax
  41ed88:	push   eax
  41ed89:	test   al,0x48
  41ed8b:	out    0x30,al
  41ed8d:	daa    
  41ed8e:	jp     0x41edb9
  41ed90:	shl    BYTE PTR [edi-0x44],cl
  41ed93:	and    al,dl
  41ed95:	xor    bl,al
  41ed97:	shl    BYTE PTR [eax+0x35],1
  41ed9a:	(bad)  
  41ed9c:	lock adc eax,0x575ac976
  41eda2:	pop    eax
  41eda3:	adc    BYTE PTR [edi+0x32e01970],cl
  41eda9:	pop    ebp
  41edaa:	in     eax,dx
  41edab:	add    eax,0xbbfc04d4
  41edb0:	inc    ebx
  41edb1:	jmp    DWORD PTR [esi+0x6929d6f9]
  41edb7:	(bad)  
  41edb8:	cli    
  41edb9:	or     BYTE PTR ds:0xe8714932,ah
  41edbf:	ror    BYTE PTR [ebp+0x554069c3],1
  41edc5:	nop
  41edc6:	fs jns 0x41edf1
  41edc9:	bound  edi,QWORD PTR [esi]
  41edcb:	jp     0x41edc9
  41edcd:	int    0xe9
  41edcf:	mov    BYTE PTR [ecx-0x61],0xb4
  41edd3:	popf   
  41edd4:	leave  
  41edd5:	and    eax,0x5281a343
  41edda:	push   eax
  41eddb:	imul   ebp,ebx,0xd69d5708
  41ede1:	je     0x41ee38
  41ede3:	or     BYTE PTR [edx-0x386399aa],0x8c
  41edea:	ficomp WORD PTR [edx-0x2e]
  41eded:	scas   al,BYTE PTR es:[edi]
  41edee:	pushf  
  41edef:	mov    al,ds:0x3fe340e6
  41edf4:	adc    DWORD PTR [ebp+ebx*4-0x3],ebx
  41edf8:	xchg   esp,eax
  41edf9:	dec    ecx
  41edfa:	xchg   esi,eax
  41edfb:	dec    ebx
  41edfc:	xchg   esi,eax
  41edfd:	inc    edx
  41edfe:	add    al,0x60
  41ee00:	inc    ecx
  41ee01:	push   ss
  41ee02:	les    edi,FWORD PTR fs:[edx-0x1e]
  41ee06:	push   eax
  41ee07:	cs sbb dh,bl
  41ee0a:	mov    ds:0x84b84a29,al
  41ee0f:	mov    gs,WORD PTR [eax]
  41ee11:	add    BYTE PTR [ebx-0x3b6366bb],dh
  41ee17:	mov    WORD PTR [ebp-0x54],ss
  41ee1a:	call   0x89681729
  41ee1f:	or     BYTE PTR [ebx-0x6b1a354e],al
  41ee25:	clc    
  41ee26:	cwde   
  41ee27:	cdq    
  41ee28:	mov    esp,0x8fc50da3
  41ee2d:	sbb    ebx,edi
  41ee2f:	inc    esp
  41ee30:	sub    esp,esi
  41ee32:	fdivr  st,st(5)
  41ee34:	mov    ds:0xc2c114c8,al
  41ee39:	dec    eax
  41ee3a:	inc    ebx
  41ee3b:	lods   al,BYTE PTR ds:[esi]
  41ee3c:	mov    al,ds:0xfc5c81fc
  41ee41:	jp     0x41edc6
  41ee43:	popa   
  41ee44:	pop    ebp
  41ee45:	das    
  41ee46:	mov    dh,0x2
  41ee48:	inc    ecx
  41ee49:	adc    DWORD PTR [esi-0x32],0xffffffc3
  41ee4d:	mov    ebp,0x396723a3
  41ee52:	mov    dl,0x97
  41ee54:	in     eax,0x6f
  41ee56:	es pop eax
  41ee58:	ins    DWORD PTR es:[edi],dx
  41ee59:	adc    ch,ah
  41ee5b:	push   ds
  41ee5c:	stos   DWORD PTR es:[edi],eax
  41ee5d:	lods   eax,DWORD PTR ds:[esi]
  41ee5e:	mov    esi,0xf675f17f
  41ee63:	mov    ds:0x28b6a6b0,al
  41ee68:	sub    BYTE PTR [edi],ch
  41ee6a:	outs   dx,BYTE PTR ds:[esi]
  41ee6b:	sbb    DWORD PTR [ebx],ebx
  41ee6d:	inc    ecx
  41ee6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee6f:	inc    ebp
  41ee70:	and    BYTE PTR [edx+0x1c4bea0b],0xde
  41ee77:	mov    edi,0x9aeb2f9
  41ee7c:	ret    0x6fb8
  41ee7f:	jnp    0x41ee6b
  41ee81:	fwait
  41ee82:	cmp    al,0x3d
  41ee84:	xchg   esp,eax
  41ee85:	fs ja  0x41eea4
  41ee88:	cmp    edi,DWORD PTR [ebx+0x27036bd5]
  41ee8e:	imul   ebx,DWORD PTR [ebp*8+0x6b9fa407],0x6e148c0
  41ee99:	test   BYTE PTR [esi-0x2822ea54],0x2d
  41eea0:	mov    ds:0x81e76dd7,eax
  41eea5:	mov    ebx,0x78e9ae8a
  41eeaa:	loop   0x41eeb7
  41eeac:	aas    
  41eead:	cmp    al,0x65
  41eeaf:	pop    ebx
  41eeb0:	retf   
  41eeb1:	push   0xfffffffb
  41eeb3:	pop    eax
  41eeb4:	xor    dl,dl
  41eeb6:	sti    
  41eeb7:	xchg   edx,eax
  41eeb8:	sub    al,0x3c
  41eeba:	(bad)  
  41eebb:	and    esp,esi
  41eebd:	ss pop edi
  41eebf:	xor    BYTE PTR [ebx+0x70c5de32],cl
  41eec5:	xor    dl,al
  41eec7:	jp     0x41ef0b
  41eec9:	mov    edx,0x64a41014
  41eece:	pusha  
  41eecf:	sbb    al,0x78
  41eed1:	xchg   ebx,ebx
  41eed3:	imul   ecx,ebp,0x5b
  41eed6:	xor    al,BYTE PTR [edx-0x79a9f00f]
  41eedc:	pop    ebp
  41eedd:	out    0xc7,eax
  41eedf:	rcr    ebp,cl
  41eee1:	dec    ebx
  41eee2:	in     eax,0xe0
  41eee4:	and    BYTE PTR [esi-0x4c],0xb4
  41eee8:	cmp    eax,0x86f53dbb
  41eeed:	pop    es
  41eeee:	addr16 sti 
  41eef0:	push   eax
  41eef1:	push   eax
  41eef2:	inc    ebp
  41eef3:	jmp    0x41eef6
  41eef5:	jecxz  0x41ee78
  41eef7:	inc    ebp
  41eef8:	push   esi
  41eef9:	pop    ecx
  41eefa:	inc    esp
  41eefb:	jmp    0x1618a194
  41ef00:	jge    0x41eeb6
  41ef02:	dec    esp
  41ef03:	pop    ebx
  41ef04:	imul   DWORD PTR [eax-0x30]
  41ef07:	icebp  
  41ef08:	cld    
  41ef09:	fimul  DWORD PTR [esi+0x5c]
  41ef0c:	xchg   ebp,eax
  41ef0d:	push   esi
  41ef0e:	out    dx,al
  41ef0f:	lock pop esp
  41ef11:	xchg   edx,eax
  41ef12:	imul   esi,DWORD PTR [edi+0x1d7e3c10],0xb8d1c2d4
  41ef1c:	leave  
  41ef1d:	int3   
  41ef1e:	cmp    BYTE PTR [eax+0x48],dl
  41ef21:	mov    dl,0x2e
  41ef23:	inc    ebp
  41ef24:	pop    ebx
  41ef25:	in     eax,dx
  41ef26:	repz pop ss
  41ef28:	pop    ds
  41ef29:	jbe    0x41eec4
  41ef2b:	lock cmp al,0x26
  41ef2e:	adc    eax,0xaf385f6b
  41ef33:	(bad)  
  41ef34:	jns    0x41ef32
  41ef36:	adc    bh,cl
  41ef38:	push   esi
  41ef39:	pop    esi
  41ef3a:	jmp    0x41ef59
  41ef3c:	dec    esp
  41ef3d:	lds    edi,FWORD PTR [esi+0x68ce5d0]
  41ef43:	jbe    0x41ef76
  41ef45:	jnp    0x41eedf
  41ef47:	dec    ebp
  41ef48:	xchg   esi,eax
  41ef49:	or     eax,DWORD PTR [edx+0x79140cd0]
  41ef4f:	popa   
  41ef50:	xchg   edx,eax
  41ef51:	mov    bh,0x9e
  41ef53:	jns    0x41eee4
  41ef55:	fidiv  WORD PTR [eax+0xa186e0a]
  41ef5b:	or     cl,BYTE PTR [ebx+0x40]
  41ef5e:	aad    0x59
  41ef60:	aad    0x6e
  41ef62:	repnz loope 0x41ef8c
  41ef65:	retf   0x69f7
  41ef68:	pop    edx
  41ef69:	push   ebx
  41ef6a:	jle    0x41ef5f
  41ef6c:	retf   
  41ef6d:	adc    eax,0xce3d2c15
  41ef72:	sbb    BYTE PTR [ebx],cl
  41ef74:	mov    edi,0x5b72df6
  41ef79:	xchg   ecx,eax
  41ef7a:	dec    eax
  41ef7b:	pop    esi
  41ef7c:	push   cs
  41ef7d:	daa    
  41ef7e:	and    esp,DWORD PTR [ebp+0x156a67fa]
  41ef84:	xor    al,0x84
  41ef86:	addr16 mov eax,ds:0x1432
  41ef8a:	je     0x41efcb
  41ef8c:	xor    al,al
  41ef8e:	pop    ecx
  41ef8f:	int3   
  41ef90:	je     0x41efba
  41ef92:	sbb    al,0x2c
  41ef94:	sbb    eax,0xc110a770
  41ef99:	ret    
  41ef9a:	in     eax,0x6b
  41ef9c:	sti    
  41ef9d:	nop
  41ef9e:	outs   dx,BYTE PTR ds:[esi]
  41ef9f:	shl    bl,0x2e
  41efa2:	cmp    DWORD PTR [ecx+0x54],0x148d25b1
  41efa9:	jecxz  0x41ef47
  41efab:	(bad)  
  41efac:	jmp    0x41ef40
  41efae:	add    ah,BYTE PTR [ebx]
  41efb0:	popa   
  41efb1:	fadd   QWORD PTR [ecx]
  41efb3:	pop    ds
  41efb4:	sub    cl,BYTE PTR [ebx]
  41efb6:	daa    
  41efb7:	pop    edi
  41efb8:	or     al,0x7b
  41efba:	out    0x95,al
  41efbc:	push   ebp
  41efbd:	pop    ebp
  41efbe:	out    dx,eax
  41efbf:	push   ebx
  41efc0:	xlat   BYTE PTR ds:[ebx]
  41efc1:	jne    0x41efe3
  41efc3:	out    dx,eax
  41efc4:	jl     0x41ef8f
  41efc6:	(bad)  
  41efc7:	outs   dx,DWORD PTR ds:[esi]
  41efc8:	xchg   esp,eax
  41efc9:	sbb    eax,0x7b28ad06
  41efce:	cmp    BYTE PTR [edi],0x60
  41efd1:	jo     0x41efdb
  41efd3:	jle    0x41ef9f
  41efd5:	pop    eax
  41efd6:	xchg   esp,eax
  41efd7:	pop    ss
  41efd8:	mov    dh,BYTE PTR [edx]
  41efda:	sbb    DWORD PTR [ebp+0x7c],esp
  41efdd:	push   ds
  41efde:	daa    
  41efdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efe0:	jae    0x41efe0
  41efe2:	js     0x41effd
  41efe4:	dec    ebp
  41efe5:	xor    cl,ah
  41efe7:	fcom   QWORD PTR [esi-0x5feb7195]
  41efed:	pusha  
  41efee:	retf   0x7acd
  41eff1:	mov    al,0xab
  41eff3:	nop
  41eff4:	aam    0x96
  41eff6:	leave  
  41eff7:	shr    DWORD PTR [edx-0x4270649],cl
  41effd:	shr    BYTE PTR [edi+0x203ef3e4],1
  41f003:	push   0xeb1e2251
  41f008:	std    
  41f009:	add    bl,BYTE PTR [ebx+0x2e]
  41f00c:	sub    eax,ebx
  41f00e:	dec    ecx
  41f00f:	push   cs
  41f010:	cmp    bh,BYTE PTR ds:0xcda37051
  41f016:	mov    eax,0x51f0651f
  41f01b:	fimul  DWORD PTR ds:0x94b92d74
  41f021:	dec    esi
  41f022:	inc    ecx
  41f023:	cld    
  41f024:	inc    eax
  41f025:	stc    
  41f026:	ins    BYTE PTR es:[edi],dx
  41f027:	xor    BYTE PTR [edi+0x45cf188c],bh
  41f02d:	sub    BYTE PTR [edi-0x2e1d10b3],0xae
  41f034:	fstp   TBYTE PTR [edi]
  41f036:	mov    ds:0x710f697f,al
  41f03b:	and    ah,BYTE PTR [edi-0x75f5561a]
  41f041:	and    al,0x61
  41f043:	lock shr BYTE PTR [edi-0x34a7eb53],0xf2
  41f04b:	in     al,0x2e
  41f04d:	mov    ds:0xb161f99c,al
  41f052:	das    
  41f053:	not    BYTE PTR [edi-0x1ee6cac6]
  41f059:	icebp  
  41f05a:	pop    es
  41f05b:	mov    BYTE PTR [edi-0x6b531c5],cl
  41f061:	test   BYTE PTR [edi+0x34369e76],al
  41f067:	fisttp WORD PTR [eax-0x75]
  41f06a:	or     eax,0x7532a9ce
  41f06f:	jmp    0x885b02a7
  41f074:	pop    esi
  41f075:	test   al,0x99
  41f077:	jne    0x41f016
  41f079:	hlt    
  41f07a:	retf   0xa6b2
  41f07d:	add    BYTE PTR [ebx+eiz*2+0x11],bh
  41f081:	mov    ds:0x10d30cef,eax
  41f086:	(bad)  
  41f087:	xsavec [ebp-0x20bb638b]
  41f08e:	sti    
  41f08f:	sub    eax,0x76831705
  41f094:	sub    BYTE PTR [ebp-0x22ba87a7],cl
  41f09a:	inc    esp
  41f09b:	jo     0x41f09f
  41f09d:	inc    ebx
  41f09e:	test   al,0x17
  41f0a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a1:	ds pop ebx
  41f0a3:	fs xor al,0x26
  41f0a6:	mov    al,ds:0x34b2f565
  41f0ab:	xor    ebp,DWORD PTR [eax]
  41f0ad:	imul   ecx,eax,0x39b2c084
  41f0b3:	add    cl,dl
  41f0b5:	outs   dx,DWORD PTR ds:[esi]
  41f0b6:	sub    al,0x68
  41f0b8:	test   eax,0x592641e
  41f0bd:	xor    al,0x91
  41f0bf:	adc    DWORD PTR [esi],edx
  41f0c1:	pop    ebp
  41f0c2:	and    esi,DWORD PTR [esi+0x2a]
  41f0c5:	clc    
  41f0c6:	repnz xchg edx,eax
  41f0c8:	cmp    eax,0xa9e48ba3
  41f0cd:	loop   0x41f093
  41f0cf:	dec    ecx
  41f0d0:	xchg   esp,eax
  41f0d1:	out    dx,al
  41f0d2:	pushf  
  41f0d3:	fdivrp st(1),st
  41f0d5:	push   edx
  41f0d6:	pop    ebp
  41f0d7:	pop    ebx
  41f0d8:	sub    DWORD PTR [eax+ebp*1],ecx
  41f0db:	imul   ecx,DWORD PTR [esp+edi*8-0x39c45293],0x99964c97
  41f0e6:	test   eax,0x3a918220
  41f0eb:	fidivr DWORD PTR [ecx+0xe]
  41f0ee:	out    dx,al
  41f0ef:	js     0x41f073
  41f0f1:	pop    ecx
  41f0f2:	data16 jno 0x41f161
  41f0f5:	mov    esi,0x26da3e1c
  41f0fa:	rcl    DWORD PTR [ebp-0x6a],cl
  41f0fd:	fwait
  41f0fe:	cdq    
  41f0ff:	inc    ecx
  41f100:	add    BYTE PTR [ebx+eiz*2+0x1],0xa9
  41f105:	sbb    eax,0x102cf148
  41f10a:	push   ds
  41f10b:	pop    es
  41f10c:	fwait
  41f10d:	cmp    al,0x73
  41f10f:	les    ebx,FWORD PTR [edx]
  41f111:	shl    BYTE PTR [edi],1
  41f113:	mov    DWORD PTR [edx+0x76c4b915],ebp
  41f119:	add    edx,DWORD PTR [ebx+0x4c5ce227]
  41f11f:	es repz xchg ebp,eax
  41f122:	mov    DWORD PTR [ebp-0x5],ebx
  41f125:	and    edx,DWORD PTR [eax+0x50369232]
  41f12b:	mul    DWORD PTR [ebx-0x1e]
  41f12e:	dec    ebp
  41f12f:	rol    BYTE PTR [edi+0x60b0c24f],1
  41f135:	in     eax,dx
  41f136:	pop    edx
  41f137:	outs   dx,DWORD PTR ds:[esi]
  41f138:	push   0x57
  41f13a:	mov    esp,0xc6f87ca8
  41f13f:	repnz adc BYTE PTR [ecx-0x4cc795af],cl
  41f146:	mov    gs,WORD PTR cs:[eax+0x28]
  41f14a:	sub    cl,BYTE PTR [ecx-0x54d4fbe2]
  41f150:	out    0x94,eax
  41f152:	gs push es
  41f154:	sub    DWORD PTR [ecx],esp
  41f156:	scas   al,BYTE PTR es:[edi]
  41f157:	add    ch,BYTE PTR [edi+0x64]
  41f15a:	lahf   
  41f15b:	sbb    BYTE PTR [ebx],0x5c
  41f15e:	lgs    eax,FWORD PTR [eax+esi*1]
  41f162:	jb     0x41f15c
  41f164:	jge    0x41f146
  41f166:	mov    dh,0xf6
  41f168:	push   ds
  41f169:	xor    al,0xf3
  41f16b:	int    0x52
  41f16d:	test   BYTE PTR ds:[ebx+0x14d0f044],ah
  41f174:	push   edi
  41f175:	or     eax,0x6a6e49e6
  41f17a:	inc    esp
  41f17b:	rcr    DWORD PTR [esi],0xa6
  41f17e:	dec    edx
  41f17f:	outs   dx,BYTE PTR ds:[esi]
  41f180:	sbb    edx,edi
  41f182:	cld    
  41f183:	or     esp,edx
  41f185:	jecxz  0x41f10b
  41f187:	mov    ebx,0xca89b82
  41f18c:	cmc    
  41f18d:	clc    
  41f18e:	cmp    eax,0x8a793e0a
  41f193:	mov    ds:0xe93f2cce,al
  41f198:	pop    ebx
  41f199:	add    edx,esi
  41f19b:	dec    ecx
  41f19c:	out    0x7f,eax
  41f19e:	mov    bl,0x50
  41f1a0:	push   ebx
  41f1a1:	aad    0x67
  41f1a3:	(bad)  
  41f1a4:	imul   edi,DWORD PTR [esi],0x306169dc
  41f1aa:	addr16 ror al,cl
  41f1ad:	inc    eax
  41f1ae:	lock add esp,DWORD PTR [esi+edi*1-0x679f4360]
  41f1b6:	xchg   edx,eax
  41f1b7:	fs xchg esp,eax
  41f1b9:	or     eax,DWORD PTR [ebx]
  41f1bb:	sub    bl,cl
  41f1bd:	(bad)  [ebp+0x64]
  41f1c0:	sbb    eax,0xd79bb16f
  41f1c5:	push   es
  41f1c6:	fwait
  41f1c7:	in     al,0x44
  41f1c9:	jmp    0x67b1:0x2b756940
  41f1d0:	loop   0x41f1d8
  41f1d2:	sbb    BYTE PTR [edx+0x7d],ah
  41f1d5:	test   eax,0x496c07d8
  41f1db:	sbb    dh,BYTE PTR [edx+0x4a]
  41f1de:	inc    ebx
  41f1df:	mov    eax,0xb3fbd9dc
  41f1e4:	lods   al,BYTE PTR ds:[esi]
  41f1e5:	jnp    0x41f262
  41f1e7:	jp     0x41f16c
  41f1e9:	xlat   BYTE PTR ds:[ebx]
  41f1ea:	push   0x73cdd3fd
  41f1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f0:	into   
  41f1f1:	adc    BYTE PTR ds:0xb2d76bce,dh
  41f1f7:	clc    
  41f1f8:	arpl   di,ax
  41f1fa:	jp     0x41f1e7
  41f1fc:	out    0x76,eax
  41f1fe:	(bad)  
  41f1ff:	xor    eax,0x784e8d16
  41f204:	mov    BYTE PTR [esi-0x25],0x12
  41f208:	mov    ebp,0xc7c9bb5d
  41f20d:	mov    ds:0x75dc567b,eax
  41f212:	inc    edx
  41f213:	and    DWORD PTR [esi+0x50],esi
  41f216:	or     eax,ebp
  41f218:	ret    
  41f219:	aas    
  41f21a:	mov    ch,0xf7
  41f21c:	inc    esi
  41f21d:	fs pop ebx
  41f21f:	inc    eax
  41f220:	jbe    0x41f1b8
  41f222:	add    edx,esi
  41f224:	sbb    edx,ecx
  41f226:	aaa    
  41f227:	movd   DWORD PTR [edi-0x343b93cd],mm2
  41f22e:	adc    al,0x1a
  41f230:	lods   al,BYTE PTR ds:[esi]
  41f231:	jp     0x41f1cc
  41f233:	mov    cl,0xb6
  41f235:	cmp    ebp,DWORD PTR [ecx-0x5a8c502f]
  41f23b:	and    esi,DWORD PTR [edi-0x24d22a1f]
  41f241:	pushf  
  41f242:	(bad)  
  41f244:	mov    WORD PTR [esi+0x14],ss
  41f247:	add    eax,DWORD PTR [ecx+0x375590b1]
  41f24d:	outs   dx,BYTE PTR ds:[esi]
  41f24e:	dec    ebp
  41f24f:	and    DWORD PTR [ecx+0x6f],ebp
  41f252:	xor    al,0xce
  41f254:	mov    esi,0xb32d0cb4
  41f259:	cmp    eax,DWORD PTR [esi-0x4c]
  41f25c:	hlt    
  41f25d:	xor    DWORD PTR [ebp-0x369ed8fd],ecx
  41f263:	sbb    ah,BYTE PTR [edx-0x58]
  41f266:	mov    ds:0x37318bfd,al
  41f26b:	shr    ebx,0xbe
  41f26e:	inc    edx
  41f26f:	int    0x9f
  41f271:	and    dh,BYTE PTR [edx+eax*4-0x7c270e34]
  41f278:	jmp    0xad26ac96
  41f27d:	mov    esi,DWORD PTR [edi+0xc]
  41f280:	xchg   edi,eax
  41f281:	in     al,dx
  41f282:	inc    edx
  41f283:	push   edx
  41f284:	arpl   WORD PTR [edx],sp
  41f286:	lods   eax,DWORD PTR ds:[esi]
  41f287:	cmc    
  41f288:	imul   ebx,DWORD PTR [ebx+0x48],0x8ce73816
  41f28f:	or     ebp,ecx
  41f291:	aad    0xf2
  41f293:	mov    ah,0xee
  41f295:	outs   dx,DWORD PTR ds:[esi]
  41f296:	cwde   
  41f297:	je     0x41f23c
  41f299:	cmp    eax,0x3a692a9
  41f29e:	xor    DWORD PTR [ebx],ecx
  41f2a0:	mul    ecx
  41f2a2:	pusha  
  41f2a3:	cli    
  41f2a4:	mov    esi,0x374e7850
  41f2a9:	mov    ebx,0x4d38faed
  41f2ae:	jae    0x41f2d6
  41f2b0:	xor    eax,0xc43dd9fb
  41f2b5:	popf   
  41f2b6:	aaa    
  41f2b7:	jp     0x41f2ad
  41f2b9:	push   ss
  41f2ba:	mov    edx,0x8dc6d7d0
  41f2bf:	inc    ebx
  41f2c0:	push   eax
  41f2c1:	pop    ebx
  41f2c2:	add    dh,BYTE PTR [esp+ecx*4]
  41f2c5:	mov    edi,0xc4f4eb07
  41f2ca:	mov    WORD PTR [edi],?
  41f2cc:	and    ebp,DWORD PTR [eax-0x5130cac8]
  41f2d2:	cmp    esi,0x4
  41f2d5:	add    bh,BYTE PTR [ebp+eiz*4+0x3f]
  41f2d9:	inc    esi
  41f2da:	sub    bl,BYTE PTR [edi+0x5]
  41f2dd:	jecxz  0x41f2d0
  41f2df:	xor    eax,0xbc1c7ccf
  41f2e4:	jmp    0xfda709cc
  41f2e9:	add    BYTE PTR [edx-0x4e903fe8],0xd6
  41f2f0:	pop    ss
  41f2f1:	jp     0x41f34b
  41f2f3:	sub    al,0x9c
  41f2f5:	iret   
  41f2f6:	jae    0x41f322
  41f2f8:	inc    esp
  41f2f9:	ins    BYTE PTR es:[edi],dx
  41f2fa:	mov    al,ds:0x47b814bd
  41f2ff:	gs inc ecx
  41f301:	cli    
  41f302:	inc    esi
  41f303:	jle    0x41f293
  41f305:	outs   dx,BYTE PTR ds:[esi]
  41f306:	aad    0x32
  41f308:	mov    WORD PTR [ebx],gs
  41f30a:	or     eax,0xf8fc2c8d
  41f30f:	jae    0x41f390
  41f311:	mov    edx,0xe63f01e8
  41f316:	xchg   edx,eax
  41f317:	loop   0x41f2c3
  41f319:	mov    eax,ds:0xc52ac00c
  41f31e:	inc    edx
  41f31f:	mov    ds:0xc9a15bc8,eax
  41f324:	lds    esp,FWORD PTR [eax]
  41f326:	stc    
  41f327:	push   edi
  41f328:	mov    fs,ebx
  41f32a:	repz add DWORD PTR [eax+0x37cc3ef4],esi
  41f331:	fyl2x  
  41f333:	push   es
  41f334:	aad    0x69
  41f336:	lea    edx,[edx-0xb8d77ff]
  41f33c:	div    BYTE PTR [eax]
  41f33e:	ret    0x6b50
  41f341:	ret    
  41f342:	and    BYTE PTR ss:[edx+0x4245ac0b],al
  41f349:	adc    al,0xdf
  41f34b:	sub    al,0x3e
  41f34d:	jae    0x41f3b3
  41f34f:	in     al,dx
  41f350:	cmp    BYTE PTR [ecx-0x3cd95656],ah
  41f356:	repnz rcr BYTE PTR [edi+ebx*2-0xb],1
  41f35b:	mov    edi,0xdf82d120
  41f360:	pop    esi
  41f361:	sub    BYTE PTR [esi+0x7541c33f],al
  41f367:	pop    bp
  41f369:	nop
  41f36a:	in     al,0xde
  41f36c:	call   0xf5c27769
  41f371:	adc    dh,BYTE PTR [eax+0xf]
  41f374:	cli    
  41f375:	in     al,0x3
  41f377:	dec    ebx
  41f378:	xor    ebp,0xf
  41f37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f37c:	ds pushf 
  41f37e:	loope  0x41f3ad
  41f380:	loop   0x41f370
  41f382:	xchg   ebp,eax
  41f383:	std    
  41f384:	sbb    BYTE PTR [edi+0x22],0x67
  41f388:	out    0xc1,eax
  41f38a:	push   esi
  41f38b:	shr    BYTE PTR [ebp-0x20462bf0],cl
  41f391:	mov    ss,WORD PTR [edi+0x18]
  41f394:	push   esi
  41f395:	and    BYTE PTR [ebp+0x54da4a8a],bh
  41f39b:	dec    esp
  41f39c:	aas    
  41f39d:	(bad)  
  41f39e:	outs   dx,DWORD PTR ds:[esi]
  41f39f:	mov    ds:0xa4d48ff9,al
  41f3a4:	inc    esp
  41f3a5:	xlat   BYTE PTR ds:[ebx]
  41f3a6:	mov    edx,0x2e70b5ff
  41f3ab:	ss add al,0xfa
  41f3ae:	popf   
  41f3af:	cli    
  41f3b0:	clc    
  41f3b1:	nop
  41f3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b3:	cdq    
  41f3b4:	mov    al,0xac
  41f3b6:	retf   0x4dc3
  41f3b9:	jnp    0x41f397
  41f3bb:	test   al,0x64
  41f3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3be:	push   esp
  41f3bf:	inc    esp
  41f3c0:	aam    0xe5
  41f3c2:	rcr    DWORD PTR [ebp-0x19dfedf5],0x2e
  41f3c9:	div    DWORD PTR [ebx]
  41f3cb:	call   0x5bde08e0
  41f3d0:	lods   al,BYTE PTR ds:[esi]
  41f3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3d2:	lods   al,BYTE PTR ds:[esi]
  41f3d3:	dec    ebx
  41f3d4:	test   DWORD PTR [eax-0x14],edx
  41f3d7:	mov    DWORD PTR ds:0x9bfe1adf,esp
  41f3dd:	pop    eax
  41f3de:	xor    DWORD PTR fs:[ebx-0x3c],ecx
  41f3e2:	inc    ebp
  41f3e3:	push   es
  41f3e4:	and    dl,0xd5
  41f3e7:	rol    bl,0x39
  41f3ea:	mov    edx,0x958f46a2
  41f3ef:	jnp    0x41f3b0
  41f3f1:	ss popf 
  41f3f3:	push   eax
  41f3f4:	or     BYTE PTR [edx+0x54cf79ec],bl
  41f3fa:	ds pushf 
  41f3fc:	mov    edi,0x29029fd2
  41f401:	test   eax,0x9082cd5
  41f406:	jp     0x41f45f
  41f408:	daa    
  41f409:	call   0x538d:0xc3edb956
  41f410:	jo     0x41f399
  41f412:	aam    0x58
  41f414:	mov    bh,0x93
  41f416:	inc    edx
  41f417:	(bad)  
  41f418:	iret   
  41f419:	cli    
  41f41a:	data16 das 
  41f41c:	outs   dx,BYTE PTR ds:[esi]
  41f41d:	jne    0x41f3bf
  41f41f:	cmp    eax,0xbe8b132
  41f424:	xchg   ebp,eax
  41f425:	fwait
  41f426:	retf   
  41f427:	push   es
  41f428:	jne    0x41f470
  41f42a:	or     DWORD PTR [ebx-0xe0f1dad],edi
  41f430:	cmc    
  41f431:	or     esp,edx
  41f433:	outs   dx,BYTE PTR ds:[esi]
  41f434:	pop    ss
  41f435:	fmul   QWORD PTR [edi-0x48]
  41f438:	(bad)  
  41f439:	int3   
  41f43a:	js     0x41f4b6
  41f43c:	jae    0x41f4bb
  41f43e:	pushf  
  41f43f:	and    BYTE PTR [esi-0x53],0xcc
  41f443:	dec    esi
  41f444:	sbb    cl,bl
  41f446:	fist   DWORD PTR [ecx+0x3]
  41f449:	push   0xce532396
  41f44e:	cwde   
  41f44f:	das    
  41f450:	pop    ecx
  41f451:	aam    0x33
  41f453:	pop    esi
  41f454:	sub    esp,DWORD PTR fs:[esi*4-0x42601b88]
  41f45c:	push   esi
  41f45d:	mov    bl,0xf4
  41f45f:	sar    DWORD PTR [ecx],0xc3
  41f462:	loope  0x41f42f
  41f464:	adc    al,0x8f
  41f466:	cld    
  41f467:	in     eax,dx
  41f468:	pop    edx
  41f469:	mov    bl,0x57
  41f46b:	dec    BYTE PTR [ebx+0x311a8cf7]
  41f471:	mov    esp,0x3a988735
  41f476:	pop    ss
  41f477:	ins    BYTE PTR es:[edi],dx
  41f478:	or     ebx,edx
  41f47a:	fisub  DWORD PTR [ebp-0x7d]
  41f47d:	jae    0x41f416
  41f47f:	shl    bl,cl
  41f481:	sub    eax,esp
  41f483:	push   0x1f6b441f
  41f488:	std    
  41f489:	into   
  41f48a:	test   BYTE PTR fs:[edi],al
  41f48d:	bound  eax,QWORD PTR [esi+0x747fc009]
  41f493:	outs   dx,DWORD PTR ds:[esi]
  41f494:	jns    0x41f4da
  41f496:	pop    ds
  41f497:	dec    ebx
  41f498:	mov    WORD PTR [edx],ss
  41f49a:	loop   0x41f431
  41f49c:	cli    
  41f49d:	sbb    eax,0x5d12682d
  41f4a2:	sbb    eax,0x152fb373
  41f4a7:	stos   DWORD PTR es:[edi],eax
  41f4a8:	cmp    al,0x7f
  41f4aa:	push   DWORD PTR ss:[edi]
  41f4ad:	pop    edi
  41f4ae:	mov    cl,0x61
  41f4b0:	jl     0x41f4e4
  41f4b2:	mov    ebp,0x976e58e9
  41f4b7:	pop    ss
  41f4b8:	jmp    0x41f4e5
  41f4ba:	xchg   ecx,eax
  41f4bb:	mov    eax,0xf5c9da52
  41f4c0:	mov    al,0x64
  41f4c2:	jg     0x41f451
  41f4c4:	jp     0x41f4ea
  41f4c6:	pop    es
  41f4c7:	sub    esi,DWORD PTR [edx+0x8]
  41f4ca:	ja     0x41f4c9
  41f4cc:	mov    eax,esi
  41f4ce:	jae    0x41f4f9
  41f4d0:	sbb    eax,0xdb0bdfc8
  41f4d5:	mov    cl,0xb4
  41f4d7:	cdq    
  41f4d8:	dec    eax
  41f4d9:	mov    ch,ch
  41f4db:	pop    eax
  41f4dc:	inc    eax
  41f4dd:	add    dl,ah
  41f4df:	pop    ebp
  41f4e0:	retf   
  41f4e1:	cmp    al,0x82
  41f4e3:	mov    WORD PTR [edi-0x6e09db51],es
  41f4e9:	pusha  
  41f4ea:	jne    0x41f4a7
  41f4ec:	lods   al,BYTE PTR ds:[esi]
  41f4ed:	ja     0x41f53c
  41f4ef:	fwait
  41f4f0:	push   ecx
  41f4f1:	sbb    DWORD PTR [ebp-0x20],0xffffffde
  41f4f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f6:	mov    bl,0x81
  41f4f8:	sub    DWORD PTR [ebx+eiz*2-0x63],edx
  41f4fc:	ds ja  0x41f57a
  41f4ff:	xchg   edi,eax
  41f500:	leave  
  41f501:	adc    dl,BYTE PTR [edi]
  41f503:	dec    ebp
  41f504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f505:	retf   
  41f506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f507:	jbe    0x41f49a
  41f509:	pop    ebx
  41f50a:	or     DWORD PTR [edx-0x48],ecx
  41f50d:	push   edi
  41f50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50f:	daa    
  41f510:	xchg   ebp,eax
  41f511:	ret    
  41f512:	lock inc edi
  41f514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f515:	cld    
  41f516:	ror    DWORD PTR [ecx+0x18],1
  41f519:	mov    es,ecx
  41f51b:	xlat   BYTE PTR ds:[ebx]
  41f51c:	add    DWORD PTR [ebx+0x78],ecx
  41f51f:	add    al,0xfb
  41f521:	push   0x61
  41f523:	sbb    al,0xd
  41f525:	(bad)  
  41f526:	sub    ah,BYTE PTR gs:0xbe131e5d
  41f52d:	shl    BYTE PTR [esi],0xfd
  41f530:	pop    ecx
  41f531:	add    al,0xb2
  41f533:	fisttp WORD PTR [esi+eiz*8+0x53620376]
  41f53a:	idiv   ch
  41f53c:	mov    al,ds:0x69f68259
  41f541:	jbe    0x41f5c2
  41f543:	sbb    eax,0x66a4c288
  41f548:	mov    ebp,0x7cc86050
  41f54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f54e:	fs push ebp
  41f550:	add    ch,BYTE PTR [edi-0x484d1134]
  41f556:	adc    bh,BYTE PTR [esi-0x3c6b26e2]
  41f55c:	pop    es
  41f55d:	fild   QWORD PTR [eax+esi*4-0x4b]
  41f561:	sbb    dh,BYTE PTR [ebx+eiz*8]
  41f564:	test   al,0x73
  41f566:	jns    0x41f4fc
  41f568:	ja     0x41f513
  41f56a:	int3   
  41f56b:	xchg   edx,eax
  41f56c:	xor    al,0xe1
  41f56e:	add    ecx,DWORD PTR [esp+eax*2]
  41f571:	arpl   ax,bp
  41f573:	test   eax,0x5f82b07e
  41f578:	data16 aam 0xcc
  41f57b:	pop    ecx
  41f57c:	fnsave [eax+0x21]
  41f57f:	loop   0x41f56f
  41f581:	mov    ecx,esi
  41f583:	sub    ebx,DWORD PTR [edx]
  41f585:	inc    ebp
  41f586:	mov    bl,0x81
  41f588:	test   al,0xf8
  41f58a:	das    
  41f58b:	loope  0x41f607
  41f58d:	push   ebp
  41f58e:	ffree  st(5)
  41f590:	mov    ebx,0xa4c15877
  41f595:	scas   al,BYTE PTR es:[edi]
  41f596:	fisubr WORD PTR [eax+esi*8]
  41f599:	test   al,0x8f
  41f59b:	xlat   BYTE PTR ds:[ebx]
  41f59c:	mov    bh,0x97
  41f59e:	imul   ecx,edi,0x5f
  41f5a1:	(bad)  
  41f5a2:	push   ecx
  41f5a3:	std    
  41f5a4:	addr16 xchg ecx,eax
  41f5a6:	push   0xd62362fb
  41f5ab:	push   esp
  41f5ac:	dec    esi
  41f5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5ae:	and    eax,0x41d44f50
  41f5b3:	ins    BYTE PTR es:[edi],dx
  41f5b4:	in     al,dx
  41f5b5:	jo     0x41f601
  41f5b7:	arpl   WORD PTR [ebx+0x7cd177a3],dx
  41f5bd:	pusha  
  41f5be:	cli    
  41f5bf:	push   ebp
  41f5c0:	lahf   
  41f5c1:	fidiv  DWORD PTR [esi+0x4b]
  41f5c4:	popa   
  41f5c5:	pop    ecx
  41f5c6:	pushf  
  41f5c7:	jge    0x41f579
  41f5c9:	jns    0x41f5bf
  41f5cb:	sub    eax,0x4f6ff92b
  41f5d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5d1:	inc    eax
  41f5d2:	jge    0x41f5d5
  41f5d4:	repz (bad) 
  41f5d6:	push   cs
  41f5d7:	push   esp
  41f5d8:	sub    esi,DWORD PTR [edi+0x75]
  41f5db:	mov    ?,ecx
  41f5dd:	push   ebx
  41f5de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5df:	push   ss
  41f5e0:	out    dx,eax
  41f5e1:	popf   
  41f5e2:	fsubr  st(6),st
  41f5e4:	je     0x41f62d
  41f5e6:	gs fadd st,st(1)
  41f5e9:	cmp    ch,BYTE PTR [ebx-0xcfe3a]
  41f5ef:	sub    al,0x57
  41f5f1:	pop    edx
  41f5f2:	into   
  41f5f3:	cmp    edx,DWORD PTR [ecx+0x32]
  41f5f6:	arpl   WORD PTR [ebp+0x41],bx
  41f5f9:	mov    esi,0x6e1d7365
  41f5fe:	push   ecx
  41f5ff:	inc    esi
  41f600:	sub    DWORD PTR [edx-0x427388a4],ecx
  41f606:	lock (bad) 
  41f608:	jae    0x41f5e6
  41f60a:	popa   
  41f60b:	cdq    
  41f60c:	jae    0x41f59f
  41f60e:	aaa    
  41f60f:	dec    edi
  41f610:	fbld   TBYTE PTR [edx+0xbc99994]
  41f616:	icebp  
  41f617:	sbb    ch,0xe3
  41f61a:	in     al,0xcc
  41f61c:	sahf   
  41f61d:	out    dx,al
  41f61e:	jl     0x41f643
  41f620:	mov    WORD PTR [edi-0x6b],ds
  41f623:	inc    ebp
  41f624:	or     al,0xfd
  41f626:	pop    ss
  41f627:	sahf   
  41f628:	jp     0x41f655
  41f62a:	icebp  
  41f62b:	or     cl,BYTE PTR [ecx-0x7d342ad3]
  41f631:	or     eax,0x141435bb
  41f636:	loopne 0x41f5cb
  41f638:	arpl   WORD PTR [ebp+0xef816d0],dx
  41f63e:	jo     0x41f69e
  41f640:	mov    dh,0x6d
  41f642:	or     bh,BYTE PTR [esi+0x64]
  41f645:	(bad)  
  41f646:	dec    ebx
  41f647:	iret   
  41f648:	push   ds
  41f649:	mov    DWORD PTR [eax-0x77c6d25d],edi
  41f64f:	nop
  41f650:	sbb    al,0x3f
  41f652:	xchg   ebx,eax
  41f653:	sbb    cl,al
  41f655:	neg    bh
  41f657:	ret    
  41f658:	cmp    al,0xf2
  41f65a:	rcl    DWORD PTR [eax],cl
  41f65c:	dec    esp
  41f65d:	or     BYTE PTR [edx+eax*1],ch
  41f660:	fsubp  st(5),st
  41f662:	xchg   edx,eax
  41f663:	retf   0xbf97
  41f666:	pop    ebx
  41f667:	in     al,dx
  41f668:	ss leave 
  41f66a:	(bad)  
  41f66b:	sar    BYTE PTR [esi-0x4a727c42],cl
  41f671:	ret    
  41f672:	xchg   ebx,eax
  41f673:	adc    BYTE PTR [ebx+0x6f8c6197],0xbb
  41f67a:	jmp    0xa296bd43
  41f67f:	(bad)  
  41f680:	fdiv   QWORD PTR [ecx+edi*4-0x12]
  41f684:	out    0x3,eax
  41f686:	fnstsw WORD PTR [edi-0x4c74bc53]
  41f68c:	clc    
  41f68d:	sbb    eax,0xe18c2e4f
  41f692:	pop    ebx
  41f693:	enter  0xb136,0x38
  41f697:	mov    ds:0xc9cd020c,eax
  41f69c:	inc    esp
  41f69d:	fidiv  DWORD PTR [edi+0x19bd2772]
  41f6a3:	mov    al,0x83
  41f6a5:	ins    BYTE PTR es:[edi],dx
  41f6a6:	cmp    al,0xb0
  41f6a8:	shr    DWORD PTR [esi-0x2d],cl
  41f6ab:	cmp    eax,0x9f9e4264
  41f6b0:	ins    DWORD PTR es:[edi],dx
  41f6b1:	jge    0x41f6f9
  41f6b3:	xor    ah,cl
  41f6b5:	mov    BYTE PTR [ebx-0x5f37cf11],bl
  41f6bb:	(bad)  
  41f6bc:	push   ecx
  41f6bd:	ss in  eax,0x1e
  41f6c0:	repz xchg al,bl
  41f6c3:	push   edx
  41f6c4:	dec    ecx
  41f6c5:	inc    esp
  41f6c6:	push   ds
  41f6c7:	add    DWORD PTR [eax],ebx
  41f6c9:	mov    edx,0xb3a2dc6c
  41f6ce:	mov    bl,0xa6
  41f6d0:	les    edi,FWORD PTR [eax-0x7f]
  41f6d3:	xor    BYTE PTR [esp+ebx*8-0x7381b5e2],bh
  41f6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6db:	inc    edx
  41f6dc:	ror    BYTE PTR [edx-0x6f],cl
  41f6df:	jecxz  0x41f696
  41f6e1:	xchg   DWORD PTR [edx],esp
  41f6e3:	dec    esi
  41f6e4:	pop    ss
  41f6e5:	push   esp
  41f6e6:	das    
  41f6e7:	mov    WORD PTR [esi+ebp*1],ss
  41f6ea:	jecxz  0x41f70d
  41f6ec:	push   es
  41f6ed:	(bad)  
  41f6ee:	xchg   ebx,eax
  41f6ef:	mov    edx,0xb3246e6
  41f6f4:	add    DWORD PTR [ebx],edi
  41f6f6:	fmul   DWORD PTR [ebx]
  41f6f8:	int3   
  41f6f9:	adc    DWORD PTR [edi],0x47b6b6ac
  41f6ff:	jne    0x41f6e9
  41f701:	mov    dh,0x62
  41f703:	outs   dx,DWORD PTR ds:[esi]
  41f704:	sar    DWORD PTR [esi+eax*4-0x20],cl
  41f708:	sbb    eax,0x1be82166
  41f70d:	add    eax,0xf0a863c3
  41f712:	int    0xf5
  41f714:	sub    ebx,DWORD PTR [edi+esi*8+0x7e]
  41f718:	or     DWORD PTR [esp+esi*8],esp
  41f71b:	dec    ebx
  41f71c:	in     al,dx
  41f71d:	mov    ecx,0x98cdb7c2
  41f722:	(bad)  
  41f723:	push   ebx
  41f724:	out    dx,eax
  41f725:	mov    eax,ds:0xabcaa45b
  41f72a:	push   edi
  41f72b:	xchg   edx,eax
  41f72c:	adc    eax,0xed7526e9
  41f731:	cdq    
  41f732:	jg     0x41f797
  41f734:	and    ebp,DWORD PTR [esi]
  41f736:	scas   al,BYTE PTR es:[edi]
  41f737:	push   ss
  41f738:	push   ecx
  41f739:	jb     0x41f755
  41f73b:	neg    BYTE PTR [edi-0x11]
  41f73e:	or     eax,0x176815c7
  41f743:	aad    0xc9
  41f745:	out    dx,eax
  41f746:	scas   eax,DWORD PTR es:[edi]
  41f747:	ja     0x41f706
  41f749:	add    BYTE PTR [edx+ecx*1-0x79],ah
  41f74d:	push   ss
  41f74e:	addr16 cli 
  41f750:	std    
  41f751:	loope  0x41f6f9
  41f753:	iret   
  41f754:	or     DWORD PTR [esi-0x69ba039c],edi
  41f75a:	mov    bl,BYTE PTR [eax-0x3]
  41f75d:	outs   dx,BYTE PTR ds:[esi]
  41f75e:	cmp    DWORD PTR [ebp+edi*8-0xa],esp
  41f762:	jp     0x41f6f5
  41f764:	imul   esi,ecx,0xc30f8cae
  41f76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f76b:	add    al,0x9
  41f76d:	xchg   ebp,eax
  41f76e:	jle    0x41f789
  41f770:	pop    esi
  41f771:	adc    DWORD PTR ds:0x2216547d,0xf2048ee5
  41f77b:	stos   DWORD PTR es:[edi],eax
  41f77c:	inc    ebx
  41f77d:	jns    0x41f7eb
  41f77f:	pinsrw mm4,WORD PTR [esi+ecx*2+0x3b0184e2],0x80
  41f788:	fs mov bh,0xb4
  41f78b:	or     al,0x7b
  41f78d:	mov    al,0xb
  41f78f:	std    
  41f790:	stos   BYTE PTR es:[edi],al
  41f791:	jl     0x41f76f
  41f793:	ins    BYTE PTR es:[edi],dx
  41f794:	mul    BYTE PTR [edx-0x6410d433]
  41f79a:	xchg   edx,eax
  41f79b:	adc    BYTE PTR [ecx+esi*8+0x35],dh
  41f79f:	mov    edx,0x915b254b
  41f7a4:	xor    eax,0x7a8b6a7b
  41f7a9:	inc    esi
  41f7aa:	aas    
  41f7ab:	dec    ebx
  41f7ac:	inc    esp
  41f7ad:	xor    BYTE PTR [esi],dh
  41f7af:	fs sbb ah,bl
  41f7b2:	and    eax,0xa2d36f4d
  41f7b7:	(bad)  
  41f7b8:	mov    DWORD PTR [edi],0x6fd7a363
  41f7be:	adc    eax,0x64252434
  41f7c3:	xor    BYTE PTR [ecx],al
  41f7c5:	xchg   ecx,eax
  41f7c6:	in     eax,0xd0
  41f7c8:	sub    al,0x9
  41f7ca:	into   
  41f7cb:	nop
  41f7cc:	aas    
  41f7cd:	ins    DWORD PTR es:[edi],dx
  41f7ce:	sub    BYTE PTR [edx],bh
  41f7d0:	jns    0x41f811
  41f7d2:	inc    edx
  41f7d3:	aam    0x8b
  41f7d5:	je     0x41f809
  41f7d7:	inc    ecx
  41f7d8:	mov    DWORD PTR [ebx],ecx
  41f7da:	sub    dl,BYTE PTR [esi]
  41f7dc:	mov    edi,0x6b7f5510
  41f7e1:	jo     0x41f7f6
  41f7e3:	cmp    BYTE PTR ds:0x80a8e23e,al
  41f7e9:	scas   eax,DWORD PTR es:[edi]
  41f7ea:	mov    bh,0xe5
  41f7ec:	ins    BYTE PTR es:[edi],dx
  41f7ed:	push   eax
  41f7ee:	and    al,0x7c
  41f7f0:	stos   DWORD PTR es:[edi],eax
  41f7f1:	sub    ebp,DWORD PTR [eax+esi*8+0x5a]
  41f7f5:	and    al,0x8
  41f7f7:	xchg   edx,eax
  41f7f8:	ret    0x1eea
  41f7fb:	and    al,0x4
  41f7fd:	add    al,0x2f
  41f7ff:	xor    eax,eax
  41f801:	add    DWORD PTR [eax],esp
  41f803:	ror    BYTE PTR cs:[ecx-0x72715053],1
  41f80a:	add    al,0x1
  41f80c:	lods   al,BYTE PTR ds:[esi]
  41f80d:	lahf   
  41f80e:	stos   DWORD PTR es:[edi],eax
  41f80f:	dec    esi
  41f810:	cmp    bl,ch
  41f812:	jg     0x41f7e3
  41f814:	bound  ebx,QWORD PTR [ecx+0x61dfd2e2]
  41f81a:	or     BYTE PTR [eax],dl
  41f81c:	jnp    0x41f89c
  41f81e:	arpl   WORD PTR [edx],si
  41f820:	sub    edx,DWORD PTR [esi+0x6eda72b]
  41f826:	mov    es,WORD PTR [ebx+0x5f]
  41f829:	test   BYTE PTR [edi],dl
  41f82b:	add    eax,0xaa977e6
  41f830:	mov    ss,WORD PTR [ebp+ecx*1-0x761733d7]
  41f837:	imul   eax,DWORD PTR [ebx+0xc],0xe73a5685
  41f83e:	or     BYTE PTR [eax-0x21b2cfac],ah
  41f844:	jne    0x41f877
  41f846:	test   al,0x6d
  41f848:	mov    WORD PTR [edx+ebx*2-0x2],gs
  41f84c:	mov    BYTE PTR [ebx+esi*8+0x45],dh
  41f850:	mov    eax,ds:0x464f440b
  41f855:	and    BYTE PTR [ebx+0x1f1e503d],dl
  41f85b:	push   ebp
  41f85c:	push   esi
  41f85d:	inc    edx
  41f85e:	xor    cl,BYTE PTR [ecx+0x7e]
  41f861:	add    edx,DWORD PTR [edx]
  41f863:	cmp    edx,eax
  41f865:	dec    ebx
  41f866:	aas    
  41f867:	mov    al,ds:0x63948523
  41f86c:	or     eax,0x14aa15cc
  41f871:	add    eax,0xe5ffac92
  41f876:	aad    0x61
  41f878:	loopne 0x41f81d
  41f87a:	cld    
  41f87b:	ins    DWORD PTR es:[edi],dx
  41f87c:	popf   
  41f87d:	ret    
  41f87e:	adc    ah,BYTE PTR [ebx]
  41f880:	leave  
  41f881:	adc    al,0x54
  41f883:	mov    DWORD PTR [ecx+0x6cf2ccba],ebp
  41f889:	js     0x41f818
  41f88b:	and    BYTE PTR ds:0xb485b45d,al
  41f891:	mov    ah,cl
  41f893:	scas   al,BYTE PTR es:[edi]
  41f894:	adc    DWORD PTR [ebx],edi
  41f896:	call   0x519edd32
  41f89b:	jns    0x41f910
  41f89d:	repz ret 
  41f89f:	scas   al,BYTE PTR es:[edi]
  41f8a0:	xchg   ebp,eax
  41f8a1:	ret    
  41f8a2:	div    DWORD PTR [ebx-0x215111d4]
  41f8a8:	out    0x27,al
  41f8aa:	jb     0x41f8db
  41f8ac:	push   ecx
  41f8ad:	add    eax,0x1563bf1c
  41f8b2:	lock dec esp
  41f8b4:	mov    eax,ds:0x58ade6fb
  41f8b9:	mov    eax,0x383b7e8a
  41f8be:	std    
  41f8bf:	es mov es,edi
  41f8c2:	mov    DWORD PTR [ebp+0x30],ebp
  41f8c5:	cld    
  41f8c6:	cmp    eax,0x9fa89687
  41f8cb:	jp     0x41f902
  41f8cd:	or     bh,dh
  41f8cf:	into   
  41f8d0:	pop    edi
  41f8d1:	sub    eax,0xaa642375
  41f8d6:	inc    ecx
  41f8d7:	inc    eax
  41f8d8:	repz dec esp
  41f8da:	dec    esp
  41f8db:	push   eax
  41f8dc:	adc    ax,0x7e1a
  41f8e0:	aaa    
  41f8e1:	sub    ebp,DWORD PTR [ecx]
  41f8e3:	sub    edi,ecx
  41f8e5:	pop    esp
  41f8e6:	ficomp DWORD PTR [edi+0x4c]
  41f8e9:	arpl   WORD PTR [edi-0x1d],ax
  41f8ec:	cld    
  41f8ed:	aam    0x21
  41f8ef:	push   0x13
  41f8f1:	dec    esp
  41f8f2:	lock jecxz 0x41f8da
  41f8f5:	bound  edx,QWORD PTR [ebp-0xe65cde1]
  41f8fb:	or     DWORD PTR [edx-0x2917a066],edx
  41f901:	call   0x4c4c047e
  41f906:	inc    edi
  41f907:	dec    esi
  41f908:	mov    ebx,0x12ff49a2
  41f90d:	fsubr  QWORD PTR [edx]
  41f90f:	and    bh,BYTE PTR [edx+0x44]
  41f912:	adc    eax,0x535827fa
  41f917:	xor    esi,esi
  41f919:	mov    cl,0x81
  41f91b:	dec    eax
  41f91c:	shl    esp,cl
  41f91e:	ret    0x8f7e
  41f921:	dec    edx
  41f922:	push   0xc83e27e2
  41f927:	sti    
  41f928:	jae    0x41f962
  41f92a:	fwait
  41f92b:	out    dx,al
  41f92c:	inc    esi
  41f92d:	fnsave [eax]
  41f92f:	jp     0x41f8c3
  41f931:	aaa    
  41f932:	or     al,0x13
  41f934:	jmp    0x41f8b7
  41f936:	or     eax,0x25faa6d1
  41f93b:	test   bh,ah
  41f93d:	pop    esi
  41f93e:	ins    BYTE PTR es:[edi],dx
  41f93f:	in     eax,dx
  41f940:	pop    es
  41f941:	call   0xa9d6:0x9007a22c
  41f948:	cmc    
  41f949:	mov    ch,0x1d
  41f94b:	add    BYTE PTR [edx+0x6d],dh
  41f94e:	lods   al,BYTE PTR ds:[esi]
  41f94f:	adc    BYTE PTR [ebp+0x26592bbf],dh
  41f955:	jle    0x41f972
  41f957:	mov    ebp,0x838063fd
  41f95c:	or     BYTE PTR [edi+ebx*1-0x2a],0xb9
  41f961:	inc    ebp
  41f962:	out    dx,eax
  41f963:	mov    edi,0xbf6d9c90
  41f968:	jb     0x41f9e8
  41f96a:	pop    ss
  41f96b:	inc    esp
  41f96c:	into   
  41f96d:	or     esp,ebx
  41f96f:	adc    DWORD PTR [ebp-0x15],ebx
  41f972:	and    BYTE PTR [edi+esi*8],dl
  41f975:	scas   eax,DWORD PTR es:[edi]
  41f976:	sub    esp,DWORD PTR [edx]
  41f978:	sub    eax,0x5962ae4f
  41f97d:	out    dx,al
  41f97e:	sub    al,0xbf
  41f980:	ret    0x63ad
  41f983:	hlt    
  41f984:	push   eax
  41f985:	cmp    BYTE PTR [edx-0x3ac94c05],cl
  41f98b:	dec    esi
  41f98c:	jbe    0x41f96f
  41f98e:	or     ecx,DWORD PTR [edi+0x7462deb]
  41f994:	adc    al,BYTE PTR [eax-0xf6a31d8]
  41f99a:	push   ds
  41f99b:	adc    al,0x45
  41f99d:	sbb    al,0x67
  41f99f:	mov    al,0x50
  41f9a2:	jne    0x41f98a
  41f9a4:	les    ebx,FWORD PTR [edi+0x5f]
  41f9a7:	rcl    DWORD PTR [edi+0x3b],0x7e
  41f9ab:	pop    edx
  41f9ac:	out    0xcf,al
  41f9ae:	jge    0x41f947
  41f9b0:	outs   dx,DWORD PTR ds:[esi]
  41f9b1:	ror    bh,1
  41f9b3:	(bad)  
  41f9b4:	mov    ebp,0xfdf18c6b
  41f9b9:	in     al,dx
  41f9ba:	(bad)  
  41f9bb:	jns    0x41fa2d
  41f9bd:	mov    ch,BYTE PTR [eax+ebx*8]
  41f9c0:	or     eax,DWORD PTR [ebx]
  41f9c2:	adc    DWORD PTR [esi+0x708608d],0x1eaa76c4
  41f9cc:	add    ebx,DWORD PTR [edx]
  41f9ce:	sbb    DWORD PTR [edi+0xb796a85],eax
  41f9d4:	aad    0x97
  41f9d6:	dec    esp
  41f9d7:	mov    cl,0x70
  41f9d9:	mov    ecx,0xa728a83c
  41f9de:	mov    ds:0x52821c02,eax
  41f9e3:	xchg   edi,eax
  41f9e4:	sub    BYTE PTR [ecx+esi*2],al
  41f9e7:	data16 jg 0x41fa4c
  41f9ea:	jb     0x41f9c1
  41f9ec:	sub    ch,cl
  41f9ee:	sar    DWORD PTR [ecx-0x19dfaa56],1
  41f9f4:	ror    BYTE PTR [edi],1
  41f9f6:	gs test eax,0xb451debe
  41f9fc:	lock (bad) 
  41f9ff:	mov    ds:0x79e4c6c6,eax
  41fa04:	into   
  41fa05:	xor    al,0x37
  41fa07:	out    dx,al
  41fa08:	aas    
  41fa09:	outs   dx,BYTE PTR ds:[esi]
  41fa0a:	pop    edx
  41fa0b:	push   ebx
  41fa0c:	rcr    DWORD PTR [esi+0x581f712f],1
  41fa12:	icebp  
  41fa13:	and    al,0xc0
  41fa15:	(bad)  
  41fa17:	mov    ch,BYTE PTR [ebp+0x745f35d2]
  41fa1d:	popf   
  41fa1e:	jne    0x41fa13
  41fa20:	or     eax,0xcded2b40
  41fa25:	in     eax,0xb4
  41fa27:	push   eax
  41fa28:	fadd   st,st(4)
  41fa2a:	fbstp  TBYTE PTR [eax+0x4f]
  41fa2d:	test   al,0x6f
  41fa2f:	push   cs
  41fa30:	jbe    0x41faa6
  41fa32:	push   0x228a8d23
  41fa37:	jg     0x41fa36
  41fa39:	gs pop ebp
  41fa3b:	fs aad 0xc3
  41fa3e:	cmp    DWORD PTR [esi+0x667e3517],ecx
  41fa44:	adc    dh,BYTE PTR [eax+0x7d7d4f62]
  41fa4a:	sbb    al,0x53
  41fa4c:	imul   ebp,DWORD PTR [ebx+eiz*1+0x4dfd2461],0x8f6e6a8a
  41fa57:	xchg   edx,eax
  41fa58:	pop    ecx
  41fa59:	fist   WORD PTR [bp+si+0x50bf]
  41fa5e:	inc    eax
  41fa5f:	cmp    eax,0x3bbbef29
  41fa64:	repz sub BYTE PTR [eax-0x33ccdbf3],bl
  41fa6b:	and    DWORD PTR [edi+ebp*2+0x4db5c3f4],0x28
  41fa73:	in     al,dx
  41fa74:	nop
  41fa75:	cld    
  41fa76:	cs mov cl,BYTE PTR gs:[esi+eiz*4]
  41fa7b:	(bad)  
  41fa7c:	gs scas al,BYTE PTR es:[edi]
  41fa7e:	jl     0x41fa96
  41fa80:	sub    edx,DWORD PTR [esi-0x1a]
  41fa83:	sbb    BYTE PTR [bx+si],cl
  41fa86:	adc    eax,0x6a896151
  41fa8b:	xor    BYTE PTR [ecx],0x62
  41fa8e:	dec    ebp
  41fa8f:	xlat   BYTE PTR cs:[ebx]
  41fa91:	push   esi
  41fa92:	mov    al,0xd0
  41fa94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa95:	cmp    al,ah
  41fa97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa98:	test   BYTE PTR [esi+edi*2],bl
  41fa9b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41fa9d:	jbe    0x41fa36
  41fa9f:	xor    edx,DWORD PTR [ecx-0x68]
  41faa2:	xor    DWORD PTR [edx-0x107580a],esp
  41faa8:	or     DWORD PTR [esp+edi*8],0xffffffac
  41faac:	cmp    BYTE PTR [esi-0x78],dl
  41faaf:	adc    BYTE PTR [ebp+0x75],ch
  41fab2:	pushf  
  41fab3:	inc    ebx
  41fab4:	push   cs
  41fab5:	inc    ebp
  41fab6:	test   edx,ecx
  41fab8:	adc    DWORD PTR [ebp+esi*2-0x54b4d5de],0x64
  41fac0:	pop    edx
  41fac1:	cmp    dl,BYTE PTR [eax]
  41fac3:	std    
  41fac4:	push   ebx
  41fac5:	(bad)  
  41fac7:	fdivrp st(2),st
  41fac9:	push   edi
  41faca:	mov    esp,0xdf4414c0
  41facf:	push   eax
  41fad0:	(bad)  
  41fad1:	shr    BYTE PTR [ecx+esi*4+0x72632ede],cl
  41fad8:	add    al,bl
  41fada:	scas   eax,DWORD PTR es:[edi]
  41fadb:	repz or eax,0x422f1425
  41fae1:	jmp    0x8e2c0743
  41fae6:	lock mov bl,0x8c
  41fae9:	out    dx,al
  41faea:	mov    ebx,0x9b4fbd68
  41faef:	fbstp  TBYTE PTR ds:0xce419e63
  41faf5:	sbb    DWORD PTR [eax],edi
  41faf7:	xchg   ecx,eax
  41faf8:	sti    
  41faf9:	jle    0x41fb2f
  41fafb:	test   DWORD PTR [ecx-0x44],eax
  41fafe:	shl    al,0x73
  41fb01:	inc    ecx
  41fb02:	sbb    eax,0xe0de5b82
  41fb07:	ins    DWORD PTR es:[edi],dx
  41fb08:	loop   0x41fb06
  41fb0a:	sub    al,0x68
  41fb0c:	scas   al,BYTE PTR es:[edi]
  41fb0d:	add    ebx,edi
  41fb0f:	cmc    
  41fb10:	push   esi
  41fb11:	psllq  mm4,QWORD PTR fs:[esi-0x1ea8e859]
  41fb19:	or     dh,bl
  41fb1b:	fist   DWORD PTR [edx+0x2304a30d]
  41fb21:	mov    cl,0x27
  41fb23:	xchg   edi,eax
  41fb24:	test   eax,0x4c56c543
  41fb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb2a:	cmp    eax,0x7686ed46
  41fb2f:	xor    ch,bl
  41fb31:	pushf  
  41fb32:	fadd   DWORD PTR [eax]
  41fb34:	leave  
  41fb35:	in     al,0xe1
  41fb37:	push   ebp
  41fb38:	xchg   DWORD PTR [ebx+eiz*8+0x71d702de],esp
  41fb3f:	xor    DWORD PTR [eax+ebp*4],0xffffffbe
  41fb43:	cmp    esp,esp
  41fb45:	sub    BYTE PTR [edx],cl
  41fb47:	jb     0x41fb7f
  41fb49:	mov    ecx,0x38c5a2b4
  41fb4e:	fnstsw WORD PTR [ebp-0x4d]
  41fb51:	and    ah,BYTE PTR ds:0x6fb69e96
  41fb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb58:	sub    al,BYTE PTR [edx-0x19]
  41fb5b:	cmp    al,0x30
  41fb5d:	push   ebx
  41fb5e:	mov    edx,0x2d44cde5
  41fb63:	lods   eax,DWORD PTR ds:[esi]
  41fb64:	mov    BYTE PTR [eax-0x2c],dl
  41fb67:	loop   0x41fb59
  41fb69:	popa   
  41fb6a:	pushf  
  41fb6b:	inc    esi
  41fb6c:	sbb    eax,DWORD PTR [edx-0x42]
  41fb6f:	leave  
  41fb70:	push   0x50
  41fb72:	xchg   edx,eax
  41fb73:	pop    esi
  41fb74:	and    al,0x96
  41fb76:	ror    BYTE PTR ds:0x83215fb7,cl
  41fb7c:	or     DWORD PTR [edi-0x8b0d8f8],edi
  41fb82:	sub    eax,0xd58ccd0c
  41fb87:	mov    ss,WORD PTR [ebx+0x64819b81]
  41fb8d:	mov    WORD PTR [esi+ebx*8-0x524384a1],gs
  41fb94:	repz pop esi
  41fb96:	or     edi,DWORD PTR [ecx]
  41fb98:	imul   ebx,DWORD PTR [edx+ecx*2+0x4508f562],0xf46cd097
  41fba3:	mov    edi,0x8bd6fcbd
  41fba8:	jb     0x41fc20
  41fbaa:	sahf   
  41fbab:	sahf   
  41fbac:	aas    
  41fbad:	inc    eax
  41fbae:	int    0xb
  41fbb0:	pop    esp
  41fbb1:	stc    
  41fbb2:	xchg   dh,dh
  41fbb4:	aam    0x43
  41fbb6:	test   BYTE PTR [edi-0x4a27d73c],dl
  41fbbc:	xchg   esi,eax
  41fbbd:	mov    ebp,0x87145606
  41fbc2:	fmul   DWORD PTR [eax+0x63]
  41fbc5:	test   BYTE PTR ds:0x9d311ffc,cl
  41fbcb:	hlt    
  41fbcc:	sub    eax,0x8a99e16c
  41fbd1:	mov    edi,0x908682ee
  41fbd6:	popa   
  41fbd7:	adc    eax,ebx
  41fbd9:	jecxz  0x41fba5
  41fbdb:	push   ecx
  41fbdc:	mov    ebp,0x74ce2287
  41fbe1:	dec    edx
  41fbe2:	cmp    al,0xeb
  41fbe4:	adc    dl,BYTE PTR [ebx-0x67be42e0]
  41fbea:	inc    edx
  41fbeb:	das    
  41fbec:	jo     0x41fc40
  41fbee:	in     al,dx
  41fbef:	and    ecx,DWORD PTR [ebp+0x2e]
  41fbf2:	data16 jp 0x41fbfa
  41fbf5:	repz sub DWORD PTR [edi-0x2ac00eb9],ebp
  41fbfc:	pop    edx
  41fbfd:	push   ds
  41fbfe:	sub    DWORD PTR [ebp+eax*8+0xd],ebx
  41fc02:	les    esi,FWORD PTR [ecx-0x6ce7736]
  41fc08:	(bad)  
  41fc0a:	rol    DWORD PTR [edx+0x20],cl
  41fc0d:	push   ss
  41fc0e:	sub    ebx,DWORD PTR [ecx+0x6f71d7c1]
  41fc14:	push   ecx
  41fc15:	adc    ebx,DWORD PTR [esi]
  41fc17:	xor    DWORD PTR [ecx-0x11],0xffffffa4
  41fc1b:	loop   0x41fc68
  41fc1d:	jne    0x41fc9e
  41fc1f:	cmp    eax,0x22158bc4
  41fc24:	bound  ecx,QWORD PTR [ebp*4-0x74d3ad44]
  41fc2b:	not    BYTE PTR [ecx-0x42083322]
  41fc31:	aaa    
  41fc32:	dec    esi
  41fc33:	mov    ch,BYTE PTR [esi+0x2cc38a61]
  41fc39:	mov    dl,0x91
  41fc3b:	jmp    0x9c3b85fc
  41fc40:	xadd   BYTE PTR [eax-0x48b338f0],cl
  41fc47:	xor    al,cl
  41fc49:	retf   
  41fc4a:	test   DWORD PTR [ebx+0x5c8f74cf],ebx
  41fc50:	pop    edi
  41fc51:	add    BYTE PTR [edi+eax*1-0x4e19f8de],al
  41fc58:	ret    
  41fc59:	mov    al,ds:0xf9c5e1c0
  41fc5e:	or     al,0x7
  41fc60:	les    ebp,FWORD PTR [ebx+0x5b3ea0ed]
  41fc66:	or     eax,0x612e5e24
  41fc6b:	push   0xa54460df
  41fc70:	(bad)  
  41fc71:	push   esp
  41fc72:	jp     0x41fcc8
  41fc74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc75:	cdq    
  41fc76:	rcl    BYTE PTR ds:0x95003933,cl
  41fc7c:	push   eax
  41fc7d:	jbe    0x41fc50
  41fc7f:	jg     0x41fc5e
  41fc81:	sub    eax,0xc22796c5
  41fc86:	inc    esi
  41fc87:	sub    ebx,DWORD PTR [ecx-0x4c]
  41fc8a:	xchg   ebx,eax
  41fc8b:	test   al,0x6d
  41fc8d:	pusha  
  41fc8e:	out    0x58,al
  41fc90:	lock pop ebx
  41fc92:	jns    0x41fce1
  41fc94:	sti    
  41fc95:	xor    edi,DWORD PTR [ebx-0x22410f39]
  41fc9b:	xchg   edx,eax
  41fc9c:	sti    
  41fc9d:	dec    ebp
  41fc9e:	outs   dx,BYTE PTR ds:[esi]
  41fc9f:	fs pop esi
  41fca1:	push   ebx
  41fca2:	jp     0x41fc56
  41fca4:	je     0x41fc77
  41fca6:	js     0x41fcc2
  41fca8:	sbb    eax,0x629f7e60
  41fcad:	cmp    eax,0xf722c8a3
  41fcb2:	call   0xd2072b8
  41fcb7:	stos   DWORD PTR es:[edi],eax
  41fcb8:	pop    es
  41fcb9:	stos   DWORD PTR es:[edi],eax
  41fcba:	and    eax,0x7233a00d
  41fcbf:	push   ecx
  41fcc0:	lods   al,BYTE PTR gs:[esi]
  41fcc2:	daa    
  41fcc3:	or     al,0x12
  41fcc5:	or     DWORD PTR ds:0x99aa86b5,edx
  41fccb:	iret   
  41fccc:	xor    edi,DWORD PTR [ecx+0x7e0001a2]
  41fcd2:	dec    ecx
  41fcd3:	push   0xc
  41fcd5:	push   ecx
  41fcd6:	jg     0x41fc67
  41fcd8:	ret    0x1875
  41fcdb:	pop    esp
  41fcdc:	in     eax,dx
  41fcdd:	push   es
  41fcde:	or     eax,0x857adbfa
  41fce3:	mov    esp,0xeee1530f
  41fce8:	jge    0x41fd1a
  41fcea:	rcl    BYTE PTR [esi+0x2fdc9eb0],1
  41fcf0:	pushf  
  41fcf1:	adc    ecx,esp
  41fcf3:	mov    BYTE PTR [edi+0x56708148],0x63
  41fcfa:	mov    edi,0xc1820bb3
  41fcff:	mov    ah,0x1b
  41fd01:	inc    eax
  41fd02:	mov    dh,0x90
  41fd04:	and    BYTE PTR [eax+0x6b],ah
  41fd07:	dec    ecx
  41fd08:	add    DWORD PTR [ebx],ebp
  41fd0a:	sti    
  41fd0b:	and    al,0x18
  41fd0d:	inc    esp
  41fd0e:	mov    edi,0x8442a956
  41fd13:	push   edx
  41fd14:	out    0xda,al
  41fd16:	jmp    0x4878f6e3
  41fd1b:	jge    0x41fca1
  41fd1d:	not    DWORD PTR [ecx+0x6c]
  41fd20:	push   eax
  41fd21:	std    
  41fd22:	fld    QWORD PTR [esi-0x7]
  41fd25:	xchg   edx,eax
  41fd26:	mov    ah,0xee
  41fd28:	movaps xmm6,xmm2
  41fd2b:	lods   al,BYTE PTR ds:[esi]
  41fd2c:	iret   
  41fd2d:	mov    ss,WORD PTR [esi+0x76]
  41fd30:	jbe    0x41fdab
  41fd32:	mov    dl,0x6d
  41fd34:	stos   BYTE PTR es:[edi],al
  41fd35:	retf   
  41fd36:	rcl    DWORD PTR [ebp+0x78],1
  41fd39:	xor    edx,esp
  41fd3b:	jp     0x41fd15
  41fd3d:	or     al,0x53
  41fd3f:	inc    ebp
  41fd40:	sbb    BYTE PTR [esi],cl
  41fd42:	(bad)  
  41fd43:	cwde   
  41fd44:	or     eax,ecx
  41fd46:	push   0xfb2fdafb
  41fd4b:	sbb    ah,ch
  41fd4d:	stc    
  41fd4e:	inc    ecx
  41fd4f:	rcl    BYTE PTR [edx-0x31],1
  41fd52:	mov    ah,BYTE PTR [ecx]
  41fd54:	xor    DWORD PTR ds:0x94aa3523,esi
  41fd5a:	test   DWORD PTR [edx+eax*1],ebp
  41fd5d:	mov    esi,0x40cc70ef
  41fd62:	mov    DWORD PTR [esi],eax
  41fd64:	mov    bh,0x43
  41fd66:	cmc    
  41fd67:	lock std 
  41fd69:	dec    ebp
  41fd6a:	loope  0x41fd81
  41fd6c:	sbb    BYTE PTR ds:0x44a1cd34,0xea
  41fd73:	stos   DWORD PTR es:[edi],eax
  41fd74:	xchg   edx,eax
  41fd75:	fwait
  41fd76:	jno    0x41fde7
  41fd78:	arpl   WORD PTR [edi-0x23c8f78],di
  41fd7e:	adc    al,0x37
  41fd80:	mov    ebx,0xe79452fb
  41fd85:	rcr    DWORD PTR [eax+edi*4-0xb200f5e],cl
  41fd8c:	xor    BYTE PTR [edx],al
  41fd8e:	shr    BYTE PTR [ebx],cl
  41fd90:	ror    BYTE PTR ss:[ebx-0x1f],cl
  41fd94:	jns    0x41fd56
  41fd96:	sub    eax,0x91e11935
  41fd9b:	shl    DWORD PTR ds:[ebp-0x78],0xac
  41fda0:	pop    esi
  41fda1:	shl    BYTE PTR [edi],0x95
  41fda4:	add    edx,DWORD PTR [edx]
  41fda6:	cmp    BYTE PTR [ecx+0x5c],bl
  41fda9:	or     al,0xf1
  41fdab:	mov    bl,0xf4
  41fdad:	adc    DWORD PTR [ebx],0xffffffa6
  41fdb0:	add    al,0xd8
  41fdb2:	mov    dl,0xe6
  41fdb4:	fucomi st,st(3)
  41fdb6:	sub    ch,BYTE PTR [edi-0x79edebfd]
  41fdbc:	inc    edi
  41fdbd:	or     al,0xfd
  41fdbf:	adc    eax,0x9dda6fd
  41fdc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdc5:	xchg   ebp,eax
  41fdc6:	inc    ecx
  41fdc7:	jno    0x41fe2e
  41fdc9:	js     0x41fd5b
  41fdcb:	iret   
  41fdcc:	aam    0x17
  41fdce:	xchg   al,bl
  41fdd0:	je     0x41fdcb
  41fdd2:	push   eax
  41fdd3:	push   edx
  41fdd4:	fdivr  DWORD PTR [edx+0x69e4d1ff]
  41fdda:	xchg   esp,eax
  41fddb:	cli    
  41fddc:	cmp    bh,BYTE PTR [ebp-0x455f80ab]
  41fde2:	jno    0x41fdec
  41fde4:	jb     0x41fe22
  41fde6:	adc    bl,bh
  41fde8:	shl    esi,cl
  41fdea:	push   cs
  41fdeb:	sub    ebp,0x2c87addd
  41fdf1:	jne    0x41fd80
  41fdf3:	shl    edi,cl
  41fdf5:	mov    ebp,0x6760f4e9
  41fdfa:	mov    ebx,edi
  41fdfc:	mov    edi,0x2ee41b7c
  41fe01:	sbb    ecx,ebx
  41fe03:	mov    edi,0x6d1c9a3f
  41fe08:	xchg   ecx,eax
  41fe09:	xchg   DWORD PTR [ebx],esp
  41fe0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe0c:	push   ebp
  41fe0d:	or     esp,DWORD PTR [ebx+ebx*8]
  41fe10:	ret    
  41fe11:	sub    ecx,DWORD PTR [edi+edx*2-0x53]
  41fe15:	aas    
  41fe16:	add    bl,BYTE PTR ds:0x40d947
  41fe1c:	inc    ebx
  41fe1d:	push   ebp
  41fe1e:	sbb    DWORD PTR [ebx-0x33],eax
  41fe21:	or     al,0x77
  41fe23:	lock out dx,eax
  41fe25:	cs inc ebx
  41fe27:	rcl    BYTE PTR [ebx-0x126c0402],0x31
  41fe2e:	xchg   BYTE PTR [ecx+0x59],dh
  41fe31:	jnp    0x41fdfa
  41fe33:	sahf   
  41fe34:	fbstp  TBYTE PTR [esi+0x482640bb]
  41fe3a:	hlt    
  41fe3b:	(bad)  
  41fe3c:	mov    al,0x69
  41fe3e:	leave  
  41fe3f:	xchg   DWORD PTR [edi-0x72],ebp
  41fe42:	stc    
  41fe43:	jle    0x41fdfc
  41fe45:	pop    ebp
  41fe46:	xchg   ebx,eax
  41fe47:	sub    edx,DWORD PTR [eax-0x19]
  41fe4a:	cwde   
  41fe4b:	sti    
  41fe4c:	or     BYTE PTR [ebp-0x4e48e053],dl
  41fe52:	adc    BYTE PTR [ebp-0xb],ah
  41fe55:	cli    
  41fe56:	imul   eax,DWORD PTR [edx+0x11],0xffffffab
  41fe5a:	scas   al,BYTE PTR es:[edi]
  41fe5b:	add    BYTE PTR [ecx+0x2c147d8e],bl
  41fe61:	sub    ebp,DWORD PTR [edi]
  41fe63:	dec    ecx
  41fe64:	add    eax,0x969fc475
  41fe69:	and    bl,cl
  41fe6b:	sub    eax,0xef5105bf
  41fe70:	clc    
  41fe71:	pop    es
  41fe72:	cmc    
  41fe73:	test   eax,0x4b4ce3fa
  41fe78:	pop    ss
  41fe79:	ret    
  41fe7a:	push   ss
  41fe7b:	fidivr WORD PTR [eax+0x5fb38e64]
  41fe81:	cmp    cl,BYTE PTR [ebp-0x3112c64e]
  41fe87:	dec    eax
  41fe88:	push   eax
  41fe89:	pop    edx
  41fe8a:	mov    DWORD PTR [ecx],edx
  41fe8c:	sbb    DWORD PTR [esi+0x65],esi
  41fe8f:	pop    ds
  41fe90:	enter  0x4100,0x77
  41fe94:	retf   
  41fe95:	rol    BYTE PTR [edx+eax*4+0x2d96cb4a],cl
  41fe9c:	and    DWORD PTR [esp+edx*2+0x4d992105],0xffffffbb
  41fea4:	call   0x70cc:0xe38a03fd
  41feab:	adc    BYTE PTR [eax+0x5],dl
  41feae:	push   ss
  41feaf:	or     DWORD PTR [edx],esi
  41feb1:	nop
  41feb2:	mov    ch,0x4
  41feb4:	mov    DWORD PTR [esi],ebx
  41feb6:	repnz cmp al,0x8b
  41feb9:	call   0x3e7b:0x23b16ef6
  41fec0:	ss xchg ecx,eax
  41fec2:	mov    ecx,0x8bcbba0d
  41fec8:	imul   dh
  41feca:	push   ds
  41fecb:	ins    BYTE PTR es:[edi],dx
  41fecc:	loope  0x41feaa
  41fece:	jmp    0x7bcd97e6
  41fed3:	mov    ?,WORD PTR [edx+0x6]
  41fed6:	stos   BYTE PTR es:[edi],al
  41fed7:	pop    ss
  41fed8:	jns    0x41ff01
  41feda:	jae    0x41feb6
  41fedc:	cli    
  41fedd:	out    0xec,eax
  41fedf:	shl    DWORD PTR [ecx],cl
  41fee1:	test   al,0xb9
  41fee3:	or     DWORD PTR [ecx+0x4a],ebx
  41fee6:	popa   
  41fee7:	test   DWORD PTR [edx-0x25c5bf02],edx
  41feed:	daa    
  41feee:	or     DWORD PTR [ebx],esi
  41fef0:	mov    bh,0xc1
  41fef2:	push   ss
  41fef3:	stc    
  41fef4:	(bad)  
  41fef6:	test   BYTE PTR [ecx-0x21],dh
  41fef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fefa:	add    al,0x45
  41fefc:	test   BYTE PTR [edi+0x775cb936],dl
  41ff02:	inc    ebx
  41ff03:	cmp    al,0xd6
  41ff05:	push   ebp
  41ff06:	pop    eax
  41ff07:	mov    bl,0x66
  41ff09:	(bad)  
  41ff0a:	sahf   
  41ff0b:	js     0x41fef2
  41ff0d:	jle    0x41feaa
  41ff0f:	int    0x5e
  41ff11:	aad    0xb1
  41ff13:	leave  
  41ff14:	imul   ecx,ebx,0x1a47a187
  41ff1a:	pop    edx
  41ff1b:	adc    BYTE PTR [edx],ah
  41ff1d:	xchg   ebx,eax
  41ff1e:	inc    edx
  41ff1f:	das    
  41ff20:	scas   al,BYTE PTR es:[edi]
  41ff21:	addr16 lahf 
  41ff23:	adc    bl,dl
  41ff25:	push   ebx
  41ff26:	lods   al,BYTE PTR cs:[esi]
  41ff28:	in     eax,dx
  41ff29:	sub    eax,0x85efc647
  41ff2e:	mov    al,ds:0x506db402
  41ff33:	jns    0x41ff5e
  41ff35:	adc    BYTE PTR [ebp-0xad866ac],0xd
  41ff3c:	das    
  41ff3d:	retf   
  41ff3e:	jmp    0x5138:0xe8f7c7b8
  41ff45:	dec    ebp
  41ff46:	ins    DWORD PTR es:[edi],dx
  41ff47:	mov    ebx,0x4862d528
  41ff4c:	fst    QWORD PTR [ebp-0x4]
  41ff4f:	mov    al,ds:0xb645c2f3
  41ff54:	and    bh,BYTE PTR [esi+0x6b]
  41ff57:	jno    0x41ff6f
  41ff59:	aam    0x1f
  41ff5b:	push   esp
  41ff5c:	add    ch,ch
  41ff5e:	jne    0x41ff77
  41ff60:	push   ebp
  41ff61:	mov    ?,esi
  41ff63:	xchg   edx,eax
  41ff64:	out    dx,al
  41ff65:	fwait
  41ff66:	mov    dh,0x6
  41ff68:	sub    dl,BYTE PTR [edx-0x71d2023e]
  41ff6e:	or     eax,esi
  41ff70:	mov    ch,0x36
  41ff72:	adc    BYTE PTR [eax+0x122499b6],cl
  41ff78:	and    DWORD PTR [edx],ebx
  41ff7a:	jle    0x41ff84
  41ff7c:	(bad)  [edi+0x0]
  41ff7f:	xchg   esi,eax
  41ff80:	int    0x65
  41ff82:	or     eax,0xbce49f28
  41ff87:	cmovb  edi,DWORD PTR [esi+0x2b]
  41ff8b:	adc    esp,DWORD PTR [ecx-0x5168100f]
  41ff91:	add    eax,0x32e2c171
  41ff96:	jmp    0x41ff2d
  41ff98:	or     DWORD PTR [ebp+0xf63ba0],ebp
  41ff9e:	jmp    0x3331f55d
  41ffa3:	nop
  41ffa4:	inc    ebx
  41ffa5:	mov    WORD PTR [eax-0x6],?
  41ffa8:	sub    BYTE PTR [ebp-0x61],ah
  41ffab:	cld    
  41ffac:	out    0x29,eax
  41ffae:	jne    0x420000
  41ffb0:	fld    QWORD PTR [esi+0x7847ab4]
  41ffb6:	in     al,dx
  41ffb7:	aam    0xc1
  41ffb9:	cli    
  41ffba:	pushf  
  41ffbb:	(bad)  
  41ffbc:	out    0x5c,eax
  41ffbe:	dec    BYTE PTR [ebx-0x4f969794]
  41ffc4:	popf   
  41ffc5:	icebp  
  41ffc6:	sbb    ah,BYTE PTR [eax+0x6b0f0326]
  41ffcc:	mov    WORD PTR ds:0x9e72d7f0,ss
  41ffd2:	pop    esp
  41ffd3:	jp     0x420041
  41ffd5:	pushf  
  41ffd6:	push   esi
  41ffd7:	and    BYTE PTR [ecx],ch
  41ffd9:	jae    0x420023
  41ffdb:	cmp    al,0x82
  41ffdd:	ret    0x6cc7
  41ffe0:	mov    esi,0x821538bf
  41ffe5:	or     eax,0x41bbb74c
  41ffea:	jg     0x42006a
  41ffec:	jmp    0xe837f916
  41fff1:	dec    ecx
  41fff2:	push   es
  41fff3:	jmp    0x99d16b10
  41fff8:	loop   0x41fff2
  41fffa:	dec    ebx
  41fffb:	cs inc edi
  41fffd:	out    dx,al
  41fffe:	mov    esp,0x34367fb2
  420003:	pop    ebp
  420004:	mov    ds:0x85c18c5c,al
  420009:	outs   dx,DWORD PTR ds:[esi]
  42000a:	js     0x41ff97
  42000c:	sahf   
  42000d:	in     eax,0x69
  42000f:	mov    dh,0xf3
  420011:	and    eax,0x8edb36dc
  420016:	xor    al,0x69
  420019:	(bad)  
  42001a:	xchg   esi,eax
  42001b:	add    eax,0x1be49c84
  420020:	push   edi
  420021:	inc    eax
  420022:	jecxz  0x42001c
  420024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420025:	adc    BYTE PTR [ecx],0xdc
  420028:	cmp    ebp,ebx
  42002a:	or     DWORD PTR [ebp-0x4726fe92],eax
  420030:	sub    DWORD PTR [edx+0x3b],0xc47899b7
  420037:	in     eax,0xbf
  420039:	jle    0x4200a5
  42003b:	cli    
  42003c:	sub    eax,0x6e206bd6
  420041:	xchg   BYTE PTR [eax+0x6e0da7ed],ch
  420047:	js     0x41fff7
  420049:	jg     0x42007e
  42004b:	xchg   ebp,eax
  42004c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42004d:	scas   al,BYTE PTR es:[edi]
  42004e:	ret    
  42004f:	xchg   DWORD PTR ds:[esp+ecx*4],ebx
  420053:	in     al,0x18
  420055:	cmc    
  420056:	mov    bl,0x0
  420058:	mov    esi,DWORD PTR [eax+0x55cf2b4a]
  42005e:	pop    esp
  42005f:	test   eax,0xd141bc5b
  420064:	mov    ds:0xb44bf7aa,al
  420069:	es dec edx
  42006b:	jl     0x42008a
  42006d:	jno    0x420025
  42006f:	sbb    al,0x64
  420071:	js     0x4200e9
  420073:	out    dx,eax
  420074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420075:	es xor eax,0x3d483049
  42007b:	les    ebp,FWORD PTR [ebx]
  42007d:	jle    0x420043
  42007f:	in     eax,0x5a
  420081:	sub    al,0xc0
  420083:	mov    bh,0x6e
  420085:	dec    esp
  420086:	push   es
  420087:	inc    eax
  420088:	inc    esi
  420089:	mov    cl,0xaa
  42008b:	jmp    0xe47f:0x2435fce7
  420092:	dec    esi
  420093:	test   DWORD PTR [ebp-0x70011c40],ebp
  420099:	mov    bl,0x5c
  42009b:	gs inc ebx
  42009d:	cs jl  0x420057
  4200a0:	aaa    
  4200a1:	(bad)  
  4200a2:	loop   0x4200c0
  4200a4:	pop    ss
  4200a5:	mov    BYTE PTR [edi],al
  4200a7:	inc    DWORD PTR [edi+ebx*8-0x499ffe23]
  4200ae:	inc    eax
  4200af:	nop
  4200b0:	iret   
  4200b1:	xchg   BYTE PTR [esi],dl
  4200b3:	rol    BYTE PTR [esi+0x545e5b7],0x72
  4200ba:	daa    
  4200bb:	jns    0x420121
  4200bd:	adc    BYTE PTR [edi],ah
  4200bf:	sub    dh,BYTE PTR [ecx+0xb92b90f]
  4200c5:	(bad)  
  4200c6:	adc    eax,0xb073cec2
  4200cb:	dec    esp
  4200cc:	push   0x3d
  4200ce:	add    BYTE PTR [ebp-0x64264bbc],al
  4200d4:	xchg   edx,eax
  4200d5:	sub    al,0x2e
  4200d7:	iret   
  4200d8:	jle    0x42013e
  4200da:	scas   al,BYTE PTR es:[edi]
  4200db:	(bad)  
  4200dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200dd:	mov    DWORD PTR [ebx+esi*8+0x62],ecx
  4200e1:	xchg   edi,eax
  4200e2:	jbe    0x420127
  4200e4:	dec    eax
  4200e5:	dec    edi
  4200e6:	inc    edi
  4200e7:	fisubr DWORD PTR [ecx+0x379823f9]
  4200ed:	xor    al,0xd8
  4200f0:	jg     0x4200d5
  4200f2:	add    al,0x63
  4200f4:	icebp  
  4200f5:	int    0x40
  4200f7:	fs aam 0x29
  4200fa:	cmp    DWORD PTR [edx+edi*4+0x4381ed2a],esp
  420101:	or     ebx,ecx
  420103:	scas   al,BYTE PTR es:[edi]
  420104:	mov    ch,0xe8
  420106:	(bad)  
  420107:	ss stc 
  420109:	xchg   edx,eax
  42010a:	xlat   BYTE PTR ds:[ebx]
  42010b:	sar    edx,0x6d
  42010e:	jmp    0xab4e:0xb50fc917
  420115:	mov    edi,0xec34b20
  42011a:	js     0x4200ec
  42011c:	jle    0x420115
  42011e:	aas    
  42011f:	cld    
  420120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420121:	or     DWORD PTR [ecx-0x9],0xde0c2fe8
  420128:	cmp    al,0xf6
  42012a:	sti    
  42012b:	pop    ds
  42012c:	jmp    0xcbe7:0x8dfebaf5
  420133:	mov    dl,BYTE PTR [ebx-0x3ae33d69]
  420139:	jle    0x420111
  42013b:	or     DWORD PTR [esi+0x6],edi
  42013e:	mov    DWORD PTR [ebp+0x7684e18],eax
  420144:	test   eax,0x7cfe4d59
  420149:	sti    
  42014a:	push   edi
  42014b:	adc    DWORD PTR [ebx+edi*1],edx
  42014e:	(bad)  
  42014f:	mov    ds:0x678e0ba0,eax
  420154:	loope  0x4200fc
  420156:	mov    eax,0x991ffde7
  42015b:	int3   
  42015c:	int    0x85
  42015e:	push   esi
  42015f:	sub    DWORD PTR [edi-0x1577a9a4],edi
  420165:	push   0x261723c
  42016a:	fbld   TBYTE PTR [eax+0x7]
  42016d:	aas    
  42016e:	inc    ecx
  42016f:	and    dl,cl
  420171:	sub    DWORD PTR [esi+0x488d8552],edi
  420177:	ins    DWORD PTR es:[edi],dx
  420178:	mov    bh,0x7e
  42017a:	xchg   esp,eax
  42017b:	sar    BYTE PTR [ebx+0x27],1
  42017e:	mov    eax,0x5fee5f17
  420183:	sbb    ah,BYTE PTR [esi+ecx*1]
  420186:	pusha  
  420187:	adc    BYTE PTR [edx-0x2d],0x31
  42018b:	xor    eax,0x99547891
  420190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420191:	loopne 0x4201a3
  420193:	es mov edx,0x5cb8ade0
  420199:	mov    ah,0x9f
  42019b:	fwait
  42019c:	or     edi,DWORD PTR [edi+0x4df88793]
  4201a2:	loop   0x42012c
  4201a4:	mov    ecx,0x87fe0e64
  4201a9:	jmp    0x9a7d:0xe16a3dba
  4201b0:	outs   dx,DWORD PTR ds:[esi]
  4201b1:	pusha  
  4201b2:	inc    esi
  4201b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201b4:	adc    DWORD PTR [bx+si-0x63],ebx
  4201b8:	xchg   DWORD PTR [edx-0x3a],edi
  4201bb:	xchg   BYTE PTR [ebx+0x75517b13],cl
  4201c1:	jmp    0x420167
  4201c3:	iret   
  4201c4:	imul   edi,DWORD PTR [esi+0x4c4c2b63],0xe5fc10d0
  4201ce:	pop    edi
  4201cf:	or     al,ah
  4201d1:	sub    DWORD PTR [ecx-0x7f875031],ebp
  4201d7:	jb     0x420245
  4201d9:	call   0xb4f7:0x7da87084
  4201e0:	and    bh,dl
  4201e2:	cmp    edx,edx
  4201e4:	add    BYTE PTR [ecx+0x48494f43],bl
  4201ea:	lock xor dh,BYTE PTR [edx+0x6d]
  4201ee:	xchg   BYTE PTR [ebp+0x3b],bh
  4201f1:	push   edx
  4201f2:	test   eax,0x522d592
  4201f7:	jnp    0x42019f
  4201f9:	stc    
  4201fa:	jno    0x42018f
  4201fc:	stc    
  4201fd:	inc    edx
  4201fe:	dec    ebp
  4201ff:	sub    ebp,DWORD PTR [ecx-0x5ff9e29e]
  420205:	ret    
  420206:	inc    eax
  420207:	mov    eax,ds:0xb599a1ee
  42020c:	mov    ds:0x5cae797,eax
  420211:	call   0xe09f:0x94f7c9c4
  420218:	push   ds
  420219:	imul   ebx,DWORD PTR [edx-0x4c],0x52
  42021d:	jecxz  0x42020b
  42021f:	sbb    eax,0x3883a354
  420224:	and    al,0xc6
  420226:	fwait
  420227:	aad    0x64
  420229:	xchg   edx,eax
  42022a:	mov    ds:0x27ee9879,eax
  42022f:	jmp    DWORD PTR [edx+ebp*8]
  420232:	loop   0x42022a
  420234:	(bad)  
  420235:	scas   eax,DWORD PTR es:[edi]
  420236:	hlt    
  420237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420238:	lea    ebp,[esi-0x40031981]
  42023e:	popf   
  42023f:	mov    fs,WORD PTR [edx-0x65]
  420242:	and    cl,dl
  420244:	and    edi,DWORD PTR [edx+0x4cfd1ff3]
  42024a:	ret    0x4616
  42024d:	mov    eax,0xe9ed1647
  420252:	call   0x199b:0xe6f4fca0
  420259:	punpckldq mm6,DWORD PTR [ebx+ebx*8+0x11e25e49]
  420261:	inc    esp
  420262:	ins    BYTE PTR es:[edi],dx
  420263:	xchg   ecx,eax
  420264:	inc    ecx
  420265:	dec    ecx
  420266:	xor    ebx,DWORD PTR [eax]
  420268:	dec    esi
  420269:	lods   al,BYTE PTR ds:[esi]
  42026a:	gs nop
  42026c:	mov    BYTE PTR [esi+0xa],dh
  42026f:	adc    dh,0x61
  420272:	stos   BYTE PTR es:[edi],al
  420273:	or     eax,0xa4adca4e
  420278:	push   0x11
  42027a:	jecxz  0x420266
  42027c:	mov    dl,0xe0
  42027e:	icebp  
  42027f:	fldcw  WORD PTR [esi]
  420281:	pop    esi
  420282:	int3   
  420283:	test   al,0xaa
  420285:	test   BYTE PTR [ecx],bl
  420287:	xchg   ebx,eax
  420288:	xchg   ebp,eax
  420289:	adc    al,0x19
  42028b:	xchg   ebp,eax
  42028c:	popa   
  42028d:	dec    edi
  42028e:	(bad)  
  42028f:	nop
  420290:	dec    edx
  420291:	loope  0x420289
  420293:	fwait
  420294:	pop    ebx
  420295:	sti    
  420296:	xchg   esp,eax
  420297:	(bad)  
  420298:	fist   WORD PTR [ebp-0x2f524dd5]
  42029e:	adc    DWORD PTR [eax],eax
  4202a0:	cli    
  4202a1:	ins    DWORD PTR es:[edi],dx
  4202a2:	push   edi
  4202a3:	ja     0x4202af
  4202a5:	cdq    
  4202a6:	cmp    cl,dh
  4202a8:	push   edi
  4202a9:	ins    DWORD PTR es:[edi],dx
  4202aa:	lea    esp,[esi+0x419cb359]
  4202b0:	mov    ecx,?
  4202b2:	cld    
  4202b3:	sub    ah,dh
  4202b5:	dec    eax
  4202b6:	in     al,dx
  4202b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202b8:	xchg   edx,eax
  4202b9:	mov    ebx,0xf92f05a9
  4202be:	pop    edx
  4202bf:	repnz aam 0xd0
  4202c2:	xor    al,cl
  4202c4:	cdq    
  4202c5:	xchg   ebp,eax
  4202c6:	aas    
  4202c7:	sub    dh,BYTE PTR [eax+0x16]
  4202ca:	push   ebp
  4202cb:	xchg   ebp,eax
  4202cc:	je     0x4202bb
  4202ce:	cld    
  4202cf:	scas   eax,DWORD PTR es:[edi]
  4202d0:	jo     0x4202f1
  4202d2:	in     al,0xdb
  4202d4:	adc    eax,0xc22892ea
  4202d9:	sub    ebx,DWORD PTR [ebx+0x1a4b3ce8]
  4202df:	jge    0x4202fe
  4202e1:	(bad)  
  4202e2:	sub    ebp,DWORD PTR [ebp+0x609706fa]
  4202e8:	sbb    esi,DWORD PTR [ecx]
  4202ea:	adc    dh,BYTE PTR [ebx-0x3]
  4202ed:	sub    al,0x3c
  4202ef:	loopne 0x4202b9
  4202f1:	jb     0x4202a0
  4202f3:	jmp    0x996e:0x302582db
  4202fa:	in     eax,0xaf
  4202fc:	xchg   edx,eax
  4202fd:	dec    esi
  4202fe:	cwde   
  4202ff:	pop    ss
  420300:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  420302:	adc    bh,BYTE PTR [edi]
  420304:	or     DWORD PTR [ebx+eax*4-0x3f8093bb],0xffffffc5
  42030c:	call   0xc689151e
  420311:	ret    
  420312:	mov    ecx,0x1621f6c3
  420317:	sub    esi,DWORD PTR ds:0xa3884321
  42031d:	test   DWORD PTR [ebx-0x16],edi
  420320:	or     dl,BYTE PTR [esi+edx*8-0x118fd577]
  420327:	jle    0x420366
  420329:	aad    0xd7
  42032b:	sub    DWORD PTR [edx],0x2c5c04bb
  420331:	jns    0x420310
  420333:	pop    edi
  420334:	mov    esi,0xb2e23378
  420339:	and    dh,BYTE PTR [edi+0x23]
  42033c:	cdq    
  42033d:	je     0x42034a
  42033f:	mov    bh,0x6d
  420341:	loope  0x42033f
  420343:	sub    BYTE PTR [edi],dl
  420345:	push   ss
  420346:	addr16 pop edx
  420348:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42034a:	sub    al,0xbe
  42034c:	xchg   BYTE PTR ds:0x11218b27,cl
  420352:	jb     0x420336
  420354:	jp     0x420375
  420356:	int3   
  420357:	push   eax
  420358:	(bad)  
  420359:	cdq    
  42035a:	rcr    DWORD PTR [eax+0x1ba9bfe0],0xfd
  420361:	popf   
  420362:	and    ecx,ecx
  420364:	loopne 0x4203b9
  420366:	cld    
  420367:	fild   QWORD PTR [edi+edx*8-0x69]
  42036b:	mov    edi,esp
  42036d:	xor    edx,DWORD PTR [esp+eax*8]
  420370:	je     0x42038e
  420372:	mov    eax,0x549725a2
  420377:	jae    0x420398
  420379:	hlt    
  42037a:	jmp    0x5ae7:0x58a73f7b
  420381:	lahf   
  420382:	mov    al,ds:0xae1fb255
  420387:	pop    ds
  420388:	jae    0x420378
  42038a:	lods   eax,DWORD PTR ds:[esi]
  42038b:	mov    bh,0xc6
  42038d:	sub    al,0xc9
  42038f:	(bad)  
  420390:	outs   dx,DWORD PTR ds:[esi]
  420391:	retf   0xeb3c
  420394:	add    edi,edx
  420396:	xor    ah,BYTE PTR [ecx-0x3fbf0b9]
  42039c:	fisttp QWORD PTR [esi+0x6b]
  42039f:	std    
  4203a0:	fwait
  4203a1:	pop    esp
  4203a2:	or     eax,0x49fd6508
  4203a7:	je     0x420365
  4203a9:	ds sbb ecx,0x6f861920
  4203b0:	pop    es
  4203b1:	aaa    
  4203b2:	jnp    0x420341
  4203b4:	sub    al,0xd7
  4203b6:	dec    ecx
  4203b7:	retf   
  4203b8:	mul    DWORD PTR [ecx+edi*2+0x362018cb]
  4203bf:	retf   
  4203c0:	das    
  4203c1:	fadd   st,st(7)
  4203c3:	ins    DWORD PTR es:[edi],dx
  4203c4:	push   es
  4203c5:	out    0xc1,al
  4203c7:	mov    ch,0x3c
  4203c9:	inc    ebx
  4203ca:	sub    al,0xb
  4203cc:	inc    ebp
  4203cd:	jg     0x42035e
  4203cf:	sar    DWORD PTR [ecx+ebx*1-0x4c55fb7],cl
  4203d6:	(bad)  
  4203d7:	loope  0x4203de
  4203d9:	inc    ebp
  4203da:	dec    eax
  4203db:	jbe    0xe29144c7
  4203e1:	cmp    BYTE PTR [edx+ebp*4],0xdf
  4203e5:	ja     0x4203e6
  4203e7:	js     0x4203d1
  4203e9:	adc    BYTE PTR [ebx+ebx*2-0x1b0a89b7],bh
  4203f0:	aaa    
  4203f1:	hlt    
  4203f2:	(bad)  
  4203f3:	call   0xd013:0xf77b098c
  4203fa:	nop
  4203fb:	dec    esi
  4203fc:	inc    BYTE PTR [edi]
  4203fe:	(bad)  
  4203ff:	sub    eax,0x13e169c0
  420404:	fild   DWORD PTR [eax+0x408328ea]
  42040a:	or     dl,bh
  42040c:	mov    al,ds:0xedfac955
  420411:	scas   al,BYTE PTR es:[edi]
  420412:	dec    ebp
  420413:	cmp    eax,0xf0b95ae1
  420418:	inc    ebx
  420419:	stos   BYTE PTR es:[edi],al
  42041a:	ins    BYTE PTR es:[edi],dx
  42041b:	fwait
  42041c:	popf   
  42041d:	in     al,0xea
  42041f:	fmul   QWORD PTR [ebx]
  420421:	pop    es
  420422:	hlt    
  420423:	lods   al,BYTE PTR ds:[esi]
  420424:	push   edx
  420425:	jle    0x420495
  420427:	pop    esi
  420428:	ror    dl,0x2d
  42042b:	arpl   WORD PTR [ecx],si
  42042d:	pushf  
  42042e:	gs push ebp
  420430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420431:	bound  edx,QWORD PTR [edi-0x4a]
  420434:	inc    ebp
  420435:	adc    eax,0x4c716b56
  42043a:	in     eax,0x33
  42043c:	cmp    edx,DWORD PTR [ecx+0x6c]
  42043f:	shl    DWORD PTR [ebx-0x10],0x4c
  420443:	mov    eax,0x75a590d8
  420448:	push   ds
  420449:	xchg   ebx,eax
  42044a:	pop    ebp
  42044b:	cs mov bl,0x61
  42044e:	adc    bl,ah
  420450:	loop   0x42049a
  420452:	imul   edx,DWORD PTR [esi+0x1b2606d0],0xffffff9f
  420459:	sub    cl,cl
  42045b:	cdq    
  42045c:	mov    eax,0xb92a77fb
  420461:	push   esi
  420462:	icebp  
  420463:	add    al,bh
  420465:	push   cs
  420466:	jae    0x4204ab
  420468:	in     eax,0xd5
  42046a:	int    0x86
  42046c:	aas    
  42046d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42046e:	aaa    
  42046f:	xchg   esp,eax
  420470:	push   ebx
  420471:	mov    ah,0x2d
  420473:	in     eax,dx
  420474:	rcr    DWORD PTR [edx+0x3c],1
  420477:	les    esi,FWORD PTR es:[edx]
  42047a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42047b:	or     esi,esp
  42047d:	xchg   DWORD PTR [eax+ecx*1],esi
  420480:	xor    al,0xa1
  420482:	ds jp  0x42047a
  420485:	adc    ah,BYTE PTR [edi-0x34]
  420488:	aad    0x90
  42048a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048b:	aad    0x7c
  42048d:	or     al,0xc6
  42048f:	inc    esp
  420490:	ret    0x734a
  420493:	call   0xe2ed:0xb7d084ff
  42049a:	fsub   DWORD PTR [ebx+0x68]
  42049d:	adc    bl,BYTE PTR [ebx-0x6824895b]
  4204a3:	cmp    esp,DWORD PTR [eax]
  4204a5:	adc    ebx,DWORD PTR [edi+ecx*1]
  4204a8:	add    BYTE PTR [edx-0x5f8ecfb8],ch
  4204ae:	mov    edi,0x62f8dff2
  4204b3:	pusha  
  4204b4:	inc    esi
  4204b5:	call   0x16b5:0xfbd8f0cf
  4204bc:	mov    WORD PTR [esi+0x36],es
  4204bf:	enter  0xe18a,0x89
  4204c3:	sahf   
  4204c4:	out    0xb3,al
  4204c6:	out    0xa6,eax
  4204c8:	movzx  esp,BYTE PTR [edx+edx*1-0xa122ef3]
  4204d0:	leave  
  4204d1:	dec    edi
  4204d2:	jbe    0x42050a
  4204d4:	push   eax
  4204d5:	lds    esp,FWORD PTR [ebx-0x8]
  4204d8:	xchg   edx,eax
  4204d9:	(bad)  
  4204da:	jle    0x4204fa
  4204dc:	call   0x6f4a:0x4b6102b9
  4204e3:	and    al,0x3a
  4204e5:	sub    ch,BYTE PTR [esi-0x2bfef4c7]
  4204eb:	rcl    DWORD PTR [ebx-0x1c],cl
  4204ee:	mov    ecx,0x219f8587
  4204f3:	dec    ebp
  4204f4:	xor    BYTE PTR [esi+0x4e],0x12
  4204f8:	inc    ecx
  4204f9:	cwde   
  4204fa:	jo     0x420530
  4204fc:	pop    es
  4204fd:	inc    ebp
  4204fe:	jmp    0x959af0b9
  420503:	loope  0x42056b
  420505:	in     eax,0xd4
  420507:	lods   eax,DWORD PTR ds:[esi]
  420508:	mov    cl,0x90
  42050a:	bound  esi,QWORD PTR ds:0x6f323cc1
  420510:	jmp    0x75d84de3
  420515:	out    0x52,eax
  420517:	inc    ebp
  420518:	icebp  
  420519:	push   ebp
  42051a:	shl    BYTE PTR [esi-0x2bac0f13],1
  420520:	xor    ebp,DWORD PTR [edi]
  420522:	test   al,0xc3
  420524:	mov    ebx,0xfad3ad1b
  420529:	pop    esp
  42052a:	out    dx,eax
  42052b:	sub    eax,0x525fd3d
  420530:	inc    edi
  420531:	add    al,0x25
  420533:	push   ds
  420534:	hlt    
  420535:	das    
  420536:	jne    0x42051d
  420538:	pop    es
  420539:	and    eax,0xecf35831
  42053e:	xor    eax,0x9f7645f2
  420543:	and    bl,BYTE PTR ds:[eax]
  420546:	lods   eax,DWORD PTR ds:[esi]
  420547:	jp     0x42052e
  420549:	cwde   
  42054a:	pop    eax
  42054b:	mov    edx,0x8f8f8d95
  420550:	pop    ds
  420551:	xchg   esi,eax
  420552:	inc    eax
  420553:	imul   ebp,DWORD PTR [ebp-0x40],0x10b2df20
  42055a:	sti    
  42055b:	adc    esp,DWORD PTR [esi+ebx*2+0x40]
  42055f:	shl    BYTE PTR [ebp-0x36],cl
  420562:	jb     0x420559
  420564:	jnp    0x42054b
  420566:	pop    ecx
  420567:	clc    
  420568:	popf   
  420569:	(bad)  
  42056a:	test   al,0xaf
  42056c:	inc    ebx
  42056d:	push   ebp
  42056e:	fist   WORD PTR ds:0xdea23c1a
  420574:	pop    ds
  420575:	cmp    esp,ecx
  420577:	fs int 0x88
  42057a:	push   ecx
  42057b:	out    0xd,eax
  42057d:	mov    gs,WORD PTR [edi-0x6dea049d]
  420583:	ins    BYTE PTR es:[edi],dx
  420584:	fist   WORD PTR [esp+eax*8-0x2e23ea89]
  42058b:	sub    al,0x6f
  42058d:	mov    al,0x63
  42058f:	int3   
  420590:	sar    DWORD PTR [ecx+0x3fbaf2a3],cl
  420596:	sbb    BYTE PTR [ebp+0x1bc53a57],dh
  42059c:	mov    es,WORD PTR [edi]
  42059e:	bound  ecx,QWORD PTR [ebx-0x5c]
  4205a1:	psubusw mm6,QWORD PTR [eax-0x38049d9f]
  4205a8:	dec    esi
  4205a9:	lock vpmacsdql xmm0,xmm0,XMMWORD PTR [ebx+0x55e707fd],xmm2
  4205b4:	lahf   
  4205b5:	mov    ch,0x8d
  4205b7:	push   ecx
  4205b8:	mov    ebp,0xc383f56
  4205bd:	add    BYTE PTR [eax+eiz*8-0x286ed2a0],dl
  4205c4:	xchg   bh,bl
  4205c6:	sti    
  4205c7:	cmp    DWORD PTR [eax+0x68718202],ebx
  4205cd:	sahf   
  4205ce:	cmp    DWORD PTR [esi-0x56e87376],0xa056aa8a
  4205d8:	je     0x4205d7
  4205da:	push   eax
  4205db:	pop    eax
  4205dc:	(bad)  
  4205de:	inc    eax
  4205df:	adc    DWORD PTR [ecx+0x77],edi
  4205e2:	add    ah,ah
  4205e4:	or     bh,0x1c
  4205e7:	loope  0x42058b
  4205e9:	xor    al,0x86
  4205eb:	xchg   DWORD PTR [ecx],eax
  4205ed:	mov    ch,BYTE PTR [eax+0xe]
  4205f0:	jp     0x420622
  4205f2:	mov    DWORD PTR [ecx+ecx*2-0x26],ebx
  4205f6:	pop    ebp
  4205f7:	stos   BYTE PTR es:[edi],al
  4205f8:	push   esp
  4205f9:	add    eax,0x6cdabf1f
  4205fe:	mov    ds:0x2a9f78b3,al
  420603:	int3   
  420604:	daa    
  420605:	jo     0x420663
  420607:	into   
  420608:	dec    ecx
  420609:	(bad)  
  42060a:	jb     0x420598
  42060c:	ja     0x4205ce
  42060e:	in     eax,0x18
  420610:	sbb    al,BYTE PTR [eax+esi*4]
  420613:	cmp    esp,DWORD PTR [eax]
  420615:	out    dx,eax
  420616:	xor    DWORD PTR [edx-0x55],ebp
  420619:	fisub  DWORD PTR [ebp+0x79]
  42061c:	retf   0x5260
  42061f:	lahf   
  420620:	cmc    
  420621:	mov    cl,0x37
  420623:	mov    BYTE PTR ds:0xbb1e4667,dl
  420629:	pusha  
  42062a:	ds popf 
  42062c:	ja     0x420621
  42062e:	imul   ecx,DWORD PTR [edi-0x1046b25f],0x6a
  420635:	pop    ss
  420636:	xchg   BYTE PTR [edi],al
  420638:	dec    edi
  420639:	sub    al,0xa8
  42063b:	pop    ecx
  42063c:	enter  0xf920,0xd7
  420640:	push   0x17
  420642:	dec    eax
  420643:	mov    al,ds:0x55e7d698
  420648:	js     0x4205e2
  42064a:	outs   dx,DWORD PTR ds:[esi]
  42064b:	cmp    bh,BYTE PTR [edx+ecx*8-0x7d]
  42064f:	xor    edi,esp
  420651:	dec    ebx
  420652:	add    al,0x9d
  420654:	mov    ebx,0x53fba853
  420659:	dec    eax
  42065a:	icebp  
  42065b:	jle    0x42063c
  42065d:	sahf   
  42065e:	jg     0x420678
  420660:	mov    ebp,0x5e9eb260
  420665:	aad    0xd4
  420667:	and    edx,DWORD PTR [ebp-0x80]
  42066a:	xor    DWORD PTR [esi-0x5ba2a8d4],esp
  420670:	push   edx
  420671:	pop    esi
  420672:	pop    ds
  420673:	xor    al,0x35
  420675:	pop    es
  420676:	pop    edi
  420677:	xor    al,0xd2
  420679:	rcl    BYTE PTR [ecx-0x44],cl
  42067c:	jmp    0x4206ed
  42067e:	std    
  42067f:	outs   dx,DWORD PTR ds:[esi]
  420680:	test   eax,0x702c375
  420685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420686:	pop    esp
  420687:	enter  0x490,0xbf
  42068b:	stc    
  42068c:	icebp  
  42068d:	repz and eax,0x816caa00
  420693:	aaa    
  420694:	iret   
  420695:	mov    edx,0xb2046f07
  42069a:	or     ecx,DWORD PTR [edi+edi*8-0x7ca75ae7]
  4206a1:	xchg   esp,eax
  4206a2:	fsubr  QWORD PTR ds:0xd16658df
  4206a8:	push   eax
  4206a9:	or     dh,BYTE PTR [edx+0x35a6cb25]
  4206af:	aaa    
  4206b0:	mov    edi,0x4d269bcb
  4206b5:	test   BYTE PTR [edx+0x8],ah
  4206b8:	xchg   ecx,eax
  4206b9:	pusha  
  4206ba:	sbb    DWORD PTR [eax],esp
  4206bc:	loopne 0x4206d6
  4206be:	mov    ds:0xf1ca5af8,eax
  4206c3:	pop    ds
  4206c4:	xchg   DWORD PTR ds:0xc20675e7,esp
  4206ca:	cmc    
  4206cb:	sbb    esi,DWORD PTR [eax+0x19834b01]
  4206d1:	mov    ebp,DWORD PTR [edi]
  4206d3:	jae    0x4206b6
  4206d5:	push   eax
  4206d6:	pop    ecx
  4206d7:	mov    eax,0x896ad755
  4206dc:	or     bh,ah
  4206de:	dec    ecx
  4206df:	pusha  
  4206e0:	jnp    0x420671
  4206e2:	in     eax,dx
  4206e3:	push   ecx
  4206e4:	cmp    eax,0x2726d320
  4206e9:	mov    eax,ds:0x8c3c387f
  4206ee:	push   eax
  4206ef:	std    
  4206f0:	cmovae ebx,DWORD PTR [ebx]
  4206f3:	xchg   edi,eax
  4206f4:	push   es
  4206f5:	inc    edi
  4206f6:	ins    DWORD PTR es:[edi],dx
  4206f7:	fcmovu st,st(1)
  4206f9:	push   ss
  4206fa:	jmp    DWORD PTR ds:0xc74b8699
  420700:	test   al,0xd5
  420702:	cs ins BYTE PTR es:[edi],dx
  420704:	sti    
  420705:	and    eax,0x2ee97fce
  42070a:	mov    bl,0xa5
  42070c:	fisubr DWORD PTR [edi+0x3a]
  42070f:	int3   
  420710:	pop    esi
  420711:	pop    es
  420712:	cmp    eax,0xc4d73aba
  420717:	xchg   esi,eax
  420718:	jnp    0x42075b
  42071a:	and    eax,0xfd12791d
  42071f:	adc    al,0xa8
  420721:	jl     0x420720
  420723:	mov    ds:0xf21f1530,al
  420728:	mov    ds:0x7104ca4e,al
  42072d:	ret    
  42072e:	rol    DWORD PTR [eax+0x69],0x1f
  420732:	dec    edx
  420733:	call   0x99e4:0xb57d7e18
  42073a:	sti    
  42073b:	sbb    esp,DWORD PTR [ebx+ebp*8+0x45]
  42073f:	inc    esp
  420740:	inc    edx
  420741:	retf   0xab7e
  420744:	loope  0x4206db
  420746:	nop
  420747:	jmp    FWORD PTR [eax+0x201a95ff]
  42074d:	fwait
  42074e:	stos   BYTE PTR es:[edi],al
  42074f:	(bad)  [esi]
  420751:	cli    
  420752:	push   eax
  420753:	cmp    ah,dh
  420755:	or     dl,BYTE PTR [esp+edi*4]
  420758:	or     esp,0x2b
  42075b:	mov    ds:0x283c7bae,eax
  420760:	or     al,0xbb
  420762:	fisttp DWORD PTR [edi]
  420764:	pop    ebx
  420765:	add    DWORD PTR [ebx],eax
  420767:	mov    esi,0x8a800a81
  42076c:	sub    BYTE PTR [eax-0x58],cl
  42076f:	jae    0x4207e9
  420771:	cmp    DWORD PTR [esi-0x30aee974],0xffffff8d
  420778:	cs mov al,0x52
  42077b:	jmp    0x5add:0xeb76c92f
  420782:	aad    0xdf
  420784:	fld    TBYTE PTR [ebx+edi*4+0x1f3b1657]
  42078b:	fmulp  st(6),st
  42078d:	xchg   edi,eax
  42078e:	adc    al,0x7b
  420790:	retf   
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a61b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a63b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a657
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a627
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a63f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a643
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a647
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a64b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a64f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a63b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a627
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a653
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a65b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a623
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a63b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a627
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a63b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a627
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a63b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a627
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a63b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a627
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a63b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a627
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a63b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a627
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a63b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a627
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a63b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a627
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a63b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a627
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a63b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a627
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a63b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a627
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a63b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a627
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a63b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a627
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a63b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a657
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a627
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a62b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a62f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a633
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	fbld   TBYTE PTR [esi-0x4e905d4a]
  421dc0:	add    BYTE PTR [ebx-0x7c7ca400],0x4a
  421dc7:	outs   dx,BYTE PTR ds:[esi]
  421dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dc9:	and    BYTE PTR [edi+0x40],0x40
  421dcd:	mov    bh,0xdd
  421dcf:	inc    esi
  421dd0:	leave  
  421dd1:	or     eax,0x265c2c56
  421dd6:	fild   QWORD PTR [eax]
  421dd8:	test   eax,0x7a094c16
  421ddd:	fs (bad) 
  421ddf:	mov    esp,0x9d49822e
  421de4:	cmp    BYTE PTR [edx+eax*8+0x1cf627b1],al
  421deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dec:	push   eax
  421ded:	mov    edi,0x36de3a02
  421df2:	leave  
  421df3:	retf   0x95
  421df6:	mov    cl,0x96
  421df8:	stc    
  421df9:	mov    bh,0x9b
  421dfb:	jle    0x421e56
  421dfd:	repz (bad) [eax+esi*2-0x1e38756f]
  421e05:	mov    esp,0xb555147e
  421e0a:	retf   
  421e0b:	ja     0x421e78
  421e0d:	out    0xac,al
  421e0f:	es or  al,0x9
  421e12:	aad    0xf4
  421e14:	push   ebx
  421e15:	mov    esi,0x399fb1df
  421e1a:	mov    ecx,0x588a4e42
  421e1f:	outs   dx,DWORD PTR ds:[esi]
  421e20:	xchg   DWORD PTR [esi],ecx
  421e22:	push   es
  421e23:	icebp  
  421e24:	fimul  DWORD PTR [ebp+0xb]
  421e27:	mov    al,0xf3
  421e29:	(bad)  
  421e2a:	mov    ah,0x8a
  421e2c:	mov    bh,0x33
  421e2e:	inc    ebx
  421e2f:	cmp    BYTE PTR [ecx+edi*4-0x296895ff],ah
  421e36:	out    0xb9,al
  421e38:	inc    esp
  421e39:	jo     0x421eac
  421e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e3c:	mov    al,ds:0x67910c8c
  421e41:	loopne 0x421eb2
  421e43:	pop    eax
  421e44:	fldenv [ecx]
  421e46:	or     eax,esp
  421e48:	mov    cl,0x53
  421e4a:	add    dl,BYTE PTR [ebx]
  421e4c:	lods   eax,DWORD PTR ds:[esi]
  421e4d:	push   0x326d3142
  421e52:	test   DWORD PTR [esi],edi
  421e54:	fst    DWORD PTR [ebx]
  421e56:	lahf   
  421e57:	pop    ecx
  421e58:	fst    st(7)
  421e5a:	in     eax,dx
  421e5b:	in     al,0x8
  421e5d:	jge    0x421e9f
  421e5f:	pop    ds
  421e60:	js     0x421ea8
  421e62:	add    dl,BYTE PTR [ebp*1+0x7fa6ae01]
  421e69:	mov    edx,0x3fcc3c84
  421e6e:	cmc    
  421e6f:	fcom   DWORD PTR fs:[ebx]
  421e72:	jno    0x421eea
  421e74:	sbb    ch,BYTE PTR [edi]
  421e76:	out    dx,eax
  421e77:	mov    esi,0x8120eba5
  421e7c:	out    0x88,al
  421e7e:	shl    DWORD PTR [ebx+eiz*4],cl
  421e81:	push   edi
  421e82:	cwde   
  421e83:	xchg   edi,eax
  421e84:	cmp    BYTE PTR [ebp-0x4d44fcb7],ch
  421e8a:	lock retf 
  421e8c:	lods   al,BYTE PTR ds:[esi]
  421e8d:	seto   BYTE PTR [ebx]
  421e90:	int    0x66
  421e92:	leave  
  421e93:	sbb    bl,ch
  421e95:	inc    ebx
  421e96:	popf   
  421e97:	cdq    
  421e98:	push   esi
  421e99:	push   ecx
  421e9a:	add    bh,bh
  421e9c:	xchg   edx,eax
  421e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e9e:	push   DWORD PTR [ebx+eax*4]
  421ea1:	or     BYTE PTR [edi-0x3c],0x74
  421ea5:	cmp    bl,BYTE PTR [ebp+0xd]
  421ea8:	mov    BYTE PTR [ebx+0x5accf27],cl
  421eae:	sub    eax,eax
  421eb0:	adc    al,0x3a
  421eb2:	sbb    ebp,eax
  421eb4:	retf   0xa52d
  421eb7:	adc    BYTE PTR [esi+0x21c4a32b],al
  421ebd:	dec    esi
  421ebe:	sub    ch,bh
  421ec0:	sbb    al,0x3e
  421ec2:	sbb    al,0x1d
  421ec4:	jb     0x421e94
  421ec6:	call   0x82ae8aa4
  421ecb:	cmp    esp,eax
  421ecd:	inc    eax
  421ece:	mov    BYTE PTR [ecx+0xcb99a03],cl
  421ed4:	xlat   BYTE PTR ds:[ebx]
  421ed5:	xor    al,0x80
  421ed7:	mov    ch,0xf7
  421ed9:	add    BYTE PTR [esi],dl
  421edb:	push   eax
  421edc:	dec    edi
  421edd:	xchg   BYTE PTR [ebx-0x5a3b5c9e],al
  421ee3:	sahf   
  421ee4:	pop    esi
  421ee5:	jmp    0x421e8b
  421ee7:	and    al,0x23
  421ee9:	mov    cs,WORD PTR [edx+0x540d9f42]
  421eef:	push   0x20
  421ef1:	(bad)  
  421ef2:	cmp    edi,ebx
  421ef4:	dec    eax
  421ef5:	fdivr  QWORD PTR [edx-0x54]
  421ef8:	mov    ebp,0xd01de455
  421efd:	inc    edx
  421efe:	fbld   TBYTE PTR [edi]
  421f00:	push   0xffffffed
  421f02:	xchg   esi,eax
  421f03:	je     0x421e88
  421f05:	and    DWORD PTR [ebp+0x15],0x19
  421f09:	arpl   WORD PTR [edx],ax
  421f0b:	in     eax,dx
  421f0c:	mov    ch,bl
  421f0e:	ins    DWORD PTR es:[edi],dx
  421f0f:	int    0xd7
  421f11:	mov    edx,0x28a3692f
  421f16:	xchg   BYTE PTR [ecx],al
  421f18:	cli    
  421f19:	nop
  421f1a:	in     eax,dx
  421f1b:	and    BYTE PTR [eax-0x2d],dh
  421f1e:	mov    al,0x60
  421f20:	std    
  421f21:	scas   al,BYTE PTR es:[edi]
  421f22:	cmp    bl,ch
  421f24:	pop    esp
  421f25:	add    al,0x4f
  421f27:	retf   0xc957
  421f2a:	fisttp QWORD PTR [esi-0x299961d7]
  421f30:	inc    esi
  421f31:	sbb    eax,0x4038898f
  421f36:	shr    cl,1
  421f38:	xor    eax,0x56a5b926
  421f3d:	mov    ah,0x25
  421f3f:	cs retf 
  421f41:	enter  0xdea5,0xf9
  421f45:	nop
  421f46:	sar    BYTE PTR [eax+0x63],cl
  421f49:	or     eax,0xb5986217
  421f4e:	fwait
  421f4f:	test   eax,0x48da47cd
  421f54:	inc    esp
  421f55:	mov    DWORD PTR [edx+0x29],edx
  421f58:	xchg   ebx,eax
  421f59:	dec    esp
  421f5a:	cmc    
  421f5b:	mov    edi,0x30806ef6
  421f60:	(bad)  
  421f61:	(bad)  
  421f62:	or     eax,0x92eeabc2
  421f67:	push   ds
  421f68:	lods   eax,DWORD PTR ds:[esi]
  421f69:	cmp    esp,DWORD PTR [edx+0x22]
  421f6c:	rcl    DWORD PTR [edi+0x63],cl
  421f6f:	inc    edx
  421f70:	mov    bl,0xf9
  421f72:	call   0xe238:0x7f5586b
  421f79:	ins    DWORD PTR es:[edi],dx
  421f7a:	(bad)  
  421f7b:	push   ebx
  421f7c:	(bad)  
  421f7d:	(bad)  
  421f7e:	js     0x421f95
  421f80:	mov    al,ds:0x86661251
  421f85:	pop    ss
  421f86:	pop    ss
  421f87:	mov    ebp,0x2abae651
  421f8c:	ss dec ebx
  421f8e:	dec    eax
  421f8f:	mov    bl,0x39
  421f91:	push   ds
  421f92:	pop    ds
  421f93:	int    0xad
  421f95:	scas   eax,DWORD PTR es:[edi]
  421f96:	mov    WORD PTR [esi+0x3b],fs
  421f99:	fsub   st(1),st
  421f9b:	mov    dh,0xa8
  421f9d:	dec    esp
  421f9e:	push   0x58f74cf3
  421fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fa4:	pop    esp
  421fa5:	adc    al,0xff
  421fa7:	pxor   mm4,QWORD PTR [edi-0x36]
  421fab:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fad:	into   
  421fae:	in     eax,dx
  421faf:	popa   
  421fb0:	call   0x714c:0xc89fa017
  421fb7:	out    dx,al
  421fb8:	xor    edx,ebx
  421fba:	mov    esi,0x5859e751
  421fbf:	cdq    
  421fc0:	inc    ebp
  421fc1:	add    esi,eax
  421fc3:	jp     0x421f6a
  421fc5:	scas   al,BYTE PTR es:[edi]
  421fc6:	mov    cl,0x20
  421fc8:	dec    ecx
  421fc9:	push   0x4dc0ca31
  421fce:	jl     0x421fd8
  421fd0:	fnsave [ecx+0x75]
  421fd3:	mov    ch,0xad
  421fd5:	inc    edi
  421fd6:	call   0xd5be2b71
  421fdb:	mov    dh,ch
  421fdd:	sub    DWORD PTR [edi+0x42],0x793fe5b7
  421fe4:	test   eax,0x5d089cc5
  421fe9:	mov    al,ds:0x86aad489
  421fee:	jo     0x421f7b
  421ff0:	inc    ecx
  421ff1:	inc    eax
  421ff2:	and    eax,0xe0dd748c
  421ff7:	out    0x1,al
  421ff9:	js     0x422053
  421ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ffc:	cmp    al,0x72
  421ffe:	popf   
  421fff:	loop   0x421f89
  422001:	repz add ebp,DWORD PTR [ebx+eax*2]
  422005:	enter  0xa5db,0x23
  422009:	rcl    BYTE PTR [edx-0x12],1
  42200c:	xor    esi,DWORD PTR [edi-0x77]
  42200f:	cli    
  422010:	push   es
  422011:	les    ebx,FWORD PTR [edx]
  422013:	call   0xdb53627b
  422018:	sbb    cl,BYTE PTR [ebp-0x14d155a8]
  42201e:	mov    al,ds:0x78cf4413
  422023:	mov    edi,0x35674a87
  422028:	fild   WORD PTR [ebx-0x53]
  42202b:	ins    DWORD PTR es:[edi],dx
  42202c:	push   ebp
  42202d:	repz hlt 
  42202f:	test   edx,ebx
  422031:	sub    DWORD PTR [edx+eax*8-0x63f4bf6a],edi
  422038:	dec    ebx
  422039:	stc    
  42203a:	pusha  
  42203b:	sub    esp,DWORD PTR [edi]
  42203d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42203e:	je     0x421feb
  422040:	pusha  
  422041:	es xor eax,0x846031ae
  422047:	xchg   esi,eax
  422048:	xchg   esi,eax
  422049:	aam    0xcd
  42204b:	shl    dh,cl
  42204d:	adc    esi,DWORD PTR [ebx+0x23458702]
  422053:	add    DWORD PTR [ebp+0x20],edi
  422056:	loopne 0x421fef
  422058:	push   edi
  422059:	push   edi
  42205a:	add    edx,ecx
  42205c:	add    esp,edi
  42205e:	or     DWORD PTR [ebp+0x49],0x9e98d936
  422065:	mov    ds:0x840774f7,al
  42206a:	jmp    0x3bb7:0x67192585
  422071:	cmp    BYTE PTR [eax-0xbd41e6e],bl
  422077:	mov    BYTE PTR [ecx],bh
  422079:	sti    
  42207a:	out    dx,al
  42207b:	mov    esi,0x70132a5d
  422080:	ret    0x285f
  422083:	scas   eax,DWORD PTR es:[edi]
  422084:	fst    QWORD PTR [ebx-0x6a2e3597]
  42208a:	hlt    
  42208b:	fcmovbe st,st(7)
  42208d:	retf   
  42208e:	push   ebp
  42208f:	jmp    0x42207f
  422091:	or     eax,0x4f8cef0
  422096:	sub    BYTE PTR [esi],0x1a
  422099:	or     eax,0x7b7f1d25
  42209e:	add    esp,edx
  4220a0:	ss pop ebx
  4220a2:	pop    eax
  4220a3:	pushf  
  4220a4:	dec    esp
  4220a5:	dec    esi
  4220a6:	push   0x47f7f9fa
  4220ab:	inc    ebp
  4220ac:	push   ecx
  4220ad:	inc    esp
  4220ae:	call   0x8cf2ad4c
  4220b3:	into   
  4220b4:	std    
  4220b5:	cmp    eax,0x156801d5
  4220ba:	jmp    0x4220d4
  4220bc:	jp     0x422127
  4220be:	jno    0x42213c
  4220c0:	test   BYTE PTR [ecx+esi*8-0x3b0becaf],dl
  4220c7:	add    al,0xae
  4220c9:	inc    eax
  4220ca:	inc    edx
  4220cb:	cld    
  4220cc:	fcomi  st,st(4)
  4220ce:	xchg   DWORD PTR [ebx],ebp
  4220d0:	mov    eax,ds:0x34f70fb9
  4220d5:	mov    ecx,0x989c1237
  4220da:	push   ss
  4220db:	in     eax,0x9c
  4220dd:	iret   
  4220de:	mov    bl,0xf1
  4220e0:	cld    
  4220e1:	xor    BYTE PTR [eax-0x1006f170],dl
  4220e7:	cmp    ecx,ebp
  4220e9:	loop   0x4220fa
  4220eb:	ja     0x422143
  4220ed:	xchg   ebp,eax
  4220ee:	sub    al,0xed
  4220f0:	aad    0xa9
  4220f2:	lea    edi,[edi+0x24]
  4220f5:	lahf   
  4220f6:	mov    ch,0x3b
  4220f8:	inc    ebx
  4220f9:	mov    bl,0xc5
  4220fb:	adc    al,0xe8
  4220fd:	imul   eax,DWORD PTR [esi+0x99a8c13],0xffffff9b
  422104:	mov    ds:0x3596e4f8,al
  422109:	jl     0x42209b
  42210b:	dec    esi
  42210c:	pop    ss
  42210d:	ret    0x28db
  422110:	jo     0x4220cb
  422112:	mov    esi,0x4a12e00f
  422117:	jae    0x4220ab
  422119:	cwde   
  42211a:	jo     0x422106
  42211c:	imul   ebp,DWORD PTR [esi],0x68
  42211f:	adc    cl,BYTE PTR [esi-0x3a]
  422122:	sub    al,0x6f
  422124:	push   0x6dea311d
  422129:	retf   0x92e8
  42212c:	xlat   BYTE PTR ds:[ebx]
  42212d:	lahf   
  42212e:	or     ebx,ebp
  422130:	inc    eax
  422131:	inc    esp
  422132:	cmp    eax,0x5790534e
  422137:	les    eax,FWORD PTR [ebx+0x61]
  42213a:	in     ax,dx
  42213c:	cli    
  42213d:	or     ah,BYTE PTR [eax+0x3e10c20b]
  422143:	lea    ebp,[ecx+0x44bacb3e]
  422149:	popf   
  42214a:	mov    ecx,ds
  42214c:	jne    0x422179
  42214e:	in     al,0xe1
  422150:	sti    
  422151:	lods   al,BYTE PTR ds:[esi]
  422152:	or     DWORD PTR [esi+edi*1+0x5c6ea8c0],eax
  422159:	lods   eax,DWORD PTR ds:[esi]
  42215a:	ror    DWORD PTR [ebx-0x51],0x1b
  42215e:	or     al,BYTE PTR [esi]
  422160:	jo     0x42210a
  422162:	iret   
  422163:	icebp  
  422164:	lds    eax,FWORD PTR [esi+0xb690506]
  42216a:	dec    edi
  42216b:	pusha  
  42216c:	iret   
  42216d:	js     0x422158
  42216f:	or     al,0x60
  422171:	mov    ebx,0xe69c5fae
  422176:	push   0xffffffe3
  422178:	fld    DWORD PTR [esi]
  42217a:	stos   BYTE PTR es:[edi],al
  42217b:	call   0x59e29613
  422180:	and    BYTE PTR [edi],cl
  422182:	push   esp
  422183:	jecxz  0x42219d
  422185:	jbe    0x422132
  422187:	in     eax,0x5d
  422189:	sub    BYTE PTR [esi+eax*8-0x67],ch
  42218d:	push   esi
  42218e:	adc    al,0xbf
  422190:	fmul   QWORD PTR [ebp+0x58f22542]
  422196:	push   ebp
  422197:	jno    0x422182
  422199:	push   cs
  42219a:	and    eax,0x381b0c08
  42219f:	mov    bh,ch
  4221a1:	retf   
  4221a2:	(bad)  
  4221a3:	(bad)  
  4221a4:	xchg   edi,eax
  4221a5:	daa    
  4221a6:	out    dx,eax
  4221a7:	dec    edi
  4221a8:	stc    
  4221a9:	push   eax
  4221aa:	fisub  WORD PTR [ecx-0x5]
  4221ad:	sahf   
  4221ae:	sub    DWORD PTR [ebp-0x53083922],esi
  4221b4:	mov    ch,0x66
  4221b6:	xor    al,0xca
  4221b8:	sti    
  4221b9:	aaa    
  4221ba:	stos   BYTE PTR es:[edi],al
  4221bb:	leave  
  4221bc:	popa   
  4221bd:	inc    ebp
  4221be:	mov    edx,0x7e403de8
  4221c3:	push   edx
  4221c4:	jecxz  0x42218b
  4221c6:	pop    ss
  4221c7:	imul   ebp,DWORD PTR [ebp+0x53],0xbd8f5a4b
  4221ce:	and    bh,BYTE PTR [edx+0x61]
  4221d1:	sbb    ebx,ebp
  4221d3:	jnp    0x422156
  4221d5:	or     edx,ebx
  4221d7:	sub    ebx,esp
  4221d9:	inc    edx
  4221da:	xor    BYTE PTR [ebx],dl
  4221dc:	pop    ds
  4221dd:	test   bh,ah
  4221df:	xchg   BYTE PTR [ebp-0x8],al
  4221e2:	pop    ecx
  4221e3:	fisubr DWORD PTR [eax-0x136142dd]
  4221e9:	jae    0x422221
  4221eb:	xchg   ebp,eax
  4221ec:	addr16 cwde 
  4221ee:	popf   
  4221ef:	sub    BYTE PTR ds:0x86c43399,dl
  4221f5:	nop
  4221f6:	push   cs
  4221f7:	push   esp
  4221f8:	push   esi
  4221f9:	jp     0x4221a7
  4221fb:	jecxz  0x4221fa
  4221fd:	iret   
  4221fe:	jo     0x422279
  422200:	fistp  DWORD PTR [eax+0x1c]
  422203:	into   
  422204:	cmp    bh,dh
  422206:	fnsave fs:[edi+0x533b5069]
  42220d:	pop    edi
  42220e:	adc    edi,DWORD PTR [esi-0x65c69fe6]
  422214:	push   ebp
  422215:	stc    
  422216:	lock xor ch,bh
  422219:	add    BYTE PTR [ecx],dl
  42221b:	or     BYTE PTR [ebp-0x72],0x12
  42221f:	jmp    0xce9d:0x18427e35
  422226:	mov    eax,ds:0xfc79b8a5
  42222b:	cmp    ebx,ebx
  42222d:	ins    DWORD PTR es:[edi],dx
  42222e:	mov    edi,0xcb3e4c88
  422233:	int    0xf9
  422235:	sbb    BYTE PTR [edi],0x3e
  422238:	dec    edi
  422239:	jb     0x422281
  42223b:	mov    esi,0x1d326c34
  422240:	dec    eax
  422241:	ret    
  422242:	lock call 0x98a0:0x3b2f13a4
  42224a:	mov    al,0x6d
  42224c:	dec    ecx
  42224d:	add    eax,0xf444490a
  422252:	sbb    al,0xe4
  422254:	nop
  422255:	cmp    eax,0xf33b492
  42225a:	test   al,0x3a
  42225c:	push   0x33
  42225e:	pop    esp
  42225f:	dec    edi
  422260:	pop    ebp
  422261:	push   0x933215c0
  422266:	add    eax,0x83b0a590
  42226b:	sub    eax,0xa23ead2
  422270:	mov    edx,0xdc65fc48
  422275:	leave  
  422276:	aad    0x4b
  422278:	mov    BYTE PTR [eax],dh
  42227a:	jae    0x4222eb
  42227c:	sub    ebp,DWORD PTR [ebx-0x24]
  42227f:	nop
  422280:	les    ebp,FWORD PTR [edi+0x796aa0c7]
  422286:	pop    ecx
  422287:	es xor dh,bl
  42228a:	inc    esi
  42228b:	push   eax
  42228c:	sub    BYTE PTR [ecx],bl
  42228e:	inc    edx
  42228f:	sub    eax,0xb9292cfc
  422295:	mov    BYTE PTR [ebx],ah
  422297:	dec    eax
  422298:	ds inc esi
  42229a:	jmp    0x4222d0
  42229c:	out    0x53,eax
  42229e:	jae    0x422227
  4222a0:	mov    WORD PTR [ebx],fs
  4222a2:	push   ds
  4222a3:	pop    edx
  4222a4:	jmp    FWORD PTR [esi]
  4222a6:	mov    eax,0x22daba7c
  4222ab:	mov    ds:0xe1fc5062,al
  4222b0:	cmp    al,0xc9
  4222b2:	gs sub eax,0xa867038d
  4222b8:	sub    esp,DWORD PTR [esi-0x10]
  4222bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222bc:	or     al,0xde
  4222be:	mov    cl,0xba
  4222c0:	popa   
  4222c1:	aam    0x6a
  4222c3:	inc    esi
  4222c4:	jae    0x422275
  4222c6:	and    al,0x99
  4222c8:	loop   0x422320
  4222ca:	sbb    dh,al
  4222cc:	ins    DWORD PTR es:[edi],dx
  4222cd:	fsubr  st,st(6)
  4222cf:	push   ss
  4222d0:	(bad)  
  4222d1:	mov    ss,edi
  4222d3:	xor    DWORD PTR [ecx+0x2d],ebx
  4222d6:	jb     0x4222d7
  4222d8:	sbb    BYTE PTR ds:0xa48ba7bc,bh
  4222de:	or     DWORD PTR ds:0xa502573b,edx
  4222e4:	test   al,0xba
  4222e6:	sub    bh,bl
  4222e8:	iret   
  4222e9:	call   0x5e86:0x1b229f09
  4222f0:	inc    ebp
  4222f1:	and    bl,BYTE PTR [ecx+0x522175a0]
  4222f7:	dec    edx
  4222f8:	dec    ebx
  4222f9:	shl    BYTE PTR [ecx-0x331da68d],0x89
  422300:	enter  0x12c0,0x7b
  422304:	push   edx
  422305:	dec    ebp
  422306:	mov    ebp,ds
  422308:	out    dx,eax
  422309:	test   al,0xd4
  42230b:	and    dh,al
  42230d:	and    eax,0xb4ac858e
  422312:	nop
  422313:	aam    0x3c
  422315:	and    eax,0x358df24a
  42231a:	inc    DWORD PTR [edi-0x1a045fce]
  422320:	fild   QWORD PTR [ebx]
  422322:	jecxz  0x4222df
  422324:	mov    BYTE PTR [edx+0x7a],ah
  422327:	ret    0xd249
  42232a:	jbe    0x42231f
  42232c:	and    al,0xb1
  42232e:	sahf   
  42232f:	mov    WORD PTR [ebp+0x510f279b],es
  422335:	jmp    0x63f6:0xf5062fb1
  42233c:	xchg   esi,eax
  42233d:	adc    BYTE PTR [esi],bl
  42233f:	inc    ebp
  422340:	push   ebx
  422341:	and    eax,esi
  422343:	popf   
  422344:	push   ss
  422345:	pop    edx
  422346:	jmp    0xa2cb:0xbfb4453d
  42234d:	shr    DWORD PTR ds:[ecx-0x71f891c8],0x1f
  422355:	jne    0x4223d6
  422357:	lods   al,BYTE PTR ds:[esi]
  422358:	daa    
  422359:	inc    ecx
  42235a:	xchg   ebp,eax
  42235b:	sbb    ebx,ebx
  42235d:	(bad)  
  42235e:	sub    eax,0x326e0e6a
  422363:	sahf   
  422364:	out    0xf9,eax
  422366:	lock repz pusha 
  422369:	mov    bl,0xca
  42236b:	fcom   QWORD PTR [ecx]
  42236d:	js     0x4222f6
  42236f:	and    eax,0x6e4274f9
  422374:	ret    0x994e
  422377:	in     al,0x9f
  422379:	xchg   ebx,eax
  42237a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42237c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42237d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42237e:	std    
  42237f:	test   al,0xed
  422381:	std    
  422382:	push   0xa381c9c1
  422387:	ins    BYTE PTR es:[edi],dx
  422388:	data16 xchg BYTE PTR [edi+ecx*8-0x6],dl
  42238d:	dec    edi
  42238e:	xor    esi,esp
  422390:	push   ecx
  422391:	shr    esi,1
  422393:	pop    edx
  422394:	and    cl,bh
  422396:	ficom  WORD PTR [edx+esi*8-0x4a40f38b]
  42239d:	push   cs
  42239e:	scas   al,BYTE PTR es:[edi]
  42239f:	push   ebp
  4223a0:	mov    al,ds:0x9567af50
  4223a5:	cs ins BYTE PTR es:[edi],dx
  4223a7:	data16 mov dl,0xbb
  4223aa:	jmp    0x1d9f:0x9260613a
  4223b1:	mov    cl,0x37
  4223b3:	addr16 sub al,0xcd
  4223b6:	(bad)  
  4223b7:	jmp    0x4223d5
  4223b9:	push   ebp
  4223ba:	jb     0x422341
  4223bc:	ficomp DWORD PTR [ebp-0x51833441]
  4223c2:	call   0xcd2edca0
  4223c7:	jmp    0x590cf24a
  4223cc:	(bad)  
  4223ce:	ja     0x422381
  4223d0:	push   esi
  4223d1:	jmp    0x4223a1
  4223d3:	pop    ecx
  4223d4:	repz test esi,0x622ee5e4
  4223db:	push   0x6ea10091
  4223e0:	jae    0x4223ce
  4223e2:	mov    BYTE PTR [ebx],bl
  4223e4:	fsub   DWORD PTR [edi+0x36]
  4223e7:	mov    ds:0x2d9071a4,al
  4223ec:	fadd   QWORD PTR [edi-0x2]
  4223ef:	cmp    ebx,0x4b
  4223f2:	sub    esp,DWORD PTR [eax-0x28]
  4223f5:	or     eax,0x8f1db05a
  4223fa:	pop    ecx
  4223fb:	ret    
  4223fc:	fisub  WORD PTR [ebp-0x69]
  4223ff:	inc    ebx
  422400:	cmp    eax,esi
  422402:	gs sub eax,0xf6321742
  422408:	lods   eax,DWORD PTR ds:[esi]
  422409:	fdiv   QWORD PTR [edx+ecx*2-0x7ab2d585]
  422410:	fdivp  st(6),st
  422412:	add    edx,ecx
  422414:	add    eax,0x499dce11
  422419:	imul   eax,DWORD PTR [ecx],0x3b
  42241c:	or     DWORD PTR [eax+0x33],0x0
  422420:	push   edi
  422421:	sub    BYTE PTR [edi],dh
  422423:	sub    eax,0xdff061f8
  422428:	hlt    
  422429:	out    0xce,al
  42242b:	test   BYTE PTR [edi-0x2],ch
  42242e:	int    0x3a
  422430:	lock daa 
  422432:	rol    bh,1
  422434:	push   ecx
  422435:	xor    esi,DWORD PTR [edi+0x78f6bfdf]
  42243b:	and    eax,0xe82dc598
  422440:	int3   
  422441:	sbb    eax,0x8aadef45
  422446:	leave  
  422447:	mov    dl,0x10
  422449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42244a:	(bad)
  42244d:	add    ecx,esp
  42244f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422450:	jmp    0xde0ac9e4
  422455:	std    
  422456:	test   eax,0x6e1d56aa
  42245b:	push   ebx
  42245c:	push   ds
  42245d:	cli    
  42245e:	call   0x821c:0x30c9ff0e
  422465:	popa   
  422466:	in     eax,0xa0
  422468:	aas    
  422469:	adc    al,0x7
  42246b:	add    dl,bl
  42246d:	cmp    eax,0x3cde03ee
  422472:	fdiv   DWORD PTR [ecx+0x5b]
  422475:	dec    edi
  422476:	adc    eax,0x6cb6786b
  42247b:	ds in  al,dx
  42247d:	imul   edi,DWORD PTR [esi],0x43
  422480:	scas   eax,DWORD PTR es:[edi]
  422481:	jg     0x42241a
  422483:	leave  
  422484:	sbb    ch,BYTE PTR [edi+0x48]
  422487:	jl     0x4224f3
  422489:	jnp    0x42249e
  42248b:	or     ecx,DWORD PTR [ebp+esi*2+0x5e]
  42248f:	jg     0x42248c
  422491:	jecxz  0x422509
  422493:	sti    
  422494:	clc    
  422495:	lods   eax,DWORD PTR ds:[esi]
  422496:	shr    BYTE PTR [edi-0x25a0fc4b],cl
  42249c:	fist   WORD PTR [ebp+0x610d7772]
  4224a2:	shl    DWORD PTR [eax-0x4aa35305],0x64
  4224a9:	(bad)  
  4224aa:	outs   dx,BYTE PTR ds:[esi]
  4224ab:	(bad)  [esi+0x258defcb]
  4224b1:	fwait
  4224b2:	es push esi
  4224b4:	mov    ds:0xc9049d91,eax
  4224b9:	fisttp DWORD PTR [edx-0x2c]
  4224bc:	mov    esp,0x7343ea10
  4224c1:	paddq  mm7,QWORD PTR [eax-0x56]
  4224c5:	add    edx,esp
  4224c7:	into   
  4224c8:	mov    edi,0x2c97c682
  4224cd:	xor    DWORD PTR [edi+0x77],edi
  4224d0:	dec    eax
  4224d1:	shl    DWORD PTR [ebx+0x45b0bd84],cl
  4224d7:	sbb    al,0xc4
  4224d9:	push   ds
  4224da:	in     al,0xcc
  4224dc:	aad    0x83
  4224de:	sub    edx,DWORD PTR [ebx+esi*1+0x4a]
  4224e2:	add    BYTE PTR [edi+0x2a21d1aa],0xc
  4224e9:	xchg   esi,eax
  4224ea:	jbe    0x4224e8
  4224ec:	mov    bh,0x58
  4224ee:	adc    eax,DWORD PTR [esi]
  4224f0:	aam    0xc8
  4224f2:	stc    
  4224f3:	icebp  
  4224f4:	and    BYTE PTR [esi+eax*1+0x365ce096],dh
  4224fb:	ins    BYTE PTR es:[edi],dx
  4224fc:	push   ecx
  4224fd:	mov    edx,0x1faa59a7
  422502:	ja     0x4224b1
  422504:	mov    edi,0xe2111894
  422509:	loopne 0x42257e
  42250b:	(bad)  
  42250c:	add    al,0x90
  42250e:	test   ecx,esp
  422510:	mov    ch,dl
  422512:	scas   eax,DWORD PTR es:[edi]
  422513:	loopne 0x42255c
  422515:	icebp  
  422516:	jmp    0x423a:0xf0810eab
  42251d:	xchg   edx,eax
  42251e:	dec    esp
  42251f:	in     al,dx
  422520:	mov    edx,0x534814ee
  422525:	jecxz  0x4224dc
  422527:	scas   al,BYTE PTR es:[edi]
  422528:	inc    esi
  422529:	mov    eax,0x103d284c
  42252e:	ins    BYTE PTR es:[edi],dx
  42252f:	cmp    eax,0xbd2eddfe
  422534:	aad    0x61
  422536:	jle    0x422519
  422538:	sbb    DWORD PTR [ebx+0x39],0xd7a9028b
  42253f:	retf   
  422540:	ror    BYTE PTR [ebx-0x5e],0x3e
  422544:	ds pop ebp
  422546:	repnz sbb BYTE PTR [edi],al
  422549:	lods   al,BYTE PTR ds:[esi]
  42254a:	fsubp  st(7),st
  42254c:	mov    edi,DWORD PTR [esi-0x255e4e78]
  422552:	mov    ds:0x30e63978,eax
  422557:	pop    ecx
  422558:	popa   
  422559:	jl     0x4225cf
  42255b:	scas   eax,DWORD PTR es:[edi]
  42255c:	inc    eax
  42255d:	icebp  
  42255e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42255f:	cmp    BYTE PTR ds:0x63e8705a,0x5b
  422566:	jg     0x4225aa
  422568:	xor    eax,0xb4a0680a
  42256d:	int    0xbd
  42256f:	icebp  
  422570:	dec    edx
  422571:	inc    edi
  422572:	imul   ecx,DWORD PTR [ebx],0x50e39274
  422578:	pop    edi
  422579:	stos   BYTE PTR es:[edi],al
  42257a:	cmp    eax,0x24e03ecf
  42257f:	jle    0x4225a1
  422581:	test   eax,0x201b2099
  422586:	push   eax
  422587:	cwde   
  422588:	or     BYTE PTR [eax+ebp*8],bl
  42258b:	fs dec ecx
  42258d:	ins    BYTE PTR es:[edi],dx
  42258e:	lods   al,BYTE PTR cs:[esi]
  422590:	popf   
  422591:	and    DWORD PTR [ecx-0x386d3c24],0x45
  422598:	xchg   ebx,eax
  422599:	adc    al,0x3
  42259b:	inc    ebx
  42259c:	in     eax,dx
  42259d:	mov    edi,0x797048ea
  4225a2:	adc    edi,DWORD PTR [edx-0x761b5d6e]
  4225a8:	mov    ch,0xaf
  4225aa:	dec    esi
  4225ab:	sub    bl,al
  4225ad:	push   ecx
  4225ae:	js     0x4225ae
  4225b0:	ins    DWORD PTR es:[edi],dx
  4225b1:	mov    al,0x62
  4225b3:	scas   al,BYTE PTR es:[edi]
  4225b4:	mov    ah,0x7a
  4225b6:	inc    eax
  4225b7:	daa    
  4225b8:	pop    eax
  4225b9:	adc    eax,0x4e7cb27c
  4225be:	cmp    eax,0x19bbefb5
  4225c3:	shr    DWORD PTR [esi-0x1836dd1a],cl
  4225c9:	(bad)  [esi-0x77]
  4225cc:	test   eax,0x69b28915
  4225d1:	jl     0x422603
  4225d3:	adc    al,ch
  4225d5:	sub    al,0x73
  4225d7:	cmp    al,0x30
  4225d9:	jmp    0xef23:0xe7459e60
  4225e0:	mov    ebp,0x5c223bc7
  4225e5:	adc    DWORD PTR [ecx+0x3d2c006c],0xd074fdd0
  4225ef:	xchg   esp,eax
  4225f0:	lods   eax,DWORD PTR ds:[esi]
  4225f1:	pop    ds
  4225f2:	push   ebx
  4225f3:	inc    edx
  4225f4:	call   0xbf1b253e
  4225f9:	fimul  WORD PTR [eax+0x50]
  4225fc:	xchg   edi,eax
  4225fd:	out    0x92,al
  4225ff:	test   BYTE PTR [edx+0x37b05aab],dh
  422605:	out    0xe1,eax
  422607:	ins    BYTE PTR es:[edi],dx
  422608:	sbb    ecx,DWORD PTR [ebx]
  42260a:	mov    esi,0xff7762d7
  42260f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422610:	test   BYTE PTR ds:0x26ef4320,0x12
  422617:	(bad)
  42261b:	(bad)
  42261e:	aad    0x6f
  422620:	popa   
  422621:	fs stos DWORD PTR es:[edi],eax
  422623:	inc    edi
  422624:	clc    
  422625:	loopne 0x4225ac
  422627:	sbb    BYTE PTR [edx],dh
  422629:	cmp    cl,dl
  42262b:	push   ebp
  42262c:	int3   
  42262d:	pop    eax
  42262e:	not    DWORD PTR [eax]
  422630:	lea    ebx,[ebx+0x22df7840]
  422636:	mov    ds:0x14db3be9,eax
  42263b:	out    0xfd,al
  42263d:	mov    ecx,0x256a6b74
  422642:	cmp    ebx,DWORD PTR [eax-0x1e54d6bf]
  422648:	stc    
  422649:	pushf  
  42264a:	add    ecx,DWORD PTR [ebx-0x21]
  42264d:	xor    esi,DWORD PTR [ebx+0x1c83b4d7]
  422653:	(bad)  
  422654:	imul   ebp,DWORD PTR [edx],0xf629f7e1
  42265a:	aad    0x5d
  42265c:	dec    ebp
  42265d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265e:	mov    al,0xe1
  422660:	xor    al,0x13
  422662:	dec    esp
  422663:	cli    
  422664:	retf   
  422665:	scas   al,BYTE PTR es:[edi]
  422666:	rcr    BYTE PTR [edi-0x100d224c],0x22
  42266d:	icebp  
  42266e:	aaa    
  42266f:	mov    WORD PTR [ecx+0x363c4021],?
  422675:	pushf  
  422676:	hlt    
  422677:	ins    DWORD PTR es:[edi],dx
  422678:	xor    al,0x7a
  42267a:	jecxz  0x4226f4
  42267c:	or     DWORD PTR [ecx-0xf11a0e],ebp
  422682:	mov    ebp,0xf503fdbd
  422687:	bnd ret 0xcf52
  42268b:	fbstp  TBYTE PTR [eax+ebp*4]
  42268e:	mov    dh,BYTE PTR [edi+esi*8+0x661049e7]
  422695:	imul   eax,DWORD PTR [ebx],0x74
  422698:	imul   esi,DWORD PTR [eax-0x2e],0xffffffdd
  42269c:	int    0xd6
  42269e:	jne    0x4226c1
  4226a0:	pop    eax
  4226a1:	ror    bh,1
  4226a3:	xor    BYTE PTR [edx+0x4e],0x1f
  4226a7:	push   ss
  4226a8:	sbb    DWORD PTR gs:[esi-0x7d],ecx
  4226ac:	mov    edx,0x79daee2e
  4226b1:	stc    
  4226b2:	fimul  DWORD PTR [edx]
  4226b4:	or     esp,DWORD PTR [esi+0x681d9ba3]
  4226ba:	call   0xae8b617d
  4226bf:	jno    0x42272b
  4226c1:	mov    DWORD PTR cs:[ebx],edi
  4226c4:	mov    ch,0xf
  4226c6:	aaa    
  4226c7:	mov    bh,0x3d
  4226c9:	cmp    eax,ecx
  4226cb:	fnstsw WORD PTR [edi-0x49e98bf]
  4226d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226d2:	call   FWORD PTR cs:[esi]
  4226d5:	adc    edx,DWORD PTR cs:0xa57a0772
  4226dc:	lds    esp,FWORD PTR [edi]
  4226de:	(bad)  [ecx-0x2da97cc8]
  4226e4:	xchg   ecx,eax
  4226e5:	and    al,bh
  4226e7:	(bad)  
  4226e8:	xchg   edx,eax
  4226e9:	mov    edx,0x495b4edf
  4226ee:	test   DWORD PTR [ecx],edi
  4226f0:	mov    ds:0xf7db0a42,eax
  4226f5:	sub    dh,BYTE PTR [eax]
  4226f7:	adc    eax,0x1e290ab
  4226fc:	push   ds
  4226fd:	push   cs
  4226fe:	sbb    al,0xae
  422700:	add    edi,eax
  422702:	jne    0x4226eb
  422704:	push   0x53
  422706:	pop    ebp
  422707:	inc    ecx
  422708:	mov    WORD PTR [eax+0x3907e714],?
  42270e:	js     0x422730
  422710:	mov    ebx,0xfe721da3
  422715:	stos   BYTE PTR es:[edi],al
  422716:	jecxz  0x42271a
  422718:	out    dx,al
  422719:	jmp    0x842e53e5
  42271e:	pop    ebp
  42271f:	lods   eax,DWORD PTR ds:[esi]
  422720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422721:	aad    0x2f
  422723:	push   0x30
  422725:	and    ecx,edx
  422727:	test   DWORD PTR [esi-0x50],esp
  42272a:	stos   BYTE PTR es:[edi],al
  42272b:	inc    ebp
  42272c:	not    BYTE PTR [edx]
  42272e:	popa   
  42272f:	and    ecx,DWORD PTR [edx]
  422731:	dec    edi
  422732:	push   ecx
  422733:	xchg   esi,eax
  422734:	mov    al,ds:0x9ae9fb21
  422739:	pminub mm5,QWORD PTR [edx+0x50]
  42273d:	pop    es
  42273e:	es call 0x7c1e:0x763bbbca
  422746:	iret   
  422747:	dec    eax
  422748:	repnz xor DWORD PTR [edi],0x20
  42274c:	jno    0x4226ef
  42274e:	sbb    al,0x4f
  422750:	pop    es
  422751:	js     0x42271a
  422753:	xlat   BYTE PTR ds:[ebx]
  422754:	dec    ecx
  422755:	mov    ebx,0x41730c4f
  42275a:	push   0x2b
  42275c:	pop    esp
  42275d:	jbe    0x4227b7
  42275f:	jo     0x42271c
  422761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422762:	mov    edx,0x5d29dfa3
  422767:	aaa    
  422768:	stos   DWORD PTR es:[edi],eax
  422769:	mov    edx,0x6301896c
  42276e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276f:	mov    edi,0xc4341931
  422774:	cld    
  422775:	popf   
  422776:	pop    esp
  422777:	cmp    ch,BYTE PTR [ecx]
  422779:	into   
  42277a:	das    
  42277b:	lods   eax,DWORD PTR ds:[esi]
  42277c:	jne    0x422754
  42277e:	loop   0x4227f1
  422780:	pop    esp
  422781:	mov    edx,DWORD PTR [esi-0x200fd193]
  422787:	stos   DWORD PTR es:[edi],eax
  422788:	jae    0x422805
  42278a:	aaa    
  42278b:	fcmovne st,st(2)
  42278d:	pushf  
  42278e:	jns    0x42273a
  422790:	jg     0x4227fc
  422792:	fisttp DWORD PTR [ebp+0x531c39fa]
  422798:	mov    ecx,0x90e962d9
  42279d:	xchg   BYTE PTR [esi-0x1e],dl
  4227a0:	sub    al,0x26
  4227a2:	adc    DWORD PTR [edx+0x44],ecx
  4227a5:	mov    BYTE PTR [ecx-0x6a],cl
  4227a8:	enter  0x1c8a,0x7f
  4227ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227ad:	rcr    DWORD PTR [ecx+0x3ab2372b],0x94
  4227b4:	(bad)  
  4227b5:	mov    ebx,0xf6ba870a
  4227ba:	mov    bl,0xd2
  4227bc:	cmp    ebp,DWORD PTR [edi]
  4227be:	repnz call 0x9e03:0xcd3c0982
  4227c6:	mov    ecx,0x798edffc
  4227cb:	sub    ch,bh
  4227cd:	out    0xbc,eax
  4227cf:	pushf  
  4227d0:	jns    0x422851
  4227d2:	rcl    DWORD PTR [ebx],0x69
  4227d5:	rep outs dx,BYTE PTR ds:[esi]
  4227d7:	shr    DWORD PTR [ecx+edx*4],cl
  4227da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227db:	or     al,0xad
  4227dd:	mov    ah,0x63
  4227df:	xor    al,BYTE PTR [eax-0x1ed0dced]
  4227e5:	dec    ebp
  4227e6:	lods   eax,DWORD PTR ds:[esi]
  4227e7:	mov    ds:0x66b0d150,eax
  4227ec:	or     eax,0x2e2680da
  4227f1:	jno    0x4227e1
  4227f3:	cmovae esp,DWORD PTR [ebp+0x78fde820]
  4227fa:	outs   dx,DWORD PTR ds:[esi]
  4227fb:	xchg   edi,eax
  4227fc:	loop   0x42283a
  4227fe:	pop    ebp
  4227ff:	jmp    0x4227f5
  422801:	jl     0x422856
  422803:	pop    edi
  422804:	fwait
  422805:	out    0x4c,al
  422807:	adc    BYTE PTR ds:[ebx+ecx*2],0x74
  42280c:	mov    ecx,0x224256b4
  422811:	popa   
  422812:	mov    dh,0x95
  422814:	or     dl,dl
  422816:	icebp  
  422817:	mov    cl,0x82
  422819:	cmp    al,0x7
  42281b:	stos   BYTE PTR es:[edi],al
  42281c:	movhlps xmm1,xmm1
  42281f:	xchg   BYTE PTR [edx+edx*4+0x333b68b9],al
  422826:	mov    esi,0x72ab766d
  42282b:	xchg   edi,eax
  42282c:	leave  
  42282d:	jl     0x4227bb
  42282f:	push   cs
  422830:	or     BYTE PTR [edi-0x54],ch
  422833:	in     eax,0xe8
  422835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422836:	sbb    BYTE PTR [edi],0x68
  422839:	and    BYTE PTR [eax],dl
  42283b:	dec    eax
  42283c:	(bad)  
  42283d:	cmp    DWORD PTR [edi-0x51],0xfffffff9
  422841:	adc    dh,BYTE PTR [esi]
  422843:	es out 0xee,al
  422846:	fucomp st(1)
  422848:	ins    BYTE PTR es:[edi],dx
  422849:	call   0xd1b65efd
  42284e:	add    bl,0x3e
  422851:	sahf   
  422852:	loopne 0x422873
  422854:	pop    ecx
  422855:	sbb    BYTE PTR [esi],dl
  422857:	test   al,0x28
  422859:	add    al,0xfd
  42285b:	sbb    al,0x99
  42285d:	push   ds
  42285e:	sub    BYTE PTR [eax+0x1a],al
  422861:	inc    edi
  422862:	adc    DWORD PTR [ebx+0x68],esi
  422865:	dec    eax
  422866:	jmp    0x9ff7:0xe4320c4c
  42286d:	into   
  42286e:	inc    edi
  42286f:	fbld   TBYTE PTR [ebp-0x4d]
  422872:	call   0x3aba8547
  422877:	push   0x15fb75eb
  42287c:	jns    0x422867
  42287e:	shl    BYTE PTR [ebx],cl
  422880:	test   eax,0xcb691f26
  422885:	scas   eax,DWORD PTR es:[edi]
  422886:	out    0xe0,al
  422888:	(bad)  
  422889:	add    cl,BYTE PTR [esi+0x2b7f3be3]
  42288f:	dec    esi
  422890:	sbb    eax,0xc1258b41
  422895:	in     al,0x8d
  422897:	pop    esi
  422898:	jb     0x42286d
  42289a:	mov    edi,0x98c9ab0e
  42289f:	scas   al,BYTE PTR es:[edi]
  4228a0:	(bad)  
  4228a1:	xor    ebx,edi
  4228a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a5:	mov    al,ds:0xa418c1c2
  4228aa:	xchg   DWORD PTR [edi-0x6e],ecx
  4228ad:	ror    BYTE PTR [ecx],cl
  4228af:	xchg   ebx,eax
  4228b0:	into   
  4228b1:	rcl    DWORD PTR [ebx+0x7a35c20f],0xa
  4228b8:	bound  esp,QWORD PTR [edi-0x70c00963]
  4228be:	jecxz  0x4228ea
  4228c0:	mov    esp,0x71fa8ac8
  4228c5:	pop    ebp
  4228c6:	sbb    eax,0x98175022
  4228cb:	push   cs
  4228cc:	mov    dl,0x8f
  4228ce:	mov    WORD PTR ds:0xd36ae772,cs
  4228d4:	nop
  4228d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228d6:	popa   
  4228d7:	dec    esp
  4228d8:	pop    es
  4228d9:	cmp    al,0xae
  4228db:	in     eax,0x21
  4228dd:	jmp    0x422886
  4228df:	js     0x422883
  4228e1:	test   eax,0x44461459
  4228e6:	pop    esp
  4228e7:	test   eax,0xf890b1d2
  4228ec:	jae    0x422937
  4228ee:	sub    esp,DWORD PTR [edx-0x67]
  4228f1:	imul   edx,eax,0xa376f2fa
  4228f7:	push   cs
  4228f8:	pop    ds
  4228f9:	mov    WORD PTR [ebx-0x652f5c51],es
  4228ff:	fiadd  WORD PTR [edx+0x2d9bec43]
  422905:	or     al,cl
  422907:	xchg   esi,eax
  422908:	pop    ebp
  422909:	xor    DWORD PTR [ebp-0x6f],edx
  42290c:	or     al,0x2b
  42290e:	sub    ebx,DWORD PTR [edi]
  422910:	jl     0x422894
  422912:	in     eax,dx
  422913:	lds    ebx,FWORD PTR [eax+0x75224e00]
  422919:	(bad)  
  42291a:	pop    ecx
  42291b:	and    eax,DWORD PTR [ebx+0x6d]
  42291e:	outs   dx,DWORD PTR ds:[esi]
  42291f:	jnp    0x42292e
  422921:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  422923:	jecxz  0x4228f3
  422925:	test   eax,0xeaf959ca
  42292a:	push   esi
  42292b:	xor    ebx,DWORD PTR [eax]
  42292d:	ss xchg DWORD PTR ds:[edi+edi*4+0x4ed51c4c],edi
  422936:	in     al,dx
  422937:	sub    al,0xe2
  422939:	push   es
  42293a:	pop    esp
  42293b:	push   esp
  42293c:	cmp    bl,BYTE PTR [esi]
  42293e:	sbb    eax,0x89f0b816
  422943:	aam    0x4b
  422945:	je     0x42290d
  422947:	mov    bh,0x66
  422949:	mov    cl,0x7f
  42294b:	pop    esi
  42294c:	sbb    edx,DWORD PTR [ebp+ebp*1-0x3cd9e4b3]
  422953:	mov    eax,ds:0x97d4cdba
  422958:	out    0xdf,al
  42295a:	es loope 0x422987
  42295d:	shl    DWORD PTR [edx+0x7e],cl
  422960:	aam    0x11
  422962:	push   0xffffff94
  422964:	lea    esi,[eax-0x4b]
  422967:	nop
  422968:	add    eax,0x287c5bf2
  42296d:	stos   DWORD PTR es:[edi],eax
  42296e:	std    
  42296f:	fdivr  QWORD PTR [ebx+ebx*8-0x4930c6d0]
  422976:	mov    ebp,0xccecea00
  42297b:	cdq    
  42297c:	jecxz  0x42293b
  42297e:	add    al,0x7f
  422980:	dec    ecx
  422981:	hlt    
  422982:	sub    DWORD PTR [esi-0x49],ebx
  422985:	adc    eax,0x3cecef5b
  42298a:	lds    eax,FWORD PTR [ecx+0x9054f06]
  422990:	jne    0x4229b1
  422992:	sub    eax,0x77e40972
  422997:	fidiv  WORD PTR [esi+0x4461fc54]
  42299d:	ja     0x422970
  42299f:	push   ebx
  4229a0:	jmp    0x422991
  4229a2:	push   ebp
  4229a3:	sbb    DWORD PTR [ebp-0x27],ecx
  4229a6:	or     DWORD PTR [edi],esi
  4229a8:	pop    ecx
  4229a9:	xchg   DWORD PTR ds:[ebx],edx
  4229ac:	ins    BYTE PTR es:[edi],dx
  4229ad:	enter  0x51cf,0xf6
  4229b1:	adc    eax,0xdcb8b637
  4229b6:	adc    ah,ah
  4229b8:	xchg   ebx,eax
  4229b9:	jnp    0x42297e
  4229bb:	sub    dh,BYTE PTR [eax-0x40]
  4229be:	ins    BYTE PTR es:[edi],dx
  4229bf:	and    ebp,0x2d933e89
  4229c5:	inc    ecx
  4229c6:	and    esi,DWORD PTR [ecx+0xcc90a5a]
  4229cc:	repnz aad 0x3
  4229cf:	retf   0x38f3
  4229d2:	push   0x23
  4229d4:	hlt    
  4229d5:	adc    DWORD PTR [ebx+0x43f8384c],edi
  4229db:	imul   ebx,DWORD PTR [ecx],0xfffffff8
  4229de:	inc    edx
  4229df:	xchg   ebx,eax
  4229e0:	cmp    DWORD PTR [edi],ebx
  4229e2:	xchg   edx,eax
  4229e3:	test   al,0x3d
  4229e5:	jmp    0x4998:0x857a0081
  4229ec:	xchg   edx,eax
  4229ed:	sbb    BYTE PTR [edx],bh
  4229ef:	mov    BYTE PTR [eax-0x18],cl
  4229f2:	xor    BYTE PTR [ebx],dh
  4229f4:	pop    ss
  4229f5:	into   
  4229f6:	fistp  DWORD PTR [esi+0x6c450b7c]
  4229fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229fd:	pop    es
  4229fe:	inc    ebx
  4229ff:	fs jns 0x422a13
  422a02:	mov    ebx,0xd5d7813d
  422a07:	cmp    al,0x70
  422a09:	xchg   edi,eax
  422a0a:	adc    eax,0x38401cc5
  422a0f:	adc    DWORD PTR [esp+eiz*8],ebx
  422a12:	mov    al,ds:0x703a375e
  422a17:	fdiv   QWORD PTR [ebx+0x2c9286cc]
  422a1d:	imul   edi,DWORD PTR [esi-0x17],0xffffffe9
  422a21:	fwait
  422a22:	and    edx,ebp
  422a24:	ja     0x422a2d
  422a26:	and    eax,0xabed1a61
  422a2b:	add    eax,0xec2e7578
  422a30:	repz dec eax
  422a32:	(bad)  
  422a33:	pop    edx
  422a34:	mov    edi,DWORD PTR [edx-0x1e]
  422a37:	jo     0x422a4d
  422a39:	mov    al,0xdc
  422a3b:	inc    esp
  422a3c:	fwait
  422a3d:	sbb    eax,0xbc69a817
  422a42:	xchg   ebx,eax
  422a43:	or     cl,dh
  422a45:	test   eax,0x51ab03e1
  422a4a:	aaa    
  422a4b:	int    0x4a
  422a4d:	xor    bl,BYTE PTR [ecx]
  422a4f:	mov    ch,0x90
  422a51:	fisub  DWORD PTR [ecx+0x4a]
  422a54:	stos   DWORD PTR es:[edi],eax
  422a55:	xchg   DWORD PTR [edi-0x286944b1],edi
  422a5b:	xchg   edx,eax
  422a5c:	cwde   
  422a5d:	dec    ebp
  422a5e:	jmp    0xe135:0x40519b01
  422a65:	das    
  422a66:	fnstcw WORD PTR [ebp+ecx*4+0x6e]
  422a6a:	mov    esi,0x909f717c
  422a6f:	out    dx,al
  422a70:	xchg   esp,eax
  422a71:	push   esp
  422a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a73:	les    esi,FWORD PTR [ebx-0x666b3852]
  422a79:	dec    ebp
  422a7a:	jbe    0x422ae1
  422a7c:	sti    
  422a7d:	add    BYTE PTR [eiz*2-0x306942fe],0xee
  422a85:	int3   
  422a86:	ror    BYTE PTR [edi],cl
  422a88:	mov    ebp,0x9ef35b3e
  422a8d:	mov    ah,0xea
  422a8f:	mov    eax,0x265cf74a
  422a94:	iret   
  422a95:	stc    
  422a96:	sbb    bl,BYTE PTR [ebx-0xfd29a9e]
  422a9c:	inc    ecx
  422a9d:	sub    esi,DWORD PTR [edi]
  422a9f:	pop    DWORD PTR [ebx-0x553f7db7]
  422aa5:	mov    BYTE PTR [eax],al
  422aa7:	jns    0x422b1f
  422aa9:	sub    DWORD PTR [ecx],ebx
  422aab:	xlat   BYTE PTR cs:[ebx]
  422aad:	sahf   
  422aae:	mov    cl,0x77
  422ab0:	cmp    al,BYTE PTR [ebx+0x50a93beb]
  422ab6:	mov    ah,BYTE PTR [eax+ecx*1+0xfbffcf8]
  422abd:	aad    0xca
  422abf:	mov    al,0x34
  422ac1:	loope  0x422a61
  422ac3:	ins    BYTE PTR es:[edi],dx
  422ac4:	inc    ebp
  422ac5:	adc    cl,BYTE PTR [ecx-0x17e4981d]
  422acb:	das    
  422acc:	push   0xcbae89a1
  422ad1:	adc    eax,0x357015ba
  422ad6:	sbb    dh,BYTE PTR [ecx]
  422ad8:	std    
  422ad9:	gs clc 
  422adb:	fld    TBYTE PTR [ebp+0x3d]
  422ade:	and    BYTE PTR [ecx+0x5ad19ae1],dl
  422ae4:	out    dx,al
  422ae5:	dec    edx
  422ae6:	scas   eax,DWORD PTR es:[edi]
  422ae7:	dec    esp
  422ae8:	add    eax,0x2493e71c
  422aed:	retf   0x59b0
  422af0:	daa    
  422af1:	in     eax,0xa2
  422af3:	lds    eax,FWORD PTR [edi+0x77906514]
  422af9:	add    eax,0x67ad5c52
  422afe:	ja     0x422aab
  422b00:	icebp  
  422b01:	out    dx,al
  422b02:	mov    eax,ds:0x44d4f16b
  422b07:	xchg   esi,eax
  422b08:	cld    
  422b09:	hlt    
  422b0a:	cmp    DWORD PTR [edx],0xff06810a
  422b10:	and    al,0xba
  422b12:	mov    edx,0x8086865a
  422b17:	test   eax,0xe219959f
  422b1c:	cs mov dl,0x2e
  422b1f:	arpl   WORD PTR [edi],bp
  422b21:	stc    
  422b22:	jb     0x422af4
  422b24:	mov    ds:0x3adaa5d2,al
  422b29:	xor    al,0x53
  422b2b:	pushf  
  422b2c:	cmp    eax,0x5a9ffd34
  422b31:	dec    ebp
  422b32:	pop    ecx
  422b33:	fistp  WORD PTR [ecx]
  422b35:	cld    
  422b36:	in     eax,dx
  422b37:	dec    ecx
  422b38:	stos   BYTE PTR es:[edi],al
  422b39:	push   0xffffffa2
  422b3b:	das    
  422b3c:	mov    ebx,0x92dd4de8
  422b41:	jne    0x422afd
  422b43:	pop    edx
  422b44:	cmp    eax,0xecbd2584
  422b49:	inc    edx
  422b4a:	jecxz  0x422bc6
  422b4c:	(bad)  
  422b4d:	mov    ch,0xb
  422b4f:	pop    ss
  422b50:	sub    bl,BYTE PTR [edx]
  422b52:	xchg   esp,eax
  422b53:	pop    edx
  422b54:	mov    ecx,0xe6db0a4f
  422b59:	imul   ebx,DWORD PTR [eax+0x3a825414],0xbff144ac
  422b63:	sti    
  422b64:	arpl   si,di
  422b66:	mov    bl,0xf1
  422b68:	adc    DWORD PTR [esp+esi*8-0x5e9f3a1],ebx
  422b6f:	xor    al,0x44
  422b71:	sbb    ebp,eax
  422b73:	fisttp DWORD PTR [edx]
  422b75:	xchg   ebx,eax
  422b76:	idiv   BYTE PTR [edx]
  422b78:	add    ebp,DWORD PTR [eax-0x196582d]
  422b7e:	aam    0x6b
  422b80:	jns    0x422b6b
  422b82:	mov    ecx,0x54e49dcd
  422b87:	stc    
  422b88:	inc    esp
  422b89:	pop    eax
  422b8a:	jne    0x422bcf
  422b8c:	not    BYTE PTR [eax-0x5e941cf2]
  422b92:	data16 mov dl,0x8c
  422b95:	fistp  DWORD PTR [edx-0x6c]
  422b98:	xchg   ebp,eax
  422b99:	scas   eax,DWORD PTR es:[edi]
  422b9a:	stc    
  422b9b:	pop    edi
  422b9c:	push   ds
  422b9d:	xor    bh,BYTE PTR [eax+0x409736ef]
  422ba3:	sub    esp,DWORD PTR [ebp+0x4a2179a1]
  422ba9:	daa    
  422baa:	jl     0x422bdd
  422bac:	mul    bh
  422bae:	adc    BYTE PTR [eax+0x296fe4d4],al
  422bb4:	retf   0xb37b
  422bb7:	and    al,0x2e
  422bb9:	and    ch,BYTE PTR [ecx-0xe0a3d9a]
  422bbf:	mov    ecx,0xcd8261fa
  422bc4:	scas   eax,DWORD PTR es:[edi]
  422bc5:	into   
  422bc6:	mov    cl,BYTE PTR [edi+0x6f]
  422bc9:	(bad)  [esi+0x21]
  422bcc:	xchg   esp,eax
  422bcd:	sahf   
  422bce:	mov    bh,0x75
  422bd0:	rcl    BYTE PTR [edi+edx*8],1
  422bd3:	cld    
  422bd4:	push   eax
  422bd5:	ins    BYTE PTR es:[edi],dx
  422bd6:	push   ds
  422bd7:	lea    edx,[edi-0x16250e0d]
  422bdd:	adc    DWORD PTR [ecx],esi
  422bdf:	cmp    DWORD PTR [ebp+0x29],esp
  422be2:	mov    ch,0xa6
  422be4:	push   edi
  422be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422be6:	pusha  
  422be7:	xchg   ebp,eax
  422be8:	xor    BYTE PTR [ebx],bl
  422bea:	inc    esp
  422beb:	pop    ss
  422bec:	lahf   
  422bed:	rcl    DWORD PTR [eax-0x5f],cl
  422bf0:	push   edi
  422bf1:	out    0xdd,eax
  422bf3:	hlt    
  422bf4:	(bad)  
  422bf5:	iret   
  422bf6:	int    0xfa
  422bf8:	fstp   TBYTE PTR [edi-0x2cb4a0b]
  422bfe:	push   0x72752539
  422c03:	sub    eax,0x808ada8f
  422c08:	add    eax,0x5647cda9
  422c0d:	int    0x81
  422c0f:	data16 int3 
  422c11:	pushf  
  422c12:	loopne 0x422c47
  422c14:	jp     0x422c81
  422c16:	mov    bl,0xcf
  422c18:	stos   DWORD PTR es:[edi],eax
  422c19:	adc    al,bh
  422c1b:	push   edi
  422c1c:	lds    eax,FWORD PTR [ebx+ecx*1+0x39]
  422c20:	add    eax,0xfa21a3f8
  422c25:	xchg   edx,eax
  422c26:	pop    edx
  422c27:	mov    DWORD PTR [eax-0x46],ebx
  422c2a:	mov    ch,0x7f
  422c2c:	fisubr DWORD PTR [esi]
  422c2e:	adc    ebx,DWORD PTR [ecx+ecx*4]
  422c31:	ja     0x422c94
  422c33:	mov    edi,ebp
  422c35:	lds    edx,FWORD PTR [ecx+0x57]
  422c38:	pop    ecx
  422c39:	fsub   QWORD PTR [esi+0x4d]
  422c3c:	sbb    DWORD PTR [eax],ebp
  422c3e:	inc    edi
  422c3f:	cli    
  422c40:	retf   0xee62
  422c43:	repz push ebx
  422c45:	cmp    ebx,DWORD PTR [edx-0x5d]
  422c48:	pop    eax
  422c49:	fsubrp st(2),st
  422c4b:	push   es
  422c4c:	daa    
  422c4d:	push   esp
  422c4e:	lock jle 0x422c57
  422c51:	ss jmp 0x85da5775
  422c57:	retf   
  422c58:	icebp  
  422c59:	fldenv [ebx-0x4893899a]
  422c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c60:	out    dx,eax
  422c61:	sbb    cl,BYTE PTR [ebx]
  422c63:	les    esi,FWORD PTR [edx+0x71cfddf0]
  422c69:	retf   
  422c6a:	js     0x422cac
  422c6c:	add    ebx,DWORD PTR [ebx]
  422c6e:	inc    ecx
  422c6f:	inc    esi
  422c70:	push   0x788fcbd6
  422c75:	add    DWORD PTR [edi-0x46],0xfffffff3
  422c79:	add    al,0x69
  422c7b:	dec    esp
  422c7c:	and    bh,BYTE PTR [edx+0x13beb1d9]
  422c82:	adc    BYTE PTR [ecx+edi*2+0x60e9114b],dh
  422c89:	stos   BYTE PTR es:[edi],al
  422c8a:	xor    bh,dl
  422c8c:	ss into 
  422c8e:	imul   esp,eax,0x75
  422c91:	popa   
  422c92:	add    ah,BYTE PTR [ebx+0x64c90575]
  422c98:	test   eax,0x649aa721
  422c9d:	inc    esp
  422c9e:	cmp    BYTE PTR [ecx],al
  422ca0:	dec    ebx
  422ca1:	sahf   
  422ca2:	loope  0x422c89
  422ca4:	test   al,0xc4
  422ca6:	(bad)  
  422ca7:	into   
  422ca8:	pop    ds
  422ca9:	cmp    ah,bl
  422cab:	push   es
  422cac:	ja     0x422cc6
  422cae:	pop    ebp
  422caf:	cmp    edi,DWORD PTR [eax+0x5fd782e2]
  422cb5:	sub    al,BYTE PTR [eax-0x77609757]
  422cbb:	(bad)  
  422cbc:	push   edi
  422cbd:	jg     0x422c5e
  422cbf:	je     0x422cca
  422cc1:	pop    edx
  422cc2:	or     dh,BYTE PTR [edi]
  422cc4:	adc    DWORD PTR [ecx-0x3c],edx
  422cc7:	push   esp
  422cc8:	dec    ebx
  422cc9:	xchg   esi,eax
  422cca:	call   0xc5784ec
  422ccf:	into   
  422cd0:	sbb    BYTE PTR [edx],0xab
  422cd3:	pop    ss
  422cd4:	mov    eax,0x32f8b4f6
  422cd9:	xchg   edi,eax
  422cda:	push   cs
  422cdb:	ds (bad) 
  422cdd:	and    eax,0xcaf081fc
  422ce2:	inc    eax
  422ce3:	ret    
  422ce4:	and    al,0x3
  422ce6:	(bad)  
  422ce8:	sbb    eax,0x23fff641
  422ced:	shr    DWORD PTR [ebp-0x55],cl
  422cf0:	pop    esp
  422cf1:	cmp    al,0x7
  422cf3:	shr    BYTE PTR [ebx],cl
  422cf5:	xor    al,0x4d
  422cf7:	mov    ebp,0x7aa2181e
  422cfc:	dec    ebx
  422cfd:	adc    dh,BYTE PTR [ebp-0x2214510]
  422d03:	lods   eax,DWORD PTR ds:[esi]
  422d04:	nop
  422d05:	lods   eax,DWORD PTR ds:[esi]
  422d06:	jmp    0xecee96d8
  422d0b:	loope  0x422c9a
  422d0d:	data16 cmc 
  422d0f:	add    bl,dh
  422d11:	jmp    0x81959ccd
  422d16:	mov    dh,0xf4
  422d18:	mov    ch,bl
  422d1a:	pushf  
  422d1b:	ret    0x5e56
  422d1e:	pop    esp
  422d1f:	lods   eax,DWORD PTR ds:[esi]
  422d20:	inc    edi
  422d21:	fimul  WORD PTR [ebp+esi*2+0x4b]
  422d25:	fs (bad) 
  422d27:	out    dx,al
  422d28:	mov    esp,esi
  422d2a:	sub    eax,0x6499511b
  422d2f:	int3   
  422d30:	enter  0xa451,0x8e
  422d34:	pop    es
  422d35:	shl    BYTE PTR [edi+0x2f],cl
  422d38:	push   esi
  422d39:	pushf  
  422d3a:	jno    0x422d45
  422d3c:	lahf   
  422d3d:	ins    DWORD PTR es:[edi],dx
  422d3e:	push   fs
  422d40:	and    al,al
  422d42:	sbb    bh,BYTE PTR [esi+0x1b765af5]
  422d48:	enter  0xd21c,0x39
  422d4c:	addr16 mov ch,0x5c
  422d4f:	neg    DWORD PTR [edi-0x43]
  422d52:	out    dx,eax
  422d53:	arpl   di,bp
  422d55:	or     edx,DWORD PTR [edi+0x694beaec]
  422d5b:	xor    DWORD PTR [edi-0x78c0ce22],ecx
  422d61:	lea    edx,[ebp+ebp*4-0x573b6015]
  422d68:	sbb    al,0xdc
  422d6a:	lea    ecx,[ebx+edx*4]
  422d6d:	lea    esi,[eax-0x1c]
  422d70:	pop    edx
  422d71:	inc    edx
  422d72:	jg     0x422d50
  422d74:	into   
  422d75:	fidiv  DWORD PTR [eax+0x57]
  422d78:	fmul   DWORD PTR [ebx-0x1e2b6fec]
  422d7e:	lods   eax,DWORD PTR ds:[esi]
  422d7f:	js     0x422d16
  422d81:	pop    esp
  422d82:	and    edi,0xffffffdc
  422d85:	or     BYTE PTR [ebx],al
  422d87:	fyl2xp1 
  422d89:	or     DWORD PTR [edx+ebp*8-0x4d],0xffffffe4
  422d8e:	inc    esp
  422d8f:	add    al,0xfc
  422d91:	out    dx,al
  422d92:	mov    ebp,0x26d5f48a
  422d97:	push   0x67b4b160
  422d9c:	icebp  
  422d9d:	xchg   esi,eax
  422d9e:	int    0xde
  422da0:	jle    0x422db8
  422da2:	std    
  422da3:	dec    esp
  422da4:	(bad)  
  422da5:	adc    cl,ah
  422da7:	outs   dx,DWORD PTR ds:[esi]
  422da8:	jmp    0x1667:0x62ab46a9
  422daf:	push   0x4b
  422db1:	(bad)  
  422db2:	mov    ebx,DWORD PTR [edx-0x4d]
  422db5:	dec    esp
  422db6:	sub    al,0x31
  422db8:	mov    gs,WORD PTR ds:0x2ff8a8f9
  422dbe:	js     0x422e2b
  422dc0:	cmp    al,0x33
  422dc2:	mov    ebp,DWORD PTR [ebx+ecx*2+0x1f]
  422dc6:	pop    eax
  422dc7:	ins    BYTE PTR es:[edi],dx
  422dc8:	inc    ebx
  422dc9:	adc    esi,DWORD PTR [ebp-0x7bc0c450]
  422dcf:	lods   al,BYTE PTR ds:[esi]
  422dd0:	cmp    ecx,DWORD PTR [edx-0x6]
  422dd3:	pop    esp
  422dd4:	jnp    0x422e0d
  422dd6:	lods   eax,DWORD PTR ds:[esi]
  422dd7:	int3   
  422dd8:	xlat   BYTE PTR ds:[ebx]
  422dd9:	xchg   ebx,eax
  422dda:	mov    esp,0xe3c64c2f
  422ddf:	inc    esi
  422de0:	push   esi
  422de1:	mov    ds:0x89c7e702,al
  422de6:	inc    edx
  422de8:	idiv   ebx
  422dea:	pop    ebp
  422deb:	retf   0xe8ab
  422dee:	fsubr  QWORD PTR [edx-0x370e7426]
  422df4:	ret    0xa91e
  422df7:	xchg   ecx,eax
  422df8:	in     al,dx
  422df9:	cmp    DWORD PTR [eax],0x4ac707f6
  422dff:	lahf   
  422e00:	pop    es
  422e01:	jnp    0x422e0e
  422e03:	xor    edx,ebx
  422e05:	xor    eax,0x4b8d1ef9
  422e0a:	adc    esp,DWORD PTR [ebx-0x35a5c6a5]
  422e10:	cmp    DWORD PTR [ebx-0x377de76f],eax
  422e16:	mov    esp,0xa00099cd
  422e1b:	cmp    ecx,esi
  422e1d:	jle    0x422df9
  422e1f:	arpl   WORD PTR [edx+edi*1-0x4977eccf],ax
  422e26:	in     eax,0x11
  422e28:	test   DWORD PTR ds:0x9a7e1374,ecx
  422e2e:	xchg   ebp,eax
  422e2f:	cmp    al,0x31
  422e31:	js     0x422e09
  422e33:	or     ah,0xb
  422e36:	rcr    DWORD PTR [ebx-0x43],1
  422e39:	hlt    
  422e3a:	jns    0x422eb8
  422e3c:	adc    ch,BYTE PTR [ebp-0x36341427]
  422e42:	add    BYTE PTR [ecx-0x6c],0xb6
  422e46:	pop    ds
  422e47:	stos   DWORD PTR es:[edi],eax
  422e48:	push   edi
  422e49:	enter  0x5571,0x6
  422e4d:	adc    al,0x8a
  422e4f:	pushf  
  422e50:	inc    ebx
  422e51:	sbb    al,0x93
  422e53:	nop
  422e54:	lds    ebp,FWORD PTR [esi]
  422e56:	shr    cl,0xde
  422e59:	fisub  WORD PTR [edi]
  422e5b:	retf   0x6f7d
  422e5e:	out    dx,al
  422e5f:	jge    0x422e05
  422e61:	xor    eax,0x720f321c
  422e66:	int    0x10
  422e68:	clc    
  422e69:	lds    edi,FWORD PTR [ebx+0x9]
  422e6c:	adc    al,0xfa
  422e6e:	adc    al,BYTE PTR [edx+0x49]
  422e71:	xor    BYTE PTR [ecx-0x2c],ch
  422e74:	mov    esp,eax
  422e76:	mov    esi,0x6d4fd19
  422e7b:	and    DWORD PTR [ebp+0x62b887fc],edx
  422e81:	fwait
  422e82:	inc    esi
  422e83:	int    0xe6
  422e85:	mov    ebp,0x9607963a
  422e8a:	popf   
  422e8b:	xchg   ebp,eax
  422e8c:	push   0x2381426f
  422e91:	retf   0xc714
  422e94:	inc    eax
  422e95:	gs cdq 
  422e97:	or     DWORD PTR [edi-0x18],eax
  422e9a:	add    DWORD PTR [eax],esp
  422e9c:	and    edx,DWORD PTR [eax-0xb]
  422e9f:	out    0xd9,eax
  422ea1:	mov    ds:0xf98fb649,eax
  422ea6:	add    DWORD PTR [eax+edx*2+0x1a729591],esi
  422ead:	(bad)  [ebx]
  422eaf:	pop    ebp
  422eb0:	sbb    al,0x85
  422eb2:	cdq    
  422eb3:	ret    
  422eb4:	adc    DWORD PTR [eax+0x3a624598],0xffffff84
  422ebb:	mov    esi,0xa509b0f0
  422ec0:	bnd jne 0x422f0b
  422ec3:	lods   eax,DWORD PTR ds:[esi]
  422ec4:	rol    BYTE PTR [ebx+0x5e],0xc1
  422ec8:	add    BYTE PTR [ebx],0xcc
  422ecb:	jl     0x422e89
  422ecd:	aad    0xa7
  422ecf:	or     BYTE PTR [edi-0x35],bh
  422ed2:	mov    bh,bh
  422ed4:	(bad)  
  422ed5:	jo     0x422ee6
  422ed7:	je     0x422eae
  422ed9:	ror    BYTE PTR [ecx+0x28],1
  422edc:	imul   DWORD PTR [ebx]
  422ede:	retf   
  422edf:	mov    al,ds:0x76e42c0c
  422ee4:	pop    edi
  422ee5:	xchg   esi,ecx
  422ee7:	loope  0x422f2c
  422ee9:	ret    0x3dae
  422eec:	or     eax,0x68285cf
  422ef1:	jmp    0x422f68
  422ef3:	and    bh,bh
  422ef5:	push   ebp
  422ef6:	imul   esp,DWORD PTR ds:0x6451a8ca,0xffffff84
  422efd:	repz mov cl,0x80
  422f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f01:	mov    bh,cl
  422f03:	mov    ebp,0x6622d1b5
  422f08:	int    0x79
  422f0a:	clc    
  422f0b:	and    al,0x65
  422f0d:	and    bl,BYTE PTR [edx-0xd]
  422f10:	fld    QWORD PTR [edi-0x57]
  422f13:	jle    0x422eba
  422f15:	inc    ebx
  422f16:	addr16 ror esi,1
  422f19:	ds sub bl,dl
  422f1c:	xchg   esi,eax
  422f1d:	add    edx,DWORD PTR [edi-0xbb81ec0]
  422f23:	fadd   QWORD PTR [ecx+0x26]
  422f26:	xchg   DWORD PTR ds:0x5a4c1c0c,ecx
  422f2c:	pop    esp
  422f2d:	pop    eax
  422f2e:	sbb    ebx,DWORD PTR [esi-0x3b19009]
  422f34:	mov    ds:0x74348ad1,al
  422f39:	lds    esi,FWORD PTR [ebx+0x1e]
  422f3c:	jns    0x422ee2
  422f3e:	push   eax
  422f3f:	in     eax,0xb3
  422f41:	outs   dx,BYTE PTR ds:[esi]
  422f42:	inc    eax
  422f43:	(bad)  
  422f44:	call   0x31544f14
  422f49:	js     0x422f52
  422f4b:	mov    ds:0xf916d374,al
  422f50:	push   eax
  422f51:	fmulp  st(2),st
  422f53:	sub    esp,DWORD PTR [esi-0x3efcf3ab]
  422f59:	cmp    edx,edi
  422f5b:	sub    eax,0xa2e89789
  422f60:	popa   
  422f61:	imul   eax,DWORD PTR [esi+0x7f20943d],0xfffffffe
  422f68:	mov    cs,esp
  422f6a:	je     0x422fa4
  422f6c:	fadd   DWORD PTR [eiz*1+0x7d140df7]
  422f73:	xchg   esi,eax
  422f74:	mov    dl,0x66
  422f76:	xor    edx,edi
  422f78:	stos   BYTE PTR es:[edi],al
  422f79:	lea    ebx,[esi]
  422f7b:	stos   BYTE PTR es:[edi],al
  422f7c:	jmp    0x3572a5da
  422f81:	jb     0x422fb5
  422f83:	shl    dh,cl
  422f85:	xchg   esi,eax
  422f86:	int3   
  422f87:	ins    DWORD PTR es:[edi],dx
  422f88:	pop    ebx
  422f89:	rcl    DWORD PTR [eax+0x1b],0x8d
  422f8d:	jle    0xac69bda1
  422f93:	shl    DWORD PTR [edi],1
  422f95:	cmc    
  422f96:	cld    
  422f97:	outs   dx,DWORD PTR ds:[esi]
  422f98:	mov    esp,0xbd43ba05
  422f9d:	clc    
  422f9e:	or     bl,BYTE PTR [ecx+0x12]
  422fa1:	mov    al,0x10
  422fa3:	and    al,0x1b
  422fa5:	cli    
  422fa6:	cwde   
  422fa7:	or     eax,DWORD PTR [edi-0x58]
  422faa:	outs   dx,BYTE PTR ds:[esi]
  422fab:	adc    BYTE PTR ds:0x3c514dbd,bh
  422fb1:	repz mov ds:0xa1558c7b,eax
  422fb7:	pusha  
  422fb8:	repnz cmp DWORD PTR [edi],ecx
  422fbb:	ins    BYTE PTR es:[edi],dx
  422fbc:	mov    ah,0xe0
  422fbe:	aam    0x30
  422fc0:	mov    BYTE PTR [ebp+0x1a4cf475],ah
  422fc6:	mov    edx,0x220d7a37
  422fcb:	mov    ecx,0x842744c6
  422fd0:	mov    esi,0x95ea1b38
  422fd5:	add    ebx,DWORD PTR [ecx-0x132b63f9]
  422fdb:	pop    edi
  422fdc:	xchg   edi,ebp
  422fde:	icebp  
  422fdf:	shl    DWORD PTR [esi-0x1c],cl
  422fe2:	ficomp WORD PTR [ebx+0xea7a343]
  422fe8:	jb     0x422fbb
  422fea:	jp     0x422fd9
  422fec:	sub    BYTE PTR [edi+0x44749cff],al
  422ff2:	add    eax,0x5052b96
  422ff7:	std    
  422ff8:	inc    esp
  422ff9:	rcr    BYTE PTR [edi],0xef
  422ffc:	mov    ch,0x92
  422ffe:	add    ecx,ebp
  423000:	mov    edx,0xf7fd6be
  423005:	mov    ecx,0x99ed9d94
  42300a:	cmp    eax,DWORD PTR [esi+0x6ca0c8]
  423010:	mov    ebp,0x264dab93
  423015:	pop    edx
  423016:	das    
  423017:	sbb    DWORD PTR [edx+ebx*8+0x26c24858],0x80234282
  423022:	mov    eax,ds:0x36f72369
  423027:	mov    dh,0xe2
  423029:	add    esp,DWORD PTR [eax]
  42302b:	mov    esp,0x4b2cea84
  423030:	xor    DWORD PTR [ebp-0x1aed0b7c],edi
  423036:	lods   al,BYTE PTR ds:[esi]
  423037:	std    
  423038:	dec    esp
  423039:	push   ebp
  42303a:	clc    
  42303b:	fs iret 
  42303d:	rcl    BYTE PTR ds:0xb9b739e,0x67
  423044:	mov    esi,0x66cd9e34
  423049:	das    
  42304a:	repnz mov esi,DWORD PTR [ebx-0x29]
  42304e:	retf   0x3e30
  423051:	jge    0x42300e
  423053:	pop    eax
  423054:	add    eax,0xd08843
  423059:	push   ebp
  42305a:	cli    
  42305b:	in     eax,dx
  42305c:	js     0x423045
  42305e:	stc    
  42305f:	std    
  423060:	addr16 xchg esp,eax
  423062:	mov    bl,0x4d
  423064:	outs   dx,DWORD PTR ds:[esi]
  423065:	lds    edi,FWORD PTR [ecx]
  423067:	popf   
  423068:	in     eax,dx
  423069:	fidivr DWORD PTR [esi]
  42306b:	sub    eax,0xb5e1d767
  423070:	std    
  423071:	(bad)  
  423072:	fs (bad) 
  423075:	push   ebx
  423076:	iret   
  423077:	xchg   edi,eax
  423078:	dec    esp
  423079:	xor    dh,BYTE PTR [ebp+edi*1-0x77ed965a]
  423080:	mov    ah,0x24
  423082:	or     BYTE PTR [edi+0x77],0xfb
  423086:	cmp    eax,0x8b698845
  42308b:	leave  
  42308c:	mov    ds:0x2d8d0ac9,eax
  423091:	bswap  edx
  423093:	dec    esp
  423094:	sbb    esi,DWORD PTR [eax]
  423096:	mov    ds:0x439be76d,eax
  42309b:	xor    BYTE PTR [esi],al
  42309d:	aam    0x2c
  42309f:	adc    al,BYTE PTR [ecx+edx*1-0x78b677cb]
  4230a6:	add    ah,bl
  4230a8:	in     al,0x46
  4230aa:	mov    BYTE PTR [esi+0x448f90a8],al
  4230b0:	jo     0x42304e
  4230b2:	loopne 0x4230a3
  4230b4:	sub    eax,0xb50c178e
  4230b9:	mov    ch,0x8f
  4230bb:	inc    esp
  4230bc:	enter  0x822c,0x75
  4230c0:	sbb    eax,0x4ad5f13f
  4230c5:	fisttp DWORD PTR [edi]
  4230c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230c8:	mov    al,0x7e
  4230ca:	mov    ebp,0xf8a3da2e
  4230cf:	pop    eax
  4230d0:	jmp    FWORD PTR [eax-0x784922b0]
  4230d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230d7:	add    edi,DWORD PTR [edx]
  4230d9:	dec    edx
  4230da:	push   ds
  4230db:	inc    eax
  4230dc:	repz xchg edx,eax
  4230de:	mov    esp,0xe9771b95
  4230e3:	inc    edx
  4230e4:	xchg   esp,eax
  4230e5:	push   cs
  4230e6:	test   DWORD PTR [esi],edx
  4230e8:	fdivr  DWORD PTR [edx+0x5d]
  4230eb:	add    edi,DWORD PTR [ebx+0x7cd56eef]
  4230f1:	ret    0xb1f0
  4230f4:	ret    
  4230f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f6:	adc    al,0x15
  4230f8:	sbb    eax,0x9a25ae5c
  4230fd:	pop    ecx
  4230fe:	ja     0x423082
  423100:	lock daa 
  423102:	or     eax,0x774b3e9a
  423107:	xor    BYTE PTR [ebx-0x1c4d9ced],al
  42310d:	sub    eax,0x91596ec
  423112:	sbb    al,0xbb
  423114:	sub    cl,BYTE PTR [eax]
  423116:	ss dec ecx
  423118:	mov    esp,0xa66a18f7
  42311d:	dec    ecx
  42311e:	mov    esp,0x83d08e8e
  423123:	aam    0xc5
  423125:	inc    edx
  423126:	test   DWORD PTR ds:0x35bf7a3f,esi
  42312c:	call   0x7ec5d8c9
  423131:	xor    al,0xc9
  423133:	lods   eax,DWORD PTR ds:[esi]
  423134:	lds    esi,FWORD PTR [ebx+0x1c3f5ad7]
  42313a:	cdq    
  42313b:	imul   ebx,esp,0x28cf55a2
  423141:	mov    ecx,0x325cdeaf
  423146:	jge    0x423176
  423148:	sar    DWORD PTR [ecx+eax*2+0x4d],0xa7
  42314d:	mov    ebp,DWORD PTR [eax-0x4eb61ceb]
  423153:	xor    edx,esp
  423155:	stos   DWORD PTR es:[edi],eax
  423156:	call   0xea7ce0ca
  42315b:	ror    edi,0x20
  42315e:	jmp    0xecc2c079
  423163:	sbb    BYTE PTR [ebp+esi*8-0x63efc102],bl
  42316a:	mov    DWORD PTR [ebx+0x38],ebx
  42316d:	cmp    BYTE PTR [eax+esi*8-0x3b99da80],bl
  423174:	and    BYTE PTR [ebp-0x6b],0xcf
  423178:	adc    ebx,DWORD PTR [ecx-0x58501666]
  42317e:	push   edi
  42317f:	repz sub al,0x97
  423182:	popf   
  423183:	push   eax
  423184:	stos   BYTE PTR es:[edi],al
  423185:	hlt    
  423186:	cli    
  423187:	xchg   DWORD PTR [ebp+0x37719bb1],eax
  42318d:	sbb    bl,BYTE PTR [ecx-0x3d]
  423190:	xchg   edx,eax
  423191:	rcl    BYTE PTR [ebp*1+0x21178d8c],1
  423198:	xchg   esp,eax
  423199:	or     eax,0x9037eb2a
  42319e:	lea    esi,[edi-0x36ebc0f7]
  4231a4:	jbe    0x423217
  4231a6:	scas   al,BYTE PTR es:[edi]
  4231a7:	cwde   
  4231a8:	dec    ecx
  4231a9:	jmp    0x9ba8:0xa5fb1642
  4231b0:	jmp    DWORD PTR [esi+0x6a8d3b46]
  4231b6:	inc    eax
  4231b7:	jmp    0x8b51a70a
  4231bc:	inc    edi
  4231bd:	xor    eax,0x36f9e210
  4231c2:	enter  0xdb37,0xf9
  4231c6:	mov    al,0xff
  4231c8:	arpl   WORD PTR [ebx+0x19],bp
  4231cb:	adc    esp,DWORD PTR [eax]
  4231cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231ce:	(bad)  
  4231cf:	mov    eax,ds:0x4a492188
  4231d4:	or     DWORD PTR [ebx-0x78],esi
  4231d7:	mov    al,0x9d
  4231d9:	pop    ds
  4231da:	neg    ch
  4231dc:	popa   
  4231dd:	jmp    0x423162
  4231df:	mov    eax,ds:0xe3fc321a
  4231e4:	xor    bl,BYTE PTR cs:[esi]
  4231e7:	cmp    DWORD PTR [eax+0x76b51ecc],ebp
  4231ed:	retf   
  4231ee:	jmp    0x7e447ab8
  4231f3:	inc    esp
  4231f4:	mov    edx,0x411f90cf
  4231f9:	(bad)  
  4231fa:	dec    ebx
  4231fb:	lds    esp,FWORD PTR ds:0x28a9e4fe
  423201:	sbb    esp,DWORD PTR [ebx]
  423203:	ror    ah,1
  423205:	push   eax
  423206:	pop    es
  423207:	div    BYTE PTR [ecx+0x6f]
  42320a:	test   BYTE PTR [edi+0x4fbdd095],dh
  423210:	inc    esp
  423211:	cmp    DWORD PTR [esi-0x5a77e21],edi
  423217:	popf   
  423218:	xchg   ebp,eax
  423219:	fdiv   QWORD PTR [ebp+edx*8+0x28]
  42321d:	and    DWORD PTR [edi],edx
  42321f:	(bad)  
  423220:	pop    edi
  423221:	inc    esi
  423222:	push   es
  423223:	inc    esp
  423224:	inc    ecx
  423225:	mov    al,0xd
  423227:	dec    edi
  423228:	es cld 
  42322a:	and    esp,ebp
  42322c:	inc    esp
  42322d:	mov    bl,0x48
  42322f:	jb     0x4232a1
  423231:	xor    ch,BYTE PTR [ebp+0x42]
  423234:	popaw  
  423236:	lahf   
  423237:	add    BYTE PTR [ebp+ecx*4+0x71],dh
  42323b:	sbb    BYTE PTR [esi],bh
  42323d:	scas   al,BYTE PTR es:[edi]
  42323e:	mov    dl,0x2b
  423240:	jmp    0x5380:0xba475901
  423247:	fmul   QWORD PTR ds:0xaff1eb0f
  42324d:	and    al,0x67
  42324f:	cmc    
  423250:	std    
  423251:	scas   eax,DWORD PTR es:[edi]
  423252:	jg     0x4232c6
  423254:	sub    ch,ch
  423256:	push   ebp
  423257:	push   ecx
  423258:	enter  0x3d2e,0xe
  42325c:	push   es
  42325d:	mov    esp,0xd0d3e897
  423262:	test   BYTE PTR [ebx-0xa569c84],dl
  423268:	xchg   edx,eax
  423269:	or     eax,0x630b066f
  42326e:	addr16 inc eax
  423270:	pop    esi
  423271:	pop    ebp
  423272:	xchg   esp,eax
  423273:	or     BYTE PTR [esp+eax*8],ah
  423276:	cmp    DWORD PTR ds:0xe48c60af,ebx
  42327c:	mov    ecx,0xa591123c
  423281:	imul   edx
  423283:	mov    ebx,0xe6e0652
  423288:	xchg   ebp,eax
  423289:	push   esi
  42328a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42328b:	shr    DWORD PTR [eax],1
  42328d:	loopne 0x4232f3
  42328f:	test   edi,esp
  423291:	in     eax,dx
  423292:	les    ebp,FWORD PTR [ecx-0x1a]
  423295:	sub    al,BYTE PTR fs:[edx-0x485f9afa]
  42329c:	or     al,0x3f
  42329e:	adc    esp,DWORD PTR [edx+0x26]
  4232a1:	and    esp,DWORD PTR [ebx]
  4232a3:	mov    edi,0x4640d1ba
  4232a8:	dec    edx
  4232a9:	adc    eax,0x4a545de8
  4232ae:	inc    ebp
  4232af:	pop    edi
  4232b0:	cmc    
  4232b1:	cdq    
  4232b2:	inc    ebp
  4232b3:	sbb    ecx,ebp
  4232b5:	addr16 inc ecx
  4232b7:	xchg   al,dl
  4232b9:	imul   ecx,DWORD PTR [eax+0xde00b57],0x4607e225
  4232c3:	bound  esi,QWORD PTR [eax+0x58]
  4232c6:	aam    0x4
  4232c8:	push   ecx
  4232c9:	push   ebp
  4232ca:	or     DWORD PTR [edx],ebp
  4232cc:	fdiv   DWORD PTR [eax+0x3c]
  4232cf:	fcmovbe st,st(4)
  4232d1:	lds    ebx,FWORD PTR [edi+0x2b]
  4232d4:	loop   0x4232a5
  4232d6:	int3   
  4232d7:	xchg   ebp,eax
  4232d8:	sar    DWORD PTR [edx+0x10],0x7
  4232dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232dd:	sbb    DWORD PTR [ecx+ecx*2],ebx
  4232e0:	pop    es
  4232e1:	mov    ds:0x258172d8,eax
  4232e6:	(bad)  
  4232e7:	js     0x423292
  4232e9:	cmp    BYTE PTR [ebp+0x5c],bh
  4232ec:	in     al,dx
  4232ed:	fmul   st,st(2)
  4232ef:	xchg   ecx,eax
  4232f0:	(bad)  
  4232f1:	pushf  
  4232f2:	cmp    al,0x1b
  4232f4:	and    dl,BYTE PTR [ecx+0x54ed7773]
  4232fa:	mov    bh,0x8a
  4232fc:	test   al,0x0
  4232fe:	fisttp WORD PTR [edx+0x76e7f6f5]
  423304:	repz sub bl,BYTE PTR [ebp+esi*1+0x7b2cf847]
  42330c:	mov    bh,0xe0
  42330e:	iret   
  42330f:	mov    ebp,0x1dc287ba
  423314:	in     eax,dx
  423315:	cs mov ch,0xc8
  423318:	pop    es
  423319:	int3   
  42331a:	mov    ecx,0xaf46927f
  42331f:	pop    ebp
  423320:	xchg   edi,eax
  423321:	inc    ebx
  423322:	sub    ebp,edx
  423324:	dec    esp
  423325:	or     BYTE PTR [edi+ecx*2-0x1aa94260],0xd3
  42332d:	mov    DWORD PTR [edx],0xb93b9a77
  423333:	add    DWORD PTR [edx+edi*4],ebx
  423336:	test   al,0x3c
  423338:	pop    edx
  423339:	test   eax,0x9f5a74f7
  42333e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42333f:	or     eax,0x99fa1277
  423344:	std    
  423345:	inc    edi
  423346:	mov    ebp,0xd737c8e
  42334b:	mov    ds:0xdda63704,al
  423350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423351:	out    dx,eax
  423352:	pop    esi
  423353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423354:	fst    QWORD PTR [edi]
  423356:	mov    ch,0x5e
  423358:	xchg   edx,eax
  423359:	call   0x9b18a49
  42335e:	inc    esi
  42335f:	add    eax,0x4e68fbe8
  423364:	inc    esp
  423365:	dec    eax
  423366:	fwait
  423367:	push   es
  423368:	je     0x42332f
  42336a:	sub    al,0x3a
  42336c:	nop
  42336d:	sbb    ah,bh
  42336f:	pop    edi
  423370:	xchg   ecx,eax
  423371:	test   eax,0x7522e3b9
  423376:	mov    esi,0x596f4bce
  42337b:	push   0xce36093f
  423380:	out    dx,al
  423381:	mov    ah,0xda
  423383:	jo     0x423374
  423385:	test   DWORD PTR [ecx+0x42019eb3],ebp
  42338b:	outs   dx,DWORD PTR ds:[esi]
  42338c:	push   ebx
  42338d:	sub    eax,0x3ed181e3
  423392:	adc    esp,esp
  423394:	push   es
  423395:	cmp    al,0xbe
  423397:	retf   0xd93d
  42339a:	gs loopne 0x4233f8
  42339d:	xchg   esi,eax
  42339e:	std    
  42339f:	mov    ebp,0x2749bcb2
  4233a4:	clc    
  4233a5:	sub    bl,BYTE PTR [ebx+0x4]
  4233a8:	mov    ah,0x23
  4233aa:	pop    ss
  4233ab:	xchg   esi,eax
  4233ac:	xchg   esp,eax
  4233ad:	dec    edx
  4233ae:	push   cs
  4233af:	pop    ds
  4233b0:	neg    BYTE PTR [edx+eax*2+0x4c18fabe]
  4233b7:	and    edx,esp
  4233b9:	jge    0x42340f
  4233bb:	mov    al,0xdb
  4233bd:	push   ebx
  4233be:	pop    es
  4233bf:	inc    esi
  4233c0:	frstor [esp+eiz*4-0x34]
  4233c4:	sub    BYTE PTR [edx+0x3671a082],bh
  4233ca:	daa    
  4233cb:	fadd   DWORD PTR fs:[eax]
  4233ce:	push   0x6494aa2c
  4233d3:	inc    esi
  4233d4:	retf   
  4233d5:	inc    ebx
  4233d6:	mov    dl,0x69
  4233d8:	sub    DWORD PTR [eax+0x70],ebx
  4233db:	adc    al,0x1e
  4233dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233de:	adc    BYTE PTR [eax+0x10],bh
  4233e1:	aad    0xdc
  4233e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233e4:	xchg   esp,eax
  4233e5:	push   ecx
  4233e6:	jbe    0x423414
  4233e8:	(bad)  
  4233ea:	adc    eax,0x3e19bdb
  4233ef:	sbb    ecx,esp
  4233f1:	(bad)  
  4233f2:	fs jl  0x423381
  4233f5:	sbb    ebx,DWORD PTR [ecx+edx*4]
  4233f8:	xlat   BYTE PTR ds:[ebx]
  4233f9:	retf   
  4233fa:	pop    ebx
  4233fb:	icebp  
  4233fc:	dec    esi
  4233fd:	push   ebx
  4233fe:	retf   
  4233ff:	push   edx
  423400:	adc    DWORD PTR [esi-0x5975b04d],edx
  423406:	push   esi
  423407:	xor    DWORD PTR [eax+0x65544df1],esp
  42340d:	div    BYTE PTR [ebp+0xf6685dc]
  423413:	in     eax,0x58
  423415:	dec    eax
  423416:	shl    BYTE PTR [esi+0x12],1
  423419:	out    dx,eax
  42341a:	movaps xmm5,xmm3
  42341d:	inc    esi
  42341e:	and    bh,ch
  423420:	outs   dx,DWORD PTR ds:[esi]
  423421:	xor    ebp,DWORD PTR [eax]
  423423:	sub    edi,DWORD PTR [edi-0x21357e74]
  423429:	add    al,0xb4
  42342b:	cmc    
  42342c:	push   ecx
  42342d:	or     BYTE PTR [eax+edx*2],cl
  423430:	scas   al,BYTE PTR es:[edi]
  423431:	in     eax,0xd4
  423433:	scas   al,BYTE PTR es:[edi]
  423434:	xor    al,0x0
  423436:	cdq    
  423437:	stc    
  423438:	call   0x9e4c:0x704337af
  42343f:	in     eax,dx
  423440:	xchg   ecx,eax
  423441:	fstp   DWORD PTR [edi]
  423443:	xchg   edx,eax
  423444:	ret    
  423445:	mov    ebp,0xf0166120
  42344a:	xor    eax,DWORD PTR [eax-0x25]
  42344d:	in     al,dx
  42344e:	jp     0x423480
  423450:	push   ebx
  423451:	ficomp DWORD PTR [eax]
  423453:	bound  edx,QWORD PTR [edi]
  423455:	sbb    DWORD PTR [esi+edx*2+0x6e],edi
  423459:	dec    edx
  42345a:	and    eax,0xcf1345b0
  42345f:	mov    ch,0x51
  423461:	out    dx,eax
  423462:	sar    esi,cl
  423464:	inc    esp
  423465:	inc    edi
  423466:	outs   dx,DWORD PTR ds:[esi]
  423467:	std    
  423468:	aaa    
  423469:	scas   al,BYTE PTR es:[edi]
  42346a:	arpl   WORD PTR [ebx],cx
  42346c:	or     ebx,DWORD PTR [ebx]
  42346e:	xor    bl,BYTE PTR [edi+0x7]
  423471:	data16 adc al,BYTE PTR [ebp-0x6e5b6042]
  423478:	std    
  423479:	lods   eax,DWORD PTR ds:[esi]
  42347a:	aaa    
  42347b:	adc    cl,bl
  42347d:	daa    
  42347e:	fucomp st(4)
  423480:	sti    
  423481:	pop    ebx
  423482:	jb     0x423436
  423484:	loope  0x423469
  423486:	jne    0x4234c7
  423488:	mov    dx,0x890d
  42348c:	dec    eax
  42348d:	call   0x65868c92
  423492:	jne    0x4234fc
  423494:	xchg   BYTE PTR [ebx+0x552ee79d],dl
  42349a:	arpl   WORD PTR [edx-0x53d99164],di
  4234a0:	in     eax,0xcb
  4234a2:	popa   
  4234a3:	sub    DWORD PTR [esi],ebx
  4234a5:	sbb    ah,BYTE PTR [edi-0x72fcff27]
  4234ab:	sub    eax,0x7c76a0ae
  4234b0:	jae    0x4234f9
  4234b2:	jg     0x4234b5
  4234b4:	jb     0x42350e
  4234b6:	jae    0x4234ec
  4234b8:	cmp    DWORD PTR [ebp-0x2f1a2d17],0xd4eb04b5
  4234c2:	aad    0x13
  4234c4:	xor    BYTE PTR [edi-0x1a],dl
  4234c7:	pusha  
  4234c8:	shr    BYTE PTR [ecx+0x27dc0f77],cl
  4234ce:	scas   al,BYTE PTR es:[edi]
  4234cf:	mov    WORD PTR [eax-0x55e2fdfd],fs
  4234d5:	sub    ch,BYTE PTR [ebp+0x7bf2214b]
  4234db:	xchg   DWORD PTR [esi*2+0x6ac8889d],edx
  4234e2:	and    BYTE PTR [edx+0x77],dl
  4234e5:	push   eax
  4234e6:	or     eax,0xcaf27678
  4234eb:	dec    esp
  4234ec:	nop
  4234ed:	mov    ds:0x8e9cf8f,al
  4234f2:	inc    edx
  4234f3:	xchg   edi,eax
  4234f4:	aam    0x95
  4234f6:	dec    ebp
  4234f7:	xor    bl,dh
  4234f9:	xchg   ebx,eax
  4234fa:	or     eax,0x508da0d1
  4234ff:	sub    edx,esi
  423501:	and    BYTE PTR [eax-0x63],bh
  423504:	inc    eax
  423505:	or     ebp,DWORD PTR [esp+eiz*2+0x5cfc7807]
  42350c:	out    0x52,al
  42350e:	dec    eax
  42350f:	idiv   BYTE PTR [eax-0x77]
  423512:	pop    esi
  423513:	jg     0x423580
  423515:	jl     0x423521
  423517:	jecxz  0x42355d
  423519:	iret   
  42351a:	inc    esi
  42351b:	fiadd  WORD PTR [edx-0x6]
  42351e:	jp     0x423502
  423520:	into   
  423521:	aam    0xe8
  423523:	leave  
  423524:	loope  0x423587
  423526:	push   DWORD PTR [edi+0x79e61850]
  42352c:	dec    esi
  42352d:	sbb    BYTE PTR [edx-0x7],al
  423530:	pop    esi
  423531:	rcr    BYTE PTR [ebx-0x7b2dd321],0xf5
  423538:	mov    esi,0x4706a95d
  42353d:	(bad)  
  42353e:	ja     0x42352c
  423540:	outs   dx,DWORD PTR ds:[esi]
  423541:	mov    eax,ds:0x7ed4e1dc
  423546:	jne    0x4235b9
  423548:	mov    ecx,0x6c111acf
  42354d:	add    eax,edx
  42354f:	fwait
  423550:	dec    edi
  423551:	fisttp QWORD PTR [edi+0x6905b8d0]
  423557:	mov    edx,0x3a98d809
  42355c:	sub    dh,BYTE PTR [eax+0x6856bea5]
  423562:	(bad)  
  423563:	div    DWORD PTR [ecx+0xa]
  423566:	adc    ecx,ebx
  423568:	test   DWORD PTR [edi],edx
  42356a:	stc    
  42356b:	in     al,dx
  42356c:	mov    bh,bh
  42356e:	or     BYTE PTR [ecx-0x5528183c],dh
  423574:	out    dx,eax
  423575:	scas   al,BYTE PTR es:[edi]
  423576:	bnd jl 0x4235ae
  423579:	push   ebp
  42357a:	outs   dx,DWORD PTR ds:[esi]
  42357b:	mov    edi,0xc0b8fc50
  423580:	repnz test DWORD PTR [ebx+0x3ccea12],edi
  423587:	mov    dh,0xb3
  423589:	cmp    BYTE PTR [edx-0x1f],0x3
  42358d:	(bad)  
  42358e:	fidivr WORD PTR [edx]
  423590:	into   
  423591:	xchg   esp,eax
  423592:	fstp   TBYTE PTR [esp+eax*8]
  423595:	mov    WORD PTR [ebx-0x7a],fs
  423598:	sub    DWORD PTR [eax+0x30d4f570],0x88f07697
  4235a2:	cmp    DWORD PTR [eax-0x76],0x2d42f7ed
  4235a9:	jae    0x42361a
  4235ab:	xchg   BYTE PTR [esi],al
  4235ad:	pop    eax
  4235ae:	xor    DWORD PTR [ebp+0xabf436],edi
  4235b4:	rcr    dl,cl
  4235b6:	fild   DWORD PTR [edi+0x1ac8c26f]
  4235bc:	pop    DWORD PTR [edi-0x35624f48]
  4235c2:	das    
  4235c3:	fiadd  DWORD PTR [esi+0x60]
  4235c6:	sbb    ax,0xf07
  4235ca:	sub    edi,DWORD PTR [esi-0x7e396148]
  4235d0:	cs inc edi
  4235d2:	jae    0x4235f4
  4235d4:	js     0x423633
  4235d6:	mov    DWORD PTR [ecx],ebx
  4235d8:	mov    bh,0x5f
  4235da:	pop    ebx
  4235db:	adc    ah,BYTE PTR [edi+0x1468048]
  4235e1:	dec    edx
  4235e2:	or     al,0xe1
  4235e4:	outs   dx,DWORD PTR ds:[esi]
  4235e5:	cmp    eax,0x39f2b82
  4235ea:	(bad)  
  4235eb:	gs iret 
  4235ed:	clc    
  4235ee:	sub    BYTE PTR [ebp+0xfc1342b],cl
  4235f4:	mov    al,0x15
  4235f6:	or     ebp,edx
  4235f8:	loope  0x423604
  4235fa:	pop    edx
  4235fb:	mov    ebp,0x16469506
  423600:	or     al,BYTE PTR [edi+0x3b]
  423603:	fwait
  423604:	mov    ebp,0xd2256afc
  423609:	stos   DWORD PTR es:[edi],eax
  42360a:	call   0x8794:0x79e3ea02
  423611:	sub    DWORD PTR [ebx+0x7],ecx
  423614:	lods   al,BYTE PTR ds:[esi]
  423615:	adc    BYTE PTR ds:0xe22a5205,ch
  42361b:	repz (bad) 
  42361e:	adc    ch,BYTE PTR [edi-0x77]
  423621:	stos   BYTE PTR es:[edi],al
  423622:	ss push ds
  423624:	pop    ss
  423625:	mov    dl,0x85
  423627:	mov    WORD PTR [esi-0x3e],?
  42362a:	ret    0x83e7
  42362d:	mov    al,ds:0xaabae51b
  423632:	push   esp
  423633:	cmp    ebx,edx
  423635:	cmc    
  423636:	jl     0x42366a
  423638:	xor    bl,BYTE PTR [eax+edx*8-0x55b56123]
  42363f:	or     DWORD PTR [edi+0x71],edi
  423642:	sar    ecx,1
  423644:	adc    bh,BYTE PTR [esi]
  423646:	jl     0x4235e2
  423648:	mov    ebp,0x40fc7ddf
  42364d:	cmovo  esp,DWORD PTR [esi+0x58ba4b39]
  423654:	aam    0x4
  423656:	or     eax,0xd8e9093a
  42365b:	xchg   al,cl
  42365d:	mov    al,0xe1
  42365f:	ss jae 0x42360b
  423662:	scas   eax,DWORD PTR es:[edi]
  423663:	ror    BYTE PTR [edi+0x74],0x8b
  423667:	sub    al,0x5e
  423669:	sub    DWORD PTR [eax-0x33],ecx
  42366c:	fist   DWORD PTR [ebx+0x71f41f0a]
  423672:	mov    BYTE PTR [ebp-0x25358550],ah
  423678:	out    dx,al
  423679:	inc    DWORD PTR [ebx+0x49dd7204]
  42367f:	ja     0x4236f3
  423681:	bound  eax,QWORD PTR [edi+0x310d0a67]
  423687:	(bad)  
  423688:	jl     0x423615
  42368a:	dec    ebx
  42368b:	loopne 0x423701
  42368d:	add    eax,0x7e88d2f3
  423692:	hlt    
  423693:	push   ds
  423694:	mov    edx,0x929fd843
  423699:	mov    esp,DWORD PTR [esi]
  42369b:	dec    eax
  42369c:	stos   BYTE PTR es:[edi],al
  42369d:	xchg   edx,eax
  42369e:	popf   
  42369f:	lock out dx,al
  4236a1:	icebp  
  4236a2:	fcmovnb st,st(4)
  4236a4:	xlat   BYTE PTR ds:[ebx]
  4236a5:	stos   DWORD PTR es:[edi],eax
  4236a6:	mov    ds:0xc2950962,eax
  4236ab:	cmc    
  4236ac:	adc    BYTE PTR [esi],al
  4236ae:	leave  
  4236af:	outs   dx,DWORD PTR ds:[esi]
  4236b0:	jns    0x423658
  4236b2:	adc    BYTE PTR [esi+0xf],al
  4236b5:	push   ss
  4236b6:	or     dh,BYTE PTR [edx-0x658e15ac]
  4236bc:	sub    eax,0xe99376fd
  4236c1:	not    BYTE PTR [ebx+0x7ddf369b]
  4236c7:	mov    ebp,DWORD PTR [edx-0x9]
  4236ca:	inc    eax
  4236cb:	sbb    eax,0x12d8e225
  4236d0:	push   ecx
  4236d1:	jnp    0x423727
  4236d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236d4:	in     al,dx
  4236d5:	xchg   edx,eax
  4236d6:	mov    ah,0x6b
  4236d8:	push   ss
  4236d9:	and    BYTE PTR [esi+0x70],cl
  4236dc:	mov    WORD PTR [ecx],?
  4236de:	cmp    BYTE PTR [esi-0x43a3c5d3],dl
  4236e4:	mov    cl,0xe
  4236e6:	inc    edi
  4236e7:	cmp    ebp,DWORD PTR [esi+0x40412eb8]
  4236ed:	pop    edi
  4236ef:	jno    0x42374e
  4236f1:	mov    al,ds:0x7f6fbf5c
  4236f6:	repnz add edx,eax
  4236f9:	push   0x61c96a1
  4236fe:	leave  
  4236ff:	stos   BYTE PTR es:[edi],al
  423700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423701:	(bad)  [ebp+0x7d44fd8f]
  423707:	popf   
  423708:	mov    dh,0xb7
  42370a:	mov    dl,0x98
  42370c:	and    eax,0x40927522
  423711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423712:	imul   BYTE PTR ds:0xcb2c549f
  423718:	adc    BYTE PTR [esp+esi*1],0x3a
  42371c:	sbb    cl,0x29
  42371f:	loope  0x4236dc
  423721:	cdq    
  423722:	or     ch,BYTE PTR [ecx+0x50c192f2]
  423728:	out    0x61,al
  42372a:	mov    ebp,?
  42372c:	cmp    bh,BYTE PTR [edi-0x50ac007d]
  423732:	add    eax,0x7ad198cc
  423737:	fldcw  WORD PTR [edx]
  423739:	aas    
  42373a:	scas   al,BYTE PTR es:[edi]
  42373b:	inc    ebp
  42373c:	inc    ebp
  42373d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42373e:	daa    
  42373f:	and    dl,ch
  423741:	fs out 0xc0,eax
  423744:	sub    BYTE PTR [eax],dl
  423746:	jno    0x4236fe
  423748:	in     eax,0x84
  42374a:	imul   esi,DWORD PTR [eax-0x40cdbb97],0xfd1c7e3c
  423754:	dec    edx
  423755:	mov    ebp,0x7ae3f27f
  42375a:	inc    ecx
  42375b:	dec    edi
  42375c:	cwde   
  42375d:	cmp    DWORD PTR [eax+0x26],0xd9465589
  423764:	sub    ebx,ebp
  423766:	and    ebp,DWORD PTR [ecx-0x19]
  423769:	inc    ecx
  42376a:	and    edi,edx
  42376c:	int    0xd9
  42376e:	imul   ebx,DWORD PTR [edi-0x3b],0xffffff9b
  423772:	shr    DWORD PTR [ecx-0x2e],cl
  423775:	icebp  
  423776:	mov    cs,esp
  423778:	imul   esi,DWORD PTR [esi-0x26],0x429abac4
  42377f:	les    eax,FWORD PTR [edx-0x42]
  423782:	vmread DWORD PTR [eax-0x14],ecx
  423786:	add    BYTE PTR [ebx-0x33],dh
  423789:	ins    BYTE PTR es:[edi],dx
  42378a:	mov    cl,0x25
  42378c:	dec    edx
  42378d:	rol    DWORD PTR [edx+esi*8],1
  423790:	sub    ecx,esi
  423792:	mov    ds:0x7c473d28,al
  423797:	inc    ebx
  423798:	jbe    0x4237cf
  42379a:	test   al,0x54
  42379c:	jp     0x4237c5
  42379e:	dec    ebp
  42379f:	das    
  4237a0:	xor    BYTE PTR [ebx],dh
  4237a2:	ins    DWORD PTR es:[edi],dx
  4237a3:	ja     0x42381d
  4237a5:	shl    BYTE PTR [esi],cl
  4237a7:	fcmovnu st,st(1)
  4237a9:	sbb    BYTE PTR [edx+0x19],0x83
  4237ad:	sub    esi,DWORD PTR [eax-0x57552b3d]
  4237b3:	bound  ebx,QWORD PTR [esi+esi*2]
  4237b6:	mov    eax,0x3ea0c8d
  4237bb:	fs push es
  4237bd:	jg     0x423814
  4237bf:	daa    
  4237c0:	mov    eax,0xc6e8546d
  4237c5:	xor    BYTE PTR [ecx+0x30ce4b96],ah
  4237cb:	or     ch,al
  4237cd:	or     DWORD PTR [esi+0x4e0d54a3],ebp
  4237d3:	mov    ds:0x98f38095,al
  4237d8:	sbb    eax,0xffffffdd
  4237db:	daa    
  4237dc:	nop
  4237dd:	cld    
  4237de:	push   ebp
  4237df:	js     0x4237c3
  4237e1:	bound  esi,QWORD PTR [eax]
  4237e3:	mov    BYTE PTR [ebx-0x52],bl
  4237e6:	mov    eax,0xffe3e80d
  4237eb:	cli    
  4237ec:	imul   eax,DWORD PTR [edx+0x6],0x238916ae
  4237f3:	mov    al,BYTE PTR [esi+eax*2-0x52]
  4237f7:	in     al,0xc6
  4237f9:	mov    dl,0xbf
  4237fb:	inc    esi
  4237fc:	jnp    0x423815
  4237fe:	push   ebp
  4237ff:	ss jmp 0x423785
  423802:	and    ebp,esi
  423804:	jae    0x4237df
  423806:	rcl    DWORD PTR [edx-0x75],0x2f
  42380a:	add    ecx,DWORD PTR [edx]
  42380c:	mov    dh,bh
  42380e:	jbe    0x42379f
  423810:	push   edi
  423811:	ins    BYTE PTR es:[edi],dx
  423812:	(bad)  
  423813:	push   edx
  423814:	lahf   
  423815:	push   cs
  423816:	addr16 cmp eax,0x3cc45126
  42381c:	xchg   ebp,eax
  42381d:	push   eax
  42381e:	pop    edx
  42381f:	cmp    BYTE PTR [ecx-0x1e],ah
  423822:	dec    ebx
  423823:	into   
  423824:	sbb    DWORD PTR gs:[ebp+0x61],esp
  423828:	aaa    
  423829:	pusha  
  42382a:	jmp    0x4238a6
  42382c:	je     0x4237e5
  42382e:	pop    ebp
  42382f:	mov    ebx,DWORD PTR [ebp-0x40]
  423832:	(bad)  
  423833:	imul   ebx,DWORD PTR [ebx-0x124711d7],0x41
  42383a:	mov    esi,0x429ab69d
  42383f:	mov    ds:0xa070650a,eax
  423844:	jecxz  0x4237f6
  423846:	dec    edx
  423847:	mov    DWORD PTR [edx-0x162ba1],esi
  42384d:	xor    BYTE PTR [edx+0x7143cfcc],0xff
  423854:	pop    edi
  423855:	mov    ebp,0xafc265a5
  42385a:	pop    ss
  42385b:	mov    ebp,0x2ae7e45e
  423860:	test   al,0x61
  423862:	addr16 mov eax,ds:0x7194
  423866:	into   
  423867:	call   0x2bb5:0x4b35cbe3
  42386e:	shr    ch,cl
  423870:	adc    dl,BYTE PTR gs:[ebp+edx*4+0x6c883e14]
  423878:	jle    0x4238f8
  42387a:	sub    ecx,DWORD PTR [eax-0x1ccfb3a3]
  423880:	(bad)  
  423881:	clc    
  423882:	dec    eax
  423883:	sbb    eax,0x8ae24277
  423888:	rol    DWORD PTR [esi],0x74
  42388b:	ds xor ah,ch
  42388e:	sar    BYTE PTR [eax+ebp*2-0x7],cl
  423892:	xor    dl,0xfc
  423895:	inc    ebp
  423896:	sbb    al,BYTE PTR [eax-0x1]
  423899:	add    ah,BYTE PTR [ebp+0x1b80867d]
  42389f:	int    0xc3
  4238a1:	in     eax,0xc7
  4238a3:	in     eax,0xea
  4238a5:	pushf  
  4238a6:	pusha  
  4238a7:	cmp    edi,DWORD PTR [edi+0x1c0e2419]
  4238ad:	or     eax,0xd251845e
  4238b2:	mov    esi,0x98b043de
  4238b7:	push   0x75c9f7b4
  4238bc:	inc    ecx
  4238bd:	xchg   esp,eax
  4238be:	push   0xdc58f6e
  4238c3:	cmp    DWORD PTR [ebx+0x54742811],ebx
  4238c9:	mov    ds:0x53e1add7,al
  4238ce:	nop
  4238cf:	iret   
  4238d0:	clts   
  4238d2:	cmp    DWORD PTR [ebx+0x5482cff8],esp
  4238d8:	jne    0x4238ce
  4238da:	jmp    0xce7:0xffa2c78e
  4238e1:	jno    0x42388b
  4238e3:	stos   DWORD PTR es:[edi],eax
  4238e4:	xchg   ecx,ecx
  4238e6:	cld    
  4238e7:	lods   al,BYTE PTR gs:[esi]
  4238e9:	cmp    al,0x11
  4238eb:	into   
  4238ec:	lock lods al,BYTE PTR ds:[esi]
  4238ee:	pop    ds
  4238ef:	out    dx,al
  4238f0:	in     al,0x6f
  4238f2:	or     ah,BYTE PTR [ebp-0x8292bf8]
  4238f8:	push   es
  4238f9:	retf   0xd288
  4238fc:	daa    
  4238fd:	xchg   edx,eax
  4238fe:	sbb    dh,BYTE PTR [edi-0x6]
  423901:	lahf   
  423902:	ret    0xb716
  423905:	sbb    BYTE PTR [edx],bl
  423907:	xor    eax,0xf3ee3068
  42390c:	dec    ecx
  42390d:	push   cs
  42390e:	push   edx
  42390f:	ret    0x1a0c
  423912:	xor    eax,0x480839fd
  423917:	retf   
  423918:	add    eax,0xcc307447
  42391d:	inc    ebp
  42391e:	xor    al,0xfe
  423920:	leave  
  423921:	pop    edx
  423922:	mov    al,0xdc
  423924:	adc    al,0x94
  423926:	hlt    
  423927:	outs   dx,DWORD PTR ds:[esi]
  423928:	fwait
  423929:	dec    edx
  42392a:	mov    dl,0x94
  42392c:	dec    ebp
  42392d:	cmc    
  42392e:	xchg   esp,eax
  42392f:	lods   eax,DWORD PTR ds:[esi]
  423930:	adc    BYTE PTR [esi-0x16498fda],0x5d
  423937:	jnp    0x423980
  423939:	mov    edx,0x539303a2
  42393e:	jecxz  0x4239a2
  423940:	mov    ah,0x4e
  423942:	push   cs
  423943:	mov    ds:0x86351ff5,al
  423948:	cs (bad) 
  42394a:	imul   si,di,0x0
  42394e:	mov    WORD PTR [ecx+0x64],ds
  423951:	ss jmp 0x47ed8afc
  423957:	sub    eax,0x3d748710
  42395c:	xchg   BYTE PTR [edi],cl
  42395e:	mov    esi,0x98fbd0a4
  423963:	scas   eax,DWORD PTR es:[edi]
  423964:	sahf   
  423965:	cli    
  423966:	pop    edi
  423967:	scas   eax,DWORD PTR es:[edi]
  423968:	inc    edi
  423969:	adc    DWORD PTR [edi-0x6a71d832],edx
  42396f:	cmp    al,0xd3
  423971:	call   0x76d5:0x596efce
  423978:	loop   0x42398e
  42397a:	hlt    
  42397b:	mov    dl,0xef
  42397d:	sbb    BYTE PTR [ebx],dl
  42397f:	out    dx,eax
  423980:	sti    
  423981:	mov    ebx,eax
  423983:	and    eax,0xb51492af
  423988:	dec    eax
  423989:	inc    ebp
  42398a:	xor    cl,bh
  42398c:	sar    BYTE PTR [ebx+0x5f],1
  42398f:	pop    ds
  423990:	pop    ss
  423991:	cwde   
  423992:	mov    eax,ds:0x11b60921
  423997:	je     0x423921
  423999:	stc    
  42399a:	mov    ah,0xf9
  42399c:	adc    ebp,0xbe96e2
  4239a2:	push   edi
  4239a3:	mov    ah,0x7
  4239a5:	clc    
  4239a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239a7:	pushf  
  4239a8:	pusha  
  4239a9:	add    esp,DWORD PTR cs:[ebx+0x11]
  4239ad:	pusha  
  4239ae:	mov    al,ds:0xd76eb1e
  4239b3:	mov    dl,0x17
  4239b5:	jb     0x423967
  4239b7:	push   0x9beb9d49
  4239bc:	repz pop eax
  4239be:	dec    esi
  4239bf:	mov    dl,0xba
  4239c1:	adc    edi,ebp
  4239c3:	and    al,0xf0
  4239c5:	sbb    eax,0xbe039dcb
  4239ca:	or     ecx,DWORD PTR [esi+0x6e1dab2c]
  4239d0:	ret    
  4239d1:	gs inc eax
  4239d3:	jae    0x4239a4
  4239d5:	js     0x4239ce
  4239d7:	test   BYTE PTR [edi],ch
  4239d9:	jo     0x42398b
  4239db:	dec    edi
  4239dc:	xchg   esi,eax
  4239dd:	sub    DWORD PTR [ecx+0x10998772],esp
  4239e3:	push   ss
  4239e4:	mov    cl,0x1d
  4239e6:	cld    
  4239e7:	les    esp,FWORD PTR [edx+0x41]
  4239ea:	lods   al,BYTE PTR ds:[esi]
  4239eb:	pop    edx
  4239ec:	div    BYTE PTR [edx]
  4239ee:	lea    ebx,[esi+0x19]
  4239f1:	gs add al,0x9c
  4239f4:	jae    0x423a5b
  4239f6:	test   ch,dl
  4239f8:	cmp    cl,cl
  4239fa:	int    0x60
  4239fc:	push   esp
  4239fd:	pop    edi
  4239fe:	dec    esi
  4239ff:	or     DWORD PTR [ecx-0x1536a911],edx
  423a05:	ret    0xba83
  423a08:	test   DWORD PTR [ebp-0x34],0xac2964e3
  423a0f:	div    DWORD PTR [ebx+ebp*2]
  423a12:	hlt    
  423a13:	sbb    BYTE PTR [esi+ecx*1-0x2c],ah
  423a17:	xchg   dh,bl
  423a19:	jp     0x423a94
  423a1b:	or     bh,BYTE PTR [edi-0x681064f8]
  423a21:	push   ebp
  423a22:	mov    eax,ds:0x845254e0
  423a27:	inc    esp
  423a28:	rcl    DWORD PTR [edx+0x3cba159],1
  423a2e:	bound  edx,QWORD PTR [edi-0x146d7f2e]
  423a34:	cmp    ebx,ecx
  423a36:	pop    es
  423a37:	jb     0x423a39
  423a39:	ins    BYTE PTR es:[edi],dx
  423a3a:	add    al,0xa3
  423a3c:	mov    al,ds:0x1131de7d
  423a41:	fcomp  QWORD PTR [edi]
  423a43:	rcl    DWORD PTR [ecx-0x57],1
  423a46:	fcmovne st,st(1)
  423a48:	imul   ebx,DWORD PTR [ebp-0x7d35373c],0x64
  423a4f:	jo     0x423a08
  423a51:	mov    WORD PTR [ecx+0x34],fs
  423a54:	xor    BYTE PTR [ebp+0x38],bl
  423a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a58:	xor    al,0x13
  423a5a:	out    dx,al
  423a5b:	jo     0x423a69
  423a5d:	xor    ah,bh
  423a5f:	xchg   esi,eax
  423a60:	sub    ebx,ebx
  423a62:	mov    edx,0xa15b5867
  423a67:	sbb    ah,bh
  423a69:	inc    ebx
  423a6a:	adc    ch,BYTE PTR [esi]
  423a6c:	pop    ecx
  423a6d:	(bad)  
  423a6e:	pop    eax
  423a6f:	jl     0x423a89
  423a71:	push   eax
  423a72:	cmp    esp,esi
  423a74:	adc    eax,ecx
  423a76:	push   ecx
  423a77:	out    dx,al
  423a78:	dec    ecx
  423a79:	push   esp
  423a7a:	sar    BYTE PTR [edi-0x1a],1
  423a7d:	ds jp  0x423aae
  423a80:	scas   eax,DWORD PTR es:[edi]
  423a81:	retf   0xd468
  423a84:	adc    eax,DWORD PTR [ecx]
  423a86:	inc    edi
  423a87:	inc    esi
  423a88:	mov    eax,0x91bdd412
  423a8d:	cmp    ah,BYTE PTR [ebp+0x6d405890]
  423a93:	aad    0x3
  423a95:	mov    ds:0x32bef3ba,eax
  423a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a9b:	sub    edi,DWORD PTR [eax-0x9]
  423a9e:	dec    esp
  423a9f:	lock jnp 0x423ada
  423aa2:	xchg   edx,eax
  423aa3:	inc    esp
  423aa4:	pop    ebx
  423aa5:	add    esp,DWORD PTR [eax]
  423aa7:	sub    BYTE PTR [esi],al
  423aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423aaa:	and    DWORD PTR [eax-0x45],ebx
  423aad:	lock mov al,ds:0xfedf0bc9
  423ab3:	cmc    
  423ab4:	addr16 or al,0x6f
  423ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ab8:	fs shr ebx,0x1f
  423abc:	add    DWORD PTR ds:[edx+0x2f],esp
  423ac0:	stos   DWORD PTR es:[edi],eax
  423ac1:	adc    al,0x7d
  423ac3:	fcmovbe st,st(5)
  423ac5:	lods   al,BYTE PTR ds:[esi]
  423ac6:	fild   DWORD PTR [ecx-0x3cf5da23]
  423acc:	push   eax
  423acd:	sbb    eax,0x687e5667
  423ad2:	xor    eax,ebp
  423ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ad5:	add    cl,ch
  423ad7:	cmp    esp,ecx
  423ad9:	retf   0xd1b0
  423adc:	call   0xc19a:0xc1fdae96
  423ae3:	out    0xb5,al
  423ae5:	mov    ebx,0x3271933b
  423aea:	mov    ds:0xb50fedf2,al
  423aef:	inc    edi
  423af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af1:	jo     0x423aeb
  423af3:	xchg   BYTE PTR [ebp-0x79e76c4],cl
  423af9:	out    dx,eax
  423afa:	enter  0x4f6a,0xe9
  423afe:	mov    al,ds:0xb9c45814
  423b03:	inc    esi
  423b04:	cld    
  423b05:	and    bh,BYTE PTR [eax+0x19]
  423b08:	push   ebp
  423b09:	fdivp  st(6),st
  423b0b:	imul   DWORD PTR [ebx-0x3433b4bf]
  423b11:	xor    al,0xa1
  423b13:	popf   
  423b14:	mov    eax,ds
  423b16:	lahf   
  423b17:	add    eax,0x82520535
  423b1c:	fwait
  423b1d:	test   BYTE PTR [ebx],ah
  423b1f:	jl     0x423b8e
  423b21:	js     0x423b8f
  423b23:	cmp    eax,0x8a0c5250
  423b28:	sar    dh,1
  423b2a:	ret    0x3236
  423b2d:	jmp    0x18ca:0x320cba95
  423b34:	int3   
  423b35:	aad    0xd0
  423b37:	stos   BYTE PTR es:[edi],al
  423b38:	jp     0x423ba6
  423b3a:	loopne 0x423b59
  423b3c:	pop    ebx
  423b3d:	int3   
  423b3e:	sbb    eax,0x7ddd7cb8
  423b43:	ins    DWORD PTR es:[edi],dx
  423b44:	stc    
  423b45:	cwde   
  423b46:	scas   eax,DWORD PTR es:[edi]
  423b47:	sbb    al,0x71
  423b49:	addr16 cmc 
  423b4b:	(bad)  
  423b4c:	mov    ch,0x9c
  423b4e:	enter  0xb2b3,0xa
  423b52:	aam    0x83
  423b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b55:	add    DWORD PTR [ecx],eax
  423b57:	cdq    
  423b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b59:	pop    ss
  423b5a:	enter  0xd115,0x5e
  423b5e:	outs   dx,BYTE PTR ds:[esi]
  423b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b60:	loope  0x423b92
  423b62:	push   ebp
  423b63:	mov    eax,DWORD PTR [eax-0x19]
  423b66:	les    edi,FWORD PTR [edi-0x3c]
  423b69:	jmp    0x759e76d6
  423b6e:	and    edx,DWORD PTR [edx-0x2ce28102]
  423b74:	scas   eax,DWORD PTR es:[edi]
  423b75:	in     eax,dx
  423b76:	fxch   st(5)
  423b78:	sub    dh,cl
  423b7a:	mov    ds:0xf48cffb1,al
  423b7f:	mov    ah,0xc0
  423b81:	aaa    
  423b82:	jg     0x423b30
  423b84:	cmp    al,BYTE PTR [eax+0x7d8d08b8]
  423b8a:	sbb    BYTE PTR [eax-0x7687713],al
  423b90:	push   edi
  423b91:	jnp    0x423b82
  423b93:	icebp  
  423b94:	dec    esp
  423b95:	fadd   DWORD PTR [ecx+0x79]
  423b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b99:	and    eax,0x4d8f89ca
  423b9e:	pop    ecx
  423b9f:	jbe    0x423b97
  423ba1:	dec    ebx
  423ba2:	mov    dl,0xed
  423ba4:	int    0xeb
  423ba6:	cmp    ecx,DWORD PTR [ecx-0x22]
  423ba9:	or     eax,0xd556c567
  423bae:	xchg   edx,eax
  423baf:	dec    ebx
  423bb0:	jmp    0x469e:0x1ad7326d
  423bb7:	inc    ebp
  423bb8:	xor    ch,BYTE PTR [esi]
  423bba:	in     al,dx
  423bbb:	retf   
  423bbc:	nop
  423bbd:	mov    al,0xd
  423bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bc0:	fstp   st(1)
  423bc2:	lds    esi,FWORD PTR [edi-0x68]
  423bc5:	jp     0x423bbe
  423bc7:	mov    DWORD PTR [edx-0x6d],ebx
  423bca:	test   eax,0x612879cd
  423bcf:	sub    DWORD PTR [edx-0x29],edi
  423bd2:	mov    eax,0xfdabef2b
  423bd7:	sub    DWORD PTR [esi-0x18498853],esi
  423bdd:	pop    ecx
  423bde:	sub    ah,BYTE PTR [edx]
  423be0:	xor    bh,BYTE PTR [ecx+0x5bfe498b]
  423be6:	xchg   esi,eax
  423be7:	xchg   esp,eax
  423be8:	dec    ebx
  423be9:	jg     0x423bea
  423beb:	rol    BYTE PTR [ebx+0x73],0xb
  423bef:	and    esp,DWORD PTR [edx-0x71]
  423bf2:	ret    
  423bf3:	je     0x423bf0
  423bf5:	inc    ecx
  423bf6:	dec    eax
  423bf7:	add    DWORD PTR [edi+ebp*2-0x68],ecx
  423bfb:	dec    edx
  423bfc:	out    dx,al
  423bfd:	inc    edx
  423bfe:	rol    bh,cl
  423c00:	leave  
  423c01:	lock mov esi,0x5d8a8b33
  423c07:	aas    
  423c08:	and    DWORD PTR [edx+0x37],0xb78e60c2
  423c0f:	sbb    DWORD PTR [ecx],ebp
  423c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c12:	add    DWORD PTR [esi+0x73],ebp
  423c15:	cmp    bl,BYTE PTR [ebx+edx*8+0x2e368550]
  423c1c:	imul   esi,edx,0x58d6ec1
  423c22:	scas   eax,DWORD PTR es:[edi]
  423c23:	jl     0x423bc8
  423c25:	repnz pop ds
  423c27:	adc    bl,BYTE PTR [edi+0x1754ff83]
  423c2d:	enter  0xad7d,0x7a
  423c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c32:	test   eax,0xd9200532
  423c37:	hlt    
  423c38:	push   es
  423c39:	push   ecx
  423c3a:	mov    ah,BYTE PTR [ecx+0x69]
  423c3d:	jle    0x423c26
  423c3f:	jae    0x423be6
  423c41:	add    BYTE PTR [esi-0x4a],bh
  423c44:	or     esi,DWORD PTR [esi-0x5d]
  423c47:	adc    al,0x8e
  423c49:	fisttp QWORD PTR [edx-0x2d]
  423c4c:	jmp    0xc111fde1
  423c51:	cmp    ah,BYTE PTR es:[eax]
  423c54:	jns    0x423c6f
  423c56:	add    BYTE PTR [esi],bh
  423c58:	xor    al,0xd2
  423c5a:	xor    al,0xee
  423c5c:	push   ecx
  423c5d:	push   ss
  423c5e:	fs dec ebx
  423c60:	pop    esi
  423c62:	fsubr  QWORD PTR [ebp-0x74]
  423c65:	add    DWORD PTR [ecx+ebx*4+0x58],ebx
  423c69:	iret   
  423c6a:	ja     0x423c8a
  423c6c:	mov    esp,0x4cb0a881
  423c71:	jmp    0x423c18
  423c73:	mov    bl,0x11
  423c75:	mov    eax,ds:0x109ce511
  423c7a:	mov    esi,0x20e469c4
  423c7f:	add    bh,BYTE PTR [ebx+0x4a]
  423c82:	mov    esp,0x2dae4e54
  423c87:	imul   esi,DWORD PTR [eax-0x11717298],0xa8590213
  423c91:	jecxz  0x423cbd
  423c93:	lahf   
  423c94:	jne    0x423cc0
  423c96:	ret    0xbb15
  423c99:	mov    ebx,0xe3a35b6f
  423c9e:	dec    ebp
  423c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ca0:	mov    edx,0xac0c3975
  423ca5:	push   ecx
  423ca6:	adc    BYTE PTR [edx],dh
  423ca8:	mov    cl,0x80
  423caa:	repnz rol DWORD PTR [edx],1
  423cad:	cmp    bh,BYTE PTR [ebx]
  423caf:	dec    edx
  423cb0:	push   esi
  423cb1:	and    dh,BYTE PTR [ecx-0x261535d9]
  423cb7:	(bad)  
  423cb8:	(bad)  
  423cb9:	cmp    al,bl
  423cbb:	lock pop edi
  423cbd:	fs (bad) 
  423cc0:	cmp    al,0xdb
  423cc2:	mov    fs,esp
  423cc4:	xchg   esi,eax
  423cc5:	retf   0xb18c
  423cc8:	push   ebp
  423cc9:	dec    ebx
  423cca:	bound  edx,QWORD PTR [edi+edx*4]
  423ccd:	xor    bh,BYTE PTR [esi+0x61c7ef7c]
  423cd3:	pop    esi
  423cd4:	cmc    
  423cd5:	fiadd  WORD PTR cs:[ebp-0x32]
  423cd9:	pop    ecx
  423cda:	es stos WORD PTR es:[edi],ax
  423cdd:	sahf   
  423cde:	push   edi
  423cdf:	push   esi
  423ce0:	jge    0x423cd5
  423ce2:	and    al,0xe
  423ce4:	outs   dx,BYTE PTR ds:[esi]
  423ce5:	stc    
  423ce6:	sahf   
  423ce7:	les    edx,FWORD PTR [esi-0xe6c68a8]
  423ced:	pop    edx
  423cee:	stos   BYTE PTR es:[edi],al
  423cef:	test   eax,0x6898b8d2
  423cf4:	in     eax,dx
  423cf5:	call   0x7f19:0xabea46ce
  423cfc:	pop    esp
  423cfd:	xor    al,0xc9
  423cff:	repz inc edi
  423d01:	out    0xb,al
  423d03:	fcom   DWORD PTR [ecx+0x2e]
  423d06:	push   ebx
  423d07:	sbb    edi,DWORD PTR [ebx+0x1f0e450b]
  423d0d:	cmp    BYTE PTR [edx+0x3a8bce69],al
  423d13:	nop
  423d14:	aaa    
  423d15:	lahf   
  423d16:	das    
  423d17:	leave  
  423d18:	xchg   ebx,eax
  423d19:	test   al,0x48
  423d1b:	and    ebx,DWORD PTR [edx+0x75]
  423d1e:	sar    BYTE PTR [ecx],1
  423d20:	(bad)  
  423d21:	std    
  423d22:	inc    esi
  423d23:	icebp  
  423d24:	test   eax,0x1428bd84
  423d29:	mov    dl,0x5a
  423d2b:	jl     0x423cb9
  423d2d:	std    
  423d2e:	addr16 fwait
  423d30:	sar    BYTE PTR [edx+0x6f],1
  423d33:	in     al,0x7c
  423d35:	lods   eax,DWORD PTR ds:[esi]
  423d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d37:	fcomip st,st(0)
  423d39:	aam    0xea
  423d3b:	(bad)  
  423d3c:	jmp    FWORD PTR ds:0x12911c9f
  423d42:	repz mov dh,0x12
  423d45:	adc    dl,bl
  423d47:	xchg   esi,eax
  423d48:	stos   BYTE PTR es:[edi],al
  423d49:	dec    ecx
  423d4a:	cld    
  423d4b:	icebp  
  423d4c:	sub    BYTE PTR [eax],0x71
  423d4f:	test   al,0x92
  423d51:	fucomip st,st(6)
  423d53:	pop    esi
  423d54:	iret   
  423d55:	enter  0xea2,0x9b
  423d59:	outs   dx,DWORD PTR ds:[esi]
  423d5a:	pop    esi
  423d5b:	loop   0x423d56
  423d5d:	in     al,dx
  423d5e:	add    al,0x82
  423d60:	push   edi
  423d61:	(bad)
  423d64:	push   ecx
  423d65:	lock ret 
  423d67:	adc    DWORD PTR [ebp-0x73],edx
  423d6a:	mov    al,ds:0x1afb8121
  423d6f:	xchg   edi,eax
  423d70:	test   al,0x74
  423d72:	mov    DWORD PTR [edx-0x25],eax
  423d75:	fisttp DWORD PTR [eax-0x42]
  423d78:	(bad)  
  423d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d7b:	sbb    al,0xaf
  423d7d:	pushf  
  423d7e:	jnp    0x423d84
  423d80:	pop    ss
  423d81:	cli    
  423d82:	inc    eax
  423d83:	jb     0x423d43
  423d85:	and    al,BYTE PTR [eax+0x5807c324]
  423d8b:	test   BYTE PTR [ebx+0x28],dl
  423d8e:	js     0x423df5
  423d90:	or     dh,ah
  423d92:	dec    esi
  423d93:	sbb    bl,ah
  423d95:	adc    BYTE PTR [eax],cl
  423d97:	push   es
  423d98:	shl    edi,1
  423d9a:	ror    DWORD PTR ds:0xc2fceb37,1
  423da0:	test   BYTE PTR [ecx],bh
  423da2:	inc    edx
  423da3:	lahf   
  423da4:	pop    ebp
  423da5:	fs bound ebp,QWORD PTR ds:[edx]
  423da9:	pop    eax
  423daa:	push   cs
  423dab:	mov    bh,0x21
  423dad:	(bad)  
  423dae:	xlat   BYTE PTR ds:[ebx]
  423daf:	jle    0x423d56
  423db1:	xchg   ebx,eax
  423db2:	sub    BYTE PTR [ecx],cl
  423db4:	mov    al,ds:0x49b5c210
  423db9:	outs   dx,DWORD PTR ds:[esi]
  423dba:	call   0x6cef:0xd5ddff88
  423dc1:	mov    bh,0xf8
  423dc3:	xchg   ebp,eax
  423dc4:	mov    fs,WORD PTR [eax]
  423dc6:	lock xor dh,bh
  423dc9:	jmp    0x423d9c
  423dcb:	into   
  423dcc:	push   ss
  423dcd:	(bad)  
  423dce:	jmp    0x192e8bf2
  423dd3:	lods   al,BYTE PTR ds:[esi]
  423dd4:	fisubr DWORD PTR [esi]
  423dd6:	pop    ebp
  423dd7:	cmp    esp,0xe353c2a3
  423ddd:	pop    edx
  423dde:	push   ebp
  423ddf:	sti    
  423de0:	clc    
  423de1:	jbe    0x423dee
  423de3:	and    bh,BYTE PTR [edi-0x45b12270]
  423de9:	fistp  DWORD PTR [eax+0x2cc888dc]
  423def:	adc    esi,DWORD PTR [edi+0x3c76aa4f]
  423df5:	sbb    DWORD PTR [ebp-0x7f12485f],ecx
  423dfb:	mov    cl,0x29
  423dfd:	jl     0x423e6f
  423dff:	mov    BYTE PTR [esi],cl
  423e01:	scas   al,BYTE PTR es:[edi]
  423e02:	ret    
  423e03:	mov    BYTE PTR [eax+0x68],bh
  423e06:	pop    esp
  423e07:	dec    ebp
  423e08:	fsubr  st(3),st
  423e0a:	dec    ecx
  423e0b:	bound  ecx,QWORD PTR [esi]
  423e0d:	push   esi
  423e0e:	push   0xffffffa3
  423e10:	mov    al,ds:0x646562dc
  423e15:	(bad)  
  423e16:	push   edx
  423e17:	mov    dh,0xc8
  423e19:	sub    DWORD PTR ds:0x22b1351f,edi
  423e1f:	jl     0x423e00
  423e21:	xchg   esp,eax
  423e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e23:	repz dec ebp
  423e25:	mov    edi,0x55ca40c3
  423e2a:	out    0x93,eax
  423e2c:	jp     0x423e25
  423e2e:	bound  esi,QWORD PTR [ebx]
  423e30:	daa    
  423e31:	inc    edi
  423e32:	hlt    
  423e33:	sbb    dl,BYTE PTR [ebx]
  423e35:	sbb    DWORD PTR [eax],ebx
  423e37:	xor    esi,DWORD PTR [eax-0x71c6f0f3]
  423e3d:	mov    ebp,0x34a87a62
  423e42:	inc    esp
  423e43:	mov    bh,BYTE PTR [edx+0x5f075195]
  423e49:	iret   
  423e4a:	(bad)  
  423e4b:	fs push esp
  423e4d:	cld    
  423e4e:	xchg   ecx,eax
  423e4f:	cmp    BYTE PTR [edx+ecx*4+0x5a28b4f6],al
  423e56:	outs   dx,DWORD PTR ds:[esi]
  423e57:	cmp    al,0x8e
  423e59:	cdq    
  423e5a:	fmul   QWORD PTR [edi]
  423e5c:	stos   BYTE PTR es:[edi],al
  423e5d:	(bad)  
  423e5e:	(bad)  
  423e5f:	mov    edi,0xf64a9206
  423e64:	ds mov esp,0xad386af9
  423e6a:	test   al,0x76
  423e6c:	inc    ecx
  423e6d:	adc    DWORD PTR [ebx],ebp
  423e6f:	ja     0x423e89
  423e71:	fisttp QWORD PTR [ebp-0x76]
  423e74:	(bad)  
  423e75:	cwde   
  423e76:	gs fwait
  423e78:	es inc ecx
  423e7a:	mov    ebx,0x4c76df96
  423e7f:	mov    dl,0x46
  423e81:	mov    bh,0xae
  423e83:	dec    ebp
  423e84:	xchg   edi,eax
  423e85:	das    
  423e86:	bound  edx,QWORD PTR [ebp-0xcf6a459]
  423e8c:	(bad)  
  423e8d:	push   ds
  423e8e:	and    bl,ch
  423e90:	dec    edi
  423e91:	xlat   BYTE PTR ds:[ebx]
  423e92:	imul   edx,edx,0x39
  423e95:	cld    
  423e96:	or     DWORD PTR es:[ebx+0x3c],ecx
  423e9a:	pop    esp
  423e9b:	aas    
  423e9c:	stos   DWORD PTR es:[edi],eax
  423e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e9e:	push   es
  423e9f:	sub    eax,ebx
  423ea1:	fisttp QWORD PTR [ebx]
  423ea3:	cs dec ebx
  423ea5:	mov    ebp,0x8750c0d6
  423eaa:	fsubr  st,st(2)
  423eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ead:	mov    esi,0x96e37df
  423eb2:	lock dec ecx
  423eb4:	cs in  al,0x24
  423eb7:	push   ebp
  423eb8:	cdq    
  423eb9:	loopne 0x423e40
  423ebb:	fwait
  423ebc:	(bad)  
  423ebd:	addr16 sub al,0xff
  423ec0:	fdivr  st,st(7)
  423ec2:	out    0x8a,al
  423ec4:	sahf   
  423ec5:	(bad)  
  423ec6:	repnz pop ebx
  423ec8:	mov    ch,0xfe
  423eca:	add    ah,cl
  423ecc:	jo     0x423ead
  423ece:	mov    bl,BYTE PTR [ecx]
  423ed0:	sbb    ah,0x15
  423ed3:	jbe    0x423e80
  423ed5:	lods   eax,DWORD PTR ds:[esi]
  423ed6:	xchg   ebp,eax
  423ed7:	sub    DWORD PTR [edx+eiz*4+0x4acb73d0],eax
  423ede:	(bad)  
  423ee0:	or     edx,eax
  423ee2:	sub    al,0x4c
  423ee4:	cdq    
  423ee5:	dec    esi
  423ee6:	mov    edx,0xddd385f7
  423eeb:	and    edi,DWORD PTR [ecx+0x8]
  423eee:	cmc    
  423eef:	nop
  423ef0:	or     BYTE PTR [ecx-0x38823b4d],0xbe
  423ef7:	sub    DWORD PTR [ebp+edi*1-0x3c142099],eax
  423efe:	sbb    edx,DWORD PTR [edx]
  423f00:	mov    al,ds:0xef2e8ce2
  423f05:	pop    edx
  423f06:	mov    DWORD PTR [eax],esp
  423f08:	dec    esi
  423f09:	imul   ebx,DWORD PTR [edi-0x68],0x14c6a7c8
  423f10:	push   0xf10c7b9e
  423f15:	nop
  423f16:	sub    edx,0xffffffba
  423f19:	pop    eax
  423f1a:	xchg   esi,eax
  423f1b:	pop    ds
  423f1c:	dec    edx
  423f1d:	outs   dx,BYTE PTR ds:[esi]
  423f1e:	xor    cl,ch
  423f20:	inc    edx
  423f21:	cmp    ah,BYTE PTR [ecx-0x37]
  423f24:	enter  0x6999,0x9d
  423f28:	fwait
  423f29:	add    ah,dh
  423f2b:	je     0x423f68
  423f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f2e:	(bad)  
  423f2f:	xor    DWORD PTR [eax+0x4b],eax
  423f32:	les    ebp,FWORD PTR [edi-0x4a]
  423f35:	fstp   st(4)
  423f37:	adc    al,0x35
  423f39:	xchg   esi,eax
  423f3a:	scas   al,BYTE PTR es:[edi]
  423f3b:	pop    ebx
  423f3c:	cwde   
  423f3d:	mov    esp,0x53065d4f
  423f42:	mov    ebx,0x7bae2db
  423f47:	icebp  
  423f48:	or     eax,0x8427d6ae
  423f4d:	inc    esi
  423f4e:	loope  0x423ee5
  423f50:	cld    
  423f51:	pop    es
  423f52:	cmc    
  423f53:	inc    edx
  423f54:	outs   dx,BYTE PTR ds:[esi]
  423f55:	repnz arpl WORD PTR [eax-0x14],dx
  423f59:	push   esi
  423f5a:	mov    al,ds:0x2045a2af
  423f5f:	push   es
  423f60:	sub    al,0xf3
  423f62:	je     0x423fb2
  423f64:	mov    esp,0x91de60e4
  423f69:	mov    ebp,0x13dfddb2
  423f6e:	pop    eax
  423f6f:	jne    0x423f06
  423f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f72:	(bad)  
  423f73:	xchg   ebx,eax
  423f74:	stos   BYTE PTR es:[edi],al
  423f75:	test   al,0x9a
  423f77:	lods   al,BYTE PTR ds:[esi]
  423f78:	cwde   
  423f79:	adc    eax,0x64be7841
  423f7e:	sti    
  423f7f:	loop   0x423f10
  423f81:	lods   al,BYTE PTR ds:[esi]
  423f82:	xchg   esi,eax
  423f83:	cmp    ebp,DWORD PTR [edi]
  423f85:	imul   ebx,DWORD PTR [edx+0x76f416a6],0x3acecf42
  423f8f:	inc    edi
  423f90:	ins    DWORD PTR es:[edi],dx
  423f91:	int    0xf2
  423f93:	mov    ds:0x55d21be3,al
  423f98:	or     dh,al
  423f9a:	cli    
  423f9b:	arpl   WORD PTR [esi-0x47],dx
  423f9e:	dec    edi
  423f9f:	retf   0xf12
  423fa2:	cmc    
  423fa3:	mov    ds:0xff9a2a61,al
  423fa8:	xor    al,0xe5
  423faa:	imul   ebp,DWORD PTR ds:[edi-0xf],0x39
  423faf:	in     eax,dx
  423fb0:	pop    ecx
  423fb1:	adc    dl,bl
  423fb3:	stos   BYTE PTR es:[edi],al
  423fb4:	sahf   
  423fb5:	jae    0x423fcb
  423fb7:	int3   
  423fb8:	mov    al,ds:0x9a25a1ab
  423fbd:	pop    esi
  423fbe:	sub    cl,BYTE PTR [edi+0x5b4533c3]
  423fc4:	xor    esi,DWORD PTR [eax+0x7a]
  423fc7:	push   edx
  423fc8:	popf   
  423fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fca:	in     al,0x74
  423fcc:	pop    ebx
  423fcd:	cmp    cl,BYTE PTR [esi+0x6d1513bc]
  423fd3:	cli    
  423fd4:	aam    0x25
  423fd6:	jmp    0x423f83
  423fd8:	adc    cl,BYTE PTR [ecx+0x58]
  423fdb:	int3   
  423fdc:	in     al,dx
  423fdd:	push   ebx
  423fde:	fst    DWORD PTR [esi-0x4a]
  423fe1:	or     al,0xa0
  423fe3:	jns    0x423fa4
  423fe5:	js     0x424028
  423fe7:	fcomp  st(3)
  423fe9:	sbb    al,0x94
  423feb:	sbb    eax,0x8718efca
  423ff0:	in     eax,0xaa
  423ff2:	call   0x68ea:0xfb731847
  423ff9:	sbb    al,0x1b
  423ffb:	sub    dl,cl
  423ffd:	jg     0x423fc1
  423fff:	mov    bl,0x36
  424001:	dec    esi
  424002:	fiadd  DWORD PTR [ebp-0x57]
  424005:	pop    edx
  424006:	mov    ebx,0xeece5e9c
  42400b:	jbe    0x424001
  42400d:	int    0xe6
  42400f:	call   0xbb96:0x1f986a89
  424016:	inc    edi
  424017:	jnp    0x423fcc
  424019:	add    al,0xa4
  42401b:	sbb    cl,BYTE PTR [esi+0x6aca602d]
  424021:	fs nop
  424023:	xchg   BYTE PTR [ebx+ebx*8],cl
  424026:	outs   dx,BYTE PTR ds:[esi]
  424027:	and    bl,al
  424029:	mov    WORD PTR [eax+0x27],cs
  42402c:	dec    ebp
  42402d:	mov    ebp,0x1a818685
  424032:	pop    ss
  424033:	jmp    0x424000
  424035:	or     edx,edi
  424037:	or     DWORD PTR [eax],0xe378c0ee
  42403d:	cmp    DWORD PTR [eax],ebx
  42403f:	(bad)  
  424040:	addr16 lahf 
  424042:	and    ebp,DWORD PTR [ebx]
  424044:	mov    ds:0x61f4ea62,al
  424049:	xchg   edi,eax
  42404a:	in     eax,0x92
  42404c:	xor    ch,al
  42404e:	jge    0x424030
  424050:	xchg   ecx,eax
  424051:	mov    bh,0x7
  424053:	std    
  424054:	lods   al,BYTE PTR ds:[esi]
  424055:	leave  
  424056:	sub    bl,cl
  424058:	dec    esp
  424059:	cmp    eax,0x23140154
  42405e:	add    ax,WORD PTR [edi-0x59cc057d]
  424065:	push   esp
  424066:	loop   0x42406b
  424068:	test   BYTE PTR [ecx-0xf],dh
  42406b:	gs push cs
  42406d:	cmc    
  42406e:	jo     0x424056
  424070:	pop    edx
  424071:	test   DWORD PTR [edx+0x8],ecx
  424074:	mov    cl,0x19
  424076:	out    dx,al
  424077:	mov    sp,WORD PTR cs:[ebp+0x41]
  42407c:	pusha  
  42407d:	pop    edi
  42407e:	aad    0xa5
  424080:	mov    bh,0x53
  424082:	or     esi,0x1b
  424085:	sub    BYTE PTR [edi-0x66],0x49
  424089:	xor    esi,DWORD PTR [ebp+0x5b3f36de]
  42408f:	mov    edi,0xf07d4a42
  424094:	push   edi
  424095:	aas    
  424096:	int3   
  424097:	dec    edi
  424098:	add    esi,ebp
  42409a:	outs   dx,BYTE PTR ds:[esi]
  42409b:	or     BYTE PTR [eax+0x7d],0x52
  42409f:	ds pop ss
  4240a1:	sbb    esi,0x48
  4240a4:	jo     0x42402b
  4240a6:	out    dx,al
  4240a7:	enter  0x1d40,0x18
  4240ab:	fwait
  4240ac:	inc    ebx
  4240ad:	mov    esp,edx
  4240af:	and    ah,BYTE PTR [edi+0x46]
  4240b2:	mov    DWORD PTR [ebx],ebx
  4240b4:	fldz   
  4240b6:	jne    0x424078
  4240b8:	jne    0x424084
  4240ba:	xor    eax,0x15b640ce
  4240bf:	xor    ecx,edi
  4240c1:	inc    esi
  4240c2:	push   eax
  4240c3:	jle    0x4240f8
  4240c5:	sub    eax,DWORD PTR [edi-0x4e799e74]
  4240cb:	sub    DWORD PTR ss:[eax+0x58],esi
  4240cf:	sub    DWORD PTR [ebx+0x3c],eax
  4240d2:	pop    eax
  4240d3:	out    dx,eax
  4240d4:	xor    ah,ch
  4240d6:	sbb    BYTE PTR [ebp+0x3b],dh
  4240d9:	mov    ah,0x77
  4240db:	fld    DWORD PTR [edx-0x79]
  4240de:	push   eax
  4240df:	sbb    edi,ebx
  4240e1:	adc    BYTE PTR [eax+eax*8],0xb9
  4240e5:	rcl    DWORD PTR [ecx],0x27
  4240e8:	mov    WORD PTR [edi+0x34],?
  4240eb:	out    dx,eax
  4240ec:	sub    al,0xc0
  4240ee:	loopne 0x42416f
  4240f0:	and    ebp,DWORD PTR [ecx-0xa]
  4240f3:	cmp    eax,0xdba21f97
  4240f8:	pop    eax
  4240f9:	jo     0x424171
  4240fb:	xor    bh,BYTE PTR [eax]
  4240fd:	imul   ebx,DWORD PTR [edx],0xffffff9e
  424100:	into   
  424101:	or     BYTE PTR [ecx],bh
  424103:	int    0xf8
  424105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424106:	mov    edi,0xd44567a3
  42410b:	xor    eax,0xdaedf98d
  424110:	sbb    BYTE PTR [ebp-0x1677ee1d],ch
  424116:	mov    ds:0xf13f9c11,eax
  42411b:	fwait
  42411c:	cmp    al,0xcc
  42411e:	icebp  
  42411f:	mov    al,ds:0x515c096a
  424124:	fistp  WORD PTR [eax]
  424126:	adc    BYTE PTR [edi],dl
  424128:	inc    esp
  424129:	dec    ebp
  42412a:	or     al,0x76
  42412c:	fnop   
  42412e:	std    
  42412f:	sub    BYTE PTR ds:[ebp+0x3b],dl
  424133:	mov    edi,0x27ae0a76
  424138:	sti    
  424139:	cs in  eax,dx
  42413b:	xchg   edx,eax
  42413c:	je     0x4240e9
  42413e:	lea    ebp,[esi-0x7291618f]
  424144:	sbb    BYTE PTR [eax-0x7637a5e],bh
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a637
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a63f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a643
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429f4f
  4242e2:	mov    ecx,DWORD PTR ds:0x429f57
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a647
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429f3b
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	inc    ebx
  424455:	jns    0x4244bf
  424457:	and    BYTE PTR [edi+0x77],ah
  42445a:	ja     0x42449d
  42445c:	mov    esp,0x5864a42d
  424461:	dec    edi
  424462:	scas   al,BYTE PTR es:[edi]
  424463:	out    dx,eax
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
